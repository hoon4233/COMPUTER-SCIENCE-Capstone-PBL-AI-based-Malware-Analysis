fcomp
add
cmp
add
add
add
mov
jge
dec
fdiv
stos
push
aam
and
xlat
push
jae
mov
adc
add
pop
(bad)
addr16
jne
inc
das
or
daa
pusha
cmc
jl
xchg
mov
jge
cli
shl
inc
xor
cmc
pusha
(bad)
mov
jb
arpl
mov
pusha
stc
jns
mov
jmp
lahf
xor
push
pop
dec
and
push
into
and
imul
les
jo
mov
ja
hlt
in
adc
jno
inc
sbb
mov
fwait
push
adc
ja
xor
int
dec
fs
xor
fmul
or
fisubr
icebp
and
pop
dec
xor
jns
dec
lea
dec
xchg
out
(bad)
imul
dec
shr
jb
fwait
repnz
stos
mov
pop
div
pop
add
jmp
xor
add
ds
fst
dec
and
dec
call
or
lods
add
hlt
rcl
dec
gs
pop
jbe
ins
xor
sbb
repnz
cli
outs
lds
add
popa
lods
mov
xor
sbb
push
mov
mov
daa
std
xor
test
bound
das
mov
ins
xor
mov
cmp
add
js
pusha
or
inc
cmps
iret
push
adc
loop
(bad)
sbb
int
leave
sbb
and
out
mov
aas
jl
mov
(bad)
in
sbb
ins
and
and
xlat
push
(bad)
sub
xchg
popa
adc
xchg
push
imul
and
enter
int3
fmul
cmp
and
js
(bad)
test
aas
in
rcl
sub
dec
mov
and
imul
mov
pop
repz
and
xor
nop
xor
mov
xor
sbb
cmps
test
xor
push
and
jo
or
push
jle
xchg
dec
loop
lahf
jo
gs
sti
xor
adc
inc
push
inc
in
jmp
shr
xchg
push
push
add
or
in
add
add
add
divps
movs
ret
push
inc
(bad)
cli
outs
adc
int
pop
cmp
inc
and
es
mov
lahf
sar
cmp
xchg
sbb
push
inc
mov
mov
fisttp
stos
jmp
js
mov
sub
xchg
xchg
dec
jge
jge
fsubp
test
cmp
inc
call
push
adc
xchg
shrd
gs
xchg
xor
add
in
jge
pop
cmp
fstp
mov
mov
xchg
test
mul
cwde
xor
and
xchg
into
lods
jb
jecxz
outs
cli
imul
jo
push
fdivp
sbb
sub
xor
scas
icebp
bsr
push
call
dec
add
push
xlat
movs
xlat
inc
dec
mov
mov
out
adc
in
movs
sbb
mov
dec
aam
add
xlat
iret
and
ret
test
adc
lds
sbb
cli
add
push
sbb
sbb
(bad)
ins
(bad)
into
add
push
pop
jbe
mov
jno
mov
pop
aam
push
rol
sub
icebp
inc
or
cmp
jge
not
pop
add
ja
xchg
scas
inc
push
mov
sub
or
stos
imul
les
jmp
jne
cli
leave
jmp
dec
xchg
xlat
(bad)
fdiv
cli
xor
fbstp
pop
out
ins
push
int
bound
das
mov
mov
nop
(bad)
jg
retf
mov
cmp
or
xchg
jb
fisubr
push
sbb
lock
adc
and
push
mov
push
daa
xchg
outs
add
fnsave
pop
stc
jle
xlat
jp
xor
aas
data16
(bad)
mov
test
sahf
scas
cmp
push
enter
dec
sbb
jmp
push
mov
mov
adc
xchg
std
inc
ins
mov
fisttp
dec
jb
outs
jecxz
push
out
cmps
or
loope
jne
xchg
mov
cs
lods
(bad)
mov
test
xor
retf
cmp
cdq
je
jecxz
stos
int3
jo
je
test
lods
ret
cmps
add
push
ret
jg
jg
ss
xchg
test
jl
add
push
mov
push
inc
fdivr
xor
cld
inc
div
pusha
cmp
mov
mov
sub
xchg
cdq
es
inc
xor
ins
hlt
and
imul
shl
lods
push
rcl
adc
jmp
pop
cld
sbb
dec
leave
cmp
adc
sub
ds
cmp
mov
shl
and
rol
pop
and
in
shr
sbb
lahf
adc
xor
out
int3
sbb
sti
dec
inc
aad
les
add
push
fcomp
fsubr
outs
sbb
retf
out
dec
mov
xor
xor
es
push
sbb
repnz
push
xchg
xchg
push
cmps
ret
adc
cmp
(bad)
loopne
jbe
jnp
push
pop
nop
repnz
cmp
adc
add
(bad)
inc
push
sbb
out
aaa
js
and
movs
push
pop
jle
sbb
mov
xchg
cmp
seta
es
add
inc
pop
lods
fimul
mov
(bad)
in
ja
lods
sbb
fbld
dec
mov
movs
xchg
imul
mul
repz
jne
aas
arpl
or
enter
pop
(bad)
aaa
cwde
clc
mov
rcl
fiadd
in
mov
(bad)
stc
repz
retf
cmc
sbb
jecxz
cmp
daa
cmp
imul
mov
or
ror
retf
imul
inc
adc
adc
ss
test
out
inc
inc
push
stos
mov
movs
sbb
mov
icebp
mov
mov
cmp
push
hlt
aam
lea
or
into
mov
mov
js
add
ds
push
in
pop
pop
mov
pop
pushf
or
ins
ds
out
test
imul
push
shr
sub
in
addr16
test
dec
xchg
mov
mov
and
xchg
pop
sub
push
xchg
and
scas
mov
cmp
cmp
scas
adc
(bad)
(bad)
or
push
dec
pusha
sub
adc
mov
daa
sbb
nop
push
dec
dec
push
fst
in
sub
mov
pop
push
add
pcmpgtw
inc
jo
popf
div
cmc
int3
sbb
sbb
in
xchg
sbb
lods
scas
or
ds
fadd
stos
jmp
sub
and
push
mov
mov
ret
xchg
sar
loope
adc
aam
imul
ret
mov
mov
(bad)
and
in
add
loopne
jl
aad
cs
xchg
loope
call
(bad)
dec
cmp
mov
xchg
shl
movs
in
sbb
jae
pop
stos
(bad)
pop
sar
cli
ret
pusha
mov
mov
dec
cmc
sub
mov
scas
in
mov
cmp
mov
push
xchg
sub
xor
movs
dec
and
jp
xchg
pop
cwde
call
std
pop
jnp
adc
xchg
pop
xchg
rcr
dec
xchg
mov
mov
mov
std
test
hlt
enter
push
test
jne
sub
pop
popf
jns
nop
cwde
int3
sahf
addr16
ror
jbe
call
mov
(bad)
stc
in
cld
mov
pop
inc
js
ds
loop
and
sub
adc
xchg
pusha
call
je
not
ror
fisttp
push
lea
mov
imul
rcr
adc
sbb
add
dec
sub
dec
fs
rol
dec
cmp
icebp
inc
daa
rcr
retf
iret
dec
(bad)
rol
and
(bad)
cli
sbb
sbb
lods
std
push
pop
aaa
cmp
and
ret
ficom
push
int
mov
icebp
arpl
push
pop
hlt
repz
xlat
jge
lock
retf
add
jmp
or
rcl
pop
mov
mov
and
sar
jmp
mov
jge
or
push
dec
sub
xor
(bad)
nop
dec
bound
shl
ss
inc
dec
xchg
shl
pop
inc
out
mov
push
pop
setle
in
mov
shr
dec
xor
cmp
cs
pushf
repnz
in
dec
outs
pop
add
fnstenv
sub
add
outs
jecxz
dec
lea
call
(bad)
sar
adc
mov
fist
and
jb
call
icebp
iret
retf
mov
adc
icebp
jbe
mov
and
push
cmp
test
lods
ror
gs
lahf
stos
lods
sbb
ins
xchg
test
daa
sbb
dec
in
retf
mov
cs
(bad)
ins
cmovb
imul
push
inc
adc
inc
jl
sub
stos
ds
add
aam
lock
xor
outs
movs
lahf
push
push
push
clc
repnz
pop
and
addr16
mov
ja
add
ret
sar
shr
popa
mov
dec
mov
push
xlat
jmp
jl
fistp
bound
pop
mov
sahf
push
loopne
xlat
bound
ds
add
rcr
in
test
lods
push
repnz
sar
test
or
in
push
and
sar
or
jbe
into
cdq
mov
int
aaa
xchg
and
sub
sbb
push
dec
cmc
sbb
mov
inc
jg
jmp
in
bound
cmp
cmc
not
add
fsubrp
sub
hlt
mov
or
push
cmp
xchg
sub
inc
push
dec
in
add
and
fmul
mov
(bad)
int
shl
ja
ins
xchg
dec
jb
data16
outs
les
mov
mov
add
fwait
fwait
sbb
xchg
cmp
cmps
not
dec
dec
cmp
push
mov
hlt
mov
push
arpl
sti
add
pop
or
jl
int
daa
mov
rcr
or
stc
inc
lahf
mov
jbe
jns
call
xor
jg
iret
stos
in
stos
in
sub
es
jb
aad
push
mov
xchg
mov
inc
inc
mov
lds
jmp
out
outs
add
stos
ror
sar
shl
shl
adc
ret
call
adc
test
xchg
jp
or
jmp
dec
xchg
adc
cmp
xchg
inc
jae
pushf
(bad)
shl
scas
cli
(bad)
movs
lahf
test
cli
lods
adc
stc
jmp
inc
xor
cmp
add
outs
int3
dec
int
ss
mov
jbe
call
xor
lds
mov
sub
mov
repnz
and
or
cmpxchg
sub
pop
mov
cli
or
mov
jnp
add
retf
lahf
shl
arpl
jge
lods
and
movs
mov
xchg
out
stc
rcl
retf
jmp
in
xchg
aas
retf
fadd
mov
test
(bad)
outs
movs
lock
or
add
cmps
loope
mov
js
icebp
jb
lock
repnz
das
mov
add
or
mov
cmp
push
in
retf
sub
add
nop
lock
test
out
inc
int
les
push
add
cmp
jl
or
jns
(bad)
aam
cwde
ror
cmps
and
sbb
out
fmul
mov
loope
pop
jmp
movs
test
test
fmul
dec
je
je
push
push
xchg
jno
dec
or
pop
add
or
dec
repnz
stos
add
shl
sub
mov
(bad)
mov
pusha
ins
shr
fsubr
mov
mov
mov
mov
cwde
js
into
push
push
or
mov
(bad)
shl
fisub
imul
sbb
pop
mov
sahf
cmp
ins
lods
add
cmp
into
sti
nop
adc
and
test
leave
rcl
inc
arpl
das
mov
movs
retf
lds
jg
or
push
sbb
in
ins
jne
btr
pop
lock
ins
movs
mov
jns
out
push
and
mov
jb
js
cmp
xchg
rol
cmp
scas
xor
inc
jbe
in
mov
mov
mov
pop
dec
iret
jo
pop
adc
cmp
add
inc
push
push
pusha
(bad)
pop
int3
cmp
nop
sbb
retf
vmovd
sub
push
in
sbb
cmp
sub
lahf
adc
test
xor
pop
jle
jnp
sti
cmps
test
mul
mov
pop
sbb
add
push
adc
mov
jmp
leave
outs
arpl
out
loopne
sahf
push
adc
int3
fwait
xchg
pop
jg
pushf
cmp
call
sbb
xor
sub
adc
cmps
aaa
pop
enter
sbb
arpl
cmp
dec
push
mov
sar
cwde
pushf
fs
ret
(bad)
loope
cli
xor
push
imul
or
jbe
fist
mov
ja
pop
aaa
cmp
pop
test
push
xor
sub
(bad)
mov
ins
(bad)
loop
shl
int3
adc
push
psubd
fld
sub
mov
dec
nop
int3
in
(bad)
arpl
ror
xor
cld
push
cwde
sub
mov
xor
dec
jmp
jp
fld
pop
out
adc
adc
mov
pop
mov
dec
xor
cli
pop
pop
ins
cs
daa
scas
pop
mov
dec
xor
(bad)
xor
arpl
xor
dec
mov
mov
sub
adc
add
cmp
push
loop
push
pushf
std
inc
rcr
or
sub
out
(bad)
aad
push
mov
ds
dec
loopne
fisubr
pop
mov
xchg
pop
xchg
test
sub
mov
sbb
enter
dec
push
dec
cmps
xchg
pop
ins
pop
push
mov
ror
fld
call
retf
loopne
mov
cmp
cs
cmp
lods
cmovne
inc
jl
add
daa
xor
jp
xor
rcr
stos
add
mov
mov
sbb
pop
mov
mov
outs
fwait
gs
pop
out
loop
xchg
fs
cld
mov
cmp
inc
mov
sub
int3
xlat
nop
out
into
in
jg
imul
fstp
bound
ud0
adc
add
push
and
test
add
adc
lock
mov
scas
test
inc
(bad)
aad
inc
imul
or
daa
xchg
aad
cdq
nop
xor
sbb
xor
aas
repnz
(bad)
push
test
mov
ds
adc
stos
icebp
test
(bad)
push
adc
bound
out
sbb
add
fsub
repnz
mov
push
popa
xchg
inc
scas
inc
ret
popf
xchg
lock
movs
sub
push
sbb
xchg
mov
mov
mov
pushf
lods
adc
pusha
inc
jmp
mov
sub
adc
inc
dec
dec
dec
repnz
xchg
xchg
mov
push
pushf
mov
out
sbb
adc
jl
das
xchg
mov
jle
mov
cdq
pushf
ja
data16
cmp
je
int3
pop
inc
aad
sub
mov
jp
pop
jmp
cdq
sub
rcr
mov
adc
int
mov
repnz
sub
dec
adc
pop
adc
sub
int
out
gs
mov
bound
movs
jne
addr16
pop
xor
jmp
js
clc
sbb
jmp
pop
cmp
sti
mov
enter
xor
mul
fs
movs
jmp
jl
mov
cmp
clc
pushf
repz
xchg
rcl
pop
ins
push
mov
xor
ret
mov
shl
js
push
iret
aad
push
in
scas
adc
dec
aaa
ja
fs
mov
inc
push
dec
mov
(bad)
rcr
sub
mov
and
(bad)
jge
jae
mov
loop
dec
mov
jp
ins
xor
(bad)
cmp
and
adc
pop
inc
sti
aad
mov
cpuid
add
repz
pop
cdq
xlat
jne
or
add
dec
adc
(bad)
addr16
mov
pop
push
add
adc
sub
mov
test
mov
xchg
movs
out
sbb
rcr
adc
cmp
mov
or
add
cld
vmread
inc
scas
xchg
aaa
mov
pop
pop
fs
fadd
xchg
out
in
pop
faddp
jnp
outs
pop
adc
mov
ja
neg
sbb
fcomp
(bad)
jecxz
pop
cmp
aaa
shl
mov
jmp
cmp
stos
jnp
movs
daa
cli
(bad)
hlt
and
clc
xor
cwde
retf
(bad)
xor
test
gs
cmp
outs
mov
add
or
sbb
or
and
mov
xchg
adc
mov
lods
pusha
sti
or
fcom
xor
and
ror
sub
outs
ins
xor
push
add
movs
mov
shl
fdiv
mov
aad
and
fwait
ds
mov
bound
mov
mov
jl
or
xchg
addr16
(bad)
pop
je
or
dec
mov
pop
icebp
push
mov
sub
frstor
or
(bad)
iret
dec
int
es
mov
sbb
jae
xchg
out
mov
add
scas
mov
sub
adc
jno
ss
scas
jl
mov
sub
push
mov
stos
cmp
inc
pop
jg
cmp
lahf
out
stos
adc
push
hlt
bound
sub
jmp
sub
jns
inc
aas
sub
mov
jecxz
repnz
fwait
ja
fistp
aam
in
sbb
shl
add
adc
sub
jmp
mov
jb
mov
sar
jmp
aam
push
test
xchg
inc
test
stc
mov
arpl
loope
add
inc
in
daa
gs
mov
scas
inc
sub
mov
dec
repz
lds
pop
sbb
or
inc
inc
cmp
mov
call
dec
(bad)
cmp
jmp
fs
ja
sbb
sub
mov
movs
sti
out
sub
out
xchg
ret
jns
jmp
ins
and
int
jg
aas
mov
aas
(bad)
loopne
jmp
rcl
pop
outs
xor
scas
jecxz
pop
sbb
xchg
fild
or
inc
inc
aad
sub
movs
ret
sbb
sbb
dec
sar
pop
mov
push
mov
dec
mov
gs
pop
sbb
and
sub
or
sub
mov
inc
sub
std
push
push
pusha
jae
push
xor
or
and
mov
xchg
aam
jmp
aas
scas
sbb
inc
pop
xchg
shld
cli
pop
dec
mov
and
or
imul
cs
push
fucomip
inc
(bad)
in
fsubr
sbb
outs
cmp
ror
add
cmp
push
int3
(bad)
jno
imul
ror
mov
and
jns
stos
jle
pop
push
(bad)
iret
jne
jecxz
pusha
repnz
push
jge
push
and
jp
dec
sub
mov
sbb
sbb
stos
test
(bad)
sbb
fs
lahf
ss
or
pushf
mov
mov
test
sbb
sub
hlt
retf
sub
sub
push
pop
ins
jl
cwde
sbb
inc
movs
clc
ins
daa
das
mov
or
and
pop
mov
and
push
in
lods
icebp
mov
into
retf
addr16
inc
or
dec
call
push
push
dec
sbb
aad
rcr
repnz
add
into
mov
jmp
push
aad
cmps
shl
stc
push
xor
arpl
push
xchg
mov
push
(bad)
cmps
aad
adc
icebp
sbb
outs
and
movs
cmc
enter
xor
cmp
or
call
mov
add
dec
out
or
sbb
or
xchg
dec
int
add
fild
bound
nop
adc
pop
sti
outs
in
call
repnz
int
pop
mov
icebp
dec
mov
mov
aam
int3
cld
add
imul
xor
jmp
movs
ja
fisubr
jge
gs
pop
shr
sbb
pop
test
into
dec
sub
mul
pop
aad
inc
inc
sbb
push
adc
ins
movs
push
aam
bound
xor
xchg
sub
mov
sub
add
call
inc
push
sbb
mov
imul
paddsw
inc
imul
cwde
sub
stc
mov
mov
cmp
and
push
add
(bad)
shl
xor
xchg
jmp
mov
cmp
imul
push
xor
test
sbb
rcr
mov
popa
sub
add
pushf
test
xor
or
data16
ins
rol
adc
xor
jg
sub
pop
(bad)
mov
cmps
or
call
(bad)
sbb
ret
pop
(bad)
outs
push
ror
data16
xchg
sub
fidivr
mov
test
(bad)
and
stc
xor
pop
movs
cmps
inc
xlat
fcom
mov
inc
xchg
mul
push
or
out
jb
test
push
adc
(bad)
mov
ins
ins
in
scas
ss
cs
dec
shl
push
outs
mov
mov
cmp
aas
test
mov
mov
inc
dec
sub
data16
xlat
(bad)
mov
loopne
xor
cmp
xchg
jno
retf
push
inc
jb
xor
mov
sahf
mov
xchg
pusha
cmp
mov
call
sub
dec
ins
push
test
mov
pop
and
add
ja
or
cmp
sub
mov
(bad)
aam
pop
add
pop
cmp
pop
outs
loop
push
and
lods
add
jg
sbb
cld
xlat
shl
inc
jae
sub
jmp
shr
imul
jb
ins
pop
inc
mov
popf
arpl
daa
out
dec
adc
adc
mov
inc
je
mov
sbb
in
imul
repz
fcom
mov
jnp
jge
adc
and
std
jge
adc
xor
push
cmp
(bad)
out
mov
ret
repnz
lods
adc
dec
pop
xor
add
fbstp
in
(bad)
mov
pop
ret
pop
les
dec
in
xor
aas
and
add
std
or
dec
ret
jp
jecxz
sub
xchg
ja
cmp
aam
loop
mov
or
mov
stos
mov
stos
in
and
jp
cs
or
daa
stos
jo
ds
ror
das
sub
idiv
fild
mov
add
push
daa
icebp
or
xor
mov
or
in
(bad)
es
pop
xor
stc
add
int3
pop
setl
(bad)
mov
add
xor
test
leave
adc
lahf
pop
and
fld
jmp
mov
pop
push
add
push
ds
or
sbb
hlt
cld
cmps
and
fcomp
and
inc
or
xchg
xor
bound
jg
(bad)
loop
push
mov
gs
movs
add
mov
sbb
inc
fwait
out
pop
push
mov
xlat
sub
jo
push
xor
enter
dec
retf
pop
mov
ret
test
into
ror
adc
pop
aam
mov
leave
mov
ret
push
clc
mov
ja
loopne
and
mov
(bad)
shl
push
dec
pop
ds
jne
cmps
out
repnz
out
inc
fwait
call
mov
add
in
jo
xchg
daa
daa
cmps
es
and
(bad)
popa
dec
enter
cmp
div
dec
push
xchg
inc
jp
xlat
repnz
pop
shl
adc
cmp
adc
aas
add
xor
jae
adc
daa
movs
pop
jo
pop
jns
xor
adc
jp
(bad)
push
sub
mov
int
cmp
lea
sbb
pop
pop
outs
leave
push
xchg
fidiv
push
repz
jecxz
or
stos
jae
aam
adc
push
mov
sbb
xor
nop
sbb
fcmove
movs
pushf
push
imul
and
shr
pop
mov
loope
scas
fs
movups
push
or
mov
stos
mov
pop
cli
adc
retf
imul
imul
dec
fmul
inc
fistp
rcl
fsub
ficomp
outs
jns
inc
jbe
mov
or
inc
jnp
nop
shl
(bad)
inc
in
icebp
(bad)
push
mov
out
xchg
inc
mov
lods
push
push
mul
mov
cmps
cmp
inc
jbe
loope
test
cmp
fstp
dec
sbb
add
mov
leave
in
or
(bad)
sahf
xchg
vandnpd
in
sbb
js
mov
loopne
pop
cli
aaa
inc
xchg
or
xchg
inc
mov
add
mov
adc
mov
push
adc
mov
xchg
call
rcl
dec
popa
xchg
ror
push
xor
inc
rcr
int3
push
xor
push
sub
xchg
cld
sbb
pop
pop
push
xchg
cmc
adc
aaa
in
stos
in
ds
sahf
mov
sub
add
aam
(bad)
lock
or
test
mov
inc
(bad)
mov
test
and
cld
sahf
dec
or
jmp
mov
test
out
add
aad
arpl
in
push
vphaddwd
push
cs
aam
outs
xor
adc
shl
(bad)
(bad)
out
lahf
out
add
dec
dec
je
out
fwait
cwde
test
cli
sbb
rcr
ds
push
mov
mov
dec
bound
pop
mov
not
loopne
shr
clc
xchg
cs
ja
xchg
fistp
mov
hlt
push
fdivr
or
not
outs
inc
pushf
dec
pop
out
cs
inc
in
push
push
and
test
cmps
jp
or
ror
mov
mov
cmp
movs
or
mov
(bad)
sbb
cmc
xchg
icebp
(bad)
(bad)
push
(bad)
jg
mov
mov
cmp
shl
add
(bad)
leave
sbb
movs
les
imul
inc
and
out
push
nop
imul
adc
int3
inc
pop
or
sbb
outs
ins
repz
lea
adc
in
retf
xchg
test
(bad)
inc
add
xchg
sbb
inc
fnstenv
addr16
xchg
enter
sahf
jge
retf
leave
xor
loop
lahf
push
sti
stos
adc
push
inc
and
jnp
imul
ins
pop
popf
shr
je
lock
outs
iret
lock
pop
add
call
sub
xor
shr
adc
cmps
mov
stos
aas
in
add
es
push
adc
pop
es
cmps
push
push
fisttp
stos
mov
mov
(bad)
lahf
mov
lock
adc
or
cmps
mov
adc
outs
cdq
jg
sub
jmp
mov
mov
stos
lods
mov
fbstp
outs
je
in
leave
sub
dec
enter
and
or
inc
dec
sbb
jmp
fnstsw
mov
arpl
pushf
cdq
bts
or
cmp
jg
xchg
lea
je
cld
xchg
js
push
dec
push
jmp
mov
dec
call
push
jno
or
in
xchg
lock
test
add
fiadd
xchg
mov
mov
xchg
add
push
js
lea
jbe
ficom
add
setb
pop
repnz
pop
test
sbb
cmc
jg
stos
ret
dec
pop
mov
call
xchg
inc
mov
ret
mov
jle
mov
fistp
cld
les
fld
(bad)
outs
pop
cmp
sti
add
pop
jp
dec
sbb
stc
retf
jge
ja
int3
imul
lods
sub
fs
ds
and
(bad)
mov
pop
adc
gs
or
test
nop
jmp
or
lods
jmp
arpl
cmp
inc
xchg
dec
and
fcom
das
xlat
sbb
sub
scas
xlat
adc
jbe
retf
cmp
stos
adc
scas
sbb
pop
or
mov
adc
sub
test
(bad)
enter
mov
jne
add
ret
add
lahf
loop
xchg
mov
in
push
scas
sub
and
inc
mov
icebp
ins
out
jmp
loope
mov
dec
push
xor
repnz
sahf
call
mov
addr16
fisttp
or
mov
int3
fcom
adc
enter
mov
xor
mov
icebp
add
lods
iret
ret
sbb
daa
or
xor
adc
movs
xor
and
(bad)
jo
push
hlt
inc
inc
push
mov
aam
dec
test
cmp
stc
and
fisttp
in
sub
lds
mov
add
mov
mov
inc
xor
fistp
les
xor
cmp
lods
out
xor
push
sar
ror
cmp
push
repnz
inc
rcl
mov
mov
xor
xchg
data16
add
xor
(bad)
(bad)
cld
ins
mov
add
fdiv
lods
pop
pop
dec
cmp
dec
retf
cmp
xchg
dec
int3
or
jbe
popa
push
jmp
test
xor
(bad)
jge
int3
or
mov
in
movs
dec
sahf
or
in
imul
imul
rol
and
(bad)
repnz
lock
sub
dec
shl
movs
lds
cmp
xor
dec
and
jb
mov
sbb
fdivr
sbb
not
sub
push
repz
dec
jns
retf
pop
enter
fisttp
jecxz
lods
push
nop
sbb
push
imul
mov
js
loop
cs
aas
mov
xor
pop
mov
jmp
xor
pop
mov
call
mov
arpl
xlat
aam
sbb
sbb
shl
add
mov
loope
push
cmp
movs
xchg
leave
or
add
pop
in
lods
lock
inc
jl
retf
dec
push
int
outs
push
into
xchg
mov
int3
pop
cmp
push
cmc
push
sti
mov
mov
popa
aaa
adc
das
add
push
dec
xor
jmp
mov
fwait
enter
test
repz
xchg
je
fisttp
test
add
adc
mov
in
add
int3
movs
test
fidivr
icebp
sbb
jmp
inc
mov
push
push
call
repz
cmp
jo
cmps
and
and
repz
xor
dec
arpl
or
inc
outs
xor
mov
icebp
push
shl
mov
add
cmp
dec
stc
push
stc
das
mov
nop
test
and
aam
lahf
cli
pop
mov
inc
test
(bad)
mov
mov
xlat
xor
ror
std
push
clc
xor
cmc
pop
add
sub
mov
jg
jmp
mov
ins
mov
sub
push
adc
push
mov
dec
and
loop
sub
in
xchg
bndstx
lods
out
enter
(bad)
lods
call
or
call
and
in
test
mov
fistp
fisttp
mov
push
jne
jae
xlat
sbb
pusha
jb
inc
or
add
pmaxsw
and
add
jmp
mov
into
cwde
loopne
xchg
add
cli
repz
or
xchg
aaa
adc
ja
mov
stos
dec
(bad)
lahf
xchg
mov
mov
xchg
jo
nop
push
daa
sub
or
sahf
inc
sbb
scas
fadd
mov
mov
add
movs
xor
std
hlt
in
inc
jmp
dec
mov
inc
test
add
lahf
adc
ss
adc
bound
in
out
pushf
stos
in
jae
mov
jns
xor
jo
push
jecxz
mov
imul
xchg
mov
jnp
pop
loopne
mov
test
cs
sbb
std
or
dec
dec
mov
sub
retf
mov
faddp
and
mov
fcmovnb
sub
pop
cli
add
push
pop
inc
xchg
pop
arpl
lds
sahf
out
ret
and
pusha
(bad)
imul
test
push
xor
xlat
aam
dec
ins
and
cdq
xchg
jbe
push
dec
in
jge
sbb
mov
or
out
cmp
jo
cmps
mov
push
sbb
gs
iret
xor
push
cmp
mov
mov
scas
or
jns
jmp
mov
sbb
or
adc
mov
rep
arpl
and
add
add
jmp
jl
test
add
fistp
xor
xchg
sbb
das
sub
mov
lods
call
mov
or
lods
mov
xchg
jmp
add
or
test
dec
or
sub
mov
push
pop
mov
mov
ja
jl
cmp
mov
hlt
xchg
dec
sub
fldcw
pop
dec
pop
cmc
imul
popf
fcmovb
dec
pop
xchg
fld
push
mov
inc
lods
ror
inc
fs
xchg
or
into
sahf
push
jg
das
test
cmp
jae
sub
mov
lock
fbld
xchg
outs
in
xchg
(bad)
xor
daa
in
mov
rcr
xor
cmps
imul
in
into
push
push
cli
inc
or
jl
inc
mov
pop
or
xchg
leave
ins
cmps
cwde
test
inc
jne
sbb
es
lds
mov
enter
inc
inc
push
pop
lahf
xchg
add
pushf
dec
leave
inc
lods
jns
xchg
push
or
adc
xchg
inc
mov
iret
add
sbb
cmps
(bad)
mov
rcr
xlat
cs
lea
dec
(bad)
adc
xchg
jnp
fadd
enter
sbb
inc
(bad)
out
ds
push
and
fs
(bad)
fadd
sub
shr
mov
add
cmp
push
cli
mul
xchg
rol
dec
pushf
push
ror
cld
or
ret
push
sahf
push
into
mov
push
inc
(bad)
out
push
test
xchg
mov
fcomp
retf
xchg
inc
or
xor
push
rol
push
jle
loop
jns
inc
es
jmp
jo
fmul
mov
movs
and
sub
adc
imul
stos
imul
and
imul
xchg
mov
aam
ficomp
sbb
ret
aas
adc
push
sbb
fsubp
add
adc
imul
pop
cmp
push
rcr
retf
lahf
or
daa
out
pop
aam
mov
mov
scas
test
mov
xchg
div
jg
and
in
movs
sbb
xor
bound
push
push
int
push
out
retf
xlat
dec
adc
js
lods
dec
inc
pop
dec
ffree
mov
jb
mov
push
mov
cmc
lahf
jnp
mov
movs
dec
mov
mov
push
(bad)
sub
xor
inc
call
int3
gs
xchg
cld
sub
and
aas
loop
dec
xchg
repz
popa
mov
mov
in
jmp
or
movs
movs
mov
ins
test
repnz
cmp
pop
rcr
(bad)
aas
cmp
outs
pop
sbb
fist
jg
int
loopne
call
and
push
inc
pop
out
and
mov
push
test
bound
stos
out
lahf
mov
test
cmc
loopne
inc
push
clc
mov
ja
cwde
es
jnp
pop
iret
iret
mov
gs
loop
mov
inc
mov
shr
jae
inc
pop
scas
mov
aam
jmp
ja
es
inc
into
pop
ja
call
xor
pop
fnsave
push
enter
cdq
cmp
fwait
jecxz
mov
test
rol
push
mov
cmp
aaa
add
cmp
data16
nop
test
pop
xchg
scas
xchg
test
iret
push
sub
and
dec
mov
pushf
popa
sbb
and
jmp
dec
lods
jp
push
sub
jo
jb
xchg
(bad)
xchg
lods
es
test
test
inc
fs
mov
cmp
xchg
scas
xchg
in
jmp
fadd
mov
dec
mov
mov
jle
push
and
aad
sbb
mov
mov
in
mov
in
das
fwait
jo
call
bound
pop
fimul
(bad)
adc
adc
test
rol
shl
push
in
sbb
sti
mov
fdivr
iret
and
fwait
inc
jb
jbe
xchg
in
arpl
cmp
xchg
pusha
lahf
fst
repnz
in
pop
mov
mov
test
test
pop
dec
sub
xchg
inc
fsub
or
inc
pop
call
rcl
or
ret
fidivr
inc
xchg
dec
aaa
sub
push
lea
xchg
fs
xor
jbe
jne
mov
out
jae
ss
(bad)
call
mov
data16
mov
xchg
jne
jp
lods
adc
fiadd
stos
arpl
mov
imul
mov
fisub
xchg
into
pmulhuw
aaa
loop
and
xchg
rcr
test
ss
mov
ficomp
loopne
out
es
ror
adc
mov
dec
mov
fnstenv
(bad)
arpl
jge
or
idiv
push
xchg
xor
(bad)
popf
jl
pop
dec
fstp
push
rcr
cmp
loop
pop
stos
movs
je
loope
cmc
cld
bound
fisubr
cmc
and
(bad)
repz
lock
cld
push
xchg
aad
or
sahf
jno
xchg
jnp
pop
mov
xchg
jecxz
out
add
stos
mov
(bad)
mov
(bad)
ficomp
lods
pop
leave
jb
enter
fsubr
mov
enter
inc
sbb
retf
outs
lock
daa
cmp
data16
mov
lods
and
in
fld
jge
adc
sbb
push
adc
mov
add
mov
je
sbb
std
int3
jae
and
push
xchg
stc
(bad)
ret
mov
int3
jbe
loop
rcl
out
xchg
inc
or
popf
(bad)
mov
cdq
pop
shl
jbe
data16
daa
xor
(bad)
sub
jns
xchg
xor
inc
or
dec
shr
(bad)
dec
mov
pop
or
or
push
into
mov
cli
jnp
out
outs
movmskps
out
lods
push
and
push
test
jg
test
xor
mov
mov
cmp
gs
push
jle
rcr
adc
stos
mov
dec
lea
mov
inc
mov
int3
addr16
lahf
test
nop
xchg
loopne
pop
cmp
mov
movs
call
add
je
jmp
sbb
xchg
and
fdivr
mov
cmp
fisubr
sti
call
push
dec
shl
mov
(bad)
loope
mov
loop
(bad)
push
sub
cmp
shl
jo
je
in
jbe
in
mov
aaa
(bad)
outs
xchg
imul
mov
jp
pop
loopne
(bad)
add
clc
mov
das
mov
cld
inc
iret
lds
imul
xor
dec
rcr
mov
into
mov
or
inc
rcr
(bad)
(bad)
push
and
lods
icebp
or
retf
or
push
(bad)
call
xor
dec
inc
imul
jnp
dec
jb
jl
rcr
cmp
sahf
ss
add
bound
mov
in
xchg
les
loop
jmp
add
fsub
iret
js
sbb
mov
lock
push
(bad)
fsubr
cmp
sub
mov
fisttp
inc
imul
pop
out
mov
pop
jmp
fst
daa
outs
fisubr
mov
mov
ds
fld
sti
push
into
gs
stos
dec
cmp
outs
clc
stos
push
std
or
push
sbb
mov
inc
sahf
xor
test
push
push
(bad)
daa
(bad)
inc
pop
mov
jae
xchg
iret
and
jmp
pop
aad
jecxz
add
jg
jnp
call
xor
sub
mov
into
in
out
xchg
jo
xchg
in
jl
stc
arpl
sub
fbstp
inc
test
hlt
inc
dec
jbe
push
sub
dec
jae
call
stos
jmp
inc
jmp
std
call
(bad)
inc
ret
lods
lods
pop
sbb
movs
retf
add
xor
lahf
stc
in
test
rol
mov
and
push
and
adc
cwde
cld
aad
or
mov
and
lods
and
mov
mov
mov
cmp
stc
aad
jp
int
test
aam
or
sbb
je
popf
mov
clc
mov
adc
push
cdq
(bad)
(bad)
mov
inc
push
loopne
cwde
pop
fnstcw
push
ja
lea
pop
inc
jecxz
loop
push
push
aas
pop
add
mov
push
scas
hlt
(bad)
dec
cmp
pop
ret
cmp
repz
mov
mov
je
je
jecxz
add
inc
mov
ins
aam
jno
add
jbe
mov
push
or
lds
scas
int
push
repnz
sbb
fdiv
sbb
jns
pop
pop
in
repnz
neg
dec
popf
inc
lock
ret
push
push
inc
cmp
fst
mov
mov
dec
loopne
push
lock
push
jmp
push
test
imul
push
and
push
movs
shr
sbb
push
sbb
not
pop
sub
shl
adc
pop
mov
jo
and
or
loop
div
out
loope
sbb
jno
cmp
push
xlat
fistp
mov
xchg
lock
mov
fistp
loop
loopne
mov
or
and
add
test
pop
push
call
jns
sar
push
loopne
push
mov
inc
dec
js
in
leave
(bad)
outs
lea
mov
fucomip
xchg
mov
fimul
and
cdq
aas
pop
or
xor
aam
push
cmc
push
mov
xchg
stos
(bad)
mov
cmps
or
or
sbb
test
adc
mov
sbb
sub
aam
not
adc
mov
daa
add
add
adc
aad
into
cmps
mov
cmp
(bad)
jns
xchg
test
std
sub
repnz
out
nop
test
adc
mov
mov
xor
mov
out
leave
dec
inc
jmp
inc
pop
push
mov
add
gs
sub
gs
ins
sbb
jg
push
neg
daa
mov
clc
ds
jae
adc
aad
(bad)
xor
test
dec
loop
or
fdivr
scas
mov
or
inc
dec
aaa
sbb
jmp
ror
idiv
jg
dec
repnz
push
mov
fcmovne
pop
int3
adc
cld
ficom
sbb
aad
lods
mov
daa
cmovbe
fdivr
lea
shr
pop
pop
xchg
jbe
movs
xor
xchg
out
adc
aaa
add
(bad)
mov
ins
repnz
add
inc
add
push
xor
fild
and
lods
ret
ret
or
jle
repnz
stos
pop
fdiv
fsubr
push
sub
out
data16
push
add
inc
or
adc
movs
or
ds
dec
test
lahf
retf
pop
dec
sahf
inc
adc
xchg
push
addr16
call
fistp
dec
mov
push
sub
add
xchg
pop
sbb
iret
rol
neg
sbb
ss
push
lds
inc
and
add
lods
adc
icebp
cmp
ficomp
mov
in
inc
mov
fstp
es
push
push
adc
inc
jns
int
adc
ror
(bad)
xor
jno
and
push
and
dec
outs
pop
dec
push
dec
movs
test
(bad)
lock
mov
test
inc
xor
sahf
sbb
das
add
int3
xchg
push
pop
stos
or
add
aam
fimul
fldcw
dec
pop
xor
and
jecxz
pusha
cmps
ror
cmps
add
shl
sbb
lods
cli
cmp
add
xor
mov
iret
adc
sbb
mov
sub
mov
dec
sub
shl
mov
and
shl
mov
add
pusha
jg
call
jp
sti
leave
fsubr
mov
mov
cmp
cli
imul
mov
and
mov
scas
pop
test
(bad)
mov
push
push
xchg
jno
adc
test
scas
cmp
mov
add
fisttp
aam
icebp
adc
mov
jg
inc
xor
fucomip
or
sbb
pop
lea
mov
jo
add
aas
movs
cmp
jl
add
dec
daa
jne
shl
jl
movs
call
lods
and
mov
mov
repnz
mov
repnz
not
mov
loopne
mov
(bad)
shr
inc
jae
inc
stos
lods
pop
in
xor
mov
jnp
mov
jno
test
pusha
and
in
sbb
icebp
dec
sub
push
adc
mov
stos
out
rcl
cmc
and
test
add
pop
push
aad
xchg
cdq
(bad)
push
sub
add
cmp
xchg
scas
jb
hlt
jo
push
push
and
shl
mov
mov
(bad)
jmp
xor
into
test
adc
bound
out
dec
sub
pop
bound
(bad)
dec
movs
lahf
xor
(bad)
js
out
fcomp
fistp
adc
pop
daa
fsub
mov
rol
push
or
pop
mov
pop
or
out
adc
idiv
in
or
in
dec
xor
cmp
(bad)
adc
pop
inc
dec
xchg
out
out
test
mov
cmc
mov
jns
cmc
dec
jg
lahf
adc
je
fistp
xor
ds
and
mov
add
sbb
mov
add
inc
into
xor
and
lock
dec
int
pop
jne
inc
dec
(bad)
pop
loopne
(bad)
or
lds
sbb
push
jb
mov
mov
retf
lea
sub
xor
xchg
hlt
adc
push
add
jb
(bad)
and
xchg
adc
xchg
ret
int3
xlat
mov
sahf
pop
mov
pop
cmp
and
fcomp
jmp
and
xor
dec
lahf
and
mov
mov
push
push
sub
sbb
sub
push
mov
dec
stc
dec
pusha
inc
rol
jp
pop
xchg
cwde
pop
ret
mov
sbb
adc
adc
stos
cmp
mov
out
jne
mov
mov
or
mov
xchg
ins
test
scas
repnz
adc
fmul
mov
shr
arpl
inc
shr
popa
fcmovnu
sub
adc
adc
and
sbb
cli
inc
iret
adc
jne
mov
ds
movs
cmp
dec
ret
nop
inc
ss
in
mov
iret
or
jl
dec
push
xor
inc
dec
adc
push
or
pop
adc
dec
xor
pop
shl
mov
call
xor
(bad)
psllq
mov
jns
or
fldcw
aam
dec
arpl
movs
outs
sbb
(bad)
xor
cmp
add
es
jecxz
(bad)
sbb
cmc
jecxz
mov
pop
icebp
push
retf
aaa
pop
in
mov
add
add
push
rcr
out
dec
out
pop
daa
ror
call
outs
xchg
adc
mov
add
lods
or
xlat
sub
fld
mov
and
mov
int3
pop
retf
jl
push
ss
mov
or
adc
cmp
in
sub
loope
sbb
retf
sub
rol
jne
sar
xor
sub
xor
in
mov
push
in
dec
and
iret
in
add
xor
fstp
les
call
retf
xor
ins
adc
in
inc
jmp
inc
(bad)
ins
fisubr
cmp
jno
inc
fisttp
xchg
jmp
add
jge
lods
inc
in
jno
cmp
popa
fld
mov
test
in
in
ss
movs
mov
fdivr
(bad)
and
sub
lock
js
ins
mov
or
jmp
xlat
pushf
adc
test
imul
sub
xor
je
mov
dec
gs
xchg
mov
xchg
das
push
dec
sar
or
xor
push
scas
inc
(bad)
pop
add
out
mov
mov
loope
push
sbb
xor
or
push
jp
cmp
in
add
xchg
enter
mov
(bad)
aaa
lock
dec
mov
mov
xchg
ret
stc
mov
or
scas
out
fcmovnbe
adc
mov
adc
cld
neg
neg
mov
dec
leave
outs
pop
pop
mov
mov
rol
out
mov
pop
lea
or
cwde
mov
mov
jns
xchg
and
movs
jle
mov
mov
ins
out
dec
jae
jb
iret
pop
pop
aam
gs
mov
in
fwait
or
mov
add
xchg
pop
mov
or
pop
pop
(bad)
loopne
jecxz
jne
inc
imul
and
cmp
(bad)
jns
adc
mov
cmps
imul
rol
xor
or
push
scas
lods
retf
mov
loope
mov
arpl
(bad)
popa
mov
call
mov
and
(bad)
cli
out
sub
daa
sahf
call
push
jo
jae
in
imul
push
pop
scas
mov
test
das
retf
mov
lea
popf
or
sbb
or
gs
cmp
add
test
mov
mov
xchg
sub
mov
adc
inc
popa
jle
xchg
and
int
shl
xor
(bad)
cs
pop
dec
scas
std
inc
int3
aaa
cmp
and
out
dec
out
sbb
sahf
cmc
inc
add
retf
nop
fdivr
mov
mov
rcl
sbb
outs
sbb
xchg
xchg
rcr
mov
stos
cdq
jmp
cmp
sbb
sbb
mov
out
stos
or
dec
sub
push
and
xor
popa
jnp
inc
gs
jp
cmp
push
fidiv
cwde
add
xchg
sar
(bad)
in
cmp
jae
call
mov
mov
pop
ret
inc
stos
xor
(bad)
and
push
pop
xor
dec
out
frstor
add
jmp
pop
pop
sbb
pop
or
test
lea
dec
out
sbb
push
popa
dec
ja
inc
mov
cs
pop
movs
jne
sub
jnp
sub
adc
scas
pop
sub
push
xor
push
add
mov
mov
adc
ret
mov
pop
outs
dec
mov
cmc
and
xlat
and
add
jecxz
dec
inc
scas
fidiv
out
aaa
mov
fsubr
icebp
lods
out
je
mov
pop
push
lods
inc
adc
fimul
mov
repnz
daa
mov
cmps
mov
fcmovnb
xchg
loop
xchg
mov
fsubp
sti
push
cmp
shl
mov
cmp
aas
sbb
mov
test
pop
addr16
xchg
mov
aas
mov
jne
jbe
dec
fist
popa
push
inc
or
mov
dec
and
out
mov
add
dec
rcr
pushf
out
sub
(bad)
ins
les
shr
push
cmp
(bad)
jb
jp
dec
mov
or
adc
pushf
inc
shl
cwde
mov
dec
and
adc
call
mov
inc
pusha
jp
jg
icebp
test
push
test
fdiv
jle
std
jl
aad
repnz
inc
ja
hlt
es
in
xchg
ja
ins
aas
lds
data16
push
xor
dec
mov
aad
and
cdq
adc
(bad)
jecxz
outs
fwait
jo
lds
sub
inc
test
adc
sar
lea
inc
sub
dec
adc
rcl
xchg
adc
sbb
mov
imul
dec
mov
pop
loop
fsub
sub
cs
jg
pop
cld
gs
push
push
inc
movs
int3
jmp
pushf
adc
sbb
int3
(bad)
stc
sub
fcmovbe
retf
lahf
adc
jecxz
xchg
inc
or
cdq
sbb
add
into
mov
pop
leave
xchg
sub
popa
sbb
das
jns
dec
in
push
cmp
jmp
dec
lea
pop
cmp
and
cmp
adc
outs
push
xchg
hlt
mov
leave
add
outs
dec
repnz
adc
mov
(bad)
rol
mov
cmp
mov
push
ror
xchg
or
das
lahf
je
ss
lods
fwait
add
cmc
movs
pop
lea
in
xlat
cmp
cmp
sbb
add
cmp
adc
mov
xchg
xchg
push
adc
xchg
sbb
sub
inc
inc
push
scas
scas
adc
out
add
xor
sub
iret
pop
popa
lea
iret
cld
inc
repz
js
add
sbb
xor
inc
mov
fs
into
ror
pop
test
sub
and
into
cwde
pop
movs
js
stc
add
aaa
mov
ficomp
icebp
sbb
xchg
(bad)
lock
daa
cdq
sub
aaa
cdq
push
dec
ins
call
mov
mov
adc
sub
daa
cmps
and
pop
mul
pop
ins
adc
js
and
xor
out
inc
aam
fwait
mov
mov
int3
sti
clc
or
shl
stc
mov
int
xchg
push
fdivp
repz
adc
jmp
push
pop
sub
js
mov
mov
xchg
sar
xor
pop
mov
sub
pop
popf
add
in
movs
sub
(bad)
mov
lock
iret
(bad)
mov
cmp
pop
lods
fwait
(bad)
fstp
or
cmp
test
sbb
iret
imul
adc
inc
ins
xlat
pop
mov
or
pop
test
sbb
mov
test
add
adc
cli
sbb
cs
or
and
dec
pop
fldenv
outs
xor
in
adc
in
adc
jb
jne
inc
shr
cdq
xor
mov
sub
sbb
(bad)
fld
cmp
pop
sbb
test
aas
jo
dec
mov
hlt
mov
adc
add
fimul
(bad)
fpatan
mov
rcl
jl
out
dec
movs
mov
pop
repz
or
cmp
cmc
dec
mov
add
pop
and
push
addr16
mov
mov
or
inc
mov
jbe
aam
sbb
pushf
dec
test
into
mov
and
push
dec
lahf
mov
mov
cdq
popa
add
xchg
fwait
mov
cli
xchg
xor
sub
pop
jmp
xchg
sbb
or
sbb
bswap
lock
jne
ins
dec
push
push
icebp
add
out
inc
ja
mov
into
cdq
aas
cmps
push
out
ret
daa
sub
(bad)
mov
inc
imul
push
fwait
adc
mov
jecxz
sbb
xchg
ins
cwde
out
js
rcl
xchg
push
call
gs
xchg
fstp
mov
adc
sub
call
outs
sub
jecxz
fcmove
stc
sub
xchg
sub
pushf
test
movs
shl
dec
mov
and
sub
or
(bad)
in
mov
out
fld
pushf
or
repnz
xchg
imul
outs
pop
int3
test
fldcw
cmp
push
sub
push
adc
gs
push
rcr
jmp
lds
jmp
(bad)
pop
mov
repnz
sbb
jnp
(bad)
mov
and
std
out
lds
fs
shr
dec
jno
shr
pop
cmps
int3
sub
and
popf
outs
add
movs
ret
sub
inc
repz
leave
ins
add
cmp
mov
dec
test
mov
or
xchg
cmp
mov
mov
imul
dec
dec
repz
scas
jno
pushf
fmul
mov
pop
fistp
pop
jmp
sbb
fwait
inc
pop
repnz
scas
add
mov
inc
pop
std
sub
lock
inc
sbb
pop
repnz
xchg
add
stc
pop
mov
fidiv
jae
lods
int3
aad
mov
pop
pop
jecxz
in
cmp
cmps
push
sub
jle
repnz
push
xchg
jp
gs
sub
rcl
jl
mov
pop
aas
clc
mov
sub
mov
adc
pusha
retf
lea
xchg
add
and
les
cmps
sbb
loope
cmp
xchg
fsubr
movs
shr
(bad)
mov
shr
fs
mov
jle
cmps
mov
cwde
xchg
addr16
mov
push
mov
add
add
sub
leave
daa
lods
push
sub
adc
scas
test
pop
lahf
push
mov
mov
dec
add
out
xchg
daa
mov
and
xor
and
fnsave
pop
pop
mov
ret
fisttp
popf
popa
imul
sub
popa
sub
push
jl
xor
cmps
jbe
test
cmps
hlt
fidiv
aad
stc
mov
or
fldcw
into
loopne
or
add
out
repz
mov
ja
hlt
xchg
nop
cmps
cmp
xrelease
push
mov
push
sahf
adc
push
cli
push
dec
pop
pop
xchg
sahf
in
stos
retf
scas
mov
jmp
jno
ins
mov
ret
icebp
or
clc
sbb
mov
fisttp
sbb
push
lods
sub
stc
mov
or
xchg
add
sysenter
sub
add
jmp
(bad)
cwde
push
jo
jge
pop
add
jge
pop
mov
jmp
jns
mov
pop
aas
xchg
push
mov
std
or
retf
pushf
push
xor
(bad)
xchg
add
(bad)
sub
xchg
mov
lods
pop
punpckhwd
fwait
div
int3
lds
mov
add
adc
add
mov
fs
shr
shr
out
pop
mov
xor
imul
sahf
data16
outs
cmp
lock
inc
inc
push
mov
mov
adc
mov
push
shr
xchg
jg
test
cdq
jecxz
les
dec
mov
cs
in
sbb
jns
out
or
sub
aam
cmps
mov
and
mov
add
push
xor
pop
in
cmp
loopne
int3
adc
mov
pop
pop
aam
(bad)
mov
mov
call
inc
leave
scas
repnz
mov
data16
lds
lods
inc
les
lods
pop
lea
or
push
addr16
aam
adc
lea
scas
rcr
adc
xor
pop
mov
in
adc
call
daa
arpl
(bad)
or
lock
aas
dec
ret
adc
mov
ja
sbb
pusha
xor
pop
push
imul
or
adc
xlat
test
mov
pop
(bad)
std
dec
rol
std
or
cmp
pop
jbe
addr16
test
xlat
mov
cmp
cmp
add
inc
aaa
inc
xor
stos
sbb
inc
mov
mov
les
xchg
popa
xchg
push
bound
add
xor
inc
xor
(bad)
lea
ret
clc
sub
add
pop
dec
jg
rol
enter
fbld
mov
lds
pop
sar
addr16
pop
pushf
mov
daa
mov
in
add
adc
out
cmps
mov
mov
fwait
jmp
dec
hlt
jae
lds
adc
cmp
shl
xor
xchg
int3
aaa
adc
stos
add
xchg
push
or
cli
div
push
movs
in
and
lods
out
and
lds
mov
mov
pop
int
jns
inc
mov
pusha
dec
xor
inc
dec
pop
in
aaa
mov
inc
pop
mul
into
fadd
repnz
in
js
fdivr
hlt
(bad)
cs
fs
popa
retf
cmp
gs
and
fisubr
ret
push
mov
retf
jmp
mov
movs
shr
xchg
mov
jmp
int
retf
gs
pop
push
jo
aaa
inc
add
inc
je
xor
xlat
test
pop
push
ss
or
xor
loope
or
cmp
enter
xor
div
adc
in
dec
or
and
push
or
sbb
or
mov
retf
mov
jo
fwait
or
add
sbb
cwde
sbb
(bad)
and
mov
fmul
sti
or
mov
scas
or
inc
jno
and
add
lods
hlt
ds
retf
jnp
fistp
jp
adc
call
(bad)
je
hlt
xchg
inc
xchg
jp
pop
not
mov
mov
or
hlt
ret
fcom
or
jae
sub
xchg
mov
xchg
retf
xlat
push
sub
xchg
xchg
enter
ja
in
test
stc
sbb
mov
imul
pop
loope
inc
pop
retf
idiv
retf
fsubp
cs
imul
dec
mov
fs
xchg
add
lahf
jo
pop
lock
sar
aam
jbe
in
pop
and
cmps
adc
mov
rol
and
and
pop
push
psrlw
xor
adc
mov
int3
int
push
jo
mov
push
in
dec
sar
(bad)
mov
pop
iret
sub
push
outs
add
popa
fs
and
dec
imul
arpl
iret
dec
nop
ja
adc
retf
lods
mul
xor
(bad)
sub
pop
inc
sti
mov
inc
sbb
jae
push
mov
or
mov
movs
call
popa
sub
push
xor
mov
mov
adc
out
ret
inc
clc
mov
inc
mov
inc
push
jns
mov
retf
dec
and
cmp
pop
cwde
xchg
std
pushf
cmc
pop
pop
pop
movs
pop
sub
int
inc
mov
daa
int3
mov
ret
and
call
inc
push
rcr
clc
test
push
dec
push
mov
jnp
retf
push
sbb
mov
xlat
aas
fcmove
or
xchg
cmc
sub
push
jge
mov
in
pop
dec
inc
rcr
push
out
sub
cwde
push
sbb
cmp
sub
in
add
scas
mov
jp
(bad)
jae
adc
add
mov
shr
mov
dec
mov
jg
mov
stos
ins
sub
retf
enter
retf
jmp
sub
jge
mov
loope
and
and
aaa
and
sti
ja
int
lock
and
fldcw
mov
push
add
xchg
xlat
xchg
and
sahf
mov
sbb
int
adc
add
cmc
xor
add
fst
(bad)
dec
pop
fdiv
cdq
sub
ins
shl
push
and
cmps
sub
dec
mov
mov
pop
dec
test
push
dec
rol
leave
lahf
push
xor
fchs
inc
jnp
daa
dec
pop
nop
or
xlat
bound
and
sbb
lods
rcl
in
dec
mov
mov
push
adc
cli
js
jo
fadd
adc
int3
cs
mov
sbb
jl
ror
inc
dec
sti
inc
add
pop
dec
call
adc
aas
das
jne
mov
add
push
jbe
adc
fbld
or
dec
pop
inc
aaa
lds
mov
push
dec
jns
or
popa
xchg
(bad)
mov
ins
jo
(bad)
into
rol
cdq
pop
addr16
mov
mov
mov
dec
sar
add
push
shl
pop
fwait
repz
push
rcr
scas
cmc
push
xor
loope
lods
sahf
adc
mov
pop
pop
loopne
dec
imul
jmp
popa
jb
cmc
cmps
daa
out
fcomp
cmp
test
das
les
js
add
add
in
xor
mov
sar
in
adc
mov
pop
enter
jg
mov
and
add
jmp
sbb
cmp
pop
push
mov
pop
cmp
or
aad
das
xor
ja
mov
scas
or
daa
loop
jl
inc
repnz
xchg
fistp
dec
adc
iret
push
cmp
cmps
mov
inc
jmp
shl
movsx
iret
fild
fbld
call
inc
mov
(bad)
or
test
mov
call
or
repz
xor
outs
adc
cwde
loopne
adc
into
fcomi
lahf
sub
sub
sub
xchg
movs
mov
popf
aam
sbb
push
jmp
add
ins
fcmovnb
js
sub
sbb
nop
xchg
push
push
stos
dec
int
movs
xchg
xor
push
int
sub
(bad)
stos
ss
pop
jecxz
out
je
hlt
add
je
mov
dec
xchg
push
icebp
sbb
pop
add
lds
fs
sbb
add
jl
cmp
dec
(bad)
rcl
hlt
push
and
fcomp
sar
arpl
retf
jne
push
mov
(bad)
pop
in
dec
jle
mov
cmp
aaa
test
rcl
pop
xor
jle
sub
imul
loopne
leave
call
pop
cs
int3
mov
das
mov
and
add
ficomp
mov
push
mov
(bad)
shr
ja
xor
mov
sahf
ficomp
mov
fsub
jmp
and
mov
xchg
cdq
outs
inc
scas
(bad)
scas
jmp
fs
stc
pop
sub
mov
mov
sub
mov
cli
mov
pop
or
call
ficomp
movs
fldcw
stos
pop
data16
cs
mov
out
and
ret
outs
xor
or
(bad)
jno
pop
shl
in
dec
or
jg
push
xchg
push
retf
ror
addr16
test
jnp
ret
push
ret
push
rcl
cs
mov
mov
adc
int3
(bad)
or
dec
retf
pop
jo
shr
js
(bad)
or
and
jnp
dec
inc
ja
pop
jmp
add
or
jo
inc
mov
scas
(bad)
icebp
xchg
jle
rcr
out
lods
daa
mov
shl
aas
jl
mov
jmp
shr
dec
sub
stos
xchg
mov
push
popf
sbb
sti
jno
sbb
cmp
add
test
xchg
or
mov
pop
in
sti
sub
outs
cmc
or
rcl
xor
pop
cmovs
ss
and
(bad)
jne
fldenv
sbb
fwait
pop
aas
pusha
mov
mov
and
cmp
mov
ss
add
xchg
jno
dec
(bad)
lods
sbb
call
mov
idiv
xchg
pop
and
inc
into
imul
mov
dec
and
adc
jnp
pop
outs
jmp
adc
in
mov
and
jl
test
add
adc
lahf
jmp
pop
shr
movs
jb
xchg
inc
jno
jmp
xor
addr16
iret
xor
push
lods
xor
cmps
dec
test
addr16
jbe
in
dec
xchg
fistp
fisttp
iret
and
std
mov
sub
faddp
sub
push
(bad)
push
jl
push
mov
and
cmp
adc
test
jne
out
jle
mov
mov
pop
popf
jecxz
sbb
sub
jnp
addr16
pop
sar
dec
jne
ror
sahf
test
(bad)
dec
stos
add
retf
push
or
xchg
(bad)
fcomp
retf
(bad)
mov
mov
cmp
mov
inc
in
inc
and
stos
out
mov
rol
and
xchg
movs
sbb
(bad)
mov
push
inc
rcr
test
dec
mov
imul
sub
jp
cmp
mov
cld
into
inc
inc
xchg
jmp
pop
std
test
ror
fwait
in
stc
add
(bad)
ins
add
dec
cwde
sbb
int
fistp
mov
xchg
cmp
fadd
pop
push
int3
jb
daa
xor
outs
push
jnp
cli
add
jg
iret
jmp
popf
sub
mov
iret
outs
fdivr
xchg
xchg
fdiv
adc
sbb
sbb
icebp
cdq
push
sahf
lock
dec
xchg
sbb
push
dec
lods
mov
retf
sbb
lea
pop
(bad)
mov
(bad)
or
(bad)
inc
sbb
ret
add
and
push
jno
shl
pushf
stos
cdq
dec
int
mov
mov
jbe
xlat
call
repnz
pop
addr16
jmp
mov
rcl
movs
popf
mov
sahf
popa
xor
or
push
clc
push
repnz
or
xchg
clc
test
jb
inc
mov
rcr
gs
aam
pop
or
mov
mov
cld
icebp
jns
push
out
mov
retf
dec
gs
(bad)
cmp
outs
jns
clc
cld
xor
dec
mov
ins
cmc
pop
ret
xor
shl
xchg
xchg
push
lock
fs
fwait
inc
sbb
or
test
lods
cmp
rcr
rep
xchg
push
iret
sti
bound
ror
aad
ss
lahf
xchg
sbb
out
sti
(bad)
mov
scas
mov
ficom
push
jo
jg
jbe
stos
imul
dec
jno
(bad)
jp
aad
dec
inc
and
push
fadd
mov
add
mov
sbb
pop
inc
ss
cmps
fisub
adc
jbe
call
jo
push
sti
imul
ins
test
xor
and
scas
push
and
fadd
adc
dec
dec
xlat
or
mul
sbb
jl
sti
sbb
mov
int3
fmul
push
xchg
jmp
clc
adc
xchg
addr16
mov
or
movs
enter
add
jl
repz
movs
mov
les
jp
cmp
pop
mov
inc
and
adc
inc
dec
mov
cmc
xor
cld
punpcklwd
inc
mov
adc
cmp
lods
mov
jmp
sbb
add
aas
out
je
stc
sub
arpl
and
or
pop
mov
out
iret
std
iret
mov
nop
jle
or
imul
jle
jne
out
gs
loop
retf
fst
and
rol
mov
mov
leave
and
adc
outs
push
mov
in
pop
inc
fdiv
push
fimul
mov
xor
inc
inc
int3
or
mov
dec
das
ficomp
jg
loope
ins
pop
loop
cli
cld
call
(bad)
shr
(bad)
dec
mov
out
sub
xor
cdq
rol
mov
pop
cmp
sub
test
stc
inc
cmovbe
adc
icebp
out
test
loop
xor
addr16
mov
add
pop
add
cdq
sub
adc
cs
sub
aaa
cmp
addr16
mov
lds
shr
cmp
ret
xor
or
fisubr
xchg
xor
test
jns
or
xor
add
or
test
rcl
arpl
popf
cs
icebp
mov
sbb
(bad)
fbstp
loopne
and
test
xchg
je
jb
mov
xor
sar
out
fisub
sbb
xchg
mov
xchg
sub
pusha
xchg
outs
add
dec
sti
mov
mov
pop
scas
and
fldcw
and
cmp
mov
inc
xchg
inc
leave
jmp
cmp
mov
(bad)
(bad)
leave
enter
aam
mov
(bad)
out
cs
sahf
stos
repz
mov
pop
iret
or
movzx
dec
cmps
or
dec
sar
sub
(bad)
jae
fdivr
pop
xchg
mov
cdq
(bad)
mov
mov
pop
push
push
mov
popa
aas
xchg
mov
fbstp
sbb
(bad)
int
or
mov
xor
sub
pop
dec
aad
add
adc
xor
test
mov
mov
push
push
xchg
mov
call
in
in
mov
loop
xor
pop
out
mov
sub
jmp
inc
out
test
and
and
aad
stc
add
cs
mov
cmp
push
mul
mov
mov
push
clc
jle
and
aad
sub
mov
inc
aad
ror
fcmovnu
mov
push
xor
xor
pushf
cmp
lds
jg
fldcw
jge
and
xor
out
and
inc
inc
outs
(bad)
or
dec
xor
sbb
pop
inc
mov
cmc
jp
je
out
dec
jnp
retf
pop
or
adc
ins
(bad)
jmp
adc
mov
in
rol
mov
add
cwde
adc
add
cld
in
rcr
in
jl
cmp
pop
loope
cmp
cmc
jecxz
mov
pop
sbb
jmp
call
int3
movs
and
into
mov
sbb
or
sub
pushf
fdivr
call
fucomp
xchg
inc
outs
inc
push
sub
xchg
sub
(bad)
call
inc
(bad)
cmp
jne
inc
xchg
scas
pop
push
pop
mov
ins
mov
mov
je
sahf
(bad)
xchg
(bad)
sbb
stos
shl
and
ds
and
or
jge
add
scas
add
sub
dec
jns
test
pop
mov
sbb
cmp
push
mov
cmps
out
aam
adc
xchg
mov
mov
repz
aaa
loop
fadd
mov
out
repnz
mov
ret
mov
mov
retf
push
add
fimul
addr16
adc
add
xchg
cmp
dec
mov
jne
add
inc
inc
mov
cld
add
and
stos
dec
rep
test
pop
retf
dec
ret
adc
arpl
outs
pop
std
int
(bad)
call
not
xchg
mov
jns
xor
xor
inc
stc
adc
cmp
in
push
dec
(bad)
cmc
repnz
push
movs
sbb
addr16
in
cmp
adc
(bad)
test
es
sub
jge
jmp
xchg
dec
clc
mov
aas
jg
sbb
cmp
cmps
pop
call
adc
push
int
nop
xlat
sbb
mov
test
out
mov
inc
sub
sub
sbb
sub
xor
cmp
xor
aam
sub
xor
dec
jb
in
stos
int
xchg
fmulp
iret
jae
fdiv
push
(bad)
push
ins
loopne
inc
mov
call
mov
repz
mov
(bad)
(bad)
popa
and
cmp
push
sbb
adc
mov
sub
jl
adc
movzx
sti
jg
mov
cmp
test
xor
mov
gs
mov
cmp
hlt
xor
in
aad
std
pusha
rol
fucom
jae
aam
lahf
dec
je
std
sahf
enter
mov
sbb
mov
jns
dec
or
lds
dec
fisttp
dec
or
or
fdiv
mov
jne
or
mov
test
adc
sub
push
clc
jb
and
jb
push
mov
push
ror
fsubrp
inc
cwde
and
movs
mov
cmc
aad
add
pop
sub
push
mov
push
hlt
iret
adc
mov
push
fwait
loop
xor
or
xor
cmp
sub
rol
push
xchg
push
loope
dec
fcmovnbe
repnz
cmp
xchg
imul
stos
das
or
xchg
adc
and
bound
sbb
push
mov
or
div
add
inc
jmp
or
mov
jbe
stos
jbe
es
pop
sbb
adc
pop
dec
repnz
arpl
and
mov
or
fdivr
sbb
lds
adc
outs
or
out
sub
sbb
(bad)
lahf
sbb
sbb
test
xchg
shl
(bad)
jo
jecxz
jo
outs
dec
movs
mov
mov
call
mov
fistp
add
cdq
xor
outs
inc
push
repz
mov
and
out
cmp
test
xchg
shl
push
sub
aaa
in
shr
push
push
jno
cmp
stc
and
js
cmc
mov
(bad)
mov
inc
jns
jp
mov
int3
movs
pop
lahf
nop
loope
push
aaa
inc
cmp
sar
xchg
sbb
pop
out
xor
out
and
xor
nop
push
push
fld
cli
push
outs
fwait
ror
pop
popf
sbb
cmp
int3
fidivr
jbe
push
and
push
adc
xchg
call
mov
xor
imul
sahf
aaa
leave
cli
aas
pop
xor
adc
loopne
mov
sub
pop
int
mov
bound
adc
int
cmp
(bad)
push
inc
sahf
inc
outs
jecxz
into
sbb
ds
jg
scas
pop
repz
icebp
cmp
and
(bad)
cmp
sub
or
sbb
ins
mov
popf
dec
dec
xchg
xlat
(bad)
adc
xchg
lods
aas
mov
je
mov
ret
dec
cli
or
jnp
shl
hlt
(bad)
xor
cmp
adc
vpmacssdd
fistp
xchg
inc
jbe
je
xchg
mov
retf
rcl
hlt
add
push
jle
aad
sub
div
pop
jmp
pop
push
jb
(bad)
mov
jne
popa
jecxz
xor
cmp
add
push
inc
dec
repz
inc
ret
mov
or
outs
add
sti
xor
aad
fiadd
arpl
rol
mov
sti
mov
xchg
pop
(bad)
mov
push
push
mov
repz
mov
pop
in
scas
xchg
push
or
adc
ins
inc
mov
mov
or
data16
(bad)
cld
mov
push
mov
sbb
rcr
inc
ret
addr16
cmp
add
or
and
inc
(bad)
mov
imul
and
pop
(bad)
not
mov
xchg
mov
jb
pop
test
retf
cmp
dec
mov
das
movs
fsub
sti
push
cmps
bt
sbb
in
arpl
je
popa
in
ss
add
je
out
push
ss
loope
push
ds
and
jle
mov
mov
add
aad
ds
retf
lea
in
cli
dec
test
fild
fucomi
sub
arpl
mov
adc
mov
out
and
and
jmp
mov
jae
inc
aaa
sub
cmp
dec
ds
out
push
lods
jae
je
movaps
inc
pusha
jmp
and
adc
fst
pop
sahf
cwde
sahf
cmc
push
and
sbb
in
arpl
pusha
jnp
aad
popa
cmp
xor
dec
icebp
sbb
in
and
xchg
retf
mov
push
mov
out
lea
xor
cmp
mov
inc
push
mov
and
sub
out
jb
mov
inc
(bad)
test
or
rcl
jb
sub
in
sbb
mov
inc
mov
inc
fnstsw
mov
mov
(bad)
js
xor
mov
loop
jecxz
adc
int
(bad)
cli
popf
(bad)
cmp
adc
dec
pop
inc
jg
clc
dec
(bad)
pop
mov
adc
test
add
jmp
in
sbb
push
jae
or
fcom
fcmovu
xor
pop
jle
aad
leave
mov
arpl
cwde
and
mov
loope
imul
jo
xor
fs
loop
dec
aam
mov
jae
mov
xor
cmp
push
popf
jne
out
cmp
sbb
hlt
data16
ror
sbb
into
sbb
adc
loop
clc
lock
cmps
sbb
push
mov
iret
pop
test
pop
clc
icebp
or
lahf
movs
in
xchg
push
dec
test
pop
or
test
push
pop
mov
rol
inc
jnp
xchg
test
inc
out
push
mov
and
mov
icebp
xor
test
sub
loope
or
icebp
lods
mov
fidivr
stos
enter
jo
in
mov
mov
ret
jno
mov
scas
sub
cmp
enter
push
ret
xor
pusha
dec
jae
mov
lahf
adc
jmp
xchg
cli
jnp
inc
mov
cmc
xlat
fdiv
call
lods
xor
cmp
cmps
repz
out
add
ins
adc
out
gs
imul
test
push
or
push
stc
pop
(bad)
sar
jp
frstor
xchg
push
mov
aas
imul
ins
or
cmps
jo
jno
jmp
movs
call
call
mov
mov
fcom
and
ja
and
ret
pushf
push
fiadd
sbb
test
dec
es
cdq
fs
loop
mov
retf
pop
and
das
xrelease
in
mov
fs
mov
hlt
(bad)
fwait
sbb
jo
dec
sub
jns
ins
mov
iret
jmp
xchg
pushf
sti
js
mov
mov
shr
mov
hlt
mov
mov
pop
and
jb
and
or
(bad)
rcl
mov
in
nop
push
loopne
sub
shl
xor
cli
(bad)
jbe
or
add
pop
sbb
call
mov
fisub
or
(bad)
xor
inc
push
imul
mov
mov
xchg
nop
fs
lahf
test
sbb
adc
cwde
movs
and
loope
aad
adc
mov
imul
sbb
add
cmp
add
and
dec
es
mov
add
sbb
sahf
inc
js
(bad)
loope
jg
adc
mov
mov
and
ret
sahf
in
dec
mov
loopne
mov
cdq
push
fwait
in
fs
mov
pop
sbb
cmp
cmp
sub
movs
sbb
rcl
sbb
mov
ret
fmul
imul
scas
adc
shr
daa
cmp
push
mov
pop
xor
rol
mov
aad
in
rol
call
repz
lock
inc
dec
fisttp
ds
pop
xchg
mov
cs
fs
xor
jp
jl
mov
rol
sub
push
mov
inc
cdq
test
and
jb
mov
vcvtps2pd
pop
shl
loope
jmp
(bad)
adc
pusha
shr
pop
xchg
mov
loop
adc
fcomp
scas
or
mov
pop
iret
int
(bad)
out
(bad)
xchg
mov
xchg
or
jle
xchg
fld
push
and
outs
ret
adc
les
das
rol
cmc
pushf
repz
cmp
sub
inc
jp
sbb
ror
lods
jge
xor
dec
dec
and
jns
mov
sbb
inc
pop
ins
int3
or
ds
push
jnp
cmp
mov
xchg
dec
sbb
xchg
repz
cmp
out
push
clc
fld
or
cld
clc
push
ins
jg
pop
xor
(bad)
rdpmc
fmul
dec
jno
mov
mov
mov
sti
mov
(bad)
xchg
sub
dec
leave
and
lds
dec
pop
fimul
xchg
dec
pop
cmp
fidivr
mov
cdq
fnstenv
int
pushf
rcr
sbb
cmp
mov
jo
push
jmp
repnz
add
pop
and
ins
sbb
pop
and
test
sbb
push
pusha
je
cmp
fcmovnu
jbe
add
mov
lahf
call
pop
std
pop
sbb
mov
sti
push
out
pusha
out
inc
movs
mov
(bad)
push
in
inc
fmul
mov
xchg
mov
inc
sub
enter
scas
ficomp
adc
(bad)
std
enter
and
and
pop
mov
mov
adc
push
test
and
jmp
scas
mov
sub
sti
hlt
or
inc
adc
mov
mov
pop
dec
adc
dec
add
dec
pop
test
push
add
(bad)
add
adc
mov
pop
jecxz
xor
adc
and
mov
ss
(bad)
xchg
push
cmp
(bad)
je
mov
shr
xlat
mov
xor
lea
xchg
inc
dec
sub
(bad)
push
pop
cmp
outs
lods
leave
mov
inc
outs
hlt
push
sar
daa
inc
dec
je
test
mov
in
in
mov
fild
adc
ins
jecxz
fsub
lahf
dec
adc
imul
adc
sbb
(bad)
mov
xchg
sub
adc
call
sub
inc
lods
out
movs
sbb
sub
jl
(bad)
lahf
dec
call
mov
lock
and
outs
cmp
cld
mov
push
mov
mov
push
retf
call
xor
shr
dec
fiadd
pop
lahf
xor
dec
scas
and
fwait
iret
lds
rcl
mov
and
jno
iret
mov
fsubr
outs
sbb
dec
aam
push
mov
cmp
rcr
mov
ds
popf
ins
ins
pop
loopne
outs
and
lock
push
xchg
fnstsw
sub
and
push
aaa
mov
mov
ret
mov
cmp
ds
jbe
std
pop
das
push
xor
push
xchg
jbe
gs
or
popf
test
sub
cmp
inc
xchg
test
loop
dec
sbb
cmp
retf
jns
aas
push
sub
mov
mov
stc
int3
(bad)
int3
mov
jbe
mov
push
lahf
xchg
jg
jge
fst
xchg
stos
push
mov
xchg
jmp
shl
ins
in
sbb
push
sub
push
clc
push
test
stos
hlt
(bad)
adc
out
push
dec
sbb
add
xchg
out
pop
int
sbb
and
ss
mov
repz
adc
add
jne
fistp
sub
leave
sbb
sbb
cmp
cmp
sub
inc
cwde
pop
jmp
(bad)
popf
xchg
icebp
popa
call
hlt
sahf
ins
xor
pusha
pop
(bad)
cld
fsubr
dec
scas
out
inc
pusha
sub
and
fs
repnz
adc
mov
xchg
test
xor
inc
sbb
xor
rsqrtps
cmp
cs
dec
jae
jno
fdiv
pusha
push
adc
outs
dec
cmps
shl
sbb
add
cwde
nop
div
dec
jne
(bad)
mov
cs
pusha
push
mov
inc
xor
mov
mov
fist
dec
mov
outs
js
cmpps
adc
gs
adc
shr
jne
mov
push
sub
push
dec
push
fwait
or
add
rol
dec
fidiv
xor
jp
xchg
(bad)
pop
in
or
bound
mov
push
bound
sub
ins
pushf
mov
fs
pushf
adc
adc
ret
dec
and
push
sub
retf
pop
mov
call
loop
inc
inc
cdq
ins
aad
imul
mov
push
call
sub
add
repz
dec
outs
sub
ins
mov
cmp
lods
sbb
push
jmp
adc
and
inc
call
jp
push
ficomp
neg
sub
and
push
fistp
iret
fs
js
fnstenv
cmp
cmp
call
xor
pop
add
outs
xchg
xor
scas
xchg
cmp
mov
cwde
mov
or
sub
and
stos
cmp
cwde
(bad)
dec
cmps
lods
xchg
dec
add
shld
mov
arpl
cmps
fdiv
stc
sbb
push
mov
out
cmp
inc
cmp
cmp
xor
pop
shl
mov
sub
and
fiadd
shr
mov
adc
adc
push
aaa
add
scas
mov
push
fs
movs
clc
mov
test
stos
adc
inc
push
ja
mov
sahf
push
ins
or
rcl
xor
cmc
add
(bad)
dec
jne
jns
fwait
outs
add
mov
jbe
mov
mov
(bad)
shl
addr16
jo
div
mov
push
mov
sub
enter
or
add
sahf
push
mov
into
mov
xor
sbb
js
mov
(bad)
in
iret
les
and
and
popa
pop
into
jnp
mov
push
into
dec
mov
pop
mov
pop
sbb
cwde
test
jo
mov
ins
cdq
out
and
mov
jmp
out
mov
mov
dec
mov
adc
aaa
ins
mov
mov
and
(bad)
xor
mov
xor
call
push
xchg
jne
add
jecxz
aad
adc
rdtsc
adc
sti
dec
inc
retf
jbe
test
cmp
or
push
mov
loope
inc
mov
jmp
movs
mov
cmc
(bad)
dec
retf
enter
cld
cmp
pop
icebp
dec
xchg
ret
nop
jno
or
add
cdq
ss
ins
movs
xchg
test
in
ror
movs
stc
or
outs
loope
fisub
fcmovnu
int3
mov
shr
imul
sbb
test
pop
push
sahf
inc
(bad)
adc
mov
push
in
cmps
in
ret
inc
dec
xchg
mov
retf
push
push
push
mov
adc
mov
push
push
rol
ins
in
pusha
add
push
xchg
dec
ror
jp
push
push
pop
lods
and
sub
xor
ss
push
hlt
jae
mov
mov
into
shl
scas
lods
inc
cwde
jecxz
push
adc
sub
xor
mul
enter
cmp
push
jmp
(bad)
cmp
jp
add
mov
(bad)
pop
jl
inc
call
xor
mov
ret
(bad)
adc
push
ja
sub
(bad)
and
mov
mov
add
lock
cmp
sbb
sbb
jg
int
push
push
mov
jecxz
mov
xchg
jp
or
jmp
jno
(bad)
dec
out
sahf
retf
push
or
xlat
add
mov
rcl
cwde
push
jecxz
loope
sub
out
dec
push
test
add
pushf
hlt
add
adc
mov
outs
mov
jg
out
es
cmc
cmc
popa
dec
or
jmp
aad
popf
fdivr
(bad)
int3
loop
pop
scas
data16
add
aas
(bad)
xor
jo
cwde
enter
sub
sti
sub
mov
pusha
ss
xor
imul
sbb
adc
pushf
out
mov
mov
push
aad
stos
das
stc
lds
out
ss
dec
in
cld
xor
scas
jl
mov
es
jnp
or
(bad)
xchg
sbb
call
pop
dec
ficom
pop
mov
or
pop
movs
xor
and
pop
lods
jae
es
mov
loope
inc
pusha
repz
scas
jle
cmp
push
bound
pop
dec
xor
mov
inc
in
sub
dec
jle
nop
push
sub
sahf
retf
mov
movs
pop
jle
test
inc
inc
mov
sub
mov
inc
retf
or
cmp
push
inc
adc
lods
imul
mov
and
std
into
rcl
loope
jno
fmul
pop
sahf
in
sbb
cmps
jmp
js
pop
es
inc
std
mov
push
(bad)
and
pop
out
(bad)
push
clc
scas
or
inc
push
mov
mov
add
push
rcl
xlat
cmp
jecxz
out
test
or
(bad)
or
jae
cmp
adc
retf
push
mov
addr16
vpmulhw
mov
xchg
mov
es
ret
mov
mov
cli
cwde
retf
cmp
dec
jae
xor
sti
dec
pop
fs
pop
out
popf
xor
and
mov
and
jmp
mov
mov
sbb
cmps
push
hlt
and
movs
or
std
(bad)
in
pop
add
mov
ins
mov
stc
movs
fsubp
mov
popf
sub
(bad)
call
fistp
das
icebp
push
jno
mov
cli
or
cmps
pop
mov
or
push
mov
es
js
clc
ins
xor
and
ds
mov
sub
push
and
cmp
scas
pop
xchg
jg
pushf
and
mov
push
jmp
mov
push
in
adc
cs
aas
adc
xchg
mov
mov
sub
mov
js
scas
imul
pop
je
call
shl
outs
and
or
push
stos
paddw
shr
jp
inc
xchg
xchg
inc
sub
shl
xchg
cld
xor
xchg
and
jno
xchg
mov
scas
xor
scas
mov
popf
outs
es
out
sub
pop
loop
repnz
repnz
shld
in
mov
xor
int3
in
jl
xchg
(bad)
fistp
std
pop
ds
(bad)
cdq
push
sbb
jae
jb
push
ja
ds
stc
sbb
xchg
sub
jmp
jbe
bound
(bad)
mov
add
out
xchg
aas
fild
mov
sbb
fld
add
xor
pop
jno
cmp
pop
retf
adc
sbb
cmp
aas
ficomp
out
(bad)
int3
lea
add
cmp
inc
cmp
clc
test
inc
and
mov
stc
push
enter
adc
repz
add
(bad)
fsubr
rcr
sbb
shl
imul
(bad)
call
add
lods
aam
ret
push
mov
lock
daa
dec
mov
jbe
inc
mov
or
mov
xor
dec
pop
or
mov
lea
pushf
push
cmp
mov
test
cmps
xchg
cmp
test
or
push
les
loope
aam
or
lea
movs
lock
jae
imul
outs
(bad)
cmp
xchg
fistp
xor
loope
xchg
(bad)
cmp
enter
imul
js
pop
loop
sahf
push
cbw
dec
mov
or
jmp
jmp
inc
xchg
adc
(bad)
outs
out
div
(bad)
loope
jmp
xor
ins
in
and
(bad)
popa
gs
in
inc
sbb
and
pop
dec
ret
dec
or
or
jae
stos
sbb
arpl
or
out
mov
(bad)
retf
jae
jb
repz
lock
inc
addr16
shl
pop
sbb
mov
cwde
jg
dec
mov
ret
je
stc
mov
pop
out
xor
or
sbb
cmps
jno
je
xchg
fiadd
scas
add
jl
pop
js
mov
mov
movs
push
int
(bad)
jne
dec
fild
jno
cmp
out
out
add
es
ins
mov
fsubr
push
lods
int
nop
stos
mov
cli
mov
xchg
js
mov
(bad)
(bad)
cmp
popa
and
cmp
test
stos
ins
push
jle
push
lods
cmp
add
movs
xlat
jnp
(bad)
lds
in
(bad)
idiv
xor
jns
dec
and
ror
mov
lea
xchg
lods
je
in
or
test
mov
push
fcomp
test
bound
pop
xor
mov
push
aad
js
iret
adc
cmp
inc
inc
push
sub
pop
push
jp
cld
sti
dec
jl
mov
mov
inc
pop
in
sbb
std
imul
ins
sbb
mov
jno
jo
xor
jnp
dec
pop
push
xor
push
je
mov
in
les
adc
jae
or
scas
mov
and
call
js
pop
std
adc
loope
xor
aad
pusha
rol
lock
and
dec
sbb
sbb
pop
icebp
aas
std
jne
dec
xchg
mov
mov
daa
call
cmp
(bad)
xor
jb
adc
inc
test
mov
add
hlt
mov
movs
in
loope
mov
jge
(bad)
sub
pop
xchg
inc
clc
mov
nop
and
in
popa
push
movs
mov
loopne
aas
mov
add
cmp
cmps
push
fbld
inc
aam
dec
xchg
sti
movs
mov
cwde
xor
ss
imul
push
stos
pop
popf
mov
xor
and
mov
xor
dec
pop
not
adc
repz
xchg
mov
repz
setle
adc
xchg
jmp
ins
imul
aaa
pop
in
lods
and
bound
lea
xor
ror
out
icebp
cmps
jne
pusha
test
scas
int
or
adc
idiv
sbb
jo
mov
jns
pop
and
call
and
push
jecxz
sub
push
cmp
sub
(bad)
hlt
pop
out
in
mov
sub
dec
jne
push
xchg
xor
xchg
mov
adc
mov
retf
shl
xchg
cld
test
clc
push
fcomp
push
(bad)
addr16
repnz
fnstcw
push
xchg
add
and
or
out
xor
jmp
push
xchg
js
addr16
mov
adc
lds
add
add
fs
test
test
xchg
inc
push
xlat
pop
and
es
jae
mov
sar
sub
lods
lahf
iret
mov
rol
jg
sub
xchg
and
movs
jmp
mov
push
lods
push
sbb
pop
mov
ret
push
mov
cmp
mov
add
mov
dec
inc
pop
mov
and
cmp
pop
inc
sbb
sbb
enter
or
dec
sbb
ds
mov
cld
repz
jmp
or
imul
shr
xlat
rol
add
ret
retf
pop
jae
into
push
jg
jae
sub
pop
fidiv
xchg
pop
ss
lds
lahf
aad
mov
and
inc
lods
sub
push
dec
pop
adc
sub
push
aad
mov
inc
call
xor
push
or
and
jnp
mov
js
or
and
cmp
ss
fsubrp
add
inc
(bad)
jb
fstp
icebp
fnstcw
stos
aam
sub
add
or
sbb
lods
in
in
cmp
aas
cs
add
mov
jmp
mov
arpl
xchg
inc
jecxz
mov
(bad)
out
pop
inc
retf
mov
fst
cmp
push
movs
dec
inc
dec
(bad)
fwait
mov
mov
loope
rol
inc
rol
mov
int
or
js
(bad)
fwait
movs
mov
xor
ds
ins
aas
and
xchg
pop
inc
dec
mov
xchg
jecxz
jmp
xchg
ja
pop
mov
retf
mov
das
les
cmp
leave
les
or
sbb
and
pop
inc
je
ret
scas
in
dec
aas
cmps
mov
imul
jmp
dec
mov
sbb
jne
jle
jle
cli
and
pop
lds
inc
call
xor
int3
ficomp
jmp
ds
sbb
loop
push
out
sbb
fmul
add
xor
into
movs
and
xor
mov
jle
int
dec
inc
push
sar
mov
sar
jmp
inc
mov
icebp
cwde
sub
ror
mov
or
mov
or
or
inc
(bad)
mov
mov
xor
sbb
std
xchg
call
ja
xchg
or
dec
xlat
push
call
add
in
retf
push
cmp
dec
jne
dec
lods
movs
pop
cwde
rcr
and
xchg
movs
jge
mov
dec
push
mov
sbb
shr
xchg
in
fs
inc
test
dec
add
push
clc
and
sahf
inc
sub
inc
mov
jnp
lods
int3
jg
scas
xchg
sub
pop
lgs
pop
adc
cmp
sbb
mov
push
push
cs
add
lds
and
jnp
push
lea
mov
stos
and
movs
dec
or
aas
push
shr
jg
(bad)
jge
test
shl
sbb
test
std
xchg
pushf
mov
outs
cmp
shl
into
loope
lds
jle
adc
pop
xor
gs
outs
inc
cmp
xor
ss
icebp
outs
leave
sar
(bad)
adc
inc
out
and
int
rcr
mov
and
(bad)
mov
or
rcr
add
sbb
pop
add
mov
mov
sub
stc
push
jmp
imul
sbb
sbb
cmp
add
popa
mov
xchg
mov
add
neg
imul
push
scas
jmp
cmp
shl
mov
iret
test
out
aas
imul
mov
out
les
ja
dec
or
jecxz
sub
retf
scas
or
cli
mov
arpl
sub
push
test
push
push
push
mov
pusha
je
cwde
dec
jb
pop
lods
mov
outs
clc
jle
xchg
bnd
mov
lahf
in
inc
mov
or
or
or
(bad)
push
addr16
push
pop
(bad)
out
lock
out
dec
mov
jp
out
add
jmp
add
jl
push
das
inc
inc
(bad)
(bad)
sbb
imul
in
jp
in
push
cmp
dec
xchg
out
xchg
gs
rcl
pop
out
inc
lock
add
test
jmp
(bad)
cmp
push
xchg
xchg
(bad)
cmp
call
std
mov
jmp
shl
cmps
ins
rcr
in
or
(bad)
mov
scas
rcr
and
out
sub
outs
jl
sti
ds
sti
ins
retf
cmp
sub
jl
fdivr
cs
or
test
scas
pop
add
adc
add
jbe
(bad)
fwait
mov
dec
and
and
adc
add
cwde
sbb
or
add
push
movq
mov
xor
and
inc
sub
mov
and
mov
in
push
cwde
mov
out
sbb
adc
das
adc
ins
sub
mov
push
outs
xor
sub
in
cmc
sbb
and
outs
xchg
jns
mov
adc
pop
pop
mov
lods
int3
mov
ins
(bad)
xor
shl
(bad)
cmc
or
xchg
dec
stos
pop
or
adc
cmp
jbe
rcl
jmp
ss
popf
inc
push
dec
dec
inc
jo
cmp
frstor
lods
jecxz
push
(bad)
adc
xor
cdq
inc
ret
mov
gs
dec
fcom
dec
jle
cs
mov
fwait
xchg
fdiv
sub
arpl
or
adc
xchg
xor
ja
mov
mov
jmp
(bad)
mov
test
(bad)
inc
(bad)
leave
or
in
test
cld
jb
or
mov
cmp
mov
retf
jle
hlt
mov
mov
sub
push
sub
movs
xchg
add
push
in
xchg
and
jns
push
jne
jne
and
aam
pushf
cmp
mov
fadd
sti
add
jle
lods
loope
xchg
mov
xor
push
mov
scas
cld
stos
iret
bound
mov
and
addr16
push
repz
jns
or
stos
pusha
(bad)
push
daa
add
jl
xchg
lods
ret
xchg
xor
dec
mov
jno
sub
cli
xlat
test
or
repz
xor
mov
loope
xchg
fcom
inc
xor
outs
ror
sub
sar
aaa
inc
repz
jbe
add
add
out
push
mov
jb
inc
lahf
outs
arpl
out
sub
lahf
outs
loopne
ja
pop
mov
jg
push
fmul
inc
sahf
std
push
mov
adc
mov
call
push
shr
daa
movs
in
jmp
icebp
mov
push
movs
lock
or
dec
sahf
movs
push
test
das
stos
and
sbb
aaa
or
or
jne
mov
aad
adc
fld
sbb
test
movs
bound
jecxz
dec
cdq
inc
mov
pop
adc
lock
loop
iret
pop
fisttp
cmp
scas
dec
(bad)
in
in
push
(bad)
inc
enter
add
jl
ret
adc
enter
cmc
push
sbb
in
and
cmp
aam
mov
xchg
push
cwde
xchg
cmp
inc
les
dec
fcmove
fidiv
pushf
sbb
sbb
retf
dec
dec
and
ficomp
pop
mov
(bad)
or
add
jo
mov
xor
add
sbb
sar
out
add
(bad)
test
sub
shr
xchg
xchg
rol
mov
fist
pop
mov
inc
mov
or
mov
push
outs
push
push
inc
xchg
sbb
sub
retf
sub
dec
movs
mov
push
xor
push
leave
adc
dec
xor
cmp
cmp
cmp
and
sbb
ja
xchg
std
loopne
scas
pop
mov
sti
push
mov
jno
sub
test
pop
aad
jbe
cdq
jno
aad
dec
dec
cwde
adc
test
or
xor
sub
inc
sar
dec
and
jae
pop
jns
lahf
gs
btr
mov
aas
(bad)
stos
jb
cmp
imul
inc
mov
jg
pusha
call
mov
or
call
fild
mul
shr
mov
retf
sbb
adc
fmul
mov
sub
or
sbb
cmp
push
(bad)
ja
pop
ins
rcr
or
popa
adc
xchg
mov
sub
or
jno
add
(bad)
in
xchg
repnz
cli
adc
jo
pusha
lahf
gs
fs
mov
mov
cld
mov
call
out
out
out
jp
(bad)
ins
ja
pop
add
scas
or
push
dec
sbb
and
loopne
push
shr
cli
inc
in
repz
imul
xchg
jge
int3
in
add
out
mov
test
dec
inc
pop
nop
mov
or
ret
mov
rcl
cdq
fiadd
xchg
jbe
add
sbb
jmp
dec
cmp
or
scas
jp
movs
jne
mov
push
or
push
fild
fldcw
outs
gs
test
dec
sub
in
retf
cwde
push
mov
movs
push
cmp
call
jns
push
aad
lds
cmp
xlat
nop
jg
mov
outs
mov
mov
mov
fs
mov
inc
and
(bad)
ror
mov
sbb
loopne
popf
push
mov
dec
pushf
jg
retf
push
mov
sbb
test
cmp
ins
retf
sub
(bad)
call
cwde
sar
or
cmp
(bad)
sbb
inc
dec
jg
out
pop
cmps
jb
in
sti
xchg
gs
mov
hlt
icebp
ja
mov
mov
mov
sub
adc
sub
push
lock
cld
and
and
mov
sub
adc
jae
mov
push
scas
cmc
sar
pop
lock
pop
sbb
fnstenv
femms
hlt
push
push
popf
nop
inc
ret
jp
enter
push
jp
mov
sbb
addr16
out
adc
dec
outs
jp
fst
adc
sbb
adc
jne
sub
adc
jmp
lods
loopne
cmp
mov
jae
adc
pop
js
and
pop
dec
dec
inc
inc
jmp
stos
scas
sbb
cmps
and
jnp
iret
jl
add
push
dec
imul
or
call
fs
ins
rcl
jle
mov
test
pop
add
aam
mov
xchg
in
scas
or
aad
mov
mov
fistp
int3
mov
and
mov
ins
push
sub
or
xchg
pop
call
and
mov
dec
inc
and
cmp
jle
dec
test
div
das
ds
xor
sub
in
into
dec
pop
repz
in
sbb
fcom
sbb
xchg
movs
mov
fwait
stos
or
pop
fnsave
sbb
les
test
xlat
mov
mov
push
dec
cmps
mov
mov
test
test
jecxz
aaa
pop
xchg
dec
aam
dec
inc
xchg
pop
(bad)
enter
cmps
int3
xor
add
imul
mov
shl
idiv
xchg
mov
rcr
inc
adc
dec
pop
test
or
xchg
(bad)
out
push
or
out
je
(bad)
dec
inc
cs
sti
mov
cmp
rcl
gs
and
sbb
jmp
(bad)
neg
push
cmp
pcmpeqd
aas
cs
sbb
arpl
pop
in
pop
or
mov
sti
dec
cli
cwde
jns
repnz
stos
psllq
cmp
mov
xchg
mov
movs
dec
nop
popf
sti
paddd
dec
stos
push
fisubr
mov
jb
and
push
inc
cmps
jmp
mov
(bad)
pop
fcomi
shr
out
aas
sahf
dec
pop
popf
fmul
movs
(bad)
push
leave
stc
push
mov
hlt
rcr
pop
pop
sbb
or
mov
aas
rcl
and
adc
push
pop
push
sahf
sbb
ins
sub
cmp
or
popa
jnp
push
iret
aas
jb
pop
jne
sub
push
push
ja
jns
int3
mov
pop
(bad)
jmp
rcl
mov
not
js
jp
scas
(bad)
cmps
aad
jns
jmp
cmp
inc
sahf
jle
push
xor
mov
xchg
jnp
push
hlt
cmp
or
mov
cmp
sbb
push
pop
cmps
and
xchg
mov
fiadd
imul
lods
gs
enter
rol
out
pop
and
das
pop
dec
mov
mov
call
or
(bad)
fmul
je
and
daa
adc
sahf
loop
inc
leave
sub
ffreep
pop
test
fst
xor
mov
adc
pusha
jmp
sub
mov
pop
pop
cmc
push
rcl
lahf
mov
fstp
xlat
in
pop
ja
and
in
fistp
(bad)
lods
adc
push
push
loope
call
cmps
push
sub
mov
jle
nop
aad
call
aas
jecxz
stos
cdq
pop
fdiv
fidivr
(bad)
or
ds
cmp
lods
push
mov
adc
jge
call
push
outs
xor
hlt
sti
sbb
push
pop
rcl
nop
lods
xor
jb
add
sub
and
sub
rol
mov
xchg
mov
pop
ficom
out
xchg
jle
imul
adc
lahf
cmp
test
dec
aaa
jbe
das
pop
ins
cmp
scas
stc
xor
inc
mov
loop
xchg
pop
inc
je
lds
jp
jae
sub
(bad)
jne
inc
inc
out
sbb
mov
(bad)
shr
add
test
mov
sbb
jo
stc
ss
and
jns
jae
pop
sbb
or
add
fincstp
xor
sub
cwde
enter
sub
pop
int3
pushf
mov
cmps
js
xchg
sbb
sbb
movs
fsubr
sub
adc
mov
es
sar
scas
jmp
iret
cmc
sti
or
sbb
in
std
adc
mov
fcmovb
aad
stos
add
loope
icebp
dec
popa
and
xchg
push
pop
inc
dec
cmp
push
pop
sbb
outs
cmps
sub
or
xor
in
cmp
in
push
cs
pop
mov
sub
adc
mov
call
pushf
inc
cmc
fsincos
not
(bad)
in
repz
push
test
push
mov
adc
and
jne
xor
jbe
lahf
stos
push
cld
push
dec
les
pop
pop
jge
dec
pop
ficom
sub
mov
sahf
dec
fldenv
daa
adc
pop
loope
mov
daa
or
sub
sbb
mov
popf
(bad)
arpl
lods
imul
mov
xor
mov
mov
mov
or
adc
xchg
mov
lock
or
sbb
mov
movups
je
in
movs
repnz
sbb
aas
add
pop
loopne
xor
mov
pop
test
ret
ret
and
repz
sbb
adc
test
sub
iret
or
xchg
xchg
jb
daa
adc
(bad)
xchg
mov
fiadd
bound
in
cmps
fisttp
jbe
sub
repnz
das
and
jle
add
out
fwait
pop
push
stc
mov
popf
xor
sub
pop
out
xchg
iret
test
or
pop
xlat
mov
fnsave
fidivr
mov
js
or
adc
clc
movs
mov
inc
push
jne
inc
pop
(bad)
aas
test
shl
xor
mov
rcr
shl
cmp
push
call
addr16
dec
mov
xchg
pop
and
sub
in
mov
loop
sbb
xchg
mov
xchg
(bad)
imul
push
es
adc
dec
sahf
jp
mov
xchg
dec
cmp
push
lahf
shl
fild
inc
in
mov
in
clc
mov
pop
or
xchg
pop
fbld
add
clc
test
xor
cmc
or
push
mov
(bad)
push
stos
fsubr
pop
jecxz
jp
cmp
jge
push
or
or
and
jmp
sar
call
mov
push
imul
ror
push
(bad)
cmc
mov
xchg
pop
jns
adc
in
mov
sti
lds
mov
lahf
pop
ret
sub
(bad)
push
adc
(bad)
jmp
retf
mov
pop
and
out
ja
(bad)
cmp
sar
rcr
mov
xor
pop
inc
dec
adc
fwait
xlat
jle
ret
ret
cmp
push
das
xchg
pop
inc
cmp
movs
sti
data16
mov
xchg
(bad)
out
test
cli
push
in
cmp
mov
mov
push
cmps
outs
inc
ds
fucomp
cmp
dec
retf
out
nop
data16
(bad)
dec
sahf
jb
and
popa
sbb
iret
cmp
mov
pusha
mov
sbb
lahf
daa
mov
or
aas
mov
call
mov
inc
jmp
sub
xchg
lods
push
push
ret
stos
push
cmp
or
mov
and
pop
cmp
mov
mov
inc
sbb
push
mov
cmp
xor
or
aaa
push
pop
dec
mov
js
dec
imul
mov
jge
loop
and
jnp
xor
movs
repz
adc
or
adc
sbb
or
or
and
mov
or
fsubr
pop
pop
jmp
retf
mov
xchg
dec
and
icebp
shl
mov
div
sbb
jecxz
sub
outs
and
mul
in
adc
(bad)
dec
mov
cdq
stos
mov
shl
(bad)
pop
xchg
retf
movs
int
hlt
ss
cmps
out
jbe
test
test
jmp
pop
rcl
pop
push
cmp
mov
fdiv
and
adc
pushf
outs
les
cmps
aaa
in
jae
jmp
pusha
ins
aam
push
dec
arpl
xchg
shl
xchg
pop
inc
mov
pusha
dec
(bad)
enter
mov
pop
cmp
and
js
les
and
xchg
adc
mov
loope
adc
xchg
add
pop
adc
mov
retf
and
xor
push
mov
and
fldcw
and
nop
pop
inc
or
lock
idiv
and
shl
push
cmps
sbb
mov
adc
xor
mov
in
xlat
jp
fwait
dec
and
fwait
ss
leave
mov
repz
movs
stc
comiss
cmp
push
mov
fnstcw
adc
aas
jmp
stos
leave
sub
xchg
xchg
xor
imul
jno
dec
and
fcom
cmp
shr
sbb
pop
pop
mov
cmp
pop
sub
loop
cwde
out
fs
(bad)
stc
movs
xchg
pop
fsubr
push
mov
and
ss
lods
lea
pop
and
adc
xor
or
pushf
test
sub
push
sub
test
adc
xchg
lods
xchg
jbe
enter
or
inc
sbb
and
jae
bound
in
sti
dec
gs
rol
arpl
daa
sub
cmp
test
imul
pop
shl
ret
rcr
pop
pop
jle
jp
cmps
sahf
scas
inc
daa
cmp
jmp
add
int
mov
fs
xor
fcomp
dec
aad
loope
cmp
stos
fadd
ficom
add
ret
aad
lods
xor
out
test
inc
stos
je
add
lds
push
mov
les
lods
popf
xlat
pop
mov
fstp
push
repnz
adc
mov
cmp
add
aas
aas
leave
aaa
ret
sahf
cdq
or
sbb
leave
or
clc
inc
push
cmps
cwde
xor
cmps
push
addr16
inc
aaa
out
in
in
pop
movs
loop
pop
(bad)
xchg
(bad)
mov
push
dec
push
dec
inc
adc
jmp
mov
lock
cdq
in
pop
nop
pop
sbb
aad
sbb
inc
mov
ror
mov
sub
dec
arpl
fidivr
jbe
lods
xchg
add
aad
jmp
push
ins
pop
test
or
imul
shld
and
mov
shld
lods
jae
xchg
jns
and
in
lahf
(bad)
lods
push
cld
loopne
xchg
js
js
add
and
pop
icebp
push
mov
inc
pop
data16
loope
adc
not
cmp
gs
cmp
pop
sub
das
xlat
in
stos
out
xchg
fstp
xor
xor
pop
aad
lods
adc
inc
inc
mov
mov
adc
or
pop
push
inc
mov
gs
stc
test
xor
out
sahf
movs
mov
jmp
stc
mov
ror
inc
fsubr
push
pop
pop
stc
adc
repnz
and
lods
mov
gs
enter
jb
push
cmp
mov
or
cwde
in
sub
mov
jp
fisttp
ins
push
retf
dec
lods
(bad)
cmp
mov
pop
iret
mov
movs
add
icebp
adc
cs
and
les
cli
dec
push
cmp
mov
cdq
push
jg
lock
pop
xor
nop
sbb
sub
mov
js
repnz
dec
jg
cmp
ja
xchg
xchg
sbb
inc
retf
call
mov
ins
cwde
push
neg
aaa
hlt
daa
jbe
icebp
mov
data16
nop
inc
sar
adc
sahf
icebp
pause
loop
cmp
mov
mov
fimul
or
cmp
adc
fnstsw
sbb
fs
scas
jmp
fsubr
inc
sub
stos
sub
sub
push
push
popf
stos
and
lods
xchg
das
loope
cmc
inc
addr16
test
add
sbb
cmp
xor
inc
jno
sar
mov
jb
repnz
imul
fwait
mov
aam
xor
(bad)
fsub
test
lahf
or
mov
jl
cld
popf
inc
push
(bad)
jp
inc
xor
je
sbb
xchg
rep
fs
stos
test
daa
test
addr16
xor
mov
pushf
adc
repnz
enter
js
mov
xchg
scas
mov
sub
inc
jg
popf
shl
xchg
pop
xchg
and
xor
stos
aas
call
loop
and
int
pop
adc
aaa
jns
mov
adc
ror
scas
add
fild
stos
cmp
or
cwde
or
dec
inc
pushf
lds
fwait
sar
repnz
test
bound
into
xor
add
cmp
mov
pop
push
call
fs
adc
icebp
in
or
dec
and
mov
leave
js
popa
push
mov
ret
mov
pusha
xchg
les
(bad)
mov
xchg
xchg
jo
pop
cwde
call
test
mov
inc
fcom
sub
pop
cmp
sbb
pop
in
or
jl
jge
pop
adc
sub
or
jmp
scas
mov
icebp
cwde
fcomp
dec
cmp
jmp
sub
lea
iret
fwait
dec
or
pop
int
leave
cmps
add
dec
scas
dec
xor
out
les
gs
rcr
dec
nop
cld
in
xor
push
or
cwde
rol
inc
push
mov
cs
inc
pop
imul
ret
sbb
(bad)
pop
popa
mov
sub
pop
mov
mov
cmp
cmp
not
jecxz
neg
push
dec
mov
lods
dec
movs
cli
xor
add
inc
pop
jg
popa
jbe
cmps
mov
out
push
scas
lock
push
test
std
cmps
cli
xor
popa
daa
cmp
mov
les
cli
xor
call
dec
sbb
(bad)
shl
or
inc
sbb
adc
fadd
ins
iret
repnz
cwde
or
xor
cwde
cmp
imul
in
mov
dec
stos
aas
dec
xchg
in
inc
pop
call
pop
cmp
jnp
fwait
xor
aad
cmp
aas
ret
mov
(bad)
mov
outs
hlt
xchg
jb
or
jns
adc
(bad)
jge
jl
rol
pop
movs
push
sbb
and
pop
ret
adc
fdiv
xchg
lea
dec
dec
xor
daa
inc
cmc
jg
push
arpl
xchg
(bad)
xlat
cmovbe
shl
and
inc
pop
inc
adc
xchg
mov
in
in
jae
jae
xor
pop
stos
jnp
iret
jne
imul
in
daa
scas
outs
push
cmp
nop
mov
xchg
cld
xchg
fcmovu
loop
out
cld
jo
daa
lods
jl
nop
sub
retf
loopne
or
std
add
js
arpl
jge
xor
(bad)
pop
(bad)
mov
add
inc
lock
dec
fsubr
loope
xchg
jl
sub
enter
(bad)
inc
xchg
xchg
sets
clc
adc
cmps
aad
adc
sbb
mov
addr16
cmp
cdq
mov
pop
sar
xchg
cdq
movs
cmp
jnp
lods
cmc
shr
push
shr
sub
add
test
sbb
jmp
add
mov
sub
(bad)
pop
adc
mov
ins
push
xor
bswap
lea
out
mov
jae
cmp
lods
in
fcom
mov
xor
mov
jo
jge
inc
cmps
xchg
adc
fldenv
push
dec
fld
mov
ja
mov
xchg
sahf
lods
and
fcmovnb
xlat
and
pop
in
fimul
jbe
jno
aas
les
movs
fisttp
call
sub
push
mov
adc
push
jecxz
sbb
push
sqrtps
jns
pop
mov
test
retf
and
mov
mov
lock
inc
lock
in
cmc
jecxz
add
dec
dec
gs
retf
fld
loopne
ss
daa
xor
icebp
jle
loope
iret
and
(bad)
xor
xchg
mov
imul
ffree
(bad)
shl
add
int3
inc
mov
push
scas
lods
int3
cmp
lahf
adc
push
retf
inc
cmp
sbb
scas
icebp
mov
and
push
(bad)
sbb
inc
xor
cli
leave
jg
and
adc
adc
or
adc
rcr
xlat
sahf
cs
in
out
xor
sahf
mov
push
into
jmp
ror
fnsave
daa
hlt
sbb
xchg
das
sub
inc
mov
jns
cmp
jl
out
mov
sub
ins
push
nop
mov
aam
adc
jmp
add
retf
or
pushf
cmp
stc
mov
mov
stos
aad
test
cmp
pop
xor
imul
and
and
add
out
and
mov
movs
xor
inc
rol
mov
int
inc
ror
out
pop
repz
fwait
dec
mov
mov
xchg
pop
(bad)
js
(bad)
sub
fs
mov
into
pop
ja
dec
(bad)
push
cmp
pushf
and
sub
aad
adc
test
push
mov
fadd
dec
mov
in
inc
mov
pop
and
cdq
dec
fld
mov
cmp
cmp
jmp
(bad)
push
sbb
in
mov
push
fld
push
mov
cmp
pop
push
mov
scas
xacquire
jnp
jne
inc
lock
cmp
(bad)
rcl
imul
add
pop
cmp
retf
call
mov
cmc
add
scas
xchg
add
cmp
bound
fist
out
mov
mov
test
sbb
out
cmc
(bad)
jb
and
ret
cmp
xchg
out
xchg
pushf
sub
pop
adc
int
mov
mov
or
lahf
xor
sbb
dec
cmps
mov
test
push
sub
mul
sub
repz
xchg
sub
jp
or
repz
mov
fwait
cld
pop
outs
pop
xchg
cdq
fnstcw
psubsb
je
sbb
lahf
cmps
mov
test
cmp
inc
jae
mov
and
test
mov
popa
imul
mov
test
or
push
sub
or
in
add
sub
test
jl
push
xchg
(bad)
inc
cmp
lea
and
or
cmp
inc
dec
rcr
fprem1
mov
jae
ror
popa
and
outs
cmp
js
call
clc
mov
add
pusha
mov
xor
imul
cmp
jmp
inc
push
fnsave
cs
pop
sbb
clc
retf
mov
dec
jmp
and
mov
and
popa
push
adc
pop
sub
fs
add
fdiv
jb
or
retf
xchg
mov
pop
and
mov
call
clc
push
dec
jmp
jno
in
cld
inc
cmp
aaa
mov
aad
adc
xchg
inc
rol
cmp
sbb
push
setns
jmp
inc
fwait
jecxz
imul
inc
cmp
adc
jno
inc
lods
mov
dec
sti
lahf
retf
fwait
pop
pop
(bad)
fstp
pop
inc
imul
inc
mov
gs
xchg
stos
cmps
(bad)
enter
adc
fsub
(bad)
js
or
movs
loop
pop
mov
sub
add
popf
inc
nop
hlt
sub
mov
arpl
push
pushf
stos
adc
or
pop
je
arpl
leave
fs
pop
inc
enter
(bad)
ins
dec
stc
jnp
sub
dec
mov
push
enter
sub
test
adc
rcl
pop
inc
cli
pop
xchg
out
fsubr
mov
jo
das
inc
dec
dec
mov
retf
cwde
dec
shr
in
retf
iret
sbb
enter
dec
mov
or
les
pop
sahf
xchg
and
pushf
fnstenv
xor
mov
push
ret
inc
pop
add
push
mov
sbb
iret
lock
inc
into
or
mov
pusha
shl
mov
mov
sub
js
(bad)
mov
and
mov
push
pop
push
cmp
dec
out
hlt
jno
jge
pop
pop
and
mov
mov
adc
lds
imul
pushw
inc
pop
dec
jp
push
mov
jns
pop
push
(bad)
or
stos
pop
mov
out
xchg
and
ret
cmps
mov
icebp
fdivr
dec
popa
call
adc
adc
out
cmp
jo
sub
ret
xor
ret
mov
cmp
dec
dec
sub
aad
or
test
adc
push
retf
lea
and
mov
les
cmps
dec
pop
test
jge
and
cmp
cmp
sub
mov
imul
inc
sahf
push
pop
xchg
test
sbb
inc
test
inc
movs
push
imul
push
xchg
into
popa
mov
jecxz
mov
jp
(bad)
jg
in
cdq
repz
xchg
scas
jg
test
mov
(bad)
out
shl
xor
fs
ret
sbb
push
jle
lea
adc
lea
movs
imul
pop
ds
lahf
inc
inc
pop
push
jno
mov
inc
(bad)
pop
scas
dec
inc
ror
sub
push
das
ds
rcr
sar
mov
lods
xor
cmc
sub
cmc
(bad)
hlt
jb
dec
ds
outs
jecxz
imul
sbb
jge
movs
pop
push
mov
fidivr
add
sbb
(bad)
and
cmp
gs
xor
xchg
xchg
push
push
push
push
pop
or
mov
jge
push
adc
ror
pop
das
aad
lahf
das
adc
shr
push
hlt
ja
xchg
inc
mov
bnd
(bad)
pop
xchg
gs
ins
cmp
xchg
sbb
sub
adc
jp
addr16
or
sbb
or
push
fxch
loop
mov
std
rcr
cmp
mov
out
sub
mov
leave
push
mov
and
imul
mov
adc
inc
xchg
out
dec
cmp
(bad)
mov
(bad)
xchg
jne
hlt
dec
pop
adc
and
es
cmp
data16
jle
ja
out
ret
pop
(bad)
adc
cmp
fist
je
jnp
cdq
test
cmpxchg
add
or
pop
mov
loopne
fisub
push
sbb
dec
mov
stos
pop
call
out
push
das
out
mov
lea
(bad)
(bad)
test
fbld
int3
mov
aaa
or
cmp
xor
cwde
sbb
sub
cs
cs
arpl
lods
stc
lock
push
aaa
hlt
loope
xchg
sub
pop
xchg
xor
jle
adc
dec
(bad)
sub
mov
ret
idiv
imul
fstp
fbstp
test
ret
mov
jo
into
sub
mov
pop
xor
cld
popa
xor
xchg
add
neg
test
or
sbb
sub
sti
retf
dec
add
addr16
ja
fwait
in
pushf
icebp
mov
rcr
or
push
out
push
sub
pusha
ins
xor
dec
sub
adc
dec
pop
add
xor
test
sbb
push
inc
push
mov
jbe
jmp
pop
xchg
gs
or
push
daa
in
stos
lahf
inc
icebp
dec
inc
(bad)
call
int
lods
cmp
scas
xchg
sbb
retf
enter
repnz
cmp
fdiv
int
data16
sbb
mul
pop
push
loop
std
dec
dec
inc
cmc
ja
or
lds
fld
dec
jbe
test
ds
sub
and
sbb
inc
leave
adc
xor
jle
jb
mov
aas
lods
inc
(bad)
ja
nop
imul
or
pop
jmp
stc
dec
sub
dec
jne
pop
push
adc
popf
mov
repz
mov
out
mov
and
dec
push
mov
test
adc
mov
mov
cmp
lods
mul
pop
dec
mov
mov
inc
stos
aas
iret
mov
loopne
jb
mov
mov
push
repnz
icebp
jecxz
cld
lahf
jns
retf
pop
jl
mov
ins
fcom
and
shr
fwait
fwait
xor
cmps
xchg
ds
xchg
bound
pop
xor
int
es
int
xchg
sub
sub
movs
fadd
mov
fdivr
stc
xor
push
push
test
inc
imul
xor
out
jmp
je
ret
pop
sbb
jns
xor
and
jle
jo
ss
xchg
ficomp
push
fstp
mov
daa
dec
mov
xchg
pop
enter
arpl
add
jle
das
stos
xlat
mov
lds
clc
cld
jge
mov
shl
sub
call
enterw
sbb
mov
inc
pop
cld
push
imul
(bad)
add
mov
push
outs
push
mov
ja
xchg
or
jmp
and
aam
mov
pop
dec
movs
aad
lock
adc
inc
cmp
dec
fdiv
pop
loope
add
scas
arpl
cmp
cli
lea
(bad)
movs
mov
lods
push
mov
pop
add
jb
xor
push
add
or
stc
xchg
nop
(bad)
fistp
sub
mov
pop
leave
jo
jo
popa
div
add
sbb
vcvtpd2ps
dec
jnp
ud0
lock
mov
inc
ss
ror
and
xor
sbb
cmc
push
(bad)
mov
ja
and
cs
xchg
mov
add
inc
fmul
js
xchg
(bad)
jle
push
xchg
inc
jo
retf
adc
pop
dec
(bad)
iret
inc
jne
add
inc
jnp
cli
pop
fld
xchg
adc
fsub
mov
repz
(bad)
ins
inc
cdq
xor
dec
fs
jl
dec
aam
dec
aam
mov
clc
mov
mov
xor
inc
fs
mov
jge
out
mov
dec
les
fstp
jge
push
mov
shl
mov
popf
xor
(bad)
xchg
pop
inc
call
call
adc
mov
mov
xchg
stc
push
cli
scas
dec
mov
mov
dec
mov
sbb
daa
push
sub
pushf
push
inc
jae
and
sar
jae
cmp
test
jb
push
rol
mov
daa
gs
xor
cmp
lods
jnp
(bad)
mov
xchg
sbb
loop
fcmovnbe
xchg
nop
fcomip
add
popa
lock
pop
loopne
js
outs
xchg
out
repnz
mov
jl
stos
in
sbb
sbb
inc
mov
xchg
dec
fs
or
bound
call
xchg
out
bound
jno
jecxz
clc
mov
mov
mov
lea
sbb
arpl
data16
mov
lahf
fnstenv
int3
sub
xlat
mov
mov
dec
idiv
js
iret
(bad)
aam
mov
mov
sub
cmps
jmp
pop
rol
aam
cs
sub
add
push
sub
pop
loope
(bad)
dec
fwait
xor
clc
das
jle
movs
and
xchg
ret
mov
jne
jg
jne
test
push
push
out
inc
inc
sbb
ds
jmp
das
test
jo
mov
add
les
xchg
lods
xor
lea
popa
test
lock
pop
cs
pop
loop
sbb
daa
xlat
jbe
aaa
xchg
movs
cmp
xchg
cli
aad
int3
mov
repz
retf
sub
jno
aad
and
sti
loopne
les
pop
sub
out
xchg
aas
dec
adc
sub
in
add
xor
push
push
aam
clc
rol
jl
dec
inc
data16
bnd
push
mov
mov
js
xor
enter
shl
pop
jl
or
inc
in
sbb
xchg
and
std
std
jge
lods
sbb
jbe
dec
aaa
frstor
mov
add
sub
dec
das
pop
ds
cmp
or
outs
add
push
adc
ret
lods
cmp
outs
ret
dec
dec
popa
mov
pop
mov
loopne
jne
inc
or
push
call
xchg
push
dec
add
nop
cmp
pop
sub
add
cmp
jg
jge
pop
clc
or
cdq
out
gs
fst
cmps
or
aad
mov
dec
jecxz
ror
jb
hlt
ret
jmp
call
neg
ss
repz
adc
cmps
nop
enter
sub
stos
push
aas
scas
cmc
mov
mov
out
mov
push
stc
add
ret
mov
jl
loopne
pop
lock
shl
xor
mov
daa
xchg
inc
or
mov
fisttp
add
loopne
or
aam
xor
mov
mov
popa
fidiv
das
mov
cmp
sub
pop
and
pushf
or
imul
rcl
(bad)
loop
xor
imul
in
sub
dec
dec
push
adc
dec
cwde
test
or
test
mov
ds
or
push
inc
mov
std
aaa
cmps
not
sub
mov
mov
mov
in
add
cmp
xchg
aad
inc
test
iret
(bad)
add
enter
jecxz
retf
cmc
jbe
sbb
and
or
loop
stos
movs
into
xor
push
push
mov
xchg
jnp
push
mov
cmp
xor
cmp
(bad)
mov
sbb
(bad)
inc
lds
jl
fcmovne
cld
pop
retf
xchg
push
call
scas
pop
push
cdq
pop
push
aam
mov
push
aad
(bad)
cmp
or
mov
pop
pop
call
push
xor
mov
sbb
clc
push
enter
int
and
lds
mov
loope
clc
adc
ror
hlt
jmp
or
daa
xchg
sub
mov
fcmovnb
gs
icebp
lea
dec
pop
xchg
push
inc
fwait
daa
push
enter
(bad)
xchg
push
mov
test
mov
test
xlat
out
mov
ffree
push
dec
xor
mov
push
icebp
push
(bad)
cmp
sbb
pop
push
loopne
ds
neg
cli
add
jg
jge
xchg
sub
dec
rol
mov
jl
sti
xchg
jnp
ja
mov
sbb
std
jecxz
psubq
cmp
inc
lock
int3
pop
pop
sbb
ret
aad
push
mov
pop
add
dec
je
mov
pop
mov
inc
dec
fisttp
dec
mov
sub
mov
sbb
xchg
sbb
dec
fmul
retf
xchg
ret
cwde
mov
shl
mov
cmp
pop
enter
dec
sti
imul
setge
div
repz
xchg
adc
mov
bound
popf
in
cld
fdiv
dec
sbb
rcr
leave
into
jb
or
cmp
repnz
xchg
jae
inc
ds
fwait
icebp
mov
mov
or
nop
imul
sbb
mov
std
mov
mov
jle
and
jno
inc
ror
stc
pop
jno
stos
in
jae
cs
and
jecxz
or
adc
test
out
iret
dec
in
nop
out
pop
jl
mov
daa
push
clc
fld
test
mov
repz
ror
mov
xchg
cwde
pop
(bad)
mov
(bad)
jbe
jp
ins
test
mov
std
pop
test
sbb
dec
and
xchg
(bad)
push
arpl
cmc
into
jge
data16
or
ret
and
fnsave
out
(bad)
out
mov
xchg
push
sbb
inc
ror
data16
sbb
lahf
push
je
or
(bad)
aas
adc
pop
mov
cmp
xor
test
adc
pop
mov
pushf
or
mov
add
mov
rol
adc
scas
jle
cmp
test
ins
mov
int
sub
sahf
lods
push
pop
out
mov
xchg
(bad)
dec
in
inc
or
pop
stc
rcr
mov
fld
push
lea
in
outs
fst
sub
nop
dec
mov
int3
and
add
sub
call
push
nop
std
or
inc
call
je
and
inc
add
pop
sbb
test
mov
push
sub
in
sbb
sub
out
cmps
stc
and
adc
jecxz
fstp
fisubr
mov
sahf
iret
gs
inc
ss
fisubr
dec
push
dec
and
test
push
mov
sbb
lea
jp
pusha
sub
call
dec
cld
retf
adc
movs
jg
adc
or
mov
inc
pop
and
aaa
sbb
mov
mov
lods
mov
mov
in
jbe
inc
sbb
xor
repz
stc
push
jmp
sbb
pop
sbb
fdiv
mov
(bad)
jle
in
cmp
mov
xor
loope
sub
sub
push
xor
sbb
call
inc
cmp
and
arpl
loope
mov
push
std
cmp
or
ja
mov
push
sbb
cs
mov
jecxz
adc
inc
dec
jge
mov
sbb
out
and
jmp
lds
sbb
push
xchg
rcl
dec
nop
mov
clc
scas
test
pop
retf
inc
pop
popa
loopne
xor
fdiv
cwde
mov
mov
sub
pop
mov
add
xor
and
add
loopne
push
out
mov
sahf
mov
test
les
lods
or
sbb
sub
fld
sbb
xchg
test
inc
mov
sub
sub
test
xchg
gs
inc
es
les
aaa
imul
mov
mov
movs
push
sub
xchg
xor
ds
dec
les
xor
lock
jno
add
sbb
fs
xor
pop
xchg
iret
push
movs
mov
mov
fwait
or
mov
sub
scas
mov
mov
fdivr
pop
mov
sbb
int
popf
test
ficom
les
(bad)
add
icebp
test
or
pop
scas
movs
add
add
pop
stc
pop
inc
test
mov
dec
mov
dec
enter
lods
cmp
loope
mov
js
jno
out
in
std
xor
push
rol
sbb
jl
mov
inc
push
and
sub
call
jp
cmovb
ins
push
lds
jne
enter
pop
ds
push
(bad)
mov
mov
test
push
test
push
jne
call
dec
adc
stos
add
icebp
fidivr
stos
test
dec
mov
setp
cs
popa
mov
xchg
(bad)
and
xchg
inc
mov
mov
mov
aas
push
outs
jmp
mov
add
sub
enter
mov
ins
out
jmp
(bad)
and
mov
popa
inc
mov
enter
test
pop
stos
mov
pop
sar
fbstp
inc
pop
mov
outs
out
je
xlat
mov
push
pushf
(bad)
pop
jecxz
and
jnp
mov
mov
mov
and
and
jge
xor
mov
adc
adc
daa
test
cmps
xor
mov
call
and
jg
sub
inc
sub
arpl
dec
fldcw
jp
mov
test
outs
pop
mov
aad
jo
loop
mov
mov
test
push
cmp
cld
repz
pop
pop
ins
dec
push
fs
vdivss
mov
out
fwait
sar
stos
jmp
idiv
and
addr16
jg
cmps
fldenv
pop
xor
mov
pop
pop
adc
xor
jmp
adc
fwait
cs
fistp
xchg
jge
adc
fstp
fs
sub
fwait
int3
adc
cld
mov
popa
push
out
pop
push
shl
add
jl
leave
xchg
sahf
mov
xchg
in
fstp
dec
jne
test
cmps
fwait
cmp
das
mov
int
std
lock
fs
inc
movs
adc
push
sub
cmps
hlt
test
mov
mov
out
xchg
sub
mov
mov
jmp
test
add
cmc
and
jb
in
dec
mov
rcr
and
mov
std
jbe
pusha
sar
mov
mov
outs
cmp
adc
lahf
leave
mov
arpl
rcl
xor
retf
and
pop
mov
xor
jo
stos
fucomip
fwait
mov
sub
push
xor
adc
clc
mov
pushf
mov
fs
mov
xchg
sbb
(bad)
out
jl
and
add
add
sub
inc
fwait
xchg
fsubr
push
(bad)
dec
repnz
data16
mov
icebp
sub
stos
mov
adc
les
sub
inc
neg
lods
stos
or
dec
aaa
fsubr
gs
cmps
cmps
dec
loopne
pop
lods
mov
cdq
mov
dec
mov
fsubr
fwait
popf
movs
jle
ficomp
ret
and
xor
fimul
sahf
xchg
lds
imul
mov
pop
hlt
jg
fwait
pop
or
jnp
jge
sbb
stos
out
in
cmps
ret
ja
or
std
and
xor
sub
jecxz
test
into
push
loopne
mov
xor
mov
nop
je
jb
dec
js
ficom
xor
pop
test
adc
or
movs
xlat
imul
pop
push
outs
push
aaa
dec
scas
jnp
push
xor
sti
loopne
add
out
jmp
xor
sub
xchg
int3
mov
fs
mov
inc
mov
(bad)
sub
outs
loopne
mov
and
or
outs
fadd
out
dec
imul
sbb
add
dec
sbb
cli
push
jae
add
std
mov
std
(bad)
push
add
jbe
pop
jge
mov
xor
mov
mov
test
sbb
or
popf
jle
pop
in
mov
dec
xor
sub
popf
and
cmp
imul
push
push
fwait
adc
imul
and
sub
jno
and
icebp
adc
xor
rol
xchg
test
les
int
lods
add
jl
out
inc
pop
adc
(bad)
loop
pop
adc
les
sub
rcr
call
cmp
leave
dec
xlat
loopne
cmp
repnz
dec
adc
pop
or
mov
lock
or
jbe
push
xor
inc
xor
sub
dec
xor
cmp
jmp
xchg
xchg
xchg
cmps
push
or
fs
aaa
jge
adc
sti
retf
aas
pop
mov
gs
stos
in
push
mov
(bad)
cwde
sub
je
jg
adc
lods
inc
push
retf
push
inc
push
stos
mov
rcl
test
arpl
pop
popf
ins
mul
jmp
add
test
(bad)
in
xchg
sbb
mov
adc
hlt
add
in
rcr
clc
inc
inc
inc
(bad)
pop
ret
(bad)
frstor
xor
mov
jl
push
out
std
pop
fnstsw
enter
gs
ja
leave
cld
fsubr
pop
dec
push
xchg
jp
mov
cmp
(bad)
cs
inc
hlt
add
aad
popf
sbb
sub
xor
inc
lds
pop
inc
inc
ja
dec
imul
loopne
sub
call
pop
out
data16
cmp
push
stos
mov
pop
mov
fdiv
add
mov
clc
inc
inc
cwde
clc
into
push
mov
xchg
jmp
mov
cdq
scas
js
lea
dec
mov
(bad)
(bad)
fsubr
fisub
pop
sbb
adc
push
inc
xor
ror
data16
movs
ja
ins
popf
push
nop
test
xchg
loop
movs
add
push
mov
sub
ins
les
ret
fs
dec
adc
lock
arpl
sbb
fidivr
addr16
xor
and
jmp
add
or
in
hlt
xchg
mov
(bad)
in
(bad)
es
mov
cli
or
mov
in
aaa
inc
sbb
lds
and
xor
jb
int3
push
jne
mov
je
fstp
retf
add
xchg
outs
mov
xchg
xor
adc
mov
stos
pop
stos
xlat
lods
push
(bad)
xlat
ins
scas
movs
mov
loope
outs
cmc
fbstp
sti
push
in
in
repz
and
mov
out
jmp
rol
sub
fwait
adc
je
(bad)
adc
dec
dec
leave
pusha
repz
jmp
inc
je
add
or
fcomp
addr16
pop
jmp
jb
mov
lea
gs
push
mov
sub
pop
shr
mov
xchg
and
(bad)
mov
imul
sbb
outs
xchg
fimul
cld
out
test
and
das
repz
push
lahf
jmp
(bad)
addr16
js
cmp
sbb
and
push
js
mov
add
cwde
and
mov
(bad)
movhps
cmps
cwde
xor
mov
lods
dec
cwde
dec
inc
(bad)
fld
mov
daa
inc
inc
jnp
xor
mov
popf
and
sti
sahf
lea
fwait
mov
(bad)
aam
push
xchg
js
xchg
sub
je
inc
mov
sub
mov
mov
pop
pop
add
lds
arpl
dec
dec
push
and
xchg
jae
shr
div
and
jbe
cmp
push
mov
add
ins
inc
mov
pop
xchg
pop
adc
sbb
xchg
outs
test
jo
and
adc
jae
jmp
movs
inc
mov
fucom
pop
das
imul
addr16
add
mov
push
retf
cs
ret
jbe
sub
stc
dec
add
or
pop
loope
adc
mov
dec
add
push
push
xor
add
add
lds
push
aad
xchg
sbb
sub
mov
push
push
inc
pop
test
xchg
loope
frstor
nop
xchg
sub
cmp
stc
outs
add
ins
mov
fild
jne
mov
gs
sub
mov
sahf
cmc
inc
jo
in
mov
or
jg
int3
bswap
out
sbb
aad
cmp
dec
out
stos
mov
outs
xor
pushf
xchg
sbb
(bad)
fstp
adc
aaa
pop
xor
sbb
out
sub
(bad)
fisub
int
sub
cwde
or
cdq
pop
imul
pushf
mov
arpl
adc
lods
add
in
mov
sbb
ja
add
and
fstp
sbb
push
pop
lahf
push
mov
adc
icebp
jmp
daa
fcomp
adc
lds
mov
jo
mov
add
js
in
or
fidivr
xlat
jae
mov
in
and
xchg
jb
aam
jae
stc
or
cs
or
pop
stos
fldenv
or
dec
(bad)
imul
out
ror
in
lock
and
ret
sub
int
xchg
(bad)
imul
mov
jne
jo
sbb
adc
gs
aaa
mov
not
jmp
push
pop
jmp
push
cmp
sti
xchg
enter
ret
cmp
sbb
push
sub
sti
cmp
adc
fmulp
daa
cld
or
inc
mov
aas
mov
hlt
push
adc
int3
pop
cmps
push
or
xor
push
outs
es
dec
mov
frstor
dec
push
ror
mov
sub
mov
xor
mov
cmp
adc
mov
or
jae
jo
jecxz
mov
push
sbb
or
fild
cmp
rcl
stos
popf
dec
adc
cmps
push
dec
adc
dec
mov
pushf
jns
aad
adc
shl
xlat
into
mov
cli
push
jno
and
xlat
aas
sub
pop
(bad)
fidiv
pop
push
fistp
dec
call
loopne
sub
imul
push
adc
mov
adc
(bad)
ins
ins
into
and
dec
xchg
jne
jmp
jbe
popa
leave
cmp
nop
ror
xchg
pop
lods
pop
and
sub
mov
add
dec
mov
stos
jl
out
imul
jne
jge
push
test
and
lds
or
sbb
cli
sub
add
cmc
add
pop
frstor
(bad)
test
mov
std
out
inc
mov
lods
xor
ins
mov
xor
xor
fiadd
sub
push
mov
xchg
sti
and
cmp
add
adc
jno
sub
and
sbb
push
call
push
mov
push
dec
jg
data16
add
inc
in
stos
ds
popa
call
aaa
or
dec
scas
and
jne
and
or
mov
jl
ds
das
or
mov
push
rcr
jne
in
(bad)
lea
mov
inc
iret
push
test
dec
popf
enter
fwait
dec
sbb
popf
jge
stos
sbb
push
dec
mov
add
and
push
shl
ja
mov
(bad)
in
cwde
fadd
leave
icebp
mov
jl
jbe
cmovo
xor
imul
cld
in
(bad)
repnz
imul
scas
dec
popa
repz
sub
hlt
jecxz
lods
jp
or
mov
jbe
mov
cld
sub
mov
add
fwait
and
popf
ja
inc
cmp
aad
and
jo
push
lahf
hlt
inc
shl
adc
xor
cmc
aas
add
lds
cwde
jg
addr16
pop
mov
add
mov
push
dec
xchg
icebp
xlat
push
mov
aaa
xchg
mov
push
sbb
fs
jecxz
into
rcl
fisttp
push
xchg
out
je
clc
out
jecxz
cmps
popa
or
cmps
pop
es
dec
add
lods
dec
add
shl
dec
daa
mov
dec
jg
dec
xor
and
dec
xchg
cmp
add
cld
cmps
pop
ins
sbb
shl
pop
stc
mov
pop
pop
mov
push
out
pop
jge
xchg
sbb
aam
push
pop
push
in
mov
ja
inc
xchg
out
mov
adc
mov
js
and
cmp
pusha
sub
add
sub
inc
les
push
xor
push
xchg
(bad)
gs
mov
sahf
(bad)
jmp
aad
inc
rcr
or
dec
pop
jae
xor
jno
arpl
xor
inc
pop
imul
stos
mov
aad
mov
adc
cmp
repnz
sbb
sub
sub
add
sbb
adc
dec
cmp
push
test
movs
mov
mov
inc
pop
imul
ret
mov
mov
cmp
pop
fcomi
push
mov
call
mov
cli
test
jns
das
sahf
push
retf
mov
mov
sub
lea
sbb
inc
xor
add
popf
out
lods
aam
neg
bound
(bad)
push
mul
popa
js
xor
push
mov
cli
dec
arpl
jae
mov
mov
and
cmp
mov
push
push
sub
mov
cli
add
std
clc
jnp
xlat
cmp
mov
xor
adc
dec
vpunpcklbw
cdq
popf
cmps
xchg
out
pop
xor
push
int3
add
in
and
fstp
mov
push
fsub
adc
xchg
add
xchg
push
push
sbb
push
sar
or
hlt
ja
pushw
jle
or
jnp
out
(bad)
sti
add
pop
and
inc
mov
jmp
and
mov
inc
movs
cmp
sbb
scas
cmc
and
(bad)
scas
xor
xor
std
jo
stc
mov
sub
outs
sbb
stc
mov
sti
fs
pop
call
add
push
pop
cmc
aam
(bad)
fwait
xchg
cmp
mov
adc
lock
sub
sub
int
xor
ja
jb
fsub
test
cmp
push
and
push
inc
call
lock
int
cmp
pop
sbb
adc
stos
int
xor
daa
gs
cmp
or
daa
inc
sub
retf
xchg
sar
push
and
jno
sub
push
dec
xchg
xchg
cmp
and
push
(bad)
lock
ins
xchg
fadd
pushf
cmps
mov
aaa
pop
pop
in
cmps
cmps
mov
pop
inc
jo
sbb
sti
fbstp
sbb
or
sub
das
fimul
fimul
inc
push
xchg
inc
push
rcl
mov
jmp
loop
sbb
jge
xor
jnp
scas
daa
mov
cmp
test
mov
ss
inc
mov
shr
mov
mov
add
cmp
sbb
ja
ins
ret
mov
fcom
mov
imul
cmp
test
cs
fwait
repnz
push
loopne
push
mov
adc
and
mov
jecxz
and
dec
add
popf
or
ds
nop
loope
adc
xchg
out
(bad)
jp
test
jl
pop
(bad)
out
fdivr
(bad)
fild
sub
push
clc
rcr
jo
sub
aad
mov
adc
push
add
xor
and
(bad)
imul
enter
dec
(bad)
int3
adc
call
inc
and
sbb
call
xchg
or
pop
dec
out
inc
daa
cli
out
mov
in
out
int
and
cmp
or
aad
std
call
popf
add
gs
test
xor
cmp
and
mov
cmp
mov
inc
cmp
inc
cwde
or
pop
pusha
leave
fs
cs
mov
cmp
leave
mov
sbb
out
ins
or
les
add
scas
loopne
pop
test
fdivr
and
inc
jmp
sub
popf
inc
fadd
fnsave
xchg
ret
shl
mov
xor
ja
and
out
call
test
mov
lods
loopne
call
pop
(bad)
in
iret
movs
in
lahf
mov
pop
xlat
mov
inc
xchg
xchg
test
fnsave
outs
sahf
lds
push
jbe
lock
cmp
and
pop
cmp
inc
out
push
aad
adc
scas
mov
ins
mov
mov
cli
jg
adc
sar
dec
sub
jmp
nop
push
mov
test
push
or
xor
and
int
gs
(bad)
out
test
fwait
push
dec
std
(bad)
sbb
xchg
(bad)
mov
push
pop
mov
mov
inc
push
mov
out
sbb
in
das
sub
mov
xor
add
xor
adc
adc
(bad)
stos
mov
jnp
(bad)
mov
loop
pusha
imul
dec
dec
push
or
test
mov
sti
mov
pop
iret
shl
cmp
add
sbb
ja
stc
repnz
gs
jmp
enter
movs
jne
cmp
and
pop
lahf
inc
(bad)
cmp
stos
jnp
sub
mov
lahf
add
adc
sub
add
mov
add
cmp
mov
into
je
inc
lea
call
ret
lods
cmp
lea
icebp
aaa
mov
dec
clc
sahf
outs
ins
push
out
mov
jae
out
call
es
inc
repz
cld
xchg
aaa
mov
sahf
mov
cmp
xchg
pop
push
and
push
in
add
es
shl
mov
xor
cli
add
ret
adc
lds
lods
push
mov
add
push
sbb
cld
add
popa
jo
les
mov
sub
mov
cmp
sbb
movs
test
xchg
jg
pop
not
mov
sbb
sbb
xor
adc
arpl
adc
cwde
jnp
lea
dec
popa
leave
stos
pop
(bad)
cwde
jbe
sub
mov
inc
sbb
jae
cmp
icebp
jmp
push
push
outs
out
dec
dec
aaa
rcl
fcmovnb
cmp
aaa
hlt
gs
sbb
mov
xchg
sub
inc
stos
pop
pop
iret
dec
push
hlt
jl
cmp
adc
xor
cmp
sbb
test
outs
xor
jb
in
or
mov
in
mov
dec
out
into
push
lahf
lock
dec
scas
push
popa
dec
in
test
inc
push
aaa
dec
popf
pop
popf
in
push
cmp
fmul
pop
hlt
(bad)
add
sub
and
adc
push
jg
pop
lods
int
data16
stos
sbb
in
(bad)
xchg
cmp
push
sub
test
clc
imul
fsub
jle
mov
arpl
pusha
push
push
(bad)
into
test
(bad)
jmp
out
adc
inc
adc
adc
mov
push
idiv
xchg
cmp
mov
cmp
nop
enter
shr
fmul
loop
sub
cmp
out
and
daa
jnp
dec
adc
xor
mov
xor
mov
ror
dec
jns
loopne
movs
gs
fst
js
aas
popf
sbb
push
or
std
add
dec
pop
aam
test
sub
jecxz
cmp
mov
xchg
push
ja
push
outs
mov
aaa
pushf
mov
sub
loopne
sbb
xchg
sub
sub
js
int
adc
ins
not
dec
popf
mov
sar
das
ret
test
fcom
and
rcl
xchg
xchg
fstp
test
retf
pusha
lods
sahf
mov
jns
lods
dec
rcr
xor
adc
mov
inc
inc
outs
in
add
aam
bound
enter
push
jg
sbb
sbb
les
in
dec
or
test
mov
ja
or
jp
mov
add
adc
bound
enter
ja
inc
mov
adc
xor
cmp
ret
stc
or
pop
dec
xchg
sbb
sahf
outs
inc
mov
adc
push
(bad)
fisubr
xor
mov
call
inc
repnz
jg
xchg
or
cli
inc
cmp
mov
repnz
test
(bad)
ja
mov
jo
or
lds
sahf
push
push
out
or
test
push
(bad)
push
rcl
cmps
jg
sub
gs
sub
popa
fld
mov
add
xchg
jl
cld
push
mov
dec
into
fild
lock
jae
aam
cs
movs
data16
es
dec
out
mov
(bad)
ja
jmp
ins
lods
cmc
retf
(bad)
mov
lds
add
jae
add
(bad)
pop
(bad)
stc
cdq
xchg
mov
dec
inc
rcr
adc
or
enter
(bad)
loop
sbb
dec
mov
cmp
adc
and
inc
push
sbb
jo
popa
sub
sub
popa
push
pop
fs
mov
aas
mov
jo
sbb
mov
scas
add
add
call
xor
xor
mov
adc
mov
lea
add
mov
outs
ins
test
xor
push
or
and
enter
lods
mov
imul
push
xchg
mov
outs
popa
sub
sbb
dec
pushf
cdq
test
sti
fst
or
(bad)
in
xor
or
cmp
cmp
cmps
ret
hlt
fstp
jecxz
sub
sbb
jecxz
inc
and
mov
mov
aas
es
not
movs
pop
das
lods
imul
push
cdq
fsubr
mov
aaa
sub
test
aas
aam
or
jbe
mov
retf
pop
rcr
adc
mov
add
pop
pop
xor
mov
adc
xchg
fcomp
push
bound
jnp
adc
(bad)
dec
ds
sub
jg
fsubr
fs
sbb
or
nop
test
out
lea
call
xadd
push
popa
dec
pop
lods
sbb
jmp
jne
fcmove
cld
stos
ret
sub
out
fs
jge
push
add
sub
mov
inc
js
aas
outs
cmp
or
pop
push
dec
push
shr
add
pop
pop
je
daa
and
pop
div
popf
mov
cwde
in
mov
out
outs
inc
out
sbb
mov
pop
stos
test
sar
mov
jle
lock
mov
hlt
adc
test
dec
adc
aas
ja
mov
(bad)
addr16
cmp
pop
cwde
xor
imul
stos
xchg
jge
sub
pop
xchg
inc
jb
popa
sub
mov
cmp
and
fistp
xor
rol
sub
xchg
sbb
sub
ss
pop
leave
out
mov
iret
mov
xor
sbb
out
stc
pushf
mov
xchg
add
mov
lds
sub
fwait
push
aad
mov
jp
shl
pop
mov
and
fistp
push
(bad)
sbb
jp
fs
sbb
ret
mov
stc
or
aad
push
movs
out
add
jp
inc
mov
shl
rol
enter
inc
sbb
ror
jnp
stc
fcomip
dec
xlat
inc
adc
cmp
rcr
ins
and
leave
jae
xchg
dec
inc
ins
push
and
stc
mov
mov
dec
rcr
enter
int3
int
sub
push
fsub
xchg
push
sub
mov
call
pushf
lea
movs
mov
lea
mov
fwait
jle
push
rcr
hlt
(bad)
adc
or
aam
mov
clc
pop
in
cld
adc
push
call
outs
sbb
std
sub
mov
(bad)
xlat
imul
jle
(bad)
out
sbb
imul
(bad)
movs
add
mov
mov
aaa
jp
inc
push
adc
mov
cmps
cs
retf
xchg
inc
jns
add
enter
mov
fstp
xchg
outs
push
mov
hlt
dec
xchg
sbb
ins
(bad)
xchg
out
sti
pop
push
pop
and
or
dec
lods
and
jo
pop
loopne
sbb
mov
inc
pop
jg
xlat
push
adc
lock
pop
cli
or
jecxz
cmp
pop
in
push
or
out
cmp
pop
push
(bad)
push
cmp
xchg
pop
inc
in
mov
js
je
xchg
xchg
lods
ja
rcr
dec
test
lock
mov
(bad)
out
or
cmp
ins
int3
jne
mov
repz
outs
mov
jp
mov
push
shl
dec
jbe
xchg
add
jge
mov
dec
dec
xor
jmp
pop
push
mov
call
dec
mov
je
xchg
mov
jecxz
mov
fld
pop
xchg
and
mov
sbb
fistp
lahf
dec
ss
movs
mov
ret
jbe
retf
jmp
jge
scas
jne
out
stos
cmps
sbb
mov
outs
std
loop
jns
adc
outs
xor
out
mov
ins
add
mov
pop
mov
outs
and
inc
mov
or
not
xor
mov
shr
dec
mov
mov
xchg
xchg
hlt
movs
jne
jnp
cmp
lods
imul
and
jle
sbb
jnp
jge
adc
cli
fldenv
sub
mov
popf
mov
jl
call
pop
adc
aaa
js
dec
push
mov
leave
enter
(bad)
data16
dec
movs
dec
adc
js
les
stos
cmps
(bad)
mov
ds
inc
inc
mov
dec
fwait
shl
scas
mov
shl
clc
mov
xor
xor
clc
fidiv
cmp
sbb
adc
mov
scas
jmp
push
xchg
cli
dec
neg
(bad)
fsin
out
lock
cdq
xchg
push
imul
push
and
and
cdq
ins
sbb
aam
daa
mov
and
mov
push
repz
ror
inc
dec
cmc
sahf
cmc
popa
pop
movs
retf
std
xchg
enter
xor
(bad)
or
xor
push
lods
in
ror
sub
mov
inc
mov
shl
push
xchg
scas
cmovae
cmp
and
idiv
popf
dec
jg
mov
mov
inc
in
outs
adc
jne
ins
imul
jle
test
gs
sahf
xchg
sbb
mov
mov
(bad)
addps
sahf
popf
outs
cmps
sub
adc
pop
sub
outs
div
cs
lods
push
jmp
fcom
out
dec
jb
aas
xchg
les
xlat
sbb
or
push
inc
andnps
add
push
mov
into
shl
inc
push
jmp
icebp
inc
outs
add
lods
pop
loopne
ret
fldenv
jmp
(bad)
mov
(bad)
out
cdq
push
aaa
adc
or
dec
mov
mov
xchg
pop
icebp
push
in
cmp
jnp
jnp
pusha
or
xor
mov
stos
sub
pop
push
ret
mov
prefetcht1
jns
mov
pop
or
icebp
mov
sbb
lahf
push
pop
aad
pop
sub
addr16
xchg
test
movs
push
leave
dec
sub
(bad)
push
repnz
mov
push
iret
jns
add
(bad)
mov
or
add
repz
jnp
jl
dec
add
imul
xor
(bad)
jmp
mov
mov
xchg
inc
cld
rcr
push
mov
jbe
scas
jno
sahf
sahf
xchg
jge
mov
ins
stc
mov
mov
adc
aaa
mov
cmps
adc
mov
jns
push
bound
imul
std
push
pop
adc
bound
(bad)
cmps
cdq
xchg
sbb
jmp
mov
bound
das
(bad)
das
xchg
lods
dec
lods
inc
loop
daa
shl
iret
xchg
or
add
inc
(bad)
fdiv
arpl
mov
jl
int
xchg
and
popf
mov
fs
out
iret
ja
clc
xlat
push
push
clc
les
popa
or
ret
mov
fwait
jo
out
int3
fistp
inc
gs
jl
add
sub
push
les
cdq
and
xchg
retf
add
mov
adc
cmp
pop
dec
fwait
call
mov
mov
sub
repnz
mov
dec
jno
ret
lock
scas
lds
dec
xor
sbb
je
shl
jnp
jl
push
sbb
into
lock
and
push
enter
es
fild
leave
xor
ss
mov
mov
retf
fisub
fnsave
pop
cmp
cmc
add
sbb
xchg
mov
loope
adc
add
add
sti
pop
cmp
loopne
scas
(bad)
mov
fsub
js
fs
jmp
movs
pop
or
push
pop
fisttp
clc
xor
dec
inc
mov
pop
rol
lahf
adc
rcr
and
add
(bad)
jne
leave
mov
push
pop
(bad)
ror
jbe
jne
push
xor
inc
and
test
lds
mov
dec
cmp
ror
cmc
push
jmp
shl
inc
cmp
sbb
dec
lock
cmp
or
repnz
mov
push
pop
push
jl
mov
fs
addr16
in
jns
arpl
sbb
out
sub
xchg
movs
sbb
ins
popa
lods
ret
cmp
jmp
retf
inc
(bad)
xchg
xchg
(bad)
jmp
jmp
inc
int
bound
adc
in
retf
hlt
icebp
into
outs
mov
sub
in
shl
cmp
adc
mov
pop
enter
lahf
out
sub
inc
setne
xor
inc
sbb
push
mov
xor
outs
dec
nop
or
shl
repnz
adc
test
mov
addr16
(bad)
dec
xor
jo
push
jle
clc
mov
jno
and
jl
sbb
jnp
leave
cmp
cmp
sbb
push
(bad)
arpl
jg
or
fs
mov
dec
or
popa
in
loopne
add
rcl
mov
fld
ret
ret
and
arpl
and
mov
lea
test
(bad)
out
in
(bad)
xchg
mov
mov
mov
je
dec
out
cdq
scas
pop
rcr
push
mov
jle
push
push
mul
mov
push
sbb
shl
(bad)
push
sbb
xchg
mov
pushf
nop
mov
dec
pop
ror
je
pop
and
jmp
or
and
or
inc
icebp
addr16
and
std
add
addr16
pop
fld
push
sti
dec
ss
fs
mov
jge
push
scas
daa
pop
pop
cmps
mov
jbe
xchg
push
call
arpl
mul
scas
lock
fld
or
stos
mov
(bad)
xchg
mov
add
jle
ss
and
out
je
fdivr
push
int
mov
idiv
and
out
cs
jb
dec
popf
xchg
pushf
xchg
dec
(bad)
jae
add
mov
jb
mov
add
jmp
je
sub
loop
std
xchg
rcr
ja
and
(bad)
mov
repnz
into
inc
fcomip
call
jne
out
test
lods
gs
dec
in
fist
ins
mov
pusha
pop
sbb
xchg
xchg
dec
out
not
jne
std
jnp
mov
scas
push
div
add
(bad)
push
scas
jae
ficom
aam
push
add
push
dec
add
icebp
xor
daa
xchg
ret
pop
sbb
pushf
sar
sub
push
xchg
sbb
mov
aas
test
loopne
xchg
mov
jmp
xor
popf
ja
pop
in
ret
jle
test
cwde
add
clc
add
mov
mov
rol
inc
cwde
repnz
xchg
dec
sbb
mov
pop
mov
push
ret
icebp
or
inc
sbb
cs
xor
sbb
xchg
mov
loopne
in
jecxz
pop
movntps
mov
(bad)
rcr
xchg
mov
sbb
cdq
arpl
sbb
mov
add
ror
imul
hlt
shr
dec
pop
sbb
lods
adc
sti
retf
push
mov
dec
shr
call
hlt
xchg
pop
jne
adc
inc
xchg
or
loop
push
data16
pusha
mov
adc
jb
adc
jo
xor
push
fwait
movs
push
and
out
lods
into
movs
ss
pop
retf
test
mov
int3
lods
mov
cmp
push
add
call
push
dec
or
in
inc
addr16
mov
push
adc
mov
inc
(bad)
jne
bound
ins
pusha
mov
pop
add
mov
mov
das
stos
or
jge
push
cmps
fwait
dec
or
push
cwde
imul
push
dec
je
daa
(bad)
mov
jne
mov
paddusb
addr16
inc
loope
inc
or
aam
in
mov
aad
and
inc
ror
add
cmp
push
out
mov
aad
fsub
pusha
add
push
in
jno
mov
pop
or
mov
cmp
sbb
sahf
fbld
adc
fld
xchg
(bad)
addr16
jg
sub
das
xchg
xchg
cmps
and
pop
xor
push
pop
add
(bad)
aas
fs
(bad)
fcmove
xor
in
outs
out
and
push
(bad)
stc
jmp
pop
or
push
jmp
movs
cmp
jmp
mov
test
test
arpl
xchg
xor
fwait
xchg
fidivr
pop
je
push
int
xchg
lods
into
aad
scas
addr16
shl
mov
xchg
dec
adc
fistp
bound
rdtsc
mov
dec
bound
xchg
sbb
sar
mov
or
xor
jne
push
cmp
jno
pop
and
bound
inc
or
fistp
nop
lods
cmp
dec
jne
mov
shl
pushf
retf
ret
dec
pop
iret
sbb
push
gs
xor
popf
xchg
out
mov
in
xor
repz
sti
repz
cmp
shl
std
pop
add
dec
xchg
mov
stc
fldenv
call
push
jbe
mov
xor
jno
mov
sbb
mov
push
or
sub
in
push
adc
out
mov
mov
and
retf
push
fs
push
sub
clc
lds
sub
mov
xor
repnz
imul
cmp
cmc
out
icebp
rcl
popf
mov
test
mov
jo
bound
scas
sbb
(bad)
add
scas
xchg
hlt
sti
jb
fnstsw
movs
inc
pop
xchg
arpl
dec
lock
xchg
xchg
mov
cwde
xchg
sub
inc
mul
or
cmp
xchg
sbb
dec
ins
das
xchg
pop
pop
das
pop
cs
cmp
mov
in
cmp
sti
adc
jae
stos
xor
fsubr
es
in
fbstp
add
dec
ds
fwait
outs
or
pop
dec
xchg
xor
pusha
jne
mov
pop
mov
(bad)
jge
shl
or
ja
stc
dec
push
and
int
ins
enter
rol
stos
sub
sub
pop
dec
fs
mov
jle
inc
leave
dec
jge
dec
gs
imul
cmps
icebp
adc
jecxz
ds
mov
xchg
dec
mov
fdivr
mov
pop
imul
cmps
fxch
add
pop
addr16
mov
bound
mov
cmp
(bad)
fisub
add
sbb
mov
ret
mov
pop
std
or
sub
sbb
(bad)
jmp
pop
mov
out
out
mov
xchg
enter
imul
rcr
mov
out
jecxz
xchg
std
pop
adc
outs
ds
push
mov
(bad)
div
xchg
repz
dec
xchg
inc
xchg
and
dec
test
or
scas
add
loope
or
inc
mov
mov
aaa
cwde
sbb
stc
arpl
arpl
mov
test
daa
xchg
test
pop
push
scas
cdq
mov
mov
dec
inc
pushw
lock
or
mov
push
push
rol
ja
(bad)
pop
es
pop
push
pop
fdivr
fidivr
cmp
lods
loope
int3
ds
inc
mov
lds
mov
push
mov
or
sbb
test
mov
out
fucomip
dec
(bad)
dec
(bad)
idiv
xor
ret
jmp
jns
(bad)
xor
jmp
dec
mov
mov
cmp
test
repnz
jmp
pop
xchg
mov
test
push
cld
call
cld
icebp
pushf
clc
imul
push
in
icebp
dec
xchg
pop
add
jns
cmp
sbb
and
push
in
cmp
sbb
dec
into
mov
push
mov
dec
sbb
(bad)
xor
push
mov
les
pop
mov
dec
or
cs
in
add
mov
(bad)
in
add
mov
test
enter
or
sbb
inc
add
shl
int3
xor
sbb
dec
out
ds
fs
dec
cli
popa
mov
sub
sub
jne
pop
fcmovnb
push
mov
sbb
mov
mov
push
ja
dec
int
pushf
out
out
lods
push
sbb
aaa
mov
or
mov
mov
or
xchg
jno
jmp
push
lds
jl
add
dec
xor
xchg
pop
inc
rcl
pop
add
and
jle
lods
xor
jbe
mov
cld
xchg
stos
(bad)
stc
adc
and
and
std
xor
push
jl
and
mov
lds
dec
fist
jecxz
mov
movs
sbb
and
mov
rcr
mov
(bad)
mov
jg
adc
cmp
cmp
loop
mov
repz
iret
cmps
neg
inc
das
in
mov
mov
mov
jo
push
xor
scas
xchg
stos
outs
(bad)
lock
clc
jl
iret
sub
sar
pushf
xchg
mov
lock
loop
adc
mov
fucom
popa
adc
rcr
pop
and
popa
xchg
movs
adc
adc
inc
add
nop
inc
data16
or
jb
xchg
pop
jl
mov
adc
and
out
add
sti
mov
jmp
mov
aam
pushf
clc
jge
aad
aaa
test
test
mov
ret
sbb
adc
bnd
push
icebp
or
pushf
or
cld
adc
xchg
push
outs
fisttp
mov
lds
movups
inc
or
popf
inc
cmp
scas
mov
mov
fdiv
dec
sub
aaa
je
ds
test
and
pop
popa
push
mov
dec
leave
imul
push
cmc
pop
xchg
xchg
cmp
push
stos
add
outs
loop
imul
fs
jo
mov
cdq
mov
cli
mov
adc
sbb
mov
jns
jecxz
call
test
or
jmp
push
inc
jno
aad
pop
pop
movs
add
pop
cmp
retf
daa
sub
cmc
cmp
(bad)
and
and
mov
addr16
rep
not
or
dec
add
sar
ds
sbb
fist
mov
pop
pop
(bad)
je
rcl
cmp
or
add
mov
or
cmp
mov
gs
inc
ds
sub
pop
sbb
sub
mov
lock
jl
enter
std
out
pop
mov
xchg
ins
mov
clc
add
or
sbb
jae
cli
hlt
xchg
add
call
sbb
dec
push
lods
add
xchg
adc
daa
push
xrelease
adc
popf
fstp
fist
mov
js
dec
mov
ret
ins
sub
ins
mov
mov
fiadd
ss
cmc
std
mov
in
sahf
jbe
ds
pop
shl
in
sub
xchg
cmp
inc
sub
push
test
pop
push
(bad)
or
sti
enter
pop
into
ret
jnp
daa
fstp
jp
jecxz
jecxz
pop
or
call
lds
fstp
loope
dec
shr
nop
imul
xchg
js
push
jbe
mov
stc
shr
jno
add
adc
mov
push
inc
or
jp
push
aam
fs
xor
nop
cs
div
pop
jmp
mov
je
pop
enter
xor
repz
push
jecxz
in
int
sar
add
and
push
or
jge
inc
std
aaa
push
das
mov
inc
fist
imul
popf
add
push
mov
jmp
test
ins
add
push
pop
xchg
(bad)
or
bound
xchg
scas
dec
mov
das
mov
pop
dec
mov
dec
sub
pop
(bad)
iret
(bad)
cmc
jo
sub
aaa
test
add
jnp
int3
dec
mov
dec
xchg
enter
fwait
inc
cmp
and
nop
scas
retf
push
mov
mov
sub
pop
push
mov
fmulp
cli
jmp
in
jnp
(bad)
inc
or
fcomip
mov
cmps
xor
imul
inc
ss
push
dec
aaa
sbb
jns
sbb
mov
jns
iret
adc
jmp
xchg
icebp
nop
mov
popa
aaa
imul
fs
ret
or
cmp
or
sub
aad
fnstenv
inc
push
sbb
icebp
mov
mov
sbb
xchg
mov
int3
push
cmp
add
dec
(bad)
cwde
or
adc
xchg
loopne
jae
mov
push
jge
imul
mov
and
pop
jle
in
jge
mov
pop
sub
hlt
test
or
fdiv
xchg
inc
pop
and
fs
add
int3
cmps
and
or
mov
xchg
call
(bad)
adc
lea
test
test
pop
jne
iret
jge
fldenv
fidivr
test
pop
xchg
push
sti
movs
in
dec
mov
or
icebp
dec
push
lahf
in
(bad)
loope
in
sbb
push
add
push
int3
push
test
mov
out
mov
ds
sbb
mul
jmp
es
imul
stos
push
ficom
adc
movs
jae
sub
push
jmp
or
aas
dec
fwait
shr
arpl
es
and
push
lods
xor
and
stos
retf
in
daa
neg
jmp
and
retf
sti
mov
arpl
mov
(bad)
xor
out
sahf
cdq
jecxz
mov
mov
mov
hlt
cmp
lahf
outs
dec
popf
sar
fldenv
popf
xor
nop
int
sbb
sbb
mov
out
cmps
mov
sbb
adc
push
(bad)
in
adc
xchg
xchg
push
pusha
or
mov
or
and
arpl
push
mov
add
shl
shl
or
or
aad
inc
dec
jl
retf
in
mov
xchg
out
pop
dec
inc
aaa
cdq
sub
fild
lahf
sub
xchg
push
mov
mov
inc
fnstcw
ja
xchg
ins
xor
movs
(bad)
xchg
inc
movs
rcr
xor
stc
mov
cmps
clc
fidivr
es
push
mov
loopne
iret
scas
repnz
dec
xchg
adc
jg
ins
adc
pop
sub
cmp
jae
and
popa
mov
xlat
sbb
lods
cmp
out
sub
les
sahf
xchg
cmc
loope
mov
add
and
xor
je
push
jl
xchg
jge
movs
sbb
jle
sbb
ins
mov
mov
test
out
jo
mov
mov
sar
and
daa
mov
push
dec
mov
mov
xlat
dec
push
popa
outs
retf
and
fdiv
outs
xor
jne
bound
ins
fsub
and
pushf
leave
dec
stos
inc
push
out
cdq
mov
clc
(bad)
inc
rcr
mov
jmp
sti
adc
pop
push
inc
and
(bad)
and
pop
ja
and
xor
repnz
aas
inc
mov
sbb
add
cmp
shr
shl
xchg
clc
sbb
push
adc
xchg
xor
pop
in
pop
push
xor
pop
and
jbe
sti
(bad)
dec
adc
in
mov
push
outs
jmp
push
xchg
aam
mov
xchg
sti
fidivr
or
cwde
sub
(bad)
xchg
xchg
shl
mov
fsub
fist
cmps
mov
retf
aad
push
loopne
push
retf
enter
lods
sub
adc
je
aas
cld
fiadd
push
icebp
in
pushf
lahf
dec
inc
inc
loop
out
ins
inc
mov
dec
push
xor
icebp
test
add
pop
push
add
dec
push
pop
and
inc
mov
pop
idiv
xchg
hlt
movs
in
push
enter
sbb
cdq
ins
sub
in
mov
aad
inc
inc
sub
mov
sbb
test
movs
jo
leave
stos
mov
out
pop
cli
dec
push
ja
cld
mov
xor
dec
mov
aam
enter
in
push
aaa
push
push
mov
mov
push
jbe
call
pop
out
dec
fldpi
cmp
cmps
push
and
icebp
push
icebp
daa
nop
xchg
or
stc
in
clc
inc
lods
pushf
hlt
fcmovne
call
daa
mov
mov
mov
xchg
mov
mov
in
leave
jne
add
push
push
(bad)
daa
pop
sub
jne
dec
mov
jecxz
fistp
fisttp
test
fimul
and
pushf
(bad)
cwde
xchg
push
add
lahf
iret
test
fsubr
jmp
push
push
jb
mov
push
or
cli
inc
pop
lods
fisub
shl
cs
add
ficom
sub
jmp
idiv
(bad)
call
bound
xchg
inc
aam
into
ds
xchg
jmp
and
pop
pop
les
stos
pop
cmp
je
adc
lock
test
sti
inc
cmps
mov
ds
sbb
daa
test
pop
aaa
int3
push
inc
gs
or
in
mov
mov
push
xchg
mov
outs
aaa
jl
xor
dec
xchg
arpl
jae
cmp
fisub
xchg
xchg
(bad)
imul
mov
stc
lea
scas
sbb
les
(bad)
jo
in
test
mov
js
pop
and
xor
xchg
sub
jo
xlat
push
js
jecxz
dec
shl
xchg
fs
cmp
lea
mov
mov
daa
xchg
xchg
dec
add
sub
in
lds
adc
ret
leave
jbe
jmp
mov
(bad)
xchg
xchg
xor
push
loop
adc
popf
push
mov
sub
movs
cmp
push
xor
inc
(bad)
mov
pop
mov
test
fcomip
add
add
or
sahf
je
pop
push
add
call
lods
cmp
in
mov
popa
push
fadd
sbb
shr
out
lock
mov
imul
call
rcl
cld
add
adc
scas
lahf
lea
loopne
(bad)
loope
inc
adc
sbb
jecxz
lock
cmp
inc
sbb
dec
jnp
int
inc
mov
js
fnstsw
dec
jno
jnp
push
rcr
jg
xchg
fwait
popf
(bad)
hlt
test
pop
gs
cli
or
push
pop
push
add
retf
das
xchg
repz
aas
shl
mov
lds
adc
jne
xchg
jbe
in
in
int
adc
inc
(bad)
sub
xchg
imul
fdiv
pop
gs
mov
mov
jge
in
pop
push
push
jne
cmps
mov
test
int
cdq
xchg
cli
dec
inc
shl
idiv
les
in
out
ror
cdq
jmp
ja
mov
xchg
shl
cwde
aaa
adc
into
stc
jns
push
xor
dec
test
pop
inc
fild
fadd
rol
xchg
arpl
adc
stc
pop
jecxz
mov
or
into
in
popa
lods
retf
pop
xchg
adc
push
cmp
mov
(bad)
retf
xor
sti
in
jl
sbb
shl
jne
and
dec
(bad)
sub
sbb
mov
(bad)
xchg
pushf
test
call
dec
popa
pushf
daa
ror
cli
lods
jp
sub
sbb
jecxz
retf
jne
shl
xchg
pop
push
jmp
ins
aas
push
xchg
xchg
xchg
or
push
xlat
pop
cdq
inc
icebp
push
sub
(bad)
jg
ins
mov
xor
and
loop
repz
add
clc
scas
ins
bound
cwde
ret
mov
repz
add
pop
inc
jbe
ret
jl
ss
imul
mov
mov
in
inc
addr16
mov
push
add
clc
cmp
dec
xchg
(bad)
fidivr
out
(bad)
mov
pop
(bad)
(bad)
aam
repz
xchg
and
out
fld
ds
cmp
cmps
xchg
jmp
in
(bad)
adc
push
or
aad
mov
mov
mov
cmp
lds
cmp
and
mov
adc
xchg
jp
sub
out
das
jns
xor
mov
ror
stos
iret
in
adc
xor
jmp
and
test
pop
ins
and
loope
xchg
inc
es
push
fxch
push
test
pop
dec
mov
xchg
pop
hlt
inc
mov
out
and
add
gs
inc
aad
sbb
jnp
sub
push
jno
dec
dec
mov
int
and
clc
cld
aam
mov
sub
or
rol
(bad)
sub
jp
aam
test
in
and
add
imul
je
jnp
and
cmp
aam
in
cmc
cmp
pop
imul
retf
test
and
(bad)
bound
clc
adc
sbb
pop
cmp
mov
shl
xor
xchg
into
bts
adc
test
dec
popa
cmps
out
movs
scas
cld
cmp
mov
mov
inc
push
xor
add
shl
jb
sbb
js
sub
in
cmp
es
popa
imul
xlat
int
mov
shl
les
mov
fnstcw
out
xor
or
inc
sysexit
repz
retf
jmp
aaa
jo
repnz
mov
add
mov
mov
dec
cs
popf
in
fmul
and
inc
xchg
cmp
cmps
xchg
fs
out
xor
jne
daa
test
les
mov
movs
sbb
dec
fs
mov
and
jae
pop
out
outs
inc
inc
lea
mov
mov
or
daa
retf
mov
fild
aam
pop
test
movd
out
mov
std
dec
inc
test
push
imul
pop
ins
retf
ins
ins
bound
xlat
(bad)
retf
movs
movs
fdiv
dec
mov
out
enter
int3
push
test
std
out
shr
add
cld
lods
xchg
inc
scas
xchg
jecxz
dec
fnstcw
dec
pop
mov
cmc
shl
and
sub
xchg
daa
in
icebp
stc
add
fld
adc
dec
mov
xor
outs
shl
jp
inc
jmp
jae
adc
cmp
dec
out
pusha
(bad)
mov
in
add
pop
mov
out
lods
aas
sbb
bound
mov
mov
mov
cmc
cdq
movs
mov
pop
out
arpl
(bad)
(bad)
cmps
sahf
imul
sahf
aad
fld
push
mov
mov
pop
cmp
iret
loope
xchg
adc
repz
ror
xchg
(bad)
mov
inc
pop
in
out
sub
or
add
pop
inc
pop
add
sbb
push
and
(bad)
inc
outs
imul
and
push
movs
das
xor
and
int3
mov
fistp
test
movaps
repnz
inc
mov
pop
fadd
mov
(bad)
dec
out
add
pop
std
xchg
sub
push
or
imul
test
xor
fistp
gs
mov
mov
dec
call
inc
jbe
fcomp
inc
loop
sub
adc
mov
pop
dec
fcom
stos
or
adc
mov
mov
fsubr
aaa
in
fmul
lea
aam
push
jg
jae
cdq
mov
push
push
xchg
sub
push
mov
loop
xlat
jle
lods
imul
sti
in
sub
(bad)
bound
test
or
sahf
imul
or
fdiv
ja
jmp
(bad)
push
repz
dec
dec
xchg
sti
(bad)
imul
das
daa
xchg
loopne
inc
cld
cmp
repnz
adc
push
imul
shl
into
inc
push
retf
xchg
rol
(bad)
in
cmp
sbb
pushf
xchg
push
dec
sbb
adc
sbb
in
call
mov
fcompp
cmps
sub
lods
mov
push
iret
adc
inc
sub
imul
adc
movs
mov
mov
out
mov
ins
push
jnp
pop
retf
xor
iret
leave
outs
add
or
fldcw
mov
out
rcr
xchg
sub
lock
jmp
xchg
shr
mov
jmp
pop
jecxz
enter
mov
sbb
xor
mov
inc
(bad)
stc
sub
dec
cmc
aam
bound
sbb
xchg
repnz
test
cmp
div
fs
cmc
stos
inc
in
int3
cmp
push
mov
outs
(bad)
cs
loope
cmp
jge
in
call
pop
xchg
push
xchg
adc
shl
push
sbb
xor
pop
and
into
jno
mov
push
outs
out
jae
ds
cdq
dec
or
mov
loopne
push
push
inc
iret
sub
mov
mov
push
xchg
jecxz
xlat
shr
xchg
loop
jo
adc
(bad)
(bad)
mov
mov
dec
or
jbe
(bad)
and
mov
cli
icebp
pop
xor
xor
loopne
pushf
xor
cs
sbb
enter
pop
int
jg
imul
cmps
cli
push
push
and
sub
leave
aas
inc
cdq
and
gs
mov
mov
push
retf
pop
(bad)
outs
lods
mul
fs
mov
aaa
movs
ins
add
jp
mov
sub
inc
jae
and
mov
mov
jae
lea
fsub
pusha
stc
xlat
mov
test
jo
fnstcw
push
je
lea
mov
lods
les
outs
push
cmps
call
daa
adc
inc
ds
jmp
pop
out
nop
je
pop
or
aaa
jecxz
(bad)
fidiv
pushf
mov
(bad)
cmp
popf
out
stos
aaa
repz
and
mov
pop
lea
cmps
pop
pop
cmps
popa
mov
cmp
and
push
std
jmp
lea
cmps
inc
adc
push
sbb
int
and
mov
fidiv
cmps
loop
sub
lods
(bad)
add
xchg
jno
(bad)
scas
mov
scas
loop
xlat
loopne
ficom
lods
test
dec
ret
aad
lahf
rcl
loop
mov
pop
jnp
dec
scas
push
data16
repz
adc
icebp
push
mov
sar
(bad)
mov
inc
mov
push
xor
pop
stos
cmp
sbb
push
dec
out
cmp
iret
scas
in
add
fdivp
add
fsubr
sub
ror
nop
jne
dec
stos
pop
push
mov
sbb
push
(bad)
imul
test
xchg
repz
mov
sub
(bad)
pop
test
outs
add
pop
pushf
xchg
jb
sub
iret
adc
and
out
or
dec
mov
cmp
mov
and
adc
jge
mov
jb
popa
xor
arpl
mov
cmps
dec
push
inc
sub
dec
sahf
jae
std
fisttp
jl
cmp
adc
mov
popf
inc
(bad)
loope
cmp
movs
loopne
pop
mov
xor
int3
cwde
push
jnp
aad
jge
sahf
mov
daa
out
ds
xor
test
cmp
inc
xchg
or
or
test
xor
jmp
in
aam
inc
push
add
test
or
outs
push
sub
pop
(bad)
call
ret
and
cli
mov
xchg
mov
rol
(bad)
shl
add
js
jmp
retf
(bad)
inc
xchg
or
aam
xor
loope
sbb
shl
pop
rol
mov
inc
outs
lock
dec
sbb
cmps
shl
pop
fisub
hlt
scas
jl
jnp
in
shr
cs
retf
mov
sub
call
test
sub
stos
dec
pop
(bad)
push
je
and
xchg
dec
dec
dec
pop
push
fsub
mov
pop
or
xor
xrelease
jecxz
cmp
repz
jo
dec
aas
jne
mov
inc
or
nop
int
jae
cmp
sbb
jo
cwde
rcr
xlat
repnz
mov
jge
mov
mov
xor
retf
add
and
in
push
rcl
(bad)
retf
imul
lahf
mov
test
cmp
ret
je
div
sub
adc
aaa
adc
pop
pusha
aas
adc
mov
(bad)
(bad)
idiv
pop
in
and
out
sub
out
cmp
push
sub
aas
std
and
adc
popf
xor
jbe
push
push
jns
lods
jle
push
scas
dec
cwde
je
mov
stc
pop
dec
stos
stc
jno
lahf
aas
loop
dec
adc
shl
sub
cmps
cmp
stc
and
ja
(bad)
test
pop
jno
dec
arpl
inc
je
cmp
popf
in
cmc
mov
ficom
mov
push
add
ret
jp
cli
call
cbw
inc
outs
pushf
pop
adc
or
ret
je
cwde
sub
push
outs
outs
jp
jno
iret
retf
loope
xchg
(bad)
jbe
fnstsw
push
stc
mov
adc
jmp
dec
jne
dec
sbb
mov
dec
push
fimul
lds
jmp
(bad)
imul
scas
(bad)
sbb
shl
sar
fwait
out
dec
gs
ss
xor
leave
jecxz
add
sub
push
stc
or
dec
out
sub
cmp
aas
mov
adc
aas
sub
pushf
int
scas
fild
sub
jmp
cmp
scas
leave
mov
cs
sbb
(bad)
sub
mov
mov
aam
sub
pop
mov
rcl
and
mov
jne
ins
push
es
mov
je
adc
jl
fimul
pop
cmp
stos
paddd
dec
retf
arpl
adc
dec
mov
call
scas
repnz
inc
push
xlat
fidivr
jge
push
add
cmps
(bad)
cmp
repnz
sti
ds
call
out
jbe
aam
fmul
in
xchg
sahf
xchg
scas
xchg
dec
xchg
mul
test
jmp
int3
lods
add
sbb
into
out
push
imul
inc
push
sbb
movs
pop
push
popf
cmp
sub
cmp
adc
lods
mov
lods
dec
ror
cmps
xor
pop
test
sub
add
xchg
jl
clc
mov
aaa
enter
push
push
xlat
xchg
inc
cli
popf
loope
test
xchg
ins
sub
mov
mov
mov
jmp
push
sub
popf
push
cld
(bad)
jecxz
jl
call
or
push
dec
pop
cmp
mov
and
mov
dec
int3
jmp
les
or
leave
scas
imul
out
(bad)
in
and
add
xchg
(bad)
loopne
sub
imul
pop
les
cmp
cmp
out
ds
mov
sbb
fsubr
xchg
test
sub
inc
stc
aaa
push
stos
in
mov
shl
xor
xchg
adc
rcl
fst
ins
test
or
jnp
mov
or
sbb
cs
rcl
jno
rcr
push
(bad)
or
arpl
cmp
sbb
mov
int
adc
cmc
sbb
or
scas
inc
dec
cmps
jp
mov
cmp
fisttp
jl
retf
mov
sub
lods
out
mov
sub
push
add
xchg
sbb
mov
sahf
jl
sbb
ja
or
and
dec
in
mov
in
sbb
push
pop
(bad)
out
mov
gs
mov
push
les
je
cmps
dec
jae
jbe
fimul
xchg
(bad)
jbe
fsub
ds
add
and
pop
nop
pop
cmp
mov
xchg
out
mov
imul
xor
sbb
pop
dec
pop
in
xlat
cmp
or
jle
sub
or
xlat
std
jnp
sahf
gs
jmp
hlt
test
dec
dec
(bad)
je
fisub
add
scas
sub
mov
dec
adc
stos
out
push
into
cmp
sbb
lahf
adc
cmp
test
scas
mov
push
cs
xor
ja
fdivr
mov
jne
adc
ror
lds
inc
imul
(bad)
jnp
into
and
inc
(bad)
sub
(bad)
idiv
jb
or
cmps
mov
sub
lahf
mov
mov
cmp
jle
enter
lods
pop
gs
jb
mov
push
stos
test
mov
(bad)
jne
cmp
jge
lods
sub
(bad)
jo
xchg
adc
pop
xchg
out
jnp
loopne
sbb
arpl
cmp
pop
add
data16
mov
fistp
pop
or
(bad)
add
xchg
cmp
cmp
mov
pop
dec
pop
adc
(bad)
push
fist
push
test
fstp
mov
cmp
lods
repz
mov
loope
fidiv
pop
pop
mov
inc
jle
lock
addr16
sti
jmp
enter
fdivr
adc
sub
xor
inc
sbb
call
scas
inc
cmp
pop
sub
retf
nop
mov
aad
pop
xchg
sbb
mov
or
outs
cs
inc
das
dec
dec
clc
jne
stos
ja
xchg
out
cmp
and
out
ja
push
popf
enter
adc
sbb
push
out
scas
test
jo
cmc
fwait
mov
and
or
cmp
mov
xchg
mov
je
iret
outs
mov
push
or
stos
add
(bad)
or
fist
push
shl
adc
pop
enter
test
and
mov
push
retf
adc
mov
ins
cwde
xor
inc
ja
retf
icebp
mov
(bad)
call
cdq
pop
cmp
sbb
jnp
fs
cmp
sub
scas
stos
popf
lahf
outs
in
popf
iret
mov
mov
mov
ins
scas
jecxz
fisubr
inc
fs
mov
xor
icebp
dec
mov
fisttp
dec
xlat
jecxz
add
or
icebp
dec
shl
or
adc
add
jmp
sub
mov
cmp
sar
sub
cmp
sbb
pop
loope
sub
lods
inc
mov
mov
(bad)
and
into
jb
push
sbb
and
outs
ins
add
jecxz
pusha
xor
xor
lods
mov
push
dec
fbstp
std
jge
int
mov
cmps
daa
test
jl
pop
mov
jle
pop
cmp
sar
loopne
gs
xlat
rcl
cli
or
mov
xor
clc
push
std
adc
retf
xchg
push
in
movs
dec
adc
add
mov
mov
pusha
scas
out
movs
xchg
adc
add
sbb
adc
xchg
inc
mov
inc
cwde
xor
retf
stos
xor
rcl
pushf
clc
in
(bad)
xchg
mov
xchg
mov
sub
ror
stos
inc
sub
and
hlt
lea
(bad)
pop
shl
sub
ss
test
sub
add
movs
fidiv
jp
mov
mov
lods
mov
jo
and
shr
test
pop
sub
leave
cmc
inc
movs
xor
loopne
inc
jge
loope
fcomi
(bad)
es
push
push
lea
mov
outs
push
inc
jmp
cmp
stos
inc
xchg
(bad)
sbb
push
push
shr
je
mov
jg
std
inc
in
addr16
ror
cs
aaa
sbb
arpl
outs
inc
cmps
adc
inc
ins
or
adc
fdiv
cmps
sub
push
cdq
cmps
ror
xlat
imul
sub
push
nop
fcomp
push
hlt
push
retf
or
or
or
dec
mov
mov
mov
out
inc
mov
jnp
and
dec
adc
adc
loop
loop
adc
jmp
aaa
stc
mov
cwde
dec
repnz
cmp
sti
addr16
leave
jmp
in
adc
pop
push
push
dec
xchg
and
inc
in
int3
stos
jae
dec
mov
fcom
add
rol
fisttp
call
sbb
pop
jo
add
popa
addr16
mov
out
jb
popa
dec
push
mov
push
ins
mov
add
push
test
adc
xor
jae
in
ds
jno
aas
mov
mov
push
and
sub
ret
jge
call
lods
and
pop
xchg
xchg
int
sub
ja
xor
xlat
push
jmp
xor
dec
push
das
aaa
scas
lock
push
fwait
jp
mov
(bad)
stc
cs
nop
int
gs
dec
mov
lock
cli
movs
xor
mov
mov
xor
add
ret
sar
imul
sbb
ja
jo
movs
nop
leave
cmp
sbb
test
inc
push
add
sbb
mov
mov
sub
arpl
mov
in
xchg
and
jmp
pushf
xor
imul
mov
ins
div
fistp
or
adc
mov
push
test
shr
jnp
and
leave
mov
leave
sbb
xor
adc
leave
ret
cmp
and
pusha
repnz
pop
inc
mov
mov
mov
adc
retf
std
sub
jmp
add
(bad)
int
out
and
mov
fnstcw
jmp
data16
pop
iret
pop
arpl
int
jp
shl
pop
outs
out
and
pop
outs
adc
shr
mov
fstp
sahf
fldcw
(bad)
cld
shl
arpl
mov
cmp
fstp
imul
test
notrack
inc
xlat
loopne
loopne
sub
icebp
jmp
xchg
das
fs
mov
rcr
popf
aas
shl
cmc
ret
push
imul
rcr
in
imul
jnp
push
xchg
mov
enter
or
dec
dec
inc
mov
sub
sbb
sub
xchg
sbb
nop
or
sbb
add
out
ins
sbb
push
cmp
pop
(bad)
cmps
(bad)
into
xchg
iret
cmp
cld
sbb
rol
jno
lock
sub
xor
test
adc
adc
(bad)
(bad)
in
fld
sub
dec
mov
add
inc
int3
sbb
mov
ret
cwde
xor
mov
mov
nop
out
sub
add
dec
data16
jbe
lods
mov
xor
vpor
dec
(bad)
fidiv
rol
xchg
jbe
cld
cmp
jno
(bad)
out
pop
add
sub
fmul
out
dec
add
push
mov
aam
jecxz
cmps
push
or
mov
pop
inc
into
in
loope
(bad)
enter
or
push
mov
push
jno
bound
xchg
je
xor
retf
dec
dec
loopne
xor
sub
mov
xor
aam
mov
jmp
stc
out
imul
pop
sbb
fcomp
sub
jg
mov
aam
push
int
add
ja
dec
iret
pop
sti
xor
shl
movs
mov
cmps
pop
fist
or
rcl
xchg
jg
movs
adc
adc
sbb
sahf
fwait
jg
mov
adc
test
xchg
adc
jae
jg
repz
and
aas
je
push
push
sbb
jecxz
mov
xor
dec
xor
idiv
outs
jmp
mov
(bad)
sbb
cmp
int3
loope
cmc
loop
dec
jae
xchg
ret
push
and
add
in
cli
(bad)
fs
lods
idiv
scas
iret
scas
mov
sbb
sahf
in
(bad)
adc
adc
xchg
loopne
inc
mov
push
add
inc
pop
test
lock
popf
out
lahf
push
js
test
ins
mov
sub
jg
call
adc
inc
push
xchg
nop
push
jg
mov
xor
add
push
rol
mov
xchg
mov
xor
jl
and
ins
icebp
pop
scas
stos
adc
and
adc
or
outs
push
fsubr
xor
jecxz
jmp
icebp
inc
cdq
retf
xchg
sub
pop
movs
pop
xchg
adc
inc
xor
aas
inc
out
les
inc
arpl
push
mov
(bad)
xchg
lock
call
sbb
lahf
add
imul
inc
aas
push
mov
test
add
cmc
push
jns
mov
pop
push
adc
in
inc
dec
cld
test
popa
pop
in
in
sub
pop
ret
and
fidiv
and
sub
mov
or
int
dec
mov
adc
jmp
inc
adc
dec
or
inc
imul
dec
gs
sub
jl
push
enter
jno
sub
cmps
xchg
xchg
adc
aad
test
movs
jmp
lods
cmps
xor
ins
std
push
sbb
mov
add
push
push
add
dec
scas
sahf
(bad)
cmp
sbb
sbb
fs
mov
lahf
mov
movs
ins
call
add
imul
lds
and
mov
fwait
sbb
sub
sbb
mov
jmp
dec
cmps
or
jbe
out
inc
imul
xchg
popf
stc
(bad)
icebp
sbb
jle
xor
cld
adc
cmp
inc
int3
add
mov
mov
fsubr
dec
dec
jbe
xchg
fisttp
popf
pop
mov
mov
xor
mov
cmp
sbb
jb
add
inc
mov
add
mov
mov
js
mov
dec
push
dec
les
add
fild
mov
inc
cmp
or
xlat
cmp
sti
fdiv
mov
stos
aam
mov
mov
mov
stc
repnz
mov
inc
jecxz
fs
mov
xchg
(bad)
(bad)
aam
dec
and
dec
test
mov
sbb
pop
sbb
push
cmp
sar
pop
sub
jnp
cdq
adc
inc
rcr
call
push
or
test
cld
es
adc
sar
loope
cmp
mov
(bad)
push
or
inc
sahf
fcom
sbb
data16
out
dec
cwde
sub
ins
and
push
(bad)
fldcw
adc
hlt
xor
jo
rol
sbb
sub
ficomp
jnp
test
push
stc
sub
sub
or
xchg
not
sbb
xchg
jge
cdq
test
(bad)
inc
loop
retf
jo
out
dec
lds
cmps
out
iret
xlat
pop
iret
sbb
pop
gs
cmp
sti
pop
adc
add
call
sub
icebp
inc
outs
add
adc
xor
and
lahf
into
and
cmp
movs
mov
fsub
ret
or
add
or
xchg
outs
ror
xchg
data16
push
adc
jmp
cld
mov
sub
push
sbb
ja
pop
cwde
and
push
sbb
cld
jbe
adc
push
adc
inc
out
push
inc
shr
xor
push
hlt
dec
retf
sub
aaa
xor
xor
sahf
repz
adc
xor
imul
add
sahf
push
adc
out
add
inc
out
fdivr
lods
in
jmp
inc
out
add
cmps
les
in
(bad)
jnp
push
mov
(bad)
mul
outs
leave
test
jl
inc
and
adc
dec
std
mov
bndldx
out
cdq
pop
jmp
aaa
mov
sbb
mov
fisubr
std
mov
inc
xchg
(bad)
jmp
xor
inc
mov
dec
jecxz
push
sti
(bad)
jae
gs
cmp
jmp
idiv
push
movs
scas
adc
fldenv
adc
popf
mov
dec
ja
inc
mov
sbb
sbb
or
pop
pop
push
add
ret
jno
pusha
and
fdiv
or
mov
xchg
pop
xchg
pop
ins
mov
mov
pop
repz
retf
aaa
pop
stos
or
loopne
sbb
or
enter
call
sub
retw
loop
sahf
loopne
imul
out
ja
and
cdq
call
jp
push
cli
clc
adc
cmc
push
es
repz
int
fistp
imul
sub
pop
dec
mov
xchg
push
fadd
fcomp
cmp
loope
call
retf
add
(bad)
sbb
push
mov
mov
gs
cmp
and
jbe
in
aam
xor
popf
cmps
movs
pop
jecxz
mov
shr
out
dec
or
or
cmps
es
mov
or
out
push
imul
inc
(bad)
cmp
div
pop
mov
retf
mov
and
punpckhwd
jp
(bad)
adc
inc
cld
cmp
push
pop
fsubr
rcl
dec
mov
(bad)
loop
adc
jl
rcl
stc
imul
pop
js
mov
xor
fldenv
sbb
cmps
jle
mov
mov
(bad)
pushf
(bad)
adc
in
xchg
not
add
call
outs
pop
mov
pop
bnd
xchg
pop
clc
or
inc
mov
fldcw
test
sub
xor
pusha
jae
pop
or
lods
add
scas
mov
in
push
lea
retf
pop
test
and
aad
and
cwde
adc
test
dec
push
xchg
cmp
pop
push
dec
or
lahf
jp
es
fbstp
mov
xchg
jno
jo
add
movs
outs
jmp
imul
and
dec
xchg
mov
mov
dec
mov
in
cmp
dec
sbb
fmul
jecxz
mov
mov
cmp
es
mov
popf
cmc
sbb
adc
cmp
adc
repnz
push
mov
test
cmps
rol
stos
mov
pop
rol
xor
scas
dec
push
into
push
sbb
iret
scas
pop
inc
sbb
sti
dec
mov
fnstenv
jb
xchg
in
push
push
data16
xchg
nop
ja
test
mov
mov
mov
cwde
cmp
inc
mov
outs
ja
fistp
pusha
push
and
test
push
sub
jl
lds
aam
jl
mov
out
imul
and
push
std
mov
ins
aam
xlat
cs
cmp
cmp
pop
(bad)
ret
pop
fadd
push
sub
lds
cmp
je
or
or
ds
cmp
cmps
mov
pop
mov
adc
jae
push
dec
push
push
fs
cmps
adc
push
outs
ss
inc
fs
lds
push
pushf
fwait
and
aam
xchg
cmp
mov
test
ss
daa
dec
arpl
inc
ret
icebp
lea
retf
sbb
jle
inc
push
(bad)
pop
push
stc
xchg
call
rol
test
pop
adc
test
inc
mov
mov
out
(bad)
cli
pop
scas
push
adc
dec
ds
jp
(bad)
push
sub
iret
movs
jmp
out
fld
ds
or
and
cmps
add
aad
lahf
xor
cwde
jae
in
mov
clc
les
pop
xchg
stos
mov
or
(bad)
cmp
xor
cmp
cdq
daa
jns
test
iret
test
jmp
and
dec
jne
or
gs
(bad)
in
pop
scas
inc
mov
jge
push
cmp
iret
pop
push
adc
add
sti
dec
xchg
inc
(bad)
lahf
and
gs
fstp
jge
leave
add
pop
xchg
cmp
jmp
sbb
or
mov
ret
std
test
push
cld
xor
jno
sub
shl
mov
jge
jne
cwde
sub
lods
add
lds
call
mov
inc
push
pushf
cmp
sbb
push
les
mov
xchg
dec
adc
sub
pop
jno
popa
addr16
jno
rcr
jecxz
and
mov
pusha
inc
xor
xchg
adc
and
movs
ror
mov
loope
mov
jp
in
mov
int3
mov
cmp
lods
scas
jns
cmp
das
xor
pop
aam
pop
aaa
xchg
push
mov
dec
add
jno
imul
fld
add
sti
std
push
adc
or
mov
iret
xor
inc
cmps
sbb
stos
sbb
and
xor
jecxz
add
cli
sbb
xchg
mov
or
aaa
cmp
ja
mov
dec
dec
inc
xchg
jbe
inc
loop
pushf
in
or
cmp
pop
jecxz
loopne
sub
outs
pop
pop
jb
int
adc
aaa
or
cdq
push
jnp
repnz
adc
cmps
xor
add
lods
imul
or
out
adc
jno
in
xor
jbe
test
sti
shr
aaa
(bad)
pop
cmc
test
xor
cli
adc
xchg
test
dec
ror
js
mov
es
add
sar
add
enter
push
jbe
inc
pop
jp
cli
aad
fidiv
dec
pop
or
xchg
lea
out
mov
and
push
sti
dec
cdq
out
sub
dec
jp
inc
ror
sbb
lahf
xor
pushf
rcr
cmp
sub
push
je
movs
pusha
daa
imul
fistp
in
jmp
xor
(bad)
cmp
div
nop
in
sbb
inc
ins
test
mov
sahf
jp
out
inc
sbb
mov
into
adc
cmc
enter
inc
sbb
sbb
(bad)
cmp
cmp
dec
lds
sub
retf
and
sub
adc
sbb
hlt
test
xchg
clc
ret
xchg
dec
inc
adc
mov
icebp
add
sub
sub
stos
enter
dec
gs
sbb
movs
loope
push
pushf
and
adc
inc
fisttp
rcl
pop
hlt
adc
stc
inc
xor
bound
pop
jge
(bad)
mov
test
add
jmp
add
push
mov
xor
call
fwait
dec
test
retf
inc
pusha
cwde
lods
or
jmp
lock
loop
or
pusha
neg
sbb
int
sti
fs
sbb
jo
push
mov
pop
push
retf
into
mov
(bad)
push
xchg
ins
cmp
push
mov
and
jae
xor
fnsave
cmp
(bad)
in
and
cmp
into
add
or
dec
mov
jle
xchg
mov
js
pop
sub
cmp
movs
mov
lea
add
xchg
cmps
inc
push
test
dec
or
sbb
push
push
(bad)
push
pop
arpl
push
pop
jge
in
sbb
jl
je
aaa
in
sub
mov
adc
fcmove
test
inc
push
loop
mov
xor
sub
loop
mov
jae
adc
pop
dec
test
cmp
out
xor
and
cmp
jno
sahf
repz
ror
stc
sub
enter
jp
aam
int3
nop
sub
push
push
mov
je
hlt
lods
in
aad
loopne
sub
xlat
popf
sbb
mov
lock
(bad)
mov
cmp
cld
out
pop
mov
xor
shl
lds
leave
xlat
xor
inc
popa
pop
psubq
inc
or
sub
cld
lods
adc
fimul
push
or
jmp
inc
imul
in
leave
inc
out
js
cmp
cmp
xor
jg
je
xor
icebp
xchg
nop
cwde
cmc
enter
int3
(bad)
in
inc
adc
pop
add
(bad)
push
jp
je
arpl
or
js
jnp
xor
push
std
jp
pop
repz
xchg
popa
shl
xor
sub
cli
mov
pushf
xchg
and
dec
mov
fmulp
push
out
stos
mov
aam
push
stc
mov
call
jo
jno
in
add
aam
mov
pushf
jp
jnp
shr
loope
call
adc
add
and
cmp
dec
in
scas
rol
(bad)
mov
mov
mov
cmps
inc
lahf
pusha
and
push
mov
jge
and
hlt
add
frstor
daa
adc
fcmove
xchg
or
xchg
icebp
jge
add
das
in
jecxz
pusha
sar
es
fist
xlat
enter
cmp
test
stos
das
test
popf
push
mov
mov
lock
adc
shl
jle
mov
sub
cdq
popa
push
push
rol
loop
or
(bad)
mov
pop
mov
cmp
pusha
retf
mov
fldenv
add
jg
dec
(bad)
adc
bound
push
and
clc
out
inc
test
in
pushf
in
div
neg
repz
jno
sbb
adc
and
xchg
nop
outs
sub
and
(bad)
dec
jns
mov
inc
hlt
add
dec
mov
ins
mov
outs
cmp
jmp
xor
fs
push
xchg
and
rcr
sbb
call
lahf
hlt
(bad)
lahf
and
ss
div
xchg
scas
or
sub
mov
rcr
push
inc
das
cmp
loop
mov
lods
pop
out
mov
push
cmps
pop
ret
push
aaa
les
test
test
jmp
xchg
leave
stos
adc
out
int3
jns
sbb
loop
popf
imul
adc
mov
mov
aad
(bad)
into
inc
mov
es
jle
stos
mov
mov
xor
hlt
fdivr
inc
nop
mov
mov
sub
mov
sbb
test
aam
jl
nop
pop
sbb
pop
mov
pop
jo
movs
pop
jae
out
inc
call
in
xor
ja
and
fisttp
or
adc
and
arpl
pop
test
xchg
sbb
aas
bound
adc
test
dec
jo
mov
inc
mov
push
pop
jge
movs
nop
xchg
or
xchg
ror
xchg
mov
xchg
(bad)
fbstp
cdq
loope
fld
pop
jmp
cmp
loopne
aas
and
outs
inc
rcr
push
mov
loop
pusha
fbld
outs
add
sahf
and
jle
xchg
sahf
add
inc
add
xchg
out
xchg
fiadd
out
push
adc
dec
leave
leave
enter
jbe
xchg
cmp
arpl
cmove
loopne
sbb
cwde
pop
sub
add
jnp
out
scas
inc
jle
mov
and
add
mov
rol
xor
dec
push
(bad)
mov
clc
arpl
mov
mov
cmp
pop
arpl
iret
dec
popf
inc
(bad)
pop
fs
mov
sub
jg
jg
test
out
lahf
lea
leave
or
pop
repz
stc
cmp
cmp
cmc
fistp
xchg
mov
sub
pop
mov
out
inc
sbb
fistp
ret
lahf
movs
mov
inc
sub
inc
iret
jecxz
cmp
sub
(bad)
mul
call
fstp
jae
arpl
jae
mov
xchg
sbb
inc
sar
mov
vpmovsxwq
mov
xor
jo
ret
and
xor
cdq
stos
(bad)
stc
mov
push
xchg
lds
out
std
sar
mov
mov
mov
setb
inc
mov
not
sbb
mov
stc
jmp
sbb
jge
cmps
je
call
or
dec
mov
ret
pop
outs
int
sub
sub
sub
xor
jle
fmul
jo
call
mov
cmp
sbb
mov
dec
cmps
(bad)
out
pop
add
ret
dec
sbb
push
xchg
fstp
ret
add
stos
mov
inc
dec
and
add
mov
dec
int
xchg
add
pop
jmp
iret
scas
and
test
ret
mov
cs
repnz
pop
xlat
mov
mov
mov
out
cmp
arpl
and
rcr
dec
imul
pop
outs
stc
push
mov
sub
mov
xlat
mov
jge
aaa
jb
jbe
push
pop
mov
mov
mov
fdiv
push
mov
pop
fxch
cmp
retf
mov
(bad)
mov
xor
out
cmp
outs
imul
xchg
jns
add
mov
cmp
sub
cmps
test
js
sub
cmc
jg
arpl
ja
mov
push
pop
mov
addr16
movs
mov
jmp
dec
icebp
nop
sbb
in
popf
dec
cmps
push
and
sbb
push
fistp
mov
xchg
in
shl
jne
retf
and
int3
and
in
xchg
js
addr16
std
out
sub
dec
fcom
mov
lods
push
and
or
retf
nop
stos
addr16
sub
enter
cmp
jbe
cmp
add
mov
sbb
mov
aas
(bad)
push
stc
inc
imul
dec
cmp
ss
mov
addr16
push
add
(bad)
test
and
push
in
sbb
popa
out
test
add
push
jnp
sbb
call
mov
pop
sub
sbb
retf
adc
cmp
push
or
push
fwait
cmp
jp
test
jb
add
cmp
outs
sub
nop
sbb
ret
sub
or
or
jmp
jge
lds
dec
outs
mov
mov
cmp
mov
call
mov
out
sahf
movs
dec
mov
mov
and
push
imul
ficom
mov
xchg
cmps
(bad)
push
jg
test
fild
and
out
adc
clc
xor
xor
daa
(bad)
aaa
in
in
out
dec
and
or
sub
stos
sbb
frstor
out
popf
sahf
cmp
adc
mov
mov
hlt
(bad)
sbb
xlat
sar
jl
cld
inc
jb
add
shr
ss
scas
std
sub
stos
jp
add
xchg
mov
cmp
fmul
fdivp
add
cli
push
mov
jns
cmps
sub
shl
es
imul
out
je
fldcw
stos
push
adc
and
into
cwde
ins
jo
loope
lock
pop
sbb
or
inc
out
or
mov
push
(bad)
cmp
push
out
popf
and
mov
(bad)
stc
inc
int
xor
or
ret
fidivr
pop
jge
add
in
test
or
es
or
enter
sar
mov
stos
mov
pop
mov
test
dec
sub
mov
inc
xchg
mov
test
aam
jnp
icebp
lock
cmps
mov
aam
push
movs
jae
outs
push
sub
(bad)
call
data16
adc
or
jnp
mov
push
in
adc
xchg
sub
jae
gs
icebp
mov
imul
in
fcom
add
or
test
sub
push
cmp
ins
cmp
xor
ja
mov
adc
icebp
loopne
add
lahf
retf
pop
mov
pop
(bad)
icebp
je
sub
add
add
jl
pusha
cmps
mov
in
shl
sub
sahf
aam
cmps
jne
cmp
ret
fst
and
lahf
movs
and
mov
sbb
mov
cmp
jae
push
mov
cmp
aas
inc
fstp
iret
push
scas
push
or
jns
retf
push
pop
pushf
xor
repnz
rcr
fst
shr
lds
mov
ss
leave
cmc
adc
mov
ins
imul
fucom
lsl
xor
sub
cmps
mov
dec
xchg
(bad)
mov
and
mov
jo
jle
ss
jnp
int3
jmp
jne
enter
mov
dec
and
iret
push
fdiv
sub
call
aas
jl
(bad)
mov
jnp
into
cmp
movs
pop
dec
dec
sub
inc
stos
and
fdivr
mov
xchg
xor
push
sbb
(bad)
icebp
ror
sbb
std
fldcw
mov
add
mov
sbb
pop
stos
test
jnp
repz
pop
sub
es
push
or
mov
jmp
outs
dec
jg
out
sbb
ss
call
cli
sbb
inc
jns
test
jmp
jmp
inc
push
out
jmp
or
xor
pop
add
or
xchg
or
add
dec
sbb
out
movs
into
inc
push
and
jecxz
and
mov
std
shl
daa
cmp
xchg
mov
ds
dec
clc
in
sub
mov
push
jb
(bad)
stos
lds
fld
mov
xor
push
cld
inc
xor
inc
mov
push
into
loopne
enter
aad
inc
adc
aaa
xlat
sar
or
ins
(bad)
in
cs
inc
outs
popf
repz
mov
jle
pushf
mov
xchg
int
push
aas
add
loope
and
ja
ror
ds
mov
sub
sub
stos
dec
xchg
retf
cmp
xchg
out
mul
mov
add
test
pop
mov
ret
ret
jne
pushf
sub
jle
lahf
inc
mov
js
popa
lock
out
sub
lahf
mul
(bad)
push
dec
rcr
daa
scas
push
sub
repz
imul
mov
js
fiadd
div
xor
dec
jno
jmp
leave
loop
retf
lock
cld
jmp
gs
cld
ins
xchg
test
je
pop
sbb
int3
retf
rep
loopne
pop
xor
ins
mov
leave
mov
sahf
lods
mov
cld
mov
push
pop
std
sbb
into
loopne
cmp
push
adc
mov
imul
rcl
sbb
or
imul
jno
add
fisubr
and
mov
add
scas
test
jp
add
in
out
mov
push
pop
mov
scas
call
outs
aas
scas
aam
aas
shl
mov
and
xchg
ins
push
or
ftst
or
pop
sbb
mov
lods
jns
mov
xor
scas
push
lods
lock
dec
retf
out
or
sub
in
daa
pop
ret
jle
popf
and
mov
push
jmp
jns
jle
cmc
stos
mov
adc
(bad)
mov
ja
call
ins
jae
loopne
hlt
cmc
or
xchg
mov
dec
popaw
pusha
(bad)
in
inc
stc
cli
aad
add
aam
sti
bnd
frstor
test
std
xlat
push
jmp
pop
mov
jl
imul
icebp
push
movs
int
jo
lods
enter
repnz
or
push
xchg
gs
cmps
dec
vmovlps
test
idiv
jmp
push
cld
std
inc
pusha
dec
cmc
rcr
ret
mov
dec
cmp
add
fucompp
movs
mov
add
das
scas
and
jo
push
cmpxchg
lods
adc
test
out
dec
or
in
imul
xchg
push
mov
or
xlat
jns
repnz
pusha
xor
and
or
fwait
add
fsubr
(bad)
jne
fwait
rcl
int
int
cdq
mov
mov
add
imul
mov
(bad)
sub
xlat
arpl
lods
jne
push
fmul
popa
jb
jp
xor
jb
in
xchg
ja
mov
dec
int3
ins
pop
xchg
(bad)
pop
mov
dec
pop
imul
rol
addr16
jns
repnz
out
cs
mov
xor
mov
ins
inc
dec
inc
push
aam
xchg
lock
xchg
lods
fcomp
mov
shl
js
xchg
out
out
cld
imul
xor
mov
or
scas
pop
push
mov
sti
jmp
ret
push
neg
push
(bad)
xchg
hlt
xchg
imul
les
fimul
leave
add
adc
adc
sbb
and
in
jns
mov
xchg
arpl
das
pop
fisub
and
xchg
inc
in
nop
push
adc
dec
mul
std
adc
push
inc
sbb
or
pop
call
ins
sbb
out
sbb
neg
jl
(bad)
neg
out
jle
popa
repz
jecxz
mov
mov
cli
mov
fld
pop
push
mov
push
hlt
cli
nop
dec
fdiv
mov
mov
fimul
ds
fadd
cwde
add
sub
imul
mov
add
out
pop
push
pop
(bad)
xchg
into
fiadd
jo
or
loopne
test
sbb
out
pop
ss
das
outs
int3
jecxz
into
cdq
cmc
or
(bad)
inc
gs
ja
dec
adc
mov
mov
pop
pop
mov
jb
test
push
xchg
cs
xchg
xchg
or
fwait
adc
sub
test
test
xor
call
in
not
cdq
int3
mov
mov
adc
les
loope
push
pop
data16
ret
sbb
fistp
aad
jl
xor
push
xchg
dec
inc
push
sbb
adc
inc
and
push
dec
test
sahf
push
pop
sbb
ror
aam
out
jle
repnz
sub
shl
mov
out
mov
pop
dec
test
bswap
jp
sbb
icebp
movs
sbb
shl
xchg
bnd
call
or
lods
popf
addr16
mov
ds
std
adc
mov
fist
loopne
dec
pop
pop
push
ret
mov
or
cli
mov
cs
pusha
loope
push
xor
cmc
or
dec
ins
(bad)
mov
fmulp
(bad)
pop
ret
cld
adc
push
dec
cwde
shl
add
cld
mov
(bad)
repnz
xor
bound
cld
or
sbb
ret
repz
jg
or
jmp
rol
mov
or
das
mov
inc
stos
mov
push
(bad)
or
mov
and
rol
fistp
sbb
loopne
mov
pop
fisttp
mov
test
inc
push
out
push
push
mov
sti
stc
bound
mov
test
or
fwait
repnz
mov
fld
and
ret
or
dec
mov
push
dec
ret
fistp
aad
in
int
dec
or
and
out
ins
popf
dec
mov
adc
add
push
gs
or
xor
jne
mov
xor
out
ja
shr
mov
cli
aas
xor
sbb
xor
or
xchg
xor
out
icebp
jge
lods
mov
jo
jmp
xlat
jb
rcr
sti
add
inc
lods
xor
mov
xchg
imul
push
jne
sbb
xor
call
cmp
add
and
ror
lods
pop
(bad)
xor
arpl
mov
out
test
in
jge
add
pop
popa
mov
lea
sub
xor
sub
cmp
push
gs
in
movs
out
pop
pop
push
lahf
mov
gs
jecxz
shl
push
outs
push
popf
xchg
xchg
dec
mov
shl
xor
in
cmp
xor
das
sbb
scas
dec
icebp
pop
pop
gs
add
jg
shr
test
ja
mov
jle
adc
addr16
xchg
adc
adc
jae
in
(bad)
in
shr
jecxz
repnz
in
jle
stos
iret
outs
inc
push
xchg
out
cmp
arpl
daa
daa
call
fs
and
loopne
adc
pop
or
cli
jbe
mov
neg
lods
sbb
mov
loop
cmp
(bad)
mov
sar
(bad)
sbb
mov
adc
pushf
pop
rcpps
pop
push
scas
fdivr
dec
mov
ins
daa
test
mov
ret
js
sub
or
out
fstp
jns
test
das
and
mov
mov
shl
je
ins
mov
mov
xor
pop
xchg
fs
shl
dec
dec
scas
lahf
adc
lds
mov
cmp
sub
jg
dec
mov
add
push
xchg
(bad)
jle
loop
(bad)
fiadd
call
rol
ret
clc
ja
jmp
sbb
adc
or
bound
sar
and
jecxz
inc
dec
add
aas
jae
jnp
push
mov
loopne
jmp
pop
ror
mov
push
std
or
push
ins
js
bound
or
bound
sub
xlat
and
sbb
(bad)
std
cmp
dec
jne
mov
push
cmp
xor
pushf
mov
jmp
adc
scas
shl
int3
neg
sbb
adc
adc
mov
div
cmp
mov
sub
(bad)
cmp
retf
cmp
cmps
pushf
xchg
cmp
cmc
dec
mov
(bad)
repnz
xor
jmp
pusha
inc
in
pop
xchg
sahf
and
retf
ja
mov
xlat
mov
cmp
push
jp
jecxz
out
pop
hlt
xchg
mov
repnz
arpl
imul
jne
adc
aas
push
data16
ds
pop
xor
push
das
mov
jno
dec
call
sbb
pop
mov
jl
ins
mov
push
inc
shr
(bad)
ret
add
cmp
push
push
aaa
fs
test
and
repz
jae
xor
fnstcw
push
dec
rep
xchg
retf
push
pop
or
ds
jl
add
mov
mov
cli
or
push
mov
ror
sub
shl
shr
hlt
add
ds
dec
jmp
(bad)
(bad)
pop
and
sbb
jp
or
ret
jo
dec
pop
jge
push
xor
fadd
std
sbb
aaa
imul
jb
fidiv
aas
mov
mov
xchg
sub
cmp
std
dec
fimul
dec
inc
ins
mov
movs
cmps
test
cwde
cmps
inc
add
pop
xlat
cmp
cmp
jmp
inc
push
mov
push
mov
sbb
add
jbe
fstp
mov
xchg
leave
dec
or
ja
shl
adc
dec
push
in
stos
dec
mov
test
inc
sbb
inc
push
stos
push
mov
or
pop
(bad)
mul
outs
scas
mov
(bad)
and
xchg
out
mov
outs
jp
sahf
xchg
ins
aaa
jb
mov
xlat
or
xchg
inc
inc
pop
js
jbe
mov
inc
adc
sub
repnz
adc
pusha
ror
or
pop
mov
mov
call
sbb
xlat
sub
cmp
dec
(bad)
mov
pusha
lock
mov
das
fiadd
push
jle
sub
jmp
aad
arpl
fbstp
pop
cmp
outs
cmps
fisttp
adc
adc
adc
cdq
or
in
nop
mov
je
pop
iret
cs
lods
jbe
addr16
or
gs
inc
ror
sbb
out
jnp
into
sub
mov
jg
sub
inc
xchg
rcr
sub
mov
ins
into
xchg
or
mov
jno
dec
inc
cwde
rcr
fsin
mov
mov
dec
fs
stc
pushf
mov
mov
in
mov
push
in
faddp
mov
ss
pop
lahf
pop
and
dec
xchg
lods
stc
inc
ret
adc
mov
mov
jmp
fnstsw
xor
jl
cmp
xor
xor
loopne
pop
push
xor
xchg
jg
call
lock
inc
adc
and
xlat
repnz
neg
fstp
inc
call
cmp
ret
jmp
cmp
xor
push
(bad)
iret
(bad)
and
and
lds
or
or
into
xor
(bad)
sbb
push
or
and
mov
cmp
out
push
mov
ret
fsub
jecxz
hlt
shl
push
pop
sub
fsubrp
popa
int
mov
jno
and
lahf
js
or
pop
cdq
stc
aaa
adc
push
in
jge
lods
xchg
xchg
mov
add
adc
shl
add
cwde
aas
stc
int
outs
jbe
add
inc
pusha
mov
adc
jb
jae
sqrtps
fstp
dec
inc
adc
jge
mov
test
lock
ins
jne
fadd
add
adc
mov
push
pop
cwde
dec
push
bswap
imul
mov
inc
sahf
mov
test
fs
pop
xchg
arpl
rcr
retf
fwait
lods
mov
lock
jne
dec
and
fisubr
test
les
mov
jns
movups
jb
xlat
call
xchg
dec
sahf
hlt
mov
aas
shl
inc
mov
mov
jl
adc
mov
inc
xchg
or
cli
retf
outs
dec
dec
int
pop
mov
out
sbb
inc
sbb
add
retf
lahf
sbb
add
jl
jae
and
xchg
mov
cmp
cmp
dec
icebp
xchg
scas
(bad)
fwait
mov
loop
adc
xchg
cmp
pop
adc
gs
data16
loope
or
ss
pop
push
sub
in
mov
inc
xor
ins
lahf
inc
jg
adc
cmp
hlt
xor
cmps
movs
pop
pop
fsubr
mov
push
push
movs
mov
pop
pop
push
adc
mov
ffree
mov
fstp
in
and
(bad)
(bad)
cmp
lods
add
jecxz
stos
pop
and
cmps
fnstenv
inc
jecxz
movs
cli
inc
std
shr
ret
xchg
sub
stos
cdq
xor
xchg
jl
sub
test
inc
fild
pop
js
lods
mov
es
bound
mov
cmp
cmp
and
inc
and
mov
jp
fwait
cmps
int
sti
jb
xchg
pusha
mov
xor
xchg
pop
aas
and
mov
outs
das
fidivr
repnz
push
popf
pop
loopne
sub
not
inc
ja
add
(bad)
mov
push
fstp
mov
mov
fwait
repnz
mov
out
sti
or
xor
jmp
jge
stos
adc
hlt
hlt
push
bound
scas
push
mov
leave
adc
inc
mov
or
push
(bad)
pop
add
jmp
inc
repz
push
mov
lock
daa
popf
call
js
xchg
shr
mov
xor
fnstcw
sub
xchg
iret
leave
in
cmps
or
inc
inc
mov
std
cmp
js
or
mov
popf
jbe
imul
aas
cmp
addr16
push
jne
mov
inc
push
mov
pop
popf
or
ret
stos
lahf
sub
cdq
movs
dec
jge
cmp
fst
jge
xchg
out
pop
call
jecxz
int3
popa
fwait
inc
in
add
out
cmp
dec
cs
jmp
aaa
jmp
sbb
cld
pop
sbb
pop
sbb
pop
retf
inc
ja
ss
lock
and
addr16
xor
nop
mov
jo
pop
and
loope
inc
loop
pop
xchg
and
fwait
jmp
mov
pop
in
arpl
arpl
call
pushf
ja
fnstenv
cmp
test
jae
mov
sahf
cmp
mov
dec
stc
movs
data16
push
mov
push
test
mov
add
mov
push
int3
leave
inc
mov
daa
cmc
inc
push
enter
dec
jl
(bad)
dec
mov
adc
and
loope
repnz
test
or
ret
frstor
lahf
pop
push
test
out
int
fs
pop
add
clc
mov
imul
stc
fstp
dec
fst
xor
pop
mov
inc
dec
sar
aas
mov
es
fsub
scas
mov
inc
stos
dec
xchg
push
int3
mov
lea
pop
mov
add
sbb
fdivr
add
sub
or
leave
pop
aas
adc
rol
cmp
dec
stos
nop
sbb
neg
pop
mov
sbb
lods
add
inc
adc
lea
mov
aas
pop
data16
das
scas
pop
adc
and
pop
int3
das
pop
inc
push
dec
xor
not
push
xchg
or
mov
or
sahf
mov
and
in
mov
push
int
pop
addr16
leave
xlat
push
fwait
sub
fdiv
enter
pop
outs
jns
and
sbb
(bad)
cmc
aaa
pop
or
mov
push
sbb
mov
cmc
mov
inc
test
ret
mov
nop
mov
inc
xor
aad
loope
xchg
lahf
cwde
idiv
xchg
mov
in
in
in
xchg
sub
mov
jge
jnp
jne
and
sub
popf
test
add
dec
in
mov
mov
adc
push
push
cmp
sub
int
inc
pop
jmp
push
push
cmp
dec
or
cmc
sar
jmp
add
sbb
cmp
ja
pushf
push
mov
jle
jecxz
clc
pop
push
xor
push
push
stc
div
adc
cmp
xchg
(bad)
hlt
xchg
mov
dec
sub
sub
mov
jb
mov
pop
fild
push
shr
shl
aaa
inc
divps
add
gs
xchg
in
(bad)
mov
and
stc
and
inc
pop
dec
mov
loope
fmul
ins
cmps
fcmovb
or
mov
iret
and
leave
lds
xchg
loopne
addr16
call
pop
push
pop
pop
xchg
sub
jecxz
dec
pop
ss
and
cs
enter
cdq
mov
adc
adc
rcl
cmp
mov
add
mov
std
cmp
ins
js
xor
cdq
mov
push
push
mov
xchg
mov
add
or
gs
int
stc
push
repz
jp
push
cmp
inc
loopne
test
push
xor
and
xchg
test
and
int
dec
aas
jno
cs
cmp
jne
daa
cmp
mov
cmp
ss
and
mov
push
popa
(bad)
jbe
(bad)
sets
repnz
dec
cwde
xlat
mov
shr
add
ror
adc
shl
mov
mov
rcl
pop
sub
rcr
movs
pop
or
loopne
push
(bad)
fld
fcomp
call
inc
(bad)
std
stos
hlt
lock
adc
push
xchg
movs
add
(bad)
and
leave
jg
jae
add
push
pop
lahf
sbb
fidivr
or
adc
cmp
int3
inc
and
sbb
test
and
mov
mov
adc
adc
inc
popa
jbe
add
jl
dec
and
ror
ss
or
xlat
add
lock
out
aad
leave
(bad)
sti
js
pop
xchg
push
movs
mov
test
push
inc
pop
adc
out
xchg
pop
adc
in
push
in
jo
je
lods
inc
xor
(bad)
mov
xor
imul
repz
scas
cmp
sub
xchg
test
adc
fwait
rcr
xchg
icebp
(bad)
sub
mov
into
lds
push
cmps
retf
jno
xchg
jl
xchg
into
dec
fild
or
cmps
cmp
jb
enter
outs
mov
mov
pop
dec
cdq
dec
ins
jl
sar
lock
in
loop
xlat
xor
sbb
jg
nop
add
retf
imul
in
scas
(bad)
push
imul
popa
(bad)
ins
sub
outs
mov
in
pop
cmps
push
xor
cmps
jo
dec
fiadd
push
or
outs
mov
mov
jmp
sbb
(bad)
sahf
out
and
mov
pop
push
push
adc
xchg
cmp
aas
aaa
loopne
push
sahf
fs
dec
test
inc
adc
push
repnz
push
cmc
add
cs
mov
adc
das
sbb
enter
mov
repz
lahf
jmp
call
jne
retf
pop
dec
push
push
js
data16
mov
sbb
es
js
inc
movs
loope
mov
adc
fwait
das
call
xchg
dec
stos
inc
xchg
sbb
xor
popa
or
mov
push
mov
dec
ds
sub
cmps
mov
adc
(bad)
in
js
test
adc
popf
in
adc
loopne
and
retf
in
mov
gs
jp
clc
xor
lods
gs
sbb
mov
push
loop
xchg
push
out
aaa
mov
jno
xor
es
or
arpl
das
mov
pop
xchg
or
xchg
adc
pushf
aam
fs
push
test
jnp
adc
mov
data16
or
in
sub
imul
popf
cmps
or
je
mov
dec
pop
sti
not
movs
dec
iret
bound
dec
pop
jmp
cli
sbb
pop
mov
faddp
cmp
cmps
(bad)
aad
sbb
scas
lods
add
mov
or
pop
xchg
push
(bad)
jo
int
je
pusha
stos
adc
in
inc
lahf
cmp
rcl
repnz
sbb
push
test
rol
repz
les
cmp
adc
jmp
xchg
sub
mov
in
mov
addr16
inc
(bad)
mov
mov
pop
mov
ins
adc
xlat
icebp
xor
out
in
data16
sub
lods
lock
dec
dec
das
adc
add
pop
xor
popf
dec
cmp
xor
test
enter
or
cmp
inc
add
mov
cmc
pop
imul
sbb
and
mov
int3
sar
scas
das
jbe
jno
cwde
ins
sbb
aaa
sub
add
lods
in
jge
mov
sbb
leave
ins
mov
pusha
ins
outs
mov
ins
cmp
sbb
jne
mov
xchg
inc
adc
js
fdivr
scas
inc
test
bound
dec
adc
dec
loope
pushf
pop
lds
mov
imul
inc
pop
jle
mov
loop
adc
sub
mov
lahf
test
fiadd
add
xor
fcomip
mov
sub
outs
stc
sbb
mov
stos
mov
push
lahf
cmp
cmp
push
dec
cmp
inc
js
ror
in
dec
jnp
(bad)
cmp
and
xor
cmp
xor
xor
mov
inc
idiv
add
cmp
inc
ret
les
call
jle
adc
pop
and
sub
jp
stos
pop
cdq
cmp
mov
xchg
call
or
jmp
rcl
arpl
mov
pop
es
xchg
inc
shl
inc
mov
mov
mov
retf
pop
aas
mov
xchg
pop
sub
fucomi
ja
fsub
cwde
jno
aad
stos
(bad)
ja
or
jnp
or
mov
arpl
push
cmp
aas
cmps
scas
push
mov
cs
jo
es
sbb
(bad)
mov
pop
ficomp
shl
mov
(bad)
mov
iret
adc
hlt
sbb
mov
aaa
xor
push
sbb
lds
cmp
pushf
mov
stos
rcr
mov
xchg
cmp
iret
push
jo
and
out
xor
mov
les
int
jecxz
jecxz
movs
jns
jne
js
ins
sbb
aam
mov
xchg
jmp
dec
fs
push
pop
in
je
xor
cmc
or
xchg
pop
les
push
mov
dec
pop
and
mov
dec
ret
sbb
popf
pop
pop
add
fdivr
sar
aam
inc
and
mov
aaa
sbb
ins
jecxz
in
ret
ficomp
lahf
out
pop
outs
cdq
inc
push
inc
push
push
pop
addr16
addr16
pop
and
jo
mov
xchg
xchg
push
test
aaa
pop
shr
ror
fisttp
jnp
addr16
call
xchg
jmp
ja
jg
(bad)
outs
in
outs
xchg
mov
xchg
cli
or
fwait
test
or
jecxz
adc
adc
ja
movs
ins
movs
stos
retf
jmp
(bad)
sbb
jge
push
mov
iret
xchg
add
xor
pop
stc
adc
retf
nop
rcr
add
and
fldenv
xor
mov
lea
push
sub
xchg
jge
loopne
imul
js
mov
(bad)
inc
cdq
xor
(bad)
pop
or
(bad)
cmp
(bad)
fsubr
push
add
scas
xlat
aad
jecxz
imul
imul
sub
sbb
push
jmp
add
mov
jecxz
ficomp
jae
test
mov
enter
jo
xor
rcr
ret
imul
and
cmp
mov
loopne
retf
mov
and
stos
rol
loop
movs
xchg
aas
aad
add
adc
xchg
push
jns
aaa
in
add
push
sahf
jp
jecxz
pusha
add
and
mov
(bad)
rcl
jae
(bad)
movs
jg
and
cli
arpl
add
dec
xchg
stc
hlt
xor
(bad)
ja
scas
sbb
shr
and
mov
mov
xor
into
int3
xor
sahf
iret
imul
and
push
mov
out
popa
add
comiss
push
dec
imul
fs
and
adc
jnp
push
cmps
jb
jmp
inc
not
mov
mov
inc
or
jns
stc
push
loopne
jne
inc
ja
sbb
stc
push
enter
jle
adc
or
in
pop
push
scas
in
shl
xor
ficomp
loopne
rol
jo
lods
shl
ja
std
shl
in
rcr
in
push
daa
cmp
push
adc
adc
pop
mov
mov
xchg
xchg
jno
test
or
cwde
(bad)
(bad)
outs
sbb
adc
xchg
or
push
push
inc
and
jl
adc
mov
les
fbld
(bad)
mov
gs
mov
(bad)
xchg
retf
int3
call
jo
mov
(bad)
fs
in
test
aas
out
jecxz
je
ret
jecxz
pop
sar
cmp
jp
repz
pop
mov
pop
mov
pop
or
popf
pop
dec
adc
pop
in
or
idiv
xchg
mov
int3
xor
pop
jae
push
inc
inc
push
adc
and
in
adc
mov
dec
in
mov
inc
inc
add
xor
cmp
jge
adc
xor
sub
shr
xor
jp
xor
ja
movs
not
push
lods
sbb
inc
and
adc
mov
mov
mov
repz
shl
int3
adc
call
dec
jne
loope
out
xchg
call
retf
ds
addr16
scas
mov
xchg
jo
(bad)
mov
movs
jns
test
xor
fild
fadd
das
call
jp
das
stos
pop
sub
(bad)
jmp
test
sbb
cmp
mov
mov
aas
cmp
and
dec
push
outs
adc
dec
pusha
inc
sbb
addr16
scas
cli
enter
jmp
xchg
test
fcom
cmps
pop
cwde
test
out
lock
test
aam
in
out
dec
cmps
pop
mov
pop
mov
jg
jne
mov
mov
repz
jg
add
mov
lea
xchg
stos
lahf
and
sub
movs
in
mov
fdiv
inc
push
dec
and
lock
pop
test
cmp
jbe
add
rcr
fisubr
call
push
and
and
int3
mov
(bad)
je
pop
mov
cwde
aad
fcmovnbe
mov
cmp
hlt
cmc
inc
xor
and
jo
bound
arpl
jge
jge
adc
es
dec
pop
sub
push
ds
mov
loopne
sub
mov
sahf
aad
pop
test
cs
shl
pop
add
test
xor
adc
xchg
loope
jno
xchg
in
pop
fisttp
and
push
sub
enter
mov
mov
push
ret
cld
add
imul
loope
jns
sbb
jmp
in
stc
push
push
test
push
js
push
retf
fmulp
cld
test
adc
push
sti
cmps
pop
inc
adc
and
out
push
fs
mov
iret
int
lock
push
stos
(bad)
out
ss
jmp
add
jmp
popa
mov
mov
and
out
and
xchg
aaa
popa
lahf
mov
adc
ds
mov
mov
retf
sti
pop
jmp
cmp
out
test
dec
jmp
xor
sub
js
mov
mov
push
js
push
push
je
and
jecxz
loope
loop
xor
imul
icebp
stos
cmp
ins
push
imul
fisub
adc
pop
mov
stc
inc
out
sbb
(bad)
xor
inc
fmul
fsub
repz
add
fiadd
test
clc
or
(bad)
mov
inc
jne
sbb
push
dec
and
cs
push
push
pop
call
gs
stos
xor
stos
cmp
xchg
int3
scas
push
sbb
pop
dec
movs
in
dec
or
(bad)
jne
adc
cmps
inc
adc
inc
xchg
(bad)
cmp
fdivr
add
push
ss
fdiv
cmc
sub
push
and
adc
mov
ja
loope
push
push
mov
dec
jg
scas
fist
fisub
bound
outs
aam
pop
inc
(bad)
cs
(bad)
fnstsw
inc
repz
fbstp
aad
not
pop
adc
hlt
ja
(bad)
push
sub
out
xor
jge
xchg
loope
add
push
add
aas
add
clc
xor
(bad)
xor
repnz
and
dec
cmp
mov
out
mov
adc
stos
sub
mov
cmp
jge
jb
sar
pop
or
xor
pop
aas
shr
cmp
adc
fisub
in
push
cwde
out
scas
mov
dec
xchg
in
mov
jge
pop
cmp
fimul
shl
iret
aas
xchg
xchg
mov
mov
adc
out
stc
jo
jnp
jne
and
or
jg
cmps
add
dec
out
rcl
es
into
stc
pop
pop
xchg
aam
cmc
stos
xor
and
sub
aam
out
jns
mov
and
idiv
adc
add
cmp
icebp
ins
pop
aad
ficomp
inc
popf
aad
pop
cmp
mov
jbe
xor
scas
add
imul
cwde
rcr
xchg
lods
scas
xchg
outs
push
and
hlt
cmps
mov
popf
ret
inc
dec
jmp
sub
xchg
sar
pop
and
mov
jmp
or
jp
clc
jmp
xor
jo
push
inc
test
addr16
bnd
or
shl
mov
pop
les
xchg
test
mov
mov
pop
adc
xchg
jno
sbb
jmp
add
mov
gs
mov
(bad)
lods
adc
xchg
retf
rol
sahf
adc
add
pop
mov
loopne
jg
imul
js
jp
test
xor
mov
sbb
jmp
jle
jecxz
fadd
js
jb
mulps
fisubr
lea
scas
jne
and
dec
mov
mov
mov
std
inc
dec
lods
jne
popf
out
(bad)
shr
ret
je
push
add
mov
xlat
xchg
scas
cmc
movs
cmps
scas
in
sub
xor
mov
xor
adc
jl
pop
outs
sbb
cs
push
mov
adc
mov
enter
or
leave
int3
dec
outs
mov
jecxz
and
adc
mov
xchg
xor
and
add
mov
mov
pop
mov
cmc
rcr
xor
fs
das
or
div
retw
mov
cmp
shl
adc
lods
jns
jnp
xchg
test
xor
jno
or
mov
les
bound
mov
inc
shl
inc
push
cwde
sub
sbb
xchg
cmp
xor
(bad)
push
adc
sbb
dec
xchg
dec
movs
push
leave
add
sub
push
fwait
xchg
pop
mov
aaa
jecxz
add
jecxz
ins
leave
dec
jb
dec
push
push
in
or
test
cmps
rol
jmp
imul
push
test
sar
lods
mov
sysret
xchg
icebp
sbb
(bad)
popf
scas
fs
mov
shr
lahf
mov
in
ret
mov
retf
jns
xor
ins
ret
cmp
shr
lods
mov
xchg
gs
movs
dec
mov
aaa
pop
les
lahf
int
test
and
add
cmp
fcomp
sbb
mov
inc
cmp
bound
push
cmp
push
cmp
sbb
enter
inc
or
cmp
adc
ins
bound
stc
(bad)
and
push
pop
sub
cmp
rol
gs
loopne
and
shl
push
jno
cmp
addr16
je
les
pop
movs
nop
mov
bound
mov
dec
push
xchg
in
mov
mov
test
and
sub
out
push
sbb
sub
fild
(bad)
test
popa
mov
scas
(bad)
sub
cmps
sbb
dec
icebp
and
popa
mov
cwde
js
pusha
out
sti
fisub
cmp
ins
sub
scas
enter
push
xor
pop
retf
stc
pop
mov
or
add
adc
nop
or
jb
out
adc
jge
inc
mov
dec
push
dec
shl
pop
mov
movs
into
push
daa
add
sahf
data16
stos
das
out
int3
pop
xchg
adc
jmp
mov
push
pusha
test
mov
xlat
out
pop
aad
pop
jl
out
(bad)
in
add
fwait
xor
popf
or
pushf
push
pop
add
je
sbb
cwde
sbb
pop
pop
and
jg
push
or
inc
movs
pusha
mov
(bad)
pop
push
mov
fnstsw
dec
jb
inc
retf
(bad)
jg
and
sahf
or
mov
or
out
(bad)
add
adc
movs
sub
pop
data16
jno
xor
outs
in
push
and
aas
out
icebp
jae
popa
push
jb
gs
pop
rol
pop
mov
mov
inc
(bad)
imul
sbb
inc
mov
into
(bad)
cli
and
xchg
pop
retf
inc
mov
or
hlt
jg
jns
mov
fs
cmp
mov
inc
mov
push
mov
movs
div
int
jmp
out
xor
mov
out
outs
jp
rcr
cmc
dec
cmp
jo
stos
enter
ss
push
mov
jle
aaa
mov
popa
daa
dec
mov
leave
sub
in
adc
std
or
je
jne
jae
push
sub
and
sbb
(bad)
int
inc
bound
outs
cmp
cmp
mov
cdq
mov
inc
cmp
(bad)
mov
cs
inc
out
push
inc
xchg
and
or
cdq
or
in
sub
and
or
pop
(bad)
jg
test
imul
loopne
jns
pop
out
adc
je
and
loopne
je
addr16
push
pop
xor
hlt
movs
call
enter
add
or
lock
add
xor
lds
jnp
mov
jle
mov
push
movs
mov
scas
clc
inc
cmps
mov
dec
push
jl
or
xchg
mov
scas
scas
shr
pop
or
repnz
js
mov
lods
and
and
repnz
fldenv
sub
mov
sbb
shl
mov
test
retf
fs
imul
add
ds
into
xchg
inc
xor
inc
arpl
cmp
mov
movs
out
outs
aaa
sbb
loopne
xor
adc
pop
push
push
sub
pop
inc
cs
orps
inc
xor
or
(bad)
popa
int3
mov
jle
adc
enter
push
mov
retf
cmp
(bad)
push
cdq
dec
push
nop
pushf
pop
inc
pop
mov
lea
sahf
or
(bad)
dec
(bad)
pop
cmps
xchg
pop
es
dec
add
inc
retf
inc
lds
stos
mov
movs
pushf
lods
lahf
or
sub
sub
pop
jae
rol
pcmpgtw
call
fld
adc
mov
jmp
sbb
or
sbb
dec
cmps
leave
pop
int3
call
mov
cmp
pop
repz
aam
cs
mov
jae
popf
jecxz
pop
pusha
leave
daa
in
or
pushf
lods
pusha
lahf
sbb
hlt
adc
mov
cmc
xchg
add
in
retf
icebp
std
jl
in
mov
mov
repz
test
or
adc
fimul
outs
xchg
js
ss
sub
inc
jb
lods
fmul
adc
adc
inc
pop
cmp
mov
fsubr
test
fiadd
es
imul
xchg
jns
pop
dec
jo
xor
loop
jg
iret
addr16
outs
fstp
rcl
in
into
je
adc
pop
bswap
mov
out
aam
cld
ds
retf
lahf
and
ficomp
mov
jnp
mov
adc
in
sti
mov
mov
ins
adc
add
outs
dec
sbb
ins
outs
ins
xor
push
sbb
mov
or
cld
jmp
adc
ror
stc
push
pop
jnp
std
mov
mov
xchg
dec
mov
pop
daa
xor
je
jg
test
cmp
jno
(bad)
and
xor
cmp
ss
sbb
leave
imul
icebp
dec
push
mov
jmp
bound
outs
lods
stc
idiv
sub
in
xor
dec
push
leave
test
imul
sub
hlt
or
and
jae
jne
mov
sti
stos
pop
adc
mov
retf
stos
mov
mov
rcl
movs
cmp
fadd
imul
fld
xchg
or
dec
inc
imul
inc
lods
jae
pop
imul
jae
hlt
loope
or
shl
cmp
ins
adc
dec
and
cmc
sub
les
mov
sbb
xor
mov
push
mov
or
jle
mov
and
inc
push
jae
jmp
or
out
aas
mov
jge
push
sahf
shl
mov
push
dec
dec
pop
xor
bound
adc
scas
sti
aam
add
mov
scas
scas
cmp
repnz
inc
out
or
sub
cmp
cmp
and
mov
mov
and
jne
or
sub
push
adc
aam
adc
push
mov
mov
inc
in
scas
pop
lods
xor
scas
fwait
(bad)
mov
jmp
neg
imul
movs
je
pop
lock
mov
in
outs
je
xor
inc
sbb
fidivr
pusha
sub
ins
jle
or
mov
aaa
jne
jmp
sbb
inc
fwait
push
push
in
out
test
repz
fwait
cwde
stc
test
lock
cmp
push
retf
into
push
outs
add
dec
iret
sub
loop
or
dec
mov
push
sbb
outs
imul
and
jae
xor
and
mov
jle
adc
inc
pop
xor
fidivr
jbe
adc
test
mov
ins
adc
jb
aad
arpl
jb
xor
mov
dec
sub
das
ins
ss
add
add
mov
loop
adc
xor
mov
xlat
fld
das
and
fnstcw
xor
jmp
lock
pop
lods
mov
cmps
and
cli
cwde
retf
call
push
cmp
cli
add
mov
loope
cdq
mov
pop
stos
daa
mov
dec
mov
sbb
pushf
jnp
mul
je
call
arpl
fwait
stos
push
xchg
out
inc
mov
cmps
sbb
xlat
mov
adc
mov
adc
test
jge
cmp
xchg
mov
pop
push
fbld
mov
(bad)
hlt
cmpxchg
push
repz
ret
sbb
dec
jp
loopne
cli
and
or
lods
pop
jge
jmp
int
fdivr
mov
fiadd
addr16
retf
mov
sar
adc
divps
push
pop
jne
stos
outs
arpl
or
adc
and
cmp
inc
or
stos
mov
or
inc
leave
sbb
out
sar
clc
ins
(bad)
xchg
push
mov
dec
(bad)
retf
add
or
mov
in
adc
mov
mov
dec
dec
sub
mov
adc
xor
ret
fimul
jl
cmc
mov
add
mov
push
cmp
mov
inc
or
cli
dec
pop
fild
test
push
popa
bnd
pop
out
add
add
or
add
or
sbb
jnp
out
loopne
fucom
in
loopne
scas
imul
xchg
fcom
rol
jbe
push
adc
or
test
push
es
add
ins
scas
xchg
in
jg
fcmove
movs
add
cmp
aas
xchg
out
mov
xor
loopne
arpl
fisubr
xor
pop
lods
xor
sbb
pusha
(bad)
das
mov
fistp
aaa
add
iret
cdq
sub
ins
fdiv
xor
pop
jnp
dec
jne
pop
iret
pop
ror
cmp
pop
jns
or
pop
iret
nop
fild
outs
popa
adc
jns
imul
test
fdivr
dec
fild
in
std
xor
inc
xor
sub
sub
xchg
pop
nop
mov
pop
retf
add
icebp
(bad)
mov
js
add
dec
(bad)
mov
and
mov
adc
cmp
and
or
sbb
pop
inc
je
aas
in
(bad)
push
adc
mov
pop
js
pop
dec
xor
aam
outs
dec
push
or
mov
mov
xchg
cld
mov
clc
add
jno
arpl
retf
aad
mov
and
sti
xor
leave
xchg
xor
call
inc
std
out
mov
movs
loopne
outs
push
push
adc
or
sbb
(bad)
lahf
dec
xor
jp
jne
sub
jmp
cmp
fiadd
pop
inc
adc
mov
stos
dec
inc
and
shr
push
jno
xchg
xchg
sbb
cwde
jne
repz
add
push
rcl
cli
outs
cmp
mov
xchg
xchg
and
mov
mul
sub
mov
popa
xor
ficomp
push
lds
in
leave
das
jge
inc
arpl
sbb
or
arpl
loopne
sbb
test
dec
push
(bad)
repnz
push
inc
pop
icebp
xor
data16
outs
cs
dec
mov
inc
cmp
dec
lahf
dec
movs
xchg
addr16
xchg
ja
sub
and
adc
inc
xor
push
dec
cmps
dec
dec
ja
inc
dec
outs
xchg
in
repnz
call
pop
mov
cmps
ins
cs
loop
in
mov
adc
or
scas
mov
and
pop
xor
cmps
xchg
hlt
jle
in
in
out
dec
fisttp
les
imul
mov
movs
xor
jecxz
fcomi
rol
icebp
repz
das
jp
ss
xor
mov
or
mov
sbb
mov
bound
mov
aad
xor
fwait
stos
fistp
in
jbe
cdq
push
jp
and
mov
or
sub
xor
mov
rol
fst
pushf
imul
cmc
mov
xor
add
inc
aam
ins
jecxz
jl
icebp
pop
adc
mov
or
dec
pusha
xlat
sahf
enter
push
xor
call
or
sub
shl
in
jge
mov
inc
pop
push
xchg
inc
aaa
int3
jae
jno
psllq
test
fsub
(bad)
sti
mul
shl
jp
test
into
pop
and
add
scas
pop
cmps
stc
cmp
push
aad
or
test
(bad)
mov
cdq
mov
xchg
cmps
out
push
lds
and
repz
xor
add
into
push
fs
popf
dec
and
sub
cs
inc
xor
loope
imul
pcmpeqb
and
mov
add
cwde
jns
cwde
test
fsub
push
fmul
cmp
push
scas
stos
cmp
pusha
mov
lahf
aas
sar
mov
sub
jno
add
stc
sbb
or
mov
daa
cli
mov
adc
xchg
xchg
shr
or
inc
push
sahf
xchg
(bad)
dec
fiadd
pop
mov
and
jns
xor
and
push
dec
mov
enter
jg
push
scas
test
and
sbb
push
sub
test
ret
xor
lods
jle
mov
dec
mov
inc
jp
mov
je
rcr
inc
lahf
sbb
add
or
jp
std
adc
dec
repnz
cmp
cmps
pop
call
and
jno
mov
test
mov
mov
push
xchg
mov
rol
push
movs
dec
mov
inc
cmc
fimul
xchg
dec
ret
cmc
inc
sub
fsub
and
cmps
inc
adc
in
dec
mov
int3
dec
ret
fwait
cmps
cmp
add
stc
out
bound
add
sbb
jecxz
mov
push
cmp
and
pop
cmp
and
sub
or
mov
in
cld
out
jb
sbb
mov
mov
push
icebp
mov
mov
(bad)
cs
les
push
dec
cmps
out
lahf
scas
fdivrp
jge
aaa
sbb
imul
in
in
outs
mov
xchg
dec
js
dec
jae
add
jp
and
ret
jne
pop
cmp
push
repnz
sahf
arpl
in
add
jl
popa
call
push
mov
popf
sub
(bad)
jb
stc
adc
rcr
pop
adc
(bad)
xchg
daa
adc
add
jbe
cld
dec
add
repnz
jle
popa
cmp
push
jae
cs
jae
push
imul
retf
mov
sub
lods
xor
cmps
iret
sbb
inc
jb
and
popf
outs
push
ret
and
enter
xchg
out
mov
jl
stos
mov
jg
lahf
ins
int3
mov
jmp
mov
mov
mul
push
(bad)
jns
sub
ins
movs
icebp
je
(bad)
pop
rol
mov
adc
add
mov
in
sbb
jge
and
mov
sub
pop
jnp
push
popa
hlt
stos
stos
in
ss
adc
out
jp
arpl
jecxz
js
aas
dec
leave
xchg
cmp
jnp
mov
pop
mov
ins
fnstenv
repz
mov
ins
int3
ja
shr
xor
mov
(bad)
std
inc
push
inc
jge
ret
sbb
mov
jne
stos
(bad)
mov
(bad)
lods
fcom
push
add
mov
adc
mov
test
(bad)
imul
in
ss
ret
cmp
outs
fist
jg
pop
std
push
lods
cdq
adc
outs
or
xchg
retf
fwait
stos
mov
fst
adc
scas
sub
jmp
lahf
outs
das
mov
inc
lods
es
mov
je
jecxz
outs
xor
pop
cmp
scas
out
mov
inc
mov
popa
stos
repz
and
test
repnz
jge
jp
push
mov
push
pop
scas
shl
cld
and
xor
sbb
lods
outs
mov
xor
mov
stos
pop
imul
call
mov
stos
pushf
ja
mov
inc
xor
dec
in
ins
inc
in
mov
add
js
repnz
lods
dec
add
repz
ins
xor
popf
aaa
lea
popf
dec
call
imul
or
push
ss
cmp
jecxz
sub
xchg
ret
push
loope
rcl
adc
push
fdiv
and
and
pusha
mov
or
movs
mov
mov
pop
jno
int3
xchg
mov
jmp
clc
cmp
mov
hlt
scas
jge
data16
sar
pop
retf
jmp
and
repz
xchg
inc
or
sbb
jecxz
jns
js
cmp
and
sbb
mov
cmps
inc
stc
sar
cmp
popa
sar
pop
ja
mov
push
add
add
cmps
cmp
mov
aas
pop
sub
test
lods
adc
dec
dec
xchg
cmps
test
loope
xchg
xor
ds
adc
daa
or
scas
aaa
push
and
shl
fdivr
xor
push
in
mov
inc
or
ror
cli
sbb
ficom
test
xchg
stos
inc
pop
ins
push
sbb
outs
pop
cld
xor
or
cmp
cs
je
repz
scas
jp
xor
sub
stos
dec
pop
or
xchg
in
or
mov
imul
mov
sbb
pop
and
cld
inc
cmps
sub
push
sbb
loop
std
mov
mov
adc
mov
bound
mov
or
imul
test
mov
pop
call
nop
mov
sub
jbe
mov
inc
jmp
sub
jmp
daa
and
pop
pop
cmc
and
jnp
mov
jae
and
and
loopne
mov
retf
in
scas
cmp
jbe
rol
int3
jns
scas
adc
shl
adc
mov
jbe
push
dec
jmp
lahf
or
push
enter
stos
aam
push
repnz
shl
sub
cmps
stos
push
mov
pop
call
je
or
leave
adc
call
mov
inc
mov
je
cdq
mov
fild
pop
mov
dec
sbb
ret
idiv
or
xor
out
repz
call
add
cmp
xchg
imul
push
cmps
inc
jbe
dec
pop
cmp
sti
shr
push
xor
mov
xor
mov
fsubr
pushf
xor
hlt
outs
ds
push
sahf
ja
jb
repnz
mov
imul
cmp
sub
push
cmps
in
in
inc
test
push
add
pop
push
shl
mov
ss
xor
mov
sbb
mov
mov
mov
ret
push
mov
cmps
dec
inc
mov
and
iret
add
scas
and
jbe
mov
in
xor
add
std
mov
or
mov
jl
gs
cwde
enter
aad
in
xchg
outs
cmc
out
mov
xlat
pusha
xchg
xor
sub
dec
aas
iret
mov
lea
dec
dec
rcr
xor
test
sbb
inc
dec
mov
hlt
addr16
dec
lods
inc
and
dec
ror
pop
scas
mov
cmp
rep
ret
cmp
clc
(bad)
xchg
mov
cld
nop
mov
mov
imul
sub
fxch
mov
fadd
sahf
ffreep
ss
(bad)
jp
ins
cmp
fstp
(bad)
fs
pop
jg
inc
fwait
inc
xchg
fadd
call
aad
shl
cmps
(bad)
loop
inc
cmp
adc
or
gs
xor
aad
pop
sub
or
or
aas
mov
ror
fdiv
lea
clc
cmp
mov
out
xchg
cmc
pushf
je
pop
test
sub
xchg
stos
and
add
cli
test
adc
xchg
dec
shl
es
adc
sbb
leave
jmp
xlat
xor
mov
pop
cdq
cs
sub
popf
fcmovnb
cmp
mov
es
mov
and
cmc
outs
adc
mov
jg
and
jmp
mov
dec
sub
fldenv
aad
retf
xor
into
sub
scas
sbb
nop
pop
cdq
sbb
in
dec
jle
mov
mov
out
jb
mov
ret
jmp
cs
stos
cmps
fucomip
loope
and
xchg
cmp
mov
aam
and
inc
stos
jle
ss
push
fwait
mov
push
shl
mov
cmp
fiadd
cmp
mov
popfw
jmp
test
addr16
ret
sbb
sti
mov
add
sub
pop
ret
ret
mov
sti
pop
lods
std
xor
xchg
sub
rcr
out
push
shl
jns
cmp
adc
jl
out
call
cmps
jmp
or
or
adc
nop
popf
enter
dec
mov
mov
imul
adc
cmp
xchg
push
adc
retf
xchg
pop
ja
or
adc
call
stos
dec
(bad)
mov
out
fcom
repnz
fdiv
or
adc
add
jo
repnz
add
div
xor
jo
out
leave
loope
dec
lods
enter
test
adc
jbe
mov
sbb
push
inc
loope
iret
inc
dec
xchg
movs
cmp
or
popf
in
push
dec
lods
ret
push
add
into
lock
cmp
cs
and
ds
dec
test
test
in
sub
aas
xchg
cmc
sbb
(bad)
jmp
fistp
xchg
add
xchg
and
scas
xlat
adc
fiadd
xlat
mov
fs
loop
das
pop
mov
dec
dec
(bad)
sbb
pop
push
std
cmp
gs
dec
adc
and
or
push
shl
pop
imul
push
aad
dec
fs
push
xor
jmp
scas
or
sahf
sub
fld
cmp
xor
pop
add
xor
aas
inc
aad
push
xlat
fs
mov
jnp
add
pop
xchg
adc
dec
or
frstor
ror
cmps
pusha
jecxz
push
das
push
or
sbb
pop
xor
mov
stc
sahf
jb
sbb
push
push
pop
dec
jl
es
in
call
in
and
push
mov
add
and
mov
(bad)
mov
setno
dec
xor
pushf
cmp
jno
xor
jmp
xchg
dec
std
cmp
jle
mov
pop
mov
dec
dec
mov
and
(bad)
hlt
adc
dec
cmps
sbb
enter
pop
cli
sub
and
aam
lds
aaa
adc
test
push
mov
hlt
mov
and
sahf
lds
jecxz
push
cwde
test
xor
mov
gs
(bad)
mov
inc
jge
pop
lods
in
in
adc
cmp
push
xchg
cld
and
pusha
jmp
lea
sar
(bad)
bnd
repnz
test
ror
push
retf
dec
or
adc
xchg
xchg
xlat
sub
xchg
into
movs
call
jne
xchg
ror
or
push
pop
pop
lds
fxch
sub
xchg
mov
out
in
dec
sub
(bad)
es
inc
inc
ds
xchg
add
xchg
push
leave
test
loopne
shl
ror
arpl
xor
test
xchg
(bad)
call
aaa
test
cmp
popa
test
ret
jb
test
jg
rcr
arpl
nop
in
fist
push
cmps
aaa
bound
cdq
(bad)
mov
(bad)
xchg
pop
sbb
fisubr
push
fidiv
jae
imul
push
xchg
shr
lds
pop
ret
add
aas
fs
out
xor
adc
add
js
ja
dec
or
ins
les
(bad)
push
mov
in
cmc
cmp
repnz
fdiv
fidiv
fwait
arpl
rcl
and
aaa
fcmovnu
lahf
and
or
dec
(bad)
fisubr
pop
xchg
ror
add
cmp
cmp
out
lea
mov
cmp
daa
adc
into
push
inc
add
data16
xchg
call
fdivr
pop
jmp
loop
loope
mov
jecxz
jp
xchg
movs
inc
push
cmps
arpl
adc
arpl
mov
stc
neg
fisttp
sub
(bad)
in
sbb
loopne
push
daa
add
pop
fcmovu
mov
lock
inc
stos
xor
jo
mov
aaa
dec
xor
or
repz
clc
std
int3
push
test
inc
and
dec
ss
inc
cmp
cmp
push
adc
xchg
addr16
or
popa
and
aam
jo
xor
mov
popa
mov
cld
cwde
call
jl
sub
mov
(bad)
(bad)
mov
mov
lods
in
pop
sbb
adc
test
cwde
sub
test
fimul
mov
sbb
(bad)
loope
dec
test
dec
or
retf
aad
jbe
mov
mov
sub
pushf
xchg
add
stos
xchg
pop
push
pop
inc
xchg
or
stos
xchg
push
jle
out
push
movs
daa
aam
scas
adc
mov
cmp
push
in
or
adc
mov
sub
sbb
pop
and
pushf
nop
adc
shr
ins
test
jmp
stc
push
dec
sahf
add
push
or
es
dec
adc
jmp
mov
fsubr
pop
mov
ret
lods
das
mov
fadd
add
das
cmp
idiv
push
add
and
jbe
addr16
sbb
es
loope
and
mov
out
adc
pusha
popf
test
jbe
xchg
mov
mov
xchg
fld
jns
ss
cmc
stos
fs
ds
mov
mov
and
xor
push
mov
outs
out
aaa
movs
jne
addr16
adc
jae
mov
div
(bad)
rol
out
jbe
and
push
or
pop
fwait
lds
dec
mov
inc
inc
pop
loope
mov
xchg
and
stos
or
jns
xor
or
pusha
mov
clc
or
cli
out
mov
in
push
add
dec
pop
dec
gs
cdq
aaa
cmp
jl
dec
push
ret
addr16
xor
loop
jne
aaa
(bad)
inc
bound
sbb
push
sub
pushf
daa
or
cld
hlt
push
inc
lea
or
jl
loope
mov
into
lock
cmp
mov
and
dec
(bad)
adc
imul
xchg
push
push
shr
xchg
push
pop
es
mov
cmp
inc
add
cmc
les
sub
xor
push
jp
out
pop
dec
xlat
arpl
jmp
ret
pop
das
ret
pop
sbb
xchg
popa
sbb
push
sub
jg
lock
sbb
loopne
icebp
loopne
push
mov
pop
or
xlat
xchg
mov
jg
dec
xor
fisttp
das
push
cwde
mov
pop
test
pop
mov
int3
jbe
mov
push
ins
pop
push
jb
push
xchg
imul
adc
les
loopne
cdq
cmp
and
inc
mov
jmp
in
mov
je
repz
fist
out
cmp
mov
and
ficomp
or
outs
inc
sbb
test
cmp
dec
inc
movs
stos
inc
jne
xchg
das
ins
lahf
cmp
mov
inc
mov
test
push
sar
mov
js
pop
mov
popa
sbb
bound
ja
xchg
xchg
out
outs
inc
adc
mov
mov
popf
aad
sbb
pop
xchg
in
pushf
ins
aaa
ins
jl
mov
rcl
popa
cdq
popf
jmp
mov
sti
shl
f2xm1
(bad)
cmp
jmp
cmps
mov
pop
xchg
dec
dec
(bad)
int
test
pop
ja
out
jns
lahf
dec
jns
adc
sbb
pop
popa
dec
add
sahf
cmp
pop
sar
inc
and
cmovle
mov
dec
mov
neg
adc
int3
pop
and
pop
push
dec
mov
jmp
fs
dec
add
pusha
jo
dec
xchg
test
clc
icebp
pop
gs
push
mov
aam
mov
ret
rcr
mov
out
(bad)
ror
fs
fsub
imul
cwde
sub
enter
iret
adc
cld
call
adc
stc
push
les
jg
call
sub
in
ror
fwait
mov
cmps
sbb
adc
(bad)
xor
sahf
push
push
pop
icebp
sub
movs
or
dec
push
test
sbb
lods
leave
inc
mov
cmp
daa
add
(bad)
popf
frstor
xchg
inc
popf
jns
jno
mov
push
jl
fisttp
xchg
stos
jnp
adc
inc
xchg
sub
outs
fwait
jl
xchg
and
add
mov
jmp
inc
sub
adc
pusha
xor
icebp
mov
scas
fnstsw
js
dec
in
add
bound
mov
lea
pusha
cld
es
call
clc
pop
push
push
xor
mov
adc
in
pop
out
bound
nop
fimul
jne
add
scas
push
(bad)
push
dec
mov
out
xor
push
dec
jle
ret
xchg
jmp
mov
xchg
mov
out
data16
inc
shl
jo
pop
fst
fwait
pop
test
push
shl
mov
xor
out
loop
test
addr16
dec
xchg
push
xchg
cmps
xchg
sti
mov
inc
scas
ja
fisubr
add
hlt
addr16
jns
or
inc
jae
mov
out
push
sbb
push
cs
mov
sub
loop
mov
addr16
sbb
cwde
push
pop
dec
adc
in
mov
mov
sub
(bad)
sub
jbe
pop
fsubr
cli
adc
imul
mov
sbb
mov
and
lahf
and
push
mov
mov
or
adc
xchg
sub
mov
sbb
pop
xor
dec
ret
repnz
mov
dec
push
into
mov
dec
nop
(bad)
jmp
sub
std
push
jns
mov
popf
jns
dec
ja
push
sub
push
inc
add
dec
pop
int
in
push
rol
jmp
xchg
les
imul
mov
ins
jmp
pop
sar
or
lock
sar
xor
dec
int3
mov
shr
inc
mov
retf
push
daa
or
std
mov
mov
sub
lods
neg
fldcw
or
outs
shl
shl
push
je
in
mov
push
dec
or
sub
cwde
pop
sub
jle
jns
and
xchg
sbb
out
fsub
lahf
iret
loopne
fadd
mov
mov
add
addr16
imul
mov
inc
rcl
cs
gs
aas
mov
sub
xor
xor
push
add
cmp
or
(bad)
xor
pop
data16
inc
lea
and
jl
jge
inc
mov
push
les
fdivr
imul
cmp
jns
ret
sti
rol
lods
pop
aad
or
(bad)
stc
fcomp
outs
fnstcw
add
adc
or
pop
(bad)
pushf
xlat
cmps
or
leave
mov
pusha
call
mov
retf
mov
rcr
in
add
stc
dec
rol
cmp
jnp
mov
mov
inc
in
sub
outs
fdivr
aam
ds
loop
js
call
lahf
cmp
fadd
aas
pushf
sti
mov
sbb
or
mov
jl
lahf
ja
pop
xor
push
push
push
loop
xor
stos
mov
or
lahf
mov
mov
pushf
push
sbb
into
dec
mov
out
pop
push
xchg
mov
int
sbb
push
jne
arpl
aaa
gs
push
cs
ja
dec
xchg
ins
lea
mov
sbb
cdq
popf
dec
xchg
xor
adc
mov
mov
cmp
cmp
lock
frstor
jge
cld
xor
retf
sbb
ins
push
jmp
sub
into
adc
add
les
repnz
cmp
lds
xor
ss
inc
mov
or
xor
mov
fild
shr
in
xchg
lock
inc
inc
cs
sub
cs
sub
mov
(bad)
pop
js
(bad)
cmp
inc
mov
dec
xchg
(bad)
sbb
scas
xor
sub
enter
sub
jge
mov
std
add
rol
cmps
mov
mov
outs
mov
retf
shl
or
xor
xor
(bad)
in
jle
aad
cwde
lahf
js
cmp
div
aad
pop
adc
xchg
add
mov
jb
and
cld
jge
retf
movs
lahf
aad
pop
outs
sub
pop
fbstp
sub
dec
push
fimul
pop
ret
mov
call
lahf
dec
add
jne
xchg
inc
(bad)
cmp
lods
test
les
icebp
mov
jl
dec
lea
aaa
add
aam
mov
out
je
sbb
sbb
sbb
adc
cwde
sar
xor
xor
dec
inc
stos
addr16
mov
movs
dec
jge
repnz
mov
add
bound
pop
push
xor
data16
push
xor
and
mov
les
or
cmp
stos
adc
pop
pop
(bad)
mov
out
jmp
aam
sbb
xor
pusha
pop
and
movs
call
add
ret
lods
sub
pushw
fstp
frstor
add
xchg
js
or
mov
mov
fiadd
mov
rcr
sub
push
mov
xor
jle
mov
nop
gs
inc
shl
pusha
jle
shr
loop
push
mov
ret
jno
test
cwde
enter
xchg
dec
mov
mov
mov
or
or
sub
loopne
sbb
adc
jo
popf
add
xchg
push
inc
ss
ja
pop
fisttp
dec
sub
adc
mov
test
hlt
fwait
push
add
push
not
pop
and
mov
in
fcomp
and
out
pop
dec
and
jp
mov
into
or
mov
add
leave
push
and
xchg
sbb
dec
popa
add
nop
inc
fisubr
hlt
fisttp
call
mov
cmp
movs
in
out
xchg
or
nop
cmc
in
ror
fdivrp
neg
pop
mov
sbb
fadd
xchg
push
or
pop
mov
jmp
sti
mov
pcmpgtd
adc
sbb
aas
arpl
inc
add
stos
les
push
and
cmp
repnz
sub
push
mov
adc
jg
das
mov
or
lds
(bad)
out
inc
mov
stos
test
les
mov
mov
mov
imul
shl
aad
and
mov
retf
adc
es
add
dec
adc
xchg
adc
lock
(bad)
hlt
push
sahf
repz
fnstenv
mov
xchg
or
sbb
inc
and
push
push
xor
xor
test
mov
mov
inc
sahf
jae
aas
scas
xor
icebp
jmp
clc
clc
retf
push
push
jmp
push
fbld
rcl
(bad)
jecxz
xchg
push
(bad)
push
call
jle
(bad)
not
pop
cs
cmp
cwde
pop
jmp
ins
stos
fisttp
push
int3
data16
or
dec
sti
or
xchg
(bad)
mov
mov
adc
mov
xchg
jmp
imul
loope
cmps
test
or
ja
inc
in
pushf
mov
daa
mov
mov
call
sbb
push
out
imul
and
out
cmp
mov
mov
dec
popa
adc
mov
or
movs
jae
ins
cmp
jmp
jmp
add
pop
shl
push
aas
mul
jl
shl
sub
sub
fild
sbb
lahf
shl
mov
shl
mov
aas
ror
cmps
shl
jmp
cmp
mov
cmc
aam
mov
into
movs
(bad)
mov
in
pop
mov
mov
mov
add
popf
xor
push
daa
sbb
repz
mov
inc
cwde
rcl
call
into
popa
push
mov
pop
inc
pop
xor
mov
sbb
pop
sbb
pop
xchg
popa
and
sbb
add
test
cdq
inc
xor
data16
scas
jge
or
push
add
jp
(bad)
cdq
adc
mov
jbe
jns
clc
popaw
lock
xchg
das
stos
jo
inc
mov
fadd
jl
adc
dec
add
out
sahf
rol
clc
aas
mov
aad
dec
imul
push
jp
ficom
loop
clc
jmp
mov
aam
adc
xor
sub
dec
lods
out
jnp
or
xor
dec
lods
test
inc
xor
jecxz
sub
mov
(bad)
outs
push
outs
xor
jecxz
ins
iret
fimul
enter
cwde
lock
xor
sbb
mov
pop
movs
pop
js
imul
dec
out
sahf
dec
or
and
push
cmp
adc
cdq
icebp
popa
fwait
sbb
retf
jl
sub
mov
push
jbe
inc
pop
xchg
add
xor
(bad)
rcl
shl
jecxz
xor
fstp
jmp
push
popa
loop
into
mov
movs
imul
xchg
movs
push
adc
jmp
mov
mov
in
cmp
mov
dec
inc
inc
pop
jg
js
and
stos
js
pop
xor
and
(bad)
fiadd
ror
xor
sbb
adc
fnsave
pop
popa
lock
jo
cdq
popa
dec
mov
movs
mov
(bad)
push
mov
cmp
add
add
mov
add
dec
cmp
repnz
or
dec
xor
mov
out
xchg
sub
mov
cmp
lea
xbegin
dec
or
sub
sbb
rcl
or
cdq
or
data16
fidiv
and
jns
fwait
inc
ds
dec
es
pop
xchg
mov
(bad)
pop
in
pop
rcl
jmp
in
aad
test
mov
sbb
fidivr
cmps
pop
push
mov
jae
retf
adc
iret
mov
jne
mov
aam
sbb
cwde
dec
xor
xchg
sbb
fiadd
mov
pop
shl
or
ins
sbb
aaa
fcomp
sar
out
mov
sar
cwde
adc
jl
pop
call
xor
push
aas
sbb
imul
sub
or
sbb
pop
push
xchg
mov
mov
add
int3
sbb
scas
mov
or
pop
xlat
mov
xchg
cs
push
xchg
rol
sbb
cmp
or
sub
push
shl
fisttp
scas
mov
inc
mov
cmp
add
mov
mov
in
(bad)
and
push
jbe
sar
xchg
xlat
sahf
imul
cmp
(bad)
sub
xchg
in
xor
out
neg
fincstp
add
pop
jg
aas
pop
jg
in
es
(bad)
and
es
or
jl
jae
add
adc
adc
adc
inc
adc
ss
cmc
push
xor
sti
mov
das
or
jmp
(bad)
in
jmp
rol
push
mov
xchg
ret
dec
xchg
ja
ror
mov
pop
push
pop
push
and
lods
adc
shl
daa
mov
dec
fist
out
pushf
lds
ffree
(bad)
call
or
in
dec
sbb
mov
scas
retf
mov
mov
cmc
xchg
into
mov
out
test
scas
in
lock
sub
xchg
sub
add
loop
aas
mov
xor
xchg
xchg
cli
sti
imul
and
les
enter
xor
adc
pop
or
xor
(bad)
mov
xlat
xchg
push
cwde
(bad)
push
daa
xchg
mov
xor
push
and
and
jmp
sub
into
mov
sub
push
int3
leave
(bad)
rcl
or
jle
cmps
push
and
xor
lea
mov
aam
cs
in
xchg
xchg
stc
add
dec
mov
lods
aam
jp
or
push
and
stc
push
mov
daa
fidiv
xchg
sub
ds
sbb
mov
in
fisubr
data16
mov
xor
jo
sbb
or
jmp
or
imul
sbb
xor
add
pushf
(bad)
push
jo
nop
(bad)
add
call
es
shr
adc
inc
test
int3
shl
mov
ret
mov
sub
lahf
mov
scas
retf
dec
adc
mov
sbb
jg
ins
call
ins
xchg
jg
ror
cld
and
shl
daa
in
xchg
mov
and
xchg
and
dec
jo
jl
lods
or
call
call
sub
(bad)
std
push
mov
cmps
call
mov
rcr
mov
pop
or
into
cli
bnd
js
mov
mov
xor
push
retf
in
inc
inc
fldenv
lahf
retf
push
mov
add
mov
sti
leave
pop
cmc
aad
imul
sbb
cdq
test
sub
fdiv
pop
mov
mov
fidiv
fldpi
inc
push
cmp
rcr
push
pop
(bad)
push
mov
sub
outs
mov
(bad)
mov
mov
xchg
push
xchg
pop
in
sub
jmp
rol
mov
inc
sbb
cmp
jns
call
ins
push
add
fdiv
xlat
ss
xor
dec
or
cmp
mov
in
push
iret
pusha
pop
sub
add
aad
fstp
inc
mov
xchg
add
pushf
mov
cmps
ja
test
push
pop
lea
pop
fstp
stos
scas
cmp
inc
and
push
scas
mov
sbb
xchg
or
mov
clts
jns
cmp
icebp
xchg
sub
pop
pop
inc
ins
cmps
dec
es
push
push
push
lds
fidiv
icebp
dec
mov
pop
pushf
push
mov
imul
je
arpl
test
mov
iret
inc
lods
test
jae
xor
ins
(bad)
sbb
fs
sub
dec
das
lods
xchg
and
int3
aam
jno
fsub
sahf
out
mov
stos
or
lock
std
hlt
pusha
(bad)
cld
mov
mov
xchg
bound
pop
fcomp
jmp
pop
and
inc
imul
jb
(bad)
xchg
sbb
ja
sbb
inc
mov
in
fs
jae
xchg
cs
cmps
addr16
xchg
push
mov
pop
mov
outs
mov
pop
push
ins
rcl
loope
sbb
fsubr
ficomp
sahf
ins
or
fmul
jge
xchg
cmp
mov
push
jbe
or
data16
jg
call
mov
ss
lods
repz
xchg
adc
sbb
push
sbb
fisttp
out
mov
adc
xor
or
sbb
(bad)
xchg
daa
stc
shl
shr
movs
xor
mov
je
mov
cmp
push
and
loop
inc
mov
xor
outs
ins
aad
mov
in
(bad)
div
fistp
hlt
mov
pop
sbb
test
cmc
adc
add
arpl
xor
sub
ret
mov
adc
inc
out
jno
icebp
xor
sub
mov
push
fwait
dec
jge
jae
or
daa
push
arpl
sbb
adc
hlt
dec
rol
mov
sbb
stos
ret
(bad)
ins
pushf
mov
mov
std
popa
sbb
pusha
(bad)
and
fcomp
and
sbb
(bad)
les
gs
adc
scas
ror
xchg
xchg
sub
call
sbb
test
cld
or
pop
adc
fiadd
ins
addr16
push
dec
adc
stos
rcl
xchg
jns
(bad)
dec
scas
dec
out
xchg
inc
adc
cli
sub
adc
retf
inc
jno
push
addr16
test
ins
mov
cld
movs
sti
hlt
fwait
mov
dec
xchg
adc
mov
or
shr
rol
mov
cmp
shr
fs
int
stos
cmp
fadd
xchg
es
or
ins
xlat
mov
dec
call
aaa
cwde
or
mov
iret
jb
daa
add
push
popa
call
mov
fsub
and
sub
stos
shl
sbb
cwde
push
mov
call
mov
mov
pop
repnz
push
movs
sahf
pop
mov
pop
xchg
sub
jmp
jmp
sub
dec
add
jae
fmul
pop
ja
dec
std
(bad)
sbb
jmp
mov
and
repnz
push
daa
inc
add
xlat
or
sub
jp
inc
daa
xchg
js
lods
lock
inc
xor
inc
hlt
(bad)
mov
shr
sahf
(bad)
pop
aaa
mov
in
popa
xchg
shl
mov
and
xchg
adc
jne
inc
mov
not
and
sbb
dec
adc
fild
call
icebp
pop
fs
and
shr
push
inc
mov
inc
in
punpcklbw
adc
jg
mov
(bad)
fcom
push
mov
pop
and
pop
or
retf
pop
pop
mov
adc
pop
(bad)
addr16
loope
push
daa
mov
test
mov
clc
add
push
outs
movs
adc
lods
jne
retf
sbb
es
es
mov
outs
or
addr16
(bad)
rcr
xchg
cmps
jg
jl
jge
lods
fadd
dec
movs
sub
push
sbb
stc
and
jne
iret
mov
mov
(bad)
int3
mov
imul
fbld
jl
(bad)
cwde
pop
xchg
add
retf
cmp
test
mov
jbe
add
mov
ror
dec
cmps
retf
jae
cs
add
outs
mov
jb
mov
push
mov
mov
aad
(bad)
dec
mov
sbb
pop
mov
icebp
adc
repnz
mov
gs
sub
jae
fcmovnu
adc
jne
fwait
jmp
jle
test
dec
xchg
inc
dec
add
(bad)
enter
imul
sub
imul
adc
add
pop
sub
xor
inc
out
mov
sub
frstor
sbb
mov
dec
shr
lahf
rol
pop
je
aad
cmp
adc
sbb
xchg
int
les
or
sbb
ins
xlat
xor
mov
icebp
mov
imul
test
mov
enter
add
adc
ret
xchg
mov
call
popa
fs
aad
xchg
test
rol
enter
xchg
scas
xor
jnp
les
je
mov
aam
pop
adc
jnp
pop
pop
jp
call
jecxz
pop
fmulp
iret
adc
sbb
(bad)
leave
inc
(bad)
out
xchg
jne
add
cmp
outs
cmp
sahf
mov
xor
je
mov
jg
dec
fld
lods
test
lods
and
(bad)
xor
push
and
in
es
add
xor
jg
cwde
in
in
lods
mov
imul
xor
test
adc
arpl
mov
xlat
cli
cmp
xchg
daa
and
xchg
sub
aam
mov
stos
(bad)
mov
arpl
inc
dec
xchg
sbb
push
push
inc
pop
lods
je
mov
repz
jmp
mov
xchg
cmc
ret
cmp
daa
les
ins
mov
imul
xor
inc
arpl
shr
test
bnd
cmps
popf
dec
sub
inc
neg
cmp
adc
arpl
(bad)
jne
stc
loop
stc
xchg
jo
inc
lahf
push
fld
cmps
cs
push
retf
cwde
jle
ins
sub
adc
push
mov
cmc
retf
mov
pop
xchg
mov
pushf
mov
arpl
nop
pop
les
fistp
test
mov
cmp
jb
add
jmp
mov
test
shr
push
aaa
ins
outs
mov
push
inc
cli
mov
shl
(bad)
sub
cmp
or
bswap
adc
pop
scas
mov
inc
mov
jp
popf
push
and
sahf
push
les
(bad)
iret
pop
lds
mov
and
mov
dec
int
fisttp
lock
sub
(bad)
mov
jae
out
add
enter
dec
dec
stos
push
xlat
loopne
rol
push
jg
das
cwde
in
lahf
data16
outs
lds
sbb
or
mov
push
cmp
cs
and
inc
mov
div
and
mov
cmp
fsubp
int
gs
xchg
mov
jo
loope
jmp
ins
or
out
inc
jnp
and
(bad)
adc
mov
sub
cwde
add
pop
dec
jb
pop
cs
(bad)
out
mov
in
jmp
add
cmp
or
push
mov
pusha
imul
xor
mov
inc
dec
cmp
sub
adc
cmp
mov
dec
mov
int
je
jb
dec
xor
inc
dec
push
mov
mov
out
movs
push
pop
shl
cmps
sub
out
jle
xor
mov
xchg
aaa
dec
fisub
stc
mov
jecxz
movs
enter
jp
inc
and
sub
fsub
pop
adc
shl
frstor
or
cld
mov
test
push
jge
aam
scas
push
and
pop
retf
test
aaa
out
mov
rcr
sub
fwait
cmp
add
push
movs
sahf
stos
inc
es
cld
pop
mov
and
and
jns
add
mov
pop
xchg
scas
cmp
(bad)
or
repnz
mov
arpl
out
jmp
clc
out
enter
cmp
out
(bad)
mov
shl
sbb
dec
mov
pop
fsubp
lahf
jecxz
fild
mov
dec
jae
ret
cmp
imul
loope
adc
push
dec
lods
xchg
stos
out
dec
in
(bad)
adc
scas
call
pop
or
popa
sbb
push
xor
sub
outs
jle
neg
pop
mov
cdq
cwde
push
ins
scas
bound
pop
inc
cmp
inc
fsubp
sbb
cmp
std
lock
(bad)
fdivr
jno
push
fidiv
mov
jo
or
pop
dec
gs
push
daa
inc
jns
fwait
mov
(bad)
hlt
fwait
das
dec
pusha
aaa
cdq
sub
jp
mov
jmp
xor
in
lods
lea
jecxz
sahf
nop
inc
int
sbb
push
retf
fcmovne
mov
ror
sub
lock
scas
daa
lahf
fidivr
cmp
shl
jmp
icebp
jns
push
rol
stos
push
adc
in
test
fs
xor
mov
cs
scas
jns
jnp
add
arpl
enter
(bad)
enter
sub
inc
scas
into
std
dec
and
arpl
inc
movs
sbb
fistp
xchg
addr16
test
js
jg
cmp
(bad)
dec
adc
or
call
out
add
iret
cmps
push
fucom
add
sbb
scas
(bad)
lahf
jecxz
sti
shl
ins
sub
hlt
ins
loope
in
cmp
sahf
pop
pop
xchg
cmp
out
(bad)
xor
(bad)
fnstsw
mov
sbb
pop
(bad)
leave
test
mov
imul
pop
fidiv
adc
push
movs
xchg
in
pushf
lea
pushf
call
cmp
pop
je
pop
mov
test
jo
mov
jns
cmps
fldcw
fisubr
xor
xchg
fcom
sub
mov
outs
adc
xor
dec
icebp
out
adc
mov
loope
scas
dec
out
add
jp
push
push
int
xchg
imul
sbb
test
add
push
js
ins
xor
fdiv
into
pop
movs
jl
xchg
jp
push
mov
xor
dec
jl
pop
cmps
(bad)
sub
fisub
xlat
push
gs
popf
sbb
cli
loopne
mov
icebp
lods
into
out
mov
out
jle
and
shl
fdivr
add
(bad)
mov
mov
cmp
mov
rcl
xor
pop
lock
mov
cmp
aas
shl
pop
popa
dec
movs
jns
(bad)
cdq
cmps
scas
jbe
int3
ins
sahf
scas
pop
loope
ja
lods
(bad)
cmp
out
adc
in
xor
bound
lods
or
(bad)
sub
sub
fbld
stos
or
xor
fcompp
jbe
add
mov
retf
pop
push
(bad)
mov
xchg
xchg
icebp
push
push
jg
push
das
push
mov
mov
imul
shl
dec
sbb
popf
movs
das
jns
in
das
add
dec
add
mov
or
arpl
aas
adc
pop
sar
cld
stc
in
jne
inc
gs
outs
pop
mov
scas
sbb
xor
and
outs
setge
rcl
in
mov
or
fisttp
lods
mov
fbstp
sbb
push
loop
xor
ds
lods
adc
mov
retf
mov
stos
inc
and
ret
push
bound
fdivrp
cmc
clc
not
mov
cwde
sub
jns
sbb
xchg
adc
cmp
fidiv
in
jl
inc
cdq
jl
mov
sar
outs
and
retf
mov
xchg
leave
xchg
xchg
movs
push
shl
call
push
(bad)
fwait
mov
add
fidiv
and
xor
adc
in
jmp
and
xchg
cmp
in
and
push
lds
push
mov
into
mov
jp
cdq
xchg
adc
out
xor
(bad)
(bad)
in
mov
test
lods
das
mov
sbb
aaa
call
out
xor
or
iret
push
popa
pop
pusha
cmp
jno
and
jne
arpl
les
hlt
in
jo
loop
jno
jne
xchg
xor
rcl
pop
ffree
shr
add
inc
pop
lods
ins
inc
mov
inc
mov
hlt
xchg
popa
shl
(bad)
cmp
jle
push
mov
xchg
cwde
(bad)
retf
pop
and
xor
hlt
jns
or
jo
inc
ja
jne
fwait
aad
ret
push
ds
inc
jge
push
jmp
sub
pop
sar
call
std
aam
xchg
mov
xor
and
jnp
xchg
cmp
and
xor
xor
out
fcmovnbe
pushf
nop
ja
push
leave
shl
mov
cmc
dec
mov
sbb
mov
jge
xchg
movs
das
pop
sbb
and
shl
pop
lahf
jmp
or
in
cmps
xchg
imul
jne
push
mov
sub
sbb
test
out
xor
push
cmps
sbb
shr
in
ja
jp
push
loop
lds
cmp
cld
sti
sub
test
mov
jmp
push
xor
pop
mov
or
mov
test
scas
inc
fldl2t
mov
mov
jmp
or
add
mov
fst
inc
outs
aas
inc
pusha
mov
dec
ss
mov
inc
jl
push
jbe
xlat
lods
sahf
inc
inc
cmp
arpl
mov
xchg
jmp
mov
jecxz
popf
sbb
or
jge
lea
call
jae
cdq
jl
test
in
cs
cli
lods
in
mov
div
push
and
daa
jg
pusha
sub
jno
ins
xchg
dec
lahf
and
sbb
aad
xlat
repz
js
xchg
dec
push
adc
adc
repnz
pop
(bad)
ffreep
push
mov
leave
push
test
xor
dec
jmp
xor
sbb
cmp
int
aad
jnp
and
scas
scas
loop
loope
mov
jb
mov
xor
mov
cmp
(bad)
stos
jg
lock
jns
jge
std
sub
push
sahf
and
pushf
sub
sub
cmps
jbe
scas
sub
jl
pop
fucomi
pop
inc
cmp
lods
adc
loope
adc
out
pop
xchg
idiv
xor
cmp
sahf
rcl
out
or
scas
loop
in
popf
ss
pop
mov
push
pop
mov
or
jae
inc
les
fwait
in
cmc
in
or
movs
pusha
push
mov
ja
popa
jl
out
xchg
push
jecxz
mov
outs
test
ret
leave
mov
stos
pop
and
pushf
mov
test
aaa
jo
(bad)
test
mov
jmp
mov
enter
inc
cmps
fistp
or
repnz
mov
mov
sahf
xchg
into
jbe
mov
push
push
xchg
xchg
pusha
lds
cmp
sbb
clc
les
rol
cmps
xchg
out
jo
scas
not
rcl
mov
fs
push
mov
adc
add
adc
mov
inc
pop
push
js
movs
rcr
or
cld
push
and
iret
cmps
scas
or
push
jp
vpmadcsswd
xor
mov
lds
or
lods
mov
mov
jl
ins
pop
retf
dec
js
ins
rcr
fsubr
fcmovnb
add
popa
imul
xlat
movnti
cmp
add
scas
out
or
or
mov
pop
shl
gs
adc
cwde
cmps
pop
cmp
lea
cmp
shl
(bad)
jmp
iret
add
adc
test
and
push
push
dec
(bad)
jae
in
xchg
dec
xor
dec
dec
dec
sahf
xchg
movs
cmps
loopne
ins
iret
es
movs
mov
and
adc
mov
xchg
add
test
fs
xchg
xchg
adc
imul
movs
pop
and
in
sub
dec
ret
mov
clc
punpcklbw
jl
imul
jo
lds
jae
mov
jmp
xchg
fisttp
cld
icebp
sub
mov
call
cmp
sub
gs
mov
fistp
jge
call
xor
out
and
mov
jbe
js
fst
xchg
cmps
mov
fs
ss
lahf
mov
push
mov
mov
repnz
add
inc
xor
dec
ins
pop
jl
sahf
pop
rcr
or
inc
cmps
arpl
cmp
dec
(bad)
jle
cmps
jecxz
add
sti
outs
dec
retf
xchg
add
push
das
scas
add
xchg
or
stos
mov
mov
cmps
xor
mov
fnstcw
xchg
or
daa
or
mov
adc
cli
fild
fs
in
xchg
fist
push
push
jo
out
jle
and
push
cdq
out
push
mov
jnp
sti
iret
sub
mov
xor
push
cmp
loopne
outs
push
outs
jmp
ins
pop
mov
add
in
xor
pop
(bad)
shl
loope
inc
out
sub
js
add
into
push
mov
(bad)
in
bound
fidiv
jmp
mov
test
es
pop
mov
sti
xlat
jl
xor
inc
repz
lods
jmp
fwait
adc
mov
pop
xchg
xchg
add
ror
loopne
out
arpl
ret
icebp
fiadd
or
ss
cmp
jmp
inc
ficomp
call
cmp
stos
out
cmps
xchg
fisttp
dec
or
add
(bad)
rcr
iret
in
dec
jno
aam
imul
movs
jg
pop
lds
sahf
adc
jne
ret
and
or
sub
fnsave
xchg
daa
inc
lock
std
sbb
inc
mov
mov
and
scas
lahf
icebp
lods
mov
(bad)
inc
cmps
repnz
cmps
push
dec
add
(bad)
test
jnp
in
and
mov
and
sbb
sub
mov
out
push
stc
or
dec
loope
or
sub
mov
jle
test
mov
cmp
pop
pushf
cmp
xor
ss
ret
push
imul
scas
fldenv
mov
cmp
xor
ficom
arpl
iret
test
push
dec
leave
ss
xchg
mov
inc
neg
int
push
mov
pop
sub
call
pop
xor
loop
enter
ds
fsubr
sub
sub
inc
mov
push
mov
inc
scas
jg
cmp
sub
pop
push
aad
adc
out
lds
xchg
xchg
adc
(bad)
in
outs
retf
fldenv
sbb
enter
pop
push
cld
mov
cdq
loopne
xor
push
arpl
(bad)
adc
mov
daa
cld
jnp
(bad)
fiadd
xor
add
cmps
enter
and
xlat
pop
retf
int
not
pop
rcr
in
outs
dec
mov
jmp
or
push
jp
jns
rcl
pop
add
xor
add
dec
sti
adc
test
add
mov
fwait
les
dec
ss
pop
inc
jo
and
xchg
mov
sub
jle
jns
(bad)
mov
scas
xchg
aam
xor
sbb
xchg
stos
dec
cmp
or
loope
clc
and
jnp
pusha
cmp
retf
je
mov
addr16
(bad)
or
dec
leave
cmp
mul
jl
mov
(bad)
xchg
xlat
int3
lods
inc
xlat
shl
das
adc
fwait
leave
dec
and
adc
adc
xlat
and
inc
dec
jno
outs
int3
mov
push
loop
lea
push
jnp
and
jae
aad
retf
jno
test
cmp
lods
out
fcmovnu
lods
(bad)
dec
es
dec
add
pop
mov
sbb
pop
push
loope
nop
sbb
dec
sub
xchg
mov
mov
test
and
ffreep
sub
loop
and
pop
add
or
arpl
mov
les
nop
push
sahf
xchg
push
fs
out
std
mov
inc
cmp
inc
stc
cwde
mov
jmp
jne
sbb
(bad)
xchg
xor
adc
stos
out
outs
or
sahf
nop
cmps
shl
push
int3
cld
in
iret
sbb
or
add
loope
ins
jmp
pop
mov
dec
pop
or
adc
cs
add
std
add
out
bnd
sti
arpl
test
or
sub
or
cmc
dec
push
inc
xor
cmps
mov
dec
inc
loop
movs
push
loope
cmp
movs
jmp
rcl
jae
int
mov
pop
and
fisttp
xor
int3
add
push
xchg
out
daa
daa
cdq
jbe
or
mov
sub
clc
sar
sti
push
push
clc
aad
adc
test
call
jle
xchg
es
outs
pop
dec
sub
rol
imul
int
push
clc
sbb
sti
push
or
mov
mov
imul
xor
cli
cmp
or
cdq
cmps
lds
sub
pop
and
fs
ins
ret
in
mov
dec
jp
mov
std
hlt
dec
repnz
fcom
xor
mov
ins
push
rol
clc
fsub
std
mov
mov
dec
push
cld
push
jge
pop
ror
dec
push
loopne
sbb
and
ds
pop
inc
sub
ficom
push
pop
enter
mov
out
mov
cmp
adc
sub
push
adc
fdivrp
jno
xchg
cli
(bad)
push
dec
outs
pop
arpl
mov
popa
sub
enter
shl
push
int3
cmp
jg
adc
cmp
adc
shr
push
cld
push
ins
adc
jge
jp
ins
or
and
retf
sbb
idiv
js
jge
repnz
mov
cdq
dec
inc
retf
jbe
mov
or
fldcw
push
(bad)
jnp
push
push
pop
pop
jb
add
inc
cmp
and
adc
stos
(bad)
fmul
in
pop
call
into
fmul
pop
(bad)
out
mov
cmp
jmp
scas
outs
dec
mov
dec
imul
sub
cmps
fs
imul
dec
jle
enter
aam
adc
and
lock
retf
ret
daa
xor
fwait
loopne
xchg
mov
arpl
add
jge
(bad)
stos
mov
or
pop
push
cld
jmp
popf
cli
add
pushf
popf
mov
(bad)
sbb
cmp
fcmovnbe
popf
cmp
jg
test
repz
dec
add
sub
jne
jns
out
sub
adc
out
test
or
int
push
cmp
call
push
test
and
sbb
scas
pop
out
mov
repz
fwait
mov
pop
(bad)
push
sbb
int3
fcmovu
mov
stc
test
arpl
mov
(bad)
add
xchg
jge
sub
fst
pop
sbb
push
leave
and
les
and
test
sbb
jo
(bad)
mov
lds
retf
push
sub
xlat
cmp
xor
inc
sub
mov
fwait
or
pop
jne
push
loop
adc
pop
xchg
int
mov
dec
cmp
les
ins
push
pop
movd
mov
loopne
adc
xlat
push
and
xchg
sbb
iret
repnz
sbb
cld
xchg
cmp
lods
stc
shl
push
shr
adc
(bad)
cdq
fld
push
(bad)
mov
movs
mov
ret
add
push
scas
fcom
pop
mov
push
scas
shr
jmp
mov
ret
pop
ja
div
xor
jo
mov
jmp
or
lods
repnz
aam
dec
outs
and
shr
dec
cmp
mov
cmp
sub
pop
dec
jmp
fisubr
addr16
jo
retf
xor
outs
fsub
loope
ret
sub
jbe
pop
popa
inc
adc
xor
cmp
sbb
stos
hlt
mov
xor
pop
and
xchg
ds
mov
push
dec
xchg
stos
stos
call
cmp
imul
dec
or
and
sbb
(bad)
cmps
mov
pop
in
or
xlat
sub
mov
dec
dec
xor
addr16
cdq
es
mov
xchg
in
mov
icebp
les
or
inc
popa
xchg
or
lods
add
arpl
dec
adc
cmps
xchg
mov
sub
les
fwait
sub
cli
add
mov
or
mov
push
stos
cdq
call
xor
mov
in
cmp
jmp
dec
shr
fld
call
add
lods
mov
stc
mov
repnz
inc
jp
inc
add
and
lea
xor
stc
pop
movs
and
and
jecxz
int3
or
push
retf
out
sub
test
aad
bt
push
repnz
movs
out
dec
inc
lds
sbb
dec
fucomi
stos
int
loope
push
cmc
pop
mov
rol
loop
test
aam
ror
int3
sbb
push
xchg
js
push
ror
inc
pop
hlt
sar
cdq
sbb
retf
movs
std
mov
or
inc
push
fwait
or
outs
adc
aaa
mov
cli
pop
jmp
(bad)
adc
in
xchg
retf
addr16
jmp
pop
popf
jp
pop
ret
sub
sub
push
sahf
sahf
fild
out
retf
mov
shr
test
(bad)
cmc
sti
movs
jnp
js
mov
push
daa
jbe
das
lock
sub
xlat
rol
mov
pusha
fisub
ror
in
movs
jecxz
ret
retf
dec
sub
in
idiv
cmp
dec
pop
xchg
push
loopne
sub
pop
or
dec
mov
xor
rol
xor
pop
mov
fistp
or
shl
inc
or
int
mov
jecxz
imul
cmps
ret
inc
push
push
adc
or
jae
xlat
sub
jb
xchg
neg
inc
mov
pop
mov
loop
jg
dec
mov
mov
out
rol
out
inc
in
jns
inc
push
movs
repz
imul
ds
jl
push
mov
aas
stos
in
fisttp
adc
scas
mov
stos
ret
cmps
and
ret
pusha
dec
sbb
js
movs
cmp
adc
add
push
xchg
jl
push
retf
sbb
jb
dec
cdq
cmp
out
push
add
test
cmp
jns
out
fwait
inc
adc
mov
and
jno
inc
test
sti
es
adc
adc
in
mov
push
lea
mov
sbb
mov
push
inc
push
scas
in
or
and
sbb
xor
inc
jp
fld
fs
mov
iret
cmp
lods
or
pusha
lock
xchg
sbb
pop
loop
leave
mov
retf
mov
inc
ja
and
jnp
stos
inc
repnz
icebp
popa
mov
jb
loope
xchg
jmp
aad
sub
cmps
mov
and
test
loop
push
pusha
push
frstor
addr16
mov
scas
lahf
pop
dec
hlt
sub
div
pop
add
push
adc
div
mov
add
cmp
fimul
cld
fistp
dec
adc
in
pop
xchg
push
cmp
lahf
bndstx
stos
js
or
pushf
sar
dec
xchg
sar
xadd
mov
xchg
jns
ss
cld
mov
inc
push
rcr
mov
dec
dec
pusha
outs
(bad)
jmp
cmps
aam
adc
cmp
lods
mov
shr
mov
xchg
xor
or
dec
mov
aam
imul
jbe
xor
in
ins
popf
sti
or
repz
movs
push
push
jp
xor
ret
push
sub
in
hlt
mov
cmps
lea
inc
aad
cwde
ficom
adc
fidiv
xor
mov
pop
mov
push
push
jae
pop
mov
pusha
popa
mov
adc
ins
jl
cmp
sub
jb
popa
add
mov
dec
test
jnp
scas
lods
sbb
das
pop
mov
add
repz
cmp
sub
je
xor
test
loope
test
lds
jae
(bad)
pop
mov
daa
pop
repz
addr16
pop
mov
add
jmp
xchg
sbb
adc
dec
cmc
xchg
mov
push
retf
bound
xchg
adc
gs
lea
sbb
jbe
sti
push
push
nop
push
push
push
xor
popf
xor
jae
das
dec
pop
mov
dec
cmp
nop
test
js
data16
cmp
pop
and
or
scas
aaa
ss
das
outs
in
add
jb
inc
out
lahf
bound
inc
in
add
shl
mov
rcl
mov
or
mov
dec
mov
push
mov
fnstsw
shr
push
dec
mov
(bad)
std
inc
mov
sub
jge
cmp
add
movs
push
mov
and
aas
jnp
xor
mov
inc
fsub
inc
cwde
add
repz
mov
fadd
adc
mov
movs
div
imul
jo
sbb
or
nop
sbb
jae
ins
sub
div
rcl
neg
fs
inc
dec
add
in
test
dec
push
dec
pop
stos
jg
or
mov
adc
test
sub
mul
pop
scas
stos
fidiv
and
and
adc
test
pop
popa
clc
addr16
adc
out
ja
jle
xchg
cld
out
mov
pushf
shr
and
retf
add
gs
adc
add
loop
fs
xchg
outs
mov
or
call
cwde
mov
je
icebp
xchg
sbb
push
ss
mov
mov
std
imul
and
aaa
mov
out
or
adc
in
jp
pop
inc
leave
jo
(bad)
adc
fild
and
(bad)
fadd
mov
jnp
enter
sbb
add
xor
les
mov
rcr
lock
ins
xchg
outs
bndldx
or
fld
jecxz
icebp
repnz
sar
stos
das
push
push
add
dec
push
mov
cmp
fcmovbe
(bad)
fist
jbe
jecxz
dec
mov
xor
das
fwait
fwait
dec
dec
inc
sti
mov
bound
cmp
call
mov
or
push
jg
add
mov
fld
mov
sub
shr
adc
dec
pop
cmp
mov
dec
mov
stos
and
pop
imul
std
mov
imul
loopne
mov
in
test
sahf
inc
mov
jo
mov
fnstenv
jne
adc
pop
xchg
sbb
xchg
aam
lods
mov
cmp
and
add
inc
mov
jns
nop
popf
or
jmp
lods
scas
scas
pop
inc
push
movs
dec
scas
lods
(bad)
call
lea
sbb
adc
leave
jb
push
xchg
or
cdq
cli
sbb
jecxz
test
ins
mov
scas
sti
push
std
adc
popf
xchg
out
arpl
ret
jle
cdq
rol
and
add
ja
retf
add
inc
xchg
pusha
int
fstp
and
or
test
jp
dec
mov
mov
jnp
jge
jl
sbb
xchg
ret
jno
ficomp
mov
out
push
shl
jno
mov
loop
popf
movs
mov
xor
jae
ror
out
adc
hlt
outs
cli
out
test
cmp
dec
cld
fwait
jae
adc
xchg
jb
mov
es
mov
add
add
fstp
ror
mov
jne
adc
mov
lods
cmc
mov
in
push
push
sub
pushf
xchg
mov
icebp
jns
dec
rcr
shl
pop
arpl
and
popf
dec
pop
sub
mov
add
mov
arpl
ins
cwde
fld
jmp
lods
jle
fndisi(8087
or
(bad)
in
push
enter
rcr
xor
inc
fwait
cli
mov
mov
in
push
sub
cdq
add
inc
adc
cmp
std
sub
xchg
(bad)
imul
sub
pop
pop
repnz
cmps
cmp
nop
inc
pushf
vcvtss2si
push
or
pop
xlat
xchg
js
loop
nop
ds
mov
jnp
mul
sti
test
clc
loopne
popf
and
out
push
aaa
test
jo
or
xchg
jne
push
sub
stos
ds
or
cmp
pop
nop/reserved
jmp
fidiv
fs
xchg
sar
mov
rcr
outs
std
and
addr16
scas
jp
dec
test
out
adc
ins
enter
int
outs
in
mov
pop
imul
xor
mov
mov
fisubr
sub
jbe
dec
jne
or
push
mov
xchg
or
pop
popa
test
rol
inc
jae
bound
add
lock
xchg
xor
adc
arpl
(bad)
push
les
sti
sub
es
push
pushf
retf
pop
jmp
jg
inc
lds
ja
sbb
ds
sub
cmp
(bad)
pop
push
pop
sub
inc
sbb
push
das
adc
jnp
inc
(bad)
jb
retf
nop
pusha
dec
shl
mov
rol
mov
imul
add
push
jmp
cmp
dec
in
lock
aam
push
push
sub
push
xor
push
(bad)
push
cmp
mov
addr16
xor
cmp
jns
dec
add
sub
clc
xchg
push
mov
jle
pop
or
stos
or
(bad)
adc
cmp
scas
and
ret
movs
cmc
lods
mov
out
lods
test
xchg
jge
xor
cld
mov
repnz
push
int3
arpl
jb
mov
retf
fld
add
mov
popf
call
add
jo
lods
inc
popa
fadd
jb
cld
add
retf
in
push
stc
adc
and
stos
int
scas
(bad)
daa
imul
sbb
stc
mov
xor
into
add
add
xor
imul
inc
clc
sub
lea
ret
dec
dec
fmulp
mul
dec
and
inc
add
jno
jbe
and
inc
jnp
repz
and
jns
mov
and
outs
jg
add
pop
in
jmp
adc
xor
or
adc
or
(bad)
jp
shr
fs
jp
mov
clc
xchg
adc
add
scas
xchg
mov
shl
mov
cdq
inc
xchg
(bad)
fsubr
es
mov
dec
xor
pop
jns
and
jecxz
and
inc
sub
jge
or
arpl
or
adc
sub
aas
sbb
lock
ds
mov
fcomp
daa
jl
and
scas
inc
add
or
test
sti
out
xor
jno
(bad)
xor
push
and
inc
mov
or
test
dec
int
pop
push
inc
lods
adc
adc
push
add
xchg
push
pop
or
and
int
or
movs
and
or
xchg
cmps
rcl
shl
xor
xor
pop
mov
sbb
xchg
jp
ja
and
scas
adc
rcr
fadd
ret
js
add
nop
ja
stos
(bad)
dec
aad
push
repnz
xor
xor
loope
(bad)
mov
into
cmp
jae
mov
js
aas
and
and
sbb
inc
daa
mov
adc
sbb
cs
mov
div
aaa
mov
push
shr
mov
lods
call
(bad)
push
dec
clc
retf
loopne
pop
jecxz
(bad)
lea
dec
xchg
data16
pop
sahf
xchg
pop
adc
das
js
pop
push
fidiv
mov
aaa
shr
inc
test
fcmovb
or
fdivr
es
scas
addr16
cdq
fnstcw
clc
int3
dec
mov
jmp
xchg
jae
leave
or
xchg
fmul
pop
add
dec
nop
mov
jmp
and
fsubp
add
popf
xor
scas
push
xlat
mov
dec
popf
call
fisubr
pop
lock
hlt
adc
gs
jmp
cmp
pop
inc
mov
test
mov
mov
ins
dec
push
adc
dec
cmp
test
shr
or
fstp
dec
test
scas
movs
cmps
and
fwait
mov
cmp
jns
aad
pop
sub
ror
add
jl
out
or
sbb
mov
and
dec
xor
daa
mov
jp
or
ds
loop
das
lock
sbb
jmp
mov
ss
xchg
mov
in
sbb
dec
movs
sub
or
pop
mov
mov
std
cld
sar
sbb
iret
dec
pop
push
call
mov
test
or
fldenvw
out
sub
test
(bad)
mov
adc
lods
sub
push
cmp
sub
mov
mov
xchg
or
fistp
ret
adc
dec
jl
int
outs
(bad)
imul
push
add
adc
jmp
ret
and
int3
dec
mov
mov
lods
cmps
sub
outs
inc
sbb
mov
inc
or
push
leave
mov
inc
mov
or
jb
(bad)
jmp
xchg
enter
xor
ficom
dec
scas
xor
in
dec
pop
dec
ret
icebp
cld
adc
pop
cdq
mov
dec
mov
addr16
add
jp
nop
xor
xor
out
jo
sbb
xchg
sub
call
idiv
les
or
out
adc
xchg
sub
repz
dec
xchg
pushf
xor
enter
sbb
jg
mov
inc
sub
jo
push
fcmovu
dec
mov
call
fsubr
test
or
ss
rcl
dec
add
(bad)
fsubr
out
aas
jmp
adc
(bad)
loop
inc
or
push
add
loopne
int3
cmp
push
out
fwait
leave
add
enter
rcl
ins
imul
push
cld
ins
bound
movs
jge
outs
fild
add
iret
mov
ds
xchg
or
or
pop
xchg
and
push
stc
scas
sahf
pop
fs
push
mov
div
shl
scas
ins
int3
jmp
pop
retf
je
and
clc
and
dec
aam
into
out
sbb
shr
rcl
jno
popa
shl
inc
inc
sbb
test
ds
dec
inc
add
fdiv
mov
test
or
sub
sar
mov
mov
popf
stc
cmc
in
xor
adc
dec
mov
hlt
jmp
jmp
inc
push
xor
dec
and
cmps
jl
rcr
cmp
jb
aad
mov
outs
ss
movs
(bad)
sbb
cmps
leave
pop
mov
add
jns
push
fiadd
(bad)
sub
push
scas
ficom
js
stos
pop
pop
and
adc
mov
(bad)
int
imul
mov
push
inc
mov
loopne
add
push
or
push
test
and
xchg
lds
cmp
xchg
inc
cmp
(bad)
and
ret
pop
dec
push
xchg
dec
mov
dec
sub
push
and
out
(bad)
sub
out
mov
and
xchg
pop
stc
mov
jecxz
sbb
jne
(bad)
mov
cmp
xchg
popf
fld
jp
push
xchg
xor
fidiv
aaa
adc
push
jmp
pop
push
xchg
jns
lock
sbb
xchg
pop
aam
mov
lods
adc
repnz
xchg
stos
cmc
sub
dec
dec
add
imul
add
ja
iret
popa
shl
or
out
xor
add
dec
jmp
mov
aad
loope
hlt
dec
or
mov
push
out
cmc
repz
cli
test
and
test
wbinvd
add
mov
inc
mov
xor
sbb
xchg
pop
xchg
sub
fadd
call
hlt
sub
inc
xor
cmc
fst
jbe
pushf
iret
je
fs
retf
scas
inc
out
dec
lahf
fbld
mov
outs
xchg
pop
imul
mov
clc
outs
mov
(bad)
mov
aad
pop
sub
mov
ins
call
fcomp
xchg
test
adc
into
daa
push
adc
sar
es
xchg
cld
push
mov
mov
repnz
pop
dec
jnp
gs
scas
dec
dec
idiv
repz
and
ins
outs
addr16
nop
cmp
adc
das
xor
rol
in
fsub
jnp
in
jne
jb
mov
imul
sub
xchg
lahf
lea
or
pop
mov
xchg
movs
jecxz
addr16
inc
sahf
popa
jae
cmp
xor
adc
stc
cmp
sub
adc
lahf
jnp
aam
inc
inc
cmps
int
xchg
stos
ja
mov
int3
sbb
rcl
test
inc
popa
adc
adc
into
mov
ins
ror
or
add
ret
ds
(bad)
jb
jae
adc
sbb
xchg
push
in
mov
mov
dec
push
inc
xor
lods
pushf
and
pop
dec
sbb
pusha
int
xchg
dec
lea
mov
cmp
retf
movs
or
push
and
xor
mov
fild
adc
lea
jp
xor
push
push
call
adc
dec
cmps
push
aaa
add
leave
out
push
pop
ret
ins
fwait
mov
xor
clc
adc
ror
cmp
inc
jmp
pusha
cmc
retf
fimul
push
add
inc
sub
lods
in
cmp
ret
or
add
cmp
sbb
aas
(bad)
lods
not
sbb
dec
pop
repnz
mov
xor
pop
popa
or
(bad)
xchg
(bad)
aaa
mov
mov
jmp
mov
scas
(bad)
sub
(bad)
(bad)
adc
jmp
clc
ins
jp
aam
enter
daa
xor
stos
shl
addr16
icebp
mov
fisub
movs
jne
nop
mov
inc
(bad)
xchg
mov
jp
mov
cmps
sahf
rol
pop
retf
mov
and
xchg
test
(bad)
loop
sub
cwde
inc
mov
mov
sbb
shl
mov
sub
sti
ror
xchg
add
cmps
or
jmp
fidiv
pop
cmc
push
adc
ror
mov
retf
xchg
adc
add
sbb
mov
mov
mov
(bad)
shl
call
mov
mov
ffreep
ins
xor
aaa
cmp
sub
jne
cmp
nop
adc
inc
aaa
mov
push
and
mov
xchg
push
dec
jae
jo
rcl
icebp
mov
push
xlat
cmp
xor
outs
inc
fidiv
jmp
cmp
test
loope
sbb
(bad)
cs
popa
dec
fcom
cmp
push
loope
(bad)
retf
xchg
stos
bound
outs
retf
push
cmps
inc
sub
xor
push
call
movs
mul
jae
mov
call
loopne
lods
push
cld
in
aas
adc
adc
jae
arpl
clc
mov
push
pop
pop
(bad)
adc
outs
gs
pop
mov
adc
mov
std
pop
mov
xchg
icebp
popa
data16
push
jb
pop
das
fstp
jb
fimul
cmp
test
repz
jns
(bad)
ins
xor
xchg
movs
or
jno
dec
adc
push
out
mov
fwait
hlt
pop
ficom
cmp
(bad)
mov
shl
push
mov
and
xor
cs
call
aad
jmp
shl
lods
jge
mov
and
xor
add
fist
push
and
mov
ja
(bad)
and
push
adc
xchg
stos
mov
adc
push
fldcw
jae
retf
sbb
and
(bad)
mov
pop
xchg
(bad)
push
fidiv
ja
inc
or
mov
call
bound
push
out
or
mov
in
xchg
stc
sbb
fs
lods
dec
in
loope
cs
push
mov
push
int3
not
test
test
and
jns
pushf
push
or
ins
cmp
fnsave
je
sbb
mov
loope
xor
sti
sbb
or
shl
cmp
xchg
mov
adc
xor
dec
das
mov
imul
(bad)
mov
loopne
stos
jle
fiadd
nop
xchg
in
jo
mov
int3
add
repz
js
mov
test
sbb
push
in
and
test
add
pop
xchg
xchg
mov
jbe
lahf
mov
mov
cmps
and
rcl
fisub
jnp
mov
lods
inc
lock
data16
mov
push
mov
je
(bad)
jmp
pop
xor
test
xchg
mov
mov
(bad)
ja
cmc
adc
cmp
fisubr
jo
xor
(bad)
push
outs
xor
arpl
adc
pop
sub
mov
test
ret
xchg
sub
inc
rol
in
dec
cmps
mov
das
ins
enter
push
jb
cmps
int
xor
fisub
popa
aaa
clc
inc
sbb
sbb
(bad)
mov
lea
jmp
pusha
jmp
pop
add
xlat
sti
es
add
ja
adc
xchg
or
xchg
xchg
(bad)
sbb
test
outs
popa
scas
inc
push
clc
or
lahf
icebp
cmc
out
cmp
add
fcmove
arpl
xchg
ffreep
xchg
xor
inc
loope
push
bound
mov
ret
xchg
add
or
dec
repz
test
sbb
(bad)
mov
gs
mov
inc
jmp
pop
xor
and
std
out
xor
cmp
and
or
and
(bad)
cwde
aad
xchg
popf
sbb
jmp
mov
push
gs
and
pop
fwait
popa
nop
push
cmps
adc
shl
(bad)
xor
cmp
push
add
dec
ins
repz
push
inc
mov
in
push
aam
(bad)
jp
and
rcr
xchg
xchg
mov
mov
fdiv
jl
mov
loopne
data16
dec
test
jo
pop
inc
ins
call
mov
or
inc
jg
(bad)
div
push
pop
inc
push
int
sbb
add
repnz
and
inc
call
div
imul
ss
jge
mov
mov
loope
and
out
mov
int3
daa
mov
push
mov
xchg
and
ds
std
cmps
xchg
cli
shl
ror
mov
sbb
nop
xchg
push
pop
jg
daa
dec
arpl
mov
in
fcmovbe
inc
std
iret
cmps
imul
test
jae
dec
(bad)
xchg
xchg
test
fst
mov
mov
not
retf
sub
push
cmps
dec
mov
outs
push
js
cmp
call
or
mov
dec
mov
into
mov
dec
sub
loope
sub
cmp
or
pop
(bad)
sar
mov
ror
fiadd
out
pop
and
fldcw
push
hlt
es
nop
xchg
jl
mov
cmp
add
adc
stc
and
sub
sub
dec
cmp
push
push
sar
sub
inc
mov
inc
jmp
mov
scas
xchg
jo
leave
lods
adc
nop
cmp
cmp
add
xchg
jns
fild
add
push
pop
cmp
and
xor
add
sbb
push
hlt
pop
hlt
push
out
int
shl
or
cmp
mov
jge
or
inc
frstor
jecxz
add
sbb
in
(bad)
sti
or
loop
jmp
sub
and
fld
cmps
fisub
push
mov
pop
mov
aam
mov
into
mov
repnz
dec
mov
and
adc
jp
mov
es
jl
add
fnstsw
pop
cs
adc
jecxz
test
push
and
jbe
fs
push
movs
add
rcr
inc
dec
gs
addr16
shl
pushf
or
add
js
iret
test
out
test
std
cmp
daa
cmp
in
mov
cmp
fdivr
mov
sub
adc
inc
jns
sahf
(bad)
adc
ds
outs
jp
dec
in
leave
cmps
cli
cmps
or
es
and
jge
inc
adc
inc
call
aas
jge
sub
fcomp
mov
sub
out
shl
arpl
rol
iret
movs
xlat
or
xchg
enter
pop
push
push
pushf
fisubr
xor
enter
scas
add
add
loope
nop
push
cmp
movs
rol
les
xchg
jno
retf
mov
loop
jecxz
(bad)
jecxz
mov
inc
stc
mov
mov
pop
je
pop
xchg
stc
repnz
lds
push
call
and
adc
and
xlat
(bad)
loop
sbb
cmps
inc
shr
mov
jo
cwde
and
gs
inc
and
ins
movs
push
xchg
call
scas
(bad)
dec
aad
pop
pushf
jne
int
adc
mov
jns
dec
pop
xchg
adc
and
pop
or
and
idiv
mov
and
ds
cmp
dec
pop
mov
pop
jle
pop
fisubr
pop
fcom
adc
push
test
adc
and
mov
into
and
outs
add
cli
fimul
loop
jmp
(bad)
bt
xor
lods
test
cmc
lds
adc
les
dec
cmp
stos
leave
adc
cmps
pusha
(bad)
cmp
add
(bad)
(bad)
jg
xor
jns
ret
fnstcw
and
call
xchg
sub
pop
push
sub
ror
sar
adc
addr16
in
fmul
add
push
fist
leave
out
scas
loopne
es
imul
fimul
and
(bad)
loopne
add
jne
out
lds
aas
push
adc
push
dec
dec
jns
inc
sub
das
(bad)
stc
jb
loopne
xlat
and
push
shl
stc
xor
fidiv
repnz
sbb
mov
xor
xchg
cwde
nop
adc
int
popf
in
loopne
popa
lods
call
mov
and
inc
sbb
jmp
ficom
inc
cmc
mov
imul
cdq
jae
sbb
sbb
cwde
cmc
adc
adc
jge
or
sbb
pop
adc
add
pop
shl
stos
int
add
sbb
outs
jmp
sbb
in
inc
jbe
dec
mov
mov
inc
data16
in
mov
cld
push
lea
and
(bad)
adc
push
pop
jg
call
xchg
jae
fsubr
cli
retf
adc
dec
sahf
sbb
mov
pop
ror
loope
fdivr
and
or
mov
popf
jb
and
int
int3
jne
mov
js
push
retf
arpl
sar
(bad)
pop
ss
add
mov
xchg
fst
retf
dec
sahf
push
and
repnz
dec
test
mov
sar
cmp
mov
mov
push
mov
(bad)
xor
sbb
sub
aaa
or
cmp
mov
stos
loop
mov
int3
inc
mov
retf
cmc
push
and
lds
mov
xchg
movs
xchg
inc
pop
test
loopne
scas
add
aas
pop
fstp
aam
cmp
(bad)
sub
div
div
int
and
push
jl
inc
jl
mov
cdq
mov
cmps
lock
pusha
pop
shl
mov
inc
inc
mov
mov
aam
adc
loop
jecxz
pop
mov
in
sub
fs
sbb
dec
iret
sub
adc
nop
cmp
or
xchg
xchg
outs
fwait
jae
aas
ja
pop
mov
ins
(bad)
loopne
lahf
sub
cld
test
xchg
fadd
mov
test
jae
aad
cmc
inc
fs
pop
dec
sbb
adc
out
mov
push
(bad)
and
hlt
aam
mov
adc
jle
xchg
test
push
pand
dec
mov
(bad)
retf
cmp
sub
les
jge
mov
push
pop
daa
push
mov
out
and
in
dec
cmp
jb
mov
push
fsub
mov
cmp
adc
jmp
mov
fisub
jne
mov
mov
pushf
test
xor
xor
aas
add
or
scas
(bad)
jo
cmp
sub
cmps
ja
mov
cld
sti
sbb
fsubr
movs
loop
sti
les
inc
or
cmp
ss
push
push
fs
jmp
dec
sbb
dec
mov
les
scas
fucomip
mov
movzx
sub
cmp
(bad)
jae
sbb
rcr
pop
int3
push
sbb
out
in
jbe
pop
lahf
stos
neg
not
xor
ror
addr16
movs
test
jno
dec
sbb
push
cld
mov
fldenv
or
test
sbb
loope
rsqrtps
fadd
inc
fs
jnp
xor
jge
(bad)
iret
jne
sar
mov
sbb
aad
push
movs
jno
inc
and
mov
(bad)
mov
mov
add
mov
jg
sbb
pop
xor
addr16
jmp
sbb
dec
mov
cmc
xor
jnp
push
(bad)
call
sar
mov
add
and
int3
inc
adc
jp
mov
lods
fcom
nop
popf
(bad)
enter
(bad)
mov
ret
icebp
stos
retf
sub
fstp
inc
aaa
fs
shl
scas
cmp
data16
ins
je
(bad)
fcomp
jl
in
mov
adc
or
inc
mov
inc
add
arpl
mov
loopne
inc
(bad)
jge
ins
dec
jl
popa
nop
jmp
loopne
jp
out
mov
std
ror
xor
pop
push
adc
cmc
or
cmp
jo
dec
mov
out
or
das
push
pop
mov
dec
ss
das
mov
dec
push
cli
mov
adc
lock
add
pop
and
aad
idiv
retf
mov
lahf
rcr
cmps
mov
dec
xchg
gs
cmp
mov
mov
dec
fnstsw
mov
push
pop
push
repnz
ja
jne
xchg
sub
pop
sti
js
or
cs
loope
cmp
cld
js
pop
xchg
jge
gs
push
pushf
es
or
enter
fdivr
ja
add
pop
mov
clc
push
jbe
push
hlt
iret
push
pop
ins
and
pop
std
jecxz
in
xchg
data16
frstor
in
fwait
leave
pop
mov
mov
(bad)
lea
jne
jbe
sbb
call
jmp
iret
and
add
idiv
push
(bad)
lods
mov
xchg
jg
aam
inc
pop
fsub
call
xor
outs
std
mov
push
mov
dec
mov
push
jnp
ss
scas
jmp
sar
arpl
arpl
stos
jge
jo
sub
mov
imul
add
sbb
enter
mov
repz
adc
push
ror
push
in
dec
paddsw
cmp
out
sub
idiv
pop
cs
in
xor
fild
and
push
mov
sbb
jbe
adc
enter
xor
add
scas
mov
outs
adc
nop
and
je
movs
mov
sbb
ss
aas
jns
es
pop
daa
leave
repz
inc
pop
out
gs
jae
dec
int3
stc
jl
mov
lock
retf
int3
jae
lea
dec
dec
or
sub
lea
les
push
test
retf
not
ja
jns
mov
mov
jmp
mov
popa
mov
mov
out
cli
idiv
shl
cmp
xchg
je
mov
mov
adc
xor
sub
adc
xor
cmps
xchg
cmps
sar
aad
js
push
lock
call
into
test
(bad)
test
adc
stc
mov
fstp
ret
loop
call
pushf
pushf
fwait
sar
out
mov
cmp
adc
jo
enter
inc
add
push
jg
sbb
dec
mul
sub
test
pop
frstor
js
inc
adc
push
test
mov
fsub
int
rol
mov
push
nop
push
and
fidivr
imul
into
jp
stc
inc
jmp
sbb
jmp
addr16
syscall
mov
inc
repz
mov
imul
xchg
push
mov
xchg
cmp
call
test
dec
out
jb
jle
or
push
ror
mov
pop
jnp
xchg
mov
xor
mov
(bad)
cwde
cld
movs
pop
mov
fbld
xor
dec
inc
out
ret
cmp
and
iret
push
cmp
add
mov
or
cmc
pop
cmp
and
add
(bad)
test
pop
in
dec
pusha
clc
and
inc
sbb
test
xor
fucomi
mov
xor
mov
jnp
aad
dec
mov
adc
xchg
retf
jb
sar
lea
inc
loope
xlat
inc
cmp
fst
retf
dec
push
adc
mov
mov
xor
push
xor
imul
movs
push
out
repnz
leave
pinsrw
pop
out
into
jl
(bad)
mov
and
cmp
mov
xchg
jl
cmc
fwait
jae
outs
test
repnz
das
mov
mov
int3
call
xchg
mov
sub
int
scas
imul
mov
test
ss
fstp
fild
(bad)
cld
push
push
out
repz
inc
mov
stos
adc
xlat
dec
retf
fs
jmp
pop
xlat
push
ficomp
aas
mov
jne
or
pop
mov
jns
mov
inc
mov
hlt
or
in
inc
fwait
inc
mov
out
add
and
rol
test
mov
pop
sub
add
xchg
and
mov
(bad)
out
sbb
inc
movs
aaa
lock
mov
push
out
push
daa
js
mov
and
repnz
add
cmps
test
pop
push
sbb
inc
jecxz
jp
dec
adc
inc
fbld
sbb
es
ins
push
or
(bad)
ss
xor
sbb
into
fidivr
fs
imul
pushf
pop
and
les
sub
retf
mov
enter
cmp
or
cli
loope
jg
div
ss
jge
add
outs
mov
jbe
iret
push
push
fs
pop
jns
inc
in
mov
xchg
fwait
arpl
adc
ja
ins
rol
push
xchg
lods
aas
xlat
dec
imul
in
add
mov
or
mov
pop
xor
das
inc
sub
mov
mov
cmc
jnp
popf
fsub
dec
pop
ja
pop
adc
ins
jno
idiv
adc
jp
sbb
aas
shl
xlat
xchg
rcr
adc
gs
je
retf
ret
(bad)
mov
aad
cmps
add
sbb
pop
adc
pushf
sub
cmp
fstp
jecxz
inc
lahf
ds
pop
bnd
cdq
arpl
pop
sar
cs
mov
add
cld
in
add
das
mov
and
add
fsub
addr16
shl
dec
cmps
ss
test
nop
or
icebp
xchg
aam
dec
mov
inc
test
push
jne
adc
mov
and
sbb
and
sahf
dec
aam
inc
ins
jb
and
mov
outs
out
jp
or
pop
mov
mov
test
push
leave
sbb
mov
cmps
cmc
shl
pop
pop
and
rcl
mov
fimul
icebp
lods
cdq
sbb
(bad)
jp
popf
add
inc
dec
out
cmps
pop
lea
movs
fistp
mov
outs
push
daa
add
aas
xchg
cmp
pop
dec
imul
repnz
lds
pop
adc
add
dec
nop
xchg
aad
mov
enter
or
sub
(bad)
adc
aaa
mov
or
int
(bad)
jmp
adc
mov
icebp
lahf
cmp
jbe
mov
loopne
push
inc
int3
fs
ret
xlat
fdiv
push
push
dec
jne
imul
sbb
ret
outs
scas
jp
fst
out
jg
cmp
(bad)
push
push
dec
je
out
popf
loopne
pop
push
fist
stc
adc
sbb
dec
xor
ficom
jge
dec
int3
adc
pop
fcom
aam
xlat
mov
push
sahf
cmp
add
jbe
call
sar
adc
xchg
fimul
ror
cmps
and
fwait
int
ins
mov
jbe
dec
pop
add
dec
nop
pop
xchg
mov
loop
xlat
aad
xchg
dec
ins
sub
fcmove
rcr
aaa
mul
lea
(bad)
sub
rcl
aas
jmp
gs
sbb
test
dec
sbb
or
cmp
cld
jno
nop
xchg
inc
pop
stos
arpl
mov
es
xchg
nop
fld
in
and
das
mov
sti
mov
aaa
jns
fwait
mov
xchg
test
cmp
xor
fidiv
inc
adc
mov
dec
mov
xor
mov
adc
lds
(bad)
mov
mov
cmp
inc
mov
pushfw
sub
mov
stc
xor
das
pop
add
dec
ins
mov
mov
clc
mov
jmp
and
ror
push
out
sub
cmp
ror
and
xor
fndisi(8087
arpl
call
mov
inc
movs
cmovg
xchg
scas
loop
inc
(bad)
out
lds
fld
pop
ins
mov
cmp
mov
jae
rcr
(bad)
(bad)
jne
mov
mov
sbb
mov
push
or
sbb
mov
xchg
mov
leave
mov
push
(bad)
mov
push
sub
addr16
loop
add
or
add
mov
or
mov
imul
pop
mov
clc
mov
jno
rol
mov
imul
adc
(bad)
ror
pop
stos
aam
and
cmp
repz
test
(bad)
fisttp
stos
movs
pop
xor
pop
adc
mov
aas
sub
xor
dec
aad
xchg
push
xlat
jb
imul
cs
jb
push
sbb
in
mov
lea
rcr
xor
imul
sub
xchg
outs
sar
and
arpl
jne
fstp
inc
mov
icebp
fsub
xchg
pop
ret
sbb
sub
cli
jp
push
nop
mov
std
mov
pop
jo
cmc
jns
in
loop
arpl
repz
mov
add
into
mov
or
add
movs
jg
imul
sbb
sbb
dec
pushf
xchg
xchg
imul
popfw
hlt
and
(bad)
lock
xchg
push
outs
scas
sbb
retf
mov
in
xchg
jl
mov
jbe
mov
movs
imul
sub
sub
inc
aaa
mov
cmps
xchg
sub
push
fstp
add
sub
pop
jo
stos
sbb
push
pop
mov
shr
xor
inc
jmp
xchg
jle
(bad)
scas
jmp
or
fxch
popf
(bad)
clc
mov
xchg
jns
cmp
lea
mov
xchg
push
popf
sbb
fldcw
sbb
daa
lahf
popf
retf
hlt
and
bound
dec
into
nop
ss
mov
jge
clc
or
test
add
and
(bad)
adc
push
mov
gs
push
int3
mov
and
test
adc
push
or
pop
scas
add
test
dec
(bad)
and
test
xor
cmps
pop
leave
mov
out
mov
jecxz
fcomp
jecxz
xor
inc
or
mov
out
pop
pop
xor
jge
imul
retf
out
push
fdivr
and
int3
test
cwde
or
xor
(bad)
xor
inc
adc
stc
sub
inc
cmp
and
and
mov
lock
jbe
push
hlt
push
out
mov
xchg
mov
or
(bad)
fnsave
movs
and
leave
and
add
pop
popa
loop
popf
nop
dec
dec
mov
int
and
clc
xor
call
mov
pop
aam
mov
ds
pop
dec
cmp
inc
cli
xor
mov
xchg
jecxz
les
imul
jns
or
mov
adc
cmp
jae
enter
cmp
sbb
push
and
movs
dec
inc
sbb
retf
scas
gs
pop
xchg
imul
xor
push
fbstp
push
add
clc
mov
in
mov
out
dec
int3
push
dec
lock
push
test
pop
std
mov
lahf
mov
mov
or
adc
xor
sbb
adc
rcl
cli
or
cmc
retf
inc
imul
sbb
push
(bad)
idiv
xor
sbb
push
daa
push
cmc
and
pop
and
cld
arpl
into
hlt
sahf
pop
addr16
les
add
jo
push
or
fstp
xchg
xlat
fisub
inc
sub
lea
mov
cmp
jb
pop
inc
xor
bound
xor
loopne
idiv
stc
sbb
ret
adc
push
std
adc
mov
jp
shl
mov
jbe
add
xchg
pushf
(bad)
loop
cmp
fsubr
sbb
xor
vmptrst
dec
sbb
mov
add
aaa
jbe
(bad)
loop
mov
mov
test
xlat
outs
mov
int
sub
jmp
cmp
dec
xor
xchg
pushf
inc
adc
push
and
jp
add
jbe
mov
add
jns
or
mov
inc
xchg
mov
dec
pop
in
push
(bad)
push
cmp
in
icebp
xor
add
icebp
add
and
icebp
push
or
outs
scas
jmp
mov
sti
inc
(bad)
popa
fadd
aam
ficom
(bad)
jmp
or
jo
(bad)
jmp
lods
adc
sub
scas
fdivp
or
pop
(bad)
cmp
jb
adc
dec
imul
inc
je
out
into
mov
sbb
adc
add
neg
push
(bad)
and
fwait
loope
xchg
cmp
add
mov
push
scas
mov
(bad)
je
fdivr
je
push
(bad)
xchg
cwde
push
fs
cmp
stos
out
push
fstp
xchg
mov
int
push
ins
jecxz
pop
mov
add
or
outs
sti
mov
addr16
fs
hlt
loop
mov
jmp
les
ret
lods
or
(bad)
icebp
mov
xchg
stos
iret
sub
movs
push
xor
shl
imul
fwait
retf
mov
inc
stos
fstp
mov
and
add
int
xchg
stos
fldenv
mov
pop
mov
cmps
jle
add
push
push
or
inc
pop
xchg
xor
mov
or
pop
cld
scas
sub
std
mov
add
sub
nop
adc
call
stos
pop
sahf
xchg
and
xor
shl
dec
jecxz
lock
shr
pop
cwde
fs
in
enter
mov
movs
fsub
dec
retf
xor
arpl
or
pop
fistp
rcr
nop
loopne
retf
cwde
rcr
jns
dec
mov
jno
mov
xchg
push
mov
cwde
imul
repz
(bad)
mov
repz
mov
push
arpl
imul
push
mov
sub
mov
dec
rcr
add
or
push
cmp
xlat
xchg
inc
dec
mov
cmps
add
int
pop
xor
call
call
pushf
or
cs
int
xchg
pusha
inc
adc
test
mov
imul
ficom
mov
mov
and
pop
shr
(bad)
mov
outs
push
sub
pop
pop
jb
pop
lods
lock
cmp
xchg
xchg
icebp
rcr
cmp
adc
mov
loope
pop
cmp
mov
or
fiadd
leave
movs
xchg
and
mov
jecxz
xor
cld
add
call
or
inc
or
push
or
jno
outs
or
mov
fsubr
out
shl
pop
pusha
cmp
movs
jne
and
cld
(bad)
lahf
pusha
fwait
xchg
xlat
shl
pop
addr16
test
push
xchg
pop
push
jmp
ins
mov
jecxz
call
jnp
or
test
xlat
dec
pop
jns
mov
clc
sbb
(bad)
dec
pandn
mov
in
popa
dec
jecxz
pop
nop
xor
test
pusha
imul
or
scas
add
xor
ret
ins
dec
fdivr
mov
in
pop
fisubr
retf
in
int3
fsqrt
cli
inc
mov
mov
cmps
repnz
pop
push
inc
jmp
jb
dec
out
daa
pop
inc
aam
cmp
add
gs
cmp
out
jmp
cmps
rol
pop
jne
fsubr
loope
neg
lahf
pop
mov
dec
cmp
loop
fdiv
ror
push
xchg
mov
daa
outs
aaa
loope
adc
dec
dec
dec
and
xchg
or
and
mov
push
inc
cmp
cmp
sbb
(bad)
popf
scas
cld
jecxz
shl
pop
loop
enter
sar
fdiv
scas
out
loop
arpl
je
(bad)
test
push
dec
sub
or
push
pusha
adc
adc
jne
out
sub
jne
add
mov
cmp
mov
ins
mov
(bad)
stc
mov
pusha
mov
jo
or
sub
icebp
push
or
push
or
mov
retf
aaa
adc
and
outs
xor
pop
mov
daa
imul
and
inc
gs
stc
cdq
and
rcr
xor
mov
add
dec
and
sbb
cmp
scas
dec
popf
xor
and
fs
mov
in
or
retf
dec
imul
cmp
fstp
dec
jg
xchg
mov
mov
mov
sbb
scas
cs
sbb
pop
int
fnstcw
out
and
pusha
mov
dec
or
mov
rol
jl
push
xchg
xor
outs
gs
xor
jg
add
mov
dec
in
cli
pop
aad
and
mov
fs
dec
aam
in
xchg
mov
mov
nop
jnp
add
retf
ja
cs
loop
mov
repz
mov
mov
jl
or
push
inc
les
sub
mov
pusha
(bad)
out
lea
inc
out
pushf
mov
mov
jmp
mov
js
mov
fsubr
push
mov
adc
lods
or
adc
inc
mov
dec
sub
clc
inc
ins
add
ss
outs
or
mov
xchg
or
jae
push
cmove
inc
stc
ror
sbb
pop
sbb
outs
inc
adc
imul
jae
and
xchg
and
mov
inc
or
pusha
popa
add
lahf
pop
push
cmps
enter
fst
lea
fidiv
clc
pusha
out
lds
xchg
and
leave
idiv
mov
cmc
dec
push
inc
mov
stos
inc
sub
in
pop
in
xchg
in
jns
cmp
push
push
es
jp
dec
add
and
call
loopne
gs
mov
pop
idiv
sub
fldcw
dec
shl
xor
xor
imul
and
mov
bound
add
xor
add
fcom
cmp
xor
add
js
xor
out
sbb
xor
cli
pop
lods
and
adc
sub
xchg
dec
push
push
not
stos
out
sti
adc
lods
fadd
or
icebp
mov
jmp
jno
xor
push
mov
inc
dec
push
inc
jecxz
mov
out
add
jae
(bad)
cmp
mov
inc
daa
(bad)
add
mov
fst
pop
fisub
mov
ja
sub
cli
out
and
mov
lds
pop
movs
fs
arpl
pop
mov
push
pop
mov
cmc
jb
push
test
aam
dec
repz
not
ret
ss
sar
sbb
retf
daa
xchg
cmps
das
int3
pop
scas
pop
jl
out
inc
adc
and
xchg
inc
les
or
xchg
push
push
cmps
cmps
xchg
fwait
or
inc
inc
outs
addr16
sbb
popa
and
imul
dec
or
inc
out
and
mov
fs
imul
(bad)
mov
ins
xchg
nop
jecxz
jb
xchg
mov
bound
into
jb
xchg
clc
cmp
bound
sbb
sub
add
add
push
ins
rcl
rcr
and
rcr
xchg
xchg
sahf
mov
cli
sbb
xor
push
test
or
jmp
pop
jae
xchg
jg
loope
cmp
loope
pop
rcl
inc
inc
pop
or
jl
addr16
jle
call
jg
sub
shr
lods
(bad)
xchg
pop
stos
sbb
pop
sub
or
mov
jae
xor
mov
cwde
xchg
cmovnp
inc
int
outs
add
arpl
ins
ficomp
add
mov
jecxz
adc
not
pop
or
sub
jecxz
pop
shl
rcr
mov
(bad)
jo
pop
test
inc
pop
sar
pusha
push
fst
mov
cmc
dec
imul
mov
jbe
hlt
mov
ffree
or
fs
mov
je
adc
cmp
(bad)
xor
jmp
inc
call
push
push
xchg
mov
shl
push
xchg
push
icebp
leave
cld
int3
inc
int3
mov
adc
cmp
sbb
pushf
jno
jp
jmp
cwde
cdq
mov
out
fisubr
cli
add
dec
sbb
movs
pop
xor
mov
fcom
mov
cmps
bound
sub
mov
mov
cmp
adc
repnz
inc
push
pop
loop
fdivr
xchg
and
cmps
inc
mov
jno
shl
repz
fwait
mov
std
loopne
ror
(bad)
das
mov
push
or
test
aad
pop
add
test
xchg
cmp
mov
cmc
out
stc
xchg
mov
sub
enter
in
or
test
fsub
xor
js
std
and
push
repz
outs
hlt
dec
mov
imul
call
pop
sbb
xchg
add
jl
sbb
in
shl
xlat
push
and
pop
cmp
push
and
adc
adc
push
aam
adc
adc
mov
movs
xor
leave
mov
cli
fwait
das
dec
fsub
(bad)
(bad)
ds
and
(bad)
xchg
push
rcl
stos
cmp
push
add
outs
aas
iret
sti
cld
shl
cdq
out
retf
sahf
call
hlt
and
cmp
mov
push
dec
and
inc
shr
hlt
fwait
sbb
sahf
mov
xor
ror
push
test
or
retf
adc
cmp
and
jbe
stos
sub
leave
daa
dec
cwde
dec
lock
dec
jl
add
pop
mov
(bad)
mov
popa
sub
int3
mov
jmp
xchg
dec
movs
fldenv
mov
test
scas
into
pop
xchg
pop
push
imul
adc
jmp
or
pop
jb
push
out
in
gs
retf
int3
push
test
mov
scas
or
pmullw
xlat
add
pop
cdq
fsubrp
xor
fs
xor
inc
xchg
fbstp
test
jbe
push
xchg
mov
sbb
add
(bad)
mov
jns
rol
push
ss
fst
add
sbb
mov
sub
adc
rcl
xlat
retf
cwde
mov
cmp
mov
loopne
adc
dec
push
(bad)
jmp
scas
stos
mov
(bad)
and
movs
in
push
cmp
cmps
adc
jmp
out
mov
push
push
dec
pop
pop
pop
xor
dec
adc
xchg
outs
jmp
sub
xor
pop
mov
jns
cld
xchg
jno
jbe
test
test
out
pop
jmp
imul
shl
jp
mov
dec
js
sti
push
(bad)
(bad)
je
pop
mov
mov
loope
or
cmps
and
sbb
ds
addr16
inc
adc
sahf
stc
lods
mov
pop
mov
and
mul
and
adc
cmp
mov
mov
jns
stos
mov
xchg
dec
jecxz
push
div
icebp
jno
xor
cmp
fistp
dec
arpl
push
xchg
adc
xor
mov
scas
daa
lds
fldenv
stc
pushf
test
call
jmp
mov
jno
adc
xchg
mov
pop
pushf
add
xchg
xor
push
add
jge
addr16
sbb
(bad)
in
mov
inc
into
push
cmp
dec
cmps
ja
or
sbb
call
jae
push
add
sahf
push
add
fidivr
aas
inc
jmp
in
xor
neg
stos
(bad)
sub
sub
dec
(bad)
shr
mov
into
clc
mov
call
push
scas
inc
pop
sub
or
sti
jbe
call
fcom
test
cmp
jl
in
scas
popa
add
mov
fnstenv
ret
aaa
jmp
add
push
mov
shr
ret
add
and
stos
ins
and
fdivr
inc
inc
xchg
cmps
test
pop
xchg
mov
push
out
popa
jp
movs
inc
dec
jb
jo
sbb
jle
inc
aam
inc
ffree
shl
shl
mov
dec
jns
fbld
std
jl
fiadd
iret
hlt
sub
ja
in
inc
mov
dec
inc
neg
inc
cmps
popa
out
ins
into
pop
pop
push
inc
dec
jmp
add
idiv
and
add
mov
cmp
jl
js
cmp
push
nop
pmaddwd
cwde
pop
sub
mov
push
jmp
pop
(bad)
mov
adc
pop
mov
in
stos
loopne
loope
sbb
xor
stos
mov
stos
aaa
jne
mov
pop
xchg
iret
and
cld
movs
shl
addr16
pop
mov
cmp
int3
xchg
das
jb
stos
les
mov
pop
fidivr
into
pop
fadd
jno
(bad)
lgdtd
hlt
xchg
push
in
aam
(bad)
aad
nop
movs
jle
mov
xchg
cmp
enter
or
js
push
out
sub
inc
jmp
cs
dec
mov
xchg
popf
jmp
inc
test
lods
adc
fisubr
dec
xchg
adc
mov
jge
push
js
or
outs
mul
dec
cmp
fld
xor
or
in
or
aad
lea
push
xchg
adc
out
xchg
and
daa
aaa
in
arpl
xchg
jae
dec
ret
and
sub
mov
dec
out
movs
loope
push
pusha
inc
cmps
mov
inc
inc
xchg
inc
push
jge
les
xor
unpcklps
sbb
ins
shl
jbe
outs
sahf
pushf
add
mov
cmp
sub
inc
xor
sub
sbb
test
fcmovnb
inc
sub
test
es
cs
out
or
(bad)
ds
rcr
push
daa
mov
cmp
jo
repnz
ins
int
mov
xor
inc
adc
cdq
or
shl
xchg
out
ss
pop
jne
cdq
sbb
aaa
ins
adc
ins
fstp
inc
xlat
outs
or
xchg
jmp
sbb
mov
mov
retf
xchg
cmp
adc
ds
cmp
mov
adc
retf
lods
icebp
xor
in
sub
inc
ret
repz
jge
inc
shufps
mov
sbb
nop
dec
aaa
sti
add
imul
sbb
mov
loopne
mov
mov
mov
int3
xchg
xchg
adc
inc
xor
jbe
scas
and
dec
jecxz
int
test
test
mov
cld
cmp
push
mov
mov
pop
mov
jns
ja
pop
xor
cmp
xchg
jmp
outs
mov
add
in
sub
pop
dec
retf
dec
and
fidivr
inc
repnz
in
into
dec
adc
les
and
cmp
ins
mov
ret
int3
faddp
pop
inc
cmp
dec
pop
daa
mov
pop
outs
mov
fisubr
and
jno
shl
pop
push
out
sub
ret
cmc
es
mov
lock
adc
aam
jo
push
call
into
adc
dec
movs
pop
or
xchg
xor
xchg
mov
add
inc
cmp
push
mov
out
test
sahf
out
dec
add
push
hlt
fld
adc
cmp
fsub
mov
jg
dec
and
punpcklwd
aas
ins
adc
push
call
test
inc
lods
ds
dec
leave
push
sahf
dec
fst
sub
mov
ror
in
push
mov
jb
scas
xlat
xchg
push
hlt
ss
je
ror
test
push
cwde
pop
pop
shl
ins
mov
add
sub
les
or
inc
and
aas
jne
mov
push
es
cdq
inc
scas
add
and
loop
cmp
mov
dec
mov
nop
sahf
(bad)
ss
cmps
lods
inc
into
inc
shr
and
jmp
cmps
out
or
dec
cmp
sbb
sub
loop
sub
mov
xor
scas
cli
push
sahf
adc
lock
pop
sbb
sub
jno
push
fcomp
pop
popa
mov
jg
addr16
dec
arpl
repz
(bad)
ficomp
push
popf
mov
and
jmp
cmp
or
push
pand
retf
cmps
fistp
out
inc
ins
out
inc
bound
push
enter
sub
jecxz
dec
xor
xchg
pop
(bad)
stos
mov
lahf
sub
mov
je
mov
push
inc
xor
xor
inc
cmp
xchg
shl
sub
lea
mov
stc
aas
jns
push
(bad)
fistp
aad
or
jle
pusha
retf
(bad)
push
jl
ret
aam
rcr
inc
test
push
inc
lds
mov
ds
rol
or
sbb
sbb
test
sub
mov
fimul
mov
imul
jno
add
icebp
bound
data16
inc
ficomp
imul
or
lock
mov
jmp
and
mov
movs
push
inc
xor
test
stos
mov
loopne
xchg
icebp
and
scas
push
adc
mov
cmp
(bad)
pop
adc
mov
sahf
mov
inc
pop
xlat
out
push
xor
mov
push
daa
ret
jmp
pop
add
xchg
cmp
mov
(bad)
cmps
(bad)
(bad)
push
in
xor
jg
dec
jp
lods
movs
clc
fwait
xchg
add
outs
xchg
jp
fisttp
mov
push
test
dec
xchg
jmp
jge
fmul
lods
jecxz
sub
imul
or
icebp
leave
and
call
adc
add
and
retf
xchg
sbb
into
mov
pop
test
stos
cmp
jae
or
and
retf
cmc
add
shl
xchg
mov
jmp
(bad)
(bad)
cs
into
cdq
xchg
xchg
pop
inc
hlt
xchg
push
sbb
add
ss
xor
in
adc
outs
inc
mov
movs
xor
push
xchg
jne
push
cdq
lods
movs
sar
adc
mov
sahf
lahf
dec
sub
cdq
shr
retf
pop
sbb
jp
jae
call
cmp
and
in
and
mov
test
xchg
rcl
out
je
mov
in
xchg
push
aad
out
ja
pop
and
mov
push
xchg
pop
xchg
push
fcom
(bad)
retf
inc
adc
pop
ficomp
and
sub
cmp
leave
out
sbb
daa
hlt
das
dec
(bad)
jnp
dec
mov
or
call
inc
scas
fcmovbe
sbb
(bad)
dec
repnz
mov
call
stos
(bad)
cdq
mov
ins
fwait
outs
pop
or
mov
jb
scas
xchg
mov
xchg
repz
and
in
pop
jo
out
out
push
mov
mov
pop
movs
daa
pop
nop
retf
mov
mov
int
sbb
int3
pop
sbb
pop
mov
xor
icebp
pop
sahf
inc
and
push
(bad)
mov
cmp
inc
jns
mov
mov
mov
cmp
popa
mov
mov
outs
xchg
test
sub
loop
test
add
dec
test
xchg
js
jecxz
push
(bad)
jbe
push
inc
jnp
rol
dec
stos
jo
out
pop
inc
popf
or
jl
daa
clc
mov
cdq
shl
sbb
sub
arpl
cwde
test
push
inc
les
fsubp
jo
dec
in
scas
fnop
inc
pusha
div
enter
pop
sbb
adc
inc
inc
(bad)
fs
out
mov
cmp
movs
sahf
mov
mov
jb
sar
shr
push
shr
mov
imul
(bad)
pop
das
into
push
jne
jo
cmp
shl
jge
fucomi
mov
and
rol
ja
stos
mov
(bad)
retf
push
push
mov
pop
dec
pop
cmp
jo
clc
cmp
test
lea
cmp
xlat
pop
into
imul
gs
xchg
inc
daa
pop
(bad)
out
nop
push
enter
mov
and
xchg
sub
or
int
test
push
pop
cmp
mov
ret
jle
fcomi
mov
loop
sbb
or
nop
retf
mul
addr16
aaa
out
and
pop
int3
in
(bad)
xchg
inc
push
sbb
adc
and
adc
xor
loop
ret
retf
mov
call
outs
mov
add
cmc
fistp
rcl
sbb
jle
pop
retf
cmp
push
mov
pop
enter
cmp
sahf
dec
out
pop
lods
fwait
pop
std
sbb
cmps
adc
add
mov
sbb
mov
sahf
mov
add
out
dec
inc
xor
add
es
sti
mov
stc
inc
mov
and
sub
scas
cdq
stc
in
push
fwait
retf
push
aas
sbb
cmp
fnsave
mov
sub
sub
pop
ins
fs
cmp
inc
xor
jle
out
xchg
adc
sbb
ret
ret
push
mov
outs
mov
fimul
adc
ins
xchg
(bad)
loopne
adc
push
xchg
push
iret
xchg
mov
xchg
stos
xchg
xchg
and
ins
dec
loopne
push
retf
leave
push
ret
clts
xor
mov
cmp
sahf
add
push
fs
mov
pushf
cmp
cs
jge
test
mov
bound
mov
lock
adc
pop
cmp
adc
xchg
cwde
sub
test
xchg
shl
ins
sub
nop
cmps
nop
stos
xchg
fbstp
test
xor
mov
in
or
xor
addr16
lds
mov
aad
push
ret
sbb
stc
adc
stc
gs
je
xor
push
(bad)
test
bound
bnd
call
fsubr
clc
push
sub
sub
push
adc
aad
jg
cs
(bad)
jbe
mov
mov
pushf
sub
scas
xor
rol
sbb
loope
fmul
addr16
and
imul
das
dec
out
xchg
push
add
nop
push
outs
xchg
loopne
stos
clc
pop
cs
neg
movs
mov
pop
mov
fst
(bad)
aas
xchg
gs
les
push
xor
test
stos
call
jl
pop
xor
sbb
lds
sbb
xor
js
test
cmp
jo
dec
mov
or
int3
push
xchg
and
sub
cdq
imul
inc
xchg
cmc
push
repnz
cmp
push
pop
push
imul
adc
jno
mov
mov
outs
ds
mov
pushf
stos
xchg
mov
pop
mov
mov
out
cld
sub
mov
dec
das
popf
call
movs
pop
pusha
in
imul
stos
dec
loopne
fwait
sbb
(bad)
jae
xor
or
clc
xor
mov
imul
js
cmp
inc
and
pusha
xlat
cmps
pop
sub
and
xor
sbb
fst
lahf
xchg
xchg
call
ror
push
push
dec
int3
pop
pop
jo
rep
adc
jl
out
sbb
in
xchg
out
bound
add
retf
test
(bad)
cmps
hlt
jl
adc
pop
jo
das
retf
int3
std
mov
jle
pop
sbb
push
xchg
aaa
push
popf
pusha
(bad)
fnstcw
sti
in
mov
jnp
lds
out
and
xchg
sub
cmp
dec
add
movs
and
cmps
dec
std
das
cwde
das
pop
in
clc
fs
daa
sub
or
xchg
or
addr16
imul
add
and
mov
das
adc
adc
inc
xor
xor
add
cld
and
or
out
add
bound
mov
xchg
sbb
lds
cli
cs
arpl
repnz
repnz
outs
sbb
int3
call
xchg
jne
inc
mov
jno
mov
mov
mov
jns
cmp
repz
aam
sti
xchg
sti
xchg
cmp
gs
fsub
push
ror
dec
and
or
adc
test
add
mov
jno
imul
jge
mov
movs
jmp
jmp
push
loope
push
sbb
sbb
mov
lods
loope
pop
data16
jp
icebp
(bad)
push
into
sbb
bound
pusha
pusha
cmp
sub
mov
cmps
jo
repnz
loope
push
pusha
retf
or
sub
mov
js
movs
add
mov
mov
mov
sub
fisttp
push
mov
or
jne
dec
jge
sbb
je
les
(bad)
aam
ins
mov
adc
cld
pop
fst
cli
adc
enter
std
mov
dec
(bad)
pop
mov
ret
push
mov
inc
push
push
fsubrp
sahf
sbb
pop
dec
sub
jg
mov
test
jmp
add
ja
push
jl
or
imul
dec
push
in
mov
mov
je
push
or
pop
and
xor
leave
hlt
adc
movs
pushf
xchg
sti
pop
jl
add
daa
outs
hlt
cmp
jmp
and
inc
push
pop
jne
inc
mov
mov
dec
out
push
xlat
inc
adc
fdivp
adc
fisttp
repz
xchg
push
pop
movs
push
mov
inc
sahf
ins
loop
pop
(bad)
sub
push
data16
adc
aam
cmp
ret
mov
xchg
mov
xchg
push
daa
push
vaddsubpd
cmp
mov
cs
mov
push
xchg
aas
lock
mov
add
and
xor
jno
retf
inc
pusha
mov
out
sub
out
into
outs
jge
jecxz
movs
sbb
inc
movs
int
cmp
scas
xchg
ins
ret
pop
mov
call
ret
sbb
push
cmp
sub
fst
mov
cld
(bad)
sub
out
sbb
pop
movs
stos
daa
je
inc
inc
fstp
loopne
fcomp
es
sub
icebp
jecxz
test
jne
mov
outs
sub
outs
jmp
jl
cmps
ret
(bad)
rol
enter
call
fsubr
mov
aaa
shr
test
mov
mov
dec
into
lods
popa
in
dec
jno
inc
repnz
ret
push
lods
fsubr
movs
addr16
inc
dec
mov
jmp
je
push
mov
ror
dec
xor
cmps
or
pusha
jp
repnz
dec
adc
cmps
and
cmps
xor
cmp
adc
nop
hlt
imul
cmps
push
mov
loopne
mov
adc
repnz
cmp
popf
jmp
mov
sbb
popf
cmps
std
ja
(bad)
loop
fs
sub
push
cmps
mov
ss
cmps
out
xor
ret
aaa
and
mov
fcomp
xor
ja
iret
xchg
rcl
ss
daa
fmul
mov
jb
and
int3
cmp
ret
shl
ds
ret
pusha
xor
dec
retf
dec
rcpps
jb
aad
pop
out
mov
outs
ret
scas
stos
sbb
(bad)
scas
ss
ret
mov
int
test
js
mov
sbb
js
mov
je
or
sub
push
cmp
add
sbb
cdq
adc
mov
mov
inc
arpl
xor
dec
jns
pop
out
mov
cli
jo
arpl
xchg
add
mov
inc
test
dec
xchg
sub
mov
ror
test
mov
in
push
pop
mov
adc
or
jmp
jae
add
push
sub
inc
repz
imul
(bad)
mov
pop
mov
mov
push
or
xchg
gs
mov
mov
push
jae
xor
mov
stos
mov
mov
iret
cmps
pop
enter
adc
add
cmp
inc
shr
cmp
scas
je
xor
inc
int3
jbe
and
mov
adc
aam
dec
retf
shr
(bad)
popf
ins
push
pop
mov
pop
arpl
or
inc
xchg
data16
daa
push
stc
xor
test
outs
add
and
push
push
dec
loop
paddsw
std
sahf
(bad)
rol
dec
xor
call
ds
sub
cmps
mov
(bad)
(bad)
scas
aad
and
push
mov
mov
sub
mov
ins
ret
mov
rcr
ror
cli
shr
mov
in
sbb
mov
ret
jno
ret
adc
iret
mov
sti
ins
or
jbe
xor
sub
lahf
mov
retf
stos
outs
sub
fsub
mov
mov
push
out
jg
and
mov
test
or
iret
scas
out
cmps
loop
(bad)
jle
out
jns
mov
(bad)
mov
jmp
inc
adc
xchg
cli
jecxz
scas
mov
and
sbb
les
pop
stos
mov
popa
sbb
test
test
nop
(bad)
inc
mov
jp
xchg
cmp
mov
scas
jbe
adc
repz
jmp
mov
inc
rcr
mov
(bad)
mov
mov
dec
test
adc
xlat
lds
pop
mov
jnp
stos
outs
xor
fild
sbb
adc
jns
icebp
xchg
je
push
icebp
add
push
pop
fisubr
in
push
pushf
push
frstor
je
add
lods
loopne
sti
or
rol
push
fwait
aad
cld
push
push
out
jno
repz
in
pop
out
xchg
pop
push
xchg
out
inc
ds
and
add
mov
xor
xor
dec
arpl
data16
xor
push
cs
or
dec
xchg
sbb
fcomp
movs
retf
cwde
adc
pop
mov
xchg
jne
and
cmps
push
adc
jmp
scas
rcl
arpl
rcr
pop
fldenv
push
pop
shl
cmc
lods
cmp
sbb
loop
imul
pop
xchg
sti
repnz
popf
mov
adc
retf
dec
push
lahf
sub
mov
cmp
popf
adc
cmp
sub
(bad)
mov
inc
or
ret
push
mov
pop
cs
sub
cmp
mov
pop
add
jecxz
adc
jmp
mov
out
jl
mov
pusha
fs
inc
popa
cmp
add
dec
sar
add
ds
cmc
scas
xchg
scas
xchg
ins
outs
stc
mov
dec
xor
xlat
pop
jmp
xlat
enter
sti
xor
jb
sbb
jno
je
mov
adc
cwde
popa
fs
push
pop
xlat
adc
(bad)
cmp
add
out
adc
repnz
xor
xor
mov
mov
mov
cmp
and
(bad)
out
(bad)
nop
mov
push
leave
sbb
adc
push
or
pushf
dec
scas
sbb
and
sar
aad
inc
inc
mov
nop
aam
sub
loope
daa
add
xchg
jl
mov
or
inc
push
lock
pushf
pop
pushf
dec
inc
sub
inc
je
push
sti
in
into
push
jb
xor
into
pop
lahf
(bad)
ror
loopne
jb
imul
je
ret
ds
and
jnp
pop
(bad)
mov
imul
rol
stos
stos
cmp
lds
in
adc
cli
movs
mov
lods
pop
ins
mov
je
fst
nop
fst
fwait
sar
and
jb
loopne
into
or
mov
fs
jb
adc
adc
cmp
aam
(bad)
jbe
pop
add
fidiv
mov
xor
adc
ret
sbb
add
mov
test
test
stos
jae
push
rcr
aad
int3
adc
mov
pop
pop
rcr
or
lea
(bad)
ins
and
in
ret
push
jb
and
cdq
test
mov
xor
nop
stc
femms
lods
mov
sub
push
jl
mov
mov
adc
inc
sbb
push
sahf
pop
xlat
stos
lahf
pushf
out
outs
mov
cmc
inc
ror
daa
add
adc
xchg
je
ret
call
push
dec
mov
es
inc
xchg
jae
sub
adc
xor
xor
sub
jmp
pushf
xchg
xor
outs
jmp
outs
sub
sub
loope
inc
sub
cmp
stc
adc
ret
xor
jae
fcmovnb
out
lds
inc
xchg
jp
nop
dec
sub
jb
or
in
jp
adc
js
in
mov
loop
jnp
shl
scas
ins
mov
loopne
retf
ret
das
mov
pop
pop
(bad)
mov
stc
cld
dec
retf
cmp
fdiv
mov
movs
sahf
test
adc
inc
clc
(bad)
add
or
ds
xchg
shl
xchg
sub
fucomi
or
xchg
pop
lods
push
mov
std
out
ss
movs
mov
or
test
rcr
inc
rcl
aad
mov
pop
(bad)
mov
inc
je
std
dec
pop
add
in
push
add
out
add
pop
inc
add
out
mov
(bad)
popa
pushf
jmp
out
mov
mov
push
xchg
dec
add
stc
popf
jecxz
mov
out
cmp
fisttp
sub
call
cld
imul
in
inc
lods
xchg
cmc
cmp
add
aam
pop
cmc
inc
stos
xchg
xlat
in
out
sub
dec
rol
call
ret
loope
or
rcr
sbb
add
xor
mov
out
int3
mov
imul
test
jno
jns
xchg
ss
leave
sbb
in
dec
cmp
inc
mov
stc
mov
movs
mov
std
push
fwait
pop
jl
sahf
in
sar
pcmpgtd
mov
clc
mov
or
stos
or
in
push
call
out
push
sub
ror
mov
sahf
xor
add
jg
out
or
xor
inc
xchg
fcom
jmp
dec
pusha
out
jno
(bad)
rcr
dec
je
es
imul
call
jmp
cmps
mov
pand
mov
pop
jl
mov
aas
movs
mov
out
ins
(bad)
mov
ins
adc
dec
xchg
xchg
fstp
xchg
xlat
and
cld
vmread
jecxz
cmps
test
mov
add
xchg
mov
xor
jne
and
mov
icebp
lock
rol
mov
xchg
mov
jmp
repnz
cmps
ret
aam
outs
pop
xor
pop
call
cmp
out
jmp
retf
pop
mov
jp
inc
push
cmps
sub
cmp
dec
in
inc
stos
shr
fisubr
aam
fstp
pop
(bad)
test
add
push
mov
div
aaa
and
mov
xchg
push
cli
mov
xor
inc
pop
inc
cdq
mov
pop
js
(bad)
and
out
in
cwde
outs
sti
push
(bad)
(bad)
and
test
pop
jp
mov
xor
call
inc
lods
fs
add
das
pop
loopne
sub
(bad)
mov
lds
mov
add
mov
retf
or
add
inc
xchg
hlt
sbb
pop
dec
cwde
movs
sub
inc
cli
scas
idiv
and
mov
aad
sbb
sub
sti
fidiv
test
(bad)
push
jmp
xchg
shl
cmps
test
or
clc
out
mov
pop
addr16
xor
pusha
ss
mov
pop
out
and
cmp
sub
xchg
mov
mov
call
nop
inc
lods
mov
jmp
mov
mov
dec
xchg
ss
cmps
mov
daa
stos
pop
aam
xchg
mov
aaa
repz
xchg
jmp
push
jno
into
repz
loope
repnz
cdq
adc
je
sbb
ds
jo
in
scas
pop
data16
sbb
jle
push
loope
jmp
fmul
xchg
int
push
cdq
cmp
mov
fdivr
dec
push
dec
(bad)
shl
inc
cmp
out
jb
add
les
push
adc
imul
mov
sub
test
arpl
or
cmps
das
clc
dec
fsubrp
in
in
add
daa
outs
inc
xor
fwait
rcr
add
and
xor
add
push
xchg
xchg
ds
nop
mov
lods
mov
pop
add
jg
adc
scas
aaa
cmps
(bad)
fnstenv
int3
jne
sar
daa
pop
cmp
or
fst
(bad)
jg
mov
xchg
out
bound
lods
xor
retf
push
mov
dec
mov
aam
sbb
into
jge
cmp
test
test
xor
sub
aas
add
std
mov
mov
scas
pop
or
jns
sub
adc
stos
pop
inc
lds
aas
ja
cmp
xor
mov
pop
js
hlt
xchg
push
in
cwde
lds
push
inc
shl
sub
je
nop
jge
push
mov
retf
test
in
neg
aas
dec
mov
fidivr
rcl
dec
adc
jb
sub
push
daa
sub
xchg
popf
repz
neg
push
add
es
sbb
enter
and
sbb
push
cmp
mov
and
data16
adc
mov
push
ret
or
sub
jl
push
dec
out
call
xor
sti
daa
or
xchg
or
je
pop
push
push
fdiv
popa
popa
in
fs
sbb
inc
xor
scas
mov
cmp
cwde
adc
movs
fldenv
jle
push
adc
xchg
cli
sbb
dec
xchg
std
retf
inc
push
bound
inc
hlt
xor
add
movs
jae
rol
stos
push
arpl
gs
add
in
mov
not
call
cwde
mov
rcr
mov
pmulhw
daa
shl
and
sub
loop
mov
sbb
push
mov
pop
mov
outs
psllw
adc
sti
enter
mov
fbld
int
cmp
aas
(bad)
push
or
xchg
cdq
dec
lods
imul
popa
mov
or
nop
jecxz
add
cmps
adc
jbe
sbb
sbb
fxch
mov
add
aad
add
pop
and
ror
mov
add
mov
xor
stos
mov
(bad)
shl
shl
inc
jp
jo
push
stos
pop
xor
jnp
les
retf
xchg
enter
sub
pop
jmp
popf
cs
and
movs
jbe
and
shl
fs
les
mov
cli
xchg
aaa
sub
scas
fcmovnbe
enter
xor
ret
push
cmps
movs
sbb
je
ds
jecxz
pusha
das
dec
ins
mov
loopne
mov
push
sbb
rcr
fcom
rol
push
into
push
or
js
inc
xchg
mov
div
xchg
xor
pop
in
rcl
mov
(bad)
jecxz
cmp
or
and
xor
add
xor
pop
fdiv
iret
jae
pushf
push
shr
and
nop
imul
lahf
movs
mov
clc
adc
jno
in
jne
jmp
dec
inc
popa
jo
ror
(bad)
xchg
movs
xchg
mov
imul
rol
aas
loope
dec
fild
test
jmp
inc
sahf
(bad)
neg
fiadd
sbb
push
pop
cmps
mov
scas
aad
sub
mov
in
xchg
js
push
lahf
arpl
mov
mov
mov
pusha
ret
stc
ds
xchg
movs
xchg
stos
mov
lds
sbb
rcl
cmp
sar
shl
iret
sub
mov
nop
sub
int3
pop
popf
mov
xchg
mov
push
xor
mov
xchg
outs
ret
repz
push
loop
mov
push
mov
repz
jle
repz
cmp
in
stc
jb
jg
cmps
cmp
retf
jbe
inc
out
in
rcr
and
adc
setno
popf
fdiv
aad
movs
dec
cmp
and
mov
cli
sahf
push
cmp
and
mov
add
cmc
mov
call
sbb
out
test
xchg
fxch
test
or
mov
add
scas
push
gs
dec
dec
fwait
add
sbb
xchg
pop
fist
scas
outs
mov
pop
or
cmp
mov
xor
movs
addr16
fld
neg
repz
rcr
or
cwde
push
aaa
je
ret
sbb
inc
aam
lea
jmp
in
ja
pop
mov
adc
sub
jle
xor
mov
xchg
push
mov
xor
dec
jns
and
jle
and
or
pop
hlt
and
push
arpl
cmp
and
sahf
mov
xchg
stc
fbld
or
inc
rol
rcl
xchg
movs
loope
mov
aas
repnz
stos
inc
outs
cwde
push
sub
int3
ja
ret
lods
dec
or
mov
jp
fs
arpl
cmps
loopne
cli
sub
fdiv
mov
jo
jns
mov
jp
jae
adc
(bad)
lods
push
int
push
rcl
xchg
mov
es
bound
cmp
es
sub
push
arpl
ror
sbb
dec
xchg
mov
pop
cmps
inc
retf
xor
push
mov
jl
mov
std
jge
xor
psubsb
xor
outs
jne
inc
mov
and
mov
fiadd
cwde
add
sub
scas
hlt
inc
adc
push
or
push
inc
xchg
jecxz
loop
sub
(bad)
xor
int
mov
test
dec
std
test
cmp
inc
sub
and
or
sbb
inc
cld
sbb
adc
arpl
or
jmp
jge
and
fcom
into
sti
mov
and
pop
dec
ret
sub
jo
push
xchg
dec
jo
xchg
in
cli
dec
xchg
retf
inc
mov
hlt
sbb
js
cmp
sbb
sbb
mov
outs
or
pop
rcl
in
sub
aaa
push
lock
test
leave
into
and
lds
mov
out
int
xchg
push
fs
mov
je
fwait
rcr
(bad)
mov
pop
xor
mov
loope
bound
sbb
pop
cwde
cmp
(bad)
dec
add
pop
js
mov
shr
jo
jo
clc
out
movs
loope
jmp
adc
and
push
pusha
inc
push
test
xlat
xchg
in
and
or
mov
mov
xor
rcr
sbb
mov
mov
or
movs
mov
cmp
xchg
bound
loop
cwde
movs
dec
dec
push
sub
ss
pop
sbb
mul
loop
mov
xor
rol
dec
(bad)
in
mov
mov
cmp
xchg
out
fistp
int3
cmovno
arpl
cmp
das
sub
pusha
inc
das
(bad)
test
out
xor
enter
mov
sub
adc
jb
xor
pop
push
inc
or
aam
in
mov
aam
xchg
pop
jno
push
shr
lods
xchg
adc
pop
mov
pop
jge
hlt
jbe
pop
add
pop
stos
retf
das
fstp
mov
imul
and
std
jno
aad
in
sub
cmp
arpl
int3
mov
and
pop
xor
xchg
mov
out
movs
lea
mov
sub
icebp
mov
fdiv
lahf
loop
in
inc
adc
add
dec
in
jb
mov
jnp
bound
add
push
mov
xor
xor
shl
mov
or
dec
sub
or
xor
mov
jle
sub
pushf
push
push
scas
mov
stos
push
inc
adc
rcl
dec
fdiv
jp
std
cmps
xor
retf
mov
pushf
mov
sub
or
out
sub
inc
jmp
inc
push
in
in
pop
out
mov
inc
outs
test
pop
push
jno
mov
lahf
xchg
jns
(bad)
xchg
xor
push
call
xchg
inc
push
dec
or
xor
push
cwde
pusha
sub
popa
mov
jge
cmp
inc
ror
js
ret
lock
mov
and
cwde
hlt
loopne
fbstp
push
dec
mov
mov
mov
popf
out
mov
or
cmp
pop
adc
mov
and
inc
mov
push
jp
pop
ds
mov
xchg
aaa
mov
std
fbstp
call
xchg
rcl
dec
movhps
and
bound
std
(bad)
fcmovne
sahf
clc
clc
stc
jb
cmp
push
pop
out
out
mov
xlat
mov
mov
mov
pop
out
aad
push
into
mov
cdq
(bad)
cli
jne
pop
je
pop
sbb
xchg
xchg
imul
stos
push
xchg
adc
mov
mov
mov
dec
add
cs
xchg
pop
inc
mov
cmp
stos
cwde
jmp
icebp
fdivr
fs
les
or
xchg
mov
loopne
(bad)
xor
loop
test
daa
fmul
repnz
test
outs
mov
sub
adc
adc
dec
push
lods
push
stos
arpl
mov
jmp
xchg
loope
mov
in
cmc
inc
fstp
pop
sbb
jbe
adc
push
push
loope
and
xor
jecxz
jmp
sti
arpl
xchg
adc
imul
add
inc
mov
jg
or
inc
das
mov
std
stc
and
ficom
fstp
cmc
dec
xchg
cmc
int3
pop
inc
inc
das
xchg
out
sti
jbe
adc
xor
mov
cmp
mov
push
hlt
adc
or
int
jle
push
loopne
lahf
loopne
cmps
pop
dec
jg
sahf
(bad)
out
push
inc
cmp
xor
mov
(bad)
push
cmps
dec
fucomip
or
inc
and
es
inc
aaa
jle
dec
fsubr
mov
(bad)
push
fisub
lock
jecxz
or
(bad)
int3
adc
pushf
inc
int
sub
loopne
mov
mov
xor
cld
inc
sbb
sar
add
adc
mov
pavgw
addr16
push
xchg
pop
ret
clc
sub
pop
pop
stos
jg
mov
lock
cmps
shl
sbb
stos
mov
xchg
scas
mov
stos
enter
sub
gs
(bad)
call
or
jb
je
(bad)
pop
ins
popa
arpl
inc
in
dec
push
mov
push
adc
ins
lods
add
push
test
fsubr
int3
xor
cmc
rcr
xchg
dec
ret
mov
jno
cwde
and
and
xor
stos
xchg
jnp
and
fdivr
clc
cmp
(bad)
rcr
idiv
xor
jmp
bound
in
aad
cmp
out
add
adc
es
mov
dec
leave
jo
push
inc
cs
(bad)
cld
or
aad
sub
pop
sbb
outs
aaa
push
sbb
std
out
inc
loopne
stos
cmps
hlt
call
dec
ds
(bad)
xor
in
or
lds
gs
add
mov
mov
sbb
sbb
dec
in
(bad)
adc
test
cmp
imul
hlt
outs
(bad)
out
mov
jns
push
mov
or
add
fwait
pop
jg
dec
sbb
dec
ja
clc
mov
and
in
pusha
adc
repnz
push
jb
adc
ret
rol
xchg
data16
pop
cmp
sub
lds
xor
jo
cmp
jg
(bad)
scas
fcmovu
lods
popf
repz
jnp
das
jmp
dec
(bad)
retf
lods
out
sbb
ficom
dec
neg
push
rol
cmp
pop
int3
lahf
shr
call
mov
jl
repz
sub
xchg
cmp
jmp
je
add
cld
push
or
retf
inc
stc
aad
ret
or
pop
sub
addr16
imul
(bad)
jle
push
fwait
jns
inc
loop
jmp
call
mov
push
lods
dec
icebp
xor
xor
or
xchg
ret
add
inc
dec
fnsave
sub
in
popa
ins
adc
lods
jge
cdq
loope
sub
dec
aaa
aad
dec
mov
sbb
sbb
aas
push
dec
sbb
aad
xor
mov
mov
cmp
loop
jle
sub
(bad)
retf
mov
and
stos
mov
(bad)
aam
mov
fmul
dec
dec
and
or
enter
sahf
mov
outs
push
data16
mov
add
test
mov
cmp
pop
or
dec
cmp
and
out
sub
ret
xchg
mov
inc
or
pop
mov
cmp
push
ja
jle
(bad)
ds
loop
popf
mov
mov
cwde
fisub
mov
out
jg
pop
add
adc
dec
jae
in
jnp
xor
(bad)
ins
dec
mov
xchg
adc
imul
inc
iret
scas
push
sbb
cmp
adc
lea
lea
mov
or
dec
pop
aad
out
inc
outs
cmps
test
sub
scas
xlat
dec
data16
loop
cmp
adc
mov
fcomp
fmul
test
pushf
ds
pop
mov
or
mov
in
push
or
(bad)
repnz
or
pusha
stos
aas
adc
cmps
and
add
movs
or
xor
ins
popa
mov
adc
or
addr16
in
sbb
jmp
mov
(bad)
stc
ja
imul
stos
and
dec
retf
cli
ret
push
xchg
mov
or
push
les
inc
rcr
mov
enter
es
and
pop
xchg
mov
mov
es
test
cwde
jge
pop
mov
div
push
mov
retf
call
nop
bswap
pop
push
xlat
sbb
add
mov
inc
push
and
dec
retf
mov
leave
sub
and
ja
xchg
cmps
in
cmc
ja
mov
int
mov
mov
sbb
fucomi
sub
dec
dec
popa
scas
inc
stc
xlat
inc
push
imul
imul
sub
mov
xchg
ficomp
jo
jne
rcl
aam
xor
and
test
jne
retf
shr
cmp
sub
push
in
mov
add
push
dec
stc
ficom
pop
or
push
fiadd
retf
inc
sti
mov
adc
cmps
aaa
or
iret
and
das
xor
jmp
jnp
aad
mov
push
fsub
mov
mov
mov
shl
leave
xlat
mov
fucomp
push
and
sar
retf
loopne
xor
fisttp
jecxz
sub
aam
xchg
enter
je
pop
pushf
cdq
add
stos
jb
fstp
xor
retf
or
retf
test
sbb
call
mov
and
mov
mov
push
add
aad
pop
sbb
push
mov
cs
or
inc
adc
jo
pop
pop
cmp
hlt
jns
cmp
inc
(bad)
rol
push
xchg
add
pop
jae
pop
add
movs
fild
jmp
add
out
(bad)
sbb
mov
out
jns
bound
rcr
gs
push
cmp
in
ds
enter
push
mov
mul
inc
push
movs
aam
adc
and
dec
mov
mov
icebp
cmps
mov
movs
or
mov
or
iret
adc
cmp
aaa
cmp
sbb
out
outs
rcl
ret
std
xchg
retf
stos
cmps
out
pextrw
xor
inc
xchg
sub
mov
add
inc
out
mov
dec
(bad)
mov
jb
xchg
and
and
jmp
sahf
mov
add
jp
jns
enter
ds
or
js
shl
rcr
cmps
fmul
movnti
in
fucom
or
jo
rol
js
jns
nop
lock
add
hlt
mov
and
and
scas
movs
or
pop
(bad)
xlat
popf
sbb
and
push
jb
xor
inc
xor
dec
or
push
xor
fstp
mov
js
push
aad
gs
mov
and
out
dec
push
adc
mov
fild
loop
adc
pop
cmps
pop
nop
adc
push
das
inc
ficomp
inc
or
pushf
cmp
and
jmp
mov
add
pop
lods
stos
(bad)
jle
inc
pop
sbb
leave
or
ja
sub
mov
sahf
shl
dec
mov
mov
sbb
sub
pop
jb
pop
cmp
xor
ror
arpl
fisttp
leave
std
inc
mov
rcl
les
adc
in
ret
ja
xchg
imul
mov
pop
mov
mov
sbb
dec
or
jmp
cmps
icebp
xor
in
(bad)
jns
or
sub
mov
and
mov
cwde
or
inc
(bad)
inc
in
jge
xlat
mov
stos
xchg
lods
lea
pop
push
mov
mov
mov
push
int
xchg
adc
add
xchg
inc
jno
mov
push
fwait
sub
stc
cmp
(bad)
xchg
dec
rcr
movs
mov
jp
lods
enter
inc
add
mov
mov
fcmovnbe
xor
addr16
hlt
mov
jg
fistp
pusha
pop
xor
xor
in
xor
movs
jae
imul
cmp
xor
push
sub
call
sub
sbb
lea
pop
mov
push
cs
xor
inc
(bad)
cmps
movs
jb
pop
pushf
mov
dec
rcr
jns
push
pop
fld
mov
mov
enter
mov
loope
not
add
adc
inc
xchg
push
xchg
adc
fidiv
lock
hlt
int
loop
sbb
dec
and
mov
cmps
call
out
lods
ret
(bad)
push
loop
in
scas
popf
ds
ds
push
lds
mov
xchg
dec
daa
arpl
xchg
xor
push
dec
cmc
out
dec
xchg
repz
fs
rcr
ja
or
or
shl
xchg
add
add
mov
rcr
in
enter
retf
imul
sub
mov
dec
ds
jae
sar
out
pop
mov
shr
mov
mov
fs
and
add
loopne
pop
cmp
dec
pop
shl
add
sbb
pop
fcomp
push
retf
lea
pop
push
int3
pop
mov
das
mul
pop
push
mov
pop
push
je
add
icebp
fwait
lods
call
popa
pop
imul
inc
sti
cmp
or
jmp
xor
test
cdq
int3
out
movs
xor
mov
je
pop
dec
xchg
dec
xchg
and
pop
xor
add
xor
mov
jmp
and
cmp
jl
adc
jmpw
leave
jo
neg
cmp
dec
xchg
mov
jmp
int
fdivr
lock
jmp
ins
add
ja
call
jb
mov
(bad)
mov
(bad)
mov
fcom
sub
loopne
xor
and
dec
in
call
repz
xor
sub
mov
stc
rol
rcl
imul
mov
das
sub
jbe
je
test
dec
pop
sti
fs
cmp
sub
stos
loop
mov
imul
(bad)
loope
jmp
movs
fadd
div
into
mov
xor
or
aas
mov
(bad)
mov
mov
cmp
aam
pop
stos
test
fdiv
pop
inc
mov
add
inc
mov
push
pop
loop
push
hlt
mov
and
(bad)
jae
inc
jae
loope
fadd
mul
pop
pop
or
fnstcw
sbb
imul
push
fwait
jmp
pop
out
mov
stc
int
stc
lea
out
pushf
mov
vcvtps2dq
and
fs
and
and
sar
pushf
gs
in
push
loop
gs
cdq
pop
push
cmps
xor
jo
fcomp
idiv
inc
shr
ss
fild
clc
idiv
call
mov
(bad)
in
lahf
or
pop
js
sub
fcom
out
or
pop
pop
call
les
cmc
ja
add
cmps
push
inc
xchg
adc
addr16
cmp
ficom
mov
in
push
repnz
jbe
pop
push
jne
cli
inc
fimul
mov
mov
add
and
mov
jno
jmp
jo
jg
movs
cmp
(bad)
ss
fiadd
(bad)
test
outs
hlt
loop
sti
(bad)
and
dec
scas
aad
repnz
nop
dec
pop
jmp
je
les
movs
sub
out
and
cld
loopne
and
call
mov
or
fisttp
ja
(bad)
sub
out
sbb
sub
out
cwde
pop
add
int3
mov
aam
sub
push
inc
or
push
cmp
xchg
add
pushw
(bad)
jg
loope
push
pop
jle
mov
enter
cwde
lds
iret
rol
cmp
mov
mov
jg
jmp
sub
adc
cmp
les
adc
sub
inc
sbb
push
pop
loop
jmp
mov
(bad)
scas
or
rol
adc
or
cmp
push
cld
aam
push
shl
aam
int
jecxz
jl
aas
call
mov
mov
pop
and
xor
adc
mov
mov
cs
and
test
movs
pop
push
cmps
pop
cmc
repz
mov
or
xchg
cmp
jns
mov
js
push
jmp
call
pop
test
je
icebp
pop
pop
jg
xchg
jbe
bound
mov
jecxz
add
loopne
loopne
movs
leave
mov
cdq
fstp
clc
mov
xor
xchg
cli
xchg
jo
gs
movs
lock
out
fld
cwde
mov
add
dec
ja
ret
mov
xor
das
outs
inc
jg
loopne
inc
jge
sub
and
mov
arpl
jp
push
push
mov
lods
int
jle
push
out
cmc
cmp
idiv
ja
sub
sub
and
hlt
sbb
loop
ins
lahf
push
or
dec
aam
fistp
push
or
cs
fnstsw
movs
repnz
push
sbb
jbe
jnp
shr
out
loope
scas
mov
repnz
cs
cli
(bad)
mov
and
sub
test
imul
inc
pushf
scas
cmp
outs
cld
pop
popf
int3
fisttp
jmp
inc
mov
xor
fdiv
cmps
paddusw
add
xor
fs
adc
cmp
ret
int3
js
sti
cmp
ins
rcr
mov
mov
stos
mov
and
cmc
fiadd
pushf
cmp
inc
les
or
xor
jb
(bad)
shl
in
and
fnstenv
cmp
xchg
ja
stc
retf
out
enter
adc
fwait
xchg
and
icebp
das
fldcw
fwait
push
or
(bad)
or
(bad)
neg
gs
retf
pop
adc
rcl
sub
sub
xor
pop
test
popa
add
dec
leave
enter
lds
cmp
pop
add
arpl
mov
jmp
jns
cmp
pop
addr16
stos
inc
jge
sub
sar
xor
in
retf
mov
std
dec
and
enter
pop
enterw
jmp
or
inc
aas
cmps
js
call
mov
dec
je
cmp
xchg
mov
test
and
pop
sti
mov
outs
out
arpl
pop
push
mov
xor
popf
adc
xchg
jo
or
or
je
sub
mov
leave
adc
pop
sub
adc
cmp
cwde
cli
mov
scas
mov
(bad)
in
fwait
pop
mov
xchg
push
xchg
inc
and
sub
loop
sbb
lds
pop
jbe
xor
mov
push
das
(bad)
push
push
sbb
or
outs
in
and
cmps
movs
xchg
xchg
push
or
cld
into
int
xchg
lock
xchg
ds
fsubr
(bad)
int3
adc
out
xchg
pop
or
icebp
cmp
shr
xlat
stos
sub
mov
lods
das
mov
xor
xchg
movs
xlat
cmp
dec
rol
sti
and
movs
adc
loope
outs
cmps
into
xor
pop
mov
and
mov
cmp
shl
xchg
xor
mov
mov
or
mov
cdq
xlat
jg
mov
push
mov
xlat
dec
inc
cmps
xchg
sub
mov
nop
(bad)
out
shr
mov
xor
jg
jle
daa
pop
in
fstp
scas
cmp
and
push
rcl
inc
pop
cmc
inc
(bad)
sub
mov
pop
mov
or
ins
(bad)
rcr
ret
jae
fcomi
add
scas
inc
mov
stc
ss
mov
test
hlt
inc
adc
or
arpl
dec
bnd
call
add
out
adc
xchg
loope
ret
mov
stos
pop
jmp
in
fwait
neg
dec
cmps
adc
xchg
sub
jo
adc
sbb
mov
xchg
mov
or
xchg
cmp
retf
mov
sar
nop
cwde
and
pushf
fcmovnbe
je
retf
mov
mov
inc
xchg
sub
fsub
cmp
sbb
int3
sub
push
daa
cmp
in
sbb
add
lds
mov
add
sub
cdq
add
xor
add
ss
ss
adc
inc
push
ins
dec
in
sub
inc
popa
retf
aas
loop
jo
sub
nop
lea
jmp
arpl
out
sahf
pusha
fld
sub
sti
cmc
add
push
cdq
mov
enter
or
cmp
fwait
and
push
add
es
cwde
sbb
fbstp
push
hlt
mov
loope
sub
ja
fist
sahf
mov
xor
retf
or
stc
xlat
data16
adc
mov
(bad)
sbb
mov
xor
dec
sbb
add
cdq
mov
and
nop
sbb
aaa
cld
dec
pop
and
js
xlat
(bad)
xchg
xchg
xor
(bad)
jg
repnz
sub
ins
inc
in
mov
push
add
int
inc
push
test
cld
push
cmp
jbe
sbb
mov
push
adc
mov
retf
repnz
lods
stos
xchg
shl
push
jb
sub
adc
imul
lods
fs
jg
in
mov
cmc
dec
push
sar
jns
xor
pop
adc
aaa
xor
mov
mov
mov
ja
push
and
rcr
sti
xchg
push
leave
mov
push
dec
sti
cli
mov
mov
mov
(bad)
in
adc
or
push
test
jg
in
xchg
cmp
xor
xchg
push
jl
in
das
daa
icebp
add
push
fisttp
xor
retf
in
xor
call
call
lds
in
jbe
sbb
loopne
sar
je
jg
mov
push
scas
inc
dec
push
(bad)
mov
jno
mov
mov
add
xor
(bad)
inc
sbb
push
inc
jg
nop
outs
ja
add
xchg
std
pop
addr16
test
sbb
das
es
test
xchg
cmps
cwde
sbb
xor
sahf
or
push
inc
sar
cmp
dec
loopne
xchg
imul
sub
bsf
inc
add
loopne
nop
adc
lods
loope
dec
or
jl
stos
pop
pop
imul
ds
dec
pop
or
cmp
sub
das
jmp
pop
shr
xchg
or
mov
sbb
bound
lea
outs
xor
mov
daa
mov
lods
in
push
mov
(bad)
(bad)
jmp
mov
retf
sbb
push
shl
push
jnp
stos
inc
cli
push
fistp
imul
add
sub
dec
cmc
movs
rsm
data16
lea
xor
lods
add
(bad)
addr16
int
shl
(bad)
xchg
scas
or
xlat
pop
xchg
dec
shl
scas
mov
mov
out
dec
mov
dec
pop
bound
sbb
lods
icebp
or
cwde
test
pop
xchg
fstp
add
jg
arpl
mov
test
lea
mov
imul
test
jge
xor
fcomp
push
test
out
mov
std
cmp
adc
ret
jle
pushf
mov
cld
cmp
setge
shr
pop
cmp
mov
popf
outs
pop
scas
mov
call
scas
cmp
adc
jnp
and
stos
fwait
loop
in
mov
rcr
rol
rcl
(bad)
aas
and
dec
push
adc
mov
mov
mov
xor
pop
call
pop
in
mov
cmp
add
fld
leave
cmp
mov
push
adc
xchg
jb
ror
xor
mov
mov
jmp
cmps
lods
les
test
stos
repnz
clc
ins
mov
push
int
add
fwait
mov
xor
out
push
xchg
scas
xor
mov
scas
sbb
push
pop
jae
repnz
jp
bound
ins
mov
xchg
retf
jns
popf
gs
rol
jmp
not
test
pop
icebp
repz
call
and
aad
sar
in
jmp
jo
pop
mov
fidivr
pop
stos
or
ja
mov
cwde
mov
test
xchg
scas
aas
sar
jmp
repnz
push
mov
and
leave
push
xlat
xchg
pop
pop
inc
cmp
ret
test
jg
cmp
sub
js
push
xor
sub
or
push
jne
scas
mov
push
jnp
mov
xor
mov
cmp
scas
mov
(bad)
call
or
mov
cmc
fwait
ret
clc
jmp
fcom
push
retf
out
dec
aam
push
ss
jb
xchg
in
xor
and
popa
fst
or
outs
dec
and
pop
popf
in
mov
arpl
cmp
xchg
jmp
cmp
and
aaa
jle
js
sub
call
inc
fidivr
stos
cmp
lods
and
dec
rcr
std
bound
adc
lods
xor
clc
scas
mov
adc
movs
dec
dec
mov
inc
enter
adc
jge
int3
dec
xlat
(bad)
jecxz
movs
mov
in
sbb
add
pop
mov
pop
inc
or
push
adc
int
add
xchg
adc
jl
or
test
or
int
push
push
retf
mov
xor
int3
pusha
call
mov
das
cmp
(bad)
push
fmulp
dec
jl
lods
push
movs
mov
lods
ins
addr16
adc
clc
repz
comiss
movs
push
into
mov
icebp
iret
test
test
fxch
and
pop
into
repz
mov
fsubr
jge
aad
pop
sub
jmp
fidiv
or
inc
aad
dec
shr
mov
mov
add
lock
cwde
sbb
push
retf
cmps
sub
popa
jp
mov
inc
icebp
gs
fsubr
sbb
jmp
jl
adc
push
cdq
cmps
sahf
nop
and
in
test
fnstcw
jne
xor
(bad)
dec
mov
jl
fnsave
pop
into
shl
movs
inc
pop
adc
inc
add
into
sbb
push
sub
ds
or
push
idiv
inc
jb
arpl
std
push
mov
jecxz
push
mov
fsubr
pop
lds
mov
pop
mov
addr16
out
loop
mov
out
pusha
add
lahf
jns
out
xor
fmul
push
leave
and
inc
pop
ins
mov
sub
xor
stos
pop
aam
xor
scas
adc
mov
cmp
test
fcom
and
imul
adc
test
data16
mov
repnz
jmp
push
mov
into
rcl
fisttp
ret
stc
das
xchg
fs
xor
xchg
(bad)
sub
scas
xchg
adc
(bad)
aaa
add
adc
hlt
dec
cmp
mov
xchg
mov
scas
xchg
push
lods
retf
and
loope
mov
push
aaa
mov
mov
push
sbb
out
or
adc
js
jmp
ret
lea
mov
loope
pop
loop
icebp
sub
rcr
rol
push
popf
int3
call
mov
cmp
jge
loop
cmp
mov
push
rcr
jmp
xchg
xor
dec
mov
inc
(bad)
fist
jnp
push
cmc
mov
jecxz
mov
idiv
mov
jne
dec
call
lock
cmp
jmp
adc
adc
xchg
cmp
fmul
fisttp
fimul
add
or
lar
xchg
clc
(bad)
xchg
inc
fdiv
add
iret
cmp
scas
iret
int
cmp
or
jecxz
sbb
xor
pop
fstp
into
xchg
es
and
push
cdq
add
add
and
pusha
ja
ins
imul
lds
cmp
ja
shl
and
inc
or
jle
dec
adc
push
test
jp
shr
cmp
push
daa
call
jb
mul
aam
mov
pop
adc
inc
stos
xlat
fucompp
jns
call
sbb
sub
cmp
fcom
push
push
push
inc
pop
xchg
lods
jmp
sti
shr
jl
aas
retf
sbb
inc
popa
lods
mov
inc
mov
and
push
movs
push
adc
retf
xchg
scas
sub
dec
out
ins
jae
add
lahf
cmp
jecxz
jmp
loop
push
out
mov
push
mov
fst
cmp
out
sub
fidiv
pop
stc
push
xchg
xor
add
jl
pop
fucom
je
mov
test
in
mov
rcl
jp
into
out
mov
bound
cmps
push
xchg
cld
(bad)
(bad)
push
jae
pop
push
rcr
hlt
js
ss
dec
mov
jmp
jmp
mov
xchg
cs
push
and
and
jl
in
mov
call
imul
xor
aam
cmp
in
test
jnp
sbb
pop
shr
loop
jge
mov
mov
pop
mov
jmp
arpl
(bad)
mov
mov
sub
out
out
jg
sar
mov
adc
jge
sub
ss
retf
xlat
mov
adc
dec
(bad)
cmps
add
push
sbb
cmc
adc
cmp
mov
cmps
xor
add
sbb
dec
dec
sbb
outs
loopne
call
mov
jmp
mov
cmp
in
push
mov
mov
mov
sub
mov
pop
into
(bad)
mov
imul
fcmove
mov
sbb
stc
in
retf
mov
jle
popa
mov
sbb
push
aam
rol
popf
inc
lods
ret
iret
rol
ins
in
sbb
popa
mov
pusha
fs
outs
movs
or
ins
sbb
das
cmp
into
cmp
sahf
add
mov
or
ja
icebp
push
jns
mov
hlt
xor
xchg
push
in
arpl
xor
fisubr
retf
jle
test
imul
fwait
int
inc
pusha
sbb
inc
pop
ins
(bad)
mov
adc
jle
jno
sbb
arpl
add
ret
fist
nop
mov
or
xchg
push
dec
sbb
pop
sub
jno
cmps
xor
and
add
inc
push
out
xor
cwde
inc
pop
xor
test
jno
push
or
jle
dec
addr16
push
jmp
pop
das
in
push
cdq
push
loop
mov
call
cmp
nop
loopne
cli
or
out
jbe
(bad)
(bad)
mul
fwait
xor
push
ss
stc
cmc
jp
movs
ror
test
push
or
jecxz
cmp
scas
clc
shl
dec
fcmovb
mov
xchg
mov
cwde
and
cmp
push
adc
outs
xor
scas
sub
jecxz
mov
mov
cld
ins
sbb
sub
inc
push
push
scas
cmp
sbb
in
cs
lahf
xor
out
mov
dec
or
sbb
scas
mov
add
push
ret
jb
or
cwde
push
jle
or
add
inc
add
sbb
ss
ja
rdmsr
and
int
and
or
lea
pop
pop
pop
addr16
rcr
aaa
adc
call
jnp
and
dec
dec
pop
fidivr
out
lods
cmp
mov
mov
inc
arpl
push
dec
push
retf
pusha
add
adc
loopne
aad
inc
or
lds
xchg
pop
sbb
mov
or
jae
scas
call
cmp
jno
mov
xchg
or
lea
test
push
jl
out
shl
adc
push
in
je
mov
dec
les
push
push
xor
fld
popf
cmps
(bad)
(bad)
cmc
aad
mov
mov
fstp
mov
jo
test
jns
aam
imul
pop
push
cld
popa
dec
mov
jl
mov
jbe
mov
inc
push
adc
ins
cdq
enter
je
mov
fldcw
xor
dec
cli
call
fcomp
sti
movs
enter
adc
and
jg
adc
sbb
xchg
pop
add
bound
mov
jmp
push
pop
push
jg
xchg
or
xor
imul
hlt
out
and
add
sbb
leave
xlat
imul
cmp
sub
dec
xchg
add
hlt
mov
jne
push
repz
cmc
movs
and
aad
xchg
mov
fwait
pop
into
je
pop
adc
add
test
mov
fisub
fistp
sub
xchg
fwait
outs
inc
sbb
jmp
xchg
sub
inc
sti
sbb
push
jl
call
ins
mov
mov
aam
mov
push
call
call
push
test
cmp
ror
xchg
push
fidivr
(bad)
or
mov
jg
aam
cmp
cmps
mov
jae
inc
xor
rcl
push
pop
or
push
(bad)
pushf
jl
dec
retf
mov
xchg
jbe
std
ret
retf
sub
enter
pop
out
outs
pushf
cmps
sbb
(bad)
cmp
in
mov
mov
mov
imul
ret
add
repz
and
ins
sar
mov
ins
loope
push
les
rcl
clc
push
mov
cwde
sbb
std
jmp
daa
mov
inc
inc
xchg
loope
sub
xchg
push
outs
sub
jge
push
cmp
inc
ret
pop
punpckhbw
test
js
jmp
cmp
xor
push
and
push
xchg
ja
xor
dec
outs
out
add
mov
leave
mov
fdivr
pop
(bad)
fisubr
ret
inc
inc
cmps
arpl
je
jmp
movs
xchg
or
and
or
inc
imul
fcom
lds
jb
mov
scas
add
call
xchg
pop
pop
xchg
xchg
imul
mov
sbb
xchg
stos
pop
aas
sti
mov
xchg
or
xlat
push
inc
repz
inc
sbb
and
xor
pop
cmp
ds
sub
std
cmp
lahf
movs
or
inc
pop
fsub
(bad)
inc
pop
cmp
sahf
imul
leave
neg
xchg
adc
dec
je
add
in
pop
fsub
ss
fidiv
mov
outs
inc
dec
xor
not
mov
int3
inc
ss
mov
fsub
xchg
cwde
dec
add
mov
(bad)
pop
mov
out
jmp
mov
xchg
mov
dec
push
addr16
ss
inc
jmpw
(bad)
neg
test
jb
cwde
add
sbb
mov
xlat
pop
mov
jg
push
les
mov
mov
scas
mov
in
fsub
lods
cli
pop
call
retf
movs
xor
je
pop
retf
call
xchg
fwait
mov
dec
sar
mov
div
add
jb
push
mov
jno
popa
fistp
adc
pop
leave
movs
mov
rol
dec
out
dec
or
cmp
xor
xor
daa
mov
movs
push
xchg
cmp
pop
sub
dec
sub
out
subps
sbb
mov
lahf
inc
mov
stos
ficom
sbb
dec
test
dec
add
out
mov
inc
int3
push
retf
sbb
push
and
sbb
push
add
sub
cmp
mov
adc
mov
ins
xor
retf
sub
clc
cmova
mov
jno
ins
enter
ins
fldpi
jo
loop
mov
mov
jno
ss
rol
lods
sbb
loop
in
cmp
pushf
mov
pop
pop
adc
inc
lods
adc
lds
rol
imul
push
push
lds
sub
xor
cmp
xlat
dec
popa
(bad)
jne
adc
movs
nop
popa
push
ss
jbe
sbb
loopne
leave
mov
cmps
sub
test
push
sbb
(bad)
jmp
mov
lock
sti
dec
in
dec
mov
sbb
pop
repz
or
dec
and
mov
fst
outs
xchg
push
inc
sti
mov
js
cmc
test
jnp
mov
dec
les
xchg
inc
or
pop
arpl
ins
add
adc
je
or
pop
pop
into
call
xchg
and
xchg
dec
aaa
adc
movs
inc
sub
xchg
les
lock
xor
push
or
add
retf
pop
inc
inc
and
loope
add
rcr
xor
jecxz
pop
lds
leave
in
shl
mov
cld
sub
inc
cmc
jmp
fwait
les
and
inc
ds
adc
je
mov
sub
pop
div
adc
xlat
xor
rol
(bad)
pop
lea
mov
sub
or
pop
stos
loop
push
adc
in
inc
or
jl
mov
pop
pushf
lock
lock
push
dec
push
jmp
or
out
aad
test
leave
fist
hlt
inc
push
cs
inc
loop
test
ret
or
adc
das
sub
pop
cmp
sub
xchg
mov
imul
pop
std
enter
mov
cdq
enter
sahf
and
rol
jg
repnz
loop
std
lahf
(bad)
xchg
test
ins
pushf
or
xchg
sbb
mov
in
movs
add
stc
in
adc
stos
je
or
jmp
jo
sub
gs
shr
and
fwait
inc
pusha
pushf
into
cmp
sbb
hlt
mov
add
retf
xor
pushf
cmp
stc
inc
mov
pop
and
adc
add
leave
sti
into
add
nop
dec
push
add
into
movd
xchg
xchg
xchg
sub
adc
jno
daa
jmp
inc
sub
inc
pop
mov
(bad)
in
mov
xor
hlt
dec
es
(bad)
push
mov
and
inc
pop
(bad)
sbb
and
or
aas
or
or
cmp
sbb
inc
test
leave
fs
pop
bsf
rcl
test
enter
push
and
inc
push
movs
inc
push
push
outs
mov
lods
jbe
lea
push
push
call
jae
dec
push
out
repnz
push
jp
mov
pop
mov
sub
cmps
mov
or
cwde
add
jecxz
cmc
in
jp
pop
repz
into
push
mov
jecxz
push
aas
pusha
aaa
aad
cli
sahf
popf
stc
pop
(bad)
mov
add
jnp
scas
mov
aam
adc
popf
jns
das
inc
(bad)
movs
or
push
call
inc
push
or
push
cmp
mov
or
cmp
cmc
add
mov
xor
ins
jo
push
or
cmp
push
mov
fcomp
nop
mov
out
sti
mov
dec
cmp
xor
pop
cmp
movs
out
mov
(bad)
loop
sub
jo
cdq
pushf
(bad)
xchg
or
test
sub
(bad)
in
inc
fs
mov
push
pop
push
ins
or
jge
lods
sub
xchg
int
push
and
mov
push
add
ffree
cwde
cs
(bad)
jg
out
jae
imul
push
out
out
push
int3
out
jge
mov
sti
add
sub
retf
sbb
ror
jnp
adc
ficom
(bad)
pop
sbb
out
and
ins
test
mov
rcr
cmp
sbb
loopne
dec
retf
ror
lahf
cwde
jmp
mov
stc
fiadd
xchg
xchg
cmps
pop
popa
add
sub
inc
(bad)
loop
clc
pushf
pusha
xor
aaa
ror
mov
aam
add
adc
test
movs
ja
loope
ror
inc
out
loopne
mov
adc
sub
mov
data16
adc
add
mov
outs
fbld
sub
clc
jbe
sub
gs
(bad)
jmp
adc
jge
in
rcl
cwde
sub
stc
inc
xchg
mov
add
xchg
mov
adc
gs
mov
cmps
nop
scas
adc
add
outs
fwait
xlat
pop
lds
inc
inc
jge
or
enter
inc
test
imul
cmp
push
dec
fs
cmp
aas
push
sbb
outs
inc
fs
bound
push
out
add
mov
and
fild
shr
sar
add
mov
rcr
jbe
out
out
fld
imul
add
jecxz
push
inc
xor
push
fdiv
xor
ret
scas
xor
dec
adc
fs
(bad)
xlat
pop
loop
and
repnz
shl
xchg
mov
jp
xor
fcmovnu
test
pop
adc
cmps
cmp
add
fisubr
xchg
add
ins
mov
sbb
lods
lea
fbld
fidivr
push
mov
or
xchg
jne
scas
dec
add
sub
(bad)
pop
xor
and
enter
cmp
loope
dec
adc
in
mov
shl
cmp
push
or
enter
in
or
js
sbb
mov
push
add
call
mov
inc
cmc
sbb
mov
pop
(bad)
and
popf
repnz
dec
adc
inc
mov
jecxz
neg
push
sub
fstp
dec
fwait
gs
dec
mov
fldenv
jno
in
lahf
pop
xchg
push
mov
bswap
xchg
loope
outs
in
mov
test
adc
mov
out
sahf
(bad)
test
mov
cmp
xor
inc
retf
nop
sub
test
cmp
push
shr
enter
cmp
pop
sub
push
dec
iret
dec
or
push
dec
dec
jl
sub
loopne
xchg
pop
outs
xchg
and
push
mov
mov
or
jbe
ror
(bad)
jg
jns
jge
jmp
xor
shl
cmp
shr
(bad)
enter
out
inc
nop
cmp
mov
or
ins
push
mov
xchg
daa
inc
pop
movhps
in
sbb
arpl
pop
inc
sbb
and
push
leave
xchg
mov
neg
mov
push
mov
xchg
xor
cmp
mov
pop
cmp
fisttp
sub
stos
push
test
dec
scas
sub
cmp
imul
inc
xchg
ja
fst
pop
fisub
mov
sbb
push
xchg
ds
xor
int
(bad)
sub
or
sahf
xchg
mov
cmps
xlat
xor
mov
clc
xor
jo
retf
pop
cs
pop
cmps
push
ss
add
fild
ins
mov
pusha
mov
jns
repz
fcom
retf
pop
push
fstp
push
push
mov
sbb
fld
(bad)
xchg
daa
loop
sub
retf
cli
push
push
xchg
inc
in
fbld
inc
mov
push
lock
cmp
jb
dec
cmp
mov
xchg
or
mov
sahf
pop
in
sbb
adc
jns
dec
(bad)
pusha
xor
es
les
sti
inc
inc
fdivr
sbb
jb
sbb
dec
add
xor
std
dec
icebp
inc
fld
push
popa
jg
adc
sbb
shr
or
daa
je
or
rcr
dec
fs
and
jge
push
nop
xor
dec
adc
add
cmps
and
rcr
lods
lock
mov
retf
jbe
adc
jae
xor
mul
out
push
jae
mov
jmp
jle
mov
jmp
cmc
int
mov
loopne
aam
dec
push
out
xor
lods
adc
inc
mov
and
add
les
mov
aaa
ja
in
cdq
stos
cs
out
add
nop
int3
pop
loop
mov
jp
inc
lock
and
lahf
cld
nop
inc
mov
fwait
or
inc
test
arpl
cmp
inc
push
ss
loope
cdq
or
pop
mov
int
mov
push
and
stos
xor
fwait
mov
add
push
mov
pop
out
mov
xlat
pop
adc
fsubr
(bad)
mov
mov
aam
ds
call
(bad)
inc
mov
stc
xor
ins
push
mov
in
pop
xlat
fistp
test
mov
test
pop
pushw
dec
arpl
mul
imul
iret
mov
call
mov
cmp
retf
mov
add
or
adc
mov
in
jne
mov
add
sbb
ret
mov
(bad)
sub
shr
add
jnp
cmps
out
fild
xor
mov
aad
sub
xlat
imul
arpl
jnp
fs
mov
jns
mov
xor
jge
cli
push
mov
scas
(bad)
inc
frstor
hlt
mov
jbe
loopne
leave
stos
imul
add
aad
(bad)
mov
jnp
jb
retf
ss
addr16
test
sub
aas
cmps
rcr
es
add
ror
mov
jns
call
push
or
outs
rol
jae
mov
rcl
call
adc
stos
jmp
shr
outs
xchg
pop
fld
addr16
test
daa
aam
add
xchg
push
lahf
mov
cmp
ins
les
xor
adc
xchg
xchg
loopne
sub
fild
mov
int3
jb
mov
adc
push
in
loope
adc
mov
rcl
mov
repnz
(bad)
inc
ret
mov
sbb
iret
rcr
mov
idiv
retf
pop
adc
cmp
sti
xor
sbb
lock
loopne
xchg
xchg
sub
not
mov
inc
cmp
add
mov
push
arpl
push
lea
aaa
sbb
sbb
test
gs
xor
jle
cwde
mov
out
hlt
jge
pop
jge
pop
cwde
movs
jb
add
mov
sbb
ss
movs
imul
add
sahf
sub
sub
dec
pop
push
aad
inc
sub
push
icebp
mov
push
inc
mov
pop
push
aaa
(bad)
loopne
stos
test
setae
stos
pop
jno
mov
mov
lock
xchg
dec
dec
sar
outs
sub
jle
ret
xchg
js
stos
outs
xchg
mov
xchg
xor
xchg
stos
mov
fs
inc
iret
and
adc
in
outs
loope
fdivr
jno
xor
test
mov
ret
loopne
fldcw
or
inc
pusha
inc
jns
mov
repz
mov
xchg
or
int3
and
lock
xor
(bad)
mov
mov
sub
and
lods
jl
jae
pop
pop
fdiv
mov
call
push
mov
call
and
pusha
adc
sbb
cmp
(bad)
add
and
cmp
retf
into
lahf
jmp
mov
shl
sbb
add
rcl
mov
push
dec
lea
mov
cmc
setae
xor
shr
pop
dec
pop
dec
lds
popa
mov
xchg
pop
xor
repnz
xlat
fs
or
aad
lock
push
popa
mov
cmp
loopne
sub
call
cmps
push
mov
mov
jp
iret
mov
fs
pop
jnp
fsub
pop
popf
xor
xchg
xor
aad
pop
pushf
mov
loop
in
addr16
dec
mov
rcl
mov
enter
idiv
or
jo
es
inc
jecxz
xchg
jmp
enter
mov
(bad)
mov
mov
mov
xchg
out
cmps
imul
cmp
mov
shr
in
cs
push
jp
(bad)
int
pop
shl
imul
push
jo
or
fs
add
shl
add
mov
sbb
pop
imul
xor
ds
push
mov
mov
or
cmp
inc
dec
push
sbb
mov
mov
retf
add
idiv
mov
inc
aam
push
stos
aad
pushf
pop
popf
xlat
mov
jge
mov
cmp
dec
fld
fwait
movs
xor
push
push
push
pushf
loop
and
adc
fld
mov
mov
ins
out
clc
cmp
fbld
mov
cmp
aaa
mov
mov
mov
test
pop
mov
pop
pop
mov
js
or
(bad)
xor
outs
in
dec
jp
fld
fwait
mov
dec
add
push
xchg
mov
push
sar
into
xchg
jae
mov
lahf
mov
rol
and
adc
sti
hlt
mov
pop
test
ds
xchg
dec
(bad)
pop
call
dec
sti
ins
pop
mov
add
imul
push
fst
outs
ficomp
jnp
je
add
(bad)
mov
mov
clc
adc
scas
mov
jb
call
daa
(bad)
fnstenv
pop
addr16
push
dec
out
adc
outs
or
fild
mov
das
jp
mov
std
cli
pusha
arpl
mov
sub
js
popf
sub
mov
test
sub
in
aas
pushf
or
push
in
inc
xor
retf
ins
loopne
pop
pop
aam
arpl
retf
push
jmp
outs
pop
and
aad
lahf
adc
pushf
add
sub
cmp
rcr
or
jno
jg
and
pop
test
mov
fidiv
jecxz
jbe
sub
(bad)
push
xor
cmc
pop
xchg
or
cmc
js
mov
stos
mov
into
xor
stos
jl
dec
jp
out
add
sahf
je
cmp
xor
mov
cs
addr16
imul
xor
clc
adc
or
gs
rcr
dec
pop
bound
in
mov
not
add
jmp
jecxz
in
jg
out
sub
adc
aaa
repz
dec
stos
xor
mov
gs
dec
xchg
ror
dec
pop
pop
fs
xor
mov
movs
es
cli
repz
adc
rol
jp
std
inc
inc
jmp
sbb
call
pop
(bad)
cmp
out
push
mov
xchg
pop
adc
out
and
je
movs
ja
outs
pop
and
cmp
stc
mov
mov
push
cmp
pop
sub
jmp
repz
icebp
outs
push
imul
cmp
push
mov
loop
shr
mov
inc
cmp
frstor
xor
jbe
fwait
addr16
xchg
and
pop
sub
test
mov
arpl
mov
mov
hlt
push
(bad)
fimul
cli
into
inc
inc
leave
and
lock
mov
movs
sbb
xchg
adc
mov
(bad)
loop
push
daa
sub
int3
push
sub
fild
frstor
and
xor
je
cdq
jns
jle
sbb
mov
xchg
mov
xchg
dec
xchg
xchg
lods
push
adc
jno
add
mov
push
movs
ja
push
div
inc
out
fiadd
cmc
push
sar
sub
mov
lahf
mov
xor
outs
mov
mov
pop
shl
jb
sar
outs
mov
adc
gs
cmp
lds
jp
pop
jmp
inc
xchg
mov
mov
mov
and
adc
adc
mov
bound
nop
mov
jl
mov
pop
inc
addr16
or
xchg
std
xchg
aas
push
cmc
mov
jp
sub
push
pop
sbb
pop
(bad)
cmp
inc
lahf
pop
and
mov
xor
pop
and
and
cwde
mov
loopne
dec
jl
mov
jecxz
ror
or
retf
mov
ins
sbb
dec
test
inc
sahf
arpl
imul
(bad)
cdq
mov
jmp
imul
xchg
dec
(bad)
cmc
enter
lock
cmp
sbb
or
sbb
sti
(bad)
int
xchg
icebp
xchg
and
inc
or
daa
loop
dec
jmp
adc
lods
adc
push
xor
rcr
movs
neg
add
out
lods
and
xchg
lahf
jp
cmps
mov
imul
cmp
adc
dec
lods
adc
sub
cmp
lds
inc
stos
add
cmps
fadd
pop
jo
sbb
push
std
in
lods
dec
xchg
pop
retf
(bad)
push
or
outs
push
xor
xor
mov
mov
les
outs
jecxz
retf
or
das
loopne
daa
mov
push
int3
xor
push
icebp
loope
lods
and
fisub
xchg
adc
cdq
iret
hlt
push
mov
jmp
ss
cmps
jns
push
mov
das
sub
aam
fisttp
or
push
cmp
repnz
sub
mov
cmps
sub
push
icebp
add
push
enter
lock
fs
xlat
pop
and
jmp
pop
call
leave
xchg
mov
aad
call
jmp
and
call
jp
xchg
sub
loope
das
mov
push
pop
pop
push
sbb
sub
das
dec
out
add
sbb
fsub
sub
sahf
dec
xchg
xor
data16
add
inc
movs
loop
pop
out
inc
retf
div
mov
jo
arpl
stos
xchg
and
je
popf
in
arpl
adc
xor
jmp
sti
sub
jmp
arpl
sbb
cmp
lods
pop
and
mov
xchg
dec
add
sbb
sub
mov
imul
sbb
pushf
mov
in
aas
mov
in
pop
shl
shr
pop
sar
mul
jecxz
add
mov
jle
mov
pop
cmp
movs
sbb
repz
movs
pop
nop
scas
arpl
sub
fidivr
inc
sub
xchg
outs
js
fmul
sbb
xor
es
dec
stos
jno
jge
pop
stc
add
data16
mov
outs
mov
repz
xlat
ds
xor
or
mov
lods
push
jo
pop
jbe
sub
pop
pop
sub
dec
push
sub
test
sahf
int
pop
aas
aam
jp
push
jns
add
xchg
push
jp
in
mov
dec
jne
sub
outs
sub
gs
popf
push
add
add
mov
mov
out
xchg
out
loop
stos
lods
in
mov
mov
loop
adc
xor
(bad)
pushf
aas
data16
ins
sub
mov
in
js
mov
jno
jmp
or
mov
retf
shl
(bad)
mov
xor
or
int
inc
mov
push
mov
add
inc
lods
jns
dec
cmps
sti
leave
push
in
mov
test
stos
mov
mov
mov
adc
sar
stos
int3
push
ror
outs
adc
push
pushf
mov
mov
ds
mov
push
movs
repz
and
icebp
adc
adc
xor
xor
sbb
mov
bnd
pop
cwde
into
dec
addr16
pop
fsub
jbe
clc
xchg
pop
enter
(bad)
pop
push
or
pop
mov
and
std
ins
test
pop
int3
or
sub
xchg
aad
(bad)
cmp
jmp
retf
push
je
push
sub
pop
cmp
test
stc
sar
aam
and
fild
jmp
in
int3
mov
pop
mov
mov
cdq
shl
mov
mov
mov
add
cs
lods
retf
imul
cmps
xor
fwait
sub
jne
add
add
dec
jp
or
les
inc
cdq
ins
dec
jp
(bad)
shl
mov
stos
dec
jecxz
adc
mov
clc
js
xchg
cli
pop
jecxz
rcl
cmp
(bad)
fwait
xchg
inc
lahf
push
sahf
ss
mov
pop
add
xchg
jmp
ficom
cli
fs
dec
fidiv
mov
fnstcw
and
mov
xchg
fs
jmp
jne
mov
inc
iret
jp
bound
bound
jae
stos
in
add
xor
mov
lahf
(bad)
mov
fldcw
inc
fistp
cmp
movs
sub
push
xchg
xor
mov
push
in
jb
dec
sbb
push
out
cwde
add
loop
test
sub
test
push
sbb
imul
sahf
sahf
sub
imul
das
ss
jge
mov
cs
mov
adc
inc
xor
xlat
mov
mov
mov
stos
clc
pop
bound
mov
(bad)
es
pop
lahf
call
or
(bad)
cmc
fisubr
loopne
clc
adc
inc
or
ins
push
push
mov
and
sub
pushf
and
popa
mov
mov
push
cdq
bound
lahf
mov
aad
retf
sbb
pop
shr
jmp
aas
call
inc
xchg
icebp
pusha
in
push
sub
ja
inc
push
mov
sub
xchg
or
xchg
mov
pushf
xchg
out
jne
push
pop
dec
mov
xchg
dec
xchg
hlt
daa
imul
inc
add
jb
cmp
cwde
or
fidiv
push
dec
in
mov
add
or
sbb
cmps
xlat
cmp
push
sbb
jg
pusha
repz
daa
adc
push
cmp
sbb
stos
push
xchg
pushf
mov
mov
sti
imul
jo
(bad)
(bad)
movs
out
(bad)
add
mov
popf
add
stos
jle
(bad)
aaa
pusha
bound
mov
push
sub
pop
and
loop
push
sbb
add
jno
add
outs
movs
xor
mov
cmp
jmp
out
mov
inc
fcmovnu
mov
push
gs
test
ins
mov
aad
fnstcw
fs
adc
test
aaa
int3
inc
ins
std
mov
pusha
jb
test
adc
aad
in
mov
and
dec
cmps
ins
xchg
(bad)
leave
stos
ss
sar
mov
sahf
add
fist
test
clc
or
pop
adc
fisub
mov
and
sub
cs
sub
push
sub
jno
out
push
sbb
ficomp
ficom
inc
lods
add
dec
pop
jl
xchg
dec
push
repz
add
pop
out
imul
xchg
scas
or
mov
jecxz
cmp
xchg
sar
and
adc
gs
fstp
dec
ins
fisttp
cld
xchg
xor
or
js
cld
add
add
jns
mov
pop
jmp
xchg
aad
dec
ds
ins
icebp
ins
mov
xor
sahf
lock
rcl
dec
fsub
fadd
mov
jb
fidiv
sub
jno
aaa
sbb
fisub
into
xlat
xchg
pop
mov
fcomp
ds
push
es
test
cmp
cmp
inc
into
fild
das
mov
pop
jp
jae
fbld
push
adc
push
sbb
xchg
dec
ret
pop
jno
push
mov
mov
test
not
cdq
jo
(bad)
shl
or
(bad)
adc
rol
mov
lahf
push
xchg
or
repnz
lahf
jbe
pop
inc
mov
rcl
xchg
sub
inc
mov
mov
mov
lahf
xchg
jg
ins
in
xchg
xor
cmps
adc
cmp
int3
xchg
push
mov
sbb
cmp
mov
call
or
xchg
test
dec
imul
sbb
inc
iret
dec
inc
or
leave
xor
lock
or
int3
xchg
imul
imul
adc
pop
enter
pop
jno
adc
mov
neg
cdq
dec
push
jne
movs
(bad)
out
pop
cli
into
imul
retf
stos
inc
push
aad
xor
jge
dec
jae
(bad)
lods
sbb
cli
xchg
icebp
and
daa
mov
jns
or
fs
imul
out
mov
clc
mov
sub
fs
sbb
leave
mov
xlat
fimul
sahf
ins
in
xor
retf
cmps
xchg
adc
and
inc
scas
dec
inc
std
repnz
mov
mov
mov
fidivr
ret
or
pop
sub
enter
je
inc
cdq
adc
xor
mov
add
sbb
mov
cmc
aad
test
and
scas
dec
out
or
jno
mov
imul
dec
mov
jno
shl
aas
jbe
and
push
mov
sbb
or
(bad)
mov
aad
(bad)
not
jne
nop
push
xor
inc
mov
jmp
cmps
mov
mov
pop
push
push
(bad)
sbb
push
adc
push
and
sar
ss
push
mov
in
clc
mov
clc
cmc
mov
enter
mov
or
mov
cmp
fild
stc
mov
sbb
dec
sub
pop
adc
mov
pop
push
mov
mov
das
repnz
lds
call
mov
cmc
add
push
dec
or
add
xor
ret
dec
jns
sbb
push
(bad)
btc
xor
lea
(bad)
mov
sub
shr
movs
pop
pop
and
shl
lods
sbb
addr16
fiadd
icebp
movs
pop
arpl
jno
inc
and
popa
dec
mov
mov
inc
lahf
lock
push
sub
js
or
les
cmp
iret
lds
inc
jmp
mov
cmp
push
enter
daa
mov
sbb
lea
cdq
xchg
sub
sbb
mov
push
sub
sar
int
push
daa
bound
daa
push
stc
adc
adc
iret
data16
xchg
stos
mov
in
cs
adc
inc
push
loopne
push
daa
shr
ret
mov
repz
repnz
sar
call
sub
pop
mov
mov
pop
mov
imul
jmp
push
idiv
mov
add
jge
adc
movs
daa
xlat
jno
fdiv
or
(bad)
and
iret
mov
sti
gs
fcmovu
mov
scas
or
nop
inc
inc
and
fistp
mov
lods
push
cmp
shl
ds
stc
cli
push
inc
sub
sbb
(bad)
je
add
sub
xor
rol
jnp
clc
ins
xchg
(bad)
int3
scas
sti
add
cwde
inc
in
sbb
mov
jmp
dec
cmc
out
jne
das
mov
out
(bad)
shl
movs
mov
cmp
mov
ins
xor
adc
mov
fs
loope
hlt
pop
jo
shr
xchg
aad
xor
sub
loop
push
jne
sbb
sub
push
xchg
dec
add
jl
push
fcomp
test
fs
(bad)
movs
push
xchg
jno
jbe
pop
repz
xchg
(bad)
out
inc
and
cmps
fdivr
int3
mov
inc
push
cmp
aad
cwde
mov
(bad)
mov
lods
fdivp
jbe
cdq
dec
cmp
mov
loopne
cmps
test
sub
fimul
adc
dec
jns
mov
iret
stc
dec
dec
mov
dec
cmps
icebp
dec
ror
xor
adc
mov
dec
popa
add
dec
fsubp
rcr
arpl
or
and
push
gs
jecxz
out
fist
cmp
jecxz
xchg
icebp
outs
add
mov
sbb
jmp
into
sbb
jmp
jge
cmc
cmp
adc
imul
jge
fst
jbe
xchg
jg
fisub
lods
jecxz
aam
stos
push
(bad)
in
cld
ret
in
cmps
dec
aad
and
popa
fsubr
or
jns
lea
mov
jbe
(bad)
iret
cdq
out
aaa
scas
adc
push
sbb
shl
sub
iret
ins
cdq
xchg
or
inc
scas
imul
loope
movs
dec
push
or
lods
aas
and
pushf
adc
or
sbb
sahf
daa
retf
inc
in
into
inc
cmp
add
stos
call
add
push
jecxz
or
idiv
push
lahf
pusha
imul
mov
push
xchg
mov
mov
cmp
pop
sbb
xor
dec
xor
adc
loope
mov
or
mov
sbb
std
mov
ds
jbe
aad
pop
pusha
icebp
or
jno
pop
push
mov
pusha
retf
cld
xchg
sbb
or
sub
or
imul
fs
clc
in
adc
retf
stos
(bad)
inc
inc
push
imul
out
add
adc
jae
cmps
inc
mov
retf
into
add
inc
sub
sub
add
nop
aaa
(bad)
jmp
pop
cmps
cmps
adc
movs
leave
mov
inc
stos
add
or
cmp
pusha
(bad)
loop
out
ja
cmp
inc
aad
push
mov
ins
movs
mov
jae
and
(bad)
cmp
test
or
mov
pop
mov
cmp
repz
push
xchg
lods
(bad)
lahf
test
mov
and
xor
scas
out
sbb
in
push
xchg
mov
pop
retf
sbb
jp
rol
daa
test
xor
mov
push
repnz
adc
stos
aam
jmp
ins
sbb
popf
fld
into
add
jno
jg
shr
sub
leave
cmp
icebp
mov
sub
sbb
leave
lods
push
add
hlt
inc
jo
cmp
lar
mov
inc
cmp
jmp
fsincos
in
mov
pop
jnp
lods
and
scas
mov
mov
sbb
cs
addr16
jns
sub
and
(bad)
cmc
iret
call
cmps
jl
cmps
mov
pop
mov
cmp
sbb
xor
ins
push
xchg
fmul
ror
jmp
in
int
fdivr
ret
sbb
dec
ss
pop
adc
and
stos
loop
je
push
sub
jp
int
fcomp
jb
std
jno
jl
fdivr
int
push
jl
leave
mov
mov
lock
jp
pop
pop
push
test
test
jecxz
push
push
jge
inc
pop
mov
mov
and
aaa
xor
out
(bad)
mov
(bad)
pop
imul
je
sar
adc
mov
push
add
or
popf
rcr
nop
dec
in
jl
xchg
sub
xlat
imul
sbb
jbe
push
cmps
and
mov
xor
lds
sub
nop
jae
mov
mov
push
mov
jle
cmp
jno
cmp
and
inc
sub
mov
sbb
scas
jae
jnp
dec
mov
iret
sbb
or
inc
xor
mov
or
cmp
add
cwde
sub
cmp
fcom
jl
xchg
mov
stos
aas
mov
jecxz
js
ror
(bad)
xor
sahf
fwait
jg
js
(bad)
xor
in
nop
scas
and
or
xchg
outs
add
icebp
mov
jae
icebp
or
dec
sub
cmp
xor
inc
call
cmp
call
jl
adc
and
daa
push
in
push
repz
sub
pop
cmps
and
enter
inc
in
xor
js
push
iret
cmp
lahf
cmps
fisub
cs
in
and
outs
dec
push
jge
jmp
jge
mov
jae
jb
dec
mov
or
in
shl
loope
fs
sub
and
mov
cmc
cmc
sbb
fwait
mov
jnp
movs
xchg
push
lods
inc
inc
mov
clc
mov
xchg
jne
movs
adc
mov
sub
(bad)
mov
js
ins
jnp
dec
ret
jecxz
fidivr
mov
cld
mov
lods
movs
or
lahf
mov
jbe
test
dec
ja
cmc
push
xchg
xchg
mov
push
sahf
xchg
mov
jae
outs
push
sti
(bad)
xor
jne
jno
cmp
mov
stc
dec
fild
mov
push
outs
mov
js
cmp
jae
xor
push
sub
arpl
movs
(bad)
outs
aad
nop
or
ins
push
fnstcw
pop
cmps
mov
rcl
data16
dec
add
aaa
lahf
pop
retf
dec
rcr
push
aaa
jecxz
pusha
std
int3
mov
or
and
out
jnp
dec
test
or
xor
sti
inc
jbe
ret
out
pop
xor
mov
fdivr
ja
nop
mov
cmp
(bad)
repnz
or
push
mov
jns
cmp
dec
add
jge
stos
sub
and
inc
cmp
popf
out
mov
sbb
xchg
or
jp
mov
pop
out
out
aaa
jmp
adc
in
fdivr
fisub
dec
mov
push
loop
dec
ja
sub
mov
pop
add
aam
test
ja
fwait
cmp
dec
(bad)
sub
in
xor
stos
jmp
jo
std
icebp
xlat
push
push
jnp
inc
mov
cld
fucomi
jge
push
data16
mov
pusha
push
pusha
fstp
lods
fs
icebp
pop
mov
(bad)
jbe
mov
cld
rol
out
pop
sbb
xchg
out
push
out
or
test
sti
ficomp
mov
mov
popf
cmp
inc
sbb
outs
inc
popf
ret
sahf
dec
stos
stos
and
fs
jns
mov
retf
aad
repnz
push
(bad)
push
test
lods
xor
ja
mov
push
rcl
gs
(bad)
lahf
xchg
adc
inc
pop
fdivrp
shl
lods
je
test
popf
(bad)
jae
mov
lds
test
loop
xchg
mov
call
pop
inc
test
dec
xor
cmp
icebp
sbb
cmp
not
cmc
pop
dec
sbb
adc
loop
adc
data16
xchg
jae
mov
push
xor
mov
xchg
cmp
pop
in
mov
loopne
push
movs
dec
sub
neg
add
pop
adc
add
push
(bad)
scas
movaps
xor
js
out
imul
out
jl
ins
mov
inc
jns
movs
cld
add
inc
fwait
xchg
mov
int
popf
xchg
ins
add
fmul
dec
aam
pop
fld
stos
inc
rcl
mov
xchg
xchg
xor
fmul
rcr
jbe
ret
inc
retf
cmp
fisttp
daa
jmp
sbb
scas
and
lods
imul
sar
aad
xchg
dec
mov
fldcw
fsub
outs
sar
pop
adc
jno
sbb
mov
sar
ins
jge
sbb
and
push
pop
addr16
sub
pop
bound
pop
xor
test
push
push
xchg
sahf
push
dec
lock
int3
ret
stos
icebp
push
popa
jno
xchg
test
pop
out
mov
dec
fwait
(bad)
xlat
pop
mov
mov
int3
into
xchg
pop
sti
adc
out
clc
fidiv
loope
out
mov
push
in
pop
loope
sub
ret
repnz
jp
int
xor
imul
sbb
imul
(bad)
fistp
rcr
jecxz
or
mul
jno
das
aas
mov
test
mov
and
mov
sub
mov
mov
pop
sub
mov
outs
xor
add
jo
lock
mov
(bad)
push
mov
xchg
jge
mov
push
ins
push
and
jmp
dec
or
xor
(bad)
(bad)
repz
xor
gs
nop
jmp
xor
dec
(bad)
pop
das
into
std
adc
fsub
hlt
ja
cwde
out
pop
rol
or
or
dec
and
mov
(bad)
jno
mov
add
imul
jg
xchg
mov
pop
jo
jbe
es
pusha
mov
in
and
xor
sahf
cmp
rol
mov
adc
sub
clc
adc
inc
cmps
cli
push
sbb
call
jg
jmp
popf
mov
and
setle
cdq
sbb
clc
fwait
imul
xor
neg
mov
xadd
jno
inc
jb
push
retf
pop
loope
int
stos
fbstp
es
mov
ins
mov
les
sbb
fcmovne
sub
mov
stos
mov
and
out
ret
rcl
gs
xchg
xchg
push
xchg
in
sub
outs
mov
cmp
js
cli
clc
movs
adc
mov
push
pop
bound
test
mov
push
mov
adc
pushf
shr
cmps
cdq
mul
repz
mov
ret
cmp
loopne
mov
(bad)
into
xchg
cwde
inc
mov
push
jae
and
call
dec
sbb
sub
stos
cdq
inc
ss
daa
push
les
das
shl
xchg
sub
in
imul
pop
pusha
pop
and
add
arpl
scas
fistp
mov
sub
(bad)
jecxz
mov
int3
jbe
xchg
mov
scas
cmp
int
jmp
push
(bad)
jl
cmp
pop
movs
cwde
pop
fld
or
mov
sbb
xchg
mov
(bad)
(bad)
popa
leave
sahf
sub
mov
cmp
pop
shr
out
and
mov
xchg
mov
stos
jne
aas
retf
scas
xor
pushf
jge
sbb
push
loop
std
and
scas
cmps
cmp
sbb
cld
(bad)
hlt
mov
fs
jecxz
add
push
neg
arpl
push
jp
adc
ins
jns
add
fcom
add
repnz
cdq
cmp
dec
test
fisttp
pusha
add
mov
out
dec
lahf
push
gs
jo
xor
or
add
sahf
stos
daa
imul
sub
xchg
pop
jecxz
cmp
jecxz
dec
in
sbb
frstor
pop
jbe
mov
call
or
xor
and
fistp
dec
test
fwait
inc
(bad)
xor
xor
div
icebp
lds
add
js
bound
xchg
not
inc
popf
dec
push
add
push
call
ret
xchg
add
mov
cdq
hlt
and
sti
cmp
loopne
icebp
out
lock
frstor
ins
shld
mov
xor
xchg
clc
jmp
call
pop
test
inc
clc
js
lods
sahf
sbb
adc
or
add
xchg
enter
push
sar
enter
lds
mov
je
test
in
pop
sar
mov
jp
cwde
dec
test
xchg
sbb
(bad)
iret
jo
sbb
aad
jecxz
xlat
mov
push
dec
adc
pusha
inc
pop
and
add
int3
pushf
shl
cmc
les
inc
stc
mov
cld
jns
cld
add
pop
popa
push
xchg
js
shl
imul
dec
pop
(bad)
xchg
cdq
inc
push
(bad)
lahf
lea
mov
and
mov
ret
push
pop
sub
cmps
std
enter
fist
cwde
jbe
cmp
icebp
dec
in
cmp
sti
out
and
inc
gs
hlt
mov
mov
js
mov
adc
out
popa
lods
xchg
retf
and
out
loope
lock
add
add
sub
sub
adc
xor
jg
sbb
(bad)
(bad)
jae
mov
jno
ret
sbb
clc
push
rol
pop
in
jp
sbb
jge
mov
imul
mov
scas
mov
mov
pop
mov
push
pop
adc
gs
mov
dec
out
xchg
push
xor
(bad)
mov
(bad)
jo
adc
add
mov
loop
xor
scas
adc
(bad)
mov
in
add
jmp
push
stos
loopne
movs
xor
sar
sbb
mov
es
jmp
(bad)
xor
lods
test
inc
loope
xchg
lock
mov
pop
sti
mov
pusha
outs
std
(bad)
push
call
ret
stos
ins
seto
sbb
mov
jne
popf
jl
pusha
sbb
es
mov
add
mov
pop
retf
out
outs
lods
rol
gs
(bad)
stos
mov
lods
out
dec
xor
rcl
jbe
inc
das
sub
pop
pop
in
fwait
popa
jge
sahf
and
aas
or
add
je
mov
call
(bad)
mov
fld
sbb
cdq
mov
pop
inc
mul
ins
(bad)
ficom
enter
adc
bt
enter
xchg
pop
mov
cwde
or
sub
test
adc
bound
mov
mov
add
xlat
mov
jns
shl
jae
loop
dec
ins
pop
rol
dec
lock
jb
adc
popa
mov
orps
mov
fsub
aas
push
ret
jbe
inc
sbb
loopne
out
and
ins
pop
sbb
push
daa
fwait
lods
add
fsub
sub
adc
pop
scas
mov
scas
mov
jnp
jp
jb
ret
les
push
test
push
aam
adc
pop
xor
rcr
leave
in
adc
cmc
(bad)
inc
int
mov
test
(bad)
adc
cmp
inc
outs
je
loope
test
jno
jl
push
push
call
pop
sbb
lahf
das
hlt
and
or
or
sbb
ror
int3
ror
clts
retf
adc
movs
out
retf
loop
fwait
mov
and
in
fs
jns
pushf
add
pop
push
jns
mov
xchg
ret
aam
js
xor
sub
xchg
sti
or
int3
jg
outs
mov
sbb
in
(bad)
hlt
pop
pusha
mov
jnp
xchg
sub
xchg
lods
outs
add
adc
and
stos
inc
sbb
xor
cmps
inc
push
cmp
(bad)
pusha
bound
xor
mov
xor
inc
repz
jne
pop
mov
(bad)
jle
or
sbb
idiv
xor
mov
dec
imul
shr
sub
cdq
jl
cmps
jae
push
dec
rcl
outs
mov
cli
adc
mov
ins
outs
mov
sbb
adc
inc
fdivr
outs
into
fild
scas
fst
add
leave
in
cwde
rcl
push
and
jo
loope
shl
xor
in
sbb
and
lods
int
ds
xchg
inc
rcl
adc
pop
jmp
mov
rep
or
inc
cmp
call
cmp
(bad)
jmp
fst
sahf
out
in
add
inc
test
inc
and
and
mov
adc
mov
je
jno
push
and
sub
scas
cli
shr
cwde
mov
into
xchg
pop
pop
stos
out
movs
test
cmp
inc
daa
hlt
jle
into
(bad)
mov
das
fs
sar
fimul
lods
fs
lahf
add
xchg
arpl
pop
pop
movs
les
das
jae
push
adc
jmp
iret
cdq
xchg
mov
inc
test
(bad)
and
out
mov
data16
(bad)
lahf
mov
sbb
xor
cmp
cmp
pop
sahf
cmps
mov
push
dec
sbb
out
fcmovnb
sub
sbb
pop
jno
pop
mov
xchg
cld
(bad)
retf
add
add
add
shl
jmp
lock
xor
(bad)
rol
add
gs
jl
scas
pop
jne
add
sbb
lahf
popf
mov
je
dec
in
mov
ins
pop
jne
dec
retf
xchg
dec
les
push
jge
aad
movs
mov
and
sti
push
int3
mov
das
sub
mov
mov
ret
pop
cdq
push
out
cmp
inc
add
movs
xor
push
xchg
ins
xchg
and
xchg
and
loopne
rcr
mov
cwde
jmp
or
repz
push
jb
int
add
jl
das
jne
icebp
or
cmc
sbb
int3
int
jmp
cwde
dec
leave
sub
out
push
cwde
jl
and
mov
sbb
leave
cmps
jno
in
hlt
les
lock
mov
cwde
xchg
mov
test
add
test
scas
(bad)
jnp
jae
mov
aad
jno
jecxz
das
mov
pop
adc
jecxz
adc
mov
fcmove
retf
lahf
add
push
xor
pop
cmp
(bad)
jmp
xchg
cmp
xlat
sub
mov
pushf
not
sbb
add
add
fcmovbe
dec
xchg
mov
push
push
mov
je
outs
or
sbb
(bad)
sti
cmp
jle
ins
cmp
(bad)
repnz
ficom
call
pop
sbb
in
pop
pop
(bad)
js
movs
adc
dec
pop
inc
ds
hlt
ret
mov
daa
adc
mov
xor
test
or
in
(bad)
xor
jge
rcl
push
lock
jecxz
shl
or
dec
not
lods
cmp
shl
aas
or
pop
mov
in
dec
and
cmp
lock
sub
mov
ins
int
mov
add
mov
cld
(bad)
icebp
out
xchg
aam
sub
pop
jb
mov
hlt
dec
shl
lods
js
mov
push
push
retf
cmc
(bad)
data16
sub
push
mov
aam
sbb
cmps
xchg
outs
sbb
or
mov
std
(bad)
in
repnz
in
add
neg
xor
lods
ja
sub
sub
add
xor
sete
into
aaa
enter
fs
jbe
cwde
jge
fstp
gs
and
cmp
test
jecxz
mov
in
cmp
push
gs
adc
mov
xchg
fisttp
dec
call
rol
or
pop
cmp
int
and
jmp
aas
mov
mov
test
aas
movs
cmp
jp
sar
fwait
inc
dec
nop
loop
sub
arpl
push
ja
mov
inc
daa
or
std
jge
cwde
pushf
xor
cmps
adc
sub
jg
in
pop
pop
push
in
cli
xor
jge
lds
push
jmp
imul
repnz
test
les
ja
add
out
and
repnz
js
popa
add
push
mov
push
jmp
sbb
pusha
or
sub
aad
inc
cmps
xchg
rol
jno
jo
(bad)
adc
(bad)
js
push
frstor
loop
inc
xchg
shr
mov
enter
push
adc
test
punpcklwd
or
pusha
cvtpi2ps
cmc
test
add
gs
idiv
sbb
popa
push
inc
mov
mov
pusha
cmps
(bad)
int3
call
push
xor
fld
xor
inc
push
out
sbb
push
inc
fsub
inc
cmps
dec
sub
push
mov
pop
enter
add
and
pop
sbb
add
dec
jo
outs
push
lods
pop
(bad)
(bad)
cmp
mov
in
not
std
inc
mov
jo
or
popa
js
shl
push
fld
arpl
arpl
push
je
push
or
fdiv
ret
sbb
es
push
sub
push
or
imul
pusha
dec
out
psubb
int
push
push
or
test
xchg
sbb
jg
mov
sbb
retf
scas
adc
or
fwait
int
(bad)
cwde
jg
cmp
sbb
mov
loope
stc
pop
cmp
cmps
and
dec
xchg
jb
or
fidiv
jle
sbb
dec
push
popa
xchg
cli
cmc
pusha
movs
adc
shr
mov
xchg
and
jg
pushf
call
out
add
cmps
push
sbb
fs
dec
inc
cmp
sbb
test
xor
ds
outs
pop
pusha
adc
add
mov
inc
ds
jns
add
pusha
xchg
sbb
cmp
jb
fs
sub
cvtpi2ps
cmp
iret
xchg
push
dec
ret
scas
ins
sbb
arpl
test
inc
test
push
jb
push
mov
push
dec
lahf
ret
inc
jno
mov
push
jp
arpl
sub
popa
test
mov
fwait
cmp
xor
ds
pop
inc
lods
nop
jno
xor
scas
pop
pop
dec
pop
(bad)
mov
add
sbb
inc
loop
sub
repz
sti
mov
(bad)
leave
call
or
repz
scas
enter
cmps
mov
dec
xchg
mov
outs
pop
out
fistp
popa
int3
scas
push
xor
in
xor
jl
push
movs
push
out
jo
test
dec
addr16
mov
pop
test
adc
xlat
popa
repnz
cmp
cli
dec
shl
ds
in
pop
pop
(bad)
movs
sbb
xor
jecxz
icebp
out
aaa
repz
mov
sbb
or
int
or
test
adc
call
xchg
mov
or
bound
loopne
jae
shl
stos
ret
mov
lods
sti
sub
les
and
sbb
xchg
push
dec
leave
xor
mov
ret
mov
push
push
in
sub
dec
fwait
call
in
inc
sbb
loop
outs
mov
mov
inc
retf
mov
xchg
bound
shl
push
int
mov
sbb
stos
stc
shl
or
and
movs
mov
mov
mov
push
dec
dec
xchg
leave
xchg
sbb
jns
bound
ret
call
mov
imul
pop
mov
sub
in
pop
mov
push
mov
mov
mov
push
aas
(bad)
or
sub
adc
push
mov
mov
dec
jg
cld
and
cmp
dec
ins
hlt
mov
scas
jbe
mov
dec
xchg
dec
cmp
adc
adc
sar
or
adc
out
sbb
jae
aad
adc
mov
lods
sti
loop
out
loop
scas
das
pop
icebp
mov
punpcklwd
pop
in
ins
cmp
adc
dec
pop
push
jle
add
inc
sub
dec
scas
mov
scas
sbb
xchg
lods
jno
out
push
cmps
lods
adc
in
sbb
jp
pop
cmp
stos
mov
aas
pop
jbe
jno
in
inc
shr
or
aas
icebp
sbb
movs
call
mov
mov
jne
test
into
adc
retf
cmp
pop
jbe
cmc
adc
xor
and
iret
pop
fistp
mov
fidiv
jne
and
jno
les
out
loope
mov
inc
pop
sub
test
sbb
ins
out
mov
test
sbb
mov
shr
gs
daa
idiv
push
pop
jae
loope
xchg
fdivr
mov
out
and
aaa
or
jmp
(bad)
xchg
fmul
sbb
mov
jle
sbb
dec
jb
pop
mov
sub
bound
and
xchg
(bad)
mov
mov
inc
pminsw
push
jecxz
sub
je
xchg
and
retf
adc
stos
sbb
int3
ss
inc
add
or
mov
jmp
push
in
add
add
daa
idiv
mov
retf
mov
or
test
mov
pop
adc
int
sbb
pop
mov
inc
mov
out
pushf
push
es
dec
inc
xor
mov
push
lds
sbb
fist
sbb
icebp
jnp
or
or
je
retf
cli
jecxz
push
and
lods
scas
push
add
mov
mov
leave
addr16
jae
mov
sbb
scas
rcr
xor
cmp
adc
mov
aam
xor
sahf
(bad)
retf
xchg
(bad)
ret
(bad)
mov
fwait
xlat
mov
push
stos
sahf
push
lods
aam
xor
gs
aam
pop
shl
rol
das
iret
mov
shl
mov
push
dec
pop
popa
mov
in
scas
out
pop
outs
sbb
fcom
push
gs
sub
and
mov
inc
fiadd
adc
outs
leave
(bad)
sbb
xor
loop
call
imul
cwde
mov
in
sub
rcl
or
popa
ret
push
xchg
aam
dec
leave
mov
pop
inc
inc
xchg
jp
lahf
cdq
sub
(bad)
out
cld
sti
call
sbb
sub
mov
adc
inc
jb
and
jmp
mul
mov
push
mov
ds
into
add
and
mov
pop
adc
xor
pop
fcomp
outs
dec
mov
sbb
jge
les
sbb
sbb
push
mov
push
neg
out
or
sub
xchg
in
(bad)
mov
jle
mov
sub
adc
aam
pop
ins
adc
ror
dec
inc
xchg
xor
jb
jp
test
stos
xor
add
or
loope
push
inc
xchg
push
add
ror
cwde
and
inc
(bad)
and
cli
es
mov
push
daa
xchg
sbb
ret
les
and
int3
gs
push
inc
dec
sub
mov
mov
cld
jno
mov
test
out
push
hlt
sub
mov
sbb
adc
fdivp
jnp
iret
sub
adc
int3
adc
(bad)
pop
adc
mov
lods
mov
mov
sub
push
sbb
ds
out
xchg
inc
pop
jae
mov
sbb
lahf
(bad)
in
ja
stos
or
shl
out
adc
add
mov
mov
or
mov
outs
jnp
sar
lock
cli
or
mov
mov
xchg
jl
push
js
sub
pop
movs
dec
aad
pop
stos
(bad)
cmp
xor
sub
test
xchg
jmp
pop
push
ins
ret
dec
fwait
aad
sar
jno
push
in
nop
mov
into
pop
mov
in
dec
scas
or
xor
push
fs
mov
nop
and
inc
les
ret
or
jmp
xor
les
push
loop
xor
xor
cmp
mov
loop
enter
cmp
cld
sbb
(bad)
pop
adc
and
in
dec
fcomp
mov
movs
jg
xchg
iret
xor
cmp
mov
gs
daa
cmp
pop
movs
mov
pop
jle
jecxz
dec
mov
jb
in
pusha
sub
jl
cwde
enter
pop
js
sbb
mov
pushf
inc
xlat
mov
and
cmp
ret
pop
mov
push
int3
and
fs
push
in
xor
dec
push
xchg
(bad)
adc
les
adc
fld
dec
test
jecxz
scas
jl
mov
mov
(bad)
mov
mov
pop
jecxz
bound
pop
aam
or
lock
inc
retf
jb
out
sub
in
mov
or
sub
adc
push
cmps
xchg
icebp
xor
(bad)
les
dec
and
addr16
xor
cmp
inc
cmp
push
loopne
pop
(bad)
jg
fsin
push
add
ja
fsubr
push
jg
jg
outs
jl
leave
xchg
or
dec
sahf
movs
add
push
in
arpl
cwde
push
int
fstp
sti
(bad)
mov
cmc
cmp
inc
mov
or
cmps
inc
xor
pop
mov
mov
mov
test
sub
mov
mov
dec
daa
(bad)
push
repnz
clc
jne
fbld
int3
ja
fsubr
push
xor
jle
stos
fistp
jae
fisubr
add
sahf
and
push
pop
and
imul
(bad)
out
lahf
xor
loope
aaa
movs
enter
cmp
inc
mov
push
adc
xor
test
mov
push
in
or
fiadd
(bad)
outs
cmp
out
ins
mov
inc
repnz
cmp
out
sar
fld
out
mov
out
push
push
xor
add
adc
gs
add
cmp
push
push
push
sti
inc
ja
sbb
sub
mov
push
sub
inc
int3
add
bound
pop
jg
mov
push
jns
xchg
pop
stos
or
dec
and
sbb
repnz
jecxz
and
push
inc
jg
xchg
dec
mov
int
mov
test
and
or
sbb
or
sar
add
data16
cmp
lahf
cmp
rcl
and
xor
fimul
ins
add
add
test
ins
xchg
sbb
(bad)
jo
push
and
inc
pop
cmp
mov
xor
xchg
ficomp
dec
xchg
dec
cmp
add
repz
jp
hlt
or
ja
call
xor
in
adc
sbb
xor
mov
cdq
repnz
je
mov
(bad)
or
add
mov
adc
test
aaa
sub
mov
pop
int
leave
mov
add
test
in
cmp
mov
daa
cmp
mov
inc
daa
jmp
in
mov
xchg
add
xchg
jbe
lods
int
sbb
das
sub
imul
push
xlat
and
xor
dec
mov
les
dec
xor
aad
loope
aas
mov
mov
jecxz
out
xchg
sar
fild
sbb
test
fst
fidivr
fcom
sub
neg
sbb
push
mov
xchg
ror
pop
sbb
sti
pop
inc
mov
cwde
xchg
clc
lods
pop
inc
(bad)
retf
cli
mov
shl
(bad)
mov
add
jmp
jmp
movs
data16
popf
jmp
das
or
xchg
into
in
mov
jmp
adc
add
push
int3
cmps
xchg
mov
ret
test
ret
xchg
ret
mov
repnz
adc
and
lods
in
leave
dec
jbe
adc
jmp
pop
mov
outs
sbb
xor
ret
test
mov
and
sub
or
push
dec
div
mov
js
(bad)
push
ins
and
cmp
mov
xor
movs
xor
jne
add
cmp
inc
sbb
cmps
mov
xlat
bndldx
dec
mov
call
mov
or
(bad)
mov
sbb
int
not
mov
add
add
test
mov
sti
lahf
div
ja
dec
add
int3
fcom
mov
jne
sub
inc
xor
xor
rcr
loop
out
push
dec
repz
loope
pop
xor
dec
mul
(bad)
dec
sti
jns
xor
sub
scas
xor
push
test
dec
mov
movs
shl
imul
jg
ret
stc
pop
xchg
sub
inc
xchg
cld
mov
pusha
fmul
test
pop
loopne
nop
loop
icebp
dec
les
pop
leave
dec
pop
jmp
adc
retf
test
leave
test
or
xor
fistp
dec
jmp
outs
stc
icebp
inc
loopne
(bad)
(bad)
jg
dec
lahf
fidivr
jae
jnp
inc
or
lds
cmp
push
jle
push
test
xchg
push
sbb
outs
push
push
stc
push
jmp
test
pop
add
xor
clc
add
mov
xchg
jge
mov
add
mov
xchg
lock
push
xchg
(bad)
push
fld
fwait
addr16
push
mov
ret
xchg
dec
cwde
in
xchg
push
cwde
js
add
mov
fild
fild
push
sub
pusha
lahf
sub
cmp
xchg
and
fs
or
or
mov
pop
outs
mov
loope
jg
mov
add
rcl
shl
js
lahf
mov
fiadd
push
pop
pop
cmps
and
pop
out
mov
cld
mov
mov
test
adc
out
mov
mov
sub
addr16
in
mov
fidivr
cmps
out
mov
push
add
jmp
out
(bad)
jl
and
and
jmp
js
push
sbb
push
ds
mul
push
adc
jnp
cmc
loope
mov
(bad)
sbb
fwait
and
xor
cs
loope
add
jge
sbb
push
and
or
inc
dec
test
mov
mov
mov
in
push
ins
scas
test
ins
xor
jl
stos
in
cmp
xor
inc
sar
out
mov
data16
outs
(bad)
and
int
mov
rcl
pop
sbb
xchg
adc
jae
pop
inc
add
xor
rcl
add
popf
dec
test
or
test
std
inc
(bad)
jno
and
fistp
mov
cmp
push
aaa
or
inc
out
push
mov
or
pop
push
mov
mov
inc
ret
inc
ret
jmp
cli
test
cwde
or
les
je
test
xchg
xor
(bad)
(bad)
xchg
jl
clc
mov
int3
push
cwde
(bad)
jae
stos
ror
adc
jns
adc
jo
push
sahf
jmp
xor
imul
outs
mov
dec
and
(bad)
sti
inc
or
adc
ja
pop
adc
inc
xchg
scas
sbb
ret
(bad)
(bad)
popf
(bad)
clc
retf
push
add
pop
adc
mov
mov
mov
nop
add
gs
or
inc
mov
sti
ffreep
movs
jle
mov
and
retf
hlt
and
lds
loop
and
adc
jmp
out
pop
inc
jne
pop
cdq
daa
ret
cmp
mov
popf
jl
les
or
test
fadd
mov
js
xor
sub
mov
fmul
retf
outs
fcomp
pop
xchg
popa
js
mov
xchg
sbb
sub
cmp
push
adc
mov
hlt
push
icebp
xchg
enter
lahf
mov
pushf
shr
loope
push
xor
repz
int3
xor
mov
xor
sub
test
aad
or
fdivr
outs
cld
mov
pop
mov
sbb
test
(bad)
ins
loop
add
cld
xchg
in
sahf
push
sub
xchg
inc
shr
xor
repnz
popfw
in
cmp
push
out
adc
mov
lods
aad
dec
push
imul
cmp
mov
stc
imul
jno
dec
into
inc
xor
call
adc
movs
jg
fmulp
add
test
inc
mov
sub
mov
imul
or
push
xor
cmp
cmp
xchg
enter
cmps
cmp
dec
(bad)
pop
mov
repnz
cli
sub
pop
xor
xlat
mov
shr
and
(bad)
mov
fs
jbe
ins
mov
add
push
and
retf
push
add
pop
loopne
xor
ins
xor
inc
in
arpl
or
adc
xor
fist
std
stos
out
xchg
jne
sbb
mov
hlt
movs
jno
jne
dec
and
test
fbstp
stos
sub
add
and
xor
enter
mov
cmp
push
ret
movs
int3
xchg
xchg
push
cs
cmps
push
int
jl
push
das
mov
pop
cdq
js
jbe
xchg
outs
pop
dec
(bad)
sbb
es
ret
cmc
mov
jb
scas
addr16
pop
popf
cli
adc
push
inc
in
xchg
movs
ins
cmc
call
loopne
sbb
jno
lahf
shl
xor
cmp
or
test
dec
les
imul
push
or
rol
or
dec
push
fwait
movs
outs
mov
pop
and
and
pop
cmp
xchg
cmps
sub
or
jp
pushf
dec
cmp
dec
retf
sahf
leave
xlat
jno
lea
mov
addr16
sub
retf
mov
iret
xchg
cs
data16
push
and
cs
xor
or
jp
aas
cmp
jecxz
push
ins
pop
or
adc
idiv
or
popa
cmp
cld
movs
call
cmps
xchg
or
push
sbb
mov
add
call
repnz
std
out
jno
(bad)
call
ret
(bad)
mov
scas
pop
(bad)
data16
icebp
xor
daa
(bad)
int3
nop
shl
push
cmp
ror
test
dec
pusha
test
jp
sub
nop
test
or
xchg
push
pop
mov
hlt
or
pusha
std
push
(bad)
lods
mov
cmp
sub
out
stc
cmp
ret
(bad)
aaa
bound
cmp
stos
sahf
shl
fnstcw
add
enter
sub
xlat
sti
and
pop
call
pop
cmp
mov
les
pop
mov
cmp
std
mov
and
data16
pop
cmp
int
mov
mov
sbb
sub
idiv
and
jle
test
std
mov
cmp
mov
ds
mov
data16
aas
sub
inc
mov
mov
enter
rcl
in
jg
sahf
cmp
(bad)
leave
stos
mov
or
(bad)
into
add
and
sbb
ret
or
jmp
in
add
data16
mov
inc
test
jge
nop
xchg
dec
test
lea
inc
mov
cmc
inc
cmp
jbe
aam
stos
mov
imul
inc
nop
jl
cmc
mov
add
cmp
and
scas
xor
sbb
mov
neg
mov
inc
sub
nop
mul
scas
pop
cmps
(bad)
fstp
xchg
sbb
mov
lea
xchg
cmps
in
adc
jno
stos
jp
fsub
adc
push
fild
jmp
mov
lods
pop
and
stc
pop
outs
repz
in
adc
sbb
mov
sbb
in
fidivr
cdq
es
xor
adc
jb
lock
pop
lods
addr16
retf
and
push
inc
xor
mov
mov
mov
cmp
imul
adc
jl
cmp
in
and
ret
mov
xchg
pop
mov
sbb
mov
lock
mov
xor
add
aas
jle
xor
mov
pop
es
add
cdq
imul
jl
idiv
ret
cmp
xchg
lds
and
mov
push
lods
and
loop
push
jae
cmp
aas
(bad)
and
inc
push
(bad)
stc
add
pop
inc
push
cmp
rcl
xchg
call
xor
movs
shr
jo
mov
inc
sbb
mov
in
inc
iret
xchg
lds
xor
out
es
aam
sub
aaa
ds
pmulhw
fistp
in
fist
inc
ds
jbe
shl
(bad)
cwde
clc
sahf
add
push
sti
outs
icebp
cmp
pop
jb
adc
movs
xor
stos
push
retf
xchg
pushf
leave
hlt
inc
pop
cmp
adc
mov
inc
cdq
stos
out
jbe
jns
xchg
movs
jge
in
aam
into
pop
jmp
in
int3
stc
imul
mov
mov
mov
sbb
sbb
ret
pop
bound
jmp
shr
jmp
mov
push
xchg
pop
push
dec
push
sbb
inc
popf
inc
mov
sahf
sub
mov
mov
mov
lods
jmp
jge
cmp
not
jne
mov
cmp
popa
add
stos
fistp
lds
sti
fst
lods
popf
addr16
arpl
test
or
jmp
in
and
mov
into
ins
out
cdq
enter
mov
test
inc
xchg
fwait
ror
inc
iret
aam
imul
clc
xchg
mov
push
ds
out
dec
mov
xor
addr16
iret
and
xor
pop
push
rcr
stos
leave
daa
push
inc
or
push
stos
dec
es
mov
lahf
and
imul
add
fist
mov
cs
and
loopne
mov
pop
add
cmp
imul
push
dec
jge
test
sub
dec
sbb
inc
movs
xlat
ds
dec
or
add
jbe
cwde
dec
sub
jl
inc
test
mov
jmp
ds
imul
push
push
mov
inc
ds
mov
fwait
mov
push
add
addr16
and
aaa
jns
(bad)
mov
icebp
push
jo
ret
fwait
dec
jnp
mov
jmp
or
mov
std
mov
push
sub
ss
adc
cmp
mov
mov
repnz
call
(bad)
xor
ds
das
xchg
test
xchg
jbe
lea
add
pushf
hlt
loopne
jge
int
sub
popa
or
shr
sub
shr
fild
rcr
mov
and
sti
aad
sbb
pop
(bad)
mov
pop
mov
adc
jo
stos
xor
jp
std
ret
bnd
test
clc
dec
sub
pop
push
retf
icebp
cwde
fild
cmps
jl
out
jmp
jmp
jmp
ret
ja
sbb
sbb
inc
push
and
adc
sahf
rcl
fstp
mov
add
repnz
sbb
mov
adc
(bad)
(bad)
cmovae
movs
pop
jge
jl
xchg
imul
(bad)
gs
sbb
dec
cmp
or
adc
or
sub
fisub
cmp
or
stc
xchg
dec
aaa
and
jns
leave
jo
jae
xchg
sbb
mov
js
cmp
stos
ret
jne
mov
jg
rol
out
sub
ficomp
in
dec
mov
cmc
out
pop
dec
shl
outs
adc
push
jns
mov
cli
pop
push
movs
repz
mov
fst
cmp
(bad)
in
mov
cmc
jno
(bad)
ins
dec
push
add
(bad)
jle
push
into
repnz
movs
add
adc
jge
sub
ins
jno
addr16
(bad)
pop
sub
xlat
sbb
ret
retf
push
xchg
fdivr
jecxz
xchg
mov
xchg
(bad)
pusha
int
inc
popa
repnz
inc
sti
clc
fwait
push
leave
sub
movs
sub
pusha
repz
(bad)
loop
cmps
cmp
adc
dec
cld
lods
test
retf
xor
add
mov
mov
retf
nop
sbb
push
sbb
sub
jns
mov
(bad)
adc
cmps
push
sub
stos
xchg
ins
not
int3
in
mov
fistp
fidivr
stos
sahf
mov
xlat
shl
or
adc
mov
call
stc
jo
and
mov
adc
inc
aam
mov
xchg
mov
les
cmp
add
in
outs
or
adc
xor
(bad)
ret
sub
rcl
adc
mov
imul
cmp
in
out
pop
xchg
push
imul
lds
loopne
and
cmp
rcl
mov
repz
in
sbb
fstp
addr16
outs
or
js
ret
mov
push
rol
and
jo
fmul
inc
out
(bad)
cmc
(bad)
sbb
pop
retf
inc
cli
push
adc
sbb
pop
es
push
push
jae
jge
(bad)
pop
mov
arpl
popa
loop
test
neg
dec
inc
pop
lods
dec
jl
inc
into
cmp
sahf
in
inc
xchg
cdq
stos
xor
mov
pop
mov
xchg
in
arpl
pop
rcr
pop
lods
pop
mov
or
idiv
mov
jmp
movs
add
stc
jmp
pop
pop
cwde
mov
test
or
(bad)
es
scas
push
sub
jmp
xchg
cmp
xchg
cmp
or
push
dec
push
outs
and
add
xor
sbb
pop
loop
arpl
in
or
inc
inc
lea
xchg
push
mov
out
sbb
and
cmp
mov
mov
adc
div
sbb
push
call
dec
inc
fstp
lds
mov
inc
xor
pop
cmps
div
and
xchg
(bad)
sbb
sub
dec
pop
in
imul
scas
sub
xor
enter
dec
push
imul
int
cwde
inc
sbb
and
(bad)
jb
repnz
mov
ja
add
inc
push
je
cmp
dec
enter
pushf
fimul
(bad)
sbb
arpl
dec
push
in
jmp
jb
out
(bad)
mov
(bad)
sahf
jmp
fstp
push
out
mov
cmp
mov
dec
push
push
or
loope
and
push
cmps
out
pop
push
setne
sahf
addr16
repz
dec
ss
sar
pop
inc
sti
cmp
test
sub
arpl
fisubr
cmp
fisubr
inc
fwait
inc
sbb
imul
jmp
pop
imul
ret
retf
sbb
dec
adc
(bad)
loop
ret
sbb
jne
mov
sub
cmc
xor
jle
mov
ds
xchg
push
push
lahf
lahf
pop
jp
es
iret
mov
(bad)
popf
(bad)
pop
rcr
(bad)
imul
test
dec
mov
add
(bad)
push
(bad)
push
cmp
jle
cmp
sub
push
xor
sub
stc
out
pusha
xchg
daa
outs
or
pop
push
xchg
mov
ds
pop
and
adc
popa
mov
rcr
idiv
mov
ins
inc
test
jae
shr
fdivr
or
cmp
in
(bad)
neg
dec
scas
out
nop
xchg
xchg
adc
sar
jbe
dec
cmps
jae
imul
fstp
jae
push
xor
ret
push
pop
add
stc
dec
retf
or
movs
dec
jmp
dec
(bad)
repnz
movs
and
lock
jo
fiadd
pop
vpmacssww
mov
inc
xor
(bad)
jl
xchg
pop
icebp
dec
adc
pop
sub
in
cmp
or
ja
inc
inc
repnz
in
xchg
xchg
int3
xchg
dec
xchg
lods
xchg
scas
mov
jmp
sbb
mov
stos
inc
adc
push
lds
loopne
in
enter
enter
cdq
not
xchg
jnp
sbb
dec
loop
sub
cmp
out
pop
adc
call
cli
inc
das
push
gs
pop
mov
fdivr
scas
or
mov
mov
add
int
jne
dec
dec
pop
in
ds
inc
xchg
jno
not
dec
mov
dec
test
movs
retf
jecxz
test
and
(bad)
adc
lock
add
cmp
popa
dec
inc
enter
mov
mov
cli
stc
xor
fisubr
stos
outs
sbb
dec
add
sar
add
adc
rol
or
repz
pop
pop
(bad)
xor
mov
sub
and
cli
test
call
xchg
cmps
daa
inc
inc
add
fbld
pusha
stos
retf
popa
pop
cmp
mov
mov
mov
lock
iret
sub
xor
in
mov
(bad)
pop
and
scas
imul
jb
push
dec
jne
aam
sar
sbb
inc
cmp
xor
mov
xor
jg
sbb
sbb
hlt
mov
mov
jae
dec
and
add
scas
(bad)
frstor
ficom
(bad)
rcl
xlat
pop
pop
ja
dec
cmc
xchg
jno
cmp
xor
ins
add
adc
mov
and
into
fimul
and
pop
jmp
fstp
imul
adc
sbb
inc
(bad)
xchg
(bad)
popf
ret
int
or
(bad)
mov
jecxz
dec
mov
inc
addr16
dec
ins
sbb
arpl
test
int
test
sahf
push
pushf
dec
ret
cmp
(bad)
mov
xchg
mov
fsub
mov
aad
sbb
cmp
hlt
xor
adc
cld
fnstenv
adc
shl
sbb
sub
xchg
je
(bad)
dec
cmp
icebp
mov
ss
test
xlat
push
jg
mov
mov
pop
jmp
cs
pop
ins
dec
xchg
aad
xchg
inc
mov
movs
add
xor
cs
sbb
pop
iret
nop
dec
(bad)
cmps
bnd
(bad)
fmul
ud0
repz
inc
and
mov
(bad)
out
mov
dec
inc
jb
jnp
idiv
xor
iret
lahf
mov
cmc
or
mov
cmp
rol
sbb
ret
in
mov
arpl
or
nop
and
sub
and
fs
inc
repz
pop
sbb
mov
call
mov
pop
ins
cs
shl
jle
(bad)
adc
jp
cwde
push
lods
xchg
cmps
ret
xlat
pop
addr16
or
std
es
mov
ds
add
push
cmp
lods
popf
push
jae
not
(bad)
bnd
mov
jg
fbld
aas
repnz
dec
inc
aas
sar
push
sahf
push
xlat
pop
fidivr
xor
outs
mov
call
push
fnstcw
xor
xor
test
lock
rol
out
int3
pop
xchg
repz
jg
jo
test
xor
fsub
adc
fdivr
push
int
inc
inc
sub
loop
mov
into
mov
hlt
rol
inc
push
add
adc
mov
push
shr
add
sbb
int3
popf
cld
and
xchg
addr16
(bad)
es
(bad)
cwde
popa
sbb
(bad)
aam
in
sbb
scas
cmp
adc
jae
aaa
and
test
leave
add
push
sub
adc
push
leave
nop
in
movs
arpl
loope
mov
bound
fcom
mov
cmp
dec
call
jbe
loope
push
push
out
push
outs
mov
movs
(bad)
xor
sbb
rcl
adc
popf
lock
sub
popa
xchg
into
rol
cmc
jb
add
pop
push
jg
fiadd
pop
aaa
daa
and
add
adc
out
mov
jecxz
enter
shr
pop
cmp
or
adc
lds
in
sahf
out
jmp
in
retf
retf
mov
test
aaa
test
dec
(bad)
jp
jno
push
mov
hlt
bound
sub
jae
xlat
cld
out
jmp
movs
dec
xor
movs
mov
pop
adc
aaa
or
retf
push
mov
mov
xor
pushf
mov
int3
pop
out
xor
push
stos
lds
test
shr
or
clc
or
sub
cli
pop
stc
sub
xchg
ret
movs
(bad)
or
push
fsub
xor
xchg
cmp
push
test
push
shl
xor
push
imul
pop
adc
xchg
sbb
or
cli
loop
cmp
sub
outs
das
cmp
sbb
mov
stos
mov
test
jno
test
pop
xchg
dec
test
mov
(bad)
pushf
add
or
lock
in
lahf
fild
sub
outs
sbb
ror
push
ror
test
loopne
fcmove
fisubr
cmp
mov
push
popa
xchg
and
push
repz
idiv
aas
xor
in
dec
js
out
aas
adc
je
inc
test
lahf
fidivr
ret
imul
rol
mov
jg
fwait
lds
imul
xchg
cmp
pusha
push
xor
or
mov
cmps
ret
adc
loopne
mov
cmp
sub
xor
lods
inc
jo
into
inc
pop
xor
into
pop
and
jl
or
xchg
shl
hlt
sbb
mov
mov
stos
xchg
test
imul
xchg
cwde
nop
test
cmp
add
inc
push
jae
sbb
mov
pop
dec
sti
sar
mov
mov
dec
rcl
imul
out
xchg
jg
mov
pushf
mov
cmovle
hlt
dec
xlat
aad
das
adc
ins
mov
mov
pop
sub
test
retf
mov
inc
sti
cmp
and
push
stc
bound
or
cmp
sbb
mov
dec
retf
lock
adc
ds
pop
sub
cmp
cmp
xor
jmp
std
jmp
fild
inc
sbb
xchg
dec
(bad)
std
add
out
stos
(bad)
dec
dec
add
add
push
outs
fwait
sub
(bad)
cmc
and
inc
(bad)
mov
out
push
scas
cwde
xor
ret
ja
jne
mov
(bad)
(bad)
in
gs
ins
pop
xchg
sub
shl
mov
inc
out
mov
sub
cmps
mov
mov
dec
pop
fstp
push
iret
cdq
daa
and
and
movs
imul
sbb
jge
ret
(bad)
js
in
aas
jo
cmc
(bad)
lahf
mov
test
jnp
mov
lahf
idiv
ins
fwait
push
add
imul
push
lods
mov
cmc
mov
call
cpuid
sub
fwait
fwait
xor
mov
inc
mov
cmp
cmp
fcomp
int3
int3
mov
iret
mov
cmp
fwait
in
popf
pop
in
enter
call
cdq
lock
test
mov
mov
jecxz
xchg
out
arpl
mov
cs
ds
lds
leave
out
leave
call
inc
dec
arpl
sub
mov
jl
or
sar
mov
or
fadd
in
das
in
cwde
into
retf
das
les
push
loope
mov
jl
(bad)
mov
jg
test
xchg
push
call
xchg
push
mov
rcr
jle
fiadd
inc
add
jne
lock
adc
pop
and
jne
(bad)
in
push
and
jo
inc
(bad)
aam
and
mov
movs
aaa
xchg
cli
push
mov
jge
jg
pop
adc
xchg
xchg
mov
sub
adc
sub
test
pop
sbb
ins
call
ss
outs
or
adc
jle
xchg
arpl
mov
inc
call
jb
je
push
pop
les
scas
xchg
and
xchg
loopne
cld
out
pop
(bad)
xlat
mov
fidiv
enter
mov
call
push
inc
inc
imul
in
pop
jmp
or
and
add
and
xchg
jle
and
inc
mov
bnd
sahf
xchg
inc
rcl
jp
and
or
in
xchg
add
add
lahf
or
sub
xchg
ficomp
movs
pop
fcmovu
dec
inc
dec
push
xchg
pop
push
jg
jecxz
jo
dec
loopne
rcl
add
mov
sti
push
loope
in
aaa
cmp
or
outs
popa
stos
sub
daa
pop
push
jp
cmp
retf
xchg
inc
int
jmp
xor
xlat
sub
outs
jecxz
add
iret
or
das
scas
pusha
out
pop
pop
cmps
sbb
(bad)
pusha
in
pop
icebp
ins
xchg
and
or
jae
js
xchg
dec
or
std
xor
mov
mov
or
xor
or
jecxz
cmp
pop
adc
pop
(bad)
sahf
sbb
add
mov
out
retf
dec
xchg
xor
xchg
add
sub
aaa
cmc
loopne
xor
push
out
jecxz
jmp
les
icebp
fwait
sbb
dec
(bad)
test
jl
push
(bad)
test
call
sub
mov
mov
dec
xor
pop
xor
out
add
mov
jns
pop
retf
data16
test
jae
mov
loopne
xor
lea
or
pop
add
(bad)
jg
fst
xlat
dec
dec
pop
gs
xchg
push
sbb
pop
and
inc
aas
(bad)
sub
(bad)
jnp
add
mov
fild
hlt
and
shl
push
xor
ret
or
mov
call
repz
int
mov
retf
hlt
iret
xchg
rcl
popf
retf
fstp
cmp
fcmove
and
cwde
mov
ss
aad
sub
fdiv
jmp
xor
fwait
mov
ins
xor
test
enter
(bad)
jp
sti
xchg
stos
pop
cmps
mov
and
push
mov
adc
add
dec
mov
jo
addr16
ins
or
out
dec
sub
add
xor
xchg
out
cmc
sub
mov
stos
hlt
push
int3
xchg
jno
and
mov
daa
je
or
(bad)
fnstenv
movs
outs
xchg
add
mov
sbb
das
push
lock
movs
xor
inc
adc
mov
js
repnz
mov
call
jge
sub
xor
xor
shr
hlt
test
sti
bound
push
je
je
ss
sub
enter
dec
pushf
mov
sbb
dec
scas
cmps
in
adc
mov
add
dec
nop
fstp
sub
aam
cwde
sub
jg
dec
pop
test
xchg
xchg
pop
into
loope
jno
ss
sub
arpl
popf
in
jne
sub
add
arpl
sbb
rcr
push
je
ficomp
cmps
aas
mov
loopne
lods
dec
push
xchg
fwait
scas
mov
cmp
pop
add
dec
dec
pop
daa
mov
movs
hlt
test
or
dec
in
mov
cmp
dec
xchg
jle
dec
daa
pusha
pushf
or
fstp
inc
imul
dec
mov
call
rol
ret
pop
shl
or
das
popa
dec
shl
pop
ja
cmove
mov
sub
stc
loop
cmp
ins
pop
ja
cmc
cmp
fisttp
mov
dec
xchg
dec
pop
mov
cmp
dec
mov
add
mov
xor
clc
stc
enter
cs
retf
dec
stc
dec
jbe
push
push
or
cmp
xor
fcom
arpl
sahf
cs
push
mov
imul
and
push
jne
pop
mov
jne
mov
add
xchg
jle
ret
adc
mov
dec
test
jno
mov
dec
sbb
xchg
dec
xlat
test
xlat
dec
jns
scas
ret
js
jmp
rcr
aaa
imul
imul
clc
mov
cmp
sub
lods
out
cdq
scas
adc
xor
mov
imul
xchg
jge
mov
mov
pop
loop
mov
sti
dec
pop
xchg
jo
aaa
jg
call
fisubr
jge
movs
sbb
fcom
mov
push
cmp
and
inc
cs
icebp
js
xor
dec
inc
xchg
cld
and
xor
loop
lds
jae
and
cmp
cmc
adc
js
es
(bad)
mov
push
jle
xchg
or
dec
iret
push
ja
hlt
popa
scas
test
movs
mov
bound
xor
or
jns
jle
call
lea
cdq
sbb
cs
dec
jbe
jge
and
or
sbb
cmp
or
imul
popa
sub
xchg
push
rcl
je
inc
loop
fnstcw
pop
and
jae
int3
loope
js
sbb
xor
cwde
mov
dec
jnp
dec
mov
mov
pushf
mov
leave
adc
adc
je
adc
sub
test
push
or
shr
daa
jno
test
dec
sahf
call
cmc
mov
mov
pusha
push
dec
push
inc
cmp
stos
test
cmp
and
inc
fisubr
adc
mov
aam
ins
addr16
mov
push
(bad)
cmps
ins
dec
div
adc
adc
bnd
add
pop
dec
test
sub
call
pushf
mov
ret
cmps
les
add
xor
push
ret
jbe
push
loop
int
push
loopne
stos
retf
shl
imul
push
ret
jno
dec
daa
call
jmp
pop
push
stos
sbb
pusha
in
call
mov
push
ins
mov
sub
sub
dec
sbb
jbe
ins
(bad)
loop
sbb
dec
rcr
mov
xchg
mov
mov
sub
push
add
inc
fld
std
xchg
mov
les
xor
sub
mov
add
ins
outs
test
popf
sub
pop
imul
lods
shl
cdq
xchg
xor
inc
repz
loop
bswap
scas
jl
inc
push
and
imul
inc
jge
out
(bad)
pusha
dec
fmul
cmp
and
mov
inc
icebp
inc
jp
popa
addr16
scas
call
xor
inc
pop
daa
test
aas
push
int3
out
xchg
popa
sub
push
int
push
sbb
pushf
cmc
movs
push
mov
repnz
mov
add
in
lea
popf
or
enter
add
loop
hlt
cs
and
test
sub
aam
cdq
sub
pop
push
mov
out
mov
fwait
test
inc
or
jno
addr16
inc
in
icebp
fimul
aaa
lods
pop
add
and
inc
xor
cld
loopne
nop
test
pop
(bad)
cmp
out
push
and
or
imul
je
xor
scas
pop
push
pop
fdiv
dec
in
or
lds
packuswb
pusha
xor
out
cwde
pop
repnz
mov
push
inc
xor
pop
scas
je
inc
fistp
scas
mov
sbb
mov
sbb
into
xchg
jb
aam
in
pop
or
fld
rol
(bad)
pusha
out
dec
mov
jmp
fs
jp
test
ror
pop
(bad)
adc
cdq
fbld
scas
lods
cmp
addr16
xlat
add
mov
add
adc
fcom
adc
lods
push
out
cmp
ror
mov
mov
neg
lods
pop
add
push
dec
call
(bad)
pop
adc
scas
mov
test
(bad)
repnz
and
data16
sbb
add
and
pop
shl
scas
(bad)
ficom
es
mov
cmp
sbb
js
ret
inc
mov
xchg
adc
fild
add
push
and
push
xchg
shl
jp
pushf
jne
dec
cmp
jno
push
stc
sbb
add
push
mov
xchg
xor
xchg
pop
inc
pop
xchg
scas
jbe
fucomp
ins
cmp
or
xor
cmps
hlt
fcomp
out
pop
xchg
test
imul
scas
and
ins
inc
mov
push
push
fimul
jb
xor
fwait
pop
sbb
mov
sti
xchg
sub
jne
ins
mov
lea
popf
lea
arpl
shl
ficom
hlt
int3
clc
aam
cmp
mov
pop
sbb
dec
jno
inc
xchg
mov
cdq
inc
or
fld
push
sar
(bad)
push
mov
add
test
add
and
cmp
ret
jl
jbe
fbld
out
movs
xchg
add
leave
jecxz
test
loopne
inc
sub
in
mov
push
and
mov
(bad)
cwde
cmp
inc
rcl
pop
shr
scas
fs
ret
lock
loop
leave
and
push
add
xchg
inc
jl
push
fisub
into
lea
and
sub
bound
sar
sub
aaa
jae
fstp
aaa
sbb
mov
(bad)
push
monitorx
push
push
mov
mov
jmp
or
pop
jnp
daa
inc
(bad)
jb
in
cli
sub
fcomp
fbld
xchg
mov
ins
or
mov
sub
cs
push
xor
jo
js
push
pop
js
mov
push
push
sbb
sub
inc
pop
mov
aam
mov
mov
and
sbb
pop
outs
rol
(bad)
sub
sbb
push
ds
arpl
xchg
xor
or
stos
inc
jmp
or
into
xor
ins
mov
adc
fs
hlt
test
sahf
sub
sti
(bad)
inc
inc
pop
dec
push
mov
cmp
sbb
(bad)
mov
pop
xchg
fdiv
mov
push
jbe
loope
lock
(bad)
sub
in
xor
pusha
scas
movs
jecxz
mov
outs
mov
adc
pop
mov
shr
loopne
xlat
ins
and
add
dec
out
jno
retf
cmp
jae
dec
ins
inc
push
xchg
jmp
retf
sub
xchg
mov
mov
inc
jmp
pop
sub
inc
cdq
xchg
lods
jb
mov
shl
jne
xchg
lds
jns
fcomi
jmp
xchg
call
mov
pop
pop
(bad)
cs
enter
mov
or
hlt
retf
push
fild
mov
push
shr
out
js
pop
into
in
sbb
inc
fcomp
and
xor
sahf
fstp
mov
pop
fst
push
sub
pop
add
pop
jns
sbb
mov
push
jae
inc
xchg
push
inc
loop
(bad)
test
xor
jne
or
jo
imul
cmp
call
enter
dec
add
movs
xchg
lea
jecxz
cmps
addr16
jae
sub
add
or
aam
or
loope
mov
lods
jmp
bound
xchg
xchg
(bad)
pushf
pusha
das
push
mov
loope
int
pop
push
pop
mov
jo
test
jecxz
int
out
jge
inc
or
ret
mov
sar
mov
mov
push
cmc
fdiv
inc
ror
add
jge
add
aas
popf
xchg
loope
jns
imul
(bad)
out
and
jl
addr16
out
jp
pop
jecxz
loope
repnz
bound
push
imul
cmps
inc
cmc
jae
jne
push
lods
sub
outs
lahf
xor
out
or
mov
outs
in
xor
adc
scas
daa
lahf
xor
xchg
icebp
and
sbb
mov
fild
cmp
fisub
add
inc
xchg
add
mov
out
shl
fwait
push
aaa
je
sar
cmps
sub
pushf
ins
nop
inc
loopne
rcl
out
test
fisub
add
jno
jge
xlat
xchg
fwait
enter
add
aas
pop
fwait
or
cmp
adc
sti
shl
adc
xchg
mov
cmp
pop
jl
add
mov
fstp
ficomp
add
adc
and
icebp
(bad)
(bad)
fist
inc
mov
push
in
push
fisttp
push
sub
and
mov
mov
mov
ja
mov
ss
cmp
(bad)
cs
cmps
vphaddwd
and
cmc
iret
in
xor
mov
add
pop
test
mov
cdq
movs
test
inc
lods
sub
xchg
pop
loopne
mov
pop
stc
mov
movs
daa
test
jbe
sub
jnp
inc
jmp
push
int3
ins
push
xchg
hlt
pop
xchg
shl
sub
mov
fiadd
out
mov
test
stos
add
mov
ds
sbb
ror
adc
test
jae
fadd
mov
leave
push
push
sti
push
sbb
mov
sbb
dec
movs
mov
jbe
mov
mov
sbb
mov
in
leave
inc
dec
push
mov
or
jno
ins
or
mov
lds
push
js
cli
xchg
(bad)
inc
or
leave
(bad)
popa
inc
sbb
enter
lds
test
xlat
mov
sbb
mov
mov
(bad)
leave
mov
mov
sahf
xor
pop
arpl
sahf
aam
fst
ins
out
mov
push
push
jle
stos
mov
outs
mov
fs
je
mov
adc
push
xor
cmp
cmc
dec
stos
pop
icebp
pop
call
out
push
and
inc
addr16
je
sbb
out
lds
and
xchg
out
mov
int3
add
xchg
test
sbb
mov
mov
inc
sti
mov
fild
test
xchg
(bad)
push
les
jae
add
xor
aad
loopne
mul
ja
xchg
mov
repz
loope
pop
mov
dec
push
add
out
xor
xor
or
stos
mov
shl
aad
shr
bound
je
pop
add
(bad)
pusha
aaa
call
mov
add
iret
(bad)
mov
push
into
scas
mov
stos
loop
cmp
dec
push
pusha
mov
mov
push
sub
std
adc
push
sub
js
pop
enter
mov
mov
sbb
in
ja
lock
neg
(bad)
aas
aam
push
in
or
fcom
cmp
call
xchg
xchg
loop
push
ins
aaa
aad
sbb
icebp
fldenv
jns
mov
loop
mov
xor
push
dec
xchg
or
inc
iret
and
jnp
mov
in
xchg
mov
xor
pop
shl
push
out
cmps
mov
jb
movs
xchg
add
push
xchg
mov
sbb
or
sbb
addr16
ss
test
inc
das
jg
and
cmp
push
mov
ja
dec
test
xlat
xchg
adc
pop
and
fstp
jne
sub
in
pop
or
pop
push
mov
fcomp
mov
jecxz
cmp
adc
fist
xchg
int
imul
sub
ret
jl
cli
mov
or
repz
(bad)
sbb
es
mov
mov
xchg
data16
push
and
dec
inc
mov
std
fucomp
test
xor
jmp
js
clc
sub
add
xchg
add
jle
push
rcr
lock
movs
(bad)
out
lock
inc
pushf
dec
daa
inc
mov
lods
lea
shr
mov
in
add
jae
(bad)
retf
push
int3
xchg
mov
mov
lds
mov
adc
cmp
std
es
and
fcom
xor
push
mov
cdq
add
inc
les
imul
cwde
pop
fsub
jns
jns
inc
cld
adc
fisubr
jno
xchg
fstp
pushf
leave
add
sbb
lahf
and
rcl
lods
xchg
pushf
daa
jbe
xor
das
dec
cmp
std
xlat
mov
xor
jnp
aas
fmulp
cmp
xchg
push
xchg
out
mov
mov
push
mov
xchg
cs
xlat
jmp
and
in
mov
cwde
mov
repnz
dec
sbb
mov
stos
std
mov
repz
adc
xchg
push
fidiv
dec
add
aam
enter
mov
retf
jnp
iret
push
sbb
jnp
sbb
popf
fucomip
jge
mov
mov
imul
mov
dec
push
jne
jnp
jp
mov
js
mov
cmc
push
inc
sahf
sbb
pop
sbb
pusha
retf
xlat
dec
(bad)
mov
out
je
push
cs
adc
jns
repz
jmp
cmps
sahf
into
icebp
cmps
ret
clc
aaa
stos
mov
fldl2t
mov
or
repnz
jnp
outs
fld
and
les
sub
mov
pop
xlat
sbb
sti
aas
call
aad
cs
dec
pop
loopne
adc
pop
xchg
pusha
push
out
jl
jae
push
cmp
cli
adc
cmp
cdq
and
pusha
xchg
mov
inc
wbinvd
jp
cmps
xor
sub
jno
xchg
fs
int3
xor
xor
dec
fsub
je
xor
pop
pop
pop
stos
xor
sbb
sub
xor
(bad)
dec
mov
push
mov
adc
fsub
stc
setg
je
shr
push
int
pop
adc
ret
cdq
add
mov
sbb
fdivp
inc
xchg
fbstp
sbb
xor
cdq
sbb
push
lods
call
push
repnz
stos
mov
outs
sub
cld
sub
mov
push
mov
rol
inc
xor
xor
imul
push
add
xchg
adc
mov
fisttp
ins
add
fdivr
mov
(bad)
dec
cvtdq2ps
sahf
xchg
sar
jmp
mov
pusha
jne
jns
mov
mov
pop
out
pop
xor
out
jg
fsubr
enter
nop
adc
pop
aas
sub
sbb
mov
jecxz
das
movs
outs
lea
mov
mov
scas
call
sahf
cli
sbb
std
add
pop
imul
jmp
dec
aam
das
fsqrt
push
push
cdq
out
and
sbb
dec
scas
stos
cmp
xor
mov
mov
push
mov
dec
dec
jne
into
pop
add
and
mov
scas
mov
add
jecxz
femms
sub
std
fwait
(bad)
inc
sub
xor
and
mov
add
iret
xlat
dec
call
sub
or
cmp
gs
(bad)
ffree
imul
jmp
add
xor
adc
sbb
adc
test
es
aas
inc
cmc
sahf
in
(bad)
(bad)
rcl
aaa
(bad)
scas
popa
sbb
inc
stos
mov
xchg
(bad)
jmp
jmp
jae
sahf
sub
retf
add
in
cmp
shl
jmp
push
ret
icebp
ins
add
adc
inc
cmp
popa
mov
push
cmp
bound
cli
test
push
cmp
cld
mov
sar
jne
xchg
fadd
mov
clc
cmc
cli
jge
imul
xchg
sti
outs
push
cmp
pop
mov
dec
stc
ja
xor
test
fdiv
(bad)
mov
jbe
scas
push
sbb
fimul
ret
xchg
pop
loopne
mov
push
add
mov
cmp
aaa
pop
push
push
adc
mov
aam
sbb
adc
push
inc
mov
lds
es
dec
punpckhbw
add
xchg
(bad)
loopne
bound
jae
sbb
ret
xchg
mov
into
int
scas
push
scas
les
sahf
ret
and
dec
daa
push
mov
out
xlat
in
hlt
xchg
sbb
(bad)
fadd
push
aas
xchg
sub
mov
push
inc
ja
push
(bad)
loop
aaa
xchg
aas
loope
sub
sub
inc
lock
in
pushf
push
je
gs
pop
jo
xor
add
sub
or
stos
xchg
xlat
in
scas
mov
lock
not
mov
inc
adc
inc
mov
cmps
loopne
lock
push
pop
rep
xchg
inc
test
int
ja
jne
leave
push
(bad)
jmp
outs
sbb
jo
fidiv
mov
inc
mov
pusha
inc
xor
loope
fst
mov
in
mov
jmp
test
jbe
je
mov
pop
inc
jns
jl
mov
pusha
(bad)
add
mov
mov
pop
jae
jb
cmp
or
test
int3
mov
cs
stc
cdq
cmp
fwait
in
loop
jne
push
mov
jmp
(bad)
pusha
pop
sar
jbe
jmp
scas
adc
(bad)
out
scas
repnz
test
mov
xchg
cmp
das
stos
outs
cli
dec
push
pop
fisubr
mov
test
(bad)
in
xor
enter
out
outs
adc
push
dec
out
in
push
cmp
call
pop
lods
push
mov
gs
pop
inc
push
lock
sbb
cmp
sub
pop
pop
xchg
push
fbld
sub
cmps
shl
in
scas
mov
sahf
push
and
test
add
xlat
mov
sar
arpl
daa
inc
arpl
xchg
lahf
call
pop
xor
sub
ss
in
jecxz
or
cmp
add
push
ficomp
push
xchg
adc
add
shl
xor
jmp
mov
in
call
call
pop
mov
add
stos
addr16
dec
(bad)
popa
inc
dec
cmp
inc
xor
mov
push
aas
sbb
and
cmps
and
out
mov
sahf
imul
pop
mov
ret
call
mov
push
mov
sbb
inc
mov
push
sbb
jl
add
(bad)
and
stos
std
nop
cs
mov
retf
cwde
in
pop
xchg
out
cmp
mov
inc
call
sub
mov
bound
mov
imul
dec
ror
and
sbb
adc
shl
and
mov
jmp
pop
int3
mov
test
xchg
mov
cmps
ret
sbb
adc
dec
adc
aad
cwde
push
jp
cmps
xor
sbb
xor
or
sub
add
mov
aas
pop
dec
adc
push
out
sub
stos
(bad)
fist
inc
shr
xor
cmp
je
ret
sar
cmps
pop
adc
xchg
cmp
std
(bad)
mov
jne
add
bound
cdq
push
(bad)
or
or
sub
in
dec
pop
jb
aas
mov
hlt
pop
loop
mov
jmp
rol
nop
adc
cmp
sahf
daa
aas
jbe
ins
test
vunpcklps
pop
mov
xchg
xor
add
mov
adc
stc
adc
jnp
daa
dec
xchg
hlt
mov
das
adc
sbb
sub
mov
sahf
std
xchg
and
aas
enter
in
or
mov
rol
jge
js
bound
push
push
adc
nop
aam
rcl
nop/reserved
inc
and
rcl
in
sbb
mov
test
xor
das
leave
mov
add
and
sub
ja
dec
add
repz
sahf
mov
xor
out
dec
sub
test
int3
stos
daa
pop
movs
cmp
cmps
push
outs
and
bound
adc
and
rcl
mov
ins
sub
imul
inc
ror
sub
adc
sbb
ins
push
pop
xor
cwde
out
mov
shr
xor
xor
sub
inc
cmp
push
pusha
pop
cld
sbb
arpl
pop
ins
inc
pop
mov
inc
fmul
lea
sbb
inc
aad
call
int
(bad)
push
stc
enter
pop
or
pop
xchg
fadd
les
lock
add
dec
jne
in
xor
shr
into
std
cmp
(bad)
imul
mov
xchg
jae
cmp
add
ret
or
mov
jp
xchg
mov
push
pop
sub
push
daa
xor
jg
mov
or
ds
mov
popa
(bad)
gs
int
iret
inc
scas
jle
mov
mov
push
les
aaa
ds
push
push
pop
dec
cwde
sbb
xchg
je
out
adc
mov
test
pop
jle
cmp
(bad)
adc
adc
push
xor
xchg
adc
cmp
fiadd
ret
jmp
fwait
int3
jg
call
jmp
adc
mov
div
fdivr
push
test
push
add
mov
lds
outs
test
jge
movs
mov
push
fisub
mov
add
pop
imul
leave
clc
cmp
movs
jecxz
and
adc
mov
(bad)
mov
in
ins
mov
adc
add
int
dec
(bad)
aad
loopne
jnp
xor
or
jmp
mov
xor
sbb
ffreep
xchg
push
cmps
repnz
loope
mov
inc
in
es
mov
out
js
(bad)
into
xor
mov
dec
sti
loop
jl
xchg
push
(bad)
imul
aaa
mov
add
div
hlt
sbb
movs
xor
or
cs
loop
nop
inc
test
pop
fwait
std
push
ror
cmps
dec
jecxz
mov
xchg
mov
fadd
shr
or
ror
sbb
imul
mov
pop
and
(bad)
clc
aaa
pmaddwd
jns
adc
jecxz
ins
jb
mov
or
pop
(bad)
pop
push
imul
pop
push
jns
fwait
repnz
outs
ret
retf
sti
push
jbe
sub
jmp
out
cdq
mov
adc
stos
xchg
add
cmps
cmp
mov
sar
sub
mov
aam
ds
sub
lock
lds
loop
push
(bad)
stos
and
and
cmc
jecxz
sub
cs
dec
lock
adc
add
in
shl
outs
jne
adc
and
sbb
sbb
jge
or
into
cmps
imul
aad
ror
mov
mov
pop
push
stc
lds
ins
lds
pusha
cmps
jle
int3
sub
in
pop
fcmove
add
(bad)
cmp
mov
push
adc
ins
hlt
xchg
lahf
lahf
in
sub
pop
inc
fcomp
test
inc
xchg
push
xor
add
jbe
mov
xchg
lock
mov
(bad)
int
stc
scas
push
enter
pop
dec
jns
or
mov
xor
xchg
out
jge
aaa
test
call
pop
test
and
lea
push
adc
xor
jb
rcr
sbb
push
mov
in
mov
mov
push
call
(bad)
and
loop
inc
js
cmp
jmp
sbb
leave
mov
jmp
lahf
in
aaa
sbb
scas
cmp
daa
neg
aaa
or
mov
dec
mov
mov
cld
cmp
mov
lea
cmp
scas
data16
arpl
cmp
rcr
adc
iret
jmp
retf
std
bound
daa
inc
cli
mov
xor
es
jmp
push
sbb
push
lods
in
movs
add
pushaw
mov
bswap
jmp
movs
or
cld
fucom
lea
mov
jecxz
lods
cmp
outs
dec
add
in
and
loopne
pushf
inc
and
xchg
add
mov
sbb
fwait
xor
jmp
inc
jno
mov
iret
mov
mov
fcomp
jbe
sti
mov
clc
retf
push
movs
jmp
pop
mov
aaa
mov
add
iret
sub
sub
fidivr
shr
cmps
adc
test
pop
cli
xchg
sub
stos
(bad)
adc
les
push
repnz
out
lea
xor
scas
repnz
and
das
ret
adc
dec
inc
and
hlt
pop
lock
mov
jo
jle
and
mov
adc
cdq
or
push
xor
cmp
in
xor
sub
jge
sub
mov
add
add
pop
push
je
sti
sbb
in
je
aaa
pop
mov
sub
test
aas
sub
adc
popf
mov
clc
jnp
rcr
push
push
xchg
inc
repnz
push
xchg
in
(bad)
cmc
jge
sbb
mov
loopne
jmp
fs
pop
and
daa
jae
imul
or
inc
sti
out
xor
fwait
push
(bad)
stos
lahf
inc
mov
xor
bound
and
push
scas
sbb
int3
fsubr
popa
aad
cmps
mov
scas
mov
out
jle
adc
mov
inc
shl
and
call
add
push
adc
xchg
fs
fsubr
jecxz
imul
and
call
clc
(bad)
repz
cmp
ret
movs
mov
push
imul
je
(bad)
out
xchg
jecxz
ret
sbb
dec
cmp
sub
pop
and
pop
cmp
pop
inc
scas
dec
push
mov
cmp
fisub
adc
(bad)
pop
out
test
loop
xor
mov
sbb
aaa
test
aam
push
add
cmp
ret
inc
ss
ins
(bad)
mov
scas
push
(bad)
and
and
cmp
(bad)
xchg
fucom
aaa
shl
(bad)
cli
jmp
nop
aam
xor
lds
or
aam
out
add
and
jl
xlat
(bad)
aas
pop
(bad)
fld
xchg
stos
(bad)
lods
adc
int
jae
push
push
loop
push
movs
bound
and
push
popa
test
lock
fnstenv
scas
xor
inc
cli
test
lods
mov
adc
es
out
cmp
mul
xchg
add
test
mov
pop
and
je
into
iret
sbb
ficom
ror
call
pop
enter
lock
bound
(bad)
adc
jnp
xor
jns
ds
pop
mov
add
jge
pop
into
sbb
push
jecxz
add
mov
aas
clc
cmps
ret
mov
xchg
push
xlat
popf
shl
push
xchg
js
pop
push
rcl
fst
pop
and
loopne
fst
fs
rcr
mov
inc
imul
sub
jne
out
dec
dec
mov
sub
mov
or
cld
leave
push
jmp
dec
inc
lock
xchg
dec
dec
lds
adc
lahf
inc
pop
push
mov
sub
pop
shl
ds
int
and
cmp
sub
cmc
sbb
lea
and
sub
or
test
cs
xchg
dec
in
xlat
xor
scas
push
repnz
(bad)
shr
dec
jnp
sbb
add
adc
sbb
rol
lds
mov
addr16
mov
push
xor
inc
mov
jmp
add
and
dec
lods
ficom
(bad)
getsec
cli
scas
je
retf
xchg
dec
push
mov
sub
dec
repnz
or
gs
mov
jo
mov
and
pusha
add
inc
or
cli
fwait
mov
inc
xchg
and
adc
shr
xchg
arpl
mov
mov
mov
push
add
push
ret
ss
fst
call
(bad)
mov
dec
sub
xchg
clc
cmp
inc
loopne
addr16
push
loop
punpcklwd
jno
sbb
jl
loopne
(bad)
out
adc
mov
rcr
sahf
xchg
stc
jle
jno
dec
and
add
mov
push
push
fwait
retf
idiv
jmp
cmc
idiv
ror
add
and
(bad)
hlt
or
arpl
xor
enter
xlat
fucomip
jl
xor
iret
pop
in
scas
test
enter
push
das
test
out
jg
int3
mov
pop
add
mov
xchg
into
xor
pusha
movs
fsub
mov
movs
xchg
stos
cmp
or
xor
jnp
enter
jae
add
dec
mov
mov
ror
out
lods
dec
(bad)
xchg
aaa
add
(bad)
retf
nop
arpl
fs
cdq
leave
retf
aam
jmp
rcl
test
push
es
pop
cmp
test
jae
xchg
or
dec
mov
inc
push
mov
imul
pop
cmp
ficomp
cld
(bad)
ja
aad
xor
pop
lock
ds
mov
pop
mov
hlt
xchg
mov
sub
loope
adc
jmp
push
movs
inc
push
push
pusha
pusha
clc
push
repnz
mov
push
push
pop
loopne
fs
mov
movs
cmp
movs
arpl
cwde
mov
xor
sbb
push
dec
aad
cld
xor
not
popf
in
jnp
dec
jp
pop
icebp
add
loop
add
jo
repnz
test
test
xorps
dec
sbb
scas
xchg
mov
imul
xor
(bad)
inc
jbe
je
mov
add
stos
lea
(bad)
xor
ret
mov
cmp
lea
int
add
xlat
adc
xchg
mov
jmp
ins
movs
dec
aas
mov
and
retf
mov
je
int3
or
xor
jae
mov
(bad)
xor
mov
fwait
mov
test
ja
mov
outs
mov
aas
arpl
inc
jp
jmp
(bad)
or
popa
ret
test
pop
aas
aaa
xchg
in
xchg
(bad)
pop
mov
push
mov
outs
repnz
xchg
imul
mov
imul
call
sub
adc
cli
cld
cmp
sbb
shl
pop
sub
jmp
xchg
and
daa
jns
or
outs
shl
(bad)
mov
data16
leave
adc
shl
or
movs
xchg
dec
fstp
jecxz
xlat
jo
jo
dec
xor
xchg
pop
jo
jg
lds
cmp
push
pop
mov
pop
and
pop
retf
ins
push
aaa
call
jp
fistp
mov
sub
dec
dec
mov
push
movs
repnz
fstp
pop
hlt
pop
leave
dec
mov
inc
clc
and
sbb
out
lock
std
xor
dec
jbe
mov
jp
mov
or
mov
jg
mov
ja
leave
mov
imul
inc
and
or
pop
sub
sub
adc
cmps
dec
mov
sbb
adc
iret
inc
test
movs
mov
popf
lods
jno
lea
mov
in
or
(bad)
sar
and
fimul
(bad)
xor
dec
jns
and
dec
push
push
cmp
add
add
mov
or
rcl
sbb
or
addr16
jge
mov
test
retf
and
fiadd
push
call
pop
push
dec
out
adc
pop
(bad)
or
cli
sbb
and
push
mov
inc
xor
retf
cmp
jmp
retf
or
adc
mov
clc
out
pop
hlt
cmp
scas
test
cmps
adc
popa
pop
cwde
lods
repz
shl
sbb
mov
(bad)
pop
es
dec
or
xchg
mov
mov
mov
sub
jo
add
pop
push
test
repnz
mul
xor
mov
or
mov
icebp
fcmovne
fwait
jg
dec
adc
xor
adc
ja
daa
scas
out
cmp
test
int3
aaa
push
loope
imul
and
mul
(bad)
les
rcr
arpl
xchg
(bad)
lock
sub
int3
push
sub
pop
adc
inc
inc
leave
ins
sub
nop
les
stos
mov
add
scas
sub
jl
js
daa
call
rcl
sub
jmp
loopne
adc
fsub
mov
mov
je
mov
adc
cmp
push
fld1
ret
jl
push
pop
test
dec
adc
fcomp
cmp
push
lds
sub
repz
push
cmp
in
jmp
jb
fwait
in
mov
or
test
js
xchg
lock
sbb
xor
jge
rcl
push
cdq
push
(bad)
fadd
hlt
xchg
or
call
popa
or
mov
dec
sbb
push
mov
outs
sub
fidivr
enter
hlt
cld
call
adc
and
jg
pop
mov
sbb
jns
retf
or
arpl
inc
jl
jae
daa
push
fimul
dec
sub
dec
add
add
enter
xor
xchg
xor
loop
cmp
cld
imul
jo
jae
xchg
pusha
xor
and
sub
adc
mov
sub
mov
sub
adc
jnp
int
push
inc
mov
pop
test
pop
iret
rcl
pushf
clc
jae
push
jbe
xlat
sbb
movs
push
mov
xor
in
out
sti
loope
push
pusha
leave
(bad)
test
in
dec
pop
mov
sbb
cli
and
mov
mov
push
xchg
not
jo
xor
imul
mov
sub
add
bound
mov
jmp
push
fld
jae
push
dec
lods
xor
lahf
arpl
mov
in
int
(bad)
scas
sti
mov
cli
dec
and
fsub
fimul
push
xor
mov
adc
loopne
fwait
inc
sub
pop
mov
jb
xchg
call
into
jnp
xlat
mov
dec
sub
fld
inc
lods
mov
pop
xchg
jmp
jno
ficom
out
cmp
or
pop
call
outs
jbe
stos
or
jb
test
sahf
xor
dec
arpl
push
fsubrp
imul
jnp
out
stos
pusha
call
ss
sbb
dec
inc
inc
inc
int
xchg
mov
in
mov
xchg
adc
ret
pop
push
adc
pop
sub
jp
fs
addr16
lods
movs
pop
hlt
jp
dec
mov
mov
leave
mul
in
fisub
icebp
fs
sub
dec
(bad)
jmp
imul
outs
jmp
stos
sbb
out
imul
call
call
nop
push
shl
inc
mov
push
jge
sub
outs
ss
(bad)
cmp
scas
aaa
sub
cs
and
push
add
and
sbb
pop
mov
gs
js
pop
sub
cmp
aam
cmp
or
xor
dec
retf
fadd
xchg
adc
in
mov
sti
push
hlt
aaa
test
xchg
call
das
sbb
clc
dec
or
div
dec
rcl
nop
pop
loopne
sbb
mov
xchg
test
jne
sahf
push
rol
add
addr16
jmp
mov
push
push
or
inc
adc
scas
pop
test
and
out
add
add
adc
dec
jbe
int3
jnp
popa
test
sub
xchg
imul
dec
out
cdq
imul
(bad)
fdiv
push
loope
push
xor
mov
cmps
stc
scas
int3
(bad)
and
mov
sti
pop
push
sti
pop
or
rcl
out
into
inc
std
mov
mov
je
loopne
imul
or
sbb
cs
leave
cwde
test
fwait
add
js
cdq
mov
sub
mov
inc
gs
clc
xchg
rol
dec
add
ins
jge
popa
mov
fs
jo
outs
ja
(bad)
mov
gs
(bad)
aam
call
icebp
mov
mov
and
sbb
std
(bad)
push
jns
jns
mov
in
test
cmp
push
adc
xlat
repnz
pop
sub
mov
push
mov
mov
jmp
and
out
stc
out
or
sub
and
shr
jne
mov
mov
into
or
and
sbb
add
(bad)
cs
jg
sbb
out
sahf
pop
lahf
(bad)
xchg
mov
mov
jmp
xor
sbb
xlat
stc
into
sub
xchg
xchg
pop
pop
cs
jbe
xor
mov
inc
pop
cmp
dec
retf
lods
pop
inc
xor
dec
sbb
movs
cs
mov
mov
(bad)
cld
(bad)
xchg
je
test
xchg
ret
sub
pushf
shr
pop
mov
fiadd
out
mov
and
pop
mov
(bad)
fstp
call
cmovo
fidivr
sbb
mov
mov
dec
sbb
xchg
and
jne
dec
cwde
popa
pop
xor
dec
mov
mov
jne
and
into
push
mov
out
sti
sbb
test
sar
ds
sbb
bsr
test
inc
mov
pop
adc
dec
inc
xchg
les
cmp
test
jns
ds
jecxz
popa
sbb
adc
adc
imul
push
jmp
sbb
xchg
ins
cli
sbb
test
push
sub
(bad)
sub
xor
xor
sbb
add
sti
sbb
xchg
mov
xchg
add
inc
stc
cmp
call
test
xchg
mov
pop
mov
cmp
fs
retf
outs
xchg
push
mov
push
xor
stc
jne
sti
inc
sub
xchg
and
xor
gs
cmp
inc
call
mov
clc
fsub
dec
fs
stos
jo
jns
cld
mov
pop
in
jne
cmp
pushf
or
or
and
stos
std
dec
sub
push
push
fisubr
das
inc
add
push
aad
cwde
fiadd
out
jns
or
enter
push
cli
sbb
cs
cli
add
loope
test
cmp
das
gs
cmp
jl
dec
adc
adc
xor
bound
xor
pop
sahf
das
adc
mov
pop
dec
mov
mov
xchg
push
dec
scas
sbb
mov
or
cmp
and
stos
jne
rol
xchg
push
aad
adc
fsub
mov
pop
mov
push
xchg
js
data16
scas
test
and
pushf
jno
add
mov
cmp
inc
lahf
xchg
cmp
xor
gs
mov
jbe
add
imul
test
inc
fld
jmp
inc
xor
js
xor
adc
cmps
cmps
lods
and
mov
fild
inc
jbe
repz
movs
cmp
dec
into
cmp
test
xor
adc
sbb
jmp
sti
out
jmp
int
movs
adc
call
in
mov
rol
mov
mov
xor
xchg
or
iret
sti
aam
outs
sbb
inc
cmc
or
sar
cmps
sbb
retf
rcl
or
int3
out
jmp
push
dec
scas
jg
mov
scas
push
loope
cmp
or
daa
fcom
mov
test
cli
mov
sti
cmp
sub
add
cmp
fmul
pop
repz
mov
imul
mov
stc
call
test
pop
mov
mov
(bad)
std
shr
mov
jecxz
push
sbb
xchg
call
repnz
hlt
pop
dec
fcmovne
mov
movs
sbb
sub
data16
mov
mov
int3
pop
mov
pop
sbb
cmp
adc
mov
jg
sahf
daa
fldcw
lods
aam
mov
ror
jl
and
or
pop
aad
mov
jb
or
gs
mov
pop
mov
pop
adc
sub
sahf
xchg
or
mov
cmp
pop
push
daa
jnp
cwde
and
jg
sub
or
sbb
mov
lds
fidiv
sub
xor
test
adc
fld
pop
cmp
pop
std
ins
pushf
xor
xor
dec
loop
xor
sub
ins
jo
lea
test
sbb
adc
fcom
push
jb
(bad)
jle
adc
mov
ror
push
pop
scas
cdq
sbb
mov
test
xor
cmp
and
and
int
popa
aaa
mov
(bad)
nop
sub
out
dec
es
iret
xchg
xor
jge
icebp
adc
scas
mov
mov
repnz
call
outs
scas
repz
daa
test
ret
in
retf
xor
repz
dec
push
or
(bad)
mov
push
pushf
aas
out
sub
stos
test
xchg
fwait
mov
adc
mul
test
and
scas
ja
rcr
stc
pop
mov
adc
push
xlat
fst
mov
pop
xchg
lahf
mov
retf
mov
xchg
add
mov
dec
pusha
iret
pop
pop
aam
imul
add
call
xchg
out
mov
stos
pop
stos
adc
out
push
xor
jns
sub
cmp
mov
popa
sbb
xchg
ret
jno
(bad)
std
test
cdq
mov
ins
cmovno
fdivr
xor
retf
mov
mov
loop
mov
cmp
retf
(bad)
ds
repnz
pop
test
loope
sbb
(bad)
pop
mov
out
xchg
jae
ss
loopne
xchg
or
and
jno
imul
jl
repnz
inc
leave
xchg
fdiv
out
(bad)
out
in
(bad)
imul
pop
and
imul
scas
sub
daa
mov
cmp
lods
call
sbb
test
sti
cmp
into
dec
xchg
adc
mov
shr
popf
xor
retf
scas
sbb
xor
test
xchg
add
scas
call
mov
in
ja
(bad)
and
xor
mov
pushf
add
mov
sahf
mov
retf
call
sub
add
and
nop
jno
pop
add
ins
js
add
repz
repnz
ss
fmul
push
jl
mov
pop
imul
neg
lahf
popa
jle
xchg
fnsave
push
xchg
xor
mov
xchg
dec
in
mov
or
jne
jp
pop
pop
(bad)
stos
stc
lahf
pop
xor
add
dec
or
adc
das
xor
xor
int3
popa
add
add
xchg
lock
lea
pop
into
jge
ret
popa
inc
test
mov
sbb
inc
push
shl
mov
aas
mov
lahf
push
xchg
js
fstp
out
stc
or
adc
dec
push
push
rcl
pop
mov
and
jo
jecxz
xor
mov
inc
gs
scas
xor
mov
xchg
mov
es
shr
rcl
and
xchg
out
and
xor
in
lock
(bad)
(bad)
xor
out
(bad)
mov
sbb
mov
jmp
xor
push
add
lods
scas
lods
rol
pusha
xchg
fild
adc
inc
jmp
test
into
jns
jb
lods
pop
add
mov
fidivr
sub
jmp
push
mov
mov
mov
popa
mov
dec
sti
cmp
push
sub
inc
scas
dec
js
fnstcw
shl
cld
imul
mov
scas
dec
xchg
ss
dec
mov
jno
and
xchg
mov
jmp
int
das
lds
add
jns
jne
inc
sub
adc
sub
jmp
xor
and
xchg
pop
fcomp
dec
loopne
frstor
sub
out
ins
or
data16
dec
jmp
xor
fs
ficomp
dec
arpl
pop
mov
adc
dec
and
xor
fild
sub
aaa
imul
loope
scas
pop
call
shr
cwde
lods
ret
inc
fstp
dec
xchg
jns
jne
aad
jle
inc
idiv
jecxz
aad
dec
call
fdiv
loope
fs
test
enter
stc
push
inc
inc
push
mov
loop
pop
out
(bad)
loope
stos
lea
sbb
inc
mov
in
sar
cmp
popa
add
fsub
sar
ins
mov
cmps
std
mov
retf
adc
mov
or
ds
jnp
adc
dec
xchg
rcl
pop
dec
(bad)
gs
pop
mov
dec
(bad)
scas
xchg
pop
aam
xor
ds
into
dec
dec
jg
cs
mov
mov
cmps
loopne
inc
out
idiv
div
inc
aas
fild
stos
pop
and
or
pusha
xlat
outs
adc
and
(bad)
mov
sub
ss
push
icebp
aas
in
in
les
(bad)
mov
push
sbb
mov
das
and
(bad)
aas
xchg
sbb
in
imul
nop
add
mov
repnz
push
(bad)
sar
lds
dec
or
cmp
adc
push
and
aas
inc
fsubr
xor
jnp
fwait
ret
pop
push
add
rcr
repnz
pop
cmp
jp
jmp
adc
imul
cli
repz
mov
push
pop
pop
sahf
je
test
pop
enter
dec
out
retf
test
call
cmps
cmp
or
push
xchg
test
sbb
ret
cmps
aam
stos
add
cmp
aaa
stc
inc
loopne
cmp
mov
sbb
and
aas
push
pop
push
shld
aad
pop
and
sub
in
mov
ds
not
pop
mov
addr16
js
leave
inc
mov
push
mov
xchg
fdivr
lahf
jo
push
cld
iret
or
fs
into
out
and
and
retf
push
das
in
popf
inc
cmps
ins
test
mov
cmp
jno
aad
pop
mov
cmp
lods
cmp
movs
loop
mov
xchg
add
cmp
push
es
jecxz
cmp
cmp
push
outs
out
sub
and
adc
pop
cmp
mov
jmp
in
xchg
and
inc
rcr
adc
dec
mov
aad
int
(bad)
and
xchg
inc
xor
xor
daa
ja
std
jecxz
sbb
xchg
(bad)
add
inc
cwde
pusha
dec
sbb
or
and
dec
retf
or
inc
(bad)
jecxz
push
loop
lahf
pop
pop
push
loopne
into
int3
(bad)
jnp
or
stos
cli
or
sub
add
iret
add
dec
shufps
pop
pop
mov
add
sbb
ins
push
test
lods
pop
dec
mov
mov
pop
hlt
mov
mov
jle
jle
or
fist
xchg
jae
xor
leave
in
cmp
pop
sahf
or
sbb
nop
lds
(bad)
xor
fsubr
test
xlat
xchg
stc
scas
and
pop
dec
lods
out
sti
ss
mov
nop
(bad)
xor
ret
or
and
add
repnz
sub
outs
jp
into
fild
inc
xchg
ret
mov
lods
and
adc
aad
xor
cmps
push
xor
test
test
pop
pop
stos
or
test
sub
cmp
add
stos
adc
xchg
pop
inc
aaa
dec
xor
mov
inc
xor
(bad)
stc
xor
jo
and
ret
test
shl
(bad)
jmp
lea
sbb
stos
repz
cld
or
rcr
mov
gs
push
mov
push
xor
lods
inc
pop
aaa
movs
fidivr
and
pop
cwde
cwde
xor
fwait
sbb
lods
aam
and
js
cwde
ds
cwde
adc
retf
ds
(bad)
loop
jne
jmp
repz
imul
mov
in
push
sub
xchg
das
jge
sar
mov
or
dec
pop
dec
(bad)
out
(bad)
push
sbb
pop
lods
xchg
xor
xchg
clc
je
push
mov
pop
(bad)
in
int
iret
push
push
repnz
sub
std
pushf
dec
pop
int
cmps
add
loop
cmp
adc
cmp
fisub
test
icebp
popa
clc
or
jno
(bad)
mov
cs
lds
mov
sub
mov
mov
iret
lahf
fs
retf
adc
(bad)
mov
inc
cli
inc
cli
test
aad
sub
cmps
push
cmp
jecxz
ficom
jecxz
loope
jae
push
mov
hlt
inc
pop
fdivp
adc
jmp
call
iret
rol
js
jge
pop
repz
xchg
ins
std
mov
xor
in
adc
sub
adc
dec
jns
call
jb
arpl
push
test
sub
dec
mov
mov
jmp
cmc
mov
aam
daa
fucomi
xor
mov
shl
imul
pop
(bad)
push
mov
(bad)
xor
mov
or
jbe
inc
jb
mov
cmp
xchg
shl
add
loope
push
mov
scas
xchg
xchg
into
jge
mov
sub
stos
fwait
pop
xor
mov
dec
hlt
fcom
dec
repz
add
sti
rcl
pop
fsub
push
call
pop
or
mov
sti
fcomip
clc
mov
cmp
and
push
mov
retf
mov
pop
add
aas
and
(bad)
stc
pushf
(bad)
iret
fiadd
pop
fisttp
cld
mov
add
call
sar
cmp
cli
jnp
popa
jmp
call
or
adc
stos
inc
aam
push
jae
push
sar
sti
cmp
mov
scas
scas
jp
aam
xchg
cmp
data16
and
(bad)
adc
call
jnp
js
pop
pop
mov
pop
std
cmc
es
cmp
pop
cli
gs
out
adc
aam
mov
ins
call
(bad)
es
mov
dec
adc
mov
cmps
in
pop
adc
mov
repz
cmp
mov
jl
aad
cmp
push
sbb
lea
jno
arpl
mov
xor
cmp
and
add
loope
imul
mov
xor
aas
mov
into
jmp
inc
xchg
fcom
cli
cmp
retf
jecxz
sbb
pop
loop
jb
xchg
mov
jecxz
sbb
xchg
je
aas
mov
jns
fnstenv
sub
xchg
enter
mov
out
add
in
mov
push
sub
repnz
sub
stc
jle
jle
push
adc
sub
ror
lds
retf
js
inc
pop
lea
cmp
mov
arpl
ss
movs
inc
ds
inc
call
dec
jle
adc
je
mov
in
loope
(bad)
add
imul
adc
push
mov
jno
cmps
and
out
inc
dec
lds
pop
mov
adc
sbb
inc
cmp
aas
pop
stc
cs
jnp
and
inc
aam
pop
daa
out
bound
mov
in
(bad)
sub
out
fwait
xor
sbb
fsub
xor
sbb
xchg
je
jae
and
int
scas
and
push
adc
shr
fwait
(bad)
rcr
add
jmp
adc
mov
and
dec
add
ss
dec
and
add
les
retf
push
sbb
leave
push
ret
fwait
add
call
nop
ins
dec
(bad)
(bad)
jbe
popa
jp
scas
xchg
imul
(bad)
pusha
fs
push
sbb
jp
in
stos
add
aam
jns
(bad)
lods
push
dec
rol
cmps
out
add
push
or
mov
stos
xor
or
pop
mov
dec
pop
cmp
loope
mov
mov
out
jnp
sub
push
sub
adc
sti
cmp
xor
add
or
inc
push
adc
push
and
sar
push
xchg
cwde
call
push
fcom
inc
aaa
aam
popf
lds
push
xchg
push
out
fisttp
imul
iret
inc
outs
mov
out
cmc
jmp
outs
dec
je
neg
push
not
ffreep
xchg
enter
test
xor
dec
popf
inc
shl
scas
retf
fwait
add
lds
xor
mov
pop
or
inc
popa
leave
bound
push
pusha
dec
int
dec
loope
xchg
test
test
sbb
fisubr
cli
hlt
sbb
scas
mov
sbb
xchg
fwait
out
jge
sti
cli
xor
shl
(bad)
xlat
pop
mov
push
inc
ja
jbe
fidivr
ror
loop
or
jo
push
sub
mov
stos
loope
inc
cmp
sbb
hlt
push
in
retf
rol
pusha
mov
shr
inc
ret
jne
out
jge
dec
lock
clc
pop
(bad)
cmps
adc
mov
mov
adc
hlt
mov
into
imul
loope
arpl
inc
rcr
ja
sbb
(bad)
(bad)
sbb
enter
push
push
shl
and
sbb
mov
(bad)
popf
mov
rep
adc
mov
or
in
cmp
add
addr16
add
adc
(bad)
xchg
jne
or
data16
mov
bound
inc
jno
iret
add
sub
add
add
out
add
adc
xchg
call
adc
mov
xchg
fdiv
aad
pop
mov
lahf
inc
aaa
fstp
sahf
inc
rcl
bound
push
push
stos
popf
sbb
push
cwde
fnstcw
lahf
xchg
mov
mov
popf
ret
and
fs
xchg
ds
hlt
jns
pop
mov
scas
inc
(bad)
lods
popa
xchg
std
mov
adc
(bad)
jnp
popf
mov
dec
mov
sub
jo
shl
js
inc
out
sub
out
xor
sbb
inc
ret
cs
fist
jmp
or
addr16
pop
(bad)
stc
call
add
dec
mov
call
fcom
(bad)
mov
rcl
adc
push
(bad)
sub
pusha
arpl
mov
xor
out
mov
xchg
add
cmp
dec
int
inc
push
add
mov
dec
mov
jge
outs
jbe
cs
add
inc
pop
dec
sahf
sahf
fisttp
mov
lods
inc
inc
int3
fwait
add
sub
(bad)
iret
mov
loop
xchg
pop
add
pop
mov
add
push
ret
dec
ds
das
stos
iret
mov
fs
stos
adc
sahf
xor
inc
fnsave
jno
rol
popf
pop
cmp
(bad)
retf
leave
int
xor
xchg
lock
xchg
into
in
pop
jmp
movs
lea
cmp
js
lahf
pop
mov
and
mov
in
ja
pop
push
push
pop
mov
cwde
add
test
retf
jge
mov
sahf
(bad)
jo
repnz
cdq
cmp
jnp
cli
aam
cmps
aam
fiadd
loopne
pop
adc
push
sbb
mov
ins
rol
retf
test
adc
(bad)
cmp
retf
jb
lahf
adc
sbb
int3
loopne
enter
test
adc
cmp
jl
ins
fdivr
dec
fmul
pop
mov
add
push
jg
into
jae
or
adc
out
arpl
sub
dec
xor
stc
sahf
sbb
in
xchg
aaa
nop
mov
es
movs
cmp
movs
add
fs
shr
mov
enter
sbb
fidiv
and
pop
je
xchg
shl
mov
ins
cli
mov
cmc
mov
mov
add
push
inc
cmc
jecxz
jmp
call
inc
js
lds
xor
adc
mul
loope
adc
popf
aam
(bad)
outs
push
and
in
jl
mov
mov
das
xor
jl
adc
enter
xchg
popa
xchg
xchg
lea
push
sub
adc
sahf
ss
shr
ret
xchg
mov
sbb
pop
aaa
int3
shl
cmp
sub
mov
cmc
shl
inc
mov
xor
clc
sub
jle
aam
inc
fwait
mov
mul
inc
adc
adc
lods
call
adc
jg
retf
sbb
push
aad
cwde
sub
and
add
lods
pop
loopne
push
arpl
inc
sub
fwait
add
cmp
adc
xor
in
and
push
test
pop
neg
push
xchg
bound
call
ss
aad
sbb
cli
xchg
sbb
fnstenv
or
mov
add
mov
add
sub
addr16
movs
shl
scas
push
mov
cdq
jmp
je
in
pop
pop
dec
test
dec
ds
pop
xor
xchg
add
mov
jns
cs
mov
xor
nop
cdq
cmp
xchg
fnstcw
sub
dec
(bad)
sar
cmps
ds
cwde
rcr
cmp
arpl
leave
imul
inc
xor
mov
xchg
inc
xor
pop
sub
(bad)
(bad)
cld
sahf
inc
out
pop
or
and
xchg
retf
and
or
mov
fwait
cmp
xor
imul
inc
iret
sahf
sbb
add
shl
mov
push
pushf
xchg
fs
mov
loop
fld
mov
jp
inc
dec
dec
jno
enter
xor
cmp
rcl
dec
(bad)
loopne
scas
ins
into
in
clc
sub
(bad)
xchg
xor
or
loope
mov
jmp
dec
cmps
rcr
dec
arpl
shr
push
test
repz
and
or
jne
mov
pop
cdq
xor
aam
add
mov
fimul
cmp
mov
and
movs
fadd
dec
push
sar
sub
dec
int3
daa
xchg
mov
push
pop
jp
push
adc
imul
gs
mov
xchg
fild
shl
mov
test
cmps
ret
mov
stc
cld
mov
cs
and
mov
fistp
mov
cdq
aam
addr16
js
inc
pusha
cmp
mov
fisttp
push
sub
pop
es
jbe
ret
outs
out
push
es
push
push
mov
jl
mov
lods
mov
mov
xor
mov
sub
jg
ins
gs
mul
mov
sbb
and
test
push
add
leave
xchg
cli
cmc
retf
push
test
push
into
mov
bound
lahf
inc
shl
xchg
inc
xchg
xchg
repz
mov
repz
fs
fs
mov
mov
inc
cli
stos
cmp
shl
mov
sbb
push
push
sub
lea
int3
dec
cmps
outs
dec
push
in
push
test
mov
aam
inc
pop
rcl
icebp
or
dec
mov
imul
xlat
ins
adc
and
or
jge
repnz
div
push
sbb
aam
out
xchg
in
and
ja
scas
fmul
movs
pop
jecxz
xchg
sbb
xor
jmp
xchg
ror
pop
rol
jo
cmp
mov
movs
gs
mov
push
jecxz
xchg
es
ds
pop
fs
out
xchg
fst
and
dec
pop
mov
dec
ins
repz
js
shr
xchg
push
or
(bad)
xlat
scas
pop
mov
sub
push
into
dec
add
fiadd
sbb
ds
jecxz
or
daa
adc
dec
dec
or
or
(bad)
jmp
nop
fnstenv
inc
ret
int
idiv
retf
shl
not
fisttp
aam
syscall
mov
stos
pusha
icebp
icebp
mov
aas
sbb
loope
mov
repz
mov
inc
inc
popf
out
fcomi
xchg
and
and
mov
add
outs
sbb
test
cmp
ja
sbb
inc
dec
inc
xchg
jl
sub
test
dec
cmp
lock
pop
cmps
xor
into
loop
lea
or
popf
xor
inc
mov
rol
jl
add
shr
xor
sbb
fbstp
xlat
mov
mov
xor
popa
cmp
ret
add
int3
push
aam
mov
(bad)
xchg
outs
jns
cs
push
add
add
inc
mov
mov
add
sub
rcr
cli
test
ret
add
lock
fwait
xlat
cmps
das
mov
xor
pop
and
stos
scas
lods
mov
cs
or
sbb
hlt
and
dec
cdq
add
int
in
fidivr
cmp
cmc
cmps
xor
dec
mov
ja
test
sub
cmp
aaa
gs
cdq
adc
jle
pshufw
xchg
fmul
adc
and
mov
mov
icebp
mov
mov
sub
bound
push
(bad)
clc
int3
pushf
dec
js
daa
rcl
ins
in
jo
js
js
inc
hlt
add
adc
stc
ret
push
jns
sub
into
push
retf
ins
sub
ds
cmp
jmp
js
ins
call
repz
je
pop
jne
or
test
imul
jnp
cmc
xor
sbb
lock
pop
in
lock
out
dec
jae
rol
aas
jno
(bad)
rol
scas
xchg
(bad)
cmp
xor
je
repnz
mov
inc
in
in
call
frstor
dec
inc
leave
jl
dec
leave
dec
jmp
(bad)
jb
es
sbb
daa
xlat
adc
shl
or
jle
cmps
std
int3
jg
aas
jle
out
data16
mov
lods
ror
movs
push
xchg
add
xor
mov
leave
add
inc
lock
mov
not
aas
sub
push
pusha
fdivr
icebp
(bad)
and
lahf
shr
clc
jp
pop
(bad)
lsl
inc
xchg
into
xchg
jl
gs
mov
data16
inc
cdq
ss
mov
in
and
push
sbb
stos
pop
iret
xlat
push
or
add
call
int3
daa
mov
dec
pop
fldenv
xchg
mov
fnstsw
mov
in
pop
dec
cs
xor
inc
or
dec
inc
push
cmp
shl
sub
lods
out
imul
stos
pushfw
movs
leave
dec
push
mov
push
ret
(bad)
inc
mov
or
sbb
push
inc
in
mov
ret
scas
push
pop
xchg
add
ja
shl
lods
lds
nop
std
retf
sahf
mov
test
ja
jmp
mov
adc
cmp
mov
or
add
arpl
lock
stc
cmps
stos
sbb
push
hlt
test
mov
sub
mov
shl
cmps
(bad)
(bad)
jg
or
jb
add
aaa
fstp
out
mov
mov
jae
push
adc
fisub
jp
adc
add
xor
inc
mov
icebp
in
ret
in
jnp
sub
cli
pop
popa
retf
xlat
sbb
push
dec
xchg
mov
add
adc
push
jne
dec
adc
sar
dec
addr16
aas
mov
cmp
movs
lea
sbb
xchg
adc
xchg
(bad)
das
les
popa
push
push
jnp
mov
sahf
mov
sar
(bad)
daa
cmps
adc
cmp
mov
or
pop
lods
and
pop
cmps
mov
xchg
stos
ficomp
push
mov
xor
xor
stos
xchg
clc
jle
mov
es
mov
mov
in
fnstsw
mov
in
xor
out
or
(bad)
dec
das
or
xor
les
mov
sbb
sub
sar
mov
js
outs
test
cmp
push
add
into
aam
enter
in
dec
mov
inc
std
jge
sub
add
stc
pop
sbb
lods
add
pop
mov
jmp
xor
popa
push
es
std
inc
jo
int3
jnp
cmp
mov
xchg
xchg
mov
iret
retf
sti
xchg
inc
stc
(bad)
stos
arpl
in
sahf
seta
mov
fsubr
ror
fdivr
jecxz
fisubr
mov
repz
inc
ds
push
fdivr
pop
xchg
or
pop
scas
nop
je
mov
lods
sub
jo
fs
mov
fisubr
cmps
add
aad
sahf
add
nop
test
leave
ret
int3
push
push
out
aad
call
inc
(bad)
inc
xor
add
cld
std
pop
cmc
dec
call
nop
xchg
add
mov
ror
dec
in
outs
cld
hlt
mov
jmp
lods
pop
xchg
stc
dec
icebp
int
fldz
les
jg
mov
or
aaa
lahf
loopne
adc
jl
xlat
pop
in
aas
sub
cwde
stos
js
jbe
add
push
outs
pop
shl
(bad)
sbb
mov
mov
out
loope
mov
pop
cmps
or
dec
xchg
ins
dec
lahf
fadd
or
stos
cmp
mov
inc
xor
sbb
mov
fcomp
fwait
stc
dec
into
pushf
sbb
push
mov
rcl
sbb
xlat
movs
mov
daa
push
xchg
mov
xchg
jns
imul
cmc
xchg
loopne
xor
push
pop
idiv
enter
cmp
xchg
stos
stos
cmps
and
(bad)
outs
cmp
ficomp
mov
mov
cmps
(bad)
mov
and
int3
jnp
xchg
loope
jl
lods
fwait
(bad)
jmp
pop
push
mov
jl
xchg
mov
dec
inc
(bad)
rcr
sub
jbe
jne
gs
pusha
or
repnz
stos
test
add
inc
mov
cld
sahf
mov
(bad)
addr16
jle
xor
inc
xlat
mov
mov
jle
xor
jmp
sbb
xchg
lahf
mov
pop
sub
pop
retf
xchg
sbb
es
add
push
dec
xchg
and
pop
xor
mov
je
mov
sub
add
retf
push
mov
inc
jae
sub
sbb
bound
in
jne
sub
mov
sbb
adc
adc
push
fwait
mov
mov
cmc
jnp
mov
rcr
cmp
fdivr
and
fcmovnb
xchg
adc
or
cdq
mov
mov
cld
sub
push
out
inc
dec
enter
xchg
mov
inc
push
push
mov
add
jg
xlat
mov
and
sub
mov
pop
push
ret
pop
sbb
shl
mov
test
mov
xor
push
sbb
in
bound
aaa
pop
push
outs
out
mov
xchg
das
add
xor
test
(bad)
sub
jmp
test
cmp
test
jecxz
mov
enter
push
cmc
cmps
mov
xor
jge
aam
idiv
pop
adc
(bad)
mov
adc
sbb
loope
retf
adc
push
jbe
inc
sbb
mov
add
adc
add
out
test
into
popf
inc
mov
adc
xor
call
sbb
cs
xchg
add
jecxz
ja
loop
lods
fadd
or
movs
das
dec
jne
sbb
xchg
add
sub
mov
movs
adc
sbb
lods
push
rcr
mov
jno
sbb
or
or
push
(bad)
scas
pop
ret
into
cmp
ja
inc
mov
xor
and
ins
mov
sti
arpl
pop
test
jb
pushf
scas
movs
std
rol
push
mov
out
(bad)
jle
gs
mov
sub
mov
ds
mov
scas
cmp
ds
jbe
pop
fbstp
and
jmp
mov
or
cld
mov
ins
iret
ds
(bad)
into
loopne
repz
rcr
out
jmp
cdq
xchg
jne
retf
pop
ret
jge
inc
mov
mov
fdivr
gs
jns
inc
add
sub
mov
inc
jp
int3
jp
out
xor
pop
and
cwde
push
mov
in
cmp
dec
or
ret
clc
fxch
loop
xor
inc
es
es
idiv
cmp
test
in
xchg
jecxz
mov
je
push
ds
pop
cmps
adc
imul
jp
in
ins
push
sbb
movs
xlat
cmp
or
es
or
scas
push
mov
aad
pop
sbb
inc
rol
mov
dec
and
fdivr
sbb
push
xchg
jne
je
fstp
test
xor
mov
xchg
cmp
test
in
dec
mov
add
int3
pop
push
enter
imul
cvtps2pi
in
and
and
call
sti
inc
add
add
div
cmp
out
add
shr
retf
idiv
xor
or
dec
push
stos
sub
cmp
lods
cmp
sahf
retf
cmp
pop
and
sbb
iretw
shr
jno
xor
adc
test
xchg
ss
add
sti
sub
imul
lds
ror
and
inc
sbb
les
jbe
add
sahf
xchg
jmp
call
mov
pop
lahf
pop
mov
add
sar
add
cmp
int
shr
jo
mov
mov
dec
mov
sub
and
bound
sub
jns
lods
dec
out
inc
hlt
dec
lods
aaa
leave
push
test
xor
sbb
in
jo
push
fld
mov
add
pop
ds
(bad)
pushf
mov
call
icebp
cdq
dec
mov
xchg
dec
sahf
jmp
mov
(bad)
cdq
dec
xchg
pop
jmp
fcomip
retf
mov
shr
fistp
mov
call
adc
push
push
rcr
test
dec
es
stos
dec
lock
loop
pop
xchg
cmps
xor
jecxz
ficom
xor
mov
add
xlat
(bad)
cmp
aad
add
jne
sub
mov
adc
push
fnsave
es
jecxz
push
(bad)
push
fist
adc
(bad)
clc
aam
mov
ja
je
mov
xor
cwde
pop
fmulp
jne
out
movs
repz
mov
mov
ss
add
add
mov
xor
mov
pop
xchg
test
rcl
popa
xchg
lds
pop
cmps
mov
or
cmp
xchg
push
mov
stc
call
lahf
inc
arpl
test
out
mov
shl
or
sar
cmps
test
mov
aad
mov
test
pop
ins
scas
xor
mov
mov
scas
lds
fdecstp
inc
leave
and
mov
int
daa
pop
mov
leave
int
jmp
sahf
nop
adc
add
sub
(bad)
adc
sbb
xchg
retf
lahf
dec
cld
jo
cmp
adc
dec
bound
sbb
aam
mov
scas
jge
aas
jae
inc
popf
sbb
xor
stos
dec
jae
int3
pop
pop
sub
jno
xor
ret
outs
call
inc
cwde
jmp
js
nop
int3
jle
sti
lahf
je
dec
cli
jmp
jl
pop
push
lods
xor
cmp
fst
jecxz
xchg
mul
push
xor
jae
ins
stos
xchg
lahf
test
push
(bad)
pop
jnp
movs
outs
int
adc
jno
xchg
inc
aaa
jmp
stc
pop
lods
mov
jae
bnd
dec
lea
jns
dec
fist
jle
and
sub
mov
ds
xor
mov
ds
mov
repz
adc
nop
push
fist
imul
push
call
data16
xchg
push
xlat
xchg
push
jae
sbb
enter
pusha
int
xchg
add
sub
mov
ds
shl
inc
movs
test
mov
into
jmp
sub
pop
mov
ss
sar
fsubr
ficomp
iret
and
push
cmps
sbb
test
out
xor
inc
rcl
mov
iret
data16
sbb
or
leave
xlat
aam
call
fcmovbe
(bad)
xchg
movs
pop
mov
or
and
retf
dec
push
movs
in
push
jns
in
mov
imul
cmps
jmp
jmp
adc
lock
jae
push
(bad)
jns
pop
aad
xlat
aam
dec
mov
jg
or
push
rcl
pop
fmulp
and
dec
movs
js
add
scas
cld
(bad)
shr
cdq
pop
xchg
gs
repnz
jp
std
cld
push
push
aaa
jle
inc
jle
les
pushf
ret
je
jmp
sbb
dec
sbb
(bad)
pop
sbb
cmc
add
dec
dec
imul
pop
ja
push
inc
ret
call
or
fadd
movs
push
add
or
shl
jp
mov
mov
pop
inc
inc
xlat
sti
sub
mov
mov
cwde
sti
sbb
mov
mov
enter
jb
nop
push
jnp
mov
movs
pop
xchg
mov
push
sub
dec
test
sub
xchg
icebp
movs
inc
(bad)
jmp
stos
int
push
sbb
repz
mov
js
fdiv
pop
int3
mov
sub
add
das
jno
mov
ret
mov
loop
(bad)
mov
popa
pop
push
fisttp
push
or
or
jns
pop
dec
cdq
ds
xchg
ficom
pop
mov
nop
xchg
out
xchg
push
imul
pop
ficom
pop
pop
add
jp
nop
mov
push
(bad)
xchg
not
jne
mov
xor
pop
iret
bt
dec
arpl
jp
mov
xor
lods
add
lahf
add
test
clc
adc
push
and
cmp
out
sti
mov
xchg
mov
jecxz
sub
adc
sub
dec
mov
out
fdivr
push
lea
scas
in
ror
add
std
mov
lock
and
jp
int3
adc
adc
ins
cdq
jl
movs
pop
add
pop
cmp
(bad)
jle
inc
push
fld
jb
cmp
adc
pop
cs
icebp
dec
icebp
loop
mov
retf
sub
cmps
mov
cwde
add
test
mov
mov
shl
jmp
and
(bad)
rcl
adc
cmc
in
dec
ds
sar
imul
loope
sub
inc
dec
shl
out
pop
int
mov
jbe
and
pop
scas
push
mov
mov
rcl
outs
push
pop
sub
mov
out
dec
ins
imul
bound
(bad)
and
xchg
xchg
mov
cmp
lds
test
test
sub
popf
push
in
test
ins
jbe
je
xchg
mov
pop
add
pop
clc
imul
xchg
jmp
cmp
fwait
scas
cdq
inc
dec
inc
mov
adc
sub
adc
pop
sub
mov
jmp
mov
ret
jae
pop
jne
cmp
test
sub
dec
and
call
cmp
aam
and
cs
daa
sbb
fidiv
push
adc
xchg
cdq
cwde
mov
dec
pop
jge
mov
mov
jmp
jae
mov
lods
mov
adc
pop
mov
shl
xor
add
mov
or
add
int
mov
mov
xor
sub
cmp
in
inc
cmc
das
pushf
fidiv
retf
dec
stc
cmp
xlat
pop
jmp
pop
cmp
jmp
xchg
cwde
sub
mov
mov
ret
jb
push
jge
lds
mov
jmp
test
je
scas
test
fsubr
shl
push
neg
dec
jae
push
or
push
inc
(bad)
adc
fdiv
dec
gs
xor
push
idiv
xchg
out
in
xlat
xor
mov
mov
nop
inc
sbb
retf
dec
popa
cmp
jp
or
mov
xchg
stos
lods
xchg
sbb
rol
adc
daa
mov
pop
std
pop
fstp
ins
jge
sbb
retf
ret
jbe
push
addr16
push
add
mov
movnti
fwait
sbb
cmps
imul
fld
cmp
pop
add
and
jb
and
ret
out
in
sub
mul
cld
mov
and
sub
pop
dec
add
adc
push
xchg
out
push
cmp
push
movs
test
mov
mov
cmp
add
ins
addr16
mov
mov
mov
leave
pop
cdq
adc
dec
js
mov
sbb
mov
push
mov
ins
rol
adc
outs
sbb
fsubr
jmp
jle
dec
fs
or
xor
jbe
aas
sub
and
xor
fnstsw
adc
lods
add
pop
adc
jge
mov
pop
out
mov
mov
sub
push
das
adc
scas
dec
push
loope
(bad)
mov
cwde
inc
cmp
dec
mov
test
loope
sub
adc
popf
sti
in
out
lods
and
push
imul
push
sub
ss
jns
sub
enter
pushf
push
cdq
mov
popa
mov
iret
xchg
popf
push
inc
jns
cmp
cld
jns
or
and
call
cdq
jbe
out
xor
xchg
mov
xor
mov
cmp
into
jb
cmp
pop
sbb
jmp
inc
lahf
aad
and
mov
movs
push
jbe
aad
fisub
xor
inc
mov
jge
sahf
sub
add
sub
adc
and
adc
es
daa
mov
gs
or
cs
mov
int
push
inc
sub
stos
jmp
adc
sbb
aad
adc
loope
mov
repz
dec
push
inc
mov
pop
aas
(bad)
xchg
ins
mov
dec
cmp
cli
mov
jno
sbb
js
pop
pop
aas
push
jmp
call
repz
retf
cmps
mov
call
pop
dec
and
inc
pop
mov
inc
imul
shr
rol
rol
sub
test
add
add
nop
dec
(bad)
sti
xor
ret
xchg
popf
in
js
jmp
int
xchg
push
mov
pop
jge
iret
and
jo
cmps
icebp
(bad)
out
dec
pop
fmulp
xchg
mov
fadd
xor
xor
sub
movs
cmp
sbb
mov
xchg
add
or
sahf
das
ficom
out
sbb
outs
ret
jae
stc
loopne
pop
mov
jecxz
cmp
sbb
ret
inc
push
inc
sbb
or
mov
mov
fsub
shr
ja
push
sbb
pop
pop
jecxz
push
cmps
popf
lahf
fist
dec
inc
(bad)
mov
int3
cmp
jns
fcmovbe
lods
mov
lods
daa
sahf
retf
scas
and
daa
movs
pop
iret
or
leave
das
mov
dec
or
pop
mov
fild
pushf
mov
mov
test
sub
dec
xchg
mov
repnz
jbe
ror
nop
or
aam
adc
and
or
shl
inc
arpl
repz
scas
xor
div
aas
pop
mov
mov
jecxz
sbb
cwde
ins
cmp
add
(bad)
adc
rcr
sub
ds
jo
rcl
pop
inc
jne
sub
sar
pop
or
sbb
imul
stos
stc
inc
pushf
mov
into
mov
test
test
dec
xchg
and
(bad)
aam
dec
mov
sbb
call
test
jmp
dec
(bad)
fwait
in
mov
out
mov
les
mov
out
push
push
or
iret
js
fdivr
ficomp
movs
or
(bad)
iret
ficomp
cmc
mov
pop
cmp
sub
shl
inc
xor
loop
sbb
xchg
fistp
js
sbb
pop
dec
mov
or
add
imul
cmp
mov
scas
push
push
jne
jae
jl
mov
mov
test
cmp
push
cdq
mov
cwde
movs
push
sub
dec
(bad)
fwait
dec
adc
jbe
rcr
or
cli
dec
add
cld
or
repnz
xchg
pop
scas
pop
mov
sbb
es
sbb
jnp
adc
in
test
fld
sub
mov
in
cmp
leave
je
push
cmp
lods
test
sub
bound
out
mov
int3
push
push
mov
imul
cmp
mov
xor
sub
pop
and
imul
pop
jbe
ins
dec
inc
out
push
push
ins
xor
adc
mov
mov
and
out
vshufps
das
dec
fisttp
inc
cmps
dec
stos
imul
rol
mov
retf
fild
jecxz
add
aam
pop
das
cmp
outs
fimul
test
cdq
mov
shr
icebp
(bad)
cmp
cmove
jo
mov
and
arpl
sbb
pop
xor
enter
aam
adc
jmp
mov
cmp
xor
mov
fiadd
push
dec
lods
pop
dec
into
outs
xchg
add
xor
ror
or
imul
into
ds
in
jns
mov
pop
sbb
movs
dec
jp
rcl
test
popf
enter
mov
sbb
dec
dec
fidivr
pop
lods
push
jno
dec
mov
sbb
xchg
dec
test
imul
sahf
xchg
(bad)
mov
sub
ja
movs
fwait
dec
sbb
pop
pop
pop
jge
jo
std
out
mov
rcr
or
dec
pop
jne
jb
cmp
dec
jae
inc
enter
xor
stos
jae
xor
cmps
adc
sub
or
mov
mov
inc
fwait
mov
jmp
in
sub
mov
pop
shr
retf
sub
ja
call
out
cld
sub
mov
sbb
call
pop
into
ror
pop
retf
and
sub
adc
icebp
ret
mov
xor
jg
jp
xchg
sti
sbb
cli
(bad)
cmps
xor
cmp
jne
sbb
in
mov
ret
mov
cmp
and
jmp
add
jg
cmp
mov
test
dec
loopne
aad
mov
mov
dec
sub
sbb
pop
add
loop
jg
and
ins
rol
sub
and
jb
adc
ret
fidiv
(bad)
clc
sub
in
push
jno
mov
sbb
mov
push
jl
add
lahf
aas
add
dec
inc
pop
or
fimul
repz
pop
outs
push
icebp
aas
test
pusha
dec
pop
retf
imul
cli
pop
xchg
ins
mov
leave
rcr
out
fnsave
pop
xor
dec
mov
or
xchg
push
and
sub
dec
loope
cmc
arpl
mov
(bad)
sar
add
into
mov
addr16
mul
retf
dec
call
cmp
rol
mov
add
ret
test
add
xor
lods
mov
gs
fldl2t
lods
adc
lods
adc
fist
dec
ins
mov
jp
lods
cmp
call
fistp
icebp
mov
in
jo
loope
dec
jmp
aad
pop
xchg
pop
cs
cmp
call
in
call
push
pop
outs
leave
loop
dec
xchg
outs
shl
test
cli
mov
xor
mov
lock
xchg
je
jle
push
sbb
pop
into
cmc
dec
sbb
dec
mov
cmc
cmp
std
pop
repnz
sbb
mov
sbb
sti
ficomp
xchg
lods
fwait
jl
sub
data16
dec
lea
mov
out
test
mov
push
jnp
in
(bad)
(bad)
sahf
pop
je
(bad)
mov
xlat
and
xchg
sti
adc
xchg
adc
mov
sbb
sbb
jp
cmp
xchg
js
mov
not
fs
or
lea
xor
jnp
jp
ins
es
and
and
and
test
and
jg
das
jmp
dec
add
es
jb
pushf
in
jbe
inc
cli
inc
int
cli
xor
xchg
xor
xor
dec
and
pop
jle
mov
in
push
je
xlat
xchg
xchg
xchg
mov
mov
lea
mov
xchg
mov
add
inc
cmp
adc
(bad)
push
out
scas
sub
fwait
ss
push
push
ret
and
call
hlt
popa
sub
xor
das
mov
mov
shl
pop
in
shl
or
cmps
jns
xchg
pushf
inc
pop
push
inc
loopne
scas
scas
mov
cmp
mov
pop
ficomp
rol
add
test
cmps
xlat
scas
push
test
mov
retf
xchg
addr16
loope
cmc
dec
std
mov
test
dec
mov
cmps
push
push
sbb
shl
cmp
es
mov
iret
arpl
repz
add
aad
imul
push
rcl
out
inc
sub
repz
cmp
in
test
jb
push
ret
test
cli
pop
inc
push
arpl
adc
xor
fcom
pop
in
and
imul
ja
mov
daa
jmp
and
icebp
add
inc
xor
jo
push
fs
mov
jl
pop
ss
mov
sbb
mov
xlat
retf
push
pop
(bad)
mov
pop
outs
loop
ins
shr
xor
sub
mov
fld
in
ror
pop
fcmovnb
jbe
not
adc
iret
ret
pop
retf
push
push
(bad)
in
pop
sbb
mov
mov
mov
out
shl
mov
mov
mov
add
mov
pop
test
mov
stc
mov
neg
or
push
adc
shl
and
dec
aam
daa
pusha
pop
popa
push
ret
fbld
push
sub
fdiv
inc
or
loope
retf
dec
pop
clc
jnp
cmps
inc
test
stos
lods
std
and
rdmsr
xchg
addr16
pusha
mov
aaa
jle
(bad)
fidiv
jge
jae
scas
sub
cmp
std
adc
push
dec
test
gs
adc
and
test
push
fistp
ds
inc
add
add
popa
(bad)
xchg
adc
ja
outs
mov
mov
jge
lea
fisubr
ja
mov
cmp
dec
mov
jmp
or
xor
or
repnz
push
outs
test
test
mov
or
push
mov
mov
xchg
scas
mov
push
xor
mov
shl
dec
test
fst
sbb
sub
(bad)
mov
enter
mov
das
or
xchg
cmc
inc
fild
inc
sbb
arpl
popf
or
push
cli
sbb
mov
lds
push
push
push
push
jnp
enter
lods
mov
add
stc
imul
push
int
mov
call
or
dec
jle
scas
or
mov
mov
jge
push
dec
push
add
fidiv
or
sub
inc
or
mov
inc
cmp
and
jmp
lods
xor
in
or
inc
in
pop
stos
jb
aas
out
cmp
rol
dec
aas
outs
push
(bad)
loope
neg
ja
mov
daa
adc
push
outs
xchg
ins
out
jnp
jnp
mov
int3
dec
addr16
or
mov
push
mov
dec
mov
xchg
push
daa
mov
push
ins
jp
cmp
inc
mov
lods
stc
daa
shr
fisttp
cmp
dec
arpl
push
arpl
xor
out
outs
sbb
mov
sub
mov
inc
pop
cmp
enter
push
push
mov
into
sub
mov
mov
sbb
fmul
outs
and
cwde
aaa
add
stc
out
mov
iret
xchg
getsec
rcpps
add
sub
xor
sub
jbe
mov
ds
pop
fwait
dec
enter
lods
shr
fstp
hlt
mov
mov
js
mov
outs
clc
cmp
shr
jmp
loop
jbe
jo
mov
pop
push
mov
data16
xlat
scas
xchg
not
ror
xchg
dec
push
cmps
push
sub
and
push
mov
dec
in
and
or
leave
inc
test
loopne
adc
cmp
pop
data16
mov
pushf
adc
jb
mov
cmp
mov
iret
dec
(bad)
pop
add
cmp
fist
push
inc
adc
movs
std
jo
aaa
clc
sbb
rol
jp
loope
push
sbb
mov
cmp
xchg
dec
out
xchg
hlt
jne
je
scas
push
or
sub
enter
outs
lea
push
cmp
fnsave
sbb
or
stos
pop
dec
mov
xor
or
loope
cdq
adc
cld
imul
(bad)
push
pop
fstp
fild
ins
adc
cli
jle
sub
ss
pop
add
in
das
shl
test
aad
gs
dec
push
es
aam
gs
sbb
cmp
(bad)
fmulp
mov
test
ins
xor
je
out
je
sti
out
jno
mov
and
(bad)
mov
sub
jg
(bad)
retf
jbe
xlat
lahf
add
cmp
inc
shl
push
and
add
inc
nop
pop
xchg
cmp
iret
cli
jecxz
retf
rcr
loopne
or
cmp
mov
mov
iret
dec
cmps
retf
and
cmp
and
push
shl
iret
shr
push
das
add
cmp
stc
adc
rcl
clc
pop
dec
es
scas
mov
xchg
int3
into
dec
retf
mov
jle
in
push
daa
mov
or
mov
adc
inc
or
(bad)
jecxz
cmp
ja
call
arpl
adc
xor
dec
mov
adc
stc
stos
push
aaa
cs
movs
and
jo
mov
pop
lods
sbb
adc
xchg
xchg
mov
push
rcl
outs
mov
mov
push
stc
je
lods
ins
xor
dec
cs
cmp
xor
cli
inc
mov
in
or
(bad)
mov
mov
leave
adc
inc
je
push
push
(bad)
pop
cli
ret
push
inc
cmps
call
mov
dec
pop
adc
rcl
sti
in
mov
jg
sar
add
imul
jo
lock
pop
cmp
js
or
mov
jge
pop
ins
pop
(bad)
jmp
inc
lods
lds
adc
call
sar
out
cli
clc
adc
in
adc
jp
jmp
ret
fwait
add
xchg
push
mov
or
sti
sti
push
scas
ss
push
mov
shl
jnp
sub
mov
aam
inc
dec
fmulp
dec
xchg
popf
and
(bad)
jl
push
push
idiv
mov
mov
test
jmp
push
mov
mov
sub
push
leave
(bad)
lods
ss
add
icebp
popf
adc
scas
and
cwde
clc
xor
mov
out
sub
cmp
adc
fld
call
jbe
mov
jnp
or
pop
outs
call
jge
cmp
lods
aaa
leave
inc
and
xlat
shr
dec
ins
lods
inc
or
fadd
adc
add
sub
pop
xchg
fsubr
pop
mov
out
pop
xchg
add
jnp
outs
mov
stos
pop
adc
stc
loope
shl
daa
neg
out
xchg
cmp
ret
sbb
addr16
sub
fisttp
lods
xchg
test
jmp
dec
loop
scas
sbb
sub
push
js
retf
test
xor
das
das
sub
push
inc
out
(bad)
ds
xchg
daa
sbb
test
sub
mov
je
mov
imul
mov
ja
ins
test
cmp
movs
xchg
sbb
(bad)
jns
inc
loop
or
scas
mov
addr16
lahf
shl
xlat
test
jge
jbe
pop
ins
sar
jmp
push
rol
jp
ja
rcr
mov
jnp
je
out
sti
(bad)
jns
pop
repz
cs
je
(bad)
adc
(bad)
sbb
xor
mov
in
sub
push
lahf
inc
or
popa
aaa
xchg
imul
sbb
ja
clc
xchg
or
mov
inc
inc
mov
out
dec
out
dec
inc
inc
fwait
add
ins
dec
jo
pop
gs
leave
es
xchg
inc
shl
test
jae
dec
jg
test
xchg
jnp
aas
inc
jo
jl
lods
mov
loopne
xor
xchg
mov
call
jne
adc
inc
scas
jae
jle
nop
and
push
(bad)
sbb
data16
dec
idiv
dec
loope
fwait
int3
cmps
dec
outs
ds
jmp
test
cmc
inc
mov
pop
dec
out
xor
pop
jecxz
mov
pusha
xchg
cs
(bad)
jmp
cmp
xor
ficomp
rcr
sub
movs
in
imul
into
xor
sbb
jl
xor
or
ret
outs
push
sti
mov
fisttp
bound
das
shl
or
jbe
fnsave
sbb
sbb
mov
and
hlt
mov
out
bnd
and
adc
sub
inc
sub
aas
into
mov
dec
shr
arpl
fcmovne
in
repnz
xchg
add
test
rcl
in
push
loope
push
and
dec
das
push
mov
sbb
fwait
cmp
inc
jmp
sbb
iret
imul
jmp
jecxz
pop
movs
aam
or
pushf
in
xor
imul
and
dec
inc
add
xor
cmp
cmp
push
xor
dec
add
mov
xchg
sbb
mov
lahf
out
out
int
in
shl
push
in
js
xor
pop
sub
xor
lea
lods
out
sbb
pop
push
movs
cmp
inc
lods
xchg
int3
rcl
cmp
aam
stc
cmp
add
mov
pop
and
fwait
pop
xchg
lods
xchg
mov
int3
aas
dec
loop
pop
sbb
push
mov
mov
mov
push
outs
jnp
cmp
sbb
call
pop
in
cmp
jge
push
sahf
retf
(bad)
xor
adc
ret
pop
jmp
stc
pusha
xor
fwait
sub
and
mov
add
mov
fldenv
aas
mov
mov
rol
test
jmp
js
pop
enter
test
xchg
pop
out
(bad)
sub
(bad)
xchg
ss
jbe
push
clc
int3
pop
cmp
cmp
mov
aaa
call
test
sub
cmp
and
xchg
aam
sti
mov
mov
arpl
pop
jecxz
jb
out
mov
mov
into
test
loopne
repz
pop
dec
add
ja
push
(bad)
iret
out
push
mov
sbb
or
cmps
shl
stc
sbb
push
cs
push
mov
mov
(bad)
add
mov
es
adc
scas
cmp
hlt
js
push
xor
mov
inc
add
jecxz
dec
mov
mov
ins
leave
addr16
cs
cmp
inc
call
xor
pop
adc
jp
xchg
push
movs
cld
test
xchg
mov
daa
ins
nop
popf
inc
imul
mov
pop
jmp
cs
mov
cmc
push
mov
add
ins
add
adc
push
jg
outs
mov
es
jbe
mov
fisttp
jo
popa
mov
inc
ins
xchg
into
aam
adc
mov
mov
mov
iret
add
mov
ins
mov
fidiv
xchg
add
std
cmps
jmp
jl
push
loopne
fcmovu
(bad)
into
retf
add
inc
or
jo
in
ja
push
dec
(bad)
sbb
and
scas
in
ret
add
push
jp
dec
jne
(bad)
dec
daa
sub
mov
sbb
fisttp
mov
iret
jg
cmp
cmps
mov
adc
push
aaa
cmp
and
and
enter
cdq
fwait
xchg
adc
imul
xlat
xor
es
mov
or
sub
push
(bad)
call
jge
fwait
ret
xor
ins
dec
inc
or
mov
jae
fwait
add
pop
adc
pop
clc
ss
je
jo
jge
loopne
inc
es
adc
xor
into
sub
bound
aam
movs
xlat
aam
sub
cmc
ins
mov
fistp
jnp
adc
nop
ds
mov
loopne
lahf
push
mov
jl
outs
arpl
inc
push
add
pop
nop
push
out
fnsave
dec
mov
popa
dec
push
les
cmp
in
enter
jmp
daa
test
xlat
jecxz
ret
xchg
leave
mov
jp
sti
pop
das
pop
or
jo
repz
ss
fidiv
mov
pop
dec
add
xchg
xchg
mov
les
push
fimul
ja
adc
not
cmp
pop
dec
scas
mov
push
and
out
sbb
push
jnp
repz
jmp
mov
jle
loope
retf
stos
push
sub
ret
push
add
es
fld
(bad)
call
gs
cmp
and
push
pop
ins
mov
push
mov
cmp
cmps
pusha
adc
icebp
imul
sar
mov
not
repnz
dec
icebp
inc
lods
mov
iret
out
cdq
sti
jg
cwde
mov
mov
imul
in
shl
outs
adc
fild
(bad)
push
in
gs
shl
and
inc
mov
shr
adc
out
and
lock
add
fs
call
pop
es
stos
xchg
test
movs
mov
fucom
fild
leave
cmp
push
cdq
add
test
lock
mov
sar
jp
and
stos
adc
xlat
sub
fst
xchg
(bad)
jge
adc
inc
push
add
inc
in
adc
sbb
dec
(bad)
imul
and
in
adc
scas
push
mov
cmp
pusha
fcom
fwait
mov
je
aad
mov
push
sbb
pop
sbb
jmp
adc
mov
(bad)
int
(bad)
cwde
shr
inc
push
pushf
aas
sub
add
add
or
iret
dec
jmp
sbb
xchg
jb
xor
jb
adc
(bad)
aas
mov
aam
jp
cmp
test
push
cwde
sub
mov
out
push
push
inc
inc
mov
mov
xchg
xchg
(bad)
outs
sti
mov
dec
and
jl
leave
or
inc
pop
dec
aaa
popf
push
mov
inc
shr
repz
push
push
clc
sti
adc
ins
mov
addr16
jne
inc
lahf
cld
push
and
push
and
in
cmp
ret
hlt
(bad)
mov
mov
mov
dec
fsubr
dec
fcomp
inc
push
jg
push
cmps
daa
cmp
mov
sub
(bad)
xlat
sar
(bad)
rol
jg
add
and
loope
pushf
adc
jo
lahf
jmp
loope
and
push
inc
and
mov
imul
add
add
ins
cmp
cmp
xor
inc
sub
sbb
ss
mov
(bad)
dec
ret
and
mov
(bad)
(bad)
sti
enter
sar
fneni(8087
icebp
and
and
sar
in
ficomp
shr
mov
fs
sbb
push
push
ficom
pop
mov
jle
mov
mov
(bad)
stc
data16
ins
adc
mov
jae
cmp
test
pop
bound
jo
and
call
push
retf
mov
push
xchg
fsub
mov
loopne
(bad)
(bad)
push
xchg
push
(bad)
(bad)
iret
sbb
ja
push
cs
cdq
or
inc
nop/reserved
pusha
test
hlt
in
(bad)
dec
fistp
push
mov
jbe
add
out
jmp
scas
inc
sti
int
dec
jge
jecxz
sub
lods
retf
push
inc
add
stos
sbb
fwait
cmp
lods
and
push
loopne
shl
mov
xor
pop
sahf
out
cli
les
add
es
pop
push
pop
fsub
and
arpl
xlat
dec
fsub
out
mov
pop
icebp
lock
jmp
arpl
sahf
dec
add
icebp
out
cwde
stos
pop
dec
int3
stos
in
repz
push
sbb
dec
cmp
dec
repnz
dec
movs
xor
or
adc
(bad)
lea
cmc
(bad)
mov
sbb
out
imul
mov
repnz
dec
mov
jg
repnz
mov
mov
adc
push
pushf
repnz
push
and
push
mov
jns
(bad)
mov
je
cmovnp
xor
je
or
xchg
out
xor
pop
xchg
in
push
pop
xchg
mov
jmp
sbb
or
movs
(bad)
hlt
es
ins
mov
mov
cmp
(bad)
shr
xor
loop
in
rol
pop
sbb
and
pop
mov
xor
xor
in
ja
mov
pop
scas
lfs
inc
cli
mov
mov
mov
clc
clc
pop
aam
mov
or
cwde
lea
jae
dec
mov
sub
mov
sub
mov
(bad)
mov
mov
cmp
enter
sub
jns
in
or
cdq
out
ds
mov
jns
aam
xchg
push
out
and
xchg
sub
outs
idiv
sub
ss
rol
sub
dec
cld
inc
popf
cli
adc
jg
arpl
or
movhps
xchg
jmp
add
mov
in
ja
fistp
or
jnp
pop
fstp
xchg
lea
mov
mov
mov
jb
mov
xor
push
jmp
out
pop
jb
jl
out
(bad)
cmp
adc
sub
retf
int3
jecxz
sbb
sub
adc
nop
stos
inc
pushf
mov
sbb
jge
and
mov
xchg
mov
test
or
add
jge
push
mov
sbb
test
dec
xchg
adc
iret
pop
push
das
dec
xchg
lea
iret
and
inc
sbb
add
lock
push
das
and
(bad)
out
push
and
push
xchg
inc
test
retf
mov
pop
fadd
pop
mov
mov
sub
lea
ror
mov
xchg
cmp
dec
daa
adc
xchg
bound
cmps
(bad)
mov
(bad)
fwait
sub
iret
popf
enter
adc
inc
dec
cmc
adc
cmp
cld
dec
leave
cmps
enter
xor
out
sar
test
sbb
lods
leave
int3
lock
cwde
mov
cmps
add
mov
pop
sbb
xchg
mov
mov
les
test
movs
push
es
sti
mov
mov
mov
movs
arpl
les
das
xchg
xor
scas
mov
inc
scas
call
and
js
sbb
vprotb
pop
pop
cmp
retf
test
cli
add
pop
fidiv
fidivr
and
das
ins
add
mov
push
inc
dec
in
pusha
(bad)
std
cld
jle
cmps
int3
pop
add
sbb
in
test
adc
je
rcl
sub
xor
(bad)
jmp
lahf
mov
mov
test
cmp
inc
popa
cmp
mov
in
push
cmp
stos
std
fs
aam
enter
mov
pop
icebp
test
iret
inc
ret
mov
pop
add
aad
das
pop
gs
mov
xchg
dec
jns
pop
fimul
(bad)
mov
dec
out
xchg
jecxz
scas
dec
jno
scas
mov
rol
adc
sbb
idiv
and
mov
jecxz
ins
or
leave
cld
mov
dec
pusha
cmp
ins
clc
(bad)
es
inc
aas
js
xchg
pop
rcr
retf
hlt
movs
xchg
mov
sahf
shr
add
cmp
in
shl
sbb
inc
push
or
(bad)
not
dec
aas
(bad)
fiadd
xchg
icebp
sub
stc
xchg
mov
pop
popa
xchg
rcl
mov
ja
ins
nop
xor
mov
jmp
and
loop
pushf
stc
and
cld
xchg
int3
push
lods
in
scas
xchg
sub
mov
stos
lods
ins
sbb
xchg
stos
or
inc
inc
and
ror
ror
sahf
inc
std
aaa
push
xor
in
and
and
movs
sbb
pop
or
mov
repnz
adc
pushf
je
pushf
jno
loop
and
mov
xor
loope
test
popa
fisubr
add
push
and
loope
ds
pop
or
rol
adc
fs
jo
or
push
cmps
gs
lock
arpl
push
xchg
xchg
mov
add
sar
cs
push
lods
lds
jge
pusha
lds
test
das
outs
ret
fild
pop
jmp
stos
mov
or
mov
int
in
in
ficomp
clc
lea
loopne
dec
popf
loop
sysenter
xchg
pop
push
repz
sbb
adc
jbe
pop
mov
(bad)
and
and
das
mov
jno
loope
out
jl
mov
xor
(bad)
or
pop
retf
loope
xchg
or
shl
es
mov
adc
repz
or
sub
jecxz
out
sub
icebp
mov
sbb
inc
iret
data16
out
(bad)
ret
pop
xchg
(bad)
scas
lds
cwde
std
fsubrp
cld
imul
dec
lods
iret
mov
and
clc
(bad)
je
daa
sahf
xlat
aam
lahf
retf
fsubr
mov
mul
cld
xlat
cmc
xchg
sub
test
into
inc
loope
adc
sub
cdq
stc
sbb
mov
jl
pop
push
leave
inc
mov
lods
out
xchg
loop
loop
dec
jnp
fbld
outs
fidivr
ror
cmp
les
cmp
test
inc
mov
dec
into
lds
pop
mov
mov
ins
sub
and
imul
xchg
jmp
iret
xor
ret
inc
shr
sti
out
cmp
jmp
pop
ja
in
aad
pop
jmp
div
popa
mov
addr16
scas
inc
mov
lock
ja
js
inc
mov
sub
add
imul
adc
rcr
shr
mov
aaa
mov
ret
xchg
in
pop
mov
mov
test
push
pop
test
mov
add
les
sbb
mov
sti
gs
dec
cs
(bad)
clc
je
mov
int
lds
loop
xlat
icebp
shr
xor
mov
sbb
mov
aaa
popa
orps
leave
push
add
repz
dec
(bad)
jge
and
pop
pop
xchg
sbb
(bad)
ins
add
out
(bad)
into
psraw
cmps
sahf
pop
dec
dec
arpl
jne
inc
call
leave
mov
mov
mov
lahf
adc
xchg
(bad)
push
loopne
mov
mov
or
mov
pop
enter
sub
xor
or
jo
mov
push
imul
scas
sbb
cmp
jno
call
sub
cld
cmps
push
inc
push
in
dec
inc
adc
and
outs
xchg
(bad)
lock
loope
rcr
mov
pop
xchg
js
int3
or
push
leave
repnz
mov
shl
jae
pop
xchg
pop
push
xchg
cmp
cdq
cmps
rcr
mov
sbb
push
fild
xchg
mov
sub
mov
mov
jle
not
add
cmps
and
mov
adc
imul
dec
jmp
xchg
ret
ret
sar
into
into
(bad)
inc
pop
lds
ret
ret
mov
out
imul
sbb
xchg
cwde
and
jns
mov
ins
xchg
dec
sbb
xchg
jmp
mov
cmp
fcmovnbe
push
adc
mov
add
outs
jg
xchg
icebp
(bad)
mov
(bad)
stc
mov
xchg
int3
sbb
outs
add
jg
ins
shl
mov
cmp
xchg
rol
cmp
std
cmps
je
push
ds
cmc
ret
jg
cmp
add
mov
jnp
jl
inc
in
cmp
xor
adc
push
ret
pop
call
stos
jbe
nop
or
dec
lods
sbb
mov
shl
call
lahf
les
stos
pop
(bad)
or
pop
and
mov
dec
rol
test
retf
mov
jle
jmp
jecxz
or
stos
ins
or
daa
(bad)
hlt
mov
mov
and
in
pusha
in
repnz
add
sub
sbb
(bad)
mov
sbb
call
sbb
mov
inc
sbb
mov
inc
ds
icebp
xchg
adc
stos
mov
inc
xchg
out
clc
stos
rcl
push
jns
dec
dec
outs
xor
inc
lea
cmps
sbb
xchg
outs
ss
lock
mov
outs
cmp
mov
stos
lods
pop
in
add
push
loopne
test
icebp
aad
add
cli
inc
jbe
xchg
lods
mov
xchg
rol
mul
jno
jp
xor
push
xor
push
pop
sub
pushf
inc
xchg
pop
ret
into
mov
xchg
lods
imul
fucomip
jmp
xchg
pop
xchg
inc
xchg
cmp
lea
and
mov
stc
sub
xlat
dec
pop
sbb
fwait
mov
sub
xchg
out
mov
dec
jecxz
bound
ds
aad
test
push
push
fbld
aas
outs
mov
repnz
retf
rol
ja
movs
test
in
hlt
loopne
neg
je
ror
add
movs
push
sub
cmps
out
dec
sbb
pop
xchg
ins
aad
dec
adc
add
inc
cmps
adc
adc
pusha
shl
xchg
sub
sub
mov
fisttp
xlat
cmp
clc
add
loope
mov
xor
or
adc
pushf
js
in
fmulp
or
jge
in
enter
rol
loop
xchg
stc
icebp
xchg
lea
ror
xchg
fisttp
cmp
arpl
pop
in
mov
scas
adc
inc
repz
add
aaa
sar
dec
cwde
or
add
pop
imul
sub
or
mov
push
mov
outs
mov
jne
sahf
(bad)
jno
data16
in
stos
shr
mov
jne
mov
mov
lock
das
pop
dec
xor
sub
sub
sbb
loopne
sbb
ins
scas
pusha
push
in
call
aam
add
in
cld
dec
lahf
iret
call
cld
aas
xchg
jo
pop
in
popf
hlt
cmp
loope
outs
gs
repz
dec
in
cwde
retf
mov
out
inc
or
add
dec
je
cwde
movs
mov
lahf
mov
retf
loope
push
jge
out
and
int
sub
adc
or
mov
inc
outs
jl
rcr
mov
popa
movs
xchg
sbb
pop
and
ins
cmp
pushf
inc
fcom
sub
cmc
inc
sbb
inc
jns
adc
nop
fdiv
nop
and
ret
mov
sub
pushf
push
inc
cmp
sub
adc
dec
cli
sti
cmc
xor
lds
mov
jge
mov
aaa
push
pop
mov
pop
cmp
xchg
or
adc
rcr
inc
jmp
jg
(bad)
imul
cdq
push
mov
les
(bad)
ret
add
aas
push
xchg
or
pushf
xchg
jle
repz
cmp
inc
mov
scas
dec
and
loope
jecxz
retf
adc
loope
mov
inc
mov
aad
lock
sbb
fcmovnb
or
out
push
pop
pop
xchg
sbb
ins
cs
mov
mov
xor
ins
mov
fild
jmp
nop
pop
rcl
sub
pop
retf
addr16
ret
xchg
and
inc
jne
shl
stc
jmp
xor
fdivr
or
or
mov
pop
loop
dec
loope
dec
jle
cs
pushf
repnz
mov
pop
push
outs
out
div
jecxz
movs
add
pop
pop
out
push
aam
jnp
ins
mov
repnz
lods
dec
ins
push
add
mov
mov
mov
sahf
lods
pop
int3
mov
repz
cmp
push
test
(bad)
lds
jle
fs
fbld
cdq
inc
mov
adc
imul
rol
jmp
adc
pop
xor
push
cdq
(bad)
or
push
sbb
jmp
aaa
mov
pop
mov
xchg
mov
mov
dec
fwait
(bad)
or
cmp
int
adc
push
push
lock
xchg
add
mov
dec
jne
pop
rol
pushf
les
int
jbe
sub
into
fistp
jge
xchg
bnd
inc
fnstenv
and
push
jg
shr
inc
mov
dec
test
jmp
aaa
imul
fadd
stos
repz
mov
jne
out
cmc
mov
(bad)
dec
jae
mov
xchg
in
jp
int3
sahf
xlat
add
jg
sbb
out
shl
(bad)
cmp
aad
and
(bad)
fild
push
mov
out
inc
adc
mov
mov
cmp
inc
add
cwde
push
lahf
sbb
push
(bad)
ror
fsubr
shr
push
ss
sub
loop
sahf
mov
pop
and
mov
ds
test
cs
sbb
add
cmp
dec
mov
sar
fild
stos
shl
sub
xor
lds
or
fs
or
and
or
or
test
lods
scas
ja
call
cmp
push
xor
sub
ins
inc
bound
pop
(bad)
jae
push
je
into
and
repz
loopne
lea
mov
rcr
sub
ja
lea
push
cmps
dec
sbb
bound
iret
or
(bad)
(bad)
in
add
dec
stos
jecxz
xor
inc
cdq
xchg
cmp
loopne
iret
jle
and
push
jmp
and
jb
xchg
mov
aam
repz
cmp
xchg
neg
hlt
dec
pop
push
cmp
pop
push
idiv
fcomp
gs
(bad)
mov
repz
xor
push
sub
dec
mov
ja
add
push
or
xchg
pop
xchg
jno
scas
sbb
add
int
hlt
inc
fild
out
fs
dec
inc
bound
pop
push
and
or
and
push
xchg
mov
mov
loop
dec
adc
cmp
jmp
mov
cwde
popf
sbb
mov
popa
(bad)
loop
mov
fiadd
cld
xlat
gs
clc
xor
jno
mov
stos
repz
inc
test
les
data16
les
int
dec
sub
xchg
sbb
neg
ror
and
lods
cmp
mov
mov
pop
add
test
inc
jg
test
rcr
push
adc
sub
fmul
scas
jb
lods
sub
mov
mov
mov
mov
inc
pusha
mov
and
push
dec
cmps
xchg
pop
adc
into
imul
sbb
sub
mov
into
inc
push
inc
mov
xchg
fs
iret
mov
xchg
mov
lds
les
out
fldcw
xchg
pop
or
push
jnp
mov
movs
or
mov
inc
jmp
cmp
mov
jle
mov
ins
push
pop
loop
repz
sbb
dec
stos
xor
ret
fs
lahf
lock
in
std
mov
aas
lods
add
mov
and
test
pop
cmp
loope
lds
sahf
sbb
ds
rcr
mov
cmps
out
aad
enter
or
xchg
jns
imul
jne
or
mov
dec
out
xor
iret
ins
rcl
movs
test
mov
out
(bad)
pop
std
add
pop
dec
aad
jle
aad
or
adc
mov
ins
popa
je
inc
cmps
push
jecxz
push
movs
shl
dec
push
(bad)
sub
into
into
add
cld
dec
xor
sub
movs
push
cs
add
test
stos
lahf
mov
jmp
push
arpl
out
iret
sbb
stos
sbb
mov
stos
(bad)
imul
xchg
(bad)
mov
je
loope
ret
mov
jecxz
pop
lds
out
outs
int
mov
xchg
out
push
les
xchg
loopne
gs
ja
or
test
jae
lahf
inc
and
dec
mov
jno
mov
xor
cmp
jne
pop
retf
mov
ds
dec
outs
mov
fwait
push
in
mov
mov
in
call
push
out
clc
push
mov
pop
xor
sbb
daa
scas
push
cmp
stos
cmp
jno
push
scas
rcr
add
bound
jecxz
test
fisubr
adc
cmps
shl
mov
sbb
pushf
jecxz
adc
loop
(bad)
neg
add
push
xor
mov
popf
mov
xchg
mov
jl
clc
lahf
sub
pop
xor
jne
push
or
and
and
int
xor
cs
push
shl
ret
add
mov
adc
jno
ss
test
sub
mov
and
or
rcl
or
push
jecxz
push
icebp
jne
jmp
push
rcr
addr16
or
fnstsw
dec
leave
pop
dec
inc
xor
jns
inc
mov
sub
sahf
jnp
loopne
inc
mov
xchg
fwait
or
mov
gs
ja
stos
pop
gs
cs
cmc
out
(bad)
mov
vpmuludq
adc
inc
and
mov
add
ret
jp
movs
test
data16
and
lods
adc
jp
mov
movs
ret
pop
icebp
fwait
(bad)
test
aaa
sbb
and
(bad)
sbb
or
adc
mov
sbb
push
and
je
mov
test
mov
jbe
ins
aas
inc
xchg
push
ror
(bad)
cmp
xchg
and
mov
and
dec
push
ret
jp
popa
cli
iret
outs
mov
ins
add
in
push
fsubr
and
imul
add
cdq
int
cmp
sub
clc
popf
out
add
push
cmp
xor
cwd
and
and
fst
jecxz
mov
out
dec
and
add
jge
mov
(bad)
jmp
popf
push
shl
bound
and
pop
daa
imul
dec
sub
cs
movs
inc
xchg
stos
pop
pop
fadd
inc
xor
ret
mov
dec
sbb
pop
sbb
cmp
js
popf
jns
cmc
out
clc
mov
aaa
pop
and
push
dec
add
aad
xor
or
(bad)
dec
jle
shl
mov
mov
jo
mov
(bad)
in
popf
cmps
sub
in
add
out
pop
inc
in
(bad)
lods
cmps
and
cmp
pop
or
movs
mov
div
enter
mov
xchg
call
push
xor
push
cmp
popa
mov
call
cmc
adc
or
xor
xchg
inc
xor
mov
inc
scas
stos
dec
fdivr
sub
jl
and
mov
dec
mov
pop
mov
cmp
cmp
aam
arpl
aas
jmp
jno
jne
or
mov
sbb
dec
fsubr
push
fisub
push
into
mov
pop
push
leave
or
arpl
clc
jmp
(bad)
enter
xchg
push
int
xor
out
or
imul
data16
inc
xor
dec
shr
jmp
aas
mov
and
push
test
xor
(bad)
(bad)
xchg
xor
jbe
pushf
(bad)
mov
dec
shl
adc
pop
mov
or
sub
fsub
or
sbb
pop
pop
into
mov
ja
pop
xchg
aas
fmul
jmp
(bad)
cmps
mov
push
loopne
aas
sar
fwait
and
pop
pop
xchg
nop
adc
test
jl
mov
icebp
mov
(bad)
in
scas
adc
mov
sbb
test
sub
repnz
or
(bad)
and
stos
xor
ret
shr
adc
mov
mov
dec
pop
mov
xchg
das
outs
movs
adc
addr16
mov
ins
int3
imul
mov
xchg
lods
cmp
cmps
and
pop
fbstp
add
aas
inc
arpl
pusha
cs
fcomp
sub
call
mov
and
fwait
enter
or
cmp
jmp
adc
cmp
ja
cmp
adc
adc
xchg
push
das
gs
sbb
fwait
(bad)
pop
ret
jno
dec
adc
push
push
sub
in
mov
or
xchg
out
movs
iret
jmp
mov
loope
xor
mov
dec
jne
cmp
ja
mov
push
cmp
add
call
inc
test
push
fwait
cmps
je
sub
aaa
mov
stos
bound
rcl
les
mov
fidivr
cli
cs
pop
fs
mov
sub
push
imul
pop
jg
fcmovbe
fbld
leave
cmps
add
xchg
cs
sub
pop
fdivr
push
cli
cmp
sti
icebp
pop
inc
dec
jl
popf
mov
jp
inc
retf
ins
inc
mov
cs
das
pop
popf
push
pop
scas
cmc
fcomp
inc
push
push
xchg
mov
push
xor
stc
fild
or
or
sub
cmc
aaa
pop
fstp
sbb
or
fs
xchg
push
icebp
lock
mov
sbb
mov
test
mov
retf
mov
xchg
imul
outs
dec
call
xchg
repnz
repnz
rcl
(bad)
push
jbe
retf
nop
div
sub
xchg
push
sar
movs
sbb
jbe
push
(bad)
das
sub
dec
jge
enter
mov
and
mov
cmp
push
pop
xchg
and
fisubr
jo
rcl
mov
das
leave
repz
cld
int
fucomp
outs
push
int3
push
jo
repnz
or
dec
inc
xchg
icebp
push
pop
mov
dec
mov
call
rol
jge
lahf
mov
stos
xchg
adc
or
cmp
ret
adc
add
sbb
mov
mov
out
fnsave
pushf
mov
(bad)
inc
push
shl
jle
pop
mov
inc
pop
jbe
jae
mov
mov
loopne
mov
(bad)
shl
inc
mov
push
loopne
scas
repz
fcmovnbe
cmp
cmp
jp
frstor
cld
shr
xchg
and
or
adc
loop
(bad)
xor
retf
fidiv
sbb
xor
adc
adc
(bad)
xchg
packssdw
pop
sub
lock
xlat
out
pop
dec
mov
enter
enter
push
mov
or
clc
ins
retf
neg
push
popa
inc
test
mov
ds
dec
mov
fs
sbb
mov
pop
inc
dec
sub
xor
cmps
dec
mov
inc
xchg
cmp
sub
jge
pop
jge
pop
sub
pop
imul
cmp
or
dec
push
inc
xchg
cmp
adc
xchg
pop
shl
push
ret
xor
ret
inc
mov
repnz
pop
ins
mov
(bad)
jle
sub
arpl
or
dec
(bad)
rep
mov
ins
or
or
loop
aas
adc
cmps
jle
push
in
rol
cmps
add
ficom
pop
cli
ror
xchg
xchg
imul
adc
push
xchg
jl
xchg
aaa
and
iret
call
fucomi
add
jp
cli
add
fstp
mov
in
lods
push
jnp
and
neg
test
rol
mov
inc
pop
pushf
lods
clc
pop
ins
fisubr
xor
cmp
cmp
xchg
mov
retf
(bad)
adc
lea
jmp
jecxz
pop
out
mov
stos
jb
sbb
xor
ja
pop
inc
icebp
and
inc
fsubr
ja
xor
test
inc
fist
sbb
mov
sbb
add
push
seto
cmp
paddw
test
mov
fist
mov
mov
(bad)
sub
nop
test
fdiv
xchg
or
mov
cmps
push
leave
xchg
ds
enter
mov
clc
je
sub
or
arpl
sbb
jns
aaa
add
xchg
iret
les
dec
out
xchg
xlat
out
rcr
repz
xor
(bad)
pop
iret
xor
mul
sub
push
mov
aaa
clc
fcom
add
ror
jno
cmp
push
pop
sub
dec
mov
test
sahf
loope
aad
cs
fld
les
inc
imul
inc
xor
imul
mov
aas
mov
inc
and
add
jmp
vzeroupper
ret
sbb
leave
push
adc
into
fst
push
pop
push
sub
bound
outs
cmp
aaa
popa
mov
call
int
cmp
push
addr16
mov
cmps
mov
sub
das
movs
popa
rol
loop
fldenv
xor
mov
loope
or
cmps
inc
mov
xchg
popa
and
sbb
dec
sub
nop
fst
loopne
jns
xor
into
mov
or
(bad)
mov
paddsw
sub
sbb
dec
loop
push
jp
or
add
dec
push
js
icebp
iret
sbb
movs
fdiv
inc
push
scas
or
add
imul
jmp
sahf
add
cli
int3
pop
pop
add
sub
outs
call
adc
adc
cmps
jne
clc
jge
push
dec
ins
outs
test
add
cld
or
pop
je
inc
dec
cdq
xchg
sub
mov
cli
push
(bad)
(bad)
stc
push
out
jno
vmwrite
dec
xchg
mov
movs
call
push
and
mov
call
test
ins
mov
test
ins
jg
mov
mov
jle
or
sete
jmp
(bad)
lock
sub
push
and
aas
sub
call
addr16
dec
jns
sub
inc
inc
test
mov
mov
dec
daa
xchg
xchg
js
sub
loop
dec
add
jmp
nop
test
xor
and
dec
inc
cmp
dec
fsubp
call
inc
mov
scas
adc
and
aaa
repz
stc
movs
sub
je
ror
sbb
mov
push
pop
inc
cmp
xchg
cmp
outs
int
cmp
mov
add
shr
xor
stos
das
sbb
push
pop
sub
imul
cdq
mov
cmp
fwait
in
pop
jl
and
lock
mov
lahf
nop
iret
cmps
hlt
jle
leave
mov
adc
call
(bad)
jle
cmps
repz
sbb
or
test
mov
adc
arpl
idiv
push
movs
mov
mov
xchg
js
mov
imul
xor
lock
xor
jne
ins
mov
stos
mov
js
mov
jmp
fst
ror
lahf
imul
cli
jo
stc
repz
mov
and
daa
cmc
xchg
xchg
sahf
out
push
and
cmp
in
iret
mov
cmp
mov
mov
repz
add
daa
inc
sub
xor
ds
push
push
push
pushf
xchg
and
sub
pushf
push
lea
mov
add
lea
pop
enter
xchg
jns
out
fst
fsub
xchg
dec
mov
pop
jns
or
imul
iret
sub
(bad)
mov
mov
mov
ins
loope
pop
inc
push
aad
add
out
pop
sbb
jl
push
mov
lahf
scas
pcmpgtd
xlat
mov
xchg
bound
jmp
sub
mov
pop
mov
inc
lea
sbb
fs
fidivr
jecxz
cs
sub
mov
test
js
add
sbb
or
or
push
loop
pop
fdivr
xchg
(bad)
mov
out
inc
and
push
cmp
jecxz
out
bound
dec
js
push
inc
lds
jne
add
sbb
push
jno
cmps
repnz
fs
jae
(bad)
or
cld
inc
cmc
scas
adc
xor
sub
mov
add
sbb
fisub
pusha
call
out
rcl
add
jmp
pusha
test
xchg
mov
pusha
dec
sahf
lods
enter
(bad)
icebp
pop
inc
sbb
add
adc
call
xor
push
mov
mov
inc
pop
cmps
shr
enter
rol
loope
xchg
xor
aas
outs
cld
or
adc
sub
shl
mov
data16
push
scas
xor
ret
dec
mov
and
out
fs
xchg
out
shr
mov
inc
inc
ins
hlt
cmps
hlt
dec
scas
sbb
in
je
hlt
sub
xchg
push
mov
push
daa
shl
sub
(bad)
sub
lods
cdq
cmp
and
xchg
sbb
xlat
mov
add
and
pop
loope
xor
popa
ror
movs
mov
xchg
cli
int3
adc
xchg
loop
dec
dec
int3
lea
xchg
xor
into
(bad)
cmp
pop
les
mov
cmc
mov
xlat
add
fs
mov
aas
ss
and
adc
cwde
pop
cmp
mov
repz
cmp
add
int
mov
jge
cmps
and
ret
(bad)
or
inc
test
push
mov
mov
lahf
mov
jle
(bad)
arpl
(bad)
nop
cmc
and
or
mov
cmp
sti
fistp
dec
xor
cmps
idiv
(bad)
sar
mov
and
add
jl
js
and
fst
adc
ins
repnz
add
repz
mov
or
ins
popf
scas
stos
inc
test
fcmovbe
call
jmp
pop
and
add
dec
sar
xchg
cdq
mov
sbb
cmc
pop
xchg
hlt
push
jecxz
inc
imul
mov
sub
test
mov
mov
repnz
push
cwde
inc
movs
pop
sbb
xor
xor
push
xchg
ret
in
pop
inc
push
out
mov
test
ret
sub
push
(bad)
lahf
test
sbb
sbb
mov
in
fdivp
mov
(bad)
lods
movs
das
mov
sbb
dec
jecxz
sub
push
xchg
rcl
adc
mov
fdivrp
rcr
cmp
mov
loopne
int3
nop
int
repnz
lea
jl
cmp
ret
stc
mov
adc
test
(bad)
imul
mov
and
mov
sti
jmp
mov
inc
push
scas
push
push
push
cmp
pushf
cmp
mov
sub
add
sub
in
adc
invd
pop
inc
add
jl
jle
inc
mov
pop
lea
push
sbb
nop
cmp
jns
xchg
push
cmp
and
shr
push
adc
mov
stos
icebp
xlat
mov
cld
cmps
and
(bad)
fsubr
(bad)
pop
outs
fwait
or
in
out
daa
ins
js
jb
push
daa
ret
jmp
imul
dec
aad
push
xchg
mov
dec
in
aaa
mov
mov
push
pop
jle
imul
xor
xchg
pop
cmp
mov
daa
sbb
dec
ret
adc
mov
test
test
adc
outs
lahf
push
lods
mov
loopne
add
aad
js
jo
call
xchg
sbb
fcmovnu
add
or
inc
repnz
mov
sub
xchg
jnp
jmp
fstp
popa
dec
adc
push
call
mov
pop
gs
and
jp
cmc
adc
xlat
push
or
inc
mov
aas
sbb
sbb
lods
add
mov
pop
jbe
bound
mov
dec
mov
mov
data16
test
jnp
out
push
bound
pop
jo
rol
sub
cmp
pop
xor
jne
xlat
and
icebp
loope
inc
and
mov
jmp
xchg
clc
frstor
out
cli
push
mov
add
fisubr
push
sub
aam
inc
fsubrp
xor
popf
adc
movs
or
mov
jge
cli
add
sbb
or
inc
inc
ficom
jns
daa
cmp
or
xchg
rcl
gs
pop
stc
add
adc
div
imul
mov
mov
jae
daa
cmp
hlt
jmp
jne
jmp
lods
pusha
sahf
adc
adc
mov
or
xor
mov
leave
adc
adc
aas
mov
inc
push
sbb
inc
mov
test
(bad)
in
mov
mov
data16
and
cmps
pop
add
ss
cli
push
and
and
cmp
cmps
sbb
aad
jl
dec
xchg
into
xchg
sbb
cli
mov
sub
adc
addr16
mov
(bad)
adc
mov
pop
sub
ss
mov
push
or
sub
mov
pop
iret
mov
mov
cmc
adc
test
fs
add
in
mov
inc
jl
mov
or
(bad)
cs
enter
xchg
or
or
xor
inc
pop
out
push
sub
mov
xchg
jge
mov
(bad)
rcr
sub
mov
lahf
rcl
and
inc
pop
jb
pop
test
test
ret
pop
mov
sub
sbb
push
fld
xchg
add
out
sub
dec
dec
mov
add
sbb
in
inc
push
and
and
sbb
aam
sti
loope
imul
xchg
inc
pop
cdq
leave
enter
mov
in
out
xor
lea
push
mov
inc
ins
cmp
scas
in
mov
push
ins
jae
daa
xchg
ficomp
das
dec
push
inc
aaa
cmp
hlt
mov
jno
jmp
inc
loopne
mov
shl
cmps
inc
pop
mov
sub
test
cwde
mov
stc
or
xor
popf
jp
push
aad
mov
xor
pushf
fisub
and
jno
test
int
pop
xor
mov
adc
add
jbe
adc
sbb
inc
les
jae
cli
lods
xor
sub
stos
push
mov
fsubr
dec
sub
inc
or
adc
mov
sbb
dec
jnp
cmp
push
hlt
add
pop
cmp
push
push
sti
xchg
pop
das
repz
(bad)
iret
imul
push
ret
jp
jmp
in
in
add
inc
sub
or
xor
sbb
jo
inc
inc
or
add
je
hlt
or
out
pop
int
cld
cmc
xchg
dec
push
test
nop
stos
int
cmp
fstp
jbe
test
mov
cmp
push
clc
push
jo
or
sub
push
hlt
and
add
pop
imul
push
mov
fistp
push
mov
mov
js
ror
icebp
push
and
out
xchg
xchg
push
pop
aaa
jmp
mov
push
test
popa
adc
shl
iret
dec
cmp
ds
jbe
mov
mov
pusha
cmp
dec
daa
jb
sti
lahf
lahf
int3
(bad)
cmp
xchg
setns
imul
xor
fnstsw
push
adc
sti
sbb
addr16
int
jns
inc
jnp
std
sti
inc
mov
jg
push
inc
gs
and
xchg
sub
jmp
retf
xchg
cmc
fisttp
pop
push
cwde
mov
dec
fistp
pop
and
jo
mov
mov
arpl
in
mov
inc
loop
lahf
test
sbb
out
fstp
adc
retf
call
jo
lock
sbb
loope
lds
movs
jge
jmp
(bad)
leave
movs
cmp
loope
popa
fucomi
fidivr
or
shl
(bad)
cmp
retf
pop
and
inc
cmp
sar
int3
scas
pop
(bad)
outs
(bad)
clc
push
mov
imul
test
cmp
and
add
in
lds
xor
pusha
in
stc
mov
pop
nop
out
jp
movs
data16
enter
outs
lock
inc
retf
retf
pop
lea
ror
gs
xor
in
lock
sbb
mov
test
fsubr
pop
add
repnz
push
push
test
cmps
pop
mov
jg
movs
scas
cld
pusha
inc
jg
mov
arpl
pop
xchg
add
pop
mov
ins
dec
mov
mov
gs
mov
mov
loopne
jae
pop
push
in
cmp
push
xchg
mov
iret
pop
push
mov
sbb
stc
dec
fld
sub
dec
(bad)
dec
imul
out
cdq
cmp
jg
outs
(bad)
mov
movs
jge
out
push
mov
scas
cmps
inc
(bad)
sub
jo
inc
aam
xor
cmc
add
sbb
jmp
mov
scas
and
push
mov
push
jno
jns
pop
stos
daa
dec
sahf
push
jbe
xchg
or
push
aas
push
inc
jno
aam
in
(bad)
or
retf
jle
and
lock
or
test
je
inc
jmp
mov
inc
mov
es
mov
xchg
or
lods
mov
stos
mov
sbb
sbb
es
aam
adc
sub
pop
std
lea
call
push
fbstp
push
mov
pop
cmps
sub
sub
outs
jae
xchg
(bad)
xchg
call
dec
test
in
sbb
(bad)
mov
bound
jnp
loope
sub
mov
push
dec
inc
mov
sub
push
jbe
xor
loop
xor
xchg
es
test
dec
dec
lods
cld
dec
ins
aas
sbb
jp
jmp
mov
inc
aam
push
cli
lods
sub
ror
xchg
hlt
and
jecxz
fdivp
dec
in
nop
loopne
nop
and
mov
cmp
and
sbb
mov
dec
jae
int3
lods
or
and
jle
push
call
add
mov
sub
inc
mov
mov
push
xchg
pop
mov
sub
xchg
jmp
mov
jge
(bad)
push
push
call
push
push
in
out
pop
in
and
push
sub
lock
or
(bad)
pop
mov
aad
mov
ss
add
rcl
test
outs
add
leave
inc
fs
loopne
mov
jp
retf
ficom
aaa
push
or
mov
xor
lods
adc
dec
pop
imul
aaa
or
mov
ins
jno
xchg
or
retf
in
jle
mov
adc
jb
scas
ror
rol
retf
hlt
pusha
add
rcl
jno
mov
mov
push
and
push
and
shl
mov
jle
leave
adc
jae
sub
mov
push
aaa
aaa
fisubr
ja
stc
fst
shl
arpl
inc
jno
mov
test
jns
cmp
dec
jl
data16
movs
push
arpl
sub
mov
int3
sub
xchg
into
inc
mov
retf
es
pop
dec
out
sub
cwde
jge
jl
pop
dec
jmp
(bad)
scas
mov
in
push
mov
in
pop
out
and
aaa
movs
fsubr
and
mov
ss
mov
repz
retf
or
(bad)
rol
xchg
mov
mov
jo
(bad)
mov
push
inc
mov
rcr
adc
out
dec
jb
pop
xchg
shr
cmp
jb
mov
sbb
cld
idiv
mov
inc
das
adc
push
add
jb
dec
popa
and
dec
inc
jge
test
or
add
mov
push
aas
lds
inc
xor
sbb
enter
pop
inc
enter
(bad)
fld
pop
xor
jle
rcr
into
pop
and
cmp
jge
call
adc
pop
pop
icebp
fs
adc
aad
xor
sub
dec
pop
jne
add
pop
cs
xchg
xor
hlt
cmp
imul
mov
push
and
mov
cdq
or
cmp
push
mov
fcom
push
push
xchg
jb
pop
test
loope
cmp
(bad)
aam
adc
push
pop
rcr
xlat
loope
cmp
pushf
xchg
retf
pop
add
pop
push
adc
test
test
mov
xor
add
mov
fstp
ds
pop
mov
je
sub
pop
mov
cmp
out
ss
xchg
out
adc
je
cld
lods
inc
in
xchg
or
ror
add
mov
scas
and
outs
pop
loopne
lock
and
lds
cmc
mov
cmps
fwait
mov
cdq
cs
stc
je
add
and
fisub
mov
push
mov
rcr
inc
das
lock
jge
es
push
movs
out
cmp
add
daa
enter
mov
das
fmul
jno
mov
les
and
inc
pop
dec
test
call
add
add
mov
test
stc
movs
mov
lea
push
push
in
retf
xchg
movs
jle
cdq
sbb
dec
int
ja
sbb
sti
stos
ror
fwait
cmp
cmp
xor
pushf
rol
xor
jo
and
lds
ja
push
pop
or
dec
retf
sub
sub
mov
or
lahf
and
not
out
mov
cld
repnz
test
and
dec
inc
xor
push
(bad)
fistp
shl
lahf
js
lods
dec
adc
jmp
mov
cmp
xor
xor
test
lods
ins
and
mov
mov
jno
or
(bad)
aad
sahf
mov
outs
jmp
daa
cwde
(bad)
xchg
out
rcr
push
out
pop
and
aad
ret
mov
mov
mov
adc
scas
es
mov
in
mov
push
ins
(bad)
push
or
rcr
dec
jo
ds
jae
inc
xchg
out
mov
into
inc
out
cmp
jmp
out
call
aaa
xor
dec
out
push
mov
mov
stos
out
(bad)
sub
fs
cmps
(bad)
cmps
xchg
in
cld
or
or
xchg
add
jmp
add
repnz
std
test
mov
fisubr
and
mov
add
push
xchg
push
cs
pop
adc
jl
jmp
dec
ins
pop
fbld
pop
outs
in
pop
cmc
xchg
mov
mov
mov
mov
dec
enter
addr16
jp
add
xchg
or
push
mov
mov
inc
cwde
mov
pop
(bad)
out
movs
pop
add
jp
imul
mov
xchg
call
adc
lock
cld
add
ficomp
sahf
pop
not
xor
mov
movs
jle
(bad)
neg
sub
mov
jecxz
lods
adc
xchg
push
xchg
jl
outs
call
push
mov
lds
outs
jle
clc
or
xor
loope
ror
mov
pusha
cmps
add
test
and
sub
mov
jns
shr
das
pop
xor
inc
sbb
xchg
bound
ror
shl
mov
jb
and
call
or
xchg
or
popa
or
lds
jmp
ror
int
jb
into
pop
jl
dec
jmp
xor
ins
inc
in
cmp
dec
shl
(bad)
mov
mov
mov
mov
stos
in
mov
jecxz
pushf
mov
xchg
leave
into
stc
mov
into
pop
xchg
dec
popf
les
leave
jmp
add
gs
dec
xchg
push
inc
xchg
call
xor
bnd
xlat
or
mov
adc
ins
mov
mov
mov
cmp
dec
(bad)
xlat
xchg
and
ss
pop
xchg
jnp
fwait
and
pop
mov
lahf
mov
pop
pop
std
pop
inc
test
cmp
movs
sar
mov
lods
or
mov
jmp
add
xor
sbb
in
fs
add
loopne
das
add
cli
adc
mov
xor
repz
xor
jmp
mov
sub
or
push
std
scas
bound
sbb
movs
cmp
lock
xor
fxam
stos
sbb
lea
mov
ret
and
out
xchg
dec
div
cmovp
xchg
ret
and
rcl
cmp
inc
mov
(bad)
call
repnz
(bad)
leave
sub
iret
or
dec
cmp
imul
mov
pop
std
ffreep
sar
sbb
out
fisubr
push
(bad)
adc
dec
mov
adc
movs
cmp
cli
pop
sbb
cs
aam
inc
arpl
pop
sbb
sub
pusha
adc
sub
shr
fs
pusha
add
pop
je
inc
rcr
(bad)
push
or
nop
sahf
lock
add
cdq
pop
icebp
or
mov
rcr
jl
(bad)
and
or
mov
xor
cmp
adc
mov
jb
add
xchg
xor
inc
mov
mov
test
fmul
int3
mov
xchg
mov
sbb
cmp
inc
or
mov
mov
lods
inc
cmp
leave
clc
outs
test
arpl
iret
mov
mov
xchg
sbb
fcomp
add
imul
mov
sbb
sbb
xchg
loopne
dec
popa
add
sbb
jl
sub
ror
pop
mov
sub
cdq
pop
jb
ret
(bad)
movs
inc
jmp
xchg
mov
ins
mov
mov
sub
scas
push
mov
test
mov
push
add
push
sub
lea
pop
and
cmps
or
std
aam
fmul
lea
mov
retf
dec
sub
loop
test
aad
cmp
push
lods
cmp
push
rcl
retf
push
call
pusha
push
xchg
xor
into
dec
iret
outs
sbb
cmp
repz
jmp
jnp
js
loopne
sub
add
aad
add
stc
mov
push
sbb
xor
inc
ret
mov
cmp
xor
jbe
xor
imul
(bad)
into
xchg
xor
pop
push
xchg
(bad)
fdiv
js
add
sub
adc
pushf
sbb
out
es
jbe
or
fisubr
addr16
sub
cmp
lahf
test
xor
lahf
mov
pop
dec
cmp
hlt
and
int
mov
cli
jae
or
xchg
push
mov
les
push
in
lahf
cmps
cmps
std
xchg
scas
movs
jns
xchg
sub
xchg
add
cld
xchg
jbe
leave
ds
iret
inc
int3
addr16
mov
pop
(bad)
xchg
mov
daa
inc
das
(bad)
loop
mov
mov
pop
xor
ficomp
cli
dec
aam
aad
jge
push
sub
jae
push
mov
jp
inc
xor
popf
push
popf
lahf
dec
test
sbb
push
clc
xor
xchg
lods
add
cmps
ins
mov
inc
fdiv
and
test
or
fdivr
iret
int3
sub
dec
frstor
test
add
retf
xchg
cmp
or
in
(bad)
aas
pop
or
sub
cld
xchg
fild
cmps
in
xchg
sub
cld
mov
sbb
and
push
xlat
in
dec
mov
sbb
pop
lods
xor
lea
gs
jno
sub
movs
xor
pop
mov
jo
inc
adc
push
lea
pop
mov
(bad)
sub
aas
aam
xor
jae
mov
mov
mov
fcomp
(bad)
loope
aaa
movs
push
jne
in
(bad)
push
(bad)
repz
pop
inc
ret
cmp
cwde
cmps
ins
enter
jl
pop
jmp
retf
nop
cmp
cmp
inc
adc
(bad)
jg
out
jb
mov
xchg
pushf
jecxz
addr16
lock
cld
add
mov
add
imul
es
and
ds
into
mov
stc
jecxz
adc
cmps
xchg
je
ja
xor
mov
pushf
mov
sub
sub
cli
sbb
iret
adc
inc
fnsave
dec
clc
rol
in
mov
cmp
jg
xchg
or
out
cld
lds
cdq
pop
inc
adc
imul
(bad)
dec
stos
inc
mov
and
xchg
out
stc
and
mov
inc
cmp
inc
sahf
es
scas
je
push
aad
add
add
jnp
ds
mov
out
mov
mov
dec
aad
sbb
jne
ror
jle
out
cmp
xlat
lods
out
not
dec
ins
ret
in
test
sub
sbb
sub
stos
or
and
xchg
outs
test
arpl
pop
mov
xor
pop
fstp
inc
ror
mov
push
stos
or
je
int
rol
cdq
fs
mov
xor
adc
std
mov
in
popa
(bad)
ins
inc
dec
and
adc
int3
mov
test
and
call
push
fsub
(bad)
xor
mov
and
adc
out
jne
or
shr
dec
push
pop
or
dec
jno
sub
sub
ss
mov
add
lds
inc
mov
cmp
xlat
or
idiv
sub
mov
sub
adc
jl
jbe
cmp
mov
cmp
mov
pop
adc
hlt
adc
adc
or
jbe
pop
mov
in
dec
xor
adc
and
rol
push
aam
movs
ret
call
adc
cli
jno
clc
ins
loope
pop
jp
xchg
retf
cmp
aaa
sbb
xchg
push
push
data16
xchg
mov
sub
(bad)
popf
push
dec
sti
rol
pop
outs
cmp
add
js
mov
call
push
jns
xor
sub
loopne
jecxz
push
lds
outs
stos
mov
add
daa
push
ret
daa
fucomp
arpl
call
add
sub
dec
stos
pop
fcomp
dec
xor
and
stos
aad
es
xchg
rol
cmc
jb
pop
ror
in
rcr
lea
adc
push
packsswb
(bad)
stc
cmps
cmp
inc
xor
dec
mov
aas
pop
jge
fcom
sbb
inc
mov
pop
xor
cli
daa
cmp
loop
ret
les
pop
mov
scas
fdiv
jnp
sbb
movs
and
sub
fmul
jb
loope
lods
or
lock
daa
les
cmps
retf
fstp
mov
lods
jbe
pop
add
fcmovb
lods
out
mov
sti
scas
and
pop
and
jbe
cmp
leave
outs
out
xchg
std
push
pop
es
and
int3
xchg
push
fnstsw
arpl
xchg
test
sbb
in
sbb
cmps
test
sub
ins
movs
je
xor
sar
outs
out
add
jae
push
cli
jbe
dec
jl
fwait
mov
mov
push
bound
push
sbb
sub
pushf
push
push
jae
aas
fs
and
(bad)
and
aas
shl
jmp
das
mov
push
mov
and
jge
push
cmp
mov
cld
pop
mov
out
mov
dec
sbb
dec
lea
fidiv
ss
mov
mov
cmps
mov
sbb
adc
push
ret
test
arpl
pushf
shl
clc
sbb
pushf
jle
mov
iret
xchg
mov
sar
pop
ficom
daa
iret
fist
mov
ror
push
es
xchg
gs
cmp
push
push
dec
sub
jnp
cmp
jle
loopne
sbb
fsub
pop
pop
cmp
and
push
ins
cmc
cmc
push
jnp
movs
imul
push
jo
pop
pop
cs
je
bound
mov
(bad)
(bad)
dec
or
dec
stos
mov
xchg
scas
clc
or
mov
sbb
and
add
sub
sub
xchg
jl
call
cwde
xor
test
(bad)
inc
mov
inc
push
loope
in
dec
xor
or
retf
pop
stos
xchg
enter
sbb
(bad)
push
sti
inc
push
push
xor
mov
aam
push
imul
adc
dec
jp
popa
xchg
add
dec
in
ja
nop
jmp
pop
addr16
jns
(bad)
sub
dec
mul
cmps
pop
add
cmp
dec
mov
fstp
mov
popf
mov
(bad)
iret
sar
mov
mov
mov
or
xchg
and
out
push
cdq
ret
cdq
cmp
and
fiadd
cmp
(bad)
paddq
push
dec
mov
jge
pop
mul
xlat
push
pop
and
pop
and
je
xor
js
movs
jno
retf
cmp
inc
or
out
test
mov
pop
retf
xchg
enter
dec
jbe
sti
std
loope
xlat
ins
int
jo
or
int3
ret
test
mov
(bad)
push
loopne
loope
push
push
test
sbb
call
push
mov
or
pop
loop
ror
jns
add
mov
ret
mov
mov
sahf
pop
push
adc
mov
pop
add
sbb
loope
pop
xlat
pushf
rcr
sbb
mov
div
mov
xchg
mov
jno
xor
(bad)
xor
jmp
fdivrp
jo
mov
xor
aaa
ins
push
mov
add
(bad)
jno
out
shl
cwde
dec
pop
lods
in
mov
out
(bad)
pop
cs
js
cmp
popa
bound
(bad)
xor
add
sbb
out
jg
loopne
fisttp
or
xchg
cwde
sub
das
addr16
and
fldcw
inc
xchg
mov
jo
adc
push
outs
popa
xchg
fdiv
cmp
or
repz
dec
cmp
imul
dec
aam
(bad)
jae
inc
push
scas
jno
xor
in
push
stc
inc
clc
fwait
jmp
pop
movs
fisubr
ins
mov
xchg
dec
aam
rol
cwde
pop
popa
aaa
mov
sbb
push
pop
int3
das
pop
add
jmp
or
jmp
std
inc
push
dec
cmps
jns
add
shl
cli
fimul
xchg
lea
push
add
cmc
(bad)
lock
push
dec
jle
cdq
outs
cmp
rcr
xor
sub
call
mov
adc
xlat
xchg
inc
popf
mov
mov
push
jle
stos
ret
jne
ret
outs
das
inc
mov
xchg
dec
dec
xchg
jns
jmp
cmp
repz
out
jo
stos
les
push
xchg
clc
icebp
sahf
push
push
or
call
test
xor
mov
fst
(bad)
mov
pop
fcmovbe
dec
and
push
ja
jns
push
daa
es
xchg
(bad)
neg
sbb
ins
jg
and
icebp
add
sbb
(bad)
and
inc
ja
pop
ret
enter
mov
dec
xor
xchg
add
inc
out
dec
sbb
loope
in
sahf
sub
dec
cmp
mov
lea
inc
push
pushf
repnz
lods
jmp
test
mov
dec
pop
stc
push
es
push
inc
or
idiv
xor
add
xor
xchg
dec
in
xchg
mov
push
iret
(bad)
add
popf
loop
(bad)
fwait
adc
adc
fwait
cwde
sahf
sbb
loopne
pop
fisttp
(bad)
fbstp
push
jmp
xchg
cli
mov
sub
hlt
cs
xor
cmps
push
jo
stos
test
hlt
ins
scas
cmp
mov
ret
mov
outs
in
push
push
inc
adc
cmc
cdq
jmp
sbb
rcl
out
in
add
loop
adc
jge
inc
mov
xor
mov
and
jmp
or
frstor
lds
jle
in
mov
out
and
(bad)
or
imul
xor
mov
dec
xchg
getsec
stos
add
push
inc
sub
inc
repnz
(bad)
div
aaa
xchg
jl
das
add
out
(bad)
push
inc
sub
push
(bad)
nop
pop
dec
sub
jg
xlat
aad
jle
inc
mov
mov
xor
cmp
imul
dec
shr
mov
aad
sub
loope
cmp
shl
push
xchg
inc
adc
mov
inc
inc
mov
(bad)
inc
pshufw
mov
not
cmps
xchg
xchg
test
test
sbb
mov
shr
jns
xor
sbb
cmp
je
and
adc
adc
ret
call
sbb
and
push
mov
ja
add
push
lds
jnp
add
xor
xchg
push
retf
and
inc
xor
es
rol
xchg
pop
cmp
test
fistp
push
aaa
fs
iret
dec
(bad)
in
idiv
xor
in
inc
dec
xor
mov
xchg
sahf
scas
push
jb
test
dec
call
dec
lock
les
jae
dec
and
leave
lea
mov
and
adc
test
es
faddp
sub
dec
xchg
or
sub
in
sbb
ret
fmul
jbe
xchg
jne
xor
stos
jmp
adc
jo
ds
icebp
sbb
fs
adc
test
js
push
pushf
xchg
mov
push
adc
pxor
iret
sahf
jns
cmp
test
movs
adc
jg
std
mov
(bad)
int
sub
pop
cmps
mov
and
jge
cmps
add
sub
sbb
(bad)
pop
mov
cmps
mov
jne
add
imul
dec
cld
mov
cmp
xchg
jnp
fstp
jnp
pop
jmp
inc
sbb
sub
cmc
pop
jnp
or
pop
ja
sti
mov
mov
scas
lahf
scas
retf
icebp
sbb
rcl
loope
dec
mov
dec
shr
ror
inc
push
inc
add
test
in
adc
and
adc
test
fisub
cmp
push
xor
fdivr
hlt
mov
inc
adc
stos
push
outs
icebp
mov
jp
xor
scas
shr
mov
sbb
add
pusha
dec
dec
loope
pop
push
icebp
(bad)
retf
mov
add
jns
or
test
push
and
sbb
mov
sub
pop
enter
xchg
mov
pop
mov
push
pop
xchg
mov
inc
xchg
sbb
call
add
xchg
mov
repnz
and
mov
test
jmp
std
mov
imul
mov
xchg
sbb
dec
jge
or
ja
stos
sbb
cmp
cld
inc
leave
dec
loop
fwait
cmp
movs
add
test
xor
mov
lds
call
mov
add
push
add
pop
imul
jno
js
adc
ss
mov
int3
xor
add
repz
pop
scas
dec
stos
lods
jmp
jecxz
push
int3
pop
or
push
fcmovb
add
jnp
mov
in
mov
jle
pop
pop
push
cmps
stos
(bad)
pop
sub
sbb
mov
lods
out
mov
mov
cmp
push
jl
or
sahf
lea
inc
lods
ror
addr16
xchg
and
xchg
in
jne
rol
mov
repnz
cmps
inc
out
xchg
mov
cdq
and
jb
sbb
dec
adc
sbb
dec
aas
mov
in
cmp
psrlw
sub
int
mov
dec
popa
pop
bound
push
aas
lods
adc
mov
(bad)
pop
mov
jno
push
ins
cmps
mov
xor
xchg
es
pop
xor
in
push
cld
cwde
stc
or
out
(bad)
enter
push
add
rcl
retf
lods
ror
inc
dec
enter
pop
cmp
fbstp
icebp
xchg
lods
arpl
inc
xchg
mov
repz
sti
mov
mov
out
mov
dec
jge
mov
out
dec
dec
(bad)
push
push
adc
and
push
add
gs
push
mov
shl
nop
out
mov
sub
iret
(bad)
pop
xchg
out
bound
jne
and
out
mov
jge
sub
jmp
(bad)
jmp
lods
and
mov
jnp
mov
or
(bad)
mov
jl
je
xor
or
mov
sahf
pop
sub
sub
or
(bad)
mov
pop
in
out
sar
int
ins
(bad)
mov
adc
iret
hlt
cmps
mov
adc
mov
mov
das
les
sub
inc
call
jbe
lds
cmp
out
push
and
lods
or
repz
fnstenv
sbb
or
sub
in
jecxz
imul
lds
xor
ins
pop
arpl
jae
or
std
sub
add
das
mov
scas
imul
mov
add
sbb
cmp
or
idiv
lahf
dec
add
push
jmp
cld
sub
adc
fiadd
dec
push
cmp
(bad)
pop
mov
(bad)
ja
cmps
mov
pop
push
sar
sbb
sbb
adc
arpl
inc
add
push
daa
jne
out
neg
ds
inc
mov
pop
cmps
les
xchg
daa
shr
repz
mov
mov
sbb
adc
adc
stos
div
retf
jecxz
mov
mov
mov
dec
jg
inc
jno
(bad)
dec
int3
cmp
xor
(bad)
imul
push
sub
push
jbe
push
mov
mov
dec
cwde
and
lods
daa
into
jno
out
icebp
mov
push
(bad)
add
sub
ds
loope
mov
pushf
cdq
mov
hlt
rol
add
or
mov
pop
int3
test
adc
shr
mov
xchg
ds
shrd
dec
pop
ret
pop
call
push
loopne
ds
in
jno
je
cs
sbb
loope
mov
(bad)
or
mov
xor
mov
cdq
pop
test
out
push
mov
loop
xchg
hlt
jne
iret
shl
repz
pop
pop
cs
mov
imul
or
lahf
hlt
sbb
xchg
jno
(bad)
sti
cwde
mov
aaa
mov
and
loop
add
xor
sbb
ins
push
jo
cmp
mov
jmp
test
movs
lods
cmp
inc
add
daa
xadd
mov
ret
dec
push
dec
cli
jmp
xchg
rol
fcom
mov
loop
stc
jns
lahf
add
arpl
ret
jge
sbb
dec
lock
xchg
mov
loopne
sti
mov
pop
imul
cld
cli
ins
push
dec
stc
sar
out
add
or
sub
in
push
aam
and
adc
jmp
sbb
inc
fldenv
ins
sbb
inc
push
iret
sti
bound
test
xor
(bad)
push
or
jno
add
in
outs
clc
mov
jns
stc
das
sub
aam
adc
sub
rol
loopne
stos
cs
sti
std
daa
in
rcr
mov
stos
mov
gs
jae
fild
xchg
int
out
popf
and
xor
or
sbb
movs
stos
mov
add
scas
jge
jno
mov
pop
(bad)
aad
sbb
xchg
adc
fisttp
(bad)
lock
aad
xchg
adc
cmp
ja
sbb
mov
loope
ss
iret
inc
jmp
sar
in
out
cwde
fistp
cmp
pop
cmp
xor
pop
sbb
xor
xlat
stos
or
jecxz
fldcw
mov
mov
repz
mov
pop
je
cmp
sbb
cmp
jecxz
stos
xchg
and
sub
xchg
(bad)
call
dec
lahf
inc
addr16
in
xor
mov
movs
stos
mov
push
pop
retf
es
push
pop
neg
mov
repz
lahf
sub
(bad)
inc
jmp
adc
ins
mov
jo
mov
loop
push
pushf
fwait
jl
push
je
pop
or
adc
mov
add
(bad)
xlat
sbb
push
addr16
(bad)
push
repnz
pop
(bad)
sub
sub
ret
outs
movs
push
adc
inc
imul
or
stos
outs
pop
xor
test
pop
dec
lods
mov
hlt
xchg
cwde
dec
not
in
jle
out
popf
shr
jo
pop
fidiv
cmc
xor
stos
iret
jnp
(bad)
shr
call
es
mov
xor
ja
in
inc
cdq
mov
rcl
inc
dec
push
jg
std
das
and
popa
mov
sbb
fnsave
pop
inc
arpl
into
das
pop
push
push
dec
hlt
inc
xor
gs
test
cmp
mov
inc
pop
or
xor
jae
jne
sub
movs
imul
movs
(bad)
mul
mov
ins
std
test
clc
arpl
sbb
pop
(bad)
movs
dec
daa
push
(bad)
out
cwde
sbb
mov
sar
popa
and
xchg
cli
pop
mov
sbb
xchg
sti
popa
out
sahf
mov
lock
mov
jl
jns
test
inc
mov
xchg
and
in
fbld
adc
adc
ja
jmp
(bad)
outs
in
adc
imul
jp
loop
lock
adc
div
mov
movs
jne
inc
jo
adc
inc
inc
cmp
cmpxchg
jo
fs
push
dec
and
call
fwait
xlat
xchg
dec
lods
daa
sbb
retf
mov
test
xor
or
les
aad
push
int3
pusha
xchg
arpl
mov
add
dec
jnp
sbb
pop
dec
mov
cmp
dec
adc
mov
bound
xchg
retf
sub
adc
xor
jae
or
sbb
clc
jmp
fisubr
popf
push
retf
push
fisttp
add
inc
mov
adc
mov
and
not
mov
mov
arpl
sub
aad
(bad)
push
int
sar
jle
out
clc
add
push
daa
xchg
call
mov
lea
(bad)
mov
mov
sahf
pushf
mov
and
lods
cmps
xchg
jg
and
ins
cmp
retf
adc
repz
mov
pop
dec
sub
lods
push
and
lea
sbb
dec
mov
in
push
fisttp
icebp
iret
iret
cwde
mov
add
in
and
test
inc
adc
lahf
pop
xchg
fadd
jl
imul
(bad)
fs
dec
inc
mov
pop
mov
out
in
add
shl
les
mov
and
stos
enter
std
dec
jbe
mov
aaa
outs
or
pop
imul
lahf
mov
and
dec
leave
or
sti
das
adc
(bad)
fmul
adc
sub
movs
cwde
pop
push
cmc
pop
cld
mov
test
int
mov
xor
xlat
lods
push
push
jae
or
mov
pusha
push
mov
and
imul
inc
fsubr
enter
sub
xchg
inc
cdq
(bad)
ficomp
int3
and
inc
xor
add
pop
rcl
data16
cmp
fadd
(bad)
loope
xlat
xlat
or
std
cmps
imul
out
rcl
add
xchg
cmp
pop
sub
sub
and
lahf
shl
jp
pop
call
or
pop
repnz
mov
jp
ret
adc
push
jne
or
inc
dec
test
pop
retf
es
in
shl
cmc
test
add
and
jge
jge
pusha
loop
cmc
inc
int3
call
or
push
jae
xchg
add
and
or
mov
or
push
or
in
lahf
std
mov
push
mov
mov
pop
mov
cmp
pop
mov
test
(bad)
mov
test
jmp
les
mov
jl
and
mov
popf
imul
loope
sahf
inc
popa
push
cld
jae
pop
loopne
cmps
and
cdq
pop
arpl
push
inc
add
sar
sub
js
aam
xchg
arpl
mov
pop
out
add
test
data16
mov
or
pop
push
dec
add
xchg
push
inc
js
mov
inc
sbb
sbb
or
fnstsw
mov
push
(bad)
mov
imul
inc
in
arpl
xchg
sar
xchg
inc
dec
lods
jge
mov
je
jns
adc
(bad)
fbld
aam
push
xchg
xor
xchg
add
nop
icebp
arpl
pop
(bad)
nop
ret
inc
sbb
ret
ror
sub
shr
out
outs
dec
mov
jo
imul
imul
ja
out
popf
ins
shr
or
out
pop
xchg
and
cmp
lds
leave
pop
cdq
add
test
(bad)
outs
popa
sub
push
out
fdivr
aaa
and
mov
mov
ins
(bad)
das
sbb
or
cmp
xor
and
jns
jnp
inc
ret
(bad)
adc
jge
inc
push
push
in
and
or
loopne
aad
adc
mov
fsubr
jp
or
mov
sbb
jae
push
aas
dec
jecxz
xchg
les
ficom
sbb
inc
mov
fstp
push
push
mov
sbb
ror
into
dec
mov
mov
jecxz
mov
enter
adc
adc
ds
or
(bad)
clc
test
test
fldcw
jl
sbb
jb
or
repnz
in
ja
push
sbb
rol
sti
iret
sub
and
jle
leave
addr16
or
data16
push
enter
data16
xor
jmp
sbb
pop
push
mov
and
push
jg
dec
xlat
adc
imul
repnz
loop
pop
cmps
cmc
fadd
lahf
push
cmps
mov
inc
sar
rol
sub
cmps
pslld
bound
push
fdiv
(bad)
sbb
xchg
cmp
sahf
ror
jmp
aam
pop
daa
adc
call
sbb
jnp
clc
dec
mov
faddp
pop
repnz
aas
js
mov
xor
mov
xlat
sbb
add
addr16
in
push
fsub
push
test
mov
aam
cmp
or
xchg
jnp
lods
faddp
repnz
push
imul
and
dec
jge
rcr
inc
pushf
or
mov
cld
jb
jl
outs
dec
and
ja
adc
push
xchg
ss
dec
or
in
adc
sbb
jge
icebp
ins
mov
cmc
add
or
add
daa
mov
ret
leave
dec
mov
or
scas
jge
adc
inc
fst
mov
aas
inc
sahf
lods
lds
mov
in
outs
test
cmp
pop
test
mov
xchg
pop
adc
ret
cdq
test
cdq
cmovo
pop
xor
js
data16
imul
cld
lods
lea
ins
mov
sbb
ret
and
xchg
xchg
xor
icebp
out
sub
push
test
dec
pop
mov
shr
xchg
repz
mov
pop
add
jecxz
lods
push
mov
stos
icebp
xor
push
add
test
jae
mov
ins
cmc
out
push
hlt
xchg
cmps
call
cs
and
imul
pop
(bad)
pop
in
clc
bswap
in
mov
out
adc
mov
retf
sbb
(bad)
xor
fdivr
ss
cmp
pop
enter
xchg
(bad)
cmp
sti
(bad)
ins
mov
mov
and
xor
dec
hlt
cmc
xchg
fwait
push
xchg
lds
daa
cli
std
jle
xchg
imul
stc
jmp
jg
push
xchg
mov
das
xchg
xor
cli
les
push
movs
mov
pop
scas
repnz
xor
push
sub
xor
pop
mov
in
mov
or
mov
push
shl
push
std
sub
cmp
inc
shr
repnz
icebp
loop
cmp
sub
int3
call
int3
dec
ins
ss
pushf
push
mov
mov
xor
cmp
and
gs
jle
stc
clc
rcl
add
dec
cs
fdivr
leave
sub
in
xor
call
call
and
pop
arpl
pop
loope
call
mov
inc
adc
mov
mov
pop
add
mov
outs
mov
xchg
mov
sub
(bad)
adc
jnp
lds
dec
sub
mov
shr
mov
ds
sbb
imul
mov
pop
call
xchg
aad
ss
mov
enter
push
push
retf
jecxz
cmp
cwde
sahf
or
sbb
sub
mov
stos
test
and
or
sbb
inc
jl
ins
fild
les
mov
je
cwde
and
movs
leave
shr
daa
push
xchg
test
ret
test
and
sbb
retf
lods
and
xor
addr16
int3
fimul
cmp
repz
lahf
mov
xor
idiv
mov
mov
ror
pop
xchg
mov
cdq
sub
adc
sti
shl
out
dec
mov
mov
cmp
mov
rcl
cld
jae
pop
sbb
out
int3
mov
xor
retf
clc
sub
inc
(bad)
xchg
mov
push
pop
(bad)
fst
mov
js
sub
test
movs
mov
data16
movs
jnp
(bad)
sti
loopne
dec
lds
xor
jl
or
(bad)
jg
inc
loope
popa
dec
push
ds
jecxz
stos
mov
je
test
lock
jbe
inc
sti
js
add
pop
clc
sub
xor
and
cmps
sub
adc
inc
sahf
push
cmp
inc
lods
jae
daa
adc
or
jmp
adc
stc
cmps
xor
jb
xchg
idiv
add
dec
mov
xchg
jo
imul
scas
mov
pop
ret
mul
scas
arpl
fs
inc
sbb
fisubr
mov
adc
push
fs
pop
mov
mov
in
cmc
cmp
dec
lahf
and
ja
jnp
sbb
test
ficom
stc
mov
stc
jns
add
fist
adc
mov
sub
adc
pop
fs
aas
push
pop
pop
lock
mov
sub
dec
jl
xchg
xor
inc
test
nop
repnz
cmp
mov
in
xor
pop
inc
cmp
in
repnz
sub
sub
test
xchg
retf
(bad)
es
into
mov
mov
movs
test
rcl
adc
xchg
sbb
push
stos
imul
xor
cmp
aam
xchg
mov
push
or
jl
mov
cdq
xchg
sbb
ret
addr16
call
mov
and
mov
adc
mov
ja
jmp
int
shld
cmp
jns
jo
adc
ins
xor
cdq
pusha
push
mov
and
and
aaa
rcr
mov
inc
loop
out
push
mov
sbb
fs
jns
pop
rcr
test
fucom
xchg
xchg
and
adc
jl
lahf
jecxz
sar
fiadd
adc
leave
adc
xchg
pop
xor
(bad)
jnp
inc
jl
mov
idiv
dec
jne
popf
or
aam
or
dec
sbb
jnp
mov
retf
adc
push
mov
pop
mov
dec
push
mov
dec
rcr
icebp
stos
push
cmp
clc
pop
fwait
pop
mov
mov
and
cmp
mov
rcr
sbb
ret
pop
sar
movs
mov
mov
in
mov
push
xchg
push
mov
mov
jmp
inc
jo
int
sub
add
dec
cmc
push
mov
sar
add
inc
fcomp
pop
stos
push
add
call
xchg
fadd
ins
out
mov
sub
xor
mov
or
ret
ins
inc
js
cli
xor
xchg
and
sar
xchg
push
xor
call
nop
inc
loope
shl
bound
and
dec
or
push
bound
dec
test
cs
aaa
or
shl
dec
sub
sbb
inc
pop
cdq
pusha
lods
shl
pop
pop
xlat
ss
int
popf
(bad)
jle
mov
lods
inc
mov
pushf
xchg
push
lods
mov
mov
sar
xchg
jge
call
bsr
ficom
adc
xchg
pop
fld
mov
test
test
test
mov
ret
sbb
std
inc
icebp
jns
jmp
test
jecxz
mov
xor
push
push
adc
xchg
out
mov
stc
dec
mov
neg
add
jl
inc
scas
data16
mov
or
popf
out
inc
loope
push
nop
aaa
lea
test
std
inc
inc
dec
xchg
cli
jp
mov
cmp
adc
fcomip
stos
inc
jecxz
mov
or
and
jo
nop
ffree
dec
push
ja
outs
enter
(bad)
fiadd
es
mov
mov
mov
cmps
mov
sbb
(bad)
mov
push
fidiv
fstp
out
fs
icebp
pop
ret
ja
in
add
jnp
add
ret
cmp
rol
inc
iret
inc
cmps
stos
push
inc
call
mov
popa
(bad)
mov
leave
push
sbb
sub
push
mov
loop
jnp
push
lock
(bad)
adc
add
icebp
repnz
fsub
and
out
popa
add
dec
cdq
scas
pop
mov
shl
cmc
jne
inc
sbb
push
cld
jmp
shr
stos
jmp
inc
les
mov
daa
push
push
xchg
and
cmps
push
sbb
ins
dec
enter
cs
aas
mov
aas
cmp
pop
mov
jbe
adc
rcr
sbb
out
repz
call
fsub
mov
retf
(bad)
jb
sahf
pushf
mov
cmps
inc
enter
dec
js
mov
cmps
and
jns
popa
fwait
push
inc
cmc
aam
inc
jmp
dec
add
pop
retf
mov
or
jne
inc
mov
dec
daa
aam
adc
or
lahf
pop
test
jne
push
mov
fs
jb
sbb
xor
aas
mov
mov
fcmovb
ret
jnp
outs
adc
ret
add
int
ret
xchg
fsub
sub
cdq
fldenv
mov
cmp
mov
lds
inc
in
ror
retf
gs
dec
cmps
or
test
pushf
xchg
or
les
mov
mov
mov
ret
push
stos
shr
pusha
out
stos
jb
mov
jp
and
mov
cmp
mov
stc
jecxz
lds
cld
pushf
dec
and
test
inc
cmc
push
lods
cmp
inc
mov
add
jbe
shl
xchg
retf
mov
adc
sub
aas
fistp
lock
xchg
jmp
ret
popf
jno
sub
daa
mov
fisub
pop
cmp
test
mov
cmps
cwde
ins
fisttp
sub
ror
xor
dec
js
mov
int3
pop
xchg
cmps
add
das
adc
repnz
in
ret
outs
adc
fwait
and
scas
cwde
stc
push
jnp
(bad)
hlt
test
mov
adc
push
mov
gs
cmps
mov
(bad)
fld
sub
xchg
(bad)
cmp
xor
push
std
sub
jp
jo
jno
fiadd
xchg
adc
addr16
ret
mov
sti
loopne
(bad)
adc
stos
sub
sar
cmps
inc
in
iret
mov
jno
jno
and
addr16
(bad)
dec
push
mov
or
aam
mov
mov
ds
push
xor
frstor
xchg
mov
pushf
sahf
fwait
retf
ss
pop
mov
jl
cmc
fs
xchg
in
or
lea
(bad)
sub
push
int
inc
sbb
sub
xor
ror
out
pop
fdiv
cmp
xor
dec
sub
cld
test
and
cli
(bad)
ficom
mov
popf
mov
jno
xchg
dec
(bad)
into
pop
cld
and
jns
(bad)
addr16
or
scas
mov
test
cmps
and
int
scas
pop
dec
mov
cld
adc
lock
pushf
test
repnz
iret
xchg
pop
sbb
inc
cmp
jp
inc
fidiv
int
imul
cmc
or
jns
out
mov
sbb
(bad)
sub
xor
shl
adc
popa
push
push
loop
push
or
mov
sbb
(bad)
push
push
dec
ret
outs
stos
pop
js
in
test
jp
jns
and
cmp
mov
test
push
or
add
xor
cmp
imul
and
fwait
and
out
cmp
je
mov
inc
clc
test
cmps
jle
mov
mov
sbb
xchg
or
mov
mov
cmp
jbe
cmp
nop
push
jge
je
daa
xor
pop
adc
out
jmp
fidivr
je
call
pop
jg
push
shr
jno
clc
aas
cmp
jae
sbb
clc
xchg
push
aad
mov
xchg
inc
mov
call
dec
jecxz
dec
jp
stc
mov
push
dec
push
ss
ret
in
jae
push
lods
idiv
sub
into
rcr
xor
shl
(bad)
xlat
cmc
fcom
iret
test
mov
inc
sti
xchg
arpl
mov
lods
ins
shl
jecxz
aam
test
sbb
mov
daa
(bad)
sub
cmp
(bad)
clc
aas
mov
jbe
xor
sbb
lods
cmps
dec
bound
jg
rcr
mov
js
cs
and
movs
movs
mov
gs
cwde
cld
add
adc
aam
xchg
lgs
pop
sti
sub
into
ins
adc
adc
pop
movs
ret
enter
inc
hlt
sub
xor
inc
mov
clc
pop
ror
sub
ret
lahf
xchg
xlat
fdivp
idiv
fsub
lock
and
push
out
mov
das
leave
dec
adc
mov
sub
push
in
push
fnstsw
icebp
call
pop
jmp
mov
std
xlat
je
sub
jo
add
or
sbb
sbb
cld
xchg
stos
int3
cld
or
test
sbb
mov
pop
adc
dec
push
jae
xor
adc
(bad)
pushf
scas
dec
mov
mov
sub
jg
adc
test
xlat
cmp
sbb
ret
xor
jl
push
sub
out
adc
(bad)
daa
(bad)
sbb
mov
shr
pop
cmp
jp
push
test
mov
cmp
sub
test
fidivr
call
fwait
xchg
add
mov
test
jne
addr16
idiv
imul
shl
xor
mov
sbb
push
xor
inc
int
neg
arpl
arpl
pop
dec
mov
adc
out
xchg
out
aad
and
jo
pop
push
rol
dec
je
imul
or
ret
stc
jns
lea
ret
push
mov
(bad)
xor
ficom
push
pop
clc
icebp
push
mov
lock
es
mov
fisubr
mov
pop
sbb
pop
imul
lea
push
mov
push
xchg
lahf
out
lahf
mov
stos
mov
jnp
stos
sbb
or
or
mov
in
cdq
add
and
cli
xlat
pop
add
in
mov
xlat
adc
cli
aas
xchg
xchg
push
icebp
pop
shl
add
jmp
test
sahf
sub
and
mov
pop
out
push
shl
mov
mov
pop
mov
cmp
jmp
fwait
(bad)
bound
xor
or
sbb
cmp
inc
adc
movs
in
adc
push
sub
in
push
xchg
inc
mov
mov
repnz
jne
retf
mov
adc
popf
and
ins
xor
cli
push
(bad)
jge
cmp
retf
and
pop
and
ja
aam
xlat
cs
pop
ds
push
rol
into
fsub
add
sub
sbb
and
js
fsub
dec
mov
jle
gs
shr
fisubr
jo
cdq
call
mov
in
movs
mov
push
pop
aad
loop
mov
jmp
loope
gs
or
jne
arpl
in
cwde
adc
aam
icebp
push
push
mov
xchg
scas
sbb
pop
out
outs
test
inc
or
xchg
mov
add
push
or
aad
fdivr
sub
adc
js
fwait
gs
rcr
(bad)
test
rol
xchg
cmps
das
out
icebp
repnz
and
pop
in
nop
cmps
jno
inc
cmp
push
das
xor
xor
mov
mov
pop
outs
mov
pop
xchg
mov
imul
int
sub
push
jno
cmps
add
repz
lea
int
xchg
push
fisubr
clc
and
jns
sar
mov
movs
jbe
sbb
test
jmp
rcl
push
jo
je
daa
mov
mov
inc
lods
scas
retf
xchg
sub
test
inc
mov
imul
mov
lahf
jge
sbb
hlt
jmp
mov
cmp
leave
stos
jae
jmp
xor
inc
mov
cld
cwde
xchg
(bad)
dec
jle
stos
dec
call
jmp
sahf
call
mov
fnstsw
jno
inc
cld
xor
cmp
outs
ins
fcmovnb
outs
stos
out
and
stc
mov
jmp
fstp
jge
xchg
and
pop
sub
sub
push
xchg
fst
or
mov
push
mov
nop
adc
sbb
not
mov
adc
add
xor
fwait
movs
sub
jo
push
sbb
div
jp
int3
(bad)
or
cmp
lods
int
pushf
ins
cld
dec
(bad)
imul
mov
lds
ret
into
int3
popa
push
in
add
xchg
aas
sbb
fdivp
data16
loop
paddw
pop
and
dec
shr
test
mov
into
mov
xor
adc
aam
push
cs
xor
fadd
es
repz
xchg
jmp
jno
dec
mov
es
fnstcw
and
cdq
es
mov
test
repnz
adc
adc
jg
mov
mov
xchg
je
js
jae
movs
pop
in
xor
movs
sbb
fwait
(bad)
retf
dec
dec
jp
cs
jo
push
sbb
inc
mov
repnz
sahf
ins
mov
push
fstp
xchg
xchg
scas
rol
lds
add
imul
in
pop
jl
push
hlt
(bad)
jmp
iret
xchg
lock
stos
daa
iret
test
xchg
mov
inc
stc
xlat
test
push
adc
xchg
push
adc
sub
scas
aam
stos
or
lea
es
cmp
mov
adc
iret
and
clc
cs
ss
dec
ins
add
sbb
dec
dec
je
sti
inc
sub
mov
(bad)
fnstenv
(bad)
out
sbb
in
cs
sub
push
popf
je
mov
(bad)
cmc
mov
cmp
jmp
js
sbb
lea
aam
jb
stos
dec
in
mov
loop
xor
inc
xchg
and
adc
adc
sub
test
cmps
lods
(bad)
push
mov
in
mov
inc
xor
mov
(bad)
out
inc
dec
outs
int3
fpatan
ds
xchg
mov
int
push
std
xor
adc
aam
jge
std
add
shufps
addr16
mov
jbe
lods
aaa
pusha
rcl
jecxz
cmp
inc
dec
es
shl
pushf
adc
hlt
cld
xchg
scas
lock
(bad)
stos
out
jg
xchg
int
cmp
and
jo
test
std
and
pusha
adc
adc
jae
nop
cwde
mov
daa
or
adc
sub
loopne
add
jecxz
(bad)
sub
leave
aam
outs
test
and
push
and
pop
popf
adc
xchg
sbb
mov
call
jle
sbb
stc
daa
adc
sbb
mov
fwait
jge
pop
ins
das
js
sbb
cs
mov
or
or
fisubr
push
and
(bad)
cdq
adc
(bad)
pusha
movs
sub
fidivr
xor
cmp
int
sub
dec
add
in
add
inc
cld
jno
je
popf
and
ins
in
inc
lods
retf
cmps
in
or
mov
xchg
(bad)
stc
xor
(bad)
retf
push
in
ss
sbb
xchg
push
dec
mov
adc
push
mov
add
dec
in
ret
fucomp
popf
adc
in
ud0
and
and
aas
push
jecxz
dec
movs
sbb
out
xor
in
cmp
add
dec
mov
mov
sbb
fisub
push
inc
clc
jo
pop
inc
sbb
sbb
out
fistp
jp
das
jecxz
sbb
pop
jbe
movs
and
mov
or
adc
sub
popa
mov
push
dec
(bad)
imul
xchg
inc
iret
sbb
push
push
pop
push
and
stos
or
jmp
mov
es
sbb
ins
push
enter
jp
and
sbb
mov
les
mov
jg
xchg
inc
repnz
cmp
sub
dec
addr16
xor
jmp
mov
icebp
cmp
add
loopne
cmp
jbe
push
push
movs
jge
js
out
(bad)
in
pop
imul
dec
imul
sar
(bad)
into
into
push
inc
xchg
icebp
cld
shr
repnz
arpl
add
mov
adc
mov
xchg
nop
mov
mov
arpl
xlat
xchg
vcvtsi2ss
adc
test
jo
pushf
pop
jnp
sbb
shr
push
lea
bound
sub
cmc
add
psubw
mov
out
push
cmp
(bad)
jns
sti
pushf
and
inc
fld
add
repz
dec
mov
and
xchg
sub
lahf
repz
cmp
mov
pop
add
dec
(bad)
push
pop
cmp
js
or
rcl
iret
jl
sahf
mov
pushf
adc
rcl
dec
mov
outs
mov
pusha
(bad)
fisubr
xor
aas
cmps
into
loopne
cmps
or
sbb
js
hlt
in
or
into
loop
sti
push
add
pop
jbe
shr
mov
sub
ja
ficom
cs
loop
sbb
cdq
cmps
xor
ficomp
test
(bad)
ficom
inc
jbe
int
cld
xchg
sbb
jb
fld
lahf
cld
fwait
ins
out
mov
outs
cmp
(bad)
aaa
jne
xlat
cmp
lods
push
das
rol
inc
inc
xor
inc
mov
jnp
sub
std
rcr
aam
sub
sbb
pop
cmp
loope
mov
push
mov
add
jl
xchg
bound
ret
into
jae
adc
scas
push
outs
and
xchg
mov
dec
or
mov
or
mov
or
in
mov
jb
mov
cmp
add
repz
dec
mov
inc
loop
mov
daa
add
pop
xchg
adc
add
mov
cs
sub
stos
in
cmp
sub
sub
or
jle
adc
test
int3
cmps
cmp
inc
out
mov
sti
xlat
sub
push
jno
push
out
and
ja
je
(bad)
xchg
xor
pop
xor
xchg
mov
movs
in
jg
mov
xor
rcl
or
cli
imul
(bad)
ja
daa
ins
retf
pop
xchg
in
mov
cmp
inc
in
cmp
jae
fcomp
pop
jo
cmps
mov
push
iret
retf
cld
xor
cmps
inc
outs
outs
into
cli
jmp
cmp
or
(bad)
and
(bad)
lahf
(bad)
or
jmp
mov
xor
dec
inc
fidiv
ds
(bad)
mov
mov
jae
jl
push
xor
repz
cmps
jg
adc
lds
cmp
ret
jecxz
sbb
dec
pushf
inc
lods
in
retf
mov
dec
jle
mov
mov
mov
movs
sbb
mov
test
cmp
(bad)
cmps
dec
sub
jmp
mov
inc
xor
ins
lahf
adc
mov
inc
sub
mov
jl
adc
jbe
xor
jecxz
je
movs
cmp
cwde
pusha
cwde
push
mov
in
mov
inc
xor
ret
sti
out
movs
fcmovnb
fdivp
pop
xor
mov
scas
in
adc
lds
ret
push
aad
push
push
arpl
out
lds
xchg
ja
mov
cmp
add
push
mov
xor
mov
push
inc
inc
outs
ins
jo
arpl
add
sbb
mov
ror
imul
lods
ja
sbb
push
jecxz
dec
jg
mov
pop
push
out
bound
mov
pusha
movs
pop
in
scas
push
nop
loop
jecxz
xor
fist
and
adc
sub
mov
mov
mov
push
mov
jne
inc
scas
mov
outs
(bad)
daa
fild
out
call
ss
popf
jbe
ror
or
lds
cdq
rcl
inc
push
inc
jmp
lods
xchg
cli
cdq
cmps
mov
adc
jmp
xchg
pop
jo
sub
inc
daa
es
(bad)
adc
xchg
xchg
gs
push
and
and
fcomi
das
jmp
mov
sub
retf
xlat
xchg
xor
rcl
ror
add
cmp
call
(bad)
mov
xchg
mov
and
arpl
int
loope
jno
das
sbb
clc
pop
(bad)
call
aaa
mov
mov
loopne
cli
lock
push
sahf
add
mov
mov
inc
repz
or
jge
ds
and
xchg
adc
or
sbb
pop
xor
int3
arpl
fld
outs
stos
add
xor
(bad)
sub
test
sbb
cmc
les
xchg
out
mov
xlat
je
lods
call
pop
fidivr
dec
std
ret
adc
fdivr
jns
cmp
xchg
test
sbb
in
fadd
les
enter
adc
xchg
or
inc
sub
cmps
sub
inc
mov
ret
mov
inc
push
add
sbb
and
repz
std
sahf
idiv
js
push
test
test
ret
loop
movs
ja
jno
int
ret
and
nop
lds
mov
cmps
imul
(bad)
loope
into
xchg
pop
mov
xchg
inc
test
jmp
cs
xchg
pop
sub
inc
bound
imul
aaa
add
push
test
cmp
dec
pop
fs
dec
push
out
sub
jae
scas
out
in
pop
cmp
fcomp
int
or
std
jle
imul
add
xchg
je
mov
xchg
xor
cmps
(bad)
push
adc
in
dec
test
(bad)
mov
ret
int
aam
or
push
jbe
pop
(bad)
cmp
leave
jle
fisubr
or
fsubr
ret
outs
adc
lods
xchg
mov
pop
jmp
loope
and
pusha
loope
inc
cld
inc
in
push
inc
aad
xchg
sub
sub
dec
fld
fs
push
pop
dec
inc
aas
scas
xor
inc
push
int3
mov
aad
pop
ss
pusha
movs
ret
cmc
xchg
or
loope
push
mov
mov
mov
dec
retf
cdq
xor
and
xor
retfw
mov
mov
push
cli
pop
cmc
mov
shl
ins
nop
out
mov
add
sahf
dec
lea
inc
dec
fidivr
inc
mov
inc
mov
mov
mov
mov
push
mov
ins
icebp
mov
jle
lahf
daa
mov
inc
movs
mov
push
cmp
push
jno
pop
push
int3
xchg
test
fild
fistp
fwait
mov
in
adc
shl
fcomp
fucom
jne
out
push
lds
ss
or
aad
push
loop
nop
cli
test
jns
xchg
xchg
pop
mov
dec
mov
mov
xor
fwait
ja
sub
cmp
mov
add
jl
cmps
sbb
icebp
dec
cmc
jno
push
sahf
jle
lock
and
or
lahf
loope
or
hlt
inc
add
dec
or
pop
xor
ss
or
dec
sbb
out
in
add
lods
push
imul
sbb
pop
mov
inc
pop
mov
jl
or
inc
(bad)
bound
arpl
inc
pop
(bad)
std
(bad)
in
arpl
sub
pop
jns
sbb
add
xchg
in
cmc
xchg
inc
out
jp
cwde
add
fsubr
mov
xchg
stc
mov
xor
jle
push
jmp
xor
sbb
xchg
cmc
(bad)
cmc
sub
push
loop
cli
in
pop
xchg
(bad)
mov
(bad)
adc
pinsrw
mov
repnz
cwde
mov
inc
aam
data16
in
ret
xchg
mov
sbb
add
and
mov
inc
mov
adc
sbb
or
pop
fldenv
gs
mov
and
cmp
fucomip
sub
aam
pop
inc
rol
rcl
(bad)
lods
xchg
adc
in
mov
sbb
jecxz
mov
pop
cmps
or
in
jno
push
push
jno
mov
retf
(bad)
ins
cmps
icebp
sbb
cmp
adc
and
dec
fs
cmp
in
setge
std
inc
leave
push
dec
iret
mov
inc
(bad)
hlt
add
loopne
pop
push
fcom
pusha
in
lds
add
fstp
pop
and
jecxz
xchg
test
mov
nop
inc
xchg
stos
sti
jns
or
jno
jg
loopne
jnp
aaa
inc
push
cmp
or
pop
mov
mov
add
mov
scas
call
cmps
jne
push
mov
pop
inc
push
dec
bound
or
stos
inc
add
in
scas
out
dec
push
ss
sub
push
add
sti
pop
sub
cmp
cmps
dec
scas
jecxz
and
lods
and
xchg
pop
cmc
pop
pop
scas
or
pusha
or
mov
pop
sbb
popf
adc
fs
inc
inc
popa
aaa
jmp
xchg
inc
out
push
sbb
xchg
dec
stc
jmp
adc
ret
mov
and
mov
jno
retf
adc
out
sub
mov
push
dec
fcmovnb
pop
add
push
(bad)
and
aam
pop
cli
lea
das
jmp
mov
vphaddd
lea
ss
jecxz
xchg
dec
sahf
mov
aam
sub
sub
pop
in
and
aaa
mov
dec
xchg
das
adc
int3
push
add
fxch
sub
cmp
adc
fwait
mov
aas
sbb
xchg
test
inc
rol
into
add
mov
mov
push
(bad)
cs
repz
outs
xor
fsub
dec
cdq
or
push
sub
cmp
push
add
xlat
pusha
inc
or
test
aad
mov
jge
mov
ror
pop
call
jne
popf
jne
adc
cmp
cmp
jmp
xchg
ins
cmps
fstp
scas
hlt
mov
leave
test
mov
loopne
lds
retf
js
(bad)
mov
mov
popf
jecxz
xchg
lahf
(bad)
les
push
xchg
movs
pop
dec
sti
loope
sub
ret
ror
iret
aas
add
aaa
jg
scas
pop
aam
jae
dec
jb
scas
data16
fwait
shl
call
sbb
test
cs
pop
test
dec
fwait
cmps
adc
inc
jbe
dec
addr16
std
rcr
cmp
push
fsubr
hlt
call
and
std
mov
push
pop
sub
les
repnz
cmp
dec
jmp
mov
add
and
xor
sub
scas
loop
ins
inc
fst
inc
pop
pop
xchg
pop
repz
and
ins
stc
pop
mov
and
pop
fisttp
push
cmp
out
cmp
sbb
and
xchg
mov
gs
out
or
ret
lahf
data16
dec
shl
push
xor
cmc
jecxz
js
mov
sahf
pop
mov
mov
fbld
call
mov
in
jge
or
mov
clc
retf
nop
cli
push
jg
and
cld
dec
push
adc
xor
mov
push
sahf
cmp
or
sub
xchg
mov
aam
aam
add
fstp
stos
add
arpl
sbb
add
arpl
das
(bad)
ss
pusha
ret
jno
repz
les
and
popf
(bad)
cmc
arpl
xchg
push
outs
test
call
dec
or
ror
jbe
movs
mov
mov
and
and
or
popa
(bad)
cmc
xor
add
xchg
inc
iret
loopne
dec
pop
ror
or
mov
pop
outs
pop
pop
pop
cdq
sbb
aas
cmp
div
in
push
retf
retf
fimul
jbe
ret
loope
ret
rcl
(bad)
push
jp
push
mov
cmps
mov
adc
pop
mov
xlat
sti
daa
cmp
and
shl
lods
lods
jl
sbb
adc
fcom
or
cmp
push
pop
int3
mov
xchg
shl
dec
cli
dec
ret
outs
test
int
(bad)
xacquire
movs
loopne
call
dec
(bad)
not
cmp
into
div
and
leave
mov
add
sbb
push
add
sbb
call
in
jbe
push
nop
into
ja
inc
loopne
les
test
push
and
ficom
mov
(bad)
ret
push
mov
dec
push
into
push
mov
fwait
leave
cmc
jg
call
inc
jmp
push
pusha
and
sub
iret
pushf
gs
dec
(bad)
out
or
lea
scas
ret
and
and
xchg
push
out
enter
or
jle
pushf
sbb
adc
popf
mov
shl
mov
enter
xchg
sbb
sub
xor
cmp
stos
pop
lea
mov
push
push
enter
shl
xlat
cld
stos
add
mov
jns
neg
inc
add
gs
leave
aad
popf
push
popf
jp
test
ror
bswap
dec
dec
int3
lods
adc
xchg
adc
adc
movs
ret
cmp
cmp
(bad)
jo
pop
push
ss
or
imul
or
mov
mov
pushf
sbb
inc
neg
mov
cmp
xchg
xchg
test
outs
fisttp
adc
jg
sub
xchg
repz
lea
dec
mov
lods
and
add
xor
inc
fcomp
loop
adc
or
push
pushf
jns
pop
sbb
das
ror
nop
mov
ret
add
test
imul
xchg
test
pop
and
adc
or
pop
jo
rol
push
cmp
dec
or
retf
mov
ret
cli
dec
inc
leave
stos
in
jge
jmp
jnp
adc
rol
push
xchg
imul
jle
push
mov
xchg
out
xor
mov
mov
or
loope
push
aam
pusha
or
dec
sbb
add
sub
out
popa
adc
xchg
ret
sub
pop
addr16
add
push
jl
ror
xchg
int3
mov
test
loop
retf
cmp
repnz
scas
xchg
dec
xor
es
test
mov
(bad)
jns
mov
leave
scas
sti
push
mov
pop
add
shl
and
fisttp
repnz
push
out
sbb
ficom
xlat
mov
adc
jle
out
inc
aas
test
gs
mov
sub
push
adc
rol
pushf
imul
add
out
aaa
les
cmc
fnstenv
pop
or
inc
into
mov
(bad)
out
push
aaa
dec
lods
aam
push
iret
jle
jns
pop
adc
mov
mov
aam
mov
fdivr
arpl
repnz
push
adc
and
int
or
add
push
sbb
mov
sar
inc
xchg
and
xchg
mov
adc
std
sbb
cmp
and
mov
cli
mov
mov
inc
loope
pop
lods
iret
cmps
mov
test
daa
sub
jo
std
imul
stc
and
inc
xor
fisubr
sbb
sbb
push
outs
daa
sub
xor
int
add
mov
push
or
test
scas
xchg
adc
or
lahf
jne
xchg
rcl
(bad)
pop
jnp
data16
xor
xchg
sahf
mov
jge
inc
xor
test
mov
hlt
or
inc
bound
arpl
aad
xor
pop
outs
jbe
sbb
inc
cli
inc
loope
popa
cmp
push
push
adc
ret
cmp
inc
out
gs
mov
adc
ret
xchg
jno
sub
leave
xchg
imul
inc
in
call
cld
sbb
(bad)
ss
out
cld
hlt
lock
ds
outs
into
data16
adc
mov
and
dec
sbb
call
and
ret
leave
pushf
push
mov
(bad)
test
push
popf
push
jo
in
xchg
fs
sti
test
aad
pop
test
out
adc
jecxz
mov
cmps
dec
cmp
scas
mov
out
push
inc
fld
mov
in
mov
sahf
adc
add
out
pop
push
dec
fld
ja
adc
mov
(bad)
popf
xor
imul
in
inc
sub
aad
fiadd
bound
sub
in
inc
add
cdq
adc
fs
cmp
jg
jo
and
aam
fwait
inc
add
jno
push
mov
pusha
pop
add
adc
and
xchg
mov
mov
and
aad
(bad)
mov
push
mov
add
jne
daa
mov
add
jl
clc
(bad)
shl
retf
movs
mov
fstp
fld
or
jmp
test
dec
mov
jl
sub
cmps
loopne
popf
popf
in
fmul
sub
outs
les
shrd
jae
fstp
fstp
cwde
pushf
loopne
xor
sub
test
out
mov
cmp
jmp
shl
dec
inc
dec
cmp
inc
sti
pop
ss
mov
sbb
xor
dec
mov
stos
movs
movs
arpl
sbb
inc
pusha
cli
jecxz
mov
push
mov
xchg
loope
mov
pop
inc
add
dec
add
and
mov
push
adc
or
and
push
adc
or
jno
mov
push
xchg
and
retf
xchg
outs
inc
mov
popa
or
hlt
retf
cdq
sbb
test
adc
stos
ins
shl
xor
rol
and
push
sub
xlat
sbb
jg
dec
mov
mov
les
inc
bnd
jno
xor
loop
dec
call
ja
pop
push
cmp
xchg
cmp
stos
fld
lds
retf
nop
in
mov
push
mov
gs
and
retf
adc
pop
xchg
adc
cs
sub
mov
and
or
jne
mov
dec
xor
sbb
add
scas
(bad)
inc
and
jmp
jg
xchg
in
std
xchg
mov
jbe
mov
mov
mov
(bad)
aam
inc
loope
add
jns
jl
and
bound
out
mov
push
xchg
out
lods
lock
mov
dec
in
std
or
dec
pushf
mov
mov
jns
(bad)
xor
fdivrp
lods
popf
jne
inc
test
call
sbb
loopne
dec
cmc
add
mov
in
cmp
je
jle
nop
jge
pop
jbe
retf
mov
fist
leave
dec
adc
call
mov
adc
or
mov
aam
mov
or
imul
mov
sbb
jne
adc
das
leave
call
inc
rcr
lods
test
jne
test
inc
cli
xchg
shr
outs
xor
sti
dec
loope
ins
loop
xlat
xor
aam
inc
inc
(bad)
fsubr
jmp
stos
imul
xchg
xchg
repnz
lea
xor
in
sti
icebp
popf
hlt
push
xlat
ja
bound
popa
scas
mov
in
fnstcw
ins
shr
inc
sub
(bad)
jge
xor
mov
xchg
pusha
fld
hlt
movs
arpl
or
pop
arpl
dec
fcom
stos
xlat
jmp
outs
mov
out
loope
mov
xor
mov
or
pop
sbb
mov
pop
lds
fs
mov
loope
repz
in
int
in
movs
stos
jae
mov
mov
mov
stos
inc
adc
jnp
jae
ror
jg
xlat
add
stos
outs
dec
std
push
lds
xor
test
xor
mov
or
inc
in
pop
loopne
out
cmp
pop
ja
into
add
jmp
sub
loopne
imul
and
pushf
pushf
stos
pop
mov
add
add
aaa
cmp
call
sar
xchg
add
dec
xor
aas
sub
pop
ret
xchg
or
sbb
loope
retf
and
and
mov
mov
ret
les
lods
xor
mov
or
or
adc
rcl
cli
mov
xchg
xor
mov
xchg
xor
je
sub
mov
sub
adc
jbe
add
pop
add
dec
inc
stos
imul
mov
mov
jg
push
pop
iret
and
add
xor
shl
(bad)
outs
inc
mov
mov
aad
fs
sbb
mov
gs
sub
inc
xchg
int
dec
aam
(bad)
dec
xchg
sti
ss
(bad)
shufps
xchg
(bad)
inc
cmp
adc
dec
daa
adc
ins
(bad)
pop
mov
and
out
icebp
mov
mov
fwait
rcr
jmp
pop
xchg
mov
cwde
push
jmp
std
pop
test
leave
out
cmp
add
mov
mov
pop
jno
outs
es
xchg
cld
xchg
sbb
xchg
jae
adc
mov
pop
dec
dec
jmp
push
movs
rcr
and
xchg
mov
dec
xor
sar
lods
addr16
dec
mov
rcl
inc
(bad)
hlt
fs
call
mov
and
or
cmp
bound
jge
cmp
and
and
retf
loope
dec
mov
mov
test
xchg
xchg
aaa
retf
not
add
rcr
ret
xchg
add
imul
sub
push
rol
das
mov
loopne
lods
(bad)
adc
cmp
daa
add
pop
das
loop
int3
hlt
mov
pop
adc
mov
cmp
test
inc
jecxz
ret
repz
imul
fwait
in
add
xor
inc
ins
xchg
sar
out
pop
mov
ds
push
dec
inc
or
or
pop
push
add
xchg
(bad)
clc
dec
push
dec
pop
jle
rol
(bad)
xor
mov
pop
mov
es
sub
jle
and
call
pop
inc
test
ins
fcomp
movs
clc
iret
add
stc
lahf
outs
leave
(bad)
hlt
sub
in
pop
sbb
rcr
and
mov
pop
or
test
sub
cmp
repz
mov
iret
pop
js
pop
bound
cmps
xor
and
mov
les
push
pop
test
mov
and
mov
xor
mov
adc
add
loop
stos
clc
mov
mov
dec
sar
fbstp
mov
and
inc
movs
gs
dec
mov
lahf
mov
call
addr16
ja
push
(bad)
pusha
test
aas
scas
fist
adc
loopne
popa
stc
int
mov
stos
pop
outs
push
fst
mov
imul
fistp
movs
rcl
cmps
xor
sar
and
and
pop
or
imul
enter
test
and
xor
lea
popf
retf
xor
pop
mov
stos
xchg
movs
rcl
pop
adc
jmp
mov
cs
outs
clc
inc
aam
cmp
add
jno
and
retf
jecxz
popf
mov
fst
xchg
and
cli
or
and
cmp
push
push
or
push
stc
pushf
hlt
xor
dec
stos
ds
outs
mov
inc
pslld
mov
mov
adc
lods
jle
inc
imul
cmp
jbe
sub
push
leave
push
lahf
mov
xor
fild
adc
test
adc
pop
inc
std
das
push
add
inc
sbb
sbb
add
lods
sbb
mov
push
push
sub
mov
std
into
xor
xchg
pop
mov
adc
mov
sbb
test
dec
inc
adc
and
fwait
sub
rcr
aaa
adc
(bad)
enter
je
inc
loopne
fisub
bound
pop
xchg
push
xchg
bound
pop
outs
push
jne
fdiv
addr16
(bad)
adc
dec
mov
pop
icebp
call
fidivr
jnp
in
pushf
ficomp
xchg
daa
test
ja
cmps
movs
int
fnstsw
test
repnz
or
and
mov
je
lods
mov
aaa
cmps
movs
ja
xchg
retf
adc
aad
or
mov
push
repnz
add
push
add
sar
pop
mov
sbb
push
sbb
mov
jg
mov
in
cmp
jb
sbb
mov
adc
jbe
jbe
jno
inc
sbb
sbb
ins
sub
cmc
pop
ins
inc
xor
shl
add
and
and
out
mov
or
and
or
sub
jmp
sub
inc
loopne
ds
gs
aad
loopne
fbld
call
xor
int3
pop
adc
mov
movs
pop
add
dec
data16
push
xor
test
jae
fcomp
xor
icebp
mov
into
out
push
jnp
mov
pop
icebp
js
sub
mul
(bad)
cmp
clc
test
(bad)
jecxz
cmps
fadd
(bad)
mov
sbb
call
leave
das
imul
je
arpl
stos
fisub
dec
ins
sbb
xchg
loop
in
call
jmp
cmp
test
lahf
pushf
test
(bad)
fisub
jns
cmps
mov
and
inc
ret
mov
jo
in
sub
es
or
sub
jb
ret
jmp
bnd
test
add
sub
sub
pop
(bad)
sar
std
std
pop
adc
outs
jg
(bad)
vmread
call
popa
xchg
add
mov
cmp
loope
lock
adc
jge
imul
xchg
(bad)
arpl
ror
xchg
mov
retf
xlat
xchg
push
push
add
shl
leave
adc
mov
add
inc
pop
jl
out
setbe
cmps
out
out
cdq
xor
mov
sub
movs
scas
stc
test
push
repnz
add
ja
dec
jl
xchg
mov
(bad)
mov
lods
cmp
shl
out
xchg
dec
scas
sub
cdq
clc
test
pop
gs
ins
inc
ins
ror
mov
(bad)
in
sub
gs
dec
and
fldcw
popf
adc
fdivr
dec
outs
aam
je
push
mov
sub
pop
add
sub
test
out
ror
jne
in
dec
pop
xchg
aas
bnd
pop
arpl
add
fwait
fwait
call
popa
cdq
xchg
or
fistp
ja
(bad)
leave
lock
retf
jecxz
push
adc
dec
shr
fxch
mov
push
push
sbb
cdq
dec
mov
jnp
imul
test
(bad)
cld
jmp
stos
dec
push
dec
xchg
ins
call
cmp
inc
fld
push
scas
or
jae
outs
(bad)
stc
add
inc
cmps
or
mov
xchg
scas
push
stc
out
pop
les
mov
cld
retf
xor
aaa
rcr
sbb
(bad)
fld
add
inc
jnp
test
xchg
sti
clc
retf
push
mov
in
fs
in
pop
lock
pushf
iret
movs
mov
mov
mov
adc
mov
xchg
add
(bad)
cmp
jg
stos
xchg
gs
fsubr
sub
adc
outs
cmps
mov
xor
mov
inc
loope
adc
inc
pop
minps
jmp
(bad)
and
pop
or
jb
pop
std
hlt
cmps
imul
test
inc
xchg
sbb
jbe
jmp
jnp
pusha
and
and
dec
mov
mov
sti
shl
inc
mov
adc
or
loopne
push
xchg
lea
xchg
push
dec
loope
xor
into
push
mov
push
in
cmp
push
cmps
dec
out
mov
lods
pop
pop
mov
(bad)
jb
mov
jg
aas
addr16
jle
nop
ja
nop
add
push
jnp
jmp
or
(bad)
jp
push
adc
pop
adc
push
sahf
or
loope
cmps
pusha
movs
pop
jne
fdivr
inc
jno
mov
xchg
mov
aaa
je
mov
xchg
bound
arpl
pop
test
cmp
xor
inc
dec
shl
sub
fs
ins
enter
outs
push
test
mov
inc
jo
pop
hlt
or
sbb
push
inc
mov
aad
cmp
test
das
dec
jmp
pop
and
jne
push
in
lea
popa
stc
stc
push
stos
stos
neg
cs
ret
inc
dec
xchg
fninit
xor
mov
cdq
or
nop
call
sahf
call
xor
mov
imul
div
pushf
jle
and
jo
je
xor
mov
cmp
sbb
aaa
je
imul
lss
fldenv
movs
mov
aam
xchg
sub
stos
(bad)
cmps
test
push
leave
pop
loop
cmp
xor
jp
les
rcr
add
sub
jno
push
(bad)
retf
arpl
cmps
test
mov
mov
call
jbe
and
das
out
outs
sbb
xchg
lods
scas
aaa
inc
shl
popf
xchg
push
and
les
mov
or
test
sbb
mov
xor
xchg
mov
xor
sbb
mov
sbb
cmp
and
in
xor
call
aad
xor
shl
jecxz
movs
test
repnz
ss
push
(bad)
and
mov
add
and
add
(bad)
xor
cmp
dec
sbb
nop
inc
cld
clc
add
inc
pop
mov
xor
es
rcr
test
fsubr
test
rcr
addr16
sahf
gs
rcr
jo
loope
push
not
sub
lock
xor
mov
xor
sti
mov
mov
sbb
cmp
dec
addr16
push
dec
inc
mov
aam
and
dec
into
data16
sbb
mov
sbb
adc
mov
mov
pop
and
(bad)
clc
pop
inc
daa
sub
das
imul
hlt
outs
sar
mov
sub
sbb
retf
fldcw
fwait
dec
inc
test
hlt
mul
fadd
push
adc
sub
mov
or
push
mov
or
xor
test
sbb
call
imul
arpl
xor
push
out
sbb
sub
(bad)
inc
nop
cs
ror
add
mov
lahf
iret
fwait
xchg
jg
jne
pop
dec
sbb
mov
jecxz
xchg
mov
test
mov
sahf
cmp
pop
sahf
mov
or
sub
add
(bad)
sbb
data16
or
paddb
les
fidiv
daa
or
in
jmp
repnz
iret
jns
in
ja
cmp
std
cmp
inc
sbb
or
scas
pop
fldcw
out
mov
shl
adc
mov
inc
jne
push
xor
mov
add
ins
js
mov
add
adc
lods
jo
mov
(bad)
test
inc
sbb
pop
lock
enter
loop
xor
stos
push
lds
cmp
sbb
sub
sbb
dec
push
jae
mov
mov
mov
add
inc
adc
add
fild
neg
fwait
sub
imul
stos
or
lods
dec
cmps
xchg
aad
mov
jne
enter
outs
dec
sahf
ja
fldcw
push
ins
sub
test
test
pop
fistp
inc
loopne
leave
retf
lods
push
icebp
lds
das
rcl
mov
fsubp
rcr
jmp
sbb
sti
popa
mov
out
cli
dec
push
sub
fwait
mov
sbb
leave
and
test
daa
or
cmps
loop
mov
or
iret
mov
addr16
rol
dec
pusha
lods
stc
aam
adc
pop
mov
mov
xor
retf
pop
movs
out
push
jnp
loope
push
fstp
jb
shl
enter
inc
inc
(bad)
addr16
jnp
mov
inc
les
in
ret
sub
xor
(bad)
hlt
dec
out
pop
arpl
adc
mov
adc
in
test
mov
add
or
stos
push
dec
stc
std
daa
jg
ja
lahf
pop
sbb
in
movs
arpl
fld
xchg
jmp
movs
(bad)
push
sahf
jne
xor
into
es
mov
nop
jae
inc
sbb
in
sbb
mov
daa
jbe
sub
pop
pop
cmps
sbb
cld
sbb
int
xor
cmp
jnp
jbe
and
jg
jg
jecxz
dec
or
push
call
push
in
xor
sub
jno
and
and
fsubr
inc
and
and
add
lds
xlat
arpl
mov
sbb
fwait
cmp
jl
xchg
inc
fsubr
test
mov
scas
out
dec
sub
lods
jae
arpl
pop
and
data16
add
mov
imul
cmp
repz
popa
mov
pop
data16
dec
or
sti
lock
and
adc
mov
add
jae
test
push
add
mov
push
das
cmps
fcomp
pushf
or
test
in
mov
and
cli
aas
and
or
cmp
aaa
lods
xlat
lods
pop
js
pop
lock
sbb
retf
loopne
xor
leave
mov
bswap
mov
out
pop
pop
cwde
pop
xor
pop
fnstsw
in
sub
jb
daa
mov
ins
data16
dec
jb
dec
retf
inc
xor
sub
and
repz
jmp
cmp
scas
call
dec
aad
and
sahf
dec
daa
push
add
sub
xchg
loopne
loopne
jnp
gs
in
(bad)
pop
arpl
retf
iret
inc
rol
mov
test
xchg
inc
xor
mov
pop
shl
(bad)
fs
xchg
sbb
inc
xchg
and
aaa
mov
dec
xor
adc
jno
inc
je
mov
stc
das
bound
repz
inc
dec
mov
push
in
mov
mov
test
xor
xor
pop
lea
clc
jp
adc
rcr
out
mov
sub
xlat
rcr
ret
add
jg
cmp
sbb
mov
pop
sub
push
imul
stc
xchg
mov
jbe
lahf
lods
sub
dec
nop
mov
xchg
shr
in
retf
js
(bad)
int3
and
xor
(bad)
jp
leave
jmp
je
push
cmp
idiv
movs
adc
push
xor
mov
cmp
sub
clc
fist
jmp
xor
rcr
inc
iret
(bad)
dec
adc
lds
mov
dec
add
mov
shl
cmp
xchg
cmp
push
jne
cmps
adc
mov
jmp
jecxz
int
cmp
pop
add
mov
je
cmp
jmp
push
scas
jg
or
out
mov
imul
xchg
arpl
outs
mov
mov
cmp
sbb
push
mov
loopne
jno
inc
push
out
push
in
fmul
(bad)
pushf
or
and
in
and
ror
and
sbb
loop
jb
xor
push
(bad)
cwde
inc
mov
mov
push
xor
je
lds
lea
inc
mov
pop
xlat
push
(bad)
lahf
push
jecxz
sbb
pop
in
cli
cmp
push
push
jg
push
cmps
pop
(bad)
lea
xor
adc
outs
jge
jne
or
lahf
out
mov
clc
fwait
add
push
ror
or
into
mov
mov
pop
sbb
(bad)
loop
sar
call
hlt
gs
in
hlt
mov
adc
add
push
mov
mov
sub
mov
pop
mov
retf
pop
jg
lods
les
fisubr
imul
lods
ror
sbb
xchg
adc
out
pop
mov
and
ds
test
jl
jbe
mov
pop
cmp
xacquire
or
xchg
fs
sbb
mov
movs
test
and
gs
je
pop
jge
test
daa
fdiv
jmp
mov
cmp
or
adc
icebp
add
retf
icebp
jne
int
push
out
aad
mov
cmp
xchg
xor
dec
jg
loope
xchg
cmp
jmp
cmp
outs
leave
int3
inc
icebp
inc
shl
pop
cmp
mov
retf
clc
mov
mov
ror
inc
sbb
sub
popf
and
xchg
and
cmp
test
and
sbb
call
dec
(bad)
repnz
imul
mov
stc
pop
loope
fwait
leave
xor
cwde
mov
dec
xlat
bound
rol
or
popa
and
push
retf
lock
loope
jmp
dec
xor
mov
pop
sub
push
xor
ret
cld
aaa
mov
fld
or
or
adc
dec
es
dec
aaa
(bad)
fst
ja
mov
loope
or
adc
repz
cmp
aam
xor
sbb
xchg
or
test
js
push
jns
cmp
lods
cmc
stos
push
push
jb
jne
retf
pop
sub
sbb
or
rcr
lods
in
pop
mov
stc
bound
movs
dec
mov
test
fwait
aad
xor
inc
ins
push
das
push
pop
sbb
or
(bad)
mov
neg
jge
inc
push
adc
xchg
nop
pop
fsub
enter
mov
xchg
sbb
fcmovbe
push
mov
stos
inc
pop
pop
add
scas
test
sbb
jg
jmp
adc
cmp
in
imul
stos
mov
or
aas
aaa
call
mov
sub
and
nop
out
ja
add
scas
mov
mov
pop
jno
and
repz
jp
daa
add
imul
xor
call
shr
sbb
aaa
and
xlat
cs
stc
fidivr
pop
and
inc
nop
pusha
add
(bad)
aam
sbb
cdq
sub
sbb
push
jg
jnp
cdq
(bad)
xchg
nop
loope
scas
movs
ror
sub
outs
push
cmp
inc
lea
call
out
rcr
mul
in
adc
xchg
jp
js
pop
jecxz
adc
(bad)
sbb
xchg
push
fucomi
pop
push
xor
int
or
fs
cdq
jns
out
mov
inc
mov
push
sub
dec
les
or
sub
and
popf
lods
pop
lock
sbb
inc
mov
popf
and
inc
rcr
mov
jge
jno
test
sar
icebp
jmp
movs
les
push
ja
and
ret
mov
ss
iret
mov
psubb
sub
adc
add
jp
pop
dec
jle
jecxz
xchg
repz
and
inc
data16
fidiv
adc
push
sbb
inc
cmp
xor
cmp
or
lock
shr
ret
loope
lock
mov
or
mov
sub
and
call
stos
mov
cli
cld
mov
fstp
mov
addr16
and
mov
adc
lds
add
mov
xlat
aas
push
icebp
call
or
xchg
enter
jp
pop
sub
mov
(bad)
scas
jnp
xchg
test
mov
pusha
sbb
mov
call
xchg
leave
mov
test
sti
add
mov
push
push
push
mov
pop
retf
pop
out
push
xor
(bad)
in
jns
scas
xor
cwde
dec
lods
add
cdq
or
push
in
jg
adc
(bad)
test
push
mov
fdivr
mov
jmp
out
mov
cmps
and
pop
xor
mov
pushf
push
in
in
cld
fwait
mov
mov
ins
icebp
mov
inc
shr
push
(bad)
idiv
(bad)
sbb
int
in
ds
hlt
lods
mov
sti
push
lds
push
lds
test
ds
xor
(bad)
cmp
in
cmp
dec
repz
ins
ficom
and
ds
xchg
cmp
(bad)
adc
scas
sub
popa
fnstsw
fwait
mov
mov
outs
loop
dec
push
nop
test
ret
jmp
mov
mov
cmp
inc
xor
jmp
hlt
mov
mov
jmp
cmp
mov
cmp
cmc
loope
rcl
outs
sub
loop
mov
into
dec
ficom
lods
mov
push
xor
aam
dec
push
jle
cwde
inc
int
fnsave
js
stos
or
or
ret
movaps
stc
repnz
jnp
pop
cli
repz
nop
dec
addr16
jmp
cmp
outs
push
inc
daa
repz
cmp
out
inc
arpl
mov
fistp
sbb
jo
fild
ja
dec
push
sbb
add
sbb
xchg
pushf
xchg
jnp
add
shl
push
sbb
popf
pushf
dec
adc
jnp
cld
pop
cmp
mov
mov
push
push
fnstcw
or
dec
or
ror
ror
stos
pop
lods
lea
lea
mov
mov
or
jl
jno
cmp
add
fwait
mov
mov
fidivr
inc
in
(bad)
mov
test
test
imul
mov
jo
pop
mov
pushf
adc
cwde
loope
ss
jbe
retf
inc
jno
inc
mov
cmc
outs
in
imul
test
and
not
and
pop
jbe
mov
jns
mov
movs
or
retf
xor
mov
(bad)
mov
inc
xor
and
js
dec
and
test
fs
popf
pop
inc
dec
jb
mov
outs
push
inc
sqrtps
dec
jno
fistp
je
clc
mov
in
cmp
dec
mov
mov
pop
mov
push
sbb
cmps
test
xchg
cmp
dec
adc
xor
push
push
pop
add
xor
enter
(bad)
pop
or
mov
xchg
test
outs
and
cli
bound
not
setg
cs
cmp
cmp
xor
ja
add
repz
push
add
jo
in
shl
hlt
xor
popf
hlt
pusha
mov
xchg
ret
adc
push
mov
jg
into
fistp
in
sbb
ficomp
stos
cmp
push
ins
pop
rcl
add
stos
int3
mov
add
pop
add
les
bound
shr
iret
xor
(bad)
or
mov
loopne
add
dec
jno
cwde
fst
sbb
sbb
sar
stos
jno
jle
pop
enter
mov
and
add
mov
test
stc
xchg
jle
xor
mov
jmp
dec
cdq
loopne
and
shr
add
dec
xchg
lea
int
jbe
fsubr
pop
sub
ror
xor
lahf
jp
push
push
mov
(bad)
dec
in
xchg
imul
lods
pushf
or
ins
(bad)
pop
dec
clc
inc
aam
or
mov
push
pushf
or
aaa
add
xchg
fs
scas
or
jns
jns
in
xchg
sub
sti
inc
xchg
fild
mul
adc
cmp
push
push
mov
jmp
mov
fisubr
mov
cmp
movs
or
leave
push
(bad)
xchg
aad
add
or
inc
ror
push
call
pop
sahf
mov
arpl
sub
(bad)
pop
mov
popf
mov
mov
jnp
out
mov
cmc
sub
(bad)
repz
inc
push
int3
arpl
sar
frstor
xor
inc
bound
out
pop
icebp
int
xchg
hlt
cmp
lock
clc
dec
das
lods
out
pop
aam
into
and
lods
jecxz
rcl
inc
xchg
xchg
mov
jae
push
add
adc
fld
fsubr
scas
ror
or
and
iret
jno
(bad)
test
(bad)
cmp
stos
xchg
retf
pushf
inc
xchg
out
int3
repnz
rcr
fbld
loopne
rcl
mov
and
shr
fld
push
push
jne
cmp
dec
jo
outs
gs
xchg
in
sti
mov
push
add
dec
jle
pop
mov
stc
idiv
in
cmp
cmp
jg
in
or
scas
retf
lock
and
or
sar
mov
push
mov
xchg
sub
mov
rol
mov
int3
fld
pop
xchg
sub
test
or
jl
ds
iret
xor
lods
es
int
inc
jmp
pop
mov
addr16
push
push
sub
pop
cmp
push
inc
(bad)
inc
imul
and
rol
sub
retf
in
(bad)
cmc
mov
xchg
mov
out
dec
cmc
sub
inc
ins
fsubr
mov
adc
mov
mov
outs
fnstcw
jns
pop
aaa
dec
int3
leave
mov
fcmovu
retf
jae
sub
mov
iret
mov
out
bound
push
mov
std
pop
mov
mov
adc
retf
ds
(bad)
xlat
fistp
push
cmp
fdivr
dec
mov
inc
sahf
xchg
cmps
adc
aam
addr16
xor
test
jne
add
mov
std
cvtps2pi
push
jno
sbb
xor
call
cld
int
pop
mov
add
and
(bad)
hlt
dec
xchg
imul
sbb
jg
cmps
inc
push
jnp
xchg
add
xchg
fldcw
sahf
mov
ja
(bad)
call
ret
push
repnz
mov
and
cmp
enter
call
xor
imul
test
pop
rcr
addr16
sbb
mov
sub
jle
movs
jmp
jbe
push
shl
xor
adc
outs
ds
stos
mov
(bad)
test
and
mov
popa
daa
push
or
std
int
std
add
jle
push
test
repz
push
in
test
xor
cmp
push
pop
mov
dec
sbb
jle
retf
push
les
or
mov
sub
jmp
cmp
mov
pop
push
add
hlt
daa
cmc
ror
mov
adc
push
jge
xchg
repz
sub
cmp
sub
xlat
xchg
push
xchg
jge
ret
jge
cmp
and
test
mov
mov
jns
(bad)
pop
cmp
xor
cmp
pop
cmc
sar
je
add
(bad)
out
retf
cmp
sub
push
or
pushf
int
test
retf
pushf
lods
dec
cwde
cdq
pushf
xchg
popf
add
xor
xor
dec
in
rcr
adc
test
mov
sbb
(bad)
xor
push
daa
pop
movs
in
xor
inc
lods
sub
and
shl
push
lds
int3
je
jnp
mov
out
or
push
xor
fdivr
inc
cwde
(bad)
pop
or
int
call
rol
lds
xor
mov
out
jmp
sub
sti
aad
test
pusha
xchg
popa
cwde
mov
xchg
xchg
sbb
inc
rcr
call
jo
call
mov
mov
mov
in
adc
sahf
and
mov
(bad)
fimul
sub
inc
jmp
cmc
sbb
pop
inc
aad
mov
je
mov
inc
fcmovnbe
jno
cmps
ret
push
jl
xor
(bad)
loop
add
push
cmp
jmp
xchg
ret
int3
jge
xlat
stos
out
test
push
ss
fcomp
mov
sar
mov
jb
mov
jp
inc
push
inc
imul
and
dec
enter
mov
jl
pushf
sub
add
cld
jnp
and
jecxz
and
repz
cmps
icebp
ja
imul
inc
dec
cdq
jns
es
xchg
ds
cmps
mov
lock
test
adc
jb
aaa
inc
or
mov
sahf
cmps
sub
retf
jo
xor
aaa
push
movs
lds
iret
fwait
jge
xchg
aam
in
cmps
test
sub
jae
cs
adc
movs
in
pop
addr16
cmps
(bad)
ins
fdivr
fs
lea
icebp
or
adc
fdivp
xchg
sub
mov
push
scas
push
rol
fisubr
adc
repnz
mov
lahf
popa
jmp
xchg
and
jae
dec
xchg
test
and
shl
sub
push
xchg
cwde
imul
mov
pushf
aad
das
not
push
push
dec
pop
xchg
and
repz
or
aam
add
mov
cmps
push
cmp
sbb
jne
(bad)
cwde
loopne
push
add
adc
pop
stc
mov
inc
inc
lea
jns
push
ins
(bad)
xor
cmps
cmp
ds
mov
out
sub
push
aas
fnstcw
cmps
outs
add
cmp
push
mov
cli
inc
fwait
add
jnp
pop
sbb
popf
sbb
or
mov
fs
xlat
mov
retf
jno
mov
add
push
xchg
movs
mov
repz
mov
jb
jg
fcmovnu
cli
std
push
push
xchg
sbb
std
mov
dec
inc
sar
mov
jle
loop
cmc
xchg
lods
(bad)
mov
push
xor
out
mov
repnz
fdivr
xchg
sbb
jo
icebp
sub
(bad)
retf
mov
pop
loopne
arpl
jmp
ins
mov
repnz
xor
jno
rol
pop
mul
stos
push
dec
(bad)
hlt
pushf
xchg
ffreep
mov
lea
lahf
out
push
inc
fs
mov
jle
nop
sub
scas
xor
rol
mov
test
or
pop
stos
adc
inc
fisttp
mov
nop
xor
pop
repnz
or
scas
xor
icebp
mov
stos
lods
add
mov
jp
cwde
cmps
cmp
xor
fistp
cmps
and
imul
into
aas
ffree
fs
and
pop
jmp
push
mov
(bad)
lods
or
cmp
outs
and
mov
xchg
dec
dec
scas
aas
xor
mov
or
xor
test
jnp
mov
pushf
push
retf
push
sub
jno
call
push
scas
pop
arpl
or
cmp
or
adc
jnp
xor
outs
mov
les
in
inc
daa
cs
ins
push
cdq
pusha
out
push
repnz
sub
ins
repnz
fdivrp
jbe
sub
fsubr
inc
jbe
pop
and
or
in
movs
cs
stos
pop
cmps
xchg
and
mov
fcmovnbe
std
or
xchg
or
popf
ins
mov
or
cwde
xchg
cmp
pop
and
xor
push
cmp
bound
push
or
imul
call
jmp
pusha
loopne
sub
add
xor
addr16
add
jp
and
jns
fstp
mov
out
mov
cli
sub
xchg
push
adc
je
rol
loop
dec
(bad)
jo
out
retf
add
mov
je
xchg
mov
scas
dec
test
lods
mov
adc
xchg
pusha
ss
enter
sub
jno
mov
xchg
sub
fnstcw
sbb
xor
pop
addr16
sbb
push
aad
fmul
mov
daa
popf
in
push
(bad)
push
mov
adc
add
inc
mov
push
imul
cmp
loopne
dec
fadd
mov
loope
loop
xor
mov
jnp
pop
(bad)
imul
pop
fidivr
inc
shl
pop
mov
sbb
jl
mov
scas
pop
xor
out
mov
mov
and
and
dec
neg
sar
bnd
out
imul
push
mov
je
outs
je
sbb
pusha
xor
push
hlt
pop
lods
dec
test
inc
push
mov
dec
cmps
cmc
jecxz
pop
lahf
stos
mov
loop
sbb
mov
test
stos
ret
inc
cmps
and
xchg
sbb
sub
cld
pop
jmp
jg
mov
cmp
arpl
(bad)
mov
or
ins
lods
imul
mov
retf
addr16
sbb
call
and
jb
fst
fwait
cmps
and
pop
stos
inc
lahf
mov
push
jb
xor
cmps
pusha
cld
sti
outs
fwait
mov
repnz
shl
int3
sub
cmp
xchg
ins
out
xlat
sti
cmp
jg
push
lods
aaa
xor
push
pop
icebp
into
dec
in
stc
adc
jmp
mov
push
push
jg
or
xlat
push
in
cdq
jp
xchg
mov
call
and
shr
adc
push
neg
sub
gs
ins
test
mov
imul
ja
jno
(bad)
xor
xrelease
(bad)
jne
aad
push
mov
test
popa
dec
xchg
or
das
cmp
jecxz
dec
and
call
cmps
add
icebp
leave
cld
sub
lock
mov
mov
in
dec
mov
push
push
fcomi
mov
xchg
ins
sub
sub
cmp
xor
xchg
aam
cwde
dec
sub
inc
ret
stos
cmp
daa
or
cmp
sbb
and
push
sar
push
nop
sti
adc
call
xor
fsub
ins
cmp
mov
aas
or
in
inc
fcom
lock
test
and
test
inc
pop
mov
add
xchg
fstp
cmp
lods
jb
scas
xchg
push
pop
mul
jl
mov
fmul
inc
dec
xchg
in
mov
nop
cld
aas
or
and
dec
sub
adc
mov
in
xor
pop
mov
mov
fistp
dec
data16
jp
imul
mov
mul
cmc
jae
xor
sub
call
and
cld
sub
mov
in
cmp
out
cmp
loope
lods
push
rcr
jmp
pushf
aad
mov
es
mov
xor
inc
sbb
mov
test
js
add
cmp
in
(bad)
call
stos
mov
xchg
inc
pop
push
adc
xor
mov
cmp
pop
mov
dec
mov
inc
sbb
imul
fsub
shl
sub
(bad)
fiadd
jg
loop
push
jp
pop
sbb
push
fist
jb
les
mov
dec
cli
dec
(bad)
jae
aas
sbb
addr16
hlt
mov
xchg
daa
out
adc
inc
aaa
sahf
stos
mov
cmps
push
popf
push
add
in
or
dec
cmp
xchg
(bad)
enter
aas
cmc
sbb
pop
mov
lea
mov
iret
test
cld
xor
mov
pop
cmp
es
mov
cli
xchg
(bad)
outs
stos
mov
lahf
out
mov
scas
lahf
pop
mov
not
imul
push
out
jnp
enter
shl
push
jo
mov
in
icebp
sbb
adc
adc
pop
idiv
lock
jg
xor
mov
enter
mov
inc
mov
adc
ror
stos
out
or
push
sbb
sahf
pop
idiv
push
lods
cmovge
cmp
leave
push
adc
jbe
pushf
mov
enter
xor
stc
inc
pop
dec
loopne
sbb
test
retf
mov
and
mov
mov
int
stos
sbb
cmps
rcr
test
cmp
mov
xor
add
int
cmp
xchg
mov
sahf
aam
repnz
adc
cmp
mov
ret
in
enter
push
scas
sub
icebp
lock
cwde
aas
jne
sahf
jp
clc
jne
xchg
inc
add
dec
xor
xor
sub
aas
fsub
shr
ins
aad
and
add
fwait
imul
and
loop
add
pop
ret
ficom
cmp
test
in
aam
in
gs
movs
jbe
jne
mov
cs
sub
jmp
(bad)
fcomi
jo
xor
loop
push
or
out
ret
mov
pop
ja
pop
pop
cmps
cmp
pop
mov
cld
(bad)
cmps
aad
fnstenv
lea
and
sub
pushf
stc
pop
add
lds
es
push
fwait
sbb
fild
mov
pop
clts
pushf
mov
xchg
(bad)
je
inc
cmp
(bad)
sbb
pop
test
xor
sbb
push
lock
cmps
int3
add
cwde
les
int
ss
mov
sub
fidiv
mov
popf
ins
arpl
or
cmps
ret
sub
sub
mov
das
sbb
push
mov
pop
pop
bound
(bad)
repnz
enter
es
int
dec
sub
and
or
mov
test
cdq
cdq
and
inc
lock
push
inc
jmp
mov
hlt
call
bound
lods
stos
push
ja
imul
loope
andps
cli
in
cmp
xor
je
xchg
jbe
shl
movs
push
repnz
add
out
add
in
int3
xor
out
and
ret
push
lahf
enter
mov
fwait
add
into
adc
mov
cld
das
lds
in
or
lea
push
aaa
xor
push
ror
push
les
cmp
cmp
not
loop
iret
push
ret
mov
mov
(bad)
cmp
push
fdiv
dec
fsubr
xor
pop
iret
adc
pop
push
xchg
fadd
clc
adc
inc
sbb
xor
cdq
pop
sbb
pop
push
movs
es
or
dec
lea
add
movs
cdq
addr16
shr
scas
mov
sti
jle
xor
adc
mov
mov
or
inc
or
xchg
out
(bad)
into
(bad)
retf
adc
shl
gs
loopne
add
and
adc
(bad)
in
inc
mov
xchg
pop
inc
or
hlt
mov
mov
xor
fld
cmc
inc
inc
and
lods
cmp
ins
movs
ins
in
leave
push
in
pop
xor
(bad)
push
pop
in
imul
cld
xor
jmp
js
es
cmp
mov
movs
mov
sbb
test
int3
lods
jno
mov
xchg
pushf
push
inc
lock
gs
jge
dec
jmp
(bad)
dec
ins
jl
jmp
(bad)
mov
jge
stos
stos
movs
movs
sub
test
xchg
pop
mov
cdq
push
sub
scas
mov
xor
ins
les
fmul
mov
imul
mov
cmp
jecxz
(bad)
inc
push
adc
inc
add
xchg
mov
jnp
jmp
lods
test
cmp
dec
cdq
ins
and
pop
(bad)
(bad)
adc
sub
add
dec
xor
ret
push
push
dec
mov
stos
pusha
shl
jne
cmp
xlat
adc
xchg
sub
push
outs
sar
sub
sub
xor
pop
jns
sub
mov
fdiv
lods
mov
rcr
test
mov
cmp
clc
push
add
je
addr16
fistp
add
mov
scas
mov
ret
dec
aaa
jbe
in
out
ret
xor
fadd
jno
adc
minps
(bad)
stos
cmc
imul
mov
fs
mov
lock
jecxz
mov
jle
and
outs
inc
dec
test
jne
shl
mov
mov
and
pop
das
(bad)
mov
test
jle
(bad)
jae
outs
lds
xor
mov
bound
jle
dec
add
retf
add
jo
pop
and
pop
fcomp
push
jmp
stos
test
adc
ret
xor
or
rol
ss
in
push
push
sbb
and
and
test
push
stos
xor
jb
sbb
test
icebp
pop
test
imul
mov
je
mov
cmp
std
xor
mov
xchg
xchg
aaa
sti
ret
adc
mov
fwait
mov
pop
loope
aad
aas
pop
push
imul
push
xor
lds
int3
fidiv
call
repz
add
mov
enter
jge
stc
rcr
fsub
cld
xchg
xlat
sbb
retf
jo
lea
pop
xchg
sbb
sahf
in
xor
rcl
clc
add
popf
and
into
cs
mov
test
mov
fs
xchg
dec
dec
mov
fld
sub
inc
(bad)
shl
imul
cli
loope
enter
xor
sub
adc
cmp
or
(bad)
and
cli
icebp
jmp
xor
jg
push
pop
and
sbb
lea
rcl
(bad)
daa
es
dec
xchg
test
mov
inc
dec
mov
or
stc
lods
xor
adc
inc
push
and
mov
lods
scas
sub
dec
inc
aas
scas
jae
lods
adc
and
jmp
sub
retf
sub
outs
jge
movs
cmps
dec
fdiv
add
inc
xor
sub
ins
rcl
add
xchg
pop
into
jmp
adc
dec
out
int3
or
hlt
inc
fdivr
dec
xchg
mov
xchg
add
inc
sti
xor
jg
adc
std
test
hlt
add
adc
cdq
cdq
das
loopne
add
or
jnp
sub
pushf
sbb
ror
push
ret
pop
ss
cmc
rcr
fldcw
push
jb
shr
cmp
dec
pop
ja
sub
mov
add
loop
pop
int
mov
cmp
fs
mov
and
sti
add
(bad)
mov
cwde
ror
retf
pop
xchg
pop
mov
nop
push
push
enter
xchg
mov
push
mov
test
add
aad
js
shl
xor
xchg
arpl
sub
cmp
pop
mov
dec
test
push
pop
jns
loop
and
imul
dec
loope
cmc
leave
mov
sub
test
es
dec
lds
repz
pop
or
push
inc
cmp
retf
add
sahf
and
retf
mov
xor
ret
xor
or
sub
and
xchg
dec
js
inc
mov
mov
mov
call
in
pop
fimul
daa
pop
cmp
(bad)
jns
push
(bad)
loope
push
mov
jg
ins
xchg
adc
ja
mov
sbb
clts
(bad)
fst
sub
or
xchg
fcomp
mov
mov
iret
popa
cmp
cli
or
sbb
icebp
leave
sub
retf
scas
sub
ficom
retf
ret
ins
cmp
clc
mov
pop
push
fld
std
mov
mov
pushf
rcr
dec
movs
inc
(bad)
ss
jae
and
mov
mov
bound
and
loope
cmps
or
arpl
mov
loope
jno
pop
lods
retf
es
cmps
and
(bad)
adc
jg
inc
mov
mov
test
out
cmp
jmp
loope
inc
pusha
aas
out
or
fnstenv
(bad)
cmps
sub
fwait
and
dec
or
aam
push
dec
jae
into
mov
add
test
loopne
outs
adc
fs
cmc
cmp
xor
cdq
dec
and
cld
push
shl
test
test
and
jmp
adc
push
dec
cdq
or
les
add
sub
popa
stos
push
mov
add
cmc
mov
bound
in
(bad)
jge
je
dec
push
loop
retf
pop
sahf
stos
stos
ret
cmp
or
fistp
enter
xor
call
cmp
out
sti
dec
push
cmps
imul
add
mov
test
jecxz
jmp
or
es
pop
(bad)
popf
test
jns
cmp
mov
mov
addr16
idiv
mov
shl
dec
outs
adc
cmp
outs
pop
push
sub
stos
mov
pop
jl
mov
adc
and
pop
or
sub
mov
hlt
adc
popf
lds
sub
dec
xchg
sub
in
xchg
sub
in
(bad)
jmp
mov
loope
pop
mov
mov
sbb
movs
cbw
sbb
sbb
mov
sbb
lock
in
and
ins
repnz
ins
xchg
retf
dec
cmc
xor
xchg
push
lea
(bad)
sbb
push
dec
or
cmps
retf
or
jns
imul
nop
add
push
cmp
retf
jmp
push
push
inc
cmps
(bad)
in
jge
xor
sbb
(bad)
sar
(bad)
mov
cmp
jbe
imul
mov
imul
jmp
mov
mov
mov
xchg
(bad)
and
repz
mov
sub
sub
je
aaa
movs
ss
rcl
cli
dec
pop
sub
mov
inc
cmp
stos
loop
cmp
aaa
pop
add
mov
mov
std
xchg
scas
and
cmp
hlt
cmp
mov
mov
dec
jl
sub
xor
mov
mov
inc
xchg
mov
sub
push
mov
xchg
(bad)
cmp
sub
mov
stos
jne
pop
sbb
inc
jno
retf
sahf
fst
ror
jmp
ins
(bad)
into
mov
jns
stos
data16
pop
sub
sub
enter
mov
xchg
je
push
fdivr
ret
jl
test
test
fwait
or
out
mov
inc
add
imul
add
sbb
mov
je
add
daa
cmp
mov
pop
test
rol
(bad)
mov
push
pop
ret
std
jne
sub
mov
push
mov
xchg
sbb
outs
imul
and
inc
sub
jbe
out
ffree
xchg
cmps
jg
push
push
adc
mov
xor
sub
jg
call
add
xlat
sahf
add
jmp
xchg
jbe
mov
inc
inc
jl
pop
push
in
adc
loope
clc
mov
leave
sub
rcl
cs
mov
ja
int
lock
imul
popa
xor
and
rcr
in
fwait
cmp
cli
cli
les
clc
in
jp
inc
jmp
out
mov
and
(bad)
(bad)
xchg
data16
jnp
inc
push
adc
js
mov
inc
into
mov
mov
sbb
cmps
mov
xchg
(bad)
cmc
cmp
pop
ror
pop
imul
std
nop
sti
xchg
and
ss
icebp
hlt
test
movs
js
int
add
mov
or
dec
outs
mov
imul
mov
and
daa
sbb
movs
retf
idiv
inc
and
fcmove
pop
repz
out
cmp
outs
mov
mov
aam
jno
push
imul
mov
(bad)
out
jmp
outs
jb
mov
stos
sub
mov
cmp
push
cmps
ds
inc
cmps
mov
mov
jns
push
rol
loop
xchg
test
inc
cmps
inc
sub
fs
mov
repz
call
jne
loop
add
xor
push
sahf
ins
pushf
into
out
out
int
int
ja
imul
repz
add
sbb
ffreep
dec
sar
out
sub
mov
fisttp
xor
push
sub
test
xchg
mov
outs
jmp
addr16
cmp
cmps
test
push
cmp
mov
sub
imul
test
pop
call
mov
and
mov
mov
mov
cmp
pop
aad
mov
outs
sub
rcr
dec
mov
cmp
add
xchg
mov
in
mov
push
push
fnstcw
call
retf
shr
shl
push
add
mov
xchg
jae
pop
imul
cmps
push
fidiv
jg
dec
mov
xor
(bad)
hlt
mov
add
shl
and
jns
not
pop
cmps
jg
mov
int3
and
mov
cmps
fnstsw
cwde
(bad)
imul
outs
xchg
mov
(bad)
lock
sbb
mov
or
daa
(bad)
sbb
nop
das
cld
es
lahf
xchg
in
push
xor
jle
xchg
mov
movs
push
push
pop
scas
pop
push
sub
loope
fistp
dec
loope
ins
ins
sar
adc
fsubr
jnp
mov
fisttp
push
cmps
and
(bad)
push
imul
shl
(bad)
sbb
cld
leave
jmp
(bad)
jle
jmp
sbb
fld
or
mov
icebp
mov
aam
push
push
aaa
add
popa
test
aas
xchg
xchg
leave
not
(bad)
fs
mul
xlat
ficom
dec
push
in
dec
and
lods
cmp
fwait
lods
sbb
enter
data16
int
sub
push
popf
outs
cdq
adc
cmp
mov
xor
mov
xchg
push
psraw
mov
pop
xlat
cwde
bound
pushf
iret
xor
sub
lods
pop
mov
push
outs
xchg
adc
test
int
iret
adc
add
sub
or
cli
ja
in
clc
pop
daa
add
sub
aas
fwait
sub
and
mov
mov
out
jmp
(bad)
stc
(bad)
(bad)
test
hlt
(bad)
mov
shr
lfs
(bad)
push
and
shr
test
sbb
mov
adc
jp
movs
cli
shl
scas
cmc
loop
inc
mov
or
arpl
fwait
(bad)
in
test
test
dec
ins
popa
jmp
addr16
or
sbb
dec
hlt
daa
jle
push
mov
movs
mov
out
xor
ins
sub
setbe
or
sar
test
bound
cpuid
xor
fist
cmp
ret
ins
loopne
jb
das
mov
ja
pop
jo
popf
cmps
fild
mov
not
dec
in
inc
in
in
adc
adc
cmp
lods
push
cmp
or
loopne
pushf
stos
jno
sub
arpl
cdq
out
mov
adc
stos
inc
fcomp
aas
mov
sti
lods
mov
dec
add
xchg
adc
stc
cs
or
arpl
aad
jmp
adc
out
loope
outs
aaa
int
in
cwde
push
and
push
sti
cs
test
icebp
repnz
cli
ins
sub
xchg
sub
and
repz
movs
loop
mov
shl
pusha
push
pop
fbstp
ror
mov
(bad)
mov
pushf
das
div
push
or
test
call
sub
cmp
loop
fnsave
(bad)
sbb
jg
inc
fcomp
cmp
data16
mov
das
stos
cmc
popf
pop
pushf
xor
dec
das
lock
cmps
hlt
div
push
and
cmp
push
mov
(bad)
dec
and
pop
xor
sbb
loop
inc
retf
inc
inc
pop
(bad)
hlt
(bad)
stos
or
cmp
push
sub
stc
out
ja
(bad)
int
mov
mov
gs
leave
daa
mov
xor
push
sub
or
push
xlat
(bad)
pop
pop
xor
sbb
xchg
inc
inc
neg
pop
mov
clc
sub
ins
ret
inc
mul
cmps
mov
outs
rcr
fstp
in
xchg
popa
(bad)
sub
mov
loop
xchg
mov
push
cwde
test
outs
or
ins
out
mov
jp
test
dec
sub
pop
inc
add
and
cld
mov
lods
stos
mov
pop
inc
rcl
dec
shr
packuswb
cmp
xchg
adc
scas
sbb
(bad)
gs
mov
out
jge
mov
jecxz
or
scas
imul
and
and
jmp
add
out
and
push
pop
nop
mov
fbstp
sbb
lods
xor
test
ret
retf
movs
or
(bad)
sbb
arpl
push
sbb
xchg
sbb
mov
xlat
jo
sbb
inc
mov
lock
sub
out
cmps
jp
and
fwait
daa
mov
loopne
inc
mov
adc
cmp
rcl
sbb
out
jb
(bad)
gs
popa
mov
out
lea
pop
push
adc
sub
xchg
adc
jp
lods
sbb
pop
or
je
xlat
pushf
fcmovnb
movs
jmp
in
sahf
stos
pop
fs
in
icebp
push
mov
cmp
mov
das
or
add
in
mov
rcl
xor
das
mov
mov
jns
pop
out
xor
push
movs
and
inc
mov
pushw
xlat
shl
mov
ja
mov
scas
out
or
out
sub
scas
sar
xchg
dec
sub
outs
mov
jnp
dec
or
jecxz
sbb
js
les
dec
mov
xor
mov
(bad)
not
shl
pop
sub
jne
ins
xchg
clc
dec
jl
mov
shl
or
sub
add
xchg
adc
hlt
mov
xchg
movs
jge
dec
out
aas
mov
push
xor
or
or
ja
test
sub
push
aam
sub
adc
inc
cmp
cs
xchg
(bad)
pop
jge
or
(bad)
or
ins
sbb
rcr
and
dec
xor
daa
adc
or
and
push
push
or
jp
push
xchg
mov
push
mov
ror
ret
inc
fist
int
jb
jge
xor
dec
repz
dec
jne
cwde
mov
adc
mov
int
sbb
xchg
das
retf
loope
mov
cmp
pop
dec
aam
add
cld
out
lods
mov
retf
movs
int3
mov
dec
add
or
stc
stos
cmp
fidiv
dec
jns
xchg
jne
mov
stc
jle
add
rol
inc
stos
and
jbe
pop
cmp
jge
adc
or
setle
test
pop
sahf
(bad)
sbb
add
movs
ins
fld
sub
movs
adc
cmp
mov
jb
sar
mov
xchg
mov
out
or
call
push
push
int
loope
cmp
adc
aam
and
jge
push
pop
xchg
mov
rcpps
add
cmp
jmp
mov
sub
jb
mov
ins
test
ror
jl
data16
lds
add
ins
cs
pop
(bad)
in
(bad)
push
xchg
dec
push
es
sub
mov
pop
(bad)
xchg
out
mov
pop
(bad)
sti
(bad)
lds
gs
fdiv
and
fwait
mov
movs
mov
pop
dec
sub
jae
and
cmp
mov
xor
fistp
jmp
ins
fdivr
mov
cmps
inc
icebp
out
cdq
add
bound
imul
mov
sub
xchg
jns
lea
fs
cmp
mov
mov
ret
pop
mov
sbb
adc
ins
and
mov
fcmovb
aas
icebp
lds
and
icebp
xor
push
mov
mov
ror
stos
hlt
mov
mov
sti
push
leave
aaa
std
fistp
lock
pusha
fidivr
push
sub
jl
ret
xor
xchg
pop
and
iret
jb
bound
nop
dec
xchg
sbb
mov
pop
adc
push
push
lock
aas
pop
data16
adc
xchg
int3
(bad)
iret
sub
inc
cli
test
mov
test
punpcklbw
lock
push
cdq
out
xchg
aad
imul
test
lods
push
nop
(bad)
mov
mov
push
arpl
aad
fistp
scas
vmaxss
repz
sub
xor
imul
rol
xchg
mov
cmps
push
jle
enter
nop
nop
cs
fwait
ds
cmp
jne
cs
jp
std
inc
mov
jg
push
enter
in
retf
das
pop
popa
mov
int
ss
mov
sub
fucom
adc
xchg
mov
xchg
jge
xchg
stos
xor
dec
loope
into
dec
jb
xchg
pop
cmps
add
imul
les
pop
data16
nop
imul
xor
cmp
repz
push
mov
push
enter
fs
jbe
inc
mov
fs
shl
xchg
cmp
jae
mov
in
(bad)
pop
inc
call
add
add
pop
adc
inc
add
int
retf
or
(bad)
push
repz
test
pop
stc
int3
ins
jmp
sbb
js
stos
popa
ins
xor
pop
ror
std
outs
adc
sahf
shr
sti
dec
rol
mov
rcr
aam
test
xchg
inc
dec
test
leave
push
sbb
cli
sbb
mov
pop
cmp
jnp
movs
nop
add
pushf
cmp
mov
ss
inc
cmp
nop
cmp
lock
aam
inc
pop
mov
ins
mov
pop
shr
adc
cmp
rcl
mov
leave
cmps
cmps
cwde
shr
jno
lock
jle
jl
or
int3
sub
(bad)
aam
call
in
sbb
test
aaa
aaa
fsin
aam
cwde
push
xchg
add
cmp
nop
fdiv
inc
ins
inc
mov
xchg
xchg
push
and
loopne
inc
(bad)
mov
cmp
push
and
ret
fsubr
push
push
xor
and
jg
sahf
sti
cmp
xchg
mov
jecxz
loop
mov
xor
in
and
mov
mov
or
dec
fidivr
mov
test
mov
cmp
pusha
loopne
or
std
test
push
std
(bad)
das
jne
jp
mov
push
mov
loopne
push
in
dec
cmp
(bad)
cmp
test
dec
fs
int
mov
std
(bad)
stc
mov
call
mov
je
xor
sbb
pop
xor
je
pop
mov
aas
test
stos
jbe
sbb
cwde
mov
ins
fs
out
retf
test
sub
inc
and
sub
add
hlt
vminss
xor
dec
lea
lea
add
pop
sbb
push
loopne
jbe
adc
cmp
test
ret
sbb
sub
and
gs
jmp
push
call
mov
retf
xchg
les
xchg
jmp
and
inc
ins
fsubr
les
push
and
push
hlt
pop
fcom
jl
fld
mov
push
mov
int
mov
push
or
xchg
ja
leave
mov
pop
test
jae
sbb
call
pop
xchg
xor
pop
mov
lahf
jge
add
cwde
xchg
sub
xchg
xchg
xchg
mov
push
push
mov
push
sbb
fld
cdq
and
mov
loop
leave
mov
push
add
(bad)
adc
pop
pop
movs
fidivr
rol
jnp
push
in
in
push
js
mov
loope
inc
je
aaa
xor
cdq
cmp
push
push
lds
adc
xor
les
xor
popf
cwde
fistp
cmp
loop
jmp
inc
push
jg
jbe
xchg
je
jmp
inc
imul
sbb
dec
hlt
xchg
mov
lea
mov
sub
cdq
jae
push
std
dec
mov
ja
dec
lea
mov
fadd
add
or
loop
loope
xchg
add
pop
xor
mov
jno
inc
mov
enter
jp
mov
jle
dec
call
call
inc
imul
dec
dec
push
add
scas
push
jge
pop
popf
inc
add
push
pop
fidivr
pop
push
(bad)
and
push
imul
(bad)
nop
ds
mov
cmps
(bad)
xchg
cmp
(bad)
or
mov
dec
sub
pusha
icebp
sub
fidiv
add
dec
xchg
arpl
movs
xor
fsubr
sbb
sbb
test
lods
inc
dec
aad
or
dec
gs
inc
(bad)
cmps
dec
out
push
or
sub
jns
hlt
lahf
test
adc
fst
mov
xlat
push
xchg
inc
outs
out
pusha
xor
rcl
aas
adc
gs
sti
push
add
mov
mov
aad
call
fisubr
dec
and
icebp
in
jmp
jae
pop
mov
leave
sbb
nop
rcr
iret
sub
pop
pop
jp
nop
scas
test
push
add
jmp
sub
enter
jns
cdq
fs
push
cmp
in
cmp
xlat
or
xchg
mov
dec
add
inc
xchg
or
mov
lods
sbb
push
inc
or
jno
movs
test
(bad)
xor
scas
mov
lods
mov
cmp
aad
mov
jmp
or
(bad)
mov
jp
imul
in
pop
rol
arpl
cld
das
or
retf
push
retf
ja
xchg
out
jecxz
inc
leave
lds
mov
js
movs
int3
inc
mov
movs
dec
add
es
int
sub
stc
repnz
xor
dec
adc
ins
das
ror
dec
push
hlt
xchg
sbb
enter
rcl
add
push
pushf
jbe
iret
es
xchg
inc
push
push
jle
rol
or
mov
xchg
leave
ds
test
je
and
xlat
into
adc
mov
inc
addr16
int3
ror
dec
stos
aam
shr
mov
xor
xchg
hlt
and
mov
out
imul
ins
mov
jnp
int3
adc
or
int3
inc
hlt
sbb
div
mov
mov
push
mov
and
(bad)
dec
int
or
movs
enter
mov
repz
stos
ret
push
push
hlt
or
add
mov
shl
xchg
icebp
fs
xchg
into
jmp
leave
fs
push
cs
jl
mov
pop
ds
repz
and
jg
mov
mov
mov
and
rcr
xchg
mov
pushf
imul
test
sub
(bad)
repnz
or
cmp
cmps
outs
loopne
dec
loop
pop
cmp
sub
or
or
or
test
lods
loopne
(bad)
dec
jge
outs
push
shl
xchg
dec
or
push
out
sub
sub
fcom
imul
or
jb
push
adc
dec
test
pop
mov
fadd
jmp
inc
jmp
ficom
xor
fsubr
mov
mov
jge
es
loopne
fild
mov
jmp
cmp
inc
adc
mov
nop
or
jmp
mov
adc
retf
out
or
ret
push
mov
push
int
not
push
adc
xchg
push
out
into
(bad)
movs
push
inc
push
(bad)
pop
call
jae
leave
sub
retf
sub
cmp
stos
push
xor
cwde
mov
xchg
jecxz
jg
and
sbb
add
lahf
jbe
and
sti
sahf
ss
mov
fst
mov
mov
push
mov
mov
inc
mov
ffreep
bound
xchg
aas
inc
cld
or
mov
inc
out
in
dec
sub
push
jl
mov
mov
inc
fcomi
add
cmps
dec
call
out
out
inc
call
arpl
stos
and
(bad)
jl
retf
or
mov
les
hlt
arpl
lahf
shl
aas
xchg
(bad)
pop
mov
leave
push
add
cmp
or
dec
add
sar
sub
push
xchg
push
clc
inc
stos
inc
pop
mov
mov
shr
jp
ds
xchg
outs
inc
xor
inc
sub
in
push
jmp
fucom
ins
fcomp
jecxz
and
js
repz
inc
aas
add
jbe
lea
js
lods
mov
cwde
les
js
xor
inc
pop
xchg
ret
sbb
and
mov
call
mov
test
pop
pop
jge
int3
in
xchg
lea
jae
xor
mov
xor
add
inc
test
xor
push
adc
out
cli
dec
xor
ja
(bad)
and
hlt
and
push
popa
mov
cli
or
sar
cli
xchg
push
in
sub
mov
add
and
ret
and
mov
sub
mov
mov
sub
xlat
mov
inc
repnz
jmp
aas
cmc
movs
adc
fldcw
jnp
ret
clc
mov
push
out
div
in
jb
and
sbb
add
adc
cmp
pushf
js
mov
dec
in
inc
pop
inc
cld
and
pop
loop
lods
sub
lock
loopne
sub
pop
pop
mov
or
push
loop
push
std
mov
and
into
or
in
stos
add
ins
ret
sbb
sub
in
jge
les
mov
sub
jb
adc
repnz
cmovo
sub
(bad)
jmp
cmp
lds
mul
fisttp
ror
outs
ins
fcomip
mov
ror
shl
inc
leave
xor
mov
(bad)
and
xor
call
sbb
ret
jb
xor
mov
(bad)
cld
icebp
movs
mov
dec
leave
cmps
mov
push
ret
push
xchg
push
sub
stc
xchg
jle
cmp
test
mov
xchg
push
adc
test
or
jmp
inc
and
sahf
aaa
xchg
jmp
xchg
pop
sub
lock
repz
mov
dec
xchg
mul
mov
mov
out
or
push
cmp
adc
out
xchg
push
loope
js
dec
push
mov
jo
mov
xor
cmps
(bad)
adc
xor
adc
push
ror
imul
xchg
outs
pop
call
imul
(bad)
jmp
mov
scas
or
outs
xor
push
add
stos
xlat
in
mov
in
ss
cmp
push
push
sbb
loopne
lods
in
mov
pop
mov
mov
js
arpl
in
icebp
push
xlat
push
dec
shl
popf
dec
in
jb
mov
mov
push
lock
fcmove
or
jnp
jnp
xor
xor
xor
repnz
and
push
mov
cmc
fidiv
xor
mov
(bad)
repnz
enter
retf
shl
cdq
xchg
and
stos
movs
or
cmp
add
jno
aad
inc
and
(bad)
sub
(bad)
sbb
idiv
adc
mov
mov
lock
popa
(bad)
mov
movs
mov
scas
jo
enter
jns
hlt
data16
lock
jnp
sub
aad
inc
out
cmp
ret
cmp
or
jne
in
popf
les
mov
fild
ja
dec
jmp
sub
pop
inc
cdq
pop
sbb
(bad)
xor
call
add
cwde
or
pop
and
mov
jl
dec
(bad)
or
inc
adc
jl
int
inc
cld
or
popf
repnz
(bad)
jo
sbb
xor
(bad)
mov
sub
mov
shl
pusha
fwait
xor
inc
add
fld
ficomp
mov
jg
pop
jns
jb
inc
(bad)
icebp
je
fldcw
icebp
repnz
jmp
je
sti
gs
pop
adc
jg
aas
arpl
jle
mov
push
popf
jo
ds
mov
add
cmp
outs
aaa
rcl
mov
push
inc
pop
stos
mov
jecxz
(bad)
mov
fsubrp
pop
jle
jmp
jle
cdq
cmps
cmps
ret
mov
sbb
test
mov
sbb
fild
mov
pusha
push
push
or
sub
push
sub
dec
sbb
mov
loopne
js
out
push
jl
mov
adc
mov
or
sbb
cmps
cmp
or
imul
push
sub
lock
and
test
popf
ss
add
xor
dec
cmp
inc
ds
pop
inc
test
inc
test
out
mov
or
aaa
loop
loopne
mov
jecxz
push
(bad)
scas
xor
aas
mov
mov
sar
loop
sub
scas
lahf
scas
add
mov
xchg
sub
mov
fnstcw
jne
inc
addr16
mov
loop
stos
or
jp
lock
test
xchg
pop
mov
popf
pop
rol
add
lods
inc
adc
test
xor
cli
fld
ret
xor
mov
adc
(bad)
or
mov
sub
movs
mov
sbb
stc
adc
lods
push
mov
push
dec
addr16
push
(bad)
cli
sbb
fwait
and
enter
int3
sub
cld
pop
jae
sbb
inc
xor
retf
sub
je
shl
(bad)
jno
fisub
fmul
or
push
push
cmp
loope
mov
je
cmps
test
inc
mov
rcr
jp
popf
stc
les
lock
dec
call
add
iret
or
hlt
adc
xchg
xor
aaa
fmul
sub
cmps
ja
add
loopne
push
mov
pushf
xchg
xor
adc
jg
or
xchg
adc
xor
mov
ret
loopne
loope
mov
jl
cmps
movs
mov
imul
mov
aas
js
add
outs
inc
dec
xchg
push
add
mov
jo
jbe
ret
lds
dec
daa
popf
in
mov
hlt
into
pusha
cdq
or
shl
stos
test
test
lock
pop
push
push
dec
xchg
push
mov
cmp
fwait
daa
pop
mov
push
scas
shl
sub
sbb
mov
loopne
adc
inc
or
mov
popa
pusha
sar
sbb
les
sbb
shl
in
in
xchg
push
mov
cs
xor
inc
xor
push
and
cmp
enter
push
int3
add
mov
lods
mov
mov
aas
jae
cli
or
lods
sar
scas
pop
jle
test
or
and
cmp
pop
mul
mov
push
jb
sbb
dec
push
pushf
push
imul
mov
mov
aam
(bad)
mov
lahf
cmp
push
repz
xchg
retf
jecxz
call
push
int
ror
mov
push
fstp
in
inc
aam
mov
jne
or
imul
call
dec
mov
loopne
inc
push
adc
jmp
cmc
mov
mov
call
mov
test
es
add
adc
hlt
sub
(bad)
retf
cmp
(bad)
and
cmp
je
xchg
mov
jl
or
jne
fdivp
xchg
retf
mov
push
int3
add
(bad)
jmp
std
adc
int3
xchg
add
sub
popa
xor
xor
scas
fldcw
jle
test
xchg
and
dec
in
xor
fwait
es
lea
mov
or
sub
in
mov
inc
mov
call
cmps
lock
aam
push
ja
xchg
jae
gs
jmp
xor
pop
sub
cmp
jmp
pop
lea
xchg
shl
call
push
sub
cmp
movs
inc
push
mov
adc
outs
shr
pop
mov
ins
jo
and
fstp
jae
cwde
leave
pop
rol
jge
fisubr
sahf
repz
dec
add
mov
cmps
dec
nop
js
cld
xchg
fistp
int
xchg
out
jp
or
rcl
sub
mov
jne
pop
outs
in
pop
sar
inc
test
sbb
push
adc
sub
sub
jle
stos
mov
xor
fidiv
dec
or
pop
cmp
lahf
(bad)
dec
test
xchg
inc
mov
push
and
rcl
in
jp
pop
stc
clc
mov
sbb
cli
or
xor
adc
rcr
mov
push
cdq
sub
dec
xor
xchg
(bad)
or
jg
mov
xlat
fcom
inc
dec
mov
or
scas
pop
pop
test
cdq
dec
inc
adc
fwait
stos
fldcw
jle
out
inc
jns
inc
(bad)
mov
je
inc
mov
fcom
inc
rcl
dec
ins
cs
pop
lock
mov
mov
inc
fild
push
or
ror
retf
pop
inc
stos
cmp
das
dec
pusha
add
and
jbe
lods
out
mov
mov
outs
fisub
repz
aaa
sbb
jmp
jecxz
xchg
movs
jp
pop
inc
dec
xor
pop
shl
out
enter
xchg
xchg
in
movs
add
xor
loop
or
js
out
sbb
cmps
add
pop
add
ins
lods
xchg
out
inc
ja
imul
cdq
mov
xchg
rcl
or
stc
pop
push
cmp
add
add
push
js
inc
pop
mov
sahf
sbb
dec
add
add
loop
stos
mov
jmp
cli
icebp
(bad)
in
(bad)
cld
push
push
clc
dec
cmp
pop
fs
mov
mov
mov
xchg
(bad)
mov
jmp
repnz
push
adc
movs
repz
sbb
lods
jmp
xlat
aas
fnstenv
aas
push
test
repnz
inc
jne
mov
sbb
pop
hlt
push
adc
inc
aaa
fiadd
into
dec
inc
mov
fcomp
jl
pop
dec
mov
retf
nop
jae
xor
add
ret
ds
sahf
arpl
movs
inc
push
test
and
in
loop
test
aad
dec
js
add
cmp
sub
rol
(bad)
fdiv
pop
mov
pop
ins
inc
(bad)
dec
adc
push
mov
pushf
dec
and
pop
push
mov
fadd
cli
jge
bound
movs
addr16
pop
das
lock
or
test
cmp
out
call
cmp
sub
out
adc
lahf
pop
and
scas
pop
retf
sbb
imul
retf
rcr
push
inc
add
xor
push
call
and
ret
mov
rol
(bad)
add
pop
cdq
sbb
mov
push
out
daa
movs
or
lahf
(bad)
jno
pop
fdiv
shr
or
inc
mov
sahf
rcl
push
xchg
sub
pop
pop
sti
cmp
scas
jmp
loop
loopne
ds
or
cmp
mov
(bad)
mov
dec
and
xor
movs
loopne
cli
int3
pushf
out
je
js
cdq
and
lahf
inc
mov
imul
imul
rol
cwde
sbb
mov
stos
movs
adc
cmp
das
xor
aad
mov
cmp
imul
dec
scas
and
push
ret
out
mov
dec
enter
shl
dec
jmp
cmc
mov
xchg
jle
fsubr
call
cmps
ins
fstp
xor
(bad)
xor
in
jne
mov
mov
call
adc
cdq
mov
inc
mov
pop
cmp
adc
call
pop
test
lea
mov
popf
movs
ror
xlat
xchg
shl
call
jnp
fiadd
push
mov
jp
sub
or
ds
mov
int
loope
scas
xor
scas
ss
out
ds
pushf
mov
push
jmp
pushf
mov
(bad)
int
ja
jecxz
xor
addr16
xchg
cmp
rcr
mov
es
leave
mov
push
sahf
cmp
(bad)
lds
out
and
inc
pop
or
popf
mov
pop
sub
mov
pop
adc
ret
push
in
aad
test
mov
push
cmc
arpl
enter
sar
mov
(bad)
shl
aaa
sbb
pop
pop
push
mov
pop
adc
outs
ins
pop
jmp
mov
jno
leave
shl
shl
jg
adc
aas
xlat
add
push
shl
fidivr
fcmovnu
mov
mov
mov
mov
mov
sub
mov
pop
mov
call
jmp
cmp
ret
leave
(bad)
or
add
popa
lahf
jle
test
adc
jb
int
shr
mov
adc
and
sbb
or
dec
repz
jmp
xor
pop
(bad)
pop
mov
mov
sub
xor
mov
popa
dec
push
xchg
pop
hlt
adc
mov
xor
and
mov
mov
stc
repz
add
ins
jbe
out
and
xchg
dec
inc
in
loop
sbb
xlat
int
cdq
cmp
fidiv
sub
(bad)
cmp
inc
mov
inc
or
mov
(bad)
adc
daa
xor
pop
es
cdq
jmp
jge
call
and
jo
das
sub
xchg
hlt
or
idiv
cmc
mov
movs
loopne
mov
and
mov
mov
lahf
xchg
out
popa
aas
sub
and
rol
or
dec
rcr
cmc
xchg
ss
cmp
test
ja
fwait
and
cwde
adc
mov
pushf
mov
ret
stos
fcom
inc
cs
xchg
bnd
lods
call
bound
cld
xlat
inc
out
xchg
rol
ret
push
idiv
adc
into
jbe
cmps
mov
(bad)
jp
mov
cmps
xor
xor
dec
pop
cdq
ins
cmovg
pop
jle
pop
dec
bound
adc
test
das
sub
cmc
push
js
inc
mov
call
loop
ss
cmp
mov
mov
int3
xchg
test
inc
ret
xlat
rcl
dec
pop
fst
and
rcr
mov
xchg
je
lds
lods
xchg
inc
mov
mov
call
(bad)
(bad)
xor
pusha
pop
scas
(bad)
mov
gs
jnp
mov
cmps
cmp
jecxz
jecxz
aas
sar
mov
ret
jmp
push
jae
sahf
sbb
out
or
push
jge
cmp
fisttp
std
js
cmp
cmp
and
pop
mov
inc
add
jle
push
popf
mov
push
int
mov
in
pop
push
test
out
xor
or
popf
mov
outs
mov
movs
repz
mov
xchg
fdiv
inc
pop
neg
pop
movs
aas
jge
inc
or
cmc
mov
rcr
fwait
stc
fcomp
adc
pop
cmps
call
lods
jne
out
jmp
cld
std
xor
aaa
mov
dec
in
pop
mov
mov
(bad)
push
fsubr
int3
mov
push
test
imul
add
mov
jo
in
jbe
aaa
out
cmps
lds
aas
inc
pop
test
not
add
adc
mov
mov
mov
mov
and
cmp
bound
xchg
inc
mov
jne
mov
cmc
and
mov
and
adc
jmp
mov
mov
lods
in
sub
sbb
jae
movs
jne
cmp
repnz
xor
fwait
xchg
or
out
jg
aaa
sub
inc
pop
sub
mov
pusha
cmp
mov
pop
shr
add
jns
xchg
dec
imul
push
lods
ins
call
imul
push
xor
ror
mov
stc
add
sub
jecxz
and
inc
push
jmp
lds
inc
sub
pop
or
fidivr
mul
xchg
xchg
mov
xlat
sar
or
dec
dec
popa
popa
xor
sahf
xor
repnz
bound
adc
adc
adc
mov
popa
out
fcomp
out
mul
mov
ds
(bad)
cdq
mov
mov
fiadd
xor
xchg
mov
ins
movs
or
inc
jmp
movs
movs
xchg
lods
sub
cmps
pop
ror
inc
(bad)
push
fucomip
push
jb
jle
ins
imul
mov
xchg
cmps
iret
sbb
icebp
mov
test
mov
sbb
push
(bad)
loop
sbb
retf
or
lods
push
push
or
push
pop
retf
inc
in
inc
pop
sub
imul
and
dec
push
mov
in
int
ja
cmps
dec
push
stc
(bad)
fsubr
sbb
arpl
outs
cld
sar
test
in
jbe
mov
xchg
aaa
sbb
mov
xlat
int
jne
imul
jo
jnp
in
push
push
and
jne
mov
inc
xchg
dec
add
jo
mov
jnp
adc
daa
push
(bad)
scas
leave
xchg
mov
fwait
push
adc
pop
push
psrld
cmps
xchg
pop
mov
hlt
das
push
js
pop
push
pop
stc
xchg
sbb
xchg
pop
sub
out
fistp
out
inc
xor
imul
data16
out
stos
inc
out
enter
ret
or
movs
pop
cmc
cdq
sbb
dec
jecxz
mov
call
test
repz
pop
pop
adc
mov
out
sub
out
ins
(bad)
loopne
pop
call
cmp
sbb
bound
cmps
ins
sahf
in
mov
sub
add
lahf
and
lahf
xchg
jge
cdq
sub
sti
lahf
mov
mov
jl
xchg
sub
adc
mov
push
jne
cdq
jmp
lahf
imul
enter
pop
adc
dec
sub
push
dec
faddp
mov
add
mov
mov
daa
sub
jg
mov
jb
inc
loopne
in
xor
mov
cld
leave
add
xchg
cmp
jb
shl
jmp
jmp
repnz
aam
jne
mov
push
fwait
cmp
loop
push
push
pop
es
mov
movs
pusha
fidivr
jnp
out
mov
jo
inc
hlt
pop
inc
push
sub
enter
jne
fldcw
shl
pop
mov
mov
addr16
mov
pushf
pop
pop
sysexit
lea
icebp
xchg
inc
inc
sbb
and
and
fsubrp
mov
idiv
push
test
or
in
add
push
aas
xchg
cmps
ret
cld
jmp
sbb
inc
sub
loopne
xchg
pop
pop
outs
sbb
pop
push
pop
xchg
out
mov
or
push
push
lea
lea
(bad)
or
rcr
cwde
cwde
sbb
cmp
icebp
xchg
sbb
cmp
repz
sbb
push
adc
test
inc
sbb
push
sbb
test
cmp
ja
xchg
repnz
xchg
call
pop
pusha
push
rcr
cmc
bswap
call
pop
push
inc
lock
push
xchg
je
ins
outs
scas
dec
add
jno
mov
fnsave
xchg
jmp
popf
fild
xchg
fbld
in
in
mov
repz
test
and
fst
and
aaa
pop
or
adc
xchg
mov
ret
(bad)
out
add
adc
pop
inc
push
xchg
test
sbb
inc
cmps
data16
push
or
arpl
or
retf
inc
jle
popa
lock
mov
pushf
in
mov
mov
lahf
mov
xor
lahf
in
cmp
push
shl
mov
pop
lds
pop
xchg
jns
xchg
imul
loop
xlat
test
push
mov
scas
push
pop
movs
add
inc
mov
rcl
nop
mov
es
sub
arpl
add
ds
aam
sbb
xchg
dec
pop
sub
xlat
repz
and
push
sbb
shl
sbb
arpl
cmps
cld
movs
fmul
icebp
add
imul
call
xchg
add
jle
(bad)
fidivr
inc
sub
sub
push
test
xchg
inc
jmp
jecxz
cmp
add
movs
sub
sbb
fistp
sbb
jns
sar
xchg
add
xchg
mov
inc
cmp
les
add
aad
retf
cmc
or
mov
xchg
rol
(bad)
out
jne
lods
addr16
mov
repnz
pop
aad
sbb
push
inc
call
in
sbb
or
int3
sti
xor
pop
jnp
repz
pop
lahf
movs
fnsave
mov
add
in
cmp
push
jae
test
fidiv
jl
xor
mov
ret
dec
cld
mov
nop
inc
jo
push
ret
int
add
mov
jp
cmp
and
in
out
idiv
jae
pop
(bad)
xor
in
sub
aas
cmps
cs
les
lds
outs
mov
and
inc
imul
fisubr
adc
data16
into
inc
movs
mov
sub
mov
or
pop
ja
adc
popf
add
dec
pop
fdivr
xchg
inc
push
or
ss
cmp
fs
mov
mov
rol
push
pop
pop
pop
jl
xor
sar
aaa
xchg
pop
mov
push
xlat
rcr
popf
int3
fwait
aas
add
mov
xor
int3
xor
xchg
sub
fnsave
adc
int
or
dec
sbb
push
ror
(bad)
mov
je
lock
movs
test
cmp
cli
mov
xchg
mov
dec
push
mov
mov
xchg
(bad)
(bad)
pop
add
test
mov
lods
jecxz
(bad)
xlat
and
frstor
inc
out
add
and
fldenv
mov
outs
cwde
xchg
inc
ds
lods
cdq
sahf
mov
xor
lea
js
pop
and
fstp
std
add
adc
ficom
aaa
xor
retf
hlt
cmp
jne
mov
push
les
xchg
lock
enter
mov
sub
sti
int
mov
and
or
jmp
and
mov
ins
push
(bad)
fwait
scas
push
cmp
test
push
cmp
lahf
cdq
xchg
popa
push
mov
jecxz
or
ret
(bad)
mov
xchg
in
fdiv
xchg
stc
cmp
jbe
jbe
into
and
movs
pusha
push
pop
cmp
xor
stos
inc
dec
or
jmp
mov
repz
jg
xchg
fcmovnu
and
sub
sbb
jbe
mov
fld
mov
rcl
jo
mov
popf
pop
mov
fsub
mov
inc
pop
cmp
pop
shr
adc
shr
popa
clc
xor
dec
pop
add
xor
jg
inc
ss
imul
in
jo
ss
mov
adc
push
mov
pop
push
mov
cmp
in
loope
shl
dec
sub
add
mov
sub
cmps
xchg
dec
test
xor
mov
add
sti
cdq
mov
jmp
(bad)
xor
(bad)
fiadd
push
movs
mov
int3
ja
cmps
pop
jae
outs
adc
outs
in
js
pop
sub
icebp
sahf
mov
aas
mov
movs
push
ror
call
ja
call
jo
popf
cmps
(bad)
jle
sub
push
test
mov
cmp
daa
mov
jge
add
std
arpl
adc
fcom
xchg
js
xor
repz
movs
cmp
pop
sbb
test
fisubr
jno
mov
sbb
loope
mov
(bad)
(bad)
or
int3
push
leave
and
in
xchg
dec
mov
inc
mov
retf
mov
les
int
fwait
or
push
repnz
mov
dec
cmc
push
and
dec
sub
push
push
push
fwait
jmp
fimul
retf
ins
inc
mov
ds
fcmovbe
in
mov
and
mov
pusha
cmp
int
in
pop
into
sar
(bad)
lock
test
sbb
jle
clc
add
fs
cli
add
cmp
repz
xor
xchg
cwde
push
mov
call
or
mov
call
add
hlt
call
cwde
xlat
mov
movs
test
fxch
dec
pop
or
sub
xchg
push
push
push
vshufpd
xor
and
xchg
rcr
in
cwde
xchg
mov
mul
push
fwait
enter
jmp
or
test
xchg
sbb
loope
and
mov
mov
xchg
mov
adc
inc
dec
jg
imul
ins
popa
add
adc
push
out
push
cmps
cmp
cmp
adc
stc
test
mov
aaa
sub
mov
(bad)
sbb
out
sahf
aad
pop
nop
push
and
xchg
das
push
int
or
int3
arpl
imul
loop
inc
jmp
test
daa
shr
addr16
(bad)
int3
mov
push
xchg
enter
outs
sub
xchg
in
push
jae
adc
cmps
mov
pop
cli
sub
jbe
and
loope
(bad)
js
inc
mov
pop
pop
pop
xchg
push
adc
inc
pop
xor
dec
in
jb
sub
inc
push
fwait
mov
pop
push
shl
sub
dec
data16
clc
pop
inc
ret
mov
movs
hlt
mov
sub
jmp
ret
rcl
mov
(bad)
mov
dec
dec
mov
pop
cmps
test
mov
dec
test
jmp
push
push
cmp
or
push
scas
mov
pushf
mov
pop
sbb
jbe
in
mov
in
dec
mov
leave
dec
popf
ja
pushf
loopne
push
enter
loopne
mov
lock
in
cwde
jns
(bad)
scas
stos
and
fbstp
aaa
pop
dec
in
or
ja
jns
or
push
std
xchg
aas
adc
lds
test
ret
mov
imul
stos
mov
mov
out
mov
scas
cli
jecxz
jmp
ror
inc
xchg
xchg
pop
cwde
adc
inc
adc
(bad)
out
call
sbb
jp
jl
push
adc
arpl
(bad)
push
jmp
xchg
mov
xchg
jecxz
pop
pop
sub
and
rcl
in
outs
or
fisttp
mov
shr
test
sub
shr
xchg
add
cwde
in
pusha
and
into
out
add
test
xchg
dec
sub
jge
in
cmp
xchg
lea
mov
fwait
push
sub
mov
jbe
ins
adc
mov
jmp
jmp
mov
arpl
in
jmp
jbe
inc
(bad)
out
shr
inc
call
in
loope
pop
scas
add
add
cld
or
out
cmc
sub
fwait
cld
stos
(bad)
(bad)
enter
ficomp
popa
lods
mov
sti
jl
shl
imul
lock
aam
and
out
out
mov
push
(bad)
in
xchg
pop
pop
and
dec
adc
data16
xchg
mov
sub
daa
cmp
xor
mov
fimul
pop
mov
fist
out
call
sbb
push
nop
adc
sar
and
xchg
nop
enter
and
cmps
sbb
inc
inc
xchg
sbb
pop
mov
pop
push
jbe
lods
leave
lods
mov
jge
inc
adc
jg
mov
adc
lds
dec
pusha
out
mov
push
jge
pop
and
sbb
cs
cmc
(bad)
(bad)
sbb
mov
mov
mov
mov
test
and
clc
fwait
or
dec
loope
xchg
sub
adc
xchg
call
jg
fcmovnu
stos
outs
and
add
sub
sub
shl
pop
push
sub
push
les
std
(bad)
pusha
xchg
adc
sbb
adc
dec
ret
jmp
(bad)
xchg
enter
add
ret
adc
rol
ret
inc
or
call
cmps
add
mov
ds
xchg
dec
cli
sub
stc
ret
mov
pop
cmp
and
dec
jecxz
and
into
cmp
sar
dec
imul
not
add
dec
xchg
shr
out
push
(bad)
jmp
rcl
xchg
push
into
pop
out
pop
push
pushf
test
out
dec
jmp
out
movs
imul
and
mov
xchg
jne
std
push
push
cmps
out
mov
mov
and
push
sub
lods
xacquire
cmp
aad
jbe
pop
mul
daa
or
cmp
and
xchg
xor
imul
jno
ret
into
js
sub
cmp
loope
and
xlat
adc
add
or
jg
or
std
mov
addr16
or
and
pusha
push
and
adc
xchg
(bad)
xchg
cmp
sub
xor
pusha
inc
and
loop
inc
adc
icebp
(bad)
call
jb
fistp
movs
aaa
arpl
push
sbb
mov
pop
inc
xor
xchg
inc
dec
paddb
icebp
cmps
push
mov
xor
ja
adc
push
mov
xchg
lods
push
je
xchg
retf
add
lahf
nop
lahf
xor
xor
mov
lods
loopne
xchg
(bad)
dec
lahf
in
lods
mul
(bad)
rol
fcmovnb
inc
or
cmp
mov
mov
ins
xor
loop
xlat
ds
enter
dec
out
into
xor
repnz
inc
movs
dec
pop
mov
sub
mov
ret
mov
mov
in
fisubr
pop
cmps
push
add
ror
lea
sub
or
xor
adc
xlat
inc
cmovge
js
sub
sub
and
push
ins
scas
jmp
jp
xor
scas
pop
push
xchg
sub
push
in
imul
add
inc
fdivr
mov
test
add
add
cmp
psubusw
ja
pop
and
movs
stos
inc
dec
jno
sahf
rol
push
pop
les
into
jmp
xchg
stos
and
jns
mov
push
jno
aas
pop
sar
jnp
sbb
mov
mov
int3
adc
inc
fbstp
inc
movs
enter
add
push
data16
and
adc
xor
cmp
sub
hlt
lea
cmps
call
test
outs
push
data16
xchg
pop
arpl
mov
adc
stos
std
call
xor
fwait
retf
scas
sbb
and
and
mov
adc
pop
pop
cmp
fidivr
add
jbe
int3
jp
inc
ss
shr
inc
js
dec
jmp
adc
or
and
add
retf
jge
mov
sbb
jp
test
icebp
rol
mov
mov
xchg
aas
adc
cmps
movs
sbb
pop
out
jno
stos
stos
adc
into
push
lock
daa
and
icebp
(bad)
int3
fucomi
fcompp
scas
in
bound
or
stc
and
(bad)
popa
daa
sub
xchg
repnz
sbb
out
retf
dec
repz
jge
mov
mov
push
fwait
lods
outs
push
mov
push
xchg
lahf
es
or
cmp
xor
rcr
push
lock
js
dec
dec
sbb
test
push
mov
call
mov
add
mov
pop
push
lods
inc
pop
mov
inc
jo
mov
cld
sub
int
mov
cmc
sub
fnclex
xlat
int
shl
mov
movs
add
mov
arpl
into
jo
out
pop
jno
sar
fadd
inc
je
cmp
adc
adc
pop
xchg
push
imul
rcr
fcomp
pop
inc
adc
pop
or
cwde
movs
mov
xor
scas
adc
idiv
pop
add
out
rol
pop
cdq
(bad)
xchg
xlat
lods
test
je
dec
jmp
fmul
addr16
inc
push
pushf
jmp
adc
sar
dec
mov
dec
jg
in
adc
push
or
in
inc
fadd
pmulhw
adc
and
repz
mov
sub
in
sbb
or
mov
sbb
movs
les
push
inc
add
rol
stos
inc
int3
fst
fcmovnbe
loop
inc
js
sub
push
call
das
mov
push
or
push
loop
jno
mov
lods
dec
push
or
sbb
paddd
fadd
icebp
lods
ss
cmps
mov
cdq
sub
push
in
inc
cmp
mov
push
dec
(bad)
loope
les
jne
dec
jnp
dec
rcr
sub
je
or
mov
sub
and
inc
cli
add
stc
xor
fnsave
pop
push
and
or
jo
ja
pop
fs
enter
or
jg
data16
push
ins
mov
lods
inc
mov
mov
int
xchg
push
xchg
cld
xor
push
pusha
stc
loop
adc
jns
out
mov
push
ins
dec
ret
inc
pop
add
test
dec
sub
or
sbb
loope
inc
jns
mov
outs
rcr
ds
dec
lods
add
xchg
ins
pop
mov
jecxz
jmp
push
adc
les
dec
test
sbb
add
mov
pop
pop
jbe
sub
sbb
and
or
push
cwde
ss
in
outs
std
adc
mov
xor
or
dec
pusha
pop
cs
ins
retf
fidivr
rol
leave
or
jmp
sub
repnz
push
pop
inc
stc
inc
cli
fcmovnu
lods
retf
pop
mov
jns
rol
je
rol
imul
adc
(bad)
loopne
ins
rcr
lods
mov
push
mov
xchg
imul
mov
mov
xchg
inc
jo
xor
jno
push
push
cmp
dec
inc
xchg
cmp
stc
fmul
dec
mov
fmul
sub
and
mov
sub
dec
ds
mov
cvttps2pi
je
or
or
push
arpl
mov
jno
fdivr
adc
daa
jnp
outs
inc
push
mov
pop
(bad)
repnz
jmp
fadd
mov
shl
mov
mov
sub
sub
inc
push
cmp
out
cmp
and
jle
cmps
mov
and
in
add
psllw
je
mov
inc
cli
xchg
ret
mov
rcr
sub
sub
mov
pop
fcomp
(bad)
fcom
jecxz
retf
fcmovnu
xchg
int
push
js
dec
sub
(bad)
imul
cmps
sub
pop
cmps
and
ret
pop
adc
scas
mov
inc
leave
sbb
test
retw
out
xchg
hlt
inc
loopne
in
fcmovnu
adc
fild
popf
cmps
sub
sub
push
fsubr
loop
(bad)
mov
fisttp
nop
ret
cmp
mov
mov
mov
inc
and
in
xor
lahf
mov
jg
cmps
dec
push
and
or
daa
sar
jnp
push
ss
push
jo
mov
jl
and
mov
cmp
adc
out
jle
cwde
repnz
aad
fidivr
mov
(bad)
adc
out
mov
mov
mov
pusha
idiv
and
inc
sub
mov
lods
and
pop
mov
fwait
stc
les
sub
inc
fs
idiv
push
mov
jge
cmc
xor
mov
or
or
sbb
addr16
mov
xchg
bswap
std
in
cmp
push
std
aaa
ins
pop
cmp
xchg
pop
pop
dec
imul
imul
sub
nop
pop
lds
sbb
dec
movs
cmps
push
push
popf
pop
jg
iret
add
stc
xchg
bound
cli
rcr
ret
sahf
cmp
sbb
jno
pop
jno
les
ins
ja
jbe
imul
xchg
adc
xlat
lahf
call
mov
or
sbb
xchg
leave
push
xor
repnz
ja
xor
cmp
jmp
pop
mov
xor
mov
out
fmul
pusha
jmp
xchg
dec
ins
retf
dec
adc
mov
in
movs
sub
retf
rcl
xchg
repnz
nop
aas
jmp
add
dec
mov
xchg
mov
xor
xor
dec
(bad)
mov
adc
cwde
inc
daa
add
ss
sti
cmc
fld
loopne
scas
lock
retf
xchg
xlat
mov
jmp
loopne
mov
mov
mov
adc
ror
sub
mov
xor
pop
add
mov
mov
in
pop
xor
sub
lock
or
(bad)
and
clc
sub
add
jb
or
add
cs
das
stos
popf
lods
add
jp
dec
adc
pop
cmp
cmc
mov
in
mov
xor
gs
pop
xlat
sub
repnz
mov
and
jb
sub
pop
mov
lods
inc
or
jne
mov
mov
dec
test
jmp
(bad)
sbb
pushf
sub
inc
xchg
mov
adc
cmp
sub
sub
adc
mov
not
or
sub
add
hlt
jmp
inc
add
int3
pop
xor
push
inc
test
inc
outs
push
pop
out
push
xchg
rcl
jmp
or
mov
ds
push
sti
out
add
stos
adc
scas
rcl
repnz
xchg
sub
dec
out
sti
pop
and
push
inc
jp
or
push
aas
outs
bound
(bad)
sbb
mov
push
cmc
lods
mov
scas
xor
and
mov
cmc
pop
xchg
pushf
cmp
jl
or
arpl
imul
xchg
sub
shr
xlat
nop
stos
adc
ins
ret
push
(bad)
add
pop
nop
out
xchg
add
sbb
xchg
test
call
hlt
mov
mov
(bad)
daa
sbb
push
cmps
inc
ret
mov
jle
imul
dec
push
inc
mov
jb
sub
pop
ret
cmp
or
add
mov
(bad)
sbb
aad
xchg
mov
test
dec
sbb
out
aam
sar
arpl
ins
inc
mov
call
cli
mov
out
adc
mov
repz
push
(bad)
lods
jb
retf
sub
sub
call
test
(bad)
cld
push
jno
push
dec
jne
cli
or
push
pop
call
fstp
imul
(bad)
fs
xchg
ins
leave
icebp
cmp
xchg
imul
dec
cmp
sbb
out
hlt
dec
sub
mov
nop
pop
add
inc
push
ds
int3
jb
cmp
or
daa
scas
and
xor
mov
and
stos
cmp
int3
nop
pushf
aad
sbb
arpl
add
adc
nop
sbb
lds
jmp
sbb
xchg
pop
test
movs
push
js
(bad)
(bad)
xor
outs
or
push
push
mov
cmp
ds
out
jge
outs
adc
dec
mov
aas
sub
lea
and
adc
fdiv
in
pop
jns
loope
inc
xchg
pop
cs
add
mov
mov
jecxz
outs
mov
pop
mov
movs
mov
pop
int
shl
inc
aam
or
xor
jge
clc
inc
push
ins
out
dec
mov
inc
je
mov
dec
pop
mov
aam
iret
aaa
inc
repnz
push
ret
sub
adc
pop
xchg
sub
sub
jecxz
popa
pop
add
scas
clc
movs
daa
or
push
sub
xchg
adc
out
icebp
call
add
fcom
addr16
fild
add
imul
cmp
outs
jle
shr
jecxz
jle
test
push
lods
jbe
loop
fsubr
mov
jl
pop
loop
(bad)
lock
jle
cdq
not
call
int
jns
pop
pop
dec
stos
hlt
xor
pop
mov
test
push
iret
jno
shl
mov
jb
push
ja
adc
jge
(bad)
out
cmps
js
sub
ins
aad
mov
mov
fst
sub
in
sbb
(bad)
jno
je
jg
xchg
enter
ret
cmp
dec
mov
repz
inc
or
and
cli
hlt
cdq
test
mov
imul
outs
inc
js
test
aam
fisttp
push
add
stos
ins
cmp
out
fidiv
xchg
sti
pop
test
xchg
pop
fmul
into
push
pusha
fdiv
jl
push
fst
arpl
and
dec
movs
hlt
and
inc
lea
imul
add
fs
fist
jge
jns
and
sbb
pop
xor
mov
mov
mul
cmp
ja
out
ret
scas
jnp
push
xor
data16
cmps
cmps
xor
in
je
in
pop
iret
and
or
das
cwde
rcl
pushf
pop
or
outs
push
xor
repnz
push
dec
mov
(bad)
jmp
loop
cwde
rcr
fcmovnb
jo
(bad)
shl
das
jl
fisub
shl
nop
pop
add
je
into
into
in
ds
stos
out
xchg
test
push
imul
neg
clc
jmp
xor
sub
inc
loop
call
and
adc
bound
lahf
inc
xchg
jle
push
pop
mov
mov
add
and
sub
ss
or
in
or
xchg
xchg
push
dec
mul
hlt
xlat
cmp
lds
fcom
push
test
pop
int3
ja
push
lods
dec
fcmove
(bad)
lock
inc
jmp
cmps
imul
sub
inc
movs
sub
push
icebp
jns
dec
mov
mov
adc
fisubr
sbb
dec
pushf
adc
mov
dec
sub
imul
mov
sub
ins
or
pop
out
jo
jmp
(bad)
xlat
out
pop
or
mov
daa
in
clc
jb
and
xor
mov
and
lods
in
icebp
shl
jl
iret
test
fptan
and
lea
pop
dec
sahf
popa
cs
mov
adc
mov
pop
pop
jmp
(bad)
xchg
retf
add
into
xchg
jmp
lds
add
cwde
repz
push
sub
xor
adc
jmp
mov
dec
clc
ins
mov
adc
pusha
inc
loope
sub
push
inc
sbb
aad
ins
xor
push
addr16
mov
cmp
jne
punpcklbw
mov
jns
jmp
in
inc
cmp
(bad)
sti
xlat
xchg
rcl
fwait
call
es
mov
cld
nop
add
sbb
jmp
push
stc
mov
(bad)
mov
imul
cs
xor
js
sub
pop
pop
jmp
fld
loopne
xor
aaa
ret
push
clc
in
js
push
xor
fldenv
scas
out
xchg
dec
dec
mov
sub
push
jo
pop
cmps
imul
ds
iret
stos
cld
adc
les
add
push
cmp
xlat
sub
mov
mov
mov
sub
scas
push
(bad)
into
cmp
adc
and
inc
mov
call
imul
jmp
(bad)
cs
(bad)
mov
jne
adc
rcr
arpl
daa
lea
and
jbe
mov
pop
jnp
mov
adc
les
and
and
stc
mov
cmp
jge
jns
imul
in
call
mov
in
jae
jmp
xchg
aas
or
dec
les
rol
mov
repnz
(bad)
mov
repnz
test
mov
pusha
cmp
stc
fwait
cs
mov
jbe
les
or
repnz
out
fild
stos
jb
out
jo
loope
dec
stos
and
or
sahf
repz
mov
jp
dec
lock
into
jno
inc
sub
add
std
and
lods
xchg
out
mov
js
mov
xchg
add
mov
js
sahf
push
call
mov
clc
lds
inc
ret
mov
cmovb
mov
mov
and
and
test
xor
js
jmp
rol
fwait
dec
or
in
adc
sbb
mov
pop
ins
jne
push
retf
cmps
sar
int
cmps
mov
jl
xchg
and
retf
ret
mov
fsub
and
xlat
call
out
adc
inc
movs
in
cdq
cmp
cmps
jle
xor
(bad)
xchg
jge
sub
daa
imul
adc
inc
xchg
sub
std
cmps
sbb
or
mov
cli
(bad)
xchg
pop
aad
xor
js
cmp
iret
adc
mov
mov
cmp
pop
pop
inc
scas
mov
fs
dec
jecxz
push
mov
stos
xor
and
jmp
clc
leave
push
pop
leave
sbb
test
aas
mov
sti
jns
add
dec
xor
js
cmp
cs
test
into
arpl
adc
fwait
popf
xchg
jp
or
pop
leave
mov
fwait
xor
inc
push
jb
scas
out
mov
mov
sbb
arpl
and
inc
ror
inc
xor
stos
xchg
ins
jp
jmp
xchg
test
(bad)
lods
pop
xchg
(bad)
mov
push
pop
sub
out
pop
inc
dec
pop
pop
loopne
int
xor
push
pop
adc
add
int3
imul
fstp
cmp
clc
or
icebp
and
xchg
mov
jecxz
inc
xor
mov
int
mov
xchg
and
cmp
pop
adc
jmp
adc
test
mov
sar
push
inc
push
scas
adc
cdq
xchg
and
sub
xchg
aam
(bad)
mov
popa
enter
repz
push
cdq
inc
sub
rcr
mov
and
out
or
shl
jo
mov
dec
adc
mov
inc
sub
push
test
or
adc
adc
add
std
mov
dec
xchg
out
in
jg
jle
int3
push
scas
push
lock
xchg
es
jb
out
or
xchg
loope
mov
mov
adc
int3
lahf
repnz
xor
aad
adc
rol
leave
pop
idiv
push
mov
adc
mov
dec
add
sahf
sub
mov
jo
or
add
cdq
inc
xor
xchg
xchg
hlt
jg
cmp
test
icebp
dec
push
add
repz
xor
outs
retf
ja
fstp
lods
push
je
mov
pop
fcom
or
stos
mov
sub
dec
add
xchg
(bad)
scas
loopne
stos
jne
loopne
out
je
inc
in
test
ret
push
inc
shl
inc
sbb
jbe
xchg
daa
clc
xchg
int
nop
call
ja
rcr
cmp
xlat
mov
xchg
mov
fcomp
stc
jnp
iret
fwait
lahf
cli
pop
js
sbb
and
mov
xchg
repnz
(bad)
mov
or
fidiv
repnz
(bad)
dec
mov
test
xor
mov
and
inc
sti
jne
pop
push
stos
push
(bad)
jo
mov
xchg
cmp
gs
das
ins
gs
and
dec
jns
xchg
rol
push
cmp
xchg
xor
(bad)
test
jbe
mov
mov
mov
pusha
mov
push
nop
jo
push
out
fwait
rcl
cmp
std
mov
cwde
jmp
mov
ds
clc
and
jle
nop
xchg
ret
jmp
cmps
cld
jge
xor
call
sbb
ins
inc
rol
arpl
test
sub
ins
in
(bad)
in
in
cli
adc
add
adc
push
push
pop
shl
mov
sar
out
mov
cmp
les
(bad)
loopne
push
fild
mov
repnz
test
jns
push
adc
push
daa
mov
jecxz
jo
not
jge
adc
xor
loope
pop
ss
out
inc
jle
aas
fld
xor
cs
aas
(bad)
dec
mov
fsubr
jmp
(bad)
stc
int
mov
cmp
fs
fisubr
mov
(bad)
js
arpl
outs
sbb
push
xor
sbb
je
retf
cmps
xlat
fwait
sbb
pop
mov
pop
push
push
mov
or
jo
clc
or
pusha
stc
add
mov
loopne
call
daa
mov
adc
inc
add
dec
mov
and
les
es
test
repz
fs
test
jle
pop
call
ins
cmps
jmp
and
ins
mov
aad
(bad)
lock
icebp
push
mov
xchg
mov
in
ret
pusha
ins
or
jmp
or
push
(bad)
fidivr
xchg
imul
mov
out
ret
or
sub
shl
cmp
mov
adc
push
push
sahf
in
dec
lods
outs
nop
pop
nop
es
sub
dec
push
or
call
ins
jb
enter
fsub
cmc
shl
dec
jb
ror
dec
fbld
sub
outs
cmp
add
inc
cmp
pop
retf
sahf
fstp
and
cmp
pusha
mov
das
mov
xchg
inc
jns
arpl
imul
xchg
inc
push
push
mov
fistp
dec
mov
push
inc
add
(bad)
and
lahf
cmp
push
leave
cmp
lds
push
inc
jle
pusha
jl
xchg
test
into
jge
inc
sbb
and
cmp
ins
dec
pop
inc
retf
out
cmp
fcmovbe
mov
pop
(bad)
(bad)
div
imul
pop
sbb
push
out
enter
in
add
dec
loopne
pop
retf
repz
push
int3
gs
and
add
mov
xchg
or
repnz
cmp
das
sub
mov
sub
sbb
pop
in
loop
sbb
jp
fwait
mov
xor
outs
jae
jl
call
gs
shr
imul
adc
leave
pop
into
ror
push
je
xchg
push
iret
ficomp
xchg
fsub
pusha
sbb
test
dec
sub
push
pop
(bad)
mov
cmp
and
into
stos
pushf
inc
mov
push
mov
and
jp
test
push
leave
lahf
leave
push
mov
gs
mov
stos
pusha
frstor
pop
sti
inc
inc
in
pop
add
pushf
data16
test
and
mov
out
add
fnstsw
mov
dec
movs
mov
inc
mov
stos
bound
daa
mov
rol
pop
xchg
mov
std
(bad)
mov
push
sbb
mov
xchg
xor
jmp
adc
xchg
or
gs
mov
data16
push
dec
scas
out
outs
fld
mov
jg
inc
mov
das
mov
mov
dec
dec
mov
inc
xor
fist
fimul
or
and
or
scas
mov
gs
add
addr16
shr
enter
hlt
xchg
shl
es
pop
dec
cmp
sub
std
ds
ss
xor
in
shl
in
add
addr16
es
or
xchg
sahf
stos
(bad)
pop
cmc
inc
jge
clc
cmp
dec
(bad)
mov
mov
jg
cmc
sbb
pop
mov
or
dec
pop
ja
retf
mov
cmp
jmp
inc
sub
pop
lahf
fwait
dec
mov
je
fidivr
lds
inc
sti
sub
xor
jl
mov
in
retf
iret
test
scas
add
mov
jge
jbe
data16
mov
inc
jp
mov
push
and
imul
fs
push
xor
(bad)
mov
xchg
pop
sub
lods
pop
push
push
pop
cdq
int
mov
sbb
jmp
inc
fdivr
mov
scas
(bad)
in
int
sahf
pop
mov
xchg
cmp
pop
ins
mov
stos
mov
fld
pusha
push
pop
out
and
les
jne
and
les
fs
scas
mov
mov
xchg
or
fldenv
and
test
push
div
dec
mul
mov
test
mov
loopne
out
mov
add
lods
mov
cdq
stos
jns
test
mov
lea
data16
xchg
xchg
mov
mov
(bad)
cmp
stos
sub
(bad)
repnz
adc
imul
shl
and
mov
test
cmps
mov
sar
loop
ud2
xchg
pop
jb
xlat
movs
adc
jl
mov
js
dec
gs
sub
cli
jnp
lahf
ficom
lods
lahf
or
or
repz
mov
mov
mov
inc
test
add
adc
dec
stos
push
adc
mov
xchg
cmps
mov
mov
loope
cdq
shr
ja
xchg
inc
push
aas
jo
imul
or
add
out
jl
loopne
and
push
adc
xor
aaa
mov
jmp
nop
mov
out
mov
jae
(bad)
jnp
cmp
mov
push
jo
addr16
clc
mov
dec
pop
(bad)
mov
xchg
xor
hlt
into
jecxz
das
mov
adc
not
adc
stos
retf
mov
jp
retf
fs
std
ficom
ret
sub
cdq
jmp
out
sub
addr16
outs
sbb
test
les
mov
mov
mov
mov
rcl
and
jne
push
test
fstp
(bad)
lods
mov
jb
jo
adc
pusha
sub
mov
cmp
sbb
outs
inc
rcr
cwde
leave
inc
and
inc
sub
sub
leave
dec
stos
cdq
pop
test
sbb
fcmove
or
mov
inc
pop
adc
in
(bad)
push
je
jge
sub
mov
or
fwait
or
sti
inc
popa
pop
xchg
jns
mov
jnp
cmp
jmp
jle
mov
xchg
jmp
gs
sbb
inc
inc
iret
mov
add
sahf
cmp
or
sbb
stc
mov
xor
mov
sub
jae
cli
in
test
inc
(bad)
repz
loopne
inc
dec
pop
ret
shr
cld
aam
fdivrp
add
pop
clc
xchg
test
leave
push
pop
sub
es
scas
stos
call
cs
mov
mov
int
xchg
adc
dec
xor
cdq
sbb
call
xchg
cmp
and
cwde
mov
add
mov
push
clc
and
xor
push
(bad)
sbb
pusha
mov
in
fucom
inc
pop
jg
push
push
adc
sub
inc
popa
stos
data16
pop
sub
pop
xchg
mov
lea
mov
retf
addr16
dec
jb
push
xchg
ror
out
mov
lock
mov
cld
xchg
dec
dec
fld
mov
loopne
pop
inc
fidiv
adc
push
in
jmp
pop
and
fs
dec
(bad)
jle
imul
ins
or
xor
(bad)
imul
aaa
or
inc
mov
push
(bad)
leave
in
pusha
mov
mov
int
js
jmp
or
in
lahf
(bad)
adc
cs
add
ja
jns
mov
fidiv
mov
adc
mov
sbb
mov
pusha
sets
xchg
int
sti
xchg
pop
(bad)
push
dec
xor
and
sbb
daa
inc
sub
ja
push
pop
es
push
loope
sub
aas
fs
lods
pop
movs
imul
xchg
fild
push
xor
mov
mov
mov
rcr
shl
adc
int
shl
mov
repnz
dec
jp
dec
test
push
outs
jle
test
xchg
mov
cmps
lea
pop
sbb
call
cmp
dec
add
retf
dec
xor
sub
into
cmps
loopne
push
clc
fldcw
xchg
push
imul
fwait
xor
cmps
sbb
dec
ds
mov
sub
inc
movs
in
aas
cmps
and
test
xor
sub
fisttp
push
sbb
pushf
fnsave
xchg
into
or
frstor
es
adc
aad
in
push
sub
sbb
ins
mov
stos
pop
cmp
iret
mov
fucomip
xchg
fstp
(bad)
xor
cmps
xchg
icebp
jecxz
add
addr16
das
loopne
mov
sub
ror
jecxz
ins
push
test
les
pusha
adc
dec
dec
mov
xlat
cdq
fcom
jnp
sub
mov
inc
dec
add
iret
fnstenv
imul
jne
loop
outs
sub
(bad)
or
bound
(bad)
pusha
xchg
fwait
pop
or
test
shl
cmp
sub
repz
jp
adc
dec
dec
mov
sub
cmp
sub
push
pushf
popa
fs
mov
xchg
xchg
sbb
push
mov
jno
fs
mov
jbe
inc
pop
es
or
repnz
dec
imul
psubusw
push
into
jns
retf
jmp
jle
in
xor
cmp
add
mov
xor
push
out
jno
int
leave
xor
jne
mov
retf
stos
imul
xchg
jns
imul
scas
add
fs
fmulp
mov
shl
inc
and
push
add
int3
pop
imul
repz
cwde
jo
and
push
paddq
cmps
cmp
jmp
test
fisttp
pop
sbb
loopne
loopne
data16
mov
into
mov
cld
inc
ret
mov
push
ja
inc
int
push
outs
cmc
ds
mov
jge
pop
sub
jg
test
test
rcr
xchg
cli
mov
fidivr
and
mov
repnz
mov
scas
arpl
or
inc
inc
pusha
call
cmp
and
cmp
in
cmps
pop
jno
ja
fs
ins
sbb
fcomip
retf
inc
xchg
push
pop
dec
imul
pop
rcl
cmp
sub
sbb
clc
mov
push
stos
fisub
dec
push
ret
push
adc
(bad)
jns
sub
pop
test
(bad)
sbb
xlat
rcl
dec
cmp
cmp
or
leave
loop
ins
adc
stc
jl
inc
shl
add
mov
or
sub
sbb
push
mov
add
ss
mov
mov
rol
and
inc
ins
lahf
cmp
mov
retf
adc
cmp
fwait
pop
xchg
dec
adc
pushfw
shl
rcr
js
je
cmp
iret
inc
jecxz
daa
ret
fdivr
clc
mov
push
ins
add
ins
movs
pop
mov
sub
push
stos
test
aad
mov
jbe
push
rcl
or
test
daa
pop
lock
out
das
xlat
adc
mov
sbb
hlt
xchg
mov
aam
sbb
xchg
mov
dec
out
aaa
xchg
retf
pop
mov
inc
push
test
xchg
ret
jmp
in
cld
xchg
hlt
(bad)
cmp
add
fs
inc
sbb
call
xchg
test
outs
ret
mov
inc
loope
test
imul
jl
(bad)
lock
mov
mov
shl
fcmovnbe
mov
shl
int3
ins
mov
out
sub
and
xlat
call
push
jb
pop
popf
or
outs
cmp
outs
test
push
das
int3
mov
pop
daa
mov
fs
push
dec
cwde
adc
out
or
sbb
test
xchg
icebp
aam
mov
cmc
dec
mov
fld
dec
jb
pop
add
and
repz
inc
mov
test
jle
pop
mov
(bad)
push
mov
jmp
(bad)
mov
xchg
mov
xchg
push
call
mov
push
or
addr16
popf
icebp
cmp
popa
pop
mov
adc
lock
mov
fld
movs
div
xor
mov
dec
sar
mov
add
nop
fnstcw
sar
jmp
pop
cli
mov
out
jo
jle
and
ficom
(bad)
in
pop
dec
sbb
push
ds
pop
xchg
sbb
loope
sub
sbb
outs
fcomp
pop
or
leave
in
sbb
test
mov
push
or
pop
and
outs
sar
test
std
ins
xchg
add
xlat
lock
shr
jns
retf
stos
and
inc
sbb
jno
push
mov
mov
fnstcw
jmp
shl
push
test
cli
fimul
jl
jne
aam
in
and
rcr
jl
ja
xor
shl
sbb
aam
data16
movs
fld
cmps
xchg
and
push
xchg
xor
imul
sub
xor
and
int
add
mov
cmp
add
lea
repz
test
pop
dec
and
cmp
push
push
popf
mov
mov
inc
fs
enter
retf
cmps
fdiv
xor
retf
jmp
data16
xor
inc
scas
shl
jp
lock
inc
imul
add
ret
or
repz
das
std
jb
push
addr16
cld
in
shl
es
mov
jmp
dec
jae
loopne
aaa
test
cdq
hlt
movs
pop
outs
imul
mov
and
aam
mov
ds
test
repnz
jo
outs
cmp
shr
int3
pop
scas
jmp
daa
enter
ss
int3
(bad)
mov
repnz
sbb
mov
sbb
or
outs
(bad)
mov
sar
in
int
imul
popa
pop
fnsave
add
jne
hlt
(bad)
xchg
es
daa
inc
sti
out
jmp
push
sub
je
xor
dec
dec
dec
mov
xchg
scas
call
icebp
jl
movs
cwde
jns
sete
or
pop
(bad)
out
xchg
movs
pop
xor
dec
add
(bad)
jmp
or
xor
fbld
(bad)
cli
ins
mov
add
pop
ins
sbb
dec
pop
jge
jbe
or
jns
dec
sbb
jno
push
jl
lods
movs
outs
and
out
int3
inc
sbb
push
inc
xor
and
ja
in
jp
sub
adc
retf
pop
rcl
push
inc
cmp
ja
jnp
movaps
(bad)
xchg
bnd
xor
imul
loope
sbb
loope
and
arpl
test
cmp
cmp
sub
adc
cmp
call
mov
add
dec
push
pop
dec
inc
sub
jmp
adc
(bad)
jge
test
push
(bad)
cld
sbb
adc
mov
pop
stos
int
mov
or
fbstp
ja
jae
fwait
shl
and
mov
in
jge
jmp
ds
adc
stc
stc
std
(bad)
mov
push
jge
sbb
xchg
sub
scas
(bad)
cmc
dec
push
mov
cmp
xlat
std
mov
imul
pop
daa
sar
push
push
jne
xchg
or
out
idiv
stos
enter
ror
cmp
sbb
fist
sub
aad
jp
leave
mov
inc
in
call
ins
dec
retf
mov
inc
nop
jno
jbe
enter
adc
outs
sahf
std
add
sub
mov
inc
adc
movs
movs
xchg
push
xor
call
lds
jl
and
loopne
in
pop
outs
mov
xchg
sbb
push
inc
xchg
inc
mov
dec
xchg
inc
and
neg
pushf
aaa
or
and
push
mov
ins
add
jb
cmp
ja
loop
jecxz
mov
shr
loopne
lock
jmp
in
mov
xchg
mov
ret
cmp
das
gs
pop
shl
test
and
aas
pop
mov
and
mov
je
xchg
cld
mov
cld
mov
out
push
stos
imul
xchg
pop
cli
xchg
pusha
(bad)
call
xchg
adc
(bad)
stos
xchg
pop
scas
into
sub
jle
lods
pop
xchg
out
sbb
jg
xor
inc
jbe
xchg
cs
xchg
mov
lods
mov
movs
and
dec
inc
mov
pop
in
xor
mov
mov
xchg
movs
shr
es
je
fisubr
add
push
dec
mov
int
and
or
push
in
repz
xchg
dec
(bad)
pop
and
add
scas
popa
add
rcl
das
sub
imul
mov
and
xchg
mov
(bad)
mov
dec
push
out
cs
cmp
xor
sbb
sti
call
xor
jp
cld
and
imul
sbb
icebp
pop
aaa
mov
(bad)
mov
pop
imul
xchg
push
or
outs
or
mov
pop
adc
idiv
div
xor
int
jo
stos
jne
dec
adc
mov
and
shl
sbb
dec
mov
mov
inc
dec
push
bnd
mov
(bad)
push
cmps
mov
in
xor
retf
call
repz
dec
mov
mov
mov
shl
jbe
dec
mov
cli
aad
dec
movs
dec
(bad)
(bad)
jno
and
jns
and
mov
mov
retf
xor
loop
out
or
add
test
inc
loopne
xchg
push
gs
scas
fisubr
js
sbb
pushf
(bad)
call
fdivr
fbld
inc
mov
jmp
jp
push
clc
daa
pop
div
sub
imul
xor
jmp
cmp
js
(bad)
add
popf
and
jge
in
scas
or
dec
inc
cld
mov
mov
xchg
cmp
fisub
scas
sub
add
sbb
xor
test
int
inc
scas
lods
jmp
inc
pop
retf
scas
(bad)
out
cli
fldenv
mov
xchg
shl
ins
adc
and
jo
jge
push
cld
dec
stos
and
cmp
in
sahf
sub
retf
push
mov
loopne
cs
in
scas
es
js
sbb
pusha
lock
mov
adc
sub
push
lea
xchg
aad
and
push
outs
cmc
xchg
in
aaa
jl
sub
dec
add
arpl
jecxz
out
and
ret
in
cdq
pop
shl
xchg
into
adc
bsf
sbb
cs
and
outs
mov
xchg
or
xchg
jae
cmp
in
push
xor
jge
aad
adc
cdq
mov
ror
fmulp
xchg
scas
jbe
push
pop
xchg
rcr
and
fimul
or
dec
cmp
or
test
and
mov
or
cmp
out
push
test
icebp
in
adc
pusha
mov
push
jno
dec
xchg
jno
sbb
cmp
in
mov
jo
push
or
call
shl
pop
rcl
sub
test
dec
(bad)
lods
cmp
fsub
das
mov
aas
sub
test
test
cs
push
retf
pop
sub
fisttp
lods
mov
popf
pop
cmp
inc
cmp
pop
sahf
cmc
aas
mov
fcom
call
stos
mov
loop
stc
fcom
mov
hlt
and
mov
jo
imul
psubsb
(bad)
shl
outs
ret
xchg
scas
mov
(bad)
(bad)
mov
std
mov
xchg
imul
lods
in
(bad)
leave
pop
and
xchg
rcr
fwait
movs
mov
ret
sbb
or
imul
repz
pop
imul
test
xor
pop
inc
add
mov
jbe
cmp
sbb
movs
push
inc
fist
push
ja
push
mov
js
jl
rol
test
jge
mov
xor
and
adc
inc
lods
pushf
pop
mov
test
jle
push
fwait
xchg
fidiv
and
cmp
dec
out
inc
push
xor
mov
lods
pop
addr16
adc
(bad)
jne
push
(bad)
scas
mov
(bad)
fbstp
xor
and
push
in
retf
in
idiv
adc
scas
retf
inc
cmps
nop
das
and
push
sahf
imul
cmps
icebp
mov
push
mov
mov
popf
jae
ss
mov
jo
sbb
xchg
ins
les
xor
mov
push
mov
int3
gs
pop
je
mov
xor
cmp
ja
mov
mov
add
gs
mov
loop
lods
jns
stos
cwde
fisubr
pop
sub
add
cs
push
std
inc
sbb
aam
mov
cmp
dec
jle
mov
mov
addr16
mov
jp
jne
fild
(bad)
jl
jne
xor
pminsw
mov
arpl
inc
icebp
or
mov
inc
movs
or
sub
or
das
xchg
bound
sar
or
pop
retf
inc
cwde
mov
pop
cmps
jmp
sbb
mov
int
test
pop
jecxz
vandnps
mov
popa
fnstcw
jp
cmp
sahf
fimul
add
lods
ret
and
in
dec
vpaddd
imul
ds
xchg
mov
mov
sub
jp
xchg
jno
add
and
xchg
cmovl
loop
daa
and
retf
mov
rol
mov
test
sbb
clc
dec
ret
aam
sbb
mov
cmc
sub
push
add
push
shl
push
cmp
arpl
adc
or
outs
dec
jno
lds
push
add
add
cmps
fs
xor
mov
cwde
add
xchg
scas
outs
shr
out
fldenv
inc
loope
rcl
sahf
push
sub
pop
fs
inc
popf
aaa
movs
sbb
mov
sbb
call
out
pusha
fiadd
pop
retf
cli
pop
xor
test
push
push
sub
test
mov
shr
scas
outs
cmp
adc
loope
adc
movs
in
cmp
test
out
clc
add
cmp
push
lock
popa
xchg
test
xor
pop
mov
outs
adc
sbb
adc
inc
std
cwde
jge
and
jae
mov
leave
(bad)
push
into
jmp
mov
test
je
xchg
neg
and
inc
dec
mov
ds
hlt
fwait
or
gs
dec
mov
loopne
aam
nop
inc
push
or
arpl
hlt
sbb
es
mov
scas
jne
sahf
xchg
mov
outs
push
(bad)
jns
cld
or
push
hlt
icebp
and
jnp
cmp
iret
jne
loope
dec
fld
stc
addr16
jne
cdq
rol
icebp
mov
push
(bad)
ja
ss
mov
push
cld
sub
loopne
lock
repnz
push
es
mov
mov
or
pop
or
jnp
ficom
std
adc
pusha
pop
jg
aam
ret
nop
rol
retf
xchg
mov
nop
cs
sub
dec
adc
sbb
mov
(bad)
rcr
je
dec
(bad)
and
int
jnp
ror
xchg
ror
out
adc
dec
sbb
kxnorw
ret
icebp
js
sub
and
outs
fdivr
inc
jbe
pusha
into
jl
push
pop
pop
add
dec
push
sbb
jp
sub
add
test
cmps
lods
dec
in
imul
cmp
pop
cdq
xchg
cmps
push
inc
cmp
arpl
daa
xchg
cmps
inc
inc
aaa
in
fmul
int3
add
xchg
dec
outs
test
imul
push
out
xor
ds
test
aam
cmp
xor
inc
add
or
adc
aad
popa
mov
daa
sahf
in
mov
bound
jg
les
sub
add
adc
push
push
jne
(bad)
xor
cdq
inc
add
pop
sub
call
cmp
dec
fwait
shr
and
push
push
xor
ins
inc
rcl
xor
sub
in
in
push
jb
or
jle
and
mov
das
xor
(bad)
daa
cmc
fstp
mov
sub
lahf
outs
mov
jg
retf
sub
inc
stos
mov
push
pop
add
fdiv
xlat
rcr
add
scas
mov
aas
push
rol
jmp
cs
js
pop
jecxz
mov
xor
jb
sbb
mov
and
(bad)
cli
in
mov
cmps
mov
cmp
mov
pop
and
ret
jbe
cmp
loop
xchg
fsub
xor
and
pop
mov
fcomp
and
jp
fneni(8087
xchg
add
call
xchg
fsubr
xchg
xor
xor
push
iret
(bad)
adc
or
jb
test
pop
push
adc
cmp
ret
inc
xlat
jmp
arpl
pop
test
arpl
or
outs
push
ror
daa
pushf
sub
push
inc
jns
sbb
xor
mov
fcom
scas
fnstcw
adc
xor
out
pusha
mov
lds
das
jmp
retf
add
pop
xor
sub
add
aad
ja
jae
ror
loop
in
push
sub
cmp
pop
bound
jge
gs
in
dec
daa
jmp
push
cmp
pushf
pop
sbb
mov
jne
mov
xor
xchg
sub
mov
lock
aam
stos
mov
fild
cmp
cs
sbb
enter
adc
jbe
shl
pop
sbb
push
std
sbb
addr16
fs
cli
pop
addr16
call
and
ss
lea
aaa
sbb
mov
mov
inc
mov
pop
adc
xor
int
or
push
mov
sbb
mov
sub
in
xchg
sbb
adc
jmp
das
adc
ins
ss
loop
cld
push
ss
push
adc
into
jne
inc
cmp
sbb
pusha
iret
fwait
ins
pop
rol
mov
cmp
cmovbe
mov
mov
mov
mov
pop
fidiv
jbe
pop
mov
xchg
push
mov
push
or
inc
arpl
shl
es
leave
mov
mov
and
cmp
sahf
fdiv
cmp
idiv
push
push
jns
je
inc
sub
xlat
sub
dec
cmovb
mov
pop
ins
fstp
arpl
inc
jnp
leave
std
gs
aam
mov
fldcw
cmp
xchg
sbb
jmp
xchg
cmps
es
xchg
xor
mov
dec
add
aaa
sub
imul
mov
xchg
int3
aaa
add
push
adc
mov
repnz
inc
xor
push
mov
push
or
(bad)
cmp
sti
mov
xor
std
dec
xor
push
adc
out
loopne
dec
inc
in
cmp
js
sbb
or
stos
idiv
out
shl
jp
std
or
add
push
cli
scas
pop
mul
jo
adc
inc
pop
or
lods
cmp
outs
inc
out
and
movs
into
popa
xchg
out
mov
sub
mov
pcmpgtw
xchg
inc
lods
xchg
pushf
popf
iret
stc
fiadd
dec
add
inc
in
push
js
and
sub
sbb
add
sbb
add
xchg
push
jl
rsm
clc
je
sub
aas
sbb
retf
cdq
jmp
sub
into
test
(bad)
or
(bad)
iret
in
je
int3
push
call
inc
into
sbb
push
stos
adc
mov
jle
jne
sbb
(bad)
leave
and
inc
xchg
adc
test
sub
jno
xor
daa
jmp
and
(bad)
(bad)
cmp
dec
addr16
ficomp
pop
xor
and
adc
add
cmp
pop
sub
retf
xor
sub
ins
jo
dec
sbb
clc
fcmovnb
imul
mov
cmovns
(bad)
js
leave
cs
pop
sub
in
retf
inc
inc
inc
out
(bad)
dec
pop
xchg
daa
movs
pavgw
popa
fimul
aad
mov
ficomp
leave
xor
shrd
outs
stc
sub
jmp
mov
out
aaa
jmp
pop
shr
int3
icebp
js
sti
jg
hlt
mov
mov
popf
xchg
mov
or
pop
pop
add
mov
mov
cmc
mov
lahf
adc
cmp
je
and
pop
repz
inc
pusha
test
dec
cmps
cdq
inc
jae
scas
addr16
(bad)
mov
sub
cmp
test
cmp
cmc
or
ret
push
ins
sub
scas
and
push
std
push
mov
ins
push
fsubp
stc
hlt
(bad)
mov
mov
mov
and
ret
outs
lock
ret
or
iret
in
adc
call
dec
stos
adc
cmps
ins
fild
addr16
mov
cmps
scas
push
ja
lock
add
(bad)
pop
jns
mov
in
ror
(bad)
push
mov
adc
lods
imul
jmp
mov
in
sbb
jnp
int3
sub
mov
jns
mov
aas
mul
lds
lea
cdq
mov
mov
jnp
pop
adc
out
(bad)
mov
adc
cwde
mov
jg
jge
dec
and
dec
jmp
jo
popf
mov
or
cmp
fs
retf
jae
ror
ss
ins
shl
sub
out
iret
lods
lods
es
jge
lods
jecxz
and
jns
loop
sar
pop
sbb
and
in
js
ds
int3
mov
sub
xor
lods
cmp
mov
into
mov
or
dec
fwait
push
or
jmp
sbb
dec
repnz
cmc
xchg
adc
int3
lods
push
stos
inc
addr16
stos
imul
je
and
push
div
push
cmp
iret
imul
cmps
jmp
adc
mov
dec
xlat
and
adc
ss
push
(bad)
lahf
cwde
sbb
push
loopne
sbb
call
pushf
jno
aas
and
stc
call
dec
fs
out
jmp
xchg
xlat
pop
dec
mov
shrd
shl
add
push
lods
imul
add
jb
adc
sbb
jo
jmp
jg
mov
out
mov
cmp
sub
mov
shl
int3
or
mov
retf
push
jae
add
or
mov
movs
xchg
retf
hlt
add
test
add
rol
pop
mov
ret
dec
sub
mov
mov
pusha
mov
inc
push
push
and
mov
jg
ret
adc
adc
lods
inc
call
dec
es
arpl
mov
mov
cmps
xchg
shl
ret
dec
inc
test
out
sqrtps
xor
leave
cs
push
and
and
out
cli
in
stc
adc
mov
out
daa
adc
xor
iret
cmp
pushf
mov
fbstp
in
push
pop
mov
add
sub
xchg
dec
sbb
ret
pop
call
jb
call
dec
add
mov
imul
daa
mov
inc
sbb
out
fmul
out
and
or
imul
ret
add
sbb
add
or
jb
mov
pop
jns
(bad)
lods
cmps
cmp
fisttp
push
test
jnp
pusha
into
mul
lahf
fadd
xlat
pandn
popa
mov
imul
adc
jmp
sub
mov
jg
inc
retf
mov
arpl
std
cmp
fwait
push
adc
or
in
pop
jnp
arpl
fild
jbe
icebp
lahf
jecxz
loopne
(bad)
push
push
push
or
lahf
mov
shl
pop
push
repz
jge
loop
loopne
test
lods
stc
mov
scas
sub
pop
fwait
pop
pop
fcom
dec
jmp
mov
int
fldenv
xchg
bound
xchg
add
or
push
(bad)
and
repz
push
add
lock
rol
loop
push
stos
ds
mov
test
and
sub
sub
mov
xlat
test
sub
pop
lods
mov
xchg
push
sub
mov
sub
xchg
imul
fsubr
cmp
in
push
mov
sbb
test
ins
call
sbb
jg
ret
popf
fchs
sbb
jnp
adc
cmps
fisub
inc
es
push
ins
stc
fnstcw
or
into
inc
cmps
and
nop
jmp
not
out
inc
cmp
loop
into
cmc
iret
xchg
mov
mov
fsubp
adc
adc
or
cmp
movs
ja
inc
mov
repnz
into
sbb
mov
and
loopne
or
aad
popf
loop
aad
retf
push
jne
push
xor
ds
imul
push
push
dec
push
or
xchg
cs
jno
imul
jne
hlt
push
aam
xchg
mov
es
jmp
add
bound
ror
push
inc
push
sbb
inc
jmp
mov
dec
xchg
cs
mov
js
idiv
(bad)
xchg
xchg
cmp
and
rol
push
jge
or
mov
mov
or
int3
jg
nop
cs
test
jnp
and
aad
lock
push
popf
pushf
jno
stos
pop
mov
adc
pop
ds
sbb
xor
xchg
adc
jecxz
jbe
xor
push
nop
in
cmp
push
and
add
mov
xchg
xchg
dec
jne
pop
and
xchg
mov
test
imul
(bad)
sahf
or
je
sbb
mov
mov
and
add
sub
scas
movs
jg
xlat
(bad)
push
cld
sub
(bad)
gs
mov
scas
mov
cmps
cwde
call
add
aam
xor
sar
cld
push
ror
ins
pop
cmp
outs
call
les
xchg
or
push
mov
outs
mov
outs
mov
loopne
mov
inc
mov
int
stos
in
loope
shr
inc
(bad)
mov
jle
xchg
(bad)
fidivr
xor
ss
sub
test
xchg
mov
jne
push
dec
pop
mov
or
xor
pop
jmp
xor
jno
mov
nop
cmp
jo
lods
jecxz
push
cdq
xor
cmps
retf
sbb
dec
fs
add
xchg
aam
adc
sar
repz
and
sub
mov
hlt
and
retf
pop
shl
aam
add
mov
xchg
sbb
jecxz
iret
cmp
xor
mov
jb
std
mov
enter
lea
dec
loope
shr
jae
pop
mov
mov
adc
leave
xchg
mov
scas
xchg
add
nop
or
or
sub
pxor
xchg
mov
out
dec
mov
retf
adc
idiv
sbb
iret
sub
arpl
jbe
push
jmp
jecxz
sub
gs
in
fbstp
mov
ss
push
rcr
ret
mov
inc
jmp
cli
sub
jle
je
adc
sub
test
(bad)
loope
out
hlt
js
fild
dec
xchg
and
loope
xchg
push
rol
or
(bad)
cmp
inc
pop
stos
mov
sub
xlat
mov
loope
cmp
pop
retf
mov
adc
dec
mov
mov
fisubr
imul
sahf
gs
in
mov
hlt
fnstcw
mov
mov
dec
vcmpsd
test
mov
mov
stc
ins
mov
pop
rol
pop
arpl
pop
xchg
pop
sbb
inc
mov
sti
call
pop
hlt
adc
enter
pop
xor
fild
push
adc
arpl
retf
pop
shr
lahf
jle
xchg
ret
int
jl
push
xchg
pop
mov
paddb
les
mov
jle
mov
or
mov
ret
cmc
in
mov
lea
rcl
sub
xchg
ja
cmp
xchg
pushf
mov
lahf
rcr
push
xchg
outs
adc
jbe
push
aad
aaa
rcr
cld
ja
mov
in
nop
je
sub
xchg
mul
or
jns
push
or
popa
xor
popf
jb
dec
push
popa
scas
shr
add
lock
mov
inc
bnd
mov
mov
sti
pop
push
scas
xchg
std
mov
adc
in
cli
inc
aas
push
sub
scas
pusha
fcom
add
mov
dec
mov
enter
push
jge
lea
inc
push
mov
jno
xor
(bad)
mov
sbb
scas
push
ret
nop
dec
or
in
popa
mov
retf
push
push
push
jb
mov
jnp
dec
jo
mov
ins
es
sbb
fild
mov
jae
adc
stos
aam
cs
mov
push
pusha
adc
push
jne
and
pop
mov
xchg
ficomp
popa
retf
xchg
or
pusha
int
imul
adc
es
pusha
aam
sbb
popf
pop
cmp
test
inc
mov
jmp
hlt
jmp
ds
mov
out
jmp
mov
push
mov
mul
pop
(bad)
cwde
sbb
jmp
push
mov
cmp
sar
push
inc
push
xor
mov
push
mov
add
scas
jae
into
lods
into
adc
jns
sub
xchg
pop
outs
xor
rep
scas
cwde
lds
lea
mov
xor
sub
dec
and
mov
cmc
mov
mov
fwait
not
test
jl
xor
into
retf
mov
add
push
test
xor
inc
pushf
lods
fnstcw
(bad)
mov
fcmovb
fwait
pop
inc
ret
hlt
jmp
push
cmp
mov
or
jae
test
shl
in
push
movs
lods
out
loopne
ficomp
or
in
call
jo
xchg
push
std
fwait
gs
rol
mov
xor
scas
int3
in
enter
frstor
icebp
push
jbe
or
sbb
pop
sti
outs
push
neg
dec
cmp
call
es
dec
push
into
aam
in
xchg
dec
adc
inc
push
iret
(bad)
movs
dec
aad
fdivp
mov
daa
in
dec
or
xor
mov
imul
jae
pop
shl
cwde
pop
xor
mov
cmps
es
and
and
add
bound
jl
xor
sub
push
ja
fdiv
addr16
fild
sbb
add
neg
nop
movs
and
out
in
aas
mov
push
aam
cdq
jecxz
adc
inc
aaa
enter
lock
ds
movs
sbb
xor
gs
pop
jb
cmp
cwde
retf
mov
or
clc
icebp
cmp
xor
ret
mov
push
or
fisub
inc
fldenv
xchg
mov
outs
dec
cs
les
xchg
jmp
xchg
fnstcw
dec
xchg
cmps
xchg
xor
aas
(bad)
loop
fcom
mov
scas
(bad)
push
test
and
outs
mov
ret
cmp
repz
js
jnp
jge
sub
sahf
das
jnp
test
fsub
sbb
shr
jae
retf
xchg
adc
retf
cmps
es
pop
rol
mov
inc
mov
shl
pop
cmps
(bad)
fcom
xchg
das
mov
jle
sbb
int
fisubr
pop
pop
inc
shr
cmp
inc
ret
mov
ror
mov
dec
jp
jg
inc
add
movs
imul
cmp
pop
adc
mov
fidivr
dec
inc
daa
subps
ins
jb
pop
inc
nop
stos
jae
sub
push
push
pop
inc
fcom
cld
aaa
cmp
scas
sub
cmps
(bad)
lods
enter
mov
xor
xor
and
adc
inc
xchg
rol
push
mov
ror
and
push
cmps
into
sti
xor
in
scas
mov
lea
dec
clc
mov
cdq
jb
popf
dec
xchg
and
ins
fchs
add
push
push
cli
cmp
test
jmp
and
js
fcom
sahf
pop
xor
sbb
mov
xchg
ret
mov
xor
dec
push
push
mov
mov
fs
out
ss
call
sbb
repnz
mov
jb
and
xchg
test
jno
push
pop
lahf
jge
imul
jge
xchg
or
adc
je
dec
inc
sbb
in
in
lea
outs
xor
mov
dec
sti
pop
movs
arpl
fiadd
mov
mov
xchg
mov
(bad)
ficomp
xor
mov
or
bound
mov
dec
(bad)
adc
sbb
sbb
mov
enter
mov
pop
push
sub
subps
or
push
ja
and
cwde
icebp
int3
pop
lss
(bad)
push
push
std
aas
(bad)
into
clc
cmps
sbb
ret
xchg
cs
iret
pop
dec
movs
test
les
cmp
arpl
das
stos
ds
mov
movs
inc
adc
les
add
sub
inc
lea
sbb
lds
pop
pop
lds
xchg
test
inc
jge
(bad)
mov
mov
add
ret
ds
mov
pop
mov
jmp
aaa
cs
loop
aas
or
push
cmps
inc
mov
xor
repz
or
and
cwde
loop
sub
ins
mov
xchg
mov
and
fcomp
xchg
or
aaa
fisttp
movs
or
push
pop
sbb
bound
fimul
jmp
fnstsw
in
pop
ja
out
repnz
call
fisttp
int3
mov
stc
aaa
dec
out
shr
mov
pop
cld
and
cmp
jb
lock
fcmovb
cld
mov
test
push
jl
jmp
scas
jbe
inc
cmc
out
xchg
adc
call
or
sbb
imul
cwde
mov
mov
mov
shl
loopne
js
add
sub
or
addr16
sub
dec
cmp
out
push
sub
add
out
ins
test
js
adc
jbe
ins
aaa
adc
in
pusha
retf
ret
add
pop
sub
jmp
fst
push
mov
cmps
ins
int
mov
jo
adc
shr
mov
fdiv
std
cmc
pusha
xor
xor
daa
cmp
sbb
leave
in
movs
aam
mov
es
or
xchg
fs
div
aas
aam
(bad)
fisub
pusha
adc
sbb
rol
rcr
int3
pop
mov
test
inc
add
jb
clc
cmp
sbb
imul
lods
mov
dec
push
pop
pushf
xchg
out
les
and
cwde
pop
pop
dec
clc
inc
xchg
data16
jnp
push
sub
mov
idiv
fild
mov
mov
dec
cwde
jo
jns
and
mov
loope
ret
and
(bad)
sbb
xor
jns
call
loope
jmp
xlat
mov
cdq
push
cmp
adc
xor
push
or
or
mov
or
loop
push
push
aad
nop
and
xchg
push
test
cmps
dec
mov
mov
mov
and
aaa
and
jno
pop
add
aam
push
js
inc
xor
leave
scas
sbb
popf
pop
or
arpl
repz
mov
jo
test
fld
and
fnsave
fidiv
test
xor
jg
fst
pop
inc
hlt
fsubr
dec
pop
in
inc
jo
mov
ins
ja
inc
aam
add
(bad)
scas
xor
xchg
jb
adc
movs
add
cld
jmp
retf
lock
pushf
inc
jno
fstp
pusha
sahf
push
add
call
pop
out
jge
pop
sbb
call
scas
push
xor
xor
ja
(bad)
cli
cdq
sub
pop
mov
mov
jecxz
push
stc
test
std
sbb
xor
mov
inc
pop
test
adc
add
adc
test
push
add
jmp
lods
bound
or
imul
mov
sbb
retf
retf
test
push
pop
cdq
arpl
movs
jle
pop
xchg
inc
and
sbb
test
les
in
mov
shl
fs
(bad)
inc
pop
mov
mov
jmp
cmp
outs
and
mul
(bad)
pop
jmp
popa
xchg
xor
out
push
data16
arpl
sbb
fadd
gs
mov
mov
mov
ds
sub
std
stos
mov
in
cmp
mov
(bad)
xchg
jmp
mov
xchg
retf
in
stos
push
xlat
inc
xchg
cmp
or
mov
xlat
pop
imul
xchg
aas
bound
in
hlt
jb
in
scas
repz
or
fidivr
and
jg
fdiv
or
push
jecxz
pop
xchg
in
sbb
sti
mov
test
xchg
push
mov
pop
dec
push
jae
xchg
enter
loope
pop
xchg
pop
push
or
popa
(bad)
adc
pop
sub
or
sbb
xor
add
and
lods
adc
dec
pop
pop
pop
sahf
mov
rol
(bad)
hlt
cmp
imul
mov
out
(bad)
cmc
adc
in
and
fiadd
and
xchg
aaa
mov
push
test
cmc
aam
inc
pop
sahf
cwde
lea
aas
pop
and
(bad)
mov
xor
movhps
lahf
lahf
jge
mov
out
fsub
xlat
mov
mov
mov
(bad)
sar
jae
cmp
nop
(bad)
stc
into
popf
cmp
or
adc
fwait
repz
sub
imul
xor
inc
cmp
sbb
jl
jp
xchg
push
(bad)
push
test
mov
out
push
sbb
jmp
jno
mov
xchg
cld
test
(bad)
movs
fisub
jmp
imul
push
shl
jbe
loopne
fs
mul
lods
test
or
ds
adc
pusha
popa
loop
ins
les
xchg
inc
stc
es
jno
je
pop
cld
push
ret
lods
stos
fcom
xor
lds
xchg
movs
inc
add
jo
iret
cld
add
stc
aad
arpl
arpl
repz
or
add
scas
xor
int3
aaa
cmp
mov
adc
jp
(bad)
or
outs
cmp
pushf
retf
add
or
out
or
push
ror
xchg
jge
mov
xchg
rol
push
pop
push
addr16
or
(bad)
leave
xchg
mov
xor
jp
clc
xor
lahf
xchg
add
ins
adc
dec
adc
mov
dec
js
sbb
mov
adc
mov
ja
ret
jnp
(bad)
cmp
mov
repz
xor
mov
mov
mov
fcmovne
fld
inc
xor
idiv
mov
rcr
pusha
mov
cmp
out
pop
ret
jp
fild
jl
clc
mov
into
movs
imul
and
push
and
xchg
sub
push
fst
mov
rol
or
call
mov
cmp
adc
adc
add
outs
pop
mov
aad
ret
imul
loop
mov
mov
or
imul
mov
fistp
movs
xor
mov
adc
shl
jp
ins
cld
adc
sub
ins
adc
adc
mov
pop
cmp
out
hlt
rol
stos
adc
hlt
int3
add
add
xchg
in
loope
cmps
lahf
sub
and
inc
shr
jmp
mov
and
pop
pop
jne
jne
enter
and
xchg
call
movs
int
push
sbb
retf
je
inc
cwde
gs
jnp
shl
std
mov
jl
nop
or
int3
xchg
or
mov
mov
sub
jp
xchg
int
add
jnp
shl
loopne
adc
ins
push
ja
not
sbb
add
gs
or
pop
stc
adc
mov
mov
retf
icebp
test
lea
retf
aam
lahf
dec
add
in
aaa
cmp
xchg
mov
dec
stc
mov
sbb
dec
test
push
and
lods
sbb
and
cmp
and
lock
mov
loopne
jbe
lods
out
jmp
das
outs
out
loopne
add
aam
cdq
dec
sbb
mov
fst
call
xchg
push
mov
jns
and
das
pop
fidivr
jp
das
xlat
cmovge
pop
xchg
cmp
dec
scas
inc
pop
in
mov
adc
push
pop
jno
ins
mov
mov
out
mov
(bad)
dec
retf
xchg
movs
pop
fs
dec
push
out
popa
out
adc
mov
popf
outs
std
aas
mov
sub
push
ins
es
inc
ins
inc
sub
sub
loope
outs
add
jmp
or
dec
pop
pop
ret
sti
cli
pop
sti
adc
sahf
xchg
fdiv
and
pop
enter
jmp
push
or
xor
popa
mov
outs
test
cli
rol
mov
in
das
mov
and
lods
jno
stos
push
xchg
pop
or
shl
dec
leave
adc
stos
(bad)
sub
js
xor
xchg
pop
arpl
shl
sub
mov
rcr
mov
pop
adc
inc
repz
xlat
xchg
dec
xor
mov
inc
ss
stc
in
inc
pusha
sti
xor
jmp
push
cmp
in
pusha
iret
pop
and
jo
add
xor
int3
cmp
cmp
or
jnp
sub
push
jg
sbb
jle
cmp
sub
inc
movs
cs
mov
mov
(bad)
xor
push
(bad)
jle
xor
push
add
fiadd
clc
add
sub
mov
icebp
loop
test
xchg
xor
ret
and
pop
stos
xor
mov
sub
out
fstp
aaa
pop
cmc
adc
pop
stos
push
(bad)
add
leave
jmp
loope
adc
cmps
add
xchg
dec
sbb
jge
jo
mov
cli
jns
push
jmp
mov
pop
adc
sbb
in
pop
pop
pop
clc
fld
mov
std
movs
out
push
dec
inc
mov
mov
sub
or
pop
add
or
iret
mov
xchg
mov
xor
mov
sbb
jo
ss
jb
icebp
sbb
pop
dec
sub
movs
adc
xor
stos
js
ins
lds
and
cmp
mov
ret
retf
popf
push
inc
fmul
or
push
stc
cwde
mov
cmp
movlhps
cmp
mov
inc
xor
(bad)
aam
xchg
jnp
aam
movs
leave
js
and
cmp
cmc
xor
mov
in
adc
pop
pop
cmps
pop
inc
cmp
pop
xchg
or
push
outs
div
sbb
imul
jbe
scas
sahf
cmp
sti
xchg
mov
inc
cmp
sahf
fwait
mov
add
sahf
dec
pop
cmps
mov
enter
fcomip
or
or
fucomp
add
inc
in
(bad)
jle
adc
or
shr
scas
inc
mov
cmp
push
in
sti
mov
iret
mov
mov
jg
clc
xor
mov
clc
retf
mov
aad
and
retf
mov
jp
mov
out
sbb
xchg
inc
or
cmps
jb
cdq
loope
pusha
jg
int
or
jb
cwde
dec
das
pop
jns
push
ror
cli
fiadd
push
adc
inc
fisub
sub
push
sar
pop
cwde
dec
xchg
in
mov
in
push
pop
mov
mov
or
aaa
mov
pop
das
lds
call
je
sbb
sub
xchg
stos
repnz
pop
add
add
test
mov
aam
jmp
jmp
out
sub
and
adc
push
cmps
xor
inc
pop
mov
sub
dec
sbb
sub
mov
and
cmp
inc
mov
push
or
push
fldcw
add
das
(bad)
hlt
loopne
pop
test
and
sbb
pop
outs
dec
dec
pop
sub
push
cmp
aam
adc
sub
test
data16
cmp
pop
in
or
pop
jbe
div
ret
je
inc
imul
push
mov
cwde
lahf
cwde
and
aas
adc
gs
test
jmp
mov
pop
je
iret
inc
fcmovne
mov
fbld
xchg
ficomp
ss
call
adc
pop
rcl
mov
je
pop
jmp
push
inc
push
fs
xor
es
out
sti
push
scas
adc
iret
int3
pop
dec
outs
push
aaa
ds
xor
pop
into
jmp
movhps
inc
xchg
clc
mov
inc
inc
leave
fbld
std
dec
jnp
add
sti
test
(bad)
gs
cmps
pop
jne
sahf
pop
ret
mov
pushf
out
fidivr
mov
rcr
in
ja
xchg
jecxz
pop
or
mov
adc
xlat
mov
jmp
mov
mov
rcl
pop
lea
rol
movs
pop
shl
ja
int
imul
int
dec
and
cdq
push
cld
mov
add
pop
ret
xor
shl
iret
retf
in
and
jns
or
neg
or
mov
xchg
mov
div
mov
pop
sub
inc
mov
jmp
mov
cmp
and
cld
mov
enter
lahf
pop
or
cwde
pop
nop
jns
retf
test
stc
xor
jbe
mov
(bad)
xchg
xlat
adc
mov
mov
int
out
sahf
and
dec
cwde
test
mov
cmp
out
ss
out
mov
nop
pop
add
aaa
mov
sahf
jmp
adc
inc
loope
inc
pop
int3
xchg
(bad)
aaa
repnz
inc
push
dec
adc
loope
test
test
cwde
shl
nop
adc
lods
xchg
aad
sbb
enter
movs
cmp
mov
xor
mov
scas
jo
pop
mov
and
mov
movs
jo
ds
leave
cmp
pushf
xor
sbb
gs
retf
cmp
lds
pop
mov
adc
jmp
add
cmps
les
mov
pusha
dec
(bad)
and
out
xor
inc
imul
in
enter
sbb
push
adc
out
ficomp
xchg
pop
rcr
ds
(bad)
call
outs
mov
xchg
push
sub
mov
cmp
pop
pop
je
add
push
pop
mov
iret
mov
mov
retf
loopne
or
ja
fdivr
and
imul
xor
mov
f2xm1
jg
fwait
in
loopne
ret
test
scas
test
call
and
pop
rcl
movs
sbb
push
(bad)
or
call
xor
ins
or
pop
push
stos
push
hlt
fisttp
(bad)
jecxz
pusha
jbe
adc
dec
push
(bad)
ja
lods
mov
xor
icebp
add
adc
jg
jp
addr16
into
mov
inc
add
pop
leave
cmps
xchg
pop
push
push
pop
int3
and
sbb
jo
inc
inc
mov
mov
push
inc
mov
inc
dec
pop
cmp
and
pop
(bad)
aad
je
xchg
div
cmp
retf
fstp
ss
xchg
cmp
inc
test
push
fsubr
popa
mov
or
add
std
mov
add
pop
push
sahf
fcom
mov
mov
cli
inc
das
call
mov
jecxz
jecxz
mov
add
mov
cld
test
and
aas
jecxz
pop
jb
sbb
sbb
mov
test
stos
test
and
imul
xchg
imul
loope
loopne
pop
mov
movs
call
jge
cmp
jb
jmp
mov
aam
and
inc
gs
add
lods
or
xchg
pop
(bad)
cmp
test
dec
mov
arpl
push
aas
add
call
fs
jecxz
pop
stos
sub
jp
fimul
jmp
scas
and
in
pop
pop
mov
inc
mov
push
cmp
adc
(bad)
ror
cs
pop
rol
sbb
scas
xchg
bound
out
jne
daa
push
rcr
cmps
xor
das
dec
or
out
sub
pop
mov
ret
test
jecxz
lods
outs
outs
in
sub
ins
and
pop
sub
mov
mov
push
pop
jp
mov
(bad)
mov
pop
adc
daa
pop
or
lahf
inc
int3
je
mov
fwait
cwde
icebp
sar
jnp
test
fild
and
and
stc
repnz
sbb
cld
push
jge
mov
xchg
jg
mov
and
pop
inc
sub
or
arpl
mov
mov
xchg
aaa
pop
jmp
jmp
icebp
test
or
add
push
ds
stc
mov
and
or
(bad)
dec
mov
ret
stos
adc
lea
sub
push
vpsubd
xor
adc
mov
fistp
sbb
aad
rcr
outs
mov
sub
add
call
xor
push
or
fcom
stos
popf
mov
xchg
je
stc
pcmpeqw
mov
jg
in
enter
pop
int3
ss
loop
mov
xor
out
fdivr
add
or
sbb
fdivr
sub
mov
push
sub
ins
sub
sbb
jo
sbb
sub
fld
(bad)
ret
push
out
ins
inc
and
cmps
cld
dec
lods
fsubr
add
retw
retf
(bad)
mov
dec
mov
pmulhw
push
add
adc
sbb
jo
aam
call
ret
rol
dec
in
cmps
and
je
jp
and
cmp
pextrw
xor
fadd
aad
push
push
mov
sahf
mov
and
push
(bad)
aam
adc
icebp
fst
cmp
pop
out
sub
ins
jmp
cmps
repz
jb
and
pop
jecxz
cmp
mov
cmp
out
xor
fxch
mov
(bad)
mov
push
adc
pop
and
sub
out
push
push
fwait
sbb
bound
arpl
fld
cmp
repz
retf
and
ds
adc
adc
adc
or
ja
lea
imul
mov
push
jbe
ficom
in
nop
add
xchg
sub
adc
adc
ins
retf
mov
sub
loope
adc
ins
or
test
push
retf
cmp
inc
jp
or
push
and
lods
stos
pushf
cmovne
xchg
jne
xchg
push
pop
dec
jle
mov
les
out
or
fisubr
rcl
in
xor
sbb
xor
jne
and
div
or
cmp
pushw
sbb
not
mov
hlt
(bad)
shl
adc
movs
sar
cld
or
pop
gs
xor
or
cmp
mov
add
sub
mov
shr
js
fiadd
mov
mov
lods
push
sar
xchg
popa
pop
push
das
loop
ins
jo
fistp
es
sbb
cdq
fucomi
add
in
dec
test
(bad)
sub
fist
push
mov
cmp
cmp
push
mov
xchg
mov
js
mov
out
mov
adc
cli
out
mov
jmp
imul
ja
ror
rcl
into
(bad)
sahf
stos
(bad)
adc
rcl
mov
into
movs
dec
fbstp
pop
mov
push
dec
mov
dec
les
bound
add
xchg
stc
xchg
jl
cmps
ins
int3
aas
jg
(bad)
scas
or
pop
out
test
sbb
xchg
sbb
pop
or
arpl
and
fnstenv
test
dec
cmps
sub
inc
mov
push
fiadd
arpl
aaa
adc
(bad)
imul
lods
jns
clc
pop
ss
cld
addr16
in
jmp
xchg
in
les
outs
pop
jo
lods
mul
cmp
or
fisubr
mov
mov
(bad)
fbld
gs
cmp
push
fild
push
pop
arpl
jbe
mov
popa
clc
neg
dec
xchg
je
shl
ins
or
jae
stos
xchg
pop
push
sbb
lds
or
cmp
fld
jb
xor
mov
pop
dec
cld
lea
pop
outs
fist
ret
fwait
test
ror
or
(bad)
mov
pop
sub
jle
cmp
pushf
add
sbb
(bad)
popf
dec
iret
push
xor
int3
dec
fcmovnbe
lods
arpl
jns
fistp
retf
(bad)
mov
xlat
pop
dec
inc
icebp
xchg
mov
test
retf
xchg
xchg
adc
cmp
outs
pushf
ins
mov
push
push
xchg
mov
shl
adc
cmc
enter
call
dec
push
xor
sbb
add
sbb
les
jmp
jbe
(bad)
sbb
les
inc
imul
mov
and
pop
loopne
mov
(bad)
ficomp
fiadd
dec
jecxz
fwait
cmp
and
sahf
mov
ret
fs
add
in
push
(bad)
cs
cmc
ins
jg
lds
das
xchg
inc
outs
pop
mov
outs
and
push
ss
dec
or
xor
mov
xlat
out
push
push
sub
(bad)
xchg
or
add
shl
jbe
rcl
sbb
(bad)
sar
inc
jb
(bad)
repnz
xchg
ja
xor
adc
inc
jbe
ins
mov
mov
push
adc
retf
jp
and
jne
sub
outs
jl
lds
sar
xchg
adc
jmp
adc
mov
mov
jbe
adc
rcl
repnz
test
adc
movs
jnp
test
cmp
outs
imul
imul
and
outs
sub
push
mov
pushf
rol
int
dec
cmp
mov
cmps
jbe
popf
(bad)
pop
xlat
icebp
jle
jge
cmp
mov
out
add
jle
(bad)
shl
retf
jns
pop
mov
mov
and
pop
stc
fwait
inc
scas
jnp
in
(bad)
push
adc
push
pop
aas
adc
ret
lds
sahf
outs
in
mov
out
les
ret
mov
mov
cmc
xchg
arpl
adc
jl
sar
push
push
pusha
inc
mov
dec
push
mov
lea
xlat
adc
add
(bad)
mov
std
xchg
xchg
mov
mov
dec
mov
pop
icebp
mov
cld
fwait
sbb
shl
rcl
jno
pop
dec
mov
in
jbe
mov
inc
loope
xor
jp
out
cmp
int
mov
fwait
outs
push
int
or
sti
xchg
leave
add
(bad)
inc
cmc
push
mov
mov
sbb
js
and
mov
mov
sub
push
mov
or
out
inc
pop
sbb
repnz
mov
int
aam
stc
inc
pop
dec
pusha
sbb
push
push
push
push
jle
and
mov
js
outs
xor
lahf
push
xchg
or
lods
dec
inc
ss
popf
sbb
xchg
pop
test
cmps
cmp
fmul
js
ret
aam
daa
test
pop
mov
pop
jnp
push
pop
imul
mov
push
(bad)
sub
sbb
(bad)
mov
ins
int3
lock
sbb
adc
add
test
ds
aaa
lea
jno
cwde
dec
mov
cwde
jb
push
jmp
imul
mov
or
add
mov
push
out
push
add
adc
sub
add
adc
dec
sbb
push
xchg
stos
aad
test
fimul
cwde
in
push
cmp
jae
mov
xchg
xchg
jno
ins
adc
add
and
jg
or
inc
mov
or
add
(bad)
or
xor
xchg
loop
and
xlat
inc
push
neg
adc
cmp
lods
jno
movs
(bad)
mov
popa
pop
stos
fwait
add
jle
cmp
sbb
jg
inc
dec
out
sbb
push
ds
jmp
or
rcl
cld
pusha
fldenv
sar
loope
(bad)
inc
(bad)
mov
push
mov
push
stos
or
inc
dec
popa
sub
mov
mov
sub
loopne
das
jg
imul
jno
cmp
cmp
out
mov
pusha
enter
inc
xchg
test
sub
fist
cmp
jns
gs
add
pushf
add
mov
add
cmp
dec
scas
ins
ret
mov
mov
fistp
jmp
dec
sub
mov
xchg
mov
sbb
jno
xchg
mov
ds
mov
cmps
jle
and
or
jae
int3
scas
mov
dec
sub
pop
pop
pop
mov
adc
ret
retf
pusha
cmp
clc
stos
cli
fsub
out
jnp
inc
dec
fiadd
cs
mov
(bad)
sar
mov
push
movs
sbb
dec
pop
and
xor
icebp
jg
cli
inc
sub
pop
add
icebp
pop
or
out
in
pop
add
mov
js
(bad)
int
sbb
loope
sti
ret
es
add
xchg
mov
mov
dec
daa
cmp
pop
ret
jne
jmp
fbstp
mov
mov
mov
mov
mov
xor
xchg
push
xor
outs
mov
movs
jg
fwait
or
stc
jmp
es
push
arpl
jnp
push
inc
pop
das
rcr
jmp
mov
sub
xlat
mov
sbb
push
cmp
sbb
aaa
dec
mov
mov
cli
add
lods
outs
push
xchg
pop
mov
fwait
cmp
ret
cmp
jg
add
cwde
push
out
jo
push
sub
sub
test
xchg
div
je
inc
lods
dec
inc
adc
cmp
cmp
push
call
clc
aaa
push
daa
mov
inc
sbb
fdivr
shr
icebp
cs
lahf
mov
inc
mov
add
xchg
and
retf
retf
(bad)
pop
xlat
mov
arpl
jmp
mov
call
adc
push
shl
aam
mov
pushf
adc
(bad)
xor
dec
push
in
dec
mov
fiadd
leave
outs
stc
cmp
dec
xor
mov
push
xchg
imul
adc
or
dec
mov
mov
adc
xor
int3
shl
sub
jbe
xchg
xor
les
mov
pop
pop
sbb
dec
adc
loope
sub
jmp
or
popa
cwde
or
add
inc
stos
jb
or
aad
and
lock
mov
sti
inc
data16
jge
dec
std
lds
sub
or
shl
sahf
mov
repnz
sbb
popa
pop
mov
lds
fs
pop
xor
mov
sbb
sbb
in
lahf
aam
xor
pop
push
(bad)
aaa
xor
dec
in
test
sub
int
mov
stc
out
dec
push
push
push
mov
jle
les
sub
mov
jp
dec
cli
rcr
retf
inc
das
xor
and
push
rcr
and
ds
add
pop
(bad)
mov
or
sti
dec
and
add
in
popa
imul
xchg
sub
sbb
cli
adc
retf
xchg
inc
les
or
mov
call
hlt
push
movs
add
mov
mov
(bad)
push
into
cdq
or
or
in
fsubr
call
lahf
adc
mov
dec
xor
xchg
jg
inc
push
pop
ret
push
retf
movs
cld
(bad)
addr16
aam
in
test
sbb
stos
pop
mov
ret
xchg
inc
jbe
(bad)
out
jg
xor
jmp
mov
iret
pop
ins
test
jne
lds
mov
and
movs
lahf
push
pop
cwde
ins
pop
or
fsub
jmp
sub
int
mov
sbb
mov
std
mov
stos
or
inc
out
in
popa
sbb
into
cdq
ins
cmp
mov
(bad)
cmps
pop
test
fidivr
and
pop
sbb
loopne
cmp
xchg
repz
popf
jmp
cs
fdiv
xor
addr16
ret
cmp
aas
ror
push
mov
test
pop
mov
fwait
leave
popf
adc
xor
pushf
push
inc
pop
out
jp
icebp
arpl
das
int
cmc
arpl
cld
jbe
pop
xchg
(bad)
enter
or
popa
mov
aaa
push
ins
(bad)
mov
push
push
mov
and
inc
loop
mov
sbb
and
add
dec
lahf
sahf
mov
(bad)
pop
xor
xchg
mov
dec
mov
jp
mov
std
loop
and
fadd
call
shl
xor
ja
jns
aaa
adc
cmp
cld
xlat
cwde
or
int3
(bad)
arpl
adc
jns
loopne
push
cdq
inc
into
out
nop
repz
dec
push
fmul
xchg
ds
loop
inc
into
xor
test
scas
fisub
cs
xchg
mov
and
imul
pop
sbb
pop
mov
and
mov
movs
in
dec
out
sub
jae
mov
call
mov
ss
xchg
xor
mov
ins
jg
mov
aas
push
iret
popf
clc
call
lock
scas
mov
cmps
pop
push
adc
pop
xlat
add
icebp
aaa
sbb
pop
cmps
push
xor
ficomp
(bad)
push
jns
xchg
bound
push
daa
retf
stc
xor
test
scas
dec
or
aas
scas
dec
dec
dec
push
movs
mov
xchg
out
retf
inc
xor
push
cmp
pop
ja
adc
adc
ins
and
out
inc
sbb
cdq
and
out
daa
push
rol
xchg
jae
test
std
mov
and
mov
mov
icebp
jbe
wrmsr
add
mov
inc
add
nop
adc
aaa
in
ror
add
pop
pop
jmp
repz
jno
lods
dec
pusha
cs
mov
leave
sar
inc
mov
mov
mov
lds
sub
jmp
cmp
ins
or
jo
jge
imul
js
ds
iret
pop
scas
les
ror
xlat
add
add
sbb
(bad)
out
int3
xor
or
xor
data16
lods
mov
rol
push
imul
pop
dec
jge
(bad)
mov
xor
inc
sbb
cmp
pop
fisubr
or
and
aam
pop
in
mov
ret
icebp
(bad)
cmp
mov
jo
mov
dec
aas
sub
cmps
push
pop
das
add
mov
scas
mov
movs
lods
das
iret
pop
mov
and
mov
rol
popa
test
ss
xor
adc
aad
pop
js
in
sub
and
push
in
popa
push
push
aad
pop
jb
mov
dec
push
loop
sbb
das
xchg
jp
ret
into
cwde
sbb
cmps
mov
sbb
sub
addr16
rcr
and
icebp
popa
dec
call
and
mov
mov
imul
or
xlat
add
cmp
loop
shl
inc
mov
and
push
cmps
in
push
std
sub
(bad)
cli
push
or
push
mov
lods
retf
add
addr16
mov
xchg
aas
cmps
or
dec
add
pushf
enter
(bad)
sbb
fsub
xchg
push
or
inc
lods
xor
(bad)
(bad)
cld
aad
cdq
stos
jbe
push
mov
imul
jae
mov
xchg
fcomp
sbb
es
imul
int3
nop
push
enter
and
jne
cmc
shl
(bad)
stos
add
popa
mov
cmc
stc
xor
xor
push
les
icebp
mov
test
popf
mov
inc
or
out
aad
out
mov
stc
mov
xchg
sub
fst
push
jmp
dec
push
adc
call
popa
enter
sbb
pusha
mov
xchg
sbb
adc
or
in
inc
in
mov
mov
pop
enter
loop
sbb
aam
push
cwde
leave
push
hlt
loopne
adc
mov
and
or
xor
out
pop
js
and
jg
loope
mov
(bad)
in
retf
push
in
ret
jae
lods
test
into
fiadd
test
loopne
jmp
test
sar
jge
cmp
mov
cmp
or
xchg
mov
stos
xchg
je
ins
sbb
mov
push
sub
ret
ins
call
dec
xchg
out
mov
jl
mov
mov
scas
outs
lahf
or
aas
sbb
lods
push
jo
jo
mov
jl
xchg
mov
stc
in
inc
pusha
pop
or
mov
inc
jb
pop
int
push
daa
xchg
pop
pushf
lods
mov
rcr
adc
mov
cld
mov
out
mov
xchg
mov
dec
push
rol
mov
stos
push
mov
fidivr
inc
jbe
sbb
and
js
mov
xchg
(bad)
(bad)
loopne
mov
(bad)
(bad)
out
lock
push
pop
pop
push
add
aam
sub
movs
movs
ds
loopne
clc
mov
and
jp
add
ror
fsubr
mov
dec
cmp
mov
xor
stc
pusha
std
dec
out
adc
out
inc
mov
dec
aad
or
test
test
sub
adc
adc
or
xor
aaa
lods
jge
jmp
inc
retf
add
movs
loope
out
mov
jbe
sar
jmp
jg
push
adc
jmp
cmp
daa
dec
cmp
je
and
cmp
sbb
ds
cmp
js
xchg
leave
adc
and
imul
imul
out
(bad)
jmp
fcom
fist
mov
lods
xor
out
pop
mov
lea
adc
dec
pushf
not
adc
mov
add
int3
xor
call
psubq
cmp
dec
dec
popa
push
adc
loope
dec
and
jmp
fnstenv
(bad)
out
jge
in
adc
xor
sub
imul
lds
sar
or
inc
mov
cmp
out
mov
lahf
sub
cmc
mov
loopne
sub
xchg
adc
(bad)
out
pop
xor
enter
nop
pop
data16
sub
cld
ins
iret
dec
aad
jb
mov
push
add
cld
popa
push
push
cmp
dec
add
rol
mov
movs
push
daa
(bad)
xor
mov
push
mov
test
push
cwde
adc
cmps
popa
retf
icebp
int
inc
shl
adc
mul
mov
int3
retf
in
push
mov
adc
cli
jmp
jnp
push
xchg
and
and
mov
(bad)
cmp
cld
lock
pop
call
int3
jno
jg
inc
mov
mov
jp
cmp
mov
mov
movs
mov
jne
mov
jmp
call
hlt
push
or
sbb
sub
jecxz
(bad)
xor
movs
nop
fwait
es
pop
xor
sbb
inc
lahf
aam
in
xchg
cmp
fcom
repnz
or
dec
loop
cwde
ret
rol
fcom
out
(bad)
retf
cmp
cmp
lods
addr16
out
sub
imul
xchg
ret
xchg
adc
pop
mov
push
leave
jge
scas
add
cmp
mov
sbb
jbe
cmp
sbb
adc
dec
repnz
pop
fnstsw
inc
clc
call
jno
bound
out
xchg
mov
cmps
out
cmps
popa
pop
cmp
outs
and
xchg
push
(bad)
loop
add
adc
sub
add
sar
ins
jge
stos
ins
adc
push
stos
mul
scas
mov
jge
ret
cmp
into
and
inc
mov
adc
push
lock
iret
mov
xor
out
sbb
jecxz
mov
or
push
jno
pop
xlat
imul
cmps
cmp
imul
adc
push
inc
add
jae
sub
lahf
int
mov
not
test
jne
mov
mov
pop
mul
sti
mov
jmp
addr16
jl
mov
push
mov
(bad)
inc
loopne
add
shl
(bad)
mov
rcl
push
inc
sub
jne
(bad)
sub
cdq
xor
add
mov
inc
in
adc
int
dec
sbb
inc
fwait
bound
pop
and
movs
xchg
push
add
fs
ds
xor
scas
nop
mul
sbb
test
mov
(bad)
xor
mov
in
shl
mov
test
daa
mov
leave
jmp
mov
pop
mov
push
outs
cli
ins
push
ins
mov
inc
imul
xchg
iret
ret
dec
add
pop
or
les
dec
je
mov
enter
movs
dec
cmp
je
add
shr
mov
dec
daa
inc
push
movs
mov
outs
xor
test
fs
pop
mov
sahf
(bad)
ror
dec
dec
dec
pushf
aaa
cdq
scas
push
mov
add
outs
add
clc
js
jne
pop
mov
ins
in
dec
add
mov
adc
pop
mov
mov
jno
dec
cmp
mov
add
mov
xor
add
fcom
push
repz
movs
add
fbstp
ds
sub
ror
jo
lahf
out
cli
arpl
bound
mov
add
cmc
int
ins
mov
imul
rol
scas
sti
in
mov
dec
mov
push
xchg
repnz
mul
out
stos
sbb
ret
retf
mov
add
mov
add
dec
mov
shr
xor
xchg
adc
(bad)
rcl
in
jp
xor
adc
adc
mov
retf
add
xchg
div
sar
inc
pop
push
mov
lods
add
xor
dec
retf
sub
in
aam
pop
cli
or
fild
fisub
or
outs
inc
xchg
imul
in
mov
bound
mov
fwait
test
ja
int
fbld
and
cs
aaa
mov
nop
mov
fs
push
(bad)
sub
push
jno
div
call
pop
leave
gs
push
ret
cmc
(bad)
(bad)
mov
mov
push
fnstenv
(bad)
fdivrp
sub
cdq
ins
test
fs
nop
mov
jmp
int
imul
xchg
inc
in
je
push
and
(bad)
popa
mov
pop
pop
xchg
aam
or
lahf
and
mov
jns
xchg
and
sub
jo
bound
stc
loop
adc
fidivr
adc
ins
inc
xchg
arpl
xor
or
cmps
mov
fcomp
lods
jecxz
in
scas
repnz
enter
dec
push
adc
jno
mov
fist
lock
and
repnz
mov
enter
pushf
xor
iret
in
daa
bnd
mov
clc
xor
pop
inc
xor
retf
sbb
inc
test
das
lea
stos
mov
mov
dec
jge
test
jp
(bad)
ins
cmp
and
and
pop
bound
mov
mov
clc
pop
loopne
xchg
in
sar
jnp
test
adc
mov
mul
pop
and
in
and
or
mov
cmps
les
jae
xchg
les
adc
mov
sbb
adc
xchg
jge
std
sar
mov
push
popf
repz
xchg
in
mov
mov
inc
sbb
popa
or
js
aam
icebp
push
cs
xor
arpl
and
jns
push
xor
ins
(bad)
or
cmp
pop
mov
inc
and
pop
mov
ret
sti
repz
popf
jo
push
ror
out
neg
cmp
in
fcmovu
sub
int3
xchg
je
pop
sub
inc
in
fwait
push
mov
mov
popa
sbb
add
cmp
inc
jnp
iret
sbb
xchg
popa
sahf
and
(bad)
cmp
out
mov
into
fadd
sub
jno
ins
and
outs
jbe
shr
jp
out
ds
dec
sbb
je
jmp
push
inc
cmc
imul
jmp
addr16
mov
and
mov
mov
xchg
sbb
lea
shl
mul
into
fwait
movs
cmp
push
cdq
sbb
cs
sub
mov
add
jo
cmp
popa
pop
(bad)
lock
adc
dec
scas
xchg
ret
repz
adc
cmp
mov
inc
inc
jp
jne
call
mov
idiv
and
retf
call
jno
in
fwait
leave
sub
imul
mov
psubq
push
cmps
call
arpl
je
shl
loopne
addr16
cli
jge
ret
out
cmp
in
stos
sub
adc
add
push
xchg
add
or
add
add
mov
dec
fnstenv
pop
or
xchg
sub
cdq
sbb
pusha
sbb
popa
inc
add
retf
test
shr
lds
and
(bad)
fistp
push
ds
sbb
inc
movs
sub
inc
add
daa
mov
fiadd
and
shr
das
push
sbb
fiadd
es
add
aam
inc
jge
or
or
push
add
cld
xchg
or
mov
cmp
xor
faddp
xor
fimul
push
mov
xchg
js
cmp
inc
loop
xor
or
ret
sahf
adc
fs
das
jle
repnz
fwait
(bad)
and
mov
ficom
jl
push
push
ins
das
push
dec
scas
scas
cld
movs
inc
jns
loopne
sti
(bad)
cmp
aam
lds
pop
and
dec
(bad)
xchg
mov
pop
cdq
and
(bad)
jne
mov
das
jecxz
(bad)
outs
test
leave
(bad)
cmp
(bad)
mov
in
fwait
cwde
jge
jb
fwait
loope
mov
mov
inc
out
repz
lods
clc
repnz
out
push
adc
inc
pop
ins
test
jge
or
std
call
int
xlat
adc
push
xlat
push
das
mov
ins
call
jmp
lods
pop
in
imul
and
in
test
cmp
jnp
test
mov
sbb
popa
ss
retf
pop
pop
fldcw
clc
mov
or
dec
lock
sub
mov
mov
call
clc
inc
cli
mov
(bad)
icebp
loop
stc
mov
or
fdivrp
iret
cld
jb
std
mov
sti
cld
cmc
cmps
aas
into
inc
adc
aad
add
stos
xchg
adc
jecxz
xor
adc
in
and
sahf
aad
dec
clc
sahf
or
pop
and
jnp
loopne
jmp
fild
ret
and
fneni(8087
add
fidiv
xchg
icebp
jno
aas
imul
cmps
ror
jne
inc
jb
and
out
mov
cld
aas
mov
test
test
mov
imul
push
cmp
in
jb
dec
popf
outs
imul
jnp
cli
cmc
sahf
dec
dec
and
lahf
arpl
repz
push
jp
xchg
stos
xchg
pop
jl
aad
addr16
fs
(bad)
loope
push
adc
xor
div
mov
mov
out
mov
jb
jl
sub
sub
mov
imul
adc
data16
mov
fnstcw
cld
mov
enter
movs
jmp
mov
out
retf
fcmovb
inc
lds
sub
ins
movs
sahf
rol
scas
ror
push
fstp
cs
out
and
push
inc
adc
and
xor
jle
aad
sti
lock
xor
sbb
movs
or
push
jecxz
aaa
es
xchg
fs
div
into
adc
fsubr
scas
ret
(bad)
stos
dec
xor
stos
int3
cs
jns
iret
xlat
test
add
(bad)
sahf
mov
jb
fstp
(bad)
jg
rcr
cmp
sahf
mov
stos
out
lods
xchg
in
mov
arpl
inc
fisttp
add
pop
jle
leave
and
orps
pusha
jo
cmp
and
into
enter
aam
pop
adc
xchg
or
das
pusha
test
iret
and
mov
cli
lds
cmp
pop
repnz
(bad)
cwde
cmp
ror
dec
addr16
in
sbb
inc
sub
lea
mov
test
test
dec
ins
pop
repz
ins
mov
mov
test
and
out
shl
hlt
xlat
test
mov
dec
pushf
push
stc
adc
sbb
and
dec
mov
dec
repnz
in
ficomp
xchg
lahf
add
sub
pusha
imul
aaa
cmc
into
pop
push
sar
adc
mov
in
xor
adc
lods
stos
movs
jp
xor
cmc
arpl
dec
cmp
push
fstp
mov
in
sbb
mov
fisub
imul
add
std
cmp
push
dec
pushf
movs
xor
mov
push
cld
mov
in
int
in
mov
lods
mov
(bad)
cmp
inc
sbb
jno
add
push
inc
or
or
jbe
push
jle
mov
jne
sbb
pushf
imul
loopne
loope
loope
mov
fidiv
fist
xor
outs
repnz
mov
les
inc
sub
dec
neg
into
and
addr16
fdiv
sar
mov
mov
repnz
mov
fsub
in
aad
pop
lods
pop
jmp
test
xchg
hlt
arpl
sub
das
ja
mov
push
pop
jae
dec
seta
fmulp
test
hlt
mov
sub
por
retf
mov
mov
cmps
stos
mov
and
jbe
pop
sti
mov
(bad)
aam
or
mov
mov
mov
push
cmps
inc
adc
mov
sahf
int3
pop
ss
ret
fild
sub
mov
clc
dec
jp
xlat
cmp
clc
stc
scas
and
movs
dec
call
jp
cmps
aad
in
and
adc
js
add
call
xor
out
imul
pop
leave
xor
and
inc
dec
sub
out
add
jae
pop
mov
jne
and
sbb
loop
mov
je
scas
lahf
mov
std
push
in
pop
inc
pushf
iret
mov
jmp
xor
sti
fisttp
jno
push
or
aas
cmp
mov
mov
sub
jecxz
xchg
gs
retf
mov
mov
sbb
test
mov
jle
and
push
mov
loop
or
leave
lahf
gs
enter
iret
inc
imul
mov
js
ja
mov
adc
fs
rol
cs
push
add
out
jp
out
retf
xor
cmp
in
out
lock
pop
sbb
ret
fld
and
loopne
xchg
and
lock
push
mov
mov
sbb
sti
js
jmp
ret
add
xchg
pushf
xchg
mov
shl
mov
test
test
out
cmp
mov
(bad)
in
icebp
pop
call
div
jno
push
dec
dec
dec
(bad)
movs
mov
pusha
xchg
shl
pop
hlt
xor
lahf
mov
cmps
mov
and
popf
jbe
(bad)
(bad)
dec
pop
push
test
lock
and
mov
ret
sub
cli
xor
cmc
sbb
lds
add
cli
scas
rol
movs
and
xor
cmps
cmp
arpl
xor
push
pop
aaa
mov
cld
or
xchg
loopne
iret
iret
fisttp
bswap
ds
imul
(bad)
mov
inc
outs
dec
or
push
pop
or
stos
not
aaa
or
cli
fbstp
mov
retf
push
lods
sbb
jp
mov
mov
inc
mov
xor
stc
inc
and
scas
push
mov
jmp
and
aas
cmps
pop
stos
lods
pushf
movs
push
iret
test
(bad)
int
xor
stos
inc
rol
fistp
outs
lea
and
cmp
push
push
xchg
sti
(bad)
push
adc
add
push
and
repnz
push
add
or
dec
icebp
lods
xor
(bad)
jno
mov
inc
xor
add
xor
cmp
jmp
push
dec
push
add
mov
pop
push
mov
lods
lds
jns
adc
das
and
mov
mov
test
sbb
mov
out
shr
ins
push
shl
ficom
pop
div
cmp
rol
mov
(bad)
xchg
lods
cmps
(bad)
push
leave
and
icebp
mov
xor
lds
add
mov
xchg
cs
mov
cmp
imul
cmps
aas
mov
ficomp
sbb
mov
inc
mov
xor
dec
hlt
push
fst
mov
cld
rol
xor
add
imul
and
sahf
sbb
popf
and
ja
jbe
test
jle
hlt
jl
icebp
movs
or
out
(bad)
pop
push
dec
mov
lea
cmc
sub
jl
jno
idiv
out
or
adc
ja
out
mov
aam
ror
les
pop
sub
mov
mov
pop
sub
imul
daa
sub
sahf
enter
lds
inc
and
inc
leave
jecxz
jmp
and
add
inc
mov
add
ins
aas
dec
jp
dec
add
inc
clc
js
inc
ja
xor
cmp
rol
pop
retf
or
das
sbb
mov
push
pavgw
mov
aaa
sbb
pop
js
adc
pushf
inc
mov
xchg
(bad)
ss
enter
loope
cmp
aad
adc
mov
sub
push
lods
pusha
mov
outs
adc
stos
jle
mov
push
adc
add
mov
and
mov
add
mov
mov
(bad)
lock
or
je
neg
popa
dec
sbb
mov
(bad)
jo
and
sub
and
xchg
leave
(bad)
sub
xchg
jl
mov
mov
lods
xchg
fdiv
jl
movs
xor
ficom
stos
sbb
ficomp
add
bnd
out
inc
call
mov
xor
fs
mov
mov
push
mov
sbb
mov
inc
jge
xchg
sbb
or
jle
shl
cmp
adc
fsub
das
movs
jbe
neg
cmp
cmc
ss
stc
or
cmp
and
ret
adc
pop
repz
outs
mov
(bad)
sub
mov
push
xor
push
sar
test
cmp
xor
mov
adc
sub
adc
sub
stc
dec
test
dec
sub
sub
das
sub
push
arpl
in
inc
ds
rol
dec
loop
aam
int
dec
mov
ds
or
int
inc
fisttp
pop
xchg
sbb
mov
push
and
mov
sub
xor
adc
(bad)
xchg
mov
test
inc
mov
add
aad
leave
loop
mov
and
xchg
xlat
repnz
cdq
pop
adc
retf
sbb
mov
jbe
push
inc
dec
pop
out
loope
xor
xchg
sub
cmp
push
movs
mov
add
into
or
xchg
cmp
or
jmp
pop
xchg
call
adc
or
test
retf
daa
imul
pushf
mov
adc
xor
cmp
or
(bad)
data16
in
rcr
popf
jne
cmc
jecxz
adc
loop
int
or
push
aam
call
and
out
scas
je
cli
cmp
retf
sbb
sbb
cdq
es
xchg
lock
inc
fidivr
popf
ss
cmp
xor
mov
call
xchg
shr
pop
or
sub
ss
xor
add
push
in
sbb
test
mov
and
xor
sub
dec
cmps
push
aaa
pop
jmp
es
gs
pop
inc
push
js
xor
mov
pandn
repz
xchg
mov
or
cmp
fisub
sbb
mov
or
jo
cmp
pusha
pop
aam
adc
pop
jmp
mov
loop
jae
and
add
icebp
or
loope
cmp
pop
inc
pop
push
cmp
sub
cdq
dec
or
pusha
and
mov
mov
cmps
movs
and
jo
pop
sbb
int
fldenv
pop
jnp
xor
imul
jge
adc
aam
fdivp
xchg
jmp
and
sbb
in
jb
ret
(bad)
out
xor
sub
and
xlat
mov
inc
les
retf
pop
cmp
dec
push
and
test
adc
sahf
shl
mov
(bad)
ret
aas
cmp
mov
fdivr
jmp
retf
jnp
push
or
out
jp
sbb
loop
imul
push
repnz
retf
stos
stos
scas
dec
jo
ins
mov
je
popa
push
push
lds
into
add
ins
jl
xchg
pop
or
push
arpl
mov
outs
pop
shr
(bad)
fucomp
pop
imul
aaa
fwait
push
pusha
pop
sbb
es
mov
push
icebp
xchg
sahf
bound
xchg
cwde
mov
dec
popa
mov
sbb
aam
and
scas
call
or
and
or
jge
adc
les
aas
and
pop
add
and
ja
lea
xor
rcl
push
loop
retf
and
lods
jnp
das
push
daa
loopne
sbb
mov
loope
inc
sbb
stos
push
enter
cmc
test
aas
(bad)
adc
call
int
mov
inc
push
addr16
xor
jb
mov
out
jmp
(bad)
aad
int
loope
pusha
sub
inc
and
lock
sub
scas
dec
push
jo
jo
xchg
and
fidiv
add
push
mov
repnz
sub
pop
das
xor
cmps
mov
jno
(bad)
iret
jb
sbb
mov
mov
inc
pop
pop
daa
adc
mov
xor
call
sbb
dec
mov
lock
dec
retf
or
out
pop
xchg
lods
and
(bad)
sub
(bad)
sub
cmc
in
in
inc
pop
out
mov
neg
cmp
mov
aaa
rcl
or
push
(bad)
jp
loop
mov
retf
addr16
xor
mov
mov
fldenv
ja
out
jnp
xlat
out
iret
dec
add
xchg
jns
cmp
add
ret
fwait
add
enter
xchg
outs
mov
inc
dec
je
das
pop
aas
fcmovne
frstor
jle
aad
cdq
adc
and
xor
mov
cwde
inc
movs
push
or
stos
aas
mov
xchg
cmc
(bad)
jmp
aas
outs
pop
mov
out
push
lods
fstp
mov
and
scas
dec
mov
cmp
sbb
xchg
mov
sbb
aad
jmp
das
jno
lea
add
sahf
dec
aas
xchg
mov
push
pop
faddp
sub
push
loope
stos
repnz
lds
popa
popa
dec
cdq
mov
lods
aad
adc
repz
repz
push
push
push
cmp
jmp
out
adc
xchg
mov
(bad)
inc
xor
lods
lods
lods
pop
add
inc
cs
adc
jnp
and
adc
clc
rcr
pop
cli
xchg
sbb
(bad)
retf
ret
in
jno
pop
out
mov
(bad)
adc
in
fadd
ds
into
xchg
pop
mov
sub
add
pop
jmp
dec
fidiv
jnp
mov
add
cdq
sar
pop
jno
dec
sbb
adc
inc
test
add
imul
dec
inc
sbb
cmovno
push
xchg
sbb
aas
add
ret
mov
dec
test
xchg
pop
nop
rcr
out
pop
retf
movs
xchg
mov
pop
sbb
lods
mov
(bad)
sub
inc
out
sbb
jmp
fidivr
not
jg
mov
test
int
push
jnp
aas
outs
xchg
sbb
cmp
pandn
rol
adc
test
ins
ins
sub
fs
rcl
in
mov
inc
dec
aaa
test
push
mov
cmp
(bad)
test
retf
mov
sahf
and
out
cmp
push
inc
xor
loope
pop
cwde
cmp
jmp
shl
add
xor
dec
push
int3
iret
pop
mov
pop
popf
mov
test
mov
sbb
bound
pop
mul
rol
xchg
mov
mov
pop
arpl
dec
fisttp
sub
push
sub
dec
test
add
sub
jns
mov
pop
retf
adc
or
and
(bad)
ret
fsubr
cmc
cmp
ss
fdiv
das
sub
jno
sahf
or
dec
mov
sti
aad
out
je
mov
retf
enter
push
aas
mov
inc
xchg
aam
aad
pop
cli
out
mov
js
movs
es
xchg
aad
cdq
push
mov
push
pushf
cmp
rol
hlt
cmp
jg
repz
stc
fidiv
sahf
in
xchg
jl
scas
aaa
scas
adc
cld
js
jnp
pushf
pop
lea
sbb
xor
add
dec
jo
sti
jnp
dec
pop
add
arpl
mov
push
sti
dec
mov
pop
aam
js
outs
jb
cmp
push
mov
pop
mov
mov
push
cmps
(bad)
fnsave
loopne
(bad)
or
mov
clc
jmp
daa
xchg
xchg
int
pop
rcl
pop
jg
fstp
movs
fmul
dec
xchg
mov
add
pop
lea
(bad)
stos
call
stos
sar
movs
sub
and
push
inc
inc
add
inc
test
pusha
and
and
sbb
data16
imul
scas
push
cmc
outs
add
icebp
or
enter
push
push
punpcklwd
mov
jno
cdq
(bad)
sub
push
ins
ficom
fiadd
imul
rcl
cmc
xchg
push
cmp
fs
inc
(bad)
gs
cmp
stos
mov
jae
or
mov
jmp
loop
movs
pop
(bad)
inc
sbb
imul
mov
xchg
xchg
mov
or
loop
add
sub
mov
sbb
mov
dec
imul
enter
in
add
jp
sar
jb
lock
mov
dec
pop
jnp
sti
inc
sub
(bad)
pop
(bad)
loopne
inc
xchg
pop
mov
das
jle
cmps
sub
or
mov
jge
fwait
ret
pop
push
sbb
pop
cmp
scas
inc
mov
into
push
ror
push
mov
stos
ret
cmp
icebp
pusha
shl
dec
popa
jmp
loopne
ins
xchg
sub
inc
pop
aaa
adc
mov
fidivr
add
mov
mov
add
push
mov
mov
data16
dec
icebp
fidivr
lahf
rol
(bad)
sahf
or
fmulp
cmp
xchg
pop
cld
push
ficomp
inc
dec
dec
fstp
ret
je
es
test
add
jmp
mov
retf
push
cmps
retf
inc
xor
lds
sub
cld
mov
iret
jbe
scas
push
ins
xchg
aaa
sub
sbb
jle
sbb
aaa
or
test
mov
cmp
pop
xchg
cmp
(bad)
fdivr
addr16
push
call
mul
int3
mov
push
push
or
cmc
sub
mov
jo
js
adc
cmp
ret
push
jl
fs
push
sbb
mov
dec
mov
and
sbb
push
inc
stos
sbb
cmps
movs
sbb
mov
daa
pop
ins
xchg
mov
inc
into
(bad)
mov
and
movs
inc
jmp
loopne
or
stos
jle
jmp
lds
enter
in
push
jmp
ror
jne
push
dec
push
test
in
fnsave
das
adc
inc
test
mov
not
push
push
sbb
std
ret
xchg
lods
mov
out
pushf
mov
push
inc
cwde
bound
xchg
(bad)
fadd
std
and
addr16
fsubrp
mov
(bad)
sbb
scas
imul
xor
out
sub
cmp
jp
enter
scas
div
in
sbb
(bad)
mov
das
and
test
popa
inc
dec
aas
xor
shl
outs
fmul
pop
test
pop
adc
add
fs
test
sbb
sti
hlt
arpl
mov
or
lahf
loope
inc
ins
in
scas
cmps
rol
sbb
mov
sar
sahf
inc
into
pop
mov
sbb
mov
clc
test
comiss
sub
adc
stos
and
(bad)
push
(bad)
gs
sahf
jno
jg
dec
jmp
push
mov
jbe
xchg
add
loop
push
inc
mov
repnz
inc
shr
pop
mov
sub
out
push
mov
out
ret
leave
jne
lods
jae
int
int3
xchg
loope
cli
arpl
aaa
add
jle
jge
mul
imul
xchg
adc
ss
arpl
add
out
push
fisubr
jl
xchg
sar
ficom
xchg
sub
adc
(bad)
jns
xchg
out
das
mov
pop
movs
adc
daa
fld
mov
int3
in
test
(bad)
into
or
pop
movs
iret
fimul
je
adc
in
sub
xor
add
nop
pop
out
dec
inc
xor
bound
add
out
(bad)
mov
in
pop
lds
les
xchg
sbb
adc
aad
test
int
aad
nop
in
pop
popf
call
mov
dec
fadd
cwde
xchg
and
mov
shl
cmc
xchg
dec
pop
or
stos
ins
sbb
call
shl
(bad)
mov
call
add
jbe
ins
push
pop
mov
pcmpgtb
js
int
ret
gs
dec
stos
jge
into
imul
addr16
dec
data16
jp
ja
mov
mov
test
icebp
repnz
adc
xchg
cmp
and
aas
cmp
ds
scas
arpl
or
cdq
fcmovnbe
imul
cmp
or
mov
cmp
ins
add
push
add
fcom
aas
fld
ficom
ins
sti
movs
mov
cli
cmps
leave
cmps
adc
fidivr
pop
mov
std
adc
jae
jmp
out
inc
push
outs
bound
div
out
not
add
test
pop
int
sbb
cmp
pop
add
adc
add
xchg
fcom
fs
ss
addr16
scas
xchg
add
cmp
or
pop
movs
add
shl
je
ror
inc
fdivr
repz
push
jge
push
xchg
rcl
jmp
pop
dec
pop
mov
cdq
call
pop
loopne
inc
fcom
push
or
fwait
lods
mov
imul
mov
stos
cmp
adc
mov
mov
push
sbb
jmp
scas
jbe
adc
pop
xchg
mov
jmp
in
nop
xor
mov
fadd
je
dec
xchg
mov
and
daa
mov
mov
dec
aas
cmp
sub
dec
cmc
jno
xchg
jno
jle
mov
fstp
sbb
clc
jge
rol
and
mov
jnp
adc
rcr
jb
adc
push
jge
cmps
pusha
sbb
push
ret
or
dec
std
add
add
scas
(bad)
movs
dec
xor
push
aad
mov
int
(bad)
ins
jae
test
outs
mov
or
cmp
push
add
popf
(bad)
retf
adc
clc
ds
in
push
cmp
xor
jns
sub
adc
fsub
test
jl
mov
cs
adc
dec
ss
sbb
pop
xchg
scas
mov
jmp
add
clc
sbb
jne
and
add
imul
cmp
inc
mov
xor
icebp
cmp
dec
sub
and
das
sbb
xchg
scas
add
inc
or
and
lods
mov
pop
ins
push
(bad)
aam
clc
inc
lods
nop
sti
mov
mov
mov
xchg
mov
loope
hlt
aad
je
jl
das
nop
sub
push
clc
pop
lods
add
adc
cmps
jmp
mov
aam
(bad)
aam
push
mov
dec
inc
pusha
cmps
push
call
fist
jno
add
inc
sti
add
mov
mov
xor
lea
sbb
inc
jae
dec
mov
es
in
cmp
fistp
inc
fwait
clc
mov
pop
cmp
nop
and
stos
pop
aas
inc
add
pop
sub
add
test
xor
pushf
push
imul
pusha
xor
idiv
mov
pop
mov
repnz
mov
lahf
hlt
(bad)
mov
fs
sub
push
nop
rol
jl
add
fldcw
push
dec
popf
out
pusha
cmps
xor
imul
ficomp
or
lfs
xor
rol
jmp
loope
enter
out
or
icebp
and
adc
dec
leave
mov
mov
inc
popa
cmp
mov
pop
test
pop
mov
mov
cld
pushf
dec
repz
lea
jl
lods
xchg
pop
cli
dec
jbe
xchg
lds
add
dec
js
or
cs
sub
or
push
jno
jo
shl
(bad)
stc
mov
mov
push
rcr
jns
cmp
imul
dec
add
sub
(bad)
addr16
test
jmp
sbb
addr16
(bad)
and
sbb
push
push
cmp
push
gs
adc
(bad)
out
inc
sbb
cmp
and
ja
pop
xchg
mov
jbe
inc
inc
xchg
mov
xchg
ret
addr16
jecxz
pop
pop
icebp
cmp
(bad)
sub
inc
dec
jo
pop
pop
xlat
pop
push
sbb
jae
xlat
test
call
mov
add
(bad)
cwde
mov
(bad)
sbb
inc
std
mov
mov
popa
lahf
mov
jnp
outs
cmp
or
aam
imul
cld
into
jmp
cwde
stc
push
pop
(bad)
int
push
mov
ror
stos
mov
repz
inc
pop
mov
call
hlt
jbe
inc
call
mov
inc
dec
lods
mov
xlat
adc
mov
or
inc
jnp
and
test
cmp
lods
push
push
(bad)
retf
addr16
pusha
cmps
lock
sub
rcl
lods
gs
daa
adc
iret
cmp
jns
loop
test
pop
and
pop
inc
sub
cli
mov
mov
xchg
push
cmp
std
out
xor
repz
hlt
cmp
cmps
stos
sti
fidivr
sbb
jg
xor
mov
or
out
movs
push
mov
mov
mov
sbb
shr
mov
pop
aam
mov
jl
jno
(bad)
outs
dec
xchg
mov
adc
dec
pop
lds
shr
jl
(bad)
js
aam
ret
into
xor
clc
jbe
shl
sub
add
inc
movs
dec
dec
ss
in
imul
mov
repz
shl
div
jbe
mov
pop
dec
ret
mov
pushf
fs
jecxz
add
js
call
xlat
dec
fdiv
push
dec
push
fistp
cmp
loopne
jge
loop
pop
push
test
arpl
cmps
pushf
or
pop
fist
push
xor
enter
rep
or
mov
popf
sbb
push
daa
mov
jmp
push
lods
mov
mov
fld
push
mov
sub
jl
xlat
popa
xchg
jge
loopne
sub
push
clc
rcr
(bad)
pop
cdq
cmp
mov
seta
jmp
add
sub
or
jg
(bad)
movs
mov
or
dec
inc
mov
stc
mov
stc
jne
jmp
mov
bnd
push
push
inc
aam
call
mov
cmp
xchg
loop
sbb
int3
mov
aad
pop
xor
out
popa
adc
(bad)
scas
sub
mov
movs
add
out
xchg
add
in
cli
aaa
fucomp
push
or
add
adc
fimul
adc
cmp
dec
hlt
call
and
xor
push
sti
xchg
aam
fsub
inc
and
mov
push
sbb
sbb
lods
mov
pop
lock
std
xor
inc
xchg
lock
push
cmp
ins
push
fdiv
add
inc
rcl
aas
loope
lock
ins
in
test
or
push
inc
shr
mov
loopne
push
in
inc
call
or
imul
jmp
or
sbb
ds
pop
clc
or
cmp
adc
sahf
(bad)
mov
sahf
xchg
stos
xor
mov
fldl2t
and
push
jl
add
jl
sahf
xchg
mov
retf
lods
cld
out
add
or
push
xor
mov
movs
sub
mov
xor
jne
inc
popa
rol
nop
xor
movs
ja
adc
repz
cmp
pop
lds
mov
pop
les
(bad)
xchg
jle
(bad)
or
ins
push
cmc
or
(bad)
nop
add
mov
pop
mov
test
loopne
jl
jmp
repz
fwait
push
scas
xor
push
test
fld
(bad)
mov
mov
jb
adc
mov
mov
fisttp
jnp
mov
test
push
ret
mov
sbb
inc
fwait
push
repnz
stos
mov
pusha
jp
jg
repnz
hlt
movs
stos
mov
lds
in
(bad)
xor
js
and
mov
repz
retf
jnp
cmp
inc
(bad)
mov
sub
inc
(bad)
jmp
retf
clc
test
dec
repnz
add
push
xor
mov
dec
repz
sbb
cmp
in
enter
adc
ds
pop
popa
sub
mov
loopne
pop
mov
adc
cmp
daa
dec
das
pop
add
scas
sbb
sbb
ins
ficom
repnz
xchg
xlat
retf
mov
push
or
shr
push
cli
jnp
sbb
and
ds
and
inc
dec
cli
imul
enter
les
int
into
push
mov
dec
mov
cmp
pop
pop
cli
sub
(bad)
push
(bad)
imul
or
scas
xor
(bad)
xlat
inc
mov
ret
mov
or
or
popa
ss
pop
pop
sub
nop
or
xchg
test
cmps
arpl
or
add
or
pop
aad
pop
xor
mov
jns
pop
pop
retf
mov
push
sub
mov
enter
and
movs
gs
add
mov
add
outs
inc
mov
or
sub
scas
bound
fldenv
aaa
dec
stos
push
and
adc
pop
and
stos
rol
outs
vunpcklps
fnstsw
and
jne
add
push
enter
push
in
bound
jle
mov
and
inc
mov
ss
cmps
jle
mov
fadd
or
dec
lea
mov
repnz
pop
mov
cmp
push
das
cmp
shr
(bad)
pop
in
adc
fcmovne
adc
stos
pop
push
jmp
stos
fst
mov
sahf
push
icebp
and
or
outs
or
aas
xchg
ins
sub
shl
ffree
pop
mov
adc
add
call
mov
jge
mov
movs
inc
push
adc
icebp
cdq
test
outs
shl
cld
xchg
sub
push
push
xor
mov
shr
xor
jno
mov
(bad)
mov
call
pusha
call
test
jnp
mov
mov
adc
into
(bad)
loope
stos
mov
sbb
gs
stc
mov
in
add
jge
jno
cmp
les
shl
jg
cli
pop
xchg
call
dec
clc
inc
inc
xchg
mov
jbe
or
adc
fstp
dec
in
mov
dec
cli
mov
mov
mov
push
sbb
vmovdqa
movs
ins
jb
fistp
and
mov
retf
or
das
loop
stc
(bad)
leave
int3
pusha
imul
sbb
dec
adc
sbb
cld
(bad)
mov
fadd
fild
jae
mov
in
test
aam
or
sbb
mov
sub
push
pop
movs
cmps
sar
outs
push
(bad)
or
sbb
mov
(bad)
clc
cmc
sbb
xor
jmp
arpl
jmp
xor
and
ins
and
pusha
fistp
mov
xchg
mov
scas
retf
loopne
les
push
aam
mov
or
cmps
push
and
cmp
lea
nop
(bad)
loopne
sbb
scas
push
loop
dec
sub
cmp
mov
push
cmp
push
sbb
adc
fmul
pop
and
lods
test
neg
pusha
pusha
ss
cli
lahf
daa
int
aas
sbb
mov
or
xor
in
xor
fimul
jmp
jcxz
sti
mov
call
dec
sub
inc
repz
scas
cmp
movs
(bad)
lods
jp
aas
cmp
pop
inc
cwde
mov
rcl
in
retf
or
and
loope
fistp
inc
mov
sbb
add
nop
adc
inc
jae
inc
out
addr16
shr
inc
inc
loopne
inc
sbb
push
inc
ins
push
jge
(bad)
ror
dec
test
repz
add
int
xchg
dec
inc
lods
je
xchg
stos
fst
int
ja
dec
aad
arpl
nop
push
cld
mov
add
int
test
and
pushf
jl
bound
adc
das
inc
inc
retf
or
pusha
jns
imul
jne
scas
pop
xor
jge
inc
jns
mov
jmp
mov
dec
push
adc
fs
and
lock
xchg
and
mov
cmp
call
mov
push
je
inc
jbe
outs
dec
lea
fucomp
pusha
xchg
nop
adc
adc
stos
cmp
push
in
sahf
int3
int3
mov
shr
aaa
xchg
(bad)
loope
mov
adc
mov
ja
fsubr
xor
or
jnp
test
in
je
sbb
popa
xor
xor
fwait
pop
pop
push
xchg
fdiv
daa
pop
mov
cld
add
mov
(bad)
imul
jmp
stos
fwait
adc
(bad)
imul
outs
(bad)
and
sub
loope
mov
gs
out
les
loope
dec
mov
push
push
popf
int
jecxz
adc
cmp
dec
jg
iret
dec
jo
jmp
dec
mov
mov
lods
loop
mov
adc
bound
nop
shl
fnstenv
push
movs
jl
and
aad
gs
mov
push
push
fcomp
les
or
jbe
xor
sbb
pop
mov
cmp
cmps
sbb
pop
fwait
or
ficom
add
push
test
mov
popa
ja
or
push
ror
call
cmps
lahf
add
push
mov
(bad)
jne
mov
mov
fsub
lea
out
mov
fisttp
out
xchg
pop
xchg
arpl
push
js
enter
mov
jbe
fist
in
cs
push
lds
cmp
pop
cmp
loop
inc
push
jecxz
mov
push
xor
adc
xlat
icebp
push
hlt
xchg
(bad)
repnz
and
shr
retf
inc
mov
les
pop
and
sbb
mov
mov
mov
jno
test
mov
or
mov
(bad)
xor
mov
jae
scas
and
cmp
mov
retf
dec
xor
arpl
lahf
dec
sbb
leave
pop
dec
ret
addr16
rcr
and
pop
cmp
scas
jnp
movs
inc
lds
add
in
call
sbb
in
in
aaa
mov
shr
(bad)
fldcw
sub
and
(bad)
enter
adc
test
arpl
test
mov
lds
mov
out
push
popf
mov
xor
xchg
outs
xor
jle
mov
cmp
cmp
mov
push
loop
mov
stos
cmps
jge
movs
xchg
repnz
xor
imul
or
in
mov
in
cmps
fst
mov
outs
das
push
push
push
push
push
(bad)
mov
into
xor
iret
or
jecxz
pusha
int3
pop
push
inc
jnp
iret
xor
fadd
outs
loopne
or
dec
pop
mov
rcr
mov
retf
pop
scas
into
movs
call
jne
into
and
mov
push
pop
repz
ins
int
jle
enter
add
xor
jbe
jmp
jmp
or
jno
push
pop
push
push
ja
lds
xchg
(bad)
aam
pop
sbb
ds
pop
pop
and
(bad)
sbb
xor
mov
push
loope
jp
mov
add
adc
fidiv
cmp
jb
es
push
outs
and
int
cmp
ins
or
loop
sahf
dec
ret
jg
loope
dec
and
xlat
xor
lods
addr16
fsub
mov
or
pop
shl
inc
fcmovb
in
leave
push
xchg
jb
dec
iret
ret
add
ja
dec
movs
push
cdq
lods
mov
cmps
mov
lahf
mov
jo
sub
jae
xor
pop
pop
cmp
or
imul
push
sbb
call
pusha
lods
ror
aam
scas
push
mov
jae
jno
ds
mul
aas
pop
and
jmp
ds
or
xchg
dec
and
pop
fadd
lock
es
push
repz
xor
jp
test
xchg
arpl
mov
jo
stc
fwait
(bad)
data16
mov
iret
jno
int
popf
add
fist
cli
pop
data16
sub
mov
inc
sti
mov
aad
outs
adc
pusha
jge
mov
(bad)
pop
(bad)
imul
icebp
push
iret
gs
push
(bad)
imul
retf
mov
retf
add
popa
call
outs
outs
pop
rep
mov
rol
sbb
fwait
imul
or
pop
xor
shl
xor
fmulp
adc
mov
mov
adc
fimul
push
mov
push
loop
call
add
mov
(bad)
ret
xchg
mov
js
pusha
cli
aad
xor
addr16
xchg
je
push
adc
test
inc
in
mov
xchg
or
jge
pop
rcr
pop
lahf
push
sbb
ja
out
inc
ret
sbb
aam
movs
inc
data16
jno
push
sbb
inc
fisttp
add
sbb
mov
and
adc
retf
sahf
test
adc
sbb
ficomp
test
xlat
imul
or
xor
pop
or
fwait
aas
jae
pop
cdq
jg
push
inc
je
mov
inc
imul
xchg
(bad)
bound
or
add
mul
(bad)
push
mov
in
mov
jp
cmp
jns
push
ftst
add
xor
aad
inc
inc
(bad)
gs
shl
imul
stc
cli
hlt
(bad)
repz
sar
test
sbb
push
inc
ret
mov
test
fistp
sbb
mov
dec
or
sahf
mov
pop
out
mov
and
out
lock
popa
pop
adc
sub
sub
test
add
and
mov
mov
xlat
fcmovb
fdivrp
pop
imul
fst
mov
sbb
xor
sub
cmp
mov
adc
xadd
cmp
leave
mov
ret
fadd
(bad)
ror
dec
sar
cmp
add
fnstenv
xchg
cmps
je
hlt
jns
stc
jmp
jns
(bad)
and
arpl
sub
imul
inc
retf
aad
nop
in
xchg
push
adc
mov
dec
outs
push
dec
or
mov
jnp
jo
bndstx
aam
cmps
not
sbb
jnp
ins
cmp
inc
sbb
repnz
mov
fabs
sahf
inc
out
mov
shl
adc
mov
xchg
sbb
ss
or
fsubp
and
cmp
aad
movs
cmp
xchg
inc
jecxz
xor
outs
mov
aaa
adc
cmp
in
mov
cmc
loopne
inc
out
xchg
mov
pop
push
(bad)
leave
imul
test
inc
mov
pop
imul
data16
dec
mov
outs
pop
nop
test
adc
je
and
fst
sub
mov
aas
push
pop
mov
adc
dec
(bad)
xchg
add
out
imul
mov
push
mov
jmp
sbb
pop
push
cmp
mov
xor
mov
test
in
add
pop
mov
mov
xlat
cmp
mov
mov
dec
jmp
ss
pop
push
jae
pop
sub
imul
jmp
inc
add
pop
icebp
or
cmps
(bad)
int3
clc
add
sbb
retf
aaa
or
and
pop
sub
jmp
ja
(bad)
cmps
retf
stos
or
lock
loop
ja
test
jg
shl
leave
mov
push
outs
pop
adc
xor
sub
ret
add
sub
dec
fisubr
sub
sbb
dec
cmp
inc
sahf
lea
in
jecxz
cmp
or
and
movs
hlt
mov
mov
cli
cmp
sti
pop
adc
pop
xchg
sub
fistp
add
jae
sti
(bad)
mov
mov
(bad)
pusha
mov
cmps
rol
imul
or
ds
outs
or
mov
das
imul
mov
cmp
mov
das
inc
ins
loop
prefetchw
test
lock
stos
bound
test
push
loopne
or
imul
xor
nop
hlt
xchg
or
mov
fimul
inc
ror
mov
outs
arpl
rol
jmp
push
xor
hlt
jnp
cmc
lahf
test
mov
pop
in
xchg
add
push
push
int3
out
in
or
les
fidiv
sar
out
dec
lods
stos
mov
jle
push
push
jne
out
fwait
cld
sub
cmp
pusha
push
mov
mov
jnp
xor
jg
or
(bad)
jns
mov
push
retf
adc
xor
cmps
sub
(bad)
ja
ja
retf
stos
(bad)
pusha
inc
or
pop
sahf
inc
bound
fstp
xchg
sahf
add
jne
scas
cmc
not
rol
and
xchg
pushf
(bad)
pop
sti
sub
sub
cmp
pushf
mov
sub
dec
ret
cli
sub
(bad)
xchg
sbb
jo
adc
cmp
enter
out
jecxz
popf
js
fbstp
bound
lock
push
lods
or
adc
fsub
jecxz
dec
ror
mov
fst
or
xchg
ja
les
repnz
xchg
or
and
fldenv
sub
push
(bad)
(bad)
imul
stos
push
or
sub
sub
mov
cmp
cmps
fcom
repz
das
cmp
xchg
add
jnp
int3
popf
pushw
mov
pop
push
(bad)
sbb
jae
div
xchg
add
addr16
inc
imul
cmp
xchg
and
push
shr
int3
std
add
xchg
(bad)
neg
adc
shl
(bad)
cmp
xchg
mov
jp
pop
lock
pinsrw
or
xchg
mov
dec
int
addr16
adc
inc
fs
loopne
movs
dec
outs
sbb
mov
push
inc
mov
pop
call
shr
inc
or
mov
xchg
jecxz
outs
call
xchg
xor
xchg
mov
push
jmp
sbb
jecxz
pop
(bad)
pusha
in
ja
(bad)
retf
pop
xchg
inc
dec
dec
inc
mov
mov
es
jbe
aad
jo
imul
shr
or
mov
fwait
add
data16
cmp
sub
rol
inc
mov
xor
and
and
gs
jnp
mov
call
inc
inc
lods
lock
add
push
inc
cmp
cmp
or
pop
lods
repz
pop
stos
jns
rcr
push
inc
test
loope
mov
iret
mov
fsubr
mov
aas
call
mov
int3
dec
(bad)
call
cld
sbb
outs
mov
dec
mov
mov
fidiv
out
icebp
ins
xor
sub
lods
xor
sub
jae
pop
push
into
and
jbe
pop
dec
mov
movs
pop
call
mov
inc
mov
mov
xor
xor
or
adc
and
or
rcl
add
jmp
sbb
mov
mov
push
adc
push
cmp
cmc
mov
aam
hlt
mov
test
aas
add
sub
and
retf
sbb
inc
out
push
retf
(bad)
pop
pusha
mul
stos
add
call
fidivr
adc
pop
add
data16
cmp
pop
inc
sar
cmps
nop
or
jp
push
sbb
ror
arpl
shl
lds
jp
aaa
dec
js
jmp
or
jmp
cmps
sub
test
cs
cmp
adc
xchg
or
out
repz
add
loope
imul
add
imul
mov
ja
mov
repnz
fsub
ret
ret
scas
(bad)
push
movs
ret
mov
add
and
push
push
(bad)
nop
arpl
mov
mov
dec
push
test
add
fwait
pop
or
jns
dec
rcr
addr16
dec
movaps
mov
lss
adc
or
xor
add
(bad)
xor
jg
je
in
(bad)
adc
or
iret
sbb
scas
sbb
inc
jb
jne
xchg
cmp
pop
ins
or
cld
frstor
les
pop
ret
aam
adc
js
lods
icebp
sub
ficom
rol
and
and
pop
daa
mov
fdiv
jmp
not
int3
mov
mov
add
mov
cmps
scas
mov
retf
push
jo
out
cdq
stos
pop
aad
fs
ds
bound
(bad)
mov
arpl
nop/reserved
xchg
cmp
(bad)
mov
adc
lods
jle
mov
dec
pop
pop
(bad)
adc
aas
dec
mov
cmp
les
js
xchg
jecxz
sub
fbstp
adc
loop
pop
mov
mov
push
or
adc
xchg
popa
xor
sbb
pop
mov
rcr
push
xchg
and
mov
mov
xlat
xlat
mov
std
jge
pop
mov
(bad)
pop
(bad)
xchg
in
rcr
push
fisubr
scas
sub
inc
push
cmp
or
mov
sub
jne
add
aaa
adc
pop
push
mov
repz
mov
or
imul
and
scas
jae
lds
ins
pop
jbe
adc
xchg
(bad)
leave
(bad)
adc
nop
jno
int
xchg
add
xchg
or
pop
xchg
pop
lahf
aas
xchg
mov
jmp
sahf
push
(bad)
shr
pop
jnp
icebp
ficom
retf
cmp
jp
sub
ret
ins
jae
movs
mov
cld
push
std
adc
(bad)
sbb
pop
or
(bad)
xchg
cmp
bound
xchg
add
dec
pop
dec
xor
test
pop
movs
aaa
jl
mov
shl
inc
stos
cmp
mov
and
sti
jecxz
mov
call
movs
mov
ror
fnstcw
sub
xor
mov
dec
iret
gs
lods
xchg
in
fimul
scas
(bad)
test
jge
cmp
sub
lea
sub
ss
cli
aam
push
retf
jns
mov
sbb
dec
lds
xchg
cmc
in
sub
out
add
or
out
daa
aas
clc
dec
xchg
sbb
rol
jmp
out
mov
fwait
sbb
sti
and
scas
test
(bad)
test
jge
push
jle
cmp
push
movq
ja
mov
push
aam
pop
cmp
outs
cs
es
rep
clc
ror
out
imul
xchg
mov
sahf
mov
stos
mov
mov
dec
xchg
pop
mov
pop
es
test
inc
push
bound
jne
add
xchg
ficom
imul
das
nop
outs
jecxz
cmp
mov
dec
pushf
dec
dec
retf
pop
add
fidivr
lock
xchg
or
ja
dec
cmc
sub
sbb
jns
and
mov
das
jle
neg
push
jg
push
icebp
popa
(bad)
jae
mov
leave
adc
mov
jnp
stc
or
xor
xor
push
add
stos
cli
push
xor
pop
stos
jne
adc
iret
loop
xchg
mov
(bad)
into
cld
lods
mov
mov
sbb
shl
xchg
mov
lds
(bad)
xchg
or
lds
inc
les
dec
adc
ins
jae
jb
ret
nop
or
shl
inc
cli
lahf
sub
inc
in
push
inc
jno
out
pop
xchg
mov
xor
test
ret
mov
cmp
dec
xchg
movs
dec
fwait
mov
adc
xchg
cwde
cmp
xor
and
push
cdq
sub
sub
cld
lods
xchg
cmps
adc
cmp
jmp
outs
test
scas
jecxz
lods
cmps
aas
jb
xor
add
cmp
xchg
sbb
sbb
add
push
test
xchg
add
cmp
stc
or
setp
in
push
lds
mov
sub
aam
rcl
push
cs
adc
repnz
push
jle
mov
stos
pop
lahf
dec
sbb
aaa
adc
inc
rep
push
cmp
lods
jecxz
add
je
push
das
pop
and
dec
shl
jo
in
dec
test
popa
dec
dec
popf
test
(bad)
mov
or
bound
ins
inc
in
sbb
dec
cmp
js
push
daa
rol
out
cmp
dec
adc
iret
repnz
mul
iret
mov
test
mov
sti
lahf
cmp
jae
ja
mov
xor
stos
inc
mov
in
test
mov
push
mov
inc
mov
out
xor
lock
ret
mov
lea
cmp
add
mov
int
push
mov
div
cmp
jge
inc
jle
lds
fnstcw
rcl
mov
iret
mov
push
xchg
sahf
repz
call
test
ss
lock
mov
jae
inc
fs
push
dec
pop
pop
ins
cmp
push
pushf
pop
cs
(bad)
cmp
add
xchg
xor
add
pop
xor
pusha
cwde
inc
lods
in
cmp
push
iret
aad
jnp
mov
sbb
xchg
adc
or
ja
bnd
(bad)
hlt
ins
xlat
nop
jne
push
shl
fs
jno
jp
xlat
or
or
and
imul
xor
and
jns
mov
push
lods
jle
enter
xchg
mov
(bad)
add
xor
mov
(bad)
mov
outs
mov
mov
(bad)
jge
jo
push
and
(bad)
mov
scas
aam
out
in
add
ins
jp
jmp
xchg
xchg
adc
mov
pop
adc
inc
shr
cmp
mov
call
adc
je
adc
repnz
rcr
push
push
cwde
jmp
fldcw
clc
pop
ds
sbb
movs
sub
mov
jnp
or
inc
adc
add
cmp
nop
mov
sub
dec
cli
scas
mov
cld
std
outs
imul
mov
ss
sbb
(bad)
xlat
pop
retf
jmp
pop
ja
cld
push
mov
and
jno
outs
jecxz
and
je
cmc
call
push
sbb
data16
(bad)
or
in
add
xor
clc
lods
pop
aaa
int3
pop
movs
mov
dec
addr16
pop
xor
sar
shr
pop
ins
xor
xor
inc
ja
pushf
xor
das
and
adc
xchg
push
inc
call
pop
cs
push
(bad)
fcomp
stc
jmp
jnp
fcom
jnp
push
icebp
add
les
loopne
xor
jnp
fistp
loop
fucomip
push
movs
aaa
mov
mov
dec
or
dec
popa
ret
mov
xor
ret
(bad)
rol
(bad)
or
xor
xchg
jl
dec
mov
outs
out
push
jno
or
popf
xor
xchg
push
xchg
lods
pop
movs
fiadd
mov
movs
and
repz
or
push
add
imul
popa
mov
pop
push
mov
fcmovbe
mov
out
shl
inc
adc
cs
or
mov
in
jge
dec
pop
lds
fidivr
mov
add
repnz
call
add
mov
inc
push
mov
ja
sti
cmp
dec
xchg
std
dec
push
test
popa
mov
push
jb
adc
pop
add
pop
push
push
sub
clc
ror
mov
sub
in
sub
sti
clc
jp
pop
retf
out
or
pop
inc
int
push
in
lds
add
and
loop
jmp
jle
adc
inc
dec
cmp
mov
xor
fadd
clc
sbb
rcl
lods
cmp
shl
dec
loop
fdiv
inc
enter
mov
xchg
adc
mov
cwde
aam
fst
in
pop
test
xlat
(bad)
das
and
les
gs
cwde
loopne
stc
push
stc
sub
sbb
push
(bad)
aas
xor
sbb
dec
(bad)
mov
add
mov
xchg
mov
test
jp
int3
adc
sbb
fcomp
mov
sbb
sti
jmp
popf
adc
lods
jne
mov
or
sub
dec
push
inc
(bad)
xchg
arpl
push
fist
mov
cmpxchg
lock
ret
inc
pop
call
sub
jb
mov
add
ins
in
nop
lods
adc
xchg
daa
mov
jl
test
popf
adc
int3
scas
mov
daa
test
jmp
jmp
xchg
sti
mov
hlt
jb
mov
pop
or
or
sub
in
aad
cmps
sub
jns
adc
out
mov
movlhps
and
daa
popf
es
je
pop
cli
jb
inc
sub
add
aaa
rcl
aam
push
cmp
js
fimul
adc
mov
clc
pop
and
xor
xor
retf
pop
jmp
mov
pop
test
cli
mov
add
adc
movs
test
repz
movs
mov
loope
je
mul
xlat
jmp
popa
jne
aam
sbb
test
ret
pop
xchg
adc
pop
inc
daa
xchg
xor
ins
lahf
pop
shl
xor
sahf
mov
jge
push
pop
and
and
mov
(bad)
cmp
sub
repnz
pop
retf
adc
mov
jns
call
mov
xor
mov
cli
fdiv
sar
adc
xor
xchg
out
xor
cmp
or
cmp
xchg
ret
test
jge
mov
(bad)
mov
(bad)
(bad)
cmc
inc
mov
dec
ss
retf
lds
mov
jmp
aas
retw
mov
dec
adc
ds
inc
imul
scas
sub
cmp
mov
add
(bad)
shl
mov
aaa
loopne
xchg
out
pop
inc
call
push
dec
hlt
movs
pop
dec
or
cwde
and
mov
dec
sub
stc
cli
das
add
shl
je
aas
cmp
xchg
lea
mov
in
mov
adc
clc
mov
sbb
fwait
imul
pop
push
push
mov
push
and
movs
lods
rcr
data16
retf
inc
add
mov
jge
add
outs
pop
scas
sbb
(bad)
call
sbb
out
push
frstor
mov
xcrypt-ctr
pushf
or
xor
idiv
cmc
and
(bad)
ror
imul
fldcw
sbb
test
gs
jns
repz
add
sar
stc
sbb
int3
inc
push
pop
verr
lock
bound
test
cmp
mov
jecxz
adc
lods
sbb
out
(bad)
aad
fisub
add
clc
jmp
std
pop
mov
mov
add
shl
pusha
jmp
lods
mov
and
xor
fmul
enter
mov
xchg
sub
push
cli
mov
pop
mov
jmp
mov
ficom
lock
lds
scas
and
ret
xchg
mov
(bad)
aam
jge
xor
aad
cmp
data16
in
inc
adc
loope
lods
jae
sbb
dec
add
inc
adc
cmp
repz
test
mov
sbb
mov
aam
dec
push
pop
jb
jp
cdq
cmp
pop
ja
adc
loopne
addr16
sbb
(bad)
xor
into
dec
push
cli
mov
ret
and
push
xor
add
push
fstp
daa
loope
fnstsw
mov
(bad)
xchg
cmp
fs
ds
fiadd
ret
call
sbb
pop
fwait
jle
(bad)
movs
jmp
dec
add
daa
jbe
jne
sub
mov
cmp
cmps
mov
push
imul
pop
dec
mov
imul
or
jmp
ja
jne
(bad)
loope
inc
iret
into
repnz
outs
repnz
push
sub
jle
push
fisttp
int
inc
cmps
daa
ds
sub
cmps
lea
jg
sbb
outs
dec
lea
test
xor
inc
sub
sbb
fnop
pop
cld
in
mov
mov
pop
adc
int3
into
mov
push
es
push
fadd
mul
mov
xlat
pop
xlat
lods
pop
pop
addr16
cli
lock
mov
scas
(bad)
sbb
fstp
and
cs
mov
movs
pop
(bad)
pop
mov
sub
xchg
and
mov
sub
out
iret
ror
lods
std
pushf
mov
add
adc
pop
pop
cwde
das
jg
adc
das
or
mov
retf
cmps
scas
add
rol
mov
cli
pop
and
mov
add
jg
push
cmp
jnp
es
cli
scas
adc
mov
xchg
data16
bound
ja
rcr
jecxz
pushf
js
sub
mov
mov
push
not
dec
jns
in
and
stc
and
retf
movs
pop
mov
(bad)
out
clc
pop
clc
push
inc
xor
test
adc
add
mov
push
xchg
sub
pop
lock
ins
mov
fstp
fcmove
mov
jnp
fyl2xp1
cwde
and
test
sbb
sti
adc
mov
retf
pop
sub
pusha
aaa
sbb
sub
mov
aas
call
sub
and
or
ss
arpl
aaa
inc
stos
in
cmp
aad
inc
es
jecxz
xchg
mov
and
lods
js
rcl
or
enter
push
xchg
fistp
enter
mul
xchg
xchg
stc
pop
je
pop
jmp
mov
cld
jnp
stos
rcl
fwait
idiv
or
ins
mov
loop
and
sbb
lea
hlt
ds
jbe
mov
push
popa
ja
push
loopne
and
data16
inc
xchg
xchg
jb
push
mov
aaa
mov
outs
inc
jmp
mov
movs
cmp
push
mov
mov
int
popa
out
popa
jae
pop
fwait
adc
mov
mov
mov
ds
and
cld
in
call
pushf
pop
lea
mov
cmps
(bad)
and
aad
adc
mov
test
mov
mov
pop
sub
mov
and
(bad)
pop
sub
icebp
(bad)
scas
and
cmp
stos
lahf
ror
pop
(bad)
and
arpl
cmp
xchg
cwde
(bad)
rol
jl
xor
div
cmp
xchg
bound
xor
mov
mov
or
call
stc
bound
cmps
stos
movs
cmp
mov
lea
xchg
gs
push
faddp
cmp
push
cmp
push
(bad)
jo
push
cmps
(bad)
jmp
scas
test
add
push
in
mov
push
xlat
ret
push
nop
add
push
hlt
gs
pop
mov
shl
lahf
sbb
mov
sub
and
inc
cmp
(bad)
loop
cmp
stc
movups
dec
push
fsub
adc
adc
push
push
pop
sti
popf
clc
cmp
int
shr
xor
leave
into
sub
jne
xchg
push
loop
mov
jb
pop
retf
or
jmp
mov
cli
in
stos
leave
mov
scas
scas
aam
lods
jbe
out
or
mov
icebp
sub
mov
push
mov
pushf
ror
pop
xchg
loope
mov
sbb
push
jle
mov
and
ret
and
mov
cmp
push
or
ret
add
xchg
in
icebp
mul
pop
test
sbb
add
and
add
xor
sub
mov
add
pop
fs
enter
subps
rcr
mov
bound
and
inc
(bad)
sub
shl
mov
mov
stc
ja
mov
dec
pop
(bad)
in
dec
jb
cmps
dec
xor
adc
cmp
xchg
cmc
pop
mov
xchg
xor
ds
cmps
into
sbb
sbb
dec
mul
aam
out
pop
adc
pop
outs
std
addr16
gs
xchg
cmps
aaa
cmp
(bad)
sbb
xchg
pop
xchg
mov
cmp
stc
sub
adc
jmp
and
enter
or
in
jae
es
cs
pop
retf
ds
mov
and
add
leave
jae
jge
mov
fbld
xchg
sti
pop
aad
adc
push
sbb
jae
cld
lock
jge
or
call
adc
mov
aad
div
sub
div
and
cmp
sub
xchg
jge
test
aaa
test
movs
and
into
lock
pop
adc
xchg
into
pop
scas
aas
repnz
cmp
xchg
cmp
mov
loopne
jp
sub
ret
and
inc
nop
lea
xor
adc
adc
addr16
popf
sub
add
inc
cmp
push
jge
lahf
pop
or
inc
(bad)
cld
cmp
cs
jae
mov
scas
imul
or
pop
mov
sub
mov
mov
jns
loopne
add
xchg
mov
sub
iret
loopne
(bad)
cli
and
cli
sbb
aam
bound
rcl
push
loopne
ret
adc
pushf
lahf
pusha
xchg
test
mov
or
mov
aas
sahf
stc
test
js
scas
aas
ficom
adc
test
or
inc
js
retf
jle
xchg
xor
shl
and
lahf
ds
icebp
int
popf
in
pusha
call
jl
test
xor
push
mov
repz
jl
add
ins
jecxz
add
movs
jbe
(bad)
jnp
add
adc
push
imul
cmp
push
fistp
pushf
(bad)
int3
lods
and
shl
adc
sbb
je
in
mov
and
ins
xchg
or
shl
lods
mov
mov
xchg
cmp
push
dec
repnz
pop
fnsave
adc
mov
sbb
fnstsw
add
push
mov
lods
sbb
lea
imul
jle
aam
jae
fs
or
xchg
dec
mov
push
lods
int3
pusha
cmc
mov
icebp
inc
(bad)
out
ror
(bad)
jg
movs
sbb
shl
pop
mov
rcl
sbb
or
mov
sbb
xchg
adc
cs
rcl
or
mov
sub
retf
stc
shl
scas
(bad)
aam
adc
mov
mov
arpl
inc
clc
(bad)
adc
loope
mov
clc
dec
xchg
mov
pop
pop
scas
mov
xchg
dec
data16
or
push
xchg
or
in
arpl
retf
call
mov
loopne
jmp
sub
push
test
dec
push
js
xlat
(bad)
cmp
retf
pop
stc
adc
addr16
out
xchg
jmp
pop
cld
jb
cwde
int3
fadd
cmp
lods
dec
dec
pop
jmp
pop
adc
or
sbb
push
lock
cmps
jbe
dec
or
pop
in
push
inc
cmp
sub
inc
imul
push
xor
fneni(8087
mov
jle
gs
push
imul
pop
xchg
pusha
hlt
cld
pop
push
dec
ret
jmp
mov
cdq
sbb
xchg
pop
xchg
mov
add
xchg
mov
cdq
aas
push
(bad)
lods
popf
push
or
sub
add
add
das
xor
scas
add
(bad)
(bad)
aad
in
inc
movs
mov
hlt
sbb
into
inc
mov
xor
arpl
cmps
mov
test
out
cwde
inc
adc
add
iret
fnstcw
mov
(bad)
xor
aas
ret
pusha
dec
les
out
fcmovu
pop
stos
scas
arpl
push
icebp
xchg
pusha
lods
add
(bad)
mov
dec
jp
iret
jno
sbb
jp
jnp
ja
jmp
scas
daa
mov
nop
inc
adc
ja
and
fs
div
outs
mov
ret
icebp
std
clc
test
and
cld
cli
jge
mov
sbb
xor
cmps
mov
aas
xor
xchg
retf
outs
aad
(bad)
scas
jae
add
sbb
ds
es
jnp
mov
mov
jp
cli
sub
fist
ins
adc
or
out
xchg
arpl
add
mov
test
xor
test
adc
fdivr
out
add
cmc
cmps
add
aaa
jge
(bad)
les
add
xchg
stc
stos
sub
xchg
cwde
into
sub
stos
aam
push
pop
stos
xor
pop
jnp
pop
fs
stc
pop
ins
aaa
lods
not
int
test
xchg
mov
mov
inc
ficomp
push
das
int3
lea
in
arpl
jns
es
imul
in
jmp
and
das
and
and
je
jne
jbe
loop
dec
test
xor
repz
cmps
int3
cs
mov
fld
cs
xchg
inc
mov
sub
xchg
fld
cmp
rol
in
rol
mov
dec
sti
ficom
pushf
scas
loopne
adc
cmp
cmp
test
mov
pushw
and
in
into
jecxz
adc
test
push
dec
cmp
xchg
dec
push
mov
lea
or
jo
add
not
cmp
dec
int3
test
and
(bad)
jmp
(bad)
cli
in
ret
jne
mov
stc
ficomp
in
mov
xchg
pop
icebp
test
test
pop
je
sub
or
pop
in
outs
rcl
add
inc
xchg
(bad)
call
stc
xchg
or
add
pop
jl
dec
mov
jnp
stc
push
repnz
nop
mov
fidivr
mov
rcr
(bad)
add
fidivr
xor
dec
fadd
call
fisttp
xor
out
loopne
fcom
bound
xor
jmp
mov
movs
mov
int3
fld
imul
shl
nop
hlt
push
enter
loopne
jmp
jo
les
adc
ret
punpckldq
cs
gs
pop
ss
add
cmp
jno
stos
(bad)
push
push
jo
add
jmp
iret
adc
lds
add
aas
mov
jne
scas
sub
jnp
inc
call
jmp
lea
jns
cdq
mov
cmps
in
cmp
test
inc
pop
retf
sar
inc
push
clc
jl
xor
add
dec
xchg
and
lds
enter
or
cmp
xor
pop
xor
stos
dec
jo
add
mov
aad
pop
pop
sub
iret
call
xor
sub
pop
imul
(bad)
push
(bad)
in
jl
mov
xchg
retf
fnstsw
jmp
cld
stos
push
dec
je
push
fwait
cdq
and
sub
lahf
add
and
mov
jno
sbb
dec
pop
imul
mov
push
add
sub
jle
add
and
nop
addr16
stc
adc
add
jns
(bad)
xchg
xor
ret
lds
push
adc
xchg
jmp
icebp
stc
cli
lock
sub
jne
add
call
mov
push
pop
adc
inc
outs
xchg
lods
pop
test
cmp
in
mov
test
sub
adc
pop
push
mov
test
shr
dec
cmp
mov
xchg
es
jl
sbb
shl
jns
dec
mov
loope
cwde
or
int
popa
daa
mov
pushf
mov
jno
sbb
mov
mov
stos
pop
rcl
outs
cmp
rcr
dec
(bad)
data16
cmp
in
adc
loopne
pop
ret
push
imul
pop
and
scas
pop
cmp
dec
test
dec
out
mov
jl
adc
pop
inc
mov
rol
cli
lock
fdivr
and
jle
jp
push
fsub
cmp
sub
stos
pop
popa
cwde
dec
arpl
jno
push
jno
push
in
mov
xchg
mov
out
jmp
pushf
cld
cmps
ins
push
jp
or
push
adc
lods
cmc
jmp
aas
sti
mov
icebp
std
or
cmc
(bad)
xchg
call
cmps
int3
push
sbb
lds
addr16
(bad)
out
daa
adc
mov
pop
imul
cmps
in
dec
mov
aas
jl
mov
mov
pop
in
not
pop
mov
into
dec
or
xchg
stos
lea
or
jmp
(bad)
mov
cmps
dec
sbb
mov
inc
mov
sub
ins
hlt
cmp
pop
xor
jmp
xchg
jle
lock
js
aam
jae
dec
pop
inc
lock
sbb
test
push
inc
data16
gs
dec
cmp
sbb
and
push
pop
scas
push
out
dec
push
fs
jb
test
mov
or
in
ss
pop
sbb
pop
in
mov
je
sub
mov
ja
out
pop
mov
mov
lock
and
cmp
das
and
add
mov
lds
dec
xchg
arpl
jecxz
cmc
mov
mov
mov
ret
inc
pop
or
stos
aam
shl
push
xor
xor
jmp
xor
repnz
push
adc
jle
adc
jl
fmul
(bad)
mov
push
xor
imul
sub
sub
xchg
movs
add
or
cmp
test
out
push
ja
out
test
gs
nop
bound
mov
dec
pop
mov
addr16
je
inc
adc
pop
mov
jp
in
xchg
(bad)
and
scas
push
push
stos
push
outs
daa
addr16
sub
test
xchg
outs
sbb
mov
(bad)
jmp
cmp
pop
les
xchg
out
das
jbe
xchg
sbb
iret
shl
pop
or
(bad)
push
jnp
(bad)
out
push
std
jle
ja
jp
iret
adc
sub
mov
sub
sub
inc
sbb
mov
xor
jge
adc
adc
adc
add
cld
sub
lds
push
inc
cmp
ds
shld
lods
mov
mov
mov
pop
push
pop
jo
mov
(bad)
cmp
inc
push
mov
cwde
or
push
jae
xor
push
pop
test
and
sub
fdivr
popa
jp
push
daa
jno
push
mov
sar
sub
into
or
daa
out
addr16
jl
adc
cdq
inc
fadd
xchg
dec
loop
inc
cmps
cmp
mov
repz
sub
mov
lahf
mov
pop
push
fwait
cmp
or
mov
es
mov
sbb
cwde
in
dec
ret
rol
daa
xor
add
mov
dec
mov
sub
or
shr
sahf
(bad)
cld
jo
inc
sbb
clc
pushf
lods
and
dec
int3
ffreep
aas
jae
xor
cmc
ds
scas
inc
push
jp
enter
mov
sti
mov
mov
and
cmps
(bad)
xor
xor
mov
dec
xchg
fisttp
mov
gs
fnstenv
mov
fsub
rcr
ret
loop
into
pop
cmp
fstp
pop
stos
outs
jmp
out
aas
shl
aad
inc
sti
(bad)
cld
xchg
loopne
mov
int
ret
std
mov
ds
xchg
rcr
out
fimul
adc
cmp
push
xor
pop
mov
adc
jecxz
sbb
cwde
sub
pop
xchg
or
fs
idiv
dec
std
push
ins
es
or
mov
cmp
pop
inc
xchg
cmp
lock
arpl
add
pop
or
sbb
movs
leave
jo
adc
fnstcw
adc
sbb
dec
fdiv
and
adc
add
adc
inc
mov
cmp
inc
loopne
dec
mov
push
add
test
std
push
cmp
push
and
sbb
xor
inc
pop
jg
ins
mov
and
fiadd
cmp
jno
adc
idiv
jl
shl
arpl
xlat
ret
sti
and
repz
aaa
hlt
movs
js
rcr
inc
cli
adc
sub
popf
jg
cmp
add
rcl
push
mov
das
lahf
jo
adc
leave
fadd
add
mov
inc
dec
pusha
jecxz
pop
cmps
adc
rcr
sbb
push
dec
aam
mov
fiadd
pop
pop
mov
pop
rcr
cmp
xor
loop
leave
sahf
dec
pop
(bad)
mov
jnp
aad
pop
js
pusha
retf
jmp
stos
sbb
jle
mov
call
loope
out
shl
mov
xchg
or
adc
and
jne
mul
and
mov
push
push
push
pop
jnp
daa
in
xchg
pop
popf
loop
stos
pop
jne
mov
add
(bad)
dec
cmps
sub
repz
sahf
test
adc
(bad)
jl
mov
in
or
das
jmp
xor
inc
lods
sub
inc
sub
sti
loopne
mov
leave
ficomp
cmp
and
adc
cmp
dec
add
mov
fild
shl
arpl
fst
iret
mul
test
sub
mov
and
push
mov
cmp
or
jmp
add
scas
aas
ret
mov
fiadd
sub
pop
cdq
(bad)
jmp
jne
mov
and
jne
sbb
call
mov
ins
mov
and
xor
bound
call
loope
ins
inc
ins
fld
shl
inc
int
outs
in
add
dec
scas
push
mov
mov
stc
push
sbb
call
xchg
xor
pop
mov
jle
push
and
inc
sub
mov
in
sar
mov
(bad)
mov
icebp
repz
(bad)
pop
pop
mov
leave
lds
lods
outs
std
xor
or
mov
in
jbe
movs
sar
adc
test
mov
inc
mov
in
les
je
mov
and
mov
(bad)
cmps
(bad)
ins
jl
mov
outs
dec
xchg
cmc
sbb
add
jb
xchg
stos
popa
mov
ficom
pusha
scas
and
mov
fdiv
push
aaa
xchg
and
mov
pop
fwait
retf
cmp
jmp
retf
out
xor
push
lea
outs
icebp
adc
mov
enter
push
sbb
inc
sti
push
dec
adc
loope
adc
imul
mov
rcr
add
mov
mov
int3
or
imul
push
fdivr
cmc
lea
lahf
(bad)
push
dec
xchg
and
std
push
mov
cmp
out
jmp
sbb
mov
dec
and
push
lds
cdq
mov
lea
in
ins
or
sub
call
lods
dec
shl
sub
in
adc
shr
mov
call
sbb
inc
leave
adc
inc
jne
in
mov
sub
mov
outs
sahf
push
fcomp
push
inc
shl
pop
dec
aam
mov
mov
mov
retf
aad
inc
add
mov
lds
add
push
mov
nop
mov
push
add
loop
call
push
cs
retf
mov
pop
inc
popa
movs
mov
aam
repz
bound
push
daa
or
repz
sbb
aas
clc
mov
add
mov
mov
retf
repz
movs
jge
inc
in
pusha
cmp
ss
imul
xor
mov
push
daa
jmp
inc
inc
inc
test
or
cmps
mov
call
mov
lahf
lea
pop
out
(bad)
push
dec
adc
fmul
xor
jg
out
mov
jbe
pushf
mov
pusha
jmp
adc
shr
inc
and
inc
jae
test
lea
lahf
iret
pop
push
adc
fptan
shr
pop
or
fild
jns
cs
add
sbb
inc
rcr
xor
rcl
inc
or
mov
mov
mov
adc
xor
jg
mov
loope
js
retf
mov
xchg
div
mov
mov
fst
mov
sbb
movs
dec
mov
dec
and
outs
pop
pop
in
jno
push
dec
sub
(bad)
mov
sub
xor
stos
sti
pop
cmps
inc
sbb
(bad)
fisttp
pop
push
call
daa
into
cmp
test
popf
pop
dec
retf
cmp
inc
sub
(bad)
push
ret
pop
dec
jbe
mov
push
stos
pop
fs
mov
dec
aaa
hlt
movs
bound
out
and
mov
jae
jo
out
push
jmp
sub
cli
xor
mov
call
dec
dec
das
mov
xlat
bound
loopne
retf
adc
push
fadd
xor
xchg
fwait
cmp
daa
shl
loopne
mov
sbb
inc
lds
mov
sahf
add
lds
pushf
add
nop
xchg
pop
in
adc
fs
add
xor
arpl
pop
popf
push
and
and
dec
pop
adc
nop
ss
fdecstp
inc
inc
popa
mov
inc
and
cmp
mov
and
mov
cmp
push
addr16
push
sbb
cs
mov
je
cli
mov
xchg
or
pop
sahf
sub
mov
sub
pop
push
pop
jp
and
inc
ins
inc
dec
(bad)
xor
int
mov
mov
fsub
mov
and
je
mov
movs
pop
xchg
cmp
xchg
imul
or
jns
add
xor
gs
inc
bound
jp
jno
add
fst
add
mov
popa
bound
xor
jbe
mov
rol
xor
xor
fisub
leave
ss
and
loopne
pop
mov
pop
in
jge
sub
js
sbb
fadd
xor
cmps
push
enter
pop
and
int3
mov
ja
push
cmp
adc
test
into
js
mov
sti
sub
call
nop
mov
sub
or
enter
push
and
adc
push
jmp
mov
jno
imul
adc
repnz
aad
aam
loop
mov
jmp
les
adc
sub
sub
pop
mov
clc
jg
popf
inc
fisttp
sbb
and
repnz
sbb
jnp
div
mov
jno
outs
outs
jl
lock
dec
dec
(bad)
lock
mov
cmps
mov
fs
scas
adc
xlat
add
mov
pop
pop
call
ficomp
cmp
cmp
call
cmp
sub
cdq
push
into
(bad)
sar
push
jl
(bad)
add
and
pop
ret
add
mov
out
jo
jmp
das
in
add
mov
cdq
movs
mov
jl
push
loope
retf
in
xor
sti
imul
cli
ret
fs
(bad)
pop
sub
dec
test
lods
sbb
sbb
mov
inc
add
dec
dec
int
jno
xchg
pusha
adc
inc
cmc
jae
sar
fld
imul
push
js
sbb
sub
xor
push
and
sub
and
and
jge
xchg
(bad)
js
jmp
(bad)
dec
pop
ret
push
cvtps2pi
jno
cmp
inc
xchg
pusha
xchg
jb
cmp
mov
mov
mov
sbb
sbb
or
add
loop
fucom
jbe
ret
ds
jns
adc
fcom
(bad)
mov
cs
jbe
aaa
int3
and
xor
ins
aas
jns
je
lock
and
sbb
push
repz
pop
add
mov
shr
test
iret
push
and
xchg
push
jmp
jb
xchg
in
lea
test
mov
sub
out
(bad)
das
mov
fs
dec
(bad)
or
pop
loopne
sbb
adc
push
fldenv
sub
jo
push
hlt
jno
pop
sbb
push
adc
ins
loope
mov
nop
mov
(bad)
mov
pop
jp
(bad)
(bad)
jb
dec
scas
adc
outs
inc
outs
lods
jno
ror
xor
dec
mov
dec
inc
int
loope
out
jle
push
(bad)
mov
xchg
and
iret
or
rcr
dec
out
bound
les
inc
popf
enter
xor
dec
sbb
cmp
sub
add
fwait
xor
xor
repnz
adc
sub
cmp
sub
ja
inc
xchg
fsubr
or
cmc
mov
bound
fiadd
adc
cmp
dec
aam
sbb
fnstsw
test
loop
jae
jle
mov
aaa
or
push
ins
xlat
mov
rcr
pop
mov
clc
pop
popf
in
sub
cmp
jecxz
fsubrp
push
jmp
dec
inc
jo
fdivr
sub
js
push
jmp
ja
arpl
stos
shl
mov
or
call
test
sti
mov
hlt
xchg
loopne
je
inc
and
retf
xchg
sub
popf
fisub
push
gs
out
xor
mov
fs
aaa
outs
pop
bound
pop
loopne
iret
sub
adc
jmp
hlt
fsubr
push
adc
scas
add
enter
xlat
push
fsubr
mov
jo
or
int3
mov
sub
xor
inc
mov
inc
(bad)
in
pop
mov
les
cmps
arpl
or
cmps
cli
pop
pop
fdivr
shl
shr
cmps
rol
leave
into
js
lods
sub
inc
adc
mov
pop
push
push
scas
pop
cmc
mov
and
sar
or
imul
nop
imul
mov
inc
push
cmp
push
fwait
push
jp
out
jmp
mov
fdivr
retf
push
clc
cs
pop
sahf
test
sub
adc
pop
jnp
outs
pop
push
ins
dec
aas
jne
and
jmp
bswap
popf
pop
test
mov
cdq
cwde
rcl
(bad)
xchg
lods
adc
cmps
hlt
test
dec
inc
ins
xchg
xor
jae
lea
pop
(bad)
fsubr
cmp
ror
inc
nop
sub
sar
test
inc
mov
mov
loop
adc
popa
add
sub
sub
lahf
frstor
xor
mov
mov
mov
inc
mov
push
pop
or
push
jns
repz
jmp
pop
shl
ffreep
jmp
cld
mov
pusha
sub
out
daa
scas
adc
sar
fild
and
mov
inc
push
xor
xor
sti
scas
or
cmp
fadd
xor
hlt
cmp
mov
into
xchg
daa
jle
rcl
inc
gs
repnz
retf
mov
test
and
cld
out
push
cmp
test
fidivr
test
inc
hlt
pop
(bad)
test
out
sbb
push
push
cmp
push
bound
imul
xor
(bad)
pop
push
out
jge
(bad)
push
dec
sub
push
mov
dec
push
mov
into
or
push
jae
xor
out
mov
in
pop
inc
sti
xlat
inc
mov
pop
lds
sub
pop
rol
lea
jmp
inc
dec
jle
xor
fsub
mov
adc
enter
push
mov
out
mov
stos
add
cmp
push
fcom
popa
xor
hlt
or
jmp
mov
xlat
shl
sub
fnstenv
fld
nop
jae
jecxz
mov
sbb
rcr
inc
cdq
xchg
pop
xchg
dec
cmc
fnstenv
sti
mov
and
loope
test
cdq
popa
test
aas
inc
test
aad
adc
add
or
jmp
fs
out
xchg
mov
retf
and
in
ds
pop
add
add
fcmovnbe
je
repz
sbb
aam
(bad)
mov
aaa
jp
inc
pop
add
stos
mov
push
xor
mov
pop
and
outs
add
jl
int3
mov
mov
sub
mov
mov
mov
enter
xchg
sbb
je
imul
sub
fistp
scas
push
dec
xchg
cmp
imul
dec
loop
cmp
dec
aad
push
mov
push
std
in
jnp
out
mov
add
mov
dec
sbb
jle
fmul
ret
jge
(bad)
and
fs
adc
adc
test
lods
cmps
arpl
mov
jle
dec
add
push
mov
test
mov
cwde
(bad)
pop
sub
push
pushf
pop
dec
test
mov
push
or
aam
jbe
hlt
das
loope
pop
(bad)
pop
mov
sbb
mov
(bad)
lods
cmp
mov
sar
add
mov
adc
push
cmp
push
add
sub
xor
test
and
mov
hlt
pop
leave
out
xor
jp
std
jbe
inc
hlt
mov
dec
movs
jle
jl
enter
add
inc
adc
mov
lea
jb
lods
mov
sub
cmp
inc
cmp
mov
mov
and
xor
sub
in
lea
cmp
mov
mov
push
fs
jne
ss
xchg
call
mov
jns
stos
jmp
or
mov
js
inc
fst
int
(bad)
adc
(bad)
pop
xor
(bad)
scas
ret
dec
das
xor
mov
pusha
push
into
or
shl
inc
mov
mov
pushf
sbb
and
loop
int3
not
or
add
popa
(bad)
stc
pop
es
and
aam
dec
jge
mov
aam
ins
outs
mov
movs
fld
push
icebp
daa
or
cmp
fsub
push
xchg
xchg
call
scas
aad
adc
cmp
fucomp
pusha
(bad)
cmp
fnsetpm(287
adc
or
push
cwde
pop
out
xchg
inc
jb
xor
ss
cmp
cmp
or
imul
mov
aad
adc
mov
push
call
sar
push
pop
add
seta
mov
test
mov
shl
xchg
mov
cmps
cdq
cmp
jmp
jb
aaa
aam
jg
add
ret
xor
imul
and
sub
retf
push
xor
in
jnp
gs
jmp
xor
test
jo
or
int3
ins
outs
jmp
mov
dec
fistp
xor
das
adc
scas
in
jae
xchg
shl
mov
and
sub
or
mov
sahf
cmp
xchg
mov
add
adc
adc
xchg
js
icebp
adc
jg
inc
popf
out
test
jo
adc
lock
mov
xchg
js
cdq
leave
pop
lahf
adc
xrelease
test
lods
scas
std
jmp
popf
jns
scas
mov
inc
ds
aas
bound
xlat
or
push
cmp
inc
xor
jb
inc
cdq
loop
mov
adc
mov
pop
push
lock
movs
imul
jg
dec
imul
xchg
push
dec
call
(bad)
mov
add
xlat
data16
(bad)
push
push
clc
aam
jns
mov
fwait
inc
push
out
lea
add
push
cmps
sbb
xchg
punpcklwd
inc
std
movs
mov
cmps
add
push
mov
fild
dec
sub
rcr
in
adc
data16
mov
ja
je
popf
cmp
test
repnz
movs
dec
pop
mov
popa
in
imul
xchg
cmps
cld
jmp
mov
cmp
adc
xchg
or
outs
cmp
mov
xchg
stos
test
ficomp
cmp
add
push
mov
pop
mov
shr
test
pop
mov
(bad)
es
out
dec
aas
fs
dec
sbb
cmp
shr
cli
out
shl
fs
or
push
scas
push
xchg
into
in
imul
cmp
(bad)
sub
cwde
sbb
adc
pop
or
ja
mov
into
dec
int3
adc
pop
mov
push
cdq
jo
sub
sub
lods
xchg
sub
jmp
or
push
cld
xchg
dec
fwait
push
xchg
mov
stc
sbb
sbb
leave
(bad)
iret
call
into
add
pop
(bad)
cmps
mov
repz
test
jne
mov
ror
jo
pop
cmp
xor
mov
push
call
push
inc
call
inc
lock
xor
pushf
mov
fadd
das
or
lods
jo
ror
movs
aad
or
aas
(bad)
sbb
xor
xchg
push
pop
adc
dec
xchg
cmp
cmp
mov
popf
sbb
mov
xor
dec
or
std
movs
rcl
not
imul
fucom
xlat
xchg
cmp
(bad)
leave
push
je
lahf
pop
adc
iret
imul
adc
mov
stos
rcl
loop
dec
add
cmc
xor
cmc
retf
jg
xchg
rol
js
sub
adc
mov
xchg
or
inc
int3
adc
and
cld
mov
(bad)
loope
mov
sub
stc
lar
repnz
adc
add
inc
mov
xchg
test
setp
repz
or
(bad)
sbb
loope
arpl
sbb
adc
(bad)
mov
fcomp
push
gs
cmp
ds
jp
mov
and
jp
enter
jmp
xchg
sbb
ds
push
bound
and
fs
(bad)
call
retf
sub
jmp
cwde
xchg
imul
sub
inc
and
mov
xchg
(bad)
push
das
xchg
into
sub
call
push
icebp
adc
lahf
jl
inc
adc
ret
mov
mov
fdiv
add
xchg
adc
fist
add
cmps
out
scas
(bad)
push
pop
cwde
clc
stos
mov
and
mov
inc
lea
imul
xor
mov
mov
(bad)
cwde
cld
ret
jmp
push
rcr
ror
jmp
cmp
fbld
stos
xlat
push
imul
adc
ins
fbstp
cwde
test
scas
ret
cmc
js
fisubr
outs
xchg
imul
and
mov
pop
push
test
sub
jno
add
mov
shl
dec
and
adc
adc
shl
push
(bad)
popa
out
mov
icebp
imul
call
stos
rcl
imul
out
dec
mov
dec
fimul
dec
ss
cmp
stos
loopne
add
leave
cmp
xchg
bound
xchg
jnp
aaa
pop
mov
cmp
push
sti
cli
in
call
inc
mov
dec
push
dec
adc
cmp
push
adc
and
sbb
xchg
and
inc
dec
in
mov
cmps
mov
mov
dec
shr
and
pop
pop
mov
push
pushf
xlat
jmp
sub
xor
arpl
(bad)
cwde
push
xor
pop
mov
loope
sub
in
fwait
int3
dec
rcr
outs
mov
test
test
sbb
mov
mov
jmp
pop
subps
mov
cmp
xor
mov
pusha
das
stos
cmp
cmc
outs
movs
popf
repnz
and
fnstsw
pop
les
sub
or
push
out
dec
inc
cwde
lods
mov
mov
in
ret
adc
test
in
lock
pop
push
fnstenv
mov
sahf
add
jp
ins
mov
and
and
in
jns
mov
shl
push
adc
mov
daa
cld
cs
pop
cmc
sub
mov
loop
out
mov
jecxz
or
scas
add
sub
int3
dec
inc
adc
mov
(bad)
rcl
dec
and
in
hlt
mov
sahf
stos
push
push
or
xor
inc
fsub
sub
cwde
sar
fisub
loopne
ja
imul
jl
push
mov
adc
mov
mov
dec
pop
out
scas
push
fcmovnbe
sub
mov
cld
cmps
sub
xchg
push
lock
and
repnz
add
push
hlt
fidiv
mov
xchg
mov
pop
xor
pop
push
jmp
cdq
imul
xor
mov
xchg
enter
cmp
(bad)
in
mov
ja
adc
es
fist
jmp
or
cmps
sub
cmp
mov
retf
jecxz
jg
sbb
push
or
repz
xor
inc
div
jns
fucomi
pop
out
(bad)
loopne
xchg
sub
inc
stos
and
(bad)
in
jge
dec
outs
mov
pop
loopne
fcomp
pop
sub
rcr
fcomp
sbb
mov
(bad)
int3
sub
add
sub
mov
outs
cmp
jae
push
or
aaa
mov
dec
pop
inc
lods
pop
sub
adc
mov
cmp
(bad)
retf
sub
ja
mov
sbb
cmp
rcr
daa
dec
mov
fsubp
mov
jge
xor
add
fstp
ret
mov
dec
pop
ss
xchg
pop
in
ja
imul
push
jbe
push
lea
and
cmc
lahf
adc
fst
inc
bound
push
mov
das
sar
iret
inc
push
shl
and
cwde
xchg
or
hlt
mov
sub
push
inc
imul
jl
cmp
adc
inc
cmp
push
pushf
inc
test
xchg
in
xchg
retf
mov
mov
cmps
call
or
xor
mov
js
call
push
fs
adc
mov
sub
jbe
je
push
icebp
xor
in
retf
fs
or
cdq
pop
mov
repz
je
int
loopne
sti
das
enter
cmps
mov
xchg
ret
adc
mov
sar
add
xchg
call
lods
xchg
jbe
outs
sub
sub
inc
aam
jmp
div
sbb
iret
push
push
out
movs
mov
xor
push
mov
mov
stos
leave
test
fsub
adc
inc
add
clc
test
cmp
inc
dec
jg
jmp
repnz
sbb
push
je
mov
fistp
test
sub
adc
mov
fwait
dec
xor
mov
cli
push
ret
sub
mov
pop
push
stc
mov
jmp
pop
pop
jecxz
int
out
mov
cmp
and
xchg
ret
mov
out
out
daa
pop
fcmovu
cli
mov
das
(bad)
fisubr
test
jg
inc
sbb
icebp
pop
jmp
fild
add
in
aas
mov
add
push
dec
add
sar
jp
(bad)
mov
scas
lods
sbb
cwde
fisubr
and
in
scas
movntps
leave
fdiv
enter
mov
adc
mov
add
nop
scas
ret
inc
jle
dec
mov
sub
(bad)
das
mov
or
add
jp
sub
dec
jge
scas
ror
inc
js
sti
mov
sub
jne
cmp
pop
sar
call
and
dec
sbb
and
cwde
adc
sbb
bound
dec
pop
push
sbb
leave
xor
push
cmp
repnz
and
repz
fwait
cmp
fistp
sbb
push
ror
test
mov
jg
mov
fist
je
and
movs
and
cmp
inc
imul
or
fidiv
popf
fld
jge
xor
cld
xor
pop
stos
cmp
jg
dec
xchg
loop
arpl
cmp
call
rcr
retf
inc
jecxz
outs
xchg
sti
cmp
cld
adc
les
aaa
(bad)
pop
push
inc
lock
std
lods
and
push
cmp
ss
xchg
or
clc
dec
fnsave
sbb
out
icebp
mov
ins
rcl
adc
test
mov
in
push
loop
cwde
mov
stos
push
test
js
popa
jg
pop
mov
(bad)
fdivr
lahf
pop
pop
cmp
fwait
in
mov
add
ret
adc
mov
xchg
jmp
iret
call
xchg
in
sahf
icebp
dec
sbb
xchg
jbe
stc
sbb
xor
movs
or
fist
mov
outs
pop
fwait
les
cmp
jnp
add
and
push
mov
loop
or
fidivr
out
inc
push
fild
loope
fisub
cli
mov
ficomp
inc
lock
rol
push
mul
les
jg
mov
pop
mov
inc
stos
xchg
jno
out
push
fistp
retf
mov
and
add
aad
fwait
push
jle
ret
mov
dec
pop
jmp
jg
xchg
mov
mov
ror
push
pop
(bad)
in
jns
push
sti
pop
and
jbe
adc
call
enter
push
sbb
inc
jl
in
pop
xlat
push
pop
ficom
or
push
ins
repnz
xor
fldcw
and
ds
mov
jle
push
and
in
mov
sub
push
jg
add
mov
(bad)
jnp
cmc
xor
mov
or
pop
sbb
in
cld
cmps
pop
pusha
call
xorps
fwait
imul
xor
sub
data16
mov
icebp
push
sbb
push
retf
jmp
cld
cmp
(bad)
fldcw
dec
mov
pop
pusha
push
sub
cs
mov
sbb
(bad)
cmp
sti
push
and
ffreep
mov
push
mov
pop
popa
test
inc
aaa
sar
fbstp
sbb
out
dec
shl
or
lea
mov
ret
nop
or
mov
(bad)
iret
jne
cmps
cmc
test
and
or
and
and
xor
popa
fistp
push
movs
mov
pop
das
cli
ins
ret
ret
sbb
shl
js
pop
push
adc
outs
js
mov
ficom
inc
in
daa
mov
out
out
cmp
and
sbb
(bad)
aad
test
sti
dec
xor
jmp
int3
adc
dec
cmps
push
fcomi
hlt
xchg
mov
sub
mov
mov
add
mov
xor
xor
mov
push
pushw
in
sbb
call
sbb
arpl
std
xor
rcl
test
stos
out
pop
xor
stc
xchg
dec
add
and
dec
xchg
es
imul
mov
adc
inc
push
(bad)
dec
fild
call
and
iret
sbb
in
and
push
sub
mov
or
mov
mov
mov
adc
add
dec
call
cmp
sahf
or
push
or
cmp
out
dec
mov
repnz
sbb
adc
add
scas
xor
lar
cwde
ins
(bad)
retf
outs
pop
jno
out
push
ins
mov
mov
outs
xor
fnstcw
js
inc
in
je
leave
push
inc
call
jp
mov
js
mov
aam
jmp
(bad)
adc
dec
push
mov
(bad)
(bad)
cmp
lods
add
ds
stc
push
mov
jae
mov
cmp
add
xchg
xor
mov
mov
sbb
mov
cmp
push
(bad)
xchg
les
sbb
in
sbb
out
mov
out
inc
cli
jno
and
test
cli
add
stos
and
in
dec
cmc
ret
push
das
lds
push
popf
mov
and
aam
jecxz
or
mov
sub
cld
mov
lea
les
in
jp
sti
gs
jl
test
mov
fucomip
pushf
or
jne
(bad)
mov
cdq
lock
sub
mov
pop
mov
dec
jae
outs
dec
(bad)
in
adc
lahf
xor
mov
cs
jge
mov
es
dec
sbb
sub
cmp
fld
sti
shl
xor
pop
add
scas
cmp
xchg
push
pop
push
push
push
mov
jo
into
arpl
xor
dec
mov
jle
loop
push
dec
pushf
dec
and
pusha
sbb
iret
sub
xchg
and
call
addr16
xor
fmulp
imul
or
push
adc
mov
and
fist
xchg
xchg
xchg
pushf
rol
shr
add
daa
aad
pusha
jbe
shl
js
cs
popa
jb
push
stc
cmp
rol
lods
pop
xor
ja
mov
add
or
pop
jo
inc
ror
cmc
out
cmc
movs
jmp
mov
mov
inc
mov
imul
imul
push
mov
sti
mov
retf
inc
pop
cmp
or
(bad)
movs
in
movs
out
cld
xor
js
(bad)
cmp
(bad)
jno
or
sahf
sbb
mov
mov
jns
aad
xchg
ror
sbb
int3
ror
outs
fcom
scas
mov
adc
inc
ja
cmp
ins
xor
and
clc
jbe
aad
das
sar
movs
les
mov
pop
cmp
cmps
mov
sbb
mov
pop
sbb
pop
ret
fidiv
jecxz
push
cmp
mov
sbb
int
test
sbb
je
jle
mov
or
adc
inc
cmp
hlt
les
fbstp
push
in
pop
mov
stos
ret
mov
cmp
test
jne
dec
and
jns
or
out
xchg
hlt
in
jnp
push
jecxz
out
inc
inc
mov
adc
data16
pop
rcr
pop
imul
xchg
les
addr16
gs
xchg
cmp
inc
bound
aaa
xchg
daa
sub
(bad)
xchg
mov
lods
lahf
jmp
sub
or
ror
mov
in
fsub
jbe
jecxz
push
cmps
mov
retf
iret
mov
xchg
push
enter
pusha
in
pop
mov
test
mov
xchg
mov
call
add
add
outs
cld
sub
push
cmps
pop
push
dec
dec
mov
ins
xchg
cmc
rcl
xor
out
leave
sub
cld
movs
nop
aas
pushf
cli
or
mov
sub
dec
cmp
push
or
mov
(bad)
mov
aad
bound
(bad)
pop
dec
rol
mov
cmps
shr
xchg
rol
dec
aam
adc
aaa
and
test
or
xchg
lods
icebp
movs
xor
test
jecxz
pop
fmulp
dec
xor
test
push
mov
cld
pop
aam
sbb
ret
mov
loop
xchg
mov
sub
js
dec
and
mov
inc
stc
sub
sub
imul
pop
mov
gs
xor
mov
hlt
cmp
retf
sub
xchg
idiv
aad
mov
add
rcl
mov
(bad)
xchg
push
cmps
add
and
ds
push
mov
(bad)
mov
hlt
pop
xor
sub
fisub
sbb
pop
jmp
inc
sub
jg
pop
rcr
pop
imul
fwait
ins
(bad)
sbb
inc
fbld
mov
scas
push
aam
adc
dec
mov
ret
adc
mov
popa
jns
imul
mov
mov
stos
mov
lahf
jnp
xor
sub
cmp
mov
outs
mov
xchg
sbb
mov
mov
xor
xor
inc
loopne
jno
ja
add
js
lahf
mov
mov
in
adc
test
in
das
sbb
les
fsubr
sbb
inc
mov
mov
leave
(bad)
pusha
test
fs
popa
loop
and
mov
sbb
dec
rcr
mov
int3
aaa
jno
xchg
add
cli
adc
lods
sti
add
loope
jne
repz
fnstenv
mov
ficom
mov
xchg
(bad)
sar
sti
movs
xchg
add
fwait
dec
xor
adc
aaa
mov
mov
aas
call
add
fistp
das
xor
lahf
lock
jp
(bad)
(bad)
mov
sub
je
jle
mov
pop
mov
out
out
xchg
enter
rol
inc
push
(bad)
sub
fmul
scas
xor
push
pushf
in
int
pop
or
or
(bad)
mov
inc
addr16
jnp
mov
mov
(bad)
int
add
scas
sub
loope
xchg
repz
ret
jle
icebp
iret
sub
in
sti
inc
sbb
push
sahf
adc
mov
cld
aaa
into
sub
(bad)
pop
or
sbb
je
cmp
aaa
push
in
xor
fild
cmps
pop
pop
mov
test
(bad)
jmp
clc
ffree
leave
stos
out
jle
xor
push
add
dec
mov
stc
daa
mov
mov
dec
sub
cmp
addr16
sbb
dec
pop
loop
jle
lock
test
lods
js
pop
(bad)
pusha
mov
jg
lods
xchg
jne
imul
das
(bad)
push
popa
jmp
pop
outs
adc
popf
sbb
mov
or
jmp
cmp
or
add
test
push
iret
or
pop
int
sub
sub
retf
(bad)
cmp
push
push
sahf
xchg
popf
push
leave
in
inc
les
daa
push
rcr
scas
mov
jno
mov
call
xor
and
mov
adc
cmc
inc
pop
retf
jbe
outs
les
pop
out
fisttp
pop
pop
test
imul
pop
pop
push
into
add
movs
cs
clc
pop
data16
fcomp
iret
cmp
adc
pusha
test
ret
inc
push
mov
scas
loop
int
imul
add
adc
repnz
int
add
inc
sbb
cdq
lahf
inc
mov
pop
loopne
mov
sub
push
hlt
jb
push
lahf
repnz
adc
out
int3
fs
xor
cld
jg
inc
xor
mov
pushf
fwait
push
sbb
iret
(bad)
sbb
sub
inc
add
mov
jge
js
cmp
adc
pop
pop
add
push
push
in
fisub
pop
pop
pop
sub
and
std
fsubr
xor
inc
stc
pop
clc
lahf
push
lods
cwde
rol
adc
or
inc
mov
pushf
jecxz
mov
pushf
sub
xchg
or
gs
jno
pushf
outs
cmp
sbb
cmc
add
add
jp
sbb
xor
mov
test
mov
mov
bound
ins
sbb
pusha
repz
out
lods
imul
outs
inc
pop
sub
out
fild
popa
and
jmp
mov
sbb
jo
fild
cmp
scas
fs
xchg
cmp
xchg
jae
ror
sub
and
sbb
push
mov
cli
dec
sahf
(bad)
in
lds
dec
jmp
xchg
pop
and
cmp
sbb
sti
and
(bad)
jecxz
jge
cmp
cmp
pop
call
std
cli
cmp
cmp
xor
adc
inc
xchg
rcr
inc
push
xchg
xchg
scas
mov
mov
inc
fwait
dec
lea
loope
ret
jecxz
outs
and
or
add
mov
mov
gs
loope
xor
xor
das
mov
pushf
inc
outs
popa
in
and
cwde
cmps
cmp
jns
jnp
mov
pop
in
lahf
xchg
out
daa
ins
xchg
pop
daa
jae
not
mov
add
mov
aam
ins
dec
push
fisub
cmps
(bad)
in
dec
or
js
jge
jb
push
mov
adc
mov
add
(bad)
cmps
jae
fnstsw
popfw
in
xchg
enter
jno
out
(bad)
jmp
inc
pop
sahf
xor
sbb
dec
ret
fs
pushf
(bad)
lahf
(bad)
mov
inc
movs
add
mov
fst
add
psrld
and
aas
xchg
stos
sub
add
outs
push
and
retf
call
leave
dec
jbe
enter
xchg
xlat
out
and
push
stos
ja
sbb
add
sub
lock
pushf
or
xor
ret
mov
iret
and
call
fs
mov
mov
jmp
mov
cmp
retf
cmps
test
and
inc
out
jg
movs
add
call
lea
scas
jmp
xchg
scas
mov
push
lds
push
loope
and
inc
jl
(bad)
mov
aad
sbb
aam
cmps
sar
outs
push
test
mov
sti
enter
adc
sub
cmps
jo
int3
jge
es
arpl
fcmovnbe
dec
jmp
inc
cmp
xchg
bound
mov
retf
mov
add
sub
fisubr
mov
xchg
add
xor
dec
mov
inc
xchg
xor
xlat
jle
jmp
in
fst
push
jne
add
in
in
and
jno
sbb
xor
pop
mov
fisub
stc
mov
es
cli
(bad)
ins
(bad)
xor
adc
pushf
int3
sahf
or
push
pop
mov
imul
imul
push
js
push
je
push
dec
retf
pop
pop
test
mov
xor
mov
adc
dec
or
sti
mov
fwait
dec
sbb
inc
ret
ins
or
mov
test
lds
test
push
inc
pop
adc
dec
lock
and
pop
xchg
push
cmp
or
xchg
jno
fcmovnbe
pop
leave
div
fs
and
fucom
mov
xchg
dec
push
dec
push
retf
cmps
movs
mov
cmps
pop
lds
retf
das
jecxz
je
dec
sbb
fwait
cmp
rol
loopne
neg
test
mov
in
mov
push
pop
add
jo
imul
ror
adc
sti
pop
pop
add
iret
adc
push
mul
mov
cmp
pop
xchg
bound
pop
leave
xchg
out
clc
jns
xor
and
stos
cmc
mov
sbb
add
mov
fcomip
popf
shl
(bad)
mov
aad
xchg
pop
adc
pop
int
rcl
xchg
repnz
inc
int
jbe
cmps
data16
push
int
stc
mov
repz
add
out
iret
xor
pop
push
dec
xchg
push
shl
xor
pop
(bad)
mov
and
popa
mov
loopne
and
(bad)
in
fadd
push
imul
test
mov
lock
jo
mov
dec
test
pop
ss
sub
test
push
cmp
inc
xor
xchg
mov
call
in
push
imul
test
arpl
ret
push
enter
jno
in
pop
inc
fistp
test
sbb
mov
es
pop
jnp
loop
xor
push
pushf
imul
lods
push
outs
addr16
test
inc
mov
arpl
sub
test
push
pop
mov
imul
outs
xchg
mov
scas
mov
stos
pop
xchg
ins
inc
mov
or
in
push
ja
mov
sub
aaa
push
adc
inc
test
dec
inc
or
shl
in
and
sti
std
sub
in
mov
pop
and
pop
jb
jo
addr16
sub
cmc
cld
mov
or
ret
popf
mov
std
retf
cdq
aas
fwait
fwait
jle
adc
push
jl
hlt
out
mov
frstor
shr
ja
or
jae
lahf
add
xlat
and
out
in
adc
cwde
push
mov
and
stos
push
xor
inc
or
sub
addr16
push
vminss
fwait
or
xlat
std
mov
and
fdivr
popf
push
or
cmps
and
xor
dec
(bad)
push
dec
daa
int
loop
or
mov
mov
test
data16
sub
push
push
stc
inc
jb
es
mov
or
sbb
fld
cmc
adc
pushf
xor
cwde
xor
jnp
inc
fdivp
push
cs
fnstsw
adc
fld
and
xlat
jae
nop
mov
pop
int3
pop
push
arpl
mov
adc
call
mov
mov
scas
loop
xor
(bad)
repnz
sub
push
fcmovu
xchg
leave
icebp
fs
scas
dec
inc
sub
inc
aam
mov
imul
xor
ins
js
jnp
cmps
nop
pop
js
add
cmps
pop
dec
or
pop
ins
dec
mov
jp
out
mov
push
mov
das
je
jae
sbb
pop
pop
fs
loopne
imul
(bad)
ror
pop
add
outs
das
pop
in
inc
cld
mov
hlt
mov
int3
sti
mov
mov
data16
jp
and
movs
retf
cli
and
jp
sbb
ins
repz
je
push
rcr
retf
cs
dec
stos
jae
aad
repz
dec
mov
dec
push
or
inc
(bad)
out
sub
mov
outs
lds
cmp
xchg
cmps
mov
push
cmps
ins
mov
sbb
test
in
xor
dec
leave
inc
scas
pop
dec
mov
and
popf
sbb
cwde
sar
jl
fdiv
shr
cmp
inc
push
hlt
rol
mov
sub
cmp
iret
scas
push
mov
or
inc
pop
sub
std
and
dec
add
mov
lea
je
inc
das
(bad)
jmp
xchg
out
mov
fs
fs
mov
mov
rol
(bad)
xor
cmps
test
es
ins
mov
cmp
sbb
jle
test
fcomip
out
js
dec
in
aam
scas
and
ja
mov
fnstsw
dec
mov
out
scas
dec
jmp
repz
loop
lahf
shl
gs
add
push
or
dec
inc
dec
jbe
xchg
mov
mul
adc
nop
sub
jle
(bad)
jmp
call
jmp
add
cmps
adc
out
lea
pushf
mov
xchg
dec
adc
adc
jbe
daa
pop
aad
out
and
cmp
pop
adc
xchg
ror
test
add
ins
jle
mov
out
sbb
out
add
push
dec
outs
sahf
xor
mov
mov
push
retf
mov
sbb
jp
das
mov
push
xor
xor
(bad)
pop
mov
leave
in
stos
sahf
jmp
jmp
movs
fcomip
loopne
mov
mov
inc
(bad)
push
clc
adc
aam
retf
cmc
xchg
mov
out
jb
mov
out
mov
pop
cmp
or
retf
mov
lds
cmc
mov
in
(bad)
sub
push
repnz
repz
pop
pop
ret
test
mov
sbb
sbb
mov
ins
mov
pop
in
daa
cmp
mov
pop
dec
imul
shr
and
mov
sub
sar
ror
enter
and
xchg
add
or
jmp
cmp
push
dec
sbb
push
cwde
adc
shl
sbb
cdq
and
sbb
push
push
add
push
push
dec
in
mov
cmc
mov
push
cmp
cmp
inc
fadd
cmps
in
ror
xor
stc
xchg
(bad)
ins
mov
xlat
adc
test
mov
pushf
push
(bad)
test
xor
pusha
fistp
xrelease
or
loopne
mov
outs
add
cld
adc
movs
lea
sbb
add
gs
push
call
pop
xchg
sub
push
mov
jnp
das
xchg
adc
sub
and
or
add
inc
mov
and
stc
jne
lds
loopne
jecxz
dec
cli
call
mov
fld
mov
jns
add
rol
cmps
cmp
pop
movq
mov
jno
cli
sub
or
cld
mov
mov
mov
fdivr
dec
out
ror
xor
or
pushf
pop
mov
cmp
dec
add
push
xchg
inc
dec
call
mov
and
inc
int3
sbb
mov
imul
call
addr16
fistp
jmp
jns
inc
jae
frstor
addr16
mov
adc
outs
sahf
cmps
lds
push
mov
dec
mov
sti
clc
add
aas
jmp
je
in
adc
dec
and
pop
xchg
jnp
not
dec
mov
fldenv
inc
push
add
adc
xor
sbb
cmp
sbb
add
push
std
lods
dec
ror
xchg
pop
in
adc
ss
(bad)
xor
sbb
lods
add
jl
sbb
mov
sub
cdq
adc
xchg
xchg
scas
mov
test
fadd
push
div
inc
adc
mov
pop
xchg
leave
jnp
adc
xor
clc
mov
jle
xchg
adc
add
icebp
lds
push
sbb
mov
fcom
sti
inc
add
lods
cmps
js
cli
cmovb
movs
mov
push
xchg
aas
adc
cdq
pop
(bad)
out
pop
xchg
inc
pop
sbb
xlat
add
repnz
cs
and
or
out
stos
aaa
push
push
pop
ins
into
test
rol
cld
inc
cmp
sbb
inc
dec
add
mov
xlat
xchg
and
adc
and
or
stos
repnz
add
into
jb
ins
jb
out
dec
in
sbb
mov
add
xchg
stos
vmread
inc
xchg
sub
xor
or
loopne
adc
push
jo
daa
dec
dec
mov
xchg
push
je
cmp
or
mov
pop
pusha
outs
sub
dec
dec
inc
cmp
jmp
hlt
retf
push
xor
xor
or
inc
add
sbb
mov
mov
mov
jge
adc
ds
inc
lds
inc
fsub
inc
shr
bnd
out
fidivr
xchg
cmp
xchg
fstp
sub
xor
mov
pop
scas
or
sbb
cdq
and
jmp
dec
sbb
jl
xchg
inc
ret
or
shl
mov
dec
call
fnstcw
xor
loopne
jae
add
and
(bad)
cmp
add
imul
xchg
cmc
jmp
dec
nop
into
pop
sub
jle
xchg
xor
repnz
pop
jbe
sbb
hlt
lds
cmp
xchg
mov
fiadd
adc
stc
mov
xor
push
xchg
push
aam
aam
jge
jmp
mov
cmc
fisub
out
fwait
mov
pop
outs
cdq
adc
xor
int3
mov
sub
ja
icebp
sub
pushf
add
cmp
add
cli
repnz
(bad)
inc
(bad)
mov
xchg
pusha
iret
out
outs
sub
adc
jp
out
and
push
xor
add
mov
pop
bound
xor
adc
cmp
stos
daa
mov
es
or
jns
or
sbb
inc
push
clc
push
out
fist
add
and
dec
sbb
mov
rol
(bad)
in
cli
daa
rcr
out
pop
sub
mov
out
pop
mov
(bad)
xchg
and
inc
movs
es
outs
scas
xchg
dec
add
push
dec
in
jns
add
cmps
sbb
(bad)
out
push
in
outs
inc
jmp
pop
jae
cmp
out
and
pusha
inc
mov
repnz
sbb
mov
iret
je
popf
pop
xchg
add
and
idiv
xlat
sbb
gs
fbld
sbb
cli
sub
lea
iret
push
adc
push
es
inc
stc
jmp
fisubr
push
leave
push
or
mov
add
xchg
mov
sub
popa
je
mov
mov
jbe
sub
dec
xor
push
(bad)
aas
xchg
and
and
shr
xchg
loopne
lahf
inc
movs
jnp
dec
rol
cmp
pop
retf
lds
jl
scas
and
pop
std
repnz
arpl
mov
dec
xor
call
mov
and
mov
xchg
in
lods
xchg
jno
sbb
dec
stc
xor
dec
(bad)
(bad)
jp
jmp
and
mov
push
sbb
sbb
fmul
mov
sti
arpl
sbb
xor
and
fnsave
mov
xchg
mov
call
scas
mov
and
mov
stos
sub
sub
dec
mov
shl
das
sub
scas
push
jle
add
stc
add
lods
aas
popa
mov
les
popf
push
in
(bad)
pop
push
pop
retf
mov
mov
ret
push
call
xchg
cmp
and
mov
cmp
movs
into
movs
push
and
mov
mov
xchg
jno
lahf
(bad)
cmp
arpl
retf
jb
jmp
cmp
jbe
mov
dec
scas
addr16
mov
jno
push
cdq
pop
fdivr
push
add
add
pop
sahf
fdiv
shl
(bad)
pop
mov
iret
mov
loope
and
les
inc
popf
pmullw
addr16
neg
mov
sbb
ins
mov
push
mov
bound
pop
lock
gs
aad
add
jge
into
pop
mov
pop
push
adc
ret
and
les
cmp
mov
cmp
adc
pop
scas
jb
mov
iret
xor
push
stc
test
cwde
clc
daa
inc
cmp
into
(bad)
icebp
(bad)
inc
add
out
retf
nop
je
dec
mov
jl
pop
push
cmp
(bad)
add
pop
xlat
clc
inc
fbld
je
sub
inc
loopne
ror
xchg
inc
rcr
sti
arpl
and
jne
jl
and
jno
js
cdq
xchg
hlt
sbb
jge
enter
jnp
ror
pop
lods
rcl
std
sahf
scas
xor
mov
ins
(bad)
cmps
pop
and
mov
sbb
and
out
mov
adc
inc
mov
inc
scas
retf
mov
icebp
adc
idiv
push
test
inc
add
call
popf
lods
jg
outs
scas
and
xchg
(bad)
iretw
aas
dec
sub
mov
push
xchg
xor
popf
add
pop
mov
jae
mov
clc
cmp
or
popf
inc
cmp
pop
xor
fs
mov
sbb
cmp
pop
adc
mov
fs
sbb
(bad)
ja
sbb
push
add
push
cmp
punpckhbw
(bad)
arpl
sti
(bad)
je
rcl
enter
rol
test
pop
sub
sbb
sub
repnz
movs
push
popa
hlt
test
mov
stos
int3
mov
fmul
push
stc
aas
je
inc
jmp
dec
cs
movs
cmps
pop
shr
lahf
into
sbb
cmp
iret
(bad)
fdivr
inc
mov
lods
not
pop
out
jp
fwait
xlat
push
int
je
fdivr
imul
(bad)
pop
rcr
push
imul
adc
loopne
popf
or
sub
jno
pop
inc
inc
outs
arpl
(bad)
aad
retf
xor
int3
mov
in
sbb
add
scas
popa
hlt
movs
xchg
mov
jns
mov
fsubr
push
fnstenv
test
cld
mov
js
dec
loop
cmp
mov
jno
leave
in
retf
bound
and
xor
pop
pop
jmp
jo
mov
(bad)
xchg
add
fwait
call
and
(bad)
pop
xchg
xor
jmp
jp
popa
push
push
sbb
daa
pop
mov
ror
dec
je
pop
int3
xchg
sbb
aas
sub
aam
fcom
daa
iret
adc
mov
sub
mov
push
add
pop
xchg
fldcw
push
out
xor
lds
outs
adc
in
mov
push
add
pushf
lods
pop
into
and
add
repz
and
dec
cmps
stos
jmp
adc
jle
arpl
out
(bad)
ja
push
into
ss
mov
sub
add
fstp
in
cs
out
lea
mov
or
mov
test
call
push
jl
fsub
push
pop
cmp
in
pusha
repnz
sbb
nop
push
mov
loop
mov
imul
jb
mul
fldpi
dec
fistp
jb
adc
adc
aam
(bad)
(bad)
cmp
sbb
psllq
je
xchg
sub
or
dec
sbb
call
inc
pop
ret
mov
leave
ds
jae
cmp
add
imul
xchg
add
bound
movs
push
mov
stc
push
and
add
nop
xchg
mov
mov
retf
xor
clc
pop
pop
add
stos
mov
cli
add
pop
lods
jbe
out
cmc
push
push
jl
aam
mov
mov
sub
inc
scas
sub
lock
push
out
popa
xor
jmp
js
rcl
fist
pop
mov
mov
pop
rcr
popa
dec
test
imul
jmp
pusha
mov
scas
jmp
xor
jle
pop
in
or
adc
dec
scas
ja
cmp
mov
mov
(bad)
jp
or
xchg
stos
push
and
and
mov
jecxz
repz
mov
cld
out
lds
xchg
xchg
nop
jne
cwde
or
push
nop
sub
test
mov
jge
mov
pop
adc
test
movs
test
jle
mul
inc
mov
adc
retf
sbb
fwait
(bad)
rcr
pop
xchg
inc
dec
inc
ss
and
pop
mov
sahf
jmp
dec
fld
jle
iret
jl
cld
ds
arpl
pop
push
movs
cmp
(bad)
hlt
jns
loopne
jmp
ins
out
sbb
push
outs
gs
sbb
(bad)
xchg
mov
arpl
pop
jae
xor
loope
mov
aad
dec
ret
dec
cmp
sbb
popf
or
loopne
sub
dec
xor
jecxz
stos
iret
lea
push
jle
pop
push
sar
out
scas
out
sbb
cmp
aaa
leave
or
ins
fcmovnb
push
or
test
or
jmp
stos
cmc
mov
(bad)
repz
(bad)
fsubrp
daa
mov
outs
sahf
scas
inc
sub
xor
xchg
out
mov
lock
bound
push
aad
pop
pop
pslld
pop
pop
test
jne
aam
aas
enter
cmp
loope
loope
jmp
fs
inc
adc
or
mov
fs
xchg
pop
into
add
mov
mov
lahf
fwait
sahf
test
adc
adc
movs
out
cmp
je
das
sbb
sbb
sub
inc
or
and
leave
rol
retf
shr
push
fwait
popf
inc
pusha
int
jmp
repz
push
mov
sti
cmp
(bad)
sbb
jmp
loop
test
lea
test
push
fldcw
imul
push
test
psrlw
call
aas
xor
sub
mov
inc
dec
adc
in
add
and
or
xor
and
aam
ins
outs
adc
or
cld
sbb
push
mov
adc
mov
dec
inc
or
dec
xor
(bad)
ss
ja
ret
push
fsub
stos
push
mov
mov
jge
mov
add
fidivr
ret
xchg
call
ins
or
cmp
clc
js
dec
out
xor
mov
push
(bad)
mov
cmp
stos
cmp
xor
cmp
les
fwait
xor
repz
jmp
rcr
rdseed
shl
fisub
push
pop
cmps
(bad)
pop
dec
jmp
imul
sar
inc
sahf
retf
dec
push
clc
icebp
xlat
cmp
cmp
inc
or
mov
jecxz
cmp
pop
(bad)
fdiv
repz
pusha
push
push
jl
inc
xchg
pop
mov
xchg
arpl
pop
sub
mov
ret
xor
fdiv
jo
cmc
fwait
je
cmp
test
mov
loope
inc
mov
adc
xor
fsub
(bad)
mov
leave
jbe
sub
push
push
mov
test
js
iret
adc
xchg
ins
sub
and
push
outs
(bad)
pushf
scas
(bad)
rcl
or
out
sbb
pop
ins
loope
xor
pop
inc
mov
lds
je
div
ins
in
das
mov
mul
push
in
cmps
add
adc
xchg
or
adc
inc
les
jmp
neg
mov
sar
cmps
js
jns
das
repnz
adc
mov
div
(bad)
jp
js
and
repz
adc
sbb
jae
test
call
add
icebp
lods
push
mov
xor
je
hlt
push
not
push
icebp
cld
push
jo
ror
mov
pop
sar
arpl
jo
sub
cmps
ret
test
jb
xor
xchg
dec
sub
mov
or
(bad)
jns
scas
and
out
xchg
cmps
adc
jl
leave
push
addr16
call
ficomp
lods
push
fisubr
lock
xor
add
imul
in
aaa
jns
sti
inc
(bad)
outs
dec
bound
lds
popf
mov
jge
aaa
xchg
cli
in
imul
popf
es
adc
(bad)
push
mov
das
pop
mov
add
fucomp
sbb
jmp
lods
outs
fsub
xchg
rol
inc
iret
adc
pushf
cs
bsf
inc
pop
out
adc
jb
cwde
lahf
enter
inc
mov
fdivr
mov
cmp
sub
int
inc
fs
inc
call
(bad)
stos
ins
or
nop
(bad)
xor
retf
lds
cmp
call
and
xor
xor
pop
out
dec
ror
(bad)
(bad)
cmp
icebp
push
lods
imul
out
in
out
adc
imul
cmp
jno
ret
mov
mov
push
add
jmp
or
pop
ss
xor
cld
mov
mov
pop
inc
jae
retf
scas
call
mov
es
call
add
scas
sub
sbb
fstp
add
std
jp
stc
lahf
and
call
or
or
dec
cmp
je
cmp
loop
cmp
sar
xor
rol
inc
inc
xchg
cdq
repnz
aas
push
cmp
(bad)
pushf
xor
outs
mov
xor
or
gs
sbb
inc
xlat
popf
popf
mov
mov
pop
out
sbb
inc
xor
cmc
nop
stc
jbe
and
repnz
loopne
mov
nop
jecxz
mov
scas
call
inc
and
out
sub
jl
fwait
jle
xchg
jmp
call
dec
test
and
retf
cmps
cmc
in
fs
pop
stos
rcr
sub
js
in
add
icebp
dec
lods
or
xrelease
lds
mov
cmp
xor
sar
sbb
movs
push
mov
sub
mov
xchg
(bad)
ja
jl
and
pop
xchg
iret
into
and
push
mov
and
scas
sbb
sar
das
xchg
mov
(bad)
mov
imul
sbb
xor
jle
sub
bound
fcom
pop
sbb
adc
std
jge
add
dec
xchg
int3
dec
retf
out
jg
shr
dec
inc
dec
mov
sub
xlat
fisttp
pusha
adc
push
test
or
mov
push
push
mov
mov
xchg
out
xor
mov
int
pop
fisttp
pop
jmp
daa
pop
daa
adc
inc
aas
adc
mov
(bad)
test
movs
xchg
pop
cmp
mov
in
fcmovb
sbb
popf
mov
scas
or
ss
sub
test
xor
xor
or
xor
icebp
fsubrp
test
fdiv
mov
jmp
mov
sub
div
mov
or
cli
or
call
push
sbb
jmp
or
nop
nop
xlat
in
or
dec
test
loop
lea
xor
dec
pushf
and
and
popf
or
addr16
arpl
inc
test
hlt
jp
ret
imul
cmp
dec
js
mov
lock
adc
loope
dec
sar
repz
addr16
jnp
mov
and
dec
in
lock
mov
xor
pop
ss
outs
mov
inc
adc
fimul
stos
mov
stos
and
mov
mov
jbe
fld
dec
pop
mov
pop
push
sbb
dec
and
push
fs
ja
sbb
sub
mov
imul
js
pop
inc
mov
xchg
and
mov
sub
adc
inc
std
std
push
mov
dec
int3
pop
retf
imul
scas
clc
adc
je
outs
mov
je
mov
cmp
stos
mov
call
push
movs
cmp
dec
into
add
rcl
(bad)
mov
push
jo
add
xor
add
or
out
(bad)
inc
mov
dec
in
jno
mov
loope
pusha
adc
and
cwde
push
into
push
pop
dec
fs
cmp
dec
xor
add
jp
xor
sti
rcr
sbb
fild
pop
adc
(bad)
addr16
mov
fbstp
xchg
jo
shl
rol
scas
jl
push
jae
jge
sub
xor
in
scas
jg
call
xor
jl
or
xchg
sbb
xchg
xor
repz
push
cli
jo
movs
jecxz
jmp
xor
jecxz
inc
cmp
or
jnp
add
in
repnz
and
sub
ret
mov
adc
ret
xlat
rcr
je
call
xchg
mov
mov
adc
jbe
aad
jno
das
cmp
lds
pop
sub
pop
jge
or
popf
adc
loop
push
add
iretw
repz
cmp
xchg
cmp
call
jns
inc
in
jae
adc
fst
shl
(bad)
repnz
push
(bad)
adc
scas
jmp
xor
bound
out
or
mov
pop
xchg
dec
xchg
and
sbb
aaa
es
jmp
xchg
mov
adc
stc
sahf
call
xchg
sub
lods
cmp
or
retf
retf
mov
sub
dec
xchg
and
jp
in
xor
fcomp
dec
add
mov
rcr
call
xchg
pop
fsub
xor
mov
inc
icebp
std
div
dec
mov
pop
js
mov
shr
jg
push
scas
cmp
popf
jge
addr16
call
int3
inc
jecxz
test
push
jo
sub
lea
or
outs
pop
mov
mov
inc
push
pop
or
mov
xchg
es
mov
outs
repnz
jmp
xor
imul
mov
xor
pop
mov
imul
push
push
cmps
jp
test
push
adc
pop
out
cmp
mov
cmovge
(bad)
dec
retf
enter
jp
cdq
jg
adc
inc
mov
stc
mov
pop
nop
jbe
dec
pop
and
outs
call
addr16
loopne
cli
sbb
lds
jle
ret
dec
mov
rcl
out
mov
jb
pop
mov
jne
icebp
ror
xor
mov
inc
shl
out
mov
mov
jp
data16
lahf
jle
jb
pop
fwait
adc
ror
adc
and
loope
fwait
jp
das
jmp
sbb
mov
mov
jp
ret
ret
xor
mul
test
xchg
retf
fs
(bad)
lods
push
repz
(bad)
loopne
(bad)
outs
imul
xor
(bad)
mov
pusha
cmp
and
les
push
cli
fdiv
pushf
aaa
outs
mov
cdq
call
jae
push
adc
mov
repnz
adc
xor
cmp
jecxz
lods
jp
push
dec
push
jge
test
mov
mov
jae
in
int3
outs
mov
aaa
mov
stos
(bad)
into
(bad)
push
hlt
loop
xor
leave
xchg
or
sbb
or
aas
jmp
dec
sbb
and
jae
sub
fisubr
xchg
sahf
lock
les
dec
js
in
mov
pushf
addr16
addr16
cmp
sub
lds
add
cmp
cwde
cmp
imul
ror
addr16
daa
sbb
cwde
push
sbb
test
movs
xchg
mov
add
push
push
jae
cmp
cmp
jp
test
push
mov
std
pop
(bad)
popf
shr
leave
inc
mov
cmp
cmp
pop
xor
sahf
cmp
xchg
mov
retf
jmp
mov
in
loop
adc
sbb
into
mov
test
pop
lea
or
popf
cmp
cs
push
pop
add
push
xchg
int
int
lock
fsub
(bad)
mov
gs
(bad)
call
sub
(bad)
loopne
and
mov
push
fscale
push
xor
add
test
add
(bad)
sbb
sbb
int
fimul
lock
scas
jmp
sbb
xor
inc
add
mov
mov
cmps
cmp
outs
lock
xor
fbstp
je
(bad)
sti
inc
adc
(bad)
fs
and
jp
cmp
rcr
popa
jl
mov
xchg
and
das
xor
in
sub
add
jno
ret
xchg
lahf
(bad)
lock
push
shl
(bad)
xchg
mov
adc
lea
xlat
inc
push
mov
jne
call
or
ror
sbb
xor
mov
out
push
mov
inc
inc
jb
mov
popa
ins
fs
sub
mov
popf
aam
sahf
int3
dec
push
mov
fnstsw
xchg
xor
sbb
in
fcom
shr
mov
sbb
ror
dec
xor
xor
data16
jne
jle
fs
cld
cmps
mov
(bad)
outs
push
xchg
adc
or
ss
mov
pop
or
inc
xchg
dec
(bad)
in
jecxz
cmps
push
rep
xlat
dec
xchg
xor
xor
int3
xor
pop
fisttp
add
jecxz
add
jle
and
sub
dec
in
sub
jle
mov
push
mov
fsub
mov
xchg
cmp
or
xlat
stos
inc
pop
mov
dec
cmps
call
or
sbb
call
adc
jno
sub
dec
push
aaa
dec
retf
or
cmps
xchg
mov
push
in
lock
test
je
cmp
addr16
pop
push
repz
sub
and
or
mov
jns
push
leave
mov
popf
je
loope
jmp
div
(bad)
dec
and
adc
jp
push
mov
sub
xlat
(bad)
(bad)
or
jge
popf
loop
xchg
stos
jbe
neg
xor
mov
add
fsubr
or
inc
imul
les
outs
retf
jne
hlt
mov
repnz
aad
cmp
test
pop
ja
sub
adc
mov
mov
fmul
dec
bnd
push
inc
and
cmp
fcmove
or
inc
movs
add
inc
cmp
stc
mov
je
loope
or
jbe
pop
jg
jbe
or
and
popa
mov
iret
jbe
mov
xchg
pop
out
retf
cli
sub
xchg
xor
call
inc
bound
test
arpl
test
cmp
clc
cmp
retf
call
in
jle
cmp
daa
(bad)
and
mov
popa
mov
push
xchg
lahf
xor
inc
popa
and
retf
sbb
sbb
mov
mov
ret
xchg
(bad)
mov
in
and
add
mov
push
in
imul
xchg
mov
repz
(bad)
mov
enter
mov
jle
jp
nop
mov
cmp
jne
lahf
sub
cmp
mov
pop
or
push
and
sub
and
(bad)
lahf
ds
clc
mov
dec
scas
jmp
imul
jg
jp
fbstp
sti
mov
retf
jl
jecxz
mov
cs
lock
pop
out
inc
fidivr
cmps
lods
clc
je
nop
fwait
mov
outs
sbb
mov
xchg
out
jmp
and
fcmovnb
xor
xor
xor
sub
jecxz
loopne
aam
je
mov
push
sahf
fild
fimul
fild
popa
pop
dec
arpl
jl
lds
push
jne
fistp
test
mov
lods
push
inc
jbe
and
xchg
cmc
adc
mov
std
and
jno
adc
pop
push
imul
pop
loope
mov
xlat
popa
ds
out
jmp
or
test
or
mov
adc
sbb
repnz
rcl
mov
aam
imul
js
test
or
leave
in
movs
sub
adc
addr16
jmp
xchg
jo
out
or
fs
ins
mov
fwait
sub
sub
sbb
sub
daa
mov
ja
(bad)
cdq
into
ret
xchg
(bad)
mov
retf
sahf
inc
std
mov
push
dec
sub
shl
movs
sahf
adc
push
popf
dec
retfw
xchg
stc
pop
cwde
daa
sti
ret
cld
pop
mov
xor
cmp
fisttp
add
jmp
pusha
push
imul
and
push
or
push
aaa
fmul
jne
fsub
fldcw
jae
js
test
call
lea
or
fs
jo
pop
es
mov
pop
jle
iret
xchg
pop
or
cs
addr16
rol
dec
push
sub
lahf
ret
popf
jno
aas
test
loop
mov
jmp
mov
psllw
stos
test
lahf
leave
mov
cmp
and
add
repz
outs
push
push
jo
loopne
mov
push
lea
dec
xor
push
fidiv
sub
clc
pop
mov
or
and
mov
push
iret
sbb
sub
adc
push
mov
dec
jne
lods
pop
xchg
sub
imul
dec
clc
retf
add
movs
popf
jecxz
jmp
arpl
hlt
push
mov
mov
mov
cmp
cli
retf
mov
mov
hlt
(bad)
dec
push
xchg
sbb
out
pop
mov
adc
inc
mov
les
ja
push
ds
pop
rcr
xchg
jp
call
pop
mov
push
lahf
sbb
jge
sti
inc
jecxz
or
xchg
push
into
lds
call
popa
and
cs
xchg
inc
jl
xchg
xor
out
jge
sub
xor
mov
jb
iret
(bad)
push
jge
(bad)
les
jp
ds
mov
lahf
xchg
inc
sub
(bad)
or
dec
xchg
in
int
cmp
(bad)
xchg
stos
cmp
push
xchg
sub
scas
xchg
cdq
jno
test
pop
inc
mov
fwait
inc
adc
sbb
mov
pop
add
aam
xchg
mov
jp
mov
or
or
loope
xchg
in
loopne
sub
xchg
jg
lods
pop
fnstsw
pop
pop
jno
cmp
fwait
or
js
mov
pop
sub
(bad)
in
adc
dec
sbb
or
xlat
adc
les
daa
mov
or
and
and
jle
inc
ret
pop
cmc
fild
lock
xor
sbb
dec
and
retf
dec
jge
ds
mov
xor
movs
enter
aam
es
addps
(bad)
stc
adc
xchg
or
leave
adc
push
add
mov
inc
call
jbe
cmps
in
in
adc
lods
xor
push
xchg
icebp
(bad)
pusha
xor
inc
aaa
addr16
sub
pop
loope
ret
xchg
jnp
repz
cli
sbb
stc
in
mov
sbb
outs
pmullw
stc
es
and
jl
out
scas
or
mov
aas
int
neg
daa
hlt
fistp
push
fs
mov
xchg
jae
jae
jecxz
xchg
hlt
sub
add
mov
gs
add
xor
jp
xlat
stc
lods
mov
in
push
mov
arpl
mov
push
mov
mov
add
sar
jmp
push
js
fs
jb
sti
lods
dec
lods
inc
test
test
sub
fadd
ror
movs
push
mov
test
cmp
(bad)
mov
ret
shl
mov
movs
test
aas
or
inc
push
out
neg
fst
and
stos
pop
int3
mov
push
add
les
(bad)
fsubrp
jg
sub
ss
je
(bad)
outs
(bad)
stc
pop
stc
retf
(bad)
ja
sbb
cs
adc
fcmovu
mov
mov
lss
cmps
ret
out
sbb
or
mov
ss
mov
inc
mov
inc
int
aad
mov
sbb
add
jo
push
stos
inc
pop
daa
xchg
mov
dec
cmp
lldt
addr16
(bad)
cmp
loope
repz
sbb
xchg
mov
fimul
out
aaa
xchg
movs
mov
jae
sub
out
sbb
aam
push
lods
jnp
test
(bad)
mov
push
sub
jae
dec
inc
stos
jl
loop
retf
cmp
nop
cmc
mov
sbb
lds
dec
mov
xor
test
mov
out
sbb
mov
sahf
arpl
add
aad
push
dec
movs
push
push
pop
dec
adc
mov
push
sbb
add
ja
in
loope
in
lock
data16
inc
and
push
xor
shl
scas
or
cwde
push
mov
je
je
mov
call
pusha
sub
mov
pop
push
push
pop
movs
sub
movs
loop
out
mov
inc
mov
mov
xor
inc
rcr
inc
or
add
cld
sbb
(bad)
imul
push
mov
loope
xchg
cmp
mov
fcmovnu
add
les
sahf
retf
sar
jo
jmp
push
xchg
ficom
or
jle
xor
fcom
in
xchg
aam
scas
iret
pop
sub
sti
mov
xchg
and
push
(bad)
test
mov
stos
adc
mov
cmp
scas
mov
xor
aam
mov
popf
and
pop
adc
retf
vmovdqa
sti
ror
rcr
movs
fwait
pop
mov
ror
call
fbld
push
movs
jbe
dec
inc
xor
mov
in
in
jne
jns
and
pop
ret
pusha
mov
mov
adc
cmp
das
mov
sub
pop
rcl
mov
cmc
add
(bad)
jp
xor
add
jmp
mov
xor
jb
add
inc
add
(bad)
dec
rcl
cmps
cdq
iret
adc
out
movs
iret
adc
cmp
scas
stos
push
out
adc
add
fisubr
ins
xlat
pop
cmps
popa
enter
and
int
imul
pop
cmp
adc
jo
xor
push
or
mul
add
fmul
jge
mov
cmp
mov
loope
adc
test
push
scas
(bad)
ss
mov
jmp
xlat
pop
adc
adc
cmp
shl
shl
loop
rsqrtps
test
rcl
mov
(bad)
loop
cmp
cwde
aad
icebp
and
adc
xor
data16
scas
dec
xor
call
cwde
inc
pop
sbb
jb
pop
int
adc
test
sbb
mov
call
test
popa
fdiv
pop
out
mov
xchg
addr16
out
shr
pop
data16
xor
adc
adc
xchg
pop
and
mov
push
aad
mov
pusha
int
fimul
push
(bad)
jmp
mov
xchg
cmp
xchg
and
(bad)
fucomip
dec
push
sub
rcl
dec
add
js
jbe
jb
mov
push
(bad)
sahf
clc
pop
repz
jle
movs
inc
and
hlt
std
fldcw
push
sbb
mov
lahf
push
sbb
xchg
adc
add
iret
mov
jns
popf
mov
mov
pop
stos
mov
or
xor
mov
pop
ror
shl
mov
jo
cmp
call
pop
movs
data16
xchg
xlat
adc
xchg
push
mov
add
cmp
jns
seta
cmp
dec
clc
mov
mov
cwde
pusha
push
or
push
or
ret
or
lock
loope
cmps
push
leave
and
add
lock
adc
call
dec
push
nop
in
test
fs
popf
call
es
fsubr
ins
mov
outs
daa
bnd
xlat
shl
fstp
add
(bad)
jmp
outs
push
mov
aas
xlat
(bad)
pop
into
add
or
cs
aam
pop
mov
fcomp
int
hlt
mov
cmp
stc
aaa
data16
ror
jecxz
aam
int3
outs
out
sub
xchg
fld
retf
sbb
and
and
add
add
(bad)
mov
and
cs
mov
jbe
sub
imul
aas
adc
int3
gs
fisubr
inc
fiadd
mov
mov
loopne
mov
sbb
push
pop
push
rol
dec
push
adc
mov
fdivr
fninit
imul
mov
xlat
fldcw
int
(bad)
aas
fist
jns
mov
push
mov
sub
jns
out
cdq
ss
sbb
xchg
xlat
(bad)
jmp
hlt
or
adc
repz
call
and
in
cdq
ja
nop
cmp
shl
mov
loop
mov
movs
sahf
cdq
sub
jae
lock
add
mov
pop
test
iret
call
fstp
jecxz
xchg
cmp
popa
add
out
ds
sti
in
cmps
iret
aaa
jne
push
dec
ror
xchg
push
fisub
xor
sahf
jnp
in
xor
xchg
dec
jmp
dec
enter
ror
stc
push
lods
scas
xchg
sahf
cmp
(bad)
cmc
out
std
loop
clc
(bad)
jae
mov
fwait
sub
arpl
icebp
lahf
stos
or
push
pop
adc
movs
and
rcl
dec
jne
xor
test
mov
push
inc
test
fdivr
call
xchg
sub
xor
scas
bound
pop
mov
leave
mov
dec
pop
pushf
fistp
mov
sbb
mov
sbb
cld
aaa
pop
push
sub
push
jg
dec
jb
pop
sbb
idiv
sub
popa
ds
lods
xchg
cmp
sbb
and
xlat
pop
popa
bound
ds
sbb
mov
or
ds
ret
sbb
mov
xor
jae
cmps
sub
mov
gs
in
outs
adc
sbb
data16
rcl
mov
call
idiv
pop
in
mov
mov
push
sti
fmulp
push
pop
sub
sub
mov
aad
nop
add
pop
pop
ret
mov
out
xchg
or
push
sub
arpl
mov
pop
into
push
pop
pop
repnz
jecxz
sbb
sub
adc
jno
ds
and
ins
push
inc
scas
retf
and
cmp
test
cmp
out
cld
aas
xchg
xchg
mov
adc
dec
and
ret
mov
sub
fiadd
mov
sub
out
xchg
aad
retf
and
inc
cwde
mov
push
cld
xchg
xor
pushf
movs
sti
imul
sti
sbb
mov
int3
call
xchg
add
es
jno
(bad)
xlat
xor
push
push
outs
mov
shr
inc
sbb
std
sti
pop
jl
icebp
push
ins
sbb
jae
sbb
jp
stos
scas
jne
dec
into
push
sar
ror
shr
mov
retf
pop
retf
popf
xchg
aaa
adc
inc
cmps
pop
push
test
call
addr16
pop
shld
out
stc
cmc
test
in
pop
dec
pop
push
xor
std
jno
rcl
(bad)
nop
mov
lahf
test
clc
cli
mov
dec
sbb
dec
xchg
sub
and
xchg
inc
xor
push
sub
div
nop
cmp
lea
xchg
cdq
pop
push
adc
in
and
add
rcr
or
push
cmp
ds
ret
addr16
add
or
jp
xchg
pop
add
or
dec
in
das
std
sbb
and
lock
push
retf
pop
inc
loopne
ins
add
pop
(bad)
add
cmp
mov
xlat
pop
push
pop
add
pop
loop
sbb
aad
mov
ret
(bad)
pop
or
clc
xchg
arpl
clc
ficomp
xchg
mov
enter
xlat
mov
push
inc
clc
sar
rol
lock
or
cmps
loopne
and
xchg
jnp
es
jmp
jae
mov
inc
cmp
repnz
out
sub
xchg
cmp
mov
lahf
sub
xor
xor
shl
arpl
fldenv
loope
push
es
dec
bound
sbb
scas
pushf
iret
or
jmp
mov
call
xor
xchg
(bad)
dec
cmps
and
xchg
and
retf
push
lds
inc
fdivr
aam
mul
cmp
aas
and
pushf
ds
repz
mov
data16
inc
or
sbb
fsub
aaa
pop
sbb
and
lahf
mov
push
out
ins
push
test
sbb
jecxz
cmp
repz
mov
adc
aam
jge
dec
xchg
test
xor
ror
out
fdiv
out
or
call
nop
dec
mov
xor
iret
in
mov
test
imul
jno
cs
lods
loop
lea
jmp
push
xchg
jo
adc
(bad)
cmps
fsub
sub
cmp
bound
xor
dec
or
mov
nop
fldenv
test
cmp
xlat
cdq
ja
mov
mov
inc
hlt
int
les
rol
leave
adc
mov
sbb
xor
dec
jp
sar
daa
rcl
(bad)
int
sub
daa
sub
mov
push
mov
data16
ret
stc
sbb
xchg
cwde
pop
iret
mov
stos
dec
dec
sub
cld
or
pop
mov
and
jge
inc
aam
or
movs
aam
cmps
pop
ds
div
jo
pop
mov
inc
test
and
add
cmc
mov
imul
enter
or
bound
into
inc
dec
jmp
scas
cmp
pop
fsub
push
aas
inc
mov
adc
leave
sbb
(bad)
jbe
in
cli
xor
popf
je
ret
ret
sub
adc
cmp
inc
pop
mov
jmp
enter
push
sbb
hlt
add
repnz
es
sar
(bad)
lods
ja
aad
dec
dec
mov
dec
xchg
hlt
clc
pop
ja
jbe
jne
mov
pop
test
and
lahf
mov
cmps
push
mov
pop
lds
ss
lahf
cmp
xchg
shl
pop
cs
into
pop
clc
dec
jb
dec
sub
xchg
setnp
mov
push
adc
add
push
push
jmp
and
daa
dec
xor
sbb
pop
(bad)
sub
cs
push
push
gs
add
xchg
lock
scas
push
inc
shl
push
jbe
nop
hlt
ds
xor
clc
dec
mov
pop
js
rcr
cmp
fbld
pop
mov
and
inc
cmp
es
xchg
cmp
push
add
sahf
cmp
sub
push
dec
add
dec
cmp
fxch
ror
lahf
or
jns
ret
cmp
imul
push
std
scas
mov
ret
jbe
iret
push
mov
dec
adc
(bad)
(bad)
loopne
(bad)
xchg
mov
and
ss
repnz
push
das
and
ficom
jb
add
js
fistp
sar
call
mov
pop
imul
stos
dec
in
cld
mov
xchg
or
add
jle
ret
sbb
das
inc
xchg
adc
in
addr16
xchg
adc
pop
mov
call
sbb
shl
push
ds
fmul
xchg
or
jmp
mov
hlt
iret
fcomip
pop
popf
sub
mov
jns
int
push
add
fdiv
cmp
inc
shr
and
aad
iret
inc
lahf
sbb
mov
call
or
mov
push
pop
xchg
add
jl
add
(bad)
xor
and
pop
or
mov
fwait
xor
hlt
sub
into
lea
fs
es
in
fs
in
push
jp
cdq
and
inc
sub
add
and
(bad)
cmp
pop
cmps
icebp
push
popf
jecxz
mov
and
cmc
fldcw
sub
dec
pop
and
adc
push
xchg
xchg
cmp
add
cmp
out
xor
inc
xchg
cmp
sbb
int3
pop
test
mov
cli
jbe
cmp
push
sti
adc
imul
mov
in
jb
xor
les
scas
ds
mov
jns
fwait
aam
xor
hlt
xchg
sub
lods
sub
xchg
fimul
ror
sbb
lahf
sbb
dec
dec
(bad)
xchg
cmps
adc
push
pop
mov
jge
scas
cmp
mov
out
scas
retf
mov
arpl
mov
adc
je
xchg
inc
jge
xchg
jae
push
int
add
ins
mov
fild
into
cmps
ins
mov
or
mov
jp
adc
sbb
ss
push
push
out
inc
movs
mov
push
cli
jo
pusha
mov
cmp
push
int3
enter
sbb
inc
test
(bad)
mov
lahf
jae
scas
daa
shl
pop
mov
cmp
in
das
adc
cmc
leave
out
adc
pop
dec
sbb
mov
mov
out
cmp
sub
loop
fsub
sbb
pop
mov
test
shl
or
or
mov
cmp
scas
jns
fcmovne
push
xchg
adc
mov
mov
xor
push
faddp
xlat
pop
nop
pushf
mov
cmp
push
cdq
in
test
fsubr
les
imul
push
adc
adc
enter
add
cs
jp
test
jecxz
sub
mov
adc
or
cmps
jae
scas
jae
or
das
retf
(bad)
fnstcw
adc
test
or
jmp
fld
pop
jle
je
add
inc
ret
aas
dec
and
mov
jns
pop
(bad)
test
es
(bad)
cmps
rol
mov
inc
fild
push
add
pop
dec
das
xchg
gs
cld
jnp
mov
inc
popa
iret
sbb
xor
rol
jno
mov
add
jmp
xor
aad
jp
xor
push
sub
out
pop
mov
loope
(bad)
icebp
or
dec
dec
mov
arpl
cmps
jno
push
jns
popf
fs
into
xor
push
out
loop
dec
test
cmc
jne
sub
xchg
mov
fwait
mov
mov
and
stc
inc
imul
les
xor
jecxz
inc
xchg
jle
outs
xchg
rcl
dec
sbb
jno
inc
xchg
imul
(bad)
cmc
mov
dec
int3
in
xlat
test
and
xchg
scas
iret
add
or
loop
mov
mov
std
mov
pop
mov
jnp
nop
sbb
pusha
ja
dec
les
das
mov
pop
cs
inc
pop
(bad)
jp
sbb
sahf
lods
mov
fisttp
xchg
add
shr
push
les
mov
out
cmp
sbb
clc
pop
addr16
lock
out
cmps
jg
pop
jle
mov
cmps
mov
jmp
jge
sub
inc
push
pop
jne
xlat
daa
sub
pop
inc
pop
push
lahf
bound
mov
inc
jb
or
imul
mov
sti
push
lds
shr
rcr
add
ret
xchg
nop
sbb
scas
ins
daa
jb
jb
call
pop
inc
inc
addr16
lock
cs
mov
enter
push
dec
idiv
pop
test
pop
cli
push
data16
rol
add
mov
pusha
xchg
xchg
mov
jmp
lods
adc
test
and
cs
xor
mov
and
mov
push
inc
or
pop
popf
mov
push
sahf
sbb
xchg
in
in
inc
inc
ret
cdq
fsub
popa
rcr
lea
add
es
jmp
dec
lahf
sub
(bad)
int3
xlat
mov
inc
cmps
pop
sub
mov
push
push
stos
das
jmp
fild
mov
xor
hlt
nop
fstp
push
dec
xchg
jb
xchg
pop
mov
and
loop
or
inc
sti
rol
mov
xor
push
int3
dec
mov
sbb
scas
scas
neg
adc
or
mov
scas
lods
stos
dec
sub
rol
pop
sbb
data16
call
jae
xchg
mov
or
das
bnd
push
imul
ret
push
out
ins
jne
out
xchg
push
inc
xchg
pop
ja
je
push
sbb
mov
mov
mov
mov
xchg
pop
xchg
(bad)
je
jae
jne
out
dec
in
ret
mov
mov
pop
push
shr
aas
and
and
nop
sar
jle
subps
jge
lock
xchg
sbb
popa
pop
cmp
sub
js
xor
fcmovu
mov
push
int
mov
cld
pop
jbe
cmp
popf
(bad)
jne
jmp
push
inc
adc
mov
popw
xor
inc
xor
addr16
test
and
xchg
xor
mov
nop
cmp
push
sbb
mov
sbb
mov
sbb
cld
clc
xchg
pop
pop
fs
int3
mov
(bad)
xchg
fcmovb
(bad)
out
cwde
push
dec
aad
sar
aad
fucomi
mov
push
stos
xchg
push
scas
in
mov
mov
icebp
mov
lea
cmps
clc
and
push
cmp
jmp
iret
mov
inc
sbb
sbb
loopne
push
xchg
adc
mov
sub
leave
push
stc
out
push
mov
inc
fs
(bad)
jns
fwait
(bad)
sub
jge
sbb
shl
xor
push
das
xchg
es
mov
pop
loopne
pop
mov
adc
xchg
pop
mov
in
mov
add
push
cs
fiadd
and
jno
cmps
adc
call
mov
mov
pop
sub
fstp
loope
dec
or
adc
fcom
inc
adc
xchg
or
les
push
mov
pop
sub
xor
mov
loope
pop
push
aad
dec
and
and
or
or
enter
test
push
ins
sbb
jmp
cmp
ficomp
sub
es
mov
mov
push
retf
jmp
jecxz
stos
(bad)
out
xchg
daa
add
adc
fdivr
add
retf
outs
mov
push
xchg
push
pop
adc
test
add
mov
jmp
add
sub
bound
lods
dec
shr
jge
movs
xlat
mov
jbe
bound
sub
xor
retf
ja
cmp
cli
mov
pop
popa
out
out
xchg
mov
xchg
stc
outs
xchg
loopne
aaa
shl
mov
sbb
xchg
inc
or
or
aad
dec
loop
les
and
xor
jae
dec
add
jg
pop
call
stos
hlt
aaa
in
cwde
adc
popf
sbb
lahf
sbb
inc
adc
fist
pop
fcom
shl
pop
add
scas
dec
jbe
inc
std
out
sub
mov
xor
or
pop
or
lock
lds
adc
ficom
push
sub
loopne
jmp
cli
jl
add
int
xor
into
adc
add
leave
out
stos
retf
jp
fmul
je
in
mov
cmps
popa
(bad)
mov
xchg
add
jnp
shr
jle
stc
sub
push
jbe
(bad)
jo
cs
cmp
inc
mov
dec
xchg
data16
sbb
shr
scas
mov
enter
push
inc
ret
push
fist
(bad)
pusha
mov
popf
dec
mov
xor
sbb
clc
push
ret
mov
xchg
loope
fist
icebp
(bad)
or
test
sub
es
fild
add
std
xor
retf
jb
inc
sub
push
add
clc
mov
pop
xchg
out
rol
add
lahf
push
out
push
sub
(bad)
cmp
imul
loope
jge
mov
out
outs
and
movs
jbe
jbe
lahf
clc
xchg
test
mov
jge
inc
dec
jecxz
pushf
scas
xchg
cmc
sub
aaa
inc
stos
mov
and
lods
push
adc
(bad)
lds
(bad)
sbb
add
pop
(bad)
imul
add
or
cmp
mov
adc
jle
movs
in
add
push
push
push
pop
jg
(bad)
cmps
iret
mov
fwait
push
mov
cld
pop
xchg
mov
sub
fisttp
mov
xchg
or
jge
pop
mov
dec
icebp
test
ja
call
push
adc
repz
repz
fs
leave
fwait
cmp
cmp
jle
jl
jne
nop
adc
aas
jmp
mov
iret
ja
retf
rcl
xchg
jae
push
sub
add
es
lds
lods
int
and
leave
frstor
in
bound
lea
jmp
xor
sub
fild
cs
in
xor
pop
mov
mov
popa
pusha
push
mov
dec
pop
push
mov
in
jmp
stos
or
cmp
cmps
pop
mov
and
paddd
fbld
leave
inc
cmp
mov
imul
data16
xor
imul
and
jo
shr
inc
mov
test
in
stos
and
dec
(bad)
mov
mov
push
sbb
je
jne
retf
fcomp
jae
add
stos
arpl
mov
cmps
jnp
mov
dec
mov
xchg
xor
dec
bound
test
sub
sti
daa
int
xor
sbb
ins
dec
inc
mov
je
adc
push
js
xor
shl
and
sub
or
mov
push
jnp
pop
cli
add
xchg
leave
add
out
mov
cld
das
cwde
or
jl
fadd
mov
aam
in
push
test
xor
cvtps2pd
aad
fisttp
dec
cmps
and
addr16
data16
int3
test
not
(bad)
push
xor
(bad)
fcom
sbb
fwait
js
add
retf
and
outs
lahf
sbb
out
iret
stos
push
dec
aaa
add
fs
and
push
jecxz
div
dec
fisubr
mov
pop
(bad)
js
cmp
das
retf
jnp
add
fisttp
or
add
and
jae
sub
lds
xchg
pop
ret
push
pusha
ret
jg
mov
das
rcr
enter
aam
(bad)
mov
jo
das
dec
adc
mov
in
inc
(bad)
jp
and
icebp
sti
stos
push
call
jne
out
ds
or
call
mov
sub
jmp
sbb
pushf
xchg
mov
scas
lock
imul
mov
int3
cmp
mov
call
in
mov
stc
fidivr
push
jecxz
mov
sub
gs
mov
mov
mov
test
push
ins
sbb
and
jbe
fild
pop
xor
cmp
mov
mov
cmp
es
popa
xor
loope
xlat
and
sbb
outs
aad
daa
pushf
fiadd
(bad)
mov
mov
cmps
pusha
dec
xchg
js
mov
cmp
shl
mov
in
imul
xor
ficomp
and
lock
or
sub
sar
inc
add
xchg
adc
scas
push
sub
int
and
add
(bad)
loopne
pop
stc
and
test
sub
ret
pop
add
(bad)
and
mov
adc
mov
xor
xchg
scas
mov
jbe
out
cs
mov
and
xchg
iret
ins
mov
bound
inc
aad
in
cmp
or
xor
movs
rcr
cwde
js
aaa
push
pop
mov
fistp
mov
iret
push
cmp
sbb
jns
scas
push
dec
lea
or
jbe
jmp
and
daa
loopne
test
xchg
push
jo
sub
mov
xchg
adc
addr16
dec
mov
pushf
test
sbb
imul
push
fstp
bound
stos
leave
xchg
cmp
pop
outs
fcmovnbe
pop
daa
mov
xchg
sahf
jno
out
adc
pushf
cli
(bad)
jmp
mov
call
sub
imul
mov
mov
mov
jns
xchg
adc
xlat
imul
jne
into
ins
aam
in
stos
mov
aaa
adc
out
mov
push
fistp
jmp
rcr
in
hlt
add
jp
cld
dec
sub
sbb
(bad)
in
ror
push
push
xchg
fwait
addr16
adc
shr
ins
inc
(bad)
out
cmp
sbb
mov
jge
sahf
ins
or
add
and
enter
aaa
and
dec
and
test
sbb
and
or
jl
sar
(bad)
test
(bad)
mov
or
mov
and
add
and
pop
dec
and
(bad)
(bad)
or
aam
xchg
test
pop
fucom
inc
adc
scas
fidiv
xor
loope
jp
mov
push
sub
or
loopne
out
call
and
jne
(bad)
aad
setnp
pop
(bad)
xchg
or
and
fsubr
movs
mov
nop
or
call
dec
icebp
and
dec
mov
pop
arpl
and
push
(bad)
cmp
push
nop
in
or
sub
mov
push
in
lea
push
popa
mov
jb
xchg
mov
rcl
push
scas
cld
cdq
std
out
pop
std
mov
ror
mov
call
nop
push
and
jb
cmp
icebp
inc
cmps
ja
pop
call
jb
push
out
aas
repz
pop
je
(bad)
mov
(bad)
xchg
js
out
pop
and
mov
repz
xor
adc
das
xor
int
leave
pushf
jg
sub
(bad)
fwait
mov
push
ldmxcsr
jmp
into
(bad)
rcr
dec
loop
fwait
adc
xor
loop
cdq
mov
div
in
std
jmp
mov
out
sub
sahf
stos
cmc
jecxz
imul
repz
sti
sub
mov
push
cwde
jbe
lock
push
(bad)
cmp
inc
jmp
pop
jno
ret
aam
cmp
sub
jae
js
xor
sub
jle
dec
push
cmp
cmp
fwait
inc
add
xor
movs
mov
cwde
js
xor
aaa
xor
cmp
jae
cmp
push
data16
jmp
push
mov
mov
cmp
mov
es
neg
inc
lds
(bad)
ins
inc
loope
shr
push
gs
int
cwde
div
mov
ret
mov
pop
dec
cmps
jecxz
xor
pushf
mov
inc
pop
repnz
push
stc
mov
sbb
std
or
sbb
or
mov
jge
xchg
call
fild
and
push
push
inc
mov
adc
jne
or
out
xchg
int3
lods
mov
call
mov
xchg
shl
ins
lahf
xlat
xchg
outs
inc
in
xor
sub
push
mov
stc
call
push
imul
xor
stos
pop
and
inc
sbb
mov
mov
mov
movs
fwait
jle
or
jno
add
inc
cmc
jl
jns
in
fucomp
sub
nop
xor
call
xchg
sub
in
ror
pop
movs
movs
adc
out
mov
hlt
sbb
cmp
push
movs
xlat
xor
or
xor
jp
add
inc
lea
into
jae
pop
fld1
ss
push
aaa
dec
int
cmc
add
lock
les
mov
mov
repz
mov
inc
mov
cmps
mov
pop
int3
mov
call
or
imul
push
pop
stos
adc
push
cmp
cmp
pop
stc
(bad)
and
pop
dec
pop
mov
gs
push
pop
and
retf
stos
fcompp
xor
mov
cwde
pop
xor
shr
rcr
pushf
push
loopne
mov
jle
rcr
cli
pop
mov
pop
mov
pushf
push
fnstcw
scas
inc
pop
out
cld
xchg
adc
clc
jne
popf
ds
mov
ds
push
and
sub
inc
or
je
in
add
mov
xchg
push
sbb
or
push
add
mov
retf
icebp
xor
fwait
mov
pop
inc
mov
popf
cli
icebp
mov
cmp
jns
lods
rcr
dec
mov
pop
cwde
pop
dec
fisubr
mov
mov
icebp
cmp
aam
repz
dec
sub
sbb
fld
rcr
cmp
inc
nop
sar
sub
enter
stos
std
xchg
push
sbb
cld
ins
cmps
daa
xor
jne
scas
lods
pushf
xor
add
cmc
pop
retf
fsubp
push
or
mov
stos
mov
nop
xchg
or
repz
mov
push
jp
inc
fnstcw
rol
test
mov
jnp
sahf
mov
inc
movs
bound
push
stos
lds
mov
mov
sub
cmp
cmp
mov
dec
lds
push
jmp
xor
dec
push
xchg
xchg
xchg
mov
repz
mov
ret
pop
push
inc
ins
and
and
fnstcw
cmp
add
inc
repnz
mov
mov
pop
test
add
call
test
je
xor
or
ret
and
cmp
add
fst
pop
inc
mov
jg
aad
jb
stos
mov
sbb
cld
lods
and
add
retf
sbb
push
lahf
(bad)
sbb
lds
repz
(bad)
div
jge
sub
pop
icebp
cdq
fst
lock
imul
test
and
(bad)
mov
jnp
push
sub
sub
sub
xchg
je
ret
imul
push
inc
xor
jbe
jmp
fs
dec
test
idiv
mov
test
mov
dec
mov
fstp
push
jo
retf
stos
dec
call
push
test
xor
test
pop
mov
jg
and
idiv
cdq
cmp
jecxz
neg
adc
cli
xlat
cmp
mov
fisttp
pusha
ret
push
ds
pop
test
adc
(bad)
out
cs
xchg
cmp
or
sub
mov
adc
xchg
pop
xor
xor
lods
icebp
retf
xchg
sbb
scas
inc
fisub
mov
jge
icebp
add
inc
jns
fistp
xlat
jecxz
stc
shr
mov
adc
aam
or
mov
loope
clc
outs
xchg
push
(bad)
addr16
push
aaa
mov
xor
cmp
push
cmps
pop
mov
dec
add
cld
retf
and
xor
in
bound
mov
or
inc
gs
outs
fdivr
bound
or
mov
arpl
mov
pop
pop
jcxz
xlat
fistp
sbb
das
add
test
test
xchg
xor
push
dec
push
sub
les
out
out
inc
xor
cmp
lea
sar
cmps
stos
pop
lods
scas
in
cmp
arpl
xlat
adc
not
jg
mov
pop
jmp
xchg
pop
fs
add
call
ins
cdq
scas
adc
xor
jmp
mov
or
xchg
jmp
fsubr
fs
mov
dec
sbb
xchg
(bad)
mov
push
inc
aam
pushf
int
loopne
mov
or
mov
sbb
jle
repz
jecxz
ret
(bad)
leave
cmps
mov
inc
pushf
lods
push
popa
jne
(bad)
cwde
mov
adc
inc
cmps
aad
call
adc
adc
out
xchg
popf
sahf
jo
or
lds
dec
loop
cmc
cld
fisub
mov
out
arpl
in
dec
(bad)
retf
pop
das
fsubr
mov
repz
test
pusha
mov
xchg
lock
or
sbb
dec
mov
dec
hlt
pop
xor
outs
cmp
adc
cwde
int
sahf
scas
daa
aam
je
mov
retf
inc
pop
push
xor
mov
adc
adc
pop
pop
pusha
std
(bad)
mov
pop
test
mov
(bad)
pop
xchg
cmps
inc
mov
pop
into
or
pop
jnp
iret
enter
inc
adc
sbb
test
jae
dec
xchg
in
add
adc
jle
scas
xchg
daa
push
dec
rcr
xchg
ret
and
dec
xchg
and
aaa
lds
push
adc
scas
scas
cwde
or
cld
repnz
pop
xchg
cdq
add
jns
fs
icebp
call
dec
mov
jmp
push
sbb
imul
scas
push
cmp
(bad)
fsubrp
test
cwde
pop
iret
icebp
daa
shl
repz
out
dec
outs
or
mov
pop
add
mov
xchg
mov
aam
adc
cmc
enter
cmc
sti
imul
fs
(bad)
adc
fwait
adc
mov
mov
mov
imul
pusha
jmp
cld
imul
pop
and
clc
out
bnd
xor
xchg
ss
daa
stc
iret
jl
add
mov
mov
mov
mov
movs
push
outs
xor
cmp
fwait
popf
leave
mov
mov
sub
push
lea
and
mov
enter
push
xor
xor
lock
adc
mov
dec
cmp
sub
sub
mov
fldenv
imul
inc
(bad)
cdq
test
mov
inc
mov
sub
mov
call
push
mov
shl
ret
mov
mov
dec
call
je
inc
push
leave
imul
mov
sbb
addr16
dec
and
or
or
mov
push
in
and
shl
mov
sbb
jbe
mul
pop
xchg
xor
xor
and
scas
sub
(bad)
adc
in
jg
outs
dec
inc
push
push
(bad)
sbb
xchg
aas
xlat
mov
nop
inc
push
pop
test
adc
int3
scas
fsubp
jae
xor
mov
js
push
push
xor
inc
mov
jecxz
push
push
sbb
loope
add
pop
mov
and
mov
xor
xor
test
fld
enter
or
or
bound
imul
repz
pop
fiadd
adc
push
in
push
fwait
mov
push
sbb
and
ins
aaa
fisub
xchg
shr
jmp
and
push
mov
mov
stos
mov
ins
push
or
fs
sahf
loopne
fnstcw
movs
ret
mov
sbb
fsub
xlat
in
push
in
jne
jge
leave
xor
add
push
xchg
inc
push
jmp
cmp
clc
in
pushf
stc
mov
ds
adc
or
retf
xchg
mov
cmc
retf
jne
mov
push
cmps
dec
in
stc
jne
adc
or
sti
adc
mov
sub
(bad)
adc
addr16
rcl
dec
cmp
dec
adc
push
hlt
push
pop
cmp
fadd
cmp
repz
xor
aas
dec
adc
call
jp
and
jmp
cld
push
sub
mov
jecxz
dec
emms
xchg
data16
dec
sub
mov
loop
push
fnstsw
push
xchg
fwait
mov
cmc
mov
pop
dec
or
push
je
leave
mov
jns
or
sbb
lock
and
push
jle
jmp
clc
xlat
sbb
or
pop
push
pop
jp
(bad)
in
pusha
imul
xor
mov
or
xor
fisttp
push
cwde
ins
mov
xor
(bad)
out
cs
push
out
pusha
dec
neg
jnp
popf
data16
stos
jbe
inc
mov
das
rcl
leave
int3
int3
(bad)
jo
mov
movs
mov
mov
lods
or
les
(bad)
pusha
(bad)
shr
or
sti
inc
jecxz
std
mov
dec
jle
inc
(bad)
adc
jl
js
mov
ja
xchg
iret
xlat
jge
std
(bad)
data16
xor
sahf
repnz
add
rcl
sbb
jecxz
in
push
je
inc
jo
push
push
xchg
mov
scas
jp
mov
popf
ds
jno
jl
push
adc
jne
or
dec
cmp
pop
inc
add
stos
mov
in
lea
movs
cmc
aaa
test
push
outs
popf
inc
dec
mov
out
cdq
retf
jl
adc
aaa
mov
or
add
cmp
xor
jbe
push
fidiv
adc
adc
pop
cli
aad
adc
imul
repnz
mov
les
xchg
mov
jle
leavew
jge
ret
push
retf
scas
repz
loop
out
pop
test
fadd
xlat
pop
inc
test
or
loope
jecxz
in
call
ins
mov
jg
dec
cmp
aaa
and
pop
sub
es
loopne
dec
daa
adc
sar
add
add
lahf
cli
cmc
mov
sbb
(bad)
je
push
outs
mov
call
jb
outs
(bad)
xlat
sbb
in
and
dec
cmp
js
add
push
jmp
push
add
clc
stos
xor
inc
jl
jle
aas
mov
push
sub
ds
or
mov
std
cmc
pop
xor
ret
push
fs
sar
neg
push
xchg
xlat
push
mov
ja
add
dec
mov
cmps
push
addr16
add
adc
jo
nop
add
clc
cmp
xchg
gs
push
outs
jae
xchg
inc
mov
fucomip
or
jp
test
cdq
adc
mov
and
stc
cmp
or
leave
sub
and
fidiv
and
data16
push
add
ds
adc
inc
lds
loope
xor
jb
mov
lea
inc
test
test
popa
push
push
out
add
bound
mov
shl
scas
ficom
mov
xchg
popf
adc
jmp
sbb
inc
aaa
mov
mov
sahf
mov
(bad)
push
mov
rcl
into
ret
and
shr
jle
lea
sbb
cmps
imul
push
ja
test
ins
test
sti
std
cmps
and
add
push
dec
jecxz
xchg
icebp
fstp
sbb
test
lock
sbb
jp
jmp
dec
sub
in
mov
mov
push
cmp
retf
mov
stc
mov
test
scas
push
push
out
stos
jg
rcr
aaa
pop
loope
adc
jl
xchg
retf
jl
xchg
sbb
in
pop
dec
nop
cmp
jmp
mov
bound
pop
sahf
and
jmp
push
loop
push
fnstenv
lods
sbb
jp
adc
or
iret
out
call
adc
outs
pop
inc
in
ret
jo
fwait
adc
or
int3
push
or
jle
cmp
sub
inc
add
jae
mov
repz
xor
stos
sbb
push
sub
inc
inc
sar
jp
pop
sbb
mov
test
pop
nop
xor
aad
and
frstor
shl
inc
push
rcr
mov
xlat
arpl
popf
jl
sub
loop
scas
inc
pushf
mov
call
add
mov
sub
xor
xor
aas
push
sbb
ret
retf
jmp
ins
xchg
sbb
inc
icebp
jmp
sar
pop
fimul
inc
mov
leave
xchg
in
pop
rcl
stos
xlat
fldcw
mov
stos
sbb
add
dec
pop
adc
push
repnz
into
jmp
mov
pop
xor
and
js
mov
stos
stc
jmp
iret
rcr
mov
push
mov
sbb
push
pop
sub
int3
aas
mov
xchg
sbb
mov
(bad)
out
add
out
or
xor
pop
iret
imul
test
mov
mov
mov
and
lods
jg
pusha
mov
mov
test
inc
cdq
imul
pushf
in
inc
cmp
jecxz
rcr
xchg
mov
sub
pop
inc
or
jecxz
add
sar
or
cld
mov
movs
arpl
jecxz
test
push
dec
mov
test
das
jmp
pop
lea
xlat
cdq
pop
mov
ss
movs
add
ds
stos
jnp
movs
ss
jne
cdq
jle
mov
add
push
leave
mov
lock
and
push
(bad)
ficom
mov
bound
dec
aaa
jb
setle
sbb
pop
aam
push
jo
inc
lds
cmp
push
mov
lea
xor
xor
push
jmp
adc
rol
and
dec
xor
call
stos
cdq
mov
or
fs
(bad)
dec
xchg
ret
jbe
push
and
aam
add
iret
sbb
mov
inc
lods
fwait
int3
sahf
mov
lahf
jle
jmp
jno
jmp
sub
mov
cmp
ror
test
jle
in
inc
sbb
push
xchg
xchg
out
cmp
jo
retf
es
pop
sbb
mov
shl
fwait
xchg
(bad)
sahf
(bad)
jmp
add
retf
outs
pushf
push
repnz
test
cld
scas
adc
in
inc
push
or
xlat
and
jae
int3
cmps
hlt
pop
jno
mov
ins
adc
jg
pop
mov
cdq
out
addr16
xor
aam
sub
xor
sahf
inc
mov
sar
or
lds
jne
sub
jne
dec
push
test
test
sub
test
outs
ret
jnp
jnp
adc
dec
aas
xchg
lds
shl
dec
mov
mov
jae
std
or
test
jbe
lock
outs
push
xchg
sub
stc
bound
div
cwde
sub
inc
xor
call
int
jg
imul
mov
gs
gs
ret
int
sub
pusha
aas
xlat
nop
jl
push
sub
not
clc
sub
jge
sbb
sub
(bad)
(bad)
fimul
mov
push
add
or
adc
(bad)
pop
inc
ins
add
add
xchg
jle
xor
pop
inc
mov
loope
cwde
ins
fwait
sub
and
mov
push
jno
(bad)
stc
pusha
xchg
mulps
imul
mov
or
dec
dec
rcr
xor
sub
test
jmp
add
iret
jne
mov
xor
cwde
or
adc
mov
add
mov
and
xchg
or
sbb
adc
repz
out
push
mov
push
xor
not
xchg
cmc
mov
cmps
jne
dec
aas
cmp
add
sbb
sbb
in
push
add
ins
call
dec
mov
imul
in
or
mov
push
push
data16
jae
retf
inc
in
pop
icebp
mov
in
in
ror
sub
cdq
or
cmp
sub
cmp
add
cmp
sub
cmp
es
iret
push
adc
jmp
(bad)
jl
cmps
sub
mov
jecxz
or
test
mov
mov
mov
fimul
jl
aam
jmp
or
xchg
ror
pop
xchg
jmp
xchg
ss
(bad)
pushf
push
rcl
fstp
into
imul
xchg
adc
(bad)
adc
or
adc
data16
or
xchg
xor
int
std
fdivr
sub
(bad)
test
adc
out
or
jns
inc
pop
cmp
jns
mov
or
mov
jb
stc
mov
fisttp
pop
nop
mov
repz
inc
xor
popa
xchg
lods
push
cdq
jne
movs
fwait
in
jne
add
(bad)
sub
out
xchg
out
pop
daa
out
js
std
rcl
xor
dec
clc
jo
loope
sub
(bad)
push
je
mov
sbb
outs
sbb
test
in
mov
adc
mov
mov
nop
(bad)
pushf
enter
pop
aam
les
add
cli
push
dec
xchg
push
arpl
lods
inc
das
jbe
fimul
mov
das
adc
adc
daa
imul
mov
xor
mov
cmp
in
test
lods
add
push
fsubr
mov
sbb
cld
xor
retf
hlt
and
cmp
repnz
sub
pop
fild
pop
mov
cmp
pop
jo
sub
push
(bad)
add
xchg
push
sbb
repz
lahf
pop
push
dec
imul
dec
xchg
int
in
hlt
enter
inc
cli
(bad)
and
mov
rcl
pop
in
gs
and
aad
rcr
ja
icebp
into
xor
addr16
add
icebp
js
adc
sub
or
sbb
cwde
lods
stc
scas
pop
enter
pop
lods
icebp
push
stc
mov
dec
mov
test
xchg
dec
out
das
test
scas
call
ret
jmp
inc
mov
pushf
cmps
nop
aad
(bad)
out
enter
mov
enter
icebp
jns
stos
xchg
aam
push
jb
fild
cmove
stc
(bad)
xchg
mov
out
sar
(bad)
mov
lods
mov
addr16
sub
add
add
jg
mov
xor
(bad)
fisub
mov
pop
push
in
mov
iret
add
mov
retf
or
(bad)
(bad)
jnp
outs
sbb
cmp
in
cmp
out
pop
stos
mov
adc
in
jmp
loope
mov
int
push
jmp
aaa
loope
addr16
dec
cmp
sbb
pop
cs
inc
and
and
(bad)
mov
cmp
pop
fiadd
imul
mov
xchg
mov
mov
inc
repnz
cmp
sbb
(bad)
aad
in
inc
cmp
test
pop
out
cmp
mov
js
cs
loope
mov
stos
cmp
mov
dec
aas
jne
(bad)
test
xchg
pop
mov
pop
sar
mov
mov
mov
pop
push
or
(bad)
stc
imul
loop
add
stos
fcomp
cmps
in
push
aad
icebp
out
cwde
mul
out
addr16
imul
int3
adc
psubsb
sub
adc
pushf
and
rol
push
lds
jae
xor
out
cmc
(bad)
dec
xchg
sub
stc
cmps
lds
mov
sub
bound
iret
cmps
rol
mov
das
test
pop
repz
push
aas
xchg
je
iret
xchg
lds
mov
mov
test
imul
xor
inc
pop
jno
jg
pop
mov
mov
sub
idiv
lods
add
iret
aad
cmp
(bad)
test
mov
movs
dec
cmp
fwait
int3
inc
mov
je
mov
mov
cmp
dec
iret
sbb
(bad)
stc
(bad)
jnp
hlt
mov
fs
xor
jg
out
or
ror
pop
jp
pop
imul
fmul
mov
out
movs
push
xor
scas
xchg
xchg
mov
mov
xlat
inc
mov
sub
add
xchg
jne
mov
pop
repz
jecxz
xor
jl
test
cdq
leave
outs
cdq
push
xlat
and
aad
test
or
aad
mov
aad
daa
ror
push
fstp
stos
fwait
add
mov
ret
mov
sub
mov
sub
cdq
jne
enter
xor
test
lds
sub
ffreep
movs
add
add
xor
xchg
mov
sub
popf
jecxz
jmp
lock
mov
je
std
mov
pushf
aas
xchg
fsubr
jmp
jne
test
out
pop
in
push
jmp
gs
data16
jne
mov
jne
enter
daa
mov
push
fld
xor
movs
add
push
daa
es
loop
pop
in
add
ret
cmc
xlat
pushf
aas
in
lods
adc
adc
out
push
(bad)
movs
sbb
test
push
pop
push
jns
mov
(bad)
test
into
shr
mov
sti
dec
inc
pop
(bad)
int3
enter
mov
call
pusha
scas
addr16
je
cmps
call
movs
addr16
adc
pop
sbb
inc
mov
dec
cmpps
dec
mov
mov
fsubr
inc
stc
or
mov
scas
adc
pop
lods
fstp
call
dec
fidiv
sbb
add
into
das
popa
adc
add
inc
or
sbb
repz
and
xor
cmc
mov
(bad)
loopne
into
mul
sub
into
xlat
sub
enter
idiv
sti
fiadd
mov
mov
sub
jbe
test
adc
int3
(bad)
sbb
pop
ins
add
mov
mov
adc
push
adc
inc
xor
xchg
push
ins
call
outs
cmp
mov
outs
(bad)
xchg
nop
cmc
cmc
arpl
mov
adc
(bad)
jg
bound
int
addr16
mov
js
push
cmp
jecxz
inc
(bad)
loopne
add
cmps
mov
in
mov
fimul
push
test
xlat
lock
mov
adc
mov
xor
sub
jmp
pop
xor
(bad)
and
ins
lods
data16
cli
data16
repnz
scas
ds
std
ins
arpl
mov
inc
int
rol
push
and
push
sub
es
out
test
mov
mov
mov
pop
add
inc
pushf
push
dec
mov
inc
in
call
into
cli
out
fsub
fs
sbb
das
int3
add
enter
dec
xchg
les
(bad)
out
jle
ins
dec
sub
in
test
sbb
out
cmp
popf
inc
and
cld
add
jno
daa
xor
xor
and
mov
imul
add
stc
sar
mov
je
call
call
push
ror
xchg
xlat
add
enter
xchg
add
and
ds
and
arpl
xor
xor
enter
push
or
pop
jg
hlt
ss
push
jle
add
cs
pop
xlat
cmp
test
and
mov
sub
movs
fidivr
cli
ins
(bad)
in
fsubr
inc
jle
sub
xor
jp
pop
and
call
aad
or
clc
xchg
fistp
mov
cmp
pushf
sbb
sub
mov
jecxz
xlat
fild
fnop
fcmovbe
mov
imul
leave
lods
in
xor
ficomp
cmps
repz
pop
xchg
or
mov
outs
mov
jg
mov
gs
and
test
jns
in
adc
hlt
call
pop
or
int
je
repnz
(bad)
dec
or
dec
mov
jo
sub
pop
rcr
sti
ror
push
ins
jb
dec
loopne
dec
icebp
mov
or
sbb
fist
loop
ins
fcmovnu
out
pusha
adc
cmps
jmp
das
gs
push
jg
cmps
cmp
rcr
sub
push
push
scas
jecxz
rol
jmp
jecxz
jge
sbb
add
push
mov
ds
jmp
loop
mov
aam
or
add
mov
data16
xchg
aad
add
jnp
add
mov
lods
int3
scas
imul
bswap
stos
xchg
aad
inc
arpl
push
xchg
es
pusha
mov
aas
mov
dec
sub
pusha
pop
add
dec
xor
test
cmp
stos
(bad)
ja
jnp
or
push
cmps
fcomi
cdq
jbe
or
retf
imul
cmp
adc
mov
pop
and
fdivr
mov
jmp
sbb
loopne
jae
pop
adc
daa
jns
mov
sub
or
rcl
xor
sbb
jmp
(bad)
xchg
mov
aas
gs
mov
add
adc
cmc
cwde
fistp
ds
pop
adc
push
aaa
jmp
or
xor
pop
popa
dec
aaa
sub
xchg
cmp
fwait
mov
sub
jnp
inc
or
test
add
test
sti
out
lahf
cld
neg
js
adc
xchg
and
inc
jmp
xor
sbb
loopne
test
cwde
mov
popf
xchg
arpl
mov
sahf
sti
sbb
rcl
or
fadd
fcomp
les
jne
mov
ins
pop
or
out
cs
test
je
adc
sar
jb
push
rol
and
and
les
mov
stos
or
inc
repz
sub
jno
pop
out
mov
cmp
in
retf
mov
jge
or
push
sar
fdivr
ficomp
iret
imul
push
call
aad
xchg
loop
mov
and
push
cmp
mov
fcomp
jns
retf
dec
cmp
xchg
arpl
repz
(bad)
repz
mov
mov
setns
or
test
mov
dec
in
dec
mov
xor
inc
add
pop
inc
imul
mov
sbb
out
jae
mov
call
push
push
scas
cmp
mov
xor
loope
push
repz
xchg
xlat
shl
popf
mov
in
(bad)
rol
loop
lahf
ret
mov
xchg
or
repnz
and
jge
hlt
test
push
sub
jle
add
add
sbb
retf
sbb
mov
movs
aas
mov
push
mov
je
mov
clc
or
mov
pop
mov
add
jbe
jo
push
loope
ficom
dec
push
jmp
add
cmps
(bad)
jns
mov
call
dec
mov
(bad)
lea
jecxz
lods
mov
mov
mov
pushf
push
adc
fild
dec
fimul
or
hlt
adc
xor
loopne
aad
(bad)
retf
cdq
sub
call
jnp
int3
bound
fs
dec
sub
cdq
push
cmp
push
sbb
mov
popa
scas
cs
jns
test
call
repz
and
push
sub
sub
mov
cmp
jg
loope
mov
jmp
add
cmp
call
push
call
(bad)
jmp
pop
adc
and
jge
cmovo
xchg
xor
pushf
adc
repnz
pop
outs
(bad)
hlt
aam
lea
sbb
popa
js
(bad)
lock
fimul
jmp
xchg
adc
sub
pop
or
jmp
nop
sbb
xchg
mov
arpl
push
inc
mov
push
mov
iret
fbld
xchg
dec
(bad)
ins
jge
mov
pushf
xchg
cs
cmps
popa
xbegin
sbb
movs
jo
and
mov
cmps
mov
jg
icebp
and
ret
ds
push
mov
movs
sbb
nop
xchg
inc
jns
add
pop
push
inc
imul
and
add
dec
xlat
xor
adc
and
xlat
test
vpmacsdd
push
fldpi
jge
bnd
sub
or
test
clc
mov
out
ins
lar
fbld
int
jnp
fstp
mov
enter
ja
clc
dec
push
loop
std
or
cmc
fcom
mov
push
jbe
leave
cmp
xchg
mov
cdq
sbb
cdq
mov
jecxz
popa
and
iret
dec
test
inc
push
lea
in
stos
adc
sub
std
mov
xchg
pop
call
pop
cwde
loopne
jg
scas
fistp
fidivr
xchg
and
xchg
jno
adc
jp
ds
iret
dec
add
rcr
mov
mov
in
and
lock
fcomp
in
clc
in
outs
ret
sbb
xchg
icebp
jmp
pop
mov
inc
mov
xlat
jl
push
dec
add
es
ds
xchg
repz
jg
adc
call
aaa
or
test
div
xor
pop
sti
sub
or
xchg
adc
inc
ret
cmc
cmp
or
jns
pusha
mov
cmp
movs
mov
std
icebp
jno
out
xchg
idiv
adc
jno
encls
adc
ins
mov
daa
fs
ret
cli
mov
sbb
and
add
in
mov
fcom
push
into
push
in
dec
pop
mov
push
ret
add
jg
adc
add
(bad)
jge
fnsave
addr16
adc
jl
shr
pushf
(bad)
leave
push
shr
mov
popa
mov
add
add
cdq
test
test
out
sub
pop
and
xor
mov
push
adc
mov
mov
sti
xor
(bad)
pop
mov
popa
xchg
xor
ret
jmp
mov
dec
and
inc
add
stc
xchg
popa
mov
(bad)
fstp
sbb
mov
mov
xor
shl
out
mov
fwait
out
jl
add
lahf
push
sbb
adc
in
mov
sbb
sub
out
mov
aad
xlat
adc
sbb
push
test
mov
scas
iret
push
jp
cmp
stos
and
add
ret
lea
mov
push
in
cdq
rcl
xlat
sbb
(bad)
jnp
push
dec
pushf
xor
and
xchg
rol
jo
mov
loopne
pop
(bad)
mov
push
js
mov
sbb
shl
fnstsw
cli
fbld
add
xor
pop
ss
test
xchg
or
lods
mov
pop
jecxz
pop
inc
xor
xchg
jge
test
mov
test
in
(bad)
imul
(bad)
pop
sbb
cmp
leave
leave
outs
inc
jae
fimul
jl
push
sub
imul
xor
rcl
scas
pop
and
aam
cld
jbe
repnz
push
mov
lahf
gs
xor
cdq
inc
leave
movs
mov
seto
and
fs
xchg
xchg
enter
movs
cmp
inc
clc
pop
or
inc
sub
fdivr
push
sub
add
sub
sbb
mov
pop
push
data16
or
jne
mov
call
lods
ror
xor
mov
pop
std
loop
sbb
shl
inc
pop
stos
(bad)
jns
outs
es
cwde
mov
or
mov
or
gs
fwait
push
lahf
cmp
gs
jns
jle
push
shr
inc
xor
push
mov
mov
mov
xchg
js
mov
in
movs
sub
xchg
in
mov
dec
call
jae
mov
jle
push
sub
aaa
call
ins
jns
imul
push
xor
mov
xchg
xor
cli
cmp
add
test
arpl
push
pop
in
push
scas
cmp
stos
xchg
rcr
and
cmp
inc
jne
or
and
xchg
test
xchg
aas
test
jne
fcom
mov
imul
in
xchg
lock
jl
jp
fistp
cmp
fcmove
xchg
mov
dec
inc
mov
mov
fwait
push
mov
dec
cmps
dec
xor
je
mov
dec
pop
hlt
mov
add
push
ret
je
jbe
add
enter
mov
in
jo
and
jecxz
xor
bound
xchg
add
and
push
push
popf
mov
cmp
stos
and
ins
cmp
adc
fidivr
in
(bad)
fidivr
add
pop
(bad)
div
xchg
dec
out
inc
aad
xor
mov
xchg
sub
mov
mov
adc
push
int
dec
mov
xchg
test
mov
shr
adc
adc
and
mov
adc
sbb
cmc
add
cs
cld
lods
xor
pop
(bad)
jmp
sbb
adc
dec
dec
retf
pusha
jb
mov
xor
mov
loopne
lods
out
jb
stos
mov
jae
or
stos
dec
xchg
inc
lods
push
inc
call
js
lods
data16
cmp
call
call
cmp
inc
ficom
inc
xor
rcl
add
cmc
dec
int
adc
mul
adc
cli
lea
dec
ss
push
pop
inc
jae
inc
and
mov
and
jne
call
sub
dec
sbb
mov
loope
dec
fwait
pop
enter
test
mov
lds
push
cwde
icebp
arpl
cmp
mov
mov
pop
cmp
adc
mov
cli
lods
cmp
jae
xchg
fisttp
ror
jno
dec
in
and
loop
les
xchg
or
inc
shr
dec
add
mov
xor
(bad)
jbe
fs
mov
cmp
mov
xchg
movs
stc
gs
push
popa
sbb
mov
cli
out
imul
jb
loopne
ins
repnz
into
loop
sbb
add
dec
xchg
loop
lds
scas
xchg
mov
rol
xor
fwait
pop
addr16
fidivr
jne
sbb
sub
in
imul
cmp
repz
pop
or
repnz
int3
pusha
movs
je
jb
jns
imul
sbb
push
leave
mov
dec
mov
inc
mov
sbb
fisttp
push
mov
mov
push
fstenv
pop
sub
sub
aad
mov
repz
aam
jae
rol
test
in
cmp
jge
dec
push
push
cmp
lock
repz
test
hlt
cmps
repz
mov
(bad)
xor
jbe
mov
pop
cmp
cmp
fmul
or
nop
pop
mov
lahf
ret
xchg
das
add
(bad)
xchg
dec
xchg
cwde
mov
std
jecxz
test
xlat
push
push
stc
addr16
lock
pop
std
mov
lods
cmc
jno
dec
adc
fsub
and
sahf
fcmovbe
push
mov
and
add
fistp
cs
call
mov
aad
pop
hlt
jnp
ret
dec
out
xor
add
or
rcl
fs
daa
and
clc
retf
jle
out
stc
pushf
daa
cli
mov
and
inc
aas
cmp
or
mov
xor
mov
repz
cmp
pop
bound
and
jne
mov
mov
sub
mov
cmp
xor
mov
jmp
mov
ret
fdiv
mov
pop
push
test
jp
xchg
push
and
adc
mov
xor
fnstenv
jmp
popf
fisttp
js
sbb
sahf
outs
add
xchg
(bad)
shr
dec
shr
jl
loop
xor
cmp
aaa
daa
mov
cmp
inc
mov
jp
jp
xor
es
pushf
loope
cmps
jns
mov
jle
call
sbb
pop
pop
push
sub
mov
out
mov
je
xor
dec
jmp
jle
mov
imul
mov
jle
cmp
(bad)
pusha
out
xchg
stos
pop
addr16
mov
data16
mov
adc
cli
ss
adc
rcr
mov
pop
jmp
cmc
stc
cmc
jbe
add
add
jae
pop
mov
jnp
adc
inc
add
shl
jnp
(bad)
out
rcl
mov
xchg
push
hlt
jge
or
cmp
inc
dec
mov
retf
std
jne
mov
das
mov
scas
out
out
push
jnp
jp
dec
mov
or
das
mov
jmp
cmp
dec
adc
and
adc
sbb
fld
popa
out
mov
dec
mov
pop
loope
jle
call
clc
jno
sub
stos
sti
cmps
cmp
xor
lahf
push
sub
test
out
sbb
push
inc
sahf
and
shl
xchg
es
test
test
jb
add
inc
in
jnp
scas
std
(bad)
outs
pop
xchg
jo
(bad)
push
pushf
push
test
imul
imul
push
xchg
xchg
sub
add
shr
stc
clc
dec
inc
stc
hlt
sbb
pop
jae
dec
push
pop
push
cs
fdivr
pop
jp
push
ins
repz
ud1
addr16
jno
xchg
pop
leave
add
dec
cmc
mov
add
inc
mov
pop
sar
mov
fwait
add
mov
iret
pop
jmp
aaa
fwait
pop
xchg
fbld
jne
fucom
xchg
mov
in
adc
dec
inc
jo
js
cmp
sbb
cwde
inc
xor
mov
or
inc
pop
js
inc
xchg
lods
push
(bad)
mov
test
je
je
adc
inc
js
adc
popf
pop
dec
iret
jp
lods
hlt
fxch
es
xchg
data16
cld
loop
(bad)
sub
scas
mov
aaa
jne
mov
pop
mov
push
leave
pop
bound
rcl
not
pop
icebp
mov
mov
stos
fsubr
mov
gs
and
loop
shl
outs
sbb
stos
mov
in
pusha
das
es
sti
imul
xor
inc
lods
mov
inc
push
push
add
sbb
pushf
mov
cmp
sti
inc
xor
jnp
mov
cmp
fsub
cdq
push
sub
or
lea
inc
or
and
mov
int3
push
out
pop
mov
xchg
pop
aad
int
aas
inc
inc
jno
adc
push
mov
mov
(bad)
(bad)
inc
aas
js
sar
jg
push
dec
xor
inc
jl
sub
or
push
arpl
call
dec
push
xor
ror
inc
(bad)
lahf
mov
clc
mul
push
add
add
sti
jle
fnstcw
xchg
(bad)
ja
lods
adc
call
nop
lock
test
jg
test
mov
lea
jmp
scas
xchg
pop
and
and
and
xor
test
cmps
jg
push
jmp
xchg
pop
retf
(bad)
sbb
xchg
test
or
push
inc
lahf
adc
mov
push
dec
xor
mov
data16
mov
neg
inc
aam
inc
xchg
or
in
dec
xchg
or
inc
into
retf
pop
lds
aam
cmp
push
in
fdiv
data16
add
aad
into
pop
pushf
adc
push
jecxz
adc
push
clc
iret
lods
and
in
lahf
xor
or
adc
push
dec
lea
popa
push
and
shr
pushf
jnp
and
or
jmp
dec
xlat
movs
dec
mov
inc
inc
adc
into
sbb
popf
xchg
mul
(bad)
jmp
xchg
sub
mov
dec
jae
nop
push
jno
rcl
(bad)
ins
fsub
fisubr
stos
push
test
rcl
je
cs
or
sbb
das
xchg
and
iret
test
push
pop
out
inc
inc
dec
ss
and
mov
jmp
mov
dec
push
adc
adc
xchg
sbb
or
sbb
aas
stc
adc
push
(bad)
jmp
addr16
cmps
lahf
daa
mov
mov
and
push
lock
jmp
mov
pusha
gs
pop
and
enter
call
push
jb
test
inc
call
cmp
jns
mov
retf
sub
test
or
dec
mov
imul
fs
ins
jecxz
push
inc
and
cmc
cs
pop
xchg
or
xchg
cld
int
lock
mov
out
je
jg
dec
and
pop
lods
lds
dec
retf
lods
aad
mov
jl
outs
stos
cmp
jmp
cmp
in
call
movs
repnz
jbe
movs
cld
(bad)
jecxz
sbb
mov
loope
or
pop
std
xchg
call
(bad)
xor
mov
push
bound
fimul
inc
loop
jmp
pop
aam
xchg
test
mov
xchg
and
jmp
mov
push
into
aam
fcom
jnp
inc
adc
push
jnp
retf
mov
mov
pop
inc
leave
and
xor
fs
pop
int3
push
jae
in
mov
and
cmp
fdiv
movs
sbb
test
dec
daa
cld
jmp
cmc
sub
outs
mov
bound
out
out
movs
or
mov
mov
add
xchg
sub
fcomp
sti
push
in
adc
push
hlt
add
cwde
addr16
mov
aas
mov
pop
adc
aaa
dec
and
adc
dec
(bad)
cmp
xchg
cdq
cmp
cmps
push
fidiv
jge
mov
jg
out
dec
dec
pop
sahf
inc
pushf
pop
jle
loopne
jp
scas
std
push
ins
sub
sbb
pop
sbb
(bad)
sub
retf
push
shl
dec
test
xchg
aaa
xchg
movs
inc
lock
test
into
cmp
lods
jo
sahf
mov
dec
push
push
dec
adc
cli
call
sbb
add
ror
jb
rol
adc
cs
iret
shr
sub
or
or
or
or
icebp
jmp
adc
jo
push
inc
aam
inc
pop
push
mov
(bad)
in
test
pop
and
fbld
mov
dec
outs
pusha
sbb
into
mov
add
mov
push
fsubr
inc
pop
lea
jl
or
sub
dec
inc
mov
ins
pop
rcr
lods
mov
fld
rcl
retf
xor
add
imul
aas
data16
dec
imul
pop
and
add
(bad)
jmp
iret
push
pop
icebp
mov
loop
mov
loopne
push
pop
pusha
into
mov
ffree
ss
cmc
push
sub
jmp
inc
push
pop
or
jno
sbb
push
jl
daa
jecxz
sbb
clc
lock
push
jge
les
and
daa
out
mov
mov
pop
inc
mov
sub
add
in
repnz
mov
cwde
xchg
(bad)
rcr
mov
or
adc
xlat
jo
outs
mov
jmp
call
lock
movs
and
daa
mov
mov
mov
or
std
inc
mov
fs
scas
cmps
xchg
sbb
mov
sbb
xchg
aad
(bad)
in
mov
xchg
xchg
(bad)
cmp
jg
push
aas
cdq
dec
jno
add
jo
or
mov
(bad)
aaa
cmp
cld
bound
add
and
xlat
cld
mov
xchg
test
push
pop
xor
shl
fcom
test
imul
mov
scas
jge
mov
push
sbb
test
loopne
sbb
add
rol
jno
scas
jmp
mov
pusha
mov
push
xabort
mov
inc
sub
outs
pusha
push
lods
sahf
sahf
imul
xor
popf
test
imul
add
mov
ret
(bad)
xor
jnp
shl
data16
fcom
repnz
into
jecxz
push
cmps
es
sti
cmc
inc
xchg
xor
jno
gs
and
jnp
push
dec
test
fisub
sub
lods
movs
stos
loop
xchg
stos
jne
inc
and
cmp
inc
or
dec
out
dec
mov
jo
int
adc
imul
test
sub
mov
jb
fs
xor
rcr
mov
scas
jbe
inc
jae
retf
inc
icebp
fcmove
pop
and
or
pop
aas
pop
pop
or
xchg
mov
imul
es
push
popa
inc
cmp
lods
ins
retf
repz
call
aad
in
sub
test
jb
daa
retf
ret
inc
call
and
sbb
fld
jne
inc
stos
(bad)
fistp
inc
push
sub
ret
cli
xchg
in
iret
xchg
int3
mov
aad
jmp
cmc
mov
fcmove
popa
aad
sbb
iret
imul
xchg
push
pushf
and
scas
fmul
mov
push
mov
and
xchg
ret
pop
sub
scas
rcl
stos
stc
popf
inc
adc
movs
das
push
pop
mov
jbe
fisub
imul
xor
dec
call
ret
jnp
rol
cmp
mov
leave
add
movs
dec
lds
lock
ficomp
mov
mov
test
call
fwait
lods
dec
fisubr
dec
jl
cs
test
es
ins
mov
adc
cmp
mov
movs
call
retf
pop
pop
pop
mov
pop
jmp
dec
jecxz
movs
inc
sub
loop
xchg
xchg
or
pop
sbb
pop
xor
cmps
js
icebp
dec
aam
js
in
int3
jno
pop
scas
addr16
iret
mov
xchg
imul
or
data16
inc
pop
sub
pop
test
retf
mov
sahf
call
call
test
sub
jl
xor
popf
pop
in
bound
push
ret
inc
popf
pop
and
xor
je
call
mov
mov
jbe
jae
inc
jbe
xor
sub
mov
xchg
pcmpeqd
mov
aad
mov
leave
hlt
inc
mov
and
in
mov
inc
add
(bad)
je
jno
and
int3
loop
dec
mov
in
xchg
loop
cs
mov
sbb
mov
test
jae
ins
scas
cdq
xor
add
or
in
add
adc
ins
lock
pusha
mov
loope
mov
inc
add
cmp
inc
rcr
mov
dec
inc
adc
and
sub
std
or
push
fsubr
add
out
and
cwde
sti
sub
sbb
fist
lock
mov
in
dec
outs
(bad)
(bad)
xor
mov
mov
inc
or
es
ja
pop
sbb
cmp
pop
mov
clc
call
pop
imul
enter
aaa
mov
mov
sub
jnp
in
sub
outs
adc
sti
or
pop
and
push
inc
xchg
xchg
in
mov
sub
rol
sbb
inc
cld
rol
sub
sub
cld
adc
pop
mov
mov
dec
mov
inc
mov
inc
out
or
lods
cmp
mov
xchg
je
js
in
inc
pop
adc
push
cwde
nop
jmp
sub
stos
xchg
xchg
sbb
inc
pop
(bad)
jmp
ins
loop
cmp
mov
jnp
rcl
and
adc
mov
jmp
push
cmps
loope
cmps
cmp
stc
sub
mov
retf
sub
inc
mov
je
mov
stc
lods
and
add
adc
xchg
cs
jno
rol
mov
dec
loope
xchg
lahf
out
xchg
ja
inc
dec
adc
ins
faddp
std
jp
add
fdiv
mov
call
data16
stc
sar
out
pop
fs
mov
inc
inc
test
sub
xor
add
popf
mov
cmp
fistp
mov
dec
test
test
xchg
aam
popa
ins
sub
mov
shr
inc
ins
or
pushf
xchg
pushf
jns
(bad)
ins
aaa
sub
arpl
lds
movs
mov
jp
(bad)
sub
mov
mov
lahf
(bad)
imul
adc
mov
cli
push
les
shl
xor
stos
loopne
stc
imul
and
cmps
mov
cli
lods
xchg
sub
lea
fld
inc
(bad)
div
cmp
lods
std
out
loop
xchg
sub
inc
jp
push
scas
popf
int
fs
mov
fsubp
inc
repnz
xchg
pop
xor
cmp
cmp
mov
push
loopne
fwait
rcl
mov
mov
js
fisub
pop
mov
jecxz
ins
push
shr
mov
aas
(bad)
daa
xchg
mov
jge
mov
(bad)
fst
inc
daa
xor
enter
lods
test
xor
mov
sub
jb
(bad)
call
out
shl
retf
push
(bad)
adc
or
iret
mov
aad
jge
outs
pop
fwait
daa
or
pusha
cmp
rol
sti
ins
mov
pushf
nop
out
(bad)
mov
call
in
bound
inc
push
(bad)
xchg
cdq
repnz
loopne
test
push
xchg
push
rol
jne
enterw
mov
stos
imul
shr
or
pop
jl
lods
push
mov
cli
sub
xor
scas
in
lds
ret
add
into
cdq
aad
mov
add
fimul
es
leave
push
cdq
pop
xchg
loopne
in
mov
es
jle
pop
test
dec
stos
mov
(bad)
cmp
cli
hlt
movs
and
aad
push
lods
jne
movs
xchg
or
rcr
(bad)
xchg
push
movs
adc
add
cld
add
sub
test
xor
outs
push
xlat
pop
pusha
jle
mov
arpl
adc
outs
clc
data16
xchg
pop
shl
pop
iret
sub
mov
add
out
jg
sbb
mov
mov
add
push
jnp
sahf
retf
sub
cmp
movs
movs
(bad)
call
data16
inc
repnz
imul
ja
xchg
test
xor
pop
mov
dec
(bad)
sub
jecxz
or
ret
sub
mov
in
cvtps2pd
xchg
add
mov
shl
jbe
mov
xor
lahf
pop
inc
sbb
das
mov
and
fisttp
jl
icebp
inc
pop
pop
sub
lds
call
sub
test
shl
rol
push
pop
idiv
xor
cmp
and
aaa
shl
scas
(bad)
cmp
xchg
push
aaa
mov
ret
mov
jbe
or
fistp
push
adc
xor
push
mov
pop
sub
out
out
mov
into
xchg
pop
stos
xchg
test
fcmovne
(bad)
mov
retf
push
idiv
and
xchg
cmps
pop
neg
or
add
loop
pop
rcr
ins
mov
cmps
mov
xor
mov
ror
push
lods
test
in
pop
push
mov
in
ss
and
jl
cmps
popa
xor
dec
(bad)
mov
mov
test
inc
jg
sub
(bad)
cmp
pop
xchg
stos
loope
shl
push
cli
jbe
arpl
ror
inc
xchg
call
and
and
sbb
cmps
test
inc
cmp
js
gs
fild
push
push
int3
sub
inc
hlt
jnp
inc
pop
mov
outs
xor
sub
fcom
xchg
push
push
xor
(bad)
cld
shl
call
add
imul
retf
repnz
and
mov
adc
push
sub
xchg
sub
adc
call
inc
retf
mov
jmp
sub
cmps
dec
adc
sub
int
jo
call
lds
ficomp
cwde
push
push
mov
ja
sbb
addr16
pop
fdiv
adc
fidivr
aas
aam
mov
mov
or
stc
jae
adc
pusha
pop
dec
in
sbb
scas
std
test
jmp
(bad)
xchg
mov
mov
loop
pop
iret
sbb
adc
cmp
lahf
fwait
aam
icebp
mov
sbb
xor
and
pop
arpl
pop
jae
or
(bad)
fistp
and
fwait
cmp
pop
test
cmps
sub
mov
outs
sub
shl
cli
cwde
popa
sbb
sub
and
in
ds
in
inc
lea
call
nop
xchg
push
int3
ss
cld
ins
mov
cmp
cdq
pop
mov
xchg
add
xchg
xlat
popa
test
imul
imul
psubq
add
and
fdiv
loop
jbe
popa
(bad)
sub
loope
jae
dec
pop
add
fiadd
fst
xchg
fsubrp
adc
call
fsub
mov
push
ss
es
mov
lea
jb
test
cmp
push
das
std
jecxz
mov
cmp
add
bound
xchg
mov
iret
mov
xor
test
push
dec
jg
push
sub
xor
nop
mov
sub
jmp
fild
stos
lds
sub
or
and
int
arpl
push
inc
aam
fcomp
mov
int3
xor
popf
jb
movs
jb
aaa
(bad)
xchg
mov
push
jbe
xchg
adc
loop
inc
jecxz
jecxz
mov
xor
aad
mov
adc
mov
mov
rcl
mov
in
fcmovnbe
mov
mov
sub
ds
lods
out
and
cdq
das
je
or
mov
push
pop
inc
sbb
fs
jmp
jl
inc
rol
in
shl
xchg
daa
fs
sub
stc
add
xchg
setbe
std
stos
test
pop
pop
pop
daa
add
mov
jno
mov
nop
mov
jno
mov
dec
aaa
xor
mov
adc
or
mov
inc
mov
lods
div
bound
or
add
(bad)
xchg
in
and
movs
dec
lds
xor
scas
mov
aam
inc
lods
test
aam
arpl
dec
aad
loope
xor
xor
and
xchg
mov
fldcw
xchg
test
pop
(bad)
sub
cmps
scas
test
mov
nop
mov
fistp
sub
xchg
jb
xlat
jecxz
retf
(bad)
imul
push
leave
push
add
das
xlat
dec
aam
clc
sub
pop
test
int3
outs
retf
pop
dec
dec
xchg
outs
in
inc
pop
mov
test
jns
je
push
test
pop
in
mov
dec
adc
mov
xchg
inc
jb
inc
(bad)
or
mov
rcr
(bad)
jmp
repz
imul
shl
pop
add
pop
(bad)
fidivr
sbb
call
aaa
and
dec
push
call
dec
hlt
xchg
cmp
cmc
adc
push
xchg
arpl
xchg
rol
jo
aam
sub
sbb
sahf
inc
mov
ins
xor
stos
mov
ins
mov
adc
daa
stos
stos
jmp
sub
add
shr
mov
push
add
xor
imul
js
je
jmp
inc
push
ror
jnp
or
repnz
jl
iret
nop
ret
mov
add
out
mov
pusha
das
loopne
mov
xor
push
pop
fwait
push
lahf
fist
xchg
xor
cmc
je
sbb
dec
and
jb
icebp
fwait
ret
ds
adc
xor
jl
fsub
push
les
jae
into
cmp
pop
mov
inc
inc
test
call
push
bound
in
mov
int3
inc
call
movs
sti
fdiv
into
cmps
push
imul
mov
retf
lods
rcr
out
dec
bound
cmps
cmp
mov
enter
test
test
retf
fiadd
adc
xchg
call
xchg
js
int3
xor
test
cs
outs
adc
icebp
sub
lea
xchg
scas
inc
push
aas
sar
jb
xchg
dec
gs
inc
push
ins
hlt
mov
cmp
retf
in
inc
adc
mov
add
int
inc
sub
sbb
or
ja
jmp
or
xor
mov
movs
pop
adc
inc
std
imul
in
scas
or
dec
bound
cmp
sbb
add
pop
cwde
mov
sub
aaa
xor
adc
jo
push
cmp
xor
sub
dec
lahf
xchg
rcr
sar
mov
bound
fnstsw
gs
js
out
pop
sbb
mov
xchg
xor
mov
pop
cmp
add
jae
ds
dec
sahf
in
xor
inc
ja
push
bound
imul
sub
(bad)
xchg
push
push
push
jbe
adc
pop
nop
jnp
popf
retf
or
inc
(bad)
repz
cli
mov
inc
mov
sub
ret
xchg
fst
outs
jecxz
push
into
enter
mov
imul
dec
fsubp
xchg
jp
in
pusha
sub
fst
pop
xor
mov
dec
jle
and
xchg
sti
xchg
jb
cmps
leave
test
popa
stos
mov
sar
mov
(bad)
arpl
mov
fisttp
loopne
inc
call
call
inc
rcl
sahf
and
cli
push
clc
fcmovbe
push
xchg
(bad)
jge
mov
stos
inc
adc
fild
lds
cmp
xlat
xor
xor
pop
jno
std
ror
sti
es
stos
(bad)
or
int
inc
jle
cs
sbb
mov
test
cmp
jp
jmp
add
test
jecxz
pop
bound
jecxz
shl
out
fild
retf
or
mov
lods
pop
mov
adc
outs
pushf
rol
sbb
mov
mov
rcl
xlat
data16
aam
push
pop
fiadd
bound
fsubr
xor
in
fdiv
mov
sbb
(bad)
pop
dec
in
cmps
pop
(bad)
adc
mov
enter
sti
mov
gs
(bad)
call
jns
popf
sbb
std
lahf
push
out
push
cmps
mov
inc
int3
imul
cmp
add
fs
scas
dec
sub
xor
mov
push
les
jmp
mov
add
lea
(bad)
pop
dec
pushf
mov
pop
addr16
ret
pushf
and
sbb
in
mov
repnz
jae
pop
dec
inc
arpl
sets
push
js
lods
aam
call
xor
in
mov
rol
mov
jae
push
stc
and
xor
inc
sub
xchg
xor
mov
idiv
or
clc
pusha
and
adc
ins
loope
xchg
and
or
adc
cmp
test
pop
loop
aaa
cli
push
movs
hlt
data16
scas
adc
out
fnstenv
mov
mov
adc
pop
xchg
push
push
daa
mov
xchg
pop
jg
and
rol
push
adc
jl
ror
jle
xchg
mov
popf
xor
mov
out
lods
dec
mov
sbb
sbb
sahf
mov
push
push
jmp
jnp
dec
fsubr
aaa
cmp
(bad)
or
and
fild
fiadd
cmp
sahf
push
call
xor
orps
out
repnz
outs
pusha
jb
jl
pop
push
cmps
dec
fcomp
clc
add
ret
push
or
in
pop
sbb
xchg
inc
mov
fstp
cmp
das
sbb
mov
shl
mov
test
inc
and
and
test
dec
and
je
jbe
dec
in
sahf
cdq
aaa
retf
sub
or
pop
test
adc
push
cmp
jl
and
bound
mov
es
cmp
mov
fild
lods
scas
lahf
fwait
push
jle
cli
(bad)
test
(bad)
cdq
and
sahf
(bad)
adc
retf
jne
dec
dec
mov
repz
mov
(bad)
mov
jmp
xchg
stos
mov
movs
int
arpl
mov
loope
ret
nop
inc
xchg
ja
ror
cwde
mov
mov
fcmovnb
and
add
pushf
adc
inc
mov
clc
leave
add
fs
dec
or
dec
or
cmc
push
fmul
imul
add
mov
inc
push
mov
bound
jl
jno
in
xchg
pop
(bad)
rcr
jb
push
add
cmp
xor
addr16
xchg
add
pusha
pushf
and
sub
mov
and
inc
and
mul
into
push
mov
mov
popf
ja
das
mov
xchg
lds
adc
shl
jbe
cmps
(bad)
fst
xchg
retf
and
cmp
outs
lea
sbb
les
cmp
sub
and
push
mov
inc
(bad)
ds
push
fild
jne
fdivr
mov
mov
add
cdq
dec
adc
cli
lods
scas
(bad)
ss
(bad)
rcl
add
cwde
adc
loope
mov
ret
jl
leave
jb
fwait
pop
xchg
pusha
nop
mov
add
mov
iret
fisubr
ss
mov
mov
pop
and
lock
leave
pushf
dec
xor
mov
dec
pop
jg
aad
fiadd
jg
or
mov
or
pop
test
cmps
mov
pop
ja
icebp
and
hlt
xor
retf
je
cli
repz
imul
cwde
mov
inc
clc
retf
fdivrp
xor
daa
mov
test
dec
sbb
int3
loope
pop
jb
sar
mov
lahf
mov
push
mov
ins
mov
dec
in
mov
rcr
loopne
in
mov
mov
out
int3
mov
jmp
ins
adc
aaa
stos
arpl
(bad)
mov
aam
in
adc
ret
push
bound
scas
adc
or
mov
adc
jecxz
(bad)
fild
ret
(bad)
adc
into
push
push
mov
sub
sar
scas
mov
test
dec
fstp
inc
fwait
retf
stos
inc
xchg
mov
aam
add
ss
std
mov
mov
sub
ins
sbb
push
jno
arpl
add
jbe
cdq
and
jbe
pop
lods
mov
sub
cmp
pop
sbb
stos
popf
mov
js
stos
adc
pusha
loopne
mov
call
push
ror
retf
ja
inc
mov
push
push
fiadd
inc
xchg
lea
mov
jmp
into
xor
inc
dec
add
pusha
jno
imul
xor
fcmovnu
sahf
pusha
dec
in
neg
shl
sti
movs
inc
clc
push
inc
out
aaa
call
inc
sbb
shr
movs
sbb
cmp
mov
or
idiv
popf
dec
or
in
dec
aad
jge
dec
mov
cmp
mov
aam
jmp
dec
jno
cmp
ret
sar
icebp
mul
and
outs
movs
lods
dec
cs
repnz
mov
ret
mov
ficomp
(bad)
mov
inc
lock
ins
cmps
in
push
and
fwait
sbb
push
loop
push
clc
imul
inc
inc
adc
lea
addr16
jno
icebp
mov
inc
repz
mov
int
xchg
shr
call
and
(bad)
cmps
loop
mov
push
xchg
retf
scas
dec
je
adc
jg
add
out
adc
xor
enter
cmc
call
ficom
xchg
or
jmp
les
mov
jne
inc
loopne
test
push
jg
mul
xor
fldenv
mov
ja
adc
xor
ret
mov
imul
sti
int
std
mov
dec
scas
mov
add
and
int3
xchg
mov
scas
or
icebp
in
rol
mov
ins
out
mov
adc
dec
mov
inc
sub
mov
xor
(bad)
mov
cli
mov
sti
imul
cmps
xor
fidivr
gs
aad
fdivr
xchg
adc
and
aas
mov
retf
xchg
fsubr
jle
dec
std
lods
jbe
add
xchg
jmp
mov
repnz
loope
retf
push
retf
mov
jno
jp
out
outs
dec
or
out
(bad)
hlt
adc
push
cdq
aam
jns
sahf
out
loop
hlt
hlt
loopne
mov
test
scas
call
scas
mov
push
out
data16
pop
data16
cli
test
cmc
stos
out
push
sbb
in
fnstsw
sub
enter
or
mov
into
sbb
cmp
pusha
xchg
pop
jmp
popf
sbb
sub
cli
cmc
xchg
sub
and
stc
repnz
jb
lea
shr
xchg
mov
cli
loop
add
popa
loopne
cmp
pop
or
adc
xchg
mov
test
xor
mov
imul
xor
aad
cmp
add
cmps
and
ins
sbb
jmp
sub
mov
inc
and
jle
pop
xchg
imul
scas
mov
mov
sti
pop
mov
sti
shrd
xchg
sub
jae
stos
retf
loope
add
sahf
jl
dec
outs
jg
idiv
xlat
jmp
xor
mov
push
cli
inc
rol
das
mov
call
mov
xor
and
movs
cld
outs
scas
xor
out
(bad)
adc
lock
jmp
xchg
cmp
stos
pop
xor
loop
dec
loopne
push
cdq
dec
and
call
add
pop
cmp
mov
js
mov
pop
and
xchg
in
stos
out
dec
xchg
outs
retf
and
int3
pop
test
fs
div
jns
movs
js
fwait
and
idiv
leave
ret
out
xlat
(bad)
add
addr16
stos
adc
pop
scas
mov
adc
cmp
inc
adc
pop
jns
aad
jbe
inc
fsubr
ins
xchg
gs
xchg
inc
mov
pop
loope
fwait
sbb
scas
cld
ins
(bad)
cdq
push
pop
fist
mov
pop
cmp
push
ret
xor
mov
jmp
xchg
xchg
ins
jns
js
pop
fimul
xor
ins
add
fild
push
out
push
out
dec
sahf
rol
aad
mov
cdq
add
mov
dec
outs
mov
sbb
adc
imul
scas
pop
loopne
xchg
push
or
movs
inc
sbb
sub
mov
retf
leave
cmp
ins
pop
leave
sub
mov
mov
fiadd
push
iret
push
inc
dec
adc
fisttp
shl
hlt
xchg
int
scas
sbb
popf
outs
(bad)
into
add
nop
mov
adc
sbb
js
mov
retf
push
inc
adc
jb
xchg
aad
addr16
cdq
dec
sti
fbld
jbe
adc
sahf
cdq
fsin
add
mov
call
or
fnsave
dec
mov
out
sbb
icebp
add
inc
pop
jecxz
int3
das
pop
in
popa
dec
and
(bad)
xchg
test
fdivr
es
into
(bad)
sahf
(bad)
mov
mov
out
sub
inc
ror
push
mov
cmp
inc
lods
xchg
sbb
cmp
cmp
push
shl
push
movs
bound
and
out
adc
jmp
sub
or
fcom
sub
dec
mov
call
ss
fsubrp
pop
jge
dec
cdq
push
fsubr
ds
dec
in
mov
(bad)
or
fcom
loop
cmc
in
ficom
retf
inc
xor
inc
nop
(bad)
ds
mov
mov
jmp
push
adc
mov
pop
inc
pop
cmp
xchg
lods
cli
push
ss
adc
mov
das
stos
sbb
mov
call
fs
nop
loopne
shl
ins
int
es
xchg
fist
add
pop
test
retf
mov
and
or
and
push
pop
(bad)
test
cmc
pop
cld
aad
movs
popf
pop
das
in
cmp
dec
pop
aad
inc
lods
jmp
(bad)
out
js
repnz
addr16
shl
nop
xor
xchg
jae
sbb
dec
add
adc
adc
xor
adc
pop
jnp
xchg
lods
push
jl
bound
ret
jl
cmps
inc
vcvtsi2ss
xlat
mov
pusha
movs
aam
ficom
mov
push
mov
js
mov
aaa
fld
(bad)
sbb
jae
(bad)
sti
and
cmp
rcr
imul
push
cmp
sbb
mov
pop
scas
cli
ins
jge
jns
inc
adc
xor
ficomp
leave
jge
push
mov
push
dec
pop
neg
imul
shl
push
out
cmps
int
mov
or
ss
xchg
sbb
call
clc
xor
dec
xor
pop
rcr
scas
and
inc
xor
dec
maxps
lahf
fldenv
push
stos
(bad)
(bad)
scas
and
cmp
push
and
jbe
out
in
xchg
cmc
dec
pushf
cmc
cdq
push
jle
push
lods
shl
(bad)
ja
es
(bad)
cmp
mov
pop
(bad)
dec
fsub
dec
es
mov
mov
stos
sahf
in
inc
rol
xchg
or
(bad)
cdq
mov
push
in
js
xor
mov
cmp
xor
or
mov
xor
xchg
sbb
leave
popa
test
nop
in
mul
imul
in
add
xor
inc
mov
out
adc
add
stos
push
shr
lahf
in
mov
mov
and
dec
mov
ins
enter
ret
imul
inc
jno
sub
adc
and
xchg
sub
rcr
lods
mov
mov
mov
arpl
jb
add
mov
aad
mov
loopne
(bad)
pop
dec
(bad)
jp
lahf
mov
mov
imul
cmp
sbb
into
call
cmps
cmp
push
stc
(bad)
call
mov
mov
push
and
and
mov
test
adc
pop
fidiv
inc
mov
cmps
pop
mov
inc
mov
adc
sbb
and
gs
sbb
adc
cmp
gs
dec
rcr
sbb
std
addr16
sar
dec
sbb
xchg
(bad)
ins
jg
mov
test
sbb
out
jb
or
stc
push
sub
mov
push
mov
(bad)
or
push
mov
test
hlt
cmp
bound
jle
rcr
mov
enter
(bad)
call
fisubr
dec
jecxz
or
aam
repnz
imul
mov
aas
ss
mov
repnz
adc
fnstenv
push
sub
loope
lods
cmp
and
fwait
aaa
iret
lds
xchg
loop
push
dec
shr
cmc
aad
shl
pop
aas
(bad)
fcom
sub
add
inc
int3
in
loope
movs
jns
out
aam
mov
fstp
aas
sbb
repnz
dec
mov
mov
(bad)
xor
dec
lahf
mov
test
out
push
not
inc
stc
and
inc
icebp
mov
call
mov
sbb
xor
jne
fmul
(bad)
in
icebp
xchg
dec
(bad)
hlt
jg
dec
fadd
je
dec
int3
mov
sete
or
in
shl
sbb
lea
aam
jnp
(bad)
xor
pop
sub
inc
push
jg
adc
and
sahf
fldenv
or
cdq
stc
jne
jb
dec
jb
dec
inc
add
add
int3
ss
push
mov
mov
dec
jnp
cmp
inc
sar
ss
pop
dec
popa
mov
rol
sahf
int3
in
popa
pop
shl
(bad)
or
shr
xchg
fwait
js
ds
and
sub
dec
dec
in
fcomp
dec
adc
gs
push
retf
or
cdq
and
neg
xor
imul
(bad)
jo
xchg
cmp
inc
xor
popa
push
icebp
push
jbe
or
and
in
icebp
adc
add
movs
stos
adc
repz
mov
aas
mov
push
pop
and
cmps
push
add
cmps
pop
jo
push
cwde
add
dec
in
in
cdq
or
test
inc
stos
lock
xor
pusha
aad
stc
and
pop
(bad)
mov
leave
push
mov
(bad)
jp
and
ds
hlt
sub
call
mov
sbb
sbb
jnp
gs
xor
mov
shr
cwde
out
fldenv
pop
xor
scas
jae
pop
mov
lock
dec
and
jae
mov
pop
sub
in
dec
ds
sub
jmp
fiadd
fsubr
push
xlat
je
mov
mov
mov
mov
test
push
popf
mov
dec
dec
and
push
fnstsw
fsub
xchg
ret
pop
mov
adc
(bad)
fisubr
dec
mov
inc
lea
mov
ret
cmp
mov
or
dec
retf
add
lock
inc
mov
push
sar
aad
push
call
outs
adc
jno
lds
int3
mov
addr16
sbb
icebp
test
or
mov
(bad)
mov
push
ins
sub
jo
movzx
xchg
and
aas
enter
pop
adc
mov
sbb
push
inc
and
mov
lahf
js
and
cmp
push
hlt
xlat
jnp
in
outs
shl
pop
fisubr
das
inc
clc
dec
cwde
shl
inc
jge
sub
or
inc
lahf
mov
imul
dec
jmp
dec
pop
int3
ins
pmaxsw
add
(bad)
popf
and
int3
movs
inc
adc
jle
inc
sbb
retf
aam
pop
clc
dec
sub
fst
mov
lock
pop
add
xor
test
jg
fist
adc
jb
in
lods
mov
std
(bad)
dec
lea
(bad)
pushf
das
ins
mov
cmp
inc
or
out
scas
mov
jbe
fcomp
mov
fcmovu
mov
jmp
and
cmc
push
scas
jo
cmp
or
outs
sub
pop
and
lock
jecxz
daa
es
cmp
arpl
pop
jecxz
adc
lock
dec
movs
pop
leave
(bad)
shl
popf
sub
pop
push
dec
adc
push
adc
scas
(bad)
jae
inc
mov
daa
xlat
xlat
mov
dec
mov
pop
les
jbe
and
je
xor
dec
loop
mov
cmp
leave
cmp
dec
inc
les
jp
leave
mov
call
or
fnstsw
les
cmp
adc
dec
mov
pop
fst
dec
out
xchg
lds
dec
(bad)
cmp
and
xor
inc
pop
scas
sub
jb
(bad)
sbb
scas
inc
into
dec
scas
mov
out
dec
imul
shr
repz
sbb
xchg
xor
cmc
jg
adc
jae
cli
xchg
pop
xchg
xlat
inc
jp
xchg
test
adc
daa
sahf
push
or
mov
sub
jmp
bnd
pop
xchg
dec
sti
xor
jne
ror
jmp
sub
out
in
ficom
jb
cmp
fnstenv
into
fstp
sahf
inc
cmc
dec
std
call
hlt
fld
mov
sbb
push
test
bndldx
aad
call
stc
adc
nop
sub
xor
mov
or
sub
adc
or
add
pop
dec
pop
outs
es
int
cmp
test
jbe
and
mov
in
sub
and
div
push
cmp
int
or
sub
in
sub
xchg
cmp
jmp
mov
push
xlat
jo
mov
jb
aas
repnz
add
mov
mov
rcl
jo
out
or
or
dec
dec
ins
pop
imul
cmp
leave
jno
scas
mov
cmp
or
cmp
sub
les
jbe
mov
cmp
loope
xchg
addr16
pop
inc
xchg
sbb
jecxz
mov
addr16
jb
xchg
fadd
mov
jno
push
movs
jns
mov
ret
add
add
fild
lods
(bad)
sub
pop
dec
or
js
repz
sub
xchg
daa
outs
fbld
cmp
cwde
pop
xchg
and
call
sbb
xchg
dec
push
(bad)
sub
push
mov
pushf
in
ds
pusha
cmc
inc
inc
scas
fild
add
jmp
add
mov
scas
aam
inc
mov
and
imul
adc
test
stos
fnstsw
(bad)
out
pop
jg
repz
mov
xor
sbb
pusha
cmp
mov
hlt
cmps
pop
loope
inc
and
sbb
or
rcl
inc
dec
repnz
mov
mov
pop
in
inc
fild
leave
sub
sahf
and
in
sub
add
sbb
jp
(bad)
(bad)
(bad)
mov
aad
sahf
jmp
enter
sar
push
retf
aam
cmc
add
cmp
aas
popa
ja
xchg
cmps
das
stos
fs
aaa
mov
sbb
pushf
jecxz
mov
xor
jmp
popa
mov
scas
pop
inc
and
call
jp
sbb
dec
inc
sahf
jnp
xchg
outs
cs
test
outs
cwde
icebp
jno
dec
bound
jne
movs
pop
daa
aad
and
jge
pop
loope
jge
sbb
inc
call
call
scas
movs
sub
movs
je
mov
rol
jmp
test
in
mov
jg
fist
test
fidiv
(bad)
sar
out
pop
cli
inc
into
daa
test
iret
jecxz
scas
xchg
pop
shr
arpl
cmp
shl
icebp
mov
mov
mov
mov
mov
xchg
fdivr
outs
push
jns
push
cmps
bound
inc
pop
or
int
cmp
xor
idiv
out
loop
fstp
popf
cld
mov
push
shr
test
or
fwait
pop
out
push
or
inc
sub
jo
mov
pop
gs
cmp
(bad)
add
pop
leave
ficomp
js
fcmovnbe
lods
fld
xor
push
fs
rep
outs
mov
bound
cmovg
sbb
xchg
out
(bad)
cmp
pop
popf
mov
mov
jns
push
mov
add
out
fiadd
pop
sub
add
pop
sbb
cmps
inc
or
daa
mov
loop
cwde
mov
lahf
fistp
add
dec
sbb
xchg
xchg
adc
popf
add
hlt
inc
mov
adc
fisub
push
dec
xchg
(bad)
mov
lds
cld
cmps
(bad)
jecxz
sub
aas
enter
bound
mov
pop
xlat
mov
push
xor
xchg
fst
ss
xor
ins
push
pop
ret
push
xchg
adc
cmp
jecxz
lods
push
pop
and
repz
xor
pop
fadd
hlt
cwde
mov
add
ss
repz
les
(bad)
hlt
std
aas
lds
mul
sti
(bad)
retf
dec
jns
sub
sti
sub
pop
das
mov
(bad)
mov
sub
sub
jg
jmp
in
jb
jge
pop
push
out
add
lods
leave
sbb
adc
je
jl
inc
xor
sbb
jl
xlat
lods
bound
sub
jae
movs
push
lods
sbb
ja
dec
jg
mov
js
rol
inc
stos
mov
or
bound
movs
es
mov
sbb
inc
push
add
sti
xor
out
fcomp
and
adc
(bad)
xor
icebp
jmp
nop
or
add
ins
movs
push
loop
lea
push
and
cmp
xchg
out
(bad)
pop
lahf
jmp
aad
mov
clc
mov
jnp
int
(bad)
pusha
fcomip
and
lods
add
hlt
jecxz
stc
ins
retf
fist
mov
enter
sbb
sub
cld
clc
adc
in
retf
outs
jae
sbb
or
sub
sti
test
mov
movs
or
cmc
cwde
mov
inc
jl
ins
push
cli
sbb
imul
jne
das
ss
ss
mov
push
push
cld
mov
hlt
pusha
rcl
sar
pop
ins
add
jns
mov
stc
rcl
ficom
sub
out
xchg
push
mov
sbb
loop
mov
mov
ror
ret
(bad)
stos
(bad)
arpl
inc
retf
es
or
push
push
in
movs
sub
sub
out
jp
mov
fdivr
push
mov
sbb
pop
adc
cmp
ds
cmp
(bad)
xchg
xchg
or
scas
int3
xchg
test
mov
inc
sbb
inc
dec
or
dec
repz
xchg
push
mov
ret
xor
mov
and
mov
adc
inc
pusha
(bad)
test
mov
adc
lods
repnz
loope
fsub
inc
ror
push
mov
push
int3
lea
das
ror
sahf
xor
jp
pop
xor
mov
jb
ins
movs
push
enter
sub
daa
jg
or
cs
cmp
pop
je
adc
mov
mov
jecxz
out
mov
in
out
out
xor
pop
cmp
fldcw
inc
rcr
pop
dec
mov
jmp
mov
mov
dec
adc
pop
(bad)
fmul
mov
pop
mov
not
or
les
cmp
jl
fmul
iret
mov
cmp
out
and
inc
cwde
es
sar
outs
addr16
xchg
test
mul
or
xchg
repz
retf
cwde
das
ins
push
fisttp
mov
sti
mov
fdivr
les
or
sub
ret
cmp
adc
sub
inc
dec
dec
mov
test
ins
lods
push
out
ja
call
out
(bad)
fnstcw
push
or
leave
inc
mov
xchg
dec
cmps
xor
mov
mov
lds
xchg
(bad)
icebp
xor
nop
es
stc
sbb
push
push
and
loopne
leave
add
mov
lahf
movs
leave
pop
mov
(bad)
js
mov
cwde
adc
or
movs
pop
in
mov
jmp
jge
mov
and
sub
push
dec
push
shr
pop
mov
cdq
call
or
jg
adc
xchg
xchg
xchg
fisubr
jae
cmp
shl
push
movs
add
mov
cmp
jmp
xchg
daa
cmps
xchg
es
outs
sub
pop
mov
sub
nop
stc
not
outs
out
sub
or
jb
xchg
loope
ins
out
and
(bad)
imul
shl
(bad)
add
or
xchg
or
outs
inc
les
and
mov
dec
sbb
dec
xor
mov
fmul
sbb
int3
fmul
jle
cmp
mov
adc
sbb
ss
popa
pop
adc
cmp
stc
pop
sbb
hlt
int
shl
cmp
add
out
in
jl
rcr
xor
mov
fdivr
daa
test
stos
sub
inc
mov
stos
imul
aad
stos
fs
std
out
es
jl
and
add
or
pop
lds
loope
movs
inc
sbb
(bad)
dec
mov
push
out
test
xor
mov
mov
test
repnz
leave
lods
mov
sti
or
pusha
daa
cmps
pop
loop
js
jmp
dec
in
pop
loopne
push
add
shr
cmps
or
clc
scas
ins
jmp
fwait
std
jae
nop
out
mov
push
sbb
pop
inc
push
cmp
aad
sbb
xor
mov
js
inc
and
add
xor
sbb
adc
xor
stc
aaa
fnsave
js
sub
dec
in
stc
scas
inc
inc
cmp
in
stos
push
pop
repz
mov
pop
inc
pop
call
sti
sti
rol
jmp
pop
add
jo
std
add
mov
push
stos
mov
shr
and
xor
or
ja
jl
mov
jb
mov
fld
ret
mov
mov
imul
adc
(bad)
mov
adc
std
(bad)
in
shr
jl
fadd
jo
jmp
mov
adc
push
les
aad
loope
and
aad
xor
hlt
or
pop
scas
and
add
rol
add
xor
xchg
lods
lds
sub
mov
cwde
fist
ror
ret
pop
daa
outs
cmp
je
mov
push
push
imul
push
push
imul
xchg
arpl
cmovo
xchg
aaa
aad
div
add
cmp
dec
ins
push
cmp
xor
mov
shr
jmp
xor
sub
xor
add
ins
in
jmp
xchg
jae
inc
fld
out
sub
or
dec
push
push
movs
out
std
adc
xor
in
or
scas
js
test
stc
aam
ds
fcomp
cmp
cld
xchg
mov
and
(bad)
jmp
and
mov
inc
push
icebp
push
ins
or
test
shl
sub
jb
bound
out
inc
inc
xchg
xchg
pop
inc
or
icebp
dec
sbb
fdivr
and
ins
or
retf
dec
sbb
mov
xor
cmp
dec
out
mov
jp
enter
jg
leave
push
mov
dec
movs
and
(bad)
adc
jb
pushf
cli
lods
inc
call
jae
jge
sub
ret
mov
cwde
dec
mov
scas
ret
popf
lods
cmps
loope
jb
push
loop
add
mov
pop
movs
dec
xor
xor
(bad)
pop
xor
repz
mov
dec
add
or
scas
push
cdq
gs
ficomp
out
loopne
faddp
retf
dec
sbb
and
lea
mov
inc
ss
xor
mov
test
mov
jbe
mov
(bad)
(bad)
xchg
repnz
add
cwde
sbb
ror
scas
retf
pusha
xchg
push
daa
add
mov
lods
call
repz
sbb
repz
rcr
iret
dec
repnz
sub
in
retf
pop
inc
dec
pop
mov
mov
push
push
mov
cld
les
mul
sbb
enter
adc
rcr
jns
fld
arpl
aas
jns
push
xor
inc
push
ins
fstp
idiv
jl
inc
mov
xchg
push
dec
push
retf
pusha
mov
into
stc
cmp
loopne
add
ret
inc
sbb
xor
into
aaa
jno
inc
ins
and
fld
jno
sbb
aaa
pop
pop
or
inc
nop
lds
or
push
ins
ret
clc
cmc
mov
aas
ss
jne
cmps
mov
pop
push
mov
test
les
aaa
rcr
jl
adc
xor
jp
int3
sbb
jbe
in
test
std
sub
mov
lock
fdivr
sti
std
lock
adc
jp
loope
ror
retw
jne
pop
and
fsubp
sub
jle
jmp
cmp
mov
imul
push
pop
aam
mov
nop
out
ret
ss
xchg
pop
aad
cmp
mov
(bad)
xor
aam
mov
enter
add
(bad)
ja
pop
pop
inc
mov
nop
icebp
out
rol
aaa
aas
lahf
mov
cld
es
and
mov
xor
bound
cmps
mov
pop
jns
push
jo
outs
dec
(bad)
mov
pop
(bad)
aaa
cmp
xchg
cmps
add
adc
out
inc
adc
les
jno
sub
adc
push
into
jge
mov
cmp
jmp
data16
addr16
sbb
jp
push
ins
nop
sbb
sbb
xor
xchg
sahf
cmp
and
dec
and
out
add
ss
and
sbb
cmp
inc
sbb
add
cld
add
jnp
lods
jecxz
je
js
sbb
cmp
mov
mov
mov
js
cs
cmp
xor
mov
push
aaa
imul
mov
pusha
jo
mov
pop
dec
movs
sbb
mov
mov
add
add
mov
jl
sbb
(bad)
scas
outs
cmp
aad
and
add
cmps
xchg
mov
aam
pop
dec
lods
xor
shl
pop
cmp
call
(bad)
jge
adc
retf
call
aam
push
xlat
xlat
int3
mov
and
cmc
mov
iret
ins
out
hlt
mov
pop
addr16
mov
cmp
imul
xor
es
repz
mov
into
std
retf
push
mov
xchg
test
inc
xor
outs
jecxz
popf
jne
gs
cmp
mov
mov
xlat
imul
push
lahf
xlat
jno
ja
sbb
cmp
jge
sti
shufps
sbb
add
inc
outs
aam
push
mov
sbb
mov
das
xor
lea
jne
pop
loopne
sub
push
ret
popf
xchg
sub
inc
cmp
inc
ror
out
int
sar
fnstcw
push
jecxz
fs
scas
leave
(bad)
inc
outs
mov
pop
repz
mov
cmp
imul
sbb
xor
bound
mov
out
xor
mov
repnz
jecxz
dec
je
and
adc
or
test
test
sbb
push
pop
test
or
jp
pop
jmp
jmp
movs
sar
ins
xchg
scas
ret
xor
add
and
jne
imul
cmp
loope
xor
dec
push
imul
in
imul
iret
adc
(bad)
dec
sub
mov
lods
dec
cld
addr16
(bad)
push
jb
mov
shl
mov
xchg
idiv
and
lahf
xlat
inc
adc
mov
cmp
jae
xor
enter
das
in
test
cs
outs
mov
jmp
pop
(bad)
add
dec
std
push
cmp
lock
repz
lods
push
dec
sbb
push
shr
lods
ret
cmp
or
cmc
cmps
push
mov
sbb
xchg
fdivp
loop
shr
ds
sub
iret
sub
sub
push
stc
test
aam
inc
xchg
sbb
push
in
rol
jmp
(bad)
or
inc
jns
stc
fidiv
dec
fs
dec
pushf
mov
inc
dec
daa
je
add
push
sub
or
es
push
cld
xchg
cmp
jae
push
outs
cmp
add
push
daa
mov
xor
adc
inc
pushf
sub
out
sbb
pop
dec
dec
fisub
sub
hlt
xor
scas
lahf
fbstp
jns
lea
cmps
push
cmp
push
popa
pusha
dec
rcr
das
ss
adc
or
push
daa
out
out
mov
scas
leave
adc
aad
push
imul
dec
mov
inc
sahf
push
outs
jmp
mov
add
std
in
or
cmp
cdq
dec
rcr
push
adc
push
sbb
sahf
sub
push
aaa
hlt
pop
mov
xor
mov
or
inc
sub
cmp
xor
lahf
jmp
bnd
retf
fsubp
pop
inc
ja
dec
bnd
push
jge
push
mov
or
cmp
inc
out
shl
push
not
aaa
cld
sub
popa
jnp
je
jns
outs
dec
add
xchg
xchg
mov
lods
jns
mov
sub
lods
adc
ins
mov
adc
popa
sub
sub
movs
or
mov
ficom
mov
cwde
and
jg
cdq
cmp
push
repz
jns
dec
inc
into
xchg
pop
jp
push
dec
jno
inc
lds
ins
jp
sub
adc
lds
jo
mov
fst
das
inc
adc
jne
jp
out
sbb
mov
dec
jle
dec
fdiv
xchg
in
pop
mov
clc
adc
int3
inc
mov
pop
jle
push
xchg
adc
mov
sbb
nop
cmp
xor
rcr
or
test
add
jb
jmp
test
add
(bad)
call
sub
lods
ds
dec
inc
jle
int3
inc
sub
sbb
scas
or
call
sbb
pushf
jo
add
leave
jle
sbb
pop
outs
dec
nop
(bad)
mov
fiadd
ds
scas
mov
or
adc
pop
lock
call
add
repnz
cmp
std
dec
jle
test
push
or
(bad)
test
cmp
pop
inc
sub
popa
and
add
clc
loope
mov
jns
and
es
shl
inc
inc
lods
and
mov
(bad)
or
mov
imul
jmp
pop
mov
mov
pop
(bad)
cdq
rol
aas
ds
repz
sub
xor
pop
mov
mov
inc
dec
in
inc
or
push
push
(bad)
ret
ja
aam
jmp
adc
mov
fsubr
cwde
or
mov
xchg
sbb
jbe
xor
add
in
fld
push
cmps
jge
sbb
cld
sub
mov
lods
xchg
or
jns
inc
cmp
xlat
pop
jo
dec
mov
pop
cld
retf
test
lods
push
sbb
jecxz
test
cmc
popa
mov
xor
adc
mov
repnz
test
mov
cmps
or
dec
pop
push
(bad)
push
xor
push
pop
lods
test
dec
inc
or
test
(bad)
xlat
es
jg
xchg
pop
sub
ja
mov
dec
adc
mov
pop
mov
or
xchg
inc
(bad)
cmp
add
test
jnp
add
and
stos
repnz
xor
jo
inc
cmp
sub
out
mov
sbb
adc
outs
ins
(bad)
mov
push
sub
adc
and
sbb
std
cmp
dec
pop
loop
xor
cmps
arpl
data16
or
(bad)
call
arpl
adc
dec
pop
outs
adc
test
lods
sbb
cli
pop
mov
lahf
push
adc
or
and
lods
inc
adc
mov
jg
adc
jle
scas
xchg
xchg
fcmove
jmp
(bad)
hlt
call
mov
xor
sbb
cmc
hlt
or
adc
jne
jne
jo
(bad)
dec
xor
in
sbb
mov
or
call
dec
pop
out
mov
hlt
ins
pop
stos
jne
js
pop
in
jnp
imul
loope
(bad)
aaa
nop
push
shl
pop
xor
mov
imul
(bad)
sub
or
sbb
push
enter
ret
mov
fimul
into
push
push
cmps
dec
mov
stc
in
cs
dec
push
xchg
enter
xchg
stc
inc
retf
popf
cli
jne
daa
mov
retf
sti
sbb
inc
and
out
jns
xor
jbe
sbb
not
clc
mov
cmp
inc
fisubr
into
or
jge
mov
push
loopne
sub
out
add
out
and
movs
cmps
test
xor
lods
mov
out
mov
xchg
push
adc
xchg
fcmove
test
iret
push
js
idiv
inc
out
fsubr
fld
outs
dec
fimul
pop
push
lahf
pop
sbb
test
pop
scas
aas
jno
pushf
pop
cmp
sub
push
mov
js
xchg
jg
sub
push
inc
aad
pop
enter
mov
sub
(bad)
repnz
xor
out
jle
dec
inc
or
stc
cmp
retf
sahf
jno
pusha
push
xor
dec
pusha
mov
dec
test
outs
enter
xchg
loope
icebp
mov
pop
stos
xor
addr16
cdq
jnp
jge
test
repz
bound
cmps
inc
push
jle
mov
add
mov
cmps
or
add
das
pop
mov
xchg
sub
jmp
dec
call
add
dec
in
outs
ins
popa
xor
dec
ins
cmp
add
stc
pushf
mov
xor
mov
mov
mov
(bad)
sahf
cmp
test
sti
mov
dec
imul
stos
vmovapd
mov
pop
mov
add
mov
mov
scas
cmp
push
mov
dec
mov
pop
sub
jnp
into
ret
(bad)
pop
pop
std
cld
lahf
jmp
movs
sbb
mov
pop
xor
jl
js
fstp
xor
inc
ja
jle
shl
add
ja
(bad)
jp
push
movs
repz
gs
sub
cmp
std
in
dec
push
mov
call
dec
cmp
inc
shl
mov
sbb
jmp
or
imul
sbb
sti
pop
push
pusha
out
add
sbb
(bad)
mov
call
pop
js
and
test
push
mov
nop
jecxz
adc
fmul
les
jmp
dec
bound
test
jae
dec
test
xlat
repz
outs
bound
inc
sti
mov
inc
ins
mov
int3
mov
cdq
cli
jp
push
mov
aad
jg
push
loopne
(bad)
in
test
and
xchg
gs
outs
int3
xchg
cmp
movs
out
xor
jle
mov
das
sbb
xchg
xchg
pop
dec
fsub
cld
imul
stc
cmp
jmp
lods
aaa
mov
or
(bad)
lds
pop
in
lea
mov
shl
add
push
dec
inc
pop
loopne
arpl
mov
(bad)
movs
sbb
sub
cmp
adc
mov
and
adc
call
pop
mov
fcmovbe
push
sbb
not
call
jle
adc
cmp
cmp
inc
out
jne
sub
popf
cmp
std
jl
sbb
pop
cld
enter
or
jno
push
jl
(bad)
pushf
out
hlt
push
ja
adc
(bad)
sbb
or
daa
xchg
out
jno
in
loope
mov
dec
inc
cld
sti
xlat
jge
jnp
sahf
iret
out
or
popf
push
arpl
enter
clc
test
jecxz
cmc
push
mov
imul
and
stc
pop
hlt
std
mov
mul
(bad)
or
clc
retf
cmp
aas
cs
or
mov
mov
popa
fild
xchg
mov
in
pop
les
imul
xchg
jmp
sbb
aad
mov
sbb
imul
mov
sub
xchg
push
cld
cmp
cdq
add
in
test
out
push
cli
mov
inc
pop
inc
mov
and
cmp
mov
std
int3
inc
mov
stos
test
jns
mov
(bad)
scas
daa
mov
outs
add
inc
pop
mov
fdiv
and
fs
mov
fistp
test
mov
mov
mov
mov
(bad)
mov
inc
jno
sbb
inc
jecxz
mov
(bad)
fcom
aas
out
out
jg
retf
sti
daa
inc
inc
mov
push
or
test
pop
(bad)
mov
les
loop
sub
inc
loop
jo
inc
ins
iret
int
add
or
sti
push
sbb
and
jns
(bad)
fimul
pop
pop
sub
inc
inc
adc
add
lahf
cmc
es
pop
xchg
scas
jg
imul
ds
add
sbb
add
add
pop
sub
fld
inc
jbe
xchg
(bad)
cmc
int
adc
daa
jb
push
mov
xchg
cmps
mov
mov
or
lods
mov
and
fstp
jns
mov
dec
fucom
out
mov
cmc
cmp
ins
fisub
jp
mov
push
adc
or
call
jg
imul
mov
jno
mov
addr16
imul
xchg
adc
popa
lods
jns
shl
jge
inc
xor
dec
add
jl
sbb
xchg
mov
mov
or
(bad)
dec
pop
lds
inc
pop
int3
cmc
fnsave
fldcw
jae
hlt
bound
mov
jbe
das
dec
icebp
fisttp
into
stos
sbb
cdq
in
push
mov
mov
ja
xchg
lods
mov
mov
cmp
push
mov
loop
aam
(bad)
pop
sub
add
jg
ror
jb
nop
aaa
add
xlat
xchg
mov
rcl
mov
fsub
movs
pushf
add
lea
add
push
js
and
sub
or
dec
pop
ja
jmp
and
and
jmp
xchg
xor
neg
fld
nop
cmp
xor
(bad)
sub
mov
jg
addr16
pop
or
cmp
mov
sahf
aad
rcr
rol
int3
fsubr
mov
xor
lahf
maskmovq
test
add
inc
in
inc
xor
push
imul
adc
fsub
retf
test
loop
add
mov
or
xchg
lahf
mov
push
jbe
push
int
imul
cmp
dec
push
and
fdiv
idiv
cdq
sti
jge
cmps
xchg
xor
stos
xchg
mov
lock
stc
repz
cmp
enter
pop
sbb
xchg
jg
xchg
ficomp
or
(bad)
inc
outs
arpl
popa
imul
test
dec
pop
leave
fidivr
fdiv
add
std
cli
sahf
stos
pusha
test
movaps
(bad)
js
jnp
ror
push
test
and
ss
xchg
cmp
dec
test
stos
jmp
cli
dec
mov
sti
pop
xor
iret
inc
jg
or
and
pushf
ins
arpl
and
xchg
sbb
jge
ret
cdq
mov
xchg
mov
mov
mov
retf
jo
push
or
jmp
cmp
or
push
add
ds
push
(bad)
frstor
push
mov
lea
sbb
aaa
mov
pushf
push
mov
pop
dec
imul
mov
ds
dec
xlat
jg
pop
repnz
push
jp
xor
leave
mov
retf
sub
jge
mov
xlat
call
add
imul
jo
mov
fld
mov
js
sub
add
inc
sub
mov
push
call
loopne
lods
xor
inc
xchg
xor
(bad)
or
imul
push
xor
lods
push
pop
dec
retf
push
sar
cs
imul
bound
jecxz
sbb
dec
dec
or
add
fld
adc
ins
retf
cmp
pop
xchg
add
sub
out
(bad)
push
and
test
inc
hlt
mov
sub
inc
jge
push
xchg
push
jns
outs
pusha
scas
sbb
mov
fs
(bad)
mov
jmp
shl
cmc
mov
fidiv
sub
cmps
mov
cmps
das
in
ja
out
lods
pusha
and
push
sbb
ret
test
(bad)
les
adc
jmp
data16
shl
dec
aaa
js
call
xchg
rcl
out
inc
mov
out
and
xchg
call
mov
cmp
add
jmp
gs
sub
leave
iret
test
ret
push
fstp
pushf
adc
aad
add
repz
adc
gs
dec
pop
mov
scas
or
repz
or
mov
ficomp
jae
xchg
cli
jo
inc
push
jb
mov
lahf
push
push
mov
call
ins
jns
aaa
popf
push
inc
xlat
inc
mov
xchg
cli
test
sbb
sbb
mov
in
push
mov
jecxz
xor
out
inc
(bad)
test
addr16
retf
xor
pop
addr16
inc
mov
xlat
outs
in
repz
xchg
jmp
sbb
xor
sub
and
shl
push
pop
sub
lods
imul
out
call
repnz
dec
aad
out
pop
mov
sub
icebp
les
adc
add
fdivp
dec
fwait
sub
mov
call
push
adc
or
shl
ffree
cmp
call
or
int
ss
xlat
xchg
cmps
sub
js
mov
cmc
out
rcl
aam
test
enter
inc
sahf
xor
mov
and
enter
jne
sub
push
or
adc
ss
pop
ins
dec
(bad)
adc
inc
jecxz
jb
ss
fwait
lea
mov
mov
pop
xor
add
sbb
test
inc
jns
movs
aam
mov
test
jmp
cmp
ds
jmp
pop
dec
(bad)
mov
adc
movs
and
jg
or
fwait
rcl
jne
mov
(bad)
adc
sub
xchg
js
leave
mov
jae
movs
push
call
outs
stc
jmp
add
test
out
(bad)
sbb
pop
xor
outs
dec
aad
scas
pop
push
into
pop
push
retf
rol
scas
fisub
lds
dec
add
xchg
mov
into
sti
imul
bound
sbb
sti
cmp
in
cmp
sbb
ja
scas
(bad)
and
cmp
adc
dec
std
push
inc
nop
adc
adc
cwde
leave
pop
sbb
dec
adc
loop
out
sbb
push
pop
into
cmp
xchg
aad
fs
stos
neg
jge
or
mov
hlt
cld
rol
daa
pop
mov
jmp
and
test
pmuludq
loope
xor
dec
lock
mov
mov
cmp
push
outs
add
popf
mov
push
and
pop
mov
and
ins
int
and
or
test
mov
dec
cmp
test
push
mov
dec
pop
dec
ror
pop
push
ret
test
cmp
add
mov
out
pop
pop
int3
dec
pusha
and
push
xor
sub
call
add
(bad)
adc
dec
jl
dec
out
arpl
bound
pop
int
mov
dec
xchg
in
mov
push
inc
dec
loop
retf
jle
cmps
(bad)
out
xor
jbe
push
push
retf
jmp
cmp
xlat
fnstcw
inc
xor
and
xchg
push
les
scas
leave
xchg
xchg
cmp
sahf
out
dec
loopne
(bad)
jg
das
jno
and
sbb
mov
push
add
addr16
mov
pop
jb
pushf
mov
aas
add
sub
sub
push
sub
pusha
std
and
mov
push
sar
add
cld
jge
sub
gs
jg
jmp
mov
jbe
in
lds
arpl
movs
inc
inc
or
mov
jb
mov
fidiv
and
out
pop
jecxz
aad
scas
(bad)
mul
cdq
sbb
or
xor
and
xor
into
xchg
cmp
sar
or
(bad)
repnz
ds
sub
pop
addr16
dec
inc
push
mov
mov
addr16
ja
test
inc
cmp
mov
push
dec
into
shr
iret
nop
inc
loope
pushf
sub
mov
cmp
ss
jbe
xchg
sub
or
outs
sbb
inc
call
and
and
push
retf
pop
dec
xchg
lds
addr16
pop
and
test
sar
js
imul
push
ja
ins
xor
fnsave
daa
ins
leave
push
sbb
add
or
test
mov
jg
in
int3
dec
ja
mov
xchg
push
pop
jmp
mov
xchg
iret
imul
pop
imul
sahf
xchg
pop
dec
sahf
jp
pop
jbe
cmp
or
mov
outs
lock
jne
cmp
pop
stos
push
lock
mov
loop
mov
rol
jmp
pop
jne
sbb
sub
add
mov
ret
dec
push
aad
push
gs
jl
mov
pop
add
pop
inc
jb
and
push
dec
mov
pop
out
push
(bad)
pop
test
fs
inc
or
jmp
sbb
mov
mov
xchg
hlt
lock
mov
add
mov
test
push
mov
and
out
xchg
jl
ret
(bad)
and
pusha
add
sbb
xchg
jmp
movs
add
stos
nop
sbb
mov
jnp
sbb
test
jo
cmps
out
push
arpl
adc
sbb
in
sub
mov
mov
pop
loop
icebp
ins
mov
xor
cmp
mov
mov
push
add
stos
pushf
lea
mov
ret
xchg
cmps
fidivr
or
sbb
pop
(bad)
push
ds
ja
in
xlat
ds
lds
data16
sub
mov
add
out
cmp
mov
mov
cmp
sbb
test
mov
mov
or
add
mov
popa
or
loope
mov
mov
fldenv
xchg
dec
cmp
mov
cmp
in
pop
add
retf
out
pusha
mov
sbb
add
xchg
mov
and
push
jmp
dec
jns
cmp
ret
js
mov
lods
cs
stos
xchg
mov
fwait
inc
aad
dec
sbb
ja
int3
das
outs
cs
fcmovnb
in
dec
sbb
xlat
sub
fmul
das
xchg
sahf
mov
in
sub
mov
add
jnp
jp
(bad)
aaa
or
jmp
in
(bad)
xlat
mov
mov
push
sub
ins
adc
mov
(bad)
jp
cli
add
call
add
std
outs
pop
daa
or
(bad)
cmp
imul
pop
jmp
pusha
out
je
js
xchg
nop
inc
or
movs
sub
leave
sub
cmps
scas
div
imul
mov
mov
shl
xor
das
stos
fwait
jae
inc
sub
dec
push
xor
fiadd
adc
jns
or
mov
adc
add
ja
mov
cmp
loop
and
jle
jecxz
cdq
out
dec
pop
jmp
pop
push
add
xor
lods
mov
or
stos
sub
shl
inc
arpl
cld
or
mov
and
adc
daa
les
cmp
imul
int3
arpl
outs
add
cmp
sti
movs
inc
outs
popf
push
cmp
test
inc
addr16
or
ja
cs
shr
imul
push
jmpw
(bad)
xchg
ins
ret
cmps
out
sbb
mov
cmc
shld
mov
pop
xchg
jmp
rcl
imul
dec
(bad)
loopne
jne
push
push
pop
sbb
aad
sbb
dec
nop
inc
dec
movs
iret
sbb
jnp
xor
leave
ds
and
stc
lea
cmp
jne
retf
jge
sub
stos
mov
jmp
test
xor
les
mov
cmp
(bad)
xor
mov
push
adc
sahf
iret
pop
sti
pop
(bad)
scas
popa
(bad)
in
pop
inc
(bad)
aam
cmc
sar
pop
adc
scas
and
popf
cli
mov
xchg
adc
mov
mov
pop
push
push
push
xor
sbb
fist
jb
sub
sbb
mul
add
or
loope
inc
ss
dec
sahf
jmp
mov
ins
sbb
dec
shr
das
imul
out
shl
lock
int3
or
xor
adc
mov
repnz
das
sar
xchg
jecxz
xor
sahf
hlt
(bad)
js
mov
sbb
fadd
sub
xor
(bad)
xchg
imul
scas
lods
xchg
arpl
mov
mov
jne
adc
fs
dec
fist
test
add
push
mov
xchg
(bad)
fisttp
jmp
jnp
int
sbb
es
pop
mov
enter
xchg
and
jne
jp
retf
pop
or
pop
cmp
cmps
lods
and
inc
call
popf
lds
scas
pop
sar
int3
dec
sbb
or
mov
mov
fcom
cmc
jmp
loope
and
int3
add
das
sub
push
rcl
add
das
(bad)
ds
arpl
xchg
popf
out
out
out
dec
jno
jle
push
rcl
push
hlt
lods
je
jns
shl
ret
cmps
stos
ret
xchg
mov
jb
mov
sub
cdq
stos
outs
add
dec
lahf
mov
test
mov
add
dec
pushf
add
in
or
outs
inc
ret
sti
int3
cmp
add
add
mov
dec
fdivp
psubsb
rol
cwde
xchg
jno
leave
push
lea
aad
mov
addr16
loopne
push
mul
xchg
out
call
jp
xor
inc
xchg
(bad)
push
jb
in
mov
push
push
call
mov
push
call
add
sahf
in
cmc
mov
in
cdq
dec
int3
adc
sub
dec
and
ins
jp
pop
sbb
mov
popf
in
pop
pop
add
sub
jne
add
dec
int
inc
mov
icebp
(bad)
mov
retf
cwde
(bad)
sbb
(bad)
ss
xchg
mov
lahf
arpl
into
and
and
sub
dec
xor
stos
imul
neg
sub
and
push
mov
ror
movs
xlat
sub
xchg
xchg
dec
add
sub
(bad)
adc
pop
int
or
adc
stos
aam
(bad)
pop
pop
jbe
stc
test
jecxz
and
aam
push
push
popa
push
mov
ret
adc
or
pop
lahf
xor
cmps
add
ffree
adc
push
sub
push
loop
pushf
adc
leave
(bad)
xor
pop
(bad)
mov
dec
fmul
xor
jmp
fdiv
or
inc
inc
shl
lods
sbb
fs
shl
(bad)
xchg
cmps
sbb
retf
stos
cld
fadd
cmc
retf
test
fsub
or
and
and
retfw
out
cmp
das
sbb
(bad)
pop
shl
jno
stos
add
sub
dec
pop
(bad)
loopne
adc
mov
and
inc
sbb
outs
sub
and
jmp
fwait
les
fisttp
jge
add
push
xchg
test
mov
cmp
add
mov
popa
dec
stos
sub
into
jno
test
or
xor
cli
sbb
adc
add
jle
dec
ret
adc
aad
arpl
jecxz
cmc
add
cmp
scas
jge
test
movs
push
xor
repnz
jle
cmp
xchg
xor
dec
adc
cmp
lods
cld
test
push
sbb
repnz
std
bnd
mov
das
lock
pop
mov
mov
inc
retf
movs
jns
cmp
scas
ret
push
rcr
cmp
movs
jo
jae
jge
xor
arpl
and
sub
clc
gs
xor
daa
leave
mov
mov
ds
fisttp
jae
push
loopne
std
adc
aam
adc
xchg
rcl
ins
aad
out
mov
pop
jns
gs
adc
push
imul
dec
cmp
push
ins
xor
push
cwde
mov
adc
je
mov
push
lds
mov
shl
jns
pop
ror
push
das
das
scas
in
adc
jne
push
popa
movs
outs
(bad)
loopne
into
add
bound
stos
mov
and
call
add
jae
pop
fidiv
push
xchg
lods
dec
push
cmp
add
repz
lea
jmp
neg
and
and
inc
dec
dec
fidivr
adc
je
scas
mov
jbe
jge
fmul
int
and
mov
xchg
inc
sbb
mov
sahf
in
mov
push
retf
jmp
xchg
or
jo
add
push
mov
jl
ja
mov
loop
leave
sub
arpl
lds
jecxz
cmps
adc
xchg
mov
sbb
ror
inc
cmps
cmps
das
push
pop
adc
lods
mov
ret
(bad)
hlt
rol
test
push
fidiv
int3
sbb
cmps
or
in
jnp
dec
and
data16
(bad)
cmovge
js
bound
xchg
lea
dec
lods
jl
ret
(bad)
in
aad
mov
or
lock
and
xor
pop
ret
or
outs
push
neg
and
pop
fnstsw
movd
dec
shr
(bad)
mov
lock
inc
push
xchg
sti
or
adc
aaa
fadd
aas
call
cs
push
lahf
(bad)
cmp
gs
ins
aas
pop
cmp
js
dec
nop
enter
pop
jge
jle
pop
imul
shl
cmp
push
jmp
and
inc
cs
sti
(bad)
in
sub
cmp
add
xchg
mov
out
popa
mov
(bad)
jno
jae
inc
mov
jmp
lock
mov
sbb
pop
ja
cwde
ds
cmp
aas
mov
mov
mov
xchg
pushf
lock
enter
jl
imul
inc
xor
jmp
push
sub
sbb
pop
fxch
je
ret
cmps
inc
iret
add
mov
and
or
cmps
shl
int
mov
(bad)
in
sub
cmp
cwde
pop
sbb
aad
(bad)
jo
push
and
(bad)
rol
sti
cmp
rdpmc
lahf
ret
cdq
cmp
add
jnp
push
loope
fisub
cmp
call
and
repnz
hlt
fst
jmp
sub
daa
cmp
sub
pop
stos
sub
pop
mov
(bad)
outs
iret
inc
mov
push
daa
outs
addr16
les
hlt
mov
pop
dec
aas
js
push
sbb
jns
ins
test
mov
xlat
add
jl
imul
sbb
ror
or
loop
es
bound
adc
shr
jns
fstp
mov
pusha
add
pushf
imul
enter
mul
push
pop
xchg
pop
cmps
push
call
and
imul
bound
and
mov
in
push
not
push
(bad)
mov
ret
and
in
cmp
mov
outs
test
loopne
push
fist
mov
jmp
jnp
add
lods
(bad)
adc
cmp
movs
cmp
push
sub
(bad)
lahf
std
mov
add
pop
stos
inc
or
mov
push
stc
icebp
repz
dec
cmp
sbb
mov
mov
out
je
sub
jmp
and
add
and
xor
pop
ror
mov
xchg
in
push
mov
mov
sti
test
and
mov
pop
lea
std
test
in
cld
or
(bad)
cwde
stos
inc
les
shl
cmp
fucomi
dec
jl
mov
lock
cmp
jo
fild
dec
cwde
mov
fs
outs
mov
popa
clc
sbb
jns
or
cs
ror
xchg
sbb
arpl
call
push
clc
lods
inc
jg
jmp
add
and
and
imul
add
sub
mov
adc
xlat
mov
sbb
mov
cwde
fiadd
jbe
popa
or
inc
dec
leave
mov
push
sti
sbb
and
add
std
nop
mov
pushf
(bad)
js
stos
in
add
in
outs
loop
jo
iret
mov
rcr
pop
int3
popa
fwait
sub
and
mov
es
ins
sbb
xchg
adc
outs
mov
ror
adc
push
popf
xchg
cmp
sbb
pop
repnz
push
pusha
cmp
sub
push
mov
inc
inc
stc
and
and
jno
adc
xchg
add
or
call
mov
cs
mov
and
xor
lea
fdivrp
rcl
adc
loop
retf
dec
shl
mov
xor
fidiv
in
out
jo
cs
push
sbb
int
in
clc
or
add
xor
push
sbb
adc
ins
inc
xchg
sahf
adc
mov
fist
js
cmp
outs
ins
das
lock
nop
fisttp
or
inc
fmul
jb
jmp
call
pop
push
outs
sti
mov
jb
jmp
ins
(bad)
ins
inc
inc
fdiv
xchg
cmp
sub
(bad)
mov
test
out
add
xchg
test
jmp
adc
cmp
es
xchg
clc
imul
fdivr
sbb
div
ins
inc
test
and
fcom
and
sub
call
fdiv
and
pop
inc
adc
fwait
add
leave
ss
adc
pop
fsubr
adc
xchg
and
clc
mov
mov
aaa
retf
arpl
scas
stc
stos
and
pop
fisub
jb
daa
outs
pusha
cdq
cmp
xor
mov
xor
xchg
cld
cld
js
pop
ins
fistp
stos
pop
loop
and
lds
and
fidivr
pop
idiv
cmp
fisub
pop
out
ins
and
xor
das
xlat
aas
jp
sub
or
mov
sbb
mov
ds
jecxz
(bad)
movd
pop
fcomi
pop
cmp
xchg
pop
data16
push
scas
xor
mov
sub
mov
retf
push
add
mov
popa
fdivr
iret
push
shl
(bad)
popf
or
jecxz
hlt
jp
and
repnz
jmp
xchg
add
sub
cdq
sar
fstp
pop
retf
aad
push
jae
mov
nop
add
jbe
pop
fld
imul
ins
mov
push
fwait
pop
mov
shl
out
repz
dec
cli
pop
scas
out
sub
or
(bad)
xor
mov
sar
jae
or
sar
cld
pop
lods
dec
shr
(bad)
cli
and
mov
mov
push
fsubr
fadd
sub
arpl
dec
sbb
push
lds
sub
push
popa
and
pop
adc
(bad)
stc
push
xchg
jmp
(bad)
jmp
(bad)
jl
inc
imul
add
cmp
xor
out
lods
sbb
add
ja
dec
es
mov
outs
inc
ins
(bad)
outs
xchg
dec
cmp
dec
aaa
jge
stc
aaa
jo
outs
sti
xor
fwait
pop
dec
add
sub
xchg
ret
sar
or
and
scas
fwait
repz
pop
or
mov
loop
xor
out
mov
sahf
cli
jmp
or
aam
cmps
in
jmp
xor
and
inc
or
outs
test
dec
mov
mov
test
xchg
cli
dec
and
scas
(bad)
push
int
sub
dec
js
mov
in
adc
mov
pop
jmp
mov
lods
in
test
push
movs
ror
xchg
cmps
scas
jne
pop
jg
mov
addr16
adc
dec
rcl
sub
(bad)
retf
push
mov
pop
push
ja
adc
xchg
jle
popa
push
imul
jge
mov
push
mov
ins
int
icebp
test
mov
sbb
and
stos
scas
pop
fimul
push
xor
mov
std
and
mov
cmps
mov
xchg
lods
mov
jno
nop
add
(bad)
fmul
xor
pop
movs
or
aaa
mov
push
adc
mov
shl
push
jo
call
daa
jno
outs
daa
jo
loopne
stc
dec
add
retf
loop
xchg
mov
push
mov
in
(bad)
data16
shl
repnz
fcmovnb
push
ins
fst
cli
fmul
and
imul
add
xchg
push
fcomp
ja
push
push
je
not
pop
mov
imul
test
push
icebp
loope
fdivr
mov
push
pop
cs
push
clc
or
cdq
pop
inc
xor
lods
mov
mov
cli
retf
out
(bad)
enter
jl
in
pop
cld
out
fcom
pop
outs
enter
(bad)
jecxz
xchg
jge
mov
xchg
scas
into
sbb
outs
imul
dec
and
mov
cmps
popf
inc
stc
mov
gs
aaa
push
pop
add
loop
mov
mov
push
xchg
into
sti
push
adc
les
adc
ja
mov
add
pop
cli
mov
mov
or
rcl
addr16
adc
les
add
ins
ret
push
cmps
mov
add
in
mov
xchg
add
mov
dec
jmp
into
jbe
add
mov
pusha
jp
(bad)
cmp
mov
pop
cmps
jns
inc
in
stos
ret
stos
push
(bad)
adc
shl
push
adc
push
inc
sbb
xchg
mov
jnp
jle
inc
ja
push
add
add
js
xor
sbb
push
(bad)
ds
cmp
out
imul
test
add
jns
dec
cwde
fwait
mov
sub
mov
mov
mov
and
test
fidiv
mov
div
jbe
jns
popa
mov
pusha
jnp
xchg
imul
retf
mov
das
mov
jbe
aad
out
shl
cmps
xor
mov
pop
jne
mov
into
cli
jb
or
shl
dec
inc
stc
bound
(bad)
lea
lods
movs
aad
mov
mov
ror
mov
rcl
sub
add
and
popa
pusha
out
daa
arpl
outs
xchg
data16
out
sbb
retf
les
fwait
xor
ja
mov
(bad)
pop
cli
cmp
aas
mov
aas
in
pop
and
add
sbb
retf
dec
fld
xchg
fdivrp
inc
enter
push
loopne
inc
push
fidiv
add
jl
mov
or
dec
and
pop
popa
xor
std
in
or
dec
sub
cmc
sub
stos
jae
outs
mov
xor
add
stos
mov
and
push
and
loop
add
lar
cmp
retf
cmp
fnstenv
sub
xchg
shl
loope
push
lods
outs
mov
or
cs
dec
div
rol
add
dec
mov
or
adc
mov
push
jmp
sub
test
or
xchg
adc
daa
inc
sbb
or
repnz
push
(bad)
jg
jbe
popf
popa
pop
daa
push
jle
and
xchg
push
or
inc
push
xor
mov
loopne
cmp
xor
leave
repz
mov
xchg
mov
dec
out
push
cmp
cli
mov
add
pop
push
shr
lods
cdq
retf
ss
leave
in
push
in
jge
mov
pop
xchg
adc
cmp
push
imul
scas
cwde
inc
paddsw
movs
fcomip
pop
repnz
not
test
cmp
ror
push
dec
test
inc
mov
dec
pop
adc
mov
mov
aaa
or
sti
jmp
out
lock
mov
jmp
cmp
mov
add
in
lock
or
movs
push
jb
cdq
into
dec
jg
scas
mov
(bad)
retf
xor
cdq
popf
scas
pushf
mov
cs
mov
xor
stos
jne
push
(bad)
in
jge
repz
push
xchg
aaa
xchg
movs
fstp
stos
jl
pusha
sub
and
nop
jbe
mov
pop
enter
pop
mov
and
dec
push
pop
add
inc
outs
ja
or
jecxz
fsubr
inc
enter
sahf
enter
xchg
adc
mov
add
mov
in
inc
mov
jne
mov
xlat
or
sbb
inc
mov
leave
in
ds
sbb
je
hlt
mov
mov
sahf
add
xchg
xchg
cdq
mov
es
jmp
ja
sub
(bad)
lods
stos
rcl
inc
xor
rcr
ins
nop
or
mulps
push
in
adc
imul
mov
push
jecxz
sub
add
fidivr
ret
rcr
dec
inc
retf
jl
fcom
sbb
repnz
sti
mov
cli
test
mov
rcl
mov
xor
outs
dec
adc
or
ds
or
call
adc
and
cdq
mov
adc
cmc
das
invd
stos
push
or
fisttp
mov
cmc
in
cmc
lds
jle
jmp
mov
inc
(bad)
push
adc
dec
push
nop
ss
imul
sub
retf
mov
xchg
adc
add
js
jmp
add
xchg
sub
mov
pop
push
scas
jo
popf
repz
(bad)
sahf
sti
aad
inc
dec
out
inc
jle
mov
pop
cli
jae
jne
or
ret
jle
mov
mov
adc
pop
inc
jg
push
dec
stc
cli
scas
(bad)
enter
inc
mov
aad
jge
or
or
sti
call
movs
daa
xchg
jg
cs
cmp
out
xchg
add
popf
mov
shl
push
and
jg
xlat
loop
das
sbb
push
jnp
out
mov
addr16
or
or
ins
lds
addr16
add
sbb
or
fdiv
ds
xchg
adc
lock
fld
rol
inc
test
inc
mov
or
das
data16
pusha
xor
into
popa
push
sub
imul
fild
push
mov
pop
std
dec
inc
call
sub
leave
stos
pop
or
mov
test
adc
xor
je
sbb
adc
cdq
pushf
mov
cwde
mov
pop
and
or
(bad)
and
mov
mov
shld
jmp
das
and
mov
pop
pop
mov
adc
sbb
mov
add
jmp
in
repz
dec
xlat
js
add
adc
and
frndint
fstp
ret
inc
push
add
inc
loop
stc
mov
fwait
rcr
clc
call
jnp
movs
popf
jle
xchg
js
pop
je
enter
pop
iret
mov
add
cmp
clc
sahf
mov
mov
aam
nop
bound
in
test
or
shl
mov
neg
jbe
aad
xchg
movs
pop
inc
sbb
xrelease
fs
(bad)
popf
jecxz
(bad)
adc
cmp
xor
lock
lock
das
out
jle
sbb
mov
add
dec
xchg
jle
aam
(bad)
fdiv
jnp
push
int3
mov
enter
or
and
dec
sub
cmp
mov
arpl
(bad)
push
mov
push
fs
sbb
mov
adc
arpl
pop
mov
inc
js
dec
shl
sbb
add
jns
jecxz
cmp
stc
mov
mov
mov
mov
rol
dec
mov
push
jecxz
xchg
call
dec
gs
pop
jp
xchg
xor
mov
ja
xchg
hlt
popa
mov
add
inc
inc
test
and
pop
sub
mov
aad
cmp
mov
or
ror
sbb
jg
in
and
mov
pop
dec
mov
pushf
shl
cmp
frstor
fcom
push
pop
pop
dec
jl
pop
xor
lahf
add
mov
ins
add
and
aas
add
xlat
push
popf
fidiv
pop
scas
imul
popa
sub
mov
shr
wbinvd
pop
add
pop
xor
mov
add
popa
ret
push
push
(bad)
outs
cli
pop
dec
push
mov
mov
sub
mov
and
jnp
scas
jne
out
outs
ret
inc
push
jae
nop
lahf
dec
dec
mov
xor
and
jmp
mov
test
push
push
mov
push
aad
sbb
lock
xchg
sub
arpl
rcr
jecxz
push
mov
test
nop
int3
fcmovnu
int3
ret
mov
pop
cmps
cmp
in
jecxz
sti
jge
inc
cmp
pop
mov
nop
add
mov
jge
sbb
jge
adc
push
arpl
dec
push
mov
scas
(bad)
loope
out
shl
aad
cmc
aad
jb
cli
mov
cmp
nop
(bad)
ss
ja
mov
out
loopne
ret
je
hlt
mov
xor
in
stos
nop
addr16
mov
sub
jecxz
aad
xchg
mov
data16
mov
daa
sbb
sbb
sub
test
not
mov
lods
shr
(bad)
cs
xchg
aad
mov
das
or
(bad)
(bad)
inc
jns
dec
sub
xchg
cmp
fisttp
cmc
mov
inc
popf
test
xlat
fs
js
in
pushf
jmp
jb
mov
xchg
out
sbb
add
adc
bound
push
dec
cwde
dec
pop
nop
push
mov
jno
push
mov
neg
sbb
aaa
repz
stos
es
fist
mov
mov
fwait
lahf
dec
mov
inc
ins
dec
xchg
mov
add
push
(bad)
loope
xchg
in
mov
cmps
mov
jne
cmps
cdq
ret
inc
jle
jo
xchg
xchg
test
pop
repnz
adc
retf
in
mov
push
lock
xor
es
push
out
sbb
or
jp
mov
mov
mov
jo
sbb
test
xor
mov
add
mov
mov
test
stos
cmps
cmp
jmp
adc
inc
in
push
and
(bad)
stos
add
out
cmp
rol
push
sub
or
(bad)
and
js
and
pop
test
xchg
add
addr16
jl
fs
hlt
push
jmp
xchg
adc
fisubr
push
jmp
ss
pop
dec
ja
call
cmp
test
out
aad
sbb
jg
xor
test
pop
arpl
inc
mov
sub
aaa
arpl
mov
fcomp
mov
rcl
js
mov
pop
pop
mov
cmp
jbe
xlat
imul
push
mov
daa
aaa
xlat
push
push
pop
cli
test
pop
push
push
xor
ins
imul
frstor
mov
(bad)
adc
lea
pop
sub
out
pop
in
sbb
jecxz
cmp
aam
jbe
sub
xlat
pmaddwd
sbb
mov
xor
cmc
jb
add
mov
cmp
add
or
jecxz
or
int
icebp
int3
ins
mov
pop
inc
mov
or
pop
sub
xor
xchg
ror
cdq
pop
retf
(bad)
adc
adc
adc
call
div
add
adc
hlt
icebp
push
retf
jle
sub
inc
(bad)
cmp
mov
pop
aad
retf
jne
lock
aad
sbb
mov
cmp
dec
add
sbb
sahf
push
les
inc
adc
iretw
(bad)
mov
imul
cmp
or
(bad)
cmp
jno
jmp
clc
add
or
pop
dec
sbb
add
lods
mov
xchg
pop
je
fistp
cwde
rcr
mov
xchg
int
xchg
arpl
xchg
jae
and
mov
pop
pop
(bad)
out
movs
and
push
(bad)
cmp
ss
sbb
cmps
movs
mov
cmc
add
fs
xor
xadd
adc
les
in
cmp
push
pop
leave
jp
(bad)
mov
cmp
add
mov
jmp
xlat
test
aad
xor
mov
adc
idiv
or
pop
xor
sbb
dec
mov
inc
cmovnp
push
pop
icebp
adc
outs
pop
inc
shl
pop
cmps
sbb
call
push
add
cmp
mov
and
cmp
sahf
xchg
lock
push
ins
pop
sbb
xor
mov
mov
jmp
add
xor
sbb
movs
jns
jmp
daa
fmul
outs
push
frstor
leave
xlat
test
adc
pusha
in
cld
and
scas
add
add
lea
fbstp
or
mov
(bad)
pop
or
fs
stos
dec
mov
mov
stos
out
ret
jp
push
sbb
loope
mov
jg
pop
add
mov
jmp
push
inc
push
in
jae
in
cmp
hlt
xchg
dec
dec
or
cdq
aaa
cmps
pop
cmc
xlat
push
ja
xchg
fidiv
xchg
jbe
mov
mov
sub
jp
lea
(bad)
lods
int
mov
outs
xchg
rcl
cs
sbb
(bad)
aad
jno
dec
xlat
mov
adc
jae
jle
icebp
pop
iret
movs
sub
imul
aas
inc
and
clc
(bad)
mov
cmps
dec
add
pop
mov
js
push
cmp
fucom
in
dec
cmp
repnz
xlat
sbb
ret
scas
or
mov
cmps
ret
xchg
sub
leave
push
add
dec
jb
or
jmp
xchg
and
cmp
add
push
je
ins
push
cmp
cmps
lahf
leave
lds
arpl
cmp
stos
ss
sub
mov
div
adc
out
iret
ins
mov
leave
or
cld
in
mov
mov
ja
mov
nop
test
aas
fidivr
enter
dec
mov
in
mov
sub
ret
inc
mov
inc
iret
pop
rol
jg
mov
fild
jno
ja
fcomp
loope
je
call
mov
(bad)
shl
mov
sub
in
mov
popf
dec
xor
test
pop
xchg
pop
bnd
mov
imul
in
xchg
inc
cs
adc
sbb
shl
dec
out
pop
xor
call
imul
outs
lock
sbb
lahf
xchg
loop
jae
or
ffreep
(bad)
cmp
icebp
add
mov
rcl
dec
dec
call
sbb
xchg
in
cmps
sbb
imul
arpl
imul
add
les
nop
dec
test
(bad)
mov
sub
(bad)
mov
push
inc
in
xchg
mov
bound
test
xlat
pop
jl
clc
test
cmp
push
imul
mov
aas
or
jmp
dec
mov
sbb
xor
adc
pop
push
mov
mov
mov
scas
outs
es
shl
pop
and
icebp
mov
cdq
add
sub
ss
(bad)
cld
dec
dec
rcl
sub
pop
jae
arpl
pop
and
data16
fcom
bound
pushf
test
(bad)
std
(bad)
mov
pop
test
aaa
push
data16
(bad)
and
shl
inc
scas
sbb
mov
push
mov
and
cdq
push
outs
mov
pop
test
dec
cwde
and
mov
push
int
stos
push
inc
mov
imul
and
icebp
jb
(bad)
push
xchg
lods
xlat
std
jmp
xlat
or
mov
sahf
cwde
xlat
adc
add
dec
sub
in
or
xor
lods
xlat
ds
mov
out
out
stc
in
test
or
fwait
fs
xor
push
into
push
cwde
sbb
test
ss
inc
push
test
arpl
pop
call
xchg
hlt
enter
cmp
sbb
in
add
retf
das
aas
add
enter
jecxz
arpl
sbb
xchg
cs
mov
hlt
in
les
push
ss
xor
rcr
adc
push
xchg
sar
ja
push
mov
bound
mov
test
loope
mov
push
jae
scas
jb
loopne
jo
or
mov
push
cmp
mov
(bad)
xchg
jge
jecxz
xor
mov
xor
lock
jo
pop
aad
loop
test
pop
outs
inc
xchg
leave
pop
int
repnz
xor
push
adc
outs
clc
xor
xchg
xlat
mov
and
xchg
mov
sbb
mov
xor
add
sub
das
mov
mov
inc
add
inc
pusha
mov
stos
mov
fwait
jb
pop
add
pop
dec
(bad)
sub
xchg
fs
or
test
pop
test
adc
lds
push
sbb
cld
nop
inc
mov
or
mov
jb
outs
sbb
ror
push
cmp
das
seta
addr16
mov
pop
inc
scas
(bad)
and
adc
xchg
jnp
sub
addr16
cs
cwde
or
imul
call
pushf
jo
sar
inc
jge
push
fnstsw
xor
inc
add
shl
movs
adc
retf
or
mov
movs
ror
mov
stos
loope
dec
mov
fs
sub
lods
mov
sub
xchg
inc
repz
(bad)
clc
mov
imul
or
jb
jmp
test
(bad)
push
call
cwde
xchg
add
xchg
or
fs
xchg
inc
add
mov
out
jne
jno
pop
jo
jg
clc
push
test
mov
mov
sub
and
repz
daa
lock
pop
fisttp
lsl
loop
dec
inc
or
retf
idiv
xor
(bad)
jno
into
das
mov
ret
nop
cmc
xchg
jbe
jmp
jo
pop
je
mov
dec
cmps
xor
sbb
sahf
out
popa
pop
pop
shl
fmul
mov
retf
push
jno
xor
xchg
xchg
sbb
pusha
mov
dec
xchg
(bad)
fcomi
cmp
sahf
addr16
nop
and
pop
pop
ins
pop
popf
mov
imul
imul
or
sahf
loop
arpl
rcl
aam
lods
dec
sub
add
sbb
out
daa
xchg
int
aaa
push
xchg
pusha
jns
pop
push
(bad)
icebp
mov
repz
xor
dec
and
stos
xchg
imul
add
mov
int
mov
mov
cmps
xor
out
mov
lods
lods
mov
mov
shl
cmp
mov
jbe
loope
adc
mov
fild
dec
inc
xchg
aas
fld
xor
jne
cmp
add
pop
pushf
cmps
in
out
repnz
mov
(bad)
xor
and
inc
cwde
test
loop
inc
loop
cld
fisttp
dec
xor
jecxz
jmp
mov
fmulp
add
cmp
int3
setge
cmp
mov
out
(bad)
jmp
jns
xor
jle
dec
(bad)
cmp
mov
mov
pop
xlat
sbb
jbe
xor
scas
push
movs
mov
sbb
and
adc
lods
pop
jne
popf
mov
cmp
into
lods
(bad)
repz
xchg
push
lock
dec
add
and
inc
pop
inc
mov
cmp
sub
and
or
cmp
sub
mov
inc
jae
jnp
jp
xchg
out
inc
into
mov
push
cmp
dec
call
inc
stc
mov
push
sub
repnz
mov
xchg
gs
ret
xlat
xchg
fidiv
mov
xlat
adc
dec
ins
mov
push
xor
ins
and
nop
mov
add
popa
cmp
arpl
lods
pusha
dec
cmp
arpl
cld
pop
add
jne
loopne
pop
jo
sub
xor
dec
call
repz
mov
(bad)
rcr
(bad)
aaa
xchg
stos
add
arpl
stos
stc
cmp
push
(bad)
in
adc
popf
jno
dec
stos
out
jns
push
mov
mov
cmp
test
pop
sub
retf
(bad)
mov
out
jmp
and
mov
adc
shr
fwait
loop
retf
aad
cmp
dec
rcl
xchg
and
mov
mov
and
xor
and
and
push
dec
or
xor
imul
and
in
mov
ja
jmp
mov
out
dec
and
nop
mov
lods
xor
xchg
jbe
mov
lahf
popa
js
pop
add
clc
call
and
cmp
add
mov
add
daa
or
fidivr
enter
mov
cmp
shr
xor
out
neg
inc
xlat
xchg
xor
xchg
cmps
push
adc
cmp
loop
sub
sub
sub
mov
ds
jp
push
imul
sahf
test
scas
mov
jecxz
sub
cmp
repz
movs
mov
stos
mov
daa
sub
cs
xor
ficomp
xchg
ret
rcr
cmp
sahf
cmc
(bad)
int
movhps
inc
pop
addr16
loopne
rcl
loope
fs
nop
shl
(bad)
push
adc
clc
cmp
mov
xchg
lods
mov
test
mov
push
aam
ret
cwde
js
dec
out
jo
test
mov
inc
das
(bad)
ja
pop
dec
ins
dec
mov
push
lahf
stc
out
(bad)
xchg
sub
lds
test
cli
mov
addr16
and
add
icebp
push
xor
jns
cmps
xchg
xchg
loopne
fstp
mov
adc
stos
(bad)
mov
push
push
das
xor
and
xor
cld
sbb
(bad)
pusha
das
mov
jge
test
daa
xchg
pop
les
es
push
inc
mov
mov
jle
push
fisub
div
inc
dec
(bad)
lds
loopne
cmp
imul
enter
inc
adc
mov
push
test
adc
fsub
mov
mov
imul
jle
jecxz
aas
and
mov
jge
jle
cdq
jge
enter
inc
mov
in
mov
push
(bad)
lahf
sub
movs
lock
xor
xchg
(bad)
leave
add
adc
mov
push
mul
mov
movs
stos
pop
int
imul
mov
mov
add
dec
dec
xor
js
sub
mov
scas
adc
idiv
xchg
mov
add
lods
jge
xchg
cli
or
or
push
sub
loop
push
mov
fadd
js
push
xor
jl
retf
pop
stc
cdq
pop
iret
mov
jecxz
jmp
mov
cmps
cmp
aad
imul
retf
iret
std
(bad)
cmc
aas
stos
pop
mov
dec
stos
xchg
mov
retf
mov
push
jp
xchg
stc
pop
in
adc
jbe
sbb
cs
inc
mov
in
adc
add
add
enter
pusha
call
xor
dec
icebp
retf
mov
sub
fcom
mov
sbb
sbb
loopne
sar
out
icebp
xor
lea
imul
inc
data16
push
lea
push
aad
fcomp
jno
movs
add
push
lock
nop
aad
mov
mov
and
in
sbb
dec
push
sbb
sub
fs
inc
and
and
xor
stc
push
retf
jns
icebp
dec
lds
pop
push
outs
cmp
pop
inc
jge
inc
test
ret
adc
pop
add
sub
mov
scas
call
rol
mov
inc
xchg
push
mov
adc
dec
push
add
inc
stos
std
aaa
mov
stos
adc
nop
jmp
inc
ja
aam
ins
cmp
sbb
xchg
(bad)
addr16
xchg
in
push
stos
out
mov
icebp
mov
and
into
push
xor
cwde
lods
mov
mov
cld
std
aas
cli
mov
popa
push
mov
xchg
inc
pop
dec
(bad)
in
sbb
or
ret
sub
lods
jmp
test
ins
ins
outs
aam
jno
test
push
mov
cmovnp
add
ret
and
adc
mov
aaa
sub
movs
add
mov
shr
lods
out
retf
aad
fwait
inc
mov
mov
or
sbb
mov
jmp
mov
mov
pop
pusha
jmp
mov
int3
and
pop
mov
or
cmp
and
mov
and
push
lods
mov
fist
lods
out
inc
push
in
les
shl
daa
into
inc
xor
ins
pusha
and
mov
int3
sub
jb
jae
or
fldcw
andnps
lock
inc
jge
mov
pop
les
arpl
je
xor
inc
sahf
sar
es
(bad)
mov
rcl
jg
xchg
lods
lock
cmp
add
xor
jg
cmp
addr16
push
pop
add
in
rcl
push
test
and
out
mov
and
jmp
push
sbb
jp
mov
je
daa
mov
and
jge
and
test
jno
mov
mov
add
movs
or
jmp
push
fcomp
enter
test
sub
in
add
cmp
inc
push
call
loopne
(bad)
cmp
cmp
xor
pop
or
hlt
in
mov
imul
test
leave
push
or
pop
jecxz
pop
and
arpl
jno
movs
(bad)
mov
pop
or
xor
daa
popaw
addr16
leave
enter
pop
push
push
push
fistp
aaa
rol
dec
ror
pop
aaa
arpl
pop
pop
or
sub
dec
lds
jo
push
call
inc
pop
not
test
call
leave
push
xor
aas
sahf
es
shr
dec
rcl
add
jae
pushf
add
jecxz
ins
mov
inc
gs
bound
aaa
cmp
aaa
jp
stos
in
(bad)
xor
xchg
into
pop
nop
std
xchg
xor
dec
dec
outs
mov
loop
ret
ror
pusha
fild
xor
jmp
outs
ror
add
push
and
pop
cmp
cli
fmul
cld
lods
lds
repnz
rol
cmp
pop
adc
mov
fstp
scas
shl
imul
fsubr
mov
popa
cmp
int3
mov
add
pop
stos
repz
xchg
gs
xor
jo
icebp
add
fwait
dec
nop
into
sub
sub
cld
div
cmps
xor
mov
fnstcw
into
mov
dec
pop
add
lods
lea
into
repz
test
xchg
ret
into
sub
fistp
add
lods
mov
pusha
outs
sbb
imul
lods
bound
mov
pop
in
mov
jl
xchg
add
pop
mov
push
aaa
xor
dec
addr16
out
call
sbb
(bad)
and
dec
scas
repz
(bad)
dec
jnp
int
cli
ret
cmps
sti
jno
adc
xchg
mov
inc
or
dec
(bad)
xor
push
std
adc
in
(bad)
dec
pop
jle
mov
inc
mov
cmp
lods
jg
(bad)
and
add
stc
aad
sub
cmc
scas
xor
inc
adc
mov
add
ret
fidivr
jbe
xchg
xor
mov
push
fld
je
mov
xchg
adc
rcr
or
bound
mov
jmp
and
xor
or
push
add
sti
inc
mov
movs
sub
adc
push
mov
xchg
jbe
xchg
cmp
mov
mov
jo
lahf
out
fdivr
cmc
test
jno
sub
ins
int3
cmp
inc
adc
push
mov
das
data16
add
outs
push
push
adc
int3
adc
out
push
inc
repnz
mov
ds
cmp
das
xchg
adc
hlt
add
mov
jbe
out
pop
cmp
repnz
es
adc
mov
mov
ret
dec
pushf
pop
sbb
(bad)
cdq
and
push
mov
push
or
inc
mov
xor
aaa
jl
(bad)
push
mov
fdivr
cli
inc
push
cmps
jnp
ret
push
data16
(bad)
fsub
dec
mov
cmp
and
dec
neg
jmp
jp
mov
cwde
xchg
call
stc
jb
cmp
pop
test
or
sub
push
push
or
jp
inc
jmp
adc
adc
ins
mov
sbb
fdivr
mov
arpl
mov
jae
gs
adc
test
call
test
push
lock
or
xchg
fbld
call
adc
mov
add
or
mov
xchg
sub
mov
aas
inc
cmp
xor
std
push
cwde
xchg
xchg
call
push
jne
outs
jno
(bad)
stc
mov
xor
cmp
mov
mov
jne
mov
test
adc
call
push
dec
neg
rcl
hlt
adc
xchg
aam
mov
sbb
dec
cmp
push
jmp
push
pop
mov
(bad)
(bad)
push
push
rcr
mov
cs
xchg
add
cwde
mov
mov
mov
icebp
out
mov
mov
in
addr16
sahf
and
cmp
sbb
outs
in
mov
xor
xor
repz
(bad)
out
mov
xor
push
movs
sbb
mov
push
cmps
test
loopne
or
xchg
jecxz
repz
cmp
jns
ds
jmp
sbb
jp
lahf
test
xor
push
xchg
pop
not
test
mov
ret
js
lods
cmps
in
dec
cmp
cld
jne
mov
scas
ret
mov
clc
pushf
jo
lahf
and
pop
hlt
or
or
stos
inc
imul
or
xchg
pop
push
push
dec
enter
(bad)
test
push
out
ja
push
xchg
arpl
add
inc
dec
cs
test
mov
fiadd
lods
mov
movs
cmp
xchg
addr16
pop
test
dec
in
shl
out
lahf
fcmove
cmp
mov
mov
mov
dec
(bad)
repnz
pop
mov
jge
pushf
xchg
mov
pop
push
sbb
xor
and
jno
jmp
mov
xchg
loope
pop
inc
xchg
icebp
inc
adc
pop
cmp
push
xor
adc
cmp
adc
cli
in
(bad)
jmp
xchg
or
add
jae
scas
cld
sbb
push
dec
mov
mov
pop
mov
adc
in
cmp
dec
(bad)
cld
iret
jb
jg
cmp
out
pop
pop
stos
mov
and
push
cmp
retf
je
clc
outs
ror
retf
comiss
xchg
call
(bad)
xlat
jmp
cmp
std
mov
bound
aas
dec
sbb
add
cmps
dec
retf
and
gs
inc
ret
rcr
fnstenv
cmp
ret
mov
pop
sub
lds
dec
hlt
enter
out
and
cmc
push
mov
inc
mov
enter
adc
pop
out
mov
adc
mov
test
(bad)
jmp
sbb
cmps
repnz
pop
mov
pop
pop
fisub
and
mov
inc
jns
shl
dec
adc
(bad)
imul
bound
inc
clc
push
jmp
push
mov
mov
pop
add
nop
retf
(bad)
and
mov
loopne
scas
fadd
push
jle
push
adc
out
movs
pop
fnstcw
ss
and
dec
mov
inc
mov
jge
dec
aad
mov
aam
inc
mov
xor
sahf
mov
dec
add
int3
xor
push
lods
xor
xlat
lods
mov
(bad)
cmp
push
retf
fsub
call
bound
aam
mov
lea
cdq
les
or
bound
out
push
mov
cmps
retf
jle
daa
imul
lods
xchg
push
or
ss
or
shl
push
sub
xor
sub
in
pop
addr16
or
sbb
dec
jg
mov
xchg
push
outs
lea
aam
sub
call
lock
mov
movs
xor
pop
retf
sbb
adc
icebp
test
call
pop
jmp
lea
jmp
add
xchg
sub
loope
call
mov
sbb
and
jnp
imul
adc
xchg
pop
mov
ror
(bad)
loop
adc
mov
clc
leave
das
jg
sti
ins
xlat
push
mov
cdq
aas
mov
push
pop
jg
call
call
(bad)
mov
push
dec
mov
cmp
cmp
pop
cmp
push
(bad)
movs
shl
dec
sbb
push
js
mov
out
or
mov
and
cmp
cmp
jmp
sub
jno
sbb
popf
icebp
into
and
mov
jmp
cmps
loop
sar
popa
pop
in
es
xor
xor
movs
sub
lock
bnd
mov
aaa
adc
mov
shr
inc
jae
xchg
in
or
in
sub
adc
jecxz
aam
xchg
or
jnp
jne
in
sar
cmp
loope
mov
sub
pop
retf
out
stc
leave
or
xchg
ds
xchg
cmp
xchg
and
sub
pop
or
push
stc
gs
jecxz
cmp
daa
add
(bad)
jmp
(bad)
lock
pop
mov
cmp
lea
outs
fcom
push
das
sbb
xchg
ret
pop
ja
sbb
jle
mul
dec
repz
arpl
jp
int
shl
xchg
dec
cwde
push
adc
pop
cmp
cdq
xor
adc
cmp
rcl
arpl
ss
sub
mov
jne
or
dec
cmp
lds
xchg
aam
sbb
aam
jbe
je
pop
mov
inc
leave
mov
add
sub
jbe
pop
int3
sbb
cdq
(bad)
ja
add
mov
sbb
cwde
(bad)
iret
sbb
mov
retf
xchg
cmc
(bad)
add
and
inc
test
add
std
shl
cmps
mov
push
jecxz
jge
shl
mov
out
test
js
scas
repz
fld
or
fld
(bad)
cld
jg
fsub
icebp
shl
inc
xlat
pop
jge
in
mov
fcomp
mov
(bad)
push
lods
loop
sbb
ror
test
push
add
xor
lock
push
hlt
test
sbb
loop
cld
sbb
inc
mov
pushf
sub
movs
loop
push
mov
xchg
cmp
icebp
arpl
jmp
(bad)
xchg
push
loope
push
mov
sbb
fmulp
pop
fsubr
push
mov
repnz
int
xchg
into
mov
mov
sub
or
add
rcr
inc
retf
iret
xor
(bad)
xchg
in
or
mov
xor
sub
xchg
pop
cmp
and
ja
test
xor
test
xchg
lods
push
push
push
in
adc
mov
in
xor
int3
pop
add
ja
xor
ds
mov
in
adc
(bad)
or
(bad)
fcomp
ror
retf
xchg
dec
shr
dec
repnz
test
push
(bad)
xchg
int3
mov
push
dec
movs
inc
push
sahf
mov
add
push
test
dec
fwait
cmp
sbb
stos
mov
aad
pop
mov
sub
imul
ret
stc
dec
and
mov
pop
inc
pop
cmp
aaa
pusha
pop
xor
push
dec
xchg
scas
jbe
mov
daa
push
cmp
add
call
add
mov
lds
call
cld
xor
pop
scas
inc
arpl
shl
xor
sbb
addr16
xor
in
call
repz
xchg
xor
hlt
push
pop
mov
push
syscall
push
cld
jb
xor
mov
fistp
ret
mov
or
cmps
mov
lahf
mov
add
iret
add
daa
movsx
paddd
fmul
pop
mov
and
enter
pusha
inc
ins
movs
add
shr
jle
xlat
mov
mov
add
mov
add
jl
popf
ret
add
imul
arpl
(bad)
dec
or
xor
mov
ror
adc
jmp
nop
inc
int3
fcomp
call
jmp
test
fdivrp
or
inc
mov
adc
xor
inc
and
jnp
stos
js
pop
sar
retf
cmp
jne
je
cmp
cmp
fidiv
sahf
icebp
xchg
jns
mov
ins
pop
test
ret
mov
push
sub
fld
int3
test
fwait
sbb
xor
mov
mov
pop
rcl
jmp
sub
outs
dec
xchg
inc
repnz
sbb
xchg
fimul
stc
mov
xchg
xor
dec
xchg
fist
add
pop
and
sub
sub
in
pop
pop
ja
inc
jmp
ret
mov
mov
neg
xchg
je
fdivr
in
mov
in
bound
repz
ds
pop
xor
lock
xchg
jmp
pop
shr
and
dec
pop
outs
sar
test
(bad)
aam
dec
mov
jg
push
fs
out
daa
daa
mov
into
sub
popf
inc
add
xor
sub
ins
mov
lea
inc
dec
dec
(bad)
adc
pop
adc
add
test
stos
inc
arpl
and
jle
cli
xor
mov
pop
mov
(bad)
div
imul
cmp
popf
or
dec
jl
jl
mov
fs
push
lods
dec
inc
stos
sub
cmps
jo
or
jmp
bound
xchg
jb
jge
arpl
pop
cld
ja
movs
xor
push
(bad)
pop
dec
leave
jns
gs
pop
mov
mov
and
push
daa
rcl
hlt
pop
out
jl
lahf
pushf
pop
push
jno
mov
cmp
and
outs
test
mov
ins
stos
add
ret
ss
sahf
inc
les
mov
ins
lods
lock
or
jnp
(bad)
mov
fild
jo
sbb
ja
out
mov
pushf
imul
imul
fisttp
or
mov
jl
cmp
sbb
imul
ret
scas
nop
and
inc
and
dec
or
jne
aam
or
push
adc
pop
fbld
cmps
scas
jbe
xor
vpsrad
push
mov
adc
pop
sub
or
test
out
or
xchg
cmps
ror
xchg
cmp
loope
retf
ror
nop
add
jb
and
jne
lea
inc
xchg
jle
inc
jp
mov
jmp
adc
pop
pop
fcmovne
arpl
adc
pavgb
int
call
pop
mov
jle
jle
mov
shr
push
push
cld
ds
or
cwde
mov
cmc
mov
inc
shl
mov
not
inc
out
or
xchg
das
enter
pop
ret
push
and
bswap
in
(bad)
cmps
call
sar
xor
movs
mov
daa
adc
adc
ret
leave
push
add
and
cld
mov
push
dec
mov
pop
clc
mov
xchg
es
call
outs
or
leave
test
(bad)
fcmovu
and
sahf
sbb
pop
sbb
jmp
and
and
inc
push
ins
add
popf
in
in
stos
xor
es
mov
sbb
idiv
ja
call
sub
push
push
hlt
xor
jg
cdq
sahf
fwait
sbb
les
sbb
fcmovnbe
movs
cmp
div
fild
and
xor
or
in
push
test
pop
push
add
fisubr
cmps
out
cmp
lahf
daa
fsub
jbe
cmc
pop
add
ror
lahf
dec
pusha
and
sub
xchg
sti
inc
dec
inc
aam
mov
test
cli
(bad)
sub
inc
jmp
shl
push
pop
and
inc
clc
nop
jbe
sti
cmp
push
add
cmpxchg
inc
(bad)
out
mov
push
push
std
retf
push
ins
in
adc
mov
xchg
sub
aam
pop
popf
mov
iret
and
sub
xlat
mov
push
mov
lock
and
add
mov
retf
scas
ja
test
mov
inc
movs
adc
cmp
inc
mov
jbe
lods
add
dec
xor
pop
bound
cwde
cwde
cmps
push
popa
push
es
jmp
scas
lock
pop
aaa
mov
lahf
test
sbb
repz
(bad)
cmp
or
ins
lods
lods
fadd
ss
and
mov
inc
cmp
mov
push
ins
loope
mov
int
mov
dec
icebp
loope
mov
push
mov
cmp
and
cmp
ffreep
xchg
jbe
mov
icebp
sub
daa
icebp
adc
mov
nop
data16
pop
or
mov
fmul
ret
and
xchg
lahf
pop
push
test
push
mov
cli
in
call
data16
fs
(bad)
sbb
int3
lods
dec
jbe
in
dec
stc
data16
mov
mov
adc
sbb
cld
cwde
test
lea
lds
xchg
call
sbb
cmp
mov
sub
xor
inc
pushf
sbb
add
mov
shr
nop
shl
into
dec
jne
enter
and
stos
or
mov
nop
pop
jno
dec
cmp
add
adc
sahf
add
call
arpl
inc
inc
retf
jge
(bad)
adc
fcom
cs
scas
jns
inc
mov
jno
or
shl
addr16
jnp
pop
iret
fyl2xp1
sub
jge
mov
dec
jge
mov
push
mov
jp
xor
cs
xchg
jge
out
xor
pop
cld
push
cs
mov
(bad)
fwait
push
cmp
mov
xchg
div
aam
das
sub
inc
retf
(bad)
out
fld
jmp
inc
xlat
cmp
mov
das
jo
jmp
add
inc
mov
cmp
enter
jnp
mov
cli
cmps
aam
loop
fcom
dec
add
shl
mov
push
inc
ret
je
fisubr
je
jmp
in
rcr
sub
aas
gs
repnz
mov
pop
ins
xor
loope
fcomp
jmp
sbb
ret
test
(bad)
int
cmps
fld
js
(bad)
in
mov
jo
stos
pop
(bad)
aad
out
cmps
pop
mov
loop
push
mul
div
aas
mov
pusha
inc
jg
mov
ja
xchg
ins
sbb
mov
pop
(bad)
shr
mov
or
pop
mov
xchg
enter
daa
jnp
cwde
cmp
out
pop
ins
mov
cmp
xor
push
lods
(bad)
or
pusha
int3
fadd
in
int3
and
xchg
push
pop
pushf
popf
cwde
fs
gs
mov
pop
cmp
addr16
push
loope
fild
or
ds
shl
out
bound
in
pop
inc
icebp
shr
fucomi
jg
cmp
pop
pop
add
das
das
out
hlt
mov
and
in
in
dec
push
jnp
xchg
or
push
sbb
push
out
xor
xchg
mov
sar
frstor
and
jns
cwde
and
les
dec
bound
int3
mov
xchg
imul
cmp
add
adc
and
or
mov
movs
mov
inc
shl
pop
sub
push
or
shl
add
xchg
sbb
sbb
aaa
pop
mov
adc
(bad)
fdiv
je
retf
shl
stos
sub
mov
adc
fcom
movs
mov
inc
retf
or
popf
into
fdivr
stos
das
repnz
push
ds
cmp
sbb
std
dec
cmp
(bad)
outs
ret
scas
push
test
lock
stos
div
ja
push
js
add
aad
jp
inc
sbb
scas
inc
and
arpl
cmps
jne
sbb
jnp
pop
cwde
mov
hlt
fcomp
pop
pushf
fisub
loopne
in
push
loope
lods
adc
jae
movs
popf
add
dec
dec
loop
mov
push
scas
in
test
ds
push
out
shl
xor
mov
dec
outs
push
imul
dec
imul
shl
addr16
out
push
sub
mov
sbb
dec
mov
les
sar
(bad)
mov
mov
sub
imul
dec
adc
pop
jbe
and
jge
dec
jns
cmovae
leave
add
sub
xchg
shl
inc
push
(bad)
lea
in
mov
lock
push
pop
xor
push
inc
xchg
sbb
leave
int3
adc
ss
ret
mov
ins
add
adc
aad
ror
inc
fisubr
dec
push
shl
add
lock
sbb
inc
fisub
lods
push
out
imul
rcr
jmp
mov
shl
inc
or
(bad)
sbb
imul
pop
dec
not
loopne
or
and
mov
scas
shr
inc
scas
mov
inc
int
aaa
sub
stos
adc
punpcklwd
xchg
cmp
pop
dec
movs
adc
pop
(bad)
repnz
dec
xor
out
sub
rcr
jge
push
mov
repnz
xchg
outs
or
fbstp
jg
rcl
adc
in
out
dec
rcl
pop
push
add
aam
mov
mov
call
or
ror
scas
dec
mov
(bad)
and
clc
or
jae
add
pop
cmp
icebp
xor
mov
ds
jnp
test
add
sbb
dec
sub
sbb
cli
test
mov
or
cld
fimul
ror
(bad)
and
and
cmps
mov
bound
jmp
cli
aaa
mov
rol
into
jg
fdivp
sub
ret
pop
mov
lea
pop
adc
pop
lds
out
(bad)
adc
out
mov
xchg
sbb
test
push
stos
dec
sbb
rcr
ret
mov
cmp
ja
in
pop
rcl
jle
test
mov
fldenv
imul
inc
mov
les
cmp
inc
jmp
dec
and
(bad)
shl
in
shr
or
outs
add
imul
mov
test
xchg
sbb
in
pop
pop
add
jno
rep
les
mov
and
jo
adc
lock
pop
lahf
pop
add
push
or
xor
enter
push
pop
lahf
out
adc
fwait
fwait
int
int3
jbe
jmp
pop
int3
push
push
fbstp
jno
loopne
sbb
mul
push
test
and
or
push
sti
mov
sub
scas
inc
mov
pop
jne
xlat
test
jnp
push
adc
ins
lds
retf
pushf
xchg
stos
not
push
sub
mov
ret
pop
mov
scas
lds
lods
nop
cmp
mov
mov
dec
add
sbb
pop
cs
sbb
mov
mov
inc
cmp
arpl
xor
cmps
in
dec
mov
mov
adc
fisttp
mov
pop
push
jb
jmp
xchg
or
sti
push
sbb
mov
inc
push
add
adc
inc
js
and
and
mov
retw
fs
ja
mov
mov
ins
in
sub
xchg
aam
dec
(bad)
not
and
push
repnz
pop
imul
mov
(bad)
movs
jbe
adc
jmp
sbb
neg
inc
pusha
push
pop
mov
(bad)
pop
mov
adc
sbb
jns
pop
imul
push
sbb
mov
movzx
jbe
shl
jnp
outs
in
xchg
icebp
push
adc
in
jne
repnz
add
push
mov
stos
loopne
mov
bound
dec
or
mov
lock
cmp
pop
rcl
jbe
xor
movs
lock
mov
pop
lods
mov
xor
dec
fcmovb
cdq
mov
test
ret
mov
ins
sub
loop
push
mov
push
push
push
repnz
jo
scas
mov
mov
jmp
inc
(bad)
push
adc
fstp
push
in
jbe
(bad)
(bad)
cdq
adc
pop
clc
mov
jno
test
sbb
sbb
(bad)
int3
sti
inc
cmp
jnp
ja
out
shl
(bad)
aam
dec
nop
cmp
stos
hlt
jmp
mov
(bad)
cmp
int3
xlat
mov
mov
cmp
jne
(bad)
push
or
cmp
push
inc
sar
adc
jle
xlat
out
je
sbb
das
pop
ror
sbb
std
mov
call
fnstcw
std
lock
or
ja
adc
mov
(bad)
inc
neg
aas
test
pop
xchg
add
or
or
je
nop
mov
adc
pusha
daa
pop
or
(bad)
mov
pop
lock
fnstenv
cmps
call
int3
cmp
adc
idiv
ret
sub
add
adc
push
ds
adc
retf
mov
pusha
pop
or
cwde
xchg
jb
sub
sub
sub
cmp
stos
sub
loopne
sbb
movs
lods
xchg
rol
xchg
aas
mov
fwait
xor
pushf
fidiv
mov
adc
dec
ins
xor
scas
test
adc
sbb
mov
xlat
jecxz
sub
loopne
lods
pop
sbb
xor
mov
frstor
pop
out
xor
ss
mov
inc
xchg
out
repz
and
sbb
das
jae
jno
call
mov
jle
retf
jne
push
inc
sub
pop
daa
(bad)
stc
xor
jecxz
sub
push
inc
scas
scas
arpl
outs
inc
movs
push
out
into
xchg
aas
jae
dec
scas
xor
sbb
jg
or
adc
clc
xor
shl
popa
mov
(bad)
pop
jnp
push
scas
pop
cld
sbb
out
mov
jmp
adc
jae
or
lods
imul
scas
dec
mov
int3
xchg
(bad)
sbb
sbb
and
icebp
adc
ret
xlat
dec
mov
in
xchg
and
loopne
loope
mov
and
retf
ror
inc
mov
das
rcr
scas
pop
mov
sub
imul
or
add
push
fwait
cmp
cmp
hlt
inc
jbe
add
jnp
test
xchg
ror
outs
stos
cmp
or
shl
mov
jne
adc
test
add
push
test
and
xchg
add
mov
jae
xor
cmp
jmp
cmp
sar
mov
xchg
xor
stc
cmc
dec
jecxz
and
or
daa
mov
mov
add
movs
sub
mov
aaa
std
(bad)
sub
jns
movs
sbb
movs
mov
cdq
fnstenv
nop
sbb
jle
sbb
push
pusha
or
pop
sub
inc
divps
in
dec
stos
out
mov
dec
mov
fcompp
test
sbb
inc
xor
sub
inc
adc
sbb
rol
rep
(bad)
jp
sbb
sahf
lods
mov
int
in
ret
mov
lds
out
push
push
push
pop
xchg
adc
scas
xor
xchg
rcr
cmp
mov
sbb
cmp
ss
xor
pop
xchg
sti
or
(bad)
loope
push
and
cmps
sbb
dec
push
imul
push
inc
arpl
cld
inc
jbe
inc
popa
mov
or
sbb
xchg
mov
dec
lock
and
lds
test
sbb
gs
repnz
rol
pop
push
mov
push
xchg
cmp
sub
loop
pop
jae
je
add
push
sar
xchg
loop
popa
mov
popf
je
mov
jns
sbb
jp
or
mov
jp
loop
mov
out
test
dec
mov
cld
(bad)
out
pop
fist
ss
dec
rol
popa
mov
movs
push
(bad)
sbb
in
bound
xor
clc
xchg
mov
or
add
xor
inc
ret
add
lds
cmp
std
push
(bad)
pop
xchg
repz
dec
cmc
dec
iret
mov
pop
bound
ja
and
jl
stc
shr
test
scas
nop
in
dec
pop
and
lods
push
inc
repnz
ficom
icebp
addr16
mov
xor
mov
mov
xor
sub
popa
add
sti
addr16
sub
lods
mov
push
and
ret
pop
fld
shl
fwait
push
enter
adc
jbe
aam
adc
sub
push
dec
cld
cvtps2pi
dec
and
or
push
icebp
pop
mov
sub
ja
cmp
ins
dec
inc
(bad)
add
(bad)
repnz
std
sahf
repz
pop
jo
call
in
es
jp
add
aad
sbb
pop
addr16
rep
cwde
(bad)
xchg
mov
pop
shr
jns
or
(bad)
enter
jecxz
sub
jo
shl
add
cli
push
pop
pop
sub
fcmovu
inc
outs
jmp
mov
xchg
stos
js
inc
adc
loopne
mov
ds
xchg
rol
fadd
out
cmp
jb
test
inc
push
pop
hlt
not
dec
ins
xchg
test
sub
fcom
dec
stos
dec
mov
jge
pop
push
lds
in
pusha
pop
pop
loopne
mov
pop
mov
add
lahf
scas
push
aas
sbb
mov
pop
das
mov
mov
mov
gs
cmp
stc
int
mov
mov
jb
movs
test
mov
mov
das
cmp
shl
pop
jb
inc
sbb
mov
int
mov
jge
int3
jecxz
dec
lds
cdq
dec
in
mov
push
pop
mov
cmps
pop
and
xor
retf
sbb
cmc
fiadd
sbb
sub
adc
jecxz
shl
dec
cmp
push
xchg
arpl
cwde
add
cld
jo
or
jmp
and
icebp
mov
sahf
cmps
dec
or
outs
push
je
inc
div
xchg
fist
push
scas
jb
mov
punpckhdq
shl
cmc
ins
xor
inc
mov
mov
sbb
(bad)
popf
scas
pop
shr
push
icebp
inc
dec
ins
jmp
sbb
pop
dec
mov
jmp
pop
cdq
loope
jge
fild
inc
xchg
in
push
arpl
push
sbb
cmp
ret
and
push
push
call
mov
and
push
jmp
nop
(bad)
lods
pop
test
out
stos
add
cmps
cmp
mov
mov
push
cmp
jno
adc
fmulp
inc
add
imul
cmps
mov
cmp
jle
mov
xlat
xor
enter
(bad)
push
(bad)
jnp
jae
mov
push
(bad)
(bad)
mov
shl
lds
adc
push
add
and
icebp
scas
dec
sub
shr
jmp
cmc
pop
push
cld
(bad)
bound
cmp
inc
cmps
lahf
and
mov
or
jno
out
movs
jle
pop
mov
fcomp
inc
cmp
xlat
pop
and
in
ret
je
leave
popa
add
adc
xor
pop
into
adc
mov
dec
or
cmp
jle
mov
repz
adc
and
das
and
fistp
xor
dec
push
ret
test
sub
enter
inc
lods
adc
aam
aaa
out
mov
leave
push
iret
pop
sbb
enter
je
add
popf
dec
imul
aaa
popf
xchg
ins
test
enter
scas
outs
inc
cmc
pop
or
aam
nop
ins
inc
inc
rcr
lds
cmc
retf
out
and
fimul
or
ins
jo
adc
addr16
cmp
adc
mov
fbstp
mov
push
jb
dec
cmp
and
sub
inc
pop
loopne
imul
fild
jmp
xor
or
aaa
(bad)
jp
loop
frstor
cwde
(bad)
jbe
xchg
enter
aad
sub
add
pop
shr
je
adc
or
adc
add
adc
sahf
add
das
inc
push
pop
xor
mov
int
push
rcr
loope
lods
and
sbb
js
loop
jb
add
mov
das
cmp
jl
or
jmp
adc
dec
inc
ffreep
mov
cmp
outs
dec
mov
inc
add
lahf
in
push
dec
cmp
in
pop
lods
push
dec
cmps
cmp
dec
push
retf
sub
sbb
push
push
fadd
cmp
mov
shl
jns
mov
es
int3
loopne
add
jle
cld
mov
dec
in
jnp
adc
mov
mov
sbb
jmp
sbb
or
enter
jmp
(bad)
fistp
pop
add
movs
sar
mov
pop
add
cmp
outs
push
sbb
xor
in
bound
cmps
mov
jo
out
mov
mov
adc
add
sti
jg
pop
in
mov
std
ss
scas
jmp
jp
es
out
adc
scas
in
pop
jbe
jl
fimul
dec
and
inc
push
adc
mov
rcl
push
movs
cmp
pusha
fs
out
or
js
sbb
inc
in
dec
add
or
aaa
scas
dec
test
out
jns
rcl
pop
dec
and
cmp
rcr
mul
rcr
pop
mov
(bad)
icebp
outs
adc
shl
pop
mov
int
jne
cld
stc
and
and
adc
fisub
xchg
das
push
xchg
mov
icebp
cmp
mov
adc
xchg
sar
jo
pmullw
mov
and
mov
mov
pop
jle
pop
outs
inc
sub
stc
mov
push
rol
(bad)
repz
int3
loope
mov
mov
fistp
pop
das
into
cmp
aaa
out
or
pop
xor
pop
xor
ficom
add
sub
xchg
sbb
fucomp
rol
push
sbb
mul
adc
push
int3
xor
sub
popf
dec
pop
mul
xor
mov
ins
out
dec
or
push
pop
adc
jl
popf
pop
lahf
shl
sbb
dec
inc
jo
int3
es
fdiv
dec
dec
popa
test
mov
dec
lock
mov
mov
push
in
mov
std
push
dec
push
call
mov
mov
mov
sbb
mov
pop
lods
xor
sbb
repnz
nop
pop
ss
inc
mov
sub
mov
cmp
dec
mov
clc
test
push
cs
push
xor
out
mov
enter
pushf
jo
push
outs
lds
and
xor
jno
inc
jb
test
jne
scas
bswap
jbe
into
inc
out
loopne
xor
icebp
sbb
or
inc
jo
jb
xor
or
ret
push
es
outs
push
pop
scas
test
mov
test
xchg
(bad)
repnz
into
and
ret
xchg
stos
inc
sub
xchg
push
xchg
dec
add
repnz
sub
push
mov
fsub
add
call
push
fld
pushf
outs
call
stc
hlt
jp
retf
arpl
rol
and
push
and
xchg
and
xor
push
fdiv
mov
mov
pop
leave
lea
dec
sbb
nop
shl
xchg
mov
inc
enter
in
or
xchg
inc
xchg
lods
jmp
jno
pop
jb
jge
and
sub
ja
mov
inc
das
clc
iret
cmp
dec
xor
xor
lods
inc
sub
mov
arpl
sub
dec
push
sub
lea
and
mov
stos
ss
out
push
push
stc
mov
push
addr16
xchg
add
mul
sbb
addr16
ins
retf
xor
cs
sbb
jns
cmp
xor
cwde
scas
mov
push
xlat
bound
ficomp
dec
(bad)
call
mov
scas
repnz
add
ja
mov
arpl
fnstsw
and
fwait
sysexit
lea
jle
inc
inc
int3
pop
push
dec
jmp
mov
mov
adc
sbb
mov
stc
lds
fcomp
pop
imul
mov
sub
mov
sahf
push
in
fisubr
jge
inc
sub
imul
outs
int3
xor
cdq
push
mov
stc
inc
and
cmove
aaa
loope
addr16
cmc
cmps
cli
dec
and
xor
jp
pusha
inc
mov
xchg
lods
xlat
sbb
retf
lods
mov
enter
jmp
fiadd
fmulp
pop
lea
rol
jmp
fnstsw
aam
das
enter
mov
iret
mov
mov
fsubr
adc
retf
push
inc
mov
mov
fisttp
sub
les
cwde
leave
cli
or
push
pop
popf
inc
inc
jge
dec
cli
cmp
push
int
pop
push
sti
fs
add
pop
sahf
(bad)
jmp
cmp
push
in
or
(bad)
js
mov
fdiv
jnp
aas
adc
mov
push
mov
sbb
cmp
pushf
add
jne
jb
les
arpl
adc
jne
xchg
dec
out
sti
fmul
mov
pusha
sub
div
mov
and
add
bound
push
cmp
xchg
push
retf
mov
xor
cs
push
outs
push
aas
pop
ret
cmp
xchg
ret
xchg
imul
xchg
xor
ror
jge
jbe
inc
pop
mov
dec
push
pop
jmp
cmps
aas
push
sar
repz
rcl
sbb
imul
pop
jbe
ret
or
ror
adc
inc
cdq
add
inc
test
sti
or
push
xchg
mov
call
push
stc
fadd
loopne
or
stc
fbstp
push
inc
and
imul
mov
xlat
(bad)
sub
jns
cmp
dec
add
cdq
lds
cwde
cmp
test
xchg
xchg
jecxz
cs
inc
(bad)
cmp
mov
mov
xchg
scas
push
dec
cmp
add
(bad)
stc
adc
test
push
cmp
sti
adc
cwde
ds
stc
fnstsw
leave
cmps
mov
cli
push
repz
jecxz
mov
test
cs
call
hlt
xor
pop
(bad)
cli
fld
jmp
cmc
adc
das
data16
dec
adc
arpl
outs
and
add
adc
retf
movs
scas
push
add
inc
push
xchg
dec
mov
inc
fst
leave
bound
xchg
add
or
ins
in
jge
loop
inc
mov
jmp
(bad)
and
adc
xor
dec
xchg
mov
and
cmp
int3
adc
cli
mov
or
ds
mov
pop
test
ror
aam
dec
sbb
sti
xchg
xchg
stc
pop
sbb
xlat
enter
fisttp
sub
inc
cmp
pop
and
imul
pushf
inc
dec
test
pusha
rol
jnp
and
das
out
xchg
sub
pop
(bad)
enter
adc
push
inc
sti
in
in
mov
mov
add
dec
fild
addr16
cwde
xchg
xor
add
jno
cmp
es
movs
loopne
jle
cld
mov
adc
stos
mov
mov
cmps
dec
dec
outs
add
and
inc
sbb
test
jecxz
adc
xor
push
jno
adc
not
inc
mov
pop
jb
hlt
std
mov
sbb
cmp
add
sbb
int3
xchg
cmp
icebp
and
and
xlat
xor
inc
cli
dec
mov
and
xor
cmps
mov
loope
fadd
xchg
push
out
push
imul
test
mov
cmp
retf
pop
aaa
and
xlat
fild
test
or
xlat
fwait
(bad)
(bad)
push
bound
movs
inc
push
frstor
ror
sbb
push
pop
gs
mov
sub
scas
test
or
pop
xor
mov
leave
jmp
adc
retf
xor
dec
dec
xlat
ds
and
jge
and
jmp
add
movs
add
pop
push
jl
jae
pop
lea
fldenv
mov
or
ins
xchg
dec
mov
mov
in
sub
xor
inc
rcl
and
gs
sahf
aas
xor
icebp
jo
pop
jmp
es
or
jmp
repnz
arpl
jecxz
xchg
paddusb
fld
xor
pop
or
daa
mov
pop
mov
sbb
(bad)
stos
add
push
xlat
mov
stos
lock
mov
lahf
icebp
daa
outs
call
gs
popf
stos
xor
xchg
push
call
cdq
adc
cmc
cdq
jb
test
pop
or
xor
icebp
inc
push
or
inc
jbe
pop
cmc
shr
sbb
loopne
inc
stos
gs
rol
mov
cs
add
or
jb
add
shr
jne
push
aaa
scas
cmovae
pop
ret
push
fist
dec
int
rcl
add
push
mov
call
mov
xchg
jae
push
ins
jae
and
daa
movs
(bad)
dec
bnd
jb
(bad)
or
lds
adc
mov
les
add
ficom
inc
jmp
xchg
or
or
cmps
retf
add
adc
mov
xor
mov
adc
lods
add
int
pop
lock
dec
mul
push
imul
jbe
icebp
pop
mov
icebp
in
push
repnz
inc
lds
out
cmp
rol
push
push
cmp
push
scas
(bad)
shl
add
cli
mov
mov
iret
xor
mov
xor
test
addr16
jp
gs
call
mov
aad
jae
ins
or
jl
sbb
or
push
pop
sbb
pop
int
pop
sub
popf
adc
and
jae
sub
mov
push
js
outs
sbb
xor
cmp
or
or
sub
fidivr
cdq
sbb
mov
add
fimul
or
pop
mov
ins
outs
popf
dec
cdq
cmps
cmp
sbb
or
lea
mov
ret
cli
add
shl
push
stc
pop
ror
push
pushf
sub
sub
arpl
mov
jmp
daa
test
cli
and
xor
xlat
inc
xor
push
mov
and
inc
jge
push
sbb
pusha
in
sub
aaa
movs
aas
das
out
mov
jbe
out
mul
bound
cmp
xor
pop
xchg
add
xchg
iret
addr16
mov
pop
loop
cmp
jno
cmpps
cwde
push
dec
test
cmp
cmp
arpl
and
loopne
mov
jle
int3
mov
or
pop
fist
dec
mov
call
jmp
sahf
xor
lock
sti
sub
jno
scas
jl
mov
inc
std
out
jo
ror
xchg
movs
and
leave
sbb
add
dec
rol
push
frstor
pop
(bad)
mov
cmps
mov
rcr
(bad)
ret
shr
fwait
cmps
mov
call
mov
inc
dec
bound
out
sub
add
sub
cli
mov
mov
fsub
adc
lahf
data16
or
test
xchg
xchg
mov
data16
test
mov
or
adc
lahf
pop
fsub
push
add
jae
jne
fs
pop
leave
or
arpl
cmp
js
sti
pop
call
pusha
into
jns
out
push
mov
mov
inc
pop
cmp
pop
jle
bound
xchg
inc
les
adc
ss
loope
fst
push
dec
bound
pop
pop
mov
or
mov
pop
repnz
in
pop
imul
std
sub
rcl
lods
neg
icebp
es
mov
mov
add
(bad)
adc
jl
inc
ins
cmp
repz
jg
add
test
sbb
ds
gs
add
ret
push
pop
fldcw
fs
push
dec
xchg
and
adc
mov
pop
jbe
and
sub
xor
dec
or
and
inc
mov
call
clc
fisubr
mov
ss
pop
icebp
sbb
outs
push
jnp
dec
sti
sti
rcr
jl
fwait
loop
cmp
jmp
frstor
js
push
and
neg
push
(bad)
jecxz
or
(bad)
call
mov
push
std
fsub
imul
stc
jne
movs
jae
hlt
into
pusha
xor
nop
inc
xchg
fisttp
idiv
lahf
jb
cmp
or
push
popf
mov
push
mov
in
dec
dec
push
sti
repz
cmp
sahf
scas
aas
dec
pop
loopne
push
scas
dec
inc
push
xor
(bad)
cdq
sub
inc
scas
int
out
xchg
popa
push
xchg
cmc
in
pop
inc
pop
mul
add
jns
sbb
stos
xchg
add
and
xchg
xor
push
xor
aad
js
into
sbb
adc
pushf
sbb
jae
xchg
dec
jo
sahf
scas
dec
mov
aad
fcomp
fwait
clc
scas
cwde
pop
xchg
or
dec
lock
mov
scas
out
rcl
in
xchg
jmp
fisubr
enter
or
dec
pop
cmp
xchg
push
movs
xchg
ins
pop
pop
jp
in
mov
cmp
test
jbe
push
xchg
cmp
adc
xor
loopne
mov
les
sbb
fldcw
cmp
sbb
jne
sbb
rcl
mov
xchg
jmp
pop
or
into
inc
retf
lods
mov
jle
rol
mov
movs
out
gs
sbb
leave
push
inc
outs
popf
ror
push
mov
cmp
or
mov
leave
mov
or
xchg
(bad)
pop
fisttp
shl
or
mov
repz
push
mov
xor
or
retf
fiadd
cmp
mov
repnz
pusha
dec
cmp
lds
pop
pop
fld
push
and
xlat
fidiv
out
sti
bound
cmp
pop
jmp
cmp
jbe
jnp
sub
xor
jp
and
push
xor
adc
mov
movs
int3
mov
mov
leave
repnz
int
scas
daa
pop
rcl
add
mov
imul
dec
mov
and
jbe
repnz
push
push
in
lods
out
mov
pop
mov
aad
and
into
dec
mov
into
inc
jmp
je
push
mov
add
lods
(bad)
sbb
addr16
in
push
push
inc
pop
fcmovu
into
lock
add
mov
adc
mov
add
sbb
jg
sti
pusha
adc
sub
fst
fnstcw
cmps
sub
out
fsubrp
rol
dec
int
sub
jne
xor
cmc
(bad)
inc
dec
shr
fst
cld
push
jmp
scas
aas
xor
nop
loope
mov
cld
fldlg2
js
aad
retf
movs
call
loop
rcr
inc
mov
mov
mov
aas
fs
hlt
add
test
popa
push
gs
mov
jne
ror
std
xchg
xchg
bound
mov
lds
push
xor
cs
cmps
in
loop
clc
add
xor
lods
and
adc
das
inc
mov
xchg
rcl
jge
movs
mov
or
lods
xor
popf
dec
xchg
hlt
jp
dec
pop
test
push
inc
lock
fcmovne
and
js
dec
add
push
xor
retf
icebp
mov
cmp
sub
inc
xchg
or
data16
inc
out
mov
push
or
adc
push
xchg
jp
iret
sbb
xchg
jnp
in
pop
sbb
fdivr
mov
cmps
jecxz
jae
push
sub
data16
dec
adc
ror
jmp
stos
clc
retf
mov
sub
scas
cli
int
in
cmp
out
xor
xchg
push
leave
out
xchg
mov
adc
aas
push
jns
sahf
xor
hlt
(bad)
loope
adc
aad
cwde
mov
leave
and
or
adc
pop
add
imul
lahf
cmps
cli
mov
mov
pushf
iret
push
add
nop
test
jns
push
xchg
out
inc
push
add
push
cmps
adc
je
jnp
lods
jp
jno
push
add
outs
call
lahf
and
(bad)
hlt
lods
out
sub
jno
sbb
jne
in
repz
sub
outs
outs
bound
jle
jl
mov
arpl
xchg
sub
loopne
add
mov
mov
(bad)
jmp
mov
sub
stos
jecxz
sub
or
ja
(bad)
lds
push
jmp
jg
leave
xchg
push
das
push
stos
lea
jno
xchg
pushf
ins
and
lods
or
retf
mov
sub
ja
mov
sub
push
mov
test
jle
cmp
fist
push
loopne
mov
mov
dec
aam
jmp
int
fstp
cmp
cmp
xchg
sbb
add
mov
jge
call
jecxz
mov
xor
sub
retf
mov
inc
rcl
mov
aas
and
js
out
(bad)
mov
jmp
and
or
loope
pop
in
nop
sub
pop
adc
fs
sub
fs
or
mov
cmp
or
out
sbb
in
dec
mov
sar
jnp
fs
loope
stos
rol
mov
cmp
mov
test
dec
test
test
jbe
inc
push
lock
mov
mov
cmp
sbb
sbb
jmp
mov
ror
xchg
or
icebp
movs
dec
sub
ins
or
int
fs
pop
push
lahf
sbb
dec
or
mov
stos
jmp
jmp
push
repz
and
or
(bad)
fbstp
arpl
popa
mov
add
inc
jg
and
push
pop
fdiv
addr16
mov
mov
sahf
in
sbb
pop
sub
push
fwait
iret
popa
nop
push
jecxz
fadd
pop
imul
scas
int3
retf
scas
xchg
push
ja
mov
xor
add
jno
xor
sub
pop
add
inc
movs
in
popf
movs
mov
mov
mov
je
pop
popf
lods
mov
or
jb
lahf
fwait
mov
xor
pop
mov
or
dec
imul
fadd
sahf
les
hlt
pop
inc
fwait
jge
fdivrp
mov
(bad)
or
call
inc
adc
xchg
dec
aaa
adc
in
mov
ror
or
xchg
mov
aas
mov
es
rol
sub
or
or
jno
mov
push
jmp
xchg
and
pop
retf
mov
stos
fisub
xor
out
push
push
ja
lock
sbb
jecxz
mov
push
adc
xchg
add
jmp
cmp
xlat
dec
nop
pop
pop
add
mov
stc
mov
adc
sub
pop
xor
pop
cmovl
push
jp
das
sub
int
jmp
jb
sbb
mov
mov
loope
mov
push
(bad)
fiadd
fs
ss
out
in
clc
call
xchg
dec
call
lock
dec
dec
mov
sbb
push
sti
sub
ins
fisub
jle
sysenter
dec
inc
ins
adc
retf
adc
adc
mov
mov
mov
cmps
pop
dec
mov
inc
aas
int3
pop
stc
mov
mov
ror
push
push
rcr
in
xor
cmp
cwde
cmps
repz
jbe
mov
or
popf
aad
fmul
or
aas
xchg
test
pop
sbb
repz
stc
push
xchg
xchg
and
call
mov
and
test
add
outs
fcom
test
push
jbe
jle
push
pushf
mov
neg
push
mov
dec
loope
clc
jmp
loopne
add
loopne
cmp
cwde
and
inc
pop
out
xchg
mov
je
ss
pop
inc
inc
dec
retf
out
adc
clc
dec
sub
addr16
inc
scas
sbb
or
lea
in
pop
int3
inc
sysenter
scas
xchg
(bad)
stos
mov
mov
add
cdq
dec
push
push
dec
test
js
(bad)
rcr
(bad)
rol
inc
adc
xchg
push
cs
rcr
mov
sbb
jge
cs
inc
lahf
dec
addr16
xchg
mov
inc
mov
arpl
mov
inc
push
xchg
test
inc
push
enter
xor
mov
js
xor
ss
or
aad
test
xchg
std
std
adc
cmp
jge
lock
or
out
cmc
lods
stos
cmp
sahf
adc
push
loope
mov
fnstsw
jne
sbb
ret
out
mov
push
jecxz
jle
jl
and
mov
push
jns
cmp
cmp
hlt
or
xchg
ja
leave
fbld
xchg
mov
outs
scas
push
jp
cmp
mov
mov
sbb
lods
popf
mov
call
jle
dec
pop
push
mov
shl
jb
ret
xchg
sbb
cmp
(bad)
(bad)
fcom
mov
movs
enter
out
sbb
push
adc
sbb
rcr
add
mov
loop
cmc
into
add
push
fs
cwde
mov
not
rcl
xor
jb
imul
jne
sbb
jge
mov
out
std
xor
das
retf
push
or
les
shl
cmp
mov
sub
popf
add
enter
mov
addr16
inc
icebp
mov
scas
mov
ror
stos
fild
inc
pop
dec
xchg
pop
es
movs
jb
dec
inc
lods
jge
inc
mov
pop
inc
add
adc
mov
cld
cmc
or
dec
jecxz
inc
add
push
and
(bad)
in
add
imul
jns
mov
push
cmc
shl
test
and
dec
push
loope
dec
xor
add
arpl
ss
sub
int3
xchg
mov
mov
(bad)
pop
ja
stos
and
jne
inc
cli
pop
lea
xchg
pop
(bad)
adc
(bad)
adc
enter
mov
arpl
jle
inc
inc
call
adc
adc
mov
and
or
loopne
xchg
sub
xor
ja
mov
mov
je
call
cmp
fs
mov
div
outs
mov
rcl
xor
fldenv
enter
bound
inc
xor
std
cmp
pop
sar
xor
sbb
mov
out
fmul
pop
out
test
ins
lods
int
cld
mov
test
lods
cmp
cmp
scas
lahf
sub
stos
(bad)
out
sub
jns
aaa
sbb
movs
hlt
bound
add
es
call
jb
xlat
mov
nop
jmp
and
fst
(bad)
fsub
xchg
mov
xor
jno
adc
leave
sub
loop
pop
cmp
mov
sbb
push
add
mov
out
jno
pop
(bad)
out
mov
cli
mov
add
mov
push
adc
cmp
scas
out
cmp
loop
repnz
xlat
fmul
mov
out
adc
or
shl
xchg
aaa
pushf
cli
arpl
pop
push
ret
out
imul
ror
jo
xchg
out
movs
sub
inc
adc
jl
nop
mov
ret
or
xchg
inc
call
nop
iret
cmc
out
mov
jns
repz
and
pusha
mov
jns
pop
inc
icebp
sub
mov
jecxz
add
pop
in
pushf
outs
fld
stc
ins
ficom
into
pushf
inc
push
aad
cdq
je
jne
ffree
adc
push
(bad)
int
xor
loope
fstp
inc
sub
pop
das
cmp
jmp
adc
stos
sbb
fwait
push
retf
xor
xor
inc
sbb
aas
(bad)
jmp
jecxz
sahf
xor
ficomp
(bad)
push
mov
jmp
xor
xor
das
pop
es
inc
adc
add
imul
icebp
push
mov
pop
push
lods
arpl
mov
ret
inc
cmp
dec
repnz
sub
mov
dec
mov
mov
movs
mov
(bad)
scas
leave
out
out
fcom
retf
loop
clc
inc
mov
lea
scas
and
push
xor
into
sub
stos
ret
cmc
push
jns
push
pop
add
scas
mov
xchg
cmc
ins
in
movs
dec
test
inc
mov
jbe
and
or
cmp
icebp
ss
jnp
cmp
int
push
out
mov
shl
leave
sub
ins
mov
sub
mov
pusha
test
retf
add
add
shr
add
outs
jp
jno
enter
xchg
out
sbb
sahf
mov
out
iret
inc
nop
dec
scas
dec
nop
cmp
dec
lods
pop
in
xchg
push
arpl
loop
fiadd
pusha
jo
int3
out
call
add
mov
dec
mov
cmp
dec
and
push
xchg
(bad)
es
mov
mov
gs
inc
pop
jle
or
and
dec
pop
mov
call
ret
sub
cdq
push
icebp
mov
and
jle
mov
jge
or
dec
xor
sub
sbb
mov
mov
bound
push
or
(bad)
bound
dec
pop
lds
cmp
hlt
lock
sub
icebp
loopne
shl
sbb
imul
data16
mov
aad
jmp
pushf
int
idiv
pop
jns
mov
sub
icebp
push
push
popf
add
cmps
fimul
pop
cmp
jns
pop
movups
cmps
and
sbb
les
movs
arpl
movs
dec
adc
js
mov
adc
outs
je
fdivr
sbb
or
jle
lods
(bad)
sti
ja
mov
pop
sahf
out
outs
xor
sbb
cwde
jne
idiv
test
push
punpckhdq
or
ret
lock
cld
adc
stc
mov
jl
leave
loopne
and
les
push
sbb
xor
or
int3
cli
test
(bad)
xor
je
jl
pop
inc
int3
or
(bad)
push
leave
mov
jne
nop
and
mov
into
sti
sub
inc
(bad)
data16
cli
lds
test
mov
pop
stos
imul
mov
retf
mov
pop
xchg
scas
fdivr
and
(bad)
nop
cli
(bad)
mov
in
inc
scas
fsubr
rcl
out
out
ror
dec
cmps
sbb
or
push
pop
ret
sbb
nop
push
cmp
pop
dec
pop
xchg
inc
mov
ins
in
sbb
cdq
shl
into
call
sbb
xor
dec
jne
data16
mov
les
pop
sbb
mov
(bad)
retf
push
pusha
popf
popa
push
cmc
fistp
mov
and
out
inc
test
or
addr16
push
mov
sub
xor
inc
sub
xor
jge
out
js
aas
fnstcw
mov
jmp
mov
inc
or
push
inc
fsub
and
pop
add
outs
adc
(bad)
and
jmp
iret
sar
mov
and
call
inc
push
pop
and
ret
aad
sub
out
mov
sub
jae
push
pop
sbb
sub
iret
or
addr16
std
inc
(bad)
popf
popa
dec
idiv
mov
(bad)
hlt
cmp
mov
push
mov
nop
mov
test
jg
dec
cs
aad
in
push
scas
jmp
(bad)
xchg
xchg
in
rol
ins
(bad)
popa
jb
fnstsw
xor
pushf
das
push
xchg
mov
add
sbb
add
pop
jnp
mov
mov
add
retf
ret
dec
test
mov
int
daa
xchg
outs
loope
in
jns
xchg
imul
aad
or
aam
and
je
fstp
mov
pop
fst
std
retf
ins
cmps
(bad)
sbb
adc
mov
sbb
daa
or
shl
jns
cmps
stos
adc
pop
hlt
xchg
and
add
test
nop
inc
sahf
push
clc
int
xor
ret
pop
jle
in
fisubr
push
dec
pushf
mov
in
fdiv
and
sub
repz
fcom
mov
jnp
outs
jg
xchg
ds
pop
mov
sbb
mov
sub
sar
shr
adc
aaa
popf
add
stos
jns
out
test
dec
test
xchg
xor
cwde
cmps
bound
(bad)
jg
lahf
jg
or
mov
xchg
xor
(bad)
enter
into
cmps
outs
jmp
ror
inc
push
inc
inc
sbb
call
and
pop
call
mov
pop
dec
sbb
(bad)
mov
cmp
pop
out
stos
mov
popf
repz
shr
or
mov
aam
data16
xchg
mov
push
cmp
xchg
xchg
push
pop
das
(bad)
lods
aad
shl
(bad)
mov
xor
aad
rep
push
daa
mov
cmp
hlt
cmp
mov
ror
push
xchg
(bad)
in
fadd
xor
fxch
push
call
pop
add
jmp
mov
in
sti
or
xchg
mov
out
pop
xor
loop
push
cmp
stos
fdivr
or
push
popa
push
dec
iret
imul
and
cli
movnti
pop
add
aaa
pop
fidivr
in
cmp
inc
mov
push
addr16
adc
xchg
jno
mov
pop
pop
mov
dec
adc
jp
retf
(bad)
fcom
jns
inc
jmp
loopne
out
sti
jae
jp
push
pop
mov
xchg
mov
and
inc
in
jno
frstor
adc
jg
(bad)
cmp
popa
pop
jnp
xchg
dec
and
push
push
in
add
xchg
xlat
mov
aaa
dec
and
lock
mov
mov
inc
sbb
xor
cmp
dec
mov
sub
sbb
ror
cld
imul
adc
rcl
movs
jg
bound
mov
inc
test
lea
or
sar
dec
pop
pop
movs
scas
dec
inc
call
out
jne
pop
sbb
test
int
fnstenv
pop
je
push
not
jno
fwait
dec
fldenv
popa
scas
fwait
pop
ret
mul
call
mov
xchg
inc
xor
je
test
push
std
dec
fwait
dec
lock
add
add
mov
mov
push
pop
sbb
fisubr
fmul
sbb
shr
cld
inc
push
xor
imul
push
ins
scas
mov
mov
pusha
test
xlat
sbb
movs
fucom
push
je
scas
sub
hlt
cmp
xor
mov
and
adc
mov
sti
cmps
add
jl
inc
push
pushf
mov
fild
loop
mov
ins
fstp
pop
mov
(bad)
xor
add
sti
cmp
fisttp
xchg
sub
add
cmp
pop
adc
inc
dec
test
ja
(bad)
retf
mov
dec
repnz
icebp
jns
rcl
and
sbb
in
inc
adc
ret
sti
jmp
call
add
movs
push
mov
std
in
adc
aad
idiv
push
dec
cwde
or
mov
rcr
push
lods
xchg
pop
jmp
inc
nop
xchg
push
arpl
lods
daa
ins
shl
jo
and
cmp
add
dec
and
adc
adc
mov
popf
mov
dec
into
mov
push
das
in
aad
push
dec
adc
ret
lea
outs
add
push
mov
out
ds
fbld
push
movs
pop
enter
pop
or
daa
(bad)
pop
xor
fldl2e
std
jbe
(bad)
sar
cmp
loop
adc
movs
jl
jb
(bad)
std
or
jmp
xchg
push
jo
adc
bound
xchg
jecxz
cmps
xor
ins
data16
clc
(bad)
xlat
sub
inc
stos
out
ret
or
jno
or
inc
test
sti
daa
and
stc
inc
inc
pop
dec
sbb
add
and
push
sahf
inc
rdtsc
or
call
adc
mov
inc
jae
in
xor
push
aaa
jecxz
in
or
fisub
jg
neg
pusha
inc
xor
jo
pop
std
and
(bad)
das
in
(bad)
jle
mov
retf
pop
stos
mov
sbb
std
ret
stos
cs
cdq
cld
aam
inc
xchg
outs
xchg
lea
cwde
sbb
dec
adc
fld
pop
popa
fmul
das
jl
loopne
jo
adc
pop
imul
cs
push
add
(bad)
dec
push
js
enter
add
xchg
jae
cmp
adc
cmps
xchg
xchg
stc
or
mov
loop
sub
cmp
push
outs
push
retf
ficom
mov
jmp
mov
cdq
mul
jp
jle
ret
bound
push
in
ror
sub
rol
popa
mov
(bad)
jge
iret
xlat
mov
sbb
in
push
fwait
out
sar
jno
aaa
inc
jns
push
mov
cdq
add
mov
xchg
mov
xor
mov
in
mov
cmp
jns
add
ja
push
stos
dec
mov
movs
lds
add
lea
mov
mov
int3
push
rol
dec
repnz
ja
xchg
push
test
jecxz
cs
and
jge
mov
aaa
mov
rcr
call
jo
pop
push
sahf
mov
imul
add
inc
mov
sbb
fidiv
arpl
data16
(bad)
call
(bad)
cmp
pop
or
fcmovu
add
jg
push
dec
mov
fld
lahf
es
dec
push
mov
jg
stos
cli
fwait
cli
or
xchg
lahf
sar
sbb
push
ret
or
inc
jmp
call
push
mov
cmp
scas
in
data16
sub
sbb
lahf
vdivpd
fld
repnz
(bad)
cld
jnp
adc
cdq
or
call
enter
xor
cs
jg
dec
sti
adc
add
push
outs
cs
push
cmp
sub
mov
or
out
inc
aas
ror
adc
stos
data16
imul
fist
adc
cs
les
mov
js
mov
dec
or
mov
mov
cwde
jno
fidiv
fwait
test
xacquire
out
xor
(bad)
in
xchg
add
push
std
pop
imul
sbb
scas
mov
aas
loop
xchg
xchg
aad
loop
mov
push
mov
fs
mov
pop
(bad)
icebp
sub
test
inc
repz
cli
cdq
jecxz
pop
repnz
cmp
and
std
loopne
stos
stos
adc
mov
icebp
fwait
hlt
xchg
or
ins
add
push
jb
push
adc
fst
dec
adc
adc
xor
jl
lds
jmp
imul
and
es
leave
or
out
push
push
ins
fadd
js
mov
add
sub
ret
js
iret
and
ins
rol
fmulp
pusha
arpl
cmp
jo
mov
std
sti
retf
xor
(bad)
icebp
out
and
in
shl
dec
inc
stc
xchg
cmps
add
fdivr
xor
or
lods
jno
retf
fs
out
ds
xchg
mov
in
cld
jo
push
sbb
jg
scas
jg
cmp
jbe
fcomp
sub
cmp
mov
out
mov
stc
outs
or
div
jge
jo
loopne
mov
les
pmulhw
popf
jnp
shl
adc
inc
jbe
inc
push
pop
add
aaa
dec
sbb
gs
add
dec
pop
outs
xchg
retf
stc
xchg
ficomp
ds
jmp
xchg
les
inc
inc
mov
aad
or
icebp
xor
mov
aas
add
and
dec
add
ret
ror
ja
xor
pop
dec
jg
cmp
push
ss
add
shl
push
cli
pop
xchg
xor
popf
and
pop
je
xchg
push
aad
out
cmps
leave
jl
aad
or
xchg
outs
icebp
fcomp
clc
mov
push
ret
std
test
nop
push
mov
neg
imul
or
mov
push
pusha
movs
xlat
cs
jmp
dec
sbb
jg
bnd
jmp
lahf
or
arpl
xor
sub
pop
cmp
repz
out
les
js
ins
mov
fisubr
xor
imul
inc
sbb
sbb
scas
adc
test
push
js
mov
cmp
sahf
(bad)
not
ins
or
arpl
imul
xchg
out
push
scas
cmp
fsub
ins
fcom
arpl
jge
xchg
pusha
and
and
retf
jo
fisttp
test
push
mov
retf
or
adc
nop
rol
mov
mov
fs
outs
or
fild
lock
ss
mov
out
push
cmps
add
xor
(bad)
and
fisttp
xor
jecxz
scas
pop
push
push
dec
push
xchg
cmps
adc
popf
scas
(bad)
int3
ss
mul
mov
jno
dec
test
xor
xchg
iret
jmp
jnp
mov
outs
inc
sub
xchg
jl
sbb
call
int
fnsave
cli
lea
stos
push
cs
xor
leave
int3
pop
and
adc
pop
jno
sub
jecxz
outs
push
adc
ins
dec
mov
fnstcw
inc
(bad)
js
sub
stos
jle
lods
inc
test
ins
icebp
stos
dec
outs
inc
stos
mov
dec
jmp
sbb
pop
sbb
ret
or
in
jo
jae
(bad)
pop
sbb
jb
xchg
cs
lea
das
(bad)
mov
(bad)
lods
pop
ins
lods
xor
and
mov
xchg
cmp
ds
cmps
icebp
popa
in
ret
ror
xchg
fidiv
fst
stc
ja
call
or
jae
mov
and
jecxz
or
repz
pop
jg
shr
fucomi
(bad)
icebp
aam
or
xchg
jmp
(bad)
push
xlat
movs
mov
js
mov
shr
push
hlt
jmp
push
test
pop
xchg
sub
je
xor
inc
push
stos
xchg
jno
sub
or
les
mov
(bad)
leave
dec
dec
jne
push
dec
sahf
fcom
xor
ins
aas
push
cmp
adc
in
jnp
or
retf
pop
(bad)
movs
call
inc
push
out
repnz
jmp
movs
rol
lods
fldcw
jmp
out
pop
mov
out
rol
(bad)
mov
or
idiv
jns
cmp
sub
ss
jecxz
xchg
sahf
mov
iret
add
dec
pop
sub
push
not
mov
lahf
jae
adc
mov
shl
call
or
loopne
loopne
imul
mov
push
mov
add
dec
div
fwait
push
or
and
movs
sbb
mov
mov
and
scas
pop
test
aas
push
and
in
add
or
int3
sub
sbb
dec
sbb
retf
cmp
data16
gs
mov
imul
aad
repnz
imul
xchg
ja
loope
call
sbb
out
add
jmp
jecxz
push
add
sbb
ret
sub
leave
cwde
pop
repz
mov
inc
mov
push
outs
adc
enter
scas
cmc
test
call
inc
mov
out
cmp
sub
xchg
mov
in
aas
ins
stos
add
jo
mov
xchg
sbb
(bad)
repnz
data16
xchg
shl
pop
shr
andps
cli
popf
lea
xor
cld
scas
inc
pop
loop
das
inc
js
inc
fstp
mov
and
dec
xor
cmp
mov
(bad)
jmp
in
pop
and
xor
jmp
dec
add
loopne
sbb
push
cmp
push
movs
mov
xchg
mov
mov
daa
sub
loopne
les
sbb
in
int
mov
add
ret
xor
push
xor
dec
jmp
into
push
sbb
push
pop
fsub
lock
ftst
mov
sar
adc
ja
lods
mov
data16
and
push
adc
mov
pusha
daa
mov
cmp
scas
leave
iret
movs
or
mov
in
inc
std
dec
fisubr
bound
mov
mov
sub
adc
scas
nop
cmp
movs
imul
movs
jl
outs
leave
xchg
pop
inc
fistp
int
dec
mov
aaa
test
imul
mov
stc
lods
in
push
dec
inc
repz
fs
das
cli
xchg
dec
jge
movs
mov
mov
inc
fdivp
push
lock
or
sbb
mov
cmp
xor
xchg
add
sbb
xlat
(bad)
jnp
xlat
aas
mov
and
xchg
scas
xlat
js
sbb
cmp
mov
dec
leave
add
loop
ss
and
ja
iret
popf
sbb
call
pusha
jmp
(bad)
ja
dec
movs
and
fxch
fistp
mov
shr
sbb
daa
sti
dec
loopne
out
push
push
and
mov
in
fidivr
pop
add
and
test
xchg
ret
mov
sub
xlat
mov
jno
mov
js
retf
adc
test
add
adc
sahf
test
sbb
into
jns
lds
psrad
mov
adc
sbb
push
adc
cmp
push
jns
jns
fld
adc
dec
outs
sub
dec
and
(bad)
add
aad
std
jbe
or
aad
lods
cmp
adc
cmps
mov
xchg
(bad)
inc
xchg
scas
cmp
push
out
imul
inc
cli
and
call
mov
dec
out
nop
test
(bad)
mov
adc
cmp
mov
mov
jecxz
push
or
in
cmps
cmps
xor
call
pop
popf
inc
pop
test
out
je
adc
loope
shl
mov
adc
js
ins
test
popa
push
xchg
pop
(bad)
rcr
adc
lds
stc
dec
push
icebp
fidiv
sahf
addr16
xor
add
leave
call
pop
mov
(bad)
es
hlt
lods
push
ja
pushf
lods
mov
repz
and
and
fist
dec
fsub
sbb
add
xor
jbe
mov
or
(bad)
push
dec
and
les
mov
shr
ss
cmc
sahf
jbe
add
adc
sub
scas
movs
mov
adc
or
jp
retf
loopne
pop
repz
jnp
inc
cmps
idiv
or
mov
and
mov
sub
push
rcr
cmp
jg
cmps
gs
dec
fsubr
mul
(bad)
mov
repz
test
aas
cmp
jno
xor
int3
sub
jne
popf
sti
lock
dec
mov
aad
inc
xchg
fwait
add
(bad)
jmp
cmp
test
mov
outs
push
jae
pop
xchg
retf
fst
lods
pop
or
(bad)
xchg
call
mov
inc
and
mov
fnsave
xchg
mov
mov
add
mov
arpl
test
mov
xlat
xchg
jns
add
les
sub
mov
imul
jmp
repz
and
cmp
sub
repnz
xor
dec
jmp
jne
mov
sub
mov
shr
bound
mov
shr
pop
mov
or
mov
lods
sahf
adc
out
push
cs
nop
sub
jg
cs
mov
scas
xor
(bad)
(bad)
popa
cmp
sbb
movs
xchg
mov
int3
dec
mov
es
add
lods
inc
mov
pop
mov
push
mov
push
or
xchg
mov
jmp
dec
adc
out
addr16
jbe
mov
jae
ins
lds
or
imul
xchg
xchg
outs
rol
push
dec
stos
dec
call
and
pop
mov
sbb
push
mov
adc
push
sub
sub
jg
mov
inc
stc
pop
jecxz
xor
push
push
into
outs
or
push
jle
scas
inc
loopne
push
fwait
(bad)
pop
fidiv
fs
jecxz
cmp
clc
les
imul
push
push
mov
adc
add
push
cmc
xchg
fdiv
das
adc
cmps
fsubr
pop
lods
sbb
dec
ss
and
bnd
(bad)
repnz
add
push
dec
int
(bad)
bound
int
push
inc
movs
mov
(bad)
cmp
and
movs
dec
test
fiadd
xchg
data16
sbb
outs
inc
sbb
out
rcr
xor
xor
and
add
adc
add
aaa
shl
inc
adc
test
mov
adc
pusha
pop
rcr
repnz
xchg
xor
pop
aam
rcr
jle
cmp
adc
movs
inc
iret
sbb
dec
sub
mov
std
mov
int3
inc
in
xchg
sbb
pop
mov
ins
mov
push
xchg
dec
(bad)
mov
pop
popa
in
mov
jbe
shl
or
jo
push
not
xchg
inc
aaa
push
xchg
lods
pop
test
jl
mov
cmp
inc
cmp
push
daa
jno
in
cdq
scas
repnz
add
mov
pop
lea
add
rcr
js
outs
dec
and
sbb
pop
and
cld
jbe
jb
mov
jo
jle
sub
inc
jp
add
out
fldcw
push
cdq
adc
add
mov
pop
ins
cmc
mov
stos
jecxz
dec
loope
xchg
xchg
lahf
add
cld
les
lahf
gs
shl
pop
push
pusha
out
cmp
retf
fwait
imul
xor
fisttp
xchg
out
cli
push
das
inc
inc
in
push
dec
add
(bad)
ins
nop
in
jne
test
sub
outs
int
lahf
out
push
add
adc
or
inc
sbb
cwde
hlt
ds
push
sub
ins
mov
sub
mov
and
das
je
inc
xor
add
ret
or
push
or
add
push
adc
push
rcr
push
out
ins
or
popf
test
push
mov
and
xor
jb
xchg
xchg
jno
cmc
push
stos
fwait
bound
mov
mov
repz
int
lods
adc
cs
mov
(bad)
outs
aas
lods
call
sti
div
imul
mov
imul
dec
jl
sub
mov
nop
mov
sub
fcom
in
push
les
(bad)
(bad)
cmps
nop
fidiv
(bad)
xor
lea
mov
clc
xchg
(bad)
mov
xor
jbe
sbb
jb
inc
sbb
inc
mov
xor
and
clc
push
cdq
cmp
hlt
dec
inc
nop
mov
clc
mov
(bad)
sar
leave
add
pop
std
push
sub
push
repnz
scas
icebp
(bad)
or
loope
push
adc
out
std
sahf
(bad)
jmp
pusha
sbb
jno
jecxz
jp
sbb
inc
sbb
lods
mov
xchg
inc
inc
pop
mov
xor
mov
add
xor
jne
mov
mov
lds
mov
lahf
inc
cmp
xchg
cmps
inc
data16
dec
push
jne
xchg
sub
xor
push
test
add
(bad)
aad
push
stc
ins
adc
mov
in
push
mov
cmp
les
aam
mov
mov
dec
and
xor
je
fsub
rcl
pop
add
mov
inc
mov
enter
sbb
or
stos
nop
bound
ja
pop
inc
fcom
pop
cmps
or
scas
test
dec
es
test
cs
jp
dec
jno
pop
xchg
fild
out
jle
into
jmp
jmp
sub
xchg
loop
js
xchg
repnz
dec
xor
xor
mov
loopne
in
pop
jle
jmp
js
int3
pop
out
sar
out
cs
in
and
out
sti
mov
sti
inc
es
out
data16
bnd
loope
push
fwait
add
dec
xchg
fldenv
fild
int
(bad)
mov
adc
jb
je
outs
xor
push
sub
mov
div
inc
or
mov
dec
movs
add
jno
stos
rcr
fsubr
mov
xchg
dec
push
mov
mov
adc
add
sub
popa
xchg
mov
ror
or
jg
pop
adc
scas
mov
pop
inc
mov
add
jg
cmp
sub
mov
(bad)
hlt
adc
aaa
add
test
daa
jae
jge
cwde
adc
xor
add
ret
dec
xor
and
mov
retf
jae
(bad)
in
aad
imul
aam
shl
mov
and
enter
inc
movs
pop
dec
fcmovnb
ror
call
repnz
push
popf
shr
test
sbb
shufps
jne
idiv
push
xor
jge
in
data16
pop
mov
inc
or
fwait
ret
loope
mov
pop
aaa
ss
cmp
pop
cmp
pop
inc
(bad)
aam
jbe
adc
es
jno
xor
xchg
xor
call
inc
and
push
push
and
or
scas
mov
dec
jl
addr16
inc
fmul
and
sub
pop
push
push
loope
movs
sub
js
sbb
sbb
daa
sub
jp
sti
pop
loope
adc
imul
pop
xchg
(bad)
jp
arpl
xchg
sbb
(bad)
mov
fld
stos
push
aas
test
xchg
repnz
xchg
jp
nop
and
cld
out
lock
push
mov
mov
push
mov
sti
cld
xor
inc
data16
pop
mov
call
adc
mov
sbb
and
repnz
scas
(bad)
xchg
mov
shl
popf
xchg
push
jo
std
add
fsub
cmc
daa
xchg
mov
xor
pop
mov
inc
add
jmp
fld
fimul
addr16
scas
shl
push
fisubr
je
xlat
or
sub
int3
mov
fadd
sahf
in
fcomip
cwde
push
loopne
sti
ds
cli
sub
inc
(bad)
mov
mov
mov
jbe
(bad)
jmp
cmc
test
fcom
stos
mov
mov
jecxz
(bad)
sbb
cwde
fmul
outs
stos
push
lds
in
sbb
gs
xor
adc
push
jmp
mov
xor
inc
jl
out
push
fnstenv
lods
mov
xlat
das
jle
push
imul
mov
cmp
dec
push
jae
ins
jbe
mov
xor
adc
mov
inc
imul
sbb
out
inc
jge
and
cmovg
retf
out
out
aam
fs
jo
push
cmc
cmc
sub
stc
pushf
add
push
js
xlat
xor
xor
and
cmp
(bad)
out
sbb
pop
ja
xchg
js
lods
adc
sbb
nop
xor
add
cdq
xchg
ficom
jle
fwait
push
(bad)
rcr
dec
(bad)
dec
js
dec
in
ss
jg
jg
add
xchg
(bad)
aam
cld
out
inc
popa
inc
xor
out
and
fbstp
and
dec
lods
add
and
icebp
outs
sbb
int3
sub
aas
jne
cwde
push
push
cld
cmp
push
jo
imul
pop
fisttp
dec
mov
mov
push
push
mov
or
fiadd
dec
push
mov
and
or
jno
test
imul
or
mov
out
cmp
and
mov
pop
add
xchg
mov
mov
shl
adc
in
popa
sub
sub
sub
lods
aas
sub
aas
sub
dec
dec
push
cmc
ss
aas
jae
pop
call
aaa
pop
ins
pushf
ja
dec
xlat
adc
iret
or
mov
scas
adc
int3
stos
fcom
add
push
pop
pop
bound
add
in
sahf
test
cmp
lods
push
ficom
retf
rep
les
ds
rol
ins
xor
pushf
js
sbb
outs
mov
clc
xchg
pop
ja
jg
adc
mov
cmp
ins
sbb
xor
gs
fdivr
loop
sub
pop
out
rol
and
sbb
push
dec
test
push
mov
xor
sub
test
mov
xchg
xchg
xchg
mov
add
push
xlat
pop
stos
and
sbb
inc
cmp
jl
dec
xchg
stc
inc
popa
je
or
outs
adc
retf
mov
xchg
xchg
sub
fisub
cld
mov
jo
stos
and
bound
sub
and
int
fld
pop
aad
ret
sub
out
sar
movs
mov
data16
test
sbb
mov
test
mov
jge
out
xchg
cs
add
addr16
in
loopne
in
inc
test
je
jmp
push
xor
movs
loope
push
outs
xchg
xchg
mov
xchg
cld
enter
loope
xchg
icebp
out
and
je
sar
cli
pop
xchg
hlt
xor
xor
mov
popf
mov
mov
sysret
mov
fwait
test
xor
lock
push
add
jnp
fisttp
mov
aad
dec
hlt
mov
rcr
xchg
jmp
and
pop
fadd
enter
cmp
mov
mov
cmp
in
jmp
dec
mov
loope
inc
adc
loop
sti
loope
fstp
jg
mov
and
mov
mov
test
call
js
inc
push
rol
add
jge
imul
cli
js
in
shl
xor
cmp
(bad)
sub
sub
inc
retf
mov
inc
ret
scas
jbe
or
mov
add
and
mov
into
xchg
adc
push
mov
mov
(bad)
jb
dec
mov
mov
jge
inc
outs
xchg
dec
or
mov
aas
dec
aas
test
or
mov
aad
adc
or
sti
mov
inc
xchg
cmp
push
pop
enter
les
inc
data16
push
cmp
imul
mov
pusha
int
jno
nop
jg
pop
retf
sub
es
stc
adc
jmp
enter
stos
test
imul
pop
dec
dec
int3
lds
call
xor
add
cs
je
adc
xor
movs
pop
push
adc
inc
lods
popa
jae
das
push
(bad)
dec
jne
push
clc
and
pop
xchg
loop
sub
pop
sub
repz
aad
aaa
cwde
das
mov
add
jge
mov
jno
pop
stc
scas
lods
add
fyl2x
out
lock
dec
retf
jl
lock
xchg
add
ret
out
dec
inc
clc
mov
add
sbb
arpl
dec
in
lds
fistp
dec
in
push
call
adc
bound
dec
sti
and
cmp
int3
and
out
cmps
arpl
jae
xor
or
and
xchg
mov
into
es
push
int3
mov
push
shl
mov
mov
lods
call
das
out
push
pop
pop
push
or
push
dec
ror
xchg
in
cmp
in
movaps
fs
sbb
dec
dec
shr
shl
cmp
xchg
xchg
xchg
mov
clc
fist
mov
lock
ja
aas
lock
imul
leave
xlat
push
pop
xchg
repnz
dec
sub
adc
xchg
inc
mov
mov
mov
inc
push
repnz
(bad)
test
jge
cld
xor
dec
push
shl
mov
cmp
mov
dec
push
data16
sti
jo
add
outs
lds
push
cmp
mov
fiadd
jbe
jecxz
xor
mov
sbb
repz
mov
fimul
xchg
add
cmp
and
iret
icebp
aam
lods
xor
cmps
std
test
pop
push
mov
dec
dec
add
imul
iret
mov
xchg
retf
cmp
loop
hlt
icebp
in
mul
leave
in
pop
stos
imul
fiadd
pusha
adc
pop
outs
and
push
in
cmp
ret
popf
(bad)
jge
sub
add
inc
shl
xchg
sbb
push
sti
mov
push
scas
adc
je
mov
inc
mov
int
out
das
rcl
push
fild
test
jp
test
jmp
aas
push
jle
dec
scas
mov
ins
mov
adc
pop
fild
movs
add
mov
ret
aad
xchg
mov
pop
aas
int
cmp
xchg
pop
loop
fiadd
rol
jl
mov
inc
jl
ret
jl
das
aas
dec
jb
out
cmp
inc
(bad)
xlat
dec
xsha256
cmps
xchg
and
(bad)
ret
jle
mov
or
mov
shl
lahf
jge
and
dec
sbb
push
add
xor
shl
adc
xchg
out
jmp
add
fsubr
(bad)
dec
dec
ja
rol
test
mov
rcl
cmp
mov
and
mov
rcl
fistp
popa
cmp
int
add
ins
cmp
adc
jb
mov
or
mov
shl
clc
add
xchg
inc
out
pop
dec
lock
xchg
mov
lock
call
jnp
adc
lock
jnp
or
push
jmp
fs
in
xor
das
and
ins
pop
jae
scas
dec
or
stc
(bad)
jg
mov
cmp
xor
dec
inc
fcmovnu
xchg
out
data16
sbb
cs
sbb
and
test
sbb
pop
adc
jmp
les
mov
test
dec
lods
sub
in
daa
push
pop
pop
neg
fstp
fdiv
inc
fisttp
mov
test
cli
movs
jmp
xchg
push
sub
call
and
fwait
push
push
nop
mov
dec
adc
mov
gs
xchg
xchg
ins
xchg
shl
in
ds
shl
cmc
xchg
test
in
rcr
lock
lahf
mov
jmp
js
mov
icebp
retf
mov
iret
test
cmp
in
pop
cmps
inc
mov
push
and
cmp
fimul
or
mov
and
sub
ror
xchg
inc
xchg
es
je
xor
sub
mov
adc
add
add
ss
cmp
aaa
ror
ins
inc
scas
out
stos
mov
push
pop
sti
jmp
inc
mov
mov
fwait
adc
iret
in
xor
ja
out
das
dec
inc
fistp
ss
mov
pop
xchg
mov
xchg
jmp
popf
push
jp
arpl
in
out
xchg
into
push
adc
add
retf
mov
rol
call
and
xchg
cmp
pusha
or
inc
jo
add
xchg
inc
dec
inc
adc
xor
ins
sbb
in
cmps
xor
std
adc
movs
loopne
repz
jnp
xchg
adc
cs
jp
imul
(bad)
retf
outs
jbe
inc
aam
push
cmp
sub
jmp
lock
mov
out
push
pop
pop
cmp
js
push
adc
sar
movs
lea
pop
fwait
sub
pop
loop
pop
push
in
xlat
inc
vmread
dec
dec
inc
lahf
cli
fld
push
stc
cdq
adc
sbb
or
out
sti
xor
xor
cmps
push
sub
add
ret
adc
xchg
jb
xchg
jbe
test
or
and
or
or
not
and
mov
mov
retf
out
lds
ja
add
or
xor
loope
retf
sahf
mov
scas
cld
mov
(bad)
cmp
and
out
mov
or
icebp
push
je
shr
or
push
stos
push
cwde
xor
lahf
sbb
int
std
jle
add
daa
jge
push
mov
dec
movs
pop
mov
pop
pop
xlat
cdq
xor
pop
out
outs
arpl
imul
pop
push
test
or
mov
xchg
mov
sar
shl
popf
je
test
jmp
shr
and
cld
add
cmp
mov
out
mov
outs
(bad)
enter
mov
push
mov
push
cmps
and
je
xchg
mov
add
bound
clc
or
or
xor
xor
jne
inc
dec
jecxz
ret
push
add
and
jbe
pop
bound
fisubr
dec
sbb
(bad)
mov
mov
mov
in
pop
push
test
mov
adc
cdq
icebp
test
cli
or
mov
add
pop
add
sbb
jle
retf
popf
and
jns
sub
shl
jno
aam
xchg
fild
dec
test
(bad)
imul
js
push
mov
jno
push
mov
test
es
mov
or
or
inc
into
iret
lea
sbb
add
adc
mov
or
xor
mov
mov
dec
js
movs
cmps
jmp
pop
dec
mov
and
xchg
ins
inc
hlt
loopne
jp
sbb
int3
dec
into
or
xor
xchg
cli
pop
aad
push
push
mov
out
inc
shr
push
aaa
in
out
mov
out
cmp
je
mov
(bad)
jmp
cmps
sub
mov
sbb
pop
enter
jno
lea
inc
lock
pop
jge
mul
hlt
and
or
scas
in
ss
in
pop
jmp
popa
rcr
les
mov
test
cmp
rcl
dec
es
retf
inc
lock
ins
jp
mov
sbb
and
jb
inc
fwait
ins
adc
add
lds
sub
add
jmp
xor
cwde
fistp
mov
mov
mov
ja
push
pop
(bad)
repnz
xlat
mov
push
cli
sub
out
xchg
xchg
jo
dec
push
(bad)
out
in
arpl
pop
outs
fwait
dec
mov
pop
scas
pop
adc
jmp
sar
inc
sbb
mov
add
enter
mov
jae
mov
or
mov
call
dec
xchg
arpl
inc
xor
lods
adc
add
iret
imul
call
je
adc
pop
jecxz
or
mov
rcl
xor
xchg
jmp
xor
and
gs
in
xchg
daa
inc
push
push
je
jmp
cmp
rcr
jns
mov
xor
cmp
ins
mov
imul
fnstsw
repz
sub
jbe
mov
adc
mov
add
mov
sub
inc
cmp
cmp
add
push
test
xor
daa
cld
cld
test
lods
push
sti
outs
jnp
adc
int3
adc
sbb
jne
outs
lahf
(bad)
adc
jmp
into
sub
scas
xor
aad
push
das
hlt
retf
fisub
ds
(bad)
ficom
pop
std
adc
sbb
call
sub
mov
mov
xchg
add
mov
(bad)
aaa
fdiv
adc
pop
inc
inc
mov
in
jge
sbb
jb
outs
jno
cmps
movs
adc
lea
mov
adc
push
dec
shr
rcr
dec
repnz
xor
add
jge
fs
(bad)
clc
sub
les
jnp
dec
mov
jae
lahf
pop
mov
or
lods
ret
inc
inc
mov
(bad)
gs
lods
call
ss
jge
inc
sub
js
loopne
push
inc
mov
mov
retf
xor
rol
pop
into
es
jle
loope
jo
clc
cmps
sub
(bad)
out
adc
repnz
mov
adc
(bad)
or
or
mov
pop
mov
das
push
inc
mov
inc
out
cwde
push
imul
jns
stc
fisttp
inc
or
(bad)
scas
mov
inc
shl
sub
xchg
inc
inc
adc
add
add
or
aad
fistp
(bad)
lahf
loopne
xor
rcl
push
push
std
js
in
adc
jle
arpl
push
fs
sub
test
mov
mov
(bad)
mov
mov
dec
cld
jl
xor
mov
out
mov
cmp
cld
mov
fs
xor
add
outs
jmp
dec
inc
sti
fs
ror
jne
pop
sahf
(bad)
scas
in
repz
call
cmp
sbb
pop
pushf
jle
xchg
jae
jbe
repz
(bad)
fdivr
inc
fwait
(bad)
fdivr
scas
sub
ss
popf
dec
call
mov
ds
xor
add
inc
xor
mov
cmp
adc
jne
clc
cmp
sbb
je
int
mov
push
pop
jae
sahf
pop
mov
mov
cmc
cmp
and
jno
shr
sbb
loope
retf
pop
scas
bound
xchg
pushf
adc
dec
jge
inc
inc
scas
jns
add
push
lea
dec
inc
iret
adc
adc
addr16
sub
mov
sbb
jmp
adc
shl
pop
sub
retf
cmps
sub
and
sbb
and
or
xor
test
sub
fwait
out
idiv
aaa
jo
loop
packuswb
adc
push
inc
inc
inc
sub
pop
mov
sbb
fst
add
add
fadd
repnz
pop
daa
mov
rcl
dec
push
sbb
retf
jge
daa
fist
xchg
(bad)
mov
dec
movs
jge
test
add
cwde
aas
dec
hlt
out
je
adc
loopne
inc
push
sahf
mov
gs
cli
popf
mov
mov
add
test
xchg
int3
mov
sbb
int3
or
mov
xchg
push
jecxz
outs
mov
push
xor
xor
or
push
lods
nop
pop
test
mov
fld
hlt
xor
or
shl
cmp
arpl
(bad)
fsub
adc
cs
pop
pop
dec
dec
out
dec
mov
sahf
or
(bad)
mov
in
or
jb
fs
mov
test
add
cmps
push
gs
mov
xchg
push
adc
jno
rcl
inc
mov
xchg
xchg
jb
mov
sub
jne
shl
pop
aas
xchg
dec
ret
pusha
push
jge
mov
ret
test
jle
in
retf
cwde
ss
mov
inc
sub
seta
dec
mov
xchg
xor
push
pop
outs
sbb
jns
pusha
cmp
sub
push
arpl
sub
enter
daa
ror
(bad)
lahf
retf
pop
(bad)
xchg
push
inc
fwait
push
or
(bad)
arpl
xchg
inc
mov
xor
lods
lods
xchg
jg
popa
lahf
lds
dec
imul
add
imul
mov
hlt
and
push
add
push
dec
push
aam
pop
js
stos
leave
push
sub
rol
add
xlat
cli
gs
sbb
add
int3
or
push
sbb
push
stos
cmps
inc
retf
ret
fild
mov
aas
add
xchg
int3
lahf
dec
push
outs
dec
lods
int3
adc
cld
mov
je
lea
inc
bound
out
pop
call
out
add
outs
sub
aaa
xchg
jns
out
cld
fldenv
or
dec
lods
arpl
clc
enter
das
dec
hlt
dec
lods
test
popf
xchg
lods
lock
inc
int
scas
nop
push
popa
adc
push
enter
mov
add
dec
cli
and
ret
or
jae
dec
cmp
fisttp
cmp
and
push
jo
rcr
and
cmp
rol
jo
popa
push
idiv
ss
arpl
adc
ss
sub
dec
mov
bound
outs
cmp
xor
cmp
nop
jl
inc
xchg
xchg
es
mov
cmp
repz
dec
cwde
jmp
out
xchg
mov
js
jo
mov
arpl
ds
bound
adc
jns
cmp
push
mul
mov
arpl
(bad)
les
stc
push
in
mov
sub
jp
or
jne
cdq
inc
or
int3
inc
push
cmp
loop
popf
mov
loopne
sbb
push
and
scas
adc
mov
and
and
movs
mov
test
push
out
push
fs
dec
add
sbb
mov
or
outs
into
bound
cmp
aas
xchg
add
add
sbb
pop
imul
test
jns
xchg
rcr
add
adc
push
xchg
and
jb
or
jb
popf
ins
ds
in
repnz
shl
test
cmp
xchg
pusha
stc
cdq
cmp
push
dec
aad
imul
cwde
mov
ds
call
dec
cmp
lods
shl
jg
fcmovb
fidiv
rol
xlat
pop
lods
js
sar
and
daa
loope
mov
push
dec
mov
dec
(bad)
pop
pop
pop
mov
push
mov
push
xor
dec
fcom
loope
cmp
imul
sahf
inc
pop
inc
js
pop
popf
xchg
movs
pop
mov
pop
push
mov
cwd
out
ficom
mov
outs
sub
or
outs
sub
and
imul
sti
sub
mov
mov
(bad)
arpl
adc
jmp
fwait
ins
fcomp
jbe
inc
mov
jbe
sub
lock
jmp
sbb
and
xchg
cmp
lds
daa
call
sub
pop
add
out
in
sub
xchg
or
stos
cli
sbb
mov
pop
fldcw
or
jecxz
cmp
and
addr16
mov
fist
jns
int
mov
xchg
pop
call
pop
inc
jle
aad
xlat
ret
mov
adc
jp
repz
pop
xchg
or
ror
sbb
mov
jbe
mul
popf
sbb
shl
jecxz
rcr
sbb
add
ret
addr16
stc
fisubr
pop
push
lock
addr16
push
cmc
jmp
repz
push
push
mov
adc
int3
adc
cmp
std
mov
cmc
xor
adc
or
adc
lods
or
out
mov
mov
adc
fs
in
inc
repz
cmps
cmp
push
jnp
scas
inc
xchg
push
jnp
mov
inc
fwait
add
daa
adc
ja
mov
push
mov
clc
dec
loop
push
inc
test
mov
cmps
aas
jmp
xchg
aas
jl
sbb
sub
lods
mov
arpl
test
scas
aaa
mov
xlat
sbb
outs
or
jb
push
xor
xchg
inc
in
mov
int
test
jb
imul
xchg
les
out
lods
mov
xor
fist
jmp
push
jp
xchg
xor
inc
cmp
mov
jno
sub
int
lahf
shl
sbb
sub
xor
and
mov
lahf
push
xor
sub
or
fdivr
lea
idiv
rcr
pop
outs
test
jno
sub
dec
push
jb
fistp
mov
pop
shl
test
(bad)
aam
daa
popa
cs
dec
add
adc
jns
xor
and
push
popf
cmp
add
fbstp
enter
dec
adc
add
inc
cwde
xor
ret
sub
inc
adc
arpl
mov
js
xlat
dec
fldcw
shl
cwde
or
cld
retf
pop
add
inc
std
ficomp
jl
sub
div
out
push
xchg
scas
pop
sub
jb
cld
scas
mov
and
popa
daa
pop
cmc
jmp
fisub
and
add
(bad)
pop
stc
mov
xor
xchg
loopne
mov
pop
mov
cmp
cmps
push
cwde
neg
xor
popa
cld
or
popa
push
xlat
sbb
out
call
cmc
sti
(bad)
loop
fisttp
sbb
inc
or
(bad)
fstp
data16
popf
cmp
dec
mov
xor
jno
arpl
out
jb
add
repz
pop
es
addr16
add
adc
pop
repnz
call
mov
jmp
jns
cdq
rcl
in
fsubr
ins
pop
fs
adc
mov
test
cli
xor
mov
push
jmp
jle
pop
mov
loope
popf
and
out
test
inc
add
jl
cdq
adc
sbb
fwait
jle
sub
jo
or
inc
movs
fsubr
repnz
mul
pop
cmp
mov
out
sub
icebp
jbe
cmps
popf
xchg
cdq
popa
lods
data16
repnz
jle
mov
fnstenv
sub
(bad)
jmp
dec
jp
sti
sub
stos
dec
dec
and
xchg
das
in
and
fadd
mov
mov
inc
pop
frstor
jle
xor
mov
mov
jp
sub
cli
push
loopne
icebp
movs
fidivr
jl
cdq
inc
mov
gs
pop
jl
bound
pushf
in
mov
ins
cmp
xchg
jle
push
pop
dec
test
adc
add
or
cmp
in
(bad)
cmc
add
jp
xchg
xlat
xchg
add
mov
inc
push
sbb
repz
xchg
lods
xchg
push
sub
mov
or
inc
aaa
sbb
inc
sti
sbb
or
sub
sbb
adc
in
push
in
mov
mov
dec
add
push
push
sub
adc
loop
or
push
xchg
mov
cmp
mov
xor
jo
in
fbld
sbb
ds
lahf
jns
into
loop
fcom
push
(bad)
dec
(bad)
fsub
jns
test
jmp
mov
jle
daa
cmp
fisttp
fs
dec
(bad)
sub
mov
xor
adc
xor
cmps
ss
repz
repz
dec
sub
jecxz
frstpm(287
clc
adc
jge
mov
xor
ins
xchg
fsubr
adc
or
mov
ds
fsub
mov
out
out
rcl
adc
mov
lods
jmp
out
mov
ror
sub
data16
les
es
or
pop
iret
xor
outs
add
sbb
hlt
push
jle
lods
xchg
movs
xor
lock
bound
popa
jnp
dec
add
or
(bad)
ins
fstp
cmps
(bad)
scas
enter
xor
in
jno
mov
xchg
xlat
adc
sbb
sub
pop
dec
xchg
xchg
and
aas
sbb
aad
jae
mov
mov
cmc
fisttp
(bad)
and
das
jbe
cmc
sbb
and
xor
cmp
pop
adc
and
clc
ja
hlt
cmps
jns
add
lahf
pop
cwde
mov
retf
out
add
enter
stos
mov
jnp
adc
inc
jmp
push
mov
xchg
or
sub
adc
lea
cwde
inc
inc
out
xor
ja
movs
sar
cmp
dec
test
mov
pop
pop
xor
daa
repz
ret
push
test
jno
jmp
jns
inc
movs
adc
or
outs
pop
pop
les
pmuludq
adc
shr
mov
add
push
in
bound
retf
mov
aas
scas
in
cmp
out
es
(bad)
and
hlt
aad
push
(bad)
leave
pop
loope
mov
jo
dec
sbb
inc
aad
and
pusha
xchg
ins
imul
jnp
scas
out
stos
xor
daa
add
cmc
test
xor
vpcmpeqw
pusha
arpl
ds
sbb
pop
adc
push
inc
push
add
pop
into
cwde
sbb
fisubr
sbb
es
arpl
push
call
data16
xor
push
sti
add
push
fnsave
ds
or
mov
retf
inc
inc
and
push
stos
(bad)
jg
nop
enter
adc
mov
dec
dec
and
or
jmp
inc
fisttp
xchg
lods
pop
pop
nop
stc
mov
sbb
(bad)
in
daa
cmp
retf
ds
pop
push
shl
test
in
fwait
retf
lods
dec
inc
xchg
ror
mov
pop
sub
push
and
ins
and
lds
pop
into
js
ret
ror
retf
sub
loop
int
gs
rcr
adc
shl
enter
es
or
jl
cmp
sbb
push
scas
mov
rcl
daa
mov
add
xchg
add
xchg
jb
sbb
daa
jg
enter
and
xor
fiadd
in
pop
mov
and
scas
cmp
push
xchg
pop
jecxz
add
xchg
push
call
pop
push
fld
mov
adc
mov
(bad)
fst
stos
jns
repnz
sub
test
sub
lods
or
push
inc
(bad)
in
pop
jae
into
add
retf
jbe
adc
dec
push
mov
mov
aas
cmc
test
pop
or
pop
sbb
hlt
lods
int
xchg
icebp
mov
call
push
inc
inc
rol
xor
ror
rcl
jns
inc
aam
fcom
cmp
retf
dec
cmp
or
test
(bad)
xor
xor
add
lea
cli
xchg
and
loopne
jge
shr
ret
hlt
mov
add
inc
dec
or
aam
pop
cdq
pusha
mov
sub
movs
adc
adc
pusha
cmp
std
lahf
out
mov
pop
(bad)
shl
aam
add
sbb
inc
lods
adc
sub
jmp
test
sbb
inc
push
mov
jp
stc
mov
std
mov
mov
xor
pop
and
xchg
sti
push
popf
add
mov
cmp
cli
jnp
pop
adc
outs
xchg
sub
(bad)
aaa
dec
adc
jecxz
mov
shl
outs
out
push
sub
push
cmp
aad
dec
add
jne
pop
and
mov
push
pop
push
mov
push
jle
(bad)
imul
(bad)
ja
and
test
add
test
lods
retf
jns
pop
hlt
jnp
mov
cwde
hlt
or
push
fimul
out
or
dec
pop
shl
push
dec
cmps
icebp
nop
pop
push
add
xor
sbb
dec
fsubr
dec
xchg
outs
mov
movs
loope
in
rol
mov
dec
fs
mov
mov
mov
sub
daa
setne
mov
call
add
out
sbb
ja
cmc
repz
cmps
icebp
pop
mov
xchg
inc
jp
repz
nop
aas
test
addr16
mov
and
in
inc
and
and
xchg
sub
(bad)
test
push
cwde
lods
fcomp
hlt
mov
cmps
dec
mov
xchg
xchg
in
std
int
out
sub
ds
sbb
xchg
xchg
dec
aaa
data16
out
js
push
loope
mov
das
mov
in
sub
jge
push
cld
xchg
adc
dec
mov
fstp
cli
ror
inc
das
mov
dec
sti
lock
rcl
mov
ss
movs
fwait
push
bound
pop
or
jae
outs
add
pop
xlat
cmp
push
fwait
stc
repnz
mov
jle
mov
adc
mov
mov
hlt
xor
mov
mov
xchg
xchg
xchg
popf
sub
fimul
jmp
or
push
inc
in
sub
xchg
addr16
or
fist
xor
mov
mov
mov
inc
pop
sub
mov
repnz
xor
jg
out
mov
push
xchg
repnz
rcl
push
cmp
and
sbb
inc
jmp
cmp
test
jo
jg
add
(bad)
adc
lea
jp
xor
test
pushf
dec
pop
pop
stc
repnz
adc
test
fisubr
push
jo
cmp
mov
adc
mov
in
or
fsubp
out
imul
addr16
sbb
cmp
rcr
fmul
inc
jae
add
pop
aam
xor
inc
retf
cwde
lea
push
and
cmc
cmp
dec
shr
push
push
dec
sti
push
xlat
mov
call
(bad)
adc
nop
mov
adc
xchg
add
daa
sub
shr
dec
inc
mov
adc
mov
mov
jg
hlt
ins
es
out
cmp
shl
(bad)
jne
iret
in
stc
(bad)
popa
pop
mov
arpl
std
and
rcl
push
test
loope
xor
(bad)
mov
xor
out
aad
pusha
dec
mov
in
retf
fild
push
push
pop
mov
jmp
jns
aaa
pop
aad
cld
add
cmps
jb
cmp
add
pop
xor
inc
fisubr
lahf
adc
mov
ds
call
dec
mov
(bad)
push
jl
inc
mov
jnp
imul
sub
mov
xor
add
xchg
cmp
sti
fdiv
cli
pop
jge
bound
imul
rcl
jl
test
xor
(bad)
fisttp
pushf
push
sub
nop
repz
or
mov
cmp
or
cs
outs
jb
push
gs
xchg
push
rcr
sbb
popa
or
clc
push
pop
dec
cdq
pop
outs
imul
push
xchg
dec
aaa
jl
aad
sbb
push
mov
outs
mov
cmp
(bad)
mov
loopne
sahf
adc
inc
neg
push
push
shr
add
rcl
jo
fsub
jo
inc
das
cmp
loope
imul
dec
adc
xor
push
push
retf
inc
sbb
xchg
jb
lock
mov
test
lods
sbb
ror
mov
gs
ins
cwde
rcl
dec
mov
mov
cmp
cli
cmp
imul
jmp
test
mov
hlt
mov
xchg
fmul
lahf
mov
xor
call
and
repnz
shl
or
mov
out
test
cmp
mov
ins
mov
sbb
enter
pop
dec
daa
inc
les
imul
or
pop
jae
imul
push
lahf
aad
xchg
idiv
scas
xchg
mov
fimul
(bad)
sub
or
fwait
mov
xchg
into
bound
adc
fisub
hlt
pop
lds
and
fist
icebp
add
nop
dec
adc
int3
mov
push
sti
pop
adc
or
clc
inc
dec
pop
sahf
lds
lods
repnz
cmp
cmp
cld
xor
shl
mov
std
ja
sbb
call
add
popa
iret
mov
jo
mov
imul
ins
mov
nop
mov
shl
in
add
fisubr
and
je
mov
leave
sub
sbb
xor
mov
into
arpl
and
test
cmp
test
cmc
jg
mov
cmp
jecxz
popf
jecxz
and
mov
inc
pop
fs
mov
push
rcr
dec
dec
cmp
lock
shl
rep
ins
cmp
dec
or
xchg
ins
jg
fwait
pusha
mov
jle
mov
mov
pop
jae
shl
jge
push
cmp
mov
pop
loopne
jne
popf
and
dec
loop
add
mov
lods
cmp
mov
jmp
sub
pop
pop
aas
jbe
sub
nop
or
cld
ficomp
cmp
xchg
imul
pop
cld
push
dec
xor
shl
(bad)
clc
or
test
sbb
scas
inc
xchg
mov
mov
push
inc
addps
cmp
jnp
imul
jno
imul
push
lods
jns
or
mov
pop
jmp
imul
hlt
sbb
out
mov
test
call
push
gs
cmps
sbb
sub
dec
rcr
aad
fs
icebp
dec
out
gs
pop
cdq
neg
fdiv
mov
push
and
cmp
je
and
mov
das
inc
pop
(bad)
cmp
out
inc
sub
lods
dec
push
pop
fdivrp
or
gs
test
dec
lea
pop
rol
jne
cmp
push
div
jmp
(bad)
out
aad
call
sub
pop
imul
iret
push
push
adc
cmps
pusha
outs
dec
xor
jle
rdrand
call
cs
xor
shr
jp
push
fbstp
push
outs
fnstcw
mov
call
inc
es
loope
fwait
cmps
hlt
jnp
dec
push
(bad)
and
fwait
xlat
jg
fwait
jecxz
stc
pop
pop
mov
inc
inc
shl
mov
test
or
mov
fimul
shl
int
and
mov
jmp
and
stc
aad
pusha
pop
xor
imul
xchg
daa
mov
call
fistp
and
mov
setnp
fsubr
outs
xor
jmp
loopne
movs
jg
dec
sbb
outs
ror
cli
mov
pop
(bad)
(bad)
out
cdq
push
scas
sbb
retf
inc
add
mov
mov
mov
xchg
inc
xor
xchg
sub
int
add
push
push
cmps
add
mov
in
sti
inc
mov
pop
push
arpl
push
pop
das
mov
pusha
aam
repz
ficomp
ins
push
xchg
inc
mov
sub
pop
pop
or
aas
and
test
cmps
cmp
mov
fldenv
cmps
ss
(bad)
jmp
int3
push
lds
fstp
leave
xrelease
or
mov
fisubr
inc
out
jecxz
retf
js
push
and
neg
aam
lock
mov
inc
js
dec
das
xchg
ror
repz
daa
mov
call
pushf
(bad)
sar
nop
fdiv
scas
lea
(bad)
fist
pop
sbb
dec
dec
sub
addr16
pop
cmc
fwait
stos
mov
and
sar
retf
mov
dec
inc
popa
cmp
lea
inc
lea
and
fs
pop
sub
xchg
pop
cmp
aaa
jp
cmp
cmc
mov
push
fdivr
jne
or
add
fucomi
cmc
mov
mov
fcmove
xor
pop
sub
adc
movs
mov
xchg
nop
dec
and
inc
add
pop
pop
lods
cmp
dec
cdq
stos
adc
mov
ins
std
cmp
add
aam
jge
dec
test
dec
xchg
call
sbb
inc
xchg
cmps
lea
popa
push
and
mov
call
rcr
sub
mov
pop
mov
loop
add
into
lods
das
and
sti
mov
mov
jle
stos
sub
ss
fwait
mov
shr
dec
out
fmul
and
xor
cmps
pop
stc
pop
jp
mov
test
(bad)
shr
sbb
(bad)
nop
push
xor
aaa
fist
pop
inc
test
sub
in
xchg
and
sbb
cmp
xlat
lea
cmp
or
out
xchg
jb
push
pop
add
pop
je
xlat
(bad)
ins
pop
ret
adc
pop
jecxz
leave
ins
fild
jmp
in
xor
mov
xor
or
inc
sbb
(bad)
addr16
sub
jmp
(bad)
and
sbb
daa
ficomp
and
inc
push
jb
sbb
xchg
imul
ins
hlt
push
mov
cs
call
shl
jb
xor
mov
fdivr
adc
les
jno
pop
dec
jp
daa
xor
and
cmp
adc
cmp
pusha
arpl
fisubr
xor
cmc
or
sub
pop
and
cdq
push
jge
dec
add
imul
sub
cmp
push
mov
xchg
mov
or
sahf
xlat
mov
sbb
data16
mov
and
cmp
pusha
ins
scas
retf
shr
out
inc
lea
inc
hlt
sbb
cmp
in
pop
addr16
push
dec
jbe
scas
jb
sahf
fs
ins
xlat
fist
add
stos
ret
iret
jg
and
std
mov
into
jae
mov
bound
loop
sub
xchg
test
xor
cmp
shr
add
xor
jb
rcl
adc
dec
leave
fwait
dec
push
mov
sub
push
adc
push
call
popa
or
scas
mov
mov
adc
lods
cld
jb
push
or
sub
and
test
sbb
inc
hlt
sbb
ror
ss
fiadd
outs
sbb
repnz
xchg
aaa
retf
bound
jle
in
lods
sub
aaa
xchg
test
jge
push
cmps
(bad)
loop
out
cmp
es
hlt
jg
cdq
scas
inc
adc
pop
loope
inc
std
dec
xor
mov
fist
push
mov
popf
xchg
jmp
push
push
loope
add
cld
dec
lods
imul
fdivr
(bad)
and
ins
sbb
cmp
hlt
pushw
daa
or
daa
int
jg
cwde
imul
loope
sahf
xor
sbb
clc
push
push
retf
xor
iret
out
lock
sub
cmp
mov
mov
inc
xchg
mov
fld
psrad
add
clc
call
xor
push
pop
push
and
cmp
push
es
call
and
adc
fwait
adc
js
ss
je
sub
push
sub
(bad)
loop
ins
xchg
cs
sub
xor
(bad)
sar
or
enter
adc
pop
(bad)
fcmovnu
mov
jle
adc
in
ror
inc
sub
pop
jmp
popf
dec
pop
inc
push
movs
xchg
adc
stos
mov
jmp
pop
jno
sub
jae
adc
inc
mov
sub
pop
jae
in
jge
sbb
jmp
mov
add
fwait
ror
scas
fld
inc
jp
imul
mov
lahf
ror
fs
es
mov
test
pop
ins
xchg
jne
std
ss
and
in
stos
jmp
ret
adc
mov
mov
test
(bad)
fdivp
gs
test
xlat
aaa
in
movs
pop
add
(bad)
inc
pop
add
sar
jmp
jae
inc
and
fnstsw
xchg
and
xor
addr16
outs
sahf
lea
scas
lahf
lods
xor
lods
jmp
adc
popa
xor
arpl
dec
add
push
aas
rcr
jmp
sbb
test
iret
add
mov
cmp
jnp
and
and
or
es
jg
push
push
push
sbb
fild
push
fnstenv
lahf
test
lods
inc
push
xchg
call
int
mov
ret
xor
mov
int
repz
xor
dec
js
mov
xlat
pop
dec
imul
cli
sub
pop
xchg
lock
lock
sub
pop
out
in
iret
jle
bound
in
xchg
mov
aam
out
loop
ds
or
mov
aam
in
outs
sub
int
cmc
call
jle
ret
out
daa
mov
ja
jg
inc
mov
sbb
movs
xor
or
pop
repz
bound
dec
jmp
sbb
dec
and
mov
jp
dec
xor
repnz
inc
xchg
gs
push
xchg
push
fdiv
and
push
rcr
xlat
icebp
xor
pop
mov
or
enter
xchg
or
cwde
mov
scas
pop
mov
push
and
in
pop
mov
(bad)
stos
imul
cmp
mov
pop
arpl
lods
test
inc
int
inc
mov
cmp
add
sbb
pop
jl
jge
xor
or
neg
cmps
ror
jg
in
imul
test
or
mov
add
jg
data16
mov
idiv
fldpi
je
cmp
retf
retf
out
jnp
and
(bad)
fst
fistp
test
push
lds
(bad)
int
mov
in
out
and
ficom
push
clc
sub
nop
iret
mov
sub
js
jne
jmp
sub
mov
dec
inc
or
mov
in
adc
call
test
add
jmp
loopne
call
xor
and
lea
test
lods
rol
sbb
mov
sub
movs
mov
dec
pop
(bad)
pop
sub
add
inc
inc
movs
mov
sbb
mov
sbb
mov
leave
cmps
sbb
mov
int3
cs
jnp
icebp
mov
out
mov
mov
or
and
push
lods
add
add
aaa
jge
repz
retf
out
mov
xchg
fs
je
cmp
xor
repnz
cmp
icebp
mov
add
(bad)
imul
adc
adc
mov
sub
mov
(bad)
or
adc
inc
inc
fcmovnu
pop
dec
add
cdq
pop
movs
xchg
push
cmp
std
fcom
ror
and
stos
inc
outs
js
xor
loope
ret
out
repnz
mov
aad
mov
sub
cdq
mov
jl
js
pop
retf
out
xlat
jmp
xlat
adc
push
mov
inc
in
cmps
scas
out
std
sub
sub
imul
aad
into
xchg
int
pushf
sar
fnsetpm(287
icebp
dec
aad
lods
shl
out
rol
iret
cld
push
xchg
iret
imul
ss
mov
pop
ror
imul
mov
bound
stos
and
nop
xor
nop
sbb
push
(bad)
repnz
push
nop
mov
fidivr
or
rcl
stos
out
pop
mul
jne
aas
shl
fwait
xchg
dec
mov
cwde
pop
sub
ja
pop
inc
or
popa
and
lods
fwait
scas
fsubr
mov
in
xor
aaa
dec
push
loop
repz
les
imul
bnd
jbe
or
fld
xchg
xor
in
mov
out
scas
mov
xor
es
enter
jmp
je
add
stc
mov
(bad)
gs
adc
dec
pop
das
xor
adc
aad
or
mov
leave
mov
xchg
sbb
cmp
arpl
mov
jbe
dec
arpl
pushf
mov
leave
inc
fdivr
sub
sub
mov
xchg
shl
arpl
fsub
es
gs
mov
repz
addr16
xor
jge
aad
cld
mov
movs
fist
retf
add
jl
popf
mov
mov
or
xchg
in
jbe
xchg
cmp
cld
sahf
into
adc
cmps
mov
mov
js
mov
push
mov
test
pop
mov
dec
jb
push
(bad)
das
mov
push
adc
adc
and
xor
and
sub
mov
jns
and
push
sub
mov
or
int3
mov
data16
cmc
fmul
pop
jl
stos
mov
adc
lods
repz
cmp
popa
pop
in
adc
dec
jbe
cmps
xor
popa
scas
addr16
pop
mov
sahf
loop
lahf
xor
clc
imul
pop
(bad)
mov
xlat
loop
rcr
pop
inc
ins
aam
(bad)
in
pop
adc
fisttp
fdivr
inc
add
stc
cmp
add
pop
mov
adc
and
pop
push
push
xlat
push
ins
sub
jmp
inc
cmp
call
inc
test
cli
into
ror
pop
iret
mov
add
xor
xchg
pop
adc
pop
jo
arpl
in
mov
(bad)
mov
fcmovnb
xchg
std
test
addr16
xor
ds
fdiv
or
jmp
xor
jge
add
and
jle
fst
cmp
retf
cmp
cwde
or
mov
shr
aam
sbb
push
xchg
dec
jb
adc
ins
stos
adc
push
and
mov
pop
and
jecxz
out
cs
int
arpl
fbld
inc
push
mul
push
(bad)
adc
xor
jmp
les
dec
mov
ret
ins
mov
(bad)
fxam
xchg
push
aad
cld
das
dec
add
outs
and
sub
mov
sbb
xchg
imul
test
fsub
mov
les
push
push
mov
(bad)
sub
rcl
out
mov
push
clc
pop
mov
(bad)
sbb
mov
movs
add
data16
sub
push
loop
fwait
xor
int3
and
jno
cmp
xor
push
aas
movs
jge
stos
mov
outs
inc
inc
ja
or
leave
mov
pushf
pop
cmp
cmp
push
leave
cld
mov
(bad)
retf
mov
mov
or
xchg
in
inc
xchg
mov
and
idiv
mov
lahf
ret
inc
and
mov
xchg
dec
push
mov
push
push
xor
int
jno
mov
adc
(bad)
imul
scas
cmp
(bad)
fcomip
or
aas
pop
loop
cmps
adc
mov
xchg
std
jne
inc
mov
mov
jecxz
int
(bad)
mov
jp
shr
push
add
mov
scas
jle
les
mov
les
aad
mov
(bad)
and
lods
mov
xchg
mov
(bad)
dec
repnz
retf
mov
pop
adc
test
in
pmaxsw
retf
cmc
loop
mov
sbb
adc
mov
adc
inc
mov
mov
arpl
sahf
cmp
or
fisubr
stos
mov
push
push
pop
cmp
jne
push
test
cmp
jne
push
in
rol
out
pop
sub
cmp
pop
test
ror
xchg
gs
hlt
xor
lahf
push
popa
outs
cmp
lods
mov
xchg
popf
sbb
sbb
mov
sbb
mov
das
les
je
add
jno
xor
out
jmp
lock
fsub
jno
daa
call
les
sub
xor
or
inc
out
or
mov
xor
jmp
iret
inc
jo
iret
(bad)
inc
pop
retf
xchg
or
cld
xchg
fwait
leave
xlat
fs
mov
jno
or
(bad)
sub
add
cmp
sub
adc
jmp
jmp
mov
push
sub
data16
push
push
and
fadd
sub
movs
mov
inc
pop
cmp
cli
(bad)
mov
add
jno
loope
lock
adc
or
ret
mov
xchg
sbb
pusha
out
int3
mov
test
dec
xor
retf
aam
fmul
mov
cmp
aam
(bad)
sub
and
aam
push
mov
jmp
loop
mov
stos
cwde
jae
adc
mov
mov
ins
fstp
inc
dec
fidiv
bound
pop
outs
inc
dec
pushf
shr
int3
test
pop
jmp
mov
mov
dec
imul
out
jg
jl
mov
xor
outs
loop
xchg
cmp
clc
test
aam
mov
mov
jb
mov
(bad)
retf
xlat
inc
cmps
push
movs
push
(bad)
int
inc
push
loope
movs
ret
ror
push
enter
data16
mov
cld
adc
inc
inc
in
(bad)
rcl
mov
sbb
mov
jno
mov
push
rcl
mov
aad
in
ja
sub
jbe
sub
jge
cmp
xchg
xchg
sub
shl
inc
push
mov
adc
xchg
and
mov
cmc
je
lds
adc
in
ins
mov
sbb
add
sub
sbb
cmps
inc
shr
push
shr
adc
pushf
leave
inc
sbb
pop
mov
add
retf
sub
dec
call
pop
xor
xchg
adc
je
outs
in
dec
sub
inc
arpl
adc
add
add
jnp
lods
loop
add
dec
jne
clc
push
hlt
cmp
mov
jnp
xchg
xor
daa
pushf
in
fistp
or
test
retf
ins
push
fs
pop
xchg
sub
adc
(bad)
in
pop
not
in
mov
ret
hlt
pop
add
pop
push
mov
or
mov
xchg
pop
lds
gs
or
test
lods
mov
leave
mov
inc
jl
js
idiv
ins
repnz
inc
pop
pop
sbb
js
in
hlt
cmp
inc
dec
and
test
push
cmp
mov
gs
push
(bad)
aas
fs
pop
cmp
(bad)
dec
je
and
rcl
test
fld
retf
push
xor
and
mov
adc
ds
test
adc
fisttp
jg
add
mov
(bad)
out
push
mov
bound
xchg
jae
pop
ret
jp
test
bound
ret
dec
pop
rcr
in
es
mov
cdq
and
cmp
(bad)
push
iret
cs
and
sar
jo
scas
dec
lea
test
sub
je
cmp
fistp
cld
fs
test
mov
inc
mov
xchg
int3
pop
jecxz
repz
jo
fisttp
sub
pop
leave
imul
imul
push
mov
xor
sbb
and
cmp
and
pusha
mov
call
imul
mov
outs
cmp
xlat
and
aaa
sbb
rcr
mov
mov
enter
dec
adc
inc
popf
ret
pop
pop
xchg
pop
sub
stos
retf
push
or
or
sbb
mov
inc
push
and
shr
sbb
in
adc
js
sahf
cmp
jle
adc
push
imul
sbb
dec
pop
mov
jns
cmp
retf
mov
sbb
outs
in
icebp
in
sub
movs
adc
mov
stc
xchg
mov
pop
push
and
xor
dec
in
jecxz
inc
fistp
jmp
pop
jle
fwait
jae
shl
out
fidivr
fidivr
js
stc
(bad)
(bad)
jnp
fisub
outs
fnsave
pop
and
inc
xchg
scas
inc
(bad)
inc
cmp
pushf
or
out
adc
xor
push
shl
icebp
mov
into
sbb
sbb
ret
out
sbb
inc
es
push
int
mov
xchg
cwde
inc
mov
fistp
call
sub
repz
adc
mov
les
sar
xlat
sbb
jecxz
pop
jo
mov
shl
(bad)
into
out
cli
or
add
jmp
inc
cwde
out
stos
mov
ja
push
rol
das
js
and
test
jo
sti
loopne
adc
or
in
shr
push
ss
adc
test
lods
and
push
jno
bound
popa
popa
jae
sar
dec
adc
lahf
dec
xor
ret
scas
rol
ja
test
fld
test
movs
mov
mov
fimul
sbb
shl
nop
mov
test
and
xchg
fwait
dec
mov
movs
and
cmp
pop
imul
add
mov
sbb
(bad)
imul
mov
(bad)
jbe
in
sub
sub
push
push
xchg
sahf
cmp
mov
sbb
fisttp
xchg
scas
cmp
fstp
cmp
or
movs
push
(bad)
xor
das
(bad)
and
int3
xor
pop
sti
inc
jp
cli
sbb
xchg
dec
inc
into
(bad)
fbld
dec
movs
push
faddp
xchg
add
daa
enter
icebp
daa
xor
push
xor
mov
ja
lds
pop
add
mov
mov
add
jmp
sbb
sbb
xlat
(bad)
js
mov
xor
loopne
sti
jge
mov
sub
dec
push
arpl
lods
sub
push
stc
adc
shl
fs
cmc
jae
inc
pop
and
test
and
(bad)
shl
mov
push
mov
or
inc
push
mov
push
pop
xchg
jne
lods
xchg
dec
aad
lock
pusha
mov
lahf
inc
and
mov
gs
mul
outs
dec
popa
adc
xchg
pop
idiv
adc
xchg
fwait
rcr
jp
in
adc
fs
xor
pusha
fiadd
xor
mov
ja
cld
inc
jecxz
icebp
ins
mov
cmp
mov
fwait
cld
test
dec
inc
mov
pop
adc
xchg
leave
sub
arpl
push
add
push
ror
test
mov
lods
mov
popa
pop
xor
mov
mov
call
push
jg
sbb
js
mov
add
push
ficom
pop
ins
arpl
test
jmp
repnz
jnp
fbstp
fbld
jp
adc
out
pop
push
push
cmps
inc
fdivr
shl
cmps
rcl
cdq
pop
imul
mov
stos
(bad)
cmp
jnp
push
outs
inc
in
out
clc
outs
outs
call
sbb
cmp
xor
(bad)
cmp
or
push
out
aas
add
xchg
or
and
or
xor
jb
cmovnp
movs
bnd
mov
lds
dec
add
rcl
or
sub
push
jmp
imul
inc
aas
sbb
int3
out
pop
loopne
sbb
or
fnsave
aad
cld
pop
pop
not
jne
aad
shr
into
and
jl
jbe
mov
fnsave
push
mov
stos
test
dec
std
jle
rcr
xchg
and
sti
jb
lock
add
ds
cmp
xchg
jo
jle
xchg
sti
in
int3
js
add
js
cwde
push
shl
cs
inc
test
fstp
mov
jle
hlt
push
mov
cs
imul
mov
inc
sub
jo
sbb
and
and
or
push
mov
adc
test
aaa
dec
sub
mov
(bad)
out
lea
in
pop
cmp
xchg
mov
mov
xor
(bad)
xor
xchg
xlat
das
cmp
jns
xor
retf
div
jb
inc
mov
test
xor
pop
jne
mov
and
test
ja
int3
adc
mov
mov
call
mov
mov
inc
pop
push
arpl
xchg
push
cli
loop
ficom
aad
movs
dec
aaa
repz
sti
rcl
dec
fwait
adc
mov
pop
stc
jge
je
jl
push
bound
cmp
sbb
shl
adc
retf
das
adc
(bad)
sbb
or
sar
jnp
out
movsx
xchg
in
xchg
rcr
inc
add
add
(bad)
jo
es
mov
and
idiv
inc
jo
ins
sbb
xlat
cmc
sbb
es
rol
test
xchg
sub
retf
out
jge
inc
cs
mov
std
rol
sbb
mov
cld
sbb
and
(bad)
call
cmp
test
sub
and
xchg
in
fisttp
mov
cdq
lods
inc
imul
test
mov
stos
ins
call
popa
dec
sub
cmps
xchg
push
mov
cs
jge
stc
xor
inc
adc
mov
add
xor
jb
xchg
rol
push
jp
cmp
pop
fisub
cdq
push
fdivr
cs
imul
rcl
mov
mov
outs
adc
mov
imul
pop
fs
cmp
push
and
enter
mov
jp
xor
out
or
fwait
dec
pushf
add
mov
and
hlt
fidiv
in
ret
ins
push
shr
je
imul
sub
mov
and
xchg
and
inc
dec
leave
push
loop
inc
call
imul
xor
adc
es
pop
xor
movs
pop
sar
sbb
in
pop
xor
std
pop
xchg
loope
mov
xor
sub
sbb
xchg
fst
cmps
inc
inc
mov
sub
add
cmp
push
pop
js
jge
adc
jmp
pop
jo
outs
mov
bound
and
mul
sbb
jns
or
repz
inc
mov
dec
sbb
add
idiv
xor
loopne
mov
in
pusha
in
aam
push
pop
jns
into
lods
cmp
leave
retf
cmp
push
jns
mul
inc
inc
jl
stos
sub
inc
inc
push
daa
jp
push
repz
add
push
(bad)
into
lahf
data16
icebp
out
mov
mov
loopne
(bad)
aad
pop
mov
mov
jg
cwde
mov
pushf
ret
xchg
int3
dec
dec
dec
jle
jecxz
es
sub
push
jmp
cmp
adc
push
fild
push
cld
jae
mov
sub
jae
pushf
pushf
sbb
fstp
pop
mov
jo
test
jnp
xchg
inc
sub
push
bswap
int
fucomip
cmps
loope
push
pop
lods
mov
push
ret
and
jg
in
imul
call
inc
stos
adc
test
fwait
mov
xor
retf
xor
sbb
xor
sub
mov
mov
ja
shl
adc
pop
repz
ins
in
js
ret
in
pop
add
pop
xchg
pusha
lea
inc
mov
les
cmp
scas
push
jb
aas
add
mov
lahf
pusha
push
adc
and
mov
push
push
mov
cmps
and
and
or
jp
loop
ret
hlt
retf
xor
xor
sbb
ror
jno
adc
add
add
iret
sub
addr16
and
in
in
bound
in
jns
xor
nop
or
xor
mov
sub
jp
add
xchg
mov
jp
lods
in
jle
or
(bad)
rcr
lods
bnd
jno
daa
or
jecxz
out
out
push
adc
cmps
or
mov
rcr
retf
dec
fidivr
or
sub
test
xchg
daa
in
push
lahf
fcomi
cmp
dec
push
push
jmp
popf
push
and
dec
movs
and
jbe
xchg
(bad)
mov
aaa
adc
xchg
xor
and
add
sub
jno
sbb
inc
jo
mov
test
sahf
int
jo
mov
in
xor
aad
test
inc
inc
ror
mov
push
dec
sbb
adc
adc
lods
jae
retf
std
mov
inc
inc
ins
lds
pop
arpl
push
push
ins
test
lods
dec
mov
jmp
into
popf
repnz
mov
frstor
scas
jo
jp
mov
outs
mulps
inc
add
ins
xor
test
ficomp
nop
ins
inc
cmp
stos
test
out
outs
in
aad
ss
pop
int
(bad)
cmp
mov
jp
das
mov
aad
ror
in
cmp
mov
outs
stos
fwait
popa
lock
imul
cmps
push
nop
stos
cmp
popa
lock
outs
(bad)
call
dec
dec
(bad)
stc
fsubp
and
fdecstp
adc
jecxz
hlt
lock
fs
mov
jb
(bad)
scas
les
and
je
push
(bad)
push
aam
movs
fild
retf
adc
mov
or
ins
mov
or
push
std
jmp
or
test
aas
mov
cmp
xchg
pop
pushf
push
mov
hlt
fsubr
aaa
push
lds
and
aas
imul
mov
mov
int
push
xor
aas
outs
aaa
jno
int3
fidiv
inc
(bad)
das
dec
push
sbb
inc
sub
fnsave
jg
mov
ja
jno
and
(bad)
jmp
aad
jae
sbb
mov
adc
fldcw
adc
mov
sti
int3
dec
cs
test
inc
and
jp
icebp
and
fdiv
cmp
ins
dec
cmps
into
int3
jle
(bad)
inc
jg
fs
sbb
cli
lea
popa
out
xor
xchg
fidivr
adc
out
lods
dec
cmp
fs
adc
xchg
test
retf
lea
inc
fldenv
inc
sar
cmp
or
adc
sbb
jl
outs
(bad)
inc
ficom
cmp
dec
sbb
or
mov
add
fnstcw
dec
jecxz
lods
sbb
adc
loopne
push
xlat
inc
and
shl
mov
test
fisttp
xchg
add
std
int
mov
cmps
ins
add
ss
mov
push
call
mov
cmps
pop
repnz
nop
sbb
mov
lods
std
jno
mov
sub
push
clc
stos
dec
shl
ds
int3
pop
mov
xchg
je
push
stos
add
add
dec
fwait
push
loopne
pop
or
rcr
test
cwde
das
pop
neg
cmp
fcmove
fdivr
jl
test
stc
sub
pop
mov
xlat
sti
repz
mov
out
das
push
lea
sbb
addr16
pop
scas
and
and
adc
fisttp
mov
dec
fstp
fidiv
bnd
out
and
cmc
push
mov
push
out
add
xchg
lods
mov
stc
lock
jmp
pop
cmp
sub
and
mov
dec
adc
rol
adc
into
or
sub
cmps
stc
add
hlt
mov
test
hlt
mov
xor
sub
mov
imul
(bad)
adc
sbb
int3
mov
fs
fdivr
call
jo
iret
aas
sbb
jae
xor
sub
in
or
xor
mov
pusha
sub
or
and
enter
push
gs
(bad)
fild
sub
push
loopne
fwait
inc
dec
mov
stc
loop
enter
jp
mov
push
(bad)
xchg
inc
pop
outs
mul
cli
pop
xor
and
cmp
xor
push
jmp
in
xor
push
outs
jae
cwde
(bad)
call
mov
mov
mov
daa
adc
pushf
imul
jae
mov
mov
mov
sahf
cwde
cmp
shr
dec
inc
mov
push
or
cwde
cmp
push
scas
xchg
std
mov
enter
cmp
lea
aad
or
into
mov
sub
cdq
or
clc
loope
jg
cmp
ja
jb
sbb
jnp
cwde
xor
or
lahf
pop
mov
lea
mov
lods
call
adc
sbb
lahf
(bad)
aas
dec
mov
call
xchg
popf
or
fstp
xrelease
adc
or
mov
call
test
jns
add
inc
push
adc
test
outs
stc
cmps
xchg
dec
push
(bad)
fs
and
adc
mov
mov
push
sbb
cwde
pop
push
ret
and
into
ins
push
push
je
test
jne
pushf
popf
fwait
shl
and
es
pop
pop
loopne
cmp
or
inc
pop
inc
mov
dec
inc
int3
sahf
inc
scas
dec
inc
neg
jmp
mov
pop
push
sbb
(bad)
aam
push
jo
dec
sahf
popa
xchg
mov
sub
xor
enter
cmp
out
inc
pop
clc
fdivr
mov
and
movs
movs
ja
and
icebp
fimul
sub
dec
into
cmc
dec
loop
xchg
mov
(bad)
retf
imul
cmp
mov
int3
jbe
mov
push
and
push
and
inc
retf
cmps
push
dec
sub
shr
jecxz
outs
adc
fyl2x
mov
sub
dec
mov
mov
cs
adc
pop
push
mov
mov
sbb
xchg
out
outs
fcmovnu
jg
cmp
push
inc
aad
push
jmp
mov
arpl
pop
cs
xchg
stos
or
lock
pop
jnp
fcomip
dec
ss
gs
sub
loop
push
js
jp
cmp
stos
(bad)
mov
bound
jne
stc
and
ins
mov
(bad)
fdivr
sub
lods
inc
arpl
and
mov
jnp
jl
push
cmp
mov
(bad)
ds
bswap
scas
outs
mov
addr16
movs
(bad)
xchg
cmps
imul
loop
fs
push
cmc
push
xlat
fwait
add
cmp
dec
sub
jmp
add
icebp
les
dec
mov
jmp
and
(bad)
xchg
adc
pop
sub
movs
inc
sub
es
xchg
mov
mov
sbb
jmp
pop
movs
mov
sub
mov
mov
mov
icebp
dec
fistp
xchg
adc
sti
mov
ins
push
jno
mov
xchg
jmp
push
sub
pop
shr
scas
jnp
cli
ins
mov
not
jmp
jmp
pop
es
push
pop
out
lea
cmp
cs
add
repz
fiadd
adc
stos
xor
int3
aam
call
out
inc
inc
or
cmp
test
icebp
push
in
imul
add
dec
stos
(bad)
pop
aad
arpl
das
jmp
push
arpl
mov
or
clc
mov
pop
addr16
push
push
pop
repnz
jge
js
test
out
out
aam
fdiv
or
push
ins
iret
movs
and
ret
stc
xchg
sbb
ins
lds
push
jl
loop
ja
dec
les
mov
xchg
lds
sub
jne
xor
or
dec
in
xor
sbb
xchg
gs
cmc
mov
ret
jp
xor
sbb
mov
dec
cmp
sti
aaa
mov
dec
dec
into
std
outs
jo
push
clc
mov
mov
lahf
loope
int3
dec
add
pusha
popa
and
adc
cmp
shl
or
jmp
push
(bad)
std
call
mov
arpl
or
sub
adc
test
mov
data16
ins
std
xchg
lds
jbe
shr
sbb
aas
or
ret
rcr
daa
jp
bnd
and
(bad)
sbb
test
cmps
mov
shr
mov
cli
inc
fucomip
dec
sbb
and
jl
mov
jle
sar
and
mov
adc
xor
js
sbb
mov
dec
enter
mov
push
add
adc
dec
push
mov
jns
push
mov
neg
shl
cmc
mov
daa
push
popf
mov
leave
jp
pop
mov
(bad)
js
and
or
stos
enter
arpl
mov
push
outs
inc
icebp
in
enter
sti
jmp
xor
xchg
ins
push
sub
and
loope
xchg
cdq
(bad)
jmp
int
xchg
pop
cli
sub
xlat
movs
loope
repnz
mov
ins
mov
push
data16
xchg
push
sub
or
mov
pop
adc
sbb
das
jp
pop
cmp
ja
retf
popf
push
dec
loope
mov
cmp
cwde
imul
pop
out
(bad)
and
mov
(bad)
loop
or
sbb
sti
ss
or
mov
pusha
clc
xchg
test
std
xor
add
mov
lea
mov
or
xlat
aas
fisttp
out
out
or
movs
fcom
stos
inc
pop
mov
mov
sbb
sub
cs
sahf
adc
std
jnp
sbb
push
push
adc
mov
add
mov
xchg
ds
sahf
push
pushf
inc
test
loopne
es
pusha
add
jb
fs
dec
push
cmc
fxch
ins
int
retf
outs
xor
mov
push
pusha
push
mov
add
lods
and
sbb
push
inc
daa
xor
adc
cdq
je
jl
dec
scas
adc
mov
and
sbb
cmp
inc
(bad)
jl
retf
test
inc
push
jbe
inc
pushw
xor
in
scas
cdq
mov
jns
mov
jmp
ror
mov
xchg
adc
mov
mov
iret
dec
mov
fist
pcmpgtd
inc
cld
sub
mov
ins
adc
add
cmp
xchg
je
cmp
fld
retf
call
addr16
jecxz
dec
adc
adc
jg
pusha
sbb
ds
adc
stc
data16
jp
inc
push
pop
(bad)
test
mov
push
jne
pop
daa
cmps
xchg
push
sub
xor
stc
aad
xchg
jl
cmp
mov
ror
lods
ror
lahf
test
add
mov
das
mov
pop
mov
daa
jb
jb
sti
push
mov
cld
inc
lds
cwde
cmp
mov
jo
lea
add
cld
loope
add
imul
adc
iret
jl
cmp
pop
cs
sub
jae
inc
sbb
mov
rol
mov
pop
movs
adc
test
cld
inc
mov
cmp
(bad)
pop
(bad)
jmp
or
aad
mov
push
push
dec
xor
pop
clc
sar
std
call
mov
adc
fcom
mov
xlat
imul
shl
mov
xchg
pop
or
sub
or
das
es
(bad)
int3
hlt
cmp
div
scas
xor
js
out
ins
retf
(bad)
dec
sub
jmp
loop
call
test
stos
and
inc
xchg
(bad)
(bad)
and
ss
retf
and
jns
mov
into
out
int3
or
stos
stc
test
lock
dec
adc
iret
mov
outs
ret
adc
push
outs
scas
push
int
enter
arpl
inc
dec
mov
add
mov
sub
mov
or
test
cli
sub
push
jb
dec
lahf
cmp
mov
sti
movs
(bad)
ins
sbb
cld
pop
inc
imul
xchg
jecxz
cmps
mov
scas
arpl
push
call
xor
add
mov
adc
sub
(bad)
jp
repnz
xchg
les
jnp
jp
cmp
mov
push
(bad)
mov
hlt
call
(bad)
push
dec
pop
loop
mov
mov
add
adc
mov
pop
fstp
popa
xchg
cmp
out
pusha
mov
or
int3
push
test
call
std
ret
cmp
stc
fsub
add
add
add
fsubr
call
std
jnp
mov
pop
pop
xor
in
popf
and
sbb
iret
fistp
mov
dec
int
xchg
ss
dec
adc
pop
je
sub
sbb
mov
adc
xor
fstp
xor
fbld
fwait
pop
or
lock
bound
jmp
xor
fbld
and
dec
call
aam
mov
pop
push
jno
xor
adc
mov
int3
xor
int
dec
or
push
push
aas
or
push
dec
pop
push
in
mov
pop
sbb
adc
mov
iret
sub
mov
test
xchg
pop
pusha
(bad)
jp
jno
push
aaa
push
jge
dec
pushf
cdq
push
mov
xchg
add
jecxz
pop
jno
je
inc
lods
jmp
neg
sbb
push
add
push
rcl
jnp
lock
mov
pop
mov
(bad)
jmp
mov
cdq
sbb
xlat
jmp
out
call
out
scas
xor
jle
xchg
hlt
jbe
int
hlt
hlt
stos
std
inc
test
mov
push
or
jge
push
and
and
ror
adc
sbb
pushf
add
push
mov
mov
add
sbb
jae
in
xchg
inc
cmp
setbe
out
inc
dec
or
push
mov
lahf
inc
(bad)
clc
sub
xor
sub
adc
jnp
mov
dec
retf
scas
loop
cmp
sub
lock
js
add
in
(bad)
daa
dec
fwait
mov
iret
test
clc
scas
lds
js
jp
rcr
pop
lds
mov
add
retf
sbb
mov
mov
popf
push
popf
mov
dec
pop
push
adc
add
retf
jne
sbb
in
sub
ins
cmp
(bad)
cld
jmp
int
xlat
(bad)
call
in
cmp
mov
inc
dec
(bad)
hlt
push
inc
aaa
xor
cdq
add
out
mov
lods
popa
into
je
jle
int3
xchg
cmp
(bad)
in
in
mov
les
fdivr
dec
fdiv
or
outs
adc
pop
cld
jmp
psrlw
fmul
push
jne
das
(bad)
cmp
leave
je
dec
push
and
cmp
popa
sbb
jle
dec
mov
inc
mov
push
mov
sub
data16
or
pop
scas
xor
jmp
add
xor
xor
jp
xchg
retf
ret
sub
mov
sti
or
add
inc
or
rcl
cmps
inc
out
pusha
fld
jnp
xchg
ret
xchg
xchg
cmp
int3
jb
and
adc
stos
and
cld
or
fmulp
pop
inc
adc
sbb
mov
outs
sub
jne
jns
cld
jo
inc
sti
(bad)
hlt
mov
push
arpl
cmp
je
mov
lock
xchg
pop
xor
push
and
push
and
sbb
(bad)
mov
loope
xchg
and
aad
gs
pop
lds
cmps
xchg
fld
mov
test
mov
adc
idiv
js
or
xchg
and
xor
xchg
nop
push
mov
jo
inc
aam
lahf
arpl
lods
or
lods
(bad)
xlat
out
and
xchg
fisttp
mov
xlat
add
arpl
mov
and
and
jne
inc
aam
cmp
inc
push
pushf
sub
rcr
ins
and
into
mov
imul
jge
lds
xor
loop
xor
dec
ja
sbb
push
mov
adc
imul
or
or
test
push
out
cmp
ret
in
add
inc
repnz
(bad)
ror
es
and
mov
and
mov
xchg
xor
pop
out
pop
(bad)
adc
fst
push
into
sti
mov
pop
or
or
inc
loop
jnp
xchg
cli
mov
fcom
test
and
sub
bound
push
push
pop
scas
fs
xlat
stc
mov
adc
not
repz
mov
enter
aam
push
retf
mov
pop
or
or
cmc
mov
or
mov
sub
test
and
std
ins
xor
cs
(bad)
xor
(bad)
popf
mov
or
pop
inc
xor
popf
push
mov
aaa
fcomp
stos
mov
and
xchg
fistp
(bad)
push
jns
aad
push
fimul
add
cdq
mov
xchg
pop
add
jae
aaa
ds
mov
arpl
push
mov
hlt
(bad)
out
sti
mov
jbe
fs
test
outs
pushf
sbb
shl
pop
sub
loop
cmp
cmp
sub
idiv
test
push
bound
(bad)
xchg
push
push
or
xor
mov
je
int3
jecxz
gs
and
dec
inc
jne
push
in
xchg
mov
add
icebp
call
scas
xchg
xor
jle
dec
jmp
cmps
lds
jp
movs
loopne
jno
cwde
sub
xor
psubd
mov
test
call
cmp
shr
sub
pop
sbb
iret
(bad)
fisttp
and
adc
call
shl
xchg
jae
jbe
hlt
push
or
js
cli
out
xlat
stos
jnp
sub
push
popa
bound
adc
push
or
push
jno
mov
lods
cwde
fnsave
xor
sti
mov
jb
test
and
inc
pop
imul
pop
sbb
rcl
sbb
mov
aaa
icebp
adc
mov
inc
data16
lods
cmp
sub
xchg
nop
push
sbb
mov
or
ss
popf
(bad)
mov
pop
fsubr
in
jl
jl
inc
jno
pop
xchg
inc
xchg
xchg
cmp
cmps
stos
sub
enter
ss
and
out
mov
sbb
addr16
jecxz
add
ret
ret
mov
test
pop
mov
push
jmp
dec
push
les
stos
lea
xchg
dec
call
aam
int3
push
(bad)
test
retf
dec
xor
mov
cmp
js
ror
popf
fs
packsswb
mov
(bad)
and
out
dec
test
push
pop
out
add
pop
adc
in
loope
in
dec
ja
in
push
imul
cmps
sub
push
pop
or
fucom
mov
sub
sub
sub
push
dec
ja
cli
dec
mov
mov
mov
and
test
push
cmp
fistp
iret
int
sar
or
test
mov
mul
ret
leave
or
rol
movs
ds
pop
in
jp
and
mov
add
or
sbb
scas
and
clc
sub
sub
push
mov
cmp
test
push
mov
fucomip
int3
loopne
shr
xor
and
xchg
push
retf
cmps
push
pop
test
mov
or
fst
sbb
push
movs
mov
hlt
les
jmp
sbb
out
jnp
fcom
inc
sub
rcr
pusha
adc
sar
jle
popa
or
add
jns
jg
sbb
popf
iret
and
cmc
mov
mov
das
ja
fnstsw
(bad)
fisub
jmp
retf
mov
adc
and
add
sbb
(bad)
in
mov
add
push
mov
pop
xchg
push
les
mov
inc
inc
xor
inc
jle
sti
repz
xor
test
or
and
jae
xchg
movs
jp
movs
scas
xor
adc
ror
fdiv
lods
ret
mov
movs
mov
jo
cmp
(bad)
fs
in
push
jae
add
or
push
mov
jp
ror
push
std
cs
scas
adc
lock
bnd
xor
mov
mov
mov
push
daa
sahf
sub
fiadd
push
test
and
int3
xchg
push
jmp
xor
movs
push
inc
mov
xchg
inc
outs
aas
push
je
repz
dec
mov
ret
ins
jae
sti
add
lods
add
add
and
loopne
dec
mov
adc
sar
add
sbb
test
js
pop
mov
cmps
xor
int
xchg
iret
adc
mov
cwde
gs
sbb
fmul
sub
out
call
repnz
outs
or
cs
das
push
fcmovnb
je
jle
repnz
dec
and
sbb
pop
mov
mov
pusha
addr16
out
xlat
jmp
js
daa
les
inc
xor
cmp
ins
push
lock
xlat
rcl
ficom
arpl
and
ins
and
cld
jne
inc
mov
xchg
mov
fcom
push
cwde
add
fs
push
and
retf
sahf
jns
mov
mov
loopne
dec
xchg
inc
mov
jmp
xor
(bad)
push
pushf
lahf
mov
xchg
daa
adc
out
mov
sub
jmp
in
out
or
into
jmp
cmp
mov
das
mov
imul
or
int3
xor
mov
in
add
xchg
dec
jmp
scas
jecxz
pop
xchg
dec
xlat
mov
pop
(bad)
push
retf
(bad)
adc
add
mov
fwait
lock
inc
movs
adc
repnz
cmc
loopne
jbe
les
or
mov
repnz
xor
mov
cmps
or
xor
jge
jge
enter
rol
jo
or
add
mov
push
adc
(bad)
aam
fs
ret
xchg
jo
adc
sub
cmp
lods
pusha
ins
ins
jmp
test
js
fadd
mov
dec
lfs
sbb
mov
or
sbb
retf
je
push
ret
test
mov
xor
and
iret
or
mov
xchg
icebp
cmp
std
cmp
sub
(bad)
loope
cmp
mov
pop
ins
push
sti
(bad)
xchg
pop
dec
dec
rol
pop
pop
ret
shl
push
ds
lahf
sub
sub
push
enter
into
aas
mov
cmp
adc
das
pop
ins
les
and
mov
pop
cmps
pop
dec
scas
inc
js
(bad)
mov
inc
pop
add
xchg
jno
jg
cwde
add
aam
xchg
and
scas
hlt
mov
pop
cmp
jg
push
aad
mov
mov
ins
jns
mov
jle
or
push
fs
addr16
or
repz
ins
loop
inc
pop
movs
mov
adc
and
daa
xor
in
mov
dec
xlat
sub
push
fwait
sbb
cmp
ja
stos
out
add
or
stc
mov
mov
ds
lock
xchg
inc
and
ja
cmp
mov
ins
mov
addr16
leave
push
retf
xchg
leave
dec
and
aad
and
add
aas
loopne
out
or
cmp
xchg
mov
sbb
sbb
sbb
cmp
bound
sti
hlt
lahf
ficom
fisubr
jae
ss
stos
enter
and
inc
cmp
aas
inc
callw
xchg
push
sub
movs
fst
lahf
mov
jne
jmp
ds
jp
leave
das
scas
or
xchg
inc
inc
adc
pop
xchg
ds
rcl
push
(bad)
fmul
fs
xchg
cmp
pop
stc
xchg
rol
mov
push
fsubr
pop
fimul
ins
xchg
hlt
add
stos
adc
mov
les
jecxz
sub
cmps
mov
pop
mov
pop
lahf
cmc
cwde
mov
xlat
mov
leave
cmp
loopne
push
(bad)
and
rcl
(bad)
cmp
dec
mov
and
xor
and
dec
aad
cld
pop
ror
jmp
mov
xbegin
jecxz
das
xchg
jecxz
arpl
lods
jge
xchg
aam
mov
cld
jmp
inc
jl
stos
popa
les
sar
inc
icebp
mov
aaa
jle
dec
or
repnz
je
(bad)
sub
in
rol
out
inc
aad
pop
(bad)
push
mov
movs
pop
mov
sar
cdq
mov
xor
jg
jl
jg
imul
inc
hlt
loope
push
jnp
and
(bad)
out
es
cmps
mov
mov
adc
mov
xchg
or
popa
imul
retf
(bad)
in
ins
fisttp
pushf
mov
in
sbb
cdq
fwait
dec
fiadd
cmps
ja
out
jge
xchg
add
jmp
adc
in
scas
xor
or
loopne
push
int
sbb
leave
stc
cmp
cmp
pushf
lods
push
(bad)
dec
and
arpl
inc
add
push
xor
leave
dec
leave
xchg
mov
xchg
les
maxps
aam
push
push
jp
leave
jb
mov
jne
dec
(bad)
dec
inc
aas
cmp
aad
test
test
jbe
push
inc
adc
repnz
jne
sbb
dec
ins
pop
inc
mov
retf
cmp
ins
push
cmp
sub
scas
jno
jbe
cli
aas
and
jmp
push
sbb
mov
out
sbb
in
aad
pushf
cmp
xor
fiadd
arpl
iret
fild
inc
lea
pop
and
daa
add
lock
dec
jnp
xchg
push
mov
repz
into
mov
pusha
inc
adc
inc
shr
dec
aas
xchg
add
mov
inc
sub
xor
mov
rol
xchg
sahf
xor
cmp
out
push
sbb
sti
or
adc
popa
pop
xchg
add
push
sub
or
das
stos
mov
rol
dec
call
mov
mov
scas
ret
shl
pop
sbb
or
in
mov
and
adc
cmp
mov
pop
add
cmp
pop
test
stc
xchg
cs
jae
fcmove
mov
imul
add
dec
push
imul
xor
push
out
sbb
in
sub
mov
icebp
arpl
xor
fcom
adc
or
sbb
xchg
inc
into
cmp
fucomp
add
imul
loop
or
rol
inc
xor
cld
repz
xor
mov
les
cmp
loop
xchg
(bad)
test
and
xchg
jno
add
inc
dec
mov
and
scas
ret
or
out
daa
xchg
shl
cmp
jmp
or
cmp
ds
mov
call
call
call
leave
dec
inc
inc
xor
imul
out
or
inc
mov
pop
pop
scas
stc
loop
adc
arpl
in
pop
pop
mov
mov
cmp
mov
es
or
mov
jmp
and
cmp
hlt
out
mov
inc
mov
into
sar
imul
sbb
jge
cmp
and
lods
inc
ins
mov
shr
ror
jns
mov
mov
adc
pop
jns
(bad)
div
xor
dec
inc
mov
push
pop
loop
jmp
push
jmp
jp
adc
xchg
sub
cwde
in
cld
jae
inc
push
inc
inc
add
pushf
rcl
jnp
pop
push
adc
and
ss
ja
lock
int
mov
sbb
mov
std
(bad)
inc
dec
mov
in
sub
mov
sar
sbb
add
push
fwait
xor
adc
(bad)
sti
push
jle
(bad)
mov
or
mov
hlt
cmp
jae
ret
jecxz
inc
jl
aad
mov
mov
push
jecxz
pop
into
push
neg
push
sti
int
push
mov
aaa
jge
in
icebp
mov
mov
fst
sbb
test
ss
push
sbb
mov
packuswb
(bad)
push
dec
out
pop
outs
fistp
call
mov
xor
push
and
xchg
lea
(bad)
push
rol
xor
outs
ret
test
in
fisttp
xor
mov
sar
sbb
sbb
ja
jg
es
ss
push
mov
mul
xor
jns
and
js
icebp
mov
out
fwait
sub
bound
xchg
fnsave
inc
ins
sub
fcmovnb
pop
call
aas
ficom
retf
dec
jg
sbb
push
xchg
ins
pop
pop
or
vpacksswb
loop
fwait
xchg
mov
test
mov
mov
sub
imul
sahf
sbb
jmp
pop
cmp
mov
es
dec
lock
dec
sub
repnz
scas
xchg
sbb
cmp
call
mov
xchg
cs
sbb
imul
rcl
dec
fs
xchg
enter
jl
pusha
aas
inc
pop
push
addr16
rcr
mov
add
lds
sar
push
(bad)
mov
pop
sbb
scas
retf
(bad)
rol
or
jbe
or
dec
dec
lea
add
mov
adc
xchg
cld
stos
xchg
shl
arpl
scas
(bad)
cmp
hlt
xchg
inc
jns
cld
mov
in
mov
inc
in
xchg
dec
jg
cmc
lods
aas
mov
leave
inc
push
inc
xchg
xchg
int3
pop
lock
sahf
je
xlat
xlat
fstp
out
xlat
cld
inc
clc
and
inc
test
out
adc
sbb
dec
push
out
and
scas
gs
jmp
idiv
popa
pop
mov
push
icebp
or
cmp
add
mov
(bad)
adc
cs
push
mov
mov
adc
and
add
std
imul
repnz
mov
out
retf
ja
dec
push
into
dec
ret
sub
std
xor
xor
cmp
push
(bad)
test
push
pop
aad
call
mov
hlt
mov
inc
dec
mov
inc
xchg
cwde
stos
push
mov
push
ret
inc
mov
test
fild
mov
ins
mov
jle
in
jmp
sbb
cmp
sub
in
jmp
jno
xchg
add
push
pop
push
and
stos
cmp
push
(bad)
in
jge
mov
inc
das
mov
stos
sbb
loop
and
cld
ins
ret
aam
push
sub
mov
mov
cld
stc
cmp
leave
adc
mov
shr
cmc
movs
inc
ins
les
enter
jnp
pop
icebp
out
pop
sub
mov
stc
mov
fisttp
es
movs
mov
popa
fistp
or
stc
cwde
jnp
(bad)
out
pop
mov
jp
shr
jns
dec
push
pop
les
pop
data16
sbb
(bad)
cmp
cmp
scas
add
inc
leave
dec
hlt
pop
scas
adc
jnp
shr
lea
jo
retf
cld
fadd
sbb
or
repz
xor
(bad)
js
retf
mov
sub
xchg
dec
test
loopne
(bad)
sbb
(bad)
jecxz
lahf
adc
outs
stos
daa
or
out
inc
mov
xor
xchg
xor
inc
mov
gs
stos
push
pop
pop
and
std
shl
mul
ja
bound
lods
mov
inc
(bad)
and
ret
xchg
sbb
inc
ss
daa
inc
enter
dec
scas
and
xor
push
stos
pop
in
sub
sub
ret
xchg
sub
rol
stos
mov
aam
test
xchg
jb
scas
jmp
sbb
pop
sub
pop
(bad)
sbb
std
jne
test
sub
cli
inc
jns
loopne
and
ins
out
push
dec
imul
mov
pop
sbb
loope
stc
ret
xor
sbb
movs
je
out
loope
bound
mov
mov
das
adc
rol
aad
sbb
xchg
mov
and
test
fdiv
les
in
sbb
or
sti
movs
lahf
int
mov
pop
out
mov
lods
dec
mov
jnp
pop
and
pop
mov
push
cmp
cmc
mov
push
sub
and
fwait
mov
idiv
dec
xor
xchg
jl
fs
push
fst
mov
push
fld
in
push
loop
adc
cmp
sub
and
xor
sar
(bad)
sbb
fild
mov
stos
pop
fptan
push
outs
inc
add
inc
(bad)
ret
imul
pop
sbb
in
arpl
test
ins
ins
push
lods
inc
daa
(bad)
cmp
les
mov
dec
and
scas
ror
retf
sbb
mov
cld
ss
jae
call
cmp
or
ss
in
mov
sbb
sbb
mov
fcomi
rol
sub
push
jmp
adc
add
in
mov
scas
inc
push
sbb
mov
lds
push
xchg
push
fsubr
mov
lods
and
std
lahf
movs
out
imul
mov
ds
mov
pusha
das
aad
stc
dec
idiv
xor
mov
sub
in
and
add
inc
jmp
jmp
push
jae
add
push
and
mov
out
cdq
stos
arpl
shr
in
call
(bad)
xchg
mov
mov
jle
jns
xor
sbb
push
shr
test
in
jge
pop
jl
pop
or
div
je
xor
shl
mov
dec
fldcw
popf
push
push
movs
or
jb
or
outs
jbe
lods
jbe
or
add
push
test
mov
leave
leave
icebp
dec
stos
xor
popa
xor
push
sub
stc
xor
movs
add
and
sbb
push
ds
out
push
jmp
cmp
leave
ds
push
cmc
popa
cmps
adc
sbb
push
pop
lods
push
movs
fild
jp
mov
pop
rcl
rcr
js
call
inc
jmp
xchg
push
mov
sar
daa
or
jg
scas
adc
dec
adc
pop
adc
mov
dec
test
pop
rcl
inc
(bad)
mov
pop
sub
cmp
sbb
inc
ins
pop
inc
push
sub
aaa
mov
push
pop
mov
les
mov
je
dec
stos
iret
mov
xor
nop
jecxz
adc
fst
mov
push
test
mov
push
mov
inc
pop
jno
sub
xor
lock
sar
mov
dec
xchg
fwait
jle
jl
pop
sbb
dec
dec
sbb
shr
adc
add
and
adc
jno
lock
ror
(bad)
scas
retf
inc
scas
mov
out
jge
push
add
out
aaa
jae
mov
retf
sbb
jge
cmp
hlt
jg
push
and
inc
popa
sahf
inc
dec
pop
in
push
push
movs
push
jno
sbb
lds
idiv
fadd
pop
inc
mov
(bad)
push
add
fcom
aaa
mov
xchg
enter
and
pop
pop
push
jg
pop
mov
sub
sub
sub
cld
shl
movs
jp
dec
inc
sbb
repz
sub
pushf
sbb
mov
adc
xchg
mov
mov
mov
ds
jne
aam
mov
dec
out
std
adc
ins
adc
mov
ins
mov
push
inc
das
xchg
sbb
push
ins
addr16
out
fisttp
in
cwde
stos
movs
jle
imul
push
mov
xor
mov
sbb
test
loopne
cli
mov
dec
test
jle
or
xor
ret
dec
rol
retf
pop
adc
mov
dec
addr16
js
push
call
call
inc
sub
mov
arpl
fdivr
mov
imul
(bad)
jge
jmp
stos
in
mov
test
call
push
nop
add
jg
loop
jle
icebp
aad
jbe
inc
rcr
dec
retf
imul
sub
out
mov
cmp
sbb
(bad)
cs
adc
inc
mov
mov
jle
in
mov
xchg
lods
pop
test
mov
jecxz
pop
cmp
mov
or
push
popa
jne
push
pop
xchg
das
pop
push
ss
imul
jecxz
pushf
mov
xchg
jno
and
or
cmc
adc
push
into
sar
inc
push
sbb
sub
push
push
loope
pop
daa
or
and
sub
push
repz
ret
repnz
or
sub
or
jg
iret
sub
jg
mov
lds
and
mov
into
or
pop
mov
dec
out
and
fsub
out
fld
(bad)
push
push
fild
inc
ins
ja
mov
scas
sub
rol
xchg
xlat
jl
jge
es
pop
pop
mov
aad
adc
cmp
adc
inc
adc
test
std
cmp
nop
push
and
fwait
aad
push
es
push
lods
or
ds
mov
shl
push
cld
jae
retf
xor
(bad)
adc
(bad)
bound
daa
jl
addr16
mov
(bad)
mov
jmp
adc
out
loopne
fyl2xp1
fbld
jecxz
es
shl
push
in
(bad)
adc
push
pop
mov
ds
sub
ins
test
out
dec
push
loope
mov
jne
mov
inc
frstor
shl
cmp
ror
xlat
mov
bnd
dec
lahf
out
add
fmul
es
xchg
cmc
push
repz
(bad)
movs
les
push
movs
jns
xor
pop
cs
mov
dec
dec
push
ret
inc
das
pusha
repz
or
std
setne
push
jmp
inc
add
and
mov
cmp
inc
push
es
es
sbb
leave
and
xchg
ret
fdiv
xchg
and
scas
ins
retf
xchg
push
xchg
out
xlat
je
fs
jmp
jns
dec
retf
fdivrp
dec
and
mov
push
add
(bad)
sub
out
add
inc
mov
inc
mov
test
ss
(bad)
daa
icebp
push
mov
stos
sub
jg
test
and
mov
sub
je
add
shr
ret
outs
add
in
jns
dec
pop
outs
ror
or
cmp
mov
movs
inc
popa
sahf
clc
mov
outs
push
push
push
sub
mov
and
cld
pop
inc
mov
push
enter
and
jecxz
adc
inc
call
cmp
ds
cwde
mov
into
mov
push
sbb
lea
lea
jae
xor
sub
repz
and
sbb
pop
mov
aaa
sub
mov
sbb
(bad)
xchg
test
mov
push
sub
pop
mov
fsubr
adc
shr
mov
bound
inc
sbb
pop
xchg
inc
pop
mov
out
out
mov
dec
lds
mov
add
cld
push
sub
xchg
out
add
stos
test
xchg
mov
bound
adc
push
(bad)
aam
mov
dec
retf
fcompp
outs
cmp
sbb
pop
mov
cmc
(bad)
adc
add
call
mov
retf
in
cdq
jae
outs
sbb
cmp
inc
xchg
push
dec
add
mov
repnz
imul
ins
mov
or
out
dec
jecxz
xor
push
cmp
fnstcw
(bad)
lods
pusha
adc
xchg
cmp
sbb
out
xor
in
jo
cmp
push
pusha
outs
loopne
mov
cmp
cmp
enter
mov
cli
push
cmp
psllw
mov
push
ins
push
push
sub
push
call
gs
outs
jmp
rcl
mov
and
outs
stos
aad
aad
mov
cmp
daa
adc
mov
in
cli
les
and
(bad)
call
fcmove
mov
fcom
jnp
pop
xor
xor
or
xchg
push
(bad)
cmp
test
jbe
mov
inc
stos
bound
dec
adc
sbb
mov
fdiv
cmc
or
clc
(bad)
lock
push
add
add
jle
and
and
mov
or
add
jmp
fwait
ret
fild
fimul
out
jge
out
mov
cmpxchg
cmp
mov
pop
sar
cmp
popa
mov
rcr
hlt
adc
outs
push
or
psubusb
lock
add
or
(bad)
out
std
jg
mov
rcl
sbb
adc
scas
mov
mul
out
arpl
xrelease
and
sub
iret
pop
dec
mov
jge
dec
cmp
dec
clc
nop
jg
jne
xor
stc
push
mov
add
jl
repnz
dec
out
ret
(bad)
cmp
std
sahf
sub
and
(bad)
cld
sbb
retf
fs
sbb
mov
xor
jp
or
lea
jle
pushf
xchg
push
les
sti
scas
sbb
and
pop
test
pop
mov
xlat
xor
clc
cmc
mov
sbb
scas
xor
gs
ror
ja
push
das
iret
das
mov
xchg
cmp
pusha
add
(bad)
and
push
retf
jge
dec
and
outs
in
cmp
pusha
stos
lods
sbb
or
aad
pop
aam
xor
rcr
psubb
in
or
fst
rol
xor
fcomp
push
rcr
mov
jnp
xchg
pusha
out
pop
xchg
cmp
jmp
and
cmpxchg
sbb
push
or
push
cmps
enter
mov
sar
pop
pop
lock
xchg
sbb
cmp
ficomp
arpl
mov
push
add
clc
sbb
ss
or
fwait
mov
fdiv
int3
adc
or
mov
mov
push
movs
gs
adc
je
sbb
mov
jle
sbb
sti
sub
xor
in
das
out
pop
mov
sub
and
cmc
jnp
ror
xchg
push
dec
(bad)
push
aad
mov
sar
rcr
inc
pop
out
enter
sub
push
push
lds
cs
call
cwde
cmp
test
cs
js
jno
inc
cmp
pop
outs
jb
aaa
or
push
(bad)
aas
or
xchg
ror
in
int3
and
pop
pop
sub
or
arpl
dec
das
inc
mov
out
mov
loop
mov
and
ficom
pusha
lock
adc
call
mov
(bad)
jbe
jnp
fwait
push
pop
push
jo
pop
xor
dec
xchg
pop
dec
je
sar
push
fild
mov
outs
repnz
pop
xor
test
adc
fwait
into
push
lds
lods
ss
shr
(bad)
mov
cmp
cmps
mov
call
mov
dec
ins
add
xor
mov
xchg
shl
mov
in
pusha
ucomiss
jne
scas
into
xchg
sbb
xlat
out
mov
adc
push
lahf
leave
sub
mov
push
or
cmc
cmp
xchg
mov
test
shl
sub
stc
adc
cs
push
lea
mov
cs
xchg
cmp
pushf
mov
sahf
pop
ins
outs
sbb
clc
fstp
pop
or
movs
cmp
call
aas
and
mov
addr16
and
mov
jg
outs
mov
inc
push
in
pop
xchg
pop
cmp
sub
and
pop
jne
iret
cmc
fdiv
fbstp
jne
mov
fadd
jmp
fsubr
and
in
jge
inc
rol
mov
xchg
movs
(bad)
loope
mul
pop
push
xlat
stos
xlat
add
jae
and
xchg
shr
dec
loope
mov
sbb
aam
mov
jmp
popf
and
ins
ins
clc
lea
out
sbb
xchg
xchg
jns
mov
push
loop
cmp
add
jb
xchg
jo
pop
leave
pop
pcmpeqd
sar
mov
sbb
cdq
mov
aaa
mov
xchg
loop
mov
mov
imul
inc
jle
push
cmc
js
push
loopne
iret
jmp
idiv
arpl
jno
push
(bad)
popa
jmp
mov
cmp
ret
dec
ja
cmp
mov
sbb
das
adc
adc
mov
sbb
cli
fdiv
mov
loope
inc
inc
sbb
jmp
cmps
add
add
fadd
retf
pop
adc
fcom
xchg
out
fistp
arpl
rcl
push
mov
fstp
mov
pop
(bad)
imul
mov
sbb
daa
mov
sub
pop
loopne
pusha
mov
adc
test
cmps
gs
int
es
fmul
mov
cmp
sahf
xor
stc
mov
lods
sbb
mov
aad
jmp
mov
pop
sar
jge
and
fcmovnu
popf
pusha
mov
pop
cmp
sub
push
push
jo
jb
das
aas
mov
repz
push
cmp
aad
loope
fsub
pop
push
ret
mov
add
adc
mov
loope
cwde
push
rcr
pushf
xor
and
xchg
out
(bad)
into
jmp
std
retf
ins
jnp
test
or
ds
jae
std
push
fwait
sub
imul
hlt
fwait
nop
xor
xchg
mov
gs
(bad)
xor
fmul
adc
test
test
mov
sti
and
push
jo
push
mov
push
lahf
popf
fcom
push
cmps
jno
sar
cmp
or
xor
sub
cmp
cmp
lock
cli
repz
pushf
cli
dec
js
push
movs
mov
loope
dec
or
or
dec
sbb
nop
push
fldz
dec
sbb
jp
push
hlt
mov
sub
arpl
stos
pop
mov
rcl
daa
inc
aas
push
pop
idiv
test
shr
gs
mov
test
adc
mov
fcomip
movs
inc
mov
test
push
(bad)
(bad)
adc
xor
ficomp
aaa
jecxz
lods
sub
dec
aad
out
fst
in
mov
cmp
mov
and
gs
test
(bad)
lods
int
jmp
pop
adc
push
sbb
cmps
ins
pop
mov
shl
fsub
movs
sar
or
(bad)
aam
popa
in
cmp
and
pop
outs
repnz
jle
int
jle
outs
sbb
ficom
es
mov
aas
push
ds
or
mov
cmc
pop
leave
sbb
popa
dec
adc
add
pop
enter
mov
jb
push
lods
inc
repnz
mov
fimul
add
sub
mov
out
fist
xchg
mov
cmp
stos
sub
mov
ins
pop
scas
push
xor
cli
cmp
mov
push
outs
jmp
pop
sub
stos
push
cs
call
stos
pop
jo
mov
lahf
leave
into
mov
jg
shl
dec
pop
shl
ror
in
pusha
imul
pop
shl
(bad)
loope
or
test
jecxz
stos
mov
adc
xchg
or
es
pop
test
add
mov
sbb
mov
fwait
test
inc
ja
ret
rol
jno
daa
lds
push
xor
xchg
aam
repz
add
stos
aaa
xchg
add
mov
dec
mov
movs
xchg
pop
(bad)
in
imul
fnsave
mov
loope
xor
out
sbb
outs
jmp
ins
pop
arpl
push
jge
stc
stos
daa
cmps
cmc
and
push
or
sbb
in
or
rcr
xor
cmps
xchg
enter
adc
jbe
mov
call
repz
or
pop
dec
sti
lea
inc
mov
add
push
mov
cmp
lods
adc
sbb
fcom
pop
sahf
sbb
push
cmp
mov
jecxz
movs
sbb
pop
mov
fsubr
add
sub
inc
mov
clc
(bad)
(bad)
in
sbb
pushf
mov
rol
push
dec
cmp
lods
pop
fs
cmc
test
lods
jge
mov
loop
inc
xchg
lock
out
call
fsubr
lods
adc
stc
push
aam
out
movzx
sub
adc
add
pop
inc
pop
pop
loope
mov
and
outs
xchg
repnz
sbb
fs
in
xchg
div
cli
xor
in
pop
cli
daa
pop
xlat
jl
clc
loope
arpl
out
gs
cmp
lahf
retf
or
or
xor
pop
rol
or
sub
test
dec
mov
add
scas
push
retf
mov
es
mov
(bad)
and
(bad)
fwait
cmp
inc
iret
imul
fucomp
out
or
cmp
shl
mov
jecxz
inc
fst
jno
cmps
sbb
mov
ds
add
neg
dec
movs
adc
push
and
scas
or
inc
in
mov
and
pcmpgtw
ficom
into
inc
lock
push
add
jmp
pop
push
and
inc
int
mov
push
mov
enter
add
ret
ror
xchg
sub
push
stos
int3
add
pop
mov
adc
jno
or
mov
rol
imul
or
xor
in
imul
sub
gs
sub
add
out
mov
out
mov
ret
out
fs
stc
ins
fsubr
push
mov
sar
shl
mov
add
iret
mov
add
stc
outs
adc
jnp
daa
jo
pop
call
jae
adc
add
sub
scas
mov
movs
cdq
enter
add
xchg
xchg
pop
stc
sar
mov
(bad)
stc
call
mov
xchg
fsub
in
mov
test
jno
xchg
inc
test
das
outs
mov
stos
retf
lds
scas
sti
pop
nop
(bad)
ror
push
mov
cs
jmp
cdq
std
int3
popf
pop
iret
and
retf
stos
ins
adc
retf
aad
xlat
fimul
cdq
call
fwait
dec
ja
dec
gs
pushf
push
jno
mov
push
inc
fld
mov
lock
mov
cmp
push
das
jle
fadd
or
jg
lods
push
out
mov
movs
pop
adc
mov
push
adc
outs
sbb
sub
loop
jg
aas
clc
jg
mov
sub
out
push
arpl
dec
sbb
adc
fcomp
or
shl
iret
sbb
adc
mov
sub
mov
pop
or
sti
into
cs
test
je
into
popf
adc
mov
test
fld
jp
cdq
ret
imul
dec
ret
push
xchg
mov
push
inc
lahf
sub
push
dec
push
mov
or
xchg
ret
xor
adc
push
(bad)
xchg
daa
add
sbb
mov
adc
es
icebp
pop
hlt
arpl
lds
(bad)
adc
icebp
add
call
push
inc
or
scas
(bad)
jne
outs
enter
fadd
lods
aas
fisubr
gs
cwde
popw
adc
xor
outs
loopne
or
xlat
jne
pop
cld
mov
nop
mov
stc
inc
push
push
sub
bound
and
jns
pop
xchg
es
or
stos
in
ins
mov
and
pop
retf
sub
push
daa
(bad)
xchg
call
mov
xchg
xor
sbb
pop
xchg
push
jno
pop
mov
add
loope
sti
xor
sbb
jmp
dec
iret
xor
cmps
sbb
sbb
mov
(bad)
xor
dec
dec
ror
not
rcr
add
div
ins
and
pop
adc
sti
mov
sbb
gs
mov
dec
sub
pop
xor
push
adc
(bad)
jns
cmp
arpl
pop
cwde
enter
add
es
arpl
ins
pop
adc
or
fsubr
mov
sbb
mov
inc
repnz
dec
stos
mov
push
or
mov
push
lahf
data16
lahf
mov
xchg
fisttp
cld
sub
es
repz
mov
(bad)
push
sub
stos
pop
outs
mov
cmp
jge
jmp
retf
jns
xlat
xor
clc
in
mov
push
and
(bad)
clc
and
test
jl
xchg
cwde
(bad)
mov
dec
jle
repnz
stos
cli
xchg
popa
and
xchg
or
push
mov
mov
cmp
out
adc
push
inc
imul
out
mov
aam
inc
sbb
sbb
test
mov
mov
fimul
dec
(bad)
cld
xchg
dec
fs
ficom
psubusw
out
xchg
hlt
retf
push
mov
push
and
js
dec
loopne
adc
enter
shl
std
stos
rol
sub
in
lods
cmp
ret
daa
lods
(bad)
push
and
nop
ret
mov
cmp
out
push
xor
out
and
frstor
jl
mov
fidiv
(bad)
shl
jl
mov
mov
stos
retf
ret
icebp
xor
fwait
daa
ror
or
popf
push
jno
cld
clc
pop
cmp
and
data16
mov
xlat
lods
rol
adc
or
gs
or
fcom
out
mov
xor
fwait
leave
(bad)
cdq
aad
into
mov
je
cmp
fmul
jge
stc
mov
lods
and
cld
test
jae
mov
cmp
mov
xor
inc
ret
cmp
and
push
fnstenv
pusha
pusha
cmp
sar
cmc
mov
in
les
stos
dec
cmps
sar
pushf
add
and
test
pop
mov
mov
xor
inc
(bad)
dec
outs
jge
mov
outs
mov
aad
xchg
xchg
and
ret
pop
pop
call
cmp
(bad)
xor
leave
push
jmp
adc
scas
sahf
add
popf
cs
out
into
ret
in
repz
sub
fprem1
xor
stos
add
xchg
loopne
(bad)
pusha
mov
adc
inc
rcl
mov
xor
cld
js
mov
push
inc
jbe
jle
push
pop
xor
jmp
test
test
fs
outs
fs
xchg
jg
xchg
into
cld
mov
jne
scas
loop
xchg
(bad)
cld
test
lahf
shl
int3
or
sbb
int3
ror
mov
and
push
add
cmc
ss
pslld
out
xor
ret
icebp
adc
mov
cs
jmp
dec
add
push
mov
sub
dec
imul
test
(bad)
sbb
ret
pop
retf
pop
call
pop
jns
jl
sub
(bad)
cmps
push
jge
sbb
xchg
add
cwde
adc
(bad)
test
push
mov
frstor
repz
pusha
dec
sub
sbb
mov
and
push
out
nop
int
pop
inc
scas
xchg
and
sub
movs
aam
sbb
sub
xor
ins
or
outs
rcl
test
cli
aas
aad
cmp
sub
daa
(bad)
sub
pusha
mov
cmps
fyl2xp1
cdq
lahf
dec
adc
or
daa
mov
sub
retf
mov
pop
or
inc
out
mov
push
sbb
stos
stos
push
frstor
add
retf
bound
in
(bad)
add
cmp
ja
call
stc
(bad)
retf
es
imul
mov
gs
fwait
add
xor
mov
fisub
xor
jmp
call
dec
shl
add
push
in
jbe
stos
mov
shl
xor
inc
xchg
dec
test
mov
aad
mul
mov
stos
sysenter
mov
mov
in
lods
es
(bad)
in
call
add
test
jns
daa
mov
(bad)
test
inc
sbb
and
ss
arpl
jmp
scas
mov
jnp
push
adc
adc
cmp
sbb
ds
mov
dec
sbb
inc
mov
xor
in
mov
sahf
or
ins
adc
pop
push
push
push
and
or
popa
arpl
(bad)
fcmovu
or
mov
push
int
fisubr
retf
mov
jp
pop
int
sub
leave
in
es
add
sahf
xor
sub
mov
int
inc
out
sti
xchg
(bad)
pop
ror
inc
out
add
jmp
mov
test
mov
sub
outs
out
sbb
mov
xchg
pop
push
cmc
scas
scas
sbb
xchg
dec
mov
cmp
jno
push
mov
jmp
pop
sahf
add
jg
jg
cmp
and
sti
and
inc
push
ret
ror
icebp
inc
es
push
out
mov
jp
int3
sub
ins
or
or
(bad)
out
ds
lahf
es
mov
add
pushf
outs
inc
mov
sbb
ja
sbb
jl
int
mov
dec
fwait
mov
xchg
pusha
dec
ret
xlat
jbe
nop
mov
cwde
inc
xchg
add
xchg
cmc
or
nop
push
imul
adc
enter
mov
retf
sar
int3
mov
sbb
out
dec
mov
jbe
mov
add
outs
add
outs
addr16
in
test
and
lods
xor
imul
jmp
mov
fst
and
cdq
jmp
in
lea
cmp
dec
daa
cmc
cwde
test
cwde
stos
hlt
add
jb
xor
fidiv
pop
cmp
adc
mov
daa
retf
dec
jb
and
sti
dec
dec
sub
sub
outs
mov
movs
pop
mov
(bad)
std
xchg
lds
jno
outs
inc
sbb
mov
adc
jle
out
pop
je
les
cmp
data16
in
outs
jo
mov
mov
pop
push
cli
xchg
cmp
jl
jg
sbb
adc
rcr
adc
pop
sub
ja
sar
dec
xor
pop
movs
pop
call
push
in
pop
ror
mov
adc
icebp
add
loopne
aas
push
push
jmp
std
ins
adc
in
jp
repnz
adc
mov
mov
sbb
loopne
int
pop
mov
fistp
fs
mov
push
imul
pop
jmp
mov
push
lods
out
cwde
ret
mov
jns
or
xchg
add
dec
clc
push
add
in
ds
test
pop
sar
mov
call
(bad)
xchg
fidiv
int3
push
or
mov
sbb
pop
int
push
sahf
or
in
aam
(bad)
pop
arpl
wbinvd
jb
and
xor
fdivr
jle
int3
and
jmp
xlat
mov
lea
and
jmp
in
xchg
adc
xor
inc
ret
sbb
cdq
outs
enter
das
rcr
rcl
mov
aam
scas
jge
iret
cmps
out
outs
jmp
aaa
ds
xchg
ficom
jnp
sbb
mov
stos
lds
fld
ret
sbb
cmp
stos
push
dec
ss
mov
mov
mov
jnp
mov
xor
and
js
aam
push
outs
dec
push
xor
push
sbb
mov
repnz
mov
adc
jecxz
test
gs
jbe
inc
aad
sbb
outs
mov
dec
mov
aam
dec
cmp
push
adc
mov
out
test
hlt
rsm
xlat
sahf
mov
jns
mov
out
mov
push
ja
jne
fs
sub
mov
lods
mov
popf
outs
rol
or
jle
sub
jecxz
sbb
ret
mov
les
cmp
out
cmp
loopne
popf
lock
cs
push
jmp
bound
(bad)
(bad)
mov
mov
push
out
and
(bad)
nop
mov
stos
scas
loope
fsubr
xor
sbb
out
mov
movs
add
bound
dec
je
add
lock
test
and
jmp
jle
mov
jnp
xchg
cmp
clc
jae
xor
dec
dec
mov
sub
mov
xor
sti
push
outs
fwait
jg
outs
je
imul
ins
popf
sub
and
movs
cmp
adc
cmps
sub
fsubr
nop
shl
lods
int
or
(bad)
cli
sub
cmp
and
and
cli
jno
jno
xchg
adc
test
fs
jo
cmp
pop
mov
pop
out
loopne
jmp
fistp
push
sbb
jle
punpckhwd
dec
add
cwde
sub
jbe
repnz
aas
jg
sbb
ror
test
pop
pop
into
call
hlt
sub
fist
adc
test
out
cmp
(bad)
cmp
xchg
cdq
push
xor
mov
pop
ret
test
add
xchg
and
xchg
cmp
cmp
push
or
jg
data16
les
push
push
xor
dec
stos
sbb
jne
retf
add
inc
and
and
mov
fs
adc
out
cmp
adc
adc
js
inc
ins
mov
aam
repz
push
sub
cmp
in
inc
retf
sub
test
add
dec
lods
mov
add
ffreep
xor
and
cli
leave
retf
dec
xchg
out
xchg
xchg
mov
and
fbstp
clc
push
cli
inc
or
pop
xor
in
and
pusha
stos
inc
hlt
inc
and
sti
mov
cs
(bad)
pop
inc
fistp
shr
scas
jg
(bad)
(bad)
or
jnp
(bad)
push
dec
mov
xor
fisttp
ds
jge
mov
in
lods
jmp
les
sbb
sub
or
mov
push
add
ss
push
ret
pop
test
mov
aas
sbb
mov
test
cmp
mov
jnp
mov
dec
xor
pushf
sub
sqrtps
std
call
push
cs
fld
dec
sub
stc
inc
test
ja
ror
xor
iret
fcomp
pusha
in
add
(bad)
xchg
mov
enter
push
sbb
test
xchg
adc
daa
xor
icebp
ins
mov
fimul
aaa
mov
sti
sbb
and
ror
dec
xor
mov
jno
test
or
or
std
xchg
sub
mov
dec
dec
cmp
aas
dec
js
sbb
mov
push
push
fisttp
mov
adc
sub
add
in
dec
repz
mov
cmp
std
out
xchg
xor
jle
sub
test
push
faddp
test
(bad)
cs
sti
imul
inc
test
mov
dec
repnz
mov
and
nop
(bad)
push
les
test
mov
in
ds
push
mov
push
cmp
jg
(bad)
sub
out
mov
cmc
jge
mul
in
add
jmp
stc
cmp
and
(bad)
icebp
mov
and
add
jns
xor
adc
jp
mov
cmp
nop
add
adc
xlat
mov
pop
sbb
sub
fstp
(bad)
out
loopne
sub
sub
dec
pop
data16
pop
inc
jge
leave
and
mov
fild
cli
aaa
arpl
out
sub
mov
out
jmp
retf
fisttp
lea
fdiv
pop
(bad)
mov
imul
xor
(bad)
jmp
inc
sahf
dec
xchg
and
aam
inc
arpl
ins
jns
jmp
cmp
and
les
sub
in
or
push
xchg
cld
jmp
pop
mov
(bad)
cmp
shr
sbb
sahf
inc
jle
(bad)
sub
mov
pop
out
xchg
mov
jnp
mov
stos
jp
ja
mov
cwde
sbb
cmp
mov
mov
sti
pop
movs
mov
and
xchg
pop
and
enter
cmp
pop
cwde
inc
push
jle
in
movnti
adc
mov
xor
and
shl
out
pop
loopne
inc
dec
jo
aam
not
fldcw
or
cmp
test
stc
and
bound
cli
or
adc
dec
lods
push
retf
jno
imul
jo
les
adc
add
add
push
aas
or
imul
add
or
xchg
cmps
sub
mov
les
in
push
sar
mov
inc
sbb
je
in
or
(bad)
xlat
add
btc
fsubr
loop
mov
dec
movaps
(bad)
call
test
mov
push
repnz
push
and
pop
mov
push
mov
fcmovb
inc
outs
mov
pop
fwait
sbb
leave
push
(bad)
dec
lock
scas
cmp
imul
xor
sub
pop
lods
out
int
dec
adc
out
ins
adc
lahf
sub
in
mov
sub
jne
(bad)
in
pop
adc
iret
mov
rcl
push
push
mov
js
je
retf
inc
ficom
xchg
lods
or
jns
or
push
xor
pop
dec
xchg
push
push
cmc
clc
cmp
lock
xor
inc
jp
xchg
cli
add
mov
loope
jmp
add
out
(bad)
xor
cmps
jb
aas
mov
mov
ins
fcmovu
repnz
push
hlt
outs
(bad)
sahf
addr16
pop
retf
(bad)
mul
xor
les
jae
jl
(bad)
repz
mov
stc
inc
jno
sub
push
push
jno
xor
mov
push
mov
bound
cwde
mov
dec
das
push
inc
xor
ins
push
adc
lea
mov
fimul
scas
lock
nop
cmp
leave
ins
add
add
mov
lock
xor
je
(bad)
mov
fldenv
jmp
movs
mov
fsubr
dec
pusha
xchg
add
sub
and
stc
dec
ret
mov
xchg
mov
aad
sub
hlt
ja
xor
adc
push
cwde
xlat
fistp
sub
loope
mov
rcr
out
sar
aam
cmps
mov
mov
mov
dec
test
retf
push
sahf
in
cdq
sbb
or
dec
fbld
sub
dec
pop
fdivr
mov
aaa
mov
stos
icebp
xchg
and
clc
push
repz
xchg
add
pop
enter
mov
add
or
jg
pop
lock
push
or
inc
cmp
xlat
shl
inc
xchg
ins
xor
in
pop
pop
adc
mov
add
int
sub
scas
test
push
mov
(bad)
popa
xchg
ss
sbb
and
inc
lds
pushf
mov
int3
lea
jae
popa
add
and
scas
gs
in
or
inc
adc
popa
cmp
lods
inc
jg
(bad)
cmp
aam
daa
ja
lds
mov
mov
js
ss
call
icebp
or
push
shl
mov
pop
or
(bad)
xor
jbe
sar
push
xchg
test
push
push
gs
mov
pop
cli
pop
add
pusha
enter
hlt
stos
or
inc
jae
dec
test
call
jg
xor
adc
add
cwde
sbb
pop
dec
jmp
sub
fbld
push
lea
cmp
in
cmp
add
dec
sbb
mov
adc
mov
fisubr
ror
daa
push
(bad)
outs
cs
sub
cmp
cmp
xchg
xchg
popf
adc
ret
movs
pop
cmp
adc
mov
loopne
inc
jmp
add
pushf
mov
or
imul
dec
hlt
push
xchg
pop
mov
adc
push
hlt
pushf
aaa
mov
aas
ds
dec
add
iret
dec
pop
jmp
xchg
push
dec
xchg
lahf
ja
lods
repnz
into
iret
aas
es
mov
cdq
(bad)
push
dec
xor
sub
repz
xor
(bad)
gs
mov
nop
fild
push
cmps
out
adc
push
and
add
call
popf
iret
sub
push
jns
cwde
mov
adc
and
fs
dec
test
mov
xor
pop
leave
popf
imul
push
mov
cmp
sub
sub
push
stc
mov
mov
push
imul
push
stos
ja
push
shl
(bad)
ins
sbb
test
in
loop
xlat
or
add
mov
dec
stos
stos
push
aaa
sbb
add
push
xor
inc
inc
jge
xchg
cmps
xchg
movs
sti
xchg
sbb
fnstsw
cmp
adc
stos
xchg
addr16
mov
or
lds
pushf
cmp
adc
jae
mov
aas
dec
xchg
movs
lahf
popf
xchg
push
sub
or
inc
and
jno
aam
fdivr
xchg
jb
mov
cmps
(bad)
sub
retf
idiv
xchg
or
jnp
ret
cmp
xor
sar
pop
add
rcl
arpl
adc
jmp
inc
mov
test
into
(bad)
adc
sar
push
outs
ins
lock
pop
cld
push
add
lea
out
jp
data16
dec
js
pop
mov
fisttp
dec
popa
jno
fs
(bad)
ret
out
sti
pop
cs
sub
sbb
mov
ins
mov
mov
jae
scas
je
sub
shr
adc
mov
push
jmp
test
sub
jecxz
or
rol
test
and
in
cmps
or
and
inc
xor
jmp
inc
mov
add
or
adc
(bad)
(bad)
jo
mov
dec
xor
sbb
mov
call
scas
enter
inc
sbb
jb
div
scas
or
retf
test
cmps
jo
add
sbb
in
cs
mov
lods
sbb
mov
sahf
push
xor
into
mov
inc
ins
xchg
aad
loop
fnstcw
xor
xchg
push
xchg
mov
xchg
popf
jg
in
daa
push
adc
mov
fwait
push
ja
popa
add
or
out
push
cld
mov
out
adc
pop
retf
ss
push
pop
fwait
or
mov
pop
and
cmp
mov
loop
push
les
fcomi
daa
icebp
jno
cmp
jge
jno
jl
loop
xchg
in
ss
adc
inc
adc
setno
out
mov
sub
shl
mov
xchg
dec
mov
sub
cmp
adc
mov
test
enter
dec
dec
cmp
icebp
add
test
cmp
jns
ss
loop
and
sar
dec
outs
icebp
stc
cs
push
sbb
inc
outs
push
cli
gs
in
xchg
sub
jl
or
pop
lahf
fisttp
fwait
adc
dec
add
sbb
dec
sbb
xchg
sbb
leave
push
xchg
add
in
lds
scas
xchg
and
fsubrp
fimul
movs
leave
push
mov
pushf
mov
fldenv
pop
rcr
(bad)
popa
in
in
xor
cmp
cld
mov
jb
sti
xor
jo
out
fild
pusha
mov
add
pop
mov
mov
test
shl
mov
jo
jno
push
xchg
scas
scas
mov
cmp
mov
inc
jl
int3
inc
push
mov
mov
sub
sbb
aad
add
and
daa
add
push
pop
fwait
movs
cwde
loope
xchg
fwait
xor
inc
repnz
add
pop
test
sbb
gs
clc
mov
mov
dec
jle
(bad)
fwait
leave
inc
mov
in
dec
shl
out
nop
adc
loop
aaa
mov
pop
sbb
xor
popa
mov
sbb
mov
fisubr
adc
leave
leave
and
scas
cmp
(bad)
into
sar
mov
xor
aam
jle
xor
movs
cmp
cmp
sbb
enter
jnp
fs
inc
scas
sbb
adc
inc
or
enter
dec
jb
cmp
test
ds
imul
test
add
cmps
xlat
sbb
cli
xchg
clc
aas
ins
daa
dec
mov
jg
mov
daa
shr
mov
out
xor
and
loopne
(bad)
push
clc
sbb
push
xchg
jno
ret
arpl
mov
adc
push
in
sub
cmp
mov
bound
jbe
mov
pop
push
cmps
aaa
or
pop
push
aam
or
xor
les
sbb
fs
push
and
imul
pop
inc
repnz
jmp
adc
pusha
or
push
add
pop
or
cwde
daa
pop
xchg
(bad)
cmps
inc
cmp
dec
aaa
add
adc
ret
add
xchg
test
mov
dec
fdivr
ficom
pop
in
call
lods
hlt
add
xchg
inc
xchg
mov
mov
pusha
ret
add
(bad)
ret
ret
inc
enter
in
jo
loope
mov
lahf
test
pop
pusha
in
jmp
hlt
fsub
or
test
dec
dec
les
mov
push
sbb
(bad)
in
imul
dec
popf
fnstcw
loope
push
jp
push
and
or
loopne
es
ret
jl
xor
fld
ja
push
cmp
dec
sub
das
ror
add
ret
out
bound
pop
mov
fcomp
and
retf
xchg
ror
aam
movs
daa
aad
jo
stos
dec
adc
mov
jmp
push
xor
nop
fwait
loopne
xor
aad
dec
inc
fist
enter
aam
ret
lahf
xchg
jecxz
bswap
bound
dec
repnz
jb
add
add
add
mul
call
adc
adc
iret
lock
jl
jmp
icebp
jnp
inc
je
adc
or
(bad)
xchg
mov
arpl
fmul
adc
sbb
xor
cmp
mov
cld
push
inc
sbb
push
in
cwde
outs
(bad)
out
adc
ret
dec
xchg
mov
sbb
ret
stos
movs
inc
sub
cmp
pop
xlat
pop
push
pop
ret
push
dec
pop
out
mov
mov
mov
sub
fst
mov
push
test
sbb
sti
lea
xchg
mov
lock
mov
movs
data16
xchg
sub
(bad)
loop
xor
icebp
or
stos
or
maskmovq
mul
(bad)
int3
mov
mov
mov
dec
add
mov
les
sbb
jecxz
out
jmp
cwde
ror
cmp
add
add
mov
loope
pop
jmp
inc
jmp
sbb
jae
and
mov
lods
xchg
mov
mov
gs
or
adc
or
inc
xor
lahf
test
js
mov
xor
and
xchg
(bad)
mov
popa
arpl
(bad)
addr16
sti
inc
repz
mov
aaa
mov
and
dec
inc
adc
inc
dec
fmul
jecxz
arpl
mul
mov
add
xchg
push
and
mov
mov
xchg
jge
imul
mov
nop
sub
and
lahf
in
fild
inc
jl
and
and
popf
mov
inc
ret
pop
sbb
and
dec
push
cmp
loope
or
fcmovbe
retf
sub
and
ret
std
hlt
sub
sub
sub
ret
loopne
mov
outs
in
push
test
dec
cmp
xor
outs
call
fwait
and
fsub
(bad)
xchg
jge
mov
mov
push
rcl
enter
adc
and
dec
push
in
cs
and
xchg
scas
sbb
daa
ss
out
push
jo
lahf
lahf
arpl
dec
dec
inc
mov
xor
sub
xlat
rcl
int3
and
rcr
jp
pop
pushf
cmp
pop
gs
lock
and
nop
push
ds
push
movs
test
(bad)
xchg
out
push
xchg
push
jge
sbb
push
mov
dec
sub
cmp
test
sbb
push
dec
xlat
fsubr
rcr
das
dec
xchg
adc
cmp
sbb
xchg
xchg
and
mov
ja
pop
xchg
ret
enter
mov
(bad)
or
test
das
neg
dec
cmp
iretw
(bad)
popa
jp
aaa
clc
sbb
mov
xchg
je
or
sbb
fneni(8087
cmp
out
and
mov
dec
pop
cvtps2pd
(bad)
mov
fadd
and
sar
enter
mov
lock
hlt
inc
ret
mov
ret
xchg
or
(bad)
cli
fucom
fcomp
mov
pusha
mov
in
jns
cwde
add
or
push
push
hlt
xor
dec
mov
daa
scas
(bad)
(bad)
outs
xchg
daa
into
out
je
adc
ret
retf
add
inc
and
loop
loopne
outs
movs
push
aaa
jle
popa
test
sti
pop
sbb
test
sbb
xchg
push
repz
dec
pop
out
jg
iret
les
(bad)
pushf
not
xchg
adc
cmps
stc
cmp
outs
femms
or
add
sub
cli
pop
jmp
xor
into
dec
pushf
mov
popf
in
loopne
dec
js
repnz
(bad)
hlt
dec
mov
std
mov
or
jp
retf
test
aaa
inc
jge
(bad)
xchg
mov
mov
add
sub
pop
sub
sbb
lods
repnz
ret
cmp
jmp
bound
pushf
into
aas
(bad)
sbb
cmc
ds
inc
stos
cmp
pop
ja
add
mov
jno
xor
push
(bad)
mov
out
and
inc
xor
or
xor
mul
lock
cmc
inc
cmp
leave
loopne
les
inc
mov
mov
xchg
loop
xor
and
addr16
ins
jp
cmp
lea
jg
xor
jns
sti
lods
mov
dec
sub
lods
sahf
lea
mov
iret
pop
dec
shl
out
sbb
or
sahf
mov
jo
mov
cs
jne
test
test
inc
push
cmp
aad
addr16
rcl
test
mov
in
loope
mov
test
lahf
jo
cmp
xor
pushf
int
or
movs
imul
xor
mul
adc
push
daa
mov
mov
shl
dec
cli
jns
push
dec
fistp
jmp
push
cmc
adc
dec
jl
jae
out
pusha
les
fisub
fcom
in
jmp
mov
inc
dec
ja
mov
mov
loope
xchg
mov
lods
lods
xor
xor
out
jmp
push
fldl2t
lods
retf
lahf
cmps
and
(bad)
adc
mov
inc
inc
add
mov
jl
out
pop
mov
pushf
sub
ret
xchg
dec
mov
daa
call
sub
mov
push
outs
and
jle
mov
push
cmp
pop
jg
outs
imul
mov
xchg
or
pop
rcl
and
out
cli
leave
jecxz
into
mov
ja
bound
mov
pop
call
cmovae
jle
les
pop
xchg
sti
xlat
mov
sub
ja
mov
mov
dec
stos
iret
fcom
sbb
cmp
mov
adc
bound
jge
mov
sti
fcmovnu
ss
je
mov
ficom
jl
shl
test
sub
pop
rol
jns
fild
mov
rcr
(bad)
xor
pop
mov
fsub
gs
cmc
jae
aaa
xchg
jno
mov
repz
(bad)
lods
jo
les
(bad)
(bad)
in
mov
pop
les
js
jbe
push
ror
push
shl
aaa
xchg
push
xchg
add
pop
or
and
pop
dec
pusha
shr
and
dec
sti
push
push
stos
or
fadd
mov
or
inc
ins
or
sub
cmc
loope
leave
jb
mov
test
in
or
ret
xor
mov
or
shl
jge
das
pop
mov
jnp
sub
cmc
push
mov
int3
fnstenv
das
pop
call
pop
(bad)
cdq
xlat
(bad)
mov
or
lahf
push
and
mov
dec
jno
jns
popa
add
test
inc
pop
dec
mov
cdq
dec
fstp
ret
ss
jmp
jns
mov
add
test
xchg
inc
scas
adc
jo
cmp
or
fimul
or
cmp
in
sub
sub
cli
(bad)
sbb
test
pushf
mov
leave
das
rcl
outs
in
mov
sub
xor
push
call
dec
xor
data16
dec
out
jmp
lods
cmps
jbe
inc
lods
xchg
sub
jecxz
ins
jmp
pop
push
cmp
xor
out
cmp
jno
js
add
pop
adc
mov
and
imul
iret
push
fldcw
popf
shr
and
push
mov
sub
int
lahf
adc
push
aaa
fcmovnbe
int
add
sub
mov
inc
je
adc
push
pusha
in
test
leave
cmp
cmps
pop
push
mov
dec
fidiv
push
xor
add
in
add
(bad)
dec
(bad)
nop
mov
loope
xchg
xor
jns
cmp
and
mov
imul
(bad)
stc
outs
pop
add
mov
pop
popa
cmp
scas
(bad)
xor
sub
and
(bad)
aam
cwde
cmp
jmp
test
(bad)
fnstsw
or
retf
mov
lock
jg
lods
mov
and
xor
fnstsw
gs
jb
lock
or
icebp
jp
cs
ret
adc
les
mov
int3
mov
in
push
xchg
or
push
pop
xchg
jle
into
setle
add
mov
sbb
pop
mov
add
ja
fsub
ret
lock
rol
sub
outs
push
imul
std
push
shr
jl
xchg
ins
iret
jo
icebp
retf
mov
jno
mov
loop
cmp
jo
cmp
out
cwde
and
pop
ins
xor
and
imul
in
xor
cwde
call
icebp
mov
adc
xchg
dec
push
inc
push
inc
jmp
mov
ins
sub
fistp
lods
mov
movs
xor
dec
xor
je
add
scas
cmp
sub
or
jno
nop
sub
loop
int3
ret
adc
fnsave
rcl
pushf
pop
or
out
ficomp
mov
push
das
jecxz
stos
nop
sti
and
mov
fwait
dec
adc
mov
leave
(bad)
pusha
adc
int3
pop
add
sbb
stc
add
test
jle
sbb
into
xlat
sti
sbb
std
retf
jns
sub
mov
mov
outs
inc
mov
int
test
hlt
and
ins
bound
movs
dec
test
aas
ins
dec
xor
xchg
mov
mov
mov
dec
jb
movs
popa
addr16
aad
adc
out
or
aam
(bad)
ss
sub
aam
cmp
mov
mov
mov
mov
rcl
cwde
fnsave
dec
cmp
loope
pop
sbb
inc
rcl
sti
mov
nop
fiadd
lock
jbe
(bad)
lods
mov
leave
sar
sub
cwde
xor
(bad)
call
jecxz
inc
push
push
inc
dec
(bad)
mov
inc
pop
or
add
cmp
test
inc
cmp
pop
or
adc
jae
sbb
out
loopne
test
mov
into
mov
add
ja
hlt
or
int
and
xchg
add
dec
repz
jle
sub
stc
adc
in
jb
dec
int3
mov
aam
mov
pop
xor
mov
jecxz
cmp
lods
dec
test
mov
or
xchg
and
aam
cmp
xchg
pop
push
fisubr
inc
xchg
mov
and
add
mov
pushf
cli
mov
pop
xchg
shld
add
aad
je
and
cld
push
shr
bound
pop
sahf
fisubr
aad
popf
mov
mov
push
stc
fsubr
xor
cmps
in
cli
add
(bad)
addr16
push
dec
call
stos
rol
or
xor
mov
into
loope
sub
cmp
neg
mov
test
shl
lahf
jns
pop
bound
sub
cwde
imul
test
cmp
imul
fld
xchg
dec
jbe
add
xchg
jp
out
sub
mov
shr
das
sub
sbb
and
dec
les
ret
dec
rol
aad
pop
pop
mov
pusha
push
push
dec
(bad)
fistp
je
push
(bad)
jge
rcr
mov
das
sbb
retf
les
repnz
(bad)
inc
fld
outs
or
cdq
iret
inc
inc
xor
mov
xchg
or
addr16
xchg
ret
mov
arpl
and
cdq
add
cdq
out
ror
aad
mov
mov
in
icebp
push
rcr
inc
inc
shl
rcr
ror
pop
mov
ror
push
jb
addr16
push
and
inc
cmp
cld
std
imul
sub
movs
sub
ins
xchg
inc
sbb
out
xchg
jg
sbb
and
jno
mov
mov
in
jae
sub
outs
dec
aas
and
mov
leave
mov
test
cmp
inc
mov
call
or
mov
push
test
(bad)
jg
mov
fnstenv
push
shl
fadd
inc
add
cmps
mov
mov
or
lea
adc
inc
pop
test
fimul
xchg
ror
out
sbb
mov
daa
stos
jmp
in
bound
es
adc
xor
outs
daa
inc
repnz
sbb
cwde
xchg
stos
adc
cli
push
cmp
pusha
push
sbb
addr16
(bad)
cmp
adc
xchg
sti
mov
adc
jo
xchg
mov
idiv
jbe
cdq
leave
sbb
test
push
sub
retf
(bad)
xor
jo
cmp
push
cmp
sbb
and
ror
or
add
leave
mov
push
xchg
or
je
movs
xor
pop
dec
inc
xor
xor
ja
rol
inc
push
out
sub
cmp
xchg
or
fbstp
dec
mov
and
mov
push
out
push
inc
ins
adc
loope
out
ja
leave
or
pop
hlt
in
xchg
outs
add
and
mov
mov
std
(bad)
frstor
stos
shr
mov
stc
cmp
jle
or
sub
mov
add
dec
call
aaa
pop
push
fucomi
pop
fisttp
lock
push
jmp
mov
mov
call
test
push
pop
int
xor
bound
fwait
push
arpl
imul
dec
inc
test
shl
pop
jg
mov
mov
mov
call
daa
jg
fs
sbb
(bad)
daa
mov
sub
sti
aaa
fcomp
popf
shl
pop
fmul
pop
push
push
retf
adc
fidivr
xchg
pop
dec
pop
dec
jns
sbb
mov
inc
lock
mov
and
mov
xor
mov
iret
mov
pop
push
xchg
cmps
or
mov
adc
and
ret
outs
stos
repnz
and
mov
or
pop
jnp
rcl
sbb
cmps
push
ret
sub
pop
leave
loope
stos
stos
cmp
dec
and
mov
aas
or
imul
arpl
loope
gs
aaa
xor
sahf
sub
daa
dec
cmp
pop
mov
fld
dec
outs
jl
bound
cmp
push
outs
call
fld
push
add
retf
retf
lods
adc
retf
scas
adc
jecxz
xor
mov
fstp
inc
mov
lods
faddp
or
out
dec
cld
xchg
fldl2e
jl
cs
xlat
ja
ins
pop
jno
popw
sub
hlt
popa
dec
push
or
loope
clc
mov
rcl
outs
dec
dec
inc
mov
add
fld
add
imul
mov
pushf
inc
xchg
scas
inc
(bad)
pop
dec
sti
sub
and
int3
xchg
push
xchg
mov
pop
mov
mov
xchg
pop
xor
lods
je
lods
cld
cmp
cmc
imul
cmp
loop
les
push
sub
add
sbb
inc
and
cmps
add
and
je
xchg
fs
jbe
lods
mov
push
sahf
data16
dec
sub
out
mov
push
(bad)
cmp
push
mov
jae
sbb
(bad)
push
mov
xchg
(bad)
frstor
loopne
dec
and
adc
(bad)
jmp
(bad)
loop
lds
nop
adc
into
add
test
inc
cmps
add
aas
inc
pushf
add
add
mov
and
lea
dec
cli
xor
mov
add
push
pushf
je
arpl
jne
jl
jnp
dec
ins
(bad)
popf
pop
test
xlat
jb
sub
and
ja
mov
cmc
int
xchg
sub
ds
in
inc
xchg
(bad)
or
fnstcw
push
and
out
int3
push
mov
xchg
mov
mov
adc
scas
lods
cmp
ins
movs
pop
rcr
call
outs
xchg
(bad)
les
add
mov
dec
xlat
push
mulps
push
sub
enter
and
inc
xor
das
jl
and
in
push
sbb
gs
mov
int
cdq
addr16
inc
test
lock
jp
fidiv
daa
jns
and
xor
aam
inc
jecxz
add
outs
push
pop
fstp
push
lahf
call
sbb
adc
gs
outs
pop
xchg
repnz
mov
es
mov
add
or
ds
xchg
xor
push
in
daa
ficomp
inc
dec
pushf
stos
arpl
int
imul
pop
mov
mov
arpl
push
inc
inc
repnz
popf
jns
in
and
imul
ss
sub
int
mov
jmp
mov
dec
xchg
mov
jecxz
dec
in
mov
aas
fidivr
jnp
mov
and
bound
cmc
sub
icebp
in
es
popa
aam
dec
dec
inc
aas
mov
fisubr
xor
test
scas
(bad)
push
pop
mov
mov
daa
les
inc
adc
pushf
ss
and
sbb
call
cmp
aas
and
jo
repz
mov
sub
pop
add
cdq
cmp
inc
jmp
sar
mov
test
sar
pop
retf
dec
add
push
mov
or
cmp
xor
sub
mov
xchg
cmp
or
repz
inc
xor
in
repnz
sub
ficomp
(bad)
jp
rol
lds
shr
xchg
test
cdq
in
retf
in
jmp
test
pushf
and
pop
xchg
call
xlat
jle
inc
jecxz
jnp
push
inc
fimul
in
xor
xchg
or
(bad)
aad
xchg
cmp
lds
jnp
xchg
cmp
iret
push
xchg
hlt
or
mov
ret
les
cwde
mov
push
in
mov
mov
psllq
fsub
mov
dec
inc
sub
xchg
ins
mul
sub
xor
iret
mov
inc
sahf
xchg
stos
retf
xlat
(bad)
mul
push
cmp
mov
xchg
or
push
and
daa
daa
ss
out
jbe
inc
xlat
mov
cmps
cs
pusha
xchg
fcom
cwde
xchg
cwde
(bad)
outs
ret
retf
sbb
test
xchg
rol
and
xchg
jp
pop
push
sbb
sub
mov
es
mov
retf
mov
ins
inc
xchg
mov
dec
aaa
jnp
in
ds
mov
xor
into
mov
imul
lahf
sti
ret
cmp
outs
jns
cmps
iret
jno
fidivr
fnstenv
mov
gs
clc
push
imul
push
ret
repnz
xor
mov
ins
jbe
icebp
hlt
popa
mov
(bad)
jecxz
(bad)
mov
hlt
xor
ins
in
xor
mov
(bad)
jmp
push
loopne
daa
jg
clc
mov
jmp
outs
(bad)
ss
push
push
dec
stos
retf
xor
push
push
inc
outs
and
jg
lds
cld
push
fisub
mov
cmp
dec
lds
mov
mov
pop
and
push
adc
cli
xchg
or
enter
jmp
jge
std
dec
stc
xchg
repnz
cdq
pushf
mov
setne
ret
xchg
inc
cld
xchg
inc
inc
mov
(bad)
mov
inc
or
call
loope
shr
dec
fcmovb
or
rcr
push
jne
cmp
loop
mov
adc
xchg
xchg
cmp
or
adc
push
daa
adc
jge
xchg
cmp
mov
and
xchg
sbb
and
(bad)
popf
retf
mov
arpl
sub
fcom
scas
mov
mov
jo
dec
fcmovnu
pop
daa
push
and
in
push
test
cmps
push
stc
jg
cmc
mov
dec
mov
push
pusha
test
mov
icebp
inc
ret
retf
cmp
mov
cwde
stos
adc
fld
inc
mov
xchg
arpl
call
jno
outs
call
xchg
mov
jmp
imul
adc
add
mov
rcr
jmp
sub
jmp
sbb
adc
dec
jnp
cmp
inc
add
dec
sbb
push
movs
mov
jmp
fnstcw
lock
sbb
sub
sbb
push
or
pop
into
in
pause
shl
clc
test
sbb
jmp
out
call
jl
ins
adc
inc
dec
add
or
ret
xchg
adc
jne
(bad)
(bad)
pop
in
mov
(bad)
scas
xlat
and
mov
or
push
xchg
mov
jo
repnz
pop
fidivr
mov
div
out
sbb
sub
addr16
(bad)
mov
ds
aad
mov
repnz
cmp
leave
loope
ja
(bad)
push
mov
shr
mov
in
sub
jp
jmp
push
mov
(bad)
sti
inc
ds
adc
xor
int3
das
mov
ins
adc
fwait
and
movs
aad
test
sar
loope
test
dec
in
add
sbb
dec
xchg
je
mov
mov
test
stc
dec
repz
repnz
not
adc
inc
sbb
lods
(bad)
jp
test
(bad)
jmp
sahf
mov
jae
inc
loopne
dec
out
dec
movs
iretw
adc
add
stos
mov
sbb
std
leave
test
push
push
mov
scas
dec
imul
pop
push
fstp
fs
(bad)
lds
xchg
and
or
jnp
mov
sub
add
sbb
push
adc
pop
mov
std
mov
push
aad
loop
pop
out
and
pop
outs
jmp
ins
pop
(bad)
push
adc
mov
xor
xchg
xor
inc
enter
popa
mov
pop
stc
pop
repnz
ins
call
mov
je
inc
leave
ds
adc
pcmpgtd
sbb
mov
cmp
xchg
xor
sub
loopne
out
rcr
(bad)
sub
jp
xchg
push
mov
inc
mov
ficom
cwde
lods
ficom
sbb
sti
je
mov
add
mov
out
dec
xor
fs
lahf
in
shl
test
pop
pop
cli
mov
sti
xchg
adc
stc
jmp
push
ret
mov
push
in
data16
mov
aad
out
dec
ins
mov
push
sub
mov
retf
shl
bound
xchg
sti
lods
jo
sbb
adc
xor
movs
(bad)
leave
loope
jne
inc
test
mov
or
sbb
cmp
inc
jmp
iret
les
inc
pop
jle
ror
pusha
add
push
sbb
cmp
rol
mov
shr
shl
push
push
xchg
repz
fwait
dec
retf
fcmove
sub
loop
mov
xchg
pop
push
jmp
push
mov
or
int3
stc
adc
push
xor
pop
or
xor
add
xor
adc
pushf
rol
pop
mov
in
scas
test
pop
jl
imul
pusha
mov
mov
lahf
pop
(bad)
fwait
sub
retf
dec
adc
fwait
je
sub
addr16
and
fwait
(bad)
paddq
inc
push
ins
xor
das
xor
jns
test
mov
lods
mov
(bad)
push
cmp
or
inc
outs
les
push
xchg
call
cmps
adc
xchg
les
std
fsub
xor
mov
mov
pop
fisubr
lea
fisubr
ret
out
cmp
xchg
or
jl
push
enter
cdq
(bad)
mov
sti
fwait
sub
shr
xchg
punpckldq
sbb
inc
mov
push
(bad)
out
stos
mov
inc
and
sbb
sti
cmp
call
mov
add
call
pop
loop
bound
int3
cwde
(bad)
dec
aad
or
cld
jb
imul
adc
(bad)
adc
int3
loope
mov
daa
adc
cmp
inc
movs
data16
scas
jb
rcr
fdiv
jbe
daa
add
rcl
and
mov
sbb
lahf
sub
call
dec
std
add
sti
std
or
sub
mov
or
aam
inc
nop
adc
pop
stc
dec
pop
push
or
or
in
mov
adc
xchg
adc
sbb
aam
dec
mov
fdivp
scas
mov
test
jmp
scas
dec
xchg
cld
pop
nop
xchg
and
pop
adc
ins
mov
shl
sbb
rcl
sbb
add
xchg
test
arpl
xchg
or
cld
mov
mov
sbb
popa
push
add
lods
sbb
ret
sbb
cmc
push
aaa
repz
test
mov
jbe
dec
inc
xchg
dec
cmp
jmp
ss
and
cwde
jo
inc
call
retf
cli
dec
lahf
and
enter
hlt
int3
cmp
retf
adc
xor
adc
pop
adc
call
std
sbb
cmp
xchg
ror
push
cld
repnz
pusha
pop
mov
mov
mov
jg
mov
test
stc
push
cmc
test
sub
xor
inc
scas
cwde
fcmovnu
jnp
sub
fnstcw
fwait
pop
lods
jecxz
push
nop
leave
ins
mov
mov
sub
inc
in
dec
sti
mov
das
xchg
call
fld
cdq
inc
cmp
clc
jp
ja
fisub
pop
mov
push
push
inc
inc
and
push
ficomp
lds
clc
cwde
or
sub
stos
mov
sub
adc
push
fild
ins
mov
xor
leave
ss
or
sbb
cs
jl
jae
or
imul
pop
daa
in
sti
stos
jg
cdq
fiadd
lods
inc
sahf
test
pop
and
repz
int3
mov
pop
gs
lahf
sub
(bad)
pop
scas
inc
xchg
lods
lock
cmp
mov
push
aad
call
mov
xor
call
sub
aam
mov
adc
in
pop
pop
stos
jno
or
cmc
jge
in
push
dec
sbb
rcr
test
int3
xor
add
stos
arpl
and
lds
add
ficomp
mov
xchg
sar
aaa
movs
inc
mov
ss
push
push
push
cld
inc
add
cmp
dec
jne
add
pop
std
mov
xchg
mov
loope
add
and
test
call
pop
push
jmp
xchg
hlt
push
mov
outs
add
xor
call
mov
pop
and
push
ins
retf
xchg
pop
xor
cmps
or
in
clc
dec
pusha
xchg
lock
in
out
adc
aam
(bad)
mov
std
push
mov
fs
mov
mov
push
and
out
jbe
ja
sbb
xor
sub
loope
sub
adc
lock
or
(bad)
mov
pop
(bad)
ins
cmp
cmp
inc
or
out
jecxz
mov
ret
loop
or
cmp
aam
aam
inc
test
out
push
cmp
mov
nop
push
imul
mov
jbe
repnz
jmp
adc
jmp
dec
sub
xor
adc
dec
fwait
retf
add
inc
pop
or
sti
cmp
call
das
out
rcl
int
movs
clc
shr
adc
xchg
fdivr
rcr
addr16
mov
and
rcl
adc
dec
popa
mov
sbb
and
and
mov
pop
jp
pop
push
push
adc
bnd
jo
inc
adc
sbb
(bad)
shr
sub
xchg
(bad)
mov
push
stos
loop
nop
and
mov
ret
jo
pop
aaa
js
rol
lods
scas
retf
xchg
es
lea
sbb
fsubr
cmp
dec
fsub
inc
mov
and
adc
mov
adc
fwait
call
aas
imul
and
hlt
or
imul
ins
xchg
cmc
mov
int3
mul
xchg
gs
cdq
cmp
inc
(bad)
das
push
dec
(bad)
fcmove
xor
daa
xchg
ror
leave
popf
mov
sub
and
jmp
in
cmp
addr16
out
mov
push
scas
sub
dec
test
push
or
icebp
push
addr16
mov
lock
jecxz
xor
aaa
out
jne
fdiv
and
leave
repz
inc
call
lahf
ror
push
out
sub
and
cld
pop
push
adc
and
sahf
pop
out
jne
call
push
icebp
imul
das
jp
pop
cli
and
(bad)
loopne
sbb
xchg
xchg
cwde
dec
mov
inc
ins
xor
pop
shl
jg
mov
arpl
pop
and
into
ds
cdq
retf
test
scas
cld
xchg
cmps
dec
sti
mov
pop
rol
ja
leave
loope
fcomp
dec
inc
stc
xor
je
popf
movs
push
cld
mov
cmp
pop
push
cmps
xor
iret
gs
mov
sahf
out
dec
add
push
in
pop
inc
scas
ret
push
cld
jne
mov
dec
push
rcl
sbb
push
rcr
test
pop
cmp
inc
sbb
ror
jae
pop
popf
add
add
or
ja
pop
dec
in
aam
pop
dec
std
sar
scas
add
mov
lods
repnz
in
push
movs
xor
add
sbb
sbb
loop
push
or
call
les
and
sti
inc
inc
test
call
std
lods
addr16
pop
push
push
xor
jl
fdivr
xor
mov
xor
xor
mov
or
psubq
sti
loopne
ficom
lahf
lock
stos
gs
push
mov
loope
dec
retf
mov
mov
pop
push
mov
fisub
(bad)
sti
xchg
rcr
fwait
xchg
push
rcr
mov
pop
or
jo
mov
rol
(bad)
cmp
(bad)
cli
scas
jb
mov
icebp
and
jb
cmp
and
retf
cli
out
dec
mov
xchg
out
out
xor
sbb
push
xchg
daa
xor
(bad)
inc
mov
in
and
lds
fwait
xchg
add
in
mov
jmp
mov
lahf
dec
xor
cs
cli
mov
sbb
sbb
jge
(bad)
aaa
loopne
push
aas
or
mov
js
cs
call
or
fs
and
cmc
jmp
imul
adc
and
mul
jb
xlat
dec
stc
aaa
test
(bad)
push
cmps
hlt
push
xchg
or
mov
xor
add
stc
jecxz
(bad)
pop
adc
xor
xchg
adc
xor
cdq
add
sub
jns
lods
pop
neg
adc
std
addr16
sar
mov
test
scas
fiadd
adc
test
cmp
cmp
mov
lds
arpl
icebp
bound
rol
jb
push
fwait
jg
jl
pop
sub
retf
in
inc
daa
cmp
retf
dec
mov
outs
fisubr
bound
dec
pop
aad
xchg
mov
hlt
ins
pop
dec
pop
pushf
test
(bad)
fisub
push
sub
sti
retf
fs
cmp
adc
loopne
sbb
push
mov
retf
or
ret
aas
test
in
sub
and
cli
stc
jns
mov
cmp
add
inc
mov
add
push
xlat
loope
movs
repnz
jmp
xor
cli
scas
sbb
sub
sub
setne
xlat
test
movs
sbb
adc
les
pop
and
sbb
mov
stc
test
xchg
rol
lods
sbb
cmps
adc
in
or
sbb
jbe
lds
sbb
jp
mov
cdq
jne
mov
test
cmp
repnz
xchg
call
push
add
movs
xchg
dec
ds
mov
call
mov
and
cld
mov
push
adc
popa
in
pop
iret
stos
aam
ds
inc
lahf
gs
loopne
sbb
aad
xchg
cdq
xor
scas
call
xchg
popf
sub
mov
test
mov
iret
stos
sti
test
mov
mov
fidiv
mov
mov
nop
mov
fs
jg
in
mov
js
stc
pop
pop
jne
jne
(bad)
jle
adc
pusha
addr16
mov
fst
call
jg
sub
es
arpl
clc
popa
jae
stos
test
pop
ret
pop
pop
dec
jbe
out
mov
repz
shr
sbb
fs
popf
mov
stos
js
gs
xlat
mov
stos
xor
dec
and
mov
sbb
pop
cwde
movs
imul
jg
aaa
inc
into
mov
(bad)
enter
mov
add
mov
inc
(bad)
int3
and
shl
test
jmp
into
fs
retf
cs
push
dec
sbb
shl
adc
xchg
push
sbb
fstp
sbb
xchg
mov
push
push
rol
js
cmp
jmp
pop
repnz
aaa
data16
jo
das
sar
add
jg
dec
add
in
enter
dec
mov
adc
fldcw
push
stc
adc
jp
aaa
mov
outs
xor
retf
dec
rcr
add
mov
popa
out
jle
cmp
pop
cmp
stos
hlt
mov
retf
repz
push
and
or
lahf
push
cld
inc
mov
test
xor
repz
int
ret
clc
mov
jbe
adc
inc
adc
cmps
cmp
nop
jns
pop
push
xchg
out
cmp
xchg
dec
mov
ins
mov
jne
mov
hlt
sti
adc
sbb
adc
mov
loop
mov
lods
mov
mov
(bad)
push
pop
xchg
popa
gs
push
aam
cmp
call
imul
fcomp
dec
out
pop
into
mov
push
adc
adc
sub
mov
pop
and
push
nop
mov
in
mov
inc
inc
into
out
or
ret
dec
inc
je
mov
lock
jmp
inc
ficom
and
add
xchg
cwde
mov
call
js
repnz
test
sub
adc
fisubr
lahf
ret
mov
cmc
xchg
dec
jle
push
ss
mov
and
cmc
xor
lods
rcl
sbb
mov
pop
sub
lahf
ret
call
push
lds
dec
scas
inc
mov
cmp
clc
xchg
ror
daa
xor
lea
mov
(bad)
jmp
sub
aam
inc
push
call
inc
push
xchg
cmp
jae
inc
lea
mov
pop
jb
gs
fnstsw
pop
cmp
loop
push
push
pop
xor
iret
add
mov
xchg
or
aad
in
lods
mov
fbld
out
inc
adc
mov
mov
adc
jecxz
pop
mov
jno
xchg
repnz
sub
jae
inc
cld
rol
retf
js
mov
mov
add
stc
push
and
addr16
ret
ja
inc
jae
inc
ins
sbb
xchg
mov
in
jb
int3
cmps
xchg
sub
add
enter
adc
out
cmp
mov
pop
lea
jge
or
outs
fidivr
in
mov
cmps
push
adc
(bad)
pusha
retf
fld
dec
dec
mov
imul
xor
mov
jecxz
cmp
call
lods
mov
jne
lds
retf
fbld
pop
adc
sbb
mov
and
fcmovbe
sahf
sbb
pop
cdq
(bad)
es
mov
daa
pop
xlat
jnp
mov
mov
sahf
pop
xchg
movs
mov
sub
cmps
fiadd
push
add
sbb
into
inc
pop
add
(bad)
mov
sub
pop
pop
xchg
or
inc
movs
cwde
out
cmp
icebp
cmps
mov
inc
and
xor
xchg
movs
repz
das
lock
nop
jns
jle
jo
and
(bad)
add
lods
mov
aam
inc
adc
lods
leave
mov
pop
jbe
aam
mov
mov
jnp
test
pop
xor
cmc
sub
mov
xchg
aam
outs
inc
clc
(bad)
mov
movs
or
pop
push
jnp
shr
sub
lods
dec
push
lods
sub
movs
rcr
sub
ret
and
dec
jo
arpl
cmp
aaa
inc
popa
mov
ds
ret
call
xchg
je
and
(bad)
adc
dec
je
retf
lods
mov
mov
mov
jno
cmp
out
aad
sub
xchg
repnz
mov
popa
sub
loopne
addr16
or
pop
dec
in
push
jo
inc
cmp
cmp
push
dec
sbb
xchg
ds
mov
push
push
sub
xor
outs
int3
xchg
add
pop
dec
fnsave
mov
push
adc
into
xchg
cmp
cmps
outs
or
fwait
mov
pusha
std
sti
cmp
mov
cmp
dec
nop
sub
pop
or
ror
inc
aam
shl
sub
(bad)
xor
add
pop
sub
aaa
push
lods
jmp
mov
test
ds
xlat
pop
fldenv
dec
jns
shl
push
pushf
ror
xor
test
aam
xchg
xor
dec
call
mov
push
enterw
add
sub
js
xor
dec
retf
arpl
aam
fbld
and
xor
out
(bad)
pusha
adc
ja
dec
popa
aad
push
(bad)
and
pusha
fwait
(bad)
std
in
call
addr16
in
xchg
nop
mov
js
test
jmp
xor
test
inc
in
cdq
pop
pop
ret
add
jnp
xchg
pushf
icebp
mov
ins
pushf
push
retf
mov
xor
mov
rcl
jbe
inc
mov
sub
sub
push
adc
loop
xchg
mov
in
mov
repz
retf
sahf
popf
ficom
popa
sub
out
cmp
mov
jns
retf
sub
jnp
xlat
push
(bad)
(bad)
call
icebp
(bad)
cmovns
and
dec
xor
mov
lock
add
data16
addr16
iret
xor
repnz
je
adc
dec
cli
lods
pop
aam
or
jno
cmp
imul
cmp
jle
jle
mov
sub
ror
cmps
js
js
es
pop
test
aaa
addr16
inc
(bad)
addr16
pop
jp
mov
add
mov
lahf
jecxz
jecxz
stc
mov
in
inc
sbb
(bad)
in
mov
icebp
sub
cmp
jl
and
add
movs
mov
stc
jl
idiv
dec
xchg
cmps
repz
aad
sar
push
mov
out
pop
push
mov
retf
repnz
sub
pop
iret
xchg
imul
out
add
fwait
int
dec
mov
sub
cmps
mov
or
jmp
sbb
loope
mov
mov
hlt
hlt
mov
int3
xor
pop
jo
adc
fadd
inc
aam
stos
loope
lds
jno
add
and
cmp
test
mov
popf
test
jo
xor
js
aaa
scas
movs
repz
shr
fild
adc
or
or
cmps
cli
push
imul
popf
cmp
rol
pop
stos
xor
repnz
cmp
add
adc
stos
rol
inc
movs
mov
jo
pop
movs
stc
or
xchg
adc
jno
rep
mov
add
xchg
ror
scas
mov
pop
ror
mov
push
das
aaa
fdivrp
jne
jp
icebp
adc
pop
xor
repnz
ds
add
les
add
cmp
dec
sbb
imul
push
sahf
ret
fist
pop
out
sub
icebp
mov
pop
fbld
nop
call
xlat
rcr
pop
call
sub
xchg
sbb
lock
xor
dec
mov
mov
test
add
or
jmp
dec
mov
(bad)
test
adc
lock
mov
cmps
adc
in
jne
sub
sar
mov
inc
inc
mov
gs
mov
or
mov
test
je
dec
xchg
and
push
aam
mov
push
hlt
fld
aas
or
les
xchg
mov
call
or
std
inc
jmp
mov
mov
(bad)
and
cwde
or
sbb
bound
and
xchg
shr
add
mov
or
xor
xor
(bad)
pop
imul
mov
cmps
arpl
push
push
push
sub
add
data16
outs
mov
jl
shr
sub
mov
fwait
jbe
lods
mov
mov
push
sbb
mov
jg
scas
(bad)
popf
xlat
sbb
xchg
aaa
popf
push
mov
sub
dec
or
cmps
mov
mov
fisttp
xchg
rcr
aad
cmp
nop
mov
pop
ja
aam
test
int3
es
retf
daa
push
xor
mov
push
leave
or
lds
pop
and
ins
div
adc
shl
push
fwait
add
out
lods
push
mov
call
dec
or
pushf
rcl
leave
inc
inc
pushf
mov
mov
adc
(bad)
js
data16
xchg
fimul
(bad)
mov
aaa
sub
push
fild
cmp
imul
xchg
in
fidivr
leave
inc
xchg
out
fiadd
pop
jmp
mov
out
mov
and
ds
cwde
or
mov
mov
shl
gs
push
sbb
cmps
xor
rcl
retf
or
lods
or
enter
push
stos
and
aad
popa
arpl
retf
pop
jl
retf
imul
lods
and
jecxz
push
shl
mov
pop
in
add
adc
inc
sahf
fcmovnu
sub
cdq
cld
addr16
xchg
sub
xor
bound
xor
add
test
jno
loop
push
jns
fsubr
outs
push
push
push
fild
and
ret
jp
jecxz
xchg
lds
retf
inc
test
and
jns
stos
sub
sbb
push
test
mov
es
dec
adc
jne
lahf
xchg
add
or
loope
dec
lahf
xor
mov
test
push
add
jne
adc
test
cmp
xchg
xor
mov
shl
ret
(bad)
jo
xchg
xor
pusha
mov
xor
loop
sbb
push
cmp
ficom
inc
into
add
lock
in
lods
jle
xchg
es
xchg
arpl
mov
pop
adc
shl
mov
push
(bad)
loopne
scas
push
cmp
pop
cmovp
test
mov
pushf
movs
prefetch
ins
jl
inc
jns
add
sahf
rcl
lock
mov
cwde
ret
inc
shl
inc
dec
xor
push
inc
or
lahf
inc
or
mov
js
es
inc
out
xor
rcl
pusha
cmp
mov
(bad)
pop
es
in
mov
in
pop
add
scas
sbb
sub
hlt
out
fstp
(bad)
cwde
(bad)
or
xor
iret
inc
(bad)
lock
hlt
push
mov
je
sahf
pop
outs
mov
fisttp
add
les
add
ret
dec
and
dec
mov
jnp
jp
adc
mov
mov
adc
pop
cwde
test
leave
pop
mov
adc
mov
in
inc
add
popa
xor
lods
jb
lods
add
lods
pop
int
out
imul
jne
xchg
xlat
mov
popa
jge
mov
rcl
and
mov
xor
dec
xor
inc
lahf
cmp
popf
push
fsub
and
mul
cli
mov
xor
inc
mov
and
cmp
int3
cmp
(bad)
rcl
ret
mov
mov
jecxz
xchg
leave
push
inc
mov
test
jo
mov
je
scas
addr16
fimul
iret
push
pop
inc
mov
and
ret
clc
out
rcl
fisttp
pusha
sti
mov
stos
cmp
xor
sub
rol
mov
sub
rol
out
stos
pop
add
push
adc
mov
or
pusha
sbb
pop
jl
shl
add
enter
or
rcl
test
mov
das
adc
mov
push
ins
mov
inc
sbb
cmps
pop
and
call
rol
and
cmps
jle
cli
adc
into
push
jnp
add
nop
push
js
(bad)
and
js
jne
jmp
test
hlt
xlat
push
adc
dec
cmps
in
or
es
ins
jge
dec
add
(bad)
popa
cmp
mul
frstor
mov
dec
cmp
jnp
leave
inc
(bad)
leave
mov
jecxz
sbb
outs
sbb
dec
mov
mov
test
lahf
mov
sbb
adc
int
push
adc
fidiv
movs
mov
pop
mov
sbb
and
fldcw
mov
mov
jo
jne
in
xor
or
ss
or
stos
push
pop
add
pop
pop
out
ds
push
je
jmp
adc
sbb
popa
test
mov
push
mov
adc
aas
retf
push
adc
(bad)
dec
mov
xor
xor
xor
or
or
add
(bad)
mov
clc
jmp
retf
test
xor
xlat
imul
add
inc
inc
jecxz
les
and
es
shr
loope
inc
hlt
stc
sbb
push
jnp
cld
and
fwait
xchg
jg
idiv
dec
dec
cmp
js
inc
je
in
(bad)
xchg
(bad)
js
adc
cmp
daa
scas
imul
aad
es
loope
adc
int3
cmps
jb
jnp
mov
jge
xor
lock
pusha
push
and
inc
jnp
push
out
stos
pop
or
sahf
sub
cmp
fbstp
push
and
adc
cmp
xchg
into
cmp
inc
mov
cmps
pop
jno
pop
add
pushf
(bad)
stc
jno
iret
scas
pop
add
jb
inc
cwde
mov
and
stc
repz
jns
mov
mov
fsub
ret
or
push
test
inc
and
lods
popf
pop
push
dec
(bad)
dec
shl
test
mov
ror
movs
inc
mov
inc
outs
or
sti
jle
test
jns
or
fdiv
xchg
jb
mov
lods
cmps
movs
dec
jno
ins
push
retf
inc
scas
(bad)
int
pop
dec
das
sbb
call
cmp
mov
pop
jno
xchg
int3
mov
mov
pop
jecxz
mov
add
call
call
or
and
ror
dec
out
jle
loopne
adc
sbb
cdq
xor
inc
test
dec
and
sub
stc
(bad)
iret
push
inc
ret
imul
cmp
inc
dec
mov
mov
ror
xchg
jbe
(bad)
enter
ins
mov
movs
xor
clc
xor
sbb
loopne
in
fsubr
xor
pop
push
cmp
push
mov
sub
xor
pop
jmp
cmps
push
mov
sbb
jmp
adc
mov
sbb
mov
cmp
sub
mov
in
les
or
lock
lahf
xor
adc
dec
test
mov
retf
lahf
mov
hlt
push
data16
retf
lods
jp
sti
push
ror
inc
ret
pop
pop
cs
cs
sub
outs
sbb
pop
hlt
mov
call
inc
dec
mov
jo
or
test
sbb
scas
ins
adc
jge
dec
sub
retf
sub
or
jnp
sbb
(bad)
outs
pop
fcomp
jno
les
es
mov
addr16
xor
imul
fdivr
es
inc
lea
jnp
icebp
(bad)
sbb
jle
cmp
rol
or
aas
shl
daa
dec
fdiv
and
sub
and
rcr
jbe
ja
inc
mov
mov
jne
or
xchg
pushf
addr16
mov
adc
sar
mov
jne
dec
test
inc
shl
sub
rcl
mov
mov
mov
inc
xchg
mov
lock
movs
mov
jp
adc
sbb
sub
push
repz
in
push
cmp
pop
stos
and
je
into
push
dec
test
nop
inc
dec
daa
mov
pushf
mov
cmps
adc
mov
mov
mov
add
scas
push
dec
ret
pop
xchg
inc
cmp
icebp
jmp
ror
and
push
stc
and
loop
fs
test
clc
sub
mov
idiv
mov
or
cli
pop
mov
outs
addr16
ins
pop
js
iret
xchg
jae
mov
repz
das
in
cmps
sbb
fld
jae
adc
mov
xor
lods
mov
jecxz
ins
(bad)
sub
out
dec
cmp
lahf
pop
iret
cmp
xor
(bad)
pop
dec
push
fucomi
mov
mov
and
push
lods
dec
dec
lock
pop
loop
or
cmps
mov
fcomp
mov
dec
inc
test
mov
mov
xchg
jno
adc
or
test
pop
iret
pop
dec
jb
ja
sti
mov
shr
or
or
or
js
and
int3
sub
or
inc
leave
not
ret
retf
sub
outs
xchg
mov
dec
mov
add
movs
dec
int
mov
and
and
adc
xchg
mov
lods
les
or
in
and
sahf
push
jmp
push
xor
cli
mov
pop
sub
or
mov
call
cld
aad
adc
mov
imul
pop
lahf
jmp
stos
inc
es
dec
mov
jge
rcl
pop
movs
xor
int3
cmp
scas
mov
pop
mov
xor
in
mov
cdq
mov
jl
mov
sti
add
xchg
shr
les
jno
inc
pop
push
popf
adc
mov
jmp
stos
fs
jnp
sub
mov
sub
adc
rol
in
mov
ins
mov
cmp
test
sbb
adc
mov
movs
cmp
rcl
movs
sbb
xor
enter
loop
fimul
je
cld
cmc
xor
push
pop
out
mov
adc
stos
jo
cs
push
adc
out
pop
dec
mov
or
sbb
sub
sbb
add
outs
cmp
sbb
enter
dec
push
jb
(bad)
cmps
fisub
(bad)
xor
pop
lods
sub
sbb
out
mov
mov
sub
std
aad
mov
or
cmp
out
push
scas
inc
or
mov
sub
sahf
jns
jecxz
int3
retf
nop
push
adc
mov
add
add
ja
lods
add
nop
jno
add
push
aas
mov
xor
int
sti
push
in
pop
ret
dec
jo
xchg
inc
xchg
aam
xor
out
pop
icebp
in
into
(bad)
mov
jmp
or
cmp
pop
and
fbstp
dec
fstp
cmps
mov
dec
pushf
sub
and
cmp
rep
(bad)
stos
cmp
inc
aad
jae
xchg
mov
rcr
mov
and
mov
adc
push
arpl
lock
test
sbb
ja
dec
lds
mov
jbe
adc
(bad)
(bad)
sub
add
dec
pop
mov
jmp
ret
xchg
out
mov
jae
jo
cmp
bound
mov
or
fst
repz
fsubr
sub
call
cs
pop
scas
lds
aam
add
jae
aaa
fst
aas
cmc
(bad)
pop
int
sub
adc
cmp
pop
stc
pop
cmps
retf
and
pop
ins
push
inc
jae
into
scas
lds
dec
lods
mov
jmp
push
es
push
sar
imul
and
sbb
add
out
lds
jg
(bad)
das
out
mov
sti
cld
xor
inc
cs
retf
pop
add
xchg
fistp
pop
xor
int
jecxz
mov
jae
int3
adc
fldenv
in
mov
sub
cwde
cli
and
(bad)
pop
add
mov
dec
and
inc
leave
mov
jo
mov
fmul
inc
addr16
ins
or
xchg
stos
cs
scas
cmp
pop
sub
dec
jae
sub
es
jmp
in
(bad)
pop
sahf
dec
dec
ds
jp
jl
pop
adc
pop
sbb
imul
ds
jle
push
stc
in
mov
mov
lods
and
hlt
icebp
int3
cmp
fs
daa
cmp
inc
mov
lock
push
cli
jmp
or
sub
lahf
jl
cmc
repz
aam
int3
bound
push
adc
cmc
sbb
call
and
push
mov
push
lahf
xchg
clc
push
mov
mov
push
cdq
stc
out
shl
hlt
in
push
push
add
or
movs
cmp
popf
in
mov
in
cmp
push
push
and
xor
fs
xchg
jle
xchg
jle
mov
xor
data16
jge
inc
sbb
xchg
idiv
mov
jae
push
cli
fsub
cmp
sbb
dec
sub
jmp
sub
add
cmp
push
mov
mov
out
int
xchg
gs
retf
push
pop
dec
out
ins
test
xor
fld
repnz
push
adc
add
jne
(bad)
add
inc
imul
div
dec
stc
in
call
call
test
ja
pusha
mov
cmp
pushf
xchg
cwde
out
(bad)
int
hlt
dec
jmp
in
cmp
int
dec
mov
push
cmp
xor
dec
xor
mov
cdq
add
int3
aam
add
fwait
inc
loopne
js
in
test
sbb
mov
pop
int3
or
xchg
xchg
pusha
lods
shl
jns
jmp
test
jl
or
add
adc
xchg
gs
xchg
jmp
loope
ja
sti
push
rcr
jb
out
nop
and
jo
(bad)
jge
sbb
aad
xchg
out
fucom
aas
sub
jge
fcom
inc
retf
sysexit
push
mov
ins
ret
daa
cmps
retf
mov
rcl
fadd
ins
cmp
cmp
inc
les
push
jmp
sbb
adc
push
jmp
stc
sahf
fsubr
aas
lods
and
sub
sub
retf
mov
inc
stc
out
mov
clc
or
dec
sbb
cmps
push
adc
idiv
xor
repz
inc
jmp
push
cwde
xor
ins
sbb
ins
mov
xor
lock
mov
xor
scas
cld
nop
aaa
and
sbb
stos
repnz
adc
inc
cmp
push
inc
test
call
cmp
out
xchg
(bad)
xor
les
inc
sar
lods
iret
push
push
xchg
sub
movs
push
push
(bad)
pop
sub
cli
out
daa
push
loopne
test
fdiv
dec
dec
or
pop
jg
gs
ja
(bad)
fidiv
add
dec
jmp
xchg
test
fidivr
jge
push
and
mov
daa
push
adc
in
sub
scas
inc
lock
outs
pushw
pop
jb
xchg
jmp
xchg
data16
stos
stc
or
sbb
pop
mov
pop
xchg
lea
fld
pusha
and
inc
cmp
repnz
push
adc
fld
xchg
lods
sub
mov
fadd
cs
aas
mov
stos
add
test
mov
not
xchg
jmp
outs
push
jno
xchg
sub
and
cwde
push
or
das
xor
aam
jb
imul
xchg
or
and
xor
jle
lahf
test
(bad)
cmp
fadd
push
int3
pop
fs
not
adc
out
or
jmp
push
pop
shl
inc
inc
inc
test
jge
add
les
mov
out
loopne
in
mov
push
jne
aas
mov
bound
neg
jge
jp
test
in
add
jnp
mov
xor
jmp
call
cmp
test
push
cwde
xchg
rol
push
cmp
fwait
pop
jb
sub
pop
xchg
add
outs
sbb
gs
push
mov
dec
jecxz
popa
cmp
fs
adc
pcmpeqb
pop
ret
xchg
out
or
or
mov
xchg
add
push
fstp
(bad)
adc
nop
or
sub
sub
mov
xor
js
jmp
sbb
mov
push
sub
addr16
lahf
in
xchg
mov
lock
inc
xor
mov
sbb
cmps
cmc
xor
jnp
cwde
jmp
jb
cmps
sub
loop
or
mov
jmp
sar
test
or
shr
stos
icebp
jmp
xor
xchg
xchg
nop
rcr
mov
mov
clc
rcr
lahf
push
gs
dec
popa
iret
mov
jge
test
pusha
and
fdivrp
loop
lods
mov
ss
lahf
xor
sbb
or
push
sbb
adc
xchg
push
(bad)
movd
lods
movs
inc
mov
pop
sbb
xlat
xor
xor
data16
mov
out
and
(bad)
xor
js
xchg
icebp
lods
pop
sbb
loope
push
xor
and
xor
imul
push
push
pop
stos
das
sbb
retf
sar
fistp
sub
test
inc
or
mov
in
imul
mov
ins
sub
and
(bad)
addr16
add
jl
inc
add
mov
mov
xor
iret
push
outs
push
fidiv
xlat
push
ret
and
out
jno
xchg
enter
test
sti
mov
xor
inc
cdq
mov
clc
or
push
pop
mov
mov
call
movs
lds
cli
mov
test
imul
push
and
inc
retf
push
adc
dec
cmp
push
enter
or
push
fimul
cld
gs
sub
adc
(bad)
jle
lock
mov
sbb
or
pop
sbb
das
and
xor
mov
std
fidiv
xchg
lock
xlat
movs
xor
jns
jle
cli
push
in
xchg
lea
or
mov
jno
jl
in
out
push
mov
or
push
adc
mov
shl
je
loope
mov
fsubr
cmc
loop
mov
jns
mov
xchg
push
jae
(bad)
cmp
shl
dec
cdq
les
les
pop
in
rol
cdq
test
pop
sub
enter
gs
or
test
hlt
push
addr16
add
and
or
push
add
pop
jmp
jb
into
std
sub
(bad)
imul
mov
mov
dec
ds
lods
mov
(bad)
popa
or
je
cmp
test
sti
scas
sbb
in
js
xchg
sbb
jge
xor
and
pusha
xor
cmp
mov
and
add
movs
stos
dec
mov
cdq
fbld
repz
and
push
(bad)
mov
mov
cli
jbe
xchg
mov
aas
jb
cmp
push
adc
test
cmp
test
cmp
cld
mov
mov
dec
cmp
mov
and
cmp
push
movs
xchg
pop
scas
lea
inc
adc
xchg
mov
sbb
sbb
xor
and
fmulp
lea
mov
xlat
mov
add
jb
pop
cwde
je
out
test
inc
imul
test
fidiv
scas
pop
jbe
xlat
add
rol
xchg
add
outs
out
imul
mov
sbb
ins
xchg
xchg
in
mov
add
mov
and
pop
test
lods
inc
or
pop
and
cmp
call
cwde
mov
in
jmp
mov
mov
aaa
das
cmps
popa
sbb
dec
mov
mov
movs
cmp
popa
jne
push
cmp
sar
rol
mov
pop
sub
xchg
cmp
aam
dec
jmp
cmp
in
pop
or
inc
clc
and
fstp
mov
sbb
dec
outs
ins
or
inc
ret
pusha
loopne
push
xor
rcr
mov
fst
rcl
adc
mov
dec
dec
nop
dec
adc
mov
pop
hlt
das
das
mov
outs
sub
jecxz
mov
fwait
test
mov
mov
stos
cld
neg
int3
(bad)
mov
leave
jp
cmp
push
sbb
and
xor
sahf
add
cmp
dec
xchg
pop
push
xchg
out
mov
add
mov
ret
rcr
jmp
outs
fcmovb
cmp
loope
pop
adc
ud1
clc
and
xor
retf
jnp
lahf
fs
jne
lock
mov
ror
fistp
les
sub
jne
outs
jnp
xchg
sbb
xchg
cwde
loop
mov
imul
adc
xor
dec
sti
jmp
and
jmp
bound
adc
ja
mov
aad
lahf
add
(bad)
push
sub
outs
inc
cmps
shl
sbb
pop
mov
sub
scas
hlt
(bad)
les
mov
mov
in
and
daa
jecxz
(bad)
adc
xchg
ja
fnstsw
xchg
enter
and
push
dec
dec
push
jo
xor
pop
cmps
lea
fwait
cmp
push
jo
add
and
ror
push
mov
mov
dec
ss
pop
xor
std
xchg
aad
(bad)
mov
stos
mov
push
ja
mov
imul
test
pop
loopne
mov
pusha
call
inc
ret
rol
pop
inc
mov
lods
adc
movs
push
xor
cmp
(bad)
xor
pop
jb
shl
repz
jnp
sbb
xor
push
adc
imul
repnz
sub
adc
aas
stos
mov
sub
add
adc
dec
ins
icebp
sub
dec
push
push
or
shr
ins
push
ret
test
shl
loopne
shr
xchg
ins
mov
add
test
mov
xchg
jg
lods
je
ret
loope
adc
cmp
jmp
xor
lds
xchg
or
ins
jo
das
clc
adc
push
fs
mov
popf
xlat
sti
or
xchg
or
add
sub
out
xchg
xchg
xor
mov
dec
aas
aaa
dec
sbb
call
pop
adc
push
adc
push
adc
inc
das
push
fwait
es
add
test
push
and
daa
aad
stos
jmp
ds
sbb
jnp
xor
pusha
sbb
mov
jbe
mov
push
lods
repnz
push
and
mov
sub
xor
pop
fs
xchg
test
sbb
fwait
mov
fistp
mov
inc
jno
mov
jecxz
fdivr
loopne
dec
out
hlt
sub
(bad)
rcr
shr
(bad)
sub
cmp
adc
mov
add
or
mov
jae
loope
cmp
neg
fldenv
sub
ds
imul
or
adc
cmp
aam
data16
push
xor
sbb
aad
(bad)
xchg
adc
stos
lea
jmp
dec
push
push
pop
lock
adc
test
xor
cwde
xor
stos
ret
nop
add
sbb
sar
in
stos
test
movs
call
pop
jno
test
shl
inc
pushf
scas
push
xchg
fwait
sti
cmp
cmp
mov
xor
test
xchg
mov
aam
jecxz
test
nop
sbb
sbb
or
lods
and
inc
mov
test
pop
mov
mov
inc
or
in
js
mov
call
push
and
push
lods
xchg
dec
xchg
outs
sbb
inc
repnz
xlat
(bad)
cmp
shl
xchg
xchg
inc
sbb
out
mov
ins
dec
fdiv
sub
seta
aad
sbb
push
push
pop
lds
leave
add
mov
lock
push
add
lods
xchg
aas
xchg
dec
and
jmp
loopne
xchg
outs
out
adc
fbstp
mov
aas
inc
dec
pop
movs
arpl
lods
xor
push
ret
sti
cwde
adc
(bad)
ja
fist
adc
or
jmp
cli
dec
test
fnsave
bound
stos
gs
cmp
pusha
loop
push
and
cmps
sub
xchg
outs
addr16
in
dec
cmp
xchg
(bad)
int3
dec
mov
xchg
adc
fidiv
jmp
dec
mov
adc
into
out
loop
pop
jbe
std
in
outs
mov
or
sti
push
push
push
cmp
les
js
push
iret
test
mov
inc
xchg
pop
les
int
jnp
push
mov
push
cmp
imul
sub
or
cmp
ja
sub
inc
add
sbb
push
pusha
pop
dec
test
jl
inc
shl
or
int
mov
lock
lahf
loope
sub
dec
js
adc
xchg
mov
xlat
mov
xchg
(bad)
in
adc
sub
or
jbe
xchg
test
mov
(bad)
aaa
add
xor
xchg
loop
imul
push
repz
call
inc
or
xchg
fnstenv
xor
mov
adc
inc
xor
mov
jp
and
mov
lock
cwde
mov
jmp
inc
lods
push
popa
sahf
and
dec
jo
movs
adc
mov
add
bound
les
mov
xor
fmul
cli
sahf
test
mov
cmps
inc
or
call
pop
xor
pop
test
and
icebp
xchg
sub
cwde
je
call
jecxz
cmp
mov
fsub
sub
pop
imul
mov
outs
mov
popf
or
cmp
daa
pop
inc
cmp
xor
push
adc
icebp
pop
js
and
iret
adc
push
add
mov
pop
jecxz
pop
jecxz
push
(bad)
hlt
loopne
aam
fsub
repnz
mov
rol
jns
ret
mov
jp
push
pop
sbb
pop
push
cwde
fs
adc
repnz
in
xchg
mov
add
hlt
jg
ret
and
ret
ficomp
repz
jecxz
cmps
das
jl
test
stos
movs
loop
jl
test
and
xchg
push
bnd
div
xor
jmp
popa
push
sub
loopne
loop
jne
sbb
sahf
pushf
sbb
cld
leave
mov
rol
fisub
and
nop
and
popf
pushf
and
mov
(bad)
pop
or
ret
mov
test
ss
jmp
pop
jge
out
and
dec
leave
pop
leave
leave
pop
hlt
aaa
or
repz
fcom
test
call
mov
gs
xor
jns
sub
add
(bad)
add
(bad)
not
push
ficom
(bad)
pop
je
jl
cmp
cs
aam
jmp
or
mov
cmp
stos
rol
iret
push
push
add
(bad)
dec
in
push
or
fbstp
dec
xchg
cmp
enter
data16
movs
movs
cmc
cmp
xor
mov
add
push
imul
mov
jns
cmc
test
(bad)
hlt
xchg
scas
xor
cmps
pusha
jecxz
(bad)
jo
call
out
mul
(bad)
cmc
adc
dec
cs
aaa
mov
aam
mov
mov
cdq
rcr
ja
jge
dec
pop
and
mov
cs
sbb
add
sbb
mov
lea
inc
mov
call
xchg
mov
or
idiv
daa
adc
push
dec
jp
das
imul
add
jno
test
push
cmp
popf
pop
shr
sub
add
out
test
cmps
in
pop
movups
cs
cmps
lods
xor
ret
int3
in
xchg
pop
lahf
push
jmp
or
push
lds
pushf
mov
adc
xor
mov
outs
test
lea
lods
pop
jmp
loope
aas
ja
int3
adc
inc
xchg
test
ins
pop
mov
or
sub
push
pop
lea
push
adc
and
or
pop
pop
dec
out
loop
jnp
js
fisub
sbb
or
cs
in
adc
inc
fsubr
adc
pop
pusha
push
sbb
sbb
mov
mov
push
ds
imul
das
iret
das
pop
jno
jmp
pop
int3
fsubr
add
or
paddw
xor
add
pop
pop
test
dec
inc
pop
adc
in
sti
xchg
mov
outs
jle
xor
mov
xchg
popa
mov
repz
aaa
mov
sbb
dec
and
mov
sbb
cwde
shl
stos
enter
mov
cli
ror
mov
(bad)
xlat
aam
int3
sbb
and
stos
xor
inc
add
call
inc
gs
popa
push
nop
xor
shr
scas
add
pushaw
call
add
in
dec
adc
in
ret
shr
dec
and
add
or
xor
push
(bad)
clc
jae
addr16
scas
xor
sbb
mov
xchg
pop
mov
ins
cmp
mov
out
cmp
ret
mov
jmp
lods
inc
pop
mov
int
sbb
in
dec
pop
inc
push
leave
ret
cs
inc
jp
cwde
xor
cdq
jne
or
jle
lea
test
mov
mov
aam
or
jbe
ror
jmp
pop
test
cdq
popf
ja
or
pop
pop
cmp
pop
jmp
mov
push
and
leave
mov
test
aaa
mov
sbb
(bad)
ins
mov
pop
mov
out
icebp
in
jecxz
(bad)
cld
cs
inc
dec
jb
mov
xchg
adc
dec
retf
fidiv
in
call
mov
pusha
push
ja
xchg
inc
(bad)
(bad)
xor
xor
or
jecxz
cmp
bound
mov
popa
fisttp
jge
cmps
adc
mov
sub
jg
pop
cwde
cwde
adc
in
mov
push
std
(bad)
int
movs
mov
cmp
sub
pop
and
jp
adc
aaa
test
push
fmul
push
mov
inc
popa
imul
inc
fisubr
pusha
xor
jge
adc
cmp
ret
xchg
int
xchg
xchg
or
pusha
mov
cmps
sub
sar
sub
retf
or
sar
jl
aad
loope
mov
cli
pop
call
xchg
out
enter
lea
sbb
nop
jnp
pop
inc
pop
add
shr
adc
stc
pop
jbe
popf
outs
fcmovnu
sub
push
pushf
popa
and
loop
mov
xlat
jp
pushf
loopne
adc
(bad)
out
and
outs
lea
push
js
sbb
jae
and
push
movs
inc
dec
mov
add
jo
xor
inc
out
(bad)
pop
aam
mov
sar
icebp
push
dec
mov
mov
mov
mov
dec
movs
mov
mov
add
mov
dec
fwait
xor
pop
mov
es
aad
stos
call
mov
ja
js
ror
push
cmp
jg
test
adc
sahf
je
jle
and
int
pop
dec
ds
xchg
mov
mov
fwait
xlat
pop
jg
dec
es
out
cmp
jne
pop
cld
ins
sbb
push
data16
sub
das
xlat
ja
jp
lea
je
push
xor
ins
mov
(bad)
iret
inc
retf
jb
mov
ins
adc
imul
cmc
xor
and
lods
jmp
jbe
rol
je
sub
loop
push
jecxz
inc
jmp
int3
xchg
jae
outs
or
mov
into
mov
popa
push
cld
xor
out
(bad)
adc
or
jbe
in
out
(bad)
mov
xchg
fwait
sub
mov
mov
xchg
repnz
mov
sahf
out
jns
push
int3
in
mov
scas
mov
pop
rcr
cmps
dec
pop
icebp
jmp
jo
push
(bad)
or
add
sbb
push
jnp
imul
push
pop
push
jl
adc
mov
arpl
sbb
(bad)
hlt
stos
add
xor
xor
push
pop
int3
push
in
jecxz
push
adc
pop
jmp
imul
shr
mov
xor
or
push
std
scas
xor
ins
cmps
out
hlt
pop
sbb
mov
call
sbb
cdq
ror
cmps
cmp
int
cmp
in
ficom
imul
pushf
jg
imul
loopne
cmp
add
out
inc
pop
movs
jb
out
std
addr16
movs
imul
je
(bad)
fist
mov
call
xchg
retf
imul
jp
xor
xchg
shl
push
test
and
mov
and
mov
call
out
xchg
inc
lock
aam
jge
mov
push
push
pushf
shl
jmp
aad
and
sar
pusha
rol
mov
jbe
inc
lock
mov
jl
sub
mov
jnp
int
jne
xchg
jmp
(bad)
test
leave
cmps
or
dec
mov
loopne
(bad)
cmc
mov
std
jp
arpl
jl
gs
xchg
aam
shl
pop
sub
or
cmc
into
xor
cmp
jbe
xchg
lods
ss
adc
dec
push
leave
mov
pusha
pop
jae
rol
imul
push
mov
in
neg
mov
test
jne
jp
scas
mov
xchg
jb
push
inc
sbb
fwait
dec
xchg
fld
fs
mov
mul
pop
data16
fnstsw
shl
adc
xor
dec
(bad)
lahf
cmp
dec
aam
aas
and
and
loopne
or
pop
inc
cmp
dec
inc
leave
jnp
inc
and
jp
jl
test
(bad)
dec
(bad)
jbe
lds
jmp
cmps
aaa
pop
retf
pop
aam
js
sbb
div
mov
cli
or
leave
lods
test
add
xchg
scas
clc
jo
cdq
sbb
xchg
jg
imul
dec
pop
scas
sbb
push
push
xor
popf
fld
sub
sti
or
mov
test
sbb
dec
sub
dec
push
cmp
es
cld
xor
popa
xchg
xchg
popa
lahf
push
jle
popa
jb
and
add
push
mov
cmp
xchg
jmp
(bad)
movs
(bad)
in
mov
js
pop
iret
arpl
icebp
sti
aaa
mov
dec
xor
push
xlat
gs
into
out
inc
int
pop
dec
mov
push
cmp
adc
push
push
test
icebp
test
dec
clc
xlat
lock
xor
and
sub
push
or
retf
fstp
pop
lahf
fisubr
adc
in
outs
push
dec
inc
push
mov
jl
je
xor
add
mov
adc
jns
jns
imul
call
mov
loop
dec
mov
mov
mov
xchg
cmp
and
repnz
mov
mov
imul
jnp
clc
pop
pop
aam
pop
call
cmp
add
inc
pop
fwait
pop
mov
pop
sub
jno
in
jmp
(bad)
jge
das
mov
xor
int3
in
pop
lock
xchg
cld
mov
imul
or
and
not
in
test
xchg
cmps
sbb
and
jg
push
sti
mov
mov
cmc
push
clc
dec
jno
cmps
fsubrp
shl
jne
xor
ds
inc
dec
dec
push
cmp
pop
dec
enterw
mov
nop
sahf
addr16
loop
jg
cld
adc
mov
repz
push
and
addr16
out
fwait
xor
mov
js
in
mov
pop
mov
inc
or
dec
stos
cmp
aad
cmp
cmps
stos
push
add
xchg
imul
sub
repnz
push
jp
push
mov
push
mov
cdq
imul
fdivr
aam
inc
in
test
out
xor
call
rol
add
gs
mov
pop
sub
add
mov
mov
aas
es
xor
jg
mov
mov
sar
pusha
mov
inc
inc
cmps
cmps
jmp
push
xchg
es
call
les
jo
dec
cmp
adc
push
les
aas
inc
loop
cmp
adc
adc
jae
push
(bad)
int3
jno
jmp
inc
push
shl
push
xchg
std
out
mov
repz
fsin
bnd
xchg
mov
daa
sahf
vcvtsd2ss
lds
es
nop
jbe
jle
in
movs
test
pop
jge
add
fst
jecxz
sub
aam
sub
fild
rol
inc
sar
or
push
out
iret
fwait
mov
dec
cmps
jmp
je
xor
adc
in
jno
ds
pushf
int3
pop
fs
out
cmp
outs
and
mov
hlt
(bad)
cld
popa
xchg
int
jb
push
jo
mov
sbb
push
xor
cmp
clc
shr
jbe
jnp
test
fwait
jle
pop
clc
shl
test
xor
ret
arpl
test
xchg
mov
fst
mov
sbb
xchg
icebp
cwde
ja
les
jecxz
es
mov
sbb
int
aad
jns
sbb
mov
inc
cmp
push
pop
jg
cmps
xor
or
or
int
shl
loop
sub
jb
cmps
or
pop
(bad)
ins
fld
mov
mov
dec
jae
fwait
int
scas
push
mov
xor
pop
dec
sahf
push
(bad)
idiv
dec
popa
ins
cs
xor
sbb
std
add
retf
xadd
inc
mov
pop
xor
xchg
call
lahf
sbb
add
sub
mov
aaa
sub
sar
retf
call
dec
mov
lahf
xor
xchg
cmp
fimul
cmp
scas
push
(bad)
movs
leave
shr
in
xor
sbb
(bad)
adc
rcl
jecxz
cmc
and
cli
xor
mov
adc
cmp
in
and
pop
mov
into
pop
call
sub
stos
pop
jnp
inc
repnz
xor
outs
xlat
jle
mov
cli
aad
cmp
loope
add
retf
push
ins
aad
cli
sti
mov
(bad)
dec
(bad)
stos
out
mov
xor
xchg
(bad)
xor
push
inc
push
and
pop
jno
lods
xchg
jg
iret
pop
adc
fwait
dec
icebp
adc
jg
add
or
aas
mov
aaa
mov
mov
sub
jg
mov
xchg
imul
mov
scas
cmp
xchg
jge
imul
sbb
pop
jb
repnz
inc
push
add
nop
dec
push
mov
ss
stos
inc
jbe
mov
jbe
popf
push
xchg
lahf
xchg
pop
fistp
pop
in
and
test
sub
rol
call
aam
aaa
pop
imul
xor
adc
or
push
mov
adc
loopne
sub
cs
and
call
test
jnp
inc
pxor
js
push
xor
dec
cmps
fstp
into
dec
jmp
in
xchg
mov
push
div
cmps
sbb
inc
mov
scas
jle
xor
dec
std
repz
inc
or
rcl
fs
xchg
or
sub
fisttp
loop
mov
cmp
jne
out
mov
test
out
and
ins
jne
mov
or
xor
pop
jne
inc
adc
mov
fst
sar
shr
push
sub
mov
add
or
pop
fucom
or
hlt
mov
mov
jbe
sub
fist
test
jp
and
stos
out
jb
das
mov
jns
imul
fimul
stos
push
aas
jo
xlat
sub
cmp
inc
cmc
inc
and
sbb
sti
pop
pop
push
push
cdq
sub
push
cmp
sub
scas
inc
enter
test
inc
cmp
jl
adc
sub
call
sbb
mov
lea
stc
cmp
rcl
sti
movs
mov
paddsw
fidiv
cmp
sbb
ret
adc
xchg
cmp
mov
stos
adc
dec
mov
dec
add
add
sbb
hlt
push
mov
ss
ja
or
pop
fimul
(bad)
jle
xchg
arpl
or
push
cmp
cwde
cmps
shr
iret
xchg
fild
or
sub
repnz
xchg
ret
push
mov
repz
jbe
add
in
cs
js
xchg
adc
sahf
mov
pop
jecxz
adc
inc
jmp
lds
and
outs
mov
add
cmps
mov
xlat
mov
es
ficom
stos
dec
into
mov
inc
mov
push
adc
pop
or
leave
pusha
jp
jmp
add
test
add
push
push
cdq
jmp
loopne
mov
sub
(bad)
(bad)
jecxz
push
nop
ret
pusha
gs
pop
pop
sub
xchg
enter
inc
cmp
stc
fdivr
xor
enter
adc
jns
loope
xchg
cmp
aaa
sbb
hlt
mov
std
aam
icebp
cmps
mov
inc
fs
stc
jnp
fcomp
cmp
push
adc
movs
and
push
jmp
mul
push
jp
cmp
fisttp
nop
mov
push
and
add
std
imul
xchg
inc
mov
in
fsub
mov
sbb
pop
sub
loopne
lods
ins
sbb
enter
jae
cwde
mov
push
push
xchg
dec
or
push
jge
and
es
mov
data16
pop
pop
out
mov
adc
sti
pop
mov
leave
je
in
adc
mov
cli
ins
arpl
push
dec
pop
cli
scas
inc
xchg
cwde
cs
std
inc
xchg
ffree
mov
add
iret
jno
lahf
mov
mov
ins
fistp
mov
pushf
push
(bad)
add
jbe
sub
sbb
adc
ins
out
enter
popf
push
in
mov
ds
sbb
xchg
sbb
outs
xor
(bad)
xor
mov
outs
xchg
cwde
test
dec
call
(bad)
push
icebp
out
ins
les
sar
push
jo
pop
repnz
jmp
mov
pop
shl
sub
adc
xor
push
xor
imul
into
inc
xchg
leave
lea
or
jo
or
ret
xor
jg
popf
es
int
adc
xor
out
pop
inc
cmp
inc
jnp
in
xchg
mov
out
leave
cmps
push
push
cdq
add
repz
pusha
mov
push
mov
pop
idiv
cwde
rcr
sbb
out
dec
movs
or
aam
mov
mov
out
fstp
rol
push
xor
xchg
sub
(bad)
pop
dec
add
jg
push
mov
ret
in
inc
sbb
jecxz
and
repz
jecxz
or
popf
sar
cmps
add
sbb
mul
jmp
jp
and
nop
xchg
iret
xchg
xchg
pop
add
fwait
mov
bnd
jecxz
aam
ret
retf
pop
push
push
lock
movs
mov
or
xchg
sub
pop
cld
xchg
mov
pop
mov
xor
stos
push
mov
or
ds
xor
lods
cmc
jl
outs
std
cmp
jg
pop
ror
popa
js
ret
cmp
jle
pop
and
push
push
std
mov
and
mov
mov
pop
mov
(bad)
pusha
jecxz
mov
xchg
pop
das
cmp
push
jnp
sub
dec
adc
push
call
out
jbe
adc
pop
adc
dec
or
push
in
sub
bound
pop
jne
push
jae
xor
shr
push
fcomp
(bad)
or
popf
and
xchg
ficomp
inc
(bad)
jns
add
add
mov
fistp
jg
cs
jb
pop
into
sub
mov
jl
jnp
sub
pop
mov
pop
lock
sbb
xrelease
mov
mov
cmc
sbb
cmp
sbb
nop
mov
jae
icebp
in
into
out
jno
inc
icebp
inc
pop
fnstenv
imul
mov
aad
fnsave
gs
mov
mov
dec
adc
sub
lock
mov
xchg
jns
dec
add
pop
mov
jl
pop
mov
and
inc
mov
jl
mov
pop
das
mov
test
(bad)
out
and
jnp
in
cmp
mov
sbb
lds
sbb
and
out
jecxz
loopne
xchg
mov
rol
mov
inc
fstp
fistp
rcl
(bad)
xor
ficom
stos
callw
inc
dec
sub
stos
fldlg2
mov
sub
add
cmp
ins
(bad)
pop
test
(bad)
out
mov
fwait
xor
cdq
call
adc
push
nop
inc
loopne
sbb
cmp
inc
ror
cmp
xchg
jns
cmp
jnp
mov
add
sbb
jle
lock
sub
jns
adc
mov
and
sub
hlt
xlat
add
call
dec
in
sub
jmp
mov
dec
dec
in
hlt
in
or
pop
in
push
mov
cmps
(bad)
jp
stos
push
inc
out
ds
jmp
and
aad
mov
pop
aas
pop
cwde
pop
pop
std
adc
sar
inc
out
inc
out
nop
xor
pop
ret
ss
movs
adc
retf
aad
and
ret
push
in
into
rcl
ja
cmp
add
aam
inc
xchg
loope
push
push
push
push
iret
dec
cmps
leave
nop
push
nop
aam
adc
popf
push
test
(bad)
pushf
repnz
mov
cmp
pop
stos
test
pop
out
cmp
movs
adc
dec
or
add
sbb
jecxz
loop
jb
pusha
sub
loopne
jno
(bad)
cmp
jmp
push
mov
int3
pop
xchg
pop
call
xchg
jge
sbb
gs
fild
add
push
shl
aam
fst
mov
mov
test
jnp
leave
mov
mov
mov
and
fbld
mov
lods
push
push
xor
ss
ret
inc
sub
push
sub
inc
mov
cmp
popa
pop
scas
ret
xchg
(bad)
leave
mov
jmp
cmps
jp
sahf
ins
push
jo
imul
xchg
adc
mov
sub
mov
rol
xchg
enter
in
mov
and
pop
fcomp
push
pop
xor
ins
push
push
scas
test
iret
adc
mov
mov
scas
stos
dec
dec
inc
movs
fidivr
cmc
cmp
stos
sub
movs
cmp
push
mov
test
out
rol
aad
mov
scas
inc
and
xchg
fisub
and
inc
dec
gs
jbe
sbb
sbb
imul
xchg
push
out
cmp
dec
mov
xchg
sbb
(bad)
jo
jecxz
retf
and
cmp
fwait
in
repnz
push
rcl
mov
popa
int
dec
sub
dec
mov
sub
push
ss
push
fs
out
mov
mov
out
push
ss
js
mov
sbb
dec
add
fdiv
mov
xor
pop
xor
pop
cwde
and
push
mov
pop
sub
mov
pop
jecxz
or
loope
mov
pushf
jle
daa
popf
jl
dec
dec
out
xchg
dec
aaa
dec
call
xor
(bad)
int
loop
cmps
movs
outs
pop
jp
(bad)
jp
jge
jg
sub
jbe
or
outs
inc
jmp
xchg
in
rcl
(bad)
popf
mov
mov
jmp
test
mov
inc
ret
add
xchg
ss
or
nop
push
into
fidiv
fwait
cmovl
out
pop
inc
mov
push
inc
xchg
das
mov
jae
icebp
pop
lea
lock
(bad)
(bad)
sub
sbb
ins
retf
mov
fsubr
xchg
lea
je
inc
cld
aam
adc
jb
fimul
les
sub
xlat
adc
jl
jp
in
and
popf
adc
movs
ja
push
aas
clc
add
dec
outs
push
pop
and
in
lock
sbb
call
mov
outs
scas
jl
pop
shl
or
popa
loop
jae
call
jg
push
push
mov
mov
ins
leave
push
ds
ins
shr
(bad)
out
(bad)
fisttp
scas
loopne
pop
pop
xchg
imul
sbb
and
add
ret
pusha
mov
add
mov
xor
dec
push
pop
adc
in
pop
dec
sub
data16
ja
aas
ficomp
jae
mov
add
test
cs
aaa
cmp
mov
icebp
jmp
xor
mov
xchg
loopne
test
cdq
mov
enter
das
dec
pop
mov
fistp
push
enter
mov
mov
lods
mov
rol
pop
push
cs
test
dec
dec
lods
xchg
push
add
pop
lds
sub
push
stos
fbld
adc
push
shl
dec
mov
push
(bad)
int3
pusha
jge
xchg
dec
push
stc
leave
ins
cld
or
arpl
into
test
ror
pop
in
and
inc
xor
pop
jge
push
jae
mov
sahf
mov
daa
lahf
sub
aas
sbb
aad
shl
out
jbe
outs
jae
cmp
(bad)
xchg
loope
jmp
xor
inc
inc
test
out
xchg
cmp
movntps
es
leave
mov
adc
sbb
fdivp
pop
(bad)
ss
mov
cmp
fsubr
xchg
pop
retf
(bad)
fcomp
adc
(bad)
iret
cdq
(bad)
pop
sbb
loopne
aaa
xor
outs
pop
out
add
jp
cmp
push
xor
fcom
jns
inc
cmp
mov
cmp
rcl
cdq
sub
ffree
stc
add
mov
cmp
stc
in
cmp
push
mov
sub
jg
clc
mov
add
int3
xor
xor
call
imul
in
scas
lea
xor
das
pand
aam
fs
sub
sub
xor
inc
mov
movs
pop
fld
add
mov
es
ins
sub
pop
adc
cmps
dec
mov
ins
mul
sbb
fcom
and
in
inc
xchg
inc
sub
dec
jge
call
movs
lea
xor
repnz
jnp
push
aas
dec
fs
and
xchg
jns
dec
dec
dec
sbb
stos
scas
push
jo
shr
mov
ins
inc
cmc
and
sahf
dec
repnz
dec
jecxz
mov
cmps
nop
add
arpl
scas
and
jp
jp
and
pop
jae
pop
jb
popa
sbb
(bad)
push
pushf
sbb
pusha
stos
xchg
jl
jmp
ds
ins
mov
add
lock
int3
cwde
les
adc
dec
test
pushw
out
fldcw
outs
mov
jmp
push
ja
out
std
inc
jmp
pop
mov
enter
cmps
imul
nop
mov
or
mov
inc
xchg
or
into
in
mov
jg
mov
bound
stos
adc
pop
sub
mov
jmp
popa
sbb
cld
leave
popf
cmp
loope
fwait
pop
gs
into
jge
ins
rcl
mov
sub
sub
fisttp
jge
jb
jp
sbb
xchg
jmp
or
push
scas
push
retf
cmp
fiadd
aam
stc
xchg
jnp
inc
retf
leave
mov
jne
test
jne
pushf
movs
pushf
mov
lds
adc
in
jl
pop
dec
dec
jb
ret
and
cmp
test
adc
daa
sub
mov
shr
dec
cmp
cmps
je
test
mov
sbb
lods
loope
pop
into
mov
out
inc
popa
aad
jmp
cwde
aas
adc
adc
xor
mov
pop
mov
pop
imul
push
aad
outs
or
jne
idiv
jmp
ins
(bad)
xchg
dec
ins
sbb
sub
xchg
xchg
xchg
imul
pop
sub
jmp
out
or
push
mov
daa
imul
cdq
sti
sbb
xchg
aaa
daa
jbe
pusha
pop
leave
cwde
mov
push
mov
jne
jo
jp
fucom
xor
mov
ret
mov
mov
rcr
mov
ret
jb
mov
add
retf
dec
cmp
int3
jp
xor
dec
leave
lock
in
das
in
or
mov
push
iret
int
popf
test
inc
popa
sub
jno
and
frstor
adc
retf
out
adc
(bad)
sar
(bad)
(bad)
cmc
pop
out
mov
lea
mov
ds
scas
fild
sbb
aas
xor
sbb
mov
scas
xchg
dec
mov
test
sub
add
sub
fstp
or
adc
test
mov
loope
idiv
pop
add
aad
adc
push
inc
clc
enter
jp
int3
test
or
push
scas
mov
xchg
cmp
push
ins
mov
stc
pop
sub
retf
dec
(bad)
cmp
shl
push
js
add
imul
out
cli
cmps
add
cmp
lea
mov
addr16
mov
cmp
mov
dec
scas
jmp
and
adc
cmp
or
dec
retf
push
add
lds
cli
inc
push
push
shl
fsubp
loope
jmp
cmps
sbb
and
mov
xor
lahf
push
mov
inc
dec
nop
fistp
add
push
pop
das
mov
jo
jne
adc
mov
jecxz
ins
sbb
xor
cdq
pop
into
aaa
popf
jl
jmp
fidivr
call
mov
adc
pop
sbb
inc
adc
mov
cld
jmp
cmp
or
inc
jo
je
mov
lods
test
xor
sbb
mov
push
cmp
push
or
mov
pop
setl
rcl
push
fimul
xchg
push
ret
jne
(bad)
lea
adc
sbb
pop
repz
lahf
mov
arpl
push
loop
push
jb
push
xlat
out
das
jmp
cmp
add
mov
push
out
push
sbb
std
pusha
jl
pop
jecxz
loope
adc
out
test
pop
dec
out
xor
mov
pushf
add
movs
jo
lea
stos
stos
push
jecxz
cmp
mov
in
mov
jae
mov
(bad)
cmp
pop
or
and
(bad)
jg
jbe
js
dec
mov
add
pop
mov
sub
cmp
(bad)
repz
fisub
int3
psubsw
push
jle
sti
cli
(bad)
inc
sbb
je
jmp
pusha
test
add
cmp
mov
mov
jge
mov
and
daa
dec
mov
das
inc
in
es
popa
cmp
dec
es
mov
add
push
and
xor
mov
jnp
mov
cmps
jmp
scas
push
push
cdq
inc
mov
es
jge
inc
mov
dec
jmp
std
(bad)
fisubr
mov
cdq
fwait
cmp
xchg
pop
mov
mov
fld
lds
xchg
loopne
dec
out
xchg
(bad)
push
lods
cmps
outs
sub
adc
call
gs
xor
xchg
mul
jmp
(bad)
jp
jmp
adc
test
mov
gs
outs
arpl
out
and
xchg
mov
ror
lods
xor
nop
(bad)
cld
(bad)
pop
push
adc
pop
add
in
or
xchg
xor
jne
hlt
ja
enter
fnstenv
sub
jnp
stos
pop
or
cmp
jb
pop
cmp
test
scas
hlt
cmps
jl
shl
repnz
push
push
xchg
popa
push
cmp
clc
add
sub
repz
sub
dec
ret
jl
push
mov
lahf
fisubr
int3
mov
mov
xchg
push
adc
sbb
loope
push
jl
sbb
xor
inc
and
and
call
ficomp
inc
pop
in
mov
dec
push
jo
inc
cmp
pop
dec
mov
pop
dec
outs
pop
(bad)
outs
cmp
xchg
mov
(bad)
mov
scas
(bad)
lahf
out
in
inc
shl
add
inc
or
js
jecxz
inc
loopne
push
stos
push
loope
dec
repnz
inc
mov
inc
lahf
mov
repnz
dec
jnp
retf
pop
sub
aam
aad
cmp
jmp
xchg
in
popf
or
sar
cmp
lahf
lea
mov
dec
les
out
jg
sbb
cs
stc
out
mov
jmp
jl
mov
int
idiv
js
sbb
loopne
popf
adc
rcl
stos
sbb
sbb
jge
sahf
out
add
pop
xchg
hlt
cmps
shl
pop
xor
sti
je
outs
retf
js
adc
popf
popf
dec
loope
push
outs
jb
adc
mov
dec
mov
shr
push
in
sub
test
jg
pop
inc
movs
add
mov
into
std
std
mov
lock
cmp
push
ins
std
in
or
mov
hlt
mov
xchg
dec
jecxz
adc
popf
loope
inc
fidiv
cmps
pop
sub
xchg
es
pop
vpminsw
in
lea
cmp
out
mov
fwait
xchg
and
into
out
loopne
mov
push
(bad)
outs
jns
add
cli
rol
sub
mov
lahf
cmps
push
scas
frstor
in
push
xor
jge
pop
ds
stos
cdq
pop
add
scas
inc
and
(bad)
pop
out
stos
sbb
stos
out
jmp
pop
addr16
aam
add
cmp
cmc
mov
xor
rcr
pop
jbe
jle
xchg
inc
in
mov
stc
ins
rol
jl
jge
add
xor
adc
ins
imul
adc
xor
mov
mov
clc
mov
push
addr16
sub
sub
mov
popa
mov
dec
in
push
je
sbb
or
cmp
add
xchg
jmp
dec
cmp
sub
cmps
adc
ins
inc
xchg
sbb
and
sub
ja
dec
test
aas
test
movs
pop
call
out
into
sub
mov
in
bound
push
sbb
lock
add
sub
mov
popa
jecxz
jmp
movs
xchg
or
xor
mov
add
inc
gs
sahf
in
inc
out
push
in
out
sbb
and
mov
jecxz
repnz
clc
mov
xor
adc
cmps
test
sub
push
out
aad
or
or
pop
inc
sbb
fcmovb
inc
(bad)
push
gs
or
push
or
imul
cmps
push
in
movs
(bad)
mov
test
push
pop
push
sub
imul
js
sbb
pop
je
(bad)
push
push
movs
add
aam
or
push
mov
adc
fst
dec
jecxz
rol
in
dec
mov
dec
aam
stos
mov
mov
adc
popf
mov
(bad)
jecxz
mov
jno
(bad)
mov
and
push
ja
adc
imul
movs
and
call
(bad)
mov
(bad)
call
mul
jno
jmp
les
or
imul
ret
mov
sbb
fsub
outs
daa
movs
inc
test
imul
loope
leave
pop
mov
inc
mov
xchg
stc
(bad)
icebp
lahf
jl
je
gs
jmp
aaa
jl
call
lea
xchg
jae
sbb
stos
or
push
sub
jbe
xchg
ds
sub
test
push
mov
div
(bad)
out
mov
fs
and
cmp
or
adc
sub
shl
(bad)
outs
adc
test
jno
inc
out
add
cmp
pop
arpl
sbb
xor
or
leave
add
adc
loopne
(bad)
pusha
or
loope
std
stos
xchg
inc
lock
mov
rol
mov
sbb
sbb
xchg
jl
imul
fcomp
mov
add
push
(bad)
mov
lds
and
or
clc
cmc
mov
sub
fidiv
add
cdq
pop
out
(bad)
adc
rcr
sub
jmp
push
push
jno
(bad)
call
stc
out
scas
jmp
call
xchg
outs
mul
movs
jecxz
jmp
sbb
mov
mov
fadd
pop
neg
cmp
dec
xor
xlat
inc
xor
dec
sbb
fbld
sub
imul
fwait
ror
mov
cmp
adc
pop
sbb
out
pushf
hlt
pop
push
sbb
lock
out
mov
push
daa
mov
xor
in
into
bound
push
push
mov
test
repz
inc
iret
iret
add
pushf
test
out
jecxz
ret
loopne
cmps
cli
pop
dec
jbe
dec
mov
push
jno
mov
mov
mov
cmps
aam
std
movs
mov
xchg
and
mov
mov
jno
or
pop
mov
into
dec
dec
push
and
(bad)
lock
and
int
imul
js
add
dec
pop
outs
scas
mov
inc
test
sbb
cdq
dec
xor
adc
jecxz
push
scas
popf
mov
retf
pop
mov
jne
xor
cmp
mov
outs
adc
les
(bad)
cmc
rcl
sahf
mov
retf
ret
fld
mov
repz
shr
xor
in
div
ins
jmp
(bad)
clc
or
push
movs
push
(bad)
fwait
xchg
(bad)
loopne
jo
pop
inc
jnp
int
je
xor
ror
push
sbb
call
cmp
push
add
push
push
loopne
add
xchg
js
mov
cmps
jns
pop
ss
int3
mov
cmp
or
jnp
data16
rcr
(bad)
out
mov
mov
stc
jecxz
and
xor
sbb
data16
push
ret
aas
fstp
pop
lahf
or
push
outs
cld
mov
aad
xchg
push
sbb
into
sbb
fisubr
ret
xlat
sub
pusha
jmp
mov
jnp
push
pop
jecxz
cmp
das
sbb
jbe
or
adc
jo
retf
lea
sbb
sub
pop
jg
jo
mov
out
test
mov
shl
dec
cmc
pop
fadd
retf
or
not
pop
sub
hlt
iret
xchg
and
stos
mov
mov
in
adc
mov
xor
dec
inc
ror
data16
(bad)
push
push
aad
add
dec
movs
ret
cmp
mov
fwait
add
xchg
adc
ins
jno
scas
mov
mov
mov
mov
push
daa
xor
(bad)
or
push
inc
push
cdq
cdq
je
xchg
add
mov
aad
mov
mov
scas
mov
mov
jmp
mov
fstp
inc
ja
and
bswap
mov
xor
aam
js
cmps
push
outs
add
(bad)
mov
imul
mov
shl
cmc
movs
out
in
shl
inc
sbb
out
(bad)
cli
push
mov
mov
dec
mov
sub
sub
mov
test
mov
or
xor
pop
outs
call
push
imul
cmp
xchg
add
dec
(bad)
out
ror
ss
stc
mov
cmps
ss
inc
rcr
xor
push
mov
mov
cmp
mov
outs
cs
adc
test
adc
pop
icebp
pop
inc
in
nop
add
or
pop
pop
fwait
rcl
xchg
std
inc
movs
icebp
jp
ds
push
cwde
(bad)
fimul
cmp
push
fmul
or
sar
fdiv
lock
cmp
jbe
scas
xchg
mov
add
call
jmp
jecxz
adc
dec
xchg
and
(bad)
shl
and
scas
mov
scas
test
pop
mov
(bad)
fcom
inc
(bad)
ror
sub
nop
inc
shl
fstp
xchg
adc
or
mov
into
adc
pop
pop
xchg
adc
nop
fs
shl
in
xchg
mov
test
pcmpgtb
lods
fidiv
test
out
nop
scas
call
mov
cwde
push
daa
sbb
(bad)
mov
repz
fcmovbe
inc
mov
icebp
cmp
and
gs
xor
sub
enter
xchg
repz
mov
push
xchg
fnstenv
pop
push
jnp
add
dec
dec
mov
hlt
add
mov
sbb
ins
(bad)
scas
popa
jbe
enter
addr16
mov
aad
sub
mov
cmc
and
jae
out
into
push
js
jb
mov
jnp
dec
sub
jmp
(bad)
lods
xchg
and
cli
aas
repnz
cmp
sub
inc
nop
ffree
int3
aam
jmp
dec
cs
gs
jns
clc
imul
stos
es
div
pop
loop
das
js
fisubr
cmp
(bad)
leave
js
xor
sub
inc
add
fcom
pop
pop
shld
jnp
xlat
pop
push
add
cmc
sub
or
nop
cs
sub
fnstsw
mov
cmp
pop
icebp
and
push
push
in
repz
xchg
push
inc
out
popf
jne
je
mov
aad
mov
scas
or
jmp
call
sbb
mov
call
ffreep
imul
call
sbb
and
mov
lds
sbb
das
enter
js
scas
clc
movs
dec
inc
adc
popf
call
ins
(bad)
jmp
ss
(bad)
fcom
add
inc
ins
stc
jle
inc
jecxz
xchg
movs
aam
loop
mov
add
mov
outs
jno
dec
nop
bound
fadd
push
inc
in
adc
push
(bad)
pop
or
outs
xchg
adc
(bad)
cmp
mov
imul
push
mov
ror
pop
in
cmp
in
jne
ret
pop
ret
frstor
mov
pop
mov
lock
retf
arpl
or
aam
pop
aaa
ret
push
in
push
fwait
mov
dec
int3
fistp
sub
pushf
dec
mov
xchg
daa
stos
and
push
push
std
bound
jnp
pop
adc
loop
fild
sub
data16
and
bound
arpl
mov
push
lock
push
mov
jg
push
lea
outs
scas
loopne
add
mov
rcl
add
test
or
sub
mul
sub
jns
xchg
loop
pop
jne
and
mov
mov
call
dec
cli
mov
not
push
lods
mov
shl
mov
and
pop
jae
sbb
mov
(bad)
mov
cwde
inc
mov
or
push
fst
lahf
inc
fidivr
jno
xor
and
fidivr
cmp
in
sti
dec
into
add
cwde
test
mov
cmp
ret
pop
retf
sub
imul
adc
int3
sbb
fnstcw
sub
icebp
loopne
mov
ret
jns
mov
cdq
jno
push
jnp
push
leave
(bad)
or
cli
aam
inc
std
adc
je
ins
mov
imul
jnp
gs
pop
and
xchg
jmp
pushf
loopne
lock
push
jmp
shl
cld
lea
sbb
(bad)
mov
scas
inc
ins
sbb
inc
jmp
sti
stos
push
test
mov
pop
rcr
dec
xor
mov
xchg
icebp
loopne
pop
mov
fcomp
shl
test
cmp
xchg
aam
movs
push
dec
add
sbb
mov
xchg
mov
inc
aad
xor
gs
add
mov
dec
mov
jne
sti
or
ret
mov
xchg
das
jae
adc
add
sub
sub
and
and
das
ficom
sti
test
push
dec
push
pop
mov
sbb
push
adc
dec
jle
adc
sub
lods
mov
add
fdivr
and
add
pop
or
es
aam
enter
cwde
xchg
(bad)
mov
pop
int3
push
pop
dec
clc
adc
cmp
add
sub
adc
daa
inc
cmps
pop
adc
inc
dec
mov
jl
in
repnz
xor
jo
inc
repz
leave
lahf
out
mov
int3
mov
scas
int3
stos
push
adc
adc
scas
in
movs
push
cmc
outs
es
(bad)
and
fbstp
(bad)
mov
in
jmp
dec
push
and
add
jge
push
jns
lds
add
lods
ja
jmp
test
xchg
fbstp
dec
mov
and
xlat
in
or
mov
inc
ror
(bad)
ret
cmps
loop
xor
and
or
cmp
push
lds
xchg
dec
inc
and
adc
jecxz
jb
clc
into
add
cmp
inc
mov
xor
in
mov
sub
jb
adc
xor
fimul
pusha
ret
retf
adc
and
mov
xchg
ror
push
ficomp
ror
cmp
push
mov
popf
inc
mov
ins
pop
mov
pop
movs
or
xor
das
in
push
or
pop
jae
shr
test
cs
mov
adc
test
xchg
cmp
jno
xor
push
jge
mov
mov
cmps
push
outs
mov
add
add
pop
movs
pop
sbb
ins
mov
fild
lea
jnp
adc
xor
push
adc
cmp
out
test
add
sub
mov
cli
mov
repnz
cld
xor
nop
das
imul
out
movs
test
sar
test
in
aas
and
ret
mov
xchg
aas
inc
xchg
nop
add
cmp
push
ins
add
inc
sub
jne
ja
and
lods
imul
movs
jp
pushf
cmp
inc
retf
dec
pop
sbb
cmc
xchg
popa
or
jg
mov
mov
dec
mov
shl
jne
bsf
stc
xchg
jl
daa
ss
inc
add
mov
add
pop
cli
fldcw
stc
(bad)
pop
inc
add
imul
and
aas
sub
popa
test
mov
cmp
jecxz
mov
jae
add
fxch
inc
add
in
cmp
sub
les
mov
fist
pushf
jno
adc
sbb
popf
xlat
mov
xlat
retf
push
and
std
cli
jp
and
xchg
jg
clc
xor
or
into
sbb
fs
xlat
out
movs
lods
or
sub
shl
xor
std
dec
lds
mov
jge
inc
jae
sbb
mov
daa
and
mov
dec
popa
mov
repz
cdq
push
sbb
lahf
jg
inc
rol
or
adc
or
and
sbb
call
ins
pop
je
sar
mov
inc
ret
idiv
cwde
jmp
inc
sti
fdiv
xor
movs
imul
lds
mov
pop
stos
mov
dec
in
movs
dec
xor
aad
lods
or
fimul
jns
mov
nop
sub
ds
adc
pop
outs
gs
ds
mov
jmp
push
cmps
xchg
inc
in
bound
mov
sub
rcl
mov
fcmove
xchg
pop
test
rcr
push
xor
mov
pop
pop
dec
cmp
inc
lods
sub
add
and
jo
xor
scas
clc
and
es
ror
jp
xchg
jno
inc
jmp
add
cmp
xor
push
arpl
neg
nop
pop
jns
or
fs
push
push
sahf
dec
push
sub
mov
jmp
jg
pop
out
xchg
sbb
xor
test
pop
push
mov
sahf
popf
(bad)
retf
pop
adc
mov
fistp
inc
rol
dec
cmp
and
int3
pushf
fdivr
mov
movs
cli
mov
mov
loope
fsubr
adc
out
iret
cld
mov
ins
and
movs
fisub
cdq
dec
cmp
movs
pop
not
xchg
and
cld
sub
call
mov
pushf
mov
push
add
stc
mov
dec
mov
clc
xor
(bad)
dec
cdq
ret
dec
cmp
and
outs
pusha
js
dec
push
out
xor
mov
stos
push
test
jno
jecxz
or
dec
or
push
add
cli
mov
imul
jb
sub
js
movs
test
cmps
push
mov
daa
stc
xchg
fs
cmps
test
stos
xlat
jne
test
leave
mov
jae
cli
jl
cmc
ret
xor
(bad)
jno
dec
(bad)
lods
adc
mov
pop
mov
pop
je
imul
das
push
aad
dec
mov
cld
jecxz
jnp
mov
imul
gs
les
xor
mov
ds
sbb
dec
aas
pop
mov
mov
add
(bad)
aam
sbb
outs
in
xchg
(bad)
jle
xor
out
pop
int
sar
and
loopne
aam
or
mov
mov
xchg
lods
jl
pop
shl
and
(bad)
aas
test
std
pop
jmp
add
push
ret
or
lock
mov
push
jno
dec
jle
mov
xlat
adc
into
js
jecxz
test
xor
sbb
xor
stos
inc
adc
mov
or
sub
pop
(bad)
rcr
stos
ss
or
in
ror
or
mov
int
jg
cmps
dec
dec
push
popa
sub
and
cmp
push
xor
sar
shl
push
test
jns
pop
dec
adc
call
es
rcr
fwait
dec
retf
scas
shl
cmp
dec
lahf
sbb
clc
sbb
les
and
or
inc
sub
rcr
(bad)
iret
and
pop
add
inc
in
mov
movs
add
rcr
outs
push
jmp
(bad)
cdq
movs
mov
jle
sub
stos
sbb
or
xor
sub
test
push
arpl
push
adc
sbb
pop
jecxz
(bad)
repnz
xchg
rol
scas
aam
inc
out
mov
xchg
arpl
test
int3
dec
sbb
das
loop
dec
fnstcw
movs
lock
sbb
jp
arpl
xchg
(bad)
mov
test
cld
cmp
push
fs
jb
shl
push
aam
popa
mov
cmp
and
popf
ins
aad
daa
mov
call
sahf
(bad)
jne
mov
sahf
dec
idiv
jmp
push
outs
call
and
sahf
(bad)
popa
repnz
in
gs
dec
ficomp
and
test
ins
push
std
aas
pop
stos
mov
sbb
retf
lods
je
adc
mov
mov
jmp
or
push
sub
outs
mov
cmps
dec
xor
dec
pop
xor
outs
sub
jb
xor
cld
pop
bound
or
xchg
adc
inc
loop
adc
sbb
cmps
mov
mov
inc
into
or
fdivr
push
std
and
in
xchg
icebp
sub
stc
jb
push
rol
scas
and
xchg
pop
sti
add
push
push
rol
loope
cmp
push
xchg
adc
stos
push
xor
cmp
add
(bad)
outs
adc
push
xor
sbb
and
leave
inc
and
clc
popf
lahf
popa
in
inc
or
mov
mov
and
xor
xchg
in
and
hlt
inc
and
cdq
retf
popa
add
push
pop
popf
rcr
ds
mov
repz
js
jge
test
sbb
(bad)
jb
fs
jae
xchg
xchg
in
test
sbb
jb
fisttp
ins
inc
jmp
inc
push
hlt
mov
xlat
xor
stc
stc
mov
in
push
and
sub
aas
mov
jne
retf
jg
xchg
and
aaa
xor
push
ins
cmp
aam
test
adc
leave
inc
inc
jmp
inc
xor
test
xchg
scas
xor
push
or
xchg
sbb
(bad)
jo
pop
push
iret
or
inc
repz
fdivp
dec
or
and
push
pushf
xor
aad
out
daa
dec
mov
xchg
fwait
fs
sub
popf
sbb
add
movs
ret
and
jnp
or
dec
add
jecxz
xchg
push
jecxz
or
(bad)
lahf
sbb
stc
outs
add
mov
mov
jl
fucomp
rcr
in
xchg
in
mov
and
jb
mov
stc
xchg
in
mov
mov
pop
outs
jmp
rcr
mov
mov
fcomp
frndint
frstor
fist
cs
mov
jae
jb
cmps
ret
push
push
pop
cdq
addr16
sbb
aaa
jnp
daa
lea
or
loopne
mov
pop
mov
js
mov
rol
jmp
pusha
sbb
sbb
call
dec
aaa
stos
and
or
adc
xchg
pop
dec
imul
add
aad
popa
push
add
popf
xchg
cmp
out
clc
cld
cmp
hlt
cdq
sub
icebp
adc
jb
jl
inc
(bad)
pop
push
daa
scas
out
cmp
in
cld
mov
call
jmp
sbb
inc
cmps
mov
adc
loopne
mov
bound
mov
xchg
xor
dec
pop
xchg
mov
adc
test
mov
pop
mov
sbb
hlt
mov
mov
xchg
out
les
and
mov
(bad)
scas
mov
dec
mov
mov
scas
sub
aam
scas
into
fstp
adc
loope
cmps
aas
rcr
mov
add
jmp
pop
xchg
jae
cmps
sar
xchg
into
ja
gs
pop
adc
enter
dec
mov
lods
aam
cmp
pop
es
xor
dec
jmp
push
minps
test
lahf
xor
mov
stc
nop
in
fbld
inc
shl
sbb
pop
push
(bad)
popa
jne
mov
pop
push
jnp
jbe
clc
rcl
mov
in
pop
cli
out
mov
and
xor
out
sahf
ror
cmps
jnp
adc
out
xor
out
test
push
sbb
lods
mov
jbe
add
and
sub
and
les
or
(bad)
in
push
push
popf
loope
jge
xchg
nop
xlat
mov
adc
in
push
cmp
xchg
nop
repnz
(bad)
xchg
mov
pop
inc
xchg
mov
push
sti
je
or
das
dec
arpl
(bad)
loop
popf
cmp
mov
xor
call
dec
push
cmovle
imul
xchg
ror
pop
adc
pop
xor
sub
adc
cmp
je
push
jmp
repnz
push
dec
mov
jbe
stc
sbb
xchg
in
push
or
dec
mov
adc
xor
repnz
and
addr16
or
not
pop
add
(bad)
hlt
and
loope
adc
or
add
jnp
pop
mov
movs
or
mov
test
mov
fdivr
js
mov
cmp
movs
push
xchg
jecxz
dec
pushw
dec
nop
sub
mov
sbb
icebp
cli
add
cmp
out
int
push
mov
mov
rol
jge
mov
xor
mov
cwde
mov
pop
sbb
mov
sub
push
out
jo
add
cmp
shr
out
pushf
jle
fisttp
test
into
js
inc
shr
cld
pop
sahf
jp
cli
pop
and
mov
dec
mov
(bad)
repz
push
fcmovnu
test
shl
add
test
sbb
ret
pop
and
sub
mov
mov
or
cmc
sbb
push
lock
and
cdq
outs
or
dec
cmp
imul
and
inc
ret
xchg
(bad)
(bad)
int
(bad)
add
and
xchg
ficomp
mov
aas
out
push
fwait
(bad)
fcomip
and
jl
in
mov
inc
push
fisubr
xor
(bad)
pop
shl
stos
cmovae
mov
fwait
mov
mov
mov
sbb
call
loop
test
(bad)
mov
nop
xlat
iret
fwait
dec
mov
or
sbb
test
out
xchg
dec
inc
(bad)
mov
jmp
int
and
icebp
loope
mov
lea
ret
dec
xchg
cmp
test
mov
mov
fld
and
js
fdiv
sub
jno
loopne
jg
repnz
add
std
push
mov
adc
push
clc
sub
lock
dec
mov
push
jp
in
shr
repz
jmp
repnz
push
mov
ins
cmp
fadd
cmp
loope
fld
push
sub
mov
(bad)
jg
aas
sub
jb
fwait
dec
mov
jnp
pavgw
adc
push
jne
cdq
repnz
das
xchg
lea
mov
mov
xor
pop
movs
(bad)
ins
sbb
test
enter
cmp
or
loopne
adc
repnz
push
jmp
push
es
mov
cld
sbb
push
or
and
xor
cmp
out
and
add
call
or
mov
outs
pop
aaa
push
adc
xchg
sbb
sbb
dec
mov
test
ds
mov
imul
and
dec
lock
mov
repz
mov
push
rcr
inc
push
or
cmc
test
bound
xchg
test
cmp
push
push
pop
loope
ins
out
inc
call
mov
(bad)
test
xor
xchg
jmp
scas
ror
ja
ror
mov
inc
test
ret
sbb
xchg
imul
xchg
movs
mov
stos
scas
mov
mov
cmp
ja
and
xchg
scas
sbb
call
dec
pop
retf
adc
or
in
jns
les
mov
xor
pop
adc
jmp
shr
loopne
pop
xchg
fld
sbb
xrelease
lods
and
shl
int
cmps
or
and
inc
arpl
or
xchg
test
push
push
sbb
and
push
and
rcr
dec
jmp
sub
(bad)
sbb
jg
inc
std
push
sbb
scas
sti
cmp
in
push
out
jmp
imul
ds
pop
pop
mov
popf
or
cmp
mov
inc
mov
leave
lahf
mov
xor
pusha
mov
cdq
dec
out
aad
(bad)
fcomp
xor
xchg
mul
lea
into
rcr
out
mov
bound
arpl
or
sti
mov
ror
int3
out
adc
pop
cmp
pop
pop
mov
cld
cs
movs
cmc
movs
dec
fdivr
aad
pop
xrelease
outs
sub
xchg
in
(bad)
xor
jae
cld
pop
and
and
mov
push
fs
mov
imul
mov
adc
mov
mov
inc
mov
loop
dec
sub
je
ret
xor
pushf
call
cdq
cmp
and
mov
dec
out
clc
mov
mov
popa
mov
dec
jge
xlat
clc
jl
inc
push
pop
xor
addr16
add
retf
mov
popf
pop
add
sub
scas
or
push
xstore-rng
and
xchg
(bad)
(bad)
std
mov
out
ja
cli
mov
in
lahf
inc
mov
or
jge
ret
jecxz
inc
and
jg
sbb
or
je
cmp
call
mov
out
lock
push
or
inc
cmp
out
les
or
xor
fidivr
xor
xor
or
sbb
fwait
jge
rol
ss
in
pop
(bad)
out
rol
das
or
push
call
fucomp
jb
cmc
loopne
clc
pop
sbb
add
test
sbb
pop
pusha
jle
xchg
(bad)
cmp
push
xlat
std
mov
push
push
cs
outs
lea
jl
and
dec
push
daa
dec
inc
push
aad
xchg
cmp
add
fmul
jg
jmp
adc
dec
aas
cmp
xchg
add
fmul
or
jne
lea
jno
xchg
ss
imul
mov
xor
fcmovnbe
pop
adc
je
imul
xor
mov
movs
xchg
jb
(bad)
and
ret
scas
cdq
xor
rol
push
jecxz
mov
sti
push
xor
or
clc
add
data16
xchg
es
nop
pop
fdivr
hlt
stc
cmp
stos
push
scas
xchg
in
or
pushf
push
cmp
add
dec
imul
jle
adc
and
fwait
cs
aam
retf
repz
cdq
mov
dec
fst
pop
es
rcl
mov
mov
push
mov
or
iret
jp
xchg
in
ret
call
sbb
stos
ror
pop
push
or
mov
jmp
and
dec
mov
or
cs
mov
cli
ror
mov
sbb
pushf
adc
outs
cdq
xchg
and
pusha
iret
jnp
dec
mov
sti
inc
scas
icebp
hlt
stc
or
retf
push
jge
jge
(bad)
fisttp
pop
push
jnp
rcr
sub
push
mov
pop
rcr
jmp
bound
pop
sbb
sbb
or
movs
fsub
out
in
cmp
adc
add
xlat
int
test
imul
(bad)
push
xchg
sub
jb
jg
pop
xor
mov
jb
xchg
jo
and
clc
mov
xor
mov
mov
(bad)
adc
movs
adc
adc
push
push
aaa
mov
dec
xchg
leave
push
xchg
(bad)
cmp
jne
jg
push
lahf
lea
pop
mov
fimul
sub
pop
pop
dec
and
out
inc
fld
cli
mov
xchg
mov
imul
dec
adc
shl
and
dec
mov
cwde
mov
retf
adc
sbb
fadd
test
add
push
pop
int
std
stc
ret
xlat
sub
adc
push
sti
ins
jae
mov
cmp
xchg
sub
clc
aam
bnd
push
ret
jno
daa
xchg
cli
arpl
jns
jo
push
xchg
mov
push
movs
loopne
mov
in
pop
dec
pop
das
leave
test
mov
neg
cmp
rcl
fnstsw
push
pushf
cwde
dec
mov
arpl
lea
pop
nop
call
int
fnsave
adc
push
mov
mov
test
and
int3
xchg
add
sub
les
mov
push
sbb
fadd
jp
lahf
pop
push
mov
fisttp
add
dec
push
jnp
dec
xchg
int
mov
push
mov
or
cmp
xchg
and
push
jbe
rcl
mov
retf
dec
sbb
(bad)
mov
mov
icebp
sbb
lods
ficomp
sbb
sar
int
inc
es
lods
and
xor
pop
retf
stos
outs
dec
cwde
shr
data16
dec
or
movs
jae
test
cmp
mov
outs
ins
mov
jle
out
cld
pop
scas
out
pop
push
mov
push
mov
adc
mov
pop
imul
mov
pusha
(bad)
call
ds
mov
imul
out
push
adc
(bad)
test
retf
lock
mov
mov
mov
dec
int
pop
int
bnd
mov
js
into
lods
aas
cmp
call
push
jmp
mov
mov
push
sub
sub
shr
es
cwde
push
xchg
(bad)
and
hlt
mov
or
ficomp
dec
imul
jb
dec
xchg
fiadd
rcr
nop
sub
cmp
faddp
(bad)
loope
ret
stc
popw
cmp
push
jno
xchg
into
bound
cmps
pop
pop
inc
inc
mov
fs
xor
iret
or
sub
lods
and
out
pop
stos
jmp
dec
jmp
dec
mov
popf
xor
aaa
jne
mov
neg
test
neg
arpl
dec
sbb
push
(bad)
loope
lods
pop
jmp
push
test
fwait
movs
push
ret
test
xlat
fcom
mov
imul
stc
test
aad
adc
jmp
sbb
test
mov
call
sub
or
pop
jno
das
aas
call
mov
imul
call
scas
sbb
ins
inc
shl
data16
data16
jp
add
imul
push
mov
xor
xchg
cmp
and
jnp
ficomp
leave
fbld
adc
mov
mov
stc
stos
inc
mov
(bad)
or
outs
fld
int3
test
pusha
push
bound
or
pop
call
cld
sbb
or
pop
cld
fs
aad
mov
sub
ja
iret
das
or
mov
xchg
xchg
add
add
jge
sub
cmp
(bad)
pop
cmp
fwait
push
inc
test
inc
inc
add
into
jae
dec
push
shr
or
test
jno
xlat
pop
pop
iret
dec
pop
pop
sub
cdq
dec
xchg
test
shl
shl
add
sti
in
jg
and
jle
ss
mov
sbb
xor
adc
fwait
loopne
jg
(bad)
test
in
mov
dec
rol
inc
call
cli
arpl
mov
xlat
shl
retf
push
imul
or
push
jb
addr16
aad
or
mov
loopne
mov
loope
lods
pop
xor
or
sbb
cli
ins
xor
mov
jo
mov
rep
cmp
cmp
xor
dec
push
cmp
push
stos
outs
xchg
xchg
out
mov
cmc
fwait
mov
pop
in
push
mov
call
dec
mov
div
xor
in
out
xchg
call
pop
push
add
dec
jmp
sahf
mov
push
xchg
add
sbb
outs
mov
mov
add
push
out
mov
sub
xchg
and
outs
jg
jle
jne
sub
cs
iret
push
bnd
shr
vmaxpd
mov
cmps
jnp
sahf
sub
lods
pop
and
cmp
imul
imul
mov
inc
jae
add
push
inc
ds
add
out
js
cld
push
mov
jne
jl
outs
push
dec
mov
(bad)
repz
mov
out
pop
dec
mov
jl
or
in
popa
call
pop
and
aad
add
sbb
mov
jb
or
jl
push
mov
xor
mov
push
xchg
cmp
adc
sahf
pop
and
test
adc
xchg
add
ds
adc
div
sbb
cmp
scas
inc
shl
push
scas
adc
push
xchg
dec
nop
sbb
inc
jge
lock
fdivrp
adc
(bad)
xchg
(bad)
loop
aad
xlat
sbb
mov
shl
adc
or
daa
sbb
pop
popa
cwde
jnp
dec
ja
aas
xchg
test
or
xor
dec
gs
pushf
pop
js
scas
enter
add
into
mov
movs
sub
test
dec
pop
enter
mov
and
aam
stos
cmc
pop
pop
mov
pop
loop
fcomp
iret
mov
and
scas
pop
sub
aad
dec
pusha
ret
xchg
or
outs
pop
aaa
cmp
jb
cvttps2pi
cmc
test
das
dec
pop
test
fidiv
sub
push
test
mov
mov
daa
add
pop
dec
nop
xchg
stos
pop
or
stc
jmp
int
cld
mov
pop
pop
loope
lods
jne
popf
add
ror
imul
push
mov
dec
rol
dec
inc
dec
(bad)
js
mov
lods
sar
rcr
dec
push
push
mov
ins
pushf
jg
cdq
jne
dec
std
mov
fwait
ret
ins
test
sub
mov
cwde
mov
add
jnp
adc
(bad)
dec
mov
dec
jb
pop
inc
cmp
cli
push
or
(bad)
sar
cmp
inc
into
rcl
jb
xor
lds
jo
sahf
fstp
ds
xchg
xor
and
inc
mov
out
movs
and
cmc
or
cmc
scas
repz
mov
cld
xchg
loope
pop
(bad)
aad
push
(bad)
sub
std
xchg
clc
nop
mov
dec
sbb
sub
sbb
add
or
adc
fmul
sbb
inc
(bad)
dec
lds
cmp
adc
mov
mov
sti
cmp
lods
mov
and
dec
enter
addr16
or
xchg
mov
add
xor
jge
mov
xchg
cmps
movs
out
push
js
and
jecxz
cmp
jge
into
nop
push
(bad)
retf
lahf
dec
popa
inc
ss
xchg
or
je
out
mov
add
pop
and
cli
call
jno
frstor
push
push
push
inc
adc
mov
pop
mov
mov
pop
mov
pop
shr
xchg
mov
push
and
mov
xor
iret
and
and
push
into
(bad)
mov
jl
sub
push
mov
xlat
sbb
cli
xor
add
rcr
rcl
das
icebp
pop
loope
pop
sub
inc
das
inc
ss
or
das
xchg
jnp
sbb
push
fstp
and
add
bound
mov
popf
push
addr16
xchg
cmp
or
cdq
jge
int3
pushf
inc
inc
test
inc
rol
mov
dec
mov
int
pop
stc
dec
and
xchg
jge
test
fwait
clc
and
mov
cwde
and
retf
sub
daa
sbb
mov
leave
ret
bound
push
push
pop
call
ins
arpl
dec
mov
pushf
ror
xor
icebp
and
test
or
into
push
adc
clc
clc
xchg
dec
in
mov
jne
xor
or
lds
stos
retf
push
xor
lahf
mov
cmc
mov
and
mov
sub
mov
aam
ret
scas
fstp
fld
jl
add
mov
xchg
imul
stos
dec
pop
ret
fisubr
push
push
sti
inc
into
ss
pop
add
sbb
cld
or
jbe
mov
pusha
gs
movs
fisttp
cmp
pop
test
jle
cmp
mov
inc
push
xchg
sub
mov
adc
mov
sbb
inc
mov
push
mov
retf
adc
jne
push
mov
call
xchg
sub
loop
mov
push
pusha
adc
xor
out
inc
out
mov
shl
mov
add
into
sbb
jb
imul
cmps
(bad)
mov
loope
dec
fs
and
fs
adc
inc
pushf
cli
push
lods
sbb
mov
inc
fisub
movs
data16
mov
jmp
cmc
push
fadd
and
daa
add
mov
or
rcl
or
rol
jbe
(bad)
stos
popf
sbb
mov
mov
or
add
jmp
lods
mov
rol
or
jbe
ja
idiv
mov
idiv
test
ret
dec
xor
test
adc
shl
push
or
xchg
fstp
dec
sub
xchg
ins
fidiv
inc
std
dec
add
mov
mov
mov
jmp
aaa
leave
adc
push
jecxz
fdivr
pushf
mov
fsub
add
sbb
and
lods
pusha
jnp
sbb
stos
arpl
ror
fwait
iret
mov
es
adc
ds
daa
stos
fisubr
or
cmps
mov
fisttp
loopne
imul
(bad)
or
inc
xor
js
jne
push
fs
xor
aam
jl
cdq
dec
xlat
mov
mov
mov
xor
repnz
xchg
cmps
test
adc
xchg
(bad)
loop
inc
mov
and
xor
sub
jb
cmp
lahf
mov
pop
cwde
jg
mov
cwde
fldcw
iret
cmp
in
es
mov
cmp
sbb
xchg
int3
xchg
sti
xor
ds
lea
sbb
adc
xor
cmp
cmp
pop
std
and
mov
repnz
pop
jmp
ds
mov
push
mov
adc
fst
stos
and
push
bound
fist
or
inc
aam
rcr
xor
pushf
push
adc
push
hlt
scas
jnp
mov
inc
repnz
call
sub
add
out
sbb
pop
push
lahf
(bad)
fst
bound
(bad)
mov
jo
sub
add
(bad)
es
jmp
jb
(bad)
fst
dec
sar
cwde
mov
dec
in
cmp
sbb
mov
rcr
pop
inc
or
push
mov
cmp
push
out
retf
xchg
xlat
ror
mov
scas
mov
rcl
push
aad
cmps
fadd
stos
xor
inc
pop
mov
mov
or
mov
jmp
leave
test
scas
ret
xor
sti
or
dec
sub
(bad)
retf
or
sub
fldcw
outs
mov
test
test
xchg
int3
jle
xor
and
int3
xor
jne
xor
hlt
jg
sub
cld
lea
add
nop
and
and
or
(bad)
fild
adc
mov
(bad)
call
inc
lea
jno
mov
cmp
dec
inc
sub
add
add
adc
jne
push
std
jno
inc
jmp
cmc
mov
cmp
leave
dec
mov
xchg
dec
inc
dec
(bad)
call
xor
mov
(bad)
retf
fcom
mov
jl
pop
and
push
cmp
dec
ja
fcomip
mov
mov
imul
lds
jmp
or
sahf
fcomip
jmp
cs
xor
cld
push
mov
lods
dec
adc
ret
push
jmp
cmp
and
sbb
scas
enter
imul
cmp
je
or
add
or
movs
adc
(bad)
cwde
cmp
sti
ss
retf
pop
(bad)
outs
and
push
jae
movs
pop
(bad)
pop
adc
fcomi
mov
push
sti
ror
mov
jl
(bad)
ss
frstor
cdq
es
push
or
rcl
xlat
dec
adc
push
lock
jne
out
mov
cli
sub
sub
popa
push
mov
sub
or
push
dec
cmp
add
inc
imul
les
sbb
mov
push
sahf
lea
loope
cli
sub
cdq
movs
fcmovu
out
cwde
js
cwde
pop
adc
mov
pop
xor
enter
pusha
cmps
dec
mov
jae
mov
test
pop
test
scas
out
fisttp
movs
mul
sub
mov
stos
mov
or
das
or
ss
cmovs
lock
jno
dec
add
xchg
sahf
lods
iret
arpl
pop
jecxz
xchg
ret
in
aam
mov
xor
mov
js
xor
cld
fadd
and
arpl
xlat
jbe
cmc
mov
sub
adc
int3
pop
fidivr
call
mov
in
inc
hlt
pop
pop
adc
and
mov
test
cmps
pop
repz
aaa
out
and
add
(bad)
mov
inc
inc
pop
adc
mov
sbb
jecxz
adc
add
or
daa
nop
mov
xchg
xor
inc
mov
add
push
and
mov
aad
mov
dec
xor
lods
pop
xchg
ret
loop
push
pop
add
cmps
je
jp
(bad)
fs
outs
popf
dec
sahf
add
push
mov
inc
push
dec
cmp
es
fstp
int
inc
add
xor
iret
mov
pop
dec
or
(bad)
into
sub
mov
ret
adc
sbb
push
adc
mov
inc
pushf
mov
lods
cli
xchg
imul
fdivr
(bad)
std
mov
mov
mov
push
mov
loope
sub
dec
out
sbb
clc
enter
xchg
es
push
stos
push
push
mov
cdq
and
push
lahf
ss
sub
sub
xor
bound
inc
movs
sbb
dec
ins
leave
(bad)
and
sub
xor
push
xchg
sub
sub
cmp
xchg
icebp
pop
stos
test
movs
adc
sbb
xor
push
and
or
loope
scas
jg
jno
sub
adc
mov
inc
xlat
sub
jle
test
enter
call
and
or
int3
push
xchg
pop
mov
fstp
mov
push
sbb
mov
(bad)
jmp
dec
fsubr
repz
jmp
and
mov
loop
sub
aaa
out
xchg
inc
fs
into
loope
dec
xor
inc
pop
mov
loope
mov
adc
rcr
and
iret
es
sahf
push
repz
xor
imul
call
jl
stc
retf
cmps
(bad)
int3
or
pop
(bad)
stos
rcl
pusha
lods
cmp
shr
and
push
jae
sub
(bad)
jno
pop
daa
call
dec
sbb
and
add
imul
and
push
and
pop
pushf
sbb
mov
and
dec
sbb
movs
cmp
or
sub
or
mov
(bad)
mov
jge
fadd
popf
mov
mov
popa
mov
jbe
leave
aam
cs
adc
sub
xor
sbb
sub
xor
and
js
jmp
movs
jb
jl
cmps
pop
retf
push
fiadd
leave
cs
pop
stos
mov
cdq
jmp
add
int3
repnz
xor
es
pop
inc
inc
sahf
rcr
aam
clc
or
aam
mov
push
dec
mov
or
mov
mov
int
adc
lods
in
imul
adc
ret
es
sub
cmps
add
and
push
sahf
xchg
clc
pop
xchg
xor
cmp
xlat
dec
in
cld
lock
push
xor
xor
out
jp
inc
fs
inc
iret
mov
jo
dec
out
adc
mov
sub
sahf
mov
dec
pop
fdivr
mov
inc
jl
repz
int3
out
jle
inc
push
movs
aam
lods
jg
pushf
fcom
push
daa
jb
ds
pop
mov
add
gs
cwde
sbb
movs
cs
pop
jne
inc
cwde
test
in
jg
call
loop
shl
mov
mov
cmp
clc
sub
lea
dec
(bad)
fst
xchg
data16
push
cli
and
test
dec
inc
pop
dec
sbb
adc
jne
jae
ret
xchg
add
inc
into
fsubr
jle
sub
repnz
add
pop
je
adc
arpl
aam
rcr
jg
inc
xchg
mov
pushf
push
xor
inc
hlt
dec
mov
sar
add
mov
sbb
inc
iret
pushf
mov
mov
push
imul
pop
fcom
or
sti
out
neg
pushf
sbb
mov
(bad)
cmp
in
pop
inc
out
cdq
shl
add
int3
mov
mov
fild
repnz
inc
ins
adc
out
push
pop
shl
xchg
or
add
and
(bad)
jae
push
cdq
loopne
jl
xor
sahf
scas
jmp
repnz
xor
push
iret
ins
cmc
or
xor
xchg
xchg
cmc
les
int
cmp
xor
add
inc
cld
in
inc
daa
popa
das
mov
inc
cli
outs
leave
xor
pop
je
mov
jge
jae
push
rcr
(bad)
jns
bound
pop
cli
and
sbb
sbb
pop
imul
mov
neg
cmps
test
mov
fidiv
repz
fs
cdq
dec
mov
cli
lea
ja
xor
in
mov
pop
pop
xchg
int3
add
call
in
push
cmp
jg
add
loop
sbb
xchg
cld
clc
int3
out
das
cwde
pop
pop
(bad)
pop
jle
jo
mov
mov
mov
inc
fnstsw
lahf
sub
scas
enter
scas
pop
es
xchg
xor
pop
cwde
dec
adc
and
inc
xor
cmc
shl
pop
dec
sub
test
repnz
out
mov
call
pop
ror
imul
inc
mov
lahf
js
xor
or
fsub
jmp
rcl
xchg
or
xor
xor
and
mov
(bad)
inc
jecxz
xor
and
and
(bad)
ins
imul
(bad)
out
cmp
pop
jmp
pop
fsub
mov
js
xchg
sar
test
or
test
or
dec
cmps
pop
lds
fimul
icebp
outs
out
add
xor
jg
loop
add
pop
mov
mov
fbstp
fst
add
clc
dec
test
stc
movs
push
sub
aad
inc
lahf
lods
jmp
lds
inc
outs
cmp
(bad)
pop
out
dec
xchg
movs
jle
aam
test
das
div
jg
push
cmp
sar
add
(bad)
adc
xchg
xor
movs
fld
mov
xlat
mov
mov
test
rcl
mov
xchg
sbb
aad
popf
inc
fcmovnb
and
test
aaa
fdiv
push
pushf
jecxz
dec
pop
es
mov
stc
fdiv
ss
xchg
aam
lock
pop
xchg
cdq
xchg
sbb
mov
call
mov
push
mov
push
fist
pop
or
cmp
es
and
mov
pop
pop
or
push
(bad)
xor
mov
fbld
fwait
mov
les
(bad)
fcmovne
or
nop
push
adc
inc
push
push
sub
pop
xchg
in
call
es
das
push
cmps
dec
xchg
and
mov
mov
outs
mov
in
test
imul
mov
and
mov
mov
lock
push
ret
and
es
xor
imul
jp
push
inc
into
pop
xor
sbb
mov
out
push
leave
add
push
out
dec
sbb
out
push
arpl
lods
cli
fs
test
popf
inc
fwait
(bad)
adc
fs
sbb
sbb
jge
inc
gs
mov
popf
aas
push
or
ds
imul
cmp
std
cwde
and
dec
sbb
mov
fimul
push
movs
repnz
jns
rcl
mov
std
hlt
into
iret
push
xlat
xchg
and
cmp
(bad)
ins
iret
xlat
sar
dec
(bad)
bound
sbb
mov
dec
adc
xchg
sar
push
jge
mov
sbb
sbb
dec
cmp
(bad)
dec
pop
psubw
and
push
cld
lea
fst
push
fld
pop
add
or
cmps
cs
mov
adc
loopne
mov
dec
enter
sub
iret
jmp
gs
loopne
add
mov
and
sub
xchg
test
dec
xchg
sahf
mov
not
fisttp
sahf
adc
(bad)
into
rol
pop
inc
mov
and
ins
out
cmp
push
jbe
sub
test
test
gs
jns
xchg
jmp
jl
pop
stos
add
dec
jge
aaa
jb
pop
mov
je
int3
dec
push
mov
mov
mov
cwde
adc
xor
pop
setbe
pop
push
push
icebp
add
jo
(bad)
nop
or
or
sti
test
pop
inc
add
jmp
cmp
mov
xchg
xchg
inc
pop
push
or
(bad)
mov
dec
dec
addr16
jbe
mov
xchg
ins
adc
jl
and
sub
mov
mov
pop
mov
ins
repnz
sbb
pop
jne
jle
or
jp
push
pop
test
sti
or
inc
jecxz
dec
sar
adc
cmp
push
mov
pusha
sbb
adc
dec
cmps
adc
xchg
dec
sahf
int
inc
jge
sar
mov
inc
enter
je
push
ret
std
ja
inc
mov
pushf
push
mov
iret
add
test
ins
aas
adc
pop
add
or
cdq
or
mov
scas
sub
stc
mov
lock
gs
sbb
popf
or
xchg
retf
cmps
out
xor
or
dec
xchg
xor
and
data16
in
mov
pop
dec
sbb
xchg
stc
fsubr
ins
cmps
cdq
xchg
jecxz
mov
cmp
inc
and
out
jo
pusha
xchg
jb
cmp
sbb
add
jmp
(bad)
arpl
push
test
mov
add
cmp
retf
scas
ins
xchg
inc
push
mov
mov
pop
rcl
mov
in
cld
or
popf
out
mov
aas
rol
stos
inc
sbb
mov
(bad)
in
mov
inc
xchg
je
sbb
aaa
in
out
add
(bad)
pop
cld
mov
sbb
daa
mov
add
movs
arpl
push
jns
add
adc
icebp
jg
xor
or
dec
mov
js
push
or
out
or
lea
sub
loopne
ja
sub
xor
jae
mov
cs
jmp
(bad)
mov
(bad)
cmp
gs
leave
(bad)
nop
nop
xor
adc
and
retf
jo
call
mov
arpl
jb
stos
jle
arpl
icebp
jae
bound
add
into
sub
(bad)
adc
lods
and
dec
pop
test
push
repz
adc
sbb
mov
sbb
out
loope
xchg
sub
int
dec
mov
sahf
push
dec
push
movs
daa
jb
cwde
pop
(bad)
push
jne
aad
or
je
jle
sub
ins
pop
test
dec
mov
lahf
xor
and
(bad)
out
jle
inc
ja
loope
(bad)
out
jmp
pop
add
add
aad
add
push
adc
aad
adc
pop
jo
pusha
sub
mov
aaa
call
mov
cdq
inc
hlt
ret
ficomp
es
push
dec
fwait
pop
push
fistp
aas
(bad)
cs
lea
dec
sub
push
and
adc
xchg
lea
ficom
scas
dec
call
adc
mov
dec
aam
cmp
xchg
push
inc
leave
jb
cmp
jno
lahf
std
xchg
xor
jo
xchg
xchg
in
test
sub
mov
cmps
push
cld
jmp
in
xchg
dec
add
push
sbb
inc
fwait
sbb
js
jbe
adc
adc
out
(bad)
fucomp
pop
push
and
sub
xor
pop
shl
mov
dec
in
xchg
push
sahf
pop
arpl
push
das
sbb
mov
fisttp
push
fsubr
js
call
sbb
fcom
xor
adc
ss
cs
or
or
jmp
scas
loope
sub
(bad)
cli
je
adc
repz
jne
jp
ror
test
jmp
and
ss
fiadd
test
sti
ja
jnp
jmp
jno
lods
pop
call
imul
fwait
test
mov
adc
mov
ins
out
push
mov
xchg
fsub
ss
xor
es
add
dec
inc
add
lods
imul
cmc
mov
iret
and
(bad)
or
mov
jmp
xchg
pop
jge
xchg
loop
push
push
nop
hlt
in
jb
adc
imul
cmps
pop
dec
xchg
enter
mov
jmp
or
mov
into
in
loop
and
adc
(bad)
inc
enter
sahf
and
in
fcom
(bad)
mov
sub
dec
imul
cmp
or
fsub
inc
mov
xor
adc
sar
dec
movs
xor
(bad)
popf
pop
sub
add
dec
pop
add
aad
sbb
stc
sti
push
int3
mul
or
and
(bad)
js
(bad)
jns
mov
jmp
push
ror
xchg
dec
outs
sub
sub
sahf
jb
inc
mov
push
cmp
stc
or
cmp
test
jmp
sbb
neg
aas
int3
pop
mov
out
or
jle
dec
xchg
mov
pop
pop
inc
jno
js
xchg
movs
jmp
and
jmp
inc
pop
push
jo
cmp
aas
mov
fnstcw
inc
outs
pop
dec
loope
xchg
jl
add
mov
push
fnstsw
lahf
fsubr
test
call
in
add
call
mov
int
je
jnp
adc
add
inc
retf
mov
sub
xchg
cwde
or
fwait
and
jp
movs
jne
jne
push
fwait
sub
push
(bad)
xor
jne
mov
scas
inc
push
ret
(bad)
retf
push
cmp
std
and
(bad)
out
lods
push
(bad)
cld
test
outs
jle
sbb
mov
xchg
scas
or
imul
mov
jg
call
jbe
mov
ss
inc
cmps
scas
jmp
stos
pushf
cdq
pop
and
popa
or
imul
and
loop
xor
loope
dec
clc
scas
aas
adc
outs
xor
aam
jnp
mov
mov
in
ss
push
xor
leave
sub
scas
and
ins
(bad)
sub
mov
mov
sbb
jg
mov
cmc
xchg
cmp
pop
adc
push
sub
cs
popf
pop
pop
pop
lds
mov
sahf
xor
cwde
sbb
jle
inc
cmp
(bad)
pop
adc
cs
clc
mov
and
cmp
outs
out
xchg
adc
sbb
xor
in
shl
sub
xchg
ds
(bad)
mov
retf
and
imul
aad
data16
jmp
icebp
mov
inc
add
aam
push
add
fimul
dec
out
adc
sub
cli
push
add
ret
(bad)
movs
scas
out
and
xor
iret
mov
loop
xor
fwait
dec
loop
cdq
xor
arpl
rol
lds
test
push
mov
or
dec
sti
call
push
jp
sub
inc
fcom
mov
or
mov
jle
movs
int
or
adc
adc
mov
repnz
cmps
(bad)
mov
mov
jae
std
fisub
sti
aam
xor
fld
lods
sub
xor
int
pop
mov
ffree
scas
cmp
in
std
stc
js
imul
(bad)
fnstcw
lock
push
mov
and
fdivr
shr
mov
jecxz
push
(bad)
cmp
adc
mov
retf
pusha
lods
pop
imul
xchg
out
into
pop
ins
cdq
add
rol
(bad)
neg
out
push
(bad)
cwde
std
dec
lock
dec
adc
mov
mov
inc
hlt
retf
mov
push
dec
and
sbb
xchg
test
or
mov
test
inc
cmps
inc
imul
pop
adc
mov
pop
adc
add
mov
and
aas
sub
into
inc
repnz
push
jne
jle
lds
sbb
cmc
scas
and
jbe
or
adc
(bad)
out
mov
stos
mov
xor
dec
pop
xor
bound
fstp
lds
pop
lea
jle
add
cmc
sub
ret
hlt
mov
sub
into
(bad)
jge
and
and
xchg
aaa
repz
pop
xchg
push
imul
imul
(bad)
lea
(bad)
std
aam
add
mov
cmp
inc
(bad)
out
push
inc
and
xchg
lock
(bad)
jb
jge
pop
mov
dec
aam
mov
(bad)
int3
jmp
push
pop
ret
loop
cmps
imul
xchg
xlat
cmps
fist
aad
mov
das
or
retf
xchg
fsubr
out
jo
add
div
inc
sub
lock
mov
mov
pop
dec
mov
aam
mov
mov
and
jge
mov
out
in
popa
mov
dec
mov
jge
aaa
or
jae
cmp
outs
push
jne
fs
pop
int3
xchg
stos
jne
mov
or
push
adc
adc
(bad)
or
pop
and
mov
ds
inc
dec
in
mov
mov
add
inc
cmps
add
push
lods
out
inc
jae
loop
mov
push
pushf
ins
jns
push
out
jl
fwait
dec
call
and
mov
cmps
imul
pushf
jns
movs
icebp
pop
popf
(bad)
sub
lock
xor
inc
call
cmp
xor
jns
jmp
popa
mov
mov
jmp
push
out
aas
call
mov
rol
xchg
push
outs
sub
mov
add
xor
jge
xchg
mov
inc
jg
jns
fwait
pop
push
cmp
push
inc
pushf
es
inc
loope
ja
jb
sbb
push
shl
jno
(bad)
adc
jne
mov
push
dec
jo
(bad)
enter
or
nop
jns
push
pop
and
lds
fild
bound
dec
mov
lods
inc
cmps
mov
jb
jl
mov
sub
fsubp
std
mov
aas
out
ds
lea
repnz
stos
adc
xchg
or
ficomp
out
xchg
cwde
ins
idiv
hlt
adc
sub
outs
scas
test
ins
and
sub
cmps
cli
and
loop
jo
test
outs
xchg
adc
mov
popa
mov
fwait
dec
inc
cmp
test
mov
mov
xchg
push
ret
cmp
mov
inc
jnp
lods
mov
dec
loop
adc
loopne
sahf
jo
cmps
stos
std
sub
sbb
(bad)
movs
stos
dec
js
push
jo
scas
js
ror
das
adc
arpl
stos
jmp
mov
sub
mov
add
inc
fimul
movs
leave
mov
popf
pop
cmp
or
jno
fisttp
out
dec
adc
dec
pop
(bad)
fs
inc
and
jno
dec
cmp
and
pop
gs
int3
pop
std
mov
pop
cmps
adc
lods
(bad)
push
in
sub
aad
push
sahf
lahf
test
add
call
cmp
inc
es
adc
in
hlt
pop
and
ds
cmp
push
sub
test
dec
fld
sbb
mov
dec
push
ss
jp
lds
pop
adc
sub
or
sbb
cld
and
call
in
mov
(bad)
outs
mov
sub
pop
pop
retf
adc
and
mov
inc
mov
fidiv
int3
dec
data16
cmps
or
push
popf
and
in
inc
out
rcl
xor
(bad)
retf
aaa
jle
mov
sbb
rcr
pop
dec
sti
bnd
movs
adc
jge
shl
or
push
das
gs
sub
adc
mov
cdq
mov
cwde
pop
mov
cmps
fidiv
scas
(bad)
idiv
enter
cs
lods
dec
add
into
ds
shl
gs
and
push
cmps
sub
or
clc
lock
mov
enter
mov
or
outs
mov
cmp
cdq
call
cmps
cmp
fldcw
push
fs
jl
and
cli
mov
ins
outs
stc
popf
sbb
stc
xchg
in
mov
push
lahf
jno
jge
push
mov
xchg
int3
in
pop
add
mov
fs
xor
(bad)
fistp
loope
and
out
movs
imul
not
fidiv
xor
clc
xor
adc
data16
imul
sbb
(bad)
cld
adc
shl
mov
ret
mov
std
inc
cmp
movs
in
xor
jecxz
pcmpgtd
leave
sub
psubsb
sti
pop
sub
(bad)
push
enter
sbb
mov
mov
pop
sbb
push
xlat
jbe
sbb
and
mov
mov
fdiv
ss
gs
xchg
dec
add
pop
xor
cmps
and
mov
sbb
adc
sbb
pop
enter
jmp
add
hlt
mov
push
adc
cmc
out
pop
pop
xchg
stos
jp
inc
mov
jnp
cmp
sub
clc
in
pop
inc
push
test
outs
ja
push
adc
pop
dec
push
ins
test
xchg
dec
push
cmps
daa
jp
cs
dec
nop
cdq
in
pop
data16
mov
aaa
or
cli
and
ret
repnz
sar
fisttp
mov
xchg
jp
bound
mov
retf
and
aas
cs
(bad)
mov
test
dec
outs
mov
ins
push
inc
mov
ins
addr16
test
pop
ja
out
bound
cmps
jnp
int3
mov
xor
adc
cli
or
push
xchg
ret
mov
scas
inc
(bad)
adc
mov
push
outs
jbe
(bad)
xor
hlt
data16
fmul
cdq
fdivr
rcl
push
xchg
shl
jecxz
sub
retf
or
mov
or
int
mov
and
fsubp
call
outs
jge
xchg
mov
push
scas
mul
and
les
das
dec
pop
push
mov
push
push
dec
dec
push
push
and
js
out
cdq
int3
stos
scas
ror
outs
into
inc
xchg
pop
xor
fst
outs
jmpw
das
xchg
sbb
ret
mov
nop
adc
movs
push
mov
rdseed
popf
fnstsw
stos
pop
jbe
and
je
nop
ror
scas
retf
adc
shufps
leave
push
xlat
cmp
sbb
sti
pop
enter
pop
and
nop
js
dec
in
push
adc
outs
das
lods
retf
in
imul
(bad)
dec
add
das
jmp
inc
push
add
dec
stc
pop
xchg
int3
pop
test
js
rcr
sbb
js
enter
dec
xchg
les
add
dec
mov
pop
mov
sti
and
xchg
pop
popf
stos
dec
call
icebp
inc
pop
test
mov
daa
cmp
push
xchg
repnz
popa
mov
inc
or
pop
add
xor
mov
retf
cli
into
xor
and
push
stos
push
pop
lahf
movs
mov
scas
movs
inc
push
push
out
movs
inc
pop
push
adc
mov
cmc
pop
cmps
nop
and
stos
or
jns
mov
dec
test
test
cmps
jbe
push
retf
jge
pop
jmp
sbb
dec
push
xchg
mov
leave
cmp
cmps
mov
pushf
into
pop
pop
mov
push
xchg
in
fsub
cmp
mov
test
in
inc
pcmpgtw
or
mov
inc
scas
or
repnz
jle
xor
add
push
dec
leave
popf
add
dec
int
iret
mov
sbb
or
adc
and
(bad)
pushf
es
lods
sbb
cld
xor
inc
sub
cmps
and
pop
sbb
psubusw
xor
js
mov
repz
mov
pop
mov
jmp
jb
js
or
in
in
and
xchg
(bad)
les
inc
arpl
xor
jnp
ficom
inc
scas
stc
cld
out
jmp
outs
dec
xchg
inc
cdq
jge
enter
xchg
popaw
ins
out
ja
jmp
fadd
out
sub
cmp
add
fiadd
dec
(bad)
imul
dec
xor
sub
add
mov
ja
ror
outs
cmp
pop
out
icebp
inc
or
pop
mov
adc
call
mov
and
xchg
pop
push
lods
jge
loop
jns
sahf
mov
pop
ja
push
jge
jns
retf
mov
push
jo
icebp
fwait
sbb
and
pop
enter
popf
and
cld
sbb
inc
outs
int3
and
inc
outs
sbb
mov
loopne
add
sub
data16
mov
xchg
mov
(bad)
jbe
loop
inc
push
add
push
inc
out
les
pop
cmp
nop
pusha
rcl
inc
mov
out
xchg
push
mov
lock
pop
mov
loopne
(bad)
aam
into
and
mov
cwde
les
inc
je
jnp
data16
stos
jl
mov
dec
ss
iret
nop
pop
xor
retf
(bad)
sub
push
mov
inc
into
dec
adc
shl
and
sub
in
iret
jno
cmp
add
sar
icebp
cmp
mov
adc
push
dec
xchg
pop
movs
stc
mov
loop
movs
push
pop
xor
cmp
repz
das
data16
push
xchg
xor
outs
xor
je
pop
xor
mov
xchg
pop
xchg
mov
xchg
daa
xchg
out
dec
ret
loopne
push
js
add
dec
pop
adc
push
fimul
in
xchg
es
movs
mov
and
outs
mov
cli
pop
jl
adc
cmp
push
loop
mov
or
and
(bad)
call
and
fistp
cwde
rcr
imul
sub
jecxz
lods
xlat
addr16
cmp
mov
mov
xor
retf
(bad)
inc
ja
jmp
icebp
inc
mov
xor
pop
xor
hlt
mov
adc
aas
test
and
pop
mov
jns
xlat
cmp
or
es
mov
in
push
pushf
xchg
cwde
and
movs
jbe
fdivr
adc
mov
pop
mov
push
xchg
lds
mov
sbb
inc
in
push
xor
outs
and
scas
stos
inc
fdiv
daa
jbe
push
lods
cmp
(bad)
xor
push
bound
cwde
mov
test
test
(bad)
ins
jno
pop
pop
pop
sbb
ins
fdivr
mov
sbb
xchg
sbb
push
scas
dec
jnp
outs
push
inc
std
add
lock
loopne
ret
lea
jmp
call
aad
mov
mov
leave
mov
mov
les
dec
add
jns
add
fstp
ins
ss
clc
ins
inc
push
pop
inc
lods
mov
arpl
cld
inc
pop
into
push
xchg
(bad)
shr
mov
and
bound
sub
pop
cmp
int3
cmp
mov
sub
les
jo
dec
out
xor
dec
cmp
aam
mov
(bad)
mov
jmp
sbb
hlt
xchg
xchg
mov
push
movs
push
stc
xor
scas
pmulhuw
sub
(bad)
out
aas
cmp
adc
out
ror
sub
pop
inc
mov
sub
xchg
cmps
push
or
inc
retf
cmp
xchg
cmp
cmp
retf
push
mov
mov
(bad)
cmp
jbe
push
mov
sar
mov
push
dec
lods
out
cwd
mov
and
sub
inc
jmp
jmp
adc
cmp
push
lea
xor
out
ret
mov
out
dec
jns
mov
ds
sbb
add
es
rcl
rcl
and
dec
xlat
shl
jp
xor
test
xchg
(bad)
push
jne
in
imul
xor
daa
jge
jb
pop
push
dec
mov
pop
cwde
mov
mov
daa
ss
inc
les
inc
jns
inc
sbb
movs
mov
dec
arpl
inc
aad
pusha
dec
mov
aas
jle
cmp
cs
mov
pop
je
shl
jmp
test
test
stc
ins
fnstcw
pop
push
mov
or
sub
ds
nop
jns
cli
mov
jae
dec
not
push
(bad)
addr16
mov
mov
push
sbb
mov
inc
addr16
retf
imul
int
dec
shl
(bad)
cmc
sub
jno
inc
dec
std
push
test
int
stos
dec
repz
mov
xlat
adc
scas
and
pop
les
xor
sbb
push
sub
dec
xor
addr16
popa
inc
or
xor
aas
(bad)
arpl
mov
mov
lahf
jbe
ret
xor
mov
xchg
mov
dec
clc
pusha
shl
and
popf
cdq
mov
inc
push
pop
rcl
sbb
sbb
lock
aam
faddp
add
loop
mov
test
adc
and
aas
dec
mov
mov
jnp
mov
pushf
movs
dec
sbb
push
and
repnz
arpl
out
retf
adc
xchg
ret
bound
ins
dec
std
xor
test
add
pop
push
jns
dec
add
enter
aas
bsf
loop
add
out
jmp
mov
popa
inc
cmp
mov
stos
sbb
adc
mov
dec
dec
xchg
inc
dec
xchg
sub
(bad)
xchg
lock
(bad)
jle
and
(bad)
sbb
cmps
sbb
imul
jp
fucomi
sti
rcr
mov
jae
and
pop
cmc
retf
fadd
xor
xchg
cmp
push
out
sbb
xchg
pop
pop
(bad)
js
pop
jge
jmp
gs
add
xor
jge
cmp
sar
add
leave
jmp
sub
push
xchg
das
test
push
cli
jp
mov
jge
xchg
jl
jns
ret
and
cmp
icebp
jl
in
dec
cmp
stos
clc
enter
adc
out
push
mov
shl
xchg
mov
lods
jno
mov
sahf
add
xor
mov
adc
or
dec
push
mov
adc
and
mov
loop
fwait
stc
cmc
fnsave
addr16
lds
je
mov
mov
add
jle
fdiv
(bad)
popa
adc
mov
stos
add
repnz
mov
loopne
shl
cmp
dec
mov
inc
nop
ins
jmp
inc
jb
jmp
lods
rol
mov
mov
adc
lods
mov
stc
rcr
fisttp
fistp
les
neg
lea
mov
iret
stos
mov
cmp
xor
sbb
dec
in
rcr
sbb
fdivr
and
iret
cmp
cmp
test
not
(bad)
out
jb
pushf
or
pop
jmp
cdq
and
xchg
int
sub
inc
nop
mov
add
xor
pop
mov
jg
mov
xor
or
(bad)
pop
lock
adc
rol
fcmovne
ret
hlt
mov
push
repnz
add
aad
call
sbb
pop
push
test
stc
push
mov
add
daa
fsub
test
inc
mov
enter
aad
pop
pop
sbb
sub
mov
hlt
or
repnz
mov
imul
(bad)
mov
pop
fldcw
clc
inc
call
test
test
xchg
fsubrp
fisub
pop
call
cmp
call
fisub
and
inc
dec
xchg
leave
inc
fild
xchg
and
aaa
or
push
cmp
fs
leave
fcomp
ret
pop
xor
aam
in
or
enter
loopne
add
stc
cmc
sbb
mov
sbb
enter
retf
sub
test
xchg
jle
sbb
scas
movs
push
dec
lds
add
xor
repnz
mov
inc
das
repnz
mov
test
inc
stc
dec
push
das
cmp
fadd
outs
out
sub
xchg
repz
dec
sub
int
cld
out
jl
retf
cmp
mov
and
cmp
push
mov
and
sbb
and
lock
mov
and
fsub
mov
fisttp
ss
dec
xor
loopne
cmps
mov
leave
stos
stos
jnp
call
in
jne
ds
mov
pop
dec
mov
mov
cmp
lahf
pusha
lea
and
xchg
js
loope
in
div
scas
mov
(bad)
mov
xor
neg
dec
clc
ret
ds
jne
push
sbb
dec
inc
cmps
jo
sahf
adc
push
call
ins
mov
cs
sub
test
loope
sub
sbb
xchg
aam
cmps
inc
mov
sbb
pop
movs
sbb
lds
out
sub
fidivr
in
movs
outs
mov
dec
shl
cmp
mov
sar
in
adc
mov
jmp
push
pop
nop
mov
mov
outs
adc
stos
fisttp
(bad)
xlat
out
daa
jne
pop
lods
lods
jns
jp
sbb
das
sub
(bad)
pop
push
mov
mov
or
jbe
push
push
ins
into
dec
xor
pop
dec
xor
or
or
test
xchg
jmp
mov
mov
xlat
inc
mov
cli
xor
sti
xchg
jmp
jno
addr16
ret
sbb
iret
ja
(bad)
push
jecxz
pop
cmc
mov
movs
sbb
dec
outs
sub
mov
adc
pop
sub
adc
xchg
into
das
test
pusha
mov
sbb
mov
sahf
dec
dec
stos
push
loopne
adc
cmp
pop
sahf
bnd
sbb
stc
lods
and
sar
pop
mov
add
popf
shl
jecxz
ds
add
mov
sub
lods
mov
sub
iret
mov
jae
mov
or
jmp
push
neg
mov
and
pop
lock
xor
movs
push
cli
pop
shr
es
sub
sub
jae
pop
jecxz
inc
sbb
rcl
mov
mov
cmp
lock
movs
pop
mov
jmp
movs
jne
aad
mov
mov
repz
sub
mov
xchg
jle
push
stc
daa
push
test
inc
mov
icebp
cmps
bound
data16
call
mov
ror
adc
jnp
mov
iret
pusha
imul
push
and
mov
adc
sbb
and
sbb
addr16
cmps
fnstsw
add
in
push
mov
push
test
loopne
xor
(bad)
jp
mov
inc
cs
in
and
lds
movs
or
cmp
loope
in
add
pop
mov
cdq
push
mov
in
pop
gs
mov
mov
(bad)
fcomi
jecxz
mov
ins
in
dec
in
lahf
ja
call
jecxz
dec
pop
sbb
jns
inc
mov
in
inc
test
sbb
out
sbb
(bad)
ins
jge
mov
stc
dec
imul
or
push
mov
scas
(bad)
mov
lock
mov
push
dec
xor
or
cmp
mov
jae
dec
adc
pusha
sub
imul
stos
adc
inc
jmp
sbb
xor
or
sub
push
neg
add
nop
inc
xchg
add
out
dec
xchg
mov
mov
or
push
inc
inc
add
dec
mov
mov
idiv
in
add
mov
lods
jle
xor
imul
sahf
fisttp
pop
dec
and
mov
xor
shl
into
xor
mov
push
push
aaa
lock
(bad)
int3
retf
add
call
popf
fsubr
mov
inc
pop
fbld
and
or
sbb
clc
add
push
adc
sub
sahf
fwait
cmp
sub
sbb
add
jle
mov
(bad)
test
xchg
pop
dec
mov
fwait
repz
xchg
jmp
inc
test
push
lds
retf
mov
retf
xor
retf
shl
outs
sub
std
in
push
out
and
into
jmp
pop
inc
xchg
xchg
add
push
jbe
adc
test
push
loope
xor
popf
es
aam
sbb
mov
lea
pop
es
xchg
push
call
jnp
iret
adc
fld
pusha
mov
test
int
or
dec
or
test
repz
add
pop
xlat
sub
test
jl
sbb
out
push
data16
retf
push
dec
jne
dec
arpl
lds
imul
cmp
int3
adc
xchg
add
sub
nop
pop
adc
xor
mov
lahf
aaa
push
jecxz
sbb
adc
loopne
and
arpl
ja
sti
sub
xor
sbb
out
mov
sub
mov
jb
ja
cmp
dec
aad
or
pop
(bad)
or
outs
mov
dec
ftst
push
push
es
mov
scas
bound
xchg
xor
pushf
or
sbb
fnstcw
xchg
mov
jmp
popa
dec
dec
fwait
jmp
sti
jne
(bad)
scas
xor
lock
movs
inc
ret
push
and
rcl
push
lods
mov
nop
into
ins
sar
and
arpl
adc
cmp
and
in
jne
(bad)
out
cmps
pop
dec
mov
mov
mov
xor
dec
ss
popfw
add
jecxz
arpl
icebp
jb
retf
icebp
push
les
iret
xchg
pop
popf
aam
jo
ret
pop
imul
mov
inc
and
inc
adc
out
gs
in
push
movs
daa
sti
enter
pop
cmp
xchg
cmp
jle
shl
dec
sahf
(bad)
mov
cmp
jp
pop
push
or
sbb
xor
nop
sti
push
mov
pop
movzx
sahf
push
sbb
into
xchg
jae
adc
mov
xchg
pop
xchg
xor
mul
stc
adc
nop
adc
cmc
push
arpl
lods
mov
cmps
cmp
iret
xchg
out
fistp
jp
test
cmp
aas
test
inc
lods
fcomp
sub
xor
popf
mov
and
push
jp
adc
mov
mov
repnz
(bad)
bound
sub
pusha
int3
jne
jns
pop
push
mov
push
movs
das
add
mov
sbb
xchg
xchg
inc
test
sbb
mov
bound
inc
test
imul
lds
outs
bound
fdivr
cmp
xchg
(bad)
jecxz
ss
mov
cmps
pop
aaa
das
sahf
cmp
and
icebp
addr16
je
jl
add
(bad)
lahf
add
and
sub
in
int
push
in
cmp
mov
xor
leave
dec
xchg
jnp
repz
mov
leave
cwde
inc
lods
std
jge
xor
pop
rol
mov
push
ret
loop
stos
jno
addr16
xor
xlat
out
std
(bad)
imul
sbb
pop
mov
sub
inc
mov
inc
ret
fstp
sbb
jecxz
jno
jmp
adc
mov
cmc
out
or
fstp
cmp
lock
pop
add
(bad)
(bad)
loop
xchg
lock
in
cmp
or
cmc
jp
cwde
push
push
dec
xchg
fs
cli
shr
pop
fdivp
test
adc
mov
cmp
pusha
push
(bad)
cmp
leave
or
cwde
cmps
xchg
jbe
cmp
arpl
mov
pop
dec
mov
in
jbe
lods
imul
sbb
out
mov
sbb
lea
ins
sahf
or
daa
mov
and
(bad)
das
dec
into
inc
gs
lea
or
daa
mov
aam
outs
push
inc
pop
dec
jg
mov
mov
adc
shl
mov
jle
sbb
jo
cmp
movs
out
stc
dec
xor
jbe
jle
mov
pop
int3
adc
fisub
pop
enter
mov
popf
je
add
pop
xor
(bad)
jns
push
inc
inc
xchg
pop
lods
adc
push
idiv
mov
mov
jmp
popa
(bad)
(bad)
pop
repz
retf
pop
dec
cdq
mov
mov
rcl
or
iret
mov
test
adc
sub
xor
or
push
scas
xchg
or
iret
out
or
add
addr16
sub
or
add
xor
imul
adc
jg
sti
retf
add
rol
or
cmp
bound
out
dec
addr16
loope
std
movs
sti
gs
add
push
add
sbb
(bad)
xor
add
pop
mov
jo
jo
adc
cmc
loop
fstp
sbb
mov
(bad)
xor
(bad)
pushf
xchg
add
sar
and
aaa
mov
push
outs
dec
adc
movs
fs
lods
jg
lock
movs
dec
or
push
cmp
int3
mov
popf
cwde
imul
sbb
pushf
xchg
leave
adc
mov
cmps
add
fucomp
mov
rol
cmp
lock
(bad)
adc
dec
es
ret
test
test
cmp
loopne
pop
in
pop
fs
pop
les
pop
jb
cwde
mov
test
xor
xor
fisub
outs
repnz
fisttp
jb
mov
dec
aas
xchg
pushf
shl
jne
adc
inc
ja
or
hlt
lock
or
jg
std
pop
pop
mov
jl
pop
xor
enter
stos
inc
pop
jno
jl
push
adc
mov
cmc
inc
pop
cmp
ret
and
xor
enter
mov
mov
inc
sar
push
dec
adc
fist
cld
fnstenv
pop
imul
out
add
mov
call
je
in
jg
loop
adc
pop
jae
push
scas
int3
out
pop
in
in
xor
mov
push
xchg
jns
(bad)
sub
adc
addr16
aam
scas
fnstenv
jae
xor
and
es
ror
jb
stos
fcomp
or
add
add
ds
push
inc
icebp
ror
jl
pop
xchg
and
xchg
test
xchg
sub
jae
aaa
lods
jmp
cmp
jmp
arpl
das
jne
test
fucomp
mov
mov
sub
test
rol
sbb
pop
in
or
dec
push
stos
sbb
inc
js
stc
xchg
popf
gs
mov
ret
mov
jecxz
outs
mov
pusha
aaa
lahf
out
shl
jmp
rcl
sti
jmp
rol
lea
dec
jge
ja
outs
mov
sti
mov
inc
mov
in
mov
(bad)
ins
pop
pop
aaa
repz
xor
stc
or
xchg
mov
jmp
push
fld
in
or
jae
out
inc
imul
xor
repnz
les
xchg
pop
xor
dec
aaa
cmp
fmul
xchg
scas
push
push
mov
mov
ins
sbb
iret
call
in
popf
dec
loop
or
stc
loopne
les
sbb
imul
lods
ror
pop
xchg
fdivr
push
dec
mov
mov
test
imul
jns
pop
adc
imul
sbb
or
and
add
jae
cmp
cmp
fistp
lea
das
aad
and
dec
fsub
arpl
push
dec
sbb
and
push
xchg
mov
cmp
test
xchg
mov
jge
jmp
lock
push
push
sub
add
les
aaa
ins
inc
daa
rcr
out
test
(bad)
jnp
jb
(bad)
push
aas
and
sbb
(bad)
(bad)
add
cmps
icebp
test
cdq
pusha
push
daa
inc
mov
leave
or
mov
lods
adc
sbb
and
outs
dec
sbb
add
push
push
mov
or
jae
xchg
mov
mov
push
dec
adc
inc
mov
stc
pop
outs
aad
and
mov
and
aam
jge
jg
mov
pusha
push
mov
xchg
mov
loopne
inc
xor
sbb
dec
ds
sbb
mov
loop
lahf
addr16
int3
or
add
test
and
xchg
popf
mov
aad
adc
ja
mov
in
adc
sbb
cmps
dec
(bad)
pop
push
and
in
dec
ret
sbb
xchg
push
and
hlt
faddp
jge
mov
mov
dec
aas
jmp
loop
pusha
test
dec
inc
mov
push
mov
mov
jne
dec
adc
(bad)
(bad)
ds
inc
gs
pop
aad
jp
stc
movq
mov
data16
mov
xchg
sbb
stos
loopne
lock
leave
push
fmul
imul
ds
push
int
(bad)
daa
pop
aad
not
stos
mov
(bad)
fist
ds
mov
push
xchg
call
ss
(bad)
retf
test
sub
pop
jns
out
rol
cli
add
icebp
aaa
or
xor
pop
xchg
xor
and
repnz
sbb
dec
mov
cmps
cmc
and
jmp
lock
jp
adc
out
hlt
sbb
pop
stos
movs
adc
push
fs
ror
nop
mov
pop
lds
cdq
or
lahf
inc
je
fstp
dec
repnz
mov
adc
jmp
add
aas
dec
inc
gs
mov
mov
push
inc
cwde
dec
cmp
add
sbb
ds
xchg
add
ds
inc
adc
(bad)
sbb
xchg
xor
idiv
cmp
push
pop
movs
iret
call
pop
inc
leave
adc
pop
stos
fs
inc
and
jb
cmps
fucom
dec
xchg
mov
(bad)
adc
adc
clc
imul
add
cld
out
push
mov
pushf
and
outs
outs
retf
adc
aaa
cmp
mov
int
push
aaa
repnz
loop
ins
jb
loop
xor
fs
rcl
mov
jmp
dec
xor
rcr
ins
add
(bad)
in
mov
fldenv
loope
mov
mov
push
mov
cmp
scas
lods
iret
mov
out
or
add
mov
xchg
sbb
sar
xor
out
xor
bound
mov
loope
out
add
scas
mov
pusha
jae
ret
movs
mov
adc
sub
pop
push
jp
retf
iret
xlat
movs
sub
pop
ins
pop
sti
js
mov
jecxz
or
sub
inc
lahf
aad
ret
adc
cmps
sub
mov
cld
test
xchg
(bad)
pop
int3
stos
add
sbb
add
repnz
xchg
rcr
push
pusha
push
nop
cmp
jnp
fist
and
push
fwait
adc
xchg
jmp
and
add
addr16
jno
dec
add
popa
mul
sar
and
inc
pop
mov
push
mov
cwde
ja
sub
lahf
int3
mov
jl
jae
dec
inc
mov
call
stos
out
inc
outs
cmp
jg
xor
dec
add
lods
stos
jne
lock
ins
adc
xchg
into
cmp
test
add
xor
cmp
gs
fdiv
into
in
imul
pushf
(bad)
popf
lahf
das
xor
retf
mov
(bad)
and
pop
inc
mov
cmc
movs
pop
sub
dec
lock
xor
add
xlat
cmp
mov
mov
xchg
mov
addr16
cmc
pop
mov
addr16
dec
and
sub
out
rcr
inc
sahf
movs
dec
adc
push
mov
pop
inc
mov
jne
fdivr
out
aam
call
sbb
jns
retf
and
(bad)
aas
mov
add
out
jae
mov
and
inc
aaa
xchg
add
jnp
(bad)
adc
and
cmp
mov
(bad)
lock
test
dec
arpl
pusha
fwait
pop
jmp
and
imul
out
push
mov
xor
or
sub
sbb
popf
jecxz
push
mov
dec
and
(bad)
pop
push
mov
and
popf
fbld
push
retf
xor
movs
mov
rcl
call
loope
inc
sbb
shr
pop
dec
cmp
retf
shl
xchg
mov
push
xchg
shl
rcr
mov
push
inc
call
popf
xor
(bad)
int3
sub
mov
jp
jmp
xor
mov
stos
int
cmp
mov
mov
aas
adc
gs
repz
mov
bnd
mov
daa
int3
repnz
sahf
outs
fnstsw
jae
or
mov
(bad)
cmp
mov
imul
ficom
push
xchg
cmp
jmp
pop
in
pop
shl
or
jmp
xchg
mov
cmc
or
mov
and
mov
lea
movs
xor
lock
jae
sbb
jl
fild
mov
mov
dec
dec
dec
sub
(bad)
fnstenv
xor
cld
clc
rcr
push
jecxz
imul
movs
cdq
push
or
shl
xor
icebp
inc
dec
scas
mov
aaa
cdq
jbe
mov
jecxz
test
(bad)
pop
popf
xchg
mov
jecxz
xchg
fistp
icebp
xlat
cmc
fidivr
xchg
or
cmp
in
call
mov
stos
pushf
(bad)
es
mov
outs
sbb
push
xor
rol
loopne
cld
sub
cli
mov
xchg
cmp
push
jmp
mov
movs
mov
mov
gs
sub
pop
clc
mov
sub
push
or
fisubr
daa
mov
es
push
pushf
sahf
mov
test
addps
cmp
(bad)
xor
xor
ds
shl
icebp
fadd
scas
in
cmp
scas
jo
retf
test
ins
clc
sbb
or
push
or
dec
cld
push
mov
into
sub
arpl
or
adc
ins
dec
test
pop
movs
outs
in
xchg
or
pop
test
stc
cmc
(bad)
daa
in
into
push
inc
je
xchg
sub
cmp
sub
mov
sbb
cmp
push
popf
xor
push
cmp
mov
push
fsubr
jmp
inc
int3
test
(bad)
fisttp
div
fwait
test
sbb
mov
sti
retf
push
fxch
cmp
sar
daa
fiadd
inc
hlt
out
test
aas
mov
xor
retf
lock
je
xchg
cmp
out
mov
adc
fidivr
fisub
(bad)
call
push
inc
push
fstp
ret
icebp
ror
inc
jne
xor
daa
mov
popf
xchg
push
push
hlt
outs
sbb
lods
sub
push
adc
in
into
retf
push
jmp
int
pop
jae
or
fimul
clc
mov
cmps
aad
adc
pop
std
icebp
or
retf
push
out
pop
sub
mov
or
push
sub
adc
sbb
jl
mov
dec
inc
cwde
dec
jno
repz
cmps
mov
push
retf
rcl
dec
cdq
stos
inc
fnstcw
cmps
sbb
mov
ja
push
outs
ret
xor
loope
sbb
pop
inc
inc
sbb
jp
xor
mov
xor
mov
test
xchg
popf
ret
mov
jecxz
das
into
mov
mov
das
push
jae
mov
inc
call
fld
mov
mov
mov
lahf
loopne
pop
push
mov
push
fidivr
or
inc
dec
sahf
pop
sub
add
out
fisub
xor
xchg
jbe
test
push
sub
(bad)
pop
loope
pushf
dec
aad
jbe
dec
into
aas
ds
repz
dec
sbb
push
sbb
(bad)
arpl
xchg
cmps
cdq
cs
jnp
or
inc
xchg
cmps
mov
stos
push
les
movs
jae
data16
xor
dec
dec
mov
mov
hlt
repz
dec
fild
sbb
call
xor
repz
movzx
mov
xchg
vmwrite
test
fmul
adc
cmp
jg
mov
adc
(bad)
std
add
pusha
leave
cmp
jg
les
jmp
(bad)
lods
call
retf
addr16
int3
or
fadd
mov
sbb
cmp
icebp
in
sub
or
outs
mov
jne
xor
and
in
fisubr
leave
mov
pusha
push
shr
popa
push
imul
out
dec
add
or
jge
pushw
gs
outs
add
or
cmp
shl
into
ror
ins
xchg
inc
push
sub
xchg
out
shr
sahf
repz
cs
xchg
test
jae
shr
or
pop
push
push
outs
dec
imul
sar
and
cmp
push
icebp
mov
cmp
fcomp
mov
(bad)
out
ret
xchg
sub
mov
mov
mov
or
add
(bad)
pop
xchg
das
inc
cdq
hlt
mov
cdq
pop
inc
jle
xor
fidiv
jle
call
fabs
pop
pusha
push
std
push
out
lea
hlt
pop
jns
repnz
push
pop
lods
cmp
ss
xchg
(bad)
(bad)
fdiv
cli
add
and
fisttp
mov
les
aas
pop
xor
(bad)
sub
ret
repz
lds
out
(bad)
jecxz
sub
fnsave
dec
push
xchg
dec
lods
imul
jae
aaa
jne
fsub
mov
(bad)
pop
ss
cmps
pop
xchg
mov
repz
fldenv
push
fwait
cmp
or
movs
pmulhw
shr
stos
jmp
lock
push
in
push
jp
or
rcr
(bad)
scas
and
mov
pop
add
dec
jbe
adc
add
nop
pop
pop
sbb
dec
cdq
out
retf
cmp
or
or
xor
clc
add
movq
ss
pop
jp
call
mov
inc
rcr
jbe
cmp
outs
cld
xchg
in
jmp
pop
or
and
sbb
or
nop
push
std
imul
add
jb
mov
(bad)
loopne
sbb
movs
popa
or
ins
dec
in
sub
fistp
nop
push
in
mov
xchg
xchg
dec
loope
les
test
aas
pop
nop
mov
push
add
das
mov
shl
retf
lock
xchg
jno
sbb
xor
add
cdq
inc
jmp
xchg
out
jb
neg
aaa
mov
(bad)
iret
addr16
pop
xchg
and
adc
xor
dec
mov
imul
push
jge
(bad)
rcr
pop
push
xor
xchg
mov
test
icebp
ja
mov
and
cmp
push
fmul
push
cmp
ja
hlt
adc
pushf
hlt
rol
mov
cmc
pop
ins
nop
popa
fidivr
add
int
xchg
mov
inc
push
adc
ja
jmp
daa
cmp
mov
test
push
push
fwait
pop
sbb
loop
(bad)
nop
bound
xor
add
or
and
mov
jge
lahf
fist
psubusw
mov
inc
and
aaa
cwde
inc
not
dec
xchg
xor
icebp
cmps
dec
mov
es
frstor
inc
je
pusha
or
call
ret
dec
enter
shr
imul
pop
enter
cli
jl
fnstcw
out
cmp
mov
jnp
dec
enter
shr
or
sub
xchg
lahf
mov
add
jg
add
fsqrt
or
or
add
aad
movs
mov
dec
mov
mov
mov
sbb
clc
pusha
push
push
in
scas
xchg
jnp
loope
mov
les
pop
(bad)
ins
or
and
scas
sbb
and
mov
sahf
outs
cli
sbb
popf
or
sbb
and
repz
addr16
in
push
inc
(bad)
sub
sbb
ror
mov
sbb
sbb
jno
test
adc
adc
in
mov
xchg
pop
or
cmps
mov
ins
test
jae
mov
and
xor
cmp
in
stc
xchg
adc
jp
rcr
cwde
adc
iret
retf
cs
inc
cmp
out
push
(bad)
ror
adc
cmc
pop
inc
push
ds
es
sti
gs
sub
retf
adc
arpl
popa
scas
movs
xchg
sbb
sub
cmc
add
movs
ror
jmp
enter
test
push
sub
sahf
dec
sbb
repnz
pop
test
fdiv
inc
cs
sub
push
jmp
jns
sub
cli
lahf
(bad)
(bad)
into
xchg
or
mov
jns
pop
out
aam
cmp
fadd
out
movs
dec
mov
mov
mov
adc
ja
lods
lods
into
fmul
push
(bad)
xchg
fistp
(bad)
adc
sbb
push
ins
call
adc
push
mov
jnp
rcr
std
aas
test
mov
add
sub
xchg
fwait
push
push
es
push
lock
mov
popa
push
repnz
repz
push
add
cmp
jne
xchg
mov
push
(bad)
sub
xchg
(bad)
cmp
sti
nop
call
mov
jns
mov
repz
addr16
jno
pop
hlt
daa
push
retf
and
test
lds
sti
aad
nop
gs
fimul
or
out
std
sub
adc
and
or
in
sbb
pop
xchg
mov
xchg
add
pop
fld
push
into
lea
jmp
(bad)
out
lods
dec
hlt
out
test
or
mov
fcomp
push
mov
retf
add
add
or
sub
push
push
jbe
sahf
xor
and
loopne
pop
sbb
mov
cmp
bnd
mov
add
out
jbe
cmps
lahf
leave
or
jmp
popf
xchg
outs
aaa
mov
test
(bad)
bound
ss
repnz
pop
enter
pusha
imul
sahf
dec
xor
loope
out
cmp
mov
push
dec
or
mov
jmp
cmp
cld
jg
imul
jnp
test
in
shl
cmp
je
mov
xor
inc
(bad)
fldl2e
out
xchg
push
push
jns
push
jmp
sbb
shl
or
push
ret
add
sahf
sbb
pusha
jmp
mov
pop
add
xor
xchg
xor
dec
cwde
or
sub
retf
xchg
pop
mov
jae
lea
test
fild
je
test
idiv
or
out
iret
push
test
sbb
jns
icebp
and
mov
mov
mov
popf
bound
add
data16
iret
fiadd
and
sti
and
adc
cli
movs
pop
pushf
cmp
dec
cmp
inc
fpatan
sub
(bad)
out
xchg
cmp
in
mov
xor
test
pop
xor
bound
les
mov
push
and
xchg
and
aam
add
pop
sub
mov
adc
sbb
pop
mov
push
fnsave
jb
adc
mov
dec
inc
cs
or
mov
mov
std
push
cdq
lods
and
out
inc
int
out
aaa
retf
jmp
retf
out
ss
xchg
mov
cwde
mov
out
sub
popa
imul
nop
cmp
das
(bad)
aad
in
xchg
std
xlat
leave
push
jb
mov
aaa
(bad)
into
out
fst
mov
pop
mov
out
mov
enter
cld
inc
(bad)
stos
sahf
push
pop
add
pop
ret
je
loope
(bad)
mov
out
inc
inc
ror
dec
inc
cmp
sub
pop
ja
ins
(bad)
ss
fsubr
sub
cmp
and
cld
xlat
and
add
adc
clc
sbb
jae
fwait
push
retf
xchg
(bad)
out
and
rcr
push
bound
sti
es
icebp
ins
sub
mov
cld
add
loop
dec
movs
mov
icebp
sub
call
dec
rep
cdq
xchg
push
sbb
int3
in
mov
les
inc
mov
movs
cld
int3
xlat
test
test
adc
cli
mov
sbb
aaa
mov
lock
dec
sbb
out
jne
stc
adc
push
rcl
test
or
enter
test
jle
sub
jecxz
cdq
fisubr
xchg
sbb
jmp
push
dec
shl
mov
(bad)
mov
xor
xchg
outs
jl
scas
sub
push
outs
hlt
sbb
xchg
mov
inc
stos
cs
mov
mov
frstor
push
inc
mov
icebp
add
pop
adc
fnstenv
cdq
ins
or
sahf
sub
addr16
retf
push
mov
add
push
call
mov
push
inc
mov
xchg
mov
cmps
mov
inc
sti
jp
imul
cs
int
dec
mov
mov
mov
arpl
retf
clc
inc
xchg
push
int3
ins
(bad)
cmc
xor
xor
xlat
into
ds
xor
aaa
mov
dec
inc
push
adc
mov
aad
lahf
jb
inc
jecxz
fs
push
icebp
jge
sbb
lea
sbb
dec
loop
mov
jo
in
cmc
push
les
mov
(bad)
jmp
repnz
xchg
push
cwde
dec
adc
sbb
sbb
cmp
jne
stc
gs
(bad)
test
jb
mov
mov
inc
sbb
lahf
psrlw
push
lods
xchg
daa
in
xchg
cmc
mov
jmp
lds
pop
inc
cld
inc
xlat
add
mov
xlat
mov
mov
push
fimul
(bad)
cmp
stc
sub
mov
loop
and
cs
sub
adc
movs
fwait
mov
xchg
daa
pop
mov
adc
xor
pop
cli
sahf
movs
ds
sbb
imul
push
inc
and
add
push
sar
mov
add
repnz
sub
out
mov
fadd
loopne
shl
mov
test
fld
xchg
es
push
push
lea
ins
add
aad
ffree
mov
(bad)
push
data16
jl
retf
jns
xor
cmp
pop
inc
cwde
inc
jg
fmul
jle
xor
imul
push
aad
call
lods
xchg
sub
add
add
lods
iret
mov
jae
dec
div
cmp
xchg
mov
rcr
adc
fstp
cmps
cs
jmp
mov
dec
packssdw
cmps
mov
sahf
mov
nop
les
sahf
lea
mov
dec
ja
(bad)
sbb
cmp
lock
aam
xchg
or
lahf
cli
dec
aad
bound
es
jnp
retf
cmp
dec
movs
push
gs
jmp
cs
dec
(bad)
aas
gs
add
das
mov
rcl
or
jb
out
stos
dec
sar
pop
jno
out
call
loope
stos
shl
jp
mov
shl
and
xor
dec
retf
cmp
cmp
sahf
push
jb
push
sub
pop
or
cmp
mov
push
jae
jo
fimul
push
cmps
loopne
jb
xchg
dec
test
xlat
bound
xchg
cld
leave
scas
mov
cmp
(bad)
fnsave
icebp
cmp
imul
hlt
jl
hlt
stos
add
mov
fcomip
popa
cmps
push
mov
and
cmps
mov
mov
(bad)
mov
imul
xchg
loope
rol
pusha
js
mov
je
lahf
std
pop
push
mov
retf
scas
adc
outs
push
aas
xor
mov
in
push
or
mov
inc
sub
out
dec
out
sbb
mov
pop
(bad)
adc
and
mov
stos
bound
mov
loopne
jecxz
adc
popf
mov
mov
push
in
sbb
std
cmps
outs
or
mov
mov
mov
inc
sub
test
sbb
push
ja
popa
data16
dec
shr
mov
xchg
push
fisub
rol
mov
inc
ret
pop
xor
sbb
push
imul
mov
pop
jge
inc
repz
sub
outs
sub
(bad)
pop
jb
or
xor
je
stos
cs
xor
ins
(bad)
sti
push
xor
in
mov
mov
jb
mov
mov
fwait
jb
jecxz
retf
sbb
cmp
leave
sub
ja
or
and
sub
outs
call
imul
cmp
or
hlt
lock
adc
mov
fnstenv
cwde
lea
call
enter
pop
ds
pop
and
iret
cmc
cmp
dec
ror
imul
mov
mov
push
sub
fidivr
mov
mov
mov
(bad)
cmp
push
jle
mov
loope
popf
sbb
fwait
ret
gs
or
cmps
xchg
mov
or
aad
rol
mov
fs
stos
scas
sahf
jns
add
cmp
aas
mov
pop
xor
inc
movd
fld
inc
add
fstenv
jo
pop
inc
std
sub
xchg
dec
jl
and
scas
pop
outs
fst
ds
or
and
ja
mov
sub
dec
fwait
jle
push
movs
in
add
mov
push
mov
adc
add
aas
call
xchg
jmp
pop
add
mov
hlt
sub
test
mov
xor
push
dec
adc
mov
jne
mov
stc
xchg
dec
sahf
adc
mov
mov
nop
mov
retf
push
jne
or
and
xchg
in
cmp
fs
pop
dec
jmp
mov
repnz
sub
stc
sub
dec
cmp
sti
gs
cmps
(bad)
push
lea
mov
jno
jle
mov
sbb
scas
push
mov
rcr
or
dec
xor
push
and
or
(bad)
in
mov
ja
xchg
push
xchg
(bad)
mov
or
cmp
into
mov
cmp
loop
dec
in
mov
pop
iret
call
int
lods
dec
cs
stc
inc
dec
lods
xor
and
lahf
push
sti
inc
sub
jl
dec
icebp
movs
pop
pop
fwait
out
fistp
pop
jl
daa
les
iret
repz
in
dec
test
push
shl
adc
pop
cmps
popa
inc
mov
(bad)
rcl
sbb
inc
call
pushf
movs
mov
(bad)
stos
cmp
(bad)
sbb
mov
loope
dec
and
jmp
jecxz
adc
test
jo
push
or
inc
and
in
jp
inc
cmp
std
sar
das
mov
jg
in
retfw
jbe
loop
aaa
call
mov
cwde
lds
repz
(bad)
bnd
in
popa
mov
(bad)
in
inc
sahf
sbb
sbb
add
mov
adc
mov
fcomp
imul
aas
into
xchg
lods
lock
mov
xchg
cmp
retf
push
mov
call
and
stos
mov
mov
retf
out
cmp
outs
out
cmp
adc
pushw
mov
out
and
in
xchg
push
push
sub
(bad)
xor
clc
pop
in
and
add
rcl
inc
push
dec
push
inc
sbb
in
test
xor
sbb
rcr
int3
mov
sbb
push
or
push
in
add
cmps
dec
fcom
cmc
dec
inc
xor
cmc
ret
or
sub
call
fcom
cdq
mov
inc
jmp
or
clc
stc
xor
int3
push
or
into
mov
dec
addr16
add
hlt
ficom
outs
add
lea
out
(bad)
sbb
push
push
jl
jecxz
ret
xor
(bad)
lahf
mov
add
imul
mov
adc
xchg
inc
in
mov
(bad)
push
xchg
pop
ins
cmp
je
ja
jge
mov
sub
(bad)
popa
inc
pusha
out
push
pop
bound
mov
mov
lods
icebp
out
pop
cmp
movs
mov
and
and
and
xor
cli
sub
push
mov
jo
xchg
inc
popa
mov
adc
jle
dec
mov
test
add
add
pop
jecxz
xchg
and
mov
mov
pop
imul
jle
repnz
das
repnz
das
pop
push
jnp
fimul
idiv
in
adc
xchg
add
dec
add
or
inc
add
inc
mov
aaa
push
ja
mov
and
(bad)
fdivr
sub
sti
fcom
in
dec
cmp
xor
fistp
test
mov
pop
data16
push
push
jns
add
cli
gs
idiv
mov
xchg
xor
jne
and
add
cdq
sub
xchg
jmp
sahf
pop
int3
xchg
dec
inc
lahf
or
daa
xchg
xchg
movs
lods
pop
out
arpl
or
mov
inc
adc
or
add
stc
pop
(bad)
or
push
fdivrp
or
loopne
lahf
std
dec
xchg
loopne
scas
pop
push
fidiv
pusha
jbe
repnz
fcmovnb
xchg
jne
int
dec
test
jb
test
add
mov
add
cld
cmp
ja
cmp
pop
sbb
xchg
pop
gs
ds
(bad)
movs
xchg
jmp
push
loopne
xchg
mov
loopne
cmp
xchg
pop
js
xor
(bad)
xchg
jae
inc
(bad)
xor
inc
dec
push
mov
sahf
out
cli
jno
enter
shl
loopne
xor
mov
push
out
inc
(bad)
clc
cwde
ins
lock
or
inc
or
jmp
mov
xor
hlt
mov
sub
mov
mov
mov
neg
xchg
add
in
addr16
inc
and
push
(bad)
imul
je
mov
pop
xlat
pop
nop
jl
jno
arpl
sbb
stos
outs
scas
imul
xchg
data16
lods
xor
shr
add
pop
pop
fisub
in
js
push
add
(bad)
in
pop
test
push
xor
ret
mov
retf
adc
aaa
lahf
pusha
int
sbb
jle
mov
mov
push
adc
and
fldenv
je
mov
lods
fs
(bad)
fisubr
sahf
inc
fadd
ins
out
mov
iret
aas
js
daa
ret
outs
jle
popfw
jle
xchg
shl
cmp
lods
int3
cmps
ret
js
dec
dec
dec
mov
cdq
lods
fsqrt
fstp
sub
push
ds
in
and
add
add
cdq
in
push
push
mov
and
adc
or
lock
pop
icebp
hlt
sub
fnstenv
jl
shl
mov
jmp
push
lock
push
xor
test
and
push
adc
aaa
gs
fwait
or
pushf
into
enter
sbb
xchg
pop
dec
and
mov
std
mov
mov
push
mov
xchg
cli
mov
stos
(bad)
adc
fdiv
push
rcl
add
imul
stc
push
mul
repnz
retf
loop
pop
test
fist
in
test
mov
fs
iret
jl
stc
adc
sub
(bad)
pop
inc
rcr
sti
pop
cdq
popa
jmp
inc
xchg
mov
ds
pop
cmp
test
clc
adc
cmps
xor
add
ins
fidiv
inc
in
sbb
fst
es
jb
shr
pop
pop
sahf
jmp
arpl
jmp
jnp
add
leave
loopne
sbb
adc
int
mov
adc
pop
lods
aam
stc
mov
push
push
add
add
test
test
les
and
ins
inc
sahf
out
js
aaa
faddp
aaa
outs
outs
ds
popf
xor
out
imul
xchg
dec
jmp
mov
rcr
leave
out
js
mov
adc
popf
scas
mov
retf
pushf
xor
and
cwde
mov
cli
dec
mov
lds
fsubp
mov
lock
test
push
mov
inc
movs
mov
retf
test
dec
ins
mov
adc
ja
inc
repz
mov
dec
push
loop
stos
sahf
dec
ja
cs
retf
pop
add
int3
mov
ins
not
xchg
pusha
add
cdq
aas
push
sbb
or
out
icebp
cmp
mov
xchg
adc
xor
or
mov
test
(bad)
fimul
int
push
add
add
xchg
and
rol
jecxz
repnz
sub
push
loope
xor
mov
sbb
dec
bound
xor
jnp
stos
outs
inc
je
inc
pop
aas
mov
push
sbb
inc
jle
mov
mov
imul
dec
loopne
repnz
cmp
clc
sub
ret
sbb
outs
arpl
test
push
jbe
mov
xchg
sbb
adc
test
div
loope
je
shrd
movs
movs
push
imul
test
out
icebp
xchg
cdq
shl
dec
or
fisttp
sub
sti
adc
push
jo
adc
mov
pop
cmp
ret
iret
aad
push
jecxz
dec
mov
ja
call
in
cmp
test
sub
cmp
sbb
adc
sub
adc
jmp
jl
jp
xlat
add
out
imul
xor
push
cdq
xor
(bad)
enter
xor
and
fnstsw
lods
mov
jmp
mov
xor
call
fwait
imul
add
cmp
cmps
and
push
cdq
xlat
popa
(bad)
mov
enter
stos
cld
xor
rcr
jbe
fsub
mov
adc
mov
neg
jmp
ja
jl
sbb
pop
mov
jbe
fs
ret
sbb
cmp
mov
ret
inc
mov
xchg
loop
mov
cmp
push
sub
cld
pop
repz
fwait
lock
mov
sub
(bad)
mov
or
cmp
mov
xchg
sbb
es
xchg
and
mov
xlat
inc
xchg
sbb
pop
inc
mov
xchg
mov
xor
push
bound
icebp
adc
push
cmp
sub
in
(bad)
stc
pop
xchg
movs
popa
ds
jp
fld
int
shl
pop
mov
movs
cs
sub
iret
sar
add
adc
add
sbb
or
mov
scas
loopne
outs
cmp
popa
add
sub
xchg
ja
mul
lock
sbb
push
mov
mov
mov
push
lds
sub
and
xchg
mov
clc
or
inc
mov
push
lahf
sbb
dec
pusha
pusha
push
clc
ret
ins
bound
mov
jmp
aas
inc
je
pop
xor
jge
push
je
sub
dec
iret
xlat
sahf
pushf
and
repz
int
(bad)
xchg
iret
push
mov
jo
jle
aam
xor
inc
test
jmp
sar
dec
mov
sbb
lahf
xor
not
pop
inc
inc
jmp
add
push
dec
push
sbb
call
sub
push
call
leave
(bad)
dec
sub
icebp
adc
pop
test
and
scas
push
sahf
icebp
mov
mov
push
mov
call
dec
xor
test
or
mov
inc
xchg
int
fdivr
pop
mov
push
paddsb
and
outs
xchg
xchg
jmp
loop
mov
pop
aam
sub
jle
cld
repnz
or
ins
call
xchg
lock
inc
fwait
dec
clc
or
mov
cmp
xchg
ror
or
xchg
and
retf
or
ss
cmps
arpl
jp
or
jae
jb
mov
cdq
sub
out
adc
scas
sti
loop
ja
ins
sub
sub
xor
fisub
cmp
dec
push
pop
jb
lahf
lds
ja
imul
repnz
dec
mov
xchg
cli
icebp
bound
out
das
inc
mov
(bad)
cmp
ret
aad
adc
sub
cmps
dec
jmp
xor
mov
imul
clc
aad
in
add
push
xchg
in
sti
fldl2t
shl
sub
test
jge
xchg
sub
jmp
loop
ja
pop
(bad)
pop
ret
add
jmp
sbb
mov
push
cmp
test
pop
loope
dec
test
cmp
mov
jmp
retf
xor
(bad)
and
and
cmp
pop
or
fldln2
mov
sub
jb
mov
mov
xchg
aad
dec
out
sub
bound
jne
ss
out
icebp
jge
popfw
dec
lea
mov
inc
scas
xchg
xor
sar
ja
jge
sub
int
xor
cmp
jecxz
gs
cdq
mov
mov
push
scas
sbb
adc
cmp
ins
hlt
push
and
mov
and
jle
push
mov
mov
and
repnz
cdq
mov
shl
or
pop
stc
cmp
and
and
test
inc
mov
jle
sub
sbb
pop
mov
inc
cmp
or
push
(bad)
push
pop
push
sti
mov
push
rcr
bound
in
mov
xor
stc
jbe
jns
pop
jge
xchg
aam
adc
movs
fs
inc
mov
pop
fwait
(bad)
js
sub
test
fcom
jle
es
mov
inc
sbb
dec
jne
add
scas
mov
adc
or
test
fld
cmp
adc
shr
pop
in
add
mov
fidivr
pop
test
pop
je
jae
mov
and
ror
(bad)
ror
and
jge
jle
in
sub
jae
sbb
mov
popa
sbb
dec
mov
jle
pop
sub
pop
ret
add
xchg
gs
out
sar
pop
pop
adc
arpl
rol
fmul
movs
(bad)
jb
sbb
mov
and
cdq
cli
adc
adc
call
scas
fdivr
imul
pop
mov
cmps
add
mov
jge
xchg
mov
mov
cld
push
push
mov
int
adc
outs
or
shr
jle
fwait
jnp
pop
push
in
fsub
adc
mov
push
fbld
and
push
jnp
sti
lods
add
push
dec
(bad)
sub
scas
test
arpl
je
push
(bad)
or
arpl
jecxz
cmps
pushf
cmp
mov
xor
push
mov
adc
int3
push
cmps
repnz
jl
rcr
leave
push
xor
in
movs
pop
add
cmp
inc
sti
(bad)
aam
stos
push
mov
cpuid
dec
icebp
test
fistp
cld
add
cmp
sub
hlt
xchg
iret
pop
mov
ss
cmp
mov
lock
cmps
push
out
arpl
xor
popf
jns
jnp
xchg
push
sbb
je
pop
sbb
fistp
xlat
in
cmp
repnz
(bad)
stc
jp
mov
into
lods
aam
dec
mov
pop
aas
retf
(bad)
push
adc
jns
ror
add
fcom
add
je
and
pop
cmc
enter
shl
test
into
sub
ret
dec
jecxz
or
xchg
imul
adc
xchg
xchg
lea
shl
lock
in
(bad)
sub
fisttp
push
pusha
(bad)
xor
sbb
inc
aam
mov
stos
cld
stc
xor
loopne
cmp
int
imul
test
inc
adc
cmps
add
sbb
or
and
ss
movs
lods
cmp
mov
push
movs
push
push
mov
mov
jo
adc
push
mov
jecxz
stc
push
mov
xchg
mov
movs
call
imul
call
in
cwde
sbb
je
cdq
fdivrp
sub
les
dec
neg
dec
or
or
mov
fsubr
inc
mov
xlat
loop
mov
inc
xchg
or
push
pop
lahf
stc
cmps
mov
aam
stos
frstpm(287
nop
add
outs
imul
fwait
sbb
xchg
stc
iret
in
xchg
adc
daa
push
dec
cmps
mov
inc
pop
cmps
jnp
sbb
mov
stc
scas
fwait
pusha
cli
sub
mov
loope
ins
das
cmps
sub
push
push
adc
bound
push
mov
enter
push
in
push
mov
sbb
(bad)
xchg
push
lds
and
aam
jns
not
ins
mov
hlt
call
inc
add
add
xlat
adc
xchg
xchg
sub
sbb
pop
xchg
(bad)
pop
sub
fsub
push
xor
sbb
xor
mov
mov
ins
scas
inc
into
push
mov
outs
pop
and
in
in
cwde
pop
pop
adc
lahf
jmp
arpl
jmp
ins
(bad)
pop
cmp
fs
inc
push
push
push
aaa
mov
das
xor
adc
sub
lds
out
mov
sub
mov
cmp
and
sub
sub
cmp
jae
mov
mov
nop
out
dec
ins
xor
jl
addr16
pop
push
stos
dec
sar
mov
dec
add
and
cmp
inc
cmc
adc
ret
push
adc
out
push
push
inc
repz
pop
das
jmp
movs
outs
pusha
retf
mov
push
(bad)
retf
test
mov
lds
loopne
daa
pop
std
outs
mov
pop
add
mov
(bad)
push
cwde
or
fdivp
and
icebp
ret
push
scas
popa
cmc
and
pop
or
movs
arpl
ins
loopne
ret
aad
pop
inc
addr16
stos
cmp
xor
cdq
mov
inc
jge
mov
sub
xor
sub
ret
sbb
push
pop
or
inc
sbb
mov
cmp
and
pusha
mov
outs
mov
ret
xlat
ja
das
mov
sbb
out
cmp
xchg
push
scas
out
sbb
fld
sar
mov
dec
stos
addr16
lds
and
push
iret
mov
inc
clc
cmpxchg
xchg
jg
mov
test
add
xor
loop
jnp
mov
ss
pushf
push
nop
pop
inc
ret
fwait
repz
daa
aaa
js
scas
out
mov
mov
outs
rcl
xchg
mov
imul
inc
jl
cdq
dec
call
dec
mov
and
mov
and
mov
pusha
sub
add
jmp
mov
xchg
pop
and
cdq
call
xchg
test
mov
dec
test
leave
(bad)
iret
cmps
popa
fild
cdq
dec
in
rol
cmp
sar
imul
push
sub
xchg
scas
mov
imul
inc
daa
push
push
test
outs
mov
jl
or
pop
cmp
in
cmps
mov
jle
jns
ds
into
call
and
dec
pop
ins
jnp
mov
xlat
cmp
fs
sar
(bad)
aaa
sbb
mov
pusha
dec
icebp
push
clc
ret
fisttp
test
push
outs
icebp
das
mov
mov
jno
mov
(bad)
jne
in
lods
xor
sbb
xchg
push
(bad)
mov
sbb
dec
push
mov
inc
pop
stos
pop
xchg
cmps
test
xchg
out
aad
dec
bound
mov
xchg
cli
mov
stos
cmp
mov
mov
push
add
adc
sbb
mov
and
cmp
cmps
mov
add
test
pushf
mov
jecxz
xchg
push
mov
pop
es
icebp
add
mov
mov
dec
stos
enter
jae
or
or
dec
mov
jno
cmps
cmp
test
mov
inc
stos
xchg
test
lock
ins
push
das
fld
(bad)
lods
push
xchg
punpckldq
div
mov
jmp
and
test
push
out
fild
icebp
inc
ss
jo
fwait
clc
xor
rcr
or
ret
xor
lods
push
push
cdq
jmp
mov
push
mov
mov
mul
(bad)
pop
arpl
xor
mov
gs
pop
push
mov
fisubr
push
je
test
leave
ds
inc
fisttp
xchg
sbb
cdq
mov
(bad)
pusha
xor
int
pop
enter
mov
adc
mov
and
pop
inc
cmc
cmp
aaa
xor
xor
(bad)
into
mov
sub
fisub
idiv
mov
xchg
(bad)
jnp
xchg
int
dec
popa
add
pop
repnz
sti
cmp
inc
jno
aam
xchg
test
xchg
mov
ins
lds
(bad)
nop
mov
cmp
fs
and
add
push
iret
pop
or
and
sahf
sahf
or
das
jmp
(bad)
dec
xor
mov
mov
pop
push
push
push
mov
sbb
xor
jge
test
xor
in
idiv
popa
sar
xchg
xor
dec
(bad)
cld
jle
int3
lds
jmp
and
ffree
test
and
pop
ret
scas
jno
pop
adc
les
(bad)
jmp
mov
aam
lods
jl
sti
add
jbe
retf
jle
(bad)
mov
mov
xchg
pop
push
add
push
outs
retf
add
jge
into
or
cwde
cmp
dec
and
push
mov
dec
rcl
stos
arpl
xchg
add
sub
nop
jl
xchg
add
hlt
pop
dec
mov
cwde
add
mov
xor
xchg
ds
push
arpl
jbe
and
cmp
and
iret
push
pop
jecxz
mov
fistp
sbb
pop
cmp
pop
push
push
jmp
pop
adc
loop
xchg
mov
jb
xor
clc
ins
pushf
pushf
pop
adc
aam
xor
cld
and
pusha
inc
jne
sub
je
dec
or
add
jmp
scas
in
aas
mov
loope
adc
imul
ror
sar
lds
mov
in
adc
mov
mov
and
jnp
adc
sbb
out
mov
xchg
mov
mov
outs
inc
stos
lods
data16
push
push
and
je
cmp
in
(bad)
fild
cmp
jo
scas
inc
cmp
pusha
shl
pop
into
push
dec
arpl
in
jmp
test
add
js
inc
pushf
pop
aad
idiv
jmp
push
sub
mov
aaa
adc
mov
sbb
adc
pushf
stos
and
daa
mov
loope
dec
mov
mov
mov
xchg
push
ret
je
xor
in
push
(bad)
xchg
dec
push
loope
mov
push
adc
rcr
pushf
xor
mov
popf
push
and
dec
das
addr16
retf
call
(bad)
out
jmp
xchg
ins
cmc
jg
cmp
cmps
sahf
sahf
data16
std
repnz
(bad)
inc
shr
cmp
movs
mov
xchg
repnz
or
or
(bad)
arpl
adc
push
enter
repnz
gs
jge
dec
fwait
jle
inc
xchg
fidiv
inc
mov
lahf
out
and
das
div
lock
adc
sub
xor
call
test
enter
xchg
iret
pusha
add
int
(bad)
stc
fwait
cli
mov
push
cwde
mov
call
or
jo
mov
xchg
cld
retf
push
paddd
popf
cmp
outs
out
add
mov
push
es
mov
push
mov
jge
pusha
mov
ficom
bound
popa
rcl
push
mov
ins
mov
xchg
push
cmp
mov
or
hlt
or
or
or
movs
and
cmc
jge
add
add
repnz
sub
adc
imul
inc
test
mov
xor
les
outs
ins
mov
inc
js
push
ds
jmp
sahf
and
sahf
and
add
es
pusha
pop
sbb
dec
pop
push
add
imul
stc
nop
out
in
ret
nop
fcmovnu
pop
into
jmp
es
out
pop
rcl
(bad)
push
fdivp
xor
and
inc
je
jns
scas
pop
and
(bad)
jnp
sub
jp
push
push
bound
std
mov
or
xor
repnz
cs
dec
cmp
sbb
xor
rcr
add
out
add
arpl
sbb
cdq
push
or
scas
mov
pop
not
cmps
(bad)
aad
fimul
cmp
das
iret
out
adc
jge
movs
push
cmp
ds
jnp
adc
aas
and
cmp
jne
jp
test
dec
cmp
mov
fdivr
aas
mov
fcomp
cmp
lods
mov
mov
dec
or
fs
cmp
rcr
or
pop
push
das
jae
jle
mov
in
xor
loop
dec
xchg
pop
pop
clc
inc
test
hlt
mov
mov
sub
jmp
(bad)
aaa
imul
ss
sbb
das
icebp
bound
enter
or
loope
mov
lock
retf
sub
sti
mov
(bad)
pop
call
xor
add
add
add
mov
xchg
or
retf
inc
jge
or
gs
daa
pop
mov
mov
aas
enter
and
inc
popa
xor
and
outs
xor
and
mov
inc
jno
pop
inc
and
into
mov
xchg
in
inc
out
repz
push
lahf
xor
loope
fimul
test
and
pusha
es
sti
aas
pop
ret
push
in
adc
popa
idiv
inc
push
pop
or
not
jecxz
imul
dec
or
std
adc
es
loope
or
dec
std
push
loopne
(bad)
hlt
adc
addr16
bound
stc
adc
mov
sti
ret
jbe
jno
(bad)
push
in
jnp
pop
std
je
mov
push
pusha
or
jge
call
je
ret
cwde
fld
jecxz
fisttp
addr16
xor
imul
fidiv
loop
mov
pop
bound
dec
sbb
xchg
mov
ret
mov
cmp
das
and
and
retf
fst
stos
cmps
cs
pop
jl
and
es
das
xchg
popa
sub
es
add
and
sbb
(bad)
shr
cdq
xchg
jp
add
and
jne
addr16
add
cmp
mov
inc
gs
mov
(bad)
mov
and
enter
pop
cmp
pop
stos
adc
movs
xchg
fsub
push
mov
xor
call
jp
sti
or
shr
frstor
mov
lahf
cdq
in
and
inc
and
icebp
pop
sbb
pop
pop
mov
ss
cmps
pop
push
sbb
mov
aaa
out
loope
pop
cld
mov
ja
cs
sub
lods
push
movs
dec
fwait
mov
inc
dec
mov
xchg
sub
sub
mov
and
adc
fld
add
(bad)
shl
mov
das
fcmove
adc
call
jg
pop
inc
movs
dec
mov
iret
movs
inc
adc
mov
stc
cmp
jae
inc
loop
int
pop
xor
jno
bound
cld
(bad)
inc
xchg
jmp
sub
add
cld
lods
inc
nop
mov
idiv
jecxz
push
lods
(bad)
xchg
lahf
and
(bad)
out
loopne
pop
cld
or
lea
and
and
leave
push
jg
pop
dec
cmp
jmp
(bad)
sbb
shr
dec
loope
leave
(bad)
cmp
or
sbb
mov
ret
repz
es
add
in
es
cwde
in
and
les
mov
shl
jb
jecxz
fwait
ins
push
pop
loop
ja
jecxz
test
inc
dec
sahf
rcr
clc
pop
rcl
das
sbb
pop
iret
fwait
jb
aad
xchg
ficomp
jp
fistp
gs
loopne
xor
call
inc
and
pop
dec
jl
jbe
(bad)
jmp
inc
scas
or
adc
out
push
push
stc
pop
stos
add
and
cmp
jmp
cs
aaa
sub
jo
arpl
adc
cs
fistp
sbb
mov
pop
xchg
inc
mov
test
jmp
imul
aam
cmps
sub
jge
cmp
jg
push
gs
sub
ret
inc
pushf
sti
fs
or
mov
dec
add
mov
push
sub
sbb
sar
mov
dec
icebp
je
mov
lock
clc
sbb
xor
in
cdq
js
or
add
dec
retf
sub
cs
icebp
fdiv
rcr
and
add
mov
cld
xor
xor
enter
mov
scas
ret
bound
gs
jns
sub
add
std
jmp
fwait
pop
sub
cmp
aaa
dec
mov
cmps
les
data16
(bad)
jp
into
push
int3
and
xlat
xchg
cmp
in
jo
fcomi
cwde
imul
inc
cmp
mov
dec
ins
int
adc
sub
shl
pusha
xor
push
mov
or
shl
arpl
or
loopne
mov
and
mov
fisttp
popf
inc
ror
cwde
nop
clc
mov
lock
xor
test
and
jns
pop
and
mov
or
cld
or
lds
pop
in
cmp
sbb
add
add
stos
mov
sbb
hlt
cmp
jno
push
mov
add
sbb
xor
push
js
scas
repz
add
lods
mov
aaa
repz
inc
pop
and
jmp
dec
inc
dec
mov
xchg
and
das
popa
cmc
into
jecxz
dec
lahf
loop
mov
jb
mov
inc
inc
sub
ins
mov
mov
xchg
mov
out
mov
aas
int
jno
cmp
mov
(bad)
pop
dec
mov
jae
mov
dec
pop
sti
out
push
push
outs
mov
push
lds
ficom
push
or
lock
daa
out
sbb
jcxz
loop
xor
les
in
imul
in
daa
cmps
jns
adc
ret
mov
test
ins
pushf
push
adc
jae
sbb
add
pop
in
es
sub
or
sub
imul
xchg
xchg
pop
ret
jnp
jns
add
shr
ja
scas
mov
and
adc
push
xchg
pusha
mov
jnp
cmp
dec
push
scas
mov
aad
ret
fisub
fdivr
adc
mov
adc
iret
push
sbb
scas
jmp
pusha
adc
aad
imul
dec
imul
fcmovnbe
out
or
ret
cwde
in
shr
in
sahf
std
push
or
js
fs
int3
pop
(bad)
xchg
dec
movs
mov
call
xchg
sub
mov
mov
mov
ja
adc
daa
inc
pop
pop
cs
cmp
mov
int3
in
add
mov
gs
test
mov
mov
(bad)
outs
ja
xchg
adc
mov
jbe
push
loop
mov
enter
in
sub
(bad)
arpl
fistp
xor
push
cmp
inc
ret
scas
push
xor
mov
xor
das
dec
sub
push
xor
rcl
lock
int3
adc
fsubr
mov
ja
jne
add
push
popf
jne
or
add
pop
pusha
and
cld
call
dec
push
adc
aas
inc
(bad)
scas
and
xor
push
inc
mov
or
push
or
or
ins
adc
sub
and
xchg
sub
inc
sub
sub
sub
jg
test
bound
push
push
sub
aas
repz
cmps
cmps
imul
popf
nop
ret
rcr
or
mov
rcr
les
xor
inc
adc
(bad)
cld
test
ficomp
repnz
xor
aaa
fstp
into
pop
mov
pop
add
push
add
push
stos
jle
call
cmp
in
pop
stos
mov
push
jg
pop
pop
stc
arpl
cs
repz
adc
inc
sub
push
in
in
aam
mov
cmp
idiv
xor
cs
std
arpl
cmp
mov
or
scas
sti
adc
jmp
pop
dec
in
pop
sub
sub
adc
hlt
fiadd
jmp
add
jbe
out
mov
in
icebp
(bad)
mov
lds
cmps
sbb
fsub
data16
inc
dec
jmp
mov
and
xor
clc
repnz
movs
sub
mov
repnz
jns
stos
push
push
cmps
jbe
cmp
stc
popf
scas
imul
jno
and
hlt
call
gs
add
mov
fidiv
aaa
(bad)
cmp
call
mov
add
call
(bad)
mov
xchg
aaa
loopne
aaa
cli
ret
mov
mov
jb
in
mov
mov
leave
cmp
cmps
xor
rol
mov
xchg
sbb
(bad)
mov
outs
shr
rcr
fs
mov
test
fiadd
test
xchg
mov
xchg
test
(bad)
xlat
xchg
pop
mov
arpl
cmp
pushf
imul
adc
mov
inc
xchg
sbb
mov
dec
cmp
pop
add
inc
push
xchg
sbb
xchg
cmps
stos
std
xchg
clc
das
stos
scas
ja
adc
jg
mov
cmps
jl
sar
test
(bad)
lods
push
jb
ret
mov
shl
int
dec
std
mov
dec
mov
jmp
xchg
cli
fisub
(bad)
mov
push
add
in
sbb
pop
pusha
es
fld
(bad)
lock
jo
outs
leave
add
loopne
push
jb
cmp
dec
mov
jp
mov
push
pfcmpge
ins
(bad)
and
mov
cdq
fsub
mov
mov
cli
stos
inc
xchg
push
add
mov
xchg
nop
xor
ins
and
cdq
jp
popf
scas
pop
retf
daa
fist
mov
cli
lsl
shr
mov
jmp
mov
(bad)
pop
cmp
mov
test
mov
mov
out
stos
aad
adc
imul
mov
mov
cs
cmps
pop
mov
cmp
xor
inc
aam
or
jbe
inc
xchg
in
loop
push
(bad)
jg
mov
stos
dec
sar
dec
sbb
cmp
in
push
cmc
pop
cdq
jg
scas
stos
cs
psrlq
xchg
ror
mov
mov
not
sbb
(bad)
mov
imul
fldenv
mov
add
jne
sub
enter
or
lea
dec
inc
das
and
or
test
loop
imul
sbb
ja
call
jp
aaa
jmp
add
mov
int3
sbb
cmp
mov
cmp
nop
inc
test
jl
iret
lea
stos
xor
fisttp
test
jo
sub
(bad)
cmp
xlat
ss
lds
fbld
xor
sbb
pushf
jmp
imul
and
in
mov
ins
icebp
cdq
jg
gs
(bad)
mov
mov
fcomi
das
sbb
(bad)
into
mov
xchg
jp
ins
jo
dec
push
mov
lea
cmp
push
shr
jbe
inc
xor
icebp
xchg
mov
(bad)
in
push
ficom
ins
ret
jbe
mov
pop
mov
xchg
(bad)
in
add
arpl
cmp
mov
cmps
call
les
aad
repnz
mov
call
mov
mov
outs
push
xor
dec
inc
repnz
in
dec
rcr
fs
je
or
ficomp
pop
popa
sahf
xor
mov
cmp
nop
ret
imul
xor
(bad)
(bad)
loop
lods
jbe
cmp
push
push
or
jmp
cwde
imul
and
cmps
sub
push
sub
outs
push
loop
jbe
pop
push
hlt
mov
ret
daa
xchg
sbb
jae
adc
mov
jecxz
imul
mov
pop
mul
mov
mov
xchg
push
scas
xchg
sahf
sub
lods
sbb
push
(bad)
jo
or
inc
test
cmc
dec
es
and
jg
mov
mov
cli
dec
jnp
adc
sub
fxch
(bad)
ss
mov
or
daa
ja
es
bound
xor
mov
(bad)
sbb
mov
pushf
stc
xchg
inc
popf
fist
mov
push
push
pop
mov
inc
ficom
push
jle
popa
and
jno
gs
inc
adc
arpl
retf
sahf
adc
aam
dec
cmc
xlat
sbb
pop
pop
mov
dec
cwde
not
imul
fcom
jb
adc
sbb
jbe
ins
pop
jl
fnsave
lahf
cmp
and
dec
imul
shl
je
push
push
mov
inc
fstp
lds
mov
pop
push
mov
rol
dec
pop
mov
xchg
jbe
or
arpl
dec
add
arpl
(bad)
jns
outs
jno
push
out
leave
shr
stc
mov
dec
mov
sub
stos
or
inc
test
pop
pop
sub
push
ja
push
push
out
bound
int
push
adc
mov
add
or
test
cmp
aas
pusha
mov
jmp
mov
sbb
mov
mov
fimul
test
inc
mov
jmp
movs
fcmovnb
aas
pop
pop
cld
dec
movs
mov
out
or
xchg
and
cmps
pop
add
or
cdq
test
jp
push
and
cmp
inc
cmps
cmps
mov
push
mov
xor
les
test
jecxz
(bad)
(bad)
loop
ret
loopne
ss
mov
inc
les
fs
pop
in
pop
push
jp
rcr
add
push
cld
loope
js
nop
push
push
int3
push
inc
xor
xchg
and
mov
pusha
js
pop
lods
retf
imul
mov
ret
rcr
jmp
or
dec
or
xchg
stc
push
adc
retf
fst
xchg
and
jge
or
or
jl
in
shl
cmp
jmp
cmp
pop
(bad)
movs
jae
outs
out
xchg
fdiv
mov
and
inc
xchg
xor
sub
es
add
adc
mov
cld
js
and
jmp
fwait
mov
mov
ror
shl
adc
xor
iret
xor
mov
inc
xchg
mov
adc
in
enter
test
outs
mov
scas
adc
xchg
jp
and
mov
mov
cmp
mov
inc
inc
fdivrp
movs
popf
pop
add
enter
pop
pop
push
pop
fimul
cli
call
mov
xchg
adc
cmp
retf
test
mov
dec
dec
test
into
jp
mov
popa
pop
icebp
add
pop
sub
push
dec
es
pop
sub
popf
(bad)
jge
bound
cmp
cmp
(bad)
retf
pop
sub
jno
jae
out
sbb
outs
stc
test
adc
sub
popa
add
xchg
push
mov
in
dec
push
frstor
mov
jno
mov
inc
sbb
jge
sbb
cmps
es
dec
xchg
cmps
pop
sar
sar
loope
push
repnz
fiadd
sbb
push
jne
cli
mov
inc
adc
retf
arpl
cmp
dec
sub
out
inc
xchg
cmps
pop
in
scas
pop
je
push
dec
sti
aaa
mov
push
mov
arpl
das
add
pop
push
adc
rcl
outs
mov
int3
outs
imul
js
mov
in
popf
fwait
nop
cmp
push
mov
imul
iret
jo
adc
dec
push
js
cmp
pop
push
push
pop
push
add
inc
sti
in
pop
mov
dec
gs
jne
push
dec
pop
sub
mov
and
mov
ror
loop
inc
jns
push
pop
mov
xor
rcl
cmp
shl
imul
mov
pop
sar
lds
in
push
pushf
adc
sbb
inc
ret
push
sbb
adc
mov
mov
lahf
jae
fwait
add
or
ja
in
test
add
fild
mov
imul
popf
dec
mov
or
mov
call
xchg
retf
ins
or
rol
push
lods
xchg
jb
mov
movs
and
lea
push
push
dec
call
xchg
and
ins
mov
cld
(bad)
loope
bound
and
popf
cmc
push
cli
or
inc
sub
dec
adc
hlt
mov
adc
pop
js
pusha
je
daa
mov
add
xor
(bad)
sub
mov
dec
pop
movs
dec
daa
cmp
imul
adc
sbb
ror
(bad)
in
sub
jmp
cli
and
mov
lods
(bad)
shr
in
fiadd
scas
lods
mov
scas
shr
inc
adc
fild
mov
cmp
xchg
pop
gs
adc
pushf
in
pop
dec
aaa
data16
outs
pop
xlat
jl
in
cs
jno
sub
and
mov
enter
outs
sti
retf
pop
xor
sub
movs
mov
mov
stc
test
cmp
sub
sar
jge
ins
cmp
stos
dec
jno
sar
sub
rcr
sti
aaa
and
pusha
or
(bad)
out
mov
outs
ds
push
push
jno
dec
xchg
inc
into
mov
and
call
cmp
mov
repz
sub
inc
repz
cmp
mov
mov
lods
sub
cwde
sbb
mov
cmp
aad
sbb
inc
les
xchg
sbb
stc
pop
adc
mov
(bad)
mov
cmps
ret
mov
ins
dec
and
lods
test
ret
push
cli
sub
(bad)
arpl
scas
cdq
mov
adc
ins
in
cmp
dec
loop
retf
lea
cs
fsubp
rcr
icebp
mov
std
pop
movs
pop
fwait
addr16
jb
jne
xchg
jp
inc
ret
jmp
or
ss
mov
jae
xlat
add
gs
pop
jno
cs
cmc
mov
adc
cdq
retf
lods
test
hlt
sbb
mov
movs
inc
cld
gs
das
outs
(bad)
pop
pop
out
jmp
stos
xchg
addr16
loop
(bad)
pop
call
inc
mov
and
cmc
data16
adc
pop
dec
pop
push
or
fwait
hlt
sti
xor
dec
mov
popa
adc
dec
stos
fist
xchg
jne
mov
sbb
enter
das
lahf
cmp
outs
or
adc
aad
in
ficom
sbb
ins
inc
test
adc
aas
int
mov
call
cmp
xor
iret
add
mov
cs
push
imul
dec
jp
fxch
or
int3
jno
cdq
add
jmp
jbe
xchg
xchg
and
mov
jbe
rcl
sbb
aas
mov
mov
push
call
lds
gs
fnstcw
xchg
inc
inc
jne
jbe
sub
push
inc
das
je
mov
out
dec
xchg
cmp
je
fisubr
cld
outs
push
mov
adc
call
inc
mov
mov
mov
or
push
inc
dec
cdq
xchg
xor
cmps
xchg
icebp
jns
xchg
push
or
mov
xor
rol
ss
lahf
xchg
jnp
repnz
cmp
ror
adc
sti
aaa
data16
and
dec
and
imul
retf
mov
mov
cdq
outs
dec
mov
test
cmp
adc
ins
mov
pop
push
gs
dec
repz
hlt
call
fwait
push
mov
mov
(bad)
dec
lods
dec
ins
shl
fs
mov
xchg
and
in
sub
sbb
lods
mov
xor
js
add
push
scas
xlat
call
stos
jp
push
mov
repnz
xlat
(bad)
pop
sbb
xchg
or
inc
xchg
jae
movs
push
jae
xchg
(bad)
out
retf
imul
jnp
adc
sub
push
sar
push
call
inc
sbb
push
dec
and
inc
mov
jmp
sub
inc
mov
dec
push
dec
out
stos
pop
mov
pop
pop
or
sub
dec
xlat
xchg
cmc
xchg
cmp
in
jg
mov
pop
std
stos
inc
shl
(bad)
hlt
out
shl
push
cmps
sbb
inc
push
pop
push
add
test
pop
lods
not
aaa
gs
pop
sbb
adc
sbb
call
mov
jnp
mov
fidivr
cmp
mov
iret
repz
xchg
xchg
inc
jns
mov
mov
in
dec
and
mov
jno
ror
aaa
ficom
mov
mov
xchg
and
pop
cmp
mov
or
and
stos
mov
pop
mov
inc
repnz
retf
and
dec
(bad)
mov
das
(bad)
mov
lds
add
cmp
adc
or
mov
je
int3
icebp
pop
lock
cmp
add
cmp
outs
sub
in
addr16
dec
out
jmp
pop
pop
test
push
xor
push
jnp
mov
imul
xchg
push
mov
jns
in
or
nop
pop
mov
fcmovbe
ins
ficom
adc
cmp
add
ret
ins
call
jge
ficom
fbld
inc
fwait
xor
sahf
bnd
aam
mov
movs
sbb
mov
mov
ins
jae
dec
mov
xchg
loope
or
fsubrp
pop
sbb
sub
or
add
add
in
mov
xchg
fwait
jne
sbb
mov
mov
(bad)
out
cmp
cmp
loop
mov
cmp
lock
xchg
int3
loop
ret
xor
cli
pop
es
and
sbb
out
mov
dec
(bad)
aad
jp
xchg
cmp
mov
jbe
cmc
xchg
call
inc
mov
xlat
ret
mov
call
mov
dec
or
shr
dec
mov
(bad)
mov
in
add
shl
jb
jge
test
sub
pop
add
fmul
aad
push
out
and
and
fsubr
test
mov
in
repz
xor
jp
clc
or
daa
mov
mov
call
(bad)
out
out
sub
push
jnp
in
adc
test
out
pop
push
or
mov
shl
lods
adc
das
cmp
jp
ja
dec
xchg
xor
mov
pop
fadd
push
lds
dec
mov
xchg
sbb
clc
mov
outs
mov
push
mov
adc
fst
mov
repz
ins
jp
lods
bound
add
xor
jl
and
xchg
pop
lahf
dec
or
or
in
sbb
sbb
(bad)
pop
in
cmps
pop
stos
sub
fsub
mov
ins
fisubr
imul
stos
mov
jge
hlt
cs
or
jecxz
fst
movs
faddp
sbb
xchg
mov
(bad)
jne
into
lea
(bad)
xchg
lock
mov
pop
or
bound
in
mov
aaa
repz
sub
in
int3
adc
xchg
(bad)
addr16
and
fimul
inc
arpl
push
stc
sub
inc
mov
push
arpl
inc
fsub
stc
nop
xchg
push
mov
pop
dec
and
pop
repz
cmp
popa
lods
dec
push
add
lock
in
fwait
outs
jmp
mov
retf
rcl
mov
sub
rol
xchg
dec
inc
inc
inc
lock
sbb
and
aas
scas
jmp
xchg
jle
rol
cmp
test
loopne
add
pop
and
add
call
mov
inc
inc
mov
cmp
jmp
sub
stos
push
cmc
xchg
mov
push
retf
sbb
enter
jbe
pop
lods
lods
test
xchg
popa
and
push
pushf
shl
bound
mov
lock
pop
xlat
xchg
dec
mov
mov
repz
fst
jg
stos
push
jns
imul
jge
call
cmp
sbb
xchg
and
rcr
vxorps
test
mov
mov
test
cmp
int
addr16
sbb
je
daa
in
loop
pop
rcl
scas
repz
imul
jmp
mov
inc
iret
jg
sub
call
imul
ja
fs
ds
daa
push
sahf
adc
test
int
sti
jmp
push
in
mov
daa
dec
test
sub
stos
mov
fwait
loopne
in
sub
cmp
or
jp
(bad)
aad
push
jmp
xor
std
inc
nop
xchg
jle
ret
not
repz
nop
popa
jmp
sbb
fisttp
imul
cmp
mov
jecxz
dec
int
mov
stc
test
call
leave
dec
xchg
fiadd
or
aam
aam
cli
imul
pop
xchg
lea
add
(bad)
sub
pop
xchg
mov
mov
retf
jno
push
push
imul
mov
(bad)
(bad)
fisub
pop
jne
fmul
cdq
pop
cwde
fwait
push
sbb
call
push
jbe
mov
jne
xor
(bad)
add
ret
mov
bound
test
mov
pop
ret
jmp
mov
clc
sbb
outs
pushf
(bad)
fmulp
cs
dec
cmp
inc
cmc
dec
fnstsw
inc
inc
jle
repz
lea
and
push
neg
add
push
dec
inc
xor
lods
inc
fcomp
add
mov
pop
push
(bad)
cmps
xor
ins
jg
jo
xchg
mov
push
ss
ret
daa
rcr
bt
xchg
or
pop
fdivrp
stc
and
int
je
mov
loopne
cmps
jns
mov
fstp
sub
mov
pushf
jmp
mov
popa
sbb
or
pusha
adc
xor
push
scas
outs
mov
outs
fst
ret
sbb
mov
mov
dec
jae
sbb
mov
xor
pop
push
push
or
cmp
cmp
ret
nop
das
(bad)
fwait
push
aad
mov
test
addr16
pop
repz
ds
cmp
ja
in
hlt
cmp
aas
push
pop
mov
cdq
hlt
mov
imul
push
and
sti
xor
pop
int3
jb
addr16
movs
imul
movs
fwait
dec
fwait
retf
sbb
xchg
aas
shl
pushf
sub
sub
pop
mov
ins
sub
inc
mov
lock
mov
mov
xor
mov
inc
mov
xchg
loop
adc
lock
pop
das
inc
xchg
push
rcr
mov
jne
loope
dec
mov
test
sbb
inc
pusha
pop
jnp
sub
icebp
sbb
(bad)
push
sub
repnz
add
inc
xor
sbb
jl
retf
lock
(bad)
cmp
icebp
add
aas
out
cmc
xor
pop
test
out
jle
xor
sbb
cmp
jmp
push
data16
lods
push
cmp
fs
push
popa
in
fistp
add
push
lea
inc
loop
int3
das
jge
scas
imul
das
addr16
mov
leave
call
jne
mov
stos
or
sub
and
mov
into
mov
imul
aas
jl
pusha
rep
loopne
fdiv
lahf
xor
test
xchg
mov
pop
add
pop
sub
aam
ins
scas
mov
sti
(bad)
push
aas
sti
xchg
scas
scas
push
aaa
call
popa
hlt
fdiv
fdiv
lea
icebp
dec
in
sbb
retf
or
ficom
mov
jno
aad
xchg
mov
dec
mov
(bad)
jl
loopne
cwde
shr
mov
dec
push
call
ss
add
push
pop
push
pop
addr16
cmp
lds
fwait
jle
clc
in
lods
add
out
dec
adc
cmp
imul
jge
jo
mov
cmc
mov
hlt
pop
popa
or
leave
inc
add
mov
mov
dec
(bad)
loope
add
rcl
rcl
pop
jmp
add
pop
test
sbb
arpl
jg
push
and
cmp
neg
adc
es
push
xchg
dec
jnp
mov
inc
sahf
xor
mov
repnz
xor
xlat
sbb
jbe
pusha
pushfw
adc
mov
fsubr
cmp
ins
and
sub
test
sub
push
in
inc
cmp
stc
dec
xor
jns
in
je
out
mov
xor
adc
mov
and
sahf
jp
ds
ret
int
sbb
mov
pop
mov
add
push
jb
mov
push
jmp
lahf
lock
(bad)
mov
ja
setno
call
mov
mov
addr16
cmp
pop
mov
push
les
add
mov
inc
cmovle
ret
movs
push
loope
jbe
sub
out
ja
sbb
jns
mov
add
or
pop
(bad)
div
ror
stc
push
out
stos
inc
dec
dec
xlat
inc
cdq
dec
dec
pop
dec
xacquire
jns
repz
ror
js
cmp
pop
pop
sahf
jnp
movaps
mov
mov
div
ficomp
dec
xchg
outs
pop
sub
packuswb
aad
out
xchg
ficomp
and
aas
pop
add
imul
mov
add
mov
push
pop
fdiv
loope
fnstsw
test
sub
shl
sahf
sub
dec
pop
push
inc
iret
(bad)
retf
adc
daa
div
pop
test
ins
xor
mov
xchg
loope
fs
xchg
mov
sub
das
mov
pop
mov
leave
mov
sub
xor
das
loop
sbb
stos
movs
pushf
dec
arpl
aam
jno
sub
push
adc
hlt
(bad)
sbb
pop
rcr
jp
push
xor
mov
and
pop
ja
bound
mov
pop
rcl
mov
push
sbb
add
div
in
push
cmp
and
ret
scas
(bad)
adc
lock
dec
fld
push
mov
aaa
push
jae
into
mov
dec
adc
adc
mov
fdiv
(bad)
pushf
nop
or
adc
jbe
and
push
jp
pop
jmp
xchg
fwait
ins
cli
lahf
mov
and
repz
jno
pop
push
fdivrp
push
into
adc
clc
inc
shrd
stos
leave
cmp
nop
mov
rol
pop
push
outs
push
stos
test
cs
ss
cdq
dec
or
aad
jns
pusha
imul
pop
shl
std
and
push
ret
scas
ret
cwde
or
or
pop
scas
push
or
rcl
sbb
xor
dec
xor
and
mov
xor
test
mov
cmp
xor
js
retf
sub
pushf
shr
mul
addr16
add
movs
call
in
cmp
call
inc
xor
xor
sti
iret
inc
dec
data16
jg
push
inc
jae
arpl
and
jnp
jo
femms
add
ja
cdq
xor
add
frstor
jmp
jle
add
pop
dec
inc
loop
sub
test
daa
mov
pop
mov
push
mov
fsub
pop
loop
gs
shl
hlt
sbb
xchg
pop
sub
cmp
mov
faddp
mov
dec
vcvttss2si
ins
sub
push
call
xchg
add
leave
imul
call
out
or
cmp
cdq
mov
jbe
cmp
fucomi
lahf
add
nop
and
inc
dec
sub
test
popf
mov
dec
shl
fprem1
cmp
pop
dec
enter
ret
call
out
xchg
jno
xchg
jmp
pop
push
repz
xor
aam
lock
mul
sbb
lods
mov
jg
add
push
xor
pop
dec
cmps
xor
sub
(bad)
sar
loope
lds
inc
cmps
shr
mov
cld
jnp
(bad)
jmp
dec
xchg
test
push
idiv
dec
mov
sub
xor
fst
inc
rcl
dec
arpl
aas
arpl
stos
xchg
mov
ins
push
into
cmp
xchg
mov
mov
mov
inc
cwde
mov
mov
sbb
enter
push
adc
test
jbe
sbb
pop
jae
das
mov
arpl
pop
add
(bad)
pop
push
retw
repnz
pop
retf
pop
sub
dec
movs
add
sub
retf
call
test
sub
jmp
addr16
sbb
and
jne
pop
xor
inc
dec
rep
inc
inc
aas
push
xchg
in
pop
test
out
dec
ret
sbb
lods
add
div
icebp
fisttp
dec
arpl
jge
mov
inc
and
push
jmp
push
mov
aas
fidivr
sbb
xor
xchg
pop
sbb
jb
pop
pop
stc
(bad)
loopne
(bad)
call
mov
push
sahf
xchg
ret
int
icebp
mov
sub
xor
push
jp
shr
inc
add
and
shl
pop
out
xor
mov
sahf
and
out
mov
(bad)
push
movs
mov
cs
inc
rcl
movs
shl
retf
sbb
pop
pop
stc
cmp
ret
push
inc
mov
mov
icebp
mov
aaa
pop
ficomp
lods
xor
sub
stc
mov
and
jno
fwait
das
dec
jbe
inc
jae
sbb
push
pop
(bad)
cmps
retf
jp
add
sbb
sub
ds
mov
in
sub
dec
sbb
mov
enter
inc
dec
cmp
xchg
cli
adc
mov
in
push
outs
jge
and
sahf
lock
imul
jl
jmp
fwait
lods
sahf
xchg
xor
mov
shl
mov
cmps
xor
cmp
shl
push
mov
repnz
clc
mov
fimul
clc
leave
fild
mov
jno
pusha
ror
pop
(bad)
push
or
cmc
sbb
int3
aad
pop
mov
cmc
xor
adc
lahf
in
and
mov
or
inc
ds
loope
js
mov
lods
cmps
shl
pop
lods
int3
jo
jne
xor
cmovs
ss
xlat
std
sub
cmps
sbb
pushf
or
sbb
arpl
cmp
sub
jp
push
aad
add
fadd
lods
lahf
fs
inc
push
or
mov
sub
(bad)
lock
dec
fsubr
stos
pop
icebp
xchg
dec
pop
dec
test
mov
nop
das
xchg
cmp
adc
cli
cmp
jmp
pop
mov
xor
xor
cwde
cmp
cs
addr16
ins
movs
mov
clc
lods
push
leave
mov
ss
cli
jl
ins
das
in
(bad)
shr
retf
icebp
xchg
lock
into
mov
mov
xchg
cli
stos
xchg
pop
call
int3
addr16
retf
mov
mov
xchg
mov
jecxz
xchg
mov
add
adc
pusha
adc
mov
xchg
sub
sbb
(bad)
(bad)
pop
scas
sbb
pop
enter
inc
pop
cmps
(bad)
pop
out
and
push
mov
inc
sbb
sub
push
test
lds
into
sbb
push
mov
mov
aad
jge
mov
inc
mov
dec
(bad)
push
cli
xlat
dec
xor
repz
add
xor
add
mov
push
xchg
icebp
push
pop
xchg
dec
into
fisttp
jecxz
cdq
ins
cli
(bad)
addr16
or
gs
les
inc
sar
xor
imul
lods
shl
cs
popa
jg
xor
out
or
fnstenv
fwait
shl
adc
fwait
add
mov
dec
add
sti
cld
dec
mov
scas
bound
pop
adc
(bad)
out
out
ror
and
inc
mov
movs
mov
xlat
dec
loope
cmp
dec
push
and
push
xchg
sub
test
movs
mov
inc
sahf
mov
ins
jmp
ins
adc
js
pop
ficomp
repnz
or
call
jb
dec
shl
cmp
retf
add
pop
int3
leave
cld
addr16
mov
cli
dec
movs
inc
scas
or
not
leave
jle
les
scas
stos
dec
push
cmps
or
arpl
adc
sbb
mov
and
into
dec
inc
(bad)
scas
mov
ds
xor
sbb
sahf
pop
imul
mov
addr16
mov
adc
ss
out
movs
xlat
xor
inc
lock
test
adc
jno
in
fild
icebp
mov
shl
pop
inc
sti
cmps
pusha
jmp
add
movs
and
xchg
cli
cwde
jle
mov
ins
lea
push
pop
mov
mov
ds
push
or
jmp
jmp
xchg
cmp
add
jo
cli
jno
inc
push
imul
or
loopne
mov
mov
aas
xor
fcomp
mov
sub
xchg
arpl
or
adc
cmps
mov
pop
fwait
jne
xchg
imul
shr
inc
jl
mov
add
dec
inc
test
mov
fwait
inc
(bad)
mov
test
mov
adc
fcomip
cs
lods
mov
ret
sbb
push
xchg
arpl
push
daa
clc
mov
xor
int
daa
mov
enter
pop
or
popa
jp
dec
mov
or
inc
add
stos
std
cmp
jge
les
mov
push
xlat
pop
leave
pop
shr
(bad)
jae
mov
int3
test
or
stos
movs
not
push
or
fwait
adc
jmp
imul
in
pop
out
movaps
adc
jmp
mov
fsub
jmp
xchg
push
mov
xor
gs
fmul
dec
and
push
test
sahf
movs
mov
mov
ffree
sbb
or
or
jne
hlt
addr16
sub
sahf
dec
popf
cmp
push
cmps
leave
mov
aam
das
(bad)
cmp
mov
sub
fidivr
lods
jno
jae
mov
mov
lea
cmps
stos
xor
sub
cmps
or
ins
popa
iret
mov
jae
or
push
or
jp
fadd
leave
adc
xchg
push
mov
pop
icebp
enter
outs
mov
sbb
bound
xchg
loop
mov
jmp
jno
sbb
outs
es
sub
jp
push
out
dec
mov
xor
xor
xchg
inc
icebp
xchg
mov
aad
push
shl
sbb
add
dec
and
cmps
out
outs
adc
inc
xor
(bad)
lods
add
aas
mov
loope
cmp
loopne
mov
jmp
jb
dec
or
out
test
addr16
rcr
out
call
out
frstor
push
test
cmc
xor
xchg
nop
xor
push
push
dec
fbld
jge
(bad)
pushf
fidiv
sub
xchg
(bad)
pop
fbld
aam
(bad)
mov
push
fwait
dec
fld
xor
repz
mov
std
dec
adc
popf
pop
jno
repz
bound
mov
rol
ret
rcl
(bad)
cwde
xchg
cmp
popa
add
xor
sub
inc
xor
dec
mov
mov
sub
pop
jmp
adc
add
sar
test
sbb
aam
add
es
sbb
data16
test
and
fidiv
inc
dec
lods
je
test
xor
push
ins
inc
mov
enter
mov
mov
lds
fst
jp
cmp
jmp
push
shl
ret
mov
out
sub
add
cwde
adc
movs
lods
jns
and
inc
cmp
xlat
mov
or
adc
add
int3
enter
jbe
xchg
ja
inc
mov
(bad)
rol
cld
ret
(bad)
push
imul
sub
daa
mov
int
retf
aas
and
jg
out
mov
adc
jnp
or
mov
and
mov
adc
fdivrp
mov
imul
pop
push
pop
fs
out
xor
sub
data16
cmp
dec
pop
or
xchg
enter
jo
inc
fdivp
dec
mov
sbb
mov
lods
sub
sbb
idiv
std
pop
add
fadd
mov
popf
leave
cmp
fbld
xchg
mov
xchg
inc
rcl
cmps
mov
add
out
in
sahf
int3
aam
mov
pop
dec
mov
jmp
mov
idiv
cmp
jae
xor
sbb
(bad)
push
xchg
jmp
clc
mov
lock
jmp
mov
cmp
into
out
adc
popa
mov
add
dec
div
mov
xchg
sbb
mov
mov
xchg
push
jg
add
repnz
xchg
(bad)
popf
enter
dec
fisub
pop
ret
xchg
(bad)
js
nop
not
mov
stos
adc
add
dec
(bad)
pop
xor
retf
sub
jecxz
(bad)
jl
addr16
aaa
push
fimul
pusha
sbb
cmp
aam
jecxz
dec
dec
pop
arpl
jle
repnz
lock
add
inc
and
add
inc
fwait
and
adc
cmp
and
cmp
clc
dec
pop
sbb
cmps
jne
ins
and
mov
xor
jmp
mov
out
hlt
jnp
gs
sub
mov
inc
inc
push
pop
bnd
jg
mov
enter
lea
idiv
jecxz
cmp
pushf
mov
xchg
inc
jnp
clc
dec
scas
dec
dec
into
sbb
push
pusha
cmp
das
dec
jae
mov
add
cmc
(bad)
sbb
xor
int
xchg
inc
out
shl
rcr
pusha
dec
sub
nop
and
xor
addr16
xchg
jp
adc
xlat
cdq
or
jb
pop
movs
dec
sbb
bound
out
mov
dec
jne
int
xor
in
or
cmp
repnz
cli
xor
pop
jne
dec
aas
lods
dec
shl
iret
jo
xchg
fstp
ret
sub
fidiv
pop
inc
xchg
retf
jne
pop
adc
pop
data16
xchg
dec
mov
pop
ins
push
std
jno
jmp
mov
ret
cwde
addr16
out
mov
arpl
adc
fmul
xchg
rcl
cmp
push
clc
cs
pop
jle
retf
lods
xor
or
out
daa
mov
sahf
loopne
loope
cdq
arpl
lods
sar
cmp
push
adc
int
inc
repnz
jnp
cmp
or
add
psubd
stos
xor
or
sahf
jle
xchg
in
jp
or
pop
xchg
loopne
adc
retf
and
dec
ret
scas
xor
mov
jno
out
fcmovbe
outs
in
jmp
pop
clc
adc
dec
mov
mov
rcl
test
repz
mov
add
es
add
in
add
rcr
jb
jo
into
aam
and
mov
popf
pop
push
push
dec
dec
mov
arpl
jle
popa
mov
stos
add
stos
adc
mov
xor
add
xor
in
mov
sahf
imul
xchg
mov
mov
(bad)
les
dec
add
cs
xor
bound
jno
shl
inc
adc
dec
jb
sub
jl
dec
push
stos
push
dec
adc
push
in
mov
ret
push
out
pusha
gs
dec
jmp
push
repz
lea
imul
sub
std
icebp
call
(bad)
jns
ret
and
cld
cmp
popa
sahf
adc
call
pop
sbb
imul
js
xlat
xor
into
dec
pop
das
pop
in
pop
je
imul
jne
cmp
xchg
inc
pop
xchg
xor
shl
add
or
push
cdq
(bad)
or
imul
inc
pop
ins
into
xor
or
push
adc
push
imul
cmps
fs
add
in
fiadd
sbb
ins
jbe
mov
mov
fcom
out
cmp
loop
mov
mov
adc
and
dec
add
xor
lods
popa
int
lea
sub
imul
lds
adc
xchg
test
das
push
mov
test
adc
add
mov
push
mov
test
fsub
mov
inc
daa
mov
ins
mov
inc
icebp
mov
and
sub
loopne
mov
imul
int
adc
mov
test
iret
push
dec
jae
sbb
dec
xor
ret
mov
ins
(bad)
cmps
sub
and
jg
cmp
hlt
or
mov
push
adc
int3
ret
outs
jae
pop
jb
add
xchg
mov
xor
mov
bound
mov
dec
cli
ins
mov
cmp
(bad)
sub
cmp
xor
push
pop
test
rcl
and
jbe
pop
lods
jnp
int3
and
into
shl
out
iret
(bad)
shr
pop
cmp
push
pop
ret
xchg
push
xchg
call
daa
mul
mov
aam
sub
push
fisttp
repz
shl
pushf
sub
ins
pop
push
out
cmps
xchg
or
test
adc
jnp
xor
pop
add
mov
scas
fild
addr16
ins
or
adc
jle
inc
mov
repnz
repz
mov
movs
jnp
dec
and
mov
xor
js
ja
sbb
cmps
jge
add
sbb
jbe
outs
cdq
sub
aam
pop
or
jecxz
sbb
fs
in
js
iret
xchg
inc
(bad)
mov
xchg
mov
xor
mov
xchg
push
fadd
and
out
stos
or
es
inc
sub
and
adc
lahf
sti
sub
sbb
imul
sar
mov
dec
jge
xor
and
popf
aas
jnp
inc
arpl
dec
or
(bad)
hlt
cmc
iret
jle
stos
or
stos
lea
out
push
pop
movs
mov
sar
imul
sub
mov
xchg
push
adc
adc
mov
aas
sub
std
repnz
adc
adc
push
mov
mov
fstp
sub
push
nop
ja
and
shl
mov
add
icebp
and
mov
adc
dec
mov
dec
iret
mov
xchg
mov
or
mov
retf
push
adc
test
loopne
mov
fisub
mov
cdq
lods
or
stos
shl
test
pop
lds
mov
scas
data16
gs
rcr
adc
pop
das
inc
xlat
out
cmp
shl
aam
jno
jl
pop
adc
(bad)
stc
sbb
(bad)
jnp
and
aad
sbb
fst
pop
pop
outs
cmp
inc
push
add
adc
cmp
es
push
(bad)
xor
int
fsub
lods
sbb
mov
mov
mov
pop
mov
enter
ja
pop
and
dec
inc
ror
mov
sub
push
rcl
mov
ja
push
lahf
mov
sbb
das
inc
retf
cmp
cmp
in
int
gs
sub
and
cmp
pop
cmps
dec
mov
je
dec
mov
mov
cld
ds
test
lods
add
inc
fidiv
xor
addr16
int3
dec
ret
and
(bad)
out
ins
rcl
mov
xor
pop
cmps
cmps
inc
fstp
pop
in
outs
lock
fld
add
inc
add
pop
lods
inc
cwde
xchg
enter
push
adc
dec
mov
sbb
mov
xchg
xchg
sbb
mov
dec
jg
adc
adc
das
loope
add
jle
pop
mov
iret
sub
mov
mov
mov
xchg
jp
ffreep
rol
in
pop
mov
rcl
stc
and
out
mov
cmp
leave
in
sar
push
dec
jbe
add
or
sbb
inc
push
loop
sbb
aam
cmp
enter
aaa
ret
add
cs
mov
cs
nop
mov
jns
sar
aad
mov
sub
push
mov
mov
repnz
push
push
outs
bound
sub
pop
mov
mov
arpl
call
fidivr
jae
adc
outs
xlat
retf
retf
shl
lahf
bound
add
jp
jl
neg
jbe
xor
jle
outs
not
popf
sbb
pusha
lahf
outs
dec
sbb
mov
lock
xchg
das
arpl
cmps
cwde
adc
in
dec
loop
jbe
test
sub
and
add
pop
xchg
imul
inc
jnp
call
retf
and
pop
sbb
pop
mov
or
mov
pop
mov
outs
xchg
xchg
add
adc
lahf
es
cmp
call
jae
mov
(bad)
fadd
ss
mov
and
out
cmp
add
setp
inc
jae
pop
xor
xchg
sub
ins
sbb
xor
cdq
in
push
xchg
mov
mov
into
mov
addr16
test
xor
mov
pushf
aaa
data16
stos
and
jno
xor
iret
pop
bound
js
mov
xchg
inc
mov
jmp
out
test
data16
jmp
adc
pop
dec
ss
pop
pusha
fcmovbe
bound
inc
popa
and
mov
jecxz
leave
ja
arpl
ror
or
jecxz
ins
test
pop
jae
in
push
imul
and
fstp
xchg
aad
xor
daa
inc
lahf
jecxz
pop
push
fbld
(bad)
leave
sbb
mov
fsubr
ret
imul
fdivr
pop
rcl
jnp
cmp
jle
repz
push
dec
mov
sti
rcr
lods
jo
xor
push
das
stc
fs
jmp
sub
out
adc
hlt
out
mov
and
shr
pop
data16
jo
sub
les
div
xor
fistp
ins
push
push
int
or
xor
jmp
mov
movs
inc
jnp
(bad)
sub
je
retf
(bad)
fist
pop
sub
lods
pop
xlat
out
lods
cmp
mov
cmp
mov
test
dec
jae
call
cwde
dec
pop
in
mov
enter
(bad)
or
std
sub
das
mov
lock
sahf
xchg
inc
mov
add
cmp
fld
dec
out
and
fdivr
ins
movs
fsubr
das
jg
dec
push
iret
sbb
call
push
pop
jnp
popf
test
xor
mov
iret
scas
sub
mov
test
inc
arpl
test
pop
adc
fwait
push
test
ret
mov
pop
data16
js
loopne
adc
adc
xor
fadd
inc
xor
pop
cld
mov
cmp
aas
inc
jae
adc
cmps
shl
stos
cmps
es
sbb
loop
in
xchg
mov
jne
cli
sbb
cld
popf
sub
stc
test
mov
push
loopne
(bad)
xchg
imul
jmp
xor
je
sti
push
inc
adc
pop
test
inc
sbb
int
sar
scas
push
xchg
sti
scas
dec
mov
mov
gs
call
icebp
lods
inc
jmp
into
xor
les
mov
repz
and
inc
cmps
cmp
and
(bad)
xchg
fs
and
or
xor
dec
xor
dec
adc
xchg
pop
or
div
push
adc
or
into
arpl
outs
and
adc
mov
inc
xor
dec
pop
addr16
inc
mov
pushf
jl
xor
jno
xor
xchg
pop
push
jae
mov
or
dec
aas
mov
dec
arpl
icebp
jne
sbb
xor
sub
pop
push
js
push
xabort
mov
cmps
push
push
jge
daa
dec
add
or
mov
daa
aaa
inc
or
pushf
inc
jle
retf
xchg
mov
mov
iret
adc
push
and
and
addr16
or
(bad)
into
mov
repnz
test
loop
fiadd
jl
enter
pop
push
test
loop
cmp
repz
add
clc
sub
mov
es
call
or
dec
repnz
mov
stc
repz
ds
adc
dec
xor
outs
sub
ror
xor
(bad)
mov
fxch
jmp
scas
xor
test
loopne
inc
cmp
sbb
imul
xor
or
jbe
hlt
fs
inc
imul
xor
sahf
or
cmp
sub
add
add
shl
aaa
int3
scas
push
imul
shl
adc
test
xor
cli
inc
mov
mov
imul
imul
xchg
adc
out
push
push
fst
cmp
popa
pop
mov
or
and
mov
add
fidivr
enter
rcl
mov
cmps
pusha
jns
xlat
dec
test
mov
cdq
and
outs
cmp
jmp
lahf
das
xor
pusha
cmps
or
cs
call
cmp
cdq
ds
push
mov
jmp
dec
iret
fld
adc
shl
inc
jmp
in
int3
xchg
lods
aam
repnz
in
mov
imul
cmp
cmps
xchg
jl
or
and
stos
mov
pushf
retf
outs
shl
in
inc
or
xchg
inc
or
and
movs
lods
lea
je
sub
mov
mov
jae
or
jnp
ins
aas
cmp
xchg
enter
data16
pop
sbb
mov
cmp
and
adc
int3
inc
jo
pop
jp
ds
into
mov
test
xchg
sbb
jnp
loopne
stos
call
loop
test
jns
and
mov
pop
or
hlt
fwait
pushf
or
mov
mov
sbb
repnz
cli
jmp
ds
jbe
mov
jg
xor
add
outs
add
pop
mov
sub
inc
sub
jp
jne
xchg
pop
icebp
mov
jmp
mov
add
gs
outs
xchg
outs
sbb
mov
inc
fstp
test
adc
dec
push
jp
sbb
mov
jo
gs
xchg
cs
mov
out
add
enter
xor
stos
xchg
les
mov
cmp
pop
pushf
pop
lds
jmp
in
dec
jl
push
pushf
push
jb
cmps
inc
mov
mov
pop
out
daa
call
add
jnp
inc
stc
mov
jbe
dec
pop
ror
icebp
jb
pop
add
mov
stc
lods
clc
push
ins
pop
or
or
mov
clc
or
jmp
and
mov
xchg
pop
adc
dec
aaa
ds
sbb
jl
pop
jns
rcl
push
mov
pop
adc
ret
sbb
into
cdq
cmps
ja
test
mov
std
sbb
push
add
jae
repz
lds
fisubr
adc
movs
mov
and
outs
or
jle
les
sub
xor
sbb
mov
test
shl
xchg
(bad)
aad
and
ins
scas
in
jge
(bad)
mov
mov
fmul
inc
loop
pop
fistp
add
imul
rol
(bad)
aam
pop
stos
push
sbb
jno
daa
push
aam
push
mov
xchg
push
pop
mov
cmps
call
mov
loop
add
and
jl
pop
repz
sub
enter
mov
xor
das
mov
push
dec
sti
sub
fwait
or
call
sub
fs
push
push
cld
push
add
mov
pop
cmps
or
(bad)
fldenv
inc
xor
cdq
sub
repnz
(bad)
mov
test
fist
xchg
jae
or
or
xor
test
jno
cmp
nop
stos
lock
and
movs
jmp
add
cmps
adc
jbe
and
jle
mov
fiadd
cmc
lahf
(bad)
out
js
or
pop
ret
mov
pop
inc
sbb
cmp
adc
std
lods
jnp
add
neg
mov
fstp
cld
jno
and
sete
aad
in
cdq
xlat
dec
jecxz
ja
ret
scas
xchg
movs
xchg
dec
cwde
push
dec
sub
jne
push
lock
js
mov
in
add
push
fidiv
scas
pop
lock
neg
std
pop
mov
mov
push
cmps
in
sbb
mov
cmp
(bad)
mov
pop
fild
cmp
mov
dec
mov
test
mov
sub
mov
mov
es
pusha
fwait
jecxz
hlt
dec
mov
pop
in
lods
pop
je
jbe
push
(bad)
xchg
and
fiadd
aaa
jecxz
test
cmps
jle
dec
jmp
lahf
mov
aas
push
inc
outs
add
inc
xor
test
sbb
push
mov
lods
inc
ret
mov
jmp
aas
stos
imul
fld
sbb
mov
jne
(bad)
xchg
(bad)
pop
mov
out
loop
pop
or
outs
ret
jge
retf
(bad)
mov
push
clc
rcr
dec
retf
mov
leave
cmp
icebp
sub
inc
jae
test
pop
es
pop
jmp
(bad)
loopne
jle
scas
repz
test
cli
pop
and
cmp
adc
mov
(bad)
sar
cwde
add
adc
adc
mov
lods
mov
sahf
or
xor
pop
adc
jmp
mov
ins
mov
push
mov
inc
and
(bad)
jg
retf
or
dec
or
out
fs
loopne
test
loope
ss
sbb
loope
xchg
xchg
xchg
jl
add
stos
mov
loope
aas
jmp
cmp
xor
cmps
aas
push
or
inc
mov
jo
dec
dec
int
clc
shr
jne
cmp
jge
cmp
aas
cmp
jne
adc
rcr
popf
pop
fisub
int3
or
mov
pop
mov
mov
lods
xor
inc
into
and
pop
nop
jne
daa
test
mov
aad
pushf
fsub
or
stos
(bad)
jne
pushf
dec
les
sahf
or
push
add
gs
inc
adc
stos
ret
push
dec
es
mov
jae
jno
jo
shr
jmp
(bad)
sbb
adc
cmps
bound
cli
mov
mov
xchg
into
xor
lahf
ret
lods
xchg
cmp
(bad)
sbb
aam
div
jg
not
popa
cdq
cmp
int
and
adc
in
sbb
test
xor
xor
cmp
pop
xchg
sub
xor
psllw
pop
xchg
add
fisubr
push
inc
pop
retf
mov
sbb
jl
fdiv
sahf
dec
inc
or
scas
dec
in
cmp
jb
mov
push
lods
lds
adc
(bad)
neg
jo
pop
sub
inc
jbe
cmp
xor
mov
lahf
pop
inc
mov
jl
(bad)
pop
rcr
in
(bad)
fcomp
dec
pop
adc
call
lea
scas
xchg
inc
cmp
loopne
loopne
movs
ins
push
or
outs
dec
jmp
xlat
leave
in
mov
sbb
call
outs
push
or
mov
ja
jns
cli
mov
cmp
cwde
mov
inc
imul
das
loop
jge
xchg
pop
pop
cmp
or
inc
pop
retf
div
das
and
fs
sbb
std
js
jb
or
mov
pop
xchg
mov
xor
outs
and
mov
ret
mov
push
movs
test
push
stc
sub
into
bound
and
les
adc
mov
pop
adc
les
addr16
add
xchg
ja
xchg
(bad)
nop
xchg
and
cmc
leave
mov
cmps
xor
xor
lds
mov
je
and
call
retf
ins
or
stos
sahf
mov
mov
push
je
jns
data16
lds
dec
sbb
fistp
cmc
loope
dec
aam
rcl
mov
push
add
xchg
xor
sahf
lods
mov
daa
pushf
fs
adc
xor
repz
add
iret
and
fldcw
mov
inc
aas
test
cmps
push
lahf
test
xchg
jns
dec
std
leave
leave
inc
pop
repnz
popf
and
(bad)
ficom
icebp
xchg
mov
or
and
dec
les
(bad)
cwde
dec
cdq
call
fistp
dec
adc
adc
cmp
dec
jge
xchg
loop
dec
fnstsw
movs
push
(bad)
jmp
scas
cmp
movs
je
push
cli
jo
and
call
cmps
ins
dec
std
add
mov
pop
hlt
dec
inc
pop
aad
xor
jp
jl
hlt
scas
and
daa
ins
xchg
push
pop
cli
or
jb
jo
jne
sar
iret
(bad)
push
dec
cmp
std
cdq
mov
retf
int3
pop
fsubr
mov
and
push
push
xchg
ins
js
or
stos
ffree
popf
mov
sub
call
sbb
mov
adc
jmp
outs
xchg
movs
(bad)
out
push
adc
fs
cmp
int3
outs
and
lds
enter
fwait
pop
or
lods
cmp
sbb
bound
ja
outs
(bad)
sbb
or
add
jl
fs
push
sbb
mov
btr
stos
xor
sbb
push
add
test
add
(bad)
pop
sub
jb
scas
fdivr
mov
mov
and
and
adc
jmp
into
int3
mov
and
sub
ss
jnp
into
call
pop
and
push
jg
xor
pop
mov
adc
loop
mov
xchg
std
loop
inc
ja
outs
movs
idiv
push
ror
int3
and
pop
add
lods
jecxz
mov
mov
xchg
sub
les
(bad)
jmp
add
cmp
pop
mov
ret
xchg
scas
sbb
mov
push
inc
jbe
retf
pop
pop
nop
idiv
inc
dec
ror
push
and
push
shl
inc
sub
ror
pop
sti
mov
jo
jle
ja
lods
sub
ins
pop
cmp
mov
mov
mov
dec
cmps
in
clc
scas
pop
sub
faddp
adc
inc
add
test
xlat
idiv
dec
outs
outs
add
int3
std
in
or
dec
cmp
pop
jbe
cmps
cmc
mov
mov
adc
cli
scas
push
and
fs
jb
stc
aas
pop
or
push
sbb
sub
mov
mov
add
in
rol
cmp
fisttp
dec
fwait
loop
xchg
xor
xor
jecxz
inc
movs
dec
rcr
lahf
cdq
adc
mov
daa
clc
es
gs
gs
jns
jo
push
sub
mov
repz
outs
ds
hlt
ficomp
je
push
jmp
add
dec
fadd
arpl
dec
int3
dec
ja
movs
mov
lods
or
sub
loopne
and
adc
xor
cmp
pop
mov
jg
push
in
repz
fild
(bad)
clc
stc
adc
jns
out
push
or
lea
fiadd
push
pop
mov
and
inc
hlt
xchg
sbb
jmp
inc
sbb
xor
dec
out
add
aad
dec
iret
cmp
jbe
sbb
or
dec
retf
ret
rcr
xchg
or
add
test
mov
iret
cmp
fidiv
out
shr
inc
shl
xchg
cdq
jbe
mov
add
sahf
mov
adc
add
or
sbb
push
mov
fs
int
inc
(bad)
jg
add
cmp
pop
(bad)
add
pusha
sub
jmp
jbe
xor
inc
scas
loopne
jl
fwait
and
call
mov
mov
sbb
cmp
or
adc
hlt
lea
sbb
cmps
mov
bnd
add
cmp
inc
cmps
test
xor
shr
mov
mov
into
sti
push
jge
cmps
jae
popa
dec
stc
and
lahf
lods
arpl
bound
mov
xor
ret
in
bound
xchg
sub
leave
inc
aad
fwait
mov
add
sbb
popf
xchg
cmp
pop
pop
repnz
adc
push
lock
scas
mov
bound
dec
sub
sar
pop
lods
mov
cmp
bound
shl
and
div
es
fucomi
mov
sub
jecxz
mul
rcr
sub
(bad)
dec
cs
jno
or
arpl
push
mov
pushf
movs
lods
mov
jp
mov
int
jecxz
and
mov
add
add
add
push
mov
pop
cmp
or
or
mov
(bad)
jns
sbb
mov
push
dec
or
add
pop
sbb
sub
loop
pop
dec
xchg
push
test
iret
imul
dec
je
(bad)
popa
or
rcr
or
adc
sbb
mov
ret
pop
sbb
(bad)
in
mov
cdq
push
and
sahf
pop
sub
adc
push
jb
push
push
(bad)
push
loopne
push
mov
jnp
sub
or
lods
pop
imul
fmul
sbb
shl
pop
inc
sbb
ds
jp
sub
adc
push
add
or
mov
cmp
imul
xchg
mov
sub
xor
fs
cwde
cmp
fcmovne
sbb
adc
mov
int3
xor
jl
std
sub
(bad)
push
(bad)
ret
add
mov
and
mov
imul
mov
push
rol
pusha
xchg
add
out
push
fidivr
adc
pop
js
push
(bad)
out
xor
iret
bound
sub
jge
adc
jmp
idiv
adc
loope
pop
or
mov
popa
inc
adc
sar
nop
or
mov
and
cmps
push
dec
cmps
mov
sub
bound
(bad)
mov
jg
pushf
and
push
jne
mov
(bad)
and
(bad)
sbb
lahf
cld
xchg
jmp
int
adc
gs
and
add
movs
inc
add
adc
sub
push
dec
lods
aam
nop
mov
rcr
inc
sbb
popa
pop
(bad)
shr
cmp
xchg
fist
in
ins
jecxz
cmp
sbb
les
les
xchg
and
or
xchg
je
jbe
add
retf
test
mov
jmp
or
or
les
pop
xlat
add
out
or
pop
xor
loop
lods
pushf
jge
shr
or
mov
push
xchg
mov
rol
xor
jae
jb
mov
cmp
sbb
stc
ror
lods
test
mov
movs
mov
sbb
je
in
sbb
pop
scas
xchg
pop
pusha
push
cmps
cmp
stc
adc
data16
add
call
mov
(bad)
popf
test
imul
mov
pop
lods
retf
and
inc
mov
rcr
push
mov
test
fs
and
jbe
xchg
jbe
jno
xor
aad
xchg
cmp
cmp
inc
mov
mov
push
ins
push
add
mov
std
sbb
test
movs
hlt
aaa
xchg
inc
xchg
adc
std
dec
out
int
ret
mov
inc
jmp
retf
ds
aad
imul
movs
(bad)
(bad)
mov
push
xchg
test
push
loopne
mov
arpl
jp
stos
sbb
add
sti
movs
cdq
and
icebp
jl
dec
mov
inc
enter
ins
icebp
sti
push
mov
loop
rcl
xlat
dec
(bad)
(bad)
push
fwait
cmp
add
movs
sti
pusha
das
jmp
xchg
cmp
cmp
push
cmps
pusha
cmp
cwde
push
test
fldenv
jl
mov
sar
sbb
outs
xchg
push
adc
mov
ficomp
stc
jmp
mov
ret
hlt
ret
or
bound
in
outs
in
cmps
test
jo
pop
sub
cld
or
adc
les
loopne
sbb
add
int3
adc
add
pop
(bad)
aam
outs
mov
test
inc
cdq
les
mov
pop
ss
adc
inc
add
jo
xor
(bad)
sbb
jns
sub
dec
add
xor
xchg
or
jl
mov
jne
clc
call
cwde
dec
lea
ins
in
sbb
jecxz
push
jl
and
call
jle
aad
in
movs
cwde
fisubr
adc
bound
sti
xor
adc
imul
adc
xchg
mov
or
call
in
in
shl
in
loop
pusha
jge
push
nop
jb
int3
jp
xor
sbb
pop
out
push
add
shr
shl
dec
adc
cs
les
(bad)
mov
aaa
mov
or
(bad)
call
jmp
test
popa
pusha
mov
pop
jo
lods
push
ins
inc
out
lods
out
jae
pop
daa
repnz
paddd
popf
in
xchg
pop
movs
(bad)
lahf
ror
loope
jb
fs
aam
xor
jl
clc
cmp
mov
push
mov
jmp
jg
sar
mov
xchg
push
sti
and
sahf
imul
popf
push
test
jmp
push
scas
adc
div
sbb
cdq
retf
in
jnp
cwde
push
lahf
xor
jmp
mov
adc
add
push
nop
aad
call
push
test
inc
push
dec
add
pushf
jnp
fdivr
dec
retf
(bad)
in
mov
sbb
cmp
xor
inc
adc
xchg
test
das
je
push
pop
dec
or
ror
or
cdq
pop
daa
je
push
xchg
sub
retf
xor
fcom
fmul
or
imul
xchg
sbb
out
xchg
xchg
jo
mov
data16
clc
ror
retf
iret
jle
jo
stos
cmps
ficom
movs
aaa
dec
loope
es
mov
lods
fwait
cli
outs
pop
frstor
adc
repnz
cwde
ins
call
arpl
jnp
out
out
pop
mov
push
jecxz
jne
bound
lds
pop
push
and
inc
xor
cli
call
mul
mov
push
inc
pushf
jge
fisub
xchg
cdq
ret
int
sub
ja
ror
in
mov
pop
ror
mov
pop
addr16
push
xor
in
mov
jmp
lock
push
mov
push
je
cmp
cmc
stos
push
(bad)
fucomp
aas
fcom
push
ins
mov
mov
test
and
shl
popf
rol
or
loopne
pop
jecxz
shl
inc
test
jg
mov
add
sbb
int
inc
les
dec
sbb
std
jmp
dec
push
cmp
mov
cmp
adc
ret
aas
cmc
jnp
ffreep
pop
ins
cwde
jmp
aam
pop
xchg
sub
sub
sbb
ins
outs
push
pop
test
and
sub
mov
jbe
mov
push
iret
push
mov
stc
sbb
jne
or
fiadd
bound
loopne
das
mov
(bad)
and
sub
loopne
dec
ins
pop
pop
jno
mov
xor
push
inc
mov
xor
or
cmp
adc
push
cmp
inc
lods
adc
clc
jecxz
and
aaa
push
int
jae
mov
sub
sbb
add
dec
xchg
and
add
fwait
scas
dec
xchg
xor
inc
jno
shr
outs
xchg
adc
je
ret
inc
dec
sub
jl
cmp
adc
test
cmc
enter
mov
fld
imul
inc
movs
adc
cmp
push
jge
jb
ret
cli
iret
cs
sub
scas
add
jge
pop
(bad)
and
inc
daa
xor
rcr
mov
fisub
outs
shr
sbb
push
repnz
mov
cmp
pushf
movs
push
je
out
xchg
push
mov
pushf
push
sub
es
daa
dec
inc
xchg
cmp
adc
in
mov
jne
jnp
mov
out
lods
add
mov
sub
or
movs
sub
in
repz
cmp
(bad)
dec
ret
push
mov
dec
xlat
mov
jmp
push
mov
es
mov
mov
in
test
sbb
adc
xchg
test
add
retf
mov
mov
mov
cmp
add
int
pop
mov
dec
(bad)
ffreep
jp
in
popf
dec
dec
adc
out
mov
jp
xchg
xor
and
pop
cdq
jmp
popf
repz
int
ins
push
lea
push
xor
and
ins
mov
add
fucomip
sbb
xlat
add
sbb
sub
add
push
(bad)
sbb
inc
inc
es
or
xchg
fadd
dec
test
out
lea
fdivr
sbb
and
packuswb
ins
inc
xor
add
loopne
imul
shl
inc
inc
xchg
fldenv
cld
out
pop
add
push
leave
fcomp
inc
add
ja
je
jns
push
cmp
popa
or
or
xor
mov
jne
inc
jae
pusha
mov
xlat
pop
sub
jne
and
test
aam
loop
rcr
mov
mov
mov
sbb
inc
push
cmps
and
inc
and
push
push
sub
ret
sbb
and
test
xor
out
call
jae
jmp
sub
cdq
and
adc
xor
dec
inc
push
mov
bound
fcomp
sbb
jae
xchg
cli
(bad)
sub
sub
(bad)
ja
je
push
mov
loope
push
out
and
repz
int3
mov
jg
aam
imul
in
add
ds
jl
ret
adc
inc
sub
ret
(bad)
(bad)
adc
in
sub
popa
(bad)
sar
pop
sbb
pop
jbe
shr
outs
outs
add
ss
add
sti
std
inc
aas
repnz
arpl
pop
std
popa
shl
inc
stos
lods
push
out
mov
cmp
popf
add
adc
loop
mov
out
outs
enter
and
inc
and
in
sbb
mov
xor
or
repnz
or
push
pop
out
add
dec
(bad)
mov
arpl
enter
inc
mov
jl
ja
movaps
xor
sar
pop
mov
les
fdivp
pop
test
lahf
mov
add
mov
in
add
inc
in
les
xor
push
fwait
dec
bound
adc
pop
call
xchg
pop
jbe
jp
pop
jmp
out
mov
xlat
(bad)
and
push
data16
ds
jmp
or
jb
sbb
js
in
mov
retf
inc
sbb
pop
sbb
push
les
and
aaa
sbb
add
jle
xor
enter
mov
inc
ja
test
xchg
call
pop
cmp
or
inc
or
xchg
lea
cwde
jne
mov
sbb
call
xor
xor
or
pop
xchg
lea
push
outs
mov
mov
out
test
sub
sbb
out
xchg
add
inc
sar
sahf
adc
ins
jo
add
inc
outs
xchg
mov
ss
(bad)
push
mov
sbb
clc
scas
jne
stos
or
aas
mov
and
lea
sub
aad
xor
repz
mov
loopne
ss
not
in
or
or
int
fsub
xor
in
mov
lds
pop
sub
inc
jp
into
lock
mov
or
iret
fild
xchg
or
sbb
pop
xor
es
dec
adc
pop
inc
push
mov
adc
je
xor
mov
sub
test
iret
mov
inc
retf
scas
sbb
jo
adc
inc
jmp
adc
sub
fisttp
cmps
and
add
cmp
xor
mov
dec
mov
cmp
popa
pop
aaa
push
shl
nop
out
jne
inc
push
in
retf
sub
pusha
js
and
add
hlt
cdq
out
sbb
cmp
or
dec
mov
call
fs
or
call
push
lea
in
cmp
or
clc
mov
mov
sbb
jp
fcomp
adc
cmp
push
jno
into
jnp
bound
add
repnz
sbb
repz
and
mov
inc
cmp
sbb
sti
cmps
jmp
aaa
and
icebp
outs
fmul
mov
loope
mov
cmps
jae
or
and
xchg
xor
lods
fstp
xor
sar
shl
test
dec
gs
mov
cvtpi2ps
inc
sbb
xchg
test
or
sbb
xor
add
outs
sbb
pop
es
aas
lds
sbb
shr
outs
inc
rcl
dec
ror
sbb
mov
push
lds
outs
in
inc
adc
pop
xchg
or
ficom
stc
mov
jbe
and
test
jg
ds
(bad)
sub
xchg
ror
sar
ficomp
sti
cmc
cmp
outs
mov
jmp
push
ins
aas
ins
(bad)
int3
xchg
arpl
lahf
mov
(bad)
fs
jl
sbb
mov
sbb
dec
push
ins
xchg
jge
adc
cdq
not
jecxz
imul
data16
sub
test
(bad)
fwait
adc
das
inc
add
push
ja
lds
jmp
bound
lods
pop
xor
mov
mov
mov
movs
popf
dec
jp
stc
sub
jmp
push
jge
jae
xor
pop
pop
(bad)
pushf
ficom
sub
sti
add
mov
or
mov
pop
outs
dec
adc
aaa
or
add
aas
addr16
retf
shl
and
jne
leave
xor
push
sbb
loopne
inc
pop
xchg
xor
shl
mov
imul
int3
inc
loope
xbegin
mov
enter
mov
add
in
stos
jmp
sbb
inc
jle
(bad)
(bad)
mov
jo
sbb
xlat
ret
mov
or
icebp
shl
push
in
outs
xlat
(bad)
mov
jg
push
add
mov
pop
pop
(bad)
cmc
jae
xchg
inc
pop
mov
mov
ffree
sub
jo
xor
push
mov
dec
sbb
adc
sahf
cmp
arpl
xchg
dec
test
iret
inc
loop
xchg
jmp
push
inc
jbe
mov
and
bound
mov
pop
and
into
xor
sar
inc
or
dec
push
add
jo
mulps
cmc
pop
sti
pop
scas
loop
pop
sbb
adc
fisub
into
add
mov
cmp
xchg
mov
mov
sbb
pop
jns
cmp
sbb
and
jb
jae
dec
adc
sub
rcl
or
dec
jb
inc
in
inc
and
in
or
pop
xchg
cwde
std
mov
repz
and
dec
xchg
ins
(bad)
iret
xor
call
fcomp
mov
push
in
aas
cmp
xor
cli
rcl
lods
cmp
fadd
push
mov
hlt
fdivr
mov
xor
dec
adc
daa
xor
mov
pusha
and
popf
and
push
sbb
mov
adc
pop
xchg
sar
adc
dec
fnstsw
adc
mov
rcl
jl
dec
jle
mov
jle
add
and
ret
cmp
imul
imul
movs
ins
sbb
or
ins
push
xor
ret
cmc
daa
add
jmp
mov
shr
cmp
sbb
mov
retf
mov
push
in
cmp
mov
push
pop
rol
mov
push
mov
jmp
into
adc
inc
pusha
popa
add
push
icebp
ror
sbb
mov
pop
(bad)
mov
xor
fwait
jge
jp
(bad)
pop
and
mov
dec
sub
stc
fadd
push
push
icebp
lock
mov
pop
mov
scas
retf
std
jae
retf
pop
dec
pusha
push
or
cmp
add
pushf
lds
(bad)
or
imul
test
mov
in
push
lahf
xchg
(bad)
std
jbe
and
jno
pop
enter
mov
pop
push
daa
fbstp
dec
loope
dec
(bad)
cmps
and
mov
sbb
dec
retf
(bad)
movs
mov
mov
sub
ins
dec
in
sub
mov
cmp
fdiv
aas
int
cli
stos
int3
jecxz
and
dec
and
les
xor
pop
and
es
fimul
mov
or
adc
mov
mov
mov
arpl
xchg
pusha
sar
jg
xchg
hlt
inc
cmp
lods
sbb
lahf
sbb
push
push
cdq
jmp
leave
adc
in
mov
dec
sub
mov
xor
mov
pop
clc
movs
aaa
fisub
fcom
das
movs
popf
sub
addr16
out
sub
dec
pop
aaa
shr
pop
xlat
std
sub
sub
xor
xor
pusha
popf
pop
ds
aam
out
jno
scas
or
(bad)
mov
and
(bad)
scas
jle
adc
mov
push
jno
es
xor
scas
fdivr
inc
pop
dec
lea
mov
xchg
cmps
xor
int
(bad)
xchg
ss
adc
iret
(bad)
lahf
adc
push
xchg
push
pusha
pop
leave
loope
adc
cmp
xchg
cmp
pop
out
mov
outs
adc
scas
xlat
or
dec
cmp
jae
mov
rol
data16
into
pop
test
jns
mov
fcom
pop
(bad)
stos
cmp
and
fcmovb
pop
pusha
xchg
jp
lods
dec
or
add
daa
stos
mov
or
imul
inc
repz
sti
xor
stos
push
std
mov
mov
pop
sub
or
scas
mov
fcmovnbe
pop
mov
ss
push
sbb
shr
adc
mov
or
and
test
dec
test
cmp
jb
mov
cs
xor
mov
push
mov
jo
xchg
pop
pop
rcr
ja
ja
jg
ins
push
aaa
(bad)
push
(bad)
rcr
fdiv
mov
inc
jl
pop
sub
call
cld
mov
inc
cmp
outs
mov
dec
jle
fiadd
lock
and
xor
mov
xchg
add
mov
aas
std
mov
or
mov
mov
mov
arpl
mov
mov
sub
xchg
xchg
add
icebp
mov
mov
adc
pop
jbe
pop
inc
repz
xchg
mov
les
fs
push
popf
cmps
into
jae
jb
push
pushf
ficomp
outs
(bad)
icebp
push
mov
pop
push
xchg
in
mov
adc
pushf
je
adc
cmps
adc
xchg
pop
pop
cs
(bad)
cmp
daa
sbb
cmp
push
out
or
sub
add
sub
jns
rcl
fst
sbb
(bad)
xor
addr16
sub
add
mov
push
(bad)
imul
mov
test
mov
fcom
call
inc
add
(bad)
call
test
dec
and
aas
hlt
pop
add
pusha
call
push
in
xchg
nop
or
lds
aaa
jle
adc
test
push
pop
pop
xor
add
sbb
lahf
cmc
scas
imul
inc
dec
addr16
inc
add
inc
jbe
xacquire
addr16
adc
add
lods
fidiv
loope
hlt
mov
bound
scas
push
mov
arpl
jl
test
jecxz
sbb
xchg
cwde
push
pop
test
xchg
or
hlt
aam
mov
xor
add
call
dec
adc
(bad)
add
mov
push
push
dec
xchg
jge
cmp
mov
mov
mov
fistp
ret
xchg
sub
(bad)
sub
out
jns
push
or
or
and
mov
dec
sahf
sbb
fldcw
cmp
aam
jg
iret
(bad)
xchg
mov
ror
push
and
jmp
bound
clc
sbb
test
or
scas
addr16
jp
sub
rol
cmp
mov
sub
xor
das
popa
mov
and
and
(bad)
sbb
dec
out
fs
or
mov
dec
(bad)
loopne
push
mov
inc
xchg
lods
pop
mov
or
mov
jmp
scas
sub
mov
xchg
retf
inc
xor
lods
pop
shl
out
push
cmp
sbb
in
sbb
ret
icebp
out
dec
mov
stos
sub
dec
xor
xchg
in
subps
and
push
push
in
outs
popf
rcl
nop
scas
ror
ret
xchg
pop
ror
pusha
xchg
inc
sub
mov
movs
mov
ins
xor
mov
gs
popa
js
and
out
dec
das
or
mov
retf
arpl
jp
cmps
xchg
out
or
mov
sbb
mov
hlt
out
xchg
or
jnp
pop
bound
mov
pop
mov
pop
dec
lahf
pusha
xchg
loop
sbb
xlat
adc
xchg
aam
loop
out
in
mov
out
ja
jmp
add
and
jle
xchg
movs
mov
mov
in
sub
xchg
leave
jecxz
cmps
int
leave
jp
jbe
pop
pop
or
not
push
add
arpl
push
xor
lods
pop
sbb
xchg
xchg
pop
fmul
fidiv
xchg
adc
or
jmp
pop
cmps
mov
xor
ret
movs
test
test
push
xchg
fst
mov
mov
jmp
lods
ror
pop
test
sbb
lods
(bad)
out
fdiv
dec
imul
out
(bad)
scas
and
les
pop
mov
xchg
inc
nop
jae
lds
mov
jmp
dec
jne
je
addr16
fistp
jl
add
mov
add
sbb
xlat
call
pop
push
xlat
mov
stc
pop
jle
test
fisttp
inc
jno
dec
jns
fistp
mov
ret
pop
(bad)
ins
lds
adc
pop
pushf
imul
mov
leave
enter
inc
xor
sbb
(bad)
mov
inc
(bad)
mov
iret
nop
dec
and
and
add
mov
sbb
mov
dec
stos
sub
mov
idiv
jl
inc
or
sar
mov
add
movs
(bad)
dec
dec
cli
mov
or
and
add
sub
stos
call
mov
jle
push
adc
adc
ds
cwde
push
or
sbb
lods
or
push
sbb
jnp
mov
inc
push
(bad)
push
sbb
jge
in
adc
mov
fmul
jge
out
xor
add
jmp
push
cmps
xor
ss
daa
in
push
rol
bound
(bad)
fldcw
dec
aam
dec
int3
popf
ror
movs
loopne
add
nop
aas
cwde
test
sti
icebp
dec
inc
pop
jb
std
cmps
or
retf
and
cmps
pop
cmp
push
jb
aam
xchg
push
mov
push
in
leave
or
cmc
adc
inc
pusha
out
out
int
mov
mov
hlt
pop
aam
fist
xchg
or
dec
lock
push
jmp
xchg
scas
out
sbb
test
fdivr
jns
sti
lods
cmp
sub
imul
cmp
fist
je
arpl
inc
and
jp
mov
add
cmp
and
inc
mov
fmul
int
stos
inc
push
outs
outs
call
push
nop
push
scas
xor
or
mov
xchg
test
push
adc
sbb
sbb
xor
faddp
jecxz
mov
int3
sbb
hlt
xor
mov
cdq
push
push
int3
mov
out
or
jo
es
call
pop
fwait
scas
shl
mov
xchg
pop
cmps
(bad)
sahf
push
imul
sub
dec
pop
mov
ins
push
cmc
xchg
jg
inc
out
and
int
sub
xor
lods
jecxz
adc
imul
cmp
pusha
iret
adc
jmp
in
cdq
xchg
outs
xchg
and
mov
mov
fild
or
mov
repz
and
fs
cmp
sahf
and
mov
aaa
je
mov
fs
cld
cwde
push
cmps
fsub
call
inc
pop
aaa
mov
dec
lea
xchg
xchg
pushf
pminsw
xchg
mov
jns
outs
popa
inc
mov
ja
inc
jmp
inc
loopne
and
cld
stos
inc
cmps
fld
retf
pop
out
and
pop
dec
pop
cmps
std
push
xchg
push
adc
cmps
lahf
popf
lea
pop
xlat
rcr
cld
jns
adc
dec
xchg
inc
xor
ja
cmp
fist
test
stos
add
outs
cmp
dec
sub
inc
and
and
loope
jmp
pop
cli
aam
xchg
xchg
or
jp
(bad)
imul
fstp
jns
mov
push
(bad)
clc
mov
fstp
in
push
mov
dec
int3
test
push
jge
sub
call
mov
out
aad
push
jne
sub
mov
test
pop
in
push
out
jbe
push
jle
add
and
out
sbb
mov
inc
pushw
into
dec
and
scas
js
mov
mov
jo
push
push
and
mov
mov
sbb
and
call
adc
inc
fst
hlt
fldcw
mov
inc
sbb
ins
in
cld
dec
add
jbe
cmp
xchg
int
into
scas
xchg
rcr
gs
push
push
call
les
adc
fdiv
dec
dec
and
(bad)
inc
test
xchg
push
cwde
dec
jge
sub
or
and
pop
xchg
push
mov
mov
sbb
xchg
sub
movs
stos
xchg
xchg
dec
shl
sbb
mov
mov
sahf
ja
pop
inc
push
(bad)
aad
retf
ins
or
ins
in
jg
mov
in
clc
in
and
pop
add
jg
pop
movs
jg
fld
jae
retf
(bad)
cli
push
sti
lods
mov
pminub
ror
adc
lock
or
mov
aad
jp
out
repz
mov
andnps
push
mov
inc
sub
out
and
jo
mov
fwait
dec
xchg
enter
xor
addr16
cmp
cmp
out
push
mov
aaa
jns
pushf
push
jmp
cmps
inc
in
lock
add
out
xchg
std
pop
jne
or
add
loop
loopne
fs
jp
xchg
les
mov
mov
jmp
je
(bad)
(bad)
xchg
fs
loop
adc
push
adc
js
push
(bad)
fs
adc
inc
repz
xor
mov
pop
jge
dec
es
test
push
mov
test
inc
je
out
test
cwde
test
add
hlt
ins
js
rcl
out
mov
bound
ja
cmp
pop
aam
mov
(bad)
cwde
or
fdiv
adc
stos
lea
add
mov
lods
xlat
jl
int
in
cmp
mov
cmp
std
xlat
fcomp
aam
jns
pop
push
fsub
adc
out
sub
fcom
sub
sub
cmp
jb
(bad)
retf
out
push
fimul
jg
retf
out
or
test
dec
jl
sbb
sbb
or
imul
test
mov
mov
aad
popa
mov
iret
stos
js
das
ret
mov
rol
lods
mov
jnp
jnp
out
fsub
xor
or
adc
in
mov
cmp
xor
push
iret
xchg
push
xchg
push
cmp
xor
inc
xor
out
xchg
sar
mov
mov
inc
mov
add
sub
jbe
xor
movs
sub
pop
sub
sbb
add
or
cwde
(bad)
or
xlat
sub
stos
sub
add
dec
xor
not
(bad)
leave
pop
test
scas
mov
xchg
add
fdiv
test
add
cdq
clc
(bad)
inc
fdivr
jp
imul
xor
int3
ss
stc
test
lock
fcomp
push
cdq
daa
jmp
adc
fs
gs
stos
int3
popf
add
test
jnp
stos
inc
sub
dec
xchg
test
ss
sbb
sub
int3
pop
sbb
fsubr
aas
push
int3
or
mov
xchg
iret
rol
mov
or
sbb
mov
adc
adc
jl
mov
xchg
jns
add
xor
inc
clc
(bad)
movs
(bad)
(bad)
aas
cld
lock
shl
jb
add
dec
les
mov
pop
pop
adc
leave
inc
and
loope
jnp
add
xor
adc
lods
fsub
leave
pop
sub
and
mov
jle
retf
fstp
jmp
adc
jmp
aaa
mov
cmps
hlt
push
out
clc
xchg
fisttp
loopne
aam
shl
aas
sub
mov
lods
call
sar
push
(bad)
push
into
and
xor
mov
sbb
sahf
out
jmp
pop
sub
stos
adc
pusha
sbb
rcl
xchg
xlat
cmps
iret
(bad)
aam
inc
mov
clc
xchg
jmp
rcr
pop
fsubr
mov
ins
add
inc
mov
push
call
leave
lds
jl
out
mov
mov
jno
add
xor
aam
ja
stos
aaa
mov
push
sub
sti
inc
or
mov
es
jl
cmp
mov
or
adc
mov
mov
push
mov
fisub
ss
sbb
out
loopne
scas
lock
in
sti
(bad)
js
cmp
push
xlat
(bad)
retf
mov
xchg
scas
adc
sbb
xchg
(bad)
sub
gs
sub
pop
inc
mov
sub
pop
mov
add
push
gs
pop
sti
jmp
adc
sti
cdq
aad
mov
add
and
daa
push
clc
(bad)
xor
lods
xchg
aaa
inc
rcr
xchg
cmc
jbe
jmp
neg
jecxz
sub
stos
lods
out
xor
pop
(bad)
das
jae
rcl
int3
pop
inc
jle
dec
lock
fimul
(bad)
out
jns
pop
(bad)
(bad)
and
sub
mov
push
sbb
cmp
sub
cmp
mov
and
mov
mov
outs
jae
xchg
cli
lods
retf
mov
xchg
out
addr16
cmps
mov
and
cld
sbb
fcomp
scas
xchg
push
pop
repz
xchg
xor
clc
mov
and
cmps
jb
mov
lods
into
(bad)
cmp
sub
pushf
or
scas
jno
aad
add
dec
dec
das
icebp
retf
test
ins
stos
pop
popa
dec
push
push
jecxz
mov
push
ja
xchg
aam
add
fcmove
test
push
lahf
mov
shl
dec
pop
(bad)
push
fcom
test
mov
leave
dec
shl
jno
aam
fs
mov
pop
push
aaa
clc
fistp
cmp
jp
shl
es
mov
popa
or
mov
ja
pop
pushf
adc
shl
or
add
mov
push
je
out
inc
mov
xor
mov
leave
inc
and
in
punpckhbw
push
pusha
mov
aas
ss
(bad)
aam
jae
jmp
jae
or
jg
cmp
jp
xchg
sahf
xor
push
std
int
pop
and
mov
xor
outs
jmp
jo
ret
out
daa
push
cmps
add
and
call
or
ds
xchg
push
mov
push
sub
sbb
adc
loop
mov
sbb
pmullw
jmp
jbe
inc
mov
sbb
pop
div
jnp
xor
repnz
fsubr
(bad)
sbb
xchg
sbb
mov
mov
inc
push
daa
test
fs
js
pop
sub
xor
push
cmp
fcom
lds
cli
idiv
and
push
cmp
mov
fsubrp
push
push
mov
in
add
dec
adc
jge
repnz
test
arpl
xor
outs
mov
xor
jmp
jae
sahf
xchg
out
push
cmps
les
clc
sbb
mov
or
rol
mov
sub
jmp
call
aaa
in
mov
outs
sub
inc
pop
and
cmp
xchg
pop
adc
pop
add
leave
jmp
int3
and
rol
gs
sub
or
and
mov
jne
mov
inc
lods
pop
jb
rol
retf
cmc
and
pop
jae
push
cmp
xchg
sub
xor
mov
xor
push
div
(bad)
pop
retf
test
loopne
icebp
mov
push
sbb
and
ret
inc
xchg
push
ret
sbb
loop
jae
int
loop
cmp
jp
xor
dec
inc
aas
mov
test
lea
test
dec
pushf
aas
dec
push
mov
enter
xor
sti
addr16
pop
push
shl
lods
xchg
pushf
mov
xor
jmp
cdq
popf
out
mov
sub
inc
inc
add
fucomip
lea
xchg
mov
out
dec
add
pushf
jl
(bad)
aam
les
adc
xchg
add
fstp
and
jg
adc
lea
lods
das
lahf
icebp
pop
(bad)
mov
stc
jbe
cli
outs
sub
jno
push
retf
sbb
popa
dec
mov
nop
ja
fbld
sbb
cwde
fstp
and
add
pop
jmp
in
cmps
push
mov
xchg
aas
mov
adc
jno
jmp
rcr
add
add
aaa
dec
xor
std
shr
add
mov
les
cmc
aas
stc
fucomp
pop
cmp
out
imul
jl
fldcw
pop
hlt
inc
push
mov
push
stc
or
add
ins
mov
call
(bad)
sbb
clc
add
das
hlt
pop
sub
pop
rcl
inc
add
cmp
and
loopne
fwait
aas
mov
push
neg
lahf
pop
cmovge
push
push
das
mov
push
jmp
aad
scas
jle
not
inc
add
rcr
or
dec
bound
xor
jg
sbb
mov
repnz
mov
fdiv
ja
test
aas
adc
call
and
out
cdq
and
and
pop
inc
fld
add
pop
pop
enter
push
dec
push
pop
pop
out
ja
stos
or
xchg
dec
(bad)
pop
jns
in
xchg
scas
or
aad
loop
push
xor
rcl
fisubr
mov
aas
jb
xor
div
mov
pop
in
pushf
dec
sti
clc
mov
(bad)
fs
mov
mov
and
sti
push
mov
mov
imul
inc
in
(bad)
xchg
ds
push
mov
jns
add
(bad)
ds
cmc
dec
push
push
jb
mov
cli
add
mov
mov
mov
les
jge
gs
inc
adc
mov
out
add
popf
nop
loope
xchg
sbb
aam
mov
daa
ss
mov
shl
mov
inc
jno
ret
ror
mov
cwde
enter
or
push
jmp
je
dec
inc
cmp
repz
mov
inc
gs
push
mov
dec
cmc
and
pushf
and
cmp
mov
sbb
in
daa
test
push
pop
sub
push
rol
(bad)
fisubr
jb
enter
adc
cmps
add
jno
(bad)
cmp
mov
and
pop
ficomp
out
ret
jecxz
add
sub
popf
out
shl
out
add
inc
std
das
lods
push
xchg
cmp
push
retf
adc
xlat
sub
mov
cmps
pop
xchg
pop
ja
push
imul
cmc
push
lds
popf
xchg
jl
inc
mov
ss
(bad)
inc
fwait
and
fdiv
outs
fwait
xchg
cmp
and
add
fcmovnb
mov
outs
jne
loopne
jecxz
lods
mov
(bad)
xor
scas
jmp
mov
sbb
dec
ret
xchg
les
or
pop
call
imul
adc
rcl
pop
mov
mov
jno
xor
xor
fistp
fisubr
adc
(bad)
movs
jg
bound
xchg
mov
fild
scas
stc
sar
movs
inc
pavgb
pop
loope
jno
sbb
int
fmul
scas
or
push
xchg
mov
cmp
ss
or
in
lds
dec
push
push
push
xchg
inc
mov
mov
cmps
fcmovu
dec
div
scas
push
dec
xchg
push
sub
and
bound
mov
xchg
jbe
repnz
fisttp
jb
fisub
inc
mov
pop
adc
adc
(bad)
jns
das
fld
cmp
cmps
test
adc
movs
js
scas
xchg
loop
cmc
out
out
stc
xor
add
sub
mov
push
mov
iret
sub
xchg
ja
ret
dec
fnsave
fsubr
jmp
in
mov
mov
or
rcl
(bad)
(bad)
sub
mov
call
fld
mov
test
xor
mov
(bad)
test
xor
sti
outs
dec
sar
mov
xor
mov
inc
sbb
add
dec
cmps
mov
push
mov
shl
xchg
inc
cmp
jmp
pop
jo
sub
and
into
pop
das
sbb
aad
stc
cs
call
and
cmp
sub
mov
adc
xchg
adc
jle
mov
adc
retf
mov
add
out
cmps
mov
pop
dec
out
fdiv
push
shr
bnd
ret
aas
sbb
xchg
cmp
loopne
ret
jns
not
ret
inc
cwde
jns
dec
rcr
ins
test
add
in
mov
dec
rcr
push
adc
adc
mov
add
fsubr
jo
mov
push
cmp
inc
pop
(bad)
xchg
push
or
adc
mov
jge
sbb
jae
enter
fwait
data16
shl
and
dec
add
inc
add
sub
loopne
inc
sbb
outs
mov
int
test
jp
int
pop
fsub
bound
shr
leave
inc
cld
test
shl
jo
add
mov
(bad)
out
jg
or
mov
outs
fstp
loope
and
outs
inc
adc
and
aad
mov
je
pusha
mov
pop
jge
jmp
adc
jns
jnp
push
mov
imul
mov
loop
jge
mov
ror
fs
jbe
mov
in
xor
cld
cmp
adc
sti
xor
sbb
pop
stos
loope
xor
sbb
in
in
xchg
call
js
push
leave
inc
sbb
iret
dec
outs
aaa
pop
xor
mov
in
add
xchg
cdq
fld
pusha
xchg
xor
mov
xchg
mov
mov
push
or
or
ret
mov
xlat
movs
mov
push
and
(bad)
pusha
out
fs
(bad)
jae
in
sbb
loopne
sub
sub
loope
push
cmp
es
jle
xor
xchg
out
sub
fistp
ja
inc
out
retf
adc
and
push
cld
out
fwait
stc
sub
out
inc
jns
adc
and
or
lahf
pop
cmp
adc
hlt
xor
scas
mov
mov
aam
retf
mov
mov
dec
cwde
imul
std
push
xor
call
arpl
movs
jecxz
shl
xchg
out
ins
clc
pop
repz
adc
lds
mov
push
inc
mov
mov
enter
fistp
mov
inc
xor
adc
sub
add
jno
mov
pop
jae
sbb
jbe
push
iret
fist
sub
and
push
or
loope
xchg
(bad)
pop
js
nop
cmc
cmp
push
xchg
inc
sbb
arpl
add
out
pop
idiv
pop
push
sub
add
out
push
mov
sbb
adc
xor
add
sub
or
mov
fwait
mov
rcl
add
ja
pop
call
pusha
test
mov
(bad)
pop
cdq
add
stos
mov
xchg
shl
xchg
sub
data16
repnz
mov
fnsetpm(287
(bad)
(bad)
mov
fnsave
xchg
call
(bad)
in
ret
mov
sbb
sub
retf
sub
jp
shr
mov
fwait
pusha
xor
into
fiadd
scas
mov
pop
mov
test
(bad)
cdq
fld
es
push
pop
jle
push
adc
cmc
aaa
je
lods
sbb
lods
imul
scas
add
mov
push
or
sti
ror
loope
int3
pop
adc
xchg
mov
pop
add
cmp
popa
mov
iret
icebp
adc
sahf
(bad)
rcl
repz
shl
into
push
ret
pop
add
mov
adc
mov
clc
cmc
mov
data16
movs
imul
rcl
rcl
hlt
or
hlt
pop
add
fstp
mov
sub
shr
in
fisub
dec
adc
test
push
shl
mov
cld
xor
lds
sub
loopne
push
dec
sbb
cmps
and
add
movs
add
(bad)
add
push
sbb
or
mov
or
iret
enter
add
and
adc
test
adc
sub
jle
xor
jno
xchg
les
push
in
xor
(bad)
std
xchg
mov
mov
add
inc
mov
lods
pusha
les
cmp
cmp
cmp
out
pop
in
mov
test
js
mov
push
pushf
sbb
or
sub
(bad)
xchg
nop
aaa
daa
add
faddp
cmp
loop
stc
fs
mov
push
xor
add
add
push
jp
aas
daa
xchg
mov
sub
out
ffree
jns
xlat
pop
sbb
pushf
mov
push
xchg
jle
mov
adc
sub
lahf
xor
in
pop
jp
push
cmps
jb
out
stos
call
sbb
adc
jbe
jbe
cli
rcl
xor
cdq
mov
out
push
push
sub
jge
mov
lock
fcomp
inc
and
pop
push
dec
es
sti
push
xchg
cmp
cmc
cmp
jne
pushf
popa
mov
stos
movs
inc
lea
(bad)
sub
and
mov
xor
dec
les
out
sub
jb
pusha
pop
dec
pop
jb
cmp
sbb
sub
fwait
ja
push
and
jecxz
jne
and
(bad)
dec
jbe
cmp
push
sahf
cmp
es
push
xchg
sbb
dec
std
mov
into
std
and
adc
shl
pop
push
sub
jp
test
dec
les
or
scas
(bad)
cmp
push
in
sbb
stc
or
and
pop
sub
xor
das
jns
popa
lds
and
push
cmp
or
mov
push
imul
cmps
sahf
cmp
pop
in
jp
mov
xchg
sbb
std
and
int
cld
pop
adc
sbb
movs
adc
push
dec
jp
and
jp
loop
gs
ror
es
push
movs
inc
mov
xchg
jle
push
mov
pop
xchg
mov
pop
nop
add
mov
sub
shl
mov
fbstp
(bad)
outs
pop
xor
ins
push
sub
push
ja
lods
mov
inc
pop
xchg
push
lock
and
dec
cmp
jecxz
fstp
pop
jle
cwde
jmp
push
dec
pop
jg
adc
mov
bound
cmp
sub
ds
out
xchg
push
xor
stos
out
outs
cmp
mov
mov
enter
(bad)
cmc
push
mov
sbb
push
ins
push
(bad)
scas
pop
shr
xchg
and
stc
mov
and
jg
jge
sub
xlat
pop
movs
fwait
inc
cwde
aam
xor
add
call
xchg
jno
push
ret
mov
in
xchg
ficomp
neg
ret
nop
fnstsw
jmp
sbb
mov
cmc
sub
retf
cs
stos
das
mov
ret
mov
adc
lahf
dec
xchg
pop
jge
xor
pop
enter
std
ss
repz
sub
push
jnp
mov
cmp
mov
sub
push
ds
cmp
outs
mov
mov
into
or
retf
xlat
push
jnp
xchg
xor
clc
sti
fdiv
push
mov
js
lahf
sar
mov
sub
pop
int3
into
mov
and
icebp
mov
pop
cmps
arpl
mov
mov
push
out
jp
or
lahf
push
mov
push
xchg
lds
inc
test
cmps
adc
dec
mov
ins
sub
dec
call
and
out
adc
out
xchg
lds
xor
sbb
das
push
rcr
(bad)
jp
fs
dec
cmp
adc
lahf
sub
inc
dec
push
call
call
add
popf
inc
cmp
(bad)
adc
xchg
cmps
inc
xchg
cwde
retf
mov
shr
sbb
scas
mov
xchg
jle
fisubr
adc
add
out
mov
stc
sbb
sahf
fdiv
cmp
ja
not
into
outs
scas
stos
sub
popa
ds
add
pusha
lahf
data16
les
outs
fs
pop
ret
aam
iret
xchg
add
mov
push
lods
add
outs
xor
jbe
dec
xor
and
sti
sub
pop
or
call
push
test
mov
hlt
mov
mov
mov
mov
dec
repz
cs
out
aad
loopne
shl
jae
movs
cmp
push
or
mov
push
xchg
pop
movs
dec
fdivrp
mov
jbe
(bad)
ja
xor
push
data16
repz
ss
dec
mov
jecxz
jb
and
mov
pop
dec
cmp
mov
test
ror
iret
push
add
and
xor
clc
movs
jp
fnstcw
adc
xchg
mov
cmc
fisttp
(bad)
xor
xchg
mov
jns
lock
jl
xchg
pushf
mov
add
mov
inc
or
cmp
aam
js
dec
imul
ins
mov
sahf
dec
bound
ror
adc
push
cld
xchg
inc
jo
hlt
jp
mov
add
repz
and
stos
ins
ror
or
inc
test
int
xor
cmps
in
(bad)
clc
int
daa
paddsw
test
dec
(bad)
mov
cs
xor
out
in
and
sbb
push
jmp
cmp
movs
pushf
bound
or
and
adc
mov
ds
mov
(bad)
add
iret
fndisi(8087
mov
sbb
xor
(bad)
xchg
mov
mov
add
lock
aas
pushf
cmp
cmp
jbe
adc
(bad)
test
mov
(bad)
mov
inc
mov
xor
push
or
pop
out
in
fbld
mov
into
repnz
xchg
pop
movs
fidiv
xchg
jmp
dec
xchg
arpl
xor
rol
mov
jbe
jmp
es
sub
cmps
jbe
add
mov
dec
jmp
add
sub
push
ret
pop
mov
movs
cs
and
push
je
ja
sbb
mov
jo
push
in
jb
out
jge
and
and
out
mov
outs
(bad)
jo
scas
mov
in
or
inc
mov
test
shr
or
dec
out
popa
cmp
pushf
call
retf
test
xor
ja
push
jne
dec
scas
scas
push
xor
enter
cmp
arpl
push
das
rol
xor
ja
bound
push
jae
movs
cmp
int3
inc
imul
pop
mov
(bad)
cmp
jmp
xor
xchg
loop
adc
movs
fsubr
push
sub
mov
mov
sub
adc
xchg
sub
addr16
xor
loop
aam
push
into
inc
les
fcmovbe
mov
xchg
and
add
popa
mov
xchg
mov
mov
xor
inc
push
stc
add
and
je
xlat
sbb
xchg
frstor
or
or
mov
hlt
aam
mov
mov
aam
xchg
dec
mov
(bad)
into
xchg
repz
fstp
adc
adc
daa
ret
(bad)
mov
ja
jg
push
add
inc
cmp
fdiv
jne
inc
jbe
cmp
push
xor
jecxz
into
sbb
and
popa
and
cmp
jns
dec
stc
mov
add
in
dec
iret
popa
jmp
adc
inc
inc
xchg
popf
jge
mov
pusha
and
or
and
or
jge
mov
out
mov
mov
add
mov
xor
dec
xchg
fs
ja
push
je
pop
sub
sbb
dec
inc
mov
xor
xlat
xchg
add
add
jg
sti
sub
lods
mov
adc
lds
int
mov
fwait
arpl
dec
aas
cwde
ins
dec
jb
inc
sbb
mov
out
scas
sub
(bad)
popa
pop
fadd
pop
jbe
pop
and
mov
xlat
fs
push
mov
inc
adc
push
loop
stos
inc
inc
xchg
xor
call
cmps
cmp
mov
jb
sub
cmps
gs
mov
fdivp
call
add
ins
xchg
lods
aam
loop
mov
pushf
jmp
push
pop
cmp
movs
pusha
div
js
rol
fwait
sti
inc
out
adc
addr16
mov
jmp
call
retf
pop
push
mov
pop
imul
mov
mov
icebp
xor
movs
push
mov
jg
inc
adc
inc
add
add
gs
ss
pop
fwait
daa
mov
iret
das
mov
ins
add
jo
mov
sbb
inc
(bad)
xor
gs
cmc
popa
mov
mov
rcr
sahf
and
test
sar
shl
stc
cmp
dec
jmp
stos
sub
or
and
popf
push
dec
sub
(bad)
dec
cmp
xchg
bound
in
add
cmp
dec
lahf
leave
sub
test
dec
mov
and
mov
retf
pop
inc
lock
cmp
call
jg
push
mov
int3
(bad)
xor
sbb
mov
lods
pop
inc
xchg
sub
adc
mov
pop
sub
xchg
cmps
aaa
clc
pop
cmp
popa
ins
(bad)
in
data16
push
pop
xchg
stos
xchg
out
mov
outs
shl
cmc
fucom
xchg
mov
imul
(bad)
pusha
push
fldcw
mov
cmp
and
out
inc
iret
push
jmp
mov
add
sar
mov
jne
aad
add
adc
lods
pop
test
inc
mul
add
push
mov
es
out
mov
in
push
and
inc
sahf
call
rcr
xlat
adc
int3
sub
inc
xchg
ja
out
mov
cmp
aas
xchg
push
stc
push
cmp
test
dec
pop
adc
xchg
xchg
inc
or
std
(bad)
fnstenv
push
push
cmp
xchg
or
iret
(bad)
xor
imul
inc
sub
pop
add
jnp
std
retf
lock
xor
push
ret
jge
and
lock
bnd
push
sbb
gs
lahf
add
and
push
call
cmp
cld
adc
js
in
repz
retf
xchg
nop
inc
arpl
inc
mov
push
adc
cmp
mov
push
and
jb
or
out
and
(bad)
in
std
jg
xlat
mov
mov
adc
mov
add
adc
xor
adc
or
loope
outs
ret
lods
cmp
ret
push
xor
lea
xchg
addr16
push
sub
mov
pop
xchg
mov
lds
scas
movs
jmp
cli
rcr
cmp
shl
fadd
xor
in
lods
or
mov
into
imul
xchg
push
rcl
add
repz
inc
data16
ins
lods
nop
xor
out
and
(bad)
jp
lods
cwde
pop
sub
mov
ins
ja
sbb
loopne
(bad)
jecxz
jge
add
xchg
stc
neg
loopne
sbb
sar
mov
xor
mov
jnp
movs
add
in
xchg
test
or
neg
sbb
mov
inc
inc
(bad)
ins
jle
push
xchg
gs
cld
popf
or
lea
mov
fs
in
fsubr
movs
fsub
cmp
sbb
push
psraw
adc
xor
data16
(bad)
out
mov
jo
sub
xchg
pop
add
add
mov
and
sub
add
pushf
xchg
(bad)
xor
cmp
daa
mov
out
(bad)
jge
rcl
enter
rcr
mov
pop
clc
adc
xchg
je
cmp
fwait
das
les
es
inc
sbb
mov
push
test
sbb
cmp
fist
xchg
(bad)
mov
xor
enter
mov
mov
mov
movs
dec
and
and
sbb
test
xor
push
and
(bad)
push
mov
cwde
mov
(bad)
mov
imul
icebp
push
lods
std
add
pop
xchg
pusha
push
jb
adc
xchg
jge
xchg
fcomi
push
mov
pop
xor
scas
sbb
jns
sbb
fadd
scas
jns
pop
ins
mov
(bad)
clc
rol
adc
sub
or
xchg
cdq
mov
int3
jl
cli
pop
adc
aad
push
test
xchg
xchg
scas
or
dec
pop
mov
sbb
sar
call
call
xchg
cmps
xchg
arpl
inc
retf
cmp
pop
pop
and
aas
sub
cmp
jge
(bad)
outs
and
and
inc
xchg
ss
inc
inc
ins
aaa
ins
mov
xchg
into
outs
loopne
aad
pop
call
retf
fidiv
xchg
adc
xor
jmp
add
mov
and
aam
mov
mov
popf
movs
lds
adc
add
inc
rol
out
pop
std
imul
sbb
test
repnz
adc
mov
scas
and
jb
push
pop
jmp
imul
mov
imul
in
or
jns
sub
jmp
popf
les
gs
jns
in
adc
adc
shl
call
cmc
sub
outs
imul
cmp
xchg
retf
ins
push
jb
ins
test
jp
in
push
cdq
xor
jg
fidivr
jecxz
cmps
dec
mov
loopne
inc
adc
dec
ret
sub
hlt
sti
cmp
pop
sub
push
leave
mov
sub
mov
push
(bad)
faddp
mov
jg
xchg
xor
xchg
mov
bound
xor
rol
mov
mov
scas
das
adc
push
or
loope
mov
mov
mov
repnz
rol
push
push
lock
sub
push
test
gs
idiv
inc
cmc
imul
mov
in
mov
hlt
jle
mov
or
mov
and
movs
stc
mov
jl
xchg
and
movs
imul
push
int
dec
jns
test
xchg
xchg
(bad)
pusha
jg
fwait
repnz
jmp
pop
dec
lods
dec
xor
adc
aaa
xchg
out
push
shr
loope
nop
das
xchg
add
push
je
dec
push
or
mov
jle
jmp
scas
dec
ins
jo
cmp
and
icebp
enter
fcomi
gs
xchg
mov
pop
fcmovne
(bad)
stc
sar
fmulp
cmp
dec
adc
sub
std
in
out
addr16
jns
ror
fistp
adc
sbb
adc
mov
mov
jno
in
adc
out
repnz
add
add
and
pop
outs
icebp
cmp
fld
sub
adc
ss
outs
sub
and
ja
mov
cmp
jge
push
xor
fs
and
cmc
pop
leave
pop
scas
vmovaps
xor
mov
xor
fimul
(bad)
in
movs
(bad)
rcr
aam
idiv
add
ds
arpl
fs
adc
(bad)
jb
mov
sbb
enter
shr
(bad)
scas
gs
cmp
push
repz
xchg
push
(bad)
xor
xchg
cmp
push
mov
xchg
das
aaa
mov
cmps
xor
fisub
jne
stos
adc
dec
aaa
adc
jbe
(bad)
jb
ror
stc
xchg
cwde
mov
and
mov
jbe
pop
or
imul
push
add
imul
neg
push
sti
aam
pop
rcl
stos
cli
retf
and
sbb
or
xchg
sbb
add
iret
in
ret
cmp
fisubr
loopne
jl
xor
loop
int
arpl
cmps
mov
sbb
push
jae
lods
daa
imul
push
sub
inc
sbb
lahf
add
sbb
cdq
jo
lods
pop
mov
js
lds
in
mov
push
mov
cmc
pop
out
inc
pop
xchg
shr
adc
push
cmp
clc
push
jne
enter
and
adc
xor
rol
jp
pop
in
add
jg
out
inc
jb
cmp
push
mov
ror
xchg
mov
shr
xchg
aad
lahf
les
push
mov
xchg
pop
stos
lock
ret
enter
pop
je
mov
jnp
or
loope
int
or
xchg
bound
ficomp
push
daa
jge
outs
adc
and
jnp
mov
gs
out
pop
data16
call
lods
add
jbe
pop
jp
mov
mov
adc
(bad)
hlt
sbb
sbb
repnz
dec
ret
cmp
add
mov
cmp
popf
pop
xor
add
push
rcr
xchg
jmp
popf
arpl
mov
(bad)
aaa
cmp
push
(bad)
repnz
jae
push
sub
or
xlat
iret
fs
xor
aam
inc
jb
(bad)
div
pop
jb
retf
mov
inc
popf
cmc
inc
add
mov
fmul
test
pop
pop
test
cmp
mov
vmwrite
fstp
sbb
(bad)
push
out
out
je
test
lods
or
outs
ror
mov
(bad)
fadd
fdiv
and
fdiv
jo
and
jne
into
dec
mov
or
inc
mov
push
cmp
xor
pusha
adc
in
add
adc
retf
fcmovb
mov
stc
out
push
retf
in
jbe
xchg
rcl
aas
push
aas
sub
and
dec
retf
pop
(bad)
xor
mov
ins
(bad)
xor
ins
sbb
push
scas
neg
dec
xor
dec
call
xchg
pop
or
repz
adc
pop
fucomp
fs
pop
bound
cmc
dec
cmp
cdq
push
mov
(bad)
ss
dec
jecxz
fs
and
mov
popa
sub
push
ror
sbb
fst
adc
in
add
inc
lods
push
dec
pop
lods
cdq
stos
adc
adc
cdq
fisubr
ja
aaa
or
in
and
aas
jle
mov
repnz
mov
fmul
push
inc
outs
mov
push
in
dec
ja
inc
iret
add
cld
test
shl
dec
mov
mov
into
rcr
cs
sbb
dec
(bad)
pop
and
dec
cmp
cmp
dec
pop
pop
mov
in
test
or
aaa
mov
stos
and
das
test
jmp
leave
sbb
fadd
fdivr
stc
outs
pop
and
call
push
dec
push
cmp
sahf
popf
into
aad
xchg
std
pusha
dec
add
inc
xor
add
(bad)
add
test
jbe
push
add
and
pop
fstp
push
sub
repnz
pop
push
add
xchg
xchg
mov
push
les
mov
(bad)
and
or
ss
sbb
das
cs
leave
mov
pop
addr16
sub
(bad)
mov
test
adc
test
jae
jecxz
xchg
jl
stos
inc
stos
xchg
rcl
popa
cmp
mov
loop
or
fist
ja
pop
mov
add
xchg
dec
aad
xor
pop
jmp
test
mov
mov
aam
jns
xchg
cmp
std
and
jb
dec
or
sbb
aam
pop
movs
cmc
mov
jmp
(bad)
aad
jp
cmp
jmp
je
inc
mov
js
das
mov
mov
mov
adc
arpl
dec
mov
in
xor
pop
add
jbe
aas
addr16
jne
daa
ret
mov
mov
loopne
mov
lahf
lea
mov
retf
(bad)
xchg
in
pop
je
sbb
int3
sub
jb
stc
popa
aaa
jne
adc
jl
sub
inc
out
or
and
mov
outs
dec
mov
add
jecxz
sbb
inc
retf
inc
or
sub
xor
mov
inc
cmps
push
dec
inc
jle
adc
fisttp
jmp
pop
pop
sub
mov
xchg
(bad)
test
nop
cli
mov
imul
push
call
mov
or
cmp
scas
popa
xor
aaa
addr16
dec
push
ss
shl
adc
clc
int
stos
mov
mov
(bad)
pusha
xchg
sbb
loop
cli
and
cmps
pop
pop
outs
mov
pushf
cmps
scas
sub
pop
mov
shr
mov
jne
push
pop
fnsave
stc
call
xchg
(bad)
js
cmc
(bad)
hlt
pop
ret
neg
lods
hlt
(bad)
stos
mov
pop
or
inc
sub
xor
cmps
inc
jbe
pop
data16
push
jbe
icebp
ds
leave
mov
pop
(bad)
dec
xor
aad
add
xlat
in
mov
shl
cmps
cmp
mov
(bad)
mov
aad
gs
sub
fistp
mov
xchg
and
pop
jl
add
xor
sub
std
in
push
aas
dec
pop
aas
movs
out
inc
jne
nop
sbb
add
retf
adc
xor
es
lods
ret
mov
and
call
cwde
push
pop
scas
pop
test
(bad)
or
inc
jae
fild
push
push
pop
dec
leave
(bad)
sub
enter
xchg
xchg
cmp
adc
xchg
push
jle
xchg
cmp
xchg
enter
gs
jbe
mov
ins
add
aam
es
xor
mov
repnz
add
adc
push
ret
sbb
or
and
mov
cmp
aad
mov
adc
aaa
fnsave
dec
fstp
movs
lock
addr16
cld
xor
into
push
add
loopne
cwde
mov
mov
in
push
out
mov
push
push
lods
push
cwde
dec
jp
enter
mov
jne
(bad)
stc
xor
shr
outs
shr
cld
jmp
aam
fnstcw
sub
mov
cld
addr16
bound
xchg
push
mov
add
push
add
test
aam
add
jb
fnclex
pop
stos
dec
jl
jg
jmp
add
jle
fild
dec
loope
scas
dec
into
test
stos
mov
(bad)
mov
adc
scas
fimul
cmps
push
sbb
jle
sub
aad
add
xor
sub
lea
cli
iret
(bad)
loopne
pop
xor
cwde
adc
cmps
enter
fidivr
das
inc
sub
loope
cmps
sbb
adc
imul
cmp
into
jne
xchg
xor
nop
sbb
pop
dec
retf
or
inc
lahf
adc
push
adc
daa
mov
cmp
js
mov
or
sub
or
cs
add
xchg
push
mov
push
sbb
push
and
imul
xor
(bad)
dec
jbe
push
xchg
jae
stc
cmp
outs
fst
aam
mov
in
jbe
daa
scas
repnz
ret
mov
mov
test
(bad)
ins
das
dec
mov
pop
cmp
mov
cmps
in
pop
(bad)
adc
pop
(bad)
mov
stos
sub
addr16
not
adc
pop
mov
(bad)
movs
lods
into
inc
or
cmps
fdiv
mov
outs
cmp
popf
test
sub
xchg
pusha
stos
mov
jo
cdq
in
into
jmp
arpl
dec
mov
cmps
movlps
pop
loopne
adc
out
je
(bad)
mov
mov
data16
push
leave
repz
or
cwde
jnp
cmps
(bad)
aam
jns
jae
pop
imul
test
out
stos
es
enter
xchg
sub
into
add
test
lods
adc
ror
bound
pop
test
daa
adc
push
sbb
arpl
gs
dec
test
push
xchg
mov
std
dec
mov
jp
mov
cmp
iret
or
inc
inc
and
and
(bad)
fimul
inc
inc
or
(bad)
cmp
test
xchg
pop
xchg
scas
or
aaa
pop
movs
es
pop
test
ds
xor
ret
mov
jns
push
adc
ss
sub
aas
add
movs
push
sbb
les
outs
pop
std
jnp
daa
cmp
jae
iret
fsub
or
push
mov
jns
sub
push
fsub
add
out
repnz
inc
xor
xor
sti
inc
jnp
addr16
icebp
addr16
or
mov
sbb
aaa
sbb
jmp
pop
jnp
or
(bad)
dec
fstp
ins
imul
inc
fild
pushf
sub
aas
adc
push
icebp
addr16
push
mov
icebp
jae
test
pop
or
mov
mov
push
cli
icebp
iret
int3
fdiv
xor
fs
push
pop
ins
into
pop
add
imul
aad
mov
outs
jae
loop
test
mov
jnp
cdq
xchg
push
xchg
jp
xchg
scas
mov
(bad)
aam
inc
adc
jo
push
movs
(bad)
and
sbb
push
lock
in
or
push
jmp
loopne
aaa
mov
push
add
in
(bad)
xlat
mov
cmp
jne
cmp
add
cmp
mov
xor
arpl
and
(bad)
jle
inc
add
repnz
sahf
inc
bound
sbb
push
xchg
push
mov
mov
xor
inc
and
scas
clc
ret
sub
add
cdq
push
xchg
mov
ja
sti
call
fs
shr
movs
cs
inc
rcl
push
cdq
sub
mov
call
arpl
jmp
enter
jmp
stos
xor
xor
scas
xchg
mov
adc
xlat
out
and
lock
cmp
int
neg
mov
stos
adc
xchg
cdq
push
clc
pop
jmp
mov
lock
pop
jmp
jns
xchg
inc
aam
cmps
sbb
test
jg
cmp
pop
mov
and
and
outs
jo
stc
fcomp
popf
jbe
test
xor
dec
loopne
xchg
cmp
mov
add
sahf
adc
in
jmp
and
push
push
call
pop
shl
sbb
test
lock
dec
jb
sbb
movs
in
add
pop
xor
jp
sub
and
movs
push
call
xchg
(bad)
int3
jge
jl
lahf
mov
sub
(bad)
and
push
sub
outs
(bad)
sub
std
dec
call
dec
cmc
ss
cli
dec
ins
fwait
cmp
cdq
xchg
xchg
aaa
jl
hlt
loop
call
mov
xchg
sub
addr16
stos
push
out
ficom
cmp
cmp
jae
jnp
xchg
pushf
or
shr
je
stc
adc
or
outs
push
lds
push
aaa
test
xor
fs
dec
dec
mov
and
xchg
lods
pop
sub
rol
rep
scas
jg
dec
inc
mov
lds
cmp
push
test
mov
int
std
inc
call
(bad)
outs
loope
and
pop
sub
inc
sbb
xor
push
addr16
popf
and
mov
xchg
mov
jmp
neg
or
and
test
push
mov
es
(bad)
cmp
mov
mov
hlt
adc
repnz
retf
lods
fld
mov
cmp
adc
lock
sub
cmps
jmp
jg
bound
leave
dec
pushf
mov
mov
push
adc
movs
mov
adc
ja
mov
data16
mov
push
adc
add
pop
fadd
clc
inc
mov
stos
je
push
fstp
nop
xchg
stos
scas
ja
je
call
mov
jno
ins
mov
cmp
pop
arpl
sbb
(bad)
fcompp
call
leave
inc
mov
jmp
dec
dec
test
add
jns
and
js
rcr
xor
and
into
mov
sar
jae
dec
mov
fiadd
cmps
test
sahf
into
out
not
push
outs
mov
mov
(bad)
push
add
call
imul
rcr
push
and
in
retf
(bad)
mov
and
cmp
cmps
das
jo
push
and
sub
sbb
js
je
cmp
push
mov
sti
ret
retf
arpl
imul
and
icebp
dec
mov
daa
in
xor
xor
mov
out
(bad)
in
push
rcr
jg
dec
xor
sbb
lahf
movs
imul
push
mov
fwait
in
loope
test
xor
push
xor
add
push
jmp
push
push
and
pop
jbe
icebp
ja
in
push
sar
arpl
mov
mov
pop
iret
sbb
and
and
in
aam
push
lahf
lods
push
mov
jb
loopne
pop
xchg
inc
xor
inc
sub
sub
push
out
inc
retf
jae
adc
popa
mov
pop
mov
jns
fiadd
(bad)
dec
mov
or
jg
fstp
xor
adc
lods
mov
lock
xchg
sub
dec
mov
inc
cli
dec
push
add
fldenv
cli
mov
arpl
stos
stos
xchg
not
stos
sbb
add
push
dec
sar
mov
jge
mov
std
int3
fcmovne
mov
in
or
push
adc
inc
call
out
mov
dec
test
loope
inc
mov
nop
mov
xor
or
mov
add
inc
add
or
push
sub
gs
popa
popa
out
mov
pop
sbb
scas
sbb
cmp
mov
pop
fist
adc
mov
mov
push
mov
cli
adc
ja
es
out
mov
cmc
call
pop
push
jg
mov
repnz
jmp
xor
test
mov
retf
arpl
jmp
rcr
retf
inc
xchg
mov
test
jo
ror
pop
lea
cmc
sar
jmp
mov
pop
or
jmp
sbb
into
pop
sub
mov
sub
push
add
das
sti
cdq
and
not
mov
jo
push
(bad)
int3
pusha
into
inc
aaa
xor
ficomp
js
ja
rol
fnstenv
pushf
jmp
lea
add
pop
add
test
dec
pop
xchg
inc
mov
cwde
sub
mov
ss
ret
test
xchg
mov
retf
adc
add
jo
adc
ss
xor
ds
test
add
int
add
in
mov
push
sub
int
mov
mov
jnp
sub
mov
xchg
push
and
icebp
or
dec
or
add
mov
ss
cmp
addr16
int
dec
push
shr
cmp
pushf
or
lea
ja
inc
inc
jne
mov
lods
or
iret
pop
jb
call
not
mov
jmp
sti
std
ret
clc
lahf
mov
dec
xor
inc
repz
push
add
jmp
and
pop
(bad)
ins
fcom
daa
sub
int
mov
dec
jo
pop
lahf
mov
sbb
jp
iret
je
jb
arpl
pop
in
popa
sub
pusha
fild
sub
(bad)
mov
or
dec
pop
xor
cmp
or
jns
stos
mov
aad
dec
fild
xlat
iret
jb
add
scas
mov
add
xchg
sahf
in
sbb
push
and
fcmovnb
movs
repz
(bad)
xor
pop
push
jae
std
int
cmps
stc
fwait
xor
or
test
movs
add
(bad)
sbb
test
fild
leave
lds
daa
xor
xor
mov
mov
lahf
xchg
xchg
(bad)
fcomp
xchg
or
mov
ror
xchg
test
adc
dec
shr
xchg
gs
mov
jmp
add
aam
and
lahf
out
fmul
pop
sub
pop
add
mov
push
sbb
or
or
add
not
inc
iret
adc
sbb
jge
out
pusha
fsub
cmc
fidivr
test
cmp
xchg
jg
jmp
daa
aas
sub
adc
je
jmp
pop
push
push
jno
test
ret
stos
aad
hlt
push
ret
mov
add
scas
add
outs
jp
mov
inc
mov
addr16
cld
inc
push
pop
adc
push
pushf
out
sbb
and
mov
mov
jno
mov
dec
push
cli
push
icebp
leave
dec
aad
xchg
(bad)
loopne
or
daa
mov
push
xchg
cmps
jbe
jmp
add
in
cmp
and
cmp
cmp
and
out
loop
push
iret
sub
push
mov
adc
aam
ins
or
ss
xor
xchg
js
mov
jns
and
sbb
and
sti
sbb
enter
or
(bad)
mov
mov
and
(bad)
aaa
movs
out
and
inc
xor
ficom
aaa
fisubr
dec
or
push
int
sar
xchg
mov
pop
int
cmp
xchg
cmp
lods
sub
add
loop
retf
inc
push
scas
xchg
jmp
(bad)
mov
jmp
add
pop
cwde
popaw
das
cli
lods
cwde
es
je
mov
adc
out
and
lock
stc
add
mov
cwde
ret
mov
mov
mul
outs
add
sub
fldenv
pushf
cmp
or
mov
dec
xchg
mov
adc
push
sub
cmp
lds
xlat
arpl
je
ret
mov
adc
jo
fstp
inc
(bad)
cmc
mov
or
mov
lock
stos
(bad)
dec
dec
pop
loop
push
mov
and
sbb
aam
dec
mov
(bad)
iret
ins
push
mov
dec
jg
cmp
mov
jecxz
out
xchg
call
repz
addr16
scas
and
popa
js
dec
inc
enter
cmp
pop
cmps
pop
xchg
das
adc
and
call
sahf
clc
inc
add
cdq
pop
pop
jecxz
inc
mov
jl
pop
retw
or
pop
inc
ja
pop
inc
add
adc
xchg
cmp
sbb
add
out
jp
sbb
cli
sub
add
pop
sbb
pusha
repnz
cmp
cmps
into
sub
jnp
fisttp
sahf
test
leave
mov
pop
mov
jp
dec
cmp
adc
jmp
les
ror
mov
adc
call
imul
pop
jnp
cld
popf
adc
mov
out
mov
(bad)
enter
cwde
push
xor
cmp
mov
or
xchg
push
push
aas
jmp
int3
or
dec
push
popa
sub
ins
fild
fprem1
lods
pop
pop
test
rol
loope
mov
dec
inc
mov
xchg
lds
shl
jmp
cmps
push
cmp
cmp
jmp
xlat
pushf
fbld
mov
and
cmps
push
in
mov
ret
(bad)
xchg
icebp
(bad)
mov
stos
sub
cmp
lods
(bad)
popf
cli
jb
xor
mov
fild
in
stos
push
jmp
jge
ins
scas
movs
xchg
fcomp
push
ins
sbb
or
pop
cli
aad
push
jmp
aas
or
jl
mov
xchg
dec
jecxz
shl
sub
xor
fldcw
lea
je
or
or
fcom
clc
adc
loopne
lds
frstor
cmp
scas
out
dec
xchg
inc
in
shr
mov
xchg
out
lds
mov
xchg
push
pop
rcl
add
cmp
jmp
test
jo
cmp
icebp
repz
in
mov
(bad)
sbb
fmul
int
arpl
(bad)
push
pop
rcr
jbe
adc
jl
and
pop
dec
mov
push
test
and
out
mov
rcr
mov
movs
cld
xchg
ficomp
mov
inc
cwde
pop
inc
in
push
xor
mov
cdq
or
cmp
pop
add
bound
adc
add
sub
shl
mov
ins
jb
aam
in
xor
cmps
sub
dec
add
shl
ja
inc
(bad)
pop
test
outs
ret
and
adc
in
mov
inc
jmp
call
std
jp
inc
pop
outs
ds
ficom
xor
mov
pop
stc
pop
pop
pop
test
out
jno
fldl2e
in
jbe
movs
dec
or
mov
jge
jecxz
cmc
jge
mov
mov
xchg
sub
and
imul
(bad)
mov
add
hlt
scas
sub
scas
call
out
stc
in
data16
mov
fild
or
lods
xchg
xchg
mov
xor
mov
leave
sbb
jbe
adc
movq
dec
pop
adc
sub
clc
jmp
movs
iret
sbb
movs
jnp
stos
sub
xor
loopne
cli
cmp
mov
adc
push
call
retf
cld
mov
fild
sub
std
dec
or
mov
int
dec
fwait
push
cdq
pop
jmp
aas
imul
pop
(bad)
pop
fs
(bad)
add
fbstp
repz
mov
not
lds
push
div
add
push
pop
imul
js
jnp
sar
cmp
and
ins
test
and
jg
pop
add
push
push
out
xchg
mov
test
out
scas
push
pop
(bad)
mov
sbb
(bad)
out
pop
push
out
fwait
lds
or
inc
xchg
inc
xchg
add
aad
jo
leave
fdivr
add
cmps
push
sub
test
cmc
icebp
adc
jne
push
les
mov
xor
and
int
(bad)
test
inc
sbb
cmp
push
add
push
in
scas
ins
mov
cmp
add
ret
mov
sbb
mov
shl
pop
ins
sti
rcr
gs
pop
mov
aad
mov
stos
xor
cmp
mov
std
mov
(bad)
jbe
pop
or
jb
jp
jne
or
cmp
mov
jl
mov
jne
pop
stos
retf
int
dec
mov
test
add
ins
mov
dec
outs
lods
call
sub
sbb
(bad)
mov
shl
repz
in
inc
xor
cmc
imul
inc
fiadd
imul
xchg
cs
loope
sub
sbb
fbstp
dec
cmp
imul
pop
push
mov
rcl
push
mov
test
jmp
jmp
gs
fmul
imul
das
(bad)
shl
ror
retf
arpl
es
adc
adc
stos
sbb
rcl
call
pop
mov
jmp
out
and
xor
loope
out
mov
out
xchg
cmp
(bad)
sub
adc
je
sar
pop
icebp
push
loopne
les
lods
ret
jo
jg
ret
int3
xor
jg
mov
dec
pusha
fdivr
fisttp
cmp
xor
out
adc
in
add
imul
push
dec
(bad)
or
add
dec
inc
xchg
push
mov
xor
xchg
mov
(bad)
ror
clc
xlat
sbb
mov
lds
daa
call
repz
cld
jb
sub
fwait
and
inc
fld
dec
push
sub
jle
push
repnz
push
cmp
loop
loopne
push
movs
fld
mov
jno
ret
into
jecxz
or
mov
les
adc
cmp
out
cli
cmp
addr16
jns
mov
outs
inc
scas
mov
inc
lods
imul
in
or
mov
cwde
cmp
mov
iret
jb
mov
test
stos
push
in
jg
cmps
fstp
jmp
fs
retf
ja
push
inc
aaa
dec
or
sbb
into
or
inc
xor
bound
mov
xor
(bad)
cmp
sub
enter
cld
cs
cmc
cmps
or
in
test
cmp
push
xor
rol
movs
sbb
and
repnz
xchg
or
adc
retf
aaa
stos
ins
xchg
and
push
and
fld
pop
cmp
jo
xor
mov
fisub
dec
les
xchg
adc
mov
ret
mov
icebp
movs
add
lods
clc
sahf
mov
pop
add
loopne
push
fwait
add
jbe
fld
out
dec
test
xchg
popa
fmul
stc
cwde
push
ja
xchg
pop
push
or
ret
test
and
test
cmp
daa
daa
iret
loopne
imul
mov
and
mov
inc
fwait
outs
xchg
inc
ror
pop
jnp
in
das
vmovaps
adc
ins
push
out
fmul
rol
leave
out
in
dec
mov
aad
cdq
cmps
sbb
cwde
gs
mov
sbb
int
push
pusha
sub
inc
jnp
mov
adc
mov
stos
mov
push
jle
fs
stc
jnp
ret
cld
jmp
push
mov
xchg
cwde
fdiv
setb
inc
lods
int
cmp
inc
dec
loope
dec
dec
jo
cs
jg
jb
dec
sbb
push
pop
stos
(bad)
jp
inc
or
(bad)
mul
add
hlt
dec
and
jle
mov
dec
xor
lahf
test
mov
mov
mov
fld
sub
cmp
add
jg
jnp
sbb
mov
nop
mov
(bad)
dec
in
adc
mov
aas
mov
pop
popf
shl
add
adc
sub
add
cmp
aaa
sar
leave
jne
push
enter
stos
jbe
adc
fs
sbb
mov
outs
push
clc
imul
xchg
jmp
jecxz
sbb
sahf
inc
pop
inc
ds
int3
jge
rol
aad
mov
enter
(bad)
ror
adc
ins
test
xor
xor
add
pusha
aam
cdq
outs
mov
mov
sti
and
cmp
cmp
jns
cdq
push
jg
lods
cdq
stc
mov
mov
mov
xchg
shr
xor
fwait
retf
cdq
call
shl
stos
cmps
sbb
pop
push
mov
test
cmp
std
movs
push
and
dec
movs
cli
rcl
lds
xor
add
addr16
sub
mov
add
and
in
xchg
mov
jmp
icebp
sub
dec
xor
sub
cmp
and
(bad)
push
xor
imul
cwde
mov
sahf
in
in
pop
repz
addr16
popf
daa
inc
jb
stc
fdivr
inc
adc
sub
cmps
test
mov
cmp
pop
aaa
out
xor
xchg
mov
in
sub
fiadd
jecxz
repnz
xchg
sub
dec
pop
or
pop
pop
retf
mov
ins
call
mov
popf
je
xor
iret
pop
ret
fwait
das
xor
or
jl
psraw
mov
xchg
sub
sub
inc
loope
sub
and
jg
mov
ffreep
push
out
mov
imul
adc
add
imul
repz
and
adc
jno
push
imul
xsaveopt
or
imul
out
or
aas
mov
and
cld
push
(bad)
mov
push
and
and
push
call
xchg
sub
and
add
mov
adc
sbb
pusha
mov
js
bound
scas
loop
imul
aad
add
bound
mov
inc
pop
mov
and
mov
lock
jnp
fsin
int
popf
add
cmps
mov
cld
mov
inc
in
in
ret
sbb
inc
jmp
fnstcw
stc
inc
push
out
push
xchg
jnp
dec
cmps
mov
inc
sar
scas
cmps
jecxz
sub
push
cmp
pop
push
xchg
push
pop
inc
stos
call
(bad)
stos
iret
jecxz
not
mov
mov
xchg
outs
jnp
sub
scas
rcl
push
xchg
jmp
add
dec
mov
inc
push
int3
mov
outs
rcl
add
(bad)
pop
lods
mov
mov
and
test
ins
loopne
cwde
push
inc
shr
lds
or
in
jl
stc
inc
pop
jae
call
in
repnz
mov
push
mov
adc
push
sbb
pop
cs
or
int
inc
cs
sub
dec
sub
(bad)
jnp
fs
or
mov
je
lock
xor
mov
call
inc
cwde
add
jp
inc
sbb
bound
jbe
cmp
sbb
es
shr
leave
mov
add
(bad)
and
xchg
push
sbb
add
shl
test
push
into
(bad)
fs
add
and
mov
nop
or
jp
xor
call
fs
xor
lods
hlt
and
inc
(bad)
xor
inc
fs
push
(bad)
xor
je
jge
mov
inc
popa
mov
loopne
rcr
mov
push
aaa
mov
mov
push
sub
retf
add
clc
in
push
outs
sbb
adc
add
lahf
dec
sbb
stos
lods
mov
fiadd
imul
(bad)
(bad)
or
mov
cwde
jp
call
sar
sub
neg
stos
mov
dec
rcr
fldenv
out
cli
jb
das
push
xor
ucomiss
and
cmp
push
dec
mov
mov
pop
jae
pusha
leave
or
adc
loop
lahf
test
jle
out
push
iret
mov
or
outs
int
mov
mov
mov
daa
jns
xchg
shl
mov
in
cmps
mov
sub
ins
in
je
dec
sbb
out
loope
mov
movs
test
cld
ss
movs
adc
addr16
aas
mov
xor
mov
mov
gs
out
add
stc
lods
inc
aaa
movs
sbb
sbb
adc
stc
fild
sahf
xchg
inc
inc
push
iret
cmp
sahf
push
sub
xor
push
ss
push
stc
movs
into
push
sbb
xchg
int
pop
or
cmps
loope
jmp
mov
inc
and
inc
mov
and
jle
cdq
fild
pop
push
in
or
push
mov
dec
or
xchg
pop
lods
pop
ret
xor
xchg
cmp
cmp
in
addr16
xor
ja
adc
sbb
jl
adc
push
cdq
jae
es
add
or
cmc
jbe
das
lock
clc
jo
inc
jo
in
jae
(bad)
mov
scas
stos
mov
out
and
int3
movs
js
pop
xor
inc
pop
stos
call
js
push
jecxz
dec
jb
inc
sbb
clc
pop
sub
cmc
mov
sbb
pop
(bad)
cli
add
scas
cmp
lock
jnp
cwde
mov
and
xchg
in
inc
in
repz
mov
mov
xchg
xlat
(bad)
jp
repz
mul
lock
or
dec
sahf
imul
out
aaa
int
(bad)
and
jmp
test
and
fild
sbb
mov
mov
in
jp
dec
xchg
shl
mov
psubusw
dec
rcl
ret
aad
dec
out
shl
out
fs
ret
add
lds
dec
popf
jne
mov
and
mov
das
and
dec
(bad)
call
cdq
and
aad
xchg
sbb
outs
inc
jae
pop
daa
(bad)
cmp
mov
cld
cli
push
push
ret
push
inc
push
add
sub
mov
inc
(bad)
sti
ficom
mov
push
cmc
add
aad
adc
mov
hlt
cmp
sub
mov
aad
jns
mov
out
push
pop
push
out
mov
(bad)
mov
sub
mov
punpcklwd
in
hlt
xchg
push
jmp
add
jmp
add
pop
or
jle
ins
retf
push
pop
sub
push
ins
loop
repz
mov
xor
int3
out
sar
mov
out
fxtract
sub
sbb
les
pop
push
popf
mov
aad
mov
add
imul
ret
ja
pop
inc
retf
push
xchg
int3
xor
out
test
repz
lahf
popf
pop
mov
cmp
push
jp
dec
sbb
ja
fnsave
dec
or
xlat
(bad)
push
or
xchg
bound
cld
ds
mov
xchg
(bad)
cmp
mov
fidiv
and
push
sbb
fwait
adc
movs
mov
add
inc
sub
mov
aad
dec
dec
sub
mov
xchg
push
fidiv
test
in
mov
enter
xor
test
mov
mov
cmps
adc
mov
int
sbb
xor
cmp
push
sbb
mov
lea
jmp
shl
cmp
aam
mov
jg
mov
jne
inc
sbb
inc
pop
sub
mov
dec
daa
inc
dec
call
lahf
mov
cwde
pop
dec
loopne
jmp
mov
es
jo
adc
and
sub
jle
inc
enter
ins
adc
push
and
ror
jle
add
icebp
and
xchg
sub
and
cmp
jecxz
addr16
call
pop
mov
sbb
hlt
imul
push
fistp
inc
cmc
in
pop
mov
js
fdisi(8087
ret
pushf
nop
fdiv
out
pop
jmp
xor
dec
sbb
gs
and
scas
pop
mov
or
pop
or
or
mov
or
cwde
mov
push
lahf
jle
dec
sbb
dec
gs
fcomp
stos
push
xchg
adc
nop
rol
fwait
sbb
aam
sub
(bad)
retf
push
popf
jmp
cmps
mov
push
cmc
pop
inc
dec
adc
out
imul
sbb
sub
jbe
pushf
popa
mov
ja
out
add
adc
mov
mov
lahf
(bad)
punpckhbw
jecxz
dec
adc
and
mov
add
sbb
ins
cmc
or
std
scas
das
fucom
jg
inc
sub
pop
fist
lds
ins
or
call
mov
sub
inc
js
adc
(bad)
je
movs
shl
pop
push
mov
cdq
out
adc
cdq
dec
add
cli
ds
(bad)
mov
push
jecxz
or
test
pusha
ja
push
mov
imul
pop
mov
repz
rcr
movs
sub
inc
inc
push
stc
pop
jge
mov
pushf
mov
and
mov
in
xor
mov
jle
icebp
daa
add
xchg
ins
xchg
jo
pop
cdq
mov
aam
inc
dec
(bad)
jb
(bad)
mov
inc
ret
or
push
mov
mov
lods
jne
mov
daa
mov
jp
xchg
mov
pop
cli
mov
fisttp
repz
sub
xor
ins
lods
popa
pop
inc
mov
xchg
add
pop
mov
sti
jnp
sub
iret
jnp
rol
inc
and
mov
inc
js
pop
mov
addr16
mov
add
ins
pop
mov
cmp
retf
push
sbb
and
mov
sbb
jmp
out
adc
in
outs
out
ficomp
jmp
loop
push
cmp
fsubr
xlat
push
pop
cmp
cmp
inc
mov
cmp
mov
and
pop
adc
inc
push
pusha
jbe
xchg
loop
pusha
xchg
scas
pop
fst
cmp
imul
sbb
ds
nop
mov
call
test
dec
pop
nop
lods
loop
aam
cmc
stos
shr
cs
inc
pusha
jne
mov
into
outs
and
pop
data16
icebp
fs
ins
loope
ins
mov
jne
int3
pushf
movs
ds
or
inc
shr
push
jb
out
leave
xor
sbb
repz
add
xchg
aaa
push
pop
shl
in
std
add
div
out
div
repnz
sbb
psubb
lock
pop
sti
adc
std
and
xor
ja
mov
cmp
dec
dec
inc
add
inc
data16
pop
fwait
and
dec
stc
inc
call
adc
cmp
test
int
sar
ror
dec
mov
push
jl
and
jo
outs
mov
(bad)
cwde
jg
jne
pop
jns
mov
cmps
pop
mov
mov
mov
xor
push
and
ds
mov
mov
mov
sahf
js
imul
cmp
pop
dec
push
adc
scas
mov
mov
sbb
jmp
cmp
test
push
adc
mov
pop
sti
xchg
inc
mov
loopne
xor
and
sbb
xchg
lahf
mov
inc
sub
int
popf
test
dec
leave
ja
pop
ins
leave
jnp
sti
or
clc
jbe
inc
in
jge
pop
ins
adc
xchg
in
add
daa
repz
mov
pop
shr
sbb
mov
movs
(bad)
jle
and
mov
cmp
ficomp
jmp
xchg
dec
mov
dec
lods
pusha
fdiv
cmp
pop
std
xchg
push
out
scas
sbb
loope
inc
sar
inc
data16
fs
mov
dec
push
lds
jnp
jae
xchg
iret
mov
push
out
xchg
cld
frstor
imul
mov
les
test
push
aas
div
push
xor
jg
cmp
adc
out
je
(bad)
enter
popa
ja
pop
xor
inc
rcl
(bad)
(bad)
xchg
leave
stos
nop
mov
test
test
dec
sbb
stc
mov
push
test
mov
pop
es
ret
mov
and
mov
rol
das
stos
xor
into
popf
jne
stos
push
xor
push
xchg
pop
mov
stc
xchg
xchg
mov
sbb
and
pop
fld
push
push
(bad)
lods
arpl
dec
ss
lea
icebp
sbb
mov
fisttp
call
lea
(bad)
dec
and
sbb
test
adc
push
jmp
sub
lods
pop
test
fild
fldcw
jecxz
mov
xor
cmp
or
xchg
jno
sub
scas
in
cld
and
mov
add
adc
fbstp
sub
xor
lahf
and
test
fld
dec
mov
ss
xor
or
and
mov
or
data16
loopne
push
aas
cld
jns
fwait
or
push
and
dec
imul
outs
sub
jecxz
sbb
stos
push
pop
pop
out
xchg
ins
inc
adc
in
sahf
pop
inc
adc
daa
out
jmp
lds
or
icebp
mov
jp
addr16
push
sub
call
loope
pop
movs
mov
sbb
movs
or
out
sub
int
and
dec
mov
mov
(bad)
stos
xchg
aaa
(bad)
mov
xchg
push
add
aad
mov
adc
in
cmp
push
cmps
xor
in
ins
repnz
or
inc
pop
mov
and
out
mov
loopne
pop
sbb
mov
outs
les
dec
mov
scas
mov
or
jl
add
in
ins
push
inc
in
imul
popa
mov
jle
test
add
pusha
mov
fwait
retf
xor
or
inc
int3
mov
inc
jnp
test
mov
call
ins
sub
adc
test
inc
adc
mov
sub
mov
ret
mov
sub
or
cli
aad
adc
fisttp
jae
mov
out
push
aas
aam
(bad)
sahf
fs
gs
pusha
mov
mov
inc
sbb
xor
call
cwde
push
dec
inc
cmps
daa
fcmovnbe
(bad)
jb
pop
or
push
jns
repnz
jns
xchg
(bad)
push
cmp
scas
mov
mov
push
addr16
sbb
cs
inc
prefetcht1
(bad)
xor
loope
mov
ins
movs
cmp
ins
add
loopne
out
int3
xchg
xchg
ins
jg
and
push
pop
mov
iret
push
shl
push
idiv
inc
dec
sahf
rcl
or
dec
ss
adc
imul
scas
jp
sbb
cli
add
div
adc
fs
out
mov
mov
rol
inc
pushf
in
sub
adc
mov
xor
push
add
vpunpcklbw
fst
out
icebp
mov
fist
mov
and
adc
mov
lods
repnz
lods
fnstcw
and
mov
mov
push
sub
xor
dec
or
test
inc
push
fsub
(bad)
rcr
shl
fisttp
mov
mov
pop
push
mov
jnp
add
pop
inc
cmp
popa
es
scas
outs
(bad)
push
adc
test
cmp
and
jns
cld
jmp
inc
inc
out
lea
jae
ins
dec
cmp
or
push
push
cs
jmp
sub
fldcw
cdq
mov
test
xchg
test
mov
xchg
and
les
cmp
mov
sahf
dec
out
cmp
and
shl
xchg
lds
stos
push
pushf
out
sub
push
mov
mov
jmp
sub
std
cmp
push
shr
ret
add
push
out
in
pop
mov
add
fld
or
mov
cmp
gs
std
ja
push
movs
or
xor
iret
shl
scas
hlt
lods
dec
scas
mov
cmp
lds
dec
inc
jmp
cs
xchg
mov
mov
mov
imul
cli
xchg
xor
sbb
pushf
jl
bnd
sysret
ja
inc
mov
pop
rol
mov
ret
adc
mov
in
cmp
icebp
nop
mov
out
lahf
call
pop
clc
pop
pop
cs
cmp
sub
mov
and
call
aas
ficom
xor
test
dec
cs
dec
fstp
dec
lahf
add
jl
dec
imul
mov
idiv
movs
repnz
imul
shl
adc
or
push
mov
or
dec
lods
je
push
loopne
mov
daa
in
push
and
or
xlat
test
xor
lds
jge
dec
dec
mov
and
into
mov
and
fst
outs
icebp
or
inc
test
aam
sub
call
mov
pop
jcxz
mov
rcr
mov
dec
mov
or
push
int3
or
in
push
adc
cmc
and
add
es
out
aaa
jnp
cmps
das
adc
ja
fiadd
jbe
jns
add
sbb
icebp
xor
inc
mov
sub
jp
bound
dec
xchg
sub
cli
repz
sbb
or
movs
cmp
jecxz
retf
retf
rol
mov
nop
pop
or
outs
inc
mov
rcr
jns
jecxz
sbb
gs
inc
jne
mov
popa
mov
cdq
lods
outs
ins
je
rcl
fmulp
mov
ins
(bad)
idiv
repnz
dec
mov
call
pop
push
stc
pushf
movs
jno
aad
xchg
cli
inc
add
add
push
cmp
xor
shr
popf
xchg
leave
outs
cs
dec
mov
dec
add
sahf
cmp
lds
sub
and
jns
inc
lahf
retf
and
push
jns
sub
rol
push
stc
adc
out
pushf
pop
xchg
add
out
cmp
inc
xchg
iret
push
jmp
push
inc
int3
mov
mov
retf
loopne
mov
or
jne
(bad)
mov
jg
xchg
ja
(bad)
xchg
sbb
gs
cli
loope
sbb
add
inc
sbb
add
cwde
xchg
or
pushf
dec
scas
pop
imul
jo
test
pop
or
sub
icebp
jb
cld
rol
or
ret
mov
fimul
jns
dec
or
dec
ds
mov
loop
loope
(bad)
stc
cmps
and
push
sbb
shl
adc
stc
jne
test
lods
test
push
leave
adc
aad
jnp
push
jg
mov
jbe
pop
mov
mov
test
add
jp
dec
mov
pop
and
stc
push
jo
dec
jg
and
mov
cli
xor
daa
leave
cmp
xor
test
push
call
and
into
xlat
or
sub
dec
rcl
psubw
int
(bad)
cmp
or
xchg
cmc
loop
arpl
sar
mov
xchg
or
inc
dec
inc
mov
call
mov
cmps
push
xor
fmul
cld
mov
ins
not
enter
pop
in
call
(bad)
cli
pop
shl
jae
jae
or
cmps
sub
inc
mov
in
jecxz
jp
dec
pop
mov
and
xor
fldenv
xchg
mov
xchg
js
pop
stos
mov
fidivr
aad
fiadd
inc
sub
in
aad
rcr
push
jbe
add
rol
stc
(bad)
dec
jbe
sub
pop
xchg
cmps
pop
lock
lds
bound
fimul
data16
xchg
cmps
inc
sahf
mov
(bad)
outs
mov
cmp
push
mov
push
inc
mov
cmp
push
aas
jecxz
ret
xor
or
imul
mov
xchg
adc
shr
cs
aas
aad
leave
retf
adc
sahf
dec
push
lds
mov
idiv
and
push
cmp
mov
leave
jmp
mov
icebp
xchg
cmps
sbb
cli
arpl
jns
xor
adc
jle
lods
jecxz
repz
fiadd
push
sub
inc
scas
xchg
in
xor
test
mov
test
dec
jne
and
nop
or
xchg
fmulp
adc
mov
mov
test
aaa
nop
or
sahf
movs
and
in
sbb
rcl
int3
jno
ret
pop
test
ss
push
shr
aad
pushf
stos
in
in
cmp
rcr
out
add
cwde
mov
outs
test
test
sub
add
into
iret
mov
ss
or
push
dec
jl
mov
sub
cmp
add
lods
mov
addr16
inc
frstor
cmp
loop
cmp
jecxz
outs
sub
mov
test
popa
push
stc
or
xchg
pop
arpl
mov
pop
xor
or
bound
xchg
pop
rol
pop
lds
pop
retf
fbld
aaa
jnp
shl
scas
call
aaa
mov
dec
clc
imul
sbb
(bad)
dec
jnp
jbe
test
lds
xor
xchg
dec
test
xor
adc
ret
sahf
movs
ror
xlat
pop
hlt
fdiv
pop
(bad)
pop
scas
jne
sbb
xchg
out
mov
arpl
neg
aad
mov
push
popf
cmp
iret
mov
bound
and
setl
test
mov
fld
mov
push
into
xchg
push
mov
jg
mov
loope
mov
dec
lea
rcl
jno
dec
mov
pop
mov
cmps
pop
push
and
hlt
adc
xchg
or
xor
repz
fld
es
je
inc
ret
imul
lods
sub
cmp
mov
shl
push
jns
(bad)
sbb
mov
mov
jg
add
push
ret
pop
out
adc
xchg
test
gs
test
push
jg
cwde
call
imul
lock
adc
inc
in
pop
and
inc
pop
test
xor
out
xor
cdq
scas
inc
into
retf
cmps
shl
cmp
test
push
cdq
cs
cmp
jae
pop
mov
aas
jmp
sbb
fistp
pop
js
ret
or
out
idiv
mov
adc
(bad)
ins
jmp
aaa
inc
rol
xchg
mov
je
mov
das
and
mov
push
cwde
loope
test
in
inc
cli
not
repz
sub
inc
adc
jge
jo
(bad)
out
sbb
aam
pop
xor
jne
jbe
nop
sbb
repz
push
loope
(bad)
mov
jbe
lods
inc
not
gs
pop
jmp
cmps
test
sbb
data16
cmp
sub
xor
sbb
dec
(bad)
out
inc
inc
mov
push
pop
xor
jl
jmp
jnp
push
dec
xchg
lea
aas
pushf
adc
sub
fadd
jns
or
rcl
retf
add
add
and
mov
xchg
lea
fldenv
stos
sub
pop
and
push
jae
imul
sti
fnstcw
mov
xchg
mov
mov
adc
xchg
sub
arpl
hlt
test
aaa
push
fwait
ret
loopne
fmul
cmps
push
and
fldenv
push
mov
push
pop
cs
lods
dec
(bad)
mov
ja
dec
sub
test
outs
sbb
sbb
das
xor
sub
and
fs
mov
addr16
adc
mov
mov
xlat
(bad)
imul
jmp
scas
mov
jmp
test
aam
pushf
xchg
test
dec
xor
fs
mov
fld
mov
add
fsub
pop
jmp
and
adc
int
mov
mov
add
lahf
xlat
jne
dec
dec
inc
inc
adc
movs
add
mov
jmp
xor
cmp
dec
test
inc
sub
daa
test
xor
ins
sbb
sbb
mov
outs
adc
xchg
repz
sbb
jecxz
ds
cmps
cmc
inc
push
adc
ss
lods
idiv
jmp
syscall
pop
cld
(bad)
dec
inc
add
sbb
sti
(bad)
into
rcr
sbb
lahf
mov
cmc
test
movs
(bad)
fimul
scas
mov
mov
mov
jg
xchg
je
je
mov
pop
int3
and
mov
inc
push
add
jecxz
aad
xor
int
pop
icebp
push
mov
jl
xor
jle
inc
pop
push
imul
ror
mov
js
test
sbb
(bad)
test
inc
(bad)
push
shl
ffree
adc
cwde
cmp
fsubp
mov
ins
push
cld
xchg
fcom
mov
iret
push
outs
enter
leave
aaa
pop
jnp
cmp
fs
mov
outs
and
sbb
gs
and
in
mov
int3
mov
mov
sbb
dec
xor
sbb
sub
lods
(bad)
sti
add
adc
xchg
xor
jae
mov
add
test
cwde
fistp
aas
hlt
cdq
mov
fsubr
(bad)
sar
bound
mov
jb
in
(bad)
mov
lods
iret
out
fwait
je
mov
inc
sbb
lods
jp
adc
rol
test
scas
outs
lahf
add
les
daa
nop
je
xor
push
push
pop
loopne
pop
test
mov
es
jne
inc
jb
xchg
push
fmul
sbb
imul
mov
sub
lock
inc
addr16
or
stos
hlt
sub
mov
mov
mov
pop
(bad)
cwde
(bad)
pop
dec
outs
xor
pop
hlt
xchg
loope
sub
add
add
xor
push
jno
cmp
adc
sbb
jnp
hlt
loope
fstp
out
mov
inc
out
ss
(bad)
in
mov
sbb
dec
shr
pusha
jnp
outs
fs
scas
dec
and
add
pmaddwd
jle
and
or
jle
lea
cmp
out
jg
addr16
pop
call
ficom
movs
cmp
inc
push
push
loop
cmps
fisttp
mov
push
out
in
aas
push
xchg
sahf
dec
push
cmp
iret
(bad)
in
cmp
dec
fimul
jmp
mov
inc
lahf
xor
stc
mov
js
sbb
xchg
lods
push
and
jge
(bad)
or
cmc
and
adc
mov
cs
inc
aaa
popa
fdivr
push
ret
repz
xchg
ret
retf
cmp
pushf
mov
mov
in
or
aam
(bad)
pop
push
idiv
out
push
fldenv
inc
mul
xor
test
(bad)
out
fcom
mov
dec
mov
jmp
inc
pop
mov
jb
mov
retf
cmps
fbstp
lods
iret
pop
idiv
xor
and
daa
cld
into
sbb
popf
mov
js
sbb
sub
sub
sub
sub
aas
sub
je
scas
ficomp
sub
xchg
mov
out
mov
inc
mov
adc
push
jmp
shl
fdiv
addr16
retf
inc
cmps
mov
fimul
lds
popa
ret
lds
loope
int3
and
dec
and
jp
in
repz
pop
push
ret
xor
or
pop
add
dec
and
cmps
jmp
jnp
push
xchg
inc
inc
in
lock
out
mov
mov
dec
fiadd
rol
mov
sub
sbb
stc
lods
pop
mov
dec
pop
jge
push
nop
mov
mov
push
out
in
gs
inc
and
dec
sar
or
out
mov
pop
sub
retf
icebp
mov
jecxz
fcmovb
jno
jo
ins
je
dec
cmc
(bad)
imul
and
pop
and
add
pop
test
inc
mul
lahf
cdq
push
push
dec
cli
cmps
daa
or
je
fnstsw
test
mov
cld
jg
jnp
xor
push
lea
loope
mov
mov
jmp
clc
jmp
xchg
(bad)
iret
jmp
sbb
call
push
movs
cli
add
xchg
sub
add
nop
and
dec
xchg
ds
lods
add
add
push
jne
dec
lock
in
xor
rcr
pop
or
mov
xor
ins
mov
test
inc
jnp
push
call
ror
into
ss
out
jo
mov
cmp
mov
inc
lods
mov
stc
rcr
mov
or
sbb
(bad)
cli
loopne
ucomiss
inc
es
cmp
sbb
mov
push
retf
adc
xor
loope
repnz
sbb
xchg
xchg
sub
jne
stos
shl
inc
xor
cmp
mov
pusha
sbb
outs
add
and
or
ret
dec
push
test
jb
pop
int3
or
repz
fisubr
hlt
mov
addr16
xor
sub
stos
and
bnd
pop
aas
daa
mov
ret
sbb
rcr
jnp
into
addr16
pop
or
in
xor
dec
inc
movs
and
push
jae
retf
rol
xchg
das
fnstsw
xor
cli
imul
sub
fld
movs
cmps
fisub
push
push
lock
rol
loop
push
jo
lods
enter
adc
call
int3
lock
xor
pushf
cli
fst
or
lahf
(bad)
clc
aad
lods
fbstp
jmp
pop
pop
sub
mov
stos
cmp
dec
and
and
enter
popf
rcr
mov
movs
es
data16
xor
clc
cwde
iret
inc
add
ret
shl
sub
cmp
xor
sbb
hlt
adc
cli
call
lods
inc
inc
iret
fidivr
les
inc
push
ret
pop
xchg
inc
xor
call
ds
push
jl
sub
rcr
mov
xor
or
jl
movs
mov
jmp
xchg
adc
mov
cmp
pop
es
pop
xlat
std
enter
lds
idiv
ins
nop
dec
das
jae
mov
imul
adc
sbb
mov
test
shl
shl
or
pop
inc
dec
jecxz
pop
mov
dec
xor
or
inc
sub
cmp
and
pop
stos
or
ja
cmp
out
mov
jne
inc
pop
xchg
pop
arpl
(bad)
xor
mov
inc
inc
cmp
sbb
int
neg
cmps
xchg
ja
test
sti
mov
pop
(bad)
mov
and
xchg
fstp
iret
dec
mov
clc
mov
inc
(bad)
mov
int
mov
xor
push
cld
xchg
adc
lock
lods
sub
pushf
ret
shr
dec
sbb
lods
into
shl
arpl
test
or
and
shl
inc
into
fldenv
xor
xchg
inc
cmp
jnp
push
mov
ja
and
stc
push
jmp
aad
out
and
(bad)
pop
add
push
out
imul
jo
add
xchg
(bad)
rol
add
cmp
xchg
loop
inc
xlat
inc
mov
sbb
sti
push
adc
xor
fisttp
push
in
mov
or
xor
mov
jnp
inc
out
shr
and
loope
or
xchg
in
mov
add
adc
xchg
and
and
stos
int
mov
add
enter
push
dec
or
mov
xchg
scas
outs
cmps
cmps
sub
repz
lods
xor
pop
fsub
jb
retf
mov
int3
jge
mov
call
mov
into
popf
les
cmps
pop
push
sti
aam
(bad)
(bad)
jmp
inc
cmp
movs
ins
xchg
pop
xchg
sbb
jo
mov
aaa
dec
nop
movs
jno
xchg
pop
lds
xor
mov
sbb
dec
clc
sub
adc
test
inc
dec
jge
fiadd
ja
hlt
sbb
and
inc
lahf
mov
das
addr16
inc
xor
add
pop
mov
aad
cli
in
add
mov
lds
ss
xchg
push
xor
test
xchg
jecxz
daa
out
mov
or
movs
fs
jbe
jae
pushf
ss
scas
in
stos
js
mov
add
pop
sbb
push
or
xchg
mov
push
repnz
jle
push
call
out
jl
mov
movs
push
sub
and
test
xchg
mov
sbb
imul
dec
ficomp
int3
ja
mov
scas
inc
lock
scas
into
(bad)
ficomp
adc
jnp
shl
mov
(bad)
sbb
mov
mov
add
mov
ds
push
xlat
in
cmovno
add
pop
out
imul
inc
jmp
inc
inc
test
xor
aam
movs
jecxz
and
jp
xchg
push
adc
mov
popf
xor
cmp
mov
jmp
xor
xor
sbb
xchg
data16
(bad)
out
sbb
aaa
or
out
add
inc
call
push
xor
(bad)
mov
fs
push
jmp
xor
push
cld
popa
stos
xor
leave
movs
cs
cwde
mov
sahf
lock
icebp
jae
sub
or
test
pop
and
or
sar
mov
lods
mov
jb
fsub
xor
sbb
cmp
es
inc
xchg
outs
inc
add
pop
in
cmp
sbb
pushf
inc
sbb
hlt
int3
call
push
mov
or
call
inc
sbb
pusha
mov
sub
fsubr
push
sub
loop
jp
inc
stc
mov
loopne
lahf
movs
mov
adc
dec
mov
popa
call
stos
popf
mov
add
dec
add
push
mov
sub
repz
jne
out
ss
js
cmc
sbb
or
xchg
mov
mov
mov
add
xchg
retf
adc
lock
and
ds
dec
add
outs
fdivr
ins
add
data16
sti
in
inc
push
mov
loopne
pop
fidivr
or
inc
int
sti
not
and
sbb
gs
cmps
and
sub
mov
cmp
mov
push
inc
adc
xchg
adc
and
and
cmp
scas
push
and
fwait
ins
dec
jne
cmps
xchg
fistp
fucomip
shl
call
sub
and
bound
mov
(bad)
jmp
mov
gs
popa
add
add
jg
mov
(bad)
fisubr
xlat
jno
leave
sbb
sbb
sub
out
(bad)
out
(bad)
pop
adc
(bad)
cmp
sar
inc
data16
mov
xchg
cmp
jae
loop
add
mov
xor
push
mov
std
cwde
repz
arpl
sti
js
pop
jae
(bad)
sti
push
sti
jl
popa
xchg
arpl
test
gs
adc
xor
push
(bad)
clc
cmc
jae
and
loopne
inc
and
jo
test
popf
in
repz
int3
push
mov
jnp
mov
rcr
mov
outs
fiadd
fild
out
push
rcl
xchg
(bad)
xchg
popf
mov
shr
imul
pop
adc
bound
icebp
mov
in
ffree
(bad)
sub
cmp
test
lods
mov
retf
and
xchg
pop
jae
cmp
imul
fdivr
ins
cmc
movs
jmp
adc
xor
push
lock
out
out
sbb
push
sbb
out
pop
ja
mov
jbe
add
sub
fwait
ins
icebp
mov
push
psubq
pop
ret
inc
shl
add
sbb
loop
fiadd
lea
sbb
cmp
out
add
mov
pushf
pop
inc
lea
fbld
xor
dec
adc
inc
xchg
mov
in
lods
outs
sub
dec
test
hlt
xchg
sub
jb
mov
mov
nop
das
inc
lea
dec
cs
cmp
pop
mov
in
loopne
mov
xor
sub
mov
sub
fwait
mov
pop
pop
lods
not
cmps
mov
fldenv
call
dec
mov
add
stos
addr16
out
mov
ss
bound
int3
into
inc
(bad)
ss
mov
mov
pop
add
push
aam
mov
or
inc
or
pop
lods
stc
inc
push
pop
push
(bad)
pop
int3
call
lahf
(bad)
data16
je
enter
jo
and
and
daa
pop
push
sbb
mov
jno
xor
int3
adc
loop
cmp
add
out
mov
je
ins
retf
sbb
dec
idiv
push
sbb
out
jle
mov
pusha
into
sbb
mov
ins
adc
call
pop
and
int3
sub
sub
mov
sahf
out
das
jl
pop
and
ret
popa
into
fldenv
je
jne
in
sub
nop
ins
dec
addr16
mov
xchg
vpunpcklqdq
loop
scas
(bad)
push
push
lahf
in
or
shl
outs
push
dec
jb
xchg
aad
aas
mov
add
push
test
outs
dec
shl
js
int
dec
mov
ja
or
lock
pusha
fucomip
adc
and
dec
bound
leave
mov
push
pushf
cmp
loope
push
jne
dec
push
int3
xchg
jp
aaa
push
mov
push
lods
mov
aaa
fmul
jmp
adc
mov
nop
dec
pop
inc
shl
movs
sti
sbb
or
test
jge
jmp
hlt
xchg
pushf
and
popf
ins
add
mov
inc
ss
call
outs
arpl
out
ret
adc
add
retf
mov
push
jne
dec
mov
jns
cmp
dec
push
imul
mov
inc
pushf
loopne
out
dec
dec
mov
xchg
sbb
sub
rol
fidivr
fistp
sub
movs
arpl
mov
xor
sbb
enter
add
in
nop
cmp
fistp
mov
out
and
inc
sahf
pop
lods
sbb
sub
imul
sti
pop
pop
pop
in
add
shl
and
scas
test
mov
push
popa
out
add
xchg
test
ret
jae
or
adc
mov
xchg
push
out
aam
jmp
jg
pushf
xchg
pop
jns
das
mov
icebp
ror
fiadd
movs
loope
cmp
jae
push
out
or
enter
push
push
iret
add
push
push
sub
pop
nop
leave
push
sbb
adc
mov
xchg
(bad)
fidiv
cwde
bound
outs
mov
push
push
adc
mov
sbb
test
idiv
push
ret
pop
lahf
mov
mov
push
mov
adc
fild
adc
(bad)
(bad)
mov
clc
dec
icebp
xchg
ja
cwde
pop
pop
sbb
sub
xor
test
sub
jl
add
and
fisubr
add
and
ja
or
pop
dec
cs
and
aaa
mov
repnz
aas
outs
int
ds
mov
jmp
fmul
mov
dec
iret
mov
rcl
adc
leave
inc
adc
jb
les
jae
mul
aas
mov
(bad)
dec
sub
enter
shl
lods
(bad)
mov
dec
mov
add
jae
sub
inc
pop
jo
in
xchg
sub
sub
dec
ss
pop
cmps
not
cmp
std
clc
stc
mov
push
fwait
aam
test
imul
retf
fcom
and
xchg
add
lea
cmp
xchg
mov
jbe
push
aad
sub
outs
jecxz
repz
add
out
cmp
cmp
inc
push
arpl
push
add
sub
pop
fnstcw
daa
push
cs
ror
cmps
adc
push
mov
pop
dec
xchg
iret
or
cmps
cmp
and
jmp
pop
je
mov
mov
push
xlat
push
add
(bad)
aas
nop
test
dec
hlt
or
xlat
mov
cmp
shl
inc
jne
jb
and
mov
jecxz
and
xor
in
fsub
push
adc
stos
enter
mov
inc
push
push
scas
pop
mov
add
fadd
cmc
mov
jge
push
jmp
inc
popa
jl
xchg
outs
ins
xor
mov
out
push
inc
xor
icebp
adc
xchg
gs
or
mov
cdq
aam
les
int3
mov
sub
adc
and
mov
sub
xor
ja
loop
inc
ret
and
sub
in
shr
xchg
sbb
push
jns
cmp
cmc
or
repz
sub
scas
jle
xchg
sub
sbb
jmp
sbb
pop
and
aaa
mov
fs
lods
ins
push
inc
repz
cmps
call
add
hlt
mov
and
xor
sbb
scas
ret
sti
push
stos
xor
add
and
mov
mov
add
test
enter
jb
movs
arpl
call
dec
and
int3
mov
stos
pop
sahf
mov
ret
mov
aam
add
push
pop
jp
mov
mov
sahf
test
mov
mov
dec
inc
cmp
pop
enter
ficomp
mov
mov
outs
lds
movs
fwait
adc
bound
xor
fs
jo
add
dec
jno
pop
mov
mov
jge
call
jl
xor
int
cld
pusha
jp
cmp
and
movs
cmps
inc
fidivr
or
xlat
mov
inc
fstp
(bad)
inc
cmp
or
icebp
dec
push
pop
cmp
inc
clc
mov
jle
mov
and
neg
bound
pop
outs
jmp
inc
iret
add
es
inc
sub
movs
enter
sti
pop
mov
cmp
rol
mov
daa
sbb
jl
icebp
fimul
fsub
xor
cmp
jmp
inc
ret
jne
jnp
outs
arpl
mov
aaa
mov
loope
rol
push
iret
add
(bad)
inc
(bad)
rcl
and
xor
mov
(bad)
mov
(bad)
in
in
es
adc
sbb
mov
(bad)
sub
cmp
dec
aad
xchg
inc
int3
add
sbb
push
xchg
pop
mov
pushf
clc
dec
popf
rcr
gs
popa
in
or
test
and
ret
pop
xor
or
mov
dec
pop
sbb
in
push
jno
and
mov
xor
inc
les
jnp
jnp
cmps
cmps
es
mov
(bad)
jns
mov
dec
repz
or
inc
add
outs
movs
nop
cmp
shl
inc
cmp
inc
fidiv
mov
pop
sahf
dec
or
and
dec
nop
test
in
xor
mov
mov
push
stos
loop
out
push
jne
stc
mov
mov
in
test
stos
rcl
dec
xlat
lea
loopne
cmovs
jmp
into
push
pop
lods
arpl
fdivr
(bad)
js
dec
adc
lea
add
cmp
ss
cmc
and
sti
cmps
sub
cmp
inc
jl
js
popa
and
(bad)
into
in
popf
jno
xor
add
scas
push
and
ins
clc
cmp
inc
inc
or
and
push
add
pop
sbb
pop
push
dec
in
fstp
into
lock
inc
scas
pop
mul
icebp
dec
jle
ror
sahf
lods
mov
cli
push
dec
ins
jbe
adc
sub
add
mov
mov
add
loopne
mov
mov
shl
not
stos
push
cmc
push
test
mov
and
dec
sub
xchg
jecxz
test
sub
mov
stos
out
and
enter
(bad)
repnz
shr
sbb
mov
push
pop
sbb
mov
cmp
ss
xchg
dec
aaa
popa
push
jecxz
fdiv
gs
sbb
out
sbb
mov
je
add
inc
pop
rol
sti
adc
cmp
call
dec
mov
or
xchg
cs
ins
inc
(bad)
push
mov
xchg
inc
loopne
(bad)
jns
or
dec
fdivr
cmp
add
push
jno
xchg
dec
sub
enter
adc
dec
xchg
in
fcomi
out
sub
outs
sbb
push
jnp
mov
(bad)
in
test
fadd
dec
cmp
ins
cmc
mul
jae
or
jne
push
xchg
cmp
sbb
inc
mov
jmp
jno
aad
add
jle
retf
lds
je
fs
dec
dec
cmps
pop
dec
sbb
pop
xor
cmp
xor
jle
xchg
jne
das
gs
and
stos
scas
(bad)
xor
(bad)
pop
jno
push
loope
and
jns
imul
pop
dec
lahf
sub
push
(bad)
shl
mov
test
pop
(bad)
repz
movs
dec
jmp
fldenv
cmc
mov
cmp
xchg
test
mov
sub
or
imul
and
repnz
loop
cmp
in
mov
faddp
and
ss
sub
test
ds
dec
fsubr
dec
pop
stos
jge
xchg
or
jg
scas
sub
push
loop
dec
sub
jo
int
fldcw
out
mov
and
sbb
sub
rcr
dec
scas
fs
mov
jne
or
adc
cmp
stos
retf
jmp
lock
stc
ret
std
mov
mov
adc
pusha
loope
mov
pop
test
or
rcl
push
icebp
outs
mov
call
jmp
test
aaa
push
push
xlat
adc
sar
outs
test
out
lds
js
pop
jecxz
iret
mov
mov
mov
inc
test
(bad)
repz
sbb
fisttp
xor
xor
mov
cs
cdq
jo
push
loop
movs
test
icebp
add
inc
jecxz
ficomp
dec
sub
mov
mov
mov
fcomp
ja
push
xchg
pusha
lods
and
xor
xor
lds
adc
push
mov
hlt
inc
push
mov
in
xlat
push
cmp
int
add
jle
fcom
fwait
call
repz
jnp
imul
out
jp
jp
sub
mul
inc
mov
add
shl
mov
cmp
fdivrp
ss
popa
in
xor
xlat
cs
jp
inc
adc
sub
das
inc
mov
lahf
sub
mov
cmp
(bad)
mov
cwde
dec
cmp
out
scas
lahf
ds
cwde
add
mov
mov
repnz
cdq
sbb
in
stc
pop
mov
sub
jno
cmps
xlat
xchg
call
ret
or
outs
sbb
gs
mov
xchg
and
out
inc
adc
int3
outs
xor
(bad)
lock
sub
rcl
add
and
jge
std
mov
push
std
cmp
js
gs
inc
imul
inc
cwde
sub
mov
mov
sbb
aas
es
ja
xchg
push
pop
lods
push
mov
jns
scas
fwait
or
outs
scas
(bad)
push
call
push
stos
fsub
loope
mov
mov
push
add
push
adc
dec
dec
adc
fwait
lock
arpl
mov
lds
sub
dec
scas
retf
inc
call
scas
lods
push
and
dec
frstor
scas
les
inc
js
pushf
ss
lahf
xor
jb
push
rol
or
(bad)
scas
xchg
mov
jmp
adc
mov
data16
pop
cmps
mov
add
sub
cmp
test
xor
pop
xor
mov
mov
sbb
hlt
or
xchg
dec
cmp
test
adc
mov
mov
leave
fbstp
inc
cmp
stc
xor
out
aaa
ds
addr16
pushf
xor
pop
lds
xchg
xchg
(bad)
outs
xor
mov
or
mov
mov
and
rcl
sbb
and
mov
mov
scas
jecxz
jne
cmp
xchg
push
jbe
push
sbb
adc
add
jecxz
mov
pop
jnp
mov
inc
adc
pusha
out
cmps
pop
jae
fbstp
lahf
jge
xchg
mov
and
ret
std
out
sbb
or
clc
pushf
arpl
or
mov
js
stc
stos
push
addr16
data16
jp
sub
add
stos
add
mov
xor
push
shl
shl
cmp
(bad)
test
xchg
jmp
or
sub
jge
adc
or
adc
add
inc
arpl
cs
std
mov
call
xchg
xor
fdiv
jmp
sub
sahf
mov
ss
xchg
xor
mov
inc
adc
sbb
out
scas
pop
jecxz
inc
ret
and
das
scas
xchg
lods
cwde
aas
inc
repnz
in
test
cld
mov
sub
add
and
adc
aad
push
mov
icebp
sub
pusha
adc
imul
div
ins
loop
mov
mov
stc
xchg
mov
or
or
pop
sbb
fnstcw
push
int
repnz
cmp
loop
(bad)
fsub
aaa
pusha
pop
inc
sbb
fld
fwait
push
std
jmp
lds
sar
xor
push
movs
cld
push
fcom
sbb
xor
cmp
xchg
fdiv
push
aaa
idiv
mov
dec
sar
add
sbb
(bad)
in
repz
(bad)
(bad)
stc
stc
(bad)
mov
lahf
jmp
jae
movs
and
lods
or
cdq
int3
mov
pop
enter
mov
leave
je
sbb
xor
rep
xchg
add
push
xor
add
clc
and
mov
pop
sbb
push
out
add
into
mov
movnti
sub
jge
jbe
cmp
add
sti
lods
enter
sub
xchg
xchg
mov
fisub
in
pushf
xchg
imul
jo
(bad)
mov
ins
and
nop
pop
enter
xchg
jmp
push
bound
shr
pop
fidivr
mov
dec
push
mov
in
dec
pop
mov
gs
ds
jae
out
imul
repnz
cli
mov
hlt
inc
ret
xchg
or
or
test
sbb
and
push
dec
movs
test
mul
fidiv
cmp
test
imul
or
rol
dec
sbb
ins
xor
retf
les
push
icebp
out
sbb
jb
add
pusha
pushf
mov
cmp
cmc
xor
dec
pop
out
sbb
sbb
(bad)
les
(bad)
jns
adc
in
test
adc
rcl
mov
pop
push
inc
dec
pop
push
aam
xchg
ds
cli
out
mov
xchg
ds
outs
xor
iret
mov
pop
retf
jnp
iret
aam
pop
out
dec
mov
rcl
in
ror
adc
inc
pop
je
sbb
push
mov
mov
adc
pop
push
enter
add
lea
inc
lea
cs
aam
js
xchg
hlt
je
les
ficomp
jbe
jmp
rcl
pop
rcl
cwde
scas
pop
xchg
test
retf
push
mov
jge
dec
div
(bad)
cdq
call
cmp
pop
out
call
test
inc
dec
sbb
mov
mov
imul
cmp
jae
mov
or
pop
lock
or
in
adc
mov
fdiv
add
pop
pop
inc
out
cmp
imul
xor
(bad)
imul
ja
in
int
rcl
nop
pop
mov
inc
and
jg
cmp
cmps
outs
pop
ss
cmp
jge
xor
jno
mov
pop
pushf
cs
pop
mov
fwait
mov
pop
adc
movs
loopne
inc
(bad)
repz
int3
xchg
push
leave
icebp
add
fnstsw
int3
shl
mov
mov
sahf
retf
lahf
cli
mov
xor
aaa
je
inc
ds
das
es
ret
mov
jne
pop
dec
and
repnz
mov
xchg
fsubr
popa
cs
and
sti
fs
in
shr
in
mul
cmp
cmp
cmp
lods
js
push
rol
enter
jecxz
jne
sub
(bad)
test
xchg
mov
adc
dec
int
popf
mov
mov
call
mov
cmp
gs
arpl
mov
jmp
movs
pop
fidivr
(bad)
mov
movs
and
movs
inc
repz
or
dec
cmp
cli
add
cmps
inc
fisub
aas
rol
jo
ins
movs
ins
fisub
es
sub
bnd
push
movs
xchg
mov
and
push
fs
into
nop
sbb
pop
push
push
test
pop
mov
pop
in
daa
sub
leave
cli
pop
push
push
je
jno
fistp
mov
loope
adc
sbb
int
xchg
imul
(bad)
sbb
(bad)
xchg
scas
or
je
mov
push
sub
mov
pushf
mov
inc
dec
lea
mov
call
jmp
xlat
push
push
mov
xchg
sbb
mov
popa
xchg
jo
mov
add
gs
ror
inc
jge
mov
sub
ffree
dec
xor
sub
mov
inc
jb
leave
outs
push
mov
mov
mov
ja
or
xor
inc
aaa
cs
pop
and
add
dec
xlat
out
data16
and
add
call
cmp
scas
out
jne
inc
imul
stos
ret
mov
fwait
jne
dec
or
sub
idiv
cmp
out
xchg
daa
dec
ret
xor
bound
fsub
(bad)
sub
dec
inc
push
mov
adc
mov
xor
mov
(bad)
bound
mov
pop
xor
fdivr
repz
ja
out
xor
loopne
das
repnz
push
sbb
data16
adc
push
xchg
pop
sbb
int3
nop
movs
call
adc
mov
in
add
pop
push
and
(bad)
sahf
popf
mov
cs
out
adc
jp
cmp
pop
mov
daa
cmp
add
bound
sbb
pop
xor
xor
pop
mov
sbb
xchg
pop
cmp
lea
xchg
xchg
mov
outs
stos
or
ror
mov
in
cmp
out
jecxz
sbb
mov
aad
mov
lods
out
movs
pop
mov
jg
pop
jo
push
or
loop
cmc
sbb
mov
dec
mov
aas
xchg
pop
popf
imul
xchg
fcomip
mov
addr16
and
inc
fs
mov
push
mov
sbb
shl
fcom
or
mov
jne
add
daa
jecxz
cmp
sahf
lock
and
adc
jno
xor
out
sbb
cmp
sar
xor
push
fisubr
cdq
jo
and
scas
cmp
mov
jbe
shr
push
pushf
pop
xchg
sub
cdq
mov
hlt
pop
mov
sbb
mov
adc
sub
ret
out
mov
(bad)
cli
stc
movs
hlt
out
inc
push
adc
je
hlt
iret
dec
lods
ins
and
push
mov
div
(bad)
cdq
dec
inc
cmps
int
push
jle
cdq
jmp
int3
or
pusha
sub
cs
(bad)
jle
xor
jb
fstp
fwait
in
ret
inc
fs
push
faddp
cmps
in
ss
inc
aad
std
mov
ins
je
(bad)
(bad)
cmp
icebp
aam
mov
adc
sub
adc
stos
into
jno
pushf
addr16
mov
dec
out
aas
stos
clc
int
retf
cmps
jg
in
ds
ds
stc
cmps
(bad)
aas
mov
add
adc
std
adc
call
mov
(bad)
xchg
ds
test
repz
fs
xchg
or
je
inc
retf
jle
inc
out
xchg
inc
pop
loope
xchg
sub
xchg
mov
jmp
and
ds
add
cmp
and
add
ficom
jae
pop
cdq
xor
mul
cli
mov
sub
scas
arpl
inc
movs
cmc
jo
pop
mov
mov
mov
adc
mov
fisttp
push
pop
cmp
ins
out
sub
scas
das
or
sar
adc
dec
mov
iret
adc
sbb
mov
inc
pusha
lock
jle
call
sar
je
inc
fadd
sbb
es
scas
div
cwde
(bad)
pop
call
repnz
inc
popa
rcr
mov
(bad)
and
fdiv
xor
push
add
mov
dec
or
mov
loope
push
into
leave
sub
jne
sub
es
out
(bad)
nop
mov
pushf
push
fisubr
xchg
loopne
inc
in
mov
xchg
mov
cmp
jl
loopne
test
dec
fwait
mov
pop
dec
push
out
mov
ret
push
shl
jl
cmp
sub
sbb
dec
ja
inc
leave
data16
lods
inc
dec
(bad)
fdiv
jnp
adc
popa
pop
add
popf
jp
mov
cmps
movs
ss
sbb
sbb
mov
sbb
jnp
scas
push
add
fild
leave
ret
mov
call
adc
dec
fidivr
mov
adc
mov
les
icebp
mov
mov
mov
daa
cs
rcr
in
fwait
dec
jmp
ds
lock
push
loop
xor
not
cmp
out
mov
and
test
xlat
aam
or
aaa
jo
jg
ret
movlps
out
cmp
fld
bound
sbb
push
stos
and
mov
jl
push
jge
jp
cs
dec
cld
aam
pop
ins
adc
leave
add
add
imul
cmps
dec
mov
jns
enter
add
inc
ror
(bad)
sti
dec
add
iret
adc
xchg
stos
shl
repz
std
mov
sub
popf
mov
in
lahf
ret
and
add
jle
pop
hlt
xchg
sbb
pop
iret
add
(bad)
iret
imul
xor
icebp
mov
jp
scas
shl
scas
inc
mov
adc
inc
inc
cmp
scas
shr
rcl
int
sub
clc
js
xchg
(bad)
add
ja
ins
jb
ficom
push
movs
or
aam
xchg
je
jbe
cli
mov
out
xor
cld
or
push
ret
and
mov
imul
add
leave
jecxz
pop
xchg
retf
cmp
cli
pop
lahf
mov
sahf
xchg
int
cmp
xor
das
mov
jns
mov
xchg
pop
or
lea
xor
aaa
xor
jno
or
or
lea
iret
dec
out
adc
ja
gs
pop
mov
mov
clc
fnstenv
in
repnz
sub
add
in
inc
cli
popf
pusha
lods
hlt
aaa
fmul
lahf
mov
dec
adc
out
imul
xchg
fld
sbb
retf
jge
xchg
stos
loope
jae
inc
vunpckhpd
ror
cs
sti
or
int
(bad)
mov
and
jae
stc
adc
pop
jmp
pop
xor
inc
outs
pop
(bad)
sub
sbb
dec
das
loope
cmc
sub
xchg
push
mov
push
push
jl
sub
or
hlt
add
sub
mov
in
cmp
in
and
pop
push
ficomp
xchg
mov
pop
jl
mov
hlt
xor
xchg
adc
cmps
mov
inc
and
popf
test
push
xchg
adc
cli
push
lods
nop
out
arpl
test
lea
jo
mov
or
dec
push
inc
sbb
or
adc
inc
ret
rcr
mov
(bad)
fsubr
jmp
sub
aam
scas
fnsave
xchg
call
stos
jge
leave
xor
mov
sahf
jg
cmp
jns
push
and
in
rol
jp
movs
jb
mov
in
cmps
fstp
test
mov
lods
jl
inc
into
in
xchg
lock
adc
jb
shr
(bad)
and
cmp
jl
cmp
mov
fdiv
push
adc
sti
dec
out
or
mov
inc
icebp
sub
add
sbb
adc
push
push
imul
sbb
scas
mov
cmp
add
mov
imul
mov
out
jl
cmps
pop
jecxz
inc
inc
push
movs
or
(bad)
movs
test
fldenv
dec
cmp
ror
pop
jae
or
dec
mov
es
inc
les
mov
sub
test
js
loope
inc
(bad)
push
int
xor
cmc
mov
cmp
mov
pop
es
out
jae
pop
cmp
lahf
adc
or
sub
or
xor
fcmovnb
int3
ins
test
loop
cmps
cwde
pop
test
stc
test
pop
in
push
mov
into
clc
lea
xor
push
iret
jb
aad
xchg
sbb
jne
ret
cdq
inc
sub
push
aad
jge
es
adc
adc
cmp
xchg
jns
dec
cmp
dec
leave
mov
cmp
les
aaa
or
rcr
scas
mov
mov
fwait
add
out
cmp
mov
fs
sbb
pop
fsub
jle
pop
jb
cmp
pusha
pop
mov
popf
stos
je
enter
dec
sub
outs
test
push
dec
mov
push
out
fisubr
fadd
cdq
jg
jno
xchg
sbb
fwait
xchg
push
push
out
(bad)
in
xchg
mov
pop
repz
cmps
push
inc
dec
mov
pop
dec
adc
dec
mov
jne
mov
outs
icebp
enter
fcom
fisub
inc
daa
inc
clc
mov
adc
fdiv
imul
shl
mov
mov
adc
inc
fs
pushf
in
push
(bad)
in
dec
fadd
sub
loop
leave
jmp
je
xchg
mov
shr
push
lahf
out
xchg
shl
inc
pop
mov
repnz
jns
add
jb
(bad)
retf
jmp
xchg
enter
adc
cld
inc
mov
pop
adc
mov
adc
lods
pop
and
sub
loop
rcr
int
ret
sahf
iret
pusha
popf
jae
test
xchg
pop
or
pushw
cmp
aad
dec
mov
gs
aam
ins
jecxz
jmp
xor
cdq
adc
cmc
sbb
cmp
loopne
rcr
xor
jbe
out
pop
inc
cmp
inc
imul
(bad)
fsubr
je
repnz
ss
fist
adc
mov
push
and
cs
ja
mov
mov
xor
and
mov
(bad)
sub
popa
in
test
push
hlt
pop
les
inc
push
cmp
cli
jo
out
sbb
jle
inc
test
xchg
imul
fcmove
out
mov
pop
jp
cdq
sbb
daa
and
in
sbb
repnz
or
outs
out
pop
jno
xchg
pop
push
mov
dec
or
push
and
jae
movs
and
xchg
cs
xchg
shr
pop
xchg
push
dec
fstp
and
loope
addr16
adc
das
jb
(bad)
sbb
and
hlt
aad
ds
pop
jno
xchg
pop
inc
mov
int3
or
mov
xlat
out
xor
push
mov
mov
pop
popf
fadd
add
or
pop
(bad)
fdiv
sub
cmp
mov
aaa
pop
loopne
push
cmps
and
or
lea
std
adc
pop
rcr
sub
push
mov
repz
jl
mov
sub
popf
sti
lods
outs
jns
or
clc
xlat
div
add
xchg
adc
arpl
repnz
inc
mov
test
outs
adc
push
idiv
imul
daa
add
enter
sub
mov
fxch
mov
pusha
in
repnz
sub
lods
shr
or
push
das
xor
sar
inc
sbb
adc
rol
(bad)
cdq
div
das
mov
mov
scas
xchg
or
test
sub
je
or
in
pop
mov
pop
or
icebp
push
retf
je
addr16
jne
stc
add
pop
or
jle
rol
rol
mov
push
lods
(bad)
jp
jp
stos
repnz
aam
mov
ss
ja
jbe
sbb
push
sbb
push
call
add
out
nop
and
ja
jmp
mov
inc
sbb
adc
imul
xchg
and
inc
xor
dec
inc
pop
loope
stos
or
xchg
xor
outs
test
icebp
jno
jg
lods
(bad)
pop
jnp
mov
sub
rcr
xchg
arpl
add
movs
nop
inc
inc
movs
rcr
test
xchg
mov
sub
inc
and
in
push
sub
out
loope
jne
int
fs
or
fdiv
inc
icebp
call
ins
xor
sbb
ja
(bad)
adc
cmp
ds
jb
mov
push
pop
jne
hlt
jmp
mov
cmp
mov
pushf
aam
cdq
shl
sbb
mov
mov
das
cli
cli
and
add
mov
cmc
add
push
or
(bad)
sbb
es
stc
ja
cmp
jno
sbb
or
stos
sbb
in
dec
fs
jl
das
jb
out
xchg
fild
stos
call
mov
add
cs
pop
test
pusha
mov
jns
xor
ret
and
scas
pop
jo
add
inc
hlt
int
xor
fbstp
imul
jb
mov
into
lods
ds
pop
push
sub
push
test
push
dec
ret
test
mov
and
retf
jo
jg
jmp
mov
jb
jecxz
add
lock
test
jmp
push
xchg
enter
mov
jns
ss
sbb
cmp
mov
popf
xchg
jle
je
xor
inc
imul
lahf
jge
mov
xor
js
cmp
jecxz
in
jne
in
xor
repz
sub
adc
push
icebp
xchg
in
popa
mov
inc
js
mov
mov
les
test
jecxz
mov
les
pcmpeqw
jge
sub
jo
imul
ret
mov
jmp
pop
fidivr
mov
fwait
stos
ja
xor
push
fbld
jne
xchg
mov
daa
shr
pop
test
fs
add
mov
jb
sub
jno
mov
xor
adc
adc
(bad)
jle
add
jbe
xchg
push
aaa
call
ss
pop
lods
or
jp
imul
repz
jnp
dec
out
adc
dec
inc
add
fsubr
jae
xor
push
xor
sub
xlat
out
jne
addr16
sub
jle
add
cs
fcom
push
sbb
out
(bad)
test
out
retf
shl
ins
or
dec
jns
stc
cmp
leave
jmp
fnstenv
mov
stos
std
cmp
or
sahf
jl
aam
and
leave
jge
mov
test
repnz
mov
cmp
add
cld
mov
cmps
movs
xchg
jb
scas
mov
sahf
repz
leave
rol
out
mov
es
je
jno
not
test
in
dec
or
push
sbb
pop
clc
push
xchg
in
mov
loop
cmc
lds
nop
and
jle
inc
inc
retf
sub
mov
jecxz
jbe
xchg
fcmovbe
inc
js
xchg
xchg
xchg
fwait
and
pop
adc
mov
sub
jge
cmp
add
jns
pop
mov
in
cmp
movs
mov
sbb
adc
add
add
xchg
jl
jno
ret
fdivp
rcr
movs
out
js
cdq
sub
jmp
or
ficom
cmp
cld
mov
xchg
fdivr
hlt
(bad)
mov
mov
mov
sub
sbb
ins
push
pop
jg
sub
fsubr
aad
test
xchg
mov
push
repz
xor
fist
clc
sub
(bad)
fmul
dec
mov
add
repnz
pop
push
sti
sub
rcr
ret
or
in
mov
mov
cmp
mov
mov
js
inc
nop
xchg
idiv
in
(bad)
mov
sbb
pusha
jmp
mov
sub
movs
add
push
inc
xchg
sbb
pop
fs
adc
mov
lea
mov
test
push
push
out
xlat
hlt
daa
sbb
enter
push
adc
push
push
ss
cdq
dec
(bad)
cld
cmp
movs
xchg
add
icebp
int
icebp
dec
add
inc
cmp
push
jo
jge
test
int
lds
mov
pushf
push
in
jbe
mov
mov
cmp
cmp
jl
loopne
out
daa
dec
xor
xor
add
mov
xchg
out
mov
cdq
fisttp
inc
pop
call
push
mov
das
mov
aas
into
jmp
or
stos
inc
cmp
and
aas
int
inc
iret
mov
pop
into
xchg
jmp
bound
mov
adc
xchg
mul
mov
mov
(bad)
and
sar
xor
mov
retf
pop
jle
lods
sub
xchg
inc
lea
shr
js
sbb
pop
or
cmp
xor
sub
jns
jle
mov
mov
popf
out
mov
pop
fst
jne
fdiv
int3
(bad)
in
repnz
push
cmp
xchg
fldenv
retf
repz
outs
je
imul
pop
jle
mov
adc
aam
retf
cdq
mov
dec
loop
mov
(bad)
jmp
movs
pop
pop
ins
rcl
push
add
test
(bad)
lahf
and
push
lea
and
imul
sbb
adc
fld
mov
fucomi
mov
in
mov
adc
and
jae
mov
jae
pop
lahf
mov
mov
jge
inc
sub
pop
cli
jle
mov
iret
mov
mov
cli
xchg
xor
mov
jmp
add
cs
imul
int
jno
sti
test
sbb
add
add
call
imul
push
mov
sar
inc
push
in
shl
dec
fild
test
sub
cmp
pusha
scas
push
not
cli
jb
out
out
pop
push
pop
sub
mov
mov
call
and
aas
or
push
add
inc
les
movs
pop
imul
sahf
and
fs
shl
xor
xor
leave
in
stos
and
scas
or
call
push
mov
stc
pushf
pop
pop
and
inc
lock
jmp
ja
loope
mov
int
mov
out
push
fcmovb
pop
sub
xchg
xchg
jo
sbb
inc
cld
cwde
xchg
fbstp
adc
cmp
scas
fist
jg
push
call
fst
adc
scas
imul
xor
sub
pop
inc
adc
mov
stos
push
cmp
pop
jmp
add
push
xchg
mov
outs
push
dec
xchg
cli
jmp
repnz
push
je
pop
fldenv
pop
fcmovnb
add
ror
add
or
mov
dec
mov
pop
aad
bound
push
xchg
push
xor
dec
je
pop
retf
add
jmp
mov
movs
push
pop
sub
(bad)
in
adc
sbb
pusha
in
xor
ror
inc
fdiv
fmulp
push
ret
cdq
arpl
inc
stc
hlt
sar
or
cmc
xor
imul
ins
jmp
inc
push
xchg
push
dec
sub
neg
mov
aam
nop
scas
jmp
push
cmp
mov
sbb
pop
sbb
arpl
push
shl
fistp
jbe
push
ins
gs
imul
stos
leave
push
fnstenv
scas
push
jnp
pusha
pusha
and
fidivr
jo
push
and
mov
rol
cld
into
or
adc
call
dec
loopne
in
(bad)
cli
je
adc
push
call
jp
adc
std
retf
adc
aam
dec
dec
js
outs
and
lea
movups
fbstp
cwde
outs
ins
out
test
xchg
push
call
stc
cmp
dec
iret
sti
rcr
or
jno
bnd
call
or
movs
out
cmps
sub
js
jle
xor
add
pop
xbegin
xchg
movs
xchg
add
in
sbb
mov
jg
dec
xor
mov
ficomp
xchg
jge
or
jg
call
sbb
aam
mov
repnz
cmp
inc
xor
cwde
(bad)
jge
loopne
aam
push
cwde
lods
movs
sub
gs
out
fadd
pop
ficom
adc
ret
stos
adc
mov
loope
daa
inc
es
sub
mov
push
ret
mov
rcr
aad
bound
imul
dec
push
fld
aas
mov
jno
mov
inc
add
push
imul
fsubr
fnsave
neg
mov
(bad)
jne
pushf
shr
imul
adc
and
sub
rcl
push
sbb
loope
cmp
outs
push
push
(bad)
bound
sub
mov
sti
fdiv
jo
mov
sbb
(bad)
fimul
imul
mov
sbb
or
fcmovne
addr16
jecxz
fimul
std
push
and
ret
cs
not
and
hlt
adc
push
je
js
sahf
cmp
pop
sbb
popf
aam
inc
sbb
sub
add
mov
or
jp
in
pop
pop
mov
ss
in
outs
shl
cmp
mov
and
and
cdq
iret
dec
stc
stos
out
imul
jae
mov
jbe
shl
xlat
cs
mov
mov
std
adc
add
jne
inc
dec
and
cli
in
das
sar
(bad)
rcr
fsubr
xchg
push
push
jecxz
xchg
jns
lea
or
jnp
and
and
mov
data16
jmp
je
sub
sbb
mov
xchg
mov
fcomp
add
inc
sti
popf
mov
hlt
rcr
sub
xor
mov
push
rol
mov
add
pop
pop
dec
test
inc
rcr
shr
out
in
jmp
mov
into
nop
pop
scas
lods
dec
sbb
ror
and
mov
in
cmp
mov
add
or
jo
push
retf
(bad)
sbb
mov
out
out
es
into
cmp
mov
push
adc
mov
inc
pop
mov
test
dec
ret
or
adc
test
push
stc
pop
lods
shl
dec
cmps
test
out
mov
aad
in
mov
xchg
xchg
scas
fdiv
pushf
and
mov
cmps
aaa
add
je
mov
mov
call
jae
aaa
push
sub
push
adc
(bad)
push
jecxz
xchg
xchg
sti
dec
xor
int3
push
mov
into
das
mov
adc
adc
std
pop
cs
ins
jp
mov
rcr
scas
cmps
sub
and
cwde
loope
int3
add
mov
cmc
aad
loope
adc
leave
dec
(bad)
inc
cmp
lods
mov
jmp
xchg
mov
sub
xchg
mov
test
into
(bad)
jge
xchg
mov
push
fwait
jne
jnp
mov
imul
sbb
xlat
jmp
sti
mov
test
int
repz
or
std
sbb
stos
test
(bad)
in
mov
add
idiv
sbb
inc
mov
mov
push
out
mov
xchg
and
pop
cli
add
nop
js
jmp
add
push
daa
or
jmp
cmc
mov
fild
sbb
jmp
xchg
fmul
push
(bad)
fs
mov
outs
shl
or
jnp
das
fmul
mov
add
es
xchg
movs
cmps
jmp
daa
outs
movs
imul
aad
(bad)
add
mov
into
mov
ja
and
aam
mov
ret
jno
xor
test
dec
sub
test
into
aad
daa
push
or
sbb
test
div
pop
ret
adc
jne
bound
jp
nop
and
xor
gs
pop
imul
dec
mov
adc
dec
fcmovnbe
mov
test
mov
fwait
mul
dec
loope
dec
imul
inc
jle
xor
and
and
mov
sbb
scas
cli
sbb
lahf
mov
inc
gs
mov
cmps
shr
shl
retf
test
mov
cmp
lock
jae
adc
out
pop
cmp
push
mov
mov
cwde
jae
inc
mov
mov
and
movs
ss
push
cmp
jecxz
add
push
fcom
je
mov
jmp
mov
retf
jl
(bad)
loopne
je
sub
sub
aam
arpl
out
cmc
xchg
and
cmp
test
ret
data16
lods
mov
sub
jns
cmp
jmp
out
mov
add
out
and
daa
lahf
jp
mov
stos
scas
popa
jmp
in
stos
mov
xchg
jmp
fdivr
and
adc
mov
and
fwait
add
hlt
leave
xlat
(bad)
lods
enter
or
dec
sub
xlat
or
in
shl
loope
cmp
adc
in
adc
adc
jle
push
push
ds
jnp
push
lea
lds
ss
es
sbb
(bad)
mov
dec
movs
xor
scas
pop
cs
or
fist
push
xor
xlat
adc
out
dec
and
dec
jmp
cmp
popa
nop
out
xchg
std
jg
pop
inc
ret
xor
in
jmp
imul
out
xor
push
push
dec
btc
in
add
cmp
mov
jae
xchg
push
lea
test
leave
sub
leave
enter
push
add
test
inc
idiv
out
movs
ss
ficom
dec
loopne
sub
sysexit
cli
in
retf
pop
test
push
out
daa
(bad)
cmp
(bad)
jb
sti
fld
aad
mov
inc
shl
retf
xchg
ins
pushf
rcl
add
mov
xchg
neg
mov
jmp
adc
sbb
sub
jne
or
std
fist
mov
push
sbb
jmp
adc
hlt
push
jmp
jle
sbb
fs
mov
cmps
ja
sbb
add
and
xchg
mov
and
or
sti
mov
or
outs
lods
out
ja
sub
mov
jae
dec
aam
sbb
or
repz
sahf
sub
fs
sub
int3
test
pop
sbb
je
in
std
daa
daa
es
xchg
and
add
arpl
xchg
mov
std
scas
inc
sbb
add
sub
mov
test
push
sbb
add
stc
out
add
jo
pusha
adc
jp
add
push
stc
add
imul
xor
leave
jl
mov
xor
ja
jp
and
pop
mov
es
add
fcomp
icebp
push
jae
xlat
dec
mov
adc
xchg
jp
xor
shl
frstor
fbld
leave
mov
repnz
inc
cmp
les
dec
(bad)
repnz
rcr
and
ins
fs
call
cld
add
mov
pop
fsubr
mov
pop
ja
ja
mov
cmp
pop
mov
(bad)
push
mov
mov
fld
push
clc
dec
mov
not
push
fcmovbe
mov
and
lea
mov
stos
and
call
dec
adc
pusha
iret
jo
xchg
lea
sar
cli
call
ficom
js
into
sub
push
push
mov
ret
call
arpl
ret
pop
mov
pusha
out
sbb
xor
xchg
and
xor
lahf
nop
rol
not
ficom
inc
mov
sub
aas
dec
and
pop
(bad)
push
loope
(bad)
mov
xchg
js
retf
cmp
scas
and
rcl
push
idiv
pop
or
(bad)
imul
mov
or
inc
xor
inc
mov
jb
adc
jecxz
jl
push
ins
call
xchg
xchg
stos
jbe
push
ret
and
add
repz
test
arpl
mov
mov
dec
sub
cli
les
fmul
add
mov
xchg
(bad)
imul
push
jmp
fsub
dec
or
in
aaa
push
inc
loope
add
push
cdq
jb
jne
rol
icebp
mov
and
pop
scas
in
pinsrw
stos
cmps
adc
fucomip
sbb
stos
mov
sub
scas
xlat
out
xchg
inc
and
xor
cmps
es
nop
mov
jg
jmp
fwait
out
movs
and
mov
stos
popf
xchg
add
pop
cli
inc
std
xor
bound
sub
sbb
adc
imul
in
(bad)
sub
std
(bad)
adc
mov
and
mov
inc
mov
pop
mov
out
imul
sbb
inc
mov
push
mov
out
pop
pop
imul
inc
icebp
cwde
pop
cmp
push
pushf
out
adc
pop
imul
jnp
fisubr
fwait
adc
fild
pop
out
xor
add
jne
adc
mov
add
iret
mov
movs
arpl
push
inc
xchg
mov
fistp
push
or
sub
fimul
mov
out
sub
xor
pusha
retf
mov
pop
dec
cmps
xlat
nop
xor
into
adc
rcr
mov
xchg
popf
jl
fwait
sbb
xor
sbb
(bad)
push
cmp
mov
fsubr
inc
mov
jnp
jecxz
cmp
cmp
inc
dec
ret
loope
dec
stc
xchg
jmp
sbb
sub
and
aaa
sub
and
and
and
pop
push
hlt
call
test
sbb
repz
jle
cmps
(bad)
adc
xchg
iret
dec
test
push
pop
cmps
adc
push
and
add
inc
lods
add
jp
jg
push
outs
hlt
addr16
or
and
retf
in
sub
jp
loopne
nop
mov
or
es
pop
jae
popf
cld
mov
jle
in
and
data16
pushf
push
jecxz
push
pop
ja
(bad)
imul
std
dec
enter
rcl
rol
cmp
test
xlat
shl
and
call
dec
iret
enter
sbb
xor
inc
retf
in
xchg
xchg
jnp
sbb
jo
int
sbb
not
lods
scas
mov
js
sahf
mov
add
push
jmp
(bad)
lods
adc
pop
mov
pop
in
jb
pop
(bad)
mov
popa
jle
pop
dec
jnp
rcl
aaa
data16
(bad)
ins
xchg
xor
push
sub
shl
mov
mov
scas
pushf
imul
stc
les
jns
rcl
mov
int
lea
enter
inc
add
inc
(bad)
sbb
mov
pushf
ja
mov
loope
aam
jnp
ss
cmp
or
leave
mov
push
sahf
sbb
ja
aam
stos
leave
add
fild
in
xchg
push
loopne
mov
cmp
mov
cwde
pop
add
adc
push
or
mov
and
xor
shr
cmps
and
jnp
je
out
mov
clc
in
arpl
sbb
das
out
stos
jmp
pop
and
push
jnp
push
mov
in
sub
xor
mov
sub
lea
call
shr
iret
add
sub
popa
(bad)
(bad)
clc
addr16
lgs
aaa
xchg
clc
inc
mul
outs
adc
ja
pop
cli
(bad)
inc
and
mov
in
jnp
add
sti
push
lods
pop
lods
test
mov
mov
mov
test
cmp
sbb
rcl
mov
xchg
dec
aam
pop
popf
mov
pop
mov
sub
jbe
sub
jnp
mov
sbb
push
add
add
pop
xor
xchg
xor
inc
sbb
stos
push
sub
or
pop
adc
push
(bad)
shl
cmp
mov
idiv
mov
pop
into
loop
jnp
fiadd
sub
repz
les
aaa
out
mov
add
repnz
pushf
add
pop
xor
adc
xchg
hlt
clc
cmp
pop
jmp
je
sbb
packsswb
mov
inc
xchg
mov
loope
rol
mov
popf
out
ror
xor
div
outs
add
cli
scas
sbb
pop
std
es
and
ss
shl
lahf
in
cmp
xor
or
mov
cmps
push
mov
jnp
push
push
mov
mov
sub
in
mov
xor
dec
cdq
adc
rcl
cwde
shr
mov
jg
cmp
push
mov
daa
aaa
scas
jb
lea
or
enter
movs
cmc
pop
loope
add
loope
mov
xchg
fistp
dec
cmps
fwait
cs
dec
cmp
cld
popf
outs
ja
push
movs
imul
jo
loopne
jg
add
mov
loope
loop
jecxz
ror
and
xchg
dec
or
ds
das
sbb
mov
dec
jle
sbb
mov
jg
or
movs
or
lods
aaa
dec
mov
scas
sub
sbb
add
mov
push
(bad)
stc
inc
sub
push
xchg
xor
adc
push
and
mov
cli
sbb
xchg
into
mov
ret
movs
jae
mov
out
or
dec
jle
push
arpl
dec
mov
mov
pop
pop
dec
pop
sub
push
sbb
mov
cmps
dec
fs
lea
imul
mov
xchg
je
retf
and
sbb
mov
or
cmp
push
sbb
push
xor
icebp
or
or
rcl
xchg
jo
or
mov
outs
xchg
je
lods
imul
xchg
retf
cwde
movs
push
clc
fnstcw
sbb
aad
test
pop
stos
inc
mov
mul
int3
mov
lock
movs
(bad)
in
out
push
shl
hlt
cs
xchg
add
sub
fbstp
xlat
nop
or
data16
dec
jmp
add
sub
and
fdivr
cwde
aam
fidivr
xor
retf
fld
dec
call
loope
call
push
sbb
enter
xor
popf
push
pop
mov
mov
mov
test
or
(bad)
jp
cmp
scas
hlt
or
adc
aam
mov
xchg
call
mov
std
adc
jo
jmp
and
jp
mov
jbe
aas
and
popf
ret
adc
repnz
xor
arpl
add
adc
fnstenv
add
jg
inc
loop
(bad)
sub
aaa
popa
pusha
test
push
and
popa
fistp
into
hlt
into
mov
add
jle
aam
adc
mov
fbstp
xchg
mov
lock
sbb
pop
outs
sahf
push
fst
pop
mov
ret
iret
(bad)
sbb
(bad)
pop
mov
mov
jo
hlt
pop
pop
shr
sub
xchg
push
and
push
fisub
sub
add
cwde
fnstenv
xchg
pop
jae
cli
enter
mov
xor
mov
sbb
out
lds
mov
lods
cmp
mov
retf
mov
mov
cmp
jl
jo
out
sbb
adc
sahf
movs
jecxz
inc
mov
shl
cmp
in
cmp
mov
jecxz
or
retf
pop
(bad)
dec
push
rcr
inc
out
add
movs
daa
adc
push
xor
lods
jb
pop
scas
inc
popf
(bad)
xor
jb
imul
and
fisttp
or
jge
aam
hlt
pop
hlt
je
or
xor
sub
cmp
lods
pop
dec
add
pop
je
pop
push
ins
data16
sbb
lock
fisttp
ins
gs
sbb
imul
pop
xadd
(bad)
push
sub
mov
add
repz
aaa
fist
es
in
ret
das
test
int
out
mov
retf
pusha
add
push
or
inc
sub
bound
add
and
stc
add
jg
xor
adc
cmp
cmp
jle
adc
cmps
bound
je
neg
int3
jecxz
ins
stos
push
out
(bad)
dec
je
push
jbe
loopne
mov
(bad)
mov
cmp
sub
rcr
shr
iret
xchg
fldenv
push
dec
or
push
lods
cdq
ficom
shl
iret
clc
jmp
push
xor
mov
and
sub
mov
sbb
lds
pop
sbb
dec
bound
popa
add
(bad)
jl
icebp
jae
imul
mov
dec
sahf
xchg
add
mov
mov
enter
jp
fimul
mov
sub
aaa
inc
loopne
outs
into
cmp
outs
ss
mov
jmp
in
push
out
push
dec
inc
scas
inc
mov
and
out
movs
sub
mov
add
push
lods
pop
push
pop
cwde
adc
mov
cmc
int
das
fmul
and
lock
and
ss
jnp
jnp
sbb
adc
icebp
sbb
leave
inc
jge
jl
cmps
push
nop
test
arpl
add
lock
dec
fiadd
inc
scas
dec
jns
push
fwait
adc
in
push
mov
lods
mov
pushf
xchg
xchg
cmp
(bad)
cmc
add
add
xchg
add
std
loopne
or
or
mov
fld
fmulp
out
mov
fucomip
outs
leave
imul
adc
frstor
or
out
call
inc
mov
lods
ficom
fistp
sub
jne
icebp
cmc
(bad)
in
xor
ins
or
es
adc
in
pop
push
data16
xchg
inc
adc
in
int3
sbb
inc
lods
nop
jle
add
call
mov
pusha
ins
xor
mov
mov
test
add
neg
clc
xor
adc
adc
push
in
push
pop
jnp
lods
sti
inc
dec
(bad)
mov
test
lods
fld
cmp
mov
jmp
push
add
leave
dec
dec
jge
adc
arpl
test
cdq
aas
push
sar
scas
push
mov
(bad)
pop
mov
ins
mov
aad
push
and
test
(bad)
stos
pop
inc
inc
mov
lea
jecxz
(bad)
and
call
and
mov
lahf
lds
sub
sbb
pop
(bad)
int3
jo
pop
xchg
aad
pop
cs
push
dec
pop
arpl
pop
inc
jle
xlat
and
add
mov
mov
mov
frstor
fucomip
fs
repnz
rcr
cmps
and
xor
jne
mov
inc
cwde
jecxz
retf
cmp
cmps
pop
or
stos
into
ja
repz
push
in
out
test
and
iret
xchg
jns
ds
sbb
and
sub
or
pop
or
sub
push
fdiv
mov
jo
lods
retf
mov
(bad)
sub
fild
test
imul
xchg
and
lock
je
mov
es
push
shr
push
out
xchg
xchg
xlat
mov
mov
mov
add
cmp
pop
int3
fimul
in
(bad)
mov
retf
jo
call
rcr
lea
(bad)
stc
or
push
ror
pop
iret
add
sbb
pop
loopne
rol
outs
pop
push
adc
call
lods
push
fst
add
adc
test
enter
sbb
repnz
cmps
jnp
je
mov
test
or
mov
out
inc
aad
test
in
(bad)
std
ss
push
bound
loopne
movs
std
jns
sub
call
pop
push
test
fidivr
dec
sub
push
push
sbb
inc
popf
lods
outs
test
fnsave
cmp
jmp
add
stos
mov
sbb
ret
mov
in
lahf
call
mov
(bad)
stc
(bad)
ror
inc
data16
loop
sbb
retf
mov
mov
dec
std
or
mov
dec
iret
inc
call
call
test
jl
lods
fucomi
sti
jp
shr
add
xchg
clc
dec
hlt
dec
out
stos
es
mov
dec
jl
jno
xor
dec
fldcw
test
or
mov
push
xchg
out
jbe
mov
inc
sti
mov
imul
xchg
(bad)
xor
xchg
enter
cmc
call
pop
in
add
push
out
jp
imul
(bad)
or
sub
or
movs
adc
addr16
sub
and
dec
ins
cmc
fcmovnb
loopne
add
add
in
clc
sbb
xor
sbb
add
push
enter
sbb
inc
aas
out
enter
mov
jno
out
mov
dec
or
sahf
jns
loope
les
xor
mov
mov
dec
fs
xchg
xchg
stc
repz
fld
pop
jle
cmpps
pop
sahf
test
fisub
cld
xchg
int3
fadd
mov
sub
push
cmc
pop
xchg
aas
lea
imul
mov
dec
xor
xor
mov
fisubr
aaa
gs
adc
sub
cmp
int
push
into
repz
inc
aaa
or
lds
inc
in
scas
sub
add
std
sahf
into
rol
and
jb
out
dec
adc
mov
mov
cli
bnd
and
fisubr
inc
push
shl
mov
daa
out
loope
or
dec
int
push
mul
jmpw
jmp
fsubr
cmc
mov
mov
cmps
loop
cmp
ins
gs
les
inc
dec
sbb
scas
cmp
pop
jns
jmp
(bad)
scas
adc
dec
fcom
pop
mov
idiv
mov
sub
bound
test
outs
repnz
or
mov
and
and
xor
pop
jo
addr16
(bad)
cmps
aas
dec
pop
rcl
dec
pop
push
push
jecxz
mov
jne
jmp
movs
out
dec
rcl
inc
jbe
sub
shl
and
into
stc
out
jge
xchg
jns
xor
mov
aas
fcom
push
or
sahf
and
cmps
pop
xor
movs
test
mov
xchg
jecxz
clc
add
pop
(bad)
cs
je
xchg
jmp
movaps
push
jmp
or
das
mov
sbb
pop
mov
xor
mov
push
push
mov
pop
push
(bad)
sub
inc
lea
dec
sub
sar
aad
xchg
jmp
out
mov
aam
aaa
stc
dec
push
jmp
call
adc
mov
les
xor
and
mov
mov
jl
outs
sub
inc
lods
outs
(bad)
push
sub
(bad)
push
ss
fild
dec
int3
js
inc
stos
add
out
or
and
push
xchg
in
ret
jge
sbb
push
jmp
add
fucomip
xchg
fdiv
dec
or
cmp
dec
mov
dec
dec
and
retf
(bad)
clc
jg
test
push
mov
mov
fsub
or
ins
fisttp
dec
jecxz
xchg
xchg
movs
scas
mov
mov
repz
jae
xor
enter
or
bound
inc
in
hlt
sbb
sub
inc
adc
jl
sbb
mov
stc
fwait
pop
push
test
cld
in
popa
push
lahf
(bad)
adc
sbb
dec
jbe
sbb
rcr
aam
js
(bad)
rcl
xchg
mov
push
mov
or
jmp
imul
stos
movs
jmp
inc
mov
bound
std
inc
int
rcl
dec
pop
test
xchg
mov
mov
in
xor
ins
(bad)
cmp
dec
cwde
mov
mov
fstp
push
mov
arpl
xchg
cs
das
and
ds
shl
in
ret
push
sbb
into
xor
or
(bad)
rcr
mov
aad
lea
xchg
dec
sbb
jns
mov
fcmovnbe
sub
out
(bad)
repnz
and
mov
(bad)
cmp
(bad)
popf
or
push
out
jg
mov
cmp
call
cmc
push
sub
mov
push
jl
xor
adc
mov
js
sub
lods
xor
and
mov
mov
jge
je
aaa
in
xor
push
fucomi
push
outs
jl
movs
push
bound
aaa
test
(bad)
nop
add
mov
jns
and
sbb
imul
dec
pushf
frstor
adc
mov
push
jno
pop
shl
jmp
mov
es
out
dec
add
ror
fisubr
dec
outs
mov
fisub
pop
add
rcl
sbb
xor
hlt
dec
push
scas
sub
(bad)
mov
(bad)
and
jbe
sub
dec
add
add
ins
xor
stos
sbb
push
jb
mov
xchg
sub
ss
adc
pop
(bad)
mov
(bad)
sbb
dec
and
adc
(bad)
sbb
sti
and
pop
outs
push
xor
sbb
xor
mov
sub
adc
cmps
mov
mov
mov
push
sub
pop
loopne
mov
jmp
add
pop
stos
jne
icebp
add
in
ret
mov
loope
push
dec
cld
pushf
leave
arpl
pop
imul
dec
sub
mov
cmps
and
inc
cmp
cli
dec
cmp
jbe
mov
jp
jbe
outs
and
sbb
xchg
(bad)
push
cmp
cmp
dec
fistp
mov
(bad)
pop
mov
push
push
not
pop
cs
jne
ja
mov
xchg
add
push
dec
xor
aam
imul
jmp
fnsave
inc
imul
popa
and
ss
fldcw
lock
and
std
aas
jno
test
(bad)
inc
rcr
add
in
fucom
pop
ds
mov
aaa
xchg
sbb
inc
lds
dec
nop
loop
mov
cmc
addr16
(bad)
jb
add
je
outs
mov
or
sbb
in
imul
in
fnsave
add
in
add
fwait
inc
sar
dec
dec
mov
hlt
mov
fwait
and
ret
jle
xchg
push
mov
push
add
mov
push
inc
inc
push
iret
pop
jmp
add
mov
mov
push
mov
sub
inc
shl
rcr
jae
out
add
test
push
vshufps
pop
pop
aas
xchg
cs
xlat
aam
std
adc
test
jmp
fdiv
mov
(bad)
retf
pop
mov
loop
enter
addr16
in
loope
cdq
mov
mov
div
xchg
fcmovbe
ins
pop
mov
pop
mov
xchg
inc
jmp
add
pop
imul
pop
fmul
ficom
push
dec
jne
cmps
jmp
push
mul
mov
out
jo
ror
mov
xchg
jecxz
add
push
fstp
add
or
push
push
leave
or
out
mov
jmp
sbb
gs
icebp
dec
xchg
or
push
or
clc
pop
pop
fsubp
or
aaa
in
test
pop
nop
into
cmps
mov
pop
pop
retf
and
bnd
jns
push
es
ret
cs
ins
xchg
js
inc
jp
shl
es
cmp
xchg
jge
sub
lock
push
jp
dec
cmp
scas
jno
inc
retf
pop
xor
ja
rcl
mov
sub
scas
adc
sub
cmps
packssdw
lea
int
pop
cmps
ss
or
les
pusha
ror
inc
imul
js
adc
jmp
or
out
icebp
(bad)
mov
xchg
xchg
push
xor
daa
mov
cmps
mov
data16
sbb
pop
mov
stos
and
pusha
jmp
pop
out
and
xor
sbb
dec
push
data16
cmps
xchg
sahf
fld
mov
jle
(bad)
neg
popa
mov
mov
aaa
out
mov
jae
rcr
and
sbb
pop
ret
add
cmp
jmp
mov
xchg
lahf
mov
rcpps
add
fstp
inc
mov
iret
fs
cmp
out
gs
popa
xchg
pop
xor
inc
xor
enter
add
(bad)
jecxz
daa
shl
int
mov
lods
test
call
aam
sub
pop
xchg
das
cmp
idiv
(bad)
cmp
mov
pop
xchg
cld
retf
enter
ja
xor
enter
push
push
inc
test
popa
lods
imul
pop
cli
std
js
cmp
js
xchg
and
xchg
xchg
imul
in
sub
jne
clc
mov
jo
mov
shl
aad
sbb
adc
mov
pusha
test
lds
lods
xlat
mov
pop
jno
ja
outs
cli
pusha
add
jle
xor
push
lds
inc
cdq
fisubr
cmp
ss
pop
repnz
and
loop
fdiv
mov
cmps
rol
add
test
cld
repnz
and
jb
xchg
fld
out
into
test
xor
mov
ins
pop
dec
xor
xor
cmp
jmp
xlat
push
sti
jo
clc
push
stc
pusha
jns
jle
add
push
mov
or
test
push
sub
test
cmp
pop
and
xor
xchg
repz
icebp
mov
adc
push
adc
addr16
fs
add
sub
pop
es
and
mov
jl
icebp
jg
arpl
retf
add
popf
jmp
dec
mov
je
push
sub
mov
pop
push
int3
and
cs
bnd
sbb
cmp
xor
mov
xor
dec
push
jmp
pop
sub
in
mov
fstp
and
ins
jmp
std
popf
xchg
test
aas
mov
mov
push
lea
or
jl
std
rcl
stos
nop
outs
outs
add
dec
xchg
out
xchg
out
pop
adc
fwait
push
in
adc
aaa
ins
dec
inc
not
popa
data16
sub
or
popa
mov
cmp
push
popf
inc
pop
pop
ja
xor
xchg
adc
mov
sahf
scas
push
mov
xor
mov
xor
dec
lds
sbb
pop
pop
(bad)
push
pop
nop
inc
mov
(bad)
data16
neg
xchg
inc
dec
pushf
mov
and
jmp
iret
aaa
sbb
dec
mov
push
rol
cmp
movs
leave
call
pop
clc
push
stc
test
retf
test
cli
int3
inc
xor
ret
sahf
ret
pop
(bad)
loopne
mov
pop
sub
push
jnp
repnz
sub
adc
cmp
pop
(bad)
dec
adc
add
push
in
pushf
cld
push
mov
out
adc
cmp
movs
(bad)
retf
les
js
pop
push
or
cmp
inc
test
push
jp
pop
and
pop
fs
mov
outs
inc
push
mov
fs
fisubr
inc
es
stc
mov
loopne
xchg
(bad)
pop
das
xchg
int3
pop
jmp
push
call
or
cs
sbb
shl
xchg
jmp
test
shl
add
cld
out
cld
xchg
pusha
push
xchg
adc
cmp
fnstcw
loop
cli
ins
dec
shr
sbb
push
or
data16
adc
mov
movs
sub
push
jp
xor
sbb
cmps
aaa
or
aaa
and
pop
push
push
pop
shl
mov
pop
fmul
push
cwde
rcr
lods
fs
jno
inc
fwait
and
hlt
fisubr
mov
jecxz
jl
jae
adc
or
sbb
mov
inc
mov
lahf
call
jmp
jge
outs
cmp
adc
jecxz
or
jb
mov
(bad)
mov
dec
in
scas
push
test
ss
pushf
cmp
in
bound
pushf
imul
dec
push
lahf
in
dec
pop
pop
and
loope
sub
sub
dec
add
cmp
adc
add
cmp
fnstcw
cld
jns
leave
sub
fisub
mov
xchg
mov
adc
and
dec
cs
pop
push
inc
mov
rcr
xchg
push
(bad)
sbb
ficom
xor
loop
mov
sub
jns
jo
bound
aam
rcl
mov
outs
jmp
xor
dec
fsub
jmp
aas
out
call
mov
cmp
out
pop
dec
scas
xor
test
loope
xchg
jnp
mov
pop
inc
jmp
push
adc
cmp
xchg
and
in
popa
pop
das
mov
loope
dec
out
test
inc
mov
add
push
mov
bound
leave
inc
pusha
and
jmp
ins
adc
adc
jne
pop
sahf
fild
stc
inc
jbe
pcmpeqw
imul
js
add
cmp
sub
mov
or
and
sub
mov
adc
hlt
cmp
sbb
adc
das
and
mov
loop
inc
add
rcl
mov
xchg
jb
add
ret
jbe
push
int3
xor
retf
ja
jge
(bad)
jge
xchg
sbb
ror
xor
mov
dec
adc
call
jle
int
jmp
xor
mov
mov
in
mov
movs
mov
add
push
push
add
out
fidiv
lahf
mov
sti
adc
push
adc
mov
mov
adc
add
out
arpl
(bad)
or
pop
stc
push
pop
dec
jno
pop
gs
imul
cmc
add
push
fnstenv
sbb
popa
and
add
jo
int3
and
adc
and
stos
dec
shl
pop
ins
jl
xchg
hlt
sbb
jg
sub
xor
xor
in
arpl
inc
loop
xlat
sub
xchg
add
mov
arpl
push
sbb
or
ror
aam
lods
cmp
in
test
lock
(bad)
adc
into
jge
push
mov
cmps
and
dec
out
mov
pop
cli
xor
inc
mov
aaa
inc
(bad)
cmp
rcr
inc
xchg
xchg
and
sahf
hlt
out
xor
fdivp
(bad)
je
repz
sbb
adc
dec
std
xchg
inc
lea
(bad)
jge
les
adc
dec
and
(bad)
fcmovbe
adc
int
jge
jae
in
sub
repnz
fcomip
pop
mov
jge
or
je
es
fwait
sub
push
popf
push
sub
adc
sbb
mov
xor
pop
add
stc
jge
push
push
mov
add
ds
mov
or
mov
jmp
psubsb
inc
xchg
neg
sbb
push
dec
pusha
mov
or
scas
cmp
push
and
sbb
popf
imul
push
and
inc
and
pusha
addr16
repz
jmp
xor
mov
scas
push
mov
into
in
pusha
jb
hlt
mov
and
and
fst
lock
cmc
push
stos
inc
and
jo
inc
sub
lahf
push
pop
dec
js
rcl
popf
xor
or
jne
in
lds
xor
cmc
xor
pop
mov
xor
nop
(bad)
movs
lock
cdq
in
cwde
push
mov
out
add
xor
adc
int
or
je
in
sbb
dec
shl
sti
ds
dec
sbb
cmp
push
mov
push
mov
xor
sar
mov
xchg
mov
jno
ja
xor
cmp
or
daa
or
push
out
imul
hlt
repnz
cmp
sbb
clc
sbb
jle
xlat
xchg
push
aas
xor
inc
test
or
test
test
mov
dec
gs
nop
dec
jbe
hlt
dec
pusha
sub
(bad)
stos
and
or
cmp
data16
pushf
jmp
or
lods
mov
add
and
ror
push
mov
out
inc
cmp
inc
movs
popa
loop
mov
(bad)
xlat
popf
stos
pop
xor
pop
daa
push
pop
jae
gs
iret
test
sub
push
mov
fcom
addr16
mov
ss
int
mov
inc
or
jae
dec
add
dec
mov
icebp
ds
test
pop
idiv
and
retf
mov
inc
lods
jnp
dec
add
mov
outs
(bad)
sub
pop
mov
(bad)
push
sub
mov
dec
mov
xlat
cmp
out
mov
ins
div
clc
ds
inc
push
lods
test
mov
adc
jge
std
mov
jb
push
mov
(bad)
push
cli
scas
inc
mov
dec
mov
xor
not
cwde
push
mov
sub
shl
(bad)
sbb
cmp
dec
pop
sbb
adc
mov
adc
fcom
cmps
inc
pop
nop
retf
mov
and
and
sub
fcom
call
jp
es
(bad)
sbb
adc
fcomp
mov
test
mov
loop
ins
adc
fs
mov
(bad)
mov
test
mov
jl
mov
scas
push
dec
(bad)
popf
cwde
jmp
mov
or
int
out
jmp
outs
xor
pop
mov
loope
fcom
lods
pushf
xchg
inc
icebp
mov
jl
sbb
aad
dec
push
xchg
sub
sti
push
xor
dec
mov
push
cmp
dec
add
mov
push
cmp
adc
pop
rol
call
adc
or
fidiv
js
cwde
dec
xchg
mov
shl
je
out
push
adc
ffree
dec
cmp
add
shr
jnp
add
cmp
inc
cmp
mov
int
jmp
(bad)
cmps
jae
push
loopne
push
xchg
inc
sub
fs
in
int3
and
dec
mov
pop
xchg
add
test
mov
push
jmp
add
mov
pop
add
mov
cmp
fdivr
jmp
das
popa
xchg
aaa
ja
stos
in
mov
fsub
js
les
mov
mov
mov
xchg
lods
ss
(bad)
pushf
pop
xor
test
(bad)
adc
aam
ja
outs
mov
fistp
inc
adc
shl
inc
xchg
mov
dec
(bad)
loopne
into
push
add
stc
push
mov
shl
aas
test
popa
xchg
and
imul
sub
jmp
repz
push
cdq
loope
mov
cmp
btc
mov
mov
mov
fsub
sahf
movs
pushf
xchg
sub
inc
mov
push
add
push
push
mov
mov
push
mov
xor
adc
sub
mov
xchg
add
js
retf
(bad)
fcomp
dec
int
in
inc
cmp
inc
cmp
mov
mov
push
(bad)
lahf
stc
or
push
and
(bad)
aad
inc
out
mov
aaa
mov
ins
sbb
add
call
in
shl
inc
mov
adc
mov
add
mov
icebp
mov
test
inc
xchg
mov
test
jmp
or
movs
xchg
mov
mov
pop
(bad)
cmp
ins
pop
sbb
js
xchg
(bad)
jle
sbb
(bad)
mov
xchg
push
push
iret
cmps
fs
mov
mov
mov
jb
mov
cmp
cmps
push
fs
sahf
fiadd
mov
ror
adc
jp
cmp
cwde
jae
or
nop
arpl
dec
xor
out
scas
and
rcl
dec
dec
shr
fadd
cs
push
mov
clc
or
pop
sahf
mov
and
xchg
xchg
(bad)
jecxz
xor
stos
or
mov
push
mov
ins
push
js
mov
cmps
les
mov
lock
inc
(bad)
retf
inc
shr
(bad)
mov
sbb
dec
mov
repnz
outs
xlat
and
adc
and
dec
es
ss
dec
cs
inc
jne
push
and
inc
and
daa
fdivr
loop
loopne
idiv
adc
xor
cdq
aam
sahf
and
(bad)
sbb
call
fcom
aam
fst
mul
push
push
fadd
and
xchg
pop
or
mov
add
mov
mov
or
jl
mov
lock
ins
stc
loop
sbb
adc
jno
out
ss
in
push
lea
xchg
test
sbb
je
dec
fsub
adc
mov
inc
xchg
and
rcr
adc
jbe
retf
imul
dec
lods
inc
sub
imul
inc
xor
imul
in
pop
ss
int
dec
pop
scas
sbb
adc
cmp
xlat
adc
out
jmp
mov
jmp
lock
aas
in
cmp
movs
ret
add
pop
jb
sti
mov
fnstsw
jl
add
cmp
ror
cmp
pop
jmp
mov
leave
push
loopne
push
pop
lods
inc
mov
mov
xchg
sar
mov
pop
out
pop
test
cwde
push
sub
sub
enter
mov
daa
xor
dec
fwait
hlt
add
or
jb
xchg
sbb
pusha
inc
push
xor
mov
mov
arpl
or
or
aam
aaa
imul
mov
xor
mov
(bad)
adc
sbb
and
jl
adc
pop
cmc
jns
push
aad
(bad)
scas
outs
(bad)
mov
cmp
or
mov
mov
shl
sbb
or
lahf
dec
sbb
(bad)
jl
xor
mov
cdq
xor
outs
xchg
dec
or
pop
mov
jge
push
lea
dec
or
xor
mov
pop
lahf
daa
fisub
mov
jl
jle
inc
push
out
pop
xor
sbb
loopne
cmps
xchg
adc
fcmovnu
mov
sbb
int
ja
outs
out
lods
mov
sub
jle
push
dec
out
call
fidivr
mov
add
repnz
pop
xchg
test
imul
pop
iretw
cmp
inc
ret
xchg
mov
xchg
mov
mov
scas
and
imul
addr16
jecxz
adc
test
cmp
cmp
mov
xchg
or
in
mov
sub
mov
pop
shl
gs
mov
and
test
icebp
sub
xlat
scas
shr
jns
enter
mov
and
retf
mov
pop
rcr
xchg
int3
(bad)
cmc
icebp
scas
push
imul
jmp
stos
je
cmp
sbb
adc
cmps
loop
jmp
call
(bad)
fcmovnb
and
push
sub
add
mov
add
outs
pop
xor
xchg
lods
pop
xchg
pop
xchg
ins
cmps
mov
imul
dec
in
inc
and
adc
lods
pop
out
push
adc
inc
jno
cmp
sbb
add
in
out
daa
dec
cmps
dec
push
(bad)
push
mov
sbb
aas
pop
lock
pop
jmp
sbb
mov
nop
cmp
hlt
fist
mov
push
pop
les
mov
mov
mov
fmul
or
lea
push
push
push
addr16
xchg
jg
xor
pop
adc
int
sub
sub
sbb
ret
xor
mov
aad
sub
enter
(bad)
retf
sub
sub
stc
dec
outs
fbstp
daa
xchg
jecxz
(bad)
loop
xor
fdivr
pop
mov
jl
retf
in
aas
xchg
xchg
sbb
add
jl
sti
cdq
pop
dec
push
and
test
repnz
pop
add
xor
stos
and
pusha
hlt
or
push
add
les
ret
pop
cmc
arpl
loop
pop
cli
fstp
aas
mov
pop
mov
daa
cmc
cmps
mov
jecxz
xchg
xchg
push
int3
sbb
xchg
mov
pop
pop
das
xchg
push
pop
cs
adc
push
lahf
ret
mov
mov
iret
mov
push
ror
mov
jne
pop
clc
dec
or
loope
enter
shr
dec
mov
pushf
ja
(bad)
and
sbb
ins
push
(bad)
jge
or
outs
std
mov
mov
psubusw
mov
sti
add
scas
bound
inc
ins
pop
mov
bound
test
outs
pop
add
mov
out
inc
mov
in
fucomi
into
sar
mov
sbb
push
popa
add
xor
not
ja
test
xor
add
ret
dec
repz
dec
mov
(bad)
push
lods
or
inc
adc
pop
cdq
add
ret
sbb
push
test
xchg
call
mov
lock
clc
jge
je
mov
mov
(bad)
cli
ins
daa
retf
xor
jns
stos
or
xchg
adc
mov
sbb
or
adc
mov
mov
daa
push
mov
loop
push
es
mov
inc
xor
in
jne
push
mov
or
imul
push
mov
adc
mov
and
xor
imul
or
int
mov
mov
imul
scas
iret
stos
adc
cmps
nop
loop
cmp
(bad)
test
imul
jmp
xchg
xchg
outs
out
or
mov
pop
adc
aad
(bad)
cli
cwde
imul
xor
mov
mov
dec
ret
xchg
pop
hlt
push
int
pop
xlat
pop
aam
and
dec
int
adc
sub
mov
icebp
ja
pop
push
(bad)
ds
mov
jae
xor
xor
mov
xlat
and
mov
es
sub
scas
pop
lds
pop
fsubr
stos
dec
data16
mov
pop
test
out
push
jmp
xchg
sub
xor
mov
movs
cmp
nop
cvtps2pi
jae
fwait
pop
iret
out
push
iret
jg
push
xchg
inc
outs
mov
and
add
push
push
mov
inc
add
and
iret
pushf
addr16
jne
dec
push
in
cmp
ins
fnstsw
or
outs
adc
pop
mov
(bad)
xchg
int3
enter
dec
or
je
sub
test
push
cdq
(bad)
lods
and
aam
and
ret
daa
repz
add
ins
mov
fcmovne
jmp
cmp
pmaxsw
enter
loop
scas
push
cdq
outs
test
adc
mov
cmp
popa
add
mov
in
sti
mov
fist
sar
mov
out
lea
xchg
call
retf
cmp
mov
xor
(bad)
sub
sub
mov
imul
jbe
or
add
fcomp
mov
xchg
test
pushf
out
test
xor
int3
ds
jb
push
dec
std
push
jle
push
fidivr
movs
movs
(bad)
push
push
mov
pusha
and
xchg
das
xchg
lods
stos
push
or
jg
pop
movs
add
and
outs
lods
inc
or
push
sbb
adc
arpl
sub
cli
mov
adc
adc
jp
js
out
fidivr
out
jno
loope
push
jne
mov
jecxz
mov
jecxz
push
jne
jle
fisubr
cli
js
dec
loop
inc
stc
jbe
sbb
and
xor
push
cwde
aas
and
inc
pop
repnz
jno
retf
rol
jmp
and
int
pushf
add
jne
xor
gs
dec
inc
mov
ror
jge
lods
fsub
sahf
ds
or
fs
dec
jb
add
mov
jno
ins
jg
call
fsub
std
sti
adc
outs
(bad)
push
retf
cmc
xchg
shr
lea
les
xor
(bad)
stos
xchg
ins
dec
push
test
xchg
cmps
dec
mov
je
bnd
push
mov
cmps
mov
(bad)
imul
xchg
pusha
or
mov
retf
lods
add
stc
sahf
fdivr
daa
cmps
push
(bad)
cdq
sbb
(bad)
cli
je
repz
xchg
mov
dec
sbb
pop
mov
les
xchg
jns
lods
mov
dec
test
pop
mov
bound
bound
scas
pop
mov
shr
mov
gs
add
adc
popf
push
pop
or
or
sbb
movs
cmp
and
out
(bad)
call
sub
icebp
in
outs
cmc
adc
ja
les
adc
and
rcr
data16
mov
pop
jl
jecxz
outs
jnp
xchg
or
call
pop
sub
outs
xor
mov
xlat
push
cmp
cmp
add
ins
sbb
test
sbb
or
jmp
call
pop
out
push
sahf
aam
add
jmp
movs
xor
xor
mov
cli
mov
fistp
fsubr
rcl
push
xchg
jbe
movs
mov
lock
xor
mov
ss
and
sub
or
jae
inc
lea
or
(bad)
pop
push
retf
jmp
jb
cmp
mov
dec
fiadd
int
popa
pop
out
xchg
(bad)
dec
retf
ror
pop
dec
or
sar
sub
sbb
push
add
lock
pushf
jmp
pop
loop
addr16
jmp
xchg
push
pop
call
jno
call
icebp
hlt
cwde
shl
scas
movs
rol
cmps
add
cmp
loope
xor
and
and
xchg
push
pop
div
inc
pop
call
inc
jne
ins
(bad)
cmp
loop
push
sti
add
push
ds
jge
int3
daa
or
pop
popa
ror
fmul
mov
push
mov
jp
jmp
xchg
ins
inc
jmp
cmp
inc
add
mov
fstp
cli
xor
punpckhdq
push
push
(bad)
daa
mov
push
fisub
xor
and
iret
inc
cmp
pop
shl
lea
lock
mov
xchg
scas
jns
movs
mov
inc
jne
adc
sub
loop
lds
pop
mov
dec
add
inc
sbb
xchg
in
xor
stos
lods
xchg
push
sub
mov
ja
jp
sbb
ffreep
fcom
xor
or
stc
shl
sbb
fwait
sub
push
mov
push
cmp
test
loop
add
jbe
or
inc
mov
lds
push
xor
test
mov
in
sbb
retf
jno
adc
aad
push
push
cmp
mov
ss
mov
mov
call
ja
arpl
fnstcw
test
cmp
and
cmp
xchg
add
push
adc
adc
xor
(bad)
(bad)
cmc
fisttp
inc
push
icebp
xlat
xchg
lds
xor
test
xchg
push
adc
cmp
fcom
cmp
out
aam
pop
aam
mov
test
test
push
in
nop
(bad)
fistp
js
fcom
xchg
mov
rcr
push
mov
fcom
add
sub
mov
(bad)
retf
fstp
ficom
pop
cs
sub
pop
push
jnp
mov
lds
mov
or
mov
test
adc
inc
push
mov
add
ja
fwait
(bad)
lea
add
adc
dec
ins
sbb
adc
movs
pop
jae
mov
in
stos
cmps
jle
xor
or
fbld
loop
adc
gs
dec
repz
pop
(bad)
(bad)
xchg
xchg
sub
cmp
jo
hlt
push
test
in
or
rol
mov
jle
jno
pusha
int
xlat
push
pop
mov
or
stos
mov
push
or
jno
ins
jo
sbb
mul
mov
xor
xor
sahf
mov
pop
cmc
xor
ret
lods
loopne
and
push
lock
(bad)
mov
mov
je
xchg
mov
mov
test
or
pop
cmp
push
in
cmp
sbb
cmp
sbb
mov
dec
mov
pushf
cmp
lds
jmp
mov
and
xchg
mov
scas
in
pop
mov
ja
sub
call
ret
fimul
xchg
rcr
out
lods
or
sub
adc
and
add
lods
add
shl
and
cmp
ins
leave
pop
jge
add
mov
add
loopne
fdiv
dec
add
les
or
add
mov
xor
out
fdiv
xor
aaa
repnz
pop
xor
pop
cs
adc
cmp
sbb
cmp
or
push
mov
xchg
retf
js
mov
loopne
adc
aam
sti
loop
and
inc
fwait
jg
mov
xchg
cmp
data16
(bad)
fbld
aas
mov
mov
icebp
sbb
fidivr
xor
and
repnz
sub
or
mov
pop
stos
sbb
ror
inc
ins
jae
or
aas
shl
ds
cs
in
add
sbb
inc
dec
fiadd
adc
test
push
and
movs
adc
icebp
lods
ins
mov
stos
push
inc
ss
loopne
out
cmp
bound
inc
mov
lahf
or
push
fld
dec
aad
dec
mul
pushf
xor
xor
jmp
xor
loop
adc
retf
jno
cmp
fwait
sbb
xchg
mov
ret
mov
sbb
btr
ds
jmp
inc
outs
adc
(bad)
mov
inc
sahf
inc
mov
in
and
cmp
pop
mov
jb
test
add
outs
shr
int3
mov
or
fucomi
and
stos
xchg
jge
test
and
mov
ins
in
inc
shl
nop
sub
push
sub
loopne
and
push
mov
sub
push
fwait
mov
ret
dec
push
mov
out
cmp
and
mov
push
and
call
leave
sub
xchg
inc
imul
stos
hlt
or
push
jne
in
add
or
cmp
xchg
add
mov
mov
cld
xchg
sti
pop
sub
imul
xor
in
jnp
push
mov
dec
jne
wrmsr
imul
cmps
sub
enter
adc
sbb
outs
and
or
xchg
cld
call
popa
mov
or
adc
xor
call
cmc
test
lock
shr
popf
fcom
adc
dec
cmp
pop
dec
sub
jno
(bad)
in
cmp
xor
inc
sbb
cmps
or
sub
jmp
repz
pusha
add
sub
ret
mov
test
dec
test
imul
mov
jmp
cmp
pop
dec
jne
test
add
pop
mov
adc
inc
and
dec
lock
sahf
jg
(bad)
cmp
mov
pop
out
daa
and
xchg
test
mov
mov
dec
test
sbb
inc
or
or
ret
xor
pop
sahf
xchg
mov
jb
push
sahf
or
mov
in
pop
sub
push
jp
pop
dec
imul
sub
call
push
lahf
adc
jbe
mov
xor
bound
inc
test
mov
pop
retw
inc
pop
stc
inc
arpl
cs
popf
mov
lds
aas
paddsb
push
iret
clc
shl
dec
shr
jge
loopne
pop
and
sti
test
gs
popf
fidivr
into
xchg
rol
sbb
dec
xor
imul
pop
or
xor
push
sub
cmp
inc
xchg
mov
pop
out
pop
into
xchg
aaa
mov
cmps
cmp
mov
arpl
pop
jmp
dec
into
dec
xchg
retf
loope
sub
imul
test
es
or
cmp
movs
sahf
push
xchg
(bad)
sbb
and
arpl
xor
and
jl
mov
hlt
and
and
cmc
pop
fnstsw
iret
mov
pop
gs
xchg
into
retf
dec
xchg
dec
fist
mov
sub
pop
iret
jp
push
xlat
mov
lods
(bad)
fisttp
sub
mov
mov
or
push
jbe
cmp
icebp
or
add
inc
daa
and
out
outs
stc
fcomp
mov
ror
sti
mov
push
gs
adc
pop
add
mov
ret
stos
add
sbb
mov
fcmovnu
cmp
loope
push
aad
leave
adc
mov
fwait
pop
fstp
es
mov
mov
cmp
mov
inc
ret
pop
cmp
mov
out
sbb
enter
pop
in
fst
push
add
add
addr16
test
xor
mov
cmp
je
xchg
retf
enter
clc
test
mov
mov
mov
mov
cmp
add
dec
push
bound
add
aam
jne
inc
mov
movs
sbb
aam
add
jl
sbb
xchg
mov
ja
fadd
adc
ss
test
cmp
cmc
scas
sar
ret
aas
pop
push
sahf
pop
push
or
cmp
je
int
mov
or
repnz
psllq
inc
xor
mov
lods
test
pop
cmc
adc
neg
in
cmp
mov
cmps
pop
pop
xor
jo
mov
pop
popa
addr16
aas
das
idiv
loop
enter
aaa
lock
mov
jmp
sbb
mov
cvtps2pi
xchg
bound
mov
dec
add
push
js
add
call
fwait
je
and
sbb
inc
jne
test
into
and
sar
ret
lods
push
or
cld
inc
outs
cmp
add
mov
jl
out
pop
mov
jae
jge
push
andnps
push
mov
pop
and
outs
push
jno
in
cwde
call
xchg
loopne
sahf
loope
jg
and
aas
push
out
jge
sub
out
or
aas
push
cmp
adc
or
inc
popa
or
sub
ds
jb
xor
adc
sahf
sub
aas
inc
(bad)
(bad)
nop
shl
or
adc
xor
mov
or
dec
jns
jnp
dec
inc
popa
test
(bad)
mov
popf
cmp
(bad)
dec
pop
repnz
mov
mov
inc
xchg
or
adc
sar
xchg
(bad)
mov
dec
push
rcr
mov
fisttp
sti
cmp
js
mov
gs
clc
rcl
int3
xor
adc
cmc
popa
mov
call
adc
shr
sub
push
out
jecxz
add
jg
stos
and
daa
div
mov
jl
xchg
cmp
add
outs
sub
push
fwait
scas
(bad)
xchg
fbstp
int
jp
movs
adc
shr
(bad)
xor
xor
mov
sbb
icebp
fwait
es
retf
stc
imul
mov
jae
movs
or
push
mov
scas
jnp
mov
pop
mov
mov
movs
sbb
sbb
and
xor
sub
add
test
aam
xchg
adc
or
mov
cmp
jbe
xor
push
jb
call
push
or
or
aaa
les
movs
std
pop
xor
push
test
push
push
aad
push
int
jecxz
jne
cmp
or
mov
mov
test
call
dec
inc
push
adc
push
lods
sahf
cmps
pop
sahf
sahf
aaa
imul
xchg
sbb
ror
mov
mov
movs
cwde
pusha
jns
dec
sub
retf
mov
int
sbb
inc
cmp
outs
mov
pop
adc
mov
aam
int3
xchg
packssdw
mov
(bad)
xor
or
scas
outs
loope
mov
and
sbb
xor
retf
std
mov
mov
add
push
repnz
push
popa
adc
mov
sub
into
add
lods
xchg
loop
mov
jmp
add
cmc
pop
mov
push
mov
lods
cs
sub
or
inc
fmul
stos
iret
in
std
add
or
fist
or
push
cmp
mov
mov
mov
movs
cmp
outs
push
jle
js
outs
test
and
jle
shl
sti
pop
test
push
sub
imul
dec
scas
fwait
mov
or
push
inc
push
inc
sbb
loop
adc
out
mov
sbb
les
push
ja
sbb
add
in
mov
scas
loope
jnp
lea
dec
bound
sbb
pop
xor
cld
pop
and
retf
sar
fcomp
jbe
lock
retf
xchg
dec
fcom
stos
and
mov
or
ret
arpl
pop
push
fwait
add
sbb
dec
aad
xchg
jmp
fistp
ror
inc
leave
jp
mov
sub
pop
call
call
fisttp
fisub
jb
into
popf
fistp
and
jne
sbb
out
fld
sub
retf
cmps
out
jge
ret
adc
jmp
scas
rol
inc
fsub
mov
or
cmc
ror
sub
push
add
mov
add
or
shl
ret
jne
xor
sub
in
jmp
and
or
inc
push
push
push
mov
mov
xchg
in
das
jp
dec
and
les
push
in
ffreep
rcr
adc
push
ret
cmp
outs
mov
sbb
sub
xor
dec
jmp
test
mov
jns
adc
icebp
mov
sar
in
scas
mov
jp
cmps
mov
cdq
inc
adc
sub
dec
hlt
jl
shr
jecxz
gs
cdq
ins
xchg
sub
jmp
repnz
bound
inc
fs
leave
lds
pop
sbb
lahf
pop
outs
xchg
pusha
dec
popa
pushf
pop
adc
daa
push
or
sbb
cmps
and
imul
inc
pop
jle
xchg
pusha
inc
scas
push
mov
cdq
stc
mov
and
mov
adc
sbb
fs
adc
push
enter
dec
jg
lock
outs
data16
or
cmp
mov
dec
aas
cmp
in
movs
or
loopne
pushf
adc
cmp
jle
lods
cmc
push
xchg
sbb
pop
jno
xchg
pop
dec
call
mov
inc
shr
jae
aas
movs
(bad)
lahf
outs
rcl
(bad)
sahf
pushf
inc
ret
push
push
or
nop
push
mov
out
test
mov
repz
jno
inc
call
cmc
fadd
xor
mov
pop
cmp
jnp
xor
pop
pushf
ins
xchg
inc
sti
sbb
and
and
and
outs
push
pop
jle
jg
and
or
xchg
xchg
mov
hlt
sub
sub
pop
push
test
inc
fistp
jge
sub
xchg
int3
xlat
mov
mov
xchg
call
(bad)
enter
cmps
mov
push
dec
push
mov
iret
(bad)
popf
push
dec
dec
push
fisub
adc
ins
push
fstp
loopne
fwait
aad
or
outs
cmp
cwde
iret
sub
(bad)
or
pop
stc
(bad)
xor
push
push
and
sbb
adc
mov
sbb
xor
les
add
outs
jo
ins
mov
inc
pop
fwait
test
push
push
leave
xchg
jmp
jae
outs
inc
and
jnp
pusha
jo
sbb
bswap
mov
aad
psllw
je
sahf
jnp
inc
in
stc
sahf
and
sbb
push
jno
sub
mov
mov
mov
push
cmp
gs
mov
mov
mov
(bad)
xlat
xchg
sbb
sub
add
pop
sbb
inc
add
stos
jl
shl
or
dec
xchg
bound
stos
stc
xchg
lock
(bad)
lock
repnz
es
shl
inc
push
cmp
repnz
adc
jbe
inc
adc
mov
adc
imul
les
pusha
mov
mov
and
(bad)
leave
mov
inc
pusha
sub
popf
sbb
(bad)
pop
sbb
or
fwait
in
sbb
and
inc
dec
fs
dec
or
dec
pop
sbb
das
popa
das
xchg
mov
push
cmp
xchg
jl
fdiv
(bad)
leave
mov
mov
jg
popa
(bad)
pop
xchg
scas
pop
fs
and
xor
xchg
arpl
jle
in
inc
scas
repz
in
repz
push
ror
lods
out
add
adc
loope
nop
shl
movs
stos
clc
pop
popf
jno
adc
loop
jb
mov
push
test
(bad)
xchg
pop
iret
fwait
dec
pop
(bad)
xor
scas
cmp
push
inc
ins
mov
repz
pop
or
lods
mov
add
sub
in
test
movs
cmps
jae
fs
push
push
arpl
lahf
mov
js
dec
std
mov
inc
fsub
loop
loopne
add
mov
sbb
aaa
ja
adc
lock
les
xor
out
test
mov
lods
(bad)
jae
fsubr
dec
lea
adc
inc
loop
jg
mov
addr16
aad
ret
movs
das
inc
push
jae
and
cdq
inc
out
jns
xlat
imul
outs
inc
retf
dec
mov
fsubrp
pop
iret
inc
and
imul
push
icebp
cmp
cmps
cmp
and
sub
and
in
test
es
mov
int
mov
pop
inc
les
adc
push
pop
fadd
lods
out
lods
outs
loope
inc
sbb
aaa
(bad)
fisttp
and
dec
sub
popf
mov
xchg
mov
movs
scas
cmp
hlt
cmps
enter
icebp
ss
add
retf
push
cmp
stc
push
das
icebp
repnz
movs
sub
add
pop
sbb
jge
sub
push
xchg
out
or
addr16
sub
adc
push
add
lods
add
mov
and
mov
fnsave
cmp
(bad)
jbe
ins
jmp
retf
mov
test
sti
iret
ret
cmp
addr16
jnp
jmp
cmc
fisttp
clc
out
scas
cmp
inc
cmp
lds
scas
push
sbb
mov
retf
(bad)
fiadd
jne
enter
nop
sbb
mov
scas
inc
mov
rcr
jmp
inc
call
sub
fcom
mov
jmp
inc
popf
data16
jnp
shr
fistp
lods
xchg
mov
cmp
imul
mov
add
mov
in
add
pop
fild
mul
mov
movs
xor
sbb
cmp
aam
aad
jbe
lahf
cmps
aam
sub
jmp
lods
inc
vunpckhps
es
nop
inc
sub
sub
in
and
into
shrd
dec
xchg
int3
sbb
jmp
xchg
sub
mov
pop
mov
addr16
repnz
sub
ret
cmp
int
push
mov
mov
ret
pop
xchg
mov
sub
scas
out
popa
push
lods
stos
cmp
jae
sub
adc
ss
fnstenv
test
and
cdq
mov
xor
push
cmp
xlat
mov
pop
dec
sahf
add
mov
add
call
push
add
jb
out
inc
leave
inc
lahf
sar
sub
pop
xor
jnp
jp
ja
std
in
pop
sbb
pop
xchg
xchg
or
add
xor
imul
inc
pop
out
ins
fxam
fsub
xchg
or
push
push
adc
dec
jne
cmp
push
jno
jnp
push
jp
pop
push
jne
push
mov
xor
sbb
scas
pop
xchg
xchg
cli
mov
call
loopne
add
dec
mov
out
out
imul
jne
xchg
aam
inc
adc
int
jo
dec
push
inc
jno
into
out
lock
popa
mov
arpl
fistp
fsub
xchg
(bad)
(bad)
outs
mov
xchg
das
adc
fwait
jne
dec
aas
aas
cmps
mov
test
xchg
pusha
sub
test
loop
xor
dec
mov
repz
mov
std
jne
sahf
or
enter
jo
aad
bnd
repz
cmp
xlat
retf
fidivr
popa
adc
pop
gs
xchg
jne
xchg
pop
ds
and
mov
lods
outs
mov
enter
sbb
loopne
mov
data16
or
jbe
js
lea
dec
pop
in
ss
adc
xor
add
or
enter
push
xchg
pop
xor
fidiv
stos
call
mov
push
aam
jmp
arpl
neg
push
jmp
mov
push
fwait
retf
xchg
mov
loope
sahf
or
ror
xchg
repz
jb
fs
pop
jb
jl
pusha
jno
jmp
mov
sti
mov
push
push
pop
(bad)
xlat
push
enter
add
add
loopne
sbb
out
mov
mov
xchg
nop
scas
jecxz
aam
mov
or
and
lahf
sbb
mov
pop
add
sub
sub
pop
js
aam
jge
scas
xor
jp
dec
stos
jbe
jmp
push
mov
scas
cwde
xchg
dec
pop
cld
gs
mov
mov
retf
add
inc
mov
push
jmp
push
mov
mov
xchg
xor
lods
inc
call
loopne
imul
jnp
js
cld
adc
test
mov
pop
sub
xlat
int3
sbb
loope
xor
aam
in
(bad)
mov
pop
ss
adc
cli
sbb
push
pushf
movs
cmp
ret
stc
lock
loopne
pop
sub
jno
mov
jmp
jbe
add
mov
or
shr
sbb
fsub
inc
sbb
fimul
sbb
(bad)
push
inc
pop
cs
add
sbb
ins
dec
out
outs
sub
fadd
into
inc
cmp
das
test
add
jp
loope
nop
jbe
std
es
aad
loope
jmp
outs
rcr
inc
dec
jns
into
mov
sub
pushf
pop
or
xor
cli
sub
cmc
jmp
mov
fcomp
jnp
leave
and
mov
add
cmps
xchg
mov
loope
add
pop
xchg
test
mul
or
jge
mov
retf
and
mov
pop
xchg
nop
(bad)
rcl
mov
mov
fiadd
imul
push
push
outs
push
fpatan
pop
mov
and
mov
sahf
test
lahf
stc
jnp
jmp
push
inc
adc
jl
cli
popf
mov
or
xor
ja
out
test
dec
(bad)
rcl
call
push
fsubr
jnp
adc
sub
repnz
and
js
add
inc
jmp
into
push
sub
pushf
xchg
xchg
cld
jge
sbb
sub
xor
ins
xchg
cld
push
mov
int
cli
(bad)
mov
int3
les
jge
jnp
cmps
inc
mov
fisubr
xor
lea
lock
mov
xlat
cmp
xchg
mov
in
ror
les
movs
fidiv
out
ret
lock
sbb
pop
cwde
fwait
sbb
ja
lods
movs
jmp
stos
in
mov
daa
cwde
pop
inc
aaa
ja
rcl
mov
sbb
hlt
lahf
in
sbb
cmp
dec
add
arpl
fisttp
push
dec
arpl
ss
mov
xor
icebp
mov
out
xor
retf
pop
xor
movs
jp
cmp
jae
addr16
and
cmps
dec
inc
(bad)
(bad)
loop
loope
sar
push
push
inc
stos
mov
(bad)
xor
cld
mov
xor
test
xor
cli
(bad)
loopne
ins
xchg
mov
ins
inc
sti
mov
sub
sbb
xchg
mov
and
push
inc
adc
mov
sbb
or
mov
lock
sub
pushf
sub
movs
xchg
add
cld
mov
sub
mov
call
scas
sub
call
inc
mov
gs
js
pop
inc
push
sub
ds
(bad)
shl
cmp
sahf
jge
mov
adc
in
hlt
adc
cld
pushf
gs
dec
aas
in
xor
jno
ds
jg
ins
aad
fs
jecxz
dec
call
jg
test
mov
jp
gs
adc
test
in
sub
push
mov
lods
jecxz
adc
aaa
sub
push
je
sbb
inc
cs
les
jae
push
(bad)
cmps
leave
ins
aaa
lods
or
adc
mov
(bad)
cld
xor
mov
repz
stc
mov
mov
call
shr
div
mov
push
(bad)
jo
xor
les
pop
sub
mov
test
cdq
jecxz
and
retf
sbb
sbb
iret
dec
adc
xor
iret
lock
imul
inc
test
fist
sbb
cmp
lea
rol
jg
popa
inc
ins
or
xchg
mov
mov
mov
icebp
(bad)
push
rcl
lds
add
add
push
scas
mov
sbb
cld
cdq
packuswb
jge
xchg
mov
call
fidiv
fsubr
jg
mov
sub
cli
and
mov
pop
xlat
pop
fs
lds
outs
retf
or
sub
push
(bad)
jae
pop
push
or
and
cmp
ins
outs
dec
ja
mov
or
mov
sahf
xlat
iret
in
iret
ins
mov
or
mov
mov
outs
fdiv
ins
out
cmps
cdq
add
repnz
daa
movs
jo
shr
and
aam
dec
icebp
or
mov
pop
cmp
dec
int
ins
setle
or
cmp
call
stc
add
cwde
shl
sbb
adc
dec
(bad)
cld
out
dec
sbb
inc
mov
pop
dec
es
arpl
fwait
dec
scas
jmp
cli
add
ins
inc
lds
mul
(bad)
add
sbb
rcl
push
int
sub
scas
clc
dec
shl
or
or
cld
sbb
test
fwait
inc
in
sub
mov
jnp
fwait
cwde
icebp
ret
cs
das
cmp
pop
and
loope
mov
inc
dec
jg
popa
outs
sbb
fld
aas
cmp
add
and
xor
add
stc
lods
ins
or
inc
int3
jmp
mov
in
add
mov
pop
sub
jle
inc
xor
leave
sub
xchg
mov
jmp
fs
out
lds
cmc
out
pusha
imul
out
(bad)
cld
mov
pop
movs
sbb
ss
push
(bad)
icebp
scas
ins
sub
or
sbb
inc
xchg
dec
pushf
mov
rcl
stc
outs
or
fcom
xor
xrelease
add
dec
mov
push
lds
jmp
in
test
ss
call
in
adc
jmp
add
iret
mov
pop
mov
cmp
rcl
push
push
cmp
or
and
cmp
sub
shl
jl
adc
inc
mov
pushf
pop
jmp
es
and
and
out
inc
enter
stos
mov
call
add
movs
out
cli
shl
sub
sbb
pop
xor
imul
lahf
jg
sub
mov
es
cld
sbb
arpl
ins
add
out
imul
mov
cld
das
js
cmp
xchg
add
call
xor
pusha
ja
pop
nop
shl
lods
rol
stos
jbe
sub
jl
and
popa
push
dec
dec
xor
or
aaa
push
xor
pop
int3
jnp
cmp
imul
adc
je
push
out
mov
cld
in
iret
pop
mov
dec
test
cli
xchg
jo
pop
jl
xchg
imul
fidiv
enter
xchg
cmp
jge
push
stc
in
pop
out
sub
adc
mov
mov
int3
aaa
imul
push
pop
xor
pop
and
push
ss
push
(bad)
mov
enter
jge
sub
pop
jmp
push
mov
(bad)
adc
pop
jmp
dec
adc
push
mov
fdivr
movs
jmp
sbb
xlat
imul
dec
cld
cli
mov
sahf
shr
and
mov
pop
dec
mov
jecxz
dec
outs
pushf
push
outs
mov
mul
sub
push
sbb
retf
cld
stc
scas
and
int
(bad)
inc
imul
lods
xor
cwde
or
xchg
test
mov
adc
popf
iret
mov
xchg
aaa
jo
aas
std
das
fld
pop
and
std
inc
int
movs
pop
xor
mov
mov
push
cmp
jno
lahf
cmp
daa
lods
shl
xor
cmp
and
add
popa
imul
push
mov
sub
aam
dec
add
ja
(bad)
stos
(bad)
fist
mov
xchg
pop
mov
xchg
(bad)
fist
add
in
jecxz
jnp
dec
rcr
inc
leave
in
jo
inc
dec
pushf
pop
stc
adc
aaa
add
xchg
(bad)
xor
loope
fnsave
scas
adc
mov
adc
(bad)
js
mov
sbb
mov
push
cwde
dec
cmp
ret
(bad)
sub
push
jmp
push
xor
fadd
lock
icebp
cmp
mov
pop
mov
fmul
add
push
rcl
stos
arpl
das
gs
fcomp
mov
adc
mov
(bad)
sub
cmps
outs
movhlps
stc
and
jb
adc
pop
leave
inc
ins
test
mov
dec
jp
push
hlt
inc
lea
mov
ins
push
ds
and
or
jmp
pop
push
mov
iret
nop
or
aad
in
mov
xchg
inc
icebp
sub
jmp
or
sub
ret
push
cmp
rcl
push
jns
mov
push
and
jo
mov
mov
pop
or
fwait
cmp
jo
cs
je
jp
fstp
icebp
or
cld
adc
or
in
(bad)
fdiv
push
jae
cmp
pop
inc
dec
stc
mov
sbb
mov
sbb
fldenv
dec
dec
pop
iret
or
jecxz
sbb
jmp
(bad)
das
hlt
movs
fild
cmp
mov
mov
retf
pop
loop
sbb
gs
fs
xor
cmp
fwait
retf
sbb
call
jnp
or
je
lods
pop
mov
push
outs
rcl
inc
fmul
lahf
out
jmp
cli
movs
enter
add
cmp
pop
or
xchg
sub
int
scas
pop
and
in
not
xor
mov
jbe
or
aas
or
dec
call
adc
out
(bad)
out
ds
xchg
xor
adc
or
leave
pop
icebp
stc
test
inc
scas
clc
data16
ds
je
add
xchg
pop
inc
cmp
xor
jns
mov
not
cmp
(bad)
and
mov
fstp
inc
sub
cdq
dec
sbb
xchg
push
retf
loop
sub
cmp
dec
add
add
mov
xor
std
stos
xor
scas
xor
mov
jle
in
and
std
mov
daa
mov
ds
and
fstp
mov
cmps
div
sbb
xchg
aam
dec
mov
and
sub
mov
dec
sbb
movs
stos
dec
aad
cmp
inc
mov
mov
(bad)
push
lods
ror
xchg
mov
idiv
jae
add
mov
std
push
ins
mov
je
pushf
mul
(bad)
inc
and
pop
pop
jg
and
mov
jno
sub
cmp
sub
dec
in
int
jb
xor
mov
sub
push
aad
push
or
xchg
pusha
push
jmp
xchg
int
and
xlat
cmp
mov
ja
les
fdivr
adc
stos
sub
jo
cld
push
push
adc
xor
cmp
pop
inc
and
mov
push
inc
fbld
sar
scas
jo
retf
fsub
ins
and
enter
dec
aaa
pop
mov
jle
sti
push
inc
leave
(bad)
(bad)
fs
mov
dec
jl
scas
adc
bound
std
cmp
mov
push
dec
into
je
leave
jnp
outs
popa
sar
aam
dec
shl
loop
cwde
inc
pusha
imul
dec
jne
ins
inc
adc
mov
int
test
mul
pop
in
xchg
push
not
fst
arpl
mov
test
push
inc
loop
mov
and
ins
adc
pop
and
and
js
or
or
mov
dec
mov
mov
std
ror
inc
inc
xchg
lds
pop
cmp
dec
ds
ins
pop
pop
add
pop
add
dec
mov
faddp
aaa
jp
imul
imul
and
or
lea
test
es
sub
ret
ds
pop
test
fwait
loope
mov
sub
nop
mov
inc
pop
and
cmps
mov
imul
sub
fbstp
jmp
fist
mov
cs
sbb
pop
inc
test
outs
jp
lds
jno
rcl
inc
xor
adc
push
stc
sar
fs
mov
cmps
push
scas
dec
mov
jp
xchg
in
ins
dec
sar
out
jl
pop
lahf
mov
cmps
inc
ins
xchg
mov
inc
std
rcr
les
pop
push
cmp
mov
sar
dec
xchg
sbb
es
dec
gs
cld
ds
cmp
in
jmp
call
inc
sbb
mov
dec
mov
cmp
or
and
retf
sbb
mov
cmp
ja
jmp
(bad)
mov
popa
mov
fnstenv
dec
push
mov
pop
lock
adc
jmp
lods
jbe
inc
dec
or
lea
mov
mov
imul
mov
outs
addr16
lahf
cmc
idiv
pusha
aas
sbb
out
test
or
stos
pop
inc
dec
xchg
loop
test
dec
lock
shr
dec
add
movs
sbb
ja
sar
xor
cmp
lock
jp
rcr
or
or
push
stc
push
dec
fsub
push
(bad)
mov
cmps
mov
mov
inc
cld
ja
inc
xor
push
xor
xchg
cmp
adc
push
pop
cmps
(bad)
push
bound
push
pop
jle
test
dec
test
ret
or
out
sti
mov
ret
cmp
jp
in
inc
push
pop
inc
and
in
pop
aaa
add
jb
std
mov
mov
xchg
sti
jnp
jmp
repz
lods
sbb
add
ss
std
xor
cmp
out
cmp
mov
mov
xlat
add
std
cli
call
sub
adc
mov
jbe
inc
hlt
mov
imul
jbe
std
push
in
clc
or
jp
hlt
fcomp
pop
jmp
xchg
push
mov
pop
nop
inc
fsubr
enter
push
movs
pop
cmp
adc
jecxz
jne
mov
data16
rcr
pop
cmp
aam
and
pop
push
sbb
pop
cmp
rep
cmp
push
data16
adc
jg
jmp
or
test
xor
mov
ja
jmp
dec
or
push
mov
mov
jns
mov
iret
pop
movs
inc
cmps
sub
imul
retf
rcl
sbb
fst
stos
fcmovnbe
and
add
jb
cld
sbb
dec
loopne
in
jge
and
rcl
aaa
sbb
fisub
sub
rcl
mov
cwde
fdiv
aad
sbb
lock
rcl
add
xchg
mov
ja
aad
adc
inc
mov
jl
mov
retf
scas
mov
sbb
xchg
fcom
in
cmp
inc
cs
fs
push
push
mov
fcmovb
(bad)
xchg
jae
sub
in
dec
hlt
into
outs
ficomp
and
push
lahf
scas
jbe
pop
fwait
xor
outs
and
or
pop
ret
xchg
imul
fisub
add
push
xchg
hlt
cmps
mov
call
add
sbb
sub
fist
jmp
es
repz
ret
xor
outs
add
test
push
int
shr
add
fstp
ins
dec
mov
icebp
xchg
loopne
daa
dec
outs
cdq
mov
cmc
in
add
cmps
in
adc
jecxz
je
arpl
adc
lea
or
cmps
sbb
pop
loop
and
jge
or
loope
adc
test
xor
mov
out
stc
dec
mov
jne
mov
jnp
mov
int3
mov
gs
es
sub
jmp
jmp
adc
loopne
jle
pop
dec
les
(bad)
fcmove
xchg
xrelease
(bad)
int
cmp
nop
dec
nop
dec
or
fistp
lea
(bad)
jno
dec
push
pusha
cmp
scas
ja
div
mov
xor
loop
enter
(bad)
fsubr
mov
mov
fwait
xlat
pop
or
mov
sub
(bad)
inc
push
stos
jne
dec
push
mov
scas
mov
leave
xlat
dec
dec
and
sbb
test
ja
mov
ins
adc
add
(bad)
div
jnp
hlt
test
jmp
mov
adc
fstp
mov
lods
jns
xor
inc
lea
mov
in
mov
gs
adc
xchg
call
push
cwde
xchg
retf
scas
in
sar
in
jae
aad
scas
and
push
ins
push
(bad)
jmp
scas
add
(bad)
repz
push
push
mov
mov
or
and
add
mov
cli
enter
and
jle
mov
call
in
aam
dec
(bad)
pop
fucomip
fistp
dec
xchg
xchg
repnz
popf
pop
popa
mov
retf
ret
mov
mov
(bad)
jae
or
cld
xchg
loopne
mov
xchg
test
xor
xor
push
aad
jp
and
adc
pushf
pop
lahf
scas
and
out
add
(bad)
out
mov
xor
ret
outs
xor
icebp
dec
aas
enter
push
aam
adc
cmp
js
data16
retf
pushf
mov
cmp
sti
les
ds
xchg
fimul
icebp
shr
and
stos
mov
and
(bad)
mov
sub
mov
push
adc
shr
into
cwde
cvtps2pi
jmp
jbe
sub
xor
xor
xchg
jno
loopne
mov
inc
xlat
daa
inc
fs
mov
jno
cmp
adc
inc
add
or
xor
jmp
jmp
(bad)
dec
je
add
call
cld
dec
mov
mov
je
hlt
add
fisttp
xor
aad
mov
pop
xchg
xor
ins
dec
mov
bound
xchg
gs
push
mov
xor
pop
cmp
cmp
cmps
rol
dec
cmp
ss
mov
mov
inc
add
fbld
ret
inc
inc
jg
xchg
mov
jo
xor
jmp
rcr
pushf
out
repz
(bad)
(bad)
imul
(bad)
arpl
cmps
mov
sbb
mov
and
and
mov
dec
pop
mov
jmp
in
or
mov
outs
xchg
mov
fwait
shl
mov
sbb
fisub
scas
jo
xchg
scas
push
leave
cmps
cmp
pusha
(bad)
xlat
adc
hlt
das
pop
mov
iret
xchg
push
cmps
mov
pop
cmp
dec
mov
clc
xlat
xor
jb
mov
jbe
sub
or
xchg
mov
pop
sub
mov
pop
es
inc
pop
cmp
mov
jle
cmps
xchg
cli
jecxz
mov
hlt
pop
stos
clc
hlt
fsub
mov
inc
push
in
add
dec
pop
arpl
fdiv
bndldx
cmps
dec
mov
scas
inc
pop
mov
popa
cmp
add
jns
ds
cdq
adc
iret
jae
inc
in
fs
sbb
mov
xor
test
ror
hlt
and
lea
rol
retf
xchg
or
rcl
jp
test
fst
push
enter
add
mov
pop
sbb
jle
imul
fiadd
mov
adc
movs
test
and
push
fmul
in
and
push
push
or
out
shr
fistp
sbb
mov
in
jg
mov
jbe
cmp
inc
imul
pop
lods
jbe
test
cld
repnz
mov
dec
dec
inc
test
das
out
push
les
and
enter
gs
add
int
push
jl
jns
xor
sbb
outs
(bad)
loopne
ret
mov
push
not
out
pop
sub
stos
leave
push
sbb
movs
stc
sbb
sbb
sub
xor
sbb
jns
loop
xor
sub
add
pushf
dec
or
cdq
adc
out
mov
or
xor
(bad)
mov
mul
mov
iret
mov
out
jle
pop
xchg
mov
mov
(bad)
jg
addr16
mov
push
mov
xchg
mov
ja
jmp
ins
mov
adc
cmps
aam
mov
not
pop
adc
clc
mov
into
mov
inc
inc
bound
xchg
xchg
xchg
xchg
int
pop
mov
mov
icebp
cs
sub
mov
inc
cmp
fdiv
mov
js
mov
pushf
cwde
sbb
sub
mov
jo
sbb
mov
std
loop
sbb
jmp
nop
out
and
je
icebp
xchg
push
jmp
aad
pop
push
mov
cmp
div
ss
jmp
les
push
int3
or
jbe
lods
ins
cmp
fisub
nop
cli
stos
or
mov
cmp
mov
ret
loope
push
jle
cmc
pushf
ret
out
fld
add
add
xor
hlt
add
inc
push
push
mov
(bad)
les
dec
ss
rcr
ret
lock
pop
fcomp
iret
add
mov
les
pusha
stos
dec
das
cmc
(bad)
rcl
mov
mov
call
fcom
adc
xchg
ror
dec
dec
addr16
push
out
jmp
(bad)
push
fyl2x
fstp
inc
inc
sub
loope
inc
outs
retf
sub
mov
and
ficom
sub
dec
jle
pop
cmps
out
or
mov
adc
mov
out
inc
dec
jg
lock
sbb
xchg
loopne
fwait
repz
jns
in
and
fwait
test
inc
lods
sbb
adc
mov
test
repnz
dec
xor
jmp
add
add
cs
repnz
or
adc
loope
int
push
dec
fwait
adc
and
clc
imul
ss
pop
mov
or
in
dec
lea
adc
xchg
test
jnp
aaa
je
inc
sahf
lock
jle
push
sti
dec
and
push
add
push
push
and
mov
pop
pusha
enter
das
inc
cmp
hlt
adc
mov
sbb
cmp
sahf
push
adc
mov
aaa
pop
or
mov
push
clc
mov
popa
xor
inc
enter
pop
cmp
in
ins
stos
dec
mov
fidivr
call
sbb
mov
std
push
push
pop
shr
dec
mov
mov
cmp
add
push
jnp
aam
sbb
mov
cmps
jecxz
dec
xchg
jmp
mov
dec
shl
mov
push
js
retf
cmps
xchg
scas
icebp
cmp
fucom
cld
sub
sbb
jb
aam
ins
in
mov
cmps
cmp
cmp
repnz
or
sbb
test
cs
into
imul
sub
cmps
push
sbb
cmp
fisttp
aaa
dec
aas
xchg
mov
stos
pop
jg
test
xchg
cmp
outs
xchg
mov
ret
push
(bad)
and
sub
and
lods
push
jg
lods
inc
cwde
push
adc
test
jp
test
in
sti
lock
fbld
cmc
gs
pop
dec
mov
in
addr16
adc
aad
or
(bad)
jnp
jmp
imul
lods
pop
sti
push
inc
into
add
mov
les
or
xchg
xchg
clc
xlat
stc
add
into
inc
push
xchg
push
loop
inc
jns
mov
les
outs
in
mov
adc
mov
cmp
cmps
adc
fbstp
inc
clc
pop
fist
xor
iret
(bad)
add
pop
or
cmps
fst
aam
icebp
and
jl
xor
fisttp
push
scas
fisttp
outs
icebp
addr16
dec
and
sahf
cwde
jl
dec
fs
xlat
xor
cs
jp
jno
xchg
repnz
mov
ficom
add
in
push
(bad)
shl
loopne
mov
cmp
call
hlt
imul
pushf
mov
and
and
sub
lahf
fild
pop
movs
lea
dec
call
movs
ja
mov
or
mov
fldenv
lea
sbb
fcmove
sub
push
lea
jl
sub
outs
hlt
or
jmp
movs
cdq
fiadd
sub
popa
cmp
js
adc
mov
mov
dec
cmps
ins
sbb
retf
adc
sub
jecxz
les
fs
pop
mov
jmp
jp
lahf
xor
inc
pop
xchg
loop
daa
dec
cs
cmp
gs
mov
cmp
fisttp
dec
mov
cld
lods
and
xchg
xchg
mov
outs
es
xchg
push
mov
add
mov
sbb
retf
ret
sub
xchg
retf
shl
cmp
data16
aad
sub
jbe
sbb
fnsave
add
inc
push
mov
sbb
fild
and
mov
das
pop
outs
sbb
mov
inc
push
stc
test
mov
push
(bad)
ins
add
out
js
retf
mov
repz
cld
fist
fstp
aad
pop
xlat
sti
rcr
fisub
mov
fiadd
inc
adc
sub
rcr
lea
inc
jno
imul
inc
ror
(bad)
out
xor
lea
iret
push
nop
scas
mov
mov
fs
jmp
cwde
in
or
dec
mov
mov
dec
push
xchg
stos
mov
stos
lds
adc
cmp
pop
cli
imul
out
dec
and
test
mov
cs
std
sbb
xchg
dec
ins
test
sti
sub
cli
xchg
mov
cdq
leave
inc
dec
jne
fadd
push
pop
dec
jmp
les
push
inc
imul
inc
rol
lds
jmp
adc
ss
adc
shl
xchg
fisub
repnz
mov
mov
stc
sub
push
dec
mov
cs
xchg
popa
xchg
lock
test
scas
cs
cmps
sub
lock
push
jb
ret
sbb
pop
inc
push
in
clc
movs
std
mov
ss
mov
clc
pop
pop
and
or
inc
jne
mov
nop
xlat
add
add
sahf
sbb
mov
cmp
lods
pop
daa
add
sub
cmp
mov
xchg
sbb
xchg
cwde
daa
ror
xor
push
mov
xchg
leave
lds
jno
addr16
cmp
or
fisttp
out
push
dec
fs
les
rcr
hlt
adc
cmps
ins
inc
repnz
aas
call
(bad)
dec
adc
dec
test
jp
imul
pop
mov
outs
dec
aaa
mov
outs
xchg
(bad)
cmpxchg
mov
add
lea
daa
mov
xchg
cmp
push
fucom
push
cmps
sbb
jge
into
push
les
rcl
sbb
and
stc
inc
sbb
jp
and
enter
fnstsw
adc
enter
aaa
or
sbb
and
aaa
inc
iret
mov
and
out
inc
mov
mov
out
(bad)
push
in
or
mov
sub
imul
call
je
sbb
cmp
ins
pop
mov
xchg
sti
js
dec
je
cmc
xor
mov
(bad)
dec
outs
fist
mov
ds
dec
cmc
(bad)
mov
and
nop
sub
repnz
ret
pop
out
fwait
into
bswap
mov
ror
add
cmp
bound
pop
or
adc
xchg
lods
lahf
or
int
xor
shl
mov
adc
(bad)
dec
mov
cmp
(bad)
jle
int3
jle
mov
and
xchg
jecxz
aaa
inc
mov
movs
rcr
hlt
dec
push
inc
cld
cs
test
or
lods
lea
je
jle
inc
sub
or
adc
lds
jae
cli
in
mov
push
pushf
loope
dec
std
rol
mov
outs
in
ss
and
mov
enter
call
dec
jle
xchg
sbb
enter
in
clc
retf
mov
bound
mov
sbb
sub
xchg
and
lods
push
and
sub
repnz
scas
ds
and
inc
dec
inc
lgs
aam
mov
cmp
enter
retf
and
repz
and
add
std
test
pop
(bad)
mov
adc
movs
sub
jecxz
in
jg
test
adc
or
or
std
aam
push
xchg
out
dec
cmp
popa
mov
and
out
test
(bad)
sub
or
push
mov
and
or
or
sti
push
dec
sbb
repz
mov
cdq
xor
enter
es
mov
call
mov
es
pop
lds
sbb
sub
mov
ror
pop
push
pop
sbb
dec
out
mov
dec
fwait
sti
lahf
test
mov
addr16
jmp
sti
jae
in
sbb
mov
fisub
jg
mov
rcl
out
adc
adc
rol
mov
fstp
mov
(bad)
cwde
int3
or
and
pop
add
inc
aas
mov
mov
outs
mov
rcl
(bad)
or
adc
aam
rol
das
rcl
loope
lods
imul
push
fcom
cmp
dec
retf
mov
pop
cmp
in
mov
jge
pop
dec
imul
jmp
sub
lock
adc
fwait
enter
stos
push
push
popa
push
(bad)
dec
mov
fimul
je
enter
jecxz
les
cmps
mov
inc
mov
ja
cmp
inc
mov
xor
scas
cwde
mov
or
imul
xchg
mov
adc
xchg
int
pop
mov
jno
xchg
jae
mov
mov
int
fisub
add
loop
les
(bad)
adc
push
jb
mov
or
(bad)
dec
jb
jbe
test
out
cmp
jb
imul
std
mov
mov
shl
cmp
jns
or
neg
cli
outs
daa
ror
cwde
mov
hlt
(bad)
push
rcr
out
popf
stc
add
es
gs
out
cld
xor
or
jae
sub
mov
xor
std
xchg
out
adc
mov
xor
adc
int
call
push
imul
sar
or
(bad)
call
(bad)
out
dec
ja
pop
retf
rcr
jae
mov
push
aam
out
push
pop
pop
mov
adc
hlt
scas
push
fimul
push
and
push
jecxz
cmp
lahf
jne
aas
test
into
mov
out
jbe
xlat
cmp
cmc
jecxz
fadd
out
pop
and
xchg
jmp
push
shl
hlt
or
popa
jnp
(bad)
(bad)
repz
mov
pop
push
stos
and
dec
sbb
ret
mov
add
pop
ret
add
jae
push
xchg
test
xor
xor
ud2
mov
mov
fnsave
and
js
mov
mov
fisub
jne
int
jns
dec
pop
fsub
call
sbb
jae
(bad)
xchg
(bad)
aam
cwde
mov
mov
fidiv
mov
daa
dec
pop
pop
jg
xchg
aaa
or
mov
mov
xor
cwde
cmp
or
cmp
call
xchg
add
xchg
inc
mov
arpl
test
mov
jmp
gs
ins
inc
(bad)
fcmovne
hlt
jmp
fcomp
sti
(bad)
scas
dec
ins
arpl
sbb
push
push
push
sub
mov
mov
jmp
les
mov
in
push
mov
in
cmp
mov
mov
dec
enter
and
and
bound
push
sub
iret
mov
jmp
fidivr
dec
mov
adc
mov
xchg
pop
ins
cmp
daa
mov
daa
loopne
jecxz
call
cmp
ret
lock
mov
test
add
jl
add
or
jne
jg
fild
std
inc
add
adc
push
stos
scas
ret
lea
(bad)
(bad)
cmp
nop
pop
jle
mov
(bad)
cmps
jmp
hlt
adc
cwde
jmp
sub
pop
jle
add
cmps
ins
add
jmp
mov
cs
ret
xor
retf
dec
call
ja
stos
jmp
inc
dec
push
fwait
adc
(bad)
fisubr
mov
push
sub
repz
call
jg
dec
inc
daa
inc
pop
seta
mov
cmps
mov
mov
(bad)
(bad)
imul
stos
dec
or
aaa
repnz
mov
or
fxch
or
mov
test
retf
bound
and
cmp
fs
hlt
daa
int3
inc
add
sbb
or
dec
rol
fst
inc
adc
inc
test
nop
xor
mov
pop
dec
mov
pcmpeqb
into
imul
xchg
jge
jnp
ins
push
jecxz
cmp
popa
sti
dec
cmp
xor
ss
jmp
or
sahf
pop
(bad)
mov
adc
popa
in
pusha
sub
mov
xchg
sbb
mov
and
addr16
push
cld
in
jmp
je
dec
jo
ret
iret
xor
movs
jmp
in
ins
push
lds
outs
addr16
adc
mov
xchg
mov
icebp
jle
jne
pop
or
pop
ins
mov
cmp
jnp
mov
arpl
popa
ret
stos
ins
mov
test
xor
int3
cmp
adc
cmp
shl
popa
enter
rcr
dec
stos
mov
inc
sbb
push
aam
lea
nop
mov
push
cdq
push
adc
pop
je
push
dec
shl
pop
jmp
(bad)
repnz
int
mov
je
inc
inc
mov
or
cmp
cmp
inc
xlat
or
sub
(bad)
adc
lea
sar
leave
add
sbb
jmp
shl
mov
inc
push
jbe
cmp
jae
(bad)
sub
out
test
jo
add
or
add
out
xchg
test
xor
push
add
(bad)
fidivr
xchg
jmp
out
lea
jb
fild
fldenv
xor
pushf
sbb
ja
and
movs
push
(bad)
shl
retf
xchg
dec
jae
add
jns
scas
arpl
cs
push
inc
scas
adc
pop
ret
pop
pop
mov
mov
push
add
enter
inc
push
xor
dec
cmp
add
sbb
cmovnp
xchg
aad
mov
enter
sahf
cmp
cmp
call
ins
ins
inc
ret
in
ins
iret
push
test
int
ficom
ror
(bad)
dec
jae
mov
in
inc
out
cmp
gs
ins
push
pop
pop
ins
lock
mov
push
lods
inc
test
add
push
in
es
cmp
rcl
inc
cmp
aam
addr16
int
mov
fbstp
and
aad
mov
in
push
outs
repnz
xor
pop
in
sub
adc
cmc
jno
cmp
sbb
xchg
cwde
push
shl
loope
sub
sbb
sti
leave
adc
jmp
jno
inc
add
adc
dec
gs
add
dec
gs
pop
sub
xor
mov
fstp
test
aad
(bad)
clc
popa
or
fisttp
mov
adc
dec
xor
dec
xor
push
out
dec
and
dec
das
adc
fsubr
into
mov
jl
iret
leave
mov
in
int3
xchg
jp
jp
and
out
dec
loopne
pop
pop
inc
adc
mov
cmp
(bad)
jo
ret
in
stos
clc
ffreep
xor
sub
pop
xor
xchg
shl
sub
in
cmc
into
mov
push
dec
int3
cmc
mov
cs
add
xchg
sbb
rol
and
addr16
pop
push
sub
not
sahf
ror
jmp
push
adc
dec
mov
push
repz
jge
leave
adc
imul
inc
add
fnsave
out
cmps
stos
div
jne
mov
sub
dec
xor
cld
mov
and
xor
jl
arpl
loopne
jg
mov
xchg
ror
mov
jp
xchg
enter
cs
addr16
shr
pop
out
mov
inc
inc
(bad)
imul
mov
push
sti
mov
ja
push
jl
repz
mov
std
shr
adc
stos
push
sub
test
scas
scas
(bad)
dec
(bad)
inc
push
fucom
outs
pusha
dec
jne
jb
and
sbb
enter
jbe
add
icebp
inc
scas
out
inc
out
sbb
test
adc
sbb
adc
or
mov
stc
pop
or
push
sbb
cmc
jns
cmp
ror
push
jns
adc
mov
(bad)
in
sub
lock
data16
adc
inc
ficomp
lds
mov
jo
push
dec
push
in
(bad)
fnstcw
in
adc
aaa
xchg
pop
neg
cmp
jne
xchg
int3
stos
leave
shl
ja
addr16
sbb
nop
dec
arpl
xor
cld
scas
in
sti
outs
out
jmp
js
adc
cmp
movs
dec
jecxz
add
mov
mov
xor
sar
fistp
push
arpl
adc
inc
cmps
dec
xor
mov
jmp
test
pop
mov
cli
and
mov
push
lock
clc
pop
pop
xchg
dec
or
push
pop
icebp
jg
lock
mov
call
jmp
push
jmp
add
fcomi
iret
ffreep
fimul
ret
mov
jnp
inc
mov
scas
sub
pop
mov
out
mov
push
xor
neg
data16
add
addr16
sbb
inc
mov
push
mov
push
inc
pop
and
int3
adc
xchg
in
inc
repnz
xchg
(bad)
cwde
mov
ret
retf
adc
out
xor
mov
adc
mov
into
xchg
inc
popa
mov
outs
call
outs
push
cmp
xor
pushf
sub
rcr
clc
shr
xchg
sub
inc
sti
sbb
out
outs
xchg
aam
in
cwde
jb
daa
test
cmp
test
ds
cs
fld
std
ret
retf
mov
stos
xchg
and
and
loope
icebp
push
repz
sbb
ins
das
xchg
cs
cmps
add
adc
cmp
aaa
cmps
mov
(bad)
in
arpl
retf
dec
lock
daa
int3
(bad)
push
test
ins
movs
sbb
pop
movs
sub
sub
js
sbb
mov
adc
sub
dec
fisttp
nop
xor
popa
inc
xchg
pop
in
ret
mov
inc
sbb
scas
call
std
jl
mov
loopne
xchg
sbb
pop
xor
push
and
(bad)
mov
out
jne
inc
ins
repnz
iret
adc
cdq
xor
xchg
pop
cmc
jnp
mov
add
sbb
(bad)
imul
add
jno
pusha
xchg
rcl
lea
pop
sub
xchg
out
out
sbb
mov
pop
clc
push
cmp
mov
stc
push
sub
xchg
adc
ret
pop
bound
shl
sbb
sbb
and
dec
add
cmp
aam
scas
lods
sbb
ds
add
rol
imul
inc
sbb
out
fidiv
gs
adc
ds
lds
sbb
or
lea
mov
xchg
into
lock
add
sahf
sti
jne
mov
xorps
or
mov
fidivr
push
js
push
dec
stos
daa
outs
std
cmps
mov
and
neg
out
int
ja
push
and
cdq
jns
cpuid
iret
in
mov
mov
mov
xor
adc
(bad)
bsf
sti
inc
int
ficomp
dec
jle
jmp
push
add
lock
xchg
imul
shl
lock
mov
and
in
cs
mov
sub
fwait
out
std
inc
fcmove
add
lock
jle
iret
pusha
jle
and
or
push
mov
mov
nop
cmps
cdq
add
adc
xchg
dec
aas
adc
and
mov
mov
leave
adc
icebp
inc
cmp
inc
ins
or
fst
add
(bad)
push
inc
add
shl
sbb
push
and
mov
cdq
movs
test
mov
out
jmp
or
push
fs
(bad)
push
jp
pop
lahf
fsubr
mov
in
adc
and
out
std
inc
xchg
mov
sti
push
(bad)
mov
sub
out
bound
fld1
and
pop
push
mov
xchg
sbb
out
push
adc
(bad)
cmp
dec
xlat
jb
test
mov
jp
adc
push
and
loopne
mov
add
outs
pop
cmps
sub
and
and
mov
sbb
pushw
and
movs
push
jmp
int
jmp
or
xchg
ret
pop
jnp
jo
push
cmp
dec
repnz
aad
(bad)
sbb
or
fnstsw
dec
mov
std
and
inc
jno
sbb
imul
pusha
jb
or
pop
push
in
cs
(bad)
cli
fsubr
xor
jnp
lods
fsub
dec
push
pop
aam
adc
aad
dec
das
inc
push
icebp
shl
dec
inc
mov
lods
push
movs
dec
and
xchg
add
outs
xchg
add
pop
cwde
shl
jle
or
push
mov
call
mov
adc
mov
in
dec
rol
push
pop
sub
lahf
js
and
inc
mov
mov
sbb
sbb
xor
inc
sbb
(bad)
mov
cmp
loop
sub
add
sub
jns
int
sbb
mov
sub
aaa
ret
out
or
ret
and
std
push
int3
mov
pop
leave
adc
ss
ret
xchg
cmp
ret
ins
dec
sub
ja
outs
aad
add
pop
dec
shr
cmp
fdivr
popf
cmps
popf
enter
xor
pop
sti
pushf
pop
stc
cwde
stc
sub
daa
out
fcmove
clc
cmps
lods
fld
or
xor
in
add
nop
je
fiadd
or
push
retf
xchg
mov
or
pop
and
pop
imul
sub
push
cld
jecxz
ins
std
sub
xchg
mov
sbb
pop
xor
jbe
(bad)
mov
popf
push
push
fwait
pop
sub
call
(bad)
imul
push
scas
in
scas
xor
xor
add
xor
adc
(bad)
movs
push
es
inc
dec
pop
les
cmps
xchg
fs
sub
jle
clc
push
fcomp
js
call
sbb
lea
pop
pop
mov
mov
jge
pop
push
pushf
or
cld
int
push
cmp
ss
in
jne
(bad)
adc
or
sbb
jp
xchg
mov
test
fst
xor
retf
aaa
jo
fimul
(bad)
leave
int3
fadd
shr
pop
(bad)
mov
hlt
ret
mov
inc
mov
jecxz
cmps
mov
push
aaa
(bad)
out
call
neg
cmp
dec
ins
movs
fld
into
jno
(bad)
mov
pop
inc
and
adc
inc
into
ret
xor
jg
pop
sbb
fsubr
xchg
mov
sbb
jge
xchg
in
mov
cmc
arpl
dec
add
mov
leave
outs
and
cmp
retf
shr
dec
mov
fisttp
cli
icebp
mov
mov
ins
xchg
cmp
fstp
out
std
push
sti
je
lahf
fistp
cmp
popa
jns
mov
movs
pop
mov
into
cld
mov
(bad)
mov
mov
sub
iret
cmp
pop
movs
retf
dec
shl
xor
shr
xor
das
in
loopne
inc
or
arpl
pop
dec
les
dec
adc
xchg
sbb
inc
or
hlt
jo
sbb
fild
sub
mov
xor
mov
xor
push
loopne
imul
fcmovne
pop
adc
fs
les
gs
xor
pop
xchg
clc
pop
icebp
add
jmp
mov
js
leave
out
iret
popf
repz
push
fldenv
aaa
inc
push
and
push
stos
sbb
fadd
jo
jmp
xchg
test
lds
scas
addr16
sub
adc
jmp
lock
(bad)
gs
jmp
mov
lock
jecxz
retf
xchg
mov
stos
setbe
mov
cmp
push
aad
push
adc
jmp
cmp
ja
(bad)
mov
add
pop
mov
leave
cmp
int3
adc
pop
cmp
sbb
and
test
outs
mov
mov
adc
mov
aaa
jg
sub
dec
xchg
sub
mov
add
pop
cmp
pop
jb
(bad)
xor
pusha
outs
iret
xchg
int3
pop
sar
inc
out
adc
ds
cmp
test
mov
das
sar
xchg
or
jmp
es
cld
cmc
pop
sub
pop
mov
and
in
hlt
leave
out
or
lock
mov
pop
retf
dec
mov
imul
imul
add
cmps
fcomp
pop
jbe
mov
lahf
loop
add
lock
shr
add
add
pushf
or
adc
and
xchg
add
(bad)
mov
mov
and
mov
adc
cmp
std
mov
cmp
sbb
and
inc
mov
push
mov
or
jmp
pop
xor
ret
or
dec
outs
(bad)
add
xchg
add
scas
add
and
cwde
xchg
jg
jp
jb
int
lock
mov
lods
out
repz
outs
ins
mov
push
hlt
xlat
cld
mov
pop
pop
and
repz
cmp
add
inc
inc
sbb
push
ret
dec
dec
pop
jmp
sub
inc
push
mov
sub
aas
das
js
ror
das
enter
sbb
cmp
mov
test
adc
fsub
es
test
and
pop
cdq
aas
xlat
push
push
andnps
cli
loope
and
sahf
imul
jb
ret
push
int3
push
ror
aad
push
leave
aam
add
xchg
add
das
dec
jle
pop
xchg
or
lds
jb
or
add
(bad)
xchg
xor
mov
scas
pusha
lods
jle
cmp
sbb
scas
icebp
movs
(bad)
fst
xchg
mov
push
jmp
push
test
or
int3
adc
test
mov
mov
xchg
inc
pop
jno
addr16
loopne
outs
icebp
mov
sub
xor
pop
stc
dec
ret
xor
movs
lds
dec
xchg
and
xlat
xor
and
test
pop
ret
ret
pop
mov
push
fsub
xor
fmul
test
sbb
lds
cld
mov
imul
outs
sti
jl
sahf
test
aad
add
jne
cs
or
fist
add
add
inc
aas
fdiv
int3
clc
push
mov
jno
jecxz
pusha
(bad)
or
popa
(bad)
cld
(bad)
div
mov
xchg
(bad)
shl
sbb
leave
and
cmps
dec
jle
stc
loopne
sbb
in
jbe
xchg
inc
sbb
jae
bound
inc
adc
mov
hlt
lods
jb
cmp
loopne
inc
outs
push
inc
pop
push
inc
jmp
or
lahf
sub
adc
int
gs
xchg
mov
inc
sub
(bad)
and
jne
push
fwait
out
lods
inc
and
fstp
shrd
sub
clc
dec
mov
repnz
sbb
mov
inc
jecxz
xor
iret
je
mov
(bad)
fiadd
dec
adc
sub
mov
ja
inc
push
adc
sar
mov
push
mov
sar
add
hlt
fwait
sti
adc
cmps
pop
dec
jnp
fbld
and
call
jecxz
aas
cmc
push
jo
fnstenv
xor
in
aad
loope
out
or
in
test
adc
mov
xor
pop
push
dec
mov
test
es
push
mov
jecxz
pushf
jb
lock
xor
aam
xchg
mov
sbb
push
push
push
clc
mov
gs
cmps
pop
mov
wrmsr
sub
pop
in
push
or
mov
cs
ror
lahf
xchg
ins
inc
push
fdiv
add
ret
pushf
out
repz
add
out
xchg
pop
push
xchg
ret
cli
adc
inc
mov
pop
and
xlat
or
cld
xchg
inc
mov
in
and
xchg
push
mov
jns
push
mov
dec
pop
jne
lock
or
imul
jno
mov
lds
inc
inc
aaa
(bad)
std
jmp
adc
add
movs
shl
imul
inc
std
mov
loopne
popf
div
clc
sbb
sbb
iret
jecxz
fldln2
sub
loope
jg
(bad)
cdq
or
fist
jecxz
push
int
sub
jae
jne
mov
mov
cmp
or
aam
and
(bad)
fwait
xchg
addr16
(bad)
inc
jg
cmps
and
(bad)
xchg
(bad)
fisubr
push
mov
adc
loope
sbb
popa
pop
push
sahf
pop
enter
pop
dec
fstp
mov
call
mov
or
dec
mov
sub
loop
push
push
push
jb
mov
mov
pop
sbb
jg
nop
jge
adc
in
cmp
call
stos
retf
(bad)
into
popf
in
sbb
loop
fisttp
cmps
cmp
shl
ds
sbb
inc
push
jecxz
cmp
mov
or
sub
out
push
sbb
push
xor
cmp
dec
fist
clc
jg
jmp
add
mov
xchg
add
jnp
push
or
fldcw
and
out
pop
mov
xor
fnstcw
stos
mov
je
scas
aaa
or
lahf
mov
ins
fadd
lock
xor
jno
push
inc
lahf
mov
add
into
(bad)
xor
sub
(bad)
cli
aad
pop
ret
xchg
adc
retf
jle
add
xor
scas
push
cld
dec
pop
xchg
lods
aad
sbb
test
xor
cmp
leave
jecxz
test
mov
or
test
adc
xchg
shr
retf
fcmovb
rol
cmp
xchg
pop
repz
mov
or
mov
pop
cmps
sub
in
adc
je
mov
dec
enter
mov
pop
dec
rcl
movs
test
jmp
cmps
fldcw
cdq
push
addr16
mov
cmp
and
inc
lahf
psubb
sahf
jge
dec
dec
inc
dec
in
mov
out
cmp
stos
mov
leave
xchg
push
loop
pop
std
mov
dec
loop
adc
sbb
in
cmp
xchg
or
jno
xchg
stos
fcomp
call
movs
call
jo
bound
mov
data16
jmp
mov
stos
fs
popa
loope
push
dec
add
movs
add
dec
adc
inc
out
cmp
out
test
call
(bad)
mov
xor
aam
shl
xchg
xlat
aaa
call
les
xor
shr
cdq
fnstsw
stc
jmp
mov
lds
jo
loop
retf
aad
lods
add
pop
mov
fnsave
loopne
in
out
pop
or
es
fcmovb
xchg
scas
pushf
jg
mov
jle
adc
inc
iret
jae
cdq
sar
xchg
mov
inc
mov
out
les
mov
loope
and
mov
sub
hlt
jp
cmp
fnsave
sbb
aad
xchg
jmp
xchg
dec
lods
sbb
adc
xor
push
cmps
fcomp
inc
cdq
push
ins
loopne
fst
mov
mov
pop
xor
and
call
xchg
sbb
mov
inc
mov
sbb
cmp
sbb
and
int
adc
push
rcl
call
xchg
enter
lock
into
mov
cdq
scas
adc
repnz
mov
xchg
xchg
xchg
mov
or
repnz
shl
push
inc
pop
sar
inc
sahf
adc
push
mov
aad
add
icebp
sbb
jg
into
xlat
dec
ret
mov
mov
jmp
xor
inc
mov
les
outs
cs
(bad)
not
inc
sbb
ret
push
fnstcw
inc
sbb
mov
inc
jmp
test
push
xchg
add
in
and
(bad)
cmp
rcl
loop
fsubr
pushf
out
enter
push
mov
xchg
pop
js
pushf
and
jle
sar
hlt
jmp
jge
test
cmp
hlt
push
(bad)
pop
data16
icebp
imul
ret
push
inc
jo
repz
xchg
fld
pop
out
sub
sbb
xchg
add
(bad)
jne
lds
sub
test
inc
repz
pop
pushf
mov
sub
add
xor
mov
jge
xchg
mov
leave
xchg
cmp
pop
int3
inc
imul
in
outs
add
mov
cwde
push
sub
push
gs
mov
jg
in
inc
and
mov
jle
test
inc
scas
mov
ja
pop
inc
mov
dec
fimul
cdq
xchg
inc
test
xchg
mov
in
ror
cdq
sar
mov
mov
pushf
push
jnp
mov
not
or
lods
test
sub
jb
pop
or
mov
or
jmp
cmps
sub
enter
aad
jo
fwait
mov
fimul
in
std
adc
test
fidiv
out
sub
in
push
sub
ins
in
lahf
hlt
adc
or
xchg
cld
in
loopne
jmp
push
add
xor
xchg
mov
or
jo
sbb
scas
(bad)
mov
call
in
dec
jp
cmp
mov
mov
fistp
ins
scas
xchg
bound
addr16
and
or
dec
mov
and
pop
xchg
call
jno
and
ret
int3
mov
leave
jnp
ins
jl
pop
out
adc
popa
sub
fst
and
or
pop
adc
stos
pop
dec
fcmovb
jecxz
pop
xor
retf
icebp
shl
sar
es
push
ret
in
dec
fiadd
daa
sar
popf
sbb
or
loop
call
pop
and
retf
mov
or
dec
outs
pop
fxch
aas
movs
rcr
push
fwait
dec
es
stos
into
int3
icebp
nop
mov
aam
mov
mov
retf
jmp
pop
add
inc
mov
out
repz
push
lea
(bad)
sub
adc
inc
xchg
ret
(bad)
dec
das
adc
out
into
sar
stos
or
push
es
xlat
sbb
fwait
sbb
cmp
imul
cs
sub
outs
movs
xlat
add
dec
dec
shl
mov
retf
je
sub
mov
cmp
je
xchg
repnz
ins
fistp
dec
cli
mov
mov
add
sbb
addr16
(bad)
outs
dec
ds
jo
cmp
cmp
mov
rol
adc
movs
(bad)
adc
fstp
pusha
xor
sub
nop
dec
ret
or
push
ins
and
shl
xchg
shr
rcl
mov
xor
adc
pop
push
lock
sub
in
test
in
es
mov
jl
jmp
mov
popa
push
inc
fbld
sub
mov
mov
call
test
inc
push
pushf
cli
ins
and
lock
dec
xor
into
and
mov
sar
(bad)
push
shl
xlat
xchg
jnp
cmp
xor
stos
scas
sti
icebp
cmp
sub
xor
dec
test
mov
inc
call
pop
or
jmp
into
cmp
xor
hlt
frstor
jne
push
clc
dec
das
xchg
adc
int3
xor
int3
push
lds
dec
ret
adc
mov
out
inc
mov
dec
mov
nop
jno
out
mov
jge
cmp
sar
lods
jmp
outs
mov
and
add
dec
lods
test
sub
shl
je
or
mov
imul
dec
sbb
jno
jo
sbb
fcomp
cmps
shr
lahf
in
jns
dec
fsub
les
(bad)
inc
mov
fcomp
adc
adc
xchg
movs
pop
test
mov
aad
push
sbb
xor
pop
inc
sub
cmp
stos
neg
jle
push
in
cmps
jns
or
mov
retf
cmps
dec
push
or
inc
or
movs
add
inc
retf
xchg
sbb
adc
and
push
adc
mov
mov
dec
jecxz
jl
dec
mov
mov
loop
jmp
pop
into
jbe
ja
cmp
addr16
cdq
mov
mov
xchg
pusha
adc
pop
xchg
mov
mov
cld
and
push
adc
xchg
out
(bad)
xor
es
in
jmp
imul
aaa
(bad)
neg
push
pop
or
(bad)
xor
adc
es
(bad)
fs
pop
pop
lds
mov
daa
cld
or
rol
xlat
mov
xchg
sti
call
ret
mov
ret
xchg
cmp
jp
xchg
shl
pop
outs
(bad)
addr16
and
loope
add
popa
pop
repz
fistp
call
ds
cmp
fst
cdq
dec
jg
addr16
jl
clc
leave
cmps
mov
dec
ficomp
and
jnp
ss
dec
push
add
or
add
adc
fnsave
call
add
xor
add
fistp
daa
test
jns
push
jle
rcl
scas
ds
movs
repnz
and
lds
out
(bad)
call
add
not
xchg
xchg
int
jecxz
or
cmp
je
jmp
sbb
and
js
dec
movs
jo
pop
rcl
pop
stos
int
stos
dec
mov
pop
aad
popf
mov
(bad)
cmp
lods
sub
in
pop
idiv
jb
stc
xchg
jnp
jmp
and
add
push
push
adc
test
xchg
xor
and
out
call
or
jecxz
mov
adc
call
pop
out
iret
test
out
shl
cmp
loop
xchg
mov
xchg
test
pop
and
adc
and
pop
jle
mov
cmp
sub
inc
sbb
jae
push
xchg
jbe
cmp
pushf
mov
mov
stc
pushf
mov
hlt
jmp
jecxz
sbb
sbb
das
test
scas
stc
hlt
jl
jo
in
sub
cwde
dec
dec
stc
fild
jmp
pusha
mov
cs
mov
pop
sub
fst
imul
pop
adc
cdq
jle
xor
fwait
dec
xor
enter
stos
mov
mov
loopne
cmp
repnz
jl
dec
dec
push
lahf
popf
adc
div
jle
inc
xchg
fwait
xchg
mov
bound
ins
adc
push
outs
xchg
test
scas
xor
push
ret
cli
cmp
cmps
jno
shl
clts
cmp
stos
or
(bad)
push
push
sar
pop
add
xchg
push
test
sbb
xchg
mov
mov
push
sub
ret
pop
mov
ja
(bad)
push
aad
or
pushf
lods
fwait
fwait
mov
adc
sbb
push
jmp
les
xor
dec
jl
jl
fwait
push
pop
aam
loopne
cmp
add
cmps
ins
adc
inc
jmp
push
call
jnp
movs
xchg
cmp
jmp
sub
mov
add
loope
and
inc
leave
add
scas
mov
dec
mov
mov
push
dec
jbe
cmp
(bad)
pop
rcr
std
mov
cmp
outs
scas
mov
jbe
mov
sbb
push
push
fsub
stos
cmc
(bad)
push
mov
das
adc
sbb
jne
loop
fadd
xor
not
(bad)
div
fnsave
loop
jmp
push
in
jne
xor
xchg
and
sbb
ret
cmp
outs
jns
div
outs
leave
sbb
dec
test
sar
push
int
dec
pop
jmp
movs
jno
repnz
fnstsw
popf
pop
inc
adc
mov
lock
(bad)
mov
ja
js
cwde
div
aam
rcl
pushf
xchg
jg
cmp
sti
sbb
dec
(bad)
fstp
xchg
xor
std
rcr
and
sti
sahf
outs
and
in
mov
pop
hlt
lahf
inc
cmp
fadd
je
inc
adc
dec
pop
jb
mov
sbb
dec
cmp
es
xchg
xlat
in
mov
push
inc
fbstp
jno
mul
(bad)
pop
jecxz
jp
push
test
xchg
xchg
mov
pop
mov
cmps
xor
mov
mov
mov
sub
retf
sub
sub
sbb
xor
mov
cmps
ins
ss
dec
retf
repnz
pop
retf
retf
sbb
push
xor
enter
retf
xchg
adc
xchg
loopne
retf
push
out
out
xlat
outs
xchg
sbb
imul
xchg
(bad)
jbe
dec
loop
mov
pop
fistp
adc
lods
push
xchg
dec
pop
out
jecxz
cmova
mov
fidivr
inc
aaa
mov
inc
bound
xor
xor
cmp
and
clc
into
clc
dec
out
in
and
mov
jp
xchg
and
and
push
and
daa
and
popf
mov
das
imul
inc
in
sbb
inc
mov
inc
not
repnz
addr16
test
push
inc
call
int
ret
push
sub
push
dec
inc
add
mov
cmps
mov
scas
je
sub
movs
fiadd
mov
cmp
mov
ror
sub
pusha
mov
rcl
add
jb
test
out
mov
in
ins
ins
lahf
pop
mov
sar
push
mov
test
inc
add
call
mov
push
std
push
js
in
(bad)
imul
mov
pushf
(bad)
call
inc
xchg
fld
inc
mov
or
dec
mov
fdiv
jge
ja
rcr
mov
mul
jg
ficom
add
repnz
push
push
fst
mov
xor
adc
mov
loopne
jnp
mov
fdivrp
pop
inc
add
arpl
retf
imul
ret
jne
or
loopne
outs
sbb
outs
cmc
in
or
cmps
or
mov
adc
fadd
cmp
fcom
daa
cli
jbe
inc
add
test
ins
sti
cmp
xchg
outs
mov
ret
sbb
mov
or
mov
cmp
dec
jns
inc
inc
lds
mov
inc
pop
rcr
shl
int3
aaa
sbb
add
cmp
out
mov
call
sbb
jg
xor
mov
std
lods
iret
add
pop
lahf
mul
push
aas
xor
daa
jb
outs
test
pop
mov
outs
rcr
mov
sar
lock
mov
(bad)
cwde
xchg
imul
xchg
pop
leave
push
push
inc
aaa
repnz
(bad)
arpl
mov
and
data16
repz
adc
cmps
adc
imul
test
mov
adc
adc
out
add
loop
pop
sub
pop
and
mov
ins
retf
scas
jb
jb
daa
cmp
cmp
add
(bad)
test
mov
xor
and
pop
fmul
push
cmp
retf
push
xchg
xchg
add
test
sar
jne
add
jne
cmp
imul
jne
push
cmps
dec
retf
push
fidivr
mov
jns
imul
fbld
das
dec
inc
jecxz
xchg
jl
fisubr
stos
cld
mov
daa
arpl
test
dec
outs
or
xchg
loop
int
jl
leave
xchg
jno
in
xor
push
pusha
xchg
sbb
xchg
mov
dec
call
outs
lahf
pop
sbb
jnp
popa
jp
jecxz
or
movs
das
hlt
nop
or
xchg
inc
xchg
mov
adc
(bad)
sbb
xchg
add
pop
aad
in
cwde
dec
hlt
mov
ja
jo
retf
sbb
imul
loope
sub
mov
clc
sub
jmp
push
pop
adc
fadd
pop
or
rcr
loope
xor
mov
cmp
push
push
inc
fadd
adc
cli
ja
cmps
xor
retf
mov
dec
int3
pop
daa
fwait
sbb
test
dec
push
or
aaa
inc
fstp
xor
push
popf
cwde
ins
bnd
xchg
ds
ret
or
xor
icebp
add
pop
scas
mov
lods
mov
retf
movs
and
lahf
mov
adc
(bad)
push
clc
retf
add
push
inc
shr
loop
xlat
pop
mov
xchg
mov
das
ficom
cmps
lea
scas
jo
mov
adc
sub
sbb
jo
inc
inc
gs
inc
sbb
lahf
imul
repz
rcr
arpl
or
sbb
push
mov
inc
or
jmp
pop
nop
and
xor
test
popa
mov
sbb
mov
fwait
dec
mov
into
cmps
cdq
adc
pop
fstp
add
dec
xchg
push
mov
add
daa
dec
scas
inc
add
shr
cmp
xor
test
shl
dec
iret
or
pop
pop
std
cmps
lock
iret
jnp
ins
test
pop
shl
stc
push
ins
mov
shl
lahf
xchg
test
(bad)
push
sbb
loope
and
inc
clc
mov
loop
add
jl
shl
nop
xor
sbb
mov
mov
cmp
cdq
test
and
or
dec
movs
xor
mov
enter
push
xor
mov
mov
cmc
cli
ss
or
lods
dec
pop
fstp
loop
add
pop
jle
mov
nop
in
pop
cmps
into
(bad)
sbb
xchg
into
jge
test
mov
mov
mov
test
popa
mov
setae
data16
icebp
push
ss
sub
icebp
xor
mov
movs
add
xchg
add
outs
or
int
sbb
xor
adc
addr16
sub
sub
cwde
enter
aam
sub
and
xor
mov
fild
pop
aam
das
add
xchg
push
(bad)
loopne
je
mov
sbb
leave
(bad)
(bad)
gs
gs
shl
rcr
fwait
dec
xchg
mov
gs
lods
push
sub
cmp
xchg
scas
adc
int3
xchg
hlt
mov
cdq
clc
adc
push
inc
out
xor
movs
mov
mov
test
mov
pop
iret
or
test
sub
pop
je
data16
int
xlat
sbb
stos
rcr
not
jge
mov
clc
mov
idiv
(bad)
retf
mov
and
mov
xor
pop
xchg
dec
in
fisttp
inc
nop
mov
imul
iret
sbb
sbb
sti
cli
push
cmp
push
xor
ficomp
rol
mov
aas
aad
push
mov
fprem1
push
fnstcw
aam
jbe
(bad)
adc
dec
push
sbb
mov
fxch
inc
mov
xchg
sbb
jo
in
and
jmp
jne
jae
cmps
test
sti
enter
loope
in
cmc
jmp
mov
cld
fistp
ss
sbb
icebp
cmp
xchg
mov
scas
(bad)
and
out
in
mov
shr
out
sbb
(bad)
mov
jbe
aad
inc
mov
push
scas
sahf
jns
mov
ds
xor
(bad)
adc
and
pop
mov
xchg
xchg
stos
jecxz
leave
test
and
xchg
or
jp
mov
mov
jmp
inc
mov
xor
inc
push
dec
or
push
data16
mov
sbb
pop
mov
xchg
mov
imul
popa
outs
pop
jnp
add
jo
mov
lea
pop
adc
movs
add
(bad)
mov
cmp
mov
mov
push
clc
xor
dec
scas
mov
pop
sub
ins
ins
retf
inc
and
fwait
push
jae
sub
arpl
gs
arpl
mov
sbb
pop
add
addr16
test
mov
xchg
sub
jae
and
dec
pushf
stos
push
xchg
xchg
lods
jg
in
imul
idiv
mov
sub
jno
and
mov
add
pop
scas
ror
imul
pushf
dec
(bad)
icebp
pop
rcl
fwait
enter
mov
mov
cmp
mov
test
in
or
pop
je
sti
popf
adc
push
pop
retf
sbb
lods
push
retf
inc
fild
mov
push
mov
repz
pop
xlat
add
fnsave
mov
cpuid
loopne
cmc
cs
add
cld
cmp
js
jmp
xor
out
or
es
pop
pop
jecxz
adc
add
pushf
call
lahf
aaa
test
add
sub
cld
mov
cdq
xor
or
test
in
push
in
stos
ret
lods
jecxz
ror
(bad)
jns
add
mov
test
gs
sub
scas
mov
push
mov
nop
xchg
(bad)
pop
jb
popa
sbb
or
add
(bad)
fwait
push
cld
push
dec
sub
in
pop
and
stc
fnstcw
jns
dec
sahf
(bad)
xor
retf
inc
push
std
add
pop
xchg
(bad)
imul
fistp
add
cli
push
in
loop
sti
jge
xchg
jne
retf
arpl
sub
cwde
(bad)
jecxz
xchg
inc
or
scas
imul
push
push
ret
jg
xchg
lahf
mov
aad
cmp
xor
call
push
clc
test
int3
mov
in
popf
js
push
sub
pop
enter
movs
imul
lock
stos
pusha
sub
inc
adc
aas
cs
retf
rol
test
inc
xor
inc
pop
pop
enter
cmp
shr
adc
cmp
inc
ret
xchg
jl
or
mov
aas
pop
aas
in
xor
es
sbb
imul
dec
cmc
jge
lock
push
xor
clc
dec
fsub
(bad)
repz
ret
push
jp
or
sbb
mov
fidiv
add
and
out
ins
mov
dec
cld
push
mov
add
scas
pushf
push
jp
dec
and
std
adc
sub
outs
mov
(bad)
fnsave
dec
movntq
add
inc
dec
or
inc
jge
and
mov
daa
mov
daa
nop
ja
ins
int3
or
add
dec
cdq
out
aad
int
repnz
aas
sub
mov
lea
jnp
jl
repz
jmp
inc
add
mov
ss
outs
(bad)
cld
add
sbb
push
cdq
xor
(bad)
shl
or
adc
and
ins
aad
les
loopne
mov
mov
xchg
push
scas
pop
pop
push
into
push
cmc
clc
movs
and
inc
ror
dec
mov
xor
outs
cwde
pop
icebp
ins
movs
in
icebp
and
pusha
pop
jge
es
xchg
scas
dec
cmp
or
xor
add
sub
cmp
push
or
mov
je
push
neg
pop
xor
cmp
call
ja
icebp
jp
rcl
mov
or
movs
into
jns
or
retf
movs
outs
mov
xor
mov
add
es
xor
aam
in
push
mov
nop
mov
out
pop
adc
or
cdq
lds
pushf
jge
mov
jg
xchg
mov
and
idiv
cli
pop
push
loop
jp
rol
fld
jge
inc
popf
inc
and
push
fistp
cld
stc
mov
pop
or
xor
ja
inc
(bad)
(bad)
lds
xlat
repnz
and
xchg
jnp
gs
mov
jmp
pushf
mov
cmc
sub
fcomip
stos
inc
inc
faddp
es
dec
jae
jb
imul
outs
inc
ja
dec
or
imul
sar
int
xor
je
jne
pop
jmp
icebp
jb
add
and
jbe
adc
fadd
mov
and
sbb
sbb
add
or
es
and
jl
pop
loope
div
fcom
data16
sub
imul
pushf
ror
jmp
jecxz
adc
fwait
call
xor
and
xchg
cmp
jmp
aam
add
into
scas
xor
xchg
inc
add
push
inc
daa
sub
xor
adc
test
lahf
add
jp
and
dec
adc
push
adc
fidiv
jbe
leave
test
outs
jp
sub
xchg
jnp
(bad)
cmp
lods
and
mov
push
iret
das
stos
or
mov
push
adc
std
fstp
pop
mov
jo
inc
loopne
out
ins
mov
clc
adc
fld
aas
faddp
(bad)
movs
or
jmp
xchg
and
pop
sub
or
into
mov
push
dec
aam
cmp
add
mov
(bad)
mov
mov
push
jmp
popa
adc
fsubp
pushf
sub
(bad)
loop
mov
adc
pop
imul
sub
(bad)
sbb
xor
loop
not
jecxz
out
jo
and
mov
push
out
cli
(bad)
shl
pop
pop
div
fcom
mov
and
or
inc
cmp
pop
add
ins
and
addr16
sub
inc
(bad)
jl
push
in
sbb
iret
inc
icebp
iret
(bad)
fld
xlat
test
jns
imul
std
nop
jle
or
or
mov
jl
jmp
or
push
cli
pop
push
je
popa
jp
pop
int
(bad)
fs
dec
mov
das
popf
test
cwde
mov
fbstp
mov
out
and
sbb
ins
jno
jns
push
cld
clc
test
ss
adc
jecxz
xchg
lahf
data16
fist
dec
cmps
push
mov
gs
and
ss
das
adc
int
lea
lods
sti
pop
iret
ins
ret
in
or
pop
add
cmps
cwde
es
mov
cdq
loopne
xchg
xchg
dec
cmps
cmp
dec
out
jnp
rcr
sub
addr16
jmp
mov
mov
or
arpl
addr16
outs
sahf
pop
sub
jge
cli
cmc
xor
(bad)
int
and
int
xor
(bad)
jmp
xchg
sti
adc
dec
push
pop
push
and
mov
bound
(bad)
cmp
jmp
ret
push
lahf
xchg
push
dec
leave
add
xor
stos
jmp
inc
push
dec
rcl
mul
retf
nop
lea
leave
into
xor
push
sub
ins
push
jae
aad
xor
fisttp
ins
outs
ret
push
xor
retf
pusha
cmc
fcmovb
popf
pop
cmp
aaa
(bad)
ins
mov
jmp
push
fdiv
sbb
repnz
dec
fwait
and
cs
push
std
jno
push
div
xor
cmp
adc
or
ror
jl
lock
sti
std
int
out
shl
pop
stos
popa
out
ds
out
rol
add
pop
cmp
inc
adc
push
and
cmps
pop
cdq
pop
addr16
into
(bad)
lods
or
jmp
add
cmp
xor
loope
or
sbb
shl
mov
aad
pushf
icebp
dec
je
test
scas
cmp
sub
xlat
std
push
fcmovbe
adc
aaa
mov
aaa
mov
leave
or
add
popf
pop
clc
jne
cmps
dec
daa
popa
sbb
test
les
repz
pop
xor
js
test
jmp
cmp
pop
and
(bad)
jb
or
lods
ror
pop
dec
rcl
scas
cmps
or
push
packssdw
iret
jo
lods
rol
aam
aam
pop
push
jns
mov
arpl
push
cmp
push
push
sar
not
in
or
inc
mov
fsubr
cmp
sbb
imul
(bad)
outs
mov
mov
mov
sbb
adc
fnstsw
imul
jmp
mov
div
jle
stos
(bad)
or
retf
sti
pop
loope
iret
mov
sahf
pop
add
inc
dec
imul
fstp
jecxz
mov
jno
add
aaa
sub
outs
call
test
jns
fmul
fwait
lods
xlat
pop
sbb
mov
into
jg
call
adc
inc
int3
sbb
clc
ins
(bad)
(bad)
mov
push
pop
cld
ret
ds
cli
test
mul
or
leave
fmul
push
leave
pop
loop
das
dec
cmp
and
out
test
shl
pop
mov
imul
cs
outs
sbb
mov
dec
xchg
aam
mov
jmp
inc
(bad)
push
popa
movs
das
into
cmp
lea
mov
cmp
out
test
xchg
jmp
lock
xchg
dec
clc
outs
shl
xor
sti
mov
int
ficomp
sub
sub
or
sahf
adc
jb
rcl
xor
cmp
(bad)
push
mov
out
pop
je
fld
test
jmp
cmp
jecxz
xor
or
out
out
or
xchg
cmp
(bad)
xlat
push
fnstenv
add
pop
repz
(bad)
std
jbe
outs
sub
in
xchg
jb
scas
and
xchg
mov
push
daa
fwait
inc
pop
adc
aad
fcmovb
retf
nop
xor
je
cmc
gs
adc
outs
mov
pop
or
sub
popf
rcl
cmps
xchg
aad
or
aad
and
jp
retf
aam
xchg
mov
xchg
je
jb
ret
es
cmps
xor
mov
mov
mov
mov
addr16
or
loope
jo
popa
aam
xor
mov
int
jns
pop
adc
dec
push
xor
dec
(bad)
loope
sub
test
push
cmp
add
pushf
mul
retf
xor
into
cmp
push
cmp
xor
das
pop
(bad)
pop
xchg
fwait
push
pop
push
call
xchg
pop
inc
cmp
or
(bad)
fsub
dec
outs
sub
mov
mov
mov
inc
rol
outs
dec
daa
fistp
shl
fld
adc
ss
loop
mov
retf
(bad)
call
jne
cli
jle
xor
call
(bad)
ins
in
ret
sbb
or
cli
loope
jo
outs
rcl
or
pop
push
xchg
cmps
fnstcw
and
dec
sbb
inc
sbb
mov
in
and
and
imul
and
push
xor
pushf
push
mov
mov
xchg
and
pop
cmp
pop
rol
inc
inc
push
arpl
in
ret
dec
aas
mov
dec
sub
lahf
push
daa
or
arpl
xor
std
mov
cli
inc
cmp
gs
push
(bad)
jmp
cmps
jnp
or
xchg
cld
and
scas
mov
(bad)
loop
or
repnz
pop
rol
in
popf
add
sahf
jbe
xor
mov
mov
cmp
add
bound
sbb
bound
pusha
sbb
ja
fistp
cs
xchg
mov
imul
aaa
mov
mov
ins
cmp
out
ror
test
outs
daa
pop
(bad)
pop
push
leave
outs
(bad)
cmp
fldz
div
or
cmc
sar
cwde
ror
inc
lahf
jge
pushf
fdivr
cmp
dec
push
jnp
sub
bnd
rcr
lds
(bad)
jg
fist
ins
stc
sbb
mov
movs
jno
gs
mov
jmp
test
into
es
mov
mov
add
call
mov
hlt
and
sbb
jno
pushf
mov
jno
call
loope
stc
sub
jg
cmps
call
push
cmp
setle
outs
jne
xchg
add
sahf
cdq
stos
jecxz
gs
mov
pop
stos
sbb
fist
aad
pop
mov
daa
ins
push
sti
sub
iret
and
and
arpl
mov
push
sub
aas
push
pop
loope
dec
les
xor
stc
shr
sbb
pop
mov
push
inc
enter
ds
cmp
xchg
xlat
or
pop
push
push
inc
sub
dec
lea
or
ss
push
outs
inc
jne
jmp
dec
mov
adc
test
retf
ss
bound
push
cmp
fdivr
dec
bound
mov
or
aad
jbe
inc
sbb
mov
hlt
test
test
mov
mov
pushf
push
lea
xor
fstp
or
outs
cwde
jmp
inc
mov
push
and
dec
sahf
int
(bad)
pop
test
and
pop
or
push
pop
pop
jp
or
xchg
sbb
xor
or
es
push
(bad)
cmps
adc
inc
cwde
and
sub
fstp
sbb
inc
popf
adc
ss
pushf
stos
push
xchg
mov
ret
fmul
(bad)
mov
bound
popa
dec
mov
xchg
sub
push
xor
push
jo
dec
adc
ins
sub
sbb
cs
xchg
pushf
dec
jl
daa
out
lock
sbb
lahf
outs
les
out
inc
jb
mov
add
iret
push
mov
sub
mov
nop
add
dec
push
adc
fst
dec
sub
mov
and
stos
ins
xor
mov
movs
and
pop
out
imul
loope
push
shl
jbe
jmp
sub
mov
fnstcw
or
sub
cli
inc
dec
shl
mov
sub
out
mov
xchg
mov
cmc
jo
hlt
or
add
les
loop
gs
mov
and
into
cdq
jmp
popa
jns
repnz
push
jbe
jmp
push
pushf
xor
loope
stc
adc
shr
es
xchg
and
hlt
mov
(bad)
fmul
or
ja
pop
jo
add
jmp
dec
mov
retf
xlat
xchg
movs
jnp
or
inc
adc
pushf
adc
ja
je
mov
popf
idiv
or
dec
hlt
repnz
andnps
addr16
jmp
inc
test
outs
test
call
(bad)
xor
pusha
jecxz
inc
xor
dec
pushf
aaa
mov
jle
(bad)
push
test
mov
mov
inc
jmp
pop
lds
test
adc
push
mov
dec
inc
hlt
and
rol
mov
sub
push
push
fild
cmps
addr16
inc
stos
sub
dec
jmp
push
pop
add
pop
cmp
daa
push
mov
add
retf
push
xor
jno
popa
mov
xor
punpckhdq
test
retf
xor
cmp
sub
mov
imul
out
xchg
pop
popf
es
das
ds
aam
frstor
xor
ror
and
stc
call
imul
inc
ret
cmp
add
xchg
add
jl
lods
lods
adc
jo
fld
cmc
jns
or
stos
lea
scas
jae
sbb
inc
dec
sub
mov
pop
pop
shr
mov
in
sbb
loope
mov
stos
mov
repz
cs
mov
cmps
shl
jae
mov
mov
outs
mov
test
mov
je
inc
test
cs
mov
push
pop
daa
cmp
mov
cmp
aaa
test
push
arpl
es
xlat
pusha
push
jl
aad
aad
xchg
or
jnp
dec
mov
and
mov
(bad)
sti
scas
imul
xchg
dec
out
imul
gs
push
add
xchg
add
push
fwait
stos
xor
mov
xchg
neg
(bad)
adc
dec
xlat
sbb
xor
hlt
mov
pop
cmp
xor
cmc
(bad)
mov
test
fwait
idiv
push
cmp
ds
lahf
mov
xchg
pop
jle
fs
clc
push
mov
cs
retf
add
sub
dec
push
out
add
xor
mov
jns
jmp
ret
xor
repnz
sub
aam
(bad)
lods
or
cld
psubw
les
jmp
jns
sub
adc
scas
out
popf
jecxz
inc
scas
xchg
ins
aaa
jecxz
test
shl
jno
(bad)
arpl
inc
hlt
jbe
mov
aad
jmp
add
dec
pop
rcl
pop
jmp
cdq
adc
(bad)
adc
xchg
fstp
out
aam
sti
xor
lock
dec
mov
(bad)
shl
or
xor
fcom
test
cmp
jnp
es
lock
pop
adc
adc
add
imul
add
inc
xchg
pusha
adc
lods
loop
inc
jnp
and
mov
or
or
lock
inc
arpl
imul
xor
mov
dec
test
dec
shr
push
iret
and
adc
ret
pop
nop
or
sub
or
ss
lock
xchg
mov
sbb
pop
xor
jo
jl
aad
call
(bad)
xor
retf
inc
pushf
aad
inc
retf
movs
mov
mov
(bad)
xchg
int
or
add
push
icebp
fcomp
pop
outs
add
adc
loope
pop
jge
jae
or
add
xchg
hlt
fimul
jae
pop
aas
int
sbb
inc
cmp
pop
pop
sub
sub
or
setg
xor
add
jmp
dec
adc
inc
sahf
sbb
xchg
stc
sbb
arpl
repnz
(bad)
retf
jo
sub
jmp
xor
adc
loopne
hlt
xor
pop
js
jmp
adc
push
push
(bad)
repz
and
push
sub
mov
sub
adc
jecxz
pop
mov
inc
xchg
push
cmps
adc
mov
outs
pop
push
bound
arpl
(bad)
aam
jnp
addr16
xchg
popa
push
stc
push
or
push
sub
pop
imul
sbb
test
dec
dec
mul
adc
add
fs
cli
xchg
out
iret
pop
jmp
ror
mov
loopne
psrlw
ror
xchg
xor
(bad)
cli
xchg
es
xor
xor
loope
pushf
iret
sub
inc
push
outs
sahf
mov
outs
add
das
adc
push
jl
ja
fnstsw
gs
dec
cmps
pop
cs
sub
mov
mov
xchg
rcl
and
pop
(bad)
repz
add
adc
stos
inc
es
rcl
xchg
pop
in
jmp
cdq
jo
pop
sar
es
std
pop
std
daa
xor
je
loopne
add
jb
push
fild
pop
fsub
(bad)
or
jecxz
mov
mov
push
out
stos
inc
pop
clc
mov
imul
add
push
(bad)
sbb
sub
jne
je
lea
inc
mov
push
or
xchg
mov
outs
ins
mov
ins
ja
jp
mov
sbb
xchg
addr16
mov
xchg
shl
inc
adc
mov
movs
(bad)
xchg
adc
call
out
daa
fucomp
ins
shl
fs
sub
add
mov
cmp
push
mov
inc
pusha
fstp
xchg
movs
inc
mov
(bad)
mov
add
dec
cld
fnstsw
test
fidivr
ds
and
fsubr
push
stos
mov
(bad)
xchg
mov
add
int3
push
dec
imul
pop
xchg
adc
cdq
mov
aam
dec
inc
ja
adc
imul
fisttp
mov
nop
data16
cld
xchg
inc
or
mov
enter
mov
cmps
adc
test
mov
dec
jecxz
xchg
test
inc
adc
(bad)
nop
(bad)
mul
in
aas
out
pop
fwait
fwait
mov
mov
js
repz
arpl
cmp
pop
inc
call
jmp
aas
loop
sub
(bad)
or
into
mov
adc
pop
mov
repz
(bad)
leave
icebp
rcr
push
shl
outs
pop
jb
push
xchg
(bad)
in
lock
pop
xchg
mov
pop
(bad)
in
xor
in
and
pop
out
pop
shr
stos
adc
xor
add
push
fsubr
mov
rcr
sub
mov
push
sub
call
and
xor
jns
xor
ficomp
fldenv
sahf
loop
ja
dec
inc
arpl
xchg
out
cmp
mov
and
sahf
scas
mov
adc
retf
adc
leave
xchg
cmp
cmps
mov
mov
mov
sub
jns
or
mov
push
stos
out
pop
inc
jb
or
and
mov
loope
add
xor
js
mov
add
push
mov
push
loop
int3
sub
mov
mul
inc
cmp
sti
mov
cmp
jle
movs
xor
jnp
mov
add
mov
neg
shr
push
mov
jg
loop
and
adc
fcom
mov
jnp
lock
(bad)
cli
xchg
xchg
jbe
cdq
push
xchg
pop
rcr
cmps
push
pop
sub
cmp
fiadd
push
mov
daa
mov
outs
dec
arpl
inc
pop
xchg
dec
sar
mov
mov
popf
sahf
gs
push
loop
imul
mov
stc
dec
call
int
aaa
aad
icebp
mov
mov
std
mov
or
pop
sar
les
ret
popa
sbb
inc
push
sub
in
xor
out
sar
mov
and
not
jmp
mov
inc
int
xchg
das
cmp
stos
js
xchg
cmp
adc
retf
push
push
je
das
mov
dec
pop
ror
rcr
pop
and
stos
push
(bad)
out
xchg
inc
push
sub
dec
xor
lods
jno
sub
push
xchg
mov
int
xlat
sbb
ds
mov
leave
mov
xlat
aaa
jecxz
inc
mov
data16
jbe
stos
mul
loope
adc
mov
mov
xchg
cld
mov
xchg
out
popf
add
cmc
fnstcw
pop
jmp
xor
jg
nop
sbb
je
ss
mul
pop
and
mov
out
mov
mov
mov
mov
sar
and
pop
cmc
push
mov
xlat
and
std
mul
jbe
dec
xchg
jmp
es
pop
gs
fisub
adc
clts
mov
(bad)
ror
and
cmps
sbb
add
and
jo
push
add
dec
test
leave
push
mov
mov
mov
inc
sub
push
sbb
retf
xchg
and
ret
jge
mov
adc
cmp
sahf
cwde
imul
out
sub
mov
add
in
inc
adc
xchg
or
js
pop
jne
not
mov
retf
xlat
xchg
xor
cmp
mov
addps
in
push
jmp
jnp
iret
clc
data16
inc
or
xchg
inc
cmp
cwde
shl
repnz
push
mov
mov
in
jmp
cmps
jbe
in
inc
mov
ins
pop
test
and
loope
sahf
adc
mov
sti
out
in
inc
ficomp
adc
sub
adc
out
inc
xchg
cmp
cwde
push
xchg
cmp
mov
shl
cmp
ins
mov
clc
hlt
js
cdq
mov
adc
fidiv
sub
test
add
in
and
mov
jbe
mov
mov
hlt
and
push
mov
test
sbb
dec
loopne
push
jns
jae
scas
inc
in
jmp
rep
scas
push
out
test
(bad)
xor
jno
mov
adc
push
into
je
pop
pusha
stos
sbb
into
push
in
in
shl
xchg
fisub
push
add
xor
push
test
nop
dec
dec
aam
sahf
dec
xchg
mov
ret
adc
push
cmp
push
movs
aas
clc
stos
jge
cmp
aad
cmp
hlt
out
cdq
ret
jbe
pushf
mov
pop
data16
pop
add
pop
retf
lahf
or
stos
mov
enter
cli
(bad)
jo
mov
ss
add
cmp
push
sbb
cmc
js
retf
pusha
scas
add
push
push
mov
in
(bad)
ja
xor
addr16
jo
ds
push
ja
stos
lock
pop
xor
inc
push
mov
je
fdivr
mov
outs
mov
cmp
jge
mov
addr16
cwde
bnd
xchg
ins
call
jmp
cmp
jmp
call
fisubr
pop
mov
rol
and
in
push
mov
mov
inc
add
push
sub
fwait
jge
int
pop
test
push
sub
loop
jbe
ss
loope
mov
sub
xchg
in
jae
adc
push
cmp
cmp
add
sbb
add
aad
sub
shl
lahf
jne
fstp
sbb
fcmovu
sub
cmc
repnz
cmps
pop
dec
pop
xchg
pop
pop
jmp
or
cdq
cmc
jns
ret
test
push
push
fcomp
scas
out
xchg
(bad)
xchg
fcom
sbb
ret
repz
dec
pop
nop
sub
sti
cdq
add
loop
mov
mov
(bad)
fidivr
sbb
stos
cmp
shr
pop
push
popf
dec
shr
mov
pop
xchg
adc
imul
sub
test
nop
jg
sub
lock
mov
xor
int3
jnp
mov
outs
sbb
in
pop
sahf
mov
neg
or
test
jp
fdivr
bound
and
jns
lods
xchg
xor
lea
out
imul
sbb
push
sbb
lds
enter
jmp
jnp
(bad)
daa
test
dec
xor
jge
sub
imul
or
mov
pop
ret
cdq
out
lods
(bad)
(bad)
and
sub
push
sti
xchg
xchg
push
mov
lea
(bad)
fsub
icebp
fimul
xor
out
jmp
xor
(bad)
jae
out
sbb
jmp
and
nop
loope
xchg
in
ss
(bad)
jmp
adc
fs
mov
mov
test
lds
shl
mov
jp
jae
adc
in
cmp
dec
or
inc
inc
lods
xchg
or
sub
fwait
add
idiv
loopne
out
ins
mov
sub
mov
jle
sbb
mov
add
xor
fistp
add
push
add
sbb
add
lods
jl
xor
int3
jno
inc
push
push
mov
xlat
or
das
pushf
push
shl
test
sub
(bad)
fwait
rol
adc
dec
jo
fwait
sbb
push
leave
push
lea
popa
pop
(bad)
fucomp
(bad)
sbb
xchg
arpl
fcmovnu
jg
xor
adc
mov
out
daa
stos
int3
inc
cmp
repz
retf
clc
mov
push
mov
xchg
push
jae
or
push
inc
sub
sub
repz
ss
scas
inc
call
or
dec
pop
cld
or
xchg
int
push
psraw
jmp
jne
fwait
pusha
fisttp
xor
sbb
nop
aaa
retf
adc
jbe
mov
push
dec
sar
adc
test
pslld
jmp
cmp
jnp
sub
cmp
nop
push
sbb
jnp
and
movs
shl
hlt
ins
fistp
les
xchg
sahf
je
push
adc
dec
into
push
mov
inc
jne
jmp
(bad)
sub
enter
mov
mov
sub
aam
popf
and
(bad)
jmp
fstp
cmps
xor
xor
inc
cld
arpl
out
sbb
pop
sub
int3
add
movs
lods
out
test
xchg
push
pushf
push
pop
lods
dec
sub
push
jge
mov
or
out
mov
bound
xor
jl
test
daa
or
scas
fbld
push
dec
inc
popa
mov
sar
jb
iret
aad
push
int
sahf
push
mov
cld
mov
cmp
aad
mov
cmp
out
into
inc
dec
scas
ret
mov
and
pop
test
inc
mov
cld
xor
push
stos
sub
(bad)
mov
dec
fmul
or
daa
icebp
cmp
js
repz
mov
sbb
mov
(bad)
fist
jge
sbb
jge
fwait
shl
sub
fs
sar
pushf
in
retf
jmp
imul
into
popa
dec
xchg
mov
or
mov
scas
lahf
cmp
pop
jmp
push
int
retf
pop
pop
adc
ret
cmp
or
push
ret
rep
rcl
pop
adc
fwait
add
mov
sar
(bad)
out
inc
jp
je
pusha
pushf
repz
movs
and
push
inc
push
movs
pop
inc
mov
mov
pop
mov
bound
jo
push
xchg
jg
in
add
xchg
movs
dec
or
dec
aam
sti
dec
inc
scas
popa
jp
retf
pop
xchg
push
adc
push
rcl
fisubr
test
aaa
fwait
push
in
cmc
sbb
or
add
push
sbb
adc
pop
das
push
mov
test
sbb
imul
or
movs
push
cwde
push
scas
dec
jp
int
test
dec
cli
jae
push
push
lods
fmulp
jmp
test
scas
test
mov
int3
push
mov
adc
or
in
xor
loop
lods
fidivr
sub
sbb
jg
jecxz
mov
inc
rol
aas
dec
pusha
inc
test
ss
jge
cmps
xchg
xchg
pop
add
sub
sahf
dec
in
jp
sub
js
xor
jge
outs
fdivr
pop
jge
daa
scas
popa
mov
out
mov
push
add
bound
cwde
mov
(bad)
cmp
dec
mov
stos
xlat
jbe
fsubrp
push
mov
mov
mov
mov
fild
dec
test
adc
arpl
or
xlat
mov
and
lahf
scas
ins
sub
dec
and
mov
pop
fsub
call
jecxz
movs
mov
adc
ret
inc
int
xchg
adc
movs
and
inc
(bad)
mov
push
add
adc
stos
scas
stc
push
arpl
adc
add
and
stos
inc
sahf
xchg
neg
test
mov
jmp
movs
lods
jp
test
cmps
cdq
fidiv
jns
retf
inc
aaa
fs
lea
paddw
pusha
push
clc
test
adc
push
mov
lods
cmp
xor
dec
retf
(bad)
les
aad
jl
shl
mov
pop
pop
test
or
mov
pop
hlt
je
mov
fwait
pop
ret
(bad)
and
cmp
mov
jmp
cmps
mov
test
(bad)
push
fistp
punpcklwd
fidivr
scas
jge
pop
sti
sub
rcr
mov
test
pop
(bad)
dec
scas
add
daa
add
movs
push
jg
add
mov
int
mov
loop
sti
inc
gs
xchg
cmp
test
and
mov
adc
pop
or
hlt
sbb
cmp
mov
xor
xchg
dec
int
jae
cmc
cmp
pop
(bad)
fdivr
outs
sbb
leave
daa
call
cmps
push
dec
sahf
cmp
cmp
rol
pop
push
test
loope
adc
sbb
sbb
or
xchg
ret
lock
fld
adc
push
xor
repnz
enter
in
in
loop
jae
outs
repz
dec
lods
cmp
into
nop
es
int
ret
adc
jne
push
shl
lock
(bad)
xor
push
icebp
xor
adc
sub
add
hlt
mov
sub
lock
call
mov
dec
inc
and
sbb
daa
cmp
adc
cs
inc
push
mov
sbb
mov
lods
and
sbb
sub
mov
xor
push
push
push
pusha
int
lahf
cmp
das
clc
call
fadd
or
sub
cmp
(bad)
rcr
jp
cmp
sahf
imul
ins
pop
lods
shl
mov
lods
add
adc
cmc
(bad)
into
push
ins
sub
jmp
daa
cmps
inc
jno
outs
ds
sti
sbb
pop
hlt
xchg
xor
shr
enter
into
sbb
shr
out
repz
adc
jno
dec
pop
outs
dec
adc
sbb
mov
mov
xchg
inc
aam
pop
jae
mov
popf
jle
out
or
cli
(bad)
xchg
out
mov
call
add
cmp
sbb
test
loopne
mov
es
jmp
dec
inc
and
push
test
inc
fist
aas
pop
adc
rol
stos
repnz
retf
push
rcr
jo
jecxz
fdivrp
or
cs
in
retf
jg
scas
aam
add
mov
repz
adc
bound
pop
fisttp
jnp
lea
out
xor
sub
or
rcr
mov
sbb
cmp
add
das
aad
out
cs
inc
ins
movs
das
test
loopne
dec
cvtpi2ps
shr
cmp
(bad)
iret
sub
test
ins
cwde
push
jb
rcr
push
push
les
(bad)
push
pop
(bad)
add
je
dec
sub
sub
rsqrtps
add
cmp
stc
pop
sub
or
daa
jae
pop
add
retf
hlt
add
int3
ins
sub
add
outs
push
and
cmp
scas
pop
shl
jae
adc
(bad)
cmc
addr16
push
mov
loopne
rol
fdiv
ds
mov
aam
xchg
movs
and
jl
shl
or
add
cdq
bound
jno
pop
add
aas
cmp
pop
jae
(bad)
xor
leave
dec
xchg
loopne
mov
add
pop
rcr
repz
ins
(bad)
stc
cwde
lods
inc
add
pop
sub
mov
mov
aad
cmps
ins
sub
int
icebp
pop
into
mov
push
and
jnp
dec
adc
sub
mov
xchg
sbb
das
pop
jnp
fild
mov
fcom
out
ins
out
icebp
lods
cmp
aad
(bad)
sahf
stc
xor
mov
mov
aam
dec
mov
fidiv
xchg
or
pop
add
pop
adc
push
cmc
mov
(bad)
mov
sbb
fsubr
imul
cmc
cld
ins
cmp
add
icebp
mov
sub
mov
adc
mov
stos
pop
loopne
lods
std
jle
sub
and
dec
jne
lods
jecxz
daa
mov
and
mov
and
ins
call
mov
jae
jg
inc
addr16
cld
fld
fisub
loope
sub
or
outs
and
mov
(bad)
dec
mov
adc
jge
stc
mov
and
jmp
addr16
xor
rcr
pop
mov
mov
out
add
jge
shl
(bad)
jecxz
test
(bad)
mov
xor
retf
xchg
and
push
dec
push
fidiv
adc
cmp
adc
add
stos
in
inc
xor
mov
fild
xor
sbb
aaa
gs
je
fnstcw
pop
pop
loop
mov
movs
mov
stos
push
fld
and
dec
push
xor
or
mov
xchg
pop
cwde
je
adc
xchg
cmps
and
stos
leave
push
mov
inc
icebp
jmp
cmps
repnz
ret
add
outs
scas
loop
out
(bad)
push
cmc
je
fistp
movs
retf
dec
push
int3
mov
cmps
cmp
inc
sbb
cmc
stc
jbe
cmp
cmp
arpl
dec
dec
in
cmp
mov
ja
or
add
fdiv
loope
jno
fisubr
not
adc
sub
add
inc
push
dec
sbb
pop
adc
jle
mov
pusha
push
ins
test
fisubr
popa
ss
dec
pop
cmps
aam
jo
inc
fcmovne
lods
dec
sub
mov
fldcw
pop
jmp
sti
mov
push
les
dec
dec
hlt
mov
pop
sub
retf
test
pop
pop
cmp
push
cmp
call
jmp
inc
jg
push
in
inc
pop
in
sbb
inc
xor
data16
xor
pushf
dec
cmp
xor
mov
jg
xchg
cmp
dec
addr16
sub
out
stos
mov
sub
test
jp
inc
and
jge
ret
mov
mov
cmps
cld
pop
mov
sbb
push
mov
adc
dec
cmp
pop
or
mov
sbb
jb
in
scas
jp
pop
sbb
aad
pop
gs
xor
mov
xchg
lods
add
rol
pusha
(bad)
mov
lods
js
push
inc
push
xchg
push
aaa
mov
jp
cmovs
push
fild
in
stos
repz
jecxz
loopne
fcmovnb
mov
out
stc
mov
adc
out
mov
shr
add
xchg
mov
not
dec
jnp
cmp
sub
aaa
adc
and
les
test
cmp
pusha
mov
xor
cmp
sbb
call
and
cmp
mov
stc
push
cmp
and
ds
adc
sub
fs
jo
xor
hlt
inc
and
fisttp
mov
(bad)
out
aas
and
sbb
daa
enter
mov
push
and
mov
jp
pop
(bad)
sar
mov
adc
stos
xchg
inc
and
xor
popa
add
mov
in
cmps
int
adc
jmp
xor
fsub
aam
cmc
xlat
cmps
dec
scas
mov
jns
lahf
or
dec
dec
push
inc
dec
xor
sbb
lods
jl
stos
mov
sbb
rol
pop
push
adc
aad
bound
rcl
jl
xchg
fwait
push
inc
shl
xchg
retf
and
mov
in
cmc
in
(bad)
imul
retf
jmp
fs
cmps
add
adc
and
and
jp
sti
stos
cmp
and
aaa
cmps
mov
fiadd
push
jmp
sbb
iret
dec
fwait
xor
in
and
addr16
cmp
inc
fldenv
mov
das
scas
cmps
fs
loopne
outs
push
shl
nop
nop
inc
icebp
xchg
ret
popa
xchg
xor
popf
pop
pop
repz
fdivrp
(bad)
outs
xor
dec
ret
xchg
or
cld
es
xchg
dec
mov
in
inc
inc
add
lods
xchg
xor
ins
jmp
ja
mov
dec
popf
jb
jg
sub
pop
add
mov
mov
sub
out
loop
xchg
mov
movs
mov
fwait
ror
fwait
pop
mov
mov
jo
sub
pop
je
popa
movs
add
mov
push
es
fs
retf
xchg
fdivr
xor
mov
jne
push
jnp
ins
sbb
or
cmp
mov
jb
es
and
std
iret
ficom
push
or
es
cld
dec
dec
fsub
pop
mov
and
sbb
stos
das
adc
dec
cmp
addr16
mov
cmc
xchg
arpl
push
add
mov
movs
push
push
gs
jne
popa
cs
jae
adc
mov
fnstenv
pop
xchg
or
cmp
aad
jns
xor
or
and
jns
mov
push
push
data16
add
add
jnp
dec
mov
rcr
int
cmps
xchg
push
add
fs
aam
jnp
cmps
sub
je
pop
fs
daa
add
je
shl
or
in
iret
leave
data16
pop
xchg
hlt
shl
stc
mov
fild
jbe
int3
mov
mov
add
lock
pop
loopne
xor
push
ficomp
add
jp
push
push
clc
xor
sahf
or
xchg
add
push
and
fdiv
cs
(bad)
mov
out
les
inc
lahf
clc
add
imul
out
push
sub
adc
or
jnp
pop
les
sbb
dec
push
iret
shl
mov
arpl
ret
shl
mov
std
inc
sbb
je
test
mov
or
pop
add
push
cmps
and
out
mov
ret
mov
jae
mov
dec
dec
(bad)
lock
dec
mov
inc
inc
adc
mov
fwait
mov
retf
in
aam
xor
aas
xchg
pop
bound
mov
sub
or
mov
(bad)
mov
add
shr
call
push
scas
outs
lock
dec
jle
mov
outs
fmul
std
adc
out
test
std
add
enter
cwde
pop
sbb
stos
push
sti
rol
test
fcom
push
cwde
sti
xchg
or
dec
jnp
adc
push
ret
cmp
das
jecxz
mov
jne
mov
jmp
push
jl
mov
hlt
shr
mov
push
mov
enter
clc
and
cmp
adc
xlat
mov
mov
in
addr16
cwde
mov
test
cmp
pop
dec
(bad)
lods
add
or
bound
push
jbe
mov
cmp
loope
clc
cmp
jae
xchg
fcom
ret
xchg
dec
ss
test
push
sub
mov
rol
jno
in
je
ss
push
push
outs
shl
cld
test
inc
int3
stc
ss
aam
fs
mov
outs
cmp
(bad)
imul
enter
sbb
push
sqrtps
cmp
mov
adc
repnz
or
mov
stos
xor
je
ror
out
jns
jb
(bad)
addr16
and
jne
loopne
mov
sub
clc
ja
ret
or
mov
enter
or
das
mov
sub
sbb
push
or
sbb
ficom
add
mov
mov
ds
adc
adc
jmp
ret
sub
fbld
test
repnz
(bad)
dec
in
mov
subps
ja
cmps
into
cli
out
xchg
xor
leave
lds
push
aaa
rol
shl
pop
mov
std
inc
push
enter
in
movs
das
jbe
loop
pop
and
imul
les
push
mov
cmc
cmp
and
repnz
xchg
leave
mov
sub
pusha
lea
addr16
pop
mov
in
fstp
push
adc
push
aaa
jle
mov
fst
repz
mul
inc
mov
jl
data16
retf
inc
cwde
pop
ds
outs
or
lock
out
inc
fsubr
retf
or
jmp
test
push
mov
sahf
push
cmp
mov
add
mov
xchg
popa
ss
retf
pop
test
push
inc
pop
push
out
mov
jmp
mov
mov
cmps
or
sub
(bad)
sar
sbb
enter
test
dec
add
loope
jb
les
cmp
add
retf
add
movs
mov
cmp
xchg
notrack
add
sbb
jl
fldcw
stc
pushf
fwait
pop
mov
es
inc
out
in
dec
cmps
cmp
xlat
push
mov
xor
arpl
inc
push
(bad)
mov
push
and
mov
mov
rcr
add
unpckhps
sbb
loopne
inc
lods
hlt
std
(bad)
pop
sbb
rol
test
dec
enter
sub
jecxz
imul
adc
into
xchg
or
int3
les
rcr
ja
sub
mov
clc
sub
push
push
lea
mov
or
jmp
std
xchg
cmp
xor
push
jg
xor
jne
or
fdivr
loop
test
pop
cmp
mov
dec
mov
jo
jae
jg
cdq
fwait
push
in
inc
rol
mov
aam
mov
call
add
pop
ds
and
adc
fisub
ins
and
jae
jg
aad
xchg
cmp
xchg
xor
retf
sub
(bad)
xlat
ret
inc
cs
scas
jno
jmp
pop
fwait
mov
cmp
mov
mov
lods
clc
arpl
jno
mov
inc
adc
mov
jb
add
jmp
dec
push
js
lods
cli
cli
cwde
add
outs
call
aaa
mov
jmp
aad
xchg
and
es
cmp
mov
jno
jge
jae
mov
cmp
sub
sbb
lock
out
icebp
push
cwde
mov
cmp
and
test
scas
pushf
inc
add
sbb
inc
or
mov
rol
daa
or
sbb
cmp
adc
xchg
add
mov
scas
bound
out
out
das
rcr
outs
cmp
push
sub
or
iret
sahf
sub
xchg
push
pop
adc
sar
test
in
int3
push
test
jo
sub
dec
jnp
or
out
pop
dec
neg
out
retf
xor
pop
clc
mov
stc
cmps
ds
rcr
push
jp
and
sbb
stos
(bad)
cmp
cli
in
jbe
push
push
inc
fild
fcomp
mov
mov
mov
daa
sti
fld
repz
sbb
repnz
sub
out
dec
bound
lods
mov
mov
fld
sub
cmp
xchg
pop
adc
daa
ja
icebp
push
push
inc
mov
jge
jne
std
cmp
test
test
dec
cmc
mov
(bad)
sti
pop
pop
pop
xchg
daa
jmp
ins
imul
scas
dec
and
cmp
xchg
inc
lahf
push
sub
leave
and
push
sub
adc
inc
pop
mov
std
pop
add
dec
xor
push
push
ja
inc
xor
(bad)
pusha
cmp
sub
dec
add
inc
mov
sub
cs
cmp
sub
cmp
(bad)
xor
mov
das
jo
sub
mov
outs
sub
mov
cmp
ja
cs
add
jns
xor
fstp
sbb
fisttp
ins
daa
pop
cmps
(bad)
into
xchg
xchg
mov
xor
mov
sbb
pop
sub
adc
sbb
adc
arpl
add
imul
jae
call
rol
adc
retf
jl
sbb
retf
cmp
aam
jnp
mov
push
out
cmc
push
(bad)
in
sbb
mov
fwait
sahf
fist
dec
or
push
stos
xchg
cmc
dec
sub
cmps
xchg
cld
inc
fsub
cld
push
inc
or
int
mov
and
loope
je
(bad)
push
mov
test
dec
(bad)
push
mov
in
gs
push
call
dec
loop
lea
loop
sahf
xor
adc
push
out
mov
xchg
cmp
mov
push
jl
mov
add
dec
push
dec
sub
pop
or
int
ret
icebp
pop
stc
add
call
cmp
push
xchg
ins
mov
lods
loope
mov
cmc
fs
or
jmp
sbb
cs
pop
in
xchg
scas
cld
les
cmp
outs
retf
mov
mov
xor
mov
retf
mov
jnp
(bad)
fcom
mov
enter
das
mov
popf
add
cdq
push
push
pop
mov
add
pop
test
dec
sub
imul
or
push
arpl
movs
sub
push
cmp
push
test
sub
adc
inc
stos
cmp
xor
retf
xchg
sub
lds
imul
test
lods
mov
(bad)
and
in
pushf
sub
adc
adc
pop
mov
sbb
(bad)
repz
jmp
rcl
jae
sbb
or
movs
push
sub
sbb
cdq
js
xor
adc
outs
cmc
pop
imul
outs
add
mov
pop
add
xor
(bad)
loop
jno
fisubr
jge
inc
mov
fist
add
in
cmps
in
dec
(bad)
inc
jae
imul
or
push
pop
jmp
pop
jp
out
mov
(bad)
in
push
push
push
pop
xor
lds
mov
inc
ret
loop
movs
xlat
sub
sbb
dec
jnp
inc
aam
std
sub
pop
je
out
sti
test
pop
mov
icebp
mov
stos
xchg
sbb
xchg
enter
sub
push
xlat
shl
iret
fstp
call
and
stos
pop
or
test
data16
outs
pop
pop
or
xor
pop
mov
pop
cmps
or
hlt
clc
retf
ret
cmps
retf
jg
shr
mov
ins
stc
or
cs
stc
outs
jle
push
push
jns
mov
dec
std
clc
inc
loopne
add
fistp
scas
dec
jb
dec
cmp
out
cdq
cmp
iret
jl
mov
jp
lods
pop
data16
lea
cmps
mov
sub
je
(bad)
dec
fwait
adc
pushaw
add
loop
mov
or
dec
mov
dec
enter
test
sub
imul
sub
pop
loopne
mov
add
push
inc
xor
add
cs
mov
xchg
rol
stc
or
jmp
mov
pop
cmp
retf
pop
xlat
dec
fidivr
jle
std
push
push
or
inc
dec
jo
xor
cld
out
(bad)
fwait
in
jle
xchg
outs
push
ins
mov
test
mov
mov
add
in
xchg
jle
or
cmp
mov
mov
pushf
push
mov
mov
push
rcl
cmp
in
cmp
and
add
loop
mov
dec
int
adc
jo
add
ret
and
das
dec
(bad)
pop
jae
cmps
jae
jno
pop
repz
mov
out
(bad)
aam
push
outs
pop
fwait
adc
xor
pop
xchg
movs
lods
test
es
movs
fld
xchg
xchg
mov
mov
adc
xchg
jmp
dec
pop
dec
jg
xchg
xor
mov
ins
push
jge
mov
shr
cmp
adc
dec
pusha
das
push
jnp
sub
xchg
pop
leave
sbb
lds
repz
shl
int
je
cmp
xor
jnp
dec
sub
test
sub
and
inc
mov
fwait
jns
iret
push
in
xlat
stc
aas
data16
pop
add
add
cmc
inc
imul
out
test
cld
ds
adc
or
scas
adc
(bad)
xchg
pop
adc
cmp
call
jge
jp
push
mov
fnsetpm(287
pop
pop
out
push
pop
sbb
dec
aam
cmp
int
inc
pusha
les
mov
fcomp
lahf
leave
mov
imul
pop
sti
cmp
jo
add
push
xor
test
pop
mov
adc
movlps
and
dec
pop
push
addr16
js
mov
movs
xor
lahf
mov
imul
daa
int3
xor
lea
dec
jns
(bad)
iret
push
jl
cmps
jbe
sbb
call
test
mov
mov
sub
fild
hlt
and
pushf
mov
mov
add
push
sub
nop
jb
hlt
test
in
mov
add
(bad)
cli
jp
jns
mov
mov
push
outs
mov
shl
stos
add
pop
pop
js
jae
sub
cmps
mov
mov
xor
hlt
icebp
out
pop
mov
pop
xor
mov
jge
popf
and
fst
jns
jnp
sahf
(bad)
shl
and
xchg
scas
out
loop
(bad)
jne
daa
imul
sbb
cs
xor
and
mov
test
sti
sub
jmp
and
outs
ret
lods
in
push
fcom
mov
lods
pop
mov
dec
adc
cmp
jle
adc
push
adc
and
lahf
mov
(bad)
xor
es
push
rol
mov
fstp
fcmovnbe
push
loop
sbb
stc
add
push
out
lods
enter
das
sub
sbb
sar
sub
and
mov
(bad)
fdiv
dec
mov
arpl
cmp
xchg
cdq
test
popa
pop
mov
hlt
mov
and
lahf
jl
mov
inc
loopne
push
stos
das
call
xchg
ins
ja
push
mov
movs
pop
test
int3
out
cmp
call
cmp
or
and
and
popa
inc
movsx
push
add
pop
inc
jbe
add
lods
aas
mov
xchg
jg
adc
call
jmp
jnp
movs
pop
inc
jns
xlat
leave
ss
cmp
ret
mov
cmc
pop
adc
(bad)
inc
enter
jo
bound
call
movs
int3
sbb
fidivr
push
dec
clc
lea
adc
lods
call
inc
std
and
dec
cdq
dec
push
mov
ins
test
push
iret
push
mov
ins
pop
je
xchg
cmp
mov
jo
(bad)
mov
add
mov
push
loope
xchg
cmp
jne
mov
stos
cli
and
or
sub
nop
imul
pop
movs
push
ja
fcmovne
out
jecxz
loopne
ret
cmp
adc
mov
pop
in
jecxz
ds
addr16
cmp
adc
sub
add
frstor
push
sbb
fnsave
ins
fs
out
mov
jns
xchg
pop
pop
in
jo
xor
imul
pop
stos
mov
pushf
mov
ret
pop
fmul
and
aas
inc
push
push
outs
jecxz
leave
xor
clc
adc
int
fst
mov
pop
jno
retf
icebp
inc
sbb
fwait
mov
out
pop
ret
scas
mov
mov
mov
je
ds
push
(bad)
in
or
popa
fsub
popf
ins
pop
cmps
shr
popa
jp
cmp
iret
jbe
add
popa
jg
nop
jo
sti
or
mov
xor
dec
jmp
adc
sahf
push
pop
in
test
fdivr
test
inc
inc
outs
(bad)
fcomp
sbb
loop
inc
mov
adc
cmp
jp
xor
retf
ss
sub
lea
xor
inc
adc
clc
test
add
push
hlt
cwde
leave
fs
data16
sbb
ins
or
cmc
jo
hlt
and
adc
bound
out
ret
shr
jge
mov
jbe
sbb
sbb
aam
sar
inc
adc
repz
mov
mov
pop
xor
dec
push
pop
push
mov
icebp
stos
outs
dec
dec
pop
and
(bad)
enter
call
pop
(bad)
mov
jp
sub
push
xchg
jmp
jnp
push
je
and
les
hlt
test
mov
lods
adc
pop
sub
and
push
sub
enter
push
cwde
mov
out
jno
adc
icebp
fidiv
inc
iret
dec
je
xchg
mov
je
pusha
cmp
stc
pop
push
xor
pop
aas
and
add
mov
inc
add
cwde
std
(bad)
daa
push
psllq
jp
jecxz
fwait
push
ror
xchg
call
and
sub
ror
movs
ins
mov
mov
xchg
jge
ret
sub
dec
je
int
xchg
fisubr
adc
inc
adc
sub
mov
cmps
shl
add
(bad)
push
sbb
xor
movs
movs
xor
adc
mov
test
pop
mov
mov
test
movs
adc
(bad)
lock
ja
enter
xchg
pop
test
jecxz
aam
es
mov
and
ins
cmps
pusha
test
jns
xor
repz
jecxz
imul
add
mov
test
outs
cwde
jecxz
call
outs
fstp
add
fdiv
fild
enter
daa
xchg
adc
jl
mov
or
cmps
adc
dec
xor
sbb
or
mov
addr16
mov
push
cli
inc
test
cmp
in
dec
mov
repz
aas
mov
dec
daa
and
cmps
xchg
repz
jmp
mov
or
(bad)
jge
xor
dec
add
xor
jb
xor
and
cld
mov
test
nop
aas
push
jg
pushf
or
int3
das
mov
mov
pushf
mov
ret
inc
loopne
xor
adc
adc
out
arpl
cmp
xor
xor
hlt
adc
(bad)
test
rcr
mov
gs
cmp
movs
mov
sbb
cmp
cmc
imul
pop
mov
cmps
mov
ret
push
push
cmp
add
xchg
sub
aad
push
les
lods
sar
dec
jne
lea
inc
int3
ret
mov
xchg
adc
push
dec
and
cmp
std
mov
mov
cmp
mov
add
xor
pop
mov
stc
or
ja
clc
pop
hlt
nop
push
dec
sub
pop
adc
jae
clc
adc
sub
sbb
in
jg
mov
inc
jg
das
push
cmp
sahf
leave
sbb
dec
idiv
fucomip
cs
outs
dec
fidivr
ror
sar
movs
sahf
jns
scas
test
daa
outs
call
es
pusha
dec
fs
jmp
xchg
dec
test
fstp
jne
lds
mov
and
clc
mov
pushf
pop
lds
adc
aaa
add
push
arpl
fnstcw
or
aaa
and
adc
jbe
rol
fild
ret
cmp
adc
cmp
jmp
in
cli
fidiv
jp
int
cmp
(bad)
sub
inc
pushf
cmc
mov
add
(bad)
call
push
xor
mov
add
lea
sub
je
xchg
int
rol
sbb
adc
cmps
retf
mov
adc
(bad)
cli
cmps
add
js
out
shl
lock
add
push
add
test
mov
popf
int3
inc
xchg
neg
bound
pushaw
jmp
xchg
dec
frstor
push
pand
ja
cmps
mov
jb
fnstsw
mov
push
mov
dec
mov
cmps
inc
xchg
add
add
sbb
inc
inc
push
lea
jbe
adc
push
ins
xor
push
sub
shl
(bad)
jmp
fwait
and
(bad)
js
sbb
ds
adc
lock
je
mov
stos
sub
aaa
jmp
and
mov
cmp
rcl
or
mov
and
xor
fstp
test
test
jmp
cs
mov
mov
xor
fbld
inc
push
jecxz
aaa
enter
adc
jle
fld
xchg
inc
pop
call
test
pop
cmp
rol
xlat
in
fsubrp
and
push
mov
fld
dec
mov
and
sbb
jmp
cli
mov
xchg
call
add
fst
or
inc
loope
in
dec
mov
outs
xchg
es
retf
scas
mov
pop
call
mov
(bad)
icebp
rol
ret
das
mov
movs
out
fst
(bad)
retf
hlt
aas
pop
xor
fldcw
xor
pop
out
push
in
xor
aad
punpckldq
ins
mov
or
out
imul
mov
(bad)
fnstenv
sub
pushf
out
or
xor
sbb
ret
inc
int3
mov
add
xchg
mov
out
and
popa
push
cmc
push
xchg
mov
fld
pop
inc
test
ins
sub
js
rcl
leave
or
aas
inc
cdq
jge
fwait
cmps
js
add
mov
outs
jnp
retf
cwde
daa
add
mov
jmp
or
or
jl
loopne
and
daa
jp
xchg
push
outs
sub
mov
sub
cmp
retf
sahf
clc
jl
daa
jle
cmp
xchg
xchg
inc
dec
call
pop
and
jp
jle
loope
cmps
std
loop
add
xor
jo
mov
jne
int
jle
neg
sub
sub
adc
jb
(bad)
mov
xor
lods
sub
or
add
jp
adc
pop
mov
cwde
adc
adc
push
test
movs
push
add
scas
push
ss
cmp
sbb
cmc
push
and
loope
fwait
mov
xor
out
test
dec
ja
inc
shl
or
mov
cs
cli
(bad)
cmp
jno
call
dec
popf
push
rol
cmp
adc
sbb
cmps
pop
xor
pop
pop
ret
cmc
xlat
adc
repnz
add
jo
in
jp
jbe
mov
dec
jo
cmc
pop
cmp
std
jb
les
ret
and
xchg
mov
fisttp
sub
mov
and
jae
xchg
push
movs
(bad)
and
or
std
xor
retf
add
push
xchg
inc
push
neg
push
pop
pop
test
fadd
xor
dec
addr16
out
and
and
addr16
xor
and
sbb
or
popa
rcr
stos
enter
add
push
stos
into
cmp
ret
xchg
stc
ror
sub
not
test
cmp
cld
pop
mov
pop
mov
push
jl
retf
or
arpl
and
call
push
inc
(bad)
lea
or
fs
xor
mov
ror
aaa
cwde
stos
jl
mov
arpl
dec
je
(bad)
movs
mov
loopne
add
dec
mov
cmp
xchg
inc
push
sbb
inc
pop
sar
fisubr
sbb
pop
push
inc
mov
pop
inc
mov
out
cmp
sar
in
test
sahf
pop
cld
sbb
adc
fldcw
or
jp
sub
inc
jge
add
inc
push
and
mov
adc
jns
or
jecxz
cmp
cmp
aad
push
mov
les
adc
pop
out
(bad)
xor
jmp
xchg
mov
jae
jge
pop
sbb
xchg
xchg
mov
mov
js
stos
ins
xchg
outs
pop
push
ds
call
adc
jbe
xlat
push
(bad)
scas
sub
and
mov
cmps
mov
pop
push
add
mov
int
sub
adc
sar
jecxz
int3
ja
out
test
cmc
cs
out
mov
mov
icebp
cwde
cli
pop
add
push
and
add
popa
enter
xor
xor
sar
pop
sar
retf
or
cmp
push
and
inc
push
das
xor
xlat
pusha
(bad)
cmps
and
or
imul
sub
sahf
sub
movs
fs
inc
sub
push
push
loop
imul
sbb
adc
stc
mov
pop
pushf
in
sub
mov
cmp
in
adc
mov
push
mov
jo
out
jle
into
dec
xchg
enter
xchg
mov
ins
mov
adc
or
xchg
push
pop
ficom
xchg
outs
test
jno
pop
dec
in
mov
rcl
nop
dec
cmp
jae
mov
lds
loop
and
and
add
popf
sub
mov
iret
sti
pop
(bad)
movs
aam
aas
xchg
xchg
xor
pop
jbe
cdq
ror
sub
or
jle
mov
pusha
sub
ror
(bad)
fwait
push
dec
jge
ins
xchg
cmp
retf
iret
aam
dec
mov
rcr
lahf
sbb
pushf
or
test
mov
out
add
add
test
cmp
aam
dec
mov
call
and
retf
arpl
arpl
pop
push
push
vunpckhps
xor
and
test
add
mov
dec
shl
(bad)
jecxz
mov
aas
test
addr16
popf
popf
popa
bnd
je
int
jg
movs
cld
sbb
xlat
dec
sub
loop
xor
pop
test
sbb
gs
fstp
movs
(bad)
loopne
iret
cmp
push
pop
adc
inc
inc
inc
aaa
dec
vucomiss
xor
adc
inc
(bad)
nop
das
outs
fdivr
aam
outs
xor
add
iret
repnz
xor
jmp
jnp
cmp
cli
xor
push
fdiv
cmp
mov
push
mov
ja
jne
adc
sub
in
imul
pusha
xchg
sub
fs
iret
in
sbb
inc
dec
xchg
or
aad
cmp
outs
sub
xor
jle
arpl
mov
bound
out
test
pop
loope
mov
nop
xor
lea
jl
inc
lock
aad
xlat
lea
mov
or
mov
mov
pop
push
cwde
pop
ins
add
inc
jb
mov
test
push
repnz
arpl
push
push
ins
sub
popf
xor
xor
cmps
das
aaa
sub
loopne
fcomip
pop
pop
daa
xchg
add
mov
movs
mov
or
pop
sub
(bad)
mov
adc
add
in
movs
and
push
enter
lahf
jnp
stos
mov
scas
loop
mov
jmp
mov
je
and
aaa
dec
mov
sbb
push
or
lods
mov
dec
(bad)
call
mov
and
in
popa
fbstp
sub
call
fs
jbe
aaa
popf
jle
sbb
(bad)
imul
js
pop
fisttp
cld
xor
pop
cmc
(bad)
popf
mov
jg
or
lock
add
adc
push
call
lods
int3
mov
test
test
aaa
ficomp
daa
cli
sbb
mov
movs
pop
sub
test
lds
sub
outs
je
addr16
mov
stos
popa
mov
popf
fidiv
leave
jge
xchg
nop
imul
sahf
mov
mov
popa
aam
mov
mov
jne
push
fsub
sbb
das
sub
jne
mov
clc
push
jo
adc
movs
popf
lds
xchg
jne
dec
int
ja
inc
xchg
rcl
stc
loope
dec
mov
mov
mov
lods
fst
or
gs
movs
dec
cli
enter
je
clc
iret
dec
adc
loop
rcr
scas
mov
adc
and
call
add
xor
mov
mov
push
push
adc
sahf
dec
push
jp
pop
xor
cmp
cli
lods
sub
sub
mov
push
dec
push
fsubr
loopne
rcr
add
xchg
in
(bad)
sub
jle
mov
inc
and
pop
sar
(bad)
mul
jno
std
aad
das
iret
cmp
cs
sbb
hlt
in
mov
out
and
xchg
dec
movs
mov
loope
xor
leave
dec
adc
fs
mov
dec
push
sahf
xor
or
dec
push
es
in
dec
in
out
in
pop
inc
jb
inc
ret
aas
sahf
and
ficom
retf
mov
adc
test
sub
xor
cmp
jne
cli
das
pop
ins
mov
pop
push
jmp
mul
aad
and
sub
add
cmp
mov
out
pop
(bad)
outs
das
jno
xchg
pop
punpcklwd
xor
nop
neg
shr
loop
daa
lea
popa
add
scas
xlat
imul
arpl
jle
jl
iret
jae
fst
scas
pop
jo
movs
add
mov
jbe
cmps
jnp
rcl
imul
faddp
pop
and
mov
sub
fcmovnu
(bad)
sbb
jg
cmp
mov
and
pop
dec
adc
cmp
or
je
enter
out
mov
mov
and
loopne
or
push
pop
(bad)
mov
hlt
dec
sub
movs
sbb
mov
jg
das
mov
xchg
in
scas
jbe
imul
push
(bad)
jg
leave
out
and
fs
fdiv
cmp
lods
xor
cmc
dec
sub
mov
mov
mov
mov
outs
cs
or
popf
pop
inc
and
mov
and
arpl
nop
int
pop
fs
(bad)
push
push
scas
test
vmulss
lds
push
xchg
jns
imul
ins
mov
jmp
sahf
das
sahf
frstor
sbb
or
movs
adc
dec
sub
jp
rcr
cmc
rcr
cld
mov
idiv
adc
adc
fistp
push
sbb
pop
loop
sub
mov
movs
or
in
je
push
fiadd
rcr
xchg
enter
ins
xlat
jmp
cmp
mov
mov
out
mov
jb
pop
pop
xchg
and
fwait
sbb
adc
adc
punpckhbw
out
xchg
pop
xor
outs
cmps
jecxz
aam
int3
test
sub
jp
loop
pop
push
adc
mov
(bad)
les
mov
std
ds
or
fsub
mov
ror
clc
push
sbb
out
lods
fcom
and
(bad)
sbb
cdq
out
lock
test
push
xchg
pop
shr
add
cdq
fst
inc
(bad)
lahf
xchg
cmc
jle
outs
clc
pop
icebp
xor
ret
push
adc
out
outs
(bad)
test
push
push
or
dec
dec
and
xchg
jno
movs
xchg
xchg
xchg
jne
xchg
cmp
mov
adc
sbb
cdq
mov
(bad)
loope
repz
xor
mov
repz
inc
mul
jb
test
mov
test
icebp
arpl
popf
push
inc
push
mov
fild
sahf
aaa
mov
fldenv
mov
les
retf
test
dec
lock
cmps
bound
cmps
dec
icebp
xor
popa
add
je
out
push
jbe
push
mov
and
test
push
mov
loop
scas
shr
mov
ins
je
sub
mov
ror
in
dec
cmp
adc
mov
scas
xor
and
inc
jle
loop
leave
or
jae
cmp
data16
jno
arpl
repnz
or
fsubr
icebp
icebp
xchg
and
xor
push
xchg
test
in
inc
movs
dec
cmp
sub
dec
add
inc
ins
cmp
clc
pop
adc
pusha
sub
shr
arpl
push
in
aam
xlat
xor
outs
ins
lods
add
dec
push
jmp
and
test
mul
popa
dec
cmps
and
pop
sbb
jl
aam
call
mov
xchg
push
jge
lods
(bad)
push
push
dec
jmp
imul
nop
xor
cmp
dec
ins
adc
(bad)
test
out
arpl
fld
sbb
mov
or
add
xchg
movs
or
pandn
das
cmc
sbb
es
gs
jae
(bad)
cmp
mov
and
test
sub
xchg
xchg
jo
xchg
sbb
jns
int3
or
dec
dec
push
addr16
push
dec
xchg
xor
stc
pop
push
dec
addr16
push
dec
xor
xchg
mov
movs
add
mov
jp
bswap
mov
inc
(bad)
pushf
int3
jne
adc
adc
sub
mov
push
cmp
(bad)
ror
sub
mov
stc
scas
sub
fdivr
out
je
inc
repz
push
test
push
add
jmp
pop
pop
aas
out
or
inc
cmps
test
inc
inc
fcomp
mov
(bad)
mov
xchg
les
shr
add
repnz
out
lods
mov
sbb
fdivr
pop
test
gs
aam
aam
push
sbb
or
xor
sbb
pop
test
mov
adc
data16
jbe
cs
xor
dec
xor
les
mov
adc
loope
int
dec
xor
sub
test
push
sti
add
das
mov
pusha
xor
loope
pop
adc
pusha
add
loop
mov
sub
adc
int
imul
into
pop
inc
cmp
mov
xchg
push
sub
push
jl
jmp
mov
and
sbb
jae
xchg
imul
dec
inc
xchg
xor
out
or
mov
out
dec
std
data16
pop
cwde
(bad)
jmp
daa
jns
adc
ss
fsubr
jecxz
mov
pop
stos
push
or
fsubr
stos
retf
int3
aaa
stos
xchg
xchg
fist
mov
jnp
sub
rcr
dec
xchg
int
add
xchg
imul
mov
adc
sar
xor
loope
xor
clc
loopne
in
adc
in
aad
repnz
xlat
(bad)
into
dec
sub
mov
inc
pop
mov
dec
aad
cmps
and
or
imul
loopne
inc
xchg
dec
dec
pop
mov
int
push
xchg
cmp
lock
sub
test
pop
or
test
(bad)
aad
sbb
pop
and
cmp
jecxz
mov
inc
and
addr16
mov
sahf
stc
addr16
adc
mov
stos
pop
call
jge
loope
xor
in
and
cmp
das
sub
jb
mov
push
and
mov
aad
cmp
gs
ret
shl
rol
fild
push
repz
cld
call
inc
sub
xlat
or
mov
ret
call
and
jp
sub
jge
hlt
pop
in
test
xor
jecxz
mov
and
pop
dec
sbb
jp
mov
popa
pop
xchg
mov
adc
stc
dec
cmps
(bad)
jle
arpl
mov
jo
xchg
sub
les
push
lock
les
or
dec
jge
std
mov
stos
outs
xlat
pushf
dec
scas
mov
sub
and
es
dec
jno
dec
fsubr
mov
les
int
xchg
ins
fcomp
mov
sbb
push
(bad)
das
out
hlt
ins
loope
in
jns
dec
xchg
add
mov
xor
dec
inc
inc
mov
dec
add
pusha
test
dec
lods
add
sub
xchg
mov
iret
jmp
clc
mov
sbb
sbb
adc
outs
sub
mov
cmps
or
movhlps
inc
movs
xchg
and
pop
aam
in
mov
xor
test
je
(bad)
or
mov
ret
cmps
(bad)
mul
mov
jecxz
push
sahf
test
ja
repz
inc
ja
push
(bad)
jno
or
(bad)
sahf
jmp
push
stc
mov
inc
je
sbb
lods
in
adc
rcl
cmps
xchg
inc
(bad)
mov
fimul
push
mov
loop
rol
popa
les
mov
add
mov
push
mov
xor
lods
adc
mov
(bad)
jmp
sub
push
push
push
sub
jmp
sti
and
mov
cmp
int3
mov
add
sbb
fistp
adc
or
popa
xchg
and
in
jbe
and
inc
out
or
mov
(bad)
jle
push
push
jp
nop
push
dec
sub
fidiv
pop
or
test
sub
push
mov
sbb
mov
sub
enter
imul
hlt
lahf
or
xor
retf
test
sub
aas
push
pop
leave
imul
in
cdq
leave
loop
fs
xchg
push
push
pop
mov
call
push
add
outs
stos
sub
mov
stos
call
pop
movntps
not
inc
das
mov
not
aas
std
movs
(bad)
sbb
in
jae
dec
push
xlat
jne
cmp
sbb
or
inc
push
dec
add
push
lock
shr
call
or
test
fs
cmp
outs
cld
ds
gs
cmp
mov
adc
(bad)
jmp
push
mov
cmp
jmp
mov
xor
cmp
in
pushf
push
push
xchg
or
push
add
cmps
lods
cmp
cmp
arpl
aas
jl
or
cmp
ds
jle
mov
(bad)
mov
cmp
mov
not
pop
hlt
imul
and
push
or
jecxz
mov
pop
dec
sbb
inc
and
sub
xchg
pusha
pop
lods
loopne
pop
dec
sahf
cmp
add
ds
call
fwait
ds
fstp
cmp
sbb
nop
mov
add
and
sahf
mov
pop
push
mov
adc
and
sbb
jae
stc
sar
shl
jecxz
push
inc
or
scas
adc
arpl
add
dec
push
push
retf
iret
mov
jns
and
sbb
sbb
aaa
jmp
sub
std
xchg
ins
sub
push
and
or
inc
xor
and
push
ret
dec
cdq
js
add
cwde
inc
cs
sbb
lahf
fiadd
mov
dec
mov
inc
ss
cmp
(bad)
cmps
push
adc
out
sub
jmp
push
sub
mov
leave
jg
sbb
or
gs
pop
cdq
scas
fstp
jns
push
push
add
cld
movs
pop
loopne
cwde
inc
js
into
loop
lods
test
pusha
cmp
outs
test
fimul
xor
lds
mov
(bad)
addr16
sbb
xchg
xor
aas
cmc
lea
lock
fsub
(bad)
fcmovb
fwait
jle
pop
add
rcr
push
jl
js
jns
pop
es
dec
stos
inc
mov
xlat
pushf
aad
sbb
stos
das
mov
imul
xor
imul
push
not
inc
into
push
(bad)
repz
mov
push
cmp
adc
ror
and
outs
outs
mov
fld
js
call
mov
inc
dec
in
add
adc
mov
jmp
outs
repnz
repz
(bad)
and
stc
enter
clc
cmp
xchg
outs
cs
xor
or
cli
xchg
ins
jno
sbb
add
(bad)
push
push
pop
jg
mul
adc
(bad)
xor
jecxz
push
jle
dec
fidiv
mov
xor
sbb
imul
xor
loope
in
or
iret
cmp
dec
pop
test
jl
push
pop
mov
and
lods
xchg
pop
add
loope
pop
jmp
ret
push
dec
inc
mov
add
push
push
rcr
je
scas
mov
inc
or
fst
mov
push
iret
ins
enter
repnz
or
call
add
adc
or
aam
cmp
jae
nop
inc
mov
xor
add
mov
add
int
retf
xchg
inc
xor
mov
mov
inc
out
add
cmp
lods
out
inc
popa
mov
and
mov
into
dec
stc
inc
push
xor
(bad)
icebp
adc
jno
enter
sbb
mov
idiv
or
cmps
sub
adc
and
pop
cmps
popf
int3
repz
stos
adc
sbb
pop
in
out
mov
and
mov
in
sbb
jmp
jl
pop
dec
add
mov
loopne
or
mov
(bad)
mov
mov
push
mov
sub
and
push
inc
call
add
mov
ins
retf
jg
jmp
mov
fwait
pushf
je
cs
mov
sahf
jle
in
cmp
shl
pop
test
test
and
das
dec
add
shl
xor
ja
mov
dec
imul
mov
stc
in
jmp
xchg
les
jbe
xor
add
dec
push
add
movs
jge
push
into
mov
(bad)
ja
movs
pop
fsub
loop
and
mov
jo
mul
ja
out
xchg
mov
(bad)
push
ins
pop
out
xor
xchg
ja
daa
(bad)
mov
lods
or
adc
jnp
add
fdiv
push
cmp
leave
push
leave
les
loopne
pop
sbb
xchg
int
and
shl
ds
repz
shr
std
jl
pop
daa
daa
add
(bad)
scas
fsubr
aad
dec
xor
xor
jae
icebp
cmps
mov
out
nop
aam
ret
mov
test
pop
mov
mov
test
mov
mov
mov
sbb
xlat
jne
cmp
rol
ret
pop
xchg
sahf
jmp
mov
xlat
cwde
sbb
or
bound
arpl
ins
jo
ret
mov
xor
and
and
je
jmp
in
mov
jge
retf
cmp
adc
in
adc
jecxz
jmp
lods
add
dec
int3
sub
push
and
mov
mov
std
mov
aaa
ja
or
ret
bound
mov
loope
jns
imul
hlt
movs
das
mov
int3
sub
mov
mov
std
jmp
inc
jg
ss
mov
popa
mov
stos
xchg
gs
jbe
adc
mov
fcmovnbe
sub
push
and
cmps
and
je
sub
mov
jl
outs
ss
aad
mov
or
xchg
adc
lock
jp
push
cmp
mov
idiv
(bad)
out
sub
pop
adc
pop
mov
sbb
mov
sub
js
dec
int3
mul
pop
cmp
mov
cmp
les
sub
xor
push
aad
adc
out
mul
leave
mov
sbb
mov
sub
xchg
push
je
adc
add
pop
fcomp
test
fsub
inc
pop
or
call
sbb
sahf
outs
pop
pop
adc
frstor
xor
rol
ret
jp
retf
pop
sub
mov
dec
mov
movs
(bad)
hlt
or
jb
cld
sbb
sti
inc
cmps
jne
jle
fidiv
retf
or
(bad)
mov
shr
jb
adc
cli
int3
lock
jg
inc
jmp
bound
in
into
push
adc
in
cdq
sbb
mov
add
dec
test
mov
sub
push
bound
(bad)
mov
mov
cmp
ficom
(bad)
and
inc
or
pop
inc
mov
call
push
stos
mov
push
add
add
pop
mov
and
xor
call
push
add
sub
dec
xchg
add
mov
and
mov
dec
or
out
or
mov
xchg
mul
sub
retf
inc
cmp
scas
push
enter
and
xchg
or
std
(bad)
fist
dec
xchg
cli
into
push
adc
fwait
ret
loop
jns
xchg
push
cmp
call
lds
jo
inc
cmp
std
fild
cmovle
sbb
add
push
xchg
mov
in
adc
mov
in
xchg
pusha
fs
hlt
movs
rol
mov
daa
jno
inc
dec
out
and
idiv
pop
push
ror
cmp
loop
and
xchg
in
(bad)
mov
mov
mov
cmp
pop
xor
jg
xor
das
adc
fistp
scas
into
mov
inc
jb
(bad)
ror
call
adc
sub
cmps
or
ror
mov
mov
aas
(bad)
cmp
jnp
fbstp
sub
or
mov
cmp
inc
ret
push
jnp
repnz
loopne
fdivr
dec
ja
daa
cmp
cmp
pop
or
aam
fdivr
dec
sub
rol
js
stos
push
retf
cs
ficom
sbb
or
inc
add
mov
dec
int
push
add
inc
and
or
mov
mov
sti
clc
mov
dec
mov
loopne
je
xor
add
mov
pop
sahf
mov
cmp
imul
(bad)
pop
mov
or
cwde
xor
std
push
xchg
in
or
cmp
fisubr
fsub
sub
mov
iret
jmp
cmp
jmp
imul
push
sub
xchg
sub
jl
cmps
cmp
sahf
loope
cmp
and
cli
jnp
lods
mov
ja
(bad)
jne
dec
test
mov
adc
xchg
xchg
cli
xchg
loopne
dec
cli
aam
xchg
adc
mov
xchg
cmps
sahf
test
shr
jmp
sar
(bad)
repz
lods
mov
sbb
pop
mov
xchg
daa
pop
mov
add
dec
movs
sub
(bad)
xchg
fs
lds
and
mov
dec
push
aaa
pop
inc
mov
xchg
pop
add
cld
sub
pusha
adc
std
mov
mov
lock
loop
xchg
je
push
add
xlat
sar
shr
push
fisubr
test
scas
aam
mov
inc
pusha
jge
sbb
mov
gs
sbb
out
loop
sbb
push
into
sub
add
fst
out
mov
pop
call
in
out
movs
xor
or
pop
shl
add
adc
movs
aas
mov
dec
lea
bound
dec
mov
loope
mov
push
ds
cmp
ror
aad
cdq
lock
dec
cwde
add
sub
sbb
adc
popa
fwait
cmps
ja
push
push
cmp
mov
jb
dec
xlat
dec
jne
cmovns
adc
loope
push
add
(bad)
xchg
in
into
aad
in
popf
jecxz
push
nop
ss
stos
and
sbb
cmp
xor
jle
pop
jmp
stc
and
cwde
icebp
push
and
ja
loopne
call
sub
pop
adc
mov
xchg
cmp
(bad)
in
mov
out
jle
in
dec
push
ins
jb
jle
scas
aam
add
cdq
and
and
pusha
cmp
scas
sub
sub
and
das
xor
lds
je
je
icebp
cmp
adc
cli
dec
dec
jp
dec
xlat
mov
mov
inc
fild
mov
xlat
inc
daa
enter
push
icebp
mov
outs
pshufw
std
adc
and
pop
push
je
out
adc
mov
inc
popf
mov
dec
jge
lahf
mov
pop
cmp
ds
and
dec
(bad)
inc
or
cmp
cmp
push
pushf
pop
out
mov
adc
add
xchg
mov
je
sbb
je
(bad)
imul
(bad)
cmp
dec
imul
out
daa
ror
adc
out
lock
ficomp
mov
arpl
aas
cmp
jbe
dec
adc
or
push
loope
push
mov
in
mov
arpl
sbb
sbb
sub
imul
fldenv
dec
mov
movs
enter
pop
push
lods
xor
outs
and
push
dec
push
ret
pop
push
mov
push
jno
xchg
jmp
fdivr
daa
pop
std
jmp
pop
hlt
les
xchg
pop
std
push
dec
fstp
clc
fucomp
sub
repnz
sbb
(bad)
aaa
adc
inc
adc
cmp
mov
dec
clc
mov
inc
les
xchg
sbb
or
and
imul
or
xchg
loop
mov
add
into
ds
sar
or
pop
pop
jg
icebp
pushf
gs
jns
test
or
(bad)
in
stc
pop
cmp
xor
cld
inc
push
xor
in
test
jb
ins
or
int
repnz
dec
mov
int3
int
cmps
sti
push
dec
test
fcom
in
lds
and
mov
add
gs
(bad)
arpl
sbb
add
jmp
popa
aam
or
fucom
imul
fcom
movs
ins
xchg
push
lock
jb
or
push
pop
out
jp
pusha
pop
adc
push
daa
ret
call
xor
popa
(bad)
ss
push
mov
fsubr
adc
lahf
repz
pop
out
movs
fimul
pop
push
add
cmp
add
loop
outs
mov
ds
dec
xor
or
sahf
int3
push
push
push
mov
jmp
jnp
inc
xor
imul
or
inc
mov
xchg
int3
adc
ds
xchg
xor
ins
cli
call
sub
mov
xchg
xchg
mov
and
setp
jbe
dec
mov
cdq
data16
retf
in
push
adc
jl
loop
mov
shl
jnp
mov
cmp
jnp
aas
jmp
jle
pusha
jb
and
ds
bound
pushf
jo
dec
aad
pushf
mov
cmp
mov
daa
mul
repz
push
jae
div
mov
retf
repz
stos
(bad)
cmp
cdq
xchg
dec
(bad)
aaa
fs
xchg
dec
pop
(bad)
nop
mov
ins
sti
pop
(bad)
aas
pop
mov
inc
retf
cmp
xchg
sub
push
clc
mov
ret
sbb
push
mov
jns
aam
push
jno
sbb
ficom
cbw
(bad)
cmp
or
outs
sbb
dec
sbb
and
shr
xlat
inc
(bad)
pusha
xchg
ja
jge
int3
outs
aaa
xor
adc
das
jns
test
xor
fwait
xchg
loop
es
cmc
sub
movs
call
fisttp
je
pop
pushf
sti
or
nop
xchg
add
cmp
fcomip
sub
loop
(bad)
iret
add
shr
and
sub
jbe
rol
movs
out
in
pop
xor
outs
int
ficomp
cmp
mov
in
test
push
jno
scas
adc
mov
call
jno
pop
(bad)
ins
xchg
cwde
dec
fnstcw
inc
enter
jno
or
lods
add
push
mov
mov
addr16
loopne
in
test
(bad)
test
shr
fwait
movs
cli
scas
dec
add
cmp
adc
cmp
stc
adc
xor
not
sbb
and
or
inc
fiadd
je
xchg
rol
loop
adc
and
or
cmp
inc
jmp
mov
faddp
mov
add
jnp
or
enter
or
fcom
cs
fwait
inc
jae
jmp
mov
push
mov
jecxz
leave
dec
sub
push
dec
and
adc
sub
adc
and
xchg
mov
inc
sete
dec
shr
(bad)
jo
call
nop
jg
shl
jg
out
lock
inc
mov
mov
xchg
in
add
push
dec
add
mov
dec
inc
sub
inc
in
int
not
outs
and
(bad)
rol
or
addr16
fdivr
scas
aas
sub
jp
dec
xchg
movq
inc
sbb
sbb
inc
sub
or
lods
mov
icebp
mov
xchg
mov
sub
jmp
dec
sub
popa
scas
rcr
cmp
(bad)
jb
xchg
int
outs
pop
or
lods
push
scas
sbb
test
and
push
mov
push
dec
xor
sub
jmp
mov
and
cli
test
adc
cmp
pop
out
push
scas
ss
mov
fdivp
mov
out
stc
or
add
retfw
repz
sub
push
outs
retf
mov
push
or
cmp
sbb
mov
in
pusha
out
in
pop
(bad)
retf
cmp
xlat
hlt
fst
mov
ficomp
fnstsw
imul
or
or
inc
inc
les
mov
mov
pop
rcl
sub
xchg
cmp
mov
imul
pop
push
rcr
mov
mov
mov
inc
jmp
gs
in
int3
jl
lock
add
fdivr
adc
cmp
cmps
scas
int
sahf
dec
push
mov
mov
adc
push
call
mov
scas
and
sbb
lea
and
aam
arpl
sub
jno
add
imul
xchg
fmul
loop
ret
retf
xchg
inc
lea
ror
les
push
hlt
stos
out
pop
dec
sub
loop
or
js
shl
push
mov
sub
pop
jo
xor
in
mov
jmp
or
test
mov
test
mov
inc
scas
hlt
int
cmp
test
sbb
popa
pop
call
inc
cmp
add
call
sbb
add
sbb
sub
add
push
inc
pop
repnz
loop
lods
sahf
lods
xor
out
dec
mov
dec
dec
inc
jno
in
xchg
pop
in
retf
(bad)
(bad)
fcomp
adc
popf
lods
test
adc
jne
push
inc
aad
jbe
pop
push
daa
lea
xor
jle
shl
pop
shr
cdq
cmp
and
fs
(bad)
inc
frstor
fnstcw
adc
aas
jns
cmp
fucomp
dec
pop
and
out
or
test
(bad)
pop
icebp
jmp
and
rcl
int
les
leave
mov
jecxz
out
lahf
fild
mov
mov
adc
(bad)
std
sti
xor
cli
fisub
(bad)
std
clc
fidivr
xchg
mov
popa
inc
popa
xor
clc
sub
leave
loopne
xchg
mov
repz
aad
out
dec
xchg
cs
or
inc
(bad)
aam
jne
fwait
xchg
jb
jl
mov
leave
xor
dec
shl
sub
add
scas
pushf
sub
mov
xor
sbb
mov
clc
inc
test
xchg
in
cmp
push
xor
jp
sub
mov
or
xor
popa
loop
xchg
add
pop
jno
mov
adc
xchg
stos
sbb
fcomp
xchg
hlt
mov
(bad)
jg
movs
xrelease
aaa
movs
mov
out
adc
mov
xchg
bnd
push
jmp
cmp
and
aaa
les
movs
sub
xor
fadd
scas
sbb
cmp
xchg
outs
outs
mov
sbb
call
or
fild
in
xor
cmp
mov
iret
adc
test
jg
lock
aam
push
jnp
out
movs
mov
mov
dec
add
dec
fld
sbb
test
xchg
stc
xor
dec
dec
jno
sahf
mov
pop
in
jmp
jmp
outs
dec
lds
std
mov
fiadd
hlt
adc
addr16
fist
out
nop
loope
push
or
or
inc
adc
ins
xlat
mul
in
xor
add
mov
sub
shl
sbb
das
hlt
lods
inc
cld
mov
or
and
push
aas
jle
sbb
imul
mov
pop
and
test
cmps
addr16
mov
popf
pop
fistp
mov
pop
lock
dec
push
add
fstp
fldenv
pushf
popf
and
pusha
in
jecxz
ficomp
ja
iret
pop
mov
inc
mov
ins
cli
mov
push
hlt
jl
in
jp
ja
popa
cmp
pop
ret
sub
in
add
xor
pop
iret
in
push
mov
out
aas
add
xor
call
pop
lock
or
daa
push
dec
(bad)
and
mov
fidivr
(bad)
loope
jbe
mov
addr16
imul
fadd
cmps
mov
mov
xor
stos
sti
push
das
call
in
push
mov
sbb
fmul
pop
pop
adc
in
jae
jns
jmp
cmp
movs
pop
aaa
dec
cmp
or
out
add
push
popa
mov
push
sbb
cdq
leave
push
jge
jae
pusha
addr16
pop
cld
fmul
std
mov
fsub
mov
xlat
xchg
xchg
xor
leave
cmp
(bad)
repnz
mov
mov
(bad)
ins
leave
jmp
mov
ins
or
xor
or
sub
sub
sbb
repnz
lds
push
xchg
outs
pusha
out
mov
lea
retf
cmp
icebp
aaa
xlat
jns
inc
ficom
mov
fmul
jmp
add
mov
xchg
xor
pop
loop
mov
push
jmp
inc
mov
mov
sbb
lahf
aas
mov
xor
test
push
icebp
and
cli
cdq
adc
jle
and
fwait
add
std
cmp
xor
aam
je
je
inc
mov
cwde
jbe
lea
mov
adc
xor
imul
dec
popa
inc
cmp
cmps
or
mov
mov
les
ins
stos
sub
push
xchg
lds
dec
mov
and
data16
mov
ror
cmp
loopne
std
xor
or
test
lds
sbb
jp
test
retf
aam
in
mov
mov
les
pushf
(bad)
jecxz
inc
pop
add
jno
hlt
jae
xlat
add
mov
test
sbb
and
fidiv
xchg
mov
push
cs
jbe
imul
dec
cmp
stos
add
(bad)
adc
jg
sub
push
xchg
out
and
cmps
cmps
sbb
data16
inc
or
xchg
jbe
mov
and
fld
sub
(bad)
sbb
into
inc
fadd
dec
aaa
inc
mov
and
test
rcl
js
inc
dec
mov
aaa
cld
call
nop
xchg
cmp
fwait
cmp
fs
ret
push
mov
inc
ja
xor
(bad)
inc
in
sti
mul
cmp
mov
sub
xchg
dec
aaa
adc
mov
cs
add
movs
hlt
jmp
rcr
in
xor
mov
push
dec
retf
repnz
mov
xchg
xor
pushf
movs
mov
fldlg2
pushf
xchg
dec
xor
hlt
mov
and
loop
push
inc
pop
sub
test
neg
dec
xchg
mov
into
jge
test
repnz
cmps
jo
cli
test
xor
mov
cmp
jae
mov
