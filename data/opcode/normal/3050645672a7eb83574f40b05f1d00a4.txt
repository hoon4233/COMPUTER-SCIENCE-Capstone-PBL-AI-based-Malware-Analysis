pop
data16
inc
inc
add
pop
inc
outs
outs
ins
gs
outs
add
or
add
jmp
jae
add
jb
lea
sub
add
dec
outs
je
addr16
inc
outs
(bad)
in
outs
cmp
jg
rol
inc
outs
ins
jo
nop
push
push
or
push
je
outs
mov
addr16
or
push
imul
popa
push
int
ja
int
sahf
mov
out
ds
push
push
sub
xchg
push
pop
push
dec
bound
arpl
pop
sbb
ins
stc
scas
test
je
ins
in
invd
dec
push
outs
imul
dec
outs
xchg
inc
xor
sbb
jmp
cmps
paddsb
enter
in
fsub
or
aam
or
int3
enter
enter
mov
mov
or
mov
and
mov
cld
pushf
cwde
xchg
sbb
enter
invd
enter
nop
mov
mov
cmp
xor
fs
and
sbb
aas
fdiv
inc
push
add
mov
adc
mov
idiv
and
add
mov
and
mov
aaa
inc
pop
ret
mov
jl
je
fs
inc
jo
push
push
push
mov
add
push
(bad)
idiv
fs
test
jne
xor
pop
leave
mov
mov
(bad)
(bad)
dec
inc
rol
mov
mov
inc
cmp
jne
mov
mov
mov
push
nop
mov
inc
add
scas
mov
mov
xchg
movs
test
xchg
mov
jle
std
std
mov
mov
or
adc
add
sar
ss
mov
push
or
mul
(bad)
out
or
(bad)
push
push
push
mov
mov
mov
mov
add
rol
mov
lahf
rol
push
or
push
jne
and
fiadd
sub
sub
or
inc
add
dec
push
add
jg
jg
cmp
jne
cmp
mov
cmp
jne
mov
mov
sbb
ds
test
pop
pop
pop
adc
loopne
dec
xchg
mov
mov
jle
fistp
ins
mov
add
call
ja
and
mov
jle
push
ja
cld
or
test
inc
sti
stos
pop
ret
leave
jmp
or
clc
add
(bad)
in
(bad)
loopne
iret
sti
sub
jmp
sub
stc
mov
jo
(bad)
xchg
adc
ror
or
or
mov
cmps
sbb
sti
jne
sbb
mov
push
mov
mov
cmp
mov
fucomip
add
mov
push
push
scas
js
push
jg
test
xor
lds
mov
adc
(bad)
mov
push
and
icebp
mov
jl
add
push
mov
sub
mul
dec
add
fcom
jne
jle
in
icebp
add
popf
cmp
or
mov
in
fsub
and
inc
fist
push
and
call
sub
mov
jg
mov
mov
or
out
ja
mov
add
jbe
lods
xor
cmp
jnp
sub
jbe
or
push
in
pop
mov
adc
sti
push
out
idiv
jne
mov
jmp
scas
frstor
sbb
add
sbb
dec
jo
xor
jno
inc
inc
outs
hlt
or
lock
jae
sbb
loop
mov
lods
jns
inc
sub
or
lds
jg
popf
cmp
pop
cmp
add
pop
jbe
mov
cmp
in
test
or
or
jbe
scas
adc
xor
sti
push
push
xor
out
add
sbb
push
adc
dec
out
push
inc
(bad)
jns
mov
xor
jmp
xor
sahf
xchg
in
sub
or
out
daa
cmp
sbb
jae
mov
cmp
jae
xchg
inc
sar
sbb
inc
or
xchg
add
outs
or
dec
clc
mov
(bad)
aas
or
add
lock
mov
repnz
shl
cmp
fwait
jmp
add
mov
inc
es
xchg
inc
ds
jmp
add
and
jnp
inc
inc
cmp
movs
and
push
mov
pop
mov
mov
adc
and
clc
ret
cmp
inc
jle
sub
inc
mov
cmp
aaa
stos
(bad)
lods
cmp
xor
xor
lds
mov
xor
lds
mov
pop
or
call
test
xchg
loope
(bad)
(bad)
jmp
mov
cmc
jne
nop
fsubp
cmp
lds
cmp
sub
cs
add
inc
popf
adc
adc
xchg
lea
inc
mov
mov
inc
fs
add
out
cmp
cs
lock
mov
out
ror
cmp
pop
pop
test
je
imul
jo
add
mov
add
adc
ja
adc
mov
sbb
(bad)
femms
add
aaa
push
push
push
mov
push
adc
test
jge
and
mov
hlt
popf
adc
(bad)
clc
seta
scas
ret
sub
add
sbb
leave
and
hlt
inc
cmp
in
mov
jmp
mov
mov
or
aas
pop
pop
pop
icebp
sub
jl
adc
sub
xchg
ret
mov
and
xchg
push
xor
cmp
loopne
inc
(bad)
iret
add
jnp
ins
in
out
sub
adc
test
push
gs
push
outs
imul
adc
jmp
add
push
dec
stc
or
sbb
retf
pushf
fistp
scas
cmp
pusha
dec
or
adc
dec
clc
adc
loopne
cmp
adc
jmp
and
xchg
mov
jmp
push
lahf
dec
jne
out
and
add
call
outs
jmp
dec
mov
shl
dec
or
push
mov
cmp
inc
xchg
add
outs
mov
sub
lea
xor
jl
mov
push
or
std
jle
add
or
or
mov
and
rcl
rol
cld
leave
adc
or
add
scas
ins
or
push
or
and
shr
mov
cld
add
and
test
je
add
(bad)
jnp
fimul
xor
test
outs
mov
add
and
(bad)
cmps
aaa
jae
cmp
cmp
test
add
xchg
out
stos
pop
scas
mov
xor
add
jmp
mov
add
and
repz
bound
mov
dec
mov
or
inc
test
add
mov
lds
mov
mov
jmp
and
fmul
mov
and
pop
xor
jg
pop
fstp
jo
ret
lea
xor
xor
std
add
mov
mov
(bad)
scas
ja
add
sub
jo
(bad)
mov
(bad)
shr
jae
hlt
push
rcr
xchg
mov
sbb
sbb
cmp
inc
adc
std
pop
add
sub
cmp
jnp
fild
test
mov
jb
mov
das
adc
jge
inc
adc
or
repz
sub
adc
adc
fcomp
sbb
dec
xchg
jle
lock
in
dec
mov
inc
or
lahf
loope
or
pop
cmp
jae
loope
je
fsubr
pop
add
aad
repz
fadd
loope
(bad)
sbb
js
clc
retf
adc
add
mov
loopne
mov
xor
mov
out
test
popa
ds
jo
(bad)
fistp
lahf
clc
pop
mov
ror
ret
push
pop
int3
lea
fs
ret
pusha
pop
cmp
shr
cmp
inc
stos
sbb
jb
adc
or
mov
mov
clc
mov
add
pop
mov
push
lahf
icebp
ss
cmps
jle
cld
mov
cs
pop
mov
pop
je
pop
jmp
popa
jo
loope
or
add
lods
js
sbb
pop
sbb
mov
jnp
out
jne
movs
sub
cmp
ret
sub
adc
xor
xor
out
loope
dec
or
jmp
loopne
pop
mov
std
lock
rol
(bad)
xchg
mov
or
pop
jne
mov
jbe
push
pop
inc
call
pop
test
mov
adc
xor
push
cld
or
xor
adc
leave
push
push
jmp
repnz
add
xor
mov
ss
add
sti
push
jg
imul
sar
dec
pop
push
cmp
jns
mov
dec
inc
lahf
shl
pop
cwde
fdiv
push
or
xor
or
test
xor
stc
cmp
aas
inc
(bad)
hlt
mov
mov
add
ret
or
sbb
jmp
popa
retf
shl
lahf
cmp
jp
or
mov
in
shr
(bad)
clc
repz
cmp
sbb
pop
not
movs
test
push
or
adc
xor
push
xlat
or
nop
jl
fdiv
xor
or
lds
inc
loopne
push
test
jne
test
sub
adc
dec
cld
or
sahf
push
add
mov
mov
mov
test
nop/reserved
or
ret
das
and
inc
push
add
dec
mov
das
jb
ret
cmp
or
xchg
add
or
add
dec
pop
test
pusha
mov
adc
ret
sbb
cli
add
call
fisttp
aaa
or
jmp
mov
cmp
jge
push
test
stos
fwait
push
adc
sbb
adc
inc
jno
dec
mov
mov
dec
aas
int
je
(bad)
(bad)
(bad)
mov
pusha
lea
push
sbb
(bad)
cmp
jb
(bad)
sbb
(bad)
dec
loope
cmp
int
adc
add
js
jbe
shr
dec
not
adc
test
push
movs
add
in
cmp
mov
mov
pop
xrelease
cmp
loope
ja
(bad)
sti
rcl
mov
and
outs
push
arpl
iret
adc
pusha
jp
scas
sbb
dec
daa
add
pop
sahf
add
add
lock
mov
(bad)
xchg
sbb
fbld
out
ret
xlat
js
xchg
add
lds
js
aad
mov
or
fsub
and
shr
pop
clc
add
jmp
xchg
push
jns
xor
lods
jno
repz
rcl
sub
add
dec
aas
pop
add
not
mov
mov
adc
add
xlat
cwde
ss
paddsb
scas
mov
ret
(bad)
std
cmp
jge
aaa
mov
pop
loop
xchg
dec
push
lods
jbe
mov
xchg
repnz
and
jg
or
adc
add
pop
push
imul
sbb
add
pop
lock
mov
test
je
neg
push
mov
inc
and
cs
imul
mov
xor
xchg
ss
bound
rcl
bound
cmp
int3
out
and
or
add
call
dec
mov
or
fmul
(bad)
fild
and
leave
xlat
iret
enter
fmul
(bad)
(bad)
(bad)
loopne
jecxz
in
lock
mov
scas
push
push
push
pop
cmp
pop
pop
bound
rol
xchg
(bad)
mov
stos
mov
cld
jge
(bad)
mov
arpl
idiv
je
cmp
repz
push
jmp
add
movs
dec
pop
je
cld
lea
xor
std
or
push
popa
xor
(bad)
mov
jmp
add
std
jg
mov
add
jbe
cmp
jne
cmp
add
out
mov
sti
xor
jmp
cmp
sbb
add
push
and
pop
mov
sub
retf
dec
ja
push
es
mov
scas
jle
push
shl
pop
int
lods
daa
xor
cwde
into
outs
jmp
cld
pusha
push
fcom
push
imul
push
ret
sbb
jmp
xor
mov
lea
mov
ror
dec
sbb
cdq
test
(bad)
repnz
push
loopne
scas
mov
out
into
sbb
or
jmp
repz
(bad)
fdivr
mov
or
dec
jmp
xchg
or
jne
xchg
js
inc
call
jmp
movzx
imul
add
or
shl
push
hlt
add
imul
call
and
push
test
call
fistp
mov
clc
popa
jb
or
add
jo
push
fistp
fwait
pop
add
cmc
mov
ins
mov
rol
test
(bad)
xor
icebp
mov
inc
add
jb
cmp
ja
mov
call
ror
add
jmp
enter
test
leave
arpl
dec
ins
(bad)
push
dec
xchg
cmps
cdq
(bad)
xor
sub
inc
aas
mov
hlt
jg
sti
inc
inc
and
push
mov
shr
je
pop
or
sbb
fnstenv
dec
je
mov
idiv
fcomp
cmp
dec
jne
jmp
adc
cld
(bad)
inc
mov
cmp
jne
dec
je
mov
cmp
jne
or
add
jns
dec
sti
sti
adc
std
jne
not
shr
sbb
out
xor
or
cmp
int
loopne
or
jg
ds
or
stos
mov
stos
pop
aas
imul
fld
adc
(bad)
out
scas
stos
sub
push
mov
add
push
inc
cmp
je
mov
mov
sub
je
and
mov
(bad)
jle
xor
ja
cmp
ja
lea
add
add
pop
xor
out
int
(bad)
jl
pop
xor
mov
push
dec
mov
pop
adc
lock
sub
jmp
inc
dec
jmp
mov
jno
pop
je
lea
jbe
mov
mov
ja
add
mov
paddd
ret
push
mov
mov
add
je
inc
mov
dec
jne
push
jg
clc
pop
sub
mov
into
fisttp
pop
push
jle
shr
fistp
rcl
sar
leave
jae
inc
mov
hlt
or
pop
xchg
out
cmp
shr
cwde
or
inc
nop
test
not
inc
and
hlt
jmp
cmp
fist
sbb
cmp
jne
push
pop
and
fmul
pop
push
add
mov
in
fbstp
clc
not
test
inc
es
stc
push
nop
push
inc
stos
dec
scas
sub
int
inc
sub
addr16
add
ins
stos
sahf
xor
movs
mov
hlt
not
fsub
and
pop
cmps
sti
fbld
or
mov
(bad)
(bad)
(bad)
inc
push
inc
push
inc
pop
inc
outs
jb
popa
outs
fs
inc
gs
jo
imul
push
dec
popa
jae
sti
push
cld
imul
jne
mov
sub
jo
mov
inc
jo
xor
ror
inc
mov
mov
add
arpl
ret
sbb
vphadddq
pop
clc
push
int3
mov
add
inc
das
or
mov
jne
outs
push
mov
test
or
push
cdq
and
or
aas
adc
xor
add
mov
cld
xchg
mov
in
push
push
and
mov
mov
mov
jp
aas
lock
lahf
add
pop
in
lods
idiv
jg
sbb
in
cmp
je
pop
mov
add
jae
mov
mov
pop
cld
mov
neg
dec
jne
xor
xor
xor
cmp
inc
test
sbb
cdq
call
jg
adc
movs
mov
cmp
je
mov
leave
add
cs
pop
push
xchg
inc
adc
sub
mov
mov
scas
mov
jne
iret
pop
and
add
sub
mov
pop
inc
daa
jl
mov
pop
pop
je
jmp
pop
mov
sub
repz
mov
mov
loopne
push
push
push
push
call
outs
iret
adc
pop
clc
scas
or
push
mov
dec
or
pop
push
cwde
pop
sub
aad
mov
or
pop
or
call
clc
mov
js
sub
mov
push
(bad)
(bad)
sar
jo
aaa
test
push
push
or
push
cmp
pop
pop
ret
daa
(bad)
xchg
dec
call
in
arpl
push
neg
push
push
and
mov
mov
jmp
sar
shr
movsx
inc
inc
jmp
add
sbb
das
sbb
push
adc
fcmovnb
push
cmp
loope
lods
dec
jbe
enter
aas
loop
out
jne
push
shr
cmp
jge
cmp
mov
test
fild
inc
mov
mov
je
sub
ror
mov
test
adc
push
xor
sbb
sub
add
push
iret
mov
sbb
push
outs
inc
sub
push
push
mov
push
out
dec
cmps
sub
push
mov
pop
add
inc
aad
sbb
add
dec
pop
mov
mov
adc
jmp
dec
adc
adc
cmps
or
xchg
or
jb
add
or
icebp
sahf
sbb
add
mov
sbb
xchg
dec
movs
aam
sar
pop
add
lds
out
(bad)
aas
aad
pop
pop
add
je
mov
cmp
jne
arpl
mov
in
mov
inc
inc
mov
jg
inc
fwait
sbb
jne
add
dec
jne
adc
xor
sbb
or
sbb
xchg
outs
sbb
jo
xchg
adc
pop
jo
xchg
xor
lods
popa
les
outs
dec
pop
shl
mov
add
inc
sbb
mov
call
mov
or
adc
shl
sbb
push
push
push
push
push
push
pop
sar
jmp
lahf
aaa
xor
add
inc
inc
inc
cmc
xchg
pusha
add
aas
or
movntps
pushf
gs
or
inc
in
ficomp
adc
stos
add
mov
out
adc
cmc
sbb
jmp
ret
sbb
nop
popa
jle
movs
rol
or
mov
in
test
inc
add
je
cmp
lahf
stc
adc
pop
sub
je
jmp
add
mov
add
and
push
cmp
cmp
out
cmp
and
cmp
cmp
(bad)
(bad)
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
push
sbb
into
jmp
mov
iret
cli
(bad)
fsubr
push
mov
jmp
mov
jmp
mov
lods
jmp
std
rcl
and
ins
and
xor
(bad)
xchg
or
ds
or
cmp
jle
stos
mov
sbb
fadd
mov
push
inc
mov
add
outs
xor
mov
dec
add
fptan
push
adc
sbb
arpl
cdq
jle
push
sbb
pop
adc
je
cwde
xor
adc
mov
mov
in
loope
adc
mov
push
sub
je
popa
mov
jne
and
add
add
pop
(bad)
and
hlt
or
jo
clc
xor
mov
fild
add
sub
mov
jmp
js
and
jbe
jecxz
inc
cmp
movsx
aas
and
mov
xor
fisttp
js
sahf
cmp
jle
add
fwait
sbb
fisttp
cmp
jg
sbb
outs
loope
fwait
add
nop
fstp
dec
aas
sbb
mov
icebp
push
and
sbb
push
jnp
push
and
mov
lock
in
xor
pop
mov
lods
mov
icebp
add
mov
dec
call
outs
scas
push
repnz
cmps
cmp
adc
sub
mov
adc
and
mov
call
out
or
cwde
or
dec
std
mov
mov
jne
mov
outs
xchg
neg
sbb
inc
leave
add
mov
mov
cmp
cmp
imul
aas
rcl
in
sar
add
(bad)
call
out
cmp
xor
sub
ja
mov
pop
lock
mov
mov
inc
ret
jmp
mov
inc
cs
cmp
jo
cmp
add
mov
scas
aam
add
sub
jbe
push
sub
fs
adc
inc
aaa
rcr
push
pop
cmp
je
ret
js
js
in
lahf
int3
jne
call
adc
(bad)
dec
mov
push
shr
push
call
sbb
lods
sti
cmc
pop
jmp
push
outs
jb
loop
(bad)
jmp
outs
jae
inc
outs
jo
jb
addr16
sub
xor
cmp
sub
aaa
and
mov
push
mov
jno
dec
jmp
adc
pushf
iret
cmc
and
mov
mov
jns
inc
clc
push
pop
es
mov
push
sbb
add
or
dec
jne
xlat
dec
jl
imul
inc
jg
push
push
xchg
cld
cmp
es
dec
pop
lods
pop
pop
jmp
jbe
imul
loope
push
in
jle
pop
jle
cmc
pop
(bad)
icebp
push
ror
xchg
pop
mov
hlt
rcr
jo
clc
lods
mov
sbb
mov
clc
pop
stc
mov
test
hlt
dec
lock
daa
mov
and
mov
pop
clc
mov
jg
and
mov
inc
jmp
cmp
mov
or
push
push
push
push
push
clc
push
jp
mov
mov
or
dec
in
out
jmp
add
pop
ss
gs
sub
lock
fist
loop
mov
mov
xor
sbb
push
cmp
je
push
retf
outs
hlt
xor
add
std
test
sub
jmp
out
mov
sub
and
pop
pop
or
push
gs
xor
in
add
fidiv
enter
xchg
nop
push
push
push
mov
xor
(bad)
jg
repnz
jne
not
pop
add
pop
pop
xor
jbe
cld
outs
push
push
mov
nop
loope
scas
or
scas
(bad)
div
arpl
(bad)
xchg
out
add
push
sbb
test
ret
pop
jb
loopne
mov
mov
add
cmp
pop
bound
pusha
mov
in
fimul
adc
mov
sub
das
popf
out
popa
add
adc
or
or
and
ror
xchg
pop
or
(bad)
sub
(bad)
mov
lds
push
sbb
sti
gs
and
mov
jmp
aas
fsubr
(bad)
push
push
movs
and
mov
pop
mov
inc
cld
dec
int
push
fldenv
mov
inc
mov
sahf
out
add
cmps
pushf
cmp
loopne
jne
sbb
pop
daa
push
xchg
jmp
cmp
ror
mov
lea
imul
mov
sub
ja
add
push
shr
push
mov
stc
aaa
pop
cs
dec
dec
add
pop
dec
add
add
dec
jns
pop
sahf
adc
loop
and
test
movs
gs
pop
push
cmp
or
or
add
jmp
shl
aam
adc
xor
push
das
push
clc
inc
mov
pop
add
add
pop
aad
stos
sub
push
xchg
scas
cmp
inc
jnp
ud2
or
mov
jmp
sub
jg
es
jl
cmp
jge
sub
cdq
jl
xor
mov
adc
out
adc
shr
in
stos
mov
mov
jmp
push
pop
test
dec
aad
mov
sub
adc
inc
sub
es
and
icebp
cmp
jle
mov
sub
add
lea
imul
push
push
add
sub
push
out
fcmovnu
push
fistp
inc
dec
jge
xor
cmp
adc
push
in
(bad)
imul
add
gs
cmp
daa
mov
mov
lea
das
mov
scas
mov
in
jmp
push
jg
inc
pushf
xor
mov
push
mov
js
mov
inc
jae
adc
adc
retf
cmp
and
in
pop
mov
or
lods
jmp
js
clc
and
xor
pop
aas
shr
cwde
dec
cmps
lods
and
sub
loopne
push
or
loopne
fcomp
jecxz
add
or
add
sub
and
leave
xlat
arpl
cli
test
push
mov
cmp
and
not
in
push
push
enter
jne
shr
add
mov
sbb
cmps
mov
mov
out
push
sub
scas
lahf
ds
scas
retf
xchg
sub
in
inc
arpl
sets
pop
mov
pop
ds
jle
add
scas
jmp
cld
fcmovnu
xchg
(bad)
aas
call
aam
cmp
push
shl
loop
pop
loopne
dec
clc
ficomp
cwde
pop
pusha
je
inc
add
add
js
jne
mov
sbb
mov
push
sub
add
or
and
push
cmp
(bad)
aam
mov
mov
dec
adc
mov
inc
sbb
ret
addr16
jmp
mov
push
cdq
cmp
or
shl
sub
add
(bad)
adc
in
inc
sbb
pop
add
cmp
cld
daa
add
add
cmp
pop
add
cmp
test
add
(bad)
ret
jle
sub
mov
adc
dec
mov
add
mov
sub
rol
cmp
mov
prefetcht1
dec
lds
loope
xrelease
mov
dec
jmp
or
mov
popf
or
test
mov
retf
jle
test
mov
sahf
idiv
std
ja
clc
or
or
je
adc
jmp
push
je
setge
xchg
adc
(bad)
clc
jmp
adc
repnz
test
jmp
test
inc
aad
push
or
add
dec
cs
cmc
cmp
ja
jo
call
xor
sub
lock
es
add
(bad)
clc
cmp
add
xchg
mov
dec
push
imul
add
add
and
call
jmp
sub
cli
pop
sub
pop
enter
push
aaa
cld
iret
repz
das
sti
mov
das
or
or
int
cmp
adc
and
jno
jg
fmul
repz
lds
aaa
inc
pop
pop
lods
xchg
cmp
pop
or
sar
daa
cs
retf
sbb
cmp
xor
cmp
jns
add
cmp
loopne
pop
mov
(bad)
jo
paddd
js
lahf
inc
add
cld
(bad)
clc
sti
or
dec
clc
push
pop
add
sar
add
add
ret
push
cmp
retf
pop
pop
cmps
stc
mov
cmp
adc
retf
retf
cmp
cmp
pop
mov
adc
pop
cmp
push
sub
pop
lea
or
adc
out
fild
sti
arpl
out
or
in
jmp
aas
ins
jns
sub
shl
xor
lgs
or
inc
or
test
pop
xchg
fmul
add
cmp
jg
inc
ins
and
mov
lods
sub
mov
push
jno
test
mov
mov
(bad)
adc
out
jmp
daa
sub
push
in
fsub
sbb
sahf
in
adc
push
xchg
lar
or
jo
iret
or
ja
mov
inc
bound
out
jmp
xor
jb
(bad)
stos
pop
add
je
retf
in
adc
adc
jle
jmp
pop
or
lods
pop
push
leave
inc
mov
clc
pop
pop
xchg
aaa
pop
aaa
daa
icebp
mov
jne
mov
and
nop
xchg
popa
es
sub
jecxz
jle
aas
xlat
lea
or
ins
int
push
movs
outs
fadd
ds
push
adc
sub
mov
add
jecxz
iret
and
fcomp
sbb
push
pop
xchg
sub
leave
adc
lea
cmp
xor
push
aad
arpl
cmp
or
push
push
call
add
dec
xor
cmp
adc
mov
(bad)
sbb
test
fdiv
cmp
jb
cmp
push
jmp
mov
ret
or
ret
inc
div
std
imul
cmp
push
push
cmp
or
jmp
pop
loop
jg
call
or
jg
in
fiadd
mov
or
ret
pop
cmp
sbb
or
mov
push
pop
sub
xor
sar
mov
sub
adc
or
sti
call
ss
es
out
push
lea
jae
sub
or
or
xor
mov
mov
clc
mov
xchg
push
sbb
inc
cld
sub
sbb
xor
push
arpl
loope
cmp
iret
sub
ret
mov
popa
jbe
out
add
xchg
or
push
pop
dec
dec
mov
bound
rcr
fist
inc
jge
in
sar
cmp
adc
mov
jae
and
ss
(bad)
pop
outs
dec
xor
sti
or
xor
inc
es
sbb
inc
xor
push
mov
mov
and
mov
sub
repz
sti
pop
dec
ins
jo
add
mov
shl
pop
mov
or
jb
cmps
icebp
cmp
add
in
adc
je
add
cmp
in
adc
(bad)
jno
add
ret
mov
js
nop
scas
mov
jns
push
mov
fild
fdiv
push
loope
fstp
inc
fs
fsubr
push
in
nop
mov
data16
cmps
adc
mov
js
add
or
loopne
pop
cmp
aas
pop
je
mov
fstp
fnstenv
fld
push
iret
or
push
xchg
push
stos
adc
add
jecxz
cdq
sub
mov
xor
and
mov
(bad)
xor
test
bound
sbb
jo
add
and
popf
mov
dec
or
movzx
cmp
popf
adc
xchg
or
inc
aaa
and
mov
cmps
(bad)
pop
in
sbb
jg
leave
jle
add
out
add
jne
jb
add
inc
sbb
and
fs
inc
add
add
dec
loop
and
adc
jp
add
ja
loopne
sbb
test
push
ins
adc
test
shr
fs
sbb
add
xor
add
mov
ins
inc
dec
mov
out
sbb
stos
aas
out
movs
adc
(bad)
inc
imul
inc
pop
cmp
dec
dec
sub
dec
and
sti
fstp
push
mov
add
test
nop
xor
cmp
loope
lods
jge
add
in
cmp
push
lahf
jnp
or
dec
dec
cmp
pop
sti
in
cs
pop
cmp
jne
adc
js
sbb
sub
add
inc
mov
inc
ror
repz
push
and
pop
mov
rcl
outs
data16
popa
jb
push
cli
xchg
pop
dec
outs
arpl
gs
adc
mov
cdq
mov
adc
mov
or
mov
outs
imul
and
sbb
mov
cmp
daa
mov
ror
or
pop
add
adc
add
add
push
jnp
pop
cmp
mov
js
dec
xchg
cmp
cmp
dec
or
xchg
add
add
cwde
jmp
push
stos
retf
jne
jns
mov
push
outs
repnz
push
sub
sub
int3
mov
xchg
xor
mov
cmp
addr16
sti
cmp
dec
cmp
add
add
cmp
and
fwait
cmps
xchg
or
int
push
ret
cld
in
je
mov
inc
push
add
js
nop
fst
push
out
dec
stos
lahf
scas
mov
call
addr16
ret
mov
movs
xlat
ret
dec
push
sar
push
call
pop
cmp
xor
dec
sub
push
mov
adc
pop
into
push
mov
test
or
cdq
push
lea
push
mov
or
rcl
ins
je
ret
clc
ret
sbb
xor
or
cmps
popf
fimul
sbb
push
push
pop
addr16
jmp
fcmovne
rol
or
add
ret
jmp
pop
inc
or
adc
jecxz
xor
dec
je
add
mov
pop
jo
xchg
mov
daa
cs
inc
add
push
ror
iret
dec
xchg
or
adc
dec
aad
dec
mov
bsf
loopne
push
sbb
adc
cmp
shl
cld
push
pushf
push
cmp
repz
add
push
inc
sub
leave
xlat
add
sub
mov
call
xchg
scas
mov
lea
pop
dec
std
sar
repz
cmp
sbb
ret
outs
cmps
xchg
je
adc
pop
jmp
mov
sub
and
out
pop
cmc
data16
clc
mov
ins
sbb
xor
iret
nop
sub
xchg
pop
ret
xor
loop
(bad)
imul
dec
fisttp
cmps
adc
pop
jns
inc
or
pop
repz
and
mov
cmp
dec
mov
mov
adc
sbb
xchg
dec
jne
dec
mov
push
cmp
fwait
jle
push
sbb
push
ret
pop
pop
idiv
popa
mov
dec
and
pop
push
jmp
test
mov
push
and
enter
add
push
nop
cmp
lock
jo
dec
jne
call
cmp
jae
add
mov
je
jg
(bad)
xchg
inc
push
aas
je
cmp
repnz
or
sbb
outs
aaa
jge
add
add
push
mov
ret
int
mov
push
inc
jecxz
xor
je
jmp
push
push
push
pop
xchg
jb
pop
mov
jg
add
sbb
inc
adc
adc
pop
add
pop
mov
ret
push
adc
adc
or
cli
cmp
lock
sub
add
dec
jl
mov
inc
je
stos
or
or
out
jmp
dec
sub
mov
lock
xor
into
ret
mov
ins
jmp
test
mov
das
jmp
adc
xchg
jmp
mov
cli
jns
sbb
sbb
or
and
dec
lds
test
add
add
mov
cmp
mov
call
add
jmp
stc
std
popf
icebp
mov
mov
mov
mov
jecxz
popa
xor
cmp
mov
add
test
or
push
sti
retf
mov
fiadd
outs
loopne
sbb
cmp
(bad)
jne
arpl
pop
pop
pop
xchg
je
jl
mov
or
pusha
mov
cmp
jle
sub
scas
mov
pop
in
ror
pop
aad
lock
pop
(bad)
pusha
xchg
sbb
xor
dec
xchg
mov
sub
jle
fisttp
push
pop
loope
pop
cmp
ins
add
mov
(bad)
push
cmp
sub
add
aas
mov
sub
and
pop
loop
adc
sbb
jmp
fstp
imul
and
xlat
pop
inc
mov
xchg
lock
cli
or
repnz
not
dec
fadd
sub
pop
pop
sub
sub
lahf
push
xlat
ins
push
(bad)
rol
dec
clc
pop
push
(bad)
out
(bad)
fnstcw
adc
add
add
mov
sbb
pop
retf
or
and
add
cmp
icebp
mov
jne
aaa
outs
push
fidiv
pop
in
push
xor
cmp
gs
jecxz
(bad)
jnp
jnp
mov
popf
push
lea
or
idiv
jne
dec
cmps
fcomip
pop
loop
aaa
add
push
inc
je
pop
adc
les
mov
push
xchg
dec
std
inc
pop
pop
sub
jmp
lock
adc
loope
inc
inc
jl
je
cmp
sub
sbb
lea
fucomi
hlt
(bad)
imul
leave
shr
je
sub
sub
push
push
add
add
inc
call
fincstp
fmul
loopne
add
stc
enter
sub
rol
out
ret
inc
mov
rcl
aas
mov
cmp
cli
or
or
xchg
lahf
cmp
ret
mov
adc
dec
jle
and
sbb
add
cld
inc
mov
mov
pushf
test
daa
sub
test
sti
iret
xchg
sub
sub
pop
jecxz
add
leave
sbb
xor
cs
jbe
imul
cmp
mov
xchg
mov
mov
bound
cmp
xlat
fadd
in
nop
lods
outs
xor
xchg
push
or
push
push
int3
ud0
dec
sbb
ror
mov
push
pop
test
enter
mov
cmp
(bad)
(bad)
dec
and
daa
(bad)
retf
into
pop
inc
test
xchg
clc
js
aas
sbb
pop
(bad)
mov
addr16
(bad)
(bad)
inc
inc
xchg
and
cld
gs
sahf
mov
sub
inc
aad
iret
dec
(bad)
(bad)
fistp
js
inc
mov
stos
mov
cmp
or
mov
pop
out
sub
(bad)
(bad)
jmp
imul
(bad)
div
jl
xor
cmp
call
mov
(bad)
(bad)
(bad)
call
push
inc
mov
push
sbb
sar
repnz
test
nop
(bad)
(bad)
call
nop
inc
pop
stos
clc
scas
adc
(bad)
inc
pop
pushf
mov
pop
pushf
mov
fs
aam
(bad)
(bad)
push
imul
loope
jp
iret
inc
bound
ds
push
cmps
scas
mov
pop
or
(bad)
(bad)
(bad)
inc
dec
dec
in
xchg
cmp
xor
in
cmp
sahf
xchg
pop
cmps
lock
(bad)
call
aaa
popa
mov
fsub
addr16
repz
mov
sub
and
into
clc
inc
and
outs
bound
xor
mov
mov
add
pusha
dec
aaa
arpl
stc
data16
hlt
mov
mov
mov
pop
cmps
mov
clc
push
jb
dec
inc
mov
cs
sub
mov
xchg
push
or
cmp
add
mul
in
inc
inc
add
add
cld
es
jbe
add
or
addr16
xchg
add
mov
mov
sub
outs
sbb
and
push
adc
and
dec
xchg
inc
inc
js
xchg
xchg
cmp
xor
fdivr
mov
jge
mov
push
aad
test
ss
bound
jbe
loop
aaa
jmp
push
mov
mov
shl
mov
test
jne
mov
ret
cmp
not
xor
mov
and
and
pop
inc
arpl
mov
mov
sbb
xchg
pop
mov
and
mov
xchg
rol
xor
push
jge
ins
mov
add
sahf
rcl
pop
mov
and
movs
push
add
xor
cmp
mov
sbb
js
jo
fs
inc
ins
push
push
pusha
pop
pop
leave
inc
push
sbb
mov
or
enter
movs
or
enter
cwde
xor
and
and
and
je
or
enter
fs
enter
pop
xor
and
and
and
xor
or
enter
and
xor
and
sbb
enter
adc
and
inc
push
cmp
cld
mov
hlt
push
sbb
in
call
inc
loopne
fsub
push
aam
int3
test
(bad)
rcr
pop
sub
mov
push
mov
test
inc
push
sbb
fs
xchg
nop
add
mov
bsf
in
nop
inc
push
sbb
in
inc
push
sbb
aam
sbb
nop
ror
pushf
mov
xor
and
and
and
jl
or
enter
ins
or
enter
pusha
xor
and
and
and
cmp
or
enter
sub
xor
and
and
xor
and
and
xchg
or
add
mov
(bad)
fist
rol
loop
or
ret
shr
ret
push
or
or
mov
push
or
ins
call
and
mov
add
push
dec
and
ret
addr16
iret
out
and
sbb
nop
dec
ds
in
(bad)
in
pop
xchg
ret
into
nop
les
pop
inc
and
in
and
cli
jmp
enter
or
popa
jb
push
add
mov
xor
add
js
scas
les
fisttp
dec
mov
arpl
cdq
fsubr
fs
lahf
mov
mov
pop
push
pop
push
inc
inc
(bad)
fcomp
pop
stc
nop
xor
(bad)
adc
lahf
outs
push
or
dec
jne
dec
dec
gs
fwait
jns
inc
int
push
lahf
test
outs
pop
sub
or
outs
mov
rcl
ror
pop
mov
fwait
xchg
addr16
xchg
ds
mov
pop
or
imul
outs
nop
adc
xchg
push
jg
push
popa
outs
addr16
mov
in
sub
dec
outs
jbe
jb
ins
outs
ja
pop
xor
add
addr16
fimul
jle
iret
dec
popa
je
xor
enter
les
and
jbe
ins
imul
loop
or
push
sbb
mov
call
das
popa
xchg
mov
(bad)
(bad)
xor
pop
test
jge
outs
fs
nop
adc
test
sbb
cmps
mov
ds
popa
jae
repnz
lahf
and
xchg
loope
or
cmps
jo
mov
adc
pshufw
popf
jae
push
lahf
ins
popa
pop
dec
or
test
les
lods
mov
inc
jg
jb
ins
dec
pop
mov
xor
adc
jecxz
push
inc
push
je
arpl
nop
pusha
lahf
loope
sub
pusha
or
jno
div
jne
inc
ja
xchg
lds
push
pop
jg
xchg
data16
cld
lahf
cld
adc
inc
inc
js
outs
pop
das
sub
mov
dec
and
popa
fs
push
and
mov
push
cdq
jb
push
jnp
sub
hlt
mov
add
inc
lahf
inc
sub
push
test
inc
data16
je
push
imul
fs
test
fs
inc
push
hlt
cmc
not
clc
stc
inc
push
sbb
cld
push
sbb
(bad)
jmp
sbb
loope
jecxz
nop
inc
push
in
out
inc
push
sbb
call
fs
in
out
out
rcr
fs
inc
rcl
shl
push
aam
(bad)
nop
inc
push
sbb
fcomp
inc
push
sbb
fadd
sbb
(bad)
rcr
nop
inc
rol
fs
inc
push
(bad)
(bad)
inc
push
sbb
enter
sbb
int3
push
sbb
into
iret
mov
fs
inc
mov
mov
nop
inc
push
mov
mov
inc
push
sbb
sbb
mov
mov
fs
inc
mov
popa
xchg
adc
repz
sti
sbb
adc
push
retf
mov
mov
lock
mov
int3
pop
ret
xchg
push
and
aas
inc
mov
mov
mov
adc
aaa
mov
sub
mov
push
(bad)
mov
mov
inc
std
(bad)
mov
add
mov
inc
inc
dec
xchg
jmp
leave
rcr
inc
pop
add
cwde
enter
lea
aaa
mov
cmp
jbe
jl
aas
arpl
leave
repz
je
movzx
pop
push
dec
mov
dec
pop
push
push
popa
sub
movs
(bad)
out
or
pop
(bad)
repz
pop
(bad)
(bad)
out
and
sti
je
movs
xor
mov
rcr
xor
call
retf
xor
test
xlat
in
test
pop
movnti
fisttp
bound
ret
daa
sbb
inc
xor
inc
push
add
push
neg
fistp
outs
aas
cmp
jl
cmp
jbe
adc
(bad)
call
aaa
clc
imul
retf
inc
push
adc
sub
pop
pop
xlat
loopne
lods
loop
and
push
xchg
xor
push
retf
push
jo
and
ins
mov
sti
add
push
cmp
jne
ja
sti
jae
ds
push
jmp
sub
adc
add
lods
in
jmp
adc
mov
sub
cmp
aad
jg
mov
jnp
mov
jo
sub
cld
mov
mov
mov
(bad)
(bad)
pop
in
daa
mov
sub
mov
fwait
xor
outs
lods
mov
call
add
imul
mov
push
cli
add
ret
ins
shr
pop
add
cmp
add
and
xchg
outs
pop
lock
mov
adc
mov
mov
add
sub
xchg
jne
mov
das
push
adc
fldenv
out
sbb
and
clc
mov
rol
lock
aam
and
inc
hlt
or
xor
pop
pop
and
arpl
xchg
push
int3
inc
aaa
push
mov
ficom
mov
adc
add
lock
rcl
test
and
and
adc
push
inc
inc
or
jns
sub
add
or
dec
(bad)
push
mov
xchg
cmp
repnz
push
dec
adc
cmp
pop
sbb
outs
sub
adc
dec
(bad)
mov
xor
jbe
mov
push
lods
dec
cmp
sbb
mov
in
cwde
idiv
push
enter
out
xor
mov
cld
or
inc
outs
pop
push
inc
setne
pop
pop
das
sub
pop
iret
dec
xor
(bad)
into
in
mov
inc
jns
adc
test
jnp
std
inc
push
jmp
xor
inc
jmp
push
inc
sub
sbb
outs
repz
adc
in
stos
out
inc
dec
ret
cmp
dec
jg
push
les
or
push
inc
mov
pop
or
or
out
fld
sti
jg
not
and
mov
aad
fist
pop
cld
mov
je
pop
fsubr
je
sbb
jmp
pop
pop
ds
pushf
pop
adc
cli
cmp
mov
neg
sbb
xlat
xor
bound
inc
dec
lock
cdq
movups
or
icebp
fbld
xchg
je
add
dec
sbb
shl
and
inc
or
cwde
pop
call
sub
sbb
xchg
pop
inc
lds
fs
jno
and
dec
jg
cmps
cmp
(bad)
adc
mov
cld
shl
or
inc
(bad)
mov
or
clc
add
je
mov
mov
dec
or
iret
in
sub
push
jb
jl
jo
int
lods
pop
outs
add
pop
cmp
cmp
lock
nop
sub
and
popa
in
inc
sbb
dec
cmp
jl
pcmpeqd
(bad)
push
cmp
push
in
jmp
fst
pusha
dec
jne
jne
push
outs
lock
or
mov
adc
pop
add
mov
test
in
add
dec
mov
mov
es
stc
mov
bswap
adc
add
add
inc
ss
out
xor
jle
xor
mov
jne
push
jg
out
(bad)
daa
mov
cs
(bad)
cmc
mov
dec
push
pop
push
and
dec
mov
or
push
test
sbb
aaa
sti
(bad)
xor
mov
aad
and
movzx
(bad)
jmp
jmp
or
mov
ins
dec
fstp
fwait
iret
push
adc
in
add
push
jge
mov
aas
mov
loop
neg
cli
imul
push
hlt
frstor
stos
sti
outs
scas
xlat
push
add
test
test
jecxz
sti
mov
mov
or
jl
xor
fucomi
push
push
cmps
pop
lock
cmps
sahf
add
mov
mov
out
sbb
and
loop
or
adc
or
sti
shl
inc
div
cli
pusha
je
out
cmps
jmp
pop
xor
mov
cmp
inc
dec
loopne
stos
fsubp
ret
sub
dec
sub
cs
inc
cs
mov
sbb
inc
inc
(bad)
lods
jecxz
out
(bad)
pop
mov
mov
(bad)
das
retf
aas
pop
test
retf
(bad)
int3
aam
sub
sar
(bad)
call
std
and
add
dec
(bad)
add
sub
pop
cmp
lahf
cmp
pop
pop
retf
mov
mov
fwait
mov
pop
pop
adc
sbb
ret
cmps
xlat
mov
xor
or
inc
push
xor
mov
mov
cmps
mov
neg
jmp
push
push
push
or
adc
not
pop
mov
adc
mov
jo
cmp
inc
into
out
jbe
jmp
dec
sti
mov
mov
pop
sub
jbe
add
lea
(bad)
lods
les
mov
gs
lahf
rcr
add
jmp
popa
mov
mov
cmp
mov
dec
outs
pop
dec
add
cmp
mov
lock
add
adc
push
inc
pop
je
or
or
ss
pop
pushf
adc
inc
add
fdivr
clc
cmp
jle
mov
cvtps2pd
dec
pop
cwde
cmp
loope
mov
ins
cmc
mov
mov
mov
cmp
add
and
sbb
mov
adc
ins
fwait
sub
or
cmps
outs
ret
ins
call
pop
mov
jp
rcl
stos
cmp
add
sub
jmp
clc
add
and
lods
pop
and
shr
popa
movs
jge
imul
xchg
outs
fisttp
out
mov
sbb
(bad)
add
cmp
div
shl
and
lods
jmp
adc
mov
mov
sub
lock
cmp
dec
pop
mov
jae
sahf
(bad)
(bad)
fcmovnu
cmp
or
retf
shr
movs
xchg
sti
mov
pop
mov
rep
sbb
hlt
ficomp
inc
imul
adc
pop
mov
(bad)
adc
sub
xor
cmp
imul
fisub
movzx
add
es
pop
push
push
pop
add
stos
int3
cmp
ja
dec
jnp
jl
add
sub
ret
sbb
je
dec
fsubr
push
aam
shl
push
pop
pop
and
(bad)
jmp
lea
mov
fwait
inc
sub
div
and
jbe
xor
push
mov
js
pop
mov
test
mov
call
push
icebp
pop
mov
mov
dec
fsubr
shl
test
stc
inc
je
or
push
pop
jne
mov
les
test
out
mov
jge
std
sub
ret
ret
(bad)
test
cmp
add
lods
push
(bad)
jmp
mov
imul
test
jne
or
ret
mov
push
cld
push
les
repnz
test
xchg
mov
test
icebp
jne
jmp
xor
inc
push
scas
test
mov
jmp
mov
mov
cld
or
aaa
outs
lock
imul
xchg
fldpi
or
or
je
test
cmp
ja
or
adc
aas
es
pop
cs
loopne
mov
arpl
push
in
mov
sub
data16
(bad)
mov
add
in
inc
je
mov
or
add
mov
das
inc
je
mov
dec
je
dec
jnp
dec
clc
push
repz
mov
jbe
mov
fdiv
jne
test
clc
fwait
lock
adc
mov
mov
mov
inc
sub
adc
inc
xor
shl
bound
xor
mov
inc
loopne
add
xor
push
sbb
out
scas
sbb
add
sbb
add
or
push
push
mov
(bad)
enter
lock
lock
scas
jg
lock
sar
xor
movs
(bad)
std
sub
cmp
jge
aaa
call
mov
mov
cmc
jmp
jg
cld
fild
cs
cmp
jl
jmp
add
adc
pop
int
add
(bad)
lahf
cmp
push
lea
add
mov
dec
nop
mov
mov
in
pop
xor
std
rol
inc
pusha
fadd
pop
sbb
(bad)
or
or
cmp
mov
or
adc
fcmovu
sbb
div
lahf
xor
pop
xchg
jmp
adc
xchg
cs
mov
mov
clc
sbb
or
cmp
cld
add
dec
stc
inc
mov
pop
sbb
pop
imul
shr
jb
(bad)
shl
iret
ret
call
ja
or
fild
sbb
fstp
fwait
test
mov
pop
mov
fwait
cmp
mov
xlat
(bad)
in
add
popf
int3
daa
hlt
hlt
retf
or
add
jnp
mov
iret
add
push
add
push
dec
xchg
jle
inc
adc
or
add
fdivr
mov
mov
out
in
adc
push
fldcw
or
idiv
mov
pop
in
and
jecxz
cmp
popa
xchg
dec
fwait
mov
and
call
push
test
enter
mov
add
inc
ret
mov
cmp
mov
(bad)
xor
or
stc
sbb
fisub
adc
add
outs
mov
and
std
fisttp
cmc
jg
fmul
ins
inc
jecxz
add
lea
mov
add
add
in
fdiv
and
or
jb
sti
inc
push
sti
mov
cmp
ja
adc
push
cmp
add
add
inc
dec
jne
sub
push
mov
xor
shl
or
xlat
push
add
sub
aas
pop
add
popa
adc
cmp
mov
shl
lock
jae
std
rol
mov
lods
jge
cmp
push
inc
and
arpl
test
pop
std
jg
mov
add
rol
mov
xlat
cmp
loope
iret
jl
sub
and
loop
sar
not
hlt
loope
mov
outs
mov
jne
jmp
add
mov
call
mov
neg
add
cmp
sbb
pop
inc
ret
dec
(bad)
loope
jbe
mov
fwait
dec
dec
sbb
pop
ror
sbb
fnstcw
sbb
inc
jmp
xor
pop
or
call
pop
adc
jb
and
xor
cld
mov
adc
dec
ret
dec
call
out
dec
pop
loop
push
or
add
maskmovq
test
ret
push
adc
push
jp
sbb
adc
arpl
cmp
and
pop
add
fincstp
jno
adc
test
imul
daa
sbb
test
not
sub
cdq
jp
movs
mov
cmp
popa
ficomp
add
scas
ret
push
xchg
and
lea
mov
mov
add
or
xchg
mov
shr
pop
aas
cmp
jbe
fneni(8087
adc
add
loopne
call
loope
call
mov
pop
jae
dec
cdq
mov
fwait
dec
add
mov
jle
sbb
add
adc
add
inc
cmps
mov
sar
dec
sti
je
adc
inc
or
and
ins
push
cmp
jne
adc
fnstenv
or
push
lea
or
xchg
(bad)
out
ins
mov
inc
in
add
jecxz
mov
in
jge
or
jge
sbb
or
mov
sbb
fimul
test
or
outs
add
in
adc
nop
cmp
dec
cld
mov
sub
push
dec
push
xor
es
push
sahf
pop
jno
mov
jl
aam
mov
push
rol
clc
add
scas
dec
jne
movs
in
jo
xor
or
ror
bsr
ins
cwde
add
(bad)
xchg
lock
cmp
push
das
lds
cli
sbb
xchg
mov
clc
xlat
aas
pop
add
pushf
retf
cmp
rcl
hlt
daa
push
mov
retf
stc
and
mov
xor
in
cmp
in
or
imul
ret
dec
xlat
in
retf
ds
push
enter
inc
jg
aam
sub
ret
inc
jmp
repnz
jo
xor
push
shl
sbb
add
push
or
push
add
sub
add
adc
out
jns
xor
enter
jns
jns
fmul
repnz
in
add
and
push
pusha
mov
mov
inc
mov
push
pop
jecxz
lods
jnp
add
sti
call
shr
bt
not
pushf
ins
ds
dec
out
or
pop
daa
add
sub
jae
push
mov
or
dec
jne
mov
in
pop
dec
fscale
xchg
arpl
imul
xchg
mov
icebp
test
inc
or
or
or
mov
stc
add
pop
or
or
or
movs
jle
push
and
jb
pop
xchg
xchg
mov
pop
mov
int
cmp
jbe
fs
pop
or
add
jl
and
repnz
adc
push
jo
pop
fisttp
mov
dec
pop
jl
push
lea
hlt
and
inc
push
cmp
sahf
in
fidivr
xchg
cmp
pusha
hlt
dec
push
inc
lock
xor
jmp
sbb
mov
inc
jecxz
lock
mov
xor
movs
std
(bad)
mov
leave
mov
je
add
sub
push
mov
ins
sbb
outs
loopne
push
inc
into
mov
fsub
fs
fcom
pop
jp
call
xor
mov
or
clc
js
pop
inc
jmp
mov
in
dec
jle
pop
or
arpl
add
cld
pop
sbb
pop
sub
je
pop
je
jmp
cmp
dec
add
cmps
shr
nop
ja
fs
scas
sub
mov
jns
jne
xchg
jmp
movs
idiv
daa
loope
add
xchg
mov
jmp
mov
dec
push
mov
or
pop
pusha
imul
xchg
pop
or
push
pop
add
neg
mov
push
cmp
popa
out
jno
and
jne
and
xor
das
jno
mov
sub
jmp
pop
jp
cmp
loope
or
(bad)
and
pop
or
mov
adc
xor
jae
imul
jbe
mov
nop
add
call
enter
mov
enter
in
rcl
and
test
pop
fimul
sbb
out
call
test
mov
mov
popf
xchg
dec
aad
and
jne
loopne
adc
mov
jmp
jmp
shl
add
jecxz
adc
cmp
int3
in
sbb
push
pop
mov
add
sub
je
stc
push
mov
and
arpl
mov
inc
dec
das
data16
retf
push
dec
inc
or
psraw
test
push
add
jecxz
mov
mov
mov
inc
ret
xor
or
mov
(bad)
js
xchg
sbb
mov
scas
mov
inc
mov
fwait
jbe
test
jp
xor
xchg
and
jg
and
aaa
cmp
jg
xchg
or
xchg
pop
or
jmp
xor
jnp
mov
das
mov
rcr
mov
jmp
add
stos
mov
xor
sub
and
ds
pop
add
int
jae
push
mov
mov
stos
add
pop
mov
sbb
xor
mov
test
je
pop
jnp
or
ins
loope
dec
or
sub
loop
adc
mov
add
add
ret
lahf
add
jp
test
jl
(bad)
mov
(bad)
cmp
sbb
jl
(bad)
mov
loop
inc
notrack
sub
je
dec
je
(bad)
(bad)
or
sub
je
jmp
mov
jmp
push
push
in
arpl
jmp
inc
mov
jle
fsubr
(bad)
and
push
(bad)
jmp
mov
aam
or
imul
jl
inc
xlat
rol
and
inc
mov
outs
mov
or
fsub
fcom
mov
rol
pop
ins
xchg
call
or
and
je
jne
push
sbb
or
out
dec
jmp
sub
cmp
jg
push
shl
ret
add
shr
rol
add
cmp
js
hlt
mov
neg
push
lods
dec
cld
gs
push
mov
in
(bad)
test
cli
cld
call
nop
jmp
cld
les
rol
cmp
mov
in
or
addr16
jmp
enter
sub
xchg
ins
adc
add
jge
test
add
repz
in
lock
(bad)
pusha
fisttp
mov
mov
jmp
test
sahf
cdq
ins
add
or
or
push
repnz
iret
xchg
add
popf
mov
sub
jb
sbb
cs
mov
std
xchg
mov
inc
xchg
repnz
adc
stos
sbb
lock
mov
lock
jnp
pop
pop
mov
mov
rcr
push
mov
mov
jmp
xor
jge
add
pop
fadd
stos
mov
jge
adc
adc
ret
(bad)
popf
and
jmp
movs
sub
pop
fwait
adc
mov
ja
adc
dec
fxch
in
jb
xor
inc
push
jne
shl
jno
cmp
in
cwde
test
das
nop
cdq
adc
sbb
dec
xchg
jne
or
push
out
mov
jmp
(bad)
xchg
pop
das
mov
fsubr
mov
dec
pop
scas
inc
jg
gs
add
movs
stos
dec
fild
push
fcmovu
mov
xor
and
and
push
(bad)
push
push
push
call
push
add
adc
sub
or
cmp
add
mov
or
pop
push
adc
inc
aam
or
pushf
dec
enter
jge
lods
dec
or
add
add
or
cmp
inc
add
add
push
pusha
sbb
push
mov
int
push
or
ret
and
mov
pop
inc
cmp
push
xchg
aas
fcom
loopne
ins
and
push
push
xchg
add
aad
sub
in
call
or
stc
jge
sbb
jge
daa
dec
jl
cmp
and
loopne
pop
loopne
sub
mov
ffree
fcomp
jg
fistp
sahf
jb
sbb
iret
fstp
fwait
jmp
push
gs
loopne
ins
push
dec
sbb
push
mov
fisubr
add
push
pop
inc
js
add
shr
ror
jmp
repnz
xchg
repz
add
sub
(bad)
icebp
sub
push
mov
push
sub
pusha
cmc
jmp
adc
mov
out
sbb
pop
push
dec
cmp
arpl
leave
push
xchg
sub
shl
inc
adc
pop
movs
sub
xor
mov
xchg
and
mul
pop
hlt
mov
xchg
mov
iret
pop
mov
stos
add
push
push
push
addr16
mov
dec
movs
and
jb
dec
popa
adc
inc
add
adc
cmp
inc
mov
movs
sti
or
movs
and
(bad)
pusha
add
sub
push
mov
inc
outs
add
shl
inc
int3
xor
lfs
loope
jne
sti
push
movs
in
xchg
out
mov
or
pop
das
add
xchg
out
xchg
ds
add
inc
shl
jo
scas
fcmovb
ins
neg
mov
jmp
mov
mov
push
xor
dec
or
inc
cmp
repnz
sbb
cmp
sbb
(bad)
es
cmp
push
mov
sar
(bad)
pop
add
xor
enter
ficom
je
in
imul
xchg
retf
push
nop
sbb
das
imul
xor
mov
push
and
or
push
loopne
dec
jb
push
adc
mov
retf
scas
push
jmp
mov
sub
je
sub
je
mov
pop
sbb
cmp
cwde
movs
cmp
sar
repz
cs
das
stos
sbb
pop
and
(bad)
sbb
add
cdq
gs
lock
push
mov
push
fucomip
sbb
lea
dec
mov
jle
ror
mov
dec
add
dec
xchg
and
outs
mov
push
fwait
pop
movs
pop
sahf
loopne
aad
je
jne
xor
sub
jle
in
lahf
adc
mov
clc
cmps
addr16
or
add
jo
out
add
push
sub
scas
leave
jno
and
gs
inc
jle
push
add
pop
fwait
sub
inc
mov
std
arpl
push
lock
pop
fdiv
cmp
sbb
mov
xlat
in
(bad)
jp
mov
cmps
pop
push
mov
es
push
rcl
inc
aam
das
mov
sub
in
sub
xchg
rcl
lock
or
pop
cmp
fadd
cmp
adc
cmp
addr16
rcl
call
test
xor
and
add
(bad)
push
fs
and
scas
or
adc
mov
jmp
mov
xor
pmuludq
sbb
sub
cmp
fs
lods
lock
in
mov
inc
pop
xor
das
je
out
mov
fs
enter
lar
pop
jo
jb
das
xchg
push
and
(bad)
push
lock
sbb
imul
xchg
fstp
int
push
cmp
mov
shr
add
shl
sti
cld
sbb
test
retf
(bad)
sar
push
xchg
dec
jo
mov
lods
addr16
sbb
out
std
(bad)
ins
mov
dec
out
jo
aaa
mov
lods
pop
enter
movs
sti
sub
sar
jmp
sub
in
fist
pop
sar
mov
inc
pop
adc
cwde
add
push
mul
lock
out
push
call
sbb
inc
lods
lods
and
fcmovnu
push
or
and
test
bound
shr
and
inc
add
push
sbb
or
out
int
jnp
aam
loopne
sbb
lods
add
xor
push
and
mov
fstp
pop
mov
sar
cmp
enter
cld
push
or
loopne
lea
int3
dec
(bad)
sub
imul
test
add
push
pop
mov
mov
sbb
xor
mov
adc
mov
scas
lods
pop
outs
jo
dec
push
rcl
xor
adc
mov
push
das
movs
fwait
cmp
adc
pushf
mov
or
sub
imul
cmp
imul
fcmovnu
and
or
nop
fidiv
or
inc
ss
sahf
xchg
imul
ret
sbb
aas
mov
dec
leave
and
movs
sahf
jmp
push
ret
mov
jl
test
imul
sbb
dec
cli
ins
cmc
cmp
sbb
ret
sbb
rcl
cli
iret
push
or
or
arpl
dec
sub
shr
in
and
mov
cmp
jg
and
cmp
pop
mov
fs
inc
pop
inc
push
pusha
xchg
pop
fadd
or
jl
js
or
and
outs
inc
imul
push
inc
or
jmp
push
pop
dec
repz
cli
lahf
hlt
pop
dec
xchg
or
sbb
fst
cld
(bad)
fisub
add
adc
mov
std
imul
and
add
or
xor
(bad)
xor
lock
cs
int3
pop
pop
loopne
add
mov
or
fwait
or
cmp
lods
push
ror
push
jo
mov
or
jge
mov
dec
repz
clc
in
xor
ror
adc
inc
xchg
inc
mov
sub
mov
(bad)
sub
cmp
aas
arpl
repnz
or
push
pushf
nop
call
gs
out
jno
pop
dec
enter
cmp
je
jmp
inc
push
stc
inc
xor
inc
xor
jle
jmp
and
ret
mov
retf
mov
add
add
mov
retf
mov
or
push
push
movs
xor
test
pusha
push
pop
push
cdq
mov
inc
gs
adc
mov
or
adc
sbb
shl
pop
cld
cmp
push
xor
mov
repnz
cmp
push
mov
push
jge
add
in
jo
int3
test
mov
in
aaa
xchg
pop
jns
pusha
fs
dec
push
test
fisttp
or
popa
mov
outs
enter
shl
mov
enter
iret
int3
mov
push
jo
add
xchg
mov
xor
int3
into
ins
sbb
jge
mov
pushf
mov
jb
mov
add
push
imul
imul
add
in
ret
(bad)
out
lock
mov
movs
cld
add
add
popf
or
mov
lods
or
lea
xor
inc
xchg
sbb
or
lods
jmp
adc
lock
add
cmp
and
cmp
add
jo
in
cmps
or
mov
push
inc
lock
bound
clc
or
mov
cmp
adc
lods
cmp
inc
inc
mov
test
shl
adc
adc
std
add
or
or
adc
gs
or
ins
loopne
dec
and
inc
mov
adc
cmp
nop
jo
clc
sub
ins
jmp
mov
add
pop
ins
aaa
cwde
mov
or
mov
ror
xor
les
enter
mov
adc
add
fwait
mov
adc
jmp
cmp
icebp
les
mov
xchg
shl
adc
pop
adc
sbb
push
pusha
aad
sti
in
sbb
xlat
(bad)
dec
add
in
fdiv
leave
cmp
daa
cmc
shl
jmp
addr16
shr
jle
push
mov
dec
addr16
fsubr
rol
or
mov
arpl
dec
repz
and
sar
jl
mov
and
inc
inc
sbb
or
xor
xor
mov
lea
xor
jmp
inc
mov
inc
dec
fimul
loope
pusha
ins
sti
push
push
add
or
sbb
mov
pop
dec
and
movs
inc
leave
nop
(bad)
cwde
pusha
xchg
aas
fstp
imul
movs
in
add
sub
add
pop
add
mov
jns
pop
xchg
or
or
mov
test
fs
cs
or
add
int
mov
scas
mov
mov
scas
xor
cmp
sub
xor
or
sub
inc
mov
popa
mov
psadbw
iret
dec
or
in
je
cmp
xor
sbb
in
int3
(bad)
retf
ins
cdq
pop
aad
xchg
xor
rol
dec
xchg
jge
xor
xchg
cwde
mov
retf
add
pop
xchg
scas
push
push
jg
sub
xor
lea
jle
test
or
sar
cli
jle
sub
loope
fcmovu
xor
nop
or
aad
inc
test
lock
daa
shl
add
(bad)
mov
jno
inc
sub
xor
dec
(bad)
ja
je
add
inc
mov
fdivr
call
icebp
loopne
ins
dec
mov
or
iret
or
push
sti
stos
or
cmc
mov
xchg
mov
push
les
mov
data16
add
(bad)
or
cli
or
push
xor
mov
adc
pushf
add
dec
fcomp
and
pop
xor
push
inc
mov
mov
pop
(bad)
adc
repnz
or
inc
cmps
test
jne
rcr
push
add
imul
test
in
in
dec
sbb
retf
lock
fstp
daa
xchg
call
outs
mov
and
and
pop
or
std
mov
mov
stos
es
movs
fst
or
dec
and
sbb
loope
mov
loopne
ret
adc
or
les
dec
jmp
push
les
add
xor
shl
pushf
push
dec
ror
shl
sbb
shl
pop
clc
push
call
dec
loopne
fdivr
imul
imul
cmps
imul
shl
in
sbb
dec
inc
cmp
pop
xor
or
mul
adc
daa
loop
dec
add
aas
adc
inc
dec
inc
dec
(bad)
or
pop
xchg
into
outs
pop
pop
scas
mov
inc
fdivr
adc
jle
or
movsx
mov
add
sbb
js
mov
mov
fistp
push
pop
sub
lea
inc
lods
dec
rep
jmp
lea
movzx
cmp
outs
pop
stc
je
add
or
mov
add
add
fstp
jnp
xor
or
or
stos
cmp
inc
scas
dec
or
add
loope
add
adc
inc
or
std
xchg
dec
in
sar
dec
or
pop
cmp
jl
or
jg
(bad)
cli
cmc
dec
stos
jmp
pop
rep
jge
xor
cmps
inc
mov
loop
clc
fidivr
sti
push
adc
stos
sbb
inc
clc
push
or
in
sbb
ret
pop
imul
or
mov
and
dec
xor
add
add
inc
mov
mov
push
in
stos
or
shr
or
cmps
cmovge
(bad)
in
popa
mov
stos
xchg
adc
call
sub
jg
rcl
in
(bad)
jmp
cmp
xchg
sub
movs
cmp
jb
mov
push
ret
jmp
popf
inc
adc
add
ror
div
mov
inc
cmp
add
jne
mov
adc
xor
jmp
dec
je
push
loopne
in
inc
jne
push
dec
jne
ret
lea
xchg
mov
cmp
add
fnstenv
mov
add
lea
mov
je
push
push
cmp
call
sub
pop
or
lock
outs
sahf
cdq
popf
loope
pop
inc
loop
ret
mov
hlt
cld
inc
int3
movs
add
in
sti
pop
ret
and
inc
add
and
and
adc
and
sub
ins
fcomip
sub
xor
sub
scas
(bad)
sbb
and
sub
sub
in
or
sub
sub
sub
(bad)
cwde
dec
xchg
inc
pop
fld
or
pop
adc
inc
pop
or
popw
std
dec
out
add
jmp
inc
or
and
sti
adc
jbe
mov
add
ret
hlt
inc
push
les
cmc
pushf
adc
mov
jp
mov
and
ins
(bad)
out
je
or
je
into
jne
adc
and
daa
lock
pushf
inc
jmp
xor
push
das
ror
push
mov
lock
in
or
cmc
sar
pop
imul
and
and
int3
call
loop
mov
push
add
inc
sbb
hlt
inc
retf
add
jg
cmp
je
xor
jmp
pop
mov
mov
(bad)
(bad)
mov
mov
add
es
je
cmp
je
cmp
je
neg
mov
mov
je
cmp
je
xchg
je
mov
jmp
aas
mov
rcl
mov
jmp
fcmovnu
clc
pop
(bad)
jne
mov
jmp
add
mov
add
mov
sub
pusha
out
div
add
in
imul
out
sub
leave
mov
push
ins
jno
in
jge
pop
ret
push
pop
es
jge
call
jg
push
cmp
jae
fdivr
leave
jmp
pop
ret
or
xor
shr
daa
and
out
inc
shl
push
inc
pop
lock
inc
aam
jl
int
(bad)
(bad)
out
push
movs
sub
xchg
es
std
or
outs
dec
jl
dec
inc
stos
mov
push
cwde
add
sbb
cld
sub
inc
ret
call
fcom
sbb
popf
dec
jne
jmp
inc
rcr
cmp
fadd
inc
push
inc
cmp
out
hlt
ins
or
loopne
xor
fdiv
shr
imul
sub
and
movzx
sub
jne
jge
addr16
mov
movs
sbb
jmp
mov
or
or
sbb
and
call
pop
hlt
cmp
inc
mov
inc
mov
mov
sub
dec
mov
(bad)
jne
clc
adc
mov
cmp
psubusw
or
cld
fld
pop
xor
fstp
neg
(bad)
sub
pop
sub
jne
lea
mov
ss
mov
popf
shr
and
add
scas
shl
cmps
cmps
jmp
shr
jns
adc
or
or
call
jae
cmp
xor
or
dec
pop
ja
aas
and
ja
jmp
data16
dec
xor
mov
push
and
pop
inc
and
add
mov
shr
mov
mov
push
pop
cmp
sub
or
je
sbb
pop
mov
fisttp
std
or
int3
(bad)
in
add
pop
mov
xchg
inc
sub
mov
loopne
jae
dec
add
sbb
retf
lock
fild
add
pop
mov
int
xor
and
fisttp
push
call
mov
push
fldenv
dec
pop
dec
jne
jmp
mov
add
stos
aas
and
std
jecxz
inc
or
jmp
mov
push
pop
pop
cmp
div
xchg
mov
mov
sahf
sub
mov
fbstp
jge
fclex
fldcw
pusha
movs
jp
ds
call
gs
jnp
test
xor
pop
mov
and
sub
adc
add
mov
shr
mov
mov
jle
inc
mov
sahf
add
loopne
bound
jg
fistp
jmp
fstp
fstsw
test
push
push
cli
and
adc
xor
in
lods
or
cmp
nop
sub
add
jae
fimul
pop
sti
fiadd
push
xor
fs
daa
push
push
inc
outs
cmps
lock
ror
pop
cmp
add
inc
add
imul
jne
fwait
movs
fwait
mov
pop
mov
inc
aam
mov
das
cmp
sbb
pop
sbb
xchg
sub
inc
push
nop
jo
and
and
lock
jle
mov
in
adc
xchg
dec
xor
in
fmul
or
in
enter
repnz
fist
mov
jae
arpl
sub
stos
ins
fisttp
sub
in
xchg
xchg
cdq
mov
ret
push
test
or
mov
jl
sub
dec
pop
out
outs
outs
and
pop
add
enter
or
mov
xor
mov
lods
and
rcr
popf
rol
pushf
xchg
mov
mov
cdq
inc
repnz
movs
sbb
fsub
mov
inc
push
cmps
test
nop
inc
push
sbb
sbb
scas
pop
xor
inc
das
lods
loopne
add
inc
pop
test
add
adc
(bad)
xor
cmps
mov
add
cmp
or
adc
inc
lea
out
jge
and
xchg
jne
aam
lods
hlt
test
test
dec
cmp
pop
in
dec
mov
xchg
adc
pop
clc
(bad)
fild
xor
cmp
jne
mov
xor
test
add
xor
sub
cmp
jle
or
call
jnp
ror
shl
mov
jmp
and
sahf
sbb
mov
movzx
(bad)
aas
adc
and
mov
and
cmp
je
add
int
sbb
ins
mul
and
jmp
jg
mov
fbstp
jmp
cmp
sbb
test
out
xchg
push
adc
push
dec
sub
addr16
pop
in
dec
(bad)
mov
push
dec
inc
push
or
(bad)
mov
push
or
dec
sbb
inc
jne
mov
dec
jne
mov
test
fisub
cmp
mov
jmp
cmps
mov
cdq
dec
cmp
xor
cmp
shr
mov
add
sub
add
not
cmp
jg
mov
mov
mov
and
ja
lock
(bad)
push
or
fidivr
mov
jmp
cmp
jg
mov
jmp
push
push
sbb
pop
mov
cs
add
push
inc
push
inc
cmp
jbe
inc
mov
xlat
daa
and
jne
pop
or
push
loope
pop
pop
es
pop
ret
adc
ret
out
icebp
cmp
xor
mov
and
sbb
sbb
xor
sub
jle
or
enter
xchg
(bad)
iret
ins
test
mov
jns
inc
inc
and
jns
inc
adc
fcomi
pop
sub
cmp
ja
xchg
bt
jae
jne
pop
mov
mov
out
xchg
xor
ss
add
pop
rcl
push
js
mov
xor
cmp
aas
pop
je
xchg
mov
dec
and
mov
adc
ja
jecxz
pop
jg
leave
add
call
jmp
call
jmp
lods
add
ror
mov
xchg
or
sbb
loop
pop
cmc
mov
mov
sbb
mov
in
in
ds
(bad)
xchg
out
mov
push
adc
mov
imul
or
(bad)
or
test
call
(bad)
mov
movs
out
mov
mov
or
das
mov
adc
outs
(bad)
retf
iret
gs
cmp
push
push
mov
jle
cli
in
jle
jb
inc
cmp
pop
add
test
xlat
or
pop
cld
push
pop
pop
into
mov
cmp
and
retf
ret
movzx
outs
adc
fldcw
cdq
and
bound
pop
popa
cmps
test
push
ret
sbb
xlat
push
lock
push
fist
xchg
or
iret
rol
out
inc
or
mov
movs
lods
pop
and
ja
ret
jle
clc
inc
jge
cmp
push
fisub
sub
cwde
pop
xchg
or
in
cs
xchg
dec
jg
pop
scas
or
enter
dec
mov
(bad)
test
or
mov
sub
xchg
xchg
ins
adc
adc
sbb
mov
pushf
dec
bound
inc
stos
pop
mov
out
cmp
(bad)
std
aas
pop
or
je
or
dec
je
jmp
cmp
addr16
stos
cld
mov
lods
ins
lods
cmp
pop
xchg
cmp
sub
fisubr
dec
dec
jmp
fs
jmp
out
lods
outs
int3
retf
ja
pop
stos
stos
xchg
stos
sar
ret
dec
shl
retf
fld
loope
out
add
fld
fdiv
xor
push
push
push
sbb
pop
call
call
push
add
cmps
pop
enter
jecxz
(bad)
jle
fisubr
test
cmp
(bad)
es
push
dec
add
or
push
gs
push
sub
shl
push
push
ds
or
or
adc
cmp
mov
xor
nop
or
inc
and
push
scas
mov
xchg
add
leave
dec
shl
shr
lock
pushf
rcl
xor
jb
popa
ins
test
push
or
in
lahf
adc
pop
rcr
inc
jb
popa
je
cmp
lahf
cmp
fwait
jge
dec
or
outs
fwait
mov
mov
gs
jo
fs
jbe
test
push
dec
rcl
xchg
mov
inc
jnp
and
xchg
and
or
jb
arpl
pop
test
ds
sbb
daa
dec
imul
leave
push
mov
sub
or
fadd
fiadd
ds
out
repnz
in
enter
int3
leave
add
sar
aas
pop
lahf
mov
push
pop
jbe
add
into
pop
xchg
iret
out
dec
push
add
call
and
or
jae
jnp
cld
test
pop
inc
ins
popa
jae
sub
sbb
cmps
(bad)
pop
add
les
push
push
push
or
sbb
test
push
cld
shr
imul
ds
enter
inc
outs
ins
sbb
inc
mov
inc
and
pop
sub
add
inc
xor
dec
ror
aam
fs
push
aam
xchg
fadd
das
inc
push
pushf
loope
repz
(bad)
cld
(bad)
sti
stos
dec
push
push
das
adc
test
add
and
cmp
(bad)
dec
test
jo
(bad)
fist
xor
pushf
jae
push
rcl
sahf
cmps
pop
cdq
cs
fisubr
test
mov
pop
jl
mul
(bad)
call
sub
adc
ss
(bad)
pushf
push
mov
loope
pop
jae
push
js
cmp
xlat
pop
sub
xlat
fidiv
retf
mov
pop
sub
ins
xor
pop
test
mov
outs
repz
cld
test
ja
xchg
push
sub
jo
rol
or
pusha
push
push
imul
pop
sbb
sbb
xor
or
les
(bad)
push
mov
sbb
pop
and
pop
jns
sbb
lds
fimul
mov
pop
cld
and
add
xchg
retf
xchg
call
pushf
jmp
ss
and
mov
pop
les
nop
retf
sbb
mov
jne
mov
push
jo
and
in
jbe
icebp
pusha
mov
jbe
and
jmp
ja
(bad)
out
xchg
(bad)
sub
pusha
lds
push
in
xchg
push
fwait
or
push
pop
push
out
fsubr
in
or
in
and
mov
mov
in
hlt
or
cmp
enter
mov
cdq
and
add
xchg
mov
addr16
jmp
mov
pop
or
sti
mov
sub
sbb
iret
inc
jbe
test
add
adc
jnp
dec
and
mov
aam
in
and
mov
jnp
add
or
push
sbb
xor
adc
pop
dec
jp
sar
mov
sub
addr16
mov
jae
pop
lock
ret
out
adc
or
and
xor
mov
pop
loop
xchg
jl
sbb
jl
cmp
scas
lods
fwait
sbb
add
dec
mov
in
sub
loope
loopne
adc
or
nop
mov
ret
add
inc
add
mov
les
sub
xor
and
and
jmp
add
mov
push
clc
test
ds
push
adc
iret
cmps
mov
cmp
call
add
mov
sbb
ret
(bad)
mov
jb
retf
cld
sbb
out
push
mov
or
ret
xor
add
or
cli
inc
repz
xchg
(bad)
retf
adc
or
lahf
add
mov
and
shl
outs
mov
add
or
add
mov
sbb
arpl
adc
mov
or
test
mov
and
cmps
push
push
or
mov
adc
mov
mov
ret
or
clc
out
dec
ret
(bad)
loopne
push
shufps
int3
cmp
je
fld
ret
mov
test
mov
jmp
int3
adc
push
push
fcomp
aad
xchg
ss
and
int
in
or
pop
jle
fcomp
les
or
fmul
and
sub
out
int
enter
in
jle
adc
add
lea
add
xchg
add
xchg
sbb
mov
jb
nop
dec
mov
adc
sub
sbb
sub
shl
mov
jmp
outs
add
out
push
xchg
xchg
xor
dec
mov
mov
repz
inc
xor
add
out
inc
dec
and
cmp
jle
daa
mov
xchg
mov
xor
aas
das
jl
dec
push
pop
add
popa
fist
loopne
scas
dec
sbb
les
xchg
popa
out
push
repnz
ficomp
inc
sbb
aad
cld
add
push
xchg
jnp
ret
jmp
sub
mov
mov
iret
je
lea
sub
sub
je
in
nop
xchg
push
nop
iret
xor
cmp
push
in
lock
ret
jae
aas
hlt
clc
push
adc
(bad)
xor
and
shl
sbb
jle
lea
outs
imul
icebp
nop
mov
arpl
xchg
and
repnz
and
test
sbb
inc
imul
sbb
mov
ins
dec
rol
hlt
add
gs
rol
lods
pop
(bad)
push
addr16
mov
ror
or
movs
jno
enter
or
das
fild
pop
icebp
sbb
push
jo
into
pop
cmp
mov
ss
adc
(bad)
in
shl
mov
add
jp
lahf
xchg
jns
xor
test
aam
adc
xchg
int3
jo
rol
out
in
dec
aaa
in
test
sbb
xchg
cmp
lea
sub
xchg
jecxz
cmps
rcl
push
lock
or
rol
and
imul
dec
and
imul
add
fbld
pop
add
scas
aad
scas
add
or
shl
pop
jb
(bad)
mov
imul
ret
(bad)
and
mov
dec
jo
shr
xchg
in
inc
popa
mov
mov
ins
scas
clc
xchg
das
cmp
dec
add
int3
sbb
mov
jo
(bad)
inc
or
fmul
cmps
ret
xchg
mov
adc
cmp
sbb
cmp
test
les
lods
inc
or
enter
rcr
sub
pop
mov
mov
lods
xlat
and
pop
jbe
and
mov
pop
in
mov
ror
test
add
xchg
test
mov
pop
mov
outs
popa
pop
test
mov
add
add
or
ror
sub
cs
retf
daa
pop
pop
jnp
call
fs
dec
mov
dec
loopne
xchg
inc
or
rcl
neg
(bad)
and
push
lods
into
sub
shr
pop
push
and
mov
xor
cmp
or
inc
data16
lahf
push
adc
clc
pop
jb
inc
repnz
clc
js
sbb
inc
daa
lea
lds
call
fimul
aad
outs
and
aam
clc
or
test
xchg
ja
lds
ins
clc
adc
add
sub
enter
jp
rol
rol
and
nop
dec
and
or
mov
mov
add
hlt
jp
xor
pop
lahf
icebp
outs
or
jecxz
inc
and
pop
mov
retf
idiv
cmp
jne
sbb
cwde
fs
xchg
cmp
cld
not
adc
push
sbb
inc
add
xor
enter
sbb
inc
lods
or
out
cmps
push
xchg
jmp
aas
(bad)
bound
jne
xlat
arpl
repnz
push
mov
or
mov
adc
or
inc
cmps
(bad)
into
mov
mov
push
scas
(bad)
inc
in
ss
popf
mov
aaa
js
jge
pop
push
test
leave
sub
push
or
xor
outs
mov
lock
inc
stc
dec
jb
sbb
and
jecxz
xchg
pop
adc
xchg
enter
sbb
xlat
enter
loop
xchg
sub
aam
jp
cmp
push
or
push
(bad)
mov
ficomp
out
enter
cmp
jne
inc
push
jb
inc
loope
leave
xor
in
dec
cdq
(bad)
xlat
add
jb
mov
popa
fdivr
iret
and
cmp
lods
in
or
rcr
test
add
jne
ret
pop
test
jmp
jge
(bad)
ror
mov
sbb
(bad)
fwait
mov
(bad)
dec
clc
into
inc
push
xchg
xchg
repz
adc
xchg
add
push
push
add
inc
and
jbe
xchg
outs
mov
xchg
loopne
pop
ret
mov
sub
jns
loopne
push
stos
adc
xor
mov
cmp
add
or
inc
or
xor
pop
jb
enter
in
fstp
test
push
inc
add
popf
in
nop
addr16
cmp
cld
test
bnd
push
paddsb
movs
pop
lds
or
shl
arpl
inc
dec
pop
dec
leave
in
js
out
fs
lock
nop
inc
mov
dec
(bad)
xchg
sub
cmp
loopne
sti
cmps
or
and
pop
fcompp
xchg
xor
and
and
inc
jb
psubsw
or
mov
inc
sub
aaa
or
lea
push
and
sbb
fcmovnbe
je
ror
push
out
inc
sub
adc
aaa
cs
xchg
add
ror
jne
and
ins
dec
ins
or
das
pop
mov
and
call
lods
sbb
jne
xchg
aam
lds
inc
or
push
(bad)
sti
mov
jge
add
fdivr
inc
leave
popa
and
(bad)
cs
push
in
mov
test
iret
cs
mov
inc
pop
repnz
enter
sbb
and
shl
daa
fisttp
mov
in
add
xchg
adc
mov
add
pop
jnp
repnz
fisttp
(bad)
mov
mov
adc
adc
and
rol
and
into
push
test
test
sub
shl
lock
fimul
jb
adc
push
lock
je
adc
pusha
shl
and
in
cmp
pop
or
adc
mov
dec
xchg
mov
cmp
daa
fimul
dec
lods
and
cmp
mov
rcl
and
aas
rcl
out
lock
sbb
(bad)
mov
lods
das
in
mov
call
sub
fcomp
movs
jmp
sub
lea
or
pushf
push
loope
push
add
xor
test
mov
das
pop
mov
rcr
jmp
je
xor
add
shr
inc
pop
inc
push
xchg
push
lock
xchg
jl
je
xor
push
mov
ja
fcom
ret
fst
fcmove
push
xlat
outs
and
test
and
or
mov
push
xchg
ret
mov
pop
and
sub
jns
mov
inc
and
loope
bound
sbb
loope
xor
daa
mov
(bad)
and
cmp
xlat
loope
push
lods
mov
adc
nop
(bad)
pop
call
rol
(bad)
je
push
lea
inc
xchg
inc
jbe
or
push
inc
or
imul
add
jo
jmp
mov
xchg
pop
ror
xor
and
or
inc
(bad)
push
iret
cmp
mov
ret
test
add
mov
xor
mov
(bad)
enter
std
xchg
mov
push
cmp
mov
or
and
call
push
jecxz
jecxz
and
dec
shr
jns
mov
sbb
sti
inc
add
daa
fcom
fcom
xchg
ins
and
enter
sbb
or
xchg
jl
stc
int
inc
imul
loope
hlt
mov
push
in
in
cwde
inc
xor
addr16
stos
sbb
mov
in
pop
in
or
sbb
(bad)
mov
out
push
jne
sbb
and
and
jecxz
(bad)
push
sbb
aas
bound
sub
outs
fs
xchg
repnz
adc
xor
je
addr16
ds
cmp
cmp
cmp
xchg
ror
jb
(bad)
push
ss
std
cwde
js
iret
sar
sbb
sub
enter
iret
repz
pop
ja
push
and
not
dec
in
movs
add
sbb
ficom
or
mov
imul
sbb
aaa
es
and
adc
or
mov
jae
xchg
sbb
xor
repnz
jl
mov
ror
out
aad
jge
or
add
lock
jb
ret
std
xlat
pop
out
or
or
dec
and
and
rcr
cld
cli
out
js
adc
out
mov
cs
inc
add
mov
out
xor
xchg
mov
dec
mov
xchg
xchg
aas
jmp
call
dec
cmp
cs
add
aaa
ror
push
add
outs
les
add
xchg
inc
cli
cdq
sti
dec
or
cdq
sbb
and
addr16
or
xor
mov
out
mov
les
hlt
adc
and
adc
jo
hlt
out
push
call
inc
adc
or
lock
enter
arpl
in
test
ffreep
push
adc
repnz
icebp
mov
mov
(bad)
mov
(bad)
dec
nop
ret
mov
push
mov
mov
popa
adc
sahf
xor
scas
push
sbb
mov
in
cmp
jle
cmp
je
pop
jmp
dec
sub
scas
mov
fsubr
sbb
push
repnz
test
loopne
push
stos
fstp
jle
xchg
inc
ret
(bad)
pop
sub
push
popf
jp
aas
mov
cmp
sub
int
nop
bound
jmp
shr
dec
mov
inc
hlt
push
mov
mov
adc
gs
movd
jns
add
xor
push
and
push
hlt
and
out
and
dec
lock
push
test
inc
and
adc
fadd
leave
arpl
mov
jmp
jle
cmp
inc
add
rol
cmp
je
jge
test
das
and
mov
cmp
inc
xchg
push
pop
dec
(bad)
and
cwde
jg
mov
adc
lock
adc
sub
push
push
push
sub
ss
cmp
fsub
inc
pop
cwde
mov
add
xchg
and
sub
bound
pop
fnstenv
fadd
in
bound
pop
xor
retf
mov
inc
stos
jo
mov
aad
push
pop
sbb
and
xor
push
int3
in
(bad)
inc
rol
and
or
push
lahf
pop
add
pop
pop
adc
xchg
mov
and
pop
pushf
or
sub
les
pop
out
inc
pop
dec
loop
push
dec
jge
mov
and
inc
pop
clc
sbb
pop
sbb
dec
std
inc
jge
mov
or
sbb
inc
lods
sar
outs
out
jmp
xchg
xlat
test
add
test
xor
mov
cmps
in
in
cmp
sub
mov
jne
jbe
lock
dec
leave
imul
dec
je
les
inc
mov
in
add
cmp
pop
mov
or
gs
test
aam
or
or
movs
mov
sub
push
sahf
sub
mov
pop
mov
fistp
add
adc
lea
and
cmps
jno
or
xchg
sar
out
and
repnz
(bad)
cmp
add
jne
aas
test
dec
sbb
push
jle
add
stos
and
das
iret
xchg
shl
mov
cmps
ss
(bad)
leave
dec
adc
mov
fcmovnu
pop
fwait
jl
rcr
fldcw
fst
retf
jb
xchg
mov
mov
xor
jne
pop
lahf
dec
push
pusha
mov
int3
ds
adc
push
rcl
icebp
and
dec
mov
jo
mov
pop
test
loop
pop
inc
lock
push
imul
in
adc
nop
inc
fild
mov
mov
dec
add
shr
cmps
jle
and
outs
add
push
lods
push
adc
and
jmp
push
add
pause
fsub
lods
mov
jnp
push
jbe
push
xchg
sbb
add
dec
icebp
add
or
pop
xor
or
xor
push
push
add
jge
fst
clc
out
adc
sbb
das
mov
je
add
loopne
xchg
adc
repz
or
jmp
jmp
rol
ret
mov
fstp
rol
jns
add
add
js
inc
xchg
cmp
cmp
sub
jae
pusha
xchg
push
pop
sbb
push
adc
mov
push
pop
mov
in
mov
in
pop
sbb
cmp
ja
mov
inc
xor
push
in
xchg
push
pop
xor
sbb
and
jmp
push
pop
shl
in
push
push
jne
cs
cs
add
xor
or
cmp
sbb
push
adc
push
or
repz
mov
mov
sbb
or
cdq
xor
or
pushf
repz
(bad)
ja
ja
dec
or
dec
fsubp
call
sub
repnz
push
mov
dec
(bad)
repz
or
pop
out
adc
xlat
jmp
and
in
or
sbb
les
mov
inc
add
xchg
imul
pushf
jmp
mov
xor
nop
ret
hlt
xor
jecxz
mov
sub
mov
es
add
jge
out
push
adc
adc
push
es
fs
aaa
xor
in
pop
call
mov
add
in
mov
pop
jns
cmp
arpl
adc
adc
cmp
call
cmc
popaw
(bad)
sub
push
sbb
nop
in
push
mov
clc
xchg
mov
and
and
movs
lock
loopne
push
dec
fcomp
push
js
jbe
sub
sbb
repnz
jae
jmp
sub
gs
pop
movs
fadd
mov
fmul
pop
pop
sub
pop
in
mov
repnz
into
in
cmp
fadd
je
mov
je
inc
lahf
xchg
(bad)
dec
sub
or
fsubr
cmp
add
jnp
xchg
push
jp
inc
adc
sub
inc
or
icebp
xchg
repnz
push
test
dec
clc
mov
clc
or
fidiv
ret
xchg
cmp
pusha
imul
pop
js
pop
and
fisttp
sbb
push
adc
lods
sbb
test
shr
or
add
sbb
or
loope
or
repz
lock
dec
int3
or
and
loope
in
mov
or
push
hlt
mov
dec
mov
cmps
in
data16
popf
dec
add
popa
jmp
pop
(bad)
sbb
sar
dec
sub
xor
jmp
push
push
jbe
aad
sahf
fnstenv
(bad)
mov
sub
dec
push
sub
jle
add
or
mov
in
rcl
pop
cmp
enter
pop
inc
in
inc
movs
cmp
jmp
nop
xchg
mov
call
sbb
mov
cmp
je
jno
xor
xchg
cmc
dec
xor
inc
add
mov
sbb
mov
xchg
and
nop
cmp
cmp
xchg
stc
in
cmp
pop
sbb
mov
test
call
mov
pop
hlt
leave
hlt
es
inc
test
and
and
xlat
inc
fisttp
and
int3
adc
add
loopne
dec
jne
mul
xor
popf
(bad)
sub
sbb
daa
sub
sbb
(bad)
push
call
xor
lods
xchg
je
jl
and
cmp
push
iret
call
or
jp
push
sbb
loopne
jl
xchg
dec
add
clc
and
jne
out
cli
lods
rcl
or
inc
inc
add
or
inc
sub
inc
ret
ins
(bad)
jge
sbb
rol
jo
mov
pop
push
les
and
in
pop
dec
cmp
push
or
inc
sti
xchg
xor
rcr
and
sti
mov
cmp
sbb
test
xor
mov
add
push
bswap
in
xor
pop
fcom
mov
adc
ja
jmp
rcr
pop
add
in
ficomp
jb
cmp
in
scas
jae
stos
mov
cmp
ss
mov
mov
jl
jmp
scas
call
mov
call
pop
ins
sub
cmps
not
sbb
je
and
dec
mov
in
pusha
es
pop
or
jne
inc
jl
dec
xchg
push
pop
add
cld
mov
jl
push
in
pusha
jae
push
jmp
sbb
xlat
add
ret
sub
sbb
mov
mov
or
clc
lock
dec
jb
mov
mov
daa
mov
mov
push
inc
repz
(bad)
adc
ror
or
sar
inc
sub
nop
sbb
imul
or
call
sbb
in
xor
das
movs
enter
inc
pop
in
push
loopne
add
adc
neg
outs
xchg
adc
rcr
adc
inc
out
cdq
in
and
mov
mov
fmul
mov
mov
(bad)
sbb
sbb
inc
adc
(bad)
aas
mov
loopne
pop
and
mov
lock
inc
add
xchg
dec
shr
cmp
and
inc
sbb
es
xchg
mov
ds
xor
push
or
jmp
push
mov
mov
movs
fdiv
loopne
outs
or
pop
pop
jg
ds
daa
sbb
sti
(bad)
adc
cmp
mov
mov
sar
add
sar
fisttp
pop
out
ret
mov
xor
jne
add
add
adc
hlt
call
add
sbb
fsub
sub
or
ins
add
xor
xor
and
cmp
iret
lock
cld
cmp
xor
pop
sub
cmp
adc
sub
fs
(bad)
adc
jmp
(bad)
in
sahf
cmc
adc
inc
mov
aas
(bad)
xor
and
or
xchg
add
pop
jle
int3
clc
dec
push
and
sbb
and
pop
pop
pop
sub
test
jecxz
rol
push
dec
cmp
out
cld
dec
in
retf
aad
mov
sub
push
ror
mov
xlat
pop
jmp
dec
test
call
xor
or
test
stos
mov
push
pop
and
shl
xor
pop
call
clc
shr
push
cmp
add
int3
push
mov
and
int3
xchg
xchg
jne
and
xlat
cmp
mov
adc
mov
pop
sub
mov
push
add
add
std
leave
lock
loop
or
or
repz
fist
das
xlat
pop
add
sub
test
data16
inc
mov
aaa
cmp
adc
xor
pop
adc
jp
ss
arpl
je
mov
shl
test
(bad)
repz
sub
xchg
mov
loopne
ficom
sub
adc
add
je
lods
aam
ret
sbb
sub
pop
dec
inc
add
rol
lods
sub
pushf
and
dec
push
xor
mov
call
and
add
loop
jg
paddusb
mov
jbe
test
daa
add
das
jne
xchg
fisttp
or
jge
mov
push
out
or
add
mov
(bad)
mov
iret
add
mov
jge
sbb
push
mov
cmp
sti
popa
bound
mov
mov
fs
hlt
ins
dec
cmp
push
sbb
loope
mov
lea
jns
dec
jle
lods
lock
lock
iret
popf
sti
ud1
xchg
lock
and
bound
xchg
mov
and
or
sub
cmp
and
ja
aaa
mov
nop
mov
das
jb
adc
ss
add
test
je
inc
hlt
dec
or
cmp
pcmpeqw
cmp
add
pushf
(bad)
scas
lock
adc
and
ins
idiv
(bad)
mov
in
and
js
adc
out
retf
push
add
fldcw
mov
and
test
mov
push
fistp
mov
arpl
ja
lea
pop
lock
pop
add
push
mov
test
iret
pusha
fisttp
neg
mov
add
ds
fimul
stos
rol
mov
clc
push
hlt
fidiv
pop
fbstp
(bad)
mov
cmp
push
pop
mov
(bad)
jnp
sbb
(bad)
fs
or
or
adc
les
xchg
cli
pop
ret
mov
xor
loope
mov
dec
jb
sbb
and
xchg
push
in
push
mov
or
mov
sbb
sbb
jne
xchg
push
cmp
repnz
mov
outs
in
cmp
lods
dec
fidivr
dec
movs
jne
out
cmp
xor
cmp
fadd
inc
out
and
mov
mov
add
cs
and
out
add
cld
hlt
je
mov
adc
mov
adc
shl
nop
ins
ror
test
mov
(bad)
mov
imul
pop
xchg
or
pop
dec
cmp
inc
mov
and
hlt
call
nop
pop
les
inc
xchg
adc
iret
leave
adc
test
retf
or
mov
ret
(bad)
in
(bad)
in
inc
scas
push
sbb
cs
stos
or
lahf
or
jecxz
jne
cmp
inc
and
sub
mov
mov
and
in
(bad)
sbb
or
jne
mov
and
add
push
out
popf
push
(bad)
in
fistp
call
lock
mov
aam
leave
and
xchg
pop
pop
cld
jnp
add
cmp
or
mov
pop
fimul
pop
pop
dec
or
sub
nop
outs
pop
adc
in
cli
sbb
mov
pop
out
pusha
das
adc
movs
cmp
or
test
sbb
xchg
aam
loope
xchg
push
repnz
push
inc
std
movs
shl
loopne
arpl
std
inc
jb
dec
sub
jb
add
sub
jae
sub
aam
sbb
das
pop
js
mov
mov
adc
pop
cmp
cmps
add
or
enter
mov
jns
lods
xor
mov
or
cs
rol
and
jae
test
pusha
fsubr
jns
btc
push
loopne
xchg
(bad)
dec
xchg
adc
rcl
imul
in
sbb
and
jle
jg
ret
ret
call
pop
retf
repnz
mov
add
jge
in
in
pop
mov
or
in
mov
jns
fadd
fdiv
jp
pushf
pop
lock
sub
pmaxsw
xchg
retf
(bad)
pop
xchg
or
mov
dec
fmul
add
test
loop
jg
int3
sub
pop
jns
xadd
rcl
xor
mov
xchg
cmp
shl
clc
dec
imul
cmp
pop
jne
push
or
mov
jl
push
in
std
sub
mov
fadd
fsub
fstp
pop
pop
sar
xchg
add
call
xor
pop
xchg
pop
pop
aam
jnp
xchg
jmp
sbb
xchg
rol
or
cld
jne
mov
push
jmp
loopne
push
inc
mov
dec
jmp
dec
mov
inc
push
mov
mov
mov
popa
dec
sbb
push
xor
sbb
addr16
sbb
(bad)
add
xchg
test
in
mov
daa
xchg
in
inc
jo
jge
fwait
mov
push
adc
repnz
data16
(bad)
test
push
in
inc
fcmovu
mov
add
ins
repnz
out
or
cmc
push
cmp
add
jns
(bad)
jg
and
dec
add
or
lahf
iret
enter
addr16
popf
adc
sbb
cld
or
and
xor
movs
adc
add
adc
es
push
push
or
inc
js
jp
scas
dec
sub
push
adc
or
dec
xor
call
sbb
call
push
jo
fsub
inc
sbb
add
jmp
das
pop
(bad)
push
sbb
and
push
call
inc
xchg
stos
jmp
cmp
pop
data16
out
mov
call
or
dec
jnp
push
ins
ss
bound
dec
nop
push
leave
out
ficomp
add
mov
dec
and
adc
xchg
sub
and
shr
inc
pusha
xchg
push
enter
adc
push
add
scas
push
jns
addr16
inc
pop
adc
clc
pop
ret
mov
sub
or
int3
mov
pop
add
hlt
sbb
pop
mov
or
cmp
call
je
jp
add
and
fcmovu
sbb
add
push
(bad)
iret
cmp
(bad)
lock
in
retf
outs
and
(bad)
dec
addr16
ss
cld
jmp
jbe
adc
leave
inc
test
cwde
idiv
sar
cmps
enter
pop
repnz
add
stc
outs
enter
or
adc
(bad)
loopne
int3
add
push
(bad)
jmp
or
sbb
xchg
pop
inc
(bad)
push
jmp
sub
sbb
test
aas
stos
or
dec
outs
imul
inc
push
jl
daa
mov
or
stos
sub
call
xchg
retf
in
pop
hlt
and
and
and
mov
mov
aam
and
sub
sbb
out
enter
daa
inc
xlat
push
and
mov
adc
mov
adc
shr
push
adc
sub
xchg
push
or
mov
push
mov
imul
mov
aad
ret
or
sub
mov
fsub
inc
scas
sbb
fnstenv
xchg
dec
jle
inc
add
test
pop
ror
push
mov
add
jmp
mov
nop
inc
adc
cmps
or
add
mov
jmp
in
jne
or
mov
sub
fcom
xchg
ror
fsubr
fcomp
pop
add
or
popa
mov
adc
push
(bad)
mov
or
push
and
add
add
push
sbb
push
inc
mov
fild
push
mov
scas
dec
mov
adc
push
pusha
mov
add
int3
lock
leave
and
and
aas
inc
inc
jne
fisub
jmp
call
sbb
fild
dec
nop
sbb
adc
mov
add
xor
dec
sbb
xchg
xchg
sti
pop
cmp
push
sub
sbb
lea
shl
dec
or
xor
je
pop
sub
jl
push
xchg
lock
rcl
jp
popa
dec
movs
sbb
fild
aas
cld
inc
hlt
jmp
cmp
jne
pushf
nop
inc
mov
bound
inc
xchg
or
xor
in
xchg
sub
movs
pop
out
(bad)
mov
daa
pop
bound
adc
mov
and
ror
daa
xchg
mov
nop
xor
pop
sbb
scas
sub
scas
pop
or
cmp
dec
addps
movs
or
cmp
fsubr
or
cmps
js
test
arpl
or
inc
rcl
sub
push
xor
mov
pop
(bad)
ret
fdiv
ror
stos
pop
mov
jo
mov
test
inc
popa
lods
ins
xchg
mov
push
mov
enter
cmp
rcr
inc
jne
push
popf
add
push
jb
addr16
cmp
pop
or
add
push
fild
aam
adc
sub
mov
mov
pop
mov
aam
push
pop
scas
sahf
jp
xor
cli
sbb
sahf
push
inc
or
pushf
sbb
mov
in
mov
sbb
in
cli
sub
pop
and
mov
adc
cmp
imul
and
jne
daa
shl
jne
cmp
loope
mov
(bad)
jmp
dec
mov
push
cmp
jbe
push
ins
shr
sub
lahf
ror
cwde
pusha
sbb
add
fistp
mov
or
pop
ret
inc
shl
push
ds
jmp
jl
or
ins
stc
jg
mov
inc
mov
cld
sub
xchg
xor
adc
pop
arpl
cwde
or
call
call
pop
in
jne
sub
sbb
sub
nop
gs
or
cmc
and
nop
popa
adc
add
xor
mov
mov
std
dec
push
add
imul
sub
mov
or
and
mov
jmp
sar
or
daa
mov
pop
xchg
xchg
sub
in
scas
inc
or
xor
rcl
adc
outs
outs
outs
je
pop
loop
sub
pop
and
adc
fs
scas
and
sbb
repz
and
add
inc
test
mov
or
js
ins
mov
shl
add
xchg
or
push
sbb
inc
ja
outs
mov
or
test
cmps
xchg
push
add
xchg
adc
cmps
and
add
in
in
and
in
jns
ret
fisttp
pop
adc
push
jge
inc
or
inc
jmp
sahf
cmp
fld
mov
push
mov
cmps
fisubr
loopne
shl
pop
jne
cmps
daa
add
xor
jne
ins
push
mov
jo
xchg
sub
add
adc
and
pop
popf
pusha
xchg
leave
push
xor
inc
push
cmp
or
sbb
or
ret
xor
test
xchg
and
lock
arpl
mov
test
(bad)
je
stc
add
and
or
test
jecxz
sub
jnp
movs
lahf
lahf
movs
sbb
dec
enter
mov
adc
int
cmp
mov
mov
sti
dec
sub
loopne
rol
add
lds
and
sbb
jmp
popa
in
or
adc
push
fwait
inc
and
lods
in
push
xchg
call
and
sub
int
dec
loop
pop
mov
int3
add
mov
mov
dec
push
mov
jmp
sub
push
jmp
lock
push
test
sar
push
adc
out
arpl
add
js
sbb
jae
cmovp
jns
daa
and
dec
add
push
pop
test
and
and
sub
(bad)
sub
jnp
cmp
inc
repz
adc
das
ret
fild
lock
test
sub
lods
push
daa
aam
retf
ror
mov
push
or
pop
mov
cmp
push
and
push
and
push
xchg
inc
mov
fadd
sub
in
mov
loope
inc
test
loopne
mov
in
fist
push
repnz
jne
loopne
dec
ror
out
and
xor
ja
mov
(bad)
je
lock
xchg
jmp
in
mov
in
xchg
and
dec
add
fs
fsub
inc
jne
sbb
aaa
pop
cmp
inc
xchg
pop
nop
es
in
push
es
and
das
jge
push
cdq
jne
or
das
xor
fsubr
dec
push
mov
pop
pop
inc
xchg
loopne
mov
inc
pop
or
lock
sbb
sub
jne
adc
mov
out
dec
jecxz
and
pop
adc
out
fadd
movs
adc
mov
and
add
inc
add
sbb
mov
cmp
adc
jns
loopne
sub
add
sbb
loop
mov
ret
in
sub
inc
sub
or
lock
xchg
dec
dec
lock
clc
xlat
xor
call
nop
out
pusha
sub
loopne
cmp
cmp
hlt
push
mov
mov
adc
fwait
loope
movs
repnz
pop
jmp
dec
inc
push
test
jg
dec
les
xor
nop
xchg
pop
popa
pushf
xchg
push
dec
(bad)
sub
mov
xchg
adc
popf
mov
fbld
daa
push
and
test
jle
lds
jno
mov
test
in
mov
pop
mov
fucomp
or
adc
xchg
ret
gs
mov
or
(bad)
jmp
in
jne
shr
mov
cdq
in
xlat
in
or
loop
leave
in
sub
dec
pop
and
inc
bound
mov
ret
clc
clc
pop
sub
pop
or
and
imul
sub
inc
lods
dec
fist
ja
and
adc
fistp
out
inc
sbb
lods
xlat
sub
dec
pop
jb
mov
sub
test
retf
or
div
push
sbb
fsubr
mov
hlt
call
lods
inc
inc
push
mov
lods
pop
or
cld
add
xor
or
int3
mov
call
fnstsw
sub
imul
cmp
cmp
fld
push
sar
lods
dec
ins
jp
int3
cmp
mov
pop
inc
sub
and
ror
adc
rcl
clc
in
adc
fs
aaa
enter
and
jg
ret
and
xor
mov
mov
loopne
bound
sbb
jp
nop
arpl
(bad)
adc
dec
data16
xchg
inc
fdiv
and
and
mov
stos
adc
add
repz
add
(bad)
dec
(bad)
imul
mov
xchg
cmp
mov
les
das
ret
add
push
sbb
push
fs
fwait
lock
das
hlt
shl
and
sub
mov
xor
mov
or
call
xor
imul
iret
mov
push
imul
pop
lahf
das
lock
ss
xchg
daa
out
loopne
jnp
xor
adc
and
and
and
adc
jle
and
inc
jl
push
mov
add
dec
imul
das
add
mov
push
and
mov
fsub
ret
rcr
adc
inc
fisttp
rcr
loopne
sar
daa
xor
lock
push
xor
shr
stos
add
mov
sbb
pop
push
push
adc
add
xor
or
sub
mov
sbb
pop
fild
mov
movs
xlat
loop
sub
cmps
adc
pop
sti
shl
xlat
shl
xchg
dec
jl
dec
test
call
outs
je
gs
clc
jo
js
scas
dec
dec
inc
push
das
in
rol
pop
push
dec
dec
xchg
fxch
and
push
aaa
adc
xchg
(bad)
inc
pop
inc
dec
inc
push
push
inc
push
pop
push
dec
dec
push
add
push
push
push
inc
call
pop
push
inc
enter
dec
inc
inc
dec
pop
jp
dec
dec
inc
dec
dec
dec
inc
or
loopne
or
(bad)
lock
xor
test
shl
mov
lods
dec
sbb
xchg
xor
cmps
adc
arpl
mul
sub
pop
icebp
pop
outs
int3
add
or
or
push
or
ins
or
je
inc
loopne
icebp
mov
mov
lock
(bad)
into
cmp
push
xor
cmp
xor
in
sub
arpl
mov
or
ret
dec
dec
sub
lods
call
ret
lock
popa
inc
inc
mov
push
js
push
(bad)
enter
push
sub
xor
or
call
or
lock
xor
sahf
pop
sbb
and
cli
ror
add
fdivr
lock
pop
pop
aam
and
fs
dec
shl
cdq
hlt
or
push
xor
nop
in
aam
hlt
xor
nop
lock
lock
ror
or
in
clc
in
sbb
clc
dec
(bad)
pop
addr16
idiv
cmp
and
outs
mov
stos
fild
std
add
jmp
xor
dec
ins
xor
test
sbb
ret
and
pop
je
jl
ss
test
es
or
and
repz
into
push
std
ins
ss
loopne
nop
add
fdiv
inc
and
pusha
cmps
dec
push
arpl
movs
inc
jp
pop
xor
aaa
aas
ja
aaa
arpl
push
push
nop
push
int
daa
inc
mov
push
xor
ror
and
cdq
push
or
shl
dec
pop
pop
fbld
enter
jmp
fs
inc
sub
jno
test
and
(bad)
cmp
pusha
jnp
enter
sub
sub
push
je
push
add
jmp
ins
fmul
xchg
mov
or
out
in
es
and
inc
push
mov
dec
js
inc
addr16
and
add
cmp
jmp
mov
pop
aaa
in
test
and
sbb
or
cs
ror
dec
popa
cmp
mov
rol
rol
and
or
xor
mov
leave
ja
and
mov
add
or
mov
enter
shl
outs
cmp
cmp
mov
mov
inc
sub
xor
lock
aaa
movzx
(bad)
jmp
sar
or
sub
clc
in
(bad)
cmc
out
inc
xchg
daa
in
mov
jns
mov
in
add
add
rcl
jns
pusha
sub
sub
popf
loopne
and
mov
aaa
pop
adc
inc
pop
xchg
call
sbb
in
jne
cmp
mov
outs
fmul
and
add
lock
fldcw
cmp
cmc
adc
enter
cmp
adc
pop
fs
sub
cmp
add
es
inc
mov
bound
mov
xchg
pop
jge
cmp
cmp
clc
mov
inc
mov
adc
add
or
mov
cmps
add
jb
popa
adc
ror
fsub
add
add
enter
cmp
sbb
fs
sub
mov
call
pop
pop
daa
scas
cmp
in
sar
sbb
das
pop
or
(bad)
out
xor
ds
add
xchg
sub
sbb
bound
or
in
lds
add
add
push
add
and
and
xchg
cmp
xchg
fcomp
(bad)
aas
in
add
mov
clc
dec
pop
aam
ret
rol
ss
sub
mov
xor
in
cmp
fmul
adc
call
(bad)
mov
add
scas
add
xchg
repnz
pop
jb
loopne
push
add
mov
fadd
adc
out
dec
pop
ret
inc
pop
loop
xchg
(bad)
mov
push
and
push
dec
aaa
mov
and
jmp
and
movs
inc
mov
fisubr
cmp
pushf
pop
test
cmp
(bad)
outs
pop
sbb
inc
hlt
mov
nop
add
xor
mov
push
jae
cs
pushf
shr
in
xor
mov
sbb
scas
push
in
sbb
push
mov
cmps
daa
mov
add
pop
rcr
lahf
daa
jno
mov
faddp
dec
dec
cli
or
inc
jae
jl
dec
test
lock
rcl
ss
dec
xor
inc
jmp
mov
pop
fcmovnu
test
mov
fisttp
cmp
add
ja
xchg
in
mov
popa
adc
and
add
or
mov
sbb
cmp
sbb
adc
int
lds
push
(bad)
fdiv
and
cli
or
repz
call
mov
xlat
adc
mov
rcr
ja
and
and
ins
mov
ss
mov
cmp
xchg
mov
lahf
xchg
cmp
adc
pop
jle
fnstenv
dec
cmp
(bad)
test
popf
js
test
push
mov
in
cmps
xor
push
xchg
xchg
inc
xlat
rol
outs
stc
push
adc
mov
leave
dec
loope
loope
sbb
sbb
call
sbb
sub
inc
add
add
sub
xlat
inc
shr
and
test
test
or
pop
in
leave
dec
or
inc
ret
cmp
data16
cmps
cwde
lea
test
outs
adc
pop
data16
sahf
and
inc
xchg
dec
ficom
mov
cmp
pcmpgtb
je
push
xor
pop
mov
cli
jmp
xor
cs
ins
push
neg
inc
gs
rol
addr16
nop
outs
scas
sbb
add
test
xchg
xor
loop
ins
cld
inc
push
(bad)
and
and
imul
xchg
cli
mov
in
inc
sbb
inc
dec
or
add
jmp
inc
pop
pop
adc
or
and
lods
jmp
dec
pushf
cmps
shr
call
push
push
cmp
push
dec
dec
imul
ja
xchg
call
lods
jae
xchg
or
in
xchg
cmp
pushf
cmp
lahf
and
test
inc
adc
ja
mov
dec
inc
ja
shl
into
nop
xchg
setb
imul
push
push
into
xchg
inc
pop
test
fist
jb
dec
xor
outs
imul
sub
add
ror
loopne
nop
xlat
shl
test
int
mov
popf
sub
aam
cmp
mov
inc
(bad)
fsubr
pop
cs
adc
hlt
adc
jmp
or
sbb
push
retf
adc
jnp
mov
clc
fcomp
(bad)
and
xchg
dec
dec
push
clc
inc
inc
add
and
ror
push
mov
sbb
add
mov
or
lods
or
and
sub
je
adc
inc
cmp
xchg
mov
mov
mov
shl
ds
mov
dec
sbb
sbb
and
test
hlt
fcomp
out
mov
adc
push
jmp
loop
jne
push
std
push
push
and
aam
jne
mov
(bad)
mov
in
jge
mov
dec
jne
lea
test
sub
mov
sub
out
mov
adc
mov
mov
(bad)
jmp
or
mov
mov
sub
inc
push
retf
fneni(8087
mov
loop
jne
ins
je
fstp
jne
mov
or
or
ins
xchg
(bad)
cmp
pusha
mov
xor
repnz
test
cmp
cdq
repnz
je
loopne
inc
es
loopne
sub
mov
mov
adc
or
js
pop
or
xor
stos
hlt
out
ret
pop
in
jl
or
jg
add
call
inc
cmp
jne
daa
pusha
mov
or
scas
or
add
movs
aaa
adc
pop
fisttp
add
sub
push
test
adc
cmp
jne
mov
std
jo
or
fsubr
push
pop
(bad)
les
or
ins
mov
xor
cld
sub
(bad)
push
push
aad
fwait
bound
imul
imul
in
test
lock
daa
and
fst
cmp
mov
ror
movs
aas
jne
loopne
popf
jl
loop
adc
push
dec
cmps
mov
out
and
pop
add
mul
xchg
das
or
jmp
xchg
dec
outs
and
loopne
xchg
dec
inc
cmp
inc
push
je
mov
js
push
sub
clc
dec
jnp
pop
or
push
inc
adc
or
pop
xor
call
cdq
dec
mov
adc
add
call
push
inc
push
nop
daa
push
inc
xchg
mov
push
or
fst
arpl
cld
push
sbb
cmps
sub
inc
cdq
add
add
xchg
push
test
jne
add
cdq
add
and
pop
call
xchg
or
xchg
push
dec
add
das
fnstenv
sbb
mov
push
pop
sbb
xor
adc
add
cmp
ret
popa
pop
leave
jno
add
fwait
sub
cmp
pop
dec
jne
push
call
dec
cmps
lea
ret
push
push
xchg
xchg
imul
dec
push
imul
sub
sub
and
cmp
pushf
adc
mov
mov
xor
lea
jmp
ret
retf
xchg
out
outs
mov
mov
add
cmp
rol
adc
jp
or
aas
cmp
and
mov
ror
lea
(bad)
or
mov
dec
rcr
jne
jns
clc
hlt
enter
hlt
lock
jmp
jmp
push
mov
sti
(bad)
jmp
jno
ret
mov
dec
jecxz
(bad)
ror
xor
mov
(bad)
and
dec
add
icebp
xor
iret
dec
dec
leave
rol
ja
sbb
add
retf
scas
loop
or
and
jbe
ss
jnp
xchg
movs
push
pop
jmp
pop
or
or
mov
in
adc
inc
lds
jg
inc
dec
jne
mov
add
out
adc
je
cld
dec
jne
sub
test
inc
and
push
push
mov
in
das
aad
add
je
or
repnz
hlt
push
mov
test
lods
add
pop
lock
inc
(bad)
sbb
(bad)
or
pop
pop
ins
int3
dec
add
les
xchg
sbb
cld
jno
add
rcl
loopne
push
push
push
mov
or
mov
cmp
inc
fnsave
pop
push
call
add
pop
sbb
fcmovb
inc
das
pop
daa
fxch
out
jmp
out
rcr
push
fild
sub
push
jge
mov
push
shr
daa
xchg
dec
hlt
mov
daa
daa
mov
push
adc
adc
add
xchg
fiadd
or
pop
and
push
cmp
neg
jge
or
sahf
cmp
and
add
xlat
clc
inc
and
leave
hlt
xor
cmp
int
nop
rol
and
cmps
or
cmp
add
repz
mov
mov
xchg
sbb
add
test
loop
or
cmps
pusha
mov
jle
ror
cld
ins
cld
add
aam
cld
mov
mov
add
and
mul
in
and
push
and
pusha
loop
mov
push
sub
leave
mov
popa
or
adc
stos
add
mov
(bad)
mov
clc
lods
popa
and
push
nop
sub
pop
mov
movs
clc
or
adc
out
cmps
lods
leave
mov
lock
cmp
add
mov
mov
lods
push
sub
mov
pop
repnz
jg
in
and
hlt
cmp
xor
and
repnz
sub
xor
xchg
pmulhuw
jb
add
jne
cmp
cmp
jbe
sub
inc
add
add
push
arpl
xchg
mov
and
arpl
inc
(bad)
outs
jb
dec
popa
ins
gs
xchg
sbb
movs
popf
add
retf
pop
loopne
pop
add
stos
aam
xchg
push
jmp
xchg
outs
mov
popa
in
mov
pop
mov
dec
add
xchg
pop
lods
push
repz
sbb
repnz
repnz
xor
and
es
repnz
adc
jne
and
inc
xchg
shr
(bad)
and
xlat
jb
xchg
add
movs
xchg
aam
(bad)
xchg
mov
jecxz
mov
pop
aam
dec
pop
inc
jge
mov
in
into
and
push
ins
sub
test
mov
push
hlt
pop
cmp
sub
loope
cmp
cld
push
ja
fadd
loopne
mov
pop
mov
sub
xor
je
pop
pop
xor
std
outs
test
xor
jmp
sub
stc
out
xchg
sbb
fiadd
inc
repnz
mov
or
sahf
add
mov
add
mov
das
xor
dec
mov
fs
or
push
clc
add
or
imul
fisub
outs
xchg
and
dec
ss
adc
push
sub
add
in
inc
adc
fs
push
loopne
int
into
push
xchg
lahf
cs
arpl
dec
enter
popa
je
imul
outs
imul
and
pop
adc
aas
std
pop
push
push
push
jo
inc
outs
ins
fs
inc
mov
loopne
pop
adc
jo
jnp
jmp
and
or
pop
inc
aas
mov
pop
mov
inc
inc
dec
xor
lods
push
rol
outs
pop
push
dec
cmp
sub
mov
adc
cmc
bound
jns
fistp
pop
inc
push
cmp
inc
daa
push
inc
sbb
mov
mov
adc
inc
adc
mov
and
mov
dec
or
ror
jb
test
cmp
adc
ss
xchg
jns
fisttp
mov
jl
mov
ret
jg
pop
cmps
fbld
push
fwait
cmp
mov
nop
daa
aas
add
inc
ins
test
and
pop
mov
inc
test
data16
sub
sbb
pop
mov
call
inc
popa
ins
ins
inc
dec
dec
inc
jne
lock
aam
push
popa
jb
ins
test
mov
mov
int3
ret
add
lea
(bad)
push
ja
or
push
pop
sbb
add
or
fist
sbb
cmps
or
popf
ss
pop
inc
clc
pop
mov
inc
or
mov
sti
stos
pop
add
cdq
mov
imul
mov
(bad)
in
push
lods
pop
adc
inc
mov
push
or
push
xchg
pop
sub
daa
sbb
sar
pop
clc
lahf
dec
imul
push
pop
jmp
xchg
pop
adc
bound
out
daa
push
add
cld
xor
cmp
lods
mov
xchg
call
dec
test
and
mov
fsub
(bad)
or
outs
popa
and
pusha
adc
and
iret
lea
add
xor
call
push
aaa
push
pop
ins
add
ins
retf
dec
mov
push
(bad)
aad
pop
pop
ret
inc
jne
pop
(bad)
push
scas
xor
cmc
loopne
jae
loopne
js
fistp
ins
adc
pop
xchg
pop
add
adc
mov
xchg
jne
push
and
(bad)
lods
call
or
std
fmul
mov
xor
pop
sub
jne
fdiv
clc
jmp
xlat
add
lahf
ror
push
fs
(bad)
jl
cmc
push
jecxz
cs
sbb
shl
or
jae
in
(bad)
xchg
or
mov
jno
dec
loopne
push
add
je
or
xchg
dec
fmul
ret
outs
loope
cmp
push
push
push
dec
shl
fild
cmp
dec
xchg
fucom
ror
push
sbb
cmp
pop
inc
gs
push
outs
dec
daa
das
jg
pushf
mov
mov
arpl
(bad)
aaa
or
(bad)
jo
(bad)
sub
pop
(bad)
lods
das
push
mov
xor
jp
push
jle
pop
and
and
popa
sub
shl
jno
je
xor
inc
fbld
adc
push
sbb
lods
dec
pop
jne
mov
das
jmp
test
add
call
pop
add
nop
fbstp
dec
mov
std
xchg
mov
push
inc
inc
gs
push
push
in
sbb
popa
pop
dec
adc
outs
jae
enter
xor
push
ins
fimul
pushf
lods
stos
push
in
ret
push
imul
mov
out
mov
lock
jne
sub
and
push
add
inc
push
add
clc
clc
xchg
mul
lahf
pop
and
xor
cld
clc
inc
loopne
or
pop
push
fdiv
mov
and
sub
imul
xor
add
clc
push
xchg
add
imul
push
(bad)
and
and
mov
cmp
inc
loopne
jmp
gs
cmps
or
test
sub
push
inc
inc
adc
add
sub
push
push
push
(bad)
jno
inc
arpl
sub
inc
ret
cmp
cmps
pop
sub
or
push
lods
aad
and
and
mov
push
repnz
arpl
arpl
outs
jb
aaa
aas
fs
nop
add
pop
fs
mov
push
dec
cmp
in
inc
aas
int3
fs
in
push
loopne
dec
and
dec
shl
mov
daa
jno
lods
cmp
sub
bound
fiadd
loope
pushf
stos
cmp
lods
adc
lds
js
pop
sub
cmp
pusha
and
pop
dec
clc
and
ret
and
in
pop
in
mov
stc
fsubrp
int
nop
cdq
movs
dec
fild
inc
jecxz
sbb
gs
shr
xchg
sub
test
shl
fcom
jg
sub
addr16
dec
addr16
dec
daa
push
cmp
mov
lods
dec
(bad)
fmul
enter
test
dec
dec
jb
outs
es
loopne
mov
push
or
fisub
sbb
push
xchg
call
arpl
ja
inc
mov
scas
sbb
popf
inc
addr16
xchg
(bad)
inc
inc
push
push
cmp
pop
out
xlat
outs
dec
xor
ret
inc
push
jns
gs
imul
mov
pop
push
pop
cmp
cmp
ret
sub
stc
add
rsqrtps
in
stc
push
and
stc
ds
cmp
and
pop
xor
jmp
push
call
push
push
mov
cdq
or
nop
pushf
push
fs
clc
fcmovbe
sub
inc
scas
adc
add
and
test
repz
add
sbb
(bad)
inc
push
sub
int3
dec
dec
mov
pop
and
fucomi
test
and
push
mov
ins
push
mov
call
pop
adc
adc
jne
imul
or
cld
ror
xor
or
enter
call
in
xchg
or
sbb
xor
push
push
das
out
inc
add
popa
jns
sahf
adc
jl
sahf
in
fsubr
scas
xchg
mov
outs
(bad)
mov
int3
push
pushw
adc
mov
sub
push
sbb
nop
push
or
add
mov
in
ret
nop
ins
idiv
push
pop
test
add
ins
shl
dec
ins
movs
push
xor
add
inc
xchg
sbb
enter
daa
clc
bound
clc
call
in
add
mov
or
(bad)
xlat
jmp
and
mov
mov
daa
inc
in
in
and
pop
adc
inc
cmp
loopne
mov
fsubr
dec
add
xor
repz
add
jae
cld
(bad)
repz
add
xchg
fmul
push
mov
and
inc
push
inc
add
xor
mov
adc
add
mov
xor
mov
adc
jne
in
xchg
sub
in
jle
neg
shr
or
adc
pop
or
out
gs
mov
fist
jb
cmp
outs
jmp
jb
in
jl
jl
push
leave
mov
xchg
add
sbb
jb
dec
jne
jo
push
add
inc
adc
jo
mov
out
mov
add
fidivr
sub
mov
repz
pop
jo
pop
js
sahf
push
dec
enter
fimul
sub
sub
pusha
outs
inc
and
jb
push
call
movs
lea
inc
test
lea
pop
cwde
inc
sub
inc
dec
nop
mov
in
xor
mov
outs
adc
and
mov
cmp
bound
mov
pusha
jae
pop
cwde
pop
push
mov
mov
push
and
pop
jb
test
push
ret
cmp
jno
hlt
sub
push
and
sub
mov
add
int3
std
sub
mov
sbb
jo
cmps
adc
push
push
cmps
jne
mov
pop
adc
xadd
sub
repnz
fcom
adc
xchg
mov
xchg
add
or
neg
enter
adc
dec
loopne
add
and
retf
lods
ret
movs
pop
imul
test
outs
and
mov
push
and
cmp
xchg
inc
sub
jb
popf
inc
push
lock
test
push
adc
push
add
dec
add
push
add
(bad)
fimul
add
shl
dec
sbb
imul
xor
inc
cmp
pusha
jecxz
add
push
dec
cmp
iret
mov
gs
lods
add
add
js
add
inc
ret
je
xlat
sbb
scas
xchg
pusha
stos
pop
sbb
fs
cmps
pop
retf
in
adc
dec
leave
hlt
push
pop
js
movs
ror
and
nop
mov
adc
cmps
sub
ss
add
fsub
sub
add
pushf
dec
call
rcr
add
xor
add
lods
shr
inc
or
cmp
dec
jb
pop
adc
inc
and
add
mov
inc
jnp
sub
shl
addps
push
xor
daa
mov
les
lea
aad
scas
pop
add
dec
jb
ja
add
nop
inc
mov
mov
adc
cs
sub
jae
add
or
inc
imul
sbb
lea
cmp
lea
adc
mov
push
retf
mov
sbb
call
mov
inc
daa
call
jmp
movs
or
ins
dec
pop
outs
push
(bad)
xchg
shr
inc
jle
frstpm(287
jg
movzx
imul
push
aam
leave
fs
pop
cdq
and
and
or
daa
je
pop
sahf
rol
push
shl
rcl
cvttps2pi
movs
pop
mov
adc
cmpltps
cmp
hlt
sub
pop
mov
dec
mov
pop
xchg
neg
or
lock
loope
mov
cwde
ja
dec
test
test
add
test
xor
pop
push
ret
icebp
(bad)
test
push
and
dec
lds
sti
cmc
iret
lock
xchg
dec
xor
xor
mov
sub
movs
pop
cmp
js
cld
pop
or
mov
xlat
dec
js
pushf
add
in
mov
mov
cs
pop
adc
mov
fmul
push
mov
mov
and
lea
dec
add
xor
and
ins
adc
xchg
xchg
mov
in
sbb
movs
je
cdq
sbb
jmp
jle
xor
mov
pop
loopne
mov
mov
sbb
js
add
cmps
jns
leave
cli
bound
or
sub
lods
jne
cld
popa
xchg
jo
fbld
sub
inc
lock
outs
pop
pop
aam
jp
imul
sbb
nop
scas
inc
dec
lock
inc
jecxz
pop
js
in
xor
mov
push
sbb
imul
imul
sbb
jg
nop/reserved
enter
sbb
or
mov
dec
or
or
icebp
nop
push
jmp
xchg
(bad)
sbb
pop
xor
xchg
adc
stos
jnp
dec
loop
add
rol
dec
xchg
inc
pushf
add
pop
adc
inc
outs
cmp
mov
mov
pushf
div
mov
fmul
mov
enter
inc
inc
xor
xor
jnp
jo
push
sbb
mov
test
lock
pusha
add
push
adc
idiv
punpckhwd
je
cli
push
and
cmp
jne
sbb
cmp
sub
cmp
jl
jecxz
or
shl
rcr
je
das
pop
add
(bad)
jl
pop
pop
and
sub
push
(bad)
cmp
dec
out
pop
clc
lods
daa
jns
sbb
shl
ror
(bad)
and
jle
inc
loopne
popa
jecxz
test
push
inc
mov
add
rcr
pop
div
mov
test
sub
jae
adc
sar
pop
int3
rol
add
inc
aam
add
std
ficomp
aam
int3
and
add
test
clc
or
xor
push
adc
jo
add
hlt
jle
hlt
call
fsub
push
push
das
imul
adc
pop
pop
shl
pop
shr
or
(bad)
inc
stos
mov
xlat
mov
xor
mov
jle
or
and
imul
ins
pop
dec
call
je
imul
push
jo
arpl
loopne
loopne
add
adc
push
or
inc
stos
ss
in
pushf
out
inc
cmc
adc
daa
adc
jns
add
jb
movs
mov
cmp
push
fimul
sub
pop
xor
enter
pop
xor
mov
sub
or
xchg
lods
dec
and
and
xchg
imul
push
ret
or
(bad)
fdiv
test
test
push
imul
rcr
out
cdq
cmp
and
sbb
fs
fistp
adc
movs
cmp
fcomp
mov
test
inc
fisttp
shl
call
sub
sbb
and
or
push
dec
cmp
sub
cmc
ins
hlt
dec
bound
cdq
add
das
arpl
xchg
les
and
not
clc
daa
add
aaa
pop
pop
ss
sar
add
outs
jae
lods
inc
pop
popf
pop
or
pop
inc
jne
xchg
je
push
outs
outs
inc
ffree
clc
pop
push
jne
dec
loope
mov
stc
mov
or
push
push
push
xlat
or
fisub
test
inc
test
lea
lods
fnsave
xchg
inc
jp
cmp
(bad)
xchg
cmps
dec
les
or
pushf
xlat
push
ret
dec
clc
and
pop
fcmovnbe
pop
jg
mov
mov
ficomp
movs
and
adc
or
adc
and
mov
inc
fstp
push
lea
mov
inc
mov
push
pop
xor
jmp
mov
cmps
dec
aaa
pop
mov
add
popf
sbb
into
je
cmp
dec
cld
pushf
inc
fisub
in
push
push
les
sbb
sub
daa
inc
adc
loop
in
add
mov
popa
imul
arpl
pop
pop
sub
add
xchg
(bad)
sbb
cmps
loopne
add
ret
ds
push
mov
jmp
and
inc
or
adc
sub
test
sub
scas
std
xchg
mov
pop
ret
test
stc
cmps
test
add
jmp
mov
pop
mov
call
or
push
sbb
repnz
fst
pop
es
or
dec
pop
cld
jne
adc
sbb
lahf
adc
inc
mov
test
inc
(bad)
shl
or
iret
call
or
jno
cmp
clc
jno
adc
and
mov
mov
leave
int
sahf
fisub
fs
jbe
and
mov
cmp
or
sti
lds
lea
test
adc
imul
mov
mov
sar
inc
int
push
or
fadd
jno
xor
das
add
sub
cmp
test
pop
enter
fcom
lds
push
in
add
inc
ret
inc
or
sbb
inc
mov
sbb
inc
test
out
clc
rcl
aam
aam
je
imul
adc
leave
or
outs
scas
ror
das
xor
mov
push
push
retf
pop
cmp
leave
sub
pop
mov
xchg
push
and
jo
adc
mov
arpl
pop
mov
jle
and
cli
xor
mov
in
dec
loopne
dec
cli
jge
scas
test
push
and
adc
sub
mov
iret
inc
push
pop
repnz
js
mov
push
imul
mov
bound
retf
xchg
cmp
xchg
sub
mov
shl
sbb
repnz
lods
or
sbb
pop
adc
call
push
xlat
je
mov
xor
ret
xchg
and
inc
jno
sbb
inc
jne
xor
push
sub
jns
imul
sub
mov
dec
sub
rcl
sub
adc
scas
ror
lea
fiadd
ss
adc
test
jecxz
mov
jne
push
and
add
sbb
fld
or
sbb
and
cli
popa
test
mov
(bad)
or
fimul
dec
daa
adc
cmp
inc
sub
aaa
jl
add
adc
mov
pop
in
retf
mov
and
les
add
or
ja
cmp
add
fs
test
xor
inc
or
iret
dec
lock
and
fwait
xchg
mov
fwait
retf
imul
lds
ja
sub
out
or
cwde
jp
jmp
adc
dec
adc
xchg
inc
xchg
out
lea
jg
test
dec
add
iret
repz
mov
(bad)
adc
popa
or
mov
mov
out
loopne
dec
inc
mov
xchg
adc
ss
pop
bound
lds
dec
ficomp
add
xchg
mov
mov
or
cmps
ret
jo
imul
outs
sub
sub
imul
inc
es
or
jns
inc
adc
inc
jb
mov
ins
mov
dec
adc
mov
sbb
add
or
adc
add
scas
data16
hlt
push
outs
add
or
pcmpgtw
int3
adc
xchg
xchg
xchg
or
pop
movs
push
retf
mov
dec
xor
mov
lock
test
ror
sbb
and
or
mov
dec
pop
aaa
inc
or
mov
push
pop
dec
lock
hlt
lods
sub
dec
sbb
adc
push
cld
or
movs
sbb
pop
xchg
and
popf
and
ins
enter
inc
ja
nop
call
adc
dec
jne
cmp
mov
push
adc
add
fnstenv
pushf
fbstp
mov
dec
clc
sbb
mov
mov
cmp
aam
or
in
mov
cmp
and
sub
push
jo
adc
ss
aad
mov
xor
add
mov
sbb
pop
fadd
add
dec
push
lahf
mov
xor
es
cmps
add
pop
push
shl
push
popa
jb
addr16
repnz
mov
add
push
fs
adc
pusha
push
pop
adc
lock
pusha
rol
ins
enter
into
dec
clc
lock
dec
dec
xchg
hlt
(bad)
fiadd
jge
xor
jae
cmp
mov
outs
xor
xor
enter
dec
dec
gs
push
ret
dec
xor
xchg
add
cmp
xor
adc
sub
ss
js
pop
scas
mov
add
nop
xor
outs
cmp
jnp
jns
mov
inc
and
add
adc
enter
add
xlat
add
leave
das
sub
lock
pop
adc
rol
dec
repnz
nop
adc
arpl
mov
sub
gs
rcl
rol
push
lods
cmc
adc
fld
gs
pop
fnstcw
mov
add
pop
jp
call
je
pushf
les
nop
test
fldenv
and
pop
add
int
mul
dec
lds
add
add
fwait
jge
jl
jne
mov
cmp
inc
add
je
jl
inc
jbe
mov
add
mov
jnp
fld
jmp
pop
pop
jle
fs
enter
test
push
or
movs
dec
(bad)
jp
call
call
fistp
sbb
loope
xor
mov
sub
push
mov
aad
xchg
cwde
gs
cs
fstp
sbb
test
pusha
loope
lods
mov
enter
mov
dec
test
loop
push
mov
sbb
sbb
rcl
sbb
pop
or
stos
push
pop
outs
inc
test
sub
shl
pop
pop
jge
out
and
xor
dec
jae
outs
ja
push
jb
test
call
or
das
(bad)
mul
and
adc
pop
sub
fisttp
dec
push
inc
push
pop
js
pop
sbb
dec
adc
add
call
lock
scas
inc
div
or
std
cmc
jno
xchg
inc
mov
pop
mov
cmp
sbb
cwde
and
(bad)
push
dec
imul
and
not
mov
aam
xor
jno
lahf
sub
les
int
test
aas
movs
add
pop
push
push
inc
dec
mov
mov
inc
dec
jno
adc
not
neg
jbe
das
outs
ins
pop
push
adc
scas
sub
movs
add
lds
jo
pop
fistp
jge
mov
mov
mov
inc
cld
in
pop
(bad)
dec
mov
test
dec
lods
xchg
sar
xchg
mov
cld
repnz
dec
loope
adc
test
loop
shl
jbe
sbb
jecxz
call
sub
popa
sub
aad
or
push
sub
loopne
pop
bound
and
mov
inc
pusha
mov
mov
sub
lea
jne
cmp
in
cmp
mov
cmp
retf
and
adc
cmp
cmp
and
cld
cdq
push
dec
push
add
inc
and
loop
fbld
and
aas
imul
xor
test
and
test
ret
add
inc
and
arpl
sysret
shl
lods
xor
in
add
sbb
mov
jmp
pusha
cmps
hlt
cmp
mov
jo
mov
inc
dec
adc
inc
xor
fcmovnb
dec
rol
aaa
arpl
pop
out
cmp
jle
jne
outs
lds
jl
mov
push
and
sahf
rol
dec
cmp
adc
lock
test
mov
sub
jg
push
mov
cmp
imul
ins
mov
lock
ins
dec
sbb
popf
dec
jne
xor
test
xor
mov
mov
sub
adc
push
and
jo
scas
cmps
or
sbb
stos
dec
adc
adc
popf
inc
sbb
jl
rcr
or
sub
push
sbb
cld
pop
push
push
add
adc
cmp
rol
inc
dec
xchg
sbb
out
leave
xor
dec
and
push
sbb
imul
in
sbb
and
add
pop
fidivr
jle
adc
mov
xor
aam
sub
jecxz
mov
jbe
cmp
in
test
add
jno
sti
mov
or
hlt
jle
adc
xchg
shl
mov
hlt
mov
cmp
pop
rol
jo
mov
sub
xchg
(bad)
adc
enter
lea
addr16
fdiv
fsubr
(bad)
mov
pop
fiadd
sbb
and
(bad)
mov
mov
sub
xchg
popa
stos
inc
aas
rol
aaa
rol
fs
pop
mov
or
popf
jge
xchg
jb
inc
or
push
add
add
in
enter
adc
push
scas
cmp
mov
shr
mov
sub
cld
jecxz
sub
lahf
mov
test
fcomp
pop
in
sbb
inc
push
aam
and
ins
int
cmp
jo
test
fsub
jl
lock
xlat
imul
xor
loop
mov
push
gs
jo
dec
inc
cmp
cmp
and
rcr
xchg
add
cwde
cwde
ficomp
push
pop
ins
mov
inc
or
inc
pop
scas
fidiv
mov
sub
pusha
dec
mov
inc
je
sbb
sbb
and
ins
clc
sub
cs
add
push
hlt
xor
sbb
out
out
add
inc
mov
push
jns
and
call
shl
xlat
xor
clc
add
les
inc
into
push
movs
adc
nop
sbb
adc
add
xor
ficom
in
and
mov
jge
and
test
inc
lods
neg
ins
inc
test
or
xchg
loopne
popf
mov
cdq
repz
dec
add
lock
ss
inc
imul
gs
lds
das
pop
movs
and
adc
dec
(bad)
sbb
adc
popf
pop
push
imul
pop
add
or
pop
and
add
adc
pop
jl
push
or
outs
test
push
and
bound
(bad)
cmp
mov
or
sar
loopne
out
xchg
push
hlt
push
push
inc
add
dec
cmps
xchg
pop
dec
jmp
imul
cmps
xor
fisubr
or
(bad)
fisubr
xchg
or
pop
xor
sbb
ins
pop
adc
and
fs
into
inc
cdq
call
jmp
jmp
(bad)
ins
dec
push
stc
dec
xor
mov
sbb
lods
push
push
pop
add
and
enter
in
inc
pop
ret
mov
nop/reserved
cmp
pop
push
pop
dec
dec
dec
scas
mov
pop
sbb
pop
push
jbe
and
jae
push
mov
mov
push
adc
sub
inc
test
or
xor
cmps
cmps
add
shr
ins
pop
pop
sbb
aam
xchg
inc
les
inc
js
ins
retf
in
cmp
enter
hlt
int
fwait
in
push
iret
das
ins
ror
enter
xor
pushw
adc
xor
les
retf
in
pusha
(bad)
cld
ret
ror
cmp
push
pop
and
shl
pop
cmp
push
outs
jo
pop
pop
and
enter
dec
pop
jb
mov
fcmovnu
dec
sahf
mov
xor
push
(bad)
pop
mov
call
push
cld
xor
mov
and
inc
fs
mov
adc
fstp
xchg
pop
sub
push
push
psubusb
in
ins
test
mov
cwde
loope
push
or
lea
cmps
pop
stos
loope
bound
in
ins
test
mov
scas
nop
sbb
push
xchg
and
inc
bnd
or
(bad)
mov
xchg
test
fsub
cmovno
mov
sete
xchg
xchg
cwde
cdq
sbb
fwait
pushf
push
rol
add
enter
jns
inc
invd
add
lods
push
inc
sub
sbb
pusha
or
add
add
add
pop
pop
mov
xchg
sub
ja
icebp
adc
pop
stos
mov
loop
inc
pop
lods
aaa
push
popa
sar
xchg
fcmovb
sub
fs
pushf
not
mov
aaa
stos
or
out
pushf
mov
fild
add
inc
ror
cmp
add
pop
gs
mov
xlat
dec
inc
or
jne
sbb
lods
in
adc
aam
sub
add
adc
enter
jno
repz
sar
push
rcl
and
call
pop
inc
or
add
les
loopne
dec
add
mov
call
int
pop
xor
and
idiv
call
popa
mov
dec
mov
adc
dec
in
pop
ja
bts
mov
inc
fcomp
cmp
inc
(bad)
in
cld
lahf
add
jo
ins
inc
add
pop
pop
into
inc
jb
test
adc
xlat
int3
(bad)
nop
and
add
(bad)
adc
fs
je
mov
xchg
xor
or
add
xchg
outs
ror
cld
out
scas
pop
inc
scas
cwde
ins
fwait
cmps
imul
aaa
lsl
fld
ss
jp
call
lahf
in
stos
xchg
inc
hlt
bound
scas
nop
ret
inc
cmp
cmps
shl
daa
jns
sub
inc
jmp
fs
stc
inc
cmp
mov
clc
daa
pop
rcl
jne
cmp
enter
dec
and
add
dec
mov
int3
shl
mov
mov
aaa
mov
sbb
lea
add
jecxz
jecxz
inc
retf
mov
scas
dec
cmp
enter
lds
dec
rol
and
pusha
mov
cmp
std
inc
and
dec
scas
lea
or
or
pop
mov
mov
dec
ror
(bad)
xor
mov
nop
and
loopne
mov
out
sub
(bad)
or
js
inc
add
or
(bad)
shl
ins
out
or
sub
mov
jne
jmp
imul
push
pop
sub
or
and
xchg
nop
xchg
mov
sbb
inc
mov
jb
loopne
int3
aad
mov
lea
imul
inc
(bad)
ins
scas
(bad)
daa
jecxz
inc
out
push
dec
imul
inc
jo
jae
adc
and
push
and
mov
add
inc
and
test
je
jl
adc
push
adc
call
cmps
scas
jns
bnd
cdq
loopne
lods
aaa
mov
add
scas
add
xor
ret
mov
mov
xor
jns
mov
sub
or
push
sbb
xchg
(bad)
mov
out
sbb
add
retf
mov
int3
enter
es
mov
pop
imul
lds
aam
and
sub
adc
pop
xchg
and
add
(bad)
stos
adc
mov
rol
add
dec
(bad)
or
add
mov
sub
pop
addr16
outs
and
lahf
xor
or
add
in
or
es
jne
inc
sub
mov
test
pop
sbb
lods
scas
inc
in
xor
stos
cmc
es
fiadd
xchg
or
fidiv
(bad)
retf
mov
mov
mov
jns
dec
gs
xchg
mov
push
mov
xchg
fstp
mov
mov
or
jne
and
mov
cmp
movs
(bad)
pop
xor
add
and
in
icebp
js
fdiv
push
inc
fadd
and
sbb
in
scas
je
sahf
gs
int
cmp
push
ror
sub
push
inc
push
(bad)
xor
mov
jnp
push
inc
push
jns
inc
adc
and
rol
dec
movs
adc
push
addr16
sub
jb
add
add
fcos
sub
jb
sub
je
add
adc
clc
add
or
lods
mov
push
adc
rcl
mov
add
cmp
dec
mov
add
imul
cmp
dec
jge
sbb
sub
inc
sub
sbb
jmp
cmp
mov
push
pcmpeqb
push
adc
xor
int3
dec
mov
add
rcl
sub
push
add
cmp
add
mov
fldenv
xor
push
jmp
mov
mov
mov
sbb
ds
nop
dec
add
cmp
and
ret
adc
dec
pusha
jne
ror
repnz
sub
inc
mov
jae
sbb
lea
ret
fistp
mov
push
dec
(bad)
(bad)
ins
mov
cmp
dec
add
int3
shr
pop
push
retf
jb
or
adc
pop
and
jnp
icebp
cmp
mov
jb
mov
aad
push
add
inc
(bad)
enter
jns
or
xor
xor
das
pusha
test
ja
cmp
int3
sub
push
imul
xchg
adc
gs
sbb
fbstp
shr
pop
or
and
dec
add
add
jne
scas
push
ins
or
mov
mov
imul
loop
enter
sub
in
or
js
xchg
or
fisttp
mov
adc
jo
xor
jne
mov
movs
cmp
js
jne
clc
dec
adc
nop
out
cmp
and
and
pop
lea
pop
add
xor
or
jmp
in
add
aas
jne
ins
(bad)
fs
jmp
aas
push
xchg
inc
mov
imul
push
idiv
mov
pop
mov
or
mov
mov
or
xchg
pop
mov
retf
mov
pop
cmp
jg
adc
cwde
aaa
out
push
in
pop
xchg
and
pop
cmp
addr16
push
pop
jne
mov
add
in
and
and
adc
jecxz
sub
jmp
pop
dec
and
jp
push
enter
xchg
pop
popf
scas
fsubr
mov
dec
adc
es
mov
adc
cmp
mov
inc
mov
test
add
popf
stos
push
ins
push
les
mov
pusha
not
cmp
arpl
push
out
mov
call
push
lods
inc
adc
jmp
pusha
xchg
and
in
(bad)
fdivr
sar
lock
fadd
add
jnp
ret
or
cmp
jmp
adc
dec
jo
dec
inc
mov
push
add
jmp
ss
and
dec
cmp
stos
push
push
nop
out
inc
and
add
ror
jmp
das
outs
or
jbe
aaa
das
ds
adc
and
sbb
lds
test
mov
or
shl
pushf
call
outs
dec
add
rcl
sub
pop
add
jne
retf
inc
push
das
jb
and
(bad)
dec
ds
mov
xor
dec
adc
adc
add
dec
and
mov
add
in
sub
lea
cld
xchg
mov
xor
std
loopne
add
ror
or
xchg
inc
cmp
mov
dec
pop
add
pop
inc
jmp
loop
mov
mov
add
add
mov
or
xor
inc
cmps
jmp
inc
xor
ja
clc
xlat
xor
ficomp
dec
and
mov
imul
call
loop
fsubr
or
pop
add
dec
ret
rol
jg
cmp
inc
(bad)
scas
add
mov
(bad)
mov
in
repnz
ret
pop
leave
dec
push
and
ret
jb
mov
push
sub
jb
push
sbb
push
cwde
es
jp
mov
jns
cmp
leave
out
mov
cmp
aaa
and
call
arpl
adc
add
popa
cld
mov
sub
ret
jmp
mov
inc
sub
mov
push
sbb
mov
mov
pop
pop
inc
mov
rcl
inc
or
and
gs
xor
inc
pusha
or
jne
scas
sub
adc
dec
adc
push
mov
(bad)
mov
sbb
sub
pusha
and
mov
aam
dec
test
pop
mov
sbb
lds
adc
sbb
mov
or
push
repz
push
dec
or
inc
aas
add
adc
add
sbb
pop
and
popf
call
aad
push
mov
xchg
xchg
lds
or
dec
repz
call
(bad)
mov
xchg
dec
push
and
pop
(bad)
pop
test
ins
int
inc
mov
xchg
retf
aad
lds
in
enter
xchg
inc
(bad)
in
cmp
pop
repz
mov
jb
adc
call
mov
pop
xchg
shr
les
(bad)
cmp
push
dec
(bad)
jb
or
mov
scas
sub
popf
loopne
dec
sahf
xor
retf
pop
adc
and
adc
ja
sub
push
dec
pop
add
push
mov
loopne
cdq
add
in
inc
(bad)
xlat
inc
cmps
push
xor
lds
jg
dec
xchg
test
push
xor
jmp
ins
popa
adc
inc
fadd
inc
inc
or
and
hlt
repnz
sbb
mov
cmp
sbb
mov
or
mov
dec
or
rcr
sub
scas
retf
leave
loopne
add
enter
add
push
or
imul
mov
cmp
add
test
or
nop
pop
pop
mov
push
mov
sbb
dec
mov
in
fistp
scas
jne
push
out
cmp
xor
add
or
pop
nop
jmp
pop
push
sbb
mov
jmp
push
xchg
jmp
ds
jmp
sbb
xor
or
fucomp
fnstsw
xor
ja
or
inc
out
xchg
retf
cmp
xchg
arpl
cmps
or
mov
and
push
inc
cmp
retf
jmp
sar
dec
cmp
shr
sahf
mov
inc
fadd
test
lods
retf
xchg
sbb
inc
or
dec
inc
add
pop
les
icebp
or
test
mov
mov
ja
int3
fisttp
adc
dec
aas
mov
sbb
adc
fs
jne
xor
mov
pop
mov
push
test
xor
push
test
pop
stos
jo
mov
fmul
fadd
mov
xor
mov
sbb
sbb
cwde
adc
xchg
push
adc
mov
sub
mov
leave
ret
les
out
xchg
daa
or
add
or
jae
add
sub
inc
test
or
xchg
mov
cmp
inc
inc
scas
inc
pop
push
inc
add
in
rol
clc
ret
aas
in
in
lock
cmp
adc
bnd
jmp
fmul
add
mov
fcom
imul
push
inc
dec
cmp
pushf
inc
cld
mov
xchg
adc
sbb
cwde
sub
or
jns
push
dec
int
cmp
adc
int
ret
(bad)
inc
out
adc
xor
(bad)
stos
inc
aad
add
lods
inc
popa
popf
push
mov
xor
add
cli
neg
inc
mov
dec
sub
jb
fldenv
test
loopne
or
in
sbb
jo
fstp
or
popf
push
pop
fdivr
lock
jo
add
mov
int
inc
adc
rcl
cdq
hlt
mov
dec
rol
iret
fcomp
add
mov
push
inc
push
(bad)
or
pop
shl
rcr
sar
pop
add
mov
add
or
xor
mov
ins
mov
into
ror
arpl
pop
and
pop
or
mov
inc
inc
add
imul
and
mov
int3
cmp
test
mov
loopne
pop
imul
mov
sbb
push
or
popf
xchg
mov
xor
inc
mov
dec
ja
pop
sub
xor
or
test
repz
rcr
popa
mov
inc
mov
pop
xchg
das
push
pusha
inc
cmp
inc
add
sbb
mov
bound
add
inc
in
lods
xor
push
dec
add
push
in
dec
pop
push
and
jo
in
call
sbb
call
repz
inc
shl
in
xor
or
mov
test
dec
adc
sti
das
and
mov
mov
pop
jbe
in
mov
cs
out
call
mov
xor
ins
sbb
xor
shl
xchg
xchg
push
ficomp
xchg
call
out
(bad)
adc
adc
cld
in
rol
jmp
mov
sub
pop
jnp
adc
pusha
add
aas
lods
and
(bad)
push
hlt
iret
stos
in
adc
push
mov
lock
mov
pop
lock
fmul
xchg
in
adc
dec
sub
mov
lock
xor
fimul
arpl
sbb
or
inc
add
clc
xchg
or
sbb
jp
mov
test
dec
and
mov
or
cmp
dec
pop
jecxz
test
pusha
add
outs
xchg
jmp
sub
ins
call
(bad)
(bad)
sbb
jmp
and
(bad)
or
add
or
dec
movs
bound
mov
inc
dec
imul
int
push
aaa
sahf
push
add
arpl
aaa
mov
mov
mov
adc
mov
inc
mov
xchg
pop
ins
aaa
out
mov
ret
and
xchg
cmp
fistp
sub
ins
push
lahf
mov
mov
aad
inc
xchg
add
dec
jmp
stc
xor
xlat
mov
cs
mov
aas
pop
pop
enter
adc
xchg
ins
xchg
cmp
sbb
xor
sbb
push
dec
rcr
xor
jmp
jne
lods
shl
mov
call
jl
lock
sbb
scas
lock
sbb
enter
push
enter
inc
or
sbb
mov
dec
jnp
sbb
or
xor
dec
dec
xor
sub
sar
in
test
or
adc
lea
cmps
jge
movs
test
jl
sub
or
sbb
cmps
mov
sbb
mov
das
inc
cs
add
xlat
movs
pop
in
push
dec
adc
pop
add
ds
(bad)
push
and
out
cmp
stos
sbb
push
xor
sbb
fcomp
dec
mov
or
and
les
sub
pop
mov
mov
push
popa
js
xor
das
rol
lock
dec
inc
bound
xlat
sbb
out
cmps
lock
dec
sub
inc
and
xor
or
jmp
shr
pop
cmp
mov
scas
daa
dec
jmp
test
sub
adc
xchg
push
and
test
inc
in
gs
push
xchg
inc
test
loopne
shl
xchg
add
lock
mov
mov
or
push
sti
jmp
or
repnz
sub
sub
mov
mov
adc
lods
push
add
inc
push
pop
rol
mov
and
(bad)
shl
push
and
add
inc
cmp
(bad)
call
xor
sbb
mov
dec
aam
mov
xlat
mov
fadd
push
cmp
adc
xchg
fisttp
rol
xchg
nop
add
loopne
cld
fucomi
fimul
outs
cwde
mov
arpl
push
cmp
push
add
cmp
sub
adc
add
addr16
add
jne
xchg
dec
jmp
scas
loopne
aaa
jl
add
pusha
inc
es
in
(bad)
es
ret
ins
xchg
jl
test
adc
test
fiadd
sub
jb
mov
movhlps
call
and
das
imul
imul
ins
add
push
sbb
and
jmp
xchg
out
push
ins
(bad)
fucomip
aam
cmps
mov
mov
cmp
and
sbb
or
stos
dec
in
dec
shr
in
loopne
or
cdq
in
daa
sbb
(bad)
in
mov
test
icebp
sub
ret
push
(bad)
mov
mov
add
nop
xchg
in
add
les
addr16
loope
sbb
hlt
add
in
inc
repnz
loope
and
stos
jg
loope
mov
mov
pop
mov
leave
add
push
ins
add
or
in
sbb
add
fsub
outs
mov
inc
push
xchg
pop
adc
inc
aas
sbb
mov
push
fs
pushf
rol
test
in
pop
pop
xor
iret
(bad)
or
dec
add
sbb
pop
pop
ret
xchg
pop
mov
push
in
das
(bad)
jecxz
xchg
pop
add
out
push
sbb
clc
sbb
pop
sbb
jns
add
add
and
mov
test
sbb
add
mov
in
in
mov
sub
jmp
and
mov
push
mov
cs
test
dec
and
add
and
add
inc
outs
addr16
clts
cwde
sub
add
pop
cmp
outs
or
pop
jbe
push
ret
or
pop
mov
imul
or
inc
dec
jmp
imul
outs
ss
or
pop
sub
jmp
pop
fs
push
cld
into
cmp
arpl
imul
arpl
loopne
jmp
gs
outs
arpl
jo
popa
fs
jo
mov
jae
jae
outs
jbe
ins
or
mov
push
adc
imul
sub
arpl
arpl
jns
and
out
push
or
popa
mov
push
cwde
ja
add
dec
outs
mov
or
popa
arpl
add
and
cmp
ins
sub
cs
jecxz
out
dec
out
out
add
adc
aaa
inc
pop
inc
jae
adc
call
ds
mov
loop
add
cdq
push
xchg
cmps
mul
dec
inc
ins
sub
xchg
and
and
movs
imul
or
es
psubusb
sahf
mov
push
ja
call
stos
dec
call
inc
inc
pop
pusha
js
adc
pop
or
add
call
inc
aad
in
ficom
fwait
outs
or
dec
add
dec
outs
outs
jo
mov
or
or
add
or
outs
jae
nop
jl
cdq
pop
sub
fnstcw
jmp
add
push
inc
cmp
idiv
inc
pop
inc
pop
inc
aas
call
mov
ja
inc
sbb
sbb
add
xchg
popa
wrmsr
xor
cdq
mov
jbe
fiadd
sbb
mov
loope
mov
lea
dec
or
ins
cmp
loopne
push
xchg
cmp
dec
push
sub
or
xor
add
mov
mov
inc
pop
xor
xchg
inc
fistp
or
xor
jl
je
push
xor
xor
push
(bad)
jmp
adc
hlt
push
jmp
mov
push
(bad)
jge
std
add
in
jo
jne
add
push
bound
outs
sbb
pop
pop
pop
in
pop
mov
cmp
sbb
jecxz
jbe
nop
into
pop
sbb
in
add
fstp
push
or
cmps
icebp
pop
test
dec
inc
(bad)
cdq
mov
mov
pop
dec
in
fbld
in
aam
scas
inc
pop
pushf
sbb
pop
inc
or
mov
pop
and
dec
or
std
in
sub
pop
mov
enter
out
mov
add
test
pop
fadd
loop
dec
imul
jo
popf
push
add
cmc
fwait
inc
add
push
jb
inc
(bad)
jp
inc
jg
out
inc
adc
lock
out
ret
adc
test
dec
cmp
or
mov
and
aad
dec
retf
inc
add
dec
sbb
lods
cmp
sub
xor
jb
imul
ins
sbb
cwde
lock
mov
nop
retf
lock
adc
cmp
pop
or
mov
lahf
ins
pop
xor
push
leave
cs
enter
sbb
jl
or
dec
gs
push
sub
add
nop
inc
mov
sub
jg
add
leave
or
daa
pushf
repnz
add
sub
fdiv
aad
cmp
mov
shr
in
cmp
pop
pause
repz
in
and
sub
leave
adc
cmp
outs
imul
pop
inc
push
sbb
ins
out
mov
jmp
mov
rcl
push
xchg
out
cmc
mov
cmc
fsubr
add
pop
ret
mov
jne
mov
add
out
stc
outs
sar
pop
push
push
fs
lds
fidiv
or
dec
xor
dec
imul
popa
js
dec
aaa
(bad)
mov
jne
sbb
idiv
inc
daa
push
push
iret
nop
add
pop
push
fs
sbb
popa
jle
jb
arpl
sbb
push
cmp
or
lods
or
sbb
ficom
std
mov
mov
add
xchg
pop
pop
push
sub
xor
inc
inc
pop
sub
nop
or
outs
in
or
lea
or
dec
call
dec
inc
paddb
iret
dec
outs
je
inc
loope
(bad)
sub
je
or
dec
arpl
daa
in
and
test
jo
adc
mov
dec
add
fucompp
lods
add
in
mov
add
clc
(bad)
ret
sbb
adc
and
pop
std
lods
daa
jbe
pop
imul
enter
lods
stc
in
(bad)
stc
dec
push
or
fsub
loopne
adc
xor
push
jbe
pop
sbb
dec
pop
push
inc
add
sub
sbb
pusha
sbb
pop
jle
push
imul
or
dec
jae
arpl
cs
cmp
das
cmps
cmps
and
sti
imul
sbb
or
nop
mov
and
inc
xchg
scas
loopne
xchg
jmp
cld
xor
in
inc
xchg
push
push
aaa
and
sub
mov
adc
push
sub
test
ror
and
add
or
sbb
xor
(bad)
pop
dec
adc
(bad)
mov
or
add
add
rcl
ror
add
adc
mov
mov
dec
shl
cli
outs
push
mov
add
inc
add
sbb
xor
inc
or
stos
jmp
cmps
adc
adc
shl
jno
cmp
adc
js
pop
sbb
bound
or
sbb
or
or
push
sbb
sub
outs
cmp
les
fdivr
and
cli
inc
jmp
shl
icebp
adc
mov
es
jb
outs
pop
or
sbb
xor
dec
xor
jnp
or
dec
inc
(bad)
mov
inc
outs
popa
bound
ror
xor
inc
add
add
(bad)
cmps
inc
add
push
inc
popa
push
fst
mov
adc
sbb
sbb
jno
test
pop
add
add
mov
das
mov
(bad)
or
add
xor
and
(bad)
adc
add
push
lea
cmps
inc
pusha
xor
rcl
out
mov
add
push
add
outs
stos
add
loopne
cmp
sub
mov
inc
add
add
inc
cmps
and
call
je
xor
xor
push
inc
jne
xchg
xchg
inc
mov
hlt
ds
ror
stos
fistp
or
xchg
stos
shl
pop
sub
test
push
push
popa
jb
lods
shr
xor
or
not
or
or
out
shl
addr16
pop
pusha
inc
push
test
push
test
xor
push
cmp
sub
or
test
inc
or
cmp
rcl
inc
dec
push
add
cs
and
mov
push
adc
ins
mov
sbb
push
dec
std
pop
sbb
mov
mov
cmc
retf
sbb
or
or
mov
sti
std
or
push
fst
inc
rcl
add
jmp
pop
inc
pop
ja
or
mov
push
cwde
test
xor
dec
mov
fdiv
pop
ss
push
or
les
pop
or
cmps
pop
sub
jl
sub
div
mov
add
sub
dec
adc
push
dec
popa
xor
test
into
mov
xor
scas
cmps
add
or
push
adc
div
pop
pushf
das
and
push
push
nop
cmp
pop
or
sahf
pop
push
add
(bad)
loopne
or
mov
or
or
cwde
(bad)
cmp
add
inc
or
dec
add
push
mov
cwde
xor
push
and
ds
outs
addr16
add
pop
mov
scas
popa
push
mov
test
leave
xor
sbb
push
(bad)
jmp
add
push
ret
or
aaa
add
pop
xchg
pop
ror
(bad)
push
pop
inc
pop
mov
pop
mov
or
pop
ror
adc
sub
sub
mov
mov
fistp
dec
mov
hlt
cmp
imul
adc
or
add
sub
or
data16
jae
inc
inc
(bad)
inc
push
add
sbb
outs
push
add
xchg
fcom
pop
sub
sub
push
push
dec
outs
fs
add
frstor
iret
mov
dec
idiv
inc
fs
ins
cmovbe
in
pop
mov
imul
pop
mov
scas
add
add
cmovb
shl
lods
in
pcmpgtb
inc
pop
push
cs
push
fistp
push
push
xor
jmp
in
cmovge
xor
rcr
adc
or
stc
pushf
or
test
push
out
rcr
jnp
sbb
jge
dec
and
rol
push
stos
adc
icebp
test
sbb
cmp
xor
jmp
mov
loopne
add
(bad)
int3
dec
push
cmp
xchg
jl
push
or
rcr
outs
or
mov
outs
jb
or
inc
add
sub
aam
xchg
lock
je
retf
or
dec
inc
inc
inc
dec
xlat
or
mov
cmp
jne
push
les
and
pusha
push
or
and
aas
adc
scas
push
or
push
inc
push
pusha
push
gs
(bad)
jo
pop
push
xchg
adc
adc
pop
add
xor
test
dec
outs
inc
imul
mov
adc
push
push
jb
shl
jns
dec
dec
cmp
cmp
push
xchg
icebp
push
jns
jb
jge
pop
and
add
jbe
jl
stos
cmp
loopne
and
xchg
and
sub
cmp
or
mov
pusha
fs
imul
cmp
or
cld
lahf
mov
imul
push
push
rcl
adc
adc
scas
or
push
pop
sbb
xchg
and
add
dec
or
popa
clc
xor
fdiv
loop
sbb
push
mov
push
pop
dec
dec
push
pop
or
dec
and
mov
pop
pop
pop
cs
sub
pop
inc
xor
dec
scas
inc
or
mov
adc
pop
and
pop
dec
pop
add
fist
sbb
sbb
push
add
push
sub
or
aam
add
add
loop
popa
pusha
mov
adc
leave
and
add
inc
sub
add
adc
xor
add
mov
and
jmp
inc
dec
addr16
mov
ret
ds
dec
ins
bound
inc
dec
dec
pop
ds
sbb
push
jb
sbb
push
mov
push
xor
push
cld
sbb
(bad)
movs
push
rcr
dec
pusha
sbb
in
add
add
push
pop
dec
add
cmp
sub
mov
adc
les
or
out
or
and
add
or
sbb
rol
pop
add
int3
adc
nop
sub
js
call
or
push
pop
stos
pop
xchg
and
cmps
add
repnz
sbb
jmp
pop
arpl
inc
daa
pushf
lods
or
mov
clc
inc
jne
ins
mov
pop
dec
loope
pop
dec
gs
sub
mov
or
jb
or
inc
or
or
or
inc
jge
jo
rol
push
dec
inc
or
add
inc
sub
adc
fiadd
aaa
cmp
mov
adc
adc
pop
cmp
and
adc
in
mov
push
inc
sub
bound
not
xor
and
push
or
dec
pop
sub
push
xchg
add
cmps
add
sbb
push
cmp
mov
ins
in
movs
add
popf
sahf
(bad)
xchg
sub
lahf
fild
dec
add
ins
xor
and
fdiv
pop
xlat
push
mov
sbb
mov
daa
jae
pop
in
mov
ucomiss
and
in
dec
sbb
cs
sub
inc
in
dec
push
and
pop
cmps
dec
(bad)
mov
add
test
pop
sub
sbb
add
clc
adc
inc
stc
les
fcomp
or
mov
jbe
repz
mov
sbb
xchg
(bad)
aam
add
mov
and
mov
mov
cmp
jle
jge
pop
sbb
inc
sahf
xor
adc
outs
xor
fwait
inc
inc
and
sbb
ror
loope
lock
cmc
xor
jnp
mov
out
or
mov
lods
xchg
add
mov
xor
jne
mov
mov
retf
mov
or
xor
cmps
xor
push
std
cmps
or
xor
std
and
je
xor
ror
pop
inc
mov
pop
cdq
pusha
cdq
sti
ins
out
jle
or
and
sbb
add
xor
dec
imul
rol
out
ret
sbb
mov
sub
mov
jne
nop
pop
icebp
outs
mov
inc
int
sub
jle
push
int
ins
or
outs
sub
push
and
sbb
inc
inc
shr
sub
ss
pop
jp
or
es
xor
push
inc
pop
mov
sub
or
lods
ss
pop
xchg
lea
cdq
cdq
out
aam
cmp
out
mov
inc
mov
mov
ficomp
mov
jmp
test
ja
adc
(bad)
jns
shl
pop
push
ror
ins
aas
xchg
inc
push
sbb
mov
cmp
push
cmp
xor
push
ret
ins
movs
adc
in
pop
iret
mov
add
xor
and
and
cmovae
mov
mov
pop
lock
xor
or
fmul
push
mov
ins
or
dec
and
inc
pop
adc
xor
jp
sbb
out
(bad)
xor
aas
or
fstp
push
add
sub
add
xchg
cmp
xchg
sbb
ja
push
jmp
(bad)
sar
adc
loope
pushf
mov
sub
dec
je
push
cmp
xchg
mov
mov
xor
dec
dec
lds
mov
test
push
std
lea
add
lods
add
mov
inc
ret
mov
dec
add
pop
mov
pushf
rcl
pop
out
mov
jb
mul
jo
mov
cmp
int3
xor
ret
mov
ins
test
or
(bad)
fst
pop
jg
repz
inc
inc
push
scas
sub
sbb
and
inc
xor
dec
pop
fsub
push
and
aam
(bad)
daa
sub
xor
adc
mov
or
sbb
and
pop
add
or
pusha
daa
xor
add
add
sbb
fld
jg
dec
stos
add
add
xor
fcomp
ss
xor
mov
scas
push
cmps
jge
cmp
ins
jnp
bound
xor
adc
imul
aam
xchg
lock
and
cdq
cmp
pop
bound
pop
bound
pop
daa
or
test
fisttp
rcr
pop
jne
adc
or
repnz
add
adc
aad
sub
es
scas
mov
push
adc
lock
adc
add
cmp
jl
jmp
gs
and
cmp
je
add
fmul
outs
retf
enter
mov
addr16
inc
dec
xchg
cwde
sub
dec
neg
scas
jns
mov
adc
cmps
jmp
xchg
mov
shl
xor
daa
pushf
stc
adc
pop
inc
mov
add
push
aaa
mov
add
cmp
cmp
sbb
add
leave
xchg
and
inc
jo
leave
mov
lahf
sbb
inc
add
push
addr16
jmp
scas
shr
jnp
test
retf
ror
push
sub
cwde
test
mov
sub
stos
ret
data16
or
add
adc
jl
in
and
test
in
sub
sbb
je
(bad)
add
out
rol
stos
sub
cmp
mov
mov
add
es
sub
add
sub
or
sub
aam
nop
and
and
int3
sti
or
mov
inc
aam
enter
sub
enter
(bad)
jl
or
xchg
mov
add
xchg
xchg
inc
div
xor
hlt
cli
sti
jmp
mov
ret
rcr
add
out
ds
cmp
adc
pusha
or
and
cmp
cwde
add
je
jo
jo
data16
lock
fisubr
mov
jns
mov
les
jae
add
adc
aaa
xchg
hlt
sub
pop
jg
cs
xchg
inc
dec
push
cs
xchg
jmp
sub
mov
test
mov
cmps
out
fmul
repnz
cs
inc
jb
aaa
outs
shl
das
mov
fild
cmc
ss
or
pop
mov
inc
out
movs
nop
mov
std
lds
out
jne
popa
jo
inc
enter
cmp
and
das
jns
(bad)
addr16
xor
adc
inc
shr
sub
out
cwde
addr16
sbb
out
fsubr
rcl
push
or
les
in
mov
inc
not
cmp
push
xor
call
adc
and
adc
pop
inc
mov
repz
aad
jmp
and
dec
movs
fwait
jl
add
push
xor
cmp
pusha
(bad)
hlt
gs
mov
sbb
mov
xchg
jl
and
pushf
cmp
mov
sub
jle
not
jecxz
daa
es
test
mov
dec
push
dec
mov
dec
out
xchg
and
jno
scas
xor
jae
mov
add
sbb
(bad)
out
or
or
add
pop
cmp
pop
adc
add
call
dec
push
or
xchg
sbb
pop
inc
pop
fldl2e
loop
popa
xchg
sbb
cmp
inc
clc
fisttp
push
outs
pop
and
and
add
xor
or
inc
mov
imul
adc
neg
ret
or
xor
push
add
cmp
dec
repnz
sub
repnz
mov
clc
xor
or
cmp
fwait
dec
fnsave
(bad)
xchg
fnstcw
xchg
(bad)
in
add
fwait
mov
in
mov
or
mov
pop
adc
cmp
loop
pop
xor
aam
pop
sbb
pop
inc
adc
popa
aaa
add
xchg
out
nop
dec
test
mov
pusha
nop
adc
shr
sbb
or
add
inc
fcom
xor
mov
push
sub
sbb
sbb
dec
jge
jl
shl
sbb
test
daa
push
gs
enter
mov
xor
loope
pop
jbe
jb
mov
ss
lea
(bad)
out
(bad)
cmps
xchg
jp
test
lds
jb
jb
movs
lds
dec
mov
add
inc
sub
pop
push
sub
ret
movs
push
mov
mov
mov
push
adc
repnz
mov
or
and
or
inc
dec
cdq
shr
mov
dec
pop
jne
mov
add
inc
push
cmp
dec
cmp
imul
hlt
cmp
mov
pop
push
jmp
xlat
push
or
jae
shl
inc
and
push
add
gs
sbb
or
test
leave
sub
pop
outs
mov
push
int3
aaa
pop
xchg
sbb
out
and
(bad)
mov
push
jb
cmp
push
pushf
jo
int3
shl
enter
retf
adc
add
stos
mov
xor
dec
es
out
cmps
(bad)
aam
ficomp
xor
ja
ins
cmps
jae
dec
push
in
inc
aas
adc
xchg
and
mov
test
or
xchg
je
add
sbb
jle
movs
add
dec
ja
sbb
call
adc
mov
mov
fidivr
in
or
jno
add
inc
inc
test
imul
iret
and
and
and
and
(bad)
mov
dec
add
sbb
cmp
adc
stc
out
and
sub
dec
sub
or
push
scas
dec
xlat
add
loop
xchg
iret
scas
pop
mov
push
inc
in
sbb
fdiv
iret
xchg
les
or
adc
bound
ja
ins
test
xchg
pop
add
ds
xchg
nop
ret
xchg
shl
xchg
scas
shl
cmp
inc
int
push
loope
adc
je
or
retf
ror
mov
and
cmp
inc
lods
nop
adc
js
sub
(bad)
loopne
(bad)
xor
mov
rcl
scas
leave
xor
or
sbb
pop
adc
mov
sub
ret
out
ror
pop
hlt
mov
xlat
sbb
mov
inc
mov
out
cmp
cmp
jecxz
in
push
jecxz
pop
or
cmp
xchg
mov
popa
lds
iret
mov
mov
ds
sbb
add
imul
dec
sub
jo
das
mov
add
nop
cmp
cwde
sbb
arpl
ins
test
or
cmp
adc
(bad)
in
jmp
jbe
rol
cmp
jo
add
push
sub
(bad)
es
xor
or
add
add
push
xor
in
add
and
cmp
pop
popa
fs
rcl
add
inc
add
or
xchg
test
xchg
xchg
call
push
loope
fmul
pop
cmp
call
cmp
call
push
xchg
add
jp
in
pop
je
aas
inc
pop
popa
and
and
and
aas
push
arpl
(bad)
cmp
sbb
daa
imul
aas
gs
jae
and
mov
inc
fs
cmp
inc
je
test
sbb
lods
daa
sub
es
cmp
fadd
or
mov
int
lods
pop
outs
ins
je
repnz
inc
pop
or
jne
xchg
adc
jmp
jmp
dec
xor
call
popa
popa
push
add
outs
iret
xor
pusha
xchg
(bad)
push
sub
(bad)
bound
imul
xor
test
ja
pop
add
lods
aad
sbb
mov
pop
jb
xchg
inc
inc
inc
adc
or
call
ror
inc
or
cmp
add
adc
xchg
mov
inc
fwait
xchg
xchg
inc
cmc
rol
and
sar
inc
dec
pop
or
leave
(bad)
xor
jge
cmp
pop
inc
inc
jg
popf
mov
adc
mov
adc
dec
sub
mov
fcom
jmp
fadd
sar
push
add
fcmovu
cmp
fiadd
jo
inc
cmp
and
push
outs
cmp
adc
xor
movs
add
add
pop
pusha
mov
or
cmp
adc
jne
jge
sbb
jne
jns
push
data16
jne
mov
ins
push
cwde
or
jno
adc
jp
add
sar
addr16
movs
(bad)
sbb
pusha
pop
imul
int3
mov
sub
mov
cmp
daa
shl
cmps
push
pop
out
call
jne
cwde
dec
jne
mov
pop
xor
xor
ret
cmp
hlt
adc
scas
jmp
repnz
inc
xlat
push
or
ss
retf
cdq
mov
or
arpl
cmps
or
cmp
sbb
mov
pop
push
or
adc
cs
adc
jmp
pushf
stos
mov
test
mov
(bad)
nop
push
and
push
add
inc
mov
xchg
mov
jmp
or
ins
pop
daa
xchg
inc
es
add
or
div
jo
mov
inc
inc
cwde
xadd
or
or
inc
push
inc
or
retf
sbb
rcl
mov
dec
mov
iret
pop
dec
pop
adc
push
add
add
dec
cld
jecxz
and
lods
and
imul
add
push
pusha
cmps
dec
adc
adc
lea
jmp
xor
leave
pop
and
clc
shr
fidivr
xor
scas
dec
in
pop
out
or
in
lock
adc
inc
shl
xor
inc
sbb
inc
pop
xchg
inc
dec
repz
dec
in
daa
pushf
lock
sub
jno
sub
add
gs
outs
outs
fs
add
ins
daa
or
test
jmp
outs
ror
outs
jne
ins
mov
mov
adc
outs
addr16
imul
xchg
sub
rcl
cdq
push
or
cmovae
inc
nop
in
sub
and
adc
aaa
or
sbb
xor
jno
outs
in
dec
and
popa
sub
pop
lea
aaa
mov
das
das
and
paddd
in
imul
outs
je
jb
mov
jmp
ins
dec
sub
push
jbe
popf
fstp
pop
cmp
(bad)
outs
cmp
mov
jb
scas
ss
pop
push
xor
cmp
xor
push
or
daa
cmps
inc
imul
pop
test
and
pop
xor
xchg
popa
push
xchg
cmp
push
push
adc
iret
out
stc
mov
jb
dec
cld
mov
or
cld
cld
mov
push
and
or
xlat
add
popa
and
pusha
aad
xchg
cs
sub
fs
and
std
dec
js
sti
mov
xchg
push
mov
add
and
pop
inc
fadd
push
sahf
repz
or
push
jl
inc
add
pusha
adc
push
dec
or
in
pop
add
enter
xchg
adc
add
fst
mov
dec
inc
lahf
sbb
add
pop
dec
or
js
inc
nop
pop
outs
addr16
mov
mov
retf
in
dec
enter
mov
leave
(bad)
ins
sub
gs
push
jns
loopne
es
aam
push
in
rcl
mov
cmp
ins
aas
imul
xor
aad
lods
iret
xor
xor
loop
push
lods
inc
mov
test
ja
and
or
inc
dec
inc
inc
push
inc
push
dec
and
push
icebp
sbb
psraw
inc
outs
mov
add
sub
or
add
inc
inc
scas
es
jmp
scas
retf
add
hlt
imul
in
adc
jb
sub
inc
add
push
xor
mov
inc
stos
ucomiss
xor
mov
pop
scas
sub
add
mov
sbb
or
mov
push
add
cdq
movs
inc
pusha
sub
shl
das
push
and
mov
inc
adc
xor
and
outs
dec
cs
ja
sub
or
out
popa
pop
inc
push
stc
and
xchg
jg
pop
and
xor
dec
ins
popa
addr16
inc
fcomp
test
das
xor
inc
sub
add
sub
sub
dec
aas
call
sub
cmp
mov
lock
xchg
fs
data16
add
xor
add
cs
inc
push
dec
loopne
and
cs
fld
mov
pusha
pop
inc
btc
call
xchg
inc
dec
mov
cld
ins
dec
push
inc
xchg
mov
and
and
ss
cmp
dec
jno
popf
and
mov
add
call
push
out
jb
fmul
xor
mov
adc
sbb
jge
xchg
inc
lsl
or
repnz
call
push
es
int3
les
mov
cmp
sbb
push
push
inc
dec
daa
wbinvd
cmp
je
cmc
jmp
adc
and
pop
or
sbb
push
add
inc
lods
xor
imul
dec
repnz
ins
fs
push
mov
out
outs
imul
cmp
aaa
push
pop
pop
or
popf
pop
aam
ror
dec
adc
jmp
cli
popa
pusha
pop
lods
inc
scas
pop
jg
rol
dec
cmp
shl
ja
aas
jb
retf
sub
sbb
xchg
jb
leave
sub
and
retf
rol
sbb
mov
dec
loope
cmp
nop
js
in
sbb
jecxz
sub
mov
xchg
jmp
sbb
add
test
add
pushf
pop
mov
or
or
scas
and
pusha
outs
inc
cs
sub
sbb
inc
push
lods
xor
es
mov
xchg
sbb
inc
ss
and
push
mov
adc
or
and
imul
sbb
xchg
pusha
shl
in
ins
mov
scas
add
xor
sub
mov
inc
mov
and
out
adc
pop
loopne
mov
add
mov
pop
add
adc
out
pop
leave
push
inc
mov
inc
movs
pop
lea
adc
fcomp
punpckhwd
and
push
dec
call
lahf
inc
dec
popa
leave
data16
mov
push
xor
imul
sbb
push
sti
cmps
ds
mov
pop
test
cmc
pop
std
cwde
nop
xchg
sbb
es
ja
call
sub
inc
sub
dec
pop
jle
inc
jmp
repz
(bad)
cs
sbb
or
pop
adc
ret
call
movs
pop
nop
inc
shl
call
out
xor
in
mov
inc
mov
ins
fiadd
dec
xchg
pop
sbb
(bad)
push
dec
push
inc
or
inc
mov
jne
add
ins
pop
ja
mov
ret
js
jo
fwait
clc
xchg
dec
test
jbe
mov
cmp
loopne
ins
pause
test
mov
mov
jo
aas
fcom
pop
test
in
mov
mov
push
push
shl
xchg
inc
mov
pop
sar
jmp
inc
cvtpi2ps
in
xor
jne
and
sbb
mov
lea
mov
fist
sub
dec
xor
add
or
and
sbb
inc
or
add
jo
addr16
or
sub
scas
xchg
xchg
imul
cmc
pop
xchg
sahf
and
neg
push
(bad)
retf
pop
pop
clc
fdiv
mov
pop
mov
mov
add
sub
popa
pop
push
daa
ret
add
(bad)
hlt
cld
add
add
stos
mov
add
inc
xchg
daa
cmp
mov
push
cmp
lock
ins
not
or
outs
in
test
out
mov
xchg
(bad)
pop
jae
je
dec
dec
imul
adc
add
and
push
cmp
add
sbb
sbb
mov
or
or
pop
call
mov
inc
fdiv
pop
xchg
outs
in
and
(bad)
cli
pop
inc
ins
aas
mov
mov
adc
call
lock
les
or
jns
(bad)
adc
inc
lds
bound
mov
clc
or
call
push
xchg
push
lods
into
cli
mov
pop
sbb
pop
cs
or
or
pop
add
psubb
in
push
push
cmp
add
pop
adc
push
mov
ins
pop
(bad)
repz
dec
test
das
xchg
inc
push
les
add
pop
and
ins
call
adc
dec
sub
sub
pop
clc
or
xchg
pop
div
daa
mov
xor
je
push
sbb
je
xor
out
cmp
xchg
es
jb
aaa
and
push
leave
shr
nop
mov
rcl
push
jp
cmp
fmul
dec
f2xm1
shr
xor
add
aaa
mov
jmp
mov
xor
mov
or
(bad)
push
push
and
adc
xor
jle
lock
scas
pop
pop
add
jmp
call
push
xor
leave
fstp
pop
inc
repz
inc
cdq
push
daa
loope
push
dec
pop
add
out
dec
shl
dec
jge
mov
enter
jg
or
pop
enter
adc
jo
sbb
add
xor
cdq
xchg
dec
je
add
xor
mov
aam
mov
pusha
sub
adc
lods
dec
xchg
test
dec
cmp
sbb
xchg
je
adc
sbb
(bad)
pop
and
mov
je
jbe
adc
add
cmp
pusha
pop
add
inc
push
and
in
fisubr
or
lock
add
push
or
mov
sbb
inc
mov
push
cmp
or
pop
ins
bound
and
and
jnp
pop
sub
sar
shr
inc
or
aas
mov
shl
cwde
inc
loopne
inc
out
fs
dec
cmps
lds
push
outs
inc
xchg
jb
add
xchg
mov
arpl
sbb
xchg
xchg
aas
dec
xchg
mov
fcom
fs
jno
inc
sbb
xchg
in
(bad)
cdq
rcl
call
es
fdivr
in
push
xor
cmp
test
imul
out
and
mov
and
push
cmp
fwait
inc
sbb
push
pop
jl
fwait
dec
or
ds
mov
or
ret
add
repnz
mov
bound
sub
loop
inc
ror
in
jmp
pusha
sub
fs
inc
dec
mov
adc
mov
or
mov
scas
jp
adc
mov
push
jbe
dec
add
mov
mov
or
js
inc
sub
adc
aaa
int
call
movs
sub
jae
dec
xchg
movs
ret
xlat
jmp
sti
lock
dec
mov
xor
jp
pusha
cmps
add
pop
shr
jns
aad
sbb
xchg
es
sbb
xchg
add
bound
adc
aas
push
xor
in
cs
cli
addr16
mov
xchg
ins
inc
test
nop
rcr
ja
rcl
push
lock
push
mov
adc
mov
imul
jle
sbb
dec
jmp
arpl
dec
test
xor
sub
dec
loop
push
mov
or
add
leave
aam
call
xor
imul
adc
adc
(bad)
lock
jecxz
mov
lea
inc
jne
xor
call
and
int3
xor
loopne
pop
in
fist
gs
outs
inc
mov
push
in
push
nop
pop
add
fs
sub
dec
fsub
in
mov
sbb
inc
mov
mov
push
in
and
and
adc
sbb
enter
icebp
pushf
pop
xor
in
shr
lea
and
pop
inc
daa
hlt
or
mov
cld
test
pop
loopne
xor
adc
lods
sub
or
sub
push
fdivr
movs
movs
bound
fdiv
xchg
adc
or
pop
rcl
add
(bad)
add
add
pop
mov
xchg
clc
mov
mov
leave
lea
and
out
xchg
jmp
xor
cwde
add
and
inc
sub
test
and
lods
and
xor
dec
fsub
xchg
loopne
in
inc
push
sbb
lock
call
ret
ret
pop
rol
rol
or
cld
jge
(bad)
aas
xor
rol
cmp
ja
pop
cs
in
push
leave
push
xchg
ins
scas
outs
bound
jno
ss
sub
aam
jp
xchg
add
add
mov
sbb
push
sub
sbb
and
add
dec
push
js
add
ins
jae
xlat
jmp
sti
shr
(bad)
cmp
ret
pusha
add
sub
aam
adc
adc
pop
push
leave
sub
shl
ss
push
or
cmc
enter
shr
add
and
outs
jne
jno
les
movs
in
out
jns
mov
mov
mov
sub
in
repnz
jne
xchg
int3
jecxz
adc
mov
sbb
pop
ins
fistp
adc
or
xchg
ror
je
xchg
mov
gs
or
fsub
pop
int3
mov
add
sub
sub
adc
and
arpl
push
aad
pushf
ror
inc
xor
add
xlat
out
out
ror
pop
inc
ja
not
mul
xor
call
inc
xor
xchg
jae
movs
imul
sahf
sub
je
sub
sbb
int3
sbb
fwait
mov
sbb
dec
arpl
outs
pop
nop
pushf
fdivr
push
cld
enter
nop
pop
stos
inc
addr16
or
les
fcomp
sahf
cmp
mov
rol
add
push
inc
and
leave
push
dec
add
fimul
pushf
popf
jmp
inc
dec
mov
ss
stos
fadd
cmp
inc
pushf
jae
daa
(bad)
pop
xor
jmp
xchg
enter
add
imul
shr
or
add
xchg
enter
add
cmp
sub
push
or
xchg
and
nop
cmp
cs
mov
or
lahf
scas
and
outs
or
mov
popf
xor
adc
push
push
xchg
ret
push
xchg
cwde
cld
cmps
ret
mov
jge
sub
xchg
dec
sub
jae
add
test
test
ret
fs
sbb
xchg
nop
inc
es
pop
loop
sbb
pop
xlat
sub
popf
mov
aaa
loop
leave
cmp
jmp
inc
adc
lea
les
jmp
je
dec
and
adc
test
jb
mov
add
mov
sbb
iret
lock
dec
xor
xor
add
or
inc
cmps
add
and
and
hlt
out
adc
in
pop
adc
push
adc
test
xchg
xchg
xchg
cmp
sbb
mov
and
adc
test
xor
aaa
sbb
outs
pop
ret
mov
nop
dec
add
sub
or
arpl
add
clc
ss
adc
and
sub
jmp
jmp
push
repz
sub
fwait
inc
or
jmp
rcr
in
xor
and
mov
jecxz
or
scas
push
dec
push
data16
dec
inc
adc
xor
neg
mov
adc
cli
adc
inc
mov
adc
ret
sti
sub
cmp
jb
adc
xchg
mov
xor
test
(bad)
into
jg
pop
mov
mov
pop
mov
lods
adc
xlat
and
sbb
in
add
and
lods
lock
or
and
mov
mov
add
rol
and
ja
and
jmp
aam
test
scas
mov
dec
repnz
idiv
in
inc
js
mov
ror
inc
stos
xchg
pop
push
pop
dec
inc
jmp
or
adc
test
rcr
mov
inc
dec
jne
pop
push
or
out
lods
and
mov
add
xor
nop
push
loope
add
push
dec
adc
cmp
sub
sbb
test
jge
cmp
adc
inc
or
jmp
xchg
push
push
fcmovb
arpl
jmp
mov
not
test
in
in
xchg
push
jle
add
adc
xchg
and
sub
dec
xchg
call
adc
test
or
inc
and
and
dec
xchg
and
dec
xchg
adc
dec
xchg
mov
add
inc
push
inc
adc
add
(bad)
pop
cmp
pop
inc
push
test
imul
adc
sub
jg
clc
jecxz
mov
mov
and
or
cmp
aam
or
add
pop
inc
loopne
jmp
cmp
xor
pop
or
sbb
adc
test
pop
or
mov
or
or
adc
or
clc
cmp
or
sbb
cmp
jne
xchg
add
or
or
aaa
jnp
push
inc
call
sub
pop
xor
add
ret
xchg
pop
adc
and
out
pop
xchg
adc
or
(bad)
fsubr
adc
call
cvtps2pi
add
xor
cli
(bad)
jle
lods
mov
adc
xabort
rcr
xor
lahf
xchg
sub
add
ins
cmp
and
das
out
jge
dec
shl
enter
inc
or
push
jecxz
add
lea
jne
scas
clc
inc
je
movs
add
and
imul
out
scas
loope
xor
inc
push
les
sub
retf
shl
psrlq
inc
sub
addr16
(bad)
cmp
sbb
add
ja
or
adc
xor
adc
cli
cmp
jmp
and
xor
pop
or
xor
mov
es
ret
dec
bound
mov
fcomp
add
add
mov
mov
iret
mov
cmps
inc
push
jne
mov
stos
adc
shl
repnz
and
adc
xor
out
push
(bad)
in
sbb
xor
pop
pop
xor
inc
sbb
inc
mov
sbb
retf
rol
sbb
and
enter
iret
sbb
clc
retf
adc
push
add
retf
call
iret
push
iret
adc
adc
sbb
cmp
xlat
and
pushf
and
xor
and
clc
xor
sub
mov
sbb
sub
ror
inc
adc
xchg
and
mov
mov
ror
push
retf
sbb
add
pop
jbe
(bad)
and
add
add
add
sbb
mov
pop
or
pop
add
mov
aad
push
in
inc
mov
dec
sbb
and
imul
in
dec
xchg
data16
cmp
adc
sbb
mul
pop
movaps
in
and
loop
and
jle
mov
push
mov
and
xor
cmp
sahf
jbe
jae
add
adc
or
xor
dec
cmp
test
inc
push
dec
in
(bad)
nop
push
test
js
popa
stos
cmp
jns
loope
lds
sbb
dec
xor
mov
scas
xor
cmp
ins
mov
push
aas
inc
cmp
and
dec
push
and
sub
rol
add
mov
pop
pop
dec
cs
mov
and
push
nop
jo
das
xchg
add
out
sbb
and
push
or
aas
mov
push
ret
jns
inc
mov
pop
stos
loope
dec
nop
cmp
aad
inc
push
cwde
xor
dec
pushf
dec
push
xor
and
test
mov
and
mov
scas
jecxz
nop
push
popf
fs
imul
jo
ja
sar
push
cmp
push
mov
loope
and
xor
lock
aaa
out
fs
mov
lods
shl
shr
outs
test
fst
sbb
cmp
add
int3
lock
dec
mov
test
jge
xor
fild
aad
or
pop
or
xor
cmp
(bad)
push
xchg
jns
xor
mov
and
cdq
dec
nop
lods
mov
cwde
adc
or
(bad)
das
cmps
xchg
aas
sbb
xor
in
scas
loope
pop
xchg
jle
mov
cmps
or
xor
repnz
nop
jl
inc
sbb
inc
cdq
mov
or
imul
es
das
add
add
cwde
stos
inc
leave
inc
push
cld
mov
ja
push
xor
repnz
pop
movs
and
push
inc
push
leave
pop
inc
dec
adc
push
xchg
das
adc
mov
and
or
sbb
sbb
dec
adc
mov
aad
pushf
fcomp
or
repnz
inc
jle
or
mov
(bad)
mov
fmul
pop
test
pop
fdivr
sbb
xchg
add
xchg
retf
out
cmp
xchg
sbb
fstp
nop
or
mov
jns
fcom
push
sbb
pusha
fadd
inc
ds
mov
sahf
ins
jo
dec
and
mov
mov
lahf
sub
lock
lea
in
add
scas
js
pop
sbb
push
js
and
jl
mov
mov
add
adc
je
ret
push
repnz
adc
arpl
cmp
push
adc
and
stos
sub
mov
sbb
leave
pop
jnp
call
add
mov
xchg
jl
jmp
jl
sub
out
mov
push
sub
xchg
mov
test
cdq
pusha
div
sbb
loope
pop
push
ds
into
xchg
xchg
cld
add
xchg
xchg
(bad)
scas
push
das
nop
dec
adc
repnz
or
std
cwde
adc
dec
jne
dec
ja
xchg
sub
nop
xchg
jne
sub
cmp
cmp
(bad)
cmp
inc
jns
loopne
push
scas
mov
inc
in
icebp
or
call
inc
cmp
push
push
xchg
and
data16
adc
xchg
and
jg
jno
push
out
adc
inc
mov
pusha
lods
jl
push
xor
nop
dec
sub
ds
xor
fwait
mov
test
clc
xor
and
fdivr
push
gs
(bad)
dec
xor
mov
and
movs
int
lods
xchg
rcl
nop
rep
ins
pcmpgtb
xchg
das
cmp
xor
or
mov
test
pop
lea
enter
xor
add
(bad)
(bad)
and
stc
call
xchg
test
jge
mov
retf
push
aad
stos
popf
dec
shl
xchg
mov
push
fdivr
xchg
das
sub
mov
leave
push
stos
js
ins
or
outs
add
add
jp
jb
sysenter
movs
ss
lock
jns
clc
adc
xchg
jne
jb
jl
sbb
aam
loope
inc
mov
or
xchg
mov
aam
push
inc
mov
dec
jne
mov
xchg
mov
iret
add
jne
lods
mov
outs
inc
sbb
xchg
mov
test
adc
xchg
add
mov
shl
cdq
push
fdiv
loopne
xchg
add
lahf
inc
xchg
das
adc
sbb
cmps
push
push
push
leave
inc
cmps
mov
stos
ror
aad
mov
jnp
add
fnstenv
(bad)
sbb
cmp
add
xlat
shl
and
rol
adc
shl
shr
pand
enter
push
fwait
shl
test
sbb
stc
leave
jb
pop
cwde
jnp
cdq
and
add
xchg
jns
and
aad
fsubrp
test
sbb
jecxz
push
hlt
xchg
nop
cmp
or
gs
mov
mov
stc
enter
dec
test
sbb
pusha
lahf
inc
pop
outs
jg
pop
outs
and
push
adc
sbb
lahf
in
cmp
sbb
push
add
and
(bad)
push
sub
test
adc
xor
and
pusha
rol
int3
or
das
add
mov
fwait
adc
jle
add
cmp
(bad)
gs
aaa
sbb
call
add
nop
sub
pop
mov
stc
in
jg
adc
or
sbb
sbb
jae
add
xchg
pop
jle
and
or
sub
push
mov
sub
ins
dec
in
(bad)
iret
inc
add
and
jns
or
adc
sub
sub
ret
hlt
or
dec
or
mov
jecxz
cmps
lock
std
scas
(bad)
jg
mov
add
add
(bad)
aaa
mov
add
popa
sti
adc
jbe
jmp
aas
in
inc
add
xchg
lods
add
loop
xchg
dec
daa
retf
inc
dec
cmp
mov
pop
jae
add
shl
sub
ror
call
cmps
or
loope
push
xchg
sbb
mov
add
jge
ret
cmp
mov
aam
mov
fnstcw
and
add
and
ins
adc
mov
mov
jp
jg
fwait
sbb
cmp
adc
es
xor
scas
push
and
es
repnz
xor
enter
push
and
jecxz
sbb
xchg
sar
xor
and
mov
clc
add
adc
jae
add
sbb
pop
inc
jo
inc
bound
add
ret
xchg
dec
shr
in
into
adc
inc
fwait
(bad)
push
inc
enter
pop
inc
or
and
adc
jb
cdq
pop
cld
js
cmp
in
loopne
pop
adc
fimul
aas
cld
ss
inc
das
cmp
cs
add
cmp
pusha
adc
mov
ficomp
adc
cmp
mov
sbb
push
adc
outs
mov
adc
mov
or
and
and
add
sub
sub
or
sar
xlat
and
push
lock
add
or
movs
test
nop
sbb
movs
test
add
lods
sbb
ds
into
sub
adc
test
ss
mov
cmp
pop
out
mov
jne
xchg
inc
adc
mov
cmps
sub
ja
shl
push
imul
push
das
in
dec
and
xchg
adc
repnz
push
or
adc
jno
inc
or
dec
rcl
cli
cmp
xchg
add
jmp
mov
dec
int
push
xchg
mov
dec
mov
pushf
or
mov
ret
xchg
push
or
movs
inc
or
ins
sub
push
sub
outs
jne
fsub
add
xor
outs
jae
sub
or
mov
test
adc
loopne
test
pop
inc
cmps
push
dec
and
push
push
dec
sbb
add
push
mov
test
rol
(bad)
leave
cmp
jne
cmp
test
adc
jmp
inc
imul
add
(bad)
je
add
sbb
mov
xor
sub
xor
jmp
sbb
jb
cmp
iret
push
add
nop
jae
int3
daa
push
cmp
push
mov
ror
add
cmp
cs
sbb
push
loope
jl
pop
pusha
icebp
ss
pand
lock
in
xchg
xor
inc
push
push
sbb
or
xchg
or
adc
rdtsc
or
movs
stc
fisttp
sbb
mov
add
imul
cmps
cwde
or
pusha
test
cmps
xor
loop
mov
pusha
cdq
or
cwde
inc
stc
in
in
outs
(bad)
jmp
mov
lea
mov
imul
test
xor
inc
jp
add
ror
(bad)
call
stc
mov
add
push
push
pop
daa
xor
sub
add
xor
adc
add
push
xor
mov
xchg
addr16
push
call
test
call
(bad)
fld1
out
call
stos
jns
jnp
(bad)
call
loop
or
mov
xlat
test
mov
sbb
pop
inc
xchg
pop
imul
or
mov
jmp
jae
jecxz
in
and
push
pusha
xchg
mov
add
out
mov
mov
cmp
fimul
jns
jbe
adc
stos
or
mov
push
pop
dec
nop
mov
cmps
xchg
pusha
outs
nop
enter
das
adc
add
(bad)
and
sbb
jg
mov
sbb
push
cwde
fistp
mov
mov
mov
icebp
add
cdq
xchg
xchg
rol
daa
pusha
adc
sbb
jmp
ss
test
jge
rcr
rol
movs
or
pop
sbb
sbb
rcl
inc
fst
pop
and
or
cmp
inc
mov
cmps
jg
dec
mov
jbe
stos
mov
mov
outs
test
push
adc
mov
push
mov
addr16
pop
add
(bad)
xchg
dec
add
or
(bad)
jbe
inc
jae
dec
gs
test
or
fwait
add
mov
(bad)
jmp
push
and
and
ror
xchg
leave
imul
movs
hlt
inc
dec
mov
in
lods
lods
mov
or
ins
or
jl
xchg
jno
and
sbb
fsubr
push
mov
(bad)
and
cmp
inc
(bad)
mov
dec
sbb
out
xchg
or
shl
ja
add
iret
test
add
jno
push
imul
xorps
mov
mov
pop
in
arpl
ret
leave
jne
push
add
mov
sbb
and
mov
inc
or
ret
xor
mov
add
das
aaa
push
fsub
cdq
xchg
pusha
cmp
fs
push
addr16
add
dec
push
mov
sub
clc
and
je
clc
adc
dec
dec
mov
pop
cwde
dec
pop
fs
in
cdq
scas
lock
inc
ja
scas
lahf
aam
mov
or
push
rcl
cmc
(bad)
leave
in
scas
xlat
aam
dec
repnz
sub
and
add
push
push
push
or
lds
out
rcr
add
add
mov
pop
sub
mov
fld
icebp
or
fwait
and
add
inc
in
imul
cdq
nop
and
cdq
nop
and
jl
cdq
nop
sbb
aad
and
fwait
aaa
pushf
outs
hlt
sbb
sub
shl
xor
pop
ins
fcmovnb
push
enter
add
cmp
adc
test
iret
and
mov
adc
inc
pop
or
adc
mov
jbe
adc
pop
in
sub
fld
ja
imul
(bad)
mov
cmps
and
enter
sbb
lds
jp
push
sub
and
jns
loopne
loopne
cmp
push
imul
jo
cmp
test
push
loop
fist
push
sbb
(bad)
in
outs
inc
aam
push
in
push
lock
out
pop
sub
mov
in
dec
shr
popf
cmp
add
or
add
les
xor
mov
addr16
popf
retf
lahf
jl
sbb
and
(bad)
mov
into
fdiv
or
ds
test
loopne
cmps
dec
add
les
pop
sbb
mov
leave
mov
mov
xchg
mov
or
push
push
pop
push
xor
std
jle
pop
sub
cmps
movs
pop
scas
test
mov
add
(bad)
ins
jo
sbb
leave
test
sbb
add
mov
and
push
pusha
retf
pop
add
xor
pop
shr
push
outs
iret
bound
test
pop
enter
add
inc
mov
mov
and
inc
hlt
enter
pop
ffreep
scas
loop
add
mov
push
nop
xchg
and
retf
or
cmps
cwde
inc
loope
les
and
dec
and
inc
cmps
mov
push
daa
dec
bound
stc
push
ins
dec
imul
or
scas
loop
cmp
mov
adc
repnz
xor
int3
push
mov
daa
or
cmp
sub
push
and
sbb
ret
int3
xor
sub
pop
ret
dec
ins
fs
and
inc
nop
retf
imul
mov
or
xchg
mov
jns
push
xor
test
jb
mov
push
mov
inc
sub
cmc
inc
jmp
jmp
mov
mov
call
fs
int
or
pop
push
adc
movs
nop
pop
pop
sub
stos
out
add
and
(bad)
jmp
mov
mov
stos
mov
enter
xor
rol
mov
sbb
cmps
sbb
xchg
inc
cs
loope
mov
mov
mov
in
into
clc
into
dec
add
xchg
jge
or
sub
rcl
cs
add
xchg
pop
inc
repnz
into
mov
push
pop
js
das
das
shl
arpl
scas
jle
popa
adc
pop
sub
popa
and
sbb
dec
or
and
and
pop
add
mov
and
xor
pusha
fstp
pushf
or
mov
fwait
mov
sbb
or
jae
push
mov
loopne
inc
sub
xchg
ret
mov
pop
sbb
sub
and
mov
and
mov
add
pushf
clc
mov
imul
mov
mov
nop
cmps
cmp
mov
imul
or
movs
call
pop
pop
std
mov
test
dec
neg
jo
pop
pop
jbe
sub
pop
jbe
(bad)
pop
xor
pop
jns
test
stc
xchg
shr
mov
fs
retf
inc
jmp
ins
mov
xchg
or
cdq
pop
in
mov
inc
cs
mov
xor
or
mov
dec
push
cld
pop
fild
mov
mov
xchg
mov
rcl
jo
es
xor
add
and
(bad)
mov
ret
arpl
(bad)
xchg
pushf
mov
dec
rcl
test
and
add
int3
and
into
fidiv
push
ja
or
cmc
(bad)
xor
shl
xlat
or
aad
jbe
xchg
xchg
inc
add
jb
xlat
add
scas
int3
lock
and
adc
loope
xchg
push
mov
nop
cld
es
jne
push
retf
mov
dec
sub
jge
cmp
cli
fscale
cmp
xlat
ss
sub
inc
sub
jmp
lock
jge
inc
(bad)
(bad)
mov
pushf
nop
mov
and
pop
dec
sbb
(bad)
sub
popf
dec
clc
and
rcl
xor
in
inc
pusha
aam
(bad)
daa
push
sub
mov
or
xor
rol
bound
nop
mov
xor
jmp
mov
sbb
pusha
aaa
adc
xor
test
and
cmp
cld
mov
retf
mov
inc
(bad)
fild
mov
cmp
and
ffreep
add
les
test
mov
rol
fwait
clc
mov
adc
addr16
sar
lock
pushf
in
pop
loopne
call
(bad)
or
inc
or
cmps
jo
test
in
or
xor
lds
das
dec
mov
clc
push
mov
and
in
lds
inc
or
mov
fs
pop
cmp
sbb
push
push
sub
lds
adc
sub
test
push
and
mov
jnp
rol
test
sub
shl
pop
push
sti
call
mov
jne
or
icebp
stos
and
fwait
pop
test
out
dec
(bad)
loopne
and
in
and
push
add
or
mov
(bad)
mov
inc
mov
or
rcl
push
jg
dec
js
sbb
sub
iret
enter
stos
fdivrp
xor
test
mov
and
out
int3
and
mov
push
mov
add
sub
and
shr
push
push
sbb
sub
sbb
(bad)
sbb
test
push
int3
mov
or
pop
sub
lods
in
rcr
push
jmp
adc
movs
jo
mov
add
fisub
pusha
call
sub
outs
adc
or
outs
fwait
push
enter
mov
sbb
adc
push
cmp
add
std
(bad)
enter
movs
clc
es
outs
mov
fdivr
in
cmps
scas
frstor
cld
cwde
pusha
adc
sub
jmp
sbb
dec
sbb
jne
es
das
dec
or
and
rcr
cmp
mov
dec
fwait
inc
inc
add
dec
inc
retf
push
xor
mov
xor
mov
fisttp
(bad)
idiv
push
dec
dec
mov
test
mov
xor
or
sahf
sub
mov
add
push
push
xlat
test
jae
mov
jmp
test
pusha
pop
sbb
nop
pop
cld
stos
bound
movs
cmps
jmp
add
scas
retf
sbb
push
push
sub
xchg
cmp
pop
jle
and
mov
mov
sbb
mov
sub
xchg
pop
cmps
push
fs
fldenv
in
das
sbb
cli
xchg
xchg
dec
push
and
cdq
mov
daa
cld
call
and
jno
repz
mov
in
retf
lock
shr
hlt
clc
js
ds
retf
cmp
imul
lea
and
int3
add
stos
aaa
fsub
push
sbb
pop
cvtpi2ps
ret
mov
out
daa
add
or
xor
mov
xchg
lods
sbb
mov
adc
adc
cmp
xor
call
and
mov
dec
pushf
xchg
fsub
std
fmul
push
adc
cli
sub
test
dec
jb
mov
imul
cld
loop
test
outs
dec
ret
sub
ds
mov
outs
inc
arpl
adc
lods
into
mov
mov
ror
or
int
sub
mov
int
jb
add
mov
lods
and
pop
jo
push
sub
mov
push
sub
nop
pop
dec
iret
add
ins
iret
mov
add
push
iret
out
adc
add
imul
xor
lss
outs
push
pop
int3
inc
repnz
lods
mul
sbb
xor
or
or
cmp
xchg
cld
xchg
dec
push
xchg
and
adc
fnstsw
pop
dec
push
sub
jae
pop
sub
mov
mov
mov
adc
xlat
mov
xchg
(bad)
stc
sbb
sbb
loopne
fsubr
pushf
dec
iret
and
sub
adc
rcr
mov
fcom
not
test
movs
and
adc
inc
and
sbb
push
out
adc
sub
bound
add
sbb
stc
push
daa
xchg
mov
iret
dec
jb
mov
(bad)
fistp
inc
ins
loop
and
fwait
sbb
jo
or
rcr
jb
(bad)
rcl
rol
repnz
and
pop
inc
sbb
inc
or
les
inc
pop
test
sbb
and
sub
and
mov
sahf
jo
das
pop
pop
enter
cld
shl
shr
adc
mov
enter
ret
and
mov
inc
and
enter
sbb
add
nop
retf
imul
aam
add
sub
push
inc
mov
push
aad
hlt
adc
push
mov
cld
push
adc
inc
dec
and
dec
mov
pop
or
push
test
cs
loope
mov
dec
(bad)
cmp
leave
repnz
xor
or
or
fcom
jl
inc
iret
and
jbe
ret
pusha
mov
and
push
inc
and
sbb
add
loopne
jno
(bad)
adc
repnz
push
add
dec
push
inc
sub
push
nop
fcmovb
aam
nop
pop
pop
sub
stos
(bad)
(bad)
nop
retf
jmp
sbb
mov
xchg
pop
nop
mov
adc
push
dec
sbb
pop
addr16
test
xchg
bound
jb
and
inc
leave
add
push
mov
fld
clc
fnstenv
add
or
fidiv
add
mov
inc
adc
outs
sub
adc
outs
xor
xor
adc
and
outs
and
dec
(bad)
(bad)
adc
in
adc
jnp
pop
pop
sub
or
pop
or
and
pusha
fcom
leave
mov
dec
fsub
adc
pop
nop
sbb
push
sbb
adc
nop
test
pop
outs
pop
sub
ror
xchg
or
pushf
(bad)
fst
pushf
xor
scas
fst
mov
add
add
push
and
cld
add
sub
inc
adc
pop
cmp
cmp
fnsave
shl
add
lahf
push
fidivr
clc
(bad)
fisubr
nop
or
add
lods
xchg
sbb
pusha
cs
adc
mov
push
loopne
push
retf
push
test
mov
mov
xchg
inc
cmps
dec
pop
sub
pushf
mov
in
hlt
jmp
add
add
lods
push
sbb
mov
dec
push
lods
inc
mov
or
inc
dec
jecxz
nop
loope
loope
and
push
out
add
or
lahf
jae
sub
nop
xor
add
test
in
push
xor
movs
mov
out
pop
jnp
dec
loop
inc
mov
fdiv
add
ret
and
push
aad
mov
xor
jmp
(bad)
jecxz
in
mov
xor
repz
adc
in
loopne
or
xor
popa
xor
ins
and
mov
call
pop
shr
inc
mov
or
mov
mov
shl
outs
jmp
mov
jecxz
cmp
cdq
add
xor
pop
ja
sub
pop
pop
jb
mov
cmp
mov
ret
jle
nop
jle
jge
mov
nop
mov
add
or
fwait
adc
pop
nop
adc
(bad)
jge
pushf
in
add
and
mov
jbe
ret
inc
add
adc
frstor
sbb
add
mov
pop
pushf
sbb
jo
pop
mov
inc
sbb
and
push
sub
popf
add
pop
and
je
jl
add
sahf
addr16
or
jmp
inc
jmp
in
fild
add
inc
pushf
and
(bad)
cmp
adc
in
dec
fucomi
aas
ins
dec
es
mov
test
inc
lahf
dec
in
jno
push
clc
jmp
mov
iret
cli
fmul
lea
dec
loope
adc
cmp
ror
leave
sbb
sbb
leave
add
xor
gs
push
xor
ins
and
jmp
xchg
or
je
add
iret
icebp
pop
add
mov
or
mov
jnp
sub
sub
loope
fcom
push
add
push
jmp
adc
adc
cmp
mov
loop
cmp
mov
(bad)
fst
xchg
test
lods
or
aad
jge
xchg
xor
xor
rol
jae
add
sub
and
pusha
jl
inc
fldcw
dec
clc
add
outs
mov
dec
jmp
ret
jecxz
sub
and
adc
int3
xor
rcr
mov
cmp
rcl
in
enter
mov
add
sub
xchg
pop
cmp
jmp
push
add
or
xchg
icebp
cmps
add
cwde
in
or
je
clc
and
out
pop
pop
aaa
xor
icebp
jnp
sbb
in
pop
add
pop
ret
or
pop
lock
shr
mov
aas
jns
loop
jno
jmp
push
cmp
mov
dec
test
mov
rol
cmp
jge
rol
xchg
test
dec
sbb
xchg
dec
test
retf
loop
rol
sbb
cmp
movs
sbb
dec
cwde
(bad)
jmp
dec
pop
push
pusha
lock
add
jge
push
and
add
inc
or
sbb
adc
add
cmp
adc
or
cmp
push
mov
xchg
icebp
or
hlt
popa
inc
loop
push
ficomp
ss
adc
jecxz
add
add
xchg
xor
add
outs
test
mov
or
add
dec
sub
jno
adc
push
je
sub
xor
xlat
shr
mov
clc
jae
aad
pop
and
adc
mov
xor
imul
push
dec
out
in
add
leave
in
cld
in
push
mov
clc
mov
test
ret
out
ja
sub
inc
push
ins
inc
scas
adc
jl
cmp
bound
sbb
inc
ret
dec
cmp
fs
mov
jecxz
loope
jb
in
in
in
and
(bad)
les
or
cmp
(bad)
aas
(bad)
es
add
out
dec
pop
scas
push
dec
pop
or
pop
mov
fdivrp
sub
xchg
pop
push
mov
mov
test
pusha
or
es
les
mov
cmc
or
imul
inc
dec
sbb
outs
jne
jmp
js
jb
jmp
inc
sbb
test
xchg
outs
lahf
hlt
cmps
es
scas
aam
ror
xor
pop
add
dec
dec
sub
icebp
sbb
xchg
retf
adc
icebp
lock
ror
icebp
sbb
add
pop
fs
fmul
inc
repnz
nop
add
mov
jne
outs
push
add
push
fs
add
dec
rcl
xchg
cld
shl
dec
xchg
mov
mov
pop
sar
mov
sub
por
or
add
jne
push
lea
or
lods
fadd
(bad)
iret
inc
fs
bnd
pop
das
and
rol
aam
add
sbb
repnz
outs
mov
and
ins
dec
test
mov
pop
fmul
in
neg
sbb
inc
sahf
gs
dec
and
call
aam
push
fisttp
pop
inc
movs
icebp
xor
leave
add
cwde
(bad)
std
or
or
dec
dec
sbb
fadd
arpl
in
dec
call
shl
cmps
xchg
cmps
mov
xor
outs
dec
inc
xchg
sub
es
inc
sub
xchg
pushf
fcomp
add
inc
push
aam
int3
or
dec
aaa
(bad)
and
push
pop
xor
or
nop
jg
or
add
loopne
(bad)
or
dec
inc
cs
and
ret
repz
inc
add
inc
push
repz
mov
sbb
xor
imul
and
pop
loop
or
lods
add
or
jmp
arpl
jecxz
xor
push
push
pop
sbb
or
loop
xlat
push
jns
mov
inc
and
mov
push
inc
adc
rol
fwait
(bad)
je
rcl
popf
mov
js
inc
imul
push
fisttp
lock
stc
in
or
sub
cli
fsub
in
loope
push
or
jno
shr
adc
ret
gs
lods
jmp
test
push
inc
pop
shl
(bad)
sub
lea
xchg
add
fcmovb
fcom
sub
outs
sub
pcmpgtd
jbe
(bad)
cli
push
sub
imul
push
cmp
in
xchg
retf
mov
rcl
or
ss
hlt
fs
sub
in
cmp
scas
mov
xor
and
inc
les
xchg
stc
inc
or
arpl
in
js
sub
mov
sub
gs
pop
inc
in
sub
cmp
sbb
adc
push
mov
(bad)
and
aam
add
imul
sub
call
xchg
or
sub
fstp
fisub
sti
jmp
jnp
dec
enter
fcom
mov
cmps
push
inc
scas
cmps
pop
add
inc
leave
test
add
mov
adc
jg
rol
xchg
fisttp
mov
inc
fcomp
sbb
in
jmp
mov
icebp
leave
add
popa
sbb
xor
in
add
ret
icebp
xchg
and
mov
lods
data16
mov
xlat
addr16
lods
scas
push
sub
clts
in
mov
mov
inc
and
dec
shl
xor
hlt
jp
push
mov
push
xor
jo
mov
test
push
sbb
shl
mov
sbb
inc
xchg
pop
hlt
jne
adc
xchg
push
jbe
(bad)
mov
test
test
out
adc
sub
cmps
loope
or
sti
or
out
cli
jl
push
mov
fld
stos
pop
cld
mov
jbe
std
hlt
mov
mov
std
mov
pop
aaa
or
retf
mov
sub
push
fbld
ret
aam
ds
mov
(bad)
out
adc
cli
push
jb
inc
xor
adc
gs
fsub
dec
dec
hlt
loopne
sbb
inc
push
loope
mov
gs
inc
xor
shr
call
loope
fmul
stc
pop
inc
cmps
jecxz
mov
or
test
in
inc
loopne
aam
add
sbb
fimul
jmp
test
or
dec
rsm
fs
or
push
sbb
and
sub
lods
fcmovnbe
jmp
and
pop
in
jnp
jmp
std
hlt
and
adc
xchg
fsubr
mov
push
push
pop
mov
loop
movs
jg
std
and
stc
test
cld
xchg
out
call
or
inc
cmps
ret
and
imul
fstp
and
push
sbb
fldcw
adc
shr
jo
jne
push
mov
adc
and
(bad)
(bad)
jl
adc
push
sbb
mov
lods
icebp
sbb
and
jbe
adc
iret
or
lds
int3
bound
xchg
sbb
adc
cld
lahf
xor
mov
inc
dec
jne
ja
xlat
inc
xor
fnstcw
and
xlat
add
inc
xchg
adc
or
mov
test
in
clc
shl
leave
cmp
inc
dec
jne
pop
out
push
jb
js
sbb
jg
mov
sub
sbb
daa
sbb
ret
sub
mov
sbb
mov
and
push
pop
inc
fwait
pop
ror
mov
clc
jbe
fisub
push
inc
add
xchg
sbb
sar
lods
inc
sub
popa
sub
sbb
dec
daa
xor
push
daa
adc
add
pop
test
fstp
push
or
lahf
pusha
sub
sub
pop
ret
and
mov
dec
and
jnp
repnz
pop
addr16
mov
xor
retf
sbb
lahf
(bad)
mov
in
push
das
clc
add
xor
jp
add
rcr
inc
cmp
ins
add
jo
sbb
push
pop
mov
addr16
and
jns
ret
add
out
sbb
mov
test
daa
imul
sub
movs
mov
aam
adc
loopne
xchg
xchg
sub
hlt
add
fisub
lahf
cmp
add
inc
int3
(bad)
adc
inc
and
stc
in
shl
inc
push
adc
dec
pop
push
inc
push
push
mov
sbb
call
js
adc
sub
repz
rcr
xor
pop
es
sbb
test
nop
retf
and
xor
(bad)
or
cdq
fs
xor
rcl
inc
cs
sbb
xchg
sub
ja
adc
inc
enter
sbb
add
mov
lahf
out
inc
ins
loop
mov
popa
mov
pop
or
shl
js
xor
jecxz
outs
int3
popf
jnp
nop
imul
xchg
daa
cwde
xlat
pop
add
pop
inc
jg
add
in
xlat
add
pop
mov
pmaxsw
mov
mov
loop
loop
adc
and
fsubr
sub
cmp
dec
xor
aam
pop
sub
ss
and
ret
dec
inc
inc
jmp
js
(bad)
adc
(bad)
aam
jg
sub
pusha
push
pop
inc
das
icebp
rol
je
jmp
iret
dec
(bad)
cmp
xchg
sbb
push
cmp
dec
and
es
pop
inc
cmp
lods
inc
lahf
out
movs
loop
scas
cmp
xor
pop
mov
push
xchg
daa
dec
mov
sub
mov
xchg
es
rcr
or
ret
push
fld
mov
inc
jnp
loope
push
icebp
cdq
and
dec
rcr
sbb
nop
es
sbb
jge
movs
ret
adc
mov
pushaw
xchg
inc
sbb
adc
mov
daa
in
inc
inc
xchg
fwait
cmp
icebp
test
icebp
test
inc
adc
and
inc
and
or
push
sbb
xchg
inc
ror
scas
inc
jae
add
jno
dec
add
mov
sub
out
pop
mov
and
mov
push
pop
cmps
or
lods
shl
add
stos
test
add
mov
xor
jb
add
dec
sbb
cs
or
xor
jge
fwait
mov
mov
add
xor
or
and
inc
inc
les
mov
add
add
pop
mov
sbb
(bad)
add
inc
cmps
dec
(bad)
push
or
push
add
repnz
mov
mov
rcr
repz
sub
cmc
adc
mov
jo
int
pop
arpl
and
and
aaa
and
fstp
fwait
jo
clc
pop
cmp
jecxz
enter
sub
aam
ds
bound
sbb
mov
add
pop
ja
pop
mov
jbe
add
inc
and
or
cmps
loope
push
or
add
ins
or
call
shl
movs
data16
add
inc
out
mov
push
push
icebp
rcl
fs
nop
dec
aam
pop
leave
mov
xor
adc
pop
add
or
jno
fwait
movs
pop
shr
or
pushf
movs
or
or
and
pop
dec
shl
cdq
test
leave
jg
inc
pop
mov
daa
and
adc
dec
je
repnz
pop
xchg
mov
jmp
sub
sar
add
add
pop
or
cmp
sub
mov
sub
call
and
xor
sub
js
addr16
ret
ret
cmp
push
inc
push
leave
jno
add
inc
mov
outs
cmp
add
enter
or
aad
aaa
xor
mov
jbe
add
cld
mov
movs
imul
pop
and
cmps
push
or
mov
inc
or
push
out
dec
and
cmps
ret
pop
mov
enter
sub
sub
(bad)
xor
xchg
mov
cs
(bad)
jo
and
xor
and
dec
mov
add
leave
pop
mov
mov
and
data16
xchg
mov
xchg
or
leave
call
sub
and
sbb
or
mov
ret
hlt
adc
sbb
hlt
push
ret
clc
mov
or
ja
test
ror
das
jmp
dec
inc
inc
cs
sbb
add
sti
mov
push
add
stos
aas
jg
push
leave
mov
adc
mov
cwde
adc
pop
test
inc
adc
les
sub
and
adc
mov
jne
adc
jle
adc
cmps
nop
inc
rcl
in
lock
or
dec
sub
adc
test
dec
cmp
sbb
xchg
xchg
or
dec
xchg
and
and
rcl
adc
es
or
dec
adc
repnz
mov
adc
mov
sub
pop
inc
add
dec
(bad)
mov
not
and
(bad)
ficom
dec
jo
dec
fadd
leave
mov
adc
stos
stos
movs
ja
clc
cmp
adc
add
adc
pop
pop
xor
scas
loope
test
fnstcw
or
xor
mov
and
stos
clc
repz
(bad)
xlat
imul
cld
and
clc
ror
jmp
(bad)
hlt
pop
sub
ret
push
mov
movs
jne
jg
cwde
dec
loopne
mov
sub
adc
sub
xchg
or
ins
mov
mov
and
stc
or
dec
add
add
jmp
ret
les
cdq
call
aam
rol
pop
repnz
add
lods
mov
push
ins
sbb
xchg
data16
add
shld
movs
inc
cs
or
inc
test
or
jg
mov
cld
cld
fidivr
inc
xchg
or
ficom
mov
sbb
sbb
ja
sub
loopne
mov
sub
jle
push
xor
push
jge
adc
and
sbb
movs
in
pop
add
cwde
push
add
xchg
add
inc
push
add
add
pop
mov
push
add
lahf
and
or
sbb
mov
arpl
(bad)
movs
ficomp
movs
outs
out
sub
mov
xlat
aas
in
mov
add
or
adc
enter
jmp
mov
or
mov
(bad)
aaa
cmp
pop
mov
ud1
push
sbb
(bad)
sub
add
in
pop
xor
adc
outs
inc
in
test
push
add
push
and
ds
cmp
jge
clc
cs
nop
in
push
stos
sub
add
cmp
add
and
push
push
sbb
adc
dec
dec
mov
sub
push
cwde
mov
rol
loope
cmp
hlt
push
cmp
sub
mov
xlat
cvtps2pd
stc
rcr
sahf
outs
sbb
push
call
sbb
(bad)
jbe
lods
inc
sahf
xchg
inc
mov
inc
call
shr
imul
push
dec
les
push
push
loope
add
cmp
or
mov
cmp
int
loopne
inc
sub
imul
das
and
(bad)
nop
pop
popa
push
jbe
add
lds
aas
and
inc
sbb
repnz
mov
push
hlt
js
inc
sub
pop
mov
pop
movs
or
inc
leave
dec
add
xlat
dec
dec
and
(bad)
mov
aas
inc
jle
das
fild
jecxz
aas
fwait
lock
sahf
arpl
imul
or
cld
arpl
or
inc
cmps
cmp
sbb
cs
dec
cmc
cmps
cmps
lods
pop
out
dec
pop
lods
mov
cmc
jl
and
add
sub
sub
pop
popa
les
ds
add
and
ror
fadd
mov
ja
inc
inc
loop
cmp
add
add
test
pop
fld
sar
leave
fmul
js
or
push
loope
add
push
or
sub
fcompp
sbb
or
sub
fnstenv
mov
mov
cmp
scas
(bad)
or
pop
leave
(bad)
cmp
stos
aas
int
sbb
clc
fiadd
clc
aas
push
mov
test
adc
(bad)
push
pop
dec
ds
hlt
and
add
sbb
mov
(bad)
fdiv
fwait
and
cmp
clc
cmp
fiadd
cs
add
leave
mov
sar
cmp
mov
in
pusha
push
pushf
inc
cmps
lds
dec
ret
test
sub
cmp
or
sbb
pop
adc
fstp
mov
stos
push
mov
dec
sub
dec
pop
stos
outs
test
xor
je
das
test
mov
push
cmp
push
ss
ret
cmp
push
mov
sbb
xchg
sub
xor
cmp
or
sbb
sbb
adc
mov
je
sahf
retf
push
or
sub
cmp
and
imul
std
jno
add
add
cld
clc
push
jns
es
cmp
mov
xor
je
mov
lods
addr16
xchg
add
je
arpl
mov
loope
push
test
adc
(bad)
xor
das
fwait
loop
loopne
sub
jmp
adc
xor
test
mov
(bad)
lods
or
loope
mov
add
or
inc
or
and
(bad)
dec
retf
jne
mov
mov
pop
pop
iret
push
shr
or
mov
popf
inc
and
push
ret
inc
sub
jne
and
dec
or
clc
call
sub
pusha
or
jmp
clc
inc
movs
or
cmp
mov
lea
and
add
gs
es
cld
stos
xlat
mov
sub
hlt
xor
add
test
add
adc
xor
sbb
push
daa
mov
pop
sub
push
ins
wrmsr
inc
movs
in
push
ret
pop
adc
cmp
xchg
adc
or
jns
ror
sbb
mov
add
les
ret
leave
lds
sub
push
test
push
jecxz
int
xor
add
pop
test
out
push
mov
mov
pop
dec
add
push
cmc
shl
popa
xor
nop
mov
je
cmp
mov
and
pop
leave
enterw
lods
icebp
mov
pop
and
ror
clc
add
add
mov
adc
cmp
aad
retf
jbe
sar
loopne
inc
repz
add
or
mov
add
aaa
or
mov
xchg
mov
adc
rcl
or
jno
loopne
jp
iret
outs
aad
xor
les
mov
popa
rcl
and
aas
test
pop
rol
pop
jl
sub
mov
fs
aam
std
push
mov
js
enter
jo
bound
pop
pop
push
sub
cmp
mov
ror
sbb
mov
rol
xchg
sub
add
inc
xor
rcl
sbb
int
je
fistp
and
daa
arpl
bound
add
sub
sub
and
call
add
add
and
lock
sbb
pop
aam
jbe
lock
ret
js
shl
adc
(bad)
jae
pop
mov
or
mov
inc
neg
push
mov
sbb
jg
adc
add
add
push
mov
mov
xor
and
sub
add
xchg
dec
rcr
(bad)
int
lock
sbb
test
sti
push
add
xchg
mov
je
outs
adc
cmp
mov
jge
xchg
xor
jo
test
pop
aad
cs
les
mov
cmps
add
push
add
dec
adc
mov
mov
pusha
mov
shl
jbe
add
dec
aad
iret
inc
pop
mov
adc
add
add
test
rcl
pop
test
ret
imul
mov
(bad)
nop
sub
pop
or
add
or
cmp
dec
sbb
fcomp
into
cmc
and
mov
dec
mov
mov
test
mov
or
and
add
pusha
cmps
add
test
cwde
add
dec
les
and
inc
cs
sub
jne
sub
enter
in
mov
mov
xor
or
mov
jmp
push
pop
adc
movs
or
xchg
mov
jl
xor
xchg
ja
or
add
hlt
and
mov
pushf
xor
and
pop
shl
les
fsub
add
or
out
cmps
aas
adc
arpl
pop
ss
and
xchg
lods
data16
and
sub
cmp
and
lods
mov
sbb
fcom
ret
call
jp
add
in
mov
inc
fisub
ins
daa
fucomp
push
xlat
outs
rol
add
mov
imul
add
les
imul
aas
add
repz
add
cld
loopne
pop
push
shl
add
les
aaa
cmps
add
mov
inc
mov
pop
add
xchg
loop
inc
jge
rcl
sub
ret
sub
movs
xor
jns
pop
pop
stos
xchg
dec
aad
adc
addr16
or
ror
or
sbb
movs
hlt
mov
rol
cwde
in
push
in
inc
push
xchg
push
ror
xchg
das
push
nop
xchg
ds
inc
clc
mov
sbb
xchg
inc
data16
mov
dec
leave
clc
pop
mul
or
int3
xchg
repz
inc
sub
fisubr
inc
ret
les
add
xor
mov
mov
push
les
mov
sbb
(bad)
or
mov
pop
cmp
add
add
lods
lds
xor
and
and
lods
cmps
dec
cld
jns
sar
or
pop
pop
or
arpl
mov
mov
push
xor
cmp
daa
pop
adc
pop
fcom
clc
out
fsub
js
dec
mov
hlt
or
push
mov
jno
ret
mov
cwde
jae
push
mov
or
orps
or
adc
jb
sbb
jmp
pop
sub
cmp
sub
and
clc
add
sbb
ror
cmp
xor
pop
and
push
xchg
sub
lock
ja
fwait
mov
(bad)
inc
jecxz
mov
xchg
dec
inc
dec
shr
je
adc
in
js
push
or
xor
int
cs
shl
mov
sbb
fcomp
and
xchg
dec
fs
fist
mov
repz
div
mov
pop
dec
xchg
push
jbe
jnp
xchg
test
add
dec
daa
jno
mov
dec
call
cwde
pushf
mov
and
sar
xor
in
xor
or
imul
push
or
test
repnz
enter
je
enter
inc
je
nop
push
call
dec
xor
lods
push
jb
repz
cdq
add
mov
cmp
out
mov
sub
adc
or
jo
fimul
add
jae
popa
enter
dec
fs
jmp
dec
mov
into
frstor
rol
lahf
gs
sbb
cdq
xchg
out
mov
je
fbstp
and
mov
mov
fadd
or
or
add
fs
bound
pop
les
push
and
push
jmp
scas
in
(bad)
call
js
cmp
push
cmp
sub
clc
dec
imul
jno
rol
loope
(bad)
xchg
js
rcr
sub
int3
push
dec
add
pop
shl
push
xchg
ja
fld
and
add
xor
popf
add
fstp
shl
xchg
add
mov
push
sbb
pop
push
inc
adc
jecxz
cmp
aas
lds
daa
inc
pop
aaa
add
mov
push
or
pop
cmps
mov
repz
mov
jne
loope
(bad)
aaa
dec
movs
or
and
xchg
lock
inc
mov
test
inc
mov
and
inc
push
je
adc
mov
jecxz
add
mov
cwde
scas
pop
outs
inc
add
cld
push
cdq
dec
shl
or
xor
sub
inc
mov
jne
inc
shl
inc
xchg
cmp
adc
arpl
mov
jmp
add
fdivr
imul
mov
pop
push
inc
mov
cmp
dec
loopne
push
xchg
test
or
(bad)
out
pop
push
test
inc
jo
and
xor
fisttp
in
aam
jmp
test
xlat
jns
add
mov
xchg
mov
cs
pop
sbb
xor
xor
or
add
mov
sbb
test
into
inc
cmp
xchg
mov
and
loopne
in
add
xchg
jl
pop
test
add
sbb
ror
cmovbe
movs
rcr
test
add
push
and
sbb
pop
inc
jg
push
cmp
sub
aaa
sub
mov
jmp
push
rcl
mov
xor
jo
mov
es
leave
clc
mov
gs
sub
inc
ins
pusha
push
es
xchg
jae
mov
outs
xor
in
sbb
dec
adc
cdq
test
mov
push
xor
ret
sub
cmp
cmp
cs
fsub
aas
nop
(bad)
pop
pushf
jmp
sub
(bad)
(bad)
js
push
idiv
sbb
add
fcom
push
jo
adc
ins
call
push
bound
call
or
mov
mov
sbb
ja
mov
fld
inc
fdivr
sbb
bound
sbb
add
mov
mov
fincstp
push
sbb
and
popa
loopne
and
add
xchg
push
and
sub
push
aad
add
xchg
pop
fstp
enter
popf
aam
aaa
inc
pop
repnz
push
dec
sub
push
add
jmp
(bad)
pop
popf
mov
mov
rcl
and
test
js
ds
dec
xchg
dec
ficomp
xor
cmp
cmp
stos
inc
mov
shr
inc
push
inc
mov
and
push
repnz
sbb
daa
pop
mul
mov
adc
data16
adc
call
push
fmul
mov
inc
dec
call
je
clc
fstp
inc
inc
xchg
in
and
adc
inc
aaa
sbb
mov
loope
sbb
cdq
shr
add
cmp
movs
sbb
lock
or
sbb
jmp
or
xor
aam
add
in
mov
es
and
push
dec
push
fmul
xor
in
scas
inc
cwde
popa
or
inc
xchg
dec
xchg
fstp
or
adc
pop
dec
xchg
dec
sbb
jg
xlat
movs
mov
dec
pop
add
adc
dec
push
push
or
(bad)
mov
pop
fs
adc
retf
in
in
jmp
add
or
add
nop
pop
add
ret
jns
lock
shr
outs
xchg
add
lock
fwait
jmp
jmp
inc
or
push
in
sbb
inc
ins
cmps
inc
inc
add
add
add
inc
rcl
int
int3
mov
sti
cmp
or
xor
jmp
and
xchg
pop
push
leave
add
mov
adc
pop
xor
and
nop
cwde
xchg
inc
ins
mov
inc
inc
inc
inc
add
nop
out
xor
int3
inc
inc
or
sbb
mov
stos
aad
int
push
push
sub
repnz
push
push
xor
push
add
pushf
add
in
sub
and
leave
or
ds
inc
add
xchg
pushf
shl
inc
ret
mov
adc
aad
cmps
push
js
cmc
cmp
jb
jl
and
dec
outs
push
in
in
and
cwde
mov
mov
les
aam
aam
jns
inc
xor
mov
push
sub
je
jmp
test
test
adc
or
sbb
aaa
retf
cmp
push
and
or
jae
add
test
add
jnp
adc
pop
jb
mov
fmul
xor
lea
or
test
nop
mov
pop
int3
mov
mov
in
pop
nop
fs
inc
xchg
mov
adc
inc
in
xlat
inc
cmp
jmp
inc
in
(bad)
les
inc
xchg
mov
push
adc
mov
jns
xchg
jne
sbb
pusha
add
or
and
shl
and
or
arpl
in
movs
inc
les
das
cmp
push
and
push
fwait
xchg
mov
aaa
ds
xchg
sahf
add
xor
jns
sbb
mov
popf
clc
and
test
outs
sbb
jecxz
test
xchg
inc
lahf
push
ror
(bad)
imul
add
push
xchg
aam
in
xchg
add
pop
pop
popa
or
or
xor
or
mov
outs
sub
enter
jmp
int
dec
mov
mov
fiadd
jmp
test
cwde
mov
pusha
dec
add
push
push
mov
mov
inc
adc
xchg
pop
shl
and
hlt
jmp
adc
dec
pop
ror
jns
dec
or
les
add
fs
in
and
xor
ret
or
xor
xchg
sbb
xor
pop
sub
add
sub
and
dec
dec
int3
call
test
push
xchg
jl
ins
xchg
enter
xor
lea
xchg
push
sbb
and
mov
sub
pop
mov
jb
rol
fmul
adc
dec
enter
(bad)
(bad)
pop
push
or
pop
daa
cmp
sbb
xor
popa
pop
leave
sbb
call
mov
retf
dec
clc
enter
jb
imul
add
sbb
xchg
pop
sbb
jno
cmp
add
(bad)
mov
hlt
sub
jae
daa
add
add
add
loop
fs
xor
sub
add
outs
mov
lea
(bad)
adc
pop
push
adc
inc
pusha
and
fs
adc
sub
lea
cld
ret
and
loope
ficomp
cwde
mov
lock
jo
outs
or
rcr
je
jo
lock
push
cmp
jns
retf
xchg
xchg
and
xchg
movs
push
jo
dec
dec
je
dec
inc
and
js
cmp
shl
lea
mov
pop
pop
lds
dec
xor
repz
jne
sub
enter
dec
repz
rcr
xchg
(bad)
imul
push
or
xor
outs
fbstp
and
fild
jo
cmp
add
fs
dec
mov
daa
cwde
mov
out
fadd
ins
push
inc
shl
nop
xor
adc
fnstenv
das
dec
jg
xchg
cmps
repnz
and
popf
xchg
js
mov
or
sub
push
cld
sti
aaa
pop
mov
hlt
ins
fcomp
sbb
adc
lock
xchg
xor
sete
pop
stc
shl
je
lea
or
hlt
int3
xchg
into
in
pop
push
gs
sbb
mov
jae
adc
push
inc
leave
scas
ss
xor
cmps
shl
dec
rcr
push
push
sub
adc
call
add
push
dec
jecxz
shr
fldcw
add
stos
inc
pushf
add
jne
imul
inc
sub
sti
mov
dec
jp
and
push
fiadd
push
pushf
in
rep
mov
mov
je
jecxz
push
jecxz
daa
or
ins
lahf
xor
adc
and
sub
cmps
cwde
mov
and
dec
pop
rol
dec
push
cdq
lea
sbb
in
data16
mov
call
rol
xor
jbe
cmp
popf
cdq
add
mov
pop
xlat
fsub
pusha
push
stc
xchg
popf
or
mov
add
add
(bad)
xor
mov
or
add
fimul
mov
fdiv
mov
(bad)
aam
call
fdivr
or
push
aaa
inc
sar
aaa
hlt
dec
push
rol
cmp
xchg
out
(bad)
and
and
call
jecxz
cmp
imul
or
adc
gs
aam
or
jbe
inc
stos
adc
or
push
cmp
js
mov
or
add
push
push
mov
sub
scas
mov
push
div
pop
pop
jae
inc
sbb
(bad)
cmp
movs
add
xchg
push
xchg
(bad)
cmps
nop
inc
outs
cmp
inc
pusha
inc
fist
test
sub
enter
bound
jne
nop
dec
adc
mov
mov
pop
add
dec
hlt
mov
mov
ss
mov
cmp
cmp
sahf
xchg
cdq
add
ja
iret
arpl
and
arpl
in
or
pusha
(bad)
in
xchg
push
enter
hlt
hlt
mov
push
or
sar
jns
pop
pop
or
scas
dec
and
and
jbe
inc
cwde
push
inc
outs
sub
stos
xchg
xchg
inc
push
adc
add
out
(bad)
or
jno
mov
(bad)
test
adc
hlt
adc
xor
adc
das
lea
sub
cmps
push
dec
ret
and
push
nop
(bad)
adc
push
jg
inc
ins
arpl
rcr
imul
cmp
pop
and
ret
adc
das
pshufw
sub
das
je
mov
pop
pop
inc
cmps
jge
cmps
das
xchg
outs
jns
or
pusha
pop
fiadd
outs
push
push
dec
add
sbb
add
push
fcom
push
jne
mov
jl
mov
aaa
lods
das
(bad)
pop
fmul
push
push
add
or
cmp
daa
push
jo
xor
and
cmp
ins
adc
sar
dec
sub
int
push
gs
inc
lea
pop
cmp
stos
xchg
inc
cmp
ja
ds
iret
push
gs
push
daa
add
loop
dec
ins
sbb
dec
sar
jne
push
or
adc
jae
inc
pop
xchg
(bad)
dec
or
addr16
pop
inc
and
ins
mov
and
sbb
pop
icebp
xlat
pop
imul
inc
xchg
dec
popa
jae
rol
inc
loopne
scas
push
xor
ror
adc
or
pop
or
bound
mov
jo
lahf
xor
pop
and
dec
pop
mov
xor
jb
sbb
sub
inc
fwait
je
pop
sub
sub
inc
jne
push
push
imul
outs
jg
xor
adc
test
pop
sti
or
add
pop
inc
fistp
xchg
xchg
inc
dec
pop
retf
sub
fsub
imul
call
add
fcmovnb
or
dec
arpl
push
fdiv
add
cmps
pop
dec
push
scas
pop
rol
cmp
lea
lods
or
and
or
sbb
aad
pop
sbb
xor
push
aaa
(bad)
xor
xor
and
mov
push
sbb
cmp
popf
adc
jae
adc
jg
adc
dec
mov
xchg
cmp
inc
je
addr16
or
sbb
daa
mov
mov
test
sbb
push
pop
push
into
push
push
sub
mov
mov
in
dec
shl
sub
es
sbb
cwde
in
les
dec
adc
add
sub
mov
cmp
xor
cmps
shr
inc
sbb
inc
inc
out
xor
jmp
dec
jne
cmp
pop
pop
inc
mov
les
dec
pop
cmp
mov
arpl
and
sbb
fsub
push
pop
mov
loopne
lea
xor
inc
mov
aad
fldenv
leave
inc
xor
xchg
xchg
mov
and
dec
outs
retf
inc
and
retf
je
shl
je
dec
push
aad
retf
movs
cmc
inc
sub
add
stc
push
shl
xlat
push
fbstp
call
add
and
push
mov
call
push
(bad)
mov
push
cmps
cmps
stos
or
xlat
mov
cwde
push
hlt
outs
inc
shl
sbb
xlat
sub
push
pusha
mov
mov
fdiv
adc
adc
fld
sbb
loope
sbb
adc
jmp
xor
in
xchg
fucomip
pop
int3
mov
xor
sbb
push
pushf
and
inc
dec
or
mov
pusha
pop
retf
jns
jo
sub
je
nop
stos
mov
sbb
cmp
add
or
je
mov
cld
inc
test
mov
inc
jle
arpl
mov
pop
or
mov
and
movs
jo
push
pop
add
or
test
in
dec
(bad)
loop
push
add
push
retf
dec
cmp
dec
inc
inc
push
push
in
imul
sbb
jne
xchg
add
test
xor
aas
js
adc
pop
je
aas
mov
push
xor
shr
xor
or
add
mov
xor
and
fbld
in
add
jne
or
mov
xor
add
add
sbb
add
ss
mov
inc
cmps
inc
add
and
or
out
mov
inc
fs
sbb
repnz
cmp
test
loopne
xor
fisttp
lds
mov
or
mov
and
aad
sub
mov
or
push
mov
adc
dec
ret
lock
sbb
add
aam
mov
jnp
sub
out
push
xor
call
adc
push
retf
call
sbb
sar
dec
sbb
add
mov
inc
push
xor
add
sub
fsubr
mov
mov
ins
push
aas
xor
push
ins
push
mov
test
mov
mov
add
and
mov
adc
and
pop
repnz
enter
mov
iret
test
mov
jae
cld
adc
jae
iret
test
fs
repnz
enter
mov
mov
outs
pop
adc
sbb
xor
lea
pusha
sbb
data16
imul
sbb
add
xor
and
repnz
push
jmp
inc
mov
sbb
inc
inc
popa
inc
inc
jb
sahf
add
(bad)
jnp
mov
adc
mov
add
call
out
sbb
jbe
add
push
push
xchg
add
mov
push
ins
daa
add
pop
leave
pop
pop
jb
ins
std
mov
sbb
ret
dec
or
push
inc
or
pop
bound
repz
iret
jnp
aad
retf
pop
pop
test
push
sub
popa
lods
iret
pop
sbb
arpl
or
dec
arpl
push
and
cmovb
adc
bound
jae
das
push
push
and
dec
and
pop
mov
xor
cmp
bswap
pop
xor
ret
and
add
(bad)
sub
lea
mov
inc
pushf
dec
push
test
and
addr16
dec
(bad)
mov
adc
in
inc
nop
inc
sub
or
xchg
pop
loope
sub
(bad)
dec
ds
pop
add
not
sub
adc
or
nop
push
jmp
fcmovnb
(bad)
mov
xor
sbb
das
xor
add
jo
pusha
adc
adc
mov
ins
push
push
les
sbb
inc
mov
xor
add
push
pusha
ins
ins
push
imul
xchg
mov
xchg
and
cmps
daa
add
add
mov
push
push
and
pusha
mul
jo
add
inc
add
pop
add
mov
(bad)
mov
inc
dec
or
add
es
ror
popa
div
push
les
es
mov
pusha
pop
fdiv
bound
clc
or
and
inc
adc
daa
xor
add
push
jg
xchg
jl
imul
adc
ret
into
ja
adc
or
mov
popf
sub
sti
dec
xor
ins
push
cmp
and
mov
add
enter
mov
dec
sub
ins
mov
gs
push
push
adc
mov
pop
sub
movs
ficom
and
push
mov
enter
repnz
ins
imul
xchg
mov
(bad)
push
dec
jmp
push
adc
rol
adc
add
sbb
in
add
outs
jb
pop
adc
lods
fwait
test
or
fld
add
lar
jo
or
adc
ret
or
dec
popa
test
bound
push
jb
add
popa
clc
cmp
sti
mov
retf
clc
daa
dec
and
mov
push
popa
dec
sub
push
push
xchg
push
sbb
add
sbb
dec
inc
and
push
ja
fs
mov
hlt
sbb
inc
add
jae
jno
push
mov
inc
(bad)
mov
xor
lds
lds
add
inc
xchg
fwait
mov
popa
xor
and
dec
adc
pop
pop
dec
adc
loopne
xchg
shl
and
add
sbb
mov
pop
sub
mov
jg
inc
push
and
cmps
(bad)
enter
jb
hlt
les
mov
(bad)
ja
ins
dec
test
dec
(bad)
lock
add
lock
sub
mov
xor
mov
and
add
push
or
adc
or
stos
je
clc
inc
pusha
shl
js
mov
add
sub
mov
dec
pop
mov
pusha
in
xchg
add
mov
fwait
das
in
xchg
sub
jp
add
add
adc
inc
sbb
jmp
jmp
rcr
adc
inc
mov
sti
adc
(bad)
pop
xchg
iret
jge
into
je
push
outs
nop
inc
or
cmp
retf
and
sahf
icebp
es
jo
dec
clc
sbb
mov
fucom
es
xchg
aad
sub
or
repnz
lds
add
jmp
loope
int3
pop
xor
inc
repnz
iret
xchg
sub
out
mov
lock
push
xor
and
clc
int
pop
inc
sahf
jne
cmp
lock
adc
inc
mov
add
mov
jp
sub
test
scas
cld
inc
cld
push
test
mov
in
adc
dec
dec
dec
mov
cmps
push
or
aad
push
(bad)
ret
jmp
inc
repnz
ja
mov
inc
dec
add
push
cmp
or
mov
pushf
and
pusha
daa
or
adc
aas
mov
cmps
dec
fs
cmp
mov
bnd
js
push
cmp
xor
xchg
cmp
cmp
push
adc
pop
push
or
(bad)
js
(bad)
adc
or
mul
cmp
mov
inc
cmp
cmp
or
sbb
fisub
daa
and
sub
adc
mov
shl
(bad)
mov
js
and
ret
mov
sbb
xchg
push
cmps
jns
xchg
scas
movs
ss
inc
pop
jle
sub
cmps
imul
ror
pushf
ret
imul
mov
call
dec
xchg
xlat
xor
mov
adc
xchg
mov
push
cli
add
call
ins
loope
sub
mov
aam
outs
or
push
enter
or
movs
cmp
cmp
inc
clc
mov
mov
or
adc
mov
xchg
xchg
jle
add
pop
jle
mov
fisub
daa
add
xchg
sbb
pop
je
xchg
add
add
popa
fsubr
mov
daa
fsub
or
scas
pop
xchg
adc
inc
dec
clc
ins
gs
mov
sbb
sbb
sub
(bad)
daa
push
mov
mov
les
mov
inc
adc
and
add
mov
adc
das
dec
mov
outs
inc
adc
jmp
adc
arpl
outs
scas
sub
addr16
adc
inc
arpl
leave
sub
push
je
pop
(bad)
lock
adc
and
inc
dec
repnz
push
cli
dec
dec
inc
dec
dec
jg
jge
push
adc
pusha
aas
iret
sub
inc
ds
inc
cmp
sbb
add
pop
cmp
jle
inc
inc
add
adc
and
jnp
add
sub
sub
inc
dec
xor
mov
xor
pop
push
and
sbb
push
pusha
test
inc
fwait
inc
sbb
adc
aaa
clc
inc
ins
outs
arpl
mov
cld
inc
rcr
movs
das
aam
push
pushw
outs
jns
pusha
sub
aas
jae
aam
sbb
fdivr
push
loopne
xchg
jl
inc
sbb
pop
les
lock
pop
push
inc
cdq
push
das
gs
shl
pop
sub
sbb
push
pop
jb
aaa
inc
adc
daa
pop
addr16
and
dec
sbb
sub
(bad)
add
cvttps2pi
(bad)
shl
pop
adc
jecxz
pop
jmp
lea
nop
xor
and
rcr
xor
sbb
and
pop
and
adc
lock
cmps
xor
inc
mov
xor
outs
mov
xor
xor
ret
(bad)
pop
inc
test
repnz
add
adc
cmp
inc
(bad)
mov
jno
adc
inc
into
sbb
jle
pop
and
mov
push
out
adc
add
sar
ror
xor
jo
cmp
call
pop
retf
ins
dec
aaa
xor
in
into
cmp
jp
aad
add
(bad)
movs
fmul
inc
or
call
add
xchg
add
lock
or
push
add
add
mov
cmp
inc
push
fs
or
add
jno
xchg
add
or
stc
dec
loope
les
sbb
dec
xlat
mov
ficomp
rol
js
sub
jno
or
sbb
pop
fldcw
fistp
pop
pop
repnz
mov
das
push
jge
dec
jge
popa
mov
xlat
and
fcom
push
cmovae
xor
lock
add
push
mov
push
ss
sub
push
test
pop
dec
cmp
repnz
sbb
jmp
push
inc
adc
add
xor
add
and
cs
adc
xchg
das
mov
int3
stos
scas
push
adc
jns
sbb
retf
test
pusha
inc
ja
sub
sbb
sbb
add
sbb
gs
clc
push
or
jmp
dec
mov
dec
inc
inc
adc
(bad)
js
sbb
add
sub
scas
inc
movs
mov
arpl
and
pop
dec
out
clc
sub
outs
xchg
jmp
sub
pusha
dec
shl
lea
jmp
mov
(bad)
dec
ins
mov
inc
test
mov
out
adc
xlat
test
mov
push
jne
aas
dec
jbe
xchg
inc
pop
nop
out
retf
mov
int3
cwde
ret
dec
sbb
fadd
div
pusha
xor
lea
adc
mov
mov
push
push
push
adc
dec
sub
sub
sti
push
shl
xchg
iret
das
or
adc
mov
pop
jmp
pusha
jmp
mul
pop
dec
push
mov
pop
std
data16
(bad)
bound
cmps
iret
mov
add
sub
pusha
pop
pop
mov
cmps
mov
out
jbe
ja
cdq
inc
pop
jbe
jl
sub
in
int3
je
clc
das
ja
push
lods
inc
xor
xlat
ret
test
ret
jno
jmp
pusha
inc
sub
aas
push
pop
mov
cmp
inc
mov
inc
xor
lahf
inc
and
imul
adc
or
(bad)
jmp
xchg
out
sub
stos
movs
dec
or
mov
out
xor
retf
movs
sub
sbb
ficomp
sar
lods
sub
add
jne
mov
push
int
push
sbb
ins
add
sub
mov
jp
xor
push
enter
xor
loop
jo
inc
and
bound
lods
stos
push
pop
or
in
jp
fmul
sub
sbb
mov
pop
mov
jmp
push
pop
and
js
das
mov
or
adc
push
adc
cs
inc
icebp
jne
pop
inc
adc
daa
mov
mov
test
adc
aaa
loope
ins
(bad)
mov
lea
cmp
mov
and
jb
cld
enter
adc
loopne
sbb
pop
or
neg
cmp
dec
sbb
sbb
mov
iret
movups
mov
mov
jns
mov
and
cld
(bad)
cmp
repz
sub
mov
inc
push
jns
cmp
inc
mov
sub
inc
mov
dec
mov
(bad)
push
mov
mov
(bad)
iret
push
or
leave
xchg
xchg
lea
jecxz
rcr
and
pusha
mov
aad
ja
push
ret
or
mov
mov
sbb
and
sbb
xchg
setbe
hlt
or
or
retf
enter
or
push
adc
adc
dec
pop
or
int
rcr
outs
loop
mov
fsub
or
jnp
fmul
cmp
inc
aam
add
jne
mov
sbb
(bad)
ror
repnz
mov
je
leave
(bad)
sahf
mov
mov
nop
fst
ss
or
in
nop
sbb
xor
mov
push
jmp
and
mov
xchg
cmp
call
mov
cs
mov
test
add
add
mov
(bad)
daa
push
mov
shr
ja
in
mov
pop
push
jns
pop
or
daa
test
pop
dec
pop
mov
call
add
call
shr
(bad)
sub
call
dec
jne
lea
add
sbb
loopne
pop
inc
lock
nop
and
xchg
es
sub
lock
mov
scas
sbb
xor
nop
in
jo
push
and
loope
and
pop
pop
movs
or
imul
mov
xchg
and
call
and
imul
fnstenv
rcr
and
dec
adc
(bad)
and
or
inc
sub
and
(bad)
cmp
dec
sub
jne
mov
xchg
push
sti
xor
xor
push
jb
clc
(bad)
xchg
les
pop
sbb
mov
adc
dec
hlt
lds
dec
test
pop
pop
or
pop
in
dec
xchg
ret
out
adc
(bad)
bound
js
or
pop
clc
movs
push
adc
adc
adc
push
movs
and
sbb
jno
daa
mov
(bad)
sub
div
jb
mov
push
inc
mov
or
adc
rcr
push
pop
dec
dec
inc
inc
(bad)
mov
push
push
dec
and
es
push
inc
push
push
or
scas
popf
add
dec
dec
dec
push
dec
push
outs
call
push
inc
dec
inc
add
xchg
mov
push
inc
fisttp
inc
imul
adc
inc
mov
std
push
inc
cdq
(bad)
dec
dec
nop
sbb
inc
inc
push
inc
push
xor
dec
add
in
sti
inc
inc
push
push
dec
inc
dec
push
outs
adc
les
add
xchg
outs
mov
add
cmp
cmp
push
and
inc
inc
inc
push
push
sub
xlat
bound
in
adc
cmp
ja
dec
or
out
dec
add
fsubp
test
aas
or
or
xchg
dec
xchg
outs
sbb
sub
dec
leave
jne
outs
mov
push
adc
icebp
inc
inc
loopne
sub
inc
ss
push
loope
xor
test
dec
push
push
or
sti
stos
adc
dec
push
mov
arpl
cmp
jg
xchg
sbb
inc
dec
push
mov
sar
enter
inc
dec
dec
inc
inc
dec
lds
adc
push
push
push
sbb
outs
adc
xchg
pop
ins
inc
rcl
aaa
or
adc
mov
sbb
push
bound
push
inc
(bad)
push
fisub
xchg
imul
xchg
das
or
dec
push
xlat
das
push
nop
mov
std
aaa
push
adc
sbb
aaa
push
sbb
lock
call
inc
aas
push
inc
aas
pop
sub
cmp
aas
das
gs
push
push
ins
mov
mov
addr16
hlt
lds
push
dec
dec
lds
cld
es
inc
add
or
mov
aaa
adc
mov
aas
adc
push
inc
bound
das
pop
inc
inc
sbb
and
mov
or
(bad)
loopne
(bad)
jo
and
cmp
xor
push
mov
outs
dec
pop
inc
addr16
mov
int3
arpl
iret
bound
hlt
cmp
lahf
adc
hlt
pop
mov
dec
add
adc
cmp
fsubr
dec
pop
or
icebp
xlat
adc
sahf
dec
ins
xchg
push
fs
xchg
adc
mov
stc
xchg
xchg
inc
sbb
mov
stos
inc
xchg
mov
nop
mov
inc
movs
mov
mov
add
test
jno
mov
jb
popa
scas
push
call
add
test
push
dec
dec
xor
shl
sahf
movd
enter
xchg
sbb
or
dec
add
int3
in
cmp
ret
pop
dec
dec
inc
inc
dec
fimul
iret
nop
sbb
je
call
add
inc
(bad)
adc
jne
imul
pop
push
or
cwde
and
mov
mov
sub
adc
and
enter
mov
(bad)
scas
dec
xchg
xor
inc
add
inc
add
mov
pop
daa
enter
sbb
imul
mov
dec
jnp
shl
imul
call
ins
shl
addr16
pop
sbb
ds
pop
inc
jne
out
jae
je
xchg
or
popa
inc
ins
push
sbb
dec
aas
das
pop
bound
push
jae
push
sbb
jbe
push
out
(bad)
imul
imul
inc
push
push
daa
inc
arpl
jne
je
push
xor
dec
jo
xchg
and
lods
test
dec
sbb
or
xor
and
mov
jnp
aad
rcl
loopne
and
adc
or
pop
cli
movs
movs
mov
mov
jg
cmp
jg
or
mov
or
inc
mov
inc
call
cmps
imul
mov
movs
aam
stc
imul
pop
stc
mov
stos
inc
lods
test
(bad)
or
push
xchg
inc
mov
leave
inc
(bad)
sbb
rol
mov
(bad)
sbb
cmp
inc
icebp
add
dec
push
mov
pop
add
mov
sti
loopne
sbb
push
lea
mov
mov
adc
(bad)
not
int
jno
push
in
jmp
mov
jmp
pop
test
inc
or
inc
sbb
add
inc
rcr
add
hlt
les
sar
and
add
lea
in
xor
jnp
adc
ret
sub
add
inc
push
ins
xchg
xor
dec
sti
fld
nop
je
xchg
sbb
push
(bad)
fst
dec
cmp
enter
or
gs
sbb
daa
inc
mov
push
out
ret
popa
and
movs
ss
(bad)
dec
cmp
out
sub
mov
in
test
pop
addr16
sahf
and
xchg
adc
cwde
pushf
lods
in
xchg
addr16
fcomp
in
hlt
sbb
mov
cmp
repnz
mov
iret
mov
inc
repnz
je
fld
xor
mov
gs
outs
xchg
je
xchg
add
pop
add
outs
push
push
es
bound
js
outs
adc
adc
daa
xor
aaa
mov
jne
sub
inc
call
jno
aad
inc
dec
lahf
addr16
pop
les
bound
cmp
mov
sbb
and
or
ins
push
jo
ins
aaa
xor
and
into
das
test
push
push
pop
dec
sbb
xchg
adc
loopne
inc
push
jnp
aas
or
test
sub
lock
enter
outs
(bad)
mov
aas
adc
or
cdq
xchg
sbb
frstor
out
jle
inc
and
mov
mov
ret
inc
sti
jae
and
and
cmp
clc
pop
inc
call
sbb
movs
mov
lock
xlat
add
(bad)
sub
lods
(bad)
ret
lahf
add
push
mov
cmps
mov
xchg
or
jle
cs
push
xlat
shl
xchg
adc
adc
jnp
cmp
mov
mov
push
movs
inc
mov
mov
loopne
xchg
rep
mov
add
and
fisub
jg
sbb
mov
mov
dec
or
pusha
or
sbb
movs
sub
jno
shl
dec
adc
push
retf
add
jbe
dec
pop
inc
xor
push
sahf
push
adc
cld
call
xor
movs
inc
int3
mov
nop
dec
add
sbb
cld
add
js
pop
push
outs
inc
test
sub
inc
pop
fistp
dec
pop
pop
mov
pop
adc
push
inc
xchg
cmc
movs
inc
inc
sbb
nop
(bad)
stos
adc
bound
stc
hlt
cmps
push
adc
lea
in
pop
shl
mov
rol
xchg
(bad)
cmps
mov
test
inc
mov
inc
in
mov
shl
adc
aas
add
xchg
jle
add
inc
hlt
dec
jne
sbb
jb
and
sti
cmps
and
cdq
mov
out
push
xchg
sbb
dec
dec
addr16
mov
movs
xor
xchg
pop
fxtract
jge
push
cmp
add
xor
adc
or
and
push
add
pop
mov
xchg
sbb
outs
scas
add
xor
jne
jae
pop
inc
push
add
je
mov
loope
sbb
stos
or
dec
(bad)
in
sbb
(bad)
pop
push
enter
ja
rcl
enter
or
out
inc
scas
inc
cld
leave
das
mov
fwait
in
pop
ja
in
mov
jae
sbb
mov
iret
enter
(bad)
in
pusha
ret
xchg
(bad)
out
and
(bad)
and
or
sbb
dec
and
jno
ja
(bad)
xor
adc
fldcw
cwde
push
cmp
jne
mov
jb
and
sbb
jns
cmp
les
adc
pop
adc
sbb
add
mov
mov
pop
fsub
add
or
mov
add
fistp
push
pop
sbb
ret
cwde
or
popf
lock
mov
xor
fbld
add
fcomp
fcom
push
and
mov
push
add
mov
sahf
dec
cmp
out
mov
and
jb
or
repz
nop
or
add
xchg
xchg
mov
inc
jle
sbb
loopne
loope
es
mov
inc
push
xor
cld
add
cmps
pop
daa
jns
imul
mov
xchg
or
inc
enter
lods
xor
xchg
sub
push
mov
inc
(bad)
inc
sbb
sbb
sbb
icebp
stc
or
xchg
lods
pop
in
rcr
push
adc
xchg
xor
pusha
mov
bnd
cmp
lods
repnz
repnz
addr16
repnz
dec
sar
fcomp
repnz
sub
sbb
clc
dec
shl
xor
mov
inc
adc
mov
jo
sbb
mov
ja
ret
mov
sbb
rcr
cmp
inc
aas
xchg
addr16
mov
dec
pop
push
clc
adc
hlt
mov
inc
in
stos
add
sbb
mov
mov
int3
mov
and
bound
jmp
cmc
inc
(bad)
inc
jle
cld
mov
dec
in
mov
adc
sub
dec
and
fld
mov
bound
and
(bad)
aad
mov
xchg
mov
push
mov
clc
sub
aaa
xchg
and
cmp
test
or
mov
push
adc
psrld
(bad)
mov
mov
sub
mov
enter
enter
loop
inc
mov
adc
movs
aam
test
adc
sbb
jb
jne
jb
cmc
adc
enter
and
xchg
and
outs
inc
jae
shl
movs
or
push
adc
mov
pop
cmovle
push
mov
or
mov
xchg
mov
das
mov
lea
add
ss
fbld
push
sub
inc
xchg
push
cmp
dec
push
inc
popa
xchg
add
mov
mov
dec
inc
pop
push
push
sbb
lock
xor
aaa
cmp
or
daa
add
xor
aam
arpl
xor
shr
mov
mov
ins
adc
adc
out
pop
push
jne
imul
dec
(bad)
daa
push
arpl
hlt
movs
xchg
or
fs
push
sub
add
cmp
outs
mov
mov
fst
or
add
push
pop
mov
push
mov
mov
sub
pop
jno
das
add
sub
lods
mov
pop
popa
pop
ss
inc
les
dec
lahf
push
and
adc
fdivp
adc
fnstsw
push
sbb
ss
dec
or
push
loopne
les
or
and
mov
in
movs
rcl
cs
sbb
mov
shr
push
push
imul
and
pop
xor
adc
push
adc
and
lods
push
adc
add
push
outs
mov
pop
int3
mov
bnd
nop
call
mov
add
mov
js
push
cmp
aam
inc
mov
leave
cmps
nop
mov
aam
and
add
mov
sbb
inc
je
popa
jecxz
push
lock
push
jmp
in
mov
fld
lods
lock
cwde
push
test
push
sbb
push
adc
loopne
push
xor
clc
dec
inc
xor
test
test
add
xlat
dec
mov
aam
bound
mov
dec
movs
idiv
sbb
mov
adc
js
sub
inc
call
and
mov
mov
pop
leave
lock
inc
ret
xchg
inc
scas
or
pop
xor
mov
scas
adc
(bad)
pop
in
xor
xor
push
jns
add
call
lea
adc
xor
mov
xor
xor
or
jl
je
ss
jmp
mov
sbb
in
adc
sub
lds
push
imul
jge
inc
cmp
in
push
push
jb
sbb
cmc
adc
fdiv
popa
dec
mov
fisttp
jge
and
mov
push
ret
sbb
(bad)
aam
mov
dec
adc
push
(bad)
icebp
fild
xor
mov
mov
add
dec
mov
xchg
mov
test
mov
popa
movs
mov
sub
mov
xchg
adc
imul
jl
test
inc
inc
and
nop
xlat
jns
test
retf
fstp
push
or
add
int3
lock
add
mov
pop
pusha
mov
adc
mov
dec
add
or
cmp
imul
or
and
and
mov
imul
mov
call
push
repnz
mov
imul
dec
dec
inc
dec
push
mov
adc
test
loop
xor
out
dec
xor
pushf
jg
aas
push
and
add
sbb
pop
add
dec
mov
call
dec
cli
test
adc
mov
pop
pop
add
ret
mov
or
jge
cmp
and
xchg
sbb
dec
add
and
pop
sub
in
pusha
jo
cmp
addr16
sbb
adc
mov
xor
or
mov
jns
and
and
or
adc
xchg
test
(bad)
in
inc
cdq
add
mov
or
mov
test
mov
dec
addr16
sbb
sar
inc
xchg
pop
adc
je
xor
or
xchg
ss
outs
dec
dec
inc
jmp
lock
sbb
cmp
ins
xor
aas
mov
dec
pop
loope
rcr
adc
or
pushf
mov
movs
popf
je
and
push
sbb
rcr
push
sbb
add
pop
mov
jmp
and
mov
xchg
mov
inc
inc
add
inc
and
pop
xor
dec
and
pop
mov
jne
push
test
bound
adc
sbb
adc
jne
mov
sub
and
sub
push
jnp
mov
test
inc
sub
dec
pop
test
and
mov
arpl
push
(bad)
push
cmp
out
mov
and
scas
add
cmps
and
and
jg
lahf
aas
jbe
jb
sub
inc
sbb
popa
cmp
dec
mov
movs
push
pop
(bad)
lock
lods
xchg
shr
lock
call
hlt
cmp
js
jmp
iret
mov
out
inc
lds
xor
aas
movs
xchg
jp
add
push
mov
and
adc
mov
jns
or
scas
mov
hlt
or
scas
pop
je
mov
xor
fstp
enter
lds
add
in
inc
rol
add
fdiv
inc
cdq
sub
xor
fld
mov
sbb
mov
and
sbb
adc
add
xor
add
mov
dec
xchg
test
dec
cmc
cwde
add
push
cmp
les
in
adc
add
outs
cmp
stc
pop
shl
pop
lahf
and
sub
lea
fiadd
imul
xchg
mov
cmp
sbb
sbb
and
jae
icebp
xor
scas
aad
lds
adc
mov
pushw
sub
repnz
rcl
or
pop
repnz
xor
xor
sub
xchg
mov
ins
inc
add
xlat
sti
rol
fadd
dec
pop
fld
movs
shl
and
mov
jmp
and
cmp
movs
xor
stos
test
enter
pop
add
xor
mov
mov
loope
push
sub
cmps
sub
jae
fild
add
pop
inc
cmp
adc
push
cmp
jge
cmps
movs
jb
adc
adc
add
call
sbb
fsub
ins
pop
aad
addr16
sbb
jbe
xor
jmp
adc
or
inc
popa
inc
popa
mov
ret
xor
push
cmp
mov
movs
adc
mov
iret
xor
(bad)
cld
fld
and
and
enter
loopne
in
nop
sbb
es
inc
pushf
imul
xor
pop
pop
or
sbb
clc
and
ja
xchg
inc
sub
je
mov
xor
and
sub
loope
mov
loope
dec
or
shr
mov
pop
dec
ins
jecxz
in
sbb
cmp
pusha
inc
cmc
aad
dec
add
adc
mul
sar
mov
nop
xor
fiadd
in
loopne
mov
mov
and
cmc
xchg
repz
add
dec
cs
sub
xor
mov
cld
ins
(bad)
mov
leave
or
ror
or
pushf
xor
adc
enter
push
jle
fxch
cld
and
test
in
out
mov
pop
push
adc
inc
adc
push
jge
ins
pusha
(bad)
push
and
dec
cmps
push
cwde
sbb
shr
jle
xchg
push
bound
pop
push
sub
dec
aam
sbb
dec
das
mov
cmp
pop
add
mov
lock
add
jae
inc
lds
sbb
ret
push
xchg
mov
ins
and
popf
xlat
inc
(bad)
adc
mov
push
xor
adc
pusha
push
adc
push
es
cli
fld
into
dec
xor
ret
xor
in
sub
mov
cli
sbb
in
loop
pop
hlt
(bad)
fist
and
sbb
lock
out
inc
popa
int3
mov
adc
pop
clc
or
adc
jle
or
mov
enter
sub
test
mov
mov
fldenv
and
sti
jle
sti
lahf
xchg
xchg
mov
xchg
push
xchg
in
or
dec
scas
imul
sbb
dec
cs
sub
ss
ret
push
dec
rol
sub
in
(bad)
fsub
inc
icebp
ret
jb
clc
adc
xor
retf
sbb
out
and
ins
pop
xchg
or
inc
ret
push
xchg
jo
sbb
mov
fcmovnb
adc
enter
jge
fnstenv
mov
sbb
mov
(bad)
cmovae
inc
cli
pusha
jg
test
shr
gs
sbb
test
sbb
lds
sbb
sbb
das
pop
xor
mov
inc
int3
adc
clc
inc
hlt
pop
test
inc
mov
pop
cld
jmp
xor
adc
aam
sbb
sub
mov
retf
push
sbb
cmp
loopne
imul
jmp
or
sub
loopne
inc
in
sbb
add
dec
das
test
and
shl
retf
mov
mov
sub
pusha
pop
iret
or
das
in
inc
mov
movs
lock
(bad)
aas
(bad)
adc
and
dec
sbb
xchg
inc
loopne
push
push
push
pop
add
test
loopne
or
dec
cli
(bad)
je
cmovp
lahf
adc
ss
ret
adc
mov
mov
int3
outs
int
in
out
pop
sbb
cmp
dec
leave
sub
pusha
inc
xor
in
sub
int
int
push
dec
mov
aad
inc
cmps
mov
loope
inc
(bad)
imul
(bad)
xchg
imul
jne
xchg
popa
pop
inc
ficomp
dec
and
xchg
mov
add
fnstcw
popf
fs
inc
inc
or
ins
mov
aaa
pop
into
je
cmp
in
into
mov
pop
lods
sbb
into
loopne
xchg
pushf
xchg
push
aaa
clc
into
adc
ret
sbb
test
into
icebp
inc
or
push
add
icebp
mov
aas
adc
adc
fbld
mov
jo
dec
sub
sbb
movs
or
lods
sub
xchg
sbb
loopne
rep
jmp
mov
and
popf
and
lods
xchg
pop
jmp
dec
jle
cld
data16
movs
aad
mov
or
xor
aaa
xchg
add
loope
ins
mov
cmp
mov
push
(bad)
sub
add
or
or
adc
push
pusha
sub
pop
jmp
mul
jecxz
(bad)
mov
rcl
out
inc
in
jmp
pop
and
lea
std
fdivr
adc
and
push
mov
mov
xor
sbb
add
mov
jmp
lahf
add
adc
xchg
add
add
and
das
jb
cmp
pop
outs
dec
test
adc
fld
fs
jecxz
clc
push
pop
jg
ret
inc
ret
sbb
inc
inc
fs
and
add
pushf
push
daa
shr
pusha
xchg
xchg
mov
sub
inc
call
add
(bad)
cmp
call
outs
push
push
(bad)
iret
sub
xor
ficom
xchg
lea
cmps
(bad)
rcr
ror
dec
rcr
add
cmp
add
cwde
xchg
mov
hlt
push
mov
push
ja
sub
add
or
cmp
xchg
call
adc
scas
lea
imul
jnp
repz
out
push
sub
ds
js
push
sub
mov
push
sbb
sub
or
rcl
sub
push
(bad)
stos
xor
mov
pop
jno
cmps
arpl
adc
or
ss
and
add
mov
rol
sbb
lea
jno
jo
dec
push
hlt
aad
push
add
aad
call
inc
in
mov
push
xor
das
and
cmp
push
or
mov
or
out
xor
aad
retf
sbb
adc
cs
inc
push
push
xchg
xchg
ja
xacquire
sbb
jnp
fiadd
popf
in
cmp
dec
hlt
mov
popa
sahf
add
movs
mov
and
lea
mov
or
std
jge
fwait
xchg
(bad)
nop
ret
shr
add
or
test
jecxz
adc
xchg
adc
sub
pop
pop
out
mov
sbb
adc
sbb
inc
mov
jno
mov
cwde
dec
xor
adc
(bad)
sbb
mov
mov
fiadd
sbb
or
push
mov
fwait
sub
inc
or
add
add
add
and
xor
movs
mov
sbb
imul
stos
mov
and
adc
inc
clc
adc
pop
pop
push
or
mov
scas
add
inc
adc
push
sbb
das
out
mov
movs
xchg
sub
dec
lahf
add
pop
jmp
popa
clc
data16
or
jbe
mov
xor
mov
push
mov
int
add
arpl
push
rcr
push
mov
mov
xchg
mov
adc
mov
in
jecxz
or
xchg
fs
inc
push
pop
cmp
aam
aaa
clc
bound
or
loope
ret
sub
and
sbb
inc
in
pop
pop
add
and
dec
aaa
push
push
fincstp
and
(bad)
mov
inc
ins
mov
mov
mov
out
fxch
inc
retf
fdiv
jmp
inc
push
adc
mov
call
mov
ins
mov
fidiv
xor
and
jo
mov
repnz
fst
hlt
xchg
or
jns
lods
fcom
inc
pushf
pusha
or
enter
pop
inc
xor
clc
sbb
fcomp
fadd
mov
fnstcw
pop
inc
pop
mov
mov
imul
sub
lahf
fadd
xchg
loope
(bad)
movs
mov
mov
sbb
mov
stos
add
xor
fild
fadd
jo
mov
(bad)
dec
dec
cmp
mov
push
sub
xchg
jne
mov
(bad)
dec
popa
jns
inc
push
inc
fild
mov
jne
push
in
ror
cmp
add
add
xchg
add
cmp
inc
dec
ret
es
cmp
or
dec
add
gs
push
cmp
sbb
add
cmp
test
cs
and
enter
mov
jbe
add
nop
ds
sbb
jp
dec
nop
push
shl
or
aaa
movs
or
sbb
int3
adc
fadd
and
pop
push
(bad)
in
fld
sbb
inc
sub
and
(bad)
jo
xor
in
mov
pop
mov
add
mov
adc
inc
repnz
out
fild
xchg
cmp
mov
inc
inc
fiadd
jp
ins
ja
fisub
lods
cs
ret
out
fmulp
or
scas
fiadd
xchg
add
add
sbb
mov
inc
adc
push
or
jo
(bad)
loopne
div
xchg
sbb
retf
repz
popf
push
add
mov
call
daa
pusha
sbb
mov
retf
gs
and
and
test
xor
dec
pop
test
mov
ret
ror
aas
sub
xor
iret
lock
push
add
(bad)
test
xor
sub
cmp
mov
add
pop
cmp
(bad)
dec
and
sahf
mov
clc
or
dec
aas
add
dec
add
outs
enter
sbb
jno
hlt
in
and
shl
les
call
or
jecxz
bound
test
dec
sub
daa
add
and
add
sbb
scas
dec
daa
daa
adc
cmp
cmp
movs
lock
movs
adc
daa
scas
ret
add
imul
int
and
pop
sub
mov
xchg
pop
and
mov
sbb
add
xor
sbb
div
xchg
xchg
mov
lods
fsub
dec
and
inc
mov
inc
test
(bad)
lock
(bad)
push
or
pop
ins
xor
test
inc
rcl
imul
aaa
stos
loop
or
loop
popa
ret
adc
jae
push
cmp
imul
in
cs
out
jmp
inc
cs
xchg
and
test
push
jecxz
pop
pop
and
sub
inc
repnz
jecxz
in
mov
cmps
and
xor
repnz
mov
in
sbb
push
sbb
push
scas
or
xor
jle
jmp
ins
cwde
in
mov
in
in
pusha
test
mov
add
sti
add
in
jnp
rcl
lea
add
and
ins
and
jmp
mov
icebp
adc
or
test
add
fiadd
xchg
lds
mov
adc
mov
sub
push
mov
jge
push
out
push
js
pop
and
cdq
add
dec
test
jecxz
(bad)
stos
inc
push
cld
fwait
shl
inc
enter
mov
repz
adc
ins
mov
hlt
pop
sbb
lods
shr
adc
push
out
push
or
xchg
out
and
shr
fild
cdq
inc
mov
pusha
adc
scas
adc
adc
add
fidiv
sub
rcl
add
jbe
test
inc
in
sbb
jmp
and
inc
jb
inc
(bad)
call
cmps
daa
shr
xor
repnz
fld1
mov
adc
daa
inc
jmp
mov
arpl
dec
jb
jmp
nop
xchg
sbb
mov
adc
repz
or
inc
mov
and
out
lock
(bad)
fld
(bad)
sbb
inc
xchg
cmp
sbb
les
add
ins
sbb
pop
(bad)
cmp
jne
or
jl
das
pushf
mov
cmp
jbe
or
out
and
leave
push
enter
jmp
and
inc
push
popa
jmp
add
jmp
in
mov
shr
out
imul
cmp
xchg
sub
mov
inc
sbb
popa
sub
jno
inc
add
xor
and
(bad)
adc
aaa
dec
pop
cmps
movs
add
sbb
bound
sub
push
adc
inc
in
inc
xchg
or
cmp
mov
adc
lds
mov
dec
mov
in
dec
pusha
or
push
aas
hlt
hlt
mov
adc
adc
popf
mov
mov
jge
out
inc
jno
stos
inc
inc
push
or
mov
ins
pop
or
mov
or
push
and
cmp
lock
loope
out
sub
pop
push
add
or
es
retf
add
mov
sub
xor
push
das
sub
js
mov
je
gs
mov
push
jnp
cmp
mov
popf
jmp
push
rcl
sub
hlt
rcr
inc
mov
adc
(bad)
rol
test
shr
add
fs
cld
mov
ret
push
out
into
je
fld
call
and
daa
sub
sbb
xor
(bad)
fs
push
jmp
inc
arpl
sar
mov
mov
cmps
fs
xor
in
pop
inc
or
pusha
mov
shl
add
inc
lock
(bad)
cld
or
sub
nop
xor
rol
ins
popf
adc
dec
lock
cmc
cwde
mov
bound
imul
adc
or
push
repnz
into
inc
nop
xlat
(bad)
retf
in
and
jbe
inc
or
int
or
dec
push
pop
out
add
(bad)
cld
lock
inc
or
jne
or
dec
inc
mov
inc
scas
repz
adc
clc
mov
adc
nop
retf
in
pop
lock
retf
enter
ss
push
clc
pop
mov
ds
call
or
jno
and
imul
pop
sub
sbb
lock
call
(bad)
in
lds
(bad)
inc
cdq
push
and
lds
pop
aad
lock
xor
sub
daa
sbb
and
shl
push
sub
les
shl
mov
jb
ds
in
repnz
mov
inc
push
leave
mov
loope
push
pop
push
repz
je
dec
and
pushf
repz
add
mov
ja
sbb
retf
lock
repz
hlt
sbb
and
mov
dec
shl
lock
sub
xor
repz
push
add
mov
xchg
and
sbb
js
movs
and
inc
repnz
(bad)
(bad)
xor
in
pop
mov
and
inc
add
in
in
and
xchg
cld
lock
arpl
mov
sbb
(bad)
fstp
lods
in
rcl
mov
lock
call
lock
and
cmc
inc
and
sub
inc
sub
outs
movs
ins
or
jne
sbb
or
cld
sub
(bad)
sbb
test
sbb
add
xor
enter
mov
nop
iret
pop
inc
cmp
xor
add
scas
dec
mul
(bad)
in
add
push
neg
stos
and
mov
mov
add
or
xchg
cmp
loop
clc
imul
or
jmp
retf
or
adc
mov
or
jmp
xor
add
jb
retf
outs
jne
pop
cmp
add
jmp
inc
push
lea
pop
rcl
pop
imul
or
and
pop
les
adc
push
(bad)
and
stos
in
jl
pop
mov
stc
push
and
cwde
and
aam
jecxz
js
cmp
lahf
stc
div
stc
aas
sbb
stc
or
or
cli
lahf
add
and
add
push
cs
jo
push
repnz
sahf
cli
pop
repnz
adc
sti
mov
jmp
test
cmc
in
repnz
nop
aam
add
or
push
retf
sbb
and
sub
mov
aas
push
push
ror
fsub
cmc
call
jle
nop
pop
pop
daa
fadd
mov
sub
nop
or
jns
jmp
mov
xor
cmps
je
push
mov
inc
dec
push
adc
jnp
or
inc
mov
ret
pushf
jl
adc
fcom
out
adc
add
test
sti
and
push
mov
pop
push
inc
call
or
inc
sbb
movs
sahf
dec
inc
xchg
shl
leave
dec
add
add
cmp
and
push
add
fnsave
or
jmp
pop
mov
lock
xor
inc
mov
gs
pop
hlt
add
push
push
fisttp
mov
loope
and
dec
test
adc
xchg
icebp
mov
test
cmp
out
repz
pop
dec
imul
in
mov
xchg
sbb
int
push
daa
mov
out
adc
in
mov
jb
add
push
add
mov
rol
test
jmp
jg
int3
ja
fdecstp
and
or
push
sbb
xchg
(bad)
push
inc
jmp
jmp
pop
or
mov
cmp
jbe
ja
retf
fmul
bound
jns
adc
adc
jl
jbe
nop
mov
mov
js
add
cmp
add
jno
popa
lods
pop
pop
add
inc
imul
and
mul
xchg
push
shl
dec
lock
(bad)
dec
or
cwde
jmp
or
cmp
xor
hlt
add
or
xor
xchg
or
dec
call
push
enter
cmp
cmp
add
fadd
or
mov
xor
xor
and
pop
(bad)
push
stc
(bad)
and
lods
dec
sbb
enter
mov
mov
pop
xchg
shr
pop
fs
arpl
add
inc
aam
and
or
adc
data16
dec
push
xchg
add
jo
adc
dec
inc
shl
push
and
xor
add
jge
xchg
clc
(bad)
dec
movs
sbb
js
add
jae
push
int3
ja
add
popf
xlat
add
or
(bad)
inc
test
mov
adc
scas
add
shl
jns
sbb
imul
pop
and
pusha
add
xchg
pop
dec
(bad)
jmp
or
add
push
test
and
add
cmp
dec
or
and
adc
movs
pusha
sahf
(bad)
xlat
mov
scas
ret
nop
test
xlat
pusha
xor
repnz
add
add
add
pop
dec
sahf
push
nop
dec
jno
add
lock
add
mov
xlat
ja
adc
popa
xlat
repnz
push
jecxz
pop
or
data16
jne
xor
pop
cmps
xor
js
lods
bound
cmps
jno
sub
jg
and
ficom
xchg
mov
leave
retf
pop
pop
add
popf
fs
jno
mov
es
rol
repz
or
sahf
add
add
push
xchg
repnz
sub
or
scas
ffree
xchg
mov
push
push
test
add
test
or
and
and
push
inc
jno
arpl
jl
arpl
ficom
add
push
pop
xor
aad
sub
mov
lea
(bad)
mov
adc
sbb
jl
fs
xor
ret
and
push
push
pop
mov
add
in
(bad)
push
pop
inc
ins
add
pop
aaa
scas
xchg
out
mov
push
pushf
mov
mov
or
inc
jmp
sbb
add
dec
or
mov
adc
sbb
or
cld
sub
add
sar
xor
sbb
outs
xor
outs
push
inc
loope
xor
pop
les
test
and
rol
jp
(bad)
mov
inc
or
adc
in
gs
jnp
inc
arpl
imul
dec
loope
push
stos
adc
test
scas
and
repnz
or
clc
or
fs
clc
inc
and
xor
popf
mov
es
bound
push
mov
pop
repnz
nop
push
repnz
lods
inc
stc
or
jb
ret
ins
or
inc
jb
push
ror
leave
hlt
push
xchg
add
or
or
rol
cmps
sbb
loop
sbb
push
and
ins
sbb
inc
mov
(bad)
pop
pop
xchg
in
inc
bound
or
mov
mov
and
adc
or
in
popa
sub
add
jns
xlat
cmp
into
inc
adc
add
repz
fsubr
push
inc
sahf
cmp
aaa
adc
pushf
or
(bad)
or
pop
mov
shl
jl
(bad)
dec
dec
dec
xchg
adc
je
mov
rol
push
in
cmp
in
dec
fisub
xor
clc
pop
pop
(bad)
nop
add
or
loopne
movs
push
mov
daa
push
or
aad
test
xchg
or
aad
xchg
aad
push
or
pop
pop
inc
add
cs
js
sub
cs
int
add
rcl
or
shr
jo
ins
xor
jbe
dec
and
inc
and
ret
jns
call
push
sbb
dec
add
xchg
sbb
icebp
add
xchg
add
lea
aas
push
(bad)
fst
pop
or
pop
inc
mov
out
aaa
adc
jne
sub
xor
nop
in
les
sti
xchg
or
inc
mov
fadd
push
xor
enter
xor
ficom
repnz
cmp
inc
push
in
xor
mov
fs
jb
add
jb
push
nop
pushf
or
bound
xor
int3
fcom
mov
push
jl
fwait
leave
dec
in
or
push
repnz
clc
mov
mov
or
sbb
and
add
pop
cwde
add
jo
jbe
add
dec
xor
mov
and
or
jae
ret
sub
push
in
xchg
or
pop
dec
add
sub
and
add
xor
in
or
(bad)
adc
sub
enter
sbb
fdiv
add
cmp
mov
and
add
dec
nop
xor
sar
sub
shl
lods
jb
test
add
leave
pop
mov
inc
sbb
xor
dec
push
in
imul
lods
add
cmp
inc
and
pop
repnz
push
mov
dec
push
in
xchg
loop
xor
nop
add
nop
mov
cmp
add
les
and
jb
(bad)
stc
in
lock
add
and
int3
jb
add
sbb
div
xor
pop
or
inc
dec
mov
clc
mov
xor
nop
dec
push
in
je
test
mov
cli
in
pushf
arpl
cs
out
add
rol
in
stc
sbb
aam
movs
in
scas
and
call
leave
add
sbb
fst
push
in
leave
fadd
cmp
jmp
hlt
add
push
xchg
cmp
in
nop
(bad)
lock
scas
loopne
pop
mov
sbb
add
int3
xor
repnz
jl
pusha
das
cdq
fdivr
(bad)
repz
xchg
rol
xor
xchg
sbb
and
push
push
add
pop
pop
xchg
pop
sbb
loop
or
in
sbb
xor
xor
pop
mov
(bad)
mov
push
inc
add
dec
and
and
add
and
shr
push
scas
push
idiv
cmp
xchg
dec
sub
sbb
xor
push
test
es
dec
outs
outs
fild
ds
add
mov
aaa
or
mov
mov
fiadd
outs
cwde
dec
add
adc
and
fdivrp
push
inc
dec
daa
inc
fs
ja
xchg
pop
dec
fwait
das
push
push
or
adc
inc
push
and
and
jns
dec
xchg
xor
adc
jae
test
test
mov
movs
mov
outs
movs
test
aam
xor
mov
fisub
adc
mov
sbb
pop
sbb
push
push
dec
push
in
pop
push
or
gs
sub
fst
add
inc
xchg
pop
and
add
push
gs
xor
ror
pop
jo
not
pop
inc
lods
add
xchg
inc
jns
inc
das
jne
xchg
and
in
and
lods
and
or
sti
xchg
xchg
imul
ins
daa
sub
xlat
jbe
(bad)
xchg
add
xchg
test
push
scas
jae
ins
daa
jne
idiv
cmps
add
and
popa
je
lods
loope
je
aas
sbb
test
and
mov
or
daa
ds
lods
pusha
add
(bad)
out
push
xor
adc
sub
cmp
xchg
std
push
shr
imul
fs
mov
inc
(bad)
popa
inc
daa
outs
pop
mov
pop
inc
push
mov
push
das
in
cmp
xor
inc
or
dec
cmps
lea
or
scas
das
loopne
xor
rol
pop
or
cdq
(bad)
retf
dec
push
movs
das
or
daa
(bad)
push
fwait
dec
inc
jnp
and
push
imul
outs
pop
push
loopne
jns
adc
add
ja
mov
xor
xchg
dec
js
lahf
xor
xchg
mov
dec
shr
cmps
mov
outs
js
add
sbb
ja
or
add
add
dec
sbb
inc
inc
scas
icebp
nop
test
cmps
pop
pop
repz
sbb
ss
or
mov
or
pop
inc
pop
and
inc
jg
dec
jmp
es
and
mov
in
ret
(bad)
call
push
icebp
mov
call
and
bound
cmps
pop
xor
gs
add
pop
xchg
mov
push
mov
xor
add
lods
hlt
add
les
inc
dec
push
mov
sahf
and
fild
lods
cmps
movs
(bad)
or
or
mov
loope
leave
icebp
(bad)
xchg
and
xchg
xor
cmps
ss
xchg
and
aaa
jno
xchg
out
out
outs
xor
loop
or
mov
bnd
cmp
cmps
movs
push
inc
leave
add
cmp
jle
xchg
dec
mov
dec
xchg
push
and
scas
test
pushf
dec
cmp
adc
int3
call
and
sbb
call
pop
or
fwait
cmp
lods
xchg
ss
and
pop
inc
hlt
push
test
add
mov
inc
xchg
je
jns
pmuludq
cmps
sbb
pop
mov
sub
das
(bad)
xor
fidiv
push
test
add
adc
jp
add
add
jo
bound
dec
call
dec
sbb
push
mov
add
repz
and
push
push
dec
int3
inc
out
sub
xchg
and
xchg
mov
scas
lock
xor
push
popf
mov
sbb
xchg
mov
push
jmp
xchg
fstp
(bad)
retf
or
push
jns
adc
in
and
add
in
retf
dec
add
dec
cmp
xchg
push
rol
add
and
in
push
int3
pop
lods
cmp
je
test
dec
outs
data16
and
cmp
sub
pop
adc
sbb
js
inc
xchg
or
and
push
and
adc
xchg
lods
mov
scas
(bad)
lock
and
adc
es
imul
adc
sub
sbb
sbb
pop
jecxz
repnz
mov
adc
adc
xchg
and
inc
fsubr
and
add
jle
push
inc
sbb
leave
xor
cmp
or
xor
cmp
jecxz
pusha
fwait
popa
sub
xchg
sbb
mov
neg
mov
adc
enter
xchg
mov
mov
jae
(bad)
es
mov
inc
mov
push
adc
or
or
push
int
adc
frstor
add
adc
xchg
daa
inc
or
mov
inc
(bad)
shl
add
loop
pop
mov
pop
pop
loop
xchg
cmp
lock
sbb
ds
jb
inc
cmp
in
xchg
mov
push
aas
adc
xchg
mov
push
xchg
(bad)
pusha
jecxz
sub
inc
mov
inc
xchg
mov
mov
rcr
xor
in
adc
push
ins
and
movups
sub
inc
repnz
sub
pop
and
pop
pop
pop
loopne
push
cdq
in
ss
add
mov
inc
sbb
rol
loope
pop
ins
call
and
shufps
adc
cmp
and
retf
xor
mov
sub
adc
xor
inc
outs
inc
mov
repnz
sbb
add
mov
int3
movs
test
dec
push
ss
inc
and
movs
fadd
fsub
inc
sub
and
add
inc
inc
aaa
adc
(bad)
lock
add
inc
push
out
es
adc
sbb
pusha
sub
(bad)
mov
cmp
out
nop
movlps
mov
inc
cmp
adc
ror
shl
daa
arpl
adc
adc
sub
ret
add
clc
sti
jl
popa
ret
loopne
sub
push
ins
add
mov
sub
pop
clc
mov
in
das
xchg
cmc
and
mov
xor
pop
rol
xchg
in
ret
sbb
imul
es
sub
not
sub
outs
or
and
inc
sbb
push
or
out
or
inc
add
cmp
add
lea
imul
nop
push
dec
and
(bad)
(bad)
in
sbb
loopne
mov
add
xchg
vcvtps2ph
adc
and
gs
xchg
mov
add
and
jns
or
or
inc
sbb
and
jne
retf
test
inc
rcr
jmp
jbe
loop
mov
inc
push
dec
fdivr
jns
push
nop
and
add
enter
xor
cwde
and
sbb
xor
xchg
xchg
dec
lods
fiadd
dec
into
inc
push
xchg
push
or
pop
add
mov
adc
push
or
repz
pop
xchg
loopne
push
jecxz
ret
retf
pop
xchg
inc
adc
xchg
inc
aas
adc
setb
in
add
sbb
nop
gs
sub
ja
mul
ror
es
xor
xchg
nop
jg
dec
xchg
xor
out
enter
lea
inc
mov
cmp
mov
fidivr
(bad)
dec
cmp
sub
and
xchg
mov
add
sbb
push
jmp
in
xchg
lods
nop
lods
lock
mov
lods
and
inc
outs
mov
sbb
or
lahf
sub
inc
sub
xchg
jl
hlt
ss
das
leave
mov
loope
xor
sbb
adc
dec
push
mov
add
mov
pop
xchg
das
inc
jno
ror
cdq
and
lds
cwde
add
or
int3
das
cwde
xchg
adc
fsub
push
lods
add
lock
mov
(bad)
cwde
popa
ret
lock
test
or
test
cwde
mov
loope
mov
fbstp
or
mov
femms
adc
pop
pop
add
aam
jmp
mov
data16
push
jp
sub
jno
and
adc
les
in
or
nop
inc
outs
std
xor
les
add
pushf
push
mov
push
(bad)
in
loop
lock
pop
lock
mov
pop
movs
cmp
imul
popa
xor
and
cmp
and
mov
out
lods
test
fsub
jle
push
std
xchg
xor
dec
fsub
test
neg
ins
fadd
mov
fs
movs
mov
inc
jnp
xchg
push
sub
and
lods
std
adc
sbb
rol
push
scas
shr
push
push
sub
dec
push
xchg
bswap
xor
push
or
sub
mov
lods
imul
call
xor
fs
adc
inc
sbb
in
add
or
in
push
xor
std
fild
fld
sub
fld
gs
ins
dec
inc
pop
sti
jge
push
jae
adc
jp
mov
add
dec
shl
add
sbb
xor
mov
mov
push
repnz
sar
dec
cmp
jbe
je
shl
jp
ret
cmps
cdq
xor
mov
stos
push
fadd
test
dec
repnz
xor
call
dec
xor
add
cmp
add
shl
and
mov
xor
and
cmp
pop
fadd
adc
xchg
mov
loope
sub
sub
shr
lock
int
sbb
xor
rcl
xor
scas
pop
fcom
pop
mov
jb
aaa
cdq
pop
stos
pop
cmp
inc
adc
or
sub
push
or
sub
adc
sub
nop
stos
jne
sbb
xor
mov
movs
mov
add
fadd
jecxz
aaa
xlat
mov
sbb
mov
loopne
push
fldcw
aam
pop
daa
repnz
in
call
cmp
mov
and
sbb
sub
ins
push
in
push
xor
out
xchg
sahf
call
adc
into
pop
pop
std
mov
outs
fiadd
jbe
push
or
or
and
sub
cmp
inc
add
pushf
popa
add
or
inc
cld
aad
pushf
nop
cld
in
mov
xor
repnz
push
fadd
inc
pop
push
cdq
daa
dec
add
add
mov
call
out
pop
pop
adc
les
enter
jo
ins
push
mov
inc
pop
xor
inc
and
mov
pop
push
cmp
out
or
add
mov
and
push
pop
inc
push
ret
push
xor
add
add
sbb
cmp
and
in
jmp
fcomp
adc
mov
push
test
mov
jbe
dec
test
xor
mov
add
push
pop
push
sub
ror
add
nop
pusha
push
mov
cmp
cmp
or
jb
and
pop
dec
shl
fadd
lds
adc
mov
daa
sbb
xchg
mov
sti
lock
fs
leave
iret
les
push
fwait
in
cmp
pusha
fisttp
aas
sub
push
cmp
inc
cmp
mov
push
xor
xchg
pop
sub
pop
push
add
inc
push
aam
sbb
scas
xchg
mov
cmp
xlat
mov
mov
inc
pavgb
js
ror
pop
das
fild
fild
in
mov
xchg
les
xchg
mov
xor
add
nop
cmp
xchg
movs
fistp
mov
sub
add
enter
xchg
dec
stos
push
xor
(bad)
sub
dec
adc
dec
imul
add
xor
cmp
add
test
add
xchg
call
xchg
add
mov
mov
adc
add
mov
addr16
mov
scas
imul
pop
in
ins
and
lods
or
cmp
or
cmp
enter
jo
or
xchg
inc
add
cdq
dec
fimul
cmp
sub
inc
add
xchg
popa
pop
push
adc
or
or
repnz
mov
sbb
cdq
or
sub
in
es
cmps
or
fs
aad
push
movs
cmp
pushw
push
adc
icebp
adc
imul
push
and
test
dec
(bad)
cmp
rcl
ins
dec
pop
jmp
cmp
fs
aaa
xchg
pop
popa
dec
not
je
sub
lds
fistp
mov
pop
repnz
call
mov
mov
add
mov
cmp
ds
jne
sub
push
sbb
cs
mov
cmovg
or
mov
jmp
or
xchg
dec
cli
retf
adc
imul
cmp
rol
mov
dec
add
aaa
cmp
push
dec
mov
pop
fwait
fwait
xor
push
cmp
pusha
inc
cmp
add
or
cmp
sub
in
ins
and
adc
push
xchg
outs
fwait
pop
cwde
sub
push
adc
sbb
mov
call
or
aam
push
xor
dec
test
out
int
inc
push
adc
xor
mov
add
and
adc
mov
add
mov
and
fs
inc
in
sub
dec
dec
xor
call
push
out
popa
and
arpl
push
mov
(bad)
xor
fwait
dec
or
jo
or
(bad)
push
dec
pop
pop
enter
adc
test
inc
jnp
xor
gs
mov
pop
stos
and
cmps
or
push
enter
pop
pop
shl
sbb
mov
shr
xor
mov
adc
data16
jb
or
loopne
ret
xor
out
ror
cmp
aaa
jp
xor
add
sbb
or
pop
sar
sbb
add
test
mov
jne
and
cmp
cmp
mov
jmp
sub
sbb
mov
loopne
sbb
imul
xor
inc
or
sbb
push
push
add
jns
jno
or
outs
xchg
inc
test
lock
cmps
arpl
cdq
inc
stc
nop
shr
inc
add
and
push
lock
ins
bound
pop
test
cmp
loope
fcom
lods
lods
xchg
js
mov
and
add
pop
lock
in
aas
push
mov
mov
sub
dec
cld
(bad)
pop
adc
add
xchg
enter
or
mov
mov
jg
ror
out
stos
inc
mov
mov
jae
ds
cs
inc
jecxz
pop
pop
sbb
pop
int
inc
daa
xor
and
in
cmp
test
inc
jno
adc
xchg
mov
mov
cld
repz
push
dec
inc
and
cs
sub
pusha
arpl
mov
xor
inc
or
mov
cmp
jo
sub
aad
add
in
out
iret
add
clc
xor
add
add
or
jb
inc
inc
adc
inc
arpl
or
cmp
add
icebp
enter
jle
fcomi
sub
inc
sbb
fcmovnbe
xor
shr
mov
in
pop
fcmovnb
add
aam
sbb
hlt
sub
les
enter
and
mov
inc
inc
xchg
push
sub
dec
das
and
inc
or
fcmovbe
add
fld
aaa
daa
bound
dec
push
mov
les
sbb
xchg
inc
add
inc
bound
in
sub
enter
and
or
ds
inc
or
cmp
inc
jmp
inc
pop
push
sub
xchg
out
cld
mov
out
mov
dec
add
shr
or
dec
sti
add
sub
shr
in
test
lock
xor
leave
xchg
dec
mov
push
mov
sub
dec
repnz
movs
lods
in
cli
adc
dec
imul
add
xchg
clc
push
nop
ficomp
xchg
adc
or
mov
lods
jmp
mov
fmul
or
lahf
cmp
in
lock
xchg
pop
add
dec
inc
inc
jge
cmp
mov
add
test
push
adc
adc
hlt
jle
sti
neg
dec
mov
jns
sbb
sub
cmp
jl
mov
push
sti
imul
push
jne
mov
ins
cmp
lock
add
cmp
adc
sbb
pop
pop
dec
ror
jne
out
or
inc
jno
mov
sub
test
mov
mov
cmps
adc
ficom
movs
ror
pop
mov
les
btr
or
dec
sbb
mov
int3
push
mov
sbb
jge
and
xor
jne
sub
ss
sub
lea
adc
arpl
ja
loope
mul
push
xor
add
jbe
sbb
jae
jmp
and
sbb
mov
pop
(bad)
in
es
pop
xchg
dec
int3
mov
jl
int
mov
int3
dec
inc
and
(bad)
and
or
xor
xchg
xchg
inc
add
mov
xor
dec
and
push
inc
cwde
mov
adc
lods
add
repnz
add
and
int
iret
push
js
pop
(bad)
out
test
lea
pop
push
gs
or
jae
mov
nop
int3
push
or
xchg
jno
mov
jae
and
or
shl
jne
popa
fdivr
imul
mov
bound
sub
sbb
add
xchg
loopne
push
cmp
les
loope
and
mov
xor
mov
into
inc
cmp
lods
sub
xchg
(bad)
jno
dec
xor
push
ds
jb
xor
cmp
add
dec
cmp
shl
and
cmp
mov
dec
call
pop
sub
cmp
stos
push
imul
or
ins
mov
add
ret
repnz
xchg
lahf
cdq
cdq
lock
data16
fld
xor
outs
rcr
xchg
sub
(bad)
xor
and
inc
xchg
fs
xlat
(bad)
jbe
in
push
emms
push
add
mov
pop
rol
adc
cmp
ss
jne
xor
add
jne
adc
int
or
dec
clc
sbb
mov
mov
inc
and
fbstp
push
pop
fistp
bound
mov
sbb
pusha
cmp
add
xchg
shr
or
or
xchg
or
bound
add
or
and
es
jl
mov
pop
xor
push
ins
aas
call
or
and
enter
mov
(bad)
clc
enter
push
xchg
lea
dec
push
pop
test
out
mov
cmp
movs
dec
rol
inc
adc
sbb
cmp
cmp
jne
mov
out
pop
xor
jne
add
push
aaa
hlt
paddsb
or
xchg
inc
xor
into
cmp
push
stos
and
cmps
mov
sahf
mov
or
jo
scas
cdq
sub
add
mov
data16
rol
icebp
sbb
clc
xchg
repnz
sub
jo
ja
jo
xchg
ror
push
pop
push
pop
mov
mov
lods
outs
inc
lods
or
(bad)
(bad)
dec
push
lea
inc
adc
inc
mov
mov
xor
mov
jmp
daa
or
ss
ja
cmp
mov
and
ins
bound
adc
mov
in
dec
fimul
js
mov
jl
sbb
dec
push
mov
or
push
imul
inc
push
add
and
xor
add
cmp
jnp
or
dec
(bad)
aaa
adc
inc
mov
mov
and
call
mov
push
int
inc
cmp
inc
cmp
sub
xchg
and
(bad)
mov
mov
add
loope
ret
ret
push
adc
pause
mov
dec
pop
mov
jecxz
and
and
ss
mov
inc
add
pop
dec
jle
push
inc
add
xor
add
rcl
mov
push
push
add
mov
adc
xchg
pop
into
mov
out
pavgb
retf
outs
pop
add
add
in
fiadd
cld
push
(bad)
adc
inc
repnz
mov
xor
sbb
adc
repnz
mov
inc
or
dec
or
jo
mov
push
mov
mov
push
enter
lods
jnp
xchg
jno
or
pushw
and
arpl
mov
xlat
inc
les
xor
pop
jg
mov
adc
lods
inc
data16
repnz
add
je
push
imul
inc
push
bound
push
mov
cmp
and
test
cmp
shl
pop
pusha
and
pop
hlt
(bad)
loope
cmp
mov
(bad)
ins
dec
ins
rep
cmp
add
aaa
dec
push
ret
stos
and
enter
adc
aam
add
inc
arpl
mov
rcl
daa
xor
sbb
sub
shl
mov
mov
cld
sbb
les
shr
xor
(bad)
iret
je
rol
mov
push
outs
(bad)
fcmovnb
sbb
pusha
movs
sub
sbb
enter
xchg
inc
dec
out
mov
int
xlat
mov
xchg
gs
int
mov
daa
nop
jmp
test
sbb
test
xor
ins
adc
and
ret
and
leave
jno
jg
xor
inc
fld
dec
add
dec
push
adc
inc
int
sbb
pusha
push
test
inc
in
rcr
fwait
sub
jecxz
popa
push
je
inc
sbb
out
and
add
inc
mov
les
push
sbb
dec
push
stos
mov
les
mov
pop
and
pop
outs
add
sbb
add
pop
ror
xor
push
ss
inc
pop
not
call
pop
xor
sbb
add
adc
popa
xchg
push
and
cmp
imul
movs
dec
js
sub
out
mov
fiadd
je
sub
(bad)
cld
jo
jno
ret
or
adc
add
das
sub
outs
ds
ins
enter
and
push
in
fmul
sbb
js
or
test
sub
(bad)
mov
mov
pop
out
xchg
les
or
call
pop
movs
repz
mov
leave
cmp
lea
jge
or
sbb
mov
test
leave
les
sub
sbb
push
ret
xor
shl
push
ret
mov
aad
xchg
add
sub
pushf
and
push
dec
mov
fcmovbe
pop
rol
sub
dec
sub
gs
inc
(bad)
test
out
add
add
outs
inc
or
inc
aam
dec
(bad)
add
lahf
aam
ins
and
push
retf
inc
cmp
dec
adc
das
leave
aam
jne
rcr
in
test
addr16
(bad)
sub
cwde
and
pop
mov
mov
jmp
es
push
je
pop
lea
and
clc
jno
fwait
shr
mov
out
sar
or
sbb
mov
imul
adc
sbb
or
das
jmp
cmp
or
mov
add
ss
scas
adc
inc
fwait
mov
xlat
push
add
sub
movs
in
add
out
mov
xchg
jbe
sbb
mov
mov
pop
push
cmp
and
xchg
mov
or
xchg
es
mov
sbb
test
pop
in
xor
rcl
jne
add
rcl
sbb
add
pushf
xor
sbb
enter
hlt
push
sbb
ss
mov
sub
inc
or
dec
sbb
ret
and
mov
lea
jno
(bad)
fidivr
jae
rcl
mov
popa
inc
pop
loopne
jne
adc
rcr
mov
dec
sub
mov
sbb
test
xchg
and
sbb
pop
into
aad
add
movs
ror
and
test
test
enter
add
scas
ror
mov
jg
imul
sub
fnstcw
inc
xchg
push
js
in
xor
add
mov
adc
xchg
add
rol
pop
sbb
icebp
mov
adc
cmps
sbb
cld
jecxz
dec
int3
jno
inc
and
or
xor
dec
cwde
leave
push
mov
xor
mov
add
(bad)
or
inc
sbb
dec
sub
mov
sub
icebp
add
add
test
call
lods
lea
das
pop
sub
or
inc
inc
push
add
ret
(bad)
push
push
xchg
push
cdq
inc
or
add
cmp
popa
loop
mov
cmp
(bad)
sbb
lods
ins
aas
and
cwde
mov
jecxz
pushf
pop
or
sub
inc
mov
adc
add
pop
jp
sti
push
div
cmp
das
cmp
cmp
cmps
adc
mov
fsubr
adc
mov
fisub
mov
push
mov
dec
jl
movs
cmps
je
xor
adc
loopne
xlat
jae
data16
adc
mov
cdq
xchg
mov
sub
call
cmp
adc
jo
jle
enter
sbb
and
adc
imul
mov
aam
mov
fadd
adc
mov
and
adc
dec
sub
lods
enter
sub
lea
push
pop
inc
add
call
sub
sbb
xor
ins
mov
or
loop
imul
xor
aaa
pushf
push
outs
pop
test
dec
ins
js
pop
mov
sub
outs
push
ins
xor
imul
jbe
inc
sub
cmp
cdq
aad
jne
daa
out
sbb
xor
stos
loopne
and
(bad)
dec
and
sysenter
jmp
ins
and
fild
(bad)
mov
xchg
or
icebp
pop
or
push
adc
test
out
xlat
add
cmp
mov
or
adc
dec
jne
xchg
sbb
pop
popa
or
add
push
inc
cs
stos
retf
inc
add
xor
push
int3
sbb
inc
jmp
push
cmps
movs
pop
or
or
dec
cwde
sbb
jne
push
push
pop
jb
in
mov
cmp
adc
inc
loope
pusha
mov
in
sete
lea
pop
push
mov
pop
adc
mov
in
cmps
je
jo
inc
movs
mov
xchg
xor
rcl
adc
sub
sbb
arpl
pop
sbb
stc
test
fldenv
out
mov
inc
add
inc
xchg
call
dec
xor
adc
jbe
adc
push
and
mov
jbe
jno
iret
dec
test
and
or
pusha
and
sbb
repz
push
call
iret
je
fdiv
icebp
xor
fldcw
mov
mov
(bad)
sub
jno
lock
push
cmp
and
adc
add
push
sbb
sub
jnp
sbb
(bad)
pop
sbb
ss
push
dec
cmp
stos
push
popa
fcomp
xchg
push
fld
movs
push
push
pop
dec
sub
ret
dec
xor
aam
mov
lea
jns
sub
loopne
jg
xchg
or
dec
inc
mov
inc
out
add
dec
or
push
dec
fisub
xor
sbb
add
ins
push
stos
addr16
cmp
push
cmovns
xor
dec
gs
jo
sub
pop
bound
dec
mov
pop
jns
aaa
xchg
sbb
push
dec
out
test
not
push
inc
or
mov
xor
mov
adc
sbb
ins
and
inc
add
outs
and
or
xchg
cdq
push
pop
sub
repnz
cmp
cmp
movs
adc
fiadd
xor
xchg
inc
inc
xor
les
arpl
pop
xchg
xor
sub
(bad)
push
pop
push
and
inc
ja
push
inc
ret
and
push
dec
(bad)
in
out
push
push
or
mov
pop
xchg
test
outs
mov
cmps
add
mov
imul
push
aad
jle
shr
out
daa
leave
ins
imul
sub
mov
loopne
inc
cmps
sub
xchg
data16
ret
fwait
outs
das
adc
xor
push
dec
mov
out
sub
sbb
push
iret
lsl
and
call
call
nop
in
jae
cs
fs
jne
cdq
js
iret
mov
aam
jbe
push
sub
adc
clc
cs
cdq
jo
mov
mov
add
movs
pop
mov
adc
sbb
lea
pop
xor
in
in
shl
add
pop
lock
dec
add
sub
inc
ret
sub
mov
and
mov
push
or
rol
cmp
leave
leave
and
or
ins
enter
jmp
push
mov
inc
lock
dec
inc
and
cmps
lods
adc
test
xchg
pop
xchg
ins
cdq
cmp
pop
test
mov
mov
inc
xlat
cdq
ins
(bad)
(bad)
push
popa
and
xor
and
mov
sub
mov
lods
add
cmps
shl
adc
scas
sbb
jo
pop
or
and
pusha
ficom
movs
or
or
icebp
mov
mov
or
or
arpl
adc
in
jmp
cmp
inc
popa
rol
add
cmp
lods
pop
inc
sbb
cmp
jne
dec
repz
jbe
cmp
jns
pop
call
das
or
(bad)
push
aaa
nop
mov
xor
xor
les
mov
cs
leave
dec
dec
jb
ja
lods
sbb
xchg
in
push
add
outs
inc
arpl
mov
cdq
dec
ficomp
xchg
mov
les
push
lods
push
dec
out
or
mov
pop
shr
dec
daa
and
gs
push
shl
pop
ss
pop
hlt
pop
mov
mov
mov
inc
add
pushf
gs
add
paddq
sub
shl
in
sub
mov
inc
enter
mov
call
add
xchg
int
push
adc
nop
pop
sub
fisub
pop
cld
jb
mov
cmps
movs
out
pusha
jae
fisttp
mov
pop
inc
lahf
pop
pop
adc
pop
cs
pusha
in
mov
sub
retf
in
sub
clc
mov
cld
data16
scas
mov
les
fldenv
les
fs
call
ins
ins
sbb
mov
ss
dec
js
loopne
outs
jl
mov
repnz
push
or
add
jge
cs
jl
loope
add
inc
add
movs
xor
test
inc
xchg
int
mov
pusha
and
cmps
movs
in
mov
push
out
mov
popa
adc
dec
ins
jns
cmps
push
sahf
bound
dec
jns
movs
push
enter
adc
pop
jge
inc
add
adc
mov
add
pop
pop
js
pop
in
and
pop
sub
je
enter
sti
and
popa
je
xor
inc
sub
inc
pop
push
xor
push
in
(bad)
push
xor
inc
inc
inc
inc
inc
inc
add
inc
and
in
and
add
add
push
and
sbb
add
dec
inc
sar
xor
add
add
movs
dec
add
in
std
ins
dec
mov
enter
dec
shl
loopne
lock
imul
cmps
imul
imul
cmps
imul
test
mov
imul
sbb
fs
fsubr
dec
inc
gs
or
xchg
push
push
nop
xchg
popa
pushf
call
sbb
jb
pusha
adc
gs
cld
xor
mov
(bad)
(bad)
(bad)
aas
add
add
or
or
push
movups
adc
adc
push
pop
sbb
sbb
sbb
pop
sar
call
pop
and
and
and
es
sub
sub
sub
cs
lahf
cmp
cmp
lods
pop
hlt
cmp
inc
dec
dec
dec
add
ins
cld
arpl
fst
push
push
push
pop
call
wbinvd
pop
pop
pop
pop
pusha
aas
jnp
jge
jg
add
xchg
lea
xchg
xchg
xchg
xchg
xchg
cwde
cdq
mov
mov
movs
movs
cmps
cmps
test
stos
stos
lods
lods
scas
scas
mov
mov
movs
mov
mov
mov
mov
ret
push
(bad)
(bad)
inc
(bad)
enter
int3
int
iret
rcl
rcl
aam
(bad)
xlat
fcomp
fcmovu
cmc
inc
int
sar
xor
xor
jl
sbb
pop
add
mov
xor
rol
rol
add
aas
clc
adc
xor
mov
push
dec
add
call
mov
fcomp
cmp
pop
add
and
adc
and
or
and
xor
pop
adc
push
cmp
pop
push
add
into
leave
jae
or
pop
sbb
xor
and
push
daa
push
jb
pop
pop
dec
add
xor
addr16
mov
xchg
shl
dec
push
fs
shl
lods
mov
xlat
add
mov
stos
xchg
call
and
xor
inc
inc
mov
inc
dec
fnstenv
nop
movs
dec
mov
call
dec
dec
shl
pop
je
dec
shl
lods
(bad)
aam
imul
push
ins
nop
pop
imul
xchg
dec
and
int3
pop
shl
push
dec
adc
shl
pop
or
js
sbb
fldenvw
call
rol
imul
call
add
cmps
imul
imul
dec
sar
push
push
push
push
dec
shl
push
push
xor
shl
push
push
push
push
dec
shl
add
dec
adc
xor
shl
jo
pop
or
xor
shl
js
sbb
push
ror
nop
call
rol
call
cwde
imul
cmps
imul
imul
cmps
imul
cmps
imul
imul
call
call
xor
imul
imul
imul
cmps
imul
add
add
add
add
cmps
imul
cmps
imul
imul
imul
cmps
imul
adc
add
add
push
dec
shl
add
xor
shl
add
add
shl
add
dec
shl
add
imul
cmps
imul
imul
cmps
imul
imul
xor
into
loopne
clc
test
or
adc
popa
mov
sub
adc
mov
sbb
mov
and
mov
shl
and
clc
clc
xor
ret
xor
cmp
xor
inc
xor
inc
popa
or
xor
movs
push
js
sub
mov
loope
sub
mov
arpl
xchg
lock
clc
mov
bound
xchg
enter
cmp
sbb
adc
xchg
or
or
add
pop
popa
or
or
xor
mov
jo
js
mov
dec
mov
popa
mov
lds
shl
mov
adc
mov
cmps
jle
popa
mov
pop
ret
xor
lock
pop
ret
xor
mov
pop
xor
stc
inc
or
pop
xchg
sbb
adc
loopne
dec
mov
pop
and
mov
xor
push
cmp
mov
dec
sub
jb
cmp
inc
or
and
mov
adc
xor
cmp
xor
dec
sub
sub
push
pop
stc
adc
xor
pop
xor
dec
test
ror
pushf
sub
rcr
mov
lock
mov
retf
add
or
jns
or
mov
daa
push
sbb
adc
add
add
test
mov
push
ret
xor
lock
clc
pop
ret
xor
xor
pop
push
xor
fs
xchg
gs
mov
sub
mov
retf
adc
or
sub
inc
test
or
cmp
mov
test
sbb
cs
lock
test
test
or
popa
leave
jb
sub
aad
inc
xor
cmp
push
or
js
add
pushf
mov
mov
mov
xchg
test
add
add
adc
fdivr
xor
xchg
sub
sub
es
jo
sbb
and
mov
sub
mov
or
push
lock
nop
xchg
mov
test
and
jmp
cwde
nop
cmp
mov
push
popa
ret
lock
cmp
or
sub
or
rol
jns
adc
in
cmp
or
sub
pop
xchg
sub
inc
jo
cmp
cmp
mov
xor
lock
cs
and
and
clc
dec
outs
rol
lock
cwde
nop
sbb
inc
mov
sub
inc
jo
xor
jo
sbb
cmp
mov
test
xor
inc
lock
cwde
fcom
lea
xchg
sub
sub
push
ret
jo
sbb
nop
(bad)
adc
fmul
sbb
enter
lock
nop
mov
dec
dec
mov
enter
cwde
and
pop
sar
lock
dec
rol
nop
dec
fcom
and
cwde
enter
das
or
jnp
ror
movs
call
test
xchg
dec
cmp
pop
popa
xchg
inc
push
and
mov
sbb
cmp
cwde
enter
mov
sti
lock
cs
push
dec
fmul
scas
dec
enter
lock
and
cs
xchg
stos
cmp
xchg
sub
and
add
inc
aaa
call
push
mov
or
dec
sti
add
push
jo
jmp
adc
fmul
cmp
nop
cmps
dec
mov
nop
mov
ja
push
pop
xchg
and
add
push
imul
lea
cmp
ret
sar
shl
dec
add
enter
inc
sbb
cmp
xchg
inc
or
jnp
inc
retf
adc
push
or
add
dec
xchg
push
jo
call
or
cwde
retf
repnz
jnp
shl
cmp
and
xchg
sub
add
dec
dec
xchg
in
jnp
push
jo
imul
inc
imul
inc
sbb
mov
xchg
inc
or
sti
jo
test
cmps
xor
sar
jg
push
rcl
clc
imul
add
cmp
outs
push
inc
push
das
mov
inc
scas
push
lock
dec
shl
je
ss
shl
rcl
add
call
push
adc
fwait
in
add
mov
cmps
imul
jb
inc
add
imul
shl
add
push
sbb
cmp
xor
shl
or
shl
int3
or
call
(bad)
adc
xor
rol
adc
xor
adc
imul
pop
cld
shl
cmps
sbb
pop
jbe
pop
sbb
add
add
add
dec
shr
add
xchg
add
dec
shl
push
or
in
dec
rol
xchg
sahf
in
sahf
or
or
imul
cmp
call
adc
mov
rcl
call
pop
mov
sbb
sbb
push
cmps
imul
jns
stos
clc
mov
aam
fnstenv
cmp
push
add
add
sahf
movs
add
xor
jns
cmp
push
add
jl
mov
hlt
add
add
aam
add
xchg
fild
and
adc
jns
and
and
add
and
inc
and
xchg
pop
add
sub
xchg
push
jmp
mov
in
jne
adc
in
loop
std
loopne
cld
mov
lahf
adc
loope
adc
sub
loop
in
cmps
pusha
push
adc
inc
inc
inc
dec
mov
push
dec
pop
cmp
add
test
pop
pop
push
add
and
sub
addr16
call
ins
lods
sbb
ins
fisub
push
dec
int3
or
aas
in
or
lods
jns
repnz
dec
test
pop
test
xchg
pushf
inc
inc
pop
mov
imul
hlt
stos
adc
push
push
aad
add
je
out
in
jg
jo
inc
push
adc
aas
or
push
fdivr
push
inc
ds
pop
rcr
imul
sub
or
div
fsub
imul
jae
out
inc
data16
imul
es
ds
push
push
inc
inc
push
mov
push
sbb
jle
fs
cmp
or
imul
push
into
adc
push
pop
fsubr
mov
push
xor
sub
push
cmp
inc
outs
cmp
mov
push
dec
in
push
fcom
pusha
cs
dec
imul
outs
mov
sub
add
aam
lahf
rol
mov
push
loopne
aam
add
push
adc
add
nop
inc
add
dec
sub
add
push
cli
xor
add
pop
out
retf
(bad)
mov
dec
push
push
jge
mov
inc
add
push
lods
imul
inc
push
sub
cs
in
pop
sub
fisttp
dec
sub
(bad)
fiadd
push
push
push
push
pop
inc
push
or
lods
lea
sbb
inc
inc
pop
push
jbe
loop
mov
aaa
or
ss
call
pusha
test
or
or
repnz
nop
add
add
add
add
and
popa
add
jae
pop
(bad)
mov
imul
xor
bound
add
aas
in
or
adc
adc
push
jle
fcom
repnz
mov
mov
data16
xchg
addr16
adc
xchg
add
ss
adc
or
or
ficom
add
ja
sub
cs
xchg
add
cmps
retf
test
mov
inc
mov
outs
add
and
or
out
sub
fidiv
je
sahf
mov
shl
push
adc
or
mov
or
cli
and
es
into
pop
imul
push
dec
adc
add
test
daa
push
bound
fs
ja
jbe
sahf
pop
arpl
push
imul
(bad)
sahf
ds
jns
jne
pushw
addr16
mov
jo
es
ins
push
jae
(bad)
outs
sbb
and
fidivr
sbb
push
dec
loop
into
je
add
loopne
ss
lahf
outs
jp
stos
push
push
jb
pop
jns
sub
int
data16
inc
js
jo
push
bound
push
jns
adc
fwait
loopne
add
sub
fiadd
push
imul
ja
(bad)
(bad)
sub
imul
adc
js
cmp
sahf
push
or
in
push
sbb
call
dec
adc
fld
lock
(bad)
imul
not
je
(bad)
inc
add
idiv
gs
cmps
mov
sbb
push
inc
ins
xor
sbb
mov
lahf
push
popa
(bad)
mov
dec
jecxz
scas
xor
popa
retf
ins
or
mov
retf
bound
ins
mov
add
out
jnp
(bad)
add
mov
mov
and
mov
jecxz
bound
jle
xchg
push
shr
mov
adc
inc
push
jbe
jo
pop
ror
ds
sub
retf
xchg
fldenv
bound
outs
daa
xor
in
mov
(bad)
loop
xchg
push
push
inc
rol
mov
xchg
fnstsw
fisubr
sar
add
jb
fisub
fwait
add
or
pop
jnp
and
ret
jae
sub
jo
outs
je
movs
mov
ins
outs
or
ret
sar
push
das
add
and
aaa
mov
fs
frstor
loopne
data16
pop
or
and
add
cs
mov
stos
idiv
cmp
jmp
inc
push
inc
xchg
add
jbe
mul
xchg
mov
shl
inc
mov
ds
sub
das
retf
(bad)
nop
and
out
push
or
pop
stos
arpl
sbb
xchg
inc
adc
je
xor
pop
sub
pusha
push
add
mov
or
loope
inc
push
ss
in
xor
retf
pop
add
jne
xor
pusha
stos
mov
scas
sub
lds
cmp
pop
adc
es
and
inc
stos
or
pop
daa
jo
shl
arpl
xchg
push
mov
sub
mov
inc
into
arpl
sub
lahf
or
js
inc
ins
mov
xor
push
shr
(bad)
xchg
lds
ret
ins
xor
inc
xor
bound
fisubr
pop
cmp
jle
add
add
outs
ja
mov
loop
test
ret
and
sbb
pop
sti
les
jns
push
mov
adc
aas
push
imul
xor
and
dec
sbb
fidiv
adc
add
shl
mov
outs
fwait
dec
pop
bound
cwde
adc
je
push
sbb
inc
jno
call
inc
ja
ret
mov
dec
sbb
pop
inc
call
adc
cmp
in
enter
adc
ja
add
bound
sbb
xor
sbb
pushf
mov
aaa
jmp
cmp
pop
pop
jo
scas
ins
adc
or
retf
data16
ret
pop
push
je
push
xor
add
pusha
ret
dec
jg
test
aam
add
dec
dec
ins
rol
cwde
scas
inc
out
jne
or
sub
inc
push
mov
imul
xchg
cmps
outs
pop
test
inc
jbe
push
pop
and
add
sub
dec
mov
dec
mov
xlat
push
mov
push
cs
cs
outs
out
push
ins
jnp
pop
xchg
xchg
fisubr
inc
push
sbb
add
dec
pop
add
cwde
jbe
push
test
xor
iret
push
mov
shr
fwait
jmp
add
xor
nop
imul
les
aas
and
ret
jno
loop
retf
arpl
adc
fist
xchg
cmp
add
add
inc
xor
jecxz
jbe
movs
or
sbb
pop
sub
fsub
and
test
xchg
mov
inc
into
mov
ds
rcr
jo
and
inc
adc
jmp
pusha
push
sahf
pop
mov
mov
aad
scas
push
sub
pop
push
or
ror
out
pop
sahf
mov
es
mov
sub
loopne
mov
ins
sub
sub
mov
sub
mov
sbb
data16
gs
cmps
xchg
fsub
sbb
mov
fisubr
jbe
dec
pop
ror
inc
pop
cmp
pop
rcr
and
stos
inc
dec
stos
dec
scas
mov
mov
xor
push
stos
mov
ss
pop
push
push
int
or
aas
stos
pop
(bad)
arpl
lock
cmps
imul
(bad)
idiv
pop
jg
sbb
ins
push
test
xchg
sbb
arpl
adc
dec
movs
or
stos
fild
mov
mov
xchg
inc
mov
xor
(bad)
dec
mov
push
out
pop
or
or
rcr
and
push
jb
xor
add
addr16
ins
sbb
jne
(bad)
inc
inc
dec
adc
pop
dec
jb
fdiv
mov
jo
test
popf
loop
rcr
sbb
pop
xchg
mov
inc
cli
mov
jo
xor
call
ins
stos
cmp
mov
or
pop
adc
nop
cmp
xor
push
sub
xchg
push
rcr
jg
xor
push
mul
xlat
mov
fs
aaa
xchg
sub
and
dec
jle
mov
je
sbb
jg
jg
and
(bad)
test
push
or
das
xor
mov
jo
mov
adc
mov
pop
pop
scas
js
mov
add
and
mov
adc
popa
ret
pop
xor
imul
dec
jns
jo
xlat
ror
mov
push
pop
sbb
or
pop
imul
sub
ret
outs
xchg
xchg
push
rol
adc
adc
xlat
push
jmp
jecxz
cmp
fisubr
inc
sbb
dec
pop
rcr
nop
sysret
mov
fisttp
rcr
pop
(bad)
fisttp
pop
mov
int
mov
add
and
sahf
rol
bound
ja
rcr
dec
inc
dec
push
popa
jg
add
or
cmp
fcomp
or
and
ret
aaa
ret
mov
mov
ret
ret
push
imul
daa
push
inc
fs
lods
jmp
lock
ins
jge
or
or
das
adc
add
sbb
pusha
cmp
inc
sub
pusha
ins
mov
adc
cmp
mov
push
add
inc
rol
pop
nop
cs
ror
or
test
cs
call
dec
push
or
ins
ins
in
inc
add
dec
(bad)
jo
sub
shr
push
cmp
add
mov
sahf
adc
jb
lods
fs
xlat
mov
push
adc
push
inc
sub
push
dec
sub
call
iret
jno
lea
call
fidivr
(bad)
and
xor
js
push
mov
cmp
jne
add
cmp
repnz
cmp
and
gs
outs
pop
dec
dec
pusha
mov
stc
les
(bad)
fistp
ret
inc
mov
inc
fsub
fidivr
gs
movzx
pop
push
dec
dec
cmp
and
sahf
(bad)
adc
mov
mov
shl
fadd
cwde
or
pop
inc
retf
dec
lea
enter
pshufw
inc
xor
push
(bad)
adc
shl
xsha256
cmps
adc
out
push
retf
xchg
or
and
out
ror
push
shl
mov
jns
(bad)
adc
call
xchg
push
mov
ss
sub
xor
iret
fisttp
cs
sub
push
sbb
inc
out
imul
push
sub
iret
ja
and
mov
clc
test
stos
mov
xchg
xchg
addr16
out
fwait
add
das
repnz
lods
loopne
je
outs
or
shl
mov
jmp
or
in
sbb
mov
cmp
les
int3
int3
pop
jb
and
test
nop
pushf
xchg
push
inc
sbb
jb
sub
jb
push
enter
sbb
in
jnp
ror
xchg
inc
sahf
sbb
sub
xchg
pop
jb
adc
or
or
nop
push
sub
or
and
jg
jbe
das
test
mov
mov
inc
in
jne
or
sbb
int
adc
test
or
je
arpl
cs
inc
retf
pop
add
xor
leave
xchg
xchg
inc
push
jns
or
xchg
xchg
dec
pusha
inc
mov
add
cmp
outs
pop
jns
retf
sbb
ror
je
sbb
xor
cmp
cmp
sbb
adc
sbb
cld
inc
or
add
imul
fisubr
dec
ror
or
jne
and
call
scas
jge
jmp
fwait
movs
inc
inc
imul
xor
pop
dec
dec
jg
adc
pushf
xchg
mov
pusha
pop
cmp
xlat
gs
cmp
push
aaa
push
pop
outs
xor
(bad)
daa
iret
and
fsubr
cmp
jecxz
adc
and
push
push
je
adc
sbb
or
ds
sahf
push
sar
cld
int3
mov
(bad)
loope
xor
sub
mov
push
adc
xor
and
loopne
xchg
or
and
jbe
and
mov
mov
aam
rol
ja
xlat
fidiv
add
and
and
popa
pop
faddp
adc
mov
sub
push
or
push
add
outs
and
add
xor
inc
add
ror
repz
push
adc
ja
cmp
inc
sub
inc
mov
sbb
call
fld
ds
adc
and
push
cmp
and
push
test
sub
sub
sub
iret
and
mov
xchg
iret
jae
dec
arpl
sub
cs
and
add
jecxz
pop
js
ins
lahf
inc
ja
jae
add
pop
mov
ja
push
rol
jae
lea
lahf
movs
sub
sbb
inc
dec
or
push
jo
mov
pop
push
popf
ins
mov
pop
dec
ror
(bad)
mov
mov
dec
pop
push
outs
add
and
lock
inc
push
inc
push
jae
inc
addr16
dec
mov
dec
ds
and
loop
aaa
pop
inc
outs
arpl
dec
shl
and
and
pop
dec
jne
inc
push
push
pop
dec
jns
inc
pop
push
sub
push
and
mov
and
mov
mov
jbe
vmread
xor
adc
popa
mov
call
(bad)
test
add
(bad)
fist
add
or
jo
xor
or
add
add
pop
inc
aaa
and
and
mov
xor
scas
int
xor
xchg
dec
and
rcl
cs
aaa
push
rol
lea
add
mov
enter
popa
popa
add
xchg
push
mov
dec
mov
sbb
add
cmps
mov
add
and
inc
outs
jecxz
pop
add
sbb
int3
ss
mov
scas
gs
mov
int3
dec
inc
or
pop
stc
dec
inc
dec
mov
(bad)
outs
pop
sbb
inc
inc
ins
int3
mov
gs
(bad)
push
add
cmp
and
outs
sbb
sti
sbb
mov
pop
loopne
and
daa
xchg
int
push
pop
pushf
ins
adc
adc
data16
adc
push
test
push
dec
loop
test
mov
add
sub
outs
mov
dec
or
int
xor
shr
push
push
in
adc
and
adc
cmp
mov
xor
mov
lea
and
adc
(bad)
jbe
and
sub
arpl
das
pop
pop
xor
xor
ds
jge
adc
ds
inc
add
pop
pop
jmp
es
(bad)
push
mov
pop
fwait
cmp
lds
cs
dec
mov
push
push
fiadd
pop
aaa
push
pop
ins
jae
jmp
addr16
lods
sbb
xor
das
cld
sub
pushf
add
cmp
add
and
or
outs
clc
cmp
jg
les
movs
pop
aam
mov
je
push
push
jns
push
adc
in
adc
bound
sub
dec
jno
sub
in
xor
lock
xchg
inc
fst
jns
adc
and
xchg
mov
dec
adc
test
inc
dec
cmp
inc
push
pop
xchg
popa
je
loop
(bad)
sub
push
test
add
popf
add
scas
or
push
js
loop
sbb
push
cli
in
imul
push
and
inc
pop
or
adc
xchg
dec
imul
inc
pop
xchg
adc
or
inc
add
pop
or
inc
mov
mov
adc
mov
adc
add
movs
out
cmovl
sub
mov
push
pop
outs
test
sbb
outs
pop
dec
ins
jo
bound
fdiv
push
outs
xor
imul
push
call
mov
mov
cs
push
jb
es
dec
add
stos
and
add
sub
adc
adc
movs
jns
daa
nop
add
add
add
xor
sbb
push
(bad)
(bad)
cs
or
push
xchg
pop
leave
aam
lock
mov
stc
repnz
add
jne
stos
pop
mov
lds
dec
add
sub
shr
fcom
push
jbe
sub
push
clc
adc
jne
ret
vmread
mov
and
inc
jl
ret
xchg
pusha
jge
arpl
ret
in
test
cs
mov
pop
pop
add
fld
inc
push
push
retf
shl
inc
and
inc
adc
or
mov
std
pushf
test
adc
rol
cli
stc
(bad)
push
xor
sar
outs
xor
mov
jo
jbe
inc
inc
clc
and
je
and
xor
mov
test
aas
mov
mov
jne
call
jmp
add
test
push
mov
mov
shl
outs
ja
or
ret
cld
inc
sub
inc
push
rol
or
sti
iret
add
push
inc
cld
mov
std
in
loopne
or
bound
je
push
push
lea
or
pop
pop
pop
jp
push
jbe
(bad)
in
js
dec
push
call
cmp
mov
push
or
pop
pusha
or
xor
jmp
cmp
jl
jmp
mov
push
repz
or
sti
dec
mov
dec
(bad)
sahf
dec
loopne
jge
fst
and
ror
pop
dec
jo
or
aaa
sbb
mov
cmc
call
and
hlt
call
rcr
clc
call
ins
mov
sbb
cld
call
sub
outs
sbb
mov
xor
repnz
cmp
call
or
jmp
call
add
hlt
add
js
ins
add
int3
or
sbb
ins
cld
(bad)
js
cld
pop
hlt
fldcw
mov
adc
push
lock
add
ret
fdiv
mov
not
sbb
mov
mov
call
addr16
sbb
repnz
neg
lea
mov
inc
lea
inc
sti
sahf
xor
aad
and
lock
jns
call
adc
xchg
and
call
sti
mov
xchg
addr16
fldenv
sbb
mov
add
adc
std
inc
retf
jne
jmp
push
retf
clc
push
(bad)
or
aaa
sar
adc
xor
and
adc
loope
out
add
jg
lods
xor
scas
pop
cmp
dec
adc
ins
jmp
inc
inc
clc
or
fisttp
mov
cdq
inc
mov
stos
je
call
or
push
mov
rep
pop
inc
push
xchg
pop
mov
test
jl
mov
ds
lock
loop
(bad)
jg
mov
sub
sub
push
movzx
dec
push
mov
enter
ins
scas
dec
(bad)
mov
inc
ds
inc
rol
test
cs
leave
repz
add
jl
cmps
imul
jne
push
add
add
imul
orps
dec
add
pop
mov
xor
imul
movs
jmp
cmp
jecxz
add
iret
call
jmp
xchg
or
push
into
add
or
adc
mov
adc
fcomp
add
add
or
jg
pop
fwait
and
pop
sub
sub
push
pop
xchg
movs
fimul
imul
mov
in
pop
jo
sbb
imul
push
lds
test
push
stos
pop
lods
es
cdq
mov
int
xor
adc
xor
jne
push
mov
inc
loopne
into
xchg
das
cmp
mov
cmp
adc
bt
movs
jno
or
push
push
popf
cmp
cmp
dec
out
mov
push
or
clc
movsx
push
jno
jae
or
xor
jns
(bad)
jb
mov
xor
dec
shr
imul
je
adc
mov
add
or
mov
jg
push
add
loopne
(bad)
or
mov
mov
or
adc
lahf
push
add
fisttp
popf
in
mov
ja
ret
lahf
or
pop
jne
inc
push
pop
shl
popa
adc
retf
jl
(bad)
adc
or
pop
ds
arpl
sbb
div
add
shr
add
je
pop
addr16
sub
mov
jmp
pop
clc
push
int
add
adc
ja
xchg
popf
pop
call
rcr
xchg
frstor
mov
add
stos
and
jmp
push
cmp
and
dec
inc
push
in
xchg
sub
cs
rcl
aas
adc
aas
lods
and
push
jecxz
mov
sbb
or
cmp
or
lahf
xor
fcomp
cmps
add
inc
sbb
add
sbb
or
or
iret
outs
lahf
aaa
je
push
or
sub
push
bound
jl
mov
nop
adc
shr
nop
jae
enter
icebp
and
or
into
jmp
fbld
add
shl
mov
icebp
mul
cs
jnp
es
push
sbb
push
in
mov
cmp
sbb
fst
inc
cmp
sub
fst
push
test
jl
enter
gs
daa
cmc
xchg
pusha
outs
rcr
sbb
pusha
in
jne
pop
in
bound
pop
mov
in
xchg
fdivr
adc
sbb
fisubr
test
dec
push
hlt
ins
dec
xor
cdq
push
je
jo
jb
push
add
push
add
inc
and
mov
push
sahf
je
jecxz
hlt
les
mov
stos
dec
cmp
call
or
not
int3
adc
mov
pop
mov
jp
add
xchg
popa
repz
movs
cs
push
xchg
xchg
dec
and
das
icebp
mov
mov
jbe
sbb
not
mov
retf
push
fmul
lods
lods
fs
push
ins
ss
xlat
push
jo
and
adc
cld
sub
xor
and
sub
mov
mov
cmps
aad
jb
mov
add
push
pop
pop
addr16
in
adc
or
sub
fsub
pop
and
mov
jmp
jge
push
cmp
aas
jo
xlat
ret
sbb
xchg
std
pop
mov
aas
mov
shl
imul
add
push
sbb
pop
dec
sahf
pop
iret
push
cmc
out
xor
sbb
das
push
inc
cmp
je
fcomp
mov
je
and
xor
sbb
sti
mov
data16
in
pop
xor
mov
or
aad
cmp
add
sahf
pop
or
sub
je
add
inc
mov
popa
in
xor
push
or
inc
sbb
push
data16
loop
inc
or
add
inc
mov
cmp
aas
sub
jbe
punpcklqdq
sub
stos
cmp
inc
ss
or
clc
stos
jb
outs
sbb
(bad)
call
shl
cmp
retf
out
inc
add
aas
fs
adc
popf
adc
xor
mov
cmc
push
ret
jo
mov
bnd
mov
jge
shr
mov
jge
sbb
out
enter
push
dec
mov
cmp
mov
jl
mov
shl
jmp
ret
mov
test
je
rol
shl
adc
xor
nop
lods
pop
adc
add
data16
add
data16
ds
cmp
jbe
daa
into
mov
sub
or
mov
call
and
and
add
inc
loopne
add
sbb
push
adc
sub
outs
push
mov
ret
adc
icebp
retf
jb
inc
mov
or
push
push
push
push
mov
or
mov
ds
retf
or
mov
fadd
and
je
cld
and
sahf
(bad)
fsubr
pop
pop
inc
hlt
sub
pushf
fmul
sbb
in
(bad)
lock
mov
push
push
mov
mov
xor
dec
mov
test
dec
jge
(bad)
jg
scas
mov
pinsrw
mov
add
shl
cmp
ja
xchg
call
je
rol
into
test
(bad)
in
dec
dec
cmp
retf
add
call
mov
shr
inc
cmp
jle
cmp
jg
and
(bad)
fistp
shl
mov
cmp
jle
mov
xor
mov
lock
int
xchg
loop
rcl
cmp
adc
cmp
repz
test
(bad)
out
call
cmp
sahf
jle
fsub
test
gs
sbb
retf
push
mov
dec
cmp
jg
mov
retf
cmp
jg
loop
clc
sbb
cmc
add
and
movs
cmp
jne
inc
cmp
jl
int
jle
cmc
pop
sub
add
jno
and
nop
sbb
jmp
push
shl
mov
in
in
call
and
mov
inc
neg
and
call
cmp
sbb
aad
cmp
test
std
btr
pop
pop
pop
pop
ret
test
jne
or
ins
push
sub
pusha
dec
test
repz
inc
jmp
(bad)
push
mov
xchg
fcomip
stos
mov
pop
mov
xchg
mov
mov
mov
mov
shl
sbb
cmp
enter
ror
mov
mov
sub
pusha
(bad)
or
gs
jmp
fild
outs
mov
pushf
sahf
ds
adc
std
(bad)
sahf
push
add
fistp
ins
mov
xchg
mov
xchg
scas
call
push
fs
sub
test
jg
xchg
sti
xor
mov
inc
fwait
out
adc
sbb
or
ret
fldenv
or
sub
pop
cmp
xchg
inc
clc
inc
adc
jmp
out
cmp
xor
lock
jno
pop
daa
or
mov
or
in
sub
jbe
fistp
pushf
cld
mov
arpl
mov
add
fucom
movsx
pop
add
mov
add
and
xor
mov
sbb
fsubrp
rcl
ins
mov
mov
std
push
fucomi
mov
or
fwait
icebp
mov
in
shl
out
fld
loopne
jbe
call
inc
lea
in
push
sbb
lea
repnz
xchg
sbb
pushf
xor
push
adc
push
pop
lds
shl
inc
call
adc
into
push
outs
and
adc
ja
mov
movs
mov
rol
sbb
add
pop
or
sub
out
mov
sbb
or
jnp
std
test
int3
je
out
div
ret
mov
jp
or
add
jecxz
jl
and
cmp
pop
jge
cmps
popf
add
arpl
mov
rol
cmp
and
pop
sub
inc
data16
push
mov
mov
ret
pop
sbb
std
cmp
cmps
jl
push
sub
data16
cmps
in
ret
jl
in
adc
push
call
mov
sub
add
mov
test
nop
dec
push
enter
outs
and
or
and
xor
mov
cmps
jno
in
push
xchg
cmp
ja
(bad)
and
sar
cmp
adc
push
push
rcr
pop
sub
cdq
arpl
inc
xor
pop
inc
and
pop
mov
push
mov
sbb
mov
push
ins
add
fcomp
push
and
inc
or
das
push
or
daa
xchg
adc
dec
adc
push
xor
dec
gs
int3
adc
pop
add
aad
dec
push
outs
sbb
arpl
push
aas
dec
sbb
clc
add
inc
stos
xlat
adc
push
mov
stos
cmp
inc
scas
jb
sub
shr
or
ins
add
and
mov
or
shl
sbb
ret
stos
and
or
loopne
jno
xchg
pop
and
scas
cs
in
lea
loop
xchg
mov
jno
xor
jno
xlat
cmps
push
fwait
and
jp
sbb
popa
jmp
outs
and
or
call
dec
movs
mov
mov
aaa
dec
stos
mov
pop
scas
push
xchg
repz
mov
sub
lods
sbb
(bad)
ins
icebp
cmp
and
sub
and
push
inc
dec
out
push
cmp
push
mov
pop
pusha
out
cmp
sub
es
imul
fidiv
mov
and
cdq
retf
sub
mov
sub
dec
sbb
bound
(bad)
repnz
mov
pop
sub
xor
sar
push
push
rcr
and
xchg
and
aas
adc
jbe
test
sub
cmp
leave
push
add
jmp
or
inc
mov
dec
shr
add
push
adc
jo
sar
adc
jne
xor
and
cwde
sahf
js
popf
sbb
stos
add
call
mov
mov
imul
int3
lds
ror
xor
push
loop
loop
dec
mov
and
cmp
sbb
sar
adc
push
push
and
add
adc
mov
dec
adc
retf
mov
loope
add
adc
add
cmp
push
sbb
cmc
mov
cmp
test
sbb
cdq
dec
mov
dec
adc
adc
cmp
mov
xchg
mov
pop
mov
rol
imul
push
cmc
dec
lea
aaa
sub
shl
cmps
mov
add
or
pop
int3
sbb
emms
in
shl
adc
aas
cld
add
aaa
(bad)
jne
sbb
or
in
mov
jg
and
dec
cmp
jle
cmp
jge
std
mov
mov
inc
inc
and
mov
cmp
out
fidivr
cmp
jbe
add
imul
pop
call
push
mov
ret
inc
pop
sub
and
pop
mov
sbb
or
cwde
or
add
call
sti
das
out
test
xor
adc
or
mov
sub
add
clc
ss
lea
(bad)
lock
ja
mov
inc
aas
sub
fadd
lods
lock
in
sbb
inc
push
call
lods
xchg
xor
mov
cmp
sub
push
arpl
lds
push
xor
push
xchg
lods
icebp
jge
int3
icebp
rcr
cmp
pop
call
add
(bad)
icebp
jle
ret
jg
mov
push
scas
adc
neg
dec
ret
test
je
fdivp
aaa
cli
aaa
pop
test
mov
add
xor
or
cwde
imul
inc
mov
pop
and
xchg
cmp
call
(bad)
out
lea
jl
test
jl
fist
sub
mov
dec
outs
or
fcmovne
(bad)
and
add
jg
dec
jmp
and
sbb
xchg
inc
int
adc
stos
daa
out
xor
mov
sbb
pop
ret
pushf
gs
stos
loope
inc
xchg
shl
lahf
xchg
xchg
mov
push
xchg
push
es
xchg
xchg
call
push
mov
loop
cld
add
mov
daa
ins
ret
cmc
dec
test
jbe
mov
or
in
int3
mov
jg
dec
jmp
inc
pop
hlt
push
push
dec
es
(bad)
cmp
fsub
pop
jmp
pop
neg
das
aaa
mov
(bad)
dec
push
or
mov
or
push
push
push
in
sbb
jge
out
push
push
popa
xchg
or
mov
dec
xchg
xchg
mov
push
dec
sbb
(bad)
jbe
and
lea
out
setb
add
aam
inc
stc
add
cld
test
enter
push
dec
out
cdq
je
dec
push
jae
add
clc
or
inc
adc
mov
or
je
enter
add
mov
cmp
arpl
mov
jmp
push
push
call
mov
imul
cli
push
jge
add
shl
or
mov
add
sahf
and
cli
cld
jecxz
inc
fld
ret
pop
in
cmps
add
adc
stc
push
add
dec
add
or
data16
std
jmp
or
rcl
pop
add
add
outs
shr
xor
call
add
ins
pop
loope
(bad)
std
(bad)
das
icebp
cmp
jge
mov
and
sub
jmp
jnp
mov
(bad)
ja
add
jmp
add
sub
out
push
pop
mov
mov
fsubp
cmp
push
add
cmp
jnp
pusha
je
loope
loop
test
add
rol
mov
adc
mov
xor
outs
in
mov
call
add
jns
mov
add
cmp
cmp
sub
sbb
add
sub
add
fbstp
mov
loopne
aaa
and
mov
push
and
jns
repz
call
lods
cmp
fistp
cmp
data16
dec
add
inc
jmp
pop
jnp
shl
xor
jmp
push
dec
and
or
in
mov
sahf
sbb
adc
cmc
jmp
fcomp
jnp
neg
arpl
sbb
adc
or
sbb
daa
loopne
pop
dec
push
sbb
fisub
add
lock
les
test
mov
xor
adc
test
(bad)
repz
pop
nop
xchg
jge
pop
inc
mov
cmp
add
push
mov
mov
jns
fisubr
mov
nop
repnz
add
push
shr
sti
in
clc
adc
add
mov
or
enter
or
add
mov
inc
rcr
and
add
(bad)
fdiv
add
sub
cmp
mov
test
jne
cmp
jle
cdq
pop
mov
movs
call
and
and
add
mov
dec
add
mov
sbb
adc
cmc
ins
imul
loopne
loopne
or
sub
(bad)
fst
pop
xor
mov
push
sti
rol
or
mov
mov
or
cld
cmc
adc
pop
lods
ror
popf
sbb
in
sub
stos
add
add
push
int3
aam
xlat
(bad)
push
movs
cmp
adc
and
and
and
mov
adc
retf
push
push
push
add
or
cmp
xor
push
pusha
xchg
cmp
mov
data16
cs
movs
push
adc
dec
sub
popa
sar
sahf
test
xchg
shl
sub
or
mov
push
scas
cmp
jb
jecxz
xor
adc
aas
sbb
mov
sbb
mov
jnp
jmp
enter
sbb
cmps
jg
xchg
pop
enter
jecxz
jecxz
fimul
fmul
or
mov
mov
call
add
mov
sub
cmp
sbb
les
mov
pop
push
or
mov
(bad)
mov
xchg
addr16
pop
jecxz
xchg
push
retf
mov
mov
movs
inc
add
cmp
jb
add
xchg
mov
rol
sub
adc
pusha
lock
pusha
call
mov
mov
or
clc
xor
call
stos
sbb
pop
pop
mov
push
test
sbb
jecxz
xchg
in
jmp
cwde
dec
pop
push
ja
push
mov
push
jo
cdq
hlt
add
cwde
dec
jp
push
sti
sbb
repnz
jo
add
xor
lock
add
mov
add
or
scas
mov
or
movs
add
xor
jge
dec
bound
stos
add
xor
jo
inc
fnsave
cmp
jne
mov
fadd
sbb
(bad)
pop
pop
sub
mov
daa
clc
and
cli
leave
sti
mov
inc
shl
shr
and
adc
jl
or
jne
sbb
das
loopne
adc
mov
fcom
and
sbb
mov
sbb
dec
out
pop
jmp
inc
push
test
mov
ds
mov
std
and
mov
es
test
adc
add
sti
cmp
or
mov
push
cwde
(bad)
ficom
mov
cmc
cmp
sub
cmp
es
clc
sub
in
mov
inc
dec
mov
imul
div
add
xor
or
pop
mov
or
xor
rol
(bad)
aas
dec
add
mov
imul
dec
xor
test
je
test
mov
div
test
and
ret
xor
or
push
pop
or
adc
or
repz
mov
xor
loopne
jmp
push
or
test
mov
loope
sub
inc
sub
pop
aaa
mov
push
retf
div
movsx
(bad)
lahf
push
push
not
adc
int3
xchg
mov
mov
nop
loope
sbb
jecxz
loope
inc
or
pop
rol
cmp
xchg
leave
mov
out
ret
pcmpeqw
les
cmp
inc
pushf
add
sbb
or
mov
or
xchg
or
push
add
pop
pop
or
mov
ror
aas
ins
movs
enter
sub
jne
neg
stos
not
mov
mov
or
sub
bndldx
push
mov
and
pop
stos
imul
and
mov
in
sbb
pop
or
add
pop
mov
call
out
mov
mov
pop
sar
sbb
mov
test
push
lock
sbb
sbb
mov
inc
xor
add
mov
adc
mov
stc
and
dec
fmul
cmp
xor
mov
add
pop
pop
or
loopne
and
or
pop
addr16
sbb
pop
cmps
lock
pop
mov
jnp
mov
xchg
mov
push
rcl
imul
mov
jl
jbe
lds
call
and
push
adc
ss
add
cs
lds
cmp
enter
xchg
mov
pop
neg
mov
cdq
sub
sbb
lock
dec
mov
adc
dec
or
mov
sbb
mov
pop
bsf
push
push
and
repnz
idiv
mov
mov
xor
adc
in
pop
xor
inc
mov
sbb
fsubr
adc
cmp
pop
add
call
cmp
and
sub
call
mov
mov
xlat
lea
daa
adc
int
icebp
push
cmp
(bad)
jb
add
add
pop
mov
adc
adc
mov
mov
sub
or
ss
shr
or
xchg
int3
je
aas
add
sbb
cwde
jne
adc
loopne
inc
mov
jne
push
cmp
xor
enter
add
retf
sub
and
mov
dec
or
mov
or
push
ins
adc
aam
not
xchg
xchg
nop
mov
fisub
enter
fs
leave
jle
ret
mov
push
xor
and
sub
adc
(bad)
dec
sub
xor
sub
sub
add
inc
jg
xchg
daa
mov
std
add
cmp
fsub
mov
inc
test
push
xor
loope
cmp
sti
(bad)
push
add
jecxz
ret
jecxz
fimul
push
sbb
inc
(bad)
dec
mov
daa
cmps
mul
mov
inc
mov
ins
add
pop
mov
adc
inc
inc
cmp
mov
adc
jecxz
daa
jne
call
pusha
shr
jne
call
mov
inc
push
push
mov
mov
add
sub
and
call
dec
fucomp
adc
test
fbld
push
jmp
or
fisttp
in
sub
das
sub
stos
cmp
sbb
jle
shl
add
dec
iret
push
jg
dec
mov
or
add
jmp
inc
movs
push
jbe
ret
dec
add
pmuludq
sub
dec
mov
push
(bad)
or
adc
jbe
dec
or
mov
jo
inc
sbb
jge
cmp
or
adc
or
imul
fnstcw
test
dec
pop
icebp
div
mov
jle
push
sub
arpl
mov
inc
inc
ins
jle
pop
mov
add
sub
mov
aam
pop
les
push
out
jmp
neg
adc
push
mov
cmp
inc
or
push
inc
adc
xor
cmp
add
mov
lock
mov
sbb
cld
inc
jg
and
call
(bad)
jmp
pop
pop
push
push
sbb
sbb
sbb
sbb
sbb
js
(bad)
call
push
push
adc
adc
adc
adc
adc
push
push
(bad)
lahf
hlt
sbb
and
mov
mov
(bad)
mov
mov
jno
addr16
sbb
or
adc
push
pop
add
dec
lea
inc
icebp
xchg
mov
shr
adc
jmp
cli
enter
xchg
pop
pop
pop
mov
mov
or
fild
add
test
(bad)
pop
pusha
popf
jmp
repz
or
loope
neg
add
add
adc
push
ret
jmp
call
ror
sbb
sbb
cld
cmp
jbe
mov
sub
jg
inc
call
mov
mov
mov
xor
mov
rcl
or
test
fnstsw
jnp
push
popa
or
mov
das
push
cmp
add
mov
jmp
ror
je
(bad)
pushf
adc
rcr
add
inc
jnp
mov
xor
loopne
jmp
inc
in
cmp
jne
scas
jmp
sbb
adc
popa
out
scas
rol
arpl
rol
add
push
pusha
ins
popa
jp
push
data16
cld
mov
jle
mov
dec
ja
fisub
mov
adc
cmp
xor
scas
test
popa
cs
sbb
mov
loope
or
gs
ret
idiv
add
pop
pop
call
jge
push
pop
aad
hlt
ja
cmp
je
dec
jae
adc
and
mov
jl
adc
ins
retf
mov
pop
xor
add
inc
mov
sub
add
xlat
sbb
add
jno
je
or
adc
xchg
or
mov
mov
mov
xor
mov
xor
test
push
(bad)
sbb
push
and
div
mov
pop
push
or
push
sbb
dec
cmp
sbb
outs
sbb
stos
daa
(bad)
xlat
retf
sbb
lods
and
push
mov
jnp
sub
adc
pop
xor
out
inc
repz
cmps
mov
dec
jmp
pop
pop
fadd
adc
add
cwde
je
jbe
and
out
inc
sub
jmp
int3
add
push
cmp
cmps
inc
pop
fmul
cmp
and
add
out
es
push
push
or
les
out
mov
outs
not
mov
and
xor
rol
outs
inc
fs
inc
sti
aad
and
xchg
mov
jo
add
push
jle
xlat
adc
cwde
sbb
test
jge
and
scas
push
sbb
int
(bad)
aas
adc
pop
leave
add
or
or
add
js
loop
push
push
sub
adc
in
xor
sub
leave
adc
xor
pop
dec
add
mov
pop
or
fiadd
data16
inc
and
add
inc
jns
mov
pop
push
mov
add
ret
add
mov
or
data16
leave
sbb
test
inc
push
pop
inc
adc
push
adc
clc
shl
mov
mov
mov
xchg
movs
jecxz
scas
mov
jl
jg
jbe
imul
je
das
js
sub
add
sub
fist
xchg
sbb
or
adc
loope
popa
icebp
outs
jbe
xor
pop
push
push
(bad)
mov
sti
push
adc
push
mov
xchg
in
mov
aas
add
mov
mov
push
or
mov
and
push
adc
cmp
cwde
xchg
in
and
cmp
and
ret
cli
sbb
add
push
jl
mov
aam
dec
mov
or
fsubrp
ret
icebp
ins
xor
data16
push
clc
sti
pop
inc
push
sbb
and
jno
inc
or
cmp
in
imul
inc
xor
sbb
xchg
aaa
enter
add
icebp
add
push
jmp
dec
fidivr
adc
xchg
stos
mov
loopne
mov
popa
and
fmul
test
pop
aas
and
sub
mov
or
or
push
mov
in
fild
xor
jecxz
stos
fmul
call
xor
rcl
jnp
jb
scas
push
jle
faddp
test
movs
setbe
add
sub
push
sbb
jne
xchg
or
and
lods
les
mov
loope
mov
mov
add
mov
xor
je
dec
or
jnp
sti
fimul
test
cmps
xchg
sub
mov
adc
adc
xor
mov
inc
and
jne
rcl
cmp
adc
pop
jo
retf
cmps
lds
push
push
and
jae
sar
enter
adc
mov
push
add
fmul
fsubr
jne
push
or
je
loopne
repnz
cdq
fadd
and
imul
or
retf
mov
cmp
sub
sbb
xchg
xchg
loop
or
jb
leave
and
sbb
adc
shl
pop
add
or
sbb
test
push
mov
adc
inc
jecxz
adc
cmp
adc
cmp
popf
mov
sub
shl
add
mov
out
mov
and
xchg
adc
add
sbb
push
retf
or
sub
xchg
test
dec
retf
mov
inc
aas
test
in
jmp
push
mov
pusha
add
jle
xor
and
and
sub
rcl
sub
fidiv
inc
movs
inc
pop
cmps
push
pop
ins
xlat
xchg
int3
dec
pop
sub
sub
and
or
ss
dec
xchg
or
je
jge
mov
fs
and
mov
jns
inc
adc
inc
outs
add
adc
mov
adc
leave
adc
dec
add
sbb
adc
jno
dec
mov
imul
scas
imul
push
fisttp
sbb
dec
lods
mov
sbb
dec
add
jbe
cmp
xchg
das
push
std
mov
(bad)
ja
jae
outs
fcom
loope
inc
int
inc
int
repz
add
push
rep
in
inc
cmp
sbb
pop
mov
or
adc
sbb
fiadd
test
inc
cmp
ret
in
cmp
lea
mov
dec
repnz
dec
test
xor
push
xor
mov
fnstenv
inc
inc
pop
cmp
add
and
mov
nop
mov
push
dec
sub
out
dec
inc
rcl
imul
sbb
cmp
test
add
mov
jl
gs
test
add
mul
inc
ins
push
sbb
pop
fadd
repnz
inc
inc
ja
ror
cwde
lahf
and
ds
mov
pusha
test
inc
jbe
js
jle
jbe
mov
lods
outs
mov
push
leave
std
push
push
jl
push
add
cmp
ja
inc
and
(bad)
xlat
mov
sub
push
rcr
in
push
push
iret
or
mov
add
mov
jne
psubw
adc
je
xchg
fild
mov
ret
or
outs
lea
sti
les
push
sbb
gs
pop
sbb
inc
ins
lock
cmp
adc
adc
adc
je
pop
add
mov
sbb
call
push
and
stc
jo
xchg
fimul
mov
arpl
scas
pop
xchg
xchg
push
adc
fisub
daa
enter
bound
push
push
call
adc
ss
in
nop
idiv
test
cmp
dec
adc
mov
and
mov
aaa
mov
or
sub
sub
mov
je
inc
pop
fsub
add
sub
push
popa
mov
mov
add
or
jo
push
cmp
jo
outs
repnz
hlt
inc
adc
xor
jne
jo
ret
mov
lea
xchg
push
shr
xor
adc
fiadd
adc
into
adc
inc
imul
push
jae
mov
or
in
es
push
sbb
ret
mov
scas
add
fsubr
xchg
dec
fdiv
adc
fwait
mov
push
test
pusha
cmp
lods
clc
inc
mov
inc
sbb
fisubr
loopne
cs
cmp
cmp
mov
les
jnp
jmp
pop
mov
xchg
push
or
push
sub
lock
ja
leave
arpl
push
sbb
icebp
repnz
jb
xor
fcom
into
sbb
pop
mov
pushf
adc
sbb
das
lahf
mov
cdq
fidiv
in
les
out
mov
pop
or
mov
push
sub
dec
pop
jo
inc
and
repnz
push
and
std
(bad)
or
cmp
(bad)
(bad)
jmp
dec
dec
mov
fidivr
push
adc
inc
push
nop
in
mov
movs
sub
mov
pushf
clc
icebp
gs
xor
jns
jg
pushf
je
sub
sub
inc
repz
(bad)
imul
push
cmp
es
stc
or
pop
psrad
sbb
mov
mov
aaa
mov
jg
push
cli
jl
in
add
dec
lock
ja
push
add
jno
aas
xor
mov
mov
push
add
mov
xor
jbe
repz
mov
rol
dec
xor
pop
nop
(bad)
push
dec
pop
push
pop
add
sahf
mov
ja
outs
push
push
xor
push
jle
icebp
inc
adc
fsub
shl
xlat
outs
fmul
push
pop
pusha
mov
pop
leave
xchg
cmp
sub
mov
arpl
adc
push
dec
push
stos
dec
je
cmps
push
push
add
shl
push
pop
je
repnz
add
repz
xor
fwait
inc
fist
mov
aad
jns
test
ret
cdq
add
add
call
add
xchg
push
fiadd
ret
inc
jg
shl
in
movs
outs
dec
cmp
or
sbb
mov
jle
xchg
pop
(bad)
pop
sbb
fist
pop
pop
adc
in
(bad)
jns
add
dec
dec
cmp
mov
(bad)
add
mov
add
jne
mov
sub
lea
ss
jmp
dec
inc
or
add
inc
and
mov
out
push
inc
in
outs
adc
cmp
pop
sbb
push
pop
out
enter
repz
cmp
xchg
call
sbb
push
add
dec
enter
dec
sbb
rol
push
sub
and
mov
push
adc
add
dec
bswap
mov
aad
jo
mov
sub
lahf
xor
push
jb
jle
movs
pop
hlt
(bad)
mov
(bad)
daa
sub
ret
retf
lea
dec
cmp
jl
adc
dec
icebp
add
pop
mov
push
sub
test
pop
sbb
pop
jo
adc
cmp
pop
xchg
adc
mov
loopne
push
add
sahf
scas
dec
jo
mov
fimul
push
jle
add
int3
adc
xchg
pop
push
jle
rol
out
inc
je
addr16
je
push
add
dec
inc
xchg
sbb
lds
js
fdivrp
inc
cmp
or
and
ss
push
test
(bad)
jmp
or
dec
cli
dec
add
or
jg
(bad)
emms
setnp
cmp
daa
stos
cmps
cmp
adc
jnp
sbb
pusha
inc
pop
mov
and
xchg
inc
push
cmp
leave
and
inc
sbb
sub
test
stos
stos
inc
push
dec
shl
pop
push
jnp
sbb
dec
rol
xor
movs
(bad)
sbb
fisttp
pop
pop
or
jne
sub
and
iret
aas
syscall
cli
ror
or
push
or
mov
push
inc
call
xor
movs
(bad)
mov
clc
adc
mov
pop
xchg
and
test
or
mov
xchg
mov
lea
pop
and
add
mov
push
or
mov
sub
adc
jb
add
lahf
aad
loope
lea
push
into
xchg
data16
adc
cmp
(bad)
dec
je
add
or
loope
mov
jmp
mov
stos
adc
scas
mov
je
sbb
push
fisubr
lds
mov
mov
inc
sub
jb
jbe
les
sub
and
xchg
mov
es
jmp
pop
jns
xor
dec
mov
inc
or
jmp
iret
sbb
sbb
fwait
out
adc
push
pop
or
lea
add
lea
xchg
inc
and
js
aad
xor
out
xor
pop
sbb
(bad)
ffree
pusha
inc
aam
xor
push
and
jl
ss
sti
js
pop
mov
push
add
and
dec
push
das
cmp
mov
pop
add
or
nop
inc
pop
mov
pop
loopne
inc
jb
and
dec
and
mov
(bad)
dec
adc
and
or
push
and
push
shl
pop
lahf
(bad)
(bad)
ins
das
sbb
push
mov
dec
retf
xchg
(bad)
mov
sbb
and
clc
ss
aas
test
ins
jl
lods
fstp
repz
lea
cmp
or
int3
mov
sti
jns
xor
sbb
mov
test
mov
xchg
fadd
cli
pop
clc
sub
fs
sahf
addr16
jg
pusha
mov
xchg
ror
ror
lods
(bad)
mov
mov
inc
cmp
mov
ins
scas
test
jl
sahf
ja
(bad)
push
stos
ret
mov
mov
je
mov
mov
int3
xor
add
repz
sub
push
cld
mov
nop
sub
loopne
in
inc
cmp
fstp
mov
pop
in
sbb
mov
or
pop
dec
cld
inc
cmp
sbb
xor
mov
shl
cmp
cmp
ret
mov
ret
inc
and
push
jl
inc
push
and
mov
addr16
aam
jle
push
push
inc
and
or
inc
add
dec
mov
retf
adc
adc
and
add
leave
jle
int
leave
jp
ror
mov
fld
hlt
inc
mov
movs
dec
or
adc
mov
mov
cmp
jle
mov
mov
sub
lea
lea
cmp
jbe
mov
icebp
inc
mov
add
sbb
das
loope
or
clc
cld
(bad)
cmp
mov
js
mov
xor
dec
jns
(bad)
and
dec
in
ret
cmp
xor
out
add
fiadd
(bad)
jb
and
xchg
dec
(bad)
maxps
add
sub
outs
addr16
sbb
adc
jae
mov
or
inc
cmp
ja
mov
jnp
or
imul
rcr
lods
ja
mov
cmc
or
jnp
neg
add
mov
stc
sti
push
or
cmp
jle
fiadd
xchg
jo
cmps
adc
pop
outs
xchg
outs
and
(bad)
xor
enter
stos
js
je
int
cmp
je
xchg
pushf
xchg
stos
je
ins
stos
(bad)
std
and
and
nop
sbb
mov
pop
add
or
fcom
mov
lods
mov
sub
stc
sub
rol
ror
test
lods
lea
xor
mov
popa
aas
aad
scas
jb
test
scas
cwde
scas
xchg
scas
fnstcw
rcl
and
mov
push
daa
(bad)
aam
movs
sbb
mov
lods
mov
mov
jb
test
push
repnz
mov
jb
jae
mov
mov
rol
xchg
inc
aam
xchg
iret
jmp
rcr
add
fdiv
fdiv
xchg
int
cmp
mov
rcl
mov
fwait
xchg
pushf
aam
int3
mov
sti
add
rcr
mov
jge
shr
pusha
add
add
in
mov
push
test
in
add
repnz
cmp
mov
call
mov
cmps
shl
mov
xchg
mov
push
add
test
pop
jno
mov
dec
mov
mov
xchg
int
jmp
mov
mov
nop
dec
call
sub
sub
mov
fisub
pop
rcl
in
gs
shl
mov
int3
mov
mov
leave
sub
les
sbb
push
ffree
mov
dec
dec
and
rcr
cmp
dec
add
popa
dec
bound
or
test
cwde
in
inc
fs
gs
test
cmp
dec
or
retf
cwde
mov
ss
mov
sbb
call
adc
push
push
call
cmp
xchg
into
push
add
bound
add
xchg
mov
adc
add
push
adc
jl
sub
aam
sub
push
cmp
xchg
jbe
push
sub
sbb
shl
inc
and
push
mov
or
push
test
pop
in
or
and
out
ret
cmp
mov
into
add
cld
(bad)
sub
and
adc
inc
inc
push
es
push
mov
mov
shr
and
push
add
inc
push
xchg
and
mov
jnp
and
dec
dec
lea
sbb
xor
sub
xor
daa
fimul
push
mov
push
jp
sub
imul
mov
call
sub
jge
mov
or
and
jmp
push
add
jnp
icebp
jmp
adc
xor
cmp
pop
arpl
adc
fidivr
push
mov
sub
pop
aaa
fiadd
movs
xor
and
test
loopne
xchg
or
mov
xchg
(bad)
arpl
fxch
xchg
cmp
test
jbe
or
mov
stc
adc
in
and
or
xchg
sub
push
daa
mov
dec
sbb
pop
cmp
ja
(bad)
push
repnz
mov
push
sbb
inc
inc
mov
cld
jb
xor
mov
jecxz
push
push
lock
mov
(bad)
aam
test
and
addr16
and
pop
shl
dec
inc
jl
pop
shl
mov
adc
arpl
mov
cmp
loopne
je
jmp
or
mov
adc
add
inc
sbb
sbb
mov
cmp
add
cmp
leave
dec
nop
xor
and
imul
push
inc
xor
dec
or
cld
and
imul
adc
setg
add
cmp
and
outs
or
and
outs
inc
mov
cmp
je
test
or
retf
leave
jno
pop
xor
xor
enter
adc
repnz
cmp
adc
sbb
repnz
je
mov
test
adc
cwde
mov
sbb
mov
xchg
pushf
pop
adc
cmp
jb
jb
js
or
cmp
push
sub
dec
xchg
arpl
jnp
or
mov
fisttp
mov
loopne
inc
add
lods
dec
out
out
rcr
mov
push
inc
inc
ret
sub
inc
adc
gs
(bad)
jns
or
sahf
jmp
mov
and
sub
add
adc
sbb
sub
pop
push
dec
fldenv
(bad)
push
ss
pop
inc
jno
sub
cmp
scas
pop
iret
(bad)
sbb
add
mov
shl
and
xchg
sub
inc
xor
mov
daa
cwde
sbb
outs
or
push
sub
dec
push
mov
je
shl
mov
cmp
jbe
ds
sbb
push
jle
js
sub
loopne
add
pop
hlt
and
daa
push
jg
sub
dec
cmp
jbe
sbb
icebp
call
jns
ss
rol
sbb
push
cmp
lock
push
pop
aad
dec
test
scas
aad
clc
scas
add
sub
pop
movzx
mov
cmps
imul
push
mov
adc
inc
jne
cmp
jne
sub
mov
inc
cmp
cmp
inc
add
adc
mov
add
or
push
mov
add
sub
or
stos
pusha
es
push
push
add
icebp
ret
xor
je
xor
xor
mov
xor
push
pop
rcr
loope
leave
shr
mov
add
mov
inc
stos
ins
adc
pop
out
stos
ds
addr16
pop
add
inc
xor
movs
test
aas
pop
les
out
adc
test
mov
mov
not
in
cmp
and
pusha
mov
rcr
hlt
pop
mov
adc
out
or
xchg
pop
call
(bad)
das
sub
repnz
cmp
push
retf
in
ja
cwde
add
add
sar
mov
jno
sub
add
add
addr16
inc
or
pop
mov
icebp
sub
sbb
adc
jg
imul
mov
dec
imul
jae
in
in
or
out
shr
pop
push
add
es
lock
js
fidivr
mov
jge
int3
mov
dec
inc
and
mov
lea
aaa
movs
into
add
cmp
xchg
add
mov
je
mov
add
sub
cmp
call
pop
xchg
or
sbb
popa
sbb
xchg
test
or
push
(bad)
dec
xchg
nop
rol
ret
xchg
add
add
jg
xchg
mov
or
inc
cs
xchg
inc
cs
mov
push
push
or
mov
inc
adc
or
rcl
push
aas
leave
rcl
mov
fcomp
repnz
nop
ja
fcom
nop
push
or
push
lods
lods
sbb
push
add
dec
dec
pop
jl
rcr
cmp
adc
into
xor
sti
add
stos
lea
and
ds
mov
mov
sti
dec
dec
jne
sub
mov
adc
jne
pop
(bad)
push
sbb
jbe
add
mov
push
jl
add
inc
pop
mov
(bad)
jbe
test
icebp
cmp
ja
mov
loopne
test
push
sub
dec
lea
jg
add
jae
rol
jecxz
xchg
mov
lock
push
cmp
jae
lds
cs
jne
js
mov
xor
cmp
xor
push
jns
mov
inc
pop
add
lods
adc
pusha
cmc
nop
lahf
mov
dec
mov
clc
je
add
jnp
fist
push
cmp
or
adc
lea
mov
or
pushf
dec
jb
add
adc
pop
adc
mov
addr16
push
push
xor
push
sub
cmp
(bad)
iret
xchg
(bad)
push
add
cmp
sbb
or
sub
pop
int
sub
and
jge
cmc
dec
cmp
shl
mov
pusha
adc
adc
xchg
rol
les
sti
lahf
add
jbe
movzx
push
sub
xchg
(bad)
fcomip
shl
cmp
and
inc
sub
pushf
cmp
loope
jae
xchg
test
sub
sub
inc
pop
jb
pop
jl
xor
pop
lods
add
pop
cmp
cmp
std
inc
cmp
add
inc
or
dec
ja
adc
rcl
shld
mov
mov
mov
movs
sbb
shl
add
shl
(bad)
jge
jmp
call
sub
jns
jbe
inc
cmp
mov
cwde
xor
(bad)
jo
jmp
jbe
shl
icebp
xor
dec
jae
and
pop
test
cmp
ins
fidiv
lock
jmp
sub
test
div
enter
movs
mov
je
mov
xor
sub
lldt
shl
inc
out
jle
arpl
lea
cdq
loopne
or
jns
add
ds
adc
jmp
xchg
adc
dec
xchg
test
(bad)
(bad)
imul
test
les
rol
dec
and
push
add
ds
add
(bad)
lods
ret
outs
xchg
retf
xor
cmp
jne
jmp
inc
push
mov
gs
lahf
daa
or
leave
rcr
daa
add
push
pusha
mov
jo
fmul
mov
aad
aam
or
pinsrw
rcl
lock
pop
push
add
bound
and
cld
adc
data16
cmp
cmp
sbb
cmps
(bad)
xor
add
(bad)
cli
jno
jae
sbb
inc
xor
shr
add
scas
jns
scas
ret
pop
mov
sub
mov
fwait
xor
or
or
sub
shl
sbb
adc
xor
and
add
cmp
pop
xchg
add
add
and
mov
cmp
cmp
shl
sbb
xlat
test
je
adc
mov
sub
add
ret
push
add
xchg
dec
idiv
pop
mov
add
sbb
ror
jne
mov
shl
fwait
pop
test
aas
sbb
into
push
jbe
int3
adc
mov
add
cwde
pop
adc
dec
push
(bad)
or
jns
add
xor
(bad)
mov
push
mov
mov
and
aas
add
ret
add
dec
or
outs
(bad)
call
mov
fimul
or
sti
adc
inc
adc
xchg
cdq
in
outs
sbb
add
add
ret
add
inc
inc
cld
(bad)
push
dec
cmp
push
cli
(bad)
push
sub
adc
inc
mov
adc
mov
push
add
xchg
cwde
xor
jg
ficomp
loopne
inc
sar
and
and
pop
xor
mov
push
(bad)
cmp
adc
cmc
ret
xchg
pusha
mov
xor
adc
mov
cmp
jne
cmp
push
cmp
jmp
pop
cmp
outs
aad
sub
outs
repnz
and
repnz
pop
jg
or
dec
sahf
mov
inc
add
sbb
fs
fwait
gs
add
mov
jmp
pop
pop
int
rcl
inc
mov
outs
push
jl
xor
daa
mov
shl
or
xchg
out
iret
jb
jne
dec
add
add
fdiv
ja
inc
push
outs
(bad)
ret
les
inc
cld
inc
out
pop
mov
add
jmp
ins
adc
push
lea
jg
inc
add
sub
mov
dec
xor
psrlw
imul
push
sbb
sub
sub
xchg
sub
fist
push
push
xchg
inc
test
adc
push
push
call
rol
or
push
push
call
add
push
pusha
mov
add
cli
cmp
imul
mov
jo
jg
and
jp
pop
(bad)
jmp
sub
fild
xor
push
xchg
add
pop
lock
cdq
call
jb
add
push
imul
sub
add
mov
cmp
and
loopne
sti
scas
cmp
adc
and
inc
or
cmp
mov
test
mov
jno
push
ss
icebp
jmp
and
mov
or
nop
fwait
xlat
push
mov
movs
sar
fsubrp
or
dec
out
sar
lahf
push
adc
or
cmp
cmp
or
add
inc
and
add
out
mov
mov
dec
add
or
mov
pop
inc
or
shl
loopne
retf
mov
sbb
rep
xchg
xchg
sub
test
loopne
nop
nop
pop
and
jb
add
add
xor
add
or
adc
xor
add
sbb
and
xor
sub
xor
add
xor
cmp
xor
add
dec
and
xor
dec
push
xor
add
push
pop
pop
add
and
pusha
fs
ins
jo
and
xor
or
inc
ins
add
and
ja
ja
das
xor
xor
fdiv
ja
inc
inc
inc
inc
dec
adc
add
popa
repnz
dec
sbb
or
cmp
cs
fcom
cmps
imul
call
pop
das
aas
fnstcw
mov
cmps
imul
cmps
imul
cmps
imul
add
sbb
addr16
or
sub
pop
mov
(bad)
es
pop
jb
jns
sbb
fs
add
add
mov
scas
or
in
push
or
enter
or
enter
or
push
and
adc
ins
xor
adc
aaa
es
and
add
pop
push
add
add
add
fimul
xor
(bad)
dec
pop
push
or
imul
pop
and
jecxz
sub
cmp
push
js
clc
bound
leave
add
mov
in
bound
add
imul
arpl
and
cs
(bad)
not
aad
repnz
mov
inc
add
aas
dec
fcom
or
or
adc
sbb
and
inc
add
shl
add
or
dec
or
or
jae
inc
(bad)
sbb
adc
in
loope
inc
mov
aas
(bad)
jg
add
jnp
jo
pop
cmp
cld
pop
ror
daa
jo
add
cwde
push
mov
(bad)
dec
shl
in
cld
adc
pop
and
cmps
imul
imul
cmps
imul
in
xchg
hlt
jecxz
or
and
inc
adc
pop
ins
sub
and
imul
add
sbb
fbld
outs
add
and
jmp
outs
adc
repnz
fwait
out
push
je
mov
xor
and
fld
xchg
test
push
add
jo
mov
add
shr
and
add
dec
maxps
cmp
pushw
push
pop
addr16
mov
add
pop
mov
jae
(bad)
out
clc
add
nop
jp
add
loope
xchg
aaa
rcl
sbb
cmp
test
es
add
inc
arpl
fstp
ins
arpl
push
ins
inc
sbb
add
mov
jge
bound
bound
cmp
daa
ins
enter
add
ret
in
fstp
outs
sbb
jb
pop
test
fmul
daa
shl
bound
not
arpl
inc
push
push
pop
arpl
push
int3
push
pop
daa
nop
lock
cmp
(bad)
cmp
add
adc
push
dec
xor
mov
arpl
pushf
xor
xor
xor
(bad)
(bad)
(bad)
push
(bad)
xor
xor
xor
xor
pop
xor
xor
xor
xor
pop
xor
(bad)
(bad)
push
loopne
jmp
hlt
xor
adc
sub
das
ss
ss
inc
ss
ss
cmp
mov
xchg
ss
ss
ss
and
dec
aaa
push
aaa
bound
xor
cmps
aaa
lods
and
(bad)
push
mov
mov
aaa
jmp
lock
div
sti
aaa
(bad)
(bad)
(bad)
dec
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
inc
cmp
cmp
std
(bad)
cmp
cmp
cmp
or
cmp
cmp
cmp
cmp
(bad)
(bad)
jmp
cmp
cmp
cmp
pop
cmp
cmp
cmp
cmp
(bad)
(bad)
inc
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
pop
cmp
ret
jmp
xchg
cmp
cmp
cmp
push
pop
push
clc
(bad)
dec
xor
es
inc
cmp
cmp
sub
xor
push
shl
mov
(bad)
(bad)
inc
popf
mov
ss
ss
shl
xlat
fnsave
in
div
add
cld
(bad)
push
or
sbb
daa
aaa
cmp
push
aaa
jb
jg
xchg
xchg
aaa
lahf
aaa
lods
out
mov
inc
aaa
fbstp
out
in
aaa
repz
adc
pop
cmp
(bad)
mov
sub
xor
inc
cmp
cmp
out
mov
mov
cmp
cmp
push
cld
(bad)
cmp
cmp
cmp
cmp
cmp
cmp
cmp
ss
cmp
inc
cmp
push
cmp
(bad)
(bad)
(bad)
cmp
cmp
cmp
sahf
cmp
cmp
cmp
cmp
cmp
cmp
clc
jg
aaa
pop
call
cmp
cmp
cmp
cmp
mov
cmp
dec
ret
cmp
cmp
aaa
(bad)
(bad)
push
cmp
cmp
dec
cmp
pop
cmp
cmp
xchg
cmps
cmp
cmp
cmp
(bad)
(bad)
dec
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
(bad)
(bad)
call
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
adc
(bad)
(bad)
(bad)
jmp
cmp
pop
cmp
jbe
jl
xchg
cmp
mov
ds
xor
(bad)
(bad)
jmp
inc
ds
ds
ds
ds
jle
mov
sahf
ds
sar
fnstsw
repz
(bad)
(bad)
(bad)
add
or
adc
sbb
push
aas
sub
xor
inc
aas
dec
aas
push
aas
pop
aas
jbe
mov
movs
aas
stos
aas
mov
xor
ret
aas
fnstcw
lock
inc
pop
xor
(bad)
(bad)
(bad)
push
cmp
inc
xor
pop
xor
outs
xor
xor
xor
xor
xor
xor
movs
jmp
xor
dec
xor
xor
push
xor
push
(bad)
(bad)
call
or
or
adc
cmp
inc
cmp
cmp
cmp
cmp
cmp
cmp
cmp
(bad)
(bad)
(bad)
cmp
cmp
lods
cmp
loop
jmp
ds
jl
cmp
ds
(bad)
(bad)
push
ds
ds
ds
or
es
sub
ss
push
aas
pop
aas
bound
addr16
ins
aas
js
int
(bad)
(bad)
jge
cmp
aas
mov
(bad)
aas
iret
aas
aad
fistp
stc
aas
add
pop
(bad)
(bad)
(bad)
push
or
adc
push
xor
xor
xor
xor
pop
xor
jne
mov
mov
(bad)
(bad)
(bad)
push
xlat
xor
xor
xor
xor
xor
xor
xor
xor
pop
xor
je
mov
xchg
xor
(bad)
push
mov
xor
xor
xor
xor
xor
push
xor
xor
(bad)
(bad)
(bad)
push
mov
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
(bad)
(bad)
(bad)
push
xor
xor
xor
xor
xor
xor
cmp
outs
xor
fwait
xor
push
loope
call
xor
dec
ss
ss
ss
xchg
ss
(bad)
movs
cli
fwait
ss
ss
or
ss
ss
and
(bad)
out
cli
jmp
aaa
cmp
inc
aaa
inc
aaa
dec
aaa
dec
aaa
push
or
cmp
cmp
mov
cmp
aas
clc
aas
cld
div
movs
jg
das
xor
mov
(bad)
mov
xor
je
movs
cmp
cmp
pop
sub
hlt
loope
jmp
aas
mov
cld
jg
push
(bad)
or
xor
xor
xor
push
xor
aaa
(bad)
fistp
xchg
xchg
xor
xor
fidiv
out
repnz
xor
xor
(bad)
push
test
xor
push
xor
push
jbe
xor
pusha
push
or
sbb
fcmovnbe
(bad)
jg
inc
xor
xor
push
xor
pop
xor
loopne
mov
xor
push
xor
pusha
xor
cmps
jl
xor
xor
dec
dec
xor
movs
xor
xor
jg
adc
xor
xor
scas
add
adc
neg
xor
mov
sbb
sub
push
test
fs
adc
arpl
pop
rcl
jle
leave
packuswb
and
sub
movs
daa
pop
push
clc
sub
pop
ins
arpl
jmp
leave
sbb
sbb
pop
jbe
mov
mov
stos
mov
cwde
add
xor
lock
jle
pop
sbb
add
icebp
add
hlt
movs
add
lods
add
mov
fwait
xor
push
ins
jae
xor
mov
inc
dec
xchg
add
loope
out
jne
sub
imul
and
cmp
inc
sub
jmp
cmps
call
and
mov
fwait
xchg
inc
aaa
push
push
icebp
add
push
add
out
add
dec
gs
pop
mov
push
add
add
nop
outs
jbe
add
sbb
ret
loopne
fldenv
out
sbb
test
(bad)
dec
sbb
mov
pusha
loope
lods
inc
jmp
xor
outs
mov
adc
das
lahf
imul
je
and
test
inc
xor
pop
pushf
je
adc
inc
loope
mov
outs
add
xor
ins
adc
sbb
inc
(bad)
inc
ret
or
mov
aad
cdq
add
adc
and
inc
sbb
adc
xor
inc
sbb
sub
push
adc
or
test
jne
jmp
inc
stc
sbb
mov
fdivr
push
add
dec
es
push
or
dec
pop
and
int3
(bad)
test
gs
push
push
xchg
rcr
es
jmp
xor
sahf
sbb
mov
inc
popa
and
fs
cmp
fs
pop
sub
ja
push
lods
dec
les
sub
in
movsx
rcr
jae
cmp
jecxz
adc
movs
and
mov
inc
sbb
outs
fild
and
rcl
add
pop
cmp
sub
cmp
addr16
jbe
and
gs
inc
cmp
ret
inc
lds
mov
cmc
sbb
cdq
ins
jo
dec
(bad)
cmp
fimul
sub
xor
mov
mov
xor
lods
inc
xchg
add
stos
jle
jbe
inc
sub
fisub
daa
pop
ins
inc
push
pop
nop
sbb
xchg
adc
mov
xchg
mov
sub
push
adc
push
add
shr
adc
inc
dec
retf
(bad)
dec
adc
mov
aad
stos
in
test
mov
cmps
cmp
sbb
shr
push
xor
push
scas
adc
ret
jns
mov
sbb
mov
and
or
gs
push
stos
movs
mov
add
adc
cmc
and
sbb
neg
repz
jnp
mov
add
add
sbb
icebp
dec
add
inc
add
ss
dec
retf
push
and
inc
aaa
jae
sub
pop
iret
or
push
in
add
ja
push
push
adc
add
(bad)
rcr
cmps
aas
cmp
mov
sti
jnp
add
ja
dec
cmp
aaa
pusha
pop
sbb
mov
lock
dec
and
jae
je
inc
or
repnz
dec
popf
push
(bad)
loop
sbb
out
js
cmp
mov
adc
jo
in
fs
cld
popa
fadd
je
sub
ins
jb
fisub
add
cmp
mov
lahf
scas
dec
outs
pop
add
push
shr
add
push
popf
mov
sbb
cmps
pop
ud2
jo
movs
sbb
inc
push
add
xor
sbb
(bad)
sub
sbb
(bad)
fs
push
mov
and
lea
xor
adc
inc
call
rcl
mov
jno
ins
bound
inc
push
and
ror
in
rcl
sbb
xchg
ds
das
fsubr
outs
sahf
inc
and
adc
or
jns
ins
clc
outs
test
loope
push
adc
into
adc
dec
in
pop
dec
gs
leave
ins
xchg
loopne
into
inc
imul
fdiv
adc
sbb
sbb
push
ret
sbb
(bad)
add
sub
mov
mov
sbb
das
adc
xor
pop
fs
push
rcl
lahf
push
mov
(bad)
xchg
arpl
or
push
rcr
xor
dec
test
sbb
mov
cmp
xor
dec
popa
sub
cmps
sbb
ins
dec
sbb
arpl
and
jae
or
mov
dec
fsubr
daa
pushf
ret
pop
popa
adc
or
jl
scas
jp
in
jge
fnstsw
jo
add
xor
inc
push
xor
cmps
or
and
mov
fwait
imul
jmp
add
jo
xor
das
nop
div
leave
and
jb
pop
inc
es
sbb
adc
mov
std
mov
xor
stos
in
add
mov
cmp
test
jge
cmp
push
mov
lds
(bad)
(bad)
test
and
movs
mov
es
xor
lock
stc
add
add
pop
inc
sub
sbb
and
push
add
loope
lahf
push
or
add
and
sbb
inc
fsub
push
cmp
inc
pop
(bad)
es
scas
adc
add
dec
leave
cmp
lock
add
sbb
push
and
inc
or
push
imul
push
push
ins
sbb
mov
jns
add
mov
pop
push
pop
or
lods
push
inc
push
imul
inc
je
sbb
adc
push
rcr
xor
loopne
xchg
and
dec
sahf
push
imul
push
cmps
dec
repz
add
and
mov
and
jg
and
add
dec
jmp
add
add
inc
xchg
clc
ret
or
jmp
nop
nop
nop
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jb
dec
add
jne
mov
sub
adc
adc
jmp
xor
sub
jb
shl
mov
inc
xor
je
sar
mov
jmp
add
jne
mov
sub
adc
adc
add
jne
mov
sub
adc
adc
jne
inc
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
nop
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmp
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
popa
jmp
test
inc
add
movs
inc
add
add
add
push
add
add
add
add
rol
add
add
xor
add
rol
push
add
add
add
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
or
add
xor
add
pop
add
add
add
add
add
add
test
add
rol
add
clc
add
or
add
and
add
dec
add
or
add
add
cwde
add
add
add
add
add
add
add
add
add
add
add
rol
add
test
push
add
add
add
add
add
add
add
add
add
add
clc
add
add
mov
add
add
add
add
add
add
add
add
and
add
inc
int
add
add
add
add
add
add
add
add
add
add
dec
add
add
push
add
add
add
add
add
add
add
add
jo
add
fcomp
push
add
add
in
add
add
add
add
add
add
add
cwde
add
add
add
add
add
add
add
add
add
add
add
add
rol
add
loop
add
add
add
add
add
add
add
add
add
add
call
jecxz
add
add
add
add
add
add
add
add
adc
add
or
push
add
add
add
add
add
add
add
add
cmp
add
mov
push
add
add
in
add
add
add
add
add
add
add
pusha
add
add
add
add
add
add
add
add
add
add
add
mov
add
int3
and
add
in
add
add
add
add
add
add
add
mov
add
js
pop
add
add
in
add
add
add
add
add
adc
add
xor
add
add
add
add
add
add
add
clc
add
add
add
in
add
add
add
add
add
add
add
and
add
jo
add
add
add
add
add
add
or
stc
sldt
add
cmp
add
test
add
rol
add
clc
add
cmp
add
and
cmp
add
dec
add
cmp
add
jo
add
cwde
add
add
add
add
add
add
add
add
add
add
add
cwde
add
add
int
add
add
add
add
add
add
add
add
rol
add
rol
add
add
add
add
add
add
add
add
call
aad
add
add
add
add
add
add
add
add
add
add
adc
add
add
add
add
add
add
add
add
add
add
cmp
add
add
in
add
add
add
add
add
add
add
pusha
add
add
add
add
add
add
add
add
add
add
add
mov
add
add
add
add
add
add
add
add
add
add
mov
add
lock
add
add
add
add
add
add
add
add
dec
push
add
pop
push
add
ins
push
add
test
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
add
xor
add
add
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
mov
add
add
add
add
add
add
xchg
push
add
add
add
add
add
add
add
rol
add
add
add
add
add
add
add
add
call
add
add
add
add
add
add
add
add
add
add
add
ins
cmp
add
add
add
add
add
add
add
pop
add
dec
add
push
add
add
inc
add
pop
add
push
add
or
inc
add
add
push
add
inc
add
inc
add
add
pop
add
dec
add
push
add
inc
add
push
add
add
dec
add
dec
add
add
inc
add
dec
add
inc
add
dec
add
inc
add
push
add
dec
add
inc
add
dec
add
add
inc
add
dec
add
inc
add
dec
add
add
adc
add
and
add
add
add
add
add
rol
add
add
add
add
add
add
add
add
add
inc
add
(bad)
inc
add
add
add
(bad)
inc
inc
inc
(bad)
(bad)
inc
add
add
jo
add
pop
add
lea
ja
mov
js
or
js
add
jnp
fisttp
xchg
pop
lock
pop
ja
pop
jo
ja
ja
cmp
js
mov
jb
and
jo
pop
push
and
jo
add
and
das
jo
add
jb
and
jo
add
jb
stos
scas
jo
add
jg
(bad)
push
pop
add
or
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
rcr
add
add
add
or
add
or
adc
adc
push
push
push
add
sbb
and
and
sub
sub
push
push
push
add
dec
add
inc
add
cmp
add
jl
add
push
push
add
add
add
(bad)
mov
out
add
add
add
add
cdq
add
add
add
add
xor
add
xor
add
add
cdq
xor
add
xor
add
xor
add
data16
xor
add
add
cdq
data16
int3
data16
jmp
add
cdq
add
xor
add
cdq
cdq
add
int3
cdq
add
call
add
xor
add
data16
add
cdq
int3
add
int3
int3
add
dec
add
inc
add
inc
add
add
add
add
add
xor
cdq
add
add
add
add
add
add
xor
add
xor
add
xor
cdq
xor
add
xor
add
xor
add
xor
xor
add
xor
cdq
xor
int3
xor
jmp
add
cdq
xor
xor
xor
cdq
cdq
xor
int3
cdq
xor
call
xor
xor
xor
data16
xor
cdq
int3
xor
int3
int3
xor
dec
xor
xor
xor
push
add
push
add
push
add
add
xor
data16
data16
add
inc
data16
xor
xor
data16
data16
xor
push
data16
data16
data16
data16
data16
cdq
data16
cdq
data16
data16
cdq
data16
cdq
data16
int3
data16
int3
data16
int3
data16
int3
data16
jmp
xor
data16
jmp
inc
int3
add
add
add
cdq
cdq
add
add
add
add
add
cdq
add
xor
add
cwd
add
cwd
add
cdq
add
cwd
add
xor
add
cdq
add
cdq
cdq
add
cdq
cdq
add
int3
cdq
add
int3
cdq
add
data16
int3
cdq
add
int3
cdq
add
call
add
cdq
add
call
add
add
add
add
add
add
add
xor
add
int3
add
xor
add
xor
add
data16
add
data16
add
cdq
add
data16
add
cwd
add
cdq
int3
add
cdq
int3
add
int3
add
cdq
int3
add
cdq
int3
add
int3
int3
add
int3
int3
add
int3
add
int3
int3
add
int3
int3
add
dec
add
dec
add
cdq
add
dec
add
dec
add
add
add
inc
cdq
add
add
xor
add
xor
add
inc
cdq
xor
add
xor
add
xor
add
inc
xor
add
int3
add
inc
jmp
add
cdq
inc
xor
inc
cdq
cdq
inc
int3
cdq
inc
call
inc
xor
inc
data16
inc
cdq
int3
inc
int3
int3
inc
dec
inc
xor
inc
dec
add
(bad)
inc
jmp
add
data16
jmp
data16
jmp
add
inc
movs
add
add
pop
add
ja
xchg
xchg
add
retf
retf
add
xlat
xlat
add
fstp
add
jecxz
add
jmp
clc
clc
clc
add
sti
lock
add
add
add
(bad)
inc
add
add
add
add
add
(bad)
inc
(bad)
(bad)
inc
add
pop
add
in
(bad)
inc
(bad)
cli
add
add
add
in
pop
add
pop
pop
inc
cli
pop
pop
add
add
add
pop
add
pop
pop
pop
add
sti
sti
add
add
add
pop
add
pop
pop
sti
add
pop
pop
add
add
add
inc
in
sti
pop
sti
(bad)
inc
pop
add
add
add
inc
pop
in
sti
sti
(bad)
(bad)
inc
pop
pop
pop
add
in
inc
pop
pop
add
add
add
in
in
pop
add
in
in
add
pop
in
in
in
in
in
in
in
in
pop
add
(bad)
(bad)
in
pop
pop
in
pop
pop
pop
pop
pop
pop
pop
in
add
in
in
in
in
pop
in
outs
jp
xor
(bad)
in
add
add
in
(bad)
(bad)
in
outs
in
push
xor
in
add
add
add
in
in
outs
in
jp
xor
in
add
add
add
add
outs
jp
in
push
(bad)
in
add
add
add
add
outs
dec
dec
dec
dec
dec
(bad)
in
add
add
add
add
lock
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
and
add
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
inc
add
(bad)
inc
add
add
add
(bad)
inc
inc
inc
(bad)
(bad)
inc
add
add
add
add
ja
pop
js
fst
add
js
lock
jg
mov
cdq
nop
add
add
add
xor
clc
std
fstp
add
js
lock
js
mov
cwde
mov
add
add
jg
cmp
xchg
(bad)
add
js
lock
js
or
add
jg
cmp
xchg
add
add
js
lock
mov
jo
add
add
cmp
mov
add
add
jg
lock
fwait
mov
add
add
jg
lock
mov
add
add
add
lock
(bad)
js
mov
lock
clc
lock
mov
jg
lock
add
ja
jo
jg
lock
jg
(bad)
(bad)
push
ja
jo
mov
ja
ja
ja
ja
jo
ja
jo
mov
add
push
or
mov
ja
ja
jo
pop
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
ja
or
repnz
and
and
xchg
add
add
jo
repnz
das
xchg
add
add
(bad)
inc
repnz
mov
xor
add
add
jo
mov
das
xchg
add
add
add
pop
repnz
sti
mov
xor
xchg
add
add
add
pop
repnz
das
xchg
add
add
add
pop
repnz
sti
mov
das
xchg
add
add
add
pop
repnz
xchg
add
add
add
pop
repnz
xchg
add
add
add
pop
repnz
and
and
xchg
add
add
add
pop
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
add
ja
ja
ja
ja
add
inc
inc
clc
add
shl
shl
jg
add
jg
add
aas
rol
aas
rol
aas
rol
aas
rol
aas
rol
aas
rol
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
clc
add
(bad)
clc
add
(bad)
clc
add
(bad)
clc
add
(bad)
clc
add
(bad)
clc
add
(bad)
clc
add
(bad)
cld
add
sbb
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
add
rcr
add
add
add
or
add
or
adc
adc
push
push
push
add
sbb
and
and
sub
sub
push
push
push
add
dec
add
inc
add
cmp
add
jl
add
push
push
add
add
add
(bad)
mov
out
add
add
add
add
cdq
add
add
add
add
xor
add
xor
add
add
cdq
xor
add
xor
add
xor
add
data16
xor
add
add
cdq
data16
int3
data16
jmp
add
cdq
add
xor
add
cdq
cdq
add
int3
cdq
add
call
add
xor
add
data16
add
cdq
int3
add
int3
int3
add
dec
add
inc
add
inc
add
add
add
add
add
xor
cdq
add
add
add
add
add
add
xor
add
xor
add
xor
cdq
xor
add
xor
add
xor
add
xor
xor
add
xor
cdq
xor
int3
xor
jmp
add
cdq
xor
xor
xor
cdq
cdq
xor
int3
cdq
xor
call
xor
xor
xor
data16
xor
cdq
int3
xor
int3
int3
xor
dec
xor
xor
xor
push
add
push
add
push
add
add
xor
data16
data16
add
inc
data16
xor
xor
data16
data16
xor
push
data16
data16
data16
data16
data16
cdq
data16
cdq
data16
data16
cdq
data16
cdq
data16
int3
data16
int3
data16
int3
data16
int3
data16
jmp
xor
data16
jmp
inc
int3
add
add
add
cdq
cdq
add
add
add
add
add
cdq
add
xor
add
cwd
add
cwd
add
cdq
add
cwd
add
xor
add
cdq
add
cdq
cdq
add
cdq
cdq
add
int3
cdq
add
int3
cdq
add
data16
int3
cdq
add
int3
cdq
add
call
add
cdq
add
call
add
add
add
add
add
add
add
xor
add
int3
add
xor
add
xor
add
data16
add
data16
add
cdq
add
data16
add
cwd
add
cdq
int3
add
cdq
int3
add
int3
add
cdq
int3
add
cdq
int3
add
int3
int3
add
int3
int3
add
int3
add
int3
int3
add
int3
int3
add
dec
add
dec
add
cdq
add
dec
add
dec
add
add
add
inc
cdq
add
add
xor
add
xor
add
inc
cdq
xor
add
xor
add
xor
add
inc
xor
add
int3
add
inc
jmp
add
cdq
inc
xor
inc
cdq
cdq
inc
int3
cdq
inc
call
inc
xor
inc
data16
inc
cdq
int3
inc
int3
int3
inc
dec
inc
xor
inc
dec
add
(bad)
inc
jmp
add
data16
jmp
data16
jmp
add
inc
movs
add
add
pop
add
ja
xchg
xchg
add
retf
retf
add
xlat
xlat
add
fstp
add
jecxz
add
jmp
clc
clc
clc
add
sti
lock
add
add
add
(bad)
inc
add
add
add
add
add
(bad)
inc
(bad)
(bad)
inc
add
add
jmp
add
jmp
xor
add
add
mov
add
add
jmp
pop
xor
lahf
inc
add
in
(bad)
mov
add
jmp
pop
xor
lahf
lahf
lahf
inc
add
mov
imul
add
out
out
pop
pop
mov
lahf
repnz
add
(bad)
mov
imul
out
out
out
out
pop
mov
repnz
in
mov
imul
jmp
add
repnz
out
out
inc
in
(bad)
mov
imul
mov
add
add
in
in
in
out
out
inc
in
mov
imul
jmp
add
add
lock
in
in
inc
in
(bad)
mov
imul
repnz
lahf
pop
pop
add
out
idiv
lock
out
inc
in
(bad)
(bad)
(bad)
inc
imul
jmp
jae
out
test
in
(bad)
(bad)
(bad)
inc
in
imul
jmp
mov
inc
in
(bad)
(bad)
(bad)
inc
imul
imul
pop
push
push
jae
loope
mov
inc
pop
pop
pop
pop
pop
add
add
in
(bad)
(bad)
(bad)
inc
div
div
jmp
mov
add
add
pop
out
in
add
add
(bad)
(bad)
(bad)
inc
div
div
add
jmp
loope
mov
in
in
in
in
in
pop
pop
in
add
add
(bad)
(bad)
(bad)
inc
div
div
add
(bad)
in
in
in
in
jmp
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
in
add
add
in
in
in
in
add
div
test
in
in
in
in
in
in
in
in
in
in
in
in
out
in
add
add
jmp
div
add
out
or
in
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
in
add
in
in
in
in
in
in
in
jmp
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
in
add
add
add
add
jmp
in
inc
add
add
add
add
add
add
pop
in
in
jmp
inc
sti
jp
xor
xor
dec
dec
dec
add
pop
in
add
(bad)
(bad)
(bad)
inc
in
inc
ret
pop
jp
xor
xor
dec
dec
add
pop
in
add
in
in
in
in
in
add
add
pop
jp
xor
xor
dec
add
pop
in
add
add
inc
ret
pop
ret
pop
jp
xor
xor
add
pop
in
add
add
inc
pop
ret
pop
ret
pop
jp
xor
xor
inc
in
add
add
inc
jp
ret
pop
ret
pop
jp
xor
add
pop
in
add
add
inc
jp
pop
ret
pop
ret
pop
jp
xor
inc
in
add
add
inc
jp
jp
ret
pop
ret
sti
jp
add
pop
in
add
add
inc
add
add
add
add
add
add
pop
in
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
in
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
add
(bad)
inc
inc
clc
add
shl
shl
jg
add
jg
add
aas
rol
aas
rol
aas
rol
aas
rol
aas
rol
aas
rol
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
clc
add
(bad)
clc
add
(bad)
clc
add
(bad)
clc
add
(bad)
clc
add
(bad)
clc
add
(bad)
clc
add
(bad)
cld
add
les
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
inc
add
add
add
inc
inc
add
inc
inc
(bad)
inc
add
(bad)
inc
jo
add
add
pop
js
add
pop
add
xchg
jo
add
pop
add
js
ja
add
pop
ja
xchg
jo
add
jo
jo
mov
pop
add
add
add
ja
js
jo
jo
add
jo
add
pop
pop
pop
mov
pop
add
add
pop
pop
add
ja
xchg
add
jo
jo
add
jo
pop
ja
ja
jo
jo
add
jo
add
add
add
add
pop
add
jno
adc
jo
add
add
jo
add
add
add
jo
add
add
cdq
xchg
adc
add
add
add
jo
jo
cdq
cdq
xchg
ja
add
add
add
add
add
pop
pop
add
add
pop
ja
mov
add
add
pop
pop
jo
pop
add
and
add
adc
pop
pop
add
adc
adc
inc
push
adc
pop
add
add
add
pop
adc
push
push
pop
add
inc
add
add
add
add
add
pop
add
add
adc
xor
add
add
add
add
jno
cdq
cdq
adc
add
xchg
adc
add
adc
add
add
add
popa
(bad)
adc
sbb
adc
push
add
add
jo
add
add
add
jno
jno
add
add
add
jo
add
add
add
sbb
add
jne
ja
xchg
adc
add
add
xchg
pop
add
sbb
add
sbb
add
adc
adc
add
add
add
adc
add
add
adc
adc
adc
pop
sbb
add
cdq
cdq
xchg
xchg
xchg
pop
add
xchg
cdq
cdq
cdq
adc
add
cdq
cdq
cdq
sbb
add
add
adc
pop
cdq
mov
add
mov
add
add
add
add
pop
add
add
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
jg
inc
add
(bad)
clc
ud0
add
(bad)
jmp
pop
(bad)
inc
add
inc
add
inc
add
inc
add
cld
add
aas
inc
add
lock
ud0
add
rol
pop
inc
add
add
add
inc
add
add
add
inc
add
add
add
jg
add
add
add
jg
add
add
add
jg
add
add
add
jg
add
add
add
jg
add
add
add
aas
add
clc
add
add
aas
add
clc
add
add
aas
add
clc
add
add
aas
add
clc
add
add
aas
add
cld
add
add
jg
add
add
add
inc
add
cld
add
(bad)
inc
add
inc
ud0
add
(bad)
(bad)
clc
aas
(bad)
inc
add
(bad)
clc
aas
(bad)
inc
add
(bad)
clc
aas
(bad)
inc
add
push
aas
(bad)
inc
add
push
pop
(bad)
inc
add
jmp
ud0
add
(bad)
inc
pop
(bad)
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
ud0
add
(bad)
jmp
ud0
add
(bad)
push
aas
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
inc
add
add
add
inc
inc
add
inc
inc
(bad)
inc
add
(bad)
inc
add
pop
pop
add
add
add
js
add
xchg
pop
add
popa
js
popa
add
push
pop
js
add
jo
add
add
add
pusha
jo
js
jo
adc
jo
add
add
popa
add
push
ja
pusha
push
add
add
add
add
add
pop
sbb
add
add
add
adc
pop
jno
xchg
pop
push
add
pop
add
add
add
pop
pop
mov
pop
add
add
add
adc
adc
pop
push
push
adc
add
add
popa
cdq
adc
add
and
inc
add
add
pop
pop
xchg
xchg
push
push
adc
add
add
add
pop
xchg
adc
adc
add
push
jbe
adc
pop
jo
add
add
add
add
add
add
adc
add
adc
adc
add
xchg
xchg
xchg
pop
add
add
cdq
cdq
xchg
adc
add
add
add
add
add
add
mov
add
xchg
pop
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
clc
pop
(bad)
push
ud0
rol
inc
add
cld
add
jg
add
pop
lock
pop
lock
pop
lock
(bad)
add
pavgb
add
loopne
add
loopne
add
clc
add
jg
rol
(bad)
cld
jg
(bad)
cld
jg
(bad)
cld
jg
(bad)
clc
aas
(bad)
push
pop
(bad)
push
ud0
loopne
(bad)
jmp
ud0
lock
(bad)
push
pop
(bad)
(bad)
clc
aas
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
inc
add
add
add
inc
inc
add
inc
inc
(bad)
inc
add
(bad)
inc
add
add
add
add
add
ja
add
add
add
ja
jo
add
add
add
add
pop
pop
jns
xor
add
adc
add
add
popa
add
jo
add
add
add
add
add
add
add
add
add
add
add
add
cdq
adc
add
add
add
add
add
add
add
inc
add
aas
add
clc
pop
add
loopne
add
rol
add
add
add
add
add
pop
add
cld
jg
add
jg
add
jg
add
aas
add
cld
aas
add
cld
jg
add
inc
add
inc
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
add
add
add
or
add
movups
adc
adc
adc
adc
add
sbb
add
add
add
adc
adc
daa
add
pop
and
pop
pop
xor
or
cmp
or
cmp
add
xor
adc
add
sbb
add
and
add
and
add
daa
add
sub
add
and
add
sub
and
cmp
xor
xor
xor
cmp
add
or
dec
add
or
push
push
dec
add
or
or
dec
add
adc
adc
inc
add
sbb
add
add
add
or
or
push
add
add
add
adc
adc
pop
add
sbb
sbb
pop
add
xor
ds
add
pop
add
xor
add
add
add
add
add
outs
add
adc
adc
outs
add
add
add
add
add
add
jp
add
jle
adc
adc
jl
adc
jge
adc
sbb
jle
and
xor
add
cmp
inc
inc
inc
add
inc
add
dec
add
dec
add
push
add
pop
add
push
add
push
add
pop
add
pop
add
pusha
add
push
add
jo
gs
push
push
ins
ins
add
je
outs
outs
je
imul
jno
jno
jne
jne
jge
jge
add
add
add
test
or
test
add
mov
add
mov
unpcklps
add
add
add
fwait
add
add
add
or
add
add
add
add
add
add
add
mov
add
add
add
add
add
add
add
add
add
pop
pop
xchg
pop
pop
xchg
add
xchg
add
mov
imul
add
lods
add
scas
add
mov
add
add
retf
push
leave
add
add
add
add
int
add
rol
add
add
add
add
add
add
push
fadd
add
fiadd
add
fiadd
adc
(bad)
add
and
loopne
add
out
add
add
add
add
or
add
adc
repz
add
add
or
add
add
add
add
add
pop
inc
add
stc
add
or
add
inc
add
cld
add
cld
add
adc
add
sbb
add
in
add
sub
add
xor
add
cmp
add
and
clc
add
dec
clc
add
inc
inc
dec
push
jmp
push
std
add
stc
add
inc
ja
jecxz
popa
js
add
cli
add
cld
add
cli
add
cli
add
inc
add
add
mov
add
movs
movs
add
cmps
mov
mov
mov
mov
xchg
int3
add
xchg
inc
cwde
call
scas
mov
test
mov
cld
add
(bad)
inc
(bad)
(bad)
inc
push
sbb
add
pop
push
add
add
add
into
aam
bound
add
pop
add
pop
into
rcl
ror
bound
add
addr16
int
aam
int
push
sbb
sbb
add
add
int
aad
into
bound
sbb
add
push
add
and
pop
(bad)
int
aam
into
pop
push
sbb
or
add
pop
add
adc
push
pop
(bad)
int
aam
into
bound
pop
or
and
add
addr16
pop
sbb
push
push
pop
(bad)
int
aad
into
pop
push
sbb
adc
add
add
sbb
adc
sbb
push
push
pop
(bad)
int
aam
into
bound
pop
adc
add
add
sbb
add
adc
pop
pop
sbb
and
(bad)
int
ror
int
push
sbb
adc
add
pop
add
or
pop
pop
sbb
push
push
pop
fs
dec
jno
inc
xor
push
pop
adc
add
and
add
add
adc
sbb
push
pop
int
xchg
scas
lods
movs
xchg
je
push
sbb
add
adc
add
adc
pop
pop
sbb
pop
bound
mov
xor
push
or
or
add
addr16
or
or
or
sbb
and
pusha
ja
fadd
rol
jno
pop
aaa
and
add
add
add
or
or
or
sbb
push
push
push
push
aaa
xor
les
sbb
or
add
add
sbb
or
adc
sbb
push
push
push
sbb
push
sbb
and
push
sbb
sbb
sbb
sbb
add
add
push
add
add
add
sub
xchg
jp
daa
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
pop
add
add
add
add
daa
mov
jg
and
sbb
daa
xor
sbb
pop
sbb
sbb
sbb
sbb
sbb
sbb
add
add
adc
mov
cmps
xchg
jp
pop
pop
pop
pop
pop
sub
xor
pop
pop
pop
pop
pop
pop
or
or
or
or
add
push
sub
(bad)
retf
jbe
adc
daa
xchg
jg
or
add
or
or
bound
add
mov
push
add
add
add
xchg
jg
or
add
add
add
add
add
adc
inc
xchg
jg
or
add
add
push
add
and
outs
xchg
jg
nop
je
jg
push
add
add
jg
inc
add
add
add
mov
ds
add
xor
xor
push
aas
ins
jno
outs
ins
xor
add
inc
jp
jg
jp
outs
ins
xor
add
add
xchg
xchg
jg
jno
xor
add
add
cdq
fwait
mov
jl
ds
add
movs
cmps
cmps
cmps
movs
fwait
cdq
cmp
add
add
scas
lods
mov
scas
movs
fwait
xchg
jl
pop
add
add
mov
mov
add
add
mov
xor
dec
mov
fcmovnb
mov
add
add
mov
ins
mov
add
add
dec
add
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
jg
inc
add
(bad)
clc
ud0
add
(bad)
jmp
pop
(bad)
inc
add
inc
add
inc
add
inc
add
cld
add
aas
inc
add
lock
ud0
add
rol
pop
inc
add
add
add
inc
add
add
add
inc
add
add
add
jg
add
add
add
jg
add
add
add
jg
add
add
add
jg
add
add
add
jg
add
add
add
aas
add
clc
add
add
aas
add
clc
add
add
aas
add
clc
add
add
aas
add
clc
add
add
aas
add
cld
add
add
jg
add
add
add
inc
add
cld
add
(bad)
inc
add
inc
ud0
add
(bad)
(bad)
clc
aas
(bad)
inc
add
(bad)
clc
aas
(bad)
inc
add
(bad)
clc
aas
(bad)
inc
add
push
aas
(bad)
inc
add
push
pop
(bad)
inc
add
jmp
ud0
add
(bad)
inc
pop
(bad)
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
ud0
add
(bad)
jmp
ud0
add
(bad)
push
aas
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
inc
add
add
add
add
add
or
add
add
add
add
add
add
add
add
add
add
pop
pop
add
or
add
or
or
movhps
adc
adc
adc
adc
adc
pop
add
sbb
add
pop
and
adc
sub
pop
pop
xor
sbb
add
sbb
add
sub
add
cs
daa
xor
and
xor
add
cmp
add
ds
push
dec
add
push
inc
add
adc
sbb
push
add
pop
pop
add
sbb
cs
add
and
pop
pop
arpl
add
add
or
add
outs
add
adc
add
jo
add
ja
add
jp
add
jge
pop
or
cs
cmp
arpl
and
jns
xor
ja
inc
inc
inc
add
inc
add
dec
add
dec
add
push
add
push
add
add
push
pop
pop
pusha
add
push
add
pusha
add
add
push
add
jp
jo
jo
jne
jne
jge
jge
add
test
add
mov
add
mov
add
xchg
add
add
add
add
add
sub
mov
add
or
add
add
add
add
add
or
add
add
mov
add
add
xchg
add
cwde
add
fwait
add
add
jg
add
nop
add
cwde
add
mov
add
add
retf
add
add
into
add
push
retf
add
add
add
push
rol
add
fld
add
fild
add
jmp
add
add
add
or
add
add
add
add
add
or
add
pop
stc
add
or
add
adc
add
adc
inc
or
xor
add
sub
std
add
push
repnz
pop
stc
add
lds
pop
pop
aad
inc
dec
inc
pop
pop
inc
mov
lea
add
mov
mov
mov
add
add
mov
repz
add
add
(bad)
inc
add
sbb
or
adc
test
add
sbb
xor
xchg
add
add
cmp
adc
xor
mov
push
or
add
inc
or
adc
sbb
inc
sbb
adc
push
add
adc
adc
adc
sbb
inc
xchg
or
push
push
add
inc
add
or
or
adc
sbb
cmp
adc
or
push
add
add
push
or
adc
adc
sbb
cmp
pop
sbb
or
push
add
add
push
or
adc
adc
xor
js
sub
push
add
add
add
add
add
add
or
adc
adc
xor
mov
adc
add
add
add
add
add
add
or
sbb
pop
push
adc
adc
adc
sbb
sbb
adc
add
adc
add
add
add
sbb
dec
jne
addr16
movups
adc
adc
adc
adc
adc
adc
adc
push
add
add
add
add
or
test
push
sbb
adc
daa
pop
sbb
adc
adc
adc
or
add
add
mov
add
pop
and
push
push
push
add
adc
add
add
add
sbb
push
pop
inc
add
inc
add
sub
das
sub
and
add
xor
dec
dec
sub
add
push
push
sub
add
pop
ins
outs
outs
outs
imul
add
add
jne
jne
imul
add
add
mov
dec
add
lea
xor
add
pop
push
pop
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
clc
pop
(bad)
push
ud0
rol
inc
add
cld
add
jg
add
pop
lock
pop
lock
pop
lock
(bad)
add
pavgb
add
loopne
add
loopne
add
clc
add
jg
rol
(bad)
cld
jg
(bad)
cld
jg
(bad)
cld
jg
(bad)
clc
aas
(bad)
push
pop
(bad)
push
ud0
loopne
(bad)
jmp
ud0
lock
(bad)
push
pop
(bad)
(bad)
clc
aas
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
dec
add
adc
add
and
add
add
or
add
add
add
add
add
add
add
add
add
add
or
or
(bad)
(bad)
lldt
adc
add
push
push
add
sbb
add
sbb
adc
adc
add
cmp
and
and
es
daa
add
sub
add
and
add
cmp
xor
xor
xor
xor
aas
aas
aas
add
or
or
sub
das
xor
sub
je
inc
inc
inc
add
push
add
pop
add
pop
add
add
bound
gs
imul
ins
ins
add
add
add
xor
add
or
add
add
add
cmp
sub
add
add
mov
pusha
data16
add
aam
add
fld
sub
(bad)
add
cmp
in
adc
hlt
add
inc
cli
add
loopne
bound
mov
mov
add
(bad)
inc
add
and
sbb
add
add
sbb
adc
adc
nop
adc
add
add
add
add
push
or
sbb
adc
add
and
add
add
push
or
push
cmp
sldt
add
or
push
(bad)
(bad)
adc
ud2
push
add
add
add
cmp
push
add
sbb
and
pop
add
sub
add
and
add
xor
sbb
add
add
cmp
and
xor
add
add
inc
add
aas
add
clc
pop
add
loopne
add
rol
add
add
add
add
add
pop
add
cld
jg
add
jg
add
jg
add
aas
add
cld
aas
add
cld
jg
add
inc
add
inc
add
pop
add
add
add
add
add
and
add
add
and
add
add
add
add
add
add
add
add
add
add
add
add
jge
add
add
add
xor
add
pop
add
add
add
add
or
fisttp
or
sti
(bad)
(bad)
paddd
push
push
dec
or
sti
add
add
add
add
add
add
add
add
add
add
or
retf
or
inc
mov
jmp
ins
ins
jmp
and
inc
push
push
stc
add
add
add
add
add
or
add
add
add
add
or
or
and
and
pop
pop
pop
dec
mov
mov
dec
push
push
xor
dec
or
inc
add
cdq
add
add
add
add
add
add
add
add
pop
pop
pop
(bad)
or
or
adc
ss
push
jmp
outs
inc
mov
mov
dec
push
inc
jmp
adc
inc
add
aam
add
imul
add
add
add
add
or
loope
adc
(bad)
and
and
ss
call
push
jmp
outs
inc
mov
mov
dec
push
inc
jmp
cs
es
sbb
dec
or
inc
add
add
add
add
add
add
add
add
add
or
retf
adc
adc
sbb
sbb
sub
sub
cs
xor
inc
inc
inc
call
push
jmp
outs
inc
mov
mov
dec
push
inc
jmp
cs
es
pop
pop
call
sbb
adc
adc
add
add
add
add
add
add
add
add
add
add
add
add
or
mov
adc
stc
push
push
push
jmp
and
jmp
es
sub
jmp
cs
xor
inc
inc
inc
call
push
jmp
outs
inc
mov
mov
dec
push
inc
jmp
cs
es
pop
pop
call
sbb
sbb
sbb
adc
adc
or
or
add
add
add
add
add
add
add
push
add
add
or
or
adc
adc
sbb
sbb
and
and
and
and
and
sub
jmp
cs
xor
inc
inc
inc
call
push
jmp
outs
inc
mov
mov
dec
push
inc
jmp
cs
es
pop
pop
call
sbb
sbb
sbb
push
push
push
call
adc
dec
or
add
add
add
add
add
add
add
add
or
or
adc
loopne
adc
(bad)
pop
pop
pop
call
sbb
pop
pop
pop
jmp
and
jmp
and
jmp
sub
jmp
cs
xor
inc
inc
inc
call
push
jmp
outs
inc
mov
mov
dec
push
inc
jmp
cs
es
pop
pop
call
sbb
sbb
sbb
push
push
push
call
adc
call
adc
dec
or
add
add
std
add
add
add
add
add
add
add
add
or
add
adc
adc
sbb
sbb
sbb
sbb
sbb
pop
pop
jmp
and
jmp
and
jmp
sub
jmp
cs
xor
inc
inc
inc
call
push
jmp
outs
inc
mov
mov
xchg
xchg
mov
jmp
inc
inc
jmp
cs
es
pop
pop
call
sbb
sbb
sbb
push
push
push
call
adc
call
adc
dec
or
inc
add
inc
add
mov
push
push
push
adc
adc
icebp
push
push
push
call
sbb
call
sbb
call
pop
pop
jmp
and
jmp
and
jmp
sub
jmp
cs
xor
inc
inc
inc
call
jmp
je
inc
inc
jo
adc
jl
add
xchg
inc
add
call
sbb
xor
inc
jmp
cs
es
pop
pop
call
sbb
sbb
sbb
push
push
push
call
adc
call
adc
dec
or
inc
pop
pop
inc
add
inc
add
lds
add
adc
add
add
push
push
cmp
adc
sti
push
push
push
call
sbb
call
sbb
call
pop
pop
jmp
and
jmp
and
jmp
sub
jmp
cs
xor
push
push
push
inc
and
into
inc
or
inc
or
inc
or
inc
add
sahf
inc
add
inc
inc
push
jmp
sub
call
pop
pop
call
sbb
sbb
sbb
push
push
push
call
adc
call
adc
dec
or
inc
pop
pop
inc
add
inc
add
loope
add
add
add
adc
adc
adc
(bad)
push
push
push
call
sbb
call
sbb
call
pop
pop
jmp
and
jmp
and
jmp
sub
push
aaa
aaa
call
pop
jmp
outs
jmp
je
adc
mov
dec
or
inc
or
inc
or
inc
add
inc
add
jmp
(bad)
cmp
cmp
sbb
sbb
call
push
push
call
adc
call
adc
dec
or
inc
pop
pop
inc
add
inc
add
repz
add
add
add
adc
xchg
adc
adc
push
push
push
call
sbb
call
sbb
call
pop
pop
jmp
and
jmp
and
jmp
sub
push
xor
(bad)
cmp
dec
dec
jmp
jmp
push
cs
cmp
mov
(bad)
call
(bad)
dec
dec
jmp
and
xchg
push
xor
push
push
(bad)
aas
aas
aas
push
aaa
aaa
jmp
and
push
push
push
call
adc
call
adc
dec
or
inc
push
push
inc
add
inc
add
sti
add
add
add
add
or
adc
adc
adc
adc
push
push
push
call
sbb
call
sbb
call
sbb
pop
pop
pop
jmp
es
das
das
push
xor
inc
inc
dec
dec
inc
inc
inc
inc
jmp
inc
cmp
mov
idiv
movs
cmps
cli
push
jecxz
sub
mov
(bad)
ds
inc
inc
inc
inc
push
xor
push
xor
jmp
sub
push
push
push
call
adc
dec
or
inc
push
push
inc
add
inc
add
inc
add
xchg
add
add
or
or
adc
adc
adc
adc
push
push
push
call
sbb
call
daa
call
adc
call
adc
call
sbb
jmp
sub
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
sub
xor
sbb
aas
dec
cmovbe
(bad)
cmovs
adc
inc
jmp
and
push
xor
push
xor
push
xor
push
xor
jmp
das
das
jmp
sub
jmp
sub
jmp
sub
sub
sub
sbb
sbb
or
or
push
push
push
inc
add
inc
add
inc
add
mov
add
or
push
push
push
sub
adc
sti
adc
adc
adc
sbb
inc
add
add
leave
inc
add
inc
add
or
dec
jmp
daa
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
and
call
adc
inc
add
add
add
add
add
add
add
adc
adc
adc
(bad)
sbb
or
add
inc
or
inc
or
inc
push
fdivr
add
inc
add
jmp
and
and
jmp
es
xor
or
dec
dec
dec
call
inc
jmp
and
and
jmp
and
and
jmp
es
daa
daa
jmp
sub
jmp
daa
daa
jmp
and
and
push
push
dec
or
inc
add
jmp
add
xor
add
add
adc
aas
adc
adc
sbb
sbb
adc
pusha
(bad)
(bad)
ds
(bad)
call
sbb
dec
adc
int
add
cmps
inc
push
jmp
and
jmp
and
jmp
and
jmp
and
call
adc
add
inc
add
inc
and
jmp
and
jmp
and
jmp
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
sbb
sbb
push
push
push
inc
pop
pop
inc
add
leave
add
add
adc
adc
adc
adc
adc
mov
xchg
xchg
int3
inc
(bad)
(bad)
call
cmp
dec
jmp
or
call
sbb
call
pop
pop
jmp
and
es
es
push
(bad)
inc
add
inc
add
and
daa
jmp
es
and
call
sbb
sbb
sbb
sbb
sbb
pop
pop
pop
call
pop
pop
call
adc
(bad)
(bad)
ud0
or
inc
add
add
add
add
add
add
add
or
add
aas
aas
cmp
jo
push
mov
call
pop
xor
(bad)
movups
(bad)
(bad)
ud0
(bad)
ud0
(bad)
ud0
adc
call
adc
pop
or
add
into
inc
add
inc
add
adc
and
adc
adc
(bad)
(bad)
ud0
(bad)
ud0
pi2fd
or
or
or
or
add
add
lock
add
add
add
add
add
add
add
add
dec
or
add
dec
push
pop
pop
xor
adc
push
push
push
mov
push
push
push
test
or
inc
pop
pop
cld
add
outs
std
add
iret
inc
add
inc
add
dec
or
dec
or
inc
pop
pop
inc
push
push
sti
add
add
mov
add
ja
add
inc
add
add
add
add
or
or
or
or
or
or
or
or
adc
add
mov
add
iret
inc
add
inc
add
clc
pop
pop
pop
rol
pop
pop
fwait
add
add
sub
add
or
or
or
add
add
inc
add
inc
add
mov
add
add
iret
inc
add
inc
add
jmp
add
add
add
add
(bad)
push
iret
inc
add
inc
add
inc
add
add
push
mov
add
jle
add
jo
add
jo
add
arpl
add
inc
dec
add
or
add
push
inc
add
inc
jecxz
add
add
inc
add
add
pop
inc
add
add
and
add
add
add
sub
add
add
xchg
add
xchg
inc
add
inc
add
inc
add
add
sub
add
add
add
sub
add
fs
add
mov
inc
add
inc
add
inc
add
inc
add
add
and
add
dec
cmps
add
mov
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
add
add
add
add
add
ins
jmp
fcos
add
loopne
add
loop
add
loopne
add
fcos
add
iret
inc
add
inc
add
add
pop
xchg
add
add
add
push
sub
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
add
jp
add
and
or
add
add
xchg
add
out
inc
add
inc
cld
inc
paddb
add
sti
inc
add
inc
add
inc
add
inc
add
inc
add
test
add
pop
adc
add
add
idiv
add
cmp
inc
stc
jmp
ds
inc
add
inc
add
inc
add
inc
add
inc
add
jns
add
add
add
add
dec
cmp
mov
cmp
cvtpi2ps
inc
add
jmp
add
xlat
inc
add
in
add
or
add
add
jae
or
in
jmp
cli
jmp
jl
dec
daa
stc
inc
add
inc
add
inc
add
inc
add
add
daa
jg
add
add
add
add
(bad)
jmp
dec
clc
call
xor
inc
cld
inc
add
inc
add
inc
add
add
aaa
xchg
add
adc
add
pop
sub
add
add
jns
add
cwde
sti
add
call
add
add
xor
add
add
add
add
push
sbb
add
add
dec
dec
add
inc
sub
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
cld
aas
(bad)
inc
add
push
ud0
add
(bad)
jmp
add
inc
add
inc
add
inc
add
add
(bad)
clc
add
aas
inc
add
lock
ud0
add
rol
add
add
inc
add
add
add
inc
add
add
add
add
add
aas
add
clc
add
add
aas
add
clc
add
add
aas
add
clc
add
add
aas
add
clc
add
add
aas
add
clc
add
add
aas
add
lock
add
pop
add
lock
add
pop
add
lock
add
pop
add
lock
add
pop
add
lock
add
pop
add
lock
add
aas
add
inc
add
add
add
inc
add
(bad)
inc
add
inc
add
jmp
pop
(bad)
inc
add
push
pop
(bad)
inc
add
push
pop
(bad)
inc
add
push
pop
(bad)
inc
add
inc
pop
(bad)
inc
add
inc
pop
(bad)
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
pop
(bad)
inc
add
jmp
ud0
add
(bad)
push
aas
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
inc
add
add
and
add
inc
add
add
add
add
add
add
add
sbb
add
push
add
add
add
sub
add
add
add
adc
adc
out
cmp
cmp
xor
or
out
add
add
add
add
add
add
or
or
cmp
cmp
mov
mov
cmps
cmps
cmps
jmp
addr16
sbb
sbb
add
add
add
add
add
or
add
add
add
inc
or
or
sbb
sbb
inc
inc
inc
jmp
push
push
movs
movs
push
jo
inc
inc
inc
call
pop
pop
dec
or
clc
add
add
add
add
add
add
or
or
and
xor
inc
inc
jmp
push
push
movs
movs
push
jo
aas
aas
aas
jmp
sub
(bad)
push
push
push
dec
(bad)
paddd
add
out
add
jne
add
adc
add
add
add
adc
or
xchg
adc
icebp
sbb
sbb
and
sub
push
xor
inc
inc
jmp
push
push
movs
movs
push
jo
aas
aas
aas
jmp
sub
call
push
push
call
sbb
call
adc
inc
push
push
cld
add
add
add
add
add
add
add
add
pop
pop
push
adc
adc
push
push
push
(bad)
push
push
push
(bad)
and
and
and
sub
push
xor
inc
inc
jmp
push
push
movs
movs
push
jo
aas
aas
aas
jmp
sub
(bad)
push
push
push
call
sbb
(bad)
adc
adc
dec
or
inc
add
repnz
add
pop
pop
pop
add
pop
pop
pop
call
sbb
call
push
push
jmp
and
jmp
sub
push
xor
inc
inc
jmp
addr16
jg
mov
jo
nop
jmp
cmp
push
push
jmp
sub
call
push
push
call
sbb
call
adc
dec
or
pop
pop
pop
inc
add
cmc
add
add
or
or
adc
adc
sbb
sbb
sbb
sbb
push
push
push
(bad)
and
and
and
sub
push
xor
(bad)
push
push
push
call
jbe
add
mov
add
jmp
add
sar
add
xchg
(bad)
sbb
push
push
xor
(bad)
push
push
push
call
sbb
(bad)
adc
adc
dec
or
pop
pop
pop
inc
add
std
add
add
add
(bad)
(bad)
cmovl
adc
sbb
sbb
sbb
sbb
push
push
push
jmp
and
jmp
xor
dec
dec
push
jae
xor
(bad)
inc
(bad)
call
push
(bad)
call
adc
retf
inc
add
pop
pop
pusha
(bad)
cmp
cmp
sbb
sbb
adc
adc
dec
or
pop
pop
pop
inc
add
inc
add
add
add
add
(bad)
(bad)
adc
adc
sbb
sbb
sbb
sbb
push
push
push
(bad)
and
sub
xor
dec
dec
jmp
cs
inc
test
stc
inc
(bad)
pop
pop
dec
dec
(bad)
cmp
cmp
xor
xor
and
and
adc
adc
or
or
pop
pop
pop
inc
add
inc
add
scas
add
add
adc
adc
adc
dec
popa
call
adc
and
xor
jmp
das
das
jmp
das
das
jmp
das
das
jmp
daa
xor
sbb
cmp
sbb
notrack
and
jmp
das
das
jmp
das
das
jmp
das
das
jmp
sub
sub
sub
sub
sub
sbb
sbb
or
or
add
add
add
add
add
add
adc
adc
pop
pop
and
add
cwde
inc
pop
stc
inc
or
inc
add
test
sbb
jmp
daa
daa
(bad)
daa
daa
daa
jmp
daa
daa
(bad)
sbb
push
inc
(bad)
pop
pop
xor
daa
daa
daa
(bad)
daa
daa
daa
jmp
daa
daa
(bad)
daa
daa
daa
jmp
daa
daa
(bad)
daa
daa
daa
jmp
sub
(bad)
daa
daa
daa
jmp
and
(bad)
adc
adc
add
add
add
add
adc
adc
pop
pop
aad
pop
pop
(bad)
jmp
std
jmp
sub
mov
(bad)
cmovo
and
and
and
or
inc
add
dec
jmp
and
jmp
and
and
and
and
pop
pop
pop
call
push
push
call
sbb
call
adc
or
or
add
add
or
or
adc
adc
sbb
pop
lahf
js
mov
add
call
adc
(bad)
(bad)
call
adc
(bad)
adc
sbb
inc
or
add
arpl
sbb
sbb
adc
adc
adc
adc
(bad)
pi2fd
or
or
add
add
add
add
add
add
add
add
add
adc
add
or
pop
xor
push
push
push
pushf
or
or
stc
or
or
add
inc
add
ja
or
or
pop
pop
pop
cmc
push
push
push
int3
add
add
add
add
add
and
add
add
add
add
pop
pop
add
or
sbb
or
add
inc
add
pusha
add
add
add
add
add
inc
aas
add
mov
inc
add
add
add
inc
add
inc
add
add
pop
sub
add
add
jo
add
outs
inc
add
add
fild
add
add
add
adc
add
mov
inc
add
inc
add
add
add
add
add
inc
jg
add
inc
add
inc
add
inc
add
inc
add
add
sbb
add
add
add
(bad)
add
in
inc
add
inc
add
inc
add
inc
add
inc
add
mov
add
add
jne
add
hlt
inc
adc
dec
or
inc
add
inc
add
inc
add
mov
add
pop
jp
or
(bad)
aas
pop
stc
(bad)
xchg
mov
stc
inc
add
inc
add
inc
add
js
add
add
adc
push
repnz
xor
inc
add
inc
add
inc
add
add
or
add
push
sbb
add
stos
test
add
mov
add
inc
sbb
add
push
(bad)
(bad)
(bad)
(bad)
(bad)
cld
pop
(bad)
push
ud0
rol
inc
add
inc
add
add
pop
lock
pavgb
add
loopne
add
loopne
add
loopne
add
loopne
add
loopne
add
loopne
add
loopne
add
cld
add
(bad)
jmp
ud0
clc
aas
(bad)
(bad)
clc
aas
(bad)
push
pop
(bad)
jmp
ud0
loopne
(bad)
jmp
pop
(bad)
jmp
pop
(bad)
jmp
ud0
loopne
(bad)
push
pop
(bad)
(bad)
cld
jg
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
adc
push
push
push
cli
or
or
add
add
or
or
pop
pop
lock
push
push
jmp
mov
dec
push
push
call
add
add
add
add
push
push
push
adc
adc
and
and
cs
pop
jmp
mov
call
sbb
(bad)
(bad)
paddd
add
mov
add
add
adc
sbb
and
cs
pop
(bad)
cmp
xor
sbb
sbb
adc
adc
or
or
add
add
or
or
push
push
push
(bad)
sbb
es
aas
aas
aas
dec
jmp
jmp
xor
das
das
das
call
pop
pop
dec
or
inc
add
retf
or
or
adc
inc
or
daa
daa
jmp
sub
call
and
jmp
sub
jmp
sub
jmp
sub
call
sbb
inc
add
or
add
add
add
add
or
sub
daa
pop
mov
(bad)
loopne
sub
call
push
push
inc
adc
sbb
pop
pop
pop
call
adc
test
mov
add
add
add
add
push
push
or
or
or
or
popf
add
inc
add
add
add
cmp
add
or
add
add
inc
add
add
or
add
mov
add
ins
test
add
dec
add
aam
add
(bad)
add
mov
(bad)
add
add
add
inc
dec
adc
hlt
(bad)
das
inc
cli
inc
add
inc
add
add
add
add
sbb
pop
lea
add
lods
in
add
cmp
add
adc
add
add
(bad)
jg
add
pop
add
loopne
add
rol
add
add
add
add
add
sldt
cld
jg
add
aas
add
clc
pop
add
clc
pop
add
clc
aas
add
(bad)
jg
add
inc
add
xchg
add
add
add
add
xor
add
add
push
add
and
add
add
call
add
adc
add
add
sub
add
pop
add
xor
add
add
add
add
and
add
add
add
add
adc
add
add
add
add
or
xor
add
add
and
test
add
or
and
add
add
and
test
add
or
adc
add
add
and
push
add
js
ins
and
jb
imul
xor
and
arpl
imul
inc
sub
je
outs
fs
ins
outs
outs
gs
and
ds
jae
ins
bound
js
ins
outs
jae
and
outs
cmp
push
sub
outs
jae
data16
arpl
cmp
ins
cs
and
ins
popa
outs
imul
jb
imul
xor
ds
jae
ins
bound
fs
je
je
or
and
ins
gs
popa
ins
outs
outs
gs
push
dec
outs
jae
popa
ins
ins
gs
or
and
outs
arpl
jae
jb
jb
push
je
jb
cmp
or
and
and
jb
imul
xor
xor
xor
or
and
gs
xor
and
ds
jae
jb
jo
imul
jae
and
jae
popa
ins
ins
gs
das
fs
jb
jo
imul
fs
outs
fs
arpl
or
and
gs
outs
fs
je
jae
gs
bound
or
and
and
and
jae
gs
bound
fs
je
je
or
and
and
and
and
and
gs
xor
and
and
and
and
and
and
ins
gs
jb
jae
data16
push
imul
inc
outs
ins
ins
outs
outs
sub
jb
ins
jae
or
and
and
and
and
and
jb
imul
xor
xor
xor
or
and
and
and
and
and
outs
arpl
jae
jb
jb
push
je
jb
cmp
or
and
and
and
and
and
and
bound
dec
gs
outs
imul
and
xor
xor
xor
arpl
xor
or
and
and
and
and
and
addr16
addr16
ds
and
fs
outs
fs
je
jae
gs
bound
or
gs
outs
fs
arpl
or
jne
je
outs
outs
and
ins
outs
jae
and
outs
cmp
push
sub
outs
jae
data16
arpl
cmp
ins
cs
and
or
and
arpl
imul
and
and
and
cmp
gs
gs
gs
jb
jbe
ins
gs
or
and
and
and
and
and
gs
gs
gs
js
arpl
imul
ins
and
gs
cmp
jne
jb
inc
fs
imul
je
jb
and
inc
arpl
jae
cmp
jae
and
ds
and
and
and
jb
jno
gs
gs
jb
jbe
ins
gs
or
and
jae
arpl
imul
je
jne
je
outs
outs
ds
jae
gs
bound
push
or
add
add
add
aas
pop
add
inc
pop
add
aas
pop
add
inc
pop
add
aas
pop
add
inc
pop
add
aas
pop
add
pop
add
aas
pop
add
pop
add
aas
pop
add
add
aas
pop
add
pop
add
inc
pop
add
pop
add
inc
pop
add
add
add
add
add
add
rol
add
add
enter
add
add
(bad)
inc
pop
add
add
add
inc
pop
add
add
add
inc
pop
add
add
add
inc
pop
add
add
add
push
dec
inc
dec
xor
cs
dec
dec
add
jbe
jo
xor
cs
ins
add
ins
arpl
xor
fs
ins
add
imul
ins
add
xor
cs
ins
add
gs
jne
xor
cs
ins
add
gs
ins
xor
cs
ins
add
gs
xor
fs
ins
add
jb
imul
add
dec
outs
popa
fs
imul
add
inc
gs
jb
arpl
fs
jae
add
inc
js
je
jb
arpl
jae
add
push
gs
ins
outs
jae
dec
gs
add
dec
outs
imul
inc
outs
outs
je
outs
ins
jae
add
je
ins
je
add
dec
outs
imul
add
dec
outs
popa
fs
jns
gs
imul
gs
ins
inc
js
arpl
gs
add
add
je
inc
add
add
jb
jne
jb
push
popa
ins
jne
inc
rcr
retf
lea
mov
mov
lea
lea
lea
(bad)
lea
lea
(bad)
lea
lea
lods
(bad)
std
(bad)
call
std
mov
int
lea
lea
lods
(bad)
std
(bad)
call
std
mov
lea
mov
lods
(bad)
std
(bad)
call
std
shl
in
call
jmp
retf
lea
test
clc
std
shl
in
call
call
pop
lea
mov
lods
(bad)
std
(bad)
call
std
shl
in
call
jmp
in
(bad)
fld
lea
dec
(bad)
lea
lods
(bad)
std
(bad)
call
std
shl
in
call
jecxz
jmp
lea
mov
cmp
lods
(bad)
std
(bad)
call
std
shl
in
call
(bad)
sti
call
(bad)
leave
aam
lea
lods
(bad)
std
(bad)
call
std
shl
in
call
in
in
lea
and
lea
lods
(bad)
std
(bad)
call
std
shl
in
call
call
cmps
lea
mov
lea
call
clc
jecxz
in
jecxz
call
std
lea
lea
mov
lea
call
out
in
jecxz
call
std
lea
lea
mov
lea
call
cli
in
stc
call
out
out
loopne
lea
lea
mov
lea
call
clc
jecxz
in
stc
call
out
out
loopne
lea
or
mov
std
(bad)
call
std
shr
clc
stc
stc
sar
in
jmp
mov
mov
sbb
aaa
mov
std
(bad)
call
std
shr
clc
stc
stc
shr
in
jecxz
call
std
lea
adc
aaa
mov
std
(bad)
call
std
shr
clc
stc
stc
shl
jecxz
mov
mov
sub
aaa
mov
std
(bad)
call
std
shr
clc
stc
stc
sar
clc
call
lea
lea
mov
lea
call
in
loop
mov
lea
dec
test
jnp
lods
(bad)
std
(bad)
call
std
shr
loopne
jecxz
stc
in
loope
mov
(bad)
jmp
xchg
jecxz
lods
(bad)
std
loope
jmp
into
clc
(bad)
stc
loop
fadd
mov
lea
popf
lea
lods
(bad)
std
loope
jmp
jmp
out
clc
(bad)
mov
lea
xor
lea
lods
(bad)
std
loope
jmp
fsubrp
(bad)
sti
in
call
loope
pop
pop
lea
mov
lods
(bad)
std
in
out
out
jmp
(bad)
(bad)
jmp
mov
jmp
(bad)
loope
jecxz
clc
in
jmp
lea
hlt
cwde
lea
lods
(bad)
loopne
in
jmp
test
jge
lea
sbb
fimul
(bad)
loop
xchg
inc
dec
xchg
add
icebp
aam
and
mov
popa
imul
adc
out
sbb
movs
push
lods
inc
pop
cmp
loop
or
push
xchg
jmp
(bad)
mov
leave
lea
lea
jecxz
push
xor
xchg
pop
movs
cli
jbe
ds
(bad)
sti
adc
inc
lock
dec
enter
pop
and
hlt
pop
mov
shr
pop
rcl
jp
push
outs
adc
xor
mov
cmps
sub
jmp
cmp
hlt
cli
fcomp
hlt
clc
cmps
jae
jo
xor
lea
rcr
xchg
mov
jp
push
ss
push
xor
jmp
sbb
push
test
cmp
xchg
and
sub
popf
sub
scas
(bad)
int
(bad)
cli
sub
adc
cmp
mov
lahf
pop
iret
(bad)
inc
sbb
sbb
mov
cmps
lahf
push
mov
fwait
lahf
push
inc
inc
push
and
test
or
neg
fistp
fs
adc
mul
lahf
and
jb
mov
cmp
jg
neg
inc
mov
sar
test
sar
cmp
sbb
movsx
pop
dec
mov
call
ins
sub
sub
or
and
fsub
dec
xor
and
cmps
fwait
inc
xor
and
fwait
inc
xor
and
cmps
fwait
inc
xor
and
cwde
inc
push
aam
fwait
push
rol
mov
call
out
sbb
jmp
into
or
fsubr
inc
jmp
test
add
mov
ficom
(bad)
and
mov
test
or
aam
ficom
adc
push
cli
mov
xchg
xchg
adc
fmul
outs
xor
jecxz
aaa
nop
and
cmc
inc
mov
out
push
arpl
dec
imul
dec
shl
jnp
in
push
pop
cmps
stc
mov
xchg
adc
pop
xor
(bad)
movs
fcmovnu
out
adc
push
jo
out
sub
sub
add
jg
clc
jle
and
out
fstp
mov
mov
bound
(bad)
das
jle
gs
xor
(bad)
fcomp
hlt
add
shl
inc
cld
fimul
jecxz
inc
shl
cs
ja
pop
xchg
shr
cli
repz
lock
daa
(bad)
jecxz
and
test
aaa
jle
pop
aad
dec
mov
shr
mov
outs
cld
cli
jge
xchg
and
sub
fdivr
jge
stc
mov
xor
mov
es
xor
not
mov
fdiv
je
out
sahf
push
jg
movs
mov
adc
loop
push
data16
call
mov
daa
xor
leave
cmps
pusha
add
pop
and
pop
rcl
adc
rol
ficomp
shl
mov
mov
xor
jecxz
and
push
cmps
mov
pop
jecxz
adc
add
nop
into
bound
cmp
and
call
inc
jns
xchg
ficomp
in
fisubr
(bad)
push
mov
pop
push
fs
stos
dec
es
mov
push
jl
loop
inc
cmp
and
jmp
mov
cmp
xor
ins
mov
call
mov
je
pusha
cmp
arpl
sub
ins
or
arpl
push
repz
sub
inc
repz
sbb
push
aas
jg
sar
pop
pop
xchg
add
xchg
pusha
hlt
adc
repnz
jnp
fwait
je
fsub
xor
mov
xor
pop
repnz
and
repz
xor
popf
inc
sbb
icebp
adc
shr
jmp
push
popa
xor
sub
bound
sbb
adc
sub
ss
shl
daa
and
lahf
(bad)
popa
into
or
mov
aad
clc
xor
add
mov
adc
rcr
rep
add
ret
fsubr
mov
js
rcl
addr16
mov
fdivr
push
sbb
inc
ficomp
dec
inc
nop
rol
aad
dec
xchg
repz
inc
cmp
lock
mov
(bad)
rcr
jg
xchg
mul
retf
retf
pop
mov
push
adc
xlat
retf
mov
stos
and
inc
push
(bad)
inc
ret
jae
mov
inc
mov
imul
shl
sahf
ret
sbb
leave
or
ret
adc
adc
jb
in
lods
pop
cmp
xor
movs
adc
mov
pushf
and
jl
jl
and
sub
gs
mov
stos
cmp
andnps
mov
sub
jge
inc
loope
mov
push
pop
inc
fisub
adc
dec
or
stos
add
test
add
lods
loop
push
outs
movs
mov
inc
push
(bad)
(bad)
jle
lea
fisttp
js
push
ins
(bad)
arpl
xchg
push
ins
cld
arpl
jmp
push
mov
stc
(bad)
jns
sbb
xchg
jmp
cmp
dec
leave
mul
cdq
and
jmp
xor
(bad)
cmp
mov
xchg
es
test
pop
sbb
lds
jge
and
inc
mov
ror
clc
add
loope
pop
int3
push
cmp
push
pop
pusha
pop
inc
and
mov
jmp
cmp
mov
jg
xchg
imul
inc
and
out
popf
adc
mov
mov
pusha
cmp
mov
xchg
enter
nop
cli
push
dec
jno
or
clc
rcl
and
(bad)
inc
bound
xchg
fnstsw
cwde
sub
xchg
in
in
xchg
mov
mov
sbb
cmc
mov
cli
lds
xor
sar
or
loop
sbb
cmps
sub
(bad)
push
clc
scas
or
icebp
fsubrp
mov
pop
out
das
xchg
leave
ss
xchg
retf
xor
cs
or
sahf
scas
mov
or
sbb
xlat
xor
sub
stos
push
enter
mov
xchg
loopne
sbb
dec
(bad)
mov
mov
inc
retf
sub
call
loope
in
movs
stc
sbb
add
jmp
popf
jnp
mov
mov
ins
(bad)
call
sub
pavgb
loopne
xor
aad
call
mov
out
call
or
push
stos
pop
pusha
(bad)
or
jp
popf
ss
jecxz
pop
retf
and
or
push
or
adc
dec
push
xor
mov
push
cmp
in
dec
and
in
adc
rcr
rol
fsub
out
or
sbb
out
out
xor
aam
test
xor
sti
call
push
adc
sub
cmp
dec
ins
sbb
imul
ss
ret
mov
add
mov
adc
xchg
cmp
dec
mov
or
les
shl
sub
xchg
mov
jo
aam
mov
jo
(bad)
call
cmp
push
add
out
xchg
mov
mov
xchg
push
dec
jo
js
and
mov
scas
ins
ret
iret
mov
xor
mov
enter
aam
cmp
call
push
stos
add
jae
repz
xchg
and
into
arpl
ficomp
pusha
call
dec
pop
dec
(bad)
add
aaa
daa
mov
imul
imul
or
xchg
push
push
cmp
mov
or
add
sar
xor
movs
adc
xchg
in
add
xchg
push
add
cmc
mov
lods
clc
pop
pop
popf
outs
inc
push
add
xor
sub
(bad)
sbb
dec
cmp
rcl
ins
mov
int3
jp
mov
inc
pop
sbb
and
jl
pusha
(bad)
xchg
loope
pop
and
dec
sub
pop
hlt
and
xor
push
jp
or
xchg
xchg
dec
int3
je
inc
ds
mov
pop
mov
mov
loop
ds
out
inc
sub
mov
(bad)
rol
and
lock
and
mov
inc
mov
cmp
movs
sbb
lock
in
push
outs
push
push
pop
bnd
push
rol
sub
inc
loop
inc
in
push
push
mov
jns
xor
das
ret
out
fwait
mov
bound
mov
inc
aam
xchg
int
jge
in
scas
mov
jmp
call
aad
fwait
dec
xor
adc
pop
ins
xchg
push
mov
or
cmp
sbb
sti
add
ss
mov
int3
mov
cwde
mov
push
(bad)
push
inc
rcr
inc
repnz
or
cs
jb
adc
pusha
shr
add
xor
cmp
bound
nop
pop
test
shr
dec
mov
push
jno
(bad)
ja
xor
std
in
shl
test
test
inc
push
loop
cmp
es
pop
mov
test
mov
into
push
mov
sub
mov
cmp
mov
push
lock
mov
lahf
mov
sar
push
xor
dec
xor
sbb
test
add
in
mov
loopne
call
ss
psubq
test
fsubr
sbb
xor
mov
retf
addr16
sbb
lods
jmp
cmp
and
xchg
pop
jl
mov
and
sar
loop
adc
pop
mov
dec
jb
mov
cs
outs
mov
fist
std
push
mov
lods
mov
mov
imul
inc
sahf
rcl
push
adc
pop
es
pop
cs
add
in
sbb
pusha
test
dec
jo
nop
jno
push
sbb
adc
jmp
into
mov
loopne
push
xor
out
adc
mov
xor
fstp
mov
xchg
rcr
(bad)
jmp
lods
adc
mov
pop
sbb
mov
push
ja
ror
cwde
adc
leave
cwde
push
movs
imul
sbb
xchg
pop
pop
test
xor
xor
aas
es
jbe
mov
adc
imul
sub
xor
push
jne
adc
or
mov
and
jno
movs
enter
xchg
popf
movs
add
mov
retf
or
xchg
hlt
inc
or
mov
fiadd
mov
cmc
addr16
in
stos
aam
mov
xchg
mov
mov
mov
xchg
popf
push
add
out
pop
imul
sub
jmp
add
sti
inc
push
xchg
xchg
or
and
xor
adc
inc
add
sub
imul
es
repnz
xchg
xor
jb
jmp
scas
sub
rcl
movs
adc
dec
mov
in
(bad)
or
mov
jne
fcom
rol
xchg
push
mov
js
push
inc
gs
xor
pushf
jg
test
rcr
scas
in
(bad)
cmp
mov
(bad)
xor
push
inc
or
xchg
push
jnp
cld
cmc
xchg
cs
shl
loope
push
mov
jp
pop
jns
jns
jns
ror
and
scas
mov
sub
pop
cli
popf
jae
mov
cli
lods
fmul
xor
lahf
inc
fcomp
jno
mov
sub
xchg
jo
inc
ds
inc
fstp
pop
aas
pop
xchg
mov
icebp
scas
mov
jae
or
dec
jbe
test
mov
(bad)
movs
scas
add
test
imul
cmps
add
sbb
mov
or
push
stos
(bad)
outs
xor
imul
xchg
in
arpl
jl
xchg
js
aad
xchg
push
jns
inc
jne
adc
mov
ins
jnp
push
arpl
or
add
dec
(bad)
retf
outs
sbb
add
(bad)
sbb
mov
in
sbb
ja
movs
jmp
sub
(bad)
je
sub
(bad)
pop
shl
mov
mov
rol
ret
sub
xchg
fidivr
fdivr
pop
adc
push
dec
(bad)
xor
leave
xor
xor
pop
shl
mov
inc
pop
fld
mov
adc
(bad)
call
and
sbb
fsub
xor
mov
cmps
xchg
mov
repnz
pop
aad
mov
sub
add
pop
stc
pop
(bad)
adc
xchg
repz
inc
pop
fild
push
call
xor
and
xchg
(bad)
shr
push
dec
push
sbb
jmp
sub
push
mov
bound
dec
fsubr
jns
adc
mov
pop
mov
sub
jb
jp
mov
sub
mov
daa
mov
and
xchg
mov
jmp
inc
inc
inc
push
fstp
lods
test
and
inc
sbb
cmp
loop
daa
push
push
and
xchg
adc
mov
and
fucomi
xor
out
int
jo
lock
dec
les
les
jp
inc
and
in
int3
cmps
das
aam
dec
fcmovu
mov
sub
cmps
shl
and
cmp
lock
aad
je
inc
dec
(bad)
out
mov
gs
das
mov
xor
add
lea
cmp
push
movs
daa
out
test
mov
xor
sbb
in
xor
cmps
addr16
sub
mov
jns
inc
push
mov
inc
nop
jbe
xchg
ja
ret
nop
push
xor
add
cmps
std
in
xchg
xchg
cmp
jl
xchg
jne
fsubp
cwde
out
adc
mov
push
push
addr16
fnstenv
inc
xchg
cli
add
mov
or
out
xchg
cmp
jns
push
test
mov
push
mov
xlat
js
sub
jecxz
test
pop
(bad)
and
xchg
pop
push
mov
das
inc
and
ror
fnstcw
xor
sub
pop
pop
mov
mov
stc
inc
jg
add
pop
push
movs
shl
xor
fild
cmp
push
cli
mov
lods
enter
sbb
in
jne
es
outs
fst
dec
push
adc
movs
(bad)
sub
cmp
jmp
fstp
cmp
ja
xchg
jp
xor
not
jl
gs
mov
enter
loopne
fdivr
lods
test
push
sbb
sub
mov
dec
mov
fadd
mov
(bad)
and
cmps
fisubr
add
es
inc
xchg
call
mov
mov
je
or
je
pop
outs
popa
sbb
dec
outs
(bad)
fsubr
movs
xor
addps
sub
sbb
sbb
out
and
je
jg
neg
in
mov
and
jmp
clc
test
mov
das
movs
xor
ins
pop
jle
add
sbb
test
hlt
sub
cmp
mov
test
or
jae
inc
xor
adc
pusha
movs
in
(bad)
push
fst
xchg
movs
ret
push
into
mov
sub
outs
dec
jp
mov
retf
xchg
mov
jl
mov
(bad)
cmp
mov
mov
or
aaa
cwde
popf
ret
ja
repnz
(bad)
mov
test
push
cmp
xchg
out
sbb
sub
in
jae
ja
jae
adc
aam
mov
inc
sub
mov
daa
loopne
(bad)
rol
xchg
push
lods
cmp
sti
cwde
and
(bad)
sub
popf
in
dec
sbb
dec
adc
mov
add
cs
push
movs
retf
sub
retf
fsubr
daa
fstp
mov
movs
sub
out
mov
aam
push
call
leave
retf
pop
or
and
repz
fdiv
je
int3
ror
(bad)
ret
cmps
sbb
xchg
or
pop
push
mov
lea
addr16
add
add
addr16
fxch
clc
(bad)
rol
cmc
ja
loop
sub
int
lock
shl
inc
imul
es
jle
into
push
mov
xor
mov
retf
fisub
dec
out
and
add
mov
in
iret
ret
out
and
shr
out
fst
dec
imul
and
out
imul
fs
bound
pop
xchg
(bad)
das
jmp
lock
sbb
jge
repnz
pop
jg
adc
cmc
ret
add
stos
js
pop
push
addr16
push
jle
pop
mov
mov
inc
push
fdivr
test
imul
sbb
xor
fistp
mov
movs
jp
or
mov
pop
xor
inc
xor
daa
lock
cmp
aam
lock
jns
shl
pop
xchg
into
retf
frstor
or
popa
xor
jbe
push
sub
adc
enter
mov
fstp
aaa
mov
clc
out
inc
pop
xchg
aam
push
inc
sub
jp
aaa
call
xchg
loop
pop
inc
dec
push
fldenv
xor
mov
xchg
idiv
mov
xchg
fld1
sub
leave
add
ret
sub
xchg
adc
mov
bound
les
xor
in
xor
ror
jae
jns
fidivr
mov
(bad)
cli
xchg
mov
mov
jns
add
add
pop
icebp
(bad)
mov
cmp
xor
cmc
loopne
xor
inc
xchg
push
fs
push
call
pop
dec
sub
jecxz
xchg
into
and
daa
mul
push
jg
repnz
retf
cmp
dec
addr16
adc
test
fsubr
xor
test
ret
mov
push
mov
ins
xor
sbb
outs
cli
cmp
stc
pop
xchg
pop
cld
imul
ds
ins
std
or
push
and
cmps
out
dec
stos
push
and
shl
leave
cwde
mov
pusha
push
adc
les
scas
ret
retf
(bad)
sti
mov
cmp
data16
into
cmp
retf
mov
inc
inc
imul
pop
sub
sbb
ds
dec
push
push
nop
inc
xchg
pop
push
jnp
imul
push
jb
pop
movs
or
std
outs
not
cmc
call
icebp
sub
xor
imul
push
pop
div
setl
ss
fcmovnb
ins
les
xchg
test
hlt
mov
je
mov
ror
aas
and
dec
mov
push
mov
dec
xchg
std
adc
jecxz
add
rcr
outs
pop
inc
loop
icebp
xor
xchg
sub
das
mov
rcr
out
jnp
sbb
aas
push
arpl
mov
shl
fldcw
adc
sahf
scas
or
in
ins
cmp
jecxz
pop
add
into
xor
and
int3
mov
inc
add
mov
dec
push
ds
xor
inc
ret
pop
xor
rcl
rcl
jno
xor
jmp
cmp
cmc
inc
sahf
nop
adc
inc
int
sub
(bad)
repnz
bound
and
mov
jns
push
(bad)
ds
or
pop
dec
xor
ds
push
xor
pop
iret
jo
mov
mov
or
test
or
xchg
jl
dec
push
sti
mov
inc
jp
adc
and
xor
imul
movs
lds
ret
or
or
in
ja
dec
lods
xor
xchg
jno
jle
jmp
mov
lds
popf
data16
retf
cmc
inc
push
mov
jno
in
sub
sti
add
push
mov
and
adc
xor
inc
mov
retf
push
mov
mov
sbb
rol
and
lea
push
outs
(bad)
cld
or
call
std
mov
ret
pop
and
gs
add
enter
xor
inc
inc
xor
adc
mov
jno
(bad)
aad
fdiv
jbe
xchg
sar
pop
clc
or
push
xchg
lods
loope
pushf
(bad)
out
jo
mov
imul
ror
adc
dec
ss
sub
in
mov
inc
movs
ss
jl
and
rcl
aam
xor
call
jge
add
iret
sub
fnstenv
or
mov
jg
mov
enter
sbb
sbb
inc
sub
call
xchg
call
dec
hlt
lock
sub
mov
add
dec
ret
retf
push
loope
gs
call
xchg
push
sbb
sub
je
fnstenv
sbb
add
loopne
cld
add
mov
jle
add
mov
jle
data16
ins
inc
xor
cld
xor
test
mov
popa
and
lahf
clc
dec
mov
int3
add
neg
jb
xchg
mov
icebp
inc
scas
daa
cmp
pop
hlt
ror
lds
adc
(bad)
xchg
jge
mov
jb
ret
mov
mov
push
push
loope
out
jmp
icebp
add
loop
in
add
mov
mov
hlt
cmp
pop
xchg
in
scas
add
pop
into
mov
fsub
pop
mov
sbb
cs
fnstenv
loopne
outs
push
in
std
ins
cmp
test
mov
mov
sbb
ret
jns
mov
xchg
test
and
imul
mov
mov
xchg
push
icebp
in
mov
mov
sbb
and
imul
cld
in
mov
ret
add
imul
mov
push
shr
sbb
push
cs
jae
add
sbb
xchg
pop
ins
mov
in
cld
test
pop
int3
dec
sti
fcom
cmp
add
pop
or
pushf
in
push
jae
lea
pop
in
xchg
add
sbb
sar
add
or
imul
jmp
pop
fcomp
scas
out
or
bound
shl
pop
mov
outs
aam
mov
push
imul
xchg
test
aad
pop
sbb
(bad)
adc
icebp
inc
mov
jl
add
lds
je
repz
daa
and
jge
and
test
jno
sub
std
xlat
sbb
fcom
clc
in
pop
sbb
sub
xor
jb
mov
and
xor
out
jecxz
lds
jno
or
push
cmovae
push
xlat
mov
push
mov
dec
lods
push
dec
xor
stos
je
adc
pop
imul
mov
leave
popa
lods
dec
out
xchg
fsubr
cmp
inc
aaa
jl
xor
ins
adc
or
mov
pushf
iret
cmp
gs
xor
pop
icebp
ret
rol
add
add
call
inc
(bad)
outs
(bad)
lods
test
test
sbb
mov
int3
xlat
test
movs
push
xchg
sub
fldl2t
and
out
inc
jge
lea
stos
xchg
xchg
inc
pop
sub
cmp
movs
mov
mov
jno
loope
dec
popf
(bad)
retf
scas
enter
xchg
bnd
pop
cld
mov
mov
pop
push
xchg
or
test
nop
mov
dec
or
cmp
inc
and
movs
fmul
push
adc
xor
xor
mov
fsubp
gs
out
mov
(bad)
inc
out
xor
jno
movs
cdq
imul
ret
gs
push
jge
jge
outs
push
gs
js
out
iret
xor
out
pop
jmp
pop
or
rol
jg
pop
dec
pop
xor
adc
mov
sub
add
int3
(bad)
xchg
arpl
push
adc
sbb
inc
jle
out
into
push
mov
test
jmp
jne
or
ins
test
adc
adc
jmp
mov
adc
rcl
outs
push
xchg
add
ins
lahf
inc
xor
add
(bad)
dec
xor
outs
or
add
loop
cmps
out
sti
push
add
or
das
arpl
out
faddp
mov
shr
dec
sub
fsubr
mov
aaa
jl
in
loopne
out
dec
push
jae
xchg
push
fwait
mov
aam
gs
or
cs
(bad)
loopne
outs
fs
popf
sbb
dec
adc
int3
idiv
pop
mov
xchg
movs
mov
add
mov
xchg
in
loopne
ret
std
cmp
fs
lds
sub
mov
aad
bound
sti
inc
test
mov
(bad)
call
fiadd
cwde
pop
sbb
mov
mov
pop
push
pop
xchg
add
adc
stos
daa
cmps
cdq
clc
lods
lods
popf
js
pushf
clc
in
sub
push
out
scas
rcl
mov
iret
cld
loopne
xchg
xchg
arpl
xchg
sub
movs
pop
clc
sub
mov
movs
das
or
or
es
lods
jmp
inc
sbb
xchg
les
fwait
xor
icebp
cmps
imul
sbb
rcl
xchg
(bad)
cmc
adc
test
inc
push
out
lds
cmp
mov
mov
ret
xchg
rcr
movs
nop
test
cmp
popa
sahf
inc
adc
daa
xchg
mov
ins
mov
dec
mov
sbb
fistp
push
jae
sub
cmp
dec
pop
mov
push
or
stc
add
jne
mov
les
jb
cld
cdq
mov
outs
add
xor
mov
cmp
cmps
sub
mov
dec
inc
in
je
push
loope
fcom
or
fs
xchg
mov
pop
sar
inc
icebp
pop
daa
in
je
mov
ror
adc
dec
test
repz
aaa
sti
and
into
xchg
fadd
sbb
mov
test
fwait
or
(bad)
lock
into
addr16
inc
mov
out
push
add
scas
pop
sbb
cli
dec
or
(bad)
aam
inc
es
arpl
out
std
lds
jmp
fsubr
inc
(bad)
push
push
popa
imul
or
test
sbb
cdq
test
mov
aas
mov
cmp
xor
sar
sahf
jo
mov
loopne
ret
ins
or
mov
retf
cmp
cli
inc
movs
cld
out
jnp
ins
cmp
sahf
inc
jno
push
imul
aas
test
mov
loop
enter
bound
out
xor
ins
jle
jae
dec
and
pop
dec
sbb
sub
mov
out
in
or
pushf
gs
call
not
(bad)
call
sub
xor
push
mov
sub
add
shl
dec
cmc
paddsb
(bad)
aam
pop
xor
(bad)
push
and
out
sub
sbb
or
cmp
sub
mov
mov
and
in
adc
push
rcl
mov
pop
sbb
add
imul
push
or
inc
loope
inc
push
jbe
ja
adc
pop
xchg
jns
or
fnsave
pop
rcr
in
xlat
xchg
inc
mov
das
push
inc
icebp
test
adc
mov
jo
jne
sub
add
sbb
test
into
mov
mov
and
cmc
cld
xor
retf
leave
inc
or
adc
add
enter
dec
push
mov
xchg
cmovo
add
mov
mov
ret
push
int3
push
mov
js
aaa
int
pop
dec
sbb
xor
cmps
dec
lahf
gs
movs
inc
mov
and
jl
jp
test
ins
inc
adc
lds
mov
hlt
mov
cmp
gs
mov
in
push
push
pop
cmp
mov
hlt
fsub
adc
cmc
in
test
pop
pop
adc
pop
lods
dec
push
std
xchg
test
cdq
cdq
adc
jmp
dec
jle
popf
mov
inc
enter
rcl
inc
dec
das
into
add
inc
jmp
leave
out
int3
add
leave
sub
ret
out
xor
(bad)
cmp
loope
mov
dec
stos
cdq
(bad)
mov
fsub
shr
lock
scas
outs
cmc
popf
sti
or
ds
add
push
movs
mov
sub
stos
in
sahf
push
lods
rol
out
dec
nop
rcr
mov
add
ret
adc
sub
lea
pop
dec
int3
sbb
jge
inc
mov
xchg
es
loop
pop
outs
mov
mov
mov
les
xchg
ss
imul
xchg
bswap
in
mov
xchg
push
mov
jle
in
xor
pop
sbb
sub
dec
es
inc
pop
lds
iret
out
push
ror
sub
in
cdq
(bad)
mov
and
mov
pusha
imul
mov
repz
dec
pop
jno
sub
movs
sub
jo
mov
jmp
xchg
scas
push
(bad)
retf
mov
outs
mov
(bad)
xchg
lods
rol
and
or
adc
jmp
cdq
push
jg
add
js
pop
mov
xor
(bad)
retf
pop
pop
xor
pop
mov
in
or
loopne
mov
out
mov
imul
fwait
cwde
xchg
ror
test
shl
test
data16
add
xchg
clc
adc
push
and
into
xchg
dec
sbb
push
sub
mov
push
call
stos
(bad)
lods
mov
mov
pop
mov
mov
mov
xchg
mov
xchg
test
mov
out
jle
pushf
scas
fs
fnstenv
and
push
shl
jg
mov
jmp
pop
leave
aas
adc
push
retf
sahf
lea
pop
jne
mov
les
js
push
jecxz
push
xor
imul
xchg
xchg
sar
cmp
mov
pop
fsubr
mov
test
stc
rcl
rcr
jg
jp
ja
sbb
mov
inc
cmp
pop
jnp
mov
xchg
repz
ins
push
hlt
inc
mov
pop
call
in
mov
int3
push
xchg
mov
or
iret
das
inc
cmp
pop
inc
mul
or
repnz
sbb
jle
dec
inc
pop
aas
in
cld
sub
out
add
mov
push
out
sbb
sar
mov
xchg
test
push
fcomi
mov
push
add
shl
pop
ror
ds
jne
mov
hlt
mov
push
add
mov
sub
bound
lahf
popf
fadd
test
into
push
int
fnstsw
leave
(bad)
mov
dec
xor
aaa
mov
dec
jle
xchg
jmp
div
mov
lods
retf
xchg
xchg
fsub
test
lods
mov
fs
(bad)
adc
push
(bad)
cmp
leave
lods
xchg
daa
push
xchg
pop
push
and
test
and
rcl
pusha
into
std
or
les
sbb
ficomp
jns
jmp
mov
in
dec
pushf
xchg
pop
add
mov
adc
mov
imul
shl
retf
cli
xchg
out
and
adc
shr
fsubr
fcmovnb
cmp
sbb
push
inc
jmp
pop
lahf
mov
imul
push
call
into
push
jmp
leave
pop
mov
js
or
gs
adc
test
push
mov
push
push
es
or
mov
xchg
clc
pop
fidiv
mov
stc
js
xor
add
dec
xor
mov
mov
mov
mov
std
imul
(bad)
ins
add
pop
or
push
int
imul
pop
test
jmp
pop
shl
xchg
cmp
dec
lods
arpl
lods
push
daa
cmp
xchg
and
outs
ja
sub
hlt
mov
mov
retf
pop
outs
mov
stc
add
fs
jg
fs
int3
mov
scas
jb
sbb
xchg
aas
push
lea
sub
and
or
ret
pop
(bad)
sbb
rol
cmps
lods
pop
cmp
in
addr16
and
adc
xchg
xchg
push
outs
push
or
or
into
cmp
or
xchg
scas
test
mov
lds
add
fstp
jg
loop
lock
ss
popf
push
xchg
stos
mov
add
into
call
mov
test
jmp
leave
add
mov
ror
icebp
test
cs
mov
adc
(bad)
xchg
or
jae
pop
pop
sbb
test
out
and
cmps
add
xchg
sbb
pusha
or
adc
std
and
push
push
pop
(bad)
mov
jae
loope
in
xchg
add
mov
pop
rcr
retf
sbb
jns
sub
repz
xchg
jno
inc
repz
adc
or
fs
(bad)
xchg
addr16
imul
mov
mov
je
mov
jmp
and
mov
in
ret
scas
(bad)
pop
jmp
ins
outs
adc
mov
mov
fwait
xchg
adc
outs
pop
js
mov
xchg
and
and
xacquire
lods
stos
std
out
inc
mov
(bad)
push
mov
or
add
sbb
out
jecxz
(bad)
adc
outs
rol
inc
leave
xor
js
aad
xchg
push
(bad)
adc
retf
inc
or
xor
rcr
(bad)
ret
mov
pop
jo
push
dec
mov
inc
(bad)
jle
jo
les
cmps
push
cmp
mov
ror
imul
push
xlat
ins
mov
test
mov
int3
sbb
and
mov
clc
fadd
imul
iret
pop
or
push
fnstsw
retf
bound
movs
outs
leave
cmovo
or
lahf
pop
and
scas
(bad)
jb
push
push
xor
retf
sbb
sub
inc
das
fild
push
inc
imul
daa
xlat
jmp
or
xchg
fsubr
stos
test
adc
scas
(bad)
add
repz
(bad)
std
cmp
adc
lahf
pop
sti
in
dec
and
lock
lods
and
mov
stos
and
ret
add
jle
push
or
add
and
fstp
xor
test
push
adc
xor
inc
mov
mov
inc
add
retf
sahf
mov
push
dec
call
ins
fadd
xor
out
jns
out
pop
int3
xor
scas
test
jae
daa
xchg
loop
mov
daa
enter
call
jmp
sub
sbb
inc
mov
jmp
movs
ret
shl
aam
fisub
stos
mov
mov
popf
and
cmps
rol
cwde
icebp
scas
jmp
arpl
and
out
push
out
mov
or
int3
mov
push
dec
or
mov
clc
aam
mov
shl
fisttp
cmp
sbb
mov
pop
fdivr
pop
dec
(bad)
arpl
and
leave
sbb
jmp
sub
aam
aas
cld
dec
mov
mov
dec
jmp
cmp
(bad)
cdq
(bad)
les
xor
int3
pop
ror
mov
call
pusha
mov
rol
mov
lea
push
out
test
popf
jns
out
mov
sub
mov
push
jbe
outs
inc
jmp
mov
xor
xor
mov
adc
xor
mov
adc
lea
pop
ffree
les
stos
(bad)
not
jmp
sbb
outs
cmp
in
or
test
fcomp
xchg
jg
push
ins
mov
adc
add
cmp
scas
arpl
or
retf
shl
test
fsubp
add
adc
inc
and
je
dec
jns
dec
dec
jmp
dec
jl
test
jg
mov
fstp
ins
or
mov
addr16
xchg
setge
gs
and
pop
fwait
ds
xor
cmp
push
aas
push
je
xchg
clc
rcr
rcl
arpl
sti
cs
pop
rcl
aam
in
dec
je
dec
sbb
out
inc
and
outs
outs
add
push
in
inc
stos
addr16
sbb
call
inc
jns
xor
lods
lahf
out
data16
adc
mov
add
xchg
mov
add
pop
fwait
mov
cmp
cmp
ins
jp
ins
xchg
mov
les
mov
mov
adc
pop
push
cmp
sbb
hlt
add
jbe
xchg
js
loope
jmp
dec
ja
or
repnz
sbb
jle
inc
lds
mov
inc
test
pop
std
pop
mov
fwait
in
scas
cmps
cmc
mov
xor
repnz
shl
inc
std
shr
fist
mov
pop
retf
fistp
lods
and
aas
or
ret
xchg
push
sahf
int
mov
lds
sbb
adc
dec
ror
inc
inc
xchg
fnstsw
sub
adc
dec
mov
cmps
jae
xlat
lods
cmp
sti
pop
mov
xor
push
sub
or
add
or
xlat
pop
push
mov
ins
fs
jnp
pop
inc
or
xchg
sbb
retf
xchg
or
add
int3
pop
mov
mov
add
xor
in
fdivr
xchg
(bad)
fist
mov
jl
mov
in
fist
cmp
mov
dec
xor
mov
inc
mov
cmp
add
imul
dec
sub
or
shl
pushf
dec
sbb
movs
and
(bad)
in
imul
fbstp
int3
loope
js
int3
adc
neg
mov
mov
cmp
mov
xor
out
jmp
adc
inc
pop
loope
dec
cdq
mov
es
call
pop
mov
xor
dec
xor
inc
jae
ret
mov
data16
movs
arpl
mov
mov
and
and
inc
xor
add
and
pop
aas
mov
and
cmp
jge
sbb
vdivss
mov
dec
mov
sbb
sub
jle
xor
nop
retf
inc
leave
or
push
aas
lock
inc
and
aad
cli
rcl
pandn
pusha
mov
push
sahf
mov
push
pop
dec
or
sbb
xchg
fst
pop
xor
ins
cmp
mov
pop
mov
xchg
or
cld
sub
(bad)
into
test
add
xor
add
inc
in
in
mov
dec
cdq
sbb
adc
add
pushf
pusha
mov
mov
and
jne
aam
mov
rcr
add
jg
sbb
add
and
push
dec
fadd
int3
dec
loopne
ret
mov
test
out
add
mov
mov
cmp
add
shr
add
and
cmp
mov
push
in
cwde
add
test
xor
sahf
lods
popf
inc
repnz
pop
mov
out
lock
inc
fidiv
jne
inc
lods
or
mov
cmovno
call
mov
sahf
xchg
dec
mov
push
or
cmp
cmp
inc
mov
rcl
adc
add
test
arpl
push
mov
das
(bad)
cmp
mov
into
sub
pop
loope
pop
push
push
out
jecxz
sub
dec
sbb
mov
stos
cmp
fisub
fnsave
sub
icebp
ins
ror
jg
lahf
pop
cld
jmp
or
xor
mov
je
inc
adc
stos
mov
cmc
mov
mov
inc
xchg
movs
and
add
add
xor
or
cmp
popf
dec
out
(bad)
and
cmc
out
xchg
inc
mov
(bad)
repz
mov
adc
push
mov
xchg
add
loop
cmp
fcomi
pop
mov
sbb
adc
mov
fiadd
dec
fwait
mov
leave
push
outs
pop
retf
cmps
pushf
dec
gs
adc
into
or
xchg
sub
inc
mov
add
sbb
lods
fldenv
in
(bad)
(bad)
mov
xchg
addr16
fsubr
in
add
cwde
mov
xchg
push
add
jbe
adc
jbe
xor
icebp
xchg
lods
jp
movs
mov
add
dec
pop
or
sub
xor
popa
jno
inc
xchg
xor
xor
out
adc
add
xor
dec
mov
push
sahf
and
mov
test
shl
jle
call
inc
sub
(bad)
fbstp
cmps
out
mov
cwde
xchg
ds
in
adc
fisttp
push
fmul
imul
popf
add
cmp
and
lea
sbb
mov
dec
or
mov
and
(bad)
xchg
add
push
test
jecxz
push
mov
push
mov
add
clc
pop
dec
xchg
pop
fnsave
ror
lds
pop
or
cmps
and
dec
inc
inc
mov
aaa
inc
cmp
test
or
pop
dec
mov
aam
aaa
je
sbb
sbb
fcomp
jl
iret
pop
call
xchg
nop
sub
inc
outs
push
push
out
xor
mov
mov
popf
(bad)
push
inc
repnz
or
jl
(bad)
std
(bad)
stos
cli
sub
movs
xchg
shl
mov
lods
mov
pop
cmc
loopne
sti
mov
dec
pop
cdq
xchg
add
dec
jecxz
pop
add
jnp
(bad)
inc
mov
jae
add
ins
test
pop
or
test
sbb
xchg
ins
mov
mov
popf
lahf
xchg
cmp
adc
adc
xchg
stos
call
movs
or
pop
fist
push
pop
sahf
in
jnp
mov
aad
xor
jnp
jle
lods
xor
mov
in
shl
cdq
pop
push
stos
cwde
add
pop
jo
fs
inc
shr
pop
jno
cmps
rcr
push
lea
(bad)
stos
mov
mov
(bad)
cmp
fild
mov
mov
popa
dec
call
mov
lahf
mov
imul
sysenter
or
lds
cs
stos
push
xchg
ror
mov
out
(bad)
repz
mov
sub
jb
loopne
fnstsw
ins
repz
icebp
sbb
hlt
mov
mov
loope
nop
call
xchg
and
in
(bad)
(bad)
sub
sub
outs
mov
in
dec
sub
dec
inc
sbb
ja
sahf
dec
(bad)
in
lea
xchg
sub
ret
ins
push
sbb
mov
add
xchg
add
in
dec
pop
mov
loope
scas
sub
leave
jmp
sbb
aam
(bad)
and
push
mov
xlat
mov
dec
cmps
xchg
mov
jno
inc
xchg
inc
push
adc
jg
cmp
sbb
loope
xchg
or
scas
mov
stc
adc
mov
mov
ror
pop
xor
pop
jo
(bad)
stos
push
(bad)
xlat
add
mov
mov
mov
es
mov
push
xor
gs
dec
aas
and
sbb
fisub
mov
add
mov
sahf
adc
mov
ja
mov
inc
xchg
lods
outs
xor
sub
push
mov
adc
test
push
pop
mov
jno
sbb
mov
retf
jg
stc
cmp
bound
lahf
sahf
rcr
out
les
int
aas
add
push
push
in
fmul
pop
xor
lahf
in
cmp
cmp
les
loop
ret
int3
shr
xchg
push
out
mov
(bad)
cmp
retf
mov
cmc
(bad)
mov
jecxz
nop
cmp
popf
fst
stc
mov
jbe
loop
cmp
inc
in
sbb
cmps
cmp
xor
js
ins
mov
jnp
push
pusha
add
repnz
and
pop
inc
ret
popa
xor
ret
mov
popa
or
adc
push
mov
push
dec
xlat
aas
aad
sahf
pop
pop
lock
repnz
and
stos
test
clc
ins
call
sbb
mov
or
sub
(bad)
adc
inc
push
push
(bad)
imul
lds
push
jle
ss
mov
clc
push
pop
jne
(bad)
(bad)
popa
inc
push
adc
iret
ss
cmp
cli
jmp
mov
dec
push
ds
sub
out
xchg
and
xchg
adc
sti
in
xchg
cmp
xchg
push
and
and
xor
es
jge
push
mov
sub
int
call
cmp
mov
aam
retf
sub
shl
jg
pop
outs
aas
and
popf
dec
das
mov
out
sub
push
jp
dec
ja
in
adc
push
and
in
ins
push
repnz
and
mov
ins
cli
std
retf
mov
leave
cmc
mov
ins
mov
pop
hlt
sbb
push
rol
dec
jmp
jbe
xor
ins
and
std
hlt
adc
cli
lea
jle
repz
dec
ja
rol
jo
jg
(bad)
lahf
lock
adc
loope
outs
adc
js
mov
mov
bound
and
sahf
aad
push
push
jge
ins
adc
test
pusha
add
rcl
js
and
sti
jo
mov
xlat
pop
mov
lahf
rol
and
push
pop
or
mov
pop
mov
aaa
ret
cmp
ficom
jmp
add
lea
movs
pminsw
inc
inc
test
or
in
cli
push
dec
pop
or
cmp
outs
mov
add
aaa
sbb
cmp
test
iret
push
xchg
outs
leave
int
clc
stc
mov
int3
(bad)
movs
dec
das
fcom
sub
call
repnz
icebp
and
mov
mov
pushf
xchg
enter
inc
(bad)
mov
cwde
ins
adc
std
add
or
push
rcr
in
jg
push
inc
push
sbb
mov
dec
sbb
inc
clc
loope
rcl
jle
mov
frstor
or
nop
jo
pop
ret
lods
cli
dec
into
cmp
push
sti
inc
jp
stc
and
cmp
rcr
pushw
mov
lods
push
stos
xor
shr
mov
cmp
cmc
adc
push
(bad)
(bad)
ds
mov
cli
je
xor
or
add
les
jnp
mov
outs
sbb
or
fbld
or
iret
pop
jmp
into
lea
jbe
lods
lds
jl
je
add
ret
pop
stos
sbb
push
scas
in
and
cmp
push
test
add
(bad)
xchg
xchg
das
scas
xchg
lea
push
pop
mov
xchg
mov
push
out
shr
mov
sbb
jo
cmp
mov
je
cmp
jecxz
jmp
push
pusha
mov
sbb
mov
fs
pop
scas
stos
xor
pop
aas
es
push
sbb
or
add
add
mov
call
dec
push
js
sbb
(bad)
loope
(bad)
and
jb
ja
(bad)
retf
retf
and
popf
pop
lea
cli
jp
push
xor
sbb
loopne
stos
cmp
xlat
arpl
jecxz
inc
pusha
push
ss
push
pusha
arpl
imul
push
lods
mov
adc
lods
or
jecxz
dec
mov
push
mov
or
pop
or
or
sub
dec
je
ret
push
in
fist
and
jo
add
xor
jmp
and
adc
jmp
int
sti
stos
scas
xor
cmp
mov
xchg
pop
nop
fisttp
aam
sub
jae
popa
cmps
sub
mov
cli
xor
aas
sub
mov
or
inc
sbb
and
jmp
mov
lea
adc
and
pop
inc
dec
push
repnz
loope
mov
inc
fcomp
in
ja
jo
fcom
sbb
push
cdq
xchg
(bad)
mov
repz
inc
outs
stos
pop
outs
push
(bad)
mov
data16
mov
or
adc
xor
jle
shl
mov
movs
mov
push
loope
cmp
jb
push
add
ret
stc
scas
xchg
push
cs
add
shl
fst
mov
adc
mov
add
loope
or
aam
adc
fwait
push
sbb
test
aad
dec
call
inc
addr16
addr16
stc
aaa
mov
out
push
dec
daa
(bad)
and
outs
stos
xor
push
pop
je
mov
imul
push
sbb
pop
mov
jmp
jle
dec
int3
inc
call
fld
mov
adc
fistp
inc
daa
pusha
mov
push
les
mov
mov
mov
mul
data16
clc
ja
in
xor
test
imul
dec
test
(bad)
stos
cmps
lods
adc
sar
shld
jnp
mov
cmps
cmps
xor
in
fisttp
xchg
call
pop
jnp
das
fild
aam
xchg
sbb
cwde
gs
stos
arpl
cmc
cmp
je
not
push
(bad)
(bad)
sub
pop
or
sti
fldenv
sub
retf
cmp
jbe
mov
adc
dec
mov
dec
add
pop
pop
neg
cmp
cmp
or
and
test
rcl
ins
pop
imul
add
mov
adc
mov
loop
sbb
jg
pop
cmp
mov
mov
pop
inc
lds
arpl
add
int3
inc
xchg
fnstcw
clc
pmaxub
mov
push
add
ins
dec
mov
xchg
cmp
dec
mov
mov
dec
mov
(bad)
mov
mov
and
mov
sub
movs
sbb
call
dec
fnstsw
sbb
sti
lds
cdq
movs
add
dec
je
pop
xchg
xor
push
add
sub
mov
xor
sbb
pop
sahf
inc
fstp
mov
pop
shl
and
movs
or
mov
mov
popf
jle
(bad)
repnz
inc
dec
es
iret
andnps
inc
add
(bad)
pop
pop
scas
cdq
xor
movs
inc
push
stc
sub
xchg
mov
push
out
inc
xchg
sbb
cmps
aas
sbb
cdq
test
(bad)
stos
cmp
(bad)
dec
aad
mov
lds
fidiv
mov
cwde
mov
jmp
sahf
cmp
mov
inc
je
ds
xchg
shr
sub
repz
imul
or
data16
sub
out
int3
push
test
xchg
idiv
add
movs
test
movs
add
push
xchg
fstp
inc
fistp
jmp
xor
push
pop
xacquire
js
mov
ficomp
dec
push
repz
xor
lds
xor
popa
adc
fs
push
ja
mov
or
popa
int3
dec
xor
mov
retf
fild
jae
out
and
es
inc
call
fst
ficom
pop
or
mov
cmp
mov
sbb
push
addr16
and
fld
mov
loop
adc
pusha
jmp
xor
or
adc
int3
adc
adc
lea
shr
test
ficom
ds
leave
push
jno
jmp
push
loope
and
movs
mov
movs
push
dec
mov
stos
das
jmp
aas
stos
rol
sahf
jl
sbb
fsub
addr16
adc
js
dec
mov
jmp
sub
push
mov
xchg
xchg
std
arpl
fcomp
mov
cwde
inc
push
scas
fs
dec
cld
xor
lahf
ins
or
fstp
mov
int
xchg
addr16
popf
fwait
xchg
js
sub
fild
and
out
xor
lock
aad
cmp
ret
shl
outs
jle
xor
jg
jp
jmp
(bad)
and
jb
or
test
pusha
cmp
push
inc
movs
loopne
repnz
mov
loopne
push
xlat
dec
sbb
pop
stos
dec
pop
leave
sub
jb
sbb
ficom
jb
fmul
lds
or
(bad)
movs
adc
out
cld
jae
dec
jl
hlt
xor
push
sub
and
push
cmp
sete
and
push
cmps
jno
xor
idiv
out
jns
addr16
inc
xor
cmp
(bad)
fwait
add
shr
xchg
test
pop
(bad)
gs
sahf
js
xor
aaa
mov
cmpxchg
fistp
push
out
jo
sub
mov
mov
mov
es
mov
inc
jae
dec
mov
push
jle
cmp
push
pop
ds
aad
jmp
add
addr16
out
sub
mov
jle
pop
sbb
fwait
jp
pop
add
pop
push
int3
add
vpmaxub
adc
ds
inc
(bad)
jbe
and
inc
dec
into
mov
mov
(bad)
jecxz
rol
cli
xlat
cwde
stc
sub
clc
fwait
popf
ret
push
adc
inc
jno
movsx
add
std
out
daa
fs
jne
(bad)
sbb
fcmovb
push
mov
mov
xchg
icebp
jnp
pop
mov
and
mov
jp
ror
test
sub
lds
jmp
push
ins
neg
lock
jmp
fwait
ja
jle
enter
mov
mov
sbb
out
xlat
fwait
(bad)
call
js
jmp
cli
out
jbe
pop
(bad)
cld
shl
ror
in
cmp
jle
push
dec
xor
pop
mov
sbb
and
fdivp
inc
jmp
lock
cmp
retf
imul
adc
call
and
outs
shl
pop
push
loop
dec
mov
cwde
loopne
mov
mov
imul
dec
push
inc
sbb
aam
cs
out
cmc
sbb
outs
jecxz
push
or
addr16
daa
fild
fcmovnbe
cmp
loope
inc
jbe
mov
ins
xchg
lods
rcr
jno
mov
hlt
adc
movs
fidiv
xor
cmps
sbb
imul
mov
mov
jne
lahf
xchg
inc
ss
mov
xor
mov
retf
cmps
mov
jp
mov
mov
icebp
cmps
fiadd
jecxz
movs
shr
inc
(bad)
je
mov
or
xor
cs
retf
mov
add
(bad)
ja
fdivrp
mov
jb
dec
pusha
inc
pop
jge
inc
inc
adc
movs
push
pop
jge
cmps
mov
out
cmps
sub
add
pop
rcr
and
inc
jae
xor
loopne
repnz
sbb
xchg
ret
and
cmp
add
add
jmp
test
test
adc
inc
outs
push
sar
adc
clc
xor
mov
jle
in
pop
js
(bad)
xor
cwde
movs
cmps
ss
imul
imul
iret
and
mov
xor
pop
stc
imul
fimul
jne
mov
shl
(bad)
es
fisub
call
nop
and
xor
cmp
inc
call
push
mov
jl
mov
mov
push
inc
jmp
or
pusha
cld
xchg
cmps
pusha
dec
xchg
adc
cmp
and
adc
aas
call
mov
jg
ficomp
shrd
in
lea
addr16
pop
and
mov
push
sub
cmp
scas
cmp
xchg
dec
mov
xor
stos
leave
stc
xor
leave
fs
ss
pop
jnp
inc
xchg
inc
fistp
loope
scas
repnz
push
scas
sbb
add
inc
xor
add
or
cmc
fcomp
inc
mov
stos
ss
outs
add
jp
jmp
lods
or
fucomp
sub
retf
stc
adc
sbb
push
in
mov
fs
test
jno
jne
(bad)
adc
mov
pop
ficomp
adc
call
in
nop
nop
call
xor
fcom
into
xchg
mov
jl
ss
and
mov
jmp
mov
cli
cmps
xchg
adc
xor
xchg
push
pop
adc
cli
xor
mov
mov
pop
cmp
arpl
out
pusha
fucomp
and
and
test
dec
scas
add
mov
outs
in
cmp
jne
dec
adc
lea
jae
outs
ja
mov
stc
jbe
rcl
ret
jge
xor
dec
jns
(bad)
js
(bad)
mov
xor
cmp
jecxz
mov
jmp
(bad)
int3
std
sub
push
hlt
adc
mov
and
jo
fiadd
or
xor
sbb
mov
mov
addr16
repz
xchg
adc
inc
push
xchg
jnp
out
cwde
push
sbb
ins
stos
and
ds
pushf
mov
push
and
(bad)
jnp
add
dec
ret
out
enter
xchg
dec
and
(bad)
or
mov
jecxz
add
jge
aad
sbb
sbb
sub
fdiv
jnp
outs
jb
inc
sbb
sub
and
aam
mov
ja
addr16
stos
or
xor
adc
xchg
pushf
fld
sub
pop
sbb
outs
xor
dec
and
pop
xor
inc
mov
mov
cli
or
pop
add
les
jmp
pop
push
movs
movs
and
push
xor
pop
les
xchg
test
test
es
push
mov
lea
fisub
dec
pop
or
mov
repz
mov
pop
sub
rol
and
test
mov
or
jnp
pop
sub
sbb
mov
pop
pop
mov
xchg
dec
repnz
int
cs
nop
jo
adc
into
popa
and
shl
adc
sub
scas
(bad)
or
push
jg
fsubr
rol
jbe
xor
adc
inc
or
sub
dec
add
call
ss
mov
ss
sbb
adc
imul
mov
mov
jmp
inc
mov
mov
mov
mov
mov
adc
mov
inc
sub
adc
pushf
push
dec
test
stc
imul
xchg
jmp
xchg
iret
push
push
imul
movs
fisttp
mov
push
and
sbb
mov
call
adc
rol
jno
sbb
jmp
js
sub
xchg
dec
or
pop
idiv
stc
sahf
xchg
inc
cmps
das
pop
sbb
dec
in
movs
std
jmp
cmp
shr
imul
xor
les
out
or
adc
fst
or
mov
mov
adc
pop
lahf
movs
retf
sub
mov
pop
sti
mov
mov
sub
cmp
cmp
retf
ins
retf
cmc
pop
add
sbb
and
mov
cli
sub
cdq
lea
and
aaa
ins
or
mov
pushf
stos
push
adc
rcl
loope
and
iret
pop
icebp
je
adc
inc
and
dec
sar
loopne
je
mov
mov
fnstcw
add
xchg
mov
jle
or
pusha
cmp
cmp
dec
adc
and
les
cmp
mov
add
les
leave
je
lods
and
iret
inc
xor
pop
pop
scas
popa
sbb
mov
xor
pop
hlt
cwde
shl
mov
mov
pushf
movs
stos
mov
jne
mov
retf
in
jl
fs
shl
sahf
jnp
lods
sti
rcl
sub
mov
mov
jmp
mov
jne
pop
xor
jo
(bad)
jmp
jne
test
xor
and
dec
cmp
adc
mov
outs
or
and
pop
je
pop
mov
and
(bad)
jmp
ins
std
mov
dec
(bad)
mov
pusha
sbb
or
nop
jo
jmp
jl
enter
sub
xor
mov
es
ja
gs
xor
jbe
pop
clc
stc
pusha
xor
mov
add
xchg
je
pop
mov
jg
ja
hlt
add
fisub
es
cmc
out
sbb
iret
jne
stc
jmp
call
rcr
mov
lock
sar
mov
cmp
mov
stc
sub
xor
xlat
adc
mov
and
mov
stos
and
add
adc
jmp
stos
or
in
fistp
sbb
ss
data16
xchg
aam
sub
mov
push
adc
dec
cwde
aad
aas
push
pusha
lods
jecxz
stos
add
popa
scas
mov
shr
test
test
mov
mov
out
push
add
ins
push
push
ret
imul
xchg
sbb
lock
cmp
mov
pushf
(bad)
fidiv
cmps
or
mov
add
arpl
jno
cwde
ret
imul
jmp
jo
xchg
adc
xchg
or
pop
cmc
hlt
pop
cmps
dec
fst
fnstcw
jne
ret
push
je
nop
and
(bad)
or
push
aaa
adc
push
mov
rol
push
out
lock
ficom
fadd
(bad)
jne
and
addr16
sub
add
sub
in
or
nop
sti
outs
fist
int3
xchg
jg
lea
and
inc
retf
or
jb
into
push
xchg
cmp
cli
sbb
push
ret
mov
mov
dec
or
test
cli
or
cmp
mov
pop
lods
sti
dec
and
push
cmps
inc
out
fcmovu
or
imul
ds
and
pop
arpl
add
pop
jne
ja
test
pop
jp
push
mov
call
dec
and
dec
sub
inc
fimul
fmul
fadd
push
pop
pusha
ja
retf
imul
aam
xchg
shl
push
adc
lahf
pop
dec
mov
(bad)
(bad)
call
jno
(bad)
pop
add
je
ins
(bad)
mov
shr
rcr
lods
in
cmp
push
mov
cmp
call
adc
mov
and
pop
in
inc
ins
ds
cmp
inc
jle
in
fbld
cmp
sub
aaa
xchg
test
ds
cmp
and
inc
pop
fs
jle
imul
cmp
popf
sahf
cmp
or
rcr
int
outs
aam
jl
inc
data16
mov
in
(bad)
loopne
jle
loop
sahf
push
cmps
add
jnp
repnz
int3
sbb
call
imul
out
out
clc
inc
leave
daa
adc
cwde
mov
cmp
scas
add
mov
ins
clc
and
loop
bound
out
push
test
movs
cmps
inc
inc
sub
and
fbstp
sahf
cmp
aad
push
clc
add
clc
pop
cmp
jns
pusha
in
fild
adc
jno
mov
fs
std
sub
imul
jo
in
inc
mov
fisub
sbb
add
push
(bad)
jno
mov
push
mov
dec
jns
sub
repnz
arpl
jbe
sub
dec
jl
push
sub
mov
leave
cmc
sti
pop
adc
out
jge
fcomp
jmp
int
pop
clc
retf
xchg
xchg
xor
or
jecxz
pop
(bad)
cmp
daa
push
movaps
(bad)
sbb
in
lds
jo
mov
jl
xor
(bad)
mov
scas
fnstenv
std
or
div
or
dec
add
jb
fnstcw
test
or
push
outs
mov
sbb
sub
sbb
jmp
cmp
adc
enter
ja
mov
or
shl
loopne
aad
stc
cmp
and
mov
test
mov
(bad)
xor
inc
fidivr
cs
push
or
jnp
mov
pop
cs
mov
push
pop
push
adc
pop
xor
pop
ja
jmp
adc
jmp
je
ja
mov
addr16
arpl
sbb
call
bound
jp
inc
sbb
xor
outs
mov
sub
pop
jo
rol
movs
add
ficom
clc
lea
mov
inc
mov
ins
or
lds
xlat
mov
or
lods
xor
or
push
loope
mov
inc
or
push
cmp
xor
mov
mov
sbb
push
(bad)
call
and
out
into
push
jns
inc
sub
cmp
clc
inc
mov
cli
push
mov
das
sub
or
icebp
cmc
push
inc
pop
add
dec
sar
stos
push
call
xor
cdq
pop
pop
sbb
cwde
test
mov
loope
aad
xor
jb
xchg
cmc
or
mov
test
loope
std
sbb
jecxz
loop
mov
dec
int3
and
sbb
ficomp
and
push
enter
cmp
movs
retf
inc
retf
mov
pop
mov
push
sub
fmul
hlt
add
ret
adc
aam
scas
cmps
(bad)
sub
push
int3
mov
fdivrp
not
in
xor
sub
stos
mov
pop
push
and
stos
cmp
cwde
pop
(bad)
cmp
mov
sbb
fsubr
push
clc
pop
in
ss
inc
movs
xchg
cmp
movs
inc
stos
add
ins
(bad)
push
xor
push
mov
mov
sar
shl
fnstsw
(bad)
pop
mov
loopne
int3
jnp
push
ror
(bad)
repz
mov
and
sbb
cmp
sub
stc
sti
sub
leave
mov
and
mov
outs
jne
xchg
adc
mov
pop
(bad)
data16
(bad)
pop
cs
push
jns
sti
imul
sub
mov
jno
cmc
xchg
stos
cmp
mov
daa
cs
xchg
xchg
aas
adc
scas
sahf
push
stos
push
lock
popa
push
adc
mov
cmc
dec
adc
enter
jae
fld
xchg
in
xchg
test
mov
aas
mov
cmp
daa
dec
or
adc
mov
add
jne
sub
or
cwde
mov
lods
lods
mov
sahf
inc
sbb
xchg
cmp
arpl
mov
inc
dec
push
ja
xchg
ds
jns
xor
jg
psubusw
jo
vminsd
add
test
jns
clc
pop
gs
hlt
(bad)
jno
mov
ins
xchg
cmp
sbb
xlat
fmul
adc
movs
push
dec
(bad)
fcomp
ret
and
mov
lods
outs
outs
push
add
test
sub
inc
jne
fs
push
xor
lea
inc
call
loop
or
dec
inc
jmp
mov
push
jno
mov
test
(bad)
xor
xor
dec
push
ror
fnsave
test
cwde
and
scas
dec
je
imul
jmp
les
(bad)
and
rcr
pop
inc
sub
hlt
clc
mov
jne
lock
xlat
out
inc
dec
cmp
cmps
cmp
pop
pop
es
adc
dec
dec
test
and
hlt
mov
push
sub
lods
cmps
or
mov
cmps
repnz
or
cs
mov
cmps
mov
mov
sbb
and
xchg
fild
fstp
jmp
leave
add
add
cmps
add
and
pusha
scas
mov
out
aas
inc
int
pushf
ret
rcr
or
sbb
pop
(bad)
pop
fs
fimul
stos
sub
lahf
mov
movs
lds
mov
lahf
loop
push
mov
call
sbb
inc
shr
es
sbb
mov
dec
jmp
in
cmp
jne
xchg
or
(bad)
jne
inc
aas
rcr
push
nop
and
xchg
test
or
(bad)
or
sbb
sbb
and
imul
addr16
stc
(bad)
out
fiadd
popf
mov
dec
movs
hlt
(bad)
jg
mov
add
and
jecxz
(bad)
out
cdq
mov
pop
pop
mov
pop
jmp
iret
dec
out
pop
mov
(bad)
cmp
aad
adc
cmps
scas
(bad)
fcmove
cmps
push
inc
adc
jmp
test
ror
inc
pusha
jbe
(bad)
push
cmp
stos
rcl
push
popf
arpl
mov
pop
jg
retf
and
jmp
fcompp
jecxz
das
mov
test
adc
add
push
std
pop
dec
xor
div
inc
outs
xchg
xor
stc
add
in
leave
stos
jne
mov
mov
sahf
add
pop
mov
scas
call
lds
mov
in
or
jmp
lahf
or
or
jg
pop
aaa
lods
shl
push
loopne
dec
call
and
data16
bnd
fiadd
leave
pop
mov
out
outs
mov
lods
fwait
pop
jns
lahf
sbb
mov
lock
mov
pop
aam
and
sar
popf
jmp
mul
mov
test
data16
sahf
ficom
out
ins
mov
xlat
iret
aam
cwde
dec
fisttp
push
cmp
adc
dec
and
stos
and
mov
outs
or
cdq
test
or
or
(bad)
repnz
dec
addr16
sub
sub
ret
pop
lock
and
in
cli
dec
sbb
and
sar
lods
xchg
popf
cmps
or
mov
scas
cmc
jb
movs
push
push
adc
inc
and
mov
retf
mov
les
sahf
sbb
leave
pop
and
ret
loop
test
cli
or
push
mov
mov
lea
jne
pop
out
sbb
sub
mov
in
mov
sbb
dec
jl
popf
test
xor
jnp
push
leave
push
repnz
lahf
cmp
jno
inc
iret
(bad)
sub
iret
fs
fldlg2
and
xlat
cmp
ret
ret
and
cdq
fld
inc
sbb
xor
pop
jmp
icebp
sbb
push
std
jl
in
int
and
pop
stos
out
push
sbb
adc
inc
std
in
mov
(bad)
mov
mov
cmp
cdq
adc
lods
aad
mov
push
sbb
test
stc
mov
test
fstp
jecxz
pop
xor
lds
xor
mov
push
sbb
outs
or
xchg
adc
cmps
add
ins
or
fmul
adc
test
xchg
xchg
xor
out
add
cdq
xor
xchg
xchg
mov
cwde
cld
pop
out
ins
iret
outs
icebp
lahf
or
shr
adc
add
pop
add
sbb
add
popf
jmp
inc
pushf
push
push
loopne
adc
lea
imul
fsub
lods
in
and
ss
scas
jo
xchg
add
push
aam
push
sbb
js
sbb
dec
sub
(bad)
into
movs
xor
test
pop
dec
in
mov
jns
sub
fadd
imul
(bad)
pushf
imul
jnp
pop
fmul
fadd
sbb
xchg
in
fsubr
pop
fwait
ror
or
inc
add
clc
mov
out
sub
push
neg
lock
cmc
faddp
add
jp
call
call
cmp
cmps
js
add
xchg
test
movs
movs
sbb
mov
les
cmp
and
and
(bad)
test
aam
pop
cmc
pop
mov
jge
xor
or
cld
jne
leave
jo
cs
sti
loopne
dec
aad
and
mov
sub
and
lea
sub
or
das
inc
mov
push
popf
xchg
mov
jge
add
js
pop
test
push
push
mov
aaa
add
test
ins
das
stos
js
sbb
mov
cmp
leave
(bad)
test
cmps
mov
pop
push
xchg
mov
les
aad
cmps
pop
mov
dec
or
popf
call
inc
add
cmp
repz
fsub
mov
movs
or
add
add
bound
ficomp
cmc
sub
inc
cwde
xchg
sbb
lock
dec
aad
outs
jno
mov
mov
xchg
lahf
xor
test
pop
mov
pop
jmp
rcl
mov
and
test
(bad)
mov
cwde
mov
aad
ss
and
mov
(bad)
les
loopne
mov
pop
add
lods
int3
add
sub
or
mov
loope
and
sbb
adc
in
push
mov
fidivr
or
fistp
sub
push
adc
hlt
cdq
stos
gs
sbb
or
ss
jbe
inc
cwde
adc
mov
or
(bad)
mov
stc
out
loopne
sub
rcr
daa
or
sbb
out
ror
popa
xchg
popa
js
clc
in
sti
adc
push
or
(bad)
cmp
cmp
ds
and
jae
adc
pop
aad
ss
mov
sbb
shl
mov
iret
leave
xchg
sub
inc
rol
inc
std
jl
(bad)
lds
mov
adc
(bad)
mov
fstp
ins
push
and
jae
in
rcl
mov
stos
les
test
imul
lods
pushf
xchg
movs
push
add
or
mov
popf
fs
movs
adc
fisubr
addr16
stc
mov
jle
shr
sub
sahf
mov
or
pushf
pop
adc
dec
sub
fdiv
aas
xchg
dec
cmps
sbb
ret
ror
lods
jo
(bad)
sbb
cdq
call
imul
pop
dec
cmp
jge
in
sbb
cwde
mov
or
mov
clc
fstp
scas
mov
call
and
mov
js
mov
sub
xchg
xchg
lds
mov
pop
mov
ja
mov
(bad)
cmp
test
call
xchg
sub
mov
inc
cmp
xchg
sub
rcr
jl
fdivr
les
xchg
test
nop
mov
fild
daa
(bad)
xor
xor
and
popa
scas
mov
and
pusha
in
add
mov
mov
dec
cli
pop
ffree
mov
cdq
sbb
xchg
aaa
push
mov
or
push
adc
ret
inc
mov
cli
sbb
dec
xchg
test
sub
mov
lods
mov
or
retf
fistp
aad
loop
jmp
rcl
jo
mov
fadd
(bad)
ds
cmp
sar
pop
imul
push
sbb
call
pop
xlat
xchg
pop
dec
stos
ret
and
aas
(bad)
pushf
and
lea
std
icebp
stc
inc
movs
jo
clc
clc
cmps
cmps
inc
or
or
(bad)
jbe
inc
out
sbb
in
js
add
xchg
(bad)
add
cmp
mov
lahf
in
iret
stos
xchg
mov
mov
mov
add
or
popf
aam
jmp
mov
test
mov
xchg
in
arpl
push
xlat
jg
sahf
mov
icebp
je
movs
sub
stos
xchg
adc
fsub
clc
mov
and
xchg
sbb
test
movs
das
fldenv
mov
fs
push
out
lea
fwait
call
pop
dec
outs
addr16
lock
into
test
pop
pop
iret
movs
and
add
mov
sbb
xor
aam
movs
jbe
add
mov
into
xchg
push
imul
dec
jp
sbb
xchg
add
sub
xchg
or
(bad)
and
add
add
loope
clc
scas
lahf
jecxz
mov
fwait
retf
scas
int
dec
mov
xor
or
cs
jo
fwait
or
aaa
out
idiv
mov
test
test
cmps
fs
cmp
jns
mov
(bad)
mov
ins
xchg
and
(bad)
xchg
lods
test
(bad)
(bad)
out
sub
or
dec
mov
inc
lea
(bad)
and
hlt
mov
sqrtps
test
sbb
pop
mov
test
mov
cmp
or
pop
sar
mov
xchg
or
cmps
ds
mov
xor
dec
inc
xchg
aad
in
adc
repnz
popf
cld
sbb
mov
mov
inc
daa
aam
pop
xchg
fdiv
(bad)
ds
pop
jg
nop
sbb
cwde
and
push
fcmovnu
jle
xchg
lods
xchg
cdq
cmp
hlt
mov
push
fidivr
mov
mov
lods
neg
and
inc
hlt
ror
ja
sbb
pop
xchg
or
fsubp
or
inc
mov
in
mov
popf
pop
adc
pop
mov
idiv
and
inc
mov
jl
pop
sbb
pop
inc
les
out
ja
repz
cld
icebp
sub
icebp
iret
mov
mov
fwait
sbb
aas
sub
fiadd
stos
xchg
leave
fwait
mov
dec
test
popa
dec
xor
or
ja
add
outs
sti
daa
xlat
and
lods
out
xchg
mov
nop
jae
sub
mov
sub
shl
repz
popf
shl
fld
pop
ds
test
outs
and
pop
mov
sub
fsubr
and
ins
(bad)
mov
fcmovnbe
out
dec
xor
arpl
movs
sbb
xor
test
clc
xchg
loope
pop
mov
iret
fistp
pop
cmp
xor
clc
mov
fnsave
(bad)
out
cmp
int
call
test
push
test
loop
aad
idiv
jge
pop
push
(bad)
ret
dec
int3
pop
dec
lods
sub
scas
jp
mov
add
mov
add
cmp
jmp
mov
sub
cmp
cs
aam
mov
(bad)
add
call
pop
retf
sbb
xchg
xchg
pop
cmp
nop
or
les
and
ins
dec
sbb
xor
aas
std
ror
outs
or
scas
aad
sbb
dec
pop
adc
adc
(bad)
in
mov
dec
pop
enter
or
push
rcr
pushf
adc
(bad)
lea
gs
retf
push
in
mov
inc
fs
fdiv
ret
sbb
pop
pusha
loope
xchg
mov
inc
sbb
scas
test
lods
cmps
sbb
ret
test
in
fcmovnb
outs
lock
psubw
cmp
jb
imul
jo
(bad)
shl
pop
dec
jge
xchg
dec
cld
adc
jmp
and
out
cmps
add
cld
xor
out
outs
xchg
mov
(bad)
or
imul
sub
sti
sbb
aam
daa
xor
cmp
adc
inc
push
out
and
leave
jle
jnp
or
dec
movs
repnz
(bad)
jle
das
cdq
shr
out
mov
ins
out
sbb
and
movs
shl
cmp
inc
or
or
jnp
lock
xchg
lods
inc
retf
push
popf
test
cmps
pop
jne
inc
adc
test
addr16
jns
xchg
and
cmps
lea
sub
aas
loopne
(bad)
jns
mov
cmp
lods
es
and
int3
dec
pop
xor
xor
aad
sbb
xchg
sbb
and
es
and
mov
bound
ds
cmp
pushf
mov
inc
add
jbe
pusha
rcr
scas
mov
dec
or
ficomp
inc
repnz
sahf
loope
fwait
test
jmp
mov
xcrypt-cfb
cmps
movs
out
fmul
sbb
dec
push
add
dec
in
add
int
inc
and
mov
sub
int
fistp
pop
movs
cmps
jmp
push
mov
pop
cmp
xchg
dec
js
or
call
pop
aad
out
ror
std
mov
mov
add
int
xchg
or
mov
stos
mov
imul
das
ins
mov
inc
cld
pusha
xchg
les
xor
sub
pusha
cmp
xchg
push
enter
mov
pop
xor
xchg
test
mov
cdq
popf
out
scas
inc
push
ins
jae
xor
xor
leave
repnz
out
stc
into
jne
daa
in
call
outs
ins
nop
ins
in
dec
inc
(bad)
xchg
or
ret
popf
sub
out
sbb
lods
scas
jge
xor
sbb
outs
adc
sub
aam
pushf
mov
xlat
pop
mov
xor
aas
sub
inc
dec
cmc
aam
xchg
xchg
(bad)
(bad)
mov
sar
inc
jp
ror
or
arpl
ret
sub
mov
(bad)
ds
add
ins
js
dec
xor
cmps
xchg
dec
call
add
adc
sbb
sub
retf
pushf
lods
bound
push
mov
mov
repz
fisttp
test
pop
mov
out
sar
mov
mov
jge
dec
and
fld
pop
add
sub
cmp
(bad)
imul
xchg
fs
cmps
call
and
movs
cmp
addr16
sub
inc
mov
sbb
or
xchg
xchg
xlat
stc
xchg
shl
call
mov
sbb
sub
(bad)
je
enter
imul
pop
dec
lahf
push
addr16
sub
scas
(bad)
cmp
std
popa
and
popf
(bad)
fiadd
outs
jge
sub
cwde
mov
sbb
pop
adc
adc
movs
mov
sbb
or
pop
mov
mov
fistp
add
test
or
lods
and
lods
fstp
imul
sub
cli
cmc
mul
or
adc
cmp
sbb
stos
data16
int3
test
in
fwait
mov
lahf
cmp
push
pop
sbb
test
test
(bad)
call
ja
clc
ins
(bad)
pop
dec
clc
xor
out
cmps
enter
in
push
cmpxchg
arpl
fbld
out
lds
imul
fiadd
(bad)
(bad)
setno
jecxz
inc
pushf
aad
bound
std
ret
data16
adc
push
lock
jmp
dec
push
inc
push
out
loopne
clc
not
adc
mov
nop
push
dec
sub
sti
pop
(bad)
sub
mov
bnd
lahf
jl
mov
int3
cmp
pop
mov
and
daa
cmc
jns
rol
sbb
cli
or
jmp
(bad)
iret
fs
fistp
push
frstor
jae
(bad)
jae
cmps
sti
pop
jb
pusha
retf
pop
fidiv
icebp
int3
int
popa
data16
dec
mov
in
jle
lods
sbb
jo
data16
push
out
xchg
mov
leave
(bad)
dec
bound
and
pop
jb
mov
cdq
fs
mov
mov
fstp
jle
rol
push
sbb
inc
pop
ret
jmp
adc
xor
xor
xor
push
lds
or
arpl
inc
mov
outs
int
mov
lea
lea
lea
lea
(bad)
iret
lea
lea
lea
sbb
dec
jle
test
push
pushf
and
mov
fsub
pop
jae
dec
cmps
pop
sbb
mov
jae
mov
adc
jns
data16
fist
cmp
js
imul
jb
mul
and
cld
outs
cmps
xor
retf
add
std
retf
jbe
inc
addr16
out
push
test
ror
clc
lahf
mov
stc
adc
les
test
dec
cmp
mov
dec
inc
aad
jmp
enter
(bad)
fcomip
sbb
stc
pop
sar
addr16
dec
and
dec
fstp
push
(bad)
out
xchg
jno
inc
mov
outs
push
out
adc
or
ja
sbb
fs
jle
es
in
mov
loope
pop
xchg
pop
sbb
or
fisubr
jg
pop
dec
pusha
xor
pusha
pusha
mov
loop
neg
pop
push
and
rcl
xor
cmovp
push
addr16
clc
sub
sbb
sub
mul
or
pushf
or
(bad)
xor
mov
loop
out
jnp
xchg
inc
and
jp
mov
add
cli
pop
jmp
imul
mov
fstp
nop
inc
fdiv
jg
pop
and
jno
add
adc
cdq
jne
jbe
out
cld
adc
leave
lock
and
xchg
jno
adc
dec
outs
icebp
(bad)
mov
push
or
add
lahf
mov
cmp
les
pop
mov
pusha
pop
push
jl
fldcw
nop
or
fdivr
add
jg
(bad)
mov
js
nop
lds
mov
idiv
pop
adc
sub
movs
test
loopne
push
call
push
dec
push
retf
jle
(bad)
mov
outs
adc
push
mov
mov
or
lds
inc
cmp
mov
hlt
mov
xlat
mov
loop
add
scas
and
(bad)
in
jl
js
in
into
mov
xor
fucom
mov
mov
cli
lods
movs
mov
sub
inc
aad
sti
cmp
add
mov
jbe
add
pop
push
xor
cmp
mov
test
jg
not
jbe
sbb
nop
adc
inc
sub
push
ins
imul
adc
call
jno
sub
fadd
lds
call
xchg
test
inc
call
mov
sbb
out
out
loope
daa
jne
idiv
popa
jnp
div
adc
les
push
jo
mov
ins
pop
mov
push
push
xor
repnz
shl
jecxz
and
mov
mov
call
fcomp
test
iret
adc
pop
retf
js
fistp
cmp
xor
jmp
add
add
push
adc
or
mov
pop
stos
push
xor
shl
stos
push
and
or
cmp
cmps
or
xor
retf
adc
cmp
jle
dec
xchg
sub
add
jmp
shr
dec
mov
sub
ja
push
jne
shl
xchg
(bad)
mov
fsubr
fs
mov
inc
or
mov
xchg
pop
enter
repz
pop
iret
jns
jmp
inc
rcl
(bad)
jecxz
adc
adc
xor
out
jnp
shl
jp
imul
imul
or
(bad)
cmp
mov
sbb
or
fild
xor
cmps
iret
in
test
and
lds
xchg
jmp
pop
pushf
movs
inc
js
xchg
mov
imul
and
add
mov
mov
lock
fst
xchg
in
inc
out
or
push
retf
fs
lock
out
push
loopne
mov
xor
test
jmp
jmp
retf
cmp
(bad)
push
in
les
fwait
out
dec
std
sub
cmp
and
je
and
fs
stos
call
jo
inc
arpl
dec
sar
in
xchg
xor
xchg
test
add
cmp
mov
lods
inc
inc
xchg
popf
fiadd
mov
push
sub
jae
mov
jmp
push
push
add
into
inc
cdq
aad
fcomp
push
or
push
in
mov
cmps
int3
xchg
push
loop
retf
loope
nop
mov
mov
int3
outs
inc
cld
(bad)
adc
clc
add
retf
and
inc
mov
stos
dec
ret
cmps
loop
shl
cmp
jbe
inc
jg
dec
iret
jnp
cld
test
stos
jg
pusha
shr
(bad)
icebp
dec
test
mov
push
jl
add
dec
inc
jno
adc
adc
or
jnp
repnz
mov
or
xchg
mov
mov
xchg
sti
pop
adc
inc
fst
sub
push
mov
or
jle
stos
(bad)
sub
daa
fidivr
daa
ret
xlat
jg
xor
jl
add
retf
daa
jo
xchg
popa
cmc
inc
xchg
adc
sti
jo
iret
sbb
push
xchg
(bad)
jle
mov
call
retf
mov
inc
push
fimul
or
pop
into
push
mov
sbb
sub
mov
sub
dec
xor
aas
dec
sbb
in
pop
mov
scas
sbb
push
lds
outs
xchg
in
hlt
cmp
mov
call
push
sub
shl
retf
inc
pop
mov
mov
rol
inc
push
add
jno
pop
dec
jne
outs
aaa
add
push
call
(bad)
mov
loope
vmread
jg
inc
jnp
outs
call
clc
jne
pop
shl
stc
scas
pop
(bad)
and
sahf
jmp
shl
cmp
inc
fdivr
ins
dec
inc
ds
movs
mov
shr
xchg
fs
sub
scas
dec
and
xchg
in
retf
aad
retf
clc
lahf
cmps
outs
add
test
and
pop
cdq
pop
popa
adc
adc
mov
pop
xchg
aas
fistp
jne
std
jmp
jmp
je
rcr
je
xor
ss
daa
int
(bad)
mov
add
movs
pop
in
and
fwait
mov
jecxz
push
and
call
pop
push
movs
mov
inc
jno
fbstp
js
mov
cmp
lock
mul
aaa
and
adc
aam
ret
push
adc
(bad)
cdq
or
mov
repnz
inc
cmp
mov
lgs
push
push
enter
add
sti
repz
jp
outs
cwde
jle
int
push
int3
push
sbb
ds
and
push
mov
pop
les
jp
(bad)
das
adc
xchg
loop
mov
cmp
mov
into
inc
sbb
mov
cmp
pop
or
pop
(bad)
fldcw
shl
outs
scas
lock
out
imul
mov
pusha
xor
mov
adc
push
add
ret
mov
dec
sbb
icebp
inc
mov
jae
and
mov
outs
lock
gs
pop
or
ins
cmp
push
sub
pop
jne
adc
mov
jp
ret
jno
jge
or
imul
sbb
inc
cmc
pusha
fwait
dec
sub
ret
adc
inc
jb
std
icebp
and
test
jge
sub
dec
add
sub
cmps
je
push
leave
adc
dec
xchg
push
icebp
ins
mov
sahf
cmp
xchg
inc
lock
jg
xor
ret
and
in
hlt
popf
sub
and
adc
xchg
sti
lods
jge
xor
mov
mov
xchg
inc
push
jp
mov
pop
stos
stos
pushf
or
inc
dec
arpl
sbb
loop
std
mov
mov
pop
pop
cmp
inc
fstp
pop
pop
loopne
xor
pop
sbb
sub
and
je
fst
and
(bad)
loopne
or
test
test
fsubr
mov
(bad)
rol
lods
sbb
cmp
push
sahf
cwde
mov
or
test
xchg
jge
cli
fisub
xchg
mov
test
leave
or
call
imul
sar
add
test
jge
cli
add
idiv
repz
sbb
xchg
jg
jne
ds
jbe
jno
adc
call
jg
xchg
mov
aaa
ds
cmp
outs
adc
les
call
add
ret
inc
outs
sbb
outs
inc
xchg
std
jecxz
mov
xlat
xchg
pop
mov
jle
push
movs
inc
cmp
sub
fwait
or
aad
sahf
cmp
fnstcw
dec
inc
in
push
xchg
out
xchg
adc
mov
adc
inc
mov
dec
cli
movs
jns
xchg
dec
retf
jbe
jae
rol
pop
lods
push
inc
cwde
loope
arpl
rol
inc
cmp
sar
push
popf
and
adc
cmp
pop
inc
add
daa
pop
mov
xchg
movs
jmp
jne
pop
test
mov
test
dec
fsubr
fwait
mov
retf
cmc
and
add
test
adc
mov
push
js
test
xchg
jo
pop
fbstp
cmp
stos
pop
mov
test
xor
dec
mov
int
retf
jnp
pop
push
test
push
aad
sar
mov
dec
push
adc
dec
mov
cdq
repz
pusha
cmp
inc
call
push
mov
cmp
cmp
loopne
out
xchg
adc
jae
add
cld
mov
test
add
out
lods
inc
in
dec
popa
push
xchg
fwait
pop
inc
sbb
test
jmp
lock
bnd
fadd
sbb
or
push
jmp
or
mov
aas
xchg
arpl
mov
jno
mov
xor
ins
repnz
jno
jle
mov
out
mov
pop
push
push
cmps
icebp
or
cmp
ret
call
add
mul
xor
xchg
out
jnp
xchg
xor
lahf
jo
push
lock
das
inc
cwde
stc
enter
cmc
outs
jne
and
call
dec
std
and
sbb
cmc
jge
fwait
cdq
out
xchg
(bad)
mov
dec
inc
jl
icebp
sbb
call
inc
jle
adc
xchg
adc
es
sbb
fdivr
not
inc
popa
pop
nop
ret
add
push
inc
call
add
das
das
cmp
cmp
xchg
adc
jb
xchg
ins
or
or
jmp
outs
dec
push
int
jae
(bad)
fisub
xor
inc
les
push
pop
icebp
outs
or
dec
inc
sbb
add
std
xchg
test
jns
mov
into
jmp
retf
xor
hlt
add
scas
jg
adc
out
add
rcr
add
xor
mov
sbb
pop
pop
or
into
test
cmp
dec
ret
add
sbb
call
sub
fs
sub
icebp
sub
sub
push
cs
(bad)
out
sbb
push
jne
xchg
cs
pop
stc
daa
or
or
aas
mov
test
mov
xlat
mov
adc
enter
inc
je
cmc
not
(bad)
sub
pop
add
jle
jo
popf
ss
cdq
jae
cmp
and
jge
ret
jmp
adc
xchg
pushf
jecxz
int3
repnz
in
push
jbe
call
push
in
mov
stos
push
cld
stos
fistp
adc
xchg
mov
dec
xchg
dec
pusha
imul
xchg
hlt
mov
mov
sti
jno
xor
add
jo
imul
pushf
out
jmp
arpl
imul
inc
jne
mov
dec
js
das
les
sar
and
push
pop
mov
push
inc
add
dec
punpckhbw
fadd
daa
cmc
into
push
cmp
inc
outs
les
pop
inc
test
pushf
jno
mov
sbb
cmc
rcl
inc
jb
fisubr
mov
retf
das
inc
push
retf
sbb
jbe
add
push
and
out
dec
test
lods
pop
fst
repnz
xlat
stos
repnz
and
fcom
(bad)
int
rcl
daa
push
jbe
lods
outs
xchg
push
leave
sti
fs
sar
loope
mov
mov
mov
dec
push
dec
cwde
adc
movs
push
mov
push
sub
mov
cli
dec
xor
inc
fwait
adc
mov
outs
cs
mov
popa
mov
mov
je
imul
push
inc
ficom
mov
add
out
inc
cmps
xchg
jb
mov
scas
inc
xchg
movs
test
dec
jne
push
(bad)
repnz
xor
sbb
cmp
int3
sti
lods
jl
std
jle
push
push
pop
mov
cmps
sub
mov
out
data16
fsubr
xchg
mov
call
mov
call
inc
mov
cld
adc
add
repz
mov
call
mov
out
jg
sub
mov
call
call
aaa
fisubr
hlt
mov
idiv
hlt
(bad)
jno
xchg
add
sar
repnz
lods
xor
dec
ds
and
call
(bad)
jno
je
inc
pop
(bad)
out
scas
cmp
shr
int
rcr
and
retf
cmp
dec
pop
or
xchg
mov
cwde
xor
call
ror
inc
into
pop
mov
mov
and
icebp
jmp
and
push
xchg
fisttp
adc
xchg
xchg
sbb
cmps
inc
icebp
xchg
test
movs
dec
pushf
push
push
push
enter
jns
jmp
(bad)
jbe
mov
aaa
cmp
xchg
daa
add
push
jae
in
test
jb
xor
jne
stos
xchg
jmp
pop
pop
dec
imul
xchg
imul
sub
iret
mov
jns
popf
jg
fisttp
sar
and
adc
mov
in
jg
xchg
lahf
fmulp
into
out
inc
outs
pop
mov
pop
pop
mov
das
or
inc
shl
dec
bound
aas
not
out
push
jecxz
push
pop
push
ins
loop
fs
xlat
jno
cmps
mov
ins
in
mov
dec
stos
and
sub
pop
cmc
loopne
outs
add
repz
sti
int
push
clc
xchg
test
repnz
mov
cld
ret
push
sub
xchg
rcr
sar
dec
add
js
jecxz
scas
lods
pop
cmps
cmp
daa
jl
inc
les
nop
test
jbe
mov
add
xchg
xchg
sahf
stc
enter
jg
push
fwait
cmps
repz
fdiv
sahf
xor
rol
inc
adc
repz
retf
mov
iret
xchg
push
ret
les
jge
icebp
push
mov
loopne
xchg
sti
pop
cmps
cli
push
mov
pop
push
jl
jp
dec
and
mov
shl
jg
pop
dec
pop
pusha
push
sub
mov
add
push
inc
xchg
lock
pop
inc
popf
add
xor
mov
jnp
jecxz
xor
xlat
sub
arpl
xchg
push
shr
dec
add
sub
jns
mov
mov
add
retf
jno
sbb
adc
inc
call
leave
addr16
xchg
cmp
dec
xchg
pop
add
pop
push
movs
lock
push
jp
mov
aad
sbb
add
cmc
hlt
mov
cdq
jmp
imul
ret
ret
push
push
mov
data16
mov
cld
xchg
test
pushf
test
xchg
lea
lea
lea
lea
lea
lea
xchg
push
sub
call
or
lea
lea
int
push
lea
mov
mov
push
lea
mov
lea
sbb
xchg
mov
jne
push
adc
outs
fisubr
and
inc
inc
mov
mov
xchg
lea
jmp
push
mov
fcmovnu
pusha
push
jnp
lahf
jecxz
push
out
pop
pusha
fsubr
pusha
and
push
fnsave
and
inc
push
jne
push
jecxz
push
out
xchg
ds
pop
xchg
arpl
rcr
jne
pop
push
jl
pop
idiv
push
mov
and
out
cs
fisubr
(bad)
lahf
jo
push
mov
cmps
mov
mov
sub
mov
loope
mov
mov
out
jae
std
pop
xor
pop
xchg
addr16
call
lea
lea
jb
dec
push
xor
lea
inc
ins
inc
je
(bad)
fabs
sbb
and
or
cld
jae
jb
fstp
nop
mov
pop
ja
retf
pusha
adc
adc
jg
pop
fwait
(bad)
mov
test
xor
pop
sub
jl
jle
sahf
pop
or
lock
imul
mov
push
mov
mov
inc
movs
xor
enter
sbb
int
pushf
pop
int3
scas
jb
inc
mov
cmp
add
xor
ja
std
fild
dec
aam
xchg
add
adc
mov
and
inc
sbb
xor
mov
sbb
xor
rcl
mov
imul
imul
cs
sbb
aaa
scas
mov
fcomp
out
fidiv
and
jmp
imul
test
div
pop
jmp
add
lds
cmc
cmp
fdivr
push
dec
dec
in
lods
in
enter
push
xor
jecxz
dec
les
pop
add
es
xchg
pop
fstp
(bad)
xlat
aad
sub
or
jmp
and
pop
jg
or
add
adc
mov
les
xchg
imul
aaa
ret
fiadd
cmps
adc
fdivr
push
sub
pushf
jmp
call
cmp
xchg
push
inc
rcl
dec
enter
pop
mov
jb
loope
cdq
push
sbb
cmp
xor
xor
enter
idiv
cmp
jle
and
push
cwde
je
sbb
call
sub
popa
xchg
and
sbb
shr
fcom
mov
push
or
inc
push
adc
cmc
sub
movs
in
ret
add
dec
push
lds
push
test
jbe
sub
sbb
aam
cwde
jmp
pop
nop
hlt
das
pop
leave
jle
out
xor
mov
jle
mov
cmps
sub
sbb
or
cmp
jbe
(bad)
cld
mov
retf
mov
(bad)
shl
xor
add
loop
pop
fiadd
sbb
iret
test
pop
or
and
rcr
lahf
pop
push
sub
xchg
cmp
aad
mov
push
pop
div
out
into
imul
neg
hlt
cmp
stc
adc
lock
loopne
pop
fnstsw
pop
ins
sub
shr
cwde
jbe
mov
cmp
repnz
sub
jb
inc
push
outs
retf
mov
mov
outs
ficomp
inc
xchg
and
loopne
movs
sbb
bound
pop
jmp
sub
sbb
in
pushf
jle
iret
add
jns
cmp
xchg
xlat
out
push
pop
gs
cmp
xor
and
in
dec
and
in
sub
rcr
pop
adc
dec
sbb
and
pop
adc
push
dec
data16
movs
mov
xchg
test
les
in
loope
ret
and
sub
mov
add
arpl
and
test
retf
shl
jns
sar
pop
mov
int3
push
jo
and
add
cmp
scas
mov
or
ja
or
cs
std
repz
imul
xchg
mov
inc
jge
dec
movs
push
and
xchg
cmp
jns
(bad)
(bad)
pop
xlat
imul
fs
cld
(bad)
mov
cli
xchg
add
out
fimul
js
jmp
hlt
cli
and
push
sub
pop
jnp
out
adc
push
mov
adc
sti
cmps
xchg
mov
fdiv
rcr
ss
je
xor
(bad)
dec
xchg
mov
cmps
clc
cmp
icebp
fimul
jecxz
popf
dec
test
addr16
jl
add
pusha
repz
and
in
xchg
les
jecxz
mov
dec
cmp
out
outs
aas
push
jae
mov
lods
loope
push
aaa
and
shr
mov
cmp
imul
neg
jo
ja
fwait
jp
lahf
mov
arpl
fwait
add
fwait
mov
push
pop
out
jmp
sbb
(bad)
and
out
xchg
lods
inc
repnz
add
xor
or
mov
mov
pop
push
push
mov
mov
into
(bad)
jb
arpl
(bad)
out
aam
sbb
test
pop
gs
pusha
inc
jg
mov
sahf
mov
and
mov
mov
in
out
idiv
sub
cdq
je
and
add
nop
gs
ds
cmp
in
stc
cmp
ret
jge
scas
or
aas
mov
pop
sub
cli
pop
sub
fst
jo
fsub
inc
pop
xor
imul
mov
xor
daa
cmp
jmp
xchg
shr
sbb
xor
into
popa
push
mov
mov
sbb
jmp
arpl
mov
cmp
push
scas
cmp
outs
xor
stc
ins
iret
sbb
pop
jbe
sti
je
sbb
fdiv
or
push
clc
lock
int
and
inc
imul
xor
out
rcr
mov
pop
xchg
sub
mov
aas
mov
icebp
cmp
push
cwde
add
pop
arpl
hlt
pop
in
add
push
dec
mov
or
mov
into
xor
lea
outs
mov
inc
dec
sub
mov
loopne
movs
fsubr
cmps
pop
push
loopne
mov
fcmovb
cld
xchg
and
fs
and
adc
ficom
loope
into
sbb
pop
pop
call
jge
jl
sub
enter
fbstp
xor
cdq
int
push
push
xchg
push
shr
ins
or
xchg
mov
rcl
arpl
loop
jbe
(bad)
mov
push
pop
dec
sub
fs
mov
pop
mov
mov
enter
mov
sti
push
lock
cmp
push
inc
shr
mov
or
stc
xor
hlt
dec
in
push
das
xor
pop
xchg
mov
loope
repnz
add
push
mov
xchg
jnp
je
fdivr
inc
test
mov
adc
stc
iret
daa
pushf
test
jb
stos
mov
cmc
pop
adc
and
imul
sub
cld
jp
push
psrad
fdiv
xor
fadd
ss
into
hlt
dec
jecxz
movs
out
aad
xchg
push
loopne
inc
call
test
sub
adc
ret
daa
pop
std
sub
shl
ds
and
sub
mov
scas
cmp
addr16
retf
sbb
aaa
push
push
leave
in
ins
xchg
inc
imul
mov
aad
xchg
shl
sub
and
fs
ss
addr16
jecxz
in
sub
xor
aaa
imul
sbb
lds
or
adc
cld
sub
int
add
fsubr
test
adc
sub
(bad)
cmp
addr16
jb
sbb
pop
xor
repnz
adc
push
xchg
cmp
mov
in
sbb
std
dec
sti
loop
not
stos
loope
add
push
addr16
inc
ds
out
stos
mov
push
data16
repz
inc
push
mov
leave
dec
je
mov
ss
sbb
adc
inc
es
cmp
fidiv
loopne
xor
push
bound
fisub
movs
std
xchg
and
pusha
mov
shl
mov
cmp
inc
and
adc
mov
lock
pop
mov
js
test
lock
push
fiadd
bound
retf
cmp
repz
fcomp
test
push
xor
push
pusha
add
xor
scas
jne
(bad)
in
jg
fdiv
sbb
repz
hlt
cmp
mov
loopne
test
mov
ret
mov
adc
jecxz
frstor
outs
arpl
in
sahf
jb
mov
lods
mov
dec
mov
mov
cmps
sub
mov
add
xchg
pop
mov
xchg
out
in
inc
leave
mov
mov
(bad)
retf
shl
mov
cmps
xor
inc
hlt
xchg
in
mov
cs
not
dec
outs
xor
ds
out
mov
dec
arpl
adc
les
mov
in
pop
stc
loope
or
push
cmp
ja
fimul
push
std
mov
jne
dec
adc
push
mov
mov
mov
imul
add
test
fwait
rcr
push
dec
jmp
outs
and
(bad)
xlat
(bad)
js
jae
add
push
(bad)
das
push
jmp
jmp
cdq
les
aad
sbb
cmp
or
add
jns
aad
loopne
cmps
push
ins
fnstsw
outs
push
mov
jns
in
retf
cmp
sbb
ret
mov
sahf
sar
mov
pop
mov
jp
fwait
xor
popa
jb
test
or
popa
mov
scas
mov
push
mov
stos
das
cmp
sub
(bad)
test
pop
inc
xor
push
sbb
dec
pop
jnp
jnp
xor
pop
jl
xchg
scas
jbe
sti
mov
lock
sub
jae
cli
mov
cmp
fcomi
sbb
div
out
push
pushf
fmulp
scas
or
test
push
xchg
je
cmp
jb
jl
push
xor
stos
xchg
popf
fmul
and
dec
pushf
mov
push
cli
test
lods
leave
jnp
jge
mov
pop
ror
fsubr
inc
fld
loope
clc
movs
mov
adc
pop
pop
push
ror
jb
add
xchg
test
dec
int3
mov
sti
cld
and
test
cmps
in
fiadd
xlat
inc
mov
rcr
loope
sti
pusha
pop
or
ds
cmps
sbb
push
jg
sbb
push
pop
dec
sub
or
ret
cli
add
data16
jns
push
sub
daa
xor
mov
repz
stos
sub
js
movs
or
dec
mov
(bad)
adc
loop
dec
js
out
rcr
scas
iret
retf
ret
dec
sar
sub
push
cdq
fwait
push
ja
ret
add
mov
jo
loope
daa
sbb
mov
jl
dec
mov
inc
cmps
jo
gs
push
pusha
push
inc
imul
stos
xor
jo
shr
adc
push
add
outs
fmul
adc
jle
add
pop
hlt
xchg
out
out
imul
inc
xchg
mov
jl
retf
or
ins
xor
into
rcr
dec
test
mov
lds
mov
outs
js
or
mov
pop
fmul
(bad)
pop
mov
mov
jecxz
xchg
sahf
ret
sbb
jo
add
push
sub
out
adc
xchg
or
mov
popa
mov
fisubr
mov
sbb
dec
sti
or
mov
cmps
push
inc
jno
sub
jg
dec
stos
scas
pusha
rcr
cmp
jbe
sahf
jne
jne
adc
push
jne
and
xor
call
int
mov
mov
pop
xchg
mov
pushf
sahf
cld
jbe
xchg
adc
dec
test
push
push
and
mov
test
xor
inc
shl
push
cmp
out
je
add
ret
and
cmp
dec
jbe
ins
cmp
shl
push
jmp
(bad)
outs
and
xor
jle
pop
dec
cmp
sub
add
(bad)
inc
(bad)
arpl
xor
xor
sbb
repnz
inc
mov
push
adc
cld
bound
xchg
pop
or
clc
jns
mov
aaa
stos
and
mov
jo
mov
scas
pop
pushf
fwait
pop
ret
inc
(bad)
dec
dec
cwde
inc
mov
jnp
clc
mov
out
and
sahf
sti
mov
std
call
sti
adc
push
add
lods
dec
outs
push
out
cmp
sbb
mov
sar
jp
mov
imul
sub
data16
shl
fst
push
(bad)
xchg
popa
icebp
addr16
in
outs
inc
out
dec
mov
fisubr
scas
stc
daa
mov
push
outs
pushf
push
xor
adc
push
or
xor
add
xchg
add
adc
or
adc
sti
popf
push
(bad)
jg
(bad)
sar
adc
adc
repnz
loope
push
jae
mov
pop
sub
fisubr
movs
(bad)
push
mov
pop
lahf
(bad)
sti
jmp
pop
sbb
add
int
xchg
sar
dec
jno
sub
push
enter
mov
jo
push
xchg
call
fisub
scas
ja
or
jno
or
xor
das
and
or
mov
push
rol
mov
pop
mov
loop
outs
jle
bound
jnp
xor
in
lea
lea
(bad)
int
mov
dec
ror
lea
lea
lea
lea
lea
(bad)
in
lea
mov
(bad)
aam
(bad)
in
mov
lea
lea
lea
sub
out
aad
cmp
popa
mov
int
test
mov
mov
ror
std
lea
lea
lods
ins
ja
inc
jge
popf
(bad)
std
(bad)
ror
mov
xchg
dec
lea
lea
or
push
cmps
fistp
lea
sub
iret
mov
(bad)
lods
sbb
sbb
xchg
mov
pop
mov
repnz
jae
jno
in
lea
(bad)
retf
cmc
or
(bad)
mov
test
cld
mov
sub
loopne
adc
mov
fadd
sbb
add
cmps
xchg
xor
(bad)
mov
cmp
mov
movs
pop
mov
inc
es
in
mov
or
or
push
and
mov
pop
pop
sbb
xor
xlat
dec
and
and
mov
push
inc
pop
push
leave
push
cmps
stc
xchg
xchg
dec
sub
in
pop
mov
test
adc
je
out
push
push
pop
aas
mov
(bad)
stos
xchg
imul
push
add
int3
retf
pop
stos
jb
adc
cmps
cmp
xor
dec
xor
add
retf
mov
and
ins
pop
imul
or
ficom
add
arpl
lock
or
add
dec
adc
xchg
data16
add
loope
sbb
into
dec
mov
add
jne
sbb
test
mov
hlt
outs
or
(bad)
xor
scas
jo
pop
aaa
sbb
push
add
bound
in
cmp
inc
mov
jmp
(bad)
cmp
mov
inc
sbb
jo
das
mov
sub
leave
dec
mov
fsub
sahf
mov
push
push
xor
cli
jae
rol
lahf
mov
idiv
sub
or
hlt
sti
pop
fmul
xor
inc
push
jne
and
jae
retf
sbb
inc
jnp
ror
mov
fidiv
sbb
push
mov
lock
sahf
jmp
push
jg
std
mov
push
mov
xor
xor
mov
frstor
pop
cld
mov
pop
mov
retf
(bad)
je
call
jae
icebp
cmps
jg
adc
in
int3
pusha
sbb
or
mov
jbe
ret
mov
vmwrite
sbb
sub
lods
jb
inc
ror
ins
jns
cmp
and
jns
mov
out
pop
fild
(bad)
je
mov
std
loope
sbb
ror
jmp
push
arpl
cs
sbb
adc
jg
test
mov
mov
imul
mov
jecxz
cmp
ret
push
sub
cmp
stos
fsub
rcr
(bad)
cmc
test
adc
ret
lods
rcr
inc
lds
inc
mov
jb
int
cmp
sub
fcmovne
xchg
(bad)
jnp
test
fimul
mov
inc
ficomp
dec
out
stc
jecxz
idiv
test
mov
cmps
in
sub
fild
outs
adc
push
sbb
or
dec
xor
enter
xchg
out
cmp
and
cmc
add
mov
dec
scas
cmps
ret
movs
fistp
or
add
(bad)
in
mov
mov
mov
test
dec
xor
cmp
and
dec
add
movs
adc
cld
inc
mov
sbb
inc
imul
cmp
mov
push
rcl
sub
mov
inc
int
shr
fwait
pop
xor
sar
ret
mov
cmp
rol
aam
pop
pusha
cmc
push
add
scas
xchg
inc
in
mov
push
jl
or
and
push
aam
mov
stc
push
xchg
iret
jo
pop
in
int
mov
push
icebp
cld
pushw
pop
cs
popa
test
icebp
xlat
rcr
push
retf
aas
add
sub
sub
pop
xchg
inc
or
les
ja
mov
xchg
enter
cmp
cs
popa
ds
cmp
jne
lods
mov
xor
ss
push
fmul
repz
adc
xchg
in
das
push
loopne
mov
inc
xchg
mov
cmp
or
adc
mov
(bad)
outs
mov
jge
and
sti
arpl
mov
mov
into
cmp
aas
or
cmp
and
mov
sti
(bad)
addr16
dec
push
sbb
mov
dec
outs
cmp
test
mov
jo
cmp
xor
loop
dec
sbb
or
add
out
push
xchg
fist
retf
scas
jo
out
movs
popf
cld
rcl
pop
or
popa
sbb
mov
(bad)
rcr
jl
push
rcl
sbb
add
mov
fistp
cmp
dec
xchg
sahf
xlat
jmp
jmp
sub
add
int3
push
cdq
cli
stos
and
xor
pop
(bad)
addr16
xchg
push
jo
jmp
pop
ins
ds
lea
(bad)
add
fidiv
cmp
push
push
push
mov
adc
jo
hlt
cmp
push
sub
xchg
call
ss
xchg
in
daa
mov
popa
fsub
add
mov
mov
pusha
mov
sub
mov
or
push
push
sbb
(bad)
(bad)
hlt
aad
push
aam
fisub
xor
pop
loopne
(bad)
xor
sar
add
jb
pop
xor
mov
stos
rol
jle
imul
xor
arpl
(bad)
inc
inc
xor
shl
jmp
and
ss
mov
ret
jnp
ja
into
xor
popa
movs
dec
mov
sub
xchg
push
cmp
bound
jle
inc
cs
repnz
test
push
shl
xchg
jmp
cmp
pop
sbb
and
push
sar
nop
sub
bound
mov
xchg
and
cmp
mov
jbe
jmp
adc
retf
rcr
or
out
mov
xchg
fnstcw
outs
pop
arpl
jg
cs
pop
and
or
push
test
inc
aam
leave
mov
push
imul
repz
cmc
imul
cld
push
add
enter
lods
test
repnz
pop
cmp
mov
popf
cmp
mov
push
not
addr16
(bad)
jg
sub
bound
stc
xchg
cs
or
cmc
inc
sub
dec
add
or
into
aad
and
mov
mov
and
call
stos
cli
sbb
jmp
or
out
push
inc
repz
xor
idiv
jae
mov
sub
sahf
jo
xor
ds
jo
push
outs
mov
or
test
sub
inc
or
test
fistp
(bad)
stc
sar
inc
repnz
mov
repnz
fs
loop
(bad)
cmp
pop
movs
cld
xor
push
aas
mov
dec
popa
sbb
in
into
sahf
cmps
push
mov
xlat
inc
mov
xchg
dec
or
inc
push
in
mov
ret
pop
jl
arpl
stc
hlt
in
stc
inc
or
pop
mov
popf
push
fidiv
lock
pushf
jno
cmc
jbe
jge
xlat
cmps
mov
or
jge
xlat
jmp
jns
adc
mov
popf
dec
push
(bad)
enter
addr16
sub
xchg
mov
pop
(bad)
adc
fbld
arpl
add
cmp
xor
cwde
imul
push
pop
mov
adc
sbb
xlat
aam
and
xor
test
push
add
cld
cs
ins
loope
push
sbb
adc
inc
fdivr
ret
mov
dec
sub
out
jno
mov
dec
dec
nop
bound
cld
push
into
xchg
ja
dec
or
dec
xor
fnsave
test
(bad)
pop
jl
inc
dec
inc
fwait
push
fcos
loopne
rol
mov
lahf
cmc
adc
jmp
add
or
icebp
in
mov
gs
cmp
ds
js
pop
xor
mov
cmps
inc
dec
mov
ret
loop
shl
aaa
in
push
ja
dec
inc
push
in
inc
add
push
lock
fs
out
ss
loope
imul
push
mov
arpl
cdq
(bad)
mul
push
mov
rol
inc
jge
sub
or
jmp
addr16
fwait
mov
div
jl
int
retf
gs
pop
mov
sub
jo
arpl
dec
mov
loope
xchg
push
inc
cmp
cmp
ds
xor
bound
hlt
sbb
aaa
ds
ret
ss
rcl
sbb
repnz
or
jge
dec
int
je
hlt
ss
clc
jne
jl
xor
cmp
dec
in
ins
aaa
fadd
add
loope
shl
adc
dec
test
xchg
test
xor
pop
test
mov
adc
stos
ror
cs
push
and
sahf
test
xchg
pop
dec
xchg
imul
dec
in
iret
cmp
imul
(bad)
ins
inc
adc
pusha
jg
mov
into
sub
loopne
lahf
mov
or
add
push
push
mov
adc
stc
out
xchg
arpl
mov
sub
and
loope
push
mov
repz
push
jge
fwait
mov
bound
dec
pop
data16
push
jbe
je
ja
sbb
push
movs
cmp
jae
inc
std
inc
xor
pop
jbe
or
push
add
push
bound
xchg
or
adc
pop
imul
out
outs
mov
lock
inc
mov
cmps
jg
adc
pop
icebp
and
xchg
in
adc
lahf
jl
or
adc
pop
mov
mov
fnstenv
(bad)
mov
jmp
dec
push
data16
xor
jg
cmps
or
stos
sub
pop
imul
mov
outs
xor
fbstp
pop
inc
jl
neg
ret
scas
mov
test
dec
in
jle
addr16
mov
add
mov
jnp
cmp
inc
shl
cmp
retf
out
ins
pop
mov
jo
cs
ret
std
inc
push
xchg
jecxz
js
and
sbb
mov
dec
jmp
cmp
dec
jae
sbb
mov
sub
imul
aam
adc
mov
mul
pop
inc
(bad)
repz
fistp
neg
loopne
loop
(bad)
cmp
cmp
out
push
hlt
inc
imul
xor
daa
ss
xchg
pop
out
jg
xchg
add
jle
pop
push
retf
(bad)
retf
mov
xchg
or
push
sahf
aam
jle
mov
jle
push
int3
xchg
aam
popf
push
add
imul
clc
mov
sbb
not
xchg
jp
jmp
mov
arpl
pop
cmp
out
mov
adc
mov
cdq
icebp
sbb
test
icebp
jl
inc
in
xor
outs
lock
mov
xor
xor
in
call
test
inc
dec
xor
mov
lods
push
movs
inc
dec
push
push
lea
lea
lea
lea
lea
lea
aaa
sub
mov
call
pushf
or
lea
or
out
(bad)
lea
mov
aaa
or
or
icebp
push
cdq
clc
push
or
mov
xchg
hlt
lea
pushf
daa
mov
mov
ror
mov
mov
sub
and
mov
xor
inc
cdq
push
fiadd
(bad)
mov
jnp
mov
movs
shl
jne
shl
imul
ins
movs
xchg
inc
mov
xchg
std
add
shl
mov
cwde
sub
out
gs
fild
mov
lock
dec
cs
mov
and
cmps
pop
xchg
rcl
mov
jge
gs
aad
pop
enter
sub
xchg
in
mov
inc
xchg
xchg
dec
xchg
mov
sar
mov
(bad)
test
lea
ins
xor
mov
sbb
xor
cmps
add
call
movs
ins
inc
xchg
int3
xor
call
cdq
adc
leave
sub
shr
jbe
inc
sub
hlt
adc
push
mov
(bad)
repz
std
into
ja
xor
fidivr
jl
popa
int3
(bad)
in
mov
repz
mov
mov
into
jnp
push
adc
test
xor
dec
sbb
sbb
adc
cld
push
mov
dec
jecxz
(bad)
mov
je
xchg
xor
out
fidivr
xchg
pusha
xchg
xchg
add
mov
cwde
stos
push
push
cmps
jns
adc
int3
leave
iret
es
jl
idiv
jae
fdivrp
mov
outs
movs
gs
sbb
cmc
dec
dec
and
(bad)
outs
mov
mov
and
fwait
loopne
and
sbb
inc
jns
sbb
jns
sbb
mov
xor
cwde
push
jne
adc
fmul
int
xchg
fbstp
lea
adc
je
movs
arpl
mov
add
fwait
test
jge
and
jl
loope
ficom
inc
stc
and
ins
mov
sbb
sbb
hlt
ret
sbb
mov
inc
mov
cli
xor
xchg
sbb
cmp
mov
stos
mov
mov
or
add
cmp
jo
adc
xlat
push
mov
mov
rol
mov
pusha
mov
data16
add
ins
ror
rol
cmp
push
pop
lds
sti
(bad)
cmp
cmp
and
pop
sahf
inc
fdivr
enter
push
lock
cmp
int
xor
push
inc
adc
int3
cmps
ins
mov
add
or
cmp
push
imul
pop
sub
repz
(bad)
add
push
(bad)
ja
fwait
movs
add
adc
pop
dec
mov
lock
jg
jg
push
outs
mov
das
mov
retf
out
(bad)
imul
or
add
mov
jecxz
data16
(bad)
inc
or
add
(bad)
adc
sub
add
cmp
cmp
fisttp
adc
rcr
pop
jnp
fidiv
dec
lds
in
inc
or
les
sbb
or
mov
test
sbb
repnz
shr
test
mov
xor
and
movs
repz
ja
lahf
call
daa
in
jne
pop
mov
imul
mov
or
xchg
pop
mov
mov
jnp
aas
addr16
movs
add
dec
fxch
or
test
(bad)
push
mov
icebp
cmc
push
pop
test
adc
or
jle
and
mov
add
xchg
hlt
(bad)
pop
pop
mov
retf
cmp
or
jg
push
mov
mov
push
jmp
inc
stc
add
xchg
fdiv
into
fistp
rol
sbb
les
loopne
push
out
loope
push
retf
lods
sbb
adc
test
int3
arpl
shl
hlt
pop
inc
pop
mov
and
aam
and
lods
lock
cld
sub
jmp
mov
fimul
hlt
push
lods
je
mov
jb
mov
sahf
aas
sub
and
cli
sub
xor
jecxz
test
fstp
pop
fisub
dec
jmp
jo
and
sbb
pop
mov
push
cmp
mov
sub
(bad)
mov
pop
push
loope
sbb
inc
jb
cmps
pop
out
ja
jnp
and
pop
jb
push
cmp
push
or
(bad)
iret
mov
mov
(bad)
aaa
xchg
mov
jmp
aam
pop
or
xor
jb
cmp
pop
fsub
int
pop
lock
pushf
mov
jno
sub
xor
xchg
xchg
or
inc
shl
dec
push
jmp
repz
fidiv
push
ja
pusha
(bad)
(bad)
and
fiadd
nop
fsubr
mov
ret
ins
pusha
dec
dec
inc
adc
cmp
cmp
ins
cs
nop
xchg
and
imul
sbb
dec
(bad)
das
mov
add
inc
xchg
cmp
push
lea
(bad)
cmp
clc
addr16
inc
sbb
imul
bound
jo
js
mov
sbb
(bad)
ret
loopne
lahf
out
frstor
adc
or
das
cdq
xor
dec
aas
arpl
lods
pusha
jmp
sbb
pop
test
xor
jae
inc
sub
(bad)
and
call
push
cmps
push
cmp
xlat
arpl
in
ret
mov
xchg
push
adc
jle
sbb
sub
fwait
sbb
mov
sbb
mov
jbe
ret
jbe
inc
or
sub
add
inc
mov
xor
mov
add
lahf
inc
inc
xchg
into
or
mov
es
inc
dec
popa
mov
mov
fdiv
mov
je
sbb
mov
mov
mov
jmp
out
sbb
add
xor
push
test
sbb
test
mov
test
jne
add
and
mov
retf
loop
out
or
push
sar
cmp
jge
xchg
movntq
pop
addr16
repnz
int3
repz
dec
push
rcr
hlt
mov
xchg
cmp
fcmovnb
pop
lods
out
jns
pop
xchg
cmp
fldcw
mov
lea
mov
and
push
test
sahf
jmp
mov
bound
mov
fwait
test
sbb
inc
cmc
(bad)
mov
xchg
pop
popa
inc
adc
dec
nop
ja
mov
or
cmp
data16
shl
add
add
leave
sahf
mov
scas
fmul
test
mov
cld
pop
movs
test
push
in
xchg
and
cmp
retf
iret
retf
inc
nop
xchg
in
add
add
aam
mov
jg
inc
cmps
jmp
pop
adc
out
movs
in
lods
cmps
mov
stc
retf
mov
and
ins
shl
jecxz
push
pop
cdq
scas
xchg
sbb
rol
(bad)
mov
movs
mov
rol
or
lock
loopne
in
or
call
fld
xor
push
mov
adc
(bad)
xlat
imul
xchg
push
push
or
cdq
mov
jno
jmp
mov
xchg
jmp
in
mov
adc
ret
test
mov
and
bound
in
scas
(bad)
xor
fisttp
pop
mov
jge
adc
popa
or
jle
inc
scas
aam
mov
mov
fild
dec
ret
add
xchg
xchg
lea
jo
xor
add
or
or
adc
adc
nop
pop
gs
cmp
icebp
pop
adc
inc
in
pop
in
call
adc
and
sub
sbb
in
fwait
dec
lds
movs
dec
(bad)
aad
std
mov
fld
jnp
mov
in
or
movs
jo
in
sub
jl
xor
cmc
push
loope
mov
(bad)
xchg
pop
adc
or
pop
addr16
sub
cmp
ss
dec
jno
out
add
test
addr16
pop
jge
jp
or
pop
add
and
add
pop
inc
mov
es
pusha
lds
pop
mov
xchg
(bad)
aam
sti
sub
or
shr
stc
es
jae
adc
cmp
repnz
retf
mov
addr16
cmp
pop
cmps
mov
or
aad
test
dec
imul
repnz
sub
sbb
fnsave
cdq
lahf
and
or
dec
in
int
pop
mov
mov
and
push
fs
lods
int3
in
xor
add
(bad)
icebp
inc
fdiv
jge
and
retf
xor
pop
pushf
or
push
adc
xchg
mov
cmp
sbb
adc
cs
pop
xchg
cld
jb
lahf
cwde
cmp
push
inc
enter
pop
sbb
push
movs
or
cmp
shl
push
push
push
iret
cli
sti
add
or
mov
pop
mov
addr16
inc
mov
mov
rol
retf
dec
push
gs
test
xchg
jl
cld
xchg
jmp
fst
imul
ins
fmul
retf
push
mov
xchg
adc
jne
push
push
mov
push
dec
ins
int
jge
test
mov
enter
(bad)
fnstenv
(bad)
jmp
addr16
add
xor
pushw
push
rcr
movs
lea
cdq
(bad)
daa
pop
ret
iret
inc
jg
mov
call
fdiv
mov
xchg
cdq
out
pop
mov
loope
retf
popf
or
call
add
pop
push
data16
jnp
inc
daa
dec
push
dec
sbb
je
daa
es
sbb
sbb
movs
ret
xchg
leave
inc
stos
add
xchg
xchg
xchg
sub
std
push
jg
inc
add
in
icebp
sbb
mov
mov
or
(bad)
mov
pop
add
cmp
xor
jbe
out
mov
mov
mov
sahf
push
jns
repz
int
push
jne
push
sub
pop
sbb
hlt
adc
arpl
xchg
inc
or
or
fwait
push
xchg
sahf
pop
pop
mov
add
sbb
fdiv
(bad)
or
sub
mov
jne
and
dec
mov
or
cmp
icebp
inc
sahf
adc
inc
pop
sbb
in
fisub
jl
jg
arpl
add
cmp
mov
(bad)
stos
xor
loope
fistp
mov
pop
jge
or
popa
cmps
and
sub
arpl
cld
inc
sbb
cmp
call
popa
and
repz
dec
inc
les
clc
cld
lock
jo
div
ret
sti
pop
gs
mov
ret
mov
aam
arpl
push
mov
mov
test
movs
push
daa
push
and
pop
mov
jl
ret
jno
jge
stc
out
cmp
xor
sar
xchg
call
daa
leave
adc
test
mov
test
xor
shr
push
(bad)
mov
leave
dec
icebp
shl
(bad)
and
jle
adc
push
aaa
push
stos
add
fmul
dec
arpl
mov
xchg
ret
sub
arpl
mov
not
and
pop
xor
and
outs
imul
ret
xchg
add
retf
cmps
jae
ds
inc
mov
push
adc
mov
pop
dec
push
es
mov
add
sbb
cmp
dec
es
(bad)
icebp
not
pop
sbb
pop
pop
or
xchg
push
cs
sub
inc
mov
fst
(bad)
lea
fbstp
test
pop
adc
inc
mov
pop
mov
fdivrp
in
mov
inc
push
cmp
ret
js
mov
ret
or
pop
sub
dec
push
dec
xor
and
es
mov
sub
aad
dec
scas
xor
inc
or
rcl
test
xor
inc
test
adc
jmp
dec
out
sbb
ja
or
push
push
std
test
mov
and
pop
es
imul
xor
adc
fwait
xor
mov
movs
mov
sti
jge
stos
test
sub
add
add
xor
ins
jmp
push
lock
das
push
mov
(bad)
in
lea
lea
lea
lea
lea
lea
mov
mov
xchg
xchg
lea
pop
lea
mov
lea
mov
icebp
mov
xor
lea
mov
aad
lea
mov
lea
mov
dec
in
stos
pop
cmp
xchg
mov
fnstsw
inc
push
jb
mov
into
push
push
stc
xchg
aaa
push
rcl
mov
xchg
pushf
adc
sub
mov
jmp
xchg
test
loopne
sbb
and
loope
ret
pop
adc
cmc
cmps
inc
cmp
and
cmp
pop
ds
and
movs
pop
push
addr16
and
sub
int
popa
dec
(bad)
ret
sub
dec
(bad)
and
mov
cmp
add
in
lea
push
mov
mov
movs
jmp
fld
mov
sbb
pop
adc
xor
sub
je
pop
loope
sbb
(bad)
sub
int3
daa
fldenv
pushf
adc
xchg
add
or
jno
dec
xor
pop
and
mov
or
lea
lea
lea
push
pop
mov
push
mov
scas
push
push
add
out
jmp
and
or
outs
mov
(bad)
and
fs
iret
ins
inc
es
in
std
xchg
enter
mov
sub
xchg
jle
pop
xor
pushf
cmp
out
scas
cli
push
inc
cmps
stc
adc
out
movs
fadd
mov
clc
icebp
mul
imul
shl
xor
jmp
xchg
arpl
fnop
or
sbb
cmps
pop
fcmovnu
xchg
arpl
(bad)
xchg
or
inc
fbstp
in
mov
and
sbb
out
(bad)
movs
fistp
(bad)
add
fldcw
push
xchg
popf
jge
shl
dec
test
lods
mov
push
lock
fcmovnb
adc
lods
dec
cmp
sub
mov
pop
push
push
fsub
icebp
repz
push
outs
mov
ret
jmp
outs
jg
mov
adc
retf
push
and
ds
xchg
xor
(bad)
imul
push
cmps
cmp
cmp
(bad)
dec
(bad)
inc
and
imul
fstp
jne
hlt
ds
out
pop
sub
mov
cmp
xor
mov
cmp
loop
and
std
sub
xor
xor
xor
push
rcl
(bad)
xchg
mov
add
inc
cmp
repnz
mov
sub
push
adc
fist
mov
dec
mov
stc
and
xchg
fistp
ja
sbb
in
cmp
arpl
adc
(bad)
mov
jo
popf
mov
jge
test
dec
add
or
mov
loop
lea
jno
pop
shl
xor
(bad)
sub
pop
icebp
movs
jecxz
jmp
int3
inc
mov
adc
pop
icebp
push
jae
out
shl
mov
inc
cmps
lods
shl
jmp
cld
adc
in
add
lods
sub
scas
jecxz
test
jle
cmp
movs
ret
inc
mov
pop
movs
cmp
jb
clc
rol
mov
movs
stc
scas
out
mov
mov
fdivrp
dec
leave
push
stos
or
mov
lods
and
xlat
xchg
sub
inc
jl
repnz
sub
inc
or
add
pop
into
mov
add
cmps
adc
pop
dec
add
pop
aad
inc
std
(bad)
bound
pop
mov
jle
fdivr
mov
fild
test
and
jo
fild
lods
cmp
xor
mov
jns
sbb
inc
inc
jg
xor
sub
dec
sub
dec
dec
xor
aad
gs
adc
fs
pop
div
rcr
or
sbb
imul
lea
xchg
pop
pop
cmp
mov
in
jle
sub
and
movs
(bad)
icebp
push
pop
mov
mov
and
sub
dec
retf
sub
xor
xchg
sbb
scas
clc
or
loopne
cs
(bad)
push
jb
or
adc
fnsetpm(287
cld
aad
jns
xchg
rcl
in
(bad)
dec
dec
and
test
out
sbb
and
nop
jg
mov
inc
out
or
push
mov
dec
clc
jb
jns
loope
add
push
aaa
cmp
inc
mov
shl
stos
or
pop
adc
sub
add
jae
lods
stos
dec
(bad)
cld
add
fild
ja
outs
push
popw
(bad)
dec
jle
arpl
sub
ret
aas
mov
(bad)
mov
jae
xchg
in
stc
cmp
popf
enter
cmp
cmp
cmp
or
xor
cmp
mov
jno
xchg
sub
sbb
bound
push
jb
mov
and
(bad)
jmp
out
mov
rcl
lods
or
mov
jb
mov
jb
std
jnp
ret
aam
into
movs
in
cdq
jmp
popa
call
sbb
xor
out
push
pop
fiadd
test
push
cli
mov
mov
push
mov
aam
sbb
inc
sub
jge
push
shl
and
je
orps
mul
dec
test
cmp
xchg
addr16
mov
enter
rcr
mov
pop
mov
sbb
push
or
in
jl
popa
dec
sbb
in
in
data16
test
ds
fst
gs
data16
xor
adc
cli
shl
nop
fsubp
arpl
xor
pop
fs
adc
xor
xor
sbb
jp
hlt
lock
push
cmp
and
retf
fild
xchg
cmp
fs
ret
cwde
pop
shl
inc
imul
aas
out
xor
fldcw
(bad)
stos
pop
jb
inc
sti
jb
bound
mov
xchg
and
out
xchg
std
hlt
dec
rcr
fdivr
pop
inc
xor
jl
or
mov
mov
push
push
in
push
jmp
sbb
fcom
add
inc
push
sti
ins
add
das
fdivrp
xor
sti
push
inc
rol
int3
repnz
push
add
lock
adc
bound
es
cld
and
pop
add
imul
push
add
ds
mov
into
inc
outs
imul
sti
push
add
(bad)
dec
push
pusha
into
test
pushf
adc
fsubr
jp
mov
call
inc
shl
push
mov
fdivr
ss
out
and
push
jne
cwde
inc
mov
adc
jl
imul
or
jecxz
addr16
inc
stos
scas
pop
xchg
jg
mov
mov
lds
dec
xor
add
loopne
outs
mul
xchg
push
jle
sti
js
add
add
mov
ror
fld
addr16
mov
in
inc
ss
les
xor
jnp
inc
push
cmps
repnz
jmp
mov
mov
mov
adc
push
retf
push
sbb
(bad)
cmp
mov
xchg
push
dec
imul
push
fdiv
fdiv
outs
sti
push
out
outs
mov
pop
adc
or
sahf
dec
fild
dec
pop
inc
pop
xor
mov
or
sbb
dec
ret
inc
and
inc
push
nop
adc
lds
push
add
adc
xor
test
sbb
sbb
mov
dec
movs
test
pop
imul
mov
jae
retf
les
mov
(bad)
mov
add
mov
frstor
lea
pop
iret
mov
jl
(bad)
js
cmp
imul
adc
and
push
push
and
inc
mov
xchg
jbe
dec
add
xor
and
popf
mov
mov
(bad)
cld
out
ficom
ss
bound
ins
pop
xchg
in
outs
adc
mov
in
push
xchg
push
and
mov
imul
jg
sub
scas
xchg
mov
lods
test
sub
push
cmc
das
mov
sub
mov
sbb
cmps
cmp
inc
stos
sub
retf
inc
push
popf
pop
sbb
retf
jbe
movs
push
pusha
fcom
call
sub
and
daa
mov
mov
shl
jmp
push
mov
out
adc
adc
out
add
pop
ja
sub
xor
rol
cmp
clc
inc
sbb
out
xchg
mov
push
jns
inc
xor
(bad)
jp
jg
adc
bound
(bad)
jns
or
enter
push
push
mov
jbe
enter
jmp
push
inc
dec
cdq
cmp
test
xlat
icebp
icebp
add
repz
cmp
icebp
in
cmc
sbb
xchg
mov
cmp
jge
jmp
shl
imul
mov
pop
outs
outs
xor
add
mov
sub
push
cs
repnz
xchg
imul
xor
add
mov
aad
or
in
ror
icebp
aaa
test
in
out
xchg
lds
call
mov
xchg
push
cmp
in
xchg
pop
xor
sub
test
inc
pop
das
loopne
sbb
cmp
jo
stos
and
ret
loopne
(bad)
fmul
(bad)
std
aam
enter
jmp
xchg
repnz
xor
pop
pop
jg
jmp
jge
pop
pop
jb
call
scas
push
add
stc
out
mov
in
(bad)
aas
inc
pushf
cs
jge
mov
rol
stc
(bad)
cmp
lock
imul
call
bound
sub
(bad)
and
into
jne
(bad)
dec
sti
arpl
mov
ror
test
push
je
imul
or
mov
and
mov
adc
iret
and
or
mov
inc
or
lods
call
ror
jmp
stos
add
nop
in
lock
mov
and
push
mov
enter
cmps
jg
je
dec
push
jmp
adc
pushf
and
pushf
and
and
rcl
pushf
jo
out
sbb
inc
xchg
xchg
mov
daa
call
stc
scas
xchg
and
fst
in
push
dec
call
test
getsec
test
loopne
lahf
sbb
push
mov
pushf
movs
cli
movs
lahf
cwde
mov
cmp
xchg
loopne
retf
adc
mov
ds
cs
mov
push
int3
ss
mov
test
outs
mov
hlt
pusha
mov
mov
pusha
(bad)
ror
mov
xor
sahf
add
mov
xchg
jnp
in
push
jle
xlat
loopne
enter
scas
cli
sbb
ret
xchg
jo
adc
dec
inc
stos
int3
(bad)
sbb
sub
adc
movs
ret
inc
(bad)
fdivr
ret
mov
inc
jp
xchg
add
dec
sub
mov
imul
cmp
push
mov
mov
icebp
aam
rcr
pop
mov
sub
pusha
loopne
inc
ss
fs
enter
adc
pushf
scas
jp
sub
mov
dec
ja
fmulp
iret
in
enter
sti
mov
xor
mov
sahf
xchg
mov
add
mov
cmp
das
adc
imul
adc
mov
dec
pusha
iret
jl
dec
mov
sub
jo
sub
xor
mov
out
cdq
imul
into
in
xor
jb
mov
stos
sub
popf
aam
push
inc
dec
adc
jnp
fisub
bound
jmp
push
mov
xchg
out
gs
icebp
xor
(bad)
adc
add
cmp
xchg
jne
retf
out
dec
retf
dec
push
or
jno
pop
dec
and
in
call
fidivr
lahf
ss
adc
xor
push
retf
mov
(bad)
icebp
inc
pop
mov
sbb
dec
fbld
mov
outs
ja
shl
dec
dec
cli
sbb
xchg
popf
mov
xor
daa
jnp
stos
loopne
mov
ja
adc
pop
add
add
push
mov
enter
xor
jbe
xchg
mov
aam
mov
in
mov
in
in
push
dec
adc
xor
push
bound
mov
sub
repz
and
add
test
(bad)
push
mov
mov
in
out
jae
leave
xor
fisubr
call
fs
shl
adc
sbb
hlt
fs
mov
dec
mov
mov
pop
outs
push
int
add
xor
xlat
mov
pop
in
popf
mov
push
loope
inc
cdq
cdq
mov
scas
inc
fs
sbb
inc
push
les
xchg
repnz
push
jnp
adc
xor
xchg
adc
jbe
push
inc
mov
outs
sbb
movs
arpl
jmp
jbe
pop
popw
lea
dec
pushf
lea
cli
push
mov
lods
add
leave
jmp
xchg
sar
fiadd
cwde
outs
call
inc
fldcw
inc
mov
mov
fiadd
leave
test
or
xor
mov
jbe
add
bound
mov
dec
xor
pop
cdq
ret
jnp
inc
cmp
outs
sar
fld
aam
scas
loopne
call
inc
cmps
dec
pushf
rol
retf
mov
dec
sbb
fwait
jbe
loopne
xor
movs
xchg
and
jl
daa
dec
dec
les
out
jle
rcl
xor
mov
cmp
test
jbe
jge
outs
int
xchg
(bad)
cld
mov
push
arpl
mov
add
mov
push
pop
(bad)
mov
pushf
xor
retf
pop
(bad)
mov
xor
cmc
stos
xchg
pop
lods
mov
lods
mov
call
or
dec
inc
mov
xchg
jle
mul
push
sti
xor
ficomp
dec
mov
jbe
sbb
and
cmps
shr
xlat
push
inc
ret
cmp
xchg
loopne
cmps
xchg
inc
pop
xor
pusha
pop
(bad)
fidivr
jne
cmc
cmc
daa
push
and
mov
sub
add
sbb
mov
imul
out
test
loopne
push
mov
push
push
mov
or
adc
sahf
jns
push
out
retf
in
cdq
adc
repz
fist
(bad)
mov
pop
je
cmp
xchg
inc
into
les
test
push
jae
cmc
xchg
ret
cmc
inc
push
pop
push
call
cmp
pop
add
(bad)
xor
pop
sub
ds
mov
arpl
pop
sahf
jae
pop
(bad)
(bad)
imul
cdq
pop
pop
cmps
mov
jmp
and
inc
inc
popa
adc
adc
xlat
jecxz
imul
pop
or
dec
hlt
rcl
mul
and
sti
cdq
mov
nop
div
sub
(bad)
shr
adc
mov
xor
adc
or
pop
mov
or
mov
das
push
push
push
inc
call
jg
cmp
ins
inc
jb
jb
fnsave
jecxz
clc
xchg
retf
in
cmc
int3
xlat
jmp
stos
fcmovnb
cmp
out
ins
scas
loopne
nop
ins
loope
sub
adc
outs
pop
outs
frstpm(287
push
jmp
inc
xor
cmp
xor
fnstenv
jl
mov
iret
pushf
test
inc
or
add
cmp
jns
cmp
add
cmp
call
outs
mov
scas
or
outs
fcom
shr
or
sbb
mov
hlt
jnp
js
and
mov
mov
dec
cld
mov
sbb
push
push
repnz
outs
jne
push
dec
push
xor
or
aam
push
aas
or
pop
dec
lds
adc
jmp
dec
adc
leave
inc
adc
sbb
inc
pop
loope
inc
ret
pop
arpl
nop
inc
adc
ds
lds
mov
in
jo
push
dec
cmc
or
xor
in
xor
adc
and
in
mov
inc
leave
or
mov
sub
sub
xor
outs
adc
sti
loope
push
jle
leave
mov
aaa
aaa
hlt
pop
mov
movs
icebp
inc
gs
inc
push
or
add
push
push
shl
mov
add
fcom
les
stc
add
lods
xor
or
inc
or
or
test
xchg
stos
and
sti
int3
xchg
push
test
jle
pop
add
mov
movs
xor
cld
retf
adc
mov
cwde
jge
rdpmc
stc
add
stos
lahf
jp
xchg
scas
adc
iret
pop
push
xor
xchg
sub
xchg
xor
sub
dec
xchg
inc
push
inc
push
stos
pop
xchg
dec
fbld
push
sbb
pop
cdq
out
(bad)
aam
cmp
mov
or
jp
loope
mov
jnp
outs
pop
fsubr
sti
add
cld
ss
pusha
dec
add
arpl
mov
nop
mov
and
sub
dec
xchg
mov
inc
lahf
cmc
xor
repz
mov
rcr
retf
cmp
inc
mov
pop
xor
mov
adc
(bad)
sti
pop
mov
(bad)
shl
cmp
or
jnp
inc
cmp
js
xchg
or
add
push
sub
addr16
pop
pop
icebp
and
out
adc
xchg
adc
sbb
mov
cwde
jmp
(bad)
mov
out
and
jne
push
enter
mov
or
and
rcr
jbe
pop
outs
imul
push
jne
mov
add
imul
mov
xor
push
adc
jbe
sub
loop
dec
xchg
inc
imul
push
add
xchg
xor
dec
mov
add
pop
mov
stos
sub
inc
sahf
jno
mov
mov
inc
cmp
(bad)
sbb
jnp
or
mov
add
scas
stos
mov
rcr
mov
and
dec
cmp
hlt
lock
retf
call
jle
icebp
adc
js
push
jno
test
aas
push
add
fs
jmp
mov
mov
xor
cdq
add
jns
add
cdq
imul
outs
mov
inc
xor
dec
mov
gs
mov
jmp
loop
sbb
sbb
push
retf
test
out
jp
pop
xchg
shl
pop
iret
jge
dec
pusha
cmp
repz
sbb
jns
add
sar
shl
popa
call
sub
fist
and
push
icebp
dec
aam
and
ins
test
loope
mov
mov
adc
iret
popa
add
ins
add
imul
(bad)
cdq
dec
jp
mov
fwait
cmp
sub
xchg
xor
sbb
fst
push
cli
(bad)
cld
dec
mov
out
dec
xor
ins
push
shr
mov
aam
dec
add
and
adc
rol
jno
mov
push
dec
xlat
int
mov
ret
cwde
push
int
jne
ds
in
test
imul
stos
(bad)
jnp
pop
mov
mov
pop
test
stos
mov
ins
push
xor
aad
adc
mov
jecxz
adc
push
inc
mov
pop
jnp
stc
into
into
jno
int3
lods
jle
jbe
arpl
sbb
dec
vmovsldup
in
cmps
out
lods
xchg
jmp
cwde
mov
cdq
mov
hlt
jp
shl
jne
das
mov
mov
repz
jl
push
sub
(bad)
jmp
cmp
es
cmc
jmp
mov
aam
loop
sbb
(bad)
and
ror
in
mov
or
test
jmp
mov
imul
ror
mov
scas
mov
call
scas
sbb
or
pop
push
mov
(bad)
xchg
and
adc
cmp
pop
dec
cs
fild
icebp
jno
push
addr16
and
fsubr
jmp
out
mov
jb
and
sbb
and
xchg
dec
outs
idiv
and
and
test
mov
cmp
dec
dec
js
pushf
cmp
cmp
dec
out
sbb
sub
and
call
dec
xchg
lock
pop
shl
jb
ror
inc
pop
repnz
mov
call
es
loop
ds
out
imul
stc
sbb
fst
cwde
arpl
fistp
out
mov
jl
dec
iret
fsub
sub
retf
daa
pop
add
xchg
pop
call
add
fwait
stc
retf
gs
test
outs
clc
mov
add
jmp
cpuid
out
jo
mov
sub
mov
add
push
mov
mov
sbb
gs
mov
(bad)
jg
sahf
mov
mov
icebp
or
adc
sub
push
shl
jo
ficomp
mov
mov
push
icebp
sar
mov
sub
lea
test
out
movs
jns
or
in
popa
inc
or
shl
cdq
iret
fld
inc
test
adc
fld
sub
lods
push
push
fwait
fwait
dec
xchg
sbb
popa
mov
mov
test
xchg
mov
iret
ret
cmp
xor
mov
sbb
sbb
call
fistp
push
jmp
fcmovb
inc
add
push
cdq
sub
inc
mov
sbb
leave
(bad)
out
dec
mov
pop
mov
mov
test
(bad)
ss
sahf
ins
cdq
addr16
mov
sub
cmp
mov
test
jbe
and
scas
stos
mov
fcom
dec
push
sbb
sbb
sbb
leave
nop
in
dec
icebp
sbb
adc
mov
ja
or
movs
cmp
fsub
push
rcr
hlt
in
jg
repnz
mov
cwde
sbb
adc
cmc
retf
lds
push
push
dec
(bad)
jle
hlt
int
mov
jno
dec
cmp
popa
cmp
scas
pop
xlat
gs
(bad)
cmp
(bad)
and
(bad)
and
adc
(bad)
sub
pop
fmul
push
or
mov
add
mov
leave
movs
mov
dec
pop
or
out
mov
gs
sub
retf
cli
hlt
nop
add
cmps
add
shl
mov
or
daa
pushf
xlat
pop
inc
mov
mov
(bad)
sub
and
lds
pop
dec
jmp
pop
cmp
retf
(bad)
fild
mov
in
sahf
mov
outs
pushf
clc
add
test
aad
sub
cdq
cld
sub
mov
movs
cmp
(bad)
in
ret
push
gs
xchg
out
clc
adc
push
mov
fnstcw
cmp
pop
dec
or
(bad)
sub
dec
lahf
push
dec
pop
jl
std
cdq
jns
into
test
arpl
pop
push
push
and
cmp
out
enter
jl
shl
adc
dec
arpl
mov
(bad)
dec
movs
pusha
pop
in
sub
sahf
cwde
mov
int
loope
fistp
out
movs
fwait
jmp
cmp
add
shl
and
repz
enter
loope
push
pop
enter
outs
xchg
or
into
test
push
retf
popa
jbe
dec
sbb
hlt
or
xlat
out
pop
xchg
mov
aam
ja
lods
push
add
jnp
mov
stos
aaa
fwait
call
ins
je
lods
fcmove
in
scas
or
inc
xlat
or
xlat
shr
sbb
aas
fldenv
cs
xchg
outs
push
sub
stos
push
mov
enter
mov
or
stos
test
inc
scas
or
cmps
mov
or
(bad)
sub
mov
(bad)
lods
in
jb
leave
test
cmp
test
push
imul
leave
popf
dec
(bad)
icebp
retf
in
lock
lahf
push
or
add
jmp
sub
(bad)
jno
outs
jmp
mov
mov
mov
out
ret
jmp
adc
movs
sub
enter
pusha
rcl
fdiv
outs
rcr
ja
dec
mov
jno
sbb
popa
mov
mov
fwait
mov
and
loopne
cdq
pop
dec
cld
repz
jnp
push
data16
ret
add
test
jl
or
jns
jno
cmp
hlt
sbb
inc
iret
xor
repz
idiv
jmp
mov
int
lods
pop
stos
mov
int3
jae
mov
mov
call
adc
(bad)
fnstsw
int3
mov
jp
in
dec
loopne
jmp
cmovg
push
push
nop
cs
xor
jmp
shl
pop
fiadd
aaa
pop
jns
push
(bad)
fild
sub
add
sbb
loop
inc
pop
stos
mov
mov
sbb
lds
or
stos
mov
icebp
inc
ins
jle
or
lods
sbb
jle
add
cmp
daa
cli
mov
call
pop
sbb
inc
jns
or
imul
dec
pop
sar
rcl
shr
sbb
adc
sti
xchg
ja
xchg
test
fbstp
fist
pusha
xlat
or
add
enter
fld
mov
arpl
lods
mov
mov
ret
mov
movs
inc
and
lahf
add
(bad)
add
loopne
push
mov
nop
or
rol
mov
jbe
mov
jmp
rol
add
mov
pop
fst
cdq
xlat
cdq
scas
sti
pop
xchg
sub
repz
pushf
cmc
xchg
lahf
push
enter
je
outs
movs
out
adc
(bad)
iret
inc
and
sub
pop
leave
and
xchg
jb
fistp
and
inc
test
outs
add
add
adc
mov
and
lods
rcr
xchg
or
stos
test
xlat
pop
(bad)
cmps
adc
or
mov
sub
das
not
jl
adc
push
int
mov
fs
imul
jecxz
pop
ror
sub
sub
movs
retf
ret
pop
pop
mov
stos
dec
pop
add
fadd
cwde
fld
stos
mov
dec
loopne
lods
mov
jg
inc
mov
mov
cmps
fimul
sar
push
jl
dec
ror
mov
pop
retf
xchg
mov
or
loope
fidivr
sar
mov
movs
scas
in
or
outs
fcomp
fdiv
cmp
test
pop
jmp
sub
retf
and
mov
mov
pop
les
jae
adc
leave
dec
push
mov
(bad)
pop
sbb
cmps
mov
cmps
in
sub
push
cmp
and
push
dec
out
ficomp
jmp
imul
inc
or
pop
ret
sahf
mov
jg
imul
pop
aas
jb
or
mov
imul
mov
cmp
mov
in
xchg
das
xchg
mov
mov
or
pushf
int
pop
popa
mov
and
mov
ins
pop
lock
iret
jge
add
jg
mov
(bad)
fsubr
int
sub
mov
inc
loope
sbb
cmp
sbb
loop
stc
enter
sbb
cmp
aad
aam
sbb
rcr
iret
(bad)
sti
in
out
jns
jmp
and
cmps
in
clc
sar
pop
lds
les
mov
pop
mov
sbb
daa
mov
xor
mov
hlt
call
ror
leave
add
clc
hlt
shl
and
leave
pop
mov
pop
sbb
jmp
mov
ja
jae
xchg
jle
add
xchg
in
in
in
or
mov
imul
lea
ret
retf
and
inc
inc
int
fisttp
or
lahf
into
add
aas
sbb
in
sub
int3
loop
adc
pusha
inc
out
mov
and
aas
xchg
mov
jb
xchg
xlat
mov
fwait
xchg
jle
sub
inc
push
fsub
xchg
fs
pop
out
jl
jmp
sub
call
and
cs
pop
cmp
loop
and
pop
add
push
cmp
cs
pop
cmp
cmps
sbb
xlat
push
fcom
retfw
out
xlat
mov
sbb
cmp
daa
jmp
enter
xchg
retf
mov
test
and
iret
iret
xor
(bad)
and
out
push
sbb
movs
mov
inc
xchg
inc
fdivr
jns
test
jl
popa
pop
(bad)
ret
and
sbb
cmp
lahf
and
sahf
jl
mov
stc
xchg
shl
jp
and
dec
call
aaa
cmp
out
cmps
std
ja
out
pop
sti
xlat
(bad)
push
cmps
std
ja
js
jge
enter
lods
sub
(bad)
dec
xor
lahf
xlat
xor
jo
pusha
mov
repz
sub
cmps
int3
rcl
bound
bound
push
call
imul
not
push
cmps
or
popa
lock
and
xor
and
add
mov
data16
data16
xchg
(bad)
pop
mov
mov
mov
pop
sub
lea
lea
int3
xchg
cmc
mov
lods
in
icebp
jno
mov
ja
xor
or
(bad)
aad
(bad)
pushf
lea
mov
scas
mov
jle
cmc
mov
mov
clc
in
(bad)
int
lea
lea
lea
stc
inc
div
lea
mov
xchg
lea
lea
and
repz
js
stos
push
int
scas
and
push
(bad)
and
das
cld
cmp
or
dec
lahf
loope
and
sbb
ins
jnp
mov
sahf
(bad)
shl
jecxz
adc
cwde
cmp
in
inc
push
pop
sbb
in
mov
jle
fcom
aas
pop
mov
fs
loope
jmp
jmp
add
leave
inc
or
add
sti
ds
push
cmp
fist
mov
or
jge
add
mov
jg
mov
push
sar
cld
push
xchg
in
add
add
jmp
stos
rcl
repnz
xchg
pop
test
bswap
pcmpgtw
jbe
into
arpl
(bad)
push
xlat
xchg
jno
data16
cmps
aaa
ins
inc
xchg
fld
popf
mov
bswap
icebp
mov
adc
addr16
ja
mov
add
stos
in
push
dec
lods
daa
mov
sub
in
fs
lock
xor
cli
popf
jns
sbb
cmp
or
int
loope
test
pop
push
jo
test
add
mov
and
add
rcr
lods
xor
dec
add
test
add
push
fcomp
leave
inc
dec
ins
mov
inc
scas
and
test
inc
pop
xchg
push
mov
pop
repnz
jmp
in
in
push
or
xchg
adc
hlt
outs
push
in
cmp
retf
adc
xchg
fsubr
mov
dec
rcr
mov
mov
push
pop
js
rcl
xchg
cli
movs
push
or
jmp
pop
pop
mov
push
lock
xor
lock
push
pop
or
mov
icebp
mov
jae
mov
push
push
test
cmp
clc
add
xor
mov
sti
addr16
rcl
and
dec
jp
push
jno
adc
push
push
pop
push
fs
mov
xor
sbb
loop
xchg
out
cmp
add
dec
mov
sub
out
add
jl
imul
sar
ins
pop
stos
test
mov
scas
mov
xchg
inc
dec
pop
popf
jbe
adc
pop
push
stos
and
retf
pop
div
jle
out
rcl
push
pop
mov
movs
jp
cmc
das
pop
mov
sbb
jmp
std
sbb
sub
cld
pop
mov
in
mov
nop
adc
into
push
mov
jae
jmp
in
xor
sub
or
push
jb
sbb
inc
in
add
ficomp
nop
pusha
repz
sbb
imul
sti
jg
xor
imul
sub
mov
push
sti
cdq
(bad)
ror
in
xor
push
cmps
int3
sub
call
shl
xor
mov
leave
jbe
fisttp
sub
xchg
repz
aas
push
adc
bound
or
inc
out
inc
outs
das
cmp
into
dec
or
mov
aaa
or
push
pop
fs
(bad)
jp
mov
jno
int
(bad)
repnz
in
test
mov
jp
enter
push
inc
push
add
jle
std
push
in
je
adc
hlt
sbb
mov
inc
sar
or
in
xchg
xchg
fs
xor
std
pop
mov
mov
outs
fnsave
adc
iret
lods
adc
mov
inc
sub
xchg
jmp
das
and
lahf
dec
leave
leave
shl
jmp
fcomp
ret
dec
or
cmp
push
sub
lods
ds
jp
clc
inc
jmp
mov
comiss
movs
data16
lods
pushf
lods
xor
add
mov
sbb
(bad)
lds
dec
movs
jp
repz
push
frstor
nop
pop
sar
sbb
ret
outs
or
jne
add
inc
test
sbb
push
addps
(bad)
push
in
or
sub
sbb
and
fadd
jns
jmp
fild
rdpmc
add
enter
and
xchg
inc
pop
sub
dec
lds
and
cmp
sbb
pop
mov
shl
lods
xor
mov
out
mov
enter
mov
in
xor
mov
(bad)
into
mov
sbb
push
bound
leave
ins
ja
sbb
call
push
inc
idiv
pusha
ss
jo
and
xor
and
inc
mov
cli
push
popf
lds
push
ror
fistp
mov
sbb
out
cmp
jp
add
fnstenv
es
outs
or
adc
add
push
icebp
cmp
and
das
xchg
sub
push
pusha
mov
jle
mov
scas
fldenv
(bad)
mov
or
cld
hlt
xchg
pop
(bad)
sti
sub
scas
jecxz
jmp
loop
jnp
or
inc
scas
or
lea
out
mov
add
sbb
cmp
jle
out
scas
jno
mov
xchg
xor
movs
jecxz
xlat
lea
ja
ds
iret
movs
mov
in
inc
retf
sar
ret
cli
in
sub
pop
imul
outs
add
rol
push
inc
pop
std
push
mov
mov
popa
xor
dec
push
shr
inc
ss
mov
xor
in
lahf
mov
inc
div
rol
out
pop
stos
and
loope
data16
jle
sub
dec
sub
dec
xor
mov
mov
pop
or
nop
mov
sub
xor
and
add
out
push
int3
pushf
into
in
inc
outs
test
mov
xchg
movups
fnsave
into
pushf
in
pop
neg
or
aas
jb
adc
cmp
inc
adc
fcom
shl
adc
ja
or
xchg
inc
das
or
pushf
out
push
mov
(bad)
stc
pop
out
(bad)
popf
(bad)
sbb
ins
adc
loop
ds
and
stos
(bad)
imul
add
ds
in
or
jecxz
sti
push
sub
ss
cs
mov
inc
call
mov
retf
and
pop
in
sahf
jle
sub
jmp
pop
pop
faddp
adc
cli
mov
jp
xlat
les
nop
fs
pop
mov
rcr
mov
into
pusha
sub
daa
mov
mov
dec
sahf
popa
loopne
js
fidivr
sub
cmp
dec
sub
jmp
ret
fild
aaa
dec
sbb
sub
add
gs
daa
lods
add
mov
out
sbb
inc
mov
leave
sub
aaa
adc
mov
rcl
dec
pop
or
jae
sbb
inc
cmp
loopne
mov
xchg
xor
xor
mov
and
mov
push
push
xor
sub
(bad)
xor
xor
repnz
pop
sub
or
arpl
shr
inc
cli
jle
ds
or
xor
or
jno
out
jbe
fadd
inc
xchg
pop
push
jl
hlt
pop
imul
in
gs
shl
add
mov
hlt
xchg
xlat
retf
pop
sahf
jbe
push
std
(bad)
aam
cmps
jp
or
push
pop
pop
(bad)
inc
aam
icebp
add
push
call
jbe
ja
adc
jl
int3
or
(bad)
into
pop
xlat
mov
push
and
sahf
mov
leave
neg
popa
(bad)
call
mov
pop
mov
out
or
or
push
clc
adc
jbe
push
cwde
sahf
gs
lods
push
fcmovb
les
inc
mov
mov
std
sub
into
jae
push
imul
inc
enter
enter
mov
dec
or
ins
jmp
push
pop
xor
in
mov
out
inc
xor
sahf
ficom
mov
shl
and
daa
push
(bad)
(bad)
leave
in
lods
ret
cli
cs
out
in
xchg
cli
sti
(bad)
jae
xor
mov
loop
adc
scas
das
lea
stc
or
mov
mov
leave
add
push
adc
cmp
pop
or
sahf
imul
loopne
fsubr
imul
mov
pop
pop
les
pop
pop
js
(bad)
ins
xchg
xchg
popf
lods
ja
clc
aam
ud1
ins
mov
(bad)
pop
in
(bad)
aam
fisubr
sbb
in
out
ficom
and
add
adc
shl
retf
sub
sbb
sub
xchg
test
pop
jo
jnp
arpl
ins
dec
sbb
xor
movs
arpl
cmp
in
call
outs
pop
mov
stos
repnz
jmp
push
xchg
cmp
out
pop
loopne
ror
(bad)
arpl
push
mov
mov
mov
jmp
push
dec
fimul
loopne
xchg
mov
enter
mov
mov
sub
inc
hlt
stos
stos
out
imul
outs
das
xor
pop
stc
call
hlt
mov
push
mov
jle
pop
xchg
cli
imul
leave
mov
ss
jo
rol
jmpw
ffree
lods
iret
les
aas
rcl
or
mov
cmp
int
or
fild
clc
neg
cwde
cmp
clc
clc
fdivr
(bad)
jbe
inc
mov
xchg
push
sbb
push
cmps
int
pop
pop
sbb
daa
out
imul
bound
stc
inc
xlat
mov
(bad)
or
add
xlat
lea
lods
daa
lea
jno
and
movs
int
data16
mov
sbb
mov
sbb
dec
inc
xor
icebp
push
and
xor
cmps
ss
js
push
ds
push
jno
not
jb
jbe
test
jmp
cdq
popf
(bad)
mov
test
mov
mov
or
inc
mov
mov
jmp
shl
mov
cmp
retf
cli
ror
adc
arpl
shl
pop
jno
adc
xor
and
into
ss
stos
lods
dec
lea
jnp
pop
and
in
sub
jb
out
ja
call
add
or
cmc
dec
cmp
jo
js
mov
enter
lea
aaa
jge
xor
jge
cmp
mov
mov
dec
xor
or
cmc
sub
xor
push
int
mov
push
push
or
mov
dec
or
push
or
xor
push
mov
int
dec
mov
xor
jge
nop
mov
(bad)
stc
push
mov
dec
mov
or
imul
mov
mov
jge
mov
and
dec
or
jbe
jge
xchg
mov
jne
mov
push
adc
jbe
xor
xor
xchg
pop
jmp
repz
fsub
xchg
jno
bound
pop
sbb
mov
xor
fiadd
adc
sbb
push
push
popf
shrd
mov
sub
xchg
hlt
retf
bound
push
jno
inc
jge
mov
sbb
arpl
not
stc
mov
fs
cmovp
test
jne
popf
in
movs
addr16
ret
add
push
pop
mov
jl
xchg
or
retf
mov
add
in
test
lods
fadd
sub
lods
add
push
sbb
outs
pop
mov
(bad)
cdq
and
pop
in
xchg
jg
mov
outs
stc
cs
or
icebp
xchg
mov
in
or
dec
sub
popf
adc
mov
fnstcw
pop
aaa
test
sub
mov
adc
inc
mov
gs
popf
dec
mov
xchg
adc
int3
icebp
xchg
mov
in
or
dec
sub
popf
sahf
mov
pop
mov
add
xchg
ins
add
out
xlat
pop
lahf
sbb
or
loop
rol
lahf
mov
push
push
ret
out
or
jmp
mov
jno
pop
bound
pop
gs
jbe
sahf
and
push
dec
repnz
pusha
xor
xor
repnz
fidivr
cmp
lock
push
out
pusha
mov
pop
pusha
pushf
fidivr
aam
(bad)
jns
rol
aam
and
rol
or
fs
adc
adc
adc
sbb
cmps
xchg
push
pop
push
mov
jnp
enter
pop
popa
cmp
arpl
test
sub
in
push
jmp
(bad)
iret
test
les
scas
inc
sub
sub
test
cmps
pop
inc
ret
fs
div
sbb
les
push
(bad)
shl
call
aas
test
sub
jns
inc
bound
pop
es
lods
stos
mov
add
test
push
sub
rcr
push
inc
xchg
(bad)
jle
jo
push
mov
add
loopne
test
(bad)
int3
push
push
(bad)
cmp
and
sbb
(bad)
and
sbb
movs
adc
lods
mov
sub
xor
into
fiadd
push
cmps
retf
adc
stos
adc
fidiv
jns
or
cmovs
(bad)
push
lds
xor
adc
int
(bad)
push
out
dec
sar
xchg
clc
sar
lds
test
sub
or
mov
push
fs
dec
and
push
and
cmp
fidiv
adc
cmp
sbb
sub
mov
lea
dec
cmp
loop
aad
das
addr16
dec
enter
mov
xlat
xchg
enter
jb
inc
ret
pushf
mov
dec
mov
xor
adc
out
inc
(bad)
cmp
call
jmp
outs
stos
xchg
pop
jns
inc
xor
adc
aad
sbb
retf
fstp
outs
push
sub
test
xchg
inc
inc
adc
cmps
jle
sbb
inc
add
movs
popa
mov
scas
std
jge
jmp
mov
gs
aas
sub
clc
mov
cmps
jnp
cld
sbb
inc
aas
xchg
pop
imul
(bad)
popf
out
(bad)
fsubr
out
mov
aad
sti
addr16
cld
mov
jg
outs
cs
nop
mov
cdq
or
leave
or
loope
mov
dec
cmp
or
adc
or
sbb
pop
dec
stc
in
mov
(bad)
sub
mov
add
popf
mov
in
mov
lds
fwait
jle
lea
inc
das
in
mov
clc
adc
fdiv
ins
(bad)
fstp
dec
mov
fadd
pop
inc
neg
lods
inc
xlat
ret
(bad)
xlat
test
into
push
cmps
test
xchg
xor
not
and
cmp
pop
fs
and
loope
enter
lods
test
nop
sahf
sub
mov
mov
stos
mov
fcomip
sbb
mov
rcl
and
cmp
scas
shl
call
sub
mov
push
icebp
inc
sahf
stos
jmp
in
adc
pop
push
or
mov
mov
adc
ins
add
retf
dec
dec
dec
out
gs
cmp
lods
or
push
loope
mov
inc
and
push
xchg
stos
xor
adc
movs
add
or
popf
add
or
pop
test
in
mov
movs
aas
mov
jmp
jg
std
loop
in
mov
mov
fidivr
cmp
(bad)
repnz
pop
out
push
inc
inc
das
call
push
add
out
sbb
pop
mov
test
test
lods
js
or
dec
jbe
or
sub
sbb
push
mov
bnd
enter
cmp
ja
mov
mov
sub
mov
add
sbb
sbb
add
sub
xchg
and
rol
daa
repz
outs
cmps
sub
loope
mov
pop
and
fmul
dec
(bad)
and
mov
xchg
jge
jns
mov
cdq
shr
push
hlt
jl
lods
frndint
mov
pop
int
daa
inc
pushf
push
mov
jp
sbb
xor
loopne
mov
mov
push
das
jmp
pop
push
out
xor
mov
push
lods
add
dec
inc
scas
dec
scas
in
xchg
fdiv
sbb
rcr
imul
inc
mov
cmp
sar
lahf
and
out
cmps
mul
hlt
and
in
imul
or
mov
xchg
adc
in
cmp
xchg
movs
mov
sub
adc
arpl
pushf
mov
mov
cmps
mov
dec
nop
mov
ss
inc
mov
rcl
mov
and
mov
mov
adc
cmp
iret
ficom
mov
outs
popa
dec
dec
mov
outs
je
add
cmp
dec
inc
dec
pop
adc
xor
imul
cmps
neg
mov
mov
mov
mov
out
fld
outs
and
fld
jecxz
jno
inc
push
adc
or
xchg
es
jb
aad
adc
stos
inc
fsub
or
imul
pcmpeqb
test
adc
lods
paddsw
xchg
xchg
aad
outs
enter
test
in
out
dec
scas
push
sub
mov
sar
push
pop
pop
mov
add
mov
jl
adc
jae
push
out
test
ins
inc
dec
sbb
ins
std
lds
out
xchg
das
dec
lods
and
imul
movs
cmp
outs
or
lods
jae
xchg
ja
out
mov
cdq
ror
stos
mov
test
imul
sbb
ret
repnz
dec
jbe
pop
retf
imul
push
(bad)
add
ins
aas
iret
std
movs
jle
cmp
inc
scas
and
add
mov
imul
dec
imul
in
sbb
cmp
retf
test
loope
cmp
into
and
lods
fadd
cmc
add
push
std
sub
inc
pop
outs
cmps
xchg
ss
sub
sbb
sub
and
push
mov
mov
fstp
xchg
or
lods
sbb
adc
inc
clc
movs
pop
dec
rol
dec
lods
xchg
xchg
pop
adc
fwait
adc
out
js
cs
pop
bswap
dec
out
jo
mov
in
mov
jae
push
or
fstp
push
push
aaa
mov
inc
add
sbb
pop
retf
add
int
dec
mov
xor
xor
test
pop
adc
add
idiv
pop
(bad)
shl
mov
dec
or
out
repnz
xor
mov
retf
dec
rcr
sar
jle
fwait
lea
adc
pop
ins
aam
xchg
push
or
mov
cmc
dec
(bad)
stos
or
xchg
push
aaa
add
retf
jmp
adc
mov
movs
mov
fimul
mov
mov
fcomp
push
dec
mov
mov
and
jg
xchg
aas
dec
sahf
dec
mov
pop
or
inc
int3
xchg
sub
test
or
push
scas
test
pop
fmulp
test
(bad)
aad
in
out
fwait
ret
std
ins
jge
scas
push
pop
hlt
in
cdq
popf
mov
std
je
iret
pop
pusha
int
sbb
cmp
sbb
mov
out
jae
xchg
jbe
test
sti
push
mov
ss
call
fs
push
push
add
mov
cmp
and
add
dec
inc
je
add
aaa
dec
mov
jmp
push
outs
and
adc
cli
or
xchg
cs
(bad)
or
xor
and
mov
pop
je
ja
cdq
adc
push
inc
inc
sbb
push
aaa
jmp
xchg
sub
push
adc
popa
das
jl
sbb
inc
mov
and
adc
cmp
fstp
cmp
add
mov
stos
movs
daa
js
cmps
loopne
mov
cmps
in
dec
in
dec
or
pop
xchg
adc
dec
ins
mov
fadd
daa
scas
push
out
test
sub
xor
xlat
mov
pop
fmul
les
in
mov
xor
stos
std
loope
in
or
mov
add
mov
mov
or
fld
mov
sbb
cwde
dec
lea
into
mov
into
cmp
xchg
sub
mov
adc
ret
idiv
sub
pop
mov
dec
fcom
or
scas
movs
sar
sub
xchg
movs
cmp
fnstcw
cld
sub
sar
mov
fwait
pushf
rep
adc
imul
fwait
and
mov
or
adc
inc
pop
in
mov
sub
cwde
call
push
mov
lds
xlat
jl
(bad)
cmp
imul
cdq
or
pop
pop
add
sub
pop
gs
ins
lods
mov
mov
fadd
sub
loope
lds
imul
out
cmps
icebp
pop
fisttp
jge
outs
jp
ins
sub
push
out
int
rol
movs
add
(bad)
gs
sub
loope
das
push
rcr
daa
sbb
pop
mov
dec
es
gs
std
mov
rcl
add
mov
(bad)
in
icebp
stos
pop
or
test
sub
in
pop
lds
ret
dec
lock
sub
mov
rcl
nop
mov
jae
test
push
repz
leave
pop
div
xchg
mov
fsubr
leave
pop
sbb
dec
mov
pop
scas
out
popf
xchg
sahf
into
fxch
dec
retf
pop
or
sahf
add
jno
pop
mov
rcl
ds
sub
mov
ds
adc
test
mov
and
int
lods
imul
mov
mov
jnp
xchg
xchg
ror
xor
push
mov
sub
test
ins
out
xchg
jge
adc
cmps
and
(bad)
int3
mov
or
cmps
adc
out
xor
into
cmp
ja
(bad)
mov
inc
cmp
stos
movsx
shl
jmp
scas
call
out
scas
xchg
xchg
shl
stc
jmp
pop
fnstenv
xchg
jns
mov
push
push
aad
and
adc
mov
pushf
cs
lods
xchg
xor
push
ds
or
cmps
mov
fwait
cld
arpl
jne
mov
sub
int3
and
lods
inc
inc
js
mov
shr
(bad)
lahf
add
and
daa
sbb
push
or
mov
ror
dec
int
inc
jne
test
xchg
(bad)
arpl
dec
aas
jno
mov
dec
or
sbb
imul
pop
sub
popf
cwde
dec
cmp
lods
jecxz
xchg
and
outs
dec
out
sub
aad
cwde
dec
outs
or
fsub
cmp
cld
stos
jbe
(bad)
imul
dec
ins
aaa
ja
daa
mov
push
mov
sbb
xchg
sbb
ins
or
jns
dec
int3
lds
test
inc
sub
popf
and
add
dec
fwait
adc
jne
cmp
lods
mov
or
cmp
nop
pop
mov
(bad)
nop
dec
stos
or
jnp
sub
movs
pop
std
pop
cli
ret
fwait
mov
inc
sahf
in
movs
mov
and
xchg
pop
int
sub
jnp
jmp
lods
mov
mov
shr
test
pop
xor
jl
out
ror
fwait
xchg
jnp
lods
mov
pop
bound
xor
xor
rep
mov
pop
cwde
movs
out
sub
pop
lock
xchg
mov
dec
inc
xchg
std
ins
sub
or
std
jecxz
mov
ins
jnp
cmovbe
cmp
out
leave
imul
sbb
test
dec
xchg
loope
mov
in
iret
mov
jbe
cmp
int
int
dec
xchg
call
movs
icebp
scas
or
stos
sbb
xchg
ins
clc
int
ins
ror
xchg
mov
nop
add
mov
sbb
test
nop
in
sti
ret
std
(bad)
retf
push
cmp
lea
(bad)
cmps
or
xor
or
test
inc
loope
mov
or
lahf
xchg
inc
mov
sbb
ret
mov
adc
lahf
mov
jge
enter
pop
inc
mov
or
ins
cmp
int3
dec
test
test
and
mov
(bad)
sub
mov
mov
int
in
sbb
xchg
rol
or
pop
xchg
inc
ret
jae
aaa
pop
add
cwde
jns
jmp
jg
das
and
jp
mov
mov
pop
jbe
sahf
xchg
add
popf
(bad)
nop
dec
add
loope
cmp
mov
fwait
sbb
sar
adc
repz
std
lods
leave
sbb
jg
leave
stos
not
sbb
cwde
in
fs
cmp
cmc
or
lods
int
int3
mov
jge
xchg
mov
mov
popf
mov
gs
ins
jmp
popa
div
int
xchg
cmc
push
mov
(bad)
fwait
sub
test
push
xchg
and
xor
fnsave
aas
bound
dec
scas
das
inc
xor
je
sbb
xor
pusha
call
scas
ja
push
jae
bound
cdq
jae
clc
inc
fs
repz
xor
ja
jns
push
sar
sub
xor
jns
repnz
jnp
push
sub
push
test
jb
ja
(bad)
inc
fsub
add
stos
retf
cmp
xor
sbb
js
dec
shl
pop
ret
and
push
xor
bound
movs
rcl
out
ret
jl
mov
add
jp
mov
inc
sbb
pusha
arpl
jp
stc
gs
push
ins
fwait
int3
push
push
imul
jg
inc
popa
das
jg
and
inc
mov
cld
loope
mov
jne
pop
ins
jmp
sub
or
jae
fstp
xchg
jmp
push
or
xor
in
das
mov
mov
or
push
enter
dec
loope
movs
test
sbb
push
shl
loop
ds
(bad)
adc
dec
(bad)
pushf
cmps
int
dec
cmp
inc
pop
xchg
adc
lahf
cmp
test
push
jno
ror
shl
das
aam
aam
gs
sub
lods
nop
clc
xor
das
lds
mov
scas
(bad)
lock
in
js
(bad)
xchg
xchg
jb
pop
dec
jecxz
ret
push
je
add
mov
movs
aas
cmps
sti
cwde
cmp
jne
loop
pop
in
(bad)
stc
sahf
adc
sub
jno
gs
ficom
mov
retf
scas
test
xchg
mov
mov
pop
dec
inc
ja
aas
mov
les
jge
ret
arpl
lods
sar
mov
pop
dec
xor
jmp
sub
icebp
call
out
ret
fiadd
cs
cmp
ds
cdq
xor
inc
add
and
das
sbb
aas
pushf
cmps
or
jmp
mov
xchg
ror
icebp
(bad)
mov
aaa
ins
cmps
xor
sbb
aam
mov
aaa
mov
scas
push
sub
xchg
cmp
into
sbb
sti
push
out
rol
push
push
mov
mov
test
lock
jae
daa
mov
mov
pop
(bad)
frstor
in
dec
xchg
(bad)
rep
aam
or
sbb
mov
das
sbb
into
adc
push
test
fsub
fsub
inc
popf
mov
dec
iret
xchg
mov
xor
es
jbe
pop
add
mov
fbld
pop
scas
fsub
push
vaddps
in
enter
mov
sub
inc
jae
add
and
jecxz
mov
jge
xchg
cmp
jbe
jnp
das
mov
push
xchg
and
dec
inc
add
jl
adc
cdq
mov
pop
push
(bad)
ds
jbe
das
das
popf
sub
push
test
ins
xchg
(bad)
cmp
push
jne
fwait
and
push
int3
and
loope
enter
aam
xlat
repnz
push
inc
es
sbb
jl
popa
xchg
mov
cmpxchg
mov
stc
in
repz
in
xor
rcr
mov
popa
cmp
call
mov
out
shl
jae
jne
mov
into
arpl
movs
dec
and
sbb
inc
pop
test
out
aam
js
jne
fisub
mov
ret
std
inc
int3
mov
mov
xor
pop
shr
mov
or
add
fdivr
outs
pop
pop
mov
clc
sub
mov
iret
lock
retf
call
lods
dec
stc
out
dec
pop
sbb
(bad)
pusha
cmp
sbb
sub
les
idiv
sbb
pushf
xchg
cs
in
(bad)
cpuid
ja
jmp
retf
arpl
pop
jg
shl
jo
mov
cwde
or
mov
js
jnp
js
dec
pusha
in
cmps
cmp
mov
sbb
mov
sub
adc
ja
in
add
(bad)
mov
xor
imul
cmp
cdq
fist
mov
test
adc
fstp
hlt
sub
xchg
in
stos
pop
les
loopne
das
or
mov
xor
cld
push
dec
pusha
inc
les
push
adc
stc
xlat
movs
iret
and
push
ds
scas
pop
xor
lahf
mov
out
cmc
xor
fisub
fsub
xor
bound
(bad)
cli
outs
cmp
or
xor
jl
pop
and
iret
push
jnp
xor
push
(bad)
pop
pushf
out
icebp
ret
pop
cld
jns
jnp
xchg
js
int3
inc
adc
xor
ds
in
pop
push
xor
cmp
mov
mov
sbb
clc
sbb
inc
jo
jg
out
sbb
bound
cmp
dec
push
fcom
xor
cmps
sub
push
mov
sar
loope
mov
dec
push
ror
in
data16
fbld
cli
shl
pop
test
add
mov
sbb
cli
bound
push
mov
call
pop
jp
mov
ror
mov
mov
mov
fisttp
mov
adc
and
mov
sub
mov
dec
adc
pop
sub
jbe
adc
mov
xchg
xchg
mov
add
fnstsw
mov
dec
loop
outs
rcr
inc
repnz
aaa
jecxz
dec
mov
push
rcl
pusha
xchg
ret
jmp
popf
dec
mov
jle
js
mov
adc
imul
retf
cmp
les
cmp
sub
dec
mov
push
and
mov
push
adc
call
das
sub
popa
es
xchg
sahf
cmp
xlat
adc
stos
xchg
mov
mov
xor
(bad)
sahf
xchg
iret
int3
mov
mov
mov
jne
repnz
xchg
(bad)
mov
ja
popf
fnsave
or
sub
icebp
pop
inc
test
push
sbb
inc
aaa
stos
mov
fwait
popa
imul
sub
mov
jo
addr16
out
test
jnp
or
sbb
pop
ret
ss
imul
ds
int3
pop
and
add
cmps
stc
lahf
movs
je
jno
in
daa
mov
dec
xor
cmp
bound
jecxz
lods
pop
xor
sbb
inc
es
je
and
mov
push
cdq
sub
mov
pushf
scas
int
scas
mov
xchg
cmp
std
push
neg
pushf
ss
outs
js
out
cmp
cmp
cli
sub
dec
fidivr
or
repnz
dec
xchg
retf
out
daa
mov
les
fisub
or
push
fcom
daa
dec
pop
(bad)
sbb
mov
aas
sub
inc
aam
inc
call
mov
xchg
mov
retf
sub
push
neg
jno
xchg
pop
jge
lea
movs
imul
cmp
popf
bound
mov
pop
fist
movs
sub
pop
rol
icebp
(bad)
xchg
jl
mov
pop
lods
retf
dec
cmp
xor
aam
sub
retf
and
xlat
inc
push
jno
sub
(bad)
(bad)
xlat
jbe
cld
std
pop
shr
adc
punpckldq
(bad)
inc
inc
push
in
adc
rcl
cli
(bad)
out
or
enter
psubq
mov
aam
push
cmp
mov
xchg
lods
sub
push
fst
(bad)
loopne
mov
int
pop
movs
jbe
dec
gs
or
mov
sti
pop
stos
mov
jbe
ins
stos
test
(bad)
stos
fstp
jne
dec
pusha
dec
sbb
nop
fstp
mov
xchg
out
sahf
cmp
or
and
in
retf
mov
pop
inc
stc
lahf
fbld
pop
cdq
lds
mov
sbb
icebp
xor
popf
mov
xchg
lods
sub
mov
and
push
xor
aam
push
push
fstp
mov
jno
ds
dec
jecxz
jbe
cmps
pop
push
xchg
fwait
cmp
imul
push
mov
aas
loope
mov
adc
mov
retf
movs
pusha
out
pusha
int
daa
mov
retf
lock
mov
xchg
out
mov
xchg
sub
arpl
jns
mov
cdq
jne
repz
mov
call
(bad)
xchg
or
movs
push
scas
mov
pop
mov
fisttp
push
and
(bad)
loopne
ss
mov
iret
daa
mov
adc
sub
push
mov
call
pop
push
outs
pop
xchg
mov
daa
leave
enter
daa
dec
jge
and
js
addr16
inc
sbb
(bad)
jae
dec
ret
push
jnp
cld
call
pop
int
stos
jge
adc
ss
mov
mov
inc
mov
icebp
movs
mov
stos
xchg
sub
or
push
mov
cmc
sbb
mov
(bad)
sar
lods
shl
mov
cwde
imul
popf
js
lods
test
xor
jbe
inc
dec
int3
out
adc
nop
fld
adc
mov
stos
repnz
pop
inc
retf
sbb
stc
imul
push
jmp
fwait
add
jae
inc
out
xor
repz
sbb
mov
mov
pop
or
sahf
mov
mov
mov
sbb
push
movs
push
aam
push
inc
mov
out
dec
xchg
add
pop
shl
rcr
push
and
lock
std
mov
jae
inc
pushf
jbe
mov
xchg
and
cmp
mov
shl
lds
fsubr
scas
and
push
pop
jae
and
retf
or
ret
mov
fiadd
jnp
lods
xchg
(bad)
out
push
add
clc
cwde
loop
add
jecxz
(bad)
jns
inc
and
aam
lods
pop
sahf
mov
cmc
int
lods
popf
mov
or
sar
adc
cdq
and
test
push
jmp
imul
in
jae
aad
retf
jae
mov
xlat
jmp
jl
out
mov
mov
pandn
and
retf
xor
jg
movs
pop
sbb
xchg
(bad)
adc
dec
pop
jg
sub
fwait
mov
mov
xor
lods
or
rcr
xchg
test
out
dec
xlat
lock
push
call
mov
pusha
rcl
mov
out
or
test
cmp
xchg
js
(bad)
aam
(bad)
clc
mov
xor
div
mov
xor
movs
lods
icebp
data16
or
nop
inc
xchg
push
push
sub
scas
cmp
js
mov
and
fs
jb
xchg
(bad)
fst
cmp
(bad)
aam
(bad)
iret
xor
jge
jmp
data16
push
pushw
leave
push
push
push
mov
(bad)
xor
adc
bsf
sbb
dec
push
sub
mov
fbld
mov
fs
jne
in
lahf
or
jne
xchg
pop
mov
mov
(bad)
mov
jp
and
aad
push
xchg
push
pop
xor
int
stos
xchg
data16
push
ss
dec
push
inc
cmp
cs
(bad)
jmp
enter
pop
jl
test
jns
mov
or
lea
enter
push
fwait
ja
(bad)
xlat
clc
pop
add
retf
movs
mov
and
or
inc
arpl
fwait
dec
dec
ror
push
stc
push
js
gs
icebp
mov
sbb
imul
dec
push
cwde
or
pop
jnp
cwde
arpl
push
jnp
xor
test
(bad)
dec
push
mov
mov
jb
xchg
jae
mov
std
mov
scas
dec
nop
pop
aaa
sub
into
test
leave
repz
fwait
shl
sub
cdq
in
mov
lea
jge
push
inc
fstp
arpl
loop
jp
sub
jno
jle
sub
push
lea
(bad)
es
cdq
sbb
jae
dec
adc
jnp
ret
shl
fadd
fldenv
push
jae
xchg
test
int3
cmp
aaa
sub
xchg
push
cli
sahf
test
mov
lods
dec
popf
std
icebp
push
(bad)
scas
movs
mov
fisttp
cwde
xchg
mov
mov
dec
xchg
(bad)
xlat
xor
shr
jg
dec
xchg
jmp
pop
popa
inc
into
fwait
mov
mov
movs
sar
repnz
nop
out
scas
xchg
or
idiv
mov
and
(bad)
and
sub
iret
push
test
mov
fmul
gs
jno
sahf
pop
arpl
(bad)
dec
lds
call
xchg
ja
inc
push
ja
cmp
pop
sub
mov
das
push
xor
mov
pop
iret
pop
cmp
and
adc
mov
hlt
sub
cmp
jbe
cmps
test
in
call
mov
fwait
pop
mov
xor
xchg
(bad)
sahf
imul
aaa
dec
mov
mov
cs
cmc
or
xchg
imul
sub
and
mov
aad
xchg
jb
not
mov
push
cmps
cmc
dec
mov
jge
mov
sub
lock
(bad)
mov
imul
mov
inc
jg
lea
mov
or
and
xor
and
test
and
mov
mov
xchg
jp
inc
jp
pushf
mov
enter
les
jne
xor
and
mov
jmp
std
pop
xchg
lods
mov
cmc
jno
xor
push
repnz
call
outs
or
lahf
shld
retf
retf
or
test
mov
mov
addr16
pop
ins
ret
xacquire
add
or
cmp
dec
icebp
or
outs
lods
xor
add
jnp
ror
icebp
fs
adc
dec
xchg
jb
xchg
outs
add
neg
imul
adc
or
mov
scas
cmp
shl
shr
adc
pop
mov
push
hlt
and
in
sbb
aaa
or
mov
add
retf
std
cmp
test
jecxz
adc
and
xchg
mov
into
mov
xchg
push
test
pop
mov
mov
call
xchg
std
lods
retf
sbb
sti
dec
iret
adc
xchg
ins
test
xchg
cdq
aas
in
ins
xchg
jbe
cmp
adc
test
pop
cmp
dec
cmp
ss
into
fwait
push
test
mov
mov
cmp
ss
dec
mov
movs
push
(bad)
push
push
pop
imul
stos
cwde
enter
test
in
(bad)
ret
pop
repnz
pop
rol
push
xchg
loope
and
jl
or
and
mov
mov
test
push
ins
xor
mov
dec
in
push
movs
pop
dec
mov
call
out
mov
inc
outs
cli
xchg
aad
add
out
sub
add
mov
mov
inc
js
enter
add
dec
cwde
sub
adc
cmp
js
or
cld
loope
loope
jno
dec
pop
(bad)
and
das
js
sahf
movs
shl
dec
test
adc
ret
mov
addr16
aam
je
jne
mov
(bad)
mov
fidivr
test
idiv
out
jge
mov
cli
jns
adc
mov
push
pop
imul
mov
cmp
cld
ins
xchg
xor
test
cld
cmp
add
(bad)
std
rep
mov
pop
hlt
movsx
inc
xchg
add
jg
in
mov
mov
xchg
sbb
ins
push
push
or
xor
xchg
push
or
lahf
pop
dec
mov
clc
shl
adc
int
sti
mov
lea
push
mov
and
iret
lahf
rcl
lea
jge
add
lea
xor
lea
js
and
cmp
sar
jne
outs
loopne
sbb
addr16
sar
pop
cli
pop
xor
xor
in
popa
into
push
arpl
inc
in
inc
arpl
inc
aad
push
scas
dec
stc
mov
cmp
xchg
outs
int3
movs
or
dec
imul
mov
mov
jecxz
(bad)
in
mov
mov
in
jp
nop
adc
and
lock
stc
or
ds
dec
arpl
fidivr
je
add
mov
dec
or
xchg
lods
mov
sub
mov
add
push
mov
retf
cld
xchg
ja
loop
gs
xchg
jle
(bad)
addr16
test
je
scas
jne
mov
mov
inc
hlt
xchg
mov
xor
aaa
sbb
add
xchg
in
setno
cmp
mov
lea
dec
mov
ins
xchg
xor
inc
sub
xlat
inc
sbb
cmc
ror
jmp
outs
mov
dec
push
repz
mov
or
or
jl
add
int
sbb
adc
mov
xchg
pop
jae
push
ss
pop
repnz
mov
add
enter
repnz
pop
add
dec
or
dec
jb
mov
cmc
scas
dec
das
xchg
sub
cmp
xchg
(bad)
dec
addr16
arpl
aaa
push
mov
cld
or
adc
inc
sbb
mov
movs
cmp
jo
inc
cli
and
icebp
push
push
dec
sub
cmp
popf
or
add
fsub
sbb
lods
out
jae
clc
lea
shr
xchg
add
xchg
xchg
lods
out
pop
mov
popa
lahf
mov
jg
ja
paddsw
add
inc
push
or
bound
nop
ins
mov
mov
pusha
loopne
jge
pop
ss
aad
dec
sub
sub
xchg
jl
mov
adc
dec
dec
and
mov
repnz
sbb
cdq
mov
ret
xchg
and
pop
outs
xchg
and
inc
lea
inc
mov
xchg
lods
jge
xchg
(bad)
scas
pop
pop
daa
enter
push
mov
fld
out
fld
lds
mov
lea
leave
mul
or
adc
jge
test
sahf
cs
lea
test
fbstp
lea
cld
dec
mov
inc
mov
cwd
inc
xchg
mov
(bad)
push
fwait
iret
mov
stos
shl
gs
std
sub
xor
outs
xor
retf
push
pop
jl
mov
jecxz
retf
stc
mov
out
jno
push
mov
jo
add
repz
and
mov
test
xchg
and
test
push
add
inc
pop
pop
mov
jl
cmp
sub
aaa
sub
ret
push
rol
fadd
pop
jns
in
mov
imul
inc
inc
pop
inc
test
inc
push
clc
call
outs
jle
ror
ror
xlat
cmp
xchg
std
pusha
cli
scas
data16
push
jne
and
jnp
aad
mov
mov
ins
pop
mov
mov
sahf
pop
daa
std
call
and
aaa
cdq
jae
xchg
add
jl
jnp
adc
mov
xlat
sub
sar
mov
mov
enter
xchg
and
mov
xchg
sbb
lods
sub
pop
into
ins
popa
jle
xchg
cmc
out
cmp
sahf
add
add
fsubr
jne
(bad)
inc
and
nop
push
mov
in
fdiv
sbb
inc
xchg
and
adc
adc
int
outs
pop
sub
mov
inc
mov
jo
js
jns
test
or
jae
xor
ja
sbb
add
shl
sub
cmc
sub
cdq
sub
pop
call
int3
and
test
inc
inc
and
fidivr
xor
jge
dec
dec
push
je
fs
fsub
push
ret
push
(bad)
rcr
fidiv
movs
repnz
xor
push
pushf
push
stos
retf
lea
outs
ds
cmp
add
ins
and
loop
test
js
repnz
push
and
mov
fs
jecxz
jmp
icebp
or
lods
ins
push
jns
xchg
imul
ins
push
(bad)
jge
push
daa
fisttp
sub
ja
push
test
adc
ds
push
cmps
mov
(bad)
scas
shl
dec
mov
mov
add
xor
aam
or
in
sbb
xchg
push
pop
addr16
mov
js
fnstcw
cmp
pushf
inc
jbe
xor
inc
idiv
mov
es
inc
xchg
and
adc
sub
mov
imul
adc
rcl
adc
jmp
lea
rcl
adc
xor
punpcklbw
ret
js
dec
movs
in
int
mov
sar
push
ins
loopne
jp
xchg
jno
aad
or
icebp
ss
jbe
cmp
cld
loope
popa
ret
repnz
push
(bad)
mov
(bad)
lds
mov
dec
dec
int
sbb
add
xchg
xlat
xor
pop
dec
arpl
mov
xchg
cmp
add
inc
loop
mov
cmps
dec
rcl
mov
jae
stos
jmp
xor
rol
push
adc
in
cld
sub
inc
icebp
dec
jle
sbb
jge
mov
or
jns
jg
xor
sub
or
ret
jmp
mov
loopne
sub
lods
jnp
xor
jl
cmp
jl
mov
cdq
inc
nop
and
int
push
stos
sbb
repz
mov
mov
xchg
xchg
fwait
dec
jp
mov
addr16
sub
lea
xchg
not
ds
cld
mov
stos
cmps
lock
xchg
std
cmp
call
cmc
dec
mov
jge
mov
jno
mov
cwde
repnz
sbb
jo
jge
xchg
mov
es
mov
jp
mov
jno
push
mov
stos
dec
outs
cs
lock
jmp
jb
(bad)
hlt
jbe
push
rcr
sar
xor
je
stos
cmp
sub
out
je
cwde
fs
loope
sbb
or
jb
jb
adc
inc
inc
scas
sbb
ds
loope
mov
jno
cmp
sar
fs
jno
cmp
gs
jbe
sahf
push
pop
inc
push
aas
jle
sub
push
pop
jb
xchg
out
sbb
cmp
xor
push
cmps
int3
sbb
addr16
xchg
fist
and
out
lods
adc
mov
push
js
pop
or
inc
inc
push
popa
mov
int
loope
(bad)
pop
adc
shl
ins
mov
scas
loopne
push
pusha
je
mov
(bad)
pop
mov
fstp
jp
or
neg
push
pop
fisttp
inc
imul
push
adc
inc
ficom
jnp
test
add
dec
not
shr
in
aad
xlat
iret
aad
push
xchg
add
arpl
dec
sti
sbb
fdivr
stos
fisub
jb
add
push
jmp
popf
shr
xchg
aaa
cmp
cs
out
addr16
out
add
mov
push
pop
sbb
into
fnstcw
sbb
pop
fsubr
rcr
daa
dec
shl
push
out
out
ret
je
add
in
imul
aaa
mov
and
xor
mov
mov
imul
dec
pusha
jle
jge
mov
mov
lock
add
and
jmp
lahf
scas
and
(bad)
call
ins
push
addr16
mov
popf
dec
addr16
rcr
inc
push
jmp
jle
xor
cmps
ja
or
out
sbb
movs
aas
push
mov
mov
scas
cli
adc
cmp
push
add
mov
pop
scas
cwde
das
(bad)
in
sti
imul
mov
sub
pop
es
or
ficomp
fsubr
jmp
sti
inc
ds
and
nop
rcl
adc
pop
and
shr
scas
into
or
pusha
mov
push
jge
mov
pop
xchg
das
out
push
ins
retf
fmul
jge
jo
call
in
test
cdq
jg
fnstenv
push
mov
sbb
inc
cdq
dec
(bad)
jle
scas
ss
out
arpl
xor
(bad)
inc
gs
mul
dec
stos
out
or
arpl
and
and
xchg
shl
jecxz
mov
add
into
cli
js
stc
and
les
or
fmul
inc
outs
hlt
stos
or
xchg
(bad)
mov
movs
out
dec
jmp
js
jp
loop
sub
or
data16
jns
adc
int3
sub
mov
inc
lds
and
movs
add
inc
pop
in
push
cmp
push
inc
sti
call
js
cmc
cmp
in
jmp
xor
cld
adc
inc
mov
je
jp
fs
jae
xchg
push
inc
and
fs
bnd
dec
mov
sar
sahf
mov
inc
out
ret
fimul
push
fcmovbe
enter
cmp
ret
cmp
sbb
inc
aaa
jle
fimul
jbe
cmc
xchg
mov
dec
pop
inc
shl
cld
push
adc
es
xchg
mov
div
popf
xlat
mov
push
fsubr
cli
shr
push
xchg
inc
fistp
aam
pop
stc
cmp
retf
push
dec
pop
aam
pop
pop
mov
cld
mov
shl
mov
aam
das
cmp
test
and
push
inc
xor
movs
mov
xor
popa
push
test
jmp
and
and
cmp
lods
xchg
jns
repnz
sbb
xchg
std
jns
and
or
push
repz
mov
jbe
mov
sbb
xor
mov
loopne
xlat
push
cmps
sti
mov
cld
fs
xor
std
ret
push
cmps
bound
sar
inc
addr16
and
pop
pop
xchg
sub
out
xor
jns
lock
ins
add
mov
fs
pop
mov
lahf
mov
push
repz
fbstp
retf
adc
push
cwd
inc
mov
rcl
dec
outs
pop
imul
loop
lock
sub
sahf
cli
(bad)
xor
(bad)
inc
adc
mov
cmp
arpl
leave
shl
or
adc
js
dec
iret
repnz
mov
cmp
ds
push
retf
xchg
mov
sbb
ss
je
ret
mov
lods
jo
pop
addr16
push
daa
sbb
ins
jecxz
retf
dec
sahf
pop
jmp
bound
fs
pop
push
push
mov
pop
pop
cmp
mov
(bad)
mov
lahf
sbb
push
jmp
enter
sub
pop
not
cmp
je
in
lods
and
mov
shl
repz
add
add
inc
out
lahf
std
(bad)
sti
mov
jae
push
iret
mov
mov
stos
outs
nop
fadd
sbb
std
xchg
(bad)
into
push
jb
lahf
movs
std
cmps
inc
add
xchg
dec
xor
adc
pusha
cmp
in
mov
xchg
and
mov
xor
pop
popa
or
scas
dec
adc
mov
cmp
adc
data16
adc
test
loopne
loope
jnp
jecxz
xchg
xor
or
jno
ror
xchg
outs
mov
and
mov
sahf
shl
mov
or
inc
popf
xlat
xchg
xor
test
sar
xchg
and
mov
imul
ins
push
cmps
popf
sbb
shl
sub
cmp
jno
in
loop
xchg
add
push
or
stc
sbb
xor
pop
imul
(bad)
jmp
out
mul
out
push
and
daa
adc
inc
jg
fsub
arpl
push
retf
pop
mov
push
and
push
std
or
add
mov
sar
jo
fisubr
sbb
retf
inc
aad
ret
jmp
inc
sbb
and
mov
mov
push
inc
xor
pop
fisubr
sar
sub
test
repnz
out
adc
jno
jmp
mov
test
cli
sbb
dec
or
test
leave
sbb
lds
pushf
fincstp
fsub
lahf
add
ret
inc
jg
jb
adc
xlat
xor
out
push
leave
sbb
retf
popf
(bad)
mov
inc
stos
mov
pop
sub
adc
adc
enter
lea
stc
hlt
pop
pop
les
sbb
and
add
movs
pop
mov
or
imul
(bad)
repnz
retf
shl
jno
pop
stos
bound
arpl
aam
jle
fdiv
(bad)
loope
cmp
int3
or
xchg
out
push
cmps
jae
fidivr
retf
ret
jns
lds
clc
sub
or
ss
or
cmp
loop
into
cmp
in
das
fwait
inc
inc
xor
dec
pusha
push
inc
sbb
mov
mov
(bad)
(bad)
test
xlat
xchg
pop
and
stc
cmps
push
and
and
pop
es
(bad)
mov
adc
ret
stos
xor
test
jnp
into
cmp
pop
loopne
ds
xchg
xlat
cdq
sub
pop
jb
in
mov
push
(bad)
cmps
xchg
lock
cmp
pop
repz
std
loopne
xor
mov
pop
add
sti
xchg
mov
sbb
adc
sub
sar
jnp
sub
mov
xchg
rol
jnp
ror
mov
mov
or
in
jecxz
arpl
pop
sbb
or
fld
and
in
sbb
mov
iret
lods
pop
add
jg
dec
jmp
pop
jp
int
popa
inc
mov
sbb
fmul
sub
jge
in
adc
dec
ret
and
shl
fs
pop
add
fidiv
add
and
shr
out
pusha
mov
mov
scas
pop
pop
push
or
push
fwait
pop
ret
sub
adc
shl
scas
cli
xor
sub
inc
sbb
cmp
arpl
xor
cmp
mov
rcr
xor
and
cli
jnp
cmp
sbb
xchg
or
stc
push
fdivr
or
sbb
jge
out
lods
jno
rcl
je
lea
xor
dec
(bad)
push
mov
fidiv
aaa
or
iret
push
loope
push
test
pop
ins
mov
adc
push
add
jnp
xor
xor
xchg
lods
pop
stos
stos
das
retf
pop
pop
stos
adc
pop
shl
pusha
mov
xor
mov
xchg
push
je
cmp
push
mov
sub
daa
call
mov
xchg
and
cmp
scas
cmc
lea
mov
(bad)
ret
adc
xchg
movs
dec
mov
test
push
cmp
scas
pop
fimul
fst
sti
idiv
mov
std
push
mov
or
enter
jmp
sub
mov
addr16
xchg
or
push
xor
loop
fs
test
sbb
cmps
sub
mov
adc
fiadd
xchg
in
and
and
inc
dec
daa
retf
ins
adc
xchg
mov
or
retf
adc
call
mov
pop
(bad)
cdq
jbe
fld
pop
stos
ins
pop
push
mov
mov
(bad)
dec
xchg
inc
scas
punpckhbw
retf
xchg
cmp
add
hlt
cmps
xor
push
cmp
mov
xchg
xchg
jae
idiv
lods
and
and
sub
shr
fldcw
cmps
addr16
ret
add
imul
jecxz
or
int
(bad)
adc
ror
lea
adc
inc
xchg
addr16
loopne
jmp
jno
(bad)
sub
or
out
jg
add
sub
xor
pop
mov
mov
adc
lea
inc
out
push
jl
enter
xchg
(bad)
cmp
dec
test
dec
(bad)
fwait
gs
cmp
shr
xchg
pop
push
jp
sub
sbb
loop
sbb
sbb
push
dec
or
jecxz
mov
cmp
in
and
or
inc
and
sbb
addr16
pop
data16
jbe
pop
fdivp
pop
xor
pushf
inc
neg
push
or
xlat
hlt
or
sbb
sbb
aad
sub
js
iret
xchg
sbb
in
and
jecxz
icebp
cli
out
jnp
inc
cmp
xchg
arpl
push
mov
add
shl
punpckhdq
das
cmp
fcomp
pop
and
nop
int
out
cdq
mov
push
or
adc
(bad)
(bad)
and
add
popf
arpl
add
paddusw
cmp
bound
enter
jle
ror
fs
imul
push
or
in
push
xchg
mov
pop
jo
stos
aad
sub
or
mov
lods
fwait
out
push
aaa
ss
xor
push
cdq
in
sbb
jge
repnz
push
dec
mov
pop
push
push
xchg
push
jnp
dec
mov
test
mov
mov
call
push
xor
dec
fild
xchg
cmp
aam
outs
and
mov
js
inc
popf
inc
xor
in
cwde
sub
dec
bound
mov
call
ss
leave
sti
test
test
and
outs
out
push
cmps
es
stos
aad
aas
dec
out
inc
arpl
fdivr
fild
or
(bad)
and
xor
push
mov
rcr
gs
inc
jge
ja
or
push
sub
xchg
jo
mov
aaa
test
(bad)
aam
push
pop
ret
fnstenv
xlat
or
sub
jge
pop
bswap
xchg
retf
push
jecxz
es
adc
(bad)
iret
dec
xor
fisubr
push
cld
or
sar
inc
cmp
cmps
retf
inc
push
dec
loopne
ror
sbb
xchg
repz
cmps
sbb
mov
adc
and
jo
sub
push
push
std
ins
lds
retf
jnp
xor
jmp
arpl
scas
adc
fwait
sbb
add
jmp
daa
dec
xchg
sbb
ffree
in
(bad)
(bad)
fmul
inc
sti
out
xchg
ret
loop
scas
shr
mov
dec
or
movs
cmovns
adc
dec
ja
mov
in
stos
push
repz
inc
popf
mov
push
arpl
out
push
in
cwde
or
test
push
jl
(bad)
in
and
cli
in
clc
xor
pop
outs
lahf
imul
ins
xchg
cld
stos
or
lock
push
add
in
push
(bad)
xor
push
mov
and
jb
scas
jmp
push
(bad)
xor
add
add
sub
clc
jo
(bad)
lods
jae
mov
dec
dec
adc
push
xor
push
dec
or
(bad)
xor
imul
repnz
add
icebp
and
out
aas
pop
xor
xchg
mov
ins
xchg
jno
mov
or
jecxz
jne
cmp
mov
jbe
jmp
dec
pusha
jo
dec
xchg
(bad)
sbb
pop
adc
cmp
pop
add
cmp
mov
sub
xchg
aad
call
sbb
xor
pop
adc
sbb
sub
jo
sbb
mov
sbb
mul
pusha
leave
(bad)
jae
mov
sbb
int3
test
clc
(bad)
jecxz
hlt
int
jae
inc
test
and
(bad)
mov
mov
pop
xchg
cmps
mov
adc
mov
test
sar
div
dec
loope
retf
retf
(bad)
mov
cmp
movs
push
fidivr
js
mov
add
sub
add
sbb
(bad)
pop
leave
or
dec
lds
es
aam
push
or
pop
outs
ror
sub
leave
add
shr
jno
cwde
xchg
cmc
lsl
daa
(bad)
dec
adc
fisubr
push
aaa
mov
loope
lods
cmc
cmp
mov
fld
in
add
xchg
cmp
mov
mov
scas
mov
int
stc
xlat
rol
lods
push
and
xchg
pop
dec
stos
push
(bad)
cmp
fsubr
daa
cdq
test
pop
div
lock
jne
jl
es
cmp
nop
mov
aas
add
xchg
into
xchg
imul
dec
(bad)
fisubr
lock
jo
inc
mov
ja
push
jge
cmp
pop
sbb
fnsave
fbstp
outs
cmps
xchg
sbb
es
movs
ss
ss
jbe
int
and
sub
cmc
xchg
aad
xchg
jge
mov
ins
mov
aad
xchg
cmp
or
and
mov
aad
push
pop
inc
lds
mov
lahf
pop
lods
ret
scas
xchg
dec
pop
icebp
ror
shr
push
dec
aas
add
fs
mov
imul
out
sbb
mov
rol
jg
iret
xchg
inc
mov
mov
mov
movs
cs
das
jp
pop
test
sbb
imul
out
jmp
jge
or
lock
cmps
sub
jnp
jmp
call
mov
fisubr
pusha
jb
mov
jmp
out
xchg
sub
aam
jno
add
fistp
lods
mov
pop
(bad)
or
shr
adc
cli
dec
inc
xor
mov
xchg
pushf
inc
and
sar
test
pop
stc
in
pusha
push
scas
jbe
stos
push
(bad)
retf
je
stos
push
jbe
sbb
mov
mov
push
arpl
push
push
pop
imul
lods
sbb
and
xchg
push
ror
cli
dec
jnp
inc
inc
imul
int
aaa
push
and
imul
dec
push
pusha
gs
cmp
fs
mov
and
ins
(bad)
jp
in
inc
ret
mov
mov
fstp
jecxz
xlat
fisubr
nop
in
loopne
jbe
lods
cdq
sub
es
lea
xor
cmps
and
push
mov
ds
imul
jle
movs
repnz
fsubr
inc
arpl
dec
repnz
and
int
pop
cmp
lahf
adc
mov
inc
mov
and
jge
xlat
stc
ret
ss
out
jge
popf
and
mov
push
jle
mov
movs
add
jnp
jbe
repnz
dec
xchg
pop
push
sub
pop
hlt
inc
lds
inc
jle
mov
lea
idiv
dec
xchg
mov
xor
ret
xor
or
adc
retf
add
rol
xchg
sbb
pusha
jg
adc
sti
push
push
stos
fcomp
retf
cmps
pop
mov
mov
push
mov
sub
inc
icebp
mov
stos
movs
test
in
cmp
pop
inc
dec
lea
push
cwde
mov
inc
mov
cli
stc
cwde
lea
or
and
fld
or
mov
cmp
call
cmp
sbb
push
mov
push
jns
retf
or
or
push
adc
test
inc
repnz
je
and
adc
push
pop
push
cli
or
not
and
imul
sar
add
mov
or
push
cmp
in
xchg
bound
mov
imul
jne
fstp
sbb
shr
mov
adc
jl
lods
je
push
(bad)
std
mov
jl
sbb
cld
mov
jo
imul
mov
xchg
sar
jo
call
add
aam
or
jnp
popf
lea
lock
sbb
mov
ins
add
and
loopne
cmc
(bad)
shl
sbb
xor
(bad)
mov
or
and
imul
push
int3
add
sbb
nop
adc
popa
retf
cmps
test
hlt
movs
daa
sbb
ja
aam
cmps
js
pop
outs
les
mov
leave
push
call
pusha
lods
sbb
push
(bad)
in
and
mov
imul
mov
jecxz
mov
fwait
lds
stc
and
mov
pusha
or
clc
or
xchg
out
xchg
push
adc
ins
ret
scas
lea
sbb
push
jp
jne
pop
nop
popf
dec
push
popf
jmp
xacquire
pop
pop
cmps
xor
adc
in
fild
ins
adc
xor
mov
mov
clc
mov
mov
or
mov
pushf
std
jno
sti
sub
rcl
jno
inc
es
push
add
or
xchg
mov
and
pop
sub
int
pop
push
call
mov
lods
push
push
xchg
cmp
xor
jns
jb
push
cvtdq2ps
mov
cmps
sub
cld
rol
movs
push
iret
and
call
pop
cld
int
ins
addr16
xchg
xchg
ins
adc
jnp
pop
jo
push
adc
(bad)
imul
xor
mov
jb
in
push
jle
hlt
adc
jl
lock
or
sahf
ins
inc
sbb
jle
cdq
shl
pop
cvtdq2ps
retf
cli
or
adc
add
mov
mov
fmul
in
sbb
mov
clc
std
ja
mov
int3
mov
xchg
stos
jae
mov
sbb
cmp
or
ds
jle
jno
or
sar
lock
cs
test
sbb
adc
xlat
or
jae
add
mov
add
cmp
retf
and
jno
pop
imul
xor
icebp
ss
inc
sbb
hlt
and
adc
arpl
ror
jg
test
aam
push
fsub
adc
repz
jno
pop
inc
mov
xchg
add
movs
retf
out
int3
cmps
iret
pop
shl
mov
sbb
adc
or
cmps
lods
mov
mov
fld
pop
jecxz
ja
nop
mov
xchg
dec
ret
xor
push
ins
xor
jp
shr
cld
and
nop
fld
nop
bound
cdq
xor
dec
bound
push
mov
push
into
xchg
add
dec
push
and
hlt
inc
cwde
mov
ss
jo
(bad)
lods
movs
cdq
push
(bad)
add
(bad)
arpl
or
ins
setns
or
imul
aas
mov
push
push
pushf
and
mov
or
test
mov
mov
sub
stos
stos
xchg
sub
outs
xchg
lds
scas
mov
loop
inc
in
in
mov
xchg
(bad)
inc
xchg
retf
xchg
mov
loop
gs
dec
jle
add
mov
rcl
add
xchg
dec
cli
dec
inc
or
in
(bad)
ror
xor
push
adc
dec
les
sbb
aam
je
div
sub
jbe
mov
das
xchg
mov
fcom
and
pusha
xchg
mov
add
adc
inc
dec
xchg
jl
int
or
loope
xchg
lea
dec
and
(bad)
pop
mov
dec
mov
inc
or
mov
lahf
pop
ins
adc
mov
add
jle
xlat
in
mov
aad
inc
inc
jle
rcl
push
sbb
lods
adc
ret
jmp
std
or
cmps
mov
cvtdq2ps
sub
xchg
xor
mov
pop
mov
adc
rcr
xchg
imul
dec
jae
(bad)
jns
mov
mov
(bad)
jb
fnsave
repnz
mov
push
inc
or
sub
push
ret
lahf
dec
mov
mov
xchg
lods
inc
test
inc
lock
cmp
imul
ret
dec
repnz
jne
inc
or
mov
pop
outs
jae
add
pop
push
push
(bad)
dec
call
ss
retf
xor
adc
cmp
sbb
(bad)
cmps
ds
rcr
les
aas
sti
mov
ret
xchg
add
push
(bad)
and
nop
bound
loop
cwde
inc
out
jns
mov
push
shr
into
add
arpl
mov
loopne
inc
mov
push
scas
adc
loopne
jge
(bad)
repz
iret
test
dec
xchg
dec
xchg
mov
popf
lea
and
std
cmp
js
mov
movs
imul
outs
or
(bad)
dec
push
xor
push
cmp
ret
mov
lds
xchg
adc
adc
cmc
pop
push
inc
(bad)
inc
lods
std
dec
xlat
xchg
cvtps2pi
iret
jmp
cmp
shr
jg
cdq
sub
jmp
mov
jbe
dec
int
adc
test
repz
scas
(bad)
shl
ins
nop
or
jmp
shl
push
inc
(bad)
pop
mov
pop
jbe
sar
sbb
jne
shl
mov
bound
jp
adc
scas
adc
or
popf
mov
(bad)
int
pop
dec
das
std
adc
lea
jg
jno
add
ins
mov
movs
jb
out
mov
xchg
jg
hlt
sahf
jmp
add
icebp
jne
jl
lahf
mov
sti
sub
call
lods
sbb
clc
mov
ins
retf
enter
mov
pop
jb
add
push
hlt
pop
paddw
push
(bad)
mov
ret
jecxz
out
or
jge
xchg
lods
dec
jb
push
call
jge
fmul
mov
in
xlat
xchg
leave
test
jno
mov
je
sub
xor
enter
sub
mov
call
arpl
clc
int3
fwait
lock
add
(bad)
jnp
arpl
adc
es
fidiv
mov
add
sar
repnz
xchg
jnp
js
mov
pop
test
xchg
mov
mov
movs
mov
ret
(bad)
jae
idiv
sub
push
inc
pop
cmps
scas
and
cmp
arpl
inc
dec
lods
mov
mov
inc
or
ds
push
or
aaa
and
dec
jmp
jae
push
jbe
mov
and
into
xchg
popa
(bad)
clc
int3
sbb
iret
shl
fidiv
jb
jmp
aaa
test
mov
mov
les
push
sbb
std
pop
dec
into
jnp
add
(bad)
push
int
popa
jbe
adc
repnz
ret
loope
imul
jbe
scas
xchg
movs
inc
pop
push
sbb
frstor
(bad)
(bad)
adc
outs
adc
mov
(bad)
mov
repz
ret
and
xchg
sahf
dec
mov
mov
dec
jecxz
in
mov
ficomp
xor
dec
inc
sbb
and
mov
mov
loop
cs
cld
xor
sahf
mov
inc
sub
xchg
jnp
mov
cdq
gs
cmp
inc
leave
retf
xchg
or
xor
fidivr
hlt
cli
add
mov
out
ficom
jnp
push
(bad)
adc
(bad)
mov
pop
add
mov
jp
popa
loopne
mov
inc
jb
ror
jne
pop
xor
sub
imul
add
sahf
loope
sbb
or
call
or
mov
int
iret
mov
js
scas
xchg
ja
cmp
dec
mov
shl
jne
add
lds
repnz
stos
ins
mov
scas
out
ins
xchg
mov
lods
mov
dec
in
push
dec
lds
lods
mov
sub
lea
xchg
imul
and
loopne
xchg
ins
loope
iret
sbb
mov
imul
pop
dec
cdq
popf
sbb
adc
test
xchg
je
pop
lods
xchg
xchg
lea
mov
scas
mov
imul
rol
xchg
lea
movs
mov
xchg
movs
int
cwde
hlt
xchg
cli
imul
mov
pop
stos
mov
iret
test
push
setno
shl
jns
mov
mov
mov
mov
dec
imul
jg
int
shr
jge
xchg
std
test
sbb
or
popa
push
xchg
in
shl
and
je
jg
repz
fdiv
jecxz
repnz
inc
push
cdq
dec
fnstenv
call
mov
repnz
adc
js
jbe
inc
xchg
and
stc
sub
fild
jo
sbb
mov
adc
ret
dec
repz
fistp
rol
sub
cmc
(bad)
loopne
mov
mov
lods
lea
jo
add
sub
and
ret
xor
or
je
dec
test
loope
jmp
xlat
pop
int
xchg
pop
mov
call
stc
retf
les
sbb
jp
stos
and
ss
cmp
mov
lods
clc
jne
into
fsubr
into
pop
stc
cmps
inc
popa
mov
rcl
and
and
jns
sbb
mov
inc
mov
sbb
(bad)
lahf
iret
mov
fistp
(bad)
xchg
push
sub
push
jle
(bad)
cmp
or
inc
xchg
scas
fdiv
in
es
rcl
arpl
cli
adc
and
mov
cmp
aas
pop
test
push
das
aaa
xchg
dec
fldcw
xchg
test
mov
mov
cmc
xor
imul
or
lods
push
jns
les
fadd
call
sub
arpl
rcl
sub
or
pop
adc
fsubr
jg
ins
and
sti
es
fwait
cmp
or
xchg
(bad)
push
ret
mov
mov
not
fild
and
push
jo
shr
add
cmp
cmp
push
imul
mov
push
inc
stc
jmp
mov
sti
(bad)
push
fwait
aaa
add
sbb
ins
cld
add
jo
jbe
cmp
sbb
pop
imul
in
sbb
push
and
lods
rcl
mov
rcl
inc
xlat
jns
pop
sbb
xchg
push
and
push
in
cld
push
retf
inc
stos
adc
fistp
mov
dec
push
mov
out
inc
push
cwde
iret
push
mov
xchg
movs
push
leave
jmp
mov
cld
(bad)
jge
inc
inc
jb
push
repnz
in
call
sbb
cmp
shl
outs
enter
adc
(bad)
repz
sbb
out
add
sbb
jo
ja
dec
stos
mov
test
mov
repz
mov
retf
js
dec
sbb
xchg
xor
push
shr
js
enter
jo
lods
ja
sub
cmp
pop
adc
push
mov
jmp
je
test
push
adc
add
and
ins
shr
test
call
pop
imul
movs
mov
(bad)
call
aad
and
jbe
mov
lahf
xor
sbb
push
out
cwde
jno
sbb
bound
xor
mov
lock
loopne
repz
push
cmp
cmps
mov
neg
shl
pop
sbb
sub
jp
out
pop
repz
push
jecxz
or
sbb
pop
mov
dec
int
ss
inc
jnp
fcmovnu
stos
inc
shl
jno
and
mov
in
xchg
fnsave
xchg
test
mov
and
clc
jne
mov
jb
pop
aad
popa
push
add
add
mov
out
pop
stc
and
pop
mov
cmp
out
sti
jne
lods
pusha
push
adc
test
call
daa
pusha
test
mov
js
mov
lea
test
daa
sbb
sub
loop
dec
icebp
push
retf
xchg
inc
lds
imul
lock
rol
(bad)
mov
es
push
add
aas
pop
mov
test
mov
popa
(bad)
mov
jmp
rcr
add
jmp
add
cdq
xchg
arpl
add
lahf
pop
test
inc
bound
sub
call
loop
mov
push
out
rcr
add
push
ss
mov
ins
dec
shl
call
xor
mov
sahf
mov
shr
dec
inc
in
and
inc
in
xchg
cmp
shr
hlt
push
ss
dec
jbe
ins
int
xchg
lea
cli
sub
sub
mov
cwde
lods
dec
pop
data16
jne
pop
cmp
movs
jecxz
pop
shl
jmp
int
xchg
popa
data16
iret
xchg
fiadd
shl
mov
and
jge
scas
xor
int3
xor
je
pop
inc
xchg
(bad)
push
pop
sbb
inc
push
out
enter
xor
push
aad
jg
add
not
out
push
pop
imul
mov
dec
xor
icebp
pop
icebp
ins
or
push
sahf
or
fstp
lea
mov
mov
or
sub
aam
adc
sbb
mov
cwde
add
not
hlt
mov
hlt
cmc
or
or
jg
mov
scas
xor
push
ja
jmp
xor
add
ffreep
and
shl
sub
fistp
pop
mov
pop
pop
xor
push
pop
(bad)
mov
mov
and
and
out
fsub
xchg
mov
in
fldcw
in
pop
adc
cs
call
sbb
and
rcl
or
push
jne
inc
mov
xor
mov
aad
jnp
ror
es
jle
dec
rol
(bad)
cli
rol
fld
pop
inc
jg
and
mov
push
ins
shl
xchg
jae
test
fimul
lea
fild
pushf
mov
pop
(bad)
jo
shl
or
sub
xor
pop
repz
dec
sbb
in
push
out
std
xor
imul
jg
sbb
lock
jno
jb
imul
inc
jns
jge
aam
add
out
or
inc
ja
dec
pushf
push
mov
cmp
push
es
(bad)
push
and
(bad)
push
jbe
mov
(bad)
jmp
clc
out
or
dec
pusha
int
mov
ins
enter
jo
mov
in
mov
ret
dec
ss
lods
pop
xor
pop
dec
jge
ss
std
mov
sbb
in
fisttp
lods
out
pushf
mov
push
jae
pop
mov
or
mov
add
or
arpl
test
test
test
aad
in
and
retf
adc
imul
add
ret
test
cli
das
fdivr
dec
call
push
push
int
dec
jecxz
and
lds
(bad)
iret
imul
push
or
lock
mov
mov
xchg
int
test
cmc
or
test
dec
cmp
addr16
popf
jae
mov
lock
test
dec
in
popf
mov
lods
mov
int
or
add
pusha
inc
inc
adc
cdq
mov
sbb
and
dec
sbb
pop
aas
call
xchg
pop
int
mov
mov
or
test
ins
xchg
and
test
cmps
or
xchg
xor
or
out
mov
ins
sub
(bad)
mov
mov
lods
or
adc
or
ins
out
test
cmp
push
mov
popf
add
dec
cmp
shl
inc
movs
push
out
dec
dec
mov
pop
xor
mov
ret
xchg
or
dec
sbb
adc
jno
jo
and
popf
cmp
fldlg2
and
xchg
mov
mov
daa
and
pop
cmp
sbb
sub
ffreep
xchg
push
and
mov
aam
mov
inc
mov
and
adc
test
mov
loopne
push
leave
push
out
or
call
adc
(bad)
(bad)
imul
imul
loop
loopne
inc
mov
repnz
push
push
mov
jae
out
sub
ret
mov
jmp
sbb
jmp
dec
xor
int
out
jg
jb
and
outs
xor
stos
movs
push
dec
jo
inc
div
inc
lea
cmps
add
jg
ret
aas
fsub
mov
dec
jle
dec
cwde
sub
test
cmps
pop
das
test
clc
imul
dec
adc
ret
jnp
rcr
dec
mov
fwait
jp
(bad)
cmc
movs
xor
push
push
test
scas
mov
or
shl
push
js
js
retf
lds
clc
icebp
ret
pop
js
(bad)
stc
(bad)
push
gs
vphsubdq
jo
cmp
adc
loop
loope
sub
sub
pop
sub
xor
ret
push
pop
cdq
push
mov
leave
call
test
fstp
sbb
mov
add
ja
sbb
addr16
push
mov
pop
out
out
push
fnstenv
pop
movs
test
add
das
jmp
popa
popa
popa
fwait
inc
push
out
dec
pop
xchg
and
and
xchg
inc
sbb
adc
or
lahf
pop
out
scas
ins
cld
cmp
lock
(bad)
push
add
inc
in
mov
inc
sbb
rcl
aad
fucomp
or
mov
cmp
hlt
daa
lds
push
xchg
je
mov
(bad)
cmp
sub
mov
arpl
sub
and
and
fcmovb
mov
pop
push
jecxz
cmp
jle
pop
daa
fsubp
pop
je
ins
out
dec
bound
stos
aam
sub
fld
and
mov
inc
cmps
mov
movs
xchg
pop
mov
fcomp
aas
jle
imul
leave
int
out
movs
test
movs
mov
ret
(bad)
data16
(bad)
sbb
pop
fisub
mov
mov
adc
push
xlat
xlat
mov
dec
mov
add
push
pushf
cmp
dec
fwait
ss
pop
mov
mov
aam
mov
rol
les
movs
imul
ins
scas
ins
mov
push
jo
mov
mov
leave
jns
sbb
jle
movs
or
mov
jae
jl
sub
xor
pop
fst
arpl
xchg
dec
inc
bound
mov
ins
ins
xor
call
mov
dec
sbb
repz
sub
push
imul
fidiv
shr
pushf
adc
loopne
js
sbb
retf
fdivr
push
pop
adc
gs
xor
test
jl
xor
pusha
add
dec
sti
shr
retf
push
xchg
jns
mov
dec
xchg
fiadd
(bad)
in
in
and
xor
lahf
into
call
nop
or
add
xor
inc
punpckldq
cmp
sbb
jnp
sub
retf
adc
pop
inc
adc
jae
xor
ret
inc
int3
jbe
ret
jmp
add
cmp
jb
adc
xlat
imul
movs
push
and
fcmovne
enter
pushf
movs
mov
sbb
daa
ss
aam
inc
xchg
ja
xchg
mov
push
dec
mov
aad
mov
addr16
pop
sbb
mov
shr
mov
jle
je
mov
neg
push
mov
inc
lock
push
inc
xchg
sahf
test
loop
xchg
mov
xchg
mov
xchg
das
add
hlt
mov
cs
dec
add
mov
fs
outs
nop
scas
iret
pop
aas
leave
outs
sub
fisttp
sbb
xchg
scas
mov
pop
cmp
push
cmps
fidiv
iret
inc
std
std
add
fs
mov
pushf
cld
imul
add
lea
or
pushf
dec
pop
imul
pop
fidiv
(bad)
cmps
rcl
daa
fcmovbe
shr
add
(bad)
les
(bad)
ret
ret
ret
xchg
cmps
ret
pop
scas
loope
pop
add
mov
mov
mov
add
push
sbb
xchg
xchg
div
mov
popf
xchg
or
jg
cmp
leave
outs
fldcw
rol
test
mov
push
mov
xchg
(bad)
ret
sub
xchg
or
cmps
imul
push
outs
pop
enter
adc
out
fistp
push
mov
mov
test
xchg
xchg
jecxz
add
sbb
cmp
cwde
or
lds
cmp
or
in
xchg
clc
or
push
dec
enter
mov
lods
sub
movs
mov
push
mov
mov
mov
cwde
fs
rcr
cmp
pop
push
iret
xchg
arpl
xor
mov
mov
outs
fwait
out
scas
jge
cmc
jmp
mov
imul
add
push
xchg
test
mov
int3
out
out
cmps
mov
(bad)
into
cdq
or
jmp
mov
sub
jge
cli
jnp
or
add
add
cmp
out
inc
or
(bad)
cmc
mov
pop
or
push
pusha
and
out
inc
push
jns
loope
inc
jmp
ins
nop
(bad)
or
xchg
mov
push
pushf
mov
add
jle
cmp
xchg
sub
imul
adc
xchg
xchg
dec
ds
adc
xchg
dec
jp
test
shr
out
int3
shl
fs
iret
ins
lock
xchg
cmp
inc
xchg
add
sbb
fbstp
popf
xor
std
xor
hlt
cmp
add
jns
ja
or
dec
outs
stos
lods
test
adc
mov
sbb
xor
push
hlt
push
iret
or
pop
adc
sahf
addr16
adc
not
out
arpl
or
lods
pop
dec
mov
aas
adc
jno
and
cli
shl
retf
add
and
pop
dec
jb
jp
pop
inc
cmc
xor
mov
mov
add
and
call
ret
xor
call
movs
cmc
add
add
sar
sub
inc
fwait
xor
aaa
daa
inc
in
jecxz
je
mov
mov
loopne
das
jp
sub
jne
mov
push
push
inc
mov
outs
std
pop
xchg
pop
movd
loopne
test
mov
and
movs
sub
test
add
cmp
fs
jnp
mov
je
(bad)
pop
cmp
aas
adc
aas
inc
shl
aaa
pushf
cli
repnz
jbe
pop
cwde
add
pop
scas
push
gs
inc
outs
mov
test
in
test
inc
push
xor
ret
cld
(bad)
leave
push
cmp
xchg
pop
sbb
adc
cmp
mov
enter
cmps
jg
in
stc
cwde
push
sbb
dec
mov
sub
mov
cdq
xchg
call
test
jecxz
xchg
fstp
loope
addr16
add
xor
cs
(bad)
mov
pop
ins
mov
neg
sub
push
xor
fidiv
push
loope
jmp
repnz
jl
jns
aaa
in
adc
movs
stc
ror
movs
xchg
lea
pop
clc
cmp
push
pop
xlat
mov
repz
or
stos
pop
std
sub
or
(bad)
repz
add
out
inc
pushf
pop
or
mov
dec
test
mov
mov
repz
xor
arpl
mov
jmp
inc
mov
sahf
ret
scas
dec
mov
add
dec
mov
(bad)
call
pop
mov
and
mov
xor
(bad)
ins
les
add
push
and
and
dec
int
sub
rol
js
in
pshufw
loop
addr16
iret
pop
cmp
repnz
js
mov
or
xlat
inc
push
and
div
int3
cli
dec
cwde
xor
and
xchg
pop
cmp
pop
and
push
mov
push
sbb
jns
inc
xchg
push
mov
int3
mul
mov
cmp
repnz
fstp
inc
adc
add
mov
out
add
ret
test
sub
dec
sub
jl
fidivr
jno
pop
adc
or
int
sub
mov
pop
or
ds
mov
scas
push
mov
shl
xchg
cmp
test
stc
stos
fs
neg
xor
add
arpl
in
fldenv
pop
dec
pop
imul
lods
push
imul
and
std
inc
(bad)
pop
or
push
pop
addr16
dec
xchg
adc
cmc
mov
mov
fadd
cmovp
test
xchg
xchg
clc
jns
loope
xchg
gs
clc
scas
cmps
or
mov
fcomp
add
xchg
mov
inc
scas
jge
adc
add
sub
sahf
mov
minps
pop
dec
sub
jle
int
popa
jno
mov
out
outs
into
int3
test
mov
scas
pop
mov
arpl
popf
cmps
ss
pushf
scas
xchg
mov
fdiv
mov
leave
sbb
les
pop
js
nop
stc
mov
push
movs
inc
sbb
movs
mov
sbb
les
xchg
lea
pop
pop
call
dec
xchg
scas
fwait
mov
out
scas
call
sub
sub
mov
test
push
pop
mov
(bad)
aas
fcmovnu
popf
adc
pop
call
sbb
addr16
cmp
xchg
mov
mov
dec
cwde
gs
lods
out
ins
jg
cmc
loope
mov
xor
adc
cmp
push
sbb
inc
cmp
(bad)
xchg
push
and
xchg
into
popf
dec
dec
inc
pop
rcl
(bad)
int3
(bad)
pop
lahf
xchg
pop
mov
icebp
xchg
clc
aam
(bad)
sbb
in
mov
push
mov
ds
or
dec
into
pop
aas
inc
xor
sub
lods
sbb
test
adc
pop
out
test
xchg
lds
add
and
push
scas
les
push
cmp
movs
xor
stc
(bad)
and
bnd
add
test
outs
adc
retf
push
push
or
dec
scas
scas
fcmovbe
mov
push
pop
(bad)
call
lods
test
add
inc
mov
push
push
inc
mov
sbb
dec
jl
mov
xchg
cli
(bad)
sahf
imul
nop
inc
mov
push
xor
adc
sub
dec
mov
add
lods
test
mov
mov
mov
add
in
daa
mov
or
imul
or
inc
xor
ins
(bad)
xchg
xchg
inc
ins
mov
mov
cmovno
pusha
sbb
aaa
cmp
push
js
adc
jbe
cli
cld
hlt
xor
or
pop
sub
popa
inc
sbb
jnp
add
scas
dec
mov
mov
jg
imul
les
rcl
call
mov
(bad)
and
shl
pop
mov
rcl
add
sub
and
sub
push
jmp
pop
mov
shr
into
jb
pop
out
push
xchg
(bad)
xchg
idiv
aad
cmps
and
push
das
inc
pop
mov
xor
ror
mov
adc
cmp
adc
ins
dec
and
add
pop
or
inc
cmps
inc
jecxz
ds
out
dec
or
loopne
and
aas
mov
addr16
sbb
adc
out
out
push
and
adc
cmp
ret
and
or
(bad)
pop
daa
stos
scas
cmps
and
mov
mov
fdivr
adc
xlat
add
sub
or
in
push
xor
test
ret
enter
pop
cmps
ret
out
test
ja
iret
cmp
push
or
pop
push
lock
mov
repz
or
cmp
cmc
cmps
xchg
inc
fbld
mov
scas
dec
jle
add
jmp
repnz
dec
mov
mov
add
mov
sti
push
and
or
and
arpl
pushf
pop
scas
jg
xlat
mov
(bad)
sub
inc
fld
test
jp
mov
test
call
into
in
sub
pop
xlat
dec
out
pop
xsha256
cmps
adc
mov
movs
popf
movs
inc
fild
test
dec
push
pop
mov
fisttp
push
jmp
pop
pop
dec
adc
or
xchg
outs
(bad)
jge
xchg
jno
sbb
int
popf
mov
mov
and
inc
fst
xchg
test
data16
push
int3
outs
jge
mov
inc
adc
pusha
les
dec
icebp
jge
mov
outs
fadd
aaa
mov
pusha
stc
dec
push
ja
das
lock
nop
inc
inc
jae
xchg
into
cmp
rol
push
popf
sub
sti
repnz
cli
bound
jo
lock
test
test
lods
aas
outs
gs
aam
bnd
mov
cmp
jle
nop
fdiv
loop
lock
sbb
(bad)
bound
cmc
mov
and
inc
jbe
push
mov
add
push
cmp
(bad)
mov
dec
mov
sub
arpl
dec
push
leave
xchg
pop
jo
lds
push
push
inc
jb
adc
inc
add
adc
out
cwde
inc
push
std
push
out
mov
call
ja
or
fisttp
cs
pop
push
xchg
adc
mov
adc
inc
inc
int3
seto
or
mov
ss
adc
mov
in
iret
adc
push
cpuid
adc
mov
aas
popa
cmps
xchg
inc
xchg
xor
jge
mov
or
div
xchg
mov
sub
mov
dec
mov
and
jae
cs
clc
adc
sbb
lods
mov
adc
push
(bad)
lods
sub
leave
lds
fmul
cmp
jmp
mov
shl
mov
popf
rcr
adc
mov
and
cmps
add
adc
or
not
dec
cmp
push
xchg
mov
bound
push
xchg
movs
arpl
pop
mov
retf
out
xchg
push
cwde
fldenv
and
add
xor
out
push
inc
popf
sub
fmul
clc
pushf
pop
icebp
stos
jnp
fnstenv
xor
mov
add
sbb
xchg
jge
ja
sub
movs
and
xchg
cdq
inc
adc
call
or
mov
xchg
sbb
clc
(bad)
jmp
test
test
cmp
pop
(bad)
or
int
je
adc
loopne
retf
out
shl
pop
sub
and
pop
inc
(bad)
cmp
fimul
in
cmp
mov
retf
mul
xor
xchg
add
inc
lds
push
lea
cmp
inc
mov
and
test
jne
push
ss
outs
lods
mov
or
xchg
mov
mov
retf
mov
mov
ret
mov
cld
dec
in
or
outs
in
push
sbb
push
adc
mov
popf
retf
mov
xchg
or
mov
mov
pop
test
mov
sub
cmp
scas
xchg
in
or
ss
fsub
retf
sahf
mov
xchg
retf
ret
das
jle
inc
push
xor
mov
jb
sbb
in
adc
test
mov
mov
nop
jp
nop
jmp
sbb
sub
jb
jb
arpl
xor
fdivp
push
cmp
shl
lahf
pop
repz
cmp
out
mov
pusha
imul
mov
in
inc
pop
aad
mov
in
jl
fidiv
or
loopne
ss
mov
mov
hlt
push
or
sar
push
repnz
xor
mov
cmp
jg
popf
test
arpl
daa
jae
(bad)
pop
sub
(bad)
lods
scas
mov
es
addr16
sbb
push
lods
add
cli
outs
mov
hlt
xchg
add
lods
push
mov
dec
or
retf
xor
fcmovnu
xlat
xor
popa
ds
movs
mov
leave
push
jmp
lahf
std
xchg
sbb
jns
fst
mov
out
into
popa
dec
test
int
stos
adc
xchg
leave
mov
cmp
stos
push
or
sbb
jmp
sub
dec
jb
ficom
dec
sahf
dec
outs
push
mov
inc
dec
sbb
scas
imul
sub
(bad)
sbb
mov
scas
test
mov
dec
(bad)
cmp
loop
enter
hlt
loopne
std
and
bound
or
inc
push
cmp
cmps
popa
icebp
jns
fcomp
mov
and
retf
fdivrp
pop
cli
scas
xor
dec
(bad)
js
es
sti
jmp
jns
(bad)
std
xchg
pop
dec
add
das
mov
bound
cld
ins
mov
xor
cs
ret
cmp
loop
add
push
add
cld
and
cmps
add
test
mov
test
jg
loop
ja
lea
aas
dec
retf
jp
mov
or
sub
push
aas
gs
sbb
repz
xor
push
push
cmp
test
pusha
adc
xor
dec
rcl
cdq
data16
call
xchg
sbb
push
enter
idiv
xchg
sub
mov
sahf
pusha
pop
cmc
jb
fild
jg
loop
sbb
adc
repnz
inc
sub
jmp
sub
enter
pop
mov
adc
sti
div
cmps
add
mov
jns
cdq
mov
cld
arpl
int3
sar
inc
jecxz
inc
call
shl
mov
jnp
ficomp
les
lods
mov
fdiv
push
push
imul
sbb
mov
adc
data16
aaa
sub
mov
hlt
cmp
lock
pop
cs
in
imul
or
add
mul
addr16
mov
xchg
retf
enter
pop
loope
jbe
int3
mov
xor
adc
bnd
stc
dec
push
push
into
mov
jle
push
mov
adc
mov
dec
fimul
sub
add
clc
sbb
xchg
loop
repnz
or
jge
hlt
jb
sbb
push
test
dec
dec
xchg
mov
clc
sbb
ficomp
fmul
mov
out
xchg
jecxz
in
loope
test
pop
mov
call
xor
xchg
jmp
in
loopne
sub
inc
cmp
cs
dec
ficom
jle
pop
mov
adc
fisttp
mov
push
stos
dec
and
dec
bound
mov
and
jbe
icebp
repz
pop
bound
loope
ins
stos
rol
mov
cmp
mov
sbb
aas
dec
add
push
mov
push
(bad)
call
dec
cmp
test
out
es
push
add
mov
sti
ins
xchg
adc
jno
fdiv
or
ror
popa
out
pop
lock
cmp
and
(bad)
push
ins
out
mov
add
xchg
icebp
jge
cmp
cpuid
jmp
push
cld
mov
fild
push
dec
movs
aad
add
ret
or
pop
mov
cmp
movs
imul
cmps
cmp
mov
cs
lea
mov
pop
fstp
dec
leave
retf
vorps
fidivr
push
mov
inc
popf
fwait
int
(bad)
out
movs
cld
out
mov
cs
mov
xor
lods
aas
ins
das
ret
inc
(bad)
scas
inc
ins
jne
mov
mov
ret
pop
lods
sbb
(bad)
fdiv
js
and
mov
lea
mov
xor
xchg
out
fisttp
enter
rcr
fst
mov
test
pop
popf
cmp
cmps
lods
push
mov
add
imul
inc
push
jmp
pop
mov
pushf
cmps
shl
inc
mov
sbb
lea
movs
or
popf
inc
setp
movs
repnz
jmp
(bad)
mov
fistp
mov
inc
in
(bad)
mov
mov
fwait
xor
push
cmp
call
aam
stc
pop
hlt
fmul
rcr
outs
in
jo
sbb
push
mov
sub
leave
adc
(bad)
sub
call
pop
sub
inc
ror
or
enter
and
cmp
sbb
movs
(bad)
xor
addr16
mov
loop
jb
sar
mov
mov
movs
mov
add
cmp
add
stos
or
mov
shr
add
xchg
cmp
or
mov
and
mov
xor
or
mov
push
jl
mov
fiadd
gs
repz
cmp
mov
xchg
sub
retf
sub
lods
mov
nop
add
or
mov
mov
xor
daa
sbb
jmp
mov
sbb
push
shr
test
inc
data16
loop
mov
jp
in
mov
imul
lods
dec
cs
out
push
mov
push
dec
repnz
pop
xchg
neg
pop
mov
imul
mov
sbb
in
out
cmp
sbb
push
push
jmp
xor
in
ds
aas
cmp
sar
jo
cwde
out
fisttp
and
scas
pushf
aad
pop
test
out
lea
jp
lea
cli
imul
and
shr
cmp
mov
dec
ins
sbb
adc
(bad)
push
pop
out
(bad)
ins
mov
ja
(bad)
mov
loope
sbb
or
sbb
lods
enter
arpl
pop
inc
inc
out
call
mov
lock
push
test
bound
and
in
adc
adc
out
push
mov
loope
div
xor
adc
ror
pop
sbb
dec
and
ins
lods
lods
sbb
jne
xbegin
rcl
mov
jo
cmp
push
cmp
mov
jge
or
ins
push
pop
pop
cmp
retf
add
cs
aam
leave
fucomp
mov
popa
mov
mov
in
lds
arpl
call
and
inc
mov
pop
push
dec
and
push
mov
call
jmp
imul
sahf
shl
mov
and
imul
or
sbb
inc
dec
imul
pop
dec
adc
or
icebp
sbb
xor
xchg
pop
sbb
iret
pop
shr
inc
jno
and
xor
popf
xor
cmp
call
add
lods
push
mov
jle
push
jae
mov
sub
cmc
std
push
jecxz
rcl
ins
inc
ficom
inc
aam
inc
pop
push
data16
shl
xor
int
rol
(bad)
dec
jno
nop
es
out
outs
and
cmp
sbb
out
inc
repz
movs
mov
inc
movs
in
ds
out
jne
fst
js
pop
jl
in
cmc
(bad)
push
data16
pushf
mov
inc
dec
test
push
aas
js
lock
push
int
jo
xlat
pop
(bad)
pop
and
push
add
inc
mov
cmp
fstp
add
sub
loope
mov
sub
inc
jnp
out
dec
xor
dec
call
lods
add
or
pop
push
and
sbb
pop
and
mov
(bad)
movs
inc
or
in
sti
lahf
into
aaa
sub
fst
pop
(bad)
xor
pop
jns
cmps
xchg
pop
popf
fist
ja
cmp
movs
sub
loope
cmp
fldcw
push
and
aas
mov
mov
psubw
enter
aam
adc
mov
cmps
dec
mov
(bad)
mov
test
fdiv
sub
(bad)
add
sbb
xchg
xchg
(bad)
xor
scas
mov
xchg
inc
mov
sub
cwde
xor
fcmovnbe
inc
imul
or
mov
imul
inc
outs
in
jno
cs
or
inc
imul
xchg
mov
and
xlat
inc
in
fisub
aaa
dec
sbb
div
sbb
sbb
leave
enter
mov
jl
push
mov
xchg
test
pop
cmp
loopne
add
inc
mov
icebp
and
hlt
mov
adc
ret
inc
mov
cs
cmps
adc
das
loopne
inc
sbb
adc
mov
and
jecxz
mov
cmp
gs
daa
jmp
cdq
dec
out
and
inc
ds
add
movs
mov
and
mov
xchg
add
mov
jl
repz
adc
sub
pop
rcl
outs
dec
loope
pushf
xchg
push
adc
loop
test
adc
jne
mov
adc
aad
xchg
sar
aad
test
adc
aas
aam
ins
mov
ins
xor
and
mov
ins
fsubr
add
add
xchg
cli
or
or
inc
gs
scas
mov
mov
(bad)
cmp
dec
aaa
cld
rcl
pop
push
fisub
jnp
(bad)
out
inc
div
push
call
(bad)
retf
cmps
push
sub
iret
inc
shl
push
adc
push
add
push
xor
sti
(bad)
mov
jl
and
sbb
bound
xor
stc
push
or
popa
and
mov
adc
jg
cmp
arpl
pop
leave
fsub
daa
mov
mov
jnp
mov
mov
pop
call
dec
shl
in
push
jb
inc
inc
jo
xsavec
adc
hlt
mov
scas
jp
or
addr16
and
jg
push
push
(bad)
bound
sbb
or
inc
pushf
inc
cmp
mov
add
inc
inc
cmp
pusha
cmp
xchg
scas
mov
fiadd
outs
out
ds
ss
shl
adc
mov
fnsave
jnp
push
es
js
dec
pop
cmp
push
out
scas
and
fcom
mov
mov
mov
mov
or
xor
aad
jecxz
add
sbb
rcr
cli
arpl
shl
daa
aad
adc
aam
cmp
adc
sbb
dec
sbb
xlat
cmp
stos
pop
sbb
mov
inc
out
pop
repz
pop
js
imul
aas
cmp
pusha
ficomp
jns
aam
addr16
jo
inc
in
in
cmp
fisub
pop
sub
mov
push
dec
adc
pop
inc
pop
cmps
in
data16
jmp
mov
and
xchg
movs
stos
adc
jmp
mov
mov
int3
int3
jne
imul
adc
add
ror
mov
mov
jmp
fadd
fisttp
pop
gs
sub
push
mov
rol
icebp
movs
mov
daa
mov
repnz
sub
(bad)
adc
xchg
std
fisttp
ss
ins
ja
pop
call
repz
shl
inc
inc
mov
cld
mov
cmp
mov
dec
sub
mov
repnz
push
sar
ds
pop
(bad)
and
icebp
call
jo
xchg
imul
mov
and
cmp
adc
ds
nop
in
sbb
cmp
(bad)
xor
pop
outs
mov
hlt
call
or
rol
adc
dec
jae
out
add
or
mov
retf
call
test
or
lock
dec
adc
mov
jmp
mov
shl
push
aam
retf
test
loope
mov
aas
jns
retf
pop
popa
(bad)
lods
daa
cmp
sub
mov
adc
mov
or
sub
mov
punpcklbw
movs
into
mov
or
or
mov
cmp
sub
test
bound
xchg
imul
imul
push
mov
loopne
jmp
jecxz
stc
dec
xor
mov
add
inc
(bad)
(bad)
jp
jecxz
aaa
adc
push
xchg
xor
mov
rcr
fimul
xchg
jnp
scas
ror
pop
aas
scas
add
pop
push
xor
imul
add
in
cmp
adc
xchg
daa
mov
sar
pop
xor
push
pop
sahf
pop
and
rcl
sub
cmps
sub
inc
fdivr
push
cwde
push
retf
mov
or
inc
stc
pusha
sub
out
mov
mov
sbb
mov
pop
leave
mov
mov
mov
sub
(bad)
sti
fwait
mov
int3
push
xor
sbb
mov
jnp
mov
imul
addr16
gs
fbld
out
mov
(bad)
nop
inc
fmulp
inc
pop
mov
mov
cdq
nop
sub
or
ds
cdq
fsubp
(bad)
in
jnp
movs
and
jbe
mov
sbb
push
ss
xchg
clc
scas
fwait
loop
pusha
xlat
dec
leave
sub
mov
xchg
pushf
xchg
xor
out
and
popa
cwde
dec
cmp
mov
pop
(bad)
ja
std
mov
fdiv
test
inc
repz
dec
into
mov
cmp
jmp
sbb
and
mov
xchg
or
std
sahf
nop
cmp
xchg
mov
leave
adc
mov
xchg
test
or
add
mov
pop
push
mov
xchg
mov
shr
xchg
into
mov
in
pop
mov
lds
daa
xor
popa
or
mov
sbb
mov
outs
clc
shl
cli
xlat
in
xchg
nop
aas
pop
jmp
cmp
mov
das
enter
les
inc
jo
sbb
ds
mov
inc
jmp
sub
add
mov
dec
inc
jle
push
xor
jbe
and
and
mov
inc
adc
jp
packssdw
lods
rcl
shr
push
icebp
das
jne
imul
rcl
jo
push
imul
jle
xchg
push
mul
push
mov
mov
pop
jo
jle
xor
out
es
or
pop
inc
adc
bound
and
repz
mov
(bad)
pusha
pop
pusha
mov
sahf
nop
data16
lods
addr16
loopne
cli
bound
in
outs
cmp
movs
jle
hlt
inc
aam
adc
pusha
stos
jg
dec
(bad)
scas
in
dec
ds
nop
iret
retf
sbb
pop
jecxz
sahf
idiv
je
push
fwait
leave
out
push
sbb
xchg
inc
pop
pusha
arpl
out
jmp
je
add
bnd
jp
dec
push
jge
pusha
adc
fwait
dec
sub
ja
retf
mov
inc
mov
clc
movlps
cld
imul
push
js
pop
loope
xchg
mov
pmuludq
xor
rcr
(bad)
or
inc
xchg
repnz
outs
ins
mov
dec
enter
outs
mov
and
push
mov
mov
lea
ret
add
adc
jp
stc
int
out
and
xor
jmp
ss
pop
xor
xchg
shl
in
jb
adc
repz
idiv
dec
aam
adc
jge
mov
out
fstp
xchg
imul
pushf
pop
cmp
mul
xor
sub
inc
stos
call
ins
dec
xor
int
scas
jmp
call
fistp
add
dec
dec
pushf
xor
movs
jle
fwait
jle
mov
aad
repnz
data16
test
sbb
xor
and
icebp
inc
xchg
push
cmc
aaa
call
adc
out
movs
adc
cwde
fdivr
mov
test
jle
jns
je
mov
add
aaa
shl
in
and
add
nop
adc
ins
mov
loope
imul
idiv
xchg
dec
push
push
sub
and
cmps
add
(bad)
je
loop
int
jne
test
arpl
add
(bad)
xchg
add
pop
add
addr16
loope
jle
jmp
xor
xchg
pop
or
add
mov
sti
in
lds
mov
inc
or
xor
movs
shl
mov
adc
rep
dec
sbb
and
push
and
jecxz
xchg
adc
and
mov
gs
lock
xchg
fild
das
cli
xchg
ror
xchg
loope
rol
fistp
das
dec
adc
jno
lahf
jo
(bad)
cmps
ja
dec
cmp
imul
push
pop
sbb
push
es
stos
mov
sbb
jns
dec
test
push
xchg
sbb
jnp
cmp
push
pop
pop
pushf
or
pop
inc
das
(bad)
lock
mov
scas
and
cld
add
pop
scas
xchg
push
fmul
dec
fisubr
out
(bad)
mov
mov
pop
xor
lds
dec
jecxz
dec
jmp
shr
ins
mov
lods
dec
(bad)
out
adc
(bad)
or
adc
push
cli
pop
push
movs
addr16
dec
push
sbb
lock
dec
push
jne
lods
or
cmps
repz
hlt
in
sub
and
jmp
xchg
jne
jo
jb
dec
les
mov
outs
dec
pop
into
leave
mov
out
push
xor
loopne
ret
and
mov
loop
sub
mov
jnp
(bad)
pop
jmp
(bad)
cdq
pusha
retf
add
into
aam
or
movs
sbb
lds
test
arpl
scas
repz
adc
or
cmp
sbb
mov
push
and
add
stos
out
add
aad
jo
das
mov
sbb
cmc
out
lods
cmp
sub
sbb
sbb
mov
pusha
movs
push
out
cmp
int3
call
aas
mov
out
adc
sbb
fst
sub
sti
sub
xchg
jle
test
sbb
fld
fstp
stc
dec
in
fldenv
mov
pop
add
ror
lods
adc
sbb
(bad)
mov
or
mov
hlt
or
and
(bad)
mov
clc
int
leave
jo
ror
clc
xchg
cmp
push
fsub
push
push
sub
fs
movs
les
mov
sahf
int
pop
push
jae
addr16
xor
scas
cmp
fidivr
lock
(bad)
out
sbb
pop
mov
and
pop
shl
outs
fs
sbb
nop
in
sub
cdq
push
hlt
stos
jne
pop
retf
das
(bad)
jbe
cmp
adc
(bad)
(bad)
enter
adc
mov
out
shl
pop
xor
cmp
add
push
repnz
hlt
inc
jo
add
nop
jae
inc
sahf
(bad)
jo
xchg
xchg
and
dec
jbe
mov
in
jecxz
es
mov
jo
jb
bound
mov
fadd
wrmsr
jg
jno
cmp
and
movs
ret
push
in
inc
lods
clc
inc
jno
push
push
lock
sub
pop
(bad)
shl
sbb
and
add
xchg
pop
lahf
(bad)
icebp
sbb
pop
lock
inc
push
outs
jno
jle
jl
repnz
sub
jecxz
cmp
sub
jno
(bad)
stos
jnp
pusha
stos
dec
je
cmp
xchg
cmp
push
mov
outs
xor
jae
and
xchg
jle
fmulp
shl
xchg
mov
leave
or
rol
jge
pop
sbb
arpl
ins
push
in
inc
and
repnz
bnd
es
sbb
mov
push
in
xor
repnz
jo
imul
enter
enter
jno
loop
mov
outs
aad
test
dec
rcr
pusha
ja
jmp
mov
mov
sub
repnz
inc
shr
add
xor
add
jns
mov
push
cdq
jle
jbe
imul
inc
pop
in
ins
shr
add
push
mov
mov
or
inc
ins
jb
jae
sub
lock
cmps
fsub
imul
jb
jbe
jg
and
sub
in
xchg
aaa
xor
stos
cwde
shl
mov
jae
add
(bad)
cmp
fmul
loopne
xor
push
push
adc
inc
std
les
inc
xor
lock
ds
stc
fs
dec
test
aad
test
mov
mov
out
int3
dec
movs
mov
adc
fldenv
jnp
daa
sysret
das
mov
pop
adc
aad
mov
xchg
call
sub
mov
push
xor
ror
in
out
push
div
add
inc
adc
loopne
loopne
lea
out
mov
add
jb
mov
imul
mov
mov
les
mov
pusha
test
outs
int3
loopne
leave
xchg
dec
test
pop
xchg
loopne
in
aaa
sar
fwait
lods
mov
aam
pop
enter
xor
pop
jg
inc
arpl
jp
xor
jle
and
sbb
div
stc
xor
mov
xor
pushf
ins
add
or
sar
lahf
repnz
ja
lods
mov
cmp
jg
sar
mov
cmps
push
push
jle
xor
mov
shl
adc
inc
mov
fdivr
js
jb
push
scas
dec
mov
or
dec
sbb
lock
xor
fbstp
pop
cmp
and
cmc
ror
push
ins
es
out
cmps
(bad)
xchg
popf
call
xlat
jl
adc
or
sahf
sahf
mov
daa
in
outs
mov
add
jmp
jne
ror
movs
push
push
push
cmp
pop
pop
or
cmp
aam
aam
gs
scas
dec
xlat
adc
rcr
adc
sub
out
mov
jecxz
jp
stc
test
inc
mov
cmp
fwait
xor
or
and
sub
or
xor
out
xlat
pusha
adc
mov
mov
mov
dec
xor
pop
and
shl
mov
jmp
mov
call
mov
leave
xchg
in
loopne
ret
cs
push
sub
sbb
lock
xor
sub
fsubr
mov
mov
ja
jno
push
repz
xor
shr
fwait
ds
pop
mov
nop
pop
fisttp
stc
ins
(bad)
xor
ss
add
pop
test
call
out
js
jl
call
in
xchg
push
sbb
add
(bad)
push
rcr
enter
ins
jne
cmp
push
cmc
dec
retf
test
or
inc
movs
add
mov
mov
call
push
retf
xor
pop
sub
clc
inc
test
(bad)
inc
ret
mov
stc
shl
push
test
inc
(bad)
fisub
mov
pop
dec
out
aaa
icebp
daa
jns
push
jae
int
fcom
adc
lds
pop
fsubr
mov
push
dec
cmp
dec
pop
jno
shl
repnz
sub
daa
cmp
pop
rol
push
call
mov
mov
es
cmps
fcom
fldcw
sti
push
and
mov
nop
cli
or
inc
pop
rcl
cwde
jnp
sti
sub
adc
xlat
inc
push
pop
inc
and
push
mov
outs
sar
fld
pop
aaa
iret
xchg
sub
push
ins
jecxz
out
inc
(bad)
mov
xchg
push
lds
es
sbb
push
gs
push
inc
dec
shl
ins
hlt
cmp
adc
mov
shr
adc
add
sub
xchg
mov
sub
pop
mov
adc
sti
cmp
(bad)
xlat
and
mov
and
imul
into
cmps
push
(bad)
dec
cmp
leave
sub
cli
adc
cmp
lahf
cdq
test
and
shr
in
pop
and
jb
inc
pushw
inc
pop
lock
push
adc
adc
mov
stos
jmp
into
iret
jge
dec
(bad)
out
sbb
bound
loopne
stc
ret
or
sub
and
fld
xchg
cld
mov
loop
movs
inc
inc
test
jmp
inc
out
jecxz
or
dec
outs
xchg
js
cmps
jmp
pop
jle
push
add
jae
inc
mov
outs
lahf
lds
popa
retf
jmp
cmps
lds
sbb
xor
jno
out
xchg
daa
imul
mov
xchg
daa
dec
sahf
(bad)
lods
mov
into
dec
add
popa
mov
sub
jp
aaa
xlat
sbb
jns
pop
out
pushf
lock
push
add
inc
div
and
in
dec
scas
xchg
xchg
push
mov
push
retf
xlat
cmp
sar
dec
dec
nop
add
xchg
popa
(bad)
ror
mov
(bad)
mov
add
dec
xchg
ins
jno
xchg
jb
add
sahf
je
pop
cmps
data16
jae
sbb
(bad)
pop
mov
neg
dec
or
mov
ret
(bad)
xchg
pop
outs
adc
mov
xor
push
ficom
test
lahf
ret
imul
xlat
and
enter
dec
repnz
cld
pop
sub
mov
pop
or
aam
mov
in
gs
pop
pusha
nop
pop
pop
xor
mov
and
mov
in
inc
loop
or
add
gs
lods
mov
cmp
mov
test
push
ja
icebp
mov
add
icebp
sub
add
adc
and
mov
mov
dec
repnz
jae
in
xor
inc
or
leave
push
jmp
mov
iret
xchg
jge
pop
pop
add
rol
jmp
and
jg
aad
data16
and
mov
jmp
dec
nop
popf
into
jge
jmp
xchg
xchg
lods
mov
leave
out
jle
mov
jne
fwait
les
scas
mov
ror
sub
dec
push
in
mov
fcomp
movs
jmp
lea
jg
or
jbe
xchg
loope
pop
xchg
mov
pop
fisub
xchg
mov
test
(bad)
fcom
aaa
test
and
mov
mov
fwait
aaa
add
jno
es
clc
imul
cmp
lods
pop
push
cmp
push
mov
pop
sub
pop
ficom
ds
add
add
or
fldz
imul
(bad)
ss
std
loopne
cli
adc
out
inc
dec
dec
xchg
and
mov
push
lods
pop
mov
js
mov
(bad)
neg
je
js
ins
lods
and
xchg
movs
mov
jge
pop
movntps
ret
rol
lods
jle
popa
sbb
dec
sbb
(bad)
out
mov
mov
mov
push
push
jno
retf
mov
inc
xchg
dec
xor
imul
push
das
mov
in
pop
sub
jmp
stos
dec
xor
clc
sahf
sub
jne
stc
adc
mov
enter
adc
(bad)
sbb
push
add
cmp
sbb
fisttp
ret
lds
iret
scas
aam
mov
jb
add
sub
lods
inc
aad
fldenv
dec
fs
(bad)
sbb
fdiv
or
add
pop
push
sahf
inc
popf
fcom
addr16
jmp
(bad)
lds
or
fwait
pop
xor
stc
cmp
outs
add
inc
retf
and
pop
fiadd
lods
retf
pop
stc
cmp
movs
mov
bound
fwait
sbb
shl
cli
fist
jge
or
(bad)
jno
mov
jle
inc
jg
int
rol
lea
lods
xchg
cli
(bad)
mov
imul
xchg
xor
mov
xor
mov
mov
push
test
mov
pop
jmp
lods
cmp
repz
dec
mov
and
pop
in
mov
push
or
push
mov
cli
(bad)
popa
mov
xor
test
out
dec
push
sub
jmp
cld
(bad)
std
xchg
dec
push
mov
les
(bad)
ja
out
push
jo
loop
dec
adc
cdq
cmp
das
shl
(bad)
xor
(bad)
sti
and
xchg
fcomp
(bad)
cmp
mov
add
cmp
xor
inc
and
(bad)
fmul
mov
div
pushf
push
aam
stos
aaa
cmp
dec
and
xor
imul
mov
out
push
popa
inc
dec
jae
inc
mov
popa
in
cmp
sbb
add
loop
or
lahf
ins
into
pop
jle
test
shl
mov
loope
jl
gs
loop
xchg
ins
pop
in
xchg
mov
scas
push
mov
jge
push
imul
or
push
pop
mov
fiadd
or
sti
fcomi
pop
jb
xor
push
in
mov
repz
sbb
aas
icebp
fsub
mov
cmp
rol
inc
mov
std
add
mov
arpl
push
dec
bound
cli
fnstenv
sub
les
imul
arpl
lods
bound
cli
mov
xor
sar
inc
adc
ret
mov
and
mov
(bad)
mov
push
mov
test
neg
jae
fld
jmp
xchg
sub
inc
mov
or
sub
lds
xor
dec
cmp
(bad)
imul
fnstcw
dec
dec
jae
rcr
fwait
pop
leave
jns
xor
out
inc
mov
aaa
(bad)
call
out
frndint
dec
push
dec
test
push
sbb
xchg
sub
xchg
rol
loopne
sbb
inc
sub
lea
cmp
repz
xchg
mov
push
enter
retf
mul
or
das
pop
and
adc
call
inc
into
arpl
aas
mov
fsubr
stc
sub
or
inc
retf
sbb
test
xchg
loopne
mov
mov
dec
int3
xchg
jbe
sti
loopne
fnstsw
inc
or
test
fs
push
sahf
pop
sub
or
(bad)
mov
pop
sbb
add
mov
rcr
fmul
xchg
dec
fdiv
popf
test
pop
outs
push
test
stos
xchg
xor
or
outs
pushf
lock
aam
dec
mov
inc
add
adc
in
pop
hlt
js
or
mov
mov
jl
pushf
mov
es
retf
outs
(bad)
mov
sbb
jnp
pop
xor
xchg
lds
push
test
adc
jmp
hlt
adc
dec
lea
xchg
bound
out
or
int
push
sub
loopne
das
add
sbb
mov
imul
xchg
pop
(bad)
sbb
jmp
push
out
loopne
ffreep
cmp
xor
and
cmp
fldcw
mov
mov
xchg
sahf
loopne
dec
gs
pop
call
test
pop
cwde
jbe
sub
addr16
xchg
jbe
leave
into
jge
out
or
scas
fdivr
pop
into
es
imul
push
scas
retf
cmp
and
cmc
dec
sbb
cmp
mov
mov
cwde
add
sub
inc
fld
sar
std
jecxz
mov
out
mov
and
inc
jns
loopne
and
cmp
dec
jae
xchg
xchg
pop
retf
cli
mov
mov
add
test
and
mov
sub
jecxz
(bad)
out
jae
mov
cmp
xchg
jns
adc
daa
loop
int
clc
popa
mov
lds
ret
ss
(bad)
xlat
std
xchg
adc
imul
out
test
data16
mov
cmp
adc
int
mov
sbb
adc
and
sub
mov
cmps
dec
cs
cld
lea
sub
xchg
sbb
cmp
jne
pop
inc
xlat
je
les
or
shl
mov
pop
and
popa
stos
mov
jl
push
sbb
cwde
dec
ret
mov
xor
movs
push
ror
(bad)
int3
js
stc
or
sub
pushf
or
and
in
xor
lods
xchg
mov
test
xchg
or
add
fwait
lds
jmp
fistp
test
int
mov
xor
cmp
int3
rcr
mov
mov
mov
dec
aas
fisttp
fadd
std
cmp
push
push
cmc
pop
scas
jge
stos
sahf
sub
mov
mov
xchg
jmp
ficomp
test
dec
fst
xlat
push
dec
(bad)
out
lods
les
mov
pop
rol
xlat
pop
or
pushf
mov
pop
jo
or
mov
ret
shl
icebp
aas
lahf
sub
les
scas
push
mov
inc
push
test
inc
movs
daa
cmc
xlat
(bad)
adc
enter
pop
pop
pmullw
push
adc
xor
dec
(bad)
scas
data16
lds
push
cmp
mov
das
(bad)
cmp
mov
icebp
adc
dec
adc
std
cdq
mov
ins
jne
pop
test
fwait
jmp
aad
dec
fwait
xchg
sar
call
into
push
inc
mov
out
aaa
sub
or
jge
push
fwait
xor
ja
cmps
xchg
inc
add
mov
neg
fs
dec
xlat
mov
es
call
adc
sbb
inc
out
(bad)
adc
add
lods
mov
push
imul
adc
pop
or
adc
jb
jbe
ret
or
pushf
xchg
mov
cld
and
ret
dec
inc
in
into
idiv
loopne
sub
add
jmp
out
loop
mov
xor
sbb
mov
shr
jecxz
inc
jb
lahf
xor
inc
pop
dec
add
adc
pop
xchg
js
mov
mov
or
push
cmps
sahf
pop
sahf
call
mov
mov
sbb
outs
and
enter
jmp
jg
stos
or
out
call
xchg
adc
(bad)
mov
push
xchg
jmp
adc
jmp
int
mov
scas
push
dec
xchg
enter
xchg
inc
add
mul
fdiv
xchg
push
fadd
xor
pushf
sar
dec
pop
movs
fcmovbe
inc
or
mov
sbb
mov
in
inc
movs
stos
sti
retf
iret
movs
das
icebp
xor
sub
call
push
js
aaa
jb
fcom
ficomp
(bad)
daa
cs
leave
xchg
mov
mov
push
dec
sbb
jae
sbb
mov
nop
or
adc
out
adc
pop
(bad)
mov
sbb
fs
adc
jnp
rcl
in
cwde
imul
fdivr
add
add
xor
cmp
iret
adc
inc
sub
out
mov
stos
jmp
arpl
cmps
mov
lods
movs
push
add
or
fs
lock
mov
pop
add
sub
mov
fs
xchg
sub
outs
add
jns
push
jmp
mov
sub
push
(bad)
repz
mov
sahf
shl
push
cs
sbb
(bad)
(bad)
dec
adc
lods
ror
cmp
adc
push
push
arpl
ja
mov
push
cmp
mov
fimul
loop
movs
sahf
dec
sub
sub
and
outs
js
adc
loopne
stos
mov
sub
retf
(bad)
pop
adc
mov
aas
imul
mov
mov
aas
nop
fxch
add
push
hlt
mov
mov
adc
and
sub
dec
repz
sub
mov
dec
mov
das
jbe
imul
(bad)
sbb
fcomp
adc
scas
test
lods
pop
in
call
outs
gs
std
xor
sbb
xlat
inc
xlat
sbb
dec
and
cmp
(bad)
xchg
je
stc
cmp
aaa
out
scas
push
pop
push
adc
mul
popa
setbe
cli
xchg
mov
in
jmp
stos
outs
mov
pop
mov
sub
xchg
mov
nop
xchg
and
mov
and
xor
push
in
shl
and
pop
mov
in
cwde
outs
mov
sub
out
inc
sub
cmp
js
test
dec
cmc
pop
xchg
jmp
je
mov
adc
pop
add
in
jge
movs
mov
mov
mov
lea
add
sub
out
pop
fs
pushf
or
push
adc
movs
(bad)
and
stc
push
mov
loopne
stos
adc
outs
push
ror
adc
sbb
(bad)
scas
ret
and
ins
dec
pop
mov
add
(bad)
loope
mov
lods
or
andnps
and
lock
aad
dec
scas
mov
mov
call
int3
pop
mov
call
xchg
lods
mov
(bad)
nop
pop
push
pop
or
push
mov
lds
mov
jg
fcom
mov
ficom
sbb
in
sub
(bad)
rcr
repnz
mov
mov
dec
pop
adc
xchg
arpl
(bad)
cmps
scas
adc
jge
mov
pop
repz
xrelease
inc
fwait
dec
xchg
cld
mov
mov
int
shr
jo
enter
mov
outs
repnz
sbb
imul
jle
cdq
dec
add
out
call
add
mov
sahf
dec
sub
cmps
(bad)
xchg
mov
fldcw
fisttp
lods
movs
imul
mov
sub
xchg
cmp
adc
retf
ror
jl
ror
ss
sti
iret
(bad)
leave
rol
enterw
das
test
test
shl
hlt
les
and
inc
or
push
lea
mov
xchg
test
add
sbb
xchg
dec
pop
sahf
cmp
mov
dec
or
push
ins
(bad)
adc
mov
pop
pop
jo
sub
cld
or
push
mov
push
iret
xchg
outs
sahf
mov
in
jmp
pop
jg
mov
test
loope
movlps
lods
mov
mov
cmp
pushf
jecxz
or
sbb
sub
inc
push
and
add
push
jbe
fisttp
jecxz
mov
stc
cwde
mov
adc
mov
jg
sub
out
les
adc
imul
pop
mov
xchg
push
pop
cmps
add
(bad)
push
rol
jne
jb
xchg
loope
(bad)
loopne
mov
mov
pop
ficomp
mov
mov
sbb
shl
mov
adc
xor
jp
mov
pop
mov
in
fidiv
jnp
jnp
hlt
iret
xchg
xchg
popf
dec
adc
adc
out
loope
and
(bad)
and
xor
stos
ss
data16
ror
ss
(bad)
inc
push
and
mov
xor
(bad)
mov
adc
adc
jg
push
mov
fst
jae
push
popa
push
inc
xchg
shr
mov
and
or
ds
mov
in
std
mov
push
inc
(bad)
and
jg
dec
scas
push
push
test
lds
push
aad
sbb
enter
pop
icebp
(bad)
div
sar
add
sbb
adc
or
imul
add
or
and
jp
pop
and
or
push
shr
pop
mov
aaa
cmp
xchg
inc
mov
cmp
sbb
and
inc
out
pop
hlt
pop
mov
push
sub
push
cmp
lods
popf
jecxz
jecxz
sbb
or
push
mov
enter
mov
xchg
cmps
adc
es
inc
ins
rcr
jp
xchg
sub
std
pop
test
mov
(bad)
mov
ror
maskmovq
sub
movs
shr
sub
iret
mov
shl
outs
cs
and
mov
out
scas
mov
and
retf
mov
lods
div
mov
and
sub
adc
(bad)
adc
dec
out
and
cdq
adc
scas
les
or
jl
adc
jmp
adc
add
call
call
cmps
xchg
div
fst
nop
dec
lds
mov
test
xchg
push
mov
test
mov
ja
mov
fmul
cmps
inc
xor
(bad)
fnstenv
and
call
in
test
jb
push
or
and
fsubrp
test
stc
ss
test
xchg
(bad)
jbe
retf
retf
je
jns
push
neg
mov
data16
repz
mov
lods
push
push
push
sbb
int3
add
je
dec
clc
cmp
dec
mov
xor
aam
jns
stos
lods
inc
xchg
adc
shl
sbb
not
loope
cdq
pusha
aaa
in
or
ins
xor
adc
retf
movs
shr
sub
lods
test
in
pop
aas
ss
test
leave
adc
pop
cdq
inc
jnp
mov
jns
rol
icebp
adc
into
push
push
rol
dec
add
in
jb
shr
(bad)
mov
sbb
mov
hlt
cmp
fsub
push
(bad)
fimul
into
jge
stos
aad
mov
push
xlat
sub
out
push
repnz
inc
icebp
cwde
popa
push
mov
stos
shr
iret
add
dec
movs
and
std
sub
loop
je
in
mov
fadd
push
test
leave
shl
add
rcr
dec
icebp
cmp
fadd
pusha
push
pop
sub
lods
dec
inc
iret
int
mov
out
cdq
inc
push
fs
jle
and
sub
push
sbb
jno
mov
xacquire
fisttp
int
je
or
fstp
mov
mov
test
movs
mov
(bad)
jmp
lahf
ret
test
ins
enter
mov
fisttp
or
push
mov
imul
nop
pop
nop
fisttp
cmc
mov
mov
adc
inc
add
mov
dec
inc
ss
and
fs
mov
imul
std
cmps
in
fmul
sbb
test
pop
dec
clc
jge
and
add
ret
imul
sbb
test
(bad)
push
mov
ins
xchg
dec
scas
or
push
ins
cld
rol
dec
pop
sbb
lods
fnstcw
or
add
into
btc
push
push
ret
jnp
jmp
outs
jne
pop
lods
hlt
and
push
sbb
fst
jl
mov
push
mov
gs
jnp
push
and
sbb
sbb
clc
jl
fwait
in
fsubr
cmps
out
pop
sbb
das
(bad)
(bad)
push
or
sub
cmp
daa
mov
or
or
sbb
(bad)
mov
in
jl
jl
stos
push
jb
add
mov
(bad)
add
ror
xor
dec
cld
add
in
xor
jge
pop
fidiv
aas
sti
mov
outs
inc
mov
push
sub
sbb
sub
mov
push
sub
stc
lea
(bad)
shl
repz
jo
sbb
fidivr
dec
mov
adc
cmp
sbb
ror
mov
mov
scas
push
pop
das
retf
and
xor
push
fdivr
xor
or
mov
mov
mov
ja
mov
mov
(bad)
mov
mov
push
push
je
bound
xor
jae
push
add
movq
mov
les
fnstcw
mov
mov
jne
ins
nop
mov
movs
lea
inc
out
xchg
pop
mov
jae
test
sbb
fild
add
dec
dec
aas
outs
jge
pop
aaa
xchg
push
js
outs
imul
jne
jl
add
push
ja
jb
adc
or
nop
mov
mov
cmps
adc
mov
pop
dec
int
out
cmp
iret
es
cld
in
dec
dec
lea
(bad)
jge
gs
call
pop
adc
jmp
mov
sbb
ror
fs
outs
xchg
push
xchg
mov
cmp
jbe
adc
lock
mov
jno
xchg
int
into
sbb
push
imul
mov
fnsave
xchg
loopne
arpl
daa
pop
lods
dec
xchg
aaa
mov
aad
lea
std
lods
fprem
scas
inc
mov
dec
push
sti
push
sbb
stos
out
pop
out
test
pop
dec
outs
dec
jl
mov
shr
mov
xchg
and
add
inc
lods
add
hlt
lods
das
xlat
xor
push
in
and
rol
jle
(bad)
xor
fs
mov
ja
jp
les
or
mov
mov
mov
ins
int
imul
clc
xor
dec
rcr
mov
lods
test
mov
fisubr
dec
sbb
(bad)
icebp
sbb
inc
mov
inc
or
fbstp
dec
fstp
pusha
mov
sbb
test
xchg
jnp
jo
cmp
push
mov
imul
out
lods
or
pop
dec
fmul
test
int
nop
mov
icebp
jg
sti
scas
pop
pop
mov
adc
scas
lea
bound
outs
sbb
(bad)
mov
push
sub
cli
jbe
call
mov
pop
jae
scas
popa
mov
add
sbb
xor
lds
lock
not
mov
ins
mov
xor
repz
(bad)
in
add
in
mov
and
add
inc
cmp
(bad)
jmp
fwait
dec
push
jns
inc
fidivr
mov
xchg
and
cld
dec
jg
mov
stos
repnz
test
xchg
test
rcl
pop
push
pop
cmp
sbb
(bad)
cmp
inc
jl
imul
sub
jnp
call
pop
mov
gs
or
mov
inc
pop
in
mov
imul
outs
jnp
sbb
fidivr
mov
mov
mov
xchg
adc
or
cwde
lods
jmp
or
lea
nop
cmc
or
sub
mov
dec
mov
jno
mov
ror
not
cmp
stos
fwait
jg
rol
cmps
addr16
push
ins
das
les
add
lods
mov
(bad)
or
and
xchg
iret
pop
push
retf
and
mov
loope
push
(bad)
xchg
mov
xor
aad
stc
add
out
push
mov
and
cld
jbe
mov
sub
sub
popa
xor
imul
mul
in
mov
daa
xchg
lods
fcomp
stos
push
jbe
mul
pop
dec
push
cmp
or
lahf
iret
inc
scas
inc
int3
cmc
(bad)
fnop
push
out
out
mov
or
outs
pop
fidiv
sub
push
add
fdiv
push
xchg
adc
mov
cli
(bad)
in
cs
jmp
mov
out
sbb
scas
mov
mov
rcl
and
int
lods
adc
xor
add
je
aam
push
jg
add
mov
xor
pop
add
stc
mov
dec
(bad)
js
pop
fist
mov
pop
outs
fwait
inc
stc
mov
mov
lea
jno
(bad)
(bad)
xor
adc
adc
popa
(bad)
adc
ss
js
test
rcr
lahf
mov
hlt
mov
push
push
gs
mov
in
jne
cld
fucompp
rol
add
sub
jmp
lods
mov
add
scas
pop
inc
shr
imul
cwde
jne
sbb
xchg
fild
mov
xor
mov
push
cld
int3
mov
call
pusha
mov
xchg
imul
outs
jo
mov
inc
fidiv
scas
shl
mov
scas
add
inc
js
inc
icebp
imul
mov
sub
hlt
(bad)
cmp
fwait
dec
(bad)
imul
movs
(bad)
mov
loopne
mov
sub
adc
add
enter
push
rol
xchg
out
cdq
nop
xchg
sub
call
cmp
mov
iret
(bad)
out
sbb
les
cmps
je
stc
xchg
or
out
add
(bad)
aam
cmp
xchg
or
pushf
inc
fild
and
(bad)
and
repz
mov
xchg
pop
aad
adc
push
repnz
adc
cmc
mov
xchg
lahf
stos
push
xchg
mov
scas
jb
in
dec
lea
inc
xchg
push
inc
mov
sbb
push
popa
mov
or
cmp
mov
adc
nop
push
fcomip
jmp
test
mov
mov
xchg
add
test
(bad)
das
es
sub
dec
(bad)
adc
ins
xchg
add
je
mov
clc
in
mov
xchg
scas
sub
and
in
cs
enter
jge
call
fistp
popf
jb
sub
or
dec
(bad)
in
xor
push
or
sbb
and
mov
xchg
add
dec
jge
jmp
pop
jae
pushf
aad
mov
mov
aam
(bad)
sar
(bad)
cmp
enter
add
sbb
and
mov
fild
push
dec
ja
retf
push
es
jb
fnsave
dec
xchg
dec
push
mov
and
les
xchg
xlat
mov
scas
(bad)
jmp
push
pop
inc
cmp
iret
ror
movs
ror
and
jnp
xchg
js
pop
call
ret
ret
sub
mov
pop
iret
std
int
gs
je
cdq
cmp
jecxz
xor
xlat
sahf
inc
imul
(bad)
ficomp
pop
dec
jle
add
dec
sub
xor
in
sbb
enter
rcr
(bad)
sbb
sub
xlat
inc
ss
add
mov
jle
call
xchg
pop
sbb
in
xor
mov
test
sub
(bad)
in
xor
out
mov
icebp
mov
jbe
fistp
rcr
mov
dec
call
loop
int3
mov
pop
push
sub
push
sub
popa
ins
(bad)
or
inc
sbb
mov
push
pushf
int3
fs
fadd
jmp
sbb
mov
xchg
push
sar
xchg
ja
and
ins
cmovno
popf
repz
aas
xlat
add
jae
jle
outs
add
loope
stos
out
or
fsin
mov
(bad)
fcmovne
xor
push
neg
addr16
lea
push
add
pop
push
pop
jecxz
movs
(bad)
cmp
dec
sahf
lea
je
inc
ja
ss
cmps
and
pop
mov
imul
add
mov
push
pop
enter
test
jmp
or
or
ret
add
jnp
adc
sar
(bad)
or
loopne
sub
pop
jnp
retf
cmp
stos
mov
push
mov
adc
lahf
popf
mov
das
dec
mov
or
push
and
lods
mov
hlt
call
jno
(bad)
sti
jmp
jge
sbb
pop
adc
out
inc
cwde
loope
xor
push
daa
pop
or
les
jl
xor
cmp
sub
mov
dec
mov
push
xchg
cmp
cmp
sbb
ins
nop
dec
retf
and
sbb
imul
pop
ja
retf
aas
repz
sahf
adc
mov
adc
dec
mov
jge
cmp
cld
pop
xor
mov
xor
xchg
out
and
mov
mov
(bad)
std
in
and
xor
xchg
jecxz
push
jnp
aaa
dec
mov
ftst
cmp
adc
or
daa
mov
das
(bad)
pop
mov
xchg
pop
adc
jno
repnz
loop
dec
pop
je
jp
popa
lea
sti
jecxz
adc
test
sub
test
(bad)
std
fcom
push
push
mov
adc
jne
add
loop
adc
out
scas
pop
add
dec
sbb
cmp
scas
mov
icebp
in
and
cmp
fs
fs
aas
(bad)
mov
ja
jnp
mov
out
add
je
xor
or
ror
push
adc
push
sbb
add
pop
dec
mov
push
ds
xlat
add
sbb
les
add
loopne
mov
int
call
mov
retf
out
sub
push
xchg
xchg
mov
and
and
test
(bad)
(bad)
xlat
movzx
repnz
mov
sub
inc
sbb
pop
mov
call
int3
cmp
xchg
dec
or
shl
inc
xor
rcr
nop
test
mov
into
inc
mov
(bad)
cwde
xor
ins
test
in
lahf
nop
ficom
dec
add
mov
out
add
pop
pop
test
dec
pushf
jl
jae
jbe
pop
into
cmp
jge
iret
and
daa
ds
call
mov
pop
shl
push
mov
in
loope
dec
inc
movs
pushf
xchg
mov
clc
or
mov
movs
lahf
cmp
inc
add
xor
ja
xchg
or
adc
sar
mov
daa
(bad)
ret
bswap
add
cmps
test
test
or
jo
mov
mov
sub
cmp
lea
sub
loope
inc
cld
push
push
adc
dec
ins
es
(bad)
std
lock
fwait
imul
mov
jo
sbb
stos
(bad)
inc
stos
ficom
out
or
imul
push
or
mov
imul
sub
mov
xchg
jl
xor
fst
jb
stos
int
in
pop
cmp
iret
mov
sub
mov
mov
inc
fs
loope
xor
jne
(bad)
xor
mov
iret
jecxz
mov
xor
dec
jp
pop
fwait
aas
xchg
sbb
neg
adc
outs
stos
out
and
ret
mov
rol
mov
dec
xchg
fsubr
mul
sub
dec
dec
sti
pop
mov
gs
push
dec
mov
outs
icebp
mov
pop
pop
mov
inc
loopne
xchg
xlat
data16
pop
stos
gs
rcl
jmp
jg
fild
fcomip
inc
cmp
sbb
cmp
xchg
cld
dec
bound
cld
popf
pop
icebp
stc
xor
scas
aas
ins
sbb
fwait
into
and
adc
adc
scas
mov
sar
sub
inc
cmp
cdq
adc
sahf
hlt
out
rcl
push
xchg
mov
mov
popa
mov
scas
xchg
ins
sbb
and
scas
pop
cli
inc
inc
or
jmp
or
pop
out
xchg
(bad)
mov
stos
repnz
pop
xchg
repz
cmps
mov
push
mov
inc
fdiv
push
lods
(bad)
mov
mov
jl
sub
adc
aad
pop
popa
mov
aaa
xor
cmp
dec
dec
mov
fsub
cmp
imul
push
leave
mov
mov
add
daa
mov
and
dec
das
gs
int3
xor
mov
ins
jecxz
mov
cmc
mov
pop
(bad)
jmp
data16
push
push
ret
push
idiv
xor
ret
inc
out
jmp
test
stc
retf
xchg
dec
xchg
adc
mov
dec
test
xor
das
jbe
fwait
adc
mov
aad
xchg
adc
icebp
in
mov
cmp
call
cmps
out
jle
xor
inc
stc
and
rcr
pop
cs
shr
mov
add
retf
push
or
pop
out
inc
into
mov
mov
mov
das
repnz
or
mov
push
mov
loope
sub
movs
or
jle
mov
bound
add
cwde
add
and
pusha
push
fist
cmp
iret
pop
pop
push
daa
out
xor
lods
or
mov
mov
scas
bnd
jle
in
add
jmp
movs
push
mov
sbb
pop
std
in
xor
inc
add
pusha
leave
jo
pop
and
bound
xchg
aam
ret
pop
pop
xchg
inc
xor
sub
mov
pop
iret
and
push
jne
fstp
mov
mov
cwde
fisubr
enter
retf
mov
add
push
adc
call
popf
hlt
xor
arpl
inc
xor
and
and
mov
mov
sbb
and
aam
aas
mov
out
test
es
aas
pop
mov
test
data16
sbb
jbe
cmp
mov
sub
or
xchg
fdiv
cmps
mov
add
mov
jge
cmp
jmp
jmp
in
in
pop
mov
push
mov
imul
stos
sbb
cmps
popa
stos
sti
mov
lock
or
xchg
add
pop
out
pushf
cmp
xchg
fcmovb
fucom
movs
dec
push
daa
lahf
out
inc
dec
js
cmps
cmps
mov
mov
inc
sub
loopne
mov
push
fisub
dec
rcr
adc
sahf
dec
aad
in
fistp
push
adc
dec
aad
test
cmp
bswap
repz
adc
call
imul
push
pop
pusha
sbb
xor
aas
shl
loop
cli
repnz
push
ficomp
pop
dec
fcomp
sub
sub
in
cs
(bad)
movs
dec
xor
push
test
xor
add
xchg
lds
(bad)
(bad)
arpl
js
sub
ss
inc
sbb
pop
xchg
nop
add
into
inc
or
outs
inc
retf
aas
and
hlt
xchg
adc
sub
mov
sub
pop
fdiv
repnz
sub
into
jle
dec
imul
adc
jnp
rcl
mov
sbb
dec
mov
and
fadd
adc
xchg
pop
cmp
pop
pop
adc
pop
hlt
push
add
cmp
aam
ret
addr16
and
push
pop
mov
out
mov
cmp
push
xor
iret
and
out
push
ret
or
mov
retf
push
ficom
outs
(bad)
sbb
shl
cmp
jge
pop
es
adc
in
push
mov
jmp
repz
mov
or
pop
stos
inc
lea
pop
addr16
cwde
into
arpl
jo
cli
jmp
xchg
jle
retf
adc
js
call
popf
rol
test
mov
aam
dec
jae
push
mov
mov
fsubr
and
fwait
(bad)
aam
out
fs
std
sbb
mov
adc
mul
inc
dec
cmps
dec
enter
sub
jmp
jge
and
hlt
inc
(bad)
sbb
push
movs
fnsave
(bad)
imul
mov
std
out
mov
mov
(bad)
cs
or
sub
leave
je
pop
inc
fs
outs
push
mov
dec
out
or
lds
dec
push
pop
jns
aas
jns
add
xchg
retf
int
fs
xor
xor
push
in
mov
bound
gs
pop
call
pop
mov
push
lods
test
lds
xchg
push
cmp
pop
jmp
or
dec
dec
jne
or
jo
mov
mov
outs
pushf
movs
xchg
mov
mov
outs
and
ror
aam
stc
pop
dec
repz
(bad)
out
cdq
jne
push
inc
cmp
(bad)
mov
dec
push
pop
addr16
mul
dec
mov
sbb
adc
scas
and
adc
mov
dec
jae
adc
adc
mov
call
popa
mov
push
dec
retf
push
xchg
retf
push
retf
fs
rcl
xchg
mov
test
jbe
inc
lds
cmc
adc
and
and
mov
or
cmp
(bad)
(bad)
dec
push
mov
loop
pop
shl
push
ja
int
fild
add
xor
aam
test
sbb
(bad)
lahf
sbb
mov
mov
aas
dec
mov
in
xchg
mov
scas
ret
mov
xor
inc
repz
ins
neg
jae
es
call
ds
test
out
mov
leave
inc
pop
popa
inc
pushf
pusha
mov
retf
pop
imul
inc
out
clc
popa
sub
sbb
imul
mov
cmps
arpl
adc
add
and
cmp
adc
mov
dec
in
push
enter
in
outs
cli
test
mov
nop
int
push
pop
xchg
adc
push
add
sub
push
loop
push
mov
jb
push
dec
jg
push
adc
sbb
mov
in
adc
adc
(bad)
gs
imul
or
aad
sbb
xchg
cs
lds
adc
mov
pushf
inc
push
mov
xor
or
adc
dec
fsub
pop
dec
or
(bad)
cmp
add
jmp
or
and
inc
data16
sub
in
in
mov
gs
cmp
dec
ins
sahf
or
xor
xchg
lea
push
int
xchg
sub
and
fcomip
(bad)
mov
data16
dec
or
bound
jb
shl
iret
mov
xchg
adc
add
outs
cmp
jno
jno
sti
jle
dec
sub
jae
popa
mov
jl
out
mov
into
fadd
(bad)
pop
outs
dec
rcl
mov
sub
adc
sbb
mov
stos
jne
mov
dec
clc
xor
mov
xlat
add
out
jmp
jl
mov
adc
stos
push
xchg
out
pushf
jnp
inc
xchg
out
mov
shl
sbb
or
in
cld
cmp
inc
in
outs
mov
test
or
sbb
(bad)
fwait
pushf
ins
push
sbb
mov
dec
mov
aas
stos
dec
jo
outs
out
cmps
rcr
and
push
add
outs
mov
aas
ror
adc
out
push
dec
push
mov
iret
pusha
fcomp
xlat
pop
in
ins
jae
pop
dec
push
xchg
out
mov
cmc
mov
inc
push
mov
stos
xor
leave
test
into
mov
or
ficomp
xchg
nop
cwde
shl
xchg
fxch
data16
mov
inc
call
jge
or
or
push
test
inc
cs
enter
xchg
jmp
js
adc
bound
add
loopne
(bad)
pop
mov
sub
outs
popa
es
xchg
vmwrite
xor
jo
sti
call
(bad)
jb
inc
sbb
add
inc
mov
adc
retf
inc
or
mov
popa
inc
sub
add
pop
and
data16
jns
adc
(bad)
imul
sbb
jg
lahf
pop
mov
jo
and
add
adc
push
out
pop
add
cmps
jb
cld
inc
pop
sahf
or
inc
ret
shr
mov
gs
inc
sub
jmp
ret
test
pop
cld
xor
popf
xchg
mov
mov
push
dec
lds
cld
ins
jp
xchg
out
dec
sbb
fild
sar
mov
sti
in
cmp
lods
in
mov
mov
inc
icebp
sub
jge
cmp
mov
jge
jle
addr16
in
xor
cs
rcr
cwde
scas
scas
sbb
pop
or
out
push
xchg
pop
(bad)
push
addr16
lahf
jns
mov
pop
addr16
pop
mov
cmps
pop
enter
dec
mov
push
xor
mov
jmp
jnp
fucompp
dec
or
mov
jns
xor
push
sub
gs
rcl
add
pop
xlat
pop
xchg
add
jae
mov
nop
call
cmps
int
ss
fs
stc
and
je
and
jno
repnz
or
lods
or
popf
stos
cmc
mov
dec
and
mov
xchg
mov
xchg
jno
out
shld
aad
imul
cmp
repz
sti
sub
in
jo
xchg
mov
or
repz
jne
std
xor
mov
mov
shl
ja
pop
dec
jge
mov
xor
es
imul
or
jno
mov
out
cdq
movs
mov
push
add
inc
(bad)
cmp
sti
adc
(bad)
in
sub
out
ret
les
das
aam
jge
xchg
and
call
mov
aam
sbb
xchg
mov
sahf
pop
mov
in
js
jmp
(bad)
jmp
xchg
aas
or
adc
mov
or
out
js
pop
push
sti
fstp
pop
fs
fs
sub
pop
xor
(bad)
fidiv
into
mov
xor
xchg
gs
cld
repnz
sbb
rcl
dec
movs
inc
ret
stos
fimul
jmp
scas
fdiv
fs
sbb
and
add
dec
imul
test
cmp
jb
jnp
loopne
popf
aam
mov
pop
out
test
or
fdivr
pop
mov
test
dec
fwait
mov
enter
add
test
mov
xor
fwait
psubb
ss
es
push
jg
(bad)
cdq
mov
pop
sbb
pop
loopne
call
mov
push
push
stos
adc
sbb
xchg
sbb
lock
push
nop
or
xor
leave
js
mov
int3
and
mov
retf
icebp
imul
xchg
aas
gs
hlt
pop
or
and
ins
and
pop
call
add
xor
ins
into
hlt
(bad)
fisttp
mov
sub
in
inc
jno
mov
popa
fldcw
in
dec
pusha
mov
fstp
cld
xchg
scas
int
cmp
jecxz
pop
dec
mov
lods
sbb
mov
pushw
xchg
addr16
pop
push
dec
xor
cmp
jmp
mov
jmp
(bad)
popf
cmp
clc
xor
mov
(bad)
in
mov
ret
fnstsw
xchg
outs
(bad)
dec
out
or
mov
mov
add
scas
rol
(bad)
jmp
cs
or
mov
pop
repnz
xor
lea
pushf
add
aad
sar
icebp
mov
arpl
hlt
aaa
nop
pop
and
cwde
add
push
pushf
pushf
sub
fild
cmp
xchg
jnp
xchg
sbb
inc
pop
mov
xchg
je
pushf
dec
(bad)
dec
mov
pop
jecxz
sbb
out
xchg
mov
push
cmp
lods
sbb
adc
dec
cmp
xor
add
xor
jmp
das
out
repnz
jp
pop
jmp
lea
out
adc
jbe
dec
cmps
add
call
stc
add
mov
jbe
sub
pushf
mov
outs
nop
call
and
mov
mov
mov
sub
or
fs
out
addr16
sub
jno
or
inc
lods
adc
aas
pop
or
push
popf
sub
icebp
repnz
cmp
aad
push
shr
inc
mov
xor
aas
or
mov
mov
push
sub
adc
or
cld
cmps
dec
dec
xchg
bound
push
ja
jno
mov
adc
cld
push
xchg
leave
mov
das
dec
je
sub
mov
push
mov
sbb
(bad)
push
mov
push
lock
jmp
cmps
push
inc
sub
pop
jp
fild
das
sub
jmp
or
shl
add
xor
adc
jns
add
and
das
adc
xor
aam
enter
sub
ins
inc
ret
dec
xchg
pop
adc
add
idiv
sub
call
(bad)
push
inc
fcmovb
mov
shl
xchg
ds
mov
loop
shr
popf
in
sbb
sub
mul
ss
mov
in
stos
xlat
(bad)
jae
popf
adc
mov
daa
pop
stos
xchg
or
retf
inc
push
int
inc
imul
mov
mov
add
int3
frstor
dec
sbb
dec
test
call
cmp
fild
jmp
ins
cmps
out
push
mov
js
xor
addr16
push
cmp
lea
sub
jecxz
jmp
pushf
or
es
shr
into
movs
cmp
(bad)
icebp
sub
xchg
jno
inc
jns
mov
push
fst
cmp
pop
js
data16
sub
and
sbb
pop
daa
mov
lock
in
mov
test
scas
sub
lods
mov
xor
dec
cmp
fsubr
shl
sbb
cmp
push
fcom
out
jle
pop
push
adc
inc
or
movs
add
mov
push
xchg
mov
ja
sbb
out
sbb
gs
inc
(bad)
sahf
fucom
dec
inc
movs
cbw
dec
scas
jnp
dec
jbe
enter
clc
xor
leave
push
mov
in
xor
adc
rcr
push
arpl
ja
cld
jecxz
loop
aam
push
int
or
mov
cmp
je
jo
popf
inc
mov
add
xlat
sbb
inc
ret
dec
fdiv
push
or
pop
fs
call
in
mov
popa
xchg
inc
(bad)
iret
dec
pop
loop
or
in
or
(bad)
xchg
mov
repz
clc
cdq
lods
inc
mov
cmc
pop
dec
cmp
or
mov
cmp
leave
inc
pop
push
mov
movs
out
fs
and
xchg
adc
dec
sbb
push
pop
out
into
scas
mov
cmc
push
pop
(bad)
push
and
inc
add
push
mov
sti
dec
aad
push
mov
cwde
adc
in
popa
cwde
jno
pop
(bad)
sbb
rol
dec
or
in
dec
jg
xlat
jae
(bad)
pop
cwde
push
adc
mov
(bad)
(bad)
fisub
add
scas
xor
push
or
je
mov
lock
jno
ins
in
jne
push
fmul
stos
push
pop
xlat
lea
cmp
rcr
inc
fisubr
pop
(bad)
aam
push
(bad)
cs
push
arpl
out
dec
cmp
pop
mov
and
mov
push
xor
cmovp
hlt
sbb
or
cmp
cli
and
(bad)
gs
ins
inc
pop
cli
adc
sub
sub
test
mov
mov
je
cs
ret
cld
push
xchg
shl
mul
xor
pop
mov
ja
inc
(bad)
movs
mov
xchg
ja
mov
test
inc
push
out
cld
xor
mov
int
jmp
pop
addr16
enter
imul
pop
pop
push
mov
lods
outs
int
mov
pop
mov
mov
push
mov
and
mov
push
xor
push
imul
call
fidivr
mov
jp
xchg
imul
lods
inc
mov
cmp
push
and
or
in
(bad)
in
in
sbb
aas
pop
fiadd
dec
sahf
(bad)
jbe
pusha
and
push
mov
sub
ins
loope
inc
sub
(bad)
jno
mov
xchg
sub
jno
jecxz
jl
or
add
mov
adc
pop
dec
fcmove
dec
mov
inc
fistp
or
loope
test
dec
fbstp
mov
stos
mov
push
xchg
test
cwde
fisub
xor
xchg
jle
mov
pop
daa
and
push
cmp
repnz
in
inc
test
adc
sbb
push
out
int3
sbb
and
in
adc
imul
cmc
pusha
dec
clc
sbb
xor
mov
das
or
mov
pop
mov
aad
xchg
mov
arpl
push
add
les
aaa
push
mov
push
lods
movaps
dec
lds
enter
ss
sbb
in
adc
push
add
mov
push
sbb
dec
ret
pop
jmp
jge
xchg
xchg
ins
das
add
xor
fwait
sub
lock
dec
test
sbb
je
std
test
adc
pop
out
push
adc
jge
xchg
loopne
mov
sahf
sub
mov
sbb
jge
adc
dec
dec
cld
sub
push
sbb
fdivr
movs
mov
mov
int3
lahf
out
fwait
jbe
sbb
icebp
cmp
in
mov
jae
repnz
jmp
inc
in
loopne
jo
outs
sti
mov
das
movs
pop
mov
jl
pushf
jp
mov
push
bnd
ret
add
inc
jns
out
jo
test
aaa
and
push
hlt
daa
and
scas
mov
std
mov
push
jbe
aas
je
mov
and
and
push
cs
fs
mov
push
jecxz
mov
xor
call
and
ret
call
xor
sahf
fild
jne
shr
cli
lock
iret
jge
push
jnp
cmp
cmps
xor
jae
int
(bad)
int
pop
call
call
push
movs
and
hlt
fistp
mov
push
fst
mov
sbb
iret
pop
jmp
movs
xchg
jecxz
fisttp
in
ss
cdq
jecxz
push
sub
shl
mov
loope
add
add
das
stos
xor
mov
(bad)
aaa
cmp
jmp
sub
mov
mov
inc
scas
xor
ss
and
daa
(bad)
xor
loop
jmp
mov
call
cld
jl
dec
(bad)
mov
leave
mov
cmps
mov
xchg
sub
and
loope
das
loope
inc
xor
mov
jnp
out
(bad)
out
mov
or
bound
ins
lahf
aas
sbb
xor
dec
mov
xchg
jp
lahf
call
mov
lahf
fimul
call
in
sub
fimul
pmullw
xor
stos
sbb
(bad)
clc
jbe
mov
or
scas
mov
push
lea
dec
loopne
mov
lahf
loop
push
or
ins
sti
lods
or
fs
imul
in
push
jg
test
xchg
loopne
out
js
les
(bad)
out
mov
stos
and
pushf
dec
lahf
and
je
imul
mov
pop
nop
mov
neg
cmp
loope
sbb
fs
out
pop
iret
pop
mov
sub
jns
mov
nop
mov
sub
dec
mov
pop
sar
ficom
xor
push
(bad)
arpl
mov
test
leave
jne
adc
mov
xor
adc
jb
cmp
(bad)
and
jnp
pop
push
scas
jno
(bad)
cmp
ds
mov
in
out
repz
push
or
mov
add
(bad)
xchg
test
push
call
enter
mov
jbe
push
push
sbb
ror
sbb
stos
jnp
(bad)
sub
sbb
pop
mov
push
(bad)
out
out
and
xor
cdq
dec
into
sti
pop
stos
or
jo
xor
mov
pop
push
loope
loopne
je
je
xor
je
rcr
mov
mov
rol
mov
mov
dec
and
mov
pop
mov
add
std
ins
mov
cmc
pop
fidiv
push
repz
(bad)
jnp
sub
add
iret
inc
cmp
xor
push
jle
xchg
(bad)
(bad)
jmp
push
push
jge
pop
cli
imul
mov
loop
xchg
loope
clc
fcomp
mov
inc
imul
sub
cmp
popf
push
or
sbb
mov
sar
mov
inc
push
pop
jmp
mov
test
fs
pop
(bad)
mov
aas
mov
mov
fdivr
jg
fimul
pop
sahf
nop
pusha
dec
sbb
xlat
int3
enter
jmp
dec
inc
(bad)
push
sti
clc
mov
out
mov
js
inc
sub
(bad)
mov
or
and
gs
dec
mov
ins
or
mov
lock
jge
dec
xchg
sub
(bad)
mov
mov
jo
aad
out
xor
mov
fisubr
in
fadd
fnsave
ds
ins
test
scas
sub
and
sbb
adc
cmp
jle
push
mov
test
pop
test
stos
jae
push
imul
iret
pushf
jno
xchg
mov
into
lods
dec
push
bound
push
test
ds
outs
mov
cli
(bad)
xlat
dec
scas
jp
ins
jp
imul
into
jae
add
stos
not
lock
sbb
outs
jg
clc
cmp
sar
dec
stos
cmp
mov
xchg
test
dec
sbb
mov
pop
neg
push
add
sub
sar
mov
shl
sbb
jne
jl
push
lods
push
pop
pop
push
sbb
into
sub
loopne
pop
dec
adc
pop
and
xchg
jmp
mov
cmp
push
pusha
cmp
jnp
adc
jg
aad
mov
sub
nop
or
inc
(bad)
hlt
in
jo
and
cld
outs
ss
int3
jb
xchg
enter
mov
bound
retf
es
push
xchg
cld
pushf
xchg
mov
sub
call
jecxz
and
push
mov
jns
test
popf
lods
inc
std
mov
adc
dec
fist
pop
push
fwait
sub
push
push
or
test
cld
call
or
mov
outs
call
dec
(bad)
mov
mov
cmps
enter
add
or
inc
out
sub
test
dec
adc
outs
lock
in
outs
push
scas
xchg
(bad)
push
in
xchg
cwde
cli
addr16
cmp
push
push
sbb
loopne
call
and
arpl
sub
push
loope
les
sar
mov
xchg
and
cwde
imul
or
and
jle
mov
jmp
cmc
stc
inc
and
dec
inc
add
dec
pop
fnop
call
scas
add
test
sub
rcl
pop
dec
or
pop
stos
xchg
out
int3
retf
sbb
jae
sub
xchg
or
stc
shl
mov
jo
in
mov
and
and
mov
icebp
add
pop
or
xchg
sbb
retf
mov
outs
mov
gs
pusha
or
jno
dec
cdq
cmp
push
pop
add
pop
push
mov
ret
push
(bad)
out
jle
test
sti
sub
cmps
mov
out
call
add
faddp
mov
test
push
addr16
scas
fst
push
jmp
add
pop
jmp
and
cdq
loopne
jae
les
inc
fmul
add
cmps
(bad)
call
cdq
cdq
out
mov
sahf
pushf
aam
xchg
scas
addr16
lock
push
cdq
mov
sahf
neg
jne
sbb
inc
pop
jmp
sbb
movs
pop
xchg
mov
lahf
push
mov
or
fistp
adc
call
scas
dec
add
aad
push
inc
leave
inc
mov
mov
sbb
xchg
sub
pop
int3
sub
add
xchg
stc
add
fisubr
or
test
ins
xor
sub
sbb
enter
cmp
jno
inc
sbb
sbb
mov
cdq
dec
jle
sub
stos
gs
movs
shl
iret
push
ins
in
pop
pop
(bad)
loop
ret
addr16
add
cmp
mov
popa
jl
aaa
lea
ds
inc
xchg
xor
push
xor
push
mov
sti
outs
xor
enter
ins
ins
sub
das
cmp
and
xor
jns
push
add
mov
fsubr
es
adc
adc
outs
xor
fcomp
push
sbb
add
and
popf
loope
push
aad
xchg
repz
test
push
arpl
imul
in
out
sbb
cwde
and
mov
mov
mov
cmp
or
in
dec
mov
push
call
out
ret
scas
jnp
mov
push
jbe
mov
xchg
shr
adc
mov
fwait
jmp
mov
adc
scas
xor
add
xchg
mov
in
shl
out
test
push
imul
scas
xchg
sub
jmp
lahf
sahf
lds
retf
scas
shr
add
aad
mov
popf
or
pop
pushf
jbe
mov
gs
pavgw
xchg
dec
aam
and
xor
push
call
sti
outs
xchg
shr
mov
repz
push
outs
pop
clc
jmp
ret
xchg
and
div
movs
dec
dec
sub
push
cdq
fisub
mov
test
loop
inc
push
pop
sub
xchg
call
push
inc
adc
xor
jp
push
dec
stos
idiv
clc
adc
xchg
cwde
adc
cwde
mov
lock
mov
or
jmp
mov
dec
sbb
lods
xchg
pop
scas
out
push
data16
(bad)
imul
xchg
jne
fidivr
(bad)
fisubr
enter
mov
scas
cmc
inc
inc
xor
mov
int3
call
push
ds
(bad)
imul
es
int3
ficom
cmp
mov
int3
and
sbb
cmc
arpl
push
(bad)
je
shl
lds
push
xor
jmp
inc
adc
mov
mov
xchg
popa
addr16
or
mov
cld
adc
push
std
(bad)
pusha
int3
push
popa
pop
jmp
in
fs
stos
mov
dec
(bad)
xor
sti
out
or
xlat
jnp
faddp
mov
sbb
pop
mov
jnp
and
and
(bad)
inc
cmp
add
fld
xor
ins
(bad)
push
cmp
jnp
shl
in
and
xor
pop
loop
add
pop
push
pop
inc
aad
setnp
sbb
lahf
int
cmp
xor
jg
sub
clc
xchg
icebp
jae
je
xor
stos
and
repz
or
mov
mov
into
loope
mov
xlat
out
movs
popf
neg
jb
ret
inc
test
mov
add
sub
lods
mov
das
jmp
pusha
hlt
mov
ficomp
mov
mov
int3
(bad)
std
lock
mov
pop
xchg
jae
cmp
mov
ja
adc
shl
call
rol
shr
test
out
(bad)
push
div
aas
sbb
fnstcw
and
in
xchg
outs
xor
sbb
jmp
nop
xchg
out
xchg
sbb
lock
mov
mov
pusha
ds
dec
cmp
jecxz
clc
push
retf
arpl
xchg
pushf
mov
loopne
out
add
sar
ins
add
jbe
imul
mov
pop
xchg
adc
mov
dec
sbb
or
push
mov
inc
pop
ss
out
jmp
inc
inc
add
into
lods
loopne
lods
jle
cmp
adc
xor
in
adc
cmp
sysretw
mov
nop
cmp
push
repz
jmp
aas
jl
fwait
mov
adc
push
mov
xor
js
aaa
sbb
sub
ins
sbb
mov
aad
aaa
xor
aad
pusha
iret
xlat
cmp
clc
popa
js
ds
addr16
xchg
clc
test
or
imul
jl
pop
retf
dec
sti
data16
inc
xor
(bad)
mov
(bad)
add
ins
xchg
inc
inc
mov
dec
add
mov
jp
jmp
push
js
mov
and
xor
(bad)
dec
inc
sbb
cwde
pushf
icebp
mov
inc
mov
add
cmps
iret
imul
popa
(bad)
(bad)
fild
test
jb
cmp
dec
mov
mov
sub
mov
cmp
mov
add
fsubrp
out
loop
pop
jecxz
gs
stos
inc
jbe
stos
enter
popf
mov
stc
adc
mov
jmp
xchg
fadd
loop
call
pop
mov
es
add
add
fldenv
inc
or
jg
inc
ja
mov
ins
adc
xchg
sub
shl
mov
or
out
shl
jg
in
repz
inc
xchg
add
out
cmp
fs
stos
add
push
push
jns
adc
lahf
arpl
pop
dec
cmp
or
fwait
(bad)
mov
scas
jbe
xchg
cmp
lds
test
fwait
dec
push
push
xor
push
out
scas
add
pop
cdq
cmp
and
cmp
sti
pop
stc
or
add
push
push
jle
xchg
adc
and
cmp
cli
add
call
das
nop
aad
jmp
popf
iret
shl
sub
aas
and
ffreep
int
addr16
leave
scas
dec
xlat
xor
(bad)
hlt
sbb
sti
jae
fimul
test
cmp
aaa
mov
mov
xor
retf
push
pop
cmp
pop
push
xor
clc
pop
loopne
icebp
stos
sub
out
(bad)
xor
jecxz
loopne
lea
aad
sbb
mov
test
and
call
push
cmp
inc
mov
cli
mov
dec
mov
in
imul
pop
mov
out
pop
lahf
jo
mov
adc
xor
lock
loopne
mov
outs
ficomp
push
nop
lea
mov
xor
mov
fchs
adc
pop
pop
adc
xchg
ficomp
xor
push
pop
xchg
jg
(bad)
sbb
stc
in
dec
test
(bad)
dec
clc
bound
retf
xchg
movs
dec
cdq
pop
add
push
mov
das
daa
cmp
jo
int3
xchg
out
pop
jmp
add
scas
(bad)
es
aad
dec
dec
jecxz
cmp
popf
cmp
fidiv
movs
es
movaps
or
pop
aaa
addr16
dec
inc
jle
xchg
js
jp
movs
sbb
pushf
enter
dec
test
call
sar
je
stos
pusha
push
pusha
bound
xchg
stos
xchg
shl
jg
push
push
or
(bad)
or
stos
push
cmp
cmp
add
ret
sar
jbe
lock
aam
cmp
mov
cmp
cmps
jb
movs
sub
mov
xor
push
mov
jo
lods
and
push
(bad)
cmp
shl
pop
fidivr
pop
call
mov
sub
xor
sub
jns
xor
inc
rcl
dec
or
inc
sbb
outs
in
pop
pushf
fcmovnu
cdq
shl
mov
add
(bad)
fidiv
push
inc
je
or
ror
mov
into
shl
mov
cmp
mov
mov
adc
lock
ret
aaa
adc
ret
sahf
fwait
stos
les
jl
inc
push
mov
icebp
xor
or
sahf
out
ins
sbb
frstpm(287
test
popa
data16
push
pushf
int
adc
fist
aad
xchg
popa
dec
push
rcl
pop
lea
jne
sub
or
fldcw
xchg
push
mov
pop
xchg
test
aam
outs
cmp
mov
cmp
call
xchg
movs
adc
sbb
out
sbb
cmp
mov
pop
mov
dec
dec
cmp
in
inc
push
and
das
xor
icebp
test
lds
retf
jo
push
int3
mov
nop
mov
mov
lea
pop
adc
jmp
push
mov
nop
in
jle
inc
pop
(bad)
in
pusha
adc
push
mov
sbb
mov
mov
inc
ret
mov
adc
inc
adc
dec
cmps
jge
stc
add
ror
jmp
push
popa
outs
fld
sbb
pop
call
dec
adc
pop
lahf
jge
(bad)
jne
xor
outs
mov
mov
xlat
jge
cdq
cmp
cmp
scas
fidiv
xchg
or
out
sub
or
push
jecxz
and
and
loopne
dec
aam
retf
dec
fwait
dec
ror
ins
mov
add
pop
or
mov
jge
or
in
cmp
fnstcw
mov
into
mov
scas
cmps
outs
add
mov
scas
retf
sub
add
loopne
mov
(bad)
clc
mov
sbb
movs
mov
xchg
inc
lods
jmp
test
and
out
aaa
dec
into
jae
cli
xor
push
ins
jmp
call
mov
test
int3
call
inc
sub
sar
call
cdq
or
push
jmp
mov
push
fwait
mov
cmp
lahf
ret
lods
push
not
cdq
pop
lods
add
scas
loopne
mov
or
xchg
lods
mov
stos
push
sbb
sbb
mov
inc
das
cmp
mov
stc
scas
mov
ja
popa
imul
scas
sub
cmp
ficom
aam
ss
add
rol
das
jo
fsubr
gs
and
xlat
push
loope
mov
xchg
mov
rcl
sub
call
xchg
sahf
push
cmc
jbe
jo
(bad)
ins
ds
push
ret
inc
xor
cmp
loope
cmc
add
mov
sub
call
mov
adc
ror
pop
mov
ss
es
xor
pop
or
sbb
pop
jl
push
out
xor
ret
popf
mov
sbb
add
and
jge
mov
(bad)
popa
jge
(bad)
cdq
adc
sbb
or
rol
lds
je
ins
dec
pop
xchg
shl
adc
dec
sbb
lods
retf
sahf
jnp
in
in
mov
or
xlat
data16
push
fs
and
aaa
addr16
push
jp
inc
adc
mov
xor
loope
mov
sbb
pop
outs
dec
fsubr
pop
fsub
(bad)
cmp
push
jb
sbb
sub
adc
mov
add
test
loope
fsubrp
fldlg2
pop
mov
pop
inc
mov
mov
out
pop
pop
pop
out
nop
dec
leave
sbb
inc
pop
es
mov
mov
jmp
push
dec
jae
xchg
test
test
mov
bound
and
aaa
sbb
pushf
retf
mov
mov
pop
shl
add
sub
call
xor
mov
movs
sub
fsub
cwde
sub
shl
fs
adc
ss
jl
shr
dec
pop
xor
xchg
icebp
jmp
xor
movs
popf
sbb
sbb
pop
pusha
clc
sub
inc
leave
push
mov
in
and
cld
je
mov
pop
leave
test
into
ins
push
ins
shr
cmp
and
rcr
cli
(bad)
in
popf
dec
xchg
xor
or
hlt
cmp
jmp
mov
jle
push
imul
jmp
outs
pop
mov
scas
aad
cmp
in
ins
pop
cmp
arpl
mov
mov
mov
mov
sbb
mov
adc
push
cmps
das
pusha
jo
adc
xchg
out
stos
dec
pop
adc
clc
add
sbb
aaa
or
rol
fs
xchg
dec
scas
(bad)
outs
shr
adc
loop
mov
jmp
pop
jne
jecxz
stc
neg
jmp
adc
pop
mov
jmp
cmp
xor
mov
dec
in
xor
mov
pop
push
mov
repnz
xchg
fbstp
sub
pop
xchg
daa
(bad)
leave
shl
(bad)
imul
in
fild
adc
xchg
dec
addr16
sar
enter
sbb
sub
call
push
or
jmp
in
and
mov
(bad)
fdivr
out
fistp
add
and
add
ja
dec
cmp
mov
retf
jae
test
retf
mov
popf
push
test
inc
(bad)
fldcw
push
int3
cmc
les
icebp
mov
jp
repnz
aam
dec
cmp
cdq
inc
shr
dec
inc
je
jmp
mov
and
push
daa
xchg
bound
jle
xlat
pop
sbb
pop
pop
pushw
push
fdivr
je
addr16
lea
add
jo
cmp
push
mov
shl
(bad)
loope
xor
sahf
lods
adc
adc
dec
sub
(bad)
xlat
imul
push
mov
xor
inc
outs
dec
push
xchg
fcomp
idiv
repnz
in
pop
dec
and
mov
shl
and
lahf
push
xor
test
ror
adc
xchg
shl
inc
jne
sbb
or
sub
dec
shl
sbb
test
jbe
dec
jne
out
inc
sub
mov
or
mov
iret
push
mov
push
mov
popa
adc
in
dec
test
xchg
push
jmp
pop
fwait
jno
or
rcl
or
pushf
dec
jmp
aas
ss
push
stos
mov
leave
aas
into
out
call
cmps
hlt
in
ja
fst
jl
daa
fs
push
push
neg
push
adc
test
jb
arpl
out
xchg
and
movs
sbb
xchg
dec
mov
mov
(bad)
pop
pop
cmp
push
and
mov
jmp
es
sbb
xchg
shl
sub
pop
pop
add
pop
cli
cmp
out
lahf
in
out
call
lods
pop
aad
ins
pop
xchg
and
mov
push
sub
mov
neg
leave
adc
jp
mov
push
mov
push
xchg
mov
movs
xchg
rcl
cmp
push
test
aaa
cmp
(bad)
and
mov
add
inc
or
addr16
sub
in
xchg
sbb
sbb
fsubr
(bad)
jbe
adc
and
loope
xchg
cld
add
mov
pop
stos
gs
fdiv
fmul
fisttp
(bad)
xor
out
pop
cmps
sbb
inc
cmp
lods
repnz
inc
xlat
stos
xchg
js
sbb
jmp
inc
repz
push
icebp
jecxz
out
enter
or
stc
iret
push
imul
cmps
or
jns
cmc
repz
scas
leave
inc
xor
sub
mov
dec
pop
lock
adc
dec
dec
adc
jae
cdq
sub
div
pop
inc
or
pop
inc
inc
hlt
test
jne
jle
pop
gs
leave
std
and
loope
iret
mov
mov
loop
enter
out
popa
in
repnz
push
fnstenv
cli
push
cmps
dec
fstp
(bad)
fadd
nop
push
adc
sbb
xchg
pop
cmp
fwait
push
aaa
jo
push
xchg
jecxz
cli
or
pop
cmp
out
imul
sub
pusha
addr16
pop
sub
xor
pop
push
jmp
inc
in
pop
add
mov
jle
cdq
mov
sbb
mov
movs
popf
jno
inc
cld
mov
push
ins
cmp
fwait
maskmovq
test
pop
test
out
mov
ins
fcom
out
xchg
xchg
add
lods
fdiv
stc
add
out
movs
out
ret
aaa
dec
push
inc
jge
and
mov
adc
pop
addr16
push
fcom
push
jb
dec
push
dec
xchg
sbb
mov
aas
adc
xchg
or
mov
outs
gs
cmp
pop
cdq
mov
or
cmps
and
(bad)
repnz
sbb
das
add
dec
fld
fmul
xlat
hlt
loope
xchg
jae
aas
mov
(bad)
xor
shl
scas
cmp
jmp
push
fmul
pop
ret
popf
mov
xor
retf
dec
pop
in
out
mov
lods
addr16
adc
mov
loop
and
fldcw
pusha
aam
(bad)
mov
outs
nop
enter
xor
lods
lahf
adc
js
das
leave
sbb
iret
inc
not
adc
sub
div
cmp
mov
cwde
push
arpl
xor
inc
(bad)
clc
mov
fcomp
pop
cmps
and
adc
adc
cdq
xlat
test
clc
and
(bad)
out
add
out
mov
mov
lea
ins
push
scas
ins
sub
xchg
pop
xor
js
jg
scas
or
sub
mov
scas
lds
fisttp
or
push
adc
mov
mov
(bad)
sti
rcr
cwde
fbstp
push
popa
mov
ja
push
inc
mul
and
mov
jns
jae
adc
(bad)
jg
arpl
xor
dec
mov
jne
sub
mov
sahf
and
leave
and
sub
out
xlat
xchg
popa
stos
sbb
jmp
dec
mov
add
jae
adc
mov
loope
(bad)
scas
cdq
push
jne
add
and
push
out
movs
adc
cwde
jle
sbb
in
pop
xchg
xchg
sub
pop
fld
cmp
mov
imul
retf
xor
xchg
fldenv
xor
mov
addr16
je
mov
sbb
or
mov
jns
sub
movs
enter
jne
dec
sbb
bound
and
sub
push
arpl
cmp
jns
in
pop
add
and
sub
push
es
pop
fmul
std
jno
cmp
xchg
inc
push
sti
addr16
sbb
scas
mov
cmps
jne
sbb
adc
imul
in
sub
std
mov
inc
pushf
ss
adc
jle
sub
sbb
mov
fst
push
xor
sbb
xchg
cmp
xchg
fsubr
pop
aaa
pop
imul
adc
sub
rcr
mov
fidivr
sub
add
push
dec
xor
adc
pop
ss
and
inc
mov
jo
inc
mov
shl
push
int3
dec
ins
push
xor
or
jl
inc
mov
push
movs
sub
(bad)
repz
outs
xchg
and
mov
js
and
dec
fdiv
push
sbb
aad
loop
into
cs
sub
dec
shl
int3
xor
pushf
sub
xor
pop
cmps
inc
adc
pop
mov
test
push
push
and
test
inc
je
test
das
in
push
callw
pop
mov
cld
int
or
cmps
out
pop
aad
call
lods
push
ja
cmp
test
pop
aas
push
call
imul
retf
scas
div
(bad)
xchg
add
out
cdq
leave
sub
div
mov
sar
inc
xor
cli
mov
xor
xchg
xor
adc
mov
pop
mov
mov
inc
lock
push
lahf
adc
in
(bad)
outs
jle
sbb
std
data16
repnz
mov
xchg
ret
inc
sub
lss
mov
push
pop
sbb
jmp
mov
add
xchg
jle
jmp
sar
les
or
xor
scas
push
popf
hlt
xor
mov
add
inc
imul
push
pop
shl
fscale
mov
pand
xor
test
rcl
test
inc
sub
inc
jno
cmp
pushf
sbb
mov
into
imul
retf
in
cdq
and
inc
xor
rol
mov
dec
mov
inc
push
xor
mov
sbb
pushf
inc
dec
outs
nop
fldcw
and
cli
cdq
daa
cmp
outs
test
pop
fild
outs
fdivr
xor
jl
clc
out
ins
adc
out
mov
(bad)
mov
bndldx
pop
xchg
int3
jg
pop
or
xor
xchg
in
ds
jp
fcom
cmp
imul
dec
push
in
jmp
neg
popa
retf
jae
mov
sub
add
icebp
xor
mov
pop
mov
jp
push
(bad)
movs
mov
mov
mov
jae
fcomp
loop
mov
movs
test
jno
xchg
ds
sbb
pminub
pop
je
pushf
lock
dec
test
into
add
add
cmp
hlt
in
xor
das
int3
and
es
int3
mov
movs
sub
ins
cdq
mov
adc
dec
icebp
sbb
sub
add
aaa
mov
dec
adc
and
lea
sbb
aam
xchg
icebp
mov
out
cmp
pushf
and
sub
into
mov
pushf
sbb
ret
les
sub
add
push
mov
imul
pop
mov
mov
add
jge
loopne
adc
push
les
sub
xor
and
inc
adc
das
repz
pop
stc
arpl
adc
sub
adc
xchg
pop
pop
adc
xor
mov
repnz
sbb
ss
(bad)
leave
inc
sub
stos
popf
stos
inc
dec
push
jne
test
or
or
mov
add
xchg
jmp
push
lods
mov
sub
fidivr
mov
dec
adc
mov
sbb
pop
(bad)
lahf
lods
cmp
inc
rcl
(bad)
inc
arpl
pushf
rcl
shr
icebp
xor
xor
dec
inc
dec
push
or
dec
pop
adc
push
sbb
cmp
fwait
pop
in
les
cli
fwait
call
or
xor
(bad)
xchg
xchg
retf
mov
lock
bound
jmp
jns
out
mov
jg
pop
cwde
sbb
mov
mov
repz
int3
sub
or
jg
push
pop
into
loop
add
popf
mov
pop
jp
add
iret
dec
test
xor
sub
in
bound
fist
imul
inc
in
pop
sti
push
add
xchg
lock
cli
out
cmp
enter
fs
cmp
loopne
loope
mov
out
inc
push
sub
cmp
std
inc
push
mov
and
ficom
mov
or
push
add
frstor
in
loop
xor
ret
push
jbe
push
rcr
lahf
mov
or
fwait
jmp
sahf
jmp
cmp
sub
add
loop
jle
push
push
retf
pusha
xor
shl
or
pusha
pop
pop
repz
mov
sbb
add
mov
xor
mov
mov
stos
sub
mov
iret
sub
(bad)
and
inc
jne
and
pop
scas
adc
fild
out
jg
inc
loopne
cmp
and
xor
scas
xlat
sub
cmp
inc
std
dec
aaa
jmp
call
add
jg
rcl
cmp
fs
push
mov
push
ja
aad
add
ins
into
test
test
fadd
push
in
adc
(bad)
cdq
aas
sub
rcr
adc
mov
adc
aam
dec
add
and
cmp
jbe
jno
inc
lods
div
jns
xor
ret
cmp
add
mov
(bad)
sub
sar
cdq
repnz
movs
in
inc
inc
push
dec
(bad)
sbb
dec
jmp
inc
xchg
mov
je
push
mov
in
push
aam
aad
mov
cmp
push
js
shl
pop
scas
(bad)
sub
sub
inc
imul
dec
add
jnp
or
js
jb
jno
cmp
mov
jle
mov
cmp
enter
aaa
jmp
inc
mov
jmp
loopne
pusha
xchg
out
jb
jnp
add
pop
loopne
adc
inc
xlat
push
aas
pop
jbe
jne
add
add
mov
loope
sub
jg
fdivr
addr16
nop
dec
and
test
stos
jae
fs
lods
(bad)
enter
pop
mov
cmp
mov
push
xor
adc
xor
sub
scas
lock
fmul
stos
sar
dec
jnp
stos
jne
pop
mov
loope
dec
jns
les
pop
loopne
cli
ficom
ins
or
ins
shr
mov
repz
pop
dec
jmp
or
dec
dec
sub
push
aas
fstp
dec
int
test
jnp
repz
dec
adc
xor
mov
and
sbb
mov
xchg
clc
dec
add
das
cmps
mov
or
cmc
cmps
push
in
sub
neg
scas
in
lahf
adc
pop
xchg
aas
sub
jmp
inc
or
stc
loopne
jnp
xchg
retf
mov
and
push
push
in
sub
cwde
dec
ds
dec
out
xor
aad
or
xchg
cmps
and
xchg
adc
push
xor
pop
icebp
pop
adc
clc
pop
out
fisttp
and
lock
(bad)
xchg
out
mov
test
sbb
add
call
jl
or
inc
(bad)
int3
mov
scas
jl
push
test
cmc
in
pop
bound
push
pop
push
push
outs
fcom
sbb
mov
ret
push
sub
or
fnstsw
loope
repnz
jb
pusha
sbb
mov
mov
test
retf
and
and
aad
or
cmp
xor
popa
pop
pop
push
(bad)
fisttp
add
cmp
ja
adc
test
jne
xchg
push
pushf
in
pop
mov
dec
cmp
add
and
dec
(bad)
in
inc
xchg
daa
inc
dec
mov
mov
pop
jmp
cld
and
stos
and
cmc
add
fild
fwait
popa
xor
adc
xor
mov
mov
xchg
jno
cmp
sbb
rol
enter
in
or
fxch
lds
mov
xor
in
inc
jbe
jecxz
fnstsw
nop
cld
in
ret
int
cwde
sti
fnop
xchg
mov
jnp
fdivr
jl
hlt
jbe
mov
dec
xchg
call
nop
stos
js
scas
push
jb
dec
mov
cmp
lods
jnp
fcmovne
mov
push
mov
cmp
aam
jnp
test
dec
pop
ret
adc
out
jle
jbe
jp
mov
imul
test
dec
aaa
cmp
pop
push
dec
outs
add
xchg
cwde
jle
cmc
stos
nop
add
ins
push
push
sbb
mov
repz
repz
outs
jge
ror
mov
ins
mov
and
and
mov
loope
sub
aas
or
mov
ins
cmp
ret
push
push
adc
xchg
cmp
pop
mov
ret
push
add
(bad)
or
xchg
mov
xchg
xchg
imul
xchg
call
pop
inc
jecxz
and
add
addr16
scas
fadd
xor
gs
sub
pop
lea
jmp
lea
lds
cmp
mov
jecxz
lock
mov
mov
dec
retf
mov
repz
ss
(bad)
adc
mov
das
adc
popa
add
sbb
push
call
or
dec
test
xor
jno
int3
mov
aas
mov
xchg
(bad)
loope
popf
dec
in
mov
pop
pop
out
push
ins
jne
mov
xchg
add
mov
ja
dec
and
add
adc
vorps
imul
mov
cmc
and
mov
fadd
data16
add
mov
jns
cmp
lods
loopne
xchg
jns
cmp
mov
das
cmp
jne
iret
lea
mov
sub
pop
jle
ss
mov
jg
clc
pop
jmp
inc
cmp
(bad)
jp
lods
je
adc
lahf
cmp
mov
nop
sti
push
ins
xchg
sbb
jle
xchg
jp
inc
loopne
sub
call
and
and
xchg
jns
xchg
jmp
mov
ss
int
int
mov
dec
xor
test
mov
sub
in
mov
adc
add
inc
scas
bswap
repz
aam
ja
xchg
cmp
jne
arpl
out
jbe
shr
into
jb
hlt
xchg
xchg
adc
or
mov
sub
outs
jb
inc
rol
cmp
pop
test
mov
mov
fcomp
in
sbb
out
dec
cdq
jmp
or
push
imul
mov
push
adc
loope
mov
jo
fist
sub
push
es
jge
mov
(bad)
pop
fisttp
inc
jne
inc
mov
cld
jns
push
inc
mov
sbb
nop
sbb
lahf
enter
mov
test
xchg
xor
inc
fcom
jo
fs
push
arpl
mov
adc
add
nop
sub
xor
fmul
push
xchg
lock
cwde
cmc
fwait
adc
arpl
or
and
test
pop
pop
push
rol
es
pop
xor
jo
mov
sbb
ret
push
pop
pop
jmp
xor
lahf
lods
lahf
imul
sub
leave
adc
push
lock
aaa
xor
mov
movs
mov
stc
scas
jp
mov
mov
je
enter
shl
popf
mov
jle
sub
sub
sahf
scas
jo
sub
fwait
jae
inc
gs
imul
cwde
retf
pop
adc
add
add
xor
nop
adc
add
stos
mov
mov
dec
popf
(bad)
push
(bad)
call
push
idiv
je
outs
(bad)
rcl
and
gs
xchg
dec
push
adc
xchg
cs
dec
test
pop
cs
scas
pop
popa
mov
loope
mov
cmps
ja
in
push
pop
jne
mov
push
daa
retf
test
mov
(bad)
and
clc
ret
por
dec
jecxz
pop
mov
in
pop
bound
lock
call
adc
pop
xor
(bad)
xchg
mov
aam
adc
mov
cdq
out
loop
repz
lock
(bad)
mov
iret
jmp
cwde
push
in
dec
push
aam
jp
dec
ss
or
xor
es
jne
cld
std
push
sbb
add
cmp
dec
out
mov
js
pop
xor
xor
sub
hlt
add
jle
mov
mov
add
dec
push
shr
test
sbb
xor
mov
ins
sub
int
fisubr
dec
xchg
jge
in
cwde
push
fcom
(bad)
das
(bad)
cmp
mov
xlat
rol
and
add
icebp
in
sbb
pushf
loop
popa
add
fbstp
jbe
push
aad
mov
dec
fnstcw
fistp
in
pop
call
fsubr
or
mov
xor
push
sub
cmp
sub
jnp
es
repnz
xor
out
mov
rcr
sbb
gs
cmp
adc
inc
pop
retf
and
lods
fldenv
shr
xchg
dec
adc
cmps
add
fdiv
cmps
outs
pop
and
sbb
es
stos
mov
out
cmp
sub
es
xor
push
das
push
test
or
daa
mov
arpl
cmp
dec
xchg
dec
and
lea
add
xchg
outs
test
and
ret
or
xchg
xor
xchg
push
push
or
mov
sbb
jbe
push
lock
lea
dec
lea
xchg
jp
jg
imul
mov
or
sar
push
dec
jle
mov
inc
pop
lds
rol
xchg
mov
mov
sar
or
in
cmc
adc
and
ret
shrd
pop
adc
into
imul
sti
lods
fidivr
pop
cmps
inc
xchg
mov
clc
sbb
xchg
mov
mov
ds
sub
retf
cmp
mov
or
mov
repz
mov
adc
fdivp
fld
repz
mov
enter
mov
bound
mov
cwde
pop
add
cmp
push
pop
retf
(bad)
scas
test
or
mov
pop
movs
mov
fdiv
dec
rol
enter
rcr
push
cld
xchg
mov
test
mov
cmc
adc
mov
and
jp
not
fisub
xor
ds
and
ret
jmp
xchg
dec
(bad)
fmul
test
out
stos
das
clc
mov
cmp
es
ds
mov
popa
xchg
jp
out
and
(bad)
jp
sahf
mov
jno
push
sub
adc
xchg
test
clc
push
push
test
and
in
jo
in
add
xchg
test
shl
pop
leave
cmp
repz
sub
inc
lods
jl
fcom
and
push
and
dec
push
xor
mov
test
aad
xor
inc
repz
cmp
xlat
stc
pop
aam
or
out
jge
fnstcw
mov
xor
mov
sbb
scas
xor
jb
call
mov
jge
dec
sbb
call
push
or
cmp
xchg
aas
es
pop
(bad)
pop
mov
sti
retf
push
adc
mov
pop
mov
jg
in
dec
add
jno
mov
or
xor
dec
add
idiv
pop
dec
mul
inc
neg
ja
sbb
int3
push
clc
xor
sub
xchg
xchg
xor
fsubr
int
ins
push
(bad)
(bad)
pop
mov
arpl
and
xchg
inc
not
dec
js
(bad)
rcr
mov
loop
pop
jl
mov
mov
cmp
mov
inc
xchg
test
and
pop
dec
or
mov
sub
mov
ja
add
ins
mov
pop
mov
xor
pshufw
sub
mov
stos
cli
mov
xor
jo
and
dec
scas
mov
mov
add
test
push
out
lods
sbb
inc
mov
cmp
xchg
jns
emms
pop
push
and
ficomp
call
ja
add
lods
xchg
sub
sub
aad
sub
or
lock
sub
jp
pop
xchg
cs
jb
clc
(bad)
sub
fisttp
pop
imul
les
or
jae
xchg
shl
pop
out
dec
movs
xor
cdq
mov
ins
push
(bad)
sbb
fadd
jle
jo
(bad)
inc
out
in
test
push
fild
lahf
imul
ja
and
cmps
cmp
sub
dec
cwde
adc
rol
test
in
or
inc
arpl
jecxz
xchg
adc
dec
je
je
fadd
lods
push
imul
push
add
sbb
repz
ds
jp
data16
shl
ret
imul
mov
dec
push
mov
imul
outs
out
mov
fldenv
xchg
test
push
mov
lods
loope
sub
test
adc
test
dec
ret
stc
push
add
mov
adc
inc
int3
mov
lahf
iret
dec
push
arpl
xor
push
(bad)
lods
mov
cmps
push
sub
loopne
js
lds
fmul
push
stos
and
pop
dec
inc
push
popa
(bad)
out
iret
push
dec
fdivr
dec
jecxz
arpl
sub
adc
pop
stc
xor
xor
out
inc
mov
cmp
fcomp
nop
mov
mov
leave
mov
jno
sbb
retf
rcr
mov
push
mov
or
sbb
jmp
cmps
sti
in
movs
scas
cs
mov
test
ja
aad
rcr
push
stc
pop
lahf
outs
(bad)
(bad)
cmc
jmp
mov
pop
movs
jge
pop
popf
jmp
cmp
aad
add
ja
add
mov
cmp
fisttp
fdiv
pusha
xchg
push
xlat
mov
aaa
into
jp
(bad)
aam
push
fnstenv
sub
jp
push
repnz
jbe
jp
outs
inc
sub
sti
xchg
scas
movs
jns
mov
pop
outs
dec
mov
inc
push
sbb
mov
std
ds
or
add
fmul
bnd
ss
out
in
pusha
mov
sbb
mov
sar
sbb
lds
adc
pop
sbb
arpl
pop
nop
and
mov
dec
cmp
pop
sar
mov
and
out
rcr
clc
mov
(bad)
mov
fisub
inc
(bad)
stc
sub
jg
jecxz
push
sbb
jb
repz
cdq
jmp
and
fistp
iret
cmp
in
aam
mov
sbb
retf
(bad)
into
mov
jbe
mov
sbb
sub
loop
jle
xchg
loop
stos
push
sbb
sbb
repz
test
adc
adc
jp
nop
dec
repz
mov
sbb
loopne
add
mov
mov
fidiv
dec
fist
out
inc
and
cmp
sub
test
and
and
aad
inc
es
add
test
sub
push
or
ins
dec
jmp
ja
mov
rcl
adc
test
adc
pop
arpl
mov
jmp
(bad)
push
sub
xchg
in
sub
sti
aas
out
and
(bad)
stos
popa
int
sub
ret
in
in
ds
add
popf
sub
jp
push
test
push
fiadd
mov
retf
fnstsw
in
mov
leave
mov
ficomp
lea
call
cwde
and
jmp
mov
adc
mov
pop
arpl
pop
and
sbb
fsub
pushf
shr
pop
add
and
and
add
aad
add
jl
sub
loop
sbb
setb
adc
jg
pusha
test
xchg
xor
sbb
shl
and
in
arpl
dec
enter
jno
enter
dec
push
and
cmp
add
sbb
in
add
pop
in
xor
sub
dec
or
sbb
ss
loope
enter
arpl
adc
cmp
js
sbb
inc
ffree
cmp
data16
fist
push
xchg
nop
sub
add
loopne
mov
cmps
repz
neg
pop
push
lods
sbb
outs
test
cmc
mov
jp
xadd
mov
ins
mov
xchg
and
xchg
xchg
push
sbb
and
push
pop
pop
cmp
mov
enter
fld
jecxz
mov
loope
(bad)
pop
or
int3
faddp
(bad)
fdiv
xor
lock
sbb
xchg
cld
dec
mov
aas
or
xchg
and
sahf
arpl
lock
or
in
je
loope
add
xchg
scas
inc
pop
loopne
xor
das
pop
js
mov
mov
mov
adc
movs
mov
mov
test
mov
sub
rcr
mov
jle
push
adc
pushf
jne
test
out
pop
sub
(bad)
mov
or
scas
das
pop
pop
mov
fdivr
adc
leave
dec
pop
xor
mov
(bad)
call
or
(bad)
scas
push
mov
outs
loope
imul
inc
xor
neg
cmp
sub
dec
xchg
popa
pop
mov
mov
test
retf
xor
xchg
jb
sub
inc
pop
shl
(bad)
es
mov
outs
clc
xlat
and
or
rcr
call
das
pushf
xor
and
pushf
mov
mov
and
adc
mov
inc
into
jo
pop
jbe
adc
cmp
push
jae
sbb
push
retf
pop
std
dec
(bad)
pop
idiv
mov
inc
dec
stos
mov
add
les
repnz
cmps
inc
cmps
add
cmp
sbb
push
adc
inc
mov
push
jmp
mov
dec
hlt
imul
bound
sbb
push
mov
sbb
push
hlt
jmp
and
xchg
scas
mov
add
es
jb
cwde
cmp
cld
sbb
mov
lods
mov
shl
sar
lea
repnz
test
ss
xor
clc
xor
pop
sbb
out
sbb
(bad)
fisubr
mov
leave
loop
lods
int3
xchg
test
mov
popf
mov
bound
mov
movs
pop
sbb
mov
scas
je
adc
test
pushf
fisub
jnp
inc
jno
xchg
pop
pop
sbb
cmp
xchg
pop
loopne
and
stos
popf
ficomp
or
inc
inc
in
mov
add
retf
fisub
in
imul
es
xchg
xchg
pop
adc
ret
jae
sub
je
adc
scas
inc
push
mov
outs
pop
sahf
cmp
mov
jle
dec
popf
loop
push
inc
mov
mov
xchg
rol
adc
sbb
xor
jmp
int3
xlat
inc
mov
mov
push
cmp
adc
mov
jno
icebp
inc
sar
(bad)
jo
xchg
shr
sbb
into
and
pop
imul
out
xchg
add
inc
push
lods
loop
mov
xchg
ins
outs
imul
xchg
inc
popf
dec
jns
das
mov
sub
test
sub
cmps
enter
scas
mov
pop
inc
scas
cmc
add
xor
imul
push
mov
jbe
pop
push
inc
test
mov
ror
jmp
repnz
sub
sar
test
arpl
sbb
lock
not
out
iret
ret
nop
jp
test
sbb
jbe
leave
lock
sahf
inc
sbb
cmp
push
sbb
jge
int
in
ret
cmp
(bad)
clc
cmps
xchg
push
lods
jl
mov
int
shl
pop
pop
in
pop
cmp
ret
rcr
scas
cmp
xor
xchg
test
fcmovbe
dec
mov
push
cmc
shr
push
xor
je
fs
inc
mov
push
ror
jmp
sbb
cmc
pop
dec
sbb
pop
repnz
rcr
xor
sbb
jp
stos
and
sbb
pop
inc
mov
xor
push
add
pop
adc
ins
adc
xchg
mov
retf
adc
dec
js
stos
jno
cmp
add
shl
call
mov
ret
and
xchg
ss
mov
loop
mov
cmp
enter
out
sub
in
and
(bad)
test
ret
inc
inc
jns
xor
icebp
cmp
or
ins
in
fnstenv
in
ja
aas
outs
mov
retf
sub
daa
pop
inc
aaa
xchg
xor
and
retf
mov
push
xor
ss
cli
mov
rol
adc
mov
adc
(bad)
daa
cmp
fcmove
cmp
imul
push
jbe
jge
xlat
xchg
lahf
out
scas
mov
lds
adc
dec
leave
inc
dec
mov
(bad)
mov
ins
fisub
popf
xchg
data16
(bad)
out
sub
sub
mov
ja
mov
add
call
test
and
xchg
(bad)
push
mov
aaa
int3
out
(bad)
mov
push
jmp
out
inc
clc
(bad)
push
ja
(bad)
mov
mov
fbstp
push
jbe
mov
out
es
cdq
cmps
jns
xor
repz
ret
mov
sub
stos
int3
stos
stos
jne
leave
cmp
fdivr
sub
inc
rcl
cld
jl
add
or
xor
loopne
sub
arpl
iret
ins
mov
add
mov
jne
imul
jge
popa
xchg
cmps
aas
fcom
mov
retf
cld
sub
ret
add
xlat
push
les
xchg
inc
enter
pop
xchg
test
add
mov
mov
jbe
sub
xchg
push
cmp
hlt
sub
pushf
xor
out
nop
cli
pop
sbb
and
mov
mov
data16
or
scas
outs
jbe
sti
sub
or
adc
(bad)
push
sbb
sub
cdq
xchg
(bad)
mov
push
repz
cwde
adc
and
cmp
ret
int
adc
leave
sub
push
lahf
dec
aad
repnz
mov
adc
(bad)
js
sub
dec
jge
repnz
data16
add
repz
mov
mov
ficomp
shr
call
push
sar
das
fcmovbe
(bad)
sti
leave
mov
mov
leave
lock
push
movs
fstp
fisub
test
imul
push
fcmove
mov
mov
xchg
int
rcr
jo
xor
pop
and
out
sti
repnz
pop
mov
popaw
xor
outs
(bad)
cmp
gs
shl
sbb
fs
mov
sub
xor
aad
lock
test
push
jo
rol
jmp
aaa
cli
jecxz
or
fwait
sub
aas
enter
daa
stos
arpl
(bad)
mov
cwde
add
jmp
mov
jnp
add
gs
lock
dec
push
inc
dec
ins
adc
inc
inc
jne
loope
push
scas
out
dec
jp
loope
pop
push
adc
aad
shl
lea
and
not
ins
test
xlat
(bad)
stos
outs
lds
inc
pop
mov
inc
sbb
sar
mov
mov
fild
mov
push
ror
dec
cld
mov
bnd
and
(bad)
mov
push
sbb
sub
popf
call
enter
mov
dec
xchg
xor
dec
jns
clc
div
xlat
int
xchg
pop
jmp
(bad)
pop
mov
and
xor
xor
out
fsubr
add
sub
mov
sub
mov
lahf
cdq
xchg
ror
jmp
push
sbb
sahf
stos
popa
sub
lahf
sub
and
adc
stc
shl
data16
popf
pop
fwait
push
push
retf
xchg
(bad)
push
stos
mov
inc
mov
xchg
scas
fxch
mov
call
mov
and
mov
imul
inc
test
loopne
mov
inc
cmps
push
and
cmp
push
call
(bad)
cmp
push
sub
push
jo
dec
adc
stc
fs
xor
adc
adc
and
retf
push
bound
dec
repz
inc
shl
xchg
mov
sbb
jl
les
inc
or
lock
inc
xor
fiadd
stc
aad
push
mov
xor
dec
jg
or
dec
ror
pop
pop
dec
mov
xor
cs
jae
leave
in
cld
push
data16
fld
cmp
and
sahf
xor
sub
or
fnstenv
push
dec
pop
mov
jecxz
mov
cld
sub
push
cmps
inc
neg
and
test
pop
pop
ret
cmp
(bad)
rcl
cmp
daa
mov
jae
pop
xor
sar
jecxz
jg
out
push
aad
std
inc
jbe
ins
mov
and
fld
sub
cmp
fucom
add
(bad)
call
jecxz
pop
inc
test
fcom
sub
jne
xor
(bad)
outs
adc
test
ds
fmul
shl
shr
mov
inc
js
test
cld
jg
rol
int3
jge
lods
fnstcw
jmp
jecxz
loop
shl
sub
outs
idiv
xor
sbb
push
sahf
jb
adc
lock
xor
jb
nop
mov
cmp
mov
xchg
inc
xchg
cmp
test
js
jecxz
xchg
xchg
cwde
mov
int3
inc
dec
imul
sbb
dec
mov
lds
and
scas
cmp
jb
mov
mov
mov
cmp
inc
mov
iret
and
movs
dec
(bad)
adc
sti
retf
jbe
mov
jg
or
stc
sub
lea
in
adc
add
out
out
inc
and
retf
and
push
fisttp
(bad)
test
xor
push
cs
jecxz
(bad)
jmp
pop
xlat
push
jmp
mov
cld
arpl
stos
pushf
popa
clc
mov
mov
push
sbb
sti
scas
xchg
dec
xchg
push
popf
or
mov
stos
xchg
(bad)
fdivr
jecxz
xchg
and
shl
push
pop
mov
sti
sbb
adc
pop
icebp
lea
call
push
lahf
xchg
dec
das
jnp
test
in
mov
xor
movs
xchg
mov
mov
push
stos
or
dec
pop
adc
sbb
mov
xchg
mov
nop
push
movs
lahf
mov
and
mov
push
jbe
push
popa
and
push
lods
mov
add
fimul
ret
xlat
pop
sbb
cmp
les
retf
pop
jno
aad
and
ins
fist
sub
adc
mov
jge
jecxz
push
or
push
push
ret
loop
mov
pop
inc
fsub
sbb
test
cmp
stos
xchg
mov
sub
adc
ins
jl
mov
test
inc
mov
mov
sti
xchg
popf
fadd
cmps
in
inc
dec
push
dec
not
mov
retf
mov
dec
sub
cmp
adc
call
int3
pop
test
xor
jg
sub
sub
xchg
jg
inc
stc
pop
xor
sbb
lods
inc
xchg
ins
cli
std
clc
call
inc
cmps
out
out
jle
aad
push
inc
jp
retf
sub
dec
lds
xchg
fisttp
sub
adc
test
movs
mov
fs
in
fisubr
(bad)
call
adc
icebp
xor
adc
fistp
stos
xor
lods
xor
push
sbb
cld
shl
in
mov
pop
bound
jne
dec
and
loopne
shl
inc
xchg
mov
lods
dec
mov
pop
imul
ja
sbb
scas
adc
(bad)
test
mov
mov
or
aad
loop
mov
mov
loopne
dec
or
mov
ja
out
or
scas
ja
ss
and
nop
mov
(bad)
jp
jnp
sub
ins
pop
imul
out
movs
retf
std
adc
push
pop
enter
sbb
bnd
(bad)
fistp
push
inc
aas
iret
xchg
adc
test
(bad)
cmps
push
add
fld
ror
jmp
mul
in
cmp
out
dec
mov
push
mov
dec
stos
pop
ret
mov
enter
xor
scas
ss
ret
dec
mov
rol
call
pop
pop
into
repz
call
mov
sti
mov
jbe
cmps
sbb
retf
jns
mov
shr
xchg
or
imul
out
cmc
loope
cmp
mov
lock
and
and
arpl
push
add
(bad)
jp
add
test
int
in
lock
xor
data16
sbb
push
xchg
mov
arpl
in
and
xlat
mov
mov
out
outs
cmps
sub
mov
sbb
and
or
clc
pop
mov
dec
pop
leave
(bad)
inc
inc
pop
push
sbb
push
mov
dec
mov
ret
imul
adc
mov
or
std
lock
scas
and
and
aad
push
aad
in
loopne
js
and
scas
cmp
clc
inc
arpl
cmp
or
and
test
ds
retf
test
aaa
xchg
rcl
push
jl
out
pop
pop
cmp
pop
mov
movs
cmp
fcom
imul
sbb
xchg
push
call
cwde
out
jnp
or
mov
and
xchg
mov
push
inc
outs
xor
fimul
sbb
rcr
jl
call
loopne
addr16
cld
ret
cmp
xor
mov
dec
inc
mov
or
push
and
mov
inc
into
cli
enter
adc
mov
cwde
sbb
push
in
inc
mov
mov
test
fadd
mov
sar
pushf
and
jmp
jae
sbb
add
and
mov
pop
scas
push
not
imul
cmps
ins
stos
fst
mov
je
pop
pusha
fld
popa
cmp
leave
add
lods
ss
xchg
fstp
add
pop
fld
(bad)
call
int
ret
into
out
inc
add
sbb
xor
adc
xchg
and
add
and
loope
xchg
xor
and
jbe
xchg
mov
fistp
sahf
push
add
mov
mov
sbb
push
mov
shl
movs
cmp
repnz
mov
ret
std
cmp
outs
pop
xchg
cli
mov
and
outs
and
(bad)
fadd
mov
mov
dec
pop
in
jbe
stos
push
pop
mov
inc
xchg
aaa
jae
and
ja
call
mov
sbb
sti
gs
push
dec
lds
out
mov
xchg
sahf
pop
lods
ret
sbb
fimul
cli
xor
hlt
mov
cmp
xchg
repnz
retf
gs
or
mov
add
pop
dec
push
add
mov
int3
out
dec
das
call
mov
lods
adc
xchg
jmp
xchg
imul
div
cmp
retf
movs
mov
aas
jg
dec
bound
xchg
xor
or
cmp
pop
mov
mov
push
mov
sub
scas
pop
mov
ror
inc
pop
cmps
fistp
jmp
push
scas
gs
dec
xor
add
aas
adc
stos
es
cmp
clc
es
pushf
movs
dec
fs
addr16
jl
add
mov
pushf
push
mov
and
inc
sbb
std
sub
int3
repnz
cmp
loop
xchg
aad
push
jmp
mov
fwait
inc
out
sub
movs
das
inc
dec
jno
and
mov
nop
xchg
mov
lock
movs
popa
jmp
push
push
retf
sbb
fadd
pop
lock
adc
not
in
scas
ror
fidivr
(bad)
pop
mov
or
xor
pop
push
inc
rcr
mov
mov
add
dec
repnz
mov
lock
mov
pusha
out
xor
cmps
mov
dec
xor
gs
sub
div
cmc
sub
addr16
popa
pop
sub
(bad)
fdivr
nop
pop
test
arpl
fcmovnu
mov
cmc
int
or
jecxz
fcmove
icebp
jmp
mov
clc
mov
jmp
mov
mov
push
or
stc
mov
sub
jge
call
and
mov
or
bound
jmp
sbb
xchg
xchg
in
dec
ins
adc
repz
cdq
jmp
call
push
(bad)
xchg
test
and
sub
jne
xor
cs
ret
pop
fbld
sub
js
push
mov
nop
addr16
or
mov
lods
retf
inc
dec
mov
test
xchg
test
cld
dec
pop
and
bound
mov
mov
dec
jp
xchg
out
retf
call
rep
xchg
xchg
es
xchg
add
xor
mov
leave
iret
and
bound
xor
sbb
add
push
push
xchg
xlat
and
xchg
fimul
into
fcom
sub
dec
lds
(bad)
sub
repz
mov
fidivr
cmps
sub
sti
mov
add
in
leave
fnstsw
call
mov
mov
lahf
(bad)
inc
xchg
mov
ja
scas
mov
jg
sbb
cmp
in
add
enter
xchg
arpl
(bad)
fwait
stos
lods
sbb
mov
jo
mov
jl
cs
(bad)
sbb
inc
lea
or
cvtps2pi
cdq
dec
adc
or
xchg
adc
cld
jno
in
fwait
dec
sub
add
out
mov
push
ins
mov
sbb
push
pop
pop
test
outs
cld
xor
add
fwait
call
aam
pop
pop
pop
stos
cli
xchg
sub
mov
pop
jmp
or
pop
cmp
xchg
push
sub
pop
adc
mov
xor
ins
cdq
xor
lahf
push
mov
shl
adc
stc
in
pop
sahf
jle
in
shl
mov
add
xor
out
cdq
mov
lds
sbb
loope
lea
imul
pop
and
pusha
xchg
pop
pop
call
mov
dec
and
push
out
loope
xor
js
clc
inc
mov
jns
jns
jns
jns
jns
jns
jns
jns
js
mov
push
push
ret
sub
fwait
and
xchg
fwait
or
sahf
leave
ss
(bad)
sbb
dec
lds
js
fisub
(bad)
lahf
call
cdq
mov
and
jecxz
int
loopne
je
mov
xchg
mov
ret
test
fdiv
cmp
or
cmp
imul
arpl
pop
es
adc
(bad)
test
jns
push
loopne
mov
dec
mov
sbb
dec
hlt
(bad)
or
mov
(bad)
cli
sub
add
dec
xlat
aam
cdq
addr16
loopne
cmp
xchg
push
push
shl
inc
add
push
inc
push
outs
ins
mov
mov
sub
call
popf
ret
icebp
or
mov
cli
dec
ret
jae
push
stos
(bad)
jge
mov
mov
lea
out
das
mov
cmp
pop
popa
ficomp
cmp
stos
pop
cmp
out
mov
nop
cmps
outs
ds
cmps
xchg
xor
(bad)
mov
sahf
ss
dec
mov
ret
or
inc
in
cwde
popa
leave
sti
les
int3
pop
jmp
and
xchg
fild
mov
mov
call
leave
cmp
arpl
popf
adc
outs
and
mov
test
dec
retf
adc
call
jge
stos
xor
push
aas
je
div
cmc
iret
pop
movs
sbb
scas
adc
pop
aas
loopne
adc
cmp
in
movs
mov
or
adc
dec
out
cli
out
adc
scas
sbb
mov
mov
fmulp
and
pusha
or
pop
adc
and
mov
aas
add
xchg
lds
xlat
stos
cmp
int3
pop
xor
fwait
push
arpl
add
nop
mov
xchg
push
jae
jl
add
mov
mov
push
leave
sbb
jne
out
add
push
lahf
scas
push
das
frstor
jne
sbb
mov
pop
nop
mov
adc
or
add
cwde
or
pop
nop
jnp
inc
loop
jno
xchg
cld
arpl
shl
sub
adc
ins
push
adc
rcl
ins
xor
inc
dec
xchg
sub
stos
xor
pop
mov
ins
repnz
add
jmp
mov
xor
into
lock
iret
mov
jg
pop
in
jne
aas
mov
je
mov
fwait
xchg
fnstsw
jmp
cmc
clts
test
stos
and
xchg
ds
push
inc
hlt
add
inc
push
inc
jae
dec
pop
mov
jge
dec
add
jo
ror
imul
cmp
repz
adc
clc
or
cli
rol
jo
inc
pushf
int
add
push
mov
add
lahf
fsubr
cli
sbb
out
and
inc
aas
jecxz
aad
loop
or
dec
pop
in
fcom
and
sbb
jl
mov
cli
(bad)
pop
add
xor
inc
adc
fnstenv
dec
rcl
jnp
test
pop
or
xchg
xchg
aam
lods
fdivr
(bad)
cs
dec
stos
pop
push
sub
dec
out
mov
xchg
test
in
in
call
mov
and
imul
ds
out
push
push
sub
out
inc
or
mov
std
out
pop
dec
dec
push
inc
jecxz
hlt
xor
xor
sahf
fwait
adc
scas
or
jne
jecxz
cmp
int
mov
mov
es
in
imul
aas
jnp
mov
inc
push
and
pushf
cmc
addr16
mov
xor
pop
dec
adc
inc
outs
pop
outs
loope
dec
pop
enter
dec
and
inc
adc
jg
imul
repnz
test
int
aas
xchg
not
clc
dec
hlt
inc
or
in
mov
xor
pop
cmp
sbb
ins
(bad)
inc
adc
dec
pusha
idiv
outs
or
(bad)
mov
js
jmp
jnp
xor
mov
inc
or
dec
sahf
fsubr
dec
adc
in
sub
mov
or
mov
pop
lahf
pop
push
stos
scas
mov
sub
jne
pop
bound
pop
movs
jnp
add
xchg
push
out
add
(bad)
into
ror
adc
sti
adc
sbb
cmps
retf
lock
nop
movs
test
call
mov
sub
add
hlt
repnz
retf
push
aas
fisubr
test
call
outs
mov
dec
push
loope
inc
or
mov
pop
ret
iret
lods
movups
mov
mov
pop
jecxz
sub
test
adc
cmp
(bad)
movs
add
mov
cmps
push
cmpxchg
cmp
adc
or
inc
and
popa
or
ficomp
xlat
xor
sbb
mov
leave
fisubr
ins
fadd
or
sbb
mov
out
jbe
mov
sub
dec
dec
add
adc
adc
scas
and
sbb
aaa
mov
xchg
(bad)
jge
or
cs
jb
lea
(bad)
in
mov
jge
mov
jno
ss
adc
adc
mov
outs
ret
mov
mov
popa
inc
mov
loop
jecxz
imul
inc
jge
scas
jecxz
jnp
or
dec
stos
pop
lds
out
jnp
adc
leave
pop
out
cwde
sub
cmp
pop
xor
mov
pushf
hlt
(bad)
inc
out
movs
into
sbb
(bad)
push
fs
inc
add
imul
mov
xchg
pop
xor
or
xlat
inc
jmp
jb
add
sub
ds
sub
pop
popf
xchg
ret
inc
shl
sub
add
xchg
push
xchg
push
sub
ins
retf
lods
xchg
lock
ficomp
in
fs
sub
xlat
mov
pop
dec
xchg
cmp
jle
jno
xchg
xchg
fnstcw
int3
add
jbe
and
retf
cmp
loop
and
xchg
pop
aaa
xor
fnstsw
pop
stc
ror
ins
sub
xchg
imul
inc
or
ret
int3
xor
cmp
add
jmp
sub
push
mov
cmps
cmp
or
scas
cmp
fdivrp
repnz
mov
lods
adc
loop
mov
mov
push
iret
cmc
mov
imul
scas
imul
ins
pop
mov
outs
lods
icebp
imul
in
ins
stos
mov
cmp
adc
add
xor
pushf
pop
je
loope
mov
dec
inc
cli
pop
dec
push
adc
mov
mov
push
loope
push
ss
mov
mov
adc
push
xchg
xor
sub
mov
int3
(bad)
adc
mov
popf
in
mov
ins
out
mov
iret
pushf
mov
xor
or
cwde
push
pop
xchg
sbb
pusha
mov
mov
cdq
xor
jae
jbe
lock
lock
and
cmc
aad
inc
rcr
aas
vcvttsd2si
dec
or
xor
dec
inc
push
bound
call
test
cdq
outs
dec
push
lods
mov
mov
xor
(bad)
and
int
mov
scas
push
outs
sub
pop
sbb
scas
mov
pop
iret
inc
shl
bnd
lods
test
pusha
outs
dec
jmp
fdiv
loop
and
retf
mov
cli
cmp
jmp
sti
mov
lock
cmp
dec
aas
mov
in
sbb
test
pop
pop
mov
mov
in
sub
push
jp
(bad)
ror
mov
cmp
inc
xchg
push
mov
fcom
jno
push
mov
nop
inc
xchg
jecxz
xlat
inc
jl
cld
and
mov
test
inc
dec
xchg
xchg
das
jns
fwait
push
pop
mov
pushf
enter
pop
sub
mov
cmp
std
enter
(bad)
in
mov
and
inc
xchg
pop
pop
mov
out
aam
add
out
ins
mov
adc
loopne
in
or
push
and
xchg
xchg
jno
push
mov
sbb
(bad)
aam
mov
sbb
mov
fwait
push
cmp
out
scas
repz
les
mov
ret
jmp
push
sti
push
sub
inc
jmp
cmp
sub
jle
lods
enter
mov
out
stos
mov
sbb
mov
xchg
mov
mov
xchg
dec
push
jo
jp
dec
fstp
adc
fild
outs
dec
adc
cmps
mov
cdq
cmp
outs
in
out
push
mov
fld
pop
mov
sub
and
adc
(bad)
outs
fiadd
mov
xchg
leave
jle
and
lods
nop
pop
test
push
and
loope
sub
lods
jg
mov
(bad)
mov
mov
fdiv
inc
mov
std
cmp
(bad)
cli
pop
enter
xor
sbb
mov
scas
add
or
mov
pop
push
mov
out
xor
cmp
test
in
cmps
in
cwde
in
dec
stos
icebp
mov
sub
(bad)
pop
stos
loopne
sbb
adc
jns
idiv
call
popf
or
push
mov
out
jno
fbstp
push
xchg
call
xchg
or
sbb
add
and
call
adc
dec
bound
inc
add
jb
jge
or
xchg
add
jae
sbb
xor
mov
and
fcomi
push
mov
dec
das
pop
shl
inc
(bad)
loopne
jmp
out
pop
adc
sbb
(bad)
sbb
out
xchg
js
aam
and
mov
jae
pop
stos
jae
int
rcl
pop
sbb
xor
data16
js
mov
and
mov
call
(bad)
int
mov
lahf
cmp
or
dec
loopne
mov
sbb
ss
outs
out
or
jmp
and
into
inc
call
(bad)
mov
sub
xor
shl
cs
shr
mov
mov
jb
loope
cwde
mov
push
ins
add
fwait
call
es
mov
mov
pop
nop
in
dec
ins
adc
(bad)
out
fild
mov
and
xor
lods
ss
or
shl
xchg
mov
ds
popa
jo
lea
push
test
ret
das
xchg
dec
lods
xor
outs
push
cmp
pop
adc
scas
(bad)
mov
mov
xchg
je
loopne
adc
iret
push
jae
mov
lods
pop
aam
inc
xor
sub
leave
movs
aas
and
(bad)
fsubr
push
pop
call
pop
inc
add
jmp
mov
cmps
add
les
sbb
fcmove
push
imul
cdq
sbb
pop
pop
movs
scas
call
add
sbb
shr
in
mov
cmps
lock
icebp
out
push
push
scas
outs
fs
and
mov
dec
repnz
inc
mov
shr
and
pusha
mov
sbb
jne
adc
inc
ins
mov
xor
xchg
retf
xor
fwait
jp
xchg
lock
push
jmp
aad
aam
enter
mov
jo
outs
test
push
cld
adc
cmc
xchg
loop
fidiv
ret
dec
lods
test
adc
(bad)
mov
jg
arpl
shr
ror
ja
sahf
mov
retf
cmp
lahf
jbe
inc
call
pop
xor
loop
inc
xchg
fcmovu
sbb
mov
inc
es
push
call
lea
movs
std
popa
push
loop
or
xlat
dec
leave
sub
xor
xor
add
scas
pop
pushf
pop
and
xor
repz
mov
call
rcr
in
lds
cmps
and
xchg
cmp
push
adc
neg
jnp
cmp
(bad)
pusha
popf
shr
mov
mov
loopne
mov
stos
(bad)
xchg
clc
data16
retf
leave
lods
arpl
int
fucomi
add
add
aam
enter
adc
mov
or
hlt
mov
pop
enter
inc
inc
div
fstp
mov
and
xchg
outs
jae
and
cmp
shl
cwde
lds
cmp
mul
fwait
es
enter
and
cdq
add
pop
(bad)
mov
inc
repnz
retf
test
aam
inc
es
(bad)
pop
sbb
jbe
in
pop
outs
lock
dec
pop
jae
adc
gs
repnz
ficomp
sub
pop
mov
sbb
sbb
std
cmp
mov
sub
nop
loope
adc
push
fs
sbb
aam
add
mov
fld
sbb
push
movs
jne
ds
sar
jg
ret
in
js
sub
push
pop
inc
int
imul
and
inc
fst
(bad)
fist
or
shl
sub
into
mov
daa
xchg
mov
push
dec
dec
sbb
fwait
test
test
dec
cmps
inc
mov
mov
mov
xchg
cmp
and
fwait
xor
scas
ffree
std
jmp
aad
push
lahf
inc
push
inc
iret
shr
scas
pop
and
mov
cmp
sbb
cmp
push
rcl
div
or
je
retf
adc
aaa
and
out
sysenter
clc
loopne
cmc
jl
movs
and
movs
and
lods
cdq
je
pop
adc
mov
add
mov
loopne
and
(bad)
js
pop
cld
sub
ret
rcl
fsub
mov
fcomp
es
or
and
ds
outs
xor
or
cmp
not
pop
cmc
add
ret
cs
repnz
or
and
sub
fwait
inc
xor
add
fisub
or
pop
inc
pop
pop
das
sbb
std
lahf
sbb
cmp
mov
js
dec
or
sti
retf
mov
sbb
mov
aaa
mov
jmp
adc
retf
push
call
dec
retf
adc
jmp
inc
aam
test
mov
mov
mov
xor
push
movs
out
(bad)
mov
jno
stos
out
stc
mov
sub
push
pop
aad
daa
mov
scas
cmp
or
rol
dec
int3
cli
mov
fild
and
fldcw
cld
ds
aaa
jg
(bad)
out
ret
sbb
test
jae
mov
pop
add
fcomp
inc
leave
mov
(bad)
or
jbe
test
add
cmc
xchg
and
fscale
fstp
aam
and
or
jg
xor
mov
push
jns
sbb
iret
push
neg
out
retf
mov
lods
xor
call
cdq
nop
fsubrp
ficomp
add
stos
ja
inc
loop
cmps
sub
xchg
push
pop
jmp
out
mov
daa
or
out
movs
mov
std
or
push
jecxz
cmp
inc
out
movs
iret
jge
dec
pop
(bad)
xchg
rol
or
inc
mov
lods
in
data16
je
rcr
in
mov
mov
jle
mov
dec
and
push
icebp
js
hlt
ss
arpl
popa
loopne
pushf
sbb
ins
lahf
sbb
std
pusha
inc
dec
jae
xchg
bound
icebp
pop
imul
movs
mov
clc
mov
ret
jmp
and
int
push
mov
xchg
jbe
sub
adc
mov
or
mov
add
add
mov
in
cmp
in
loop
add
nop
cmp
or
popa
cmc
mov
inc
mov
lods
mov
jp
jns
jno
movs
push
pop
xchg
mov
shl
test
pmaddwd
cli
dec
mov
cmp
pop
mov
xor
je
cdq
stos
add
pop
xor
push
inc
fs
addr16
mov
xor
inc
popa
out
mov
in
dec
pop
call
add
pop
imul
dec
ret
jno
xchg
ret
sbb
loopne
or
push
(bad)
dec
mov
add
dec
adc
lods
loopne
add
cmp
pop
loopne
inc
jnp
gs
cmc
dec
push
into
imul
repnz
std
repnz
pop
xor
jg
aas
out
xor
push
sub
push
sub
in
sub
dec
dec
cmc
sub
lea
xchg
data16
daa
imul
adc
jne
or
test
jae
pushf
retf
das
std
nop
mov
(bad)
les
stos
inc
mov
xchg
(bad)
xchg
mov
fadd
mov
scas
add
jle
cmp
popa
xor
(bad)
cmps
movs
dec
sub
push
lods
push
(bad)
mov
popa
inc
stos
lods
pop
shl
iret
jbe
mov
mov
cmc
fcomp
pop
stos
xor
fsubr
sub
popf
call
(bad)
repz
inc
push
popa
repnz
xor
fadd
cmps
fst
add
enter
fild
retf
enter
push
dec
adc
mov
cmps
inc
les
rcr
mov
imul
lock
cmp
jae
cdq
(bad)
ss
xor
push
into
mov
cmp
scas
lods
lods
xchg
jge
fld
mov
pop
dec
mov
lock
pop
inc
ret
aam
bnd
mov
push
nop
push
mov
shl
dec
mov
mov
leavew
cmp
cmp
mov
rol
sar
and
inc
int
pop
mov
mov
xchg
sub
cli
sub
sub
inc
cmps
adc
push
adc
clc
xchg
pop
int3
adc
push
push
jno
mov
outs
dec
inc
push
pop
scas
adc
xchg
jno
sar
cwde
pop
push
cmp
pop
shl
icebp
retf
jb
gs
retf
xchg
lahf
(bad)
aam
sbb
iret
push
cmc
mov
sub
(bad)
xor
fild
mov
test
add
xlat
sbb
aas
and
add
outs
xor
cmp
jle
push
loope
jns
jg
adc
outs
cmps
sub
arpl
test
push
ficom
into
mov
xchg
inc
push
fst
mov
push
popa
pop
daa
cmps
out
(bad)
mov
cli
shr
imul
rcr
mov
mov
adc
shl
(bad)
lods
add
pushf
push
jmp
sbb
mov
xor
push
add
dec
aaa
gs
out
cld
fisubr
cmp
scas
push
jae
out
scas
repz
mov
fnstenv
sbb
mov
sti
loope
sub
adc
xor
inc
xor
mov
jp
sbb
jnp
push
sub
lods
xor
jg
idiv
in
loope
mov
jle
jo
mov
push
push
push
cli
cmp
or
pop
inc
js
call
cmp
and
mov
in
jmp
aad
dec
test
popf
dec
xor
and
xor
and
jae
lock
adc
dec
and
jle
movs
stos
mov
xchg
pop
ret
sbb
mov
jmp
sbb
loop
data16
mov
adc
cmp
stc
enter
aam
mov
cld
fist
ret
dec
cld
fld
push
xchg
jbe
ins
cmc
pusha
into
sub
jg
arpl
mov
in
arpl
push
and
in
adc
pop
sub
sub
sub
mov
xor
xor
cmc
retfw
mov
daa
inc
xor
mov
and
mov
adc
sbb
repz
addr16
cmp
or
dec
daa
or
inc
stos
mov
xchg
cld
addr16
sub
mov
popa
lods
jb
add
stc
push
push
frstor
cli
add
iret
test
cs
push
sbb
in
call
or
inc
ror
(bad)
and
xor
dec
sbb
into
xchg
push
xchg
xor
out
movs
add
fld
sub
xor
sub
cmp
(bad)
cdq
fnstenv
sub
or
popa
cmp
(bad)
add
push
ja
stos
jbe
jmp
dec
add
mov
pop
cmp
popa
arpl
xlat
mov
ins
int
jmp
xor
dec
sbb
movs
cli
or
sbb
add
jne
cmps
mov
push
jnp
test
sahf
adc
sbb
cdq
xchg
mov
dec
or
pusha
not
loope
jecxz
and
mov
(bad)
mov
or
out
cmp
fistp
and
xor
std
xor
mov
aas
pushf
push
out
xor
movs
add
cmps
push
daa
leave
pop
mov
mov
in
ins
jp
jmp
cmp
movs
lds
sbb
fdivr
xchg
mov
sub
mov
add
vpunpcklqdq
fnsetpm(287
jb
ret
mov
(bad)
sbb
fidivr
aas
shl
pop
imul
add
and
mov
cmp
movs
push
cmps
mov
icebp
cdq
mov
sub
aam
loope
mov
sbb
cmc
out
(bad)
cmc
fmulp
cmc
add
cmps
cmps
js
push
ficom
aaa
cmp
or
test
outs
mov
jne
test
call
std
sub
lds
test
pop
cs
retf
aam
ins
dec
fstp
push
addr16
fmul
pop
and
icebp
add
dec
scas
popa
mov
cmp
lods
aam
call
dec
cmps
push
int
dec
mov
cmps
popf
sbb
das
stos
cli
sub
xchg
pop
sub
or
xor
aaa
ds
arpl
into
not
and
jmp
outs
in
lock
jle
les
cmp
mov
lods
popf
cmp
push
push
into
xchg
icebp
stos
dec
std
popf
mov
xchg
loop
mov
ins
push
cmc
sbb
repnz
fwait
pop
icebp
movs
xchg
sbb
adc
or
push
sbb
add
scas
stc
dec
adc
(bad)
pop
add
mov
cmp
cdq
and
pop
imul
fsubr
loopne
das
jmp
push
mov
or
jmp
xchg
add
cwde
pop
das
ins
add
loopne
push
adc
sbb
fimul
jno
dec
rol
and
lea
sti
adc
and
mov
rol
lds
and
or
sub
mov
dec
xor
repz
inc
fcmovnb
pop
and
pushf
mov
lods
icebp
pop
out
icebp
(bad)
push
or
pushf
test
adc
ja
inc
cmp
aaa
sub
mov
js
les
lea
fld
mov
adc
loop
add
push
sbb
sbb
sti
repz
(bad)
and
icebp
and
sbb
xor
in
mov
call
sbb
mov
jle
arpl
popf
mov
mov
in
or
sbb
jnp
ins
push
jo
movs
cmps
dec
leave
pop
jb
pop
mov
cmps
cmc
pop
pop
js
or
test
lea
mov
push
push
in
xor
pop
and
hlt
xchg
mov
jmp
js
pop
movs
adc
pop
test
mov
addr16
xchg
lods
in
pop
sub
mov
sti
dec
jbe
add
ret
pop
in
add
inc
adc
jg
imul
cwde
popa
sub
mov
push
mov
mov
mov
sub
push
push
fild
cld
xlat
ror
ja
mov
daa
outs
sbb
out
cmp
outs
test
sub
ins
inc
int3
push
dec
aas
sub
push
call
add
xlat
xor
in
adc
retf
lahf
sbb
fmul
ds
sbb
mov
loope
adc
xchg
xor
dec
add
retf
daa
jne
in
add
fadd
lds
or
add
stos
jp
fwait
(bad)
mov
jnp
mov
push
mov
cwde
xchg
jmp
fld
or
cmp
movs
test
les
(bad)
mov
jge
xor
mov
rcr
dec
call
xor
jno
mov
add
call
retf
dec
jmp
jecxz
sbb
adc
idiv
int
push
mov
fisttp
gs
add
and
jmp
cpuid
lods
(bad)
retf
xor
xchg
mov
xchg
ret
or
dec
int3
retf
xor
inc
outs
inc
into
xor
or
outs
xchg
pop
jne
xor
outs
dec
pushf
inc
fist
xchg
and
cmc
out
sbb
inc
pop
inc
and
inc
das
ret
scas
jne
aad
rep
pop
arpl
xchg
cli
pop
add
jb
cmp
out
clc
test
push
in
inc
dec
hlt
mov
gs
sub
xor
push
(bad)
fidivr
repnz
xchg
out
sbb
xor
mov
popa
or
add
jbe
imul
inc
test
inc
in
sbb
(bad)
bound
mov
push
scas
rol
inc
fwait
xor
inc
xchg
xor
pop
jmp
pop
push
mov
retf
out
and
sub
movs
pop
pop
inc
dec
cli
fnstsw
nop
jg
mov
lods
js
mov
adc
sub
dec
loop
or
shl
and
mov
in
cdq
stc
pusha
or
fimul
mov
mov
mov
dec
jmp
mov
jae
popa
les
loopne
xor
shr
lock
adc
push
add
or
lock
adc
push
sbb
cmps
or
adc
sub
sub
test
cmps
in
(bad)
mov
jmp
daa
loope
test
call
mov
and
std
push
test
pop
mov
adc
push
(bad)
jmp
fldenv
icebp
in
sbb
xchg
jb
adc
jg
add
push
dec
xor
nop
mov
outs
or
pusha
inc
cmp
jmp
stos
test
ret
xchg
imul
call
xchg
sbb
jnp
or
xor
scas
pusha
out
bnd
push
and
stos
(bad)
data16
mov
jbe
scas
in
in
in
xlat
cmps
push
ret
pop
loope
cs
xor
and
jmp
push
xchg
and
mov
sub
add
push
jle
shl
mov
mov
das
pop
rcr
in
xor
or
lods
sub
xor
movs
push
mov
jmp
scas
wbinvd
enter
and
adc
push
mov
xchg
cmps
test
stos
xor
cdq
cwde
and
vmulsd
mov
jmp
neg
jno
fisub
push
xchg
cmp
or
mov
xor
sub
movs
imul
jl
lods
js
mov
and
jl
xchg
jg
stc
shl
adc
xchg
ins
or
or
mov
repnz
fist
outs
adc
jle
popa
and
sbb
hlt
and
push
movq
xchg
adc
add
xor
(bad)
mov
dec
push
and
int3
cdq
(bad)
dec
movs
scas
nop
test
and
mul
dec
push
inc
jmp
cmp
jmp
mov
call
sahf
mov
jg
inc
jb
mov
ins
packuswb
mov
sub
mov
sub
or
ror
out
mov
das
sbb
add
ins
or
ins
mov
or
jg
outs
fmul
ins
sar
xchg
ins
aad
mov
mov
lds
ret
(bad)
loop
les
mov
lahf
jmp
clc
adc
add
adc
das
mov
nop
sbb
clc
in
rcl
lods
das
rol
lock
fldenv
jecxz
test
mov
dec
mov
pop
cmc
xchg
mov
inc
inc
leave
mov
jno
cmovge
mov
jmp
adc
fs
shl
xor
out
in
and
lahf
pop
mov
cmps
add
mov
adc
inc
xchg
xchg
xchg
mov
mov
pop
sti
push
sub
outs
adc
mul
in
mov
dec
sub
aam
fiadd
push
hlt
fbstp
test
xchg
and
bound
test
xchg
push
and
sub
into
iret
sub
or
or
push
sbb
movs
and
ret
ret
or
pop
push
add
push
jp
sbb
ficomp
into
jns
lahf
dec
xchg
sub
int3
pushf
cmp
sahf
sbb
adc
xchg
adc
icebp
xor
loopne
dec
inc
and
and
popf
(bad)
xor
stos
sub
dec
xchg
fstp
imul
js
ss
pop
cmc
cmp
fld
(bad)
xor
sub
inc
push
clc
add
xor
enter
xchg
pop
mov
enter
(bad)
push
inc
and
(bad)
push
sub
add
sbb
jge
ret
dec
push
pop
ja
test
ficomp
mov
jnp
dec
jns
add
retf
inc
sbb
adc
arpl
push
add
xchg
jb
cdq
in
mov
dec
sbb
sbb
add
adc
gs
adc
lea
push
aad
dec
and
loop
sbb
ret
data16
jne
sub
adc
hlt
int
inc
mov
cmp
cmp
outs
mov
daa
adc
and
(bad)
cs
sar
or
cdq
jo
mov
dec
cmps
cs
jl
push
inc
test
inc
sar
das
dec
pop
std
das
pop
mov
loopne
add
retf
mov
lahf
in
call
mov
mov
jo
je
xor
or
jl
jl
and
nop
std
mov
mov
xor
adc
inc
shl
out
sbb
push
std
pop
ins
xchg
retf
mov
xchg
sbb
pushf
mov
dec
pop
dec
cdq
test
jns
and
and
aad
iret
stc
jnp
or
cdq
cld
dec
in
jns
outs
lds
test
sahf
pop
sbb
add
mov
mov
push
js
jecxz
xor
and
xor
in
add
cmp
dec
clc
inc
sahf
ror
xchg
cmps
ror
scas
scas
movs
push
dec
lea
sti
test
cmp
popa
push
jb
stos
inc
mov
or
xchg
jnp
in
mov
cmp
pop
mov
push
in
stos
lea
cld
push
add
sahf
cmc
inc
jge
sbb
rcr
cmp
xor
inc
(bad)
cmp
pop
ds
ins
xchg
bound
adc
fistp
or
pushf
or
ret
jmp
or
loope
xchg
dec
pop
rcr
pop
push
mov
and
mov
loope
into
pop
inc
inc
lods
mov
pop
stos
xor
jbe
pop
pop
ds
dec
das
scas
(bad)
mov
ja
enter
push
dec
pushf
js
push
and
mov
(bad)
inc
add
out
xchg
sub
sbb
or
fadd
push
call
jmp
jo
retf
or
retf
push
lahf
add
and
cmp
arpl
adc
or
adc
push
test
jnp
push
jle
xchg
add
or
or
retf
push
jo
fisub
push
jne
arpl
pop
xchg
jl
fld
and
stc
fs
jne
int
sub
push
ins
mov
ds
sbb
(bad)
jmp
ja
xchg
icebp
fscale
(bad)
or
ret
jmp
call
loope
in
or
xchg
dec
sbb
and
xor
fbstp
test
mov
lods
fbld
sbb
mov
aad
inc
mov
in
mov
ja
adc
pop
and
fwait
xor
cmp
mov
xchg
repnz
scas
and
retf
or
add
popf
rcl
sbb
retf
out
xor
cmp
cmps
mov
ret
dec
adc
call
or
adc
add
jne
inc
dec
jo
jl
retf
ror
jp
and
jmp
cmp
(bad)
mov
jae
xor
mov
repnz
inc
(bad)
xor
jnp
push
mov
ss
sahf
mov
stos
adc
test
inc
movs
pop
aam
jno
repz
jno
push
or
aas
or
push
xor
popf
mov
out
adc
(bad)
out
inc
repnz
and
inc
ins
mov
ins
mov
lock
repnz
fcom
lahf
cmp
scas
sbb
push
mov
mov
test
dec
sbb
mov
mov
jmp
and
aam
mov
gs
enter
sub
mov
add
push
or
or
mov
jle
mov
jl
pop
jmp
fscale
cmp
pusha
loop
xchg
arpl
ss
repnz
loope
jnp
dec
xor
lods
adc
aam
mov
std
fisub
sbb
popf
test
aad
jne
lods
xor
inc
loopne
jmp
arpl
mov
scas
rcl
mov
dec
xchg
in
sub
ja
(bad)
lods
cld
push
ja
repz
or
cmp
nop
sub
push
enter
jns
push
scas
fimul
xor
xchg
jae
cmc
mov
ins
xor
or
jmp
sub
mov
pop
pop
push
inc
shr
sbb
not
add
je
and
test
dec
mov
sahf
in
lods
dec
xchg
and
fwait
jg
bound
mov
sbb
(bad)
mov
xor
std
xchg
or
cmc
push
push
inc
cmp
or
dec
jle
and
sub
or
xor
sbb
mov
mov
fidivr
das
xor
jne
adc
ins
xor
push
mov
xchg
cmc
mov
mov
sub
ins
mov
mov
dec
mov
dec
push
lea
cmp
xchg
cmp
mov
mov
and
cld
mov
sbb
mov
loopne
mov
pop
pop
jns
and
int3
ret
mov
sbb
leave
sub
dec
xchg
push
mov
mov
mov
sti
xchg
in
cmp
xor
lods
ror
loopne
pusha
mov
mov
cmpps
xor
cli
xor
xchg
dec
in
push
repnz
dec
push
and
or
xchg
ins
int
add
dec
call
or
shl
cmp
push
cld
sub
jb
dec
xchg
lahf
mov
sub
push
cmp
sub
cs
je
scas
fs
iret
pop
cmp
sub
stos
pop
pop
sar
sub
fstp
jae
mov
pop
(bad)
xchg
ins
(bad)
mov
ds
in
loop
je
out
sub
sahf
out
push
add
call
je
sub
mov
inc
(bad)
hlt
and
aam
xor
adc
adc
inc
call
sti
pop
cmp
pop
fld
sti
das
cmc
jb
out
fcom
jmp
cmps
jb
jle
sbb
div
sbb
sub
cmp
les
push
movs
sbb
jae
out
in
push
test
jmp
aad
into
jns
mov
out
dec
enter
call
jo
retf
adc
mov
cmp
jne
xlat
int
rcl
jge
xchg
repnz
retf
out
movs
push
adc
ja
sub
push
cmp
cmc
jno
popf
hlt
mov
out
dec
jo
pop
push
and
daa
jbe
imul
ficom
xchg
mov
mov
into
neg
cwde
sub
xor
sar
ins
fld
jmp
add
shl
mov
repz
mov
aad
inc
cmps
sbb
adc
mov
mov
pop
or
cs
or
addr16
push
jne
mov
xlat
sti
(bad)
mov
adc
push
inc
xor
jo
xor
cdq
xchg
cli
popf
jbe
fwait
repnz
(bad)
ror
jge
push
test
sbb
and
pop
pusha
ficomp
shl
hlt
mov
fwait
jle
lahf
jg
mov
xor
sbb
push
pop
ins
jmp
dec
xchg
arpl
ret
aad
inc
stos
inc
mov
int3
pop
in
leave
inc
jb
pop
mov
mov
push
(bad)
xor
fstp
sahf
repnz
addr16
add
js
sbb
xor
rcr
push
xchg
lods
jg
icebp
lock
xor
fild
fwait
push
adc
lods
mov
imul
jb
add
imul
inc
jl
push
fnstcw
mov
push
mov
out
imul
mov
jg
mov
not
(bad)
and
jle
mov
(bad)
sar
sub
clc
in
bound
sub
gs
sbb
(bad)
dec
xchg
or
aas
dec
jb
xor
inc
outs
or
movs
xor
add
inc
lahf
add
fisub
sub
jae
adc
xor
(bad)
stos
adc
dec
lods
fld
fst
xor
addr16
ret
cmp
idiv
jp
arpl
adc
or
xchg
clc
push
jge
pop
loop
mov
mov
sub
xor
wbinvd
stc
cmp
jmp
lea
xchg
push
mov
mov
popa
xlat
dec
and
movs
or
clc
add
outs
movs
mov
xor
push
inc
mov
mov
xor
cmps
(bad)
movs
ins
push
xlat
xlat
push
xchg
lock
xchg
fst
icebp
(bad)
fstp
mov
in
fild
aaa
cdq
fistp
sub
mov
adc
lahf
xor
popa
fwait
in
mov
retf
mov
jbe
xor
mov
ret
jmp
inc
bnd
push
jb
pop
jg
xor
ja
shl
jae
dec
inc
outs
ins
into
mov
cdq
jns
or
mov
xor
add
push
add
push
ins
add
jg
nop
xor
cmp
into
sbb
out
push
cmp
sbb
ret
add
sub
jb
pop
mov
jns
(bad)
out
inc
mov
aas
dec
dec
lds
pop
sub
and
clc
and
xor
hlt
rcl
fs
lock
xchg
push
ss
pusha
sbb
add
adc
jl
loop
push
repz
mov
ds
or
xor
hlt
inc
scas
mov
mov
xor
and
shl
in
call
jg
fstp
leave
push
fsub
jae
popf
test
movs
dec
in
retf
imul
inc
mov
int3
(bad)
mov
std
adc
mov
orps
test
inc
push
cmp
mov
sbb
cmp
stc
rdpmc
jl
lds
sub
and
ins
leave
cmp
and
push
(bad)
push
mov
jne
popf
sbb
cmps
xor
or
mov
js
iret
fwait
mov
dec
inc
call
sti
je
stc
in
pop
jne
(bad)
and
push
mov
icebp
out
mov
dec
movs
aam
xor
fldcw
mov
sbb
push
cdq
je
sub
imul
or
inc
jg
cmp
(bad)
(bad)
fild
xor
inc
mov
es
ds
pop
cdq
lods
mov
pop
mov
dec
sbb
pushf
js
adc
lock
ror
pushf
cli
and
sti
sar
pop
rol
adc
pop
jge
and
jle
loope
ret
jo
jbe
push
lods
mov
jmp
or
out
(bad)
mov
or
lahf
outs
aaa
int3
inc
inc
adc
cmp
idiv
xchg
adc
sub
fisub
xchg
retf
fsub
loope
mov
sbb
out
rol
xchg
adc
jmp
das
ret
pop
push
dec
cs
add
and
sub
mov
mov
pushf
daa
fidivr
(bad)
inc
movs
stos
ret
jno
stc
xchg
xchg
shr
sbb
jmp
fcom
movs
pushf
cdq
sub
fcom
xchg
pop
jmp
cmp
xor
lds
inc
push
push
imul
lods
aaa
jno
xchg
sub
cmp
adc
aad
xor
fidiv
pop
cmps
push
adc
sub
(bad)
push
imul
push
push
dec
sub
mov
in
ins
scas
ja
mov
retf
ins
inc
mov
jle
fs
fild
push
push
sbb
daa
rol
ds
pop
test
movs
xor
jo
sti
or
sbb
xchg
sar
push
adc
push
or
mov
jns
dec
xchg
xor
shr
or
or
leave
repz
pop
out
sub
mov
xchg
(bad)
pop
sbb
or
or
inc
jae
fdivr
add
ret
mov
pop
sub
push
rol
hlt
clc
xor
(bad)
out
inc
xor
mov
dec
out
jmp
mov
xchg
xor
dec
daa
jmp
jno
sub
(bad)
mov
cmp
jo
ds
mov
and
inc
jl
xchg
xlat
ja
jp
leave
and
inc
rcr
test
(bad)
xor
jecxz
out
pop
jp
mov
add
xchg
inc
fwait
adc
add
fcomp
mov
sbb
sbb
repnz
push
jnp
cs
.byte
