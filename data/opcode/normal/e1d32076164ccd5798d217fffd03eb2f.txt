and
add
add
add
add
add
add
add
add
and
add
push
and
add
pop
(bad)
scas
add
add
add
cmp
out
mov
xchg
add
add
jae
gs
cs
gs
jne
arpl
cs
gs
jne
arpl
gs
fs
and
arpl
ins
imul
jae
outs
outs
cmp
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
aaa
popa
xor
cmp
xor
xor
cmp
push
jns
je
ins
cs
gs
jne
arpl
cs
jne
je
ins
gs
gs
jne
arpl
gs
add
add
add
add
add
add
inc
push
inc
inc
push
aad
add
add
add
ret
add
add
jo
add
add
and
add
dec
push
inc
inc
add
add
jae
add
add
add
sub
add
add
add
add
add
or
add
add
add
jmp
add
adc
add
add
add
inc
dec
pop
add
popa
arpl
pop
dec
outs
arpl
imul
jae
inc
dec
cs
ins
imul
sti
add
add
push
dec
(bad)
outs
and
push
ins
popa
arpl
pop
dec
outs
arpl
imul
jae
jae
arpl
imul
add
add
jg
add
add
movs
dec
mov
add
popa
arpl
pop
push
push
pop
push
ins
popa
arpl
pop
inc
ins
jne
bound
jb
cs
ins
add
add
add
movs
dec
test
add
popa
arpl
pop
push
push
pop
push
ins
popa
arpl
pop
inc
jb
outs
bound
jb
cs
ins
add
and
add
add
push
ins
popa
arpl
pop
push
push
pop
push
ins
popa
arpl
pop
dec
outs
jae
je
js
ins
add
pop
add
jae
add
add
push
dec
dec
ins
and
push
ins
popa
arpl
pop
push
push
pop
push
ins
popa
arpl
pop
jae
arpl
imul
add
add
inc
fild
add
add
push
ins
popa
arpl
pop
push
push
pop
push
ins
popa
arpl
pop
push
jno
popa
jb
and
fs
jb
sub
js
ins
add
add
movs
or
add
add
push
ins
popa
arpl
pop
push
push
pop
push
ins
popa
arpl
pop
push
jno
popa
jb
and
ins
imul
ins
ins
add
loopne
add
add
add
arpl
push
and
dec
imul
arpl
cs
add
push
mov
add
or
je
inc
adc
add
pop
xor
add
jge
sub
pop
sbb
ds
loopne
xchg
fsub
outs
in
push
mov
retf
xchg
movs
adc
fistp
and
call
cmp
int
xchg
sbb
js
imul
int3
shl
xchg
enter
ror
fst
inc
int
in
test
cmps
jo
jbe
mov
add
and
cli
or
pop
shl
mov
inc
popf
jge
or
cli
not
aas
adc
jg
test
xor
xlat
das
xchg
cmp
neg
adc
add
adc
sub
mov
and
or
jle
mov
pop
push
push
push
mov
cli
(bad)
ficom
aam
jmp
pop
push
aaa
aas
arpl
iret
mov
pop
out
dec
fsubr
mov
jp
idiv
push
mov
test
jmp
push
jae
ret
pop
clc
arpl
outs
cli
ds
inc
sub
jb
xor
repz
fisubr
cmp
out
std
lods
call
sbb
not
sbb
mov
je
mov
int3
mov
pop
outs
(bad)
jns
mov
adc
in
push
xor
mov
out
ret
in
js
stos
mov
pop
fwait
rcr
mov
sbb
cmp
xor
adc
xchg
call
jg
push
ja
rcl
aaa
dec
xchg
std
sbb
fiadd
(bad)
loopne
or
mov
arpl
fld
mov
add
js
cli
xchg
jns
jae
fst
iret
les
sbb
cmp
inc
adc
(bad)
arpl
aam
ja
sti
stos
pop
fnstenv
(bad)
aaa
dec
jecxz
adc
add
add
out
xchg
in
adc
push
mov
fsubr
in
les
in
cld
(bad)
mov
mov
icebp
pop
and
mov
pop
aaa
xchg
lods
scas
cmp
popa
arpl
sar
cs
and
xchg
mov
mov
sub
sub
mov
mov
jp
pop
pop
dec
fild
inc
(bad)
icebp
mov
gs
add
scas
ins
mov
out
mov
pop
shl
pushf
fmul
out
jnp
int3
push
push
jne
cmps
arpl
(bad)
mov
test
jl
fucomp
pop
out
bnd
sti
out
test
sbb
push
mov
out
(bad)
das
div
jl
add
test
cmp
pusha
add
jbe
out
cmps
clc
jp
(bad)
shr
aas
imul
xor
pop
je
repnz
repz
jmp
mov
shr
vfrczsd
and
push
push
cs
lods
xchg
jb
pop
pop
pop
mov
fisttp
pop
or
mov
fimul
in
sub
(bad)
mov
jg
cmp
mov
inc
daa
movs
xchg
mov
push
outs
lods
jae
mov
out
dec
icebp
mov
add
cdq
adc
lahf
jnp
imul
jne
enter
enter
imul
(bad)
clc
fcomp
xchg
into
out
sub
out
pushf
ficomp
mov
mov
(bad)
mov
fwait
cmp
inc
nop
mov
sti
dec
fs
imul
test
add
adc
cmp
add
ret
stc
and
cmps
mov
mov
push
jb
xor
cmp
cmp
xchg
adc
ret
fst
into
call
sub
or
pop
jnp
pop
(bad)
or
sbb
xor
cs
push
leave
int
pop
xor
(bad)
xor
push
mov
and
xchg
(bad)
sub
lock
sub
aas
mov
scas
jne
pop
call
cwde
xchg
aam
mov
ss
sub
nop
out
pop
push
sbb
push
xor
sbb
(bad)
int3
xchg
xchg
neg
mov
daa
stc
xor
jno
sub
xor
xchg
pop
fcomp
js
(bad)
xlat
out
inc
scas
pop
outs
mov
les
psraw
fs
fwait
push
repz
add
in
clc
cdq
scas
stos
push
loope
jp
addr16
push
jo
sub
jb
mov
and
(bad)
mov
outs
xchg
cs
pop
mov
ds
inc
sub
xchg
xchg
mov
(bad)
cmp
xchg
popa
cwde
push
ins
punpckhbw
rcl
inc
hlt
cmp
push
enter
hlt
fs
fwait
out
stos
imul
es
push
retf
push
(bad)
mov
sbb
or
lods
shl
in
mov
mov
icebp
xchg
sub
ins
ficomp
dec
loop
ret
scas
stos
addr16
cli
mov
retf
in
in
pusha
lea
push
cs
push
shl
push
and
inc
mov
imul
mov
sub
mov
cmp
mov
shl
mov
inc
test
jb
stc
add
lahf
add
pop
jb
adc
(bad)
test
xor
cld
push
dec
sbb
pop
sti
(bad)
xor
cld
xchg
add
inc
pop
or
ss
loop
pusha
lods
sbb
shl
lods
sbb
push
xchg
repz
jg
jae
lds
sti
add
cmc
fs
push
cwde
scas
xor
mov
mov
(bad)
setnp
inc
in
inc
fiadd
sti
jg
jp
mov
ins
inc
test
retf
mov
adc
clc
cmp
leave
ds
in
scas
fidiv
jnp
push
outs
lock
inc
jnp
ss
out
dec
xchg
xlat
sahf
jg
ss
dec
fistp
pop
popa
cli
lods
pop
cmp
cmps
xor
mov
jbe
lods
sub
adc
lds
sub
add
dec
xchg
sahf
movs
jg
adc
in
jnp
cmc
add
mov
popf
jmp
jno
ret
cld
dec
pop
(bad)
xchg
sub
mov
jbe
pop
xor
das
mov
bound
xor
mov
scas
inc
mov
adc
nop
or
xor
imul
jle
jns
and
gs
dec
fstp
adc
xchg
inc
jns
js
inc
cmc
(bad)
out
pusha
imul
gs
xchg
pop
mov
lods
jecxz
sbb
loope
fwait
nop
adc
cmps
lock
mov
adc
sbb
mov
push
jmp
xchg
sbb
and
popa
ins
int3
cld
mov
popa
cmp
xchg
inc
xor
and
xor
mov
xlat
and
mov
mov
add
mov
push
(bad)
aas
in
xchg
sbb
mov
(bad)
call
rol
cmp
(bad)
jns
mov
xchg
mov
mov
sub
rol
push
sub
mov
clc
into
repnz
(bad)
rol
loopne
(bad)
data16
sar
mov
mov
push
mov
pop
pop
jle
pusha
repnz
fs
inc
ins
cmp
(bad)
mov
cld
in
pop
mov
fs
cmp
sbb
daa
call
pop
outs
xchg
clc
add
std
add
addr16
mov
and
mov
xchg
mov
add
mov
sub
(bad)
stos
push
(bad)
jle
repz
int
outs
enter
gs
lahf
mov
dec
jmp
cdq
test
aaa
mul
jb
inc
xor
pop
jmp
inc
xlat
lock
into
sub
adc
into
mov
ins
inc
fnsave
pop
jge
imul
xchg
mov
jo
cmp
push
sub
loope
repnz
inc
hlt
mov
pusha
imul
rol
in
(bad)
sbb
stos
adc
xchg
or
cmps
fmul
sahf
dec
dec
xor
js
inc
bound
test
sbb
into
aaa
(bad)
push
and
sub
imul
mov
aas
stc
arpl
xor
xchg
movs
xchg
sub
icebp
aaa
mov
mov
xor
jle
mov
xlat
sbb
pop
jg
(bad)
ss
mov
cmp
xchg
fadd
scas
fldcw
ins
push
shr
retf
adc
dec
pop
shr
jnp
fist
cmp
es
scas
imul
gs
cli
ins
mov
pop
into
test
adc
add
and
(bad)
sub
addr16
mov
mov
jnp
pop
or
jne
mov
mov
(bad)
jge
or
jnp
xor
mov
xor
or
fdivr
mov
(bad)
ja
in
pop
int
scas
jmp
cld
mov
inc
push
xchg
mov
retf
js
xchg
std
(bad)
push
and
add
pushf
cli
cdq
sub
aam
fwait
in
add
dec
nop
cli
bound
stos
and
scas
and
cmp
lods
xchg
mov
rol
fnsave
push
icebp
add
retf
ins
cmc
repnz
adc
inc
fcomi
push
lods
xchg
add
push
pop
cmp
jbe
sub
(bad)
mov
mov
pop
retf
call
add
cmp
inc
mov
pop
rcr
add
mov
iret
add
movs
mov
xchg
inc
jno
lds
shl
lods
mov
jle
add
push
loopne
push
xchg
pop
test
xchg
adc
je
inc
mov
lahf
pop
aas
retf
stos
jmp
cli
push
mov
shl
cmc
pop
out
call
sti
bound
loop
fs
push
push
jmp
cmp
or
add
fild
in
fidiv
int3
repz
and
xor
sub
pop
jnp
iret
push
push
push
xchg
dec
ror
sbb
sbb
in
sub
push
push
in
pushf
jle
into
fisttp
jnp
jnp
mov
fiadd
xlat
stc
ret
inc
inc
(bad)
add
adc
daa
push
dec
sbb
rcl
aas
(bad)
inc
sub
push
add
push
loop
push
adc
test
call
and
int3
sbb
dec
ins
push
or
xchg
jb
repz
pop
in
sbb
scas
adc
sbb
ds
jno
dec
adc
and
dec
popf
inc
repz
pop
cmp
push
push
or
stos
(bad)
mov
inc
enter
add
and
jnp
imul
push
dec
cld
xchg
fld
loope
cwde
ins
rdpmc
das
int
call
scas
pop
xlat
or
hlt
lods
scas
adc
sbb
ja
aad
mov
bound
inc
std
cmp
push
xchg
jl
retf
dec
sub
out
push
add
aaa
(bad)
jmp
push
sub
shl
lock
lds
and
xchg
icebp
sbb
stos
mov
shr
or
mov
fs
push
xchg
imul
jae
push
pop
into
aas
scas
xchg
(bad)
cmps
xor
lds
xchg
outs
xchg
rcl
out
jl
ror
adc
enter
scas
call
(bad)
mov
cmps
xor
movs
dec
iret
inc
pop
mov
pusha
lahf
jmp
stc
adc
enter
je
popa
call
push
push
xor
movs
data16
dec
dec
out
dec
sub
mov
ret
xor
cmp
stos
gs
mov
lods
fs
loope
or
mov
adc
outs
pop
loope
ss
sbb
jb
xor
xor
stc
jg
pop
push
add
mov
inc
pusha
cli
xor
(bad)
test
pop
jp
mov
mov
add
or
push
mul
daa
dec
hlt
cs
hlt
or
pop
mov
addr16
dec
dec
or
add
popf
sti
(bad)
jecxz
shl
adc
inc
push
push
cwde
(bad)
cmp
xor
test
in
adc
das
adc
xchg
xchg
dec
bound
sub
cmp
push
xchg
pop
sub
xor
xchg
cmp
mov
sub
xchg
mov
call
xchg
xor
adc
inc
cld
cld
inc
cld
je
xchg
pop
aam
js
add
stos
out
pusha
inc
mov
repnz
fdiv
sbb
retf
pop
mov
and
sbb
adc
pop
out
sub
(bad)
in
pop
aam
sub
xor
iret
dec
dec
xor
push
int3
inc
cmp
jbe
sub
ja
out
push
(bad)
cmp
repz
les
cs
xchg
and
mov
or
or
lods
lock
sub
xor
mov
xchg
(bad)
fisubr
pop
iret
mov
fistp
into
add
mov
loopne
mov
repz
push
jmp
or
aas
rcr
xor
xor
pcmpeqw
inc
cdq
and
mov
lea
popa
repnz
adc
sbb
enter
mov
loop
mov
or
mov
or
dec
int
cld
imul
add
adc
pop
or
mov
cmp
loopne
jl
push
scas
lods
test
loope
outs
rcpps
xchg
and
idiv
into
push
sbb
mov
test
clc
jnp
call
cdq
xchg
(bad)
sbb
stc
xchg
push
push
div
mov
test
fnstenv
je
jns
aad
inc
sub
jecxz
mov
rcl
iret
pop
loope
popa
dec
mov
fistp
ss
mov
imul
dec
pop
or
test
sbb
clc
and
mov
nop
mov
(bad)
fdivr
pop
or
cmp
pusha
ror
inc
jle
cmp
inc
xchg
xor
outs
rol
pop
popa
pop
iret
mov
lahf
mov
sbb
add
sbb
daa
mov
mov
adc
mov
es
es
fist
fcom
popa
inc
fs
shr
push
je
dec
cwde
xchg
(bad)
test
inc
jecxz
xor
fstp
cmp
or
fild
push
pusha
jb
shl
jmp
retf
xchg
sub
std
push
dec
movs
les
xchg
inc
das
(bad)
jge
ins
rcl
mov
add
(bad)
clc
test
mov
jmp
ss
and
mov
add
lods
rcl
lahf
out
movs
fwait
hlt
rcl
sbb
mov
fld
nop
lods
test
and
je
ror
imul
xchg
outs
mov
les
int3
mov
pop
arpl
sub
pop
jl
(bad)
mov
hlt
movs
and
adc
inc
pop
mov
(bad)
in
nop
add
push
push
test
movs
cli
sti
rcl
inc
int
cli
jo
add
pop
adc
pop
dec
add
or
inc
sub
xchg
lds
xchg
and
out
(bad)
sbb
fiadd
inc
inc
mov
adc
and
jmp
aad
and
test
or
gs
test
pop
and
sbb
imul
push
sahf
jge
cmp
dec
xor
dec
mov
cmp
lds
xchg
dec
add
(bad)
icebp
mov
pusha
mov
cwde
es
mov
enter
dec
pusha
ins
push
out
std
dec
push
jns
rcl
aam
xor
mov
into
daa
mov
mov
jo
add
ret
out
or
(bad)
adc
push
cmp
add
hlt
cmp
stos
ja
adc
arpl
pop
and
jecxz
sti
cmp
push
mov
mov
push
out
int
dec
add
ss
dec
setg
dec
pop
aam
and
mov
aam
xchg
push
jg
sub
xchg
mov
enter
loop
mov
inc
sub
mov
rol
lahf
addr16
cmps
sbb
lea
inc
cmp
idiv
pushf
fs
cmp
nop
mov
aaa
mov
adc
xor
les
sub
loop
or
pop
pop
js
xchg
inc
pushf
out
test
test
ror
xor
das
mov
call
jne
in
lds
and
sbb
pop
sar
mov
test
add
nop
xchg
inc
fisub
pop
movs
jp
cmp
cwde
call
xor
loop
into
push
inc
int3
clc
dec
or
arpl
and
outs
xchg
(bad)
mov
ret
test
inc
out
rol
sbb
fimul
pushf
and
xchg
and
xchg
and
and
mov
dec
adc
outs
mov
retf
add
sub
jge
inc
leave
xchg
mov
push
cmps
fs
sub
fcom
adc
pop
jae
mov
xor
rcr
push
or
add
aad
leave
sbb
xor
sti
mov
sar
push
das
js
and
mov
aam
sub
mov
pusha
mov
out
in
xor
pop
shr
jge
dec
daa
shl
popf
shr
mov
cld
pop
xchg
leave
push
pop
jecxz
int3
ins
(bad)
pop
aaa
jmp
imul
icebp
fldl2t
les
and
in
adc
ss
mov
nop
loopne
or
movs
cwde
(bad)
std
enter
icebp
inc
pushf
icebp
popa
and
xchg
and
stos
push
dec
rcr
iret
sbb
jne
sti
pop
repz
fiadd
imul
cdq
cs
inc
hlt
sbb
out
es
mov
cmp
adc
mov
xor
jge
pushf
xchg
stos
dec
les
inc
sbb
in
clc
or
inc
leave
adc
lods
jae
inc
jge
mov
dec
adc
push
sbb
int3
pop
jnp
and
outs
xchg
pusha
xor
imul
and
or
(bad)
fcmove
sub
mov
xchg
jne
cmc
pop
aam
or
jle
or
xchg
xor
adc
out
add
retf
jne
ret
pop
not
cmp
add
add
or
cdq
or
xchg
mov
mov
stc
fimul
outs
ins
retf
fdiv
and
and
lods
stos
imul
(bad)
int
in
or
sbb
cmp
pop
push
mov
add
test
sbb
pushf
and
scas
sahf
inc
jmp
stos
js
mov
jecxz
scas
inc
(bad)
in
retf
(bad)
push
cmc
retf
movs
push
retf
(bad)
lock
aas
add
sahf
les
jo
inc
dec
cdq
push
sbb
cmps
stos
jns
iret
jmp
test
dec
cmova
loop
add
loop
dec
out
scas
test
bound
in
sbb
push
pop
das
icebp
repnz
aam
(bad)
cmp
pop
pop
imul
and
enter
adc
or
aad
or
cmp
data16
jle
add
mov
ins
and
mov
das
mov
dec
call
xor
popf
jl
into
add
rcr
adc
mov
jae
pop
popa
popf
daa
test
imul
mov
pop
shl
test
nop
dec
mov
loopne
rcl
cmps
jg
aas
ss
imul
pusha
js
adc
mov
lods
cmc
sahf
clc
xor
les
sbb
lds
cli
xor
add
bnd
sub
addr16
xchg
sub
or
sub
shr
aam
cmps
lods
pusha
push
xchg
or
ret
repnz
test
sbb
pop
lea
out
imul
test
hlt
dec
popf
pop
xchg
mov
jmp
fmul
icebp
cld
sbb
inc
inc
push
ret
push
inc
cwde
neg
imul
inc
fcomp
mov
adc
mov
les
rep
adc
inc
test
mov
xor
xor
std
into
pop
jle
(bad)
icebp
js
add
mov
push
inc
sub
sub
push
leave
arpl
(bad)
ds
push
test
xor
and
and
mov
jecxz
pop
(bad)
inc
xchg
xor
sub
rol
fldenv
push
dec
out
sub
ins
test
inc
adc
int3
loope
popf
enter
out
add
push
add
push
(bad)
into
xchg
rol
xchg
or
mov
pop
out
cmp
xchg
push
mov
push
popf
outs
movs
das
mov
hlt
xor
out
imul
(bad)
sar
push
mov
or
and
xchg
stos
push
pop
aas
sub
sbb
push
mov
push
mov
mov
and
mov
add
pop
cld
loope
ret
mov
and
mov
mov
dec
or
mov
xor
or
xchg
dec
ins
push
push
(bad)
jae
and
mov
jmp
jmp
daa
sbb
inc
sub
push
loop
add
pop
(bad)
(bad)
movs
pop
lock
arpl
cmp
mov
aas
inc
mov
out
mov
cmc
jmp
mov
inc
pop
iret
dec
movs
aad
aam
lea
jnp
std
ss
mov
out
neg
mov
inc
mov
int3
icebp
stos
xchg
adc
adc
inc
sbb
or
jbe
in
sysexit
xchg
ret
pop
sub
out
jne
ret
rol
cmp
xchg
jns
ins
sar
adc
adc
and
enter
test
lea
cs
lea
ret
push
push
xchg
idiv
aaa
mov
and
push
out
in
sbb
inc
dec
cli
jb
push
xchg
jno
cmp
arpl
dec
push
xchg
and
imul
inc
(bad)
aaa
and
mov
cmp
test
xor
mov
mov
bound
jecxz
mov
enter
(bad)
int
sub
and
mov
xchg
push
jmp
dec
and
sbb
addr16
aam
dec
jl
pop
and
ror
loop
fstp
and
mov
jo
push
popa
test
mov
jns
xchg
and
sbb
inc
dec
shr
sub
fistp
mov
test
mov
push
lahf
inc
sbb
dec
(bad)
mov
jmp
and
jno
sbb
inc
(bad)
out
in
mov
xchg
mov
test
push
arpl
xor
or
pop
and
pushf
jg
xchg
pop
call
add
call
push
sub
clc
call
jl
clc
xchg
sub
jecxz
and
inc
aad
mov
add
retf
not
arpl
enter
push
pop
ds
dec
add
xchg
adc
jbe
int3
rcr
mov
jmp
out
lock
iret
mov
jbe
test
pop
push
xchg
fist
mov
leave
imul
stc
mov
ins
push
dec
push
jno
push
xchg
fisub
pop
add
aas
inc
adc
std
dec
popf
adc
cmc
fstp
xor
pop
add
mov
mov
jo
loopne
les
xor
adc
addr16
sub
xor
sbb
lods
inc
iret
out
jbe
mov
arpl
stos
cmp
lahf
pop
xchg
cmp
ret
cmps
push
add
sub
aad
test
push
mov
popa
or
bnd
sbb
je
call
loopne
and
fcomp
pop
mov
pop
arpl
mov
push
push
mov
jecxz
fwait
div
mov
sub
cld
fwait
shr
pop
dec
in
add
pop
and
jle
inc
les
fisttp
in
mov
dec
mov
pop
xchg
enter
gs
cmps
lods
sub
pushf
inc
retf
stos
lods
push
push
in
data16
push
mov
dec
sub
push
enter
sub
test
xor
lods
mov
add
push
mov
or
pop
imul
js
adc
add
int3
pop
pop
mov
sub
jle
ins
jo
dec
push
sbb
stc
and
aas
mov
mov
call
sub
cmps
dec
icebp
jge
stos
cmps
mov
and
push
div
add
xor
cwde
mov
mov
test
and
sub
ja
jg
xor
xchg
sbb
(bad)
imul
pop
sbb
pop
inc
adc
or
fcomp
lea
and
and
rol
add
inc
mov
adc
or
pushf
mov
push
push
gs
jp
xchg
push
daa
(bad)
popf
push
ds
push
xor
les
jg
and
push
sbb
and
neg
(bad)
pop
mov
or
mov
stos
pop
xor
xchg
dec
daa
cmp
xor
push
and
dec
div
and
pop
rol
jmp
test
rcr
push
mov
push
pop
and
lea
in
jg
cmp
mov
mov
scas
lea
stc
mov
popa
cdq
pop
iret
push
cli
pop
cmp
sti
and
push
idiv
inc
xchg
stos
addr16
jnp
sbb
ficomp
lock
jecxz
test
pop
jb
out
scas
out
js
mov
lds
call
mov
dec
push
push
cmps
xchg
xchg
(bad)
mov
sbb
mov
xor
repnz
sub
mov
shl
cmp
mov
das
cwde
jbe
jge
into
shr
jne
adc
mov
mov
pop
inc
call
(bad)
mov
pop
or
push
adc
(bad)
mov
jmp
dec
jbe
lods
sbb
and
ss
push
xchg
dec
inc
xchg
fwait
adc
enter
or
shr
nop
mov
iret
retf
add
sbb
std
fst
std
mov
in
int3
pushf
jbe
sub
jp
lods
pop
fcomp
test
mov
sti
mov
mov
sbb
dec
(bad)
retf
inc
or
dec
nop
jb
lods
mov
push
mov
sub
imul
daa
ret
(bad)
popa
adc
dec
push
mov
inc
jp
adc
jmp
aam
adc
stos
cmp
daa
sti
sub
add
inc
xchg
dec
arpl
xchg
mov
dec
sar
pushf
in
popf
ja
stos
or
mov
and
or
mov
scas
std
mov
dec
lahf
adc
mov
push
jmp
in
or
xchg
call
aaa
fild
push
xchg
adc
jge
jp
hlt
jp
mov
pop
push
sbb
add
pop
loopne
test
in
xchg
les
or
and
and
movs
ja
dec
(bad)
ud2
jge
xchg
xor
test
lea
cwde
sub
cmps
call
aas
xlat
fs
xor
pop
in
daa
cmps
add
pop
mov
(bad)
fwait
xchg
cmp
cwde
std
push
loopne
dec
and
dec
fcomp
add
lea
dec
dec
dec
cld
xchg
or
jb
sahf
push
mov
lea
mov
lods
sub
pop
fs
push
lock
sub
jl
(bad)
mov
rcr
(bad)
mov
mov
enter
pushf
mov
push
and
mov
cmc
and
rcl
pushf
loope
daa
iret
mov
(bad)
(bad)
xchg
jge
cmp
jae
mov
and
jbe
or
fucomip
std
int
cld
push
(bad)
cmps
xor
(bad)
enter
dec
jne
jb
add
mov
push
icebp
cs
test
sar
xor
cmp
push
and
mov
jne
leave
movs
inc
add
mov
rol
or
sbb
inc
pushf
push
or
dec
dec
lods
pop
adc
rol
mov
scas
dec
jb
dec
push
cwde
cmp
push
les
sub
push
mov
dec
mov
fnsave
out
fs
icebp
in
arpl
push
scas
mov
mov
loop
mov
push
push
pop
fst
adc
push
add
adc
cwde
je
xor
push
je
cmps
jno
out
das
sub
mov
inc
rol
test
loopne
repnz
arpl
shl
xor
not
pop
inc
mov
and
xchg
mov
pop
shl
xor
add
mov
inc
test
rol
cmp
sub
jge
dec
xor
and
jnp
pop
sbb
push
cmc
lahf
into
scas
ret
add
xor
loop
(bad)
ins
stos
cmps
into
shl
sub
add
sbb
pop
icebp
lods
push
scas
and
lahf
push
in
inc
rcr
scas
pop
push
out
sahf
in
mov
addr16
sbb
shl
sub
sbb
test
clc
test
xor
fidiv
cmc
outs
cmp
mov
call
pushf
xchg
adc
xor
fbstp
pop
ret
pop
ins
fsubr
push
jg
enter
retf
and
inc
mov
mov
cmps
sub
ret
push
adc
sbb
outs
push
outs
dec
ret
and
pop
fsubp
rcl
jbe
dec
cwde
cs
add
mov
ds
sbb
dec
test
out
(bad)
aas
call
test
loopne
aas
rcr
push
pop
xor
jnp
mov
mulps
ja
je
mov
push
sub
or
inc
retf
out
xchg
fcomp
cmc
jo
ins
popf
mov
dec
push
fwait
test
rol
mov
and
lock
push
les
pop
cwde
mov
(bad)
mov
ret
out
es
in
ds
xchg
je
jge
or
dec
les
pop
mov
nop
inc
pop
leave
les
push
retf
(bad)
out
cmp
mov
add
push
add
fsub
repz
lods
jno
call
jns
dec
popa
mov
daa
mov
cmc
mov
pop
push
loopne
mov
icebp
sbb
adc
xchg
xchg
xor
(bad)
xor
add
cli
icebp
jmp
xchg
cs
adc
in
or
fst
pop
stos
sub
push
shl
scas
lds
aam
inc
test
cs
fs
mov
mov
in
sub
xchg
xchg
add
adc
pop
stos
in
in
lahf
adc
jl
jge
cmps
inc
fwait
add
outs
popa
push
push
bound
and
js
test
push
dec
sahf
loop
sbb
xchg
stc
xchg
test
mov
movs
(bad)
cmp
mul
xchg
push
pusha
push
fstp
cwde
cmp
rcl
xor
(bad)
ins
lods
ret
stos
jg
cmp
mov
mov
adc
push
mov
and
mov
jo
sbb
test
mov
dec
push
mov
mov
push
pop
dec
cmps
inc
adc
push
repnz
sbb
and
sar
das
jae
inc
retf
mov
fdiv
sub
call
ins
pop
or
jecxz
fisubr
dec
add
ficom
jns
cmp
dec
push
out
frstor
ja
jle
int
int
daa
xor
fcomp
clc
data16
mov
sbb
push
jbe
mov
lock
pop
jb
sahf
push
mov
test
push
inc
scas
dec
sub
out
iret
rcl
mov
ins
std
cmp
cmp
scas
push
fisttp
fmul
dec
add
test
add
cmp
shl
xor
and
inc
out
and
retf
mov
add
xor
adc
int
cdq
push
ds
xchg
test
ins
loop
or
icebp
jno
jns
pand
or
fcomi
mov
pop
inc
clc
ficom
sti
lods
sbb
in
mov
xchg
or
sti
cmp
dec
jno
add
jp
dec
dec
mov
sub
in
xor
ret
test
repnz
out
outs
icebp
or
ds
ins
(bad)
cdq
mov
stc
adc
int
inc
js
push
xchg
push
mov
repz
jno
mov
add
jae
mov
dec
sub
pop
loopne
addr16
pop
shl
mov
push
cmp
enter
inc
imul
pusha
ins
aas
cmc
push
wbinvd
jge
loope
cmps
xor
loop
cwde
push
cmp
ror
push
cmp
mov
xchg
sub
fcmovne
inc
xor
inc
xchg
add
and
or
pushf
hlt
jb
adc
push
and
xchg
add
std
xor
push
and
push
jle
aaa
adc
in
in
sub
dec
jl
and
bswap
jp
mov
add
cld
test
xchg
sub
or
push
push
mov
repnz
sahf
shl
ss
je
hlt
dec
push
fabs
mov
pop
mov
add
out
inc
test
or
xchg
fcmovu
dec
movs
adc
aad
pop
xchg
and
sub
push
in
pop
mov
repz
inc
mov
cmp
sub
in
dec
and
xchg
data16
out
movs
cmc
adc
pop
sbb
out
pop
jp
(bad)
aam
je
ds
sbb
push
pop
xchg
(bad)
sub
push
xchg
add
pop
push
xor
add
jbe
pusha
add
stos
xor
(bad)
sbb
add
cmp
mov
sub
sub
and
and
ins
inc
inc
push
sbb
jne
or
adc
jo
adc
dec
rol
sub
mov
mov
rcr
mov
stos
lea
loopne
data16
xchg
or
leave
fcomp
jo
jns
adc
adc
lahf
mov
lea
es
jo
mov
pop
loopne
mov
add
dec
pop
pop
push
movs
cdq
and
test
jmp
mov
das
out
fs
(bad)
jno
push
call
inc
and
(bad)
shl
pop
leave
mov
out
adc
cld
scas
sub
add
mov
sbb
int3
arpl
imul
jl
(bad)
lea
mov
sub
(bad)
mov
xlat
(bad)
and
adc
and
xchg
test
mov
inc
gs
sub
sar
mov
ja
in
out
in
adc
test
or
mov
iret
mov
mov
mov
cli
in
pop
xchg
out
adc
out
stos
cmp
cmp
imul
jl
pop
jo
mov
pop
dec
je
xor
and
push
cdq
sbb
mov
jnp
or
jg
fistp
outs
loope
(bad)
fs
inc
aas
packuswb
iret
fnstcw
mov
out
std
in
or
scas
push
jg
mov
sbb
out
outs
popf
mov
jp
fwait
jecxz
cdq
mov
push
mov
jp
(bad)
xlat
pop
xor
in
fbld
sti
jo
xor
jae
in
jnp
mov
fwait
xor
aaa
mov
ins
popf
lock
idiv
jle
fcomp
xor
cmp
into
jmp
mov
rcr
sub
(bad)
jnp
or
fisub
mov
jb
inc
in
mov
jnp
ror
jbe
cmp
pop
sub
cmp
inc
scas
push
mov
jl
push
repz
cmp
xor
fldpi
lds
pushf
out
jne
xlat
jl
fcmove
cdq
jne
pop
mov
mov
cmp
ins
jp
enter
out
(bad)
mov
inc
aam
sar
repz
aas
inc
or
jle
out
das
jle
in
jns
loopne
(bad)
outs
enter
(bad)
fsubr
xlat
jae
popf
jnp
jp
cli
cmps
pop
or
enter
pmaxsw
stos
cdq
aad
in
pop
cmc
pop
ins
xchg
inc
fdivr
outs
sub
sub
xchg
aas
call
cmps
jp
js
jle
pop
or
(bad)
neg
mov
xchg
fisttp
or
test
dec
mov
cmp
pop
jmp
xchg
or
pop
mov
in
(bad)
cld
fidivr
ds
daa
mov
inc
out
add
or
mov
jg
out
jecxz
mov
mov
movs
iret
test
add
push
jne
pmaddwd
inc
mov
(bad)
jnp
mov
ins
jmp
fstp
cld
outs
and
dec
fisubr
in
jmp
out
pop
int3
fisub
jno
cld
add
fst
inc
or
and
into
retf
cmc
loopne
out
call
mov
xor
out
es
out
fadd
fstp
mov
mov
add
mov
mov
(bad)
idiv
cwde
xor
pop
cmp
inc
loop
mov
ins
fwait
sub
test
cmp
mov
jl
fadd
lahf
inc
stos
sbb
cmp
popf
jne
and
rcr
mov
xchg
into
das
mov
and
push
jnp
mov
push
pop
(bad)
retf
xlat
enter
mov
jbe
es
popa
xor
in
std
dec
outs
adc
(bad)
call
ja
movs
ins
lahf
in
or
sbb
and
in
mov
(bad)
pop
and
adc
retf
pop
in
adc
pop
nop
push
enter
push
jl
xchg
jne
ins
and
mov
imul
mov
sub
loope
dec
in
xor
adc
push
shr
std
repz
pop
or
xor
test
mov
or
je
mov
lds
mov
mov
push
add
cmp
mov
addr16
lds
enter
outs
fwait
mov
loopne
and
out
hlt
cmp
cmp
push
push
xor
pop
push
das
fstp
daa
sub
ror
mov
scas
fs
(bad)
inc
or
mov
push
sbb
std
jno
cmp
scas
mov
(bad)
das
xor
cmc
push
cli
cmp
out
ja
scas
pop
aaa
nop
scas
cmp
sahf
loopne
jmp
mov
sbb
mov
pop
xor
mov
repz
sbb
jne
mov
jb
popf
pop
jae
mov
xlat
retf
pusha
adc
adc
les
inc
push
imul
(bad)
(bad)
jb
mov
ja
inc
leave
mov
rol
les
arpl
(bad)
mov
mov
bound
aaa
jp
mov
pop
and
cmp
(bad)
in
push
mov
nop
sbb
in
adc
ja
js
mov
jnp
btr
out
cdq
scas
dec
xor
fwait
or
sub
xchg
cli
cmp
daa
pop
out
push
scas
pop
sub
mov
pop
lds
loop
popf
cli
retf
das
cmp
add
pop
mov
pusha
and
inc
pop
or
cmp
cli
lea
jae
mov
jle
ins
cmps
pop
rol
les
jno
gs
xchg
jnp
xlat
or
sbb
add
sub
dec
push
repnz
aas
mov
jp
xor
cmps
test
cmp
push
and
push
mov
sahf
aam
jae
mov
(bad)
fwait
cmp
sub
cmp
popa
scas
addr16
cmc
addr16
ss
push
cmp
imul
xlat
clc
jmp
mov
mov
and
sub
in
pop
cld
mov
int3
cwde
xchg
mov
dec
fdiv
icebp
xchg
in
sbb
lds
jnp
pop
or
xor
xchg
pop
jecxz
pop
or
gs
ror
and
xchg
add
pop
fld
dec
mul
btr
ret
fwait
mov
scas
dec
dec
or
scas
adc
leave
adc
cmp
xor
frstor
lds
mov
cmp
push
cdq
in
push
rcl
rcr
(bad)
sub
xlat
inc
xchg
push
xor
jmp
scas
(bad)
dec
mov
ja
in
sbb
add
adc
ss
mov
jns
fs
popf
dec
jl
add
gs
pop
sahf
jae
imul
add
jno
xchg
sub
inc
sbb
pop
cmp
cmc
loopne
xchg
mov
push
xchg
sar
sbb
push
out
mov
loope
movs
mov
cmps
push
(bad)
push
call
test
pop
fist
or
and
ror
mov
jae
out
inc
mov
xchg
outs
cmp
inc
xchg
fs
or
cli
sub
xchg
popa
out
cmp
xchg
sbb
push
hlt
mov
inc
cmp
in
outs
push
cmp
popf
int3
leave
int
cmps
sub
popf
leave
pop
setns
cld
jmp
sub
mov
xchg
arpl
dec
sbb
scas
xchg
fnstenv
repnz
imul
sbb
inc
fldz
xchg
cwde
out
xchg
popf
xchg
sbb
test
inc
dec
dec
lahf
sub
push
int3
xchg
jae
rcl
jb
ret
es
and
popf
cld
iret
sbb
mov
dec
dec
push
ds
mov
cs
pop
dec
add
shl
ds
sbb
jmp
mov
(bad)
mov
fnstenv
adc
mov
or
repnz
scas
ficom
sbb
inc
xor
xchg
sub
xchg
add
push
xchg
lds
inc
lods
int3
popa
aaa
inc
pop
fst
xor
cmp
test
sar
inc
retf
movs
mov
cwde
xchg
dec
pop
sub
jmp
pop
lds
jl
outs
mov
je
in
pop
ja
call
daa
stc
cmp
sahf
jmp
nop
xor
or
mov
cmps
lods
gs
outs
or
mov
mov
das
outs
leave
pop
sbb
(bad)
push
ret
xor
es
neg
or
jge
mov
jns
sub
xchg
sub
mov
fidivr
push
retf
test
mov
int3
ret
punpcklbw
std
je
dec
jecxz
jns
mov
cwde
imul
xor
adc
sub
xchg
mov
scas
mov
mov
inc
neg
push
push
jnp
aad
or
popa
adc
xor
pop
data16
mov
mov
push
(bad)
push
int
cs
repz
in
imul
and
ja
in
(bad)
pop
jmp
enter
inc
(bad)
js
mov
outs
sbb
out
xlat
xchg
dec
sbb
sbb
(bad)
mov
or
and
fcomp
imul
imul
call
dec
pop
mov
ret
imul
mov
pop
lahf
test
dec
xor
iret
call
and
cld
int3
out
rol
retf
loop
mov
hlt
(bad)
in
out
and
pop
lock
mov
les
adc
test
std
fwait
jecxz
pop
mov
xchg
mov
xchg
xchg
int3
cli
jbe
xchg
retf
pop
dec
adc
sbb
popa
sub
iret
inc
(bad)
dec
pop
enter
fsubrp
ins
cmps
xor
shr
mov
jbe
cdq
xchg
xor
aaa
addr16
sar
sbb
pop
test
aas
repnz
sbb
mov
(bad)
mov
(bad)
into
cmc
inc
push
fisttp
xchg
stc
sub
dec
(bad)
adc
mov
mov
jno
jo
div
into
es
push
add
pop
fwait
addr16
fwait
push
jmp
xor
out
ins
xchg
mov
shl
mov
add
cmp
sbb
sub
jmp
dec
fldenv
cdq
inc
mov
nop
ret
call
jno
mov
adc
outs
push
add
cs
jno
inc
sbb
(bad)
cwde
jmp
xor
rcr
sbb
call
fbstp
mov
fistp
sub
rol
fwait
cld
cmp
sbb
fs
pop
xor
stos
mov
retf
mov
jns
adc
pop
inc
clc
cmps
push
pop
icebp
push
jmp
push
les
cwde
adc
scas
hlt
bound
lods
(bad)
cmp
inc
mov
xchg
and
rol
mov
mul
mov
push
cmp
and
and
xor
sub
into
cdq
je
push
jp
fs
add
xlat
shr
popa
jno
div
dec
mov
sub
and
je
push
or
adc
inc
mov
movs
lds
mov
push
mov
test
nop
mov
jne
fmul
retf
int
push
mov
mov
loop
test
dec
jae
add
out
xor
repnz
cld
or
xchg
cdq
mov
leave
jg
or
mov
gs
cld
std
mov
dec
pop
and
push
dec
push
push
das
ins
adc
bound
pop
movs
xchg
push
daa
out
push
push
aad
imul
push
mov
xchg
dec
sahf
or
push
bound
jecxz
scas
pop
shl
(bad)
adc
or
les
icebp
add
mov
iret
cs
in
mov
sti
shl
frstor
sub
cmp
sbb
int3
jmp
repnz
or
pop
loop
lahf
int3
daa
adc
cmp
push
scas
xchg
push
dec
mov
div
inc
mov
mov
(bad)
outs
scas
out
or
xor
xchg
je
out
xchg
cwde
in
xor
jne
outs
xchg
ret
sbb
pop
outs
aaa
nop
cli
in
ins
jae
sbb
sub
fimul
movs
out
xchg
xchg
int3
sbb
(bad)
aam
mov
push
outs
retf
push
push
shr
jo
sar
jae
inc
jmp
adc
xchg
or
push
mov
xchg
mov
mov
or
repz
mov
mul
adc
enter
rcl
inc
retf
ja
in
mov
int
cs
iret
test
mov
iret
dec
dec
xor
jmp
pushf
mov
mov
mov
sub
shl
and
retf
push
mov
test
push
push
pop
(bad)
push
mov
imul
jle
xchg
fwait
aam
cmp
int
push
out
push
int3
sbb
or
daa
ss
stc
outs
movs
jg
(bad)
dec
pop
mov
and
push
dec
add
pop
ret
ror
mov
stc
jb
pop
fisttp
pop
sbb
imul
jae
ret
gs
ret
mov
sub
sub
mov
shl
xchg
and
test
loop
das
ins
fld
frstor
es
pop
sbb
sub
add
loopne
sbb
scas
nop
mov
jae
push
or
xchg
pop
add
sub
mov
and
xor
stos
or
retf
pop
mov
out
sbb
push
cmc
push
(bad)
cmp
inc
mov
loope
mov
xchg
test
add
ins
loope
icebp
into
adc
outs
sar
aad
enter
xchg
mov
and
addr16
scas
cmps
popf
xchg
mov
and
xor
or
xchg
into
pop
arpl
fidiv
rol
(bad)
sbb
(bad)
cmps
dec
push
inc
mov
les
inc
lahf
imul
and
ss
mov
and
pop
fiadd
dec
test
and
ficom
int
sub
ds
and
scas
loope
inc
or
and
jne
cmovle
call
adc
push
(bad)
jecxz
outs
test
shr
pusha
hlt
shr
popf
push
cmp
(bad)
outs
cmp
pop
repz
rcr
aaa
gs
mov
xchg
(bad)
push
jae
mov
loop
stc
inc
sbb
cmp
mov
repz
mov
addr16
ins
lods
test
mov
inc
and
test
dec
arpl
cld
xlat
lock
xchg
adc
jle
mov
push
push
xchg
xor
pop
inc
dec
mov
push
inc
mov
push
je
call
cmp
xchg
push
dec
adc
inc
movs
jge
idiv
jp
arpl
int
and
or
into
stos
repnz
clc
mov
in
push
cmp
cmp
(bad)
and
iret
cmps
and
movs
scas
pop
sbb
xchg
mov
mov
stos
cmc
push
cmp
les
xor
and
cmovp
cdq
out
dec
adc
rcl
ins
movs
enter
mov
retf
adc
push
mov
fsubr
mov
sbb
addr16
cmp
loop
xchg
int3
imul
mov
add
sub
dec
mov
xchg
pop
and
xor
fst
repnz
or
mov
dec
or
ret
fstp
jno
fcom
add
pop
jge
sbb
dec
dec
jo
sti
retf
in
and
xchg
fnstsw
and
mov
stos
push
sub
dec
stos
ret
sub
cmps
dec
mov
shl
(bad)
xchg
xor
and
sbb
in
xchg
neg
fadd
inc
sub
sbb
or
push
and
fs
leave
das
sbb
and
sub
or
or
imul
call
stos
(bad)
mov
fimul
aaa
and
icebp
stos
dec
xor
cmps
sub
test
dec
mov
fiadd
ins
mov
mov
mov
push
cmp
fsub
xor
push
int
xchg
retf
inc
push
jge
mov
pop
mov
hlt
(bad)
push
pop
retf
aad
xor
sub
lock
mov
leave
cs
mov
push
push
mov
cmps
retf
dec
xchg
fldl2t
cmc
sahf
push
fist
jnp
popf
mov
adc
cmp
xor
mov
push
jp
daa
loope
jns
pop
mov
dec
xchg
push
pop
and
adc
mov
jo
xchg
xchg
test
cs
shl
mov
push
call
and
sub
jecxz
pusha
push
in
cmp
inc
adc
bound
dec
popa
test
mov
test
inc
bound
push
mov
mov
daa
(bad)
jnp
and
das
test
mov
dec
ds
adc
inc
jae
mov
fs
loope
(bad)
mov
mov
sbb
jl
sub
jmp
lock
out
stos
enter
push
fistp
jbe
(bad)
push
mov
jp
add
sub
mov
and
int3
dec
dec
dec
and
inc
loop
inc
call
cmp
fcmovb
(bad)
clc
in
(bad)
sbb
adc
sub
sub
or
sub
push
fsubr
sub
sbb
std
gs
xchg
adc
add
mov
push
push
ja
aad
and
adc
fs
mov
jmp
mov
adc
aaa
lods
add
repnz
pop
jo
int3
mov
fs
xor
xchg
adc
jmp
push
cmp
adc
adc
retf
mov
mov
mov
cmp
and
mov
push
jno
sahf
or
imul
xchg
and
into
jne
cdq
es
imul
pop
retf
into
xor
es
call
mov
adc
call
xchg
loop
cmp
test
outs
mov
mul
sbb
aaa
inc
push
adc
es
and
ret
and
push
cwde
imul
or
cdq
push
movs
aam
xchg
cmp
dec
mov
mov
clc
(bad)
fcomp
jle
sbb
pop
jp
xor
je
call
sbb
xor
dec
jno
rcl
add
jle
dec
pop
jne
enter
sbb
leave
adc
cld
pop
pushf
mov
fcom
dec
mov
or
stos
pop
pop
or
jl
mov
inc
xchg
xor
mov
adc
pop
cmp
gs
daa
daa
cmp
add
or
mov
xchg
or
mov
jb
xchg
or
xchg
mov
pop
add
inc
mov
inc
aas
rcl
movs
out
outs
adc
jnp
xchg
cmp
call
dec
stos
push
jl
dec
pop
int3
pop
xchg
or
sub
mov
xchg
daa
xor
xchg
cli
and
adc
pushfw
scas
into
retf
xor
dec
ret
in
fisttp
push
test
movs
cli
or
cmc
add
adc
push
jo
jg
stos
or
nop
lock
push
mov
xchg
enter
arpl
imul
mov
ss
out
outs
jl
sti
ror
sbb
xor
inc
dec
std
lahf
pushf
jae
mov
cmps
jmp
cmp
pop
in
mov
dec
arpl
in
into
loop
mov
mov
test
pusha
push
retf
int
fwait
in
(bad)
iret
push
es
jbe
push
fdiv
sub
aas
adc
mov
in
shl
out
ja
sub
addr16
rcl
arpl
shl
mov
sub
test
ss
or
jnp
mov
lock
mov
pop
mov
cmp
dec
mov
cmp
mov
pop
leave
sbb
inc
mov
fadd
sub
inc
pop
or
inc
mov
xchg
mov
es
fnstcw
xchg
xchg
in
ins
mov
nop
xor
inc
mov
repnz
xor
ja
and
ins
add
cmp
cdq
es
xor
mov
sub
inc
xchg
xor
call
cmp
inc
push
xor
push
mov
push
xchg
out
pop
lods
push
jbe
hlt
sub
jb
out
adc
inc
out
sbb
sahf
sbb
push
mov
and
mov
xor
dec
dec
xor
ret
fwait
rcl
iret
sub
cmp
aas
out
inc
xor
retf
stos
jge
or
test
shr
in
mov
sub
xchg
(bad)
repnz
repnz
adc
push
sbb
cmps
pop
sbb
cmp
xor
stos
mov
js
movs
xchg
adc
adc
add
add
add
fadd
jmp
pushf
push
loope
push
cmp
jmp
and
pop
(bad)
inc
sub
cmp
shr
je
sub
data16
retf
push
jecxz
or
or
(bad)
(bad)
ret
fs
shl
mov
jmp
aaa
pop
inc
movs
mov
mov
add
ja
jmp
je
pop
sahf
les
or
pop
in
push
sbb
shl
push
fisubr
mov
test
inc
fwait
xchg
jae
add
and
inc
lods
clc
add
nop
xor
inc
adc
stos
xor
inc
xor
push
mov
(bad)
fdiv
pop
dec
cmp
push
cdq
pusha
retf
add
lods
es
and
inc
pop
icebp
mov
push
sub
jo
or
sbb
int
xchg
loopne
sub
inc
mov
aas
jmp
dec
adc
lds
and
rcl
xchg
push
(bad)
leave
mov
add
and
in
(bad)
imul
xor
stc
mov
test
in
dec
aad
jl
xor
xor
in
int3
inc
add
out
xchg
cmp
aam
jmp
jg
das
adc
scas
push
xchg
inc
test
imul
mov
add
(bad)
out
pop
mov
sub
adc
xor
jmp
aad
push
inc
push
scas
pop
rol
sub
adc
jae
add
pop
in
mov
(bad)
pop
or
pop
(bad)
mov
xchg
(bad)
iret
jp
(bad)
fld
cmp
test
sub
xchg
ret
push
mov
xor
cdq
test
fldcw
pop
out
cmp
ins
call
xlat
sub
loop
arpl
jecxz
out
add
xor
fwait
(bad)
cmp
mov
mov
inc
xor
jno
les
sub
push
xor
mov
mov
sub
sub
xchg
jg
push
aam
adc
je
pop
pop
sub
stos
das
or
cli
xchg
sbb
cmp
outs
jecxz
mov
xor
(bad)
ret
jecxz
sub
dec
inc
ins
js
xchg
mov
mov
dec
pusha
sub
xor
scas
and
mov
push
push
popf
bound
or
(bad)
(bad)
mov
movs
sbb
and
adc
cmp
inc
test
shl
adc
inc
ins
mov
jo
scas
outs
and
icebp
jbe
sub
inc
mov
xchg
ret
mov
and
(bad)
fsub
jmp
inc
push
xacquire
pop
outs
push
loope
lods
adc
dec
test
(bad)
cmp
ss
gs
stos
xchg
ror
not
push
push
aad
stc
inc
add
xor
pop
and
push
sub
pusha
sub
mov
jmp
aaa
or
mov
in
add
adc
movs
xor
adc
or
mov
gs
les
inc
xchg
fisubr
rcl
xor
ss
mov
mov
mov
pop
call
mov
popf
movs
mov
aad
ins
ret
in
gs
push
add
sahf
std
mov
(bad)
mov
pop
sub
mov
jge
into
sbb
mov
mov
mov
dec
mov
jecxz
xlat
jmp
ins
xchg
nop
adc
mov
aaa
dec
and
dec
ss
xchg
rcr
jb
test
mov
test
lock
pop
leave
(bad)
outs
inc
ss
mov
xor
pop
nop
inc
ds
add
inc
mov
mov
push
lea
mov
adc
(bad)
or
push
fsub
jmp
ins
or
ds
cdq
bound
xlat
test
adc
stos
or
jns
aad
xchg
dec
sub
mov
fwait
push
loopne
adc
fwait
and
stc
jo
push
mov
dec
jle
in
push
hlt
add
jno
ss
mov
scas
retf
fiadd
push
in
push
sbb
and
retf
sbb
stos
lea
pop
xchg
or
lods
(bad)
push
mov
jp
jae
pop
xor
mov
gs
fiadd
pop
sub
mov
loope
fst
fnsave
xor
(bad)
in
loopne
push
xchg
sahf
xchg
mov
pop
cdq
sub
shl
fld
fiadd
retf
dec
out
sub
lea
retf
mov
mov
inc
fdivr
les
in
pop
inc
xor
and
jmp
jb
mov
jmp
test
pusha
fnstcw
sbb
sub
repnz
bound
mov
sar
inc
jb
xor
jno
jae
int3
mov
dec
imul
ins
mov
pop
sub
inc
popa
sub
add
sbb
adc
xchg
add
adc
call
xor
push
sbb
call
aam
mov
cmp
cmp
dec
push
xor
sub
jmp
neg
lahf
mov
mov
adc
sar
sbb
add
jmp
pop
stos
jns
test
jns
mov
cmps
and
ins
push
gs
dec
bound
push
int3
pop
stos
or
fnstcw
adc
adc
fbld
cs
or
sbb
test
mov
ins
inc
or
(bad)
pop
mov
sub
mov
out
and
mov
push
mov
or
sub
hlt
cmc
cmps
ficomp
out
push
xchg
call
push
loopne
leave
jno
inc
dec
clc
push
push
out
cmps
out
and
dec
cmp
pop
or
aam
mov
mov
jno
cmp
dec
inc
add
and
lods
xor
mov
push
jmp
data16
fdivp
xor
or
jg
es
int3
mov
mov
imul
cdq
sub
add
stos
in
sahf
lods
and
out
inc
hlt
aam
or
cdq
push
das
shl
mov
shr
shl
pop
int3
mov
jb
data16
(bad)
and
push
mov
imul
cmp
repnz
mov
movs
and
sub
mov
js
dec
pop
mov
cmps
xor
je
lods
dec
mov
and
inc
adc
cmp
cld
shl
div
shl
bound
retf
nop
pop
sub
adc
fistp
cmc
mov
cmp
mov
adc
xor
stos
push
push
push
fcmovnbe
fs
ins
push
test
test
or
in
aas
(bad)
in
rcl
push
dec
(bad)
jb
(bad)
in
movs
push
mov
in
ret
ret
fisttp
js
sbb
add
jecxz
sbb
int
sti
fisubr
jp
arpl
sub
sbb
mov
not
rcr
sbb
mov
xor
sahf
out
dec
add
push
xchg
push
shr
cli
stos
aad
cmp
movs
je
test
aas
pusha
add
lea
repz
xchg
xchg
mov
mov
imul
adc
mov
mov
inc
xor
pop
rep
in
mov
mov
pop
push
push
cdq
dec
cmps
retf
data16
pop
pushf
mov
sub
and
hlt
or
movs
movs
stos
dec
inc
in
or
outs
mov
inc
mov
rol
sub
loopne
or
add
push
or
jmp
std
clc
adc
push
js
sub
mov
xchg
add
add
xor
rcr
dec
in
dec
sub
xchg
cmc
inc
movs
int3
dec
hlt
mov
mov
xor
or
jno
mov
sbb
inc
icebp
cmc
jmp
ins
add
inc
cli
in
or
leave
xor
push
push
adc
add
xchg
adc
cmp
je
sbb
inc
nop
xchg
inc
mov
das
jo
or
mov
and
sbb
and
add
addr16
lahf
sub
inc
nop
test
inc
xchg
mov
dec
sub
je
fcmovnb
pop
cmps
cs
xchg
pop
cmp
mov
jl
stos
sub
jb
adc
push
mov
adc
sti
retf
pop
mov
test
test
stos
mov
and
inc
xor
(bad)
jg
rcr
sub
xchg
add
dec
mov
cmps
inc
jge
mov
rol
out
cs
outs
les
scas
adc
sbb
or
add
dec
cdq
scas
mov
daa
push
test
mov
inc
call
xor
or
adc
lods
dec
das
sub
xor
imul
jb
or
pop
inc
out
leave
xchg
cmp
jnp
or
xchg
ins
cmp
(bad)
ins
xchg
jbe
stos
mov
cmp
dec
ret
fiadd
xchg
xchg
add
fdivr
loope
inc
add
dec
sub
pop
sub
mov
movs
push
fwait
dec
mov
gs
cmps
fisttp
mov
dec
dec
dec
dec
add
out
dec
lea
inc
mov
ja
mov
imul
xchg
jae
ins
cdq
mov
and
xor
sub
or
mov
mov
(bad)
or
cwde
sbb
cmc
dec
popf
inc
std
xchg
push
jno
pop
mov
sbb
jmp
adc
sub
mov
or
sub
jge
xchg
(bad)
in
add
ja
cld
pusha
xchg
test
fstp
cmp
loopne
test
xchg
int
imul
or
arpl
loope
dec
mov
sbb
adc
mov
daa
ins
in
jmp
stos
pop
cmp
sbb
push
and
test
xchg
xor
jbe
adc
sub
pop
popf
mov
sbb
xchg
add
dec
outs
sbb
cmp
dec
adc
mov
sub
out
mov
jmp
arpl
cmp
inc
xchg
mov
jb
or
push
call
sub
pusha
cmp
scas
inc
adc
es
test
adc
mov
lds
or
mov
out
sar
stos
sbb
punpckhbw
jmp
xchg
mov
add
dec
push
push
sbb
lea
xchg
xchg
inc
sbb
mov
nop
in
sub
aas
mov
inc
nop
cmp
lds
sub
repnz
sti
mov
ror
mov
push
or
mov
lods
aam
mov
jnp
jne
xlat
adc
add
sub
out
inc
mov
xor
mov
and
neg
sub
xchg
gs
inc
and
shl
jl
mov
pop
and
arpl
xor
sbb
xchg
int3
out
adc
push
mov
and
jnp
imul
sbb
add
sbb
bound
push
or
dec
mov
sub
adc
ror
mov
adc
jmp
cmp
popa
sbb
pop
in
in
pop
popa
mov
xchg
inc
push
call
jecxz
(bad)
lods
inc
arpl
adc
aas
sbb
loope
mov
or
lods
bound
movs
lock
cmp
dec
into
dec
je
xchg
adc
das
adc
mov
add
xchg
fist
shld
int
outs
dec
adc
lds
mov
sub
jnp
out
and
mov
es
jecxz
push
in
rcl
push
cmp
imul
push
sahf
jp
imul
aaa
mov
adc
push
stc
rol
jmp
into
adc
out
push
les
push
outs
push
sub
es
push
mov
fadd
pop
js
add
and
sub
jo
ss
sahf
mov
bound
jp
mov
mov
retf
lods
sahf
add
push
and
mov
sub
into
xchg
dec
cmp
dec
ins
pop
jns
pop
fnstenv
sbb
fiadd
inc
mov
and
outs
fsubr
pushf
clc
add
jne
xchg
or
push
cmp
mov
test
xchg
push
dec
idiv
mov
xor
sub
add
daa
add
addr16
daa
pop
inc
repz
cmp
sahf
push
inc
les
adc
jae
jns
rol
pop
push
leave
jge
(bad)
mov
pop
fcomp
push
sub
addr16
sub
ret
sub
mov
push
push
dec
fnsave
mov
cwde
pushf
bound
aam
adc
dec
cs
push
out
mov
adc
mov
arpl
js
mov
push
aaa
inc
pop
sub
mov
popa
call
push
and
add
in
js
sbb
lock
lock
add
imul
fcom
dec
sub
out
mov
fsubr
xchg
retf
call
pop
stc
movs
in
push
movs
cmp
stos
add
pop
add
hlt
cmp
movs
sbb
pop
jecxz
cmp
out
sbb
stos
mov
add
sub
sar
sbb
jecxz
sbb
fs
sbb
jne
adc
add
inc
adc
mov
push
xor
sbb
stos
test
loopne
xor
jae
sub
and
mov
js
inc
mov
inc
xchg
sub
repz
adc
ficom
test
cmp
jmp
xchg
cwde
cmps
pop
mov
dec
out
dec
pop
inc
(bad)
and
pop
push
loop
sub
loope
dec
or
in
mov
fxam
pop
mov
test
sbb
ins
xchg
lock
retf
xchg
dec
add
ret
and
cmp
pop
loope
push
fs
adc
dec
mov
nop
adc
in
xlat
(bad)
fs
int
mov
ret
add
ja
sti
mov
pushf
pop
xor
test
push
sbb
leave
and
adc
sbb
cmp
or
mov
push
push
fs
lods
mov
sbb
mov
sbb
xor
test
cmp
lock
pop
retf
inc
inc
mov
mov
xor
test
iret
xor
fucom
pop
enter
mov
push
mov
retf
sub
dec
bound
fnstcw
lds
jns
mov
out
mov
add
dec
jmp
scas
sbb
popf
xchg
rcl
cs
pop
push
sbb
adc
nop
daa
xchg
add
adc
jb
push
sub
sub
adc
and
sbb
enter
sahf
mov
test
cli
hlt
cmp
mov
out
sbb
sub
add
fcmovbe
call
repz
div
add
sub
leave
out
ja
xor
cmps
cdq
push
arpl
enter
ret
adc
push
enter
aad
popa
(bad)
in
mov
xchg
(bad)
inc
(bad)
xor
pop
xor
fisttp
out
imul
int
and
jnp
xchg
mov
add
or
dec
pop
push
(bad)
dec
jnp
inc
cdq
scas
inc
aam
sub
repnz
jne
adc
cmp
cmps
imul
sbb
arpl
inc
pop
fild
xor
cmp
call
mov
fstp
sbb
mov
enter
adc
jbe
stc
xchg
push
adc
sub
(bad)
es
cmp
xchg
xchg
mov
jns
and
push
add
mov
ss
call
mov
pop
push
xchg
jno
inc
rcl
mov
pop
push
fdiv
ins
int
call
in
mov
and
pop
adc
ret
sub
fistp
jbe
mov
adc
je
push
mov
rol
and
inc
xor
xor
xor
push
aam
retf
stc
call
ins
push
test
dec
cmp
ret
int
push
(bad)
cmc
xor
pop
jl
jbe
nop
ins
sub
jnp
sub
and
and
adc
jne
add
mov
mov
mov
(bad)
repz
pushf
and
fst
lds
(bad)
call
add
jmp
out
xchg
sub
leave
xchg
sbb
inc
adc
mov
adc
(bad)
fwait
leave
adc
imul
jp
es
retf
cld
lock
rcl
not
retf
js
adc
adc
mov
cld
dec
aaa
sbb
mov
adc
mov
ins
mov
clc
xchg
dec
mov
fisubr
(bad)
enter
sbb
jmp
or
mov
cli
xchg
fcmovnbe
into
pop
push
and
add
push
or
ins
retf
cli
sbb
(bad)
bound
cmc
rol
out
dec
push
aaa
fwait
mov
inc
pop
test
loope
(bad)
aam
sbb
mov
adc
mov
ds
jle
fidiv
aam
or
add
pop
jne
jne
and
mov
xor
pop
sub
inc
xchg
and
nop
mov
enter
sub
xchg
icebp
add
(bad)
jp
pushf
inc
stos
sub
outs
add
and
xchg
in
test
pushf
push
pop
sar
jmp
mov
loopne
pop
and
xor
or
and
aaa
inc
sub
rol
dec
movs
xchg
les
sbb
mov
aam
mov
add
cdq
push
push
cmp
pusha
daa
imul
mov
sub
pop
ds
mov
push
cmps
mov
jl
jae
call
inc
aas
adc
sub
stos
cmp
out
push
push
mov
ror
div
out
inc
and
ss
xlat
adc
xor
push
or
xor
aam
arpl
push
push
xlat
inc
dec
jne
inc
popf
loopne
jecxz
xchg
retf
fwait
cdq
add
inc
xchg
or
or
(bad)
int
hlt
dec
jp
mov
and
loop
pop
sub
adc
pop
pop
dec
mov
js
imul
ins
push
xchg
int3
imul
cld
or
pmaxsw
add
inc
xor
hlt
push
lea
mov
pop
xor
adc
xor
in
mov
add
pushf
xor
les
movs
dec
mov
adc
push
xor
push
int3
in
pop
out
add
lods
popa
pushf
in
stos
daa
pop
cdq
mov
fidiv
popa
cli
mov
rcr
fcom
outs
test
sub
add
adc
add
repz
hlt
push
or
adc
call
and
fs
pop
mov
cmp
dec
imul
xchg
xor
mov
sbb
fisubr
aas
nop
sbb
jae
test
push
jo
cmps
mov
sahf
pop
jp
leave
pop
dec
and
leave
fidiv
loopne
or
jbe
in
mov
and
mov
test
pusha
push
sbb
pop
rol
pop
hlt
out
and
mov
sub
adc
sbb
loop
jecxz
imul
and
and
xchg
mov
pop
sbb
add
and
int3
mov
push
xchg
xchg
test
fsub
adc
call
leave
cmp
and
adc
in
stos
pushf
add
retf
dec
pop
rcl
mov
mov
dec
and
inc
mov
loop
adc
stos
gs
loope
xor
xor
sbb
jae
jp
bound
mov
jbe
pop
test
push
xchg
test
push
mov
sbb
or
ja
sbb
pushf
daa
hlt
popa
mov
cmc
test
pushf
test
bound
or
mov
push
cwde
xchg
nop
xor
and
dec
sub
push
nop
fisttp
pop
daa
ret
push
adc
bound
fwait
push
or
lods
push
mov
adc
test
sbb
sub
xchg
movs
ror
push
popf
aas
scas
in
push
mov
cmp
push
mov
pushw
push
call
mov
adc
xor
jmp
enter
mov
lea
hlt
into
xchg
push
jne
xchg
(bad)
sahf
push
jl
lahf
adc
fwait
adc
sbb
aad
icebp
es
(bad)
cmp
movs
fist
push
inc
iret
iret
adc
and
pushw
xchg
xor
retf
int3
push
leave
jo
add
add
dec
les
outs
data16
test
ret
hlt
pop
movs
test
push
xor
test
xor
mov
or
mov
je
dec
jbe
jnp
jae
jbe
jecxz
dec
sub
xor
dec
in
mov
test
xor
mov
lods
and
inc
fsubr
push
push
jne
and
sar
mov
and
mov
dec
dec
push
dec
dec
sbb
in
call
pushf
add
jge
pop
sbb
(bad)
xchg
xchg
sub
(bad)
lahf
imul
inc
push
fs
jmp
cmp
outs
mov
adc
movs
mov
mov
dec
cmp
sbb
jae
and
xchg
sbb
popa
inc
mov
ds
xchg
(bad)
dec
and
cmp
inc
mov
inc
ins
xlat
mov
pop
pop
pop
mov
fcomi
mov
push
popa
iret
pop
imul
sub
dec
and
mov
arpl
pushf
mov
add
add
and
cmp
mov
mov
mov
push
repz
das
dec
arpl
mov
ret
add
loope
jmp
test
addr16
xchg
stc
push
lahf
je
cmps
xlat
inc
jmp
add
adc
fisttp
or
loope
pop
ins
cmp
inc
and
add
xor
xchg
adc
mov
cmp
std
imul
cmc
fisub
add
hlt
cmp
jae
fwait
fs
outs
mov
push
sub
pop
xor
or
stc
int3
push
enter
cwde
and
push
cmps
pop
clc
mov
sbb
pop
mov
mov
mov
and
inc
pop
rcl
jno
int3
cmp
repnz
not
xlat
loop
mov
pusha
int3
mov
imul
jae
xchg
cmp
fst
packuswb
leave
ror
mov
fcomp
dec
call
stos
sub
cmps
mov
addr16
cmp
push
cmp
adc
sbb
inc
in
sbb
loope
inc
xor
xor
push
jno
pop
cmc
pop
xchg
or
jmp
loopne
out
aad
mov
fs
popa
ins
mov
cmc
xor
retf
dec
jno
enter
mov
inc
into
arpl
pop
jp
xchg
pusha
dec
push
sbb
mov
call
lods
push
xchg
movs
mov
xchg
mov
mov
dec
xchg
cwde
pusha
pop
adc
icebp
lahf
xchg
call
xchg
imul
hlt
jo
sub
rol
push
mov
pop
inc
add
sub
add
and
dec
cmc
and
mov
mov
les
add
sub
out
xchg
or
mov
pop
jmp
iret
jmp
dec
jae
mov
ret
mul
add
sub
leave
sbb
faddp
cmp
fidivr
xor
add
es
mov
leave
mul
(bad)
je
pop
add
js
pop
pop
int
mov
ins
cdq
jo
sub
pusha
pop
sbb
sti
pop
lea
shl
ins
sbb
push
popa
addr16
xchg
sub
jmp
mov
push
dec
push
cmp
ret
aas
sbb
xor
and
xchg
push
jbe
and
mov
dec
adc
and
adc
jg
sub
hlt
inc
mov
pop
or
push
cmps
push
int3
pop
mov
cmp
mov
cmp
es
das
push
add
ret
mov
mov
movs
pop
jle
test
std
outs
aaa
xchg
xchg
js
dec
out
scas
push
pop
jge
out
jbe
in
mov
ret
pop
ror
cli
mov
jbe
push
jge
cli
pop
push
imul
pop
and
mov
rcr
dec
inc
inc
dec
hlt
and
and
sbb
mov
add
loope
shl
add
cwde
call
mov
xchg
push
mov
into
repz
les
sub
xor
jbe
jmp
mov
(bad)
ret
inc
add
fld
cmp
add
mov
lock
pop
aas
xor
mov
and
mov
(bad)
mov
dec
jmp
sbb
pop
sbb
jge
mov
pop
adc
inc
fst
add
xor
lods
loope
cdq
(bad)
jno
xchg
pusha
cwde
mov
mov
sub
jge
jmp
xchg
js
pop
mov
sar
push
xchg
xor
call
in
pusha
repz
and
sbb
aam
in
es
mov
rcr
lahf
sub
mov
les
jp
ss
xchg
sub
imul
aas
push
(bad)
pop
call
inc
push
mov
jle
sub
xchg
retf
mov
pop
addr16
sub
mov
push
xchg
lods
xor
dec
ins
or
dec
mov
out
mov
xchg
cmp
xchg
test
pop
cmps
pop
arpl
icebp
shr
fdivp
lods
push
cmp
or
test
gs
out
mov
jo
pushf
mov
mov
mov
gs
out
pop
loop
mov
xchg
(bad)
stos
(bad)
cwde
aaa
push
sbb
test
mov
bswap
mov
mov
mov
or
cli
int3
dec
push
leave
jl
mov
sbb
adc
add
lods
or
mov
mov
shl
xlat
shl
test
cmc
lods
imul
xchg
push
mov
leave
(bad)
pop
sub
nop
rcl
push
lock
idiv
inc
cmp
mov
pop
fiadd
pop
jnp
inc
mov
sub
inc
mov
xchg
pop
sbb
retf
mov
push
das
jl
inc
sub
add
movs
lea
lods
xchg
xchg
inc
jns
nop
mov
sbb
(bad)
mov
std
retf
aaa
xlat
(bad)
mov
lea
lds
retf
pop
daa
jl
ret
xchg
lahf
(bad)
cld
lea
aam
out
das
mov
jle
es
add
ficom
jg
adc
jnp
sti
movs
jp
fcomp
dec
pop
add
scas
out
lods
out
mov
fcomp
jno
inc
nop
and
xchg
movs
pop
lods
dec
stos
or
mov
out
(bad)
pop
cwde
sub
sbb
lods
sub
adc
and
pop
add
cmp
in
data16
pop
lods
jmp
mov
ja
in
sbb
jb
jnp
xlat
fcomp
js
loop
mov
sub
loop
mov
loop
mov
sub
loop
pop
xor
lds
hlt
lea
cli
ret
popa
push
fisttp
jo
inc
rol
data16
push
xor
fild
leave
(bad)
fmul
dec
inc
xor
dec
pop
pop
or
aad
and
je
cld
cmp
cmps
and
xor
je
xchg
xchg
pop
sti
sub
jmp
xchg
push
hlt
jb
rol
dec
push
test
jle
mov
lods
fsubr
and
inc
pop
jo
shl
addr16
pop
test
add
ret
das
pop
mov
ja
sbb
xor
mov
and
gs
mov
(bad)
fsubr
out
cmp
add
cmp
xchg
test
or
push
push
xchg
cmp
jecxz
ret
inc
in
xchg
test
push
jp
mov
add
clc
call
sub
scas
out
lds
mov
pop
imul
lods
loop
es
push
test
fwait
stos
sbb
or
mov
jl
xor
jg
xor
pusha
(bad)
jle
or
les
dec
scas
mov
les
mov
repz
adc
sbb
push
mov
xchg
lock
sar
adc
arpl
mov
in
leave
movs
sub
nop
retf
add
push
pop
cmp
ret
mov
jb
or
jecxz
push
mov
in
call
lea
adc
movs
ret
cmp
popf
movs
add
pop
shr
xlat
sub
std
nop
imul
xor
jl
call
push
fstp
movs
cmp
sub
outs
adc
dec
push
inc
fsub
add
mov
mov
ins
and
adc
pop
fwait
mov
xchg
push
xchg
pop
adc
and
aad
add
int3
imul
xchg
ja
and
adc
cmps
adc
js
test
lock
es
sar
push
jle
mov
lds
sbb
pop
cmc
setns
test
dec
mov
popa
inc
scas
and
shl
xor
pop
mov
pop
test
mov
aad
xor
leave
xchg
rcr
xchg
push
popf
xchg
nop
add
ds
add
popf
outs
lahf
add
mov
jge
add
(bad)
sub
data16
mov
aam
ds
jmp
int
cmps
sbb
or
push
icebp
imul
and
dec
psubb
fld
ins
xchg
or
add
add
add
(bad)
(bad)
ficom
mov
iret
mov
movs
jno
xor
icebp
ficom
leave
mov
sti
jmp
mov
mul
add
mov
jle
call
pushf
(bad)
out
adc
daa
aad
test
mov
outs
sub
pop
jge
and
(bad)
jle
ss
sbb
scas
movs
lods
neg
mov
dec
xchg
fwait
xchg
mov
inc
mov
mov
(bad)
xchg
repz
std
mov
push
jne
sub
mov
pop
push
test
int3
int
fsubr
push
mov
(bad)
sti
sub
xchg
aas
es
arpl
adc
pop
out
je
sahf
cmp
jno
out
xchg
in
sbb
mov
cmps
inc
pop
popf
pop
mov
pop
push
dec
add
ror
add
cmps
xchg
je
nop
cmps
pop
mov
push
push
and
pop
xor
push
movs
jo
inc
hlt
pop
rcl
dec
jle
lods
sub
and
mov
rcr
sbb
xor
jne
sub
movs
pop
retf
mov
xchg
(bad)
les
lahf
inc
loop
pusha
add
movs
movs
mov
call
push
push
retf
loopne
test
or
in
xor
xlat
add
push
push
cld
mov
popa
stos
inc
sub
sub
jo
repz
and
lods
out
lea
jl
jnp
outs
(bad)
js
mov
fwait
into
jle
add
dec
int
dec
test
and
in
movs
and
scas
or
adc
(bad)
sbb
cmp
data16
mov
xchg
adc
es
int
sbb
bound
data16
in
xchg
inc
cli
fs
fs
jmp
push
xor
xor
jns
push
shr
mov
loope
dec
repnz
ror
push
cmps
mov
mul
mov
mov
mov
ret
retf
lods
ja
jecxz
test
dec
xchg
xchg
or
hlt
xlat
gs
add
cmp
and
or
loope
inc
aad
inc
dec
push
push
add
or
fst
adc
(bad)
mov
pop
rol
sub
out
(bad)
into
cld
fadd
bound
retf
test
mov
int
sbb
test
push
rol
jns
nop
mov
push
pop
sub
jne
loope
jno
enter
and
or
mov
xor
xchg
aam
scas
adc
jl
mov
push
push
inc
sbb
ins
mov
pop
or
jno
dec
inc
enter
pop
enter
xchg
sbb
mov
and
test
dec
adc
jg
and
and
adc
jbe
pop
(bad)
pop
retf
mov
dec
cmp
push
xchg
fild
outs
ja
iret
pop
mov
stos
sbb
adc
lods
popa
sbb
iret
ror
sbb
pop
push
in
push
or
mov
test
in
mov
sub
jno
lods
and
into
rol
xor
adc
jns
sub
sahf
jae
xchg
loope
dec
mov
inc
lods
lock
hlt
inc
xor
adc
cmp
adc
es
jno
and
adc
mov
out
popf
into
xchg
mov
rol
ret
or
or
xchg
test
loopne
inc
push
call
adc
pop
mov
retf
add
stc
push
out
outs
xor
aad
add
pusha
idiv
adc
sahf
mov
or
outs
fdivp
ins
popa
fisubr
sub
retf
mov
mov
and
stos
leave
outs
or
stos
jno
stos
imul
sbb
pop
pop
movs
push
fnstcw
mov
mov
inc
inc
pop
rcr
jbe
jne
and
and
add
sbb
mov
mov
aad
push
test
jge
and
lds
pop
les
jno
ins
or
mov
aad
imul
adc
jbe
fwait
and
jmp
push
or
and
push
out
sbb
in
or
inc
xor
adc
addr16
add
ins
(bad)
xchg
addr16
repnz
outs
inc
sbb
cmp
xchg
add
push
lods
inc
inc
sub
pop
or
cs
pop
or
out
sbb
dec
stc
mov
inc
popf
push
sub
(bad)
arpl
(bad)
mov
jae
or
and
lea
mov
xchg
and
dec
adc
and
push
jmp
mov
jge
les
or
fadd
jne
push
je
mov
mov
add
call
in
shr
outs
inc
stos
add
leave
pop
push
and
jmp
xchg
mov
leave
pop
fld
pop
or
stos
loope
pusha
push
rcl
jns
pop
pop
(bad)
loopne
dec
xchg
clc
xchg
sti
cwde
rol
retf
sbb
mov
xor
mov
das
jb
scas
(bad)
cld
xchg
pop
outs
add
mov
idiv
lds
add
(bad)
in
cmp
sbb
push
mov
call
or
repz
cmc
mov
xchg
xor
and
dec
pop
or
inc
popa
pop
(bad)
push
push
or
or
push
xor
fadd
je
adc
cmp
sahf
mov
call
mov
std
aaa
or
dec
inc
mov
imul
dec
inc
and
cs
dec
pusha
add
scas
pop
add
sbb
jmp
xchg
xor
movs
jb
mov
and
jmp
mov
sub
xchg
(bad)
fist
mov
mov
or
arpl
push
add
add
or
mov
adc
pop
es
nop
shr
adc
or
inc
ds
fld
push
mov
adc
adc
lahf
mov
ror
test
jmp
and
fdivr
dec
xor
xchg
ds
fdiv
in
adc
mov
lahf
ja
into
pop
xor
fwait
xchg
aam
sbb
adc
jp
cmps
es
mov
mov
cmp
xor
xchg
jne
cmp
and
loop
jne
(bad)
xchg
add
scas
inc
test
sub
fwait
arpl
popf
test
adc
rcl
pop
daa
mov
popf
pop
sbb
lea
sub
imul
cmp
cwde
inc
xlat
mov
dec
outs
fs
pop
or
dec
mov
gs
and
scas
loopne
enter
jle
add
xor
or
sub
inc
ficomp
cmp
xor
jge
mov
xor
sub
xor
xchg
data16
clc
pop
stos
mov
call
push
dec
sahf
push
inc
push
imul
loopne
mov
xor
(bad)
sti
xor
mov
je
push
add
imul
jmp
ficom
(bad)
push
jno
leave
add
addr16
xor
and
imul
bound
ss
enter
adc
push
xchg
inc
cs
rcr
push
mov
pop
mov
stos
into
call
stos
dec
push
out
fidiv
fild
cli
xchg
retf
pop
fdivrp
dec
cwde
fs
mov
mov
or
in
mov
sub
fisub
jecxz
dec
adc
mov
jl
test
lea
adc
cmp
test
popa
push
out
and
jmp
sbb
and
push
pop
movs
es
stc
mov
or
stos
out
into
ffreep
mov
cli
in
cmc
jle
adc
add
repnz
ficom
outs
and
sbb
pop
pop
jmp
repz
xchg
shr
movs
div
and
push
lahf
fsubr
push
repz
xor
and
pop
shl
inc
sub
mov
add
aaa
test
dec
dec
push
js
mov
adc
and
loopne
sbb
mov
inc
xor
pop
and
xor
jle
adc
aas
sub
jno
push
sbb
pop
or
jmp
mov
js
fadd
sub
jmp
cmp
ret
(bad)
pop
(bad)
movs
jnp
or
ss
(bad)
dec
jg
dec
pop
into
or
dec
sbb
xchg
push
mov
cmps
cdq
popa
push
outs
xchg
popa
lock
add
imul
popf
inc
addr16
cli
inc
in
loop
or
sbb
mov
mov
hlt
jecxz
sub
adc
add
int3
push
jge
or
sbb
je
xor
dec
xor
dec
xchg
mov
ins
mov
fdiv
cmp
add
mov
test
out
sbb
ret
mov
ins
inc
icebp
in
sbb
hlt
fwait
nop
ss
repnz
fcom
add
iret
in
sbb
dec
add
push
retf
push
jns
adc
mov
mov
mov
imul
sahf
popa
jecxz
shl
test
fcom
jp
test
int3
push
jo
mov
mov
test
cmove
mov
ret
(bad)
and
pusha
jge
dec
jae
cmp
sbb
pop
inc
cmp
xor
das
aaa
loopne
mov
ja
dec
aaa
int
out
and
mov
jge
pop
call
and
jbe
sbb
mov
daa
add
adc
hlt
repz
inc
mov
fadd
xchg
cmp
jne
mov
jbe
sbb
jp
jo
sbb
int3
stos
test
cmp
adc
adc
fdiv
push
ins
and
lahf
popa
jmp
inc
retf
adc
(bad)
loopne
inc
ret
pop
and
aas
adc
mov
pop
lahf
pop
and
adc
jge
mov
imul
sub
movs
aam
sub
jp
add
sub
mul
popa
xchg
lods
jbe
xor
jns
addr16
setb
rcr
fadd
arpl
xchg
mov
sbb
xor
xor
mov
arpl
retf
popa
lahf
push
mov
xor
mov
arpl
mov
adc
xor
cld
frstor
or
sub
(bad)
cmp
jmp
hlt
xor
imul
jo
es
inc
movs
movs
addr16
aaa
cmp
xor
sub
xchg
dec
in
jmp
fxch
sub
pushw
xchg
dec
push
add
sub
cmps
sar
cdq
sbb
mov
hlt
fdivp
enter
sahf
fld
cwde
ret
arpl
and
dec
daa
in
out
adc
push
stc
adc
jg
jp
icebp
add
sbb
inc
mov
aad
sub
fimul
loope
dec
add
dec
inc
fs
fisub
adc
ror
les
sub
ret
adc
sbb
mov
ror
and
leave
movs
nop
or
or
movs
test
test
sbb
and
jne
jae
mov
cmp
pop
inc
out
stos
cdq
ins
arpl
loop
xlat
pop
inc
scas
adc
and
leave
jo
pop
sub
int3
imul
add
mov
leave
xor
in
retf
inc
inc
adc
lock
and
enter
inc
dec
pop
jne
neg
mov
xor
add
fsubr
mov
xchg
and
movs
mov
dec
lock
lods
add
js
sbb
mov
push
sbb
dec
or
jns
call
sub
jo
and
ins
jge
pop
es
dec
icebp
shl
cli
add
(bad)
mov
xor
and
sbb
jecxz
and
pop
(bad)
(bad)
ss
jecxz
loopne
lods
bound
xor
addr16
xor
adc
add
or
push
pop
popf
clc
je
add
(bad)
jb
push
retf
push
push
push
xlat
add
leave
jp
xor
lock
jae
ret
test
xchg
mov
fistp
out
mov
mov
sub
mov
retf
mov
sbb
pop
add
lds
push
dec
inc
gs
out
int
dec
(bad)
rcl
jnp
in
les
or
fld
popa
pop
in
mov
(bad)
lods
dec
xchg
sub
sub
cdq
mov
repz
pop
lods
jp
(bad)
dec
mov
xor
stos
ret
cmc
inc
push
jecxz
bound
jb
push
addr16
ins
push
cwde
test
test
mov
jmp
or
les
lods
das
arpl
inc
repnz
xchg
imul
outs
inc
cmps
push
dec
or
or
inc
xchg
fst
aam
sub
or
mov
jge
fst
addr16
jl
mov
dec
xchg
call
stos
xor
hlt
or
inc
mov
push
test
in
add
cdq
imul
push
xchg
sbb
mov
loope
and
cmp
add
xor
pop
xor
lds
and
sbb
adc
test
test
sub
xchg
add
das
inc
lea
int3
fistp
js
add
mov
sbb
mov
ja
mov
push
cmp
sbb
stos
mov
pushf
mov
mov
xor
pop
pop
mov
jecxz
push
loop
sbb
loopne
loopne
jbe
out
bound
push
cmp
enter
cmp
in
add
fdiv
xchg
iret
xor
cmp
pusha
adc
rol
sbb
push
jo
retf
pop
ins
or
pop
rol
sbb
or
out
jb
aam
dec
pop
push
sub
leave
xchg
lds
jg
repz
adc
adc
int3
or
adc
pop
push
enter
sub
xor
adc
sahf
xchg
inc
pop
inc
jno
ins
add
sub
pop
addr16
js
inc
inc
retf
xchg
mov
mov
jo
ret
cmp
scas
xchg
and
loopne
xchg
and
fcomp
xchg
fs
xchg
pop
inc
fmul
into
sub
mov
xor
test
cs
into
clc
scas
aas
pushf
adc
sbb
mov
pusha
in
jecxz
adc
adc
xchg
call
jmp
pop
(bad)
out
call
sub
mov
xchg
hlt
mov
cdq
sub
and
les
cmp
iret
or
ror
add
mov
in
xchg
mov
xchg
mov
ret
lea
jbe
and
cs
pop
dec
idiv
mov
sub
lock
xchg
call
xchg
ret
clc
rcl
sub
popa
test
jmp
add
add
add
cmp
sbb
pop
rol
in
push
adc
mov
xor
fpatan
jg
sub
(bad)
ins
sbb
cmp
js
jl
and
adc
mov
xlat
mov
mov
pushf
sub
sub
movs
or
push
xchg
(bad)
mov
sahf
loop
jne
mov
and
out
sbb
jb
xchg
ret
pop
loop
int3
jo
(bad)
add
and
xchg
push
in
retf
popa
mov
xlat
test
scas
jp
jae
sbb
hlt
mov
pop
cli
scas
stc
mov
fadd
push
les
lock
jmp
ds
add
push
popf
ret
fwait
and
fst
pop
cmc
mov
in
sub
loope
jb
pushf
jmp
add
ins
mov
popf
inc
and
sti
movs
adc
mov
repnz
(bad)
fld
mov
nop
pushfw
push
je
dec
cmp
sub
aad
inc
lods
gs
mov
adc
bound
ins
fadd
pslld
pop
hlt
test
loope
inc
or
adc
hlt
jae
leave
dec
xor
or
cli
push
xor
imul
push
test
mov
xchg
sub
pop
xchg
mov
les
and
sbb
xor
sub
aaa
push
iret
pop
or
ins
inc
das
adc
scas
or
cmp
push
sar
retf
inc
or
fcmovnbe
ds
pop
test
pop
fwait
ins
aad
fwait
add
dec
xor
sbb
jns
loop
mov
(bad)
or
cld
jbe
push
xchg
add
sub
lock
iret
mov
fcomip
mov
and
leave
in
jg
pusha
(bad)
xchg
xchg
inc
xor
push
jb
jbe
jmp
mov
jo
mov
dec
pop
cli
jmp
dec
jnp
mov
dec
sbb
fadd
add
push
mov
xchg
lods
leave
xchg
xchg
aad
or
outs
lds
cs
push
call
sbb
adc
mov
fsubr
jae
rcr
jge
rcr
repnz
jecxz
xchg
add
int
xchg
mov
ds
cmp
sub
xchg
pusha
inc
in
add
mov
(bad)
sahf
lahf
cwde
into
adc
in
cs
mov
lahf
push
xchg
xchg
pusha
push
and
into
jp
sahf
outs
jl
js
pop
into
or
in
jae
inc
jae
cmc
ror
xchg
popa
out
sub
xchg
enter
mov
jo
push
jnp
aam
dec
cwde
dec
scas
and
es
test
shl
mov
sbb
mov
mov
jae
in
push
iret
push
or
in
aaa
fist
leave
jmp
ret
xchg
int
fsincos
shl
or
movs
inc
popa
sub
lea
nop
loop
dec
xchg
inc
push
cli
sub
jle
pusha
ret
mov
cld
mov
add
sbb
mov
fs
inc
inc
cdq
sub
mov
mov
xor
mov
xchg
das
cmp
movs
sub
test
cld
popa
fmul
cmp
pushf
ja
mov
mov
je
fsubr
loope
fbstp
or
or
pop
xor
out
jno
fs
std
(bad)
daa
cmp
mov
ins
and
adc
movs
push
popf
cpuid
mov
sbb
cli
jmp
stos
je
push
dec
rcl
test
jne
jmp
dec
sub
mov
and
push
jl
idiv
(bad)
pop
inc
sbb
dec
pop
cwde
push
outs
(bad)
enter
ror
jae
inc
xchg
add
ins
repnz
mov
jbe
xor
fnstsw
mov
inc
jecxz
fisttp
mov
sbb
cmc
xchg
push
inc
push
lods
or
mov
jle
and
call
jno
test
pop
xchg
add
xor
or
ficom
cmp
ins
sahf
scas
push
outs
jmp
push
and
nop
xor
sti
(bad)
adc
cdq
mov
adc
lods
iret
push
xchg
mov
jb
test
and
dec
mov
sub
ss
add
test
cmp
fiadd
cli
shl
int3
sbb
adc
adc
push
frstor
test
test
xlat
icebp
je
and
pop
(bad)
pop
inc
pop
pop
jbe
ins
sbb
call
outs
jne
in
fisubr
add
popa
out
add
push
push
outs
test
jmp
jno
popf
ret
fwait
and
inc
shl
inc
adc
test
push
ror
popa
add
or
dec
lods
loopne
lods
xchg
mov
pop
jne
jl
mov
stos
cmp
mov
dec
popf
sbb
sbb
out
dec
mov
aam
mov
cmp
mov
or
pop
mov
mov
rcl
arpl
in
dec
fidivr
mov
cmp
pop
mov
lahf
and
cmp
and
stc
mov
xor
sbb
adc
mov
out
and
rcr
sbb
and
mov
aad
push
jb
(bad)
ss
mov
adc
cmc
clc
jmp
mov
dec
adc
add
add
jb
mov
inc
stos
js
aaa
push
pop
stos
popf
fs
xor
movs
inc
leave
xchg
xor
cmps
out
xor
lock
adc
mov
dec
sbb
mov
out
call
xchg
or
pop
dec
add
call
or
xor
push
xchg
rcl
test
pop
push
lock
cmps
fisttp
cmp
mov
in
pop
jp
cmp
into
dec
cmc
mov
mov
xchg
shl
test
adc
call
add
pop
xchg
out
loop
and
mov
fwait
jmp
jno
out
adc
sbb
jecxz
pushf
ror
fidiv
push
push
sub
das
in
fcmove
(bad)
loopne
clc
ds
loope
sti
inc
cmp
xlat
push
das
js
jecxz
adc
adc
pushf
stos
cli
fstp
(bad)
sub
mov
sti
mov
inc
add
xchg
mov
aaa
sti
dec
adc
test
or
sub
ss
push
dec
loope
jno
cli
mov
js
jnp
jnp
push
imul
in
adc
and
enter
pop
ins
xor
jns
adc
and
inc
push
(bad)
shl
sbb
inc
into
sbb
cs
pop
inc
scas
xchg
xor
dec
jp
js
xchg
fiadd
or
pop
push
inc
sub
aas
lods
xor
sub
sub
mov
(bad)
or
add
push
sar
jns
popf
lods
jmp
xchg
outs
inc
dec
cmp
cs
jl
mov
push
arpl
push
add
pusha
fwait
lods
nop
push
iret
push
sahf
xchg
jmp
fcmovne
pop
add
sahf
in
jb
jecxz
lock
cwde
xchg
jae
cmp
mov
les
lea
jb
push
jno
adc
mov
pop
jg
add
xchg
push
cmp
jnp
mov
xor
frstor
mov
aam
xchg
loop
dec
loope
xchg
nop
or
das
mov
and
cmp
or
mov
inc
(bad)
aam
ss
pushf
mov
dec
sub
and
imul
mov
add
add
mov
(bad)
jmp
(bad)
popa
cmp
lds
int3
bound
mov
pop
test
jne
ret
stos
es
xchg
and
mov
pop
xchg
dec
dec
rcr
retf
push
mov
push
sar
pop
xchg
int3
inc
cdq
xchg
sub
jge
add
xchg
add
and
sub
sbb
xchg
jae
mov
gs
leave
sbb
mov
loopne
bound
inc
jne
pop
jne
(bad)
cwde
fldcw
cmp
cs
push
stos
jae
and
dec
sbb
fnstsw
repnz
fs
sbb
and
les
out
jge
jp
mov
cdq
movs
int3
loope
dec
sbb
xchg
gs
inc
push
xchg
add
inc
xchg
js
dec
icebp
dec
xchg
cmp
adc
nop
lods
or
xor
hlt
movs
mov
lahf
pop
jp
cdq
push
or
inc
cmp
xchg
outs
call
jg
jmp
jno
movs
sub
retf
push
call
inc
pushf
(bad)
das
iret
outs
inc
call
mov
out
pop
and
data16
inc
dec
inc
sbb
adc
jns
aaa
scas
push
jge
outs
xor
dec
xor
pusha
outs
lea
aam
add
mov
stc
dec
push
popa
loopne
lfs
add
mov
pushf
leave
ror
out
cmp
movs
jmp
cmp
test
cwde
xchg
repnz
mov
add
in
sbb
xor
push
xor
pop
inc
ins
sar
pop
mul
daa
mov
xor
das
out
in
mov
inc
loope
dec
test
cld
cld
cmp
out
mov
and
mov
mov
int
push
adc
push
or
into
mov
js
dec
rcl
push
push
xor
xor
int
mov
lods
push
mov
adc
sub
jecxz
pop
xchg
fnstsw
sar
popa
cmp
push
loopne
call
clc
sbb
ins
test
push
sar
push
or
sub
or
add
lods
daa
ins
jns
test
mov
std
cli
stc
xor
sub
xor
add
idiv
call
test
push
push
adc
bound
(bad)
jb
mov
bswap
xchg
add
xchg
pop
dec
xor
movs
mov
jnp
jecxz
inc
fstp
or
pop
frstor
cdq
dec
adc
leave
fwait
aam
mov
iret
aam
xor
cmp
test
icebp
jp
fs
mov
mul
icebp
xchg
aad
ficom
data16
jge
and
xor
jnp
stos
retf
fst
inc
fstp
fcom
and
aad
mov
xor
(bad)
aas
ss
and
cmc
mov
adc
mov
mov
xchg
outs
rcl
pop
adc
xor
cld
stos
es
or
dec
jl
inc
and
arpl
jecxz
cld
and
mov
scas
or
pushf
add
int
jmp
fsubp
jmp
mov
in
adc
fs
mov
jo
adc
aad
call
mov
sub
into
cmp
cmps
push
shl
popf
xchg
jb
aam
pop
push
push
ror
sbb
jb
xchg
adc
stos
cmps
(bad)
xchg
je
push
lock
xchg
xchg
dec
imul
push
mov
pop
test
push
scas
mov
enter
xchg
hlt
test
or
push
sub
mov
ror
inc
mov
jecxz
retf
mov
push
lock
or
jg
nop
xor
mov
or
adc
adc
imul
sbb
popa
pusha
bound
in
xor
cmps
pop
imul
xchg
add
xchg
add
sub
shl
jmp
bound
mov
sbb
inc
jmp
cmp
xchg
fst
mov
(bad)
sahf
inc
mov
xor
or
pop
mov
in
ds
mov
dec
dec
inc
sub
jo
retf
xor
xchg
(bad)
mov
test
lods
repnz
mov
fwait
jns
cwde
je
mov
cmp
pop
js
out
int3
fs
push
mov
inc
ins
or
xor
adc
or
mov
stos
div
movs
inc
and
outs
inc
pop
cmp
push
mov
push
call
leave
and
xchg
push
cmp
jmp
lds
xlat
fstp
add
add
in
sbb
pop
jbe
(bad)
xor
mov
jbe
and
xchg
jge
xor
pop
dec
outs
or
hlt
mov
pop
stos
mov
sbb
test
sbb
sbb
add
ins
xor
pop
into
and
and
push
es
dec
xchg
stc
dec
lds
dec
das
jl
jb
and
test
adc
addr16
mov
iret
fwait
in
xchg
arpl
test
push
pop
dec
add
jle
and
xor
cmps
push
mov
js
cmp
push
loope
add
mov
test
out
push
mov
push
jbe
push
outs
lock
mov
sub
mov
mov
retf
and
nop
cmovp
mov
push
rol
xlat
rcr
mov
adc
pop
aad
ins
mov
mov
mov
xor
dec
cs
das
aam
xchg
ret
out
or
jge
dec
pop
push
pop
pop
push
in
push
lds
loopne
imul
inc
mov
pop
test
mov
inc
sbb
cmp
(bad)
sbb
pop
mov
shl
call
dec
jecxz
lea
mov
retf
add
aam
sahf
xor
add
dec
and
test
or
inc
inc
in
call
scas
mov
fist
call
fisubr
inc
loopne
pop
cli
mov
mov
cmps
push
les
jecxz
inc
loopne
pop
loopne
jb
cmps
or
pop
aam
push
mov
std
out
push
or
add
dec
ins
inc
idiv
fwait
das
sar
test
dec
jne
test
repnz
in
int
adc
fdivr
xor
dec
fisttp
jl
push
sbb
in
push
cmp
pop
and
inc
repnz
mov
ret
fmul
jns
das
mov
addr16
jmp
pop
imul
test
loop
push
xchg
pop
push
dec
mov
sub
(bad)
mov
inc
daa
xchg
icebp
push
jge
jb
je
push
and
out
cmp
pop
cmps
(bad)
or
rol
stos
cdq
imul
int3
mov
sub
aaa
sti
inc
nop
and
ja
fistp
in
scas
jl
jae
xchg
xchg
cmp
sbb
outs
(bad)
mov
add
xchg
inc
ins
xchg
add
ret
in
mov
in
mov
cmps
inc
in
or
jp
mov
popaw
popa
inc
jnp
sbb
dec
and
inc
bound
aam
adc
scas
test
mov
dec
ins
bound
sbb
inc
into
inc
dec
ins
repz
cmps
pop
ds
arpl
inc
xor
out
add
xchg
out
mov
xchg
or
push
jmp
jb
aam
movs
adc
shr
or
int
addr16
pop
adc
lea
imul
xchg
pop
mov
mov
mov
sub
scas
adc
mov
xor
mov
mov
adc
fdiv
adc
push
cmp
sbb
adc
push
shl
push
sbb
call
sub
loop
xchg
out
in
ins
in
jg
daa
push
jp
dec
inc
retf
add
sub
sbb
add
jno
jle
(bad)
sti
icebp
jmp
mov
pop
jge
pop
pop
std
pop
(bad)
jne
jbe
cmp
test
mov
or
fist
jne
adc
xchg
push
mov
dec
and
inc
sti
sbb
jbe
sub
and
adc
popf
xor
dec
out
test
fisub
add
cmps
sub
xlat
lock
sbb
or
sbb
xchg
cmp
cdq
pusha
jno
popa
mov
movs
mov
xchg
adc
fcomp
mov
adc
push
ss
iret
pop
adc
dec
lahf
test
add
(bad)
popf
loopne
mov
mov
adc
mov
sbb
ins
push
pop
rcl
add
sub
push
jo
div
push
push
push
das
and
or
jmp
sahf
adc
pop
stos
imul
push
addr16
cs
mov
xor
inc
test
out
loopne
ins
stc
icebp
mov
add
mov
ja
fcmovnu
mov
add
nop
mov
mov
pushf
jecxz
adc
pop
or
scas
leave
das
sub
mov
xor
out
cmp
ins
(bad)
stos
loopne
cdq
(bad)
sbb
mov
add
pop
gs
popa
ret
rol
push
pop
mov
imul
pop
dec
xchg
jnp
cld
repnz
test
cmp
imul
aaa
scas
cs
cmp
dec
call
xchg
mov
mov
ja
or
add
push
mov
imul
inc
adc
ret
sub
stc
push
add
repnz
sub
adc
test
jle
dec
or
in
xchg
xor
ror
loop
mov
loopne
mov
adc
cld
or
outs
xlat
push
adc
or
push
sbb
icebp
rcl
and
retf
mov
scas
rcl
jmp
sub
jno
(bad)
or
dec
shl
add
movsx
cmp
xor
outs
mov
push
xor
cmp
adc
jmp
sbb
push
pop
mov
les
cmps
adc
or
adc
sbb
sub
mov
xchg
sub
xor
sahf
dec
sbb
mov
add
jnp
cmp
mov
mov
lods
mov
xchg
in
les
(bad)
clc
repnz
mov
adc
cld
(bad)
fwait
mov
jecxz
inc
push
ja
mov
pop
aaa
pop
jo
loope
popf
arpl
cdq
in
xchg
lods
mov
push
push
lock
mov
fistp
mov
sbb
fs
ficomp
sub
(bad)
jmp
(bad)
(bad)
into
test
call
aam
pusha
dec
jno
dec
sti
xchg
out
cmc
imul
loopne
je
aam
repz
cmp
(bad)
mov
cmc
cs
or
push
fstp
mov
fucomip
jl
jl
lahf
inc
xlat
aad
mov
test
cmp
jno
(bad)
(bad)
and
push
adc
jle
hlt
mov
(bad)
mov
je
data16
(bad)
(bad)
sbb
sti
ja
leave
sub
mov
sbb
mov
push
pushf
push
lods
in
scas
mov
mov
pop
(bad)
imul
sub
std
fwait
mov
hlt
dec
aad
addr16
sub
je
or
out
cmc
fisttp
sub
sbb
fld
jle
pop
mov
cmp
cli
adc
call
loope
frstor
add
cmp
sbb
mov
pop
push
hlt
cs
dec
add
adc
cmp
or
pop
popf
or
and
push
or
xchg
(bad)
out
cdq
sti
(bad)
(bad)
out
loope
or
sar
in
mov
movs
cmp
sbb
scas
cli
sbb
sbb
stc
dec
popa
push
pmaxsw
imul
in
int3
jns
out
xor
cmps
jnp
dec
inc
fs
mov
lock
icebp
or
aas
inc
outs
(bad)
nop
repz
fld
xor
cmp
mov
mov
out
sbb
loope
in
je
aaa
(bad)
into
aad
retf
pop
cmp
and
xor
mov
cs
popf
les
int3
(bad)
fsubrp
repz
loope
(bad)
aas
pushf
out
out
shl
inc
(bad)
adc
gs
jecxz
(bad)
cmp
mov
jl
out
or
mov
ret
xrelease
mov
mov
ss
and
stc
xor
cli
push
mov
shl
dec
xor
cmp
pop
test
mov
loope
xchg
pop
adc
push
out
push
out
jnp
push
stc
cs
jge
or
jl
and
sbb
(bad)
out
push
fnstcw
pop
fwait
outs
add
sub
out
mov
ret
test
lock
imul
test
out
cmp
sbb
fiadd
inc
mov
mov
jnp
mov
inc
mov
data16
jmp
or
cmp
push
xchg
cmp
addr16
push
and
ds
js
xor
jl
jbe
cld
fnsave
daa
cmp
jnp
pop
jp
cmp
mov
mov
dec
mov
aas
xor
add
dec
mov
jp
jmp
repz
movs
jbe
inc
dec
mov
mov
repnz
cmp
xchg
mov
lahf
mov
cmps
js
(bad)
jle
jns
sbb
or
mov
adc
cli
stos
sbb
fwait
jns
pop
cli
adc
out
out
cmp
(bad)
xor
in
jmp
jge
out
xchg
not
in
mov
scas
lods
fcmovnu
loopne
test
xchg
das
outs
cmps
pop
int3
inc
ss
adc
test
adc
inc
lahf
sar
inc
fild
jb
fistp
mov
retf
ja
idiv
leave
fdivr
cli
jg
gs
retf
sbb
popf
cld
retf
adc
mov
div
sbb
adc
inc
jb
xchg
jae
jl
mov
aas
je
dec
jmp
ror
mov
sbb
popf
sbb
xor
jns
pminub
jecxz
dec
stos
mov
nop
xlat
mov
cld
ins
hlt
mov
cmp
mov
cmp
pop
mov
les
mov
mov
in
jle
repz
xchg
mov
mov
bound
mov
scas
lahf
push
pop
dec
scas
jp
out
mov
inc
jge
test
pop
stc
dec
mov
sub
inc
ds
das
loope
cld
jg
xchg
xchg
jbe
sub
stos
int3
pop
push
(bad)
sub
fisttp
outs
xchg
mov
mov
shl
push
cmp
jbe
stc
cmp
or
or
pavgb
lds
lahf
js
dec
sbb
cmc
out
imul
ror
std
adc
jmp
or
in
push
(bad)
aas
js
or
and
jge
retf
xor
and
mov
ja
fiadd
cmps
fld
sbb
jne
std
mov
sar
and
rcr
aas
mov
out
fstp
loop
inc
jns
pop
mov
mov
(bad)
dec
out
dec
outs
mov
mov
mov
call
hlt
push
je
out
adc
pop
int3
dec
adc
ins
nop
push
and
inc
sub
mov
jo
fnsave
dec
arpl
(bad)
jbe
cmps
dec
jne
mov
xor
pop
pop
shl
or
or
xor
xor
mov
aaa
mov
push
or
jge
in
mov
aam
mov
jmp
inc
cmp
(bad)
ins
dec
pop
cld
retf
mov
cmp
jo
cs
out
movs
in
sbb
in
mov
jnp
fs
pop
jnp
aam
mov
pop
cmp
ret
iret
scas
and
jns
jge
pop
mov
mov
sub
mov
push
push
sbb
jae
bound
push
dec
scas
push
cmps
mov
icebp
cld
stos
(bad)
dec
jne
cmp
sti
fcmovu
imul
fld
dec
push
cmp
into
mov
int3
pop
mov
mov
sti
(bad)
hlt
in
jnp
icebp
jno
icebp
mov
mov
shl
aaa
pop
imul
out
shl
ror
sbb
(bad)
mov
jno
mov
arpl
fild
mov
lea
mov
cli
ror
out
js
jge
(bad)
fstp
sbb
cmp
sub
sub
add
or
or
hlt
daa
bound
sub
jno
or
add
fidiv
aam
in
ficomp
push
cli
push
ret
iret
div
pop
xor
xchg
ret
inc
mov
movs
push
lods
ja
cwde
dec
enter
mov
lods
stc
cmp
jmp
aas
jno
and
sbb
push
lods
cmp
clc
pop
mov
adc
(bad)
ds
dec
retf
popf
fnstcw
in
ds
cmc
aaa
jl
cmps
into
mov
pushf
xchg
inc
cmp
sbb
push
dec
jle
call
inc
ins
pop
jp
stos
mov
js
ror
adc
dec
fisttp
xchg
ins
outs
ins
arpl
sbb
fsubr
xchg
pop
cmps
jge
ret
dec
dec
rcr
push
fwait
add
fistp
cld
add
jecxz
sti
ss
jno
or
pop
nop
jae
call
fadd
hlt
cwde
mov
int
mov
bound
fidiv
xor
ss
nop
outs
fs
cmp
pop
inc
dec
loop
outs
(bad)
lock
pop
aaa
push
aam
push
jge
outs
push
xor
xor
push
cdq
aaa
sbb
push
imul
cmp
pop
push
lahf
jo
(bad)
test
add
mov
call
daa
dec
lss
jmp
xchg
call
xchg
fstp
mov
add
nop
mov
mov
icebp
inc
dec
mov
nop
ds
sub
in
(bad)
jno
hlt
push
mov
push
loopne
and
xchg
jle
push
aaa
pop
sub
add
push
push
adc
jl
repz
mov
mov
xchg
shl
xchg
sahf
sahf
cmp
fwait
inc
push
add
imul
into
and
jl
fcom
pop
data16
xor
call
jg
dec
lahf
cld
sbb
iret
sbb
jge
dec
push
mov
xchg
lahf
leave
xchg
arpl
jp
push
jge
rcl
mov
mov
or
fsubr
or
jb
fldenv
cwde
sub
dec
push
shl
retf
cmp
mov
imul
cmp
dec
adc
push
adc
pop
test
(bad)
adc
push
jbe
out
repnz
out
fisubr
adc
test
mov
ins
sbb
int3
std
inc
(bad)
xor
jne
imul
int
out
pushf
(bad)
fdiv
retf
inc
pop
stos
ret
mov
stc
push
push
std
sub
add
xchg
sub
pushf
xchg
test
ins
sub
test
xchg
out
dec
es
jge
mov
push
(bad)
stc
repnz
jo
gs
mov
addr16
out
cmp
scas
xor
adc
cmp
fst
fdivr
(bad)
jmp
enter
mov
stc
push
jge
xchg
inc
fsubr
push
out
jmp
and
ficom
adc
icebp
adc
mul
xlat
outs
add
add
call
xor
dec
dec
test
pusha
inc
pop
push
push
push
sbb
addr16
xchg
cwde
rol
(bad)
shl
mov
lahf
xor
adc
and
movs
test
int3
fimul
imul
pop
aam
fstp
cmps
(bad)
mov
out
fwait
sar
mov
add
push
cld
gs
mov
neg
arpl
cmp
retf
dec
sub
movs
mov
jecxz
repnz
stos
out
in
mov
ret
sub
cmp
mov
scas
jp
retf
std
and
inc
jnp
add
mov
dec
popf
jge
sbb
dec
jb
dec
(bad)
inc
mov
bound
mov
jnp
cmp
lock
cmp
pop
jbe
adc
dec
push
mov
aam
outs
in
sub
sub
mov
cmp
and
cmc
stos
lds
scas
jbe
cmc
xchg
(bad)
std
push
sub
call
outs
dec
pop
xor
mov
adc
jae
loopne
mov
cwde
push
in
hlt
lahf
adc
unpcklps
hlt
scas
inc
add
or
imul
pop
adc
retf
add
inc
ret
outs
pusha
cmc
jo
mov
xor
ffree
push
jnp
push
dec
adc
cmp
jmp
nop
sub
pop
adc
data16
test
jge
and
ins
div
add
add
stos
fwait
jno
xchg
push
mov
test
xlat
(bad)
sahf
dec
adc
mov
and
push
sub
ins
arpl
mov
mov
les
int3
mov
dec
xor
aam
fdiv
cmp
xor
adc
xchg
bound
sbb
fwait
xor
call
aam
js
cmps
inc
(bad)
cmp
mov
push
push
mov
push
push
mov
adc
mov
and
cld
xor
xor
lods
call
lds
or
mov
jbe
int
mov
les
or
sub
or
loop
fs
mov
dec
or
test
sar
xchg
and
je
cmp
pusha
xor
mul
out
dec
cld
idiv
and
jne
popa
stc
fisub
add
sbb
pusha
inc
xor
fwait
cmp
test
or
(bad)
cdq
mov
in
cmps
add
inc
push
out
xor
add
popa
sub
aam
xchg
and
pop
in
jbe
cmp
movs
or
into
in
xchg
dec
sub
or
xor
dec
sub
lea
xor
inc
sbb
stos
pop
xchg
jecxz
push
ret
cmp
mov
lods
fistp
push
and
xchg
xchg
enter
push
daa
int3
mov
gs
data16
xchg
mov
add
ins
inc
test
lock
leave
inc
push
div
int3
mov
pop
es
jl
cwde
or
sbb
fxch
jno
or
repnz
sub
call
ficomp
mov
loopne
mov
imul
push
jecxz
iret
test
mov
add
in
test
stos
push
or
rcr
jo
clc
adc
movs
push
add
or
cmp
push
add
test
dec
sub
dec
test
dec
and
xchg
pop
mov
xchg
cwde
dec
pop
fsubr
jp
std
mov
aaa
push
pop
outs
outs
(bad)
adc
int
es
lahf
sti
mov
inc
in
adc
ret
inc
bound
sbb
xor
ret
add
jmp
pop
lods
lds
push
or
or
xchg
push
xor
sahf
mov
sbb
pop
imul
mov
pusha
call
mov
test
push
inc
scas
fnstsw
push
xlat
sbb
ret
add
leave
cmc
loop
jg
cs
fwait
mov
imul
iret
fild
inc
ds
outs
loope
icebp
jmp
arpl
xchg
imul
fwait
imul
je
cmps
cmp
fcom
push
test
push
loop
enter
popf
and
out
lahf
xchg
sub
ret
xchg
outs
and
jns
jle
xchg
add
in
mov
pop
adc
int3
or
inc
fcomp
rol
ds
pushf
bound
repnz
dec
add
aas
int3
or
add
adc
ds
gs
mov
int
sub
push
int3
dec
loope
mov
repnz
jp
into
jne
mov
push
xchg
sub
pop
sub
lock
xchg
scas
jmp
push
out
out
in
sbb
mov
scas
leave
test
es
dec
inc
xchg
adc
fsub
cmp
mov
adc
ins
pop
or
jecxz
cmps
or
cdq
pusha
mov
xor
pop
sbb
jnp
repnz
push
push
(bad)
loopne
int
inc
mov
das
lods
in
rol
cs
push
pop
ins
and
jnp
dec
xchg
sbb
pop
in
outs
mov
in
xchg
hlt
jge
jl
aad
or
sbb
es
pop
(bad)
and
and
sar
mov
retf
pop
call
adc
int
jns
aaa
fidivr
xchg
dec
fwait
inc
add
or
sbb
jo
es
inc
dec
rcr
inc
inc
repz
lds
pop
inc
hlt
and
pop
or
(bad)
test
mov
scas
sbb
and
sub
and
mov
test
gs
jns
test
test
mov
xchg
jae
jle
xchg
stos
and
sub
mov
mov
int3
stos
add
dec
add
bound
retf
out
sub
leave
push
and
xor
aam
mov
and
loopne
mov
push
stos
or
mov
add
inc
mov
and
ror
pop
add
jns
cmp
inc
mov
cmp
push
jnp
dec
xor
inc
pop
test
mov
test
mov
jge
pop
outs
or
cmpxchg
push
in
sbb
and
cs
into
dec
push
bound
sub
xor
and
inc
mov
mov
mov
mov
xor
cdq
push
pop
int3
cmp
push
dec
or
mov
loop
inc
sub
cmps
adc
les
cld
jbe
loop
setnp
pop
xor
add
adc
adc
xor
mov
call
push
mov
sub
mov
retf
sub
retf
lods
loop
sub
push
call
popf
sub
cmps
out
add
or
mov
pushf
xchg
cmp
mov
mov
adc
xor
adc
out
pop
shl
sub
cld
xlat
mov
sbb
cmp
int
lock
xor
loop
fdivr
jl
jge
adc
jns
jecxz
retf
and
push
adc
or
std
add
inc
jb
cli
icebp
cmp
cmp
pop
loopne
cmp
sbb
in
(bad)
jne
cmp
jmp
pop
xor
pop
loop
mov
jnp
and
int
inc
lahf
mov
push
jmp
cmp
adc
pop
arpl
add
call
ds
scas
mov
xchg
ins
into
mov
sti
push
ret
add
rcr
lds
out
mov
out
or
arpl
aad
iret
jge
xchg
loope
push
cdq
lods
inc
outs
xor
stos
dec
ds
cmp
outs
sbb
add
dec
aaa
push
mov
pop
and
jns
fsubr
xor
into
stc
in
cmp
dec
test
add
mov
not
ja
or
mov
pusha
arpl
sub
inc
push
in
repz
aam
outs
(bad)
mov
cmps
test
call
sbb
adc
das
popf
int
int
push
mov
mov
in
push
jg
adc
push
xchg
test
or
push
pop
mov
add
out
cmp
pop
inc
or
xchg
jb
push
xchg
xchg
inc
fwait
push
adc
push
add
lods
repz
js
js
nop
pop
dec
push
nop
pushf
(bad)
xor
inc
mov
imul
and
xor
jnp
das
mov
adc
sbb
xlat
mov
cmp
(bad)
shr
and
jmp
sbb
mov
dec
adc
jg
add
in
sbb
rcr
add
and
jmp
scas
jmp
inc
and
cmc
cs
(bad)
fcom
in
fmul
jl
or
aam
cdq
loopne
xchg
stc
add
pop
dec
inc
fs
sahf
ds
stc
loop
popf
adc
mov
(bad)
aas
push
push
push
add
xlat
shl
xor
sbb
fisttp
bswap
out
xor
sub
stos
xchg
inc
test
cs
outs
(bad)
jecxz
sub
xor
std
loop
mov
jmp
add
in
fnstenv
push
clc
dec
push
cwde
(bad)
ss
and
mov
mov
icebp
mov
or
cmps
enter
and
(bad)
aad
adc
lods
test
scas
bound
imul
lahf
xchg
fdivp
cwde
cmp
mov
inc
mov
fmul
das
add
cwde
dec
das
(bad)
pop
data16
es
arpl
sub
sbb
xchg
cmp
rcr
popf
rcl
repz
mov
xchg
sbb
jp
xchg
neg
cwde
pushf
pop
(bad)
loopne
add
fwait
pop
test
xchg
lock
sub
lds
push
stos
js
add
fnstenv
mov
adc
imul
dec
cdq
aam
and
and
sbb
int3
fwait
rol
shl
imul
call
and
inc
adc
xor
sbb
call
mov
and
out
mov
mov
pop
dec
jecxz
push
inc
jae
retf
pop
gs
into
mov
ret
lock
adc
jne
loop
mov
push
repz
jae
ss
xchg
mov
mov
es
shl
pop
pop
cwde
adc
mov
scas
mov
mov
mov
inc
arpl
enter
pop
sbb
mov
mov
(bad)
mov
hlt
test
mov
cld
pusha
or
rcl
stos
mov
test
dec
movs
jne
cmp
leave
int
dec
sub
mov
popf
mov
in
cmps
mov
ja
or
retf
test
add
fisubr
add
mov
popf
pop
fcom
xor
or
lahf
out
add
or
andnps
fucomi
or
call
dec
xchg
adc
jge
mov
int
sub
add
push
popa
pushf
sbb
cmp
lea
dec
out
arpl
pop
call
or
push
data16
jp
add
loopne
pushf
and
ret
ret
lods
mov
xchg
arpl
xor
imul
and
inc
xchg
xchg
test
retf
icebp
(bad)
int
xchg
fs
fwait
mov
test
lahf
sub
stc
enter
clc
mov
or
push
lahf
stos
int3
scas
add
push
jmp
retf
scas
mov
popf
sub
jno
xchg
push
xchg
adc
fs
cmp
rcr
sub
sbb
fwait
sbb
sub
popa
ins
dec
into
inc
sbb
retf
or
ret
mov
sub
aam
cs
ss
int
xchg
fadd
cmc
push
mov
xchg
fimul
push
jmp
mov
mov
shl
test
sub
cld
dec
mov
je
inc
mov
ins
xchg
je
xor
repz
shl
ins
mov
dec
sub
push
xor
cmps
pop
stc
jmp
push
mov
movs
mov
dec
test
pop
push
mov
mov
push
add
adc
xchg
movs
inc
lahf
jbe
cmp
lds
sub
cwde
mov
xchg
bndstx
retf
or
aad
cmp
test
shl
mov
xor
push
ss
stc
imul
test
(bad)
fs
aaa
xor
mov
jo
push
sbb
dec
fdiv
inc
push
mov
xor
lods
or
rol
push
or
pusha
sub
movs
test
bound
repnz
les
(bad)
call
out
mov
push
mov
push
mov
and
lea
sbb
jecxz
lahf
jbe
test
test
dec
mov
outs
inc
(bad)
jne
ficomp
(bad)
jmp
xor
jmp
sub
jmp
xlat
sbb
mov
pop
gs
adc
mov
cmp
lock
div
xchg
xchg
and
xor
sbb
xchg
pop
(bad)
adc
les
addr16
fwait
shl
add
xor
jnp
je
lods
dec
cli
retf
pop
adc
(bad)
pop
mov
movs
dec
ins
enter
mov
inc
out
std
jp
mov
pop
xchg
retf
sti
sbb
shl
dec
cmp
sbb
mov
or
sbb
retf
push
fisub
rcl
mov
int
jle
adc
sbb
add
mov
xchg
push
pop
xchg
sub
pushf
xchg
push
ret
add
retf
pusha
pop
sub
cmps
cdq
ins
ins
pop
mov
and
sub
retf
out
pop
xchg
xor
mov
and
aam
push
out
add
ins
aam
test
xchg
add
jmp
les
inc
test
icebp
loope
sbb
je
stc
adc
sbb
icebp
jnp
sbb
mov
outs
lds
clc
and
repz
fiadd
nop
sub
sahf
add
inc
and
mov
push
mov
not
add
inc
sbb
cmps
aaa
or
adc
push
loope
inc
xchg
stos
in
ret
mov
movs
leave
mov
mov
mov
mov
xor
movs
sub
clc
ss
and
dec
pusha
mov
xchg
push
sbb
loope
sub
ficomp
ins
mov
xchg
fldenv
or
cmp
xchg
jb
add
mov
pop
ret
xor
dec
enter
mov
add
adc
call
push
push
jae
and
sub
mov
movs
movs
jmp
add
sub
jae
or
jecxz
aaa
pop
cld
pop
retf
gs
jbe
(bad)
in
xchg
rcl
repz
mov
imul
and
push
sbb
pusha
leave
sub
xlat
jmp
jle
jecxz
rcl
cld
jp
adc
xor
pop
dec
jg
add
loop
es
imul
jmp
pushf
call
jo
scas
scas
arpl
mov
and
xchg
into
mov
pop
mov
mov
xchg
mov
xor
dec
xor
cmps
out
call
xor
xchg
xchg
sbb
into
inc
mov
sub
dec
push
loop
dec
and
(bad)
push
mov
cmp
stos
mov
push
dec
or
retf
sub
ds
sbb
xor
inc
aaa
mov
dec
lods
test
jns
(bad)
mov
mov
leave
popa
push
jg
xchg
cmp
shr
test
mov
push
movs
xor
mov
push
ja
add
out
pop
mov
aas
mul
inc
mov
add
sar
iret
xchg
mov
lds
jmp
xor
inc
sub
sub
inc
mov
rcl
lock
shl
sbb
popf
jp
or
and
mov
mov
in
dec
lds
shl
out
ins
in
outs
fwait
adc
add
mov
dec
mov
adc
popf
jno
inc
or
in
ins
dec
aaa
sbb
sar
rol
add
jne
mov
mov
inc
and
jno
sar
inc
hlt
push
jmp
inc
jecxz
out
xchg
mov
dec
mov
pushf
xchg
push
xor
xor
ror
push
cmp
jg
mov
cwde
jmp
cmc
mov
mov
pop
(bad)
hlt
lock
loop
scas
daa
ss
dec
neg
cmp
stc
out
sar
imul
out
jb
mov
ret
out
xor
jmp
inc
xor
jmp
ins
fidiv
push
jmp
jno
xchg
(bad)
dec
iret
cld
sbb
sar
out
dec
ds
mov
iret
fidivr
jg
jne
mov
psubq
clc
xchg
(bad)
pop
clc
shl
call
enter
sti
imul
mov
fsubr
fisub
das
sbb
ins
(bad)
std
sbb
dec
sar
repnz
jecxz
mov
(bad)
das
fnstsw
fbstp
cld
bound
(bad)
jecxz
fwait
data16
pop
adc
nop
push
std
fild
pop
xor
mov
scas
std
fld
out
xor
(bad)
cld
mov
pop
or
iret
(bad)
sti
dec
ins
in
cld
ja
xchg
cld
mov
stos
(bad)
(bad)
pop
mov
mov
sub
cld
outs
ins
pop
mov
(bad)
jmp
push
stc
pop
clc
adc
xor
fdivr
dec
jg
std
in
mov
(bad)
fdivr
aas
out
dec
mov
in
fdivr
or
jmp
mov
not
and
imul
mov
std
jp
(bad)
fld
jp
(bad)
mov
stos
out
cmp
out
pushf
mov
out
call
cmp
pop
sbb
(bad)
lods
mov
mov
shl
jae
retf
scas
mov
pop
push
push
mov
(bad)
pop
sbb
sti
aaa
loopne
xor
icebp
lahf
mov
(bad)
jg
gs
out
cli
(bad)
jge
jns
icebp
cmps
(bad)
movs
(bad)
hlt
pop
(bad)
pop
shl
mov
rol
call
test
in
lock
ins
daa
mov
test
ja
(bad)
sar
jg
out
test
add
ret
shr
and
clc
scas
lahf
push
(bad)
in
das
cdq
mov
retf
call
ret
leave
mov
xlat
jbe
imul
loope
ret
pop
ss
jnp
cdq
ja
jg
cmc
jmp
or
mov
mov
mov
cmps
cmp
mov
inc
cmp
mov
push
out
out
fdivrp
mul
mov
jecxz
fldcw
aam
out
mov
xchg
iret
jae
rcr
lahf
mov
mov
jno
jno
jno
jnp
pop
adc
imul
stc
jp
lahf
dec
out
jns
jbe
ficomp
cmps
int
fisttp
cmp
scas
js
pminsw
addr16
mov
les
sti
(bad)
lahf
jge
sbb
scas
pop
aas
fstp
ins
jecxz
(bad)
scas
sub
pop
fucomip
xor
(bad)
out
sub
mov
test
and
jmp
iret
(bad)
(bad)
mov
pop
(bad)
inc
scas
dec
movs
enter
lds
scas
jae
xor
dec
rcr
sar
dec
cmc
inc
sbb
pushf
neg
rol
cmp
mov
test
mov
or
outs
fdiv
aas
mov
jae
xlat
jecxz
mov
out
and
fdivrp
imul
loop
mov
jne
or
xchg
mov
repz
mov
mov
sub
or
addr16
fwait
lods
(bad)
(bad)
mov
shl
pop
addr16
or
add
pop
pop
ja
outs
inc
sub
ss
(bad)
jns
pop
mul
into
mov
(bad)
aam
inc
adc
nop
scas
push
ja
ds
mov
(bad)
jnp
cmp
fdiv
(bad)
div
jae
jae
mov
jge
add
jl
jae
out
push
xchg
dec
repnz
xor
push
add
out
jge
mov
xor
ins
in
jnp
dec
scas
je
das
mov
mov
mov
cmp
mov
xchg
ins
movs
ror
popf
adc
pushf
jb
sar
sahf
nop
out
jmp
test
nop
into
inc
out
push
mul
pop
nop
sub
mov
repz
ret
mov
mov
push
retf
mov
pop
fistp
pop
mov
ja
push
(bad)
cmp
fistp
xchg
js
(bad)
mov
mov
rol
das
pop
movs
movs
test
lahf
inc
mov
push
cli
inc
jbe
and
cmp
mov
sti
rol
mov
ja
xchg
jbe
pop
cmp
outs
std
out
outs
cmp
jmp
(bad)
idiv
fcmovnbe
xor
shl
jmp
pop
pop
outs
lds
out
repnz
mov
jmp
(bad)
jns
xor
xor
or
(bad)
sbb
imul
out
(bad)
sar
idiv
xor
fcomp
mov
jno
imul
xchg
retf
ret
sti
dec
fld
pop
jae
pop
scas
pop
clc
out
mov
push
sbb
js
or
pop
out
out
test
jmp
mov
(bad)
jnp
sbb
retf
scas
pop
out
out
dec
stc
jmp
add
idiv
mov
test
outs
mov
mov
pop
retf
cmp
leave
jo
cmp
mov
mov
xchg
(bad)
pop
push
sbb
retf
add
in
xchg
mov
mov
out
cmp
mov
mov
mov
fwait
rcl
sbb
icebp
sbb
outs
mov
call
out
outs
inc
popf
fwait
adc
push
cli
int
(bad)
mov
sub
sti
adc
mov
int3
push
cmps
loopne
dec
sbb
(bad)
mov
mov
retf
in
xchg
sti
and
(bad)
retf
sub
call
dec
das
inc
inc
(bad)
call
not
sub
mov
mov
clc
mov
xchg
jl
mov
aas
xlat
jae
loopne
push
(bad)
popa
mov
and
jne
mov
jnp
mov
test
movs
test
pop
mov
jg
xchg
xlat
imul
iret
cmp
or
iret
xchg
jmp
scas
pop
scas
adc
sub
mov
js
(bad)
or
cmp
ins
dec
xor
mov
icebp
out
iret
xchg
jecxz
jle
out
les
inc
hlt
div
iret
ret
shl
(bad)
cld
push
xlat
(bad)
cmc
push
aas
mov
and
dec
out
sti
loope
in
jmp
fild
lea
jecxz
mov
sub
cwde
movs
icebp
cmps
cmp
int
out
jg
stc
pop
scas
ss
add
movs
fimul
xor
rol
mov
sub
int
mov
jge
dec
aaa
adc
int3
mov
out
and
or
hlt
pop
push
into
adc
scas
xchg
push
jg
scas
fwait
bound
dec
daa
jae
xchg
jge
push
add
pop
test
lock
cld
hlt
call
shr
imul
adc
aaa
fbstp
pop
mov
clc
mov
test
fist
cmp
sub
xlat
pop
repz
and
inc
sbb
xlat
fs
in
fild
xchg
sbb
(bad)
mov
mov
in
jle
popf
mov
movs
(bad)
pop
out
push
mov
jmp
scas
out
mov
div
mov
popf
cdq
sub
fwait
mov
fucomip
mov
ror
add
repz
sub
(bad)
(bad)
sub
out
push
shl
loopne
pop
cmps
daa
neg
sub
cmps
pop
pop
test
xor
jae
repnz
shr
inc
jae
hlt
sar
push
popf
fstp
out
mov
mov
popf
jnp
sti
push
cdq
mov
(bad)
pushf
or
dec
push
jae
rcl
cli
pop
fsubr
outs
in
stos
icebp
outs
(bad)
pop
loope
jns
jae
in
mov
inc
mul
mov
mov
dec
or
xor
stc
fnstsw
xchg
(bad)
cmp
je
rcl
push
pop
cmp
out
daa
add
pop
sti
aaa
jmp
and
jne
mov
push
cmp
sbb
cld
arpl
in
out
inc
mov
out
mov
bound
fld
fisub
mul
leave
pop
and
dec
out
fist
sti
jae
(bad)
sbb
clc
mov
int
in
xor
ins
jb
cld
or
cwde
push
les
xor
mov
imul
rcl
jge
leave
lahf
sbb
jl
dec
xchg
mov
hlt
out
sar
(bad)
ja
inc
repz
mov
mov
pop
ret
xlat
pop
pop
repnz
enter
repnz
das
or
xchg
imul
push
retf
push
mov
xor
in
out
cmp
sti
scas
push
icebp
jnp
jg
mov
inc
jge
(bad)
(bad)
mov
out
mov
or
(bad)
test
sbb
scas
(bad)
jae
mov
js
into
push
sub
lea
inc
shl
idiv
scas
gs
push
mov
jns
out
inc
pop
jmp
popf
in
in
lds
fisttp
rcr
scas
out
jae
xchg
inc
nop
jle
cmovl
leave
fmul
mov
(bad)
pushf
mov
fbstp
rcl
pop
xchg
inc
(bad)
(bad)
fisttp
imul
(bad)
jmp
mov
test
mov
inc
push
push
jge
inc
sahf
fistp
outs
push
jns
aaa
rcr
pop
je
cmp
or
bnd
cmp
mov
mov
mov
je
fs
arpl
dec
loopne
mov
jmp
sub
mov
dec
cmc
pop
cmp
jg
sub
lds
adc
aad
outs
aas
shl
pop
stos
or
sub
and
test
call
sti
xlat
repnz
cmps
mov
int
fs
loope
scas
arpl
inc
ins
and
jl
addr16
jge
syscall
mov
inc
sub
(bad)
aaa
jmp
es
jge
add
mov
lock
cmc
push
push
imul
mov
mov
mov
mov
dec
lods
(bad)
(bad)
out
and
xor
int
clc
jle
mov
jnp
xor
sahf
imul
inc
sti
jmp
mov
(bad)
fnsave
ds
xchg
jae
ret
cmps
xchg
into
adc
cmps
and
xchg
mov
mov
sahf
mov
and
or
repz
sar
jae
mov
mov
pop
out
xchg
cmp
(bad)
add
clc
shl
pop
stc
(bad)
fmul
jg
jmp
push
pop
inc
add
daa
jmp
out
out
(bad)
or
mov
gs
mov
cmp
xchg
scas
jb
jae
ret
imul
pop
xor
rol
cld
fcmove
ins
cld
jg
cmp
out
xlat
jbe
repz
jecxz
jae
jle
dec
dec
pop
inc
into
ror
and
xchg
fisub
push
fxam
mov
sbb
add
out
adc
jmp
ins
xlat
cwde
jmp
ins
(bad)
(bad)
ds
sti
hlt
test
leave
cmp
repnz
and
pop
and
jmp
aas
addr16
ja
xor
test
out
fist
mov
movs
std
test
lahf
xlat
call
xchg
mov
xor
sti
cmp
jmp
inc
(bad)
mov
cmp
jg
jo
pmuludq
(bad)
(bad)
fistp
test
ins
inc
push
inc
xor
jo
push
in
pop
in
lods
pop
in
hlt
cmp
ja
test
jg
and
out
out
repz
fwait
mov
jp
xor
and
mov
data16
lahf
idiv
ins
(bad)
neg
or
or
dec
or
ror
leave
inc
adc
mov
mov
xchg
push
mov
movs
mov
sub
add
mov
cmc
cmp
in
(bad)
push
sbb
bound
retf
test
test
sbb
sbb
fcom
jecxz
sub
(bad)
xor
mov
pop
jl
movs
imul
cmc
cmp
mov
scas
jae
in
cdq
inc
inc
mov
xor
es
inc
int
jmp
and
hlt
sti
push
cwde
sub
sahf
and
mov
pop
nop
cli
push
push
and
(bad)
dec
push
and
push
inc
dec
inc
fimul
stc
cli
lea
mov
retf
sub
(bad)
int
comiss
cdq
sti
pop
loopne
sub
sahf
loope
inc
sbb
ror
pop
xchg
arpl
leave
xchg
add
push
sub
dec
cmp
mov
pop
xchg
push
neg
xlat
ss
jmp
gs
pop
inc
js
dec
fisub
scas
cli
sub
out
enter
addr16
movs
jp
out
cmps
mov
gs
sub
in
jg
pop
inc
jge
int3
pop
jle
pop
dec
out
pop
jnp
mov
pop
cmc
ins
xchg
(bad)
pslld
ss
out
lods
mov
aas
sub
stc
inc
aas
std
(bad)
cmps
shl
sbb
pop
jle
mov
jno
outs
mov
pop
out
mov
lods
ds
jns
sahf
inc
sti
and
or
repz
dec
les
leave
dec
in
fidivr
(bad)
cmp
dec
push
lahf
jae
jg
cld
loopne
movs
lods
pop
mov
ftst
sti
fucomp
(bad)
mov
out
cwde
(bad)
int
test
ins
or
fdivp
and
arpl
mov
jl
and
sbb
lods
ja
nop
inc
mov
idiv
jmp
adc
push
pop
scas
push
fnstenv
sbb
cs
dec
cmp
(bad)
jmp
push
and
call
mov
lahf
std
aam
into
jns
in
jle
lock
xor
adc
dec
pop
cmp
fist
adc
xchg
xor
stos
cmp
repz
xchg
int
jg
clc
aaa
hlt
xchg
lahf
outs
imul
repz
pop
icebp
ins
pop
mov
loopne
push
retf
mov
retf
xchg
sbb
sbb
je
(bad)
xchg
fnstsw
test
mov
rsqrtps
pop
fdiv
and
fwait
imul
in
inc
std
retf
inc
pop
cmps
call
jnp
pushf
daa
xor
loopne
push
xchg
mov
mov
lods
mov
xchg
scas
aas
jl
lods
test
psubw
cmps
fwait
sbb
mov
pop
int
sub
scas
pop
scas
int
mov
imul
(bad)
out
ds
push
jmp
cmc
popa
pop
addr16
pusha
adc
cmp
fs
sub
adc
inc
int
jle
mov
jne
ds
fs
and
push
mov
pop
sub
sahf
push
hlt
cmps
(bad)
jmp
lahf
mov
cmps
(bad)
inc
or
cmps
adc
dec
xchg
add
test
add
adc
fwait
adc
and
dec
cs
xchg
dec
pop
loope
mov
fwait
sbb
push
xor
les
push
(bad)
es
cmp
mov
mov
and
loope
or
push
sahf
mov
pop
mov
es
sub
pop
adc
dec
dec
aad
dec
cmps
test
adc
lods
pop
mov
push
pushf
ds
mov
stos
push
mov
inc
movs
sar
add
sbb
mov
push
addr16
add
jmp
sub
and
jmp
sbb
pushf
int3
xchg
push
dec
stos
xor
jno
and
ins
mov
mov
push
xor
push
sbb
ror
jecxz
inc
inc
(bad)
xor
movs
jmp
int
or
out
inc
ror
push
inc
jecxz
dec
popf
jmp
dec
inc
out
repnz
jmp
sub
mov
cli
push
pusha
mov
pop
mov
mov
mov
pop
les
imul
mov
and
jge
(bad)
cld
stc
sti
popa
mov
xchg
push
mov
dec
push
aas
jge
(bad)
popa
js
clc
ins
pop
xchg
inc
iret
sbb
ss
(bad)
dec
adc
push
out
mov
int
mov
push
ds
jge
(bad)
popa
cwde
xor
ins
pop
xchg
inc
iret
sbb
aaa
aas
or
push
mov
lods
jns
test
mov
pop
dec
fs
adc
adc
addr16
shl
push
loop
or
pop
xor
jmp
dec
pusha
push
jo
fild
jbe
mov
mov
es
das
jbe
daa
jns
sbb
ret
ins
lea
dec
add
sub
inc
es
scas
inc
inc
xor
and
imul
pop
adc
jmp
jnp
dec
dec
ja
jne
xor
mov
add
jae
adc
jp
and
push
mov
jne
js
inc
and
jp
in
jae
and
mov
or
mov
adc
push
imul
jbe
retf
inc
add
add
stc
xchg
mov
push
mov
inc
ja
mov
mov
add
pop
leave
sbb
add
cmps
stos
test
xchg
addr16
cmp
pop
mov
inc
(bad)
and
scas
scas
rcl
push
dec
xchg
push
int
add
xchg
push
dec
pop
jbe
mov
pop
and
lock
bound
pop
adc
add
push
mov
pop
cmp
sub
jmp
outs
in
ja
pushf
outs
jb
std
xchg
xor
(bad)
sub
test
xor
in
dec
add
outs
xor
addr16
mov
cmp
mov
xlat
dec
(bad)
mov
mov
and
mov
mov
sub
lods
mov
jns
mov
jp
mov
loopne
xchg
push
icebp
arpl
mov
or
and
mov
dec
nop
xchg
ret
sub
inc
mov
cmp
mov
aad
xchg
repnz
xchg
add
xor
add
pushf
stos
push
jne
inc
test
xchg
inc
mov
push
add
int
sbb
dec
pop
inc
adc
int3
rcr
hlt
adc
push
dec
jl
cmp
mov
stos
or
out
fld
fcom
adc
and
sub
nop
xchg
sbb
xlat
jb
mov
mov
imul
jl
and
dec
mov
mov
ins
loop
stc
jmp
dec
dec
retf
cmp
xchg
mov
adc
adc
or
push
jmp
adc
idiv
fwait
add
fcmove
nop
and
pop
add
fisttp
nop
aas
scas
(bad)
not
push
cmc
dec
push
mov
leave
call
popf
adc
data16
std
xchg
(bad)
xchg
(bad)
loope
pop
mov
mov
pop
cmp
(bad)
(bad)
pop
mov
pop
adc
jge
sub
imul
jae
inc
mov
inc
loopne
mov
or
cmp
(bad)
dec
cli
gs
iret
adc
jp
sub
mov
dec
push
inc
dec
scas
hlt
pop
mov
xchg
xor
int
fnsetpm(287
cmp
sti
arpl
inc
pop
push
xor
dec
mov
(bad)
shl
mov
bswap
xchg
es
lods
out
jno
and
lods
es
aas
and
lods
add
jmp
push
stos
and
add
(bad)
pushf
cmp
aaa
sub
dec
xchg
mov
jmp
ins
pop
jmp
stos
aad
sub
jae
fnstcw
ins
fcmovbe
xchg
mov
sub
inc
mov
int3
scas
shl
mov
fadd
add
outs
ficomp
sbb
dec
pop
clc
jno
mov
xchg
sub
sbb
or
in
pop
mov
cmps
shr
inc
mov
loop
popf
pop
dec
sub
sub
mov
imul
add
shl
stc
push
jmp
and
stos
test
int3
mov
arpl
xchg
cmp
retf
es
mov
sub
jle
add
stos
int
or
pop
mov
daa
movs
test
xchg
xor
(bad)
popa
in
data16
movs
and
fs
test
or
push
push
in
sub
mov
and
jno
push
push
add
adc
add
daa
push
pop
pop
clc
fsubr
leave
iret
sub
jb
dec
imul
jo
inc
mov
cmps
stos
data16
or
dec
dec
fwait
jecxz
sub
repz
sub
xchg
push
aas
adc
push
inc
mov
outs
xor
movs
dec
(bad)
jmp
sbb
and
xor
mov
mov
rol
enter
mov
lods
sti
inc
test
pop
cmp
data16
nop
test
test
cmps
ins
sub
(bad)
(bad)
inc
cmp
rcr
fdiv
mov
retf
in
adc
(bad)
push
movs
sahf
add
enter
aad
xchg
outs
call
out
inc
lods
nop
pop
and
dec
popa
pop
or
inc
arpl
xchg
scas
dec
int
dec
and
cli
das
or
xor
repnz
push
iret
fs
mov
cmp
jmp
inc
es
data16
and
or
jb
or
loop
sbb
pushf
sbb
pusha
imul
or
or
xchg
sbb
ins
mov
aas
xor
xchg
retf
aad
pop
and
int3
add
mov
iret
retf
into
mov
jo
xchg
and
mov
add
in
sti
test
int
div
add
rcr
jns
dec
mov
call
hlt
mov
or
push
lods
and
and
int3
pop
cmp
xchg
movs
adc
stc
sub
into
jo
mov
in
or
jb
or
jnp
xchg
dec
push
cmp
mov
inc
in
ret
test
mov
dec
xor
(bad)
(bad)
sub
mov
loop
pop
retf
cmps
cmp
mov
icebp
and
ins
cli
mov
mov
push
xchg
mov
mov
mov
adc
outs
pop
xor
mov
push
dec
ja
stos
push
cld
jle
dec
inc
in
gs
pop
cmps
cmp
xor
(bad)
xchg
push
cld
push
cld
scas
je
(bad)
into
mov
sub
imul
mov
out
and
sbb
ror
mov
lock
mov
inc
fist
hlt
pminsw
out
xlat
cmp
inc
aaa
jno
mov
mov
xchg
push
pop
(bad)
cs
comiss
test
mov
xchg
iret
ret
jle
enter
rcl
xor
sub
and
addr16
pop
push
fld
int3
mov
jbe
adc
retf
(bad)
push
xchg
jb
cli
leave
sti
add
retf
mov
sub
mov
loop
cmps
call
push
and
xor
adc
rcl
push
mov
lds
je
mov
mov
retf
test
neg
mov
xor
sbb
jne
sahf
dec
mov
leave
in
sti
lods
jns
daa
ret
loope
mov
outs
mov
ret
and
into
and
(bad)
call
xchg
pop
cmps
xchg
std
jmp
ins
repz
lods
jb
jmp
fdiv
adc
call
xor
lock
adc
inc
or
mov
stos
push
ins
and
fmul
loop
test
test
adc
adc
mov
std
(bad)
in
and
fst
adc
es
sub
sub
and
xor
add
cli
inc
push
add
popf
dec
syscall
pop
inc
add
xchg
mov
repz
leave
loopne
sub
sbb
ret
dec
push
test
ror
jo
push
fdiv
mov
cld
test
mov
sub
push
(bad)
sti
aas
fistp
jle
ins
mov
mov
(bad)
stos
adc
int
pop
jno
loop
aaa
aad
dec
iret
sbb
mov
dec
mov
ret
add
out
or
lahf
xor
(bad)
sub
lods
add
in
sahf
jle
add
sbb
cmp
retf
outs
pop
sbb
sahf
enter
cmp
jae
push
jno
pop
loopne
mov
leave
and
cdq
stc
mov
pop
jmp
shl
cmp
push
lahf
cdq
aam
ds
mov
arpl
iret
out
adc
sub
xchg
mov
mov
push
inc
and
cmp
daa
sub
mov
shl
in
addr16
fs
(bad)
int3
sub
cmps
xchg
scas
inc
ficom
arpl
sub
xor
aam
add
adc
push
js
mov
xor
pop
cmove
adc
arpl
push
sbb
push
retf
jmp
mov
(bad)
pop
and
pushf
add
(bad)
js
in
dec
mov
enter
cmp
in
stos
outs
xor
push
pushf
pop
leave
repnz
push
add
push
call
push
inc
mov
frstor
push
scas
push
inc
mov
dec
test
int3
mov
pop
cmps
cmps
push
imul
ror
add
fst
loopne
lahf
sub
ins
je
push
stos
out
xor
sub
outs
jne
mov
cmp
or
lock
in
popa
repnz
mov
cli
fs
jo
sub
add
in
in
sbb
xchg
xchg
aas
push
sbb
fwait
ret
push
adc
gs
test
xor
scas
rcl
inc
ret
repz
jg
push
dec
mov
jo
jnp
xor
xor
mov
daa
xchg
cmp
fwait
inc
cli
ins
aam
mov
movs
pop
das
dec
mov
es
clc
cmp
xor
xor
scas
in
outs
mov
mov
inc
cld
stc
shl
jle
dec
xlat
and
push
jns
dec
scas
into
mov
pop
rcl
test
mov
sub
pop
popa
xchg
or
mov
ret
pushf
int3
repnz
out
mov
mov
inc
ins
mov
ins
mov
retf
leave
xchg
cmp
push
aaa
int3
jnp
mov
lods
mov
ret
(bad)
xor
ins
gs
jae
movs
add
xor
and
add
dec
pop
(bad)
push
dec
mov
stc
pusha
pop
add
push
dec
and
in
pop
pushf
cs
popa
fucomp
sti
retf
cmps
jmp
movs
jno
daa
cld
push
cmp
xchg
(bad)
outs
cmp
stc
dec
out
arpl
mov
iret
pop
sbb
jnp
xor
jmp
stos
aad
mov
jecxz
adc
jmp
arpl
fs
lods
or
add
scas
mov
loope
mov
mov
mov
inc
or
sahf
mul
or
push
xchg
(bad)
idiv
cmp
lds
jno
test
push
gs
adc
jbe
scas
xchg
jl
in
xor
mov
stos
sub
mov
xor
jno
jno
mov
pop
mov
cmp
inc
inc
and
out
add
call
sub
aaa
es
in
xchg
sub
mov
lahf
inc
mov
add
ret
jmp
aas
push
outs
pop
dec
fcmovnbe
fs
push
jp
xor
(bad)
jge
ins
inc
jo
out
pusha
push
mov
add
push
cmp
jns
or
xor
retf
xor
jae
xchg
cmps
push
adc
sar
sar
cmps
lock
mov
imul
sbb
cmps
jb
or
push
in
std
fwait
int
jl
daa
dec
enter
xor
shl
pop
push
and
inc
call
std
aas
adc
loope
inc
adc
pusha
and
mov
cli
inc
inc
mov
jg
(bad)
cmp
pop
pop
fild
add
add
mov
mov
or
xchg
or
pop
dec
xchg
imul
pop
pushf
xchg
and
data16
call
call
rcl
jb
(bad)
sti
mov
jae
cmp
dec
mov
(bad)
cmps
inc
jmp
pop
adc
add
(bad)
inc
dec
inc
jp
sbb
or
movs
in
and
pop
inc
shl
mov
ds
xchg
sub
fst
cwde
jecxz
or
add
es
adc
xchg
xor
push
cdq
cmp
and
inc
mov
stos
xchg
add
mov
out
nop
push
inc
and
call
into
inc
pop
sbb
(bad)
push
call
outs
ret
stc
push
or
sbb
xor
repnz
mov
leave
bound
cmp
xchg
cs
mov
cmp
cmp
stos
mov
loopne
loop
lods
movs
movs
test
gs
xor
mov
(bad)
loope
cdq
xchg
nop
inc
outs
jmp
push
jbe
mov
sbb
stos
stc
imul
inc
sbb
xchg
jns
xlat
mov
fsubr
xchg
cdq
scas
jecxz
fwait
cmp
pop
cmp
mov
repz
mov
das
fs
jl
pop
push
and
(bad)
in
dec
add
sbb
les
(bad)
xor
add
enter
push
imul
lods
in
add
dec
pop
xchg
loopne
and
(bad)
push
movs
dec
or
xlat
jp
cld
pop
imul
jns
dec
adc
mov
inc
mov
mov
push
mov
cdq
in
ficom
mov
mov
xor
xchg
mov
mov
aas
jne
xor
or
enter
cwde
pusha
pusha
shl
in
cmp
push
ret
pop
lds
xor
shr
addr16
sbb
jecxz
xor
sub
ret
push
push
imul
lea
movs
pop
scas
sbb
sbb
aad
(bad)
popf
hlt
mov
adc
(bad)
aaa
jecxz
or
mov
in
aad
sub
mul
js
leave
add
add
ins
js
outs
or
ret
jnp
and
int3
pusha
cmc
adc
sti
xchg
(bad)
test
leave
pusha
pcmpeqb
xchg
or
fs
hlt
test
cld
and
push
leave
jmp
lea
inc
(bad)
jp
pop
cmp
pop
jge
mov
aam
jno
inc
jb
addr16
and
cmp
mov
cli
dec
or
int
mov
pop
push
shr
loop
pushf
inc
cmovae
mov
retf
mov
or
dec
and
inc
mov
or
lods
test
and
dec
adc
and
push
mov
ss
push
sub
pusha
test
(bad)
pop
icebp
cmp
or
xchg
outs
cmps
cmp
loope
push
(bad)
rol
mov
jb
int3
cmps
nop
daa
cmp
adc
sub
mov
mov
in
add
pop
test
push
push
test
aas
dec
push
xor
fdiv
pop
(bad)
je
outs
or
pop
xchg
or
cmps
adc
or
sub
int
push
mov
lahf
sub
xor
mov
lahf
push
xor
retf
or
mov
push
inc
movs
movs
mov
mov
cmp
or
bound
xchg
imul
repnz
retf
ror
adc
cli
cmp
push
add
and
xor
stos
jno
mov
xchg
adc
and
fldcw
and
sbb
jp
je
jge
xor
jmp
js
test
in
out
lock
lods
xor
pop
cmp
loopne
mov
cmp
icebp
mov
mov
(bad)
mov
xor
push
(bad)
loop
jae
dec
pop
jl
hlt
sahf
mov
mov
ins
(bad)
bound
dec
les
aaa
mov
sub
(bad)
push
out
jb
scas
stos
lods
pusha
push
jl
cmc
mov
shl
xor
ficom
mov
imul
leave
aam
(bad)
fmul
imul
jle
jo
xor
mov
sahf
sub
xchg
in
hlt
pop
out
mov
icebp
xchg
or
push
cs
mov
aad
xchg
cdq
inc
xor
xchg
pushf
adc
mov
pushf
push
push
xor
adc
ret
cmp
push
lods
mov
mov
loop
adc
fdiv
jmp
dec
xor
fidivr
mov
shr
mov
mov
or
test
xor
shl
ret
in
rcl
aas
nop
xchg
int3
xchg
fwait
and
mov
pop
xlat
adc
pop
out
and
repz
(bad)
mov
mov
sbb
mov
xchg
and
loop
adc
fs
inc
stos
push
push
adc
sub
jmp
mov
test
not
in
rcr
div
mov
test
xchg
pop
hlt
pop
aaa
sub
inc
mov
cmp
jmp
in
stos
in
mov
dec
fld
pop
scas
imul
in
pushf
ror
gs
jno
and
test
jmp
ficomp
push
fidivr
sti
ret
jo
ror
cs
push
ss
mov
fadd
out
stc
xlat
xchg
aas
sbb
jnp
add
div
loopne
sub
call
sbb
stc
and
sub
mov
scas
mov
dec
pop
pusha
pop
imul
push
ss
mov
mov
jb
stos
and
test
cmp
add
mov
mov
adc
lea
jo
mov
or
inc
scas
js
test
xor
mov
mov
mov
ffreep
pop
adc
cli
mov
(bad)
cmp
cld
sbb
jnp
xor
stc
into
repz
idiv
out
mov
xor
(bad)
xchg
sub
jns
push
push
cmp
sub
(bad)
inc
push
mov
xlat
pop
int
rol
xchg
icebp
pop
push
xor
mov
ror
imul
jg
jns
(bad)
jmp
or
sti
sub
push
pop
rcr
push
aas
repz
arpl
xchg
call
xchg
ret
hlt
adc
or
out
je
push
pshufw
mov
mov
pop
push
test
lods
ja
add
mov
mov
out
sub
mov
out
int3
iret
addr16
jnp
shl
mov
cld
xor
mul
inc
cmp
mov
scas
xor
ins
(bad)
daa
mov
(bad)
jmp
outs
mov
movs
adc
cmp
sahf
popf
jns
xchg
sbb
popa
lods
push
(bad)
imul
mov
adc
into
dec
std
aas
retf
cmp
jb
arpl
xchg
adc
rcr
je
stc
push
(bad)
sahf
mov
pop
mov
cmp
out
sbb
ins
imul
mov
pushf
sbb
lods
xchg
cs
push
jne
in
dec
sub
jl
out
lods
out
jge
cmps
push
mov
ficom
stos
cmp
(bad)
xchg
xchg
ss
push
pop
xchg
mov
call
mov
in
push
push
pushf
and
sub
cmc
test
scas
fst
scas
pop
xchg
add
sahf
pop
outs
retf
pop
enter
jle
sbb
scas
(bad)
test
mov
movs
cmp
push
push
(bad)
jb
cmps
mov
sbb
sub
cmp
aad
xchg
fistp
daa
pop
sar
repnz
pop
mov
idiv
and
jmp
adc
out
push
jge
sbb
adc
add
bsr
ficomp
pop
adc
cmp
les
mov
add
lea
push
jae
test
in
fisub
adc
pop
mov
add
pusha
push
adc
mov
pop
dec
shl
outs
mov
dec
shr
sbb
clc
pop
mov
add
sti
idiv
jp
inc
pop
sbb
mov
add
sbb
inc
xor
jmp
in
inc
add
les
loope
mov
stc
add
cmp
inc
shl
jne
mov
xchg
xchg
sbb
movs
imul
sar
ins
add
mov
sbb
pop
(bad)
dec
dec
mov
jge
mov
xchg
sbb
push
push
or
dec
out
push
sbb
cmp
inc
in
mov
push
jb
jns
cmps
pop
enter
jle
sbb
inc
pop
lock
jecxz
pop
jmp
push
mov
push
push
test
xchg
clc
into
pop
sub
pop
mov
jl
push
cld
mov
dec
(bad)
pop
lods
dec
push
sbb
pandn
stos
jbe
inc
aas
rcr
shl
fcom
mov
pop
int3
dec
adc
jne
inc
xor
aad
sub
pop
out
imul
jle
mov
jo
xor
retf
adc
adc
cwde
lods
mov
mov
pop
dec
dec
(bad)
lahf
or
retf
mov
mov
cmc
cld
and
cld
xcrypt-ecb
cmps
bt
inc
pop
add
inc
movs
pop
inc
jecxz
pop
dec
jmp
or
test
popf
imul
pop
or
lods
lods
mov
aad
pop
test
adc
aad
popf
leave
stc
pop
xor
ror
out
in
cmp
loope
jae
push
or
cmp
sahf
cmp
inc
scas
jmp
sub
or
lar
mov
mov
loop
ds
icebp
inc
adc
dec
pushf
inc
mov
pop
add
out
mov
ret
and
xchg
jl
dec
pop
cmp
je
xchg
retf
retf
outs
(bad)
sbb
inc
or
mov
shr
in
cmp
sub
out
mov
xchg
jb
dec
std
lea
or
xchg
je
ret
loopne
push
ret
int3
cwde
mov
shr
xor
shl
xor
shr
test
idiv
sub
clc
neg
mov
retf
pop
je
gs
movs
das
pushf
and
cmp
mov
aaa
inc
jb
or
retf
mov
jg
(bad)
cli
mov
popa
ins
(bad)
jle
adc
popf
xor
je
sub
lods
cdq
(bad)
mov
cs
(bad)
fsubr
sbb
outs
icebp
push
cmc
mov
and
mov
mov
cld
arpl
mov
mov
sahf
mov
pop
xchg
ret
mov
movs
and
inc
xor
dec
xchg
fisubr
sub
and
jnp
pop
dec
dec
sbb
ja
jb
and
shl
push
loopne
push
ja
mov
push
jp
pop
out
cmc
rcr
sbb
push
mov
stc
adc
jmp
call
out
jg
fmul
(bad)
addr16
imul
xchg
push
or
je
or
dec
push
pop
mov
int3
xor
push
adc
test
jns
scas
test
test
pop
ret
aam
sub
adc
xlat
mov
jecxz
popf
dec
jns
mov
jbe
adc
test
mov
sar
adc
pop
mov
pop
sub
stc
fwait
and
mov
fs
int3
or
xor
mov
out
add
enter
cld
hlt
int3
inc
push
jns
jnp
in
int
mov
stos
inc
pushf
mov
add
les
xchg
jl
xor
xchg
mov
and
xchg
es
jl
push
das
movs
lods
jmp
mov
les
mov
fcmovb
jns
jo
(bad)
je
nop
adc
fsubrp
pop
cmp
pop
inc
push
cmps
cwde
ins
(bad)
int3
adc
lock
mov
in
and
ror
out
ins
dec
fisttp
outs
sub
push
pushf
mov
test
xor
ins
push
jo
retf
xor
mov
add
dec
dec
jle
xchg
xchg
and
in
mov
add
mov
pop
mov
xor
push
imul
xchg
pop
not
lods
pop
cdq
mov
xor
jmp
stos
xchg
fbstp
cwde
repnz
jmp
cmp
mov
cmp
scas
dec
add
add
cmp
scas
and
xchg
sub
(bad)
mov
jmp
and
mov
and
pop
fidiv
xchg
(bad)
cmp
iret
mov
push
daa
mov
(bad)
cld
shl
push
push
jecxz
mov
cwde
iret
xor
popf
adc
and
movs
cmp
sub
repnz
gs
inc
cwde
shr
sbb
mov
(bad)
adc
icebp
dec
iret
jae
or
loopne
or
daa
push
jno
and
mov
mov
jmp
mov
stos
inc
call
and
inc
mov
outs
mov
xor
and
aas
push
jle
cmc
ja
sub
push
push
mov
mov
fcmovbe
cbw
lods
adc
xor
jae
ds
or
into
and
xor
inc
jg
sub
sub
dec
pop
cmp
repnz
pop
dec
in
(bad)
fnsave
cmp
test
loopne
fadd
jmp
ds
pop
cmps
mov
or
mov
dec
mov
inc
sub
push
lahf
push
dec
cli
movs
push
ret
call
mov
push
inc
xor
mov
imul
dec
jmp
jecxz
and
or
loope
add
shr
xor
cld
and
push
ins
sub
imul
push
aas
aas
js
scas
inc
mov
cmp
mov
mov
inc
mov
retf
out
push
(bad)
int
int3
pop
lock
lods
adc
adc
and
xchg
out
xor
cwde
ror
mov
add
xchg
test
ins
adc
xor
sahf
xchg
in
add
mov
bnd
(bad)
aas
in
stc
(bad)
fnstcw
imul
jmp
mov
cmp
jno
test
mov
sbb
cmps
gs
xor
in
jecxz
pop
test
lods
sub
push
and
mov
dec
lods
fcmovbe
push
lods
enter
dec
imul
adc
mov
imul
mov
leave
xor
mov
les
add
dec
out
mov
xor
scas
pop
popf
xchg
ss
std
xchg
fwait
adc
xor
inc
xor
lock
int3
pop
aas
int3
xchg
or
sub
mov
cdq
cli
test
cmp
and
lods
fisub
pop
cli
or
mov
sbb
dec
sahf
pop
cmp
retf
pop
jp
mov
out
int3
jecxz
sbb
jmp
or
dec
adc
or
sub
aad
pushf
int3
jg
ror
add
push
lds
xchg
push
sub
daa
(bad)
jmp
shl
cli
daa
inc
sub
or
mov
inc
mov
fmul
xchg
cli
stos
pop
sub
cmps
and
push
sub
loop
cmps
mov
scas
ret
test
ret
mov
xor
js
push
xor
scas
jo
bound
outs
aas
mov
xchg
scas
and
aas
call
adc
(bad)
mov
(bad)
out
inc
std
lods
test
sbb
xor
pop
cmp
mov
add
dec
jg
imul
and
sbb
or
fcom
jge
xchg
inc
push
rcr
and
push
cmps
jmp
lds
mov
inc
rcr
movs
outs
dec
in
xor
mov
cld
and
(bad)
xchg
jle
stos
sbb
push
jno
pop
xchg
test
outs
mov
sub
sbb
inc
mov
mov
mov
cwde
pop
mov
popa
mov
sbb
jo
mov
inc
in
cmp
and
jp
stc
test
xor
sbb
push
js
lea
dec
xchg
inc
or
movs
fs
movs
mov
mov
cmp
fwait
adc
ins
rol
mov
repz
push
retf
and
bound
loope
mov
out
mov
push
test
pop
jne
mov
add
push
inc
std
test
js
dec
fst
test
aaa
xor
fstp
jnp
dec
gs
lahf
inc
lea
cdq
xor
out
mov
jnp
movs
(bad)
jmp
jae
aam
xchg
xor
lds
scas
dec
popf
or
in
and
into
sub
jge
jmp
into
sbb
in
xchg
mov
imul
cmps
mov
jbe
test
stos
clc
dec
pop
ins
out
cmp
(bad)
shr
iret
jbe
mov
dec
sbb
jge
fcomp
or
nop
mov
test
adc
in
(bad)
test
call
iret
push
fwait
jbe
mov
shl
mov
push
mov
and
sbb
adc
push
jnp
cmp
int
sbb
movs
adc
into
sar
inc
fs
lods
es
jp
adc
rcl
mov
jns
sbb
xor
or
lds
fsubr
mov
pushf
mov
pop
out
inc
test
(bad)
xchg
std
popf
sub
mov
or
(bad)
jmp
lds
xlat
sub
jb
jmp
movs
daa
sbb
mov
nop
loop
sub
test
xchg
lods
ja
fcomp
or
xchg
enter
js
enter
cmp
xchg
xchg
sub
cmp
and
(bad)
pop
cdq
mov
fisubr
test
test
mov
ror
sub
mov
push
clc
fwait
xor
push
and
gs
or
pop
mov
out
and
mov
mov
adc
jnp
aam
iret
add
cmp
sar
mov
add
aam
leave
ficomp
add
arpl
xchg
mov
ret
outs
push
jp
sub
sbb
xor
fmul
test
(bad)
test
xor
xchg
fisubr
jb
inc
fist
ret
call
cmps
and
ret
and
lds
pop
data16
jle
pop
inc
pop
dec
dec
cmps
ror
sbb
fcom
push
jle
inc
jbe
or
sbb
stos
cwde
popf
jnp
pop
sub
mov
in
inc
and
and
mov
and
mov
fistp
(bad)
pop
xchg
push
pop
test
test
div
idiv
adc
(bad)
int3
fisttp
add
int
add
xchg
les
sbb
add
fs
mov
inc
rcr
neg
sub
jae
mov
mov
ror
push
dec
xchg
mov
popf
push
inc
pop
push
inc
mov
add
jp
fisttp
out
or
daa
mov
mov
addr16
std
lock
push
mov
scas
pop
scas
enter
jmp
jnp
fcomp
xor
out
je
dec
mov
stc
add
inc
push
scas
test
cld
repz
repnz
repnz
adc
(bad)
jae
sbb
mov
xor
sub
ror
les
out
into
pop
pop
mov
sub
in
mov
push
xchg
xor
addr16
jb
push
inc
ret
inc
sbb
int3
or
push
pop
sbb
icebp
xor
or
mov
cmc
ins
add
stos
mov
and
mov
add
mov
add
cmp
pop
icebp
loopne
cmc
icebp
lahf
push
mov
movs
sbb
jns
add
shr
xchg
loope
mov
xlat
inc
mov
inc
inc
mov
jnp
addr16
jno
(bad)
or
dec
stos
and
pop
iret
(bad)
arpl
ret
sar
jmp
mov
aas
test
pop
jp
loopne
jge
dec
outs
or
push
out
add
inc
mov
nop
inc
test
enter
data16
(bad)
cmps
dec
shr
jge
shr
mov
mov
call
pop
xor
jecxz
test
pop
push
inc
mov
(bad)
pop
imul
test
jne
mov
lods
sbb
jnp
fmul
mov
(bad)
fs
nop
push
push
jg
test
aad
test
or
mov
test
mov
mov
dec
push
inc
dec
sar
mov
out
jne
dec
outs
(bad)
xchg
lds
ds
test
cmp
ins
push
mov
nop
mov
(bad)
repnz
test
dec
ja
xchg
pop
inc
sub
mov
ror
jne
push
jg
ret
cwde
fld
ds
push
inc
jecxz
dec
and
jno
xchg
xor
pop
stos
lahf
int3
mov
jg
je
mov
push
push
jo
cld
(bad)
jmp
ss
outs
ds
sub
ret
push
cmp
out
in
push
(bad)
mov
cmp
and
nop
loopne
pop
mov
int3
mov
daa
test
mov
pushf
ret
hlt
scas
test
mov
arpl
jmp
or
and
ret
ja
scas
aam
lods
mov
aas
lods
ret
adc
in
jne
jns
cs
dec
leave
dec
sahf
xor
fisttp
addr16
and
(bad)
cmps
js
sahf
jb
xchg
in
add
xchg
lea
mov
dec
ja
in
add
adc
sub
es
inc
repz
push
(bad)
ja
inc
aad
dec
fs
sbb
mov
add
in
adc
dec
push
pop
push
add
(bad)
int3
mov
out
jmp
sbb
mov
mov
adc
or
adc
mov
add
js
fimul
mov
xor
jo
in
add
out
mov
sub
stos
clc
xchg
adc
loopne
lahf
xor
scas
jge
call
stc
ret
lahf
xchg
call
ins
(bad)
fisttp
mov
jae
jno
adc
jp
or
lahf
xlat
sub
pop
sbb
cmp
pop
sbb
aam
cmp
fimul
mov
ret
sbb
push
sub
scas
test
aaa
sahf
pop
cs
mov
pop
not
adc
inc
inc
xchg
xchg
or
jl
ins
retf
mov
(bad)
fstp
sahf
aam
shl
ds
cmp
test
nop
ins
push
mov
mov
and
les
cmp
push
test
push
lahf
loope
jg
lea
rcl
xlat
jmp
jmp
addr16
pop
ret
cmp
repnz
mov
inc
ja
sbb
xchg
cld
je
shr
cld
imul
imul
jae
push
fwait
mov
stos
in
and
out
mov
stos
pusha
(bad)
lock
push
outs
xchg
xchg
xor
mov
sbb
xchg
push
ror
int
pop
daa
adc
pop
pop
fld
repz
stos
ror
or
or
outs
movzx
pop
xor
xchg
or
sbb
jbe
mov
push
repnz
rcl
jmp
imul
xchg
and
jbe
or
add
addr16
lea
dec
repz
pop
enter
dec
pop
sbb
push
adc
push
shr
inc
mov
jp
(bad)
cld
imul
dec
xchg
xchg
lods
retf
inc
jle
push
(bad)
sub
test
jbe
lahf
jmp
sbb
lahf
pushf
fidiv
cmc
clc
pop
popf
mov
xchg
idiv
retf
je
sbb
mov
mov
mov
mov
cs
adc
push
inc
mov
jmp
xchg
daa
push
scas
fld
cs
nop
and
jmp
lods
shl
mov
aam
stc
jo
sub
xchg
out
xchg
(bad)
jbe
je
mov
mov
aad
or
stos
mov
outs
push
mul
retf
dec
or
cmp
aam
hlt
(bad)
cmp
push
(bad)
lods
sahf
bound
push
ror
clc
jnp
push
js
adc
icebp
aaa
inc
cmp
call
(bad)
mov
xlat
pop
adc
sbb
and
outs
out
int3
jecxz
jge
mov
lds
or
inc
mov
aad
mov
out
inc
es
push
push
(bad)
mov
push
and
rol
cmp
jg
and
mov
mov
mov
(bad)
jle
mov
dec
xor
in
jne
sub
es
call
leave
or
mov
(bad)
out
mov
xchg
push
inc
push
jecxz
stos
movs
aas
xchg
fs
leave
mov
mov
jo
xor
sbb
inc
add
push
sbb
daa
xor
enter
xchg
shl
ret
outs
mov
cmp
pop
fstp
out
add
pop
cmc
xchg
mov
mov
or
std
inc
inc
(bad)
or
ds
(bad)
rol
repnz
inc
stos
push
stc
sbb
push
or
outs
rcr
push
push
or
dec
(bad)
jnp
imul
dec
cwde
sbb
lds
cmp
punpckhdq
dec
xor
push
outs
mov
mov
mov
and
fsubr
mov
fcom
enter
and
stc
arpl
(bad)
pop
cmps
jb
mov
adc
pop
cmps
fisubr
test
repnz
xchg
popf
mov
mov
jno
add
mov
pop
pop
jle
fisubr
pop
sub
into
movs
outs
or
xchg
aad
stc
dec
or
nop
inc
jecxz
aam
test
sar
sbb
jno
je
dec
imul
out
adc
or
ror
retf
push
lock
enter
lods
aas
sbb
jl
inc
into
and
ret
pop
into
xchg
adc
xor
sub
mov
popf
mov
xor
xchg
test
jp
scas
mov
mov
es
rol
cmps
test
mov
xor
arpl
hlt
adc
lds
iret
push
mov
ret
shr
xchg
pop
xchg
gs
add
stc
imul
les
sbb
mov
js
mov
arpl
popa
mov
mov
inc
sub
add
fcompp
jl
ins
in
std
push
dec
or
mov
dec
loope
mov
hlt
pop
add
mov
fnstenv
add
sub
in
cmc
mov
pop
js
push
test
xor
xchg
sbb
jns
cmp
mov
sub
sub
not
mov
xchg
aaa
xchg
push
retf
retf
repnz
test
dec
loope
push
sub
leave
sahf
or
loop
retf
mov
scas
dec
mov
data16
bound
xor
mov
mov
jb
push
pusha
cmp
dec
mov
add
xchg
js
jg
add
call
cmp
popf
mov
aas
cmp
xor
mov
lahf
pop
adc
fs
dec
add
sub
xchg
fld
je
ins
imul
sub
lea
sub
and
pop
ss
mov
jb
xor
dec
mov
ret
mov
lea
inc
lock
inc
push
popa
je
xor
shl
mul
xchg
sbb
inc
xlat
sbb
push
add
inc
jne
js
adc
dec
aad
and
xor
and
ds
mov
or
shr
jp
mov
pop
sbb
test
mov
or
dec
lods
jns
xchg
mov
cmps
pop
push
out
ss
mov
mov
out
lahf
ins
dec
push
xchg
cmp
and
xor
mov
push
test
adc
cmps
pop
out
mov
in
scas
addr16
xchg
sahf
icebp
out
enter
and
stos
pop
pop
xchg
jmp
push
ins
or
mov
shl
push
movs
test
movs
dec
and
in
retf
jne
in
sub
xchg
mov
popa
mov
shr
loope
or
fcmovne
sahf
std
sbb
out
(bad)
pslld
sbb
add
jge
dec
test
sahf
in
mov
arpl
in
mov
ret
lods
imul
push
dec
imul
xor
daa
push
xchg
in
adc
stc
iret
cli
cwde
adc
mov
dec
push
mov
out
xchg
push
xchg
sub
repz
xlat
sahf
xor
cmp
or
mov
ds
or
hlt
loope
xchg
xchg
xchg
lock
push
dec
jmp
jb
div
jne
arpl
ins
out
ror
add
cmp
xor
out
xchg
mov
sbb
(bad)
fiadd
mov
pop
lock
and
bnd
push
xlat
int3
xchg
lahf
(bad)
push
cmp
sbb
push
and
jmp
push
call
mov
(bad)
jmp
add
cli
js
out
mov
mov
cld
stos
xchg
sub
jno
mov
rcl
jnp
shr
mov
jbe
xor
mov
cmp
pop
dec
jne
(bad)
sahf
inc
shl
pop
shr
mov
out
int
and
lahf
xor
sbb
mov
test
cmp
mov
mov
aam
and
cs
jnp
out
push
test
pop
fnstenv
xchg
sbb
loope
pop
(bad)
sahf
mov
mov
in
jmp
inc
sbb
pop
dec
jmp
fwait
rol
cmps
jecxz
pop
mov
test
enter
pop
das
jae
jmp
mov
dec
or
inc
out
add
jae
call
pop
inc
dec
fsub
shl
xchg
fmul
mov
inc
mov
cmp
or
sub
cmp
arpl
dec
push
xor
mov
mov
push
add
sub
in
movs
and
mov
fldl2e
cdq
fistp
jae
lds
je
xchg
dec
xchg
stos
pop
sub
xchg
cmps
cmp
push
ja
ins
(bad)
pop
mov
cmps
and
add
jo
lock
ror
popf
adc
add
lock
pop
jbe
cmp
(bad)
jecxz
sub
xor
jmp
lods
movs
retf
mov
pop
xchg
mov
fsub
xor
sti
stc
sti
(bad)
mov
pop
and
push
scas
jmp
dec
mov
les
mov
adc
mov
jge
or
in
push
mov
pop
push
mov
pushf
sbb
xchg
loopne
or
in
enter
out
iret
sbb
push
stos
dec
pop
xchg
cdq
or
test
cwde
mov
rol
cmps
imul
in
es
inc
xchg
push
loope
lods
shr
rcr
sub
out
stos
xchg
or
mov
mov
retf
pop
jl
push
mov
fiadd
jl
lods
mov
jae
sti
adc
jmp
or
mov
xchg
out
rol
and
je
dec
test
lahf
aaa
icebp
inc
fprem
sbb
test
ffree
in
mov
ins
mov
sub
and
jns
mov
add
pop
cmp
pop
enter
shl
dec
das
xchg
mov
lea
mov
xchg
aam
add
test
mov
pop
cdq
in
fild
rcl
neg
test
or
imul
into
mov
ss
sbb
xor
adc
retf
sbb
and
movs
or
xchg
sbb
out
inc
movups
gs
les
xchg
scas
(bad)
pop
(bad)
imul
push
xchg
mov
dec
mov
mov
fidiv
xchg
xchg
fimul
dec
(bad)
in
xor
adc
lahf
jb
adc
cs
jmp
pop
inc
in
adc
or
xchg
cmp
push
fucomp
push
sbb
mov
cmp
dec
add
dec
inc
pop
mov
fst
or
movs
sbb
or
sbb
nop
hlt
call
pop
add
sub
inc
fist
cmps
jge
mov
sbb
mov
out
add
jmp
push
(bad)
fistp
push
jns
stos
inc
xor
and
xchg
jae
xor
inc
mov
jle
popa
daa
daa
nop
xchg
add
cmp
aad
dec
or
ret
mov
push
fs
test
xor
pusha
pop
or
or
inc
imul
sub
movs
loop
mov
push
lods
imul
push
cmp
or
push
pop
pop
scas
mov
jae
loope
mov
xchg
cwde
neg
add
mov
add
push
cmps
aam
add
sub
push
addr16
(bad)
icebp
fucomip
jmp
adc
aam
fmul
xchg
xor
add
pop
inc
adc
icebp
add
adc
pop
stos
add
xchg
ret
je
ins
out
sbb
dec
push
cmp
add
(bad)
xchg
int
adc
pop
jmp
lahf
lods
repz
pop
pushf
add
push
ja
gs
or
mov
xor
pop
sub
sar
jmp
add
movs
cs
movs
mov
ja
or
outs
xor
and
mov
sub
pop
cmp
push
cmps
mov
rol
adc
sub
sti
jo
pop
in
std
or
lds
mov
xchg
in
jp
push
mov
mov
add
scas
mov
loope
leave
or
sub
sub
push
mov
ss
out
jp
scas
not
xchg
lock
mov
neg
jmp
xor
out
sbb
ret
push
inc
cld
(bad)
(bad)
adc
out
xor
sbb
pop
stc
sub
or
push
pusha
dec
or
cmp
lea
pop
popa
cmp
out
add
inc
movs
scas
iret
test
push
sahf
dec
pop
fsub
jnp
daa
sbb
sub
lods
test
push
lahf
push
sbb
push
faddp
dec
dec
or
push
push
sbb
rcr
jmp
loop
sti
rcl
and
jmp
push
jmp
js
(bad)
stos
mov
pusha
mov
push
mov
push
dec
ret
xor
mov
mov
lds
jmp
pop
fimul
mov
lds
pop
loop
enter
mov
or
and
adc
lods
jmp
pop
dec
mov
ficom
or
cmp
cdq
hlt
ret
out
jnp
and
sbb
imul
pop
addr16
stos
adc
das
dec
test
cs
in
xchg
repnz
daa
sbb
mov
into
cmp
cmc
add
imul
cmp
call
mov
or
fs
iret
aad
and
mov
sti
inc
rcr
fiadd
das
xchg
ins
mov
pop
out
mov
pop
pop
pop
add
scas
xor
out
pop
arpl
clc
or
into
push
out
add
hlt
loopne
mov
addr16
movntps
int
in
mov
gs
rol
inc
scas
cmc
push
or
js
sbb
pop
hlt
dec
jg
add
cmp
push
sbb
aaa
enter
out
or
int
leave
shl
int
and
hlt
adc
in
lds
ss
or
(bad)
jmp
mov
xor
aad
cli
leave
xor
push
mov
movs
jb
inc
dec
movs
push
inc
sahf
sbb
xchg
(bad)
sahf
xor
movs
mov
and
cmp
adc
xchg
lods
pop
xchg
push
ins
(bad)
lods
inc
cdq
loop
xor
pop
or
jge
cli
mov
mov
lods
adc
xchg
scas
stc
xor
xor
sub
adc
push
les
mov
popa
or
in
sar
imul
or
lea
or
cmp
sub
fwait
jmp
cmp
mov
rol
(bad)
push
jmp
cmp
enter
test
movs
fst
mov
add
xor
sbb
dec
cmp
xchg
repz
pusha
sub
in
rol
imul
bound
pushf
call
fsubr
push
sbb
xor
sub
sahf
scas
xchg
mov
pop
xchg
sbb
mov
inc
and
rol
in
and
push
sbb
sub
retf
xchg
in
(bad)
push
imul
add
loope
lods
mov
je
or
iret
mov
scas
sub
xor
or
add
aaa
shl
lea
dec
or
mov
lods
fwait
pushf
ret
and
lahf
sbb
(bad)
cmp
or
inc
add
shl
aaa
pushf
push
leave
daa
loope
xchg
(bad)
push
mov
dec
push
or
sbb
retf
dec
xchg
into
pop
mov
nop
nop
ret
mov
adc
sub
push
mov
sub
inc
mov
or
cld
pop
pop
or
loopne
sub
test
mov
mov
pop
test
cmp
stos
cld
lock
mov
sub
ret
cmp
mov
aam
sub
mov
dec
and
lods
cmp
add
sbb
test
cwde
and
adc
pop
ins
push
mov
push
jecxz
jmp
lea
pop
imul
bnd
sar
mov
ret
sub
jne
and
ss
ins
sbb
fimul
mov
pop
fucom
int
dec
lds
xchg
push
adc
dec
dec
pop
cmps
push
and
fsubr
push
jns
nop
or
cmp
dec
push
xchg
outs
sub
stc
les
sbb
fsubr
(bad)
add
ins
out
ror
inc
fcos
push
push
mov
mov
jg
stos
add
test
shl
push
jo
movs
fild
ins
div
mov
in
push
sub
test
les
add
xor
ja
ret
loope
ja
xchg
pop
into
dec
jecxz
jae
cmp
push
imul
jne
fstp
cmps
outs
push
mulps
dec
dec
fld
leave
and
in
pop
add
mov
shl
add
xchg
std
ffree
inc
or
mov
in
cmp
mov
neg
out
pushf
add
pop
test
movs
rcr
f2xm1
pop
mov
jge
jae
xchg
arpl
jl
fucom
imul
inc
or
cmc
or
iret
clc
stc
cli
xchg
xor
and
jmp
shr
and
jle
repz
pop
push
in
and
out
fisttp
mov
sti
test
daa
scas
loope
popf
out
fidiv
imul
adc
test
mov
scas
aam
xor
cmps
fistp
push
sub
aas
sbb
push
imul
xchg
push
sub
mov
rcl
cmp
and
int3
mov
jne
into
xor
out
cmp
(bad)
std
add
aas
jecxz
or
out
push
pop
sbb
or
repnz
xchg
daa
pop
mov
adc
icebp
sahf
lock
inc
pop
push
int3
div
stc
lods
mov
bndstx
ret
cmp
ins
mov
mov
out
jge
push
ret
mov
inc
sbb
das
cmp
or
sub
push
jl
aam
pop
ror
adc
push
cmps
fld
ins
xchg
pop
in
and
push
sti
int
inc
jae
dec
popf
push
mov
sub
pusha
adc
mov
push
sub
out
(bad)
lods
mov
js
cmc
loop
mov
and
sahf
(bad)
(bad)
dec
sub
pop
mov
add
cmp
push
loop
imul
(bad)
jmp
add
push
ins
jno
push
pop
mov
in
rol
test
dec
inc
je
mov
pop
xor
xchg
out
and
inc
retfw
icebp
hlt
xchg
inc
in
(bad)
dec
push
xor
dec
pop
rep
aad
leave
call
cvtps2pi
push
mov
cld
popf
mov
jae
(bad)
sbb
es
pop
jl
lods
xor
shl
push
ins
clc
xchg
inc
pop
ds
inc
je
mov
xchg
leave
xor
push
pop
pop
jle
dec
adc
jbe
and
adc
xchg
adc
lods
and
mov
xchg
nop
mov
sub
dec
xor
add
push
lds
retf
add
call
inc
out
xchg
ret
je
imul
mov
std
outs
int
push
sub
scas
test
mov
out
and
outs
paddb
fsubr
jno
outs
(bad)
cmp
test
pop
mov
mov
(bad)
jae
iret
mov
sub
push
test
push
jno
inc
pop
mov
mov
push
or
add
data16
pop
stc
lock
pop
das
or
test
aas
loope
gs
xlat
leave
jns
stos
cmp
ss
pop
xchg
fwait
cmp
out
inc
jae
mov
inc
aam
mov
clc
fwait
ret
and
movs
dec
mul
xchg
mov
dec
xchg
ss
mov
rcr
jl
pusha
mov
sub
inc
jle
dec
cs
pop
xchg
jae
mov
pop
out
inc
repz
and
and
enter
push
fcmovnb
(bad)
fadd
inc
jno
sbb
arpl
dec
push
pop
add
jl
hlt
retf
lea
sub
xor
scas
bound
bound
mov
je
mov
mov
cmps
inc
int
retf
mov
mov
jge
or
mov
clc
xchg
push
das
adc
dec
and
pop
out
jae
push
and
cmp
dec
(bad)
jmp
imul
sbb
sbb
hlt
mov
adc
xchg
cmps
mov
in
jb
cli
xchg
in
sbb
or
arpl
loopne
inc
call
fcom
pop
leave
movs
xor
sub
xor
xor
jns
inc
repz
push
shr
dec
(bad)
jl
into
or
pop
fisubr
or
pop
lods
stc
cli
pop
and
mov
dec
jo
repz
or
or
xor
xor
fisub
xchg
or
add
sbb
stos
imul
pop
sub
sbb
jbe
test
ins
retf
stc
loop
and
sti
mov
cwde
imul
rcr
mov
mov
cmp
int3
xchg
adc
enter
and
enter
loop
jmp
mov
retf
sub
test
lods
test
sbb
dec
push
inc
ret
dec
dec
xchg
dec
ins
xchg
lods
mov
lods
inc
or
adc
in
lock
int
sub
adc
sbb
sub
jecxz
hlt
and
add
push
and
popa
in
add
xor
xor
out
out
fstp
je
push
push
je
cmps
jnp
mov
popf
or
push
and
push
jp
dec
xchg
jp
ror
shr
bound
clc
mov
out
push
pop
add
cli
fmulp
mov
lds
out
cmp
mov
(bad)
loopne
cdq
movs
cli
xchg
loop
mov
jmp
leave
repz
std
jb
aaa
call
jno
lods
fdiv
sub
loopne
imul
daa
rcl
mov
ret
mov
imul
push
shl
pop
or
ja
ss
inc
sbb
repz
out
sub
adc
ficom
cmp
mov
int
mov
and
jmp
sub
test
(bad)
ins
leave
cmp
cdq
test
popa
stos
popa
lahf
adc
das
cs
xadd
out
mov
xor
scas
mov
fadd
mov
ins
dec
mov
jp
imul
xor
mov
sbb
jp
js
test
jmp
aad
or
iret
sbb
push
int3
push
idiv
and
lahf
outs
sbb
rol
adc
dec
mov
psubsw
lods
fisttp
cmps
nop
call
cdq
mov
shr
cmp
mov
mov
(bad)
out
jo
xchg
cdq
inc
outs
add
(bad)
sbb
mov
sbb
pop
in
test
push
pushf
jne
mov
jp
xchg
call
cmp
scas
dec
loopne
cld
sbb
fsin
and
ins
cmp
(bad)
sahf
adc
add
xchg
in
push
loopne
sub
stos
lea
push
and
push
inc
movs
push
(bad)
jb
xchg
adc
mov
cmps
outs
xchg
sbb
push
jle
ins
inc
inc
psubusw
ret
daa
test
int3
shl
neg
xlat
cmp
jnp
xchg
lods
dec
das
push
pop
mov
jl
sub
imul
jge
and
or
push
mov
inc
adc
aad
cmps
scas
dec
out
cmp
lds
shr
dec
sbb
add
iret
lods
or
add
jo
sahf
jmp
in
mov
mov
mov
test
jmp
mov
std
mov
jmp
inc
addr16
jae
fsub
ins
mov
and
mov
cmps
sub
add
mov
jmp
or
push
test
mov
fisttp
fcom
ja
les
jle
popf
xlat
push
cmps
sbb
mov
in
pop
sbb
pusha
push
jo
imul
or
pop
enter
ja
jge
scas
mov
sbb
adc
xchg
dec
cwde
sub
add
cmp
ds
mov
loopne
outs
push
fcomp
fistp
push
pusha
mov
cmp
outs
sub
shl
mov
fdiv
add
scas
movlps
rcl
mov
fcom
mov
das
mov
int3
ins
scas
pop
aaa
mov
test
push
jge
mov
call
and
fsubr
mov
outs
mov
mov
cmp
dec
push
or
mov
rcl
mov
mov
inc
mov
adc
sub
in
rcr
jmp
jne
bound
mov
sbb
mov
imul
and
icebp
repz
clc
mov
mov
sbb
xchg
cmp
push
xlat
mov
aaa
xchg
cmp
jg
test
inc
arpl
addr16
add
or
or
jnp
jae
js
mov
scas
loop
mov
dec
fnsave
retf
mov
dec
xor
ror
push
setnp
mov
push
daa
cli
mov
shl
(bad)
jmp
jmp
daa
lahf
push
jmp
imul
sbb
sbb
or
and
cmp
sub
pop
add
fnstenv
mov
cmp
not
or
popf
mov
sub
or
adc
loope
sub
shl
jle
sub
add
sti
mov
mov
jecxz
movs
xchg
fisttp
call
shl
frstor
fst
mov
ins
push
mov
inc
adc
popa
cmps
xchg
push
jp
stos
gs
fist
pop
outs
stos
cld
inc
out
and
add
hlt
inc
dec
xchg
js
(bad)
xchg
jg
fsubr
xchg
mov
mov
mov
jno
(bad)
jne
push
mov
mov
cmps
adc
pop
adc
into
and
movs
mov
push
jle
ret
cmp
inc
jle
inc
or
pop
dec
xchg
int3
inc
push
out
xchg
nop
mov
rcl
xor
fnsave
jg
adc
hlt
aad
dec
shl
pushf
ss
cli
loop
push
mov
sbb
outs
add
out
or
jl
jb
leave
int
(bad)
jl
(bad)
xor
push
mov
push
pop
cdq
jns
xor
push
sub
inc
and
mov
jl
(bad)
adc
in
mov
xchg
push
data16
outs
shr
xchg
jo
sub
mov
fisttp
add
enter
jmp
mov
xor
in
xor
sub
mov
pop
fidiv
xchg
fwait
cdq
fisttp
pop
test
mov
mov
je
jo
push
mov
mov
pop
daa
div
popf
sub
mov
xor
xchg
mov
mov
clc
jae
test
push
not
and
in
aad
push
push
adc
add
mov
and
jb
pop
pushf
cmp
in
call
pusha
xor
out
and
test
inc
hlt
in
js
ja
pop
mov
rcr
xor
add
outs
movs
fwait
enter
and
lea
pop
xchg
popa
xor
movs
movs
fld
popf
or
or
inc
and
dec
int
rcl
imul
sqrtps
inc
into
mov
push
and
adc
in
adc
mov
jge
inc
rcl
xor
and
and
or
jae
mov
fild
inc
jmp
fninit
call
mov
inc
push
inc
data16
mov
sub
(bad)
lea
inc
sub
loop
mov
jb
inc
icebp
ret
pop
imul
and
mov
sub
cwde
push
or
aam
into
enter
mov
push
dec
jmp
cs
and
daa
xchg
into
gs
aas
clc
(bad)
out
mov
retf
inc
mov
out
dec
fcom
hlt
icebp
inc
(bad)
je
and
inc
adc
adc
add
mov
nop
push
add
mov
adc
cmp
xchg
and
pusha
sub
mov
sbb
ss
ss
enter
pop
fmul
and
out
fwait
lods
jne
cli
and
adc
jno
push
ss
add
stc
iret
imul
or
mov
les
les
mov
cmp
imul
dec
and
aam
jns
xchg
push
mov
fadd
adc
cdq
cmovnp
dec
pop
sub
inc
and
jns
and
adc
mov
cmp
in
push
push
pop
sar
dec
lea
sbb
and
js
scas
sbb
cld
in
repnz
mov
sub
test
out
jecxz
xchg
retf
sub
sbb
jge
adc
mov
and
rcr
pusha
movs
pusha
xchg
in
popa
xchg
and
sti
dec
mov
xchg
jbe
shl
mov
(bad)
dec
lods
inc
inc
inc
xchg
jmp
cmp
sti
sti
mov
pop
scas
fsubr
mov
mov
out
xchg
jb
add
jb
mov
cmp
adc
loopne
dec
dec
and
adc
dec
lock
and
sub
add
push
mov
inc
add
imul
mov
repz
xlat
jne
test
dec
xchg
inc
pop
jne
push
fwait
loop
xlat
mov
dec
jmp
rcl
(bad)
inc
repz
push
xchg
sub
dec
out
wrmsr
inc
idiv
mov
pop
pop
loopne
in
je
out
stos
imul
scas
loope
mov
bound
sti
fucomip
jbe
pop
aad
xchg
or
rcl
call
or
mov
in
xor
xchg
arpl
ret
jbe
mov
ja
je
fdiv
push
push
xchg
enter
enter
int3
jp
mov
sub
mov
push
call
(bad)
jle
pop
test
pop
fcom
and
xchg
sub
dec
jl
sar
mov
mov
xor
add
test
mov
cs
loopne
outs
adc
sbb
imul
ins
test
xor
lods
xchg
jbe
lods
in
inc
or
in
loope
cdq
into
jmp
int
pusha
sbb
fbstp
sbb
and
fnop
dec
xor
xor
imul
rol
xor
les
and
jl
xchg
pop
jmp
sub
ret
jns
imul
xchg
dec
inc
loopne
push
imul
(bad)
in
jne
xchg
xor
add
rol
cli
daa
stos
mov
jmp
aaa
ins
inc
push
dec
and
cmc
pop
inc
and
lods
pop
and
and
or
xchg
pop
push
arpl
test
(bad)
inc
(bad)
das
adc
outs
aaa
cdq
mov
xor
mov
xchg
shr
sub
mov
sbb
test
dec
adc
jmp
pusha
jp
jg
pop
cmp
jmp
fchs
push
call
aam
in
fstp
stos
dec
or
fdivr
jns
ret
jns
mov
clc
lahf
hlt
int3
test
jp
scas
repnz
mov
mov
cmp
test
xchg
fst
jge
or
idiv
mov
pop
pop
loopne
in
movs
mov
pop
pusha
jmp
cvttps2pi
idiv
stos
out
pop
mov
ss
pusha
xchg
xchg
xchg
xchg
sbb
imul
cld
loop
and
aaa
imul
pop
xor
push
jl
sbb
mov
xchg
dec
sbb
int3
imul
xlat
jb
cmovb
je
or
cdq
add
loopne
push
into
and
push
push
inc
inc
sbb
int
ds
xchg
cmp
or
lds
shl
jno
push
mov
mov
xchg
retf
mov
int3
loop
mov
popa
xor
xchg
and
push
stos
jb
nop
and
push
pusha
jbe
aam
sub
push
mov
cwde
pop
pop
and
inc
in
js
xchg
loope
xlat
loope
lock
dec
cld
fsub
hlt
push
and
leave
add
enter
and
push
mov
repnz
lods
mov
adc
mov
pop
add
call
pop
lock
sub
(bad)
int
dec
sub
scas
out
sar
retf
or
jno
jnp
or
push
ja
cmps
repnz
nop
pop
aam
and
cmp
iret
mov
mov
and
adc
jge
shl
or
adc
icebp
inc
pop
mov
and
xor
pop
ins
xchg
inc
push
imul
xor
rdpmc
mov
xchg
scas
cmp
cmp
sbb
outs
push
retf
shl
scas
add
pop
cli
(bad)
sti
(bad)
pop
dec
mov
in
jle
xchg
push
xchg
push
mov
sub
out
xchg
aas
push
or
pop
mov
jecxz
inc
push
mov
test
dec
retf
adc
cdq
jo
dec
mov
popa
xor
repz
pop
mov
xor
sti
sbb
pop
hlt
pop
add
rcr
or
ins
mov
imul
jne
test
je
lods
mov
bound
call
jmp
jg
push
dec
mov
iret
pop
mov
rol
fdiv
mov
cmps
fwait
(bad)
aas
repz
push
cmp
pop
push
mov
shr
adc
outs
mov
xchg
mov
cs
lea
inc
jl
sub
int3
sub
test
or
int3
jnp
dec
xor
dec
inc
ror
sub
jbe
lds
push
adc
xchg
test
mov
xchg
les
mov
cmps
xor
outs
xor
mov
push
fdiv
das
jbe
or
ss
adc
inc
cmps
jne
out
sbb
xor
retf
and
movs
jno
xchg
jae
fisub
in
push
mov
pop
pop
jg
push
rcl
add
jno
shl
pop
pop
inc
xlat
es
dec
push
imul
xchg
fsubp
mov
(bad)
and
stc
cdq
push
(bad)
jae
fadd
cmp
jmp
pop
dec
sbb
stos
sbb
adc
and
pop
scas
je
adc
push
fstp
arpl
(bad)
neg
or
push
push
daa
out
test
push
sti
inc
dec
fild
xchg
call
jg
adc
jle
rcl
cdq
jmp
imul
test
ret
outs
and
mov
aaa
fwait
xchg
mov
cdq
or
push
sub
test
push
sub
pop
xor
jmp
and
dec
adc
mul
xlat
mov
std
fdiv
shl
je
xor
dec
add
cmps
cmp
(bad)
xor
cmp
pop
cmp
xor
cmp
das
(bad)
sub
push
mov
dec
xchg
gs
aad
inc
loop
mov
xchg
pushf
mov
sbb
rol
arpl
js
cmp
arpl
dec
test
add
loope
jne
repz
xor
mov
imul
addr16
pop
movs
xor
jp
jbe
sbb
jle
add
adc
stc
ret
xor
mov
dec
aad
daa
retf
in
rcl
and
cmp
lods
jecxz
xchg
in
jne
mov
jno
xchg
cmp
jmp
inc
iret
or
and
mov
push
retf
into
cwde
(bad)
xor
movs
xor
add
loope
sub
jo
leave
or
out
mov
inc
fmul
xor
push
nop
mov
mov
mov
movs
mov
pop
retf
cmp
adc
cmps
loopne
adc
in
push
jns
jl
lods
pop
js
and
mov
das
les
mov
xchg
inc
dec
sub
and
outs
cmp
rcl
imul
cmps
rcl
and
sub
sub
enter
in
cmp
add
mov
pop
aaa
ins
aad
push
jns
adc
add
push
mov
js
sub
stc
rcr
push
or
xchg
fidivr
mov
lea
pop
shr
in
sbb
aas
push
sub
mov
or
inc
bound
ins
jge
stos
imul
xor
(bad)
sar
fist
lahf
sub
(bad)
aad
es
shr
mov
aam
into
and
or
sbb
adc
vpsrad
jmp
inc
cmps
in
pop
iret
repnz
cmc
stos
das
test
sub
(bad)
mov
imul
cmp
push
jne
sti
add
pop
pop
in
out
out
add
mov
inc
jg
pop
and
aad
mov
xchg
loopne
add
pop
ret
jne
dec
mov
xchg
xor
cwde
mov
push
popa
xchg
jae
shl
xor
xchg
dec
in
ds
push
rcl
inc
lock
leave
(bad)
das
nop
add
xchg
fisubr
push
pop
sub
enter
ror
pop
xorps
enter
push
xchg
clc
adc
or
fwait
xchg
jmp
jno
cli
lods
(bad)
pop
xchg
cld
in
imul
sbb
jle
xor
and
lods
xor
cwde
adc
mul
sub
xchg
rcr
xchg
fidivr
push
les
mov
jmp
fmul
sbb
jmp
cmp
or
repnz
mov
xchg
mov
enterw
dec
call
adc
jnp
retf
das
inc
mov
cwde
inc
into
retf
movs
enter
adc
cli
xchg
loop
ja
sub
ret
add
retf
xchg
sub
in
rcl
test
cdq
ins
out
add
and
test
arpl
aaa
iret
movs
add
dec
aas
mov
js
add
mov
cmp
sub
mov
xchg
xlat
idiv
sbb
sub
loope
call
xor
mov
xor
mov
sub
adc
popf
jo
seto
cmp
outs
dec
sub
push
cmp
scas
xor
or
xchg
icebp
jbe
add
popa
push
ret
in
mov
add
scas
xor
sbb
ret
xchg
cmp
mov
loop
movs
xor
push
in
fwait
shl
xchg
fstp
jne
loope
and
add
mov
push
jbe
js
stos
js
repz
xchg
mov
mov
push
addr16
outs
in
addr16
ss
dec
mov
pusha
movs
mov
mov
ss
sahf
pop
or
ret
dec
sub
int3
sub
or
sbb
and
add
scas
sub
inc
mov
lods
in
push
mov
adc
mov
dec
mov
xchg
mov
xchg
sub
xor
loope
mov
je
rcl
jno
popa
sub
dec
imul
pop
pop
xchg
push
ins
push
dec
gs
mul
adc
daa
sbb
ins
out
jae
pop
mov
sbb
inc
xor
jmp
sub
mul
mov
push
mov
add
push
std
in
lds
in
ror
mov
pop
data16
fist
stc
jmp
and
jb
lock
inc
xor
ret
sar
jmp
(bad)
in
jae
dec
mov
scas
dec
mov
xor
or
lahf
pop
bound
mov
ss
pop
lds
scas
hlt
(bad)
popa
push
aas
icebp
pop
pop
inc
and
jg
shl
test
sub
mov
mov
adc
mov
icebp
cmp
nop
cs
sub
pop
jne
pop
(bad)
inc
jle
ss
or
pushf
inc
sahf
mov
cs
mov
stos
dec
mov
xchg
mov
test
adc
mov
into
inc
cmc
repnz
mov
mov
or
cmps
dec
jo
stos
in
sbb
jo
leave
dec
xor
sbb
push
or
lock
ret
outs
inc
pop
enter
jae
ret
cwde
(bad)
push
or
fnsave
mov
inc
dec
sub
mov
imul
daa
pop
adc
fldcw
cmp
retf
arpl
xchg
push
scas
fild
les
push
cmp
xchg
or
icebp
push
popf
mov
xchg
inc
xchg
add
or
ret
ret
hlt
shl
jecxz
push
leave
in
cmc
mov
jbe
imul
out
out
adc
push
jmp
test
movs
aad
adc
loopne
test
cmp
(bad)
jmp
aaa
(bad)
sub
mov
(bad)
mul
mov
int3
or
jo
test
pop
int3
xchg
(bad)
jb
stos
jle
stos
loopne
hlt
js
push
or
and
cmp
and
xor
repnz
mov
sbb
out
push
fmul
cmp
out
add
in
or
adc
and
sbb
dec
jl
jns
inc
and
ror
or
scas
add
sub
or
repnz
ins
mov
and
mov
sub
fadd
scas
(bad)
call
sub
add
mov
movs
jno
jp
cld
test
and
pop
jp
jno
pop
sti
jo
sub
(bad)
lods
xor
loope
aas
xchg
fnstsw
sbb
adc
pop
add
imul
add
sub
out
ret
or
jmp
xor
clc
pop
jno
and
out
push
outs
dec
and
mov
adc
cmps
jns
in
xchg
add
adc
push
fsubr
and
out
daa
rcl
cld
dec
jmp
or
push
adc
mov
or
int3
xor
xor
icebp
xchg
mov
cs
sahf
out
test
jmp
mov
inc
daa
rcl
aam
hlt
mov
mov
dec
or
scas
mov
xor
sbb
mov
jg
outs
jno
mov
xchg
leave
mov
icebp
mov
mov
mov
xchg
or
push
xchg
push
and
jb
cwde
mov
cmp
push
mov
loopne
ss
daa
or
dec
and
push
retf
das
inc
push
in
sub
shr
adc
stc
je
xchg
inc
sbb
das
mov
test
movs
jecxz
jl
xchg
cs
and
adc
call
jmp
inc
push
xchg
xchg
mov
fild
push
adc
xchg
sub
fisttp
retf
(bad)
leave
xor
and
mov
jbe
retf
retf
lods
and
lods
inc
gs
popf
sbb
push
jg
mov
add
(bad)
adc
outs
mov
in
inc
dec
cmp
sbb
xchg
adc
cli
les
adc
jp
xchg
sub
jns
leave
jmp
aaa
pop
fwait
xor
js
aaa
ja
mov
mov
shl
clc
xor
sbb
mov
popa
dec
clc
outs
pop
cwde
in
mov
fistp
push
cdq
adc
sbb
pop
sub
and
in
dec
mov
jl
adc
sbb
xor
cmps
jmp
pusha
inc
jo
cmp
cmovge
fstp
sub
and
std
loop
xchg
jge
bound
ins
mov
lods
popa
dec
dec
shl
xchg
mov
nop
imul
jns
pop
sbb
jmp
aas
lods
jns
fsub
dec
clc
cmp
(bad)
and
fcom
add
mov
cmc
jecxz
cmps
ss
xor
xchg
xchg
mov
push
ficomp
pop
push
ja
and
mov
and
leave
fldenv
xor
pop
cmp
mov
rcr
push
retf
hlt
(bad)
out
dec
dec
xchg
xor
mov
inc
dec
adc
xor
dec
jmp
fsub
dec
sbb
cdq
mov
add
dec
test
retf
mov
mov
mov
jo
outs
pusha
add
push
sub
test
outs
inc
clc
int
cmp
fiadd
movs
test
fbstp
sar
and
cs
test
jb
jge
add
xchg
shr
pop
in
fs
adc
jnp
pusha
pop
pusha
jp
or
in
sbb
jle
aaa
stc
mov
push
fs
dec
dec
outs
in
push
adc
and
int3
cmp
arpl
mov
movs
(bad)
mov
pop
in
aas
dec
dec
or
dec
push
mov
mov
test
outs
cmp
lahf
fadd
cmc
rcr
ret
sbb
loop
nop
cmps
arpl
in
call
jno
loopne
mov
inc
push
sbb
xchg
or
test
add
das
js
sub
and
xor
rol
(bad)
je
cmp
cs
jle
pop
(bad)
loope
mov
sub
div
(bad)
add
les
add
rcl
or
in
mov
mov
jbe
repz
ins
inc
dec
movs
push
sbb
mov
mov
jnp
(bad)
stc
push
push
call
xor
test
sbb
ret
clc
sub
cmc
push
xor
in
xchg
(bad)
in
gs
sub
imul
inc
pop
das
inc
push
inc
cwde
shr
(bad)
cmp
jo
mov
(bad)
aad
repnz
loopne
inc
(bad)
mov
xchg
out
jbe
xchg
retf
inc
xchg
jecxz
jbe
dec
mov
jnp
enter
outs
loop
mov
test
call
rol
mov
jne
push
pushf
dec
pop
sub
dec
push
daa
int
std
xchg
sub
nop
retf
cmp
xchg
cdq
push
ret
fist
push
inc
pop
pop
nop
lock
fcomp
sbb
(bad)
shl
xor
outs
mov
enter
clc
and
popf
idiv
pop
in
xchg
ret
xlat
or
sbb
or
daa
or
mov
dec
stos
xor
cmp
lea
pop
aam
cs
add
xlat
neg
sbb
xchg
push
fdiv
xchg
cmps
aas
pop
ds
mov
jno
leave
aad
out
pusha
add
sbb
and
sub
xor
dec
scas
je
mov
test
cmps
(bad)
das
shl
mov
xchg
pop
bound
and
and
push
sbb
add
pop
adc
push
mov
inc
xlat
inc
ins
out
xor
push
jg
dec
mov
mov
data16
mov
shr
adc
cli
dec
adc
repz
mov
sahf
cmp
ret
adc
jae
jbe
or
lds
int
mov
sbb
push
retf
mov
movs
xor
sbb
add
(bad)
xor
imul
mov
nop
dec
fstp
repnz
pop
pop
jae
data16
sub
js
ins
lock
aaa
pop
fmul
enter
cmp
dec
fiadd
pushf
xor
in
in
push
test
enter
inc
das
and
and
xchg
xchg
test
leave
js
mov
stc
leave
hlt
and
popf
pushf
fcomp
clc
mov
adc
test
mov
ror
pop
push
int3
pop
in
daa
(bad)
jg
add
mov
push
fimul
cli
jnp
test
in
int3
imul
inc
(bad)
push
out
pop
dec
dec
int3
cmp
mov
out
and
sbb
mov
cmp
sahf
and
enter
mov
push
(bad)
sbb
jle
xchg
inc
(bad)
repnz
xchg
mov
cmp
int3
out
in
call
lock
retf
pop
push
sbb
movs
test
ja
mov
in
push
jno
sbb
pop
or
pop
xchg
mov
popf
and
(bad)
cmp
(bad)
stos
cdq
push
mov
xlat
(bad)
mov
cmp
stos
movs
push
stc
lods
mov
sti
popf
outs
mov
xchg
mov
sub
push
dec
sti
jbe
jp
(bad)
mov
in
(bad)
nop
pop
inc
xchg
sti
rcr
inc
dec
hlt
xchg
sbb
cmps
and
arpl
and
xor
sbb
sbb
shr
out
mov
lds
rcr
ss
dec
or
push
pop
sti
or
pop
and
aam
fisubr
xlat
stc
stc
aaa
jle
mov
call
js
rcl
out
sbb
lea
test
inc
mov
div
xor
or
call
inc
xor
jmp
bound
loopne
das
xchg
adc
mov
mov
fnsave
aaa
icebp
je
enter
(bad)
imul
pop
and
pop
cdq
gs
fs
iret
xchg
sub
jae
fstp
cmps
data16
std
ffreep
jae
cs
sahf
push
ficom
push
xchg
push
aaa
adc
aas
cmp
in
icebp
push
sub
les
push
adc
mov
pop
sbb
pop
dec
repz
mov
cwde
repnz
out
(bad)
sahf
in
ror
imul
in
lea
shl
push
push
mov
mov
in
mov
push
push
scas
ds
mov
sbb
aaa
xchg
ins
push
imul
pop
jecxz
fst
stc
aaa
mov
pop
mov
pushf
sbb
push
ret
xor
(bad)
out
call
dec
inc
cdq
xor
test
mov
dec
pushf
iret
shl
adc
dec
mov
add
adc
mov
push
mov
xchg
lds
sub
push
cmps
cmp
mov
rcr
xchg
imul
push
test
int
mov
ins
test
add
scas
out
mov
(bad)
loop
adc
rcr
aas
(bad)
lock
out
cs
inc
pop
repz
popa
cdq
sub
push
cmc
push
pop
test
inc
push
leave
inc
repz
(bad)
mov
xor
call
cmps
stos
scas
xor
jl
adc
mov
jmp
mov
sbb
je
popa
dec
js
les
jmp
movs
xlat
aas
div
add
xchg
mov
jecxz
pop
pop
push
pop
mov
sub
inc
push
xor
pushf
lea
fbstp
cmp
mov
dec
xchg
mov
scas
shr
sub
retf
sbb
(bad)
rcl
inc
mov
inc
lods
or
lahf
jae
mov
jle
int
outs
in
fwait
or
js
repz
inc
jbe
push
punpckhwd
sahf
adc
or
pop
mov
sti
pop
lods
retf
and
mov
mov
jmp
or
cdq
into
and
push
in
mov
mov
jp
cld
out
scas
retf
pop
shr
daa
popf
jp
push
push
je
out
pop
sub
push
mov
cmp
popf
or
mov
je
aad
mov
nop
and
pop
addr16
mov
and
retf
les
push
outs
jnp
ret
xor
outs
sub
mov
inc
retf
mov
ret
in
enter
mov
mov
test
pop
je
inc
pop
aam
jl
mov
sub
mov
dec
arpl
dec
loop
mov
fistp
xor
aad
pop
aam
xor
lods
push
mov
imul
xor
sbb
pop
mov
scas
push
dec
scas
aad
jmp
pop
int3
int3
mov
jle
inc
popf
popa
inc
cs
movs
xor
pop
inc
mov
outs
wbinvd
jmp
cmp
(bad)
shl
jp
in
fisubr
pop
add
(bad)
enter
cmp
(bad)
add
bound
stc
loopne
and
je
popf
popf
outs
xor
ins
mov
cmps
loop
es
dec
scas
push
js
push
cmp
pop
or
(bad)
(bad)
in
(bad)
mov
or
push
ror
push
(bad)
push
mov
stc
mov
mov
movs
xor
mov
pop
push
mov
lahf
jg
loop
jge
in
in
dec
aam
ret
pusha
dec
or
leave
rcl
mov
inc
addr16
dec
mov
(bad)
sub
dec
scas
mov
mov
loop
mov
pop
mov
push
shl
(bad)
pusha
xchg
data16
adc
xor
dec
inc
rol
shl
ficomp
jb
mov
aad
in
mov
ficomp
ss
and
int
arpl
adc
xchg
or
mov
xchg
dec
mov
mov
sbb
fwait
xlat
mov
repz
xchg
int3
add
and
push
jp
gs
jl
sub
mov
rcr
mov
lods
aaa
sub
xchg
mov
ss
mov
xchg
push
arpl
ins
cmps
xor
mov
(bad)
sbb
mov
bound
and
pop
xchg
frstor
lock
(bad)
xchg
(bad)
out
ret
xor
fwait
push
jno
daa
shl
aaa
adc
ret
adc
add
add
dec
lea
and
sbb
fidiv
int3
and
loop
jno
push
cmps
std
loopne
xor
push
xchg
cmc
dec
js
cmc
pop
je
stc
aam
jbe
jo
data16
and
fist
mov
or
add
jg
out
dec
pop
ins
sub
xlat
cld
and
rcl
ja
jmp
int3
into
shl
in
sbb
mov
(bad)
jle
je
sub
inc
ss
cld
test
in
jg
mov
sbb
dec
mov
out
add
and
xor
popa
jmp
add
in
outs
sbb
data16
call
pop
sbb
jle
fist
shr
fidivr
sti
popf
inc
mov
fdivrp
inc
mov
dec
mov
mov
mov
mov
test
fsubr
xchg
cs
add
pop
and
(bad)
iret
out
pop
or
mov
(bad)
mov
xor
stos
mov
addps
mov
test
lods
call
outs
aaa
mov
out
loope
sbb
push
in
mov
cld
xchg
add
fs
jmp
jmp
dec
pop
inc
inc
mov
movs
jo
push
cmps
es
imul
xor
cmp
push
imul
out
loope
lods
(bad)
or
imul
into
cmp
add
sahf
shl
cld
xlat
out
loop
mov
sub
bound
(bad)
das
mov
jns
lea
inc
(bad)
call
push
fst
mov
cmps
in
mov
inc
lods
stos
jg
add
cmp
into
hlt
sbb
lahf
mov
pop
arpl
xchg
or
lods
sbb
shl
mov
sbb
adc
cdq
minps
cmp
xor
retf
push
out
and
movs
cdq
sahf
fwait
iret
test
iret
fisttp
inc
xchg
aaa
outs
aam
mov
mov
aas
in
cmps
push
push
rol
stc
ss
sub
push
adc
out
iret
xor
push
pusha
daa
push
shl
dec
or
and
shl
daa
stos
jae
movs
dec
inc
movs
stc
in
jl
add
stos
les
push
mov
cmp
icebp
push
nop
pop
dec
or
retf
pop
mov
push
sub
(bad)
fist
clc
das
mov
and
icebp
mov
mov
scas
hlt
mov
xchg
inc
inc
cld
mov
jb
into
pop
xor
clc
xor
adc
cmp
(bad)
xor
push
retf
arpl
cmp
inc
xchg
pop
sbb
push
movs
in
call
dec
inc
popa
xchg
retf
daa
add
call
mov
xor
bound
jp
jle
xor
outs
xchg
jmp
mov
retf
js
jle
cs
push
adc
lds
inc
rol
loope
push
dec
sub
xor
pop
xor
inc
push
jl
ror
mov
pop
sbb
jmp
cmp
sar
clc
and
push
mov
xchg
mov
push
loop
ss
inc
lds
(bad)
rol
call
aaa
je
les
retf
jmp
push
or
and
sbb
push
out
clc
shl
pop
cmps
in
pop
ret
xchg
pop
push
clc
push
and
scas
stc
rcr
mov
es
aad
aaa
inc
cwde
sbb
mov
clc
pop
sahf
cmc
sbb
int
push
add
int3
mov
mov
shl
and
jne
dec
dec
xor
repz
mov
stos
imul
call
scas
lds
pop
push
jl
cmc
pop
mov
pushf
shl
aad
mov
push
out
xchg
fadd
aam
fcom
int3
dec
mov
popf
jecxz
mov
in
ret
pop
les
mov
push
mov
addr16
clc
sub
mov
push
mov
xchg
sub
mov
fxtract
sub
mov
cmp
test
fmul
imul
ret
imul
hlt
das
ins
adc
int
mov
je
dec
mov
inc
or
fxch
dec
call
dec
inc
out
sbb
mov
xchg
xor
imul
test
(bad)
mov
adc
faddp
inc
xor
and
imul
or
lea
test
jbe
ja
lds
push
clc
sti
mov
cli
or
jno
stos
xor
xchg
xchg
iret
enter
int
inc
mov
pop
aam
mov
ret
pop
jbe
dec
adc
loopne
fcom
repz
scas
mov
fimul
or
imul
push
xlat
inc
clc
data16
add
mov
enter
adc
rcl
add
jns
xchg
rcr
pop
push
pop
inc
dec
or
xor
jns
sahf
sbb
xor
add
xchg
fdiv
or
push
out
mov
(bad)
sub
jge
daa
xchg
cmovns
repz
xchg
cmc
in
retf
dec
aad
xchg
dec
in
jl
ins
sbb
adc
in
xchg
mov
popf
jge
push
aam
fs
cmp
inc
xchg
mov
xchg
hlt
lea
push
fwait
xchg
cmp
(bad)
mov
sahf
cli
mov
cmp
and
inc
stos
xor
rol
mov
arpl
jb
jg
dec
in
jl
adc
jbe
shl
sub
inc
sti
pop
inc
mov
frstor
loop
jmp
pop
jno
shl
inc
and
outs
imul
(bad)
aam
retf
mov
mov
jns
dec
jg
jmp
jmp
fst
daa
adc
les
mov
or
mov
jecxz
outs
stos
cwde
call
loop
sahf
jo
popf
inc
xchg
movs
inc
cmc
lock
xor
adc
mov
push
push
xchg
jecxz
mov
push
not
sub
inc
fst
adc
jl
cmp
or
lahf
add
call
push
mov
xor
movs
xchg
addr16
imul
mov
jns
mov
inc
xchg
inc
outs
mov
or
fisttp
pop
and
ja
pushf
lods
dec
(bad)
mov
xchg
aaa
cmp
inc
or
add
fimul
arpl
ss
cld
adc
jb
retf
mov
mov
adc
clc
jno
loopne
in
retf
or
dec
mov
adc
lods
sti
mov
hlt
dec
adc
in
xchg
fcomp
push
dec
jbe
inc
(bad)
ja
sti
and
call
inc
jno
rol
clc
scas
stos
int
pusha
ret
xchg
frstor
mov
and
sub
fsubr
(bad)
cmc
jmp
pop
(bad)
or
cli
mov
(bad)
pop
mov
leave
xor
rol
pop
cld
imul
jge
jl
add
cwde
shl
xor
add
jns
loop
push
push
mov
or
ins
jne
stos
cdq
adc
and
cmp
std
out
jle
into
in
dec
enterw
and
scas
(bad)
ror
inc
xchg
and
pop
xor
add
inc
cmc
(bad)
in
stos
jmp
mov
jle
cmps
retf
popf
push
push
and
fldcw
dec
cmps
test
push
ins
out
xchg
out
lahf
loope
sub
leave
cmp
pop
popa
add
pushf
test
int3
and
hlt
enter
adc
in
cdq
clc
gs
mov
mov
sti
jnp
or
outs
sahf
ficom
pusha
bswap
cmp
mov
mov
loopne
nop
sub
adc
pop
je
aaa
jmp
test
neg
dec
data16
arpl
lock
(bad)
imul
and
gs
mov
nop
retf
and
sar
xchg
sti
jl
inc
mov
adc
cld
inc
adc
add
xchg
mov
push
jno
push
mov
adc
stc
ins
push
sub
pop
shl
mov
loopne
mov
repnz
jmp
out
test
push
pop
cmp
dec
aas
jp
ja
mov
jo
fwait
(bad)
aad
and
je
dec
in
clc
inc
pop
push
jno
sub
pop
and
lahf
cmps
cmps
fadd
mov
mov
das
jae
call
jmp
sbb
clc
jne
paddb
ins
cvtps2pi
paddd
int
xchg
out
mov
push
sahf
scas
test
nop
repnz
(bad)
les
icebp
sub
inc
or
cs
in
cmp
es
popa
pop
and
sbb
xor
iret
stc
dec
sbb
add
inc
mov
or
ds
sti
jg
xchg
mov
cmps
push
mov
jb
jmp
sbb
test
sti
imul
(bad)
(bad)
cmc
sub
jle
dec
cdq
xchg
nop
ds
mov
jle
stc
adc
lahf
and
sbb
cmp
sbb
pushf
(bad)
sub
loopne
inc
cmp
inc
loopne
ret
(bad)
xchg
test
das
out
rol
call
cmp
jl
jge
fcos
pushf
add
sti
ror
adc
stos
test
cmps
pop
mov
push
arpl
and
xchg
gs
cmps
xor
bound
imul
call
mov
dec
addr16
inc
out
sbb
enter
mov
(bad)
fidiv
dec
movs
dec
(bad)
xlat
adc
fistp
pop
out
mov
push
fistp
mov
xchg
push
pop
sahf
jle
jae
std
test
sbb
movs
xchg
out
pop
xchg
int3
jb
mov
cmps
sbb
push
sar
(bad)
ss
push
lds
in
mov
pop
inc
jle
mov
ins
cmp
js
mov
jne
icebp
inc
in
and
es
pop
mov
sub
(bad)
cwde
cmp
mov
les
push
repnz
shr
mov
nop
out
jp
cdq
adc
mov
jno
add
add
cmp
popf
es
sbb
or
fidiv
in
bound
push
mov
movs
inc
cdq
arpl
stc
sbb
loopne
mov
not
sbb
jp
ret
lds
cmp
mov
add
or
stc
cdq
jne
lods
sbb
test
lahf
aad
sub
ds
test
dec
cmp
xchg
gs
inc
(bad)
inc
loop
in
imul
push
push
clc
pop
movs
rol
inc
aas
add
jnp
sbb
mov
stos
xchg
add
sbb
fistp
and
xrelease
test
cwde
sti
not
sahf
push
clc
mov
jl
sbb
pop
adc
ror
mov
jne
in
nop
popf
mov
mov
jl
push
jp
xor
adc
test
mov
mov
data16
sbb
cmp
sbb
mov
ds
cmp
xor
xchg
addr16
pop
mov
add
jns
pop
lahf
test
and
inc
into
inc
sbb
in
je
fmulp
test
rcl
cld
pop
lea
jno
sub
fsub
xor
sbb
jb
cmp
ja
sbb
ror
push
lods
lahf
iret
retf
std
stos
dec
ficomp
mov
ds
int3
cld
pop
lea
pop
(bad)
jb
xor
or
cmp
xor
push
cmp
push
pop
mov
in
xchg
cmp
out
out
jb
das
cmps
push
int
xchg
je
fadd
jb
push
retf
es
mov
lds
add
rcl
sbb
dec
or
pop
(bad)
shl
mov
and
xor
mov
jp
cmp
pop
mov
ds
arpl
enter
or
pop
xor
mov
enter
repnz
mov
retf
arpl
leave
or
dec
es
jno
sar
xchg
mov
movs
or
mov
pop
imul
fstp
add
mov
retf
rcr
das
add
imul
mov
pop
int
sbb
adc
out
inc
cs
sub
cli
jbe
loopne
xchg
rcl
movs
loope
test
jb
adc
dec
out
es
bnd
jmp
stc
or
popf
inc
ss
test
movs
push
sbb
push
(bad)
fisub
fwait
sbb
and
push
sbb
addr16
adc
jno
test
xor
repnz
mov
out
dec
pushf
loop
clc
and
xchg
add
dec
fs
rcl
jmp
icebp
push
movs
mov
into
(bad)
cmp
sbb
(bad)
sbb
pop
ret
mov
cli
loop
and
jno
cli
push
ins
push
daa
cmps
sbb
in
jmp
(bad)
jns
adc
jns
sbb
mov
cmp
(bad)
xchg
addr16
in
stc
popf
dec
fnstenv
imul
xlat
and
in
ds
movs
add
push
adc
add
and
or
cmc
mov
push
add
and
adc
aam
hlt
fwait
out
sub
pop
jns
int
fcmove
(bad)
inc
cmp
ds
clc
or
fisttp
clc
xor
sar
jecxz
and
int3
les
test
sub
pop
lods
inc
pusha
shl
int3
mov
clc
jno
std
adc
push
cs
je
add
push
and
and
push
(bad)
xor
fadd
mov
xchg
mov
test
push
loop
xchg
and
nop
xor
xchg
imul
adc
ss
fcmovbe
pop
add
or
shl
pop
sub
and
pop
mov
dec
int
add
mov
std
push
xchg
jo
dec
repnz
pop
and
sbb
clc
and
test
mov
mov
fist
int
pop
pop
mov
(bad)
and
nop
xlat
repz
fmul
cmp
cs
fmul
call
and
gs
xor
xchg
nop
pushf
nop
retf
and
dec
push
add
jecxz
push
xchg
out
mov
je
out
mov
lods
cmps
lahf
cmp
or
inc
lods
fchs
cmp
mov
sub
stos
and
pop
mov
dec
mov
cmp
jnp
xlat
mov
mov
into
dec
xlat
cwde
push
adc
scas
fisub
sbb
mov
sub
lods
jmp
sti
sub
iret
sbb
mov
nop
xchg
icebp
xchg
push
repnz
and
(bad)
cmp
aad
icebp
mov
movs
mov
fiadd
pop
push
ss
daa
lds
movs
sub
mov
lahf
cmp
dec
xchg
xor
mov
ret
dec
xor
xor
and
jg
cwde
adc
fdiv
xor
sar
dec
pop
xchg
push
cli
adc
or
lock
mov
stos
popa
jo
jae
xchg
imul
loope
dec
hlt
add
sbb
imul
sub
fld
xchg
push
jmp
push
jecxz
mov
pop
sahf
push
std
dec
out
push
mov
cmc
xchg
(bad)
sbb
adc
jecxz
xchg
ror
push
jbe
jecxz
or
arpl
dec
or
mov
xchg
xor
fisttp
movs
mov
movs
jno
xor
add
lea
mov
(bad)
ins
jg
arpl
adc
pop
pop
jns
shr
sbb
popf
cmps
mov
sub
and
movs
out
inc
add
adc
das
xchg
aam
fdiv
inc
cmp
repz
jo
movs
outs
movs
sbb
sbb
mov
sbb
sub
cmps
xchg
mov
aad
mov
cli
loope
jns
and
shl
cdq
into
rcl
hlt
cmc
dec
lahf
test
inc
in
jne
pop
ja
test
mov
outs
and
outs
out
cli
sub
inc
sbb
scas
loope
pop
nop
rcr
fs
mov
push
scas
ficom
test
sbb
(bad)
ins
add
mov
sbb
das
or
pop
push
or
shl
popa
cdq
dec
xchg
sub
ds
pop
sbb
pop
xchg
xchg
xor
stos
iret
repz
and
mul
push
jp
mov
add
cmp
mov
cld
adc
adc
out
(bad)
call
cmps
sbb
sahf
dec
aaa
in
inc
test
outs
xchg
pop
nop
scas
pop
retf
and
lods
adc
outs
sub
sbb
push
jno
mov
push
mov
movs
inc
shl
lea
iret
out
daa
or
test
mov
fwait
adc
pop
sbb
fld
or
jnp
ins
dec
push
test
(bad)
jp
stos
mov
pop
add
call
pop
sub
mov
add
lods
ins
(bad)
sti
sbb
adc
mov
mov
mov
mov
dec
xchg
lods
pop
iret
fadd
div
lds
mov
enter
popa
jmp
dec
(bad)
(bad)
pop
cmc
aam
cmp
mov
sbb
pop
mov
pop
test
push
sahf
or
sbb
in
(bad)
mov
dec
or
js
aaa
xchg
inc
and
ret
faddp
scas
(bad)
cmp
add
fsubr
rcl
xor
cmp
jl
xchg
jo
mov
mov
cmp
or
pop
test
lea
dec
push
in
jl
sub
pop
mov
mov
pop
outs
cmp
or
fiadd
mov
(bad)
sbb
data16
pop
lods
stos
ja
paddq
lods
xor
ret
fdivp
ins
fbstp
imul
adc
fsubr
sbb
or
push
dec
ror
cmc
add
or
push
inc
jmp
les
scas
adc
div
pop
fistp
leave
mov
(bad)
sub
sub
cmps
inc
jge
mov
(bad)
add
push
stos
imul
inc
iret
xor
test
popa
jecxz
jmp
scas
dec
(bad)
sbb
int3
pop
jl
cs
les
ja
jns
jns
rol
mov
cmc
pusha
ins
cmp
add
fisubr
mov
mov
mov
xchg
int3
sub
in
mov
(bad)
stos
imul
aas
sub
popf
retf
das
cmc
(bad)
popa
paddsb
xor
dec
ins
ss
div
into
mov
add
pop
enter
or
pop
jcxz
jle
inc
dec
iret
mov
push
adc
aad
add
outs
hlt
imul
or
and
daa
popa
popfw
ds
xor
aad
lds
push
jecxz
jo
clc
sbb
pop
dec
mov
inc
jb
mov
mov
xor
cmp
mov
cmp
test
retf
fiadd
fwait
outs
ret
push
mov
stos
sbb
push
ins
inc
sbb
mov
xchg
inc
(bad)
mov
scas
pop
lahf
out
sub
cmps
cmc
cwde
pmaddwd
push
and
aaa
inc
stos
cmp
nop
nop
fwait
jne
dec
sbb
cmp
mov
int3
cmp
pop
pop
stc
xchg
mov
xchg
push
aas
aas
cwde
clc
sub
add
std
jnp
outs
addr16
fwait
ja
adc
fisttp
out
movs
add
fistp
das
jmp
pop
mov
test
ret
(bad)
nop
xchg
push
cmps
repnz
push
inc
pushf
push
and
arpl
movs
arpl
outs
mov
jecxz
pop
imul
push
dec
scas
xor
jp
daa
scas
fst
(bad)
mov
jno
push
inc
stos
adc
jmp
push
rcr
dec
push
xchg
or
scas
aam
lahf
popf
(bad)
(bad)
pop
pusha
inc
scas
cli
inc
call
arpl
adc
in
loop
frstor
cld
cmp
mov
retf
cmc
pop
lea
sbb
js
ins
ins
jns
sub
add
out
sub
pop
mov
es
adc
sbb
aad
push
cmp
cmp
push
sub
jl
jno
jne
popa
int
mov
lods
icebp
stos
inc
add
ja
retf
inc
adc
inc
inc
test
leave
loopne
mov
lds
or
and
pop
movs
mov
mov
adc
add
les
push
std
adc
push
push
xchg
fwait
test
xchg
cmp
iret
call
js
pop
jmp
jae
xchg
xor
cmps
xor
mov
mov
jp
dec
inc
test
add
lock
push
scas
ret
dec
or
xchg
mov
mov
cmp
and
xor
add
dec
jnp
jmp
dec
lods
add
adc
gs
pushf
sbb
cs
jbe
call
fwait
mov
pop
repz
sbb
adc
(bad)
stos
mov
dec
mov
inc
sahf
stc
retf
jmp
lods
aaa
sbb
pop
pop
sub
push
gs
xchg
sub
repnz
sbb
jae
lods
add
mov
mov
outs
push
jb
and
nop
mov
push
addr16
dec
sub
mov
es
mov
gs
stos
mov
adc
mov
mov
cmp
fcmovne
adc
pushf
(bad)
retf
jo
hlt
mov
adc
pop
sub
xchg
mov
out
arpl
inc
out
arpl
mov
inc
psrlw
or
cdq
pop
add
sub
bound
xchg
(bad)
or
pop
ins
imul
mov
and
fild
in
cli
dec
das
in
sub
jp
pop
add
inc
fld
and
mov
bound
inc
xchg
int
(bad)
push
jmp
lods
fwait
mov
mov
call
push
add
adc
dec
sbb
pop
adc
xchg
imul
mov
sub
clc
sbb
push
add
call
xor
xchg
test
vphaddudq
fild
inc
push
mov
dec
out
add
xchg
leave
call
fxch
mov
pop
adc
xchg
outs
jb
and
jge
jns
mov
cmps
cmp
jle
mov
hlt
mov
jno
pop
cmp
mov
out
cmps
inc
fldenv
add
jb
adc
loopne
sbb
dec
xor
stos
loope
cmp
fstp
jmp
scas
cmps
dec
pop
fwait
push
cmps
xchg
lock
lods
retf
cmp
(bad)
jnp
(bad)
push
lods
mov
retf
lock
sahf
call
fadd
or
imul
fiadd
push
mov
(bad)
in
push
arpl
in
shl
push
pusha
lods
retf
out
mov
outs
data16
aam
pop
loopne
lods
bound
add
out
xor
mov
test
add
sbb
nop
mov
push
mov
movs
sbb
seto
nop
or
arpl
adc
shr
mov
push
ret
or
or
sbb
and
ror
mov
xor
fld
push
ror
push
es
sbb
fnstsw
in
or
imul
add
pusha
mov
xchg
ret
pop
or
pop
cmps
out
xchg
fs
ja
sbb
sbb
leave
fcomp
xchg
fcmovnu
test
push
aad
and
mov
xor
push
aaa
mov
movs
pop
cs
sbb
sti
shl
jp
jmp
fs
es
inc
jecxz
mov
or
fistp
pop
mov
gs
jae
cmp
jmp
push
les
sbb
jle
mov
sbb
dec
mov
les
call
dec
ror
stos
loope
adc
adc
inc
push
enter
rol
or
arpl
ret
(bad)
dec
xor
in
push
or
jbe
push
inc
inc
pop
popf
inc
in
(bad)
dec
cld
jns
push
mov
and
dec
sar
inc
dec
mov
(bad)
and
adc
shl
mov
lods
cmp
das
add
pop
cwde
sub
mov
cmps
pop
sub
or
cwde
aad
cli
ja
js
xor
cmp
adc
push
movs
push
(bad)
cld
mov
pop
int3
retf
sbb
jge
call
dec
mov
clc
and
out
adc
and
and
js
fsubr
xor
cwde
push
sbb
mov
lods
(bad)
mov
lock
jl
call
mov
(bad)
pop
test
add
scas
cli
cmc
add
lods
pop
scas
jle
or
mov
shl
dec
pop
pop
sbb
mov
test
sbb
mov
imul
ja
cmp
stos
shr
pop
outs
jmp
or
iret
add
jbe
inc
sti
or
outs
ret
pop
je
mov
std
dec
jecxz
and
xor
dec
clc
dec
movs
xor
cli
push
push
call
imul
mov
or
and
jl
ret
(bad)
xchg
or
pop
lea
sbb
or
shr
bound
jno
jno
or
pop
inc
sbb
imul
stos
popa
ja
int3
or
(bad)
xor
fild
div
scas
cmc
pop
test
fcom
xchg
add
cmp
cmp
rcl
fwait
inc
rol
fmul
movs
daa
loopne
int3
mov
xchg
xchg
clc
gs
daa
mov
call
fcomp
push
jmp
push
in
in
movs
ds
adc
inc
xor
sub
dec
pop
jae
xor
pop
adc
retf
adc
je
and
sbb
aad
shr
call
bound
aas
(bad)
pop
das
sbb
pop
(bad)
call
push
(bad)
lock
adc
popa
mov
imul
dec
xor
mov
or
ss
out
cmps
xor
data16
movs
pop
fld
jno
mov
cdq
out
stc
jns
hlt
sbb
or
cmp
retf
mov
cli
arpl
test
test
mov
mov
sbb
dec
mov
inc
clc
mov
pop
mov
adc
jmp
cmp
call
inc
aam
ins
loop
cmps
mov
(bad)
pop
ret
les
sbb
call
enter
jp
ficom
cmps
xor
hlt
rcl
pop
out
sub
dec
int3
add
adc
stos
jno
imul
rcl
into
inc
xchg
data16
pop
mov
jns
push
(bad)
aaa
mov
mov
jp
pop
mov
push
or
(bad)
(bad)
cdq
push
dec
outs
hlt
imul
and
cmc
or
out
xor
stos
adc
fld
or
push
mov
xchg
call
jge
inc
sbb
cwde
fstp
pop
mov
aam
xor
jmp
int
mov
sahf
(bad)
aam
dec
shl
inc
dec
cli
xchg
and
daa
fsubrp
faddp
(bad)
sub
jmp
loope
lock
leave
test
push
mov
outs
push
sbb
into
cmp
ds
out
inc
sub
jo
lea
inc
inc
and
xor
sub
push
jne
idiv
hlt
imul
inc
in
pusha
out
and
pop
repz
adc
mov
xchg
xor
hlt
and
test
sar
cld
enter
cs
fsubr
adc
dec
mov
in
adc
push
jb
sahf
fisub
lahf
pop
mov
fst
pop
add
fwait
xchg
add
mov
or
dec
adc
adc
xor
shl
sti
push
cwde
xchg
mov
mov
or
test
xchg
cmp
jno
call
mov
push
(bad)
xchg
sub
or
sbb
gs
adc
jno
gs
inc
jbe
icebp
inc
test
push
push
mov
retf
mov
pop
adc
ficom
and
js
push
sbb
dec
or
fcom
(bad)
jae
pusha
sub
sub
xor
(bad)
sbb
pusha
cmp
mov
pop
sbb
or
and
xor
lods
xchg
inc
cmp
xor
and
pop
movs
dec
jb
lods
idiv
(bad)
sub
ret
fcmovne
aam
adc
jne
and
push
(bad)
mov
faddp
test
mov
xor
lods
mov
jecxz
fnstenv
push
out
mov
mov
sbb
idiv
aad
in
dec
cdq
cmps
(bad)
adc
adc
cmp
xor
xor
dec
push
ds
mov
jne
xchg
int
and
pop
cs
mov
nop
jmp
pop
jno
out
icebp
add
cmps
in
xchg
shl
inc
pop
outs
push
jno
les
push
retf
test
or
nop
pop
fs
adc
test
pop
repnz
cwde
add
pop
mov
adc
adc
or
inc
dec
mov
adc
test
mov
xor
push
xor
bound
cmc
inc
xchg
jl
mov
add
int3
add
mov
adc
jp
ret
add
sub
sub
addr16
pusha
mov
fcmovbe
aad
iret
sbb
aam
cmp
xchg
pop
and
xor
jb
inc
dec
and
lods
cmp
cmc
sbb
mov
mov
xchg
repz
rcl
dec
cmp
in
sub
xchg
sbb
loope
pop
sti
lods
push
push
add
sub
out
dec
outs
fisttp
pusha
jmp
not
inc
out
dec
mov
loopne
push
inc
add
std
push
test
ins
sub
pushf
sbb
xor
popf
inc
mov
xchg
imul
aaa
sub
cmp
cmp
(bad)
ficomp
adc
loopne
test
lods
xchg
push
pushf
cs
jp
mov
jno
test
push
popw
pop
mov
and
daa
iret
movs
cmps
retf
sahf
push
or
mov
daa
mov
sti
in
pop
ror
aaa
popf
out
inc
cmc
data16
or
(bad)
and
cli
test
pop
aaa
lods
xchg
push
xor
mov
les
push
mov
es
mov
xlat
cmps
fldenv
xor
js
ja
fs
or
inc
sub
mov
(bad)
dec
aam
mov
(bad)
in
out
pop
mov
aas
jns
lock
leave
and
loope
enter
push
jmp
adc
loop
mov
sar
retf
ret
rsm
or
cmp
add
adc
cmps
pop
(bad)
cmp
es
mov
jmp
(bad)
cmp
sbb
pushf
cwde
xor
test
and
add
cs
test
movs
jecxz
repnz
leave
pop
iret
arpl
mov
aaa
mov
cmps
jmp
cmp
mov
xor
lahf
stos
xor
push
add
mov
sub
pop
dec
jnp
xor
sbb
pop
retf
mov
sub
mov
jns
sbb
push
test
stos
aaa
pop
imul
cli
push
les
mov
stos
mov
add
or
pop
lds
adc
iret
popf
aam
add
and
outs
or
dec
ins
or
dec
fcmovu
dec
push
repz
ret
enter
jge
pop
movs
push
sti
jmp
call
fist
rcl
dec
les
cmp
test
add
sub
mov
push
mov
call
xor
call
loop
xor
push
cdq
out
shl
test
div
pop
xor
idiv
jmp
mov
jmp
int
cdq
in
test
sbb
push
jl
push
mov
data16
test
inc
scas
in
cdq
arpl
mov
jmp
and
and
and
inc
(bad)
xchg
xor
movs
cmp
push
xlat
int3
mov
push
xchg
xor
push
xlat
xor
mov
sub
movs
xor
xchg
xor
inc
and
scas
inc
or
lds
loopne
mov
scas
cli
adc
(bad)
mov
(bad)
fimul
inc
cmc
sub
push
sar
push
push
xchg
jmp
fsubr
cmps
(bad)
cmp
or
(bad)
bound
jl
xchg
ret
aas
das
arpl
rol
sub
fidiv
xchg
test
mov
mov
data16
and
sub
and
push
sbb
cmc
mov
inc
xchg
xchg
mov
outs
cmovo
adc
push
arpl
xor
jmp
(bad)
fmul
or
jl
mov
out
sbb
sub
leave
je
(bad)
neg
jecxz
sub
jl
test
cmp
mov
pop
dec
movs
add
dec
stos
cwde
inc
jns
xor
xor
jmp
and
sub
mov
scas
jmp
adc
cli
add
aas
inc
cmps
push
dec
aaa
or
shl
jge
rol
(bad)
jo
inc
dec
adc
dec
pop
mov
jns
inc
cmp
dec
push
push
jnp
or
pop
adc
dec
jmp
out
pop
add
cdq
pushf
xchg
mov
stos
dec
cmp
adc
cmp
sbb
mov
cwde
lock
cwde
(bad)
test
mov
cwde
cwde
pusha
mov
cmp
test
cmps
outs
inc
out
lock
push
mov
int3
stc
test
push
lock
sub
push
cmp
bound
inc
bound
xor
les
nop
mov
mov
jns
or
cmp
push
xor
(bad)
mov
mul
stos
ss
xor
in
cmp
jne
adc
xchg
outs
ds
dec
pop
inc
add
xchg
sti
cmp
loop
(bad)
movs
hlt
stc
xor
(bad)
and
fs
add
pop
adc
mov
test
push
jmp
fist
stos
mov
mov
or
jbe
imul
mov
mov
and
mov
daa
jo
mov
and
push
mov
loope
xchg
iret
adc
jae
cmp
lock
sbb
imul
jp
mov
jb
sar
sbb
sub
test
mov
outs
pop
sti
jg
mov
and
pop
jle
ja
jmp
fisttp
dec
jbe
xchg
cmp
dec
aam
adc
pop
rol
sub
sub
iret
dec
mov
in
hlt
shl
dec
ret
fwait
in
add
pop
cli
xchg
fiadd
inc
ret
xor
xchg
bsf
inc
and
dec
mov
repnz
jns
in
jno
and
fbld
int3
test
fiadd
push
fwait
add
xchg
ret
jle
xchg
cli
or
fmul
imul
and
lods
inc
inc
ins
push
into
dec
mov
inc
ret
popa
rcr
(bad)
fmul
aaa
xchg
jno
hlt
and
cmc
(bad)
mov
cmp
jge
div
loope
xor
(bad)
pop
add
cmps
es
xchg
pop
cli
xor
add
add
jmp
enter
enter
push
push
sbb
neg
std
repnz
in
fdivp
dec
bound
fist
gs
inc
aas
jno
mov
ins
ret
and
sub
daa
sub
mov
dec
push
push
mov
push
popf
inc
pop
sub
test
shr
mov
(bad)
dec
cdq
mov
mov
xor
outs
xchg
push
cmc
adc
jle
cmp
jnp
aad
mov
ds
je
or
icebp
cld
into
dec
xchg
leave
fwait
xor
pop
(bad)
retf
adc
pop
sbb
xchg
inc
push
repnz
stc
dec
pop
pop
scas
add
fisttp
mov
test
push
fsubr
add
jp
ds
js
and
test
jno
out
xor
mov
mov
retf
ror
scas
pop
mov
xchg
shl
(bad)
adc
push
jmp
push
mov
fmul
mov
in
sub
jbe
dec
(bad)
cmp
jno
and
imul
hlt
aam
cld
pop
test
cdq
sub
sub
pop
fidiv
inc
(bad)
fcomp
pop
xchg
add
out
sub
loop
jle
xchg
pop
mov
dec
(bad)
loop
hlt
and
outs
inc
dec
and
and
sub
add
add
mov
out
xchg
das
adc
call
ins
or
jbe
mov
mov
movs
enter
xchg
frstor
lahf
adc
sbb
mov
sbb
inc
cwde
jno
outs
xchg
stc
xchg
pop
movs
(bad)
(bad)
in
push
adc
inc
ins
xor
dec
adc
inc
lock
mov
push
and
cmp
out
sub
xchg
lock
call
mov
aam
cmps
es
aaa
adc
jp
pop
sbb
ja
pop
into
inc
aaa
xchg
(bad)
in
xchg
ror
ficom
mov
add
add
ins
cmp
stos
test
inc
and
mov
mov
jo
dec
jg
xchg
adc
xchg
lahf
xor
iret
mov
xchg
mov
out
xchg
mov
icebp
mov
stc
shl
sbb
ret
nop
xchg
ins
imul
int3
push
cmp
daa
bound
ror
clc
stc
jmp
loop
cmc
cli
setl
in
ret
movs
cld
jl
mov
cmp
lods
rcl
hlt
mov
pop
cs
in
rol
add
pop
cli
out
inc
loope
idiv
test
in
push
lds
xor
and
lods
or
jmp
stos
mov
xlat
dec
jnp
sub
mov
mov
(bad)
out
lock
sti
push
movs
mov
in
lock
(bad)
pop
jb
pop
pop
cs
sbb
push
ret
mov
test
stos
and
cwde
jne
jge
sub
pop
lods
mov
idiv
popa
and
pop
test
dec
sub
mov
aad
xchg
jp
shr
les
addr16
add
push
and
or
jmp
stos
(bad)
aas
loop
pop
sbb
sbb
fnsave
cwde
inc
mov
rcr
mov
push
or
or
addr16
daa
movs
mov
cmc
push
and
jge
dec
loope
pop
pop
std
ins
ror
cmp
sub
in
jnp
mov
mov
hlt
pop
xchg
mov
ret
push
xchg
push
mov
ins
sahf
sbb
cmps
cmp
jae
cld
push
add
jns
inc
inc
sub
repz
cmc
or
adc
adc
sahf
(bad)
sbb
test
sbb
push
in
and
imul
pop
test
mov
ds
bnd
dec
adc
adc
imul
imul
dec
pop
ret
jge
les
mov
xor
mov
imul
xchg
shr
sbb
shl
mov
outs
mov
stos
jne
stos
movs
es
inc
inc
and
mov
mov
(bad)
lods
std
loope
test
sbb
xchg
sub
jmp
jp
mov
loopne
mov
dec
out
cmp
push
sub
add
in
call
scas
stos
sub
mov
rcl
mov
and
jb
jmp
or
cwde
jge
shl
dec
fisttp
adc
adc
jmp
dec
fisub
push
aas
jmp
and
pop
jl
stos
add
lods
out
aam
mov
cdq
js
xchg
aad
mov
aad
add
jno
xor
stc
xchg
pop
fidivr
or
mov
(bad)
jmp
loop
sub
in
lods
pop
clc
(bad)
inc
sbb
retf
pop
sbb
mov
add
inc
lods
xchg
out
call
leave
cmp
jmp
jmp
lods
test
mov
(bad)
fcom
imul
adc
in
(bad)
xor
push
xchg
xchg
add
jns
(bad)
or
cs
nop
sub
lock
jae
add
mov
in
push
jno
(bad)
nop
shl
mov
and
or
fucomp
ds
daa
mov
inc
push
jecxz
imul
push
imul
jl
leave
push
cmp
inc
std
adc
fdivr
mov
cmp
cmp
jle
jmp
call
pop
aad
call
leave
xchg
cmps
xchg
pop
stos
aaa
inc
cmps
xchg
dec
jle
jbe
sub
lods
hlt
cmp
pop
cmp
and
cmps
cmp
stc
out
ins
sub
jae
arpl
cmp
popa
mov
mov
sbb
sbb
adc
je
ror
sahf
jne
or
enter
mov
outs
mov
scas
outs
push
fwait
jbe
stos
cs
mov
ja
movs
jo
fsub
or
dec
jbe
cmps
es
pop
(bad)
push
pop
sbb
fldenv
jge
(bad)
add
xchg
dec
in
pop
mov
mov
rcl
dec
xchg
mov
cmp
loopne
out
iret
pop
pop
xchg
cdq
ret
xor
fild
adc
add
out
ret
retf
mov
xor
gs
and
je
push
popa
xor
xchg
sbb
jp
jbe
aam
lods
jae
pop
sar
jno
sub
js
loopne
mov
cmps
out
mov
out
(bad)
les
ja
fcom
loope
fst
clc
in
or
dec
dec
sub
xor
fstp
push
mov
das
pop
xor
sub
les
mov
nop
retf
xor
popa
xchg
push
sbb
push
rcl
sub
scas
repz
pop
and
(bad)
popf
stos
jb
and
fwait
jg
cmp
jg
retf
add
cld
mov
dec
cmp
and
bound
aaa
push
mov
sub
xchg
jb
or
adc
and
mov
jge
mov
jae
sbb
das
push
in
add
mov
rcl
lods
bound
fsubr
pop
ds
add
mov
popf
int
or
mov
sar
jg
ja
lock
repnz
sti
mov
adc
hlt
cwde
cmp
neg
sar
in
sub
dec
or
mov
dec
xchg
cmp
and
int
ror
push
mov
sbb
push
lods
mov
(bad)
addr16
or
jmp
cdq
fwait
ins
fwait
imul
jbe
bnd
inc
jg
fwait
out
imul
test
inc
fwait
or
and
dec
mov
inc
aas
pop
pop
popa
pop
add
test
sub
sbb
and
pop
jmp
mov
jns
lods
leave
loop
lods
gs
push
mov
stos
ja
inc
int3
movs
(bad)
and
lds
pop
mov
pop
adc
jle
out
cmps
int3
jmp
(bad)
cdq
mov
shr
and
mov
sub
rol
shl
loop
loop
jle
(bad)
sub
stos
sub
mov
lahf
xor
push
es
sub
sbb
xchg
push
xor
loop
sbb
mov
mov
pop
xor
xor
jle
add
ins
into
loop
mov
xor
test
push
dec
frstor
ret
inc
out
stc
add
scas
push
js
inc
mov
cmp
ins
(bad)
imul
test
mov
fcomp
hlt
sbb
iret
xchg
ja
(bad)
fisttp
adc
dec
je
dec
out
mov
sbb
mov
cmp
mov
dec
jo
add
pop
mov
fs
test
push
mov
call
jmp
stos
stos
and
std
xor
(bad)
jo
imul
mov
lahf
fwait
cdq
pop
dec
rcl
mov
fild
js
std
cmp
popf
aaa
sar
(bad)
fild
xlat
arpl
inc
mov
sti
mov
inc
push
lods
(bad)
scas
sahf
jb
mov
jae
xlat
enter
in
dec
mov
(bad)
or
imul
push
(bad)
lock
push
pusha
mov
aas
inc
pop
mov
fcomp
dec
mov
aad
hlt
movs
adc
js
ja
sub
cs
js
pusha
mov
pop
xor
enter
aas
outs
fmul
add
push
das
cwde
push
(bad)
and
ja
rep
pop
xor
and
das
lds
and
jge
add
jmp
jl
mov
dec
cmc
jmp
std
dec
mov
pop
jno
in
push
xchg
jge
(bad)
popa
out
stos
pop
jg
cmps
add
cmc
(bad)
or
mov
xor
inc
retf
cmc
retf
test
push
or
fild
xchg
pop
enter
std
xchg
push
push
push
cwde
jo
push
ret
add
stos
mov
pop
loopne
xchg
loope
loop
outs
inc
add
pop
inc
sbb
in
and
je
push
fucomi
mov
and
cmp
js
pop
scas
fcmove
dec
std
pop
(bad)
cmc
xor
lods
xor
(bad)
dec
mov
std
sbb
push
or
sub
inc
and
(bad)
cmps
jnp
and
ss
add
icebp
jp
loope
ja
cmp
cwde
frstor
mov
cmp
dec
add
imul
pushf
int
in
adc
mov
mov
mov
loope
lods
cmp
test
in
sbb
pop
in
dec
push
fsubr
push
lock
imul
push
add
call
adc
(bad)
jno
mov
xchg
jle
pop
push
dec
add
pop
loop
test
shl
inc
push
imul
inc
scas
lock
into
jp
inc
jno
lods
bound
bound
shl
push
push
jge
inc
les
pop
in
pop
in
jecxz
cmp
pop
xor
es
mov
push
dec
nop
repnz
call
loop
lods
(bad)
and
shl
xchg
out
push
nop
add
jmp
mov
movs
fs
mov
jns
push
or
adc
push
cmp
mov
xchg
jmp
(bad)
push
lds
add
and
push
(bad)
in
adc
stc
je
aad
lods
popa
xchg
dec
dec
adc
pop
xor
into
cmp
cld
xor
adc
mov
xor
das
div
scas
jmp
std
xor
jecxz
clc
bnd
dec
xor
push
lods
scas
inc
xchg
sar
xor
push
jmp
test
cmp
inc
(bad)
sbb
mov
xor
test
adc
dec
test
push
xor
int3
push
push
mov
hlt
mov
in
ret
test
jo
rcr
sbb
mov
inc
dec
lahf
ret
cld
sar
or
mov
aas
iret
out
and
jo
stos
js
pop
mov
jb
(bad)
out
lods
add
fist
call
fidivr
xor
aad
retf
int
imul
mov
mov
add
leave
mov
push
xchg
mov
test
xor
fst
je
xchg
dec
push
push
movs
and
xchg
not
js
dec
mov
dec
pop
sub
enter
mov
lock
xor
cmp
mov
sbb
inc
imul
pop
fadd
popf
cdq
and
mov
mov
mov
test
mov
and
or
sbb
idiv
bound
pop
xchg
or
imul
dec
jo
rcr
movs
cmp
js
lea
jb
and
jle
les
mov
(bad)
mov
mov
mov
leave
in
jo
hlt
pop
ja
cdq
sbb
rol
sub
cs
sub
push
mov
pop
mov
fisttp
in
loop
jae
pusha
(bad)
loope
mov
xor
pusha
xchg
ror
pop
pop
sub
mov
(bad)
fs
rcr
xor
mov
mov
addr16
jmp
push
stos
retf
(bad)
sti
sar
loope
data16
sahf
or
mov
sub
lea
mov
adc
xor
mov
lahf
adc
daa
sub
loope
pop
cmp
std
dec
test
dec
rcr
(bad)
shl
jecxz
push
pop
xchg
iret
pushf
iret
aad
cs
retf
cmp
sti
ss
shl
and
stc
mov
mov
pusha
les
fidivr
fucomp
push
mov
fiadd
push
inc
into
fidiv
daa
xchg
inc
jge
xor
jno
ins
ja
sub
sbb
dec
mov
and
popa
push
popa
xchg
jne
stos
arpl
adc
xchg
xchg
pop
pop
mov
(bad)
push
or
and
in
into
repnz
ss
fwait
add
fcmovnb
lods
mov
dec
jo
cmps
pop
sub
aad
lea
fist
cmp
jne
ds
fwait
push
test
outs
pop
popa
adc
mov
sub
repnz
int3
jnp
shl
popf
push
sub
iret
mov
hlt
mov
adc
cli
ret
adc
gs
inc
movs
in
fisubr
mov
cld
pop
rol
mov
and
and
add
jmp
aaa
mov
and
mov
lods
call
inc
push
imul
aaa
test
in
sti
rcr
mov
jecxz
std
test
mov
add
fmul
lock
out
addr16
or
sbb
mov
add
loop
int
or
push
pushf
cmps
das
inc
mov
les
cwde
sub
push
push
daa
jb
mov
cmc
cmp
ins
stos
xchg
imul
sub
sahf
push
retf
and
or
cmps
scas
in
or
pushf
dec
je
cld
call
push
(bad)
imul
push
sbb
jmp
pop
jmp
inc
pop
imul
loop
mov
jmp
adc
das
xor
jns
sub
push
inc
pushf
daa
pop
and
int
pushf
into
ss
cmp
cmps
jne
aaa
or
inc
loopne
sahf
test
jnp
fld
cdq
xor
js
loope
mov
and
lock
ret
fsub
push
sub
test
sti
mov
or
in
es
js
dec
lahf
clc
mov
out
popf
inc
rcr
sbb
in
xor
push
nop
stos
push
lods
shl
jo
add
scas
mov
mov
push
mov
scas
scas
call
retf
loope
mov
push
mov
js
sub
push
ja
jp
sbb
aam
stc
sahf
lea
xor
pop
jl
dec
test
fcmovnbe
jb
outs
retf
xor
sbb
mov
sub
cmp
mov
(bad)
loop
sar
lds
iret
sbb
ja
imul
mov
(bad)
rcl
mov
jecxz
rcl
adc
sub
(bad)
or
fsubr
sub
mov
or
xchg
pop
xchg
adc
(bad)
pop
add
mov
inc
and
xor
sub
das
js
mul
push
loopne
dec
fsubr
push
sub
shl
and
stc
push
inc
inc
sub
or
or
mov
add
stos
sub
lahf
scas
addr16
mov
push
out
jmp
inc
call
xchg
leave
inc
xchg
ins
in
out
imul
cmp
xor
xor
xchg
inc
icebp
ds
iret
mov
aas
loop
xchg
in
jmp
inc
mov
mov
push
xor
inc
jb
test
fiadd
ja
push
add
sub
adc
cld
sub
mov
mov
cmp
pop
stc
push
pusha
shl
mov
mov
sbb
add
adc
movs
(bad)
jo
push
jb
sub
dec
outs
pop
test
cmp
pop
fsub
pop
and
jnp
pop
invd
and
arpl
dec
and
(bad)
div
adc
popf
jb
cmp
dec
jns
inc
dec
inc
and
xchg
xchg
movs
jno
inc
mov
inc
clc
shr
fucom
jne
and
gs
(bad)
cmc
aas
mov
sbb
xor
imul
(bad)
jge
fwait
xchg
cwde
sar
push
xor
push
pop
cmp
das
push
xor
mov
xor
(bad)
cmp
pop
jns
(bad)
fnstenv
pop
or
pushf
xchg
pop
cmp
inc
and
push
loopne
dec
pop
fsubr
jb
jbe
test
test
push
movs
int3
add
mov
movs
xchg
mov
mov
and
pop
repz
jg
out
inc
fstp
add
jp
js
and
sub
pop
outs
jmp
test
xor
inc
ret
sbb
sub
in
push
sbb
xlat
or
lahf
retf
cld
imul
xor
and
addr16
mov
pop
repz
fisub
cmps
sbb
retf
cmc
pop
push
pop
push
lea
inc
cmp
dec
sbb
fwait
clc
(bad)
in
or
inc
repz
pop
xchg
scas
inc
add
jb
add
leave
sub
xchg
cmp
out
sub
jne
pop
retf
inc
jmp
xchg
mov
hlt
xchg
add
ficom
ror
neg
sar
and
(bad)
jg
jbe
lods
push
jge
sub
mov
test
setns
enter
xchg
dec
aaa
dec
pop
or
ret
mov
push
imul
bnd
and
mov
popa
or
xchg
mov
lea
mov
ss
int3
cwde
shl
lea
nop
ins
cmp
fstp
fwait
cli
daa
dec
stos
jg
movs
les
mov
jge
cli
je
(bad)
jp
adc
ja
movs
ds
mov
in
ror
cmp
dec
test
test
fmul
clc
lods
ds
test
into
sbb
xchg
inc
mov
leave
cmps
xor
test
arpl
enter
mov
xchg
mov
rcl
inc
cmp
fdiv
inc
es
mov
xor
ins
add
inc
cmp
push
mov
mov
mov
inc
inc
ds
adc
ficomp
enter
imul
inc
or
adc
push
mov
in
mov
dec
push
mov
adc
or
or
jns
push
aaa
hlt
mov
ins
call
add
or
mov
(bad)
jmp
js
push
dec
jg
div
lods
lods
jmp
enter
fucomip
adc
xor
out
mov
rol
xor
mov
shl
push
sub
inc
xor
inc
ss
dec
sbb
xchg
mov
out
dec
ja
push
pop
push
push
and
pmulhuw
out
push
and
cmp
call
jmp
and
dec
ss
mov
pop
leave
aaa
xchg
lods
fmul
test
faddp
js
sbb
dec
pop
out
inc
dec
cmp
test
sti
ret
dec
or
cmp
cmp
sahf
push
leave
adc
gs
cmc
pop
xor
imul
lods
cmp
push
mov
retf
dec
aas
mov
jmp
fdivr
rol
mov
mov
jmp
mov
add
scas
inc
push
test
jge
rcl
mov
arpl
mov
daa
out
mov
mov
es
lds
aad
icebp
(bad)
pusha
dec
xor
mov
out
out
mov
xor
jo
sub
push
hlt
sar
xor
inc
sbb
push
jb
pop
push
mov
jp
inc
test
push
imul
or
sbb
add
and
rol
es
xchg
jb
daa
fbstp
sbb
push
rol
sub
dec
jne
fiadd
sub
jmp
call
lea
outs
pop
or
jno
fcom
mov
lock
push
push
mov
fmul
inc
xor
fs
sub
test
and
sub
fnstenv
data16
jmp
xor
popf
xchg
in
mov
stos
push
adc
push
or
xor
sub
push
xchg
movs
add
mov
int3
shl
call
push
das
pop
cmp
lods
icebp
imul
cmc
mul
or
sbb
call
xor
adc
arpl
nop
mov
mov
pop
mov
mov
adc
sub
mov
(bad)
xchg
idiv
xchg
mov
(bad)
daa
sbb
into
out
movs
push
fistp
sub
jl
sub
xchg
stos
dec
aaa
cld
stc
push
push
rol
pop
jo
retf
sub
or
pushf
mov
lods
push
xchg
adc
fnstcw
repnz
in
in
fild
mov
xor
mov
lods
sbb
mov
outs
sub
lahf
rcl
pop
mov
es
push
and
pop
or
dec
ja
fisub
and
ins
jge
xchg
push
les
mov
mov
xchg
lods
jnp
xchg
cld
arpl
imul
enter
inc
leave
inc
sub
ret
sub
dec
push
push
jb
xor
dec
sbb
sbb
out
jne
rcl
adc
sar
stc
imul
enter
(bad)
jb
xlat
push
or
mov
xchg
push
cmp
cmc
rcl
jmp
sbb
pop
rcr
and
add
in
pushf
cmps
sbb
ins
mov
jnp
jbe
fwait
outs
add
imul
ins
ror
dec
or
inc
adc
bound
push
retf
nop
daa
addr16
inc
(bad)
mov
xor
fnstcw
int3
rcl
je
jae
push
add
out
fist
push
adc
and
sti
mov
mov
pusha
jle
adc
mov
mov
movs
xor
mov
pop
and
dec
inc
mov
push
dec
adc
xchg
sbb
push
adc
or
jbe
jbe
sub
aam
sub
or
inc
cdq
dec
push
dec
push
and
sub
push
xchg
cwde
jp
xor
jp
call
imul
enter
dec
popa
int
out
nop
ror
pop
arpl
xchg
retf
mov
ret
xor
sub
mov
mov
or
adc
push
inc
aaa
rcl
push
mov
cdq
sub
fnsave
mov
adc
aas
mov
out
add
inc
fbld
movs
push
test
rcl
fdiv
ss
xor
ficomp
call
out
mov
cld
sub
fstp
inc
es
or
sub
pop
inc
mov
add
xchg
sub
fstp
fisub
cmp
or
push
call
adc
das
adc
push
mov
call
sbb
jmp
fisubr
sub
retf
pop
xchg
jmp
dec
mov
pop
ret
iret
mov
push
jmp
xor
xchg
aaa
stos
xchg
or
jmp
shl
fldenv
scas
mov
xor
call
std
mov
or
and
in
js
pop
mov
aad
add
xor
lds
adc
mov
inc
xor
jo
pop
inc
jne
outs
and
test
pop
pop
ss
xchg
cmp
test
xor
ds
jmp
sub
inc
pop
sbb
sbb
mov
loopne
sahf
push
dec
jne
sub
cmp
push
mov
mov
sub
add
sbb
int3
pop
pop
lods
mul
mov
gs
addr16
xchg
jge
jno
sub
neg
jno
shr
sub
sahf
retf
lods
add
bound
nop
gs
rol
fnstenv
ret
jb
mov
inc
sub
into
cmp
enter
and
fwait
push
pop
int
xchg
test
sbb
push
push
cld
icebp
imul
(bad)
mov
frstor
mov
(bad)
mov
mov
jne
mov
sub
cmp
or
test
and
cmp
mov
inc
xchg
out
bnd
test
jmp
pop
mov
clc
ja
jb
adc
daa
(bad)
dec
push
in
lock
mov
lea
and
and
and
cmc
dec
mov
jno
xor
in
ds
fsubr
daa
adc
mov
je
(bad)
add
push
mov
fdivr
adc
(bad)
jb
cmp
rcr
add
mov
adc
push
jns
and
in
dec
fidivr
fs
dec
stos
ror
sbb
pop
jnp
test
das
inc
movs
cmp
fwait
add
in
jmp
mov
sub
call
in
and
loop
cmp
dec
mov
mov
movs
fs
mov
or
es
fisub
xor
xor
fadd
dec
jbe
jns
mov
dec
pop
adc
cmp
test
gs
stos
jl
or
push
test
ins
lds
xor
gs
push
out
mov
test
jbe
dec
(bad)
daa
adc
sub
dec
retf
xchg
rol
mov
jmp
lods
inc
rol
push
je
jno
call
in
je
movs
ins
push
lods
mov
repnz
inc
push
lahf
push
pusha
cmp
dec
mov
call
adc
xchg
xor
ins
fstp
imul
dec
mov
mov
pop
fcom
das
in
mov
fnsave
adc
sub
pop
jle
and
and
test
fistp
loop
fimul
sbb
movs
mov
in
ins
fisubr
cmp
cmp
xor
(bad)
pop
ret
cmp
jae
add
test
bound
cmc
xor
je
and
(bad)
and
jno
test
and
(bad)
xlat
jnp
aad
adc
dec
push
cli
xchg
mov
push
addr16
mov
add
bound
mov
dec
mov
xchg
pop
jle
inc
push
fld
inc
jno
xchg
push
or
cmp
nop
ret
fstp
in
addr16
dec
stos
push
pop
xchg
icebp
mov
jmp
mov
jl
daa
out
mov
test
addr16
xchg
movs
enter
jl
fwait
in
sbb
mov
mov
add
imul
pop
jmp
inc
lods
leave
popa
repnz
xchg
add
fs
sti
jne
mov
(bad)
scas
jl
xor
ds
ja
fisubr
sub
sub
fidivr
and
xchg
jno
jmp
mov
imul
xchg
scas
fldcw
adc
cld
pop
push
push
jp
movs
cli
mov
push
push
pop
out
pop
ja
inc
imul
mov
xchg
cmp
test
cmp
sti
mov
loopne
ins
sub
inc
sbb
sub
imul
jg
mov
xchg
inc
or
adc
push
inc
imul
jne
push
in
jbe
dec
adc
repz
pop
in
fiadd
mov
out
pop
xor
ins
push
lods
xor
(bad)
cmp
loop
xor
cmps
leave
sbb
mov
imul
add
sahf
repz
loop
pop
out
dec
cmps
bound
cmps
ds
mov
cmp
loope
cmp
mov
or
lock
mov
pop
(bad)
je
(bad)
add
cld
fistp
test
out
test
scas
outs
fistp
xchg
leave
das
out
xchg
xor
pop
jecxz
test
mov
push
in
and
mov
pop
adc
not
inc
mov
mov
neg
and
aas
repnz
(bad)
leave
or
mov
fld
push
add
not
xor
sub
xchg
iret
addr16
add
icebp
(bad)
jp
pop
cmp
push
(bad)
pop
add
add
sub
jne
xchg
pop
lds
xchg
in
jge
push
and
inc
dec
test
or
sti
and
test
or
adc
inc
inc
push
mov
add
addr16
xchg
movs
enter
xor
pushf
stc
rcr
sahf
lea
cmp
push
pop
mov
arpl
sub
mov
das
data16
ja
out
mov
xor
dec
test
add
jmp
pop
push
push
mov
inc
outs
mov
mov
lahf
(bad)
jno
enter
icebp
repnz
sbb
inc
and
jp
inc
fcom
xchg
mov
xchg
pop
cwde
(bad)
jbe
das
mov
jge
loope
(bad)
sub
shl
daa
out
scas
adc
cmp
mov
pushf
pop
or
pop
pop
mov
push
sahf
add
push
mov
(bad)
push
add
push
pusha
es
dec
mov
(bad)
mov
pushf
or
sub
outs
cmp
add
pop
ss
jae
jecxz
adc
mov
es
sub
sub
pop
mov
cmp
(bad)
jne
xor
xchg
xlat
stc
push
sub
sub
ror
loopne
not
cdq
(bad)
aad
pushf
or
sbb
fcomp
mov
fadd
add
sub
outs
push
stos
pop
lods
in
mov
in
mov
das
xor
imul
push
or
sub
cmps
mov
push
or
cmps
mov
sub
fst
call
pop
cmc
pop
aaa
mov
(bad)
xor
movs
xor
hlt
or
mov
fwait
cdq
pop
mov
bound
xor
mov
shl
jmp
jl
retf
(bad)
enter
rol
xchg
rcr
push
clc
sbb
jo
dec
arpl
mov
aas
das
xchg
jo
ror
pop
sbb
lds
stc
or
sub
mov
mov
and
inc
sub
mov
push
iret
add
inc
mov
nop
rcr
(bad)
lods
leave
in
iret
(bad)
idiv
arpl
enter
xchg
pop
jne
dec
test
push
inc
outs
imul
or
adc
inc
xrelease
outs
dec
popf
int3
xor
sbb
push
inc
cmp
sbb
mov
std
add
pusha
(bad)
mov
mov
push
adc
ds
sub
dec
cmp
mov
je
not
lock
sub
(bad)
push
clc
mov
cmc
xor
dec
(bad)
push
xor
jne
push
aaa
js
inc
and
xor
mov
or
and
scas
out
popf
dec
mov
jmp
dec
jecxz
(bad)
nop
or
xlat
(bad)
mov
mov
xor
mov
mov
jae
es
mov
into
mov
cld
mov
xor
jae
xchg
mov
sti
stos
jle
adc
jecxz
cmp
pop
cld
sub
xchg
xchg
out
shr
dec
test
inc
movs
mov
cmps
pop
mov
mov
setbe
sbb
clc
sti
pop
stos
jmp
inc
fst
mov
mov
pop
icebp
mov
outs
xchg
mov
mov
push
stos
xor
xchg
mov
movs
mov
mov
hlt
xchg
sub
test
lds
dec
add
mov
jmp
cdq
aam
mov
cld
mov
fisttp
movs
mov
push
or
xchg
aad
call
fisttp
jo
xor
(bad)
rcr
pop
ret
ins
jo
jo
ret
rcl
xor
jmp
sub
push
mov
jns
push
retf
and
daa
pop
add
and
test
retf
mov
dec
lahf
mov
mov
cmp
pop
cmp
arpl
pop
mov
mov
les
mov
sub
add
xchg
or
pop
mov
cmc
gs
out
mov
mov
retf
mov
and
mov
dec
jae
(bad)
js
push
xor
pop
xor
ret
push
popa
xchg
addr16
shl
hlt
adc
add
dec
pop
repnz
xor
inc
mov
in
out
rcl
ret
test
sbb
aas
scas
out
dec
jbe
push
xchg
push
dec
mov
inc
aas
sub
inc
inc
mov
xchg
xchg
and
in
pop
fisubr
das
dec
mov
mov
pop
mov
jnp
pusha
mul
cmp
push
adc
xor
xchg
iret
cld
popf
aaa
or
mov
movs
push
sub
or
jns
and
clc
rcr
inc
push
push
or
xlat
xchg
rcr
cdq
mov
test
add
cmp
mov
cmp
sbb
rcl
nop
and
shl
push
mov
push
aaa
jmp
das
lods
add
adc
ror
cmps
clc
imul
jns
xchg
push
mov
shl
cmps
fbld
push
push
shl
mov
xor
test
movs
add
clc
imul
push
ss
js
cli
jno
(bad)
or
call
mov
gs
inc
jo
out
inc
sti
movs
das
xor
xchg
sub
pop
xchg
xor
xor
shr
fadd
adc
add
mov
or
jl
stos
mov
mov
sbb
test
mov
leave
mov
cs
and
mov
in
xor
mov
push
cmp
repz
sub
loop
(bad)
es
pop
lahf
loop
popf
pushf
call
rep
movs
and
imul
mov
cmps
push
sub
mov
fmul
mov
movs
cmps
inc
pop
mov
popa
ins
(bad)
out
repnz
xchg
sub
lahf
sub
pop
js
cmp
or
sbb
mov
aad
sbb
dec
or
inc
ret
movs
(bad)
jno
jl
gs
xor
das
mov
movs
pop
xchg
mov
cmp
mov
adc
out
retf
sbb
int3
fisttp
nop
inc
movs
icebp
cmc
int
imul
jbe
or
xchg
adc
aam
or
stos
mov
dec
lods
cmp
in
mov
enter
xchg
jmp
shl
inc
add
shl
adc
test
or
push
add
into
jle
adc
push
jle
lods
mov
imul
adc
fisub
sub
aam
jp
or
loopne
fs
jne
mov
repz
push
leave
imul
data16
sub
sub
in
in
aam
sbb
sub
repnz
cli
int3
retf
or
jge
ret
pop
fstp
jbe
pop
lods
push
xor
and
lahf
(bad)
add
cmp
ja
ss
ret
jl
js
or
push
(bad)
sbb
stos
std
inc
mov
inc
and
add
shr
gs
and
adc
in
push
add
add
push
test
and
aad
xchg
sti
adc
inc
jmp
rol
push
fldenv
fucomp
test
out
push
or
sbb
sbb
movs
movs
mov
xor
rcl
pop
cmc
mov
sub
sbb
(bad)
mov
jecxz
stos
sbb
sbb
lea
fiadd
hlt
repnz
(bad)
(bad)
icebp
pusha
hlt
and
inc
pop
jnp
test
jp
inc
pop
lods
imul
cmp
or
mov
dec
fisttp
sub
fstp
fsubr
xlat
inc
sbb
jmp
dec
pop
popa
mov
int3
jl
lods
add
mov
inc
iret
nop
mov
dec
out
mov
stc
mov
data16
cmps
dec
push
push
loope
cmp
test
mov
ret
pusha
inc
adc
and
jbe
and
shl
fst
or
dec
stc
xlat
gs
(bad)
jg
loopne
xchg
popf
or
mov
cwde
cmp
retf
push
rcl
push
jecxz
gs
mov
(bad)
aaa
mov
dec
dec
add
leave
data16
nop
or
xchg
mov
sbb
loope
jmp
sbb
daa
mov
jbe
(bad)
aas
dec
fistp
ret
mov
jg
mov
xchg
sbb
and
sub
cs
push
push
xor
mov
cmp
sbb
xchg
cld
cmp
or
ins
cmps
mov
push
pushf
shr
test
xor
mov
xchg
aad
sbb
repnz
mov
mov
outs
jns
nop
adc
mov
dec
sti
inc
sti
dec
inc
int
enter
clc
mov
mov
imul
push
retf
cmp
sub
jle
mov
mov
rol
dec
xlat
sub
jecxz
cmps
mov
add
push
xor
leave
repz
and
std
or
add
scas
or
pop
ins
sbb
std
pop
sub
data16
sub
lea
cmp
push
jmp
jne
add
ficomp
aad
mov
jnp
push
pop
popa
jecxz
dec
clc
add
clc
pop
scas
and
clc
dec
test
mov
xlat
std
xor
mov
push
inc
fsubr
out
xchg
adc
aam
xchg
and
sub
retf
push
fstp
test
jp
lds
cmps
sub
mov
lock
dec
mov
aaa
xor
mov
(bad)
mov
clc
jle
rcr
js
loopne
push
(bad)
mov
jne
or
sbb
push
sbb
and
mov
add
jecxz
addr16
mov
dec
(bad)
xlat
cdq
mov
add
inc
aam
mov
xchg
aad
mov
jns
cmp
cmps
out
pushf
dec
cli
or
fs
aas
in
inc
adc
mov
fwait
daa
repnz
pop
mov
scas
in
mov
jns
push
mov
or
mov
xchg
mov
mov
loope
sub
or
or
cli
imul
cmps
nop
sbb
(bad)
outs
jecxz
push
scas
add
mov
lods
(bad)
ins
xchg
xchg
fcmovnu
cmp
or
cli
pop
sbb
test
mov
pop
in
fistp
adc
(bad)
bound
adc
mov
adc
(bad)
rcl
jae
out
mov
es
sbb
cwde
lahf
mov
aaa
sbb
lds
stos
movs
mov
lahf
sub
or
das
hlt
inc
mov
sbb
les
idiv
js
cld
jnp
test
(bad)
fsubr
ins
xor
loop
cmp
outs
stos
xlat
test
ret
idiv
jo
xlat
push
jp
fimul
scas
mov
mov
adc
hlt
es
cmp
cmp
lods
icebp
pop
push
aad
rcl
scas
and
(bad)
pop
sti
jmp
call
imul
repnz
dec
mov
or
jecxz
jb
add
out
lds
xor
sti
retf
retf
out
jo
xchg
push
movs
xor
call
ds
fst
mov
inc
or
xchg
rol
dec
aam
sahf
mov
and
imul
hlt
sub
pop
test
(bad)
fisub
sbb
bound
jmp
mov
dec
pop
sti
shl
in
inc
push
loop
xor
cmp
and
cmp
push
mov
xchg
mov
fld
out
jmp
mov
push
sti
ret
fdiv
in
popf
cmp
sbb
inc
push
push
out
imul
dec
jg
movs
fsub
mov
arpl
in
cli
inc
xchg
xchg
push
mov
ret
ds
push
jno
ret
cmc
jmp
xchg
ds
scas
stos
xor
xchg
inc
mov
in
ins
xchg
imul
pop
lds
fisttp
push
call
sub
movs
aam
imul
out
jb
jmp
mov
dec
popa
xlat
loope
(bad)
push
cld
in
aas
sbb
loop
lds
cmp
and
add
add
inc
adc
fwait
sub
xor
bound
test
sar
push
push
mov
sbb
sbb
ds
and
xor
cmp
and
loope
test
sahf
jae
xchg
mov
push
addr16
js
xchg
test
ret
push
dec
aaa
adc
jge
add
rol
repnz
xchg
aad
xchg
inc
int3
cwde
sub
icebp
rol
fxch
mov
dec
lds
mov
mov
inc
xchg
jno
ins
fild
push
fsub
cmp
push
cwde
or
ins
jp
mov
add
sub
jmp
fs
pop
das
and
imul
or
cwde
das
lock
mov
mov
cmps
(bad)
les
(bad)
jmp
std
(bad)
sti
ins
add
call
shr
adc
push
das
jne
fcom
push
jns
call
xor
mov
out
mov
fistp
clc
cli
mov
int3
add
sahf
or
shl
or
out
popf
adc
fist
(bad)
cmp
jmp
hlt
dec
aaa
ins
nop
(bad)
cmp
test
lock
xor
test
dec
jmp
and
ss
std
add
sub
aaa
shr
loope
xor
add
jg
push
or
pop
mov
das
mov
daa
in
loopne
retf
mov
test
sbb
das
cmp
sub
cdq
jmp
cmc
fild
or
rol
fimul
inc
hlt
cmc
ret
inc
call
push
mov
(bad)
call
lods
push
sub
push
mov
imul
clc
lock
out
jo
dec
btr
gs
sbb
pushf
icebp
repz
imul
shl
push
xlat
or
popf
hlt
repnz
sub
cdq
xchg
(bad)
shl
pusha
daa
mov
mov
sub
retf
jecxz
nop
inc
or
pop
jp
inc
sub
cli
jns
or
popf
in
xchg
and
sub
repnz
clc
fisttp
or
repnz
aas
mov
cld
inc
ror
xchg
xor
cmp
inc
retf
sbb
aaa
adc
fidivr
das
pop
in
inc
or
les
daa
xchg
pop
rol
clc
(bad)
push
shl
repnz
mov
(bad)
mov
cmp
mov
sub
stos
mov
mov
push
inc
add
mov
and
retf
inc
xchg
dec
mov
shr
push
pop
mov
sti
or
movs
in
xor
pop
out
jne
push
pop
dec
push
in
add
add
xor
or
scas
push
pop
in
(bad)
enter
std
cmc
arpl
test
(bad)
add
loopne
mov
inc
das
mov
push
inc
mov
push
and
xchg
or
fwait
ins
ret
xchg
cwde
mov
dec
sbb
inc
add
(bad)
fisttp
out
gs
lds
dec
adc
(bad)
jecxz
in
pusha
scas
fwait
loope
(bad)
mov
cmp
fnstsw
push
in
cmp
xchg
(bad)
call
ffreep
cmp
shl
add
xor
mov
inc
(bad)
mov
addr16
mov
loopne
aas
lock
movs
xchg
fisubr
rcl
push
sub
test
inc
cwde
mov
and
or
in
dec
nop
pusha
jmp
jg
in
lock
imul
mov
jb
in
inc
pop
fcmovnb
xchg
dec
sbb
dec
aas
jle
mov
(bad)
hlt
or
lea
ficom
adc
jle
mov
cmc
inc
jle
lods
mov
je
imul
push
sub
sbb
or
mov
int3
in
push
je
and
imul
add
mov
push
xlat
aaa
pushf
xor
pop
jmp
ss
dec
jns
xchg
dec
jbe
xor
mov
lahf
add
aad
jge
xor
(bad)
lods
test
jne
pop
push
cmp
scas
mov
rol
or
popf
scas
jle
mov
and
or
gs
inc
test
loop
sbb
xchg
clc
push
sahf
call
icebp
mov
xchg
xor
fild
fist
lods
(bad)
pop
jge
repz
or
cmps
into
jge
mov
jmp
idiv
(bad)
aas
mov
jb
cmp
movs
das
ds
cmps
inc
lds
add
bound
mov
dec
dec
xor
das
cdq
retf
pop
mov
popa
in
(bad)
(bad)
mov
push
mov
cmps
ret
mov
sbb
xchg
sub
and
scas
retf
out
mov
jbe
mov
push
retf
push
test
fwait
(bad)
xchg
test
fild
jns
clc
xchg
fist
pushf
mov
lods
repnz
push
mov
icebp
sub
sbb
test
repz
stos
and
std
pop
movs
adc
xor
cs
jnp
sub
cmp
add
aas
dec
push
inc
sti
ss
pushf
add
adc
pop
xchg
sub
sbb
test
xor
(bad)
(bad)
sti
ret
scas
lock
cld
div
adc
push
retf
pusha
push
inc
pushf
je
lods
add
inc
xchg
lods
js
jmp
vandps
pop
test
mov
shl
fadd
out
push
dec
jg
(bad)
pop
push
test
mov
mov
in
sbb
push
adc
shl
jecxz
xchg
(bad)
into
in
mov
mov
repz
pop
xchg
pop
sbb
dec
sub
mov
aad
pop
shl
add
xor
mov
add
mov
lods
push
int
jae
inc
fdiv
or
lea
dec
outs
(bad)
jp
ret
rol
pop
xlat
pop
(bad)
outs
orps
inc
int
mov
mov
(bad)
mov
std
lahf
pop
add
bnd
pop
popf
adc
mov
push
cli
stos
rol
cmp
jmp
stos
mov
cmp
inc
std
or
inc
xchg
icebp
ror
and
xor
bound
sahf
(bad)
jp
add
dec
leave
xchg
mov
fidivr
cmp
enter
cmp
(bad)
(bad)
adc
fdivr
mov
bound
or
les
add
daa
pop
stos
xchg
mov
sub
(bad)
in
sti
fidiv
cmp
sbb
mov
fdiv
stos
ins
add
out
cmp
xchg
or
adc
mov
sar
call
mov
aad
cmp
jae
fisubr
cli
pusha
ret
pop
or
lock
in
jnp
shl
movs
pop
int
aam
fisttp
cmp
inc
sbb
xchg
cdq
idiv
dec
shl
push
lea
mov
loop
(bad)
in
cwde
xlat
not
and
pop
imul
pop
inc
xor
(bad)
adc
dec
or
nop
jo
sbb
xor
add
enter
clc
sub
jns
jnp
popa
(bad)
out
iret
mov
xchg
call
mov
mov
out
cli
arpl
sti
(bad)
jb
jae
add
addr16
fild
pop
fsub
popa
js
out
cs
popf
xchg
mov
mov
push
jge
aas
jge
cmp
jmp
push
mov
mov
pop
ss
es
pop
div
push
je
fmul
rcr
adc
nop
loope
scas
int
call
push
jecxz
aas
imul
mov
call
and
jae
dec
das
ja
lahf
jne
add
dec
mov
cmc
push
dec
iret
imul
enter
xlat
fistp
lahf
jmp
dec
xchg
pop
call
jbe
inc
cmp
or
add
mov
cmp
xor
stc
sbb
arpl
cmp
pop
fcomip
(bad)
aas
mov
jle
xlat
ds
mov
call
push
add
inc
mov
call
movs
lds
retf
mov
mov
xchg
call
repnz
jp
outs
cmp
out
or
jl
in
or
xchg
retf
jns
mov
iret
daa
fnsave
jp
push
ret
mov
in
repnz
mov
adc
and
and
jmp
jmp
add
push
mov
mov
cmp
popf
jle
adc
mov
add
dec
ret
mov
pop
adc
mov
jmp
sbb
mov
mov
(bad)
mov
cmp
shl
imul
push
sub
or
jmp
fucomi
jae
or
test
bound
add
lahf
scas
mov
fs
icebp
ins
adc
test
xor
clc
adc
xchg
pusha
sub
arpl
or
push
into
mov
imul
(bad)
jmp
pop
pushf
fst
jno
test
pop
test
sahf
retf
lahf
inc
ror
inc
jae
adc
xchg
add
sbb
mov
dec
scas
mov
mov
jnp
sub
pop
aas
shl
inc
int
sbb
adc
add
jo
mov
mov
sahf
cld
js
pop
and
pushf
mov
mov
out
and
fimul
scas
mov
cmp
push
cmp
mov
dec
int
push
xchg
inc
fwait
cmp
scas
and
je
mov
test
fwait
mov
ins
sbb
iret
sub
shr
retf
push
shl
ins
ds
dec
stc
push
sub
cmp
or
pop
xor
test
(bad)
adc
xchg
jnp
fimul
in
enter
or
(bad)
mov
fwait
sti
sahf
in
lea
add
sub
push
and
mov
jo
(bad)
pop
pavgw
jbe
cmp
or
jmp
dec
pop
and
mov
ja
cmp
adc
cld
(bad)
push
call
pop
mov
out
and
bound
vaddpd
mov
cmp
in
mov
or
cmps
jo
in
scas
xor
sub
lea
ins
sar
int3
jl
jne
xchg
xlat
je
adc
ds
pop
inc
movs
ret
aam
in
repz
add
xchg
popf
xchg
xchg
sub
sbb
mov
pop
addr16
aas
shrd
fs
cmps
paddw
pop
push
jnp
jbe
or
mov
push
mov
arpl
scas
jno
xor
push
pop
(bad)
test
call
cld
cld
sbb
mov
mov
mov
adc
add
pusha
ins
push
mov
mov
aaa
ins
pop
repz
xor
ror
arpl
and
pop
pop
mul
out
push
cs
sbb
fwait
dec
cmp
pop
or
mov
neg
add
mov
inc
fsubr
imul
inc
outs
mov
fwait
cld
stc
mov
icebp
jp
jns
sbb
mov
jno
hlt
push
sysret
jl
xor
(bad)
mov
int3
cmps
dec
push
adc
call
or
xor
jnp
ficomp
inc
cli
cmp
(bad)
hlt
fistp
sbb
jae
jmp
daa
push
mov
push
or
std
xor
xchg
aad
inc
(bad)
aam
movs
push
aam
outs
inc
pop
push
lea
add
mov
(bad)
ror
ret
shl
adc
je
shl
imul
data16
call
retf
and
(bad)
mov
dec
leave
enter
and
les
repnz
in
aad
mov
dec
ror
sub
mov
cld
push
(bad)
in
push
in
and
xor
imul
mov
adc
inc
call
xchg
aad
mov
jno
jge
xor
xchg
dec
push
repz
adc
test
and
mov
cld
lahf
jne
sbb
xor
sbb
fs
mov
cld
inc
es
adc
jnp
mov
ficomp
lock
xor
cwde
jnp
cmp
lods
out
jg
pop
and
push
adc
and
mov
dec
lods
call
test
push
mov
(bad)
mov
inc
jb
sar
imul
and
dec
inc
push
mov
fbstp
dec
xor
mov
movs
lds
sub
xor
sub
fnsave
cmp
adc
test
stc
or
int3
ret
push
mov
mov
aas
mov
sbb
sub
mov
fiadd
cld
jg
adc
mov
sub
addr16
mov
popa
sub
jmp
xchg
mov
leave
sub
je
in
add
sub
xchg
hlt
add
inc
shl
ror
or
mov
jmp
inc
arpl
imul
pop
xor
inc
jl
cmp
sub
push
clc
cmps
cmc
inc
leave
cmp
inc
int
mov
gs
adc
sbb
movs
mov
es
add
cli
pop
push
sub
dec
fimul
jmp
inc
and
test
push
mov
and
stos
push
fisttp
dec
lahf
test
dec
push
loopne
in
inc
shl
inc
jp
mov
inc
and
mov
dec
mov
dec
or
mov
sub
xchg
push
ret
cmps
aas
jb
repnz
sbb
(bad)
mov
aas
jg
mov
les
arpl
and
fnstsw
jo
scas
mov
or
adc
inc
mov
jecxz
mov
inc
xor
pop
dec
jmp
sub
sub
ja
ins
out
test
shl
and
and
fcmovnb
movs
add
sbb
lock
cmps
fwait
cdq
mov
mov
call
cmp
call
push
dec
lods
and
mov
xchg
or
jno
mov
xor
or
mov
iret
jo
mov
sub
adc
and
mov
dec
jo
daa
mov
inc
cwde
pop
ret
(bad)
enter
cwde
cmp
in
bound
out
js
cmc
or
cmp
push
cmp
mov
cmc
ss
nop
mov
fucomi
and
ds
inc
mov
or
jae
sub
mov
or
dec
sti
and
jae
stc
mov
jne
jb
(bad)
pop
xor
bnd
pop
out
and
and
cli
xchg
or
mov
sbb
cmp
xchg
xchg
sar
pmuludq
mov
or
ins
out
out
pop
std
stc
imul
bswap
mov
jno
fstp
mov
pop
mov
fimul
and
xor
cmp
dec
std
stc
cmp
mov
sub
dec
add
call
stos
cdq
inc
into
arpl
outs
push
cmps
outs
scas
or
xchg
pop
cmps
dec
enter
cmps
and
stos
sti
jp
nop
pop
loop
lahf
pop
pop
ss
in
sar
jbe
mov
pop
sbb
xchg
cmc
aas
xchg
arpl
ja
cmp
lds
xchg
jo
call
dec
cdq
aam
fisubr
mov
call
jmp
div
push
inc
jg
hlt
cmps
pop
mov
mov
xor
and
xchg
sub
sub
jb
in
imul
test
xlat
cld
adc
pop
sub
aad
hlt
dec
mov
mov
mov
add
add
sbb
(bad)
ja
inc
std
add
pop
xchg
(bad)
(bad)
add
pushf
jns
dec
mov
pop
lods
sbb
xlat
inc
jl
retf
mov
call
xchg
cmps
jbe
call
repz
cld
ins
lods
shl
js
push
mov
jae
mov
imul
dec
lods
mov
push
dec
popf
inc
push
mov
test
inc
cmps
push
aaa
xor
aad
dec
movs
in
mov
not
enter
arpl
mov
add
sar
sub
xchg
mov
mov
dec
test
cmp
mov
stos
cmc
inc
cdq
jae
sub
std
ret
push
stos
rcl
out
mov
pop
in
das
lock
or
lds
sbb
mov
jmp
jns
xchg
adc
(bad)
stos
lock
dec
mov
and
push
cmp
cmp
lds
mov
jmp
scas
out
add
(bad)
cmps
mov
push
pop
push
mov
jecxz
movs
loope
shr
test
or
cli
ret
shl
daa
pop
(bad)
(bad)
sti
sbb
add
jbe
fadd
movs
mov
xlat
scas
xchg
ret
mov
lock
pop
xchg
mov
jg
push
mov
(bad)
jle
fld
(bad)
xchg
cld
inc
sub
adc
ss
mov
test
jns
adc
out
push
mov
jg
pop
scas
xor
or
cmp
test
sub
adc
xor
sub
ret
mov
(bad)
cmp
mov
pushf
lahf
fld
aad
mov
je
xchg
stos
js
(bad)
int
cs
sbb
mov
and
inc
lods
jp
add
cli
mov
mov
imul
hlt
jbe
and
sub
adc
push
ret
ret
mov
cmp
aaa
inc
xchg
dec
cdq
(bad)
mov
push
dec
fld
invd
in
fsubr
or
cmp
(bad)
mov
loop
ja
xchg
pop
pop
push
aaa
cld
cmc
push
(bad)
scas
xchg
xchg
out
loop
mov
addr16
leave
cmp
mov
mov
or
mov
add
jo
loop
inc
pop
stos
cmps
iret
aaa
inc
sahf
and
xchg
ret
fwait
push
inc
(bad)
sti
mov
jo
out
mov
ror
loopne
add
fbstp
push
std
mov
mov
mov
stos
dec
or
xor
xchg
xor
test
jne
fidivr
popf
push
push
fsub
push
jecxz
add
cmp
cld
add
push
das
(bad)
push
loopne
mov
pop
sbb
(bad)
repz
shl
xchg
(bad)
and
fstp
das
adc
jmp
mov
dec
test
mov
test
movs
xor
bound
sahf
pop
imul
cs
push
pop
pop
mov
jmp
sub
xor
into
mov
push
jno
adc
out
ror
mov
outs
and
mov
dec
int
pop
sbb
sbb
lea
clc
xchg
jo
rcr
push
sahf
sbb
xor
or
hlt
cmps
fld
aaa
xor
xor
sbb
xchg
mov
xor
cmp
retf
and
adc
xor
or
cli
iret
mov
add
hlt
sbb
out
outs
pop
sub
je
call
inc
jge
(bad)
cld
xchg
jge
push
(bad)
stos
mov
xchg
or
add
jl
jns
mov
popf
inc
out
movs
popf
sub
push
retf
mov
adc
shl
jp
fmul
idiv
push
add
xchg
leave
pop
test
mov
cmp
inc
cwde
xchg
out
std
dec
out
cmp
outs
mov
push
sti
jbe
cdq
mov
push
dec
ficomp
dec
add
jp
lea
repz
aam
push
retf
ret
(bad)
(bad)
(bad)
dec
cmp
cmp
xor
addr16
aad
std
dec
jge
and
leave
jae
dec
daa
loope
xchg
and
(bad)
retf
loopne
mov
in
mov
or
sub
fnstcw
mov
leave
popa
in
fmul
stos
mov
jmp
or
shl
sub
mov
fistp
sub
xchg
leave
push
push
sub
pand
mov
push
stc
ror
cdq
mov
ret
in
add
cmp
mul
cmc
test
clc
retf
rcl
rcl
xchg
adc
repz
adc
adc
and
pop
ja
xor
pop
rcl
jmp
cs
ss
fcmovbe
mov
push
(bad)
popf
test
mov
in
xor
test
cld
(bad)
in
lahf
sbb
cmp
pop
mov
cmp
cld
mov
and
iret
les
mov
dec
adc
mov
jmp
sar
dec
sub
inc
xor
ds
cmps
mov
popf
mov
push
mov
sbb
test
mul
int3
pop
mov
inc
ret
jg
inc
movs
enter
out
repnz
xchg
jb
movs
inc
scas
inc
and
or
pop
xchg
jmp
rol
jmp
adc
outs
mov
data16
scas
inc
sbb
jnp
ds
push
inc
inc
mov
outs
test
sub
push
leave
cdq
mov
xchg
rcr
ins
sbb
cmp
in
(bad)
cld
fcom
dec
jne
shl
jmp
xchg
push
add
clc
add
and
into
pop
int
add
std
std
jecxz
add
pop
or
sbb
xchg
sub
xchg
aad
pop
xchg
adc
sub
jne
cmc
adc
inc
ins
clc
lods
dec
adc
mov
retf
xchg
outs
jne
int3
adc
or
rcr
pop
hlt
sub
and
enter
stos
and
fdivp
pushf
add
pop
ja
lds
dec
cwde
add
xor
movs
mov
rol
mov
jmp
cs
mov
(bad)
(bad)
adc
and
bound
xabort
ret
or
pop
push
push
cmc
ret
cli
mov
mov
int3
xor
xor
movs
jno
mov
inc
fs
mov
addr16
fcomp
or
xlat
pop
ss
lods
(bad)
idiv
rcr
cmps
mov
or
dec
std
fmul
add
bound
pop
test
xchg
xor
mov
sub
sbb
inc
sub
neg
or
bnd
cmp
sbb
cwde
push
rol
call
pop
mov
or
pop
sub
adc
bound
cmc
xor
push
ror
mov
ja
pusha
shr
shl
sbb
mov
adc
dec
sbb
lods
sbb
and
test
cld
mov
mov
xor
sbb
pop
movs
mov
xchg
push
push
sbb
dec
mov
xchg
in
mov
psrld
(bad)
mov
retf
and
mov
cmps
and
pop
dec
scas
mov
or
aam
push
inc
(bad)
jmp
and
bound
rcr
dec
push
add
pop
sub
pop
dec
pop
test
adc
mov
sbb
dec
movs
loope
test
mov
pop
jmp
jge
or
sub
call
push
cmp
or
test
and
ret
fbstp
push
lods
pop
retf
(bad)
adc
sbb
sub
adc
xchg
inc
push
popa
jl
sti
lock
mov
mov
test
(bad)
xchg
or
mov
ins
or
push
dec
mov
into
ds
(bad)
jnp
ins
sub
sbb
inc
sub
daa
mov
push
ror
test
lds
scas
add
xor
jae
dec
stos
cmc
and
test
jbe
dec
mov
inc
or
sub
cmp
dec
xlat
push
mov
lods
popa
and
push
scas
xor
and
adc
ds
aad
call
rcl
mov
or
sahf
jle
sbb
sub
pusha
in
jnp
jecxz
jae
fidivr
fs
mov
imul
inc
mov
xor
loope
outs
and
or
pushf
ret
icebp
(bad)
rcr
dec
ja
in
inc
pop
pop
xchg
sub
inc
std
adc
std
ja
pop
iret
stos
stc
mov
lods
xor
retf
popa
mov
dec
inc
push
ss
ja
pop
add
jnp
add
xor
arpl
in
push
adc
fistp
dec
lds
mov
xchg
int3
cli
ja
arpl
xor
shr
push
scas
mov
mov
jb
rcl
push
push
(bad)
sub
push
shl
xchg
call
pop
inc
mov
jo
push
push
jno
xchg
int3
adc
xor
pop
cmp
push
mov
sbb
cdq
pusha
or
pop
into
push
adc
jp
inc
cld
gs
pusha
xor
mov
enter
mov
shl
dec
mov
pop
js
test
repz
mov
mov
mov
mov
ret
dec
rcr
inc
cld
add
cmp
dec
jno
sahf
jg
cmp
or
jl
cmp
fcos
xor
stc
mov
jae
jno
jb
enter
xchg
mov
ficomp
mov
mov
rcl
sbb
mov
jo
fs
pop
xchg
jmp
(bad)
pushf
inc
adc
add
and
pandn
mov
popa
inc
mov
xchg
jle
mov
cdq
xor
xchg
jbe
sub
jae
call
sub
mov
xchg
clc
rcl
lods
movs
adc
movs
mov
neg
cwde
pusha
hlt
add
ret
pop
js
fisttp
fs
or
das
xor
call
mov
xchg
mov
sbb
dec
inc
mov
jl
gs
shl
outs
les
sub
xchg
pop
push
dec
retf
inc
fs
dec
push
and
fadd
push
cld
and
popf
icebp
outs
or
movs
jmp
outs
loop
dec
scas
cmps
(bad)
imul
mov
sar
mov
pop
imul
push
imul
adc
dec
movs
sub
rcr
or
bnd
sub
jp
xor
push
xchg
inc
leave
xchg
xchg
fcomi
test
xor
stos
mov
dec
cdq
ss
xchg
test
daa
popa
mov
scas
mov
and
sbb
xchg
out
pop
lds
adc
pop
adc
gs
mov
xlat
pop
fcomp
mov
cmp
cmp
push
mov
mov
mov
lds
ins
jmp
shl
dec
call
and
arpl
mov
dec
int3
in
ret
rol
mov
sbb
and
mov
cmp
add
and
test
xlat
lea
repnz
mov
test
xor
xlat
scas
dec
mov
call
fisubr
repnz
shl
in
cdq
xchg
mov
inc
dec
sub
ss
jecxz
pop
data16
(bad)
inc
xlat
cmp
repnz
mov
(bad)
ficom
out
aas
pop
sub
imul
out
push
push
in
mov
mul
in
inc
(bad)
fidivr
jnp
das
cmp
inc
enter
scas
imul
outs
jp
mov
pop
xchg
xor
les
pop
pop
add
push
push
xchg
in
fsub
mov
lods
xchg
push
je
imul
push
or
pop
lds
movs
stos
mov
repnz
retf
mov
ins
jnp
jmp
mov
mov
ja
cdq
hlt
popa
inc
imul
sub
lds
xchg
cmp
xchg
(bad)
jmp
call
fs
punpckldq
outs
pop
jne
loopne
add
pop
iret
cmovno
int
cmp
mov
or
movs
mov
dec
adc
dec
xchg
sub
iret
jnp
adc
scas
or
jae
stc
xchg
or
jg
adc
(bad)
fidiv
or
push
dec
out
push
pusha
addr16
rcl
and
gs
mov
push
xchg
jg
shr
cmp
pop
retf
add
enter
loop
jge
aam
movs
sbb
(bad)
popa
je
pushf
sbb
mov
cmp
cmp
xor
sti
lods
fild
mov
shr
or
lahf
mov
add
and
mov
xchg
movs
cmc
push
mov
jbe
std
fcmovnb
(bad)
lods
outs
dec
pop
rcl
cmps
sub
test
(bad)
jo
jbe
xor
cmp
outs
test
and
das
in
xor
popa
sbb
out
mov
sbb
cmp
int3
fiadd
mov
jmp
lods
fisubr
sub
in
adc
dec
ins
(bad)
and
fist
cmp
jo
jge
(bad)
add
push
movs
jne
jle
pop
and
lahf
pop
or
int
pop
cmp
fnsave
dec
bound
jae
lea
mov
retf
xchg
pop
out
icebp
lods
loope
enter
js
mov
pop
out
std
xchg
pop
popa
mov
retf
lock
idiv
inc
popa
div
retf
jbe
dec
out
data16
(bad)
mov
fwait
adc
lock
add
ja
cmp
cwde
push
retf
jmp
(bad)
pop
sub
sti
rcl
fsubp
mov
and
rcl
or
push
rcl
push
movs
(bad)
movs
(bad)
mov
outs
test
xlat
xchg
add
adc
xchg
out
mov
pushf
jne
lods
mov
jmp
iret
pop
fdiv
das
push
or
xlat
js
adc
into
out
xor
cmp
inc
test
repnz
scas
adc
push
inc
pop
(bad)
std
or
adc
mul
add
adc
rol
call
mov
push
mov
inc
les
mov
xor
inc
sbb
ds
mov
nop
cmp
loop
adc
pop
inc
mov
and
sbb
jl
add
mov
int
pop
jmp
add
lock
cli
lods
add
jmp
das
dec
adc
imul
jb
cmp
cmps
mov
jl
sbb
loope
add
adc
cmps
jbe
mov
sbb
mov
rcl
sub
xor
add
pop
pop
imul
movntps
mov
mov
hlt
mov
hlt
outs
add
xor
js
arpl
fidiv
pop
mov
inc
ret
outs
adc
mov
push
mov
fwait
push
jp
pop
sbb
mov
and
test
lock
cli
push
add
mov
inc
inc
sbb
mov
mov
dec
xchg
sub
mov
rcr
push
(bad)
mov
icebp
in
test
or
aam
fcomp
adc
inc
adc
xor
jns
je
cmp
adc
test
lds
xchg
or
pop
loopne
ins
push
cmp
clc
jp
fcomp
cmp
ficomp
mov
add
xchg
mov
cwde
dec
data16
push
adc
push
add
leave
add
jno
loop
scas
cmp
loopne
dec
adc
pop
mov
mov
cmp
ror
jnp
dec
mov
mov
or
adc
leave
jns
xor
xor
jl
cmp
pop
jns
shl
scas
jp
sbb
cmc
push
lahf
stos
ss
retf
(bad)
pop
pop
jmp
pop
(bad)
xlat
cwde
adc
cmp
mov
ja
(bad)
mov
xlat
lock
push
mov
lds
cmp
push
xor
sub
or
aam
sar
dec
in
push
or
mov
mov
test
jnp
jb
cmp
loop
(bad)
sub
stc
retf
xor
loopne
test
mov
push
dec
aas
and
jp
push
pop
push
add
add
stos
enter
cmp
jns
xchg
push
(bad)
dec
and
add
dec
adc
into
enter
xor
rcr
fidivr
pusha
xchg
loopne
fwait
xchg
paddq
data16
int3
inc
sbb
xchg
xor
and
mov
stos
test
add
addr16
jge
ins
adc
js
shl
push
xchg
push
pop
mov
daa
pop
lock
push
and
fild
rol
sub
ja
mov
aam
dec
dec
lea
les
lock
neg
fimul
pop
sahf
repnz
xor
jg
adc
pop
adc
setp
pop
aad
jnp
ret
retf
xchg
jle
and
mov
nop
mov
ins
dec
lock
push
dec
xor
dec
sbb
cmp
call
jmp
aam
mov
jno
in
(bad)
jle
cmp
sbb
xor
or
push
ins
je
dec
leave
and
jo
mov
inc
xor
adc
mov
push
or
pusha
popa
pop
and
xor
adc
jp
adc
movs
adc
call
xchg
sub
cmp
mov
sti
int3
or
std
xor
push
push
lock
mov
adc
and
popa
icebp
movs
and
loope
push
xchg
xor
mov
aaa
call
div
lds
ins
loope
mov
jnp
mov
retf
cld
xchg
fsub
(bad)
es
loop
cmps
stc
outs
in
or
ficom
add
dec
xchg
ja
clc
imul
mov
sbb
(bad)
cdq
add
and
test
and
mov
pop
add
mov
xchg
jne
out
jnp
lods
sub
mov
jle
aad
inc
dec
add
pop
mov
popa
cli
inc
sbb
mov
add
outs
test
xor
sub
mov
lock
and
add
sahf
sbb
ins
add
fs
pop
xchg
push
or
nop
mov
pop
je
push
jmp
fs
or
out
cbw
jmp
and
sbb
jno
sahf
xchg
sub
in
inc
mov
clc
xchg
inc
or
rcl
leave
xchg
sub
add
fcomp
mov
jae
stc
nop
call
loope
xor
test
adc
cmp
mov
pop
in
je
lods
out
addr16
(bad)
cli
push
(bad)
cmc
fistp
mov
and
mov
fadd
add
(bad)
xor
repnz
adc
xor
gs
and
fild
mov
lock
pop
int3
loope
jcxz
in
xor
and
or
das
je
and
mov
pusha
adc
sub
out
outs
dec
mov
push
stos
lds
js
pop
push
pop
xchg
xchg
enter
pop
dec
jb
add
shl
mov
xchg
cmp
ss
xchg
sub
jl
adc
adc
mov
jo
movs
dec
imul
push
inc
pop
int3
inc
movs
mov
shl
call
sahf
rcr
xchg
jno
popa
ja
jle
ss
inc
and
sbb
jmp
dec
into
loope
cmp
adc
add
js
fmul
or
popa
push
jl
or
xchg
out
dec
or
dec
add
xor
sbb
push
xchg
sub
dec
(bad)
iret
inc
fistp
neg
xor
or
xchg
test
popf
ja
cmp
(bad)
xor
icebp
jno
into
pop
ret
sahf
data16
or
xor
jnp
bound
adc
sbb
adc
addr16
push
sbb
xchg
or
movs
pop
ins
jle
aaa
xchg
or
dec
cmps
cmp
and
movs
or
test
adc
mov
leave
mov
les
shl
retfw
mov
test
inc
bound
data16
jo
movs
stos
mov
mov
sbb
mov
stos
xchg
js
pop
sbb
rol
xor
jecxz
jecxz
cld
xor
mov
pop
fist
bound
les
add
jb
sbb
iret
push
aas
dec
pop
fldenv
inc
cmps
ss
sbb
lods
out
sbb
ds
mov
and
push
xor
cld
inc
aam
vpsubq
test
mov
jg
test
cmovo
push
popf
cmps
test
cmp
mov
sbb
or
push
xchg
fist
pop
add
jnp
mov
int
cmp
push
adc
pop
iret
xchg
pop
fwait
lods
and
push
mov
push
inc
cli
ret
lock
cld
popa
push
inc
and
(bad)
movs
and
scas
push
inc
inc
xor
in
loope
add
ds
dec
imul
push
inc
inc
adc
scas
bound
push
addr16
or
sub
jmp
aaa
mov
das
daa
movs
scas
mov
or
or
push
and
je
dec
xchg
xchg
inc
sbb
cli
js
stos
xor
dec
jecxz
cmc
adc
sti
aad
and
pop
ficom
lock
inc
inc
inc
inc
movs
push
sub
and
adc
sbb
vmovdqu
xchg
neg
sbb
cli
in
pop
mov
arpl
and
adc
daa
xchg
popa
adc
mov
cmp
fist
cmp
out
neg
cmp
xor
cmps
jns
js
push
outs
and
aad
lods
jo
add
cmps
jae
pop
ficomp
pusha
clc
(bad)
xchg
sub
mov
pop
popf
adc
xchg
jmp
lods
fld
movs
xor
scas
lea
repz
xor
cmp
cmp
cmovp
(bad)
pop
xchg
cmp
cld
iret
jnp
jmp
mov
scas
loopne
repnz
(bad)
mov
(bad)
ja
pop
ja
mov
ret
xchg
cmp
jno
mov
lea
out
push
(bad)
outs
das
mov
xchg
or
inc
jmp
inc
sbb
(bad)
cmps
cld
or
les
outs
outs
into
xor
xchg
push
mov
pushf
stos
inc
and
push
in
mov
lock
push
mov
jnp
push
or
dec
jmp
cmc
mov
sbb
pop
mov
dec
into
add
xchg
loopne
fs
add
mov
shl
inc
dec
js
mov
out
sub
dec
jb
push
dec
bound
adc
shl
pop
push
jmp
cmp
call
repnz
in
jno
(bad)
pop
dec
out
mov
pop
sub
dec
jg
cmps
fistp
pop
std
mov
ja
jg
and
jp
jecxz
jnp
xchg
fs
cli
mov
and
push
push
mov
push
sbb
in
push
les
dec
pop
cmp
adc
mov
sti
out
sub
daa
test
jno
pusha
xor
push
imul
dec
outs
jb
fidiv
or
sub
inc
pop
mov
sub
(bad)
and
das
lods
call
adc
adc
mov
cmp
and
loop
push
add
loope
bound
mov
and
pop
pop
sbb
outs
add
mov
mov
mov
xor
lods
cmp
add
lea
cdq
iret
mov
push
rcr
xchg
add
out
call
stos
dec
mov
in
ret
sbb
push
leave
cmp
dec
sub
pop
jb
or
clc
push
jo
jmp
mov
pop
or
je
shl
dec
aaa
call
andnps
xchg
outs
cmp
icebp
cli
enter
popa
pop
push
mov
pop
test
es
and
jb
daa
xor
add
mov
pop
push
sub
xor
mov
or
lods
test
sbb
mov
xor
xchg
dec
fldcw
stos
fidiv
ret
or
and
psubusw
mov
add
sub
sbb
loopne
adc
test
pusha
arpl
xchg
mov
and
test
clc
mov
ds
test
mov
push
fcom
adc
mov
enter
fistp
mov
dec
nop
outs
fnstsw
int3
mov
xchg
jnp
cs
ins
jne
cmp
dec
scas
push
xor
dec
sbb
add
retf
repnz
(bad)
and
add
and
add
ins
rol
mov
es
mov
pop
jl
fisub
into
fucomip
push
ret
adc
dec
push
fnsave
mov
fmul
cmp
lods
scas
push
scas
outs
js
mov
xor
aaa
int
push
(bad)
(bad)
cmps
push
out
fld
ins
inc
lock
and
cmp
xchg
cld
fbstp
fwait
out
enter
xor
jb
ret
xchg
ret
loop
push
int3
cmp
dec
inc
sti
mov
jle
mov
sbb
retf
test
int3
xchg
fsubr
mov
cmps
push
sub
repnz
call
and
rcl
push
cmp
mov
and
mov
dec
bswap
jmp
ss
(bad)
je
fmul
icebp
jmp
sbb
sub
xchg
pop
xchg
add
call
push
push
add
rcr
adc
fcmovb
mov
and
push
xor
shl
jb
rcl
xchg
push
loop
popa
out
cs
sbb
cdq
xchg
and
imul
(bad)
in
push
mov
xchg
cmp
sbb
pushf
xor
mov
sbb
cmp
push
stc
add
out
jno
mov
xor
(bad)
rol
xor
rol
in
jmp
push
jg
push
imul
into
or
pop
pop
test
pop
xchg
and
jecxz
lds
adc
adc
cs
jbe
xchg
xchg
adc
mov
(bad)
pop
mov
cs
mov
jl
mov
ins
inc
ret
jo
int
loop
push
pop
sbb
jns
xor
loop
xchg
push
cmps
mov
jg
adc
arpl
sbb
repnz
loopne
dec
(bad)
adc
loope
add
out
pop
add
xor
cmp
inc
sub
mov
div
pop
jl
mov
fnstenv
lock
data16
sub
rol
ror
or
push
inc
dec
pop
(bad)
mov
push
arpl
xlat
dec
ror
pop
popa
gs
mov
sub
stos
fild
fist
icebp
ds
or
pop
mov
inc
mov
adc
out
dec
xchg
(bad)
xchg
sub
popa
mov
jp
daa
push
mov
call
fild
test
xchg
or
(bad)
out
and
adc
inc
xchg
sbb
shl
add
les
sar
cmp
sbb
movs
dec
pop
mov
pop
fidiv
jge
ja
sbb
xchg
sub
and
retf
retf
sub
pop
xchg
mov
inc
mov
call
scas
fcomi
clc
mov
add
jp
test
loop
ins
or
mov
inc
fisubr
inc
(bad)
loopne
inc
xor
inc
inc
mov
or
mov
pop
xchg
push
mov
jle
call
push
mov
frstor
lods
adc
das
add
mov
in
mov
sub
jns
out
xor
addr16
aad
mov
(bad)
mov
cwde
dec
(bad)
mov
mov
mov
pop
xchg
or
jg
mov
stc
sbb
dec
and
sbb
sbb
sub
xchg
mov
jecxz
and
test
cmps
int
movs
fcmove
mov
pop
setne
jmp
test
test
inc
mov
pop
sub
dec
scas
xchg
mov
test
sub
sbb
lods
(bad)
jmp
push
pop
push
lahf
mov
sub
cmp
sbb
jg
and
mov
pop
bnd
jmp
fwait
push
outs
sbb
xor
mov
pop
out
ins
xchg
stos
xor
or
pusha
push
jp
mov
sub
mov
jecxz
or
dec
pop
sub
mov
scas
pop
imul
lds
int
ds
add
(bad)
retw
push
inc
push
mov
test
aam
xor
pop
daa
xor
out
sub
fld
nop
xchg
sar
outs
call
add
adc
jge
shl
xchg
rcr
pusha
jne
push
push
lds
shr
mov
mov
stc
vpmovsxbw
ja
pop
rol
ss
or
adc
xor
push
push
je
cmp
popf
clc
ret
bsr
push
inc
push
cmp
mov
inc
mov
jl
cmp
imul
jl
ins
stos
jns
ss
jno
scas
idiv
xor
addr16
into
out
stos
sti
cmp
cmp
fcmovb
je
jge
mov
pop
jmp
clc
mov
add
(bad)
out
ds
inc
pushf
xchg
arpl
addr16
dec
clc
shr
xor
add
add
mov
jmp
test
mov
mov
mov
mov
neg
push
nop
rcl
jle
xor
inc
jae
or
add
mov
xlat
jmp
out
lock
or
sti
fs
out
push
cmp
adc
std
xchg
xchg
sti
and
ins
mov
mov
scas
in
cmps
aam
jmp
rcl
pop
mov
stos
and
add
imul
or
xor
or
and
sbb
add
adc
mov
adc
call
pop
in
sar
adc
or
iret
inc
push
add
rcl
pop
push
jnp
mov
cwde
add
sub
sub
jl
pop
mov
mov
inc
test
call
fidivr
stc
push
mov
popf
lods
inc
sbb
xor
mov
xlat
mov
jb
imul
and
das
lahf
(bad)
arpl
cmc
fimul
xchg
xchg
jle
repnz
lds
cmps
mov
inc
repz
adc
pop
out
test
xchg
pop
nop
adc
das
mov
ja
inc
cwde
or
or
pop
adc
jmp
call
aam
dec
mov
lahf
movs
mov
push
cld
in
loop
jge
aam
xor
imul
mov
and
mov
pop
loop
push
loope
cwde
outs
cmp
mov
inc
sub
sub
cs
pop
jno
stc
dec
mov
retf
mov
out
js
scas
sbb
sub
aam
push
test
jo
fs
daa
stc
jmp
cmp
cmp
jbe
xor
ret
mov
(bad)
adc
adc
xchg
std
mov
sbb
(bad)
jne
add
adc
adc
add
movs
mov
mov
push
mov
dec
inc
push
out
xchg
jbe
inc
iret
mov
pop
out
pop
scas
push
add
push
adc
mov
xchg
mov
repnz
daa
adc
dec
xor
push
repz
and
jp
dec
xchg
cmps
arpl
dec
outs
test
shl
jb
retf
pop
ror
aad
sahf
add
rol
dec
sbb
cmps
aam
sti
outs
pop
inc
arpl
loopne
in
mov
(bad)
dec
lahf
loope
out
aad
pop
clc
push
push
out
jmp
sub
mov
aam
pop
aad
mov
movs
movs
jle
mov
mov
xor
mov
cmp
adc
inc
and
movs
sbb
enter
push
loopne
icebp
aaa
(bad)
jns
ficomp
mov
js
jecxz
in
mov
pop
lock
ins
push
je
jge
lock
cmp
fdivr
xor
sub
in
call
call
aad
rol
int3
inc
std
add
shl
pop
push
or
out
dec
xor
pop
add
std
xchg
call
adc
jae
stos
jmp
fisubr
mov
add
ins
push
push
not
test
xlat
dec
sub
mov
rol
sbb
pop
and
inc
sbb
inc
fdivr
adc
sub
xchg
into
cmp
pop
nop
iret
sbb
ins
push
sahf
(bad)
push
std
inc
call
push
xor
adc
ja
imul
pop
jecxz
movs
mov
mov
sbb
inc
movs
rol
jb
push
pop
jle
pop
ins
mov
mov
add
in
push
sbb
adc
lods
push
or
je
push
push
imul
js
js
mov
xor
loopne
lods
cmp
pop
shl
sar
mov
xor
adc
dec
js
pop
gs
inc
xor
stos
clc
aaa
loopne
and
in
push
sbb
mov
jo
movs
mov
fucomip
movs
cld
nop
dec
jnp
mov
jle
jecxz
push
fs
std
push
inc
sub
shl
jmp
repz
dec
inc
mov
inc
(bad)
sbb
dec
sbb
push
(bad)
jns
cli
xchg
pushf
dec
cmc
sub
inc
sahf
cmps
test
shl
jp
xchg
push
sbb
xchg
xchg
shr
mov
popa
pop
cmp
push
loop
das
in
fist
out
sbb
xor
out
inc
push
xchg
mov
cmp
mov
in
push
mov
fsub
mov
push
mov
and
movs
push
xchg
cmc
inc
retf
adc
imul
mov
xchg
cmp
dec
mov
inc
or
push
jecxz
pop
(bad)
pop
mov
sbb
push
gs
nop
sbb
xchg
pushf
mov
pop
mov
int
dec
xchg
sub
test
outs
shl
int3
ss
sub
jns
scas
xchg
or
mov
pop
aaa
fimul
jmp
test
(bad)
in
add
shl
push
out
pushf
mov
mov
ds
psraw
or
pop
and
dec
mov
stos
xor
out
pop
mov
test
test
push
xor
add
fwait
xchg
(bad)
fldcw
mov
xor
jmp
adc
pop
into
cmps
xor
fadd
and
outs
lea
fcomp
(bad)
push
and
lea
fwait
dec
push
loop
mov
mov
adc
mov
jo
add
div
call
aad
outs
xor
mov
les
pop
es
fild
ficom
push
pop
ficomp
out
push
cli
adc
push
mov
mov
push
jmp
xchg
push
loop
cmc
jmp
jmp
sub
repnz
ss
cld
push
pop
movs
bswap
mul
pop
and
dec
jmp
xchg
add
repz
or
pop
pop
pop
add
into
fcomp
ins
lods
push
mov
mov
arpl
and
shl
(bad)
pop
xchg
mov
pop
push
inc
ret
mov
fbstp
dec
imul
sti
jle
xchg
movs
mov
mov
mov
retf
push
das
sbb
les
idiv
pop
or
movs
jo
mov
jne
sub
inc
in
imul
jne
imul
dec
cwde
xchg
mov
test
xchg
mov
add
daa
(bad)
xchg
inc
pop
cdq
adc
jne
adc
adc
cmp
xchg
in
popf
inc
sbb
mov
push
dec
lock
test
sub
adc
jp
or
mov
(bad)
neg
jg
push
xor
pop
js
xchg
ins
not
mov
xor
scas
dec
mov
xchg
inc
sub
test
jbe
push
gs
mov
fst
push
in
push
out
add
int3
pusha
repz
bound
and
loopne
adc
outs
mov
push
pop
xor
stc
stc
adc
mov
dec
mov
inc
je
mov
es
and
(bad)
sub
push
hlt
mov
in
mov
and
xchg
jns
dec
inc
jo
jnp
cmp
ins
rcl
add
leave
je
int
movs
movs
hlt
xor
(bad)
ds
movs
or
inc
pop
(bad)
cs
add
sbb
test
repz
fisttp
dec
adc
test
dec
xchg
dec
nop
pop
inc
and
adc
adc
xchg
test
push
test
icebp
stc
jo
dec
cmp
or
add
lock
das
loop
dec
ror
repz
sub
and
cmc
enter
ror
sbb
ss
mov
jmp
push
cmp
or
ret
jae
(bad)
push
mov
xchg
or
movs
cmps
or
movs
xchg
or
cdq
add
dec
adc
inc
add
sub
sub
es
std
sbb
and
adc
call
shl
adc
pushf
icebp
push
cld
call
xor
sub
dec
add
scas
loopne
idiv
das
fld
xlat
adc
in
mov
aad
popa
mov
mov
adc
push
lods
xchg
pop
ins
xchg
(bad)
int
push
mov
pushf
xor
mov
ret
inc
and
pushf
(bad)
test
(bad)
xchg
movs
arpl
dec
jp
fmul
push
push
adc
fstp
repz
out
mov
shr
hlt
in
jne
shr
mov
inc
pop
push
mov
xchg
fldenv
add
test
sbb
stc
sub
cli
call
cli
in
test
and
xchg
test
pop
push
hlt
es
popf
mov
mov
mov
jb
retf
das
les
je
mov
push
jl
or
fwait
mov
jg
test
xlat
dec
sbb
mov
add
mov
or
xchg
ins
fisubr
sbb
jp
inc
test
jno
mov
daa
sar
xchg
lock
or
fsub
push
das
adc
lods
pop
int3
sbb
sub
mov
retf
arpl
dec
sbb
popa
mov
adc
out
out
fistp
popa
rcr
(bad)
jno
xchg
imul
pushf
stos
inc
cs
imul
sbb
ret
jnp
xor
inc
mov
test
movs
pop
sub
add
ret
fcmovnb
or
sbb
fisttp
retf
retf
mov
jnp
fdivr
and
lahf
bnd
xchg
hlt
inc
sbb
imul
cmp
pop
fwait
dec
jb
aaa
xor
xlat
add
push
pusha
rcr
cmp
adc
sbb
cs
shr
and
jbe
fs
adc
cmp
xchg
lds
ins
adc
jmp
ror
addr16
fs
cli
mov
or
shl
shl
repz
faddp
imul
mov
push
mov
repnz
aas
sub
add
aaa
rcr
mov
dec
jl
sub
mov
call
rcl
cmp
addr16
push
push
add
xor
or
mov
fadd
xchg
add
shl
add
sbb
push
pop
and
pusha
stos
fisub
inc
mov
je
add
mov
or
push
ret
and
shl
dec
xchg
jge
xchg
pop
jmp
and
inc
add
xchg
cld
dec
add
mov
call
sbb
sub
pminsw
imul
movs
sti
mov
mov
pop
mov
and
inc
fld
daa
or
jb
and
sar
push
jmp
sbb
call
dec
and
retf
out
mov
mov
out
inc
arpl
push
adc
pop
mov
or
jl
mov
inc
inc
jmp
push
xchg
lock
mov
ror
fwait
(bad)
adc
mov
(bad)
iret
sub
aam
mov
xchg
inc
cmp
scas
out
retf
pushf
fcom
cmp
jle
xchg
add
mov
jnp
xchg
or
daa
es
sti
inc
cmp
cmp
sub
push
popf
sbb
mov
and
or
adc
pop
add
cdq
lock
mov
mov
or
out
ret
into
and
push
add
dec
cmps
cmp
pop
add
push
mov
(bad)
jecxz
and
mov
and
stos
xor
retf
out
mov
push
add
aaa
dec
inc
sbb
inc
(bad)
cwde
push
pop
push
cmp
sub
neg
and
imul
stos
int
push
jo
fisub
aas
retf
jne
and
push
xor
mov
mov
in
pop
jecxz
sub
aas
jmp
leave
jle
inc
aas
sub
jg
arpl
cdq
aad
xchg
pop
and
mov
inc
push
retf
and
call
mov
xchg
dec
dec
aas
dec
and
jle
mov
inc
mov
push
cmps
mov
cs
sbb
and
mov
or
sub
cmp
pop
jb
cmps
add
pop
pop
and
jge
or
cmp
(bad)
fdivr
inc
dec
retf
pop
xchg
enter
jmp
push
call
and
jno
outs
pop
sbb
sub
push
mov
test
adc
jl
out
pop
and
leave
and
push
int
push
int
pop
aad
imul
jp
(bad)
adc
add
adc
push
mov
xor
inc
xchg
pop
pusha
les
lock
push
test
in
retf
push
clc
xor
adc
jge
or
adc
adc
or
xchg
pop
push
pop
test
mov
add
cmps
ins
dec
jo
sub
ja
xor
push
mov
aas
xor
pop
arpl
xchg
adc
inc
ret
add
pushf
je
and
and
mov
pusha
and
dec
mov
out
xchg
mov
ffreep
add
cmc
or
outs
popa
outs
ror
pop
mov
add
hlt
mov
loopne
lds
sbb
xchg
dec
jmp
mov
dec
jl
movs
pop
icebp
push
sbb
mov
xchg
and
or
movs
jp
add
addr16
mov
and
movaps
repz
out
jp
test
and
int3
xor
mov
push
mov
daa
cmps
mov
or
dec
cmc
jae
test
cs
inc
pop
dec
sub
loopne
sub
push
add
fdivr
fwait
call
mov
push
rol
test
in
test
sbb
popa
call
aad
mov
and
mov
add
sbb
in
fwait
cmp
inc
push
mov
and
stos
adc
dec
scas
sub
push
mov
and
push
sbb
mov
sar
test
xchg
mov
in
das
in
fbld
fcomp
aas
pop
cs
sahf
mov
xor
or
leave
sbb
dec
adc
aam
pop
dec
into
xor
inc
ins
jecxz
mov
imul
xchg
jae
test
les
lods
push
enter
mov
out
add
je
fbstp
scas
push
enter
inc
xor
call
add
popf
stos
leave
jmp
sub
add
pop
inc
mov
rol
dec
pop
into
and
pop
mov
sbb
pushf
hlt
mov
xchg
jecxz
add
mov
inc
inc
sub
clc
jl
and
fs
std
ja
cmps
mov
and
ror
loopne
dec
test
inc
sbb
inc
cld
push
retf
pop
je
push
ret
jp
rol
fldcw
mov
jle
std
dec
cmps
add
xchg
call
lods
popf
pop
pop
gs
addr16
or
es
and
xor
mov
dec
je
xchg
or
addr16
sub
sbb
ret
out
cdq
dec
xor
mov
data16
pop
and
mov
mov
outs
loopne
fs
mov
pushf
mov
test
popf
mov
fisub
mov
daa
cmp
push
mov
add
add
mov
call
cmp
rol
mov
mov
dec
sbb
and
mov
jne
prefetcht2
aad
retf
xor
mov
add
loop
into
push
repnz
cli
popa
seta
std
clc
push
dec
add
sbb
cdq
and
push
mov
mov
pushf
dec
loop
push
cmp
enter
aam
push
not
pushf
or
or
repz
push
fwait
(bad)
jb
push
adc
gs
inc
dec
pop
(bad)
mov
add
adc
add
cmp
or
enter
hlt
jmp
test
shl
js
mov
dec
inc
add
js
cli
mov
mov
stos
stos
cmp
adc
mov
iret
mov
add
and
xor
(bad)
shr
lock
sub
lds
sbb
rcr
not
jge
push
and
enter
out
gs
jl
and
inc
emms
dec
mov
inc
jge
inc
ficom
adc
arpl
inc
jl
jmp
aaa
fs
push
lds
ins
mov
idiv
(bad)
mov
xchg
dec
imul
mov
iret
mov
jnp
jbe
inc
pop
adc
add
mov
out
add
iret
cdq
call
movs
mov
xor
std
loope
(bad)
scas
mov
inc
out
icebp
and
sub
aaa
test
ud1
(bad)
dec
xor
mov
adc
test
arpl
rcl
sahf
lock
or
fld
call
and
out
lods
jno
dec
jmp
xchg
hlt
mul
aad
popf
out
es
repz
pop
pop
fadd
jne
sub
or
xor
or
das
add
inc
repnz
mov
sub
jl
dec
or
std
xor
loope
aaa
or
add
cmp
jmp
jbe
outs
and
call
jae
loopne
add
mov
push
xchg
sub
sbb
pusha
ja
push
push
fnstsw
lea
pop
cdq
shl
sbb
jnp
jmp
push
adc
shl
cmp
xchg
shl
fidivr
jne
sti
adc
sahf
fiadd
sub
jns
sbb
ja
test
imul
push
xchg
sbb
dec
or
repz
push
sub
xor
push
adc
mov
xor
movs
xor
sbb
and
aad
test
mov
lods
mov
lahf
cmp
jge
mov
ret
xor
sbb
mov
mov
pop
clc
fidivr
jle
adc
mov
cmp
fs
add
sbb
rol
lahf
lods
and
jg
retf
lds
leave
rcr
xchg
out
fst
adc
xchg
push
and
mov
xchg
add
sbb
imul
gs
lods
ror
xor
jecxz
push
mov
shl
stos
and
int3
sbb
retf
dec
mov
daa
or
sbb
fistp
cmp
(bad)
ror
xor
mov
fbld
pop
xchg
push
add
(bad)
arpl
xchg
mov
dec
enter
gs
jnp
call
in
in
inc
stc
cmps
sub
sub
rcl
dec
and
nop
in
lods
je
xchg
push
cdq
jg
not
dec
jge
dec
or
add
dec
lds
sbb
jnp
inc
xchg
jb
and
movs
dec
lods
xchg
dec
popa
popf
push
or
jno
and
add
pop
mov
call
inc
rcl
inc
dec
jo
ficomp
in
in
dec
div
pop
(bad)
mov
(bad)
out
xchg
je
and
dec
lods
shl
outs
xchg
pop
xor
daa
ret
sbb
sub
sahf
iret
sbb
mov
cmc
jne
and
pop
dec
and
mov
jp
and
adc
out
cmp
xchg
ins
xor
cdq
imul
es
aam
push
adc
add
(bad)
sbb
cmp
clc
cwde
mov
adc
sub
shl
into
leave
shl
jmp
div
(bad)
iret
lock
and
mov
mov
xor
stc
lds
mov
sbb
out
xchg
ins
es
mov
pop
dec
jg
mov
nop
xlat
mov
cmps
add
mov
or
in
fadd
imul
(bad)
sub
mov
pop
push
xchg
aad
xchg
outs
test
fdiv
fwait
cmp
(bad)
jne
or
ins
xor
enter
jns
xor
xchg
leave
cmps
loopne
(bad)
jecxz
mov
stos
shr
xchg
pop
pop
ror
shl
in
dec
fistp
jl
jne
mov
sub
outs
daa
mov
xor
jmp
fidivr
adc
inc
add
xor
push
push
mov
mov
and
mov
xor
mov
add
cmp
add
popa
add
sbb
xchg
or
bound
mov
cmp
sti
out
xchg
jae
add
les
(bad)
mov
js
adc
imul
mov
lods
push
sub
xchg
ds
cs
and
pop
dec
js
or
xor
adc
scas
xor
js
mov
add
int
leave
into
jl
sahf
lock
jns
loop
into
mov
cmp
inc
jecxz
rol
aaa
scas
outs
rcl
xchg
cld
sbb
lea
stos
jne
ja
int
movs
fdivr
movs
(bad)
cs
dec
push
or
jmp
pop
adc
inc
add
pop
and
lahf
lods
dec
neg
push
jns
arpl
cmp
sete
fwait
aad
pop
pop
movs
ins
cmp
stc
int3
or
lahf
test
adc
retf
fmul
lea
iret
push
pop
das
dec
test
das
or
mov
push
dec
lods
and
pop
adc
or
mov
mov
push
rcl
test
xchg
scas
mov
add
jb
mov
xchg
adc
neg
xor
xor
jo
nop
ins
sub
inc
outs
xor
repnz
ret
sbb
inc
push
dec
mov
mov
cli
stos
push
jmp
mov
push
and
lds
pop
xchg
sti
add
movs
rcl
nop
in
jbe
xor
mov
xchg
and
pop
adc
add
aad
xor
fstp
movs
popf
int
aas
loopne
adc
(bad)
fisubr
mov
out
data16
retf
pop
ror
sbb
repz
cmp
and
(bad)
xor
sub
cdq
xor
add
inc
fmul
pop
jle
test
in
ss
push
jmp
and
push
cmps
cmp
add
xchg
cli
hlt
int3
not
xor
popf
call
movs
adc
cli
in
or
cmp
rol
jmp
cmp
es
nop
fs
in
or
pushf
jecxz
and
and
adc
jle
popf
and
push
enter
sbb
xor
out
jno
sar
mov
stos
mov
xor
inc
(bad)
or
mov
inc
call
arpl
into
lock
pusha
loop
xchg
push
xor
cld
mov
vorps
add
and
mov
ss
stos
sub
mov
dec
jns
es
inc
push
inc
mov
std
in
cmp
nop
(bad)
call
pop
call
fsubr
push
daa
out
sub
jno
(bad)
cld
cmp
imul
and
ret
xor
(bad)
lods
ja
fcmovbe
xor
jl
cli
int
popf
mov
out
mov
out
pop
popa
gs
ins
bound
sti
loope
mov
test
mov
push
jae
dec
hlt
clc
(bad)
sbb
dec
sub
gs
xchg
cli
push
pushf
subps
and
xchg
mov
mov
bound
mov
aam
pushf
push
add
jl
dec
aad
pop
push
imul
shl
xchg
pop
adc
cmp
lea
dec
mov
push
or
lea
xchg
or
sbb
sbb
dec
fcom
jb
mov
xor
out
jp
sub
dec
xchg
xchg
pop
cmp
arpl
aad
dec
mov
pop
sahf
ss
mov
dec
xchg
xor
adc
rcl
fdivr
mov
sbb
jnp
fstp
mov
mov
out
pop
xor
inc
test
nop
clc
jmp
call
sub
adc
sbb
dec
push
movaps
(bad)
push
daa
xor
cmps
cmp
inc
mov
and
retf
mov
mov
inc
inc
and
jno
cmps
dec
stos
loop
push
imul
xchg
cmp
sti
inc
jns
sbb
retf
stos
push
loopne
cmp
cmp
dec
jb
dec
dec
sub
cmp
stos
div
cdq
push
mov
test
les
into
cli
jno
pop
cmp
pushf
push
cmp
jno
cmp
ret
stc
xor
mov
xor
bound
mov
pop
jmp
fs
sbb
cmp
fninit
sub
popf
jmp
jmp
ret
lahf
mov
fwait
push
stc
xor
pop
inc
pushf
xchg
out
xchg
je
gs
call
cs
out
test
int
imul
sub
dec
add
leave
mov
adc
cmps
push
xor
adc
test
cmp
jge
jecxz
fbstp
out
mov
mov
fist
nop
dec
cdq
das
mov
mov
xchg
call
and
push
adc
fs
and
(bad)
mov
in
fs
sbb
fmulp
cli
in
stc
or
inc
xchg
into
or
std
jmp
rcl
pop
adc
and
ds
jg
ret
pop
(bad)
xlat
mov
mov
or
aaa
and
loopne
cmp
pop
mov
xor
cmp
inc
dec
sbb
pushf
dec
movs
pushf
xor
daa
fadd
ds
jne
jns
jbe
lock
sub
shl
sub
sub
cdq
scas
jp
mov
imul
ss
jnp
loope
sub
dec
sub
icebp
add
xchg
mul
dec
mov
add
sbb
mov
push
sbb
sub
add
out
mov
dec
ins
push
mov
(bad)
not
aas
lds
inc
mov
or
xor
xchg
pop
mov
or
mov
push
test
add
cld
inc
jmp
add
sub
scas
mov
sbb
out
mov
movs
adc
adc
and
jmp
rol
repnz
add
call
push
xor
mov
and
pusha
daa
sub
rcl
push
xor
fild
inc
dec
test
mov
dec
mov
inc
pusha
add
push
inc
mov
icebp
jb
lds
xchg
mov
sub
call
mov
jge
in
ins
jecxz
fldcw
push
jbe
sub
js
pop
add
or
pop
push
scas
sbb
pop
mov
xor
adc
jnp
cwde
sub
add
push
sub
push
fcmove
sbb
outs
push
stos
vcvtsi2sd
xor
inc
arpl
xor
xor
jge
add
mov
mov
jno
cs
cdq
push
adc
and
and
int
aas
fimul
add
add
mov
ins
out
push
ror
mov
movs
out
jg
and
xchg
mov
xchg
das
arpl
push
or
mov
or
and
add
scas
mov
cmps
sub
cld
push
inc
pop
cdq
ret
fwait
mov
push
mov
inc
dec
mul
dec
sbb
xor
sub
les
push
icebp
shl
cmps
ret
and
and
jae
push
loopne
rol
sub
jmp
call
ins
sub
push
push
(bad)
jmp
xchg
dec
xor
or
jo
inc
ss
or
shl
out
add
popf
jns
push
neg
cmp
int
ds
dec
imul
push
mov
mov
leave
or
mov
ror
retf
ja
sbb
leave
adc
mov
addr16
pcmpgtd
pop
cli
inc
lock
cdq
mov
sub
loope
addr16
dec
xor
or
popa
loopne
fbld
and
ja
fistp
sbb
xor
adc
or
fcomp
hlt
bound
hlt
push
stos
sbb
es
jg
and
daa
mov
cdq
ret
mov
sub
scas
xchg
pop
mov
call
out
and
imul
ret
mov
fcmovnu
lahf
ja
jns
rcl
stc
dec
(bad)
sub
mov
or
popf
iret
xchg
cdq
ror
xlat
cmps
imul
inc
(bad)
push
addr16
xor
pusha
dec
test
in
xchg
xor
loop
and
into
pushf
test
rcl
lahf
push
leave
sbb
inc
pop
mov
(bad)
outs
retf
fldenv
mov
(bad)
adc
test
xchg
push
jg
dec
loop
fistp
call
or
inc
in
inc
out
push
jg
mov
sti
fsubr
push
adc
arpl
jne
movs
push
sbb
inc
retf
xchg
jg
cli
or
cwde
xor
add
(bad)
arpl
xor
iret
(bad)
inc
fsub
cmp
or
cs
test
mov
or
aad
jae
cmp
mov
hlt
popa
or
pop
arpl
xchg
jg
pop
lods
jmp
cmp
js
out
inc
or
hlt
cmp
adc
mov
sti
add
xchg
push
lea
xor
loop
xchg
js
xor
bound
neg
sahf
sbb
arpl
push
mov
or
mov
inc
sbb
scas
pusha
cmp
xchg
aam
ret
sub
dec
out
or
mov
xor
(bad)
adc
icebp
(bad)
cmp
test
sbb
sub
cld
sub
arpl
pop
mov
sahf
(bad)
mov
mov
ss
mov
fcom
rol
mov
cmps
dec
xlat
mov
ret
pop
clc
or
jb
in
cdq
repnz
xor
add
fidivr
adc
mov
in
loope
mov
retf
lock
(bad)
sub
push
retf
jns
sbb
xchg
fstp
mov
sub
cdq
dec
aam
inc
outs
outs
pop
or
je
jl
adc
and
jmp
push
adc
jo
fstp
cmc
push
mov
xchg
int3
retf
fdiv
pop
mov
stc
adc
pop
repnz
or
lds
scas
xchg
loopne
jp
add
jecxz
push
fadd
std
ss
cmc
je
pop
(bad)
dec
leave
jne
nop
inc
jg
pcmpgtd
adc
dec
retf
mov
adc
cmp
jne
int
movs
sbb
aas
mov
sub
adc
out
xchg
mov
pusha
xchg
push
bound
aaa
mov
jne
inc
inc
jecxz
push
sub
pop
mov
sbb
pushf
xchg
popa
in
ficom
dec
mov
fld
cs
push
test
shl
mov
mov
iret
mov
pop
push
call
xchg
mov
aad
das
(bad)
or
xchg
inc
mov
fnstenv
fild
retf
pop
mov
not
or
rol
repz
push
adc
je
sti
xchg
stos
je
fisttp
mov
mov
fdivr
cdq
sub
fnstsw
stos
(bad)
test
test
stc
stos
jo
movs
(bad)
push
nop
mov
es
lea
sbb
pop
dec
out
push
xor
rcl
pop
jne
lsl
xchg
jmp
sub
xchg
pop
xchg
and
mov
sub
xchg
mov
mov
or
shl
and
xor
pop
mov
mov
and
cmp
bound
add
pop
inc
dec
pop
cmp
imul
or
movs
pop
adc
shl
mov
adc
xchg
mov
ror
xlat
jle
add
jmp
jno
mov
ds
sbb
mov
call
cmp
jnp
push
scas
mov
add
sub
sti
in
retf
cs
jecxz
mov
scas
push
mov
sub
stos
outs
xor
adc
aam
les
popf
sub
in
add
into
xor
fimul
dec
jo
mov
je
fwait
and
(bad)
fisttp
mov
pop
jb
jno
fbstp
mov
add
mov
(bad)
push
outs
mov
lock
cmp
mov
mov
fmulp
leave
adc
inc
push
adc
js
retf
scas
cli
or
push
and
and
push
inc
(bad)
rcl
aaa
push
js
aas
fld
cmp
push
addr16
push
inc
jge
not
sub
and
mov
int3
sub
stos
(bad)
jne
sub
and
xchg
inc
pop
jge
mov
add
mov
xchg
lds
ds
aad
dec
sub
nop
inc
jg
in
sti
hlt
or
imul
xor
in
mov
call
push
dec
jae
gs
dec
push
push
add
push
mov
jle
mov
add
cmp
loopne
push
cli
mov
jge
sbb
jl
push
movs
mov
mov
pop
test
push
std
cmp
push
pop
jl
imul
daa
xchg
push
mov
add
fild
cmp
das
mov
or
mov
pop
cmps
mov
sub
imul
mov
inc
sbb
jmp
enter
and
in
mov
gs
aas
dec
stos
pop
daa
rsqrtps
into
mov
retf
mov
and
push
xor
pop
cmp
adc
sub
(bad)
jne
add
out
ret
punpcklbw
sub
fwait
out
loopne
popf
cmp
pusha
or
aam
dec
sub
pop
push
jno
std
int
xor
adc
retf
das
cmp
jge
jp
push
add
cli
mov
adc
enter
pop
xor
jle
mov
call
pop
lods
daa
lea
jle
xor
into
and
popf
icebp
mov
mov
fbld
jo
mov
clc
xchg
sub
test
fnsave
cmp
sahf
jo
movq
popf
cmp
xor
pop
xor
in
adc
sbb
rcr
in
sub
pushf
push
test
pop
into
or
push
push
inc
pusha
jns
iret
test
inc
mov
sub
cdq
pop
sar
sbb
mov
imul
mov
sub
xchg
fisub
and
aas
cdq
ds
fimul
push
push
or
and
add
f2xm1
into
dec
fs
and
fdivp
scas
sub
cld
adc
ins
cmp
stc
rcl
pop
fnstsw
xchg
mov
jno
sub
cmp
mov
sub
inc
push
loopne
aad
sub
cli
aas
f2xm1
xchg
mov
out
out
mov
cmp
in
ret
ret
mov
xchg
or
inc
retf
jge
jo
push
push
lock
jg
adc
repz
psraw
icebp
dec
sub
repz
xchg
aad
xchg
and
sti
push
mov
sbb
cmp
add
cmc
inc
inc
js
xchg
adc
cmc
xchg
repnz
add
lods
add
hlt
out
sti
sahf
sub
jp
pop
icebp
cmc
pop
lods
adc
xor
or
ret
add
aaa
push
sti
jmp
(bad)
add
dec
loopne
mov
xor
xchg
mov
lock
ror
push
imul
mov
mov
inc
mov
lods
ficomp
sub
pop
adc
inc
dec
fisttp
inc
in
shl
adc
into
dec
xchg
dec
ret
dec
pushf
int3
xor
jo
mov
fidiv
addr16
bound
das
(bad)
jnp
xlat
or
repz
cdq
jg
les
push
stos
inc
jbe
pop
icebp
pop
mov
xchg
inc
push
mov
mov
mov
dec
hlt
push
loopne
sar
fcom
fsub
shr
(bad)
mov
adc
xchg
jne
add
mov
inc
mov
das
stos
add
add
shl
sub
adc
stos
outs
out
or
enter
outs
scas
dec
fdivr
xchg
jmp
mov
mov
push
fstp
lds
dec
cmp
pop
sbb
call
cmc
out
dec
mov
or
ret
lds
xor
lds
sub
inc
daa
call
data16
adc
arpl
dec
sbb
out
sbb
ja
xchg
in
imul
mov
dec
cld
fs
call
jp
xor
int3
push
ds
or
loop
fisub
shl
add
xor
xor
in
(bad)
pop
out
aad
ret
jbe
jb
popf
inc
ror
or
pop
jge
ins
jns
(bad)
icebp
call
jbe
pop
dec
adc
jg
inc
pusha
aam
pop
and
loope
repz
cld
dec
test
mov
pop
dec
jno
call
dec
sar
std
inc
test
shr
cdq
xor
scas
mov
and
jmp
bound
sub
push
imul
sub
cmp
adc
sub
out
lods
push
jno
test
fimul
fadd
dec
loope
xor
and
(bad)
in
jl
mov
cmp
loop
test
sbb
push
outs
data16
scas
xor
mov
fcom
int3
ret
das
sub
jge
in
cwde
jl
stos
add
movs
das
pushf
add
add
aam
xor
test
push
adc
sub
in
stos
xor
xor
test
adc
out
dec
ja
xchg
test
leave
mov
cmp
jle
nop
lea
ret
lods
jno
xchg
add
adc
lods
cmp
xchg
cdq
mov
cmp
pop
mov
or
and
xlat
mov
and
or
stc
test
loop
cmps
adc
mov
dec
(bad)
cld
stc
popa
adc
pop
jns
gs
cmp
push
adc
and
pop
scas
sar
enter
pop
xchg
ficom
mov
dec
push
test
xor
sbb
retf
inc
add
inc
add
cli
mov
retf
ins
or
dec
jle
and
or
adc
mov
sbb
int3
or
cmp
pop
mov
mov
jnp
bound
mov
push
xor
xchg
in
in
xor
and
test
es
push
push
xchg
ret
pop
or
mov
jb
test
je
arpl
aam
push
iret
xchg
pop
pop
cmps
push
mov
inc
add
pusha
sub
je
or
lods
ret
inc
jecxz
fisttp
shl
sub
(bad)
jo
push
out
mov
dec
adc
idiv
loopne
ss
inc
loop
pop
stos
or
pop
adc
ror
lea
inc
push
mov
lods
movs
jns
or
lea
xchg
mov
ins
shl
push
jmp
in
ret
ds
lods
daa
in
imul
inc
bound
(bad)
daa
rcl
jbe
(bad)
dec
punpckhwd
cld
arpl
rol
dec
fild
mov
push
call
sub
dec
out
inc
xchg
mov
cli
mov
xor
mov
mov
int3
lea
lds
lock
jb
fdivr
cmp
loope
mov
sahf
out
or
inc
push
cs
mov
or
dec
add
les
jae
cmp
pop
push
cmp
xchg
adc
cmps
push
ror
sub
and
mov
js
and
pminsw
lods
push
cmp
lea
ret
out
mov
and
sar
scas
jg
call
fdivr
xchg
inc
jg
daa
pop
outs
xchg
daa
or
icebp
xor
pop
xchg
sbb
pop
push
jno
mov
adc
(bad)
das
xchg
pop
shl
push
in
dec
xchg
sti
(bad)
dec
ja
and
les
test
pop
pop
or
addr16
jecxz
mov
push
mov
mov
inc
iret
push
adc
neg
lods
stos
pop
vmovlps
and
inc
scas
mov
cmp
cmp
adc
xlat
std
and
or
add
rcl
call
in
scas
stc
mov
stc
and
nop
in
hlt
sub
in
or
out
sbb
scas
mov
mov
scas
dec
add
lahf
mov
add
push
push
xor
in
add
lods
mov
mov
xor
cmc
jmp
mov
inc
call
mov
xor
mov
sbb
repnz
inc
jmp
cdq
int3
mov
inc
mov
fild
ror
sbb
xlat
xor
lods
icebp
aas
and
jmp
fst
mov
cld
or
or
xchg
pop
sahf
add
je
sbb
dec
adc
push
in
mov
fs
sbb
(bad)
cmp
add
fiadd
in
into
mov
scas
or
and
sbb
fmul
and
scas
jne
add
sahf
outs
xchg
stc
std
scas
div
add
je
retf
and
pop
inc
ror
add
xchg
lods
in
(bad)
xchg
outs
ror
push
(bad)
test
dec
test
cli
inc
mul
in
bound
mov
push
loope
and
xor
sub
ret
mov
and
xchg
or
cld
mov
repz
mov
mov
cwde
pop
adc
add
ins
sbb
fdivr
push
ja
xchg
mov
cmp
pop
pushf
mov
arpl
inc
push
icebp
adc
push
sbb
stos
sub
icebp
push
cld
sub
aad
push
stos
ins
fmul
pushf
cmp
mov
pop
pop
loope
inc
fisub
shl
cmp
(bad)
js
pop
xor
fiadd
(bad)
jnp
and
ds
cmps
lahf
dec
lea
inc
inc
mov
das
cmc
ss
scas
add
outs
sub
jecxz
xor
jp
pop
js
popa
sub
adc
fadd
cwde
fdiv
mov
addr16
mov
data16
pop
and
xchg
lea
jle
mov
int3
sbb
jnp
add
call
loope
stos
int3
mov
hlt
and
adc
scas
jmp
mov
or
ret
imul
sbb
adc
bound
push
test
xchg
imul
sbb
cmp
cld
xchg
push
jb
pop
pop
jmp
movs
mov
sbb
(bad)
in
pop
mov
jns
das
sub
lods
pop
mov
es
mov
(bad)
popa
mov
inc
jo
pop
cmp
aas
addr16
test
in
mov
sub
iret
ror
cmp
aad
and
scas
or
(bad)
pushf
out
ins
into
mov
inc
fdiv
(bad)
pushf
outs
popa
movs
add
mov
lahf
jmp
test
(bad)
call
sub
jl
add
cmp
pushf
loop
(bad)
jg
stc
xor
popf
lods
sub
repnz
je
mov
repz
and
xchg
mov
repnz
push
movhps
sbb
hlt
(bad)
push
lock
or
and
icebp
pusha
dec
outs
jns
push
xchg
(bad)
not
adc
sbb
sbb
jmp
lahf
sbb
test
push
dec
call
mov
push
aaa
jg
push
jge
xchg
retf
daa
push
les
daa
loope
leave
std
sub
aad
jmp
jnp
sbb
inc
lods
jecxz
fidivr
mov
xor
dec
(bad)
lods
mov
mov
jno
sbb
in
xor
xor
dec
dec
push
bound
clc
cdq
cmc
push
push
adc
dec
cmp
mov
add
inc
sub
fsub
inc
cs
sub
jb
xchg
movs
mov
out
or
jae
add
push
data16
sahf
and
bound
test
scas
(bad)
test
dec
add
xchg
push
sub
or
test
sbb
ins
mov
sti
xor
test
add
hlt
or
xor
sub
xor
(bad)
push
js
pusha
call
xchg
dec
sti
push
and
push
pop
adc
mov
inc
shr
(bad)
stos
mov
(bad)
in
hlt
fsub
stos
pop
dec
xor
aaa
(bad)
mov
ret
xor
pop
adc
movs
stos
dec
fs
pop
ret
mov
popf
call
test
loop
retf
lods
and
cdq
(bad)
(bad)
inc
cld
into
ret
mov
repz
mov
fmul
aam
xchg
mov
popa
mov
(bad)
dec
shr
mov
pop
pop
ret
sub
std
es
shr
ret
std
sahf
mul
call
mov
jmp
mov
mov
ret
xor
(bad)
movs
cmp
push
xchg
cmc
mov
push
sub
fs
or
shr
test
inc
sub
icebp
xlat
lock
clc
push
pop
sbb
dec
push
sti
jmp
or
mov
out
mov
sbb
pop
jnp
(bad)
adc
inc
xchg
rcl
popf
adc
sub
sub
jg
(bad)
ins
ja
in
cdq
jmp
xchg
sbb
fucomi
add
pop
inc
dec
out
mov
mov
mov
push
mov
mov
sbb
scas
sbb
ret
jp
dec
aaa
add
es
pop
cld
out
inc
(bad)
push
in
xchg
fs
pushf
and
sub
add
call
add
inc
outs
test
loopne
jo
inc
dec
adc
daa
and
scas
mov
xchg
(bad)
jb
xor
call
push
xor
dec
lods
dec
and
stos
lock
movs
jmp
sub
cs
xchg
cld
test
cmp
ret
dec
in
nop
pusha
in
cli
dec
inc
and
adc
ret
inc
mov
das
pop
aas
xchg
arpl
stc
pop
or
sub
lea
cmp
adc
push
cmps
jmp
scas
fimul
sbb
movs
lss
xchg
outs
inc
xor
or
shl
loope
mov
push
in
sub
push
inc
mov
pusha
jne
cmps
jns
xchg
jle
call
loop
push
mov
inc
aas
out
inc
dec
jg
adc
push
rol
mov
fdiv
mov
pop
scas
jae
in
jne
ret
shl
xor
inc
in
scas
adc
call
jmp
mov
pop
es
mov
loopne
pop
dec
out
jns
push
mov
mov
push
sbb
jge
jge
jmp
xchg
fild
repz
cmp
cmp
mov
xchg
rcr
ret
jp
cmp
inc
(bad)
cmp
gs
pusha
sahf
popf
cmp
jo
dec
push
sbb
xchg
fidivr
pop
es
jnp
in
dec
cld
sub
adc
xchg
jns
adc
ja
sets
neg
xor
add
inc
xor
test
push
inc
stos
and
cmp
js
mov
(bad)
lods
xor
clc
test
pop
lods
inc
lahf
jae
xor
aam
mov
ja
test
jns
jnp
inc
sbb
movzx
fbld
movs
arpl
inc
call
add
(bad)
pop
add
pop
cs
push
sub
jnp
and
add
dec
jecxz
inc
fs
xor
cmps
mov
sub
(bad)
inc
test
push
leave
cmp
dec
out
out
popa
mov
sti
jmp
fnstsw
jge
cwde
mov
mov
call
cmp
mov
mov
adc
inc
dec
inc
enter
sub
imul
push
xchg
aam
mov
es
movq
inc
ins
xchg
not
pcmpeqb
repz
inc
in
xchg
sar
stos
push
add
or
xchg
sbb
mov
(bad)
push
aas
pop
cmps
xchg
sar
out
mov
push
test
out
xchg
xchg
pop
cdq
cwde
mov
mov
es
add
imul
in
mov
xor
movs
sbb
inc
pop
xchg
(bad)
push
dec
fwait
int
adc
push
jecxz
or
hlt
xor
mov
pop
or
lods
jns
movs
ret
mov
dec
aad
mov
adc
pushf
aam
mov
xor
cmp
cmps
adc
inc
in
sub
inc
movs
xchg
lods
inc
lock
retf
stos
scas
pop
add
inc
adc
xchg
add
pop
stos
out
mov
sbb
(bad)
(bad)
ins
bswap
arpl
cmc
fidivr
jmp
inc
mov
adc
fstp
cs
pushf
inc
je
xor
lds
sub
push
xchg
sub
shl
sbb
xlat
jg
push
push
mov
scas
sbb
ins
icebp
mov
aas
(bad)
cdq
in
(bad)
dec
mov
lahf
mov
jecxz
adc
imul
sbb
lods
jp
cmps
std
fadd
add
push
cmp
cmp
sahf
data16
sub
mov
pop
adc
stc
fisubr
pmullw
pusha
xor
dec
jmp
add
daa
in
adc
test
das
sbb
mov
fs
stos
pop
ds
mov
data16
dec
addr16
sbb
xchg
stos
(bad)
inc
lods
imul
inc
lahf
les
(bad)
inc
sbb
and
xchg
xchg
ret
cdq
mov
mov
lock
loop
push
lahf
ret
in
pop
mov
adc
mov
pop
arpl
and
(bad)
sbb
mov
sub
xchg
xor
jp
sub
daa
fnstcw
xor
dec
das
mov
mov
rcr
mov
and
fdiv
out
add
aaa
jg
in
cwde
popf
sub
sub
mov
into
cmp
xchg
push
test
xlat
lds
js
aad
arpl
or
repnz
out
jb
iret
call
call
fwait
jg
scas
mov
mov
ins
enter
pusha
sbb
mov
pushf
push
test
inc
mov
je
mov
cmp
cmc
jecxz
add
sub
xor
mov
add
hlt
addr16
(bad)
inc
pop
mov
in
cmp
cmp
sub
inc
into
cmp
mov
out
cmps
or
out
sub
and
sahf
or
int
ds
push
and
mov
(bad)
jg
jmp
outs
dec
pop
pop
sahf
fsubr
sahf
enter
sub
xchg
fmulp
mov
xchg
test
dec
sbb
add
je
into
fwait
aam
lods
xchg
or
or
xchg
loop
push
or
push
inc
sbb
je
cmp
daa
mov
loope
pop
and
or
(bad)
jmp
shr
adc
pop
xchg
mov
sbb
add
jl
stc
push
test
dec
push
xchg
mov
scas
stc
movs
arpl
jecxz
(bad)
stos
es
ja
dec
inc
rdtsc
cmc
mov
and
adc
gs
in
cmps
adc
xor
push
popf
add
lods
lahf
xchg
std
mov
test
out
or
pop
iret
or
aaa
cld
iret
sub
inc
(bad)
sbb
push
mov
mov
mov
out
fs
sub
push
aaa
pop
adc
sbb
add
mov
pop
arpl
popf
or
(bad)
pusha
jecxz
lods
xor
add
xchg
or
repnz
dec
mov
adc
jo
in
sahf
push
ret
pop
fnstsw
mov
inc
sbb
imul
mov
inc
push
fidivr
rol
push
xlat
mov
dec
push
repnz
gs
ss
ror
cmps
cmc
adc
jge
mov
push
adc
push
sbb
stc
aam
jno
xlat
repnz
test
or
sub
sub
mov
das
xor
add
xchg
into
cmp
mov
push
pop
ficomp
mov
jb
jbe
inc
int
dec
das
test
shl
stos
pop
cli
stc
adc
rsqrtps
bound
popf
xlat
(bad)
hlt
sti
je
shl
jge
leave
jns
int3
in
data16
arpl
or
imul
movs
mov
jnp
call
leave
scas
cmp
add
xchg
jmp
mov
add
cmp
cmps
pop
and
lods
aam
mov
int3
jge
pop
push
mov
stos
test
div
mov
adc
fnstcw
(bad)
lahf
mov
add
lahf
inc
test
clc
adc
xabort
aad
cmova
jge
jns
outs
int
enter
and
push
daa
call
ret
push
clc
push
push
adc
scas
es
out
jg
xchg
dec
and
stos
mov
sti
mov
icebp
add
fwait
jmp
pusha
shl
mov
mov
shl
ds
fist
xchg
mov
test
or
cmps
mov
lds
mov
sbb
into
cwde
mov
xchg
cmps
popa
out
dec
lea
dec
mov
xor
clc
mov
dec
(bad)
(bad)
scas
jmp
xchg
jmp
or
inc
dec
add
sbb
es
pop
sbb
push
fs
retf
sbb
(bad)
call
inc
and
pop
stos
jecxz
loop
mov
adc
inc
lods
cmp
jecxz
ds
aad
lods
sub
push
leave
mov
push
mov
clc
push
mov
dec
std
ins
xor
inc
in
push
mov
mov
or
(bad)
lahf
cs
mov
lods
shl
and
and
sbb
jae
pop
push
movs
cs
adc
sbb
xchg
aas
push
mov
cmp
xor
and
xchg
and
push
movs
push
mov
in
add
dec
sar
add
outs
pop
or
xchg
outs
outs
xchg
loopne
fadd
call
jno
jg
adc
mov
aam
push
mov
aam
cld
xchg
xor
pop
adc
adc
mov
leave
lea
inc
neg
xor
lea
lods
ins
adc
push
push
add
lods
bound
jbe
sbb
movs
vmwrite
sbb
pop
ds
es
or
and
inc
cmp
xchg
adc
mov
mov
and
mov
outs
pushf
out
dec
add
and
mov
and
test
loope
mov
fwait
push
out
or
iret
not
add
popf
inc
jg
arpl
std
cwde
jne
test
call
push
mov
mov
pushf
sbb
std
cmp
push
clc
jp
cmp
icebp
(bad)
sub
sahf
pop
lock
xchg
jnp
mov
jle
push
rcl
cmp
mov
out
mov
sbb
adc
push
mov
clc
mov
arpl
sbb
pop
pop
adc
push
(bad)
mul
imul
dec
xor
movs
cli
imul
push
and
test
fisttp
jb
mul
push
lods
shl
repnz
jp
dec
retf
or
rcl
inc
popf
sti
movs
mov
inc
mov
lds
pop
xchg
je
or
adc
inc
(bad)
movs
imul
call
jp
adc
imul
mov
or
rol
lods
ds
stos
repz
aad
cld
push
sbb
mov
pop
add
retf
adc
pop
mov
ret
mov
add
or
and
aam
mov
jge
cmp
aas
xchg
pusha
sahf
or
inc
ss
ins
fsub
sub
cld
gs
sahf
xor
mov
fadd
pop
and
aad
xchg
outs
stos
push
cmp
pop
(bad)
retf
jae
pop
sub
cwde
cmp
ror
ja
popa
sbb
xchg
xor
sub
push
mov
les
sahf
test
push
test
mov
ds
push
push
clc
popf
gs
xchg
(bad)
sub
rcr
or
fstp
pop
sbb
sti
test
inc
jg
xchg
mov
push
jmp
mov
lods
retf
jmp
loop
sbb
or
xchg
mov
add
sbb
inc
rcr
push
shl
hlt
pop
(bad)
loopne
loop
mov
mov
leave
jmp
mov
ss
mov
(bad)
and
aad
cmc
and
ds
pop
std
cld
pop
push
sbb
imul
(bad)
bound
cs
push
cmc
retf
sbb
cmps
xlat
(bad)
sub
sub
jae
mov
ret
stos
push
mov
jl
loop
call
jge
mov
push
or
or
mov
push
adc
fst
sbb
dec
dec
rol
mov
fs
arpl
dec
sub
cmp
jbe
xor
dec
movs
aas
jge
aas
gs
inc
rol
mov
hlt
sar
fmul
cmp
mov
shr
cmp
sbb
xor
pushf
not
out
jmp
in
(bad)
not
sub
lahf
inc
shl
cmp
mov
sqrtps
jmp
fadd
ja
mov
in
das
scas
mov
xchg
dec
call
sbb
(bad)
jecxz
outs
inc
fldcw
sub
out
loope
xchg
push
xchg
lahf
and
loopne
outs
ins
jmp
popa
les
jmp
call
(bad)
push
jae
dec
xor
aas
xchg
inc
out
cmps
cs
mov
mov
or
sti
jmp
mov
and
push
outs
fdiv
dec
jbe
or
jbe
(bad)
pushf
int
pushf
ret
aad
mov
out
stos
sbb
jg
mov
pushf
or
jb
(bad)
xchg
inc
stos
fwait
aad
jmp
daa
sub
sub
shr
push
mov
xchg
nop
gs
adc
cli
fld
sub
and
ror
test
cwde
in
repz
dec
pusha
retf
call
xchg
cli
mov
outs
ins
cmp
and
dec
xchg
push
mov
pop
mov
das
data16
mov
dec
xchg
or
adc
mov
jnp
xor
push
jne
adc
loope
mov
stc
fmulp
xor
sub
push
leave
std
adc
inc
cmp
pusha
adc
lods
jle
add
and
in
jbe
dec
inc
cdq
pop
cmps
std
sbb
push
shl
cmp
fld
int
xchg
mov
sbb
pusha
mov
(bad)
call
pop
or
push
and
aas
shr
cmps
fimul
cli
mov
pusha
jecxz
add
outs
or
sbb
or
adc
adc
jmp
movs
sbb
movs
sbb
dec
outs
in
lods
movs
sbb
into
xchg
in
daa
sub
jmp
fist
stos
jg
call
test
jnp
or
cli
jg
or
dec
mov
mov
int3
in
inc
sti
loop
retf
xor
or
adc
pop
sub
out
dec
icebp
fadd
(bad)
sbb
cld
cmp
mov
xor
and
push
mov
jg
xor
inc
xchg
sbb
retf
mov
mov
or
out
pop
mov
cmp
sbb
(bad)
test
cmp
adc
sahf
sub
dec
(bad)
div
icebp
sbb
xchg
dec
pushf
ret
mov
cmps
lods
lock
and
xor
scas
add
ror
mov
pop
out
jle
push
sub
scas
dec
leave
adc
sbb
arpl
fcmovne
xlat
ss
cdq
jmp
shl
mov
or
push
xchg
ins
call
mov
xchg
pop
popa
and
cwde
sbb
mov
or
xchg
and
cmp
inc
icebp
repz
iret
xor
(bad)
ins
jne
daa
pop
in
push
push
xchg
sbb
push
movs
popa
cli
shl
jecxz
push
mov
test
pop
stc
ins
jp
test
dec
add
inc
(bad)
dec
inc
test
lea
or
cdq
push
inc
es
iret
arpl
pusha
fadd
pusha
dec
std
sub
jp
mov
xor
sbb
jg
sahf
fld
inc
test
call
loope
popa
sti
jmp
fstp
xchg
movs
jecxz
je
aam
jmp
push
(bad)
mov
sub
enter
xchg
ds
jp
inc
js
mov
addr16
and
jbe
out
fild
movs
ss
pop
sub
pushf
mov
(bad)
icebp
mov
xchg
add
fisub
xchg
add
cmp
pop
sub
fstp
ja
sub
mov
sub
fimul
lock
and
and
adc
repz
loopne
jnp
xor
xchg
xor
mov
mov
or
scas
out
stc
xchg
retf
or
mov
test
push
xor
mov
push
sbb
inc
aad
cmp
into
and
mov
or
js
and
(bad)
and
dec
push
xchg
ret
fistp
fs
mov
icebp
pop
push
sbb
cs
jge
(bad)
push
mov
inc
pop
stos
dec
xor
push
not
adc
(bad)
test
cmp
mov
jo
mov
jecxz
pop
inc
pop
jl
js
pusha
adc
adc
mov
sbb
(bad)
imul
(bad)
jmp
iret
jle
movs
not
or
pop
or
data16
add
push
inc
pushf
sbb
sub
add
aad
inc
jge
dec
mov
je
push
cwde
mov
bound
pop
sub
lods
sub
add
(bad)
push
push
pop
jno
sbb
jmp
jnp
dec
lds
xor
mov
dec
imul
call
and
push
sbb
fsubp
mov
ss
pop
ss
pop
fiadd
jae
daa
lods
and
xchg
xchg
sub
push
mov
push
sbb
or
mov
sbb
popf
xor
mov
mov
scas
xchg
sti
inc
sub
xchg
push
imul
adc
sahf
ss
idiv
jp
pop
(bad)
cli
scas
sub
mov
xor
aad
clc
or
(bad)
call
mov
scas
jnp
xor
mov
cmp
mov
out
add
in
inc
jmp
or
lds
jns
push
call
(bad)
jo
push
jnp
xor
sub
jne
jns
loope
xchg
xor
dec
push
push
dec
cdq
rol
push
loope
lods
sub
loope
jnp
mov
pop
adc
and
call
xchg
push
push
les
or
inc
test
jecxz
mov
lahf
pop
arpl
or
js
mov
inc
mov
jnp
cmp
sbb
movs
pop
xchg
or
add
lds
fs
mov
outs
mov
out
mov
test
test
in
or
jne
repz
bound
xchg
jp
sub
test
pop
ret
pop
popa
test
lds
mov
nop
jecxz
ret
inc
cmp
lahf
loop
call
adc
popa
sub
fldcw
jns
xchg
mov
or
data16
jl
popf
pop
int
jl
mov
dec
cmp
movs
test
inc
jge
cmp
aam
mov
clc
xor
cmp
test
pop
aaa
inc
adc
ficom
test
(bad)
jl
dec
gs
xor
sub
adc
jns
xchg
pop
cmp
dec
(bad)
sahf
gs
mov
mov
js
outs
fisttp
out
push
aad
xchg
xor
jno
or
adc
mov
push
int3
push
popa
rcl
leave
rol
mov
add
or
nop
test
ret
outs
in
fld
push
fld
pop
outs
std
popa
pop
mov
cmps
mov
push
jp
mov
inc
and
push
sub
pop
xchg
stc
int3
imul
out
xchg
push
rcr
ror
daa
xor
cmp
test
lods
pop
sbb
pop
test
pop
sub
in
or
outs
inc
sub
xlat
push
push
mov
push
and
mov
mov
jmp
fcomi
enter
push
outs
iret
clc
pusha
cli
pop
dec
add
or
ins
dec
cmp
outs
push
add
ret
adc
jmp
jp
outs
stos
cs
ss
mov
add
add
jl
cmp
dec
push
inc
ficomp
adc
xor
xor
mov
lea
popa
mov
das
xchg
push
shl
jl
push
pop
xchg
jl
jl
xchg
sar
iret
(bad)
mov
movs
(bad)
adc
test
rol
inc
popa
add
imul
or
sahf
xor
add
out
sbb
lea
xchg
jae
test
aas
and
ret
imul
inc
jae
cmp
and
mov
ins
xor
(bad)
cmp
and
push
cs
mov
stos
sub
gs
adc
inc
push
addr16
pushf
sub
into
outs
in
call
xchg
repz
add
xor
sbb
aas
je
or
pop
test
pop
cmp
inc
mov
cmps
ret
cmps
jecxz
pop
call
jno
cwde
xchg
cmps
in
push
(bad)
aad
or
nop
jl
xor
mov
jno
loop
mov
rcpps
fstp
movs
inc
daa
xchg
jecxz
and
ins
cmps
and
cmp
ins
dec
and
dec
xor
aas
es
je
aas
mov
out
xor
leave
mov
in
xchg
xor
mov
pop
clc
adc
movs
push
pop
push
mov
and
ds
mov
imul
es
icebp
or
push
dec
not
push
mov
lods
mov
fcmovbe
inc
add
add
xchg
push
mov
pusha
stc
mov
jns
adc
js
mov
mov
mov
sbb
xor
icebp
repz
mov
cmp
pop
out
arpl
(bad)
stos
imul
mov
mov
retf
cmp
push
adc
jge
sbb
or
out
out
leave
gs
scas
jmp
xlat
icebp
ja
jecxz
dec
cwde
in
int3
jmp
inc
das
js
mov
mov
pop
je
mov
sbb
cmp
jmp
std
fbld
test
add
pop
hlt
jnp
hlt
aam
out
mov
pop
cwde
fs
mov
jle
and
icebp
mov
jo
call
je
and
mov
adc
sbb
enter
(bad)
cmc
xor
les
ds
loope
xor
shr
shr
xchg
sbb
adc
jnp
enter
mul
shl
movs
add
pop
out
adc
pop
jle
shl
adc
cmp
jnp
push
mov
cdq
cmp
mov
addr16
cmc
imul
(bad)
icebp
lock
loopne
push
dec
imul
jmp
out
push
loopne
sbb
and
mov
std
out
in
in
ret
sub
adc
jne
adc
add
or
dec
inc
mov
inc
test
xchg
cwde
push
jns
inc
rcr
les
or
lock
dec
add
test
hlt
and
xor
cmp
add
jge
push
ret
and
cs
outs
jg
mov
dec
adc
or
cld
and
or
push
xchg
outs
leave
or
cwde
sbb
pushf
jle
adc
call
xchg
rcl
sbb
pop
mov
mov
mov
cli
imul
shl
data16
xor
dec
push
cwde
bound
sub
mov
icebp
push
ja
sub
in
inc
sbb
imul
pop
call
outs
xor
ret
xchg
cmp
into
dec
xor
into
clc
xchg
sub
sbb
sbb
add
xchg
pop
lds
std
fisub
call
in
cli
mov
add
jo
mov
sbb
mov
jmp
dec
jge
scas
mov
dec
rcl
pop
inc
cli
(bad)
jecxz
loopne
aas
cmp
add
jae
lods
adc
xchg
jne
stc
mov
pop
and
dec
movs
fwait
in
data16
push
rcr
and
clc
lods
rol
mov
adc
clc
pop
and
pop
popa
xchg
cmp
(bad)
inc
test
les
mov
stc
ja
mov
sar
xchg
stc
(bad)
xor
inc
addr16
call
mov
inc
adc
ret
(bad)
shr
or
jl
or
push
retf
rol
scas
leave
pop
loopne
stc
adc
sbb
imul
and
mov
sbb
dec
lea
sbb
fcomp
cmp
sti
(bad)
pop
add
das
jge
sahf
cmp
adc
movs
mov
fistp
sbb
add
je
xchg
test
loope
ja
pop
push
mov
lock
in
pusha
pop
(bad)
ficomp
cmp
int3
clc
(bad)
xor
cmp
xchg
inc
jg
mov
sbb
or
xchg
bound
mov
xchg
add
push
aad
cmc
sbb
fcom
xlat
mov
stos
or
mov
adc
sub
fst
data16
jge
add
fcomp
retf
imul
ins
or
(bad)
outs
std
pop
fwait
cmp
loop
aas
mov
mov
fdivr
push
jmp
jmp
sub
inc
imul
inc
hlt
sub
les
push
sti
pusha
std
ins
arpl
imul
inc
ret
push
sub
dec
jmp
aam
mov
cld
nop
inc
pop
imul
mov
in
mov
dec
add
pop
mov
jmp
xchg
into
mov
cmc
data16
mov
(bad)
scas
and
mov
inc
mov
mov
sbb
popa
jns
retf
and
dec
les
movs
push
(bad)
in
dec
push
mov
out
aaa
xor
add
mov
movs
les
dec
rcr
stos
dec
sub
mov
mov
sub
cmc
ja
shl
mov
sar
mov
test
mov
bnd
cmp
xor
aad
pop
clc
xchg
mov
ror
inc
bound
test
test
mov
inc
pop
push
ins
mov
cmp
sub
sub
das
xchg
in
cmp
rcl
push
(bad)
sbb
dec
adc
scas
mov
pop
jmp
mov
and
or
pop
sbb
add
add
mov
lea
cmp
jne
mov
push
sub
push
xchg
adc
jp
lock
and
in
sbb
ret
ret
(bad)
shl
int
mov
pop
aas
test
ss
clc
or
or
jnp
push
xor
jle
int3
pop
mov
fcmovbe
int
das
or
out
pop
push
pushf
(bad)
mov
test
int3
mov
imul
fild
mov
pop
add
mov
adc
das
inc
mov
fwait
add
cmp
test
lock
arpl
and
inc
jg
scas
aaa
outs
xor
fcmovnb
jb
fst
push
lahf
rcl
call
and
sahf
cmp
sbb
idiv
nop
jnp
xchg
and
xchg
pop
lds
fidiv
lahf
imul
lds
repz
les
cmp
mov
push
sbb
push
sahf
add
pop
test
add
in
pop
out
lahf
inc
sub
jle
in
and
jne
loopne
imul
or
adc
cmp
dec
stc
js
cmp
mov
bound
mov
bswap
ds
popa
inc
sbb
stos
push
minss
call
and
sbb
xchg
out
fld
les
arpl
test
push
mov
inc
sub
and
mov
mov
fs
call
inc
xor
cmp
add
mov
outs
sbb
jae
dec
sbb
rcr
mov
repnz
pop
mov
(bad)
(bad)
xor
pop
popa
sti
inc
(bad)
(bad)
dec
adc
pop
dec
sbb
inc
aad
js
ret
push
jo
mov
jle
xor
sbb
loop
adc
cmp
addr16
adc
std
push
push
jo
scas
shl
dec
shld
sbb
fisttp
bound
mov
push
sub
sbb
mov
int
imul
push
stos
(bad)
scas
sub
mov
pop
inc
jg
or
push
cmc
jmp
aas
xchg
ret
mov
pop
(bad)
fnstcw
push
mov
add
dec
sub
loop
movs
and
(bad)
dec
xor
sbb
stos
fimul
fs
pop
sbb
xchg
mov
add
add
add
add
or
iret
pusha
or
or
pop
pop
add
inc
loopne
aaa
hlt
cwde
fwait
dec
or
out
test
jb
lods
cmp
jge
mov
and
xchg
push
add
cdq
test
js
or
or
adc
pusha
add
push
adc
push
les
lods
xor
mov
loop
retf
cmc
inc
or
pop
ds
popa
push
mov
sahf
cmp
ss
dec
stos
movs
in
push
jle
sbb
inc
inc
push
fld
xor
movnti
push
xlat
jne
pop
(bad)
sti
or
push
sbb
dec
test
lock
cmp
popa
dec
sub
lea
adc
inc
mov
out
out
lahf
loope
xacquire
ret
dec
pop
jnp
out
push
and
clc
jle
push
imul
pop
inc
sbb
stos
sub
mov
pop
test
or
push
add
ror
xchg
pop
xchg
sti
fdivr
add
cmps
fsubr
add
int3
mov
jge
adc
dec
rol
jo
loope
jmp
push
leave
popf
push
lds
jae
es
mov
rcr
dec
es
sar
and
fs
mov
push
imul
push
stos
es
bound
gs
adc
sbb
mov
je
mov
xor
mov
dec
mov
mov
push
xchg
stos
fadd
push
(bad)
out
xor
cmp
fwait
pusha
movs
jmp
add
mov
pop
stc
cli
call
arpl
xchg
outs
fnstcw
and
repz
add
in
ror
mov
inc
in
sar
sti
push
mov
stc
icebp
mov
dec
or
in
idiv
jne
mul
or
icebp
mov
or
adc
test
addr16
jmp
xor
sbb
dec
jbe
repnz
xor
sub
sbb
jns
mov
mov
mov
int3
push
sub
pop
gs
lahf
lock
cmp
push
pop
clc
add
pop
clc
loopne
shl
push
repnz
add
das
cmp
sub
and
popa
rcl
lock
jecxz
lea
mov
iret
popa
ss
and
and
add
push
sbb
mov
add
nop
clc
mov
sub
and
adc
mov
mov
xchg
lahf
(bad)
pop
mov
xor
jp
sbb
push
(bad)
and
or
jecxz
(bad)
ds
xor
in
inc
and
js
inc
dec
jns
stc
xchg
dec
and
nop
lea
sub
movs
rol
mov
pop
and
push
test
rcl
xchg
lahf
push
std
or
in
jecxz
and
pop
dec
add
jbe
mov
(bad)
cdq
push
pop
add
icebp
jecxz
pusha
loopne
pop
imul
pop
leave
ds
and
(bad)
aaa
mov
jnp
add
jl
sbb
xor
wrmsr
adc
inc
adc
test
ds
push
dec
ficom
repz
call
push
aam
mov
jae
mov
pushf
fwait
xchg
sbb
retf
jl
pop
movs
stc
add
dec
retf
adc
mov
jno
mov
(bad)
mov
rcl
setge
pop
sub
mov
add
cwde
(bad)
loope
icebp
repnz
dec
ror
jl
cwde
add
jg
sub
call
stc
inc
sub
test
inc
fimul
xor
adc
(bad)
mov
outs
jmp
jl
xchg
arpl
lahf
ss
pusha
call
pop
jb
call
jge
sub
push
xchg
aam
push
adc
das
repnz
mov
mov
pushf
push
loopne
xor
into
pop
pushf
inc
push
xor
inc
out
mov
dec
dec
jg
or
mov
out
mov
cmp
and
add
inc
push
lods
(bad)
lock
call
out
mov
pop
add
aas
(bad)
sbb
cmp
add
jmp
jmp
ds
jle
jns
mov
call
jge
xchg
push
rol
jmp
daa
add
inc
pop
jbe
mov
or
xor
dec
jo
pop
or
adc
rcl
shl
xor
popa
cs
nop
hlt
and
cli
fcomip
(bad)
rcr
mov
push
jp
jge
jbe
or
jg
xchg
pop
out
xlat
and
scas
aas
(bad)
ds
cli
aas
ds
jge
sub
jmp
sub
cli
jle
pop
or
dec
pop
out
out
stc
cmps
xchg
or
adc
jge
sbb
(bad)
pop
test
std
mov
les
push
lock
or
cli
idiv
int
sbb
(bad)
popa
push
mov
hlt
popf
rcr
cmp
cwde
push
aam
shl
test
inc
jmp
fisttp
test
adc
sbb
jmp
jmp
fsubr
sbb
inc
(bad)
cmp
in
adc
adc
pop
cmp
es
inc
sbb
mov
push
pop
jg
jmp
out
sub
mov
test
add
mov
jnp
and
mov
adc
pop
ds
mov
and
or
jge
or
jl
sbb
(bad)
cdq
or
mov
mov
cmc
icebp
jbe
push
(bad)
mov
das
sub
addr16
mov
imul
xlat
dec
cmps
psrlw
add
adc
mov
jg
sub
dec
push
mov
out
cld
push
xchg
lods
fnsave
ror
mov
xor
popa
imul
sbb
or
call
pop
push
dec
leave
push
(bad)
ds
enter
inc
xor
retf
das
dec
in
lods
mov
fcom
fs
push
leave
sar
cld
iret
sbb
pop
nop
xor
data16
imul
sub
lock
jle
mov
cmc
jecxz
pop
cld
cmp
or
xor
or
add
test
sub
jo
fprem
and
mov
sbb
push
mov
cwde
out
outs
xchg
cmp
scas
xchg
hlt
dec
scas
test
pushf
and
push
mov
add
or
mov
inc
fwait
mov
fcomp
cmp
not
jp
lods
cmp
and
js
adc
shr
test
or
push
sub
sbb
xlat
mov
fimul
xor
div
aad
out
iret
(bad)
jmp
test
loop
ror
sub
scas
fdivr
repnz
sar
popw
and
and
paddb
xchg
movs
test
add
and
iret
inc
pop
int
mov
sub
int3
inc
mov
outs
add
fbld
and
cmps
push
aaa
and
pop
dec
fstp
pop
push
jbe
je
lock
xchg
mov
data16
add
out
mov
call
lock
adc
or
pop
xor
enter
daa
mov
ret
jge
test
push
leave
pushf
iret
ret
jl
addr16
pop
cmp
comiss
mov
(bad)
pop
jmp
or
mov
xchg
fld
in
pop
jo
add
fimul
lods
mov
sub
loop
cmps
mov
lds
adc
(bad)
push
cmp
jp
loop
pop
das
xor
and
fsubr
jmp
fild
mov
in
or
sbb
ficom
xchg
jle
fld
std
pop
into
or
in
jle
mov
shl
add
hlt
mov
mov
sub
push
addr16
pop
imul
or
or
pop
xchg
jle
lods
loopne
movs
inc
jmp
mov
aaa
jns
scas
popf
call
popf
sbb
daa
inc
add
cmp
xchg
cs
lds
rcl
push
dec
add
mov
sahf
xchg
add
dec
outs
xlat
dec
adc
outs
and
(bad)
enter
cmp
fisttp
test
cmp
jbe
adc
adc
xor
pop
adc
add
and
lea
jecxz
ins
ins
in
add
sbb
and
fadd
cmp
xor
add
inc
jnp
sbb
mov
ins
cmp
xor
ret
ss
daa
js
mov
mov
add
add
push
push
sub
inc
mov
sub
jle
pop
icebp
je
xlat
pop
push
fst
inc
ss
sub
jl
mov
jo
loope
xor
sbb
and
sahf
mov
push
adc
add
inc
adc
mov
jns
pop
add
jg
(bad)
ins
fadd
and
push
adc
push
pushf
arpl
add
cwde
pop
or
jo
mov
mov
sbb
adc
xor
push
mov
and
mov
xor
sub
call
cmps
pop
rcr
cmc
mov
call
mov
sub
or
add
adc
add
jno
call
dec
cwde
or
jecxz
and
jne
iret
xchg
sub
mov
push
add
data16
cmc
cmp
jno
or
xchg
xor
mov
test
in
out
mov
add
add
cmc
fcmovnbe
shl
pop
or
and
fisub
xor
imul
fadd
jo
test
cmc
xor
fs
outs
out
cdq
int
jmp
xor
aam
inc
dec
or
xchg
mov
xlat
dec
ins
inc
scas
int3
fsubr
ins
add
ins
into
dec
xor
jne
mov
pushf
(bad)
stos
mov
fwait
ss
xor
imul
cwde
(bad)
jnp
cwde
jge
sub
imul
sub
scas
stos
cmp
or
mov
cmp
in
jle
push
add
add
ss
lods
shr
(bad)
xchg
imul
and
daa
mov
jbe
jmp
mov
ins
js
retf
ss
cli
popa
addr16
aaa
adc
inc
mov
or
xor
loop
(bad)
shl
gs
test
idiv
fld
je
push
push
pop
adc
sahf
or
mov
fbld
mov
(bad)
mov
add
and
nop
mov
cmc
stos
mov
jmp
test
and
jno
and
mov
xchg
push
add
ja
scas
loopne
adc
mov
(bad)
in
jb
shr
xchg
adc
jne
call
dec
test
sub
or
pushf
add
pop
push
cmps
ins
jmp
or
add
sbb
add
xor
sti
add
loopne
mov
jg
or
mov
pop
test
pop
loope
sti
add
mov
xchg
daa
stc
add
rcr
xchg
leave
jae
outs
mov
int3
push
jnp
sub
dec
shr
mov
ss
dec
clc
sbb
mov
fiadd
mov
das
cmp
mov
sub
add
outs
mov
ret
inc
aad
adc
push
jl
or
dec
outs
popa
jo
pusha
adc
les
test
mov
pmulhw
inc
cmp
ror
push
test
push
push
mov
test
and
inc
mov
inc
inc
sub
xor
mov
inc
test
sbb
test
(bad)
and
mov
sbb
test
xor
or
inc
movs
data16
pushf
addr16
cmp
in
stc
sbb
pop
adc
adc
xor
and
dec
movs
xchg
mov
xchg
push
and
inc
test
test
pop
les
pop
add
and
inc
pusha
outs
pusha
fdiv
and
sub
xor
in
or
inc
adc
sub
jae
xchg
retf
pushf
xor
ss
(bad)
retf
ja
ret
pop
sub
mov
dec
mov
push
es
inc
cs
xor
les
jecxz
and
and
sbb
sbb
sbb
sbb
sbb
sbb
bound
enter
movs
xchg
pop
std
std
dec
mov
std
test
pop
sbb
test
add
punpcklbw
dec
or
icebp
lds
enter
inc
xor
fwait
push
cmp
xchg
call
push
lock
loopne
add
xchg
adc
sar
add
and
push
scas
setbe
push
xor
add
push
push
sbb
xor
rcl
stos
jo
shr
shr
out
add
ins
xor
les
push
in
call
ins
adc
inc
mov
fst
mov
addr16
push
inc
cli
push
imul
lods
es
pushf
loopne
add
push
mov
cmp
(bad)
push
mov
or
push
jne
in
or
add
or
or
loop
jp
lds
push
jg
clc
rcr
mov
and
jnp
stos
les
cmp
xchg
mov
in
(bad)
lds
jecxz
ins
mov
add
fdiv
cwde
adc
ror
inc
pusha
and
adc
add
sbb
sub
or
pop
les
das
add
dec
mov
mov
cld
pop
xchg
retf
dec
std
jmp
das
dec
das
sar
test
int
test
inc
ds
adc
mov
inc
pop
dec
ins
outs
dec
jb
or
out
and
ja
pop
cmp
push
inc
ret
and
arpl
or
pushf
cmp
adc
xchg
sbb
inc
inc
ficom
sub
hlt
mov
inc
sahf
lods
fcomp
sar
out
xchg
fild
lea
adc
sub
mov
sbb
mov
adc
pop
jmp
sub
adc
cmp
inc
xor
retf
mov
mov
and
mov
lods
repnz
ja
sub
rcr
out
pusha
in
pusha
fwait
ret
mov
fcomi
fld
mov
or
cmp
pop
hlt
shl
lds
(bad)
ss
add
fnsave
out
aaa
dec
cmps
push
dec
dec
and
inc
push
clc
popa
loopne
scas
push
imul
jno
xchg
cmp
and
leave
js
movs
cs
mov
dec
sti
xor
dec
jecxz
stos
jle
aad
jmp
adc
pop
xor
in
lods
stos
out
jle
pop
jg
sbb
and
cmp
out
div
call
stos
scas
or
xor
mov
lods
pop
jno
in
dec
mov
ins
(bad)
out
inc
dec
sub
or
pusha
sbb
arpl
and
pop
ins
imul
add
lods
sahf
lds
iret
out
inc
dec
sub
aas
scas
fwait
popa
adc
fwait
test
adc
popa
jo
(bad)
call
xor
bound
push
pop
cmps
sub
and
jle
mov
mov
jno
call
push
cmp
lock
push
sbb
rcl
(bad)
mov
mov
stc
sbb
movs
mov
xor
movs
fisttp
mov
cmc
push
xchg
and
inc
(bad)
std
pop
out
les
and
lock
adc
jns
lock
sar
mov
mov
cmps
lock
pop
fwait
js
test
jp
mov
(bad)
retf
jns
ja
mov
adc
int
pop
loope
fistp
push
retf
adc
out
mov
sub
fidivr
daa
je
pop
daa
sbb
pop
dec
ds
xchg
dec
sub
in
jns
push
lock
pop
leave
in
add
cmp
pop
add
xchg
sub
pop
xor
mov
clc
dec
shl
popf
repz
rcr
jl
les
mov
xor
enter
xor
pop
xchg
das
jp
xchg
sbb
or
cwd
(bad)
cli
(bad)
(bad)
cmp
retf
mov
sub
push
lds
mov
cli
push
aaa
pop
mov
fdivr
mov
xor
fidiv
mov
in
push
std
int
cli
movs
bound
pop
cmc
add
mov
cli
ret
sub
push
addr16
addr16
iret
xchg
cmp
sbb
sub
aam
or
adc
fild
les
scas
mov
out
xchg
dec
jno
jmp
lea
ret
leave
jl
push
jmp
test
imul
push
fisttp
inc
std
or
or
mov
ror
pop
xchg
test
adc
daa
in
inc
shl
or
shl
mov
int3
jo
and
jp
cdq
pop
jecxz
outs
jge
daa
lods
fld
pop
pushf
test
pop
stc
mov
pop
in
xchg
sub
aaa
sbb
cmp
jp
in
stc
push
aaa
data16
jge
xchg
cmp
js
mov
mov
hlt
icebp
sub
pop
pop
sbb
mov
jmp
adc
out
xchg
imul
jg
dec
hlt
ins
in
lahf
out
aaa
hlt
lods
aas
and
rol
scas
mov
gs
(bad)
xchg
push
test
pop
jecxz
loop
mov
or
dec
push
es
leave
je
popa
add
aam
(bad)
fidiv
push
inc
ss
mov
aad
jne
fwait
stos
pop
idiv
dec
mov
jmp
jl
pop
std
lods
push
xor
ins
icebp
div
fcomi
mov
jno
lahf
push
xchg
lahf
aaa
inc
into
in
xlat
xchg
mov
cmc
retf
clc
pop
jge
out
pop
in
sti
cmps
out
cmp
daa
js
push
sahf
in
ds
pop
xlat
push
test
push
ja
loop
push
ins
sub
pop
xchg
icebp
mov
(bad)
hlt
cld
ss
aam
cmp
das
xchg
mov
cmp
or
dec
pop
addr16
and
leave
jp
jle
inc
push
js
mov
jb
mov
xchg
popa
and
shl
pusha
cmp
pop
and
(bad)
popa
stc
jge
and
imul
out
adc
adc
push
lds
adc
pop
ret
iret
data16
sahf
pushf
jp
ror
sub
fucomp
push
das
or
pop
stc
sbb
ja
rcl
mov
lahf
test
jnp
aaa
inc
ja
pop
scas
in
fld
outs
mov
inc
or
sub
in
aas
pop
xor
mov
ins
adc
add
(bad)
(bad)
stos
pop
adc
stc
sub
add
mov
je
or
sbb
lahf
push
xchg
or
shl
arpl
in
sub
or
dec
gs
call
cmps
call
pusha
std
dec
jecxz
jecxz
pop
mov
arpl
adc
jne
mov
dec
les
sbb
mov
pop
pop
out
pop
clc
lea
neg
retf
out
mov
fcom
dec
retf
sbb
in
arpl
ss
test
or
(bad)
sub
mov
mov
jmp
cwde
pop
mov
cmps
(bad)
push
(bad)
jmp
ret
cmp
jmp
not
add
pop
sbb
test
sub
jge
inc
mov
add
not
sbb
inc
loopne
mul
mov
stc
icebp
or
in
(bad)
push
std
cdq
fs
add
inc
sub
jmp
repnz
mov
adc
icebp
inc
out
push
jge
add
sbb
mov
mov
adc
push
arpl
iret
xor
int
mov
jle
stc
or
addr16
pop
push
xchg
cmp
add
jecxz
cmp
pop
jmp
cs
scas
mov
mov
dec
imul
jle
sub
clc
stos
cld
lods
imul
loopne
sub
ins
iret
jne
fst
lds
push
inc
push
xchg
aaa
inc
mov
sub
xchg
add
sbb
sub
cmps
mov
sub
sub
pop
fstp
push
mov
or
push
idiv
(bad)
out
jl
jmp
xor
outs
cmp
(bad)
push
sub
lahf
rcl
inc
mov
adc
jge
push
leave
xor
enter
je
scas
je
outs
sub
rol
add
pop
sbb
pop
push
clc
mov
loopne
add
xchg
js
add
popa
clc
add
rol
fiadd
cmp
pop
into
xor
enter
xchg
push
and
bound
sub
iret
cli
lahf
loop
inc
dec
out
lahf
sub
xor
push
retf
lods
sub
ins
cmp
loopne
inc
mov
std
dec
fist
add
fs
push
sub
(bad)
stc
mov
adc
aam
(bad)
pop
clc
mov
dec
sub
lods
in
or
pop
jg
sbb
inc
mov
mov
add
aam
dec
push
adc
repz
cld
jle
js
bound
js
imul
js
jmp
scas
pop
in
mov
mov
pusha
mov
push
jmp
cmp
mov
mov
mov
dec
call
xor
shl
push
repnz
mov
cwde
mov
jecxz
push
bound
cmps
sub
imul
or
fnstsw
sub
mov
in
int
jmp
fisttp
add
lock
int
rcl
sahf
bound
xchg
pop
dec
(bad)
sti
mov
cs
and
in
xchg
xor
xchg
cmp
or
loop
or
push
fdivr
aad
jns
sbb
out
jmp
repnz
add
mov
mul
cmp
pop
mov
test
jns
mov
and
addr16
jmp
clc
mov
mov
mov
inc
xchg
rcl
mov
imul
and
icebp
xchg
mov
jnp
pop
ds
push
pop
retf
push
sub
push
cdq
pop
inc
push
mov
mov
mov
xchg
xchg
adc
aad
std
movs
dec
jp
jp
dec
push
(bad)
cli
jb
cmp
mov
jg
(bad)
and
dec
(bad)
fsubr
push
jle
outs
mov
sub
xchg
and
xor
pop
loopne
sub
jg
(bad)
hlt
jmp
inc
rcr
jae
push
inc
(bad)
pop
xchg
in
shl
ret
inc
jae
mov
aam
scas
pop
ds
pop
xlat
mov
mov
(bad)
loopne
dec
ds
jmp
mov
jae
jnp
imul
loope
into
lock
mov
loopne
jmp
hlt
jl
(bad)
jno
cmp
inc
cmc
movs
dec
and
lss
shr
lea
leave
sbb
lods
(bad)
in
cmp
daa
ret
sub
movs
js
cld
push
inc
(bad)
and
xchg
mov
or
in
add
cmp
sbb
cmp
mov
ss
adc
dec
sahf
or
ret
inc
cmc
stc
inc
mov
mov
aad
(bad)
nop
(bad)
loope
adc
add
iret
mov
sti
or
sub
pop
icebp
mov
sti
add
xchg
xchg
cmps
mov
fwait
pop
xchg
inc
adc
(bad)
in
int3
cmps
xchg
ds
stos
clc
stos
pop
call
sub
aad
movs
push
mov
sbb
sbb
adc
inc
daa
adc
sbb
popa
mov
scas
sahf
movs
jnp
and
stos
out
ja
xchg
jmp
fild
ss
or
sbb
push
ins
jle
dec
add
add
jecxz
movs
xor
mov
mov
imul
shr
ret
ins
and
jae
jmp
xlat
push
and
(bad)
std
xor
in
xchg
fnstcw
stos
push
stos
cmp
or
in
test
in
in
xor
push
or
adc
inc
dec
shl
stos
int
mov
xor
pop
ret
std
or
mov
cmp
xor
jecxz
sahf
cmp
aaa
add
ror
lock
jmp
retf
add
shr
or
pop
mov
bound
fstp
repnz
fadd
mov
inc
mov
pop
pop
sbb
loope
icebp
clc
imul
mov
jno
or
inc
xlat
jp
ds
mov
enter
sub
cmps
imul
fidiv
neg
enter
push
lods
mov
std
jnp
push
mov
pop
cmp
(bad)
mov
mov
mov
and
xor
push
adc
ins
int3
xor
test
repnz
mov
dec
lahf
cs
cmp
in
jmp
push
not
mov
mov
cld
jp
sbb
dec
test
rol
push
scas
and
mov
push
inc
cmps
sahf
loop
movs
cmp
repz
lea
or
mov
loop
loop
test
and
mov
sti
shr
adc
mov
inc
jmp
mov
mov
test
mov
sti
or
push
ds
(bad)
cld
pop
ret
movs
rep
lods
push
cmp
fstp
dec
jns
and
lods
push
add
xchg
sub
aas
push
xchg
pop
cmp
add
mul
addr16
xor
xor
pop
push
push
sbb
push
mov
cmc
jae
mov
pop
push
or
lds
sbb
icebp
push
sub
lahf
sub
adc
ins
cli
bound
pushf
cmps
adc
sbb
fcomp
outs
mov
mov
mov
jne
scas
mov
dec
push
mov
mov
adc
loope
test
scas
cmp
gs
or
pop
pop
mov
adc
test
adc
hlt
inc
inc
pop
push
test
mov
enter
icebp
test
outs
in
pop
mov
in
adc
clc
xor
pop
push
daa
aaa
pop
cs
inc
shr
cmp
pop
(bad)
das
fld
int
outs
cli
jmp
rcr
retf
out
jl
sbb
mov
dec
pop
and
lods
pushaw
adc
lods
dec
sti
rcr
pop
popf
les
in
sbb
cwde
add
and
out
xor
imul
xchg
scas
dec
xor
mov
add
popa
dec
cmc
loop
sbb
fs
imul
popf
test
dec
stos
mov
(bad)
call
sub
mov
jne
or
mov
stc
push
dec
mov
push
in
ins
aad
pop
lods
out
divps
mov
out
out
mov
cdq
xlat
(bad)
(bad)
ins
les
sub
fldcw
pop
mov
mov
adc
push
jl
push
in
xlat
push
mov
movs
jmp
(bad)
mov
dec
lods
mov
bound
xor
push
or
sbb
push
rcl
mov
mov
popf
pushw
scas
popa
jle
iret
jne
push
in
je
pop
scas
fcom
fist
(bad)
xchg
or
and
adc
inc
pop
pushf
cmp
push
sbb
and
inc
adc
shl
les
and
mov
gs
in
or
sbb
bound
sub
jne
sub
(bad)
lods
dec
inc
adc
xchg
and
jo
xor
jo
shl
std
(bad)
mov
mov
xor
fisubr
or
adc
stc
jp
pop
mov
or
or
daa
cld
aaa
cmp
mov
sbb
shl
dec
add
inc
xor
push
jmp
xchg
mov
xchg
scas
and
sbb
cli
xchg
mov
jb
fdiv
mov
mov
mov
cld
leave
iret
mov
mov
fwait
in
mov
fsubr
or
push
push
push
xor
mov
push
icebp
pushf
dec
js
jne
imul
popf
add
test
push
inc
jne
jp
cs
sbb
dec
dec
xchg
pop
xchg
sub
mov
mov
jno
jne
dec
in
pop
xchg
fistp
cwde
xchg
dec
mov
repz
ss
jge
or
push
jnp
jno
test
jle
movs
fimul
cmp
jne
(bad)
mov
sbb
imul
stc
inc
lock
fisttp
cli
jl
mov
push
test
pop
jno
sub
push
aaa
mov
mov
loope
push
jmp
mov
jmp
mov
cmp
adc
stos
jno
inc
push
stos
xor
jecxz
in
shr
jb
jb
sbb
movs
out
mov
ficom
adc
das
pop
loopne
scas
dec
jbe
repz
sub
inc
mov
(bad)
cli
add
jne
add
mov
and
xor
push
sub
adc
fidiv
sahf
mov
cmp
(bad)
aam
rcl
cmp
test
mov
(bad)
lds
pop
out
repnz
shr
xor
mov
add
out
in
jge
xchg
movs
add
sbb
out
ss
cs
pop
xchg
(bad)
xor
shl
mov
mov
call
sbb
fld
mov
fnsave
push
out
enter
jmp
cdq
shr
pop
mov
shl
or
out
or
(bad)
sbb
ja
add
dec
cmp
pop
iret
cdq
pop
sub
and
int
sahf
xchg
xchg
inc
push
sub
in
inc
in
arpl
fwait
pop
lock
mov
jno
and
mov
iret
loopne
sub
ret
retf
sbb
pushf
rcl
cmp
ror
inc
push
outs
push
mov
mov
neg
pop
sar
mov
cmp
jbe
lahf
add
sub
jmp
sbb
and
inc
sub
loopne
rcr
jp
out
(bad)
push
sbb
arpl
push
mov
jp
mov
cs
push
xchg
push
ror
xor
dec
jnp
js
fsub
stos
scas
sahf
imul
stos
sbb
int3
mov
stos
mov
xor
mov
aad
clc
or
shl
js
loopne
push
sub
inc
push
or
or
push
xor
sti
movs
or
cmp
es
dec
xor
mov
cmps
retf
sbb
out
call
xchg
mov
jo
cmps
pop
in
jmp
scas
popf
push
call
push
sub
lock
xor
jmp
outs
inc
or
ins
sbb
pop
in
xchg
loop
dec
sub
iret
xor
add
and
test
cmp
mov
mov
hlt
(bad)
test
push
mov
mov
test
xor
xor
inc
loopne
cwde
shl
leave
stos
mov
loop
aad
jecxz
adc
ds
scas
and
fld
sub
xor
mov
sahf
shl
(bad)
cmps
sbb
adc
adc
push
mov
ja
fbld
jb
inc
push
into
push
into
pop
and
or
fwait
movs
and
add
cmp
jns
and
into
pop
cdq
jg
daa
(bad)
cld
dec
and
push
repz
in
aam
or
pop
push
test
idiv
xlat
xor
(bad)
xlat
pop
popa
add
lds
lods
aam
jmp
pop
sub
(bad)
jl
push
int
enter
jmp
mov
addr16
adc
add
pop
(bad)
push
clc
stos
xchg
pop
retf
pop
daa
ss
xchg
inc
xchg
xchg
ret
in
jg
xchg
xor
ds
outs
in
call
push
mov
lahf
popa
lods
mov
mov
jno
idiv
dec
and
jne
xor
inc
repnz
mov
movs
add
(bad)
imul
mov
dec
dec
push
jo
add
dec
push
in
xlat
xchg
fs
and
call
push
pop
nop
adc
js
jmp
mov
mov
mov
popf
aam
outs
stos
inc
adc
jecxz
xchg
and
sbb
jmp
cld
in
call
or
out
xchg
inc
push
fnstsw
mov
jae
mov
lods
sub
mov
mov
xchg
dec
and
iret
fcomp
les
xchg
idiv
leave
xor
sbb
mov
mov
fst
mov
inc
and
cdq
lock
or
cmp
add
mov
sbb
adc
push
adc
sub
lods
fisubr
sbb
inc
sbb
imul
inc
lds
push
sti
mov
loope
mov
xor
push
mov
jae
add
or
retw
add
and
loope
(bad)
ret
mov
mov
jne
jb
sub
dec
mov
xor
cmps
pop
jecxz
fidivr
pop
push
xchg
or
mov
bound
leave
dec
in
sti
adc
scas
push
pop
(bad)
je
mov
in
inc
sti
cs
jne
repnz
bound
test
fiadd
dec
loop
dec
jb
addr16
aad
std
lds
mov
sbb
jecxz
fild
xor
add
xor
cmps
sbb
adc
xchg
jg
dec
push
sahf
icebp
je
push
push
add
or
push
push
(bad)
(bad)
inc
cmp
jbe
scas
xchg
cmp
push
bnd
push
lock
sar
mov
xchg
sub
jnp
mov
push
iret
push
leave
pop
jnp
arpl
xchg
dec
je
in
mov
xchg
leave
sti
ja
mov
lock
jmp
loop
out
mov
sbb
dec
pop
sub
aad
hlt
mov
dec
stos
cmps
dec
inc
push
add
mov
aad
sahf
loop
xchg
movs
mov
dec
mov
jcxz
inc
xor
movs
in
sbb
in
fcom
inc
mov
inc
shl
jno
fcomp
pop
inc
das
retf
mov
dec
mov
test
and
cmps
or
dec
mov
mov
outs
adc
mov
sub
mov
or
(bad)
or
das
mov
jl
push
adc
adc
stos
mov
sub
and
(bad)
aaa
sti
mov
dec
std
jbe
mov
lea
pop
sti
aas
push
cmp
mov
jne
loop
loopne
enter
cmps
sub
mov
pushf
jmp
fisttp
outs
dec
inc
jno
enter
jo
dec
add
or
adc
aad
je
test
ror
std
loopne
add
enter
cmps
jno
mov
enter
mov
(bad)
sbb
sub
dec
xchg
bnd
jmp
push
stc
jl
(bad)
push
pop
aam
enter
stos
je
loop
loopne
fwait
inc
jle
int
sub
loopne
jbe
mov
fwait
sub
popa
jl
pop
pop
sar
test
dec
dec
addr16
retf
ret
call
(bad)
je
dec
call
arpl
mov
sub
(bad)
repnz
cmp
into
and
(bad)
jns
aas
sbb
nop
or
psraw
inc
stos
push
adc
dec
jbe
movs
xchg
cmp
jnp
loope
mov
data16
or
imul
pusha
push
push
dec
push
pop
test
ret
out
add
mov
test
cmp
popa
xchg
sub
jecxz
push
adc
outs
(bad)
jmp
cs
sub
cmps
je
pushf
cmp
pop
aad
mov
xor
push
cdq
fld
aaa
xchg
sub
out
in
xchg
fsubr
sub
cmp
(bad)
test
ja
cmps
ins
or
cwde
cs
mov
jne
sbb
std
sar
mov
(bad)
cmp
popa
mov
in
push
cli
aaa
mov
inc
stos
mov
and
adc
fisttp
(bad)
cld
fstp
cld
jle
repz
sub
in
push
and
xchg
dec
mov
ss
jmp
mov
inc
fisub
xchg
rol
or
and
ins
test
stc
pop
gs
loopne
jns
or
outs
ins
xor
push
sbb
(bad)
mov
mov
fdivrp
jmp
or
xchg
(bad)
int
sbb
mov
mov
push
hlt
fdiv
ror
mov
mov
mov
test
loop
sbb
fdivrp
mov
popa
adc
(bad)
mov
xlat
stos
sbb
stc
enter
movs
inc
pop
sub
retf
jmp
sbb
dec
cwde
data16
(bad)
lods
cld
test
dec
mov
pop
bound
(bad)
sahf
mov
sub
in
jmp
outs
jmp
mov
stos
pop
adc
popf
fdiv
(bad)
or
pop
cs
jb
and
inc
in
pop
add
mov
xchg
aad
cmps
mov
xlat
mov
jmp
aam
fiadd
repz
repnz
loope
pop
lock
push
mov
loop
les
jp
and
xchg
mov
mov
or
in
cld
mov
lock
ins
cmp
sub
imul
adc
xlat
mov
dec
call
inc
fsubr
sti
adc
ds
jg
ret
push
xchg
mov
imul
ds
inc
mov
shl
add
xchg
into
aad
xor
xlat
pop
mov
and
ficom
imul
push
test
aam
movs
dec
pop
mov
int3
sti
mov
das
mov
out
inc
stos
lock
sbb
sbb
jbe
(bad)
(bad)
xchg
cmp
(bad)
mov
adc
scas
ret
cmp
leave
js
repnz
fwait
inc
hlt
mov
js
lods
imul
or
xchg
xchg
jecxz
jb
push
fwait
repnz
ret
push
shl
jge
fidiv
dec
jne
cs
adc
mov
mov
mov
xchg
push
xchg
shr
or
push
sbb
and
iret
leave
jae
sbb
js
leave
mov
shl
cwde
loopne
in
or
test
jnp
sbb
stc
fcom
es
mov
aam
lahf
sbb
mov
in
inc
add
add
mov
jl
pop
pop
stos
pop
gs
nop
arpl
pop
lods
bound
aam
mov
clc
add
mov
stos
pop
setl
cld
inc
aam
and
mov
jecxz
xor
aaa
ins
cmp
pop
addr16
pop
into
pop
xor
movs
xchg
popf
dec
and
jbe
test
in
ret
iret
data16
inc
sbb
fisub
push
jo
clc
and
jle
adc
mov
fwait
add
mov
pop
jge
xchg
gs
shr
ins
jb
ret
adc
push
pop
jno
scas
fcom
mov
mov
rep
cmps
jg
pop
xor
cmp
nop
or
adc
dec
and
adc
inc
adc
cld
mov
adc
add
es
enter
inc
cli
(bad)
cmp
add
sub
or
adc
xchg
push
es
ficomp
pop
sub
in
enter
mov
push
shl
push
(bad)
pusha
push
xor
sub
sub
(bad)
sub
into
pop
mov
push
mov
mov
(bad)
sahf
xchg
push
and
ret
sti
inc
push
enter
mov
out
and
sbb
push
inc
add
xchg
(bad)
les
pop
jecxz
hlt
mov
dec
fwait
adc
mov
dec
pusha
mov
aas
jl
cmps
scas
outs
pushf
fnsave
int
in
cmps
mov
dec
xchg
pop
xchg
stos
jmp
(bad)
jmp
sub
cld
out
mov
movs
add
in
repnz
xchg
sub
in
push
addr16
repnz
aas
add
repz
mov
repnz
call
mov
and
mov
cmp
bound
ss
xchg
sub
cdq
xchg
jg
push
and
sar
pushf
or
aad
not
cmp
test
xchg
scas
or
aaa
mov
cld
and
adc
dec
es
adc
dec
mov
adc
dec
retf
xchg
and
or
push
mov
jp
icebp
xor
scas
in
pop
scas
xchg
dec
cmp
cs
repz
fninit
push
add
pop
enter
cwde
pusha
cmp
cmp
arpl
jb
cmp
sbb
in
repnz
lods
pusha
pop
retf
cwde
push
xchg
mov
mul
stc
dec
sub
mov
inc
(bad)
enter
xor
sub
stos
stos
jae
cmps
cmc
stos
xor
dec
pop
and
and
sub
in
scas
les
shl
int3
pusha
or
call
test
push
xchg
cmps
inc
dec
sahf
fisttp
dec
aam
sub
arpl
std
jo
xor
mul
out
movs
mov
cli
xor
push
dec
cli
xchg
inc
add
jne
in
mov
scas
pushf
sahf
(bad)
js
loopne
setb
ss
(bad)
mov
push
push
out
xchg
iret
adc
push
shl
lea
pop
stos
in
test
mov
pop
out
aas
sub
xchg
imul
mov
push
adc
and
adc
fwait
js
cmp
in
into
arpl
fwait
call
pop
imul
inc
sub
les
sub
(bad)
sti
jmp
cwde
stos
jmp
ret
outs
inc
push
xchg
inc
iret
into
retf
xor
ret
mov
sub
ja
jo
sbb
cmps
call
xor
pusha
ds
xor
jg
xor
cld
stos
mov
mov
inc
test
ret
mov
lds
idiv
dec
(bad)
jns
inc
sbb
dec
inc
test
cwde
mov
xchg
mov
movs
mov
add
ins
sbb
loope
xchg
ins
cmp
jb
sub
jle
pop
clc
pop
xor
and
ja
outs
push
shl
pop
dec
shl
cwde
dec
je
pop
mov
xchg
sbb
not
cmps
add
jp
sahf
or
es
push
aaa
in
push
pusha
xor
sar
sbb
std
scas
cmps
mov
and
call
mov
fdiv
or
outs
xor
fisubr
jecxz
pop
in
cmps
xchg
aas
push
rcr
imul
xchg
ret
stos
fst
mov
sbb
lods
(bad)
lds
push
sbb
cmps
pop
push
jno
lahf
mov
jecxz
inc
inc
stos
add
push
xor
retf
aad
mov
and
jo
loope
enter
push
cli
clc
xor
mov
popa
dec
adc
push
adc
mov
jns
(bad)
mov
jecxz
lods
inc
xor
int
gs
shr
gs
pushf
cmps
cmp
mov
push
pop
leave
inc
call
sbb
pop
imul
jge
int3
sbb
mov
sub
ins
jne
sub
mov
nop
mov
add
hlt
inc
pop
or
jmp
std
adc
fs
jle
sub
test
mov
cdq
xor
cwde
add
call
add
pushf
aam
ja
and
jne
fdiv
jo
xor
int3
jge
cmp
loopne
pop
stc
retf
jb
sbb
cmp
daa
pushf
mov
cli
push
cwde
inc
test
ret
jbe
dec
jne
(bad)
cmp
mov
inc
inc
cwde
es
dec
in
cwde
icebp
xor
pop
jb
out
inc
add
inc
call
imul
addr16
push
std
fnstenv
mov
(bad)
sti
mov
cmps
add
sar
fimul
in
add
mov
ins
jl
dec
adc
xor
adc
jg
cmps
in
pop
xlat
bound
push
js
and
jmp
es
push
repnz
popf
mov
sub
or
pop
and
mov
arpl
lods
mov
xor
cmps
xlat
xor
push
or
ja
mov
push
lds
es
imul
dec
add
push
dec
repnz
div
test
xor
loopne
and
adc
(bad)
es
mov
sbb
imul
sub
stc
mov
mov
inc
in
outs
fidivr
lahf
fcom
addr16
je
cmp
std
js
je
xchg
hlt
loopne
xor
pop
cmps
mov
mov
iret
cmp
stc
aam
cmp
das
cmp
mov
in
scas
mov
push
mov
dec
les
mov
ret
jp
dec
inc
xlat
lahf
xchg
out
push
cdq
pop
add
inc
sar
int
xor
mov
cmp
jnp
movs
repnz
cmp
sahf
iret
sbb
mul
cs
mov
cwde
or
jmp
pop
popa
es
cmc
mov
in
and
sub
mov
mov
idiv
inc
cdq
or
jbe
fidivr
inc
fdiv
cmp
xchg
push
fidivr
fild
sahf
sub
xchg
sub
inc
loopne
(bad)
inc
out
leave
call
jge
push
fidivr
out
lods
inc
in
arpl
mov
push
add
xlat
inc
test
fdiv
dec
pop
imul
test
mov
adc
pop
loope
movs
push
or
in
in
mov
adc
outs
inc
mov
sti
test
push
clc
pop
sub
out
ins
cmp
pop
mov
mov
fs
loope
or
push
out
sti
and
mov
loope
and
test
jl
fsubr
pop
scas
mov
or
add
jge
push
fidivr
lock
mov
test
fiadd
fidiv
clc
dec
or
in
fidiv
test
inc
daa
mov
fiadd
mov
ins
(bad)
loop
in
loope
movs
pop
mov
lahf
addr16
or
and
xor
xor
inc
stos
cmps
outs
fstp
pop
imul
(bad)
pop
mov
push
jmp
fwait
stos
xchg
sahf
cld
aad
aad
(bad)
scas
ja
push
iret
jmp
test
mov
hlt
outs
push
xor
retf
dec
mov
dec
ret
xor
sbb
inc
mov
cdq
shl
and
xor
jge
bsf
pushf
mov
aaa
push
call
fwait
popf
rol
push
enter
adc
mov
and
cmc
jmp
cmp
das
mov
bswap
cmp
pop
cmp
lock
pop
xchg
inc
je
mov
dec
ret
pop
pop
aaa
stos
dec
jo
pop
xor
fcom
lods
push
xchg
sbb
jno
push
inc
aam
je
out
(bad)
jmp
pop
adc
arpl
inc
push
ret
push
push
jp
loopne
sbb
mov
ins
push
xchg
jmp
movs
movs
push
push
lahf
fadd
bound
fmul
adc
std
mov
pusha
and
mov
cmc
sbb
pusha
in
pop
and
push
pushf
push
dec
jmp
call
clc
cmc
xor
bound
and
xchg
enter
mov
repnz
stos
test
out
mov
mov
stc
cmp
imul
mov
cs
sub
clc
push
loopne
pop
and
and
and
dec
inc
mov
cmp
out
test
lods
in
(bad)
gs
loopne
inc
inc
sti
stc
mov
or
jmp
ret
aas
or
jns
or
inc
sub
inc
clc
rcr
add
push
xchg
dec
adc
xlat
js
fs
das
dec
adc
dec
test
jnp
pop
sbb
ins
push
aam
js
mov
mov
mov
movs
sbb
enter
mov
push
adc
retf
dec
dec
sbb
push
jecxz
test
fcmovne
xchg
iret
mov
cmp
dec
jg
and
in
mov
je
cs
int3
push
repz
mov
cmc
inc
inc
add
loopne
mov
push
xchg
jg
and
retf
adc
adc
mov
retf
pusha
jbe
mov
cmc
sbb
bound
or
push
hlt
sub
ins
or
test
ficomp
sub
mov
sbb
pop
push
cmp
cmp
pop
fcomp
dec
cli
test
dec
sub
sbb
mov
push
jmp
imul
repnz
retf
push
jg
or
pop
mov
mov
jne
in
fnstcw
(bad)
fisub
xor
mov
mov
add
loop
dec
(bad)
push
push
daa
sahf
pop
inc
cmc
ins
push
test
xchg
pop
fmul
pop
je
jnp
(bad)
mov
add
call
xlat
sub
mov
and
mov
and
pop
mov
pop
xlat
jbe
jle
mov
xchg
xchg
daa
(bad)
mov
sub
retf
std
mov
call
cmc
repz
jge
pop
mov
mov
int
rcl
mov
mov
int
ins
mov
mov
sbb
cmp
sbb
ins
mov
fsubr
mov
ss
ss
(bad)
in
add
mov
add
fdiv
or
mov
sahf
push
gs
repz
add
and
imul
push
add
sbb
or
arpl
adc
and
hlt
push
xchg
aaa
push
or
inc
fbstp
mov
sub
cmp
jp
xlat
cwde
add
lods
out
lock
clc
xlat
cmc
fist
xor
rcr
pop
dec
sbb
add
xchg
xor
jno
in
je
int3
ror
jae
(bad)
xchg
jns
je
cmp
inc
pop
xchg
scas
cmp
stos
push
inc
mov
push
mov
cwde
scas
std
rol
sub
sbb
shr
xor
ds
jl
adc
push
pop
and
cwde
dec
mov
out
mov
outs
retf
add
inc
sub
push
imul
inc
dec
div
jmp
jle
stos
ficomp
add
adc
scas
sbb
add
dec
hlt
push
pop
out
xchg
fisttp
pop
(bad)
dec
pop
cli
addr16
std
push
ds
mov
push
cmps
aas
inc
mov
bound
mov
xchg
aad
sbb
sub
sub
pop
pop
or
cmps
fimul
pop
(bad)
jns
push
inc
xchg
sti
push
push
pop
shl
sub
mov
fnsave
pop
rol
inc
mov
mov
jmp
ins
jns
and
sub
sub
in
mov
popf
(bad)
and
inc
sbb
or
fcom
enter
(bad)
fdivr
fcomp
iret
test
ins
xor
jno
jp
(bad)
mov
adc
xor
fwait
popa
sub
test
(bad)
and
arpl
and
mov
adc
adc
sbb
jbe
fnsave
and
xor
test
mov
sbb
loop
inc
fsub
push
repz
mov
inc
inc
jg
pop
ds
dec
loopne
sub
xchg
adc
imul
mov
sub
adc
push
in
fisttp
mov
fnstsw
or
sbb
stos
adc
rcr
popf
ror
aam
aam
mov
jg
sbb
dec
enter
sbb
xlat
xchg
inc
xor
in
jg
push
aas
loopne
xor
cmp
nop
xor
push
sub
cmps
push
adc
push
xchg
sti
push
in
fucomi
and
mov
jnp
xchg
into
pushf
imul
add
aaa
jg
mov
mov
push
cmps
mov
add
loopne
dec
mov
addr16
(bad)
lea
cmpxchg
imul
jns
dec
add
in
sbb
mov
mov
rcr
scas
adc
sti
xchg
sahf
push
test
inc
das
mov
iret
mov
in
test
in
xor
in
fnsave
and
ja
ds
inc
(bad)
lock
jnp
pop
jae
xstore-rng
cmps
inc
les
js
lahf
loop
mov
cmps
adc
retf
mov
or
mov
mov
hlt
cmp
aad
not
mov
sub
enter
sahf
jle
repz
lods
or
sbb
fdiv
mov
sub
add
in
idiv
xor
push
pop
out
mov
push
xchg
xchg
lds
js
jae
and
sub
jne
lock
sub
lock
push
jo
repnz
mov
jb
stos
cmp
sbb
nop
movs
mov
pop
inc
cdq
rol
jmp
dec
xlat
pop
add
mov
sub
xchg
cmp
lea
shl
jl
xchg
cmp
(bad)
jnp
xor
fsub
mov
sub
ss
sbb
lods
nop
add
sbb
jae
push
xor
cs
test
jnp
movs
push
loopne
mov
pop
add
inc
sbb
push
jno
push
mov
xor
mov
sahf
lock
push
inc
arpl
(bad)
xor
jecxz
(bad)
call
sbb
mov
add
adc
in
and
cld
and
jl
ds
inc
dec
jae
mov
push
xchg
push
gs
mov
mov
hlt
push
test
aad
out
imul
cmc
dec
pop
imul
dec
push
(bad)
pop
in
mov
lea
stos
int3
push
iret
or
adc
in
jp
jo
jg
push
jb
sar
movs
add
add
ret
xchg
jecxz
mov
adc
inc
out
mov
or
jl
jns
jl
test
inc
mov
jmp
in
cmp
std
pop
fdivr
jno
sub
je
fxch
popf
or
sub
mov
idiv
pop
cmp
push
jb
leave
mov
or
pop
inc
call
xor
mov
mov
es
xchg
jmp
xor
cmp
inc
add
sub
push
rcr
dec
sub
and
push
pop
xor
ror
js
sbb
lods
mov
gs
and
pop
mov
loopne
inc
in
fisub
mov
mov
in
xor
fldcw
pop
pop
dec
mov
ret
add
aaa
stc
inc
dec
retf
mov
loop
adc
call
pop
and
inc
mov
out
call
pushf
ja
dec
in
add
xor
inc
add
in
cmp
shr
dec
mov
cmc
hlt
push
dec
push
cs
icebp
(bad)
sub
mov
(bad)
jle
pop
push
or
sub
mov
inc
js
dec
outs
(bad)
fdivr
mov
adc
xchg
sub
fild
mov
xchg
(bad)
lea
xlat
ins
pop
or
fcom
dec
(bad)
jmp
stos
dec
push
push
inc
or
cmp
rcr
jns
loopne
xchg
or
mov
stos
pop
mov
(bad)
pop
push
pop
mov
inc
ret
dec
jne
imul
dec
test
mov
dec
pop
pop
cmps
test
ret
inc
xor
xchg
ret
xchg
addr16
in
mov
jno
inc
mov
inc
inc
jecxz
stos
xor
js
ret
dec
push
test
xchg
sbb
xchg
in
pop
xchg
outs
xchg
movs
or
(bad)
js
mov
dec
adc
call
pop
push
mov
out
inc
xchg
mov
sbb
pop
mov
push
out
in
repz
aad
shr
cld
cmp
add
jo
push
xchg
mov
fdivr
repnz
add
adc
sub
xchg
pop
dec
sbb
adc
adc
stos
xor
mov
jbe
test
mov
jl
sbb
clc
retf
sahf
lock
xchg
adc
push
and
(bad)
jmp
mov
mov
pop
push
mov
xlat
add
jp
leave
pop
xor
lods
jecxz
sbb
mov
xchg
pop
xor
mov
sti
jmp
loop
mov
xlat
es
lahf
outs
retf
pop
(bad)
xor
mov
bound
mov
and
push
(bad)
in
pop
(bad)
xor
cmp
adc
mov
push
movs
push
dec
cmc
cmps
shl
jg
push
inc
push
loope
repz
sub
(bad)
repz
sbb
fdivr
les
daa
and
mov
pop
fucom
add
inc
mov
retf
push
inc
push
ror
jmp
cmps
test
fdiv
xchg
scas
call
pop
dec
imul
or
out
aaa
xor
jl
je
cmp
loopne
test
dec
mul
jecxz
(bad)
pusha
aaa
mov
pop
jae
in
and
push
mov
pop
add
(bad)
dec
mov
push
imul
mov
popa
dec
stc
push
jb
xlat
aam
test
sbb
(bad)
inc
add
push
fwait
call
xchg
lahf
mov
ds
add
jp
jmp
fcomp
scas
out
(bad)
cwde
pop
add
int
lahf
iret
mov
fcom
lock
ins
xchg
cmp
sbb
arpl
pushf
ret
fs
retf
push
add
in
cli
in
stos
pushf
sahf
dec
ret
out
mov
mov
out
in
cmp
or
mov
or
jns
push
adc
inc
call
sti
cmps
jmp
(bad)
jae
sbb
sbb
xchg
rol
and
shl
inc
jl
leave
repnz
mov
dec
mov
sahf
out
jge
adc
sbb
push
int3
push
pop
dec
fwait
mov
sbb
push
ret
stos
cmp
ja
stos
mov
add
sub
pop
(bad)
daa
cmps
push
add
adc
aad
call
inc
retf
add
ret
add
outs
pop
mov
add
jo
jmp
pop
ins
mov
test
dec
adc
lock
jns
adc
(bad)
pop
pop
or
mov
cmps
rol
add
ss
stos
sar
pop
test
sub
mov
xchg
sbb
aas
adc
arpl
loop
add
add
pop
or
inc
mov
aad
add
stos
push
pop
and
loopne
scas
xor
icebp
jg
pop
hlt
loopne
std
nop
jge
mov
cmp
jo
mov
push
outs
movs
sub
das
push
lock
arpl
icebp
stc
ins
pop
jae
sbb
test
(bad)
xlat
popa
xchg
cmp
movs
fst
mov
add
inc
cmp
rcr
or
mov
xchg
pop
inc
je
mov
or
retf
movs
push
inc
in
into
push
int
retf
pusha
dec
stos
cld
cdq
jnp
cmp
call
push
mov
lods
add
cmc
push
lods
call
push
arpl
jmp
inc
xchg
or
aas
xchg
sub
dec
inc
cwde
and
add
repnz
xlat
mov
lods
jmp
push
cmp
xchg
cli
and
(bad)
aam
jne
xchg
(bad)
mov
daa
push
xchg
jo
adc
fadd
aad
cmc
or
inc
mov
loopne
ficom
sub
mov
stos
sub
ret
jl
pop
xor
mov
lds
sbb
addr16
into
xor
mov
jg
push
xor
iret
mov
jmp
aas
xlat
push
ret
scas
sbb
cmp
icebp
add
popf
jmp
push
in
jo
xor
outs
xor
repz
es
movs
fs
gs
adc
cld
call
(bad)
(bad)
enter
jns
(bad)
inc
sbb
or
jns
mul
mov
mov
in
ss
dec
push
mov
mov
mov
aaa
pop
gs
sahf
loopne
inc
(bad)
aad
(bad)
aad
inc
jl
mov
dec
call
and
(bad)
daa
call
mov
mov
xor
mov
push
(bad)
cdq
push
test
in
sub
mov
push
movs
mov
fsub
inc
sub
leave
rcl
loopne
pop
inc
pop
adc
or
and
jl
les
cmp
adc
inc
cmp
add
(bad)
iret
push
add
sbb
mov
test
sbb
cmp
xchg
mov
scas
xchg
(bad)
dec
mov
inc
push
and
cmps
mov
repnz
jne
out
xor
jmp
int
mov
push
adc
loope
xchg
add
mov
and
imul
lods
jae
test
push
das
adc
sbb
mov
pop
int3
mov
in
cwde
push
repz
ror
and
in
je
jle
mov
or
mov
dec
or
and
xor
out
cs
imul
test
ds
push
into
push
adc
push
sub
pop
sbb
xor
lods
dec
pop
pop
clc
xchg
mov
(bad)
stc
sub
cmps
pop
pusha
adc
fidiv
or
lods
xchg
cmp
scas
rcl
mov
add
jge
sti
push
in
ds
xor
(bad)
or
popa
dec
lods
fsin
inc
das
rcr
push
retf
adc
imul
jmp
aad
jge
movs
push
test
(bad)
les
sub
sub
push
lods
jmp
clc
dec
js
mov
pop
mov
jbe
test
sbb
iret
cdq
in
dec
(bad)
out
jb
inc
inc
push
jg
enter
clc
rol
in
jecxz
add
xchg
jbe
(bad)
jns
mov
imul
adc
cmp
push
mov
and
dec
pop
push
(bad)
cmps
adc
push
cmp
out
or
cmp
cmp
sahf
lods
(bad)
xor
xlat
dec
jle
lea
pop
frstor
addr16
add
scas
jge
jo
xor
push
cld
sti
cmp
jbe
sub
in
sub
jmp
dec
dec
iret
lock
push
and
fmul
in
push
test
sbb
fprem
shl
repz
outs
out
in
gs
add
rcr
retf
xchg
pop
mov
jmp
sbb
inc
cmp
cmp
jno
mov
and
lods
xor
out
pushf
ins
(bad)
jnp
xor
repnz
and
lods
cmc
adc
push
out
in
sbb
sub
cmp
int3
out
push
mov
loopne
xchg
jmp
ficomp
sbb
popa
xor
dec
xchg
(bad)
cmp
pusha
ror
movs
call
adc
push
sahf
ds
sbb
imul
(bad)
out
mov
popa
div
sbb
(bad)
jg
movs
pop
fs
sub
mov
cmp
fcomp
xor
hlt
and
call
sub
push
std
cwde
cli
and
outs
lds
mov
mov
sbb
push
(bad)
int3
jnp
or
push
ja
cli
in
fs
dec
xchg
arpl
fisub
xchg
ins
(bad)
icebp
stos
fwait
out
jle
jns
loopne
inc
jns
rcr
inc
int
inc
or
sbb
mov
cmp
xchg
mov
push
ds
adc
dec
jbe
push
loopne
cmp
add
xor
sbb
daa
outs
push
adc
adc
stc
inc
add
in
or
add
adc
fbstp
mov
lods
nop
(bad)
dec
loopne
aas
jno
xchg
mov
out
test
dec
popf
xchg
gs
push
inc
inc
xchg
xchg
adc
pop
xchg
jl
push
mov
xchg
mov
(bad)
fstp
push
(bad)
fsub
push
push
push
mov
in
push
aam
jle
cmc
and
imul
add
gs
scas
or
out
inc
push
sub
nop
jmp
iret
ja
adc
(bad)
xchg
add
sub
xchg
call
jp
movs
ret
sbb
scas
pushf
das
shr
rcr
test
or
mov
jge
and
pop
pop
into
inc
repnz
cwde
movs
xlat
fidivr
mov
ja
pop
mov
cmc
test
adc
call
das
(bad)
into
frstor
pop
jp
pop
scas
mov
push
or
and
and
pop
lods
push
add
mov
jb
cs
and
adc
ret
aas
dec
push
dec
in
jp
and
shl
jl
shl
push
std
(bad)
mov
jl
test
imul
xchg
iret
dec
movs
retf
push
sub
sbb
fcom
or
cmps
lds
ins
inc
enter
xor
call
clc
and
movs
sub
add
(bad)
fwait
sbb
adc
shl
xor
jle
scas
into
jbe
js
or
shl
ja
repz
jp
imul
ins
pop
aad
cmp
push
(bad)
mov
jne
xor
add
fisub
mov
add
fs
pop
mov
sub
dec
out
in
add
fstp
xlat
mov
cmp
das
clc
jg
mov
inc
aad
add
cwde
mov
mov
fs
push
hlt
cmp
push
les
ret
inc
sbb
mov
imul
xor
test
rcl
hlt
mov
adc
jge
cmp
mov
not
data16
add
test
mov
push
fadd
clc
out
lods
lods
cld
jmp
bound
cvttps2pi
inc
push
aam
idiv
or
mov
lods
sbb
jno
loop
mov
mov
call
int3
and
je
sbb
xchg
jp
cwde
lods
call
jnp
push
loopne
mov
sub
ret
mov
cli
mov
mov
cmp
std
sub
call
stos
loopne
pushf
jns
in
shl
fcomp
hlt
pushf
into
cmc
jnp
xchg
mov
fidivr
stos
or
mov
aaa
ret
or
sbb
jg
jmp
imul
rcr
fs
and
test
sbb
sbb
push
adc
lea
jge
jge
sbb
iret
mov
lods
mov
fs
xor
sahf
jne
inc
push
xchg
ficom
adc
sub
push
in
add
mov
push
outs
xor
call
rcr
aaa
mov
xor
call
scas
sub
enter
repz
sub
das
test
repz
push
push
in
test
mov
cmp
adc
aam
adc
sbb
out
push
lods
push
adc
(bad)
fdivrp
push
adc
in
xchg
jl
mov
mov
hlt
cs
xchg
mov
mov
and
fs
data16
jbe
in
int
or
and
stc
pushf
(bad)
cli
dec
mov
xor
lods
les
rol
dec
loop
jmp
fbld
dec
mov
rol
je
xchg
enter
fcom
push
jbe
inc
inc
lds
add
mov
inc
jne
inc
xchg
(bad)
ja
pop
push
pop
jo
fnstcw
aaa
in
ficom
shl
nop
ss
jnp
push
add
push
sub
mov
pop
mov
stos
sub
xchg
call
fdivr
ss
(bad)
iret
lods
pop
aas
(bad)
mov
mov
int3
xchg
mov
shl
cs
xchg
push
je
push
jno
leave
repz
jmp
out
test
inc
sub
mov
ins
pop
fmul
mov
call
or
adc
sbb
leave
xchg
stos
ja
mov
sub
out
fdivp
lods
push
sbb
ins
cmp
ret
jp
mov
xchg
mov
jmp
mov
and
dec
popf
imul
mov
xor
inc
aaa
ja
fs
mov
xchg
mov
dec
mov
or
fdivr
jae
punpckldq
adc
mov
inc
or
jmp
outs
cmp
xchg
in
cmp
es
shr
jecxz
(bad)
jecxz
cmp
pop
add
jno
test
int
daa
mov
jp
in
rol
fs
nop
push
in
mov
test
test
mov
cmps
loop
shr
lods
cmp
aaa
in
push
push
push
outs
xlat
call
mov
daa
jno
lock
or
and
xchg
sub
lea
jl
dec
test
stc
mov
jne
imul
mov
imul
cld
dec
js
shr
sbb
cmp
push
cli
jb
ror
add
pusha
icebp
mov
retf
push
btr
imul
movs
push
test
push
in
aas
pop
imul
xor
jl
pop
fscale
ror
push
fld
or
and
adc
out
loopne
mov
mov
dec
nop
test
pop
retf
cld
lahf
int3
div
cdq
dec
pop
je
dec
xchg
fstp
jmp
je
test
ins
mov
jbe
adc
ss
stos
adc
lds
in
jae
adc
shr
ds
ret
jae
dec
mov
dec
and
outs
icebp
push
ficomp
outs
mov
xor
sbb
lahf
(bad)
push
xor
jnp
clc
add
leave
jmp
or
jbe
add
mov
mov
and
movs
push
push
jb
or
pop
xchg
inc
adc
icebp
push
or
ja
mov
or
les
imul
and
rcr
inc
ja
pop
lea
(bad)
bts
stos
jmp
addr16
or
cmps
sub
adc
mov
mov
xchg
cmp
cmps
cld
call
dec
sub
out
and
push
je
xchg
call
adc
clc
and
xchg
dec
std
nop
pop
(bad)
and
mov
ds
inc
xor
movs
sar
rol
bound
call
fnstsw
in
das
(bad)
sub
ret
pusha
push
cwde
xor
sub
cli
cmps
fwait
jne
shl
jnp
test
idiv
xlat
xchg
leave
sub
pop
(bad)
and
pop
stos
adc
fld
fcom
shl
popf
js
pushf
sahf
mov
xor
push
les
adc
mov
rcl
je
popa
ins
es
dec
pop
sub
sub
pushf
mov
js
mov
rcr
das
pop
ja
shl
inc
pop
push
mov
xchg
(bad)
ja
leave
fidivr
or
mov
add
shl
fistp
xchg
xchg
xchg
lds
and
push
repnz
mov
int
stos
repnz
push
push
mov
add
sbb
push
(bad)
cmp
(bad)
int
dec
sbb
or
or
shl
mov
cdq
add
mov
mov
test
push
xor
(bad)
ins
mov
(bad)
pop
test
and
adc
lods
outs
fwait
jecxz
pop
push
xor
xchg
cmp
xchg
daa
or
jg
mov
(bad)
out
dec
jg
cmp
test
in
stc
test
movs
mov
in
fs
neg
sbb
ins
jle
push
push
push
pushf
rdtsc
xchg
sub
pusha
and
sbb
fdivrp
sub
fsub
pop
fcom
ror
mov
cmc
pop
sub
int3
arpl
jb
or
ret
mov
cmp
ss
sbb
idiv
mov
push
daa
or
mov
ror
xchg
jmp
lahf
out
ins
pop
pop
inc
jmp
shl
test
mov
mov
mov
out
stos
cmp
mov
(bad)
sub
adc
jle
lds
(bad)
sti
mov
mov
push
scas
dec
call
dec
pusha
ins
rcl
out
jmp
fiadd
ficomp
stc
sbb
push
dec
push
inc
in
sub
in
hlt
cmp
xlat
inc
fild
sub
scas
xchg
(bad)
jnp
push
and
ret
stos
inc
pop
fwait
stos
xor
stos
add
adc
mov
out
fisub
jp
cmps
mov
dec
out
mov
xchg
lods
js
iret
jae
dec
mov
cmp
adc
add
fbstp
mov
mov
loopne
push
and
inc
inc
cli
push
and
shl
inc
jmp
popf
je
cmp
push
add
fst
xchg
adc
call
pop
jle
push
mov
sbb
sub
scas
push
mov
xchg
lods
(bad)
dec
rcl
test
dec
inc
les
push
inc
inc
fisubr
das
leave
test
pusha
jns
dec
ret
add
xor
and
lods
cli
xlat
push
fisttp
xchg
xor
(bad)
sbb
ret
ror
je
jmp
add
push
cmp
ja
push
push
xchg
sbb
(bad)
mov
mov
add
inc
add
cmps
bound
sub
stos
lods
add
pop
shl
dec
sti
pop
pop
xchg
sbb
retf
sbb
pop
mov
cmp
lea
push
cmps
(bad)
cmp
or
jge
inc
fsub
icebp
inc
mov
repnz
fidiv
xchg
stos
cmps
dec
mov
sbb
(bad)
sbb
pop
mov
js
aam
ds
mov
dec
dec
test
mov
xlat
sub
push
adc
mov
and
sti
cmp
jo
and
inc
inc
xlat
sahf
pop
xchg
pop
daa
or
jno
inc
pop
mov
jle
(bad)
cmps
add
fild
retf
xchg
push
xchg
adc
xchg
dec
pop
test
pop
test
scas
xchg
adc
imul
cdq
je
xor
call
inc
fsub
leave
movs
into
lea
xchg
cli
aas
sub
sbb
push
or
retf
dec
scas
dec
std
mov
jle
sub
sub
shl
stos
imul
and
push
(bad)
aam
and
cli
out
out
jbe
mov
mov
mov
je
adc
inc
cmps
aad
in
xchg
loope
or
ins
and
into
xchg
stos
cmp
fdivr
ficomp
add
movs
mov
ja
cmp
xlat
out
scas
and
or
(bad)
jecxz
adc
mov
xor
inc
jo
jg
pop
pop
pop
jnp
jns
xchg
mov
neg
stos
cs
data16
enter
int3
sub
pmaxsw
sub
jecxz
add
xchg
xor
std
sti
ja
rcl
jns
jns
mov
test
rcr
jne
not
and
dec
std
jg
mov
xchg
mov
popa
test
xchg
mov
adc
cli
and
arpl
ficomp
and
or
(bad)
scas
sub
dec
add
stos
loopne
inc
inc
fidiv
cmp
fdiv
inc
sbb
data16
jbe
push
mov
xlat
pop
mov
pop
in
xor
jl
cmc
push
ds
and
add
das
lahf
test
ds
push
xor
sub
scas
pop
outs
daa
sbb
mov
int3
xlat
repnz
fsubr
xchg
std
mov
cwde
popf
sbb
cli
aas
pop
neg
mov
dec
sbb
test
stos
xchg
ins
or
sub
hlt
pop
pop
retf
movs
sbb
int3
mov
lods
imul
(bad)
into
call
inc
mov
jbe
dec
xor
das
adc
push
push
mov
push
and
mov
inc
inc
jne
dec
mov
lock
cs
(bad)
std
mov
add
dec
imul
inc
and
sbb
push
scas
mov
mov
xor
stos
push
inc
pop
pop
sub
pop
jmp
cs
mov
xor
jb
or
bound
pop
inc
stos
sbb
adc
sahf
bound
in
mov
fdiv
sub
and
inc
popf
js
clc
add
inc
jg
mov
inc
push
(bad)
test
inc
sahf
inc
sahf
inc
test
sub
xchg
push
dec
cmps
and
repz
cmp
inc
movs
call
sub
std
inc
mov
inc
fidivr
stos
call
cdq
push
or
repnz
lods
xor
lods
sbb
jne
jb
ins
jns
dec
in
pop
iret
jnp
cmp
push
test
dec
scas
xchg
mov
adc
mov
pop
jl
ins
or
pushf
out
clc
fwait
and
gs
(bad)
dec
iret
popa
jge
cmp
ja
adc
cmp
jl
lahf
pop
inc
outs
outs
jg
sahf
pusha
or
sbb
jg
shl
mov
pusha
gs
mov
outs
mov
or
inc
inc
push
call
inc
sub
dec
cmps
shl
jo
stos
jl
lock
adc
inc
xchg
or
push
dec
iret
mov
and
cdq
jb
or
in
scas
mov
test
ror
test
test
enter
mov
pop
cmp
das
movs
lods
adc
lea
js
push
enter
lods
pop
(bad)
fcom
push
cld
fwait
sub
mov
lahf
lea
push
sti
lahf
(bad)
sbb
dec
into
mov
mov
data16
jecxz
daa
rcr
lods
cmp
sub
(bad)
ficom
and
pop
adc
inc
loope
cld
je
pop
mov
xor
ret
jl
cmp
int3
cmp
jl
outs
ret
pop
int3
cmps
(bad)
push
ja
jge
mov
jecxz
repz
jo
fs
jg
rep
popf
loop
out
push
mov
mov
fs
add
stc
sbb
mov
xchg
mov
adc
push
jns
test
cmp
jnp
fstp
jae
jmp
enter
inc
jmp
int
push
repz
inc
cmp
(bad)
aam
mov
lds
ret
sub
ret
nop
and
cli
sbb
and
(bad)
xor
push
inc
and
pop
cs
popw
push
imul
sub
add
pop
mov
ret
cmp
pop
pushf
cdq
dec
mov
pusha
test
add
inc
sub
(bad)
shr
mov
sbb
loope
test
and
xchg
adc
pop
jmp
push
inc
mov
dec
mov
mov
mov
mov
xor
push
test
inc
in
adc
cmps
cs
outs
adc
out
ror
and
call
cs
sbb
mov
jns
aaa
sub
dec
dec
push
lock
sar
in
stc
cdq
shr
lods
jg
mov
mov
test
cmp
arpl
aad
adc
dec
xchg
or
dec
inc
jge
imul
lea
leave
into
mov
neg
push
sub
pop
jle
dec
std
and
sbb
out
xor
js
push
and
xchg
inc
jle
push
xchg
rcl
(bad)
ss
lds
sbb
sub
(bad)
adc
(bad)
and
xchg
fwait
neg
std
lods
(bad)
jb
imul
mov
cs
adc
retf
cmp
pop
imul
jecxz
add
scas
call
retf
or
aam
pop
out
mov
adc
outs
aas
loopne
out
in
or
rcl
pop
or
or
mov
sub
loopne
nop
lods
and
(bad)
mov
test
dec
sub
addr16
or
dec
cmps
xchg
jg
jg
push
jecxz
fsub
jecxz
es
outs
dec
pop
arpl
jbe
cdq
push
hlt
mov
jb
adc
cmps
es
mov
aas
mov
enter
enter
cdq
inc
jg
jmp
mov
xchg
inc
test
fstp
hlt
ss
shrd
jge
jge
jne
push
dec
mov
mov
fdivr
and
mov
movs
cwde
push
push
lods
or
dec
(bad)
adc
or
xchg
add
inc
inc
push
mov
xor
cdq
dec
xchg
jl
xor
xchg
push
adc
jecxz
pushf
inc
popa
in
push
cmps
inc
xchg
push
pop
jne
repnz
popa
in
xchg
out
das
lods
xor
adc
cmc
cmp
jl
rol
mov
push
leave
cdq
jb
xchg
pop
inc
iret
das
add
mov
es
mov
jl
(bad)
int3
dec
jno
call
pop
cdq
push
jns
add
ror
rol
je
xor
test
mov
xchg
repnz
cdq
push
jns
ret
inc
sub
add
pop
pop
repz
inc
cli
fs
xor
out
movs
xor
jmp
int3
and
ds
cli
repz
shl
dec
dec
cmp
fwait
scas
pop
inc
rcr
mov
mov
(bad)
fbstp
test
sbb
jecxz
rcr
xchg
cmps
xchg
test
mov
pop
pop
sbb
jnp
xor
and
mov
data16
fldenv
xor
mov
mov
aaa
gs
push
rcr
mov
in
divps
sbb
sub
bnd
(bad)
fwait
loope
sbb
xor
jae
cmc
pop
cmps
push
not
pop
sub
sbb
xor
dec
dec
adc
pop
or
mov
std
mul
jno
pop
xchg
mov
in
lock
dec
cmps
jne
xchg
pusha
cmp
pop
mov
pop
outs
xor
repnz
mov
xor
mov
and
and
lds
xlat
or
push
std
push
clc
mov
shr
sub
std
aaa
das
push
sahf
add
pop
neg
lods
mov
into
mov
push
add
aas
adc
mov
test
ja
push
push
mov
inc
mov
fs
xor
leave
lock
jle
daa
pop
cmp
test
push
push
jle
xor
cmp
es
xchg
frstor
xor
pushf
cwde
nop
mov
sub
arpl
push
mov
cld
hlt
xchg
in
or
dec
add
jp
push
shr
push
(bad)
inc
shld
sub
sti
jne
adc
(bad)
push
call
mov
int
mov
call
mov
or
mov
call
jmp
and
adc
push
lods
push
push
test
sbb
ja
lock
xor
add
fwait
out
push
or
ins
mov
mov
out
jmp
cmp
push
push
pop
and
sar
xlat
adc
inc
sbb
(bad)
lock
push
jmp
mov
test
je
cmp
pushf
imul
jnp
ss
push
lock
in
je
fsub
test
lods
aad
sbb
fs
xchg
sub
sbb
pop
cld
cmp
xlat
in
xchg
xchg
es
fsubr
push
add
jle
mov
add
pop
hlt
xor
mov
in
mov
into
lea
mov
rcl
ror
xchg
dec
sahf
adc
setae
inc
mov
addr16
adc
movs
jg
pushf
(bad)
clc
xchg
mov
mov
jb
and
out
fdivr
repz
mov
in
imul
(bad)
jl
dec
cdq
xchg
frstor
loopne
add
icebp
xlat
jb
xchg
add
xlat
test
jmp
js
mov
fiadd
arpl
std
out
or
mov
jge
pop
fidiv
lock
in
mov
movs
mov
movs
sbb
cmp
sbb
jno
out
or
push
(bad)
pop
addr16
inc
dec
and
sbb
mov
ficom
cmps
call
sbb
outs
test
mov
push
add
(bad)
jg
stos
or
aam
cli
(bad)
jg
and
popf
arpl
xor
push
div
loop
mov
xchg
aaa
imul
cld
dec
push
push
pop
ret
adc
outs
fs
push
mov
add
push
out
pop
and
outs
rcr
imul
fwait
or
pop
jns
test
call
aaa
test
dec
fcom
xor
xchg
mov
mov
scas
and
dec
push
push
jge
dec
cmp
shl
dec
jl
and
inc
repnz
fisubr
jbe
lds
xchg
inc
mov
nop
sbb
jb
or
cmp
fldenv
hlt
mov
xchg
pop
pop
mov
in
into
adc
out
(bad)
in
jb
fwait
add
enter
adc
cmp
rcr
imul
in
pop
lea
loop
movs
leave
jle
das
dec
pop
loope
sub
retf
add
jle
jne
les
test
lock
inc
fimul
popa
add
or
mov
sub
and
fcmovne
pop
in
jne
ins
push
(bad)
ss
ins
jns
pop
out
(bad)
pushf
fisttp
mov
lods
adc
mov
lahf
mov
jg
cld
aam
icebp
cmp
int
sub
jle
call
or
adc
dec
or
test
in
xchg
ds
aad
and
movs
popf
rol
or
mov
lods
jnp
int
or
xchg
mov
pusha
mov
inc
and
xchg
add
stos
sahf
mov
or
adc
xchg
mov
adc
inc
pop
dec
inc
xor
mov
fnsave
dec
dec
xchg
test
add
inc
leave
or
and
inc
adc
mov
lods
out
fstp
les
test
mov
idiv
out
mov
rcr
xor
cmps
sbb
push
jl
mov
add
repnz
test
aam
pop
clc
jl
mov
cmps
lods
in
(bad)
jge
call
xor
xor
aam
push
pop
lods
je
and
dec
aam
push
ret
shr
in
and
xor
das
mov
push
loope
add
mov
int3
es
cmp
je
sahf
jmp
sar
fidiv
add
jmp
pop
scas
or
xor
int
lea
je
pop
mov
retf
shr
cwde
stc
rcl
fistp
push
mov
ror
inc
pop
mov
loop
sbb
cmc
mov
add
bswap
add
push
lods
div
jle
cmp
push
jae
jp
add
pop
and
mov
loop
fwait
push
mov
cdq
dec
xor
rcl
jmp
jno
sub
test
inc
test
mov
pop
xchg
jecxz
inc
cmp
jmp
call
and
mov
sbb
inc
cmp
cmp
ret
js
cdq
cmp
or
in
dec
mov
cs
mov
mov
popf
or
mov
popf
(bad)
jmp
xor
lods
cwde
push
fcmove
xchg
pop
inc
inc
sbb
(bad)
mov
loop
mov
mov
dec
test
retf
inc
add
and
jno
pop
pop
test
hlt
pop
lock
xor
jne
add
fwait
mov
jo
inc
jmp
retf
scas
lock
rcl
scas
rcr
xor
jp
add
rol
(bad)
fsubr
dec
cs
out
pop
or
int
int3
mov
rcl
cmps
pop
leave
dec
(bad)
aas
sbb
sar
(bad)
mov
and
js
ret
sub
adc
dec
adc
or
outs
mov
repnz
and
mov
movs
ins
push
jl
cmp
imul
mov
add
dec
pop
aam
inc
aas
jns
aas
in
jo
in
addr16
inc
hlt
nop
push
cdq
sub
lods
sti
mov
adc
pop
pop
sub
sbb
sbb
jg
jno
and
mov
xor
aas
std
ret
stos
or
loopne
pop
mov
cmc
(bad)
ds
fs
and
mov
jnp
push
in
loope
push
mov
dec
push
je
ror
(bad)
lock
push
sbb
popf
add
xchg
in
dec
sub
jno
call
xor
in
or
aam
pop
nop
dec
mov
outs
popa
daa
and
push
mov
cmovs
mov
and
scas
inc
inc
leave
pop
ss
sub
out
mov
out
fmul
fsubr
das
movntq
test
dec
or
idiv
mov
lock
jno
es
std
sti
lock
clc
retf
inc
int3
nop
dec
lods
add
out
jl
adc
std
cs
lods
inc
mov
hlt
mov
sti
add
aam
pop
lods
clc
ins
pop
and
sub
push
aam
lods
dec
(bad)
or
lahf
fs
cld
and
mov
adc
imul
push
inc
jmp
or
sub
mov
inc
jle
scas
push
push
pop
in
xlat
imul
(bad)
shr
mov
out
jp
aas
add
mov
jl
pop
pop
stc
xchg
xor
retf
mov
xchg
jecxz
jb
sbb
test
xchg
mov
(bad)
mov
lea
popa
and
lahf
mul
add
pop
shr
jecxz
adc
daa
mov
jne
outs
mov
and
int
sub
jbe
cld
stos
stos
loop
fnsave
test
ins
sbb
mov
pop
in
mov
cmps
sbb
or
jge
push
stc
popa
add
adc
push
stos
xchg
rol
pop
stos
jmp
inc
daa
cmc
pop
push
fbstp
and
pop
xor
out
xchg
pop
xor
(bad)
mov
ficomp
data16
je
mov
(bad)
rcl
dec
mov
sub
lea
scas
mov
and
(bad)
sahf
cmp
sbb
ins
jecxz
loop
scas
jecxz
out
adc
iretw
sbb
aam
jge
inc
xlat
and
inc
jns
imul
push
push
lds
sbb
loopne
pop
jg
sti
mov
fld
fistp
test
ja
dec
xor
fistp
and
out
sbb
icebp
dec
pop
imul
mov
mov
aad
int
sbb
mov
sbb
leave
stos
sbb
jnp
cwde
xchg
add
(bad)
gs
daa
and
sub
push
pop
mov
or
jg
or
mov
and
jmp
mov
lock
xor
dec
repz
call
pop
popf
cli
xchg
mov
loopne
mov
(bad)
popf
stc
pop
leave
in
cld
ja
repnz
ret
sti
push
int3
dec
pop
push
outs
cmp
outs
fs
mov
test
mov
inc
shl
inc
hlt
or
dec
push
pop
sub
imul
or
ja
out
sbb
stc
test
jbe
mov
clc
outs
enter
pop
std
adc
jge
std
loope
pop
repz
cld
movs
cmc
sti
(bad)
xchg
les
jmp
jmp
cld
push
in
sub
jmp
push
cmp
xor
pop
and
add
(bad)
mov
sub
cmp
mov
mov
add
ins
push
pusha
and
stos
sar
jmp
(bad)
pop
push
(bad)
push
fist
scas
pop
frstor
mov
or
lods
scas
adc
dec
xchg
aam
rcl
out
aas
push
push
or
push
jbe
or
iret
push
sub
jne
ins
mov
in
cld
das
call
enter
cwde
scas
scas
ss
mov
mov
das
repz
xchg
(bad)
icebp
and
fnstcw
inc
pop
fcmovne
in
mov
inc
ss
add
mov
nop
stc
pusha
fmul
lods
lods
out
imul
jl
mov
mov
retf
xchg
ins
popa
popa
mov
pop
pop
sub
add
repnz
ins
inc
call
mov
fbstp
stos
jge
jge
dec
in
pop
int
adc
daa
pop
lods
xchg
mov
icebp
movs
div
in
lods
pop
mov
push
sbb
jg
out
jl
adc
cmp
mov
shl
imul
imul
mov
cmp
jne
gs
icebp
nop
fild
cmps
jnp
(bad)
lock
enter
fs
hlt
xor
pop
scas
shl
aad
xchg
xlat
adc
mov
(bad)
jge
mov
push
xor
mov
icebp
sub
bound
pop
mov
ins
adc
xchg
(bad)
call
(bad)
or
sub
mov
fwait
inc
fimul
ret
cmp
inc
fimul
mov
mov
ds
pop
sub
mov
pop
ds
aas
cmps
not
inc
fild
in
cmps
scas
fmul
adc
and
mov
jmp
add
scas
es
pop
jmp
sbb
(bad)
mov
inc
mov
sar
pop
jno
loop
pop
push
sub
mov
jmp
icebp
sbb
fisttp
lods
ret
mov
shr
in
jns
push
cmp
mov
iret
(bad)
test
std
test
or
cs
leave
mov
(bad)
ss
in
mov
stos
pop
fs
pop
scas
push
inc
jecxz
jg
stos
ret
lea
jne
pop
pop
xor
xchg
xchg
mov
adc
ficom
ficom
push
adc
stc
push
jne
cmps
les
adc
pushf
mov
inc
lds
in
push
shr
and
hlt
inc
int
mov
fbld
aas
(bad)
push
mov
push
idiv
stos
out
inc
mov
repz
add
iret
jnp
gs
(bad)
sti
fs
or
xlat
mov
pop
jmp
lock
test
out
pop
mov
popf
push
fsubr
pop
add
mov
lds
in
pop
pop
xchg
inc
call
shl
sbb
xchg
movs
unpckhps
out
dec
sub
and
movs
shl
jne
in
push
call
idiv
arpl
or
aad
ret
int
inc
ins
mov
push
mov
add
and
aas
dec
mov
and
xor
xlat
jbe
push
inc
pop
in
sbb
mov
xor
inc
idiv
loope
inc
dec
mov
dec
mov
aam
xchg
mov
fnstsw
jb
ds
mov
cmp
mov
clc
mov
mov
push
(bad)
popa
out
or
popa
xor
sbb
pop
neg
aam
sub
out
mov
pop
nop
mov
aad
sbb
sub
jmp
xlat
outs
mov
jge
xlat
rcr
data16
jecxz
or
adc
in
scas
shl
out
add
mov
push
fstp
mov
repz
inc
inc
(bad)
aad
push
mov
dec
or
shl
outs
neg
cmp
mov
ss
outs
adc
mov
cmps
test
out
and
xor
pop
xchg
push
call
shl
rcr
cmps
in
mov
mov
loope
inc
mov
sbb
popf
addr16
cmp
popf
arpl
repz
push
mov
leave
es
in
dec
test
ret
xlat
repnz
cmp
(bad)
or
mov
dec
adc
ins
jmp
cmps
mov
lea
lods
jmp
mov
xchg
jno
push
jo
lahf
jae
push
sahf
ret
push
ins
push
sbb
pop
ds
sub
ja
in
lahf
fsub
sub
sbb
xchg
aas
xchg
loope
js
gs
sbb
loope
mov
add
xchg
mov
adc
pop
loopne
cmp
in
jmp
xchg
test
inc
jmp
js
(bad)
and
cdq
mov
push
mov
jo
dec
pop
jge
dec
dec
and
pop
xchg
retf
imul
in
add
in
mov
les
jmp
jb
push
jne
pop
mov
adc
cmp
cmp
je
scas
stc
cli
mov
and
(bad)
cmp
loop
ss
inc
into
aas
dec
jo
mov
gs
pop
lds
ss
rol
mov
mov
cs
pop
aas
mov
and
sub
ds
(bad)
pop
inc
fnstsw
hlt
and
sbb
sahf
icebp
mov
mov
int3
mov
dec
jns
je
mov
test
in
mov
cli
arpl
cmps
lods
lds
or
add
es
cmc
inc
adc
pusha
je
mov
iret
scas
inc
dec
enter
loope
pop
inc
clc
pop
mov
mov
mov
jbe
sar
cmp
push
addr16
mov
xchg
ret
mov
xchg
pop
mov
add
mov
test
int
dec
xor
xlat
push
mov
xchg
xor
pusha
xor
add
outs
test
das
ror
cmp
test
call
xlat
jne
arpl
stos
(bad)
imul
rcl
jmp
cmp
pop
xor
ror
xor
pop
push
inc
loopne
icebp
mov
jmp
add
icebp
push
xchg
dec
dec
ds
out
cmp
jge
aas
push
mov
mov
ret
loopne
adc
cli
mov
addr16
fsub
mov
and
psubq
rcr
mov
loope
pop
jb
sub
leave
mov
inc
mov
ret
cld
pop
mov
leave
jnp
lea
lods
(bad)
mov
out
cmps
(bad)
jnp
das
stos
push
movs
sub
popa
(bad)
arpl
call
adc
inc
loop
dec
jmp
xor
xor
iret
(bad)
popa
pop
das
cmp
sub
mov
arpl
ins
int3
add
pop
aaa
pop
jecxz
mov
xor
outs
in
fisubr
mov
shl
mov
xchg
int3
sar
push
add
push
xor
retf
stos
shr
sbb
cwde
push
push
mov
push
mov
push
xchg
push
rol
cmp
inc
in
push
inc
ret
adc
cmp
xchg
inc
cmc
pop
add
hlt
stos
or
add
and
adc
sub
mov
xchg
mov
pop
mov
xchg
inc
cld
ret
inc
out
add
repnz
rcl
bt
push
leave
movs
outs
mov
mov
fist
add
cmc
fisub
int
dec
add
sti
pop
inc
mov
sbb
dec
out
pop
sub
test
jg
xor
push
xor
outs
test
xlat
fdivr
repnz
cmp
xor
mov
outs
(bad)
sub
dec
mov
fdivr
imul
add
rcr
push
(bad)
scas
add
mov
imul
out
call
mov
dec
lds
int3
xchg
cmps
in
push
mov
add
xchg
getsec
lods
and
test
mov
pop
sbb
out
xor
repnz
cmp
icebp
mov
xor
dec
xchg
mov
fidiv
std
mov
mov
xchg
movs
push
push
push
jae
cmp
mov
or
xchg
sbb
jge
mov
scas
rol
and
push
xor
loop
inc
inc
in
jl
xor
sbb
lods
repnz
xchg
(bad)
fwait
ds
shr
mov
mov
div
and
call
inc
sahf
das
ja
inc
inc
pop
popf
cmps
jmp
adc
fisubr
mov
mov
retf
cmp
ror
fs
movs
mov
inc
leave
scas
lods
push
test
pop
scas
lods
sub
mov
fwait
xchg
or
dec
ss
vrsqrtps
mov
xor
pop
ror
jno
mov
cmp
cwde
inc
loopne
push
(bad)
cmp
cmp
xchg
in
jmp
add
cmp
les
cs
je
cmc
or
push
dec
lds
mov
add
jo
push
mov
sbb
aad
xlat
scas
sub
mov
dec
push
push
pop
xchg
add
outs
mov
or
out
dec
push
in
mov
push
outs
xor
leave
outs
daa
mov
pop
jp
pop
or
inc
lock
loope
mov
sub
das
mov
dec
int3
repz
mov
dec
mov
stos
push
cld
inc
aaa
dec
push
jmp
sbb
(bad)
push
mov
xor
stos
fidivr
addr16
mov
les
fild
sub
popa
xchg
in
mov
not
fdivr
fcomp
cmp
mov
popf
adc
cmc
and
and
sahf
jnp
ds
jne
push
and
xor
pop
xor
bound
mov
hlt
ins
mov
data16
and
push
jbe
sub
rol
push
sbb
pop
sub
movs
cmp
cmc
sub
mov
pop
cmps
lock
sbb
xchg
sub
push
fs
cld
data16
aas
push
and
xchg
pop
and
mov
div
int3
mov
mov
push
or
adc
sub
std
jbe
cmps
mov
inc
imul
cdq
pop
sub
bnd
xor
jg
push
mov
repnz
jg
add
fisttp
cmc
push
cmp
cmp
mov
cli
pop
xchg
xchg
sub
pusha
icebp
loop
push
(bad)
out
or
daa
pinsrw
sbb
xor
mov
push
cmp
stos
push
test
add
xor
xchg
push
retf
stos
mov
(bad)
rol
gs
ja
mov
stc
dec
ja
sti
xor
mov
test
add
jno
rcr
sub
ins
push
scas
stc
sbb
pop
push
js
hlt
inc
(bad)
fcomp
das
into
pop
das
push
pop
retf
inc
mov
repnz
addr16
jmp
or
sahf
pusha
inc
(bad)
xchg
adc
out
mov
pop
inc
rol
push
push
test
xchg
mov
int
sbb
not
out
xor
jl
(bad)
fstp
sbb
jg
sbb
sahf
xor
(bad)
xor
fdiv
enter
clc
pop
mov
and
popa
loop
pop
lods
retf
mov
push
or
push
push
sub
fistp
imul
cmps
in
cmp
pop
out
push
(bad)
jmp
jmp
out
mov
out
std
sbb
retf
in
push
lea
add
in
out
push
push
in
xchg
xor
sub
(bad)
std
addr16
(bad)
mov
test
out
pop
hlt
pusha
jmp
cmp
jge
es
sbb
(bad)
and
push
jnp
out
je
push
stos
mov
lods
lock
pop
(bad)
out
xor
test
push
mov
xor
fld
pusha
cmps
adc
mov
xlat
das
mov
or
adc
pop
push
loop
mov
and
(bad)
push
jno
cli
fsub
scas
loope
xchg
xor
cdq
or
mov
jns
pop
jl
scas
pushf
jb
jbe
aam
cmp
(bad)
and
xchg
sub
xlat
inc
out
nop
push
in
push
and
jae
inc
mov
adc
inc
mov
mov
out
and
xchg
retf
fist
pop
leave
int3
out
inc
ja
dec
mov
dec
cmp
mov
popa
xchg
cmp
jmp
out
push
push
mov
fistp
inc
lods
xchg
or
push
xchg
in
cmp
pushf
inc
ss
fs
imul
cmc
ffreep
idiv
pop
push
mov
pop
mov
std
jecxz
fwait
retf
push
stos
mov
sub
xor
or
push
jge
cdq
jge
xor
shr
les
iret
xor
jmp
mov
mov
sar
not
add
or
call
nop
lock
push
mov
jmp
or
mul
sub
mov
pop
cmp
ficom
jg
push
sub
ficom
and
ret
cmp
fsubr
cmc
aad
neg
jb
mov
xchg
icebp
xchg
sar
gs
retf
out
out
cli
push
inc
fistp
sar
retf
mul
ror
(bad)
fist
add
jle
xchg
pop
sub
clc
xchg
ret
pop
ss
imul
inc
mov
movs
stc
in
sbb
fnsave
mov
xchg
cmp
push
mov
mov
jnp
test
pop
sub
stos
int3
cwde
scas
les
pop
iret
cmps
iret
aaa
or
dec
jmp
jg
or
and
clc
out
fstp
stc
(bad)
push
sub
pop
sbb
sub
outs
add
imul
jne
inc
dec
std
sbb
dec
mov
call
shl
popa
mov
push
ror
inc
js
or
sub
sbb
fdivr
push
std
std
xor
enter
int3
sbb
outs
aad
and
ret
aam
fsub
stos
ja
add
das
sub
aam
xor
lock
dec
or
stos
outs
push
fmul
cmp
retf
(bad)
mov
add
call
push
ror
or
push
addr16
retf
daa
inc
inc
outs
inc
sbb
stc
hlt
iret
icebp
clc
or
push
shl
xor
into
mov
retf
popa
push
sub
jle
out
adc
call
cmp
std
and
jg
out
mov
test
jb
and
aad
daa
dec
sbb
cli
das
mov
iret
cmps
and
je
inc
shl
mov
and
scas
enter
loopne
push
inc
imul
sub
and
out
aam
dec
ret
scas
push
js
xchg
and
cdq
cmps
pop
stc
into
sub
movs
push
ss
std
pop
inc
nop
bound
jle
pushf
xor
out
jns
cmp
(bad)
sti
pop
ins
aaa
jmp
test
jne
mov
es
xor
rcl
push
out
iret
loop
push
cmp
(bad)
scas
jb
mov
jmp
xchg
sub
and
adc
or
lods
aad
call
cmps
mov
in
jmp
inc
mov
lods
pop
push
icebp
push
mov
xchg
fcmovne
in
test
loopne
repnz
std
div
adc
and
sbb
aaa
cmp
cs
cmps
shl
repnz
mov
lock
inc
scas
icebp
pop
clc
pop
loope
xor
cmps
mov
pop
jno
das
mov
dec
outs
ret
(bad)
jmp
and
scas
sub
xor
mov
clc
jmp
mov
outs
fwait
pop
or
mov
scas
(bad)
sbb
icebp
mov
sbb
mov
pop
scas
mov
js
daa
mov
and
out
lahf
(bad)
je
sbb
xchg
lds
pop
rcr
sub
pop
arpl
sub
test
imul
out
mov
das
jge
out
arpl
mov
imul
xchg
or
ins
into
mov
fidivr
xor
pop
cmps
lea
repz
mov
repz
inc
int3
and
xlat
mov
test
pop
mov
int3
jno
sti
mov
das
cwde
add
daa
stos
test
add
shl
xor
loopne
movs
mov
rcr
pusha
outs
cdq
bound
jmp
mov
cmp
push
ds
xchg
jmp
jb
mov
mov
std
cmc
mov
in
out
lds
adc
cmps
cmp
dec
ja
mov
iret
add
xor
jg
fcomp
fcom
or
xchg
adc
ret
xchg
sub
jmp
xchg
sub
xor
jno
xchg
push
test
pop
cmp
xchg
imul
mov
aad
push
lahf
hlt
loopne
and
lea
je
xchg
xor
retf
fcmovnu
cs
retfw
imul
bound
ror
arpl
ss
mov
push
out
dec
out
movs
or
mov
adc
nop
sar
lock
fiadd
(bad)
sbb
pop
jg
ds
push
xor
icebp
lds
es
cwde
sbb
ja
cmps
(bad)
sub
jbe
push
mov
fwait
out
push
mov
xchg
pop
cli
cmps
lock
fisub
rcr
test
in
jle
jne
outs
outs
jmp
mov
push
icebp
jns
fwait
mov
(bad)
ds
scas
sub
inc
test
fbstp
repnz
mov
call
xchg
ins
xchg
push
sub
or
loopne
add
cmp
enter
mov
repz
jmp
push
call
push
cld
lods
ret
mov
outs
or
jne
inc
xchg
mov
je
mov
inc
pop
xchg
dec
ror
shl
sub
or
push
xor
xor
mov
mov
loope
add
pushf
adc
jp
dec
movs
or
sbb
pop
pop
or
ret
push
fadd
mov
fs
scas
ja
cs
mov
push
fimul
mov
jbe
cmp
neg
neg
hlt
xchg
inc
cmps
xchg
mov
sbb
int
cdq
outs
jne
xchg
out
adc
les
and
mov
pop
cmp
mov
or
ds
arpl
stos
test
cmp
mov
cmp
fcomp
ins
nop
lods
mov
push
cmp
adc
retf
xchg
and
fcomp
ror
jge
in
test
or
and
pop
mov
sbb
pop
mov
push
mov
jg
sbb
pop
jmp
and
ins
bswap
pusha
loop
sbb
inc
pushf
xor
stc
fbld
(bad)
add
inc
outs
test
push
fistp
cmp
pushf
push
lea
fwait
test
jmp
push
mov
inc
mov
inc
mov
mov
or
pop
and
mov
ret
rcr
jmp
xor
mov
jbe
xlat
enter
xchg
cmp
mov
jge
pop
xor
sub
dec
and
mov
es
cmp
sub
(bad)
push
out
cmp
rcl
cmp
cmps
ret
int3
jbe
adc
xchg
jae
sbb
xchg
mov
add
in
ins
lods
out
sub
je
es
cmp
jbe
or
xor
adc
and
(bad)
mov
nop
xchg
dec
or
(bad)
lods
shl
jle
out
sbb
sbb
(bad)
fist
mov
and
aad
mov
sub
call
sti
aam
push
out
inc
inc
add
pop
xor
push
push
imul
push
sbb
jmp
int3
or
jns
test
mov
push
dec
cdq
jecxz
lea
test
sub
push
cdq
das
retf
ror
or
outs
retf
mov
mov
mov
sub
sub
addr16
xchg
xchg
add
mov
sub
rol
pop
fisubr
shr
jg
xchg
(bad)
jle
in
retf
repnz
mov
das
push
out
daa
and
mov
xchg
out
fistp
pop
test
(bad)
shl
hlt
sub
cmp
xor
call
call
test
es
or
call
adc
mov
rol
call
or
mov
or
(bad)
jmp
mul
and
call
(bad)
mov
mov
mov
mov
lea
ret
clc
pop
sti
add
ins
cmps
cmp
and
stc
(bad)
mov
(bad)
dec
clc
nop
push
pop
out
loopne
loop
mov
pop
add
mov
sub
sahf
enter
arpl
arpl
push
dec
mov
jg
push
xor
gs
mov
clc
inc
jb
mov
pop
dec
mov
shl
bound
inc
lods
or
sub
xor
push
mov
out
es
inc
pop
rol
lock
popf
dec
inc
pop
std
cmp
pushf
shr
cld
mov
clc
inc
cmp
xchg
lahf
movs
push
int
call
mov
jae
jmp
cdq
ds
(bad)
cmp
in
pop
rcr
imul
popw
pop
jae
inc
add
mov
imul
hlt
pop
inc
rcr
lds
jecxz
cdq
test
add
movs
mov
lock
mov
push
rol
aaa
scas
add
imul
inc
and
or
jbe
mov
test
imul
stos
movs
adc
shr
fimul
or
mov
mov
imul
adc
into
in
fistp
jp
shl
pop
sub
xor
retf
test
sub
retf
fisub
es
push
inc
adc
in
push
(bad)
push
ins
inc
add
or
jp
fs
push
lahf
adc
xor
sub
dec
shr
jg
xchg
mov
push
push
push
popf
enter
(bad)
repnz
mov
mov
xor
popf
and
jns
inc
cli
inc
jge
rcl
push
add
mov
lea
aas
jl
std
jne
push
push
mov
and
arpl
je
mov
nop
pop
dec
jg
or
mov
icebp
sub
retf
addr16
push
movs
mov
sar
xchg
push
sar
popa
ds
loop
clc
lds
das
jle
lea
or
das
in
inc
push
mov
or
scas
pop
push
cmp
(bad)
outs
dec
call
and
ins
sahf
das
sbb
sti
xor
inc
adc
adc
popa
fcmovnbe
mov
rcl
inc
sub
cmc
push
dec
scas
push
xchg
push
stos
(bad)
(bad)
outs
inc
jo
mov
(bad)
scas
fild
jo
jmp
std
sar
inc
scas
cmp
mov
out
jle
in
mul
sub
xor
mov
jmp
jmp
push
or
mov
test
dec
cmp
call
xor
int3
pmulhuw
icebp
mov
pop
adc
call
movs
call
out
cmp
mov
mov
push
shr
dec
adc
push
inc
push
and
pop
enter
retf
lock
(bad)
jnp
ud2
sar
cwde
add
jns
fld
fst
pop
xor
push
jo
test
fistp
stos
fcmovne
popa
ins
push
xchg
fistp
sub
pop
gs
iret
jge
movs
push
fwait
enter
jl
shr
push
add
sbb
fwait
movs
xchg
lea
push
dec
push
xor
mov
aad
inc
xor
hlt
sbb
xchg
mov
add
pop
dec
sub
sub
jmp
inc
push
pop
les
in
cmp
cwde
lods
outs
fwait
xor
call
jl
fild
sahf
inc
(bad)
retf
dec
(bad)
ds
and
inc
xlat
mov
or
scas
fucomip
ins
or
enter
adc
push
ins
mov
call
ror
mov
sub
or
xor
or
fwait
pop
add
push
cli
push
(bad)
push
mov
popa
sub
sub
pop
mov
add
nop
mov
add
xor
in
jg
cld
(bad)
and
sahf
aam
call
nop
adc
out
mov
sbb
mov
push
jbe
mov
pop
out
dec
outs
jno
jle
fldcw
mov
fsub
std
mov
xchg
(bad)
ins
dec
cmc
ja
imul
popa
fwait
aam
gs
fcomp
fdiv
loopne
ficom
mov
into
rcr
daa
call
jb
mov
stos
rol
lods
jmp
sub
scas
sar
sub
test
xor
fwait
es
es
pushf
nop
push
fsubr
add
cmp
jnp
dec
cmp
out
in
or
cmp
xchg
adc
movs
sub
cmp
nop
fs
pop
repz
push
(bad)
(bad)
stos
sti
(bad)
push
cmp
cmp
les
loope
sti
and
fs
dec
dec
pop
rol
xchg
and
push
pop
xchg
adc
sbb
shl
retf
pop
(bad)
aam
icebp
mov
cmc
(bad)
pop
stos
das
cmp
ds
jae
mov
fisttp
and
xlat
cmps
nop
sbb
push
jle
int
inc
mov
mov
mov
inc
movs
repnz
push
psubw
mov
mov
xchg
pop
push
rcr
add
fisub
mov
add
(bad)
or
outs
xor
cmp
add
popa
aas
and
xchg
call
mov
stc
jmp
es
jp
lea
ror
sub
xor
and
or
and
add
retf
pop
cdq
sbb
dec
sub
xchg
sub
inc
loopne
retf
or
xor
cmp
adc
loopne
pop
push
sub
and
lea
pushf
retf
retf
jmp
dec
jp
mov
pop
mov
add
mov
jb
out
shl
lock
cmp
aad
cld
adc
and
push
dec
push
movs
(bad)
adc
mov
push
sub
enter
mov
add
push
cs
int
int3
dec
out
shr
add
outs
pushw
pop
jno
daa
mov
cmp
jmp
mov
dec
sub
sbb
adc
add
inc
int3
xchg
jb
gs
scas
test
nop
dec
ficomp
pop
sahf
sbb
loopne
test
imul
fdivr
fs
xchg
jge
push
fidiv
add
jle
jo
xor
retf
clc
dec
xor
mov
add
ins
je
jno
daa
jo
inc
add
fs
xlat
inc
xchg
sbb
jge
push
inc
xor
mov
fwait
or
jae
adc
sbb
jo
jmp
into
add
mov
mov
inc
xor
dec
mov
sub
sbb
pop
(bad)
xor
xchg
out
shr
add
scas
addr16
ss
(bad)
shr
add
pop
call
lahf
and
jbe
rcl
ret
and
repz
add
lahf
rcl
or
xor
(bad)
pop
mov
dec
add
inc
cdq
and
lock
mov
add
push
xchg
pop
jno
daa
mov
push
xchg
adc
fsubr
pop
scas
mov
or
mov
imul
out
xchg
mov
movs
xor
push
out
sbb
push
ficom
call
mov
xor
lock
and
mov
add
push
inc
outs
add
xchg
mov
adc
cmp
lahf
outs
aad
cmps
push
dec
das
mov
sbb
(bad)
inc
dec
or
sub
call
or
lock
dec
ficom
(bad)
mov
inc
rol
cmp
mov
mov
push
(bad)
mov
add
xchg
icebp
fcom
iret
mov
or
cmp
mov
bound
sti
out
add
cmp
sub
sub
push
mov
push
mov
pop
outs
iret
pop
cdq
xor
jae
jnp
fsub
cmp
push
ficomp
aaa
xchg
or
(bad)
addr16
dec
fld
jae
dec
es
mov
cmps
jmp
push
(bad)
mov
cmp
daa
cpuid
sub
mov
cmp
and
scas
jns
inc
les
test
movs
adc
cmp
jg
pop
popa
das
rol
xchg
add
and
ror
nop
mov
sub
mov
jbe
push
jo
and
push
inc
cmp
inc
daa
mov
arpl
lods
xor
push
sbb
stos
dec
mov
and
pop
mov
xor
mov
dec
(bad)
(bad)
cwde
inc
mov
scas
sti
cwde
stc
out
lea
sub
sub
(bad)
aam
retf
das
jbe
iret
aaa
xchg
cmc
adc
cli
in
dec
sar
jmp
push
cmps
icebp
xchg
mov
sti
les
arpl
sahf
inc
add
bound
push
mov
pop
jg
ss
pop
mov
jbe
or
jnp
daa
hlt
inc
push
push
pop
mov
fwait
div
and
add
mov
xchg
mov
fcmovnu
sar
and
adc
aad
neg
sti
mov
pop
and
cmp
adc
loop
bound
add
push
mov
adc
push
cmp
xor
add
mov
pop
fdivr
retf
nop
inc
xchg
in
je
cmp
adc
jo
int3
(bad)
sub
jecxz
in
push
sub
mov
rol
icebp
xchg
rcr
cmp
push
int3
clc
js
outs
in
mov
xchg
inc
repnz
ficomp
addr16
(bad)
xor
loopne
movs
mov
shl
add
or
call
or
test
add
sub
rol
dec
mov
popa
add
sbb
sbb
sbb
hlt
or
clc
and
mov
adc
dec
adc
popa
int3
dec
in
mov
mov
mov
stc
mov
inc
lods
mov
pop
push
out
not
lahf
sub
lods
inc
je
sbb
stos
xor
int
(bad)
xor
outs
lods
jo
push
nop
pop
test
mov
mov
ja
repz
stc
xor
in
jmp
call
xor
xchg
pop
xchg
sbb
lods
js
jl
sbb
mov
mov
jecxz
mov
out
lds
hlt
xchg
adc
and
add
call
add
dec
jae
fs
es
pop
xor
inc
into
dec
jg
test
jp
xor
or
or
mov
pop
lods
lds
dec
lds
je
jmp
cmp
pop
mov
iret
inc
cli
inc
ja
xchg
in
jo
fs
daa
xchg
rcl
mov
fsubr
sbb
aad
ja
xor
or
imul
mov
push
gs
(bad)
ficom
mul
sbb
sub
sti
xchg
mov
inc
out
lds
mov
mov
outs
add
sbb
(bad)
aad
sub
fdiv
retf
repnz
mov
das
jle
jbe
in
sub
gs
std
dec
test
adc
sbb
ret
stos
and
mov
fadd
repz
or
iret
int
(bad)
stc
inc
xchg
xchg
push
ret
and
aad
adc
mov
xor
jmp
test
jecxz
aad
push
xchg
sti
inc
pop
jo
stos
add
fadd
rol
repz
mov
out
(bad)
mov
pop
iret
jp
push
xlat
push
and
mov
jns
push
inc
mov
pop
loop
(bad)
mov
dec
add
jle
cld
js
mov
scas
int
sub
xchg
test
jmp
jl
mov
sub
inc
pop
jp
jg
movs
push
ins
mov
xchg
and
repz
lods
pushf
movs
xchg
pop
hlt
fcmovnb
and
ror
repz
cwde
cmps
int3
xchg
pop
(bad)
iret
das
aam
mov
push
mov
imul
ins
call
aam
out
movs
mov
rcr
(bad)
(bad)
mov
addr16
fimul
sbb
ins
retf
in
(bad)
xchg
adc
popf
cmp
dec
cld
inc
sbb
mov
cmps
lock
jp
cs
and
push
idiv
xor
adc
inc
sub
lock
rcr
mov
mov
sahf
cmp
jmp
fistp
test
mov
cmp
jnp
mov
repnz
push
cmp
(bad)
xchg
sub
inc
jmp
mov
js
push
add
adc
xchg
fstp
popa
push
cmp
lods
aaa
scas
adc
fnstsw
dec
push
bound
movs
push
ja
xor
out
xor
ret
fmul
fild
std
jb
jne
ss
(bad)
fwait
sub
leave
inc
test
jb
sbb
inc
fs
or
cmp
pop
rol
inc
add
dec
imul
retf
mov
or
inc
jbe
fs
cmp
nop
push
aaa
lea
pop
add
push
outs
inc
add
jecxz
and
add
mov
push
mov
xor
xchg
mov
stos
or
arpl
jns
adc
jmp
push
ror
xor
out
in
mov
daa
stos
xchg
pop
leave
push
jge
xchg
shl
arpl
dec
fild
retf
pop
push
addr16
outs
out
gs
fist
jbe
out
adc
and
sbb
jmp
xchg
cld
aaa
jl
sti
stc
and
je
popf
and
stos
fcmovb
add
mov
fild
ja
jae
sub
fnstcw
inc
push
pusha
mov
data16
int3
bound
test
lea
aam
adc
ins
jp
out
loope
es
inc
ss
sub
pop
mov
mov
iret
fs
int
movs
sub
aad
les
and
add
into
push
dec
ins
push
daa
inc
dec
rcl
jae
cmp
mov
sub
aam
inc
sbb
mov
pop
fs
retf
pop
lods
not
test
ins
sbb
sahf
in
aad
cs
mov
in
test
sub
pop
enter
jae
push
push
pop
mov
dec
jbe
ja
lock
xchg
dec
daa
popf
add
std
and
call
jnp
push
(bad)
inc
fimul
inc
sbb
dec
scas
sub
call
sub
clc
out
xchg
cmp
pop
fadd
cmp
sub
(bad)
shl
ins
mov
inc
ror
jne
bts
ins
jp
je
repz
cs
movs
mov
cs
sub
gs
jnp
jae
das
icebp
leave
ins
std
mov
inc
outs
cmps
cdq
ror
pop
(bad)
mov
pop
lea
adc
pop
push
addps
cwde
dec
jbe
into
icebp
int3
xchg
call
push
outs
dec
jecxz
push
and
out
mov
push
xchg
sub
lea
retf
mov
std
iret
cwde
rcl
lahf
data16
addr16
out
pop
data16
fldcw
retf
and
cmp
retf
aaa
in
jp
mov
jl
movups
pop
push
imul
jae
sbb
xchg
fimul
rol
inc
push
sub
lahf
(bad)
test
mov
mov
xlat
iret
cs
idiv
xchg
movs
mov
xchg
sbb
cwde
es
sub
push
frstor
inc
xchg
pop
jmp
jbe
mov
and
inc
movs
imul
sub
pop
(bad)
stos
push
ins
push
call
mov
fwait
cmp
out
hlt
or
add
push
test
jmp
(bad)
jbe
inc
in
cmps
cmp
dec
int3
sar
into
stos
(bad)
cld
icebp
imul
xor
cs
sbb
data16
clc
movs
mov
mov
pop
loope
div
shl
sub
mov
jmp
out
mov
outs
mov
xlat
ins
stos
test
xor
fsubr
mov
shl
cld
aam
sbb
(bad)
mov
pop
mov
call
enter
std
fiadd
cld
sbb
mov
or
jae
pop
xchg
loope
jge
jb
xlat
and
jnp
outs
out
cdq
dec
pop
lods
mov
cdq
shr
das
pop
mov
out
fild
stos
ja
mov
ror
div
out
imul
int3
sbb
dec
and
ja
(bad)
pop
xor
or
ins
out
in
cld
mov
aam
sub
pop
cli
xchg
mov
dec
enter
mov
imul
aam
(bad)
push
mov
(bad)
sub
fnstsw
outs
in
cmp
movs
sub
xor
jg
push
push
pop
les
lods
inc
dec
xlat
ins
xor
ds
out
pop
imul
or
mov
sahf
ret
push
clc
cmps
cli
int
mov
leave
icebp
pop
shr
and
cmps
inc
sti
lahf
jg
mov
and
lahf
mov
rol
div
jle
test
out
das
int3
mov
sub
or
sahf
mov
popa
pop
sbb
imul
sahf
cld
dec
xor
mov
add
lea
inc
mov
fwait
lds
loopne
xchg
mov
fst
inc
xor
lock
lods
mov
xchg
(bad)
(bad)
aaa
je
xchg
out
outs
pop
shl
ins
sbb
pop
or
ror
bound
movzx
iret
cmp
xchg
scas
clc
mov
jns
test
retf
pop
mov
fist
cli
mov
das
jae
dec
dec
loop
mov
sub
das
ficom
add
xor
outs
(bad)
dec
xlat
dec
and
inc
pop
out
sbb
pop
and
mov
pop
mov
(bad)
gs
iret
cwde
movs
stc
das
inc
out
adc
cmp
es
fcom
out
fs
je
mov
cmp
sub
push
mov
push
dec
mov
jns
sbb
cmp
dec
sbb
je
sar
push
or
mov
mov
mov
ss
into
mov
push
cmp
push
or
cmps
cmc
and
push
aad
lods
xor
(bad)
cld
cmp
outs
sbb
cli
push
sub
test
xchg
jb
(bad)
adc
sbb
repz
pop
in
push
sbb
jbe
sbb
push
xchg
dec
ret
jb
push
adc
mov
je
dec
mov
gs
loop
dec
lds
dec
(bad)
pop
loope
mov
pop
dec
pop
cs
dec
retf
add
in
pop
les
pop
and
pop
sbb
mov
lar
adc
adc
mov
and
jnp
xor
sbb
xchg
push
inc
test
sbb
sbb
sbb
sbb
push
and
inc
mov
sti
js
dec
sbb
push
mov
lahf
mov
stos
jnp
push
fcmovne
ins
push
jmp
(bad)
pop
jmp
fld
cli
xor
or
cmp
int
mov
mov
cdq
test
jae
xchg
pop
and
sbb
daa
movaps
test
addr16
sbb
in
mov
mov
push
xchg
loope
sub
call
pop
das
sar
ins
jo
test
in
push
in
fsubr
imul
shr
cmc
into
add
sbb
hlt
add
mov
(bad)
ins
ins
fwait
cmps
xchg
inc
call
xchg
add
mov
movs
test
lods
cmp
mov
sub
push
ins
push
cld
cmps
daa
test
add
adc
mov
sbb
js
clc
sub
repz
int
out
mov
inc
test
in
push
sub
pop
int3
xor
push
or
xchg
test
out
mov
dec
sbb
nop
gs
dec
retf
or
ret
push
or
ror
inc
dec
clc
xchg
shr
inc
aas
jno
push
dec
ins
cmc
pop
sbb
pop
pop
push
enter
fidiv
jp
leave
int3
cmp
dec
jne
sub
loopne
mov
lea
xlat
das
inc
mov
sbb
ins
(bad)
cmp
repnz
addr16
xor
(bad)
xchg
and
adc
dec
mov
push
int
pop
mov
ins
test
push
adc
and
push
popf
push
inc
jge
in
(bad)
outs
ja
mov
call
pushf
sbb
jg
push
cmp
mov
cmps
mov
scas
stc
pop
inc
adc
fld
xor
jb
(bad)
loop
test
lahf
jge
mov
cmp
sub
aaa
xchg
test
push
lahf
or
mov
cmp
xchg
adc
mov
retf
sbb
mov
push
pop
mov
and
mul
fiadd
pop
ja
and
sbb
cmp
xchg
icebp
scas
push
mov
xchg
mov
mov
call
xor
ja
mov
dec
scas
add
rol
xchg
adc
adc
(bad)
shr
jecxz
xchg
cs
jbe
leave
push
cmp
cdq
cmps
int
mov
adc
sbb
(bad)
sbb
xchg
lea
inc
cmp
mov
arpl
(bad)
fidivr
repz
ins
test
add
mov
imul
les
iret
mov
test
pop
pop
ret
push
mov
mov
lods
popa
cmps
and
dec
ret
jp
inc
jne
mov
loop
push
fsub
mov
scas
daa
mov
jmp
fisubr
xchg
imul
retf
test
or
ja
test
push
mov
sub
xchg
test
push
(bad)
mov
into
pop
pop
mov
mov
mov
shl
add
inc
dec
repnz
adc
sti
dec
sub
repnz
xor
sbb
cmp
out
test
(bad)
pop
pop
(bad)
std
jg
fidivr
and
mov
mov
iret
clc
xchg
nop
nop
loopne
pop
pop
pop
ins
ins
sar
sub
mov
fs
std
inc
sar
push
jnp
adc
add
jg
jno
shr
test
add
cwde
sub
popf
div
sti
cld
into
mov
mov
pop
mov
sub
std
fild
lock
retf
pop
jmp
jns
push
push
dec
adc
mov
scas
sub
movs
push
cmp
xor
mov
and
cmp
add
call
in
cdq
imul
mov
and
pop
mov
lock
loope
xor
retf
push
mov
mov
add
cmp
jbe
sub
imul
mov
js
aaa
pop
je
cmps
pop
sbb
into
or
mov
cdq
lods
pop
xchg
sbb
mov
mov
repnz
and
sub
mov
xchg
nop
fsubrp
sti
ins
and
mov
(bad)
movs
mov
sahf
loop
mov
outs
mov
sub
fimul
pop
mov
outs
std
adc
jp
and
pop
movs
into
push
sub
push
arpl
or
in
cdq
jno
(bad)
xchg
pop
aas
jp
data16
and
repz
enter
mov
dec
push
push
(bad)
mov
cmp
fisubr
test
and
into
cs
(bad)
pop
mov
jbe
outs
stc
fbld
xchg
jne
xlat
mov
in
push
or
repnz
xchg
jne
mov
cs
jmp
bound
neg
xor
stos
jle
lea
jp
inc
mov
xor
int3
dec
cmps
mov
push
or
mov
and
push
add
stos
in
stos
xlat
adc
xor
adc
mov
pop
test
sub
mov
gs
test
jge
in
push
xor
xchg
add
inc
xor
xchg
movs
inc
mov
or
push
cmp
shl
inc
in
es
shl
jmp
cs
pusha
dec
in
xchg
sub
lods
jecxz
scas
arpl
jle
fbld
cmp
mov
and
iret
pop
cmps
ins
and
adc
int
shr
xchg
fimul
mov
and
test
and
(bad)
lahf
nop
sub
sti
sbb
fadd
inc
mov
movs
in
xchg
sbb
sbb
fs
mov
add
repnz
popf
icebp
pop
int
push
outs
jbe
dec
(bad)
and
test
fidiv
add
add
or
imul
lock
popa
mov
clc
and
push
mov
jp
mov
mov
or
pop
pop
mov
xor
cmp
fwait
sbb
fdiv
or
ja
jb
xchg
test
jmp
iret
push
jae
rcr
test
xchg
mov
lahf
outs
daa
sbb
popa
sti
int
fdivr
or
or
add
or
sbb
xor
xor
dec
mov
popf
jae
cld
adc
test
add
add
cmp
jo
sar
pop
push
(bad)
or
outs
add
or
in
cmp
or
(bad)
xor
add
hlt
or
in
add
or
and
xchg
xor
push
jg
icebp
jnp
lds
sub
pop
xchg
mov
loop
(bad)
pop
pusha
push
sbb
xor
lahf
call
mov
pushf
in
and
test
das
jne
xchg
jb
aaa
cs
sbb
je
inc
daa
xor
and
push
xchg
inc
jne
mov
bound
pop
les
jg
adc
sub
push
dec
xchg
or
xchg
add
movs
rcl
bound
pushf
mov
pop
shl
mov
sub
test
pop
stos
imul
fstp
(bad)
adc
outs
imul
ja
ins
(bad)
dec
jecxz
mov
mov
add
pop
sub
sub
lock
(bad)
dec
in
push
adc
and
dec
scas
ins
clc
sbb
sub
adc
mov
ja
rol
movs
xchg
mov
push
push
xor
mov
add
frstor
dec
test
push
or
fld
dec
adc
ins
neg
xchg
ficomp
movs
add
adc
and
dec
scas
ins
clc
sbb
leave
mov
add
imul
cmp
clc
mov
push
push
or
and
push
xchg
scas
je
(bad)
mov
int3
inc
cld
adc
inc
cmp
jo
test
xchg
jl
lods
test
fcomp
(bad)
clc
sub
ret
rol
mov
and
cmp
mov
pop
cwde
push
sub
fist
sub
and
or
push
jp
(bad)
mov
lock
adc
lods
pop
inc
in
test
mov
xor
or
jecxz
push
fcmovne
jecxz
pop
mov
push
shr
sub
mov
xchg
in
xor
push
xor
(bad)
leave
xchg
das
jecxz
xchg
sbb
outs
push
push
pop
adc
or
pusha
mov
adc
pop
daa
sbb
xor
pop
loopne
loop
leave
adc
in
lea
mov
sub
iret
jl
stc
shl
push
cmp
aad
sbb
sbb
out
mov
or
jge
sar
and
xor
and
sbb
aas
int3
mov
or
hlt
jae
addr16
xchg
xchg
arpl
push
sbb
loope
in
push
je
ss
call
pop
fdivr
mov
mov
jb
push
and
into
lods
out
popa
je
jae
jecxz
pusha
xchg
push
bound
cmps
push
cdq
jns
shr
xor
or
mov
cwde
pop
pushf
mov
popa
call
aad
int3
push
in
adc
lods
dec
push
push
mov
pop
retf
mov
outs
mov
xchg
into
add
hlt
in
adc
popf
out
cld
loopne
dec
inc
xchg
mov
sbb
nop
out
pop
or
aas
jbe
and
or
add
mov
sbb
mov
aaa
jg
outs
lahf
adc
mov
pushf
xchg
xor
sbb
fwait
mov
or
test
xchg
or
inc
mov
mov
movs
dec
test
jmp
jge
xlat
pop
rol
fwait
call
xor
add
adc
neg
and
shl
mov
add
cli
push
aas
xor
sahf
mov
fimul
adc
sbb
das
int
fbstp
jnp
pusha
(bad)
rcr
fdiv
xchg
push
add
sbb
stos
icebp
ins
js
sub
xlat
std
push
cmc
push
xor
mov
adc
mov
(bad)
add
push
or
xor
sbb
mov
cli
mov
xchg
(bad)
fwait
stos
std
push
push
pop
sbb
fimul
push
inc
in
nop
xor
mov
rol
inc
cwde
sbb
rcl
mov
(bad)
stc
dec
popf
int
enter
mov
sbb
sub
pop
push
fs
mov
dec
(bad)
sbb
je
jne
push
cmp
addr16
mov
js
movs
shr
dec
push
inc
sub
and
mov
inc
and
or
aam
inc
xchg
adc
xchg
jno
or
in
lock
mov
mov
dec
or
popa
repnz
int3
mov
adc
jno
inc
mov
dec
sbb
iret
xor
sbb
mov
not
clc
neg
jbe
mov
movs
fsub
(bad)
inc
sbb
fnstcw
stos
repz
cs
pop
sub
or
nop
sti
mov
fld
push
popa
jmp
fisubr
aam
dec
mov
stc
icebp
dec
jle
or
imul
rol
adc
sbb
test
out
mov
frstor
fs
out
mov
sub
nop
test
xlat
adc
dec
repz
and
enter
(bad)
pop
and
lds
ss
sbb
adc
xor
xor
ds
imul
stc
mov
xchg
mov
in
mov
daa
push
out
bound
arpl
mov
push
mov
inc
xor
adc
adc
and
inc
cmp
or
scas
jmp
call
cmp
scas
not
jbe
lods
test
xchg
and
jns
ret
cmp
aaa
cmp
pusha
retf
push
pop
jg
push
push
mov
mov
pop
mov
sti
or
in
pusha
mov
in
push
xlat
xchg
dec
in
pop
mov
sahf
rcr
mov
cli
push
ds
je
xor
in
ret
in
nop
jae
sti
xchg
inc
mov
and
mov
mov
push
fnstenv
popf
push
out
inc
pop
jae
ja
adc
jl
fsubrp
dec
retf
daa
cmps
and
ins
mov
sbb
jg
lods
stos
jns
scas
sub
movs
xor
xlat
sub
pop
popf
mov
gs
aam
sub
pop
cwde
or
outs
mov
(bad)
aas
ficomp
(bad)
cli
test
xchg
pop
mov
rol
nop
pop
xor
call
repnz
repz
int3
ins
call
push
ins
xchg
jp
mov
or
xor
dec
sbb
repnz
push
fs
imul
test
jp
mov
pop
jo
or
retf
sub
bound
ins
inc
sub
cmc
jno
fwait
xchg
cmp
mov
(bad)
cld
mov
ret
(bad)
sti
or
ret
neg
cmp
push
xchg
jp
sub
imul
out
or
call
iret
sbb
mov
pop
lods
cmps
inc
(bad)
mov
push
inc
push
adc
xor
dec
rol
aad
loope
std
(bad)
cli
stc
push
cld
aas
push
fnsave
lea
adc
cwde
cmps
retf
and
pop
and
call
cs
sbb
or
jg
xor
js
rol
mov
xor
lods
stos
fimul
int3
or
repnz
cwde
call
xchg
mov
ins
xchg
les
push
out
ficomp
ins
in
sub
mov
mov
stos
xor
jle
xchg
ins
fisttp
stos
dec
sbb
out
lods
std
mov
mov
scas
or
(bad)
out
sub
adc
enter
inc
add
jb
repz
ds
or
dec
mov
std
repz
cmp
retf
imul
in
nop
outs
cld
es
inc
fistp
ds
(bad)
shl
jl
mov
jno
enter
je
mov
call
out
or
dec
clc
mov
sbb
popf
ss
jg
jg
sub
cmps
mov
imul
jo
xchg
sub
jmp
push
lds
lds
xchg
cmps
ret
lock
stos
std
mov
fstp
ss
out
test
push
ror
fidiv
xchg
or
add
loope
aas
pop
cdq
xchg
popf
cmp
pop
out
mov
js
daa
push
and
cmps
cmps
in
int
pop
add
bnd
pop
jp
push
push
dec
jns
scas
add
adc
push
xchg
push
mov
test
mov
jnp
cmp
adc
cmp
test
stos
xchg
add
inc
fisubr
(bad)
inc
movs
mov
jg
hlt
jle
jge
xor
dec
and
adc
not
push
mov
pushf
mov
(bad)
mov
je
mov
mov
cmp
sub
sub
push
stos
stos
(bad)
pop
push
iret
cwde
xor
lahf
in
out
aas
out
sub
les
inc
nop
scas
sbb
sub
mov
les
ret
stos
jecxz
mov
pop
dec
pop
je
jge
arpl
aad
shl
pop
push
(bad)
and
push
fwait
xor
mov
xchg
xor
loopne
sbb
(bad)
xchg
ss
mul
xor
jne
jbe
mov
out
mov
loopne
xor
sub
aad
jno
xor
imul
xchg
jmp
mov
mov
push
arpl
movs
stc
xchg
sub
outs
add
das
addr16
(bad)
pop
shl
mov
pop
call
mov
xchg
push
ret
xchg
in
cmps
outs
sub
push
push
(bad)
xchg
inc
sub
mov
mov
sbb
jbe
mov
je
and
jmp
jmp
in
test
call
sbb
repnz
add
(bad)
mov
out
out
in
sub
mov
(bad)
xchg
leave
xchg
xchg
test
out
jl
xchg
shr
sahf
dec
cmp
aaa
xchg
fiadd
(bad)
dec
scas
dec
jecxz
scas
aad
xchg
(bad)
xchg
pop
scas
enter
mov
std
push
fidivr
cmp
scas
aad
add
(bad)
iret
out
dec
dec
lods
loopne
pop
rol
pop
cmp
aaa
(bad)
hlt
dec
pandn
popa
inc
pusha
pop
sbb
push
repz
mov
inc
mov
(bad)
popa
adc
out
cmps
pop
cmp
add
jp
neg
ret
rdpmc
fst
cli
in
pop
hlt
daa
fcomp
add
xchg
sbb
mov
add
stos
mov
arpl
xchg
mov
xchg
iret
fdiv
pop
lea
ret
enter
pop
pop
pop
pop
mov
sub
mov
repz
aas
mov
jbe
call
push
inc
aam
push
dec
movs
xchg
push
sets
je
xchg
enter
push
mov
outs
push
cmp
jbe
nop
push
mov
mov
std
cmp
mov
cs
test
mov
fs
hlt
push
or
je
mov
pop
enter
idiv
movs
stos
out
lahf
arpl
cmps
cli
inc
shr
(bad)
xor
jecxz
call
fwait
in
psubsb
mov
outs
and
sti
popa
push
inc
pop
test
ja
loop
pop
popa
ss
sbb
mov
stos
aas
pushf
rol
mov
jl
xlat
cmp
cmp
dec
jbe
push
not
cmp
test
add
jno
fdivr
inc
lock
fwait
in
arpl
jmp
imul
push
rcr
gs
test
push
inc
cmp
fisub
shl
(bad)
xor
sti
(bad)
push
ins
cmps
lods
push
xchg
pop
cdq
sbb
repz
and
popa
hlt
inc
pop
ja
jae
ja
cs
xchg
push
mov
ds
mov
mov
dec
icebp
mov
(bad)
nop
ror
cmc
and
xchg
cmc
mov
or
test
retf
or
add
cli
je
test
and
ins
iret
xor
int
sbb
dec
cmps
jbe
int
aaa
je
add
dec
in
shr
dec
cmp
jp
xor
xchg
arpl
loop
rol
shl
ds
sar
lea
aas
mov
mov
mov
jl
popa
daa
dec
jb
fld
dec
test
pusha
jl
cs
push
scas
mov
and
and
sbb
retf
gs
std
pop
ins
adc
pop
mov
gs
shl
adc
popf
mov
popf
adc
lods
shr
fld
cmps
mov
rol
or
movs
retf
inc
movs
ds
xchg
cmp
mov
icebp
xor
mov
push
cs
push
push
shl
ss
jle
xor
sub
sub
cmp
(bad)
mov
adc
das
dec
lods
popa
cdq
mov
xchg
sub
mov
mov
mov
movs
jecxz
in
add
add
adc
retf
movs
(bad)
inc
xchg
cwde
inc
push
mov
and
rcr
cmp
out
cmp
pop
sub
inc
and
jne
pop
push
stos
imul
cmp
fiadd
cmc
jle
sbb
arpl
lds
mov
inc
pop
loopne
and
ins
nop
jne
adc
cmp
jnp
imul
mov
mov
dec
mov
aam
mov
inc
mov
aas
out
ja
call
jecxz
movs
jno
pop
fs
aad
loope
popf
sahf
cmc
mov
movs
aaa
lods
push
scas
shl
xchg
cmp
scas
pop
sbb
add
mov
mov
and
xor
and
imul
sub
je
push
dec
mov
add
sub
cdq
fist
inc
xchg
imul
pop
imul
fcomp
xchg
add
mov
or
neg
xor
stos
movs
pop
sbb
ror
stos
inc
cmp
ror
mov
punpckhwd
in
xchg
cs
cwde
xlat
lahf
shl
leave
aam
call
mov
test
push
or
out
push
add
fisubr
movs
and
mov
xlat
retf
xchg
jle
cmp
push
inc
nop
dec
ins
xor
push
push
xchg
stos
xor
mov
xor
scas
mov
inc
mov
inc
xchg
ret
out
or
sbb
mov
xchg
jbe
scas
push
stos
cmc
jns
aas
(bad)
push
(bad)
mov
inc
mov
inc
push
inc
xor
cmp
mov
sbb
mov
in
push
xor
repnz
icebp
popa
movs
sub
cmp
sub
in
push
pop
jmp
pop
or
cli
movs
enter
jle
lea
mov
pop
mov
push
fadd
test
push
not
jl
mov
clc
jecxz
jp
retf
cmovne
mov
in
mov
push
gs
inc
aas
mov
jecxz
xlat
daa
sbb
pop
lahf
movs
mov
aaa
movs
aam
or
outs
retf
mov
in
or
xchg
and
daa
and
cmc
ins
lahf
jb
cmps
add
lea
stc
es
mov
adc
jmp
dec
xor
gs
test
xchg
sub
call
adc
jecxz
and
sbb
jecxz
fwait
sbb
and
(bad)
cmps
add
xor
pop
xchg
pop
fnstsw
sub
mov
jo
add
sbb
or
stc
inc
dec
dec
xlat
repz
dec
mov
dec
jb
popa
pop
mov
mov
out
in
cmp
sub
iret
or
fnstsw
cmp
dec
push
ret
icebp
dec
dec
push
jle
pop
inc
push
add
mov
retf
cmp
shr
out
test
pushf
push
scas
popa
pop
pop
(bad)
fdivrp
and
in
lock
dec
dec
jne
popf
nop
sahf
(bad)
and
cwde
pop
rcr
jle
adc
cmp
sahf
imul
out
in
int
add
es
adc
mov
push
(bad)
cmp
out
mov
sbb
inc
xchg
enter
pop
sub
xor
mov
push
ss
test
(bad)
mov
mov
xor
loop
inc
cmp
sub
cmp
lea
in
jg
pop
xor
scas
cli
into
xor
cmp
or
sbb
mov
test
int3
or
jo
inc
push
loop
mov
gs
jecxz
test
imul
ds
ror
ja
popa
mov
inc
fcmovnbe
push
movs
sub
dec
dec
cmp
in
(bad)
jge
push
fld
test
inc
sar
jmp
paddq
fisttp
push
pop
push
jl
aaa
int
popf
xor
call
mov
pop
sub
cmp
call
popf
jecxz
mov
dec
inc
sub
lahf
mov
test
pop
xlat
inc
stc
(bad)
int
jmp
mov
ja
in
push
ffreep
adc
sahf
mov
jne
(bad)
pop
inc
sbb
pusha
inc
push
clc
add
push
cmp
lods
mov
sub
push
jbe
cmp
or
sbb
daa
jg
addr16
mov
dec
pop
push
cmp
lds
addr16
mov
cmp
inc
sbb
js
pushf
mov
int3
xchg
xchg
sbb
ret
ret
push
push
cs
sub
fbstp
outs
xor
fwait
sub
(bad)
add
ficomp
adc
sub
ret
xchg
mov
jg
cdq
jbe
test
int
dec
repz
mov
scas
dec
jb
outs
bound
push
lds
xchg
or
stos
mov
push
push
lahf
xchg
call
mov
dec
or
sbb
popa
jp
retf
loop
push
sbb
out
sub
stc
(bad)
pop
test
jmp
movs
int
jge
jmp
retf
mov
clc
std
jbe
pop
lds
stos
cdq
mov
sbb
(bad)
cmp
pop
cmp
jbe
and
or
pop
or
xchg
(bad)
lods
sub
add
fld
cmps
jmp
jns
out
mov
int3
sub
push
call
jno
add
adc
lods
sbb
js
test
sbb
add
fadd
sub
aad
sub
popa
cli
aas
sub
and
clc
fisttp
stc
shl
bound
dec
stos
pop
clc
pop
dec
rcl
adc
sub
imul
mov
mov
(bad)
mov
cdq
div
jecxz
push
dec
jnp
mov
xor
int
(bad)
les
int
cmp
mov
gs
mov
mov
mov
adc
jbe
xchg
scas
aaa
(bad)
or
imul
ficomp
(bad)
in
jns
repz
imul
jo
adc
test
repz
inc
xor
mov
xlat
cli
or
arpl
cli
imul
test
and
push
into
pop
data16
idiv
out
lods
fisttp
sbb
scas
(bad)
cmps
mov
ffree
sub
(bad)
xor
loopne
cmps
aam
leave
adc
ficom
adc
pop
pop
pop
popf
rol
dec
jl
jg
das
bound
mov
mov
scas
jb
mov
push
fcomi
fstp
(bad)
jne
jg
adc
jp
mov
in
scas
dec
or
jle
push
rep
div
inc
ficom
call
mov
or
inc
jl
gs
es
add
add
fs
(bad)
aas
pop
inc
pop
adc
or
xchg
mov
sbb
pushf
out
xlat
lahf
es
ret
(bad)
movs
mov
inc
or
js
icebp
push
iret
and
inc
dec
inc
aas
lahf
aam
imul
jp
mov
cmps
sti
fnsave
pushf
jne
xor
out
std
outs
out
int3
(bad)
pop
xor
xor
mov
push
jnp
ret
in
pop
(bad)
push
fadd
cld
xchg
dec
sbb
scas
es
or
shr
pop
push
jl
outs
fstp
iret
sub
fmul
idiv
test
cmp
aad
lea
mov
shl
cs
test
mov
mov
ins
ret
mov
test
mov
pop
fsub
jae
and
das
mov
int
movs
dec
mov
(bad)
mov
xchg
sub
add
and
iret
loopne
pushf
imul
sbb
xor
jp
cmps
js
mov
repz
aam
sbb
shl
xor
pop
out
cmpps
cli
push
(bad)
pop
mov
test
jge
or
inc
jp
add
push
repz
cli
push
and
(bad)
mov
retf
retf
fisubr
xlat
jg
scas
(bad)
and
sbb
cmp
and
outs
or
dec
xchg
fistp
sbb
mov
push
pushf
xchg
aaa
pop
repz
add
xor
pop
cwde
lods
out
jle
inc
and
bound
xor
pop
dec
xlat
xchg
movs
shl
icebp
sub
mov
pop
gs
addr16
mov
std
or
call
cmp
iret
cmp
cmp
inc
inc
mov
cmc
mov
aas
xchg
ror
adc
stos
dec
inc
imul
inc
aad
mov
cdq
repnz
push
xchg
ret
cmp
jbe
idiv
mov
stos
fst
pop
cmc
fdivr
rcl
sar
call
inc
sbb
fmul
or
je
addr16
or
mov
mov
out
leave
lea
jo
pop
test
out
inc
jne
pop
enter
outs
retf
mov
scas
sbb
scas
icebp
daa
aaa
ds
sahf
pop
jb
lods
cdq
xlat
pop
sub
test
xlat
pop
test
xlat
cmp
lods
jp
movs
xor
adc
cld
shl
arpl
out
mov
(bad)
rcr
test
mov
or
xchg
add
mov
test
cmp
fs
das
mov
push
ins
lea
sbb
ret
cmp
and
fcomip
xor
mov
xchg
js
jp
jge
xor
and
cld
adc
cmp
xor
sub
adc
rcr
daa
in
sbb
lahf
cmps
outs
fdiv
sub
jge
push
adc
cmps
add
dec
or
pop
repz
lds
sti
out
fwait
inc
les
sub
push
ins
adc
mov
je
fucom
inc
push
sub
inc
and
pop
mov
in
sub
pop
xor
push
jge
movs
inc
pop
mov
mov
push
stc
cmp
mov
pop
sbb
adc
jnp
imul
in
cld
fdivr
push
mov
inc
adc
jo
sub
xlat
arpl
pop
scas
pusha
jmp
sbb
lds
imul
push
cmp
add
jle
jecxz
stos
jg
arpl
jg
inc
and
(bad)
(bad)
mov
push
jns
fmulp
ja
sub
test
int
cmp
xchg
(bad)
push
and
mov
mov
mov
inc
fdivr
pop
xlat
in
add
push
nop
mov
mov
xchg
in
pushf
fld
push
out
(bad)
in
mov
mov
iret
pop
push
or
cmp
jg
dec
ds
ja
sub
jnp
jp
add
sub
dec
fwait
push
ins
scas
sub
sbb
retf
sub
das
fcomp
mov
lds
out
icebp
and
test
xchg
and
jle
dec
inc
xchg
mov
push
sbb
pop
retf
xchg
test
ret
enter
cs
jecxz
mov
aaa
dec
inc
std
or
and
call
sbb
mov
aaa
rol
sub
mov
jne
dec
cmp
out
movs
push
aam
cdq
jne
hlt
adc
test
popf
lahf
cwde
retf
das
push
shl
inc
sahf
sub
or
cdq
cmp
and
sub
pop
sti
push
push
mov
cs
sub
dec
dec
xchg
ja
cmp
imul
mov
mov
ret
jnp
test
mov
mov
xor
and
scas
test
js
bnd
call
cmp
mov
ss
jg
aad
in
clc
lock
pop
mov
xor
leave
hlt
and
outs
cmp
xchg
lods
out
push
int
xor
shl
sti
rcr
fild
mov
lods
mov
push
mov
std
enter
ficomp
sub
fdiv
xor
adc
sub
gs
imul
das
jno
mov
jns
add
test
xor
sub
mov
cld
outs
mov
pop
cld
fwait
push
loop
out
dec
test
push
xchg
xor
mov
repz
cmp
sub
xor
adc
fwait
test
pop
cli
xchg
mov
stc
mov
movs
sub
add
sbb
mov
xchg
xchg
ret
dec
div
push
lea
pop
es
scas
sub
mov
cmp
fldcw
sbb
cli
retf
and
pop
xor
test
clc
add
adc
rcr
(bad)
imul
mov
shr
test
mov
jl
fld
mov
lea
push
adc
jno
mov
(bad)
lods
fadd
clc
ds
jns
push
fistp
cmp
jb
or
add
or
int
gs
in
jne
push
ss
mov
std
sbb
mov
lods
out
mov
add
imul
mov
cmps
mov
sub
cmps
addr16
jmp
cmp
xchg
(bad)
lods
and
mov
mov
mov
call
jno
popf
sar
adc
pop
in
(bad)
dec
mov
mov
push
mov
mov
mov
fs
lods
sub
mov
cmp
cwde
pop
cmp
cmp
jle
iret
ds
(bad)
fiadd
xor
cdq
out
xchg
(bad)
or
jae
neg
int3
xor
ret
cwde
sub
push
mov
movs
xor
adc
mov
or
xor
into
cmp
jbe
popa
hlt
or
sahf
mov
add
fnstsw
xor
adc
lds
jb
je
add
and
add
pop
and
inc
and
icebp
mov
sub
jno
xor
push
xchg
arpl
mov
sbb
arpl
jmp
push
push
loopne
add
das
xlat
hlt
fs
or
sub
sub
ds
in
test
dec
ret
rcl
es
adc
loop
pop
lahf
fadd
bound
out
dec
cmp
push
dec
daa
sbb
sub
xchg
mov
inc
fimul
call
pop
(bad)
pop
sbb
loopne
out
jmp
adc
adc
pop
and
sub
ins
and
nop
cld
nop
sub
cwde
and
pop
(bad)
imul
pushaw
loopne
xor
sti
(bad)
imul
jns
std
nop
icebp
adc
mov
xchg
arpl
into
jl
repz
jo
ins
fcom
fcomip
or
and
stos
adc
xchg
jne
in
shl
mov
movs
push
js
jge
xchg
ret
hlt
or
adc
mov
out
or
fstp
mov
das
movs
mov
jmp
ins
ds
jmp
fstp
(bad)
movs
push
icebp
and
int3
xor
call
test
ins
jecxz
add
aaa
adc
mov
adc
cmp
icebp
jmp
xchg
sbb
sbb
xchg
fwait
(bad)
sbb
frstor
inc
mov
fnstsw
and
dec
push
aad
push
movs
cld
xchg
sbb
iret
adc
aas
sar
(bad)
push
(bad)
stos
or
add
and
push
lds
inc
fisubr
int3
sub
and
or
xchg
jmp
mov
cdq
push
arpl
hlt
adc
lods
cmps
in
dec
fstp
mov
jl
jne
ja
push
sbb
xchg
pop
push
outs
mov
push
jno
and
enter
jae
out
pop
test
(bad)
push
jae
push
fdiv
les
pop
sub
pushf
lea
dec
and
jmp
ret
mov
pop
ror
popa
scas
pushf
adc
(bad)
les
cmp
daa
mov
push
mov
scas
adc
inc
out
out
pop
sub
sub
test
xor
ret
out
and
adc
cs
scas
sub
addr16
into
mov
cdq
xor
mov
xchg
adc
push
push
movs
jnp
cdq
mov
test
and
jg
xor
sbb
sub
xor
push
mov
add
mov
fadd
shl
xchg
scas
jp
and
xor
rol
fld
(bad)
and
jg
push
imul
push
jmp
(bad)
jmp
retf
xchg
aas
(bad)
mov
wbinvd
jle
add
mov
mov
pop
sbb
aam
retf
xor
and
ins
dec
xchg
or
leave
fnstenv
and
cmps
push
jno
pusha
xchg
mov
test
push
cmp
xchg
movs
pop
lahf
(bad)
mov
add
rep
movs
pop
cmp
push
movs
dec
popf
(bad)
add
adc
not
inc
or
repnz
dec
adc
sahf
cld
mov
(bad)
sahf
mov
add
sub
adc
scas
push
adc
je
inc
mov
int3
loopne
scas
sahf
xchg
xlat
jno
test
inc
dec
call
sbb
push
jge
mov
push
mov
mov
mov
out
clc
cmp
pushf
leave
mov
mov
out
push
cmp
dec
aas
in
enter
inc
fbstp
xchg
sub
mov
adc
neg
push
call
cmp
pop
jl
xchg
jp
lods
fbld
mov
dec
std
test
add
out
lahf
lock
hlt
jmp
xchg
jns
sub
cmp
push
lea
ffreep
mov
pop
jl
pop
loop
push
or
out
imul
fld
(bad)
mov
jmp
adc
aaa
dec
not
cs
fmul
jns
or
pop
push
sbb
mov
xor
outs
addr16
mov
adc
pop
sbb
outs
cmps
cmp
lods
xor
jbe
lods
cwde
mov
push
mov
enter
cdq
fist
test
push
fidivr
pop
rcl
pushf
imul
lds
pop
xchg
mov
xchg
mov
inc
repz
xor
cmps
push
call
rcr
xor
xchg
(bad)
cmp
jbe
pop
stc
test
sahf
imul
not
add
jb
jne
mov
les
jns
push
shl
ror
test
scas
and
mov
mov
mov
fs
push
mov
in
mov
mov
mov
data16
(bad)
and
or
pop
cld
pop
and
xor
jg
jg
lock
movs
xor
rol
pop
and
add
dec
inc
dec
xor
push
rol
cwde
push
call
ins
xchg
rol
test
push
push
mov
xchg
pop
lea
mov
daa
or
and
dec
jge
mov
adc
(bad)
and
add
enter
out
cmp
xor
sbb
pop
and
or
xchg
fwait
add
xor
cmp
scas
adc
sbb
adc
pusha
les
sub
push
sub
sub
or
or
xor
ret
pop
push
pop
inc
pop
adc
cmp
jmp
rcr
push
es
inc
ret
xchg
int3
sbb
adc
js
popa
mov
or
push
test
push
jnp
cwde
inc
sbb
pop
cmp
jae
movs
xor
and
dec
loope
repz
push
test
mov
pushf
push
or
popa
and
popa
xchg
int3
adc
add
xchg
xchg
or
sub
rcr
loopne
or
out
dec
into
or
enter
enter
movs
jnp
xchg
retf
ret
pop
or
and
loope
xchg
test
mov
lods
stc
xor
mov
in
cs
out
jecxz
sub
dec
sar
aad
sbb
call
int
push
dec
push
je
mov
not
add
ja
push
inc
jns
mov
mov
pushf
add
movs
cwde
push
rcl
(bad)
cs
(bad)
dec
ds
and
sbb
add
mov
cwde
push
sbb
cmp
xchg
jmp
aas
arpl
add
pop
(bad)
loopne
and
xor
pop
cmp
sbb
mov
in
data16
fs
jae
mov
cli
inc
lds
dec
jl
sub
sbb
push
test
jge
lods
out
out
add
cmp
cmp
(bad)
jmp
test
inc
pushf
cwde
jl
stc
stos
fadd
sahf
hlt
fadd
nop
push
mov
call
mov
loop
sahf
jecxz
push
fsubp
js
or
cmps
adc
pop
and
lea
and
xchg
cmp
sub
cli
xchg
adc
dec
pop
daa
fs
in
push
cld
mov
cmps
into
push
pop
cmp
cmp
mov
xchg
pushf
dec
in
iret
add
fistp
gs
sbb
cmps
fld
inc
lahf
push
mov
fld
fmulp
(bad)
cmp
add
es
popf
adc
xchg
test
imul
iret
jnp
jmp
fadd
sbb
or
cmc
mov
enter
shr
sahf
jp
fs
cmp
or
popa
push
mov
dec
add
add
cwde
cwde
bound
or
jg
mov
rol
push
test
push
mov
xchg
aas
or
push
outs
retf
int3
mov
mov
lea
pop
sar
mov
push
jg
cmp
inc
ss
neg
mov
mov
cwde
sbb
and
jae
cmps
ins
add
aas
or
out
add
(bad)
sub
sar
mov
sub
cli
ret
call
(bad)
dec
out
mov
ins
imul
int
xor
jmp
mov
out
lock
lods
xchg
mov
shl
sub
pop
sub
add
bound
test
jmp
sti
mov
push
xchg
repnz
mov
popf
mul
push
mov
in
inc
test
mov
ins
addr16
pusha
addr16
mov
or
cmp
jne
loop
repz
cmp
jmp
outs
or
les
fwait
hlt
or
out
aas
and
sbb
int3
outs
movs
fs
ds
fbstp
aam
or
fwait
out
or
push
adc
aam
mov
sub
gs
(bad)
jl
jb
jmp
fldl2e
dec
sti
test
lods
loopne
push
jae
mov
jp
xlat
imul
js
mov
(bad)
std
add
ins
pusha
pushf
pop
mov
pop
inc
(bad)
fs
cdq
dec
imul
jbe
ret
jne
sub
xlat
in
dec
mov
shl
data16
fsub
int
mov
scas
fst
scas
test
shr
inc
inc
pop
push
adc
cwde
mov
loope
and
mov
xchg
loopne
(bad)
mov
cwde
xchg
adc
adc
xor
dec
loop
mov
and
aam
inc
into
adc
mov
dec
pop
scas
and
sub
push
push
dec
mov
adc
xchg
inc
jmp
cmp
jge
int3
and
lock
mov
mov
repz
add
mov
jle
or
sbb
and
icebp
or
xor
leave
cld
or
fiadd
nop
add
mov
loopne
sbb
or
sbb
push
and
adc
int3
sub
adc
int
ss
cmps
mov
sahf
cdq
sbb
xor
add
sbb
cmps
les
out
xchg
sub
stc
dec
int3
loop
fist
push
jbe
or
xor
aad
or
mov
(bad)
std
ins
add
pop
or
xchg
mov
xchg
inc
sub
dec
mov
inc
shr
push
in
push
call
cmps
fcom
or
mov
pop
mov
add
repz
mov
fistp
push
dec
test
push
fmul
push
fisub
sbb
dec
pop
xchg
aas
cdq
jmp
lods
mov
jg
in
repz
retf
push
shl
or
sar
add
sbb
imul
frstor
pop
mov
sar
cmps
jne
dec
fsubrp
lds
xchg
retf
xchg
shr
or
push
rcl
ds
mov
mov
jecxz
idiv
mov
scas
inc
fbld
rcr
cld
cmp
mov
shl
cmps
jmp
push
dec
mov
sub
push
push
fwait
imul
jnp
and
or
push
jae
aas
fimul
movs
(bad)
(bad)
mov
and
cmp
push
mov
retf
or
sbb
call
loopne
mov
test
or
pop
pop
mov
test
cmc
lea
and
stc
add
add
ins
xor
xor
cmps
adc
aam
push
xchg
maskmovq
dec
cmp
dec
dec
iret
out
xchg
xchg
inc
jmp
sub
mov
dec
(bad)
bnd
out
xchg
xchg
mov
inc
pop
ja
fcmovnu
xchg
inc
(bad)
aam
pop
in
mov
cwde
sar
cbw
bound
adc
cmp
cmps
test
outs
sti
xchg
cdq
mov
out
mov
movs
fistp
sbb
pop
sti
cmp
push
sub
xor
stos
andnps
popf
js
imul
or
aaa
(bad)
(bad)
ror
xlat
repz
cmps
hlt
test
cwde
inc
ins
and
mov
sub
xchg
adc
les
inc
push
stos
jb
cmp
aam
inc
adc
and
push
outs
sahf
loop
bound
push
add
loop
idiv
inc
dec
push
mov
call
stos
shr
imul
lods
iret
addr16
fdivr
das
jns
loope
jnp
(bad)
lods
imul
mov
and
test
stc
xchg
fs
inc
(bad)
mov
je
ds
add
sub
or
lods
jg
mov
pushf
stos
sub
arpl
lea
push
push
push
adc
mov
push
mov
test
pop
mov
pop
std
repnz
add
rcr
adc
jle
mov
sub
push
mov
(bad)
mov
aad
inc
movs
pop
sub
lods
push
jg
mov
out
ret
cmp
jno
mov
ds
push
(bad)
pop
xor
fcompp
nop
dec
in
and
aas
loop
push
jo
stc
movs
ins
mov
into
pusha
nop
aad
jecxz
int3
sbb
ja
stos
and
pop
fsubp
mov
fcomp
dec
jno
add
in
push
dec
rcl
fwait
je
movs
fs
cmp
hlt
sub
inc
mov
cmp
or
and
dec
jle
jne
sar
adc
inc
ror
adc
jns
test
loop
pop
fbstp
and
push
jmp
gs
pop
mov
stos
adc
retf
pop
push
and
in
push
imul
inc
mov
imul
ficomp
push
jecxz
test
cs
sub
push
cmc
and
shl
lods
loopne
hlt
mov
popf
xor
cdq
stos
aad
(bad)
mov
cli
inc
add
xchg
sub
xchg
mov
mov
adc
inc
(bad)
(bad)
jge
jmp
cmps
push
addr16
mov
lahf
inc
rcl
xchg
cmp
sbb
push
cmp
pop
cmps
or
or
sub
jecxz
xchg
xchg
sbb
scas
cmp
xchg
inc
(bad)
sbb
lock
sub
push
sub
bound
es
sbb
fldcw
jno
out
mov
cmc
aaa
mov
mov
hlt
(bad)
(bad)
mov
into
mov
jns
inc
or
pop
pop
inc
fst
es
scas
and
jnp
cmps
mov
xchg
mov
test
xlat
movs
pop
idiv
inc
jae
xlat
imul
jmp
mov
dec
fistp
and
in
sbb
inc
hlt
addr16
inc
xor
lock
int
jecxz
jno
pop
(bad)
adc
sbb
jecxz
mov
scas
(bad)
out
out
push
icebp
mov
mov
push
xor
loop
adc
es
sti
shl
cmp
mov
jge
adc
aam
inc
and
int
jne
int3
mov
pop
push
sub
call
clc
inc
mov
mov
lea
dec
jp
jle
push
push
cwde
(bad)
lea
in
ret
out
pop
jle
sub
adc
and
inc
adc
xor
cmp
pop
retf
xchg
cli
test
cmp
test
adc
adc
jne
sub
psubusb
mov
push
push
scas
cmp
jo
add
sbb
xchg
pop
add
mov
cwde
cmp
jecxz
or
movs
nop
test
cmp
aam
cmp
cmps
(bad)
fild
inc
out
stos
scas
push
fisttp
nop
je
sub
fimul
add
stos
mov
xchg
xchg
dec
(bad)
or
jmp
jne
jo
sub
(bad)
popa
rcr
jg
mov
movs
push
adc
jge
lds
mov
nop
out
mov
pop
inc
es
cs
leave
push
lods
sbb
test
sub
cmps
(bad)
fdivr
pop
int3
retf
pop
cmps
pop
enter
mov
bound
sti
adc
dec
sub
ret
inc
mov
pop
sbb
movs
sti
mov
xchg
ret
mov
popa
test
sbb
xor
mov
fimul
push
movs
add
or
cmp
push
cmps
imul
into
ret
clc
popf
xlat
aam
inc
(bad)
fcos
mov
dec
xchg
or
and
test
mov
pop
repnz
or
jmp
in
popf
mov
cwde
xchg
sti
mov
clc
aad
sahf
mov
jmp
arpl
(bad)
dec
aad
cdq
iret
hlt
mov
jle
and
dec
out
pop
iret
lods
clc
xchg
jmp
mov
loopne
mov
popa
out
pop
popa
aas
jbe
out
inc
sbb
imul
add
repz
dec
outs
fadd
mov
cmp
push
mov
sbb
pop
inc
pop
jae
mov
dec
(bad)
shl
inc
out
inc
ss
loop
popa
pop
scas
addr16
xor
stos
mov
mov
pop
in
fisttp
add
push
inc
ror
test
pop
sbb
mov
jl
leave
or
cmc
jl
jae
dec
push
rcr
shl
into
aaa
pop
cmp
ret
xchg
xor
call
sbb
(bad)
jl
push
test
and
xor
rcr
rol
push
inc
dec
es
es
cmp
imul
add
inc
sub
adc
cmp
repnz
(bad)
pop
inc
repz
hlt
sub
sub
pushf
jmp
ror
neg
jg
out
pop
jge
sub
sub
inc
lea
js
cmp
cmps
mov
gs
lods
xchg
and
js
inc
mov
outs
push
mov
xor
loope
ror
ret
in
dec
push
cmps
xchg
je
xor
je
arpl
sub
xchg
and
push
jp
xlat
pushf
xor
movs
pop
shl
cmp
imul
dec
xor
and
repz
(bad)
jecxz
add
xchg
fistp
cdq
ja
pmuludq
sti
push
mov
xchg
bound
cmc
jb
mov
inc
mov
jg
loopne
or
lods
xchg
sub
push
bound
sub
cmps
xchg
mov
sti
lea
imul
(bad)
psrlq
xchg
test
push
inc
int
sbb
jmp
dec
test
not
xchg
cld
repnz
xchg
push
and
inc
leave
in
sahf
stc
mov
xor
imul
sbb
fsubr
rcl
add
cmp
xor
sar
enter
pop
fwait
pop
loopne
retf
fld
ret
inc
xlat
add
jge
not
call
cmp
mov
mov
ret
push
mov
adc
retf
loope
mov
iret
mov
jns
fiadd
int3
scas
dec
xchg
xchg
mov
mov
out
movs
inc
imul
xchg
dec
cli
arpl
pop
mov
sar
imul
std
and
sub
mov
(bad)
push
or
bound
lods
arpl
push
adc
leave
mov
jg
mov
jmp
push
test
push
xor
sahf
ret
or
popf
dec
pop
mov
add
mov
inc
jge
xchg
mov
xor
jns
call
mov
iret
repnz
xchg
outs
jl
je
cwde
dec
push
cmp
sahf
outs
jecxz
cld
daa
arpl
sub
xchg
loopne
mov
icebp
repnz
cmp
ret
cld
mov
js
jno
inc
sbb
sti
in
lock
mov
cmp
jge
imul
imul
push
in
sbb
pop
jns
fwait
ss
mov
and
not
cld
pop
xor
or
(bad)
test
sbb
(bad)
fisub
dec
sub
add
stos
xchg
std
mov
ds
jmp
aam
aas
in
outs
movs
mov
cdq
pop
jge
or
jl
xor
imul
cmp
or
inc
sbb
and
and
xor
pop
or
pusha
shl
pusha
xor
dec
jmp
out
xchg
push
cmp
jb
fwait
scas
cmp
loop
ins
sbb
pusha
(bad)
xlat
mov
test
push
mov
push
test
jno
retf
pop
pop
inc
dec
ss
shr
popa
sti
pop
addr16
aaa
das
mov
jae
xor
(bad)
xlat
addr16
dec
mov
xchg
xchg
adc
mov
jecxz
jg
jns
scas
add
sub
mov
push
dec
repnz
jge
inc
push
push
cs
or
test
cmp
push
fldenv
dec
xor
popa
inc
fimul
aas
jo
and
imul
xor
jno
bound
out
pop
aad
(bad)
(bad)
or
mov
add
push
xchg
out
mov
or
add
xchg
xor
xchg
bsr
pop
or
sub
fs
sbb
add
std
loop
pop
inc
fwait
cmc
leave
cmp
pop
scas
iret
mov
shl
test
mov
sbb
pop
test
mov
popa
gs
push
sahf
xchg
fistp
js
adc
dec
inc
xor
daa
icebp
xor
retf
adc
add
push
and
(bad)
xlat
xchg
mov
mov
sahf
push
int3
int
cwde
and
xchg
mov
es
aam
push
or
or
mov
and
xchg
mov
fwait
(bad)
add
sbb
dec
out
inc
dec
adc
icebp
mov
xor
push
or
leave
test
xchg
adc
mov
mov
pop
ds
inc
out
(bad)
and
movs
xchg
ss
dec
xchg
es
add
je
ins
dec
mov
in
pop
ror
and
xor
jae
or
pusha
mov
dec
jp
adc
jmp
and
xor
jne
(bad)
fs
cmps
loopne
sar
(bad)
(bad)
mov
mov
(bad)
mov
cmp
or
rol
or
(bad)
data16
xor
pushf
cmp
movs
mov
cmp
test
mov
pop
xchg
xlat
loopne
icebp
sub
push
stc
ret
ss
sti
xchg
repz
sub
mov
pop
or
and
(bad)
xchg
dec
jb
add
ror
cld
leave
or
pop
mov
stos
jmp
sbb
jno
int3
sbb
arpl
xlat
shl
jp
adc
xchg
xchg
adc
scas
enter
rcl
out
aaa
mov
cmp
enter
cld
mov
jo
fdiv
inc
or
vcvtpd2dq
and
push
stos
push
mov
or
mov
dec
call
mov
fwait
shr
shl
popa
je
push
push
cmp
mov
movs
xor
scas
jns
out
ja
push
scas
xchg
xchg
(bad)
shl
xchg
mov
dec
cli
adc
aas
push
sti
ja
dec
lods
pop
adc
dec
daa
jecxz
cli
push
and
iret
outs
mov
jo
dec
in
sahf
fst
ret
push
dec
ds
jecxz
xlat
fld
or
cld
mov
sbb
sbb
mov
jp
push
sti
aas
mov
mov
sub
fs
cmp
cmp
sahf
aaa
dec
inc
mov
jns
cmps
and
(bad)
fisub
stos
scas
pop
dec
lea
inc
(bad)
ins
in
adc
repz
lahf
jnp
dec
fist
pop
int3
sub
popw
sbb
sbb
add
(bad)
sbb
adc
in
push
out
push
inc
or
adc
bound
call
fbld
xor
psubusw
inc
jno
adc
jecxz
mov
ja
adc
sub
push
xchg
jp
jnp
adc
cmp
or
dec
out
scas
xchg
pop
test
sbb
lods
std
nop
cmp
stc
mov
xchg
or
dec
mul
imul
inc
jg
xor
je
gs
iret
aas
sar
mov
and
jmp
lahf
sar
std
icebp
xor
or
jnp
fistp
jb
repz
mov
cwde
lods
scas
cli
mov
push
cmp
lock
lock
out
jne
push
sbb
xchg
fwait
mov
inc
ret
jp
ss
outs
mov
adc
(bad)
loopne
cmp
sar
mov
test
mov
test
(bad)
xchg
sar
dec
add
mov
and
dec
mov
xchg
adc
test
cmp
fild
inc
(bad)
repz
mov
cmp
inc
cmps
adc
mov
test
dec
cs
aad
lock
adc
in
rcl
mov
push
push
xchg
mov
(bad)
mov
cwde
loop
dec
sbb
jl
xchg
outs
mov
push
xor
lods
enter
imul
fs
xchg
mov
leave
das
icebp
(bad)
adc
sub
or
cld
adc
aas
mov
cmps
ins
xchg
repnz
mov
xchg
cmp
pop
ds
div
lahf
(bad)
fnstcw
test
add
pushf
fmulp
add
leave
sub
jb
dec
mov
adc
inc
mov
jmp
mov
int
sahf
adc
repnz
in
cmp
sbb
shl
scas
pop
jno
jb
mov
xchg
sub
pop
mov
mov
out
clc
push
aam
leave
int
sahf
es
repz
(bad)
aam
fwait
pop
pop
adc
jmp
sbb
frstor
mov
mov
icebp
cmp
cmps
shr
pusha
mov
push
xor
jno
pop
mov
out
jge
dec
xor
(bad)
das
into
ficom
mov
neg
sbb
rcr
ror
in
lahf
or
xor
jle
dec
add
jbe
movs
mov
sbb
cmp
ret
ret
push
lods
ret
cmp
sub
push
sbb
fisub
shl
cmp
cmp
sbb
(bad)
sub
int
test
push
xchg
mov
and
shl
adc
(bad)
aad
bound
push
jno
push
inc
loop
loop
xchg
mov
test
jmp
mov
ds
dec
ret
fnsave
sar
inc
add
adc
xchg
dec
out
jnp
xchg
push
dec
cmp
(bad)
out
dec
xchg
adc
xchg
arpl
cmps
popf
jp
mov
test
pop
or
gs
xor
mov
or
pop
ret
shl
push
push
cmp
xor
dec
outs
leave
jo
push
(bad)
or
or
push
cdq
ds
xchg
pusha
test
xchg
daa
xor
lahf
fimul
(bad)
pop
test
and
icebp
lock
ret
and
jns
ficom
adc
and
inc
je
aad
dec
pop
cmp
imul
ins
scas
ins
out
cmp
stos
cmp
mov
outs
(bad)
cmp
xchg
pop
cs
f2xm1
rol
or
(bad)
mov
and
xor
jnp
inc
jge
ret
lds
pop
or
cmp
in
sahf
retf
add
jmp
or
xchg
icebp
xor
(bad)
xlat
mov
ret
and
pop
pop
xor
or
jb
ret
inc
sub
(bad)
jo
mov
shr
ja
cld
call
shl
fimul
sub
fs
mov
mov
addr16
xchg
shl
xor
(bad)
in
jge
daa
aad
fld
lahf
aaa
xchg
mov
imul
cs
sbb
les
retf
add
lods
sbb
mov
jae
sbb
push
dec
cmp
xchg
cmp
mov
inc
cmp
pop
fnsave
add
int3
(bad)
push
add
loope
lock
clc
mov
adc
not
push
call
cmps
inc
inc
adc
jg
inc
fnstsw
adc
xor
xor
and
mov
jmp
cmps
ins
inc
jbe
es
popf
push
ss
sti
xor
push
aam
repnz
xor
leave
shl
retf
sub
pop
mov
cmp
shl
pop
jmp
push
aaa
(bad)
jae
fwait
add
call
and
adc
or
mov
retf
push
adc
cmps
cmp
cmp
sbb
lods
cmps
pop
aas
shl
test
not
xlat
jecxz
test
stc
es
push
jns
call
mov
mov
fnstcw
retf
pop
mov
jg
push
xchg
gs
mov
dec
ss
ror
mov
dec
iret
dec
loop
adc
js
aad
mov
dec
fadd
inc
xchg
into
repz
loop
cmp
sar
inc
add
push
je
aas
(bad)
leave
dec
mov
cs
adc
dec
pusha
daa
inc
cmps
xchg
(bad)
stc
push
and
call
fs
shl
mov
fs
in
xchg
test
pop
xor
xor
les
adc
leave
daa
and
pushf
popa
ror
xor
xor
(bad)
test
pop
scas
test
stos
pop
push
(bad)
mov
add
jmp
scas
shr
inc
sti
mov
cld
fistp
iret
mov
div
enter
hlt
dec
mov
jmp
mov
inc
loopne
mov
jl
mov
cmp
xor
add
test
dec
mov
inc
mov
lea
mov
jmp
push
xor
mov
jmp
xchg
pop
xchg
pusha
pop
xchg
jne
pop
jne
push
xor
mov
and
ja
cli
cmps
cmps
add
xchg
or
pusha
rol
push
mov
aad
mov
lock
mov
call
push
or
adc
bound
(bad)
mov
rcl
clc
rcr
xchg
mov
out
rcr
cmp
and
push
cmp
enter
adc
dec
lahf
push
jmp
das
mov
push
push
sub
popf
sahf
sbb
aam
popa
pop
mov
mov
xor
icebp
pusha
dec
lds
and
jns
ficom
sub
fcomp
outs
mov
xchg
pusha
fnstsw
jmp
stos
dec
or
xor
(bad)
sbb
xchg
xor
enter
xor
jg
fdiv
and
inc
lahf
and
jns
fisub
cmp
push
sub
es
inc
sahf
sbb
lods
loope
jns
xor
aam
sbb
nop
and
add
xchg
js
jge
dec
xchg
cmps
mov
jl
xor
cwde
nop
sbb
adc
mov
movs
loope
sub
inc
mov
inc
adc
xchg
mov
ror
xchg
mov
xlat
pop
pop
shl
int
(bad)
mov
fcmove
(bad)
in
mov
xchg
mov
or
pop
fwait
rcr
popa
ret
mov
cld
mov
jno
push
dec
shr
fadd
aas
mov
imul
cs
fcom
in
inc
mov
xor
or
fsub
loopne
cmp
xchg
shl
adc
mov
and
cmps
add
pushf
nop
scas
xor
outs
mov
inc
daa
mov
clc
jge
lods
push
or
data16
in
sbb
mov
loopne
in
xor
lds
lods
repz
lock
in
outs
cmp
cwde
and
xchg
iretw
cmp
jg
mov
out
cli
and
add
cmp
retf
or
sbb
mov
jmp
mov
push
sub
dec
jo
mov
or
and
in
sbb
fbstp
gs
movs
add
push
fild
(bad)
stos
lea
ins
dec
ret
fld
push
xlat
fs
test
shl
ja
std
scas
aaa
pop
aad
pop
pop
js
daa
lods
xlat
sbb
imul
pusha
jns
ins
push
push
test
jg
push
ins
mov
addr16
pop
arpl
pop
fs
mov
push
fimul
mov
jb
es
out
inc
(bad)
cwde
dec
mov
pop
outs
sub
loopne
sti
jmp
push
nop
or
fadd
cmp
cmp
das
imul
imul
mov
jg
loopne
mov
sub
jp
sub
xor
add
(bad)
cs
mov
cmp
cdq
sbb
in
jl
loope
push
(bad)
cmp
add
repnz
dec
adc
push
add
call
dec
in
and
int
inc
jge
dec
pop
je
mov
sub
mov
push
lea
aaa
sbb
mov
mov
and
adc
sbb
ins
or
dec
push
sub
dec
jp
daa
fnstenv
xchg
sub
out
loopne
mov
mov
mov
stos
and
add
fsubr
mov
mov
jb
pop
loope
cmp
das
mov
mov
(bad)
xor
push
mov
repnz
pop
ds
and
mov
pop
add
or
push
das
cmp
jae
sub
add
add
out
add
push
arpl
mov
jle
add
push
lock
leave
adc
mov
jbe
mov
xor
cli
push
mov
jl
jno
test
mov
mov
lea
fwait
dec
ss
mov
inc
out
mov
xor
mov
idiv
hlt
fwait
mov
xchg
sbb
adc
mov
in
mov
loop
bound
repnz
test
and
xchg
int
lods
lods
mov
dec
iret
cwde
inc
cmp
bound
in
outs
(bad)
leave
push
outs
imul
jnp
nop
movs
or
add
test
or
pop
adc
or
xchg
idiv
popa
and
mov
and
rol
pop
aaa
cmps
fcomp
pop
add
jnp
test
loopne
jmp
sub
clc
test
std
and
xlat
adc
or
cmp
xor
or
sub
arpl
and
ins
sti
and
fimul
movs
mov
out
mov
imul
xor
call
pop
cmp
push
sub
pushf
pop
dec
jmp
jle
jns
add
fnstenv
ins
sub
pop
fisttp
add
aad
mov
xchg
sbb
pushf
test
inc
add
push
imul
fsub
mov
jne
pusha
dec
loop
pop
rcl
jmp
adc
repz
ret
ss
(bad)
jnp
jmp
push
dec
shl
xor
jmp
pop
(bad)
pop
jne
pop
scas
lock
jmp
cmps
sub
sbb
(bad)
cmp
jns
movntps
xchg
movs
popa
adc
dec
mov
stos
sbb
pushf
or
or
ds
pop
cmp
cmp
lahf
push
retf
loope
stos
cmp
fldenv
cmp
movs
lods
dec
and
or
xor
ret
and
(bad)
(bad)
neg
daa
fisub
mov
mov
dec
push
call
popf
pop
mov
or
out
xchg
push
and
lods
outs
add
mov
and
mov
inc
push
xchg
in
sbb
jb
jae
jle
dec
in
mov
cmp
inc
xor
lahf
push
jmp
inc
imul
lahf
je
addr16
xchg
xchg
je
out
cmp
add
adc
xor
fmul
shl
mov
adc
pop
xor
in
cdq
xor
or
test
shl
inc
mov
mov
gs
push
mov
int3
adc
es
jl
cmp
int3
loope
fstp
dec
adc
dec
pop
dec
mov
loopne
jb
ins
adc
mov
pusha
adc
fs
and
es
jo
sub
and
add
ss
(bad)
jge
in
mov
sti
push
jp
add
add
and
mov
sub
sbb
push
cdq
inc
add
and
xor
jo
cmp
cs
sbb
mov
in
daa
aaa
daa
mov
mov
mov
push
aad
mov
cmp
mov
inc
hlt
in
ins
stos
xor
or
jg
sub
or
aas
pop
and
mov
or
mov
pop
xchg
and
mov
loop
mov
es
mov
test
mov
out
jae
and
neg
aaa
mov
lahf
sub
fadd
sbb
pop
stc
jmp
pop
mov
adc
or
jg
loopne
ret
gs
push
sbb
jge
scas
jge
mov
mov
outs
fidiv
xchg
nop
mov
sti
pusha
xor
fdivr
(bad)
iret
jnp
mov
(bad)
sbb
inc
adc
test
pop
jne
add
add
cmps
adc
outs
dec
int3
xchg
mov
jp
and
jmp
in
repz
loope
xchg
pop
pop
repz
pop
jp
inc
ds
sti
shl
push
addr16
fimul
scas
in
nop
inc
fs
add
pop
mov
nop
sar
sbb
clc
mov
hlt
jg
or
mov
jnp
ss
scas
adc
ffree
cmps
hlt
cmp
and
imul
imul
loop
and
mov
ss
std
pop
ror
loope
fwait
outs
dec
ret
mov
cmp
out
cli
mov
inc
repz
mov
fucomp
fwait
daa
ds
popa
aam
sbb
pushw
sub
mov
mov
and
xor
mov
xor
pop
lods
gs
jo
pop
cld
mov
adc
sar
mov
mov
in
in
dec
arpl
jmp
js
into
inc
jmp
push
pop
add
icebp
mov
mov
cmp
and
(bad)
out
push
jp
movs
repz
addr16
sbb
ss
jno
out
imul
popa
scas
cmp
movs
dec
mov
ds
push
push
mov
int
mov
fidiv
les
daa
loope
adc
clc
fisub
ja
inc
shl
mov
stos
cmp
cmc
sti
lods
mov
mov
call
xchg
mov
or
xor
push
jns
sahf
push
shl
ja
jnp
fnstenv
push
cmc
scas
cmps
ins
ret
inc
cmps
xchg
les
(bad)
loopne
and
push
(bad)
(bad)
in
js
loope
pop
jmp
imul
test
sbb
push
xchg
xchg
pop
movs
push
xchg
(bad)
dec
pop
cmp
shl
popf
ds
ins
or
mov
xchg
sub
pop
push
sub
jno
ficom
adc
sbb
xor
adc
je
sbb
mov
jg
mov
xchg
adc
jne
push
mov
push
jo
and
xchg
loop
unpcklps
xor
push
repz
popf
push
cdq
fld
inc
stos
pushf
jp
sbb
mov
(bad)
pop
sti
ja
adc
mov
shl
sub
test
shr
(bad)
cmp
sub
push
jecxz
nop
das
cld
sub
push
push
daa
xor
aad
retf
lods
inc
pop
outs
mov
adc
(bad)
dec
in
sub
mov
js
or
pop
(bad)
(bad)
mov
mov
test
repz
es
lods
mov
and
dec
xchg
iret
pop
fwait
inc
mov
or
and
cli
sub
idiv
test
push
(bad)
sub
dec
add
inc
adc
mov
mov
sub
pop
bound
dec
not
sub
pushf
pop
mov
mov
in
cmp
in
sbb
push
stos
cmp
adc
call
mov
dec
icebp
js
or
in
sbb
jle
sub
scas
in
push
imul
dec
call
fdiv
hlt
and
or
ins
sbb
or
xchg
cmp
out
cmp
pmaddwd
cwde
inc
pusha
mov
out
xchg
cmps
sti
and
mov
push
jae
int
xor
mov
jbe
rcl
jmp
mov
imul
jae
mov
jmp
push
inc
into
int3
popa
cdq
out
mov
retf
mov
pop
push
mov
fmul
jo
data16
outs
std
lds
hlt
and
push
pop
fst
fst
push
and
mov
enter
in
dec
mov
addr16
in
mov
cmp
inc
push
ret
or
mov
mov
ins
mov
jnp
sub
scas
data16
jle
push
inc
sub
(bad)
fsub
pop
push
rcl
push
mov
cli
pop
sbb
sbb
and
icebp
adc
repnz
aaa
sbb
inc
xchg
jb
or
mov
mov
aam
add
dec
push
cwde
adc
dec
xor
imul
ror
test
jp
out
aam
call
pop
lahf
cmps
or
lods
cdq
mov
push
outs
pop
cmps
sub
inc
add
cmp
(bad)
xor
push
inc
movs
pop
mov
wbinvd
dec
sbb
inc
outs
xchg
or
adc
push
mov
fdivr
mov
fisub
mov
inc
cmp
call
enter
push
add
pop
jbe
sbb
sbb
mov
sub
cmp
adc
push
xor
push
scas
les
cmp
pop
xor
push
pop
xchg
mul
lahf
mov
setle
stc
inc
mov
data16
popa
xor
test
rcr
test
fimul
jae
cmp
xchg
mov
adc
dec
add
scas
xchg
aam
out
mov
outs
leave
test
loopne
loopne
test
retf
sti
inc
mov
mov
out
call
sar
daa
and
adc
dec
fsubr
adc
scas
dec
mov
(bad)
sar
add
cli
div
dec
ret
adc
cmp
or
inc
xchg
(bad)
add
aas
xor
aad
lods
jbe
dec
mov
lea
jnp
aad
test
jne
adc
es
pusha
or
popf
stc
mov
and
push
jl
and
(bad)
sbb
shl
lsl
into
pop
pop
cmp
mov
fnstsw
cli
rcr
sar
scas
push
clc
xor
test
iret
pop
pop
jp
popf
sub
daa
sub
cdq
clc
sbb
jnp
push
push
xor
loop
sbb
adc
fild
jmp
test
cs
pop
jne
shl
ret
sub
xchg
out
pushf
and
jns
icebp
jmp
loop
loopne
mov
ins
or
movs
in
outs
inc
push
(bad)
push
jb
stos
adc
pop
scas
inc
jne
sub
imul
repnz
mov
fs
and
lds
sbb
add
and
cli
fistp
or
push
jno
hlt
leave
sub
adc
jb
dec
sbb
mov
pop
pop
xor
ret
test
movs
pop
outs
jb
retf
push
outs
loope
jae
ins
and
mov
cmp
and
je
mov
mov
push
nop
jge
psubusw
test
fucom
test
call
inc
push
mov
gs
mov
stos
adc
mov
in
add
in
sbb
jle
sub
cmp
pop
jmp
mov
adc
ja
aas
cmp
out
popa
cs
pop
hlt
cmp
cmp
mov
jb
aad
cmps
cwde
lahf
xor
clc
out
dec
xchg
add
push
aad
(bad)
xor
lahf
mov
mov
xor
(bad)
ss
test
jmp
imul
push
test
call
inc
nop
in
and
mov
fwait
nop
ret
fs
ret
mov
dec
call
jg
xchg
inc
cmp
out
push
xchg
sbb
shr
mov
fs
and
pushf
xor
movs
adc
cmp
je
sbb
mov
std
aad
or
cmp
arpl
jnp
ror
lahf
push
mov
fcmovb
jle
dec
or
cmps
xchg
and
mov
shr
shl
retf
loopne
mov
jo
xor
push
jne
test
cwde
sbb
hlt
es
sbb
das
test
pop
lea
lea
jp
push
jmp
jbe
xchg
mov
mov
div
shr
stos
shl
cmp
jge
test
or
jg
daa
jecxz
je
addr16
and
mov
push
je
int
repz
fld
adc
ds
xchg
adc
fs
mov
mov
xor
daa
fisub
mov
mov
dec
jo
xchg
ins
cmp
xchg
jbe
shl
push
or
and
iret
or
mov
les
xor
xor
daa
jo
mov
and
dec
inc
ficomp
dec
adc
js
or
xchg
xchg
fisub
jmp
call
les
cmp
pusha
jmp
jae
ins
mov
cwde
test
stos
and
fstp
ss
xchg
popf
fnstcw
cmp
add
xchg
ss
jmp
fwait
push
dec
sub
jne
pop
push
push
cmp
aam
dec
aaa
int
add
hlt
data16
out
stc
push
cmp
hlt
inc
mov
adc
je
call
cli
adc
rcr
aas
mov
stos
pop
xchg
ins
mov
call
mov
in
mov
repnz
push
xor
xor
mov
mov
push
pushf
and
cmps
add
dec
std
cmps
dec
mov
inc
xchg
or
xor
cmp
fistp
dec
push
mov
cmp
test
fcmovbe
push
xchg
cmp
jnp
xor
std
jmp
cdq
and
cmc
push
or
mov
shl
adc
sub
mov
pop
mov
xchg
fist
cmp
inc
outs
maxps
sbb
or
std
es
mov
dec
scas
mov
(bad)
push
push
xlat
scas
jae
jno
lock
aam
and
scas
pop
int
sbb
mov
xlat
xor
popf
mov
adc
fld
ret
pushf
frstor
daa
sbb
leave
mov
pop
out
aad
lea
mov
sub
jnp
sar
(bad)
sbb
nop
(bad)
cmps
push
rol
aad
fidiv
dec
pop
iret
pop
sar
sahf
jb
push
mov
popf
xchg
cmps
pop
jbe
mov
ja
sub
inc
jmp
push
cli
fmul
jo
jmp
xor
jo
mov
jb
cmp
fcom
xchg
daa
in
sub
sbb
sbb
xchg
jp
(bad)
add
inc
mov
mov
adc
and
cmps
lahf
jmp
movs
xchg
fwait
dec
push
mov
adc
mov
mov
cwde
xor
mov
add
push
ins
jge
or
push
or
dec
das
jge
mov
div
and
loop
fdivr
aas
mov
fucompp
mov
lea
push
lock
mov
out
jg
sub
lds
xor
sar
aaa
add
mov
(bad)
gs
inc
addr16
push
fcmovne
mov
inc
iret
in
lea
or
sbb
or
sub
(bad)
mov
and
sub
les
and
cmp
pop
mov
popf
jge
adc
xchg
ins
dec
cli
jb
jb
inc
mov
pop
pop
inc
add
dec
cdq
mov
mov
pushf
or
call
call
adc
or
push
xchg
mov
leave
loop
cmp
jno
dec
fmul
mov
leave
(bad)
movs
rcl
stos
rcl
ins
mov
inc
lds
retf
inc
mov
ins
pop
ret
mov
int3
pop
sub
loop
inc
mov
and
inc
jnp
fsub
sub
aad
iret
outs
nop
xchg
daa
jno
adc
pop
push
ja
sub
cld
mov
jno
mov
retf
xchg
les
jmp
jbe
jns
hlt
xchg
and
loop
les
dec
mov
and
cmps
shl
daa
aaa
push
outs
jo
not
fwait
addr16
mov
retf
loopne
out
imul
cmp
dec
push
jl
xor
fucomi
(bad)
pop
xchg
mov
mov
xor
stc
outs
fild
sbb
into
idiv
cmp
adc
inc
inc
xor
jno
xchg
pop
cmp
pop
jl
xchg
ficom
pop
int3
test
sbb
mov
or
fadd
cmp
sub
icebp
enter
push
mov
mov
or
cmc
push
xor
out
inc
std
push
int3
xor
dec
mov
movs
or
mov
xchg
mov
xor
dec
xchg
rol
xor
mov
xchg
xchg
les
adc
push
sbb
or
jle
jmp
test
daa
mov
adc
js
cli
dec
(bad)
in
aad
mov
add
dec
cmp
icebp
pop
aam
loopne
shl
cmps
dec
adc
xor
in
jno
pop
pushf
fisubr
push
mov
sbb
xor
cmp
ds
data16
xor
jmp
and
mov
cmps
jle
hlt
add
mov
mov
mov
sub
cmp
mov
or
jmp
call
(bad)
dec
outs
test
imul
pop
je
and
imul
in
daa
aaa
xlat
mov
add
out
mov
rol
cmp
loopne
push
jno
push
xchg
sahf
hlt
daa
jo
faddp
cdq
xor
jmp
movs
movs
inc
hlt
add
and
xchg
dec
cmp
mul
cmp
call
out
stc
and
xchg
pop
f2xm1
cmp
rcr
outs
cwde
dec
js
stos
push
mov
stos
or
inc
jl
mov
scas
ficom
dec
mul
pop
xor
loope
hlt
scas
stos
mov
dec
push
sbb
jae
loope
(bad)
sbb
pop
bound
jne
(bad)
in
xor
aam
ds
das
xlat
xchg
daa
shl
adc
xor
pushf
lea
into
push
nop
inc
push
in
sub
jle
(bad)
and
pop
push
adc
sub
loop
gs
xor
in
stos
movaps
dec
cmps
fprem1
add
xor
push
mov
mov
cli
out
push
jge
es
rcr
pop
cmps
cli
push
jnp
mov
gs
xor
test
pushf
push
jecxz
pop
cmps
stc
jo
mov
cmp
jno
(bad)
ss
imul
push
push
dec
mov
and
push
cmps
enter
lods
sbb
mov
or
mov
mov
mov
push
imul
lods
push
(bad)
sar
enter
pop
jle
mov
in
out
dec
outs
lock
movs
mov
dec
and
std
cmc
and
cli
fsubp
push
sub
call
js
cdq
cmps
mov
pushf
xor
(bad)
lods
xchg
popa
pop
mov
ficomp
push
add
movs
cmps
out
push
jne
js
(bad)
fsubrp
outs
mov
add
cmps
(bad)
mov
xor
inc
(bad)
js
ret
movs
xchg
adc
cmps
cmp
lods
ins
dec
xlat
pop
mov
inc
push
ins
and
repz
jne
mov
shl
out
shr
or
add
pop
lahf
fmul
test
lods
loope
pusha
test
lods
or
cmps
(bad)
sub
iret
dec
mov
into
pop
and
mov
fdivr
sbb
push
sub
jmp
ins
movs
in
fsubr
outs
ja
adc
fdiv
rol
sbb
jb
aaa
xchg
div
add
sub
mov
test
dec
push
jmp
shl
lods
pop
xor
je
outs
xor
loopne
ror
ins
fxch
jg
adc
mov
mov
sahf
fist
int
jmp
sub
jo
in
out
cmc
in
sbb
adc
mov
ret
xchg
inc
mov
(bad)
jl
ret
ret
mov
mov
cld
test
sar
ss
loope
push
xchg
xor
fsubr
pop
xor
movs
push
lds
xchg
cmp
push
dec
retf
jg
sti
adc
in
cdq
dec
(bad)
fwait
int
lods
in
sbb
xor
into
lea
rcl
jle
lods
pop
cs
and
adc
movs
cmps
xor
push
ja
pop
adc
out
fs
cmp
jne
dec
aam
cli
push
mov
call
jl
mov
inc
in
dec
mov
ins
scas
rol
jmp
push
stos
and
cdq
mov
jb
xor
(bad)
imul
(bad)
fld
xchg
xor
jb
iret
mov
dec
mov
les
stc
lds
daa
imul
ficom
jne
adc
arpl
push
popa
add
js
xchg
aas
sahf
sub
scas
jecxz
jns
cmps
mov
jns
and
inc
pop
in
dec
scas
popa
mov
ins
xlat
jo
hlt
lahf
pop
inc
(bad)
shl
mov
aas
adc
ds
call
cwde
icebp
mov
jg
popa
out
arpl
xchg
aas
adc
or
lods
jl
fimul
pop
mov
div
jno
ins
scas
stos
in
scas
scas
fstp
jne
jbe
pop
iret
push
pop
jo
movs
(bad)
call
aas
mov
xor
mov
and
rcr
out
push
call
ret
outs
add
out
mov
ss
sbb
xor
mov
cwde
jp
jmp
xchg
mov
cmp
push
xor
rcl
xor
mov
aam
shl
push
adc
and
in
pusha
shr
jns
clc
fwait
js
push
add
ror
dec
push
call
push
popf
addr16
sub
mov
das
sub
movs
xchg
jp
mov
cmp
pop
push
jecxz
mov
das
mov
scas
mov
outs
xor
inc
retf
cmp
sub
mov
push
mov
int
cs
or
mov
ja
fisub
push
or
shl
imul
xchg
imul
push
aaa
add
sbb
sub
inc
cdq
push
push
mov
dec
mov
dec
loop
daa
mov
cmc
dec
dec
outs
inc
fs
nop
mov
fiadd
xchg
daa
fadd
sahf
cwde
cdq
jmp
cmc
test
sbb
cld
jo
fisub
xor
sub
data16
inc
cmps
ret
inc
xchg
mul
sar
jnp
fldlg2
mov
fsub
mov
ret
or
fcom
jns
lea
pop
inc
sbb
or
mov
shr
jmp
push
test
retf
adc
dec
xchg
xchg
mov
sub
cld
mov
sahf
sbb
movs
loope
bound
sbb
push
cmp
lahf
ds
inc
jp
rcr
xchg
sub
add
ret
pop
mov
xchg
ret
mov
std
xchg
jp
dec
mov
inc
cmps
test
or
push
iret
fwait
ret
test
movs
js
adc
popa
cmp
xchg
dec
pop
loope
in
int
pop
imul
mov
(bad)
or
mov
jmp
std
and
xor
mov
loopne
jns
jnp
push
push
adc
cwde
imul
scas
movs
push
jbe
call
fcmovnbe
mov
loope
mov
cli
jae
push
cld
mov
add
andnps
out
dec
imul
xlat
lds
or
data16
sub
sbb
rol
inc
jl
out
sbb
jg
mov
xchg
fstp
xchg
xchg
test
mov
int
stc
xor
push
or
fwait
jae
and
jl
imul
jo
int
retf
sbb
pop
or
sbb
push
rcr
lahf
in
mov
sar
push
pop
jle
cmps
sar
mov
sbb
lea
int
jecxz
cwde
push
fbstp
inc
jns
add
jge
jae
pushf
mov
jns
or
push
out
inc
xor
xchg
stos
daa
outs
push
add
mov
inc
stos
pop
push
aad
movs
ret
(bad)
div
sub
mov
dec
cmp
movs
icebp
fld
mov
pusha
or
or
ins
mov
outs
pop
shl
mov
loopne
pop
lods
mov
jg
push
mov
in
rcr
xchg
mov
fstp
imul
or
jo
push
in
out
xor
cwde
jns
int3
repz
jmp
adc
xchg
fimul
mov
loop
mov
adc
imul
and
fidiv
cld
mov
popa
pop
inc
sub
dec
xchg
dec
mov
in
rcr
lahf
pop
or
xchg
push
jo
mov
xor
addr16
outs
sbb
icebp
sub
sub
cli
sar
in
ds
cvtdq2ps
jo
rcr
test
pop
(bad)
sub
push
mov
test
adc
jg
call
pop
dec
xchg
test
nop
mov
add
sub
ja
out
je
adc
mov
add
repnz
test
outs
inc
sti
add
fild
jo
inc
inc
bound
xchg
xchg
push
fistp
add
popa
fistp
dec
jle
sti
push
and
pop
jbe
ins
pop
fs
mov
pop
popf
jle
lahf
aas
scas
add
call
pop
xchg
rcr
ficomp
loopne
bound
mov
call
pop
scas
das
pop
lahf
xor
icebp
call
pop
push
push
imul
iret
or
and
xchg
mov
sub
dec
stos
or
test
cmps
push
mov
fsub
nop
in
aaa
imul
mov
pop
jae
sbb
ret
xor
pop
cwde
push
adc
mov
xor
xlat
enter
lods
add
mov
sub
ret
(bad)
in
lods
repz
mov
retf
jle
pop
ret
mov
cmp
sar
inc
xor
cmp
mov
mov
test
and
js
mov
add
aam
mov
pop
push
and
push
dec
lods
push
adc
mov
xor
je
dec
sar
mov
and
out
dec
shl
adc
or
inc
xor
sbb
dec
mov
or
rcr
add
jp
dec
push
movs
add
push
inc
icebp
cwde
ja
in
sub
pop
out
mov
push
mov
inc
sub
and
leave
push
cmp
push
out
fst
fs
jl
sub
hlt
jp
(bad)
nop
enter
int
dec
push
stc
aas
bound
dec
icebp
mov
(bad)
push
(bad)
fdiv
call
xor
lea
adc
adc
add
mov
mov
adc
aad
in
cmpxchg
ins
leave
cmc
push
call
adc
cdq
push
push
mov
push
push
adc
(bad)
jnp
jmp
push
push
adc
cmp
scas
pop
and
fwait
inc
or
fisttp
loopne
dec
and
add
loope
jecxz
jnp
cmps
rcl
and
loopne
xchg
enter
cmp
push
mov
push
push
rol
and
mov
scas
ins
pusha
sbb
dec
mov
inc
inc
mov
frstor
mov
in
xor
mov
in
push
enter
jb
loopne
mov
jb
fs
es
or
std
imul
daa
mov
mov
xchg
mov
inc
mov
(bad)
dec
sub
xchg
dec
cmp
ret
xchg
lods
and
cmp
(bad)
arpl
in
add
stc
adc
les
cs
inc
add
(bad)
inc
or
jmp
mov
or
lods
sbb
es
ins
inc
scas
loop
jl
fsub
xchg
popf
pop
push
mov
je
push
or
loope
not
or
jnp
inc
stos
sar
ret
(bad)
dec
hlt
cs
mov
mov
loop
ror
nop
les
ret
dec
jmp
std
pop
loop
push
test
mov
push
inc
loopne
xchg
test
(bad)
fiadd
in
es
hlt
mov
jl
rcl
div
cwde
repz
fs
mov
rol
ds
lds
pusha
fwait
sbb
std
sbb
lock
fsubr
sahf
test
and
outs
cmp
jecxz
int3
popf
inc
jno
shr
xor
add
jmp
pop
jae
push
xor
push
(bad)
xor
and
lods
inc
in
mov
lds
pop
inc
data16
mov
mov
stc
es
dec
(bad)
jge
pop
or
ins
loopne
fbld
aad
push
ds
ror
test
stc
(bad)
stc
je
mov
clc
sub
loop
sbb
add
arpl
adc
adc
mov
jge
xchg
pop
(bad)
mov
out
int
loope
loopne
ret
dec
lods
jmp
icebp
scas
xchg
(bad)
ja
inc
int3
xchg
(bad)
jmp
nop
popf
shr
pop
retf
mov
aaa
cmp
lods
mov
mov
inc
inc
xchg
aad
pop
mov
loope
shl
or
icebp
js
inc
cmp
out
loope
daa
mov
add
cmp
add
inc
cmps
js
lods
(bad)
out
xchg
jmp
imul
fisttp
xchg
ficom
nop
call
xchg
mov
ja
dec
pop
jg
mov
xchg
popf
cmps
jae
sub
pop
mov
xchg
not
and
fild
adc
retf
inc
rcr
in
push
jnp
xchg
dec
xchg
mov
pop
aas
xchg
dec
loopne
movs
hlt
dec
das
dec
xor
es
inc
sbb
xchg
mov
sti
and
lock
add
mov
add
(bad)
shr
sub
xor
scas
ins
sub
adc
out
pop
jmp
mov
fcomi
sub
mov
lea
int
es
xchg
movs
sbb
mov
sub
fistp
sbb
aaa
ja
les
test
icebp
aam
cmp
test
add
inc
repz
push
push
fist
in
push
dec
mov
call
mov
out
or
sbb
int
cmp
jnp
sbb
fdiv
xchg
cmp
aam
jl
shl
add
aaa
pop
call
sbb
fldenv
test
push
add
test
jns
mov
pop
dec
jg
mov
mov
cs
retf
fsubrp
or
sub
int
xchg
cdq
out
cs
cmp
cmp
loopne
mov
data16
inc
fst
xor
test
xor
cmps
test
sub
dec
sbb
jl
cmp
fs
das
xchg
jl
add
ficomp
fimul
adc
cmp
push
and
mov
or
in
sub
jge
sub
inc
cld
int
or
ds
mov
push
and
mov
push
adc
ret
xor
aam
jp
fdivr
(bad)
scas
jge
add
mov
outs
(bad)
cli
test
fwait
jae
pop
leave
aad
mov
icebp
stos
push
mov
jl
cwde
xor
test
pop
fsub
stos
dec
lods
sub
retf
add
mov
mov
add
fadd
jo
jae
(bad)
scas
test
dec
pcmpgtd
les
jl
hlt
cli
jo
inc
call
pop
ins
popf
cld
push
es
clc
mov
outs
pop
xor
add
push
fsub
jle
ins
push
jecxz
mov
inc
ret
lahf
fild
and
mov
jecxz
mov
sub
adc
inc
mov
aaa
jno
pusha
sub
ins
sahf
pop
imul
in
push
leave
leave
fsub
stc
dec
mov
sub
cmc
je
sbb
add
test
loop
dec
cdq
or
sbb
mov
push
fwait
sub
aaa
inc
shl
loop
dec
mov
jle
xchg
pop
and
push
add
js
std
sub
cmp
mov
pop
inc
or
pop
repnz
out
pop
inc
scas
je
pop
pop
cwde
lea
cli
ret
add
pop
inc
adc
cmp
push
sub
clc
inc
jne
push
push
fistp
into
mov
imul
mov
int3
xchg
fadd
fnsave
cmp
jae
popf
sub
test
dec
shl
fidiv
mov
ins
xchg
and
das
lods
or
retf
adc
xchg
out
clc
gs
mov
sub
add
lock
push
pop
mov
std
dec
mov
xchg
adc
lds
daa
test
aaa
ds
aaa
mov
jg
mov
mov
jb
dec
cld
inc
mov
push
mov
add
jb
dec
mov
push
stos
jecxz
adc
mov
add
syscall
fiadd
add
jmp
sub
(bad)
and
push
fcom
push
retf
(bad)
push
or
call
ds
push
mov
push
stc
jl
jg
test
jnp
push
and
adc
scas
mov
sub
inc
or
push
inc
mov
sbb
popa
jno
jb
sbb
pusha
aam
jge
inc
push
push
sub
popf
imul
jl
sub
pop
in
sub
scas
or
dec
mov
daa
mov
popa
dec
jle
xor
push
lahf
or
sub
(bad)
jg
dec
dec
and
pop
add
xor
jl
setb
adc
xchg
icebp
sub
and
dec
rcl
stos
adc
outs
inc
lods
cwde
dec
cli
ret
cwde
pop
iret
xlat
jo
int
(bad)
xchg
in
mov
push
sbb
add
pop
movs
inc
enter
push
in
mov
inc
add
cmps
pushf
icebp
in
and
int
jnp
xchg
cmp
jle
xchg
jl
pop
test
or
dec
sub
sbb
and
gs
xchg
sahf
xchg
and
jmp
sbb
fisub
cdq
jp
mov
loopne
or
dec
add
dec
cmp
ds
and
ret
pop
adc
sub
xchg
mov
mov
push
mov
lods
add
fisub
adc
data16
mov
or
jbe
jl
pop
call
pop
ss
xchg
sar
xor
(bad)
bound
mov
inc
adc
mov
mov
push
lds
xor
pop
sbb
out
loope
xchg
addr16
sbb
daa
mov
dec
fnstcw
aas
test
and
and
jb
loope
imul
ins
xchg
sbb
movs
cmps
add
in
inc
loope
add
mov
or
sahf
(bad)
adc
add
and
adc
lods
xor
hlt
mov
jo
test
gs
fwait
jbe
xor
mov
(bad)
idiv
xchg
test
lea
cmp
loop
and
(bad)
and
cdq
push
scas
stos
mov
add
push
test
jp
clc
jo
xor
pop
jl
mov
cmc
fst
lahf
mov
clc
jecxz
xchg
dec
shl
inc
shl
daa
cmps
shl
inc
pop
sbb
pop
retf
outs
sub
sbb
and
dec
mov
stos
inc
fidiv
mul
mov
out
mov
pop
ror
pop
inc
fs
ds
gs
sbb
cdq
pop
pop
retf
aam
mov
(bad)
call
xchg
cmc
test
pop
sbb
jmp
test
push
lds
push
push
cmp
add
(bad)
sbb
lds
cdq
shl
mov
push
add
cmp
es
lods
call
nop
xchg
cmp
mov
cmp
mov
sbb
nop
add
mov
mov
pop
fdivr
shl
jbe
jb
mov
push
xchg
lea
aaa
ret
das
in
outs
(bad)
push
pop
add
jmp
aam
adc
mov
fs
cmp
ins
pop
push
cdq
into
call
push
movs
pop
jne
fistp
jmp
gs
xor
fldl2e
inc
jg
dec
xchg
jb
xor
mov
lods
inc
push
pop
outs
cmp
es
popa
add
add
xor
mov
out
(bad)
fdivr
mov
push
loop
pop
push
fdivp
xor
add
mov
pop
call
retf
sti
or
xor
(bad)
clc
add
call
jns
sub
sti
push
in
xor
sub
dec
popf
xor
test
imul
push
sbb
sub
mov
mov
loopne
add
pusha
add
fs
adc
push
js
cmp
outs
retf
fst
mov
out
jbe
rcr
lock
ret
and
push
mov
aaa
mov
push
mov
mov
outs
mov
loopne
mov
sbb
dec
mov
jnp
xchg
mov
aaa
fadd
xor
adc
movs
mov
pusha
mov
mov
push
dec
clc
push
inc
xchg
and
shr
loope
mov
dec
mov
pop
add
lock
call
xor
ins
push
xchg
adc
imul
out
mov
movs
mov
xchg
retf
aad
and
inc
sbb
push
push
sbb
addr16
add
push
push
cld
adc
add
sub
int3
mov
and
popf
loop
imul
cs
push
cmc
and
cmp
cli
scas
sbb
popa
mov
or
(bad)
or
dec
(bad)
dec
ret
adc
xchg
mov
xchg
adc
(bad)
int3
fild
inc
mov
arpl
(bad)
or
ds
dec
jecxz
push
jg
(bad)
mov
jmp
pusha
sub
mov
mov
jo
xchg
mov
adc
int3
mov
je
pop
mov
sbb
mov
int3
repnz
and
and
sbb
sbb
mov
push
mov
loope
mov
(bad)
cli
or
xor
retf
mov
test
xor
sbb
aaa
adc
shl
icebp
cmp
or
inc
dec
dec
outs
(bad)
mov
cwde
retf
popf
jb
inc
mov
cld
inc
inc
xor
pop
fcmovbe
sbb
mov
int
pop
mov
mov
ret
xor
xor
ret
sbb
gs
lea
sbb
repz
inc
jp
test
lods
and
and
dec
sbb
push
sar
mov
ret
jmp
mov
and
mov
add
and
rcl
mov
cmp
xor
neg
fadd
ss
(bad)
test
rol
in
scas
add
sbb
jmp
pushf
and
lds
retf
mov
rcl
jne
jnp
ret
and
aam
int
jle
ret
leave
arpl
jmp
lahf
mov
adc
sub
cdq
test
repnz
xchg
push
dec
adc
xchg
xchg
sub
pop
jne
dec
push
add
add
push
add
push
lahf
pop
jne
fild
jmp
or
(bad)
pusha
or
ja
cmp
sub
aad
push
dec
add
shl
inc
mov
test
stos
mov
and
pusha
data16
inc
jo
movs
add
cdq
mov
aam
dec
mul
push
shr
in
fcomp
lea
and
pop
lea
push
inc
inc
test
fs
sbb
lea
pusha
adc
adc
jecxz
xchg
xor
leave
jnp
lock
xchg
outs
clc
sub
mov
jle
clc
push
out
jle
fstp
xlat
cmp
(bad)
dec
hlt
adc
sbb
adc
jecxz
or
inc
add
xor
pop
nop
jns
lahf
ins
outs
mul
xchg
mov
ret
push
fwait
sbb
mov
imul
pusha
xor
dec
sub
mov
or
lds
data16
pusha
mov
pop
mov
and
or
fistp
mov
popa
jae
fmul
addr16
mov
xchg
retf
jl
or
and
retf
or
mov
sub
icebp
adc
imul
jp
xlat
rol
lods
mov
mov
dec
pop
fcomp
mov
aad
push
retf
jl
out
jbe
shl
inc
aaa
fmul
sbb
adc
adc
mov
cmp
xchg
and
and
outs
imul
movs
cmp
cmps
sbb
xor
sbb
xor
or
sbb
bound
and
jb
xchg
(bad)
aaa
cmp
jge
frstor
jp
xchg
sub
(bad)
xchg
into
test
je
in
or
dec
add
nop
nop
cmp
gs
and
ret
stc
lods
mov
pop
or
mov
pop
adc
test
and
retf
push
xor
(bad)
mov
sbb
aaa
add
and
imul
ins
fisub
movs
js
or
popf
adc
and
loop
pop
scas
(bad)
push
jb
mov
in
jbe
loope
call
pop
jno
jmp
in
jge
xor
fstp
push
xchg
in
push
jle
pop
fst
ret
mov
jb
lea
bnd
repnz
gs
xchg
pop
mov
jecxz
inc
out
cli
(bad)
pop
aaa
imul
add
push
mov
movs
push
inc
adc
xchg
sbb
xchg
inc
test
cmc
push
mov
mov
nop
mov
fmulp
mov
mov
push
jmp
repnz
cmc
call
je
aam
jns
adc
push
xor
cmp
scas
cmps
push
mov
pop
popf
mov
mov
es
rcl
push
lahf
out
push
mov
aam
adc
jle
aad
or
int
aad
(bad)
lods
pusha
ja
push
sbb
jbe
mov
mov
or
scas
inc
adc
push
int
rcl
push
(bad)
xchg
dec
(bad)
or
iret
push
xor
ja
clc
in
call
or
scas
movd
jmp
arpl
adc
or
mov
mov
jne
movs
push
xor
into
dec
(bad)
shr
mov
and
jle
lods
lds
inc
(bad)
(bad)
imul
stc
test
sub
sub
or
fidivr
inc
mov
mov
out
popa
in
inc
les
mov
stos
test
inc
cmps
jecxz
mov
adc
aad
jnp
fcom
push
xchg
jmp
mov
mov
lods
fcom
mov
ins
aad
pop
inc
pop
rcl
test
push
cmc
push
jp
ud1
and
jne
jb
in
mov
ja
sbb
dec
cmp
mov
mov
addr16
cli
cmp
jg
ficomp
mov
or
sahf
inc
push
sti
mov
fwait
xchg
out
shl
push
sub
call
imul
sbb
in
aaa
mov
cs
or
lds
test
retf
mov
pop
fnstenv
mov
les
cmp
sub
xor
outs
mov
mov
dec
mov
xchg
dec
sbb
idiv
pop
lds
pop
mov
aaa
outs
xchg
sbb
cmps
pushf
(bad)
pop
xor
fidivr
mov
sar
inc
cwde
mov
sub
imul
(bad)
fimul
test
outs
or
add
mov
es
pusha
cs
fdivrp
mov
into
test
mov
stc
cmps
in
jae
stos
push
pop
out
ret
adc
mov
lock
add
dec
out
mov
pop
fldenv
cmc
test
inc
mov
ins
scas
bound
sub
loope
xor
jne
idiv
dec
aam
hlt
call
std
stc
fidivr
push
sbb
or
sbb
call
push
ins
adc
repnz
or
(bad)
dec
cmp
imul
pcmpgtb
jg
leave
mov
inc
or
aaa
sbb
aaa
jmp
and
popf
jno
aad
lods
and
jae
pop
neg
pop
mov
jae
xor
js
mov
je
push
xchg
adc
neg
dec
cmp
outs
or
lahf
inc
sahf
inc
xchg
push
sub
inc
xchg
lock
mov
adc
and
ror
pop
lock
add
sahf
mov
aas
or
iret
jmp
mov
mov
ret
imul
inc
popf
mov
iret
fcomp
in
lea
push
mov
int
aad
(bad)
dec
daa
inc
movs
rcr
and
loop
pop
fld
mov
mov
cmp
adc
jg
das
xchg
sti
clc
call
cmps
rcl
adc
cwde
inc
sar
mov
or
inc
std
icebp
add
inc
scas
rcl
lods
sbb
pop
ret
push
mov
dec
cs
idiv
rcr
xor
les
xlat
mov
data16
sub
mov
fsub
xor
call
pusha
das
cmp
sub
out
lock
cs
js
test
sub
xor
data16
test
fdivr
outs
aam
dec
pop
xlat
push
(bad)
or
sbb
cmp
inc
push
shr
sbb
js
and
lea
dec
add
jo
imul
cmp
mov
fisubr
cdq
pop
popa
cmp
movs
leave
jmp
movs
add
push
out
xchg
push
jb
je
mov
scas
dec
pop
xchg
mov
xor
pop
inc
xchg
and
add
dec
xchg
xor
mov
fs
pop
and
xor
sub
add
nop
sub
or
jae
add
mov
(bad)
and
iret
and
nop
aaa
and
jb
mov
adc
fdivp
xor
aad
cmp
pusha
call
inc
push
sub
lods
aam
cs
adc
out
sub
movs
inc
lds
stc
jg
fsubr
adc
dec
outs
arpl
test
loopne
cmps
add
test
pop
xchg
imul
rcr
outs
jbe
pop
ds
push
movs
jo
movs
jmp
jg
test
adc
les
xor
bound
mov
int3
and
dec
jne
xor
ins
sub
es
fs
mov
sar
dec
sub
mov
xor
fs
ret
inc
repz
cwde
stos
(bad)
jne
push
or
xchg
adc
push
and
lahf
rcl
cmps
(bad)
xor
mov
sbb
lods
push
nop
stos
lds
jg
scas
push
pushf
add
inc
sub
and
and
repz
mov
mov
adc
pop
mov
dec
or
fs
and
add
push
xor
popa
aas
or
xor
inc
clc
push
jl
adc
test
adc
mov
add
pop
les
clc
mov
mov
or
mov
jge
and
cwde
sbb
pop
jne
outs
fdiv
(bad)
ficomp
dec
or
xor
mov
add
bound
mov
nop
test
jg
sbb
mov
push
mov
jp
dec
mov
repz
sar
inc
lods
push
push
inc
xor
adc
push
cwde
test
xor
das
mov
mov
xchg
cdq
cmp
mov
and
fwait
cdq
push
cmp
or
cmps
lahf
dec
fiadd
mov
fcomp
mov
or
xchg
imul
push
(bad)
jbe
push
aaa
mov
pop
mov
repnz
lea
xchg
push
int3
(bad)
ficomp
ins
xor
pop
mov
xchg
xlat
inc
sub
daa
cld
test
and
fwait
sar
fldenv
inc
add
pop
pop
xchg
and
mov
xor
cld
shl
fst
cmps
loopne
jmp
cmp
mov
adc
adc
loope
inc
jbe
test
test
repnz
push
retf
dec
cmp
setae
or
aaa
dec
mov
mov
push
nop
pop
into
test
xor
sbb
cmp
out
sub
pop
nop
pop
add
jl
xor
add
xchg
add
mov
jecxz
leave
xchg
cld
inc
mov
inc
retf
push
adc
push
inc
jbe
jno
pop
dec
sbb
mov
fimul
sbb
add
and
test
sub
ror
les
in
xchg
mov
jmp
arpl
push
mov
loopne
out
jae
ret
mov
xchg
les
cs
fcompp
enter
cmp
cmp
pop
fucom
and
call
mov
sar
dec
pop
nop
scas
into
lods
out
in
and
jg
into
xor
xor
mov
or
ins
mov
push
mov
call
ret
inc
dec
mov
retf
test
aam
mov
push
and
jge
xchg
pop
repnz
out
push
(bad)
mov
sub
aaa
retf
(bad)
mov
xor
xor
cmp
popa
xor
mov
lea
lods
xor
nop
loope
ins
stc
xor
ins
(bad)
aaa
cmp
fisubr
(bad)
jns
push
out
add
pop
call
js
mov
push
ins
inc
mov
mov
adc
cld
add
pop
xor
push
and
push
cmp
push
inc
mov
mov
sbb
jae
test
fstp
xor
in
xchg
fsub
cmc
and
dec
cs
aam
nop
sub
call
popa
mov
mov
add
or
push
rcl
iret
add
push
out
ins
pop
sbb
in
xchg
xor
jb
xor
shl
xor
xor
push
push
cmp
stc
or
mov
xstore-rng
adc
inc
popf
mov
jl
mov
sbb
ins
sub
loopne
and
punpcklwd
daa
bound
xchg
cmp
jno
repz
retf
adc
or
cmp
jmp
or
sar
mov
test
(bad)
into
mov
mov
sbb
(bad)
sahf
sub
jno
mov
inc
fimul
xchg
cmp
pop
sbb
push
pop
in
cmps
jae
mov
vpsllw
mov
test
sbb
push
adc
mov
inc
xchg
es
test
cmp
(bad)
je
cwde
sbb
stos
call
add
and
cld
adc
dec
inc
jg
jp
or
dec
inc
sbb
shr
push
add
les
lea
in
shl
popa
push
add
out
cmp
lds
add
sti
in
sub
adc
(bad)
int
iret
into
mov
lods
push
jle
stos
rcl
adc
cld
xchg
and
icebp
bound
mov
arpl
jp
xor
hlt
dec
loop
cmp
enter
mov
xchg
cmps
test
inc
dec
leave
lds
xchg
adc
or
xchg
xor
cli
inc
outs
jbe
mov
aas
sti
fld
pop
xor
iret
es
mov
cdq
mov
inc
lahf
xchg
mov
add
stc
inc
in
es
iret
loopne
mov
inc
fwait
or
pop
mov
out
test
fdivr
sbb
jne
ja
lock
cmps
jno
call
mul
stc
lds
retf
repz
push
sti
jge
jl
call
aam
sub
inc
outs
or
xlat
adc
movs
retf
call
or
mov
cmp
or
aaa
outs
inc
scas
inc
test
add
sti
(bad)
jle
ret
fwait
imul
or
test
jmp
lds
sub
or
data16
sbb
inc
cmp
push
add
jb
or
iret
cmp
shl
leave
push
dec
adc
sub
imul
or
test
rcl
jnp
imul
sub
inc
lahf
lock
lods
pushf
mov
pop
mov
mov
sahf
sub
mov
push
and
ins
pop
ins
outs
xor
push
mov
sbb
aaa
xchg
mov
sbb
jmp
mov
es
xchg
inc
(bad)
daa
push
das
inc
repnz
xchg
dec
inc
sbb
jns
ret
pusha
int3
xchg
dec
pop
xor
sbb
xor
dec
pop
cmp
jns
leave
lock
sub
call
jecxz
test
rcl
or
lea
lods
test
add
cs
int3
mov
cli
push
mov
(bad)
rcl
ror
cmp
shl
int3
inc
fs
sub
(bad)
stc
popf
or
mov
pop
inc
fs
faddp
arpl
inc
pusha
push
jne
test
iret
int3
xchg
ins
add
pop
jle
ret
jge
pop
fwait
aaa
retf
xor
add
and
fcomp
cmp
mov
xor
cs
dec
sub
inc
inc
addr16
js
xor
shl
imul
jns
out
leave
cs
mov
sub
fnsave
push
mov
mov
mov
xchg
les
(bad)
pop
and
cmc
xchg
call
push
call
jge
mov
test
(bad)
les
or
pop
test
mov
and
mov
not
push
(bad)
jp
lahf
(bad)
push
ror
mov
stos
pop
inc
clc
or
aas
mov
mov
and
adc
inc
adc
bound
lock
push
sbb
pusha
je
jmp
adc
dec
lods
dec
sbb
xor
or
cmp
mov
or
arpl
sub
ins
retf
je
sbb
iret
scas
rcr
and
inc
in
leave
rol
pop
and
pusha
add
scas
mov
sbb
inc
and
or
cmp
mov
push
and
xchg
inc
daa
or
mov
test
sbb
pop
sbb
retf
out
mov
mov
addr16
mov
push
(bad)
jge
aaa
push
retf
aaa
inc
shr
in
sar
hlt
test
xchg
push
inc
mov
mov
pop
jge
cmps
pusha
jge
popf
dec
stos
loope
xor
add
dec
jne
inc
outs
mov
xor
cmps
cmp
mov
aaa
adc
xor
xchg
push
jbe
jp
pop
popa
bound
mov
loope
retf
cdq
fsubr
xlat
jns
dec
lods
call
sub
pop
mov
out
add
cdq
sbb
cmps
and
push
cmp
enter
sub
push
add
or
aaa
pusha
jge
ror
retf
in
push
cmp
pop
or
ret
xlat
in
xor
vsubsd
or
hlt
into
fsub
imul
dec
sbb
adc
jae
popa
sub
dec
jbe
(bad)
adc
test
cmp
pop
mov
loope
xchg
push
mov
and
mov
hlt
xchg
imul
dec
mov
pop
pushf
mov
pop
loope
mov
add
push
popa
imul
mov
(bad)
inc
xchg
das
pop
inc
lods
and
inc
mov
jmp
popa
das
mov
xlat
stos
out
outs
or
ja
ins
jmp
std
in
test
rol
cmps
mov
xor
cli
in
mov
dec
sub
es
cli
es
add
push
pop
in
xchg
std
movs
push
push
jmp
scas
loop
jmp
jge
jbe
fistp
out
mov
into
sbb
stos
mov
jl
pop
xor
or
and
popf
pop
jmp
loope
push
out
pop
mov
cmps
inc
mov
lods
push
and
xor
loope
retf
rcr
add
scas
(bad)
or
mov
adc
cmps
call
sbb
xchg
and
out
xchg
loope
adc
adc
push
xchg
dec
sub
ret
int3
push
xor
sub
inc
jbe
les
push
push
inc
jbe
pop
icebp
bnd
xchg
cmc
add
adc
adc
dec
jae
mov
adc
mov
(bad)
cmp
xchg
data16
push
stos
sub
fiadd
xor
sub
inc
hlt
or
ds
les
or
loop
retf
lds
sub
inc
scas
test
data16
stos
(bad)
mov
js
dec
fistp
pop
ror
dec
mov
fwait
pop
push
cwde
mov
sbb
push
ficom
enter
rep
mov
out
xchg
fstp
lods
loope
fisubr
mov
shr
test
xor
sahf
lahf
or
mul
retf
sar
(bad)
repnz
out
sar
xor
movs
(bad)
retf
enter
xlat
pop
ror
xlat
dec
popf
loopne
loope
scas
add
dec
or
inc
ret
ret
xchg
(bad)
jmp
fmul
jmp
aad
aam
pop
addr16
retf
shr
stc
out
sbb
jo
fs
cs
fucomip
rol
call
pop
add
add
cs
mov
and
xchg
imul
loopne
rcr
xchg
xor
aam
dec
mov
jmp
mov
fstp
retf
add
mov
fs
push
and
xor
loopne
inc
retf
out
lea
xor
repnz
imul
and
ss
call
sub
call
sbb
int
lock
pop
mov
mov
or
(bad)
fs
push
outs
xchg
xor
inc
pop
dec
mov
addr16
xchg
mov
test
inc
add
push
shl
mov
sbb
rcr
xchg
xor
push
sbb
rol
push
bound
push
push
imul
ins
jno
and
pop
je
push
jo
and
push
adc
add
push
call
test
pusha
or
pop
pop
in
xor
add
pop
sar
ret
push
shl
mov
sbb
(bad)
rol
xor
adc
mov
add
add
xor
push
add
cmp
nop
jb
rcl
test
mov
add
push
ds
adc
imul
push
inc
cs
cmp
mov
sbb
jae
xor
shl
sub
sar
jmp
mov
cwde
adc
sub
and
shr
or
dec
push
cmp
sub
dec
add
lods
fld
add
or
cmp
mov
ret
pop
push
mov
cmp
pop
ret
out
push
jmp
or
arpl
mov
ror
fisttp
cmp
mov
add
adc
xor
dec
sbb
adc
mov
mov
mov
test
push
push
sar
inc
in
xchg
jae
iret
or
rcr
inc
and
shr
(bad)
push
mov
add
push
sbb
push
sbb
ret
push
xor
mov
mov
xor
dec
add
push
xchg
dec
adc
test
aam
xchg
ja
jno
mov
ror
enter
repz
icebp
and
into
xchg
xor
or
in
je
ror
scas
daa
out
sub
sub
sti
fidiv
xchg
nop
aam
inc
mov
cmp
cdq
push
in
imul
jp
sbb
aam
inc
lahf
jp
sbb
mov
xchg
sbb
dec
jmp
and
adc
repnz
lea
mov
push
ds
or
sub
mov
push
adc
fidivr
xor
out
push
mov
push
pop
in
repnz
les
ins
sbb
icebp
repnz
xchg
push
and
pop
fdiv
cmp
adc
call
ins
push
push
sar
lock
es
push
in
cdq
je
lock
cmc
sti
mov
std
pop
or
bnd
lods
ror
inc
jecxz
inc
push
dec
sbb
fnstcw
pop
mov
pop
in
or
leave
pop
xor
mov
lds
push
xor
xchg
retf
and
pop
into
daa
out
xor
jnp
ret
pop
xor
xor
mov
or
pop
xchg
add
mov
adc
lds
repnz
sub
imul
pop
js
pop
and
mov
popf
or
pop
adc
addr16
inc
mov
xor
mov
or
sbb
sub
sbb
xchg
nop
setns
mov
and
nop
mov
movs
sub
or
push
call
add
pop
ret
dec
and
cmps
fsubr
subps
cwde
sbb
mov
in
or
dec
add
pop
ss
pusha
or
push
or
rcr
int
repz
or
fbld
int3
inc
or
pop
sbb
mov
sbb
mov
sbb
ror
rcl
jmp
sbb
(bad)
fild
out
imul
mov
push
xlat
sar
cmp
inc
nop
xor
sbb
imul
xlat
and
jle
ja
imul
sub
sbb
mov
lods
loopne
(bad)
(bad)
addr16
push
mov
retf
lock
stos
into
jg
sbb
rcl
jae
add
pop
mov
sub
sahf
add
add
pop
cmp
mov
push
and
in
pushf
int3
mov
inc
call
call
adc
push
inc
out
and
xor
pop
mov
sub
in
dec
ror
push
fst
(bad)
rcr
inc
inc
sub
jns
sbb
repz
push
mov
lea
jle
in
mov
pop
icebp
pop
mov
arpl
xor
pop
cmp
xchg
mov
xchg
push
sub
push
add
xchg
push
pop
out
dec
out
or
loopne
cmp
pop
in
mov
xor
out
pusha
test
fidiv
aad
sbb
add
push
stos
call
(bad)
(bad)
cmps
push
je
mov
xchg
xor
fabs
dec
push
pusha
cmp
adc
add
and
add
test
nop
sub
push
bound
daa
or
push
sbb
fist
test
ret
fisttp
jns
lock
cld
or
sub
cmp
xchg
add
or
sub
rcr
add
and
jmp
lods
ret
jo
ret
arpl
and
nop
(bad)
in
(bad)
dec
movs
pusha
xor
scas
mov
(bad)
sub
pusha
or
cmp
cdq
fmul
mov
imul
ss
jb
shl
call
icebp
stos
lahf
nop/reserved
icebp
xor
test
or
adc
mov
inc
outs
sbb
jmp
shl
dec
repnz
or
cmp
and
fs
test
cmp
scas
(bad)
xchg
js
push
ret
pushf
outs
xor
sar
popfw
and
and
mov
lods
xchg
mov
shl
dec
xchg
xchg
push
pop
outs
pop
and
out
loopne
push
retf
outs
jae
mov
(bad)
adc
addr16
xchg
sub
dec
leave
(bad)
cmc
mov
xchg
jne
retf
pop
ss
sbb
int
sub
ins
fisub
xchg
mov
sub
jl
iret
xchg
int
and
or
pop
bound
or
movs
movs
inc
push
pop
pop
pop
jg
in
dec
and
cmps
dec
(bad)
(bad)
mov
dec
mov
fild
and
call
(bad)
push
(bad)
ins
inc
dec
test
mov
and
fsub
fstp
add
xor
aad
push
jnp
dec
inc
sbb
and
std
in
shl
cmp
iret
mov
push
cmp
pushf
add
jmp
fisubr
movs
mov
push
mov
mov
ins
mov
xor
scas
dec
cmp
xor
add
cmp
adc
(bad)
sbb
dec
fidiv
push
test
enter
sub
xchg
mov
test
or
(bad)
inc
(bad)
sub
mov
cmp
fdivr
test
or
push
adc
test
call
loopne
(bad)
aaa
jmp
push
xchg
sub
mov
loope
pop
int
cmp
or
popa
adc
and
and
or
ins
inc
arpl
push
leave
adc
or
mov
scas
daa
jecxz
out
pusha
fbld
fldenv
sbb
adc
mov
mov
xor
xor
sbb
fild
pop
add
hlt
pop
sub
mov
dec
loopne
fisttp
sub
sub
sub
movs
data16
scas
enter
mov
mov
int3
inc
push
cmp
(bad)
cmps
push
xchg
cmp
imul
imul
pusha
push
add
or
mov
jbe
shl
jmp
xor
idiv
inc
inc
sub
sbb
jb
scas
adc
lods
dec
dec
xchg
(bad)
adc
in
retf
xor
es
xchg
and
or
test
mov
mov
repnz
push
aad
dec
inc
out
aam
push
mov
pop
add
jmp
dec
movs
jb
ins
mov
xchg
dec
(bad)
pop
leave
mov
push
in
inc
int
fild
shl
mov
pop
ret
sub
dec
std
bound
jge
(bad)
xchg
inc
scas
xor
xor
mov
xchg
adc
jmp
xor
jbe
pop
and
repz
mov
test
xchg
push
and
add
or
cmp
outs
pop
sub
and
dec
xor
jmp
js
mov
mov
repz
arpl
sbb
xor
pop
outs
js
fidiv
addr16
push
cdq
mov
mov
fs
retf
arpl
pop
(bad)
push
add
retf
jmp
jo
je
mov
and
fcom
retf
in
and
loopne
pop
cmps
pop
scas
movs
movs
enter
sub
cmps
(bad)
in
push
not
clc
pop
retf
sbb
xlat
cdq
mov
(bad)
fstp
std
and
pusha
sub
shl
xor
mov
fidivr
ins
add
cmp
mov
cmp
push
sbb
jge
sbb
inc
in
adc
add
mov
mov
lods
xchg
dec
out
push
sbb
loope
loope
lds
daa
loope
lods
sbb
stos
fsubr
pop
pop
mov
aam
or
pop
jno
scas
(bad)
dec
test
push
dec
dec
rcl
adc
fisttp
xchg
pop
jbe
fs
push
push
or
xor
pop
jge
mov
popf
out
stc
cmp
cld
mov
sbb
mov
sub
jae
inc
adc
fcmovnb
shr
dec
mov
outs
fstp
push
inc
and
mov
mov
mov
into
sub
gs
dec
les
cmp
outs
sar
jp
sub
call
xor
aas
mov
jno
out
fwait
lds
inc
cmc
pop
xor
test
mov
cmc
cdq
test
repnz
xchg
or
jbe
cmp
mov
lods
add
and
or
not
(bad)
data16
add
and
fst
pop
inc
out
dec
push
sar
call
retf
and
data16
mov
call
hlt
clc
jnp
lods
hlt
adc
icebp
sbb
mov
das
test
xor
loopne
jb
fild
or
xchg
jge
or
data16
lahf
call
cmp
sti
cmps
mov
mov
jp
jno
popf
fdivr
fidiv
jae
mov
cmps
sbb
retf
(bad)
jecxz
iret
xchg
aam
dec
cmps
(bad)
addr16
imul
pop
dec
(bad)
retf
call
(bad)
(bad)
jns
mov
cmps
push
xchg
or
aaa
loope
adc
jle
pushf
(bad)
xor
jo
sub
adc
jecxz
or
aad
add
pop
sub
call
scas
mov
loop
ret
(bad)
dec
ss
mov
fs
pop
les
test
xor
test
mov
xchg
mov
push
mov
dec
push
jmp
xchg
add
add
pusha
inc
gs
cmc
movs
adc
test
cdq
push
jecxz
pushf
aad
push
or
popa
movs
ds
xchg
lods
cmp
fwait
adc
stos
mov
sbb
sbb
jnp
dec
jecxz
jmp
or
pushf
repz
xchg
aas
jns
jmp
sti
imul
cli
push
fs
in
cdq
fidivr
and
push
add
inc
gs
sub
mov
inc
cld
xor
mov
mov
mov
ror
mov
nop
repnz
sbb
retf
sar
lock
shr
push
xor
xor
out
dec
jle
push
loop
xlat
shl
pushf
jmp
shl
shr
mov
or
iret
sbb
xchg
loop
aaa
retf
(bad)
repz
rol
xor
pop
cmp
jae
retf
sbb
js
sub
jle
and
vpunpcklqdq
enter
imul
les
(bad)
pusha
push
or
inc
clc
ins
in
retf
and
push
jae
or
inc
fadd
mov
dec
and
and
xchg
xchg
xchg
push
jo
sub
lods
cmp
or
adc
mov
in
or
rcl
arpl
or
cwde
push
ja
pop
xchg
cld
mov
mov
movs
mov
add
daa
lods
sti
cwde
mov
les
mov
cwde
test
or
inc
xor
mov
movs
jg
dec
stos
sti
rol
mov
jb
in
in
hlt
iret
lods
idiv
cs
aas
not
inc
mov
test
cwde
sahf
scas
push
(bad)
xlat
outs
(bad)
adc
push
ds
loop
fcomp
js
hlt
repnz
and
dec
loope
or
cmp
jl
fdivp
test
bound
xor
jbe
pop
mov
mov
lea
sti
aaa
push
enter
mov
jno
and
mov
aaa
fcmovu
retf
push
retf
lahf
cmp
lods
push
pushfw
xchg
cwde
ins
dec
fidivr
stc
rcr
jle
(bad)
imul
mov
clc
push
mov
fisubr
mov
sub
cs
xor
outs
push
and
retf
stos
arpl
xor
jo
movs
mov
push
jno
es
mov
mov
adc
ja
push
out
sar
xor
test
inc
outs
mov
pop
shl
add
jno
jno
mov
mov
xor
xchg
fcmovnu
sbb
pop
sbb
jge
add
cld
ins
xchg
pushf
pop
jmp
add
mov
add
adc
sub
mov
das
movs
lods
aaa
dec
idiv
test
pop
out
pop
lds
inc
in
repz
mov
inc
retf
mov
adc
adc
mov
xchg
jmp
fs
int3
das
gs
jl
inc
ret
dec
loope
test
in
in
loopne
ins
jmp
mov
daa
rcl
xchg
call
dec
es
push
push
lahf
shr
outs
adc
je
mov
(bad)
int
icebp
test
fbstp
cdq
adc
xchg
sbb
das
mov
sar
sub
pop
lods
inc
movs
or
xor
fmul
xor
sahf
jmp
jle
into
lahf
jno
cmc
sbb
pop
lds
in
aad
cli
imul
aam
pusha
stc
lea
(bad)
into
and
ins
xchg
jno
xchg
adc
mov
inc
jb
mov
bound
mov
fwait
jae
cmp
in
mov
mov
leave
mov
repz
xor
and
xor
xor
clc
jle
ins
mov
aas
call
xor
retf
mov
mov
xchg
cmps
fcmovb
jbe
in
neg
pop
idiv
inc
xor
push
cmp
ror
mov
add
xor
push
inc
jbe
out
int
add
out
cmp
lahf
mov
retf
dec
aas
int
(bad)
sti
in
(bad)
pop
movs
mov
hlt
es
xlat
(bad)
push
call
cmp
pop
pushf
lea
(bad)
and
scas
fucomi
shl
popa
xor
mov
inc
jp
and
ror
cld
push
inc
pop
push
fidivr
lea
fmul
pop
enter
pushw
pop
dec
sbb
or
cli
mov
(bad)
fs
into
jno
or
adc
push
sub
ja
test
shl
fwait
add
pop
jp
push
dec
addr16
imul
add
jg
adc
fwait
rol
popf
dec
and
mov
push
out
mov
daa
js
adc
and
sti
pushf
pop
leave
ficom
push
mov
sahf
mov
stos
loop
and
mov
nop
sbb
push
fmul
movs
push
sar
call
jg
std
pusha
(bad)
mov
add
xchg
popf
dec
je
addr16
mov
or
pop
jle
push
jno
xchg
xor
mov
int3
dec
pop
add
outs
xor
pop
into
dec
stos
adc
cmps
clc
dec
mov
call
test
iret
lea
scas
iret
popf
sub
lahf
push
sub
arpl
mov
mov
mov
rcl
clc
cmp
sti
ret
jmp
sbb
cdq
inc
repnz
pop
lea
jle
add
mov
inc
push
stos
f2xm1
sbb
es
retf
pop
f2xm1
shl
rcr
imul
mov
dec
or
sbb
push
sub
pop
inc
adc
sub
sti
mov
sar
add
loopne
out
pop
xor
and
fwait
push
scas
cld
das
jmp
jno
jae
loopne
cmp
(bad)
xchg
and
retf
pop
or
or
sbb
aaa
xor
ss
in
pusha
int
jno
xchg
sar
dec
pop
je
cwde
sub
js
cli
stc
adc
lahf
sbb
mov
xchg
mov
jne
pop
or
call
push
repnz
jb
rcr
fisub
xor
adc
or
hlt
stc
xor
xor
daa
and
movs
into
in
cwde
pusha
ror
(bad)
sti
mov
mov
int
shl
rol
push
sbb
fcomp
es
adc
sub
xor
test
push
jo
sub
lods
inc
ror
lock
cwde
mov
xor
fcomp
push
jmp
sbb
jp
fwait
mov
sub
adc
int
(bad)
iret
mov
push
ret
fwait
outs
mov
addr16
loopne
loopne
mov
shl
adc
cmp
adc
mov
dec
inc
data16
xchg
cdq
stos
jne
mov
or
(bad)
outs
add
or
jl
and
dec
mov
aam
add
add
and
pop
sbb
push
popf
inc
rol
sbb
jno
je
sbb
jbe
cmp
sub
in
call
add
ins
ret
popa
push
movs
cmp
push
inc
xor
fcmovnu
xchg
mov
inc
adc
add
sbb
xchg
dec
les
data16
gs
adc
loop
jecxz
in
mov
dec
adc
cdq
ins
imul
add
fwait
inc
(bad)
inc
xor
push
test
(bad)
dec
jg
(bad)
cld
outs
sbb
outs
mov
add
mov
ja
sbb
sbb
mov
push
cdq
xchg
cmp
lea
ret
out
outs
js
paddb
adc
out
pop
mov
and
push
mov
jno
xchg
test
dec
int3
sub
out
in
out
mov
cmp
mov
add
sub
and
stos
aaa
adc
sbb
mul
movs
mov
das
dec
add
dec
jne
cmp
mul
add
imul
cmps
mov
xchg
add
inc
clc
sbb
jo
retf
(bad)
leave
jne
sub
retf
xor
mov
cli
sahf
ror
dec
adc
jae
xor
fbstp
xor
jae
retf
and
std
in
ss
into
jbe
out
lea
retf
jl
xchg
sar
cmp
jmp
add
adc
enter
arpl
inc
popf
xchg
fldenv
pop
in
jns
das
test
loopne
shl
scas
stos
dec
fisttp
cmp
pop
gs
enter
aas
mov
pop
fsub
xchg
and
cmps
fwait
pushf
into
mov
sub
jg
or
je
iret
frstor
push
loop
aad
sbb
in
aas
hlt
pusha
test
scas
outs
aaa
into
add
mov
cmp
and
adc
and
fsub
and
out
jae
fwait
daa
in
popa
adc
inc
push
seto
mov
ret
stos
clc
pusha
mov
call
imul
mov
pop
cmp
lods
xor
out
mov
pusha
stc
in
pop
enter
rcr
xchg
retf
and
jg
out
pop
iret
fisub
popa
sbb
xchg
xchg
hlt
int
repz
cmp
push
jecxz
daa
or
retf
dec
sub
mov
mov
int3
int
mov
dec
into
mov
dec
mov
fadd
cmp
cmp
in
call
lock
or
dec
sub
pop
ror
cs
and
mov
or
outs
add
or
push
or
aam
add
test
mov
out
or
jmp
add
lahf
push
fucomi
dec
and
scas
pushf
bound
jnp
dec
push
xor
sub
add
outs
ror
gs
test
cli
adc
pusha
push
(bad)
jecxz
add
daa
sbb
xor
pop
rol
add
adc
jle
xor
mov
mov
dec
adc
dec
and
movs
fldcw
ret
cmps
bound
hlt
or
addr16
mov
repnz
jo
fdiv
cmp
push
xchg
sub
mov
fcom
call
lahf
imul
(bad)
sar
mov
loope
add
xor
data16
xor
cmp
mov
and
ins
stos
xchg
and
(bad)
or
dec
xor
push
retf
mov
(bad)
and
js
sub
not
stos
loopne
pop
imul
jno
rol
loope
imul
sub
aam
inc
mov
or
dec
in
adc
rol
cmp
push
push
add
mov
adc
hlt
pop
(bad)
pop
lds
jp
mov
sub
mov
add
fmul
jp
dec
pop
std
sar
xchg
mov
sbb
loop
stc
or
mov
pop
xor
fstp
call
push
les
nop
mov
cld
xchg
cmp
stos
and
and
fwait
adc
push
xchg
std
mov
add
sbb
xchg
push
jo
retf
popa
push
aas
aam
retf
test
ror
je
or
dec
popa
call
movs
xchg
aas
mov
push
push
test
pop
clc
leave
in
stos
lea
call
fs
js
js
mov
pop
mov
test
cmps
retf
jmp
aaa
xor
ja
(bad)
cmp
dec
imul
pusha
call
or
jmp
mov
mov
pop
ss
das
sub
mov
xchg
int3
ins
fs
dec
jmp
fs
je
push
imul
gs
push
ins
dec
scas
add
jl
(bad)
push
or
mov
je
mov
jle
dec
imul
std
sbb
pop
pop
inc
and
in
mov
sbb
pop
movs
cmp
jbe
js
mov
cmp
pop
dec
sub
mov
cmp
push
gs
sub
mov
sbb
aas
sar
out
hlt
jg
cmc
ror
enter
imul
addr16
jns
mov
mov
cli
jg
jge
cmp
jl
jg
jg
pop
mov
sbb
iret
lods
jg
sub
jae
jge
mov
jns
push
gs
gs
arpl
push
adc
jns
imul
and
sub
and
sub
movs
push
dec
ds
dec
arpl
add
ja
outs
pushf
and
or
mov
pop
clc
repz
add
dec
scas
jg
pop
inc
adc
int3
xor
jns
retf
inc
out
sahf
shr
gs
dec
xor
jne
shl
(bad)
push
and
out
fmul
jmp
pushf
push
and
xchg
dec
mov
in
movs
dec
hlt
out
mov
arpl
sbb
sbb
call
inc
dec
pop
pop
ret
xor
push
sbb
jmp
dec
push
sbb
xchg
mov
or
dec
std
lods
div
loopne
test
mov
add
lds
mov
adc
or
pop
pop
push
fild
aas
dec
ror
mov
xchg
or
dec
cmps
into
jp
pop
(bad)
jbe
mov
sbb
jae
pop
iret
(bad)
mov
jo
mov
hlt
sbb
sbb
or
sbb
outs
ja
outs
loop
lea
jae
xlat
mov
ds
add
ret
call
xchg
mov
push
pop
jno
test
hlt
adc
jmp
inc
dec
lods
push
pop
mov
(bad)
sub
xchg
ins
cmp
mov
in
xchg
mov
push
xchg
(bad)
sub
pop
mov
aad
pop
ja
stos
shl
scas
cs
(bad)
mov
or
jb
std
xchg
mov
xchg
or
pop
mov
and
xchg
push
adc
push
cmp
popf
nop
jmp
xchg
pop
dec
xor
dec
lock
mov
adc
frstor
dec
in
call
addr16
jne
ins
ss
loope
jno
mov
jns
jbe
loopne
popa
sahf
and
inc
sub
cmp
cmc
sar
adc
sub
lock
test
mov
mov
(bad)
lods
push
movs
stos
mov
or
cmp
gs
cmps
scas
hlt
mov
call
ret
lahf
rol
dec
shr
push
or
pushf
push
clc
push
repz
dec
leave
fs
fs
xchg
mov
adc
mov
inc
dec
xchg
test
xor
sub
sbb
imul
jmp
pop
adc
sub
mov
xor
xor
lock
mov
lea
sub
xor
lds
imul
or
shr
rcr
sub
sub
lea
mov
or
jno
xor
ret
xchg
imul
das
or
les
push
push
test
jns
mov
sti
pop
mov
outs
pop
mov
jne
mov
or
xchg
mov
jp
xchg
sbb
inc
mov
cmp
aam
aaa
mov
retf
aam
stc
dec
retf
movs
rcr
sbb
(bad)
adc
push
cdq
daa
jge
mov
je
push
cs
push
push
loope
add
or
ins
std
dec
or
sbb
das
ret
dec
and
mov
pop
fadd
pop
(bad)
sub
mov
or
mov
xchg
repz
sbb
mov
and
and
(bad)
pop
mov
lods
popf
pop
jecxz
mov
and
jmp
ss
sub
and
pop
call
push
cmp
push
retf
jae
mov
mov
imul
or
(bad)
(bad)
mov
and
mov
bound
add
pusha
pop
xchg
iret
lods
sbb
mov
fsubr
sbb
lahf
sbb
xlat
push
retf
repnz
ins
mov
test
and
push
mov
and
test
mov
fst
jg
js
ror
jp
movs
mov
xor
(bad)
movs
cmp
pop
push
(bad)
ins
cmp
out
mov
and
push
and
repz
push
mov
(bad)
sbb
adc
sar
cmp
lock
fs
push
inc
js
cli
pop
(bad)
scas
aas
inc
mov
xor
call
inc
test
or
in
mov
or
push
loope
push
xor
loope
mov
add
in
mov
(bad)
in
stos
mov
jp
ficomp
jne
daa
mov
pushf
neg
dec
mov
pushf
jnp
or
xchg
mov
into
push
pop
xlat
shl
xor
and
fmul
les
ins
mov
and
sar
mov
shl
push
mov
inc
popf
shr
mov
sub
imul
mov
or
pop
lods
rol
sti
cld
dec
pop
push
bswap
sbb
hlt
fild
xchg
xchg
outs
and
mov
push
push
xor
in
push
call
fisttp
inc
out
xchg
mov
test
mov
xor
xchg
dec
pop
(bad)
retf
scas
(bad)
push
adc
jno
pop
aad
mov
cmp
test
push
sbb
and
push
push
fld
xchg
inc
jbe
jns
ss
xchg
cmp
rol
cmp
adc
pop
xor
mov
cs
ffree
dec
(bad)
dec
hlt
or
pop
aad
sub
sbb
xor
push
je
pop
setl
shl
mov
and
ins
cmp
dec
ins
cmp
ja
add
fistp
xchg
pop
(bad)
in
push
pop
inc
aam
movs
mov
ror
pop
test
mov
xchg
fwait
test
sbb
mov
test
mov
lds
ret
jp
out
jno
push
rol
sbb
mov
sub
jb
ins
push
push
pushf
sub
pusha
mov
cmp
mov
sub
fxch
neg
test
ds
mov
pop
mov
dec
jp
cmp
inc
fstp
mov
fsub
std
rol
(bad)
(bad)
mov
xor
jp
fst
push
(bad)
push
jmp
popa
out
ror
imul
ja
mov
out
cmc
xcrypt-ecb
cmps
dec
leave
imul
mov
in
call
push
push
cmp
pminub
xchg
outs
mov
test
push
lea
fldenv
std
jecxz
jo
pop
mov
jbe
mov
test
mov
out
outs
mov
push
xor
into
adc
scas
mov
and
xchg
pop
stos
push
outs
cmp
mov
(bad)
pop
shr
pop
xchg
std
shl
ficomp
addr16
and
xchg
xlat
adc
xchg
lds
lods
(bad)
out
mov
outs
adc
das
int
ins
lock
pushf
int
dec
jb
sbb
push
out
inc
arpl
fcom
mov
jno
push
mov
xor
retf
scas
adc
lock
xor
add
(bad)
arpl
cmp
cli
je
repnz
push
inc
pop
jo
add
add
pop
mov
jecxz
loop
pop
retf
adc
adc
scas
scas
mov
loop
xchg
ja
icebp
aad
int
jmp
jg
jl
and
mov
xor
pop
sub
xchg
mov
xor
fcom
sub
pop
and
movs
xchg
mov
and
popf
imul
cmp
xchg
hlt
pop
pop
and
inc
pop
push
jb
jbe
lahf
(bad)
stos
jge
mov
mov
sbb
jmp
and
stos
gs
inc
cmps
xor
leave
int
jecxz
adc
add
adc
jb
dec
stc
fbstp
sub
sub
mov
stc
(bad)
mov
stc
repz
push
add
jns
and
fimul
dec
pop
add
fwait
or
arpl
ss
adc
jle
(bad)
cmp
bound
sbb
pop
(bad)
into
fcomp
pushf
push
lea
xor
add
rcl
jno
mov
daa
sbb
iret
cmp
or
test
inc
xchg
jae
add
xchg
test
or
lahf
mov
xor
mov
adc
aam
push
fmul
fdiv
xchg
mov
(bad)
mov
jne
xchg
lods
cmp
fcmovu
mov
mov
cdq
pusha
mov
xchg
and
das
and
retf
xlat
push
out
ret
dec
cmp
rcr
aad
popf
mov
sbb
ds
push
retf
leave
mov
jp
scas
mov
mov
fdivr
(bad)
cwde
(bad)
mov
jmp
jno
and
cmp
aas
stos
imul
inc
cld
jo
adc
pop
dec
lahf
pop
(bad)
inc
adc
mov
gs
mov
add
fstp
sti
xor
pop
je
and
lds
pop
adc
xchg
(bad)
xlat
das
cmp
mov
xchg
push
cmps
icebp
sub
or
movs
sbb
add
cwde
sub
mov
cwde
out
dec
mov
push
xor
sar
movs
fisubr
pop
xor
in
js
stc
movs
(bad)
aas
test
pop
stc
mov
cmps
rcr
shl
add
ds
add
les
out
push
sar
inc
sbb
add
jg
retf
sub
out
adc
sbb
lahf
lock
retf
call
les
adc
cld
jg
mov
mov
das
push
fwait
arpl
lods
adc
inc
fs
fxch
push
cld
sbb
xchg
mov
mov
fs
pop
push
push
aaa
push
xchg
sbb
mov
lods
ret
sbb
mov
retf
lods
outs
pop
xchg
cdq
retf
scas
clc
pop
data16
push
lds
aaa
xor
dec
adc
push
inc
adc
pop
mov
push
imul
sub
and
imul
lds
pop
push
stos
imul
jae
sub
arpl
push
push
cmp
arpl
xchg
jae
fmul
popf
lds
push
jmp
jl
stc
xor
add
mov
ins
in
jmp
loopne
in
sbb
xor
(bad)
mov
dec
rcl
int
addr16
scas
sysexit
(bad)
scas
xor
push
xor
xor
fcomp
aas
mov
clc
xor
mov
std
sti
lods
mov
add
mov
xchg
dec
pop
cmp
iret
mov
stos
fldcw
push
add
pusha
xchg
nop
data16
ret
xor
gs
push
icebp
js
outs
out
daa
fs
mov
push
sbb
out
cmp
jp
xchg
retf
imul
pop
add
fidivr
daa
aad
or
pop
aas
mov
aaa
cld
mov
inc
dec
fcomi
jbe
neg
sahf
lods
pop
pop
shr
daa
mov
add
xchg
push
xor
dec
aam
bound
cdq
cmp
lds
and
stos
std
and
sbb
call
sub
cmp
shl
add
jle
mov
mov
cmp
ret
js
in
test
push
mov
fadd
sub
cmp
cmps
enter
jmp
push
fisubr
ja
pop
and
cwde
retf
pop
jge
sub
mov
pop
jae
push
mov
push
out
retf
dec
push
mov
dec
jb
xor
fsub
retf
rcr
popa
dec
xchg
rcr
or
retf
xchg
inc
imul
jecxz
or
psubusb
mov
push
push
xlat
push
jmp
(bad)
inc
cmp
test
push
jmp
pop
retf
ret
jecxz
and
repz
lea
setno
sbb
or
pushf
nop
shl
(bad)
ins
xchg
jg
xchg
les
cmp
push
rcr
mov
scas
push
leave
xor
push
dec
je
mov
push
sub
lods
mov
shl
retf
fsubr
cwde
sub
pop
test
or
xchg
fs
xor
movs
jle
xor
jmp
(bad)
adc
(bad)
leave
fwait
pop
jecxz
imul
pop
gs
fld
popa
loop
fst
push
adc
push
pop
xchg
sub
cmps
jb
push
push
xchg
rol
retf
jmp
jbe
enter
fwait
mov
in
mov
lds
mov
sub
push
outs
sar
aam
xchg
cmp
jo
pop
sub
xor
inc
xor
repnz
xor
cmp
mov
pop
cmp
dec
aam
mov
cdq
cmc
xchg
pushf
xchg
out
xchg
xor
jmp
loop
dec
cmp
cmp
sbb
dec
fist
jmp
pop
(bad)
xchg
push
push
clc
jecxz
mov
jecxz
push
shl
and
fbld
aaa
ins
(bad)
js
into
rol
mov
into
jb
xchg
xor
dec
test
ss
js
lods
gs
cmps
ja
or
or
push
(bad)
(bad)
mov
dec
cwde
fdivr
int
imul
inc
ficom
dec
sub
and
lods
les
add
enter
(bad)
push
xchg
jae
dec
sub
in
stos
test
and
retf
adc
nop
jl
dec
sub
rcr
nop
mov
int3
mov
jge
jp
mov
fdiv
dec
sbb
pop
in
mov
lods
jnp
leave
inc
dec
inc
xchg
in
dec
outs
test
push
and
sbb
cs
sub
(bad)
pop
dec
pop
adc
repnz
xor
push
sub
rcr
and
fisttp
mov
mov
popf
and
dec
cmp
sub
mov
add
test
(bad)
xchg
outs
enter
adc
pop
enter
dec
cmps
sahf
cmp
movs
or
js
mov
push
(bad)
daa
xchg
jno
push
or
mov
xor
imul
sbb
mov
aaa
pop
jne
rcr
jne
dec
cld
imul
xchg
xchg
jg
mov
and
sub
jnp
jmp
ss
dec
adc
xor
cdq
not
dec
sub
fsubr
scas
adc
adc
push
jno
or
or
ror
hlt
dec
popf
xchg
sub
cmc
scas
push
shl
mov
movs
jmp
test
les
sbb
dec
retf
sbb
(bad)
aam
jl
add
inc
jnp
cmp
in
enter
add
or
or
xlat
sbb
adc
cdq
les
push
lock
enter
jmp
cmp
pushw
sbb
cmc
scas
dec
jno
push
inc
jp
(bad)
cmp
mov
les
push
cmps
xchg
jecxz
enter
xchg
and
sbb
cmp
mul
push
ss
std
inc
pop
sbb
div
and
inc
out
test
push
xchg
(bad)
jecxz
xchg
pop
sbb
sub
imul
cmp
clc
xor
xchg
mov
xor
sub
bound
mov
stos
rcl
or
(bad)
int3
pop
popf
add
lods
mov
clc
stos
xchg
retf
mov
lods
outs
pop
adc
mov
lods
jae
movs
push
imul
mov
imul
xchg
dec
mov
scas
and
loopne
adc
shl
push
sbb
test
push
int
in
enter
iret
jp
pusha
lods
pop
jl
or
mov
dec
mov
aam
xor
int3
jge
xor
shr
add
icebp
adc
movs
jnp
cmp
and
jle
outs
cmp
movs
jb
lock
loop
mov
scas
adc
cmps
mov
repz
inc
xchg
movs
popf
mov
int
xor
shl
mov
stos
lds
stos
jl
arpl
imul
xchg
fs
rcr
pop
mov
mov
dec
in
js
les
jmp
sbb
mov
pop
shl
sub
femms
sub
add
dec
pop
bsr
(bad)
fisub
xchg
dec
push
dec
fwait
sub
mov
test
mov
jbe
les
into
pop
int3
push
sbb
dec
xchg
lods
xchg
sbb
enter
push
(bad)
test
icebp
mov
fld
xor
out
fst
adc
add
stos
jmp
fcomp
jne
mov
fs
repnz
and
cdq
int3
mov
stos
fiadd
movs
mov
push
xchg
fsub
sub
cwde
jnp
nop
test
fsub
dec
xor
dec
pushf
test
push
in
gs
add
cmp
mov
mov
cmp
push
scas
jmp
in
add
rol
sub
cmp
stc
sti
mov
fsubr
inc
mov
sbb
jg
inc
or
int3
fmul
dec
ret
and
and
push
jg
mov
and
sub
mov
adc
xor
mov
sbb
fldenv
xchg
pushf
mov
(bad)
cmp
out
shr
inc
push
(bad)
ss
gs
jo
sub
lds
xor
cmp
test
and
shl
out
mov
cdq
(bad)
call
jb
leave
push
sbb
mov
mov
cli
mov
dec
in
js
addr16
jae
mov
lds
jnp
cmp
cdq
(bad)
repz
call
sub
jecxz
adc
(bad)
test
jge
enter
cmp
cmp
mov
push
add
loope
or
mov
hlt
add
out
mov
test
jns
and
je
loop
jno
pop
or
test
mov
popf
test
cmps
push
enter
mov
mov
imul
cmp
mov
cmp
xor
mov
out
push
cli
xor
movs
lock
loop
cdq
jmp
addr16
cmps
push
scas
jbe
stos
fnstcw
push
jle
cli
ins
nop
mov
fwait
and
loope
jns
mov
lods
in
mov
cmc
frstpm(287
gs
jmp
(bad)
mov
pop
pushf
daa
mov
sti
test
mov
iret
sbb
into
mov
stc
fs
(bad)
mov
cmp
mov
dec
push
fsubr
push
push
mov
cld
outs
push
paddq
fs
cmp
and
pop
out
push
mov
in
push
(bad)
mov
(bad)
(bad)
mov
sbb
mov
in
divps
or
push
arpl
mov
sub
sbb
(bad)
std
lods
das
ds
enter
mov
mov
sbb
out
cmps
jbe
add
aam
mov
fidivr
push
dec
push
lods
fisttp
cdq
pop
xchg
dec
aaa
and
mov
lods
xor
imul
jne
pop
(bad)
stos
shl
adc
mov
sub
sar
out
iret
push
fimul
mov
in
mov
push
cli
mov
adc
or
mov
ins
cli
not
(bad)
cmp
(bad)
fmul
cli
icebp
outs
cmp
xchg
movs
ss
ins
outs
cmp
sbb
(bad)
jbe
shr
xchg
bound
inc
shr
ins
sbb
mov
aaa
rcr
test
outs
into
push
icebp
cs
ins
ins
shr
inc
mov
or
and
pop
jecxz
nop
hlt
call
out
jns
test
inc
dec
retf
mov
jecxz
mov
mov
test
ss
stos
sub
aaa
out
mov
pop
push
xchg
mov
ins
(bad)
push
jne
fild
push
jmp
fwait
mov
pushf
jbe
add
mov
outs
and
movs
push
xchg
pop
cmp
mov
or
dec
dec
shl
idiv
inc
call
dec
dec
push
scas
mov
retf
sbb
fdivr
and
mov
inc
lahf
rcl
mov
inc
mov
pop
cmp
outs
call
movs
cmp
popf
outs
xchg
mov
movs
iret
out
out
dec
sbb
pop
scas
xor
jle
push
mov
xchg
pop
imul
std
xchg
paddusb
adc
in
and
fld
fucomi
call
mov
aad
xchg
mov
clc
(bad)
pop
fisub
add
xor
in
dec
mov
sbb
test
test
adc
call
xchg
test
mov
ins
xchg
mov
fwait
mov
push
push
mov
call
adc
fst
mov
xor
sub
xor
inc
sahf
inc
xor
pop
add
retf
jbe
pop
mov
mov
xor
sub
adc
cmps
arpl
cmps
dec
push
jne
mov
xchg
addr16
pop
mov
or
push
sti
jne
sbb
xchg
in
outs
sub
jns
pop
retf
jo
out
xchg
jnp
lds
mov
int
jmp
push
push
mov
mov
fld
push
icebp
dec
(bad)
and
mov
aaa
dec
add
jmp
adc
and
sub
fdiv
pushf
add
or
xor
nop
je
jmp
add
sbb
inc
sar
sbb
movs
addr16
or
retf
outs
aaa
dec
sub
out
inc
stc
and
jmp
aam
pop
pop
push
mov
aaa
cmp
js
pop
push
cli
mov
pop
jns
scas
xchg
ret
les
mov
adc
int
dec
cmp
mov
inc
mov
(bad)
fst
mov
lods
test
pop
movs
mov
pop
ins
(bad)
das
aad
into
fst
fwait
mov
(bad)
lods
or
(bad)
mov
add
and
fldenv
fidiv
mov
pop
push
mov
adc
mov
(bad)
pop
cmp
xor
sub
and
push
pop
jns
(bad)
movs
jmp
sahf
lods
adc
mov
pop
lods
outs
loope
push
xchg
adc
xor
mov
and
test
pushf
ficom
aaa
jmp
mov
pop
mov
pop
lea
pop
lods
out
and
mov
or
sub
xchg
push
mov
mov
pop
pushf
call
ins
neg
fimul
xchg
pop
and
vpacksswb
imul
loop
leave
imul
test
mov
xchg
pop
rcl
dec
fild
jmp
ja
push
xchg
out
pop
imul
test
mov
(bad)
mov
lods
cmps
jb
icebp
and
loopne
jge
fsubr
(bad)
fiadd
outs
lea
jne
scas
je
add
(bad)
xchg
or
enter
jbe
fidiv
mov
call
repz
sub
add
rcl
push
sub
mov
cmp
es
dec
nop
xlat
inc
pop
xchg
jno
loop
fdiv
les
pop
leave
mov
das
mov
mov
fwait
jno
xchg
lds
call
xlat
popa
pop
in
cmp
pop
push
inc
sar
pop
jnp
inc
psubusw
ret
popa
inc
leave
mov
outs
fs
mov
repz
xchg
std
xor
xor
jmp
push
fdivr
push
push
in
repnz
imul
fs
cmps
push
mov
mov
jb
enter
xor
gs
xor
fisttp
test
mov
mov
aam
cld
enter
(bad)
adc
sbb
xchg
jp
clc
mov
mov
iret
jae
dec
push
push
pop
mov
std
xchg
pop
loopne
shl
test
sahf
inc
mov
push
loopne
and
pushf
xchg
lahf
ins
pop
jae
jnp
fsub
test
push
jp
adc
rcr
test
sub
shr
movs
xor
in
test
pop
into
scas
cli
gs
retf
sbb
jnp
dec
xlat
sbb
push
mov
mov
jp
cmp
sbb
sub
cmp
and
retf
mov
sbb
cmc
(bad)
xor
shl
pusha
sbb
jbe
and
pushf
lods
arpl
lahf
jno
scas
xchg
pop
sub
mov
xchg
adc
jmp
push
mov
pop
mov
inc
jecxz
daa
ins
fwait
pop
xor
pop
cmp
adc
cdq
xor
and
xchg
out
adc
jp
pop
pop
mov
ror
fcomp
mov
leave
jmp
div
(bad)
fs
aad
push
xchg
xchg
cmp
jg
pop
cmp
cmp
retf
mov
outs
dec
mov
jb
jno
mov
or
pushf
stos
(bad)
adc
adc
sbb
jbe
cmp
sar
retf
push
imul
fisubr
mov
aaa
inc
(bad)
jbe
add
dec
jo
in
pop
sahf
or
sub
mov
add
gs
sbb
mov
push
frstor
jne
pushf
(bad)
dec
neg
int3
mul
jb
fsubr
sub
sbb
cmc
jecxz
hlt
aas
loope
and
je
shl
das
icebp
sub
mov
and
dec
into
in
jecxz
adc
fdivr
stc
push
pusha
leave
push
test
cmp
call
jns
test
fwait
lds
aam
aad
mov
cmp
cmps
jmp
xor
xchg
lea
out
xor
push
cwde
mov
jecxz
mov
fs
sbb
mov
mov
lea
fstp
sub
pop
jl
dec
not
fcomp
cmps
dec
xchg
sub
cs
mov
xchg
push
dec
bound
mov
inc
cmp
out
dec
nop
stos
gs
mov
mov
sbb
cld
sbb
das
sub
aad
xor
ficom
push
std
jp
sbb
call
sbb
push
mov
enter
enter
(bad)
mov
aas
xchg
cs
in
test
enter
movs
shl
iret
loope
cmp
iret
je
out
xchg
cwde
xchg
aad
jae
ja
jns
loop
movs
xchg
into
jbe
push
pop
sub
stos
or
mov
in
cmp
test
jmp
popf
lods
pop
ins
or
pop
pop
into
cmp
ret
adc
ret
jne
xor
cs
push
mov
jnp
loop
sbb
clc
shl
mov
(bad)
cmc
mov
outs
ror
inc
mov
mov
mov
retf
xlat
dec
jge
ja
mov
(bad)
cmc
dec
gs
js
mov
call
addr16
ret
ficom
icebp
js
xor
jns
push
(bad)
hlt
mov
push
push
mov
jne
cmps
repnz
cmps
stos
sub
and
and
xchg
out
punpckhdq
mov
lahf
dec
das
mov
movs
xor
sahf
sub
xor
mov
cmc
adc
movs
push
hlt
dec
pop
dec
pop
mov
scas
xor
xchg
cmp
cmps
fwait
push
fisubr
movs
jmp
xor
mov
pop
jb
xchg
jne
lods
push
dec
pop
push
xlat
loopne
cmps
xor
add
or
cmp
icebp
xchg
iret
jmp
pop
xchg
push
daa
aas
xchg
mov
pop
pop
mov
out
movs
jecxz
(bad)
into
jo
dec
aad
sbb
inc
push
or
push
jbe
out
push
sar
push
popa
(bad)
hlt
lds
cdq
out
rcl
xchg
daa
fsubr
jmp
push
sbb
movs
pop
jl
jno
sub
stos
mov
pop
jae
ret
sub
(bad)
jp
ja
dec
rcl
idiv
sar
mov
sub
jns
bound
imul
fcom
aam
push
dec
and
mov
leave
(bad)
sub
das
mov
xor
dec
std
clc
in
mov
jno
mov
add
(bad)
jl
cmp
xchg
js
mov
push
push
cmp
jo
(bad)
jnp
cmp
pop
adc
push
stos
jbe
das
pop
pop
in
xchg
(bad)
in
sahf
cmp
fwait
shr
loop
sahf
dec
pop
fldenv
mov
fimul
mov
inc
test
cmc
retf
cmps
sbb
mov
mov
out
ret
shr
pop
jmp
push
dec
cmps
retf
repz
sbb
mov
mov
aas
into
add
pop
enter
ins
sahf
ret
cmp
iret
xchg
cs
sub
test
dec
iret
mov
(bad)
push
inc
adc
jmp
test
pop
ds
pop
cmps
cs
inc
xchg
push
sub
jmp
push
gs
(bad)
cli
jg
jnp
mov
adc
sahf
mov
inc
femms
jg
sbb
cmc
jnp
or
(bad)
pop
sub
enter
cdq
(bad)
das
fidivr
jp
sub
rcr
fdivr
inc
dec
sub
mul
rcr
pop
out
clc
mov
shr
cld
cs
jecxz
push
stos
movs
push
les
mov
stos
sbb
sbb
jg
jecxz
bound
xor
add
loopne
repnz
mov
mov
into
dec
push
stc
aaa
jecxz
pop
mov
jns
jmp
clc
xchg
test
jb
mov
push
pop
or
(bad)
(bad)
sub
dec
mov
add
mov
jecxz
dec
ja
ds
jecxz
cmp
push
outs
in
dec
js
mov
pop
iret
lea
xchg
jae
pop
addr16
popf
xor
daa
inc
pop
adc
sub
xchg
jle
xchg
mov
xor
mov
mov
jmp
(bad)
inc
mov
cdq
mov
jmp
pop
shl
test
imul
fiadd
test
(bad)
sub
into
loop
fwait
aaa
gs
mov
stos
xor
mov
xchg
mov
jecxz
pusha
mov
arpl
inc
xchg
sub
in
fldcw
mov
jle
out
add
sub
nop
shl
jle
dec
push
in
cmp
loopne
into
and
inc
in
es
xchg
into
xchg
sub
jle
jmp
xor
fs
mov
imul
mov
dec
mul
out
pop
mov
jbe
pop
stos
sahf
xchg
scas
or
mov
popa
pop
aam
pop
push
push
popa
xchg
jmp
inc
push
dec
sub
xor
dec
cli
aaa
das
push
sub
fnstenv
je
test
cmc
lods
out
fidiv
sub
pusha
popa
jp
pop
in
test
dec
mov
mov
cmps
sbb
lods
fld
cmc
adc
mov
scas
movs
cmp
cmp
rol
mov
xchg
xor
(bad)
sar
mov
jmp
push
push
out
lock
xchg
jbe
imul
imul
jae
jge
push
xchg
out
div
out
sub
shl
jl
pop
bnd
xchg
jns
push
jmp
in
pop
in
pop
xchg
add
cmp
outs
cbw
mov
xor
mov
addr16
mov
movs
out
test
sub
lea
add
mov
sbb
jmp
adc
mov
jmp
jmp
mov
jae
fisub
aad
iret
mov
cmc
in
test
adc
sbb
in
call
xor
sub
xor
inc
cmps
out
in
jno
jns
arpl
mov
cmps
add
sbb
mov
pop
add
push
fcomip
jecxz
or
cld
mov
adc
adc
frstor
dec
stc
or
cmp
jg
mov
(bad)
sbb
mov
mov
pop
enter
idiv
cmp
jnp
adc
sbb
cdq
(bad)
sahf
or
test
lea
xor
push
(bad)
pop
fdivp
cmp
jle
jbe
mov
(bad)
jmp
mov
loopne
xchg
pop
mov
mov
jmp
sub
loop
xchg
dec
jp
cwde
pop
push
xor
psrld
dec
out
push
inc
into
pop
into
ins
call
(bad)
xor
loope
push
jmp
xor
std
hlt
mov
sub
push
test
aad
and
les
xchg
sahf
imul
(bad)
mov
push
outs
jp
dec
sub
cmc
add
cmp
xor
or
repz
xchg
fidivr
call
(bad)
mov
ins
cwde
mov
adc
jmp
dec
jb
inc
cld
aam
cmp
loope
xchg
and
out
mov
jnp
cmps
jns
or
cmp
jg
les
jno
mov
cdq
sub
cmc
sbb
mov
loop
push
dec
movs
fsubp
sbb
enter
sub
add
(bad)
test
div
repnz
xor
je
mov
cmp
ret
cmps
mov
pop
jmp
push
ds
xchg
mov
outs
xchg
(bad)
mov
test
push
xchg
jl
sbb
cs
and
int
iret
push
mov
sar
mov
xchg
ja
pop
test
pushf
sbb
pop
aas
out
mov
int
cmp
jmp
sbb
cli
das
cmps
das
add
out
call
xor
cmp
push
data16
cmps
lods
rcr
mov
sub
ret
mov
xchg
pusha
pop
sbb
pop
mov
lds
dec
mov
inc
fs
retf
mov
jmp
xchg
loope
push
mov
xchg
xchg
xlat
jae
mov
cmp
dec
bound
jge
sahf
enter
sti
sbb
bound
cwde
stc
pop
bnd
adc
stc
gs
les
sub
mov
dec
mov
out
adc
xchg
xchg
cmp
cmp
ja
stos
xchg
iret
or
mov
sar
repz
mov
mov
test
adc
in
gs
mov
repnz
pop
sub
(bad)
mov
cld
retf
outs
cmp
cld
jmp
pusha
inc
pop
mov
pop
sbb
pminsw
jge
fcmovnb
inc
jnp
fiadd
jo
imul
mov
sbb
fistp
cmp
mov
and
add
and
ret
aas
xchg
inc
inc
into
mov
(bad)
lods
jl
(bad)
ja
cdq
sub
xchg
test
nop
fild
xor
clc
(bad)
out
inc
jae
pop
(bad)
mov
push
fwait
test
pop
pop
mov
push
jmp
push
jge
stos
xlat
or
mov
retf
jns
sahf
les
out
outs
mov
mov
pop
or
jns
pushf
hlt
mov
sub
arpl
sbb
icebp
cld
(bad)
popa
sbb
dec
movs
jne
jp
call
push
fwait
cmp
mov
jmp
jecxz
add
ror
loopne
leave
mov
pop
jp
add
bound
push
outs
cmp
pop
shr
push
push
push
mov
sar
dec
pop
xor
push
(bad)
pop
adc
arpl
sub
dec
out
aas
fidivr
lock
outs
imul
pop
sub
cmp
(bad)
movs
mov
test
push
test
jl
mul
push
xchg
hlt
push
or
sub
pop
push
dec
sub
jo
arpl
pop
mov
inc
hlt
push
test
xchg
test
sub
jns
dec
cmp
in
out
mov
fsubr
les
add
dec
(bad)
stc
cmp
neg
scas
add
mov
test
mov
ins
mov
cdq
pop
jecxz
mov
(bad)
dec
pushf
cmp
test
pop
(bad)
data16
mov
shl
cmps
inc
sbb
mov
xchg
jecxz
lds
adc
push
into
in
adc
(bad)
ja
mov
clc
push
add
outs
lahf
add
push
int3
mov
add
jmp
gs
add
lock
aad
adc
jbe
jns
push
fcom
sti
fs
mov
xchg
js
clc
and
cwde
loopne
xor
es
jno
arpl
ficom
pushf
or
and
and
pop
dec
lods
and
lahf
lods
dec
pop
jmp
cli
jecxz
xor
dec
imul
jmp
xor
jl
mov
xchg
fld
dec
pop
(bad)
fdiv
icebp
repz
int3
adc
mov
push
test
ficomp
mov
pop
stos
out
daa
mov
jge
test
mov
lods
leave
mov
mov
jb
xor
jns
pushf
or
test
dec
rol
out
xor
(bad)
lds
mov
xor
test
push
inc
jne
les
xchg
outs
leave
fnsave
gs
std
mov
ins
sbb
pop
outs
jno
stc
cwde
xchg
sti
mov
sub
xchg
(bad)
std
sbb
test
mov
xor
mov
movs
push
ffreep
jl
movs
retf
in
out
movs
rol
es
scas
mov
push
les
(bad)
cs
xchg
stos
dec
push
lods
pop
sti
jmp
xchg
(bad)
lods
jno
mov
mov
push
pusha
and
and
dec
push
cwde
retf
imul
jb
adc
cs
mov
pushf
push
push
mov
fwait
inc
jns
test
(bad)
push
mov
loop
fs
icebp
and
bound
mov
sbb
cmp
or
mov
cs
stos
xor
mov
imul
inc
cld
test
std
jg
adc
pop
into
push
repnz
pop
jg
xchg
pop
jno
aam
xchg
jnp
ds
leave
xor
rol
popf
(bad)
(bad)
mov
or
iret
adc
cmp
jmp
scas
xchg
in
pop
cs
xchg
ins
dec
ret
mov
xlat
repz
push
outs
cld
or
pop
mov
jno
arpl
movs
cmp
xchg
pop
lahf
push
mov
add
aas
ins
mov
xor
mov
in
fnstsw
enter
scas
mov
add
pop
imul
xor
fst
sub
jo
mov
out
push
add
lock
inc
je
inc
stc
out
mov
cmp
test
sub
push
gs
iret
xchg
test
cmp
or
lahf
sar
popa
sub
rcl
cmp
stos
mov
xor
daa
(bad)
loopne
mov
pop
sub
(bad)
jg
cmps
and
and
or
les
adc
jmp
xchg
xor
pop
mov
js
inc
dec
sbb
jmp
xchg
jmp
push
std
xor
(bad)
out
shl
or
call
xchg
rcl
mov
out
shl
bound
inc
push
mov
fcom
or
dec
cli
fdiv
pop
xor
(bad)
cmc
retf
jmp
lea
fucomip
cs
or
in
mov
dec
pop
xchg
jl
ja
dec
dec
cmc
mov
push
pop
(bad)
sub
ret
mul
int
sub
mov
inc
sbb
mov
clc
ds
push
div
sbb
ins
retf
std
les
mov
xchg
xor
xor
mov
inc
cmp
xor
sbb
jbe
movs
in
cmp
loop
and
mov
retf
sub
fmul
movs
push
push
lods
jmp
std
js
fidiv
xchg
(bad)
movs
mov
cmps
mov
jle
lods
xor
in
and
arpl
pop
mov
ret
dec
ins
ins
dec
and
sub
mov
stos
sbb
sbb
fmul
arpl
sub
cmp
jmp
into
arpl
lea
dec
and
sub
mov
pop
xchg
inc
cli
inc
arpl
dec
scas
cmp
jae
fs
push
out
pop
xchg
ss
push
gs
push
push
std
xchg
xchg
pusha
xchg
dec
ins
jl
sar
dec
mov
test
stos
mov
imul
xor
push
cwde
cmp
sbb
test
cmp
pop
sahf
mov
push
dec
lahf
push
call
pop
test
neg
js
and
aad
je
aaa
lds
sar
retf
xchg
or
push
mov
xor
mov
fimul
test
(bad)
aam
out
hlt
outs
movzx
mov
adc
jnp
dec
dec
leave
ss
push
pop
cld
imul
cmps
pop
dec
loop
jp
inc
jbe
xchg
outs
lods
mov
sub
shr
inc
inc
jge
cmps
dec
sub
cmps
movs
cdq
jge
jge
mov
lea
pop
or
in
jg
mov
jg
cld
aas
mov
retf
hlt
push
push
aam
mov
hlt
mov
dec
enter
call
stos
mov
add
sbb
cmp
xchg
mov
push
ret
lods
pop
stos
xlat
sub
dec
sub
outs
xchg
pop
jnp
jl
mov
jne
fist
push
test
lods
add
mov
dec
rcr
add
out
and
in
dec
dec
lds
hlt
movs
jb
sbb
out
cmp
pop
dec
into
and
push
push
sub
mov
sub
pop
(bad)
loopne
and
pop
outs
mov
outs
mov
sti
sub
(bad)
adc
int3
lods
mov
call
sub
push
sub
stos
cmp
js
not
dec
push
cdq
std
std
cmp
retf
aas
mov
sbb
xchg
mov
sbb
adc
arpl
jne
in
mov
or
retf
stos
adc
xchg
call
mov
push
push
(bad)
adc
mov
push
test
stos
gs
in
lods
call
sub
push
scas
xor
sub
sti
cmp
adc
sub
js
jmp
(bad)
cmp
push
jno
push
div
lahf
aad
and
xor
jg
sbb
xchg
xchg
mov
lods
daa
aas
imul
scas
cmp
push
test
(bad)
loop
cmps
loop
cs
js
mov
stos
in
outs
xor
mov
lock
test
push
and
jno
repnz
enter
xor
cdq
arpl
dec
mov
adc
mov
xchg
xor
sub
outs
push
int3
out
clc
ja
in
test
push
add
and
dec
or
addr16
sub
in
test
and
jbe
push
inc
movs
inc
mov
xchg
cmp
pop
xchg
cwde
out
adc
cmp
jecxz
xchg
push
xchg
xchg
xor
rol
pop
sbb
icebp
mov
sub
cmps
jl
and
in
cmc
mov
pusha
std
cs
lahf
ret
das
retf
mov
pop
rcl
(bad)
repnz
push
jge
ins
pop
stos
cwde
clc
pop
cmp
inc
out
clc
test
mov
add
shl
test
xchg
loop
repz
mov
sar
mov
mov
mov
test
test
mov
stos
cmp
jo
cmps
push
adc
imul
out
ja
(bad)
out
stos
cmps
mov
jb
loope
inc
retf
(bad)
or
rcr
sbb
js
jno
and
mov
clc
mov
sbb
pop
mov
cdq
popf
push
or
and
test
jns
push
xor
sub
mov
or
lea
ret
icebp
(bad)
out
loop
repz
mov
xor
stos
in
adc
mov
in
sbb
sbb
in
fst
mov
test
sahf
and
arpl
mov
xor
xchg
hlt
mov
pop
test
mov
fs
hlt
(bad)
shr
inc
push
sub
xchg
dec
scas
stos
cdq
movs
xchg
mov
(bad)
fwait
push
dec
cdq
(bad)
inc
test
ret
lock
test
sbb
inc
mov
dec
inc
div
and
xchg
lds
outs
test
cmp
inc
leave
sub
mov
push
sub
pop
sbb
sbb
int
xchg
cmc
test
dec
jmp
in
in
mov
push
xor
or
mov
cmc
pushf
xor
push
cmp
and
fcomi
cmp
dec
sub
xchg
(bad)
push
xchg
cdq
stos
mov
pushf
mov
fbld
stc
xor
xor
jp
je
cmp
dec
retf
pop
push
stos
into
mov
push
mov
pop
cmps
sbb
and
aam
sub
cmp
call
xor
fmul
inc
push
xor
in
pop
push
movs
inc
movs
movs
std
shr
movs
mov
retf
adc
ins
mov
js
sbb
mov
push
ds
(bad)
xor
jp
scas
nop
lods
jb
pop
add
retf
stos
cmp
inc
(bad)
out
and
xor
ror
cld
leave
push
jne
stos
push
push
stos
arpl
mov
sbb
mov
sbb
mov
fwait
adc
jecxz
mov
out
mov
mov
mov
(bad)
push
xor
enter
mov
in
jmp
popa
ja
lds
sti
jle
fwait
inc
mov
jl
test
call
jb
nop
sbb
sahf
xchg
cmp
iret
in
movs
nop
leave
rcr
mov
pop
stc
cmp
iret
push
mov
call
gs
mov
xchg
mov
cmp
cmp
es
mov
sub
shl
sbb
inc
cmp
adc
aas
cs
mov
jnp
cwde
pop
mov
mov
shl
xchg
cwde
push
jb
gs
scas
xchg
test
aam
mov
stc
add
inc
dec
push
loope
cdq
dec
in
push
sbb
out
loop
xchg
jecxz
and
xlat
or
jle
lahf
and
dec
add
jmp
push
sahf
inc
mov
pop
mov
stos
jb
or
repnz
cmps
fwait
cmp
inc
fst
clc
inc
fidivr
outs
or
in
xchg
gs
fsubr
out
pop
test
mov
mov
xchg
imul
enter
or
xchg
inc
pop
mov
in
pop
gs
fmul
push
not
retf
(bad)
bswap
cmp
stos
dec
sbb
inc
cmp
cld
mov
xchg
pop
and
dec
xchg
je
xor
mov
(bad)
mov
jmp
cmp
fs
pop
and
pushf
(bad)
add
bswap
xor
push
jbe
fstp
adc
push
lods
lahf
imul
sbb
ds
inc
les
test
mov
lahf
or
cmp
jl
(bad)
fadd
out
lods
scas
pop
retf
pop
out
lods
int
loopne
mul
ins
mov
mov
fdiv
data16
push
push
xor
sbb
popa
arpl
(bad)
call
sbb
rcr
jecxz
out
retf
or
(bad)
int
and
(bad)
cmc
jp
in
inc
and
es
sbb
xor
sti
xlat
xlat
in
sahf
adc
(bad)
cmp
mov
popf
sub
mov
or
pop
inc
jg
sub
jae
les
mov
lds
xchg
mov
jg
jb
adc
mov
bound
bswap
fsubp
(bad)
sar
pop
ss
aas
movs
sbb
cmps
data16
and
or
mov
mov
add
out
gs
mov
outs
and
pop
pop
imul
ja
cmc
ss
dec
dec
pop
aam
(bad)
ficom
mov
ss
sbb
hlt
jb
stos
lods
stos
retf
(bad)
ror
(bad)
loopne
jp
mov
jl
or
push
imul
scas
adc
movs
mov
out
fiadd
mov
mov
frstor
sub
enter
std
call
cli
scas
lock
mov
outs
sbb
call
and
pop
pop
mov
ins
scas
repnz
mov
sbb
test
iret
test
cmp
aad
stc
add
cdq
test
pop
mov
sub
mov
mov
out
fwait
imul
leave
ja
ins
jp
iret
inc
dec
cmp
mov
xchg
adc
xor
mov
dec
and
loope
add
(bad)
and
(bad)
mov
test
cmp
push
aas
jl
jb
xor
in
aad
into
cmp
mov
jno
outs
mov
fwait
ja
aas
jno
jo
out
pop
or
push
sub
call
push
pop
xlat
dec
pop
mov
aam
call
aaa
rol
daa
sahf
or
sub
in
xchg
iret
cmps
in
or
loope
cmps
lock
ins
aad
sub
or
bound
and
lds
inc
int3
adc
fdiv
add
mov
jge
sub
out
aam
cmp
xor
dec
pop
sub
repnz
fisttp
and
movs
sub
cwde
dec
sbb
pop
fcom
lock
lds
inc
jne
dec
cmc
jae
mov
push
ret
cld
(bad)
sub
dec
ds
jno
push
inc
retf
pop
xchg
cld
pushf
jp
loope
sbb
mov
inc
push
sub
mov
cld
int3
mov
outs
fwait
jae
xchg
jg
lods
inc
and
mov
out
sbb
pusha
outs
sbb
jp
sub
mov
and
jns
xchg
mov
mov
das
shl
ss
adc
pusha
and
fsub
sbb
jecxz
push
or
push
fadd
cwde
fs
nop
mov
xor
scas
fcmove
push
stos
aam
fisttp
mov
popf
and
sub
stos
movs
mov
vxorps
hlt
int
adc
ret
aam
pusha
test
mov
push
add
cmp
in
mov
scas
jae
leave
and
jne
mov
shl
in
mov
xlat
aaa
ja
stc
mov
fstp
mov
dec
ret
xchg
ficom
ins
cmp
es
sbb
mov
xchg
xchg
lods
mov
xor
mov
or
or
jg
mov
rol
fcmovbe
outs
mov
loop
pop
add
jno
dec
hlt
cmp
mov
pop
fst
arpl
iret
fwait
mov
adc
xchg
jmp
pop
cmp
fcomp
enter
xor
cmp
out
pushf
stos
and
(bad)
pop
fiadd
int
jmp
xor
stos
mov
gs
gs
or
iret
dec
jecxz
pop
jge
sub
arpl
fadd
sbb
ss
fld
sbb
test
cld
mov
imul
shr
jns
in
adc
and
mov
enter
sbb
test
pop
dec
adc
or
mov
adc
cwde
ds
fs
addr16
cmp
push
jns
(bad)
pop
mov
xchg
fidiv
sub
ret
xchg
mov
lahf
or
ins
pop
xor
popf
stc
pop
xor
mov
and
jno
push
(bad)
enter
into
inc
sahf
test
push
and
ins
push
dec
out
pop
cmp
push
movs
pushf
shr
retf
sub
les
loope
retf
das
sahf
cmp
loope
cmp
retf
jmp
in
aaa
shr
stos
and
or
mov
repnz
cwde
jecxz
repz
sbb
mov
popf
icebp
test
sti
fucomi
sub
rol
xor
jg
sub
xchg
inc
lea
and
cdq
mov
dec
xchg
mov
neg
mov
adc
push
shl
(bad)
jle
add
fild
jg
xchg
ss
inc
sbb
push
cmp
dec
xchg
inc
lock
jg
test
mov
fmul
outs
nop
mov
mov
sbb
aas
fdiv
mov
fwait
test
push
fsubr
je
and
test
cmp
push
sbb
mov
repnz
inc
dec
in
loop
pop
dec
push
adc
adc
or
adc
mov
xor
push
xchg
fcom
cwde
leave
nop
mov
xchg
dec
movs
push
ret
pop
inc
dec
es
lahf
cmp
push
push
leave
fstp
stos
mov
inc
dec
call
std
shl
cmp
or
mov
shr
mov
movs
mov
cmp
mov
mov
jp
cli
fld
out
test
xor
and
das
and
aas
push
fisub
mov
aas
sbb
push
(bad)
xchg
inc
jns
int3
mov
or
pop
outs
sahf
or
in
or
push
(bad)
mov
pop
mov
jb
mov
int3
loope
and
mov
addr16
movs
add
fsub
and
js
pop
retf
pop
adc
jns
nop
rcl
test
jmp
leave
inc
jg
jmp
push
mov
push
inc
ror
aad
jg
pop
inc
adc
hlt
es
xchg
jne
aas
sub
sub
cmp
hlt
xor
(bad)
adc
inc
js
loop
das
jns
enter
cmps
sbb
mov
ss
xchg
push
mov
mov
and
les
adc
adc
and
adc
lahf
inc
popf
jne
fiadd
xor
jns
and
stos
rep
clc
sahf
dec
popf
bound
mov
jns
scas
rol
call
mov
test
sbb
pop
outs
inc
xchg
mov
xchg
mov
scas
sub
sbb
(bad)
fst
jb
dec
mov
xor
sahf
cwd
pop
dec
lods
bound
arpl
adc
pop
xor
mov
enter
mov
cmps
leave
mov
cmps
out
test
aaa
test
les
mov
mov
adc
movs
lods
jo
test
mov
in
es
hlt
in
adc
in
xchg
mov
dec
pop
mov
sbb
add
inc
pop
and
cmc
ror
rcl
mov
sub
cmps
mov
and
pop
adc
jno
bound
outs
mov
pop
shr
sub
pop
pop
push
ror
movs
dec
mov
lods
sbb
cmps
(bad)
or
sub
inc
cli
or
dec
or
dec
je
out
fs
mov
dec
pop
inc
dec
fidiv
test
aam
pop
push
dec
mov
jmp
pop
inc
pop
inc
cmp
(bad)
jp
rol
mov
scas
mov
xchg
ret
pop
adc
adc
in
daa
jb
or
fld
add
daa
mov
xor
xchg
jmp
mov
push
xchg
or
and
or
ret
add
pop
pop
inc
push
push
push
cmp
dec
test
or
mov
inc
jle
or
ja
test
adc
jo
sub
push
mov
and
gs
or
std
add
and
retf
xlat
push
cmc
push
xor
xchg
lahf
sbb
push
adc
mov
pop
sub
pop
stc
or
mov
or
das
fstp
(bad)
out
das
pop
int3
lock
push
(bad)
iret
test
jno
call
mov
mov
mov
pop
sbb
je
mov
dec
pop
adc
js
push
add
leave
outs
add
int3
mov
test
pop
mov
iret
lahf
das
(bad)
das
or
sti
pop
in
cs
and
test
out
mov
sub
push
mov
loope
das
aaa
pop
xchg
out
mov
mov
ror
xor
and
mov
mov
add
fcomp
outs
mov
add
das
enter
xchg
imul
add
lea
mov
jle
xchg
fmul
rol
sbb
jns
mov
xor
das
mov
xchg
leave
push
in
push
inc
jmp
dec
lock
cmps
fsub
aas
mov
es
sub
fnstcw
xchg
xchg
xor
hlt
adc
cdq
xchg
in
sub
das
dec
(bad)
int3
mov
jmp
cld
mov
pop
or
and
js
aas
dec
pop
aaa
loop
repnz
je
outs
sub
pop
addr16
sub
dec
cmp
xor
jge
inc
les
sub
call
xchg
sbb
push
test
ins
sbb
daa
cdq
cs
push
jl
movs
pop
xor
les
lods
adc
in
and
push
cmp
mov
mov
xor
fadd
dec
add
in
or
pop
in
pop
call
push
xchg
push
loopne
mov
call
ficom
hlt
stos
mov
ret
outs
mov
mov
and
jns
and
dec
and
lods
inc
loop
stos
dec
fimul
scas
call
ja
add
fisubr
leave
pop
ret
cmp
hlt
and
inc
popa
and
test
adc
retf
leave
mov
add
adc
popa
std
adc
cmp
inc
add
sbb
repz
push
add
pusha
movs
mov
jno
mov
sub
test
ins
xor
frstor
cwde
pop
push
or
(bad)
jo
scas
pop
in
fldcw
fild
test
cmc
lods
add
jae
mov
inc
mov
test
sub
es
cdq
sub
pop
int
sub
daa
sub
inc
ss
test
xchg
mov
adc
or
sub
and
movs
xchg
cmp
xchg
add
adc
mov
pop
and
adc
loopne
int
cld
test
add
adc
pop
push
pop
adc
mov
fldcw
pop
aam
adc
add
lahf
call
dec
adc
mov
inc
pop
add
adc
mov
xlat
dec
lahf
arpl
dec
lock
mov
jg
test
jl
mov
shr
mov
(bad)
(bad)
cld
mov
scas
lock
sub
sbb
cld
leave
add
add
mov
rcr
xchg
retf
mov
inc
add
xchg
push
adc
in
pushf
call
push
retf
sub
push
jl
xchg
sbb
daa
mov
mov
sahf
clc
fsqrt
out
mov
mov
sub
sbb
fcomp
sub
push
cmps
sti
xchg
or
jb
fucomp
in
es
xor
loope
fdivrp
pushf
sub
push
pop
adc
pop
cmp
adc
cmps
cmp
les
inc
pop
repnz
(bad)
fadd
outs
push
jg
sub
sub
lahf
mov
mov
mov
push
inc
jg
lods
hlt
stos
stos
in
sub
shrd
mov
mov
scas
out
xlat
movs
cmp
lea
in
sub
loop
xor
push
push
or
jecxz
sub
test
jle
mov
sub
or
mov
dec
out
xchg
or
mov
lock
cmp
push
sbb
xchg
(bad)
or
sbb
ficom
movs
jnp
dec
jae
sbb
in
ficomp
mov
test
dec
enter
je
les
movs
pop
sub
out
add
add
fisttp
dec
mov
aad
ret
(bad)
out
cmps
xor
ins
cmps
lods
and
and
sahf
mov
inc
fmul
jbe
push
rcl
outs
or
les
mov
daa
fnstenv
in
xchg
fs
inc
push
movs
into
adc
and
sub
jns
js
mov
sbb
cmc
mov
loopne
mov
ins
mov
xchg
cmp
das
fs
inc
dec
test
xlat
ins
arpl
cmp
fsubr
xor
dec
push
sub
test
xor
push
cmp
fld
push
cmc
xchg
push
data16
(bad)
push
push
emms
jecxz
leave
xchg
add
push
adc
movs
retf
jg
push
dec
enter
outs
jp
mov
leave
and
ret
pop
mov
sub
and
pop
test
ds
xchg
inc
clc
lea
sub
xor
jo
xchg
cld
mov
or
pop
sub
pop
js
rcr
rcl
adc
xor
std
jb
mov
mov
sbb
in
xchg
aaa
xor
xchg
add
mov
and
out
mov
add
pushf
push
loope
mov
mov
ins
test
or
push
ins
bound
xchg
(bad)
shr
or
adc
add
adc
push
adc
inc
mov
mov
je
(bad)
adc
imul
(bad)
int3
test
jne
dec
mov
ret
inc
ins
inc
fwait
adc
lds
jl
jbe
loop
or
and
sub
mov
jne
lea
in
dec
fdivr
ret
test
xchg
mov
call
sahf
jnp
mov
(bad)
xchg
mov
call
inc
js
mov
addr16
(bad)
fwait
in
sbb
imul
jb
dec
xor
test
add
mov
push
je
ret
outs
mov
adc
push
cmps
mov
dec
xchg
mov
fisubr
xchg
daa
inc
addr16
out
push
adc
dec
scas
js
test
leave
std
mov
adc
dec
sahf
mov
inc
sub
mov
and
xchg
push
and
int3
push
push
adc
adc
pop
out
lds
call
inc
xor
cmp
push
daa
outs
stos
or
sub
dec
pushf
gs
pop
rcr
sbb
inc
cmp
jne
xchg
sub
int3
sub
jbe
push
enter
mov
je
mov
cdq
idiv
cs
adc
fisub
std
les
(bad)
outs
test
js
shr
ret
pop
jmp
mov
les
dec
(bad)
or
xchg
shl
stos
adc
movs
add
fwait
stc
dec
inc
adc
add
arpl
cmps
mov
into
pop
xor
bound
in
and
call
pop
adc
(bad)
enter
and
fs
popf
mov
push
div
inc
jp
sub
cmp
jae
sub
jle
cmp
cdq
pop
inc
rol
(bad)
xor
lahf
pop
(bad)
push
es
mov
xchg
pop
cmps
daa
sbb
lods
imul
pop
das
jle
adc
jg
iret
rcl
jo
mov
adc
pop
or
mov
dec
inc
icebp
rol
push
sbb
cmp
jns
(bad)
rol
dec
sbb
mov
js
ins
mov
jecxz
inc
ret
pop
cmp
push
shl
das
jae
in
test
and
inc
popa
(bad)
std
mov
sbb
mov
icebp
push
mov
hlt
arpl
cld
aam
dec
pop
int
inc
sub
repnz
sbb
mov
sub
push
clc
add
daa
adc
add
sub
lahf
mov
in
test
or
cmps
adc
adc
in
xchg
mov
mov
loopne
pop
xchg
int
push
lods
mov
xchg
ret
add
dec
popa
repnz
jmp
stos
jnp
push
cmc
(bad)
popa
push
push
adc
xchg
aam
movs
pop
xchg
sub
cli
jecxz
adc
imul
fist
push
jecxz
into
bnd
in
stc
int
das
rcr
and
ins
in
sub
shl
inc
cwde
daa
ja
int
inc
shl
ficomp
cmp
jnp
add
jne
add
movs
popa
inc
mov
daa
popa
adc
push
jbe
xchg
xchg
js
push
repnz
dec
mov
js
mov
jns
fisttp
and
or
movs
enter
mov
cli
inc
movs
rol
std
outs
sbb
into
inc
pushf
pop
retf
dec
data16
mov
std
call
fist
dec
(bad)
retf
call
add
je
adc
push
int3
clc
rcr
sbb
jo
xchg
sbb
nop
xchg
jbe
adc
xor
xchg
mov
iret
mov
push
and
or
or
and
mov
ins
loopne
xor
in
xor
inc
std
inc
shl
and
push
cmp
sbb
mov
lods
int3
test
pause
mov
shl
clc
std
jo
mov
dec
mov
pushf
sbb
fidiv
mov
pop
push
adc
fwait
dec
mov
(bad)
pop
jecxz
(bad)
loopne
out
sub
jb
(bad)
shr
das
pop
into
jnp
fbld
(bad)
lea
mov
cwde
test
ja
dec
or
mov
icebp
mov
test
popa
mov
sub
aam
xlat
xchg
ror
mov
fsubr
or
inc
sub
cmp
pop
call
cmp
cli
mov
fsub
ins
cli
adc
dec
loope
dec
mov
push
xor
repnz
daa
fnsave
mov
das
pop
pop
lea
outs
and
pop
mov
iret
scas
xlat
ror
or
fmul
iret
add
push
imul
cmp
rcr
xor
cmp
sbb
fnstsw
dec
cdq
push
jo
sub
imul
movs
cmp
mov
ret
int
or
or
ror
rcr
jmp
les
add
sbb
inc
and
pop
ja
mov
xchg
mov
in
(bad)
movs
dec
mov
cmps
inc
sub
in
mov
movs
clc
dec
inc
inc
dec
and
pop
in
push
pop
adc
dec
cmp
push
les
nop
stos
mov
mov
stc
mov
outs
mov
xchg
call
icebp
adc
xchg
mov
dec
cli
sub
cmp
in
dec
cmc
test
(bad)
fst
in
or
popa
inc
mov
lea
fadd
add
rcl
xchg
xor
(bad)
stos
out
cmp
lea
sbb
mov
adc
hlt
and
into
test
xor
fucomp
inc
push
dec
call
or
mov
mul
es
ds
jecxz
imul
dec
std
add
fs
iret
jno
dec
and
imul
outs
loop
pop
push
jecxz
in
push
aaa
push
cmp
push
jle
in
int
mov
enter
pop
(bad)
scas
push
xlat
mov
cmps
cmps
call
movs
and
inc
in
jge
sbb
xchg
imul
rol
cli
xchg
xchg
xchg
and
mov
test
das
jle
jl
sbb
dec
mov
push
test
out
hlt
ja
lods
(bad)
mov
out
cmp
(bad)
lods
js
inc
es
mov
mov
xchg
xor
mov
iret
out
outs
movs
ja
pop
xchg
push
cvtps2pd
push
or
jae
and
cmps
mov
hlt
jp
adc
or
aad
and
push
push
xchg
adc
cmps
movs
mov
js
add
rcr
lea
or
and
push
mov
pop
adc
jp
xlat
inc
jne
adc
neg
or
jae
loop
jo
out
xor
sub
adc
mov
ror
dec
shl
xchg
xlat
jle
sbb
pop
out
gs
popf
mov
and
loop
daa
xchg
sahf
fdiv
js
mov
mov
stos
xor
fnstsw
pop
(bad)
mov
jns
sbb
jecxz
fld
dec
mov
sbb
mov
ins
xchg
ret
jb
mov
sbb
pop
adc
xchg
mov
push
push
sbb
cdq
pop
ret
cmp
imul
mov
nop
daa
pop
mov
(bad)
xchg
xchg
lock
dec
das
es
fisttp
int3
mov
mov
jns
inc
popf
push
cmc
imul
cwde
mov
ins
mov
clc
add
test
fwait
cdq
cmp
mov
lds
mov
jnp
jns
repz
es
jge
pop
xor
lea
sbb
daa
xchg
mov
or
lock
scas
xchg
mov
imul
scas
or
mov
ja
jno
push
inc
fmul
cmc
aas
push
(bad)
aas
pop
push
adc
shr
shl
pop
add
sbb
call
mov
sub
ffreep
and
push
jne
jge
or
cmp
inc
push
cmp
pusha
cmps
ins
ror
pop
pop
inc
inc
mov
lods
push
in
mov
mov
or
jg
cmps
push
push
mov
aas
mov
ficom
rcr
sbb
sub
inc
mov
jns
cmp
jae
and
xchg
xor
das
mov
push
sbb
arpl
sub
pop
jp
and
push
fisub
fucom
aaa
pop
inc
shr
daa
ficom
retf
jne
dec
loopne
arpl
jnp
inc
or
iret
mov
xchg
repnz
mov
mov
dec
es
das
fs
push
xchg
jg
mov
xchg
fisub
mov
gs
loopne
jge
loope
jno
jno
and
jmp
ficom
and
inc
mov
lods
(bad)
aam
jl
pop
push
fwait
push
(bad)
jnp
into
pop
daa
inc
add
xchg
in
sbb
mov
out
cmp
fist
mov
lahf
jg
jne
or
push
adc
call
aad
push
cs
hlt
or
(bad)
sbb
dec
mov
dec
fnstsw
dec
jl
cmp
cmp
or
loop
add
mov
test
push
sub
ret
inc
and
sub
push
push
lea
xchg
jecxz
and
stos
test
call
(bad)
stos
xor
dec
sub
pop
call
push
push
aaa
popa
dec
call
xchg
je
dec
jnp
es
ror
mov
fmul
(bad)
mov
inc
xchg
cli
xchg
jno
ins
movs
lock
sbb
push
pop
cdq
mov
fs
mov
dec
jne
cmps
es
dec
repnz
pop
xchg
enter
pusha
repz
jbe
mov
push
inc
retf
fisubr
jmp
dec
(bad)
lds
popf
into
cmp
sub
xlat
je
xor
cmp
mov
jnp
dec
leave
push
dec
xchg
mov
mov
jg
vandnps
inc
es
pop
mov
push
stos
adc
and
outs
mov
push
lahf
pop
xor
push
fnsave
xchg
or
sub
mov
mov
inc
js
and
fs
and
pop
loop
jne
sub
xchg
add
sub
xor
jle
inc
push
popf
dec
in
and
fld
mov
stos
cmc
movs
push
mov
sbb
dec
sub
fldcw
xchg
dec
test
mov
jns
dec
sbb
shl
or
and
test
lahf
int3
fdivrp
xor
jle
sahf
and
call
pop
push
cmps
sbb
xor
das
inc
and
nop
or
push
mov
mov
stos
fsubrp
inc
cwde
into
xor
ror
stos
mov
aam
ret
push
pop
sar
in
sub
mov
scas
sbb
imul
cmps
or
(bad)
xchg
outs
mov
cmps
xchg
cmp
(bad)
and
mov
push
in
sbb
xchg
and
push
xchg
xchg
cmps
fdivp
ins
push
and
xchg
mov
mov
mov
xchg
lods
xchg
popf
pushf
jmp
xor
(bad)
in
lea
xor
imul
sbb
pop
sbb
enter
enter
sbb
push
sbb
mov
mov
push
inc
outs
je
push
jle
mov
cmp
in
std
inc
std
sbb
mov
jae
les
adc
jb
retf
(bad)
fnstsw
push
mov
jecxz
xchg
in
leave
mov
mov
mov
or
adc
and
(bad)
jmp
or
in
test
or
jns
(bad)
cs
adc
test
cmp
jle
dec
cmp
in
in
out
stos
(bad)
cmp
mov
(bad)
jle
jp
sub
push
(bad)
jbe
cmc
cmc
arpl
data16
jge
mov
cmp
mov
stos
mov
cli
icebp
adc
cld
adc
or
aas
cld
inc
bound
stos
mov
cdq
mov
xchg
test
dec
mov
lea
fst
imul
xchg
and
dec
pop
xchg
jbe
mov
xchg
jmp
mov
movs
xchg
xchg
xor
ja
stc
mov
xor
fild
or
dec
test
mov
test
mov
mov
in
stos
hlt
lahf
in
data16
dec
(bad)
hlt
jmp
ja
or
out
pushf
jbe
stos
pop
js
mov
push
call
jge
pop
inc
xchg
sub
loop
sub
xchg
mov
cdq
clc
mov
sahf
push
jo
loopne
inc
sub
in
and
push
out
fadd
aad
leave
pop
inc
jge
jle
call
fldcw
fisubr
cmc
bswap
hlt
cmps
jns
mov
pop
fwait
jbe
adc
arpl
aad
pop
ss
ficom
movs
pop
pop
cli
(bad)
cmc
sar
lahf
mov
sub
push
jmp
mov
sbb
mov
mov
xor
mov
xchg
lods
mov
aaa
test
mov
mov
dec
jecxz
push
push
xor
or
mov
mov
xchg
sti
sub
adc
je
imul
test
mov
xchg
push
fisttp
xchg
push
inc
sti
outs
ins
adc
pop
pop
jo
mov
je
pop
inc
and
cs
jbe
test
jno
pop
xchg
xor
daa
out
std
stos
pushf
inc
scas
mov
lods
mov
and
test
jecxz
int
in
or
inc
out
inc
rcl
std
(bad)
in
arpl
add
outs
jo
sbb
pop
pop
out
push
xor
iret
pop
pop
xchg
out
xchg
pushf
xchg
in
mov
or
iret
aad
lea
fimul
sbb
mov
pop
jecxz
cmp
mov
fs
rcr
cwde
dec
outs
movs
out
mov
aam
push
dec
or
fiadd
add
mov
rcl
add
(bad)
adc
mov
mov
sbb
cmp
sar
(bad)
jno
lea
jmp
mov
shl
out
rol
fstp
add
pop
pop
pop
ret
xchg
mov
dec
xchg
push
addr16
mov
call
sbb
ret
loopne
scas
mov
leave
inc
mov
test
aad
mov
or
jecxz
add
xchg
sbb
enter
jns
and
in
inc
and
pop
push
ret
inc
ret
mov
push
inc
jbe
pusha
sub
fwait
call
cmp
cmps
mov
retf
icebp
jmp
jae
push
push
fdiv
mov
or
stos
loope
pop
iret
add
push
add
loop
aas
lahf
add
push
popa
lea
cmp
and
ds
cmp
jae
xchg
jo
and
ret
inc
jno
cmp
sbb
mov
jns
or
test
pop
pop
sti
and
push
in
jp
shr
jne
cmp
test
in
ror
cli
inc
(bad)
or
mov
lods
fidiv
cmp
mov
add
rcr
cmc
arpl
retf
adc
push
dec
test
outs
cmp
jl
outs
rcr
in
repz
sbb
push
jmp
aam
sti
in
fsubr
icebp
push
or
push
stos
mov
jp
or
ja
cmp
je
in
movs
iret
cmp
push
adc
loopne
jo
lea
int3
jmp
(bad)
pusha
xor
out
sub
cmp
pop
pop
js
sti
popf
pusha
dec
mov
pop
loopne
and
inc
sub
retf
adc
ds
jmp
clc
cmp
in
test
jns
jae
pop
ror
retf
inc
and
std
fsubr
ror
mov
xchg
gs
push
cs
rol
mov
imul
idiv
cmps
outs
cmps
mov
adc
jmp
addr16
pop
and
sub
in
iret
bound
jle
fwait
mov
and
sub
push
pop
lods
repz
ins
outs
cli
lods
dec
dec
movs
add
mov
sbb
icebp
fimul
sub
cli
sbb
jns
xchg
scas
push
je
cmps
addr16
arpl
mov
fwait
mov
shr
cmc
imul
in
mov
or
jno
and
outs
mov
jno
clc
pop
dec
leave
dec
add
cwde
loope
pop
or
pop
mov
(bad)
pop
ja
enter
xchg
aas
outs
lahf
call
mov
out
sub
stos
(bad)
cwde
or
mov
mov
mov
adc
cmc
mov
push
cmps
in
test
add
jnp
daa
popf
aam
mov
scas
neg
mov
jmp
and
jo
push
lea
outs
fist
cmp
loopne
rcl
or
ss
cmp
into
pop
inc
(bad)
pushf
(bad)
mov
in
adc
mov
ins
fimul
js
call
pop
inc
inc
hlt
mov
sub
add
sub
je
stc
enter
and
(bad)
xchg
sub
mov
jns
sbb
(bad)
cld
xchg
fild
inc
pop
stos
pop
pop
lea
inc
jne
push
sub
cmp
pop
push
jecxz
cmp
pmaxub
or
sub
cli
cld
cdq
and
addr16
mov
xor
(bad)
retf
inc
pop
push
push
mov
div
fiadd
pop
dec
jae
pop
inc
jecxz
mov
hlt
and
mov
aad
loope
test
mov
ret
stc
sbb
jo
test
aas
add
sar
shl
dec
lds
jecxz
hlt
retf
mov
icebp
jmp
sub
out
jmp
inc
mov
xor
das
(bad)
out
xor
ins
push
cs
sbb
and
mov
in
mov
aam
aam
fadd
in
xor
mov
jnp
cmp
sub
out
sbb
ss
mov
mov
mov
or
push
pop
and
sti
adc
sbb
push
ins
mov
iret
sbb
or
(bad)
nop
outs
hlt
xor
push
aad
fistp
call
stos
(bad)
sbb
popa
es
div
ror
mov
mov
jae
sub
jae
iret
pop
adc
js
mov
mov
nop
mov
mov
(bad)
jmp
xlat
loopne
sar
jmp
mov
push
(bad)
sti
cmp
das
out
fld
cmp
test
and
fsubr
mov
cmc
pushf
xor
xchg
mov
lea
cmp
fistp
xor
cmps
les
stc
(bad)
sahf
mov
push
sub
mov
ucomiss
or
cmps
pusha
cs
rcr
mov
pop
pop
sub
loop
cmps
ss
or
xchg
shl
xor
cmp
inc
aam
cdq
pop
retf
es
push
repnz
cli
or
push
std
pop
dec
sbb
xor
je
add
adc
cmp
pop
xchg
rcl
jbe
and
jle
pop
dec
jmp
or
xlat
repnz
mov
idiv
iret
pop
sub
lds
mov
sub
sub
shl
cld
fistp
mov
scas
jo
pop
cs
into
xchg
mov
outs
or
or
adc
in
fimul
jle
out
and
es
jg
into
movs
push
and
adc
in
dec
jmp
and
add
je
xchg
mov
cmp
or
jne
sub
or
rol
push
lea
dec
jmp
dec
out
jmp
fwait
jae
in
cli
mov
arpl
adc
not
mov
adc
ror
adc
or
mov
jmp
pop
aad
cmp
loope
loopne
jne
inc
add
scas
pop
fwait
push
xor
push
xlat
mov
clc
ds
mov
andnps
xchg
sub
cmp
loope
mov
mov
xor
push
les
cwde
movs
xor
call
xchg
imul
out
push
(bad)
cmp
mul
mov
xor
xchg
dec
or
mov
sub
shr
mov
outs
xor
clc
out
scas
jmp
mov
loop
addr16
lds
paddusw
jnp
pop
or
arpl
inc
sbb
push
cld
loop
mov
stc
in
dec
ja
sbb
pop
mov
hlt
ret
dec
and
std
xchg
pop
mov
lahf
mov
or
and
std
mov
xlat
fst
das
std
adc
mov
jo
xchg
fnstsw
mov
dec
adc
push
stos
inc
dec
sahf
addr16
popf
aam
mov
imul
push
pop
mov
xor
shr
cmp
jmp
stc
push
movs
movs
(bad)
jnp
sbb
xchg
mov
into
aas
mov
int3
or
bound
or
cwde
add
dec
inc
test
or
ins
or
sahf
inc
push
hlt
outs
jnp
outs
(bad)
imul
jl
add
cmps
out
call
jne
xchg
push
cmps
push
xchg
cmp
or
sti
fldcw
mov
inc
out
pop
aam
es
mov
test
mov
popa
sub
or
push
or
stos
sub
push
int
mov
xchg
int
pop
add
mov
mov
sub
mov
pop
mov
xchg
(bad)
jnp
enter
inc
imul
mov
adc
push
shl
vmovd
je
mov
push
or
(bad)
leave
mov
mov
ret
std
jae
dec
push
stos
out
inc
adc
(bad)
int3
inc
mov
xor
xor
or
icebp
scas
pop
cmp
push
imul
fistp
addr16
pop
enter
fiadd
pop
loope
neg
sti
stos
ins
in
es
(bad)
fcos
dec
mov
and
icebp
into
mov
ja
pop
jecxz
xchg
mov
sub
mov
cmp
in
mov
or
pop
sub
push
jmp
mov
inc
imul
xor
add
mov
lea
xchg
aas
ficomp
in
ja
pop
xlat
sbb
imul
sub
(bad)
sahf
scas
scas
ja
int
mov
push
inc
mov
les
fistp
in
in
leave
and
mov
addr16
cld
pop
and
and
pop
ins
retf
(bad)
cmc
in
js
lahf
test
ja
or
xchg
jbe
fdiv
sar
int
or
push
das
xor
leave
lahf
rcl
(bad)
jno
push
mov
fcomip
or
xor
mov
add
jmp
(bad)
cmps
mov
fadd
jbe
mov
mov
cmp
jecxz
mov
mov
gs
std
or
stos
je
in
outs
add
mov
jmp
adc
mov
ds
arpl
jecxz
add
je
cmp
rcr
ret
sahf
or
movs
jns
popa
(bad)
jmp
sbb
push
in
lds
sub
add
mov
xchg
jmp
into
inc
cmp
pop
push
pop
cmp
push
mov
mov
jmp
pop
loopne
mov
btc
fcomip
ja
dec
mul
icebp
(bad)
and
clc
sbb
or
jmp
(bad)
jge
add
mov
and
jp
stos
mov
out
push
add
mov
icebp
or
jnp
cmp
inc
call
std
cld
ja
sahf
mov
add
or
dec
mov
hlt
div
mov
ja
and
cwde
mov
pop
mov
dec
hlt
dec
jge
jle
pinsrw
jl
add
sbb
cmc
pop
cmp
mov
arpl
inc
xor
jns
sub
jecxz
iret
push
outs
and
aas
in
outs
mov
repnz
push
(bad)
and
add
and
jmp
std
das
aam
aad
fincstp
cli
mov
stos
add
stos
push
xchg
jl
ja
push
hlt
ret
pop
or
(bad)
push
pop
imul
idiv
or
stc
mov
push
movs
cmp
inc
push
sbb
std
mov
imul
push
mov
pushf
push
pop
pop
test
xchg
rol
jns
dec
pop
cmove
jo
xchg
dec
sbb
pop
jge
(bad)
int3
call
jl
mov
pop
mov
add
xchg
jecxz
clc
xchg
mov
pop
jae
cdq
push
(bad)
inc
push
pop
repz
inc
push
inc
cld
sub
mov
mov
and
shl
sub
xor
adc
mov
jmp
das
imul
rol
xor
stc
bound
nop
test
xor
jle
xchg
stos
mov
(bad)
ficomp
std
push
rol
inc
repz
outs
mov
jbe
icebp
mov
daa
ja
sub
call
out
dec
mov
mov
sbb
sub
inc
hlt
or
cmp
and
(bad)
arpl
cmp
fdivr
repz
btr
fdiv
mov
int3
inc
loopne
aam
mov
addr16
ret
call
dec
inc
push
jnp
mov
jle
pop
sbb
dec
cld
dec
sub
and
mov
add
sub
sub
mov
int
pop
cmp
sub
jmp
or
je
pop
sub
fistp
jmp
mov
dec
mov
lods
jne
arpl
sub
call
loop
icebp
mov
fwait
icebp
retf
xchg
dec
hlt
xor
(bad)
std
(bad)
xor
or
std
xor
hlt
lahf
imul
xchg
sti
sbb
dec
and
fstp
jmp
shl
dec
jg
mov
jl
aas
pop
scas
mov
rcr
mov
bnd
add
cmp
mov
adc
jle
lock
xor
or
or
aam
in
sub
out
adc
and
sti
add
pop
mov
jl
dec
dec
cdq
cdq
addr16
mov
arpl
or
out
imul
cmp
popa
adc
idiv
(bad)
std
popa
mov
outs
jb
jae
retf
out
test
xor
cld
sub
sbb
sti
fdiv
addr16
or
hlt
push
ds
sub
outs
pop
jl
test
popa
aad
push
pop
jge
cld
bound
push
cld
xor
push
lahf
imul
mov
cmp
mov
adc
dec
cmc
in
bound
pop
xor
sti
mov
add
pop
std
push
xor
in
mov
cmp
pop
xor
loop
ds
and
or
xchg
jg
or
stos
xor
pop
mov
mov
shl
xlat
jmp
xchg
jnp
add
lods
lds
push
(bad)
push
imul
xor
sbb
push
cs
(bad)
sub
(bad)
ins
sub
(bad)
fmulp
sbb
cli
inc
jl
jbe
retf
add
or
xor
(bad)
aas
ins
jae
loop
in
xor
sti
imul
sti
jmp
push
pop
loop
aaa
or
adc
pop
pushf
ficomp
mov
pop
adc
mov
daa
xor
icebp
(bad)
dec
sar
(bad)
xchg
lea
sub
call
mov
cwde
sbb
mov
push
in
pop
cwde
push
or
repz
add
sbb
cmps
or
jmp
add
popf
pop
push
cli
(bad)
loop
and
push
test
or
push
xor
jo
lahf
mov
sub
xor
cmp
das
or
mov
cld
xchg
inc
in
inc
mov
sub
movs
das
dec
psrad
inc
arpl
pop
pop
mov
xor
icebp
std
ficomp
in
loop
jl
mov
pop
mov
repnz
adc
mov
lods
outs
jle
add
ror
(bad)
fcom
inc
jl
dec
das
in
scas
iret
jmp
mov
sbb
ret
in
push
mov
adc
mov
iret
test
jae
out
stos
sbb
mov
jmp
dec
aas
ss
sbb
das
jbe
xor
mov
lahf
icebp
rcl
scas
hlt
push
test
sub
loop
sbb
xor
jp
ja
out
push
pop
out
mov
or
fnstcw
leave
das
jmp
mov
add
jo
outs
cdq
fs
or
(bad)
fistp
dec
jmp
xchg
lahf
sub
cmp
lods
scas
mov
sti
xor
aad
hlt
clc
mov
in
pop
xchg
push
adc
xor
jmp
mul
add
das
jae
push
xor
iret
loope
pushf
push
mov
cmp
jle
pop
bound
iret
and
push
int
dec
lods
jg
push
adc
mov
sbb
and
add
mov
xchg
fcmovne
adc
ss
ror
cli
xor
jg
xlat
pop
mov
fsub
dec
jnp
cs
(bad)
or
js
in
push
outs
cmp
xor
das
dec
bound
mov
add
mov
jmp
jle
outs
(bad)
ror
scas
mov
ret
sahf
mov
iret
ror
cli
cmps
ins
outs
xor
sar
cmps
fs
frstor
in
jne
in
ret
add
outs
aas
mov
(bad)
out
add
xchg
mov
ins
inc
std
mov
push
mov
mov
push
das
cmp
push
inc
cli
sub
xchg
pop
hlt
js
dec
(bad)
ja
ret
fild
jl
ins
jg
retf
(bad)
jnp
int3
mov
add
fnstsw
sahf
cli
cs
inc
xchg
cmp
ins
inc
pushf
sahf
inc
dec
(bad)
ror
hlt
movs
pop
das
arpl
and
dec
sbb
(bad)
(bad)
dec
test
or
out
inc
adc
jbe
add
rcl
pop
mov
sar
scas
mov
inc
cmp
mov
(bad)
cli
push
pop
jne
fbld
cwde
ss
mov
scas
pop
ds
call
ja
or
pop
inc
aam
mov
shr
std
ds
cmps
fstp
call
sti
xchg
in
lods
dec
pop
aam
das
pop
repz
imul
fs
aam
cdq
mov
xchg
lock
pop
scas
addr16
popa
gs
lock
ret
jae
hlt
fild
xchg
in
xlat
jle
sahf
lahf
je
cld
ds
scas
xor
mul
std
xor
ja
sub
xor
(bad)
bound
cmc
fisttp
sbb
jl
push
push
add
loopne
clc
sub
jp
pushf
xor
mov
fdiv
mov
popa
jmp
retf
out
(bad)
aas
mov
mov
das
std
lods
popa
sub
daa
repz
cwde
xor
out
cmp
fmul
fistp
add
cmps
xor
scas
out
jmp
xchg
mov
inc
(bad)
daa
loop
push
popf
pop
call
pop
jo
xchg
add
add
add
add
or
aad
push
lea
mov
test
xor
pushf
test
jecxz
mov
retf
rcl
and
mov
sub
mov
rcl
(bad)
retf
jmp
gs
imul
test
inc
in
mov
or
sub
xchg
add
adc
lods
push
ss
or
lea
ja
mov
jmp
dec
mov
mov
push
or
and
sub
xlat
and
das
push
sbb
in
sbb
fwait
cmp
jmp
xor
pop
cmp
and
out
out
add
std
xchg
jl
pop
fist
add
or
add
xchg
(bad)
dec
call
jecxz
or
das
or
iret
fnstsw
push
jl
enter
(bad)
ins
ror
push
div
adc
cmps
mov
sar
mov
cmp
iret
popa
cmps
add
inc
pusha
int
mov
gs
adc
jg
or
sub
mov
(bad)
mov
mov
inc
jp
pop
sbb
cli
add
sbb
pop
jno
mov
mov
and
cmp
arpl
(bad)
cmp
xchg
mov
mov
add
pushf
nop
lock
sub
pusha
lods
fcom
lock
retf
xchg
into
sub
inc
and
mov
and
pushf
sub
into
rol
jnp
fisttp
js
jge
rcr
push
call
mov
cdq
pop
dec
retf
stos
sub
sbb
sbb
stos
aas
clc
mov
xchg
xchg
inc
mov
into
(bad)
cli
lods
adc
daa
push
sbb
xchg
(bad)
pop
mov
fcom
mov
cmp
or
out
outs
mov
fs
push
push
dec
xchg
fisub
inc
jb
cmp
sar
cmps
pop
ret
nop
jg
arpl
aas
pop
xchg
jo
daa
popf
ins
adc
loope
cs
sbb
adc
xchg
and
push
into
or
mov
into
cmps
xor
test
lea
xlat
pop
and
fwait
mov
pop
pop
and
jno
mov
icebp
pop
cmps
sti
outs
push
icebp
cmp
repnz
repz
rcr
jecxz
popf
jge
push
pushf
jns
cs
retf
imul
mov
ds
jnp
clc
adc
sbb
and
mov
dec
sbb
jne
ds
int3
pop
retf
repz
add
out
dec
bound
sbb
mov
iret
mov
xchg
xor
and
pop
inc
dec
jne
cmp
mov
xchg
(bad)
pop
jns
imul
cmp
push
outs
jns
mov
fstp
mov
fcomp
mov
ror
leave
mov
adc
fisub
pusha
sub
lds
mov
xor
nop
fldenv
inc
outs
mov
nop
or
ja
cmc
or
int
pop
fild
fucomip
jl
(bad)
pop
mov
jo
fst
int3
push
data16
ret
xor
mov
les
push
outs
ja
xor
ja
cdq
ror
repnz
jge
cmc
push
aas
jge
mov
push
shr
lods
jp
mov
mov
out
in
or
(bad)
arpl
sbb
cmp
cwde
xchg
cmp
and
test
aaa
add
add
cwde
dec
add
fimul
outs
dec
fisttp
into
push
into
je
sub
adc
ret
pop
mov
sbb
mov
div
ja
sub
mov
inc
sub
xchg
cmp
nop
and
in
cmps
call
ds
stc
dec
mul
shl
inc
aad
lods
into
mov
mov
push
jmp
push
fld
(bad)
and
dec
or
push
jae
or
xchg
jb
dec
xor
add
pop
mov
enter
nop
push
pop
es
mov
ins
int3
ret
(bad)
data16
outs
jmp
ds
cmp
mov
mov
scas
cmovnp
outs
sub
mov
sbb
mov
cwde
pop
dec
ds
dec
out
jle
mov
in
in
inc
sub
mov
enter
retf
push
xor
jge
cmp
dec
gs
jmp
js
xor
nop
jge
movs
lods
nop
xchg
mov
mov
icebp
(bad)
jbe
pop
mov
repnz
or
pop
cmp
mov
xchg
jbe
pop
mov
jp
push
ror
and
jle
loopne
xor
xor
out
push
shl
xchg
not
imul
mov
inc
movs
cmps
rcr
cmps
or
xchg
xchg
imul
shl
movs
xchg
dec
test
in
dec
mov
and
jno
outs
mov
and
retf
clc
icebp
sbb
sbb
dec
pop
enter
sbb
or
repz
mov
or
iret
fcmovnu
loopne
into
push
jmp
repz
and
push
mov
or
jns
dec
inc
lea
jecxz
(bad)
repz
adc
cmp
jecxz
xor
and
jmp
xor
lods
(bad)
dec
or
push
mov
leave
sbb
jns
scas
daa
std
push
pushf
arpl
stos
adc
jnp
retf
outs
sub
cmps
outs
ja
mov
cmps
adc
sar
retf
iret
mov
dec
or
jbe
stos
movs
jp
das
mov
dec
mov
or
jg
cmp
jmp
sbb
inc
xor
pop
mov
push
mov
pop
jl
out
movs
and
rcl
jl
in
mov
popf
push
(bad)
push
inc
dec
adc
or
test
mov
mov
icebp
xchg
sub
fxch
shr
das
or
push
in
pop
pop
or
stos
pop
call
pop
mov
in
movs
dec
and
or
imul
pop
mov
arpl
jmp
push
les
fst
(bad)
retf
push
push
test
div
jg
pop
xor
cmp
outs
test
shl
jmp
pop
ins
out
outs
cwde
mov
cmps
scas
dec
test
scas
xlat
or
add
leave
sub
iret
cmp
and
sbb
xchg
int3
pop
shl
xchg
outs
dec
les
not
and
xor
jbe
in
inc
and
xchg
jge
iret
aad
adc
jbe
lods
movs
mov
mov
xchg
std
pop
inc
pop
dec
mov
jmp
pop
lea
out
rol
retf
push
sbb
dec
and
enter
inc
lods
jb
int3
pop
dec
dec
std
xor
sbb
leave
jl
jae
mov
scas
jmp
out
dec
daa
ret
mov
mov
jmp
xchg
sbb
inc
sahf
and
jns
and
out
pop
xor
cmp
xchg
mov
aam
mov
mov
xchg
in
ret
shl
int3
call
or
stos
mov
sbb
lods
daa
aaa
outs
mov
jge
cmps
not
dec
xchg
ror
loope
mov
push
cmc
mov
loopne
loope
xchg
scas
das
aad
clc
dec
cwde
fyl2xp1
aaa
xor
inc
sbb
and
movs
rcr
mov
daa
ror
inc
movs
push
icebp
jge
les
jle
mov
iret
mov
xchg
jge
outs
jmp
jns
cli
iret
cmp
retf
stos
mov
dec
fisttp
xor
sbb
mov
ret
in
jge
fiadd
ds
sbb
bound
outs
call
mov
lock
ret
xchg
mov
jge
dec
mov
mov
adc
push
fsub
fnstsw
shl
(bad)
je
daa
movs
cmps
cmp
mov
sub
movs
cmp
dec
cdq
cld
cwde
retf
jno
mov
adc
popa
push
pop
xor
jmp
mov
sbb
mov
in
(bad)
add
or
gs
mov
retf
(bad)
ins
mov
mov
fidiv
jns
ss
xchg
sbb
call
push
pop
sahf
sub
xchg
jecxz
mov
rcl
in
shr
dec
xchg
in
movs
mov
retf
(bad)
repz
mov
imul
hlt
int
cmps
mov
inc
mov
ds
fsubr
aad
pop
in
mov
push
jmp
ret
add
fs
inc
jle
mov
xor
mov
dec
xchg
fstp
push
and
es
pusha
push
fld
or
mov
push
xchg
imul
sbb
sub
lods
sub
imul
push
cmp
pop
(bad)
push
dec
retf
fild
push
movs
std
repnz
sbb
cli
repz
and
dec
fdivp
fisubr
pop
push
sub
mov
jl
xor
dec
out
dec
jnp
rcl
inc
cli
mov
mov
fucomip
mov
mov
cld
mov
dec
hlt
in
aaa
push
push
mov
ret
mov
push
inc
jp
push
aam
jb
pop
push
ss
lds
dec
fcom
movs
cli
ins
and
cmps
jg
lods
pushf
xlat
imul
adc
sub
xor
sub
sti
mov
add
sahf
stc
adc
inc
adc
jmp
fwait
test
inc
push
jb
stc
inc
leave
sti
aad
loopne
mov
mov
jecxz
(bad)
sar
pop
out
push
and
push
neg
or
add
mov
fmul
and
test
push
cmp
stc
adc
dec
pushf
sub
test
sub
jmp
stos
cmp
ds
dec
and
pop
ja
ds
ds
push
pop
ret
xchg
stos
push
fmul
mov
or
dec
cmc
inc
xor
and
rcr
pop
jmp
adc
mov
ret
stos
push
adc
jle
mov
mov
push
movs
arpl
push
scas
sbb
sub
in
outs
fst
ror
ret
push
pusha
rcl
push
call
aas
mov
les
fisubr
and
push
xchg
mov
leave
push
or
sbb
pop
add
mov
mov
jbe
or
cmp
xchg
nop
push
lods
pushf
mov
xchg
add
fisttp
sbb
test
(bad)
retf
push
aaa
ja
outs
ja
lock
pop
(bad)
jbe
mov
jmp
add
(bad)
arpl
nop
cmp
mov
add
mov
rcr
fwait
jl
mov
and
fsub
sub
xchg
mov
inc
ficom
aam
fild
fcomp
cmps
add
mov
mov
pop
cld
jg
push
pop
sahf
jno
or
hlt
ins
adc
pop
mov
dec
ss
fsub
lods
sti
jl
sbb
sbb
xor
fdivp
dec
sub
jno
xchg
mov
cmp
outs
add
xor
jmp
and
hlt
lea
lock
mov
lea
out
cdq
lods
add
add
cmp
jp
ret
add
xlat
lea
push
xchg
jne
jl
js
loop
out
dec
call
push
scas
out
clc
xor
imul
cmps
push
mov
scas
ficomp
lock
leavew
sbb
adc
xchg
pop
sahf
inc
pop
inc
push
imul
inc
lea
adc
gs
pop
push
dec
dec
je
dec
leave
pop
mov
jns
jle
mov
(bad)
shl
jmp
sub
push
iret
out
(bad)
fimul
cmp
fmul
addr16
jmp
sbb
test
xchg
mov
jge
clc
out
xchg
xchg
pop
mov
in
stc
cmp
mov
sub
call
sbb
(bad)
iret
cld
jge
cdq
lds
gs
js
adc
enter
jmp
push
fistp
lock
in
je
pushf
lock
fadd
ins
adc
loope
xchg
push
add
sbb
pop
inc
add
jbe
push
lods
mov
xchg
push
call
dec
and
push
jo
dec
adc
rcl
aas
ins
stos
test
cmp
or
cmp
ins
addr16
xchg
mov
ins
shl
jno
rcr
xchg
std
mov
xchg
mov
ror
jae
mov
out
xchg
sub
mov
test
cli
jecxz
jmp
push
adc
xor
jp
mov
pop
jp
fwait
shl
sub
inc
push
jae
pop
cmp
test
das
shl
or
push
pop
rep
mov
push
and
bound
and
dec
enter
pop
push
mov
jae
mov
push
mov
repnz
fistp
mov
jnp
mov
fld
shl
mov
dec
push
pop
inc
xor
jae
pushf
or
addr16
pop
inc
out
fiadd
push
xchg
cdq
jnp
cwde
leave
mov
mov
popa
iret
lods
jnp
sbb
mov
sub
jmp
mov
sbb
cld
ins
mov
jo
push
(bad)
rol
xor
push
pop
pop
aam
sbb
mov
xor
inc
pop
cmps
push
das
inc
jne
cmps
sub
enter
jle
repz
mov
push
adc
push
sbb
test
dec
(bad)
jno
sub
rcl
mov
mov
retf
ja
sub
dec
mov
pop
xchg
arpl
test
and
into
sbb
in
adc
dec
cmp
sbb
inc
push
in
cmp
mov
pop
xor
sub
int3
(bad)
int3
sub
adc
or
sub
fs
sub
out
retf
cmp
in
cld
test
fcom
aam
ret
pop
push
fmul
inc
pop
mov
or
loopne
sar
loop
leave
cmc
out
or
adc
cs
loopne
(bad)
mov
cmp
call
sahf
cmp
sub
mov
mov
push
and
into
fild
jae
inc
rcl
jecxz
aas
adc
ffreep
jns
pop
jge
push
push
mov
mov
jmp
add
adc
aaa
ins
push
fiadd
addr16
push
xchg
jge
xor
mov
fdiv
add
add
xchg
adc
stos
add
out
jbe
shl
fisubr
loop
jo
or
out
addr16
fdiv
mov
enterw
mov
call
call
ins
cdq
out
mov
lds
pop
push
(bad)
mov
stc
dec
xchg
mov
xchg
(bad)
out
daa
sbb
stos
popf
fwait
daa
sub
leave
lods
sti
rep
cli
mov
fistp
daa
neg
dec
dec
lods
push
mov
dec
and
je
ja
cmps
test
adc
push
test
pop
sub
push
mov
data16
pushf
push
cmp
loop
sub
aaa
push
mov
mov
loope
dec
jg
ja
stos
ja
scas
pop
jmp
pop
popa
pop
lahf
test
shl
push
cli
push
lds
jecxz
fcomp
adc
cmp
popf
mov
(bad)
ins
xchg
mov
push
xor
push
sub
out
push
push
stos
lock
mov
retf
dec
xchg
or
lods
fxch
(bad)
shl
xor
jl
cs
out
shr
(bad)
push
inc
lods
jb
inc
jge
fwait
aas
stc
test
fild
call
dec
jle
mov
push
cli
rcl
mov
sub
out
popa
ins
fstp
cmps
ss
cmp
pop
in
ss
mov
fwait
pop
nop
test
sub
rol
ror
test
jae
retf
dec
push
out
jnp
nop
ffreep
mov
jmp
mov
ret
lahf
push
sub
cwde
mov
in
pop
jne
or
mov
in
neg
dec
mov
mov
jge
test
call
mov
inc
mov
inc
loopne
jmp
mov
mov
sbb
fnstenv
xchg
cmps
cmp
mov
mov
xchg
add
lea
or
fcmovbe
into
lock
jecxz
adc
ja
pandn
popa
cmp
push
xchg
and
test
jp
mov
push
in
loop
in
mov
inc
jle
sub
cmc
fwait
addr16
sahf
(bad)
ins
xchg
add
push
leave
pushf
inc
loopne
cmp
pushf
lods
adc
stc
xchg
pop
repz
jp
nop
iret
adc
mov
arpl
pop
iret
mov
mov
test
xlat
int
cmp
or
fistp
into
scas
and
scas
and
data16
sub
push
ins
or
mov
dec
xchg
jp
mov
rcr
or
mov
sub
cmc
mov
xchg
popf
ins
push
sbb
retf
or
push
sub
xchg
cmp
xor
loopne
(bad)
push
sub
and
lods
fsub
adc
lds
jecxz
xchg
mov
mov
mov
mov
cwde
cmp
sub
and
mov
and
das
push
xchg
es
mov
mov
jl
pop
sub
inc
sbb
leave
outs
or
pop
js
xor
scas
and
xchg
push
and
sub
scas
push
pop
adc
cdq
aaa
mov
sub
aam
add
pop
push
sbb
out
mov
push
pop
aad
outs
mov
(bad)
jno
pop
mov
sub
push
test
jmp
add
push
test
mov
push
mov
jb
rcr
mov
pusha
xor
es
jecxz
movs
pop
outs
lock
(bad)
mov
jns
xchg
mov
repz
popa
es
push
sub
dec
fwait
sub
aam
pop
add
inc
(bad)
clc
ret
inc
xor
adc
jne
jmp
inc
xchg
adc
cli
xchg
stos
xor
cmp
ror
or
out
ret
call
jmp
sahf
push
push
jbe
outs
jbe
in
adc
hlt
popf
or
or
popf
lods
ins
mov
test
mov
stc
xchg
sub
test
dec
cmc
sbb
je
xchg
(bad)
scas
loop
adc
popf
(bad)
shl
xlat
mov
dec
fwait
dec
push
int
add
sub
fisubr
retf
div
sbb
xchg
fprem1
ss
loopne
inc
mov
int3
nop
fprem1
lods
cmc
fcom
mov
adc
call
dec
fistp
or
xchg
int3
inc
jecxz
push
sbb
sbb
pop
pop
dec
js
(bad)
ffree
sbb
or
jmp
mov
mov
jp
shl
in
xchg
pop
dec
cdq
mov
sub
sbb
dec
jo
jno
retf
ins
adc
iret
lock
inc
pop
sahf
or
fnsave
xchg
inc
iret
test
imul
or
cwde
int
cmp
dec
jnp
loope
shl
add
call
imul
pushf
cmp
aad
mov
iret
cwde
sahf
add
pushf
sub
icebp
mov
in
enter
test
pop
jae
ret
nop
mov
and
push
gs
hlt
pop
test
(bad)
in
or
xchg
cmp
outs
test
into
cmp
mov
out
aas
sbb
sub
sbb
dec
ins
sbb
sub
sahf
into
sub
(bad)
jns
lahf
repz
(bad)
mov
test
jl
inc
hlt
cmp
adc
jae
push
pop
sub
cmp
mov
fxsave
adc
cwde
pop
cmc
ins
sub
fidivr
gs
pop
mov
sti
aad
in
sub
sbb
push
shl
out
push
scas
mov
test
push
jp
pop
mov
dec
out
ret
push
pop
ss
mov
sub
(bad)
xlat
loope
sub
popa
push
cmps
ins
int3
repz
xor
retf
cdq
cmp
(bad)
loope
aas
push
cld
ret
mov
push
hlt
in
rcl
adc
mov
pop
(bad)
loopne
rol
push
lea
loope
ds
ds
jb
(bad)
iret
fwait
jno
aas
pop
ficom
out
ds
cs
daa
inc
dec
cli
cmp
pop
out
add
mov
(bad)
out
mov
mov
js
or
cmp
jno
add
leave
enter
ins
inc
lock
sub
cwde
mov
mov
out
fwait
ret
aam
rcl
pop
push
push
dec
out
test
fucomi
repz
push
pop
or
push
rcl
sub
not
ss
mov
cmc
add
dec
mov
dec
jo
push
imul
inc
jmp
or
and
mov
mov
pop
jmp
iret
test
mov
scas
push
mov
pop
jb
jp
pop
sub
dec
or
cdq
call
mov
mov
jne
outs
ret
and
cmp
pop
xchg
nop
push
sbb
pushw
div
fldcw
mov
jecxz
push
push
sub
and
mov
ss
push
jl
pop
imul
adc
add
inc
sub
mov
outs
int
call
jo
(bad)
sub
dec
call
out
jo
into
clc
and
ja
cmc
and
pop
inc
fscale
add
adc
xlat
jmp
mov
jne
call
xchg
pop
pop
outs
pop
aas
call
test
dec
xor
movs
push
retf
pop
pop
inc
dec
stos
xchg
mov
xchg
pop
ret
cmp
mov
arpl
imul
push
(bad)
lods
xor
inc
inc
out
mov
jb
mov
test
xchg
js
rcr
jecxz
xchg
sti
sbb
xchg
test
(bad)
hlt
clc
pop
in
hlt
mov
cmps
dec
je
cli
dec
push
jmp
imul
hlt
test
xor
ss
or
cmps
js
dec
lds
mov
and
dec
sub
pop
fwait
xor
das
jno
fnstcw
lods
adc
out
inc
and
add
gs
sub
sbb
or
mov
dec
sahf
and
lods
push
ret
lds
adc
out
and
xlat
loope
hlt
je
and
mov
rcl
inc
out
jno
cmp
leave
lock
adc
call
(bad)
stos
pushf
fistp
int
jg
cmp
pop
lds
xor
fdivr
pop
shl
add
nop
sub
mov
jg
mov
and
mov
lea
xchg
dec
or
or
(bad)
into
into
inc
and
test
pop
(bad)
lods
mov
scas
enter
push
mov
test
xlat
pmaddwd
imul
(bad)
shl
dec
push
pmullw
icebp
jg
dec
hlt
scas
out
and
(bad)
pop
movs
mov
or
adc
push
jg
hlt
jno
push
xchg
jl
clc
adc
mov
xchg
into
or
sub
pop
aaa
shl
dec
in
xchg
lock
jecxz
inc
push
into
cmp
dec
js
popf
loopne
pop
repz
or
mov
call
fs
inc
dec
dec
inc
sbb
adc
jmp
(bad)
out
pop
mov
jecxz
mov
xor
mov
sub
jge
adc
mov
or
inc
loop
fcom
cmp
outs
xor
stc
inc
pop
sub
cwde
add
mov
sbb
and
inc
or
fnstcw
dec
sbb
sub
pop
push
sbb
mov
mov
adc
mov
push
cmp
jle
enter
repnz
or
fdivr
adc
and
dec
into
jmp
adc
movs
sub
lods
add
sbb
rcl
and
and
sbb
and
mov
movs
adc
je
cmps
cmp
xchg
rcr
popa
les
cmp
arpl
pop
add
sbb
dec
in
stos
and
cmp
test
xchg
loop
daa
dec
ins
mov
gs
fist
push
dec
mov
add
enter
jae
xor
jae
sub
xchg
push
mov
pushf
jbe
stos
movs
mov
and
int
ds
es
mov
mov
push
les
sar
rcr
jecxz
fstp
pop
push
add
les
jl
inc
ret
add
pushf
in
inc
jb
xor
cmp
jae
loope
test
in
or
js
cld
add
and
add
nop
out
adc
retf
push
or
fwait
cmp
rcl
pushf
xor
out
xor
cmp
fwait
xchg
mov
xchg
pushf
(bad)
and
adc
add
add
inc
fs
pop
jno
cmp
xchg
cmp
xchg
inc
mov
jae
push
xchg
cmp
xchg
cmp
lahf
inc
dec
add
add
ins
mov
xchg
cs
int3
push
pop
fwait
mov
cwde
je
add
pop
dec
out
aam
leave
fadd
pop
fidivr
outs
inc
repnz
pusha
outs
dec
loopne
jo
xchg
and
aaa
xchg
ret
pop
jg
and
add
leave
sbb
jno
push
lock
adc
push
add
jmp
or
or
adc
adc
xchg
sbb
and
jne
xchg
sub
adc
test
sbb
jb
sbb
lock
leave
push
jmp
add
xchg
pushf
ror
xchg
adc
mov
adc
push
or
xor
ss
push
(bad)
xchg
push
or
bound
and
add
jmp
fs
or
lods
sub
leave
pop
shl
jo
pushf
out
dec
pop
mov
push
movs
out
push
sbb
div
cmp
imul
fimul
test
out
in
jp
(bad)
jle
scas
cmp
pop
add
frstor
popa
cmp
jb
and
mov
or
out
aam
xchg
test
cmps
punpcklbw
and
add
popa
enter
push
mov
fnstenv
xchg
cmp
retf
ins
mov
pop
sahf
dec
jl
xchg
mov
fidivr
imul
adc
arpl
rcl
adc
push
aam
sub
shl
sub
pop
dec
imul
movs
lods
(bad)
rcr
cmps
mov
pop
retf
fisub
sbb
sbb
mov
inc
pop
dec
pop
push
mov
icebp
mov
push
pop
pop
in
xchg
cli
(bad)
dec
in
dec
test
jle
jnp
add
sar
inc
sbb
xlat
sahf
ret
cmp
sahf
cdq
adc
cmp
cmp
cmp
cmp
pop
add
push
mul
popa
mov
or
sbb
push
inc
or
xchg
push
loope
jns
xor
sahf
repz
fs
xor
call
repz
jne
push
popa
add
imul
hlt
inc
ins
or
inc
add
hlt
inc
js
mov
mov
or
xor
xchg
push
dec
or
or
in
push
dec
add
sub
push
or
dec
pop
retf
mov
dec
loop
pushf
xchg
push
pop
push
mov
pop
or
mov
mov
and
xor
popf
inc
mov
mov
rol
adc
mov
inc
xchg
mov
test
add
(bad)
xor
xlat
sub
mov
inc
mov
inc
repnz
cld
adc
push
cmp
js
or
cmps
and
test
and
cmp
in
or
dec
les
fidiv
mov
fldenv
sub
inc
sub
retf
add
mov
dec
in
xor
sbb
adc
lods
pop
mov
call
push
sub
or
inc
sbb
dec
jmp
mov
gs
push
or
stos
pop
(bad)
fmul
inc
lahf
and
add
and
adc
cmps
push
mov
and
xchg
or
push
cmps
stos
mov
mov
push
icebp
loope
je
pop
or
mov
jp
test
lea
loop
add
jp
test
lock
mov
lods
dec
sub
mov
push
movs
add
int3
push
arpl
sub
sbb
mov
adc
inc
pop
mov
aad
mov
stos
(bad)
lods
into
hlt
ds
into
add
stos
fidivr
aam
icebp
jmp
adc
stos
cld
call
add
inc
push
adc
push
inc
cmp
sub
shr
jecxz
jp
mov
stos
jae
jmp
loopne
rcl
adc
mov
and
xor
cmp
dec
movs
add
xor
iret
xchg
pusha
push
mov
push
dec
lds
xor
(bad)
add
(bad)
daa
and
pop
or
adc
dec
sub
push
cmps
mov
pop
adc
pop
lea
cli
in
pop
jnp
add
movs
bound
ss
test
jne
adc
aam
pop
or
jae
or
mov
adc
inc
add
push
mov
mov
outs
sahf
icebp
aad
mov
or
popa
cdq
jno
mov
cmp
in
cs
dec
ss
cmp
mov
lahf
imul
pop
retf
sbb
pop
sub
dec
mov
adc
and
leave
pop
or
cmp
sub
sub
test
mov
sbb
fucomip
ss
js
inc
mov
fst
std
mov
cmp
fnstcw
cmp
push
inc
retf
cmp
mov
cli
mov
rol
mov
hlt
push
rcr
add
iret
int3
push
imul
mov
enter
push
enter
or
retf
jnp
xor
fwait
jne
mov
or
(bad)
out
dec
add
add
adc
cdq
gs
and
js
popw
mov
cmps
jge
push
cmp
xor
inc
dec
test
sbb
sub
jno
rcl
and
dec
push
pushf
mov
jno
sbb
dec
les
mov
xlat
push
aaa
clc
lods
add
jno
lods
daa
lock
mov
adc
shl
ret
inc
mov
sub
cmps
adc
sbb
sub
ret
xchg
lahf
ins
sbb
sbb
pushf
pop
push
test
lea
push
pop
int3
jae
jp
(bad)
sar
cmp
in
lahf
sahf
test
sub
cmc
sbb
or
ss
push
sub
jne
cmp
out
(bad)
mov
mov
xchg
pushf
repnz
cmps
pop
and
cmp
mov
mov
push
mov
xchg
adc
jo
jb
fwait
sbb
cli
shl
xchg
pop
or
push
arpl
mov
loopne
or
pop
dec
and
mov
pop
pop
jno
push
xchg
movs
popf
xchg
cmp
outs
fist
sub
cmc
dec
movs
jo
fnstenv
sahf
inc
xchg
mov
lds
ret
shl
mov
sub
and
jp
xor
in
popa
and
adc
in
sub
mov
retf
sbb
shl
pop
mov
mov
ins
jp
pop
and
fsubr
inc
pop
push
outs
out
scas
je
movs
mov
push
popa
mov
pusha
pop
jge
lods
pop
jle
inc
adc
jmp
inc
shl
or
jmp
push
mov
scas
inc
jae
sub
stos
mov
xor
mov
xchg
add
mov
jle
(bad)
mov
lods
pop
mov
inc
mov
adc
sub
dec
inc
icebp
idiv
mov
sub
jmp
cmp
xor
mov
or
and
sub
bound
mov
pop
push
dec
jno
mov
push
or
and
(bad)
push
xchg
jg
sbb
(bad)
inc
sbb
stos
cwde
jmp
call
fst
scas
call
mov
sbb
rcr
dec
xchg
mov
or
setp
nop
pop
adc
scas
rcr
mov
add
cmp
scas
mov
popf
xor
push
lock
mov
lock
std
or
adc
sbb
scas
pop
test
push
gs
mov
sti
cmp
lock
xor
jne
lock
mov
mov
cli
imul
(bad)
xlat
imul
pop
mov
cli
pop
mov
jg
sub
inc
inc
std
push
jge
ficom
ss
jge
dec
or
(bad)
(bad)
mov
mov
pushf
mov
sahf
(bad)
js
sahf
add
cmp
cld
pop
jne
fadd
jmp
jle
enter
inc
jmp
inc
bound
aas
shl
neg
mov
aas
mov
pop
aas
mov
or
mov
or
imul
call
mul
call
shl
hlt
sub
push
pop
inc
ss
(bad)
pusha
and
rcl
mov
leave
xor
dec
sbb
rcl
rcl
xchg
dec
movs
fdiv
jae
or
add
jnp
mov
test
pop
fld
ret
outs
(bad)
ins
push
cmps
out
sub
xor
pop
retf
mov
xchg
loop
push
xchg
(bad)
arpl
xor
and
xchg
pop
mov
jmp
and
xchg
test
mov
mov
sub
arpl
bound
add
push
sbb
in
lods
outs
dec
push
ins
test
pop
aaa
les
data16
(bad)
adc
lds
(bad)
loop
bound
repnz
pop
test
adc
mov
mov
dec
ins
xchg
xor
fwait
xor
jmp
lds
(bad)
cld
or
mov
add
lds
or
push
inc
mov
pop
enter
mov
(bad)
mul
cmp
mov
push
xchg
xchg
fs
inc
xchg
push
gs
cwde
ins
lods
test
mov
push
(bad)
mov
sub
mov
push
imul
ss
cmp
fsubr
push
out
out
test
dec
lea
push
cwde
adc
lods
lds
(bad)
or
call
jecxz
cmp
or
loopne
xor
inc
xchg
push
ds
add
inc
push
jne
mov
repz
lahf
(bad)
pop
ins
popf
imul
test
gs
xchg
add
int3
data16
add
fs
das
mov
nop
xor
pop
retf
in
inc
inc
adc
mul
leave
add
jp
jo
fs
hlt
sub
mov
add
retf
into
mov
and
inc
addr16
movs
fiadd
xor
loopne
loope
jecxz
xchg
cmps
inc
loope
pop
jno
push
mov
imul
push
jne
gs
push
inc
arpl
cmp
adc
aad
inc
outs
jle
push
(bad)
xchg
add
cdq
pop
adc
xchg
adc
pop
sbb
pop
adc
and
xchg
mov
pop
xchg
hlt
call
or
xchg
cmpps
outs
cmp
sbb
aas
adc
shr
(bad)
mov
add
add
pusha
push
xchg
stos
push
nop
adc
mov
cmps
sar
cmps
aas
mov
test
push
in
(bad)
pop
out
repz
jnp
aaa
enter
ret
mov
jl
pusha
scas
cmp
xchg
movs
lock
mov
cmps
mov
dec
scas
ins
test
lods
js
pop
mov
fistp
rcl
outs
repz
mov
jno
sahf
push
jg
dec
mov
fisubr
stos
popa
ror
jl
add
fsubr
sub
test
cs
daa
cmp
and
fcomp
outs
lods
mov
cmp
push
mov
cmp
sbb
aaa
push
sbb
fistp
adc
adc
mov
(bad)
add
stc
fcomp
sub
call
nop
ret
fiadd
lahf
push
push
pop
dec
aad
jae
imul
add
hlt
movs
add
mov
cdq
dec
xchg
das
adc
stos
and
int
jge
sub
(bad)
sti
ins
push
cmp
sub
cmp
das
fisubr
pop
es
add
xchg
in
scas
lods
xor
xor
retf
fs
mov
add
xchg
out
ja
jmp
sar
int3
fdiv
add
lahf
cdq
pop
test
pop
das
sahf
ret
add
rol
add
lea
jne
push
sbb
outs
push
jne
jg
sbb
cs
out
in
ret
scas
and
(bad)
dec
les
sbb
inc
cld
push
adc
rcr
(bad)
jae
sar
jle
mov
jp
out
mov
inc
imul
sbb
sar
sbb
mov
dec
ss
add
ss
sub
jns
fidivr
movs
int3
xchg
mov
movs
pop
out
xchg
stc
in
cmps
arpl
jno
retf
jo
cmps
retf
add
in
push
push
(bad)
mov
dec
add
repz
adc
mov
jp
mov
scas
xchg
pop
add
or
in
hlt
enter
jmp
test
dec
or
inc
inc
adc
pushf
adc
add
xor
js
or
inc
or
nop
adc
pop
bound
rcr
sub
(bad)
and
rcl
loope
or
inc
inc
add
jne
mov
jae
int3
and
xchg
add
cmp
or
call
ret
les
adc
and
movs
adc
inc
enter
adc
xor
stos
inc
icebp
lods
adc
mov
les
mov
mov
lock
add
sub
adc
inc
sahf
ja
dec
es
cmp
mov
cdq
pop
xor
adc
jno
jns
push
or
nop
imul
inc
les
arpl
sub
add
or
add
mov
mov
or
mov
xor
and
stos
lahf
xor
xor
sahf
and
call
rol
lds
add
jmp
test
lds
adc
add
add
xchg
imul
xchg
lods
(bad)
add
ror
xor
pop
aam
out
loop
fadd
cmp
adc
mov
ss
mov
dec
add
add
bound
test
adc
xor
pop
jo
push
lock
add
je
add
cs
or
and
mov
rcl
inc
fild
sub
add
push
mov
add
ds
xchg
xor
loop
imul
add
les
bound
shl
lods
dec
(bad)
loopne
das
je
add
push
push
lock
ret
pop
pop
add
inc
(bad)
xor
inc
sub
mov
mov
sahf
jl
inc
inc
fadd
movs
adc
cmp
movs
pop
add
gs
mov
(bad)
arpl
or
jp
movs
sub
jns
jecxz
adc
pop
inc
ret
add
inc
idiv
clc
add
movs
test
xor
sub
stos
pop
icebp
pop
pop
pop
or
cmps
xor
(bad)
jg
cmps
ret
push
out
pop
jle
push
jmp
int
lea
xor
add
xchg
sahf
xor
add
push
pop
xor
mov
into
fs
out
mov
jns
test
rcr
comiss
pop
sbb
sbb
fcomp
add
loope
(bad)
mov
adc
xor
or
sbb
sub
arpl
or
(bad)
(bad)
icebp
rcr
and
jnp
ins
sbb
int3
jb
ror
add
cmps
add
and
scas
sbb
jl
cmp
jnp
mov
and
add
lods
inc
pop
sub
outs
xchg
pusha
and
bound
pop
add
add
mov
sub
add
add
mov
sub
mov
or
jb
rcl
push
retf
jl
(bad)
aad
bound
mov
jo
xor
iret
fidiv
test
stos
add
dec
push
sub
int3
ss
xor
pop
cmp
pop
add
adc
add
not
loop
pop
adc
sbb
out
dec
sub
jnp
out
adc
jo
sahf
xlat
push
lods
inc
sbb
movs
adc
in
dec
(bad)
sbb
inc
mov
and
sub
popa
test
inc
xchg
sub
mov
rcl
aaa
jne
popf
adc
fldl2t
push
rol
loopne
adc
add
pop
dec
(bad)
or
mov
mov
aad
add
mov
nop
pop
add
push
mov
cmp
pusha
das
rcr
test
push
aas
lea
iret
cmp
movs
jmp
(bad)
fwait
adc
push
in
movzx
jg
xchg
data16
and
dec
sub
nop
leave
cwde
cli
mov
push
pop
pop
bound
or
mov
bound
mov
and
inc
shl
xchg
dec
out
xchg
jno
inc
scas
pop
pop
and
jmp
jnp
rcl
imul
inc
inc
sti
adc
inc
or
les
jle
sub
gs
sbb
cdq
cmps
ins
inc
pusha
enter
or
sub
add
cmps
dec
push
leave
sbb
adc
sub
lea
sahf
daa
add
pop
jo
popf
xlat
cmps
sub
inc
lods
and
inc
scas
mov
sub
mov
shl
(bad)
retf
mov
dec
in
test
jecxz
jge
pop
mov
xchg
and
pop
mov
je
jmp
jo
(bad)
fcom
(bad)
stos
retf
inc
pop
or
adc
xchg
inc
pop
es
xchg
cmps
call
push
leave
xor
push
fidiv
repnz
es
call
and
mov
sbb
push
mov
jmp
js
sahf
sbb
mov
test
dec
ss
sub
jo
mov
ss
ss
rcr
cmp
lahf
pop
sbb
xchg
pop
jbe
xchg
nop
aam
add
or
std
inc
sub
lods
dec
lds
aaa
or
or
or
popa
pop
and
add
pop
xchg
xchg
dec
jp
pop
popf
pop
outs
in
add
dec
and
cdq
adc
sub
test
push
xchg
and
jo
xor
mov
and
jns
in
push
std
aas
jmp
(bad)
push
imul
adc
js
test
xchg
adc
fs
mov
pusha
movs
mov
push
jo
aad
cld
sbb
stos
dec
(bad)
scas
popf
je
sahf
xchg
xchg
aas
dec
xor
pop
jno
cmp
dec
xchg
fadd
inc
xchg
movs
in
movs
and
je
push
xchg
ret
leave
xchg
nop
jge
adc
ja
pop
or
or
and
in
loop
pop
lods
inc
add
js
aad
mov
cmp
fcmovnb
push
dec
ficomp
sub
sti
les
cmp
fisubr
dec
push
test
pop
sbb
dec
stos
ret
and
push
es
cdq
and
dec
pop
add
add
call
sbb
ret
dec
push
mov
call
push
cmp
adc
sbb
xchg
sub
jl
push
gs
daa
popa
dec
movs
fisttp
adc
ret
dec
ror
sub
sub
and
jb
pop
mov
in
inc
and
(bad)
fsub
fadd
outs
jl
nop
fs
retf
lods
mov
mov
popa
mov
mov
sub
arpl
(bad)
fdivr
aad
adc
in
lahf
fistp
inc
jge
xor
jae
mov
pop
std
ds
adc
push
ds
push
jle
and
retf
int3
retf
int
fmul
jo
jmp
int3
jmp
xchg
xchg
test
rcr
gs
fsubr
cmp
and
arpl
push
add
or
retf
stc
add
or
push
stos
add
xchg
lds
mov
pop
fild
loop
mov
xchg
xchg
out
rcr
ss
daa
jo
cli
or
push
xor
sub
cmps
mov
or
dec
nop
test
sbb
mov
popa
lods
nop
sbb
add
inc
je
outs
and
jbe
push
push
fbstp
je
mov
jmp
mov
jo
or
fnstenv
push
sbb
stc
pop
dec
(bad)
aad
popf
gs
loop
mov
sub
cmp
in
repz
aaa
test
xchg
jne
outs
test
pop
fiadd
stc
cmp
(bad)
repnz
(bad)
mov
dec
aad
sbb
iret
jne
shl
lods
ds
sti
pop
mov
cli
iret
sbb
push
inc
cli
sub
out
cmc
test
clc
add
or
inc
movs
inc
scas
ja
lods
adc
data16
pop
sub
aas
in
xchg
cld
out
jle
jb
leave
imul
rcr
imul
add
sbb
sub
sbb
js
jecxz
adc
adc
inc
lock
ss
pop
pop
pushw
std
pop
movs
test
repz
jmp
bound
cmp
aas
nop
cmp
imul
pop
std
fidivr
ins
(bad)
jns
push
lods
adc
iret
psraw
jbe
mov
add
mov
popf
jmp
xor
fbld
in
or
mov
shr
ss
mov
pop
(bad)
bound
idiv
fcom
stos
mov
ins
jp
fdiv
adc
push
inc
test
fld
(bad)
mov
jecxz
(bad)
mov
lods
imul
mov
mov
test
mov
xchg
jnp
sahf
loop
pop
scas
cwde
pop
rol
das
pop
fstp
outs
mov
fcom
outs
mov
sub
mov
test
loop
sbb
rcr
in
repz
jmp
enter
mov
jo
sti
xchg
dec
jo
ds
mov
push
loope
imul
(bad)
xlat
jo
fyl2x
or
test
fmul
cmp
outs
xor
popf
inc
test
fbld
or
cmp
pop
lods
ror
lods
mov
(bad)
and
mov
dec
sbb
mov
pop
jnp
push
mov
movs
lea
std
std
aad
pop
icebp
dec
ret
(bad)
aas
dec
call
das
cmps
rol
(bad)
lahf
movs
lahf
cmp
fmul
cld
popa
mov
ins
retf
fmul
cmps
and
test
jg
jge
pop
pop
sar
fsubrp
lods
mov
scas
movs
js
cdq
mov
sub
xchg
int
aaa
sub
js
lahf
sti
jae
jb
sbb
inc
mov
xchg
push
pop
outs
xchg
stos
retf
xor
and
shl
out
mov
(bad)
jb
addr16
rol
ror
loope
cmps
pop
fwait
cs
jmp
ror
jmp
sahf
jae
adc
jb
jns
sbb
jmp
add
outs
jo
jmp
pop
xchg
cs
mov
cmps
arpl
mov
leave
jmp
push
sbb
je
jmp
push
aaa
dec
mov
push
js
call
cdq
iret
fcomp
jmp
push
mov
jmp
test
mov
mov
inc
push
cdq
xlat
mov
mov
addr16
push
pop
push
jge
lods
sub
sbb
sar
repnz
or
addr16
jle
and
std
mov
pushf
sbb
out
(bad)
xlat
lods
xchg
std
popa
cdq
adc
inc
arpl
mov
or
add
xchg
test
jmp
outs
sub
call
out
mov
sub
cmc
repz
jb
jnp
cmp
push
ds
mov
ins
pop
mov
xchg
pop
imul
inc
jnp
scas
pop
jmp
jmp
imul
jae
adc
leave
cld
fyl2xp1
mov
cs
and
or
(bad)
push
sbb
stc
clc
xor
xlat
(bad)
or
jp
mov
pop
cmp
sbb
aas
push
test
cld
dec
mov
int
test
into
dec
xbegin
inc
mov
ja
loop
push
push
popf
outs
repz
std
mov
xchg
dec
fist
ja
cmp
jno
mov
lds
in
sbb
mov
inc
test
mov
pop
(bad)
(bad)
js
sbb
mov
fstp
sahf
and
imul
sahf
inc
popa
fisubr
xor
cmp
pop
arpl
cmp
out
xchg
mov
movs
out
scas
(bad)
mov
in
es
mov
push
clc
and
cs
sub
das
jne
jae
jp
mov
pop
xchg
lods
retf
iret
and
cmp
enter
jmp
out
cmp
dec
ins
mov
in
sti
dec
fbstp
out
div
sti
sar
jmp
push
fsubr
(bad)
mov
mov
jbe
outs
jle
(bad)
daa
scas
in
std
clc
fistp
pop
ja
jge
mov
(bad)
iret
ja
pop
stos
lahf
pop
fld
scas
dec
and
mov
ins
rcl
and
sbb
loope
loopne
std
jecxz
mov
aas
aaa
xlat
das
shl
das
clc
xlat
mov
ror
std
jns
cmps
std
xchg
add
add
jo
cmp
leave
shl
out
xor
loopne
clc
pop
add
cld
xor
test
enter
pop
retf
outs
hlt
inc
cli
addr16
call
pxor
push
ds
test
in
cmp
iret
jmp
sub
dec
mov
es
fstp
out
jmp
push
jge
out
in
sti
test
add
je
xor
jp
or
pop
or
inc
push
sar
pusha
mov
test
stos
loop
push
es
mov
fidivr
pop
inc
pop
xor
scas
pop
inc
sar
arpl
nop
idiv
pop
es
pop
aam
dec
not
pop
ja
loope
aad
adc
mov
mov
sub
add
inc
jbe
push
adc
dec
pusha
push
jno
mov
mov
cdq
dec
(bad)
mov
sub
mov
xor
call
jle
ret
arpl
pop
jbe
jo
xchg
dec
dec
dec
jmp
daa
imul
loop
cmp
xor
(bad)
popa
icebp
int3
xor
mov
(bad)
jg
jge
outs
in
das
dec
mov
adc
test
mov
lds
std
leave
(bad)
loop
xlat
push
ins
or
fsubr
sub
mov
outs
pushf
ret
cwde
adc
xor
pop
or
repz
clc
enter
xchg
fist
jb
in
daa
sti
in
icebp
sbb
ins
jge
fdivp
cld
repnz
lods
ret
loopne
out
and
call
outs
cmp
call
popa
in
imul
aaa
fadd
jl
int
imul
mov
mov
(bad)
dec
lea
shl
adc
test
xchg
push
adc
outs
push
and
xchg
bound
and
(bad)
jmp
xchg
test
mov
and
lds
mov
lock
out
out
loope
sbb
psllq
cmp
ds
sub
stc
popa
dec
fld
sti
and
jl
mov
push
inc
ja
xchg
ja
mov
data16
xor
scas
and
sbb
or
fdivr
dec
mov
ss
xchg
and
jno
mov
mov
iret
xor
shr
inc
aaa
cdq
mov
arpl
xchg
int
mov
rcr
(bad)
jle
xchg
jae
ss
push
das
sbb
not
mov
dec
mov
stos
mov
sub
jbe
outs
das
sahf
sbb
test
push
ja
cmp
pop
pop
adc
jne
dec
stos
(bad)
out
fiadd
jne
loop
test
sub
sti
je
dec
pop
sbb
push
push
loope
aaa
pusha
mov
mov
jp
cmps
pop
xchg
cmp
(bad)
in
adc
dec
and
inc
ins
daa
clc
daa
out
jg
inc
call
lock
arpl
mov
add
aam
add
daa
cmps
and
lock
mov
clc
es
fsubr
pop
jb
imul
xchg
jbe
sub
mov
jno
mov
xchg
push
mov
sbb
add
add
xor
cdq
xor
jmp
and
adc
xchg
xchg
or
mov
mov
sub
jne
sub
push
push
cli
sub
adc
adc
adc
jne
mov
test
xor
or
add
push
push
gs
push
add
stc
pop
scas
jge
shr
jb
fstp
mov
aam
xor
and
cmc
lods
xchg
inc
ja
and
jno
dec
lods
cmp
nop
cmp
outs
cmp
sub
sbb
inc
jne
rol
das
cmp
mov
(bad)
adc
xor
movs
sub
lds
imul
or
xchg
out
or
std
add
pop
or
push
mov
(bad)
iret
test
mov
out
fsubrp
in
inc
cvttps2pi
shl
sar
pop
cmps
push
loopne
sti
inc
pop
xor
aas
hlt
or
icebp
in
mul
in
das
inc
jge
xor
fs
lea
out
adc
out
push
mov
fld
and
adc
js
aas
dec
sahf
pusha
ja
jmp
mov
into
mov
jnp
imul
aam
inc
cmp
adc
mov
daa
and
jnp
xor
call
dec
imul
in
push
std
(bad)
fadd
shr
add
and
sbb
test
movs
dec
xor
jle
call
shl
adc
and
mov
pop
dec
ror
jp
mov
jno
ret
fistp
sbb
daa
xor
aas
sahf
out
shl
xchg
sbb
pop
je
xchg
fnstsw
xor
dec
pop
sti
pop
loop
in
(bad)
loop
call
xlat
test
enter
ds
test
dec
jecxz
inc
ds
repnz
ds
sub
or
xchg
shl
sbb
pop
dec
cmp
dec
inc
imul
fdivr
push
xor
sbb
arpl
outs
mov
xchg
int
aaa
(bad)
sbb
lea
in
mov
daa
fsubr
mov
sbb
fmul
cmc
(bad)
mov
sbb
add
mov
pop
icebp
lods
mov
ss
sub
cmp
cs
fsub
(bad)
out
lea
icebp
idiv
cmc
pop
stos
pop
lea
pop
scas
xchg
cmp
les
rcr
add
mov
hlt
cmps
inc
xor
pop
adc
(bad)
std
xchg
xchg
xor
adc
cmp
lea
jnp
dec
mov
push
xchg
mov
test
lods
call
in
stos
add
add
mov
loope
xchg
or
xchg
mov
cli
ja
mov
pop
call
xchg
xlat
pop
enter
dec
push
pushf
div
sbb
xlat
mov
cwde
cld
imul
mov
xor
imul
data16
es
popa
ret
addr16
adc
inc
scas
and
mov
call
mov
xchg
je
pop
push
stos
cmp
or
mov
clc
lods
cmp
and
mov
sub
ret
mov
movs
jmp
mov
sub
mov
mov
ret
xchg
bound
sub
pop
dec
cmp
mov
xchg
push
pop
(bad)
mov
jbe
pop
or
dec
sbb
test
scas
bound
out
jmp
push
leave
and
push
sbb
and
xor
jecxz
mov
fimul
inc
repz
pop
sahf
mov
shl
sbb
leave
retf
shr
icebp
packsswb
inc
cmp
cli
retf
ja
lea
sub
mov
cmc
push
repnz
sub
call
popf
xchg
push
cs
cmps
and
jmp
into
xor
xchg
mov
repnz
hlt
test
add
shr
movs
das
imul
xchg
icebp
(bad)
push
push
jp
add
jmp
mov
shr
out
mov
leave
dec
or
(bad)
dec
xchg
loopne
mov
and
xlat
inc
push
cmp
inc
mov
(bad)
jge
pop
(bad)
fcmovbe
xchg
lods
and
sbb
inc
push
cld
inc
icebp
retf
lds
out
push
mov
push
cmps
fs
outs
push
sbb
pop
add
outs
pop
imul
and
inc
cdq
mov
sbb
mov
mov
rcr
and
mov
bound
mov
fs
inc
mov
mov
adc
outs
adc
inc
and
adc
js
pushf
xor
enter
mov
test
xor
jg
stos
fdivrp
lea
int3
mov
pushf
mov
pop
fld
inc
je
lahf
jbe
sbb
jbe
std
fcmovne
clc
scas
pop
xchg
mov
leave
jae
pushf
rol
outs
outs
pop
call
outs
dec
push
and
lods
and
ret
outs
jg
xor
ficomp
xchg
mov
xchg
scas
sbb
call
adc
(bad)
fsubr
pop
rcr
fbld
retf
jl
xlat
xchg
icebp
mov
out
fdivr
repnz
jle
repz
in
adc
aaa
inc
imul
ret
lahf
sub
outs
pop
xchg
ins
and
popa
jl
lds
test
cs
xchg
pop
xlat
push
retf
lahf
jmp
scas
jmp
loopne
ret
data16
stos
jmp
sub
(bad)
(bad)
call
movs
cmp
pusha
and
aam
pop
jnp
loope
fucom
sbb
lods
and
or
es
push
jae
jg
fbld
jmp
data16
xor
hlt
mov
movs
(bad)
int
mov
nop
aaa
ror
dec
hlt
or
je
jb
mov
push
sti
pop
cmp
fsubr
dec
xchg
or
in
scas
nop
fucomip
cmps
leave
pop
(bad)
hlt
repz
xor
nop
ja
mov
int
pop
sti
fucomi
je
sbb
sbb
mov
jl
ja
pop
sub
sub
in
dec
mov
in
or
in
retf
jb
jb
jb
mov
xchg
fdiv
jge
cmps
adc
ret
cmps
popf
ins
mov
adc
mov
lods
lods
inc
add
jmp
and
and
adc
xor
ins
inc
test
or
ret
(bad)
cdq
mov
inc
inc
sub
es
mov
movs
mov
stc
out
mov
add
fwait
les
cwde
lahf
popa
jmp
add
xchg
inc
rcr
nop
sbb
mov
enter
pop
or
iret
mov
cdq
or
out
cmps
(bad)
cwde
jb
mov
rcr
call
ror
arpl
xchg
(bad)
shl
scas
cmps
push
sub
stos
jae
jge
adc
xor
jg
xor
xchg
mov
add
or
dec
inc
mov
shl
xchg
mov
aaa
push
cmp
lahf
add
adc
sub
and
and
dec
in
ret
dec
mov
xchg
retf
pusha
cmps
cmps
jae
cmp
dec
rol
mov
imul
call
into
popf
jge
out
movs
in
popf
mov
cmc
(bad)
adc
daa
cmps
adc
xor
les
jmp
dec
int3
out
cmps
jmp
dec
jno
test
fsub
bound
addr16
push
outs
push
es
dec
je
rcl
(bad)
mov
addr16
or
dec
lods
loopne
repz
pop
and
mov
pop
pop
add
lods
add
sbb
mov
jb
movs
add
mov
xor
aas
and
cmp
aam
jp
shl
(bad)
mov
shr
jge
adc
mov
and
cs
in
leave
clc
cdq
rcr
pusha
xchg
inc
or
clc
adc
pop
inc
aad
xchg
push
aad
repnz
cmp
push
cmc
adc
inc
repnz
cmp
mov
xchg
cmps
add
scas
mov
rcl
inc
je
imul
fsubr
jmp
sub
or
dec
and
inc
mov
and
stos
dec
fs
movs
mov
call
pop
mov
xor
xchg
mov
aad
xor
sub
xchg
and
push
mov
scas
xchg
cmp
pop
jge
or
pop
es
pusha
dec
mov
push
outs
xor
adc
repnz
mov
jmp
add
pop
pop
cdq
mov
adc
enter
out
pop
dec
mov
xchg
mov
dec
jp
or
and
sbb
sbb
sub
inc
adc
dec
aaa
lahf
sub
mov
and
lods
xchg
inc
fnsave
ret
(bad)
xor
leave
aad
adc
inc
test
lods
xchg
dec
mov
test
jl
push
sub
jae
inc
loopne
mov
(bad)
(bad)
sbb
repnz
push
ds
and
enter
and
dec
push
push
int3
dec
test
pop
mov
aam
(bad)
stos
cmps
in
loope
mov
loope
mov
ja
(bad)
cmp
push
in
dec
rcr
(bad)
js
out
sbb
push
jmp
test
cmp
dec
fs
rcl
jns
stos
cbw
daa
aam
loop
mov
rcl
jp
test
out
hlt
lods
pusha
or
mov
call
call
jmp
cmp
mov
mov
in
ins
into
lods
pushf
and
int
sub
jno
leave
movs
push
rcl
movs
inc
cmp
les
xchg
xchg
loope
fiadd
xchg
or
add
inc
pop
xor
cwde
or
cmp
mov
dec
jl
fwait
dec
in
fucomi
aad
das
adc
nop
aam
dec
aad
xchg
push
popf
dec
stc
cmp
pusha
xor
fs
xor
xchg
xor
movs
ret
cmps
mov
cwde
add
add
cmp
cmp
lods
jecxz
mov
push
jne
xor
pushf
jmpw
fsubr
in
mov
call
loopne
mov
test
lds
dec
iret
fs
(bad)
add
shl
in
cmp
sbb
xor
imul
inc
mov
dec
sub
imul
jmp
push
dec
xchg
hlt
push
(bad)
rcr
sbb
cli
cmp
cmps
pop
inc
pop
frstor
in
cmps
jmp
sub
aaa
mov
and
enter
push
dec
ret
xchg
cmc
stc
dec
adc
mov
es
adc
mov
inc
jg
or
xor
sub
adc
retf
push
xchg
and
std
push
push
xor
repnz
lahf
cmp
ror
mov
out
push
inc
cmps
adc
lahf
repnz
mov
cld
in
add
lock
cwde
cld
movs
cmp
ins
dec
cld
push
xchg
stos
mov
repnz
ds
stc
mov
xchg
jb
xchg
repz
ins
pop
xor
xor
(bad)
xchg
retf
test
sahf
jae
aas
aas
inc
sub
movmskps
inc
mov
fsubr
adc
ror
sbb
test
aam
aas
mov
dec
bound
ror
sub
and
cli
push
popa
lahf
ret
es
push
stos
xchg
adc
dec
lods
outs
test
sub
bound
aad
mov
mov
mov
or
xchg
adc
cmp
(bad)
pop
mov
dec
popf
inc
fs
pop
into
push
mov
aad
jmp
in
out
mov
mov
stc
inc
jmp
pop
or
xchg
in
mov
mov
lfs
clc
mov
daa
pop
add
js
mov
addr16
cmp
dec
loop
push
jge
(bad)
adc
in
scas
lock
push
xchg
inc
push
pop
nop
loope
hlt
adc
pop
push
cmc
inc
es
adc
add
sub
cdq
(bad)
adc
or
and
inc
sbb
push
sbb
inc
mov
inc
sub
mov
aam
dec
leave
mov
xchg
sbb
jp
mov
xchg
mov
movs
jne
adc
xchg
enter
and
out
jge
pop
and
push
and
adc
lds
xor
adc
jp
stos
nop
enter
dec
ja
nop
inc
push
sbb
leave
inc
test
and
pop
mov
and
jmp
pop
pop
cdq
and
movs
(bad)
xor
rcr
scas
sub
sub
pop
retf
inc
push
rol
add
or
xchg
pushf
xchg
add
push
and
out
mov
iret
or
or
dec
xchg
ret
pop
xchg
push
or
pushf
dec
fdivr
push
xor
mov
jmp
sbb
or
xlat
adc
(bad)
and
mov
xor
lods
xlat
adc
sub
popa
movs
push
inc
xor
pop
stos
xor
test
mov
nop
push
iret
enter
gs
ret
hlt
leave
push
mov
ja
adc
dec
mov
leave
cs
cdq
mov
test
das
leave
in
pop
jle
rcr
jmp
xchg
dec
dec
mov
jg
and
loope
loop
xchg
(bad)
int3
cmp
bsr
mov
repz
retf
mov
and
stos
aam
out
leave
adc
sub
or
das
mov
jmp
mov
jb
in
leave
push
push
xchg
adc
fmul
sub
test
jl
jp
or
pop
adc
pop
test
inc
jne
push
pop
mov
jb
sbb
retf
push
rcr
sub
add
xor
imul
(bad)
lods
cmp
pop
adc
ins
push
or
scas
inc
push
imul
and
retf
or
shr
inc
mov
push
test
adc
cmp
shl
ins
mov
pop
call
sahf
fs
jno
punpckhwd
and
xchg
rol
add
mov
enter
js
sbb
in
sub
push
test
cmps
push
pusha
cmp
and
mov
xor
cmp
int3
dec
nop
dec
mov
test
mov
xchg
lods
mov
test
mov
es
mov
retf
std
call
outs
push
cmp
mov
mov
les
fisubr
ror
and
cmp
dec
out
xchg
je
into
outs
xor
jecxz
lods
ins
jae
loope
mov
(bad)
out
mov
ja
(bad)
xor
pop
cmps
mul
jmp
jp
lea
sti
lods
sti
icebp
jge
lahf
scas
bswap
das
aad
in
xchg
mul
push
iret
stos
jns
push
sbb
adc
lods
stos
adc
das
inc
dec
mov
cmp
out
scas
rcl
ja
scas
sub
xor
mov
call
mov
outs
pop
mov
mov
aas
xlat
(bad)
cdq
add
cmp
inc
add
or
jbe
mov
in
daa
sti
mov
adc
(bad)
pop
fmul
jl
das
xchg
mov
in
dec
retf
imul
outs
xor
js
cmp
push
xlat
push
enter
jle
fist
movs
mov
dec
xchg
daa
xchg
jo
mov
xchg
pop
call
std
xchg
jecxz
push
test
test
push
xchg
test
jp
pop
sub
shl
stos
lods
out
or
sbb
jmp
les
arpl
xlat
mov
cli
ret
sub
je
out
lods
or
sub
pop
adc
cdq
loop
jp
xchg
(bad)
dec
jl
lock
mov
push
xchg
mov
mov
scas
xchg
out
xchg
cmp
mov
jmp
adc
lahf
inc
int
or
xchg
cmp
xor
push
push
pop
push
pop
cmp
or
sbb
jge
cmp
call
jb
stc
inc
cmc
or
gs
sar
mov
push
sub
or
mov
sbb
xchg
dec
pop
xor
cmps
pop
iret
mov
mov
pop
pop
je
or
mov
jne
jmp
and
mov
cmp
out
cmp
sub
jns
add
loopne
les
lea
or
mov
scas
das
mov
std
lds
out
xchg
jb
leave
pop
xor
pusha
idiv
retf
mov
or
shr
jns
add
xlat
movs
ficomp
sbb
in
mov
jbe
add
in
xor
dec
push
les
enter
mov
retf
cmps
nop
xor
fisub
(bad)
mov
push
push
xchg
ins
dec
mov
bound
test
xchg
mov
and
gs
pop
test
cdq
mov
adc
dec
xor
xor
clc
int3
in
fistp
cmps
sti
add
lods
xor
(bad)
popa
push
lahf
out
dec
push
lock
xchg
enter
xor
mov
retf
and
add
fsubr
cmp
mov
mov
fs
xchg
mov
jae
sub
lock
int3
retf
push
xor
push
loopne
inc
out
sbb
cwde
aam
repz
lods
xchg
dec
inc
mov
xchg
push
das
iret
shl
jo
jmp
push
mov
push
scas
fcomip
popa
and
fstp
push
into
dec
xchg
xor
mov
push
sub
dec
ins
xor
mov
stc
sub
in
and
loop
xchg
pop
test
sub
mov
es
xor
sbb
mov
mov
dec
stos
mov
adc
pop
push
test
fwait
gs
aaa
dec
aas
cmp
xchg
iret
scas
div
shr
fcmovne
arpl
sbb
loop
xlat
aas
pop
dec
add
push
rol
hlt
pusha
dec
loop
jg
mov
pop
repnz
dec
and
and
leave
imul
retf
pop
mov
lods
mov
dec
jmp
(bad)
outs
sbb
mov
xor
sub
fsub
adc
lea
adc
jle
cmp
inc
aas
mov
mov
dec
es
cmp
enter
sub
dec
rol
push
lds
inc
stos
or
cmp
or
sub
stos
jg
pop
cli
mov
iret
adc
shl
mov
test
in
arpl
or
adc
mov
sbb
add
test
add
test
push
or
loope
sbb
inc
inc
inc
push
test
add
cdq
jae
jp
fmul
test
lock
clc
test
das
sbb
xchg
add
sar
and
add
jae
test
push
add
bound
push
adc
add
sbb
loopne
xchg
sbb
cmp
dec
sbb
push
aam
lods
leave
rcr
sbb
js
cmp
xor
fldenv
push
int
push
sar
cmp
and
sbb
stc
jno
test
sub
ja
cmps
imul
cmc
mov
push
mov
push
nop
sti
popa
ins
lock
data16
lock
leave
mov
icebp
(bad)
xchg
and
cmpxchg
sub
jns
out
call
pop
fcomp
sahf
hlt
nop
dec
add
cmp
mov
aaa
add
loop
enter
rol
pop
sbb
adc
add
sbb
mov
and
push
gs
retf
cmp
adc
movs
lods
add
mov
out
mov
rcl
les
or
rcr
inc
rcr
movntps
mov
cmp
shl
fs
shl
test
dec
cmp
jmp
lods
clc
stos
fcom
ror
pop
dec
push
jg
(bad)
cmp
lods
in
xchg
mov
mov
scas
cs
pop
mov
push
test
retf
adc
and
retf
mov
inc
stos
rcl
mov
scas
bnd
cdq
or
push
sub
pushf
sbb
adc
adc
popa
mov
xor
rcr
pop
adc
jl
call
jle
clc
add
jge
out
into
or
pop
sbb
and
cmp
pop
inc
mov
arpl
(bad)
jecxz
jl
xchg
pop
pop
pop
and
loopne
lock
xor
loope
movs
sub
in
or
xor
inc
out
xor
test
inc
stos
pop
out
mov
pop
inc
mov
inc
dec
push
test
mov
idiv
cmps
jb
scas
jno
jg
cmps
adc
aas
rcl
ret
jle
jmp
jo
jmp
cmp
nop
pop
and
pushf
cmp
mov
stc
xchg
(bad)
push
xor
scas
cli
xchg
cmp
mov
mov
aaa
retf
jge
push
ret
cli
pop
sbb
in
mov
fiadd
jecxz
pop
pop
mov
rcr
pop
std
add
aad
loopne
sbb
or
(bad)
out
scas
into
fisub
xor
pop
ins
inc
popa
xor
stos
ss
inc
sahf
add
and
push
enter
push
or
(bad)
arpl
arpl
(bad)
arpl
arpl
(bad)
outs
mov
bound
adc
repnz
ja
push
(bad)
cmp
test
push
stos
xor
mov
dec
data16
daa
mov
(bad)
rol
iret
cdq
ja
lods
inc
pop
jle
sbb
icebp
pop
jbe
shl
push
jp
out
push
jl
or
fs
ficomp
xor
dec
push
or
pushf
cmp
(bad)
daa
xlat
jnp
mov
jns
dec
(bad)
in
shl
out
xor
out
bndldx
mov
adc
push
xlat
in
scas
mov
int
retf
jnp
jb
push
mov
xchg
cs
mov
pop
pop
xor
cmp
inc
push
test
pushw
test
xchg
fldenv
xchg
cmps
cmp
(bad)
jmp
in
shl
pop
push
pop
xlat
adc
(bad)
mov
sub
cmp
xor
int
push
ins
inc
add
cmps
lds
int3
dec
mov
xchg
and
dec
inc
adc
add
adc
shr
popa
stc
jno
cmp
das
mul
fs
leave
out
mov
jno
ss
hlt
cmp
or
push
add
test
jne
add
mov
inc
mov
(bad)
push
clc
add
push
sbb
cmp
jno
js
out
mov
add
mov
push
scas
sbb
call
aad
push
stos
loopne
scas
push
mov
mov
pop
and
fucomip
xchg
adc
xor
push
shl
test
scas
test
adc
test
mov
lods
stos
and
je
fld
and
test
or
sar
jae
dec
cs
or
cmp
mov
iret
cmp
add
movs
clc
jg
add
pushf
or
aad
add
pop
icebp
fistp
out
adc
mov
(bad)
mov
sbb
cdq
xor
mov
nop
mov
lods
mov
mov
and
pop
pusha
pop
mov
inc
mov
in
sti
(bad)
pop
aad
dec
lods
push
pop
mov
adc
pop
sbb
jp
push
fnstcw
add
xor
lahf
lds
sahf
xor
jne
(bad)
out
popa
lea
add
xchg
xchg
dec
dec
gs
jge
cmps
enter
push
jo
mov
sbb
sbb
mov
test
sbb
inc
xchg
das
stos
sub
ret
and
sub
mov
pop
mul
lds
jne
aas
xor
cli
mov
arpl
aam
test
push
dec
xor
mov
inc
popa
sbb
push
addr16
retf
adc
sub
jnp
adc
mov
inc
cwde
in
mov
ds
push
es
arpl
je
popf
addr16
rep
sbb
sti
or
jne
push
mov
mov
daa
outs
mov
jbe
fsubr
jnp
jns
shl
push
or
jno
jno
enter
xlat
cdq
out
xor
outs
inc
iret
or
addr16
xor
int
movs
cmp
mov
mov
cmp
(bad)
ror
jno
outs
xor
stos
shl
or
mov
lea
xchg
and
retf
ds
cdq
aad
cmp
leave
xchg
or
retf
cmp
ret
push
mov
mov
jns
jne
add
push
movs
(bad)
add
clc
jo
dec
cli
pop
inc
mov
push
or
mul
pop
gs
mov
xchg
mov
or
mov
inc
xchg
and
and
dec
je
xor
nop
inc
into
xchg
add
pop
out
and
fisubr
push
inc
daa
jmp
movs
pop
push
lods
lock
or
mov
aam
cmp
leave
pop
pop
and
mov
pushf
rcr
cdq
and
xor
mov
cmp
sbb
xor
dec
and
fsubr
push
or
popa
ss
push
xchg
retf
dec
int3
push
xchg
inc
leave
add
push
pop
dec
movs
add
dec
mov
adc
add
mov
in
push
lock
xchg
xor
pop
stos
mov
leave
adc
nop
inc
cmp
repnz
xchg
repnz
add
mov
and
mov
jp
xchg
adc
das
inc
xchg
adc
icebp
test
or
xchg
cmp
lea
daa
mov
loope
pop
sbb
xor
por
cdq
data16
daa
sbb
push
idiv
mov
xchg
push
call
out
call
inc
popa
test
out
ss
sub
mov
inc
cmps
mov
mov
cmp
mov
rol
mov
fstp
inc
test
add
repz
mov
cmps
mov
(bad)
cmp
ror
shl
jmp
pop
add
dec
mov
inc
jg
adc
adc
nop
std
shr
cmps
cmp
out
mov
fadd
mov
(bad)
mov
jae
or
stc
push
xchg
jnp
cwde
xchg
push
popf
xor
mov
ja
sub
jmp
xchg
dec
cmp
jle
lods
xor
jg
push
stos
push
push
int
pop
cmp
cmp
xchg
inc
imul
jns
mov
add
add
lahf
adc
cdq
popf
(bad)
ror
mov
fwait
dec
test
mov
and
lea
xor
and
shr
inc
shl
loop
hlt
outs
leave
popf
lods
inc
(bad)
cmp
or
imul
inc
clc
cli
mov
lea
cwde
xchg
mov
shr
cdq
add
sub
dec
cmc
xchg
cmp
ror
cmps
add
push
dec
(bad)
pop
(bad)
int3
xor
push
dec
mov
sahf
js
punpckhbw
sub
inc
xchg
jne
out
loopne
adc
imul
out
push
pop
inc
pop
jge
xor
shr
enter
scas
adc
int3
loopne
jae
xor
mov
sub
cwde
xlat
push
arpl
push
and
pop
jne
mov
inc
mov
loop
mov
pop
xchg
cdq
ret
and
into
and
les
sbb
test
mov
xor
shl
add
sbb
sub
ins
pop
sbb
daa
or
xor
jbe
pushf
pusha
mov
(bad)
retf
jb
arpl
and
(bad)
scas
rcr
xchg
(bad)
rol
icebp
cmp
adc
or
mov
push
add
adc
enter
jne
xchg
xor
inc
ins
ja
xchg
iret
jo
(bad)
mov
aaa
mov
into
mov
cmp
inc
jns
imul
ror
shl
and
repz
outs
cwde
and
jbe
fstp
adc
jg
add
pusha
jo
std
in
sbb
adc
xor
xor
repz
fxtract
jmp
pop
jmp
hlt
adc
jmp
fsub
cmp
push
xor
std
mov
in
adc
das
adc
sar
xor
add
cmps
pop
fisub
cdq
jns
int3
xchg
scas
mov
or
push
sub
aam
test
add
bound
js
shr
add
bound
mov
bound
mov
ds
cmc
sahf
add
pop
(bad)
shl
fstp
jl
ret
mov
fisub
repnz
ret
mov
sub
xor
(bad)
mov
push
mov
mov
mov
(bad)
(bad)
into
mov
pop
jo
fbld
dec
jge
aad
push
lea
movs
lahf
popf
cmp
jae
mov
inc
stos
mov
das
nop
es
lods
push
or
loopne
mov
mov
push
inc
pop
push
jmp
mov
loopne
or
bound
les
ins
cmc
fs
repz
mov
inc
mov
dec
imul
pop
ins
mov
cmps
data16
shl
xor
loope
jg
xor
jmp
outs
and
ja
dec
pop
push
jmpw
enter
iret
outs
add
aad
lods
push
xor
movs
popf
in
aas
mov
and
scas
outs
cmps
mul
push
outs
in
jae
jge
jbe
ins
pusha
cs
retf
dec
cmps
dec
bound
dec
pop
xor
aam
leave
out
cld
pop
mov
jo
das
repnz
mov
mov
jne
aad
mov
push
pop
stos
jne
push
push
mov
xlat
pop
adc
inc
pop
xchg
in
jle
xchg
sub
stos
mov
std
cmp
out
fsin
lock
in
cmp
xchg
ja
test
adc
in
dec
jno
test
mov
lods
mov
xchg
adc
push
dec
sub
dec
mov
je
pop
out
cld
cwde
fsubr
xor
repnz
xor
cmp
data16
jb
pop
out
inc
xor
xor
pop
sbb
jae
adc
mov
xchg
push
sub
hlt
adc
mov
dec
in
arpl
or
frstor
ss
pop
retf
cmp
mov
je
cmp
jmp
inc
jmp
cs
rcr
rcl
imul
rcr
js
pop
test
bound
outs
xor
retf
arpl
jmp
fld
mov
pop
mov
repnz
cld
test
cmp
inc
cmp
add
sub
into
add
mov
test
mov
dec
xchg
(bad)
in
mov
xchg
pushf
pop
sar
mov
(bad)
pop
push
jmp
cmp
adc
sbb
push
mov
leave
shl
inc
dec
aad
rcr
jno
or
mov
sub
dec
stos
jl
inc
pop
out
sar
push
mov
into
not
(bad)
mov
pop
mov
inc
and
add
cwde
pop
xor
xchg
rcr
pop
and
es
and
push
mov
cmp
xchg
mov
dec
mov
mov
pop
movs
call
ret
adc
fisubr
out
inc
cmp
fisub
ret
test
dec
fmul
test
rcl
xchg
cs
push
scas
sub
mov
dec
pop
rcl
sub
mov
test
dec
and
aas
daa
call
adc
xchg
or
dec
stos
cdq
fdivr
mov
inc
mov
out
ins
inc
std
sbb
sbb
test
cwde
movs
mov
mov
scas
retf
pop
out
push
mov
imul
push
mov
js
xor
imul
jbe
je
fidivr
mov
mov
mov
(bad)
out
jle
xchg
sbb
pop
dec
mov
stos
adc
or
and
outs
jnp
call
fld
sbb
and
cmp
dec
in
inc
dec
mov
aam
pop
push
ds
push
pop
in
fisttp
jl
jp
jp
jp
jns
mov
mov
retf
or
gs
ja
in
outs
adc
mov
minps
fnstenv
mov
push
sbb
lods
mov
sbb
lods
xor
push
sbb
pushf
aad
mov
idiv
mov
mov
dec
clc
outs
pop
add
and
in
rol
ja
mov
ror
inc
add
ins
push
xor
fsub
adc
mov
push
outs
cdq
or
sub
sub
add
ror
dec
(bad)
repz
mov
pop
dec
rol
mov
in
cmps
out
jns
inc
xchg
sub
sub
(bad)
lock
ins
pop
adc
ret
mov
in
fs
mov
out
pop
loope
xchg
aas
mov
aas
jmp
int
push
mov
inc
int
dec
pusha
dec
mov
shr
outs
xor
shr
ins
sub
jae
xor
dec
aas
add
ja
lock
out
inc
sbb
aad
repnz
sub
mov
cwde
push
jmp
aam
test
add
push
frstor
xchg
ins
add
xor
test
mov
inc
sbb
sub
(bad)
jno
sub
(bad)
shl
test
dec
add
popa
xchg
pop
loopne
movs
inc
(bad)
xchg
aad
retf
int3
scas
pushf
rol
lock
jge
jl
idiv
dec
jp
out
cmp
popf
cld
lods
(bad)
mov
and
shl
mov
mov
or
dec
xor
in
jmp
bound
inc
aas
cmc
into
mov
push
ror
adc
mov
jmp
mov
cmp
cwde
cmp
rcl
mov
xlat
cmp
gs
jg
cdq
cs
dec
xchg
dec
xchg
dec
rcl
pop
addr16
pop
sub
adc
shl
cmp
fcmovne
daa
int
lahf
sbb
loopne
fimul
ins
cmp
stos
inc
jno
mov
test
iret
pop
cwde
xor
nop
jecxz
push
xor
mov
dec
pop
xor
sbb
ds
push
scas
fdiv
jp
rcl
loop
push
in
shl
push
xor
pop
or
scas
or
and
xchg
aaa
lahf
cmp
movs
mov
loop
das
pop
and
and
pop
test
add
leave
and
mov
aaa
bound
add
fiadd
int3
popf
xchg
into
cmp
mov
aam
add
jbe
or
(bad)
shl
sub
cs
(bad)
loop
ret
push
data16
cmp
into
(bad)
inc
xor
fsub
or
pop
jb
test
or
push
fist
test
dec
dec
xor
jns
mov
mov
fadd
daa
mov
inc
aam
push
jns
aam
popf
nop
cld
idiv
lods
push
add
add
pop
push
mov
(bad)
repz
gs
or
mov
fcompp
test
popf
pop
inc
out
xchg
push
repnz
mov
es
and
dec
dec
test
add
sti
aam
imul
inc
lahf
out
sar
pop
inc
int3
ret
pushf
sub
xchg
pop
mov
sbb
sbb
and
hlt
mov
int3
sti
mov
push
xor
dec
add
jp
inc
and
jle
aam
pop
movs
(bad)
jge
lea
aaa
ins
pop
sahf
loope
cld
mov
int
dec
movs
jo
cmp
out
mov
pop
cmps
jae
xchg
fnstsw
loop
cdq
imul
jns
mov
pop
xor
or
fisttp
xor
and
jnp
outs
stc
add
mov
adc
mov
push
mov
mov
or
mov
pop
sub
imul
dec
in
sub
add
dec
aad
inc
gs
mov
imul
mov
sub
jbe
ins
or
cmps
clc
cmp
mov
or
arpl
dec
(bad)
das
inc
jge
fnstenv
inc
sub
or
mov
and
imul
shl
dec
mov
mov
ja
jmp
cmps
xor
into
out
scas
bound
mov
arpl
push
in
js
and
cs
retf
jo
xchg
or
out
ror
nop
dec
arpl
jns
pop
xlat
iret
loopne
add
jb
sub
aad
sub
call
sbb
or
pop
pop
retf
int3
mov
xbegin
xchg
and
or
mov
mov
add
xor
in
retf
xchg
jmp
jo
or
ins
adc
pop
inc
dec
or
sub
stc
xchg
inc
mov
push
loopne
inc
daa
and
xchg
ss
fs
rcr
push
and
movs
pushf
mov
jle
sahf
dec
or
int
stc
stos
test
aad
xor
mov
(bad)
mov
xchg
jo
push
sub
pop
xor
pop
cwde
jns
out
movs
loopne
rcl
scas
push
pop
adc
and
pop
xor
lock
inc
xor
jle
test
test
or
adc
int
or
adc
and
inc
and
adc
and
inc
and
lock
adc
test
xchg
cld
add
xor
inc
and
and
adc
test
test
or
outs
jo
ret
and
and
lock
les
test
or
adc
mov
lahf
sbb
lods
call
aad
jne
cmp
call
mov
or
adc
cli
adc
and
mov
pop
bound
adc
xor
inc
or
adc
jmp
ret
and
inc
xor
inc
or
adc
adc
adc
les
and
and
or
adc
adc
les
mov
and
les
les
or
jmp
ret
and
inc
xor
inc
or
adc
adc
adc
les
dec
lock
inc
or
adc
xor
lods
or
sbb
xchg
xchg
cmc
and
or
adc
les
les
mov
bound
mov
leave
sub
mov
lahf
jmp
ret
cwde
sub
mov
leave
sub
mov
retf
bound
sub
mov
leave
ret
dec
data16
jnp
fist
jno
ins
inc
mov
mov
enter
movs
ret
dec
fdiv
mov
icebp
or
push
or
arpl
call
xchg
jns
hlt
popf
jg
int
push
xchg
or
add
aaa
mov
jmp
pop
and
add
inc
and
push
xor
sub
cmp
cmps
push
popf
out
ja
sbb
sbb
movs
jge
or
cmc
fsubr
lock
repnz
les
(bad)
sbb
lock
movs
bswap
cmp
call
mov
popf
jne
leave
ret
pop
lds
push
je
fldcw
jno
pop
pop
movs
dec
scas
(bad)
ds
mov
ja
ja
mov
mov
pop
pop
push
jge
pop
xor
cmp
dec
lods
dec
into
imul
shl
xor
outs
(bad)
mov
repz
mov
ins
imul
aas
mov
sub
bound
rep
scas
fdivr
scas
and
cmp
sub
adc
sbb
cld
jne
shl
das
dec
(bad)
xor
stc
(bad)
in
push
xchg
jl
shr
sar
aad
call
inc
cmp
iret
or
clc
test
ret
dec
mov
xor
outs
push
sbb
fcomip
inc
gs
pop
mov
pop
mov
lds
adc
sub
jno
jmp
push
sub
add
jg
pop
sub
call
popf
mov
lods
xchg
jmp
fld
mov
sub
and
mov
jecxz
pop
sub
test
fstp
movs
dec
and
jbe
inc
push
fadd
push
or
in
and
xor
mov
adc
ins
xor
repnz
lods
call
(bad)
lds
mov
out
imul
out
sub
int3
hlt
test
arpl
fist
popf
cmp
fidivr
mov
jg
mov
shl
imul
(bad)
mov
call
int
sbb
les
jne
js
or
xor
mov
(bad)
or
inc
xor
xor
and
or
push
pusha
cli
je
fisttp
neg
inc
dec
mov
cmps
pop
fild
push
or
push
adc
mov
aad
cmps
retf
mov
fmul
test
daa
or
mov
dec
sub
stos
pop
adc
es
es
(bad)
mov
push
mov
(bad)
xchg
scas
into
inc
outs
in
mov
jg
inc
jmp
mov
cld
in
in
shl
push
mov
pop
dec
inc
je
inc
jg
(bad)
pop
sub
mov
adc
jb
dec
xor
xchg
or
sub
bnd
sti
out
jp
in
or
sbb
imul
pop
nop
push
loopne
add
sbb
inc
test
addr16
xor
adc
or
leave
and
sub
adc
pop
gs
aam
push
dec
retf
bound
int3
lahf
jecxz
cld
sub
dec
test
add
iret
xchg
lock
or
sbb
repnz
xor
xor
and
in
mov
jmp
sbb
mov
inc
imul
fs
call
pmuludq
or
cmps
test
ja
sub
dec
fsub
bound
movs
fsub
sbb
sub
or
add
test
(bad)
ins
add
adc
xchg
push
jo
cmp
xchg
lds
xchg
stos
loope
and
(bad)
push
add
movs
or
(bad)
movs
arpl
(bad)
sub
jo
imul
scas
mov
ret
sar
sti
call
adc
mov
mov
pop
ja
add
jo
cmp
sub
ret
cmps
xchg
push
retf
lods
out
bound
shr
lock
jnp
add
push
fld
pop
je
fisttp
aaa
std
pusha
out
adc
mov
outs
sub
cmps
mov
and
movs
ins
scas
sbb
inc
dec
cmp
test
cmp
mov
xchg
cmps
xor
mov
dec
scas
push
sbb
stos
fld
div
leave
jns
cmp
mov
jp
cmps
nop
dec
mov
sbb
push
(bad)
js
xor
mov
mov
mov
cmp
xchg
xor
dec
cmp
push
retf
xchg
std
movs
mov
sbb
mov
or
add
test
arpl
test
jb
push
(bad)
inc
cwde
sbb
pushf
push
ins
push
adc
mov
mov
popf
jno
push
or
daa
push
(bad)
sbb
sbb
cs
cdq
add
add
outs
retf
fldcw
push
jne
mov
popf
mov
retf
xor
fisubr
jle
aaa
clc
xor
das
sar
call
mov
mov
jo
mov
sub
aaa
sti
cmps
mov
mov
pop
push
sub
ins
in
lea
enter
dec
pop
xchg
std
bound
inc
shl
xlat
and
mov
not
js
inc
ds
mov
data16
mov
call
xchg
or
int3
sbb
mov
pusha
data16
pop
retf
adc
ret
jmp
scas
inc
inc
adc
mov
push
pop
jmp
dec
in
shr
bound
loop
retf
hlt
push
sti
xlat
mul
aas
sub
mov
loope
je
stos
fwait
xor
mov
fsubr
das
aas
js
mov
fst
jp
sub
in
inc
or
pop
cmp
dec
inc
and
test
rcr
fisubr
push
shr
sbb
mov
imul
stos
sbb
cli
lock
test
enter
xor
add
lock
and
inc
or
fs
ins
lock
xchg
repz
mov
or
sub
push
sub
dec
test
out
adc
xchg
inc
or
je
jo
xchg
inc
push
mov
cmp
shl
xor
jb
pop
mov
sbb
mov
repz
dec
jae
fild
rcr
add
or
jmp
xchg
jnp
int3
in
mov
or
jns
jecxz
es
or
xlat
sbb
mov
mov
or
jle
sbb
(bad)
sub
retf
sub
pop
outs
pop
or
sar
push
lods
(bad)
neg
adc
adc
mov
loope
cmp
aam
(bad)
mov
shl
add
inc
pop
dec
xchg
pop
jb
mov
pop
out
test
clc
stos
mov
push
out
test
pop
popf
aas
cwde
sar
out
xchg
xchg
inc
inc
or
dec
xor
sbb
dec
das
cld
shr
mov
add
retf
adc
add
inc
sbb
ds
int3
(bad)
and
test
sbb
cmp
ja
movs
sub
out
pop
imul
in
in
movs
aaa
not
loopne
xchg
pop
push
leave
sub
inc
std
dec
cmps
int
call
jp
xchg
or
jg
xchg
out
out
scas
inc
pop
cmp
push
rol
mov
fmul
test
or
and
mov
aam
imul
pop
inc
pop
pcmpeqw
outs
adc
jecxz
jecxz
iret
xchg
jnp
outs
and
ret
adc
inc
jg
lock
loope
imul
pop
lea
add
dec
push
add
pop
fld
jecxz
adc
xchg
es
pop
sub
(bad)
in
cdq
push
add
xchg
mov
or
fs
and
ret
jl
add
cmp
mov
xor
jb
or
enter
cmc
cmp
fstp
retf
ror
lods
mov
push
inc
rcr
xchg
add
test
jp
jp
mov
mov
and
xchg
jns
xchg
cmp
retf
ss
push
adc
push
cmp
jae
mov
out
inc
out
and
fild
rcl
dec
push
pushf
ror
sahf
jno
mov
nop
les
out
icebp
stos
int3
cmp
sub
adc
aam
cmp
es
jno
scas
jl
mov
inc
sub
aam
xchg
or
cmps
xor
mov
cmps
push
leave
dec
mov
fiadd
sub
push
xchg
xor
jp
fwait
mov
mov
(bad)
xchg
icebp
mov
mov
cdq
inc
leave
ja
or
push
mov
addr16
sub
mov
push
adc
inc
adc
popf
sbb
outs
pushf
push
pop
(bad)
or
imul
mov
shl
adc
fwait
mov
into
sbb
call
(bad)
repz
jmp
aas
xchg
scas
jmp
dec
mov
dec
xchg
mov
retf
cli
push
push
jp
inc
add
jmp
ja
in
pop
cs
cmc
push
ins
and
push
or
push
lods
xor
adc
sub
fwait
lods
fcom
and
scas
sbb
mov
jb
add
ds
test
xchg
pop
xchg
popf
adc
movs
sub
jmp
mov
(bad)
mov
loopne
xor
dec
dec
jmp
xchg
and
xor
push
sar
xchg
rcr
mov
je
xor
(bad)
mov
dec
sub
data16
xchg
mov
mov
inc
xor
mov
mov
mov
adc
iret
mov
xor
loopne
add
in
push
add
push
fidiv
xchg
adc
scas
jge
sbb
adc
cmps
not
jmp
jle
ins
cwde
xchg
ret
adc
sbb
adc
ss
xlat
addr16
inc
push
pop
adc
cmp
xor
inc
outs
mov
xchg
iret
jb
inc
shl
mov
cmp
iret
xchg
push
movs
std
add
into
inc
mov
aad
adc
jbe
and
cld
mov
jmp
mov
outs
push
sbb
mov
mov
mov
and
jmp
(bad)
(bad)
outs
or
push
std
jecxz
jne
fild
push
mov
sub
adc
scas
add
into
xor
repz
lods
push
repnz
xor
imul
scas
jmp
js
fistp
fsubp
ja
mov
jp
fistp
adc
scas
xor
das
push
in
jmp
mov
popf
sti
pop
cwde
jns
and
cdq
xor
cld
rcr
mov
push
aam
fwait
xchg
lods
pop
xchg
mov
adc
or
test
sahf
mov
add
push
popf
ins
lods
adc
repnz
jbe
xchg
mov
jle
and
push
popa
mov
test
xchg
cwde
out
(bad)
test
sub
xchg
xor
mov
lods
cmps
pop
mov
(bad)
cmps
dec
scas
mov
mov
mov
xor
pop
sbb
stos
or
dec
cwde
shl
pop
pop
push
fsubrp
(bad)
mov
inc
es
dec
lds
cmp
loope
mov
les
inc
outs
in
jl
inc
pop
fnstcw
or
mov
jae
mov
ins
jl
xchg
cmps
(bad)
popa
jmp
in
shl
and
and
dec
daa
xchg
push
inc
xchg
jge
push
sub
sub
xchg
jmp
pop
pop
addr16
sub
outs
mov
dec
movs
jl
fisttp
push
and
push
cmp
lods
mov
data16
mov
adc
dec
ins
js
or
sar
lods
loopne
test
gs
add
adc
mov
fimul
iret
adc
outs
repnz
and
sbb
mov
mov
add
mov
lods
ret
movs
rcr
sbb
xchg
xor
call
mov
sbb
push
mov
cwde
rcl
adc
jl
out
leave
inc
sbb
mov
sub
jge
ja
test
gs
cld
ffreep
(bad)
adc
das
retf
xor
out
hlt
and
jecxz
dec
call
inc
sbb
ins
xchg
add
ds
(bad)
dec
nop
or
and
xchg
pop
nop
sbb
dec
imul
and
push
cmp
xlat
push
sbb
(bad)
pop
retf
inc
push
bound
and
scas
adc
xor
sbb
(bad)
iret
push
aad
ins
cmps
lock
adc
aad
cmp
push
std
test
mov
sbb
adc
fmul
push
push
mov
and
dec
inc
cmp
xor
int
mov
test
ss
mov
jns
cdq
ret
lods
pop
and
(bad)
mov
xor
int
(bad)
in
xor
sub
(bad)
jnp
and
sbb
in
sbb
dec
mov
pop
push
sbb
xor
xor
pop
jmp
rol
rcl
mov
(bad)
cmc
jmp
and
add
dec
push
cmp
in
fst
mov
sti
jbe
add
add
xor
out
jp
mov
ret
mov
out
arpl
jl
gs
xchg
jnp
sub
inc
jmp
fwait
adc
add
mov
mov
or
mov
(bad)
sti
cdq
mov
pop
pop
(bad)
mov
jns
retf
mov
test
loopne
and
sbb
std
jecxz
push
js
retf
push
push
dec
xchg
or
gs
mov
dec
xchg
aam
in
mov
xchg
jle
jecxz
(bad)
outs
mov
loop
or
repnz
jp
adc
adc
add
add
ret
dec
data16
loope
xchg
dec
add
pusha
cmp
and
inc
outs
(bad)
cld
add
cmp
(bad)
xor
mov
leave
arpl
push
mov
in
aam
sbb
mov
sbb
ret
and
and
and
push
clc
dec
in
in
scas
cli
imul
outs
in
scas
xor
add
data16
add
stos
mov
imul
jmp
and
fild
imul
jae
push
sbb
loope
pop
ss
inc
mov
push
cmp
cmc
fxam
lods
mov
popf
add
mov
push
mov
mov
dec
mov
push
or
(bad)
out
xchg
(bad)
pop
jecxz
inc
cmp
aad
loopne
aas
pop
xor
pop
push
cmps
xor
pop
fwait
add
retf
neg
hlt
xor
jmp
shr
jo
movs
push
fwait
out
xchg
mov
clc
cmp
cmp
shl
vandnps
ja
into
ins
enter
xchg
stos
jle
mov
lock
xchg
test
call
aas
loope
cmp
outs
lea
daa
pop
loope
not
mov
and
jns
xor
addr16
scas
(bad)
sar
fsubr
js
jecxz
jbe
fiadd
test
inc
jge
xor
push
sub
adc
or
(bad)
xchg
adc
jnp
xor
mov
(bad)
dec
call
sub
mov
movs
jnp
or
jo
inc
sub
popa
inc
mov
mov
xor
xchg
fisub
add
xor
jle
jg
jmp
pop
inc
ja
xchg
retf
and
cmp
inc
std
mov
das
hlt
jnp
arpl
jmp
je
test
(bad)
cwde
jle
mov
xchg
inc
xor
(bad)
xor
stc
dec
int
(bad)
jle
out
lods
cdq
(bad)
mov
lock
cwde
mov
dec
add
test
push
push
imul
int
stos
xor
jo
dec
lds
fdiv
fild
or
int3
ror
(bad)
mov
movd
push
mov
ja
lock
addr16
jnp
inc
jns
xor
loopne
mov
sahf
push
idiv
loope
fisttp
mov
cdq
call
fdivr
test
or
fsubr
jp
lock
out
push
aaa
out
int
shl
jne
std
jecxz
scas
xchg
xchg
inc
jnp
mov
imul
adc
ret
mov
repz
adc
(bad)
mov
pusha
das
not
or
jmp
add
jne
pushf
shl
jnp
inc
in
pop
jle
inc
jp
fdivp
cmp
sub
js
sbb
hlt
fistp
adc
xchg
pop
test
data16
icebp
aaa
mov
push
out
pushf
jns
jb
mov
jge
aas
out
sti
mov
outs
sbb
jbe
mov
mov
jne
or
mov
pop
fstp
cmp
into
shl
jmp
js
lock
lods
sar
lahf
dec
mov
into
test
dec
inc
enter
inc
fmul
or
rcl
movs
in
ret
ret
fistp
mov
dec
push
iret
ins
loopne
dec
std
jae
leave
xchg
or
rcl
pop
add
(bad)
fwait
gs
js
loop
mov
mov
and
xor
pop
hlt
fisubr
xor
push
(bad)
addr16
mov
sbb
jne
stos
mov
mov
fisub
dec
fidivr
mov
ins
mov
fwait
dec
lea
push
push
mov
lods
or
int3
fsubrp
mov
bound
fistp
jge
fwait
pushf
test
and
pop
iret
ins
xacquire
data16
sub
sbb
nop
mov
or
dec
or
push
gs
lahf
or
xchg
mov
clc
mov
cli
(bad)
movs
nop
and
js
jle
aad
and
cmp
jb
adc
push
push
add
in
sbb
jae
bound
xchg
call
sub
mov
dec
dec
inc
out
clc
cs
or
xchg
cmp
clc
test
push
inc
mov
adc
icebp
js
add
pop
pop
pop
dec
push
or
test
jbe
sar
mov
inc
mov
push
inc
jecxz
arpl
sbb
and
test
jo
cmp
ins
mov
out
lea
or
dec
enter
xor
(bad)
xor
sbb
fwait
stos
rol
and
dec
jno
xchg
fiadd
ret
xlat
jg
cmps
cmp
into
xor
pushf
(bad)
repz
addr16
test
arpl
lds
scas
mov
mov
std
test
jmp
and
mov
xchg
jge
sbb
sub
jmp
and
enter
jbe
scas
(bad)
or
mov
xor
and
jmp
add
inc
jmp
les
sub
mov
pusha
enter
sbb
into
leave
pop
popa
inc
sti
clc
xor
jge
and
adc
jmp
mov
jmp
push
nop
pop
mov
xor
and
xchg
rcr
mov
jns
mov
in
lahf
pop
pusha
mov
lea
cmps
mov
daa
xchg
jmp
nop
pop
push
retw
mov
fcomp
les
pop
adc
mov
sahf
cmp
sub
xor
sbb
adc
sub
jmp
sbb
stos
pop
imul
adc
adc
jns
pop
aam
loop
xchg
dec
out
xor
sub
or
mov
out
add
and
mov
call
mov
mov
sub
xchg
imul
cwde
inc
loopne
cdq
cdq
stos
mov
ss
jmp
int3
pop
scas
test
xlat
dec
dec
inc
adc
jae
int
jg
inc
mov
inc
and
dec
xchg
cmps
daa
jle
or
jmp
xchg
xor
mov
mov
sbb
(bad)
cmp
sbb
lock
adc
sbb
xor
jle
retf
add
retf
fiadd
or
leave
mov
xchg
add
inc
pusha
cmp
cmps
imul
call
lods
scas
push
and
das
or
enter
fld
rcr
mov
pop
loope
add
cdq
inc
adc
jmp
fwait
pop
scas
and
inc
or
cmp
ror
sbb
dec
into
clc
xchg
ret
and
in
xor
mov
imul
mov
adc
scas
inc
push
pop
pop
fcomp
pop
call
std
mov
fadd
jl
pusha
out
(bad)
or
mov
popa
sub
jb
cdq
inc
sbb
movs
lahf
or
int
mov
mov
int
xchg
outs
sub
fstp
sub
push
lock
arpl
jl
stos
dec
out
jno
mov
out
xchg
fild
sub
sub
daa
mov
cmp
stos
sbb
cmp
call
xor
out
dec
or
int3
cmp
retf
jns
or
mov
stos
push
cdq
shl
xor
dec
gs
xlat
leave
adc
xchg
call
stos
movs
sub
jmp
mov
gs
dec
mov
mov
push
mov
das
inc
cld
cmp
adc
xor
arpl
mov
sbb
add
sbb
pop
sbb
push
imul
out
adc
mov
fs
xor
hlt
scas
jmp
addr16
int
xchg
jle
and
xor
(bad)
fsubrp
xchg
int
int
and
sbb
clc
daa
mov
ins
push
mov
and
and
shl
or
xor
adc
pusha
stos
push
add
xor
test
xor
push
mov
dec
jb
sbb
dec
xchg
icebp
xor
(bad)
jno
(bad)
cwde
push
mov
pushf
addr16
cmp
fnsave
mov
mov
fiadd
sti
test
jg
xchg
inc
leave
push
inc
or
mov
enter
and
adc
adc
mov
sbb
inc
(bad)
cmp
sbb
push
cmp
fld
xchg
dec
ret
ror
cmp
mov
xor
xlat
xchg
loop
clc
outs
dec
cmovnp
mov
sub
dec
xchg
xchg
add
fst
or
pop
mov
fimul
ror
popa
popa
jmp
dec
stc
mov
push
jns
add
out
pop
mov
sub
in
mov
mov
imul
loop
adc
pop
mov
ins
cmp
in
cmp
loope
shr
clc
cmp
(bad)
pop
ins
inc
push
inc
sbb
(bad)
and
sbb
arpl
and
mov
inc
push
xor
cwde
test
pop
sbb
mov
push
xchg
mov
push
out
data16
sub
and
push
xor
mov
clc
ins
stos
push
mov
imul
adc
and
pop
add
test
push
lods
adc
fisub
std
pop
out
retf
xchg
or
mov
cmp
es
test
gs
stos
and
xor
push
sub
call
je
dec
(bad)
and
add
ss
push
daa
pushf
cmp
jl
xchg
add
and
jbe
pop
paddusb
jnp
jmp
mov
jb
xlat
iret
out
or
mov
inc
sub
das
or
pusha
or
cmp
add
mov
shl
fcomp
dec
adc
xchg
xchg
sbb
es
js
(bad)
test
dec
push
push
sub
test
mov
xor
test
xor
push
push
cmp
xchg
mov
xlat
arpl
xlat
retf
push
nop
sub
xchg
adc
jge
rcr
or
dec
pop
add
pusha
aaa
xchg
jae
out
div
xchg
jbe
es
mov
inc
cmp
xor
mov
cmp
mov
or
jbe
and
or
mov
movs
sti
test
and
call
leave
jmp
jmp
dec
lds
sub
push
inc
ins
adc
cwde
fsub
shl
cmp
fcom
retf
inc
xor
inc
adc
jmp
mov
dec
cld
sbb
nop
or
fs
sub
sbb
lock
daa
lock
push
push
inc
outs
cdq
push
mov
push
loopne
fs
pop
in
aad
pusha
lods
inc
dec
mov
fcomp
add
hlt
mov
and
cmp
cmps
push
leave
mov
(bad)
xchg
rcr
lahf
bound
add
lahf
neg
sahf
es
outs
jb
out
pop
das
sbb
pop
scas
adc
or
das
add
(bad)
mov
jnp
adc
push
sbb
mov
dec
push
clc
jecxz
adc
jns
add
sub
sub
mov
cs
test
popf
sar
push
je
rol
pop
mov
into
imul
and
rcr
add
and
lods
mov
or
and
sub
sub
mov
imul
rol
jno
out
pushf
adc
and
test
fs
xchg
retf
inc
cmp
dec
sbb
sti
(bad)
adc
sbb
inc
push
xor
xor
push
lods
nop
and
rcl
xor
mov
arpl
xor
xchg
shl
jae
and
jmp
push
in
or
sbb
push
lods
sar
shr
aaa
push
outs
xor
or
or
jne
aaa
push
fst
xchg
daa
inc
(bad)
repnz
sar
cmp
loop
mov
dec
int
fild
data16
dec
push
sub
in
sahf
rcl
repz
mov
add
adc
mul
ficom
sti
cli
mov
or
mov
sub
and
mov
mov
pop
scas
or
in
enter
mov
mov
xor
shl
aaa
push
xor
sar
(bad)
mov
jns
dec
xchg
push
jns
dec
mov
add
rcr
pop
xor
push
into
(bad)
or
dec
popf
sbb
fcom
test
sbb
add
dec
sub
mov
lods
ret
data16
dec
cdq
cmps
pusha
dec
cmc
sub
fbstp
cmp
mov
imul
sti
(bad)
outs
fstp
cmp
add
popa
out
test
dec
aas
push
sub
mov
js
stos
cdq
vmovaps
rol
arpl
pushf
out
mov
pop
xchg
test
retf
scas
dec
sub
pushf
fmul
mov
inc
cmc
pop
aam
test
dec
xor
gs
mov
push
fs
xor
in
(bad)
not
mov
sbb
popf
mov
and
loop
and
test
xor
fisub
xchg
sbb
pop
in
scas
dec
je
push
jb
push
je
ficom
or
adc
jae
mov
dec
push
push
cmps
mov
push
in
(bad)
test
xor
movs
sbb
iret
jecxz
mov
mov
mov
movs
mov
sbb
ror
out
dec
jns
xchg
mov
or
popa
sbb
mov
or
and
int
lods
cwde
jnp
xlat
adc
test
test
push
popf
cmp
jne
mov
icebp
dec
jmp
test
push
pop
pop
in
in
sub
rcl
pop
test
mov
pop
jg
out
mov
sbb
dec
sbb
xlat
fiadd
adc
lods
sub
ret
call
cmp
dec
xchg
js
push
arpl
jmp
test
inc
jecxz
dec
add
inc
lods
movs
xor
rol
in
sahf
inc
xor
adc
xchg
sbb
sbb
cmps
xor
xchg
(bad)
imul
xor
push
xchg
lds
arpl
xor
lea
xor
cmp
imul
jbe
push
lea
or
popf
test
mov
mov
jo
lahf
add
inc
xchg
push
cmp
xor
or
bound
ror
sbb
es
sub
pop
cmp
jnp
adc
out
out
loope
(bad)
retf
xchg
xchg
sahf
stos
push
or
pushf
rcl
imul
add
(bad)
fwait
push
cmp
pop
nop
inc
sti
or
adc
inc
(bad)
or
lock
mov
scas
je
pop
imul
xor
lock
mov
cmp
icebp
out
sbb
fcmovb
in
or
hlt
xchg
push
imul
push
aaa
xchg
ss
xchg
int3
push
call
xchg
call
cmp
clc
imul
jb
push
xchg
shl
stc
sbb
test
lods
and
push
lods
pop
xor
xchg
jno
jmp
mov
pop
inc
mov
mov
adc
ins
sbb
sbb
cmp
ret
add
mov
push
jb
in
enter
les
xchg
movs
add
sahf
push
daa
(bad)
adc
sbb
xchg
mov
mov
test
add
mov
sbb
sbb
div
lods
loope
stos
xor
pop
push
or
pop
test
int
hlt
ss
mov
jbe
fcmovb
mov
inc
push
ds
test
arpl
mov
mov
mov
xor
mov
mov
jp
test
xchg
or
dec
dec
push
(bad)
into
ret
pop
stos
daa
dec
bound
cmp
push
lods
xchg
lock
ret
shl
sub
push
sbb
and
mov
or
inc
xchg
retf
push
and
mov
icebp
call
sbb
(bad)
call
jmp
or
(bad)
(bad)
mov
inc
out
cmp
mov
mov
xor
mov
or
xchg
cli
fucomip
mov
clc
cdq
xor
xlat
(bad)
pop
nop
in
enter
imul
push
cmps
rcr
(bad)
xchg
xlat
les
push
loopne
idiv
cmp
jge
out
mov
mov
xor
popa
out
lahf
pop
sbb
pop
inc
hlt
inc
or
pop
out
pop
ins
cmp
jns
jae
adc
adc
mov
test
mov
jle
int3
inc
xchg
movs
add
bound
sbb
sub
mov
dec
std
mov
test
mov
add
stos
cmp
mov
(bad)
das
out
add
ds
xchg
fcomp
jle
push
cmp
mov
sbb
xchg
in
in
popf
out
cmp
sahf
pop
dec
shr
test
dec
cmps
xchg
pop
icebp
jmp
cdq
dec
cmp
scas
out
push
pushf
sar
fdiv
arpl
xor
clc
cmp
jle
jmp
test
xchg
aad
cmp
and
xor
aam
mov
aas
push
leave
sub
jns
dec
imul
ja
cmp
into
out
loope
gs
loop
ret
mov
enter
ja
xchg
jle
rcl
lea
sbb
mov
sbb
jno
les
mov
jg
fcmovnu
jle
cmp
push
(bad)
and
fstp
mov
xchg
iret
pop
mov
sahf
cmc
enter
out
mov
adc
mov
mov
sbb
jno
ret
cmp
dec
imul
imul
jmp
push
push
xchg
cmps
mov
add
test
cli
adc
inc
jbe
fild
xlat
daa
dec
inc
hlt
xchg
shr
retf
in
add
push
cmps
jo
cs
out
stos
cmp
dec
fmul
push
adc
popf
ja
xlat
(bad)
dec
cmps
or
js
lods
iret
mov
sub
sti
mov
stos
mov
daa
loopne
fnsave
fsubrp
sti
fmul
mov
test
std
movs
add
xor
(bad)
int3
mov
shl
add
and
pop
sub
mov
(bad)
lods
cmp
jbe
xchg
push
inc
lds
outs
repnz
fnstenv
shr
mov
cmp
(bad)
mov
mov
nop
push
jne
popa
fs
push
or
dec
call
mov
stos
xlat
loopne
aam
inc
imul
sbb
lods
sbb
leave
imul
stos
out
enter
add
dec
fmul
mov
jle
stos
mov
xlat
jns
lods
cmp
jge
jno
jle
outs
int3
fist
mov
adc
cmp
leave
cmp
mov
jno
dec
in
dec
(bad)
dec
sahf
ja
inc
xor
xchg
fcmovu
shl
bound
pusha
je
mov
sbb
stos
jg
loop
mov
adc
pop
and
loope
sti
stc
mov
push
mov
jp
stos
add
clc
xor
and
jmp
dec
test
xchg
sub
push
mov
push
mov
push
dec
fucomp
mov
sbb
mov
mov
mov
mov
fsubr
not
jl
sbb
(bad)
movs
mov
dec
hlt
mov
xor
sbb
in
xchg
enter
and
test
pop
cmp
inc
pushf
xchg
loop
xor
lock
xor
stos
lods
add
or
mov
mov
popf
clc
push
das
jl
mov
inc
mov
mov
pusha
mov
addr16
sub
out
adc
or
jmp
test
aam
cmp
adc
pop
sub
shl
sub
xor
addr16
or
clc
mov
mov
xor
or
in
pop
mov
add
pop
fld
stos
lods
adc
pop
mov
and
jmp
shl
test
sahf
cmp
(bad)
test
bnd
or
aam
push
mov
div
imul
fwait
mov
cdq
fdiv
inc
cmp
and
shr
xchg
jge
je
sub
xchg
js
repnz
mov
jge
pop
push
lahf
push
mov
jne
icebp
push
pop
or
(bad)
aas
add
aam
pusha
(bad)
push
mov
push
push
fcom
int3
jge
sahf
nop
adc
jecxz
pop
jl
js
lahf
and
int
and
das
fnstcw
shl
jmp
sbb
jnp
and
retf
mov
sub
mov
lahf
scas
inc
fistp
inc
hlt
jecxz
pop
jge
out
stos
push
jno
dec
clc
mov
sar
pop
test
jmp
dec
xchg
in
mov
inc
arpl
nop
push
(bad)
movs
sub
jno
or
push
push
clc
mov
push
push
rcl
scas
mov
pop
mov
inc
cdq
push
lock
jae
adc
imul
xchg
std
aas
mov
mov
pop
xchg
je
test
fs
jge
jne
sahf
push
mov
jne
outs
cmp
cmp
cmp
and
pop
jge
loopne
gs
and
sti
mov
ror
neg
out
mov
push
xchg
push
pushf
dec
test
(bad)
lock
gs
add
mov
(bad)
clc
xchg
shl
aad
jecxz
jae
fwait
lods
mov
fcomip
jbe
and
xchg
stc
test
fisttp
loope
cld
icebp
fwait
mov
push
int3
(bad)
push
popa
adc
bound
cmp
add
ret
popa
fs
fwait
test
aas
sbb
retf
jmp
outs
mov
call
js
fsubr
jmp
dec
sub
(bad)
test
lds
xchg
outs
call
popa
jge
fst
jg
dec
jl
es
push
dec
add
xchg
and
pop
retf
cmp
xchg
pop
pop
cmp
mov
call
jmp
cmc
sahf
pop
push
add
sbb
adc
pop
out
stc
arpl
(bad)
sar
icebp
stc
cmp
xchg
or
fs
pop
push
into
aas
repz
pop
aam
cmp
pop
hlt
cmp
pop
ret
pop
sub
idiv
mov
scas
outs
push
icebp
ret
pop
pop
push
nop
xor
int3
jl
gs
addr16
cmp
repnz
test
inc
cmp
jo
fyl2xp1
leave
outs
mov
pushf
xor
push
fstp
xor
mul
in
into
cmps
ret
mov
(bad)
and
inc
or
and
js
xchg
sub
(bad)
sub
adc
mov
das
push
mov
or
cmps
outs
les
mov
aad
jnp
fs
dec
mov
cmp
jb
xchg
test
and
jbe
xchg
mul
jmp
mov
jmp
stc
mov
mov
xchg
test
(bad)
aaa
ins
cmp
fcomp
pop
sbb
inc
add
loop
fsubr
jp
fst
lods
hlt
jecxz
not
push
mov
fild
push
mov
jmp
loop
(bad)
mov
sbb
sbb
das
inc
int
dec
lahf
sbb
retf
movs
mov
sub
lock
das
mov
mov
push
push
pop
stc
sub
call
leave
push
stos
cmp
not
loopne
ret
push
mov
mov
and
push
push
xor
lods
imul
mov
push
cmc
mov
scas
cmps
ins
jnp
iret
pop
jmp
sti
das
mov
(bad)
fmul
daa
rcr
mov
arpl
fmul
ret
outs
mov
pop
dec
call
mov
jbe
lods
scas
xchg
pusha
clc
imul
push
inc
cli
and
(bad)
mov
out
push
pop
ss
in
adc
loopne
push
push
ss
scas
xchg
mov
pop
ds
aad
dec
movs
sub
xchg
mov
xchg
dec
pop
or
add
retf
xchg
dec
imul
pop
adc
shl
das
rcl
mov
sbb
and
repz
lds
out
jmp
inc
mov
pop
clc
fist
call
ret
pop
test
cld
or
sbb
fidiv
xor
and
xchg
les
or
cmp
ja
cdq
push
mov
lds
xchg
hlt
push
retf
pop
xchg
xchg
and
jecxz
cmp
xor
pop
mov
cmc
and
cdq
nop
jecxz
movs
cmp
jp
xchg
repz
(bad)
cld
mov
sahf
inc
imul
jp
mov
pop
and
lock
add
data16
(bad)
out
in
jmp
adc
pop
jae
jno
jae
clc
push
fisubr
dec
mov
cmp
cli
cli
ins
inc
arpl
cdq
adc
jge
stos
pop
pop
test
(bad)
es
jecxz
mov
fidiv
sub
gs
lea
fdiv
push
mov
arpl
test
sbb
bound
xchg
push
xor
xor
or
cwde
std
pop
and
add
xor
mov
mov
sub
(bad)
loope
das
in
push
add
popf
dec
cld
add
inc
pop
out
test
ja
cmps
inc
sar
sahf
mov
push
push
mov
xchg
mov
das
pop
fs
loop
mul
jp
mov
cmc
sar
iret
mov
nop
add
adc
int
mov
js
iret
jb
adc
xchg
adc
in
xchg
jns
mov
adc
sbb
cs
push
xchg
pop
pop
inc
fst
xchg
mov
(bad)
cmp
pop
mov
in
ins
sar
xlat
xchg
stc
cdq
mov
xor
dec
(bad)
mov
and
std
inc
out
mov
xchg
and
ficomp
fisubr
ins
ins
push
mov
int
adc
gs
addr16
jg
lods
inc
sbb
(bad)
adc
pop
in
loopne
les
fstp
in
add
fsub
dec
ja
fcomi
stc
push
lods
jbe
lods
xlat
out
push
lock
xchg
add
push
mov
sbb
loop
fcomp
sub
jp
(bad)
movs
xor
mov
retf
adc
push
push
aad
fucom
pop
lods
sbb
jecxz
retf
test
and
(bad)
mov
dec
mov
movs
cdq
mov
leave
lahf
sbb
cs
pop
mov
aas
jl
mov
sub
jae
xlat
sbb
ss
cmp
iret
jne
push
jmp
xchg
mov
cmps
mov
jmp
mov
stos
stos
aaa
fmul
ins
cmp
shl
xchg
fisubr
adc
or
mov
iret
mov
pushf
jo
clc
push
xchg
cmp
bound
sahf
div
cmp
dec
mov
sub
or
jge
ss
lods
fmul
js
test
addr16
daa
ja
repz
jecxz
fisubr
mov
and
loopne
in
retf
mov
xchg
(bad)
dec
jp
cmp
xchg
inc
outs
lock
add
and
ins
sbb
push
(bad)
sub
(bad)
int3
and
cdq
mov
pushf
push
sbb
pop
sbb
or
in
leave
xchg
icebp
nop
push
ds
sub
jg
daa
mov
mov
or
popf
rcr
cld
retf
sbb
retf
sub
cmp
rcr
dec
sti
repz
jmp
(bad)
jp
sub
sar
bswap
jmp
cmp
mov
sar
(bad)
cld
js
mov
jmp
sbb
fldcw
xchg
mov
or
jg
or
and
lock
or
bound
adc
(bad)
int3
leave
clc
(bad)
cs
pusha
repz
jg
cmps
in
adc
(bad)
test
std
fbstp
call
xchg
or
or
js
mov
jmp
sti
or
xchg
hlt
das
push
pop
xchg
cli
aas
dec
das
adc
pop
pop
sti
ret
outs
push
dec
jmp
(bad)
fild
fisub
std
fld
inc
aad
popa
inc
movs
ss
dec
or
addr16
sbb
sbb
popa
sbb
sbb
inc
add
pop
lock
jnp
cmp
ss
cmp
xchg
je
pop
in
mov
mov
jp
sbb
fucomp
cmp
frstor
ffree
pop
xchg
pop
or
dec
push
fcom
aaa
sub
mov
mov
mov
ret
xor
data16
call
jnp
cwde
(bad)
cli
call
jns
jmp
nop
mov
cmp
sub
cmp
xchg
mov
fstp
sub
jle
cdq
mov
neg
pop
(bad)
sbb
out
mov
ins
cmp
cs
add
in
inc
movs
and
ret
retf
(bad)
adc
retf
mov
xor
or
sbb
sbb
(bad)
or
pop
xor
stos
pop
mov
cdq
pop
loopne
(bad)
(bad)
jmp
jp
lods
clc
push
shl
ins
adc
leave
addr16
js
cwde
push
div
out
xor
jnp
jmp
xchg
add
mov
outs
sub
pop
fsubr
sti
mov
inc
mov
in
cli
dec
clc
pop
cmp
mov
pop
call
mov
sub
cmc
mov
gs
mov
(bad)
push
scas
pop
dec
imul
ret
daa
test
inc
xor
in
fidivr
loope
in
outs
sahf
push
jge
mov
loopne
cld
inc
sbb
out
loope
xor
in
jle
sbb
adc
mov
push
or
and
pop
cwde
mov
xor
sbb
icebp
ja
imul
psubd
shl
cmc
cmp
fild
sub
xchg
cmp
push
cdq
lods
xor
(bad)
cmp
mov
inc
mov
mov
jmp
lea
cmps
mul
sub
push
pop
std
in
mov
stc
add
mov
dec
loopne
pop
lock
les
test
fidiv
aad
cmc
inc
push
call
inc
dec
mov
sbb
aad
sub
call
shl
jecxz
in
(bad)
sub
add
ret
rcl
nop
or
rcr
popa
enter
or
ret
or
adc
xchg
or
fs
push
xchg
inc
inc
or
ret
or
pop
sti
push
add
mov
imul
jle
inc
mov
jp
jne
mov
(bad)
rcl
or
adc
fwait
or
repz
mov
in
inc
cmp
add
mov
jmp
(bad)
imul
cmp
stos
mov
and
cmc
jbe
into
cmp
adc
int
adc
rol
or
nop
or
enter
or
adc
inc
or
adc
add
add
xor
xor
add
or
xor
add
icebp
adc
ror
add
xor
enter
lock
les
xor
add
ds
or
push
pop
mov
popw
test
dec
icebp
inc
fwait
stc
ins
test
pop
mov
adc
xchg
mov
mov
retf
int3
mov
ds
ret
mov
in
jbe
stc
or
add
inc
sbb
nop
inc
adc
loopne
mov
es
jecxz
mov
mov
js
sbb
sti
scas
mov
pop
cmc
inc
lods
pop
push
lea
mov
inc
movs
les
mov
arpl
xor
mov
and
jnp
jbe
outs
xchg
mov
dec
cmp
sub
jmp
(bad)
and
test
dec
fdivr
xlat
stos
sbb
test
push
sbb
adc
dec
movs
push
lods
push
imul
cmp
mov
xor
cmp
adc
cmp
mov
sub
cmps
fidivr
pop
pop
xchg
outs
push
push
cmps
dec
fucomi
adc
mov
daa
(bad)
mov
ficomp
jmp
push
mov
in
lods
repnz
inc
sbb
adc
xor
int3
jns
jle
or
cli
int
clc
add
inc
imul
xor
loop
cmp
sbb
mov
pop
inc
sbb
mov
imul
xlat
and
xchg
cmc
rdpmc
and
lock
aas
jg
jmp
adc
mov
and
aas
sbb
nop
xchg
and
xor
and
cli
ds
rcr
pop
pop
mov
adc
in
aas
push
cmp
mov
jo
rcr
(bad)
leave
jg
aaa
sbb
fadd
sti
adc
add
pusha
stos
xchg
push
push
in
or
and
mov
dec
or
inc
sbb
inc
(bad)
and
popf
dec
popf
add
or
icebp
mov
(bad)
adc
sub
inc
lods
mov
shl
ins
test
icebp
adc
(bad)
jns
div
hlt
stos
pop
dec
jo
clc
aad
jo
shr
pop
add
out
xlat
mov
dec
jne
ret
aas
test
std
cmp
mov
cld
mov
add
pop
adc
pusha
dec
mov
jns
jle
xor
inc
cli
jp
jl
mov
sub
test
lods
cmc
fbstp
imul
mov
inc
xlat
add
pusha
and
sub
fwait
test
mov
mov
pop
cmp
fisub
movs
push
xlat
mov
icebp
adc
aam
or
xchg
rcl
movs
mov
pusha
inc
repnz
pop
call
cmp
popa
(bad)
jl
aas
and
ja
jecxz
sbb
dec
inc
add
mov
dec
dec
or
dec
dec
dec
dec
inc
dec
adc
add
sbb
dec
fxch
cmps
cmp
in
pushf
ins
mov
sub
fcom
scas
fst
(bad)
js
std
pop
xlat
adc
cmc
aas
fbld
(bad)
jp
pop
or
inc
out
sbb
gs
mov
jge
jae
dec
mov
mov
jnp
pop
jnp
mov
sar
xor
sbb
fdivr
inc
test
push
lahf
lahf
fst
(bad)
dec
cmp
daa
sub
add
xor
movs
cmp
out
rcl
dec
xor
mov
retf
and
jge
mov
and
call
add
adc
icebp
cmp
stc
cmp
mov
mov
and
and
loope
jl
fcmovnbe
mov
mov
xchg
inc
push
shl
das
pusha
sbb
je
in
inc
jnp
dec
lods
jmp
mov
mov
test
iret
xchg
cmp
in
mov
ret
and
out
pop
sti
add
int3
sbb
xor
push
out
(bad)
repnz
rcr
pop
push
mov
lds
aad
into
xchg
int
lds
icebp
pop
jecxz
hlt
mov
jb
stos
std
mov
push
pop
dec
add
std
movs
ja
and
js
ins
mov
add
out
sub
(bad)
std
bound
aad
xchg
add
inc
mov
and
add
pop
leave
sub
jne
sub
in
scas
push
pop
push
shr
cli
ret
pop
ins
jae
aam
jns
sbb
movhps
cmp
push
jl
jmp
push
sub
jg
loopne
mov
xchg
and
pop
or
dec
xchg
cwde
mov
add
pop
call
(bad)
mov
fwait
push
push
scas
retf
push
scas
add
(bad)
sub
mov
(bad)
sub
sar
and
std
ss
neg
push
cli
hlt
test
xor
mul
dec
sbb
mov
outs
mov
in
sbb
fcom
mov
(bad)
imul
pop
addr16
shr
mov
sti
scas
pop
pop
pop
pop
loopne
xchg
cmps
repnz
sub
xchg
or
sub
outs
jmp
push
cli
xchg
xlat
add
pushw
mov
add
outs
in
(bad)
push
jbe
add
or
mov
sti
or
ds
(bad)
stos
cli
mov
jae
xchg
mov
push
stos
push
fucomi
imul
cdq
mov
xlat
ror
xor
in
mov
dec
shl
ficomp
adc
mov
or
fst
push
enter
add
scas
stc
cwde
mov
fstp
in
sub
push
mov
outs
mov
jp
fwait
aam
stos
add
sar
icebp
sub
cmp
add
cmp
sub
mov
dec
ret
sbb
int
pop
(bad)
call
xchg
(bad)
mov
jl
jae
rol
jg
jmp
popf
and
pop
mov
adc
out
cmps
add
cmp
mov
fdiv
mov
iret
movs
mov
jecxz
das
movs
sbb
inc
inc
out
jno
popf
mov
shl
xchg
out
add
pop
enter
add
sub
add
mul
jbe
ja
sbb
jge
cdq
dec
pushf
retf
mov
sti
into
loopne
inc
scas
push
inc
sbb
push
push
jl
jmp
inc
jecxz
ins
jecxz
fucompp
mov
mov
not
mov
std
jmp
dec
xchg
add
cld
cmp
mov
mov
in
dec
jmp
inc
jae
sbb
xchg
sar
fwait
cmp
loop
xlat
cmp
ficomp
jecxz
sub
jmp
mov
inc
xchg
dec
pop
pop
sub
inc
lods
pop
in
adc
and
jae
pop
imul
mov
and
(bad)
out
xchg
jb
xchg
in
inc
xchg
cmps
xor
stos
cmc
jmp
jle
xlat
mov
pop
mov
push
mov
cmps
call
mov
mov
out
pop
hlt
(bad)
jo
mov
stc
dec
aad
xlat
test
call
xor
cld
add
push
and
push
cmps
sar
inc
push
adc
je
fdiv
int
jmp
retf
inc
or
and
jge
test
pop
dec
xor
pop
sub
std
gs
mov
sahf
pop
ins
out
sub
sub
or
push
pop
mov
ins
lss
ror
xor
pop
pop
inc
cli
xchg
cmp
dec
sahf
sub
into
or
shr
lock
outs
ins
in
iret
sbb
and
dec
loope
mov
ss
lds
sar
imul
imul
leave
aas
xchg
lds
jb
add
mov
dec
fdiv
out
repnz
jb
xor
jbe
xor
xor
add
push
mov
rol
sbb
or
ror
shl
loop
mov
mov
(bad)
outs
dec
jne
test
mov
xchg
movs
sub
mov
pop
lods
fild
pop
or
jne
gs
lods
hlt
jmp
jbe
dec
fld
or
dec
mov
add
pop
mov
test
dec
mov
jb
inc
cwde
ja
ss
addr16
mov
jne
movs
mov
nop
test
movzx
imul
cmp
imul
jbe
test
push
xor
cmps
sbb
xor
movs
lahf
sbb
outs
push
sbb
inc
xchg
aas
test
pop
mov
mov
jmp
xchg
aam
sbb
adc
pop
cwde
sub
pop
jl
push
xchg
fwait
aad
inc
push
dec
in
mov
outs
mov
jno
cld
adc
lods
cmp
mov
les
imul
mov
cmp
and
xchg
mov
jns
out
pop
push
sti
push
nop
test
gs
ret
loop
mov
fwait
stos
outs
int3
or
mov
mov
clc
jne
stos
jae
pop
and
aad
pusha
cld
stos
test
and
adc
out
mov
test
jp
and
mov
or
daa
stos
inc
scas
or
ss
adc
and
fldcw
dec
mov
shr
lods
ficom
sub
mov
pushf
cwde
push
les
and
dec
add
sub
or
jo
pop
cmc
cwde
cwde
call
movs
mov
mov
out
push
and
push
inc
dec
mov
hlt
(bad)
push
hlt
sbb
xchg
xor
push
sub
cld
sbb
push
sbb
test
or
pop
push
shl
jl
lds
jo
fucomp
xchg
jae
aam
fidiv
adc
not
(bad)
push
lock
(bad)
jg
or
xlat
fldenvw
ror
into
xor
in
xlat
push
inc
loop
pop
test
add
cmps
push
push
icebp
fisttp
jge
cmc
dec
pop
mov
jecxz
or
dec
mov
scas
and
ins
push
xchg
pusha
inc
add
movs
mov
scas
xor
inc
loop
scas
outs
in
lods
ret
mov
or
mov
dec
cld
repz
sub
cld
dec
mov
push
dec
repz
push
pop
loopne
rol
xchg
aaa
cmc
(bad)
data16
jle
add
pop
cmp
iret
loope
inc
out
inc
mov
xchg
lahf
stc
push
jecxz
fisubr
mov
xchg
(bad)
sub
mov
mov
pop
int3
cmp
cmps
push
cmps
fiadd
jbe
push
ss
fld
xlat
retf
sbb
inc
mov
jno
mov
jl
sub
inc
inc
mov
push
(bad)
pop
js
adc
movs
ror
mov
mov
nop
jge
add
push
jle
fld
xchg
mov
retf
fsubr
aam
add
addr16
pop
sub
and
fwait
pop
or
add
push
scas
jae
(bad)
pusha
mov
inc
mov
dec
shl
and
imul
mov
popf
imul
es
inc
pop
pop
ret
in
adc
mov
and
jb
pop
pushf
gs
in
mov
out
loope
mov
out
add
cmps
jne
push
(bad)
pop
inc
mov
clc
mov
dec
lock
push
sti
call
or
lock
add
clc
fimul
and
dec
cld
imul
enter
aas
push
cli
sbb
dec
nop
sub
sub
push
push
int
sbb
push
pop
inc
pop
push
and
shl
add
jmp
and
pop
cmp
jmp
das
mov
das
mov
cmp
out
imul
push
mov
cmp
retf
jb
xchg
loop
pop
scas
adc
pop
fnstcw
jnp
leave
sub
mov
sub
sbb
inc
xlat
cdq
inc
pop
das
pop
addr16
sbb
xor
pusha
sub
mov
mov
or
in
div
gs
or
jmp
pop
loop
(bad)
jo
cwde
je
jge
sbb
std
add
rol
in
pmulhuw
add
adc
xchg
aad
iret
popf
inc
dec
jae
rcr
lahf
pop
aam
arpl
cmps
jp
mov
pop
push
push
xchg
mov
cmp
dec
inc
mov
add
retf
(bad)
sbb
and
outs
cmp
dec
movs
in
pop
or
outs
adc
add
pop
mov
sbb
pop
fisub
gs
adc
xchg
aad
es
mov
pusha
mov
fcom
jecxz
or
imul
cmps
sub
cmp
cmp
(bad)
dec
cmp
adc
mov
cmp
mov
mov
call
test
arpl
mov
and
pusha
sub
adc
pushf
cwde
sub
sub
fadd
pushf
ins
int3
sbb
cwde
ds
mov
scas
fld
jmp
test
and
jnp
mov
mov
shl
jg
sbb
nop
add
rcr
stc
mov
test
and
or
and
iret
mov
add
add
rcr
sbb
mov
jb
cld
or
cmp
retf
test
jns
jb
fwait
sar
pop
sbb
push
dec
je
outs
int3
pop
popw
fcmovnb
lods
mov
das
mov
in
int
push
jb
cmc
jmp
dec
call
(bad)
mov
sbb
ins
repnz
iret
mov
loope
xlat
cwde
xor
cmp
outs
ins
movs
dec
push
int3
(bad)
imul
jno
loope
cmp
jmp
loope
pop
xlat
movs
adc
lods
in
iret
sti
loop
mov
pop
jl
stc
dec
jmp
shl
or
int
sbb
add
mov
mov
mov
scas
inc
lea
jnp
mov
sbb
dec
add
jbe
cmp
leave
push
push
dec
jb
mov
inc
test
ss
sbb
mov
pop
pop
ror
js
pop
gs
out
or
into
ins
xchg
mov
pusha
push
retf
out
stos
mov
test
sbb
jge
test
mov
jno
mov
xchg
int
inc
bswap
fldl2e
iret
adc
nop
pop
and
retf
sub
dec
rcl
or
xor
xchg
jecxz
bound
out
mov
jb
mov
sbb
push
mov
shl
in
test
repz
stos
xor
pushf
(bad)
mov
xchg
push
into
mov
pop
in
cs
out
adc
lods
or
rcr
jg
loopne
movs
movs
cmp
jg
sbb
xchg
iret
inc
sbb
(bad)
outs
ret
sbb
sub
mov
jp
xor
retf
jae
rcr
mov
retf
push
mov
pop
clc
pop
cmp
icebp
lock
fs
fistp
js
nop
xchg
das
and
scas
js
cmp
movs
mov
mov
and
adc
jae
loopne
cmc
jmp
jecxz
mov
adc
push
inc
int
lock
mov
inc
sbb
ds
inc
pop
fidiv
cmp
inc
lahf
jo
mov
mov
jp
pop
and
in
jl
loop
push
push
bnd
push
and
jns
shl
mov
iret
aad
or
xor
sub
loope
mov
fidivr
(bad)
jmp
push
push
lock
add
add
icebp
pop
in
pop
mov
(bad)
out
sbb
cli
mov
gs
ins
pop
sbb
fwait
or
les
sub
sbb
fadd
out
add
xchg
add
movs
fdivr
push
push
xchg
add
aam
in
jb
inc
inc
fsub
ror
or
add
repz
mov
ja
cmps
mov
cmps
pop
cs
mov
inc
xlat
mov
adc
sbb
ror
mov
xchg
test
int
retf
pop
js
inc
ss
push
out
adc
loopne
jg
sbb
lds
xchg
fiadd
and
xchg
mov
and
cs
ret
sub
shl
and
cmp
sub
addr16
test
js
lock
jne
in
xor
cmps
sbb
pop
fbld
sub
not
and
pop
das
sbb
ss
pop
sti
and
bound
inc
push
popa
js
fdivr
pop
ret
jge
dec
js
xchg
xchg
(bad)
jmp
or
nop
jmp
sti
mov
ret
(bad)
inc
cmp
lods
sbb
test
xor
inc
add
or
std
inc
sub
jb
cld
retf
inc
lock
mov
(bad)
push
cmp
mov
or
js
int3
mov
das
in
fwait
jmp
sti
(bad)
dec
cmp
aas
or
repz
jne
fsincos
xchg
out
shr
sar
test
lahf
das
(bad)
sub
imul
sub
xor
adc
stos
mov
outs
push
sbb
push
inc
mov
dec
mov
int3
popa
push
pop
push
icebp
pop
adc
cmp
repnz
stc
jbe
inc
cs
push
rol
gs
xor
in
(bad)
dec
in
(bad)
jnp
mov
sbb
xchg
addr16
inc
and
pop
mov
popf
add
pop
sbb
data16
repnz
pop
(bad)
rcl
mov
pusha
push
xchg
fld
fwait
addr16
mov
and
or
adc
lock
and
add
push
pop
dec
ret
gs
test
nop
shl
cmp
in
ds
lods
test
cmps
cmps
pop
or
push
loopne
dec
(bad)
cdq
into
jae
call
jg
pop
push
jecxz
mov
icebp
das
push
cli
sar
mov
fwait
aas
(bad)
and
mov
jl
jnp
aas
mov
int
mov
pushf
ret
xchg
push
jmp
nop
add
xchg
xchg
add
push
std
mov
hlt
jmp
dec
sbb
pop
jmp
add
pop
maskmovq
idiv
call
das
and
lahf
add
and
mov
in
add
sbb
scas
mov
std
jp
bound
sub
test
das
push
jle
pop
leave
push
fnstenv
fsub
push
push
pushf
pop
into
sti
cld
icebp
fidivr
add
outs
int3
das
dec
imul
neg
pop
mul
inc
jge
dec
add
je
std
mov
jmp
lods
add
ins
movs
sbb
or
mul
dec
fistp
in
(bad)
stc
sahf
add
sbb
call
std
sub
shr
jge
rcr
mov
aas
outs
jmp
fimul
fsub
inc
cld
int
xor
fcom
std
xor
cmc
mov
jl
cld
jne
rol
cmp
scas
sub
outs
lahf
mov
pop
fisttp
mov
or
jmp
loopne
pop
mov
(bad)
jno
xor
stc
sub
push
rcl
sbb
mov
(bad)
js
bound
cmovge
fbld
sbb
in
in
jbe
loop
and
test
fwait
adc
xchg
nop
or
or
cmp
sar
loop
rcl
inc
jmp
jge
sub
push
add
mov
push
adc
aam
fadd
cmp
dec
sub
test
pop
lods
rcr
push
xlat
in
hlt
leave
loop
test
int3
daa
mov
pop
lock
repnz
sbb
jge
adc
inc
popf
mov
jmp
xchg
loope
pushf
aaa
mov
or
add
inc
jmp
mov
xchg
jmp
enter
add
test
aam
pop
inc
pop
xor
pop
push
dec
jg
jnp
std
push
sbb
mov
mov
and
mov
scas
jl
add
dec
out
shl
(bad)
or
cmp
dec
mov
out
inc
test
sbb
mov
aam
mov
sbb
sar
mov
dec
jge
mov
dec
jmp
pop
mov
cli
mov
scas
cmp
xlat
inc
jle
sahf
mov
ins
sub
mov
ret
out
add
pop
xchg
jae
xchg
outs
lahf
test
jb
lahf
test
lea
rcr
push
pop
mov
stos
pop
mov
outs
repz
dec
cmp
mov
rcl
sub
add
xchg
test
adc
or
sti
jle
jb
sbb
jnp
loopne
sti
push
sub
test
xlat
cmp
rcr
dec
jno
push
ds
xchg
sbb
mov
cmp
scas
pop
mov
mov
rol
rcr
or
scas
or
(bad)
push
retf
lea
jmp
pop
pop
mov
not
push
cdq
mov
arpl
jmp
ja
loop
jg
gs
jmp
(bad)
mov
dec
(bad)
sbb
cmps
cmps
in
or
push
sti
add
sub
sbb
and
je
hlt
or
scas
inc
aam
mov
data16
jbe
cld
fld
adc
sub
in
and
pop
pop
adc
push
xor
in
icebp
push
adc
pop
mov
and
test
out
xchg
xchg
outs
pop
sub
ja
shl
dec
in
xor
imul
fucomp
jb
jbe
out
lahf
and
(bad)
adc
scas
fdiv
and
fs
fmul
ins
sbb
fwait
ds
stos
sar
xchg
lds
pop
pop
and
fcmovb
out
mov
dec
test
pop
xlat
or
sti
sub
in
aad
sub
push
retf
ja
adc
pop
cwde
sbb
outs
jmp
in
test
and
mov
(bad)
sbb
cld
xchg
enter
clc
fidivr
sti
dec
adc
sbb
push
lahf
and
push
inc
mov
or
add
mov
and
cmc
outs
cmps
and
cwde
sti
push
(bad)
and
ds
adc
inc
xchg
xlat
in
imul
add
mov
aas
fcmovu
daa
dec
sub
sub
jge
sub
cmp
shl
push
popf
mov
imul
inc
mov
push
mov
jo
int3
es
push
sbb
(bad)
fwait
cmps
(bad)
imul
cmps
cmps
inc
ss
xor
shl
adc
dec
mov
sti
cmp
fldcw
adc
push
push
outs
test
popf
jmp
fmul
test
inc
mov
icebp
and
ror
add
arpl
daa
inc
dec
xor
jge
retf
rol
fwait
and
dec
xchg
mov
cs
neg
loope
mov
movs
jns
iret
mov
sub
jno
xor
gs
push
or
pop
dec
(bad)
retf
mov
pop
call
out
xchg
fcomp
add
inc
mov
or
out
push
lahf
sub
(bad)
inc
std
ds
mov
lea
rcr
rol
mov
popa
jge
fwait
xchg
jno
add
adc
retf
popf
push
push
idiv
sub
inc
xor
ins
retf
stos
jecxz
pop
push
test
ins
jmp
lahf
cmp
or
sub
arpl
dec
adc
cmp
outs
adc
mov
sbb
retf
pop
enter
test
retf
repnz
mov
jno
aam
(bad)
(bad)
cwde
rol
pop
mov
test
ds
popa
inc
pop
mov
xor
add
aam
out
mov
xchg
jecxz
mov
test
or
popa
cmps
or
mov
or
je
or
and
shl
out
pop
cs
xchg
jae
mov
push
sub
ins
or
inc
jae
mov
mov
stos
imul
fisub
adc
loopne
sti
jl
or
stos
mov
push
sar
jne
xor
popf
add
enter
add
mov
fsub
add
lods
xor
dec
ds
in
sbb
inc
gs
jge
das
add
push
cmps
std
test
sub
or
xchg
lea
jbe
cmp
mov
(bad)
clc
retf
out
test
push
(bad)
jle
push
fldcw
mul
jmp
gs
imul
or
ja
xor
shl
cmc
xchg
shr
jns
adc
or
clc
pop
pop
inc
push
mov
inc
hlt
retf
inc
movs
movs
sti
fstp
out
frstor
clc
test
push
jle
fist
xchg
push
mov
(bad)
ror
popf
xor
jge
lds
mov
sub
add
ss
fcomp
cmc
or
mov
cmp
and
mov
jge
mov
(bad)
(bad)
scas
mov
pop
add
xchg
and
jge
mov
xchg
(bad)
fdiv
icebp
inc
imul
das
and
sub
shl
out
repz
mov
rcr
jg
dec
xor
sub
push
mov
cmp
lahf
push
push
xlat
and
push
test
jmp
jmp
cmovg
ds
jns
ins
jg
out
lods
xchg
shl
das
inc
outs
pop
jae
inc
jnp
cmp
std
sbb
ds
pop
into
add
in
adc
add
sub
sub
push
jge
jnp
sbb
xchg
(bad)
xchg
sbb
pop
inc
mov
sar
movntps
(bad)
jg
(bad)
jmp
fdivp
fisttp
imul
loop
std
cmp
jle
(bad)
xor
cmp
dec
popf
add
mov
and
call
sti
stos
rcr
push
xchg
in
pop
dec
aaa
das
pop
xchg
jnp
ds
mov
mov
sbb
fstp
fidivr
jnp
lds
push
mov
jg
fcmovnbe
cmp
sbb
dec
cmc
fs
push
and
pop
push
imul
push
mov
out
jbe
pusha
xchg
push
data16
mov
loopne
bound
xor
nop
and
retf
shr
adc
mov
mov
(bad)
(bad)
xlat
mov
cmp
add
arpl
dec
pop
dec
push
bound
xchg
xor
mov
daa
loopne
popa
xchg
adc
rol
and
push
aam
sub
ret
es
push
mov
je
mov
fwait
neg
out
(bad)
imul
lock
cmps
ror
shl
enter
ja
pop
hlt
out
std
repz
outs
jmp
push
and
jo
xor
add
pop
loopne
xor
mov
fist
stos
test
test
adc
sub
mov
icebp
lock
mov
imul
sub
jg
sub
sbb
push
lea
add
pop
inc
in
int
or
push
ret
add
and
adc
jno
mov
cmps
fcom
adc
add
cmps
out
xchg
(bad)
in
out
cmps
in
std
popf
sbb
mov
leave
cmc
mov
mov
pop
int
pushf
out
dec
mov
jne
fs
pop
dec
xor
push
sar
mov
cmc
pop
gs
sbb
add
outs
jle
js
js
js
cmp
mov
icebp
into
ds
(bad)
mov
dec
mov
psrld
cmp
xchg
int
or
es
je
(bad)
call
or
fadd
sub
pop
repnz
mov
(bad)
jno
sbb
mov
mov
(bad)
leave
jno
push
ror
xor
push
mov
pop
jns
loope
mov
pop
rcr
add
cmps
adc
sbb
fist
enter
enter
mov
mov
push
xchg
sbb
das
stc
sub
dec
sub
and
hlt
mov
(bad)
loope
je
clc
lods
in
test
jg
stc
cmp
shl
out
enter
ret
dec
outs
pop
ins
inc
mov
loop
lds
fcom
cmc
movq
movs
jecxz
mov
lods
xor
std
or
mov
and
inc
movs
xchg
div
pop
ins
push
and
mov
cmps
call
jne
add
xchg
sub
in
and
or
sub
fidivr
mov
or
or
lods
xchg
aas
ins
dec
ins
arpl
aas
arpl
mov
xchg
sbb
ret
outs
cli
ficomp
call
sub
and
adc
push
pop
in
fcmovne
adc
pop
sub
pop
fisub
or
mov
repz
jmp
fsubr
addr16
mov
sub
inc
(bad)
sbb
iret
rcl
outs
xchg
sbb
pop
inc
(bad)
pushf
int
cmps
std
dec
or
sub
sbb
add
sub
ret
inc
push
jmp
push
nop
push
stos
sub
pop
jo
cmc
imul
mov
out
pushf
ins
pop
loope
inc
mov
or
dec
jl
mov
mov
mov
mov
cmp
jne
mov
push
jbe
inc
je
xchg
loop
mov
ficom
xchg
stos
movs
xchg
out
mov
jg
sbb
stos
cmp
jl
add
mov
mov
sbb
xor
push
jmp
cmp
ffreep
inc
or
test
mov
inc
not
xchg
inc
adc
adc
and
(bad)
lods
cmp
jns
push
or
or
xor
add
pop
(bad)
(bad)
adc
xor
push
(bad)
pop
xchg
xor
jp
js
fnop
pop
fs
rol
jno
loop
ficom
push
xchg
rol
clc
jne
inc
inc
scas
(bad)
mov
jb
sub
imul
adc
(bad)
xor
push
pop
jmp
jmp
fadd
pop
mov
mov
out
mov
fwait
icebp
iret
(bad)
and
inc
inc
in
push
call
xchg
pop
inc
sbb
pop
rol
mov
and
addr16
pusha
cli
push
dec
addr16
les
rcr
int
imul
jle
and
(bad)
imul
dec
clc
retf
stc
(bad)
cmps
out
mov
cmp
push
push
sub
cld
(bad)
cmp
jnp
dec
addr16
ja
cmc
test
dec
fnstsw
push
cli
daa
fs
xor
adc
push
pusha
add
pop
popf
dec
add
mov
or
sub
add
add
or
pusha
inc
add
push
push
jp
push
sub
ins
add
lods
add
push
add
and
add
mov
xor
sub
dec
adc
mov
cmp
inc
pop
inc
loop
loop
bound
mov
or
xor
shrd
cmp
xor
lock
push
rcr
xor
inc
nop
pop
clc
pop
outs
inc
rol
mov
rol
sub
add
push
pusha
cmpps
arpl
enter
add
inc
fldenv
in
in
test
add
mov
inc
out
xor
sbb
ss
mov
push
mov
or
js
jbe
ds
cmp
les
int3
sbb
mov
aaa
sbb
sti
loopne
shl
lock
cmp
jp
outs
xor
inc
jmp
add
sub
sar
push
pushf
push
cwde
push
pushf
pop
mov
push
(bad)
pop
add
mov
lds
add
or
mov
(bad)
clts
rsqrtps
ret
pop
stos
and
xchg
push
pop
and
xchg
sbb
cmp
pusha
jno
cld
cmp
rol
rcl
xlat
add
push
rcr
pop
adc
jle
cmp
push
push
cwde
sbb
cmp
pusha
jnp
jnp
jb
mov
inc
or
(bad)
cmp
xchg
repnz
test
(bad)
loopne
ins
mov
ds
dec
mov
cmp
cmp
xor
sbb
mov
mov
dec
add
popf
out
mov
scas
sbb
or
(bad)
mov
add
loopne
mov
arpl
fcom
xchg
lods
std
or
push
inc
pop
es
xor
and
push
or
mov
pop
or
pop
adc
loopne
stos
inc
out
push
jno
inc
(bad)
sub
test
les
(bad)
pop
call
and
jg
dec
push
xor
and
jmp
dec
mov
pop
shl
mov
test
jle
add
add
adc
xor
inc
adc
xchg
xor
mov
pusha
mov
cmps
push
dec
adc
jl
in
add
rcl
in
out
mov
jne
pusha
mov
test
stc
out
bound
xor
(bad)
int3
(bad)
sbb
dec
or
les
cmps
jnp
inc
pop
push
test
cmp
dec
xchg
jmp
xchg
adc
repz
fs
xchg
inc
je
xor
jg
adc
push
pushf
mov
pop
xor
sbb
push
das
addr16
inc
sbb
add
mov
pop
xchg
mov
sub
mov
(bad)
mov
jb
and
or
cld
push
and
(bad)
jno
push
adc
or
inc
(bad)
mov
or
adc
out
cdq
rcl
ins
arpl
jno
dec
ret
mov
shl
mov
sbb
cwde
mov
imul
adc
je
inc
jg
fimul
mov
push
ds
dec
dec
pusha
mov
repz
shr
mov
shr
mov
icebp
and
fstp
xor
pop
push
dec
add
popa
and
sbb
push
in
mov
jg
(bad)
int3
push
mov
mov
popf
rol
push
sbb
(bad)
shl
sbb
xor
cmp
mov
std
and
gs
repz
xchg
mov
lods
cmps
loopne
pop
data16
xor
pop
or
cwde
scas
mov
cmc
inc
ret
sub
ins
es
scas
fisub
lock
jmp
les
xchg
sub
mov
cwde
cmc
pushf
cmc
lods
cmc
inc
mov
mov
mov
mov
push
test
retf
push
dec
pop
push
fcomp
mov
pop
xor
stos
pop
aaa
fsubr
and
cmp
enter
dec
and
loope
fs
ret
jecxz
aaa
inc
xchg
ins
(bad)
push
ret
movs
ret
fild
add
leave
push
lahf
jb
or
pop
scas
sbb
ins
cmp
clc
fcomp
test
jno
(bad)
xlat
(bad)
out
fldln2
jae
push
xchg
cli
and
jecxz
adc
jo
test
mov
pop
pusha
daa
ins
dec
sub
xchg
sub
test
scas
add
inc
mov
test
test
mov
leave
ja
adc
add
(bad)
pop
pop
ss
pop
int3
aaa
(bad)
adc
add
pop
mov
pop
test
sbb
gs
popf
(bad)
mov
cmps
pop
scas
push
(bad)
lds
imul
leave
div
add
xchg
inc
push
pop
outs
leave
loop
push
cmc
xchg
inc
push
push
test
enter
xchg
xor
dec
fist
xchg
fdiv
movs
test
mov
call
stos
mov
out
jb
and
out
mov
push
pop
xor
cli
jmp
sahf
push
test
fxch
js
inc
adc
and
dec
mov
(bad)
jmp
push
and
and
lds
pusha
fiadd
fimul
in
sbb
add
add
pop
fisub
ror
loop
jle
repz
dec
imul
cmp
pop
imul
dec
and
(bad)
in
stos
xchg
retf
jb
pop
pop
adc
fistp
xor
xchg
sbb
mov
loope
loopne
and
and
popa
adc
sub
or
leave
xchg
cmps
je
std
jl
xchg
cmp
and
xchg
and
outs
mov
or
lods
add
fwait
or
adc
shr
mov
or
sahf
dec
shr
dec
or
leave
sti
out
or
(bad)
(bad)
xor
mov
sbb
outs
repnz
shl
out
(bad)
pop
pop
and
movs
push
xchg
push
and
loopne
stos
in
add
xchg
repz
addr16
mov
or
aam
andps
xor
fwait
(bad)
push
adc
add
stos
stos
xor
adc
or
cmp
fucomp
jecxz
jmp
daa
xchg
popa
mov
jl
repz
ret
xchg
or
pop
jbe
jle
bound
dec
and
les
add
out
jno
jno
adc
pop
lods
and
cmps
mov
js
push
pop
xchg
xchg
push
ins
mov
sti
inc
mov
jnp
inc
add
jle
ins
ins
push
xchg
jno
push
fsub
add
pop
xlat
dec
or
mov
pop
ror
rol
in
dec
pop
sbb
js
adc
out
lods
lds
dec
arpl
imul
inc
fs
cwde
loopne
dec
(bad)
inc
and
mov
daa
fwait
inc
sub
(bad)
fstp
or
popf
push
test
(bad)
pop
mov
jae
push
mov
xlat
adc
sbb
adc
icebp
dec
(bad)
repnz
or
ja
rcl
dec
shr
sub
aaa
push
imul
push
call
into
out
ss
dec
out
sbb
add
xor
mov
fist
(bad)
int
ss
repnz
sub
hlt
outs
mov
ror
cmps
sub
cmp
pop
jbe
mov
rep
adc
imul
(bad)
and
pop
push
xchg
and
adc
popa
into
or
popa
and
fwait
nop
das
ins
and
enter
mov
xor
in
enter
out
leave
mov
scas
out
bound
test
mov
sbb
add
js
cmps
test
icebp
test
into
das
add
inc
loopne
leave
cmps
stc
jo
rcl
in
pop
dec
and
int3
push
xor
sbb
mov
daa
sbb
popa
xor
test
test
ss
cmp
arpl
outs
loope
stos
cmp
jae
pop
pop
pop
leave
retf
int
cmp
fs
push
push
dec
leave
icebp
adc
cmp
out
adc
leave
in
inc
jl
sub
jl
mov
push
scas
cmc
jp
jle
int
dec
sub
ins
mov
pop
pop
test
in
jae
retf
xchg
dec
nop
das
and
es
call
jmp
sub
mov
adc
inc
lods
test
lock
push
icebp
jmp
ret
loopne
les
nop
mov
inc
cmp
mov
sbb
cmps
xchg
cwde
fistp
and
dec
int
mov
cmp
push
mov
cmps
sti
loope
adc
xor
repz
ds
cld
mov
out
test
cdq
sbb
xchg
pusha
adc
sti
mov
dec
add
mov
imul
adc
mov
adc
dec
adc
aas
repnz
cdq
xchg
dec
nop
retf
inc
sbb
dec
rol
or
mov
js
lea
loope
fbstp
in
dec
(bad)
aam
sbb
fcomp
lea
inc
add
mov
mov
jmp
sbb
mov
nop
add
and
hlt
xor
out
inc
mov
call
(bad)
in
in
pop
stos
leave
mov
xchg
jmp
rcl
das
std
test
pushf
and
int3
test
call
repnz
push
cwde
imul
fdivr
mov
pushf
(bad)
xor
pop
dec
gs
pop
aaa
mov
loop
jno
dec
jo
retf
out
xchg
lods
lods
push
mov
xchg
mov
loop
pushf
iret
mov
sub
shr
outs
mov
jl
fidivr
dec
mov
fstp
dec
push
les
xor
pushf
js
int3
lahf
repz
bound
in
and
movs
out
push
xchg
push
cmp
mov
int3
xchg
xlat
out
fs
bound
pop
dec
cwde
inc
xchg
dec
bound
adc
or
add
scas
mov
sub
cmp
pop
mov
dec
mov
mov
xor
inc
dec
mov
js
and
shl
jbe
push
fadd
cmp
mov
cmp
cmp
rcr
jno
cmp
loopne
in
ja
and
fs
mov
xor
cmp
test
std
mov
xchg
lahf
xchg
nop
daa
xor
mov
(bad)
pop
inc
popa
ret
pusha
bound
cmp
mov
bound
hlt
pop
ficomp
popa
imul
shr
aas
lods
lods
cmps
cmp
gs
xor
xchg
fs
mov
xor
loope
mov
jb
adc
jnp
lahf
jo
jp
sub
out
mov
call
movs
clc
xchg
xor
fdiv
clc
lock
movs
cmp
xchg
call
mov
xchg
sub
outs
xchg
inc
es
and
xor
jnp
pop
fisttp
or
and
fld
sbb
out
push
shl
loopne
das
pop
mov
out
jne
sub
mov
mov
movs
inc
es
sti
mul
mov
xor
mov
sbb
sbb
movs
sbb
cmp
jmp
xlat
test
clc
dec
idiv
div
jo
stos
and
dec
loopne
mov
fstp
adc
shl
dec
call
leave
jp
cmps
mov
cs
sub
adc
pushf
adc
sbb
xchg
cwde
and
or
cmc
sar
daa
fwait
addr16
cwde
sub
sub
hlt
gs
cmps
jnp
jns
in
and
imul
jne
stc
mov
or
adc
xor
mov
mov
push
jmp
pop
rol
fwait
pusha
jb
add
in
push
test
in
cmp
movs
jnp
xchg
outs
imul
cdq
es
(bad)
lds
push
sti
enter
jl
and
shl
xchg
(bad)
sbb
pop
xor
mov
lahf
and
call
dec
inc
bound
jp
cld
fst
outs
enter
stc
das
mov
loop
sbb
push
out
xor
sub
movs
cmp
pop
jecxz
int
xor
iret
and
imul
pushf
mov
jo
mov
jecxz
rcr
pop
cmps
outs
adc
and
jecxz
xchg
push
jl
push
enter
push
push
sub
xchg
cmp
jmp
jp
das
js
enter
pop
jne
shl
gs
js
xchg
jae
inc
cwde
cmp
push
test
retf
js
mov
je
push
pop
add
sub
cs
push
inc
cmp
push
or
ret
fistp
test
jno
js
ret
pop
jmp
jmp
mov
xor
pop
xchg
mov
in
loop
in
jmp
mov
js
out
aas
add
mov
adc
sbb
fs
or
aam
cwde
jl
in
xchg
les
push
xchg
mov
xchg
jo
lahf
cmp
pop
es
cmps
xor
xchg
pop
and
pop
dec
ins
adc
mov
ss
cmp
push
hlt
fst
aam
jge
mov
aad
sar
lock
leave
push
pop
repz
pusha
sub
bound
aas
jmp
pop
outs
mov
jo
shr
jp
mov
add
mov
int3
inc
cmc
int3
shl
aas
or
sbb
out
fist
shl
push
mov
and
ficom
(bad)
mov
sti
aas
xchg
loopne
in
fild
cmp
ja
ins
mov
mov
popa
cmps
popa
push
popf
cmp
or
push
loop
repnz
mov
les
fbld
jo
jns
fcomp
mov
mov
outs
xchg
stos
lods
shr
lahf
fadd
repz
ret
loopne
loopne
out
imul
xchg
adc
push
fidiv
push
mov
lock
mov
dec
mov
jns
jae
fucomi
jo
cmps
cmps
add
sub
dec
popf
call
sbb
sub
das
push
and
adc
dec
add
sti
icebp
icebp
inc
out
xor
in
add
cmp
out
xor
xor
int
sbb
cmp
sub
sti
mov
addr16
movs
cmp
into
data16
add
cmp
pushf
or
xor
ret
pminub
push
xor
out
nop
mov
add
inc
jecxz
sub
push
in
dec
bound
bound
movs
cdq
push
jb
cmp
xchg
pop
cmp
out
adc
jbe
mov
xlat
lds
sahf
mov
sbb
jae
xchg
in
ds
dec
ja
mov
sbb
sub
push
pop
cmp
stos
jl
adc
imul
js
mov
mov
lahf
jmp
imul
mov
fnstenv
rcl
shl
movs
pop
sbb
stos
lods
pop
or
sbb
cmps
stc
sbb
sbb
inc
push
int
and
popa
adc
popa
(bad)
pop
pop
rol
cmp
dec
movs
inc
inc
pop
ins
mov
jle
and
adc
test
icebp
in
add
push
pop
pop
push
sub
imul
cmps
push
adc
adc
call
jmp
mov
rcr
mov
mov
sahf
sbb
mov
cwde
addr16
fadd
cmp
mov
outs
push
ret
add
inc
add
(bad)
pop
xchg
mov
push
fdivr
xlat
inc
sbb
mov
and
and
test
ret
add
jbe
fnsave
mov
xchg
sbb
push
add
mov
mov
ins
cmc
jmp
ins
aad
xchg
sub
cmp
inc
mov
hlt
ss
xchg
jp
xchg
out
cs
mov
xchg
mov
or
out
mov
mov
push
sar
mov
in
ins
aas
push
jecxz
hlt
xchg
retf
int3
rol
shr
jecxz
jmp
adc
xchg
imul
in
inc
mov
mov
sbb
jnp
iret
mov
mov
and
mov
std
lds
(bad)
hlt
adc
fstp
fsub
bound
pop
push
out
(bad)
sbb
add
ins
pop
or
ins
sbb
in
push
dec
jle
cmp
jb
and
in
mov
jle
cmps
jle
aaa
mov
mov
aad
sahf
push
mov
popa
scas
jnp
(bad)
mov
mov
shl
xchg
add
dec
sub
cdq
data16
(bad)
outs
call
stos
pop
add
sub
arpl
test
leave
add
shl
pushf
push
xor
test
(bad)
and
out
adc
adc
jbe
std
fld
js
js
cmp
lock
xor
dec
ja
add
pop
sub
sbb
push
aaa
xchg
inc
fbld
outs
bound
adc
and
inc
jo
dec
jae
add
ret
test
mov
mov
cmp
popf
ficomp
xor
jp
mov
fwait
mov
rol
xlat
jp
or
sub
inc
mov
arpl
sbb
sbb
rcr
mov
cmp
pop
add
dec
ins
ds
cwde
xor
fsubr
sbb
adc
in
xchg
fwait
rol
into
stc
mov
add
xor
jno
xor
push
clc
rcl
sbb
inc
(bad)
jne
mov
stos
rcr
push
lods
mov
mov
jg
adc
dec
je
add
pop
(bad)
lods
es
adc
mov
push
retf
and
mov
jmp
mov
inc
push
and
in
out
pop
pop
pop
jmp
sbb
sbb
test
jns
mov
mov
bound
in
shr
bound
xchg
imul
daa
int3
inc
cld
xor
xor
cmps
sar
(bad)
mov
dec
lahf
sbb
fld
adc
sbb
aam
daa
and
jp
retf
sar
in
dec
mov
add
shl
and
mov
enter
xchg
out
cli
test
jns
sbb
sbb
sub
or
pop
test
jl
dec
imul
xor
cmp
cmp
lahf
sub
mov
add
in
xchg
imul
adc
cdq
push
or
call
aad
cli
ins
ins
(bad)
cmc
fnstenv
mov
(bad)
push
in
sbb
jecxz
inc
popf
mov
adc
cmp
fstp
stos
aas
int
(bad)
mov
in
cmp
adc
retf
rcl
dec
push
or
xchg
lock
mov
mov
in
mov
sub
loop
out
xchg
outs
imul
dec
dec
pop
adc
jnp
test
mov
mov
cmc
xor
mov
sbb
repnz
add
int
test
aam
mov
xor
xor
aam
aad
inc
mov
xor
sbb
xor
mov
outs
aam
pop
rcl
mov
push
test
(bad)
in
outs
sub
out
dec
and
loop
stos
inc
cdq
xor
sbb
mov
mov
mov
jbe
out
pop
sar
das
clc
ror
adc
adc
xchg
in
stos
push
xlat
mov
jmp
pop
push
cdq
lea
mov
push
push
and
aas
push
cwde
adc
push
pop
test
(bad)
sbb
ds
aad
call
ins
mov
repz
jecxz
xor
scas
aad
dec
arpl
dec
retf
add
push
dec
sbb
inc
mov
and
xchg
(bad)
and
(bad)
gs
pop
jmp
ins
(bad)
bound
mov
les
sbb
fs
adc
je
(bad)
test
retf
sti
into
mov
pop
push
xor
fldenv
sbb
pop
push
push
sbb
jb
shl
js
(bad)
jge
popf
push
push
nop
mov
xor
mov
test
mov
dec
fs
int3
int
aaa
data16
adc
push
cmps
ret
out
or
test
mov
inc
xchg
retf
scas
cmps
pop
sbb
pop
pusha
dec
out
dec
and
xor
call
xchg
sub
bnd
inc
add
stos
retf
dec
fwait
cmps
cmp
mov
lods
or
mov
mov
movs
mov
add
jo
movs
je
push
jp
mov
nop
xchg
jns
jb
sbb
xor
pop
or
jae
mov
jecxz
mov
shr
adc
sub
push
and
mov
call
or
jo
sub
and
pusha
adc
mov
inc
sar
test
xor
add
xor
or
lods
int3
retf
mov
mov
sub
dec
add
cmp
and
cli
push
pop
mov
cmp
xor
dec
jb
sub
push
mov
and
test
pop
outs
iret
inc
xchg
out
leave
adc
mov
std
jnp
xor
xchg
cmps
dec
pop
pop
sbb
jno
ins
js
xor
fdiv
sbb
mov
jb
adc
leave
xchg
(bad)
xor
inc
jno
and
scas
int3
sbb
xor
movs
ret
push
aam
enter
push
ret
or
popf
scas
and
push
cmp
and
ret
sti
push
cs
mov
neg
xchg
inc
push
cli
loopne
add
push
pop
and
cwde
add
fist
jmp
(bad)
dec
imul
or
jae
int
adc
rcr
dec
fcmovb
sbb
jp
sbb
(bad)
(bad)
gs
push
mov
xchg
loop
mov
cld
movs
adc
pop
cmp
mov
pop
sbb
clc
test
mov
idiv
jbe
out
adc
mov
fstp
mov
call
cmp
push
pop
sub
fild
add
das
dec
(bad)
into
(bad)
xlat
ror
fadd
xor
and
push
stc
popa
out
inc
aas
dec
leave
inc
imul
inc
retf
movs
mov
ja
stos
dec
and
push
lock
jnp
sbb
cmp
dec
xor
push
dec
fsubr
jae
jmp
pop
stc
cmc
loope
xchg
push
call
xchg
pop
sbb
mov
adc
mov
mov
mov
push
and
cwde
jmp
call
call
xor
dec
ss
je
adc
cmp
shl
jp
in
test
mov
or
sub
test
leave
addr16
dec
or
adc
ret
inc
adc
or
leave
push
pop
ret
shl
retf
outs
jmp
mov
addr16
push
jmp
sbb
test
mov
jmp
inc
or
jg
lock
mov
(bad)
sbb
cli
or
movs
inc
and
and
inc
bound
mul
imul
scas
mov
cmps
xor
rol
sub
fld
in
repnz
outs
adc
mov
int3
dec
sub
push
mov
xor
adc
cdq
jle
pop
xlat
(bad)
arpl
jg
jns
add
test
mov
xor
adc
pop
arpl
xchg
(bad)
aam
fs
mov
add
ds
(bad)
pusha
adc
pop
jne
pop
push
mov
push
mov
in
adc
sbb
les
mov
mov
add
cld
add
(bad)
(bad)
out
pop
mov
(bad)
lea
adc
imul
popa
les
arpl
adc
mov
dec
pop
aam
ja
xor
xchg
test
sub
adc
xchg
daa
xchg
test
fistp
jns
jns
push
dec
cs
icebp
xchg
lods
or
cwde
add
xchg
push
es
xor
sbb
xor
pop
cmps
rcr
mov
dec
mov
and
in
cdq
jl
pop
aam
xchg
push
fisttp
dec
or
pop
pushf
mov
pmuludq
inc
jp
cli
or
pop
shl
sbb
pop
cli
dec
mov
and
and
push
xor
push
xor
jb
or
das
pushf
movs
xor
dec
fwait
sar
dec
in
or
retf
ds
int3
pop
imul
nop
sbb
adc
mov
inc
in
and
es
dec
call
fidivr
adc
fiadd
in
les
fst
iret
inc
pushf
or
jmp
xchg
cmps
mov
mov
jne
sub
or
xor
sbb
cwde
cmp
cmp
jnp
adc
pop
add
(bad)
mov
mov
or
arpl
pop
xor
mov
scas
or
sub
dec
sub
xchg
jg
and
shl
dec
add
hlt
retf
in
fnstenv
rcl
bound
adc
pusha
cs
inc
jno
jmp
mov
test
daa
lahf
mov
pop
sub
test
int
push
jnp
dec
push
adc
cmp
pusha
jns
xor
(bad)
gs
and
push
dec
fldenv
push
or
mov
aad
dec
lock
ret
cmc
aas
mov
push
scas
xor
pusha
sub
inc
and
lds
sub
call
add
mov
(bad)
xor
sub
ja
jnp
lea
jae
rep
inc
iret
cld
add
cmp
xlat
mov
call
movs
ja
sbb
xchg
int3
pop
xor
sbb
pop
pop
add
pop
or
add
retf
sub
pop
xchg
xor
gs
push
dec
xchg
test
int3
inc
or
fbld
pop
in
cwde
jp
xor
adc
or
dec
mov
loop
sub
or
and
mov
mov
loopne
mov
(bad)
push
mov
add
shr
fcomi
in
ds
dec
pop
and
(bad)
retf
sbb
pop
adc
and
nop
or
add
and
(bad)
xor
into
jns
out
movs
call
stos
pop
or
call
pop
mov
shr
pusha
test
inc
xor
stos
xlat
call
in
jbe
loope
push
mov
add
aad
ins
add
or
and
cmps
call
mov
jmp
sbb
es
push
dec
dec
and
retf
loop
fadd
scas
rol
mov
jnp
sbb
xor
xlat
mov
push
jno
add
or
ins
sti
int
fs
dec
cmp
fiadd
push
xchg
fcmovb
sahf
je
cmp
mul
xor
xchg
aad
js
ja
mov
movs
(bad)
jbe
or
mov
ret
stos
mov
or
adc
daa
dec
xor
mov
mov
shl
retf
inc
push
movs
adc
ds
or
pop
jae
dec
scas
retf
test
stos
xchg
in
loopne
fdiv
outs
jae
jno
mov
jne
sub
sub
adc
clc
push
cli
fist
add
(bad)
sar
xor
leave
mov
js
adc
mov
(bad)
push
out
cli
xor
xor
(bad)
cmp
stc
retf
rcr
mov
jge
bound
cmp
pop
sub
ja
in
push
pop
xor
ret
xor
pop
dec
inc
push
cmp
test
pandn
data16
lea
pop
lahf
(bad)
loopne
push
repz
push
inc
sar
je
imul
pop
popf
stos
jno
mov
imul
or
pop
repnz
inc
call
test
adc
rol
outs
aas
fs
icebp
cmps
and
call
pop
jmp
into
jmp
sub
xlat
cmc
out
or
sub
dec
shr
push
dec
pop
aad
pop
or
xchg
movs
test
pusha
push
sbb
adc
div
ins
std
push
std
mov
mov
ret
popa
sub
(bad)
and
push
shl
push
inc
and
ror
add
xlat
cmp
cld
lock
dec
sub
sub
cli
mov
xor
mov
cmps
inc
push
xchg
repnz
les
clc
push
sub
cld
and
push
jg
xor
inc
call
popa
cmp
pop
mov
xchg
cdq
test
inc
cmp
ins
push
mov
call
xchg
loope
xchg
inc
(bad)
std
jmp
xchg
hlt
call
arpl
pop
mov
in
push
es
or
add
dec
test
push
pop
retf
cmp
adc
adc
xchg
xlat
js
out
ja
lea
dec
lock
repnz
imul
lea
adc
mov
dec
loopne
mov
push
push
inc
adc
popf
mov
inc
mov
push
cld
sub
pushw
loop
test
pop
ss
imul
cdq
xor
xchg
lar
lods
xchg
popa
pop
push
adc
fs
ds
in
inc
inc
inc
cmp
dec
cli
jecxz
add
shr
or
rcl
fdivr
std
sar
sar
push
ret
push
(bad)
pop
dec
sti
loop
mov
push
(bad)
cmps
add
fmul
fpatan
cmp
cli
pop
pop
push
stos
loopne
push
pop
push
jnp
cs
fwait
adc
(bad)
pop
sub
adc
mov
mov
xchg
add
dec
rcr
es
cmp
inc
int3
lahf
mov
mov
dec
mov
into
mov
add
xor
or
or
cmp
(bad)
ficom
out
jmp
push
inc
mov
test
lea
test
dec
iret
mov
in
sbb
mov
inc
sti
lods
loopne
xor
jb
imul
mov
xor
in
(bad)
mov
nop
inc
dec
and
dec
jns
xor
add
movs
imul
lods
adc
test
nop
test
cmp
rol
cmp
and
test
inc
sbb
pop
mov
push
jl
jmp
adc
jl
mov
les
add
or
loope
das
sub
bound
sti
xchg
out
inc
sahf
dec
inc
mov
or
jnp
mov
cs
dec
jge
xchg
jg
push
or
test
int3
xlat
in
cmc
call
dec
and
retf
lahf
loop
and
inc
or
out
cmp
add
jge
mov
je
iret
jle
mov
(bad)
loopne
jmp
pop
mov
imul
sub
rcl
dec
pop
les
cli
xchg
inc
data16
ficomp
lock
ret
shl
mov
in
mov
dec
pop
sub
push
sub
jmp
cdq
and
mov
sbb
sub
and
push
repz
and
xchg
add
push
lock
xchg
xchg
mov
mov
push
std
scas
push
pushf
mov
cmp
repnz
or
add
adc
rcl
jmp
shr
movs
jl
mov
daa
test
pop
adc
xlat
loop
xchg
dec
mov
or
jmp
jecxz
xor
ret
push
cmp
icebp
mov
inc
fmul
sar
out
ins
les
sahf
pop
push
movs
inc
mov
pop
mov
aad
jae
aaa
(bad)
aaa
xor
cdq
dec
xchg
ins
push
dec
mov
das
and
into
jae
pop
inc
retf
jb
add
hlt
cmp
fdiv
shl
arpl
cmp
adc
mov
ins
aaa
cmp
pop
and
push
mov
mov
or
out
xor
jl
in
cmp
mov
add
jne
stc
adc
and
xchg
add
mov
jge
pop
jmp
mov
fdiv
mov
mov
cmp
in
or
adc
push
in
mov
test
cs
unpckhps
jg
mov
cmp
enter
cli
jne
cwde
push
hlt
stos
repz
in
in
cmp
mov
rcr
icebp
es
mov
lods
shl
stos
xor
xchg
test
fst
ins
xor
loope
inc
add
icebp
jmp
pop
cmovp
xor
lock
stc
xor
jbe
push
into
xor
mov
mov
mov
pop
inc
fstp
movs
and
imul
xchg
call
daa
or
jge
in
xchg
(bad)
fild
xchg
dec
fistp
loope
jne
push
sbb
mov
std
in
dec
popf
int
xchg
loopne
mov
call
scas
popf
pop
push
jae
push
scas
mov
add
xor
cdq
jmp
fs
pop
aad
mov
inc
in
lods
mov
push
xchg
mul
and
jmp
inc
in
sar
(bad)
jmp
add
mov
fst
clc
xchg
push
(bad)
rcl
pop
sub
xchg
fiadd
push
scas
mov
cmp
and
adc
nop
xchg
mov
stc
daa
adc
mov
out
dec
jne
jmp
sub
fsubr
jnp
and
push
cwde
call
popa
adc
push
cmp
cmp
fnstsw
dec
fisttp
mov
std
(bad)
aaa
mov
and
jmp
int3
mov
and
inc
ins
xchg
dec
cmp
aam
cmp
and
mov
sbb
inc
call
inc
inc
les
popa
out
dec
mov
jmp
int3
out
shl
inc
and
aam
mov
movs
or
xchg
fsub
or
dec
outs
push
aam
(bad)
cli
pop
sbb
dec
inc
jp
popf
fwait
call
pushf
xor
repz
mov
(bad)
sar
mov
retf
movs
xor
and
xor
lea
fnstenv
dec
add
inc
push
sbb
add
jp
ins
xor
adc
call
fcomp
xor
push
hlt
mov
fldenv
test
test
push
mov
adc
loope
mov
imul
sbb
bound
sbb
lahf
sbb
movs
xor
mov
adc
cmp
and
imul
int
mov
jp
mov
pop
retf
dec
and
push
pop
pop
in
push
dec
clc
mov
daa
pop
push
push
push
pop
jl
inc
cmps
cmp
(bad)
mov
sub
and
mov
push
call
xor
cmp
xor
mul
xor
inc
sti
int
(bad)
scas
(bad)
mov
xlat
in
add
mov
daa
outs
shl
inc
popf
mov
bound
sub
adc
or
ins
add
xchg
repz
xchg
sub
repz
mov
arpl
aas
cmp
jne
in
les
(bad)
popa
push
mov
pop
and
js
popa
in
jp
adc
sub
cmps
sub
xchg
pop
js
mov
icebp
add
xor
retf
or
push
or
loopne
inc
(bad)
dec
cdq
add
jb
fisub
mov
idiv
cmp
das
and
std
fisubr
das
pop
xor
dec
or
jns
test
jns
cmp
mov
pop
(bad)
fisubr
ins
outs
sbb
pop
fs
fisttp
lds
mul
lahf
arpl
retf
sti
daa
mov
xor
(bad)
rcr
mov
fwait
and
push
test
ins
mov
mov
loopne
bound
addr16
and
cmc
xchg
ja
cwde
xchg
es
jno
cmp
lods
inc
jo
add
(bad)
mov
dec
pusha
xchg
dec
movs
mov
inc
in
aad
lods
mov
adc
mov
inc
fstp
fidiv
inc
and
movs
and
sub
inc
retf
push
xchg
aam
and
jb
retf
leave
or
jbe
mov
jne
ret
inc
and
(bad)
das
jl
scas
add
sbb
xchg
mov
test
jb
cmps
xor
leave
pop
jno
adc
ds
mov
js
int3
fcomp
arpl
icebp
adc
ins
push
mov
mov
imul
fldenv
in
sar
les
ins
push
fisubr
adc
or
test
fstp
nop
jmp
fdivr
call
outs
or
retf
pop
outs
inc
mov
rol
gs
out
or
pop
cmp
mov
adc
mov
fwait
icebp
xchg
pop
ins
mov
fstp
dec
push
popf
test
sti
push
stos
mov
cmp
sar
or
dec
mov
xor
sahf
out
sub
xor
and
jbe
jmp
cmp
(bad)
dec
inc
adc
pop
xor
aas
pop
inc
movs
xor
dec
fisub
push
sar
popf
ja
sbb
inc
js
(bad)
jle
je
xchg
into
pop
pop
dec
add
jnp
fadd
sub
pushf
sbb
jmp
pop
sub
shl
xor
nop
inc
call
cli
mov
cmp
in
jle
mov
xor
pop
jno
repz
imul
and
mov
jge
adc
(bad)
shl
fwait
jno
nop
out
xor
fld
hlt
adc
xor
(bad)
in
inc
adc
rep
pop
cmps
clc
icebp
cmps
sub
mov
xchg
pusha
or
and
jl
repz
fdivr
lods
aad
cs
or
inc
xor
push
loope
xlat
retf
sbb
loop
aas
push
clc
bound
popf
aam
xor
data16
adc
data16
test
fsub
js
stos
(bad)
mov
mov
pop
mov
ss
mov
aas
adc
jbe
(bad)
cdq
mov
nop
jo
jle
xchg
cwde
pop
es
xchg
aas
loop
xor
mov
dec
(bad)
jl
xchg
in
cmp
test
inc
lock
mov
and
pop
mov
inc
nop
or
sub
jmp
and
bound
push
dec
icebp
pop
or
sbb
arpl
jns
sti
xor
cmp
jle
cld
lds
fst
push
mov
sbb
xor
mov
push
aas
cmps
sub
les
jae
dec
loopne
movs
test
movs
cld
cmp
sub
adc
fsubp
iret
and
xchg
push
push
inc
repz
xlat
popa
js
jmp
mov
push
jg
mov
in
push
and
or
inc
push
mov
stos
cmc
mov
fs
push
push
push
movs
(bad)
aam
jno
ja
es
cmps
mov
pop
jle
out
sbb
inc
(bad)
mov
mov
push
lahf
lea
sbb
leave
dec
dec
xchg
inc
sub
gs
or
xchg
xchg
ins
into
push
mov
repnz
and
outs
loop
add
push
mov
push
xor
cli
inc
cld
jnp
push
popf
xor
add
cld
(bad)
int
int3
(bad)
cmc
arpl
jne
aaa
push
sbb
out
in
jl
imul
xchg
ret
out
arpl
dec
ja
outs
and
cmp
push
push
xchg
fbstp
jg
lods
push
pop
ret
out
adc
(bad)
jne
rol
repz
into
mov
ins
cmp
sbb
and
shr
jae
push
mov
add
daa
mov
push
inc
sbb
sbb
xor
pop
mov
mov
jg
fwait
inc
sahf
out
mov
retf
gs
adc
rcr
xchg
loopne
das
sbb
fst
mov
lahf
retf
dec
or
movs
fwait
and
mov
int3
cld
pop
pop
ins
mov
jmp
mov
jnp
mov
cli
in
push
push
push
les
xchg
push
jo
or
adc
pop
mov
push
shl
int
ror
cdq
out
mov
in
sahf
rcr
and
adc
stos
add
lahf
jno
ja
ds
outs
cdq
xchg
into
mov
dec
jmp
pop
cmp
imul
mov
popa
movs
dec
rcl
adc
add
add
pop
dec
dec
mov
or
ss
pop
repnz
enter
sahf
(bad)
iret
sar
jno
inc
mov
popf
add
shl
cmps
fstp
dec
add
das
mov
test
dec
or
sub
xchg
inc
mov
lods
pop
inc
int
mov
jl
xchg
cmp
cmp
aam
xor
test
lds
and
cli
mov
shr
les
mov
sbb
push
out
xor
cmps
fsub
cwde
rcl
cmp
(bad)
sub
aad
out
hlt
sub
lahf
inc
xor
fdivr
push
push
mov
arpl
add
jmp
cli
fdivr
(bad)
xor
push
cmp
xchg
cmc
push
fisub
and
add
mov
mov
sbb
mov
pop
retf
popf
in
nop
repz
mov
mov
out
clc
data16
xchg
xchg
inc
je
pop
pop
mov
enter
loopne
push
mov
add
push
(bad)
in
(bad)
mov
dec
jb
mov
jae
lock
jmp
mov
add
shl
adc
call
mov
test
push
jmp
cmp
push
dec
lahf
dec
or
fwait
mov
xor
outs
mov
mov
cmps
inc
mov
ror
mov
outs
ror
mov
mov
(bad)
mov
rcr
mov
sub
retf
jne
inc
push
hlt
cli
fcmovnu
jae
and
jnp
mov
mov
pop
cdq
mov
lea
add
fdiv
(bad)
cld
sub
test
or
out
shl
pusha
mov
xchg
sti
jecxz
dec
mov
ficom
pop
sbb
(bad)
mov
icebp
in
in
(bad)
pop
cmp
iret
aam
jl
fnstcw
mov
add
stc
push
mov
out
push
inc
popf
int
jp
pop
je
dec
jae
out
mov
mov
mov
mov
dec
ds
cdq
clc
mov
int
jnp
cmp
fwait
imul
popa
out
rol
or
pop
cld
pop
mov
scas
adc
cmp
or
pop
xor
xor
lods
ins
jp
jl
and
mov
mov
push
xlat
xchg
dec
jp
in
adc
fidivr
mov
retf
sbb
jne
sub
xlat
out
mov
jmp
cmps
mov
push
scas
(bad)
jg
dec
mov
pop
jecxz
mov
test
jmp
xchg
mov
cs
sub
mov
push
cli
into
jo
outs
out
cmp
out
cmp
mov
mov
adc
xlat
pop
jb
xchg
jecxz
inc
aam
(bad)
dec
sbb
xchg
popa
push
call
rcl
int
mov
sub
lahf
xor
sbb
xchg
jle
inc
jo
push
sub
rcl
cmp
adc
dec
dec
sub
les
mov
aaa
cmp
and
xchg
pop
repz
pop
pop
mov
push
mov
popa
cmp
push
pop
pop
mov
xchg
pop
pop
xchg
xor
jge
mov
pusha
push
inc
fadd
imul
and
ds
mov
sti
and
leave
addr16
jmp
push
cmp
cmp
mov
sti
or
das
sbb
fnsave
dec
(bad)
pop
mov
xor
add
jecxz
call
mov
mov
sar
push
stos
or
mov
shl
xchg
pop
mov
pusha
cmp
jmp
out
fild
mov
das
aad
das
ins
jne
cdq
sbb
cmps
jb
(bad)
imul
rcl
xor
pop
mov
loop
lods
stc
lahf
mov
mov
popf
mov
bound
mov
(bad)
fcmovbe
pop
mov
add
rol
jmp
jg
shr
dec
fstp
adc
js
dec
mov
cli
add
icebp
cmps
pop
mov
es
mov
mov
shr
push
movs
ss
in
ror
mov
repnz
adc
imul
xor
cmp
push
fild
icebp
mov
mov
push
sub
xchg
outs
mov
push
cmps
mov
and
aas
pop
lock
mov
in
inc
sub
mov
(bad)
(bad)
jp
mov
scas
cld
imul
stos
jmp
bound
jns
push
jle
shr
inc
mov
stc
loop
ja
push
jnp
cmc
ss
lods
stc
mov
pop
in
out
jle
xchg
mov
xlat
sbb
cld
cwde
aas
jno
pop
ss
(bad)
jle
lods
(bad)
mov
pop
out
(bad)
stos
(bad)
dec
ja
std
jl
sub
pop
sar
aam
(bad)
mov
cwde
in
xchg
mov
jecxz
mov
mov
cli
repz
sti
repnz
push
sbb
repnz
jne
push
stc
push
mov
jbe
xlat
inc
ror
pop
cdq
test
cld
out
mov
mov
je
(bad)
repz
(bad)
(bad)
dec
jne
out
movs
jg
ins
pop
sbb
mov
dec
stos
ror
icebp
je
sahf
lock
push
outs
dec
fnsave
ror
ins
cmps
(bad)
cld
add
jmp
xchg
das
pop
hlt
dec
nop
in
aas
mov
fstp
retf
inc
int
into
push
jg
loope
lds
call
loop
pop
cmp
scas
ja
fld
mov
fstp
into
mov
xchg
call
or
loope
pop
mov
jg
call
fldcw
cmp
in
cwde
outs
mov
pop
mov
jmp
xchg
jg
leave
daa
fsubr
clc
outs
sub
aam
fwait
jmp
hlt
mov
test
fisub
cld
xchg
lock
pop
mov
imul
jnp
(bad)
xor
push
aad
mov
dec
cmp
out
in
lods
mov
imul
repnz
push
jo
out
popa
or
test
sub
mov
mov
aad
sub
call
mov
out
mov
out
sbb
pop
cli
in
jg
not
sti
outs
sub
cmps
jp
lds
outs
sbb
pop
lods
popa
cs
jnp
lock
adc
push
xchg
add
lahf
or
push
lods
sbb
aad
mov
or
retf
mov
jae
(bad)
mov
mov
push
jmp
test
mov
xor
cmp
iret
cmp
fdivr
mov
cwde
jge
shl
inc
sbb
mov
xchg
nop
mov
in
fstp
mov
retf
out
push
aad
dec
jae
jnp
xor
cwde
popf
fisub
mov
outs
inc
out
dec
push
mov
fwait
jle
or
push
sbb
loope
mov
push
fadd
ins
jo
cwde
mov
inc
add
in
cwde
enter
adc
dec
push
inc
and
cld
out
iret
adc
push
jp
sbb
(bad)
sti
jb
mov
div
cmp
ret
jbe
cwde
sbb
loope
(bad)
mov
ins
test
sub
cmp
xchg
test
or
lods
shl
push
enter
fild
outs
add
or
aas
popa
dec
or
push
xchg
leave
add
push
div
or
into
adc
jmp
inc
push
jle
popa
adc
test
(bad)
jmp
lahf
fisttp
hlt
aaa
inc
push
(bad)
aam
retf
(bad)
push
and
(bad)
repz
jle
aam
in
pop
ret
rol
cli
dec
(bad)
out
fistp
mov
out
add
mov
fsubr
lea
mov
jmp
adc
retf
(bad)
cmp
std
add
sbb
mov
jmp
icebp
cmp
push
adc
adc
icebp
xor
enter
lods
dec
pop
(bad)
scas
fcomp
dec
int
and
(bad)
jl
xor
mov
sbb
cmp
mov
sbb
shl
jne
stc
sbb
int
xchg
jo
out
(bad)
cmps
cs
clc
add
sbb
push
ins
stos
push
fsubr
jg
mov
mov
mov
fstp
add
push
scas
fdivr
adc
rol
jae
jmp
icebp
fist
in
mov
js
mov
jle
pop
sbb
jecxz
jmp
pop
sti
retf
outs
dec
lods
sbb
jmp
xchg
into
and
mov
sti
inc
inc
scas
mov
jmp
loopne
sbb
jmp
clc
xchg
mov
and
cli
outs
jg
les
nop
addr16
add
cmp
outs
pop
shr
cmp
outs
pop
and
(bad)
pop
stos
sbb
loop
(bad)
aaa
inc
push
xor
out
test
(bad)
pop
dec
aad
vmwrite
pop
aas
and
and
mov
pop
enter
cdq
jnp
cwde
retf
mov
xchg
add
lods
clc
xlat
inc
pop
or
xchg
pop
sub
jo
mov
enter
sbb
stos
xchg
adc
cmps
cmp
stos
jecxz
jl
add
movs
mov
mov
mov
sbb
out
mov
mov
ja
jae
out
jno
icebp
xor
mov
fistp
iret
pop
mov
push
out
fsubr
movq
xor
out
aad
icebp
push
popa
push
repz
aas
das
jle
retf
stos
rcl
iret
fidiv
cmp
sbb
add
shl
pop
mov
test
(bad)
repz
inc
pop
cs
and
mov
adc
cmp
je
mov
jge
xlat
mov
mov
out
das
fiadd
push
sbb
jle
sbb
and
xchg
lods
xor
std
scas
inc
xchg
stc
cli
mov
cwde
xlat
mov
lock
jp
xchg
data16
sub
pop
inc
push
in
mov
outs
lods
push
loop
mov
outs
ror
pop
jp
icebp
jle
test
jg
jo
xchg
ds
retf
repz
mov
iret
push
popa
ror
pop
test
neg
xor
push
test
sbb
or
sub
mov
ins
xor
cmp
mov
call
push
add
std
fidivr
jmp
push
or
pop
fnstsw
loop
lahf
adc
lea
out
in
outs
jmp
dec
(bad)
xchg
fist
js
movs
arpl
outs
mov
das
in
fidivr
mov
(bad)
push
sti
ins
aas
dec
pushf
and
(bad)
xor
call
mov
fwait
int3
fwait
or
(bad)
retf
pop
inc
add
ja
push
jae
test
sub
cmp
jg
std
fiadd
aaa
int
fisttp
mov
inc
mov
call
jnp
mov
mov
test
inc
xlat
not
jne
push
cmp
rcl
js
cs
loope
scas
pushf
sub
repnz
leave
(bad)
int3
fld
cli
dec
stos
add
xchg
xor
cmp
mov
retf
push
aas
sar
bound
sub
pop
or
inc
fiadd
outs
fiadd
cld
es
(bad)
pop
jl
leave
mov
push
outs
rcl
pop
jg
pop
xor
add
hlt
outs
xlat
or
xchg
sbb
mov
je
adc
fst
fidivr
out
jmp
cli
mov
or
mov
shr
arpl
aad
pop
out
mov
outs
shr
mov
and
pop
xchg
xchg
xchg
fisubr
ret
inc
fsub
repnz
push
addr16
and
lods
mov
mov
cli
scas
adc
repnz
add
test
lods
pop
xchg
push
mov
fidivr
aas
fld
outs
and
aaa
mov
mov
not
(bad)
out
ins
pop
add
lods
int
movntq
cs
outs
jmp
sti
adc
gs
fisub
cmps
sar
rol
push
mov
aad
out
and
call
div
jl
sbb
mov
mov
xor
dec
xchg
loopne
jl
sbb
xlat
dec
mov
sub
jne
retf
mov
pop
imul
cmps
cmp
int3
gs
push
adc
inc
in
leave
xor
jmp
shl
(bad)
shl
fdivr
mov
mov
inc
(bad)
aad
push
pop
movs
and
push
cmp
pop
inc
mov
aad
sub
push
js
ret
sahf
lea
pushf
shl
mov
call
scas
addr16
pop
pusha
push
jecxz
sbb
jnp
icebp
imul
ins
push
retf
es
inc
sti
pushw
loope
outs
push
(bad)
sbb
out
mov
aaa
mov
popa
mov
test
mov
lods
pop
nop
ficomp
jmp
lea
mov
fwait
push
push
dec
mov
cmps
mov
scas
mov
lea
jnp
add
sub
sub
imul
mov
gs
jmp
(bad)
jb
sbb
sub
cmp
fld
mov
pop
xor
sub
mov
jno
(bad)
push
mov
adc
hlt
cwde
ss
mov
imul
dec
sub
mov
push
in
push
stc
ins
cmp
aad
jecxz
cwde
(bad)
ror
out
in
dec
pop
das
dec
loopne
(bad)
ins
and
sbb
or
lds
repz
cmp
dec
ret
xlat
dec
loope
lds
jp
inc
sahf
or
cld
jb
outs
jg
mov
and
jb
sbb
aam
cmp
sub
loop
and
stos
mov
mov
adc
repz
xchg
dec
jne
pop
shl
sahf
mov
dec
sbb
or
in
pop
adc
adc
scas
jb
ins
pop
cli
cld
mov
or
sbb
add
pop
hlt
push
arpl
leave
(bad)
fwait
push
(bad)
mov
rep
xchg
xchg
test
and
mov
(bad)
jne
cmp
mov
imul
jg
cmp
push
inc
xor
vorps
test
cmp
frstor
jl
cdq
loop
out
jmp
and
add
fstp
or
cmc
cmps
sub
xor
mov
out
or
push
dec
cwde
dec
inc
cmp
sbb
and
cmc
pop
inc
sahf
pop
bndldx
jmp
or
sbb
call
retf
mov
icebp
add
pop
jp
mov
addr16
mov
push
iret
xor
cmps
or
data16
std
mov
ins
into
inc
mov
jne
mov
dec
out
mov
dec
push
adc
dec
mov
or
push
or
lock
jae
adc
cli
ins
stos
mov
shl
ss
sub
cmp
ud0
and
add
inc
and
mov
or
pop
aaa
int
ss
xor
aas
movs
jmp
neg
dec
iret
or
mov
sti
pop
xor
aas
xor
lock
pop
add
add
add
add
sub
add
add
add
sub
jae
add
or
jae
add
or
jae
add
or
jae
add
or
jae
add
or
sub
xor
add
add
add
add
adc
add
add
or
add
sub
adc
add
or
add
add
add
jle
add
add
or
add
sub
adc
add
or
add
add
add
jle
add
add
or
add
xor
add
add
add
add
jle
add
add
push
add
or
add
xor
add
add
add
add
sldt
or
add
xor
add
add
add
add
adc
add
add
add
add
add
jge
add
add
jnp
add
add
xchg
add
jnp
add
add
add
add
jb
add
jo
adc
add
jp
add
add
add
add
sub
add
xor
loop
add
pop
add
adc
mov
add
sbb
(bad)
(bad)
push
add
add
outs
adc
add
cmp
add
add
add
add
sub
pop
add
add
add
add
sub
push
add
or
jb
add
jo
lea
add
add
pop
add
or
add
or
sbb
add
add
add
pop
add
add
add
add
sub
outs
sbb
add
sub
add
sub
fisubr
add
add
sub
and
add
or
add
or
add
inc
push
inc
(bad)
adc
jb
add
jo
lea
add
add
sbb
push
add
or
add
or
or
add
or
add
or
pop
add
add
add
add
sub
and
add
fsubr
add
sub
sub
add
sbb
add
add
cwde
add
je
add
add
ins
add
add
adc
add
sbb
add
or
add
add
push
add
add
outs
and
add
add
add
adc
push
add
push
add
and
add
sub
xor
add
add
adc
add
and
add
sub
add
add
xor
add
add
add
add
adc
sub
add
or
add
xor
add
add
add
add
adc
add
adc
add
xor
add
add
add
add
add
daa
add
or
add
xor
add
add
adc
add
and
add
sub
add
add
xor
add
add
add
add
adc
sub
add
or
add
xor
add
add
add
add
adc
push
add
add
adc
add
xor
add
add
add
add
adc
sub
add
or
add
xor
add
add
add
add
adc
mov
add
sbb
add
sub
sub
xor
add
add
add
add
adc
adc
(bad)
adc
push
add
add
and
add
sub
xor
add
add
adc
add
jle
add
or
or
add
add
sub
add
jle
add
or
push
add
and
add
sub
mov
jae
add
or
sub
add
add
and
add
sub
xor
add
add
add
add
adc
sub
add
or
jb
add
jo
adc
add
jb
add
jo
sub
add
or
add
jo
xor
add
sub
add
or
stos
add
add
add
or
jb
add
jo
xor
add
or
add
jo
adc
sub
add
sub
add
or
ficomp
sub
add
or
add
jo
add
or
sub
add
or
add
aaa
add
or
push
or
push
outs
cmp
add
adc
adc
adc
sub
add
or
add
or
or
outs
cmp
add
or
push
outs
cmp
add
adc
adc
adc
sub
add
or
add
or
adc
push
sub
add
adc
or
or
add
adc
cmp
add
outs
xor
add
or
outs
cmp
add
or
or
add
adc
cmp
add
outs
xor
add
or
outs
cmp
add
or
or
add
adc
cmp
add
or
sub
add
outs
add
or
or
adc
outs
aas
add
or
adc
adc
adc
adc
sub
add
jb
add
jo
or
add
or
adc
adc
adc
adc
sub
add
jb
add
jo
inc
add
or
add
or
or
or
add
or
adc
adc
adc
adc
sub
add
jb
add
jo
or
add
or
adc
adc
adc
adc
sub
add
jb
add
jo
inc
add
or
add
or
adc
or
sbb
sbb
add
or
add
jo
add
or
sub
add
or
add
jle
add
add
add
enter
or
or
adc
inc
add
or
add
jo
xor
add
or
or
add
add
add
enter
or
or
adc
inc
add
or
add
jo
xor
add
or
sub
add
push
xor
or
add
jo
add
or
sub
jb
add
jo
add
or
or
add
add
add
or
ficomp
sub
add
or
add
jo
add
or
sub
add
or
add
aaa
add
add
adc
add
or
or
xor
add
or
or
add
jo
or
or
add
or
xor
add
or
or
add
jo
or
or
add
or
xor
add
or
adc
or
push
or
add
jo
push
outs
dec
add
or
xor
add
or
adc
outs
dec
add
or
invd
jb
add
jo
movq
or
xor
add
or
or
add
jo
movq
add
sub
add
or
or
add
jo
movq
add
outs
push
add
or
xor
add
or
adc
movups
outs
push
add
or
adc
jb
add
jo
adc
add
or
xor
add
or
or
add
jo
adc
add
or
xor
add
or
or
add
jo
adc
add
or
add
or
xor
add
or
adc
adc
push
adc
or
add
or
(bad)
(bad)
ficomp
sub
add
or
add
jo
add
or
sub
add
or
add
outs
push
add
or
xor
jae
add
or
push
add
or
outs
push
add
or
add
or
push
add
or
jae
add
or
adc
outs
pop
add
or
adc
outs
pop
add
or
adc
outs
pop
add
or
adc
add
jo
pop
add
or
adc
add
jo
pop
add
or
adc
outs
pop
add
or
adc
add
jo
pop
add
or
adc
add
or
xor
adc
outs
popa
add
or
sub
add
sub
jb
add
jo
jb
add
jo
xor
add
es
adc
test
add
or
or
add
or
fidivr
sbb
add
jb
add
jo
xor
int
add
xor
add
pop
xor
jae
add
or
add
add
pop
outs
add
or
pop
pop
or
sub
add
ficomp
sub
add
jb
add
jb
add
add
or
sub
add
or
add
and
add
ficomp
sub
add
jb
push
add
adc
push
add
xor
add
sub
add
or
add
or
sahf
add
push
push
sub
add
fsubr
add
inc
fadd
add
add
add
add
add
add
add
add
sbb
add
or
add
add
add
jp
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
inc
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
add
add
sbb
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
add
add
xor
add
mov
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
jbe
or
sub
add
push
xor
add
sbb
push
adc
or
add
inc
add
add
or
add
sub
add
push
sub
add
add
add
or
push
add
push
sub
add
sbb
add
mov
add
adc
add
or
pop
or
add
or
jle
add
add
outs
add
or
jb
pop
add
outs
add
or
pop
outs
jo
add
or
outs
jno
add
or
pop
add
sldt
add
cmp
xor
add
outs
jb
add
adc
pop
sub
add
or
adc
add
rol
add
outs
je
add
sub
jle
add
add
add
jne
add
outs
jbe
add
outs
ja
add
or
and
add
or
sub
or
add
or
pop
or
push
sub
add
push
or
and
add
fiadd
push
sub
add
add
add
push
add
test
or
add
add
add
add
add
add
xor
add
add
add
adc
add
or
add
lea
add
add
push
sbb
adc
jb
pop
add
sub
add
adc
push
or
mov
or
or
and
add
adc
or
pop
push
or
mov
add
adc
push
add
pop
add
add
add
adc
or
and
add
adc
outs
jnp
add
sub
add
or
or
pop
add
add
push
push
add
pop
add
add
add
adc
or
and
add
adc
outs
jnp
add
sub
add
or
sub
sub
add
pop
sub
add
adc
jo
pop
add
add
or
pop
or
movhps
adc
add
mov
add
mov
pop
add
add
add
adc
sub
add
adc
jnp
add
je
add
add
or
or
add
or
adc
push
add
add
adc
add
or
and
add
adc
adc
jo
add
add
adc
adc
and
add
adc
jnp
add
sub
add
adc
adc
or
or
add
or
pop
outs
add
or
or
adc
sub
or
or
add
adc
adc
sbb
add
or
pop
adc
sub
or
sub
add
adc
adc
adc
or
sub
or
or
test
add
sub
xchg
add
adc
push
adc
mov
pop
add
add
add
adc
or
and
add
adc
outs
jnp
add
sub
add
adc
adc
or
add
or
or
mov
add
adc
push
adc
sub
add
mov
pop
add
add
add
adc
add
or
movq
add
adc
outs
mov
add
cmp
(bad)
(bad)
(bad)
ficom
adc
jne
add
add
adc
jne
add
add
add
or
add
xchg
add
push
or
lahf
add
add
add
sub
add
sub
adc
or
add
or
mov
add
or
or
and
add
sub
pop
sub
pop
sub
add
sub
adc
mov
add
outs
mov
add
adc
sub
adc
sub
and
add
adc
add
or
mov
add
adc
sub
(bad)
push
adc
(bad)
push
push
add
sbb
add
or
adc
sub
adc
sub
(bad)
or
sbb
add
sub
add
or
add
sub
add
inc
pusha
add
add
add
lock
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
xchg
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
sbb
pop
add
add
adc
add
or
pop
or
add
add
add
add
jb
pop
add
adc
add
int
add
adc
add
add
add
or
pop
outs
add
or
cmp
add
adc
pop
add
outs
jb
add
or
pop
add
outs
add
or
push
outs
ins
add
or
pop
outs
nop
add
or
push
outs
xchg
add
or
pop
outs
jo
add
adc
pop
sub
add
or
outs
xchg
add
or
or
sub
or
add
or
add
xchg
add
push
or
or
sbb
add
sub
add
or
add
sub
add
add
add
add
add
mov
or
add
add
add
add
add
add
xor
add
add
daa
add
adc
xchg
add
or
push
pop
add
push
jae
add
or
add
or
xchg
add
or
sub
push
sub
popf
add
push
sub
sbb
sahf
add
push
(bad)
adc
sub
add
or
sub
and
add
fiadd
sub
add
add
add
add
sub
or
add
add
add
add
sub
adc
add
add
add
xor
add
or
add
add
sub
push
mov
or
add
push
pop
call
add
or
add
xchg
add
add
push
push
outs
call
add
adc
adc
pop
xor
movups
pop
cmp
or
pop
pop
xor
pop
sub
adc
pop
inc
xor
adc
pop
pop
xor
adc
pop
aaa
pop
adc
sub
adc
pop
popa
xor
pop
pop
jp
cmp
pop
adc
adc
pop
jg
rol
jle
add
add
pop
pop
xor
jle
add
add
sbb
add
add
xor
jb
pop
add
xor
or
jo
xor
add
or
ds
add
push
sbb
outs
jl
add
adc
add
pop
pop
cs
or
add
pusha
or
add
add
push
xor
jae
add
or
and
out
add
add
push
jae
add
or
push
sub
push
adc
outs
jl
add
adc
push
jae
add
or
push
sub
add
adc
adc
adc
add
or
or
adc
adc
inc
adc
adc
add
or
pop
adc
push
jb
or
jo
xor
pop
add
add
pop
adc
sbb
add
pop
add
add
cmp
add
push
or
jo
xor
add
or
add
adc
push
or
add
push
sub
pop
add
add
or
add
add
add
or
add
and
or
or
or
add
add
jle
add
add
pop
sbb
sbb
pop
or
jo
adc
or
jo
xor
add
sub
add
or
cmc
or
add
or
jo
adc
or
jo
xor
add
sub
jle
add
add
pop
sbb
adc
mov
adc
or
jo
xor
add
sub
jb
or
jo
adc
or
jo
xor
add
sub
add
or
add
jb
or
jo
jns
add
adc
jle
add
or
and
and
or
push
push
add
add
add
or
add
or
pop
add
add
push
sbb
mov
jge
add
adc
adc
push
sub
adc
sub
add
fisub
jle
add
or
and
and
or
push
push
add
add
add
or
add
push
fadd
push
cmp
add
add
adc
add
pop
sub
add
adc
jle
add
or
and
and
or
push
push
add
add
add
or
pop
add
and
jg
add
mov
or
add
xor
and
jg
add
or
or
adc
add
push
sub
adc
xor
adc
jle
add
or
or
add
test
add
adc
or
xor
add
or
add
or
add
or
and
add
fisub
or
and
and
or
add
push
push
add
add
add
or
movs
add
or
fisub
jle
add
or
and
and
or
push
push
add
add
add
or
add
push
es
or
sbb
add
sub
add
or
add
sub
jg
or
add
pop
sbb
inc
jle
add
add
pop
pop
imul
sldt
add
outs
add
or
add
xor
or
jo
xor
add
sbb
add
add
add
add
pop
add
add
or
into
pop
add
cmp
(bad)
(bad)
jmp
das
jle
add
add
add
add
add
add
sbb
add
sub
or
jle
add
add
cwde
add
push
sbb
add
jle
add
add
add
or
xchg
add
add
add
add
cwde
add
push
sbb
add
pop
add
add
cmp
add
push
or
jo
xor
add
sub
inc
add
add
add
add
leave
or
jo
xor
xchg
add
push
cmp
add
sub
add
outs
cmps
add
or
add
or
or
jo
outs
test
add
adc
adc
cmp
add
add
push
jb
or
outs
test
and
add
adc
fimul
adc
outs
stos
add
or
adc
cmp
pcmpeqw
add
add
xchg
add
add
pcmpeqb
add
add
jle
add
add
add
or
add
jle
add
adc
adc
adc
sldt
add
popa
adc
pop
adc
adc
dec
jle
add
add
pop
add
add
jl
add
pop
pop
outs
call
adc
pop
add
add
or
jo
xor
pop
add
add
pop
add
add
cmp
add
push
or
jo
xor
add
or
add
movd
add
add
cwde
add
push
sbb
add
or
sbb
add
sub
add
or
add
add
add
add
or
pop
sub
adc
add
add
add
adc
or
jo
cmp
add
or
jo
inc
add
or
jle
add
add
add
or
jle
add
add
cmp
add
push
or
jo
xor
add
or
add
or
add
add
add
add
add
ds
add
push
adc
adc
adc
lods
add
or
cs
add
or
adc
adc
outs
arpl
add
fdivr
add
add
cmp
add
push
or
jo
xor
add
or
add
push
cmp
add
add
adc
add
pop
sub
add
adc
mov
and
and
adc
push
add
add
push
push
add
add
add
or
ret
add
adc
adc
and
and
jl
add
adc
adc
lods
add
add
adc
add
add
push
sahf
add
add
add
or
push
jle
add
or
or
jo
mov
add
adc
jle
add
or
and
and
push
mov
add
(bad)
push
push
add
add
add
or
adc
push
adc
push
and
add
jle
add
or
add
or
mov
add
adc
adc
and
and
jl
add
adc
adc
sub
adc
add
add
push
pop
add
add
add
adc
adc
sbb
sbb
push
sbb
add
push
cmp
mov
and
and
sbb
push
push
add
add
add
or
mov
add
sub
adc
add
adc
adc
and
and
jl
add
adc
adc
adc
push
add
add
push
inc
jb
or
jb
or
add
or
pop
inc
add
add
add
add
pop
add
add
and
aaa
add
add
adc
adc
and
and
jl
add
adc
adc
adc
push
add
add
push
mov
ins
jb
or
jb
or
add
or
pop
inc
add
add
add
add
pop
add
add
and
lock
add
adc
adc
and
and
jl
add
adc
adc
adc
push
add
add
push
mov
add
or
and
and
sbb
push
push
add
add
add
or
add
push
es
es
add
or
and
and
adc
push
add
add
push
push
add
add
add
or
add
push
fadd
jle
add
add
xchg
add
fidivr
and
or
sbb
sbb
add
add
adc
jp
sub
add
jb
push
add
xor
add
sbb
or
and
add
fld
add
sub
add
or
mov
add
and
add
xor
push
add
add
jle
add
add
mov
add
jle
add
add
sbb
and
adc
add
jae
add
or
sbb
add
add
add
add
sub
sbb
daa
adc
sub
sub
mov
mov
add
adc
daa
fimul
sub
adc
outs
mov
add
pop
adc
fidivr
and
or
sbb
sbb
add
add
adc
jb
(bad)
jo
jb
push
add
xor
add
sbb
or
and
add
fstp
and
add
(bad)
(bad)
inc
jle
add
add
pop
add
add
sldt
add
and
add
sub
add
pop
add
add
sldt
add
and
add
sub
add
jle
add
add
jmp
add
xor
pop
add
add
pop
add
add
sldt
add
outs
add
or
add
mov
add
jle
add
add
sldt
add
mov
add
jle
add
add
xor
sub
add
push
es
add
or
sbb
adc
jle
add
add
outs
add
or
sub
pop
add
add
add
cmp
add
xor
add
outs
jb
add
adc
pop
outs
ins
add
or
sub
adc
or
fstp
add
add
sbb
add
jb
adc
jo
jb
adc
jo
xor
add
sbb
pop
sub
add
or
shr
and
add
fstp
sub
add
adc
adc
jne
add
add
adc
jp
mov
jb
adc
jo
xor
add
sbb
or
and
add
fstp
(bad)
(bad)
jmp
and
add
frstor
add
add
adc
jo
adc
adc
jo
xor
add
pop
xor
jle
add
add
add
add
scas
add
or
pop
add
push
add
add
cmp
add
xor
add
sub
pop
adc
fst
add
add
add
or
push
add
add
mov
add
(bad)
add
add
and
or
pop
jle
add
add
ds
add
add
fiadd
add
jle
add
add
mov
or
add
pop
pop
cmp
ins
add
or
and
and
sub
sub
outs
ins
add
or
sub
add
add
outs
add
or
sub
add
add
outs
add
or
sub
adc
jo
mov
add
jle
add
add
pop
sbb
sbb
pop
add
sldt
add
mov
add
xor
add
outs
jb
add
sub
adc
jb
pop
add
sldt
add
mov
xor
add
outs
jb
add
adc
sub
adc
sub
add
fidivr
sub
add
jb
adc
jo
adc
jo
xor
add
sbb
pop
sub
add
or
aad
and
add
ficom
jb
adc
jo
adc
adc
jo
xor
add
sub
add
or
adc
jb
adc
jo
jb
adc
add
or
sub
add
inc
enter
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
jae
add
add
add
add
add
add
add
add
add
add
sub
add
or
add
or
add
add
add
into
add
add
add
cmp
add
and
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
xchg
add
or
add
or
add
add
add
xchg
add
add
add
add
add
add
add
add
add
add
add
jmp
add
add
or
add
add
add
fiadd
add
in
add
add
add
add
add
add
lock
add
repnz
add
pop
add
add
add
add
add
add
add
push
add
repnz
add
or
add
add
add
add
add
add
add
or
add
add
add
or
add
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
add
add
and
or
add
add
add
add
add
add
add
add
add
add
add
daa
add
add
add
add
add
add
push
add
mov
or
add
add
add
add
add
jnp
add
add
or
add
jle
add
or
add
add
mov
add
sub
add
mov
add
mov
add
mov
sbb
add
jnp
add
add
push
add
add
push
sub
cmp
sub
sbb
add
or
add
add
add
mov
jnp
add
add
mov
push
add
add
push
sub
add
mov
jnp
add
add
adc
jnp
add
add
mov
adc
and
add
add
mov
add
sub
add
xor
add
add
add
add
add
push
add
add
push
add
add
or
add
add
or
pop
pop
outs
ret
or
add
add
add
push
sbb
add
or
sub
add
adc
or
xchg
add
push
add
adc
add
or
pop
or
outs
lds
add
or
add
add
add
push
add
pop
add
push
add
add
add
or
add
add
add
add
push
add
add
outs
mov
or
add
push
add
add
push
add
pop
add
add
or
add
add
add
add
pop
add
mov
or
outs
mov
enter
adc
pop
sub
add
xor
add
add
adc
outs
leave
add
or
movlps
sub
add
or
or
movaps
add
or
add
adc
adc
or
add
jae
add
or
add
add
jnp
add
add
pop
pop
and
or
or
das
add
adc
adc
imul
add
inc
pop
adc
adc
adc
pop
arpl
arpl
push
sbb
add
or
jnp
add
add
pop
adc
add
add
add
push
pop
pop
and
add
add
add
pop
bound
and
add
inc
pop
adc
add
int
add
adc
adc
adc
adc
sbb
add
or
adc
outs
iret
add
or
adc
outs
rol
add
adc
sbb
or
adc
outs
rol
add
outs
rol
add
add
add
add
push
add
add
or
add
or
or
adc
outs
das
add
push
add
add
add
or
adc
jnp
add
add
adc
add
add
add
adc
(bad)
add
or
adc
xlat
add
or
jnp
add
add
fadd
add
fimul
or
adc
outs
arpl
add
fcom
adc
jnp
add
add
add
add
add
outs
fld
add
adc
pop
outs
into
add
or
add
add
and
add
add
jnp
add
add
add
add
add
adc
imul
sub
or
adc
fiadd
add
adc
fild
add
fimul
or
pop
adc
arpl
add
fdiv
add
or
or
adc
push
imul
adc
adc
and
add
and
add
or
adc
push
imul
pop
push
imul
adc
and
add
mov
outs
fadd
add
adc
adc
or
or
add
or
adc
add
or
adc
adc
fiadd
add
adc
or
or
or
outs
arpl
add
fcom
adc
imul
outs
fld
add
adc
adc
add
fild
add
jae
add
or
push
adc
adc
adc
and
inc
and
add
add
add
add
add
mov
add
adc
and
add
inc
and
add
mov
inc
inc
outs
loopne
add
adc
and
add
inc
inc
and
test
cwde
inc
outs
loopne
add
adc
and
test
cwde
inc
and
add
inc
and
add
add
adc
and
add
inc
and
add
loopne
and
add
inc
outs
loopne
add
adc
and
add
inc
and
add
inc
and
add
inc
and
add
add
adc
and
add
inc
and
add
pop
inc
and
add
add
add
or
adc
add
or
adc
add
xchg
inc
and
add
add
and
add
inc
outs
loopne
add
adc
and
add
add
add
add
add
add
and
add
inc
outs
loopne
add
adc
and
add
add
add
adc
add
nop
inc
and
add
inc
outs
loopne
add
adc
and
add
rol
add
jo
outs
loopne
add
adc
and
add
jo
and
add
jo
and
add
inc
inc
and
add
and
add
outs
mov
or
adc
add
pusha
inc
and
add
and
add
inc
and
add
and
add
inc
and
add
loopne
and
add
add
adc
and
add
inc
and
add
rol
add
add
add
and
add
add
add
add
add
or
adc
add
add
and
add
add
and
add
add
adc
and
add
add
add
nop
inc
and
cmps
aas
and
add
dec
inc
and
add
and
add
jo
outs
mov
or
adc
add
add
add
and
add
add
add
and
add
mov
add
add
or
adc
add
mov
add
add
mov
add
add
add
nop
inc
and
add
and
add
add
adc
and
add
and
add
and
add
cwde
inc
outs
loopne
add
adc
and
add
inc
and
add
adc
add
nop
inc
and
add
inc
and
add
adc
add
mov
mov
or
adc
add
adc
add
mov
add
and
add
mov
add
xor
add
jo
and
add
and
add
outs
mov
or
adc
add
inc
inc
and
add
and
add
inc
and
add
and
add
and
add
and
add
and
add
outs
mov
or
adc
add
push
inc
and
add
and
add
and
add
and
add
and
add
jo
and
add
add
adc
and
add
and
add
jo
and
add
and
add
and
add
and
add
and
add
outs
mov
or
adc
add
pusha
inc
and
add
and
cmc
pop
inc
and
add
and
add
inc
inc
and
jp
inc
and
add
outs
mov
or
adc
loope
pusha
inc
and
add
and
add
inc
inc
and
jp
inc
and
add
test
and
add
add
adc
and
add
cwde
inc
and
add
cwde
inc
outs
loopne
add
adc
outs
enter
adc
and
add
inc
and
add
mov
nop
inc
and
add
inc
and
add
rol
add
add
adc
and
add
inc
and
add
inc
inc
and
add
inc
inc
and
add
rol
add
add
adc
outs
enter
adc
adc
adc
fiadd
add
adc
outs
fild
add
fimul
push
sub
adc
outs
arpl
add
fcom
adc
or
or
adc
outs
arpl
add
fsubr
add
add
add
add
add
fild
add
cmp
add
add
add
add
add
add
add
add
add
add
add
add
or
add
add
add
add
add
mov
add
pusha
add
add
add
add
add
add
add
add
add
adc
add
addr16
add
add
or
add
add
add
add
add
xchg
add
add
add
add
or
add
add
add
adc
add
pop
add
add
add
add
loope
add
sub
mov
add
loop
add
add
sub
inc
jge
add
add
outs
add
push
add
add
or
adc
add
add
add
add
in
add
add
add
add
data16
add
add
jo
pop
push
sbb
add
or
add
add
jae
add
or
add
add
jle
add
add
add
and
imul
add
imul
jle
add
add
add
mov
sub
add
or
sbb
add
jle
add
add
add
add
imul
add
imul
jle
add
add
add
push
inc
pop
imul
add
imul
jle
add
add
add
js
pop
imul
add
imul
and
and
add
outs
call
and
add
add
outs
call
jnp
add
add
push
pop
outs
jmp
push
outs
jmp
and
add
add
or
push
outs
in
add
or
sub
add
sbb
add
inc
add
add
add
add
jnp
add
add
add
jge
add
add
jnp
add
add
or
jnp
add
add
mov
jnp
add
add
or
jnp
add
add
in
add
or
lar
add
fsubr
add
or
add
add
add
aaa
add
add
add
inc
add
add
add
push
add
sub
add
or
add
add
add
push
add
out
add
or
add
sbb
push
add
add
add
add
add
jnp
add
add
jnp
add
add
or
push
add
add
or
add
add
les
add
or
or
add
add
add
add
rol
add
inc
outs
lock
or
and
add
add
add
add
and
add
inc
and
add
inc
outs
lock
or
outs
enter
or
add
inc
inc
and
add
inc
and
add
rol
add
or
and
add
rol
add
and
loopne
add
or
add
add
add
inc
and
add
and
add
inc
outs
loopne
add
or
add
inc
inc
and
add
inc
and
add
and
add
inc
outs
loopne
add
or
add
or
and
add
and
add
and
add
inc
inc
outs
loopne
add
or
add
add
add
and
add
mov
outs
loopne
add
or
add
add
add
inc
inc
and
add
add
or
add
inc
inc
and
add
inc
inc
and
add
outs
loopne
add
adc
add
add
add
int
add
or
adc
add
outs
rol
add
adc
outs
iret
add
or
add
outs
rol
add
adc
push
push
fild
add
pop
xor
add
add
icebp
add
or
add
or
add
and
add
add
add
add
and
add
inc
and
add
inc
outs
repnz
or
or
sub
or
add
or
adc
outs
ret
or
add
add
add
add
add
fld
add
adc
fiadd
add
push
outs
fild
add
adc
add
push
pop
sub
pop
outs
arpl
add
(bad)
or
sub
push
outs
arpl
add
fsubr
inc
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
add
xchg
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
xor
add
adc
or
jl
add
add
outs
repz
or
jnp
add
add
pop
arpl
outs
hlt
add
or
jnp
add
add
pop
arpl
jnp
add
add
jnp
add
add
(bad)
add
or
sub
add
add
add
push
add
sub
add
xor
add
add
adc
jnp
add
add
push
add
add
push
add
outs
rol
or
add
add
jl
add
add
jnp
add
add
cmc
add
or
add
add
jnp
add
add
test
or
outs
rol
or
push
push
outs
ret
or
add
add
add
jnp
add
add
jl
add
add
test
and
test
jl
add
add
clc
add
or
jl
add
add
clc
add
or
jl
add
add
stc
add
or
jl
add
add
cli
add
or
outs
sti
add
or
add
add
adc
sub
add
add
in
add
add
add
add
add
add
cld
add
or
add
add
and
sub
add
outs
call
and
add
add
outs
call
add
sbb
add
inc
add
add
add
add
jnp
add
add
cmp
pop
jge
add
add
jnp
add
add
or
jnp
add
add
mov
and
adc
and
add
jl
add
add
adc
add
add
adc
fsubr
add
add
or
add
add
add
add
add
sub
add
add
push
add
sub
add
or
add
add
add
push
add
out
add
or
add
adc
add
inc
add
add
add
add
sub
add
or
and
das
add
add
or
inc
add
xor
add
add
add
and
pop
jge
add
add
push
add
mov
add
sub
push
jge
add
add
add
add
add
sub
add
adc
add
sbb
add
pop
add
adc
add
add
or
push
outs
add
add
add
outs
add
add
add
outs
add
add
sub
add
sub
outs
add
push
sub
jle
sub
add
or
jle
add
add
pop
add
or
sbb
add
or
outs
add
push
sub
xor
add
add
add
add
add
in
add
add
add
add
cld
add
or
add
add
jle
add
add
add
add
sub
add
or
add
add
and
and
add
outs
call
and
add
add
outs
call
outs
inc
add
push
sub
adc
add
jo
add
add
add
add
add
add
or
jnp
add
add
or
add
add
add
add
or
jnp
add
add
or
add
jle
add
add
xor
add
or
add
outs
or
add
je
add
add
add
add
sub
sub
add
outs
or
add
je
add
add
add
add
sub
or
add
je
add
add
add
add
mov
add
adc
jnp
add
add
mov
adc
sub
add
add
add
outs
jecxz
add
sub
add
adc
add
add
add
add
jnp
add
add
push
add
add
push
add
outs
rol
or
add
add
outs
rol
or
jnp
add
add
jnp
add
add
jnp
add
add
outs
ret
add
or
jl
add
add
adc
sub
add
sbb
push
add
add
adc
outs
repz
or
add
add
add
add
or
push
add
add
or
add
add
jnp
add
add
int
add
or
or
sbb
add
or
sbb
add
or
pop
outs
ret
or
add
add
xor
or
jnp
add
add
push
push
add
add
add
push
add
or
das
or
jnp
add
add
push
push
add
add
add
push
add
or
add
add
add
add
add
add
add
add
add
push
add
or
fimul
pop
sub
pop
outs
arpl
add
(bad)
add
or
sub
add
add
add
sub
imul
add
lahf
lahf
add
add
add
mov
jnp
add
add
adc
jnp
add
add
mov
adc
sub
add
add
mov
add
xor
add
add
add
add
add
add
add
pop
add
jge
add
add
jnp
add
add
or
jnp
add
add
mov
jnp
add
add
or
jnp
add
add
or
add
add
add
add
or
jnp
add
add
or
add
ficom
add
add
add
fsubr
add
add
or
add
add
add
dec
add
add
add
pop
add
add
add
push
add
outs
sgdtd
or
out
add
or
add
add
add
push
add
out
add
or
add
xchg
sub
add
or
push
jge
add
add
add
add
jae
add
push
jge
add
add
add
adc
add
sub
add
adc
pop
pop
xor
add
add
or
add
add
sub
add
or
jnp
add
add
dec
add
push
es
sub
add
sbb
add
fadd
add
arpl
add
adc
(bad)
adc
adc
add
add
add
add
jnp
add
add
aaa
add
add
add
rol
add
jge
add
add
add
jnp
add
add
cmp
add
add
dec
add
push
or
add
or
add
push
add
add
push
push
add
add
add
or
add
sub
add
adc
dec
add
push
sub
add
add
adc
add
sub
or
jo
xor
xor
add
or
and
or
add
mov
add
(bad)
push
push
add
add
add
or
movs
add
or
fisub
jle
add
or
add
push
add
add
push
push
add
add
add
or
add
or
or
add
add
add
pop
add
nop
add
add
add
add
add
add
xor
add
adc
xor
add
adc
xor
add
pop
jge
add
add
add
cmp
pop
outs
push
add
push
add
adc
add
sub
adc
add
pop
add
add
adc
jnp
add
add
add
xor
add
add
add
add
add
jae
add
or
add
add
jae
add
or
add
add
add
sbb
jnp
add
add
outs
sbb
add
add
add
add
outs
sbb
add
add
jge
add
add
jnp
add
add
sbb
jnp
add
add
outs
sbb
jnp
add
add
outs
push
add
or
adc
add
pop
add
add
add
add
add
add
add
xor
add
add
add
add
add
jae
add
or
add
add
jae
add
or
add
add
add
sbb
jnp
add
add
outs
sbb
add
add
add
add
outs
sbb
add
add
jge
add
add
jnp
add
add
sbb
jnp
add
add
outs
sbb
jnp
add
add
outs
push
add
or
adc
add
pop
add
add
add
add
add
add
add
xor
add
add
add
add
add
jae
add
or
add
add
jae
add
or
add
add
add
sbb
jnp
add
add
outs
sbb
add
add
add
add
outs
sbb
add
add
jge
add
add
jnp
add
add
sbb
jnp
add
add
outs
sbb
jnp
add
add
outs
push
add
or
adc
add
pop
add
add
add
add
add
add
add
xor
add
add
add
add
add
add
jae
add
or
add
add
add
or
jnp
add
add
outs
sbb
add
add
jge
add
add
jnp
add
add
or
jnp
add
add
outs
push
add
or
add
adc
add
pop
add
add
adc
jnp
add
add
add
add
jge
add
add
add
add
xor
add
add
add
add
add
add
add
add
add
jge
add
add
add
add
xor
add
add
add
add
add
add
add
add
add
jge
add
add
add
add
xor
add
add
add
add
add
add
add
add
add
jge
add
add
add
add
xor
add
add
add
add
add
add
add
add
xor
add
add
add
add
add
add
jae
add
or
add
add
add
or
jnp
add
add
outs
and
add
add
jge
add
add
jnp
add
add
or
jnp
add
add
outs
and
add
sub
add
xor
inc
add
add
add
add
sub
add
or
sub
popa
add
add
popa
add
add
add
add
add
add
jne
add
mov
add
es
add
add
add
add
add
or
add
add
mov
add
sub
add
xor
add
add
add
and
add
add
add
push
outs
push
add
push
add
add
or
add
push
add
add
or
add
push
add
add
or
add
push
add
add
push
outs
pop
add
push
add
add
or
add
push
add
add
push
outs
arpl
add
add
add
push
outs
add
push
add
add
push
outs
add
push
add
add
or
outs
pop
add
push
and
push
sub
daa
add
or
add
or
outs
pop
add
push
jb
adc
add
or
outs
pop
add
push
pop
outs
sub
add
add
add
push
and
add
add
adc
call
add
add
add
push
sbb
add
or
outs
pop
add
push
push
outs
sub
outs
pop
add
push
jle
add
add
add
or
outs
pop
add
push
and
push
sub
daa
add
or
add
or
outs
pop
add
push
jb
adc
add
or
outs
pop
add
push
pop
and
sbb
call
add
add
add
push
sbb
add
or
outs
pop
add
push
jb
adc
add
or
outs
pop
add
push
pop
outs
xor
add
jle
add
add
or
outs
pop
add
push
push
outs
xor
add
add
add
push
sbb
add
or
outs
pop
add
push
and
add
add
jl
fwait
add
push
sub
add
or
add
or
outs
pop
add
push
jb
adc
add
or
outs
pop
add
push
pop
inc
pop
pop
sub
sub
add
add
add
push
sbb
add
or
outs
push
add
push
pop
outs
sub
outs
pop
add
push
jb
adc
add
or
outs
pop
add
push
pop
outs
xor
add
add
add
push
and
add
pop
jl
fwait
add
push
sub
add
or
add
or
outs
push
add
push
jb
adc
add
or
outs
push
add
push
and
pop
sub
sub
add
add
add
push
pop
outs
sub
add
add
add
push
pop
outs
sub
outs
push
add
push
jb
adc
add
or
outs
push
add
push
pop
outs
xor
add
jle
add
add
xor
add
add
push
outs
sub
add
add
add
push
pop
or
push
sub
daa
add
or
add
or
outs
pusha
add
push
jb
adc
add
or
outs
pusha
add
push
pop
jle
sbb
call
add
add
add
push
sbb
add
or
outs
pusha
add
push
jb
adc
add
or
outs
pusha
add
push
pop
inc
outs
xor
add
add
add
push
outs
add
or
outs
data16
push
pop
adc
add
or
outs
data16
push
pop
cmp
mov
add
sub
daa
add
or
add
or
outs
data16
push
jb
push
add
sub
add
add
add
push
and
add
sub
call
add
add
add
push
push
outs
sub
add
add
add
push
jb
push
add
xor
outs
data16
push
outs
add
or
push
pop
inc
pop
adc
add
or
push
pop
pop
pop
push
outs
aaa
add
or
adc
add
add
push
push
outs
cmp
add
add
add
push
pop
or
mov
fwait
add
push
sub
add
or
add
or
outs
add
push
sbb
push
sbb
push
sub
cmp
add
add
add
push
jb
push
add
sub
add
add
add
push
pop
and
and
call
add
add
add
push
pop
outs
sub
add
add
add
push
push
outs
sub
outs
bound
add
pop
outs
cmp
add
add
add
push
sub
add
or
add
or
outs
bound
add
push
push
sub
daa
add
or
add
or
outs
bound
add
jb
pop
add
sub
add
add
add
push
and
add
add
xor
call
add
add
add
push
sbb
add
or
outs
bound
add
push
outs
sub
outs
pop
add
push
push
and
fwait
add
push
sub
add
or
add
or
outs
pop
add
push
jb
pop
add
sub
add
add
add
push
and
add
add
sub
sub
add
add
add
push
sbb
add
or
outs
pop
add
push
push
outs
sub
and
add
add
call
call
add
add
add
or
outs
add
push
outs
aas
add
or
outs
add
or
outs
bound
add
outs
aas
add
or
outs
add
or
outs
pusha
add
push
outs
aas
add
or
outs
add
or
outs
data16
push
outs
aas
add
or
outs
add
or
outs
pop
add
push
outs
aas
add
or
outs
add
or
outs
pop
add
push
outs
aas
add
or
outs
add
or
outs
push
add
push
outs
aas
add
or
outs
add
or
outs
pop
add
push
outs
aas
add
or
outs
add
or
outs
pop
add
push
outs
aas
add
or
push
outs
inc
add
or
push
outs
inc
add
or
jle
add
add
pop
add
or
jb
pop
add
sub
add
add
outs
inc
add
or
pop
outs
inc
add
or
outs
ins
add
push
add
outs
cmp
add
sub
add
sub
or
add
add
or
add
or
add
add
or
add
or
add
add
add
dec
add
or
add
add
bound
add
push
push
push
pop
adc
lea
add
sub
jle
sub
add
or
and
or
add
mov
add
sub
add
sub
add
sub
xor
mov
add
add
jle
add
add
jmp
add
xor
pop
jle
add
or
or
or
xchg
add
or
push
ds
add
add
sub
add
add
push
sub
adc
jo
pop
adc
sub
sub
pop
pop
adc
dec
add
or
push
adc
pop
adc
dec
add
or
add
pop
pop
push
sub
add
or
sub
add
or
das
fisttp
add
add
or
add
jle
add
or
or
or
add
add
push
push
add
add
add
or
movs
add
or
adc
adc
adc
and
pop
add
cmp
adc
pop
adc
pusha
adc
or
or
or
dec
or
or
or
xor
or
or
xor
outs
bound
add
jle
add
add
dec
add
or
outs
bound
add
jb
pop
add
xor
add
add
pop
add
dec
add
or
mov
add
adc
adc
cmp
pop
or
xor
pop
adc
sub
add
jle
add
add
dec
add
or
outs
bound
add
jb
pop
add
xor
add
add
pop
add
dec
add
or
add
add
push
jle
add
add
dec
add
or
outs
bound
add
jb
sbb
jo
xor
add
add
sbb
jo
dec
add
or
cmp
or
sbb
add
sub
add
or
add
add
add
push
jle
add
add
dec
add
or
outs
bound
add
jb
sbb
jo
xor
add
add
sbb
jo
dec
add
or
add
add
push
outs
dec
add
or
sub
add
add
add
add
daa
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
adc
add
daa
add
add
adc
dec
add
or
push
pop
or
outs
dec
add
or
outs
push
add
or
or
pop
sbb
push
add
add
or
add
xor
add
add
add
add
add
dec
add
or
push
pop
sbb
push
add
add
or
add
add
add
or
sbb
add
daa
add
add
add
add
push
add
or
add
adc
xor
jb
sbb
jo
mov
add
fimul
sbb
add
sub
add
or
add
add
or
add
add
or
add
add
xor
and
add
adc
outs
pop
add
push
outs
push
add
or
popf
add
or
push
push
outs
jl
add
pop
pop
outs
call
or
jb
or
jo
xor
jle
add
add
jb
(bad)
jo
xor
push
add
or
mov
add
jb
sbb
jo
jb
sbb
jo
xor
add
sbb
add
add
add
push
or
or
jb
sbb
jo
xor
add
push
jge
add
add
jle
add
add
dec
add
push
or
or
add
add
popf
add
or
push
push
outs
jl
add
pop
pop
outs
call
or
jb
or
jo
xor
jle
add
add
jb
or
jo
push
or
jo
xor
add
outs
push
add
or
jo
jb
sbb
jo
xor
add
sbb
or
mov
sbb
add
adc
fimul
pop
sub
pop
outs
arpl
add
(bad)
sub
add
add
push
push
outs
add
or
pop
outs
dec
add
or
outs
push
add
or
or
sbb
add
sub
add
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
sbb
add
lds
add
ja
add
jae
add
push
or
or
jb
sbb
jo
xor
add
add
add
push
outs
push
add
or
add
add
jle
add
add
dec
add
push
or
or
add
add
popf
add
or
push
push
outs
jl
add
pop
pop
outs
call
or
jb
or
jo
xor
jle
add
add
jb
or
jo
push
or
jo
xor
add
sbb
add
or
jo
jb
sbb
jo
xor
add
sbb
sbb
add
pop
add
push
push
outs
add
or
sbb
add
outs
ins
add
push
adc
ficomp
pop
sub
pop
outs
arpl
add
(bad)
or
sbb
add
sub
add
or
add
add
add
sbb
add
add
add
add
add
add
add
add
add
xor
add
add
add
add
jg
add
add
sub
add
sub
add
outs
push
add
or
and
pop
add
or
and
add
or
and
jmp
pop
add
or
and
and
add
cmp
add
jl
add
sub
add
sub
add
xor
add
add
add
add
add
jle
add
or
adc
adc
adc
add
or
sub
adc
add
or
add
adc
sub
add
adc
push
sub
add
adc
add
sub
add
jp
add
add
pop
outs
pop
add
or
push
adc
add
add
add
add
add
sub
sub
sub
push
push
pop
pop
outs
add
or
add
adc
push
add
add
jnp
add
jle
add
add
add
cmp
or
add
sub
add
pop
sub
add
imul
add
and
add
sub
add
or
imul
add
and
add
sub
add
or
imul
add
and
add
sub
add
or
imul
add
and
add
sub
add
or
pop
add
or
sub
add
xor
dec
add
add
adc
add
add
add
cmp
or
add
add
pop
add
or
sub
add
imul
add
and
add
sub
add
or
imul
add
and
add
sub
add
or
pop
add
or
sub
xor
push
add
add
add
jle
add
add
add
cmp
adc
add
add
pop
add
or
sub
add
sub
add
imul
add
and
add
sub
add
or
imul
add
and
add
sub
add
or
pop
add
or
sub
add
sub
add
xor
mov
add
adc
outs
pop
add
or
xor
add
add
or
add
add
jle
add
add
sub
add
or
pop
add
or
add
or
push
add
add
push
push
add
add
add
or
add
or
adc
add
inc
inc
add
outs
popa
add
or
add
add
or
add
or
jle
add
add
and
add
bound
add
outs
add
or
jle
add
add
pop
or
add
or
sub
or
add
or
fisub
jle
add
or
push
add
add
push
push
add
add
add
or
add
push
fadd
sub
add
sbb
add
add
inc
lea
or
add
add
add
jge
add
add
add
sbb
add
add
add
sub
add
adc
adc
jnp
add
add
or
or
adc
jnp
add
add
add
add
add
add
or
add
sbb
add
adc
add
sub
pop
sub
add
xor
sub
add
sub
sub
add
and
sub
add
sbb
or
or
or
sub
add
or
or
aaa
push
push
sub
add
imul
add
xor
jle
add
add
xor
pop
sub
cs
sub
jle
add
or
pop
add
or
add
or
or
or
mov
add
(bad)
push
push
add
add
add
or
sub
pop
sub
and
add
pop
and
add
sub
add
or
outs
add
or
outs
add
or
add
inc
inc
pop
and
add
or
sub
pop
outs
arpl
add
(bad)
sub
add
or
or
or
mov
add
(bad)
push
push
add
add
add
or
add
push
sub
fdivr
add
add
add
cmp
or
add
cmp
data16
add
add
add
add
cmp
or
add
cmp
add
add
data16
add
add
add
sub
add
add
or
adc
add
or
add
push
adc
outs
imul
adc
or
jae
add
or
jle
add
add
add
add
or
ins
add
add
ins
add
add
sub
outs
imul
jle
add
add
adc
or
jae
add
or
fimul
or
or
add
or
adc
or
push
or
add
or
sub
add
adc
add
or
push
adc
outs
imul
add
add
sbb
push
sub
adc
outs
arpl
add
(bad)
or
add
outs
arpl
add
fsubr
imul
or
pop
adc
jae
add
or
and
add
outs
ins
add
or
ficomp
adc
sub
adc
outs
arpl
add
(bad)
or
sbb
add
sub
add
or
add
inc
add
or
xor
pop
xor
add
sub
add
inc
jb
sbb
jo
outs
add
or
pop
sub
add
sub
xchg
sbb
jo
outs
add
or
or
or
adc
outs
jl
add
sbb
adc
or
outs
call
push
pop
sub
add
outs
add
or
sub
add
and
add
add
add
jg
add
add
je
add
sub
add
sbb
sub
add
add
jno
add
xor
add
jbe
add
jb
add
xor
jle
add
add
jne
add
mov
add
add
mov
add
sub
add
mov
mov
add
mov
add
sub
add
add
add
pusha
add
add
(bad)
add
lock
add
add
add
mov
jno
add
add
add
add
jb
pop
iret
add
add
add
add
add
add
add
add
add
clc
add
push
add
add
add
add
add
add
add
add
add
aas
add
add
add
add
add
add
add
xor
add
add
add
ja
add
sub
add
push
inc
mov
add
jg
add
add
sub
pop
sub
pop
jle
add
add
push
pop
outs
je
add
jg
add
add
sub
pop
sub
pop
outs
je
add
jg
add
add
sub
add
sub
push
sub
push
outs
jne
add
sub
jne
add
mov
jbe
add
or
mov
add
add
mov
add
(bad)
push
push
add
add
add
or
add
js
add
es
add
add
mov
jbe
add
or
mov
add
add
mov
add
(bad)
push
push
add
add
add
or
add
js
add
sub
add
adc
add
xor
add
add
add
add
sub
add
sub
jb
sbb
jo
pop
add
add
adc
jnp
add
jae
add
or
pop
or
add
add
add
xor
add
add
add
pop
add
add
push
add
sub
xor
add
add
add
mov
icebp
sbb
jo
pop
add
jge
add
sub
add
or
je
add
sbb
add
add
add
add
push
sub
add
add
push
sub
dec
inc
add
add
add
add
or
add
jbe
xor
xor
add
add
add
add
add
jle
add
sub
add
je
imul
add
add
sbb
add
push
push
add
add
add
add
inc
push
dec
inc
add
add
add
add
and
outs
bound
add
add
add
add
add
push
jmp
add
cli
add
add
add
add
add
int
add
pop
add
add
add
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
add
add
add
add
and
add
add
add
or
add
sldt
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
jo
inc
add
add
add
add
add
push
add
add
add
add
add
add
add
mov
adc
fild
rol
add
add
mov
adc
xor
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sub
push
add
add
add
add
add
add
add
std
add
gs
fadd
push
add
add
add
push
mov
push
add
pop
mov
push
add
int3
pop
fadd
push
add
fadd
push
add
add
or
add
add
or
or
or
add
or
add
add
or
or
or
or
add
dec
or
add
aad
cmps
or
add
or
sub
sbb
inc
or
adc
adc
mov
add
or
icebp
or
sbb
mov
push
add
mov
or
push
push
inc
or
mov
push
add
add
add
push
cmps
or
add
paddd
or
cmp
adc
push
add
mov
push
add
mov
add
add
bswap
femms
add
paddusb
push
add
paddusb
push
add
lfs
or
add
lea
push
add
adc
or
ins
(bad)
add
adc
add
add
add
add
adc
or
adc
add
add
mov
push
add
add
add
adc
mov
push
add
adc
lea
push
add
adc
mov
push
add
mov
push
add
add
adc
or
mov
push
add
adc
clts
add
mov
push
add
fadd
push
add
adc
add
add
adc
or
add
fadd
push
add
adc
add
add
adc
add
add
and
add
or
sbb
adc
push
add
ds
add
push
add
add
push
add
add
add
add
add
add
adc
or
adc
push
add
adc
cmp
add
adc
adc
cwde
adc
retf
adc
out
mov
push
add
add
fadd
push
add
add
add
push
adc
push
add
push
adc
push
add
pop
mov
or
jb
push
pop
push
add
add
pop
add
push
add
pop
fadd
push
add
pop
mov
push
add
sbb
or
add
sbb
or
add
sbb
or
add
sbb
or
add
adc
push
add
add
add
(bad)
sbb
push
add
sbb
fadd
push
add
sbb
add
add
sbb
sbb
mov
sbb
sbb
sbb
sbb
add
sbb
sub
push
add
sub
push
add
sub
push
add
add
sbb
sbb
sbb
fadd
push
add
mov
sbb
sbb
sbb
add
add
add
mov
sbb
add
add
sbb
add
add
sbb
dec
sbb
xchg
iret
sbb
loop
ins
clts
add
push
ins
clts
add
push
ins
clts
add
sbb
mov
push
add
add
add
push
fadd
pop
add
pop
add
push
add
pop
mov
pop
fadd
push
add
add
pop
add
push
add
pop
fadd
aas
add
and
add
add
fadd
push
add
add
and
add
add
and
add
add
and
push
push
add
and
and
and
and
and
push
add
ins
clts
add
and
push
add
and
or
sbb
dec
push
add
dec
push
add
add
add
and
or
fisttp
fisttp
fisttp
fisttp
fisttp
add
add
add
add
add
add
add
sub
aaa
add
add
add
add
aaa
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
in
add
add
add
add
add
add
ins
add
push
add
add
add
add
add
xor
push
add
add
add
add
add
add
adc
or
add
jbe
add
add
add
add
add
sbb
add
jns
mov
lahf
add
add
add
add
ins
add
add
add
add
add
add
add
add
add
add
add
add
add
add
inc
add
add
push
add
add
add
add
add
add
add
scas
add
add
mov
ret
add
add
mov
rol
adc
mov
add
in
(bad)
add
push
imul
add
add
push
add
add
sbb
int3
add
jae
int3
add
jne
int3
add
add
sti
add
add
inc
add
mov
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
jmp
add
mov
sti
add
add
add
add
add
add
add
add
add
add
in
rol
add
out
add
icebp
add
push
push
sti
add
add
rol
add
pop
push
rol
add
pop
push
push
add
add
pop
inc
add
pop
inc
add
xor
rol
add
ss
rol
add
inc
pop
add
add
add
add
inc
add
inc
pop
rol
add
dec
pop
add
add
xchg
add
add
add
mov
mov
add
rol
mov
pop
rol
add
cld
pop
loopne
add
adc
out
add
es
add
sub
rol
push
sub
add
das
or
add
xor
rol
push
xor
cmp
rol
push
cmp
rol
push
cmp
rol
push
add
add
inc
or
add
fimul
rol
push
sbb
rol
push
and
rol
push
and
rol
push
and
add
jmp
or
push
xor
add
test
add
cli
or
add
dec
sti
add
add
sti
add
add
sti
add
pop
or
or
or
add
add
or
add
add
inc
adc
sbb
inc
push
sbb
add
add
or
add
add
or
add
add
or
or
or
or
add
add
add
or
or
add
add
pop
add
add
rol
adc
inc
or
add
add
sti
add
add
sti
add
add
add
add
mov
or
add
add
add
add
cmps
add
rol
adc
or
add
lods
add
lods
add
lods
add
inc
push
adc
xchg
or
add
cwde
or
add
pushf
or
add
lahf
or
add
mov
and
imul
or
add
sahf
add
sahf
add
sahf
add
sahf
add
sahf
add
ret
add
add
add
or
push
adc
inc
or
push
adc
pop
or
push
nop
mov
add
add
sbb
add
add
sbb
add
add
sbb
add
add
add
mov
add
add
or
add
add
add
mov
add
add
or
add
add
add
add
add
adc
sbb
xor
mov
add
add
or
add
add
xor
add
add
adc
pop
add
add
dec
mov
add
add
or
jo
add
add
push
or
add
add
add
add
mov
add
add
add
add
mov
add
add
sbb
add
mov
add
add
dec
add
mov
add
add
push
add
mov
add
add
add
add
add
jo
test
mov
add
add
dec
add
mov
add
add
push
add
mov
add
add
add
add
add
add
inc
add
test
mov
add
add
add
add
mov
add
add
add
add
mov
add
add
sbb
add
mov
add
add
or
mov
or
hlt
mov
add
add
sbb
add
mov
add
add
sbb
add
add
add
mov
add
add
sbb
add
mov
add
add
add
add
add
add
mov
adc
test
or
add
add
adc
sbb
add
add
mov
adc
dec
add
add
xor
adc
dec
add
add
add
mov
adc
push
add
add
add
add
add
add
repnz
add
rol
add
inc
pop
add
add
xchg
rol
add
add
pop
add
xor
add
add
add
jge
adc
adc
push
into
add
add
inc
add
add
add
add
push
sbb
add
add
add
add
inc
add
add
add
add
add
add
aam
add
add
inc
add
sbb
add
add
adc
push
add
lods
iret
add
add
add
addr16
rcl
add
add
inc
or
test
(bad)
add
add
inc
or
and
push
add
xlat
add
add
push
sbb
add
add
add
add
add
add
inc
add
add
add
add
add
mov
add
add
add
addr16
rcr
add
add
add
mov
adc
and
sbb
add
add
inc
add
add
add
add
fild
add
inc
add
call
add
sbb
add
fadd
add
add
add
add
inc
add
add
add
add
test
add
add
inc
add
add
clc
fadd
add
add
retf
add
and
add
add
inc
add
add
xor
add
add
push
sbb
add
add
add
push
sbb
add
add
add
add
and
add
add
inc
add
add
push
fiadd
add
inc
add
movs
fiadd
add
add
test
add
inc
add
add
add
add
add
add
add
inc
add
add
add
add
inc
add
add
add
add
push
sbb
add
add
add
push
inc
add
add
add
add
push
inc
add
add
add
add
pusha
xor
dec
add
add
add
add
pop
add
add
push
add
bound
xor
add
add
add
enter
add
add
add
add
add
add
sbb
add
add
add
add
rol
outs
add
add
add
add
add
add
jp
aas
add
add
add
add
pop
pop
pop
add
fsub
add
add
inc
or
add
loope
add
add
push
pop
mov
inc
add
add
add
jo
xchg
add
jo
add
and
inc
or
fwait
add
loopne
add
add
inc
or
add
loop
add
add
lea
fwait
add
fs
add
add
mov
add
add
and
inc
or
add
jecxz
add
add
mov
add
jecxz
add
add
ret
add
in
add
add
inc
or
pop
les
dec
add
jecxz
add
add
fild
retf
add
add
add
inc
or
pop
aad
dec
add
in
add
add
hlt
pop
fiadd
dec
add
add
add
inc
or
or
add
cmp
add
and
inc
or
or
add
inc
in
add
add
push
or
add
in
add
add
push
or
add
in
add
add
or
add
clc
in
add
add
sbb
add
inc
add
add
dec
add
jmp
pop
or
add
call
add
add
or
add
add
add
push
adc
push
add
in
add
add
add
test
fiadd
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
out
add
add
add
mov
adc
pop
add
clc
add
add
add
and
jmp
add
add
or
push
jmp
add
add
sbb
add
add
add
add
or
add
add
add
pusha
mov
add
add
add
or
add
add
add
pusha
fmul
fld
add
add
pusha
jecxz
fiadd
add
add
pusha
out
or
add
add
add
pusha
add
in
add
add
add
and
or
add
add
add
pusha
cmp
add
add
add
or
add
add
add
pusha
pop
or
push
jae
add
add
add
pusha
outs
or
add
add
or
push
jnp
add
add
add
and
add
add
add
and
add
add
add
or
push
test
add
add
add
and
or
push
xchg
add
add
add
and
or
push
mov
add
add
add
pusha
cli
or
pop
add
add
add
pusha
push
or
xchg
add
add
add
or
xchg
add
add
add
or
add
add
add
pusha
or
call
add
pusha
dec
or
mov
add
or
add
add
add
pusha
outs
or
cmps
add
add
add
or
test
add
add
add
pusha
xchg
or
add
add
or
stos
add
add
add
or
push
lods
add
add
add
or
add
add
add
adc
xlat
or
scas
add
adc
fimul
outs
push
mov
mov
add
add
or
mov
lock
add
adc
in
or
mov
js
add
add
adc
hlt
or
icebp
add
add
adc
in
or
repnz
add
adc
push
or
push
mov
add
add
add
or
add
add
adc
or
pop
add
add
push
sbb
add
add
add
add
rol
scas
push
mov
add
add
add
mov
add
add
add
pop
pop
mov
test
ins
or
push
lds
aam
add
add
push
or
add
test
mov
push
lds
lock
cwde
or
push
mov
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
add
add
push
add
add
add
add
add
mov
add
add
add
push
add
add
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
pop
add
pop
add
popa
add
fs
jl
add
add
lea
push
add
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
add
mov
add
add
das
push
add
add
inc
push
add
add
dec
push
add
add
dec
push
add
add
push
push
add
add
inc
push
add
add
dec
push
add
add
push
push
add
add
bound
add
add
jge
add
add
add
add
add
test
add
add
add
add
add
push
push
add
add
bound
add
add
add
add
push
add
add
or
add
add
inc
push
add
add
dec
push
add
add
push
push
add
add
bound
add
add
pop
pop
add
add
pop
pop
add
add
pop
pop
add
add
pop
pop
add
add
pop
pop
add
add
pop
pop
add
add
pop
pop
add
add
pop
pop
add
add
pop
pop
add
add
push
add
add
add
add
add
add
add
mov
add
add
push
add
add
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
push
add
add
xor
add
add
xor
add
add
xor
add
add
jp
add
add
mov
add
add
mov
add
add
add
add
add
(bad)
or
and
add
add
add
jno
add
add
jp
add
add
mov
add
add
add
add
add
or
add
add
add
add
(bad)
or
add
add
add
or
add
enter
add
add
add
add
add
(bad)
or
add
add
add
add
add
add
add
(bad)
or
add
add
add
add
jae
add
add
jle
add
add
add
add
add
add
add
(bad)
or
add
add
add
(bad)
or
add
add
add
add
mov
add
add
adc
add
add
(bad)
or
add
add
add
mov
add
add
adc
add
add
jae
add
add
(bad)
or
and
add
add
add
(bad)
or
add
add
or
add
mov
add
add
mov
add
add
jae
add
add
(bad)
or
add
jne
add
add
(bad)
or
add
add
add
jle
add
add
adc
add
add
(bad)
or
add
add
add
jle
add
add
adc
add
add
inc
push
add
add
sbb
add
or
add
add
add
add
or
add
add
or
add
inc
or
add
add
add
add
pop
add
adc
add
pop
or
add
add
adc
add
popa
or
add
or
add
add
add
add
add
add
add
add
(bad)
or
add
add
add
add
add
add
add
or
add
add
add
add
add
jae
add
add
jae
add
add
loop
add
add
mov
add
add
add
mov
add
add
test
stc
or
add
add
or
add
add
or
add
add
add
add
jne
add
add
pushf
push
add
add
test
add
add
add
adc
add
add
fld
add
add
out
push
add
add
or
add
add
jle
add
add
adc
add
add
ret
add
add
or
xchg
adc
popa
add
add
add
add
add
add
add
add
add
add
mov
cmp
jns
mov
inc
add
mov
dec
add
mov
push
add
mov
add
mov
xchg
adc
xchg
add
add
add
push
rol
add
les
xor
ds
fwait
add
pop
rol
add
xor
xchg
adc
xor
or
pop
leave
add
add
mov
add
push
test
add
pop
rol
fisttp
pop
add
add
push
lock
fld
test
xchg
adc
loope
sub
add
fwait
add
add
mov
add
add
or
add
add
add
add
add
add
std
or
inc
adc
or
or
jno
wbinvd
adc
xchg
adc
adc
js
sbb
imul
mov
inc
adc
or
add
add
mov
add
and
adc
js
xor
adc
add
or
or
or
add
adc
mov
or
add
adc
mov
inc
adc
xor
xor
inc
or
add
or
or
or
push
add
test
adc
add
adc
mov
add
add
add
add
adc
rol
adc
adc
mov
add
add
add
adc
adc
jo
test
adc
add
push
sbb
xchg
adc
loope
adc
add
add
add
add
add
add
add
add
adc
jmp
or
add
adc
adc
leave
add
add
add
adc
add
and
add
adc
adc
adc
adc
adc
pop
sbb
xchg
adc
sbb
xchg
adc
add
add
add
add
add
adc
add
add
adc
and
cli
adc
or
add
adc
or
add
adc
or
add
test
adc
or
add
or
add
add
add
add
adc
adc
or
ficom
or
jo
sbb
mov
repnz
or
add
dec
add
mov
and
xor
inc
adc
pop
adc
or
or
add
or
jae
rol
add
or
adc
int3
adc
or
adc
or
adc
inc
adc
stos
or
add
add
adc
add
or
add
or
add
or
or
stos
push
fisttp
mov
mov
add
push
jmp
add
add
in
jae
cdq
add
add
add
pop
inc
fld
adc
out
or
pop
pop
adc
inc
add
pop
repz
ss
clc
or
inc
pop
dec
cdq
add
add
add
add
add
pop
adc
jns
ficom
and
mov
call
add
daa
or
add
add
or
add
dec
or
add
add
pop
sbb
and
cli
adc
sbb
sbb
xor
add
adc
dec
add
add
add
xchg
adc
jns
mov
add
loop
stos
or
xchg
adc
pop
add
sbb
sbb
xchg
add
add
add
add
or
or
push
sbb
or
ja
enter
xchg
adc
mov
add
or
add
add
jno
repnz
mov
mov
sbb
add
or
cmc
sbb
or
add
sbb
or
add
sbb
or
add
sbb
or
add
sbb
or
add
add
sbb
or
add
add
add
or
add
add
sbb
or
add
sbb
imul
add
sbb
imul
add
sbb
mov
or
add
sbb
imul
add
sbb
jns
push
test
add
das
sbb
add
xchg
adc
add
mov
xchg
adc
rol
sbb
sbb
sbb
sbb
sbb
sbb
or
add
add
add
add
sbb
sub
fcomp
int
imul
add
rcr
add
or
add
sbb
or
add
sbb
add
add
add
add
ja
add
push
or
mov
sbb
or
and
add
add
mov
push
add
sub
add
add
add
xchg
adc
jns
lahf
sbb
or
cmp
adc
sbb
rol
sbb
or
add
sbb
imul
add
adc
repz
ss
pop
or
dec
and
sub
xor
cmp
dec
add
pop
add
popa
add
imul
test
mov
test
mov
push
push
ror
or
adc
sub
xchg
adc
stc
add
add
add
pop
adc
inc
add
pop
int
jns
cs
(bad)
or
and
mov
jns
pop
pop
fisttp
repz
jae
sub
stc
add
and
pop
add
add
jg
sub
jns
fwait
pop
sub
imul
add
jae
and
add
leave
pop
jmp
add
or
test
repz
dec
push
push
sub
push
sbb
or
sub
add
and
or
or
push
adc
sub
dec
and
add
add
sub
sub
jnp
sbb
sub
lahf
and
push
sub
push
or
add
add
repnz
add
add
and
or
add
sub
rol
and
and
or
add
and
jns
jmp
add
and
add
add
pop
adc
adc
or
add
test
add
or
add
mov
xchg
repz
cmp
aad
pop
add
mov
sub
fcomp
mov
and
push
cmp
xchg
xor
add
add
add
sti
push
add
imul
add
add
add
mov
add
and
punpckhwd
and
psraw
add
dec
add
add
fld
jmp
psubsw
jns
popa
and
test
vmwrite
mov
dec
mov
mov
add
sbb
adc
add
and
test
inc
adc
add
add
push
xchg
adc
or
xchg
repz
add
and
and
sqrtps
xchg
test
and
nop
xchg
adc
and
xchg
repz
push
xchg
adc
xor
xchg
and
cmp
xchg
and
inc
push
xchg
and
dec
push
xchg
and
push
push
xchg
and
pop
push
xchg
and
popa
push
xchg
and
imul
add
add
add
add
add
add
add
add
add
add
inc
push
add
add
push
add
mov
push
add
add
add
add
add
add
add
add
sub
push
add
add
push
add
mov
push
add
add
add
add
dec
add
add
sbb
xor
ss
dec
add
imul
pop
add
push
add
add
jne
push
add
add
stc
add
add
add
add
stc
add
add
add
xchg
add
xchg
add
mov
add
add
mov
add
add
add
add
add
xchg
push
or
sbb
cwde
push
or
sbb
popf
push
or
and
mov
add
add
add
or
adc
add
or
or
add
or
or
add
or
adc
add
or
adc
add
or
adc
add
or
adc
add
out
or
add
or
adc
add
or
add
sub
add
add
add
push
inc
add
add
pop
inc
add
add
push
dec
add
add
add
pop
arpl
adc
inc
imul
add
add
add
add
pop
add
add
add
add
add
push
mov
or
pop
rol
add
add
push
ret
add
jl
loopne
sub
cwde
push
loope
dec
add
add
or
add
add
push
add
sub
cwde
push
add
arpl
cwde
push
add
dec
add
add
sub
cwde
push
add
add
add
push
mov
push
rol
add
push
loopne
adc
inc
add
adc
inc
and
adc
inc
inc
add
add
add
push
dec
add
add
adc
sub
cwde
push
pusha
add
add
push
arpl
add
push
imul
add
add
add
push
mov
push
mov
push
rol
add
add
add
add
pavgw
repz
add
add
add
push
add
sub
cwde
push
and
sub
cwde
push
inc
add
add
add
push
add
cwde
push
add
mov
push
rol
or
loope
mov
or
or
or
or
or
or
push
arpl
cwde
push
or
or
add
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
add
jge
mov
enter
fwait
psrlw
enter
enter
jge
invlpg
sbb
jge
push
add
add
add
add
add
adc
add
add
lea
dec
pop
dec
pop
push
pop
pop
pop
pop
pop
mov
or
or
or
or
or
or
or
or
or
or
or
or
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
mov
fimul
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
ret
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
aad
jmp
or
or
or
or
or
add
or
jg
xchg
or
fwait
or
movs
or
mov
lock
or
xor
dec
push
dec
push
push
push
push
push
mov
push
ror
loopne
repnz
and
push
seto
mov
mov
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
xchg
add
add
cwde
add
add
push
add
add
add
mov
add
add
test
ror
add
add
or
add
add
or
add
adc
adc
or
push
add
sahf
or
push
add
jae
repz
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
add
push
add
add
add
adc
add
add
add
add
pop
add
add
add
add
sbb
add
pop
add
add
add
sbb
add
pusha
add
add
add
add
add
pop
add
add
add
add
and
add
add
add
add
and
add
mov
add
movs
add
add
add
add
sbb
ret
and
and
xchg
and
test
test
mov
es
sub
pop
inc
pop
fimul
jmp
pop
or
enter
xchg
add
add
add
add
add
add
out
add
add
add
add
add
and
add
add
add
or
add
add
add
or
add
add
add
or
add
add
add
or
add
std
add
and
add
add
add
add
add
add
add
add
pop
or
add
add
add
add
add
add
add
and
add
or
pop
and
add
or
add
sgdtd
and
add
adc
sbb
add
add
adc
push
add
add
adc
add
add
add
or
add
add
add
or
add
add
add
or
add
sbb
add
add
add
add
add
and
outs
or
add
add
add
add
add
and
add
add
add
add
add
or
add
add
add
or
add
add
loope
or
add
add
add
adc
add
add
add
add
or
add
add
or
add
or
adc
add
add
add
add
add
fadd
add
add
add
add
add
mov
add
add
add
add
or
mov
add
add
add
add
add
add
push
add
pop
add
or
or
adc
lldt
add
add
adc
adc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
aaa
add
pop
aaa
add
or
add
out
or
add
add
add
add
cmp
outs
fs
gs
arpl
ins
imul
outs
jae
data16
push
imul
jae
arpl
dec
jns
jo
ins
imul
add
ins
imul
jae
outs
jb
dec
jns
dec
jns
outs
ins
jo
je
jb
dec
jns
jb
push
arpl
jns
outs
jb
jae
dec
jns
bound
jb
imul
jb
popa
fs
popa
gs
bound
arpl
outs
jbe
fs
xor
inc
push
add
ins
imul
jae
outs
jb
data16
je
outs
outs
add
ins
imul
jae
outs
jb
inc
outs
outs
je
outs
ins
jae
dec
gs
fs
popa
bound
add
outs
outs
add
imul
ins
add
gs
gs
jb
je
jb
inc
outs
ins
fs
jb
ja
gs
imul
inc
add
add
ins
outs
add
bound
jb
add
push
add
add
ins
add
jae
jne
arpl
add
ins
imul
jae
outs
jb
dec
jns
push
gs
jne
arpl
add
arpl
jae
data16
push
imul
jae
arpl
inc
jo
ins
imul
push
gs
imul
outs
jae
ins
gs
jo
ins
imul
inc
popa
jae
add
arpl
add
arpl
jae
data16
push
imul
jae
arpl
inc
gs
arpl
add
ins
jo
je
jb
push
jns
je
ins
add
push
arpl
arpl
outs
jb
addr16
inc
outs
ins
jo
je
jb
ins
pop
inc
outs
ins
jo
je
jb
bound
arpl
outs
jbe
fs
addr16
inc
jo
ins
imul
add
inc
jo
dec
bound
arpl
outs
jbe
fs
push
jae
jb
addr16
push
jae
jb
ins
pop
push
jae
jb
bound
arpl
outs
jbe
fs
addr16
inc
outs
jb
jae
ins
pop
dec
jns
outs
jb
jae
bound
arpl
outs
jbe
fs
addr16
push
bound
jb
imul
dec
jns
bound
jb
imul
arpl
outs
jbe
fs
inc
jo
ins
imul
add
jb
jae
push
bound
jb
imul
je
imul
pop
imul
gs
imul
popa
ins
jne
add
gs
je
pop
pop
dec
outs
jae
popa
outs
arpl
pop
add
jae
gs
cs
imul
inc
outs
jb
jae
inc
outs
jb
add
outs
jae
popa
outs
arpl
inc
imul
pop
dec
outs
jae
popa
outs
arpl
pop
add
jae
popa
outs
arpl
push
jns
je
ins
cs
outs
ins
ins
arpl
outs
jae
dec
popa
jae
je
bound
ins
pop
inc
outs
jb
inc
imul
je
add
jne
ins
jae
outs
add
je
popa
jae
inc
outs
fs
add
je
jns
add
je
imul
pop
inc
gs
outs
jae
popa
outs
arpl
ins
pop
push
push
push
je
je
arpl
ins
jne
add
je
outs
jae
popa
outs
arpl
bound
xor
add
add
add
add
xor
jo
push
je
ins
cs
gs
cs
gs
popa
jb
js
jb
jae
imul
addr16
jb
add
arpl
je
outs
outs
add
add
js
add
add
push
gs
js
gs
imul
je
jb
jae
push
dec
add
add
jae
gs
cs
push
imul
gs
fs
js
gs
imul
je
jb
jae
push
inc
add
add
inc
ins
add
add
dec
popa
imul
outs
jne
add
ins
jne
pop
pop
add
jo
jb
inc
push
add
add
data16
outs
je
jb
jae
dec
outs
dec
popa
outs
fs
gs
jb
popa
je
add
outs
je
outs
ins
add
jae
gs
cs
jb
ja
outs
add
outs
je
inc
xor
imul
popa
je
inc
xor
jae
xor
jae
xor
jae
xor
jae
xor
jae
xor
dec
ins
popa
add
add
add
jne
dec
outs
push
imul
gs
imul
je
jb
jae
dec
outs
push
popa
imul
addr16
jne
add
jbe
outs
je
dec
outs
push
popa
imul
je
ins
cs
jb
ja
outs
addr16
jb
ja
outs
xor
inc
jb
jo
imul
add
add
add
add
add
add
add
add
add
je
push
gs
add
je
push
gs
add
arpl
add
imul
outs
jae
add
imul
ins
imul
je
push
arpl
ins
add
add
add
add
add
dec
gs
popa
add
fs
jb
arpl
ins
add
dec
outs
push
jns
je
ins
inc
outs
ins
outs
jb
inc
push
add
add
add
jne
push
inc
xor
inc
pop
add
add
add
imul
ins
add
inc
gs
popa
je
inc
jb
ins
dec
inc
dec
imul
jb
ja
gs
outs
jb
outs
ins
fs
inc
cmp
push
outs
fs
gs
popa
addr16
je
imul
add
add
jb
inc
inc
add
add
add
add
add
add
add
ins
outs
addr16
gs
ins
je
push
push
popa
ins
outs
add
add
jo
jae
outs
add
ins
je
arpl
je
gs
gs
je
add
addr16
bound
arpl
popa
jb
gs
gs
outs
add
jae
outs
arpl
jae
ins
je
inc
jae
outs
arpl
ins
ins
bound
imul
imul
add
gs
je
inc
popa
ins
ins
bound
imul
gs
gs
je
inc
jae
outs
arpl
popa
je
add
fs
outs
jbe
imul
gs
gs
je
inc
jae
outs
arpl
jae
ins
je
dec
outs
jbe
imul
popa
ins
jne
push
jns
add
add
add
arpl
jo
imul
inc
inc
add
outs
add
je
jo
add
je
jo
add
je
inc
jbe
outs
je
push
popa
ins
jne
add
je
xor
addr16
bound
add
je
bound
add
jae
addr16
fs
jae
je
fs
push
gs
inc
outs
js
pop
imul
imul
imul
ins
xor
addr16
outs
jo
ins
xor
jae
je
outs
jo
ins
xor
dec
popa
bound
add
ins
outs
add
je
gs
outs
add
je
gs
outs
add
ins
xor
addr16
push
gs
push
imul
pop
imul
pop
imul
imul
ins
arpl
jae
je
ins
arpl
je
add
je
add
je
add
je
add
je
add
add
add
gs
je
dec
popa
outs
fs
add
push
push
dec
outs
inc
arpl
popa
je
add
add
gs
gs
gs
outs
ja
inc
jbe
outs
je
jb
jae
inc
dec
add
add
add
add
imul
ins
dec
imul
imul
jbe
outs
je
jb
jae
ins
ins
add
add
add
add
outs
xor
imul
xor
gs
outs
add
xor
imul
add
add
add
add
add
dec
add
push
add
aaa
add
cmp
inc
cmp
inc
cmp
inc
xor
inc
pop
add
add
add
add
add
add
add
ins
add
data16
add
add
add
add
push
dec
add
add
add
add
jne
jne
add
add
add
add
add
jae
gs
cs
ins
outs
bound
imul
add
je
outs
outs
add
outs
add
add
add
add
inc
outs
ins
outs
jb
inc
dec
add
add
add
add
xor
data16
add
add
xor
bound
bound
add
add
je
popa
arpl
outs
outs
inc
js
imul
jae
jb
jns
arpl
add
outs
inc
imul
outs
add
inc
gs
gs
imul
outs
push
jb
arpl
jae
inc
gs
js
je
outs
fs
jb
arpl
jae
dec
popa
jo
imul
ins
add
jns
je
ins
cs
dec
add
ins
gs
je
jb
bound
gs
inc
gs
imul
bound
gs
push
outs
ins
popa
jo
imul
ins
add
outs
jae
dec
popa
outs
fs
add
inc
gs
jne
jb
outs
je
jb
arpl
jae
inc
jne
ins
imul
outs
fs
add
push
popa
imul
ins
gs
bound
arpl
jne
jb
inc
jne
ins
push
jb
arpl
jae
ins
popa
addr16
popa
ins
add
je
outs
fs
gs
imul
js
inc
gs
imul
outs
outs
dec
outs
outs
push
imul
inc
imul
outs
outs
dec
outs
outs
add
jb
jne
jb
push
popa
ins
jne
add
outs
fs
gs
popa
add
jae
dec
gs
popa
add
popa
fs
jne
jae
jb
outs
ins
add
je
jne
jae
jb
push
gs
imul
jae
inc
dec
add
pop
add
add
push
add
outs
fs
imul
add
add
xor
inc
xor
add
je
inc
add
ins
gs
jae
inc
inc
add
je
imul
jb
popa
fs
jb
arpl
jae
add
aaa
add
je
jb
arpl
jae
push
dec
inc
ja
jb
add
je
jb
arpl
jae
jo
inc
ja
jb
outs
gs
add
je
gs
arpl
popa
jo
add
gs
inc
inc
add
add
add
dec
add
push
popa
fs
push
imul
js
jns
inc
outs
outs
je
popa
ins
imul
push
add
add
add
add
add
add
add
add
push
jns
je
ins
cs
gs
jne
arpl
add
jae
jne
arpl
popa
outs
popa
addr16
jb
jae
jne
arpl
popa
outs
add
ins
je
jb
dec
outs
outs
add
jae
jne
arpl
jne
je
jb
add
je
push
gs
jne
arpl
popa
outs
popa
addr16
addr16
inc
jne
je
jb
add
je
inc
jne
je
jb
add
je
jo
inc
jne
je
jb
add
jae
gs
cs
outs
ins
jo
outs
outs
je
outs
fs
add
imul
jae
bound
je
jb
bound
add
imul
jae
bound
je
je
add
jae
gs
cs
outs
fs
outs
ins
cs
outs
ins
jo
ins
gs
inc
outs
gs
je
fs
outs
fs
je
jb
bound
add
jae
gs
cs
imul
imul
jne
addr16
imul
jb
bound
add
arpl
jae
data16
push
imul
jae
arpl
inc
outs
ins
jo
ins
gs
gs
imul
popa
outs
fs
jb
dec
outs
fs
gs
je
jb
bound
add
fs
outs
fs
gs
popa
ins
gs
je
jb
bound
add
jae
gs
cs
outs
ins
jo
outs
outs
je
outs
fs
cs
gs
outs
add
ins
jo
gs
outs
jb
inc
je
jb
bound
add
addr16
outs
je
js
gs
imul
je
ins
cs
gs
arpl
outs
add
addr16
outs
jbe
arpl
imul
jo
imul
pop
dec
jae
imul
add
outs
je
ins
gs
jns
gs
popa
outs
fs
add
je
jns
gs
jb
ins
dec
popa
outs
fs
add
outs
je
imul
push
je
imul
ins
jae
inc
gs
gs
jne
arpl
je
imul
popa
ins
imul
imul
jo
imul
add
je
jbe
je
jb
inc
jb
popa
je
dec
outs
jae
popa
outs
arpl
push
jb
push
arpl
je
add
je
jb
push
arpl
jb
jb
addr16
dec
outs
outs
gs
js
gs
imul
pop
dec
gs
popa
add
gs
jb
jb
push
arpl
jb
jb
push
gs
outs
jbe
add
ins
jo
outs
outs
je
push
jns
je
ins
cs
jne
je
ins
gs
outs
ins
jo
ins
gs
gs
imul
outs
je
ins
gs
gs
jo
jb
add
je
bound
arpl
ins
jne
add
inc
jb
jne
inc
outs
ins
ins
arpl
outs
inc
je
jb
bound
add
gs
fs
je
je
arpl
je
imul
jns
je
ins
cs
jne
je
ins
gs
outs
je
jb
jo
gs
imul
ins
push
imul
je
jb
bound
add
ins
jo
ins
gs
outs
gs
je
fs
je
jb
bound
add
addr16
jo
imul
jae
gs
cs
gs
add
jb
outs
addr16
jne
ins
fs
push
popa
jbe
inc
imul
add
je
dec
bound
arpl
gs
imul
jo
je
jb
outs
outs
add
je
outs
fs
popa
jae
add
jb
push
gs
push
inc
outs
jb
js
gs
imul
jbe
jb
imul
add
outs
arpl
add
je
jb
arpl
outs
add
addr16
outs
js
gs
ins
je
dec
jae
inc
outs
js
je
ins
add
addr16
outs
js
inc
jo
outs
add
je
add
outs
jb
popa
je
jb
jbe
fs
inc
jo
outs
fs
imul
imul
je
addr16
push
gs
imul
pop
dec
popa
push
jb
dec
outs
je
xor
addr16
dec
imul
je
add
outs
je
add
jb
gs
outs
ins
jo
je
jb
addr16
dec
outs
outs
add
je
inc
jbe
imul
jns
imul
outs
jb
add
outs
je
xor
addr16
push
outs
je
ins
push
push
popa
ins
dec
gs
outs
jb
add
je
inc
jbe
imul
jb
jne
ins
dec
gs
outs
jb
add
je
push
outs
je
ins
push
imul
gs
outs
jb
add
outs
ins
add
je
je
add
je
push
imul
pop
push
je
arpl
jb
arpl
addr16
push
popa
jb
gs
imul
gs
outs
outs
add
je
dec
popa
ins
add
je
push
gs
arpl
push
jns
add
je
dec
popa
ins
gs
popa
arpl
dec
outs
fs
add
je
dec
outs
fs
add
je
inc
jne
ins
jns
jne
ins
imul
ins
add
je
inc
arpl
imul
add
je
dec
outs
addr16
add
addr16
outs
je
jne
ins
inc
js
gs
imul
outs
imul
pop
push
push
inc
cmp
inc
gs
jns
gs
inc
outs
outs
jbe
jb
add
popa
jae
ss
je
imul
gs
imul
gs
inc
jne
outs
push
jo
jb
fs
outs
popa
bound
add
je
inc
fs
js
outs
jae
outs
outs
add
je
inc
jb
popa
je
push
jb
ins
jo
add
je
inc
gs
jne
je
js
add
je
inc
imul
jae
je
dec
jbe
jb
jb
je
push
jb
ins
jo
add
je
push
imul
ins
outs
outs
inc
imul
gs
inc
imul
inc
imul
gs
ins
ins
push
gs
add
je
popa
je
inc
outs
jb
popa
je
push
gs
gs
add
imul
add
je
popa
je
dec
bound
arpl
js
je
dec
outs
je
jb
outs
arpl
add
arpl
outs
add
jb
popa
add
gs
addr16
inc
js
gs
imul
arpl
gs
inc
js
gs
imul
arpl
jae
je
jb
dec
outs
outs
add
outs
arpl
jae
jae
je
push
jae
push
push
js
arpl
add
je
push
outs
jb
imul
arpl
jns
jae
je
inc
jb
popa
je
dec
outs
push
imul
gs
push
gs
popa
outs
fs
jb
dec
jne
jo
je
jae
je
inc
jb
jne
outs
je
add
popa
jb
add
imul
je
push
je
gs
ins
push
gs
fs
addr16
push
je
outs
fs
jb
dec
jne
jo
je
push
gs
fs
outs
inc
outs
add
dec
popa
je
push
je
ins
cs
outs
ins
ins
arpl
outs
jae
inc
outs
gs
arpl
inc
imul
jb
pusha
xor
dec
inc
outs
jne
gs
bound
dec
inc
outs
jne
gs
je
jb
push
popa
ins
jne
inc
outs
ins
ins
arpl
outs
add
jne
gs
je
jb
inc
gs
jns
gs
jb
ins
push
jb
addr16
inc
add
outs
imul
jae
inc
imul
outs
jbe
imul
ins
bound
add
je
outs
jne
gs
je
jb
addr16
inc
jne
jb
outs
je
inc
outs
outs
jbe
jb
imul
bound
jb
outs
add
je
add
je
imul
jns
popa
ins
add
jb
outs
addr16
outs
ins
jo
jb
jae
outs
add
dec
jne
ins
dec
jb
ins
jo
jns
push
jb
inc
gs
popa
ins
jne
add
arpl
jns
inc
js
jae
jae
inc
imul
jns
outs
outs
add
gs
je
inc
imul
jns
inc
gs
gs
add
jbe
dec
gs
add
ins
gs
jae
inc
outs
ins
dec
bound
arpl
gs
push
popa
ins
jne
jae
push
jb
arpl
jae
imul
jns
add
je
push
imul
jns
add
je
inc
jb
outs
jb
imul
jo
inc
outs
ins
popa
imul
inc
jne
jb
outs
je
outs
ins
popa
imul
outs
fs
gs
js
gs
imul
je
popa
outs
fs
gs
popa
fs
push
outs
push
gs
js
gs
imul
bound
imul
jns
gs
push
gs
outs
ins
jo
je
bound
gs
push
outs
fs
outs
addr16
gs
jne
je
push
outs
push
gs
js
gs
imul
add
je
outs
push
gs
js
gs
imul
add
arpl
jae
data16
push
imul
imul
jns
inc
imul
ins
add
je
outs
ins
ins
popa
outs
fs
imul
add
je
inc
push
push
outs
dec
outs
je
xor
push
popa
je
push
outs
outs
dec
outs
outs
addr16
js
gs
imul
inc
jne
ins
push
popa
je
add
ins
gs
outs
je
outs
jne
fs
js
gs
imul
outs
add
outs
je
je
add
pop
inc
js
ins
imul
popa
fs
outs
je
xor
inc
ins
ins
outs
arpl
ins
outs
bound
add
jb
outs
push
je
imul
inc
jb
gs
inc
ins
outs
bound
add
arpl
jae
data16
push
imul
jae
arpl
dec
jns
gs
imul
imul
outs
js
add
je
push
imul
gs
inc
jne
jb
outs
je
jae
jb
dec
jo
outs
push
jne
dec
gs
push
imul
ins
jne
dec
jo
imul
je
popa
ins
jne
add
outs
jae
add
arpl
ins
inc
outs
ins
fs
inc
gs
outs
ins
fs
popa
je
add
fs
imul
xor
push
imul
outs
popa
jne
push
gs
arpl
jae
inc
js
gs
imul
gs
outs
fs
ins
gs
arpl
jae
add
ins
gs
push
inc
imul
outs
jae
push
gs
je
jb
bound
gs
push
jb
je
add
jb
popa
ins
add
jbe
add
je
push
gs
add
jae
gs
cs
arpl
imul
imul
add
arpl
imul
jae
imul
imul
arpl
imul
outs
add
inc
push
push
inc
je
jb
bound
add
inc
je
jb
bound
add
popa
addr16
je
jb
bound
add
je
dec
popa
outs
fs
add
je
outs
outs
inc
popa
jae
add
popa
je
je
ins
add
je
inc
ins
popa
je
je
ins
add
pop
dec
outs
gs
popa
ins
imul
push
addr16
inc
ins
imul
outs
ins
add
je
inc
jb
jo
imul
jo
jae
je
outs
addr16
outs
fs
je
inc
outs
ins
jo
jae
je
outs
addr16
outs
fs
popa
jo
imul
add
ja
ins
popa
add
popa
jb
inc
imul
fs
gs
gs
push
gs
jb
add
outs
jae
inc
imul
outs
ins
imul
addr16
push
imul
pop
dec
imul
je
popa
jo
push
jns
je
ins
cs
jb
ja
outs
addr16
ins
popa
imul
gs
inc
outs
jb
popa
je
inc
jb
ins
dec
ins
popa
add
ins
jo
jae
je
outs
addr16
jne
ins
imul
inc
outs
ins
jo
jae
je
outs
addr16
jne
ins
imul
je
imul
add
je
push
ins
outs
outs
je
imul
add
js
ins
dec
data16
je
outs
fs
je
push
imul
jae
je
outs
fs
je
jb
outs
ins
popa
je
outs
outs
dec
outs
fs
je
dec
outs
je
jb
outs
ins
popa
je
outs
outs
dec
outs
fs
je
inc
popa
arpl
outs
ins
outs
jb
inc
ins
gs
jb
addr16
inc
outs
jb
inc
outs
ins
outs
jb
push
arpl
ins
gs
add
pop
dec
ins
jo
imul
popa
ja
je
imul
outs
jae
popa
je
push
jb
outs
jae
outs
jb
add
jne
push
gs
inc
ins
popa
arpl
inc
imul
inc
fs
jb
add
fs
imul
pop
push
push
push
arpl
gs
jb
outs
jae
outs
jb
add
data16
jae
add
outs
je
je
ins
add
je
add
jne
add
outs
je
outs
ins
push
je
ins
gs
push
gs
je
ins
add
jb
outs
addr16
ins
imul
add
je
dec
imul
outs
ins
outs
je
jae
je
inc
ins
imul
add
jb
outs
addr16
outs
jb
popa
je
ins
popa
addr16
jae
je
inc
outs
jb
popa
je
ins
popa
addr16
push
je
imul
ins
imul
pop
push
jb
ins
ins
imul
inc
ins
ins
imul
outs
ins
inc
jb
bound
inc
imul
jae
add
je
jb
arpl
imul
jb
arpl
gs
dec
gs
addr16
push
outs
jo
addr16
dec
jae
add
jb
outs
jb
addr16
dec
jbe
jb
imul
jb
inc
jne
jae
jb
add
je
dec
popa
outs
add
jae
gs
inc
outs
ins
outs
jb
add
je
dec
outs
je
jb
arpl
jae
je
dec
imul
jb
jae
je
inc
arpl
gs
imul
jb
jae
je
push
imul
imul
jb
jae
je
inc
outs
outs
je
dec
imul
jbe
outs
jb
jae
je
dec
imul
jbe
outs
jb
push
jns
je
ins
inc
jb
jae
gs
addr16
push
arpl
ins
ins
inc
popa
jb
inc
ins
outs
outs
add
je
inc
outs
outs
je
outs
ins
inc
popa
jb
add
je
inc
outs
outs
je
outs
ins
dec
imul
push
ins
ins
push
arpl
ins
add
je
inc
imul
add
gs
outs
push
popa
jae
dec
gs
add
add
jo
jb
jae
inc
imul
add
dec
ins
jo
jb
inc
je
jb
bound
add
gs
xor
fs
ins
add
outs
fs
gs
popa
addr16
add
jae
gs
cs
arpl
imul
jb
jae
push
outs
ins
popa
outs
popa
addr16
outs
fs
arpl
imul
bound
add
gs
ins
xor
cs
ins
add
inc
gs
popa
je
inc
jb
ins
dec
inc
dec
imul
jb
push
inc
je
jb
bound
add
ins
popa
outs
popa
addr16
jns
add
inc
jb
ja
gs
outs
jb
outs
ins
fs
add
jb
arpl
jns
jne
inc
je
jb
bound
add
outs
jne
dec
imul
ins
bound
pop
pop
xor
popa
xor
popa
xor
pop
dec
popa
ins
bound
pop
pop
xor
inc
bound
addr16
je
jo
push
push
imul
jbe
outs
je
popa
outs
fs
gs
push
jb
jbe
gs
gs
outs
ja
inc
jbe
outs
je
popa
outs
fs
gs
jb
ins
outs
jbe
pop
inc
ins
imul
outs
jbe
pop
push
jb
jbe
gs
gs
outs
ja
add
fs
inc
ins
imul
pop
push
jb
jbe
gs
gs
outs
ja
add
imul
ins
dec
imul
imul
jbe
outs
je
popa
outs
fs
gs
jb
ins
outs
jbe
pop
dec
imul
imul
popa
fs
dec
imul
imul
dec
imul
arpl
outs
add
jae
outs
fs
popa
jns
jne
add
imul
pop
dec
outs
arpl
imul
pop
dec
popa
ins
add
je
outs
js
popa
jae
add
je
push
gs
fs
outs
ins
jns
jae
je
push
imul
pop
push
popa
bound
fs
jae
je
push
popa
bound
outs
jo
jae
je
push
jae
push
imul
jns
gs
popa
arpl
outs
ins
outs
jb
jae
je
inc
outs
popa
bound
add
je
inc
imul
jae
ins
je
inc
outs
outs
je
outs
je
ins
imul
add
je
push
gs
inc
ins
imul
pop
dec
imul
outs
imul
gs
ins
gs
popa
jns
jne
add
je
dec
popa
jb
imul
push
je
ins
add
je
inc
outs
arpl
jae
je
inc
outs
jb
inc
outs
ins
outs
jb
jae
je
inc
ins
imul
add
outs
je
outs
ins
inc
outs
ins
ins
arpl
outs
add
je
inc
outs
outs
je
outs
ins
jae
jae
je
dec
popa
js
ins
imul
jae
je
dec
imul
inc
outs
js
push
imul
push
je
ins
add
je
push
imul
push
je
ins
add
jb
push
je
jb
push
outs
jae
je
outs
outs
add
je
push
je
jb
push
outs
jae
je
outs
outs
add
je
dec
popa
js
ins
jne
push
imul
pop
dec
imul
imul
fs
outs
je
add
je
inc
popa
arpl
outs
ins
outs
jb
inc
outs
arpl
add
jns
add
je
dec
gs
outs
fs
jne
gs
jne
je
outs
jae
addr16
inc
jne
je
outs
add
arpl
jae
fs
push
push
gs
jns
je
jb
bound
add
je
dec
outs
jbe
jb
popa
outs
je
jne
je
jb
add
je
push
gs
dec
outs
outs
add
je
outs
fs
data16
je
push
outs
imul
arpl
je
jb
popa
ins
add
je
imul
je
push
je
ins
add
je
ins
dec
imul
je
imul
imul
je
ins
cs
arpl
imul
arpl
popa
ins
add
outs
outs
ja
dec
fs
je
je
add
je
inc
jo
pop
add
je
inc
jo
pop
add
jae
gs
inc
outs
outs
je
add
je
dec
gs
popa
addr16
outs
js
outs
outs
je
addr16
inc
outs
outs
je
popa
ins
imul
inc
gs
jne
je
outs
outs
je
inc
gs
jne
jb
outs
je
push
imul
jb
outs
arpl
popa
ins
add
outs
outs
ja
inc
jne
ins
je
outs
push
outs
ins
add
dec
outs
push
outs
ins
add
je
outs
jbe
jb
outs
ins
outs
je
popa
jb
popa
bound
addr16
inc
js
arpl
popa
bound
popa
je
add
je
inc
jne
jb
outs
je
imul
jns
inc
js
jb
arpl
jae
arpl
je
fs
arpl
add
jb
gs
xor
cs
ins
add
jb
imul
add
je
imul
outs
outs
dec
outs
outs
push
imul
je
je
jb
bound
add
je
imul
bound
gs
add
je
imul
outs
outs
dec
outs
outs
push
add
jb
jne
jb
push
popa
ins
jne
push
add
jb
gs
xor
cs
ins
add
gs
inc
jne
ins
push
jb
arpl
jae
ins
popa
addr16
popa
ins
gs
add
popa
jo
cs
ins
add
je
outs
fs
gs
imul
js
add
je
outs
outs
popa
ins
inc
je
jb
bound
add
outs
fs
imul
push
add
arpl
gs
ins
add
imul
ins
add
jae
dec
gs
popa
addr16
add
je
popa
arpl
outs
outs
inc
js
add
outs
inc
imul
outs
addr16
add
gs
fs
data16
je
je
jb
bound
add
data16
outs
arpl
jno
popa
ins
jae
inc
jae
gs
bound
addr16
inc
jae
gs
bound
inc
gs
bound
arpl
bound
addr16
outs
outs
push
jae
jb
outs
fs
je
jb
bound
add
ins
imul
jae
outs
jb
push
gs
jne
arpl
cs
jae
jne
arpl
add
ins
jo
ins
popa
je
outs
outs
push
gs
popa
js
je
outs
outs
jae
je
jb
bound
add
outs
je
ins
gs
outs
ins
jo
je
bound
imul
bound
add
jae
ins
bound
imul
outs
outs
inc
je
jb
bound
add
imul
jne
add
jae
ins
bound
jb
fs
popa
jb
inc
je
jb
bound
add
jae
ins
bound
outs
jo
jb
addr16
jb
bound
add
jae
ins
bound
jb
fs
je
je
jb
bound
add
jae
ins
bound
outs
ins
jo
outs
jns
je
jb
bound
add
jae
ins
bound
gs
jb
jo
imul
imul
jae
gs
bound
imul
imul
imul
imul
gs
outs
imul
imul
gs
gs
add
add
add
outs
add
add
je
jns
and
arpl
popa
add
and
outs
add
ins
add
and
bound
add
add
add
add
add
add
outs
add
add
outs
add
add
push
add
outs
add
outs
add
ins
add
pop
add
add
jne
jb
jae
imul
inc
add
jb
ins
add
jb
add
je
add
xor
outs
add
outs
add
ins
add
pop
add
add
dec
add
outs
add
jb
inc
add
arpl
add
je
imul
add
xor
pop
add
xor
xor
pop
add
add
add
pop
add
add
add
sub
and
add
add
imul
ins
add
arpl
add
and
add
je
jb
popa
add
je
outs
add
and
add
jo
add
imul
arpl
add
add
jb
imul
arpl
popa
add
add
jb
jb
outs
add
and
popa
add
add
add
imul
and
outs
add
ja
and
je
add
ins
add
outs
add
je
add
add
add
add
popa
add
add
add
jb
jb
outs
add
and
jb
add
outs
add
je
aas
add
push
dec
add
ins
add
and
push
add
add
add
and
inc
add
je
jb
popa
add
je
outs
add
and
inc
add
imul
arpl
popa
add
add
jb
jb
outs
add
and
sub
xor
js
add
sub
add
add
xor
xor
xor
aaa
add
add
add
add
add
add
add
add
ins
add
and
add
add
add
and
add
add
add
js
xor
xor
add
add
add
add
add
add
add
add
add
add
add
add
add
je
js
je
add
add
ins
add
and
push
add
add
add
and
add
je
jb
popa
add
je
outs
add
and
add
jb
outs
add
and
jb
add
outs
add
je
add
add
dec
push
add
jbe
add
add
imul
and
push
add
add
add
and
inc
add
je
jb
popa
add
je
outs
add
and
inc
add
jb
outs
add
and
push
add
jo
outs
add
je
add
add
jbe
imul
and
dec
add
ins
add
and
push
add
add
add
and
add
je
jb
popa
add
je
outs
add
and
add
jb
outs
add
and
jb
add
outs
add
je
and
push
add
add
add
outs
add
add
popa
add
arpl
add
add
add
gs
add
jbe
imul
and
dec
add
ins
add
and
push
add
add
add
and
inc
add
je
jb
popa
add
je
outs
add
and
inc
add
jb
outs
add
and
push
add
jo
outs
add
je
and
inc
add
outs
add
add
add
add
add
jbe
imul
and
dec
add
ins
add
and
push
add
add
add
and
add
je
jb
popa
add
je
outs
add
and
add
jb
outs
add
and
jb
add
outs
add
je
and
push
add
add
popa
add
ins
add
add
add
add
add
add
and
arpl
outs
add
jns
imul
and
add
jb
outs
add
and
jb
add
outs
add
je
and
je
outs
add
add
add
and
arpl
ins
add
jo
bound
outs
add
jb
add
add
arpl
popa
add
imul
and
dec
add
ins
add
and
push
add
add
add
and
inc
add
je
jb
popa
add
je
outs
add
and
inc
add
jb
outs
add
and
push
add
jo
outs
add
je
and
inc
add
imul
jb
add
or
add
imul
and
dec
add
ins
add
and
push
add
add
add
and
add
je
jb
popa
add
je
outs
add
and
add
jb
outs
add
and
jb
add
outs
add
je
and
je
outs
add
add
add
and
arpl
ins
add
jo
bound
outs
add
jb
add
add
popa
add
and
data16
imul
add
add
add
add
imul
and
dec
add
ins
add
and
push
add
add
add
and
inc
add
je
jb
popa
add
je
outs
add
and
inc
add
jb
outs
add
and
push
add
jo
outs
add
je
and
je
outs
add
add
add
and
arpl
ins
add
jo
bound
outs
add
jb
add
add
popa
add
ins
add
jb
add
jae
add
outs
add
jb
popa
add
add
add
add
imul
and
push
add
add
add
and
add
je
jb
popa
add
je
outs
add
and
add
jb
outs
add
and
jb
add
outs
add
je
and
push
add
add
popa
add
ins
add
add
add
imul
add
add
popa
add
add
add
add
imul
and
push
add
add
add
and
inc
add
je
jb
popa
add
je
outs
add
and
inc
add
jb
outs
add
and
push
add
jo
outs
add
je
and
inc
add
imul
jb
add
or
popa
add
ins
add
add
and
add
das
add
add
add
je
add
jb
imul
ins
add
jbe
add
add
add
push
add
add
add
add
jo
jo
ins
add
arpl
popa
add
add
outs
add
adc
popa
add
add
jo
popa
add
add
add
or
je
add
jae
add
push
add
je
push
add
jo
jns
dec
add
jb
add
adc
add
add
add
add
add
add
or
jo
popa
add
add
xor
add
ins
add
and
push
add
add
add
and
add
je
jb
popa
add
je
outs
add
and
ja
popa
add
and
add
jo
add
je
imul
and
je
outs
add
add
jne
outs
add
add
jae
and
add
add
popa
add
add
add
add
add
add
imul
add
add
add
jne
imul
outs
add
and
popa
add
add
outs
add
jae
je
jb
popa
add
add
and
jo
jb
imul
ins
add
add
add
and
ins
add
add
je
and
outs
add
je
and
bound
add
add
js
add
jne
je
add
add
dec
dec
add
ins
add
and
push
add
add
add
and
inc
add
je
jb
popa
add
je
outs
add
and
inc
add
add
popa
add
add
outs
add
add
popa
add
ins
add
jb
add
add
pop
dec
add
ins
add
and
push
add
add
add
add
add
js
add
gs
add
jno
jne
add
je
add
add
imul
and
push
add
add
add
and
add
je
jb
popa
add
je
imul
and
jo
popa
add
add
add
jae
and
je
outs
add
and
ins
add
outs
add
add
adc
add
and
push
add
add
add
and
inc
add
je
jb
popa
add
je
imul
and
push
add
je
push
add
outs
add
add
add
add
add
add
add
add
add
je
jb
popa
add
je
outs
add
and
ja
imul
and
outs
add
ja
and
je
add
ins
add
outs
add
je
add
add
dec
dec
add
ins
add
and
push
add
add
add
and
inc
add
je
jb
popa
add
je
imul
and
push
add
je
push
add
outs
add
add
add
add
arpl
add
jne
add
je
add
add
imul
and
push
add
add
add
and
add
je
jb
popa
add
je
imul
and
jo
popa
add
add
add
jae
and
imul
popa
add
add
add
adc
add
and
push
add
add
add
and
dec
add
jbe
popa
add
add
add
js
je
jb
popa
add
je
imul
and
push
add
je
push
add
add
add
add
je
jb
popa
add
je
outs
add
and
ja
imul
and
outs
add
ja
and
je
add
ins
add
outs
add
je
add
add
inc
dec
add
ins
add
and
push
add
add
add
and
dec
add
jbe
popa
add
add
add
js
je
jb
popa
add
je
imul
and
push
add
je
push
add
ins
add
ins
add
adc
add
and
push
add
add
add
and
add
je
jb
popa
add
je
imul
and
jo
popa
add
add
add
jae
and
add
data16
add
add
je
and
data16
outs
add
and
add
je
add
je
add
add
jne
outs
add
imul
and
imul
je
popa
add
arpl
add
add
dec
dec
add
ins
add
and
push
add
add
add
and
dec
add
jae
je
popa
add
arpl
add
add
popa
add
add
add
add
data16
jb
add
arpl
add
sbb
ins
add
arpl
add
pop
add
jo
add
add
pop
push
add
inc
add
add
push
add
pop
add
imul
outs
add
outs
add
je
pop
add
imul
outs
add
jae
pop
add
jne
jb
jb
add
je
push
add
jb
jae
imul
pop
add
jne
outs
add
adc
ins
add
push
add
add
add
add
js
cmp
add
add
jge
add
outs
add
outs
add
add
js
je
jb
popa
add
je
and
popa
add
and
je
push
add
and
imul
dec
add
ins
add
and
push
add
add
add
and
imul
je
popa
add
arpl
add
add
je
imul
and
jb
jne
outs
add
imul
add
inc
dec
add
ins
add
and
push
add
add
add
and
dec
add
jae
je
popa
add
arpl
add
add
je
imul
and
push
add
outs
add
imul
add
add
outs
add
ja
outs
add
add
jb
jb
outs
add
and
jo
jb
add
add
je
add
add
imul
and
push
add
add
add
and
add
je
jb
popa
add
je
outs
add
and
data16
outs
add
and
arpl
jb
add
je
imul
and
add
jb
add
je
outs
add
jns
and
imul
add
jbe
add
and
ins
add
arpl
popa
add
add
outs
add
add
inc
push
add
imul
add
ja
outs
add
add
imul
jae
jns
jae
je
add
and
inc
add
arpl
add
jae
and
inc
add
imul
jb
add
pop
dec
add
ins
add
and
push
add
add
add
add
popa
add
add
add
outs
add
ja
outs
add
add
jb
jb
outs
add
and
jo
jb
add
add
je
add
add
imul
and
push
add
add
add
and
add
je
jb
popa
add
je
outs
add
and
data16
outs
add
and
ins
add
outs
add
add
outs
add
and
data16
ins
add
jae
and
imul
add
jbe
add
and
ins
add
arpl
popa
add
add
outs
add
add
pop
dec
add
ins
add
and
push
add
add
add
add
js
add
addr16
add
ins
add
and
push
add
add
add
and
add
add
jne
je
popa
add
ins
add
and
arpl
outs
add
ins
add
add
outs
add
add
popa
add
add
add
add
outs
add
add
je
popa
add
je
add
add
dec
dec
add
ins
add
and
push
add
add
add
and
inc
add
add
jne
je
popa
add
ins
add
and
dec
add
jne
outs
add
push
add
imul
jb
add
xor
add
outs
add
outs
add
add
jb
jb
outs
add
and
jo
jb
add
add
je
add
add
imul
and
push
add
add
add
and
add
je
jb
popa
add
je
outs
add
and
data16
outs
add
and
add
je
jb
popa
add
je
imul
and
data16
ins
add
jae
and
imul
jae
add
add
je
add
add
add
popa
add
add
outs
add
add
xor
imul
add
ja
outs
add
add
js
je
jb
popa
add
je
imul
and
inc
add
imul
jb
add
add
add
jb
outs
add
and
outs
add
arpl
jne
jb
add
add
add
imul
and
dec
add
ins
add
and
push
add
add
add
and
add
je
jb
popa
add
je
imul
add
add
add
add
and
je
outs
add
add
jo
add
and
add
je
jb
popa
add
je
add
add
add
imul
and
push
add
add
add
add
popa
add
and
and
popa
add
arpl
push
add
aas
add
cmp
ins
add
and
push
add
add
add
and
inc
add
je
jb
popa
add
je
imul
and
inc
add
imul
jb
add
or
jne
outs
add
jae
add
and
and
xor
add
and
and
xor
add
add
ins
add
and
push
add
add
add
and
add
je
jb
popa
add
je
outs
add
and
jb
add
jne
imul
add
add
ins
add
jbe
popa
add
add
outs
add
add
popa
add
and
bound
add
outs
add
add
add
jne
jae
add
add
dec
dec
add
ins
add
and
push
add
add
add
and
inc
add
je
jb
popa
add
je
outs
add
and
inc
add
add
popa
add
add
outs
add
add
add
jne
jae
add
add
add
ins
add
and
push
add
add
add
and
add
je
jb
popa
add
je
outs
add
and
add
add
and
outs
add
je
and
push
add
and
add
outs
add
add
and
jo
jb
imul
ins
add
add
jae
and
je
outs
add
add
js
je
jb
popa
add
je
add
add
add
js
je
jb
popa
add
je
outs
add
and
ja
imul
and
outs
add
ja
and
je
add
ins
add
outs
add
je
add
add
inc
dec
add
ins
add
and
push
add
add
add
and
push
add
jno
jne
imul
add
add
arpl
arpl
add
jae
and
inc
add
outs
add
add
adc
add
and
push
add
add
add
and
add
je
jb
popa
add
je
imul
and
push
add
add
add
outs
add
add
popa
add
arpl
add
add
add
add
add
js
je
jb
popa
add
je
outs
add
and
ja
imul
and
outs
add
ja
and
je
add
ins
add
outs
add
je
add
add
aas
dec
add
ins
add
and
push
add
add
add
and
inc
add
je
jb
popa
add
je
imul
and
inc
add
outs
add
add
add
pop
add
jb
add
add
add
add
add
or
je
outs
add
add
cmovae
add
outs
add
add
add
add
outs
add
popa
add
imul
add
outs
add
add
add
outs
add
push
add
add
sub
jo
ins
add
arpl
popa
add
add
outs
add
add
add
add
je
outs
add
jns
cmp
add
ins
add
imul
add
and
jne
jae
imul
and
je
push
add
add
jo
jo
ins
add
arpl
popa
add
add
outs
add
add
outs
add
and
popa
add
imul
add
ja
ins
add
add
add
add
outs
add
add
add
add
and
ja
imul
and
je
add
ins
add
and
outs
add
and
imul
and
ins
add
arpl
add
jae
add
add
add
add
ins
add
outs
add
add
add
add
add
add
add
add
jae
add
add
add
add
ins
add
outs
add
add
outs
add
add
add
add
pop
imul
add
push
add
or
jo
outs
add
add
adc
ins
add
inc
add
jo
popa
add
add
push
inc
add
and
jns
outs
add
and
ja
popa
add
je
and
je
outs
add
add
add
imul
jne
outs
add
popa
add
imul
add
imul
and
push
add
add
add
aas
add
xor
outs
add
popa
add
imul
add
add
imul
dec
add
ins
add
and
push
add
add
add
add
add
and
jns
outs
add
and
ja
popa
add
je
and
je
outs
add
add
add
add
je
and
dec
add
ins
add
and
push
add
add
add
aas
add
and
jbe
add
je
and
dec
add
ins
add
and
push
add
add
add
add
add
and
jns
outs
add
and
ja
popa
add
je
and
je
outs
add
add
jo
add
je
add
add
imul
and
push
add
add
add
aas
add
and
add
je
add
add
imul
and
push
add
add
add
add
add
and
jns
outs
add
and
ja
popa
add
je
and
je
outs
add
add
outs
add
popa
add
imul
add
imul
and
push
add
add
add
aas
add
and
jo
popa
add
imul
add
imul
and
push
add
add
add
add
add
add
cmp
das
add
add
jns
outs
add
ins
add
add
add
add
add
add
jae
add
das
add
add
add
popa
add
add
je
ins
add
jno
add
add
add
data16
add
popa
add
imul
add
add
add
imul
outs
add
ins
add
jae
and
arpl
outs
add
add
add
jae
and
ja
imul
and
popa
add
arpl
push
add
and
data16
ins
add
outs
add
ins
add
add
sbb
ins
add
and
inc
add
ins
add
add
imul
add
add
add
je
and
add
jb
add
je
outs
add
jns
and
ja
push
add
and
popa
add
jo
ins
add
arpl
popa
add
add
outs
add
add
js
add
jne
je
popa
add
ins
add
and
popa
add
add
add
add
add
add
imul
and
bound
add
add
je
outs
add
add
add
sub
dec
add
inc
add
push
add
push
add
inc
add
inc
add
dec
add
add
add
xor
xor
add
dec
add
inc
add
push
add
push
add
inc
add
inc
add
dec
add
add
push
add
push
add
add
dec
add
ins
add
inc
add
ins
add
jb
add
jae
outs
add
add
add
outs
add
jb
arpl
add
add
jo
add
add
jo
cmp
jl
repnz
mov
cmp
inc
sbb
add
mov
pop
push
sbb
mov
mov
pop
jg
aad
cmp
and
add
add
add
add
or
push
adc
or
add
adc
pop
push
adc
or
add
adc
push
adc
adc
add
adc
push
adc
adc
add
adc
pop
push
adc
sbb
add
or
or
adc
add
add
adc
add
adc
or
adc
add
add
dec
add
adc
and
add
dec
add
add
adc
add
add
add
xor
add
adc
add
push
adc
add
add
sbb
and
or
add
sbb
add
add
dec
add
add
add
add
push
adc
add
add
add
push
add
add
add
adc
push
or
push
push
add
adc
add
and
sbb
sub
add
add
sub
push
add
add
push
push
add
add
add
push
sbb
cmp
push
adc
push
adc
push
adc
and
add
dec
or
push
adc
or
or
or
and
add
add
add
add
sub
push
add
adc
and
add
adc
push
adc
add
add
sbb
add
sbb
adc
add
sbb
sbb
add
adc
and
sbb
sbb
add
sbb
sbb
and
adc
or
sbb
jne
add
jno
push
or
push
adc
add
add
sub
sub
push
adc
xor
adc
add
add
jge
and
add
jge
push
adc
add
add
cmp
cmp
adc
adc
add
add
and
adc
sub
push
adc
add
add
xor
xor
push
adc
and
adc
xor
dec
add
add
add
data16
add
popa
add
imul
add
add
add
imul
outs
add
ins
add
jae
and
arpl
outs
add
add
add
jae
and
ja
imul
and
popa
add
arpl
push
add
and
data16
ins
add
outs
add
ins
add
add
add
ins
add
and
inc
add
ins
add
add
imul
and
add
jo
popa
add
imul
add
imul
and
push
add
add
add
and
add
add
je
add
add
imul
and
push
add
add
add
and
add
jbe
add
je
and
dec
add
ins
add
and
push
add
add
add
xor
outs
add
popa
add
imul
add
add
imul
dec
add
ins
add
and
push
add
add
add
inc
inc
add
and
jns
outs
add
and
ja
popa
add
je
and
je
outs
add
add
outs
add
popa
add
imul
add
imul
and
push
add
add
add
aas
add
outs
add
add
outs
add
and
ja
popa
add
je
and
je
outs
add
add
jo
add
je
add
add
imul
and
push
add
add
add
aas
add
outs
add
add
outs
add
and
ja
popa
add
je
and
je
outs
add
add
add
add
je
and
dec
add
ins
add
and
push
add
add
add
aas
add
add
and
jns
outs
add
and
ja
popa
add
je
and
je
outs
add
add
add
imul
jne
outs
add
popa
add
imul
add
imul
and
push
add
add
add
aas
add
add
add
je
and
add
jb
add
je
outs
add
jns
and
ja
push
add
and
popa
add
jo
ins
add
arpl
popa
add
add
outs
add
add
js
add
jne
je
popa
add
ins
add
and
popa
add
add
add
add
add
add
imul
and
bound
add
add
je
outs
add
add
add
and
add
add
adc
add
cmp
add
sub
add
xor
jge
sub
adc
add
add
sub
adc
add
add
xor
dec
add
ins
add
and
push
add
add
add
add
add
adc
add
ins
add
push
add
add
add
sbb
ins
add
arpl
add
pop
add
jo
add
add
push
push
add
add
or
add
add
add
add
leave
xor
adc
add
add
add
add
add
add
add
add
push
add
dec
add
adc
add
add
or
push
adc
push
adc
adc
or
add
add
push
add
add
add
sbb
sbb
add
add
sbb
add
sbb
add
add
add
push
push
add
sbb
add
push
add
add
adc
or
add
or
push
add
adc
add
sbb
add
sbb
add
add
sbb
adc
or
or
or
add
sbb
sbb
or
add
sbb
sbb
push
add
or
adc
pop
add
push
or
sbb
add
sbb
adc
adc
pop
add
sbb
sbb
add
or
add
add
sbb
or
or
pop
add
sbb
sbb
push
add
or
adc
add
add
or
add
push
add
add
push
or
add
sbb
add
adc
add
or
inc
adc
add
add
add
add
add
add
add
add
add
add
push
pop
or
add
jno
sbb
jne
add
jno
and
add
sbb
adc
sub
test
sub
sub
add
test
sub
push
and
add
xor
add
add
add
push
pop
add
or
push
gs
jo
popa
je
pop
cmp
xor
xor
xor
add
adc
or
adc
or
adc
adc
adc
adc
adc
sbb
add
or
pop
add
or
add
adc
add
adc
pop
add
sbb
add
push
dec
jns
push
bound
jb
imul
add
push
dec
jns
inc
jo
ins
imul
add
or
add
dec
jns
push
jae
jb
add
jns
inc
outs
jb
jae
add
add
or
cs
outs
ins
jo
je
jb
add
add
dec
add
add
dec
add
add
pop
add
adc
add
push
push
sbb
add
add
add
add
add
add
and
push
adc
sbb
pop
add
add
adc
pop
add
add
add
add
add
add
add
add
add
sbb
pop
and
push
push
push
push
pop
add
sbb
jae
gs
cs
imul
inc
outs
jb
jae
inc
outs
jb
adc
gs
je
pop
pop
dec
outs
jae
popa
outs
arpl
pop
adc
jo
jae
pop
pop
dec
outs
jae
popa
outs
arpl
pop
adc
cs
jns
jb
push
arpl
outs
jb
jae
add
add
jns
je
ins
cs
bound
push
gs
imul
outs
je
arpl
jae
push
outs
popa
jo
je
jo
ins
imul
je
arpl
adc
gs
je
pop
pop
dec
outs
jae
popa
outs
arpl
pop
adc
jo
jae
pop
pop
dec
outs
jae
popa
outs
arpl
pop
add
add
adc
add
add
add
add
add
add
and
add
adc
or
and
or
add
push
push
push
push
or
add
sub
adc
add
push
adc
push
push
push
add
adc
or
adc
or
add
push
push
push
push
add
add
add
sbb
and
imul
push
sbb
adc
add
add
push
pop
and
add
adc
add
or
add
add
or
pop
adc
push
adc
adc
adc
sbb
and
sbb
or
adc
or
and
sbb
add
adc
add
add
or
xchg
add
add
push
sysret
add
adc
adc
sbb
push
add
adc
add
sbb
push
adc
sbb
sbb
and
adc
push
sbb
and
push
or
pop
and
add
adc
add
add
adc
push
add
adc
add
adc
adc
add
add
push
add
add
sbb
and
adc
adc
adc
pop
adc
push
sbb
and
adc
adc
adc
pop
adc
push
sbb
and
adc
sub
adc
sbb
sbb
adc
sbb
push
push
push
push
adc
sbb
adc
test
add
push
sbb
add
or
adc
adc
add
adc
add
adc
add
add
add
sbb
adc
push
add
add
or
add
add
add
or
add
or
or
add
sbb
icebp
add
fld
and
adc
and
sbb
sbb
xor
adc
adc
cmp
push
adc
adc
adc
add
add
adc
add
add
adc
sub
add
push
or
sbb
sbb
sbb
push
adc
sbb
sbb
sbb
adc
and
and
lea
sbb
sub
and
or
and
sbb
and
add
xor
and
adc
and
adc
add
cmp
and
adc
push
adc
cmp
adc
add
or
or
or
or
add
push
adc
push
add
mov
or
adc
adc
and
add
or
add
adc
add
adc
add
adc
adc
add
adc
or
or
add
adc
and
adc
sbb
add
or
add
adc
and
add
popa
adc
and
add
or
or
pop
and
or
or
and
adc
or
or
or
or
or
xor
adc
push
adc
adc
push
adc
and
push
or
and
cmp
or
adc
add
adc
add
xor
add
adc
adc
add
adc
or
add
or
or
pop
add
xor
push
adc
adc
add
push
add
push
push
and
add
dec
adc
or
or
cmp
xor
or
and
adc
adc
adc
adc
add
inc
push
and
add
or
popa
or
or
or
add
adc
add
add
or
add
sbb
pop
push
sbb
inc
adc
imul
add
and
add
and
sub
adc
push
and
add
xor
xor
mov
xor
add
add
jge
pop
add
xor
add
add
pop
add
xor
and
add
cmp
mov
add
and
add
and
add
and
imul
or
and
adc
adc
and
add
sbb
adc
and
adc
add
cmp
adc
add
sbb
pop
add
cmp
or
pop
push
or
push
push
push
sbb
sbb
sbb
push
push
push
add
loope
pop
add
and
and
adc
push
adc
cmp
imul
ins
outs
add
or
add
xor
add
add
add
add
pop
add
add
add
add
add
je
xor
add
add
add
add
or
add
ins
arpl
add
add
add
imul
add
xor
add
lea
add
adc
add
adc
or
add
or
pop
add
sbb
add
or
or
add
and
add
and
add
and
add
cmp
add
adc
add
xor
gs
and
or
and
add
xor
add
add
inc
add
movs
add
in
push
and
add
sub
and
add
cmp
add
push
push
add
adc
push
sbb
xor
or
inc
adc
push
adc
sbb
inc
or
add
push
add
push
add
add
add
inc
add
xchg
push
add
sbb
sbb
or
add
inc
sbb
sbb
or
sbb
and
adc
add
adc
adc
add
lods
pop
and
sbb
adc
add
add
push
jns
je
ins
cs
gs
jne
arpl
cs
outs
outs
ins
jae
push
je
outs
outs
ins
jns
jns
gs
gs
jne
arpl
jne
ins
fs
xor
xor
xor
xor
add
add
add
add
add
and
and
add
add
adc
add
push
add
add
and
add
inc
xor
adc
add
add
add
je
(bad)
call
and
add
xor
xor
jp
sub
cli
push
push
mov
jb
xchg
dec
push
sub
mov
cmp
xchg
adc
out
push
clc
outs
out
mov
retf
cwde
fdivr
mov
add
cmp
in
jmp
mov
mov
lods
mov
fisub
jg
pop
in
repz
dec
out
das
popf
mov
test
mov
mov
xor
xchg
push
xchg
xchg
cmps
push
aad
js
pop
mov
or
push
push
and
cmp
pop
stc
cs
xchg
cmc
into
jb
or
je
and
lods
adc
push
xchg
add
int
or
repz
mov
jp
lea
xchg
call
push
es
fild
test
pop
push
lock
add
jns
mov
cmp
push
xchg
fwait
dec
rol
out
push
lock
das
cld
mov
jb
bound
loopne
scas
daa
cli
pop
sub
(bad)
xchg
sub
fbld
mov
or
sub
jecxz
mov
lock
pushf
es
jne
dec
pop
jmp
inc
gs
jp
lock
mov
push
mov
fdiv
mov
gs
ds
sbb
pop
mov
arpl
mov
imul
sti
and
xchg
mov
pop
ss
enter
pop
addr16
repz
movs
pop
jmp
cmp
fldenv
mov
es
fiadd
xor
test
dec
ficom
call
fst
xchg
xchg
shr
ja
dec
test
leave
and
push
jae
cmp
mov
push
cmps
pop
and
mov
adc
push
jns
je
ins
cs
arpl
imul
imul
cs
arpl
imul
jae
imul
imul
ins
jae
outs
jb
imul
jae
outs
outs
cmp
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
aaa
popa
xor
cmp
xor
xor
cmp
jg
jns
je
ins
cs
arpl
imul
imul
cs
arpl
imul
jae
imul
sub
ins
jae
outs
jb
imul
jae
outs
outs
cmp
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
aaa
popa
xor
cmp
xor
xor
cmp
jae
add
add
add
or
add
add
push
add
add
push
add
push
jb
jo
outs
outs
inc
js
gs
imul
ja
add
add
or
xor
aaa
xor
cs
sub
add
popa
cmp
bound
sub
sub
sub
sub
xor
xor
add
add
dec
imul
jo
gs
outs
jb
jo
outs
push
arpl
adc
add
and
outs
push
arpl
add
add
push
outs
jo
arpl
data16
outs
je
outs
and
ins
outs
ja
outs
and
and
fs
and
je
jne
je
and
arpl
and
jp
add
adc
add
dec
imul
jo
gs
outs
jb
add
or
add
add
add
add
ja
add
and
add
ja
add
add
outs
jb
js
dec
popa
imul
jb
gs
ins
add
add
add
and
