push
call
ret
ret
mov
mov
test
mov
retf
fiadd
mov
retf
fdiv
pop
and
(bad)
xchg
push
fsubr
add
jge
test
cmp
sar
popa
cdq
in
jge
jns
test
inc
xchg
xchg
outs
ja
pusha
sub
cwde
je
xchg
jne
loope
xchg
dec
jns
inc
ret
nop
(bad)
scas
inc
mov
push
fimul
sub
dec
lods
xchg
pusha
push
jle
bound
jno
inc
leave
push
inc
sbb
sub
into
rol
imul
and
ds
scas
push
and
jb
or
out
sub
and
fld
xchg
fstp
inc
outs
push
and
test
(bad)
out
pop
lock
mov
push
fnstenv
fimul
mov
mov
call
icebp
jmp
pop
push
popf
aas
scas
cmp
icebp
dec
stos
dec
popf
push
loopne
sbb
js
fisub
test
xor
int
outs
idiv
test
jnp
xor
mov
push
rcl
js
test
xor
div
mov
in
jbe
mov
lods
inc
outs
out
mov
push
mov
mov
pop
imul
into
xchg
inc
sti
leave
pop
in
imul
lock
jl
loopne
adc
or
add
sbb
pop
mov
xchg
std
iret
test
(bad)
jp
add
mov
mov
daa
push
and
xor
scas
(bad)
movs
pop
(bad)
cmp
mov
jmp
loopne
iret
rcl
add
and
cmp
cmp
mov
fistp
aaa
add
push
sub
popa
sti
jmp
push
mov
dec
lods
cmp
out
call
add
(bad)
das
shl
out
xor
repz
mov
jmp
jnp
sbb
or
xchg
movzx
push
add
repz
in
neg
clc
movs
loop
xchg
je
in
(bad)
pop
push
mov
arpl
jns
movs
mov
repz
sti
sub
push
aad
push
in
jmp
pushf
xor
stos
shl
in
das
sbb
push
xor
and
lahf
dec
lahf
push
ins
(bad)
loopne
aam
dec
adc
xchg
lods
pop
add
sub
xor
push
fist
adc
ret
cmc
push
add
stc
in
sbb
mov
(bad)
js
jl
push
push
push
sbb
xchg
mov
and
jo
ss
mov
into
jns
test
push
stc
outs
neg
mov
fdivr
mul
scas
ss
or
sub
add
mov
out
fcomp
cmp
leave
cwde
mov
and
or
pushf
out
push
(bad)
jmp
xor
dec
xchg
cli
leave
das
nop
add
mov
mov
dec
test
xchg
push
scas
mov
push
mov
in
in
xchg
mov
mov
js
xchg
sbb
inc
retf
not
mov
lea
or
loop
push
jae
pop
cmp
inc
es
aam
xor
or
mov
xlat
xchg
jnp
jp
retf
(bad)
test
xor
xchg
jns
fcom
ds
dec
movs
xchg
push
and
fst
sub
stos
sub
add
mov
add
retf
rcr
ret
cmp
jb
cs
frstor
pop
bound
mov
les
cmp
fmul
gs
cmp
nop
cli
add
dec
dec
mov
or
add
cmp
xchg
pusha
mov
ins
aam
sub
xchg
lock
push
rol
imul
arpl
xor
inc
cmp
ja
cmp
xor
pop
cmc
sub
jmp
mov
daa
(bad)
iret
mov
enter
aas
cmp
push
jbe
mov
push
(bad)
test
or
das
jae
inc
pop
adc
fwait
leave
sbb
aaa
fnstcw
lds
add
div
jno
movs
loopne
fwait
xor
es
mov
pop
pop
shl
jle
ins
dec
(bad)
stc
lea
sbb
dec
popf
cld
mov
fisttp
std
dec
cli
mov
lods
imul
sbb
inc
push
jne
daa
sbb
pop
jp
pop
imul
mov
and
fwait
pop
add
repnz
mov
cmp
push
adc
sub
cmc
dec
xor
cmp
sahf
pop
xchg
and
mov
xor
cs
rol
ds
push
mov
xchg
sub
mov
lahf
pop
sbb
jb
and
and
rcl
adc
sets
inc
(bad)
and
in
test
and
pop
xchg
enter
popf
fdiv
(bad)
mov
inc
jge
nop
adc
imul
cmp
xor
sub
test
hlt
(bad)
fnsave
addr16
fnstsw
loopne
jae
pop
or
sbb
test
and
nop
push
mov
add
movs
aaa
shld
pop
mov
jge
std
mov
ja
mov
es
sbb
jge
adc
add
xchg
ret
dec
scas
cdq
iret
pop
call
xchg
mov
and
(bad)
sbb
int
retf
pop
shl
loopne
xchg
js
jae
stc
inc
push
ins
inc
into
call
bound
adc
pop
hlt
or
pop
ins
aad
lea
ror
inc
add
add
scas
xchg
clc
inc
xchg
push
bound
(bad)
loopne
cmp
pop
and
mov
or
ja
add
test
fbstp
sub
mov
sub
mov
dec
cwde
add
dec
mov
addr16
mov
inc
pusha
mov
mov
jecxz
mov
or
and
cdq
fsub
das
pop
mov
pop
stos
(bad)
jmp
es
mov
cmp
rcl
sub
pop
push
stos
inc
fnstcw
adc
jae
cmp
out
movs
add
in
push
shl
fwait
loop
xchg
dec
adc
push
push
pushf
mov
out
add
xor
outs
mov
iret
pushf
pusha
in
mov
(bad)
std
inc
pop
inc
inc
jle
lods
mov
push
int3
loopne
push
(bad)
mov
sahf
mov
sbb
and
ret
push
jbe
stc
sub
cmp
jl
and
xchg
loopne
push
mov
enter
sar
fs
or
push
fbstp
(bad)
int
sub
inc
movs
rcl
stos
add
jge
xor
xor
and
sbb
jno
push
gs
(bad)
ins
cdq
ret
inc
xor
ret
retf
fmul
ss
mov
xchg
je
cmps
enter
sub
cmp
adc
pop
popf
mov
jmp
jno
mov
xor
and
mov
test
out
push
xchg
mov
pusha
repnz
xchg
out
jl
int
add
and
daa
fisubr
sar
jle
jp
xor
rcr
sbb
xchg
jne
xchg
jo
movs
mov
js
mov
add
xchg
pop
mov
dec
scas
inc
fwait
xor
add
sahf
and
xchg
movs
push
inc
xor
call
mov
iret
mov
jecxz
fcmove
push
push
loope
xor
stos
pop
stc
xlat
jecxz
dec
mov
sbb
add
test
fistp
sbb
ss
mov
and
inc
jbe
cmp
test
or
jne
shl
mov
mov
xchg
push
push
jo
mov
into
jmp
sbb
lds
lods
mov
add
es
fimul
push
mov
rep
add
jbe
outs
mov
lea
xchg
mov
bound
pop
mov
popf
jae
xchg
shl
mov
adc
mov
ret
mov
div
jne
ins
jmp
js
jno
lods
pop
mov
mov
sub
xchg
dec
push
mov
mov
jno
add
sub
dec
aas
lock
(bad)
out
inc
es
add
lock
mov
out
sahf
mov
add
arpl
in
cmps
int3
mov
sub
push
call
dec
mov
outs
aad
jae
cmp
inc
add
mov
in
push
not
xchg
add
xchg
sub
rcl
(bad)
jmp
inc
jno
xchg
pop
ror
inc
mov
sub
iret
out
or
fwait
adc
jg
and
aas
es
popa
(bad)
fisubr
push
addr16
fisub
loopne
pop
mov
adc
mov
icebp
cs
(bad)
dec
aaa
add
push
gs
sbb
nop
test
xchg
clc
mov
xchg
pushf
lds
sub
pop
pusha
leave
cmp
lods
pop
fisub
and
pop
adc
push
icebp
sbb
stos
jmp
cwde
mov
push
inc
inc
jb
pushf
push
dec
add
cs
ins
pop
inc
stos
adc
sbb
mov
call
xor
jg
pop
stc
aam
test
and
(bad)
xchg
int
adc
sbb
dec
cmp
sbb
mov
sti
mov
cwde
adc
and
adc
add
inc
ja
rcr
or
add
jns
mov
xchg
lea
xchg
pushf
cld
mov
fcom
mov
mov
mov
ja
sbb
xchg
int3
xchg
int3
dec
push
stos
push
mov
fs
sub
pop
sbb
pop
test
xchg
neg
jecxz
mov
adc
mov
push
aas
xlat
jmp
adc
mov
push
aad
add
sbb
push
add
popa
push
mov
dec
add
mov
leave
les
inc
push
popf
or
int
sbb
arpl
bound
js
aam
mov
mov
sub
sub
push
aas
popf
daa
in
ins
loop
popf
pop
pop
mov
call
cmp
aad
out
ficom
std
add
cli
cmp
mov
test
cmp
dec
int3
add
rol
fs
or
jecxz
add
or
dec
lea
push
xchg
in
jbe
in
mov
sti
push
loop
fstp
xor
sar
(bad)
call
push
jnp
and
and
inc
cmps
lds
xchg
xlat
std
cmp
sbb
mov
fdiv
xchg
mov
sbb
mov
xor
mov
aad
test
mov
sub
inc
jg
(bad)
in
fwait
xchg
ss
aas
imul
dec
sar
and
lods
inc
inc
inc
stos
sub
xchg
pop
data16
sub
cwde
dec
or
adc
cli
ret
jno
call
xor
push
mov
call
mov
clc
mov
push
mov
sbb
lods
lods
xchg
pop
dec
inc
xchg
shl
ds
mov
bswap
fmul
sub
les
shl
popa
push
pop
push
out
pop
cli
add
outs
aaa
fs
cmp
repnz
or
fadd
sbb
and
loop
xchg
rcr
xor
pop
mov
mov
and
add
dec
mov
arpl
or
test
mov
out
mov
mov
adc
jnp
and
xchg
xor
xchg
aad
fsub
mov
outs
jb
add
jl
dec
out
cmp
jp
leave
xor
in
inc
xchg
pop
imul
stos
mov
popf
les
jg
sub
rep
push
std
mov
loopne
push
xchg
mov
retf
mov
and
sbb
pop
cmps
pusha
retf
retf
pop
xchg
mov
(bad)
xor
lahf
loopne
xchg
mov
daa
loopne
daa
movs
mov
xor
pop
jns
fwait
cmp
jp
or
or
data16
add
push
and
in
adc
dec
mov
out
adc
lea
mov
inc
(bad)
push
sahf
(bad)
les
mov
imul
xor
movs
sbb
mov
cwde
mov
dec
or
xchg
pop
rdmsr
adc
mov
cmp
mov
(bad)
rcl
cwde
or
sub
push
or
movs
cdq
movs
fcomp
push
mov
aaa
or
fucomip
aad
jnp
in
sbb
push
cld
sub
adc
iret
sbb
fwait
mov
mov
lods
add
push
shr
(bad)
fwait
aaa
sahf
test
xor
or
dec
or
es
xchg
aaa
jne
cwde
xor
add
xchg
fimul
mov
out
test
jmp
clc
sti
fist
cdq
adc
sub
adc
sub
jp
mov
clc
loop
not
loop
push
fcmovb
jae
pop
(bad)
daa
jge
cli
into
xor
dec
push
mov
pop
sbb
or
sahf
sbb
out
fs
rol
add
adc
inc
jecxz
lahf
mov
sahf
scas
xchg
sbb
clc
pop
jno
mov
jl
fsubr
mov
rol
sbb
jnp
je
and
stc
lahf
xor
clc
in
in
sbb
fistp
dec
movs
aaa
push
sub
jl
sbb
lds
addr16
xchg
adc
jp
addr16
or
(bad)
push
sbb
add
pop
adc
lods
add
add
push
cmp
and
fcom
std
(bad)
loop
cmp
add
or
out
pop
lods
mov
mov
mov
neg
add
in
or
xor
mov
inc
pop
jmp
inc
retf
lods
add
mov
pop
in
xchg
or
rcl
jmp
sbb
cwde
push
in
mov
movs
pusha
test
mov
push
repnz
in
and
sub
pushf
dec
popf
xor
jmp
fsubr
push
push
add
xor
out
scas
adc
pop
loope
jge
js
add
sahf
loope
push
ret
push
bound
sbb
(bad)
cmc
daa
mov
jmp
xor
ss
cmps
rcr
movs
lds
jmp
mov
push
lahf
pop
stos
repnz
dec
addr16
lds
leave
and
mov
and
or
inc
stos
or
adc
and
retf
or
imul
adc
or
mov
(bad)
scas
icebp
xor
push
sti
xchg
in
mov
hlt
xor
mov
push
inc
push
dec
jo
jp
(bad)
push
test
fdiv
(bad)
mov
sahf
xor
rol
call
cmc
fcmovnb
mov
sar
dec
xor
psubusb
mov
in
jbe
xor
and
bound
out
(bad)
cs
cli
inc
fsub
lods
cmps
mov
mov
daa
aam
hlt
mov
mov
scas
dec
jp
aad
movs
or
jbe
scas
cmps
cs
into
mov
in
push
(bad)
inc
pop
(bad)
loop
stos
aaa
jbe
xchg
jne
adc
cmps
mov
push
pop
aad
popf
call
inc
arpl
cmp
cdq
pop
jmp
push
fisub
call
xchg
hlt
shl
clc
sbb
xchg
test
scas
push
dec
fstp
xchg
mov
sub
mov
push
sub
push
mov
cmp
in
popa
add
pop
xchg
js
movs
ret
push
enter
shl
jns
loope
sti
scas
jl
cmp
clc
nop
cmp
mov
fisub
adc
mov
(bad)
pop
jge
loope
xchg
adc
sti
out
aad
and
jne
out
jo
pushf
xlat
inc
leave
sub
dec
movs
and
mov
adc
sub
sti
inc
mov
les
int3
ds
out
and
popf
int
not
adc
pop
or
sub
push
ins
jle
das
scas
mov
mov
shl
cwde
das
int
sub
sub
(bad)
xchg
adc
xchg
jo
enter
pop
aaa
lods
sbb
dec
xchg
je
jbe
rcr
pop
enter
pop
dec
pusha
arpl
stos
adc
bnd
hlt
add
scas
xor
xchg
ret
jmp
pop
sbb
daa
fisub
inc
dec
push
popf
enter
push
repz
in
hlt
pop
mov
push
fucomp
rcl
mov
ret
fs
push
pop
out
xchg
js
jg
cmps
push
mov
mov
imul
dec
outs
jmp
and
mov
mov
mov
sar
outs
xlat
retf
push
cmp
jb
mov
inc
pop
cmp
addr16
lods
xchg
mov
es
or
dec
xor
loop
jle
stos
ret
jno
retf
out
mov
dec
sbb
es
idiv
push
scas
mov
call
(bad)
sbb
adc
std
cmc
sahf
in
retf
stc
jp
mov
push
cmps
mov
adc
mov
pop
lea
enter
fild
add
push
xchg
rcr
cmp
pop
into
js
sub
mov
leave
jbe
or
loopne
sbb
push
xor
loop
(bad)
test
sub
inc
or
dec
aad
popa
sahf
(bad)
dec
xor
dec
fcomp
fsub
jp
mov
mov
je
sahf
xor
xlat
jno
sub
pop
pop
sub
mov
mov
ror
lds
popf
cmc
cmps
aad
pop
retf
paddq
lods
mov
mov
xor
aas
push
test
and
mov
enter
sahf
push
mov
mov
sbb
pop
push
jle
mov
cmps
scas
sar
cmp
out
pop
fxch
push
dec
jg
lods
mov
in
add
pop
movd
in
mov
mov
mov
or
inc
ret
out
nop
mov
or
dec
stc
fistp
jl
cbw
stos
adc
mov
pop
(bad)
loop
ror
call
xlat
mov
pop
ins
add
push
sar
dec
push
bnd
bound
cs
add
sub
cmps
fisub
pop
jle
mov
xor
jecxz
sbb
cmp
adc
js
sbb
imul
cmp
xchg
and
mov
(bad)
lods
xchg
sbb
idiv
out
dec
rcl
retf
loopne
cmp
call
jae
fild
ret
fiadd
ficomp
lock
in
imul
shufps
mov
xor
sti
rol
fs
pusha
aaa
add
jmp
adc
fisttp
sub
dec
test
cmp
mov
adc
cmps
fstp
call
fsubrp
das
nop
mov
mov
bound
push
stos
push
jecxz
cwde
mov
dec
jno
je
popa
mov
xchg
pop
call
mov
out
cld
sub
ja
out
and
out
push
adc
mov
ret
and
sbb
mov
mov
adc
sub
dec
ret
fnsave
adc
rol
adc
out
mov
in
inc
xchg
div
clc
fiadd
ins
fcomip
call
test
out
add
xor
std
int
mov
adc
mov
dec
out
jo
pop
xor
add
mov
push
(bad)
mov
pop
in
jge
add
inc
mov
loope
mov
sub
popa
leave
mov
pop
sbb
mov
or
test
js
and
mov
mov
mov
(bad)
shl
dec
shr
loope
bound
pop
mov
cmps
scas
sub
(bad)
fcom
mov
and
jns
retf
mov
add
add
pop
dec
sub
mov
fist
and
dec
(bad)
pop
push
push
and
adc
pop
and
xor
xor
or
push
pop
or
movs
ds
and
scas
push
mov
test
or
mov
nop
ins
and
arpl
mov
jmp
jns
mov
imul
sub
lds
fcomp
fst
push
or
scas
pop
dec
xchg
into
clc
cmp
gs
fisub
cmp
out
sti
inc
mov
sbb
in
cwde
inc
lods
sub
cwde
arpl
add
jae
js
aas
(bad)
jmp
pop
ret
loop
es
and
stos
ret
ret
(bad)
mov
popa
xor
or
jnp
data16
mov
pop
jns
sbb
loope
add
mov
or
dec
dec
ds
loopne
mov
int3
push
fstp
imul
fwait
sub
cmps
adc
out
sbb
cs
and
test
popf
sbb
jne
fisub
bound
pop
mov
aam
and
cmp
jno
jo
dec
dec
in
and
data16
sub
sub
mov
add
pop
fnstenv
cld
stos
inc
call
cmps
mov
or
push
jo
sbb
scas
xchg
stos
test
mov
stos
retf
xor
mov
(bad)
pop
xor
in
sti
sbb
adc
jnp
fwait
test
bnd
cmp
xchg
leave
cmp
jbe
fisttp
addr16
adc
in
leave
mov
pop
xor
pop
je
pop
push
and
or
nop
sub
mov
js
loop
dec
mov
dec
xchg
(bad)
in
jae
push
mov
add
mov
jmp
into
push
in
sbb
bound
push
popf
mov
pop
jno
js
xor
shl
mov
cmp
mov
pop
cmp
add
repz
fs
inc
test
cmps
aam
jg
push
mov
in
idiv
and
popa
or
(bad)
cmps
jecxz
scas
es
sbb
fwait
(bad)
cwde
pop
or
ja
loopne
push
imul
pop
xchg
sub
add
fmul
xor
jecxz
pop
sub
clc
pop
fimul
add
ret
das
(bad)
daa
sub
sub
cmc
jne
int
add
pop
cli
cmps
xor
int
push
arpl
stc
xor
sahf
mov
daa
inc
dec
sub
int
push
jg
sub
jg
mov
lock
in
icebp
adc
addr16
inc
lea
jbe
xor
fsubr
(bad)
push
adc
jno
push
adc
cwde
(bad)
loop
add
and
sahf
mov
cld
or
pop
cmps
xchg
jnp
loopne
sub
ins
mov
out
sbb
das
sbb
jns
jns
addr16
pop
in
sbb
xchg
(bad)
xlat
fdivrp
js
cmp
out
ds
stos
in
or
in
lods
in
retf
ins
adc
retf
outs
xchg
push
call
sub
mov
inc
sbb
dec
packsswb
and
(bad)
sub
lods
pop
xchg
cmp
icebp
scas
and
pop
xor
sti
pop
add
rol
dec
pushf
add
ins
mov
mov
sbb
popa
push
jno
aaa
push
cld
sub
jp
dec
ror
sub
dec
or
test
jnp
or
sub
ja
xchg
test
rcr
lods
adc
pusha
aas
repz
ja
in
int3
lahf
pop
stc
mov
xchg
push
push
pop
cmps
add
cmc
jne
jl
mov
sti
out
mov
fsub
or
mov
jne
in
xor
adc
scas
mov
stc
stc
mov
(bad)
dec
stc
pop
es
fmulp
rcl
sahf
jb
or
inc
ror
shl
sbb
hlt
xor
mov
les
cmc
popf
jnp
movs
add
xlat
out
jmp
jecxz
inc
in
bound
jbe
dec
and
fwait
cwde
loopne
movs
push
mov
jae
popf
push
aaa
pushw
jmp
xchg
in
mov
sbb
aas
loope
daa
sub
jge
test
push
adc
fs
aas
cdq
retf
mov
push
outs
pop
test
cmp
mov
jmp
fnstsw
punpckhbw
xor
call
cmp
div
lea
aad
test
mov
and
cwde
bound
jmp
and
fucom
jmp
(bad)
mov
xlat
data16
add
mov
or
add
call
and
xlat
xchg
mov
dec
xchg
mov
test
lea
xor
cmp
dec
push
inc
or
pop
ss
or
(bad)
mov
adc
mov
push
push
imul
shl
daa
adc
xchg
cmps
test
and
cmp
jp
cld
pop
lods
sbb
adc
dec
aas
push
cmp
inc
(bad)
push
stc
sbb
dec
inc
cwde
bound
scas
mov
inc
and
push
xor
xor
mov
loop
rol
sbb
jmp
push
dec
jns
sub
push
push
sub
cmp
pop
sar
sub
mov
scas
sub
xor
push
retf
cmp
inc
fdiv
shr
test
rcr
dec
jb
fldcw
xchg
sar
iret
retf
xor
in
je
pop
sub
ins
inc
loope
aaa
movs
inc
lahf
cmp
sbb
xor
and
jnp
imul
ja
sbb
pop
pop
jns
mov
aas
and
mov
dec
in
mov
mov
adc
push
and
rcl
fcmovu
mov
mov
lods
neg
fist
imul
fmul
push
cmp
sbb
jno
pop
push
dec
gs
mov
in
nop
cwde
jae
pushf
retf
retf
pop
stc
xor
push
and
xchg
aas
jl
pop
out
sub
(bad)
add
mov
pop
push
inc
cwde
pop
mov
(bad)
sub
or
inc
out
div
int3
pop
adc
add
and
repz
mov
inc
dec
pop
(bad)
xor
add
and
fadd
and
and
(bad)
ja
iret
pop
xor
aam
rcr
or
jnp
(bad)
push
sbb
retf
add
movs
ins
and
add
pop
push
mov
sbb
xlat
sub
in
mov
cmps
rcr
cmps
popa
frstor
adc
mov
cmp
add
rol
mov
clc
or
aas
scas
pop
sbb
lea
xlat
dec
dec
ret
(bad)
jo
scas
popa
sbb
repnz
sti
loopne
mov
ret
or
fidiv
aad
test
ss
mov
mov
cmp
cmp
iret
cmps
jb
gs
js
sti
cdq
mov
int3
mov
jecxz
add
icebp
ret
test
or
lods
dec
movs
out
dec
(bad)
(bad)
or
adc
les
dec
ret
std
fld
fidiv
cwde
dec
lock
mov
ret
aad
sub
jmp
xchg
add
idiv
repz
hlt
aam
push
js
ror
sahf
(bad)
sub
ja
dec
out
int3
fs
gs
xchg
out
jmp
cmp
bound
xchg
add
inc
xor
(bad)
sti
or
shl
push
jmp
mov
xchg
mov
es
lods
push
fisttp
daa
out
cmp
ret
sub
add
and
lock
xor
fwait
push
jne
mov
add
mov
adc
mov
jmp
push
ins
push
and
xchg
retf
cmp
dec
mov
jbe
sbb
sahf
pop
mov
push
push
loope
out
scas
mov
das
mov
lock
shr
mov
cdq
iret
mov
imul
mov
cmp
mov
call
lock
imul
and
dec
cmp
jbe
xchg
inc
add
dec
inc
je
cld
gs
push
xchg
adc
push
fwait
xor
test
mov
xchg
xchg
pop
inc
mov
outs
dec
and
dec
xor
movs
jno
retf
aaa
and
push
cmps
lahf
cld
mov
lea
add
or
imul
mov
pop
add
cdq
in
rcl
fiadd
pop
cmps
and
pop
outs
rol
adc
push
xor
dec
pushf
inc
pop
mov
std
mov
inc
jmp
pop
hlt
lea
std
je
nop
sbb
out
inc
js
cli
jmp
jno
sub
out
ds
je
push
mov
cmc
int3
out
pop
sub
pop
pusha
adc
call
repnz
shl
int
mov
jo
pop
not
and
pop
fwait
mov
mov
adc
iret
xchg
(bad)
std
add
or
mov
xor
movs
aad
xbegin
out
lahf
push
daa
repnz
push
(bad)
mov
and
push
ja
and
retf
or
or
nop
repnz
mov
in
loop
aaa
sbb
ins
xchg
inc
mov
outs
and
mov
imul
cmp
mov
xor
pop
pop
clc
and
test
and
pop
enter
mov
das
sub
add
repz
iret
pop
sbb
(bad)
and
sbb
fs
stos
mov
sar
mov
test
mov
pop
dec
jno
in
push
(bad)
mov
cmp
and
inc
add
add
xchg
and
mov
lods
test
cwde
sahf
mov
mov
add
fldenv
enter
xlat
adc
daa
mov
rcl
inc
je
ds
pop
pop
ins
pop
es
jl
cld
test
push
rcr
mov
inc
inc
or
in
setle
fdivr
loope
push
arpl
loop
xchg
shl
fwait
add
pushf
sbb
mov
sbb
(bad)
out
mov
repz
cmp
cmc
(bad)
push
je
and
ret
or
mov
push
mov
sahf
xor
shl
jbe
pop
xor
sub
std
lea
xor
(bad)
jns
data16
ret
xchg
lock
or
test
ins
imul
je
pop
xchg
cmp
je
test
fwait
daa
jmp
(bad)
sbb
icebp
inc
cmp
push
call
hlt
dec
add
sbb
pop
xor
mov
mov
push
push
jo
adc
adc
scas
inc
sbb
inc
stos
ja
das
mov
fdiv
icebp
orps
mov
dec
adc
stos
jl
sub
jmp
loope
adc
jle
pop
mov
xchg
rcr
cli
(bad)
adc
or
daa
push
sub
or
outs
xor
aad
sahf
out
mov
mov
loope
fbld
aaa
jp
sar
or
movs
into
jmp
add
push
jmp
adc
xchg
ror
lahf
hlt
pop
data16
clc
bound
frstor
mov
xchg
and
push
or
or
in
pop
mov
push
popa
jl
or
test
dec
mov
adc
test
adc
mov
dec
jno
cmp
add
das
scas
stos
pop
cli
(bad)
and
jmp
mov
lmsw
imul
xchg
fwait
je
push
inc
dec
push
inc
rcl
sub
xchg
sub
and
lods
mov
add
or
cwde
das
sub
mov
in
sub
cmp
add
xor
push
repnz
neg
cmps
nop
dec
(bad)
das
cmc
loop
ss
adc
sub
add
scas
jbe
out
std
jmp
sub
neg
lods
mov
dec
repz
and
pop
xor
sub
jmp
aaa
mov
dec
cs
jne
pop
imul
jns
ror
out
(bad)
mov
or
jnp
xchg
sub
fdiv
adc
adc
pop
push
jle
mov
push
nop
cld
retf
retf
sub
fdivr
cmp
pop
jno
lods
xlat
ficomp
push
cmp
mov
into
dec
sbb
jge
cwde
mov
clc
xor
xor
aam
mov
int3
cs
push
lea
jg
outs
sbb
jno
pop
shl
movs
and
add
ror
fist
jnp
shl
repz
xchg
cmps
stc
movs
sub
and
push
aad
test
cmp
pop
inc
inc
inc
mov
inc
aam
std
push
retf
imul
sub
retf
mov
ds
lock
not
jno
push
cmp
mov
sar
leave
adc
retf
lods
out
pop
add
je
mov
add
shl
jp
gs
fisub
jnp
in
(bad)
addr16
aas
loope
lsl
mov
cs
repnz
pop
shl
sub
(bad)
jbe
pusha
aaa
test
sub
pop
in
jnp
retf
jmp
cmps
adc
push
add
out
test
mov
xor
sar
cmp
mov
dec
jp
jg
bound
jmp
and
(bad)
cmp
mov
add
sub
cmps
loop
out
inc
jnp
dec
shl
or
xchg
mov
outs
xor
into
das
pop
sub
mov
xchg
in
mov
pop
(bad)
push
pushf
pop
retf
je
sbb
mov
xchg
inc
inc
fnstenv
xchg
pop
repz
sub
aas
stos
mov
dec
js
push
fisub
add
inc
inc
mov
sub
or
icebp
daa
cmp
movs
outs
mov
aas
sbb
xor
je
lea
jp
mov
arpl
cli
popa
lock
int3
mov
or
and
outs
add
or
popf
or
sbb
jge
shr
sub
sbb
(bad)
mov
into
js
fisub
mov
dec
fadd
repnz
inc
push
push
or
xlat
gs
aas
retf
xlat
lods
adc
lods
mov
and
icebp
jmp
fld
test
push
aas
fimul
loopne
nop
mov
imul
cli
ret
sar
rcl
mov
xchg
cmps
mov
pusha
pop
mov
rcr
stos
clc
jns
dec
call
add
mov
sar
jnp
mov
sub
outs
scas
rcl
xor
daa
je
test
scas
shl
mov
arpl
xlat
ss
sub
xchg
jae
imul
jle
jno
(bad)
jae
movs
push
pop
scas
es
push
xchg
aam
xor
imul
dec
in
fiadd
xchg
(bad)
fcom
mov
fstp
and
pop
mov
cdq
adc
pusha
imul
cmp
push
inc
dec
mov
ficom
pusha
jp
push
fist
ror
mov
call
stc
sbb
sub
ret
loope
cld
lock
lods
lea
js
neg
mov
addr16
sbb
nop
mov
jmp
inc
out
outs
add
cs
loope
push
ret
cmp
adc
call
cmp
bound
popa
loop
jns
inc
stc
loop
cmc
aam
xlat
lods
cmp
leave
mov
lock
adc
mov
ret
xchg
mov
add
les
push
push
nop
stos
sbb
add
or
mov
add
out
dec
pusha
in
addr16
mov
pop
loope
add
clc
pop
cmp
test
mov
xlat
aam
ret
push
cs
loop
xchg
retf
add
daa
mov
mov
movs
stc
sti
sub
imul
ret
cmp
sti
cli
jge
lea
mov
xor
mov
mov
mov
mov
xor
jae
mov
out
mov
and
pop
fs
cs
mov
lock
or
sub
jnp
dec
in
rcr
rcl
les
mov
add
jge
movs
adc
sbb
(bad)
int
mov
idiv
adc
jo
and
pop
inc
ja
push
cmps
stos
int
mov
xchg
cmp
inc
xor
iret
pop
lock
daa
sbb
sbb
cmps
and
es
inc
xchg
pop
in
mov
aam
sbb
cmps
push
mov
mov
xchg
cmps
ja
icebp
sbb
mov
lock
xchg
sub
test
or
popf
adc
xor
mov
push
push
mov
scas
mov
and
sbb
pop
xchg
or
mov
les
add
das
mov
mov
push
mov
xlat
mov
cmp
sub
xor
test
mov
aad
push
and
xchg
cmp
push
add
imul
adc
mov
sub
pop
mov
or
xor
push
lds
test
mov
pop
test
push
adc
rol
dec
outs
push
push
imul
mov
pop
or
dec
xchg
sahf
ds
jae
out
fisubr
sbb
je
push
mov
jmp
push
icebp
imul
and
pop
ror
sub
xchg
stc
push
pop
test
fsubr
stos
inc
cmp
xchg
cmp
hlt
jmp
popf
repz
loope
daa
retf
dec
cmc
outs
push
cli
jo
dec
mov
add
stos
xchg
(bad)
or
cmps
inc
mov
and
(bad)
jg
adc
dec
sbb
mov
fnstsw
test
xlat
popf
data16
shr
cli
dec
add
inc
ins
std
fbstp
mov
arpl
rcl
fdiv
jmp
ins
inc
xor
mov
gs
adc
jnp
add
add
out
add
loop
jmp
adc
jl
test
cs
retf
(bad)
call
xor
mov
mov
popa
scas
inc
leave
int3
fwait
add
push
gs
dec
into
cwde
test
and
or
sub
mov
mov
pop
call
stos
aaa
mov
fadd
aaa
mov
mov
dec
dec
pop
ror
lods
mov
pop
scas
ja
pop
and
adc
sub
mov
and
iret
icebp
add
test
lahf
cld
sbb
fwait
inc
mov
or
xlat
aas
ins
frstor
inc
and
iret
adc
clc
inc
dec
mov
inc
imul
test
popf
loopne
jp
test
pop
mov
dec
and
popa
call
call
mov
jbe
inc
call
jg
xor
in
mov
or
ins
lea
pop
(bad)
mov
sub
ret
fs
push
add
(bad)
ins
push
push
cmp
inc
pop
mov
scas
pop
lods
mov
test
sub
aam
mov
sub
arpl
fcom
sbb
ins
add
std
pop
cmp
and
jg
cmp
popf
mov
and
arpl
jne
push
add
out
and
push
and
mov
pop
adc
sub
std
dec
xor
pop
adc
jp
fiadd
jmp
aam
add
popf
int3
(bad)
loope
xor
call
aad
js
ds
fstp
xor
push
lea
enter
in
adc
lods
and
add
ror
retf
xchg
mov
in
jmp
push
hlt
fcomp
cs
adc
das
xor
out
jmp
mov
xor
test
shl
jne
mov
jecxz
jmp
mov
jle
mov
repnz
in
je
mov
cmc
dec
jp
ins
rcr
jae
retf
std
movs
out
jb
dec
dec
ret
push
(bad)
lods
add
dec
jnp
fcmovnb
or
cdq
add
pop
sbb
xchg
retf
xor
add
jle
push
sbb
test
(bad)
adc
dec
adc
js
or
xchg
jbe
jmp
sub
inc
adc
add
push
adc
push
xchg
pusha
retf
mov
scas
and
mov
out
sub
jo
adc
std
shl
xor
call
hlt
rol
shr
test
cmp
mov
inc
dec
cmps
jno
xchg
or
mov
mov
inc
sbb
mov
lods
(bad)
(bad)
loop
ds
jmp
push
sbb
lock
jb
sti
ds
mov
inc
xor
mov
shr
cs
and
push
fs
rcr
cmps
outs
jmp
bound
dec
jmp
push
into
xor
sbb
enter
cs
sub
xor
jp
mov
movs
out
lock
enter
adc
inc
adc
push
jge
(bad)
lahf
jb
mov
sub
push
hlt
daa
fnstenv
sahf
cmp
mov
mov
mov
pop
or
loope
iret
fnsave
sub
inc
enter
sbb
in
test
int3
mov
inc
cmc
call
daa
lea
push
shl
aad
or
mov
cs
adc
leave
test
in
or
push
push
or
cmps
mov
test
loopne
xchg
rol
(bad)
shl
pop
cmps
cmp
pop
ficomp
div
repz
repz
jae
ret
das
shl
push
fadd
xchg
mov
jl
ins
xor
std
repz
ret
xchg
pop
jmp
mov
mov
fwait
jnp
xchg
sub
stos
test
fldenv
push
push
jne
jno
inc
pop
cmp
sar
pop
data16
jbe
pop
je
mov
xchg
loope
sub
pop
mov
xor
loope
mov
add
leave
(bad)
mov
(bad)
hlt
add
push
arpl
mov
in
dec
sub
inc
cmp
adc
fiadd
xor
mov
in
fstp
scas
sbb
dec
in
xor
mov
stos
adc
xor
lds
rcr
dec
add
inc
fisttp
ins
pop
or
iret
call
lahf
or
and
pop
cmc
(bad)
mov
lods
adc
pushf
or
and
mov
add
inc
or
adc
fsubr
inc
or
gs
push
in
pop
jecxz
retw
fisubr
gs
add
pop
aaa
int3
sbb
js
repnz
dec
fcmovnbe
in
ss
inc
loop
mov
leave
mov
ins
adc
jle
sub
pop
enter
out
or
mov
nop
imul
xor
inc
push
aam
mov
jno
lds
outs
and
inc
add
arpl
pop
push
and
mov
lahf
fcmovbe
gs
pop
call
scas
mov
inc
(bad)
push
ror
mov
mov
movs
sbb
data16
shl
shl
mov
dec
dec
bnd
aad
(bad)
stc
test
sub
cmc
stc
mov
ret
idiv
mov
jmp
add
(bad)
sub
pusha
xchg
hlt
adc
mov
call
xchg
add
stos
push
xchg
mov
scas
xchg
movs
cmp
shl
sub
test
sti
mov
push
mov
xchg
push
mov
fcomp
pop
call
sbb
pushf
mov
in
mov
ror
loope
xor
mov
jbe
dec
mov
lock
nop
call
int
nop
test
cmp
inc
pop
inc
jae
std
fwait
push
dec
and
sar
xchg
sub
mov
ins
inc
(bad)
sti
sub
(bad)
fcomp
push
xchg
cmc
dec
xchg
jmp
lods
imul
jle
mov
gs
fbld
pop
test
popf
int3
shl
mov
sbb
test
push
add
cmps
in
es
mov
frstor
mov
add
xchg
bound
xchg
(bad)
call
cmps
movs
loop
sbb
mov
loop
mov
leave
hlt
scas
adc
in
xchg
ret
xchg
dec
addr16
xor
inc
and
xchg
movs
push
jmp
dec
adc
or
lods
sub
loope
ja
int3
sti
sbb
imul
loopne
push
cwde
outs
mov
and
adc
add
sti
out
fsubrp
lea
loope
cmp
push
sar
or
mov
jae
xor
inc
xchg
jge
cmp
arpl
std
imul
movs
clc
retf
mov
ins
xchg
sbb
or
xchg
sub
fidivr
mov
and
xor
add
or
inc
cmp
jae
inc
outs
mov
out
jb
inc
aaa
cmp
outs
or
cld
inc
xchg
sbb
push
xchg
pop
add
jns
jbe
xchg
fisttp
dec
xchg
xor
sbb
and
add
sbb
pop
enter
jmp
std
push
cs
cld
mov
pop
inc
pop
jge
push
jno
mov
cmp
pop
bound
rcr
inc
push
dec
xor
sti
cmp
sahf
adc
movs
push
jp
sar
pop
das
xor
sub
fidiv
adc
xor
add
call
push
cmps
mov
lds
fs
push
sub
pusha
push
dec
sbb
pop
ret
or
out
xchg
mov
jg
push
cmp
sub
add
mov
gs
sahf
idiv
call
into
scas
cdq
retf
aam
pushf
repz
cmc
inc
mov
push
loopne
pop
push
sar
ins
clc
cwde
push
push
or
mov
pop
cmp
popa
xor
mov
xchg
in
push
or
add
mov
cld
add
adc
adc
aam
cwde
adc
mov
or
popf
jmp
fdivr
(bad)
(bad)
stc
outs
arpl
int
cmps
cmps
ret
mov
mov
out
xor
cmp
jnp
int3
xor
jmp
pop
adc
test
retf
repz
adc
imul
mov
dec
add
lock
stc
test
mov
jg
iret
mov
push
jge
iret
loop
fs
push
mov
push
adc
pusha
jmp
mov
sti
pop
outs
dec
ret
imul
mov
(bad)
int
cmp
aam
fs
rcl
inc
dec
mov
add
jmp
mov
icebp
jae
fadd
aad
push
fst
cld
clc
cmp
add
ins
out
nop
test
mov
mov
pop
pop
aas
inc
in
(bad)
or
adc
call
rol
jae
icebp
clc
shl
xchg
push
sbb
or
dec
xor
cwde
mov
sub
pop
xchg
mov
sub
int
xchg
hlt
(bad)
sbb
inc
xchg
cld
jmp
mov
xchg
xor
popa
jp
mov
pextrw
add
leave
inc
or
adc
dec
sbb
in
pop
push
sbb
les
or
xchg
(bad)
pop
pop
int
je
mov
call
and
aad
jmp
add
mov
and
xchg
cmp
scas
enter
or
imul
ret
das
stc
mov
add
mov
sub
mov
and
xchg
mov
fnstcw
xchg
and
fstp
iret
adc
(bad)
adc
add
mov
fsub
fisub
adc
adc
jg
bnd
pop
jge
pop
loope
jge
fisubr
pop
std
pop
popf
fs
dec
stos
sub
and
in
cmp
cld
mov
cmps
mov
hlt
dec
jbe
sub
mov
out
fistp
or
mov
inc
add
add
xor
icebp
cli
test
rcr
sub
or
cmp
scas
xor
jle
test
jp
jmp
push
cmp
inc
jne
xchg
adc
sbb
movs
jbe
enter
movs
sbb
int
push
je
push
push
mov
lea
dec
push
or
push
mov
out
and
cmp
jmp
cmp
aam
js
out
dec
rcr
out
push
int
outs
jmp
(bad)
sub
add
xchg
pop
mov
cmp
xchg
nop
push
cmp
pop
neg
(bad)
xchg
push
rol
or
mov
jae
cmc
jmp
fisub
pop
jl
mov
test
and
out
mov
cmp
add
gs
data16
cmps
mov
adc
sahf
cs
jb
xchg
scas
push
cmc
outs
loop
jno
or
inc
jge
sbb
mov
xor
mov
fcom
fdivr
or
lock
xor
(bad)
movs
fs
test
and
retf
xlat
cmp
fst
mov
fmul
push
shl
xor
mov
push
push
xor
cdq
pop
mov
imul
call
xchg
mov
outs
xchg
sbb
(bad)
call
inc
cmp
dec
sti
jecxz
jmp
cmc
add
cmp
aaa
stos
lds
mov
mov
out
cmc
xor
rol
jo
push
mov
cmp
sub
jge
adc
icebp
push
nop
cmp
and
ins
int3
sub
inc
pop
inc
sti
lock
mov
imul
mov
push
cmp
sbb
test
xor
xchg
inc
dec
xor
jg
push
stc
imul
adc
jge
mov
cmp
cmp
pusha
xchg
xor
xchg
shr
and
in
sar
cmc
cmp
aad
mov
push
xor
mul
pushf
adc
gs
dec
arpl
jmp
aad
retf
repz
push
pushf
hlt
adc
mov
fsubr
call
hlt
adc
push
call
add
adc
mov
jo
xchg
jle
jmp
mov
add
sbb
xchg
sub
call
scas
mov
fidiv
pop
pushf
jmp
cmp
sub
(bad)
shr
fild
loope
enter
stos
dec
and
ins
icebp
dec
int3
call
sar
retf
sbb
fdiv
push
jae
jae
loopne
and
cmp
test
cmp
mov
dec
cld
jle
jno
retf
loopne
sub
push
stos
cmc
jge
hlt
stc
ins
sar
rcr
repz
aam
add
mov
xor
retf
mov
cmps
pop
sub
and
pop
add
adc
popf
cli
inc
pop
fadd
jne
inc
out
inc
or
or
jae
push
cmp
mov
sar
arpl
outs
add
aam
into
inc
and
movs
mov
int
int3
movs
fmul
lea
cmc
xchg
mov
retf
pop
push
cld
cmps
lahf
push
cmp
xchg
shl
push
lahf
xchg
inc
add
lods
mov
lods
dec
jmp
outs
adc
push
jle
mov
shr
xchg
dec
out
gs
jns
push
pop
std
jle
ss
push
jecxz
ret
jns
nop
push
int3
cmp
ss
cdq
xchg
sbb
mov
push
push
jns
mov
xor
retf
mov
add
hlt
movs
rcl
and
(bad)
je
loop
mov
fld
out
call
icebp
pop
nop
clc
adc
or
out
cmps
dec
add
les
repz
cli
ds
mov
sbb
test
push
sub
pop
push
ss
push
push
cs
retf
cmp
in
push
cmp
sub
sub
retf
shr
and
xor
pop
pop
xor
popa
jnp
adc
mov
pushf
cli
and
xor
iret
or
jge
sbb
and
lods
fldcw
lods
not
addr16
xor
dec
add
jmp
sbb
and
adc
add
lea
jecxz
add
mov
(bad)
rcl
out
push
repnz
pop
in
data16
mov
mov
jno
jb
cmc
add
mov
jecxz
or
shl
inc
aas
jo
push
pop
add
movs
xchg
les
cmp
xchg
push
pop
sbb
jmp
sub
sbb
fs
lods
and
and
enter
push
popf
xchg
and
add
repnz
mov
cwde
out
jae
inc
xor
fst
xor
xchg
sti
div
out
jns
or
jecxz
and
adc
not
sub
sub
cmps
or
pop
sub
sub
mov
dec
clc
neg
cmp
push
mov
(bad)
ins
jae
pop
lock
cdq
(bad)
inc
shl
inc
fs
push
pop
stc
mov
cmp
jae
cmps
jmp
cwde
sub
pushf
rcl
sbb
repz
adc
cmps
xchg
and
or
jbe
cwde
stc
dec
repz
repnz
mov
jmp
loopne
xor
je
pusha
(bad)
mov
or
or
data16
gs
fidiv
inc
enter
or
sub
neg
les
xor
and
mov
adc
jne
mov
sbb
out
xchg
jb
out
hlt
icebp
dec
add
scas
mov
mov
lds
mov
inc
add
xchg
ja
mov
mov
sar
or
xor
xor
inc
or
repnz
mov
or
jp
cmp
xor
sub
mov
imul
test
dec
scas
clc
sbb
jp
or
pop
adc
cmovs
or
xchg
xlat
xchg
test
inc
ret
outs
scas
jmp
and
mov
into
btc
loopne
xchg
mov
into
and
rcl
sbb
outs
sub
mov
loope
inc
or
loope
je
xor
jmp
test
mov
stos
mov
fcmovb
pop
lahf
ja
xor
add
xchg
rol
add
out
(bad)
(bad)
out
pop
jnp
push
xor
out
fsub
test
xor
push
aad
mov
pop
mov
dec
shl
mov
dec
movs
and
addr16
mov
mov
pop
test
inc
mov
repnz
adc
lahf
mov
adc
add
and
lods
lods
hlt
or
cmp
cld
mov
push
add
mov
pusha
and
cmp
js
(bad)
pop
les
mov
retf
popf
loopne
adc
dec
mov
lea
dec
enter
(bad)
lods
mov
sub
test
mov
xchg
push
int
bound
mov
dec
mov
pop
adc
mov
lea
mov
xor
add
pop
jmp
setl
sbb
scas
lea
cli
or
lods
mov
sbb
icebp
jb
scas
outs
dec
shl
mov
xchg
js
xchg
mov
sti
xlat
xor
inc
sub
xor
dec
add
jmp
in
scas
sahf
dec
cs
daa
or
(bad)
and
movs
rcr
popa
sbb
add
xchg
pop
(bad)
xor
inc
(bad)
nop
xor
iret
xchg
fiadd
push
data16
popa
dec
xchg
mov
mov
and
push
adc
push
jmp
fs
fstp
mov
cmp
(bad)
push
jle
pop
mov
mov
adc
mov
(bad)
dec
(bad)
mov
int
ds
adc
call
fsubr
and
jnp
and
jb
sub
iret
mov
adc
ret
(bad)
(bad)
or
mov
mov
cli
and
jge
jno
mov
out
xor
lds
xor
inc
in
ins
sub
imul
cs
mov
movs
mov
jp
inc
sti
out
mov
retf
mov
xchg
out
shl
xchg
leave
cmp
icebp
aas
xor
sub
std
loopne
sbb
fisub
add
sbb
call
hlt
and
pop
ins
ret
sbb
dec
sbb
push
loopne
xlat
fsubr
fld
mov
add
test
mov
jl
or
retf
or
(bad)
jnp
mov
xchg
jne
pop
and
jecxz
leave
mov
sbb
clc
mov
mov
push
dec
lds
mov
sub
dec
sbb
bound
loope
adc
sbb
add
jno
sbb
icebp
push
es
xor
repnz
mov
xlat
pop
scas
stos
mov
xchg
add
ret
jmp
xchg
sbb
xor
pop
sbb
and
pop
xor
adc
adc
jo
out
sbb
sub
push
dec
in
mov
cmp
stc
sahf
mov
cmp
jno
fist
(bad)
lods
cmps
or
cmp
cli
in
pop
inc
fwait
lahf
div
adc
sbb
icebp
in
in
sbb
push
push
mov
out
sti
es
loopne
ror
dec
push
repz
cmp
mov
jns
mov
neg
rcr
movs
pop
lea
test
add
mov
xchg
fmul
inc
xchg
dec
and
std
enter
dec
sbb
jp
jns
mov
add
ja
push
sub
out
dec
push
into
push
mov
dec
and
out
xor
jo
sbb
mov
jle
sub
cmp
lahf
mov
in
jge
dec
jl
bound
jmp
(bad)
lea
mov
adc
xor
popa
pop
ret
add
shl
(bad)
cmp
cs
push
cwde
xor
sbb
pusha
jns
dec
xchg
mov
lahf
xlat
add
cld
fcmovbe
es
push
std
cmps
pop
aas
or
imul
xchg
fs
pushf
mov
jg
test
aas
sti
xchg
jg
or
mov
push
and
dec
push
jbe
loopne
inc
loope
ud2
mov
sbb
dec
test
mov
lods
aam
fwait
xchg
xchg
inc
dec
dec
inc
mov
iret
les
cmp
nop
xor
cmp
inc
std
enter
xor
inc
daa
mov
adc
sub
mov
and
xor
or
xchg
mov
pushf
(bad)
ror
in
mov
inc
xor
or
mov
cmc
pop
aad
push
and
ficomp
mov
lahf
push
pop
add
mov
jmp
clc
stos
das
dec
add
dec
jnp
out
push
sub
retf
cmp
cdq
rep
mov
mov
cmp
and
inc
mov
enter
movs
cmp
lds
fcomp
push
imul
xchg
fdiv
dec
and
pop
imul
pop
out
arpl
nop
js
(bad)
sbb
jmp
push
jmp
adc
xchg
dec
dec
(bad)
jmp
lds
sbb
sub
push
outs
mov
dec
mov
call
sbb
jno
and
mov
sbb
xchg
jg
es
pop
push
xchg
cs
inc
push
push
and
add
cmp
lock
xor
mov
(bad)
xchg
repnz
mov
sbb
(bad)
out
(bad)
jecxz
in
movs
sub
xchg
adc
lea
jbe
or
hlt
and
inc
mov
ret
xlat
imul
test
arpl
out
cmp
sahf
outs
mov
mov
aaa
lock
sub
pop
sbb
stc
mov
pop
es
or
jmp
int
scas
mov
lock
test
leave
adc
jne
(bad)
fst
lds
push
mov
xchg
xchg
inc
push
sub
je
popf
and
jl
cmp
cmc
xor
sbb
jns
lea
cmp
ror
add
inc
mov
sbb
call
or
fnstsw
xor
arpl
loope
sbb
sbb
repnz
push
jae
pop
xor
test
cmps
inc
popf
test
clc
sub
xor
fwait
retf
push
test
pop
and
pop
mov
add
lods
xchg
bndstx
pop
inc
adc
in
mov
pop
mov
and
inc
jns
fdivr
or
jb
sub
jecxz
pop
jg
icebp
or
mov
sbb
das
xchg
ret
mov
leave
push
add
fdiv
cmp
fadd
sub
(bad)
je
or
out
cmp
ds
(bad)
lods
push
and
sub
push
sub
jnp
xchg
ins
stos
retf
outs
xchg
dec
out
adc
cmp
jmp
push
mov
into
xor
add
sub
mov
inc
fnstsw
jns
inc
hlt
jns
mov
push
or
add
cmp
out
loop
fst
jmp
imul
pop
and
cmc
or
inc
aas
sub
adc
jle
in
mov
fs
adc
fild
retf
je
jno
mov
cwde
imul
fstp
add
sbb
jbe
pop
and
(bad)
pop
hlt
lds
cmp
xchg
fwait
mov
cwde
and
adc
add
call
cmps
outs
into
or
xlat
xchg
hlt
jno
push
inc
mov
(bad)
(bad)
sub
into
xor
and
mov
pop
stos
pop
mov
loope
dec
cs
lds
cmp
jb
push
cmp
aas
popa
out
cs
fwait
sub
not
push
ret
mov
pop
in
xor
xchg
dec
je
rcr
ret
pop
popa
mov
shl
mov
aas
adc
adc
movs
mov
xor
and
pushf
les
dec
ss
push
jp
mul
pop
aam
aam
stc
sub
sub
or
fdiv
das
inc
adc
add
mov
inc
xor
jl
xor
hlt
lods
jp
frstor
mov
fwait
mov
cmp
nop
mov
mov
add
xor
pusha
push
jl
repnz
fst
lahf
popa
rcr
sub
(bad)
stos
and
das
xor
stc
cmp
dec
fsubr
add
and
cmp
or
in
jb
ins
mov
push
jge
inc
mov
adc
adc
mov
mov
loope
cmp
and
stc
movs
stc
cmps
test
cmp
adc
mov
ret
stos
sub
je
into
inc
les
jne
cmovge
inc
loop
and
iret
arpl
sbb
jle
pop
(bad)
sub
inc
jmp
daa
cdq
xlat
xchg
push
push
pusha
(bad)
jno
cmp
in
mov
adc
test
push
lods
dec
nop
push
sbb
les
scas
loopne
neg
adc
push
and
aas
pop
mov
pop
or
stos
cli
mov
inc
popa
je
jb
sub
jle
shl
sub
(bad)
pop
out
iret
imul
cmp
out
sbb
test
push
lods
inc
enter
(bad)
adc
(bad)
cwde
xchg
and
xchg
cmps
dec
shl
hlt
or
or
in
scas
ret
cmp
aam
jge
icebp
xlat
loop
outs
xchg
fsubr
pop
ins
and
pushf
mov
jmp
push
pop
out
icebp
cmp
out
inc
or
cmp
push
dec
sbb
mov
pusha
mov
mov
sar
xchg
clc
out
mov
stos
in
mov
jle
mov
or
retf
lods
xchg
bnd
frndint
xor
fucom
jmp
mov
cmp
jns
inc
jle
shl
push
mov
cmps
pop
aam
xchg
test
adc
test
push
xor
mov
dec
mov
test
(bad)
jle
cs
mov
add
ss
cmps
das
and
(bad)
xor
jecxz
inc
imul
retf
push
mov
xor
xchg
xchg
cmp
int3
xor
shr
push
adc
idiv
mov
ret
mov
push
xchg
in
lahf
repz
mov
test
cmps
adc
or
(bad)
fs
push
stos
pop
les
lock
aad
movs
jmp
std
cmp
sbb
or
sub
in
pushf
push
jno
jo
and
out
mov
cmp
popa
(bad)
mov
ret
adc
adc
sti
adc
and
sub
test
push
cdq
push
repnz
xchg
inc
push
jnp
pop
xor
jns
push
int
ss
mov
in
xlat
dec
sub
jp
mov
ss
and
sub
jge
mov
out
add
movs
mov
cmp
dec
enter
xor
mov
adc
dec
das
sub
retf
mov
repz
mov
xchg
mov
test
nop
loope
xor
add
mov
lahf
test
push
xchg
fcom
inc
dec
(bad)
push
lods
sbb
pop
mov
out
xchg
add
mov
sbb
imul
push
imul
imul
mov
push
adc
mov
ja
cmp
shl
aam
out
push
adc
movs
fsubr
inc
enter
in
mov
mov
pusha
adc
push
fisub
adc
cmp
mov
fs
mov
(bad)
stos
cmp
es
wrmsr
lock
push
or
call
out
mov
push
mov
add
adc
popf
test
pop
pop
aam
push
jg
out
sbb
xor
or
call
adc
mov
add
loope
pop
js
imul
in
in
inc
xor
rep
les
out
or
cmp
les
ret
pusha
mov
ret
or
fstp
and
pop
sahf
in
and
mov
adc
cmp
adc
out
mov
inc
fwait
mov
or
lock
push
mov
call
cmp
dec
bound
leave
fldcw
(bad)
aas
mov
repnz
shl
push
ror
sub
pop
es
mov
sti
ret
and
lods
adc
in
imul
and
xchg
aam
iret
jecxz
jnp
stos
add
lods
push
mov
sahf
xchg
shl
(bad)
adc
xor
jne
nop
xor
hlt
cmc
push
mov
jno
jb
mov
jnp
out
and
fs
sub
(bad)
retf
mov
push
sbb
push
xchg
xchg
sahf
pop
outs
fwait
pop
call
sub
rcr
xor
js
inc
push
inc
sbb
xchg
pop
xchg
imul
leave
gs
cli
jl
es
shl
int3
jo
push
sbb
mov
fcom
sbb
mov
and
call
jbe
xor
sti
dec
pop
loope
stos
sti
push
pop
fs
sub
lea
hlt
adc
adc
loope
add
dec
popf
leave
mov
fdivr
push
repz
mov
and
xchg
pop
add
pop
cmp
std
stos
in
test
inc
nop
dec
hlt
push
aas
dec
jns
les
mov
test
dec
dec
stos
jo
mov
pop
rol
or
mov
and
inc
bnd
add
shr
daa
js
nop
add
lods
stos
(bad)
cdq
aas
mov
adc
(bad)
icebp
daa
add
adc
jo
sbb
push
inc
sub
in
inc
inc
xchg
mov
and
in
jge
or
pop
pop
call
mov
mov
dec
jmp
cld
retf
(bad)
fdivr
fwait
lock
das
jmp
enter
or
xor
and
out
in
push
clc
dec
lods
or
jmp
dec
test
or
cs
mov
xchg
rol
test
push
or
test
mov
sub
sbb
scas
pop
mov
ss
add
xor
(bad)
cmp
mov
shl
mov
push
push
pop
or
movs
xor
cmp
test
neg
jmp
fdiv
cmp
sbb
outs
pop
pusha
pushf
lock
sub
adc
sahf
push
fsub
aad
jne
mov
xchg
jo
sbb
mov
xchg
repnz
and
jno
add
retf
ja
sbb
jne
jmp
rcr
sbb
jl
add
jmp
and
xchg
out
lahf
and
add
addr16
ds
cmc
and
and
pop
dec
cmp
enter
and
sub
mov
std
mov
and
out
pop
xchg
shr
ret
fstp
mov
mov
pop
jne
repz
in
jns
stos
pop
and
mov
inc
in
test
pop
icebp
jae
pushf
(bad)
mov
pop
pop
ret
loopne
or
movs
xor
dec
inc
bound
fsub
sti
adc
mov
mov
or
pop
push
adc
mov
cmp
stos
pop
or
cwde
movs
mov
mov
cdq
into
js
test
stos
loop
loope
call
mov
in
cmp
mov
ja
add
mov
sti
and
xchg
inc
icebp
es
mov
arpl
xchg
fs
icebp
push
mov
outs
iret
xor
dec
mov
lds
jg
loop
and
mov
in
sub
stc
push
adc
mov
mov
loopne
jb
and
enter
cmc
xchg
push
and
(bad)
mov
jmp
jl
sbb
movs
(bad)
(bad)
(bad)
cdq
(bad)
aas
adc
(bad)
sub
(bad)
dec
shl
leave
mov
jge
mov
mov
leave
fwait
std
mov
xor
mov
dec
mov
jecxz
in
sub
fwait
push
mov
xchg
imul
mov
aam
fwait
idiv
mov
xchg
dec
sbb
cmp
dec
pop
jae
sbb
adc
mov
stc
xor
sahf
mov
sahf
movs
lahf
leave
push
test
in
jmp
push
mov
(bad)
mov
idiv
gs
(bad)
xchg
(bad)
jmp
mov
mov
xor
rcl
out
fcomp
adc
(bad)
cdq
out
mov
jnp
outs
lods
ds
push
rcl
jl
mov
(bad)
mov
cmp
sbb
push
sbb
out
add
mov
(bad)
(bad)
pusha
(bad)
pop
ss
sub
mov
jmp
das
ins
adc
pop
jge
(bad)
xor
(bad)
fimul
sub
aad
push
xchg
out
adc
call
xchg
(bad)
push
sub
mov
or
pop
nop
or
xadd
lods
push
sub
or
lock
rcr
or
test
pusha
scas
and
mov
jo
push
push
stos
jecxz
(bad)
jp
cmp
ret
add
cmps
pop
fwait
dec
xor
dec
push
adc
sti
inc
mov
cwde
hlt
out
xchg
pop
dec
cmp
fwait
das
lea
mov
test
mov
inc
test
out
std
xchg
shl
or
mov
rcr
jmp
shl
xor
arpl
mov
stos
inc
adc
int3
jne
sbb
cmps
push
call
jbe
mov
sbb
out
and
adc
dec
shl
pop
pop
lock
nop
bound
loop
(bad)
mov
push
fbstp
call
lea
mov
js
jns
out
jae
loope
cwde
int
push
add
int3
jno
xchg
push
add
add
inc
mov
es
test
lea
fwait
inc
(bad)
in
test
sahf
and
(bad)
lea
fisubr
lds
mov
enter
nop
jmp
setnp
icebp
ins
inc
mov
fimul
sub
lea
mov
cmp
ss
xchg
mov
add
pop
dec
xor
inc
into
sti
or
mov
jmp
das
gs
dec
stos
aas
mov
retf
xchg
in
jb
imul
sbb
(bad)
mov
loopne
pop
jb
xchg
cmp
bound
test
add
into
pop
add
adc
jnp
and
mov
add
sbb
cld
mov
(bad)
ret
aas
add
mov
xchg
sub
iret
mul
cmp
xchg
in
jle
sbb
call
out
or
idiv
ins
retf
xchg
iret
mov
push
sbb
sbb
emms
adc
cwde
repnz
dec
loopne
inc
mov
icebp
ja
repz
daa
cmc
out
lds
enter
mov
jb
pop
or
(bad)
mov
cmps
repz
jge
mov
call
repz
pop
dec
inc
mov
cmp
mov
add
scas
sub
sbb
inc
xchg
mov
lahf
imul
cs
xlat
mov
xchg
sar
adc
repnz
cmp
out
shl
push
(bad)
mov
sub
add
(bad)
jge
arpl
mov
xchg
loope
adc
add
or
adc
(bad)
ss
push
cmps
nop
in
mov
mov
xchg
xchg
cmps
sbb
dec
xchg
or
aam
arpl
xchg
neg
pop
cld
pushf
cdq
aas
sub
jle
sbb
or
mov
pop
outs
out
gs
in
gs
xor
mov
xchg
mov
call
add
push
push
pop
mov
cmps
outs
rcl
(bad)
fxtract
and
xor
pop
into
or
sub
aaa
ds
jno
dec
imul
into
xchg
add
hlt
xrelease
out
mov
cld
pop
sbb
call
stos
adc
ins
mov
jnp
pop
pop
push
push
adc
das
mov
jecxz
retf
jns
jbe
ret
inc
(bad)
retf
xchg
lds
push
pop
adc
sbb
jp
mov
(bad)
ds
dec
daa
inc
pop
lea
or
imul
popa
mov
push
ins
nop
xlat
aad
add
cwde
inc
pop
nop
sub
(bad)
out
ja
jge
jno
in
in
cwde
pop
jge
inc
push
(bad)
jge
out
ins
(bad)
jo
(bad)
push
xchg
in
imul
(bad)
shl
push
retf
xchg
(bad)
sti
inc
gs
cmp
xor
std
jge
jnp
ret
xchg
inc
jmp
je
cdq
int
push
fbstp
xor
std
ja
fwait
cld
push
jmp
movs
xchg
cli
mov
cli
jne
clc
arpl
mov
retf
(bad)
fstp
ror
cmps
loopne
retf
std
xor
sub
add
jmp
or
jo
rcr
pop
xor
jle
int
sub
mov
mov
and
pop
imul
pushf
push
inc
lods
and
lods
push
(bad)
xchg
pop
leave
cmp
sbb
jo
lds
cli
cmc
das
sbb
or
movs
repnz
retf
xor
and
inc
or
or
add
div
mov
dec
push
mov
inc
add
stos
sbb
jae
jmp
or
movs
add
inc
cld
test
call
mov
pop
jmp
pop
leave
sbb
movs
test
jmp
add
out
out
test
gs
stos
xor
jge
cmp
arpl
dec
xor
in
inc
retf
in
sub
out
push
jmp
push
jle
je
shl
xor
dec
loopne
ins
push
div
mov
push
in
out
icebp
jmp
sub
dec
stos
push
mov
les
cmp
outs
test
int3
inc
(bad)
out
and
dec
fsubr
inc
adc
movs
mov
jo
jp
pop
repnz
push
movs
cmps
dec
imul
lea
test
ds
push
push
inc
add
pop
dec
adc
sti
lock
jnp
fs
cmps
cmc
cmc
aas
pop
and
xor
in
sbb
xor
(bad)
in
lods
jl
cmp
fs
adc
and
enter
jp
push
push
add
lods
inc
push
cmp
sbb
dec
add
(bad)
loop
mov
xchg
adc
sar
xchg
call
sbb
xlat
leave
inc
dec
dec
in
mov
cmp
pop
clc
ins
sbb
xchg
iret
popa
pop
add
mov
rcl
into
dec
or
and
movs
push
std
dec
add
dec
outs
push
adc
xor
jmp
stos
add
mov
dec
sti
aas
mov
xor
pop
jns
jg
test
daa
pop
lods
popf
xchg
fs
xor
cli
dec
mov
ror
in
add
pusha
cmp
dec
push
and
mov
pop
test
sar
std
scas
movs
ret
xchg
addr16
push
fisubr
retf
jecxz
iret
push
sbb
call
ret
or
and
or
scas
(bad)
repz
add
or
mov
icebp
sbb
jb
jmp
vpcmov
es
sbb
rcr
scas
lods
and
inc
xchg
pop
xchg
ins
sbb
retf
xor
hlt
pop
scas
jnp
mov
or
retf
sbb
ja
sbb
cmp
aam
cld
or
arpl
in
cmp
jmp
cmc
dec
lock
or
mov
or
push
popa
add
ret
push
imul
bound
pop
movs
mov
jnp
dec
cmp
sub
out
dec
pop
add
cmps
imul
pop
stos
cmps
ror
push
aaa
sub
stos
cmp
pop
cmp
pushf
rcl
call
add
or
fs
rol
xor
push
sbb
test
mov
inc
fldenv
push
jle
cli
jne
bound
mov
xor
pop
pop
sbb
gs
test
mov
movs
jmp
dec
in
aas
rcl
dec
or
in
mov
xchg
mov
xor
je
leave
rol
stc
aaa
cmp
popa
arpl
rol
add
jne
sub
iret
clc
mov
pop
or
adc
fcomp
test
sti
and
or
cli
xchg
outs
stc
adc
cs
sbb
lds
jg
bound
cdq
jns
stos
adc
dec
xor
pop
imul
add
cwde
jo
popa
or
dec
mov
mov
fisub
add
mov
outs
jb
dec
pop
leave
cmp
push
inc
or
sar
gs
das
add
bound
sti
mov
test
dec
jp
imul
and
icebp
mov
inc
mov
cmp
mov
leave
movs
into
(bad)
popf
mov
mov
idiv
or
pop
hlt
stos
push
test
add
pop
mov
shl
ins
shl
pop
dec
enter
repnz
in
setae
ret
mov
std
xchg
es
stos
pop
into
fwait
or
push
jae
push
jle
addr16
jo
and
je
mov
(bad)
dec
scas
mov
lea
sub
push
mov
stos
push
(bad)
loopne
pop
jo
je
clc
loopne
outs
jmp
sbb
pop
push
shr
stc
jns
sbb
cld
pop
into
jne
pop
mov
sub
jbe
das
push
imul
dec
(bad)
into
fst
cmp
sbb
cmp
or
and
ins
mov
sbb
push
psllw
adc
retf
adc
ja
pop
jb
outs
dec
or
repz
shr
mov
xchg
mul
lea
jp
inc
xchg
or
xor
cmp
rcr
push
cmp
push
cmp
cmp
cs
xlat
xchg
ins
mov
push
scas
cs
(bad)
sbb
mov
push
mov
jmp
cmp
js
mov
inc
cmps
mov
xor
push
add
sub
aad
mov
or
aam
xchg
xchg
fimul
cmp
sti
fisttp
les
pushf
out
std
xor
xor
not
loope
sahf
call
adc
inc
sbb
jns
out
mov
aad
lods
mov
dec
mov
push
test
and
in
and
dec
jmp
mov
cmp
fdivr
and
dec
repz
cmps
sbb
add
inc
jmp
ror
xchg
inc
adc
add
push
or
(bad)
inc
pop
xchg
xchg
or
push
out
adc
popa
xor
sbb
fninit
or
inc
xor
sbb
cli
fidivr
hlt
sbb
nop
pop
pushf
add
sbb
fimul
pop
(bad)
shr
and
and
ds
popa
push
popf
daa
test
sahf
btr
fst
mov
loopne
pop
sbb
pop
mov
push
aam
popf
stos
int3
sbb
test
call
jne
in
ins
je
pop
mov
pushf
cli
or
inc
aad
mov
imul
add
xor
xchg
pop
or
scas
aaa
jecxz
mov
inc
retf
adc
std
sbb
inc
add
cmp
cdq
daa
fist
call
retf
repnz
mov
mov
mov
out
pop
shl
pop
mov
mov
jg
inc
popa
add
jl
cmc
mov
mov
sub
push
sub
pop
sahf
mov
cmps
dec
mov
sub
jbe
lods
push
jno
pop
lds
shl
gs
push
inc
or
mov
(bad)
out
adc
pusha
inc
sahf
out
cli
ins
jmp
imul
out
jno
lods
pop
xor
mov
inc
jbe
mov
dec
pop
sbb
cmp
adc
iret
loopne
(bad)
aaa
cwde
mov
xor
sbb
mov
mov
mov
and
(bad)
and
push
les
outs
out
dec
add
fild
mov
imul
std
jp
dec
add
(bad)
xchg
inc
cmp
popa
mov
pop
and
addr16
xor
pop
xchg
sbb
pop
jbe
vmwrite
enter
sub
retf
add
int
int3
inc
cmps
aad
mov
movs
adc
xchg
shl
mov
cmp
frstor
mov
lea
lods
inc
outs
mov
pusha
lds
aad
xchg
sub
jge
popa
mov
retf
or
add
movs
pop
mov
(bad)
mov
out
fdiv
push
sbb
add
dec
push
cld
sti
lock
adc
cs
popa
adc
xor
sub
lods
xor
imul
mov
mov
mov
fimul
xchg
fnstenv
std
or
mov
cmps
and
call
cld
ss
push
dec
scas
out
pop
dec
push
test
enter
sub
popf
mov
inc
sub
or
addr16
lahf
ret
jmp
pop
retf
and
mov
add
shr
pop
add
jp
pop
xchg
xor
movs
(bad)
sbb
out
in
inc
ss
and
push
cmps
xor
(bad)
fist
mov
sbb
lock
sbb
adc
push
jmp
inc
es
(bad)
cmps
test
dec
in
fistp
ficomp
mov
gs
and
test
push
lea
(bad)
jmp
and
adc
adc
sub
push
add
xchg
cld
lds
mov
push
cmc
fcmovnu
xchg
shl
pushf
fnstsw
adc
fiadd
jp
xor
jbe
int3
fdiv
cs
dec
add
mov
mov
mov
push
jbe
shr
in
pushf
pop
mul
clc
int3
aaa
std
jns
dec
dec
and
(bad)
mov
xor
or
pop
cdq
aam
jge
jmp
cmps
and
add
out
jp
rcr
pushf
mov
mov
add
pop
dec
sbb
cmc
in
jmp
xlat
jge
ret
mov
pushf
push
adc
stc
cmp
call
movsd
add
mov
xchg
cmps
(bad)
js
jmp
sar
les
fs
es
cmps
xor
mov
test
inc
into
jo
xchg
adc
push
mov
call
or
cli
loopne
stc
cmp
push
add
xchg
cmps
push
push
add
ins
inc
cmp
xchg
call
(bad)
pushf
out
jle
cwde
jl
in
jb
push
scas
jecxz
mov
sbb
push
in
push
lea
repz
mov
xor
push
inc
addr16
jae
mov
cwde
sub
pushf
test
cmp
test
sbb
pusha
push
pop
and
and
mov
mov
xchg
inc
or
outs
dec
inc
sub
jnp
pop
jg
cmp
sti
shr
into
cli
imul
push
cmp
int
xor
and
sahf
movs
stos
pop
xchg
sahf
test
pop
jge
gs
hlt
(bad)
sub
xchg
add
pop
retf
inc
pop
nop
fcomp
movs
fwait
ror
dec
xor
call
adc
xor
and
cdq
mov
xchg
push
minps
loopne
sbb
mov
out
inc
rcr
add
jmp
mov
int
xchg
dec
inc
aam
inc
stos
out
imul
nop
inc
jnp
(bad)
jle
cwde
iret
xchg
pop
repz
sbb
shl
cmp
mov
(bad)
aad
stos
xor
sub
adc
loopne
or
cmc
(bad)
cli
rcr
mov
in
jns
push
cmp
dec
mov
xor
leave
dec
adc
jno
inc
shr
sti
clts
or
jno
inc
push
dec
inc
test
mov
add
lock
cmc
jbe
cwde
test
adc
xchg
loop
pop
xor
in
dec
adc
dec
fmul
(bad)
jecxz
loopne
loope
sbb
adc
pop
mov
sahf
mov
xor
aad
in
mov
mov
push
ds
xchg
and
mov
sbb
pop
add
sbb
repz
ds
jno
sti
out
mov
in
adc
pushf
dec
pushf
cmps
in
jmp
loopne
cmp
outs
fcom
jne
inc
clts
bound
mov
mov
fcom
inc
fst
xchg
jbe
fcomp
in
sub
gs
adc
fisttp
adc
and
fistp
sbb
jb
or
xchg
ret
lds
adc
dec
inc
cmps
lahf
mov
xchg
xchg
movs
inc
mov
cmp
imul
arpl
mov
ret
ret
pusha
out
das
xlat
mov
cmp
pop
jmp
mov
mov
scas
stos
cmp
xor
(bad)
jo
scas
jecxz
out
jmp
mov
fst
push
jns
add
pop
into
movs
mov
in
cmp
mov
scas
xchg
lods
das
push
movs
cmp
push
pop
cmps
add
rcl
mov
icebp
mov
xchg
add
popf
jg
enter
out
retf
push
dec
in
retf
inc
mov
loop
push
es
add
sbb
sbb
imul
ss
pop
out
sub
aaa
jbe
xor
call
and
push
aaa
or
and
fwait
inc
cmps
dec
pop
lods
test
cmp
adc
pop
popa
je
data16
loopne
inc
imul
pop
outs
fidivr
pop
mov
mov
mov
or
xor
arpl
xchg
xchg
jmp
mov
fsubr
pop
inc
sub
test
xor
push
out
push
push
pop
popa
add
cmp
dec
push
lds
in
xlat
or
jns
and
call
mov
ds
stos
out
push
sub
and
repnz
scas
(bad)
mov
repnz
fst
inc
jecxz
pop
cld
push
pop
repnz
cld
xor
pop
stos
rol
mov
clc
sbb
repnz
jns
and
daa
scas
or
sti
push
inc
mov
cli
inc
fcmovbe
mov
mov
mov
sbb
test
(bad)
mov
(bad)
popa
aas
ret
dec
dec
js
push
xor
mov
leavew
push
adc
or
cmps
pop
mov
mov
mov
int3
aam
shl
mov
ins
xor
in
retf
xlat
call
les
gs
add
jbe
push
clc
ins
mov
or
xor
ins
xlat
push
jg
scas
add
movs
mov
adc
stos
pushf
xor
repnz
dec
push
mov
lock
pop
fs
or
add
mov
or
xor
mov
pusha
pop
(bad)
sub
(bad)
push
shl
out
dec
popf
pop
add
and
or
push
das
and
and
add
ficom
ficom
and
adc
mov
pop
aam
mov
push
mov
imul
mov
shr
jmp
fcmovu
hlt
dec
add
jbe
sub
call
mov
les
inc
sbb
sub
mov
push
or
outs
test
enter
arpl
or
mov
jmp
inc
retf
hlt
clc
leave
mov
push
sub
fs
in
daa
out
ja
xor
lods
xchg
sub
movs
(bad)
bound
jg
mov
imul
cli
stc
loope
aam
movs
ja
jg
push
dec
push
pop
ss
jne
mov
sub
shl
nop
pop
or
test
and
movs
ret
dec
ret
js
popa
shl
sub
fstp
not
aam
cli
test
sbb
or
imul
xor
mov
pusha
dec
inc
and
cmp
sbb
sub
sbb
push
mov
or
pusha
pop
in
mov
cmp
jb
dec
les
imul
adc
jmp
test
(bad)
ret
push
cmps
jmp
push
mov
in
adc
(bad)
loop
repnz
mov
js
or
mov
fst
rol
(bad)
xchg
rol
mov
fistp
and
sub
dec
ins
sbb
movs
jno
mov
cmps
ret
push
(bad)
xlat
pop
cmc
ret
push
popa
inc
imul
pop
cmp
aaa
mov
loop
adc
jecxz
enter
sbb
or
scas
or
jmp
push
xor
push
or
ins
xchg
lahf
movs
mov
test
je
push
das
sar
out
sbb
icebp
or
mov
or
pop
pop
aas
retf
lahf
pop
daa
inc
or
sub
add
xchg
mov
xor
ja
mov
sbb
fwait
or
mov
imul
sbb
mov
pop
mov
lods
inc
xchg
xor
dec
pop
pop
stos
push
push
cmp
fadd
pushw
out
pop
and
in
outs
out
inc
sub
pop
or
movs
pop
xor
inc
and
fcomp
cmp
push
scas
bound
jl
and
mov
je
xor
call
retf
xchg
fadd
aas
adc
out
push
arpl
(bad)
loop
xor
lds
shl
jne
cmp
ss
adc
jecxz
lds
push
mul
xor
push
aas
mov
test
ds
mov
jge
pop
pop
enter
adc
test
or
out
scas
jg
fidivr
test
pop
sbb
out
mov
or
repz
mov
jae
es
mov
xchg
sar
cmc
cmp
mov
std
add
push
clc
xchg
or
mov
push
aad
mov
add
mov
loopne
mov
sbb
cmp
pop
bound
push
jmp
cmc
inc
and
cs
aam
push
mov
ins
(bad)
xor
mov
std
xchg
int3
jne
mov
mov
push
popa
loope
mov
sbb
xor
xor
in
test
mov
xlat
ror
adc
enter
cli
inc
mov
adc
(bad)
xchg
mov
sbb
clc
(bad)
outs
pop
imul
push
cmp
xchg
xlat
lea
mov
repnz
xor
add
mov
loop
sbb
dec
mov
xchg
and
push
xor
xor
fcomp
xor
ret
pop
adc
shl
cmps
in
int3
out
pop
pop
jne
daa
outs
hlt
rcl
jb
fistp
add
je
imul
jno
imul
into
mov
push
retf
or
das
sbb
pop
dec
jge
les
mov
pop
inc
add
push
mov
movs
cmp
and
mov
imul
mov
add
or
mul
push
xchg
add
ds
pop
inc
into
adc
add
fcmovnb
stc
mov
inc
mov
js
je
and
xchg
add
xchg
fucomp
push
call
imul
test
popa
push
out
and
popw
jp
mov
xchg
inc
ds
sar
mov
in
add
adc
pushf
adc
sub
xor
mov
push
xor
(bad)
fidivr
mov
addr16
mov
mov
int
mov
push
ret
lds
popa
mov
imul
and
mov
inc
jb
mov
mov
sub
sbb
jmp
jge
or
jae
jns
scas
jnp
adc
mov
xchg
loop
jae
pop
pushf
cwde
jno
arpl
push
movs
dec
in
pop
jae
mov
test
xchg
loop
lods
add
out
sbb
repz
(bad)
cmp
je
loop
xchg
jo
dec
jb
dec
(bad)
mov
cld
(bad)
aam
dec
xor
jns
xor
push
sub
mov
outs
rcr
pop
dec
lods
mov
ror
mov
add
mov
xor
sub
add
mov
(bad)
out
gs
cmp
mov
or
xor
mov
and
ret
cmp
int
(bad)
dec
adc
inc
adc
ins
movs
lea
shl
xor
(bad)
inc
popf
cmp
xor
jge
cmpxchg8b
(bad)
int3
jae
popa
mov
lods
cs
adc
push
and
je
add
add
lods
add
adc
cmp
adc
pop
ffree
add
test
mov
in
data16
fnsave
mov
dec
je
addr16
xor
pop
jmp
jmp
ins
xor
aaa
cmp
push
dec
sbb
mov
xor
(bad)
adc
or
cmps
xchg
imul
or
les
fnstsw
push
(bad)
outs
push
or
das
and
inc
inc
sub
adc
out
mov
and
(bad)
fist
jecxz
mov
mov
retf
(bad)
jmp
sub
push
ins
adc
add
pusha
call
dec
jmp
cmp
sub
push
or
adc
cmp
lahf
adc
sub
sub
mov
sbb
push
mov
add
addr16
add
or
lods
or
pusha
sahf
mov
js
sub
lock
cmp
push
push
pop
or
rcr
mov
cmp
pushf
mov
fisubr
xor
clc
loopne
cmp
push
mov
imul
sti
adc
dec
in
push
loop
mov
xor
(bad)
jmp
lahf
or
pushf
jle
aad
xchg
and
jmp
dec
imul
and
das
cwde
inc
inc
outs
xor
daa
fs
add
nop
mov
jns
dec
sub
jp
shr
push
enter
scas
mov
mov
add
sub
push
sbb
inc
pusha
fld
rol
ss
dec
retf
test
ret
mov
jp
pop
jle
mov
inc
inc
xchg
jns
mov
xchg
adc
iret
push
cmp
mov
and
jge
(bad)
out
sub
or
mov
and
sub
shl
hlt
das
jge
loope
ret
scas
xchg
sbb
test
cmp
stos
jno
arpl
inc
jno
retf
cmc
mov
and
fmulp
ret
sbb
rol
xor
add
adc
sub
inc
bound
mov
test
test
lea
dec
fiadd
and
stc
cmp
fist
fs
sub
stos
sbb
add
lss
push
or
lea
shl
inc
or
dec
jns
es
sub
popa
scas
jnp
icebp
add
sbb
in
popa
repnz
mov
inc
ss
push
lock
xor
xchg
fcomp
xor
sub
sub
out
in
xor
sti
stc
clc
xchg
sar
rol
shl
ss
mov
test
movs
add
adc
cli
rcr
rcl
(bad)
add
daa
enter
jae
aad
mov
aaa
add
cmp
push
mov
add
jno
mov
jb
dec
lea
xor
sbb
sti
pop
push
mov
adc
sti
loope
push
jge
sbb
xchg
pop
pop
(bad)
mov
daa
xchg
jge
in
bound
adc
scas
and
fnstsw
adc
rcr
push
test
add
scas
fdiv
sahf
inc
aad
xor
(bad)
movs
adc
mov
inc
dec
and
cdq
outs
inc
and
ret
add
mov
jmp
add
mov
xor
aaa
nop
pop
xchg
lea
or
and
stos
retf
movs
aas
cmps
push
in
lahf
xchg
add
jb
cmp
int
in
leave
mov
fidiv
pop
fsubp
dec
jle
mov
pusha
dec
div
jbe
aaa
cmps
cmp
mov
adc
xchg
js
retf
push
cmp
lods
jl
xor
fldcw
adc
imul
jno
shl
mov
mov
mov
pop
popf
xchg
stc
xchg
adc
fsubr
dec
inc
(bad)
pop
adc
repz
xor
adc
inc
stc
push
xor
rol
fild
loope
inc
push
lea
popf
cli
cs
(bad)
xor
adc
push
ins
dec
pop
jl
mov
mov
(bad)
into
repnz
push
mov
test
fs
sbb
add
popf
pop
sti
outs
pop
and
mov
pusha
jbe
mov
sti
cs
cmp
and
dec
jge
nop
pop
xchg
daa
or
push
fisubr
cmp
push
das
fidiv
push
(bad)
aad
xchg
ror
xchg
mov
jns
sub
and
adc
sub
dec
outs
int3
cmp
sub
push
sbb
imul
inc
inc
mov
mov
int
add
retf
jo
push
mov
mov
add
loopne
xor
inc
mov
push
and
add
or
dec
adc
jo
js
rol
add
addr16
xor
jmp
cs
xlat
add
lea
call
sar
add
call
adc
jecxz
mov
out
ss
sub
jnp
rol
cmp
dec
scas
in
int3
dec
aaa
mov
mov
addr16
mov
or
pushf
movs
mov
hlt
push
pop
adc
cmp
(bad)
jae
jg
imul
out
sbb
and
les
or
xlat
cld
adc
fdivp
stos
jb
dec
fucomi
jge
aam
nop
push
int3
(bad)
fidivr
call
mov
inc
imul
jnp
test
arpl
xor
rcr
(bad)
push
lods
out
push
xor
push
sub
sti
retf
outs
fld
loope
mov
shr
addr16
retf
pop
clc
lods
or
sub
dec
adc
shr
cli
call
xchg
sbb
jae
dec
mov
jmp
test
loope
push
and
dec
jmp
outs
dec
and
stos
movs
and
mov
jne
shl
rcl
push
or
jb
adc
outs
xor
(bad)
jg
pop
add
push
arpl
movs
or
jno
inc
rcr
stc
rcl
sub
jno
jecxz
or
retf
push
sub
cli
data16
clc
sub
jmp
and
add
dec
push
lock
cmp
mov
xor
ret
xor
push
adc
inc
jl
ret
or
out
(bad)
jg
mov
push
push
test
xor
push
jp
mov
or
mov
push
scas
in
in
repz
sub
imul
aad
mov
mov
sbb
je
pmullw
je
and
fs
inc
xchg
sbb
jp
repz
in
mov
add
mov
mov
jbe
int
out
outs
std
mov
call
jb
jno
outs
sti
push
push
fmulp
dec
jecxz
ror
inc
enter
cmps
test
es
(bad)
fldcw
and
jge
inc
scas
push
imul
out
jne
mov
xchg
xchg
push
iret
push
add
icebp
btr
inc
pop
cmp
xchg
adc
cmc
dec
sbb
or
fisubr
jbe
dec
int
or
or
call
shl
mov
pop
xchg
mov
and
push
jbe
xchg
loopne
in
lock
out
das
pop
push
les
fdiv
jae
dec
xchg
inc
lahf
xor
jo
mov
je
clc
jae
dec
mov
cs
add
cmc
ret
int3
mov
fwait
or
data16
bnd
adc
aaa
iret
dec
icebp
rcr
adc
sbb
aas
mov
mov
jle
nop
jns
rcl
or
repz
movs
in
pop
popa
imul
aas
call
int3
pop
sbb
mov
jmp
in
(bad)
pop
push
xchg
push
cmp
xchg
int3
daa
cmp
cmp
mov
dec
mov
scas
mul
aas
das
outs
cwde
gs
aad
sub
(bad)
jle
mov
push
in
cli
sub
jmp
cmp
movs
push
xchg
ss
cmps
clc
xor
jb
or
cmp
jo
data16
dec
inc
pop
dec
int
lods
inc
or
inc
mov
mov
enter
sbb
dec
xchg
stos
imul
adc
push
fwait
sbb
ret
xor
rcr
mov
lods
loop
retf
sub
inc
xchg
lea
or
jno
outs
rol
paddw
dec
push
xchg
jecxz
shl
cmp
jecxz
test
bnd
pop
(bad)
iret
sub
(bad)
loop
xchg
add
mov
lds
div
dec
sar
aad
(bad)
test
enter
xor
mov
icebp
xlat
js
xor
call
inc
mov
inc
cmps
sub
pop
xor
mov
adc
sub
cli
dec
or
sub
jp
push
jl
push
cmove
ss
push
test
add
repz
scas
pop
add
(bad)
dec
cld
leave
cmp
add
jle
(bad)
shr
mov
lock
fwait
inc
sbb
mov
sub
stos
pusha
les
enter
mov
(bad)
adc
or
mov
fucomp
clc
ins
cmp
(bad)
leave
je
lea
push
out
rcl
movs
mov
push
repz
inc
mov
cmp
or
inc
int3
sub
jg
stos
push
jne
mov
or
dec
stos
xchg
dec
cmp
call
adc
inc
sbb
std
(bad)
rcl
jb
jae
stos
dec
add
and
popa
push
mov
and
sbb
push
adc
pushf
pop
jl
mov
xchg
pop
add
js
xchg
inc
add
rol
ds
cmp
in
sar
loopne
sti
jle
iret
cmc
xchg
jp
addr16
xchg
pop
or
jecxz
call
add
add
xor
add
into
lods
in
test
sbb
outs
xor
jmp
test
cmp
mov
sbb
(bad)
popa
sub
jnp
add
retf
gs
cmc
sbb
push
div
pushw
cmp
xor
mov
xor
imul
sbb
xchg
dec
adc
ficom
repz
lea
dec
jl
aaa
aas
fidivr
cld
out
fiadd
jns
call
push
clc
add
call
sub
(bad)
loopne
punpcklbw
outs
inc
cdq
outs
loop
xor
xchg
xor
adc
imul
cs
pop
imul
and
(bad)
push
repz
adc
loope
inc
push
mov
rcl
add
xor
daa
pop
mov
add
xchg
inc
int3
inc
adc
jno
in
xor
mov
dec
icebp
into
mov
cmp
mov
ds
lahf
pop
sar
aaa
or
xor
push
sub
sti
in
adc
cmp
inc
add
add
mov
ret
lods
lock
xor
cdq
pushf
dec
adc
push
mov
fwait
and
jns
outs
jle
rcl
inc
mov
sahf
cs
push
jmp
push
jne
into
mov
into
mov
(bad)
jb
xor
mov
cs
dec
aad
inc
nop
sbb
add
lahf
mov
sub
cs
cmp
sti
adc
sub
es
push
(bad)
mov
outs
xor
add
xchg
mov
fstp
and
or
inc
movs
icebp
aam
ins
adc
in
les
mov
push
pop
push
sub
popa
inc
es
es
lea
push
dec
gs
cmp
mov
pusha
and
mov
mov
aad
cmps
arpl
cmps
mov
arpl
fcmovb
jns
scas
repnz
push
adc
ja
fmul
movs
in
jbe
jne
jmp
dec
repnz
les
cmp
mov
xchg
je
push
std
sub
mov
mov
movs
mov
inc
ins
xor
pop
int3
pop
stc
test
cmp
or
and
mov
ss
(bad)
fidivr
pop
outs
inc
and
imul
rcr
vpaddq
xchg
inc
mov
call
or
(bad)
icebp
and
aam
mov
les
jnp
std
jo
arpl
cmp
jl
jbe
in
push
jecxz
ja
aaa
out
jle
push
sar
xchg
loop
dec
and
push
inc
xor
cli
cdq
push
jno
sub
loop
daa
ss
dec
or
push
jae
gs
jge
pop
xchg
pop
mov
add
pop
cld
gs
mov
fistp
push
mov
jmp
jo
mov
fwait
and
daa
pop
and
inc
sbb
(bad)
cmp
lahf
je
mov
fistp
mov
lahf
mov
push
ss
iret
dec
sbb
cmp
push
jle
call
jo
lea
jmp
inc
mov
pop
pop
and
retf
push
aam
rcl
stos
xlat
cs
not
dec
cdq
retf
push
mov
fwait
inc
mov
add
sti
test
sahf
jmp
xor
sbb
lods
js
xchg
mul
inc
into
sub
sbb
xchg
lds
rcr
push
xchg
cmp
fistp
mov
sub
sbb
inc
adc
cmp
xchg
or
xor
inc
cmp
rcl
scas
hlt
jge
std
shl
xchg
mov
rcl
sub
test
cmp
cmp
push
xor
out
dec
ins
es
rol
test
or
push
mov
mov
mov
xchg
ret
sub
(bad)
adc
movs
xchg
xor
lahf
push
shl
movnti
pop
pusha
mov
ins
pop
outs
(bad)
mov
inc
xchg
push
dec
inc
(bad)
dec
push
sbb
repz
jmp
cdq
movs
sbb
pop
add
ror
sbb
sub
cmp
xchg
fwait
out
dec
cmp
inc
cmp
sar
push
std
fst
xlat
dec
ret
leave
push
mov
cmp
lods
(bad)
mov
xchg
mov
int3
or
out
mov
sub
xor
loopne
in
test
xor
cmp
inc
xchg
mov
push
call
in
outs
and
movs
sub
into
or
mov
aas
in
jae
cmp
or
data16
mov
cdq
or
mov
movs
out
ins
inc
scas
les
jmp
movs
fpatan
sub
rol
mov
(bad)
loopne
add
out
jecxz
aas
loope
cs
sbb
mov
lods
gs
test
aam
out
aas
push
lea
iret
into
mov
pop
aaa
or
cmp
jb
add
ja
lds
icebp
test
mov
mov
in
jp
stc
pop
adc
cmp
mov
sub
xchg
mov
cmp
cli
pop
adc
out
pop
mov
push
fdiv
and
in
xor
sbb
cli
fcom
xchg
mov
lods
xor
add
jno
cmp
shr
inc
sub
hlt
xchg
push
cld
adc
lock
call
sub
mov
add
adc
sahf
hlt
mov
(bad)
icebp
fwait
push
lds
lea
inc
lods
jmp
scas
lods
sbb
js
pusha
(bad)
ins
scas
mov
cld
push
mov
jecxz
mov
dec
jno
xchg
das
outs
push
cmp
mov
ficom
xor
test
(bad)
mov
jb
bound
ja
xchg
mov
xor
mov
mov
stc
test
pop
sbb
aaa
jp
dec
add
pop
xor
in
xchg
rcr
xor
rcr
fstp
shl
test
mov
iret
dec
mov
or
ds
in
xor
div
sbb
cmp
xlat
call
jns
push
xor
xchg
sub
pushf
adc
xchg
lock
ins
xchg
sti
ret
ds
or
lods
jmp
repnz
cwde
pop
stos
les
push
outs
jmp
xor
into
xchg
sub
dec
sbb
mov
sub
jo
sub
mov
cmp
loopne
adc
cmp
sahf
xor
outs
sahf
mov
pop
jno
xor
sub
out
jmp
inc
add
jno
mov
movs
enter
retf
outs
sbb
into
cmc
fmul
push
aaa
test
(bad)
pop
mov
lods
xor
jno
(bad)
lock
jns
rcr
mov
inc
jmp
mov
shr
push
aam
push
das
sbb
fstp
add
sbb
mov
mov
mov
xchg
cmp
jns
pusha
mov
mov
retf
pop
or
adc
pusha
aas
inc
mov
jns
das
mov
call
daa
mov
and
popa
sar
pop
pop
lods
mov
test
dec
in
das
mov
jmp
mov
lea
xor
xchg
mov
ficom
sub
shl
or
adc
pop
test
sub
dec
cld
pushf
jnp
push
clc
aas
jbe
clc
inc
inc
and
and
out
out
in
jecxz
mov
mov
pop
int
xchg
mov
inc
mov
xchg
add
sar
adc
rcl
ret
jmp
mov
(bad)
jns
and
jge
stc
push
sahf
pop
ins
das
inc
cwde
sbb
mov
pop
fwait
sbb
imul
dec
push
jo
jmp
sbb
jne
or
(bad)
repz
js
cld
jb
pop
into
hlt
in
push
mov
add
int3
push
jmp
(bad)
or
pop
cmp
test
pop
stos
out
loop
ret
call
les
in
pop
xor
and
leave
jmp
sti
or
retf
popf
ret
dec
jne
adc
daa
mov
sub
push
repz
loop
je
ret
and
fisubr
jbe
jmp
mov
xchg
aam
jp
pop
xor
jae
js
push
xor
mov
stc
push
mov
xchg
int
xchg
xchg
mov
xor
daa
outs
test
repz
xchg
add
xchg
inc
xor
loop
cmp
test
mov
push
dec
lods
dec
stos
sbb
or
(bad)
mov
push
aas
push
and
push
fimul
mov
rcr
mov
sub
dec
add
inc
scas
xchg
dec
push
movs
cwde
push
xor
add
mov
mov
fwait
mov
cwde
push
and
jbe
je
ja
gs
imul
pop
mov
imul
sbb
xchg
jb
inc
or
test
xchg
das
mov
push
loope
jecxz
pop
push
cs
(bad)
lock
jns
sbb
les
dec
mov
mov
adc
addr16
sti
sbb
or
fwait
pop
mov
sub
and
hlt
aad
adc
sbb
sar
mov
or
mov
or
xor
(bad)
or
or
mov
out
test
and
popf
push
inc
add
pop
test
cmp
retf
int3
mov
dec
fimul
fs
sub
xor
pop
retf
push
mov
enter
outs
pushf
pop
cmc
into
pop
repz
adc
push
(bad)
imul
cmp
pushf
xchg
add
data16
jne
mov
xchg
fsubrp
cmc
enter
fucomi
add
sar
sbb
out
push
pop
frstor
mov
ja
xor
ds
into
xchg
(bad)
mov
pop
sbb
rcr
mov
jg
pop
mov
data16
adc
leave
pop
xor
jo
add
sub
ret
iret
mov
cmp
cli
fadd
mov
(bad)
dec
mov
repz
sub
jle
ret
mov
sbb
in
ja
ja
jecxz
and
mov
push
mov
not
sub
sub
jl
push
xchg
xor
push
call
xlat
sub
dec
stos
jnp
inc
(bad)
xchg
jl
mov
dec
hlt
retf
jnp
sbb
pop
inc
js
jns
ret
daa
lahf
jns
cmps
in
push
int3
inc
add
add
fs
std
lods
push
jl
jle
lock
test
dec
xchg
jmp
pusha
mov
mov
retf
(bad)
adc
mov
adc
or
xor
rcl
(bad)
div
(bad)
idiv
sub
aad
rcr
jg
fsub
inc
add
jg
push
xor
imul
enter
xor
mov
aam
bound
mov
mov
inc
ret
mov
and
and
mov
push
adc
(bad)
movs
int
xchg
outs
js
shl
or
pushf
loopne
addr16
or
add
pop
repnz
mov
cmc
push
pxor
(bad)
repz
mov
leave
lods
xchg
pop
push
or
bound
out
adc
push
(bad)
fisub
ret
inc
xor
inc
inc
add
nop
push
inc
into
pop
cmps
jae
rcr
jnp
out
aad
xchg
dec
cmp
pop
outs
hlt
adc
fdiv
in
sbb
movs
inc
mov
aas
pop
in
sbb
mov
pop
jl
mov
jo
inc
leave
cli
jns
lock
add
es
idiv
mov
mov
cdq
or
mov
aam
mov
add
rol
mov
sub
pushf
test
iret
pop
out
sbb
inc
scas
adc
sub
into
loope
jbe
fwait
lds
in
push
int
jmp
rol
adc
pop
and
mov
(bad)
outs
dec
adc
jl
in
imul
mov
cmp
std
mov
fxch
push
rcl
in
xchg
movnti
adc
out
push
cmp
and
bound
lea
test
or
sub
pop
add
inc
cmp
fs
loop
ret
mov
fs
xchg
stos
mov
(bad)
sar
mov
call
lods
mov
cmc
bound
dec
(bad)
out
mov
or
test
ins
and
call
in
add
jg
(bad)
cmp
ins
or
jne
dec
test
popf
cld
sub
push
sbb
neg
fimul
xchg
popa
fidiv
dec
pusha
push
or
jno
pushf
pop
push
outs
sub
and
enter
mul
into
sbb
fldenv
cmc
jmp
ror
or
int
push
pop
add
int3
sub
xor
(bad)
es
xor
xchg
xchg
das
push
xchg
dec
sub
xor
adc
jno
sahf
sbb
pop
(bad)
or
movs
mov
neg
xchg
push
ins
pop
add
inc
inc
out
jae
popf
push
call
mov
test
add
into
push
or
xor
mov
aam
movs
ror
sub
test
into
dec
dec
outs
out
xor
mov
rcl
xor
inc
(bad)
add
in
(bad)
das
and
loop
stos
nop
cmp
dec
push
cli
jl
mov
hlt
jb
sbb
xor
push
jl
and
mov
cmp
add
cmp
and
mov
inc
imul
(bad)
jecxz
and
inc
add
mov
add
jecxz
les
retf
dec
sub
and
fst
(bad)
aad
in
sahf
mov
aam
xchg
xchg
adc
xor
xchg
inc
adc
pop
mov
repnz
shr
mov
xor
mov
retf
(bad)
movs
xchg
rcl
movs
mov
(bad)
mov
cwde
push
cvtps2pd
pop
pop
ret
inc
ja
cli
inc
sub
mov
repnz
mov
mov
out
or
mov
call
xor
cld
into
sub
pop
ss
in
jns
cmp
aam
inc
mov
inc
pop
cmps
cmp
test
rcr
in
pinsrw
lea
mov
cmps
push
retf
pop
loope
add
out
xor
jb
cmc
js
inc
pop
repnz
out
push
fbstp
jbe
mov
inc
jns
call
sbb
xchg
imul
inc
pop
xchg
xor
das
add
push
mov
push
add
xor
js
ss
add
stc
sti
add
imul
imul
ins
dec
pop
pop
cdq
push
mov
add
fimul
jno
(bad)
push
mov
sub
sbb
xchg
cld
out
dec
jmp
jns
push
(bad)
(bad)
ret
mov
ret
add
dec
mov
push
mov
leave
mov
(bad)
nop
nop
and
cmp
loope
pop
(bad)
push
inc
pop
pop
ins
out
das
push
outs
mov
sub
sbb
jmp
jns
addr16
cmp
lods
int
stos
sub
pop
mov
push
sub
ficom
or
fild
imul
mov
adc
cs
fsubr
data16
ds
xchg
mov
or
add
mov
iret
cmp
je
jns
xor
(bad)
cmp
js
add
adc
mov
jnp
sub
mov
aam
repnz
xor
mov
test
pop
(bad)
mov
test
cld
cmc
repnz
cdq
pop
pop
out
push
add
add
lahf
jb
test
xor
add
mov
xchg
ja
jb
jns
pop
mov
mov
call
and
xlat
les
stos
mov
pop
mov
cwde
(bad)
jle
adc
addr16
in
jg
ds
std
out
(bad)
je
movs
outs
daa
movs
cli
fnstenv
xchg
mov
test
lods
cdq
inc
add
or
xchg
cmp
cmp
xchg
xor
loope
mov
cwde
dec
hlt
mov
dec
sbb
and
aam
(bad)
jecxz
pusha
leave
fnstenv
push
pop
fstp
(bad)
jl
inc
push
lahf
pop
push
pop
xchg
mov
(bad)
xor
mov
mov
mov
bound
push
dec
sbb
ins
fwait
mov
sti
and
mov
call
(bad)
rcr
push
xchg
add
xchg
stos
movs
pop
cli
mov
inc
and
pop
xchg
cmp
ret
daa
mov
test
adc
ret
data16
int
cmps
mov
(bad)
adc
push
push
adc
leave
mov
ds
jmp
or
cmc
mov
lds
popf
adc
rep
add
lock
call
test
jne
shr
scas
sbb
repz
mov
jne
and
popa
adc
sbb
push
shr
mov
int3
scas
stos
adc
clc
aam
cwde
fwait
push
imul
scas
dec
add
pushf
fwait
jmp
sar
jns
pop
mov
cmp
mov
xchg
xchg
out
push
retf
dec
(bad)
push
not
mov
pop
cli
mov
dec
cld
jecxz
cli
cs
inc
cmp
les
sahf
mov
scas
es
or
add
inc
and
and
jns
cli
popf
jns
adc
fcmovu
ins
sub
nop
mov
test
into
mov
std
hlt
outs
inc
or
cld
inc
out
jmp
fidivr
sub
pop
pop
xchg
push
pop
sti
lahf
enter
mul
pop
sahf
stos
adc
das
outs
iret
mov
imul
adc
ins
test
jbe
fwait
inc
cmc
shl
pusha
mov
add
icebp
mov
sub
mov
sbb
ss
add
jmp
jp
mov
xlat
out
jbe
pop
ja
loop
clc
pop
cli
pop
ins
retf
daa
iret
xchg
mov
cwde
push
rcr
jbe
xor
inc
int3
(bad)
cmp
adc
gs
sub
xor
mov
adc
fwait
dec
mov
pop
out
clc
or
jmp
int
jb
mov
pop
ret
inc
cwde
jl
popa
xor
adc
jnp
cmp
inc
jbe
mov
pusha
ret
popf
mov
xor
(bad)
iret
push
xlat
cmp
fisttp
cmp
mov
push
xchg
jmp
push
retf
inc
sti
std
sbb
adc
loope
fmul
push
add
add
jbe
sub
cmps
cmp
mov
push
arpl
les
shl
pusha
mov
or
sbb
fisub
lock
(bad)
aad
dec
mov
xchg
(bad)
pop
inc
jno
pop
(bad)
cld
mov
loop
cmp
mov
mov
xchg
and
add
pop
push
mov
add
add
add
fnstcw
(bad)
cmp
sbb
loop
lds
rcr
enter
cs
popf
sti
xchg
fs
dec
cwde
push
(bad)
sti
mov
sub
inc
sahf
shl
pop
jmp
scas
jecxz
iret
cs
movs
pop
dec
dec
dec
adc
sub
jne
in
aam
fsub
loope
or
dec
xor
repnz
dec
daa
mov
sbb
jmp
sbb
jg
xchg
ins
mov
stos
jbe
rol
cli
and
aaa
push
and
push
mov
xchg
fcmovbe
mov
ins
in
mov
mov
sbb
std
pushf
sbb
neg
mov
jnp
add
daa
pop
hlt
adc
xlat
movs
push
aas
jnp
loope
cli
adc
sti
fprem
or
cmp
add
in
inc
in
adc
xchg
ja
ins
push
mov
pop
pop
je
jb
xor
cld
daa
sbb
dec
hlt
jp
loop
stos
rcr
retf
inc
mov
(bad)
call
fwait
ret
inc
sub
mov
cmps
sbb
push
mov
push
dec
je
add
out
xchg
or
fcom
imul
xchg
(bad)
xor
aad
cwde
sahf
jg
push
out
inc
test
jo
outs
out
jns
std
push
out
and
push
mov
cmp
push
jnp
jmp
cli
stos
mov
icebp
cmp
and
clc
imul
pop
aas
sub
out
pop
in
fdivr
or
cmp
fisttp
mov
adc
inc
mov
out
jecxz
jns
stc
stc
call
pop
lock
scas
and
push
popf
xchg
mov
adc
xchg
sbb
push
sti
pop
jg
add
dec
sub
(bad)
sahf
mov
hlt
ins
pop
sbb
out
sub
pop
imul
mov
pop
mov
aam
or
jecxz
out
jnp
cmp
sbb
and
loop
arpl
(bad)
rcr
jl
test
addr16
push
xchg
add
adc
xchg
clc
call
adc
movs
or
push
xchg
push
adc
popf
mov
xchg
retf
push
or
inc
rcl
fs
lock
sub
stc
ss
xchg
lock
mov
je
int3
xor
inc
mov
dec
mov
sub
sub
inc
mov
adc
pop
cmp
rcl
ds
clc
fild
lods
pop
and
jae
inc
(bad)
mov
push
movs
inc
sti
repnz
adc
pop
into
pop
jp
pop
stc
fs
xchg
pop
les
test
rcr
and
pavgb
xchg
(bad)
int3
xchg
jmp
cs
ins
or
dec
or
cwde
out
mov
int
int
xchg
int3
xchg
push
in
int3
sti
cmp
or
pop
xchg
rcl
std
retf
add
sahf
cmp
cdq
push
xchg
sahf
cmp
mov
sbb
push
cdq
and
daa
push
and
add
hlt
enter
mov
retf
mul
gs
shl
push
xchg
lea
inc
stos
xor
sbb
loope
fisttp
or
xchg
push
icebp
sub
test
je
pop
pushf
add
mov
xchg
cmp
mov
jbe
mov
sbb
sbb
les
mov
jmp
fstp
cwde
(bad)
mov
call
out
jne
mov
pusha
(bad)
mov
leave
push
cdq
jl
xchg
int3
in
scas
or
mov
jp
fimul
dec
add
aas
mov
(bad)
stos
lds
popf
aad
jle
pushf
or
and
outs
push
jns
xchg
cs
xchg
ret
add
scas
bound
add
or
pop
pop
out
inc
loop
pop
xor
sbb
mov
sbb
and
cmp
sbb
ret
inc
out
(bad)
cwde
pusha
xchg
push
mov
add
cdq
xor
cs
sbb
pop
mov
(bad)
movs
jecxz
(bad)
push
fmul
rol
dec
scas
push
push
call
xor
and
icebp
jns
push
sub
jp
test
loop
jg
push
cmc
or
and
pop
ret
mov
xor
mov
bound
aam
pop
ret
or
sub
ins
ret
arpl
je
retf
adc
popa
xchg
movs
shr
pop
xchg
mov
adc
jl
imul
or
scas
and
outs
mov
std
test
pop
jb
ins
sbb
pop
mov
pop
mov
push
out
cli
mov
(bad)
scas
mov
or
pop
jbe
dec
dec
push
adc
jmp
inc
jg
pop
(bad)
mov
enter
adc
xor
nop
jne
or
sub
inc
scas
data16
cmp
daa
push
ja
bound
inc
cmp
lea
cwde
sbb
ret
mov
std
pop
add
jnp
int3
outs
and
sub
pushf
xchg
int
leave
popf
push
push
adc
mov
in
jg
test
mov
es
int
rol
and
lock
cmp
retf
sar
push
inc
shl
cmp
icebp
ins
cs
jo
es
pop
cs
sbb
and
jne
div
sbb
pop
out
sub
mov
cli
sar
call
xor
push
je
fsubr
push
fcmovbe
add
sbb
pop
out
adc
sub
ds
stos
and
lock
pop
mov
jbe
lock
shl
dec
pop
nop
fwait
inc
fcmovnbe
repz
or
lahf
out
fstp
idiv
pop
jb
cmp
fwait
in
pop
mov
dec
mov
mov
and
ret
inc
cmp
cmp
dec
sub
fs
clc
pop
or
sti
mov
and
mov
mov
rcl
shl
cwde
je
or
movs
pop
or
lds
inc
mov
stc
mov
rcl
push
test
mov
out
cmc
out
xchg
mov
clc
mov
jbe
jge
mov
or
add
cli
je
add
in
repnz
jmp
bound
sbb
mov
stc
lock
pop
cmp
mov
pop
xor
cmp
xchg
jl
shl
jns
loope
cwde
cld
scas
jecxz
ds
mov
mov
dec
pop
rcl
add
pop
add
pop
es
gs
std
(bad)
loope
mov
lds
sub
or
(bad)
jmp
jp
in
jmp
out
mov
leave
rcl
cmp
sub
cmp
aaa
xor
xor
push
dec
mov
in
in
inc
mov
pop
or
add
pushf
pop
or
mov
fistp
imul
in
fdivr
bound
mov
pop
in
sbb
or
lahf
mov
sub
and
aas
rcr
dec
ins
stc
adc
js
lea
ja
aad
cmp
add
cmp
sbb
leave
test
inc
sub
fst
sbb
pop
and
add
icebp
mov
ds
xor
or
inc
jbe
or
jecxz
mov
das
ror
(bad)
int3
jno
adc
aad
into
je
mov
(bad)
(bad)
movs
not
js
cmp
jle
clc
ficom
and
jp
clc
aaa
jno
push
mov
xor
popa
mov
icebp
fcmove
and
xor
push
mov
sub
popa
add
xchg
or
out
rcl
stc
sub
pusha
nop
leave
or
jne
cli
adc
rcr
mov
pushf
jno
sbb
js
(bad)
jb
les
ins
adc
scas
popf
mov
test
jmp
call
cmp
adc
or
ficom
add
daa
push
sbb
add
imul
mov
stos
mov
out
xor
enter
popa
outs
fisubr
ja
jno
jne
popf
rol
adc
scas
rcr
xlat
xchg
(bad)
xor
fnstsw
aaa
mov
cmp
mov
and
hlt
sbb
add
aad
pop
retf
stc
push
jo
xor
pop
lahf
dec
push
jge
sbb
mov
inc
ret
dec
or
add
xor
xchg
nop
or
fcom
lea
test
cdq
and
mov
pop
dec
mov
cwde
sub
jno
dec
dec
out
dec
xchg
fcmovu
in
push
hlt
and
(bad)
or
(bad)
dec
scas
call
outs
pop
xlat
gs
pop
mov
push
and
bound
lods
loopne
cmps
bound
out
xchg
mov
ins
clc
inc
mov
mov
retf
movs
(bad)
sbb
cmp
daa
test
dec
out
gs
loope
add
pop
jne
(bad)
mov
repz
adc
cmc
int
sbb
dec
fcmovnu
or
call
movs
jecxz
and
call
jae
fwait
sub
jns
push
mov
clc
rcl
jle
stos
ds
xchg
clc
test
jecxz
cs
push
aam
scas
or
lods
jne
sub
jp
sbb
aad
enter
sub
mov
sbb
cmp
leave
dec
retf
adc
jg
or
shl
lock
pop
push
sub
or
aas
fsubr
mov
mov
inc
xchg
scas
mov
xor
cmps
push
jecxz
xchg
mov
out
mov
sub
icebp
adc
call
clc
test
das
int
mov
mov
ds
sar
cs
popf
mov
push
in
cli
js
dec
push
cmp
pop
hlt
ret
dec
lods
pop
pop
loopne
out
sar
jo
jle
xor
xor
inc
into
mov
nop
and
int3
clc
jno
in
aad
dec
hlt
je
push
jns
mov
add
push
popf
aaa
add
stc
mov
mov
xchg
pop
and
lds
dec
push
or
xchg
add
sub
dec
and
jbe
sahf
mov
lock
pushf
aad
pop
repz
sbb
std
xor
test
lahf
loopne
jg
jle
repnz
in
cld
pop
mov
jnp
xor
pop
cdq
lock
daa
shr
out
fwait
scas
ins
out
(bad)
retf
mov
jl
lods
cmp
pop
push
xor
ss
pop
mov
pop
and
int
pushf
cmp
jge
cmps
mov
lods
mov
mov
mov
cmps
and
sub
bound
jle
cli
sub
inc
hlt
icebp
loope
rcr
je
imul
jp
sar
pop
enter
mov
jns
adc
ins
inc
xor
sahf
out
sbb
dec
mov
enter
sub
movs
lods
push
cmps
mov
out
daa
popf
sar
mov
into
jle
jmp
jl
sbb
mov
and
shl
cwde
mov
popf
cmp
mov
jle
xchg
shl
scas
xor
sub
aas
mov
ja
popa
mov
mov
adc
push
ret
ror
mov
jp
pop
test
xchg
not
or
cvtps2pd
popa
xlat
repnz
mov
shl
int3
mov
jo
mov
xor
retf
outs
dec
jbe
mov
repnz
sub
fbstp
jecxz
outs
out
sbb
push
in
sub
sub
loopne
pop
jae
adc
xchg
mov
adc
cld
sbb
mov
jns
cmp
jmp
mov
mov
inc
lea
into
mov
jmp
mov
imul
mul
add
sbb
pop
mov
add
sub
jno
sbb
jmp
ret
inc
pop
fdiv
ja
js
je
push
push
call
pop
push
mov
pop
(bad)
fidivr
sbb
mov
ins
ror
push
cmps
lahf
shl
call
in
pop
sar
in
inc
leave
adc
sub
sti
cmp
test
xlat
cmp
in
cmp
xor
and
xchg
add
jmp
fstp
in
outs
adc
dec
loopne
jno
pusha
xchg
loope
test
scas
inc
jno
(bad)
je
sbb
imul
mov
or
cmc
repz
fnstenv
or
pop
or
mov
pop
adc
lock
in
lock
jmp
data16
xchg
pop
pushf
sahf
add
fst
pushf
cmp
ins
mov
pop
adc
cmp
mov
mov
pop
cmp
js
out
movs
xor
xchg
repnz
enter
cs
jb
mov
xrelease
and
(bad)
cmp
popa
adc
loop
adc
stc
addr16
das
scas
pusha
and
mul
test
mov
popf
inc
mov
jae
fisub
fisttp
push
stos
mov
fimul
add
fistp
fsub
or
and
xlat
cmps
(bad)
call
mov
loopne
cmp
xchg
(bad)
popa
push
jmp
ret
jnp
pop
mov
add
scas
retf
hlt
jg
or
ds
scas
xchg
pop
neg
cdq
push
xor
pop
test
int3
and
mov
add
mov
adc
out
jl
ret
and
dec
dec
retf
pop
jg
push
iret
stos
jmp
push
xor
repz
sbb
cmp
mov
cmp
jge
arpl
xchg
sub
repz
inc
pop
dec
in
test
xchg
and
mov
xchg
sub
dec
test
jae
ret
mov
sar
add
and
dec
pop
inc
mov
xor
mov
call
scas
xchg
xchg
fdivr
aas
xor
mov
fidiv
leave
xchg
sbb
and
push
fsubrp
retf
lahf
jg
iret
push
push
pop
pusha
(bad)
jno
mov
fldl2e
ins
test
xor
sahf
repnz
pop
fcmovne
imul
pop
or
shl
movlps
ret
aam
mov
cwde
in
mov
push
fild
(bad)
cmc
punpcklwd
mov
or
test
test
sub
jnp
adc
nop
mov
and
pop
inc
sbb
fst
jge
call
pop
pusha
push
nop
cmp
neg
bound
pop
add
fsub
movs
daa
xchg
mov
leave
in
mov
mov
inc
mov
inc
movs
jne
mov
into
push
lea
dec
xchg
mov
pop
cmps
aad
lea
lea
daa
and
iret
rol
arpl
cmp
retf
arpl
sbb
jmp
jns
xor
(bad)
int
pop
cs
jae
sub
mov
mov
es
stos
push
lahf
mov
aaa
cmp
or
jmp
test
xor
das
xlat
add
jmp
sbb
mov
aas
daa
(bad)
mov
mov
xchg
xchg
cmp
dec
nop
xchg
mov
xchg
mov
stos
fbld
sbb
add
adc
xchg
(bad)
xor
mov
popa
hlt
popf
sbb
adc
je
imul
ins
mov
movs
mov
cmp
jl
les
and
cmps
or
xchg
pop
rcr
pop
xchg
outs
aaa
or
test
dec
pop
xor
mov
out
sub
loope
adc
xor
rcr
mov
jl
pushf
mov
ins
scas
int
cmp
ror
push
or
ja
out
adc
pop
pop
das
shr
inc
test
fwait
aaa
mov
adc
push
pusha
call
cmps
retf
jns
add
pop
add
aaa
jns
pop
pop
lods
sbb
or
outs
enter
(bad)
push
rcl
in
adc
pop
pop
pusha
mov
push
fptan
jl
xchg
lds
mov
mov
call
mov
fdivr
or
fistp
mov
and
mov
and
adc
jb
push
cmp
jecxz
je
sbb
imul
imul
push
pop
mov
bound
outs
or
or
dec
cmp
or
shl
ja
push
repz
mov
pop
push
adc
jp
add
mov
jbe
sbb
ins
cld
imul
pushw
bound
ins
out
mov
in
mov
inc
sub
cs
sub
inc
test
icebp
push
push
outs
fsubp
arpl
ins
scas
cmps
sbb
jb
jo
pop
jo
call
push
stos
les
jnp
fs
rcl
test
std
clc
adc
xor
push
sub
sbb
mov
fidiv
daa
in
sbb
cmp
dec
std
adc
mov
cmp
out
inc
mov
je
xor
dec
mov
jbe
adc
xor
mov
cs
and
xchg
jae
test
in
iret
aas
push
outs
dec
and
push
hlt
std
adc
ins
or
mov
or
stos
daa
fld
jo
sar
push
push
cmps
outs
clc
cmp
adc
imul
ds
int
mov
stos
dec
jmp
sbb
hlt
daa
add
add
cdq
call
clc
mov
push
ret
in
mov
push
xor
and
adc
fld
push
pop
pop
mov
pop
nop
ss
int
pop
stos
in
jne
cs
mov
cmp
jp
mul
push
mov
push
mov
pop
mov
adc
dec
retf
cmp
test
pop
mov
bound
in
cdq
sti
test
popf
push
es
(bad)
mov
daa
pushf
cmp
jp
push
pusha
xor
inc
mov
fwait
inc
sbb
mov
or
xchg
or
push
sub
push
repnz
or
int
js
xor
and
mov
pop
bound
mov
js
sub
inc
movs
mov
sbb
sbb
push
inc
dec
test
sub
call
cmp
sub
pop
(bad)
adc
fwait
out
imul
adc
stos
sbb
push
sub
cmp
imul
jp
jbe
out
dec
sbb
(bad)
ins
inc
loopne
mov
mov
mov
adc
out
iret
cwde
or
sar
dec
or
stos
inc
or
aaa
mov
dec
jmp
lock
adc
dec
and
fwait
out
shl
(bad)
outs
aam
(bad)
push
dec
xor
inc
inc
mov
fidiv
int3
(bad)
cwde
fcomp
cmps
les
test
aaa
ficomp
or
ins
jmp
arpl
daa
cli
inc
cwde
mov
and
push
test
sub
mov
cmp
dec
out
lock
test
retf
popa
clc
inc
scas
inc
pop
inc
cmps
adc
mov
mov
lea
or
outs
mov
jnp
or
mov
sbb
scas
gs
mov
ret
and
pop
pushf
mov
sub
aas
fiadd
test
jmp
repz
popa
(bad)
pop
pop
dec
repz
inc
retf
repnz
jb
gs
xchg
mov
mov
cmp
pop
mov
stos
push
xchg
pop
retf
fisub
sbb
test
jle
icebp
test
ins
les
shr
(bad)
cmc
sub
mov
mov
cmp
pop
fcmove
mov
push
ret
rol
adc
hlt
test
jp
sub
push
popa
out
fisub
fld
pusha
dec
sub
(bad)
add
test
xchg
jne
fisttp
inc
js
mov
mov
cmp
push
arpl
sub
jmp
retf
addr16
ficomp
adc
xchg
jle
sub
lahf
xchg
sahf
adc
mov
jecxz
xlat
imul
mov
xlat
push
dec
mov
jmp
icebp
stos
and
cmp
cdq
out
fld
out
inc
mov
fidiv
imul
retf
inc
pop
and
(bad)
xchg
pushf
pop
mov
out
jmp
(bad)
push
push
popf
adc
adc
mov
mov
inc
fdivp
fadd
jne
ret
loop
rcl
data16
dec
aam
inc
nop
push
loop
in
enter
cld
out
test
pop
cmp
dec
imul
test
leave
sub
or
or
leave
fwait
aaa
jnp
into
rcl
jecxz
rcr
retf
ror
and
(bad)
in
jbe
inc
pop
mov
retf
int3
dec
cmp
cmp
xchg
rcl
dec
sahf
sub
xchg
call
xlat
retf
(bad)
rcr
inc
sbb
mov
cmp
mov
add
dec
cmp
dec
sub
dec
std
and
(bad)
cmp
jnp
ins
sar
mov
and
stc
out
int3
pop
lea
daa
fld
adc
jae
test
test
adc
jmp
dec
jbe
movs
pusha
data16
stos
push
pushf
mov
inc
popa
xchg
add
sbb
rol
xchg
dec
jge
push
mov
bound
out
sub
fstp
push
mov
imul
outs
aam
test
xchg
mul
jns
xor
cwde
imul
ret
dec
popa
mov
xchg
adc
xchg
xchg
jl
cld
jmp
rcr
inc
dec
mov
(bad)
mov
jg
jle
mov
sbb
(bad)
fsubp
into
mov
mov
xchg
cmp
mov
push
mov
js
in
test
mov
retf
sbb
mov
loope
inc
mov
call
sub
inc
ds
mov
adc
sub
pushf
leave
cli
les
mov
xchg
popa
xchg
and
adc
test
rcl
inc
ja
popa
mov
sbb
mov
dec
and
sti
xor
pop
(bad)
in
mov
pop
push
mov
pop
mov
mov
inc
stos
retf
fist
and
xor
out
jnp
and
jmp
mov
add
in
and
add
fistp
jecxz
stos
lock
mov
xor
xchg
jmp
mov
stc
cmc
rcr
inc
lods
lock
xchg
das
popf
imul
xor
sbb
mov
inc
jbe
or
inc
or
das
sti
(bad)
or
fisub
imul
mov
dec
push
fidiv
and
out
adc
repnz
test
pop
sbb
pop
fidiv
jmp
add
push
cld
sub
ficomp
inc
xchg
xchg
repz
xor
hlt
mov
jmp
sub
arpl
js
adc
int
mov
inc
adc
(bad)
pop
mov
iret
dec
mov
jnp
xchg
mov
mov
xchg
stc
push
nop
aas
sbb
jb
mov
scas
and
dec
out
jne
(bad)
icebp
retf
xchg
inc
fs
add
mov
xchg
cli
into
mov
push
sub
cmp
sbb
(bad)
ins
cwde
inc
xor
sbb
loope
xchg
clc
xchg
or
adc
(bad)
leave
mov
push
scas
repz
jge
scas
jae
mov
mov
push
dec
or
lahf
sub
cmp
add
ret
cdq
outs
addr16
jge
dec
outs
pop
aam
push
cld
jg
into
jge
loop
(bad)
ins
xchg
js
mov
pop
dec
repz
jmp
call
movs
sar
cwde
dec
dec
movs
jecxz
xchg
mov
inc
fstp
pop
bound
in
das
je
imul
je
or
fild
xchg
xchg
stc
mov
addr16
cmp
jmp
out
add
(bad)
(bad)
into
mov
mov
lahf
dec
jns
retf
loope
dec
adc
mov
mov
inc
add
mov
shl
add
inc
fsubr
fcom
adc
inc
gs
sbb
adc
push
outs
pop
jne
mov
adc
movs
jl
jae
loop
enter
xor
(bad)
xor
mov
adc
jg
repz
iret
inc
addr16
stc
add
and
xor
xor
and
jnp
nop
sbb
add
mov
sub
arpl
and
sub
scas
ret
push
out
pusha
fcmovnu
pop
push
test
jno
jl
sbb
js
retf
push
std
dec
loopne
pop
push
bound
(bad)
jmp
jns
(bad)
xchg
xor
mov
nop
inc
loope
push
jg
out
sub
imul
jne
cdq
dec
loopne
ja
add
add
add
ret
sahf
sahf
call
retf
add
scas
jbe
xor
scas
mov
sub
sub
bound
stos
and
retf
mov
rol
pop
daa
cdq
push
je
jno
(bad)
(bad)
mul
nop
xchg
enter
xchg
hlt
in
dec
inc
div
iret
jno
ds
or
pop
popa
test
cmp
lea
push
dec
or
loop
cld
adc
add
or
mov
aas
loope
aad
adc
xlat
sahf
in
in
xor
retf
or
cmp
mov
loope
imul
test
jp
cmp
adc
adc
sbb
add
std
pop
pusha
adc
es
jle
test
inc
pop
and
add
mov
call
in
rol
jb
inc
or
and
or
and
mov
cmc
jb
cmp
mov
fchs
fstp
adc
enter
sti
call
scas
jae
add
enter
ins
mov
les
rcl
mov
fbstp
fisub
retf
pop
adc
jge
and
les
push
jmp
xchg
inc
mov
add
loop
icebp
adc
aad
into
push
outs
mov
sub
outs
(bad)
lods
sbb
sbb
pop
shl
in
sub
sahf
cli
inc
stos
inc
pop
fdivp
dec
push
scas
xor
sub
jle
or
nop
xchg
pop
popa
enter
lods
arpl
xchg
iret
leave
xchg
ins
or
jecxz
repnz
mov
jp
inc
jge
cmp
pop
xor
movs
call
xchg
jle
and
not
sbb
add
(bad)
imul
mov
add
arpl
loop
mov
mov
cmps
add
call
xor
and
push
dec
sub
xlat
int3
xchg
fdivr
add
call
inc
mov
inc
push
rcr
arpl
xchg
cmp
cld
xlat
cmp
test
mov
jge
ret
or
mov
test
inc
fidiv
mov
cld
and
inc
adc
add
es
loopne
pop
test
xchg
fdivr
push
sub
(bad)
les
clc
test
(bad)
mov
call
call
sbb
ror
adc
dec
and
sti
dec
ret
jne
pop
dec
and
sbb
jge
jne
jbe
gs
mul
in
mov
mov
or
jmp
call
jp
fisub
repnz
stc
and
mov
xor
jmp
cmps
push
inc
mov
push
jle
mov
movs
mov
mov
fs
lock
lds
sbb
mov
dec
xchg
mov
(bad)
loop
inc
(bad)
xor
data16
xor
inc
int
dec
ds
and
data16
adc
push
sub
rol
mov
in
(bad)
xchg
out
std
jno
cli
sub
or
push
aad
stos
inc
std
push
pop
jl
jne
dec
adc
mov
fnstsw
outs
mov
movs
jl
add
add
test
lods
cmp
pop
inc
call
or
cs
jbe
xchg
stc
retf
das
bswap
and
std
loope
mul
cmps
out
(bad)
push
pop
xchg
mov
jae
cmp
adc
pop
and
out
inc
adc
loopne
daa
jg
cld
adc
pop
pop
inc
add
stos
mov
aas
push
xchg
popa
and
mov
inc
xchg
pop
mov
fcmovnbe
mov
add
sti
mov
xor
inc
jl
mov
cmp
cwde
sbb
xchg
(bad)
jmp
arpl
sahf
popf
and
xor
dec
cmp
cdq
icebp
sbb
mov
fsub
cmp
jo
add
cs
push
and
xchg
xchg
data16
ret
mov
fsub
mov
(bad)
test
popf
adc
call
adc
mov
mov
(bad)
addr16
bound
jecxz
fidiv
dec
cmp
mov
cmp
push
push
cmps
mov
sub
jno
push
xchg
jbe
mov
rcr
push
rol
xchg
cmc
hlt
mov
jo
jg
jge
and
xchg
and
cmc
not
push
sar
dec
hlt
mov
sub
retf
sub
out
xor
jnp
adc
and
sahf
dec
adc
movs
icebp
test
xor
adc
add
adc
sti
aaa
gs
shr
or
cmc
fsub
cld
and
lock
fsubr
pop
dec
dec
outs
shl
or
pushf
mov
mov
call
sbb
cs
mov
lods
mov
daa
pop
sub
xchg
test
mov
adc
ret
imul
mov
aad
(bad)
ficomp
push
sub
jg
push
pop
xor
adc
adc
test
mov
call
ror
xor
push
xchg
cmc
and
call
fstp
mov
(bad)
xor
push
popa
mov
inc
jmp
(bad)
outs
push
push
or
xor
jne
pop
sub
jnp
add
(bad)
cmps
inc
mov
aam
or
sbb
es
pop
push
dec
imul
ror
in
mov
or
mov
pop
jo
xchg
jns
outs
mov
adc
repnz
cli
xor
pop
sub
xor
push
loopne
mov
fwait
and
mov
mov
shl
sti
jne
sar
gs
cdq
movs
add
call
jne
push
dec
in
jg
add
jns
xchg
or
cmp
stc
xor
cdq
rol
fucom
inc
ins
jns
js
scas
imul
xchg
sahf
adc
jecxz
cwde
jl
fmul
xchg
jmp
xor
sub
pop
mov
fwait
leave
mov
inc
data16
test
(bad)
(bad)
ins
fistp
arpl
cmp
pop
mov
add
push
or
sub
inc
or
xor
xchg
test
dec
popa
test
dec
or
sbb
imul
jns
ja
mov
and
pop
pusha
xor
xlat
icebp
ret
jecxz
cdq
inc
pop
xor
jae
inc
scas
pop
adc
push
call
les
mov
rcl
scas
jecxz
adc
sub
stos
mov
and
fldcw
cmp
int3
iret
push
repz
iret
in
jno
loopne
inc
bound
pop
inc
lods
adc
push
lahf
jnp
xchg
sbb
push
mov
sbb
stos
pop
ret
pushf
out
and
or
sub
xchg
movs
(bad)
pop
test
inc
xor
sbb
inc
fcomp
dec
mov
lea
imul
inc
lea
cmp
adc
rcr
mov
sbb
scas
xor
mov
xor
cmp
inc
sbb
das
popa
leave
xchg
sar
in
cmp
fstp
jb
or
xchg
lahf
push
loope
sbb
shl
stos
sub
js
mov
jmp
outs
add
dec
fidiv
gs
(bad)
add
cmp
jb
arpl
in
push
xchg
and
adc
rol
inc
retf
lea
xchg
sub
pop
xor
sub
inc
andnps
jns
fsubr
mov
push
inc
cmp
scas
add
push
fidivr
dec
outs
add
or
adc
pop
dec
sbb
jl
push
mov
xchg
cmp
ret
sbb
xchg
pop
shl
in
adc
add
adc
retf
mov
mov
pushf
cdq
mov
(bad)
arpl
imul
xchg
xor
xor
fsubr
rcl
fwait
es
and
ins
cli
adc
sub
shr
add
nop
ds
clts
mov
and
pop
test
mov
push
fld
dec
push
in
xchg
cmp
cli
mov
push
imul
fwait
cwde
or
inc
sti
mov
test
fidiv
gs
xchg
mov
inc
push
xor
push
aas
movs
cmps
retf
mov
int3
xor
mov
pop
cmp
in
ins
mov
pop
addr16
fxch
jbe
jb
aas
jmp
add
inc
shr
imul
iret
cmp
pop
dec
stos
mov
jmp
or
xor
aaa
popa
pop
fs
add
or
jp
cmc
es
cmps
fisttp
test
push
test
dec
scas
or
sub
call
dec
aaa
jge
test
pop
dec
jmp
(bad)
cmps
jb
dec
movs
stc
push
cs
push
scas
push
or
bnd
lea
jo
scas
pop
int
add
(bad)
dec
std
mov
cld
mov
out
jno
sbb
push
rcr
mov
jmp
or
rcr
cwde
add
sub
sahf
add
mov
fwait
inc
inc
mov
popf
int
sub
scas
out
add
inc
mov
lahf
fsubr
das
adc
cmps
rcr
(bad)
jle
adc
shl
addr16
xchg
sbb
mov
and
in
call
push
adc
sar
mov
mov
add
mov
xor
fsubr
mov
mov
mov
hlt
push
add
sar
stc
aam
add
sub
jl
jne
loopne
xor
push
jne
cli
push
sub
sahf
in
in
lods
(bad)
sub
sub
mov
rcr
mov
cdq
cmp
adc
cmp
scas
pushfw
std
pop
pop
imul
push
mov
mov
bound
cwde
in
dec
xor
cs
mov
hlt
mov
or
arpl
mov
sbb
jge
iret
add
out
test
shl
mov
mov
or
iret
mov
dec
xchg
rol
pop
and
aad
std
fadd
test
xor
xchg
aam
dec
adc
(bad)
lock
adc
mov
mov
jae
mov
rol
push
xchg
jmp
clc
(bad)
clc
jg
push
or
lahf
popf
loopne
jne
lock
or
fldcw
add
pop
and
ja
aam
out
ins
add
lods
xchg
shl
sar
adc
mov
adc
stc
ins
(bad)
mov
push
pop
sbb
retf
data16
in
mov
add
rcr
mov
sbb
das
test
mov
sub
fimul
add
stos
pushf
icebp
add
xchg
call
(bad)
push
jmp
ret
retf
dec
sub
push
scas
icebp
mov
xor
mov
push
mov
std
inc
outs
int
sub
fsubr
aam
xchg
(bad)
mov
test
pusha
test
xchg
shl
cmp
in
imul
stos
push
xor
cs
outs
(bad)
dec
dec
xor
ret
xor
adc
out
xchg
shl
daa
or
cmc
aad
cmp
das
or
sub
and
add
leave
sub
popa
stos
pop
inc
les
sti
push
movs
pop
adc
cld
arpl
outs
dec
jnp
and
adc
and
xchg
fwait
mov
mov
mov
mov
pop
aad
int3
pop
and
test
add
push
dec
(bad)
lea
or
outs
mov
aas
and
rcr
dec
jmp
test
mov
or
lahf
mov
xor
(bad)
sbb
enter
push
mov
add
dec
stos
mov
scas
ss
pusha
aam
popa
stos
adc
sbb
adc
retf
retf
add
es
fild
mov
mov
sti
push
mov
mov
ins
std
popa
dec
push
mov
jb
cmc
or
or
jmp
jp
pop
jno
rol
repnz
push
mov
cmc
imul
ja
ret
fwait
mov
fstp
mov
mov
outs
or
and
push
sub
sub
out
retf
xchg
sub
ins
pop
(bad)
jno
mov
int
inc
or
inc
rol
adc
stc
jne
push
int3
jae
jmp
jne
xchg
sub
scas
sub
ret
add
data16
xchg
xchg
jns
aam
add
sbb
arpl
aas
xor
xchg
jmp
retf
jle
imul
mov
nop
pop
imul
dec
retf
(bad)
ds
push
pop
push
loop
leave
push
sub
cs
mov
adc
(bad)
shl
xchg
push
ret
enter
cmp
sbb
jmp
xor
hlt
nop
in
inc
jmp
and
fsub
and
out
aas
mov
ror
imul
outs
adc
add
fisttp
mov
mov
adc
push
cmps
cld
pop
and
or
cmp
sbb
jle
in
push
push
fcomp
add
xchg
pop
enter
push
push
sysenter
push
or
sbb
fisub
xchg
(bad)
xor
cli
add
movs
arpl
aam
aad
aam
mov
or
xchg
mov
mov
inc
test
jmp
mov
shr
mov
mov
jg
lock
out
stos
or
push
push
lods
adc
hlt
gs
cmp
ror
leave
test
out
enter
fwait
dec
jb
xchg
lds
mov
lock
sbb
repz
fild
push
add
pop
inc
inc
rcr
push
out
mov
cdq
sbb
rol
fsave
cmps
xchg
inc
scas
mov
pop
mov
cmc
scas
(bad)
fs
xor
popf
jbe
or
icebp
and
mov
push
push
fwait
js
loopne
loopne
pop
imul
icebp
sbb
pop
fisttp
and
cmc
sar
ins
jno
push
xor
sub
or
xchg
hlt
sbb
and
retf
inc
into
jb
mov
(bad)
fsub
fisttp
lods
les
inc
dec
adc
push
inc
ins
and
outs
std
in
xor
(bad)
not
sbb
adc
sti
mov
sahf
mov
outs
fwait
sub
mov
add
xchg
outs
leave
sub
out
sub
adc
xor
je
cdq
cmp
fsub
sub
sbb
ror
test
mov
sbb
loope
add
es
daa
jp
test
mov
in
mov
jno
loopne
xchg
fdiv
div
push
xchg
xchg
xchg
cmp
xchg
sub
ja
push
add
or
mov
loopne
ins
or
addr16
outs
outs
push
sbb
jb
xchg
push
and
push
std
js
mov
mov
data16
rcr
jnp
in
jnp
jb
(bad)
dec
cmp
fistp
pop
int3
repnz
sahf
loop
iret
push
cwde
not
mov
cmps
jno
sahf
push
icebp
daa
jp
fnstsw
mov
sti
aas
test
xor
mov
mov
jge
mov
or
mov
call
movs
inc
mov
inc
jbe
arpl
icebp
cmp
xor
mov
mov
or
loop
xor
mov
cmp
push
adc
shl
mov
sahf
ror
mov
imul
outs
inc
test
xor
sti
mov
mov
retf
(bad)
jge
cwde
pop
ins
std
loope
jle
popf
push
add
sahf
sbb
mov
xor
rcl
sbb
sahf
sbb
mov
int3
mov
fild
pop
jns
fld
aam
es
dec
ror
aad
(bad)
loopne
cmp
(bad)
je
aaa
push
add
ds
mov
out
ror
push
cmp
inc
push
sub
xchg
push
push
mov
mov
ret
push
xchg
cmp
adc
xchg
cmp
adc
int3
mov
mov
pop
xchg
jmp
repz
cmp
pop
jle
xchg
in
shl
ss
fst
call
xchg
js
test
fnstenv
test
popa
sbb
inc
sub
call
jl
push
cmp
jno
test
cmps
out
gs
pusha
ret
mov
push
xchg
xchg
inc
call
fmul
cmp
xchg
jno
fcmovu
inc
inc
sahf
cmp
jge
adc
add
pop
daa
test
leave
sbb
shl
sub
mov
pop
pop
dec
hlt
sbb
push
rcr
bnd
mov
cmp
shl
scas
test
mov
jmp
xor
pop
xor
enter
xor
clc
xchg
stos
leave
aam
jne
sub
xchg
dec
and
ds
fild
into
sbb
loop
aad
stc
cs
pop
lea
outs
dec
dec
repnz
call
shl
cmc
out
push
mov
imul
pop
inc
cmps
push
ds
daa
add
aaa
loopne
pushf
std
or
jno
dec
fadd
mov
lods
xor
mov
(bad)
cld
jl
dec
xchg
cdq
jo
adc
(bad)
pop
cwde
xchg
dec
adc
mov
mov
int
push
adc
daa
cmc
(bad)
mov
push
(bad)
arpl
dec
cmps
sbb
cmp
(bad)
int3
inc
enter
mov
iret
hlt
add
add
jp
out
adc
jle
inc
and
inc
jae
xor
xchg
hlt
push
shl
jge
aaa
dec
xor
sbb
push
aas
popa
loope
and
sti
lea
loop
iret
(bad)
out
call
fdiv
jmp
mov
cmps
and
mov
add
lock
or
out
cmps
xchg
cmp
test
loopne
rcr
pop
int
aaa
dec
imul
push
xor
popa
inc
xchg
mov
je
stc
popf
test
dec
jle
sub
push
jle
inc
mov
adc
sbb
mov
int
mov
bound
and
je
inc
fidivr
add
sbb
push
push
cmp
daa
mov
inc
push
adc
int3
add
xor
into
mov
inc
push
cmp
dec
cmc
ins
out
xchg
rol
daa
jmp
ret
cmps
bswap
inc
mov
aad
pop
dec
adc
xor
sbb
jl
jp
sahf
popf
xchg
cmp
pop
and
cdq
int
dec
or
or
iret
adc
jmp
into
mov
(bad)
mul
xchg
xchg
imul
mov
mov
jnp
(bad)
push
aaa
lods
fldln2
inc
mov
aam
jg
jg
mov
sbb
dec
push
ret
bound
test
clc
and
cmc
or
(bad)
(bad)
mov
jmp
daa
sbb
out
aaa
ret
aam
xchg
dec
pusha
push
xchg
mov
mov
daa
inc
add
mov
stc
sar
or
call
mov
xor
je
test
shl
fist
movs
and
stc
mov
fcomip
mov
ins
ret
in
std
jecxz
adc
retf
adc
loopne
dec
xchg
xchg
int3
dec
cli
scas
iret
add
jg
fcomip
and
sub
arpl
fwait
xchg
pop
add
adc
pop
push
outs
scas
cs
pusha
mov
pop
and
cmp
ins
or
int3
stos
(bad)
rcl
and
jl
jge
inc
and
fmul
outs
push
pop
enter
sub
cmp
retf
jne
mov
jl
retf
xor
dec
stc
or
out
sbb
pop
mov
mov
test
loop
lock
popf
sahf
and
push
imul
jecxz
sbb
mov
pop
mov
cmp
mov
jae
xchg
addr16
imul
stos
xchg
xchg
leave
adc
jae
(bad)
sbb
sub
mov
cmp
dec
test
loopne
mov
xchg
js
dec
add
or
sub
inc
sub
cmc
es
in
das
xor
dec
pop
stos
xlat
cs
xchg
in
out
cmp
cmp
jae
scas
push
inc
mov
inc
daa
aam
jmp
add
pop
push
mov
test
popa
sbb
cs
in
push
pop
push
fld
and
jmp
jo
pop
ja
pusha
ret
mov
mov
jb
xchg
neg
fsubrp
or
aad
and
movs
int
adc
cmp
repz
(bad)
mov
or
in
pop
inc
(bad)
inc
add
test
add
sti
shl
sub
and
ds
mov
out
mov
and
js
inc
rol
xchg
cmp
(bad)
outs
cmps
jbe
mov
inc
dec
push
scas
sbb
imul
pop
mov
sub
sar
cmps
(bad)
imul
and
dec
push
xor
xchg
inc
lods
enter
push
repz
cmp
lods
xchg
out
(bad)
adc
iret
mov
stc
cmp
aas
xchg
add
mov
js
aad
or
add
loopne
fcmovnbe
iret
add
aad
push
add
mov
jnp
inc
repz
sbb
xchg
and
in
pop
sub
loop
pop
jle
test
jno
add
adc
mov
or
enter
das
cmovne
xchg
(bad)
fidiv
xlat
pushf
fmul
(bad)
iret
dec
xchg
iret
stos
and
movs
xchg
sub
rcl
xor
sbb
push
xchg
mov
cmp
xchg
push
les
push
loopne
aad
jne
sub
addr16
sbb
mov
or
popf
adc
add
xor
mov
pop
xchg
ins
push
mov
das
jbe
leave
(bad)
shr
jb
dec
pop
inc
and
fist
cmpps
test
fmul
in
(bad)
sar
rol
lods
mov
xor
nop
call
or
inc
mov
aas
leave
sbb
out
or
ret
outs
jmp
test
idiv
loope
jnp
rcr
and
out
call
jmp
adc
loope
mov
pop
inc
jmp
or
cmps
add
inc
sar
lea
mov
lods
aas
jle
test
jb
and
fnsave
push
cmp
ins
icebp
dec
and
pushw
lods
jb
popa
ss
inc
js
mov
inc
push
pop
adc
adc
fwait
es
jb
xor
sub
shr
mov
pop
mov
mov
dec
push
dec
call
sar
mov
outs
sbb
sbb
mov
clc
and
(bad)
push
gs
dec
mov
aad
out
sbb
out
dec
fist
cmc
sbb
push
fcmovnu
addr16
mov
sub
xchg
inc
add
push
push
add
clc
cmps
cmp
call
lahf
xor
cmp
cmps
loop
xlat
inc
out
or
inc
cmps
addr16
push
cwde
stc
sub
sbb
imul
jmp
shl
daa
cmp
pop
mov
sub
add
imul
cmp
pop
sbb
xor
inc
push
jbe
xchg
dec
inc
pop
sub
out
add
arpl
adc
jmp
add
stc
(bad)
stc
sbb
mov
ret
gs
fistp
ret
pop
push
fsubr
loopne
cmps
and
mov
dec
stc
cmps
xchg
movs
std
pushf
mov
imul
outs
mov
fld
scas
sbb
popf
stc
or
ret
es
xchg
aaa
adc
mov
add
xchg
push
xchg
lods
fdiv
aad
dec
push
dec
dec
lea
xor
out
aam
ins
mov
inc
pusha
pop
push
xor
pop
cdq
scas
(bad)
push
push
rcr
pop
arpl
ror
mov
lock
sbb
dec
mov
(bad)
sub
lea
inc
dec
movs
mov
in
jecxz
xchg
ins
mov
dec
jmp
jmp
sub
retf
inc
iret
push
test
xor
sbb
push
cmp
pop
jecxz
mov
sub
dec
aaa
mov
jmp
test
sbb
cmp
mov
xor
loopne
jae
or
lods
mov
cmps
mov
(bad)
adc
inc
adc
sbb
fdivrp
add
add
cdq
cmp
test
or
push
out
push
dec
into
test
into
add
xchg
mul
aam
mov
jge
mov
push
push
jb
loope
test
xchg
or
and
sub
shl
mov
xor
aas
jnp
fsub
mov
mov
pop
sub
xchg
fadd
xor
outs
mov
push
shl
(bad)
mov
or
cmps
xor
push
mov
movs
sbb
ins
add
inc
or
push
cld
(bad)
jmp
and
ja
retf
cwde
dec
pop
(bad)
inc
adc
aas
push
out
inc
sbb
mul
mov
sub
fist
or
xlat
mov
imul
push
hlt
retf
out
lds
pop
outs
mov
push
int
mov
cmps
icebp
adc
cwde
jmp
or
imul
sub
lock
push
js
cld
cmp
cmp
rol
sub
jbe
ins
mov
cmp
ret
and
repnz
jo
add
ficomp
fisttp
cmp
jbe
addr16
jl
and
mov
movs
jo
fs
in
cmp
gs
and
ins
ret
dec
in
add
pop
mov
cdq
push
int3
sbb
test
(bad)
jns
sbb
sub
dec
and
(bad)
mov
nop
sub
aas
rol
push
mov
and
push
mov
es
cmp
and
(bad)
jnp
ret
shr
icebp
outs
(bad)
or
pop
out
or
or
(bad)
enter
mov
inc
(bad)
jo
sbb
add
sti
cmc
loope
aas
imul
scas
sahf
lea
aam
or
sub
cmp
pop
mov
xchg
(bad)
push
scas
call
pop
sbb
and
mov
lods
and
xor
ins
jmp
lds
in
ds
fwait
xchg
cmp
gs
popa
mov
pop
hlt
daa
push
movs
inc
cli
pop
sub
inc
enter
jno
dec
enter
mov
sbb
pushf
push
ins
jp
repz
cmps
lock
dec
pop
retf
add
cli
inc
sbb
adc
aad
mov
dec
rcr
ss
cmp
stos
fldenv
cmps
lahf
movs
xor
jl
aam
inc
pop
or
js
sub
rcr
dec
mov
sahf
jno
mov
xchg
cmp
pop
idiv
inc
push
pop
leave
ja
sti
in
lods
pop
cli
push
cwde
mov
jno
and
gs
sar
pop
pop
(bad)
cdq
push
pop
inc
aam
pop
mov
dec
pop
lods
(bad)
shr
es
dec
mov
ins
fisub
jge
pushf
cwde
mov
aad
pop
and
pop
fwait
clc
lahf
sbb
jecxz
call
mov
pop
pop
mov
inc
pop
pop
dec
cs
xchg
adc
mov
cld
call
push
pushf
mov
mov
iret
mov
fucom
in
scas
and
(bad)
jmp
inc
dec
imul
xlat
in
sbb
cmp
push
push
(bad)
sti
stos
cld
cld
ja
adc
outs
push
push
lods
mov
mov
jg
stos
inc
rcr
mov
addr16
cmp
mov
dec
jp
outs
retf
hlt
push
adc
mov
and
in
adc
mov
nop
movs
mov
test
gs
or
adc
lahf
lea
scas
and
cmps
imul
cmp
inc
pop
dec
mov
xlat
mov
pushf
xchg
or
push
call
mov
(bad)
jl
push
je
test
ror
xor
(bad)
daa
inc
imul
xchg
arpl
enter
pop
out
test
fidiv
(bad)
pop
adc
movs
sbb
lods
cdq
loope
aas
mov
jg
and
lods
retf
or
mov
and
sub
xlat
mov
les
call
xlat
je
das
mov
in
or
push
sub
ds
xor
cmps
mov
fdivr
push
popa
je
dec
mov
fld
and
mov
(bad)
fucom
and
cmps
test
jmp
scas
retf
js
push
mov
sar
bound
mov
sbb
jp
js
cld
push
in
clc
or
leave
adc
sbb
sbb
inc
mov
add
xor
sbb
xchg
sbb
js
retf
pop
xchg
dec
cmp
pushf
dec
outs
xchg
sub
(bad)
adc
mov
xor
js
into
xchg
enter
mov
in
adc
imul
fs
(bad)
xchg
movs
out
retf
jo
inc
les
push
xchg
popa
pop
inc
sbb
enter
dec
(bad)
jbe
popf
(bad)
fisub
outs
call
out
cmps
or
loopne
aad
gs
fimul
or
sbb
sub
imul
cdq
sub
mul
lea
add
pop
fldenv
or
xchg
mov
mov
xchg
push
fdiv
xor
adc
cmp
or
or
xor
push
jge
call
out
mov
jle
cmps
jge
ret
push
enter
and
cmp
inc
shl
and
xchg
imul
(bad)
loope
(bad)
pusha
in
sbb
mov
mov
jnp
retf
out
xchg
sub
inc
addr16
mov
xchg
aaa
arpl
adc
xor
data16
lods
xchg
jo
mov
push
test
push
xchg
xor
ins
dec
push
add
sub
sub
frstor
xchg
ret
fistp
sub
ror
xchg
adc
jmp
ins
mov
aad
test
push
jbe
out
sub
int3
dec
pop
(bad)
mul
cwde
fwait
es
mov
mov
stos
xchg
push
xor
xchg
push
dec
and
repnz
mov
rcl
xor
jmp
dec
ja
imul
jae
cs
inc
aad
or
or
clc
fisttp
and
(bad)
push
int3
cwde
mov
test
scas
dec
stos
int3
aaa
sub
loope
cmp
jmp
cmps
push
int
call
mov
or
add
stos
mov
pop
xor
(bad)
mov
in
mov
in
fs
ins
sbb
xchg
rcl
das
retf
dec
test
dec
aaa
lock
adc
jmp
push
cli
xchg
xchg
pop
aaa
cmp
in
movs
test
push
xor
test
xchg
scas
mov
sub
mov
clc
inc
push
cmp
sbb
mov
fistp
pop
shl
imul
push
sbb
ds
add
adc
ins
sahf
jno
fmul
jbe
ss
(bad)
outs
(bad)
lock
data16
push
or
fmul
in
retf
push
out
pop
retf
mov
sbb
psubd
outs
je
fs
cmp
jb
pop
mov
sbb
retf
cmps
pop
call
dec
mov
ja
fs
js
std
aaa
adc
sub
pop
jle
mov
lea
neg
outs
movs
mov
pop
call
cmp
fnstenv
xor
dec
jbe
adc
imul
jbe
outs
cmps
std
dec
enter
(bad)
jge
add
call
lods
dec
(bad)
ds
fs
push
and
jge
sar
int
jp
stos
or
test
mov
cmp
test
addr16
sahf
ins
xor
mov
clc
jbe
test
dec
push
je
dec
sub
mov
mov
or
sub
or
mov
mov
sbb
sbb
ror
mov
adc
sub
mul
xchg
fdiv
aad
sub
imul
xor
aad
addr16
nop
push
ret
lods
or
or
pop
neg
xchg
mov
xchg
mov
retf
xchg
inc
mov
movs
loopne
xchg
jmp
dec
(bad)
ss
xlat
mov
repz
pop
push
adc
cmp
stc
sub
ror
mov
sbb
mov
cli
mov
or
aad
into
imul
xor
pop
loopne
arpl
test
push
xchg
fdivr
std
pop
xor
jge
push
pusha
jmp
cli
add
sbb
rol
cmp
xchg
adc
(bad)
bound
mov
into
retf
jmp
sub
dec
sub
cld
and
xchg
xchg
push
add
dec
inc
call
add
je
sar
adc
shl
in
mov
mov
and
sbb
scas
(bad)
ret
or
mov
jae
xchg
call
jbe
sbb
repz
ins
xor
adc
jecxz
mov
pop
(bad)
sbb
outs
(bad)
fidiv
fild
shl
shl
jmp
call
cmp
pop
inc
loope
mov
jle
mov
lock
into
jmp
(bad)
jp
movs
jne
je
pusha
rcl
push
adc
lock
enter
inc
pop
addr16
call
popf
sub
test
in
test
movs
adc
rcl
sub
(bad)
xor
dec
stos
cmp
fsubr
jge
repnz
mov
les
mov
xor
adc
xchg
mov
inc
icebp
xchg
or
cmp
pop
mov
(bad)
ret
dec
mov
sub
mov
inc
push
sub
std
mov
movs
in
scas
jg
inc
mov
add
cmps
mov
dec
add
jno
test
inc
bsf
js
es
jo
imul
cld
jg
pop
pop
test
ins
add
mov
jl
xchg
int
pushf
dec
loopne
mov
jnp
jo
add
xchg
nop
cld
mov
push
test
repnz
hlt
sub
inc
imul
iret
push
or
(bad)
pop
sbb
pop
sti
in
dec
sbb
fxch
fmul
pop
sbb
jae
rcl
ds
cmp
sti
mov
mov
jecxz
adc
jp
fstp
fs
and
mov
lods
mov
popf
xchg
mov
xor
lahf
fidivr
cwde
aas
mov
cld
xchg
mov
in
sub
pop
call
or
mov
das
or
mov
in
push
in
cmps
mov
je
add
mov
mov
cmp
stc
xor
outs
and
call
stc
cwde
scas
ret
xor
inc
jne
jmp
mov
mov
pop
mov
test
nop
js
jae
lea
xchg
jecxz
rcl
add
fild
sub
sub
ds
setns
imul
xchg
mov
mov
shl
shld
(bad)
pop
inc
in
adc
pop
pushf
add
test
adc
inc
or
add
out
add
mov
dec
icebp
icebp
xchg
(bad)
std
or
stos
icebp
es
dec
push
ins
pop
(bad)
int
sub
in
sbb
mov
test
imul
and
or
or
pop
xor
mov
pop
dec
jnp
mov
push
sub
cmp
dec
sti
push
push
ds
icebp
sub
mov
arpl
cmp
sbb
sub
popa
xchg
add
repz
js
mov
add
(bad)
idiv
sbb
in
inc
enter
loop
(bad)
retf
ret
push
ja
adc
dec
add
scas
pop
(bad)
scas
mov
adc
xchg
cmp
(bad)
push
sub
lods
xor
push
shl
pusha
sub
cmp
push
sub
movs
or
mov
ror
(bad)
imul
fst
or
ret
mov
aad
cld
mov
fwait
push
retf
mov
pop
xchg
pop
cmp
add
mov
push
(bad)
stos
lds
sub
stos
add
push
adc
or
daa
in
bound
fcom
jbe
test
inc
mov
and
cmp
adc
add
cmps
fwait
jbe
sbb
scas
or
or
cwde
xchg
dec
xor
rcr
int3
or
dec
in
jb
xchg
lahf
push
push
rol
ret
sbb
out
fnstenv
je
mov
inc
ins
loope
mov
push
cli
loop
sahf
push
iret
cmp
mov
or
or
adc
sbb
mov
or
push
jmp
cli
mov
inc
pop
add
jg
or
es
pushf
sahf
mov
arpl
div
fiadd
repnz
mov
cmp
cs
push
in
ficomp
out
mov
sub
call
test
(bad)
mov
jbe
js
fldcw
fadd
in
mov
xchg
push
in
mov
popa
pop
pop
das
mov
mov
in
dec
mov
mov
rcl
idiv
sbb
jbe
retf
call
imul
aam
cdq
loope
push
jb
loopne
adc
push
dec
push
add
call
mov
je
out
sbb
add
repz
mov
(bad)
retf
pop
mov
mov
(bad)
out
xor
iret
mov
xlat
sar
shr
xchg
pushf
xlat
jns
mov
pop
push
ret
ret
repz
out
jno
(bad)
push
popa
xchg
add
cmp
ins
rol
sti
stos
test
addr16
int
ret
push
iret
lods
(bad)
es
xor
sbb
cmp
adc
dec
outs
add
push
movs
ds
lods
daa
inc
xchg
cmps
mov
add
ja
div
xor
fstp
cmp
or
or
pop
loop
sahf
xor
popa
jge
push
ror
int3
stos
jle
adc
dec
adc
iret
outs
retf
es
sbb
test
mov
frstor
add
jno
loope
mov
mov
outs
xchg
sbb
jg
icebp
and
cmp
loopne
enter
mov
jae
dec
imul
mov
jle
add
jmp
cli
mov
ror
dec
mov
or
cmp
or
dec
inc
jnp
scas
mov
sbb
clc
mov
adc
rcr
mov
into
pop
cli
cmp
push
xor
add
leave
xchg
cwde
lea
mov
and
jg
xlat
outs
ss
in
dec
adc
lods
(bad)
xchg
aam
(bad)
icebp
add
cmp
pop
mov
ret
test
push
mov
loop
inc
jbe
jae
push
cmovp
dec
imul
mov
cdq
push
arpl
cli
shl
fsub
call
(bad)
pop
jne
and
les
ins
jns
or
aad
and
clc
inc
or
fmul
cmp
jne
push
test
call
add
aas
(bad)
jmp
mov
das
test
push
(bad)
shr
push
adc
stos
icebp
(bad)
int3
fistp
or
arpl
jle
adc
inc
cmp
dec
inc
sub
inc
mov
mov
jno
mov
test
add
jmp
mov
adc
mov
push
dec
add
push
mov
jp
push
and
rcl
loop
movs
xchg
sub
cmp
arpl
das
fild
mov
je
call
es
test
push
les
add
scas
repz
es
sbb
mov
nop
mov
sbb
ins
mov
les
loop
jno
(bad)
out
in
loope
sub
push
xchg
sbb
lea
cld
mov
dec
sub
inc
leave
loopne
push
mov
add
pop
out
stos
sub
cdq
sahf
sbb
jmp
fadd
mov
or
cmps
loopne
sbb
pop
rcl
xchg
cli
xchg
or
(bad)
mov
test
mul
loop
ret
sub
iret
sbb
push
stc
dec
sti
xchg
jecxz
test
daa
icebp
repnz
nop
leave
cmp
sbb
pop
cwde
mov
fs
(bad)
test
psubq
cmp
call
xlat
test
xor
mov
sbb
jbe
shr
mov
arpl
aaa
sbb
add
sbb
cwde
jbe
(bad)
sbb
movs
vandps
pop
mov
js
sub
mov
jb
icebp
push
imul
jle
loop
pop
xor
pusha
push
stos
addr16
jg
pop
sahf
sbb
das
dec
and
jbe
mov
iret
iret
xchg
sbb
(bad)
rcl
add
ss
ret
jmp
xlat
pop
mov
aaa
inc
and
sbb
pop
add
iret
sti
pushf
js
add
js
add
aam
sub
test
sub
cmp
add
mov
sahf
sar
retf
xchg
xor
ror
or
js
lds
bound
addr16
add
jg
aas
jae
mov
xchg
push
lods
inc
sbb
mov
jno
sti
cmp
cmp
dec
fmul
xor
fsub
arpl
jno
xchg
adc
add
test
shl
(bad)
lahf
rol
pop
fstp
pop
movs
cmp
lahf
pop
imul
imul
cdq
and
ret
cli
jne
pop
call
mov
jns
dec
cmp
shl
clc
int3
cs
js
mov
or
mov
add
jne
push
sbb
mov
pop
add
xor
sub
push
sti
ins
dec
arpl
adc
repnz
xor
push
repnz
dec
inc
gs
aam
out
mov
jle
js
mov
shr
add
xlat
dec
dec
jno
adc
adc
mov
mov
hlt
repz
cli
inc
fistp
sbb
pop
ret
pop
stos
shr
fstp
xchg
test
ja
ins
mov
out
fdivp
(bad)
shl
rcr
cdq
and
mov
mov
mov
lods
jmp
jge
push
fdivr
int
fadd
rol
repz
mov
(bad)
fsub
or
sub
loopne
xchg
push
stos
inc
sub
repnz
dec
inc
movs
ss
icebp
fwait
(bad)
into
stc
cmp
test
in
les
mov
adc
ins
fcom
test
push
and
lahf
cmp
inc
and
inc
xchg
xchg
fucomip
add
mov
pop
sub
adc
push
adc
fnsave
mov
jno
xchg
jg
mov
mov
cmps
(bad)
ret
mov
adc
fcomp
ret
adc
iret
iret
or
jbe
sbb
fcmovnu
jg
jle
(bad)
and
sbb
(bad)
stc
push
(bad)
rol
scas
xchg
movs
xor
popa
and
movs
pop
jmp
adc
push
and
jbe
and
cmp
mov
shr
pop
add
shl
mov
in
add
sbb
cmp
int3
sbb
xchg
fnsave
lea
js
sahf
mov
xor
aad
pop
xor
jecxz
imul
mov
and
les
rcl
popa
(bad)
cmp
movs
dec
(bad)
fiadd
test
fcom
push
mov
or
and
sahf
pop
out
mov
outs
stc
add
sar
test
popf
inc
push
into
mov
sub
adc
pop
jbe
push
(bad)
cli
mov
(bad)
push
or
inc
add
mov
pop
in
in
pop
sub
loope
sti
pop
ins
js
or
sar
sar
repnz
ror
push
test
add
mov
mov
xchg
mov
mov
or
jg
xor
arpl
add
push
rcl
icebp
jecxz
cmc
mov
inc
dec
cld
adc
hlt
inc
sahf
(bad)
loopne
add
out
adc
aad
test
or
jle
loop
mov
es
stc
imul
xchg
sub
sub
ret
inc
(bad)
fs
push
xchg
imul
jno
shr
pushf
out
push
popa
sti
sar
push
pop
test
xchg
push
sbb
or
inc
call
sbb
or
pop
mov
or
inc
repz
data16
lea
pushf
jge
std
and
push
jnp
ror
sahf
mov
mov
call
test
dec
inc
push
sar
bound
test
loop
fstp
jne
fwait
sbb
div
call
jmp
inc
sub
or
gs
or
sti
icebp
outs
out
fs
cmp
or
movs
daa
adc
ins
and
shl
mov
jge
clc
sub
(bad)
in
pushf
add
shr
das
push
arpl
push
add
enter
inc
cdq
mov
xor
lea
out
sbb
shl
jns
sbb
jmp
loop
retf
je
rol
popa
in
push
(bad)
ins
adc
call
retf
scas
mov
xchg
cmp
repnz
dec
aas
or
retf
aad
or
addr16
add
adc
push
loopne
inc
adc
test
std
lock
shl
xor
jns
inc
add
or
movs
cmovl
(bad)
fistp
adc
xchg
stc
push
pop
mov
adc
fstp
aam
inc
loop
xlat
stos
ret
push
ret
mov
and
jb
movs
xor
cmps
call
cmp
mov
inc
inc
fs
mov
stos
and
dec
cmc
(bad)
sub
add
xor
rcr
sti
loopne
mov
push
lods
push
push
sahf
jns
lods
int
sbb
(bad)
jbe
sbb
imul
sbb
mov
out
cdq
sub
push
mov
das
mov
lds
cmp
popa
xchg
int
push
jnp
xchg
xchg
out
cmp
data16
scas
jmp
lods
dec
rol
std
lahf
ret
out
es
or
iret
pop
fldcw
popf
cmp
jecxz
loope
js
push
xchg
cmps
inc
(bad)
aaa
xchg
cld
(bad)
out
cld
fdivr
xchg
sub
rcl
sar
push
adc
sbb
mov
jae
jmp
addr16
ins
ficom
xchg
scas
lods
adc
into
xchg
retf
into
je
mov
sti
jecxz
popf
dec
loop
popa
rol
adc
mov
xchg
dec
sbb
jmp
cmp
cmp
(bad)
mov
jae
and
cwde
or
aaa
and
jo
xchg
xor
push
pop
mov
test
aaa
or
das
add
pop
ret
adc
push
sahf
arpl
leave
mov
mov
cmp
int3
sub
clc
xchg
jnp
scas
jns
jl
inc
pop
sar
out
xchg
adc
and
mov
mov
push
mov
mov
jae
mov
mov
cmp
scas
hlt
aam
add
call
int3
int
xor
add
xor
sbb
xchg
adc
movs
shr
in
pop
jmp
dec
inc
sbb
out
mov
dec
arpl
xchg
mov
daa
or
(bad)
and
call
out
wbinvd
lods
retf
div
shl
cmp
adc
cwde
mov
and
and
fild
xchg
push
push
cs
mov
movs
dec
fwait
ds
push
push
aad
inc
xlat
mov
inc
xor
outs
popf
outs
and
inc
adc
cmp
ja
rcr
loop
jne
push
enter
adc
jmp
sub
dec
lods
inc
mov
scas
jge
push
std
jb
jge
mov
aad
fwait
inc
add
mov
es
out
add
in
rcl
int3
adc
jle
int
daa
fidiv
scas
hlt
xor
jns
pop
xchg
inc
add
aaa
retf
dec
ins
sbb
cmp
jmp
ss
mov
out
lods
sbb
(bad)
(bad)
lds
mov
jns
push
sti
sbb
pop
push
pmaxsw
jge
mov
push
and
jns
loop
rol
xchg
out
lahf
add
push
cs
dec
sub
pop
add
mov
hlt
retf
repz
push
addr16
sub
les
imul
rcl
test
into
in
inc
mov
loopne
div
ins
or
das
call
mov
jp
mov
fisttp
scas
sub
xchg
lds
in
rcr
sbb
js
adc
ins
leave
je
loope
or
xchg
push
retf
scas
sub
or
mov
pop
or
pop
mov
test
loop
dec
pop
mul
or
mov
lock
jp
in
cwde
test
loop
pop
rcr
lock
adc
or
or
popf
jae
int
mov
pop
aas
inc
jg
sub
or
test
das
add
pop
hlt
xchg
mov
int
div
adc
mov
adc
lock
sub
pop
sar
stos
rcl
out
sahf
mov
sti
mov
xor
jmp
jge
mov
ja
enter
dec
sbb
or
scas
xchg
inc
retf
inc
icebp
ret
repz
and
pop
or
or
xor
mov
bound
and
inc
pop
js
xor
retf
(bad)
mov
cdq
aam
push
mov
xchg
int
inc
ins
xor
inc
fidiv
add
xchg
add
adc
test
dec
sub
aaa
xchg
add
out
cld
add
cs
iret
stos
inc
aaa
pop
jnp
call
popa
gs
push
mov
add
call
ins
(bad)
movs
dec
mov
dec
pop
dec
adc
pop
xlat
ins
and
(bad)
adc
(bad)
int3
jge
(bad)
pop
jns
dec
hlt
push
sub
pop
shl
mov
test
xor
or
retf
cmpps
lea
rcr
mov
in
mov
jns
sbb
and
jno
loope
sub
pop
cdq
xchg
pop
xchg
in
xchg
fwait
scas
sub
sub
push
cmp
jb
aas
push
dec
cli
xor
mov
xchg
daa
rol
neg
pop
push
cmp
out
sbb
cli
push
mov
popa
dec
mov
push
sti
aas
retf
add
mov
mov
loope
ret
pop
popf
adc
add
sbb
dec
sbb
ins
aam
mov
test
ficom
xor
ds
cli
sar
xor
cld
lds
je
fdivr
(bad)
cmc
cmc
inc
mov
jne
loopne
aaa
jmp
jge
xchg
add
jno
fsub
je
es
jp
mov
inc
add
dec
fild
in
addr16
call
aaa
in
push
fdivr
fistp
iret
mov
ficom
retf
popf
xchg
mov
inc
std
mov
test
mov
or
dec
adc
mov
(bad)
and
sub
call
repz
enter
mov
inc
pop
loopne
sbb
enter
outs
or
jb
out
push
iret
inc
out
jb
test
pushf
fdivp
add
les
repnz
jmp
popf
lods
and
not
in
inc
jbe
adc
sbb
xchg
jmp
scas
fwait
cmp
lea
imul
ror
or
pop
mov
pushf
jae
or
je
stc
fcomp
shl
inc
scas
stos
xor
daa
pop
jle
fnstcw
imul
cli
pusha
inc
ror
lods
xor
adc
scas
inc
xlat
sub
and
test
adc
nop
dec
nop
in
adc
popa
jns
adc
mov
popw
daa
xor
std
retf
sti
jns
xchg
jmp
adc
xchg
mov
sub
xor
iret
mov
mov
out
std
scas
xchg
inc
out
pusha
ins
mov
and
int3
pushf
add
or
cmps
stos
ds
das
xchg
ja
xor
cmps
mov
pop
jge
fs
mov
ins
out
sbb
or
fwait
inc
jmp
popf
clc
por
mov
in
adc
popa
mov
sbb
loop
stos
les
xchg
mov
xchg
or
loopne
dec
(bad)
lods
daa
jecxz
xchg
jge
push
add
cwde
jge
mov
dec
or
add
jecxz
mov
sbb
cmp
jl
lods
mov
push
int3
dec
and
cmp
cmc
iret
and
neg
aam
out
std
(bad)
iret
add
and
xchg
sub
cli
sbb
cmp
jmp
lea
mov
fs
xchg
and
outs
sub
in
jno
inc
mov
mov
pop
into
(bad)
lahf
data16
leave
xchg
inc
ret
mov
mov
sbb
lahf
push
fcmovbe
out
lods
loopne
fs
outs
test
(bad)
adc
dec
jg
jecxz
fdivr
data16
pop
cld
fwait
out
idiv
repnz
data16
pop
pushf
call
cli
xchg
sbb
add
shr
push
and
add
(bad)
inc
sbb
je
leave
loope
lods
dec
jle
adc
fisttp
lahf
push
hlt
in
retf
cmp
rcr
push
push
mov
les
pushfw
loop
out
mov
or
inc
and
xor
jo
mov
repnz
ins
push
sbb
imul
xchg
loop
stos
pop
lock
popa
xchg
test
push
jbe
out
idiv
imul
pop
sub
and
mov
cdq
test
test
test
(bad)
mov
(bad)
sti
out
jmp
xchg
ja
js
xor
sbb
xchg
cmp
add
mov
xor
sbb
dec
cdq
adc
popf
out
and
mov
or
cld
pop
fisubr
sbb
adc
repnz
pmaddwd
adc
pop
lahf
fisubr
sub
or
movs
push
neg
sbb
icebp
jmp
bound
out
scas
xchg
xchg
push
sub
bound
scas
mov
int
outs
call
cld
test
xchg
ret
fbld
es
sbb
(bad)
call
fld
sub
cmp
ins
pop
je
jmp
add
sbb
xor
mov
sub
aas
pop
pop
sti
or
jl
mov
aam
hlt
or
mov
or
push
xlat
lea
sbb
inc
addr16
mov
stc
push
cmps
inc
stc
aas
scas
jo
and
test
shl
cmc
jmp
dec
loopne
jmp
in
xchg
pop
aam
test
mov
inc
scas
xchg
lds
xor
xor
and
scas
cli
jnp
int
pop
into
cs
hlt
pusha
push
push
pushf
sub
mov
inc
data16
and
push
jae
ret
push
(bad)
jnp
aas
arpl
(bad)
vpaddw
or
aad
push
pop
add
xchg
ror
push
movs
cmp
or
cli
aad
outs
ror
inc
pop
lahf
and
jne
aaa
inc
mov
mov
(bad)
(bad)
(bad)
test
scas
mov
adc
je
fist
jge
xchg
into
push
popf
mov
aas
push
loopne
aam
imul
das
loope
xor
xchg
retf
sbb
inc
es
xor
ret
sti
call
scas
or
aas
test
pushf
push
push
pop
sbb
mov
clc
call
pop
dec
xchg
xchg
sbb
jno
call
sub
repz
dec
push
xchg
daa
daa
xchg
(bad)
add
dec
add
jae
pusha
xlat
bound
add
in
pop
adc
sub
mov
jle
test
stos
or
daa
mov
(bad)
adc
hlt
dec
mov
loop
fcmovbe
retf
and
and
loopne
push
int3
mov
jl
inc
mov
pop
sbb
lods
push
jg
ret
xor
pop
dec
sbb
jl
aam
cld
stc
sbb
jae
in
sub
stos
add
push
out
test
xor
out
cmp
mov
mov
aad
push
xor
xchg
pushf
aaa
sar
jge
pop
(bad)
scas
in
outs
(bad)
inc
pop
fwait
push
not
mov
pop
mov
xor
clc
(bad)
retf
sti
jae
push
mov
cmc
jnp
repz
or
cmp
jmp
pop
sub
sub
sbb
push
shl
push
ins
sub
in
mov
add
push
scas
sbb
mov
imul
mov
addr16
lods
retf
xchg
dec
dec
inc
inc
mov
adc
mov
cs
push
pop
add
scas
adc
loop
jl
hlt
aaa
mov
jl
inc
add
into
jmp
jmp
push
push
adc
xchg
outs
jne
rcl
dec
mov
add
cmp
jge
aas
test
int3
cmpxchg
aaa
or
lea
pop
pop
jl
xchg
sub
add
pushf
mov
fs
push
rol
sbb
lds
js
sub
mov
ret
dec
mov
jg
aam
inc
mov
daa
std
rol
pop
in
and
jmp
fs
cmc
cld
sub
lock
adc
jge
ds
popa
cmp
xchg
add
sbb
sub
(bad)
test
scas
retf
push
jnp
push
jmp
bnd
into
movs
mov
jbe
int3
div
dec
jle
imul
push
adc
sar
pop
dec
out
icebp
mov
fcom
leave
mov
in
pop
(bad)
pop
(bad)
ss
into
sbb
repz
push
jmp
sbb
fld
in
cmp
outs
add
(bad)
ja
sbb
sub
mov
(bad)
or
mov
pop
fld
xchg
cmp
movs
cs
lods
mov
movs
pop
fld
sub
jo
and
lods
mov
mov
dec
dec
mov
(bad)
sar
jge
sbb
mov
jne
hlt
push
stos
clc
sbb
retf
and
cmp
mov
mov
sub
jmp
mov
inc
adc
cmps
daa
imul
jecxz
pop
iret
push
imul
cmp
dec
mov
jo
dec
out
push
cmc
adc
cmc
fidiv
scas
mov
arpl
enter
sub
sub
and
mov
cmps
mov
mov
icebp
pop
stc
stos
sub
inc
nop
adc
inc
pop
push
(bad)
jno
push
inc
cmp
enter
repz
xchg
mov
pusha
das
jl
bound
xchg
fiadd
(bad)
xchg
pushf
jns
mov
pop
pop
arpl
fsubr
ja
jmp
jmp
jg
dec
adc
stc
je
gs
cmp
outs
jnp
dec
paddq
ds
(bad)
xor
stos
ret
pop
xor
mov
loop
sar
push
mov
pushf
ror
(bad)
pop
jmp
cmp
push
in
scas
and
cmc
fwait
inc
arpl
cmp
into
xchg
sub
dec
inc
inc
mov
sub
xchg
mov
pop
out
push
cli
cwde
dec
cmps
dec
xchg
ds
imul
cmc
es
push
cmp
ins
rcr
out
jge
repz
sbb
cmc
push
cmps
jb
jge
stos
mov
sbb
adc
call
push
sub
add
lock
inc
cmc
cwde
mov
jmp
push
std
jae
or
leave
pop
sub
sbb
pop
mov
and
add
cmp
push
test
or
inc
pushf
retf
mov
jbe
les
lods
retf
jge
mov
out
jmp
xor
mov
sbb
add
js
mov
retf
adc
hlt
fld
adc
jno
(bad)
jae
and
and
ss
xchg
lods
stos
push
cmp
inc
cmp
das
adc
inc
dec
sar
xchg
add
pop
sahf
dec
or
xchg
out
or
addr16
fidiv
mov
or
js
sub
retf
clc
cmp
lods
push
(bad)
sub
(bad)
es
and
mov
pusha
mov
arpl
cmp
stos
iret
repnz
xchg
dec
xchg
or
loop
xlat
push
add
xchg
dec
aaa
psllq
sahf
adc
aam
xchg
(bad)
mov
mov
retf
xor
push
mov
adc
ins
xchg
popf
push
xor
mov
popa
pusha
sub
inc
cmp
jmp
jnp
jae
push
cmc
or
mov
cmp
nop
into
dec
dec
aas
jb
movs
js
lods
cmp
mov
push
jno
test
outs
(bad)
pop
fbstp
lea
add
push
mov
xor
sub
jne
int
dec
mov
cmp
fidivr
push
and
ss
retf
dec
dec
mov
inc
xchg
dec
into
iret
add
fld
repz
xchg
cmp
mov
dec
xor
mov
popa
sahf
xor
push
mov
mov
pop
cmp
ss
aaa
into
imul
fcmovnbe
xchg
in
lahf
fidiv
enter
pop
inc
inc
inc
adc
push
fisttp
push
mov
inc
das
sahf
mov
gs
jae
sbb
pop
sbb
pop
jne
adc
and
stos
or
out
mov
push
mov
adc
hlt
lods
movs
iret
mov
mov
(bad)
out
add
icebp
jo
and
test
fisttp
jecxz
les
mov
cmp
repnz
sbb
into
jb
xchg
mov
xor
inc
dec
movs
lock
cmc
ds
sbb
xchg
movs
cdq
imul
push
retf
sub
push
mov
mov
out
retf
fadd
ss
sub
ficomp
das
sti
fstp
and
scas
xchg
out
int
ds
(bad)
cmp
lea
(bad)
mov
lea
ror
and
mov
mov
stos
and
test
mov
iret
lods
sti
xchg
mov
mov
popa
mov
jmp
ds
daa
stos
icebp
fidiv
clc
cmc
push
dec
sub
xchg
inc
fnstenv
in
cmps
jbe
mov
xchg
call
stos
cld
call
or
pop
pop
or
mov
inc
cwde
or
in
jne
cwde
cmp
mov
dec
call
rcl
adc
out
add
sub
and
ins
(bad)
push
add
jmp
cmps
inc
popa
sti
iret
sub
push
std
inc
jg
pop
jmp
jge
retf
cmp
(bad)
fist
test
pop
dec
dec
push
in
or
sar
sub
call
loope
and
dec
or
pushf
dec
push
jns
sbb
cmps
or
shl
add
push
cmp
xor
cmp
mov
retf
aas
mov
rcr
inc
test
aam
mov
iret
push
popf
data16
and
ror
daa
hlt
adc
movs
xchg
inc
retf
mov
xor
in
cmp
pop
cmps
ja
in
nop
sar
dec
and
in
mov
fstp
xchg
pop
es
sbb
push
js
dec
jge
sub
cmp
outs
scas
sub
add
sub
nop
inc
add
stos
xchg
or
mov
and
js
add
icebp
mov
cmc
cld
sbb
push
pusha
movs
add
outs
loope
ret
ja
push
dec
(bad)
repnz
or
mov
xlat
cmc
push
mul
dec
mov
(bad)
fcomi
loope
imul
imul
and
push
daa
adc
push
jnp
adc
xor
(bad)
cmp
bound
push
sbb
cmp
jecxz
pop
mov
dec
pop
mov
dec
outs
(bad)
mov
int
stc
call
mov
inc
dec
in
cmp
test
(bad)
and
jae
pop
mov
jns
out
rcr
shl
pusha
sbb
pop
sbb
dec
mov
mov
sbb
dec
jae
loope
pop
push
je
mov
fimul
or
pop
cmp
xor
adc
or
dec
xchg
std
inc
sub
sar
cmp
popf
adc
js
gs
jnp
cmp
and
xlat
not
xchg
push
dec
jns
lock
call
inc
jae
cmp
jp
xchg
in
xchg
lock
mov
test
pop
int
movs
xor
push
sub
mov
adc
dec
in
std
or
cmp
xor
mov
push
and
loope
imul
dec
sbb
pop
and
fiadd
rcl
sub
cmc
sbb
cdq
ins
adc
scas
jo
loopne
repnz
mov
stos
out
inc
mov
outs
sbb
clc
(bad)
sbb
je
outs
es
or
aas
mov
xor
jo
ficomp
ret
mov
xor
lods
fmul
xlat
jmp
dec
cmp
pushf
cmp
inc
jecxz
sbb
ds
dec
not
shl
fnstsw
(bad)
in
popf
ret
mov
mov
xchg
idiv
repnz
xor
fs
inc
adc
xchg
pop
ins
loopne
loope
imul
(bad)
sub
dec
mov
xor
sub
and
jbe
out
call
pop
inc
pop
loopne
cs
ret
inc
mov
iret
jmp
mov
or
mov
push
or
inc
dec
ror
sub
ja
push
jg
hlt
fld
sub
pop
dec
xchg
(bad)
lds
fistp
aad
pop
mov
inc
jb
push
inc
push
inc
mov
xchg
ret
xchg
push
and
add
or
mov
in
call
mov
or
loopne
cld
xchg
xchg
hlt
sbb
push
mov
addr16
or
pop
xor
(bad)
and
cmps
sub
mov
mov
cmps
mov
sahf
call
sti
mov
lock
cs
out
push
adc
movs
sub
sub
mov
(bad)
jns
add
and
fimul
shl
xchg
mov
rcl
push
pushf
mov
imul
add
push
retf
xlat
mov
retf
or
hlt
into
push
jg
xor
movs
icebp
push
pop
or
fld
sbb
and
lea
addr16
stc
xchg
mov
ins
and
stos
adc
mov
sbb
lods
sub
push
inc
loop
mov
xchg
push
pusha
inc
cmp
xchg
mov
pushf
sub
push
pop
sahf
fisubr
add
inc
repz
imul
mov
jo
lock
call
jbe
(bad)
push
push
int
jnp
and
adc
jmp
fcomp
adc
ja
adc
sbb
(bad)
mov
xor
jb
ror
push
(bad)
jmp
sahf
daa
dec
pop
add
push
aas
movs
daa
daa
ds
xor
cmp
cmp
add
cmp
pop
ret
out
xor
movs
in
(bad)
sub
xchg
sbb
mov
pop
lock
mov
xchg
cmp
fstp
mov
and
out
std
add
push
enter
xor
sub
push
xchg
and
adc
fwait
ret
js
and
les
cmp
and
xor
in
mov
xor
xor
cmp
cmc
sahf
fwait
ret
inc
cmp
mov
mov
adc
pop
dec
sbb
xor
xchg
sub
push
paddq
lods
jnp
mov
xchg
aaa
(bad)
ja
ja
push
stc
pop
pop
dec
mov
rcr
adc
aad
sub
mov
stc
xor
orps
stc
dec
arpl
push
lahf
push
in
inc
jno
add
inc
mov
scas
mov
xchg
int3
xor
rcr
push
xchg
ja
lods
cs
push
sbb
mov
inc
sub
bound
inc
xor
lahf
cmp
mov
jnp
ja
in
shl
pop
xchg
cli
push
xchg
dec
mov
xchg
push
imul
out
aam
jle
dec
pop
cmp
jp
xor
test
sbb
add
dec
inc
mov
push
and
ss
imul
js
dec
dec
std
aam
xchg
pop
ret
fs
jbe
pop
mov
sbb
sub
mov
rol
xchg
shl
sub
jmp
add
jno
push
fsubr
sub
add
xchg
stos
sbb
xchg
aad
fst
push
idiv
es
rol
mov
rol
cmps
jne
jbe
mov
imul
ds
cli
neg
ret
push
lahf
das
pop
mov
icebp
out
sbb
or
or
outs
mov
dec
jmp
dec
(bad)
int
push
sbb
gs
jmp
fcmovnbe
repnz
mov
ins
cli
add
test
in
jmp
out
dec
bound
imul
add
push
daa
lods
jae
test
pop
pop
out
xchg
and
pop
(bad)
dec
push
xchg
lds
xchg
or
inc
ror
in
or
mov
test
movs
inc
or
jmp
mov
and
into
and
xchg
dec
dec
fadd
push
cmp
ins
mov
stos
fnstenv
repz
mov
mov
hlt
dec
xchg
inc
and
inc
mov
jmp
mov
ds
inc
push
xor
test
mov
mov
push
dec
and
test
mov
inc
loop
test
push
pop
(bad)
jns
les
dec
ror
(bad)
jle
lods
add
mov
jmp
or
je
or
in
aad
enter
js
xchg
cmp
xor
mov
jne
fistp
pop
dec
xor
push
push
arpl
mov
jp
inc
cmp
jp
dec
call
cmp
(bad)
stos
or
inc
push
imul
sub
cwde
rcr
aaa
push
cs
mov
repnz
sub
(bad)
cmp
pop
dec
js
loopne
loop
adc
test
inc
dec
nop
xor
push
xlat
test
xor
test
scas
(bad)
icebp
mov
ror
stos
ss
push
push
xchg
xchg
xlat
je
out
(bad)
retf
stc
icebp
test
mov
mov
cmp
dec
enter
jns
push
add
sahf
xchg
jbe
out
push
sti
mov
jmp
mov
sub
lahf
arpl
cmp
mov
cmps
(bad)
mov
sub
(bad)
jne
fisttp
std
loopne
cmp
cmc
inc
pop
xchg
adc
dec
inc
jp
les
retf
mov
xor
pop
sar
xchg
(bad)
fidivr
mov
dec
xchg
nop
xchg
int3
sbb
std
or
out
rcr
xchg
ss
icebp
sbb
adc
lock
inc
in
ja
cmp
add
test
dec
pop
sbb
mov
and
adc
and
scas
retf
in
loope
mov
inc
xchg
jae
loopne
xor
sub
mov
fisubr
int3
adc
les
ret
fist
sbb
mov
cdq
iret
ret
call
aaa
mov
mov
aam
leave
mov
add
inc
push
push
sti
xor
(bad)
adc
mov
push
sub
and
addr16
and
loope
lds
scas
cmps
pop
xchg
nop
or
xchg
inc
test
nop
cmp
fild
imul
cli
mov
test
xchg
jb
sbb
jmp
jne
imul
or
addr16
dec
out
inc
jns
xor
push
pop
dec
dec
mov
das
xor
cmp
cmp
xchg
fdiv
push
sub
js
push
iret
enter
mov
inc
xrelease
jae
leave
mov
sbb
lahf
mov
outs
(bad)
jmp
ret
cmp
mov
xchg
xchg
je
add
jg
(bad)
add
rcr
popf
retf
mov
or
push
in
cs
mov
fnsave
xchg
ss
movs
iret
mov
mov
ret
stos
rol
bnd
mov
lods
ja
scas
(bad)
cmc
shr
mov
pop
xor
rcl
stos
xchg
pop
jbe
in
jl
stc
dec
jl
(bad)
sbb
mov
push
mov
adc
std
xchg
cmps
aam
sub
sbb
cld
mov
mov
mov
mov
and
push
call
ror
das
outs
mov
cmps
xor
movs
sbb
fst
mov
neg
cmp
shl
xor
fimul
ins
add
and
ror
mov
out
shl
and
fs
xchg
in
lods
popa
mov
fwait
and
xlat
mov
mov
cmps
xor
add
xchg
repz
cmps
or
cmp
in
fisttp
das
es
xor
lods
add
pop
jecxz
push
sub
inc
fild
adc
movs
imul
and
push
and
xor
(bad)
cmp
add
es
or
push
cmp
mov
retf
std
bswap
xchg
push
sub
dec
clc
cld
imul
call
xor
sti
hlt
push
or
mov
pop
std
aam
push
call
out
and
iret
push
push
and
out
iret
and
push
dec
adc
(bad)
or
pop
(bad)
icebp
sbb
cmc
xchg
mov
add
ret
mov
add
dec
xlat
gs
leave
aad
push
fimul
(bad)
fadd
xor
int
(bad)
aam
xor
ror
xchg
icebp
mov
gs
push
imul
push
xchg
add
inc
xor
sar
gs
test
loop
and
ss
clc
retf
xor
or
(bad)
ror
jmp
xchg
daa
adc
push
test
add
pop
push
inc
sbb
cmp
jns
lahf
xor
dec
mov
jmp
mov
inc
pop
push
push
fiadd
dec
cmc
sbb
ret
pop
loop
jmp
cs
rol
stos
cmps
jns
lds
push
or
add
jo
pop
cmps
jnp
arpl
jb
or
push
jle
xor
loope
test
popf
loopne
and
mov
or
pop
mov
dec
adc
pusha
sahf
es
sahf
jmp
jo
push
jns
popf
jb
mov
movs
or
push
(bad)
ja
adc
pop
dec
shl
add
and
xchg
xchg
jnp
xchg
xchg
dec
loop
pop
test
add
pop
mov
xlat
pop
adc
inc
shr
pop
repz
retf
dec
mov
push
jno
cmp
popf
fld
pop
rol
mov
jge
xchg
ins
cmps
mov
arpl
mov
push
test
loope
jno
je
cmp
mov
out
cmp
nop
call
mov
out
iret
aas
shr
stc
fistp
pushf
cld
pop
push
ret
mov
adc
out
lds
out
push
inc
test
xor
jmp
stos
dec
(bad)
jle
dec
and
sar
pop
fbstp
aam
pushf
add
ficom
lods
cmp
pop
jb
mov
inc
fs
push
test
test
pop
add
clc
rcl
mov
mov
call
ror
inc
loopne
xor
les
mov
xor
pop
mov
nop
mov
jecxz
lods
lahf
adc
daa
imul
or
sbb
sti
add
bswap
inc
cmp
inc
sbb
jle
outs
jmp
and
popa
stc
ins
xchg
mov
inc
pop
sub
push
sahf
cmp
pushf
jl
imul
mov
(bad)
fiadd
or
or
jno
movs
imul
call
dec
(bad)
rol
adc
retf
xlat
push
pop
xchg
ds
add
mov
xchg
xor
in
scas
std
add
xor
cmp
fld
ins
imul
pop
aad
loope
add
shl
fwait
push
xor
hlt
nop
jp
into
pop
or
(bad)
(bad)
scas
addr16
icebp
add
mov
xor
mov
(bad)
sti
sub
dec
sub
adc
mov
ins
test
adc
cmp
mov
jg
(bad)
int
xor
in
xchg
and
inc
xor
mov
adc
clc
push
pushf
mov
out
sysenter
fcmovne
jns
fst
shr
mov
fucomp
adc
xchg
ja
push
push
jb
daa
rcr
sub
inc
shl
movs
scas
and
in
cmp
mov
push
mov
xchg
js
pop
int
mov
xchg
xchg
dec
pop
test
aaa
or
cmp
(bad)
dec
jecxz
repnz
int
pusha
shld
xchg
shl
push
adc
sbb
daa
xlat
ret
(bad)
mov
int3
add
fwait
jns
sbb
jmp
sub
inc
dec
adc
out
xlat
in
adc
mov
push
push
ficomp
jnp
xor
mov
mov
ret
inc
out
mov
hlt
icebp
mov
xchg
rcl
(bad)
jae
dec
adc
pusha
pop
and
(bad)
fsub
shl
jno
pop
cmp
test
push
xor
adc
mov
pop
sar
cmove
xchg
loopne
and
mov
mov
dec
shl
cmps
mov
int3
int3
ret
es
push
or
lahf
retf
xlat
push
adc
in
in
adc
mov
(bad)
and
fst
aaa
outs
mov
das
jmp
aam
jmp
and
pop
les
sub
popa
sub
cmps
sub
inc
xor
sub
add
adc
adc
rcl
push
adc
and
push
call
xor
pop
and
lods
mov
or
mov
dec
fisubr
and
xlat
mov
iret
pop
dec
mov
mov
pop
mov
jmp
loope
stos
xor
lods
cld
pop
mov
push
lahf
push
cwde
dec
dec
popf
ins
repz
mov
and
icebp
xchg
inc
arpl
adc
or
or
daa
fsub
sub
cmp
sbb
push
loopne
test
mov
xchg
pop
out
inc
not
pop
icebp
dec
fcomi
dec
inc
sti
lds
imul
pop
or
scas
cdq
push
in
xchg
leave
dec
dec
rol
ret
out
pop
in
xchg
xchg
popa
adc
xchg
in
xor
ret
xor
ins
push
mov
lahf
jbe
pop
je
rcl
adc
xchg
cs
sbb
pop
jo
pop
dec
xchg
fisubr
adc
sbb
mov
sub
sar
cmp
mov
adc
jecxz
lods
push
sti
or
cmp
xor
test
movzx
cmp
fyl2x
out
jmp
dec
es
sbb
repnz
sbb
(bad)
jge
call
imul
push
test
add
mov
ret
fs
inc
stos
dec
mov
cmp
cmps
sub
sahf
lods
fs
loopne
adc
ficom
mov
mov
in
lds
cmps
add
mov
in
rcr
or
cmp
ret
adc
ss
push
pop
add
pop
mov
jge
jns
or
mov
jmp
push
mov
lods
lock
add
cmp
call
mov
and
xor
mov
lods
jno
cmps
xchg
test
in
mov
inc
sub
xor
aaa
and
inc
push
sbb
aam
jno
cmp
retf
mov
mov
clc
xchg
aaa
xchg
mov
movs
clc
inc
cs
push
je
xchg
popf
cwde
rcr
dec
movs
mov
pop
ss
inc
int3
mov
push
dec
shl
sub
jns
hlt
adc
dec
add
in
jge
push
mov
xor
sbb
dec
inc
ins
lock
mov
pop
sub
in
jp
xchg
or
sbb
lea
dec
std
sub
sar
out
dec
ss
add
pop
sub
js
call
dec
cmc
fidivr
xor
test
test
pushf
test
mov
ins
jmp
push
inc
int3
dec
mul
pop
loopne
push
in
jle
pop
sahf
cmc
retf
mov
xlat
xchg
test
or
cmp
aad
pushf
mov
call
sub
add
mul
in
dec
popf
mov
ret
jb
imul
out
pop
popw
outs
or
sub
xchg
pop
push
lds
aas
mov
mov
xchg
xor
repnz
and
mov
out
retf
or
jno
stos
fidiv
mov
mov
bound
mov
jge
sbb
rcl
add
jne
ror
fldcw
mov
aad
(bad)
dec
inc
pop
mov
into
dec
fsubp
dec
je
add
lock
sbb
es
out
lds
scas
into
push
inc
jbe
mov
ret
ror
xor
inc
rol
adc
test
(bad)
es
mov
ins
inc
mov
jbe
jmp
fisub
ror
int
cmp
inc
fmulp
dec
dec
mov
jmp
shr
inc
push
(bad)
mov
int
aas
pop
pusha
xchg
sbb
loop
mov
(bad)
out
mov
mov
out
or
jge
mov
push
int3
sti
inc
pop
lea
inc
mov
lods
fldenv
push
clc
pop
jns
jne
sub
dec
int
dec
ret
sub
add
fstp
xlat
jno
in
(bad)
dec
stos
dec
test
mov
dec
pop
inc
cmp
movs
movs
xchg
and
pop
inc
push
jg
sbb
adc
cwde
sub
pop
jge
mov
cwde
and
bound
dec
movs
imul
jnp
out
xor
(bad)
xor
cmp
lea
aaa
jno
mov
shl
push
outs
xor
icebp
pop
push
and
and
(bad)
pop
jg
les
push
xchg
jnp
int3
xchg
popa
pop
dec
sti
imul
mov
dec
jb
mov
cmp
inc
sbb
inc
enter
sub
sub
sbb
mov
cmp
pop
mov
xor
inc
mov
push
or
and
loopne
scas
outs
mov
sar
(bad)
jae
adc
lods
jg
xor
add
outs
out
xchg
mov
je
sub
mov
dec
stc
loope
scas
xchg
fcmovb
dec
icebp
leave
popf
sbb
ret
jp
dec
jno
(bad)
xchg
and
add
arpl
pop
cmp
add
stos
mov
in
xchg
xchg
sub
scas
push
pop
inc
and
mov
mov
rep
hlt
dec
je
or
sbb
pop
aaa
mov
xchg
std
sub
movs
arpl
pop
retf
aas
push
cdq
ret
pop
les
sub
lock
pop
push
imul
cmc
(bad)
stos
scas
mov
mov
mov
aas
dec
gs
or
les
xchg
push
inc
iret
xor
and
fild
lods
call
and
mov
push
jecxz
ret
call
in
dec
jno
je
push
repz
and
dec
xor
cmp
fwait
jle
sub
addr16
nop
pop
in
lock
cmc
ja
into
imul
mov
cli
nop
xchg
dec
(bad)
in
fcom
test
or
ss
in
mov
movs
(bad)
mov
(bad)
loope
cmp
fst
and
pop
or
mov
ret
or
movs
sahf
loope
xchg
mov
arpl
mov
pop
iret
pop
lds
pop
inc
test
loopne
mov
sahf
popa
in
push
aas
jmp
mov
pop
pop
pop
mov
shl
add
outs
cmp
adc
popa
das
or
ss
enter
fisubr
fstp
inc
int
push
dec
lods
inc
cmp
pop
ret
and
jnp
rcl
jmp
sbb
mov
jl
dec
ja
cli
jns
jp
cmps
sub
(bad)
cmp
mov
add
add
cwde
lahf
bound
mov
cmps
sbb
push
jno
mov
nop
mov
cmp
lea
xlat
(bad)
jmp
stc
xor
fs
xchg
mov
stc
daa
ins
loopne
daa
pop
mov
pop
push
inc
and
sbb
in
xchg
outs
test
jp
imul
in
jnp
int
pushf
adc
loopne
jae
sub
mov
adc
les
or
out
iret
lods
mov
mov
mov
sti
xor
dec
sar
xor
loope
stc
int3
repnz
fdecstp
inc
mov
addr16
sar
adc
or
int
cs
ficomp
inc
mov
stos
arpl
cmc
data16
lds
dec
ficom
sbb
and
scas
push
popa
xlat
mov
mov
cmp
imul
ror
pop
dec
jge
mov
mov
jmp
shl
pop
jae
sub
fsubp
push
dec
pop
inc
jmp
dec
xchg
mov
xchg
mov
mov
or
sub
jp
jns
pop
or
adc
dec
mov
ins
aam
sub
(bad)
and
add
xchg
or
adc
(bad)
fadd
pop
add
xchg
xor
retf
mov
lahf
mov
mov
mov
rcl
out
sub
mov
in
rcl
cmps
(bad)
mov
cmp
shl
fiadd
and
mov
jg
jbe
mov
ja
adc
jmp
push
ror
push
mov
gs
cmp
sub
shr
jo
inc
inc
aad
inc
mov
mov
push
add
fcomp
fild
mov
mov
pop
call
addr16
dec
push
mov
or
cmp
push
out
mov
dec
bound
dec
cmp
aas
mov
push
in
adc
add
xchg
dec
sahf
cmc
ss
cmp
stos
mov
aaa
call
or
repnz
daa
cmp
mov
inc
lds
fistp
scas
mov
sbb
jecxz
dec
and
setae
enter
je
or
mov
scas
aad
jp
jmp
clc
retf
cmp
push
outs
push
div
xchg
jnp
mov
and
mov
mov
mov
das
into
bnd
jns
ss
dec
dec
shl
mov
cmc
mov
sbb
sub
loop
sub
retf
(bad)
lea
push
xor
int
loopne
xor
lods
xor
gs
std
mov
je
cmc
int3
pop
xchg
out
push
jb
ret
mov
lds
aaa
adc
cmp
mov
adc
mov
or
neg
icebp
inc
nop
sub
mov
fwait
mov
cmp
in
adc
ror
stos
ret
mov
push
test
shl
test
iret
test
aam
je
cmp
cmp
dec
clc
adc
repz
idiv
cld
inc
mov
lahf
bound
push
addr16
inc
rcl
jge
(bad)
jmp
push
mov
xchg
mov
push
ja
pop
aam
mov
jne
and
mov
test
fisubr
in
xor
cwde
inc
inc
mov
add
jp
arpl
aad
std
mov
rol
xor
icebp
ror
push
xchg
in
sbb
out
loope
leave
(bad)
out
repz
not
mov
pop
loopne
mov
jne
in
daa
push
inc
sub
mov
inc
leave
xchg
xor
(bad)
lock
sahf
mov
mov
lock
mov
cmp
pop
movs
mov
inc
sbb
aas
push
out
inc
push
inc
sahf
mov
pop
das
sbb
repz
jne
mov
or
loope
mov
mov
scas
and
je
ror
addr16
dec
pop
pop
dec
cmps
jecxz
pop
xchg
ret
sub
inc
idiv
push
mov
cmp
add
jmp
mov
hlt
jp
sub
lods
sub
push
push
loop
push
test
sbb
dec
xchg
mov
xchg
test
jae
dec
add
fldcw
mov
jecxz
sahf
inc
push
jae
jmp
cmp
jl
dec
or
mov
sub
rcr
push
je
(bad)
xchg
cdq
test
xchg
sti
sub
push
mov
(bad)
das
xchg
or
and
mov
gs
in
inc
pop
(bad)
push
mov
dec
add
psubw
test
xchg
xor
sub
mov
pop
(bad)
shl
test
test
in
ins
loopne
pop
inc
pushf
into
loopne
cmps
test
adc
loopne
mov
cmps
sti
in
inc
pop
inc
xchg
fs
xchg
sbb
out
ins
test
push
xchg
aas
imul
je
push
dec
daa
jge
std
push
dec
(bad)
and
pushf
lock
int3
cmp
imul
cmps
push
xchg
enter
lods
ins
mov
sub
arpl
dec
xchg
ds
inc
jmp
sar
push
pop
inc
jge
fnstcw
(bad)
add
cmp
mov
arpl
dec
ja
jne
outs
add
mov
test
fistp
sub
ds
mov
loope
loopne
test
sbb
std
jmp
add
fistp
sub
mov
fs
xchg
ins
mov
pop
enter
test
arpl
sbb
push
and
pop
sar
lock
pushf
das
xor
sbb
hlt
jns
xor
in
mov
adc
sub
mov
and
neg
dec
mov
xchg
pushf
mov
out
cmp
icebp
outs
popf
scas
xchg
jp
outs
adc
mov
idiv
sub
jnp
jl
push
xor
ror
daa
icebp
mov
mov
push
test
loop
(bad)
pop
jp
es
mov
scas
adc
fwait
adc
fld
pop
daa
sar
fs
or
cli
fwait
ret
xchg
aaa
push
(bad)
fcom
cmp
mov
popf
fucomp
cmp
push
jbe
jmp
xchg
cmps
(bad)
arpl
xchg
ret
inc
movs
mov
push
and
shl
test
adc
fisttp
xor
mov
fimul
jae
ins
test
out
shl
and
(bad)
int
clc
movs
int
(bad)
sub
dec
jmp
dec
arpl
fwait
or
aas
adc
jge
(bad)
xor
neg
add
xchg
scas
popa
mov
outs
stos
stos
dec
fcompp
jbe
xchg
pop
in
mul
out
sbb
jb
(bad)
dec
jle
nop
pop
sub
stos
xlat
sbb
inc
sub
ret
rcr
or
(bad)
push
sub
mov
sub
mov
push
adc
fdivr
pop
pop
jbe
add
adc
adc
bound
imul
call
(bad)
sub
mov
out
les
push
and
sbb
out
aas
mov
pop
sbb
je
rcl
xor
leave
adc
in
inc
les
int
das
sbb
into
dec
xchg
das
sub
jb
xchg
and
xchg
iret
or
ret
int
cld
scas
mov
les
inc
ds
adc
(bad)
data16
fs
jge
(bad)
sahf
dec
sbb
dec
lahf
cli
ds
xor
aas
xchg
pop
jae
adc
add
outs
test
retf
ins
jno
jecxz
jb
cli
mov
popa
(bad)
push
pop
mov
jle
add
jae
or
retf
(bad)
lahf
popf
popa
lods
jne
(bad)
jnp
rcl
mov
in
call
pop
shl
mov
ret
out
add
movs
xchg
xor
jo
add
xchg
jl
and
cmp
lods
add
movlps
mov
js
and
xor
add
setno
lahf
dec
aad
and
jne
xchg
inc
inc
jno
in
test
imul
mov
(bad)
push
add
xor
mov
enter
jmp
fwait
or
fimul
fstp
or
pop
fimul
and
xchg
push
idiv
cmp
mov
jecxz
mov
fisubr
cmps
lahf
push
popf
repz
rcl
add
aad
jo
lock
into
ret
call
addr16
xor
lahf
ss
sub
in
je
clc
inc
xor
inc
xchg
jg
out
in
jge
out
pusha
xor
hlt
cwde
mov
(bad)
stc
and
cdq
lea
(bad)
repz
xchg
jg
xchg
outs
jle
add
iret
int
adc
fwait
mov
mov
mov
cmc
(bad)
lods
mov
std
out
mov
int
or
inc
psubsb
dec
or
(bad)
into
xchg
(bad)
jge
inc
inc
ret
xchg
add
jbe
add
mov
ffreep
sbb
add
xchg
cs
and
out
push
push
jbe
sar
push
int
les
lock
es
(bad)
test
and
ja
jnp
shr
jb
ins
test
addr16
(bad)
jl
retf
cmp
ds
or
jae
mov
adc
push
xor
cwde
cdq
mov
dec
sbb
fisttp
mov
and
push
stos
sbb
fucomip
(bad)
loopne
fldenv
test
std
fwait
mov
mov
xchg
xchg
sub
push
popf
adc
add
mov
cmps
data16
cmp
stos
pop
pop
sub
retf
add
and
retf
xchg
lds
iret
push
inc
imul
push
(bad)
jo
mov
in
jno
or
mov
iret
lods
inc
dec
and
jmp
xchg
and
dec
enter
jg
addr16
enter
jno
mov
imul
std
add
lods
mov
or
test
inc
mov
and
and
loope
jmp
jge
neg
ds
mov
imul
das
shr
xor
or
pop
mov
xor
cli
dec
shl
jo
mov
in
push
lods
push
mov
pop
fwait
pop
push
inc
jmp
jne
inc
adc
push
mul
out
rep
cs
fldpi
jnp
pop
retf
arpl
pop
jnp
sbb
(bad)
pop
mov
push
das
mov
rcr
mov
in
add
out
and
mov
out
addr16
scas
xor
sar
inc
ret
jl
cmp
and
push
mov
hlt
loop
sbb
in
cmc
pop
popa
pop
stos
dec
mov
pop
imul
scas
mov
dec
and
inc
ds
popf
pop
push
sub
fwait
ret
mov
cwde
adc
adc
mov
loope
mov
movs
mov
scas
mov
inc
pop
shl
mov
movs
jl
push
mov
and
sbb
ret
sahf
inc
sti
or
inc
cli
test
scas
out
xor
rol
sahf
mov
jg
lds
pop
stos
inc
inc
sub
cmps
pusha
les
test
inc
lods
add
cmps
jl
in
mov
xchg
dec
mov
sbb
sbb
xor
xor
jne
mov
aad
push
push
ins
and
adc
mov
aam
dec
scas
cmp
pop
and
sub
xor
or
mov
test
push
xor
jnp
dec
retf
adc
jmp
(bad)
mov
cld
popf
cmp
je
pusha
repnz
fsubp
inc
xlat
aaa
js
and
dec
mov
cs
retf
test
push
call
(bad)
cmp
ds
imul
test
push
lods
and
test
or
mov
das
push
enter
int
das
pop
into
mov
scas
adc
pusha
jge
iret
call
out
mov
cwde
mov
pop
pop
adc
cli
and
cdq
pop
in
pop
pop
enter
imul
popf
pop
cs
mov
fs
adc
xor
or
push
cld
lock
sti
sahf
fs
stos
mov
and
loop
jl
add
push
pop
lods
iret
cmc
iret
stc
sub
ds
outs
fs
jle
push
es
push
jmp
fsub
dec
cmps
int
mov
mov
movs
xor
xor
xor
inc
mov
xor
push
jb
sbb
pop
jo
jbe
push
jmp
add
jbe
lods
ja
pop
in
xor
jmp
in
aad
in
xlat
add
xchg
pminub
out
pop
add
mov
popa
mov
pop
cmp
mov
pop
mov
mov
idiv
lock
jmp
adc
retf
mov
xchg
scas
add
dec
ins
aaa
scas
fsubr
in
pop
nop
cmp
je
sbb
adc
leave
pop
out
outs
pusha
imul
mov
cmp
sbb
push
(bad)
retf
xchg
mov
imul
ja
cli
int3
xchg
sar
fld
push
sbb
xor
fnstenv
jno
push
popa
into
fidiv
xchg
ss
xchg
pop
shl
cmp
xor
sub
jecxz
xor
div
repz
pop
popf
fisubr
sbb
in
push
stos
cmp
arpl
aaa
aaa
add
imul
gs
sahf
repnz
jmp
aaa
pop
repz
fsub
cli
push
sub
add
mov
clc
xor
sub
xchg
xor
call
cmp
mov
mov
inc
imul
lds
xor
and
mov
rol
mov
or
daa
or
push
dec
fs
ins
in
int
fstp
scas
xchg
xor
pop
jbe
push
hlt
jae
imul
mov
adc
jo
mov
pusha
jmp
call
sub
pop
pop
imul
fcmovnu
out
cmps
mov
xlat
test
jl
js
and
xor
fisub
or
jl
adc
mov
sahf
cmps
dec
rcr
pop
or
inc
divps
dec
mov
fiadd
cli
add
ins
jne
stos
jno
hlt
(bad)
xor
pop
clc
fs
mov
lock
sbb
shl
add
pop
ins
sbb
adc
mov
xlat
inc
dec
cld
sbb
aad
ja
les
in
or
pop
out
fwait
pop
les
adc
shl
and
sbb
rcl
addr16
pop
mov
aaa
sbb
xchg
push
dec
test
xor
jns
mov
inc
cmp
sbb
adc
mov
outs
fsub
imul
push
mov
mov
add
lds
add
(bad)
and
dec
add
fdivrp
jmp
mov
mov
lods
das
push
hlt
cmp
inc
push
fcmove
push
ret
and
leave
push
cs
out
stos
mov
jno
adc
jl
and
push
add
jecxz
fwait
sub
das
cmp
push
cwde
mov
jbe
sub
inc
xchg
je
rcr
pop
int
and
cld
mov
call
out
xchg
mov
jnp
in
sbb
rol
aad
dec
iret
cmc
lods
scas
repz
dec
pop
jmp
push
int
fs
cwde
lahf
addr16
inc
ss
sub
call
test
sbb
fistp
retf
xchg
mov
out
jb
push
fidivr
add
xchg
(bad)
inc
sbb
and
jmp
test
xchg
cmp
cmp
mov
or
sbb
out
es
adc
jmp
dec
pop
push
mov
pop
and
xchg
cli
arpl
sbb
push
fld
int3
movs
jmp
mov
cs
push
sbb
and
inc
mul
jecxz
adc
repnz
popa
mul
mov
sub
(bad)
xchg
hlt
add
sub
jecxz
inc
ret
pop
inc
dec
call
jb
not
mov
mov
(bad)
ficomp
jmp
push
fmul
jo
call
sub
adc
mov
cmp
out
adc
mov
fimul
mov
mov
frstor
lds
test
daa
repz
mov
ins
xlat
outs
mov
push
enter
cmc
sar
inc
cmc
sbb
cdq
clc
sbb
jae
sbb
adc
mov
addr16
pusha
test
(bad)
clc
loope
xor
mov
pop
pop
xchg
add
push
push
mov
das
push
mov
loope
(bad)
iret
imul
in
adc
xor
mov
imul
stos
lea
pusha
push
movs
pop
stos
mov
xchg
pop
repz
xlat
imul
pop
test
adc
pop
or
je
ja
xlat
daa
jmp
and
sbb
xchg
movs
add
bound
push
mov
inc
cld
cmp
pop
mov
adc
xchg
cmp
push
and
cmc
adc
or
scas
mov
je
lds
test
mov
ja
xor
inc
jnp
popf
out
shl
lds
lahf
pop
xor
sbb
sub
int
xor
cmc
movs
je
or
imul
jb
adc
nop
dec
inc
mov
aam
pop
mov
and
or
es
dec
mov
xchg
cmp
fist
pop
sub
imul
or
movs
jbe
adc
popf
pop
dec
sets
out
sbb
popf
rcr
mov
xor
aad
nop
push
cmp
xor
sbb
cdq
mov
mov
(bad)
and
dec
imul
xchg
or
add
pop
inc
mov
(bad)
ja
or
inc
cmps
into
jg
arpl
push
and
retf
mov
dec
pushf
fisttp
sahf
cmp
enter
xchg
dec
jg
xchg
jb
pop
sub
retf
sub
aaa
mov
jno
pop
pop
int
adc
or
(bad)
cmp
pop
mov
leave
pop
add
or
daa
hlt
pusha
shl
push
or
or
iret
mov
test
mov
push
jmp
push
add
rol
dec
inc
inc
in
cmp
in
ret
add
and
jno
jl
outs
xchg
jg
lock
xor
arpl
jnp
push
mov
and
mov
jbe
ds
sub
popf
pop
(bad)
fnsave
rcr
inc
outs
sub
cmp
add
mov
ins
push
lds
pop
cld
call
pop
sub
stos
js
and
leave
test
pop
ret
dec
enter
ret
jg
dec
dec
cmc
adc
xor
outs
mov
js
mov
in
push
stos
arpl
call
cld
retf
mov
inc
(bad)
rcl
inc
movs
xchg
xchg
jp
add
imul
xlat
inc
popf
pop
xor
sub
jge
and
or
sahf
mov
mov
pop
mov
scas
aas
aam
xchg
pop
xchg
hlt
(bad)
add
scas
cmp
(bad)
sbb
jl
cli
inc
in
push
mov
adc
or
mov
push
sbb
push
imul
xor
fidiv
call
shl
mov
popa
adc
icebp
cld
adc
jns
cld
popf
data16
call
imul
psubw
jbe
minps
pushf
adc
jl
sub
movs
cmp
and
cli
jg
in
fdiv
sbb
inc
iret
nop
mov
test
mov
inc
mov
push
add
mov
xor
mov
or
aad
test
add
push
xor
fistp
or
call
(bad)
cmc
mov
push
rcl
jno
nop
xchg
hlt
xchg
aad
movs
test
in
jae
arpl
pop
push
cwde
inc
in
shl
push
in
jge
cld
and
adc
sti
inc
mov
jb
outs
push
call
lock
sub
adc
or
fadd
xchg
test
repnz
addr16
icebp
xor
(bad)
xor
cmp
sbb
cwde
dec
or
aas
add
sub
xchg
movs
leave
pop
in
mov
fistp
pop
jno
and
enter
in
shl
xchg
sub
or
outs
jne
(bad)
call
xchg
ficomp
mov
sub
xchg
push
mov
xchg
jne
sub
bound
in
sar
pop
fisubr
add
mov
sbb
scas
mov
cmp
sbb
dec
inc
xor
add
inc
rcl
pop
xor
outs
loop
sbb
ror
or
div
mov
xchg
out
adc
fstp
inc
ja
push
sar
jae
inc
shl
in
je
fisub
xchg
adc
(bad)
iret
pushf
in
mov
dec
call
enter
cmp
movs
mov
test
leave
ret
add
pop
jae
pop
mov
fs
stos
stos
rcl
in
ins
cmp
mov
sti
push
std
aad
jge
sbb
and
fwait
gs
hlt
stos
aas
add
xchg
adc
sub
lds
xchg
fs
cli
sub
mov
into
sub
pop
addr16
add
dec
call
sub
xlat
je
sub
sub
int3
jnp
test
lahf
inc
popa
mov
xlat
movs
cli
mov
rcr
ror
xchg
push
sbb
inc
mov
xlat
sbb
cs
cmp
(bad)
adc
mov
(bad)
sti
mov
fst
fld
pop
adc
(bad)
daa
adc
or
pop
movs
dec
ins
lea
and
push
push
or
es
(bad)
sbb
je
pop
mov
sbb
and
sbb
jmp
adc
in
rcr
mov
mov
or
jl
mov
and
int3
xlat
and
int
fidivr
sub
outs
std
sub
sahf
jmp
(bad)
dec
lock
push
addr16
jne
lahf
push
cli
xchg
repz
mov
sub
dec
aad
add
xor
sub
jo
data16
out
or
scas
or
inc
ret
dec
or
in
adc
and
xchg
push
sti
fnstsw
leave
pop
stos
std
mov
pop
jae
sbb
js
or
test
sbb
adc
rcr
jecxz
xor
lds
xchg
ins
push
bound
popa
sbb
mov
adc
cwde
popa
test
push
dec
adc
(bad)
push
add
dec
cli
push
inc
mov
repnz
mov
cmp
shl
in
retw
scas
loopne
stos
sub
fst
jmp
or
xchg
cmp
ins
jmp
mov
fld
push
dec
jl
sbb
sbb
into
mov
stos
(bad)
shl
xchg
shl
jl
sub
ret
dec
jg
test
pop
rcr
jno
push
fidivr
lock
shl
test
ret
and
sbb
add
ret
and
out
dec
in
mov
pop
pop
sahf
cdq
adc
rol
mov
aam
sbb
dec
mov
out
scas
jne
jecxz
push
mov
cmps
call
add
jle
pushf
icebp
sbb
sub
pop
and
sub
or
inc
dec
cmps
xor
cmps
int3
fdivr
or
mov
jmp
mov
mov
pop
mov
sub
sub
pop
pop
jb
outs
fadd
and
fmul
sub
adc
xchg
pop
jmp
pop
out
or
mov
inc
xchg
mov
inc
popa
adc
pop
je
sti
movs
stos
sbb
mov
pop
dec
shl
pop
push
xor
add
and
dec
xor
aaa
and
inc
jmp
data16
popf
movs
add
call
fild
xor
test
xor
nop
arpl
test
add
pop
mov
data16
push
pop
sbb
aaa
jl
pop
add
shl
jmp
dec
push
aas
outs
add
movsx
xchg
rcr
aaa
das
paddw
xchg
pop
out
lahf
mov
in
mov
or
lock
daa
add
pop
jecxz
push
test
mov
call
push
arpl
mov
or
xor
fwait
xor
movs
shl
inc
bound
loop
fdiv
push
out
test
xor
icebp
clc
xor
sar
repz
mov
push
iret
xor
mov
shr
cmp
sbb
mov
jl
jo
icebp
or
add
nop
jne
fidivr
jmp
(bad)
je
jle
xor
xchg
inc
ins
pop
ins
nop
sub
pop
sub
xor
sysret
add
inc
add
or
das
adc
adc
jmp
sub
dec
mov
jl
lds
adc
hlt
push
cli
test
mov
dec
push
lods
inc
xchg
fild
sub
push
cwde
and
out
or
add
(bad)
pushf
mov
jno
mov
xchg
int3
shr
fistp
and
mov
mov
cmp
add
out
addr16
or
xor
inc
icebp
lock
loopne
fstp
lods
inc
dec
rol
mov
cwde
xor
inc
xlat
sub
pop
in
imul
cmps
dec
and
jb
dec
outs
call
in
fwait
(bad)
(bad)
mov
pop
mov
cdq
dec
mov
push
pop
cmp
jns
xchg
or
add
jle
in
mov
mov
fs
neg
and
fcmove
push
jo
mov
jne
jns
jns
dec
addr16
shl
retf
stc
(bad)
imul
pop
push
dec
mov
adc
aas
mov
push
call
and
mov
(bad)
jo
bts
cld
jae
in
jmp
cs
and
shr
jecxz
stos
xchg
pop
cli
fimul
xor
(bad)
sti
jb
mov
cmc
int3
sub
pop
mov
cmp
(bad)
out
add
push
nop
sub
(bad)
jns
or
cs
add
or
mov
adc
(bad)
sbb
iret
add
jmp
and
push
outs
inc
loopne
pop
inc
fldenv
mul
aad
inc
shl
pop
aad
ja
arpl
xchg
loope
adc
fstp
jns
mov
mov
jbe
les
adc
movs
es
sbb
mov
clc
std
cmp
push
sub
cld
xchg
cmp
xchg
stc
inc
push
loop
scas
pop
popa
icebp
jecxz
jbe
out
xlat
and
sub
push
and
dec
mov
mov
test
ret
sub
ror
xor
jg
fst
xchg
out
call
xchg
sub
ds
jp
xor
add
xchg
mov
int3
xchg
out
(bad)
inc
pushf
xchg
xor
inc
ja
dec
sbb
pop
xor
jg
pushf
xchg
mov
mov
mov
movs
dec
movs
rol
dec
pusha
jmp
imul
push
mov
pop
mov
xor
mov
mov
(bad)
and
jb
or
das
lock
adc
test
mov
rcl
push
dec
mov
inc
inc
cdq
jne
jns
pop
nop
or
mov
sub
cmp
hlt
push
ss
test
pop
cld
sub
ret
mov
stos
les
fisttp
test
aaa
out
je
cdq
icebp
stos
push
jg
call
dec
outs
(bad)
adc
imul
jbe
adc
lods
ror
push
inc
mov
pop
test
cmp
(bad)
rcr
xlat
(bad)
clc
loopne
push
mov
mov
fmul
jae
lahf
into
test
mov
push
and
repz
jmp
lods
sbb
adc
pop
mov
jmp
inc
xchg
stos
(bad)
mov
or
inc
add
imul
outs
das
out
cs
or
xchg
xchg
cdq
shl
adc
inc
aaa
sub
mov
pop
or
ins
lea
dec
mov
pusha
pop
mov
add
cld
adc
push
pop
or
out
imul
xchg
int
in
sbb
imul
jno
popa
or
xchg
stc
mov
mov
cli
add
pop
push
dec
push
loopne
dec
jecxz
(bad)
out
push
jno
add
jg
push
pop
mov
aaa
push
mov
outs
sub
repz
into
adc
ins
xchg
jnp
push
cmps
pusha
push
pop
push
mov
arpl
mov
in
push
and
xor
je
adc
inc
cmc
inc
inc
outs
clc
inc
sbb
cmps
or
jo
repz
mov
sub
out
jle
adc
jbe
stc
sbb
pusha
add
in
ret
sti
jge
mov
cmp
ja
(bad)
call
lods
in
inc
add
dec
fldenv
(bad)
push
jmp
test
sbb
scas
push
and
cmove
mov
out
imul
inc
jae
push
inc
dec
jae
iret
adc
sahf
push
into
jecxz
je
sbb
in
rcr
add
pop
jb
mov
dec
outs
adc
clc
sahf
push
and
loope
push
hlt
enter
push
xchg
cmps
pusha
les
mov
iret
fsubr
inc
outs
mov
mov
movs
data16
jmp
jmp
push
stc
dec
sahf
leave
cwde
ja
and
in
push
xor
aas
pop
pop
aam
push
inc
push
bound
dec
push
lds
pop
push
imul
adc
push
dec
push
mov
js
call
jns
push
adc
ja
adc
sbb
pop
mov
cmp
adc
or
addr16
jb
outs
inc
in
pop
adc
jo
adc
bound
jmp
ins
adc
clc
pop
in
retf
test
cmp
or
mov
xor
dec
mov
popf
mov
sub
imul
fsub
psadbw
jecxz
stc
in
repz
int
mul
sbb
imul
fadd
push
ret
pop
lea
push
sub
sbb
sub
pop
ror
std
dec
out
(bad)
jp
stos
repz
cwde
sub
fistp
not
add
jmp
adc
(bad)
push
js
or
imul
pushf
lock
adc
fisttp
adc
fs
repz
add
and
aad
retf
jo
data16
xor
mov
daa
jp
mov
pop
outs
rol
jae
add
push
xchg
(bad)
ja
ficom
loop
movs
push
inc
test
mov
call
push
cmp
test
neg
nop
mov
xchg
arpl
mov
lods
push
push
xor
mov
cmps
xor
lock
inc
push
sub
and
cmp
addr16
push
out
mov
fwait
xor
cmp
iret
push
push
loop
scas
int3
pop
cmps
sbb
mov
inc
cs
and
fcomp
cmps
fld
mov
and
fs
inc
(bad)
(bad)
or
push
idiv
mov
adc
cdq
test
repnz
int3
xchg
in
adc
pusha
je
int
and
pop
repz
fsubr
cmps
lods
aas
xor
mov
adc
cmp
pop
(bad)
mov
add
xchg
sub
loop
adc
jae
jg
mov
(bad)
or
loope
(bad)
fadd
dec
idiv
out
or
test
(bad)
popa
inc
das
xchg
(bad)
in
pop
in
sbb
jp
jns
adc
icebp
out
mov
sub
and
push
jle
stos
add
sub
xchg
pop
pushf
fstp
xor
inc
adc
xor
in
mov
aas
mov
mov
imul
jp
retf
or
pop
enter
fcomi
jne
xchg
jge
cmp
outs
popa
mov
shr
mov
inc
and
iret
lods
add
out
popf
rcl
lock
icebp
xchg
or
ins
(bad)
jecxz
in
outs
das
jnp
out
inc
mov
jecxz
pusha
xchg
inc
(bad)
in
and
mov
cmp
xchg
pop
and
loop
loopne
xchg
jb
lods
push
cli
test
mov
push
dec
aas
out
data16
inc
rcl
xor
cmp
jae
fisubr
outs
mov
xchg
push
ins
stos
xchg
rcr
shl
sub
pop
(bad)
adc
je
out
adc
or
jbe
or
inc
push
test
adc
rcr
call
cmp
ret
cmp
inc
movs
cmp
int3
and
inc
fstp
add
push
das
pop
das
adc
cli
xchg
(bad)
mov
js
jecxz
xchg
adc
cmp
stos
stos
dec
(bad)
adc
scas
out
xchg
loope
fiadd
xor
aad
mov
stc
fsubr
mov
dec
push
xor
test
jne
inc
mov
sti
dec
ror
mul
mov
pop
call
fstp
stc
test
xchg
push
imul
xchg
dec
jae
inc
mov
or
and
out
add
sbb
xchg
dec
fistp
pop
and
mov
xchg
imul
sti
jp
(bad)
pop
(bad)
push
or
sbb
or
lods
sub
sub
jb
pop
cmp
mov
jmp
movs
xchg
inc
jmp
(bad)
fadd
mov
jmp
xchg
jno
and
(bad)
and
into
cmps
mov
pop
pop
xor
mov
jb
jmpw
pop
mov
adc
ret
imul
cmp
cmp
loopne
jns
js
xor
sub
xchg
sbb
int
jge
ret
call
cmps
gs
out
inc
imul
ins
std
inc
cs
fldenv
stos
add
xor
pop
out
inc
test
retf
aad
lods
hlt
inc
aaa
cld
mov
in
ret
sahf
xchg
repnz
shl
and
sbb
mov
aad
(bad)
cdq
mov
loopne
jne
xchg
sub
mov
imul
hlt
les
loope
iret
ss
pop
sar
clc
aam
mov
test
lock
pop
mov
sbb
(bad)
xor
sti
nop
lods
push
test
xor
mov
imul
sub
push
(bad)
jle
push
xor
pop
dec
hlt
movs
sahf
push
les
sub
(bad)
push
mov
mov
add
add
pop
jns
and
shr
mov
cmp
popf
ds
fwait
push
or
jge
sahf
movs
scas
and
mov
push
cmp
or
mov
addr16
aas
pop
or
mul
maskmovq
mul
jle
frstor
test
aaa
lock
jb
sbb
call
out
inc
push
mov
or
sub
int
inc
jmp
dec
sub
loop
push
mov
int
std
jecxz
mov
test
or
xchg
cdq
(bad)
mov
into
cmp
rcr
sbb
add
int3
ja
emms
mov
cmp
div
std
xor
push
cmps
add
or
inc
(bad)
dec
adc
or
in
xchg
das
test
sbb
shl
shr
mov
shl
jmp
aam
or
adc
enter
sar
cmp
lds
jle
pop
dec
jb
mov
xchg
fs
jb
scas
inc
das
stos
(bad)
sub
dec
and
or
out
outs
popa
es
push
xor
cmps
lds
mov
test
inc
fs
mov
adc
movs
cli
xchg
push
or
pop
dec
xchg
sub
jno
fwait
mov
adc
cdq
ins
lods
inc
outs
xchg
mov
mul
dec
popa
aaa
or
(bad)
std
jp
scas
xchg
push
sbb
stc
or
mov
jno
mov
lods
push
rcr
mov
stc
out
inc
aas
push
mov
sub
and
sbb
rcl
fbld
bound
jle
je
(bad)
and
movs
loop
call
inc
or
jne
push
mov
xor
xor
dec
sar
inc
out
xor
push
mov
and
mov
stos
call
xor
push
sar
sbb
push
jno
es
ret
mov
pop
call
push
jae
jo
pop
not
rep
fldcw
xchg
(bad)
jno
adc
mov
mov
cmp
outs
dec
jecxz
in
ss
mov
jp
mov
inc
mov
pusha
mov
lock
faddp
push
sbb
call
pop
cmp
xchg
dec
xor
sbb
dec
pop
stc
inc
jmp
cmp
push
pushf
imul
lods
mov
push
pop
test
sbb
sub
sub
in
mov
mov
repnz
mov
dec
shl
cmp
jle
pop
inc
jecxz
es
mov
add
mov
cmp
sbb
pop
cwde
sbb
mov
or
retf
(bad)
mov
pop
mov
cmps
sub
xchg
add
pushf
(bad)
fadd
push
imul
push
test
loopne
xchg
std
(bad)
mov
pop
js
ficom
jne
inc
xor
aad
sbb
dec
jns
push
jl
xor
popf
mov
inc
mov
mov
outs
les
xchg
repnz
sub
sahf
jo
ror
in
fld
push
cmps
icebp
jge
into
add
addr16
add
icebp
lea
pop
xor
adc
jmp
and
sub
or
retf
xchg
push
loopne
nop
jg
lock
rcl
std
ds
push
out
fcom
stos
xor
cmp
xchg
add
jns
pop
cmp
cmps
or
stos
pop
sub
in
inc
daa
retf
push
jne
out
loop
call
push
outs
cwde
or
push
(bad)
fwait
int3
jno
and
js
mov
mov
ror
push
jae
cs
cmps
das
mov
mov
clc
les
or
sbb
or
or
jbe
call
loop
sbb
xchg
lock
das
pop
stos
sbb
cli
mov
in
mov
pop
sub
mov
xchg
pop
movs
les
mov
jp
out
cmp
or
and
cdq
fdivr
cdq
sahf
mov
pop
mov
ror
fidiv
test
movs
adc
inc
cmp
xchg
fidiv
cld
movaps
aas
not
sub
jmp
xchg
rcl
cld
daa
mov
or
xor
std
fld
mov
pop
add
or
stc
bound
add
sahf
test
cmp
mov
dec
cli
jmp
inc
sub
lods
sub
mov
adc
mov
cmp
cwde
outs
mov
sub
lods
out
pop
push
jge
mov
mov
ins
xchg
dec
jle
cmp
rcl
in
cmps
xchg
in
pop
mov
lds
aas
add
sti
jae
push
sti
(bad)
and
xchg
ins
dec
stos
or
(bad)
pmulhw
stc
out
enter
mov
scas
int3
cmp
ret
push
push
push
push
lock
cmp
cmps
sub
mov
pop
add
repnz
call
jae
ret
dec
sahf
push
ss
lods
jp
(bad)
movs
push
inc
scas
push
rol
sbb
mov
dec
out
sar
xchg
push
push
mov
bound
or
lods
add
lahf
ins
addr16
daa
jecxz
popa
stos
fldcw
push
or
add
and
xor
sub
ins
adc
lods
mov
pop
jno
mov
mov
clc
xor
cmp
dec
inc
mov
mov
pop
mov
mov
test
sbb
popa
arpl
imul
mov
call
and
jmp
dec
jp
loop
sub
add
xor
arpl
rcr
xor
outs
out
inc
call
iret
mov
mov
sub
dec
inc
ret
stos
push
or
arpl
stos
outs
mov
retf
mov
addr16
sbb
pop
pop
mov
xchg
xlat
data16
xchg
addr16
ret
push
movs
or
jle
aas
xchg
in
loopne
sbb
fwait
je
addr16
push
sbb
sbb
mov
cmps
rcr
out
fisub
imul
cmp
imul
test
mov
mov
outs
push
jne
ret
ret
add
mov
and
xor
jmp
xchg
cmp
pop
into
cmp
pop
inc
sbb
retf
push
arpl
test
push
aas
cmp
les
fadd
push
scas
sar
inc
mov
gs
inc
in
xor
sub
xchg
scas
push
lds
pop
ds
mov
xchg
aas
mov
add
std
add
xchg
and
cdq
pop
xor
mov
mov
ds
push
pop
jmp
iret
mov
ins
repz
int3
rcl
sub
xchg
mov
js
jmp
scas
xchg
sbb
call
icebp
sbb
xor
and
xor
(bad)
push
jne
das
inc
pop
sbb
ja
test
push
into
clc
adc
mov
add
pop
mov
push
data16
mov
inc
xor
mov
xchg
mov
sbb
mov
mov
sbb
and
add
mov
add
push
or
jle
shl
jge
cmps
or
jmp
shr
or
lahf
push
repnz
xchg
add
iret
or
fisub
not
mov
adc
xor
retf
sbb
imul
push
xchg
fnstenv
cmp
test
dec
mov
std
fwait
les
jge
je
rcl
out
popf
mov
movzx
jmp
and
data16
jo
in
xchg
ret
xor
ret
mov
fdiv
mov
and
inc
and
clc
pop
jnp
je
xor
adc
mov
not
pop
shl
pop
sbb
neg
push
js
xor
adc
pop
adc
xchg
push
fild
lea
loope
jbe
retw
ja
cwde
pop
dec
mov
jae
pushf
(bad)
enter
and
and
cld
mov
cmp
dec
test
add
call
mov
dec
sub
stos
inc
push
xchg
sbb
xor
je
xchg
rcr
enter
adc
clc
xor
jl
mov
cs
in
cmps
push
cld
test
in
cmc
xchg
dec
jno
ins
or
rcr
lock
(bad)
and
pop
into
or
int3
retf
pop
fcomp
jae
test
mov
cmp
mov
mov
ja
mov
out
sub
add
mov
mov
daa
ret
fisub
nop
fnstsw
adc
imul
pop
in
mov
add
mov
mov
push
pop
sbb
rcr
sar
xchg
ret
enter
mov
add
xor
mov
push
jbe
jo
dec
pop
mov
(bad)
xor
mov
fstp
jmp
sbb
mov
test
hlt
adc
cdq
scas
popw
jp
sbb
dec
(bad)
push
adc
xor
dec
pop
fs
jae
cmp
push
pop
cmp
in
cmp
dec
mov
fcmovb
adc
sti
mov
inc
jecxz
clc
das
dec
nop
outs
or
(bad)
lods
pop
inc
add
add
and
imul
ss
jae
sbb
xor
jmp
push
add
outs
js
cmp
inc
adc
inc
add
lds
mov
jge
add
mov
cmc
inc
addr16
es
shl
jb
dec
pop
pusha
cmp
xchg
les
fbstp
pop
mov
adc
arpl
mov
mov
cmp
or
add
sub
sbb
and
cdq
xchg
jnp
and
jg
cmc
ins
mov
in
dec
addr16
call
mov
fisttp
inc
dec
loopne
xor
(bad)
hlt
aad
mov
popf
and
dec
shr
mov
repz
test
fiadd
mov
sbb
or
loope
cmp
or
or
sar
dec
pshufw
and
pop
aad
push
push
fbld
inc
data16
mov
js
mov
adc
(bad)
lea
jp
int3
loopne
fdivr
dec
sub
adc
cmp
pop
push
inc
mov
jns
dec
xchg
sub
icebp
lea
popf
fsubr
ret
mov
fsubp
inc
push
jle
ins
mov
xchg
test
push
push
cmp
es
xor
jo
sub
xchg
push
(bad)
adc
pop
or
pop
mov
stos
add
pusha
enter
mov
xchg
fld
sbb
test
sub
and
lods
hlt
(bad)
iret
jno
push
or
fimul
dec
add
inc
movs
lahf
enter
cmp
adc
mov
pop
jp
lods
and
xchg
dec
lods
inc
sub
bound
repz
push
and
or
or
mov
cmp
push
js
mov
rol
adc
out
cmp
mov
adc
cwde
jmp
int
jae
mov
fsub
and
mov
xchg
add
adc
(bad)
aaa
push
cld
add
pop
and
adc
out
xor
or
fild
scas
in
(bad)
push
cli
and
scas
cs
sbb
and
xlat
dec
test
mov
inc
mov
bound
or
add
jmp
sub
adc
dec
adc
and
aam
outs
out
into
scas
xor
push
shl
mov
push
mov
inc
add
outs
or
(bad)
fs
sbb
out
dec
add
sbb
adc
cli
mov
inc
fnclex
mov
and
ds
add
into
ja
dec
sbb
fsub
sub
add
cmp
sub
fimul
jecxz
fwait
mov
dec
inc
adc
stos
mov
push
add
and
jmp
mov
imul
mov
in
cmps
xchg
xchg
stc
cmp
sub
and
out
shl
imul
xrelease
mov
rol
cmp
inc
push
outs
cmps
out
jb
xlat
push
push
call
mov
ds
cmp
scas
xchg
fstp
sub
cmps
inc
mov
mov
ret
jnp
dec
aad
mov
inc
int
std
idiv
pop
jmp
je
mov
in
mov
loope
mov
dec
int
inc
jmp
call
inc
lds
pop
mov
mov
mov
cdq
(bad)
add
xchg
loop
inc
out
leave
outs
(bad)
scas
push
xlat
xchg
div
rol
imul
xchg
mov
loopne
mov
fwait
mov
and
rcl
mov
xchg
and
xchg
add
(bad)
add
add
sbb
mov
(bad)
imul
push
loop
ins
cmp
ret
in
loope
push
iret
adc
adc
enter
enter
lock
mov
jmp
nop
(bad)
mov
imul
push
arpl
add
xrelease
inc
xor
mov
pop
movs
cld
aaa
inc
in
mov
mov
int3
rcl
fisttp
and
(bad)
sub
call
xchg
sbb
sbb
jns
fwait
inc
imul
xchg
das
call
loop
enter
add
pop
outs
cmps
pop
jne
mov
outs
imul
sub
pop
ret
and
add
adc
mov
lea
jbe
and
mov
aad
or
sbb
movnti
xor
xchg
or
sbb
loop
sub
test
sub
or
xchg
mov
mov
shl
imul
mov
jecxz
call
daa
jae
fnstsw
push
xchg
test
dec
cmps
mov
(bad)
push
outs
test
scas
adc
loope
in
and
adc
lsl
sbb
mov
and
add
out
xor
shr
test
mov
into
dec
jnp
fild
shr
jnp
jp
call
xor
mov
in
sti
loopne
imul
mov
push
(bad)
xchg
scas
(bad)
aaa
dec
fiadd
out
call
scas
mov
xchg
cmp
jns
fdiv
(bad)
lods
mov
bound
mov
ins
xchg
pop
cmp
mov
(bad)
iret
pop
popa
(bad)
jnp
fadd
sbb
mov
mov
out
and
outs
or
outs
pushf
ds
push
sub
fwait
scas
cld
jae
mov
ficomp
jge
mov
add
scas
dec
fisub
movs
sub
pop
add
mov
mov
dec
sub
mov
mov
pop
mov
test
adc
call
aad
mov
push
push
pop
ficomp
rcr
inc
mov
push
mov
mov
inc
jle
fs
aaa
hlt
mov
mov
xchg
and
aas
repnz
xlat
outs
push
add
sahf
fstp
cmp
sub
outs
cmps
loopne
push
pop
jae
addr16
fs
xor
aam
(bad)
pop
daa
inc
mov
adc
std
push
lods
imul
test
out
fstp
xor
xchg
mov
sub
es
push
sbb
xor
jge
jno
sub
mov
adc
nop
xchg
int
mov
pushf
in
xor
jg
retf
sub
enter
dec
mov
clc
jmp
pop
or
dec
pop
mov
mov
jno
rcl
sbb
or
fwait
fs
in
retf
scas
jg
or
fwait
jp
push
mov
add
mov
mov
push
fcmovnb
lds
retf
in
sti
pop
adc
sub
jmp
cmp
(bad)
sbb
in
jne
or
enter
cmp
adc
test
pop
mov
mov
add
aaa
jbe
cwde
stc
and
sub
add
lods
dec
addr16
or
jmp
jbe
xor
call
jne
clc
scas
xor
cdq
bound
cmc
jbe
and
aad
retf
test
xlat
gs
cmp
pusha
xor
loopne
sub
aas
stos
lds
lahf
stc
lods
pop
pop
or
xor
xor
mov
hlt
out
jnp
stc
lahf
inc
and
adc
outs
mov
sbb
jecxz
push
sub
leave
sbb
and
cmps
xchg
add
fld
(bad)
in
mov
push
pushf
xchg
pop
mov
mov
(bad)
(bad)
dec
in
jns
adc
dec
mov
mov
loop
popf
add
push
pushf
adc
xor
sbb
or
sbb
arpl
fild
lods
adc
cmp
mov
enter
and
and
je
and
addr16
aas
rol
rcr
and
ins
and
xchg
mov
out
test
js
lods
adc
leave
frstor
dec
int3
int
mov
mov
and
repz
mov
test
dec
fisttp
(bad)
idiv
ret
mov
cmp
hlt
sahf
xor
jecxz
dec
rcr
pop
fincstp
ss
popf
test
or
xchg
inc
rcr
daa
sbb
cmp
lock
xchg
adc
lahf
stos
and
imul
or
aam
cld
call
push
enter
into
sub
xor
mov
jae
inc
int
jmp
fdivrp
(bad)
and
xor
xor
scas
out
inc
jg
fprem
cmp
out
pushf
mov
push
dec
cdq
inc
lods
and
stc
iret
aas
jmp
mov
int3
ins
daa
push
mov
cdq
retw
jmp
sub
sub
test
pop
ss
dec
scas
into
iret
inc
les
ret
mov
ins
xchg
mov
xchg
push
cmp
mov
push
or
jnp
adc
fnstsw
jnp
push
icebp
jae
pop
or
pop
shr
push
add
mov
fdivr
xor
scas
sub
xlat
leave
into
xchg
pop
shl
jns
test
sub
mov
xchg
ja
imul
dec
neg
cmp
push
dec
shr
mov
cmp
push
mov
aaa
mov
paddsb
out
xchg
xchg
mov
fwait
jl
ror
inc
ss
push
(bad)
ins
dec
fcmovnbe
inc
arpl
ret
sub
xor
sub
scas
or
cwde
(bad)
fdivr
push
pop
icebp
retf
js
rcl
dec
inc
retf
rol
in
shr
dec
xor
cmps
cli
test
or
and
inc
push
int
push
add
ret
push
sbb
lds
jb
xchg
fsubr
imul
imul
test
add
call
cmp
xchg
xor
lock
jg
pop
pop
dec
fwait
dec
mov
cmp
adc
adc
jbe
popf
js
add
ins
mov
or
cmp
ret
mov
fldpi
inc
xor
neg
in
jle
daa
xchg
jnp
lock
ds
es
add
mov
leave
add
sbb
sbb
inc
xchg
cmp
enter
outs
sub
mov
xor
jb
(bad)
loopne
and
ins
xor
pop
ret
cwde
add
lahf
shl
jnp
pop
lock
icebp
cwde
push
xchg
sub
xor
jmp
test
idiv
(bad)
int
pop
pop
cmp
pop
push
(bad)
fild
adc
movs
xchg
jmp
in
push
xor
cmp
int3
mov
loopne
xor
jp
lods
push
pop
mov
icebp
call
mov
jb
adc
xor
mov
stos
arpl
xor
pop
mov
ds
es
mov
mov
fwait
je
ds
sub
scas
mov
mov
je
jp
xor
clc
adc
mov
loopne
or
test
jge
dec
jne
addr16
jle
push
movs
xchg
and
dec
xor
vmovapd
lds
arpl
mov
aas
clc
xchg
out
(bad)
out
xor
in
or
cmp
inc
rcl
shl
or
lds
ds
push
cmp
mov
or
sub
sub
jae
enter
call
stc
mov
push
ins
ja
sbb
mov
jbe
xor
fnsave
das
or
shr
pop
pop
ja
inc
push
jo
loope
push
aaa
out
test
pop
shl
aad
mov
sbb
rcr
xor
pusha
mov
shr
sbb
mov
(bad)
(bad)
scas
sub
data16
sub
or
xor
lods
cwde
lds
lock
sbb
sbb
cdq
ds
jg
push
nop
xchg
cmp
aaa
aas
stos
xor
lods
xchg
lods
iret
repz
fidiv
cmps
dec
pop
sar
movs
dec
lds
shl
push
cmp
inc
pop
ret
cmp
data16
fst
aam
inc
sbb
add
mov
add
jl
bound
and
rcpps
mov
pusha
adc
pop
imul
inc
jb
(bad)
cs
jmp
mov
(bad)
test
call
xchg
push
xchg
jl
jne
ret
mov
and
call
jge
fidivr
repz
or
repnz
dec
add
cmp
push
cmp
in
fcomp
xor
mov
mov
enter
add
pop
mov
dec
push
jae
pop
or
out
mov
ret
mov
out
push
or
data16
daa
rcr
push
(bad)
pop
jl
nop
jp
sub
pop
xchg
add
fnstsw
es
pop
or
(bad)
xor
inc
inc
sahf
movs
xchg
xchg
lods
or
popf
test
and
xchg
lods
imul
sbb
cmp
lds
adc
or
xchg
push
sub
fsub
add
das
and
outs
addr16
or
pop
xchg
pop
shl
out
imul
pop
(bad)
fsubr
and
pop
xor
dec
shl
adc
rep
jg
in
icebp
clc
mov
jle
pop
mov
jae
ins
lock
ins
(bad)
nop
mov
pusha
jg
and
jg
add
dec
push
add
mov
pop
jno
popa
adc
xchg
and
in
sti
cmp
xchg
mov
aaa
std
mov
lahf
mov
push
cli
lods
jg
add
stc
xor
lock
push
xor
add
xor
mov
pop
sahf
add
in
adc
sbb
out
and
(bad)
sbb
cli
mov
stc
push
mov
mov
inc
movzx
mov
dec
xchg
jae
jb
jle
aad
sahf
in
das
cmp
sbb
xor
test
jns
sub
outs
sub
push
jb
mov
cmp
mov
jbe
and
or
adc
dec
cmc
and
aad
aad
and
cld
loopne
repz
aam
lods
es
adc
lods
pop
ins
sub
aas
or
fs
mov
dec
jmp
xor
retf
ins
into
mov
fidivr
inc
sbb
dec
push
call
jmp
(bad)
mov
jnp
mov
retf
clc
inc
fnstsw
popa
(bad)
cmp
jge
push
imul
jno
cwde
inc
ror
inc
std
clc
adc
jb
imul
or
mov
rcl
xor
outs
test
out
add
fsubr
and
dec
mov
bound
repz
add
mov
or
loope
push
cmp
mov
jae
nop
dec
inc
mov
cs
mov
test
mov
xor
pop
xor
jns
sti
clc
inc
sbb
jmp
push
and
in
mov
outs
or
xchg
xchg
inc
adc
scas
jl
(bad)
retf
inc
ins
add
jecxz
or
pop
stos
mov
nop
(bad)
xchg
jae
inc
push
inc
cmps
jge
mov
call
les
inc
pop
cli
mov
mov
mov
and
ins
dec
add
mov
mov
fcomp
in
aas
addr16
adc
retf
das
add
xchg
ja
imul
mov
sbb
cmps
xchg
pop
fadd
es
sub
jmp
mov
sbb
jecxz
loop
(bad)
jmp
iret
xor
mov
js
push
imul
mov
out
pop
aas
cdq
repnz
inc
push
cmp
or
daa
in
push
xchg
fstp
fs
movs
inc
hlt
lea
ins
outs
xchg
call
int3
cmp
nop
and
pop
add
aaa
sub
add
sub
pop
inc
mov
not
call
(bad)
xchg
fdiv
dec
push
das
scas
ret
inc
data16
xor
fwait
test
(bad)
jb
fsubr
into
cmp
leave
mov
call
retf
pop
mov
or
or
lds
add
jo
aad
xor
jle
cmps
add
pop
lds
aam
retf
test
sub
pop
(bad)
and
out
movs
aaa
push
test
push
(bad)
xor
rol
sbb
cmp
push
dec
loope
fwait
jg
test
jp
mov
xchg
add
fidiv
dec
mov
loope
xchg
adc
mov
xchg
aaa
hlt
sub
out
push
mov
aaa
cmp
jl
test
(bad)
imul
and
cmp
sub
cmp
lahf
mov
iret
je
fwait
sub
movs
push
jmp
push
xchg
inc
(bad)
retf
stos
(bad)
ror
and
(bad)
out
stc
cmp
mov
popa
jp
pop
int3
ftst
push
sub
push
stc
dec
pop
ret
or
mov
fnstsw
sbb
push
in
out
jecxz
or
sahf
es
cmp
mov
mov
sub
repz
push
in
and
sub
or
rcl
movs
xchg
jl
movs
popf
cli
mov
push
inc
fstp
test
push
cld
xor
cmp
sbb
xchg
fsubr
repz
and
or
mov
xor
mov
push
scas
js
dec
rcr
sub
mov
fisttp
pop
daa
repnz
iret
adc
and
sbb
inc
mov
(bad)
xchg
ret
xchg
test
add
icebp
mov
inc
adc
lods
popf
or
int3
ins
stos
arpl
lods
push
sbb
(bad)
xor
push
std
push
std
jl
xchg
push
shr
jmp
repz
stos
test
or
jnp
inc
inc
(bad)
icebp
cmp
mov
push
loop
mov
aaa
mov
xor
jecxz
and
mov
jo
cld
and
fcomp
sahf
das
jmp
cmps
scas
cdq
adc
out
ds
jmp
stos
shr
push
jb
aam
leave
lahf
lea
push
xor
and
movups
test
aaa
xchg
aad
cmp
and
or
xchg
pop
dec
fstp
mov
sar
sbb
mov
jns
mov
fcomp
jno
xor
cwde
sub
mov
sbb
push
mov
dec
dec
pop
push
leave
xchg
xchg
push
sbb
jno
out
ror
push
dec
dec
ss
inc
out
outs
nop
mov
or
mov
outs
aad
rol
mov
mov
push
or
sti
(bad)
cmc
scas
xor
loope
mov
mov
arpl
and
and
mov
stos
dec
popf
sbb
int
mov
fs
inc
call
fild
xor
xchg
and
pushf
inc
xor
push
cmp
pop
ss
mov
scas
ret
pushf
or
push
xor
mov
mov
out
add
pop
pop
movs
loop
jnp
test
ror
inc
rcl
mov
(bad)
jge
lods
xor
std
adc
sub
rcl
dec
cmp
cld
add
sub
inc
sub
jmp
aaa
jae
shr
or
mov
jb
lea
inc
scas
xchg
retf
mov
loopne
xchg
jle
cli
sbb
jmp
test
mov
push
pushf
daa
pusha
popf
push
mov
loope
sbb
repz
add
mov
push
shl
and
out
int3
int
movs
loopne
pop
mov
not
cmp
xor
adc
adc
mov
(bad)
mov
sbb
mov
mov
mov
(bad)
imul
movs
and
shl
jl
or
icebp
mov
enter
xlat
int3
jae
test
out
ss
shr
es
test
and
into
nop
jb
imul
pop
push
dec
ja
repz
mov
(bad)
(bad)
and
and
test
ret
shl
jl
adc
(bad)
xchg
mov
or
jne
sbb
add
adc
mov
stos
mov
jo
out
xchg
xor
in
mov
loop
or
(bad)
movs
cmp
icebp
and
(bad)
fisub
inc
and
lds
xchg
cld
push
jo
sar
or
adc
xchg
dec
mov
mov
(bad)
xchg
in
xchg
or
aad
or
pop
dec
dec
adc
inc
adc
aam
sbb
mov
xchg
outs
sub
in
repz
push
dec
xchg
push
jmp
enter
lea
dec
int
jbe
gs
addr16
push
pop
sub
fisttp
add
and
test
clc
js
lods
repnz
scas
sbb
adc
sbb
fbld
comiss
lods
add
xor
sbb
or
inc
sub
sbb
cmp
es
pushf
popa
mov
jbe
dec
pop
dec
jle
test
or
bound
jmp
aam
into
in
or
ja
jmp
aas
mov
push
cdq
dec
add
jae
mov
pop
dec
xchg
or
iret
adc
pop
push
jecxz
xor
ds
pop
mov
pop
jb
jge
mov
pop
add
cdq
or
jecxz
jle
test
clc
ds
cmp
lds
mov
pop
jecxz
cmp
repnz
xchg
loope
(bad)
dec
sbb
xchg
mov
outs
aam
aaa
and
(bad)
in
fist
mov
xor
dec
or
cmp
mov
sbb
or
nop
cwde
push
dec
add
xorps
fldenv
test
in
jl
push
ret
(bad)
or
xchg
ss
popa
call
aad
pop
push
jl
jmp
inc
dec
jmp
call
loopne
dec
inc
out
xor
xchg
mov
push
ret
pop
dec
(bad)
pop
bound
pop
jbe
xchg
pop
push
sub
ret
fsub
ds
xlat
pop
imul
les
and
jp
call
rol
int3
popa
js
(bad)
jecxz
pop
scas
xchg
int3
mov
mov
jo
mov
iret
(bad)
sbb
std
lea
jmp
es
mov
nop
lahf
std
jnp
popa
test
push
xchg
jbe
cdq
push
cmp
cmp
fstp
dec
and
add
mov
imul
ins
out
addr16
rcpps
or
cmps
jl
mov
push
mov
inc
(bad)
mov
test
mov
cmp
sbb
sti
mov
loop
push
mov
(bad)
cdq
sahf
mov
or
out
adc
mov
shr
cmp
xchg
cmp
nop
adc
xchg
pop
pop
push
cmp
push
ins
push
sbb
js
cs
mov
add
fmul
ficom
mov
cmp
xchg
jo
lock
pop
push
push
mov
js
and
int
jge
fbstp
mov
push
sub
fs
loop
mov
sub
add
mov
adc
pop
push
sbb
xor
dec
dec
ja
sub
mov
add
addr16
iret
push
xor
(bad)
sahf
jmp
daa
fcomp
cmp
sub
pop
or
push
aam
mov
in
jnp
jae
sbb
out
pop
adc
bound
fmulp
repz
or
pop
xchg
pop
ret
push
in
sub
movs
pop
(bad)
test
sub
test
rcr
xor
stos
fidivr
cmp
mov
xchg
das
cmp
pop
mov
push
aas
(bad)
cmp
test
sbb
adc
xchg
fidivr
pushf
ja
xor
or
cmp
xchg
out
mov
(bad)
es
imul
pop
div
dec
std
adc
ficomp
add
out
lods
and
adc
(bad)
aaa
dec
fild
add
or
popf
(bad)
(bad)
xchg
sub
aad
or
add
mov
je
push
fistp
push
mov
adc
jno
xchg
inc
imul
fmul
(bad)
jne
sahf
fbld
and
into
(bad)
imul
cmc
in
mov
daa
(bad)
fdivr
sub
rol
pop
and
push
ret
push
adc
cmps
gs
push
sub
mov
loop
cmp
popf
repz
cmps
mov
mov
(bad)
test
push
cmp
xchg
iret
movs
xchg
lahf
outs
ror
and
dec
xor
je
pushf
or
mov
fwait
(bad)
xlat
jg
jns
xchg
fnsave
imul
jle
stos
push
bound
repz
or
and
mov
aad
jns
mov
cli
add
fnsave
mov
mov
ins
and
gs
(bad)
lock
ss
push
and
inc
loope
xchg
int3
test
adc
in
xchg
jg
mov
pop
cld
movs
jae
xor
(bad)
es
scas
dec
clc
push
icebp
and
mov
ins
jne
mov
dec
dec
rcr
xchg
pop
push
pop
mov
push
call
fs
sbb
ins
int
xchg
push
jge
icebp
(bad)
sub
pop
jae
daa
add
(bad)
jb
xor
inc
nop
sub
jmp
and
add
mov
out
out
xchg
mov
out
add
or
scas
mov
adc
mov
outs
arpl
cli
pop
lock
test
std
aas
dec
push
jno
jnp
push
fidiv
shl
loop
pop
dec
shl
cmp
xor
cmps
jb
stc
cdq
and
inc
loopne
and
cmc
adc
lods
scas
inc
cmp
ins
retf
or
mov
mov
xor
fcom
scas
and
loopne
call
stos
mov
stos
pop
or
dec
xor
adc
(bad)
test
inc
retf
xchg
movs
cmp
add
inc
mov
jnp
mov
xchg
jge
sub
xor
push
outs
sub
lea
cdq
xchg
test
enter
ss
retf
sbb
push
pop
xor
aaa
push
jo
pop
fcom
jg
repnz
cld
out
add
mov
fadd
fdivrp
mov
stos
pop
ja
cwde
dec
in
or
push
dec
neg
ss
sub
jbe
les
in
(bad)
cld
mov
imul
pusha
(bad)
rcl
popf
sti
rcl
repz
dec
and
mov
das
cmp
mov
inc
xor
stos
jle
xor
(bad)
fild
call
jmp
jne
pop
dec
adc
xchg
cmps
adc
int3
jmp
cwde
inc
dec
clc
shl
add
jo
inc
mov
inc
(bad)
pop
push
dec
movs
cld
jg
jge
cmp
(bad)
jge
int3
pop
dec
cmps
sub
repnz
adc
pop
stos
cmps
dec
dec
lds
or
jno
sub
mov
sub
stos
mov
not
repz
or
popf
(bad)
and
loopne
pop
data16
push
adc
adc
test
mov
inc
dec
lahf
pop
ins
idiv
out
punpckhwd
int
cmp
test
mov
fwait
aas
mov
iret
(bad)
pop
mov
mov
push
lock
popf
rol
push
cwde
or
fs
mov
(bad)
popa
mov
test
fisttp
clc
xchg
mov
xchg
test
pop
inc
in
call
(bad)
sub
stos
je
cs
es
mov
aas
lock
dec
out
dec
rcr
jno
jecxz
xlat
push
jns
idiv
jp
test
cmp
adc
sar
jae
fcomp
loopne
retf
je
out
cdq
iret
js
call
jo
(bad)
neg
mov
inc
mov
fld
pop
mov
or
sbb
aam
out
and
js
dec
movs
call
adc
shl
out
je
cmp
cmps
cwde
inc
imul
sahf
and
xor
mov
add
cmp
inc
jge
ror
fmul
mov
loope
ds
std
sbb
jmp
test
arpl
(bad)
icebp
or
mov
fldpi
aas
in
pop
test
pop
inc
sub
adc
iret
push
arpl
bound
mov
ins
(bad)
gs
stos
pushf
and
fwait
push
jae
cmp
(bad)
xchg
mov
iret
xchg
rcr
push
cs
cmp
in
add
jmp
mov
cmps
cld
cmp
and
jmp
les
int
jle
popf
aam
pop
sub
push
sbb
mov
gs
sub
adc
fadd
pop
das
mov
rol
cld
movs
cmc
push
shl
mov
inc
enter
sbb
into
push
les
xor
jbe
or
(bad)
pop
cld
pop
or
imul
mov
xchg
sbb
cdq
adc
retf
and
xor
push
ror
rcl
fstp
add
repz
test
or
xor
add
mov
sub
imul
das
int3
aaa
test
dec
xor
push
mov
popf
bound
push
adc
fwait
(bad)
mov
(bad)
in
movs
(bad)
(bad)
sbb
(bad)
or
and
(bad)
pop
lods
nop
hlt
ins
or
retf
and
jo
out
daa
push
add
add
push
fdiv
movs
shl
mov
fadd
dec
ins
push
mov
aaa
mov
out
js
sub
mov
add
push
inc
movs
rol
je
popf
test
ins
cmp
bound
sub
ss
inc
push
mov
mov
cld
inc
or
imul
clc
cmp
adc
add
in
dec
add
cmc
sbb
shl
jb
mov
sbb
or
pop
into
nop
jecxz
cmp
fist
inc
scas
bound
hlt
jbe
loop
add
pop
inc
(bad)
into
jmp
xor
in
cmp
push
push
daa
mov
lds
fcomp
icebp
aad
movs
mov
lods
mov
(bad)
dec
(bad)
dec
pop
cld
fs
cmp
pusha
lods
or
pop
mov
adc
rol
sahf
push
lods
and
jb
inc
xchg
fscale
je
adc
mov
and
dec
(bad)
pop
pop
arpl
pop
push
fiadd
cli
push
sbb
jnp
imul
(bad)
cmc
jnp
dec
shld
hlt
push
test
and
xchg
adc
jmp
or
pop
push
xchg
adc
neg
push
(bad)
cmc
je
xlat
mov
push
or
loope
cmc
je
or
aas
pushf
sub
call
enter
bswap
mov
adc
push
scas
mov
lods
lahf
mov
ss
mov
je
imul
stos
sbb
and
cmp
dec
adc
ret
int3
sbb
adc
dec
mov
or
sti
mov
fabs
loope
not
mov
js
sar
inc
mov
or
repnz
adc
repz
jns
mov
push
stc
dec
test
dec
dec
sbb
jo
mov
fdiv
sbb
xchg
jae
leave
sbb
push
adc
adc
pop
mov
mov
pop
pushf
pop
dec
mov
jmp
sbb
fdivr
mov
lea
cmps
inc
pusha
xor
dec
pop
dec
mov
sbb
out
popf
add
sbb
mov
scas
js
lahf
mov
fcomip
and
out
sbb
outs
push
inc
icebp
jmp
bound
ficom
mov
outs
jne
mov
cmp
loop
push
mov
pop
shl
fcomp
movs
mov
push
jl
push
pusha
fisub
mov
test
mov
les
sbb
movs
jne
shl
shr
jno
adc
mov
or
push
mov
mov
inc
out
dec
mov
jo
rcl
or
dec
movs
cs
test
and
shr
pop
sub
fdivr
je
movs
repnz
in
dec
add
pop
in
int
add
(bad)
into
mov
(bad)
xor
push
shr
jnp
push
mov
rcr
jl
mov
stos
popf
into
mov
add
leave
outs
push
cmp
cmp
push
lods
dec
push
cmp
std
int
(bad)
jl
out
mov
mov
push
pop
retf
sbb
imul
or
jb
and
push
out
int
and
repz
push
add
fdivp
fistp
sbb
je
adc
xor
adc
movs
(bad)
sti
stos
popf
inc
dec
shl
and
idiv
dec
int
xchg
cdq
imul
arpl
sub
and
(bad)
jno
jle
jns
pop
mov
jb
xchg
jo
loopne
test
cmp
cwde
ret
push
fdivr
inc
xor
cmp
and
sub
xchg
push
xlat
lock
adc
aaa
jmp
mov
retf
push
lods
jnp
cs
mov
pop
ret
fld
mov
js
pusha
dec
popf
inc
pop
mov
les
loope
les
dec
popf
pop
cwde
enter
scas
dec
add
cmp
lahf
sub
sar
mov
call
pop
nop
je
ins
push
mov
dec
push
mov
xchg
call
lea
push
rol
xchg
xchg
in
retf
push
mov
sbb
add
imul
imul
loopne
outs
loope
lods
mov
ins
jmp
add
xlat
sar
or
or
jecxz
stos
in
loope
xchg
cmp
xchg
mov
push
xchg
or
shl
stos
(bad)
adc
movs
cmps
sub
lock
sub
xchg
jne
leave
cli
add
popf
jle
jnp
mov
inc
jl
inc
das
and
inc
xchg
clc
les
dec
inc
imul
sub
int
mov
sahf
aad
popa
inc
xlat
mov
(bad)
lahf
out
mov
in
pop
aam
sub
mov
mov
rol
inc
cld
mov
ins
ror
mov
gs
or
test
mov
sti
sbb
pushf
data16
test
cld
mov
ret
dec
iret
cld
sbb
pop
dec
mov
into
ins
lahf
ret
xchg
fmul
or
cmps
rol
fbld
fsub
aas
call
xchg
push
push
rol
scas
jl
loop
fdiv
dec
jmp
push
mov
xlat
call
dec
and
fisub
test
sbb
cmp
js
nop
(bad)
dec
inc
dec
shr
std
in
cmp
cmp
jnp
jae
int
sub
add
mov
pusha
jne
neg
nop
or
iret
ret
dec
je
cmp
pop
add
int3
(bad)
cmp
sbb
test
xchg
in
lock
jmp
fist
jbe
(bad)
mov
cwde
sar
add
xchg
jp
push
in
and
and
cmps
inc
shl
inc
lods
pop
dec
fidiv
fist
pop
inc
or
xor
cmc
jge
fwait
js
aaa
pop
pop
inc
rcl
adc
scas
test
(bad)
sahf
in
and
pop
mov
mov
jle
jp
daa
xchg
fcomp
pop
aas
sahf
xor
or
inc
adc
xlat
and
and
test
mov
cmps
or
scas
loope
cmc
pop
inc
inc
lods
sbb
and
push
loop
movs
daa
add
mov
pop
cdq
(bad)
jl
sbb
ret
jmp
mov
out
es
jg
mov
jb
pop
mov
imul
(bad)
push
cmp
lods
rol
icebp
and
push
push
push
jne
dec
jecxz
mov
and
lea
sub
xor
mov
lahf
hlt
arpl
ror
test
aas
int
test
cmp
cmps
repz
mov
out
sub
mov
sbb
fist
sbb
loop
push
mov
sti
call
in
sbb
mov
mov
sbb
mov
(bad)
std
dec
call
jecxz
in
cmp
outs
arpl
xor
jae
(bad)
pushf
(bad)
(bad)
stc
xchg
(bad)
sub
rcr
and
push
jge
outs
dec
and
ds
pop
adc
(bad)
sub
or
xlat
outs
out
popf
dec
sahf
push
mov
popf
inc
daa
ds
scas
pushf
out
ret
adc
test
mov
jge
leave
push
ins
sub
mov
xchg
mov
fs
aam
jp
sbb
div
fstp
movntps
fstp
xchg
xchg
rol
pop
cmp
aas
pop
leave
sub
out
mov
inc
sbb
stc
daa
out
jmp
xchg
sar
ss
das
pop
pop
adc
push
push
adc
pop
add
xor
mov
enter
aad
imul
mov
sub
jp
xchg
cmp
arpl
cmp
dec
and
or
and
lds
xor
sub
or
xor
ret
dec
sbb
pop
out
xlat
ja
enter
into
outs
sahf
sub
scas
movs
jg
loope
push
and
mov
(bad)
mov
popa
sub
dec
test
xor
mov
std
cmp
jbe
iret
outs
xchg
sbb
lods
cli
(bad)
push
xor
div
push
movs
push
dec
mov
xchg
adc
jge
pop
inc
mov
leave
mov
scas
mov
and
lea
fadd
cmp
inc
mov
arpl
shl
(bad)
enter
adc
push
mov
cmps
push
movs
push
xor
out
cwde
lods
pusha
mov
jns
mov
imul
daa
das
retf
mov
jae
add
pop
mov
xor
mov
fwait
sbb
jmp
pop
call
data16
mov
dec
repz
(bad)
retf
xor
xchg
pop
pop
dec
cmp
or
xor
and
push
pop
ret
sahf
add
aam
mov
sbb
mov
or
xor
int
popa
je
xchg
pop
enter
mov
or
mov
mov
xchg
int3
sbb
leave
jo
add
mov
dec
adc
(bad)
and
mov
not
repz
daa
xchg
cmp
int
idiv
vsqrtss
pop
jae
movs
cmp
ret
std
sbb
pop
in
mov
scas
jg
xor
popa
mov
xchg
xor
cmps
jne
push
dec
and
mov
(bad)
add
pop
lds
sub
pusha
icebp
or
ins
cmp
cmps
cmp
mov
punpcklbw
call
fcom
xchg
jmp
push
jnp
xor
dec
sbb
and
cmp
into
mov
jmp
mov
mov
adc
or
inc
sbb
pop
clc
popf
popa
inc
aad
push
cmp
push
cmps
repz
fst
test
(bad)
ret
call
and
xchg
adc
xor
jp
add
jb
sahf
test
aad
or
sbb
pop
add
and
add
pop
(bad)
cmps
dec
bound
inc
(bad)
mov
outs
das
ret
jg
push
add
cmp
pop
cmp
pop
cmp
imul
pop
cs
sub
dec
adc
cwde
xor
sub
addr16
adc
pop
jp
test
loopne
dec
fbld
pop
and
bound
xor
mov
mov
mov
imul
jp
jno
(bad)
(bad)
jp
mov
pop
pop
inc
pop
enter
add
mov
cmp
jecxz
clc
pop
neg
and
cmp
and
xchg
sbb
das
push
mov
int
adc
or
add
adc
fwait
js
int3
xchg
mov
mov
outs
pushf
or
div
or
scas
mul
xchg
stc
sub
rol
and
pop
and
push
xor
test
cmp
or
stos
xor
xchg
int3
clc
mov
push
jno
jnp
ins
fld
repnz
mov
and
iret
pop
dec
mov
test
into
and
aas
inc
pusha
dec
push
int3
xchg
jnp
stc
sub
jl
outs
sbb
or
xor
jbe
push
adc
pop
mov
xor
cmp
sbb
ret
lahf
cmp
mov
inc
add
jp
xor
cld
out
xor
cmp
shl
xchg
fiadd
mov
adc
cmp
jb
add
sbb
pop
cwde
movs
scas
popf
pusha
out
or
xor
pop
dec
dec
mov
test
pop
mov
xchg
sbb
sar
shl
stos
data16
pop
cmp
into
push
repz
sub
mov
push
mov
mov
push
movs
jmp
test
aas
xchg
int3
push
ret
inc
icebp
jecxz
(bad)
popa
out
xor
sub
inc
add
cld
or
sahf
sahf
stc
xor
gs
xchg
push
xchg
inc
mov
enter
cli
push
jae
cmp
pop
inc
enter
lea
add
add
mov
movs
jl
mov
cmc
int
mov
mov
push
cmp
inc
dec
lahf
push
xchg
out
xor
or
int3
ja
xor
jo
lahf
ins
out
out
sbb
xchg
pop
rcr
or
movs
cwde
popa
int
or
loopne
xchg
aam
xchg
shl
add
mov
adc
jg
mov
fdiv
push
push
out
push
(bad)
sub
pop
push
loope
xlat
pop
inc
push
sub
pushf
arpl
shr
ds
xor
jne
and
fwait
(bad)
mov
cmp
and
mov
push
push
adc
test
push
dec
rcr
mov
nop
fwait
ds
mov
loop
adc
ret
mov
enter
pop
stos
aam
adc
scas
mov
jbe
in
aam
push
iret
and
stos
iret
dec
cwde
or
js
aam
nop
cmps
xor
out
sbb
jo
out
pop
xchg
push
mov
jmp
pop
mov
mov
ins
push
in
pop
jmp
popf
mov
jp
mov
rol
stos
inc
and
dec
jb
jb
xbegin
xchg
dec
cmp
mov
ret
retf
retf
xor
mov
xlat
cmp
adc
aaa
xlat
xchg
mov
or
or
xor
adc
dec
mov
bound
icebp
push
add
inc
scas
and
mov
adc
cmp
fcom
sti
stos
call
mov
aad
pop
jecxz
popf
or
mov
cmp
jmp
fld
mov
retf
cmp
cld
add
out
dec
(bad)
jb
(bad)
jns
or
push
test
cmp
jbe
and
cmp
ins
inc
add
xor
out
inc
xchg
cdq
cmp
shl
mov
xlat
add
popf
rol
inc
mov
(bad)
hlt
and
inc
push
(bad)
shl
imul
jg
nop
pop
push
mov
and
leave
xchg
sbb
dec
cmp
xor
dec
xchg
xor
sub
ja
jge
cmp
dec
aas
out
xor
mov
repnz
imul
jmp
rol
retf
mov
mov
inc
popf
fsubr
cmp
les
inc
mov
adc
sub
sbb
fild
cmp
ret
movs
pop
gs
push
fst
push
cmp
stos
mov
test
jle
(bad)
call
mov
call
xchg
cmp
sar
and
xchg
fdivr
add
loopne
je
(bad)
add
rol
xlat
stos
xchg
jmp
outs
(bad)
inc
lea
cwde
ins
(bad)
xchg
push
and
ins
(bad)
ret
push
(bad)
adc
sbb
std
rcl
iret
das
stos
out
cld
cmps
in
and
add
adc
mov
mov
pusha
int3
rol
and
cmp
pushf
and
cmp
inc
push
mov
push
sub
mov
fwait
pop
mov
add
test
lock
mov
push
jmp
lahf
sti
jnp
pushf
add
dec
icebp
push
add
jmp
enter
icebp
xor
shl
je
lock
mov
xor
lea
push
push
mov
adc
mov
jo
rol
mov
jae
loop
retf
cmp
xor
ins
mov
mov
mov
loope
jbe
xlat
clc
mov
fdivr
add
inc
and
(bad)
sar
jmp
nop
movs
bound
pop
and
maxps
mov
fs
in
stos
push
(bad)
push
add
rcr
(bad)
jge
imul
mov
sbb
add
push
jecxz
jo
xor
mov
xor
xor
jne
fdivr
inc
push
pusha
fwait
stc
push
pusha
inc
jmp
adc
arpl
dec
dec
int3
dec
clc
loopne
xor
or
pusha
sbb
cdq
push
mov
push
movs
add
mov
lods
cmps
leave
pop
cmp
mov
push
vmwrite
jae
inc
lahf
into
mov
xlat
nop
and
imul
(bad)
je
movsx
mov
pop
pop
push
mov
push
adc
in
cmp
sbb
cmp
jne
les
and
jle
or
pop
or
test
mov
xor
sti
mov
or
lea
mov
cmps
aam
inc
or
push
cmp
hlt
mov
cmps
pop
test
sbb
call
ror
mov
sbb
xor
(bad)
jb
fnstsw
cwde
retf
shr
push
sbb
inc
shl
mov
dec
pop
mov
mov
inc
int
inc
mov
dec
in
adc
aad
fwait
or
lods
repnz
sbb
and
int
pop
sti
std
xchg
sbb
jmp
sub
inc
into
int
ins
adc
pop
mov
pop
xchg
mov
inc
loopne
mov
dec
push
lea
jmp
sbb
pop
mov
clc
inc
push
xlat
test
aad
sub
xchg
mov
push
shr
daa
add
loopne
sbb
or
lea
cmps
sar
and
lods
push
pop
pop
inc
fs
xlat
fs
or
sahf
xchg
mov
mov
xor
lods
pop
popf
ret
popa
test
dec
dec
sub
stos
(bad)
pop
dec
loope
outs
cwde
push
scas
sti
jb
mov
scas
jecxz
lock
xor
sbb
push
pop
into
fwait
mov
xor
push
xchg
mov
xor
pushf
xor
xchg
and
and
sbb
and
push
inc
cli
push
(bad)
sub
or
push
pusha
ret
or
sbb
jp
dec
xchg
dec
stos
iret
push
in
inc
fs
scas
pop
xor
loop
pop
das
adc
(bad)
mov
adc
inc
pusha
add
dec
dec
inc
jbe
xchg
mov
xlat
mov
icebp
bound
xor
push
cmps
or
cwde
pushw
mov
cmp
lods
cld
mov
jb
and
data16
scas
pop
xor
ins
jg
push
dec
into
xchg
sub
mov
sbb
(bad)
jmp
(bad)
fs
adc
inc
dec
cmps
mov
popa
pop
dec
or
loopne
mov
aaa
out
add
mov
hlt
popf
push
cmp
and
pop
rcr
mov
push
pop
out
addr16
retf
addr16
sbb
mov
scas
ja
and
(bad)
mov
lods
cdq
into
pop
test
inc
or
or
test
mov
inc
inc
(bad)
mov
test
stos
mov
out
cli
sub
fidivr
xchg
jmp
scas
adc
ss
push
sar
out
jecxz
mov
and
nop
inc
sub
repnz
adc
mov
ret
and
push
mov
jge
test
or
shl
inc
stos
xchg
pop
mov
push
mov
out
fucomp
(bad)
test
xchg
movsx
and
xchg
ja
ret
dec
jmp
out
xchg
js
push
cmpxchg
fstp
cs
inc
cmp
cmp
mov
sti
jb
adc
push
js
es
pop
sub
adc
pop
xor
adc
inc
jmp
adc
push
add
sub
sar
add
jo
xor
pop
jns
mov
push
shr
inc
loopne
fnstenv
fwait
das
add
jle
ror
stos
rcr
add
mov
mov
sti
out
pop
add
push
inc
fidivr
jns
inc
pop
sbb
test
jmp
pop
aam
dec
div
add
xor
sti
stos
add
push
shr
pop
out
or
loope
adc
push
aam
dec
jecxz
stos
fidivr
ins
out
or
sub
lea
mov
(bad)
test
jno
mov
out
push
std
out
pop
xor
push
aam
movs
mov
pushf
ror
mov
loope
jg
int3
clc
jno
idiv
ins
add
inc
lahf
mov
mov
dec
std
xor
(bad)
xchg
stc
add
loop
adc
lods
mov
pop
mov
in
and
push
mov
in
cmc
bound
test
mov
iret
dec
aaa
mov
repz
mov
shl
test
jle
and
mov
or
jnp
shr
adc
cmp
dec
call
jle
rol
xchg
mov
test
nop
sbb
dec
sub
xchg
popf
(bad)
lods
sti
fild
mov
jmp
cli
add
xor
cmps
out
je
mov
movs
mov
push
mov
xor
cmps
outs
jecxz
pop
addr16
gs
push
out
mov
xchg
int
(bad)
fsub
jp
out
or
mov
iret
leave
jge
enter
adc
sbb
dec
xchg
fdiv
mov
leave
repz
mov
xchg
mov
xchg
jmp
push
or
shl
fwait
outs
retf
push
mov
lahf
nop
das
stc
and
sbb
data16
sti
sbb
mov
int
movs
ja
or
pop
std
sbb
xor
sbb
push
das
(bad)
jno
ins
push
fmul
shl
mov
test
movs
fimul
xchg
cdq
test
push
add
xor
jmp
popf
stos
and
sub
push
sub
or
sub
clc
loop
cmp
jmp
xlat
stos
jb
and
das
arpl
mov
jecxz
(bad)
sub
in
gs
std
pop
clc
fcmovnb
push
mov
jge
jbe
mov
test
imul
add
loopne
movs
add
ret
(bad)
mov
fistp
test
scas
loopne
and
ror
retf
add
popa
cmp
and
ds
ins
iret
scas
or
add
and
mov
cld
or
xchg
popf
inc
pop
xlat
xor
icebp
cmps
mov
cmp
rcr
add
push
cmp
cmovnp
icebp
mov
imul
movs
xor
call
test
mov
ret
cmp
mov
pushf
sbb
sub
dec
in
sub
cmps
cdq
je
xchg
push
mov
xchg
push
aad
xor
fistp
pusha
lds
iret
pusha
adc
xor
retf
mov
aam
dec
inc
sub
push
add
mov
jl
stc
cdq
xor
mov
fcom
xchg
sub
mov
pop
loop
dec
mov
or
jmp
addr16
ror
dec
mov
ss
cmc
push
int3
sbb
jmp
out
mov
ins
push
aad
cmps
sub
nop
ss
lahf
es
loop
jmp
mov
adc
(bad)
mov
ins
mov
mov
arpl
mov
cmp
or
scas
shl
push
cmp
cmp
outs
jle
call
xchg
xor
dec
xchg
mov
out
or
retf
lock
loope
(bad)
sar
cmps
and
fnstenv
sbb
sbb
movs
paddw
sub
not
jp
lods
pop
into
xchg
out
leave
sbb
mov
xor
dec
ds
push
sbb
icebp
push
mov
jge
cmp
push
jno
out
add
xchg
mov
xor
in
mov
add
dec
mov
shl
icebp
or
push
cmp
and
mov
inc
adc
mov
mov
xor
mov
jmp
fist
xor
dec
or
add
or
sti
out
mov
call
push
sti
fwait
jl
aad
data16
stos
rol
jg
mov
cmp
inc
aad
rol
push
mov
add
xchg
in
bound
jl
icebp
lods
sbb
lods
cmc
cmps
das
push
ret
sub
inc
push
push
jmp
mov
stc
and
fldl2e
jl
test
xchg
imul
stc
sbb
mul
sbb
out
cmp
cmp
out
pusha
fnstsw
mov
retf
jb
lods
js
or
bound
ret
js
pop
out
pusha
push
aaa
popa
outs
js
cmp
push
mov
lock
xchg
adc
dec
cmp
loope
jmp
xor
sub
(bad)
push
mov
fnstenv
push
ds
or
add
mov
push
fdivr
jmp
cwde
mov
pop
dec
cdq
push
push
jp
xchg
and
cmp
ror
mov
ja
mov
inc
dec
jecxz
lds
sub
in
cwde
repnz
xor
jmp
add
pop
cli
mov
bound
lds
and
gs
popa
adc
inc
xchg
outs
sbb
ds
mov
cdq
retf
xor
fdivrp
mov
or
mov
pop
push
xchg
mov
push
inc
mov
inc
sbb
es
xchg
inc
dec
bnd
movs
jnp
pop
adc
aad
push
rcl
or
jp
mov
or
out
add
xchg
mov
jmp
xchg
jl
inc
mov
mov
mov
mov
mov
inc
outs
mov
pop
adc
push
xlat
pushf
adc
pop
push
jne
mov
rcr
pop
lods
xchg
sbb
dec
mov
cmp
sar
das
(bad)
mov
fcmovbe
xor
and
lock
adc
nop
outs
jbe
cld
jg
push
inc
mov
cmp
aas
loope
jl
scas
inc
xchg
sbb
test
ins
or
jge
fstp
mov
and
sbb
rcl
mov
test
cmc
pop
push
mov
xchg
lahf
mov
jae
jge
or
enter
(bad)
cmp
lahf
sbb
cld
and
pcmpgtb
shr
mov
cwde
lock
ins
test
bound
push
mov
adc
repz
je
popa
out
fdivr
fldenv
lock
jns
(bad)
int
int3
push
scas
xlat
push
xlat
arpl
ins
(bad)
pop
fwait
int
add
jmp
test
call
lahf
and
dec
or
jge
and
inc
mov
std
fnstenv
and
push
outs
pop
sub
in
lock
jbe
test
int3
js
in
mov
mov
mov
cmps
push
aaa
pop
imul
adc
and
add
dec
std
sbb
adc
sbb
dec
mov
fnstenv
jb
fsub
mov
or
cmp
mov
sbb
push
sbb
inc
inc
cmc
int3
jne
in
pop
data16
cmps
imul
mov
ss
xor
cwde
scas
daa
scas
or
mov
inc
daa
aaa
fnstenv
daa
fsubr
cmp
add
pop
fdivr
sub
stc
scas
sub
sar
dec
adc
icebp
mov
xor
fcom
mov
push
xchg
test
xchg
int
test
inc
ss
xchg
out
jb
mov
xor
jno
fst
loopne
pop
add
xchg
xor
xchg
leave
jge
(bad)
shl
push
hlt
mov
sbb
pop
inc
daa
aaa
xcrypt-ofb
cmps
out
cs
fisttp
movs
mov
jmp
js
xor
pop
dec
leave
xchg
push
vpshufd
loopne
shr
push
adc
or
aas
data16
retf
mov
mov
int3
call
addr16
xchg
pop
imul
mov
adc
xchg
and
mov
xchg
add
and
sub
pusha
jbe
out
add
push
push
in
pusha
xor
mov
mul
loope
xor
add
test
stos
gs
jo
push
je
fldcw
(bad)
sti
loopne
or
les
sbb
mov
mov
leave
mov
xor
std
pop
in
mov
bound
dec
out
sti
ficom
(bad)
mov
or
(bad)
aad
fst
adc
retf
(bad)
dec
stos
push
cmp
les
inc
cs
bound
push
sahf
sub
in
scas
outs
daa
cmc
fisttp
sub
push
dec
rcr
lea
jmp
popf
movs
call
mov
out
jae
and
adc
es
movs
mov
pushf
or
loopne
push
mov
xor
hlt
movs
mov
imul
or
stos
pop
les
or
pop
mov
xchg
js
dec
sahf
stos
jne
mov
into
iret
push
or
lods
cmp
cs
imul
sub
ret
xor
jns
fs
js
cmp
out
loope
xlat
pop
movs
adc
int3
or
jno
fwait
stos
mov
lods
frstor
xor
in
cmp
dec
push
pop
inc
rcl
add
xchg
jg
test
ret
imul
in
push
pop
popa
jns
leave
mov
fild
dec
bound
dec
test
cmp
call
retf
outs
mov
mov
scas
or
pop
mov
test
adc
mov
sub
pop
or
lock
ret
ss
push
add
sub
adc
adc
jle
mov
xchg
in
int3
sub
sub
fld
fstp
out
mov
jo
and
inc
je
cmp
pop
out
lds
mov
fwait
pop
jno
fisttp
push
cmc
mov
out
mov
dec
and
enter
les
dec
lahf
sbb
mov
outs
lock
(bad)
cld
sahf
adc
pop
xlat
push
inc
dec
pop
jle
fcmovb
mov
lods
push
mov
ficom
imul
inc
xor
(bad)
les
pushf
scas
inc
jns
test
mov
in
stos
(bad)
icebp
call
mov
pop
inc
mov
xor
xor
hlt
retf
inc
arpl
jae
add
xchg
xchg
pop
add
lahf
aam
popf
pop
inc
in
adc
arpl
xor
loope
adc
mov
xchg
pushf
xchg
fistp
(bad)
mov
mov
int3
(bad)
repz
inc
fcom
std
cmp
push
jp
outs
push
fist
ins
imul
xchg
dec
arpl
cmp
or
cmp
dec
dec
popf
call
loope
out
and
ins
in
in
ficomp
imul
lods
je
(bad)
pop
xor
inc
sbb
mov
push
sahf
lahf
dec
jae
push
(bad)
enter
or
daa
repz
cli
push
mov
lock
lahf
push
mov
out
xor
das
mov
mov
mov
outs
std
push
mov
mov
push
(bad)
jmp
cmp
sub
inc
sti
mov
pop
out
test
mov
retf
sbb
gs
xor
fnstenv
sbb
add
cwde
push
xchg
jo
sbb
ret
loope
bound
jmp
rcr
cmp
sub
xor
xchg
das
xor
mov
jne
out
in
inc
sbb
hlt
nop
dec
adc
and
aas
cmp
out
outs
ins
add
push
daa
mov
mov
jo
sub
jae
outs
cli
(bad)
cmc
mov
xor
jg
dec
aas
xor
movs
call
cmp
mov
dec
jae
popa
mov
jl
jge
(bad)
call
push
xor
js
shl
xchg
push
push
push
jecxz
js
push
lods
popf
xor
push
das
nop
adc
adc
mov
and
neg
jns
push
push
and
retf
movs
sbb
add
out
xlat
add
test
xlat
or
test
sub
cmps
mov
test
or
xor
push
xchg
and
out
dec
out
int
push
enter
call
leave
adc
adc
xor
fucomp
push
xchg
std
push
mov
or
movs
xchg
push
ds
jl
inc
and
test
inc
push
xchg
(bad)
stc
xor
xor
inc
(bad)
inc
mov
jge
push
xlat
inc
and
jmp
ds
push
mov
mov
sbb
(bad)
dec
sbb
aam
inc
add
cli
stc
aaa
shr
push
xchg
xlat
sbb
cmp
call
mov
shr
or
and
bnd
pop
xchg
std
stos
xchg
ret
lods
sbb
fs
ja
adc
dec
fsubr
sbb
or
outs
jmp
outs
aaa
and
jle
popa
fst
dec
lahf
pop
pop
das
add
adc
aaa
(bad)
mov
(bad)
cdq
shl
and
fsub
fwait
pop
add
arpl
inc
out
xor
xor
push
leave
mov
hlt
shr
ss
push
fwait
push
mov
push
(bad)
adc
je
xchg
scas
or
pop
mov
pop
inc
popf
addr16
mov
jmp
arpl
jbe
scas
push
sahf
adc
test
xlat
xor
add
ror
retf
and
cmps
pop
push
loope
daa
push
xor
repz
sbb
out
out
cmp
mov
cmp
adc
xchg
add
scas
add
sbb
fild
(bad)
mov
stos
xor
mov
ret
ret
and
jae
sbb
stos
pop
cld
es
add
in
in
add
rcr
adc
mov
ror
pop
les
sbb
add
inc
repnz
iret
ja
outs
pop
adc
shl
leave
xor
sti
add
push
in
imul
xchg
sbb
xchg
call
add
popa
outs
(bad)
fld1
or
(bad)
mov
xchg
je
dec
xchg
leave
into
mov
scas
call
cmp
pop
dec
cld
xor
arpl
pusha
xor
dec
cld
jp
mov
push
jmp
lds
adc
mov
adc
pop
xor
js
dec
jns
or
inc
xchg
jbe
inc
pop
or
push
sub
mov
inc
data16
test
sbb
mov
jns
mov
pop
or
push
sub
adc
aad
lahf
leave
gs
sub
mov
sbb
jmp
adc
mov
inc
test
cwde
lahf
jmp
jp
xchg
test
int
mov
mul
sub
jp
and
(bad)
out
iret
and
loope
pusha
push
push
out
test
in
jle
arpl
inc
pop
call
xchg
inc
outs
ss
stos
test
pop
xchg
mov
cmp
es
mov
lds
in
fmul
clc
into
push
scas
push
xor
sar
fisttp
hlt
fild
loope
mov
cmps
sub
fisubr
fsub
mov
jo
mov
adc
aas
sbb
mov
scas
xlat
jle
jmp
mov
adc
add
or
lods
inc
mov
mov
icebp
cmc
sub
imul
es
scas
rcr
rcr
loop
into
fisttp
inc
cdq
adc
(bad)
fisub
xor
pop
mov
in
ins
enter
lea
cmp
mov
call
jnp
lods
int
push
and
(bad)
mov
lods
out
sbb
popa
or
dec
cmp
fnstsw
pushf
shl
fcom
movs
cmp
fwait
sub
fwait
sbb
dec
test
mov
lea
mov
pushf
out
out
pop
rcl
or
cmp
xchg
arpl
loopne
std
xor
xchg
outs
mov
out
adc
scas
xchg
mov
and
or
ficom
pop
sbb
test
mov
or
mov
mov
repnz
cmps
nop
jns
int3
stos
nop
inc
in
add
mov
movs
fidiv
sbb
adc
js
inc
lock
cmp
in
adc
mov
das
sbb
dec
mov
add
scas
or
or
outs
or
movmskps
outs
and
ss
pop
mov
mov
adc
adc
(bad)
gs
adc
pop
clc
cdq
sar
jae
sub
xlat
clc
mov
stc
jae
sub
pushf
clc
jne
mov
sub
mov
(bad)
xchg
jno
jg
out
mov
cld
and
mov
inc
sbb
fidivr
ret
in
icebp
mov
cmp
faddp
imul
sub
fxch
and
jle
jle
lahf
jae
jne
push
mov
data16
cld
shr
and
test
xor
es
pop
jl
mov
push
push
push
jae
inc
icebp
cdq
push
mov
inc
mov
in
lock
shl
outs
leave
or
hlt
add
leave
test
or
push
push
test
ret
lahf
jns
jg
pop
xor
call
cmp
inc
mov
fwait
pop
xchg
mov
sub
jle
test
out
js
aaa
mov
xchg
sbb
outs
push
inc
jnp
pop
inc
std
cdq
inc
fmul
repz
daa
shl
adc
mov
imul
stc
imul
enter
cmp
jmp
je
cmp
cmps
mov
add
fimul
mov
jmp
pop
dec
js
jbe
mov
adc
cmc
xchg
jle
xor
aam
mov
rcr
shl
jbe
add
push
inc
jne
dec
dec
cmp
push
cmp
(bad)
stc
mov
rcl
(bad)
fsubr
out
lahf
arpl
xor
cmps
sub
sbb
or
sbb
lock
(bad)
adc
pop
xchg
fisttp
inc
scas
pop
inc
pop
xchg
inc
bnd
dec
sbb
dec
pusha
aad
out
das
in
pop
push
ja
sahf
daa
and
mov
call
in
inc
cmp
mov
sub
and
retf
daa
cmp
sbb
mov
mov
push
out
sar
push
ss
fisubr
daa
xor
ror
js
lods
or
sbb
mov
xchg
jl
fistp
push
(bad)
sahf
popf
sub
test
xchg
pushf
adc
(bad)
and
ss
(bad)
sahf
pop
push
adc
xor
pop
nop
mov
adc
xchg
mov
xor
imul
jle
pop
test
jmp
jo
or
mov
push
or
test
popa
iret
fcmovnb
bound
aaa
jns
jle
ss
(bad)
sub
mov
push
stos
popa
jmp
in
xor
cmp
lea
mov
lock
lods
add
ins
jo
and
cwde
loope
mov
fisttp
jbe
add
xchg
mov
cmp
or
popf
lods
add
fbstp
mov
(bad)
xor
shr
ins
pop
clc
and
pmovmskb
cmps
jno
xlat
fwait
adc
mov
jbe
mov
rcl
mov
jns
retf
mov
cmp
cmp
cs
cmps
or
out
jns
pop
cmps
stc
dec
cmp
cwde
scas
(bad)
mov
jno
or
dec
jmp
(bad)
popa
pushf
jae
retf
mov
cmps
mov
jnp
pusha
in
sub
test
(bad)
xor
xor
or
push
pop
fcomp
dec
push
mov
addr16
adc
retf
call
clc
repz
or
sub
jne
and
rcl
scas
fnsave
pop
test
xor
mov
push
clc
or
call
pop
lock
mov
iret
adc
mov
aaa
jns
test
fwait
arpl
and
cmp
jge
(bad)
(bad)
push
in
rol
xchg
push
(bad)
xchg
lods
mov
retf
fst
movs
sbb
mov
xor
or
loop
int
pop
(bad)
push
sti
push
mov
pop
in
jo
out
loop
or
rcr
mov
inc
cli
ret
sub
call
pop
scas
or
mov
dec
hlt
fimul
adc
jecxz
pop
and
push
ret
push
pop
cmc
mov
xlat
adc
dec
ror
sbb
jge
jmp
mov
sbb
repnz
retf
adc
mov
fbstp
sbb
out
addr16
cmp
lods
xchg
pop
cmp
xor
sub
in
lods
stos
xor
cmp
leave
and
mov
cmp
mov
daa
(bad)
push
ja
lds
xchg
cmp
in
cmc
pop
in
test
xchg
shl
xchg
mov
or
inc
mov
mov
test
enter
and
nop
cmps
rcr
and
add
add
inc
mov
call
xor
in
mul
rcl
pusha
aad
icebp
arpl
pushf
add
repz
loope
and
sub
push
cwde
hlt
and
and
fsubr
lods
mov
pop
ss
jge
mov
repz
out
(bad)
scas
test
ja
pop
scas
mov
scas
and
test
push
jae
adc
outs
je
retf
xlat
jmp
fsub
ins
inc
outs
xchg
cmp
cmp
add
mov
jmp
ja
xor
jbe
inc
cmp
call
std
data16
or
sub
xlat
lods
add
popa
mov
rol
xor
pop
inc
jno
push
test
dec
test
and
call
or
enter
sbb
cld
xchg
aaa
add
xchg
sbb
mov
adc
sub
jecxz
call
sahf
push
jmp
push
js
gs
and
push
lahf
dec
pop
imul
mov
test
xchg
cld
or
sub
inc
jns
ja
mov
add
mov
cld
mov
dec
and
dec
fwait
xor
inc
imul
adc
pushf
mov
sti
into
mov
in
(bad)
cwde
and
lods
push
scas
(bad)
arpl
adc
(bad)
xchg
pop
sbb
fisttp
stc
dec
bound
xchg
lods
cmp
pop
mov
aam
push
jmp
call
sbb
popa
sbb
sbb
xchg
push
jmp
dec
ins
push
loopne
repnz
xor
mov
test
xor
imul
out
xchg
and
call
sbb
int
ret
dec
icebp
enter
add
aam
push
mov
push
pop
sbb
addr16
pop
add
jp
idiv
pop
retf
or
pop
jmp
gs
pop
fbld
inc
lahf
repnz
(bad)
xchg
out
push
xor
cmp
nop
clc
pop
jg
push
push
cld
push
push
outs
and
push
mov
lahf
sub
jmp
add
push
clc
fwait
pop
(bad)
movs
pop
cld
pop
push
cmp
push
xchg
jp
js
sti
rol
(bad)
ins
inc
mov
adc
jo
call
pop
inc
xor
shl
jnp
outs
cdq
loopne
dec
in
cmp
fbld
ins
dec
xor
shr
push
jno
sar
push
xor
jns
xor
mov
xchg
mov
or
fbstp
push
out
ds
pop
and
outs
arpl
or
jbe
inc
in
sbb
sbb
ret
xchg
int
adc
sbb
or
fcom
dec
(bad)
ds
lahf
fcomip
sub
and
cmp
mov
push
jmp
inc
nop
ret
sub
fst
add
push
pusha
and
pop
rol
sahf
lock
loope
mov
jne
dec
mov
sub
cs
mov
sbb
dec
shl
and
fcom
mov
adc
xchg
(bad)
(bad)
mov
or
pop
cli
(bad)
push
mov
sub
push
lods
xor
dec
mov
das
ds
jecxz
fsubr
jo
(bad)
lock
popf
shl
dec
sub
scas
sbb
sbb
cmp
or
xor
xchg
aas
out
int
das
push
(bad)
jl
jecxz
push
inc
sbb
sbb
call
inc
xchg
sbb
mov
adc
pop
fs
fist
retf
pop
pop
jmp
push
ror
inc
arpl
rcr
adc
ins
test
push
dec
adc
push
pop
imul
push
fsubr
xchg
dec
cmp
(bad)
fdivr
sub
mov
pusha
(bad)
sbb
dec
aas
imul
stos
add
retf
leave
enter
inc
je
add
cdq
test
and
pop
xor
jl
and
loop
jns
out
enter
out
mov
test
push
pop
sbb
inc
int3
sub
ins
les
clc
scas
xor
dec
adc
test
mov
and
fcomi
les
mov
add
add
aas
lea
mov
xlat
in
out
es
scas
scas
or
push
push
mov
or
mov
arpl
mov
js
fs
test
enter
ja
mov
gs
loop
rol
int3
cmp
jle
jbe
fild
or
jle
push
ds
repnz
mov
add
loope
clc
inc
lea
hlt
sbb
adc
jg
cdq
js
jbe
std
inc
rcr
xor
mov
aam
or
sbb
mov
out
cmp
push
push
jmp
rol
add
push
inc
(bad)
test
dec
test
ror
shl
rcr
sub
lods
sub
dec
clc
jl
repz
(bad)
scas
loop
shl
je
gs
add
cdq
cld
movs
push
or
inc
lds
jnp
mov
xor
xor
jno
jge
test
cwde
(bad)
and
push
popa
cmp
int3
and
push
gs
jne
popf
pop
mov
jecxz
retf
fild
inc
pop
pop
rol
mov
cmp
cwde
jg
push
sbb
jg
es
cwde
inc
or
ret
jb
xchg
sbb
sbb
push
pop
imul
iret
jb
ins
cwde
lea
pop
icebp
fisttp
push
adc
ror
test
lahf
inc
and
gs
les
imul
shr
add
mov
test
adc
mov
sub
sbb
aaa
in
add
mov
call
movs
push
xchg
out
jmp
or
nop
lds
pop
jno
daa
cli
aaa
jg
je
je
int
jbe
movs
clc
pop
out
pop
nop
daa
cmp
out
jne
inc
sbb
mov
in
sbb
ficom
mov
inc
add
int3
fldcw
jnp
repz
leave
pop
adc
xchg
jo
cmp
mov
and
scas
push
retf
push
dec
lods
hlt
adc
sbb
test
sbb
js
and
daa
pop
dec
xchg
sbb
or
leave
and
cmc
xor
ins
stos
push
add
cmp
pop
dec
rcr
ins
cmp
push
shr
scas
sub
sbb
stos
jns
sub
adc
pop
(bad)
cmps
scas
dec
jmp
inc
into
loope
in
and
mov
add
pop
sbb
aam
jmp
arpl
jns
stos
push
hlt
cmc
clc
ins
cdq
push
sbb
movs
pusha
nop
mov
lahf
mov
dec
js
imul
jecxz
ret
cmp
adc
jmp
scas
inc
or
out
(bad)
sub
pop
pop
bound
ins
fldenv
scas
inc
lock
scas
rcl
ss
push
cmp
pushf
jb
dec
mov
cmp
xchg
push
je
pop
inc
xchg
push
rol
cs
jne
dec
sub
retf
push
mov
leave
cmp
mov
(bad)
scas
adc
sbb
pop
cs
cmp
enter
sub
dec
push
jne
jno
clc
dec
lods
loop
mov
or
sar
xor
push
sbb
outs
loope
mov
jl
leave
in
dec
mov
add
cmc
(bad)
xor
imul
cmc
call
sbb
mov
sbb
jno
iret
sub
sbb
ret
pop
xor
subps
mov
mov
add
out
cmp
ret
pop
xlat
int
dec
dec
ja
pop
fbstp
sub
xchg
mov
cmps
imul
icebp
and
pushf
mov
dec
or
mov
retf
popa
push
xchg
push
dec
push
and
cmps
add
sbb
inc
mov
adc
push
cmp
pop
into
sbb
pop
scas
jmp
cmc
adc
imul
mov
ds
mov
hlt
(bad)
in
mov
ret
push
into
pop
push
sbb
mov
lea
enter
sbb
xor
leave
push
pusha
jne
adc
lahf
sar
add
jne
add
pop
sub
push
ins
repnz
mov
push
call
push
out
adc
stc
or
add
pushf
fucomi
push
sub
js
shl
js
icebp
nop
push
inc
pop
fsubr
add
inc
jnp
loope
fstp
push
add
sbb
call
sbb
jmp
cmps
(bad)
push
jo
mov
test
cmp
and
pop
ficom
dec
inc
dec
aas
sbb
dec
jle
aaa
das
pop
addr16
test
push
cmp
arpl
jle
in
xchg
imul
aas
cmp
ja
out
icebp
add
dec
and
dec
mov
dec
lea
push
ja
int
xchg
xchg
(bad)
sbb
inc
cmp
retf
mov
fistp
cmps
push
pushf
stos
mul
mov
je
retf
or
pushf
mov
and
pop
lds
adc
push
bound
arpl
jno
mov
or
mov
stc
shr
popa
inc
ja
inc
mov
adc
in
out
jp
xchg
das
sbb
add
aaa
js
inc
ror
dec
rcl
cmp
nop
in
int
push
iret
or
mov
push
push
cmp
shl
cwde
fdiv
cmp
mov
pcmpgtb
mov
sub
aaa
pop
or
loope
xchg
shl
inc
mov
(bad)
cmps
pop
or
lea
stos
lea
ins
scas
xchg
mov
aas
test
ret
xor
cs
xchg
daa
out
mov
jmp
jae
je
xor
xchg
cwde
push
push
(bad)
pop
addr16
mov
aad
es
or
mov
pop
rep
and
jp
stos
pop
mov
shr
lahf
shr
inc
fimul
mov
sti
imul
std
mov
lods
sbb
arpl
mov
pop
push
or
mov
outs
retf
add
int3
les
loope
ror
push
mov
lock
xchg
pop
dec
fidivr
xchg
jnp
add
push
mov
jne
lds
cmp
add
cmc
popa
aas
push
popf
fsub
loope
push
cmp
neg
xor
and
pop
adc
jbe
scas
stos
jne
pushf
pop
gs
addr16
push
xor
cdq
sti
push
add
jnp
mov
les
push
mov
sti
fcom
les
mov
mov
cmps
enter
test
out
or
adc
shl
xlat
ret
and
push
adc
bound
inc
es
popf
loop
shl
les
retf
retf
pop
js
xchg
imul
nop
aas
push
cmp
inc
or
ret
je
mov
cli
adc
lock
xor
push
ins
pop
and
(bad)
adc
dec
in
add
mov
loope
nop
mov
mulps
dec
dec
cdq
pop
sbb
add
sub
mov
test
xchg
stos
pop
jg
mov
xlat
es
pop
call
loope
cs
sar
mov
fistp
fdiv
jle
adc
or
xchg
adc
xor
inc
cdq
mov
repnz
es
daa
push
ss
cdq
pushf
loop
xor
mov
(bad)
call
(bad)
mov
pop
outs
inc
stos
push
fwait
(bad)
xchg
mov
adc
mov
mov
xchg
ins
jl
pop
rol
cmp
mov
push
mov
loope
add
cmps
adc
xor
cmps
push
into
mov
mov
call
inc
inc
fdiv
leave
cmp
jge
js
and
and
psadbw
sbb
mov
cmp
sub
out
ficomp
dec
call
loop
in
rcr
icebp
push
cmps
loope
idiv
(bad)
ja
enter
pop
movs
and
mov
or
inc
xchg
std
stos
push
inc
xor
mov
push
out
jge
push
or
pop
out
add
cmp
mov
jne
fcomp
aaa
imul
push
sbb
xor
push
cld
inc
add
inc
repnz
call
ins
xchg
jecxz
in
stos
mov
xor
inc
fnsave
mov
mov
in
cmp
push
int
test
mov
clc
add
jbe
jmp
jns
jge
movs
inc
imul
outs
lods
or
fwait
or
cmps
std
lock
(bad)
push
push
jno
fwait
sub
pop
inc
mov
mov
dec
mov
mov
sbb
dec
jno
push
push
in
mov
iret
push
pop
jecxz
mov
gs
dec
leave
sbb
sub
lods
sub
ret
push
and
arpl
loopne
sub
pop
and
loop
scas
inc
fsubp
sub
movs
ins
sar
and
sub
gs
or
rol
fs
nop
(bad)
xchg
jb
scas
fadd
jno
test
daa
push
pop
pop
sbb
inc
cli
fidiv
push
push
scas
cdq
(bad)
adc
cmp
pushw
cmp
or
frstor
push
push
and
inc
inc
mov
jg
leave
xor
mov
loope
mov
sbb
lods
and
jae
xor
popf
mov
push
xor
stos
cmp
cmps
or
jecxz
jno
pop
mov
xor
(bad)
idiv
imul
mov
jmp
test
lahf
push
pop
dec
or
scas
mov
lods
mov
jmp
ss
iret
mov
in
mov
adc
mov
ja
or
mov
sahf
push
movs
jmp
xor
movs
aas
xchg
sbb
dec
adc
pop
push
or
outs
dec
and
mov
pop
cmp
mov
test
sub
lods
ror
xor
xchg
inc
arpl
test
out
xor
lahf
cs
and
outs
ds
xchg
aam
enter
mov
inc
aaa
(bad)
cld
dec
push
pop
sbb
inc
xchg
ret
inc
sbb
aam
mov
mov
cmps
in
pop
xor
push
jle
fild
mov
in
xchg
cwde
cmp
sahf
jb
xchg
out
mov
lahf
hlt
stos
push
pop
pop
and
gs
in
sub
cmps
outs
cmps
pusha
or
mov
stos
xor
xchg
sar
push
xchg
or
pusha
retf
inc
xchg
cmp
push
gs
xlat
outs
inc
sbb
cmp
jl
xchg
je
std
sbb
mov
mov
push
into
es
iret
adc
xchg
nop
cli
int
sbb
add
fs
movs
in
xchg
clc
ja
in
pop
xchg
cmp
sbb
ss
dec
pusha
mov
hlt
and
out
lea
into
push
rcl
push
lods
(bad)
and
out
lods
mov
arpl
sbb
and
in
je
sub
loopne
and
add
stos
gs
ins
mov
test
inc
in
mov
sbb
out
jecxz
pop
fimul
in
xchg
movs
aad
iret
pop
in
shr
scas
dec
and
xchg
ret
add
shl
out
and
jle
inc
xor
test
add
ss
pop
in
lods
fst
rol
cmps
cld
jns
(bad)
lahf
push
add
fidivr
pushf
in
mov
pop
(bad)
call
dec
ss
mov
add
push
cdq
mov
repnz
iret
jmp
jg
sbb
cmp
push
dec
adc
or
call
(bad)
retf
jp
in
jge
repz
inc
mov
cmp
cld
xchg
in
push
push
adc
jno
into
push
mov
mov
add
lods
sub
sub
sar
and
mov
stc
dec
and
ins
sbb
arpl
scas
sbb
xor
test
jae
sub
mov
push
add
or
mov
jl
shl
inc
jae
loop
aas
cwde
(bad)
sti
fild
out
loopne
retf
xchg
sub
and
sbb
popa
or
pop
cld
mov
and
nop
scas
movs
push
mov
push
adc
inc
dec
mov
mov
lahf
jns
sub
or
jmp
aad
or
pop
(bad)
jg
pushf
inc
push
outs
add
mov
lahf
out
pop
div
outs
jg
pop
pop
and
push
pop
out
sbb
xor
stc
lods
add
mov
pop
test
data16
repz
neg
and
push
js
leave
dec
pop
rcr
std
not
jo
or
jle
retf
xchg
pop
pop
in
dec
(bad)
out
int
jle
sti
xchg
test
in
dec
xor
ret
mov
sub
mov
push
dec
repnz
shr
fdivr
dec
data16
sar
loop
sub
stc
popf
ret
adc
adc
enter
loope
mov
je
(bad)
jmp
shl
jo
xchg
mov
xchg
(bad)
mov
fistp
out
push
xor
outs
fisub
lock
dec
mov
ins
and
ja
pop
inc
addr16
push
out
push
int
jecxz
repnz
mov
ret
sbb
rcl
sahf
sbb
add
push
rcr
fcomp
mov
and
cwde
fdivr
mov
sbb
hlt
cmps
movs
or
call
pop
retf
jl
cld
sbb
mov
fld
push
cmc
cmps
rol
pop
jmp
out
int
fwait
sub
jo
sub
ret
sbb
push
inc
daa
daa
add
mov
add
dec
mov
xchg
xchg
cmp
(bad)
cld
call
jg
mov
arpl
cld
fnstsw
(bad)
fnstcw
push
cmc
mov
sbb
cmp
pop
lahf
cmp
icebp
add
std
mov
sub
ins
mov
daa
cmp
or
cmp
lea
addr16
int3
or
retf
retf
push
mov
(bad)
ins
add
xchg
mov
add
mov
cmp
out
or
add
je
dec
fisttp
sar
ins
or
jnp
cmp
loop
push
adc
lahf
inc
sub
jp
or
shl
pop
jl
cmp
or
inc
mov
push
jecxz
inc
and
mov
xchg
cmp
xchg
lea
popa
sbb
hlt
in
pop
fisub
and
pop
outs
mov
xchg
add
dec
push
das
scas
and
xor
mov
cmp
(bad)
inc
test
lock
and
leave
xor
push
aaa
jg
dec
pop
mov
and
and
or
(bad)
cmc
xchg
es
xlat
dec
or
fs
add
push
in
lahf
out
sbb
enter
cmp
adc
(bad)
mov
call
mov
mov
popf
leave
test
mov
adc
jp
mov
or
mov
(bad)
adc
jo
cld
int3
pusha
jne
or
data16
inc
rol
loopne
stos
sub
jno
or
pop
push
jmp
pop
test
aaa
pop
sub
lea
mov
stos
out
mul
test
gs
push
mov
jno
fs
or
mov
jnp
movs
das
sbb
xchg
jb
nop
lahf
bound
imul
test
mov
scas
add
mov
jmp
mov
test
cmp
adc
je
in
rcr
test
dec
fidiv
pop
pop
ret
jmp
cdq
cmc
scas
push
pop
ja
mov
addr16
push
jp
pop
jo
xchg
adc
gs
hlt
ret
neg
or
xor
sahf
mov
xor
and
div
ret
push
xchg
loop
(bad)
jns
dec
push
mov
xchg
repz
fbld
adc
out
fnsave
mov
cli
jle
mov
test
mov
mov
mov
or
push
jbe
daa
out
repnz
xchg
sbb
jo
inc
lods
cmp
push
aaa
add
mov
js
sbb
cs
mov
ins
mov
repnz
sahf
hlt
dec
and
scas
adc
add
or
dec
aad
aad
ror
cs
ds
or
mov
lahf
dec
dec
xor
fsub
mov
push
xor
es
xor
mov
cmp
loopne
or
ds
or
pop
mov
scas
sbb
add
dec
test
sbb
popf
shl
icebp
jne
loope
cmp
les
jmp
faddp
ja
jo
cwde
mov
arpl
dec
sub
shr
sub
sub
jge
ror
inc
push
je
lea
push
out
adc
test
adc
mov
push
cs
dec
push
out
loopne
push
adc
push
sbb
push
xor
inc
loope
add
imul
cdq
out
pop
lods
or
mov
repz
push
es
xchg
inc
xor
repz
out
sub
out
test
xor
mov
xchg
(bad)
in
ins
iret
pop
in
sub
mov
cmp
mov
push
in
and
por
retf
dec
inc
cs
dec
xchg
lea
sti
or
fwait
(bad)
mov
ret
push
sub
cmp
ins
test
pop
add
lahf
pop
fnstsw
int3
in
adc
das
fdiv
ins
ss
dec
in
dec
cmp
test
inc
stos
sbb
cmps
xchg
jmp
dec
test
adc
cmp
vmaxpd
xor
mov
retf
mov
push
mov
or
hlt
loop
push
scas
shl
idiv
mov
int
pop
pushf
mov
push
test
ror
sub
(bad)
nop
mov
dec
and
dec
bound
jl
xchg
scas
mov
icebp
push
leave
(bad)
jp
les
gs
es
xor
ds
dec
xchg
and
fmulp
xor
jmp
stos
sbb
pop
test
js
out
xchg
adc
fs
add
imul
imul
scas
stos
push
and
jne
aas
in
fst
sub
jge
and
cmp
ins
(bad)
mov
xor
mov
loop
das
loopne
(bad)
in
(bad)
xchg
pop
data16
mov
add
mov
pop
out
pop
add
mov
imul
int3
sar
pop
mov
mov
imul
cmc
and
mov
mov
pushf
movs
inc
cli
(bad)
xor
popa
xor
lahf
adc
sbb
cld
call
push
or
dec
xchg
scas
sbb
xor
inc
gs
dec
pop
xchg
pop
(bad)
mov
fdivp
rcl
jb
dec
repnz
in
enter
pop
daa
and
test
push
and
push
pusha
outs
rcr
jmp
out
and
movs
xchg
push
dec
test
dec
mov
ja
jmp
jp
movs
pop
adc
inc
retf
dec
or
imul
scas
jbe
or
mov
shl
pop
js
and
mov
or
cli
movs
cmps
lds
push
mov
imul
call
ror
jo
jbe
sub
mov
or
mov
shl
jecxz
out
cmp
cmps
dec
test
cmp
mov
loop
shr
out
out
adc
(bad)
adc
mov
dec
(bad)
jne
jge
mov
cli
ds
and
pusha
(bad)
adc
pop
mov
xlat
jg
gs
sub
jne
and
leave
xor
xchg
sub
xchg
jmp
int
lahf
fiadd
dec
jbe
pusha
out
fadd
or
cmc
aam
icebp
mov
or
mov
retf
lods
adc
scas
outs
jp
cmps
movs
cmp
outs
adc
adc
mov
adc
ins
push
mov
ret
sbb
sub
xchg
lock
aas
sub
(bad)
mov
pop
mov
push
cmps
dec
sub
inc
adc
or
or
inc
mov
call
xor
aas
xor
int3
rcl
pop
push
dec
fs
mov
inc
inc
or
not
push
and
xor
xor
and
sbb
(bad)
jne
push
dec
test
or
mov
sahf
in
les
stos
cmp
aaa
jbe
stos
xchg
jmp
stos
xlat
imul
xlat
push
call
int3
mov
xchg
adc
test
jmp
cmps
inc
pushf
push
out
xchg
mov
adc
inc
data16
clc
push
repnz
scas
push
ins
add
adc
rsm
es
mov
movs
shr
cmp
pop
sub
lods
jbe
(bad)
je
pop
pop
xor
pop
(bad)
add
retf
cmp
inc
rol
rcr
and
dec
aas
and
mov
movs
(bad)
pop
int3
and
imul
nop
pop
fild
cld
sub
mov
sar
jmp
(bad)
cmc
test
imul
mov
adc
mov
push
or
js
(bad)
js
jbe
call
sti
cmp
mov
mov
out
(bad)
jmp
cmps
retf
pop
pop
addr16
scas
mov
ins
shr
and
mov
test
dec
jmp
adc
jne
ins
ror
mov
addr16
je
jns
(bad)
push
sub
adc
add
hlt
mov
sbb
hlt
rcr
pop
lods
push
ret
xor
aad
aam
jnp
lods
pop
leave
arpl
lea
lods
jnp
imul
lods
push
je
fst
pop
in
aas
adc
jo
or
mov
and
xchg
retf
call
(bad)
jle
fistp
push
aam
fldenv
jp
imul
(bad)
adc
or
push
ja
jne
mov
mov
cmc
mul
and
jecxz
es
call
shl
mov
mov
mov
imul
ins
xlat
xor
(bad)
loopne
push
out
pushf
xor
int
push
and
jl
iret
fwait
popa
rcl
push
and
adc
jo
mov
popa
in
push
and
sub
pop
out
data16
into
adc
and
scas
sub
pop
nop
mov
mov
mov
cmp
cmp
dec
je
fsub
data16
aam
je
retf
jecxz
int
shl
cwde
cmp
pop
leave
cwde
cmp
test
std
add
push
outs
in
imul
xchg
ret
lods
push
into
sahf
jg
fdivr
mov
pcmpgtw
cdq
es
jmp
push
jne
dec
js
ret
ficom
repnz
sbb
lds
inc
out
mov
push
enter
dec
ficom
das
mov
fwait
popw
mov
pop
push
or
rcr
add
adc
(bad)
sub
xchg
(bad)
push
mov
in
(bad)
sbb
add
mov
push
fsub
loop
xchg
push
and
sar
retf
call
xchg
mov
mov
mov
js
dec
outs
jp
pop
push
inc
mov
cmps
mov
pop
stc
loopne
ret
loope
call
fldcw
mov
ins
in
mov
push
sahf
je
daa
inc
inc
inc
aad
daa
xchg
aam
pop
les
add
nop
in
iret
pop
add
xchg
ins
into
xchg
fidiv
push
jne
pusha
or
je
aaa
in
nop
jmp
pop
push
or
(bad)
movs
jmp
ins
mov
xchg
aas
aad
(bad)
aas
iret
cmp
push
fbstp
jecxz
or
cmp
jae
jmp
leave
sti
sbb
test
mov
scas
mov
clc
mov
clc
fldcw
push
aam
adc
fist
imul
mov
push
adc
int
(bad)
aad
(bad)
cmp
mov
adc
lds
inc
cdq
cmp
sbb
pushf
or
(bad)
jp
inc
jmp
scas
loopne
daa
xor
fsubrp
fnsave
lock
daa
mov
fucom
pop
out
inc
ret
jmp
ins
aaa
ror
mov
sti
cdq
icebp
fwait
test
sub
adc
(bad)
outs
adc
xchg
and
mov
cwde
ins
or
jmp
inc
das
mov
aad
ja
sub
push
mov
out
xor
loopne
std
inc
call
inc
xchg
shl
int
inc
das
out
cmps
(bad)
pop
pcmpeqd
std
jmp
scas
jo
in
ins
or
(bad)
mov
mov
iret
cmp
(bad)
(bad)
out
or
sahf
(bad)
hlt
shl
test
adc
test
sti
pop
enter
or
mov
dec
mov
mov
xor
jmp
xchg
imul
sti
shr
add
mov
or
clc
clc
in
ja
rcr
lock
das
loopne
and
data16
inc
sbb
pushf
xlat
out
test
mov
js
sub
sar
ss
test
add
adc
mov
movs
mov
mov
sahf
das
std
pop
dec
sti
cs
push
push
xor
call
call
sub
and
xchg
fild
or
dec
nop
cwde
cmp
cmp
jo
and
cmps
xchg
mov
cmp
xchg
xor
test
cld
mov
sbb
cdq
push
lahf
repz
jmp
das
ret
out
dec
and
jns
push
cmps
push
into
mov
sahf
jmp
jmp
cmp
add
imul
inc
jne
inc
sub
jne
ret
sar
pop
sub
rcr
enter
lods
sbb
in
mov
into
jbe
arpl
jmp
push
push
popa
mov
dec
repnz
(bad)
in
arpl
and
add
pop
loop
retf
jne
test
popf
mov
sub
pop
jb
sbb
pop
popf
sub
into
fst
hlt
or
daa
push
lods
and
out
jmp
cmp
lds
and
and
ret
test
aaa
(bad)
jb
nop
or
mov
pop
icebp
cmp
xchg
call
xchg
pop
pop
ss
mov
jmp
push
dec
test
push
mov
into
adc
aam
mov
int
ficom
jg
in
aad
add
scas
imul
shl
mov
pop
mov
arpl
add
dec
push
adc
popa
xor
sub
aas
inc
jae
jae
and
mov
push
adc
repnz
daa
pop
or
and
xor
lods
ret
mov
sub
sar
and
add
jae
(bad)
rol
pop
jmp
jmp
std
int3
imul
inc
sub
cmp
xchg
outs
jo
mov
(bad)
in
call
dec
in
push
push
mov
mov
loopne
xchg
dec
xchg
in
fwait
jns
popa
cmp
fnstsw
in
push
jb
rol
sbb
enter
enter
ficom
movs
leave
add
stc
jmp
mov
sahf
ffreep
pop
inc
test
aam
jnp
xchg
mov
dec
dec
ss
sar
mov
jbe
mov
and
stos
cmps
mov
mov
iret
cli
shl
int3
(bad)
call
int
mov
dec
iret
or
jbe
or
sti
jb
xor
mov
cdq
fcomp
scas
sbb
or
pushf
test
inc
and
sbb
adc
std
mov
mov
daa
imul
not
cmps
mov
shl
cs
sub
mov
les
add
mov
cmp
push
cmp
pop
les
jno
jns
jbe
jge
cmp
retf
imul
sub
cld
fist
rcr
cmp
fwait
and
ror
sbb
xor
dec
add
(bad)
out
inc
iret
ret
fcomp
xchg
test
aad
jnp
lock
sbb
ret
sbb
jecxz
cwde
adc
adc
cld
xchg
sbb
scas
and
cmc
mov
pop
ret
addr16
jg
push
addr16
add
aam
sbb
jp
call
sahf
jp
test
jmp
and
aas
sub
stc
mov
dec
cmps
mov
mov
xchg
add
adc
xor
xchg
aas
push
mov
out
bound
in
inc
sbb
xchg
test
sbb
jne
xchg
or
das
jmp
je
adc
mov
js
inc
cmp
jle
and
cmps
or
int
push
and
jle
xor
jae
(bad)
mov
add
retf
pop
hlt
fld
rcr
pusha
adc
push
mov
jno
test
out
or
jbe
and
xchg
adc
jo
add
push
and
or
mov
sub
mov
cdq
je
add
ins
sbb
mul
add
inc
pop
movs
mov
xor
imul
jg
enter
mov
arpl
push
adc
hlt
xor
inc
(bad)
jae
dec
repz
ja
mov
ror
xor
int
int3
xchg
enter
in
pop
repnz
js
ins
sbb
es
mov
aaa
or
mov
inc
xchg
jno
leave
cmp
mov
sbb
dec
xor
fprem
adc
cmp
sub
fidiv
push
ficom
push
fwait
repz
cmp
(bad)
popf
push
aad
pop
inc
je
push
sub
ret
(bad)
lods
out
push
data16
clc
pop
loop
addr16
xor
popf
mov
data16
ffreep
and
loop
inc
das
mov
mov
xor
jo
jne
xchg
arpl
not
shl
adc
dec
or
adc
loopne
frstor
ds
jo
in
in
imul
mov
jmp
retf
je
out
pcmpeqd
dec
mov
dec
mov
rcl
pop
dec
mov
fs
xor
xor
fst
jmp
scas
push
jnp
pop
sbb
out
in
mov
add
sti
loopne
mov
jae
sub
sbb
mov
sub
outs
ins
jb
xchg
mov
adc
dec
pop
inc
pop
(bad)
sbb
repnz
push
adc
popf
xchg
sub
stos
and
xchg
inc
mov
rol
cdq
pop
loope
dec
adc
ficomp
in
retf
aam
(bad)
loop
mov
cdq
jae
mov
add
lock
pop
push
jmp
jl
dec
int
call
mov
mov
aam
shl
or
dec
jb
fwait
push
xchg
cmps
aad
cmps
cmps
sub
inc
aam
and
std
push
pop
out
jns
adc
xchg
jl
push
inc
xchg
pushf
das
dec
popf
xor
iret
mov
retf
push
cmp
ret
mov
add
idiv
xchg
cmps
sbb
mov
(bad)
jae
fsub
leave
mov
and
inc
fcmovb
scas
or
mov
gs
or
inc
inc
sbb
pop
mov
cdq
stos
stos
je
xchg
fldcw
fst
sub
inc
stos
xchg
mov
inc
xor
hlt
(bad)
aad
das
jbe
in
ja
add
sbb
arpl
out
jnp
out
mov
inc
jecxz
fs
dec
stos
std
es
mov
dec
dec
adc
cmp
test
jb
cli
pop
enter
outs
rcr
aaa
nop
iret
retf
call
in
mov
xchg
mov
adc
sbb
iret
test
mov
or
clc
cmc
push
or
aaa
mov
(bad)
(bad)
mov
jbe
xchg
addr16
jmp
test
getsec
mov
xor
push
dec
pmulhuw
cld
movs
jecxz
inc
ins
mov
cdq
ret
add
ret
and
sub
rol
test
jge
adc
cmp
pop
into
js
fucomi
lock
ret
sahf
push
iret
mov
push
(bad)
push
mov
cmp
sub
mov
and
jno
scas
jo
mov
and
dec
rol
jle
xchg
pop
cld
sahf
cmp
dec
not
fwait
lock
push
sbb
leave
test
xchg
lods
pop
push
bound
jmp
sbb
bound
shl
dec
idiv
add
mov
mov
and
stc
jle
add
cmp
jae
call
popa
lock
out
push
xor
xchg
call
fild
jmp
arpl
das
hlt
jb
xchg
dec
sub
sub
cld
fld
jb
jb
ror
sub
sbb
imul
mov
xor
xchg
or
xor
pop
ss
xchg
push
inc
sti
pushf
bound
aaa
adc
shr
gs
pushf
lods
sbb
dec
fwait
or
add
popa
xor
loop
ss
adc
mov
(bad)
mov
pop
xchg
mov
xchg
movs
adc
inc
sub
in
loop
jl
inc
jg
cmp
adc
push
push
jns
(bad)
push
and
pop
mov
cmp
jle
mov
sub
inc
dec
rcl
pop
jbe
pop
pop
xchg
inc
push
xchg
add
sbb
mov
push
xchg
bound
cmc
and
les
popa
fwait
or
pop
int
sub
je
fidivr
push
cmp
fstp
mov
sbb
mov
push
cmps
call
mov
dec
addr16
pop
push
push
in
and
xchg
in
pop
mov
adc
or
das
xchg
or
mov
leave
dec
cmp
sub
adc
sti
xchg
loopne
cmp
cmps
sbb
mov
push
jo
(bad)
movs
mov
dec
fdivr
mov
sti
shl
pop
push
mov
jmp
cs
data16
mov
pop
dec
gs
in
sbb
out
xor
mov
imul
sub
and
add
cmp
add
inc
mov
xchg
add
cmps
jmp
rol
rol
test
clc
jno
call
test
push
mov
add
retf
mov
mov
out
out
ins
sbb
xor
dec
fiadd
clc
es
imul
shr
mov
ins
shl
ins
jmp
enter
mov
jge
mov
cli
fadd
push
cmp
fidiv
call
mov
in
xchg
push
iret
dec
inc
xor
mov
dec
adc
mov
sub
sbb
push
arpl
jne
mov
dec
inc
xor
call
xchg
inc
lds
adc
in
into
dec
rcr
mov
xor
data16
retf
call
mov
inc
sub
jp
in
stc
stos
pop
xchg
fcom
or
add
out
pushf
cdq
test
dec
and
pop
repnz
fwait
lahf
shl
hlt
cmc
xchg
cmp
xchg
das
shl
cmp
pop
rcl
fld
out
ins
and
jmp
lds
dec
push
xor
scas
shl
xchg
or
fwait
(bad)
hlt
cmp
xor
push
sti
push
xlat
aam
dec
dec
mov
mov
inc
or
arpl
adc
sbb
push
aad
push
jb
aas
push
push
aaa
sahf
jle
call
movs
jbe
mov
push
xchg
lahf
ins
inc
push
stos
xchg
xchg
les
push
dec
push
and
sub
add
jge
jae
add
add
mov
sbb
loopne
jae
push
ret
adc
push
dec
mov
mov
xchg
in
push
ret
ret
aaa
adc
hlt
adc
pop
and
xlat
and
push
aam
xor
pop
pop
cld
dec
pop
test
lock
in
dec
in
sub
push
xchg
xor
fadd
scas
lea
les
sti
mov
xchg
std
out
inc
jg
hlt
ficom
repnz
pop
and
or
out
mov
out
xor
loope
cmc
sbb
leave
cmp
jns
test
ss
push
xor
cmps
pop
mov
fwait
lds
jae
mov
fcomi
(bad)
ret
push
push
lahf
loope
or
bound
movs
cs
mov
or
sub
daa
repz
xchg
leave
and
shl
add
ret
fs
sahf
cmp
out
sbb
xor
mov
stc
cmp
(bad)
aas
and
sbb
mov
push
xor
mov
sub
inc
inc
cwde
pushf
aad
sub
ins
jl
stos
pop
push
add
push
out
in
push
dec
(bad)
fidiv
jns
and
cmps
jl
push
cmps
xchg
sbb
and
mov
xor
or
out
and
mov
push
retf
mov
gs
les
je
or
bound
pop
sub
fdiv
call
mov
sub
inc
jecxz
jp
mov
aas
mov
fdiv
gs
ins
lea
adc
pop
pushf
push
cmc
rol
add
cmp
sti
aas
pushf
or
sti
pop
sub
pop
cmp
ds
mov
push
or
or
mov
dec
(bad)
data16
movs
std
movs
jge
mov
add
mov
aam
and
lds
add
or
pop
into
mov
jnp
mov
int
shl
test
retf
xchg
add
mov
xchg
ja
fwait
push
jnp
xor
stos
scas
stc
(bad)
mov
scas
xchg
and
adc
arpl
iret
sub
adc
cdq
and
xchg
outs
lds
or
inc
or
pop
jmp
add
call
mov
daa
stc
ds
mov
push
sar
aaa
push
sbb
ins
aas
mov
inc
jb
lock
nop
call
data16
js
push
aam
cmp
cs
xor
mov
jge
xchg
scas
pop
or
xchg
cmps
adc
js
sub
jno
fst
bound
aad
adc
in
cmp
push
push
lahf
mov
jno
ret
jecxz
sbb
xor
xor
lea
ret
cmc
xchg
sbb
fnstcw
(bad)
out
es
cdq
test
into
cmps
dec
std
add
adc
mov
pop
sti
out
mov
lods
mov
aad
push
mov
pop
lods
push
or
sti
pcmpeqd
imul
in
fstp
xchg
xchg
mov
cmps
(bad)
call
in
inc
sbb
pop
push
sub
dec
test
pop
sbb
call
dec
sbb
in
xor
jecxz
add
xor
cli
js
inc
(bad)
push
(bad)
mov
push
out
xlat
sbb
or
sub
jne
out
mov
dec
sub
clc
scas
popf
push
xchg
call
aas
jns
es
cmc
clc
fnsave
xlat
(bad)
mov
imul
dec
jb
inc
int
xchg
test
scas
cmp
cmps
mov
pop
out
scas
aad
mov
in
adc
jae
jmp
xchg
sbb
es
dec
mov
jg
add
ins
jb
sbb
iret
in
pusha
lds
mov
ins
cmps
std
xchg
push
cmps
xor
push
scas
(bad)
cmp
xor
ficom
cmps
sbb
sub
push
outs
xchg
xor
mov
mov
mov
pop
jg
shl
mov
and
sub
outs
retf
mov
or
push
pushf
sbb
pop
lods
or
push
mov
imul
call
sbb
jno
inc
imul
ret
and
cmc
popf
mov
(bad)
dec
aaa
mov
fdiv
fmul
lods
add
mov
out
loope
sbb
scas
dec
mov
dec
cdq
adc
inc
outs
sub
call
and
loop
pop
loopne
cmp
scas
add
mov
nop
std
pop
leave
sbb
lea
call
jp
jecxz
sbb
push
and
bswap
or
div
in
ins
inc
out
jmp
jmp
(bad)
les
pushf
std
loopne
mov
fisttp
adc
or
aas
ret
adc
or
push
scas
xor
gs
push
jge
add
pop
add
lea
hlt
leave
dec
test
call
add
call
in
div
mov
cs
jl
adc
clc
sahf
inc
push
mov
jle
loop
pop
jp
sti
scas
fldcw
(bad)
idiv
or
cmps
and
ret
ret
mov
jne
mov
mov
cmps
out
imul
cmp
cwde
fiadd
xor
mov
scas
loopne
or
jp
mov
fisubr
lods
fiadd
ror
mov
test
in
xor
lods
and
mov
daa
add
mov
lahf
pop
stos
mov
sub
adc
adc
inc
ins
nop
sbb
out
dec
xchg
sub
xchg
cmc
mov
ins
pop
adc
std
mov
add
add
fcmovne
mov
into
pop
sbb
out
dec
sbb
pusha
jmp
dec
sub
cwde
mov
dec
xchg
push
dec
xlat
ret
push
es
idiv
(bad)
pop
bound
xchg
(bad)
sar
jo
dec
add
cmp
test
mov
add
cmps
aaa
inc
and
jmp
inc
iret
clc
or
(bad)
fs
cmp
aad
outs
sbb
jg
jne
aad
sbb
jle
cmc
ins
pop
push
pushf
ins
(bad)
ret
in
ficom
movs
imul
pop
and
pusha
sbb
inc
mov
xchg
push
(bad)
leave
dec
sbb
in
xchg
inc
mov
pop
cmps
push
outs
outs
push
sbb
inc
xchg
pop
call
retf
xchg
mov
iret
movs
in
or
jp
loop
adc
xchg
pop
movs
or
retf
or
cld
inc
mov
(bad)
jecxz
cmp
and
ins
fnstsw
adc
dec
jbe
cmp
fmul
js
or
inc
inc
mov
pop
push
fisubr
xorps
sbb
aas
aad
inc
xor
(bad)
jle
push
inc
ret
lahf
xchg
jp
and
mov
and
jmp
add
xor
je
xchg
stos
into
test
aas
adc
mov
mov
dec
mov
or
out
xchg
and
mov
jle
mov
in
lea
inc
mov
div
ror
push
int
test
fs
pop
and
int3
mov
pop
pop
js
outs
(bad)
or
add
rol
les
mov
fiadd
cmp
js
and
mov
dec
fcomp
movs
or
aad
mov
mov
ja
scas
popa
lds
mov
imul
adc
arpl
popf
pop
pop
sub
xor
fidivr
push
xor
mov
fadd
sti
in
cli
inc
popa
ss
stos
dec
test
adc
fidivr
ins
rcr
leave
mov
adc
sub
fild
dec
adc
push
in
pop
stos
and
cdq
retf
and
pop
sub
imul
or
inc
enter
fs
mov
mov
test
ret
jl
and
xlat
mov
add
mov
loop
push
and
fwait
aas
cmp
xchg
test
and
jg
and
cli
pop
test
fs
retf
mov
or
mov
or
adc
mov
clc
jbe
xchg
add
mov
arpl
popf
sub
rcl
popf
bound
fldcw
sbb
add
sbb
jbe
in
popa
fild
fwait
mov
mov
fwait
xor
inc
fstp
gs
ret
(bad)
fadd
cmp
xchg
fidiv
shl
pop
mov
pushw
jne
ja
or
ror
xchg
xor
lea
cwde
imul
dec
jg
push
sahf
jge
mov
mov
cmp
jns
test
aaa
ins
popa
jge
mov
cmp
fsub
ror
xor
push
xchg
and
dec
inc
push
in
repnz
pop
ja
dec
iret
push
imul
int3
xchg
cmp
or
mov
mov
daa
imul
sub
push
stc
dec
xor
mov
mov
in
adc
dec
(bad)
xchg
sbb
call
scas
and
xchg
test
mov
mul
dec
ret
pop
jns
cmp
test
dec
jge
lods
mov
in
inc
mov
xchg
jnp
sub
add
inc
fimul
sub
outs
xchg
stos
out
dec
(bad)
and
fimul
jg
push
mov
pop
dec
mov
jg
in
sub
xor
fnstcw
loop
test
ins
jae
mov
pop
sub
stos
test
mov
aad
and
fwait
add
ins
xchg
cmp
out
std
cmp
neg
aam
pop
xlat
xor
mov
inc
mov
jge
das
adc
popa
inc
enter
inc
je
mov
mov
jbe
jmp
js
jo
mov
cwde
sub
jbe
call
and
faddp
outs
inc
push
outs
sbb
fild
pop
or
pop
or
jle
retf
out
ja
or
daa
jbe
outs
jmp
sub
jae
and
xor
movs
and
ret
out
fisttp
and
out
jge
mov
sahf
push
pop
xor
shl
jne
jb
cld
leave
pop
mov
mov
adc
jnp
or
les
and
push
jne
aad
push
xchg
in
sahf
aaa
mov
mov
adc
test
inc
sbb
test
push
inc
cmp
xchg
dec
ins
fcom
xor
jg
gs
or
adc
dec
fcmovbe
retf
sbb
div
mov
fucom
repz
dec
arpl
ja
push
lods
mov
and
cli
add
dec
sub
test
es
mov
push
cmps
mov
rol
inc
les
xchg
mov
xor
sbb
xor
sldt
outs
xlat
std
stc
cmp
mov
outs
fmul
add
mov
xor
mov
retf
xor
je
repnz
pop
ret
pop
(bad)
cld
pusha
xchg
and
mov
out
sub
dec
mov
sub
stos
lods
pop
mov
ins
popf
enter
mov
sbb
xchg
jbe
jns
(bad)
loope
push
loope
add
jl
not
jno
in
ret
push
mov
jge
pop
jmp
mov
not
out
add
fs
jne
jns
add
loopne
push
jne
test
aaa
xchg
dec
pop
jb
ror
or
cmps
(bad)
imul
rcl
or
mov
xchg
pop
xchg
and
mov
cmp
lods
push
push
inc
mov
and
or
inc
pop
mov
test
daa
test
sub
jne
pop
add
std
xlat
fstp
dec
in
clc
cmc
in
jmp
push
push
imul
call
leave
and
(bad)
mov
fcomp
mov
mov
push
in
fwait
sar
sub
jecxz
jmp
cmc
jo
inc
out
add
addr16
pop
popf
or
sub
loopne
and
jns
aad
mov
cmp
sub
loope
popf
push
mov
sub
fdivr
aam
out
movs
hlt
js
sub
xor
int3
jge
dec
call
jns
test
not
adc
ins
adc
icebp
idiv
push
inc
xlat
mov
cs
push
mov
cmp
adc
aaa
sub
out
es
and
pop
arpl
pop
neg
shr
int3
jg
sar
(bad)
movs
mov
in
cmps
mov
sbb
adc
popf
mov
fwait
mov
xchg
stos
outs
dec
rol
dec
or
test
cli
cmp
pop
xchg
movs
inc
rcr
daa
and
sbb
out
(bad)
std
inc
aam
sub
(bad)
sub
loop
adc
cmp
pop
add
add
bound
cmp
pop
cdq
jp
xor
in
sti
xchg
out
fidiv
sub
add
xchg
lds
aam
push
xchg
movs
pop
cmc
das
mov
dec
fisub
or
fcom
(bad)
imul
dec
jns
pop
outs
daa
ins
shr
jo
sbb
mov
aam
jecxz
push
(bad)
fsub
cmp
adc
in
or
mov
fisubr
pop
cs
jge
mov
jb
mov
mov
gs
ins
cmps
call
xchg
into
leave
icebp
out
pop
push
pop
xchg
lock
out
mov
icebp
push
push
cwde
test
or
movs
xchg
add
cld
push
mov
push
enter
ret
shr
jns
dec
mov
adc
mov
ja
repnz
inc
push
fstp
imul
(bad)
pushf
lods
test
cmp
jp
push
cdq
push
xor
pop
inc
dec
test
stc
scas
(bad)
sti
and
sub
ja
adc
ins
and
repnz
ret
lds
ret
xchg
xlat
adc
pop
fistp
push
(bad)
cmps
cwde
mov
jnp
push
out
cmp
pushf
sbb
sub
sub
ins
aad
xchg
adc
and
sbb
fyl2xp1
scas
sub
jecxz
daa
cdq
pop
fiadd
adc
shl
sub
push
fmul
dec
dec
xchg
xor
mov
xor
loop
dec
into
fs
sahf
pop
or
lds
(bad)
pop
call
mov
sbb
popa
mov
add
xchg
mov
inc
or
shr
push
and
add
dec
in
ins
stos
and
aam
mov
fmulp
xor
sbb
add
sub
sub
lea
(bad)
and
mov
jno
adc
std
jae
mov
ret
cmp
(bad)
jnp
out
hlt
lock
je
mov
icebp
push
inc
push
add
sub
fisttp
dec
mov
mov
mov
rol
pop
inc
mov
push
jb
adc
(bad)
call
jnp
inc
push
loop
xor
jle
push
aas
sub
out
dec
sbb
xor
leave
aas
sbb
xor
adc
push
mov
dec
mov
ror
add
inc
pusha
jp
fild
repz
pop
xor
arpl
fdivr
jmp
pushf
lahf
outs
pop
(bad)
fst
in
push
in
repnz
add
movs
es
fwait
or
fcmovu
or
add
mov
loopne
outs
pusha
dec
adc
cmpxchg
add
add
popa
fwait
sti
add
and
int
and
std
fild
daa
dec
mov
ret
mov
mov
stos
sub
jbe
ds
int3
ins
push
je
lahf
or
push
mov
ds
shr
addr16
sti
pop
cmp
push
and
or
mov
mov
scas
das
pop
outs
mov
adc
or
ror
mov
and
xor
push
cmps
out
and
or
popf
mov
fcomp
into
es
repnz
out
loope
sub
push
pop
pop
fsubrp
repz
das
pop
mov
(bad)
lods
mov
mov
jecxz
retf
dec
cmp
repz
lods
in
scas
icebp
fwait
call
outs
lds
das
sub
push
xchg
mov
fisttp
(bad)
call
mov
cdq
dec
pop
out
imul
clc
sahf
add
xor
fldenv
jae
push
xor
test
pop
fadd
pop
daa
jnp
bound
lods
adc
inc
call
test
loope
aam
and
pop
fld
(bad)
movs
nop
lock
pop
(bad)
cwde
test
dec
loop
xor
cdq
cmp
mov
scas
push
mov
ja
test
es
jge
adc
outs
sbb
in
aam
inc
lds
jmp
test
add
fdivr
outs
xor
push
and
fsubr
inc
and
dec
inc
popf
xor
mov
lahf
fdiv
in
repz
add
inc
int3
fist
(bad)
shl
pop
xlat
test
jg
sub
mov
xchg
popa
mov
xchg
xor
push
push
pop
int3
retf
test
enter
les
jl
fwait
and
fdiv
loope
jne
pop
rcl
add
jae
and
mov
(bad)
cli
jns
leave
test
add
push
xchg
push
dec
cdq
jge
aad
loope
sub
stos
clc
dec
int3
push
jl
cmp
sbb
cmp
pop
mov
cmps
pop
sbb
shl
add
hlt
cmp
mov
jns
stos
push
mov
hlt
int
inc
jbe
push
stos
cmps
scas
outs
cli
clc
fisttp
retf
mov
push
stc
cmps
scas
xlat
(bad)
push
or
das
mov
ret
cdq
dec
out
jmp
das
aas
ins
pop
push
aam
mov
lea
loope
aas
push
or
mov
xor
pop
cmp
dec
mov
add
mov
mov
xor
loop
outs
sti
out
das
push
push
cs
jno
aam
test
out
mov
sbb
xlat
imul
int
(bad)
pop
shl
faddp
(bad)
mov
test
loop
adc
sub
repnz
or
(bad)
pop
jle
fild
push
sub
adc
in
aad
sbb
bound
jne
jecxz
push
push
test
mov
jmp
add
cmp
in
mov
ds
mov
add
pop
test
pusha
sub
push
push
in
addr16
cmc
outs
push
addr16
sbb
cli
loope
and
sbb
mov
clc
mov
enter
fdivr
idiv
stos
push
pop
xchg
and
xchg
out
shl
and
pop
sub
loope
xacquire
dec
and
mov
test
pop
inc
and
cmc
pop
push
mov
sub
sbb
(bad)
mov
loopne
jne
mov
retf
mov
cmp
lea
xor
sub
pop
ror
sub
dec
cmp
dec
jmp
add
xchg
sub
cmps
loope
cmps
sub
inc
sahf
int
loopne
mov
(bad)
outs
pop
test
push
test
iret
and
movs
add
aad
xor
pop
(bad)
into
jnp
jg
mov
xor
ficomp
cwde
aad
add
int3
into
ins
enter
cmc
out
ss
fcmovne
mov
and
sub
mov
sub
inc
adc
sbb
mov
pop
xor
add
in
stos
fisttp
in
leave
mov
pusha
mov
lahf
mov
mov
out
sar
sbb
jecxz
adc
mov
push
shr
xchg
xchg
popf
(bad)
lock
mov
mov
vpaddsb
das
lds
mov
rol
sbb
push
retf
es
sub
xor
call
ins
inc
add
push
jg
stos
inc
xchg
lods
fistp
jmp
(bad)
jmp
xchg
movs
fs
sbb
add
xchg
sub
popa
call
push
call
xlat
neg
in
sti
or
pop
out
jb
ss
shr
pop
add
in
cmp
adc
lods
dec
sbb
xchg
add
mov
aam
fwait
adc
dec
xchg
imul
or
or
cmp
outs
shr
out
adc
jecxz
iret
lods
or
rcr
push
lock
and
(bad)
movs
call
inc
add
ret
jg
nop
stc
pop
mov
mov
push
aaa
jle
mul
inc
inc
aas
inc
mov
mov
and
dec
not
scas
int
sti
(bad)
xchg
fbld
ror
aam
inc
mov
add
jle
pop
jl
xchg
mov
mov
in
fnstsw
jmp
and
dec
pop
rcl
pop
retf
in
adc
xchg
jge
dec
rcl
mov
loop
and
push
jno
out
inc
mov
mov
ss
outs
mov
neg
inc
repnz
clc
(bad)
mov
daa
mov
inc
xchg
lock
lea
hlt
add
pop
shl
xor
test
pop
inc
jae
clc
sbb
sbb
jmp
mov
cmp
scas
mov
xchg
xchg
mov
data16
inc
xchg
and
mul
push
call
mov
pop
fdivr
pop
or
fld
stc
jge
and
(bad)
mov
pop
adc
scas
ds
(bad)
mov
outs
jmp
int3
hlt
xchg
jb
cwde
push
test
xor
adc
mov
xchg
int3
mov
or
xchg
sbb
sbb
sbb
xchg
dec
rol
es
retf
(bad)
out
in
push
movs
ins
push
sub
bnd
and
mov
arpl
or
lock
repnz
cmc
clc
mov
add
push
out
aas
push
out
push
mov
rcr
(bad)
sub
fcom
repnz
push
outs
mov
sbb
std
sbb
push
mov
pop
jne
and
mov
cs
mov
stos
jmp
or
jne
rol
out
hlt
daa
fnsave
cwde
sub
push
ror
inc
xchg
mov
out
fld
mov
jb
fnstcw
mov
sub
inc
pop
or
hlt
fiadd
ret
retf
in
cmp
bound
in
(bad)
out
mov
pusha
xchg
xor
test
aas
shl
xchg
imul
mov
dec
or
lds
and
aad
std
in
test
aaa
(bad)
arpl
jo
jo
push
push
lahf
dec
das
lea
shr
in
mov
mov
push
cli
sti
mov
inc
mov
pop
popf
xchg
jmp
inc
xlat
scas
or
pop
retf
rol
dec
(bad)
(bad)
in
aam
dec
retf
test
mov
inc
jle
push
pop
adc
call
mov
fs
ret
pop
(bad)
ja
rol
jae
ror
jp
push
or
add
pop
inc
imul
aam
pop
dec
sbb
cmps
stc
xchg
mov
mov
lods
dec
cmp
adc
movs
vpaddb
fisttp
sub
mov
cdq
inc
js
lods
bound
rcl
cld
test
mov
bound
sbb
or
or
lods
(bad)
loopne
jecxz
test
jno
ds
loope
inc
lods
mov
out
daa
fwait
mov
xor
cdq
arpl
jb
jp
xchg
daa
inc
div
ss
cmp
popa
ss
fs
les
add
rcr
mov
push
jae
call
shr
test
ds
pushf
push
sub
add
push
(bad)
lea
aaa
or
ins
(bad)
pop
movs
imul
cmps
test
int
add
inc
mov
sbb
cld
mov
jp
hlt
dec
dec
inc
mov
sub
mov
push
das
sahf
jb
fsub
jl
and
mov
jnp
and
adc
cmps
scas
or
cmp
sbb
sub
cmp
adc
lods
inc
out
pusha
stos
sbb
sbb
pop
mov
mov
dec
adc
test
idiv
in
or
clc
push
xor
inc
aam
fs
std
push
setns
vcmppd
cmc
sub
ds
push
xchg
and
out
pop
dec
pop
lods
mov
es
mov
retf
adc
cli
aas
stos
aas
cld
cdq
sub
aam
pop
inc
ffreep
push
mov
das
cmp
icebp
and
pop
cld
pop
(bad)
and
cs
jg
es
aaa
scas
(bad)
retf
inc
std
mov
mov
sub
lahf
lock
xor
mov
or
or
aad
loop
jle
jae
xlat
dec
or
push
cld
inc
mov
daa
xor
cmp
imul
mov
push
sbb
jge
movs
jecxz
pop
jp
enter
mov
cld
mov
mul
jo
cmp
or
test
fld
in
xchg
or
mov
pushf
repnz
push
mov
mov
leave
popf
scas
jae
push
into
pop
xor
adc
mov
jmp
rcl
(bad)
or
mov
sub
(bad)
aam
xchg
mov
arpl
pop
add
push
mov
popa
push
nop
or
(bad)
sub
imul
in
pop
iret
and
and
sbb
or
(bad)
mov
out
test
js
pop
or
mov
inc
xchg
jae
rol
(bad)
cwde
xchg
push
sahf
int
push
sub
jne
scas
or
arpl
cmp
outs
outs
xchg
jbe
inc
popf
pop
imul
push
add
jae
and
push
mov
mov
sbb
call
cmp
jg
sbb
test
adc
pop
jmp
add
sbb
jl
sub
push
push
pop
dec
mov
mov
out
mov
call
mul
adc
mov
sbb
aaa
dec
rcl
mov
stos
scas
and
jl
popa
outs
xchg
sbb
cs
or
lods
jae
icebp
movs
jp
pop
inc
lock
push
or
xor
(bad)
daa
pop
lock
pushf
xchg
hlt
mov
ret
(bad)
mov
ror
movs
lods
jae
jp
adc
adc
mov
mov
leave
xchg
sub
(bad)
retf
rcl
lods
inc
jp
inc
mov
jmp
cs
xchg
ret
sbb
add
or
dec
aaa
and
cmp
sbb
push
cmp
out
popa
xchg
cs
dec
call
sub
or
js
les
push
das
repz
pop
popa
out
inc
repz
mov
leave
std
ja
push
mov
sub
jo
mov
call
cmps
inc
popa
mov
shl
test
jg
test
shld
jmp
cmp
mov
cli
es
enter
and
icebp
pop
imul
out
enter
adc
dec
gs
iret
sub
adc
ja
cmp
in
stc
outs
cmc
cmp
pop
aad
sub
xlat
mov
or
ins
in
and
inc
jg
adc
hlt
xor
xchg
aam
ins
sbb
ja
js
pop
cmp
xchg
jl
mov
dec
jmp
dec
jmp
dec
mov
xor
(bad)
ds
popa
ret
and
jnp
inc
aam
loope
cdq
push
rcl
addr16
pop
cmp
out
jo
pop
fisubr
in
sbb
adc
mov
mov
push
cmp
or
stos
cmp
call
jecxz
xchg
mov
and
add
dec
mov
shr
ret
jecxz
icebp
adc
fwait
cmp
ins
sub
test
std
clc
mov
jbe
add
loope
test
sti
xchg
mov
xchg
jmp
push
add
mov
in
mov
mov
stos
int
cmp
ins
mov
pop
jmp
cld
fisttp
js
jmp
pop
cmp
es
into
cmps
pop
shl
jmp
out
inc
fcmovne
inc
xchg
sti
inc
or
cld
pushf
ror
stos
mov
mov
sbb
xchg
movs
push
xor
push
call
mov
mov
adc
mov
xor
pop
mov
jae
and
je
mov
sub
inc
fmul
shl
cwde
sti
pop
fwait
mov
in
ds
pop
fsubr
jo
xchg
xchg
cdq
mov
mov
dec
mov
mov
ror
popf
out
lahf
cmp
sub
gs
arpl
lea
out
pop
icebp
hlt
mov
dec
adc
mov
fnstsw
jle
movs
mov
add
add
arpl
test
loope
mov
fcom
lea
adc
jle
adc
(bad)
sbb
and
arpl
popa
or
pop
stos
push
sub
add
xor
shl
pop
xchg
inc
iret
fwait
mov
je
inc
jg
pusha
inc
fs
ins
ror
xor
xor
cdq
mul
(bad)
mov
idiv
inc
push
cmp
mov
call
sahf
fwait
cmc
pushf
mov
stos
(bad)
out
jge
add
adc
pop
nop
stos
mov
xchg
pop
adc
dec
mov
not
mov
adc
test
mov
mov
in
fdiv
nop
mov
adc
xor
enter
push
pop
test
shl
aaa
out
jmp
shr
(bad)
stos
data16
push
rdtsc
repz
aaa
loope
or
or
or
mov
psraw
sar
adc
inc
nop
xor
shl
pop
sbb
push
or
cmps
jp
inc
mov
nop/reserved
xchg
aam
xor
push
sub
pop
js
or
dec
mov
mov
add
xchg
push
(bad)
fstp
xor
(bad)
test
add
xor
cmp
scas
sbb
std
or
imul
inc
push
push
or
les
or
iret
(bad)
hlt
xchg
xchg
in
inc
enter
lods
mov
jnp
addr16
mov
retf
cmp
shl
int3
pop
adc
outs
fisub
jp
inc
jle
push
mov
test
aad
sbb
(bad)
fiadd
jne
mov
es
xchg
push
shr
add
scas
cmp
pusha
jp
push
add
inc
fst
shl
cwde
cmp
xchg
mov
or
imul
popf
sub
out
and
rol
inc
pop
ins
retf
and
sub
arpl
fidivr
pusha
push
or
repz
jecxz
mov
scas
sahf
add
mov
sbb
dec
lods
adc
add
inc
lock
pop
pop
and
or
fidivr
sbb
or
adc
mov
add
js
mov
out
ja
pop
cmp
push
dec
xor
sbb
rcl
je
call
fadd
gs
lds
(bad)
jge
sti
gs
cmc
sbb
dec
and
(bad)
hlt
mov
outs
sbb
xor
cs
call
and
push
je
mov
std
cmp
fbld
lods
and
add
rcr
or
fistp
mov
push
sub
push
inc
js
lahf
inc
jp
call
push
rcl
pop
loop
xor
call
loop
inc
or
mov
outs
xchg
cmp
es
repz
mov
push
lahf
cmp
mov
adc
repnz
xchg
or
(bad)
dec
(bad)
aam
outs
cmp
push
popa
int3
out
sub
fldenv
jne
dec
mov
fs
pushf
or
in
sahf
jl
xor
mov
icebp
call
mov
add
jl
xchg
cmp
inc
jmp
mov
or
add
ret
xchg
addr16
jbe
je
adc
enter
adc
and
cmp
sub
dec
and
rcl
mov
adc
inc
mov
hlt
xchg
cmp
mov
fst
std
push
dec
cld
push
popf
push
mov
cmp
mov
push
gs
sub
rcr
push
mov
clc
xor
imul
inc
xchg
xor
mov
cli
jmp
inc
cli
lds
cli
sbb
jecxz
mov
scas
cmps
mov
add
cmp
xchg
fs
ss
out
adc
or
aas
inc
and
jb
mov
ret
xor
cmps
pop
sbb
ret
xchg
xchg
jp
jecxz
mov
jne
sub
mov
xchg
sub
arpl
rcl
xor
sbb
push
aas
aad
mov
ficom
cmp
jl
jns
mov
and
fdiv
rcr
pop
xor
(bad)
mov
cmps
jle
(bad)
nop
jns
jmp
xchg
or
fiadd
mov
shl
pop
pushf
xor
adc
test
mov
inc
lds
test
gs
imul
xor
loope
jge
hlt
dec
pop
ja
mov
adc
data16
pop
ret
push
repnz
mov
cdq
shl
push
imul
cmp
and
ret
daa
xlat
dec
retf
pop
xchg
jnp
nop
pop
js
cdq
loopne
cdq
xor
mov
xchg
push
xchg
cmps
popa
or
(bad)
cmp
mov
and
aaa
cwde
dec
lock
cld
stos
adc
sub
and
sub
inc
pop
sahf
fsub
add
repz
add
push
comiss
daa
sub
xor
sub
push
fidivr
push
mov
and
pusha
into
or
push
test
test
and
inc
mov
call
inc
mov
test
jb
push
push
rol
add
jle
cmps
pusha
adc
mov
xchg
movs
pop
ret
fst
test
xchg
push
loop
jbe
rep
inc
cli
mov
int3
or
in
ins
push
adc
sub
js
pop
cmp
or
call
mov
(bad)
pop
pop
jmp
retf
sbb
cmp
ins
ins
mov
inc
inc
std
das
(bad)
leave
or
sbb
or
push
adc
std
call
into
es
jo
push
xchg
inc
ins
imul
jmp
jle
in
pop
mul
bound
sub
dec
sbb
add
mov
cdq
(bad)
xlat
lahf
icebp
enter
jl
jg
rcr
add
lahf
std
adc
mov
ret
xchg
mov
add
movs
fadd
mov
sub
lods
inc
adc
dec
cmp
scas
(bad)
fidivr
in
xchg
mov
(bad)
cmp
(bad)
ins
aaa
or
jmp
hlt
rol
aaa
inc
jnp
push
jmp
fimul
cs
or
sqrtps
sub
mov
mov
dec
mov
gs
loop
stc
fidivr
js
test
xlat
in
aas
cld
adc
fnstenv
bnd
out
cmps
cwde
nop
mul
mov
jbe
jge
test
pusha
ficom
jbe
cmp
push
imul
cmps
push
(bad)
(bad)
sbb
sub
loopne
sub
jecxz
mov
xor
lods
into
in
popf
sbb
push
cdq
jl
(bad)
into
jns
pop
mov
ins
call
mov
fist
(bad)
test
and
sti
jmp
ror
or
cdq
pop
inc
sub
mov
adc
cli
js
add
and
jo
hlt
or
ins
adc
push
add
push
push
lods
xchg
sbb
jae
sub
out
or
sar
inc
mov
retf
out
fisttp
pop
sub
dec
sahf
iret
dec
daa
push
and
(bad)
fadd
outs
xor
mov
out
add
mov
mov
jns
jmp
sub
in
jae
in
jg
mov
fidivr
inc
out
sbb
xor
in
mov
or
mov
add
add
lods
xchg
xchg
test
nop
sbb
add
cld
ds
sbb
adc
imul
js
fst
mov
inc
jmp
mov
mov
and
xchg
mov
(bad)
cmc
pop
xchg
loop
sbb
jecxz
inc
adc
mov
or
inc
sub
sar
mov
push
mov
xor
dec
mov
mov
pop
addr16
pop
inc
cmp
pop
arpl
jmp
xchg
ds
cmp
cmp
ja
xor
lods
test
call
add
ss
sti
jbe
mov
mov
inc
and
pop
int3
out
pop
sbb
sub
enter
sti
cmc
and
daa
movs
(bad)
push
sbb
pop
or
mov
les
fsubr
jnp
fdivrp
xor
push
add
inc
jl
push
mov
xor
jno
mov
xor
and
and
jmp
xlat
cmp
retf
cs
adc
retf
in
(bad)
or
mul
test
ins
fimul
mov
dec
sbb
(bad)
mov
dec
in
mov
push
gs
pop
loope
add
fcmovu
loope
sub
fidiv
or
rcr
fwait
push
aam
mov
inc
push
or
aam
xor
pop
addr16
cmp
push
and
imul
xor
(bad)
dec
mov
daa
and
cmp
imul
mov
stc
cmp
jp
idiv
sbb
lock
rcr
xchg
push
jl
or
mov
adc
out
dec
or
hlt
dec
(bad)
iret
aad
mov
mov
xor
jne
jno
in
repnz
mul
lods
inc
aad
leave
repnz
sbb
mov
push
sbb
xchg
pop
mov
loopne
cmps
mov
out
dec
or
mov
sbb
dec
cmp
call
stos
push
(bad)
repz
mov
or
loope
ret
and
jle
jmp
jge
(bad)
cld
cwde
out
push
pop
ins
pop
test
xchg
ret
push
pop
and
test
push
adc
in
lods
and
sub
inc
repz
lds
pusha
mov
mov
(bad)
fmul
mov
cmp
test
rcl
dec
out
stos
out
mov
jno
stos
fstp
mov
ds
sbb
pop
pop
mov
in
pop
and
out
push
sahf
clc
cs
in
xchg
mov
cmp
call
int3
jmp
mov
enter
out
sub
pop
test
scas
xchg
mov
push
dec
mov
std
add
inc
aaa
in
repz
dec
cmps
outs
in
push
loop
scas
imul
pop
dec
lahf
nop
add
out
and
int
or
cmc
inc
imul
mov
add
jbe
xchg
pushf
xchg
push
loop
in
mov
icebp
mov
mov
add
xor
cmc
xchg
aad
in
add
clc
(bad)
sbb
pop
jmp
es
and
jae
jmp
rcr
je
in
adc
or
push
inc
cmp
mov
fisttp
cmp
pop
jne
in
push
cmps
push
loop
ret
data16
push
pop
jmp
sahf
fscale
arpl
pop
jns
sub
and
xchg
mov
pop
xchg
imul
icebp
cmps
stos
jmp
(bad)
stc
sub
push
xchg
push
mov
sbb
mov
mov
pop
mov
pop
jo
mov
mov
add
cmc
imul
cmp
add
jnp
mov
add
jg
test
mov
jbe
mov
neg
cmp
jo
lds
jg
adc
shl
outs
add
cmp
por
enter
mov
sub
lods
into
lods
jp
lods
sbb
mov
fcmovnbe
out
cmps
out
(bad)
js
pushw
or
int
fdivr
loopne
imul
(bad)
mov
mov
inc
or
xor
sbb
and
and
cmp
lock
std
rcl
dec
mov
cmp
jecxz
in
or
(bad)
stc
jne
and
outs
jo
xchg
ror
inc
stos
div
cmp
mov
(bad)
retf
(bad)
push
nop
add
add
xchg
and
out
add
cmp
repz
adc
mov
xchg
fstp
outs
js
dec
xchg
ffreep
in
fadd
push
dec
xlat
ja
pop
push
ins
pop
loope
mov
bound
outs
and
cmp
sar
mov
inc
js
imul
xor
push
add
ins
test
je
jmp
pop
inc
jnp
cmc
jnp
rol
sub
into
cmp
int
push
inc
popa
mov
(bad)
jae
mov
popa
ss
lahf
sub
in
hlt
inc
cmps
daa
sbb
cld
hlt
lods
xchg
dec
mov
cli
push
push
and
lods
mov
(bad)
repz
mov
add
xlat
mov
jmp
dec
aaa
gs
lds
in
sbb
sbb
jecxz
or
xchg
jo
jge
adc
push
mov
jl
inc
sar
cmp
mov
pop
fidivr
jg
mov
repz
xor
movs
nop
rol
ret
sbb
push
and
mov
sub
lock
cmp
fst
test
lahf
jno
adc
push
popf
js
sbb
dec
inc
lods
iret
xchg
hlt
ins
lock
fdivr
call
cmps
mov
imul
mov
mov
cmp
mov
jo
push
rol
daa
fsub
jmp
or
scas
adc
pop
or
rol
mov
mov
popf
cmp
fs
out
sub
jbe
movs
imul
xchg
jae
pop
push
fldcw
inc
bound
jo
sub
mov
inc
dec
cmp
adc
adc
arpl
(bad)
ficom
xor
mov
call
xchg
rol
xchg
jge
pop
cmp
add
fldenv
adc
neg
pop
adc
push
pop
test
stc
xlat
mov
cmp
or
mov
ret
push
test
jle
xchg
inc
add
popf
and
cmp
ja
shl
aas
xchg
cmps
or
popf
mov
stos
xchg
pusha
mov
or
loope
adc
js
or
iret
outs
ins
mov
or
push
cmp
mov
push
aam
pop
pop
out
sbb
sbb
loope
jbe
(bad)
cmp
enter
dec
pop
scas
fsub
out
test
cmp
arpl
addr16
mov
fimul
jle
test
fnstcw
ret
sub
add
pop
pushf
push
(bad)
out
dec
div
and
or
adc
mov
fist
in
call
push
stos
icebp
push
dec
ins
add
pushf
mov
xor
jns
xchg
and
push
jle
cmp
cmp
add
inc
or
fnstsw
xchg
adc
inc
pop
repz
dec
jb
imul
mov
push
int
pop
mov
ds
icebp
sar
add
and
push
mov
or
mov
or
cwde
mov
jo
jge
xchg
sar
jle
ret
out
pop
aad
xchg
jno
scas
nop
cmp
in
mov
push
mov
shl
push
mov
sbb
sub
mov
movs
mov
add
and
inc
lds
test
jle
fs
lea
xchg
mov
xchg
add
popf
icebp
or
add
rcr
(bad)
call
push
mov
mov
mov
push
mov
xchg
mov
push
out
daa
sub
adc
ds
call
ds
cmp
mov
mov
xor
inc
mov
dec
(bad)
sub
jmp
pop
xor
stos
and
push
jb
gs
pop
jp
jle
sub
ja
cs
lods
push
dec
push
pop
arpl
mov
sbb
xor
fxch
sub
push
pop
mov
sbb
xor
ret
nop
adc
jae
mov
cmp
cs
jne
data16
(bad)
es
stos
cmps
sub
add
adc
sbb
mov
std
scas
add
and
push
loopne
fwait
or
cmps
fadd
push
(bad)
lahf
xor
cs
mov
inc
inc
bnd
xchg
sub
jle
and
xchg
and
mov
mov
add
clc
es
adc
or
popf
xlat
fucomi
jle
clc
or
mov
add
sbb
arpl
imul
imul
ret
jae
dec
clc
out
add
cmc
lock
cmps
gs
fadd
js
sbb
test
test
nop
xor
cwde
mov
xor
sti
out
lock
cmps
das
aad
adc
xchg
iret
fild
push
sbb
leave
pushf
jmp
repz
adc
mov
sbb
xor
add
movs
pop
cmp
cmc
xchg
shr
mov
push
xchg
in
nop
lahf
inc
sbb
dec
call
movs
stos
scas
and
add
retf
popa
stos
or
bound
sbb
scas
xor
imul
pop
leave
xor
cwde
xchg
rol
aad
test
pop
and
pushf
mov
test
rcl
mov
stos
inc
or
movs
inc
xor
xchg
ins
daa
test
mov
ret
jecxz
dec
or
jmp
mov
lods
loop
add
push
aaa
lock
xchg
push
sar
loope
fistp
imul
lods
pop
outs
and
(bad)
and
xchg
enter
push
bound
push
out
dec
test
out
aaa
fiadd
inc
mov
pusha
inc
sbb
nop
jns
adc
loope
movs
cmps
jmp
call
iret
xor
or
movs
rcl
stos
sub
loope
jnp
adc
not
std
iret
das
das
or
(bad)
test
call
pop
cmp
cmp
jmp
unpckhps
xchg
imul
pop
and
ja
or
(bad)
ror
ins
(bad)
or
aas
fs
or
push
mov
lods
jmp
out
sti
sbb
xor
leave
leave
ret
pop
adc
popf
(bad)
fwait
rcr
and
push
xchg
pop
sub
dec
aam
xchg
sahf
xchg
push
push
mov
xchg
bound
jl
call
sbb
rol
sub
jb
dec
rcl
rcr
int3
add
loopne
cli
inc
js
lds
daa
lock
cmc
xchg
arpl
in
and
out
jmp
adc
int3
sbb
xor
jae
jmp
lods
cmp
aad
jo
or
stos
mov
push
pop
es
test
cmps
rcl
cmp
and
push
hlt
loope
ins
in
xchg
mov
mov
pop
(bad)
arpl
adc
push
je
int3
clc
daa
(bad)
ds
ret
ret
inc
xchg
cmps
jmp
imul
js
in
jb
icebp
leave
push
(bad)
(bad)
sub
and
test
loope
and
add
(bad)
hlt
ss
push
mov
xchg
jp
sub
inc
xor
test
xor
fcomip
adc
outs
or
lds
loope
add
fiadd
(bad)
push
mov
sub
jb
pushf
inc
sub
pop
fldenv
inc
mov
jmp
fcomp
lock
loopne
fnstcw
adc
(bad)
mov
(bad)
pop
mov
or
push
(bad)
and
inc
adc
cmp
sahf
xor
push
xchg
cmc
(bad)
adc
and
shl
fldenv
call
inc
push
ret
add
sti
sbb
cwde
and
mov
retf
(bad)
mov
js
test
jb
mov
test
push
fdivp
call
sub
pop
enter
push
scas
dec
rol
loopne
leave
dec
pop
adc
sti
loopne
adc
mov
push
sub
inc
xor
mov
xor
xor
out
sahf
inc
jo
mov
test
cs
xchg
sbb
leave
mov
or
out
xchg
push
push
push
gs
popa
or
movs
pop
pop
lahf
cwde
outs
jb
jmp
pop
test
fwait
cld
call
in
adc
xchg
outs
aaa
es
or
jge
and
mov
xlat
icebp
ror
addr16
and
(bad)
rol
jg
and
fisttp
inc
cmp
ret
aas
xchg
dec
lock
push
sub
scas
loop
sbb
les
sub
sub
adc
mov
retf
sbb
test
mov
mov
jns
clc
pop
shr
push
sub
pop
push
and
cld
lahf
icebp
inc
test
pop
mov
hlt
jno
or
inc
xor
fisubr
inc
xchg
dec
pop
int
sbb
jae
or
dec
inc
nop
idiv
sbb
dec
inc
mov
dec
inc
loope
idiv
or
cmp
inc
iret
movs
movs
and
pop
mov
mov
cmps
dec
aam
inc
into
pop
push
stos
fisttp
inc
push
retf
retf
mov
jmp
lahf
mov
add
jmp
mov
jb
push
xchg
mov
sub
mov
sti
int3
push
ss
fld
ds
retf
inc
inc
dec
and
xchg
ret
xor
cmp
cmp
ror
scas
in
or
mov
stc
or
(bad)
ds
xchg
je
in
clc
sbb
pop
push
cmp
fdivrp
mov
xchg
xchg
fstp
lock
sbb
nop
mov
sub
jo
jmp
outs
(bad)
mov
adc
(bad)
lods
jle
sbb
cmc
or
add
lahf
pop
lock
push
std
and
inc
pop
sub
cmp
add
mov
movs
int3
daa
and
pop
cmc
retf
js
ins
pop
lods
sbb
push
adc
inc
fnsave
jle
addr16
pop
sbb
mov
ficomp
xchg
and
sbb
test
(bad)
ss
leave
and
push
ds
enter
push
push
xlat
adc
dec
or
pop
fs
stos
jmp
xchg
movs
sahf
repnz
icebp
pop
adc
add
or
retf
xchg
cmp
mov
rcr
das
ins
call
adc
ret
fld
xor
push
mov
xchg
mov
or
mov
add
pop
fidivr
lods
jnp
cmp
lea
mov
push
test
aaa
fadd
dec
jnp
rcr
xchg
fiadd
mov
call
cmp
and
add
or
sti
sub
adc
mov
idiv
cmp
loop
cmp
mov
fild
into
jmp
shl
movs
(bad)
lahf
xor
or
in
dec
jge
ret
jo
jecxz
xchg
shl
cmp
fcom
sub
mov
mov
jmp
shr
xchg
dec
in
sub
nop
sbb
imul
jmp
inc
jg
int
std
adc
adc
icebp
lds
repz
cmc
sbb
sahf
xor
xor
outs
jae
ret
xlat
sbb
cwde
add
fsubr
push
lock
inc
in
lds
retf
outs
inc
mov
mov
int3
inc
arpl
pop
cmc
mov
cli
lahf
fistp
js
pushf
mov
popa
jmp
add
or
push
out
dec
xchg
sbb
inc
mov
xor
pop
mov
adc
dec
je
xchg
mov
push
push
mov
jne
push
jne
popf
jle
mov
pop
pop
in
ja
jmp
sub
rcr
jp
sub
je
jl
xlat
sahf
and
push
sahf
sbb
clc
and
(bad)
enter
mov
pop
ret
cmp
jno
xlat
sbb
shr
aad
lods
hlt
cmp
leave
jge
test
inc
js
jmp
or
mov
push
cli
cld
jns
sbb
cwde
shr
mov
pop
fbstp
fs
adc
sub
lods
jo
jl
mov
repz
mov
and
dec
retf
mov
and
shl
and
mov
cli
lods
ins
sbb
popf
inc
(bad)
loope
jns
mov
ds
dec
sub
pop
lock
imul
mov
inc
cmp
jo
sub
jecxz
mov
test
push
aas
and
inc
mov
fsub
test
adc
cmp
clc
inc
std
lods
push
jnp
aaa
or
mov
dec
outs
cdq
imul
jle
inc
jmp
xchg
arpl
leave
adc
int3
ret
aas
mov
push
stc
fnstsw
mov
out
scas
sbb
push
jne
les
mov
enter
push
repz
mov
cmp
sbb
add
push
xchg
jno
sub
sub
mov
inc
push
mov
mov
ins
adc
sbb
push
dec
or
push
pop
mov
xchg
cwde
push
loope
adc
das
sbb
rol
cmc
add
mov
mov
mov
scas
fild
mov
bnd
aas
push
inc
enter
fstp
xchg
(bad)
jecxz
je
push
repz
adc
push
dec
cmp
adc
fnstenv
push
rcl
lods
mov
jnp
pop
add
ins
aaa
idiv
push
cmps
jbe
sbb
movs
xlat
mov
inc
xchg
pop
scas
daa
(bad)
fcom
cmps
daa
inc
dec
hlt
std
std
jl
inc
jl
rcl
sbb
(bad)
(bad)
cdq
jns
lds
sub
repnz
ja
cdq
pusha
in
and
cmp
sbb
dec
or
popa
call
cdq
ja
sub
cmp
sbb
xor
mov
jbe
add
adc
dec
sar
call
int3
xchg
lea
mov
jae
pop
dec
jb
out
mov
cmp
(bad)
int
jp
dec
jle
mov
ficom
inc
dec
push
xlat
lea
arpl
cmp
sbb
xor
xchg
jmp
mov
mov
or
lds
sbb
or
inc
and
scas
jge
mov
aas
pushf
rcr
inc
jle
push
jnp
and
inc
test
ja
cmp
pop
lds
and
arpl
in
stos
rol
iret
dec
jbe
popf
popa
aad
jmp
js
xor
sbb
cs
stos
icebp
xor
push
sub
fistp
jnp
dec
or
and
lahf
mov
sbb
cmp
jecxz
daa
push
cld
push
rcr
lock
in
rep
sub
jb
jbe
mov
in
out
jae
fdivr
cmp
aam
lods
mov
shl
jne
mov
add
mov
dec
fwait
push
ins
sar
jns
mov
cmp
mov
(bad)
and
pushf
loop
ds
ds
mov
(bad)
into
inc
xchg
test
stc
rol
jmp
addr16
sar
fsubr
mov
sbb
out
shr
fdivr
or
adc
add
dec
test
jo
jmp
cli
pop
(bad)
jecxz
pop
sub
pop
jge
enter
push
add
sub
fs
lods
mov
call
cdq
mov
add
das
dec
lea
jne
mov
out
cmp
(bad)
retf
not
imul
(bad)
xor
pop
pusha
jmp
sub
cli
xor
fidiv
fwait
add
mov
int
int
pop
push
pop
adc
fbld
pop
mov
or
mov
out
xchg
sub
imul
ja
push
mov
fcomp
mov
mov
mov
fisttp
retf
mov
dec
test
(bad)
mul
mov
int3
pop
mov
mov
rcl
dec
and
and
mov
pop
mov
mov
imul
xor
lds
xlat
mov
lods
in
xchg
xrelease
dec
aaa
and
jb
lds
retf
sbb
mov
jno
mov
mov
add
addr16
or
dec
jp
fidivr
xchg
sub
out
cmp
mov
pop
inc
out
mov
jb
or
mov
mov
scas
out
ror
imul
push
pop
sub
mov
lea
test
in
(bad)
arpl
ret
stos
repz
fucomi
lahf
ficomp
jl
xor
xchg
mov
and
cdq
sbb
pop
nop
stos
shr
pop
push
or
leave
adc
std
ja
xchg
shl
mov
out
dec
cmc
xchg
push
mov
sahf
gs
add
mov
out
test
ja
loop
lahf
imul
mov
sub
iret
lods
jae
out
retf
sbb
(bad)
dec
vmovlpd
jo
jne
ss
mov
imul
imul
jnp
xor
dec
mov
and
xor
or
sbb
mov
pop
and
push
icebp
xchg
les
data16
jge
cmc
das
mov
jp
scas
or
xor
icebp
jl
xor
fild
lahf
push
fisttp
test
inc
loop
(bad)
mov
mul
xor
ret
fistp
loop
sti
leave
(bad)
dec
popf
shl
stos
leave
outs
out
pop
mov
push
in
push
mov
mov
dec
pop
jne
dec
js
in
cmp
mov
xchg
or
pop
xor
aad
int
jne
leave
inc
or
push
add
jns
sbb
xchg
ficomp
clc
jmp
and
pushf
jno
repz
aaa
or
mov
pushf
pop
rcr
scas
jne
test
and
mov
lods
retf
icebp
cmps
and
iret
cmp
hlt
jo
dec
push
and
add
aas
push
cmp
cmc
lahf
cli
dec
pop
mov
fdivrp
cmps
jbe
push
aad
mov
xor
dec
mov
loope
repz
and
dec
mov
mov
jmp
adc
std
inc
out
fs
loop
mov
sbb
pop
(bad)
mov
adc
dec
and
fst
jg
mov
xchg
cwde
or
bound
nop
push
push
cdq
das
inc
jmp
int
movs
cs
imul
jge
xor
dec
movs
shr
shr
push
imul
add
repz
jle
jle
xor
inc
out
and
jnp
pop
mov
sar
setg
or
add
inc
rol
ss
bswap
mov
ja
jb
ficomp
fadd
cld
clc
shl
sbb
loope
mov
xor
push
mov
push
dec
ficom
push
ret
jle
xchg
dec
mov
test
jge
dec
mov
sub
sti
pop
out
sub
dec
repnz
mov
lea
sub
sbb
pop
add
addr16
shl
sub
imul
dec
inc
fistp
cmp
sar
sbb
and
jp
sbb
jl
pop
rol
mov
dec
enter
jp
mov
mov
jno
out
mov
dec
cmc
cmps
xor
push
aaa
lea
mov
mov
sbb
inc
push
mov
and
les
out
cwde
mov
shl
clc
jo
fsubr
sar
(bad)
fild
sahf
mov
add
and
pop
and
cld
mov
(bad)
fwait
xchg
fsub
popf
push
bound
imul
fsub
out
jge
jns
mov
xor
(bad)
mov
in
(bad)
sar
ss
pop
and
push
lods
mov
lods
inc
scas
imul
pop
(bad)
std
repnz
or
mov
jmp
xor
dec
mov
mov
cmps
mov
je
(bad)
clc
jg
ja
aad
cmp
ret
dec
mov
icebp
xor
or
sbb
je
test
mov
(bad)
in
xchg
cmp
cs
