pop
data16
inc
inc
add
pop
inc
outs
outs
ins
gs
outs
add
or
add
jmp
jae
add
jb
lea
sub
add
dec
outs
je
addr16
inc
outs
(bad)
in
outs
cmp
jg
rol
inc
outs
ins
jo
nop
push
push
or
push
je
outs
mov
addr16
or
push
imul
popa
push
int
ja
int
sahf
mov
out
ds
push
push
sub
xchg
push
pop
push
dec
bound
arpl
pop
sbb
ins
stc
scas
test
je
ins
in
invd
dec
push
outs
imul
dec
outs
xchg
inc
xor
sbb
jmp
cmps
paddsb
enter
in
fsub
or
aam
or
int3
enter
enter
mov
mov
or
mov
and
mov
cld
pushf
cwde
xchg
sbb
enter
invd
enter
nop
mov
mov
cmp
xor
fs
and
sbb
aas
fdiv
inc
push
add
mov
adc
out
idiv
and
add
mov
and
mov
aaa
inc
pop
ret
mov
jl
je
fs
inc
jo
push
push
push
mov
add
push
(bad)
idiv
fs
test
jne
xor
pop
leave
mov
mov
(bad)
(bad)
dec
inc
rol
mov
mov
inc
cmp
jne
mov
mov
mov
push
nop
mov
inc
add
scas
mov
mov
xchg
movs
test
xchg
mov
jle
std
std
mov
mov
or
adc
add
sar
ss
mov
push
or
mul
(bad)
out
or
(bad)
push
push
push
mov
mov
mov
mov
add
rol
mov
lahf
rol
push
or
push
jne
and
fiadd
sub
sub
or
inc
add
dec
push
add
jg
jg
cmp
jne
cmp
mov
cmp
jne
mov
mov
sbb
ds
test
pop
pop
pop
adc
loopne
dec
xchg
mov
mov
jle
fistp
ins
mov
add
call
ja
and
mov
jle
push
ja
cld
or
test
inc
sti
stos
pop
ret
leave
jmp
or
clc
add
(bad)
in
(bad)
loopne
iret
sti
sub
jmp
sub
stc
mov
jo
(bad)
xchg
adc
ror
or
or
mov
cmps
sbb
sti
jne
sbb
mov
push
mov
mov
cmp
mov
fucomip
add
mov
push
push
scas
js
push
jg
test
xor
lds
mov
adc
(bad)
mov
push
and
icebp
mov
jl
add
push
mov
sub
mul
dec
add
fcom
jne
jle
in
icebp
add
popf
cmp
or
mov
in
fsub
and
inc
fist
push
and
call
sub
mov
jg
mov
mov
or
out
ja
mov
add
jbe
lods
xor
cmp
jnp
sub
jbe
or
push
in
pop
mov
adc
sti
push
out
idiv
jne
mov
jmp
scas
frstor
sbb
add
sbb
dec
jo
xor
jno
inc
inc
outs
hlt
or
lock
jae
sbb
loop
mov
lods
jns
inc
sub
or
lds
jg
popf
cmp
pop
cmp
add
pop
jbe
mov
cmp
in
test
or
or
jbe
scas
adc
xor
sti
push
push
xor
out
add
sbb
push
adc
dec
out
push
inc
(bad)
jns
mov
xor
jmp
xor
sahf
xchg
in
sub
or
out
daa
cmp
sbb
jae
mov
cmp
jae
xchg
inc
sar
sbb
inc
or
xchg
add
outs
or
dec
clc
mov
(bad)
aas
or
add
lock
mov
repnz
shl
cmp
fwait
jmp
add
mov
inc
es
xchg
inc
ds
jmp
add
and
jnp
inc
inc
cmp
movs
and
push
mov
pop
mov
mov
adc
and
clc
ret
cmp
inc
jle
sub
inc
mov
cmp
aaa
stos
(bad)
lods
cmp
xor
xor
lds
mov
xor
lds
mov
pop
or
call
test
xchg
loope
(bad)
(bad)
jmp
mov
cmc
jne
nop
fsubp
cmp
lds
cmp
sub
cs
add
inc
popf
adc
adc
xchg
lea
inc
mov
mov
inc
fs
add
out
cmp
cs
lock
mov
out
ror
cmp
pop
pop
test
je
imul
jo
add
mov
add
adc
ja
adc
mov
sbb
(bad)
femms
add
aaa
push
push
push
mov
push
adc
test
jge
and
mov
hlt
popf
adc
(bad)
clc
seta
scas
ret
sub
add
sbb
leave
and
hlt
inc
cmp
in
mov
jmp
mov
mov
or
aas
pop
pop
pop
icebp
sub
jl
adc
sub
xchg
ret
mov
and
xchg
push
xor
cmp
loopne
inc
(bad)
iret
add
jnp
ins
in
out
sub
adc
test
push
gs
push
outs
imul
adc
jmp
add
push
dec
stc
or
sbb
retf
pushf
fistp
scas
cmp
pusha
dec
or
adc
dec
clc
adc
loopne
cmp
adc
jmp
and
xchg
mov
jmp
push
lahf
dec
jne
out
and
add
call
outs
jmp
dec
mov
shl
dec
or
push
mov
cmp
inc
xchg
add
outs
mov
sub
lea
xor
jl
mov
push
or
std
jle
add
or
or
mov
and
rcl
rol
cld
leave
adc
or
add
scas
ins
or
push
or
and
shr
mov
cld
add
and
test
je
add
(bad)
jnp
fimul
xor
test
outs
mov
add
and
(bad)
cmps
aaa
jae
cmp
cmp
test
add
xchg
out
stos
pop
scas
mov
xor
add
jmp
mov
add
and
repz
bound
mov
dec
mov
or
inc
test
add
mov
lds
mov
mov
jmp
and
fmul
mov
and
pop
xor
jg
pop
fstp
jo
ret
lea
xor
xor
std
add
mov
mov
(bad)
scas
ja
add
sub
jo
(bad)
mov
(bad)
shr
jae
hlt
push
rcr
xchg
mov
sbb
sbb
cmp
inc
adc
std
pop
add
sub
cmp
jnp
fild
test
mov
jb
mov
das
adc
jge
inc
adc
or
repz
sub
adc
adc
fcomp
sbb
dec
xchg
jle
lock
in
dec
mov
inc
or
lahf
loope
or
pop
cmp
jae
loope
je
fsubr
pop
add
aad
repz
fadd
loope
(bad)
sbb
js
clc
retf
adc
add
mov
loopne
mov
xor
mov
out
test
popa
ds
jo
(bad)
fistp
lahf
clc
pop
mov
ror
ret
push
pop
int3
lea
fs
ret
pusha
pop
cmp
shr
cmp
inc
stos
sbb
jb
adc
or
mov
mov
clc
mov
add
pop
mov
push
lahf
icebp
ss
cmps
jle
cld
mov
cs
pop
mov
pop
je
pop
jmp
popa
jo
loope
or
add
lods
js
sbb
pop
sbb
mov
jnp
out
jne
movs
sub
cmp
ret
sub
adc
xor
xor
out
loope
dec
or
jmp
loopne
pop
mov
std
lock
rol
(bad)
xchg
mov
or
pop
jne
mov
jbe
push
pop
inc
call
pop
test
mov
adc
xor
push
cld
or
xor
adc
leave
push
push
jmp
repnz
add
xor
mov
ss
add
sti
push
jg
imul
sar
dec
pop
push
cmp
jns
mov
dec
inc
lahf
shl
pop
cwde
fdiv
push
or
xor
or
test
xor
stc
cmp
aas
inc
(bad)
hlt
mov
mov
add
ret
or
sbb
jmp
popa
retf
shl
lahf
cmp
jp
or
mov
in
shr
(bad)
clc
repz
cmp
sbb
pop
not
movs
test
push
or
adc
xor
push
xlat
or
nop
jl
fdiv
xor
or
lds
inc
loopne
push
test
jne
test
sub
adc
dec
cld
or
sahf
push
add
mov
mov
mov
test
nop/reserved
or
ret
das
and
inc
push
add
dec
mov
das
jb
ret
cmp
or
xchg
add
or
add
dec
pop
test
pusha
mov
adc
ret
sbb
cli
add
call
fisttp
aaa
or
jmp
mov
cmp
jge
push
test
stos
fwait
push
adc
sbb
adc
inc
jno
dec
mov
mov
dec
aas
int
je
(bad)
(bad)
(bad)
mov
pusha
lea
push
sbb
(bad)
cmp
jb
(bad)
sbb
(bad)
dec
loope
cmp
int
adc
add
js
jbe
shr
dec
not
adc
test
push
movs
add
in
cmp
mov
mov
pop
xrelease
cmp
loope
ja
(bad)
sti
rcl
mov
and
outs
push
arpl
iret
adc
pusha
jp
scas
sbb
dec
daa
add
pop
sahf
add
add
lock
mov
(bad)
xchg
sbb
fbld
out
ret
xlat
js
xchg
add
lds
js
aad
mov
or
fsub
and
shr
pop
clc
add
jmp
xchg
push
jns
xor
lods
jno
repz
rcl
sub
add
dec
aas
pop
add
not
mov
mov
adc
add
xlat
cwde
ss
paddsb
scas
mov
ret
(bad)
std
cmp
jge
aaa
mov
pop
loop
xchg
dec
push
lods
jbe
mov
xchg
repnz
and
jg
or
adc
add
pop
push
imul
sbb
add
pop
lock
mov
test
je
neg
push
mov
inc
and
cs
imul
mov
xor
xchg
ss
bound
rcl
bound
cmp
int3
out
and
or
add
call
dec
mov
or
fmul
(bad)
fild
and
leave
xlat
iret
enter
fmul
(bad)
(bad)
(bad)
loopne
jecxz
in
lock
mov
scas
push
push
push
pop
cmp
pop
pop
bound
rol
xchg
(bad)
mov
stos
mov
cld
jge
(bad)
mov
arpl
idiv
je
cmp
repz
push
jmp
add
movs
dec
pop
je
cld
lea
xor
std
or
push
popa
xor
(bad)
mov
jmp
add
std
jg
mov
add
jbe
cmp
jne
cmp
add
out
mov
sti
xor
jmp
cmp
sbb
add
push
and
pop
mov
sub
retf
dec
ja
push
es
mov
scas
jle
push
shl
pop
int
lods
daa
xor
cwde
into
outs
jmp
cld
pusha
push
fcom
push
imul
push
ret
sbb
jmp
xor
mov
lea
mov
ror
dec
sbb
cdq
test
(bad)
repnz
push
loopne
scas
mov
out
into
sbb
or
jmp
repz
(bad)
fdivr
mov
or
dec
jmp
xchg
or
jne
xchg
js
inc
call
jmp
movzx
imul
add
or
shl
push
hlt
add
imul
call
and
push
test
call
fistp
mov
clc
popa
jb
or
add
jo
push
fistp
fwait
pop
add
cmc
mov
ins
mov
rol
test
(bad)
xor
icebp
mov
inc
add
jb
cmp
ja
mov
call
ror
add
jmp
enter
test
leave
arpl
dec
ins
(bad)
push
dec
xchg
cmps
cdq
(bad)
xor
sub
inc
aas
mov
hlt
jg
sti
inc
inc
and
push
mov
shr
je
pop
or
sbb
fnstenv
dec
je
mov
idiv
fcomp
cmp
dec
jne
jmp
adc
cld
(bad)
inc
mov
cmp
jne
dec
je
mov
cmp
jne
or
add
jns
dec
sti
sti
adc
std
jne
not
shr
sbb
out
xor
or
cmp
int
loopne
or
jg
ds
or
stos
mov
stos
pop
aas
imul
fld
adc
(bad)
out
scas
stos
sub
push
mov
add
push
inc
cmp
je
mov
mov
sub
je
and
mov
(bad)
jle
xor
ja
cmp
ja
lea
add
add
pop
xor
out
int
(bad)
jl
pop
xor
mov
push
dec
mov
pop
adc
lock
sub
jmp
inc
dec
jmp
mov
jno
pop
je
lea
jbe
mov
mov
ja
add
mov
paddd
ret
push
mov
mov
add
je
inc
mov
dec
jne
push
jg
clc
pop
sub
mov
into
fisttp
pop
push
jle
shr
fistp
rcl
sar
leave
jae
inc
mov
hlt
or
pop
xchg
out
cmp
shr
cwde
or
inc
nop
test
not
inc
and
hlt
jmp
cmp
fist
sbb
cmp
jne
push
pop
and
fmul
pop
push
add
mov
in
fbstp
clc
not
test
inc
es
stc
push
nop
push
inc
stos
dec
scas
sub
int
inc
sub
addr16
add
ins
stos
sahf
xor
movs
mov
hlt
not
fsub
and
pop
cmps
sti
fbld
or
mov
(bad)
(bad)
(bad)
inc
push
inc
push
inc
pop
inc
outs
jb
popa
outs
fs
inc
gs
jo
imul
push
dec
popa
jae
sti
push
cld
imul
jne
mov
sub
jo
mov
inc
jo
xor
ror
inc
mov
mov
add
arpl
ret
sbb
vphadddq
pop
clc
push
int3
mov
add
inc
das
or
mov
jne
outs
push
mov
test
or
push
cdq
and
or
aas
adc
xor
add
mov
cld
xchg
mov
in
push
push
and
mov
mov
mov
jp
aas
lock
lahf
add
pop
in
lods
idiv
jg
sbb
in
cmp
je
pop
mov
add
jae
mov
mov
pop
cld
mov
neg
dec
jne
xor
xor
xor
cmp
inc
test
sbb
cdq
call
jg
adc
movs
mov
cmp
je
mov
leave
add
cs
pop
push
xchg
inc
adc
sub
mov
mov
scas
mov
jne
iret
pop
and
add
sub
mov
pop
inc
daa
jl
mov
pop
pop
je
jmp
pop
mov
sub
repz
mov
mov
loopne
push
push
push
push
call
outs
iret
adc
pop
clc
scas
or
push
mov
dec
or
pop
push
cwde
pop
sub
aad
mov
or
pop
or
call
clc
mov
js
sub
mov
push
(bad)
(bad)
sar
jo
aaa
test
push
push
or
push
cmp
pop
pop
ret
daa
(bad)
xchg
dec
call
in
arpl
push
neg
push
push
and
mov
mov
jmp
sar
shr
movsx
inc
inc
jmp
add
sbb
das
sbb
push
adc
fcmovnb
push
cmp
loope
lods
dec
jbe
enter
aas
loop
out
jne
push
shr
cmp
jge
cmp
mov
test
fild
inc
mov
mov
je
sub
ror
mov
test
adc
push
xor
sbb
sub
add
push
iret
mov
sbb
push
outs
inc
sub
push
push
mov
push
out
dec
cmps
sub
push
mov
pop
add
inc
aad
sbb
add
dec
pop
mov
mov
adc
jmp
dec
adc
adc
cmps
or
xchg
or
jb
add
or
icebp
sahf
sbb
add
mov
sbb
xchg
dec
movs
aam
sar
pop
add
lds
out
(bad)
aas
aad
pop
pop
add
je
mov
cmp
jne
arpl
mov
in
mov
inc
inc
mov
jg
inc
fwait
sbb
jne
add
dec
jne
adc
xor
sbb
or
sbb
xchg
outs
sbb
jo
xchg
adc
pop
jo
xchg
xor
lods
popa
les
outs
dec
pop
shl
mov
add
inc
sbb
mov
call
mov
or
adc
shl
sbb
push
push
push
push
push
push
pop
sar
jmp
lahf
aaa
xor
add
inc
inc
inc
cmc
xchg
pusha
add
aas
or
movntps
pushf
gs
or
inc
in
ficomp
adc
stos
add
mov
out
adc
cmc
sbb
jmp
ret
sbb
nop
popa
jle
movs
rol
or
mov
in
test
inc
add
je
cmp
lahf
stc
adc
pop
sub
je
jmp
add
mov
add
and
push
cmp
cmp
out
cmp
and
cmp
cmp
(bad)
(bad)
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
push
sbb
into
jmp
mov
iret
cli
(bad)
fsubr
push
mov
jmp
mov
jmp
mov
lods
jmp
std
rcl
and
ins
and
xor
(bad)
xchg
or
ds
or
cmp
jle
stos
mov
sbb
fadd
mov
push
inc
mov
add
outs
xor
mov
dec
add
fptan
push
adc
sbb
arpl
cdq
jle
push
sbb
pop
adc
je
cwde
xor
adc
mov
mov
in
loope
adc
mov
push
sub
je
popa
mov
jne
and
add
add
pop
(bad)
and
hlt
or
jo
clc
xor
mov
fild
add
sub
mov
jmp
js
and
jbe
jecxz
inc
cmp
movsx
aas
and
mov
xor
fisttp
js
sahf
cmp
jle
add
fwait
sbb
fisttp
cmp
jg
sbb
outs
loope
fwait
add
nop
fstp
dec
aas
sbb
mov
icebp
push
and
sbb
push
jnp
push
and
mov
lock
in
xor
pop
mov
lods
mov
icebp
add
mov
dec
call
outs
scas
push
repnz
cmps
cmp
adc
sub
mov
adc
and
mov
call
out
or
cwde
or
dec
std
mov
mov
jne
mov
outs
xchg
neg
sbb
inc
leave
add
mov
mov
cmp
cmp
imul
aas
rcl
in
sar
add
(bad)
call
out
cmp
xor
sub
ja
mov
pop
lock
mov
mov
inc
ret
jmp
mov
inc
cs
cmp
jo
cmp
add
mov
scas
aam
add
sub
jbe
push
sub
fs
adc
inc
aaa
rcr
push
pop
cmp
je
ret
js
js
in
lahf
int3
jne
call
adc
(bad)
dec
mov
push
shr
push
call
sbb
lods
sti
cmc
pop
jmp
push
outs
jb
loop
(bad)
jmp
outs
jae
inc
outs
jo
jb
addr16
sub
xor
cmp
sub
aaa
and
mov
push
mov
jno
dec
jmp
adc
pushf
iret
cmc
and
mov
mov
jns
inc
clc
push
pop
es
mov
push
sbb
add
or
dec
jne
xlat
dec
jl
imul
inc
jg
push
push
xchg
cld
cmp
es
dec
pop
lods
pop
pop
jmp
jbe
imul
loope
push
in
jle
pop
jle
cmc
pop
(bad)
icebp
push
ror
xchg
pop
mov
hlt
rcr
jo
clc
lods
mov
sbb
mov
clc
pop
stc
mov
test
hlt
dec
lock
daa
mov
and
mov
pop
clc
mov
jg
and
mov
inc
jmp
cmp
mov
or
push
push
push
push
push
clc
push
jp
mov
mov
or
dec
in
out
jmp
add
pop
ss
gs
sub
lock
fist
loop
mov
mov
xor
sbb
push
cmp
je
push
retf
outs
hlt
xor
add
std
test
sub
jmp
out
mov
sub
and
pop
pop
or
push
gs
xor
in
add
fidiv
enter
xchg
nop
push
push
push
mov
xor
(bad)
jg
repnz
jne
not
pop
add
pop
pop
xor
jbe
cld
outs
push
push
mov
nop
loope
scas
or
scas
(bad)
div
arpl
(bad)
xchg
out
add
push
sbb
test
ret
pop
jb
loopne
mov
mov
add
cmp
pop
bound
pusha
mov
in
fimul
adc
mov
sub
das
popf
out
popa
add
adc
or
or
and
ror
xchg
pop
or
(bad)
sub
(bad)
mov
lds
push
sbb
sti
gs
and
mov
jmp
aas
fsubr
(bad)
push
push
movs
and
mov
pop
mov
inc
cld
dec
int
push
fldenv
mov
inc
mov
sahf
out
add
cmps
pushf
cmp
loopne
jne
sbb
pop
daa
push
xchg
jmp
cmp
ror
mov
lea
imul
mov
sub
ja
add
push
shr
push
mov
stc
aaa
pop
cs
dec
dec
add
pop
dec
add
add
dec
jns
pop
sahf
adc
loop
and
test
movs
gs
pop
push
cmp
or
or
add
jmp
shl
aam
adc
xor
push
das
push
clc
inc
mov
pop
add
add
pop
aad
stos
sub
push
xchg
scas
cmp
inc
jnp
ud2
or
mov
jmp
sub
jg
es
jl
cmp
jge
sub
cdq
jl
xor
mov
adc
out
adc
shr
in
stos
mov
mov
jmp
push
pop
test
dec
aad
mov
sub
adc
inc
sub
es
and
icebp
cmp
jle
mov
sub
add
lea
imul
push
push
add
sub
push
out
fcmovnu
push
fistp
inc
dec
jge
xor
cmp
adc
push
in
(bad)
imul
add
gs
cmp
daa
mov
mov
lea
das
mov
scas
mov
in
jmp
push
jg
inc
pushf
xor
mov
push
mov
js
mov
inc
jae
adc
adc
retf
cmp
and
in
pop
mov
or
lods
jmp
js
clc
and
xor
pop
aas
shr
cwde
dec
cmps
lods
and
sub
loopne
push
or
loopne
fcomp
jecxz
add
or
add
sub
and
leave
xlat
arpl
cli
test
push
mov
cmp
and
not
in
push
push
enter
jne
shr
add
mov
sbb
cmps
mov
mov
out
push
sub
scas
lahf
ds
scas
retf
xchg
sub
in
inc
arpl
sets
pop
mov
pop
ds
jle
add
scas
jmp
cld
fcmovnu
xchg
(bad)
aas
call
aam
cmp
push
shl
loop
pop
loopne
dec
clc
ficomp
cwde
pop
pusha
je
inc
add
add
js
jne
mov
sbb
mov
push
sub
add
or
and
push
cmp
(bad)
aam
mov
mov
dec
adc
mov
inc
sbb
ret
addr16
jmp
mov
push
cdq
cmp
or
shl
sub
add
(bad)
adc
in
inc
sbb
pop
add
cmp
cld
daa
add
add
cmp
pop
add
cmp
test
add
(bad)
ret
jle
sub
mov
adc
dec
mov
add
mov
sub
rol
cmp
mov
prefetcht1
dec
lds
loope
xrelease
mov
dec
jmp
or
mov
popf
or
test
mov
retf
jle
test
mov
sahf
idiv
std
ja
clc
or
or
je
adc
jmp
push
je
setge
xchg
adc
(bad)
clc
jmp
adc
repnz
test
jmp
test
inc
aad
push
or
add
dec
cs
cmc
cmp
ja
jo
call
xor
sub
lock
es
add
(bad)
clc
cmp
add
xchg
mov
dec
push
imul
add
add
and
call
jmp
sub
cli
pop
sub
pop
enter
push
aaa
cld
iret
repz
das
sti
mov
das
or
or
int
cmp
adc
and
jno
jg
fmul
repz
lds
aaa
inc
pop
pop
lods
xchg
cmp
pop
or
sar
daa
cs
retf
sbb
cmp
xor
cmp
jns
add
cmp
loopne
pop
mov
(bad)
jo
paddd
js
lahf
inc
add
cld
(bad)
clc
sti
or
dec
clc
push
pop
add
sar
add
add
ret
push
cmp
retf
pop
pop
cmps
stc
mov
cmp
adc
retf
retf
cmp
cmp
pop
mov
adc
pop
cmp
push
sub
pop
lea
or
adc
out
fild
sti
arpl
out
or
in
jmp
aas
ins
jns
sub
shl
xor
lgs
or
inc
or
test
pop
xchg
fmul
add
cmp
jg
inc
ins
and
mov
lods
sub
mov
push
jno
test
mov
mov
(bad)
adc
out
jmp
daa
sub
push
in
fsub
sbb
sahf
in
adc
push
xchg
lar
or
jo
iret
or
ja
mov
inc
bound
out
jmp
xor
jb
(bad)
stos
pop
add
je
retf
in
adc
adc
jle
jmp
pop
or
lods
pop
push
leave
inc
mov
clc
pop
pop
xchg
aaa
pop
aaa
daa
icebp
mov
jne
mov
and
nop
xchg
popa
es
sub
jecxz
jle
aas
xlat
lea
or
ins
int
push
movs
outs
fadd
ds
push
adc
sub
mov
add
jecxz
iret
and
fcomp
sbb
push
pop
xchg
sub
leave
adc
lea
cmp
xor
push
aad
arpl
cmp
or
push
push
call
add
dec
xor
cmp
adc
mov
(bad)
sbb
test
fdiv
cmp
jb
cmp
push
jmp
mov
ret
or
ret
inc
div
std
imul
cmp
push
push
cmp
or
jmp
pop
loop
jg
call
or
jg
in
fiadd
mov
or
ret
pop
cmp
sbb
or
mov
push
pop
sub
xor
sar
mov
sub
adc
or
sti
call
ss
es
out
push
lea
jae
sub
or
or
xor
mov
mov
clc
mov
xchg
push
sbb
inc
cld
sub
sbb
xor
push
arpl
loope
cmp
iret
sub
ret
mov
popa
jbe
out
add
xchg
or
push
pop
dec
dec
mov
bound
rcr
fist
inc
jge
in
sar
cmp
adc
mov
jae
and
ss
(bad)
pop
outs
dec
xor
sti
or
xor
inc
es
sbb
inc
xor
push
mov
mov
and
mov
sub
repz
sti
pop
dec
ins
jo
add
mov
shl
pop
mov
or
jb
cmps
icebp
cmp
add
in
adc
je
add
cmp
in
adc
(bad)
jno
add
ret
mov
js
nop
scas
mov
jns
push
mov
fild
fdiv
push
loope
fstp
inc
fs
fsubr
push
in
nop
mov
data16
cmps
adc
mov
js
add
or
loopne
pop
cmp
aas
pop
je
mov
fstp
fnstenv
fld
push
iret
or
push
xchg
push
stos
adc
add
jecxz
cdq
sub
mov
xor
and
mov
(bad)
xor
test
bound
sbb
jo
add
and
popf
mov
dec
or
movzx
cmp
popf
adc
xchg
or
inc
aaa
and
mov
cmps
(bad)
pop
in
sbb
jg
leave
jle
add
out
add
jne
jb
add
inc
sbb
and
fs
inc
add
add
dec
loop
and
adc
jp
add
ja
loopne
sbb
test
push
ins
adc
test
shr
fs
sbb
add
xor
add
mov
ins
inc
dec
mov
out
sbb
stos
aas
out
movs
adc
(bad)
inc
imul
inc
pop
cmp
dec
dec
sub
dec
and
sti
fstp
push
mov
add
test
nop
xor
cmp
loope
lods
jge
add
in
cmp
push
lahf
jnp
or
dec
dec
cmp
pop
sti
in
cs
pop
cmp
jne
adc
js
sbb
sub
add
inc
mov
inc
ror
repz
push
and
pop
mov
rcl
outs
data16
popa
jb
push
cli
xchg
pop
dec
outs
arpl
gs
adc
mov
cdq
mov
adc
mov
or
mov
outs
imul
and
sbb
mov
cmp
daa
mov
ror
or
pop
add
adc
add
add
push
jnp
pop
cmp
mov
js
dec
xchg
cmp
cmp
dec
or
xchg
add
add
cwde
jmp
push
stos
retf
jne
jns
mov
push
outs
repnz
push
sub
sub
int3
mov
xchg
xor
mov
cmp
addr16
sti
cmp
dec
cmp
add
add
cmp
and
fwait
cmps
xchg
or
int
push
ret
cld
in
je
mov
inc
push
add
js
nop
fst
push
out
dec
stos
lahf
scas
mov
call
addr16
ret
mov
movs
xlat
ret
dec
push
sar
push
call
pop
cmp
xor
dec
sub
push
mov
adc
pop
into
push
mov
test
or
cdq
push
lea
push
mov
or
rcl
ins
je
ret
clc
ret
sbb
xor
or
cmps
popf
fimul
sbb
push
push
pop
addr16
jmp
fcmovne
rol
or
add
ret
jmp
pop
inc
or
adc
jecxz
xor
dec
je
add
mov
pop
jo
xchg
mov
daa
cs
inc
add
push
ror
iret
dec
xchg
or
adc
dec
aad
dec
mov
bsf
loopne
push
sbb
adc
cmp
shl
cld
push
pushf
push
cmp
repz
add
push
inc
sub
leave
xlat
add
sub
mov
call
xchg
scas
mov
lea
pop
dec
std
sar
repz
cmp
sbb
ret
outs
cmps
xchg
je
adc
pop
jmp
mov
sub
and
out
pop
cmc
data16
clc
mov
ins
sbb
xor
iret
nop
sub
xchg
pop
ret
xor
loop
(bad)
imul
dec
fisttp
cmps
adc
pop
jns
inc
or
pop
repz
and
mov
cmp
dec
mov
mov
adc
sbb
xchg
dec
jne
dec
mov
push
cmp
fwait
jle
push
sbb
push
ret
pop
pop
idiv
popa
mov
dec
and
pop
push
jmp
test
mov
push
and
enter
add
push
nop
cmp
lock
jo
dec
jne
call
cmp
jae
add
mov
je
jg
(bad)
xchg
inc
push
aas
je
cmp
repnz
or
sbb
outs
aaa
jge
add
add
push
mov
ret
int
mov
push
inc
jecxz
xor
je
jmp
push
push
push
pop
xchg
jb
pop
mov
jg
add
sbb
inc
adc
adc
pop
add
pop
mov
ret
push
adc
adc
or
cli
cmp
lock
sub
add
dec
jl
mov
inc
je
stos
or
or
out
jmp
dec
sub
mov
lock
xor
into
ret
mov
ins
jmp
test
mov
das
jmp
adc
xchg
jmp
mov
cli
jns
sbb
sbb
or
and
dec
lds
test
add
add
mov
cmp
mov
call
add
jmp
stc
std
popf
icebp
mov
mov
mov
mov
jecxz
popa
xor
cmp
mov
add
test
or
push
sti
retf
mov
fiadd
outs
loopne
sbb
cmp
(bad)
jne
arpl
pop
pop
pop
xchg
je
jl
mov
or
pusha
mov
cmp
jle
sub
scas
mov
pop
in
ror
pop
aad
lock
pop
(bad)
pusha
xchg
sbb
xor
dec
xchg
mov
sub
jle
fisttp
push
pop
loope
pop
cmp
ins
add
mov
(bad)
push
cmp
sub
add
aas
mov
sub
and
pop
loop
adc
sbb
jmp
fstp
imul
and
xlat
pop
inc
mov
xchg
lock
cli
or
repnz
not
dec
fadd
sub
pop
pop
sub
sub
lahf
push
xlat
ins
push
(bad)
rol
dec
clc
pop
push
(bad)
out
(bad)
fnstcw
adc
add
add
mov
sbb
pop
retf
or
and
add
cmp
icebp
mov
jne
aaa
outs
push
fidiv
pop
in
push
xor
cmp
gs
jecxz
(bad)
jnp
jnp
mov
popf
push
lea
or
idiv
jne
dec
cmps
fcomip
pop
loop
aaa
add
push
inc
je
pop
adc
les
mov
push
xchg
dec
std
inc
pop
pop
sub
jmp
lock
adc
loope
inc
inc
jl
je
cmp
sub
sbb
lea
fucomi
hlt
(bad)
imul
leave
shr
je
sub
sub
push
push
add
add
inc
call
fincstp
fmul
loopne
add
stc
enter
sub
rol
out
ret
inc
mov
rcl
aas
mov
cmp
cli
or
or
xchg
lahf
cmp
ret
mov
adc
dec
jle
and
sbb
add
cld
inc
mov
mov
pushf
test
daa
sub
test
sti
iret
xchg
sub
sub
pop
jecxz
add
leave
sbb
xor
cs
jbe
imul
cmp
mov
xchg
mov
mov
bound
cmp
xlat
fadd
in
nop
lods
outs
xor
xchg
push
or
push
push
int3
ud0
dec
sbb
ror
mov
push
pop
test
enter
mov
cmp
(bad)
(bad)
dec
and
daa
(bad)
retf
into
pop
inc
test
xchg
clc
js
aas
sbb
pop
(bad)
mov
addr16
(bad)
(bad)
inc
inc
xchg
and
cld
gs
sahf
mov
sub
inc
aad
iret
dec
(bad)
(bad)
fistp
js
inc
mov
stos
mov
cmp
or
mov
pop
out
sub
(bad)
(bad)
jmp
imul
(bad)
div
jl
xor
cmp
call
mov
(bad)
(bad)
(bad)
call
push
inc
mov
push
sbb
sar
repnz
test
nop
(bad)
(bad)
call
nop
inc
pop
stos
clc
scas
adc
(bad)
inc
pop
pushf
mov
pop
pushf
mov
fs
aam
(bad)
(bad)
push
imul
loope
jp
iret
inc
bound
ds
push
cmps
scas
mov
pop
or
(bad)
(bad)
(bad)
inc
dec
dec
in
xchg
cmp
xor
in
cmp
sahf
xchg
pop
cmps
lock
(bad)
call
aaa
popa
mov
fsub
addr16
repz
mov
sub
and
into
clc
inc
and
outs
bound
xor
mov
mov
add
pusha
dec
aaa
arpl
stc
data16
hlt
mov
mov
mov
pop
cmps
mov
clc
push
jb
dec
inc
mov
cs
sub
mov
xchg
push
or
cmp
add
mul
in
inc
inc
add
add
cld
es
jbe
add
or
addr16
xchg
add
mov
mov
sub
outs
sbb
and
push
adc
and
dec
xchg
inc
inc
js
xchg
xchg
cmp
xor
fdivr
mov
jge
mov
push
aad
test
ss
bound
jbe
loop
aaa
jmp
push
mov
mov
shl
mov
test
jne
mov
ret
cmp
not
xor
mov
and
and
pop
inc
arpl
mov
mov
sbb
xchg
pop
mov
and
mov
xchg
rol
xor
push
jge
ins
mov
add
sahf
rcl
pop
mov
and
movs
push
add
xor
cmp
mov
sbb
js
jo
fs
inc
ins
push
push
pusha
pop
pop
leave
inc
push
sbb
mov
or
enter
mov
pushf
cwde
xchg
xor
and
and
and
jo
or
enter
pusha
or
enter
push
xor
and
and
and
xor
sub
or
enter
adc
enter
or
in
or
cld
mov
push
sbb
clc
hlt
lock
sbb
call
nop
inc
(bad)
aam
nop
inc
push
ror
enter
sbb
shr
or
mov
xor
and
and
and
or
mov
mov
and
in
xor
and
and
inc
push
cmp
xchg
mov
pushf
push
sbb
mov
inc
cmp
inc
push
je
ins
nop
inc
push
sbb
pusha
inc
push
sbb
push
push
sbb
dec
dec
inc
sbb
inc
cmp
fs
inc
push
xor
sub
inc
push
sbb
and
inc
push
sbb
adc
sbb
or
add
jb
inc
add
mov
std
fisttp
add
shl
or
ret
shr
ret
mov
and
push
or
or
or
xor
rcl
adc
sbb
std
vmread
push
xchg
xor
pop
ret
cmps
jns
xchg
and
adc
dec
repnz
aad
les
xchg
fcomp
outs
or
xchg
enter
jmp
enter
push
or
popa
jb
push
add
dec
sahf
sub
sbb
add
add
pop
jbe
pop
(bad)
push
dec
cld
data16
add
inc
js
gs
mov
mov
xchg
clc
add
inc
inc
bound
nop
and
(bad)
adc
cld
sahf
pop
lock
dec
jne
dec
dec
gs
fwait
jns
sbb
pcmpeqb
sti
inc
or
outs
mov
rcl
or
frstor
or
xchg
ds
inc
or
imul
outs
nop
pop
adc
pop
(bad)
leave
push
sbb
push
popa
outs
movs
xchg
movs
repz
pop
inc
dec
jbe
jb
ins
outs
ja
ret
test
lahf
ds
dec
popa
je
xor
jg
jl
ds
mov
dec
outs
jbe
ins
push
xor
nop
mov
hlt
push
test
xchg
fadd
popa
das
and
(bad)
fild
mov
push
outs
fs
inc
ret
test
nop
jo
idiv
pop
ret
maxps
imul
fimul
inc
inc
popa
jae
adc
pop
pop
and
adc
inc
inc
icebp
xchg
xor
jb
pusha
lahf
pusha
add
sbb
pop
arpl
pop
clc
popf
jae
push
lahf
ins
popa
test
je
movs
inc
mov
jg
(bad)
js
jb
ins
adc
dec
push
inc
push
je
arpl
mov
push
lahf
push
nop
xchg
jle
jne
inc
ja
push
adc
pop
ficom
mov
pop
in
lahf
jl
imul
js
in
pop
lds
loop
gs
ja
mov
and
mov
xchg
cmps
xchg
push
pop
sub
inc
outs
cdq
jb
icebp
nop
and
in
js
cmp
xor
jg
xchg
imul
inc
jle
out
icebp
fs
inc
push
repnz
nop
inc
push
sbb
div
inc
push
sbb
cli
push
sbb
cld
std
(bad)
sbb
jmp
loope
nop
inc
push
loop
in
inc
push
sbb
out
inc
push
sbb
jmp
in
out
sbb
out
rcl
fs
inc
push
rcl
aam
inc
push
sbb
(bad)
xlat
inc
push
sbb
fiadd
sbb
(bad)
ficomp
fs
inc
ffreep
shl
ret
nop
inc
push
sbb
mov
push
sbb
retf
fs
retf
int3
int
sbb
iret
mov
fs
inc
push
mov
mov
inc
push
sbb
sbb
mov
mov
fs
inc
mov
inc
push
mov
pop
sbb
ret
adc
repz
mov
addr16
out
retf
mov
out
hlt
shl
pusha
outs
loope
pop
ret
jae
aas
adc
and
xor
imul
ret
add
sbb
lahf
sub
cs
inc
sahf
out
(bad)
mov
inc
mov
add
push
cmp
ja
sub
mov
std
and
jne
mov
sbb
rcr
add
rcr
or
lea
cmp
jbe
cmp
dec
fs
repz
je
movzx
pop
push
(bad)
cmp
lgs
ss
popa
sub
loopne
into
or
pop
fmul
jg
(bad)
(bad)
out
and
sti
je
mov
xor
sub
pop
jg
sub
mov
xor
call
lods
mov
test
mov
pop
xor
test
pop
ret
inc
fisttp
bound
sbb
and
jo
add
push
(bad)
sbb
mov
loop
(bad)
cmp
jl
cmp
jbe
adc
dec
sub
dec
sub
clc
imul
retf
inc
sbb
push
adc
jno
xor
pop
xlat
xchg
xchg
cmp
xchg
xor
push
push
dec
sti
add
mov
jo
and
in
test
push
fsubr
push
cmp
jne
ja
and
pop
cdq
push
mov
jmp
sub
adc
inc
das
sbb
add
jmp
adc
sub
cmp
lahf
adc
(bad)
jg
std
add
mov
dec
in
idiv
daa
sub
cld
mov
mov
push
call
outs
jmp
sub
mov
jnp
mov
inc
xor
call
mov
dec
imul
mov
or
mov
inc
(bad)
popf
mov
dec
addr16
ret
ins
shr
das
outs
pop
add
clc
add
push
mov
mov
or
sbb
or
mov
push
outs
mov
sub
pop
movs
xchg
andnps
ret
inc
add
std
sbb
or
and
clc
mov
push
mov
pop
lock
adc
in
mov
adc
push
ins
clc
xchg
xchg
push
int3
pop
push
mov
push
stos
fiadd
rcr
jmp
add
lock
rcl
sub
test
xor
popf
sbb
or
push
inc
pop
fdivr
rol
data16
dec
mov
outs
or
mov
dec
push
mov
in
sub
push
js
sbb
add
jno
mov
scas
push
and
int3
mov
adc
cmp
adc
mov
idiv
adc
dec
push
enter
int3
rcl
mov
inc
cld
or
xchg
inc
inc
setne
pop
pop
iret
cld
retf
retf
sub
mov
sbb
push
test
dec
jmp
(bad)
push
dec
adc
inc
jmp
push
inc
sub
cmc
ss
mov
stos
out
inc
cmp
xchg
mov
cmovl
or
add
adc
add
daa
loopne
pop
add
aam
fnstcw
and
int3
(bad)
rol
adc
(bad)
fisttp
mov
inc
je
pop
int3
mov
mov
sbb
jmp
pop
pushf
enter
cmp
push
push
mov
call
sbb
xlat
xor
add
or
add
inc
cld
aaa
adc
add
(bad)
xor
add
jp
ror
test
sub
sbb
imul
push
jno
sbb
or
push
dec
dec
dec
jg
cmps
loopne
pop
clc
mov
pop
mov
xor
fadd
jo
mov
pusha
sbb
dec
cs
test
add
push
push
pusha
ror
pop
sbb
iret
in
sub
add
imul
pop
cmp
xor
jno
lock
dec
and
adc
arpl
aas
push
dec
jmp
jne
push
add
xchg
les
pop
dec
bswap
mov
inc
push
or
mov
push
jmp
rcl
jge
iret
inc
fadd
inc
pop
jecxz
and
mov
xchg
dec
mov
pop
scas
pusha
or
stc
mov
fsubr
cmp
push
add
or
(bad)
xchg
or
xchg
add
sbb
push
jg
xchg
(bad)
imul
push
icebp
inc
je
pop
push
enter
and
and
jg
mov
aad
and
movzx
rol
jmp
(bad)
shr
add
cmp
pop
in
fwait
jg
jecxz
iret
push
adc
push
jge
mov
out
cmps
retf
mov
fisubr
fadd
adc
in
push
hlt
frstor
(bad)
dec
pop
fnsave
add
sub
mov
cmp
or
pop
sbb
xor
jbe
pop
jmp
push
add
sahf
xchg
xchg
repnz
pusha
xor
mov
pop
and
loop
pushf
movs
jge
or
adc
or
sti
shl
inc
div
cli
cmps
jmp
or
bound
cmp
sahf
ins
cld
imul
dec
fadd
nop
in
cmc
sub
dec
and
jb
sub
and
sbb
jb
adc
loop
(bad)
lods
jecxz
mov
cli
jmp
enter
das
lea
cmps
pop
inc
lahf
(bad)
mov
mov
adc
imul
call
std
xlat
push
std
and
add
dec
mov
dec
sbb
lahf
(bad)
call
cmps
pop
retf
mov
inc
inc
outs
iret
mov
dec
pop
fs
pop
pop
pop
div
and
push
cmp
sub
mov
xor
or
mov
dec
jnp
adc
inc
push
mov
push
pop
cli
cli
pop
add
jmp
push
push
xlat
not
bswap
and
mov
adc
cmp
sbb
into
out
loope
pop
enter
dec
pop
ret
imul
jb
cs
mov
pop
sub
jbe
sbb
jp
loopne
lods
les
mov
fst
or
cld
loope
shl
jmp
push
mov
aaa
int3
(bad)
mov
sub
fwait
sub
pop
hlt
ret
xor
das
out
sar
ret
inc
add
not
and
pop
(bad)
push
inc
inc
or
add
dec
inc
data16
inc
(bad)
cmp
jle
mov
cmovg
add
dec
mov
mov
repnz
ins
mov
cmp
aaa
and
mov
and
and
sub
ret
push
or
ins
jp
push
loopne
xchg
push
ror
adc
xor
hlt
lock
sar
lods
pop
and
push
push
jg
sub
popa
movs
cs
mov
sbb
pop
fisubr
jne
mov
and
lods
jmp
adc
mov
(bad)
lods
dec
mov
loopne
jne
(bad)
lock
fisub
pop
mov
jae
fild
sahf
(bad)
cdq
or
retf
shr
movs
xchg
pop
inc
sub
sti
mov
rep
sbb
hlt
(bad)
ficomp
dec
push
movs
data16
pop
mov
jg
in
clc
sub
xor
cmp
imul
lahf
xor
mov
fisub
es
pop
push
inc
int3
cmp
pop
add
or
dec
jnp
jl
aam
add
ret
sbb
je
dec
fsubr
jmp
out
push
push
cmp
pop
icebp
and
(bad)
mov
push
fwait
and
shr
div
mov
xlat
dec
cmps
pop
mov
cs
pop
ss
mov
call
icebp
mov
in
mov
sub
jbe
cmp
je
mov
push
je
pop
jne
mov
pop
(bad)
pop
(bad)
fidiv
push
ret
pop
sub
jne
test
push
cmp
pop
xor
cs
jmp
ds
add
jb
jne
or
out
test
xor
cli
ret
mov
jne
retf
push
cld
push
rcl
test
lock
ret
lock
outs
jg
hlt
jmp
xor
inc
push
jns
mov
or
enter
pushf
sbb
add
mov
mov
aaa
outs
lock
imul
addr16
sub
and
div
cmp
ja
jb
mov
shl
add
es
dec
mov
arpl
pop
ficomp
push
in
mov
or
data16
add
mov
pop
(bad)
jge
ins
mov
inc
je
mov
or
add
adc
add
repnz
jnp
mov
mov
or
and
sbb
sbb
aam
mov
aaa
or
mov
loope
adc
mov
inc
sub
clc
mov
mov
inc
mov
push
shl
mov
push
push
pop
rcr
add
add
or
dec
add
or
sbb
loope
(bad)
jb
hlt
add
xchg
mov
pop
inc
or
lea
loopne
sbb
mov
xor
mov
test
sti
pop
dec
outs
ret
cli
add
sub
cmp
jge
aaa
imul
push
fcmovu
std
mov
cmc
jmp
jg
mov
clc
mov
inc
jmp
add
lods
or
add
retf
lea
setb
loope
ds
lea
xor
mov
or
cmp
in
std
ror
pusha
sbb
push
sar
(bad)
fstp
fmul
add
cmp
pop
or
sti
inc
pop
rcl
neg
fld
dec
xor
inc
fist
add
adc
sub
xchg
inc
jmp
jg
arpl
sbb
or
cmp
dec
stc
inc
clc
add
cmp
aas
ss
pop
imul
shr
pusha
jmp
adc
or
fild
loop
aaa
add
sbb
pop
sti
fcomp
or
push
xlat
(bad)
in
add
hlt
in
push
cmp
retf
jnp
mov
mov
iret
jo
loopne
mov
loopne
adc
pmuludq
pop
sbb
int3
jnp
fst
jbe
loope
pop
(bad)
out
in
mov
outs
mov
imul
mov
iret
mov
cmp
ss
fs
push
cmp
mov
and
ret
and
or
daa
add
les
dec
or
inc
js
mov
mov
outs
add
sbb
(bad)
stc
into
add
and
popa
cli
pop
mov
adc
cmp
bswap
ins
xor
inc
ret
lea
lea
out
inc
add
ja
and
fnsave
or
jb
sti
ins
icebp
(bad)
cmp
movs
test
bound
dec
mov
idiv
add
inc
dec
jne
sub
dec
mov
xor
imul
add
jl
adc
sub
aas
pop
add
popa
ret
or
jae
jne
sar
adc
loope
std
rol
mov
inc
xor
pushf
jge
ins
jo
jb
cmp
jge
stos
push
mov
and
test
data16
push
jns
scas
push
and
add
call
dec
data16
cmp
adc
or
ret
in
and
xor
not
hlt
loope
mov
xor
fnstsw
add
or
add
jmp
sbb
push
push
cmp
pop
mov
in
add
cmp
xchg
sub
daa
dec
push
mov
loope
fwait
mov
enter
sbb
mov
mov
(bad)
or
sbb
inc
jmp
xor
mov
or
call
movs
rol
inc
dec
sub
in
xor
cld
mov
stos
pop
dec
ret
dec
call
push
dec
push
loop
push
or
add
or
punpcklwd
add
dec
sahf
(bad)
in
sbb
push
adc
adc
jp
and
outs
fidivr
jo
and
fstp
outs
and
imul
int
inc
cmps
inc
push
cmps
sub
dec
or
not
movs
fstp
sub
cdq
jl
rcr
ficomp
xor
and
lea
push
popf
mov
add
ins
test
in
out
outs
nop
pop
aas
fneni(8087
rcl
shl
shl
shl
add
pop
call
jae
dec
cwde
jo
add
fisubr
rcr
daa
mov
mov
rcr
jmp
inc
mov
sar
dec
sti
je
outs
arpl
mov
out
push
cmp
cs
adc
out
int3
mov
out
or
xchg
repnz
leave
jb
inc
inc
in
add
jecxz
enter
push
in
jge
call
jmp
jno
sahf
call
enter
fidivr
add
std
repnz
xchg
out
cmp
adc
adc
cmovge
mov
push
push
fwait
in
(bad)
cld
and
es
jno
test
mov
cmps
fmul
sub
jne
punpcklbw
ror
mov
or
sub
lods
cld
ins
xchg
lock
inc
mov
xchg
pop
add
das
lds
xchg
add
xlat
aas
je
push
mov
or
enter
adc
hlt
daa
push
mov
adc
stc
and
les
xor
sbb
ins
sbb
jbe
out
xor
xlat
in
retf
pop
(bad)
sub
xor
paddq
adc
loope
jmp
repnz
and
jmp
imul
xor
push
or
test
or
cmp
out
jns
sbb
in
out
jns
jns
(bad)
and
pop
imul
jle
fsub
les
pusha
mov
mov
inc
adc
push
pop
jecxz
sar
mov
call
pop
cld
sub
mov
push
not
pushf
ins
ds
dec
repz
sar
add
sub
jae
push
mov
or
dec
jne
mov
std
(bad)
icebp
xchg
xchg
arpl
imul
xchg
mov
push
adc
and
pop
test
push
or
lahf
mov
or
or
or
fild
push
push
add
or
or
push
rcl
test
retf
dec
xchg
jbe
fcom
dec
or
cmps
cdq
mov
mov
stos
inc
jo
pop
or
pop
sbb
or
dec
movs
repnz
mov
pop
fistp
mov
inc
mov
call
hlt
and
fdivr
push
repnz
aam
push
xchg
fidivr
xchg
hlt
dec
adc
push
inc
lock
xor
lock
add
jecxz
lock
xchg
xor
movs
leave
movs
std
(bad)
mov
or
je
add
sbb
cdq
aad
push
dec
mov
lods
or
mov
inc
jb
xchg
dec
ins
mov
pop
pop
movs
pop
mov
inc
inc
pop
loope
jne
jbe
dec
xor
inc
push
or
inc
add
das
sub
mov
in
dec
retf
out
sub
jnp
and
add
sti
xchg
push
pop
sub
je
pop
je
jmp
cmp
dec
mov
in
mov
fs
adc
scas
scas
sub
mov
jp
jne
xchg
jmp
daa
loope
shl
or
test
test
movs
lahf
jmp
mov
mov
or
cld
ror
push
push
bound
pop
in
jbe
cmp
popa
out
sub
push
add
and
push
lock
push
xor
sub
jmp
cmp
pushf
cmp
cmp
add
pusha
stos
lds
add
adc
add
addr16
adc
adc
subps
xchg
int3
and
nop
add
das
add
aaa
mov
add
and
dec
nop
adc
pop
add
inc
(bad)
or
or
cwde
loopne
xor
mov
mov
ins
inc
adc
xor
pop
jmp
sub
pop
js
bound
jmp
jmp
in
sbb
je
adc
fadd
jne
mov
inc
(bad)
push
pop
fwait
mov
and
fstp
jno
dec
xor
push
mov
add
dec
das
push
dec
ret
outs
inc
or
ucomiss
clc
ins
fmul
test
div
mov
jmp
push
mov
xchg
(bad)
movs
sti
sbb
(bad)
mov
fist
imul
mov
xchg
and
jg
and
aaa
cmp
jg
or
xor
je
mov
addr16
ror
xchg
fild
pop
and
xor
jnp
jge
add
popa
jg
jne
sar
add
(bad)
xor
(bad)
jge
mov
adc
sub
jae
xor
push
add
int
jae
push
mov
add
(bad)
jl
mov
stos
add
pushaw
mov
or
fild
retf
xor
mov
mov
ss
mov
mov
and
add
mov
mov
mov
mov
mov
jmp
pop
jl
aas
clc
loopne
pop
jae
(bad)
cmp
ja
or
jl
(bad)
(bad)
call
test
jmp
sub
je
dec
je
sub
(bad)
pop
pop
imul
je
jmp
mov
jmp
push
push
push
mov
std
inc
add
push
inc
mov
jle
fdivr
(bad)
jmp
mov
aam
and
dec
xor
test
or
xlat
rcl
pop
mov
pop
call
add
mov
mov
or
retf
jae
jo
mov
rol
pop
cwde
pop
(bad)
(bad)
jmp
inc
icebp
enter
jne
push
mov
out
nop
xor
sar
jne
cmp
jg
push
sti
punpckhbw
cdq
xor
sub
add
ror
shl
js
hlt
adc
pop
add
ds
cld
gs
mov
mul
in
xor
dec
add
cld
outs
nop
or
out
add
mov
mov
imul
(bad)
pop
jl
mov
in
mov
pop
shl
jmp
mov
inc
or
sub
lea
sbb
push
jl
jbe
adc
in
lock
(bad)
push
fisttp
mov
mov
jmp
test
sahf
cdq
ins
add
or
or
push
repnz
iret
xchg
add
popf
mov
sub
jb
sbb
cs
mov
std
xchg
mov
inc
xchg
repnz
adc
stos
sbb
lock
aam
not
cdq
jnp
jge
pop
mov
mov
rcr
gs
sub
clc
jmp
xor
jge
add
popa
or
push
xor
pop
mov
or
or
adc
movs
inc
dec
outs
mov
sub
pop
fwait
push
dec
hlt
or
mov
ja
mov
sub
push
push
or
jne
es
movs
sar
(bad)
xlat
sbb
adc
in
xor
mov
sbb
push
call
call
mov
or
out
jge
(bad)
xchg
sbb
mov
fsubr
mov
retf
xor
add
add
push
outs
add
mov
push
repnz
fild
push
sti
jnp
test
adc
and
loop
pop
xor
inc
daa
fs
inc
add
mov
test
push
sub
or
cmps
ja
sbb
add
xchg
inc
and
xor
aaa
mov
ss
pop
inc
dec
dec
dec
push
aam
or
movs
(bad)
jge
lods
or
mov
loopne
leave
mov
(bad)
ja
jne
inc
add
jne
lods
push
add
mov
or
pop
or
imul
dec
mov
pop
dec
daa
or
aas
fcom
fwait
or
xchg
jne
mov
add
adc
stc
jge
sbb
pop
sbb
dec
push
cmp
repnz
les
loopne
dec
push
pop
mov
inc
(bad)
fnstsw
fistp
xchg
inc
fnstsw
sahf
jb
sbb
iret
fstp
fwait
mov
push
gs
add
xchg
loopne
add
rcl
sub
mov
js
nop
add
mov
out
call
mov
sub
jb
or
adc
add
jbe
repz
add
icebp
sub
cmps
xor
jne
pusha
and
jmp
adc
pusha
sub
dec
mov
push
sbb
cmp
arpl
push
add
iret
sbb
inc
adc
pop
movs
sbb
xchg
mov
or
jns
xchg
pop
hlt
mov
xchg
pop
add
iret
pop
mov
hlt
add
push
push
addr16
add
inc
inc
dec
movs
adc
dec
popa
mov
inc
and
xor
cmp
inc
mov
movs
sti
or
fstp
pusha
add
and
push
mov
add
cld
add
fld
add
mov
sub
or
movs
in
sti
and
(bad)
je
or
adc
lahf
cld
(bad)
out
xchg
ds
adc
inc
add
inc
shl
scas
fcmovb
ret
xlat
pop
jmp
mov
in
test
pop
icebp
mov
lock
xor
mov
mov
cmp
loop
test
(bad)
test
sbb
es
or
mov
push
lds
mov
int3
cli
xor
sar
retf
es
push
xor
not
xchg
jo
add
or
or
lods
mov
rdmsr
arpl
imul
xchg
dec
mov
push
adc
or
add
or
cmp
push
fisttp
fcos
fist
and
inc
je
sub
je
mov
pop
sbb
cmps
sbb
movs
cmp
sar
les
mov
adc
loopne
ins
and
mov
arpl
and
xor
mov
push
fwait
jge
mov
and
out
call
sub
adc
jb
dec
add
push
mov
retf
adc
pop
je
jne
xor
lds
xchg
icebp
jle
pushf
or
pop
lds
clc
cmps
addr16
add
pop
sbb
int3
pop
pop
add
push
sub
xor
das
gs
enter
push
add
neg
sub
mov
in
add
int3
scas
inc
pop
pusha
sbb
fwait
push
sbb
pop
mov
or
mov
jbe
xor
(bad)
fadd
shl
mov
outs
add
mov
or
in
sbb
sahf
add
mov
in
dec
pop
sub
xor
cld
nop
fdiv
loopne
(bad)
inc
sub
dec
cs
dec
inc
sub
ror
inc
test
sbb
cmp
fs
pop
and
ret
add
test
mov
iret
mov
xchg
cld
push
sbb
sbb
sub
xchg
nop
inc
xchg
pushf
lock
jb
mov
(bad)
call
xor
xor
jp
das
fs
mov
push
add
xlat
ss
sar
lar
pop
jo
cmp
inc
mov
sbb
dec
data16
idiv
int
push
cmp
inc
mov
sub
fldcw
test
fdivr
add
dec
jmp
push
je
push
outs
mov
sub
std
mov
add
push
and
hlt
cmp
push
cmp
inc
mov
popf
xchg
icebp
not
push
shr
(bad)
sar
rol
repz
add
adc
mov
xor
icebp
or
pop
je
add
and
add
pusha
adc
ret
setne
in
mov
add
sar
test
and
xchg
dec
mov
mov
loopne
sbb
and
test
int
jnp
(bad)
clc
pop
mov
iret
in
mov
mov
popa
lock
sahf
cld
push
lea
int3
push
arpl
add
in
ret
adc
add
push
loope
sbb
add
popf
es
ror
shl
lods
mov
clc
push
pop
bound
(bad)
das
lods
adc
dec
push
icebp
mov
inc
sahf
mov
das
sbb
push
das
push
ror
imul
cli
popf
jg
xor
les
hlt
cmps
pushf
sbb
popf
dec
lea
loopne
outs
xor
cmp
and
ins
fidiv
mov
xchg
imul
imul
and
sub
mov
pop
or
imul
adc
aas
cmp
or
ret
or
aad
push
or
or
arpl
mov
sub
pop
imul
cmp
jg
or
adc
add
xor
mov
arpl
aad
pop
inc
ss
popa
(bad)
mov
loop
nop
dec
inc
jl
push
push
lods
mov
or
repz
por
xchg
dec
hlt
pop
clc
lahf
nop
sbb
cmps
or
fidiv
inc
fst
ror
or
adc
jb
jmp
mov
mov
add
or
adc
lahf
cs
out
jmp
fmul
pop
loopne
mov
dec
loopne
cld
cmp
add
or
ror
aas
mov
lods
push
push
xor
call
dec
repz
or
clc
in
shl
dec
loopne
gs
mov
add
xlat
call
sar
repnz
sub
sar
nop
addr16
nop
arpl
push
icebp
call
imul
inc
gs
dec
push
cmp
je
jmp
xor
inc
inc
jle
push
xor
and
sbb
mov
add
sub
pop
or
or
push
push
aas
and
arpl
jno
cli
cdq
mov
dec
cmp
(bad)
fidiv
or
mov
jno
add
cmp
bndldx
xchg
pop
stc
(bad)
jo
sbb
inc
loopne
mov
push
jge
add
mov
test
dec
jnp
aaa
cmp
mov
aaa
xchg
fs
(bad)
push
or
scas
dec
mov
xchg
fisttp
or
mov
call
or
enter
shr
mov
frstor
pmulhw
arpl
ror
sub
inc
data16
movs
test
repnz
inc
dec
cwde
add
dec
mov
mov
push
call
or
in
ret
(bad)
jb
sahf
inc
out
lock
push
scas
ds
pop
cld
iret
rol
test
jp
ins
sbb
lea
add
inc
xchg
or
inc
add
inc
inc
lods
pop
repnz
ret
jmp
jo
add
xchg
inc
or
push
(bad)
sbb
cmp
pushf
ret
xchg
lods
sbb
xor
mov
pusha
or
das
in
jo
push
inc
loopne
bound
ror
and
mov
cmps
stc
jl
adc
adc
cmp
jnp
adc
mov
mov
adc
jo
xchg
inc
add
xchg
addr16
movs
test
xchg
or
or
adc
fmul
inc
and
mov
add
and
add
sub
shr
and
je
movs
or
inc
inc
ins
jmp
push
push
sub
sub
leave
ins
movs
add
adc
mov
or
sbb
pop
cwde
jle
xchg
adc
add
fwait
dec
pusha
(bad)
xchg
sbb
cli
jne
mov
sub
jo
aaa
push
sub
mov
and
add
pop
je
xor
adc
adc
pop
xor
xchg
jp
pmovmskb
dec
or
cmp
inc
xor
cmp
daa
cmc
or
cmp
xor
cmp
xor
rcr
mov
enter
add
int
jecxz
dec
dec
repz
and
lock
jl
mov
and
inc
push
mov
mov
xor
and
xchg
or
xchg
jmp
rcl
push
(bad)
loope
pop
fstp
addr16
or
sbb
mov
push
push
enter
and
adc
leave
nop
cmp
es
xchg
aas
fstp
sbb
loopne
xchg
cs
movs
sti
add
ja
xchg
sbb
jecxz
or
xor
sbb
pop
xchg
or
or
in
dec
and
call
inc
mov
dec
ins
fsubr
jge
pop
mov
scas
xor
cmp
push
scas
lds
cmp
sti
sub
inc
mov
cwde
push
psadbw
mov
inc
(bad)
fwait
je
test
je
and
cmp
jg
xchg
xchg
lock
cdq
pop
aad
loope
jp
sar
xchg
xchg
mov
jmp
adc
clc
sar
sbb
sub
add
ret
add
out
pusha
sub
ret
sub
cmp
jle
fimul
push
mov
pop
mov
lock
daa
ret
add
push
(bad)
(bad)
mov
jno
inc
sub
dec
or
out
mov
push
add
je
add
inc
mov
fcomp
call
mov
mov
or
sbb
or
sbb
jmp
xchg
inc
pop
or
mov
lock
data16
add
jmp
or
out
adc
sub
mov
pop
and
cld
(bad)
jmp
mov
sub
jb
inc
mov
ds
stos
pop
(bad)
adc
sub
or
mov
int3
rcr
mov
in
or
mov
into
out
dec
test
aas
xchg
aas
inc
xchg
or
adc
pop
pop
es
lea
mov
sbb
dec
scas
ins
outs
mov
cld
mov
shl
mov
in
stos
es
xchg
sub
xlat
stos
fisttp
push
outs
sbb
cmp
fidivr
or
add
adc
mov
push
dec
ror
or
inc
sbb
lods
add
cs
movs
pusha
pushf
pop
xchg
cmps
imul
sub
jl
data16
ins
or
shl
lock
push
call
cmps
fmul
enter
call
imul
imul
xor
cld
add
inc
sub
push
and
pusha
mov
add
adc
pop
jmp
scas
aas
adc
inc
dec
inc
dec
repnz
ss
test
sbb
xchg
jo
pop
pop
scas
mov
jge
mov
adc
retf
or
mov
add
fbstp
mov
push
(bad)
out
lock
sub
lea
scas
push
dec
rep
jmp
lea
movzx
cmp
jge
stc
je
add
or
mov
add
aam
push
ror
push
outs
neg
mov
and
pop
rcl
push
lds
scas
dec
or
add
push
pop
pop
mov
add
stc
adc
cmp
dec
in
sar
dec
or
pop
cmp
jl
or
jg
dec
cli
out
(bad)
scas
stos
jmp
pop
rep
out
fist
mov
loop
push
adc
mov
inc
stos
sbb
inc
clc
push
or
ins
iret
add
sub
fidiv
mov
and
dec
xor
add
add
inc
mov
mov
gs
stos
or
shr
or
cmp
dec
neg
jmp
in
mov
stos
xchg
jmp
and
inc
shl
xor
push
mov
test
mov
stos
cmp
jne
pop
cmp
(bad)
in
cmp
jb
mov
xor
stos
add
aas
xor
add
repz
inc
sbb
add
sbb
dec
jne
mov
mov
mov
std
jecxz
jo
je
inc
jne
xor
fild
dec
jne
ret
lea
xor
nop
call
dec
cmp
jbe
mov
add
lea
call
test
je
push
push
cmp
inc
pop
or
sub
pop
or
cmp
outs
sahf
mov
loop
ret
daa
pop
cmp
out
movs
add
and
mov
fild
inc
add
and
and
adc
and
sub
inc
ja
sti
mov
or
sub
sbb
pop
jnp
and
sub
sub
imul
sub
sub
inc
pop
fnstenv
pop
mov
adc
inc
pop
or
aaa
sti
call
shr
jmp
dec
inc
or
and
or
dec
or
pcmpeqd
mov
aam
ret
hlt
scas
sub
and
cmc
dec
movs
movs
rcr
cld
(bad)
dec
and
pop
or
outs
jnp
je
into
jne
adc
adc
xor
add
lock
ss
clc
sub
push
das
jecxz
cmp
dec
mov
inc
in
or
mov
sbb
and
and
adc
pop
data16
mov
push
add
inc
sbb
ret
fsubp
cmps
aas
jg
cmp
je
xor
jmp
std
cmps
mov
or
retf
mov
cmps
std
(bad)
out
add
es
je
cmp
je
cmp
je
mov
push
cmp
je
cmp
je
xchg
je
mov
jmp
inc
jmp
dec
mov
jmp
(bad)
jne
mov
(bad)
fdivr
(bad)
jmp
add
mov
scas
adc
pop
mov
sub
xor
lods
mov
add
imul
pop
pop
push
leave
mov
push
ret
jge
aad
mov
pop
ret
push
pop
es
adc
in
fistp
sar
jg
push
add
jae
mov
add
leave
mov
pop
pop
push
push
setbe
or
or
call
repz
push
sbb
and
dec
inc
aam
in
sub
ins
jmp
ins
(bad)
sub
hlt
mov
jl
(bad)
out
cmp
std
or
dec
inc
test
outs
dec
stos
mov
cld
sub
test
pop
jmp
sti
loopne
add
mov
or
pop
cmp
dec
imul
or
xchg
jle
hlt
ins
ret
shr
inc
push
inc
cmp
dec
and
jle
jmp
fsubr
sub
xor
jmp
cmp
das
sub
repnz
jne
jge
xchg
movs
int3
js
cwde
sbb
stc
mov
mov
pop
or
adc
call
push
cmp
jle
cmp
inc
add
pop
jge
mov
outs
jecxz
cs
push
imul
adc
lock
mov
mov
psubusw
pop
pop
cmp
frndint
fld
fucomp
fwait
data16
jle
neg
pop
out
xor
addr16
jne
lea
mov
adc
in
shr
and
add
cmps
cmps
push
add
jmp
shr
jns
cmp
pop
loop
or
xor
jb
mov
js
dec
and
ja
jmp
mov
ja
xor
mov
jle
je
inc
and
or
jmp
add
call
or
je
pop
clc
dec
ret
aas
std
or
daa
mov
in
add
pop
mov
ds
in
jmp
loopne
jae
dec
add
(bad)
lock
pop
hlt
fild
mov
fidiv
or
fistp
mov
jb
or
and
jne
dec
jne
jmp
mov
add
stos
aas
pop
iret
into
push
and
inc
jmp
dec
adc
pop
mov
cmp
imul
jmp
mov
(bad)
lock
fnstcw
fclex
fldcw
push
(bad)
scas
out
pusha
movs
push
ds
or
fnstsw
xchg
add
(bad)
(bad)
nop
cmp
and
jg
jo
sub
adc
xchg
pop
add
sub
test
dec
xor
sahf
sar
lock
loopne
add
aas
jmp
fstp
fstsw
test
das
adc
mov
adc
in
lods
jg
pusha
add
and
sub
add
xlat
cmp
fimul
sbb
stc
test
aas
sbb
push
push
inc
imul
pop
cmp
sahf
jb
add
xor
and
jne
or
fwait
or
out
pinsrw
sub
cmp
xchg
xchg
pop
or
push
dec
xor
sub
pop
enter
or
add
nop
hlt
movs
lock
fisubr
mov
in
adc
in
xchg
dec
es
int3
and
pushf
enter
inc
push
adc
xchg
mov
shl
add
imul
push
popa
xchg
test
push
test
mov
xchg
lods
fs
add
mov
ins
mov
dec
outs
outs
and
in
xchg
add
or
in
xor
movs
sar
leave
popf
rol
or
int3
setl
add
dec
fsub
mov
fsub
enter
cmps
cmps
test
or
stos
stos
or
lods
lods
scas
scas
sbb
loopne
cdq
xchg
add
in
add
stc
je
pop
mov
inc
or
imul
jp
jge
test
mov
or
inc
jmp
jne
test
xor
pop
dec
cmp
add
adc
pop
mov
xor
cmp
jne
mov
xor
test
xor
adc
dec
clc
jg
dec
add
clc
jle
or
cmc
cmp
or
daa
mov
(bad)
adc
jmp
pop
sahf
sbb
mov
pop
or
movzx
and
mov
aaa
sar
sbb
je
mov
and
sbb
inc
loope
dec
inc
fisub
fucomip
idiv
jmp
jg
in
jne
jmp
cmp
sbb
or
sbb
vmovntdq
and
push
addr16
pop
xchg
test
rep
mov
push
dec
hlt
jg
outs
inc
push
or
or
dec
sbb
cmp
dec
jne
mov
mov
mov
mov
jmp
cmps
mov
cdq
dec
dec
or
cmp
shr
mov
sbb
add
(bad)
sbb
jle
mov
xchg
adc
jbe
dec
cmp
jg
mov
mov
mov
and
jg
fistp
ja
lock
cmp
jg
mov
jmp
cmp
jg
mov
jmp
jl
nop
fst
sbb
outs
clc
pop
mov
(bad)
sbb
push
inc
cmp
jbe
inc
clc
adc
and
outs
jbe
loopne
xor
out
pop
xor
mov
ret
adc
ret
adc
sub
icebp
mov
add
shr
adc
ss
or
jle
sub
ss
fs
test
jbe
and
addr16
ins
test
mov
jns
mov
jl
inc
jns
inc
adc
clc
(bad)
adc
adc
xchg
bt
pavgw
iret
jae
push
test
cwde
cmp
mov
xchg
adc
xchg
leave
sahf
sub
mov
mov
jmp
mov
mov
mov
cmp
je
clc
faddp
or
punpcklwd
jp
icebp
dec
jb
ja
mov
adc
sbb
pop
call
and
mov
cmp
cmp
enter
xchg
or
jno
push
jae
cmc
mov
sub
call
rcr
dec
xlat
mov
in
jecxz
repz
fisttp
cmp
or
mov
mov
cmp
ja
jb
add
add
call
sahf
cmp
xor
out
mov
mov
jbe
aam
or
or
add
adc
inc
(bad)
mov
inc
add
test
push
mov
std
jb
sbb
jle
jb
inc
cmp
pop
stos
ins
jnp
or
xlat
or
test
into
mov
cmp
pop
gs
and
out
mov
(bad)
nop
mov
push
mov
and
mov
inc
and
push
ror
xlat
push
test
leave
or
stos
rcr
xor
or
and
jo
xchg
test
out
adc
mov
in
mov
jle
add
mov
clc
inc
jge
daa
dec
xchg
sub
fmul
and
fdivr
fs
mov
pop
mov
lea
and
jmp
mov
mov
pop
pop
xchg
adc
leave
dec
mov
shr
xor
movsx
call
or
xchg
fbstp
paddd
je
jmp
sub
cmp
lods
jo
fnstsw
cmp
sub
or
in
dec
jmp
fs
pushf
outs
mov
retf
ja
stos
shr
clc
movs
mov
adc
mov
mov
(bad)
fidiv
add
fld
ret
and
fdivr
call
adc
push
push
call
call
popa
pusha
aaa
ret
in
stos
cmps
pop
enter
jecxz
fld
test
or
mov
xchg
inc
int
jge
push
es
sahf
mov
push
push
adc
call
popa
mov
retf
ds
test
test
shl
cmp
or
adc
jl
xchg
sub
xchg
jl
cmp
in
and
and
in
ror
add
pop
mov
sub
das
adc
gs
ins
or
pop
test
push
fcomp
mov
inc
jb
popa
je
mov
inc
jnp
rcr
xchg
or
outs
fwait
js
js
inc
jle
imul
pop
ds
cmp
mov
pop
inc
push
retf
fs
nop
adc
xchg
push
mov
pop
adc
test
xor
xchg
jo
dec
sar
dec
imul
cmp
cmp
mov
ret
outs
mov
mov
div
enter
leave
add
imul
nop
ret
js
pop
push
data16
pop
mov
into
pop
test
mov
std
or
(bad)
inc
and
or
jae
jnp
scas
pop
test
mov
adc
pop
inc
ins
popa
jae
push
add
pop
sbb
pop
rcr
or
or
mov
enter
fcomp
in
rol
jmp
push
fwait
in
sar
cs
and
call
push
inc
outs
ins
sbb
push
mov
inc
(bad)
pop
push
mov
push
ret
test
in
xchg
les
and
dec
sbb
add
(bad)
(bad)
das
pop
or
adc
(bad)
cld
(bad)
sti
mov
or
or
pop
and
pusha
xor
addr16
xchg
cmp
jae
fs
jo
jle
(bad)
fneni(8087
aam
xor
pushf
jae
push
rcl
sahf
cmps
shr
adc
ins
lds
in
lds
add
lds
int3
(bad)
jae
mov
fcomp
xlat
push
sub
add
pop
in
sub
mov
dec
loopne
loopne
push
push
int3
sub
outs
sbb
inc
addr16
sbb
fwait
div
pop
cwde
fiadd
in
cwde
fisttp
xchg
push
sbb
xchg
sbb
push
loope
shl
dec
cmp
sbb
fimul
or
in
loope
inc
push
mov
add
fwait
mov
sub
repnz
ss
push
in
mov
pop
in
lock
out
mov
mov
jmp
jmp
in
popa
repz
jl
pop
mov
out
nop
call
enter
pusha
push
adc
cmp
arpl
jmp
scas
jbe
and
clts
mov
(bad)
push
pop
das
mov
lock
loop
xchg
inc
in
xchg
push
pop
push
ror
fmul
rcr
lock
aam
inc
ret
or
das
ficom
mov
dec
mov
and
mov
out
or
mov
addr16
cld
mov
jne
inc
add
sti
inc
sub
sbb
pop
mov
inc
iret
inc
jbe
cwde
or
les
ja
data16
(bad)
xor
aam
in
jne
sub
fdivr
sub
jg
ins
pusha
pop
or
inc
adc
outs
call
cmp
and
sbb
pop
adc
push
or
ror
and
cmp
out
adc
mov
inc
or
ret
sbb
(bad)
xor
mov
inc
call
(bad)
stos
leave
idiv
in
les
mov
jge
jo
rol
sbb
sub
mov
jecxz
sub
loope
push
std
outs
loopne
adc
or
xchg
and
leave
lods
adc
and
inc
add
add
pusha
dec
std
shl
sbb
add
and
sbb
or
je
nop
(bad)
add
test
clc
clc
enter
test
ds
(bad)
sub
and
add
loope
mov
or
jns
retf
nop
inc
ret
sbb
ret
(bad)
icebp
retf
jl
cld
sbb
xchg
xor
clc
retf
push
movs
aaa
dec
cli
inc
repz
cmp
or
mov
lahf
add
mov
cmc
adc
cmp
add
jge
mov
repnz
rcr
leave
dec
xor
or
out
jle
jne
call
push
xor
out
push
or
mov
adc
xchg
out
mov
in
retf
clc
inc
sbb
out
dec
ret
xor
inc
push
(bad)
vmwrite
int3
cmp
je
pop
inc
enter
ret
mov
test
mov
push
enter
int3
push
mov
pop
mov
(bad)
push
mov
ss
fs
inc
sub
rcl
push
sub
mov
les
(bad)
mov
or
dec
not
sbb
mov
sbb
out
int
in
rol
jle
pop
cdq
lds
push
and
add
and
inc
sub
rcl
mov
aas
inc
add
adc
sub
or
add
inc
mov
jmp
and
push
fistp
not
and
dec
mov
pop
repz
inc
(bad)
sti
cs
xor
dec
and
cmp
jle
sbb
xchg
(bad)
(bad)
or
mov
jl
sahf
test
dec
push
popa
adc
push
std
jnp
js
add
call
aas
xor
out
fimul
(bad)
aas
adc
push
xchg
retf
dec
cmc
add
ret
jmp
nop
jle
adc
or
imul
cmps
icebp
das
je
lea
add
and
iret
xor
push
in
lock
pushf
or
jae
test
hlt
inc
mov
and
dec
pop
nop
mov
add
mov
imul
das
arpl
iret
loop
pop
push
outs
imul
add
mov
shl
pop
add
in
loop
sar
test
sbb
sbb
inc
pop
inc
push
call
shl
call
add
shl
push
dec
stos
pop
addr16
sbb
imul
ret
(bad)
das
fild
cmp
inc
inc
mov
push
jl
jo
into
pop
cmp
stos
pop
mov
into
ss
and
in
pop
push
sub
mov
jg
les
adc
xchg
xlat
ret
fmul
adc
(bad)
rol
jns
and
cdq
rol
xchg
cmp
lea
imul
jnp
sbb
push
arpl
ret
jle
mov
sbb
xchg
sbb
in
in
out
push
enter
in
push
and
add
and
(bad)
cmp
in
scas
add
pop
xor
(bad)
mov
mov
(bad)
adc
mov
pushf
pop
sar
sbb
popa
sbb
jo
jne
popa
mov
test
xchg
das
cmp
dec
add
mov
or
(bad)
inc
or
sbb
(bad)
dec
cmps
ret
dec
jns
adc
js
fsub
mov
leave
mov
push
cwde
addr16
xor
les
lods
xor
inc
push
sbb
push
rcr
call
fsub
frstor
pop
mov
xchg
pop
in
mov
mov
lahf
xchg
xor
loopne
jl
xor
adc
es
mov
in
sub
add
leave
inc
lock
dec
inc
cmps
ins
ret
inc
cmp
or
lock
nop
sub
shrd
dec
or
cmp
in
push
and
push
sbb
sub
push
shr
mov
mov
pop
test
xlat
sub
and
xor
xor
mov
add
lahf
inc
clc
(bad)
inc
inc
dec
clc
loop
test
and
inc
jb
daa
loope
push
push
pop
imul
(bad)
aam
outs
jmp
aam
clc
xchg
dec
sbb
ja
lock
popa
mov
leave
ins
clc
out
push
adc
sub
pop
pop
sub
xchg
mov
test
push
jge
rol
xor
inc
inc
pop
cmp
in
(bad)
or
aad
adc
mov
and
leave
mov
jp
aad
pop
popa
ins
sbb
pop
jae
jecxz
inc
sti
dec
loopne
sbb
xor
retf
pop
jne
sbb
retf
adc
mov
cld
idiv
or
sbb
inc
dec
jne
inc
or
(bad)
hlt
add
lock
(bad)
out
xchg
(bad)
aas
test
push
scas
(bad)
bound
jne
repnz
pop
(bad)
and
js
xchg
loope
jl
mov
(bad)
pop
adc
or
(bad)
adc
jmp
(bad)
mov
pop
and
ret
cmp
mov
sbb
inc
and
loopne
ret
call
xor
cmp
push
cmp
stc
mov
cmp
inc
and
cmp
xchg
cmp
fs
sub
repz
xchg
sub
out
dec
jp
cmp
push
or
push
sbb
pop
pop
movs
out
enter
cmp
jne
xor
and
and
push
mov
out
xlat
sbb
mov
pop
stos
ret
mov
and
inc
popa
push
fadd
jae
pop
cld
inc
sub
cmp
add
dec
dec
(bad)
fmul
sbb
out
icebp
js
cld
popf
jne
ret
pop
cwde
fisub
sahf
dec
fiadd
ror
mov
sbb
sub
fnstcw
clc
into
xor
fdivr
repz
adc
xchg
add
test
addr16
and
addr16
jl
adc
jecxz
adc
jl
mov
sbb
jns
adc
add
add
add
lds
jmp
pop
xor
in
int
test
xor
ds
mov
jnp
mov
pop
jns
cs
xor
cld
lock
pop
cmp
pop
paddsb
inc
stos
push
mov
or
shl
sar
fldlg2
nop
or
aam
leave
fsubr
test
xchg
hlt
fcmovbe
sub
mov
lods
hlt
sbb
or
(bad)
sti
and
loope
aad
cmps
dec
xchg
ja
sbb
clc
and
jns
nop
pushf
(bad)
sti
fimul
bound
dec
aam
lahf
fldenv
inc
jecxz
push
mov
add
inc
pusha
xlat
je
ror
mov
jns
sub
adc
aaa
cs
xchg
lods
or
fdiv
jne
or
dec
pop
test
enter
(bad)
out
call
call
jne
sub
xor
jne
sub
sub
ins
bound
xlat
icebp
mov
call
jle
add
fdivr
inc
leave
fcomip
retf
xor
cmp
cdq
nop
dec
xchg
lds
cmp
arpl
std
inc
cs
mov
inc
pop
or
enter
dec
inc
mov
iret
ss
scas
in
mov
xchg
pop
fucom
rol
mov
int
cmp
add
inc
mov
mov
adc
clc
add
pop
push
scas
int3
add
push
repnz
pusha
mov
or
push
lods
adc
dec
ret
adc
sbb
and
sbb
repz
dec
cwde
std
rol
out
add
jns
lock
ficom
or
push
lock
push
fwait
shl
jne
and
cmp
cmp
lds
sti
inc
adc
push
(bad)
push
dec
xchg
mov
daa
(bad)
popa
and
or
cmp
inc
dec
lods
and
xor
mov
add
xchg
fisttp
loopne
jmp
pop
call
or
es
lods
add
pop
das
mov
xchg
mov
fild
ret
jmp
fmul
cld
sub
lea
xor
loope
push
or
push
sub
inc
push
shr
add
je
stc
stos
add
leave
sbb
clc
inc
lock
shr
push
xchg
jl
fs
pop
xchg
push
pop
and
inc
loopne
cmp
ja
jmp
fadd
fst
cmps
push
in
outs
(bad)
test
and
aam
cmp
and
add
mov
rcl
sub
ret
and
mov
add
ja
mov
nop
inc
imul
inc
push
bound
sub
xchg
loope
jle
cmp
xor
xlat
shl
pop
pop
and
push
sbb
and
loope
rol
pop
dec
imul
push
lea
cmp
das
push
inc
xchg
push
inc
out
jmp
jo
scas
pop
loop
das
mov
(bad)
ror
cmc
and
sub
jmp
(bad)
push
push
ret
mov
adc
mov
pusha
loop
jmp
nop
shl
enter
push
mov
cmp
cmps
call
or
jne
lds
jecxz
dec
push
and
jecxz
jns
ins
and
das
or
cwde
sbb
and
inc
daa
fcom
int3
push
mov
sbb
add
and
or
or
dec
stc
mov
imul
inc
in
adc
lds
mov
cwde
inc
stos
in
pop
in
(bad)
sbb
imul
dec
in
push
add
jne
sbb
and
push
push
sbb
add
mov
fs
retf
xchg
repnz
adc
sub
sub
adc
xor
cmp
cmp
shl
pop
push
ss
std
iret
sar
mov
out
sub
add
sar
enter
push
fwait
add
ja
mov
in
sbb
push
add
sahf
fisubr
adc
push
xchg
fsubr
pop
cmp
inc
and
xchg
gs
sub
adc
outs
and
jae
xchg
pop
inc
call
pop
das
push
repnz
out
jl
mov
ror
jge
or
adc
stos
ret
or
call
dec
out
or
inc
and
and
mov
iret
(bad)
ror
(bad)
in
jmp
out
cs
mov
inc
add
shr
loop
mov
jmp
mov
dec
es
jmp
mov
pop
test
clc
add
cmp
inc
sbb
ror
outs
les
cmp
inc
cli
hlt
lea
jmp
sti
dec
or
and
add
repz
add
inc
sbb
mov
or
inc
adc
(bad)
in
sub
aam
bnd
in
push
call
retf
inc
adc
test
jg
call
inc
pop
lock
push
call
ffreep
push
adc
mov
in
test
mov
(bad)
mov
icebp
repnz
ret
push
out
xchg
push
mov
int
ret
mov
test
rcr
xor
aad
pop
je
test
cld
and
mov
jmp
sbb
or
clc
mov
adc
test
pop
rcr
aas
jge
push
jp
push
repnz
loopne
pusha
aad
sbb
aaa
and
xor
dec
mov
dec
pop
jp
test
jmp
dec
xor
int
jmp
shr
and
(bad)
mov
enter
push
mov
push
pop
cs
hlt
mov
xor
in
push
clc
shr
mov
push
and
nop
shl
xor
push
jb
hlt
jl
sub
and
sbb
add
dec
add
mov
jg
int3
nop
cmp
pushf
mov
jmp
inc
ret
inc
add
xchg
rol
cmp
je
das
and
mov
ss
cmp
push
pop
dec
repnz
xchg
(bad)
jg
mov
add
xchg
sub
xchg
push
push
sub
ret
inc
cmp
fsub
test
jnp
inc
add
sbb
loope
push
jno
aaa
pop
stos
test
fdiv
and
or
or
push
sub
rol
add
in
pop
add
adc
mov
add
pop
pop
add
mov
and
imul
pop
dec
jmp
xchg
cmp
mov
iret
mov
adc
sub
mov
das
mov
inc
pop
pop
jg
ds
(bad)
out
inc
jge
mov
xchg
jo
mov
jo
pop
pushf
sar
xchg
adc
add
fs
pop
jge
test
in
jns
push
inc
icebp
jmp
jge
push
sbb
cmps
mov
lock
add
repnz
pop
cmp
cmp
movs
inc
mov
jne
and
add
cs
mov
or
gs
cmp
dec
pop
cld
sub
cmp
lods
push
sahf
push
add
mov
out
mov
aaa
es
adc
lea
add
test
jns
push
inc
mov
sbb
lahf
fmulp
or
inc
dec
(bad)
sub
sub
ud0
sbb
loope
loop
jle
pop
xchg
mov
loopne
iret
xchg
shl
daa
sbb
mov
ret
mov
leave
neg
(bad)
test
pop
ffreep
sbb
jecxz
(bad)
cmp
(bad)
fst
retf
inc
clc
outs
aad
inc
xchg
dec
mov
jmp
cmp
(bad)
pop
add
inc
push
dec
repnz
cs
mov
mov
add
xchg
cmp
mov
pop
adc
dec
movs
jmp
lock
fild
push
mov
cld
aas
push
cmp
xor
mov
mov
ins
or
add
shr
inc
jle
sbb
xor
push
sub
lods
push
add
jbe
jmp
mov
push
cmp
add
push
mov
push
push
xchg
or
aas
or
in
icebp
add
and
adc
pop
dec
mov
in
xchg
jge
pop
or
clc
out
adc
and
inc
shr
add
enter
dec
pop
push
repz
dec
jo
or
cmp
adc
mov
fstp
rcr
fsub
bound
add
add
push
mul
push
pop
inc
cmp
sub
jae
ret
popa
pusha
sbb
add
jecxz
ret
mov
rol
(bad)
fcmovb
and
ja
pusha
int3
mov
dec
mov
push
mov
loop
(bad)
pop
fstp
repz
push
sub
or
jmp
push
in
inc
push
in
ja
jne
sbb
inc
ret
xchg
add
or
in
or
mov
fwait
mov
popa
and
pop
or
push
repnz
repz
jns
repz
stc
pop
and
(bad)
mul
sub
fcomp
mov
pop
das
sub
push
mov
dec
(bad)
mov
out
jp
jl
adc
dec
sahf
pushf
retf
in
in
or
push
push
fwait
xor
add
fidivr
test
jecxz
jmp
mov
xor
xor
mov
push
sbb
stos
mov
mov
adc
enter
pop
mov
add
nop
xlat
mov
xchg
dec
pop
aaa
and
in
jne
or
add
sbb
popf
jns
in
pop
jo
jns
pop
test
lock
test
inc
cmp
cmc
cwde
idiv
and
imul
sbb
sbb
aaa
clc
inc
call
and
lock
adc
loopne
dec
adc
or
pop
sti
mov
sbb
jae
inc
sbb
rol
sbb
adc
inc
sub
dec
lea
pop
pslld
(bad)
pop
loope
in
mov
mov
paddusb
pop
xchg
div
jbe
adc
lahf
or
or
(bad)
call
xchg
push
add
and
inc
adc
inc
gs
icebp
add
nop
cmp
xchg
mov
mov
and
mov
mov
sub
enter
daa
add
scas
cmp
adc
jbe
adc
add
xchg
mov
inc
lods
imul
jle
add
movs
jmp
clc
aaa
retf
ins
bound
fadd
repz
lock
pop
jo
int3
or
and
dec
in
push
hlt
or
mov
jnp
jl
in
add
popa
jmp
pop
pusha
fstp
xor
cmp
adc
cmp
xchg
(bad)
ins
and
jmp
push
(bad)
jbe
xchg
lock
fnstenv
inc
push
cld
dec
sub
dec
push
sub
jle
add
or
std
movzx
mov
cmp
mov
sub
inc
aaa
cmp
in
jmp
pop
sbb
mov
cmp
je
jno
xor
sub
sub
xor
sub
and
stc
jg
and
shr
xchg
in
daa
test
in
sub
pop
sbb
xor
jmp
xor
add
pop
hlt
leave
hlt
shr
inc
xor
jl
mov
mov
mov
add
adc
add
(bad)
sub
jbe
je
dec
jne
neg
ror
xor
add
lock
es
push
call
or
lods
xchg
out
stos
movs
inc
je
add
cmp
ins
pop
xchg
xchg
iret
call
push
sbb
xchg
cmp
sbb
push
and
jne
out
add
in
cli
adc
inc
arpl
or
sub
mov
adc
(bad)
jge
sbb
out
inc
js
sub
and
cwde
pop
sbb
dec
cmp
mov
mov
push
push
pop
paddsb
push
sub
sub
mov
dec
sub
cmp
jne
ror
add
push
bsf
sbb
aas
sbb
cmps
(bad)
hlt
mov
mov
jmp
rcr
adc
in
in
push
fcom
outs
add
cmp
mov
stos
mov
call
cmps
ss
out
ins
sub
xor
push
icebp
scas
call
cdq
call
push
ins
sub
adc
dec
sbb
je
or
enter
jae
int3
inc
dec
daa
sbb
pop
or
jbe
mov
jl
or
sub
jb
mov
jae
stos
adc
jmp
sbb
sub
sub
call
dec
sbb
mov
repz
mov
clc
lock
mov
sub
xchg
mov
jae
in
inc
dec
repz
inc
movs
pop
stos
xor
in
push
fild
fisttp
test
jge
adc
in
cmp
sbb
jp
inc
call
aaa
and
sub
dec
(bad)
in
push
and
dec
das
dec
add
pop
dec
add
cmp
lock
je
xchg
fwait
bound
add
data16
xor
pop
xchg
pop
movs
inc
leave
sub
call
es
inc
sbb
xchg
adc
scas
ret
dec
cld
mov
and
add
xchg
sbb
xchg
inc
adc
dec
inc
sub
aas
mov
repnz
ds
and
inc
add
sete
or
rcr
imul
ins
xchg
cli
push
inc
lea
fmul
mov
loop
mov
pop
or
push
or
jmp
or
mov
pop
scas
hlt
movs
fsubr
test
jns
jg
ds
pop
xor
pusha
sbb
jbe
icebp
icebp
dec
sti
(bad)
adc
jmp
adc
jle
pop
pop
inc
sbb
sub
pop
inc
inc
cmp
aaa
call
sub
hlt
call
and
add
shl
jns
pop
sbb
pop
pop
ins
xor
daa
in
lahf
repz
outs
leave
dec
cmp
pusha
mov
xor
jmp
cld
cmp
fmul
dec
pop
sub
cmp
ja
sub
ja
mov
fs
(bad)
adc
mov
sahf
cmc
adc
(bad)
jl
rcl
add
mov
ret
es
clc
dec
fs
jbe
dec
dec
pop
pop
pop
(bad)
sbb
fs
rol
or
fdiv
out
cld
stos
jno
cwde
(bad)
aas
add
jno
mov
lea
dec
pop
loope
dec
enter
test
clc
clc
jae
test
sbb
push
fwait
not
xlat
mov
(bad)
js
and
rol
call
inc
jnp
dec
clc
shr
push
cmp
scas
call
mov
sti
push
xchg
jne
cmp
mov
and
adc
mov
add
push
fdivr
mov
mov
or
or
shl
repz
adc
sub
test
in
or
inc
fcom
inc
mov
(bad)
push
es
inc
fcom
icebp
and
jp
ss
pop
imul
loopne
in
(bad)
push
sbb
mov
jge
repz
sub
pop
fadd
mov
loopne
or
imul
ins
(bad)
lods
aam
ret
sbb
add
mov
mov
shr
or
or
and
cmp
lea
adc
mov
push
inc
add
mov
and
loopne
mov
add
paddusb
mov
daa
inc
data16
add
das
jne
and
jmp
inc
add
pushf
adc
shl
jne
inc
mov
shl
push
ins
add
scas
cli
push
mov
hlt
int3
push
mov
popa
fadd
pop
pop
shl
lock
je
hlt
cmp
fs
dec
cmp
lock
sbb
cmp
jge
jae
push
lea
inc
lods
lock
xor
dec
js
sti
(bad)
mov
cli
add
and
sbb
jb
hlt
in
xchg
and
popf
adc
dec
push
ss
adc
dec
pop
shl
push
push
or
lds
jg
ins
push
rol
in
ss
stc
inc
lock
push
jo
shl
ret
cmp
and
and
xchg
arpl
push
outs
add
lock
(bad)
repnz
or
in
loop
sti
cmp
jne
js
adc
add
fld
mov
jae
push
cmp
jo
fst
fmul
mov
test
lahf
push
sbb
inc
push
fistp
sbb
js
std
and
lea
push
push
fmul
xor
sbb
adc
inc
sub
push
iret
cmp
mov
push
jl
mov
add
jbe
jmp
push
dec
or
clc
push
les
mov
fbstp
popf
js
xchg
(bad)
popf
sub
cwde
ror
push
loope
jge
pop
add
cld
fs
jb
ret
jp
lock
inc
call
xchg
cli
popa
xchg
popa
xor
nop
arpl
test
cmp
push
in
inc
mov
mov
sbb
sbb
jne
push
bnd
dec
pop
loope
in
cmp
imul
mov
sar
cwde
sbb
cmp
mov
ja
cwde
sbb
in
adc
iret
add
mov
data16
add
fs
pop
out
sub
adc
cmps
dec
mov
retf
rcl
adc
or
(bad)
(bad)
mov
cmp
pop
adc
or
cmp
pop
aad
sub
jecxz
cmp
and
adc
es
mov
sbb
fsubr
cli
add
leave
mov
adc
mov
in
sbb
ret
in
out
sti
or
or
out
lahf
jecxz
jne
cmp
sub
lods
ror
and
shl
mov
jb
(bad)
fdiv
mov
and
add
dec
fbstp
sbb
test
sbb
(bad)
in
lock
xchg
jae
mov
leave
and
imul
xchg
jmp
adc
pop
ficom
or
pop
pop
dec
or
sub
es
in
cli
mov
mov
pop
out
push
movs
cmp
das
ret
pushf
jo
add
les
mov
xchg
aam
repnz
sbb
push
push
xchg
sar
call
and
loopne
push
jb
dec
sub
jb
add
sub
jae
pop
loop
ret
aam
sbb
paddw
adc
js
mov
fild
mov
add
ret
enter
adc
mov
or
ds
xor
fidiv
push
jo
out
or
xchg
nop
sar
mov
jae
das
pop
(bad)
test
jns
(bad)
stos
push
and
mov
push
(bad)
rcl
or
imul
in
pop
and
es
sub
jl
jle
cmp
and
pop
ins
add
jge
cs
repnz
in
or
es
mov
in
mov
es
inc
fdiv
lock
popf
in
jns
out
mov
sub
retf
pop
fdiv
inc
xchg
dec
fmul
icebp
xor
add
movs
sbb
xor
xor
lock
add
aaa
call
lock
xor
push
out
lea
ror
add
scas
xor
jnp
pop
jne
fsubr
adc
or
enter
push
in
push
mov
mov
mov
fnstsw
pop
xchg
enter
icebp
psubsb
outs
or
dec
(bad)
shl
shl
movs
or
pop
xchg
adc
out
jmp
sbb
sti
or
sbb
or
push
inc
std
(bad)
mov
push
ror
sub
mov
cmp
jae
mov
mov
mov
and
scas
or
mov
push
push
xor
add
xchg
xor
xchg
cmp
hlt
out
mov
mov
ret
inc
jo
jge
fwait
mov
sahf
adc
repnz
or
psubd
sub
push
inc
and
ins
repnz
sub
out
and
sti
jnp
pop
test
mov
jg
and
or
add
iret
addr16
inc
adc
adc
or
add
or
xchg
adc
add
mov
fsub
mov
push
or
loop
ss
inc
js
or
add
adc
adc
outs
ds
xor
cmp
je
loopne
das
cmp
fsub
inc
sbb
ja
ins
and
je
sub
retf
sbb
push
pop
movs
mov
cmp
dec
adc
je
popf
sbb
jne
cmp
xor
and
int
inc
xor
inc
out
adc
test
mov
bound
dec
nop
push
pop
add
add
jnp
mov
xor
jns
and
dec
adc
sub
mov
sub
push
imul
pop
outs
adc
repz
mov
pop
push
add
pop
mov
push
arpl
push
adc
(bad)
sub
into
clc
pop
ret
pusha
(bad)
data16
sub
or
add
js
sbb
hlt
sbb
arpl
ret
out
or
dec
(bad)
or
je
fiadd
add
addr16
add
xchg
loope
push
(bad)
iret
pop
or
and
sub
lock
xor
retf
dec
xchg
inc
addr16
cld
jmp
sar
mov
xor
or
cwde
pusha
dec
push
inc
idiv
mov
repnz
mov
or
xchg
cmps
jmp
dec
leave
lock
mov
xor
adc
sub
inc
sbb
inc
add
jbe
test
push
(bad)
jle
sub
popa
sbb
or
dec
outs
dec
push
sub
pop
int
mov
pop
daa
jle
iret
sti
pop
adc
sbb
xchg
and
in
dec
mov
cs
les
ins
xchg
and
push
mov
xor
push
xchg
sbb
mov
rcl
mov
sub
pop
and
jmp
inc
push
mov
ins
xchg
jbe
push
inc
mov
push
sbb
mov
dec
add
into
outs
add
scas
sbb
adc
sbb
mov
jle
sub
hlt
ror
mov
or
push
mov
inc
cli
in
mov
mov
inc
mov
jmp
push
jmp
in
jne
dec
aaa
repz
or
retf
jnp
retf
(bad)
fsubr
mov
pop
cdq
into
sub
call
push
rcr
add
lock
pop
or
pop
mov
pop
mov
push
inc
stos
loopne
adc
cld
cmp
push
pop
push
cmps
jbe
dec
mov
pop
adc
pop
sbb
cmp
inc
xchg
add
leave
and
add
fisub
fidiv
fs
and
pop
(bad)
fcmovne
pushf
mov
nop
sbb
jg
add
shl
push
nop
cmp
pop
xchg
cmp
in
sbb
sbb
or
inc
rcr
mov
cwde
sbb
ret
and
cli
mov
jp
std
ins
mov
aas
cld
inc
popa
pop
add
call
ss
nop
inc
mov
push
daa
xchg
and
push
dec
and
daa
lea
sub
pop
or
pop
adc
cld
retf
bound
fcom
jno
adc
xor
or
mov
retf
add
mov
jl
adc
sbb
loope
scas
sub
cmp
inc
sub
cmp
dec
adc
sbb
add
out
fdiv
and
push
arpl
into
(bad)
fst
mov
push
in
xor
mov
mov
ret
fcom
dec
mov
pop
mov
ins
mov
addr16
fist
lods
(bad)
jne
cmp
scas
push
mov
enter
cmp
jne
rcr
hlt
push
popf
adc
add
push
addr16
repnz
add
or
add
pop
jecxz
aam
retf
ror
add
test
jo
add
push
push
and
pop
jp
and
add
push
sahf
push
fs
and
or
adc
xor
or
dec
in
lock
sbb
stos
pusha
pop
and
mov
(bad)
stos
adc
cmp
imul
(bad)
jp
in
pop
jne
push
call
cmp
cmp
cmps
and
(bad)
test
stos
test
xchg
and
dec
mov
cmp
or
jg
shr
mov
test
jg
in
jle
(bad)
paddd
rol
push
jecxz
shl
push
mov
or
ds
jmp
jl
in
into
jbe
jg
mov
xor
mov
pop
sub
or
es
jb
es
xchg
dec
int3
dec
test
and
and
in
dec
lods
jge
jne
sub
enter
sbb
pop
inc
inc
xchg
and
push
sbb
mov
pop
xor
ror
std
dec
push
add
(bad)
hlt
add
sbb
mov
cmp
test
mov
jmp
or
shl
mov
pop
xchg
sub
rol
nop
xchg
in
mov
enter
sbb
cmp
jg
popa
outs
outs
outs
je
outs
jmp
lods
push
adc
pop
and
and
inc
mov
and
push
and
push
add
add
js
ins
inc
jp
sbb
in
jge
jne
add
(bad)
push
mov
test
add
enter
cmps
xchg
push
xor
ret
mov
mov
inc
sub
adc
lock
ds
and
aad
test
nop
pop
fisttp
add
sub
and
scas
ror
sahf
cmp
or
mov
mov
test
and
enter
mov
jne
dec
js
inc
xor
jne
ins
or
adc
xlat
mov
adc
sub
add
adc
and
fiadd
push
ins
or
pop
sub
xor
inc
cmovns
ret
mov
pusha
ret
retf
lock
adc
push
add
add
adc
pop
cmp
mov
push
test
jecxz
xchg
in
adc
lahf
lahf
movs
call
retf
shl
or
jnp
sahf
data16
adc
rcr
sub
and
dec
pusha
adc
push
(bad)
movs
and
sbb
adc
in
or
inc
fwait
repnz
mov
shl
in
push
push
push
xchg
pcmpeqb
addr16
and
daa
adc
aam
and
add
jo
sub
mov
imul
out
inc
add
jae
out
loop
push
sub
xor
enter
xchg
xchg
inc
aad
inc
adc
cwde
dec
ss
add
js
or
mov
sbb
adc
pop
je
pop
and
mov
and
add
or
(bad)
mov
jnp
or
inc
(bad)
xchg
inc
repz
add
fistp
jnp
test
push
enter
aam
mov
mov
and
pop
mov
push
nop
jmp
lock
push
mov
cdq
inc
mov
xor
mov
jmp
cmp
enter
cmps
loopne
and
fist
and
xchg
(bad)
out
(bad)
enter
push
inc
or
inc
or
cmps
ja
es
sahf
sub
xchg
xchg
aaa
adc
in
jns
sub
aad
in
dec
push
sbb
hlt
fcom
adc
pusha
cdq
inc
jne
aaa
outs
xchg
loopne
ret
sbb
arpl
es
sahf
shl
nop
in
popf
fdivr
out
mov
das
ins
daa
(bad)
int3
or
sbb
popa
add
xor
and
dec
push
and
add
lahf
pop
loopne
nop
daa
xchg
loopne
rcl
test
adc
lock
sub
(bad)
xchg
adc
dec
mov
out
pop
das
(bad)
sar
in
add
in
add
sub
xchg
ja
pop
mov
sbb
sbb
and
(bad)
test
push
les
mov
mov
add
mov
mov
pusha
nop
loope
mov
pushf
int3
pusha
jmp
rol
call
jmp
loopne
idiv
jno
jae
mov
jb
das
hlt
jnp
loope
sub
ret
dec
imul
repnz
in
ss
pop
jmp
dec
aaa
sub
jg
and
popa
pushf
call
sbb
sub
adc
fcomp
scas
or
and
inc
add
mov
xlat
cwde
or
in
dec
push
or
in
mov
hlt
sub
cli
lods
push
jmp
es
loopne
in
pushf
bound
fcmovb
adc
shl
leave
sub
sub
xchg
add
or
sub
(bad)
ffree
push
int
and
mov
push
hlt
or
cmp
adc
imul
dec
fidiv
sbb
pop
mov
jno
pop
popf
adc
fbld
ja
and
je
cld
cld
aad
mov
and
inc
pop
mov
inc
xlat
in
xor
sub
mov
sub
cmps
xchg
mov
scas
or
sub
div
mov
pop
pop
push
adc
bound
fidiv
inc
enter
inc
push
mov
cmps
push
out
cld
add
addr16
adc
jmp
(bad)
call
adc
sub
call
sub
add
cmp
rcr
or
imul
cmp
pop
xchg
scas
jmp
mov
add
xchg
or
or
adc
clc
enter
in
js
or
test
and
inc
nop
push
mov
inc
pop
addr16
test
add
push
mov
sar
jne
and
pusha
xor
xchg
hlt
cmps
(bad)
data16
ins
xor
test
test
mov
stos
xor
repz
mov
jne
aad
(bad)
add
xor
cmp
shl
mov
pop
sub
call
rep
das
push
sbb
push
sbb
lock
cs
mov
hlt
imul
and
mov
xchg
sbb
imul
call
in
add
pop
or
push
imul
inc
sahf
das
hlt
(bad)
das
lock
fadd
dec
int3
mov
loopne
es
push
or
repnz
ins
and
dec
lock
loope
pop
dec
jl
stos
mov
ret
push
js
repnz
pushfw
test
sbb
loope
call
daa
call
push
lods
push
in
fsub
sbb
sbb
pop
adc
repnz
or
mov
shr
daa
or
sub
mov
test
inc
xor
daa
push
lea
jg
add
lock
pop
push
sbb
adc
adc
cmp
xor
jecxz
pop
enter
mov
movhps
in
jo
fild
xlat
push
inc
and
loop
pop
xchg
outs
leave
mov
adc
and
inc
rcr
sbb
push
push
dec
ins
xor
or
outs
je
gs
sub
pop
sahf
mov
push
(bad)
push
jns
xlat
pop
push
dec
dec
add
(bad)
int3
inc
push
aaa
adc
pop
inc
dec
inc
push
push
inc
push
pop
mov
dec
dec
push
add
push
push
push
inc
dec
push
pop
push
inc
enter
mov
inc
inc
dec
pop
dec
inc
inc
dec
dec
dec
inc
call
pop
push
(bad)
lods
add
fs
sbb
loope
imul
dec
xor
adc
test
add
add
sub
lods
adc
or
add
or
dec
cmp
push
mov
sbb
inc
mov
das
mov
(bad)
into
xor
xor
lock
leave
test
lods
push
lock
mov
or
loope
sbb
inc
stos
lock
aaa
ret
lock
popa
sbb
sbb
jmp
(bad)
enter
movs
in
xor
xchg
xor
jo
fdivp
cmp
loop
mov
call
sub
ror
add
cdq
sti
lock
pop
adc
xchg
mov
cdq
hlt
inc
dec
push
mov
or
in
les
cmps
xchg
hlt
lock
xchg
push
push
mov
mov
push
dec
push
cdq
gs
adc
ret
cmp
in
clc
clc
cdq
sbb
(bad)
dec
retf
xor
pop
cmp
test
add
push
test
das
jo
test
adc
imul
sbb
adc
xor
test
loop
test
sbb
ret
and
pop
inc
sub
jl
ss
mov
and
ja
push
repz
ins
ss
add
and
imul
jae
in
inc
jp
push
aad
xor
cmp
movs
pop
ja
mov
adc
aaa
arpl
sub
add
cdq
aam
in
test
push
aam
or
jb
call
dec
test
imul
xor
fild
dec
sbb
jmp
sub
sub
and
push
cmp
inc
add
sub
stos
push
push
mov
push
je
push
mov
add
or
ss
test
xchg
mov
inc
dec
fmul
or
add
mov
bnd
addr16
pop
call
test
les
cmp
adc
test
in
pop
and
adc
cmp
mov
in
pop
or
dec
push
cmp
jo
or
rol
add
xor
push
sub
or
sub
mov
pop
fwait
or
and
jmp
or
cmps
fwait
dec
mov
enter
adc
adc
outs
movs
cmp
dec
in
push
popa
sub
mov
test
xor
dec
inc
sub
movzx
push
mov
jmp
or
xor
adc
cmc
in
mov
cmp
inc
sub
loopne
in
pop
ror
sar
push
add
add
dec
test
sub
dec
ficomp
scas
les
dec
daa
mov
daa
call
xchg
in
aad
call
adc
or
jne
fwait
sbb
xchg
inc
pop
xchg
and
add
lods
push
lock
mov
out
fstp
repnz
mov
xlat
cmp
mov
or
or
inc
cmp
lahf
and
sub
inc
(bad)
(bad)
push
mov
xchg
(bad)
mov
jge
push
clc
mov
sub
stos
ja
movs
call
cwde
cmp
add
sbb
or
shl
xor
mov
in
addr16
cmp
lea
xor
call
push
in
(bad)
mov
and
pop
pop
daa
add
imul
sbb
sbb
ret
das
pop
add
call
ds
inc
mov
fld
sub
sbb
push
cmp
sbb
inc
imul
sub
lds
or
test
mov
leave
dec
lds
fdivr
xchg
in
pop
mov
add
pop
cmp
rol
ss
in
movs
in
loopne
pop
xor
jb
add
cmps
fsubr
sti
push
push
lahf
sbb
pushf
lods
jae
stos
(bad)
mov
scas
add
imul
loope
ja
cs
cmp
mov
inc
and
jns
shl
pop
mov
cmp
pop
ror
in
adc
daa
int
pop
out
daa
mov
pop
jmp
ret
pop
and
imul
sub
pop
cmp
mov
inc
test
hlt
mov
movs
add
je
mov
sbb
and
jge
cs
pushf
and
iret
mov
neg
add
sbb
scas
sub
push
mov
mov
fs
add
pop
rcr
jno
mov
inc
lds
daa
sub
or
dec
fsubrp
inc
arpl
jecxz
sub
add
mov
inc
push
lea
in
mov
rcr
sub
outs
enter
cli
xor
popa
adc
or
xchg
fmul
push
sbb
add
cmp
inc
pop
jbe
cli
or
cmps
push
call
mov
adc
ja
jecxz
and
(bad)
ins
lods
push
popa
cmp
ins
mov
cmp
sbb
lahf
xchg
and
inc
xchg
add
cmp
inc
mov
fsin
test
popf
stos
test
xchg
push
mov
adc
iret
push
xchg
xchg
(bad)
addr16
xlat
add
mov
and
rcl
retf
loope
sub
sbb
sbb
cmc
xchg
mov
push
addr16
call
dec
sbb
inc
and
inc
cmp
xchg
xchg
mov
call
repnz
test
push
xor
pop
aam
adc
mov
int3
jns
and
fdiv
fld
dec
jo
sbb
cmp
retf
das
enter
push
cdq
hlt
add
mov
push
popa
fs
jo
xor
cs
ins
push
lods
lahf
and
gs
rol
addr16
dec
mov
scas
add
imul
test
ja
and
inc
aas
loop
ins
cld
jmp
ret
test
in
inc
dec
jg
cmp
repnz
xchg
in
sbb
add
(bad)
xor
inc
inc
pop
ds
test
xchg
(bad)
and
push
lds
dec
popa
outs
popa
aam
push
mov
dec
mov
ds
test
add
xchg
shr
ret
mov
mov
push
in
xchg
cmp
sub
lahf
inc
inc
sbb
movs
pop
sbb
ja
mov
shl
retf
or
test
xchg
mov
imul
push
add
add
push
pop
(bad)
jge
aaa
pop
and
push
adc
imul
sub
add
ror
loopne
adc
and
xlat
add
int
mov
popf
sub
les
das
mov
inc
(bad)
fsubr
pop
cs
bound
and
adc
jmp
or
sbb
push
retf
adc
jnp
mov
clc
fcomp
(bad)
and
xchg
dec
dec
push
call
inc
and
ror
push
mov
sbb
add
mov
or
lods
or
and
sub
je
adc
inc
cmp
xchg
mov
mov
mov
shl
ds
mov
dec
sbb
sbb
and
test
icebp
fmul
xchg
out
mov
adc
push
jmp
loop
jne
push
std
push
push
and
aam
jne
mov
(bad)
mov
cmp
xchg
mov
jne
lea
push
js
in
sub
mov
xchg
jne
call
ins
adc
mov
mov
(bad)
mov
and
dec
xchg
pop
in
add
dec
inc
sub
neg
shl
ins
cmp
outs
das
push
jne
mov
or
push
ds
fistp
or
pusha
mov
xor
jns
outs
jns
jne
lds
test
je
loopne
and
repnz
outs
xchg
test
pop
bound
or
sbb
outs
or
or
test
hlt
popa
outs
mov
jl
or
jg
add
je
clc
addr16
inc
cmp
jne
adc
pop
add
push
xlat
inc
and
ins
add
and
lods
out
daa
adc
and
jle
stc
or
mov
std
mov
ins
aam
fsubr
push
pop
inc
loop
cmp
adc
or
pop
sar
jl
jle
outs
push
(bad)
push
push
aad
fwait
xor
shl
shl
dec
in
into
ret
daa
add
and
fst
les
mov
aad
out
test
jne
cmp
adc
xchg
cmps
lods
out
and
mul
xor
pop
repz
das
or
ret
sbb
lock
and
es
loopne
inc
dec
outs
lock
push
je
and
inc
sbb
xchg
pop
pop
ficom
cld
sbb
or
push
xor
inc
adc
or
pop
call
or
pop
(bad)
repz
rol
nop
daa
cdq
call
push
inc
push
dec
inc
inc
cli
dec
inc
adc
mov
pop
cmps
ds
mov
gs
and
inc
dec
sub
test
cdq
add
cld
jne
adc
xor
cdq
add
mov
mov
pop
call
and
or
shr
(bad)
jo
or
pop
sbb
or
and
sbb
inc
mov
(bad)
xchg
add
inc
cmp
movs
lea
test
leave
xor
sbb
sub
cmp
pop
xor
cmp
pop
jmp
or
or
mov
inc
push
xchg
adc
sbb
movs
and
out
dec
mov
sub
sub
test
cmp
jo
or
(bad)
daa
mov
shl
lea
jmp
cld
sbb
ror
daa
jle
add
inc
add
cmp
test
xchg
rcr
xor
adc
jbe
ud2
lea
sar
cmp
sub
xrelease
mov
(bad)
repnz
sub
in
adc
jns
clc
dec
push
mov
movs
xor
nop
lock
jmp
push
mov
mov
(bad)
jmp
test
loope
jecxz
push
adc
adc
(bad)
ror
pop
dec
or
ror
jecxz
ret
dec
movs
sub
dec
pop
sbb
add
pop
xchg
ret
add
and
jbe
sub
sbb
jmp
pop
or
jg
test
and
out
enter
push
inc
add
dec
jne
mov
jmp
push
mov
mov
je
cld
dec
jne
pop
sub
jg
push
push
sbb
add
je
or
movs
outs
hlt
imul
mov
add
mov
sbb
lock
pop
push
sbb
(bad)
aas
mov
cwde
or
dec
add
ds
dec
or
mov
pop
sbb
jecxz
push
add
rcl
loopne
push
push
push
add
or
mov
cmp
xchg
mov
pop
popa
int
nop
inc
in
jmp
pextrw
mov
inc
or
push
push
outs
(bad)
xchg
rcr
rcr
push
fild
fist
push
popa
movs
xchg
jge
jmp
daa
xchg
call
daa
daa
mov
push
pop
adc
xchg
add
xor
inc
inc
or
sbb
add
clc
sbb
jge
leave
rol
or
xlat
inc
ret
clc
hlt
xor
add
loope
adc
and
push
and
pop
or
cmp
clc
mov
mov
and
loope
mov
jae
pop
or
mov
mov
jg
stos
jae
cld
ins
cld
add
call
adc
or
inc
add
sahf
test
not
inc
adc
push
les
cmp
add
nop
mov
adc
stos
fucomip
call
clc
pushf
std
push
nop
(bad)
popa
adc
mov
jae
aas
xor
cmps
pop
pop
addr16
cmps
clc
inc
cmps
js
xchg
inc
lods
leave
mov
xor
ins
adc
dec
or
cmp
in
sar
xchg
mov
sub
enter
movs
push
cmp
ret
jg
sbb
sbb
xchg
xor
adc
mov
sbb
add
in
loopne
fadd
gs
cmp
dec
leave
ins
cmp
test
add
jb
add
add
push
dec
repnz
cmp
stos
pop
adc
imul
arpl
daa
dec
popa
push
jbe
(bad)
ins
gs
sub
lock
stos
movs
popf
retf
pop
loopne
add
pop
stos
aam
adc
lea
test
popa
fmul
xchg
ret
nop
dec
hlt
inc
or
add
pushf
push
cdq
in
mov
inc
sbb
xor
and
adc
jne
dec
rol
sub
mov
push
add
scas
in
(bad)
or
test
xchg
mov
or
(bad)
adc
pop
aam
mov
mov
xor
fwait
popf
mov
lea
push
ins
sub
out
or
push
jae
inc
sbb
xor
hlt
pop
cmp
test
mov
push
jns
arpl
ja
fdivr
ror
inc
sbb
std
dec
pop
fld
gs
fbstp
pop
test
and
xor
pop
sub
sub
fstp
repnz
call
outs
ret
lods
or
repnz
dec
sbb
adc
dec
mov
fist
add
xchg
dec
xchg
and
test
add
or
cwde
adc
push
fmul
shl
sbb
or
bound
push
sub
add
dec
ficom
push
int
jl
dec
lahf
cs
adc
test
ins
bound
jo
and
imul
sar
(bad)
and
inc
push
inc
sbb
hlt
push
push
push
jo
inc
outs
ins
fs
sbb
xchg
or
adc
jo
imul
and
sub
sub
add
xor
mov
add
retf
and
sub
mov
mov
dec
bound
les
jo
adc
inc
push
jmp
add
(bad)
cmps
clc
or
ror
inc
movs
or
lock
mov
dec
cmp
cmp
cmp
test
sub
std
fucomp
push
cmp
test
pusha
test
sar
int
loope
jg
pop
cmps
cmp
lahf
outs
adc
hlt
push
cdq
ss
test
fs
es
pop
or
mov
dec
xchg
push
ds
movs
sub
in
jg
jmp
dec
dec
inc
jne
lock
popa
jb
ins
cwde
scas
push
xor
ret
fwait
dec
sbb
add
and
pop
sbb
add
inc
pusha
shr
push
cmps
push
and
add
clc
pop
mov
or
arpl
not
add
cdq
mov
(bad)
xchg
mov
dec
add
mov
sbb
push
xchg
xor
and
jns
pop
clc
lahf
pushf
ror
daa
jecxz
or
push
loopne
pop
jmp
xchg
sub
imul
add
fdiv
cmp
lods
mov
push
sub
sub
sub
inc
scas
dec
pop
pop
push
out
daa
mov
outs
popa
and
shl
dec
and
xchg
sahf
sbb
add
xor
xor
pusha
leave
stos
aaa
inc
pop
ins
push
add
and
pusha
pop
es
pop
pop
test
pop
(bad)
ja
jge
imul
loopne
js
popa
or
xchg
rol
dec
pop
cmp
test
sbb
adc
add
or
out
mov
lods
call
ret
js
xor
fcom
jmp
lods
aas
mov
xchg
pop
sub
jne
in
loope
fild
clc
jmp
xlat
add
lahf
je
add
push
(bad)
jl
cmc
cmp
sbb
lock
or
jae
in
icebp
add
mov
pushf
hlt
adc
push
add
je
js
call
sbb
dec
sub
les
cs
push
retf
inc
push
dec
shl
fild
rol
xchg
ret
xor
adc
dec
dec
push
cli
das
adc
sti
iret
push
gs
push
inc
cmp
movq
test
lods
dec
sbb
dec
clc
fiadd
(bad)
sub
pop
xchg
jb
mov
cmp
pop
jo
add
adc
xchg
xchg
add
cmps
stos
or
inc
dec
or
or
add
in
inc
rcr
dec
pop
jne
mov
das
gs
loope
jae
hlt
movlps
dec
mov
pop
add
cld
mov
dec
mov
aaa
in
test
aaa
sub
in
push
inc
sub
loopne
imul
in
inc
nop
cmp
push
pop
outs
jae
push
push
cmp
sar
shl
push
pop
cmp
mov
mov
inc
ins
ins
jne
jns
inc
and
push
add
arpl
outs
retf
adc
add
add
stc
sub
adc
and
cld
clc
add
inc
cmp
test
sub
mov
sub
adc
clc
test
xor
pop
fs
(bad)
push
and
mov
shl
jmp
mov
das
push
inc
inc
add
js
mov
arpl
jno
xor
je
xor
or
push
xor
jno
out
sub
or
push
pushf
shr
arpl
pushf
in
adc
scas
arpl
arpl
dec
push
nop
mov
push
outs
jb
push
mov
cmp
das
fs
jb
dec
fs
mov
cmp
aam
or
and
push
cmp
test
ret
fs
add
fisub
xchg
(bad)
or
bound
sub
sub
(bad)
ret
dec
mov
jne
add
jbe
and
je
(bad)
cmp
clc
push
in
clc
int3
and
in
in
mov
in
sbb
mov
fild
jecxz
push
push
sub
xchg
mov
push
and
ror
and
xchg
jg
inc
push
ret
lock
addr16
mov
sub
or
push
adc
xor
xchg
jb
mov
sbb
push
xchg
lods
and
data16
push
clc
and
push
or
shl
enter
xchg
call
es
call
xor
scas
xor
or
xchg
add
jg
(bad)
inc
inc
push
push
out
rcr
xlat
outs
inc
sbb
cwde
(bad)
push
jns
gs
imul
jo
pop
cli
movs
push
and
cmp
xchg
push
xchg
stc
add
(bad)
stc
push
adc
and
add
push
out
adc
inc
push
fadd
push
push
xor
in
enter
push
adc
call
imul
repz
cdq
and
push
or
enter
call
(bad)
dec
ja
out
test
int
push
fwait
mov
cmp
sub
sbb
adc
pop
into
inc
or
jne
stc
imul
mov
sbb
mov
test
add
mov
dec
sbb
enter
pop
loopne
or
sbb
push
out
add
push
inc
add
adc
fcomp
jl
sahf
fsubr
scas
xchg
enter
mov
outs
movs
shr
jns
push
adc
mov
sub
sbb
push
or
add
mov
test
xchg
sbb
xor
push
pop
sub
outs
add
jecxz
dec
add
push
add
inc
xchg
add
sbb
add
enter
daa
clc
clc
add
call
or
add
fiadd
pop
test
xlat
jmp
mov
jge
daa
inc
in
mov
pop
mov
push
and
lods
pop
adc
cs
xor
inc
dec
cmps
mov
adc
(bad)
icebp
ins
adc
repz
add
xchg
pop
cs
(bad)
repz
and
dec
add
mov
repz
add
mov
add
sub
in
pusha
or
mov
pcmpeqw
in
jle
adc
gs
mul
fcomp
dec
cmp
jae
ins
fdivr
popa
pop
(bad)
pop
outs
and
jb
jmp
push
jb
in
outs
ins
outs
sbb
mov
add
cdq
sbb
sbb
das
in
jne
outs
and
jge
sbb
out
jno
loope
mov
add
xor
imul
mov
dec
enter
stc
scas
in
push
or
sub
pop
out
and
jb
ins
sub
jns
and
sbb
mov
cwde
inc
sub
sbb
pop
inc
daa
mov
push
mov
outs
or
ror
bound
mov
pop
aaa
test
pop
push
mov
mov
pop
shl
(bad)
mov
mov
sub
and
in
jno
in
pusha
add
sub
clc
and
int3
std
ficomp
mov
sub
and
adc
adc
push
push
(bad)
es
arpl
and
paddusb
stos
adc
and
or
pop
adc
js
dec
fwait
jae
add
jno
neg
enter
xor
lock
and
loope
(bad)
(bad)
pop
imul
inc
lahf
and
je
and
pop
mov
test
sbb
dec
pop
push
adc
sbb
mov
nop
inc
push
lock
adc
sub
inc
ins
adc
sub
adc
push
add
add
movs
movs
sbb
jmp
cmp
push
cmp
fmul
dec
imul
push
jns
lods
add
ror
lods
(bad)
pop
test
mov
inc
mov
mov
or
add
aad
mov
dec
mov
cmps
xor
and
hlt
or
imul
loop
mov
adc
arpl
xchg
fsub
add
lock
outs
push
out
mov
call
mov
fbld
jne
add
call
adc
mov
add
jb
pop
add
jne
inc
dec
and
add
add
sub
les
pop
int
rol
movs
add
sub
pop
dec
adc
and
ror
mov
ja
and
pop
push
or
add
xor
gs
icebp
into
clc
sub
push
sbb
jne
into
aas
or
ds
imul
adc
push
inc
cli
adc
mov
mov
push
push
retf
or
adc
callw
push
inc
fs
enter
sub
and
imul
outs
push
(bad)
cld
scas
mov
rol
scas
movzx
imul
jnp
add
push
aam
leave
adc
fld
push
mov
mov
ror
rep
xor
nop
rol
jmp
shl
sub
pop
sbb
push
clc
adc
aaa
mov
push
dec
mov
xchg
cmps
das
popa
xor
test
bound
mov
enter
ja
test
test
jmp
jo
adc
ja
rcr
add
icebp
(bad)
adc
jae
(bad)
sub
pop
jmp
iret
sar
(bad)
dec
sub
shr
jmpw
outs
cld
clc
sbb
cmp
fisttp
inc
js
popa
repnz
es
repz
mov
mov
or
out
ins
xchg
and
lea
cdq
or
pop
mov
add
xchg
sub
fs
sbb
movs
je
cdq
sbb
ror
or
nop
shl
stos
inc
das
or
mov
mov
xor
lock
or
sbb
xchg
cmc
lds
or
push
cmp
sub
inc
fbld
dec
push
push
inc
lock
lds
xlat
repnz
sub
imul
test
or
pop
pop
mov
mov
sbb
aam
adc
or
retf
jl
imul
fiadd
sbb
add
test
mov
fistp
adc
mov
test
js
sbb
dec
add
jp
dec
xor
jmp
xor
(bad)
pushf
xor
pop
lods
movs
pop
mov
shr
or
cmp
rol
(bad)
aas
inc
daa
inc
inc
pop
xor
add
mov
jl
mov
repnz
not
ret
inc
stos
fcom
mov
pop
in
mov
mov
imul
xor
jnp
push
jmp
add
ja
inc
rcr
jecxz
cmp
out
jbe
push
lods
icebp
jno
jl
push
mov
(bad)
nop
and
cmp
sbb
cmp
cli
arpl
sub
aas
jecxz
add
or
rcr
sub
sbb
hlt
add
test
jl
or
cmc
test
ror
je
test
xchg
iret
shl
xchg
xchg
jge
lds
adc
test
adc
mov
adc
stos
mov
xchg
or
div
in
sbb
fwait
inc
sub
jae
adc
cmp
inc
mov
aam
mul
mov
add
int3
and
add
and
xor
mov
aam
pusha
dec
jb
dec
enter
push
je
sub
xchg
xor
mov
loopne
dec
das
pop
push
mov
push
ins
and
or
stos
mov
pusha
xlat
mov
add
int3
jle
and
imul
lahf
dec
call
gs
imul
push
lock
gs
add
add
cmp
or
addr16
mov
mov
(bad)
push
jb
pop
imul
cmp
test
ja
int3
(bad)
mov
adc
pop
je
adc
enter
add
leave
xor
mov
imul
xchg
push
ja
movs
xor
push
or
push
shl
not
push
imul
mov
mov
les
pop
push
dec
jl
test
rcr
out
adc
js
sub
and
aas
dec
ficom
in
sbb
adc
leave
mov
in
sub
mov
jmp
xchg
lea
mov
or
sub
sbb
jno
sub
inc
and
dec
push
dec
cmp
add
sbb
mov
arpl
xchg
outs
xchg
and
movs
and
not
mov
daa
pop
ss
push
add
pop
jns
imul
outs
jae
pop
arpl
dec
popa
adc
pop
inc
jne
xchg
je
push
(bad)
pop
and
outs
outs
pop
push
jne
dec
loope
enter
mov
mov
jae
or
and
in
xor
xlat
or
es
or
jle
test
dec
test
(bad)
in
mov
es
inc
jp
lods
mov
popa
cmp
pop
xor
(bad)
xchg
cmps
xchg
push
inc
loopne
and
push
ret
xchg
xchg
jbe
dec
lock
jg
mov
or
mov
bound
pop
sub
add
adc
nop
fwait
mov
mov
arpl
cmc
pusha
push
xor
and
push
das
sbb
fwait
mov
sub
cmps
sub
pop
movs
not
jge
mov
mov
out
dec
and
pusha
rcr
push
aam
dec
push
in
mov
or
jb
arpl
lock
fiadd
mov
jbe
rcl
enter
shl
or
ja
or
(bad)
adc
cmp
inc
adc
imul
mov
pop
jmp
push
pop
jecxz
dec
mov
out
jbe
sub
mov
std
xchg
add
sub
adc
ret
and
lahf
push
stc
xchg
test
pop
adc
das
or
ins
stos
ja
add
outs
aad
adc
mov
pop
stc
test
pop
es
push
ret
cld
jne
mov
cmp
test
jg
xor
inc
mov
mov
mov
sbb
pop
jb
sbb
and
push
sbb
and
outs
test
mov
(bad)
fs
int
jne
cmps
or
ds
stos
in
xchg
cmp
jge
loopne
or
test
ins
shr
pop
pop
mov
ficom
int
push
or
fcomp
in
js
mov
je
fadd
adc
and
loopne
push
xor
test
jne
inc
ret
sub
xchg
aad
cmp
add
sbb
aad
(bad)
imul
lahf
clc
movaps
aam
je
mov
(bad)
and
aam
call
test
ror
xor
or
and
jg
mov
inc
fwait
xlat
pop
sbb
not
xor
and
aam
movs
imul
std
mov
or
add
sub
xchg
xor
mov
add
les
push
jmp
lods
sbb
xor
(bad)
hlt
jo
in
inc
xchg
push
sub
push
das
out
sub
sub
test
nop
push
inc
sub
movs
and
std
inc
mov
mov
call
lea
push
mov
jmp
rol
scas
adc
jne
push
loope
lods
cmc
sbb
fld
sbb
into
mov
popa
sbb
xchg
cmp
pop
jge
jg
sbb
inc
add
mov
adc
adc
fwait
je
or
inc
sub
loopne
inc
mov
fs
mov
stc
mov
sub
(bad)
dec
scas
xchg
(bad)
adc
xor
jns
push
or
push
inc
sub
mov
mov
jle
add
sbb
rcl
fwait
xchg
ret
jmp
stc
cmp
add
imul
adc
mov
retf
mov
jge
pop
adc
dec
(bad)
xchg
dec
sar
jg
mov
nop
or
jmp
fwait
xor
mov
inc
add
pop
test
jne
(bad)
adc
mov
hlt
leave
dec
mov
(bad)
pop
lea
xchg
xor
or
sub
cmp
bound
inc
cwde
sbb
xchg
mov
jns
pop
xor
or
cwde
cmps
sbb
xor
data16
jnp
pushf
addr16
adc
stc
or
xchg
lea
inc
jb
lea
ins
mov
dec
adc
pop
lea
push
pop
sbb
fcom
or
adc
add
hlt
pop
xor
pop
sub
sub
loope
fild
hlt
or
mov
or
outs
push
add
push
ds
adc
jo
mov
adc
cmp
push
mov
cmps
fld
les
or
mov
mov
xchg
out
adc
push
(bad)
scas
dec
call
xor
inc
lods
sbb
fimul
push
and
dec
or
and
add
movs
mov
sbb
cmp
in
test
lods
adc
xchg
xor
sti
dec
pop
mov
outs
ret
xor
stc
sbb
inc
test
sbb
inc
jae
fsub
ss
popf
das
aaa
mov
dec
and
adc
or
out
fisubr
in
add
jl
and
clc
push
dec
push
mov
jle
aad
mov
mov
sub
test
pop
adc
xchg
sahf
push
lahf
jmp
pop
and
or
popa
cmp
jb
addr16
mov
es
shl
pop
and
ret
mov
add
inc
imul
push
or
mov
loope
mov
pusha
dec
clc
lock
(bad)
xor
jae
in
mov
add
cmp
push
mov
es
pop
dec
dec
gs
push
xor
mov
push
iret
sub
ss
int
xor
loopne
nop
cwde
inc
imul
lea
sub
jne
pop
xchg
mov
pop
xor
mov
mov
cli
sub
sub
push
xor
xor
in
lock
or
cmp
xchg
xor
and
adc
add
sub
int
ret
xor
mov
rol
mov
inc
ss
(bad)
aad
arpl
fnstcw
mov
ret
jmp
call
cmc
sub
fwait
je
adc
adc
lea
aad
jge
add
push
add
or
mov
or
add
push
or
xchg
(bad)
loopne
push
mov
add
mov
mov
in
mov
xor
xchg
mov
rol
xchg
int
add
in
jl
push
sbb
fld
add
mov
ficomp
ss
pop
lods
mov
js
sub
or
push
xchg
data16
in
adc
mov
mov
or
pop
ret
mov
nop
int
add
xchg
mov
daa
lock
push
xor
clc
sub
xchg
push
or
mov
pop
arpl
pop
(bad)
(bad)
dec
add
inc
sar
(bad)
xchg
cwde
sbb
call
std
sti
push
xor
dec
jae
outs
ja
push
jb
xor
add
movq
test
fidiv
je
fs
pop
sub
test
lods
add
inc
push
sub
adc
dec
xchg
mov
hlt
dec
push
test
pop
pop
adc
call
xchg
inc
or
sbb
sbb
pop
add
dec
sbb
and
xor
shl
pop
mov
add
mov
and
dec
and
out
xchg
hlt
sbb
pop
push
push
inc
dec
pop
popa
mov
gs
adc
inc
es
xlat
pop
inc
outs
jbe
das
outs
ins
pop
inc
push
xor
(bad)
sub
or
cmp
adc
inc
jp
fistp
call
mov
mov
popf
int
cld
les
cmps
mov
nop
ja
sub
xchg
inc
cld
test
pop
repnz
inc
lods
fdivr
sub
jbe
sahf
cdq
xchg
outs
or
mov
inc
in
shl
sbb
sbb
sbb
push
popa
loopne
pop
mov
sub
mov
push
push
out
xchg
jp
add
xchg
fadd
ins
xchg
sbb
cmp
sbb
cli
mov
dec
ins
adc
js
or
cld
es
jns
add
cld
in
hlt
loop
sub
dec
je
loopne
test
xor
scas
add
adc
aad
popa
pusha
mov
movs
test
inc
inc
in
jge
jne
rol
and
popa
daa
aas
or
call
push
in
mov
add
pop
jne
call
or
dec
pop
movs
test
jo
(bad)
and
cwde
das
loopne
call
(bad)
arpl
pop
pop
sbb
push
(bad)
popa
jne
outs
movs
arpl
mov
sub
pop
push
inc
push
and
add
xchg
cmp
inc
cs
adc
scas
jmp
add
les
add
fwait
cmp
pop
jp
pop
jno
jmp
mov
inc
mov
pop
lock
pushf
jp
pop
push
xchg
xor
fsubr
pop
mov
rcl
sub
adc
xchg
ret
pop
or
fwait
adc
add
and
in
dec
push
mov
cmp
jo
xor
xchg
int3
mov
jo
gs
push
mov
out
cld
sub
or
add
jne
mov
loopne
inc
push
rcr
adc
xchg
lar
in
push
lods
and
movs
sbb
stos
imul
sub
popf
xlat
ins
outs
add
lock
test
mov
sub
dec
pusha
pusha
jge
pop
(bad)
mov
push
in
fstp
inc
jno
mov
jle
adc
dec
(bad)
or
mov
pop
in
adc
jge
pop
(bad)
mov
shl
adc
rcr
or
mov
xor
addr16
fcomp
test
push
or
pop
and
jbe
nop
inc
cli
sbb
adc
sub
sar
pop
rol
aaa
in
aaa
jns
fcom
aaa
call
enter
lea
xor
jbe
jge
xchg
push
push
out
xchg
ja
add
out
lea
adc
test
sub
dec
or
add
movs
adc
cld
and
sub
cld
cmp
dec
jne
stos
jo
and
sbb
xor
pop
sub
xlat
pop
mov
mov
rcr
rcr
mov
popa
aaa
mov
sbb
loopne
xor
pop
cmc
lahf
(bad)
loopne
sub
jo
sub
mov
pop
and
ret
and
sbb
sbb
or
sub
xchg
nop
sbb
push
pop
mov
scas
fidiv
push
cmp
mov
pop
jge
rcl
pusha
inc
stc
mov
or
dec
shr
mov
add
sub
mov
adc
rol
add
(bad)
sar
and
inc
pop
in
sbb
adc
lock
mov
sar
adc
daa
test
mov
and
call
daa
test
inc
out
(bad)
shl
add
scas
sub
or
aaa
xor
pop
xor
and
xchg
sti
adc
in
mov
in
and
das
data16
fnstcw
and
div
sbb
push
inc
and
test
dec
cmps
or
popf
repz
sub
out
outs
inc
(bad)
dec
lock
scas
add
inc
outs
fs
outs
fs
arpl
jns
(bad)
mov
adc
fidiv
xchg
and
lock
sbb
xchg
xor
inc
fcmovb
adc
pop
in
pop
adc
push
ret
and
or
lods
pop
cmps
cmp
sub
or
add
lock
pop
repnz
lock
int
and
lock
hlt
push
cmp
cwde
dec
sbb
jbe
fistp
popf
dec
jmp
fwait
dec
bound
enter
or
dec
jmp
fidiv
pop
adc
adc
outs
push
movs
cmp
dec
push
out
cmp
mov
stos
sbb
sbb
push
jmp
shl
and
inc
or
das
mov
and
les
inc
cmp
inc
mov
adc
sbb
push
pop
dec
dec
je
outs
lock
scas
mov
in
data16
sbb
hlt
xchg
xor
cmps
fiadd
push
add
and
or
inc
or
pusha
sbb
adc
xlat
dec
xchg
cmps
xlat
cmp
sbb
ret
sub
inc
pop
retf
dec
(bad)
xchg
ins
mov
test
mov
aam
xor
mov
dec
add
in
cld
push
mov
cs
hlt
adc
jle
mov
inc
lds
and
fadd
mov
sbb
push
pop
and
add
mov
push
mov
(bad)
cmps
and
leave
sub
pushf
xlat
mov
daa
scas
xchg
xchg
in
test
loopne
data16
rcl
xor
mov
mov
lods
cmps
push
push
mov
and
shl
cwde
lock
fisttp
in
loopne
inc
nop
xchg
pop
sub
pop
cmp
dec
push
(bad)
cmps
in
or
test
test
cmps
mov
fild
fs
hlt
cmp
cmps
pop
sub
dec
cmps
outs
shl
aad
nop
enter
imul
fwait
and
push
or
and
and
out
xor
in
movs
pop
xchg
dec
xchg
xchg
enter
xchg
xchg
cwde
and
fwait
in
ja
pushf
(bad)
fistp
and
lea
enter
xlat
invd
ins
sub
mov
cs
mov
in
ins
cmps
add
pcmpeqb
sbb
push
clc
pop
aam
not
test
sbb
repz
shl
cmp
ds
out
mov
aaa
push
ss
jnp
mov
pop
arpl
scas
push
leave
mov
dec
loop
xlat
addr16
aaa
lods
add
stos
clc
mov
out
mov
inc
scas
and
pop
jmp
and
mov
sbb
inc
fild
adc
je
fcmovnbe
rol
adc
inc
mov
pop
dec
sbb
addr16
add
sub
adc
add
fwait
xor
sar
mov
nop
mov
out
inc
dec
call
or
sti
add
mov
fwait
and
and
add
loopne
pop
idiv
dec
arpl
out
push
mov
pop
xor
inc
sbb
dec
mov
and
cmp
clc
pop
ja
bts
xchg
stos
inc
fadd
sbb
(bad)
in
cld
lahf
lea
aas
into
or
or
jle
enter
cdq
push
push
and
loop
shl
or
clc
scas
rcl
xchg
sub
add
repz
scas
and
fstp
mov
adc
scas
aaa
push
ss
je
lock
pop
lods
jp
adc
loop
xor
and
sbb
add
cmp
jo
mov
nop
je
fcmovu
pop
jns
sub
mov
xchg
and
add
cwde
xchg
in
mov
clc
daa
pop
sar
nop
inc
popa
xlat
jecxz
pop
out
scas
cmp
xchg
mov
jmp
sbb
sub
test
mov
or
popa
dec
aaa
mov
sbb
mov
mov
add
stos
xor
push
in
xchg
cmp
enter
xchg
pop
movs
lea
sbb
jle
push
mov
jne
and
arpl
or
xchg
lahf
push
xchg
fcos
scas
enter
adc
sub
(bad)
dec
cdq
and
fs
add
ins
or
mov
or
lods
push
sbb
dec
sar
pop
out
lahf
ins
mov
add
jne
jmp
addr16
fwait
xor
and
inc
addr16
sbb
pusha
int3
(bad)
stos
mov
adc
fadd
push
aad
mov
test
mov
imul
mov
adc
inc
or
into
push
cmp
dec
imul
and
jae
repnz
xchg
mov
and
ins
in
mov
mov
add
push
push
adc
(bad)
mov
pop
add
and
nop
or
aaa
mov
pop
add
scas
imul
popa
adc
scas
mov
mov
sub
pop
nop
rol
imul
es
push
sbb
or
test
ja
mov
repnz
out
add
pop
mov
int3
enter
imul
repz
rol
jmp
lds
mov
jno
adc
mov
sub
and
adc
pop
add
dec
(bad)
or
add
mov
sub
pop
addr16
outs
mov
(bad)
and
lds
add
in
or
es
jne
inc
and
mov
mov
movs
mov
sbb
cld
push
jecxz
(bad)
ja
mov
mov
cs
push
cmps
mov
mov
mov
pop
ss
gs
mov
mov
or
mov
mov
mov
call
and
add
lods
cmp
movs
movs
xchg
mov
add
sti
int3
jecxz
adc
(bad)
xchg
mov
(bad)
and
push
push
xchg
outs
int3
scas
mov
lods
jo
and
aaa
pop
loopne
ror
adc
enter
xor
mov
pop
jnp
push
and
and
rol
adc
(bad)
(bad)
aas
in
push
addr16
sub
jb
add
sub
jb
sub
je
add
mov
shl
(bad)
clc
adc
cwde
or
adc
xor
mov
mov
sbb
add
ins
mov
dec
jge
sbb
sub
push
and
lods
dec
sub
jge
push
pusha
imul
pop
mov
dec
aaa
pcmpeqb
push
adc
xor
int3
mov
and
inc
dec
(bad)
fcom
push
add
mov
fldenv
sub
aas
fdivr
xor
and
push
adc
push
in
adc
hlt
retf
rcl
xor
mov
je
sbb
pop
cdq
popa
ret
adc
push
or
imul
pusha
jne
repz
pushf
aaa
in
repnz
mov
sub
fld
jno
sbb
mov
or
mov
or
pop
ins
mov
cmp
(bad)
pop
cdq
int3
shr
pop
push
retf
push
or
sub
jb
and
cmp
jb
dec
pop
mov
mov
push
add
jl
sub
or
inc
(bad)
enter
sbb
jne
or
les
xor
xchg
jne
sub
push
test
and
xchg
adc
into
and
sub
fist
shr
pop
or
and
dec
add
add
jne
scas
push
ins
or
mov
mov
imul
loop
enter
sub
in
or
pop
aad
es
fisttp
add
enter
xor
sahf
das
add
mov
movs
cmp
js
jne
clc
dec
adc
nop
out
cmp
and
and
pop
lea
cmp
xor
or
jmp
in
add
aas
jne
ins
(bad)
fs
jmp
aas
push
xchg
inc
mov
imul
push
idiv
mov
cmp
push
adc
sbb
daa
aam
cmp
retf
mov
pop
jge
rcl
lds
ret
ss
aaa
out
push
in
cmp
xchg
les
mov
xor
push
pop
jne
mov
add
in
and
and
outs
pop
or
movs
and
test
pop
dec
and
loop
xor
jb
in
je
mov
jb
aam
adc
inc
adc
adc
sbb
in
mov
(bad)
stc
popf
xchg
ins
pop
test
push
or
sbb
push
mul
cmp
call
or
stos
and
aam
or
push
lods
ror
lea
mov
lock
jge
mov
or
loopne
jmp
cmp
dec
dec
mov
mov
mov
clc
dec
inc
mov
loope
sbb
ss
pop
mov
dec
dec
sbb
xor
sar
xor
int
add
aam
jno
les
ret
(bad)
cmp
or
in
(bad)
inc
das
add
ds
push
das
ds
cmp
sub
inc
sbb
pop
inc
mov
adc
in
push
ja
in
dec
pop
mov
adc
push
cmps
in
iret
sub
inc
push
popa
pop
in
sub
(bad)
jo
and
cld
xchg
mov
data16
nop
daa
je
mov
sub
sti
inc
pop
mov
ins
loop
adc
pushf
int
push
pushf
lea
push
sub
cld
cdq
mov
mov
fdivr
loopne
add
in
dec
jmp
inc
es
xor
xchg
outs
mov
leave
pusha
mov
xchg
adc
add
add
add
pop
daa
mov
inc
dec
or
test
sub
aaa
test
movs
inc
inc
xchg
sub
dec
sar
push
inc
mov
push
inc
call
cmp
xor
ja
and
ret
cmp
lods
fadd
sub
icebp
sahf
clc
lahf
inc
xchg
enter
or
fs
push
and
add
daa
adc
shl
and
loop
test
xor
into
repz
pop
js
call
out
mov
jns
icebp
jbe
sub
push
mov
jmp
mov
fldlg2
pop
add
ins
lock
adc
add
popa
adc
dec
ja
ret
jmp
dec
enter
push
imul
sbb
push
dec
add
aas
mov
out
inc
mov
or
xchg
mov
leave
xor
xchg
mov
jne
or
pop
lahf
mov
dec
movs
movs
in
mov
(bad)
sub
and
add
jmp
or
xor
push
aas
push
les
mov
(bad)
lock
das
les
jp
popf
and
push
and
or
and
js
pop
add
add
test
xchg
xor
mov
jp
leave
and
les
pusha
lea
call
cmps
mov
nop
stos
inc
lods
xchg
lds
ins
int
inc
ror
xchg
and
inc
sbb
stos
dec
and
test
cmps
in
cmp
jmp
sub
pusha
mov
push
lock
or
add
pop
or
mov
cmp
cdq
rcr
adc
(bad)
jb
add
or
mov
and
adc
cmp
sahf
xor
and
add
cmps
mov
adc
mov
dec
call
mov
repnz
fneni(8087
jne
and
or
mov
push
lds
je
jg
and
jmp
loope
(bad)
retf
popf
ins
add
sbb
test
sub
lds
outs
aas
jle
lods
pop
cmp
(bad)
out
sub
adc
sub
jmp
repnz
mov
and
or
mov
imul
adc
loopne
add
in
dec
inc
pusha
jne
test
xor
inc
addr16
add
inc
loope
popf
sahf
push
cwde
ffreep
and
cmp
repz
loopne
xor
jbe
pop
or
or
(bad)
and
jmp
mov
adc
mov
jmp
je
les
jmp
inc
dec
xor
inc
xor
fldcw
fucomp
and
loopne
add
xor
xchg
sbb
sub
pop
sub
add
cmp
call
cmp
jmp
jecxz
mov
inc
cmp
mov
jne
pushf
fmul
mov
das
dec
jle
add
aaa
pusha
test
icebp
or
or
add
push
inc
and
adc
add
loope
dec
adc
call
popf
mov
mov
push
jmp
add
push
mov
mov
and
(bad)
jecxz
jle
jne
iret
mov
mov
or
pop
xor
aaa
mov
out
inc
push
add
fldcw
jg
gs
xor
repz
enter
scas
lahf
adc
rcl
leave
jnp
adc
xchg
mov
pop
mov
xchg
dec
retf
mov
or
movs
lock
pop
shl
and
push
retf
clc
cmp
and
add
dec
mov
cmp
push
loop
hlt
pop
inc
scas
add
les
xor
test
pop
in
clc
mov
and
ror
hlt
xor
adc
bnd
jmp
and
jae
les
pushw
xor
adc
adc
cld
mov
adc
xchg
mov
pop
ror
ffreep
jb
push
mov
dec
push
fild
dec
daa
retf
int3
jo
or
fcomp
inc
lods
mov
inc
or
cmp
lock
xor
ror
push
pop
xor
dec
adc
mov
adc
jmp
(bad)
mov
adc
add
or
fld
jne
lods
in
mov
or
lock
(bad)
push
sbb
jbe
arpl
daa
pop
push
ss
lock
mov
xor
inc
push
inc
and
mov
push
jns
xor
add
out
into
fcomp
and
adc
or
cmp
adc
cmps
icebp
pop
repnz
sar
pop
add
mov
xor
dec
dec
inc
popa
or
xchg
inc
into
jo
mov
arpl
pop
and
xchg
push
rcl
pop
imul
mov
mov
sub
cmp
test
xlat
fcmovb
or
sbb
adc
loopne
xchg
outs
pop
aam
es
daa
fsubr
pop
xchg
fimul
call
cmp
fdiv
nop
fsubr
aam
test
repz
rcr
arpl
dec
jecxz
ror
sub
lods
inc
pop
in
add
pop
inc
sbb
inc
inc
mov
jnp
fadd
mov
adc
js
xor
pop
sub
inc
(bad)
in
dec
pop
push
or
pop
lods
in
call
xchg
call
cmp
sub
shl
in
and
pop
push
mov
or
add
hlt
sti
das
and
mov
lods
call
sahf
sub
lock
test
leave
sahf
mov
sbb
fadd
xchg
jns
cmp
ret
jp
jmp
or
ficomp
adc
or
mov
dec
inc
cmp
in
mov
add
sbb
ret
jnp
pop
adc
test
mov
ss
add
iret
stos
ins
adc
bound
pop
rcl
adc
and
dec
inc
mov
jo
xchg
or
(bad)
xchg
xor
repnz
lock
jmp
jnp
rcr
sbb
cmp
retf
fdivr
xchg
sbb
mov
and
bound
adc
cmp
inc
push
sub
ficom
xor
and
cs
and
stos
jecxz
pop
call
(bad)
mov
imul
fld
imul
fst
or
lods
pop
mov
imul
dec
test
add
shl
xchg
cli
outs
int3
mov
les
pop
aaa
sahf
arpl
inc
inc
mov
inc
xor
(bad)
mov
iret
mov
retf
aaa
out
dec
mov
mov
or
xor
ss
imul
ins
push
mov
add
xor
xor
stos
stos
sahf
lock
or
add
popa
aaa
adc
mov
pop
adc
aas
or
arpl
dec
mov
xchg
fdiv
xchg
mov
push
int3
movs
push
loopne
adc
cmp
sbb
les
(bad)
push
ja
push
jne
mov
mov
call
xchg
mov
outs
sbb
and
popf
mov
(bad)
sub
fs
ror
retf
mov
rol
push
cmps
sbb
adc
and
pop
mov
push
dec
push
ror
mov
and
in
imul
mov
and
add
push
sub
add
test
loopne
or
mov
aam
pop
push
das
shr
push
jp
add
jmp
in
push
push
mov
rol
cdq
ds
(bad)
(bad)
sub
cmp
lea
inc
and
addr16
adc
inc
rcl
ret
or
cmps
and
lods
les
pop
lods
les
movs
add
mov
pusha
cmp
push
rcl
imul
sbb
jbe
dec
sbb
sub
cmps
mov
and
and
and
mov
add
xchg
lods
inc
xchg
mov
mov
mov
daa
adc
fsub
pop
sti
push
cld
gs
aam
and
or
sub
mov
jo
loopne
sti
jne
fild
xor
push
dec
mov
and
or
xor
jmp
sub
sub
push
inc
sub
pop
adc
lods
cmp
add
inc
in
push
aas
adc
rcl
inc
shl
in
and
shl
aad
push
and
sbb
cmps
sahf
inc
call
mov
jb
das
aam
arpl
sub
add
xchg
inc
mov
mov
rcr
push
ins
cwde
sbb
fisttp
test
xchg
sbb
fcomp
and
int
jb
ret
sbb
mov
call
push
cmp
fcom
bound
lock
xor
movs
pop
dec
mov
add
add
dec
add
xor
mov
adc
dec
xchg
in
sub
add
cli
ins
pushf
das
cmp
fadd
or
push
push
enter
fiadd
and
test
dec
lods
(bad)
(bad)
mov
mov
push
clc
dec
pop
mov
ret
mov
mov
mov
mov
sbb
and
push
aam
hlt
mov
inc
xlat
(bad)
in
or
jno
and
push
fcomip
and
mov
jns
iret
pop
ffreep
adc
and
xor
mov
mov
out
loopne
add
enter
jecxz
add
or
mov
test
add
jae
xchg
or
mov
sbb
push
or
scas
pop
pop
xor
scas
push
or
dec
ja
dec
push
test
push
imul
mov
pop
shl
add
push
or
(bad)
daa
add
adc
dec
pusha
nop
dec
sbb
clc
inc
pop
rol
call
and
nop
xchg
add
and
push
sbb
xchg
pop
add
aaa
sbb
or
sbb
sub
mov
xor
out
test
dec
jecxz
cs
cmps
and
cmp
and
imul
add
inc
outs
addr16
movq
push
jp
or
ins
outs
or
cmps
add
outs
outs
pop
jbe
or
inc
pop
or
sbb
adc
stos
int
int
dec
jmp
ss
or
mov
ja
std
push
jae
popa
pop
or
arpl
(bad)
jg
jae
pop
aas
adc
pop
outs
arpl
jo
popa
fs
jo
(bad)
sub
imul
jns
cmp
jbe
int
in
ins
or
out
adc
pop
imul
packsswb
arpl
test
iret
jbe
cmp
and
push
or
cwde
clc
push
fwait
in
ja
add
dec
outs
popa
arpl
push
cmp
xchg
add
test
push
mov
das
hlt
in
xchg
pop
jb
dec
in
in
in
sub
sbb
aaa
and
shr
jmp
ror
pop
xor
ins
add
pop
add
cdq
mul
push
sti
xchg
add
jo
sub
sub
mov
sub
mov
int
push
push
ret
inc
out
scas
pop
sti
mov
leave
xor
test
mov
push
ja
pop
sbb
sbb
or
out
out
fiadd
add
mov
push
adc
dec
add
and
outs
jo
add
or
or
add
adc
cwde
jge
outs
jae
nop
xor
adc
scas
cmp
push
dec
push
xchg
add
ss
add
jmp
inc
or
pop
dec
cmp
ja
stos
nop
push
loopne
sbb
(bad)
nop
popa
sbb
wrmsr
popa
nop
xchg
or
call
sub
fiadd
push
lea
xlat
or
ins
cmp
dec
push
dec
push
sub
cmp
shl
and
inc
int
inc
shr
dec
inc
inc
inc
popf
or
shr
xchg
inc
xor
arpl
add
dec
repz
sbb
xor
inc
add
(bad)
jmp
dec
adc
hlt
push
push
fsubr
inc
inc
or
test
jne
add
outs
or
pop
arpl
fxch
mov
cdq
loop
jmp
xchg
sub
sbb
add
pop
nop
cmp
imul
jge
and
nop
add
outs
inc
xor
cmps
icebp
pop
test
sub
(bad)
cdq
mov
add
jmp
repnz
movs
inc
sbb
and
dec
push
sbb
pop
dec
cmp
jo
push
or
mov
pop
pop
and
and
dec
repnz
dec
in
movs
lock
mov
aam
pop
(bad)
in
mov
sub
call
dec
imul
je
popf
push
pop
mov
lds
arpl
das
test
add
in
daa
test
lds
out
pop
cld
in
inc
scas
inc
cs
pop
sub
inc
sbb
mov
and
inc
xor
mov
aad
jo
arpl
jb
imul
add
add
sbb
pushf
out
lahf
in
pop
pop
hlt
out
and
push
out
mov
mov
ret
add
lahf
push
leave
cs
popa
data16
sbb
and
gs
pusha
mov
or
inc
jbe
sub
jg
pop
enter
lock
mov
retf
sub
sub
sub
aad
cmp
sbb
mov
and
sub
nop
add
iret
pop
icebp
xchg
icebp
cs
add
icebp
cld
sub
adc
inc
add
ss
cmp
imul
mov
out
add
jmp
or
in
jno
xchg
out
repz
and
sub
xchg
add
jne
jo
push
cmp
enter
cmp
pop
push
push
lods
adc
jbe
xor
jae
dec
or
shl
sti
adc
outs
or
push
dec
aaa
out
rcl
push
or
pop
pop
push
add
cwde
ror
inc
push
push
iret
inc
push
and
nop
ss
pop
push
test
(bad)
pusha
dec
std
xchg
jb
arpl
jno
sbb
sahf
pop
and
and
sub
adc
hlt
sub
mov
inc
jb
xchg
call
inc
imul
mov
xchg
add
in
or
lea
imul
dec
dec
and
xchg
or
dec
add
dec
outs
je
inc
imul
test
imul
pop
daa
sahf
and
mov
je
adc
mov
sub
sub
cmc
jmp
add
cmp
xchg
pop
(bad)
ret
neg
push
gs
test
sbb
and
pop
push
loopne
cmp
popa
scas
jae
mul
mov
sub
inc
xor
jb
test
cmps
inc
sbb
inc
jo
call
add
or
fucomp
xchg
mov
push
ror
aad
push
pop
frstor
stos
mov
or
dec
jae
(bad)
cmp
jmp
adc
das
sub
mov
pop
pushf
stc
dec
sub
inc
call
jbe
jae
mov
and
sub
(bad)
push
xchg
inc
nop
in
cli
inc
cli
call
aaa
mov
outs
leave
add
daa
and
imul
pop
rol
or
pop
or
nop
(bad)
in
push
sub
dec
adc
xor
cdq
and
inc
sub
and
inc
int
cmp
jo
sub
jp
(bad)
sub
push
mov
push
imul
sbb
adc
pushf
lock
sub
xor
dec
adc
cmps
test
or
test
pop
inc
js
jno
daa
inc
dec
pushf
js
cld
pop
sbb
stos
pop
push
jb
std
dec
(bad)
adc
push
mov
sub
fwait
in
mov
push
add
mov
dec
inc
mov
pop
aam
out
dec
loop
nop
mov
clc
mov
pop
and
scas
sbb
or
xchg
(bad)
fidivr
fldenv
dec
inc
pop
jp
ds
outs
popa
bound
push
inc
mov
jne
cmps
inc
or
or
pop
push
inc
mov
jae
cdq
and
pop
or
sbb
sar
arpl
inc
or
mov
and
cmp
inc
and
vmread
inc
add
mov
jo
add
fadd
nop
lods
push
out
inc
out
add
cmp
add
sbb
rcr
cmp
sbb
push
push
dec
inc
loopne
jbe
sub
mov
and
inc
rol
and
sub
shl
(bad)
popaw
jne
je
xor
or
xchg
inc
push
or
pop
clc
ds
jp
adc
in
cs
pop
or
mov
pop
sub
test
push
push
push
popa
jb
push
mov
jbe
not
add
rcl
jmp
sbb
pop
nop
mov
or
add
not
inc
movs
es
je
es
cmp
pop
and
mov
inc
or
daa
pop
pop
push
inc
dec
sub
dec
add
bound
movs
ret
pusha
pop
mov
mov
rcl
movs
dec
je
adc
mov
les
and
xlat
mov
inc
push
cmp
or
adc
or
std
les
pop
bound
inc
rcl
sti
or
jmp
inc
test
js
loopne
leave
pop
cmp
inc
mov
or
adc
or
jo
jo
cmps
pop
sub
push
movhlps
pop
test
or
pop
pusha
in
or
pusha
push
mov
add
add
mov
dec
popa
pop
push
aad
mov
rol
cmps
add
imul
or
mov
inc
aad
xchg
cmp
enter
pop
adc
add
pop
xor
pop
imul
or
es
mov
or
pop
or
jb
loopne
or
add
push
xor
push
and
ds
outs
addr16
add
and
pop
mov
test
push
or
and
add
push
cmp
push
(bad)
jmp
or
ret
or
add
pop
aaa
add
pop
out
or
aam
scas
sub
ror
inc
adc
nop
or
and
ds
pop
aam
sub
in
push
fisubr
cld
sub
dec
mov
fistp
xchg
int
jo
cmps
clc
cmp
imul
adc
pop
push
sub
or
adc
loopne
pop
inc
inc
(bad)
inc
or
outs
push
add
add
test
push
ins
cs
xchg
push
dec
outs
fs
add
or
fmul
dec
or
imul
clc
inc
fs
ins
cmovbe
dec
jle
xchg
or
jo
imul
xor
and
xor
dec
cs
push
jecxz
bound
dec
mov
add
jmp
lock
sub
push
enter
and
mov
or
out
aam
retf
cmp
sub
inc
dec
jge
les
adc
inc
inc
or
sbb
icebp
test
sbb
rol
cdq
sahf
dec
xor
in
add
call
popa
rcl
leave
push
or
xchg
mov
add
adc
pop
mov
outs
jb
or
jae
outs
aam
je
pop
pusha
mov
retf
or
ja
inc
inc
dec
xlat
or
jne
fisub
jo
les
inc
shl
or
dec
add
adc
loopne
xor
add
daa
xchg
pop
pop
icebp
adc
add
test
pop
add
sub
test
dec
outs
inc
imul
mov
adc
push
mov
and
cmps
adc
nop
addr16
cmp
cmp
or
cmova
jge
pop
and
or
push
cmp
inc
in
sbb
xchg
and
cmp
add
push
mov
imul
ror
push
cmps
pop
cmp
adc
pusha
cld
lahf
push
adc
xchg
shrd
adc
push
sub
(bad)
adc
lods
sbb
push
pop
sbb
xchg
and
add
mul
adc
pop
and
mov
push
pop
mov
aam
or
dec
pop
repnz
(bad)
rcl
adc
xchg
adc
sbb
jae
mov
mov
into
pop
cmp
fist
mov
push
add
push
sub
scas
mov
or
jmp
pop
and
ins
aam
add
sub
add
or
and
or
jmp
or
je
cwde
mov
and
bound
ds
in
mov
in
pop
fdivr
les
push
mov
push
add
adc
fimul
fiadd
fs
push
hlt
pop
mov
push
pop
aas
test
inc
adc
or
arpl
or
cmp
and
mov
push
push
dec
rol
add
pop
adc
std
lds
int3
add
cld
call
sub
pop
adc
stos
pop
cmps
add
add
bound
pushf
sbb
arpl
and
lds
cdq
inc
jne
ins
mov
(bad)
sbb
xlat
or
inc
xchg
adc
iret
(bad)
aad
jo
inc
popa
ja
add
jnp
xchg
loopne
sbb
je
sub
mov
aaa
pop
jb
les
(bad)
fcomp
sbb
adc
enter
popa
push
and
cmps
adc
pusha
pop
mov
and
data16
xchg
nop
sbb
adc
dec
lds
inc
not
test
and
jae
and
push
fiadd
sub
cmp
sub
mov
mov
pop
ins
xchg
setg
add
pop
add
inc
lar
in
jmp
(bad)
mov
sbb
loope
in
ret
dec
and
int3
xchg
push
cs
and
mov
call
(bad)
push
and
pop
nop
cmc
div
in
add
out
pop
daa
and
aas
mov
arpl
adc
mov
or
in
cmp
or
cmp
nop
xor
mov
sar
cmp
push
jae
movs
xor
mov
mov
shl
or
imul
jmp
xor
sub
sbb
or
fadd
inc
inc
and
jbe
inc
pop
enter
loope
cld
sbb
cmp
mov
int
(bad)
mul
jmp
jo
fst
mov
or
ins
aaa
adc
xor
test
push
int
and
je
or
inc
jo
dec
sbb
mov
int
out
inc
es
es
ins
out
(bad)
fistp
shl
pop
sbb
rcr
dec
(bad)
jmp
dec
(bad)
out
lds
dec
mov
int3
and
outs
mov
inc
cmc
or
adc
pop
pop
aaa
jle
push
int
fwait
and
inc
adc
or
fistp
mov
add
mov
xor
jg
es
sbb
rcl
push
loopne
add
lods
sbb
lods
enter
push
pop
cwde
int3
dec
repz
cmp
out
imul
fstp
pop
loopne
push
sar
mov
add
add
xchg
ja
push
xchg
inc
scas
(bad)
jns
sbb
push
lods
pop
push
mov
arpl
inc
xor
adc
in
add
inc
jmp
cmp
loope
pop
dec
xor
inc
dec
mov
add
xor
jbe
pop
repnz
cmovae
rol
js
push
push
mov
ins
or
rcl
or
fmul
jg
xchg
adc
or
add
sbb
inc
jp
sbb
jecxz
push
out
jmp
push
nop
or
mov
push
add
stc
dec
repnz
cmp
out
popf
jne
xchg
sbb
dec
or
or
add
ficomp
or
pop
cmc
sar
int3
jl
(bad)
jo
sub
dec
push
sbb
sbb
cmp
xchg
mov
mov
jecxz
and
dec
nop
dec
pop
repnz
push
lds
and
or
inc
test
pop
sub
movs
add
lahf
sub
push
lods
test
mov
pusha
jp
pop
mov
jmp
ds
add
xor
idiv
in
pop
inc
push
cmp
shl
add
xor
mov
outs
outs
push
and
and
repz
inc
ins
xchg
jbe
stos
push
push
push
and
and
push
pop
inc
fsubr
mov
inc
sbb
rol
sub
cwde
in
inc
mov
shl
mov
pop
test
sub
push
and
and
aas
jbe
add
xor
add
je
out
pop
dec
stos
add
push
sub
push
aas
push
xor
sti
clc
pop
xor
js
pop
ins
jnp
jbe
pop
xor
sub
jmp
(bad)
sbb
push
push
ja
cdq
or
aam
dec
bound
pop
adc
or
rcr
lea
fist
(bad)
cmps
das
jne
add
in
and
sbb
inc
pusha
add
es
xchg
and
arpl
sub
cmps
push
loopne
sbb
lahf
loopne
mov
inc
and
clc
jl
jmp
gs
cdq
sbb
je
add
sar
mov
outs
retf
sbb
add
sub
rcl
cwde
xor
cmp
push
neg
(bad)
sbb
stos
push
inc
xlat
stc
adc
cmp
cmps
jecxz
add
daa
add
aad
(bad)
(bad)
add
pop
or
push
mov
add
pop
bound
sbb
into
push
dec
pop
xchg
pushf
call
and
outs
or
sbb
sbb
outs
cmp
and
jmp
add
addr16
jmp
and
sub
loope
loope
jnp
push
retf
ror
push
sub
cwde
test
mov
sub
inc
loopne
jns
or
add
adc
adc
outs
cmps
in
sub
sbb
sbb
(bad)
add
out
rol
scas
sub
cmp
mov
mov
add
es
sub
test
or
and
jmp
mov
inc
mov
(bad)
mov
cmp
add
sar
or
movs
pop
scas
fisttp
inc
(bad)
cmp
outs
pop
mov
in
sub
and
xchg
cdq
pop
cmp
mov
or
xor
hlt
cmps
scas
jp
and
pop
dec
jmp
sub
adc
push
mov
cmps
loopne
in
add
jo
push
iret
rcr
dec
scas
movs
jo
scas
pop
xor
mov
(bad)
sbb
dec
pop
out
add
or
out
clc
sub
jg
nop
push
repnz
sub
sub
sar
ins
test
and
lods
(bad)
mov
cmps
out
xchg
mov
(bad)
lock
or
lock
pop
fbstp
cmp
jae
dec
rol
out
out
test
push
dec
and
cmp
test
out
jne
popa
jo
idiv
and
(bad)
fcmovu
or
push
and
fld
out
pushf
nop
mov
loopne
lds
pop
pushf
fnsave
sub
test
test
(bad)
and
pop
inc
inc
push
(bad)
fsubr
sub
and
shr
inc
adc
repz
clc
dec
aad
xchg
nop/reserved
movs
fst
sbb
js
inc
fdivp
gs
mov
push
pop
mov
pop
and
ja
and
xchg
pop
add
mov
cmp
loopne
rcl
adc
es
fsub
push
test
daa
test
sbb
and
dec
out
ret
xor
adc
mov
dec
mov
xor
add
xchg
mov
inc
or
jg
add
icebp
push
cmp
pop
call
and
or
jb
xchg
pop
dec
cwde
inc
or
pop
inc
popa
popa
xchg
fldcw
jmp
fcmovnu
push
cmp
push
push
and
add
mov
imul
xchg
pop
loopne
xor
pop
ret
int3
and
and
(bad)
(bad)
dec
neg
push
add
repnz
aam
addr16
mov
int3
sub
xor
test
xor
sbb
ins
rol
enter
(bad)
in
add
sub
xchg
out
mov
cs
and
cmp
xor
add
pop
jbe
call
lods
push
loopne
das
xchg
xor
mov
js
xor
xchg
mov
imul
xor
xor
js
inc
cmp
xor
xor
dec
sub
sahf
or
xor
neg
add
iret
add
push
push
xlat
xchg
xchg
iret
mov
daa
mov
gs
mov
and
fdiv
jo
inc
jbe
jb
jns
mov
or
test
not
pusha
sub
cmps
retf
sbb
lds
pop
lods
retf
test
mov
add
inc
sub
pop
div
ret
movs
push
mov
test
enter
adc
inc
inc
xchg
enter
or
out
add
mov
or
inc
dec
fisttp
lock
add
nop
push
push
xor
add
xor
mov
sar
add
es
and
sbb
sbb
dec
add
add
jae
and
enter
inc
push
gs
adc
inc
inc
stc
ins
xor
add
outs
rcr
xchg
xor
xor
push
xchg
and
mov
xor
cmps
and
aad
out
pushf
je
jecxz
(bad)
bswap
test
xchg
stos
mov
dec
enter
add
cmps
enter
bound
cmps
cmp
and
aaa
xchg
and
or
nop
and
lods
int
test
cmp
call
push
sbb
inc
add
xor
sti
mov
sbb
adc
mov
mov
add
or
fbstp
add
inc
mov
and
and
iret
and
mov
dec
call
imul
mov
add
cmp
inc
and
sub
stos
dec
xor
scas
dec
lock
lods
pop
xlat
adc
xor
push
jmp
add
or
stos
fdiv
and
adc
inc
inc
or
pop
les
jbe
inc
xchg
fdivr
dec
add
dec
repnz
xchg
pop
adc
pop
clc
or
xor
loop
inc
int3
sbb
or
lods
push
fadd
add
addr16
mov
mov
inc
adc
loopne
das
sub
push
xor
sbb
sub
pop
leave
and
leave
and
adc
ins
es
add
cmp
into
mov
sub
imul
and
aad
inc
and
cmps
fs
mov
loope
add
jmp
cmp
sbb
addr16
rcl
mov
(bad)
iret
mov
add
ds
sbb
cmp
sub
je
enter
das
mov
or
verw
inc
push
pop
arpl
push
or
inc
push
hlt
cmp
xchg
adc
jmp
gs
cmp
shl
je
xchg
xchg
add
cmp
add
(bad)
sbb
sub
fsub
xor
inc
or
add
inc
sbb
adc
adc
jp
dec
pop
xchg
popa
arpl
sbb
xchg
xchg
call
jns
or
jge
dec
sbb
cmp
call
jle
push
sub
jbe
jp
test
je
leave
pop
mov
les
test
xor
fdiv
es
imul
cld
gs
jae
and
pop
ds
push
jns
mov
adc
daa
addr16
pop
add
inc
push
enter
or
sub
ds
push
outs
ins
je
or
jne
into
in
mov
jmp
repnz
xchg
dec
xor
call
pop
popa
push
rcr
bound
jb
iret
xchg
and
push
or
rol
pop
popa
imul
mov
jmp
push
mov
(bad)
outs
pop
stos
or
inc
adc
adc
mov
out
int3
add
or
shl
and
adc
push
pop
add
pop
mov
imul
rcl
inc
aas
wrmsr
in
or
ret
or
mov
(bad)
pop
jnp
dec
pusha
dec
add
add
xor
mov
ret
retf
mov
test
inc
rcr
and
mov
pop
mov
push
add
add
cmp
mov
sub
jo
inc
cmp
aam
push
jecxz
cmp
dec
sub
dec
or
sub
(bad)
out
dec
mov
xor
ds
iret
mov
add
jge
nop
sbb
cld
sbb
jne
fbstp
jecxz
repnz
test
xchg
xor
or
xchg
lsl
aam
mov
dec
clc
mov
inc
cmp
push
movs
pop
imul
adc
sbb
xor
sub
daa
shr
lock
call
mov
sub
jmp
jno
add
sub
pop
call
ret
jmp
(bad)
fld
inc
or
adc
jne
stc
into
outs
mov
and
(bad)
arpl
or
fadd
dec
add
jb
in
or
lds
adc
pushf
stos
mov
xor
sbb
repnz
adc
(bad)
push
add
cmp
add
cmp
or
sbb
inc
es
mov
outs
pop
and
(bad)
leave
xadd
jo
inc
or
or
inc
or
sub
sub
pop
retf
inc
dec
jne
out
dec
mov
sbb
iret
pop
xor
inc
pop
adc
push
add
mov
fistp
add
and
test
jae
xchg
inc
imul
clc
jo
in
push
dec
iret
dec
adc
add
lea
add
es
add
les
mov
mov
popa
cmp
arpl
dec
in
pop
in
lock
enter
lock
cmp
jmp
in
mov
sbb
or
(bad)
(bad)
stos
ror
sub
dec
gs
outs
outs
xor
cmp
mov
out
ins
daa
or
outs
rcl
js
outs
jne
push
mov
push
pop
test
outs
addr16
or
imul
add
pop
push
rcr
sub
push
outs
pmaxub
mov
cs
pop
add
and
dec
jb
pop
ret
aaa
or
sbb
outs
mov
in
dec
sub
ret
inc
sub
aaa
cmp
push
sbb
das
das
jg
push
xchg
pop
lahf
cmove
sbb
in
es
and
inc
jb
pop
inc
xchg
in
ins
and
jbe
sub
push
pushf
lahf
sbb
movs
dec
mov
pop
dec
data16
cmp
scas
ss
jle
and
pop
cmp
xor
adc
ins
sbb
outs
or
ins
adc
add
leave
ins
xchg
and
and
das
cmp
push
sbb
add
pop
imul
nop
jb
xchg
jl
nop
dec
cld
adc
or
fld
pop
or
call
cwde
xor
aad
call
sub
push
mov
mov
inc
add
push
test
pop
cmp
sub
cmp
jne
mov
inc
add
sahf
or
inc
or
add
adc
or
dec
adc
xchg
cmp
or
int3
fmul
add
and
xchg
fisubr
inc
lahf
sbb
loopne
xor
and
pusha
and
fimul
cld
in
js
cmps
jge
(bad)
mov
mov
out
lock
clc
js
dec
leave
jns
mov
fldenv
xor
mov
and
rol
pushf
out
xchg
xor
call
pop
dec
cld
push
rcr
jne
stos
lods
iret
xor
inc
inc
imul
add
xor
inc
dec
dec
push
inc
push
dec
xchg
test
and
and
or
in
push
mov
add
into
push
mov
xchg
shl
push
sbb
or
sbb
cmp
das
fs
add
inc
hlt
cs
in
pop
enter
jb
call
imul
mov
pop
cmp
sub
cdq
fs
jl
and
jecxz
mov
dec
push
pop
push
ror
ja
ins
push
adc
sbb
arpl
push
and
movs
add
mov
arpl
fst
cmp
clc
loop
popa
pop
inc
push
adc
std
imul
(bad)
cmp
dec
ins
popa
addr16
adc
call
pop
aas
sub
inc
adc
icebp
imul
daa
arpl
leave
cs
mov
lock
sbb
data16
inc
imul
add
or
out
aaa
add
adc
cmp
es
push
adc
adc
xchg
and
dec
or
loopne
sbb
sub
mov
push
push
inc
mov
inc
adc
pushf
mov
or
je
(bad)
ss
push
add
jg
repz
dec
nop
adc
sub
add
jnp
push
cmp
jnp
pop
xor
add
lea
dec
ret
cmp
ja
cmc
dec
dec
mov
push
pop
mov
ins
xchg
push
int
push
daa
daa
mov
jne
xor
cmp
not
dec
daa
adc
cmp
pop
std
jmp
test
sbb
and
pop
inc
lods
adc
push
js
push
inc
mov
and
xor
and
adc
jne
jo
mov
cmp
or
inc
xchg
es
retf
sar
aaa
push
pop
pop
or
sbb
push
fstp
sar
inc
pop
push
xchg
inc
scas
pop
jg
cmp
lods
sub
sub
jb
ret
retf
fwait
sub
pop
sbb
enter
pop
je
push
test
xchg
and
xlat
cmp
sub
jl
fcomp
mov
and
hlt
push
or
add
ror
das
in
add
sub
jmp
test
or
pusha
outs
nop
mov
or
movs
std
mov
jmp
push
mov
and
xchg
sub
sub
cwde
mov
mov
call
pop
aad
add
jmp
dec
fiadd
jmp
neg
sbb
fdiv
nop
push
sub
cmc
pusha
or
or
or
dec
loop
in
adc
and
add
shl
pop
xor
add
pop
xchg
jb
shr
cmp
adc
xchg
push
ins
inc
or
in
xchg
jb
loopne
add
and
xchg
(bad)
xor
push
dec
adc
pushf
ins
mov
dec
and
ss
sbb
cmp
mov
xor
pop
cmp
test
leave
int
push
and
adc
jnp
pop
sub
mov
sub
dec
adc
inc
sub
xor
add
or
cli
inc
xor
mov
inc
jl
sbb
scas
(bad)
push
adc
js
fmul
and
and
je
push
jecxz
inc
and
or
or
in
fsubr
outs
loopne
fimul
pop
push
gs
(bad)
call
(bad)
dec
or
xchg
or
mov
push
popf
xor
fld
pop
add
pop
test
pop
xchg
inc
lods
sub
mov
pop
daa
mov
cmp
dec
sbb
test
or
fadd
fdivr
inc
sbb
nop
pop
test
cmp
ds
clc
test
sub
pop
cmp
xchg
inc
je
mov
sub
adc
fdiv
jne
and
cmps
pop
cmp
mov
lea
sub
jmp
dec
xor
xchg
jno
ret
lahf
pushf
add
pop
xlat
cmp
rol
xchg
or
inc
add
(bad)
imul
(bad)
(bad)
fs
stos
out
cld
mov
inc
movs
sahf
and
pop
dec
pushf
push
jb
mov
pop
clc
fdiv
add
mov
add
add
gs
push
daa
ret
add
(bad)
hlt
cld
add
add
stos
mov
add
inc
xchg
daa
cmp
mov
push
cmp
lock
not
or
outs
in
test
jmp
(bad)
pop
jae
je
dec
jne
imul
ret
aad
jmp
call
xchg
stc
adc
cmp
add
sbb
sbb
push
sub
ds
or
and
das
call
mov
inc
fdiv
pop
xchg
outs
in
and
(bad)
(bad)
pop
inc
ins
aas
mov
mov
adc
clc
and
pop
inc
mov
aaa
data16
adc
and
kmovw
add
clc
or
dec
rcr
push
movs
mov
call
pop
ss
xor
rol
jl
add
call
cmp
dec
inc
mov
idiv
push
inc
inc
sub
mov
mov
dec
xchg
pop
ret
outs
push
bound
pop
mov
push
push
call
addr16
mov
repnz
sub
sub
xchg
or
mov
jg
add
or
je
push
sbb
je
sub
iret
cmp
xchg
fisub
aaa
and
in
xchg
sbb
popa
mov
jmp
push
add
sub
jp
mov
ret
in
dec
f2xm1
shr
xor
daa
(bad)
aaa
and
jl
pop
cmps
cwde
and
ins
pop
jle
(bad)
push
mov
and
adc
and
push
lock
aas
add
inc
mov
dec
push
jns
aam
cwde
jno
leave
fstp
inc
repz
dec
sbb
add
loope
push
and
dec
(bad)
inc
shl
in
mov
(bad)
jb
popf
xchg
pop
or
pop
enter
inc
jo
add
fadd
je
(bad)
sbb
mov
fcomp
ins
xor
push
and
jb
ja
push
retf
push
sub
(bad)
pop
mov
mov
and
sbb
sub
sub
fmul
sub
inc
mov
pop
daa
fs
push
enter
outs
inc
les
in
add
cmps
pop
sub
rcr
add
sbb
or
pop
adc
rcr
fisub
test
add
shl
mov
test
ret
fadd
cmp
jo
sub
add
aam
fadd
adc
mov
mov
mov
inc
xor
adc
cwde
(bad)
out
mov
pop
cmp
jne
outs
xchg
fmul
or
inc
push
test
sbb
mov
pusha
mov
adc
mov
bound
js
add
aad
adc
call
rcr
bound
xchg
pop
popf
adc
pop
out
and
and
or
imul
repz
and
adc
pop
push
push
test
pop
cli
cld
or
enter
ret
mov
arpl
inc
xor
sbb
inc
ror
or
mov
dec
movs
ins
or
pop
or
movs
push
mov
push
pop
sbb
inc
scas
jp
add
sub
push
jbe
ss
cmp
inc
add
mov
(bad)
push
add
cmp
test
js
adc
lea
cwde
xlat
jmp
and
push
test
nop
pop
push
repz
outs
adc
adc
sub
lea
mov
les
call
mov
fucomip
mov
in
add
adc
es
pop
sub
out
xlat
mov
in
in
inc
(bad)
mov
ins
inc
rcl
cmp
inc
mov
shl
lock
(bad)
rcl
jae
mov
and
or
jle
dec
push
jecxz
dec
mov
jp
sub
into
dec
dec
int
in
xor
nop
push
jp
loopne
popa
jo
mov
dec
cmp
push
shl
jnp
popa
nop
or
rol
call
and
or
mov
imul
test
inc
sbb
push
push
in
pop
aas
lea
jmp
pop
rol
ficom
fwait
in
fldpi
daa
xor
loopne
pop
jl
sbb
fdivr
mov
repz
mov
push
in
push
adc
mov
in
adc
add
dec
fsub
rcl
mov
xlat
scas
sub
in
and
fiadd
test
mov
adc
scas
mov
and
and
inc
mov
hlt
adc
xor
xor
inc
sar
sub
cld
pop
loopne
test
mov
pop
and
test
fmul
lea
push
mov
das
fdivr
adc
add
cli
xlat
add
inc
into
or
xchg
cld
or
or
inc
sbb
xchg
clc
shr
mov
out
xchg
mov
add
popa
bound
xor
je
int3
sub
and
jne
sub
and
or
jae
xor
mov
pavgb
in
enter
lock
repz
mov
pusha
pop
ret
inc
clc
xor
shl
(bad)
cld
iret
inc
inc
aad
clc
add
xchg
sbb
call
retf
data16
jbe
fs
pop
pusha
lahf
mov
dec
ror
mov
jae
nop
sbb
pop
test
loopne
mov
ins
jae
xlat
rcr
sti
rol
add
pusha
add
sub
xchg
lods
push
adc
pop
test
sub
call
fnstsw
in
sbb
shr
and
sbb
jae
add
(bad)
repnz
jns
mov
pop
xchg
sahf
cmp
data16
inc
mov
jne
pop
pop
add
cwde
and
sub
or
cmp
fist
xchg
pop
ins
jno
in
sti
add
xchg
ror
je
gs
nop
sbb
pop
inc
rcl
pop
data16
xchg
cmp
sub
sub
cmp
add
sbb
aad
in
jne
pushf
ror
or
popa
sub
xlat
out
dec
nop
ficomp
inc
ja
es
and
push
repz
adc
sub
je
sub
popa
sar
pop
(bad)
mov
or
jae
push
xchg
pushf
fsub
outs
imul
add
cld
enter
push
es
gs
ins
les
mov
mov
xchg
les
ror
push
sbb
popf
cdq
push
stos
adc
cmp
adc
sub
jge
popf
enter
jmp
inc
dec
dec
push
push
adc
ss
xchg
inc
add
cmps
xchg
pushf
jae
ja
loop
adc
fmul
xchg
enter
stos
xchg
(bad)
push
add
mov
sbb
imul
mov
inc
adc
cmp
test
fadd
mov
push
xchg
mov
cwde
dec
pop
int3
push
pop
or
add
xor
scas
int3
push
je
adc
popf
xor
push
and
fwait
neg
adc
push
xchg
cld
pop
jbe
inc
out
test
sub
inc
cmp
add
adc
jne
aas
sub
add
test
xchg
sub
ja
xor
add
rcl
sbb
enter
inc
fmul
sub
mov
mov
jmp
(bad)
ffree
or
cmp
cmp
mov
jo
adc
pop
fdivr
in
daa
xchg
fbld
push
stc
fst
push
or
or
les
pusha
sbb
xlat
xchg
nop
test
pop
push
fucomi
and
hlt
(bad)
(bad)
dec
or
pop
imul
jmp
xor
leave
inc
ret
clc
sbb
pop
fist
pop
mov
adc
push
add
push
pop
scas
(bad)
dec
add
xor
or
pop
xor
push
mov
mov
add
pop
popa
jmp
adc
(bad)
push
ins
ins
aas
xchg
mov
dec
and
test
sti
and
dec
or
imul
sub
inc
mov
lea
mov
adc
js
fld
or
xchg
sbb
inc
adc
mov
or
sbb
adc
push
xchg
inc
les
sub
movs
fidivr
movs
and
adc
or
adc
into
push
mov
xor
shr
xor
sbb
sbb
inc
(bad)
xchg
lods
lock
sub
sbb
cld
and
stc
ins
and
mov
adc
int
lock
into
and
cld
jne
and
adc
adc
mov
mov
test
js
jbe
mov
rcl
enter
ret
ret
dec
cmp
inc
xor
xor
shl
mov
sbb
xor
sbb
inc
dec
jne
out
or
mov
mov
or
aaa
mov
mov
push
and
jns
cmp
mov
xchg
mov
retf
and
adc
inc
adc
mov
pop
mov
shr
xchg
xchg
push
lock
psubsw
sub
xor
inc
jnp
lods
test
push
jle
add
adc
mov
xchg
mov
xor
(bad)
adc
test
leave
inc
or
sub
jmp
xchg
mov
xchg
mov
imul
fadd
xchg
imul
and
or
test
mul
or
mov
div
push
xor
shl
icebp
pop
icebp
sbb
jg
aad
mov
cld
mov
and
add
mov
pop
cmc
ret
pop
sar
call
mov
mov
rcl
fwait
rcl
pop
call
shl
je
fdivrp
aas
retf
sti
shl
or
adc
or
or
mov
inc
stc
adc
or
jle
arpl
or
or
xchg
jno
mov
add
in
dec
inc
call
inc
sub
xchg
ret
and
mov
or
add
or
add
(bad)
ds
sub
arpl
inc
and
ret
add
(bad)
fst
add
add
add
imul
and
dec
shl
enter
in
clc
lea
aam
lea
outs
pop
push
retf
cli
movs
sub
and
clc
inc
pushf
sbb
pop
mov
inc
push
les
sub
retf
ror
fcomp
or
dec
push
enter
adc
scas
sbb
mov
std
lahf
stc
scas
dec
adc
xor
adc
and
and
xor
les
out
or
xor
ret
mov
jle
push
bound
mov
lea
lock
mov
mov
idiv
and
adc
repnz
mov
xlat
outs
adc
xor
out
push
(bad)
sub
xor
mov
cmp
xor
inc
cmp
fmul
mov
out
dec
fisub
sbb
and
iret
sbb
and
jns
clc
retf
adc
cmp
cs
lock
jo
popf
aam
iret
sbb
adc
adc
sbb
cmp
nop
mov
xlat
pushf
and
xor
xchg
adc
xor
call
xchg
sub
sbb
pop
shl
jns
pop
stc
mov
mov
shl
rol
call
and
adc
ror
add
sbb
aam
and
test
xor
and
push
aad
(bad)
and
mov
and
or
adc
ror
adc
mul
add
adc
pop
psllw
mov
mov
sub
push
push
and
mov
nop
pop
jle
mov
push
or
adc
xor
cmp
jns
cmp
xor
or
push
push
dec
mov
sbb
int
dec
xchg
sub
cmp
test
jbe
dec
lods
inc
test
adc
stos
cmp
lds
cmp
jo
sbb
dec
xor
fsubp
imul
cmp
cmp
mov
call
inc
call
xor
adc
mov
les
imul
push
jb
jb
pop
sbb
pop
leave
pusha
fs
ins
jo
add
mov
test
xchg
push
or
inc
ret
jns
aas
mov
pop
test
mov
nop
cmp
aad
cmp
mov
inc
push
cwde
dec
xchg
into
dec
dec
pushf
dec
mov
movs
test
or
and
sbb
and
inc
popf
push
cld
push
ja
sar
push
push
lock
push
mov
(bad)
lock
xor
out
clc
cmp
sub
loope
outs
test
fst
leave
cmp
push
sbb
mov
test
jge
xor
loope
or
push
pop
or
cmp
cmp
(bad)
mov
xchg
jns
sbb
jns
and
sbb
cmps
or
rol
xchg
(bad)
dec
nop
lods
mov
cwde
cmp
or
(bad)
das
das
das
push
leave
pop
xor
xchg
add
es
shl
nop
jl
and
sbb
inc
cdq
mov
punpcklwd
imul
and
leave
xchg
jl
repnz
cwde
push
xchg
in
mov
add
fsub
imul
and
cdq
add
xchg
das
add
cmp
mov
or
pop
mov
jb
inc
iret
repnz
mov
dec
adc
push
mov
movs
push
jnp
aas
movs
inc
sub
test
cmp
xor
pop
adc
sub
jb
mov
mov
vucomiss
and
lock
loopne
scas
inc
pop
jg
sbb
retf
sbb
mov
loopne
xchg
pop
enter
push
cmp
in
cmp
lods
das
add
pop
mov
sahf
ins
jo
mov
clc
jno
xchg
mov
shl
xchg
push
xor
sbb
sbb
lea
add
gs
and
es
ds
stos
push
stos
mov
stc
xor
repnz
adc
arpl
xchg
retf
or
xor
stos
sub
adc
call
jnp
xchg
mov
add
add
push
mov
jb
hlt
or
out
mov
mov
sub
sbb
mov
xor
je
jle
shl
push
ds
into
xchg
xchg
xchg
dec
xor
xchg
dec
adc
std
daa
stc
enter
push
xor
dec
dec
mov
xchg
enter
fwait
(bad)
cmp
jae
push
test
lock
mov
dec
pop
jb
clc
sbb
mov
push
xchg
sbb
das
xchg
and
data16
jno
stc
enter
fsub
nop
aas
test
and
ds
sbb
dec
mov
and
push
inc
push
xor
add
sub
xchg
push
add
mov
test
lea
cwde
push
repz
fcom
xrelease
gs
push
leave
inc
cmps
test
shl
int
lods
xchg
rcl
(bad)
rep
ins
pcmpgtb
inc
in
inc
leave
hlt
xor
xchg
mov
cdq
dec
(bad)
xor
dec
lock
or
sahf
mov
sbb
xchg
jmp
cmp
popa
pushf
or
jmp
shr
popf
dec
shl
in
je
das
push
fdivr
in
adc
setbe
mov
repnz
ins
or
outs
call
jp
movs
or
leave
pop
ss
lock
test
cld
cwde
sub
jle
jae
and
cmp
sbb
fmul
kmovw
sbb
ds
retf
jae
in
mov
mov
inc
mov
fdivr
jg
mov
xchg
mov
pop
repnz
outs
inc
jae
add
dec
ret
movs
test
dec
mov
retf
cmp
aas
adc
fdiv
loopne
adc
and
retf
inc
ret
rol
inc
push
leave
xchg
mov
push
push
mov
test
ror
fbstp
ss
jb
(bad)
repnz
add
push
jo
and
shl
cdq
nop
jg
mov
dec
adc
rcr
xor
sub
jmp
sub
fwait
shl
test
jb
pop
xchg
sbb
add
jns
and
aad
fsubrp
test
sbb
jecxz
jl
sub
cmp
or
loopne
xchg
sub
xor
add
cmp
dec
test
nop
aas
add
pushf
sub
aas
outs
and
push
adc
sbb
sbb
sbb
add
and
pop
sahf
not
(bad)
push
sub
ins
repnz
mov
add
xor
push
xchg
lods
or
add
loopne
xor
adc
add
cmp
dec
or
jle
inc
sbb
add
dec
add
push
and
adc
or
test
mov
adc
jae
add
and
or
shl
lahf
sub
cwde
cli
or
ins
dec
in
mov
xlat
inc
add
or
and
cld
or
inc
and
adc
jo
stos
data16
add
add
cli
mov
int3
(bad)
dec
inc
or
jecxz
xlat
(bad)
jg
mov
adc
xor
add
sub
add
cmp
xchg
adc
in
inc
loopne
mov
add
not
push
or
retf
inc
dec
sbb
pop
inc
stos
jbe
pop
jae
add
test
push
or
or
mov
sbb
sbb
push
xchg
sbb
aaa
shl
pop
fcom
test
mov
cmp
dec
adc
adc
fwait
neg
and
add
and
adc
mov
jbe
fld
xor
imul
jns
and
adc
ficomp
xor
scas
push
and
in
fisubr
sbb
add
jbe
imul
gs
sbb
xchg
aam
mov
xchg
mov
inc
dec
sar
pushf
adc
jae
mov
push
data16
or
mov
push
data16
ret
xchg
dec
rcr
add
out
push
inc
fwait
(bad)
push
cmp
js
inc
pop
inc
or
and
add
cdq
pop
cld
js
cmp
adc
mov
ss
inc
and
xor
or
jb
out
add
adc
ss
cld
inc
xor
sar
mov
sbb
push
adc
outs
mov
adc
mov
or
and
and
add
sub
sub
mov
xlat
and
push
lock
add
or
mov
sbb
mov
bound
ret
sbb
mov
xchg
mov
mov
jb
imul
xchg
int
out
or
inc
dec
add
mov
mov
xor
jnp
dec
sbb
push
or
adc
or
sbb
cld
and
cwde
adc
pop
ficom
or
adc
out
dec
push
cmp
ror
mov
jmp
push
push
int
push
mov
ss
ret
add
and
imul
push
jg
inc
test
inc
outs
jne
and
inc
ins
outs
jae
sub
test
push
xor
sbb
push
or
push
pop
inc
(bad)
add
(bad)
adc
add
nop
movs
xchg
mov
push
cmp
mov
lea
xor
addr16
imul
pushf
cli
sti
push
test
jne
sar
adc
pusha
mov
pusha
mov
es
and
data16
fcmovnbe
dec
je
xchg
dec
ret
jne
clc
dec
jmp
inc
mov
rol
(bad)
push
lahf
bound
xchg
inc
inc
iret
push
pop
fisub
jae
adc
push
add
push
and
dec
nop
jae
pop
add
sti
sbb
adc
movs
or
mov
outs
mov
add
loope
icebp
bswap
xchg
test
pop
and
mov
xchg
xor
inc
push
adc
adc
xchg
ds
call
adc
shl
mov
rcr
mov
xor
pop
clc
pusha
cdq
into
dec
cs
or
cwde
outs
(bad)
jmp
mov
xchg
iret
mov
lea
lods
mov
xchg
dec
jne
rol
sar
push
sbb
push
xor
lahf
stos
clc
mov
ror
(bad)
jmp
mov
add
dec
inc
xor
xor
add
pop
sbb
gs
jg
js
xchg
jl
fst
mov
pushf
(bad)
push
aad
pop
inc
pop
mul
mov
adc
pop
pop
aam
inc
jnp
lea
into
popa
mov
cmp
mov
push
mov
jp
mov
and
sbb
cmp
outs
push
mov
and
and
rcr
nop
nop
adc
add
adc
mov
and
inc
out
push
fimul
nop
in
in
pop
test
fmul
jecxz
rcl
dec
mov
call
add
js
xor
dec
mov
add
mov
dec
jmp
shl
in
ins
push
sbb
add
xchg
cwde
lds
mov
test
and
jmp
and
or
test
dec
imul
and
xchg
push
add
jle
add
sbb
dec
mov
and
add
call
or
jg
leave
and
jbe
test
popa
or
add
js
inc
inc
dec
mov
xor
aas
push
push
xchg
fadd
sub
lock
pop
add
fsubr
addr16
inc
rcr
inc
jae
and
and
dec
gs
cwde
fcom
daa
or
add
(bad)
cmp
out
push
and
push
sub
outs
adc
push
sbb
sbb
mov
pop
dec
sar
stos
or
mov
movs
test
mov
outs
add
dec
(bad)
in
and
pop
loopne
inc
mov
push
xchg
or
sbb
out
loop
jno
iret
sbb
add
inc
xchg
packssdw
mov
sub
xchg
and
das
mov
rol
sub
sub
mov
ret
cmp
push
xchg
nop
sbb
(bad)
adc
or
(bad)
stos
mov
aad
sub
adc
pop
rcr
inc
sub
popa
xor
add
pop
pop
movs
test
adc
or
push
dec
dec
jmp
pop
cwde
dec
inc
jb
cmp
lods
lock
mov
jmp
aas
pop
mov
jp
ffree
leave
icebp
lods
and
aam
cmp
push
call
mov
test
ja
push
mov
push
or
mov
retf
(bad)
call
imul
mov
in
push
scas
inc
dec
in
push
jmp
ins
mov
in
or
or
test
adc
leave
test
adc
sbb
loop
aad
adc
cmp
das
outs
hlt
mov
sub
rcr
push
fs
push
add
cmp
pop
enter
adc
mov
inc
pop
daa
push
or
lock
or
xor
cmp
imul
push
xor
enter
loop
sbb
cmps
cmp
xor
push
inc
sbb
inc
or
outs
push
rcr
jmp
pushf
mov
in
adc
sub
and
jae
push
push
test
arpl
push
inc
test
push
or
or
fcomp
sub
(bad)
in
mov
dec
into
popf
mov
push
lock
hlt
cmp
dec
mov
shr
adc
push
pop
pop
add
lods
rcr
or
inc
(bad)
cwde
inc
and
push
enter
clc
mov
(bad)
mov
or
pop
ret
ds
ror
aaa
cmps
or
jae
es
jmp
mov
and
adc
mov
nop
inc
xlat
or
or
jle
pop
sub
cmps
movs
pop
and
adc
add
adc
inc
sbb
cmp
nop
sbb
add
pop
adc
adc
and
cmp
add
cdq
add
fs
sbb
sbb
pop
clc
outs
push
outs
iret
bound
lods
mov
retf
or
mov
mov
out
adc
aaa
fdiv
adc
scas
test
xor
and
rcl
xchg
and
push
push
dec
or
movs
adc
adc
daa
imul
push
(bad)
adc
push
ins
scas
sbb
dec
arpl
push
cmp
and
nop
cmp
pop
pop
pop
enter
int3
mov
mov
pop
pop
xchg
pusha
retf
xchg
test
daa
or
pusha
pop
(bad)
xor
and
mov
adc
xor
ret
mov
dec
jecxz
ins
fs
inc
call
das
in
sbb
or
dec
mov
mov
iret
push
and
retf
sahf
xchg
dec
outs
imul
and
neg
add
or
ins
cmc
inc
ror
xchg
cmp
push
mov
mov
mov
fs
sahf
mov
jo
mov
retf
push
inc
mov
movs
nop
scas
inc
push
pop
pop
sub
fs
push
add
out
mov
mov
scas
mov
in
clc
push
and
and
sbb
sub
pusha
sbb
xchg
dec
mov
mov
mov
adc
cmps
and
mov
rol
sub
xor
lahf
push
mov
jmp
fild
loopne
sub
int
imul
das
bound
es
call
xchg
(bad)
or
add
sbb
pusha
add
sti
pop
push
add
and
xchg
adc
mov
jb
mov
mov
div
mov
and
sbb
or
test
lahf
inc
inc
inc
sbb
pop
sbb
sbb
mov
xor
nop
mov
add
pop
cld
mov
imul
push
mov
inc
call
nop
cmps
cmp
or
pop
in
loope
retf
sbb
mov
ins
mov
popa
pop
push
push
idiv
outs
shl
push
shl
jbe
add
rcr
repnz
adc
ins
mov
mov
sub
mov
jmp
gs
inc
cs
rcr
xor
lock
dec
add
loopne
or
sbb
xor
lock
ret
push
xchg
fbld
xor
loope
adc
pusha
mov
fs
adc
pusha
dec
inc
and
retf
push
add
dec
cmp
dec
aam
movs
pop
push
jnp
cmps
scas
dec
jp
scas
add
and
cmps
popf
mov
data16
(bad)
xor
push
mov
or
in
sub
xchg
xchg
clc
xchg
or
or
ja
shl
sub
rcr
stc
sbb
xlat
cmp
mov
jne
and
mov
dec
mov
sbb
xor
push
cmc
and
cmp
jmp
jmp
lock
(bad)
mov
retf
push
mov
retf
add
mov
in
icebp
cmp
sbb
js
or
add
inc
dec
clc
fld
xor
or
pop
and
fiadd
add
sahf
(bad)
jo
test
jecxz
add
pop
pop
adc
inc
ret
pop
cdq
or
xlat
mov
pop
pusha
or
add
aaa
adc
xor
and
jecxz
add
int
mov
shl
test
dec
mov
sub
push
mov
fbstp
add
into
in
inc
test
test
ret
(bad)
mov
clc
pop
push
adc
addr16
mov
outs
push
dec
push
loopne
call
dec
bound
fld
ss
sbb
mov
push
and
cmps
lahf
ret
sbb
cmp
test
jmp
mov
add
enter
ret
sbb
or
add
xchg
leave
pop
mov
push
(bad)
add
xor
sub
pop
and
ret
rol
cwde
fwait
sub
rcr
push
sti
xchg
jnp
jmp
daa
add
push
jo
test
loope
icebp
stos
and
fwait
pop
test
out
dec
(bad)
loopne
and
in
and
push
add
or
mov
(bad)
mov
inc
movs
(bad)
or
rcl
push
jg
dec
js
sbb
sub
rol
sbb
stos
fdivrp
xor
test
mov
and
out
int3
and
mov
push
mov
add
sub
rcpps
shr
push
or
xchg
inc
sub
add
xchg
sbb
stc
fild
std
mov
xor
sbb
repz
jmp
mov
mov
sub
dec
xor
dec
rol
lods
adc
movs
sbb
rcl
and
mov
outs
inc
and
cwde
cmp
push
arpl
adc
push
jle
add
std
fcmovb
lahf
adc
fild
xor
test
sbb
sub
jnp
or
sub
jmp
xor
jle
inc
inc
jbe
pop
ret
std
dec
sbb
jne
es
das
dec
dec
popa
push
movs
out
sbb
enter
sbb
dec
pop
fmul
leave
inc
cwde
popa
mov
xor
xor
push
fsubrp
cmp
cmp
imul
pop
mov
iret
ss
dec
pop
xor
and
ror
jb
sahf
sub
mov
push
pop
push
xlat
mov
(bad)
jmp
test
or
enter
fbld
and
mov
push
cmc
frstor
retf
hlt
sbb
nop
enter
ror
sahf
cdq
subps
and
push
cmps
sub
test
and
or
sub
push
fs
sbb
sbb
mov
and
mov
call
daa
retf
cmp
pop
scas
pop
push
test
retf
lock
retf
shr
hlt
clc
pop
xchg
packssdw
retf
cmp
imul
lea
and
retf
inc
pusha
jmp
mov
pop
repz
ucomiss
xor
adc
rol
mov
and
push
das
inc
push
sub
lods
sbb
test
loopne
add
das
mov
mov
loopne
retf
dec
sar
mov
sub
leave
enter
add
push
retf
adc
cmc
or
sub
push
add
cli
sub
popa
sub
(bad)
xchg
pop
nop
cs
lods
mov
cmp
loopne
js
popa
xor
dec
jo
pop
dec
call
inc
inc
and
int3
push
enter
(bad)
int3
mov
lock
fmul
in
ja
mov
inc
dec
inc
mov
int3
test
mov
mov
add
or
pmulhuw
dec
int
int
int
and
inc
push
int
push
push
popf
movs
out
push
push
jecxz
into
sub
xor
(bad)
loope
push
fimul
retf
mov
scas
loope
cmc
push
xor
fsub
test
pushf
in
inc
into
xchg
dec
add
loopne
xchg
xor
jmp
mov
pop
mov
mov
lahf
sub
jae
ret
jg
mov
mov
xlat
mov
ror
in
sbb
loopne
fsubr
ror
mov
test
adc
jb
add
test
pop
iret
iret
xor
add
cmps
sub
(bad)
push
out
mov
sub
stos
popf
sar
xor
pop
sub
adc
stc
daa
sbb
pop
iret
dec
jb
cmp
rcl
mov
fwait
or
pusha
sbb
dec
cmps
rol
pop
fldcw
std
scas
inc
outs
xchg
add
sar
into
inc
icebp
mov
inc
or
add
inc
imul
sub
shr
mov
ret
in
inc
sbb
dec
add
pop
ret
xchg
sahf
je
das
rcl
rol
xor
mov
jmp
in
shrd
adc
outs
je
shr
add
xor
xchg
sbb
jg
add
sbb
loope
shr
rcl
rcr
shr
aad
xchg
add
cmp
push
adc
dec
push
push
nop
mov
pop
pop
pop
sub
js
nop
mov
dec
inc
mov
nop
aam
aam
add
sbb
mov
pop
xor
pop
in
pusha
shl
and
lock
add
add
sbb
push
ret
(bad)
mov
nop
adc
(bad)
ins
aad
leave
or
dec
cs
jns
or
xor
pop
sub
stos
(bad)
repnz
(bad)
sbb
mov
das
in
(bad)
mov
in
adc
inc
xlat
sbb
mov
rcl
jne
out
pop
fild
leave
push
jb
add
scas
jmp
cld
xlat
leave
repnz
cs
push
fdiv
cs
cmp
call
or
adc
sub
mov
outs
cmp
xor
(bad)
dec
in
sbb
outs
and
or
enter
fst
jns
fs
ins
push
cld
push
mov
mov
pop
sub
stos
and
cwde
inc
pop
fdivr
xor
xchg
adc
sahf
imul
or
(bad)
cmps
push
pop
pop
xchg
or
loope
pop
(bad)
adc
push
cmps
xor
nop
outs
pop
sub
mov
push
addr16
adc
mov
jb
(bad)
cmp
xor
inc
dec
inc
stc
lock
inc
movs
add
(bad)
sbb
inc
mov
(bad)
sbb
inc
movs
lea
cs
fdivr
sub
loopne
mov
inc
add
add
add
cmps
pop
cmp
add
xor
pusha
add
push
and
push
mov
fnsave
adc
dec
pop
sub
ror
clc
rcr
add
inc
and
imul
mov
mov
jns
fild
fbld
imul
sub
lahf
outs
pop
sub
mov
xchg
(bad)
mov
and
xor
icebp
mov
out
pop
fiadd
jb
dec
loopne
hlt
pop
mov
xchg
sbb
das
add
sub
setle
xor
test
mov
jmp
dec
or
add
in
loope
in
push
cwde
lock
add
lock
test
nop
sahf
pop
xor
push
add
and
push
fcomp
les
mov
pop
pop
adc
nop
es
mov
outs
jmp
jecxz
popa
jecxz
loop
dec
xor
add
xor
sbb
int3
xchg
pop
ja
clc
(bad)
sub
dec
sbb
icebp
fisub
std
push
mov
ret
(bad)
pop
mov
jle
cld
pop
nop
mov
mov
lods
mov
pop
cmp
add
les
inc
pop
mov
and
xor
adc
xor
dec
loop
pusha
das
pushf
xchg
in
retf
cmp
sbb
les
cmp
dec
jno
adc
loope
adc
add
cwde
sbb
addr16
xor
test
and
pop
pop
dec
dec
nop
inc
mov
dec
int
xor
fld
adc
ins
(bad)
movs
jns
push
mov
popa
lock
mov
movs
adc
dec
push
cdq
dec
or
sub
mov
adc
call
int3
mov
clc
mov
add
dec
es
sub
add
add
push
or
je
cmps
clc
sub
add
sbb
nop
cmp
mov
xlat
xchg
dec
enter
push
jnp
dec
and
dec
dec
or
pop
pop
jmp
adc
push
mov
pop
mov
pushf
xchg
pop
das
mov
mov
movs
loopne
mov
xchg
pop
pop
sbb
lea
mov
sub
mov
movs
dec
nop
add
movs
dec
push
inc
mov
add
cli
sbb
loopne
movs
mov
add
pop
sbb
jp
pop
ret
pop
mov
aad
dec
push
rol
inc
add
les
(bad)
daa
push
sub
inc
bound
jae
inc
retf
sbb
jmp
jmp
push
fadd
ss
sar
push
fs
jle
out
xchg
push
or
inc
inc
xor
jecxz
adc
push
sbb
dec
or
and
aam
mov
jmp
shl
call
loope
xor
sahf
fsubr
pop
mov
adc
add
popa
mov
jecxz
sbb
repnz
(bad)
or
or
inc
leave
lahf
imul
mov
push
push
and
int3
xchg
test
(bad)
sub
push
sbb
or
mov
mov
mov
mov
jb
or
sbb
inc
sbb
clc
ins
imul
adc
int
call
and
mov
ror
or
inc
loop
icebp
add
xchg
push
xlat
mov
popa
sub
mov
xor
pop
add
test
jmp
mov
dec
pop
jle
adc
pusha
adc
dec
icebp
je
imul
shl
push
jb
jmp
adc
enter
inc
rol
mov
xor
and
dec
xor
dec
xchg
mov
push
imul
mov
(bad)
jbe
in
push
dec
out
ja
pusha
cmp
inc
scas
mov
and
xchg
sbb
mov
enter
sbb
arpl
jo
(bad)
jmp
inc
les
out
xchg
loop
jg
bound
mov
ret
lahf
fsubr
inc
int
xor
mov
or
push
push
mov
sbb
jne
cmp
cmp
clc
push
cwde
pusha
sub
mov
add
ins
add
iret
jne
xchg
mov
mov
add
and
inc
adc
nop
in
out
add
inc
inc
xlat
rol
mov
xchg
paddq
cmp
pop
add
(bad)
jns
mov
sbb
push
pusha
jb
out
sbb
mov
dec
popf
clc
pop
sub
dec
cmp
repz
mov
adc
hlt
xor
mov
add
add
add
outs
adc
mov
or
lods
js
mov
jno
jne
inc
adc
test
sub
push
mov
cmp
add
add
sbb
gs
lea
leave
cmps
(bad)
lock
jno
xor
rol
add
aam
pop
inc
sub
dec
lock
cmps
dec
ss
dec
mov
xor
ss
popa
mov
into
paddsb
iret
xor
fstp
call
aam
push
aad
inc
sbb
push
inc
push
adc
inc
out
call
xchg
mov
dec
or
mov
ret
inc
cmp
pop
into
in
mov
fist
in
mov
sahf
or
inc
mov
and
mov
adc
outs
push
mov
cwde
mov
(bad)
pop
jb
push
push
sub
sub
xchg
outs
mov
pandn
fs
xchg
mov
add
mov
in
mov
xor
dec
sbb
(bad)
fmul
mov
pop
aas
cmp
pop
sbb
mov
inc
mov
sub
inc
lock
add
xor
mov
pop
loopne
scas
add
add
fwait
dec
shl
(bad)
inc
(bad)
ret
mov
icebp
or
cs
lock
mov
inc
inc
and
dec
or
ret
mov
aam
mov
in
ret
pushf
xchg
push
movs
mov
mov
fs
mov
aas
enter
shl
not
sbb
xor
jne
cli
int3
daa
in
xchg
mov
in
data16
mov
loop
adc
lods
and
movs
or
in
or
mov
mov
sti
cld
clc
or
xchg
add
enter
mov
int
push
cmc
addr16
imul
fidivr
arpl
jle
test
sbb
pop
out
icebp
fsubr
ret
dec
sub
sub
scas
mov
dec
or
add
inc
(bad)
(bad)
imul
idiv
cld
mul
xor
pop
mov
sub
gs
inc
cs
shr
jo
jns
xchg
cmp
sbb
pop
dec
(bad)
or
ins
shr
add
imul
inc
dec
jl
cmc
sbb
dec
lock
sub
xlat
pop
mov
fcom
and
add
jnp
dec
xchg
pushf
rcl
(bad)
daa
xchg
sub
sbb
call
pop
push
xor
push
add
sub
enter
dec
(bad)
sub
mov
adc
xor
jns
jg
(bad)
aaa
pop
push
mov
jb
sti
push
cli
mov
jmp
mov
xor
dec
inc
or
mov
mov
cs
sbb
es
jne
lock
nop
mov
mov
dec
aaa
mov
lahf
lahf
test
lods
out
or
push
data16
outs
xchg
adc
jmp
dec
or
adc
adc
dec
xchg
push
push
push
enter
and
inc
cmp
push
adc
jmp
pop
xor
hlt
jne
repnz
test
inc
test
mov
sbb
sbb
jae
sbb
pop
sti
or
mov
xchg
jmp
pusha
or
cmp
out
cli
hlt
sbb
sub
sub
push
cli
pop
test
xchg
hlt
mov
hlt
pcmpgtw
call
(bad)
sbb
(bad)
repz
or
mov
jb
cmps
and
loopne
mov
ins
nop
hlt
loopne
sbb
mov
xor
jo
pop
in
inc
sbb
and
mov
(bad)
mov
fdivr
in
pop
test
and
lock
loopne
pop
jb
loopne
sbb
or
inc
aas
fcmove
sub
dec
jmp
push
inc
aam
add
sub
cmps
aas
dec
aas
push
mov
cmps
and
inc
rcl
loope
ja
mov
out
pop
sub
add
(bad)
cli
hlt
dec
push
fs
cmp
fsub
movups
and
dec
xchg
dec
jne
test
jg
ror
cld
test
call
xor
popf
push
(bad)
stos
jnp
dec
inc
movs
or
mov
adc
sub
pop
xchg
jb
push
sbb
sub
sbb
mov
push
mov
std
push
or
(bad)
adc
push
add
sbb
repz
mov
and
mov
and
jbe
adc
cmp
lock
and
iret
sub
ret
(bad)
int3
js
mov
bnd
repnz
add
inc
dec
jne
ja
fst
movs
inc
and
ds
inc
inc
xchg
xor
in
and
and
or
das
in
cmp
loope
lahf
std
xor
jne
pop
in
or
(bad)
in
enter
sbb
mov
sbb
ret
sub
lods
push
fcomp
sar
push
in
xchg
js
cdq
inc
pop
or
adc
xlat
shr
jmp
pushf
ja
mov
int3
daa
adc
mov
push
cmp
test
push
or
or
enter
cmp
inc
and
jnp
adc
rcl
mov
jg
stc
loopne
mov
add
inc
inc
lahf
and
dec
fbstp
jns
add
fiadd
sbb
sub
fiadd
(bad)
pop
push
add
ret
fadd
push
pop
pop
ja
add
inc
or
inc
push
and
cmp
push
mov
xor
push
movs
sub
mov
not
adc
inc
inc
fisubr
pop
mov
push
repnz
ins
add
fdivr
jl
nop
inc
rcl
mov
inc
xor
cmp
xchg
rcr
mov
push
mov
pop
pop
dec
or
sbb
nop
in
shr
inc
sub
dec
sbb
pop
(bad)
rcr
adc
pop
es
sbb
mov
nop
retf
and
test
rcl
or
cdq
fs
popf
inc
cs
sbb
xchg
xchg
ja
adc
inc
enter
sbb
add
inc
mov
ret
dec
mov
adc
popa
mov
shl
mov
jecxz
outs
int3
aas
jnp
nop
jmp
ror
es
xchg
pop
push
shl
pop
addr16
or
pop
adc
mov
leave
add
in
xchg
inc
loopne
push
daa
sub
and
inc
fcom
cmp
sbb
adc
sub
bound
shr
mov
mov
jp
add
adc
jbe
jg
push
and
pusha
sub
push
fsub
dec
aaa
sub
dec
loop
out
cmp
jl
aad
pop
add
or
push
add
add
dec
lds
push
add
rol
lahf
push
rol
or
scas
and
test
repnz
push
mov
mov
addr16
inc
loopne
inc
repz
mov
mov
mov
out
pop
add
dec
imul
sbb
je
aad
test
cmc
sub
ret
adc
bound
sub
jecxz
sub
sbb
and
ret
aas
inc
inc
add
cmp
inc
jmp
jno
lds
shr
cs
add
outs
mov
(bad)
ret
add
or
push
sbb
adc
mov
shl
test
jl
adc
add
ficom
lock
inc
loopne
adc
inc
lods
xchg
mov
jl
jle
out
lea
(bad)
xor
add
add
popa
cmps
aad
mov
inc
fld
or
cmp
inc
and
xor
aas
push
inc
xor
jge
fwait
mov
nop
sbb
xor
daa
lock
es
mov
mov
in
push
ror
sbb
cmp
sahf
sbb
or
leave
push
popaw
sub
sbb
cld
mov
mov
fst
sub
mov
xchg
inc
mov
jmp
xchg
add
inc
xor
inc
pusha
jnp
mov
aaa
jno
lock
fwait
call
mov
add
jns
mov
cmp
pop
ds
xchg
int
inc
fmul
inc
(bad)
(bad)
movs
and
outs
xchg
ror
jns
call
mov
or
mov
pusha
mov
mov
pop
xor
inc
ins
push
imul
pop
mov
enter
inc
out
in
test
sub
jae
push
or
adc
inc
push
cld
inc
aaa
mov
sub
outs
mov
aam
pop
push
rol
add
sub
mov
dec
pop
pop
cmp
aam
inc
pushf
in
ss
call
in
and
in
pop
cdq
lds
xchg
and
mov
jae
dec
jne
aaa
cdq
enter
rsqrtps
adc
xchg
sbb
retf
jo
sub
push
adc
add
outs
mov
popa
movs
ret
sub
pop
rcl
adc
push
sbb
xor
shr
and
sub
add
xor
test
cmp
mov
sub
cmp
nop
xchg
pop
enter
add
stos
ret
add
xor
sbb
push
or
sbb
or
stc
hlt
dec
or
xchg
enter
inc
repnz
hlt
or
out
ret
pop
enter
cmc
or
or
or
add
adc
pop
pop
mov
add
ins
cs
dec
shl
or
xor
nop
sbb
popa
or
or
mov
push
and
shl
xchg
int3
or
ins
dec
adc
jae
jmp
or
or
pop
or
daa
mov
enter
xchg
push
mov
inc
scas
ret
clc
jle
push
cwde
add
pop
jns
add
push
outs
jmp
dec
pop
mov
sub
je
adc
push
and
ins
dec
and
lock
pop
sbb
cmp
or
jecxz
inc
enter
inc
dec
sbb
cwde
punpckhbw
rcl
mov
and
cmps
jne
cmovg
and
nop
jle
adc
adc
fwait
push
and
xor
sub
add
test
adc
adc
loopne
add
pop
sbb
aad
retf
leave
leave
sbb
and
sub
add
inc
push
push
sub
adc
mov
dec
adc
mov
jns
sbb
adc
inc
mov
xor
dec
add
(bad)
xchg
add
fcomi
fisttp
addr16
xchg
lods
push
inc
call
adc
cmp
push
sahf
clc
adc
or
add
inc
enter
add
adc
out
push
or
cld
adc
xor
inc
adc
xchg
mov
adc
and
jo
fadd
ret
outs
cmp
or
jmp
pop
sbb
add
daa
push
sbb
jg
cmps
inc
mov
sub
mov
scas
sub
add
sbb
cwde
sbb
ins
scas
sti
adc
shl
sar
enter
sahf
mov
or
js
add
daa
lahf
scas
fadd
xadd
inc
dec
sub
adc
in
adc
or
pop
add
push
sub
push
add
aaa
add
(bad)
inc
xor
movs
add
jns
and
inc
pop
xor
sub
and
push
cmps
push
cmp
jbe
inc
nop
cld
xchg
add
jecxz
ficom
and
pop
mov
or
pop
push
das
mov
sub
or
(bad)
int3
xor
sub
popa
aam
fnstsw
xlat
nop
jge
and
push
sub
sbb
aam
push
inc
or
data16
shl
imul
sub
(bad)
nop
sbb
xor
add
add
shr
jns
jno
loope
mov
sbb
arpl
iret
jns
bound
movs
outs
or
in
icebp
in
mov
push
sbb
add
jne
mov
aam
ins
retf
jmp
aaa
or
pop
add
cdq
ja
jmp
ins
or
pop
mov
or
clc
push
sbb
(bad)
push
invd
adc
xchg
or
xchg
pop
fild
mov
dec
out
cwde
and
loopne
and
hlt
push
inc
xor
ds
cmp
cmp
leave
and
push
add
scas
mov
(bad)
inc
mov
add
mov
sbb
add
pop
or
in
sbb
inc
arpl
aaa
in
adc
nop
dec
add
inc
stos
(bad)
stos
pop
add
pop
mov
inc
outs
adc
in
xchg
daa
add
mov
sbb
dec
imul
mov
xor
adc
mov
mov
loope
inc
inc
cmp
pop
loopne
add
test
and
or
pop
cmp
ret
sub
and
adc
xchg
and
inc
or
into
adc
fwait
inc
sbb
repnz
mov
sbb
js
inc
sub
pop
mov
pop
mov
inc
inc
or
lea
xor
add
das
fild
jecxz
aas
fwait
cmp
adc
aaa
inc
cdq
and
add
cdq
adc
cld
or
cmps
and
or
mov
sbb
pop
jb
dec
cmc
sbb
xchg
lds
mov
dec
sbb
push
mov
cld
cmp
sbb
iret
out
addr16
(bad)
sbb
adc
add
ret
jge
in
sub
xchg
mov
or
mov
pop
in
xchg
adc
inc
jno
fld
std
and
sbb
sbb
or
dec
xchg
mov
push
push
push
or
sub
fdiv
dec
or
sub
mov
cmp
pop
mov
adc
(bad)
cmp
mov
mov
and
sub
add
aas
jmp
sbb
jl
das
(bad)
push
push
push
loope
mov
sbb
imul
mov
xor
lock
test
pop
jbe
(bad)
lea
push
popa
leave
inc
(bad)
out
jb
jne
mov
and
shr
or
jecxz
call
pop
inc
jns
add
cmp
add
sti
(bad)
inc
rcr
mov
dec
sub
data16
jle
inc
pushf
fcomp
mov
cmp
adc
ss
push
fisttp
int3
je
mov
mov
popa
pusha
in
xchg
leave
adc
push
or
sbb
imul
sub
jl
pop
imul
sub
push
daa
clc
add
stc
in
cmp
add
and
push
pop
cld
clc
xor
pop
xor
cmp
movs
inc
pop
xor
addr16
inc
pop
sub
inc
push
cmp
add
test
mov
ret
and
popa
pop
test
and
lds
shr
clc
jmp
adc
outs
call
test
xor
(bad)
lods
or
ret
idiv
mov
movs
inc
and
cwde
ror
and
movs
jno
aaa
pop
xchg
push
shl
pop
iret
imul
popf
xchg
xchg
lds
js
sub
jne
test
popa
and
dec
mov
clc
das
sub
or
sub
das
adc
test
pop
and
and
sub
jo
and
add
gs
ret
cld
dec
xlat
xor
mov
mov
add
add
ret
mov
pop
imul
xor
sar
adc
shl
fisttp
xor
push
mov
rcr
or
lods
stc
cmp
and
lea
mov
add
sub
les
inc
add
xor
adc
inc
movs
loop
sub
mov
retf
dec
sbb
add
cmp
jne
inc
mov
and
rol
push
in
les
sub
leave
rcl
xchg
mov
(bad)
enter
mov
mov
loope
(bad)
int3
ror
cdq
mov
jmp
add
mov
or
sub
xchg
retf
and
and
das
loopne
jo
arpl
dec
test
mul
les
xor
cmp
push
sub
mov
jmp
sbb
dec
and
ins
sbb
test
loopne
jp
iret
pop
call
aas
cdq
inc
lea
ret
mov
ja
test
mov
pop
lods
add
sbb
adc
sub
dec
add
mov
aam
std
push
mov
js
enter
jo
sbb
pop
adc
adc
cmp
mov
rcl
movs
mov
enter
inc
fcomp
adc
xchg
adc
mov
lods
jo
xchg
add
or
int
je
fbstp
dec
cdq
mov
push
in
rol
inc
and
sbb
cmp
or
mov
cmp
pop
inc
sub
lock
out
mov
push
cmps
lods
sbb
add
mov
in
mov
jecxz
xchg
or
stos
adc
std
cmp
popa
push
or
adc
xor
add
add
push
mov
mov
das
add
xchg
pop
cmps
mov
ror
in
shl
xor
dec
rol
dec
scas
enter
xor
push
test
ficom
push
mov
xchg
sub
mov
inc
movs
adc
ins
push
fstp
and
cmps
inc
cmps
psllw
push
loopne
dec
and
(bad)
sub
imul
pop
sub
and
or
mov
dec
jp
mov
pop
(bad)
icebp
pusha
cmc
fld
push
adc
add
inc
sub
lock
mov
les
pop
or
xor
js
mov
loop
add
and
std
jns
fs
or
or
add
out
stos
std
std
or
loop
inc
and
mov
pop
icebp
add
dec
push
push
inc
cs
or
pop
test
pop
and
sbb
pushf
add
les
cmp
inc
hlt
outs
adc
scas
jne
sub
enter
in
mov
mov
xor
or
mov
jmp
push
pop
adc
movs
or
xchg
mov
jl
xor
xchg
ja
in
and
xlat
hlt
and
mov
mov
out
cmp
popf
and
pop
shl
les
pop
mov
out
xor
lea
lahf
mov
push
outs
jne
arpl
pop
fmul
test
addr16
ret
shrd
ins
cmp
sub
adc
jecxz
pop
pop
inc
xor
mov
xchg
int
or
and
into
popf
sub
mov
dec
out
popa
and
and
call
or
or
addr16
mov
loopne
int
bound
dec
and
and
hlt
sub
sbb
enter
icebp
or
jmp
add
jecxz
rcl
add
and
jb
daa
mov
clc
imul
rcl
adc
ficomp
jp
dec
sub
and
cli
pop
push
sub
les
mov
cmps
dec
bound
sbb
cwde
adc
add
mov
mov
fdiv
mov
call
dec
push
mov
inc
int
dec
add
(bad)
in
movs
and
pop
cld
push
cmp
xchg
mov
sbb
inc
or
pushf
xchg
sub
pop
ret
push
dec
hlt
cmp
or
inc
adc
push
enter
sub
xor
loope
add
popa
xchg
sbb
je
sbb
xchg
mov
or
inc
and
hlt
mov
fsub
jg
inc
and
add
mov
dec
cld
pop
imul
ss
adc
shr
int3
sbb
lea
add
daa
pop
xchg
clc
loope
push
sbb
movs
mov
xchg
and
daa
mov
or
add
test
shr
orps
inc
cs
pop
sbb
pop
mov
cmp
cdq
stos
mov
push
cwde
xor
xchg
xchg
inc
fst
pop
repnz
das
mov
ja
and
xor
jecxz
mov
dec
retf
mov
or
sbb
jl
add
jo
pop
jns
in
je
or
daa
icebp
ins
add
mov
shl
test
and
mov
sbb
daa
xchg
mov
push
shl
push
dec
lock
pop
sub
into
cs
xchg
test
jecxz
and
retf
and
pause
ret
cwde
mov
cdq
push
cwde
cmp
push
sub
xor
xchg
ja
and
sub
jl
retf
xchg
or
dec
ficomp
sbb
jns
scas
inc
je
nop
add
js
rcl
inc
dec
shl
xor
push
pusha
cmps
mov
and
sbb
shl
(bad)
lods
cmc
test
pop
dec
or
inc
lods
inc
lods
dec
fs
pop
pop
ins
or
mov
push
mov
add
and
mov
sbb
xchg
cwde
out
mov
inc
int3
cmp
or
sbb
(bad)
aad
mov
loope
inc
rcr
and
test
xchg
adc
lods
pop
mov
leave
in
adc
mov
and
call
cmp
mov
jno
dec
or
jmp
xor
(bad)
mov
xlat
add
xchg
or
xor
dec
pop
jne
(bad)
and
mov
dec
fiadd
and
sub
push
neg
fstp
ror
adc
dec
and
aam
mov
stos
movs
retf
ret
(bad)
adc
cmp
pop
arpl
lock
pop
jmp
je
aaa
adc
adc
pushf
pop
retf
je
repz
xchg
clc
jne
sub
mov
test
sbb
adc
dec
repz
aaa
inc
mov
inc
pop
inc
push
je
adc
adc
hlt
dec
mov
cwde
scas
pop
outs
inc
add
cld
sbb
xchg
mov
jl
mov
jne
shl
inc
xchg
cmp
adc
arpl
mov
jmp
add
cwde
inc
push
pop
jl
push
(bad)
push
sbb
xor
test
adc
mov
test
adc
pop
iret
das
or
inc
mov
pop
xchg
adc
xor
xor
cmp
dec
mov
sbb
push
add
data16
in
cs
mov
sub
sub
int3
xchg
in
loopne
stc
xchg
iret
lods
add
call
(bad)
pop
ins
mov
int3
cmps
ins
inc
cmp
xchg
retf
sar
dec
sbb
stos
out
xor
mov
(bad)
out
addr16
sub
in
nop
xor
popf
icebp
test
shl
push
push
push
cmps
add
and
sub
push
cli
xchg
test
aad
or
ds
mov
mov
gs
dec
cmp
dec
sub
sbb
sbb
pusha
movs
xchg
test
pop
test
and
or
rol
pop
sub
cmp
loopne
jmp
sub
cs
enter
pop
mov
push
sub
fmul
sub
inc
mov
cmp
and
push
jge
add
and
jmp
daa
gs
inc
and
sbb
cmp
or
lds
cmp
jl
jmp
inc
lods
fsubr
pop
jl
fdivr
sbb
pusha
pop
mov
dec
ret
push
lds
mov
test
mov
cmp
jb
adc
push
test
xchg
in
test
sub
popf
jo
and
dec
scas
addr16
aam
ror
dec
jno
sub
cmp
int3
dec
inc
jne
adc
dec
xor
mov
rcl
in
adc
gs
outs
and
ds
sbb
and
fdivr
inc
fisub
lds
inc
pusha
in
and
test
mov
test
jnp
mov
les
adc
das
and
pop
or
fcomp
mov
inc
inc
loopne
fcomp
jne
(bad)
or
rol
int
mov
je
lock
push
jmp
rcl
pop
dec
pop
aaa
sbb
mov
push
cdq
mov
sub
lds
movs
das
cmp
ret
pop
movs
sbb
lods
mov
or
jmp
or
(bad)
and
in
mov
lds
pop
or
fdivr
add
xor
push
scas
call
in
xor
add
inc
sbb
leave
jb
loopne
fcomp
adc
mov
fdivr
loop
out
xchg
dec
adc
push
add
sbb
push
push
or
adc
fisttp
jmp
adc
jmp
add
adc
bound
pop
mov
mov
cmp
sbb
lock
lock
push
ins
dec
shr
cmp
xor
mov
out
mov
iret
push
aaa
mov
add
(bad)
xlat
cmp
and
push
and
shr
ds
adc
retf
xor
sti
popa
pusha
xlat
and
sub
mov
retf
push
ja
pop
add
inc
call
xchg
mov
pop
add
sbb
dec
pop
inc
push
xor
nop
cwde
cmc
in
and
jo
out
ins
mov
xor
sbb
nop
int3
inc
sbb
cmp
dec
sbb
int
inc
push
lods
push
push
push
sub
xor
xor
xor
pop
sar
or
add
mov
or
inc
dec
push
xchg
in
xchg
pushf
loope
in
ror
das
inc
cwde
mov
adc
cwde
sti
in
xchg
mov
sub
jb
push
or
jl
xchg
inc
pop
or
pop
in
xchg
and
cwde
mov
pop
cwde
and
inc
add
or
pop
lods
aam
inc
stos
fisttp
jmp
add
sub
sbb
mov
inc
in
push
adc
ret
mov
retf
cmp
outs
dec
or
inc
add
and
daa
add
push
cmp
(bad)
jo
fmul
and
adc
pop
adc
jb
inc
stos
jbe
das
out
nop
mov
les
mov
inc
imul
xchg
adc
inc
push
loop
je
inc
lock
and
jbe
adc
cmp
test
add
push
push
pop
adc
push
add
rol
and
adc
and
jg
inc
add
and
inc
hlt
inc
add
das
cmp
ret
inc
push
aaa
stos
mov
sbb
mov
enter
xor
jns
inc
pop
add
adc
xor
cmps
fld
clc
or
ds
fadd
xor
jnp
jecxz
xor
in
lds
in
punpckhwd
xchg
aam
cmp
mov
add
add
mov
cmp
iret
or
in
sub
pop
xor
pop
cmp
xor
call
dec
inc
mov
mov
in
sub
add
mov
nop
inc
inc
inc
inc
push
lock
sub
les
mov
imul
lds
nop
xchg
shl
call
stc
xchg
adc
cmps
pop
ror
mov
hlt
inc
xor
jb
xchg
in
xchg
pusha
ficom
or
popa
bound
xor
inc
ds
cmps
sbb
cwde
sub
add
sub
xchg
jl
movs
int3
call
ret
inc
mov
mov
push
dec
xchg
enter
xor
(bad)
daa
push
xchg
push
sbb
and
xor
mov
fwait
cmp
enter
or
mov
stc
and
mov
mov
test
jg
cmps
loopne
add
inc
dec
popa
scas
fs
push
rol
jmp
sti
inc
clc
enter
cmp
imul
in
sbb
jno
cmp
add
mov
hlt
sbb
jmp
adc
pop
add
ret
inc
cmp
(bad)
mov
and
imul
ret
mov
or
jmp
sar
jg
repnz
or
jno
in
repnz
or
lock
loope
fstp
ins
ret
dec
repz
push
retf
mov
js
add
pop
push
stc
push
cmp
pop
cmp
cmp
xchg
xchg
and
and
dec
dec
leave
enter
je
push
push
test
enter
shl
mov
addr16
retf
ja
pop
dec
sub
popa
inc
shl
in
dec
xor
xchg
inc
inc
or
shl
dec
cmp
jb
sbb
dec
add
imul
loop
and
sbb
adc
outs
out
cmp
mov
dec
cmp
dec
mov
add
cs
or
mov
xchg
xchg
inc
or
xor
repz
inc
or
push
test
inc
push
data16
(bad)
cmp
jo
jbe
loopne
sbb
jle
sbb
aas
push
cld
rol
cmp
addr16
les
sbb
pop
push
jbe
(bad)
adc
inc
sub
jne
mov
xchg
dec
push
xor
je
lea
or
hlt
daa
movs
xor
xchg
mov
mov
push
adc
rol
push
push
mov
mul
cdq
or
xor
add
xchg
leave
pop
inc
into
rcr
or
or
imul
push
(bad)
jne
retf
int3
inc
push
or
and
jne
mov
popf
pop
inc
sbb
add
mov
sub
sti
mov
cmc
add
fiadd
sub
sub
push
or
js
leave
lods
fimul
cmp
sub
dec
and
adc
cmps
mov
mov
rol
call
sbb
popf
outs
sub
in
push
call
out
jo
xor
xor
add
sbb
call
sub
dec
out
fcomp
sub
je
add
outs
in
xor
add
fcomi
xchg
jl
xor
sbb
js
dec
fisub
xor
jmp
aas
jb
dec
test
icebp
shl
aas
in
sbb
dec
fdivr
mov
push
aaa
inc
ror
sbb
mov
dec
or
nop
dec
in
stc
stos
pop
pop
dec
inc
fsub
aaa
push
shr
add
aaa
imul
imul
test
gs
jbe
ss
cmps
mov
adc
test
js
pusha
int
ja
push
xor
mov
cmp
inc
push
outs
inc
pop
xor
shr
aad
in
push
movs
pop
xor
pop
pop
cmc
add
inc
jnp
dec
add
mov
pop
dec
and
and
push
inc
lahf
sar
lods
cmp
push
nop
scas
xor
push
inc
sub
cmp
aas
fwait
bound
or
jnp
mov
hlt
ins
sub
mov
ins
mov
adc
adc
inc
shl
xchg
pop
or
adc
xchg
sbb
jnp
or
arpl
inc
enter
xchg
hlt
and
hlt
inc
hlt
mov
inc
xor
add
mov
xor
mov
in
in
dec
cmps
push
inc
enter
sub
xchg
pop
aad
add
lds
add
punpckhdq
inc
(bad)
adc
and
add
test
jle
pop
xchg
or
dec
adc
jno
js
ret
or
sbb
cs
lods
mov
push
xchg
xchg
push
stos
mov
mov
nop
xlat
test
(bad)
xchg
sub
push
int3
xor
or
popa
cmp
das
syscall
sub
adc
dec
pop
pop
mov
xchg
outs
shl
or
outs
push
push
dec
add
add
out
leave
int3
and
push
jne
and
sub
mov
sub
outs
aaa
lods
or
test
das
(bad)
push
adc
xchg
fwait
sub
push
jo
adc
xor
or
jae
mov
(bad)
sbb
dec
adc
outs
push
mov
cmp
sbb
xor
fs
push
push
jno
add
dec
push
jne
push
shr
push
addr16
arpl
outs
mov
ins
push
adc
pop
xor
dec
cmp
push
jae
inc
and
jo
jmp
gs
inc
jmp
or
add
xor
je
inc
mov
jne
jns
pop
call
dec
pop
mov
fisubr
push
adc
pop
inc
pop
push
inc
jne
fs
imul
inc
add
adc
cmp
mov
jmp
in
imul
mov
jmp
add
mov
shl
and
(bad)
loopne
and
jge
call
out
lock
push
rdpmc
push
out
add
mov
out
scas
inc
push
inc
adc
xor
loopne
jmp
ror
lea
dec
or
mov
and
or
or
cmps
push
les
or
daa
es
in
retf
push
push
lock
imul
xor
je
xor
pop
mov
shl
and
mov
test
(bad)
and
push
and
xchg
fbld
icebp
add
(bad)
imul
daa
jg
mov
push
sbb
movs
or
adc
js
dec
cs
gs
push
retf
ret
mov
push
mov
or
push
and
sahf
sub
inc
shl
add
sub
push
test
or
pop
add
inc
ins
cmp
repnz
pop
and
in
inc
and
out
xor
fld
inc
arpl
cmp
and
mov
popa
and
les
or
cmps
push
push
inc
pop
and
call
inc
mov
sbb
(bad)
and
add
push
cmp
mov
jmp
lea
adc
sub
leave
inc
xor
aad
xor
fcomp
fldenv
xchg
mov
push
outs
retf
xchg
mov
push
shl
ds
shl
mov
pushf
rcl
ss
lahf
add
add
rcl
(bad)
sar
or
add
nop
mov
cs
push
(bad)
mov
mov
cmps
cmps
stos
or
xor
or
outs
mov
dec
(bad)
outs
(bad)
sbb
jmp
dec
dec
sbb
imul
scas
xor
add
(bad)
in
inc
xchg
adc
out
add
xchg
aas
clc
adc
jmp
push
stc
sbb
adc
or
inc
ja
pop
xchg
inc
jmp
ins
loopne
dec
cmp
rcr
jle
mov
movs
imul
ret
aas
mov
test
dec
dec
pop
jp
cld
or
sbb
in
cmp
sub
and
xor
ss
push
mov
movs
addr16
dec
cli
sub
ret
in
dec
(bad)
and
je
retf
dec
cmp
ds
inc
pop
pushf
push
dec
data16
mov
mov
push
push
ret
dec
xchg
xchg
inc
mov
adc
aas
je
in
ret
dec
je
aas
mov
dec
mov
sbb
pop
rcl
nop
sub
dec
add
sbb
or
enter
add
imul
cdq
mov
(bad)
mov
add
ss
add
add
or
enter
daa
mov
adc
push
add
cmp
jb
stos
sar
pop
cmp
jne
sub
pusha
xor
pusha
(bad)
sbb
inc
jno
pop
add
cmp
fisub
and
aad
add
fiadd
or
push
push
and
and
enter
lock
enter
shl
fadd
ja
not
adc
or
sar
sub
mov
inc
pop
xor
sbb
mov
movs
fstp
test
inc
addr16
clc
and
pop
add
inc
mov
fsubr
mov
je
xor
push
and
int
addr16
idiv
in
cld
daa
adc
xor
fwait
push
cmp
repnz
pop
jo
pushf
jae
iret
test
enter
and
enter
cmp
pusha
js
pop
repnz
nop
movs
mov
sub
sbb
add
call
inc
aam
and
popa
cmps
inc
sub
(bad)
(bad)
std
fdivr
add
sbb
test
adc
pop
inc
mov
repnz
dec
sbb
inc
std
inc
xlat
or
or
or
jmp
loop
ins
mov
xor
fsub
push
push
hlt
push
test
es
xor
loope
imul
bound
daa
pusha
cmp
in
cmp
push
imul
clc
imul
stos
xor
into
ret
pop
dec
and
adc
inc
iret
jnp
add
ss
movaps
sbb
rcr
arpl
shr
arpl
mov
je
jo
push
neg
jle
and
jmp
pop
sub
mov
xor
xor
outs
std
inc
jb
arpl
or
cmps
pop
or
adc
inc
mov
pop
inc
test
fwait
scas
pop
mov
xchg
add
push
or
or
pop
ins
adc
add
fistp
xchg
movs
inc
sub
add
sub
movs
(bad)
and
sub
(bad)
xchg
or
xor
jge
mov
(bad)
and
test
inc
mov
mov
xor
adc
sub
push
mov
loopne
shr
out
inc
add
add
out
jne
ins
push
push
mov
or
or
stc
call
verw
push
push
imul
pusha
lods
pop
xor
pop
and
daa
call
cld
add
frstor
push
xor
mov
mov
sbb
mov
mov
and
movs
xchg
sub
out
and
mov
mov
popa
scas
jae
or
jae
enter
mov
mov
xor
clc
add
and
stos
gs
sbb
ret
lahf
sub
imul
dec
xor
jo
add
adc
and
sub
popa
jmp
mov
enter
pop
sub
mov
inc
jno
inc
xchg
hlt
rcl
sub
retf
call
pop
sub
inc
imul
mov
adc
xor
jmp
sub
dec
imul
ins
mov
inc
xor
and
adc
fwait
jmp
pop
inc
fmul
(bad)
shl
push
rcr
xchg
ret
inc
jns
ins
cs
sbb
seto
and
xchg
mov
xchg
jg
add
adc
or
test
inc
or
sub
mov
lock
test
mov
sub
lock
popa
clc
sbb
ret
pop
jb
clc
daa
test
lock
and
cmp
xchg
mov
push
xchg
test
mov
dec
sub
mov
dec
inc
and
pop
pop
pusha
pop
pushf
push
andnps
jns
sub
push
hlt
hlt
xchg
sub
pushf
outs
in
push
loop
adc
mov
xor
xor
cmp
fwait
ins
jl
dec
or
and
rol
aaa
xchg
pop
ja
pop
and
dec
sete
cmc
scas
and
(bad)
pop
sub
add
dec
pushf
out
or
sbb
mov
push
movs
scas
hlt
in
test
cmp
nop
test
dec
(bad)
lock
jb
dec
lock
cld
sub
sub
dec
xor
scas
xchg
in
sub
cld
outs
lock
push
adc
jmp
xor
les
jmp
adc
imul
and
dec
cmp
bnd
(bad)
lock
or
fld
out
test
sub
jp
sub
into
rcl
add
mov
or
jno
push
xlat
inc
dec
add
nop
mov
pop
mov
jno
adc
mov
xchg
push
xchg
mov
jno
sub
jo
or
popa
adc
or
and
(bad)
jne
and
jns
inc
dec
push
add
in
cmp
inc
pop
or
dec
aaa
mov
lods
out
loope
mov
mov
mov
and
hlt
ret
repnz
leave
push
out
mov
and
leave
jb
jno
in
cmp
pop
and
and
mov
aaa
add
jp
mov
xor
loopne
fadd
cmps
popa
inc
sub
push
xor
stos
les
lock
dec
clc
dec
push
push
(bad)
lods
adc
in
dec
and
or
cmps
dec
not
add
xchg
mov
inc
xchg
and
adc
wrmsr
jne
js
jo
aas
dec
push
cmp
aas
(bad)
repnz
and
call
sbb
add
inc
cmp
push
pushf
push
sub
or
pop
fsubr
sub
int3
cmp
div
xchg
or
dec
mov
outs
arpl
(bad)
and
(bad)
rol
and
push
jo
or
jbe
mov
dec
icebp
aad
cmps
dec
sbb
add
dec
cmp
ja
movs
xor
call
push
mov
sub
cmps
mov
or
inc
dec
shl
test
cmps
imul
mov
lds
jp
dec
imul
xlat
mov
push
sbb
fcomp
push
cli
add
push
rcl
(bad)
ins
loope
xor
mov
mov
sbb
inc
mov
mov
sahf
pop
mov
clc
inc
clc
lahf
clc
inc
pop
jo
and
jns
loope
xor
add
out
xchg
pop
or
mov
inc
adc
cs
daa
xchg
js
ins
jae
je
xchg
cmp
mov
add
cld
lds
and
pop
popa
adc
jl
hlt
ins
(bad)
hlt
mov
ret
es
arpl
fs
inc
(bad)
daa
gs
outs
pop
adc
daa
clc
fsub
repnz
or
and
and
add
in
jne
or
push
enter
push
jmp
adc
mov
jmp
imul
adc
jmp
adc
fsub
fstp
and
mov
mov
inc
clc
cmps
dec
inc
dec
dec
dec
inc
dec
inc
xchg
dec
(bad)
jp
pusha
mov
jnp
cmp
ret
dec
aam
cmp
add
nop
pop
cs
sbb
jp
inc
adc
ret
or
inc
sbb
pop
mov
mov
push
pmaxub
sub
or
dec
xor
jo
clc
aaa
xor
test
rcl
push
pop
add
ss
outs
arpl
mov
pop
cmp
dec
rol
das
rcr
push
fsub
repz
push
aas
jae
sar
clc
sub
or
rol
inc
jge
or
and
aam
rol
or
xchg
add
or
push
fbld
pop
add
add
les
aaa
mov
pop
daa
push
inc
int3
xor
lods
ss
mov
or
and
sub
xor
(bad)
sbb
loopne
sub
ins
sbb
and
(bad)
pop
jmp
xchg
adc
in
and
cmp
fistp
sub
push
push
inc
xor
inc
pushf
pop
jle
lock
or
and
jg
mov
dec
pop
cdq
fnsave
or
clc
je
in
movs
test
das
pop
jg
pop
(bad)
push
add
xchg
dec
cmp
and
add
pushf
mov
lock
xor
std
and
pusha
mov
or
rol
mov
adc
and
fadd
mov
xor
cmps
sahf
les
inc
inc
and
jb
aas
aaa
mov
mov
jne
movs
sahf
add
repnz
arpl
mul
adc
push
sbb
mov
inc
or
add
jl
add
push
add
push
add
or
lock
cmp
adc
lods
cmp
push
mov
or
cmp
fild
and
and
ficomp
pushf
ins
lods
in
jo
lods
jo
push
js
jno
ret
jge
jl
add
add
sbb
das
push
sub
jl
inc
pop
ret
jne
jmp
push
popa
mov
dec
jg
dec
mov
and
jge
or
inc
jne
push
js
je
inc
lock
ins
jo
dec
sbb
daa
dec
stos
add
push
ss
rol
or
or
or
repnz
jmp
push
inc
adc
xor
push
cs
stos
add
and
mov
sbb
and
jns
rol
ja
inc
mov
inc
sub
bound
sbb
add
das
inc
sbb
xor
sub
clc
dec
add
adc
dec
inc
adc
pop
mov
sbb
mov
sbb
add
mov
adc
mov
arpl
cdq
out
jo
movs
out
xor
xchg
mov
push
xchg
push
sbb
dec
ins
sub
neg
in
pop
sbb
or
adc
xlat
jne
push
jb
(bad)
fimul
dec
dec
xchg
fcomp
out
mov
enter
lea
push
xor
repnz
pusha
mov
push
xlat
jge
sbb
xlat
mov
(bad)
adc
sub
movs
xchg
xchg
sub
mov
xor
mov
jmp
ja
jne
adc
pop
dec
jmp
push
in
or
(bad)
out
dec
or
mov
js
push
pusha
xchg
inc
out
enter
jae
ja
dec
xchg
push
js
enter
and
xchg
inc
fbstp
ret
add
jno
pop
test
aam
cmp
sub
aam
(bad)
jg
jmp
xchg
shl
or
sbb
retf
test
dec
adc
or
or
jmp
fld
ror
cmp
test
popf
sbb
jmp
movs
and
push
retf
shl
push
adc
pop
sbb
ficomp
rcl
lods
jge
sar
jmp
outs
adc
leave
fsubr
sbb
inc
mov
xor
aas
js
nop
add
ja
shl
lds
leave
inc
je
aaa
sbb
arpl
daa
test
pusha
or
pop
ins
or
add
psraw
add
mov
pop
jno
pop
and
mov
adc
mov
jne
das
mov
push
push
adc
mov
loope
push
jb
cs
and
aaa
jno
ins
(bad)
test
inc
ds
loope
movs
aas
cmp
mov
jb
inc
pop
cld
les
or
pop
jo
jne
pop
or
neg
xor
dec
mov
jle
lea
enter
in
mov
je
mov
repnz
inc
and
clc
sub
and
and
xor
mov
jle
repnz
aam
mov
inc
dec
mov
push
mov
xchg
out
mov
push
or
leave
xchg
xchg
rcr
add
dec
mov
movs
stos
mov
or
ja
(bad)
pusha
movs
hlt
cmp
mov
adc
dec
enter
xchg
pcmpgtw
stos
adc
or
shl
repnz
or
push
or
push
adc
adc
pop
add
mov
mov
outs
cwde
add
nop
test
pcmpeqd
js
add
inc
rcr
jne
sbb
and
(bad)
mov
ins
lods
jmp
leave
test
arpl
xchg
gs
sub
xadd
push
xchg
inc
jmp
adc
enter
cld
push
leave
lock
lds
in
xor
xor
cmps
sbb
add
sahf
cmps
movs
ds
inc
mov
xchg
xor
dec
movs
jbe
adc
mov
jae
adc
data16
adc
mov
push
push
jb
pop
inc
cmp
jmp
or
nop
cmp
sbb
sbb
mov
adc
xlat
dec
jne
lea
add
in
cmp
lock
movs
and
stos
dec
and
mov
push
add
mov
pop
add
sbb
inc
call
adc
loope
sbb
int3
mov
mov
mov
jecxz
xchg
and
and
imul
mov
mov
and
jo
pop
dec
and
inc
jno
cwde
pop
or
sbb
sub
popa
(bad)
out
enter
or
(bad)
mov
xchg
mov
push
retf
push
cdq
mov
das
dec
hlt
mov
mov
ret
mov
into
pmulhuw
pop
out
daa
nop
pop
lds
je
pop
(bad)
cmp
clc
dec
xchg
and
mov
lsl
adc
fs
and
xor
rol
push
shr
outs
ins
mov
push
xchg
ret
pop
mov
mov
nop
fbstp
pop
push
pop
dec
dec
inc
inc
mov
push
dec
and
es
push
inc
push
push
add
in
cmp
dec
dec
dec
push
dec
push
aad
test
dec
inc
add
das
mov
push
inc
inc
inc
inc
dec
adc
aaa
adc
daa
fwait
cmp
push
inc
cdq
fcomp
dec
cmovno
inc
push
xor
adc
dec
inc
inc
push
push
dec
inc
dec
push
test
nop
popa
outs
adc
fs
and
and
add
xchg
sbb
cmp
cmp
push
inc
inc
push
bound
shl
adc
jnp
pop
push
cmp
repz
add
inc
dec
dec
inc
push
aas
or
popa
push
push
inc
inc
dec
xchg
outs
sbb
lahf
dec
leave
jne
mov
add
xchg
cmp
icebp
inc
inc
inc
ss
push
mov
loopne
pop
addr16
enter
xor
inc
dec
push
push
or
pop
inc
or
lods
mov
mov
pusha
mov
ins
or
mov
sar
dec
mov
lahf
or
inc
dec
inc
inc
dec
mov
loopne
neg
and
outs
adc
ins
inc
ror
or
mov
pop
adc
inc
pop
push
das
push
bound
push
dec
inc
(bad)
cmps
imul
push
pop
push
xchg
imul
dec
pop
das
or
cmp
outs
das
nop
mov
dec
std
aaa
push
sbb
sub
and
js
sbb
call
inc
aas
pop
sub
lock
inc
cmp
aas
das
mov
mov
push
dec
xor
or
adc
dec
push
dec
dec
es
inc
add
mov
push
push
mov
adc
mov
aas
adc
sbb
fild
pop
push
and
push
inc
inc
mov
sbb
sub
cdq
and
loopne
inc
pop
push
ins
hlt
push
mov
xor
out
pusha
mov
addr16
arpl
add
add
fild
cdq
bound
hlt
dec
pop
mov
add
add
adc
pop
or
je
jmp
xlat
adc
push
jne
mov
mov
stc
jns
cmp
mov
push
bound
mov
mul
jl
mov
cmp
add
mov
mov
iret
call
jb
js
je
xor
xchg
test
pop
add
jne
mov
movs
xchg
cmps
jecxz
ret
xchg
sub
mov
or
ror
inc
inc
fs
ja
addr16
and
xor
je
movs
imul
mov
inc
arpl
imul
push
shl
push
aaa
dec
add
adc
or
stos
jns
sub
sbb
out
sub
sahf
xchg
scas
dec
xchg
xor
cmp
js
sub
jo
mov
and
add
inc
imul
gs
mov
into
adc
addr16
call
es
jns
shl
addr16
mov
fadd
sbb
push
pop
inc
jne
inc
mov
inc
outs
ins
popa
inc
dec
xor
push
xchg
das
das
push
jae
xchg
test
addr16
adc
mov
ins
jnp
imul
outs
xor
inc
cmp
fisttp
inc
arpl
jne
je
jo
loop
cs
adc
fadd
dec
dec
and
pop
push
sbb
fidiv
lea
jnp
mov
pushf
rcr
push
(bad)
aaa
lock
cli
movs
movs
mov
sar
add
pop
cdq
cmp
or
cdq
inc
shl
inc
xchg
inc
imul
call
stc
mov
cli
gs
shl
xchg
inc
lods
movs
or
rcl
sbb
or
jg
repnz
add
sub
mov
mov
xchg
sbb
dec
pop
jle
test
(bad)
xchg
lock
scas
retf
ds
pop
(bad)
push
lea
mov
mov
sbb
test
pushf
adc
gs
fwait
inc
mov
push
test
mov
imul
icebp
dec
loopne
or
xchg
jo
or
add
xchg
push
add
inc
rcr
add
hlt
les
push
inc
xor
and
scas
xchg
mov
dec
xor
mov
xor
add
fisub
xor
mov
(bad)
loopne
rol
nop
je
shl
ins
(bad)
fnstcw
add
into
or
mov
movs
jne
sbb
je
fadd
out
repnz
scas
jns
jo
xor
mov
and
sub
adc
in
nop
sahf
sub
dec
sahf
and
mov
sbb
jl
and
xchg
mov
dec
pushf
test
and
in
movs
fcom
loopne
lock
in
mov
mov
lahf
xor
test
or
dec
rcr
nop
cmp
rol
inc
or
or
int3
gs
outs
push
je
sahf
and
and
add
cs
adc
or
push
fiadd
inc
js
out
outs
ins
aaa
push
(bad)
scas
push
fdiv
sub
inc
call
mov
dec
lahf
addr16
pop
sub
jmp
xor
pusha
sub
cwde
pop
inc
jg
fistp
sub
arpl
adc
mov
test
inc
fs
and
pop
dec
or
jns
inc
push
sbb
pop
aas
pop
inc
and
daa
in
adc
(bad)
outs
rcr
js
mov
cmps
loop
or
cdq
sbb
call
lahf
out
xlat
and
pop
mov
ret
inc
or
add
iret
mov
outs
retf
das
clc
lea
fs
xchg
sbb
cmp
movs
mov
ss
mov
in
lods
mov
add
call
xchg
dec
and
inc
js
(bad)
cs
movs
xlat
shl
nop
adc
and
or
daa
mov
pop
push
mov
dec
scas
rcr
or
repz
add
and
mov
ret
adc
(bad)
mov
xchg
adc
ss
frstor
push
enter
mov
ret
in
xchg
popf
sbb
retf
cmp
or
mov
or
push
dec
add
add
(bad)
daa
and
data16
mov
movs
lods
add
movs
xor
(bad)
call
(bad)
inc
mov
pusha
push
inc
ins
fsub
stos
pop
adc
push
dec
pop
pop
mov
pop
pop
push
add
pushf
jmp
les
shl
sub
cmps
mov
stc
test
dec
(bad)
mov
inc
add
sub
adc
inc
xchg
es
outs
imul
test
rcl
sahf
pop
cmp
stc
inc
repz
dec
jne
or
(bad)
mul
mov
dec
or
xchg
xlat
inc
popf
add
fist
push
test
retf
sbb
push
mov
add
sbb
sbb
popa
hlt
or
pop
(bad)
cmp
or
xor
shl
inc
ret
test
mov
add
cmp
inc
and
mov
xor
jne
jae
ror
pop
je
mov
stos
push
(bad)
mov
(bad)
shr
les
sub
rcl
enter
mov
idiv
adc
stos
inc
lock
in
in
ja
addr16
mov
lods
call
sahf
call
xor
or
call
test
jl
scas
test
enter
xchg
pop
cmp
cmp
ins
ins
mov
sub
sub
les
adc
pop
adc
add
sbb
add
in
cmps
adc
inc
mov
xchg
test
and
mov
jnp
add
add
lods
push
mov
cmp
cwde
or
add
mov
scas
popa
mov
movs
fild
dec
clc
adc
lock
loope
add
dec
loopne
sbb
popf
pop
sbb
fnstcw
or
in
add
or
movs
and
push
repz
xor
xor
fldenv
lods
ins
enter
adc
cmps
push
and
jl
and
cs
cld
mov
mov
dec
sub
add
int
ins
mov
mov
fs
rol
and
xor
dec
and
repnz
push
enter
pop
inc
ret
xor
xchg
inc
add
rcl
mov
leave
xor
shl
lock
addr16
aaa
addr16
pop
add
dec
or
sbb
xor
xor
and
xor
movlps
or
addr16
js
adc
mov
mov
fmul
outs
test
xor
mov
in
cmp
cld
pop
adc
das
call
push
clc
and
in
mov
ret
sbb
push
outs
dec
clc
aas
dec
in
ins
mov
ror
sbb
push
adc
hlt
and
cmc
aad
push
repnz
xor
push
jne
lods
(bad)
in
adc
dec
sub
cli
cld
push
mov
mov
push
ret
sbb
jns
jo
or
push
or
or
ror
sub
(bad)
pusha
enter
cwde
or
cmp
out
stos
mov
frstor
mov
test
test
aaa
xor
mov
bound
bound
or
cmp
imul
push
sub
pop
inc
jg
pop
inc
inc
push
fs
and
enter
dec
sub
and
or
in
add
cs
adc
and
or
shl
outs
je
test
das
or
add
mov
push
or
mov
dec
mov
mov
(bad)
mov
xchg
pop
push
push
(bad)
fbld
push
pop
inc
xor
lods
mov
add
push
cmp
dec
push
gs
stos
inc
popa
aas
add
mov
int3
xchg
dec
pop
dec
inc
not
xor
or
xor
std
daa
add
xor
dec
xchg
cwde
call
push
mov
add
push
dec
pop
pop
push
jne
imul
mov
push
add
sub
mov
daa
push
arpl
push
mov
daa
dec
gs
mov
inc
outs
mov
rcr
lahf
and
mov
push
cmps
movs
xchg
add
pop
dec
push
push
imul
lahf
pop
cmps
or
out
push
add
add
pushf
or
push
push
jae
aaa
dec
inc
push
arpl
and
and
xor
hlt
push
in
pop
shr
push
int3
push
xor
cld
inc
adc
int3
pop
retf
mov
add
mul
cmp
or
xchg
mov
and
dec
inc
mov
sub
aaa
dec
hlt
mov
sbb
add
inc
mov
or
add
sub
and
cs
or
adc
not
mov
test
enter
retf
inc
push
mov
sub
cmp
jle
ins
sbb
jne
inc
in
shl
mov
out
cs
cmp
pop
jns
xor
add
lahf
aam
push
or
test
mov
adc
in
xor
test
lea
adc
popa
cs
lods
adc
loopne
repnz
push
pop
pop
imul
es
push
adc
icebp
cmp
in
inc
xchg
(bad)
fisub
mov
aam
popa
xchg
mov
aam
aaa
inc
mov
xchg
popa
mov
adc
js
sub
push
(bad)
leave
out
mov
and
xchg
fld
mulps
lock
pusha
add
push
hlt
inc
cmp
push
fwait
push
out
daa
add
inc
scas
adc
add
mov
(bad)
in
push
repnz
dec
ins
sbb
ja
je
sbb
lds
or
and
mov
es
clc
ja
clc
nop
dec
add
adc
or
xchg
adc
or
in
in
jmp
rol
outs
popa
mov
add
jl
jns
push
push
jno
in
inc
test
clc
pop
push
cmps
shl
jb
mov
xor
cmc
add
or
xchg
fmul
push
mov
outs
and
push
mov
sbb
aam
and
sbb
mov
pop
sbb
pop
je
fnstcw
inc
push
mov
add
add
es
push
mov
inc
or
jne
and
mov
sub
je
into
mov
stc
test
cmps
jl
inc
mov
retf
adc
cvttps2pi
sbb
cmp
lds
lock
data16
shl
xchg
pusha
js
cwde
mov
dec
add
bound
or
test
or
cmps
push
jb
or
xchg
mov
lods
nop
inc
ins
bound
popf
mov
inc
mov
ret
fdiv
and
push
dec
dec
inc
dec
push
pusha
mov
and
mov
or
pop
dec
mov
loopne
sbb
push
mov
sbb
mov
test
fisub
shl
xchg
lock
leave
ss
pop
add
push
adc
jl
add
and
leave
and
repnz
and
or
add
xchg
add
dec
and
adc
inc
iret
xchg
sbb
push
mov
add
popf
call
dec
and
xor
pop
mov
ret
adc
sub
or
jge
int3
xchg
adc
pop
dec
or
adc
hlt
rcl
and
les
in
cmc
add
cmp
sbb
cmp
mov
cdq
sbb
mov
fisubr
sbb
jb
aad
lock
adc
hlt
aad
xor
movs
movs
leave
in
aas
inc
xor
xchg
jno
nop
add
aaa
fs
ret
xor
xlat
pop
sbb
or
sub
add
fcom
(bad)
and
dec
fst
cdq
out
pop
call
xor
mov
push
cmp
jne
(bad)
mov
cmp
jne
cmps
add
pop
mov
arpl
sub
push
aam
xchg
retf
rcl
pop
icebp
or
mov
jno
ins
loop
add
hlt
dec
cwde
call
(bad)
aad
push
adc
outs
mov
imul
adc
and
js
lods
mov
push
sub
nop
mov
add
lods
adc
adc
cld
push
sbb
or
add
dec
fst
push
or
js
xor
enter
je
es
call
iret
cmp
mov
rcl
pop
mov
(bad)
enter
mov
xor
lea
inc
mul
dec
dec
leave
xor
inc
push
mov
inc
sahf
push
nop
lahf
ror
in
mov
inc
cmp
inc
sub
adc
and
cmp
daa
cli
dec
movs
push
inc
loop
mov
and
cmp
jg
fwait
add
add
sub
cwde
sbb
nop
push
sub
pop
fild
adc
or
cmp
add
dec
mov
or
pop
mov
adc
pop
cmp
out
push
fdivr
add
add
in
xchg
jmp
adc
and
test
push
sti
pop
into
push
and
lock
mov
fs
pop
mov
jnp
xor
in
pop
clc
jmp
and
jle
add
loopne
sbb
sub
pushf
or
or
add
sbb
or
dec
sub
add
je
adc
shl
repnz
push
popf
mov
xlat
loop
mov
pop
movs
mov
cmp
and
xor
dec
pop
add
add
mov
jb
loope
xchg
mov
pop
sub
sbb
mov
cmp
adc
cmp
sbb
mov
mov
loope
add
or
mov
sub
mov
mov
jp
lods
pop
repnz
inc
les
cmps
mov
mov
fwait
xor
cwde
scas
or
cmps
int3
cmp
or
inc
repnz
(bad)
jne
add
mov
movs
adc
retf
push
mov
dec
pop
rol
sbb
imul
xchg
mov
and
iret
faddp
ror
test
sbb
xchg
std
js
repnz
add
mov
lock
sbb
inc
or
out
ss
mov
mov
repnz
shl
and
mov
mov
int3
push
mov
or
aas
jae
adc
jg
adc
nop
rol
adc
jmp
div
dec
hlt
icebp
fist
dec
in
and
lock
(bad)
test
push
add
jle
xor
enter
sub
adc
into
push
push
mov
cwde
sub
aas
push
cmovae
lahf
xchg
and
jge
jle
mov
push
test
or
xor
scas
xchg
xor
popa
jns
pop
rcl
add
sbb
ror
inc
popa
dec
jle
test
xor
in
(bad)
jnp
es
clc
scas
les
jmp
jo
gs
adc
(bad)
adc
les
add
je
jo
bound
mov
shl
fsubr
mov
jo
jp
data16
adc
cwde
xor
(bad)
sub
jge
fcompp
fnstenv
adc
adc
jbe
inc
jg
test
sbb
mov
add
pop
(bad)
push
fcomp
std
add
push
mov
pop
repz
pop
and
jns
shl
adc
adc
clc
sbb
mov
fcmovnbe
cmps
or
mov
jo
popa
shr
adc
cmps
inc
mov
retf
sbb
jo
sti
loopne
repz
push
clc
add
fild
sub
sub
je
loopne
js
test
lock
enter
jb
sar
mov
and
mov
cmps
xrelease
das
in
sbb
fadd
int
pop
xor
fild
mov
aas
movs
xor
mov
inc
loopne
xchg
mov
push
sub
rcr
adc
or
xor
je
data16
or
pusha
adc
push
fs
pop
pop
(bad)
loope
popa
inc
and
jo
cmp
dec
icebp
push
dec
jb
jns
mov
add
int
cmp
push
inc
dec
sahf
pop
xchg
cmp
push
les
push
in
push
fsubr
add
push
repz
or
push
xor
fimul
sbb
outs
inc
inc
(bad)
dec
imul
dec
stc
xor
mov
dec
add
pop
sub
cs
xor
push
mov
fmul
aaa
or
ins
sub
dec
leave
or
test
enter
push
enter
xor
repnz
cmp
pop
aaa
pusha
enter
adc
sub
adc
sahf
sub
dec
dec
std
mov
adc
int
ror
push
icebp
mov
mov
xchg
cmp
lock
and
mov
dec
das
sbb
inc
(bad)
mov
jns
rol
inc
daa
cmp
les
adc
or
jno
mov
cld
data16
jecxz
or
dec
test
call
and
and
add
shl
mov
rcl
add
sub
mov
jo
push
and
adc
sbb
or
ja
or
xlat
jmp
adc
mov
mov
push
push
fwait
push
dec
push
pusha
and
mov
retf
dec
xor
add
add
popa
xor
loopne
dec
or
jne
retf
inc
push
mov
add
add
push
mov
mov
jb
fdiv
pop
outs
popa
sbb
xor
fwait
mov
pop
ja
cld
sbb
scas
jg
ret
int
jno
add
call
push
imul
retf
mov
xor
mov
nop
(bad)
(bad)
mov
sbb
jge
sbb
jge
push
test
pop
call
cmp
test
pop
daa
int3
push
sub
call
bound
mov
pop
int3
sbb
pop
mov
(bad)
push
push
dec
sub
xor
sbb
mov
movs
or
rcr
out
jmp
xor
jmp
add
cmp
imul
pop
and
pop
lods
xor
ss
pop
push
pop
int
lahf
test
fidivr
repz
sbb
sbb
mov
sub
pop
repnz
loopne
out
push
out
loopne
imul
inc
aaa
pop
jge
pop
sbb
mov
test
je
xor
aas
shl
push
in
into
or
test
adc
dec
xchg
add
cmp
cmp
adc
lea
dec
jecxz
dec
test
les
adc
fld
push
or
jl
xor
das
cmp
xor
adc
aam
inc
out
les
xchg
or
pop
cmp
mov
add
push
pop
jne
push
arpl
(bad)
or
or
ins
in
sub
cmp
push
adc
adc
or
xor
cmp
ror
lock
hlt
stc
mov
xchg
sub
repnz
popa
mov
sub
jmp
sbb
fisttp
inc
imul
lock
xchg
fcmovnbe
dec
add
retf
inc
jno
mov
mov
and
push
xchg
in
inc
rol
pop
sbb
dec
add
jecxz
fild
bound
cmp
call
shl
adc
rol
mov
xlat
fisub
pusha
mov
ja
lock
adc
or
je
fcmovnb
dec
es
scas
mov
add
xchg
outs
cmps
call
nop
adc
mov
xor
mov
add
hlt
pop
pop
adc
sbb
inc
add
sbb
adc
jo
(bad)
inc
mov
out
jns
adc
dec
inc
pop
sub
push
jmp
cdq
add
fmul
mov
sbb
mov
sar
sbb
add
add
in
arpl
mov
and
ret
sbb
fs
dec
or
leave
mov
inc
or
and
push
push
or
xchg
jl
push
call
fwait
push
jge
mov
pop
pop
mov
cwde
ins
and
adc
pop
pop
movs
add
xor
ucomiss
jl
cmp
push
lods
xchg
push
cmp
cwde
aas
pusha
call
push
pop
cmp
sub
aas
xchg
jbe
cmp
pop
test
xor
aam
mov
inc
and
inc
jl
fadd
sub
mov
pusha
xor
cmp
xrelease
adc
sbb
mov
and
(bad)
inc
jae
aas
mov
add
inc
pop
les
sahf
addr16
jo
inc
pushf
jmp
xor
ins
and
sub
xchg
fdiv
adc
loope
in
fs
sbb
jno
mov
mov
cmp
cmp
mov
int3
cmps
sar
push
and
das
dec
aam
xor
mov
inc
ja
dec
cmp
push
test
je
push
lock
bound
jl
add
push
mov
xchg
and
add
fadd
dec
mov
in
outs
jmp
cmp
pop
pop
inc
or
lods
sbb
push
jl
add
push
nop
fisubr
and
inc
jo
jl
(bad)
inc
or
nop
xchg
imul
xor
add
ins
call
push
inc
ficomp
add
push
inc
retf
pop
add
test
call
push
aas
sub
inc
add
inc
cwde
ret
xor
xchg
pop
sub
push
mov
imul
adc
push
stos
ss
xlat
inc
jns
and
aam
test
inc
stos
and
add
mov
push
out
sub
mov
out
xlat
jno
sbb
xlat
pop
add
inc
fcom
(bad)
sbb
fwait
call
dec
fadd
adc
shl
enter
(bad)
fidivr
or
cld
call
xchg
inc
sbb
pop
and
popa
icebp
test
and
mov
stc
jge
mul
mov
pop
test
sub
loopne
or
sub
cmp
(bad)
pop
out
dec
das
pop
call
xchg
pushf
adc
cmp
xor
sub
cmp
and
ficom
cmp
in
inc
(bad)
mov
mov
clc
dec
sbb
add
mov
add
cmp
dec
loopne
sbb
shl
in
sub
or
arpl
ds
test
dec
daa
add
and
add
sbb
mov
mov
add
ret
cs
hlt
lock
(bad)
movs
dec
daa
mov
cld
stos
and
jg
lods
push
pop
add
sbb
fisub
scas
nop
inc
mov
fcmove
fcmove
add
or
or
(bad)
jns
dec
mov
int
lods
(bad)
out
xchg
mov
sbb
or
mov
push
lods
je
test
stc
or
imul
xchg
inc
es
cmp
icebp
sub
nop
popa
mov
add
xchg
pop
sti
data16
mov
sbb
jmp
fdivr
xchg
push
mov
imul
sbb
adc
mov
adc
ret
call
cld
lods
and
mov
push
push
test
sbb
sbb
push
icebp
cmps
cld
dec
in
setb
imul
mov
frstor
fs
test
out
pop
or
add
call
enter
mov
scas
xor
and
fsub
dec
dec
pushf
xor
rol
cs
xchg
lea
movs
(bad)
adc
push
sub
sub
icebp
or
xchg
or
(bad)
repnz
mov
add
push
test
or
pop
daa
push
fild
mov
rcl
out
and
in
fdiv
adc
mov
inc
loopne
cmp
mov
add
lods
pop
(bad)
xor
add
in
sbb
bound
mov
cmc
mov
add
loopne
or
xchg
fstp
inc
cmps
or
push
or
popf
push
adc
daa
sbb
mov
sbb
test
leave
inc
adc
cmp
fadd
and
loopne
add
sbb
js
out
lahf
shl
daa
push
leave
sub
adc
xor
in
mov
mov
and
or
call
or
lahf
jmp
add
sub
repz
sub
adc
mov
or
leave
out
lock
jecxz
fst
sub
sahf
jno
sti
add
xchg
cmp
sbb
mov
bound
pop
mov
ins
sbb
push
(bad)
cmp
adc
xchg
mov
mov
jecxz
cmp
sub
push
pop
or
mov
cmp
sub
in
push
enter
in
and
add
jae
in
inc
shr
out
mov
mov
lock
or
pop
jle
inc
adc
mov
cmp
jnp
in
ror
ret
retf
inc
pop
or
daa
cmps
and
add
adc
(bad)
push
adc
push
sub
and
or
cmp
call
adc
popa
test
pop
lods
dec
mov
add
push
sbb
fist
push
aas
hlt
jae
dec
repnz
mov
outs
xchg
pop
and
jo
inc
xchg
jge
jb
or
push
stos
xor
dec
out
sbb
popa
and
dec
mov
das
hlt
clc
mov
adc
sub
fs
push
loop
cmp
lock
add
add
push
ins
jg
dec
sbb
movs
loopne
call
mov
cld
dec
scas
push
das
sub
je
and
sbb
test
imul
push
jmp
push
rol
push
cs
xor
ins
or
jae
mov
cmp
and
repnz
pop
push
inc
mov
mov
iret
or
(bad)
xor
nop
sbb
sub
ret
jnp
xchg
xchg
call
xchg
mov
cmp
mov
add
sar
push
cmp
fild
sbb
jbe
shl
addr16
mov
inc
mov
sub
das
scas
xchg
jl
rol
inc
adc
sbb
stos
or
ins
cmc
loope
cmp
jmp
imul
nop
xlat
lea
into
retf
and
push
mov
or
aaa
sahf
or
pop
je
sbb
jmp
sub
sub
and
inc
xor
stc
loope
popa
jg
(bad)
repnz
enter
jmp
add
clc
or
push
sbb
sub
aaa
fld
pushf
mov
push
call
mov
in
jmp
pusha
shufps
cdq
push
inc
jno
popa
and
aad
xor
mov
daa
daa
sbb
leave
aas
shl
push
sub
xor
add
nop
jmp
in
(bad)
fmulp
push
jmp
inc
repnz
add
add
push
leave
jae
jg
fsubr
add
add
adc
bnd
mov
mov
leave
sbb
ret
in
xchg
xor
add
in
lock
jle
inc
lock
lods
add
cmps
in
jecxz
rol
lods
sbb
mov
pop
gs
xor
(bad)
jmp
adc
mov
sbb
mov
(bad)
cmp
in
lock
cmp
pop
xor
repz
mov
lock
shr
loope
rol
das
lock
inc
add
mov
(bad)
push
test
aaa
inc
mov
jne
push
sub
sbb
test
(bad)
out
add
pop
inc
fsubr
shr
xor
shl
mov
clc
sub
test
adc
out
push
in
push
pop
ss
cmp
mov
push
ins
or
xchg
dec
sbb
mov
(bad)
dec
repnz
sub
push
icebp
or
adc
imul
or
movs
std
or
jns
adc
adc
or
jmp
xor
aad
repnz
add
jb
pop
cmp
ins
or
or
out
inc
push
inc
cli
jmp
inc
push
lea
cmp
je
ret
lea
or
add
(bad)
push
lods
icebp
inc
cmc
icebp
test
pop
inc
enter
pop
movs
imul
push
sbb
js
repnz
aas
outs
hlt
or
add
mov
sub
add
push
and
and
imul
dec
inc
cmps
adc
inc
repnz
hlt
aam
jbe
adc
sbb
test
in
les
add
or
or
call
push
sub
mov
cmc
dec
rol
callw
daa
fsub
(bad)
jmp
jle
fadd
push
aam
pop
(bad)
hlt
loope
rol
cmc
jmp
jo
cmc
test
jb
cmps
mov
add
sbb
and
in
cmc
(bad)
enter
and
pop
lods
add
mov
adc
outs
stos
or
nop
inc
mov
lods
stc
icebp
sti
mov
(bad)
les
sub
add
inc
imul
test
inc
inc
xchg
(bad)
arpl
fsub
sbb
mov
dec
xchg
loopne
and
stc
push
in
xor
(bad)
and
dec
int3
xor
jle
retf
in
rol
pop
add
test
retf
xor
movlps
hlt
and
add
pop
hlt
add
sbb
iret
xchg
repz
ins
mov
loope
adc
adc
clc
outs
xlat
add
mov
ins
cmp
idiv
add
aad
je
pop
xchg
dec
shl
push
clc
push
cdq
movs
and
mov
ins
jo
mov
(bad)
push
push
or
sub
sub
fmul
mov
add
rol
test
jmp
jg
ror
or
dec
(bad)
fnstcw
xor
inc
loope
mov
sbb
fdiv
add
and
xor
inc
ds
sbb
xor
mov
shl
sar
lods
dec
ins
xchg
sbb
sub
cmp
mov
mov
adc
mov
mov
pop
cmps
add
daa
sub
div
or
and
gs
hlt
repnz
xor
dec
or
pushf
jmp
mov
or
stos
pushf
xor
ja
retf
push
mov
or
aam
pushf
inc
call
stc
ret
rcl
fadd
push
push
and
and
imul
arpl
and
and
js
cmp
nop
pop
bound
push
push
and
movs
xchg
xchg
test
shr
ds
jne
(bad)
mov
add
movs
int
adc
jne
or
ret
push
push
call
fld
dec
jecxz
mov
dec
dec
daa
push
and
pusha
and
(bad)
and
push
jns
sti
inc
jge
mov
sbb
js
jb
add
in
or
outs
nop
dec
pop
mov
push
(bad)
enter
sti
daa
test
mov
popa
push
icebp
sar
push
test
sbb
xor
or
mov
add
and
cld
mov
mov
ja
mov
pop
test
xchg
fisttp
sbb
cld
xor
ret
mov
push
sbb
adc
add
and
inc
loope
nop
xor
cmps
sbb
in
add
push
push
adc
dec
(bad)
dec
inc
cmps
jno
clc
sbb
fisubr
adc
adc
push
inc
fdiv
or
sbb
in
and
mov
and
mov
leave
push
(bad)
std
add
xchg
adc
dec
pop
mov
mov
popf
cmp
inc
sub
sbb
inc
mov
adc
fdivrp
test
retf
out
icebp
fwait
or
push
pop
mov
add
std
in
push
(bad)
lds
ror
xor
and
push
mov
inc
lahf
imul
inc
push
xor
mov
jl
pusha
push
xor
pop
sbb
xor
mov
sub
shl
cmp
adc
add
xor
not
xor
lea
xor
icebp
and
ss
xor
push
push
cmp
xchg
mov
add
inc
shl
(bad)
xchg
into
mov
enter
lock
cwde
les
mov
fwait
xchg
mov
push
xchg
idiv
nop
mov
add
pop
or
arpl
add
fimul
push
push
push
mov
nop
cmp
jmp
adc
cld
test
mov
xor
enter
xor
fmulp
dec
loope
xor
sub
mov
scas
(bad)
and
push
pushf
adc
inc
add
pop
mov
mov
mov
imul
in
cs
pop
push
and
ret
dec
add
push
and
clc
test
inc
push
clc
push
adc
jmp
push
enter
cmp
daa
enter
sub
adc
xor
or
in
pop
inc
cmp
inc
adc
loope
and
repz
rol
div
xchg
inc
add
or
add
and
pop
adc
push
xor
mov
xor
in
ss
or
dec
add
retf
retf
repz
mov
nop
push
and
adc
pop
push
inc
and
dec
(bad)
int3
outs
pop
mov
sub
movs
daa
pop
test
int3
stos
push
push
inc
cmp
add
sbb
daa
int
pop
(bad)
pop
mov
sbb
jmp
jmp
jl
xadd
or
and
sbb
rol
mov
in
add
dec
repnz
and
clc
add
dec
pop
dec
add
and
hlt
ins
cmp
cmp
adc
out
stos
xor
and
dec
lahf
cs
sub
cs
outs
xor
rcr
xchg
pop
jo
ins
sbb
jle
jns
jbe
dec
add
pop
push
inc
jns
outs
js
mov
fcmovbe
push
and
loope
dec
adc
or
sbb
add
inc
xchg
add
lea
(bad)
and
pop
or
inc
pop
xchg
idiv
mov
push
lea
jne
sub
cdq
fs
sub
sub
jnp
add
mov
or
(bad)
fwait
add
dec
push
xor
adc
push
repnz
js
nop
xchg
inc
push
in
xor
test
mov
rol
enter
push
rcr
or
bound
xor
inc
enter
adc
call
jo
xor
and
or
push
jns
add
enter
mov
add
add
pop
fadd
bound
jbe
inc
add
xor
xor
repnz
iret
rcr
mov
in
pop
fcomp
cli
inc
hlt
sub
xchg
adc
mov
sti
inc
push
in
xchg
xor
ror
inc
push
cld
(bad)
xchg
and
repnz
mov
cld
mov
in
sahf
xchg
hlt
add
arpl
and
mov
(bad)
push
enter
(bad)
cld
ins
(bad)
cmp
fmul
adc
in
add
and
(bad)
cmp
mov
push
int3
out
pop
xor
jns
les
push
jl
fdiv
xor
dec
push
enter
mov
jns
mov
pop
fmul
repnz
push
in
fadd
lock
or
fcomp
sbb
in
or
or
pop
pop
jb
add
dec
xchg
xor
add
icebp
mov
xchg
pop
mov
mov
cmp
dec
push
call
out
xchg
fdiv
add
jns
add
add
xor
nop
out
pop
add
imul
adc
loope
pusha
xchg
cmp
cmp
loop
xor
out
xchg
add
jecxz
cmp
adc
add
and
in
pop
repnz
sbb
add
cwde
leave
and
in
(bad)
xor
in
pop
jb
loopne
clc
push
in
and
pop
xor
dec
and
in
xor
in
dec
xchg
add
pmulhuw
mov
pop
mov
pop
xlat
xor
and
cld
xchg
cmp
xor
pusha
js
pop
fild
cmp
call
in
sub
push
or
fs
inc
push
mov
aaa
add
and
dec
scas
pop
mov
push
jbe
sbb
pusha
add
push
add
pop
das
stos
ficom
xchg
cmp
das
add
fs
into
inc
or
xor
rol
adc
imul
pop
imul
or
xor
lahf
daa
or
push
add
cdq
push
inc
fs
ins
and
xor
push
or
adc
add
retf
lods
inc
scas
imul
popf
xchg
xor
dec
in
adc
scas
dec
jae
lds
arpl
ret
movs
imul
rol
ins
iret
xor
adc
out
mov
movs
shl
into
or
popa
jbe
push
pop
xor
add
or
cs
push
or
daa
fld
and
add
add
xchg
dec
leave
pop
add
dec
pop
ja
adc
inc
lods
xor
inc
jns
inc
das
jne
xchg
je
push
ret
add
outs
mov
inc
stc
fsubr
mov
pop
jle
sti
inc
and
inc
pop
add
cmps
sub
popa
bound
dec
mov
xchg
push
mov
adc
jae
jae
idiv
xchg
aam
pop
cmps
inc
popa
je
add
xchg
sub
sub
push
xor
ds
adc
mov
outs
xor
push
pop
pop
push
das
(bad)
pop
ss
loopne
movs
in
jo
lahf
sbb
sub
pop
mov
fs
popa
sbb
outs
or
sbb
pop
add
push
das
out
mov
pusha
inc
or
daa
xchg
and
push
or
mov
scas
das
pop
add
and
inc
pop
ins
jne
mov
pop
or
push
mov
ss
das
or
adc
inc
inc
push
daa
dec
pop
cmp
sub
add
push
inc
push
out
fnsave
adc
and
mov
ret
bound
sub
inc
add
xchg
mov
mov
lds
add
js
add
les
out
push
mov
add
mov
iret
rol
inc
push
cmps
pushf
sbb
and
les
arpl
loope
sbb
cmp
enter
mov
arpl
jg
dec
dec
(bad)
ret
mov
xchg
xor
jnp
sub
add
adc
xor
in
and
pop
ins
xchg
retf
hlt
or
aas
addr16
jb
fsub
push
push
add
adc
mov
div
and
movs
xor
push
and
dec
push
adc
dec
push
add
mov
xor
xchg
arpl
shr
jbe
cmp
fchs
mov
in
leave
icebp
aam
jo
pop
xchg
push
push
(bad)
frstor
rol
jmp
xor
les
pop
or
adc
mov
inc
in
jne
dec
in
mov
cmp
lock
mov
leave
sbb
es
imul
jle
xchg
xor
adc
dec
xchg
sbb
cmp
push
rol
lods
xor
push
mov
mov
movs
jmp
test
add
cs
pop
or
and
sub
adc
hlt
xchg
rcr
pop
add
pop
adc
push
sub
das
xchg
cmp
(bad)
fwait
int3
movs
inc
rcr
add
adc
mov
lea
inc
sbb
dec
cld
pop
rol
hlt
aas
or
movs
jns
sbb
and
in
minps
push
mov
inc
push
inc
inc
inc
xor
outs
dec
or
lock
es
jg
fimul
push
dec
add
adc
pop
xchg
jo
mov
jne
inc
or
or
repnz
in
push
inc
in
fcom
or
sub
inc
jg
cmp
or
dec
dec
icebp
cdq
dec
es
inc
xchg
repnz
and
mov
(bad)
adc
mov
aam
ins
je
sub
outs
data16
pop
xchg
or
shr
icebp
add
mov
xchg
shl
or
jne
push
sub
cmp
sub
das
pop
add
xor
pop
je
mov
add
adc
lahf
mov
sbb
or
add
adc
xchg
out
pushf
xlat
push
clc
leave
push
pop
adc
or
mov
xchg
or
pop
jno
sub
lock
push
inc
xchg
xchg
rol
dec
add
or
fwait
ror
repz
inc
mov
mov
dec
mov
adc
push
test
inc
xchg
icebp
mov
inc
clc
pop
inc
mov
fcom
adc
and
mov
push
inc
push
mov
adc
or
pop
aam
inc
dec
pusha
les
sahf
sahf
gs
mov
push
push
adc
mov
adc
xor
adc
(bad)
nop
push
and
sbb
fdivr
xor
push
add
lods
rcl
dec
sbb
push
and
nop
mov
and
adc
test
sbb
cwde
dec
jmp
pop
aad
inc
ins
xor
mov
mov
test
movs
pop
shl
cmp
fsub
inc
or
xor
fsub
pusha
jno
loopne
xchg
pop
push
cmps
fadd
and
xor
cmp
dec
or
mov
and
mov
or
adc
pop
push
sub
(bad)
inc
xor
gs
mov
and
sbb
repz
jmp
(bad)
and
inc
inc
jne
int3
xchg
adc
lds
and
fsub
fild
test
test
and
inc
aaa
and
lods
xor
add
movs
xchg
mov
out
mov
fs
ja
inc
out
sbb
jno
mov
sbb
scas
pushf
sub
int
clc
test
and
imul
mov
inc
push
fnstcw
jmp
pop
(bad)
adc
imul
add
inc
mov
gs
mov
jg
sub
fsub
or
xchg
(bad)
and
mov
arpl
outs
sub
xor
sub
add
jnp
xchg
lock
and
jg
or
aaa
add
xor
rol
add
push
dec
inc
adc
retf
xor
xor
in
xor
jne
arpl
clc
lea
mov
fsub
hlt
mov
pusha
inc
cmp
and
push
jo
mov
pop
pop
sub
pop
div
jmp
push
and
pop
and
sbb
out
xchg
int3
and
and
mov
cmp
lods
mov
(bad)
add
ret
sahf
xchg
iret
(bad)
mov
and
inc
adc
mov
inc
dec
popa
xor
sbb
sbb
cmps
or
pop
ss
push
xchg
popf
lods
icebp
das
push
dec
push
or
nop
inc
push
cmp
jmp
jmp
popa
mov
mov
cmp
cmp
dec
out
sbb
xchg
in
jl
push
or
in
(bad)
xlat
cmp
bound
(bad)
adc
ret
or
pop
mov
mov
inc
repnz
sete
jns
pop
xchg
lods
pusha
and
xchg
bound
shl
dec
inc
or
imul
xchg
vmptrst
hlt
xor
leave
push
sub
es
pop
sub
retf
sbb
adc
push
push
repnz
sub
cld
aas
cmp
inc
add
cmp
and
pop
lahf
out
imul
cwde
jo
test
popa
adc
pop
adc
add
xchg
ins
inc
jg
es
call
out
cmp
(bad)
or
lods
or
enter
mov
mov
fisttp
or
xor
icebp
rcpps
sbb
jmp
mov
test
and
ret
adc
sti
adc
les
in
outs
and
jecxz
lea
pop
add
in
add
sbb
ficom
or
and
lea
pop
pop
lock
int3
adc
loope
lock
inc
adc
xlat
popa
loope
dec
fcom
repz
inc
add
cmps
mov
inc
sbb
lods
add
sbb
adc
aam
scas
sub
dec
lods
push
stos
add
sub
add
mov
nop
in
add
or
xchg
mov
xchg
pop
mov
mov
xchg
inc
adc
inc
fsubp
mov
cld
xchg
pusha
mov
mov
mov
inc
movs
clc
in
sub
jmp
scas
or
adc
jge
pop
jnp
push
push
and
fs
and
(bad)
and
repnz
(bad)
in
push
fild
fld
fcmove
fmulp
hlt
pop
aas
std
out
mov
cmp
je
enter
adc
pusha
cli
mov
or
arpl
jo
aaa
push
shr
jb
xor
and
mov
xor
cwde
or
or
mov
jno
in
or
enter
rol
cmp
add
inc
sub
mov
or
mov
in
fcomp
fs
sub
sub
je
or
dec
dec
retf
sbb
sbb
adc
cmp
aam
leave
and
xchg
inc
loopne
pop
inc
ret
fadd
cld
out
adc
inc
push
xchg
cmp
lods
xor
(bad)
in
(bad)
or
jmp
cdq
pop
xchg
adc
inc
cmc
jns
fdiv
icebp
push
xor
push
xor
push
test
test
push
or
jle
mov
out
push
movs
xchg
mov
sbb
xor
or
scas
popa
inc
dec
xor
jmp
int3
aad
aam
pop
mov
out
fcomp
mov
xor
enter
movs
xor
js
cmp
sbb
(bad)
dec
(bad)
(bad)
(bad)
cwde
mov
(bad)
int
fimul
sti
xor
addr16
push
adc
cmp
and
aam
push
imul
inc
inc
cld
cld
imul
mov
adc
push
fmul
scas
add
inc
pop
push
dec
add
mov
cmp
call
out
pop
pop
pop
xor
mov
push
xor
ss
add
inc
dec
inc
pop
cdq
inc
test
lods
inc
mov
sbb
adc
jo
inc
ja
and
xor
adc
test
xchg
inc
push
dec
push
pop
and
xor
pop
ds
push
(bad)
fcmovnb
leave
xor
loopne
cmp
jbe
xchg
jmp
fcomp
aam
xchg
pop
push
adc
xor
cwde
sub
dec
mov
clc
and
les
adc
sub
js
mov
dec
adc
pushf
inc
pop
push
shr
xor
jbe
(bad)
jmp
xor
adc
ret
add
mov
scas
popa
add
lds
cwde
jno
pusha
jl
jne
pop
inc
add
mov
test
or
scas
add
loope
mov
les
push
fwait
in
xor
mov
sub
cmps
mov
fsub
je
mov
adc
mov
xor
enter
test
scas
jo
xor
and
mov
dec
sub
inc
xchg
push
rcl
cmp
sbb
inc
fild
in
fwait
xlat
xor
pop
mov
cmp
cmp
fdiv
in
mov
xchg
and
ret
push
cmp
jne
jp
mov
dec
(bad)
pop
ret
mov
movs
mov
pop
inc
mov
jmp
sub
icebp
icebp
push
adc
call
pop
hlt
sbb
jo
push
mov
and
lock
in
xor
shl
in
movs
je
xchg
push
and
test
scas
mov
push
and
cwde
inc
sbb
adc
add
call
inc
xor
(bad)
or
push
mov
push
stos
pop
xchg
popa
pop
push
add
or
lods
jmp
mov
xchg
je
mov
nop
ja
push
sbb
into
sbb
rcr
add
aam
xor
imul
cmp
sbb
icebp
and
imul
dec
sbb
mov
mov
shl
pop
xor
loop
fdiv
sbb
minps
icebp
cmc
dec
and
adc
mov
nop
inc
cmp
popa
add
mov
fcomip
mov
sar
rcr
mov
fldenv
add
mov
inc
jne
sub
xor
mov
jl
mov
inc
shl
xchg
add
mov
add
cmp
leave
and
sub
xor
mov
sub
mov
pusha
ror
push
and
stos
pop
outs
pop
sbb
sub
enter
xor
push
sahf
lods
and
or
and
mov
cmc
adc
push
aad
dec
pop
nop
sub
push
adc
data16
sbb
iret
jnp
sbb
or
js
adc
sub
add
mov
push
add
mov
cmp
xor
das
inc
stos
nop
aaa
(bad)
lods
adc
ja
add
mov
and
push
or
lds
fs
push
enter
in
sub
xchg
cwde
call
dec
push
xchg
mov
je
sbb
pushf
push
cmp
jne
loopne
or
and
test
enter
cwde
mov
dec
and
push
inc
xchg
add
aam
dec
dec
pop
addr16
adc
ins
call
pop
fcomp
sub
enter
fwait
js
mov
or
xchg
xchg
cmp
sar
shr
test
add
jecxz
xchg
data16
movs
fwait
or
icebp
mov
aam
xchg
fiadd
jbe
jne
inc
inc
inc
aam
mov
adc
es
fs
dec
add
pop
(bad)
dec
ret
inc
add
lock
jne
and
ss
dec
jle
out
mov
aaa
int3
jl
cmp
sub
pop
push
sbb
cmp
cmp
xchg
mov
gs
sbb
push
jo
sbb
push
enter
sar
xor
add
or
nop
shl
cmp
inc
pusha
or
cmp
lock
xor
les
popa
pop
in
or
(bad)
hlt
push
mov
xor
mov
inc
push
add
jo
jg
std
jl
mov
push
pop
adc
clc
mov
push
lods
xor
cwde
(bad)
and
test
outs
or
xor
arpl
sub
lea
outs
mov
or
test
push
inc
mov
ror
push
xor
enter
ds
in
in
inc
popa
fmul
lock
popa
int
and
inc
rcl
das
inc
stos
dec
pusha
push
pop
retf
push
or
jge
test
lea
dec
sub
xor
pushf
and
shl
cld
neg
retf
inc
clc
cmp
lds
jns
adc
add
add
repnz
push
mov
inc
add
sub
out
ds
fist
or
repnz
jle
fcomi
sbb
pusha
cmp
loopne
cmc
inc
arpl
jbe
aas
shl
loopne
and
cmp
jmp
pop
(bad)
jo
xchg
or
and
jb
add
pop
and
sbb
add
cmp
and
fnstsw
inc
sbb
and
inc
jo
push
or
retf
arpl
(bad)
jns
add
mov
mov
test
adc
clc
ror
xlat
and
repnz
or
sbb
mov
aaa
add
xchg
lahf
mov
cmp
pop
add
ds
and
loop
mov
xchg
mov
in
addr16
fild
lods
cmps
mov
cmp
mov
inc
add
test
in
sbb
adc
mov
inc
call
mov
xchg
mov
inc
pop
lods
sahf
lods
adc
cmp
das
outs
dec
inc
arpl
push
retf
shl
add
jnp
adc
fiadd
cmp
pop
stos
aad
in
sbb
sbb
cmp
(bad)
cld
inc
inc
stos
jne
les
add
test
cmp
or
(bad)
loope
getsec
pop
call
mov
xlat
neg
sub
es
and
pop
xor
inc
jl
mov
test
xor
mov
pop
ins
lock
sub
lea
cmps
inc
adc
sub
je
retf
xor
dec
fdiv
inc
loopne
dec
jns
(bad)
fwait
test
loopne
or
mov
loopne
cs
mov
(bad)
dec
adc
push
test
pop
xchg
fptan
or
dec
sbb
mov
push
les
clc
dec
lods
lods
dec
jge
cmp
inc
js
mov
jb
in
inc
les
push
daa
adc
jo
hlt
int3
jmp
adc
jl
inc
xchg
mov
in
inc
inc
fstp
push
cs
mov
fdiv
push
or
xchg
clc
or
out
and
adc
push
sbb
pop
je
jge
jb
lods
in
cmps
push
and
xor
inc
sahf
xchg
gs
push
popa
rol
pop
jno
in
pop
(bad)
and
and
shl
call
or
cld
jne
xor
imul
inc
fbstp
bound
prefetch
mov
es
inc
daa
and
xchg
das
cmc
outs
inc
inc
ret
out
pop
bound
cmps
and
add
inc
or
je
inc
inc
sub
lea
nop
jl
aam
pusha
and
inc
cld
lahf
add
jle
push
ds
jb
xor
jno
pop
dec
scas
call
add
or
les
inc
xchg
sbb
aas
jne
mov
push
in
xor
and
and
cmp
push
add
add
cmps
or
fbld
inc
mov
mov
test
sbb
test
fnstenv
int
xor
ins
sbb
mov
aaa
imul
fistp
aam
inc
(bad)
push
or
mov
arpl
inc
repnz
emms
sub
and
clc
or
addr16
rol
xor
and
dec
xor
or
retf
clc
xor
cdq
cmp
loopne
mov
into
inc
lods
push
or
or
ins
inc
frstpm(287
rcl
push
inc
mov
adc
pusha
cmp
sub
test
add
cwde
push
jbe
inc
ins
add
dec
sbb
xor
dec
dec
inc
sub
xor
pop
jb
pop
sub
mov
mov
fisttp
enter
inc
add
xor
test
test
and
cwde
sub
repnz
adc
mov
out
mov
mov
or
add
pop
push
add
imul
jb
pop
fcom
mov
sbb
mov
jae
add
inc
or
push
aaa
hlt
paddsb
sbb
dec
or
mov
inc
cwde
bound
cmp
and
cmp
and
stos
or
jo
push
dec
xor
fadd
ss
daa
rol
js
sub
push
rcl
fisubr
sub
cmp
iret
mov
lea
xchg
add
xor
fdivr
dec
(bad)
stos
dec
sub
pusha
xor
or
dec
push
bound
or
pop
adc
adc
pop
out
inc
inc
stos
push
scas
mov
ror
push
or
inc
inc
dec
inc
mov
ret
mov
mov
popf
xor
or
cmp
mov
sbb
inc
loop
cmp
sub
sub
les
aaa
addr16
cmc
dec
sub
(bad)
fisttp
mov
pop
push
add
cmp
and
pop
and
das
xor
jmp
mov
xchg
dec
rcl
cmp
loop
xchg
and
or
sbb
push
icebp
pusha
inc
and
nop
ficomp
add
push
add
inc
(bad)
fucomp
add
fcom
repnz
pop
mov
xor
and
pushf
adc
mov
add
mov
fadd
pop
fs
mov
or
xor
push
push
add
adc
in
sbb
into
dec
les
lock
add
movs
cmp
mov
add
(bad)
loopne
popa
mov
(bad)
enter
dec
pop
mov
leave
dec
fild
sub
mov
loopne
rcr
popaw
sar
xchg
add
ins
repnz
enter
add
lods
inc
cmps
nop
pop
jnp
pusha
cmp
sbb
or
bound
sbb
add
pop
les
js
test
or
and
jge
push
hlt
into
mov
push
sbb
ss
xchg
in
ss
adc
sbb
mov
add
and
push
push
add
or
and
or
push
(bad)
addr16
mov
in
push
cmps
outs
cmp
add
sbb
push
imul
dec
and
adc
mov
pusha
xor
daa
mov
mov
cmps
mov
jl
les
call
dec
shl
(bad)
imul
dec
arpl
iret
fdiv
les
cwde
jno
push
ror
pop
sub
adc
dec
rol
pop
lock
mov
add
dec
push
ret
mov
sbb
rol
cmp
int3
jne
xlat
push
mov
mov
and
shl
in
addr16
or
cmp
xchg
into
xor
mov
add
mov
cmp
in
pusha
xchg
mov
imul
and
pusha
mov
enter
push
fbstp
in
fwait
and
int3
imul
or
femms
dec
cmp
inc
dec
push
ret
dec
aad
out
dec
cmp
(bad)
bound
mov
sub
out
xor
sub
addr16
pop
not
pop
xchg
push
adc
xor
xor
pop
mov
fnstsw
sub
stos
dec
xor
xchg
or
test
(bad)
mov
js
imul
js
mov
je
mov
pushf
pop
les
imul
mov
and
and
push
and
dec
lahf
clc
jb
pop
cmp
shl
imul
test
pop
jecxz
lods
or
scas
jae
fisub
pusha
add
push
push
dec
push
push
adc
sbb
mov
iret
repz
or
(bad)
daa
mov
add
push
xor
adc
mov
scas
popf
mov
mov
push
pop
sbb
imul
push
dec
add
icebp
cmp
push
adc
sub
inc
sub
pop
fwait
inc
xlat
xor
pop
push
sub
test
mov
dec
sub
xor
scas
out
xor
add
inc
sbb
mov
retf
push
cmp
fcomp
inc
jns
imul
stos
lock
mov
mov
addr16
(bad)
and
pop
clc
or
or
shl
mov
jecxz
addps
cdq
outs
inc
mov
ins
pop
jg
daa
addr16
mov
fwait
mov
inc
(bad)
out
cmps
mov
inc
pop
sbb
push
call
add
mov
add
sti
add
bound
push
jnp
xchg
in
dec
mov
add
sbb
add
xor
or
add
icebp
push
repnz
pushf
jge
test
cmp
sub
sbb
adc
xchg
pop
dec
cmp
inc
aad
test
xchg
mov
or
rol
(bad)
cmp
shr
sbb
rcr
iret
xlat
xchg
add
add
xchg
add
mov
repnz
sub
enter
test
mov
sbb
ror
arpl
test
xor
mov
test
adc
or
jmp
pop
fwait
jp
jae
call
ja
nop
dec
pushf
pusha
popa
jne
mov
cmps
xchg
xchg
mov
pushf
dec
dec
ror
sbb
xchg
add
sbb
into
outs
ror
and
fs
add
inc
inc
push
push
add
lock
mov
inc
sbb
xchg
or
xor
mov
jns
mov
mov
les
add
cmp
xor
pop
inc
add
mov
add
pop
xlat
push
cmp
mov
sbb
mov
xor
leave
push
mov
xor
out
cmp
or
pop
sbb
xchg
ret
fst
and
leave
inc
mov
sbb
loope
call
fisttp
cmp
mov
add
xor
sbb
add
adc
pusha
jge
cmp
popa
mov
ret
addr16
hlt
ins
pop
dec
and
fs
ret
test
cmp
es
mov
or
ret
push
pop
and
dec
xchg
inc
xchg
pop
imul
loope
push
lock
das
cmp
cmp
pop
jmp
cmps
mov
pusha
(bad)
adc
ins
repnz
or
sub
push
push
push
push
jmp
inc
mov
xor
adc
pushf
push
cmp
sbb
into
mov
stos
js
add
add
loop
sub
adc
jb
mov
pop
cmp
or
cmp
xor
xor
and
or
push
inc
jl
inc
sub
adc
push
(bad)
nop
xchg
or
in
mov
mov
imul
xlat
enter
jnp
sbb
les
push
pop
cvttps2pi
enter
cmp
xlat
xor
ins
mov
jo
adc
sub
jne
xor
pop
and
adc
imul
ss
push
or
repz
not
outs
jmp
sub
out
sbb
sub
clc
mov
or
jmp
neg
or
imul
clc
rcr
into
loopne
xchg
inc
test
loope
enter
or
dec
pusha
pop
or
cmp
ins
xor
xor
cmps
cmp
in
push
jo
jne
xchg
add
pop
(bad)
pop
or
retf
inc
xchg
jb
add
xor
(bad)
sbb
lods
jmp
mov
inc
jmp
adc
jae
mov
loope
js
add
mov
loope
push
xchg
imul
sub
jmp
adc
dec
out
shl
dec
sahf
sub
inc
daa
adc
and
add
sbb
jae
add
xor
(bad)
loopne
inc
pop
test
fldcw
iret
mov
mov
test
or
fs
sbb
push
dec
test
push
add
lods
loopne
adc
sbb
stos
sbb
mov
or
push
test
or
mov
add
nop
outs
add
xor
outs
mul
inc
iret
je
sbb
sub
mov
cmp
cmps
add
loop
and
mov
daa
pop
stos
jmp
cmp
or
cmp
lods
xor
test
mov
hlt
sub
dec
movs
lods
push
sbb
(bad)
pop
in
lods
adc
and
jo
(bad)
push
cs
jb
retf
gs
movs
inc
dec
mov
push
cmps
(bad)
out
xchg
cmp
xor
xor
sbb
xchg
gs
and
or
sahf
or
movs
or
arpl
dec
add
push
dec
jle
sbb
push
xchg
xor
pop
pop
ficomp
aas
dec
dec
inc
push
push
dec
ins
push
stos
dec
jmp
std
aaa
data16
cmovns
xchg
mov
dec
cmps
lea
in
mov
xor
sub
pop
bound
lock
xchg
jns
aaa
rol
test
and
aam
jae
xor
gs
outs
add
leave
ins
and
data16
or
sar
push
push
ins
movs
adc
in
cmp
push
loopne
out
push
sbb
cli
jae
adc
and
sbb
outs
xlat
xor
and
out
mov
or
and
or
test
xor
in
outs
push
loope
data16
punpckhdq
dec
jecxz
bound
adc
ja
fs
mov
and
push
loopne
xor
je
pop
or
xchg
inc
gs
cs
push
dec
push
mov
enter
mov
pop
dec
ss
jno
pop
xchg
movs
adc
movs
adc
enter
push
xchg
pop
cmovl
pop
lahf
push
mov
pop
cmp
push
sbb
adc
push
inc
push
inc
stos
movs
imul
pop
adc
add
mov
xchg
push
or
(bad)
and
sub
add
dec
cmps
test
jbe
dec
jecxz
ds
pop
push
inc
je
add
cmp
std
sbb
imul
aaa
shl
ja
out
cmps
(bad)
or
mov
outs
lods
adc
add
xchg
mov
lahf
sbb
dec
test
push
out
or
repnz
xchg
call
mov
sbb
xchg
pop
in
inc
stc
outs
sbb
mov
xor
dec
sahf
addr16
arpl
mov
or
call
mov
jb
xor
mov
ins
ins
or
outs
inc
push
call
frstor
popf
dec
retf
dec
or
loopne
mov
add
ja
nop
inc
mov
xor
cmp
inc
or
shl
xor
mov
das
sub
pop
cld
sbb
add
lock
in
lock
int
mov
in
cmp
jecxz
and
cmps
and
or
push
call
iret
xchg
jo
lea
xor
retf
cmp
in
daa
cmps
in
cwde
jl
fcomp
bound
jae
in
sub
add
sub
mov
adc
fsubr
cwde
loope
sti
adc
mov
imul
je
and
push
pushf
fidivr
add
xor
push
fcmovnu
push
stos
dec
and
ss
xchg
inc
cmps
addr16
adc
in
iret
add
sbb
push
xor
add
jb
pop
inc
fisubr
and
outs
hlt
nop
sbb
cmp
add
retf
or
lahf
or
xlat
pop
jb
pop
add
call
xor
jnp
mov
mov
les
push
adc
pop
push
add
pop
shr
jns
dec
add
fsubr
inc
mov
add
mov
jo
into
adc
les
pop
mov
clts
lods
push
dec
loopne
pop
fisttp
int
sbb
push
adc
retf
mov
mov
rcl
js
retf
xlat
ss
pop
hlt
pop
movs
div
inc
cmps
imul
mov
ss
loopne
mov
inc
jl
inc
mov
mov
shrd
push
dec
rcr
call
retf
gs
push
clc
pop
sbb
jb
jb
ins
xchg
lea
shl
in
fisttp
pop
inc
pop
pop
inc
jle
in
pop
ds
mov
aam
fldcw
retf
sub
cld
mov
lods
mov
movs
sbb
inc
add
xchg
cmp
fxch
mov
push
movs
into
push
je
(bad)
call
and
dec
mov
repnz
outs
mov
add
pop
inc
add
fistp
retf
mov
pop
daa
inc
pop
mov
pop
call
inc
fwait
gs
push
dec
sub
nop
ss
sar
pop
fld
inc
cmp
jp
retf
in
pop
mov
mov
std
jno
push
sub
movs
pop
addr16
or
add
mov
mov
and
das
add
push
test
pop
fwait
cld
lahf
mov
add
add
xchg
and
in
and
(bad)
fiadd
scas
je
add
and
popa
je
xor
pusha
inc
jmp
push
xor
xor
inc
mov
push
inc
inc
inc
inc
inc
inc
add
inc
and
or
or
add
add
push
xchg
pusha
adc
xchg
rol
pop
shl
add
movs
dec
add
mov
mov
fbld
pop
mov
dec
ror
rcr
loopne
cmps
pop
ss
lock
add
adc
and
xor
inc
imul
imul
imul
cmps
imul
add
syscall
fs
cmps
sub
push
xor
pop
push
pop
movs
inc
popa
jb
inc
dec
mov
and
inc
dec
push
jb
pusha
arpl
add
gs
in
les
push
aaa
(bad)
pop
(bad)
(bad)
(bad)
inc
add
add
push
pop
or
or
or
push
movups
adc
adc
push
pop
sbb
sbb
sbb
push
pop
jg
(bad)
jmp
and
and
sub
sub
cs
lahf
cmp
cmp
ds
add
sar
inc
lods
inc
dec
dec
dec
mov
ss
mov
stc
push
push
push
push
push
pop
jmp
neg
pop
pop
pop
pop
pusha
aas
jnp
jge
jg
add
xchg
lea
xchg
xchg
xchg
xchg
xchg
cwde
cdq
mov
(bad)
(bad)
(bad)
jmp
test
stos
stos
lods
lods
scas
scas
mov
mov
movs
mov
mov
mov
mov
test
(bad)
inc
(bad)
(bad)
enter
int3
int
iret
rcl
rcl
aam
(bad)
xlat
fcomp
fcmovu
cli
mov
add
add
add
pop
add
mov
add
push
xor
and
lds
daa
add
dec
mov
push
mov
ror
(bad)
or
adc
sbb
nop
add
or
adc
push
cmp
pop
push
add
out
cmp
or
pop
daa
out
loopne
sbb
and
and
push
sbb
leave
inc
pusha
pop
dec
add
xchg
mov
cld
lods
lea
mov
dec
shl
ins
jl
mov
xor
xchg
movs
mov
add
inc
jno
dec
add
xchg
int
enter
inc
add
add
add
imul
inc
push
pusha
int
imul
shl
in
add
adc
imul
imul
(bad)
xor
and
xchg
pop
test
xor
ss
shl
dec
xchg
dec
push
jl
inc
pop
rcl
pop
call
push
cmps
imul
imul
shl
rol
mov
mov
shl
dec
sar
inc
dec
shl
add
xor
shl
add
add
cmps
xor
add
jle
call
push
push
push
imul
imul
cmps
imul
add
xor
pusha
retf
cmps
imul
dec
shl
nop
call
dec
shl
mov
mov
inc
shl
mov
dec
ror
nop
call
shl
mov
mov
shl
cwde
and
xor
push
dec
adc
add
pop
or
xor
sar
js
sbb
xor
shl
dec
adc
add
xor
shl
pop
or
shl
mov
xor
nop
call
dec
shl
mov
mov
dec
(bad)
add
add
xor
shl
add
add
shl
add
dec
shl
add
xor
shl
add
add
shl
add
dec
shl
add
xchg
daa
leave
xor
pop
push
inc
add
add
imul
imul
imul
cmps
imul
add
xor
add
add
add
xor
shl
add
add
shl
add
add
add
add
dec
shl
add
into
loopne
call
test
sbb
shl
add
add
lock
mov
inc
xor
enter
imul
imul
clc
mov
push
xor
popa
or
lea
jns
xor
jo
js
mov
dec
mov
loope
stc
or
push
or
mov
and
or
adc
cmp
sbb
lds
sub
(bad)
jo
(bad)
call
and
js
and
dec
and
mov
or
and
mov
jo
mov
xor
mov
jns
test
mov
dec
sbb
jle
mov
mov
xor
xchg
mov
mov
enter
jb
pop
stc
inc
or
and
mov
adc
xor
shr
dec
pop
xor
inc
xchg
or
or
js
jns
leave
jb
add
stc
inc
pop
xchg
in
or
and
pop
loopne
gs
xor
add
jo
dec
sub
nop
gs
loopne
gs
xor
add
jo
dec
test
ror
cwde
mov
mov
or
xchg
pop
pushf
sub
or
xchg
gs
sbb
adc
daa
retf
add
xor
inc
xor
shl
and
clc
clc
pusha
mov
enter
jb
cmp
ror
mov
nop
lock
mov
lds
xor
xchg
sub
adc
js
mov
sbb
sbb
adc
mov
pop
pop
mov
adc
xor
jns
nop
in
add
xor
xchg
sub
ret
ret
jo
stos
inc
xchg
sbb
cmp
push
and
add
cmp
pop
mov
xor
add
or
lock
and
int3
fdivr
mov
xchg
sub
xor
push
or
stc
sbb
sbb
inc
or
mov
xchg
test
inc
pop
mov
ret
lock
sbb
jns
nop
mov
mov
adc
sub
lock
add
jno
cwde
nop
cmp
or
arpl
fadd
dec
aad
xor
xchg
adc
ret
add
sbb
cmp
jo
xor
adc
js
push
cs
jo
add
je
sbb
cmp
or
imul
pop
repnz
or
test
ret
je
fadd
mov
or
sub
sbb
xchg
pop
pusha
nop
sbb
cmp
adc
test
mov
pusha
loopne
lock
retf
fcom
xchg
in
sub
pop
daa
push
pusha
jo
sbb
enter
les
mov
popa
cmp
sar
rcl
dec
fadd
sbb
mov
dec
ds
sti
lock
enter
dec
fmul
cmp
dec
shl
call
sub
pop
or
and
cs
adc
and
dec
fmul
cmp
enter
lock
and
dec
xchg
pop
bound
enter
pop
pop
sar
push
arpl
push
mov
or
dec
sti
add
pop
xchg
add
inc
imul
cmp
mov
add
or
inc
jmp
inc
enter
cwde
jl
mov
enter
lock
and
shr
mov
and
sbb
mov
inc
sti
add
inc
or
enter
mov
mov
enter
jb
sar
shr
push
nop
nop
enter
mov
dec
fst
shl
push
xor
mov
retf
pop
cs
sti
add
sbb
call
mov
dec
xchg
in
jnp
shl
or
shr
mov
and
sbb
add
jo
xor
xlat
in
adc
pop
or
scas
dec
mov
sub
and
push
xor
test
push
(bad)
aam
cld
adc
and
dec
pusha
jo
add
mov
stos
fstp
das
call
imul
dec
pop
ins
imul
xor
cmps
lock
sbb
inc
dec
shl
mov
ror
aam
push
pop
push
push
xor
shl
mov
xor
push
push
mov
inc
imul
in
xor
jnp
ds
clts
sbb
shl
or
shl
or
ja
shl
call
inc
adc
call
adc
imul
mov
pop
imul
push
in
call
mov
shl
add
add
add
xchg
add
call
imul
cwde
or
xchg
or
or
mov
xchg
femms
adc
dec
shl
adc
adc
adc
pop
shl
pop
mov
xchg
sbb
sbb
push
sbb
scas
(bad)
xchg
mov
out
in
xchg
loopne
mov
add
adc
mov
retf
cmp
fs
mov
retf
add
hlt
add
cmc
add
add
iret
inc
push
jns
add
and
cld
and
or
and
sbb
add
add
add
enter
push
add
cld
xchg
xor
in
jne
adc
(bad)
cmp
loop
mov
lahf
add
sub
inc
sbb
outs
retf
shl
jmp
inc
inc
dec
pop
xchg
stos
sahf
and
aas
pop
mov
adc
push
in
test
push
add
outs
pop
sbb
addr16
(bad)
sub
and
ins
lods
sbb
retf
cmps
xor
add
aas
in
xchg
retf
in
or
das
dec
test
fadd
imul
jle
lods
mov
xchg
stos
adc
add
je
pop
stc
ins
push
shr
push
adc
aas
or
ins
lods
and
fdivr
push
inc
imul
pusha
push
push
sbb
(bad)
call
pop
ds
cmp
mov
inc
data16
imul
inc
push
push
push
inc
push
sub
ss
jne
into
mov
fidivr
call
mov
inc
push
fs
das
(bad)
pop
imul
mov
pop
fcom
cmps
cmps
mov
int3
sub
sub
xor
push
fdiv
rol
adc
mov
in
mov
loop
add
sub
add
inc
dec
inc
rcl
sub
addr16
push
push
inc
and
pop
retf
mov
add
cmp
rol
pop
scas
dec
in
pop
ss
add
push
or
in
inc
aam
push
lahf
push
sbb
or
inc
imul
sub
cs
sbb
(bad)
popw
add
dec
add
inc
push
push
push
cdq
(bad)
fidiv
push
or
sbb
imul
inc
inc
pop
push
jbe
aaa
or
inc
aaa
dec
call
inc
add
(bad)
jmp
(bad)
cld
and
rcl
sbb
nop
add
and
popa
add
jae
xor
adc
imul
cmp
push
pop
bound
sub
adc
push
add
cmp
(bad)
ds
pop
fimul
cmp
xchg
rol
mov
leave
and
add
push
or
pop
ss
pop
add
cmps
push
sub
pop
cmp
xchg
add
cmps
retf
lods
(bad)
fwait
pop
(bad)
push
arpl
mov
xor
add
mov
jle
and
fidiv
sub
xchg
imul
adc
or
outs
imul
push
cli
and
cmova
je
faddp
ficomp
adc
add
ins
(bad)
bound
fs
ja
arpl
fidiv
dec
adc
imul
outs
fidivr
addr16
fbstp
sub
jb
ins
push
jae
aaa
addr16
arpl
jae
and
push
dec
pushf
loopne
jnp
popa
into
je
add
push
imul
outs
jp
stos
je
jb
or
or
sub
sub
inc
mov
mov
bound
push
jns
fcom
add
fidiv
pop
sub
adc
push
push
mov
in
pop
imul
ja
pop
pop
fwait
sbb
imul
test
js
add
sbb
jo
addr16
push
or
dec
ret
mov
lea
call
bound
outs
scas
(bad)
imul
fwait
sbb
idiv
inc
out
push
xchg
mov
(bad)
cmps
sub
mov
mov
push
sbb
mov
fcomi
pop
pop
lahf
push
popa
dec
jecxz
jmp
xchg
and
div
popa
retf
ins
xchg
jns
pop
inc
imul
cs
mov
adc
scas
xchg
add
push
arpl
push
jnp
jns
jecxz
bound
mov
mov
and
sub
aas
fst
push
jbe
jo
ds
cmp
sub
arpl
popa
sub
stos
jnp
jo
daa
xor
imul
push
into
xchg
push
mov
push
push
cmp
xor
(bad)
push
pop
sub
jb
mov
push
dec
fisub
jb
in
cmp
or
xor
daa
xor
cmps
fidiv
lds
punpcklwd
test
ins
outs
cmp
test
jp
add
mov
fs
mov
mov
sbb
pusha
mov
add
fsubr
stos
test
jmp
popa
or
inc
jbe
idiv
fcom
arpl
or
ds
sub
pop
mov
das
retf
(bad)
and
add
stos
arpl
add
mov
lods
adc
je
inc
mov
sub
jne
(bad)
and
aas
popa
(bad)
push
int3
inc
(bad)
cmp
enter
mov
cmp
xchg
xor
shr
jae
aaa
pusha
jbe
repz
outs
(bad)
sbb
dec
gs
sub
imul
outs
bound
jne
and
(bad)
in
scas
dec
pop
daa
jo
sub
scas
xchg
push
push
(bad)
scas
test
jns
into
cmps
cmp
sbb
sub
iret
mov
js
cs
mov
push
xor
bound
mov
fcom
xchg
adc
mov
push
nop
mov
push
sahf
inc
ja
or
cmps
bound
jae
test
(bad)
sar
add
add
outs
ja
je
push
sbb
mov
pop
scas
add
sbb
adc
jns
xor
(bad)
push
mov
pop
xchg
xor
aas
push
pop
inc
mov
sbb
push
add
dec
xor
pop
loopne
inc
mov
mov
das
sbb
addr16
pop
xor
fwait
dec
adc
je
outs
dec
ins
(bad)
(bad)
fild
inc
fwait
adc
mov
dec
ror
pop
sbb
je
loope
fs
repnz
(bad)
adc
bound
cmp
and
adc
ja
retf
xchg
add
inc
je
sub
add
dec
mov
jmp
loope
inc
scas
ins
add
das
dec
mov
cmp
push
push
je
push
mov
pop
jo
cmps
outs
dec
pop
sub
sbb
mov
add
dec
dec
ins
scas
inc
push
pop
call
jo
sti
xor
cmps
outs
pop
push
lods
push
inc
and
scas
movs
mov
add
cdq
cmps
sbb
xlat
ret
test
jmp
pop
cs
dec
fild
outs
out
sbb
sbb
add
loopne
xor
popa
pop
inc
push
push
outs
shr
movs
ss
pop
ds
or
test
cmps
pop
pusha
push
mov
cmps
cmp
fwait
jmp
ret
jge
cmp
stos
or
ins
xor
add
inc
sbb
mov
xor
cmp
arpl
aad
fist
sbb
push
xchg
cmps
ret
sbb
inc
jecxz
or
mov
jg
mov
sub
adc
pop
mov
cmp
or
and
fisub
add
jo
and
in
ficomp
jmp
outs
cmp
mov
ins
mov
push
sub
ja
lods
jecxz
push
push
out
jbe
ja
pop
sahf
mov
(bad)
movs
arpl
sub
and
mov
mov
mov
push
cmp
push
fdivrp
rol
fidivr
or
jbe
inc
pop
cmp
sbb
fwait
mov
jae
add
popa
jne
mov
fwait
and
add
rol
dec
add
sbb
push
stos
pop
(bad)
arpl
sbb
push
pop
jle
pop
jg
sub
sbb
sub
add
lods
movs
pop
dec
stos
(bad)
mov
mov
out
mov
xor
loopne
aam
(bad)
push
push
mov
out
pop
daa
fidiv
sahf
es
sub
jno
add
jb
jbe
inc
cmp
imul
(bad)
inc
mov
and
and
jo
mov
popa
add
mov
push
test
(bad)
mul
mov
lods
(bad)
xor
test
(bad)
sahf
ins
shr
pop
mov
mov
mov
sub
jno
or
mov
push
sub
ins
jne
ficomp
jg
add
inc
and
fst
and
addr16
adc
lods
adc
xchg
or
or
xchg
jo
aaa
mov
data16
jp
sub
jg
or
jecxz
arpl
lods
jne
xor
or
das
ds
and
mov
push
sbb
scas
out
xlat
adc
sbb
aaa
push
and
add
and
xlat
shr
xor
imul
inc
dec
jns
pop
sbb
adc
mov
or
pop
imul
cwde
or
xchg
push
arpl
adc
jo
adc
push
cmp
gs
cmp
imul
or
add
nop
xor
inc
inc
mov
inc
or
push
pop
mov
or
mov
add
push
mov
arpl
test
ins
in
(bad)
mov
mov
cs
cli
mov
xchg
pop
xchg
rcr
std
mov
pop
jge
dec
ret
aaa
ret
sub
pop
ret
into
(bad)
dec
ret
push
imul
(bad)
push
inc
fs
(bad)
in
daa
ret
cmp
daa
or
or
inc
jnp
imul
adc
ja
xchg
hlt
push
add
add
and
xchg
in
retf
imul
fs
mov
sbb
nop
jne
imul
jo
je
dec
push
rcl
and
test
cs
mov
add
xchg
cs
mov
xor
dec
shr
push
add
jo
mov
sahf
adc
jl
jae
arpl
inc
popa
lods
adc
inc
push
dec
sub
dec
jno
push
test
mov
or
(bad)
iret
sbb
xchg
and
xor
mov
dec
push
mov
add
repnz
sar
mov
jns
cmp
gs
outs
imul
dec
dec
pusha
aam
jge
mov
stc
les
inc
mov
inc
and
pop
sbb
movzx
pop
push
dec
cmp
shl
sahf
(bad)
adc
adc
jmp
mov
xchg
or
fstp
pop
inc
or
cwde
or
dec
lea
mov
neg
sbb
(bad)
or
retf
adc
cmps
adc
or
push
retf
mov
out
fs
add
or
jns
(bad)
mov
js
das
sub
push
add
mov
push
rol
add
iret
fisttp
push
xor
dec
sub
push
sbb
inc
test
inc
xor
pop
iret
ja
imul
push
jne
clc
sub
(bad)
jmp
sub
jns
mov
and
xchg
adc
retf
das
lods
loopne
out
or
mov
into
jbe
enter
adc
das
int3
mov
jmp
add
sub
cmp
int3
mov
and
mov
pop
test
xchg
push
bound
nop
pushf
xor
sub
xchg
pop
push
sbb
in
jb
cli
sbb
jb
ror
pushf
cmp
ins
fwait
cmp
mov
xchg
jns
pop
data16
nop
push
jb
or
movs
or
pop
push
or
xor
xor
jg
jbe
popa
das
test
or
push
add
inc
in
adc
mov
xchg
mov
int
pushf
jle
test
imul
sahf
cs
inc
leave
mov
and
pop
add
jns
xor
and
dec
inc
push
jg
(bad)
fs
xchg
xchg
pusha
inc
mov
lock
sbb
outs
pop
jns
ror
je
aaa
repnz
cmp
cmp
sbb
adc
sbb
dec
jle
xor
pushf
cmp
(bad)
imul
fimul
adc
mov
jne
and
call
movs
cmp
data16
xor
dec
jg
or
lds
adc
jns
push
pusha
ins
and
xlat
gs
daa
mov
aaa
push
pop
xchg
add
(bad)
dec
fsubr
cmp
jecxz
push
lea
mov
scas
cmp
(bad)
ror
sar
pop
shr
cld
int3
add
in
sub
mov
push
(bad)
jmp
int3
jno
in
sub
jb
inc
push
loopne
add
fcmovnb
push
jb
sub
or
enter
aas
inc
pop
fidiv
js
add
pop
xchg
ja
mov
and
(bad)
mov
and
cmp
arpl
push
gs
mov
push
and
mov
push
push
or
pop
push
fisubr
outs
mov
dec
imul
inc
cmovb
or
push
push
jo
inc
enter
sub
inc
cmp
and
pusha
loopne
inc
inc
ds
push
jo
test
jae
sub
or
pop
jne
sub
pop
stos
movs
mov
or
and
addr16
cmova
jae
xchg
(bad)
test
pop
push
fisubr
push
scas
inc
retf
jecxz
xor
fistp
pop
or
push
add
jo
pop
ja
es
sbb
aas
dec
pop
sbb
jne
sbb
ins
test
adc
add
inc
popf
ins
mov
mov
lea
add
dec
cli
adc
lods
pop
push
outs
xchg
jbe
and
or
push
push
inc
push
inc
push
jae
inc
cld
(bad)
addr16
dec
mov
dec
ds
aaa
pop
inc
outs
arpl
test
(bad)
sysret
test
xlat
inc
push
pop
cmps
std
push
push
pop
dec
jns
inc
pop
push
add
push
pop
sub
das
in
pop
sti
aaa
jmp
js
xor
adc
push
jae
inc
nop
outs
mov
or
out
mov
xor
(bad)
and
or
add
add
dec
nop
and
or
xchg
add
aaa
and
add
mov
cwde
add
add
pop
fwait
xchg
dec
and
sti
test
lea
mov
and
inc
and
xchg
adc
sbb
and
ret
xor
fidivr
push
cs
nop
push
push
retf
std
add
cli
loop
add
je
outs
jecxz
pop
rcl
cmp
nop
mov
scas
imul
add
pop
js
aad
sub
dec
inc
dec
mov
mov
pop
mov
adc
inc
push
mov
bound
cmp
and
ins
add
mov
daa
jmp
add
mov
loopne
and
push
pop
pushf
xchg
retf
xchg
retf
ins
adc
adc
adc
push
test
dec
mov
cmp
dec
mov
dec
jae
adc
push
das
add
daa
push
nop
xor
rcr
test
push
in
cmp
hlt
mov
js
ins
outs
jae
and
or
add
out
and
fwait
(bad)
jnp
sub
cs
and
sub
aam
dec
mov
out
arpl
xor
ds
ds
inc
add
std
sub
inc
pop
pop
adc
sar
test
cmp
aaa
mov
pop
fwait
cmp
lahf
sar
cli
lea
lds
push
fiadd
pop
ins
jae
jmp
sub
test
adc
add
das
lods
inc
pusha
jmp
inc
adc
pop
and
sbb
xchg
adc
call
pop
fcomp
icebp
sub
inc
je
push
push
jns
cmp
bound
jns
adc
or
(bad)
sub
jns
fadd
sbb
or
jb
outs
adc
sti
adc
aaa
cmp
dec
adc
inc
das
out
in
dec
cmp
inc
push
inc
sar
dec
aam
pushf
lahf
cs
mov
push
dec
sub
ins
xor
dec
sbb
ds
lods
xchg
or
cmp
inc
inc
push
push
ret
fld
xchg
and
or
adc
xchg
adc
jecxz
xor
cmp
js
or
call
test
pop
and
jle
and
and
dec
outs
mov
mov
pop
rcr
xor
pop
dec
ins
jo
outs
push
ins
mov
push
outs
mov
imul
les
loope
call
pop
jne
mov
add
sbb
or
add
sub
pop
cmp
add
adc
out
ret
xor
sbb
push
add
jns
mov
fxch
aam
aaa
cmp
add
stos
ins
fld
pop
pop
and
sbb
jno
adc
mov
sub
add
push
inc
push
mov
inc
dec
sub
js
adc
cmps
enter
jl
pusha
jge
cmps
popa
ret
outs
arpl
sub
and
add
gs
mov
mov
mov
loope
or
xchg
xor
inc
or
mov
or
test
mov
add
std
dec
sbb
push
add
and
add
xchg
dec
data16
je
and
sahf
std
mov
xor
mov
test
dec
jl
push
clc
pop
mov
xlat
call
jmp
icebp
mov
adc
push
inc
fld
dec
xchg
icebp
xor
jnp
xchg
std
mov
pop
ret
cld
inc
jecxz
add
or
and
std
arpl
mov
inc
cld
mov
bnd
cmp
add
or
jecxz
je
push
push
lea
imul
pop
pop
jp
cmp
imul
js
dec
push
call
cmp
fadd
push
sbb
or
pop
lahf
mov
lahf
pusha
or
xor
jmp
cmp
sbb
dec
or
xchg
or
or
xchg
ins
add
and
sbb
push
nop
cmc
pushf
mov
add
rcr
or
fdivp
call
outs
inc
outs
push
cmc
call
pushf
hlt
push
push
jo
clc
call
sbb
and
call
repnz
inc
outs
sbb
mov
movq
or
or
xchg
out
sub
aad
sub
or
das
(bad)
hlt
lock
rcr
int3
or
lock
stc
pop
sbb
ins
cld
fistp
fldcw
mov
adc
pop
and
inc
call
clc
jnp
inc
jp
shr
cmp
and
sar
loope
call
stc
sbb
adc
(bad)
inc
lea
inc
jo
mov
and
or
or
mov
inc
adc
add
cmps
mov
push
xchg
addr16
fnstenv
adc
pop
sbb
ins
jp
dec
mov
cwde
loopne
das
retf
jne
jmp
push
retf
clc
push
loopne
fld
xchg
sbb
adc
adc
dec
push
fld
xchg
jl
push
ror
scas
cmp
pop
popa
adc
dec
or
ret
dec
pop
mov
sbb
push
push
inc
sub
mov
push
dec
movs
jne
sar
addr16
cmp
mov
stos
pop
sbb
loope
inc
push
nop
lods
ins
movs
jle
sub
lock
jb
lea
jmp
call
loope
sub
sub
push
movzx
lock
push
ins
shl
fwait
xlat
dec
or
ret
xor
or
icebp
push
cmp
jne
pop
push
add
inc
jge
cmp
push
add
add
ret
cmps
imul
jl
mov
fwait
cld
mov
jle
push
xchg
(bad)
xor
retf
fldenv
icebp
pop
inc
jmp
mov
cmps
aas
js
mov
add
(bad)
jb
sahf
std
ret
add
or
jg
pop
pop
sbb
xchg
mov
in
sub
push
pop
ins
dec
ja
(bad)
fidiv
xor
sbb
imul
shl
mov
and
jp
push
and
fcmovnbe
or
sub
mov
fld
clc
xor
test
mov
cmp
mov
mov
mov
sar
or
pop
leave
gs
sbb
cmps
jmp
jmp
adc
mov
jno
test
mov
(bad)
enter
div
dec
into
clc
movsx
push
or
maskmovq
ja
add
in
in
fisttp
cmp
xor
dec
shl
pushf
movs
or
div
mov
nop
inc
or
jg
push
mov
sub
add
int3
push
push
mov
ror
mov
je
push
xchg
dec
add
fist
in
mov
or
lahf
or
pop
jne
inc
shl
push
mov
int
pop
test
pop
ds
pop
or
arpl
sbb
(bad)
ret
or
mov
cmp
cwde
imul
sub
sub
mov
xor
push
iret
clc
push
(bad)
popa
adc
xchg
popf
test
call
mov
sbb
sahf
clc
mov
add
push
gs
das
adc
add
mov
push
cmp
fldenv
iret
scas
jno
sbb
or
(bad)
dec
or
and
movzx
mov
lea
and
mov
sbb
cmps
add
inc
sbb
add
pusha
and
leave
ret
or
repnz
add
jp
jmp
xor
sbb
loop
imul
lea
sbb
mov
enter
aam
loop
arpl
or
sub
hlt
add
adc
xor
add
outs
inc
xchg
jbe
mov
push
inc
rol
push
sbb
sbb
aad
sahf
mov
data16
xchg
fcomp
push
pop
xchg
mov
sub
pop
addr16
sbb
gs
daa
pop
shl
popa
add
in
jne
ss
shl
setne
aad
cmp
add
push
push
in
fdivr
cmps
sbb
fisubr
call
inc
pop
cli
add
inc
inc
iret
out
mov
mov
mov
fiadd
add
inc
fadd
cmps
push
jp
pop
or
or
je
stos
dec
or
or
inc
loopne
int3
int
(bad)
adc
mov
int
fimul
cmp
dec
add
push
stos
pop
xchg
idiv
fst
xchg
loopne
pop
push
or
lea
mov
push
or
push
push
push
and
fld
aam
dec
jnp
inc
adc
adc
repz
loopne
jecxz
and
mov
jo
xchg
ret
or
mov
ins
push
adc
inc
jmp
or
and
lock
mov
mul
test
jmp
xor
cmp
inc
adc
mov
cs
mov
outs
pop
cmps
icebp
or
mov
cs
sbb
add
and
popf
cdq
jecxz
mov
pusha
jns
pop
sbb
cmp
cmp
je
cmp
cmp
mov
arpl
je
and
das
cmp
add
jne
pop
mov
push
dec
ficomp
sub
repz
and
pop
mov
or
fist
mov
fs
adc
xor
or
sbb
pop
addr16
je
movs
inc
push
test
pop
push
cmp
sti
cmp
xchg
pop
xchg
jecxz
add
xchg
xor
mov
stos
cmp
(bad)
(bad)
mov
cmp
cmp
xchg
test
mov
sub
mov
inc
jb
lods
mov
jle
aas
ret
mov
xchg
add
sub
jnp
retf
out
inc
add
sbb
cmc
daa
(bad)
adc
loop
adc
adc
cmc
mov
repnz
push
ret
jo
mov
mov
ins
or
pop
jge
sbb
mov
int
adc
dec
mov
cmp
adc
in
mov
stos
mov
stos
clc
fdivrp
pop
arpl
test
je
rol
shl
adc
(bad)
jmp
sub
pop
add
cmp
cmp
jbe
div
mov
(bad)
sub
or
mov
lahf
sbb
push
out
and
and
loopne
ins
pop
not
add
sbb
mov
nop
add
push
jl
mov
ret
stos
jb
lods
pusha
add
pop
mov
nop
pop
rcl
add
popa
ret
mov
retf
or
enter
mov
fadd
and
rcr
cld
and
sub
xchg
addr16
inc
hlt
sub
sbb
sar
xor
in
lea
inc
sti
push
mov
mov
jne
jle
xor
dec
mov
test
jns
xchg
xchg
lea
les
hlt
call
nop
mov
add
shl
sbb
out
test
in
test
test
add
adc
mov
rol
fcos
fistp
loope
shr
mov
shr
inc
cmp
jle
jmp
clc
repnz
jg
and
shl
mov
cmp
jle
not
xor
outs
mov
mov
cmp
mov
fisttp
scas
test
cmps
loopne
(bad)
out
call
fsubr
fiadd
pop
test
arpl
sbb
retf
add
cmp
jg
mov
retf
mov
fidivr
and
add
test
dec
jne
inc
pop
ds
mov
jmp
mov
pop
sub
mov
(bad)
out
add
jno
in
pop
nop
sbb
jmp
push
iret
shl
and
mov
add
mov
inc
test
sbb
cmp
es
add
aaa
dec
cmc
mov
cmp
sub
lods
mov
pop
pop
pop
ret
or
and
sub
or
sbb
pop
mov
or
inc
jmp
adc
jle
sbb
mov
repz
mov
scas
add
xchg
out
mov
or
shl
jns
in
mov
enter
ror
jmp
add
(bad)
or
jnp
xor
mov
in
inc
dec
neg
test
mov
pushf
sahf
fbstp
scas
sub
cmp
add
fistp
mov
cmp
xchg
mov
push
fs
sub
jno
shl
test
jg
xchg
xor
mov
push
shl
dec
jmp
retf
add
neg
pusha
add
xchg
pop
sbb
jmp
mov
clc
inc
adc
les
psubsw
sti
and
cmp
inc
pop
xchg
data16
pop
mov
rcl
jbe
fistp
and
add
mov
add
frstor
ret
retf
pop
add
mov
fs
add
and
xlat
add
mov
rcl
ins
mov
sbb
ficom
mov
std
push
or
jbe
in
mov
icebp
mov
in
shl
out
fprem1
call
jecxz
or
dec
jl
jecxz
push
and
lea
in
mov
mov
dec
sbb
mov
push
adc
inc
push
xor
push
pop
lds
jmp
call
push
(bad)
push
outs
and
sbb
mov
mov
idiv
sahf
and
add
pop
or
dec
rcr
xchg
inc
mov
dec
mov
iret
into
out
jge
mov
int3
je
out
mov
or
fcmovnb
pavgw
mov
inc
sub
and
cmp
icebp
call
or
inc
ret
(bad)
cmp
and
add
icebp
fist
inc
or
mov
rcr
inc
or
push
jl
jg
jmp
push
sub
cmp
jl
icebp
push
mov
in
adc
js
sar
xchg
fadd
fisttp
cdq
frstor
dec
push
sub
pop
outs
and
xor
and
sahf
adc
cmp
sub
mov
push
cmp
ja
xor
push
and
and
adc
test
sub
inc
inc
scas
jge
xor
inc
xor
je
xor
sbb
mov
jno
or
and
add
cmc
add
(bad)
inc
or
das
xchg
pushf
sbb
push
xchg
adc
xor
xor
adc
dec
shl
push
dec
gs
mov
cmp
add
dec
push
dec
sbb
in
push
std
xor
jle
adc
add
inc
push
add
jno
mov
test
inc
scas
jb
push
stos
dec
sub
shr
lea
ins
add
and
lods
imul
in
loope
inc
add
loopne
sbb
ret
inc
loopne
xor
mov
jl
or
lea
loop
xchg
mov
jno
xor
xor
and
adc
fst
sbb
(bad)
into
pop
rcl
pop
sbb
mov
nop
adc
or
cwde
inc
aaa
dec
retf
aad
sub
mov
out
ja
add
mov
sub
fwait
xor
jne
outs
ins
and
sub
and
push
sub
aas
push
inc
dec
push
mov
pop
pusha
fsubp
jmp
imul
mov
jno
mov
and
xlat
call
aas
ror
push
mov
and
mov
and
test
(bad)
pop
sub
call
sbb
nop
gs
rcr
xchg
xchg
stc
addr16
adc
add
outs
sbb
pop
add
je
fldcw
cmp
inc
pavgb
jmp
cmp
cli
sbb
jo
sar
jne
inc
nop
add
xor
pop
xchg
cli
add
js
cmp
add
fidivr
mov
es
imul
mov
lds
rcl
or
xor
shl
push
cmp
in
sbb
mov
and
popa
daa
sar
push
push
and
dec
mov
fimul
mov
mov
lods
fsub
lahf
add
add
jecxz
cmc
add
cmp
mov
cmp
jl
dec
ins
dec
jmp
dec
sahf
mov
push
cwde
adc
dec
std
push
or
push
cmp
jnp
mov
xlat
mov
clc
lods
ss
add
mov
jb
cmc
dec
lea
push
ins
das
fwait
pop
dec
mov
outs
aaa
mov
cmps
enter
mov
int3
sbb
shl
mov
or
cld
add
and
sbb
js
add
adc
push
pusha
jecxz
(bad)
push
cdq
dec
cmp
jle
cmp
lock
mov
mov
mov
inc
inc
and
mov
fcom
cmp
cmp
cmp
jbe
mov
mov
sub
and
adc
pop
cmp
sub
and
pop
mov
add
fwait
scas
std
sbb
or
add
call
sti
das
in
test
xor
adc
or
mov
sub
add
clc
ss
lea
(bad)
lock
ja
mov
inc
aas
sub
fadd
lods
cmc
(bad)
in
sbb
inc
push
call
push
out
xor
mov
cmp
sub
push
arpl
lds
push
xor
push
xchg
lods
icebp
jge
int3
icebp
rcr
cmp
pop
call
add
(bad)
icebp
jle
ret
jg
mov
push
scas
adc
neg
dec
ret
test
je
fdivp
aaa
cli
aaa
pop
test
mov
add
xor
or
cwde
imul
inc
mov
push
mov
jne
xchg
cmp
call
(bad)
out
lea
jl
test
jl
fist
sub
test
or
fcmovne
(bad)
and
add
jg
dec
jmp
and
sbb
xchg
inc
int
adc
stos
daa
out
jno
neg
xchg
sbb
pop
ret
pushf
gs
stos
loope
inc
xchg
shl
lahf
xchg
xchg
mov
push
xchg
push
es
xchg
xchg
call
push
mov
loop
cld
add
mov
pop
pusha
retf
cmc
dec
test
jbe
mov
or
in
int3
mov
jg
dec
jmp
inc
pop
hlt
push
push
dec
mov
cmps
(bad)
cmp
fsub
pusha
jmp
pop
neg
das
aaa
mov
(bad)
dec
push
or
mov
or
push
int3
xchg
and
push
in
cmp
setno
popa
xchg
or
xchg
not
cmps
in
push
cmp
dec
sbb
stc
fidiv
lea
out
bnd
in
add
cmps
idiv
stc
add
cld
test
inc
push
xchg
imul
push
add
clc
or
add
or
je
enter
sar
mov
cmp
clc
sbb
mov
addr16
sbb
call
sbb
test
mov
lock
adc
push
jge
add
movs
pop
xor
or
mov
add
sahf
and
cli
cmp
adc
(bad)
cmp
ret
cli
adc
inc
mov
add
mov
mov
mov
fld
nop
cmp
je
cmp
je
fcomi
pop
jle
add
xor
call
repnz
push
popa
inc
jg
add
psllw
idiv
mov
and
clc
push
loopne
sub
mov
(bad)
ja
xchg
(bad)
sti
fild
imul
push
pop
mov
mov
fsubp
cmp
push
cmp
scas
adc
fcomp
int
push
shl
enter
(bad)
xor
or
mov
dec
add
mov
adc
mov
add
dec
enter
jno
jmp
repnz
faddp
cmp
mov
add
in
cmp
xor
sahf
scas
or
and
jns
sub
add
cdq
inc
jno
out
pop
mov
mov
lds
out
outs
and
call
lods
jns
jb
cmp
or
data16
clc
xor
inc
jl
ror
repnz
and
pop
sub
cld
push
and
mov
ret
and
dec
cmp
mov
out
xlat
sbb
arpl
sbb
adc
jbe
push
call
sbb
leave
js
mov
adc
and
adc
push
cli
add
lock
sub
jnp
mov
lds
int3
jae
jbe
gs
loope
sub
inc
mov
adc
call
mov
mov
mov
nop
adc
fdivp
sbb
jns
ins
jns
adc
add
mov
loopne
loope
aam
or
repnz
in
jnp
je
fisub
hlt
add
jmp
(bad)
mul
pop
add
mov
mov
pusha
mov
jge
mov
ds
daa
movs
call
xor
and
add
das
mov
add
add
mov
gs
cmps
cmc
aad
push
cmp
or
aaa
add
pop
xor
(bad)
ds
test
(bad)
mov
mov
mov
mov
or
lock
mov
cmc
ror
sub
sbb
push
loopne
stos
in
adc
scas
sbb
push
movs
cmp
adc
inc
cmp
cwde
and
push
mov
int3
pop
icebp
(bad)
aad
mov
sub
shr
push
push
push
add
jno
imul
xchg
or
enter
inc
movs
adc
pop
je
addr16
cmc
sbb
pop
sahf
test
xchg
inc
data16
shl
sub
mov
mov
adc
mov
popa
mov
sysret
mov
(bad)
or
push
add
sub
mov
pop
mov
add
loop
fwait
push
fdiv
(bad)
xor
daa
fs
pop
jecxz
jecxz
mov
addr16
ficomp
pop
out
pop
ret
pop
mov
push
xor
js
loop
adc
ror
jns
out
sub
cs
ss
jge
fild
push
or
mov
(bad)
mov
xchg
into
pop
mov
or
push
retf
mov
mov
movs
inc
add
cmp
jb
add
xchg
imul
add
sub
sub
shl
inc
pusha
call
outs
dec
sbb
sbb
push
daa
mov
mov
sbb
icebp
sbb
pop
pop
mov
push
test
sbb
xchg
es
xchg
push
or
ja
push
mov
add
jmp
xchg
cwde
dec
pop
shl
jp
push
sti
sbb
loopne
or
adc
or
sbb
add
mov
add
pusha
pop
mov
(bad)
rol
js
mov
test
cli
mov
stos
add
xor
pop
xor
add
jae
jg
add
xor
dec
jne
mov
fdiv
ss
pop
daa
sub
add
adc
idiv
inc
sbb
loope
shr
and
stc
fs
add
add
sbb
mov
push
loope
adc
outs
mov
jp
in
pop
shl
imul
sbb
dec
and
inc
inc
push
test
mov
aaa
sti
mov
mov
es
sub
cmp
test
cmp
mov
push
cwde
(bad)
ficom
mov
cs
sub
cmp
xchg
out
and
sub
sbb
jge
or
push
imul
div
add
xchg
sar
dec
mov
or
push
fdiv
mov
aas
dec
add
mov
imul
dec
xor
test
je
xchg
pop
and
loopne
aas
lahf
push
test
and
test
or
push
shl
jns
xchg
cmp
mov
(bad)
jl
cmp
callw
cmps
adc
xchg
xor
cli
jmp
aad
and
lods
sbb
xchg
ror
pop
aas
mov
inc
div
cld
dec
in
push
not
adc
fnstcw
scas
test
add
sbb
pop
and
jno
fadd
or
pop
mov
test
leave
mov
out
ret
pcmpeqw
les
cmp
inc
pushf
add
stos
mov
fwait
inc
sbb
mov
and
cmp
push
or
sar
inc
or
add
outs
push
mov
mov
push
adc
out
jb
(bad)
sub
cmp
jne
adc
pushf
out
mov
mov
ja
pop
sub
bndldx
cmp
sar
xor
jbe
scas
or
and
sbb
sbb
sbb
loopne
jnp
jo
sub
mov
or
sub
out
mov
mov
fadd
jp
sbb
push
push
adc
lock
leave
mov
mov
add
xchg
aad
mov
adc
add
and
(bad)
pshufw
cmp
push
mov
call
dec
or
mov
pop
ret
xor
sbb
pop
cmp
and
add
xchg
add
sbb
mov
push
shl
imul
push
mov
cmp
je
cld
outs
lock
call
mov
push
adc
ss
iret
lds
push
cmove
add
sub
mov
add
pushf
cmp
aas
cdq
sbb
add
cdq
in
in
mov
adc
add
cmp
dec
or
fisttp
push
push
enter
and
xchg
cmps
xor
sbb
jecxz
shl
mov
xor
adc
adc
mov
test
jae
adc
cmp
adc
mov
mov
inc
cmp
sbb
int3
mov
jbe
and
mov
and
inc
mov
dec
(bad)
jo
daa
adc
push
cmp
into
shl
cmp
jb
cld
mov
add
shl
push
mov
dec
add
mov
mov
cmps
cdq
push
or
or
sbb
mov
xor
mov
pop
or
xchg
cmp
add
iretw
sbb
dec
jne
push
cmp
imul
lds
cmp
dec
lock
and
cdq
dec
or
jmp
jbe
or
or
mov
cmps
aam
mul
pop
pop
cs
(bad)
int3
sub
ror
rol
(bad)
fstp
(bad)
adc
and
clc
rcr
aaa
add
xor
or
sub
in
out
pop
adc
outs
(bad)
mov
sbb
sub
mov
shl
mov
repz
inc
jg
xchg
daa
fisubr
add
cmp
mov
inc
test
cmp
push
loope
cmp
xchg
jl
sti
(bad)
push
adc
mov
cmp
xchg
xor
inc
or
dec
mov
daa
cmps
mul
mov
adc
push
mov
pop
jl
out
mov
adc
inc
inc
cmp
iret
sahf
push
xchg
jecxz
daa
jne
call
add
jne
call
repnz
and
adc
xor
enter
cld
jmp
(bad)
sub
in
pop
aas
fucomp
adc
test
fbld
js
(bad)
push
mov
or
jl
rcl
adc
cmp
jb
jnp
jmp
dec
iret
push
cld
jne
sub
or
add
inc
test
ror
jbe
adc
dec
test
push
push
(bad)
or
daa
icebp
out
sub
loopne
adc
add
mov
adc
mov
add
mov
mov
fnstcw
pop
(bad)
movs
mov
dec
mov
(bad)
jl
inc
push
adc
jno
inc
mov
inc
inc
mov
popa
and
jmp
mov
xor
fistp
cmp
fcom
dec
jmp
push
out
jmp
neg
adc
push
or
aaa
test
xor
cmp
add
test
je
clc
adc
pop
retf
sbb
cld
inc
jg
xchg
dec
inc
aaa
inc
call
(bad)
push
pop
pop
push
push
sbb
sbb
sbb
sbb
sbb
pop
push
loopne
cld
call
adc
adc
adc
adc
adc
push
push
cmp
hlt
sbb
and
mov
mov
(bad)
bound
(bad)
jno
mov
nop
js
js
dec
lea
inc
(bad)
sbb
push
mov
pop
scas
mov
adc
jmp
push
pop
sar
or
movs
test
add
ror
mov
inc
mov
imul
add
(bad)
mov
neg
add
add
adc
push
fwait
inc
mov
sub
mov
dec
outs
inc
sbb
out
jbe
mov
and
shl
sar
jg
pop
mov
add
inc
push
lock
out
shl
or
outs
nop
addr16
jne
fst
or
mov
outs
test
pop
das
push
mov
sub
cmp
jmp
icebp
cli
fwait
loopne
(bad)
pushf
adc
inc
jnp
push
or
jg
scas
push
dec
jmp
shl
pop
lock
jne
scas
jmp
or
mov
rcl
mov
lds
arpl
xor
push
pusha
ins
popa
fisttp
pop
jp
aaa
cld
mov
jle
mov
ret
mov
inc
ret
sar
sbb
and
jmp
add
xor
scas
xor
inc
mov
lea
gs
pop
pusha
sub
cmp
nop
inc
adc
xchg
adc
hlt
push
ja
lahf
bound
add
mov
imul
jnp
ins
retf
mov
movs
je
test
push
sbb
fstp
xor
add
xor
std
adc
mov
push
dec
dec
jne
mov
adc
mov
cs
dec
xchg
mov
push
call
lods
(bad)
loope
inc
and
add
mul
cmp
jb
cmp
sbb
outs
sbb
push
xchg
aaa
ret
adc
and
cmp
pop
dec
inc
dec
inc
adc
cmp
mov
out
mov
dec
push
sub
call
adc
mov
cmp
jbe
addr16
jge
xor
push
cmp
pop
add
fmul
cmp
jae
add
and
fcomip
shl
movs
push
or
out
xchg
es
mov
mov
add
out
loopne
aas
fwait
or
cmp
sti
aad
jne
and
and
cmps
add
std
jo
pop
add
push
jle
mov
sbb
and
scas
outs
sub
movs
call
aas
loopne
jo
adc
jo
jecxz
ret
mov
push
pusha
ss
ret
sbb
sub
adc
out
and
xchg
add
pop
leave
adc
xor
pop
dec
add
mov
and
mov
or
push
inc
and
mov
clc
mov
in
push
mov
scas
ret
add
mov
call
inc
add
leave
inc
scas
push
inc
add
js
inc
push
pop
inc
adc
push
fnsave
xchg
xor
push
push
aas
rcr
sar
push
scas
mov
sbb
adc
mov
or
push
add
js
mov
sub
adc
or
ret
or
loopne
mov
push
push
(bad)
mov
sar
mov
gs
inc
aas
add
or
push
xchg
push
or
mov
and
push
adc
loope
in
and
cmp
and
sbb
add
add
cli
ss
jl
push
in
addr16
std
dec
mov
or
ins
xor
data16
inc
pop
jg
push
push
sbb
test
and
inc
or
imul
inc
xor
mov
jg
sbb
or
pop
sbb
adc
enter
test
scas
push
fidivr
adc
xchg
stos
mov
add
mov
popa
and
push
sub
sub
cli
sub
mov
or
addr16
push
add
sub
xor
fistp
push
mov
add
jecxz
inc
dec
adc
fcom
scas
push
test
movs
cvttps2pi
jecxz
xchg
add
add
sub
dec
jge
xor
xchg
or
ins
and
mov
mov
or
inc
rol
mov
or
fimul
test
fidivr
fisttp
cmps
xchg
sub
mov
retf
imul
push
jl
and
inc
and
outs
jmp
jne
cmp
(bad)
je
cmc
lahf
or
and
sub
adc
arpl
fisttp
test
add
mov
sbb
xchg
dec
add
outs
jmp
push
je
push
dec
loopne
loopne
repnz
and
imul
(bad)
rcl
or
push
adc
pop
cmp
xchg
dec
mov
and
sbb
adc
ja
or
ins
dec
sahf
sbb
test
inc
movhps
sbb
cmp
sbb
adc
(bad)
push
sub
push
xchg
sub
mov
sbb
mov
retf
outs
aas
and
dec
add
add
js
and
jno
retf
or
xchg
inc
mov
test
inc
xchg
cmp
test
inc
mov
mov
jno
adc
add
jns
stc
xor
adc
and
sub
add
mov
pop
cmps
push
int3
push
clc
push
dec
pop
sub
sub
mov
sbb
mov
(bad)
ins
and
xchg
inc
lea
push
mov
adc
and
mov
adc
inc
outs
add
inc
repnz
mov
adc
add
dec
xchg
je
push
rcl
popf
jne
imul
js
dec
js
je
push
movs
dec
pop
fisubr
nop
xor
dec
or
nop
mov
dec
das
push
std
cmp
xchg
sbb
ja
jae
mul
jnp
jmp
add
push
repz
in
dec
cmp
or
pushf
mov
dec
test
dec
enter
test
retf
icebp
pop
in
cmp
lea
repnz
mov
push
inc
dec
test
xor
nop
fnstenv
inc
mov
cmp
mov
push
sahf
add
jb
mov
jno
js
push
cld
sub
cdq
inc
adc
cmps
sub
sbb
leave
sub
test
gs
cmc
inc
dec
inc
xchg
add
mul
test
or
add
push
xchg
pop
inc
inc
ja
cwde
cmc
sub
inc
lahf
push
mov
aas
xchg
js
jle
and
xor
mov
lods
outs
mov
loope
xchg
dec
xor
std
push
add
cmp
ja
inc
or
xor
and
(bad)
call
ror
sub
in
push
push
pop
rol
mov
jecxz
inc
add
mov
mov
push
adc
adc
je
xchg
dec
enter
jmp
aad
jmp
lea
int3
adc
xchg
fisub
push
add
pop
sbb
xchg
push
sbb
push
aaa
adc
fstp
inc
je
pop
and
sbb
and
xor
or
push
arpl
scas
push
mov
xor
bound
mov
(bad)
es
add
bound
push
push
push
call
xchg
jo
das
je
mov
adc
mov
std
mov
ja
jecxz
cmp
nop
in
add
sub
je
inc
add
loop
push
je
xchg
push
fimul
mov
mov
add
add
inc
or
xchg
or
inc
hlt
call
sbb
mov
mov
inc
jo
lahf
je
aas
adc
ja
lea
xchg
xor
adc
dec
(bad)
cli
dec
or
adc
in
inc
mov
jae
mov
or
sbb
ret
mov
mov
dec
fdiv
fwait
push
and
adc
and
clc
std
popf
wbinvd
mov
adc
pop
add
cmp
cmp
mov
repz
jmp
mov
fcomp
xchg
stc
fiadd
sub
jmp
imul
xor
dec
xchg
or
adc
mov
cmps
adc
in
pop
cmp
jg
lea
mov
cmp
mov
push
jo
call
xchg
xor
adc
push
dec
cmp
cmp
(bad)
mov
daa
aaa
aaa
dec
dec
mov
or
cmc
not
or
inc
push
xchg
jb
test
adc
movs
sub
icebp
rol
jg
scas
xor
sbb
or
enter
push
mov
jbe
sub
xor
or
adc
cli
and
jg
add
aad
(bad)
fld
mov
and
shl
add
ja
push
add
xchg
adc
push
aas
sbb
cdq
or
add
mov
rep
rol
das
jecxz
out
xor
test
ja
clc
sbb
xor
push
push
jae
icebp
inc
adc
lock
fmul
mov
cmp
pop
shl
and
dec
cmps
jb
xchg
or
movs
js
mov
js
push
lods
js
(bad)
xor
push
push
lods
shr
add
stos
nop
add
pop
push
iret
shr
pop
mov
(bad)
movs
out
inc
(bad)
int
outs
pop
mov
test
mov
pop
cmp
cdq
add
push
(bad)
mov
sbb
inc
pop
rcl
xchg
cmp
add
jno
sub
movs
outs
jnp
jo
adc
jle
push
fs
pop
sbb
fist
dec
jl
movs
test
add
in
(bad)
or
dec
cmp
mov
add
out
mov
add
shr
(bad)
out
mov
xor
add
pop
movs
pop
rol
inc
dec
push
adc
sbb
inc
in
outs
adc
nop
stos
cli
or
pop
sbb
push
adc
pop
cmp
sub
and
psubsb
rcr
ja
jns
lea
and
sbb
movs
inc
pop
xchg
and
mov
push
push
aad
shl
push
adc
add
cmp
sbb
push
fcmovnb
dec
test
into
shl
adc
push
jb
jle
jle
mov
mov
mov
add
(bad)
jl
sub
rol
jnp
dec
jb
sahf
pop
icebp
add
pop
mov
adc
dec
or
in
pop
popf
dec
adc
sbb
sar
mov
fldlg2
push
cmp
ds
jo
imul
jne
xchg
sbb
mov
adc
add
jge
mov
cdq
jo
dec
pop
mov
addr16
je
bound
test
(bad)
fs
vunpckhps
inc
cmp
pop
jno
push
call
lahf
scas
adc
pop
(bad)
jmp
xor
das
sbb
arpl
pop
pop
or
call
pop
or
add
setnp
dec
pop
daa
stos
rcl
cmps
push
xor
jnp
nop
sub
loope
pusha
inc
pop
mov
cmp
les
ins
sbb
inc
sbb
enter
stos
stos
inc
push
jl
dec
inc
dec
nop
push
inc
in
pop
pop
pop
add
mov
dec
push
rcr
fnsave
add
lahf
xor
push
fisttp
mov
mov
lahf
jg
mov
add
inc
pop
test
dec
inc
ins
or
push
pusha
sbb
mov
adc
sbb
lea
adc
sub
fs
pop
or
add
xchg
and
push
push
dec
movzx
lea
push
sbb
add
sahf
out
or
mov
sub
adc
or
jb
and
lea
mov
jne
adc
cmp
(bad)
jmp
jb
in
ret
xchg
mov
jmp
mov
fst
aas
scas
mov
xchg
cmp
add
mov
outs
mov
int
arpl
push
jb
jne
or
jne
out
jge
mov
push
jmp
sub
inc
xor
dec
mov
inc
repz
test
mov
jmp
iret
sbb
sbb
mov
xor
or
lea
add
pop
mov
or
and
inc
jmp
imul
cmps
mov
test
fst
inc
enter
call
sbb
push
in
push
or
push
ins
pop
pop
ja
pop
dec
pop
jb
adc
add
and
or
inc
pop
in
loopne
inc
dec
and
jb
xchg
mov
lods
loopne
push
call
lods
or
rcr
jns
lahf
mov
sbb
push
mov
call
out
dec
(bad)
mov
ins
sbb
or
add
jg
mul
cli
ins
jl
lods
fstp
repz
(bad)
jle
xchg
cmp
or
int3
mov
mov
sbb
mov
pop
mov
mov
xchg
fadd
cli
xchg
jl
mov
fs
pop
adc
jg
pusha
(bad)
mov
ror
ror
cld
inc
add
test
pushf
mov
inc
ins
scas
pop
mov
stos
ret
ja
add
mov
jo
mov
mov
mov
repz
dec
add
in
out
jge
cld
mov
nop
sub
cmp
test
mov
shl
cmp
lods
ror
push
dec
cld
inc
cmp
sbb
int
mov
loopne
mov
pusha
mov
mov
mov
rcl
and
pop
sahf
xchg
adc
xchg
inc
add
out
adc
pop
(bad)
jg
and
or
inc
add
dec
fwait
and
mov
add
adc
cmp
xor
leave
imul
ror
pop
jbe
std
mov
movs
dec
or
xchg
sar
jo
cmp
jle
repnz
std
pop
call
sub
lea
lea
cmp
jbe
mov
mov
daa
je
pop
int
mov
add
ffreep
mov
or
shl
loopne
outs
inc
icebp
cmp
js
mov
and
dec
jns
test
outs
in
ret
cmp
xor
out
add
ins
lock
jb
and
lods
dec
jp
pop
mov
bswap
or
dec
call
or
out
cs
mov
or
ja
mov
mov
pop
or
cmc
and
push
lahf
fisubr
mov
or
aad
mov
sub
add
mov
int3
fbstp
and
push
ins
jbe
push
es
push
ja
jno
sar
cmp
xchg
je
fs
jo
xor
jb
mov
stos
je
ins
pop
leave
sub
aam
stos
fstp
stos
(bad)
std
add
hlt
ret
ret
outs
movs
in
and
das
fcom
mov
lods
mov
dec
mov
addr16
xchg
add
into
leave
test
lods
lea
xor
out
jo
scas
popa
aas
aad
scas
xchg
and
in
scas
cwde
scas
xchg
scas
leave
out
pushf
pushf
scas
test
sbb
dec
and
mov
test
(bad)
aam
movs
mov
enter
aam
mov
mov
xchg
and
test
movs
mov
mov
xchg
iret
xchg
or
xchg
inc
call
add
mov
fild
aam
mov
mov
cmp
fdiv
pop
leave
fdiv
cmp
pushf
in
mov
mov
sti
add
sti
xchg
(bad)
or
cmps
shr
mov
add
in
push
push
cdq
in
pop
test
in
add
xchg
iret
add
mov
call
mov
cmps
shl
mov
fwait
xchg
fdivr
jo
nop
dec
test
cmp
adc
mov
sub
jb
mov
mov
mov
xchg
ins
pop
jmp
mov
mov
or
leave
push
popa
enter
add
loopne
mov
or
into
rcl
mov
mov
mov
dec
dec
leave
les
shl
ffree
mov
mov
jb
fstp
sar
dec
add
mov
cwde
bound
sub
fs
gs
test
cmp
dec
or
retf
cwde
mov
ss
mov
sbb
call
adc
push
push
call
cmp
xchg
into
push
add
bound
add
xchg
mov
adc
add
push
adc
jl
sub
aam
sub
push
cmp
xchg
jbe
push
sub
sbb
shl
inc
and
push
mov
imul
fsub
inc
or
add
and
(bad)
int
mov
cld
ret
into
(bad)
sub
mov
cmp
inc
inc
push
add
mov
dec
push
mov
rcr
rcr
xor
ret
adc
cmp
push
xchg
dec
jnp
pop
dec
dec
lea
and
jmp
ja
pushf
mov
cmp
jae
push
mov
sbb
sbb
push
jp
cld
adc
sub
or
sub
or
jnp
fnstsw
leave
jmp
push
icebp
jmp
adc
inc
dec
xchg
(bad)
dec
cmp
mov
imul
pop
xlat
cwde
or
mov
and
pop
xlat
aaa
pop
push
push
mov
or
sub
cdq
and
loopne
mov
push
test
or
stc
adc
xchg
xchg
(bad)
arpl
cmp
ins
sbb
jbe
cmp
or
mov
not
daa
es
lea
loope
cmp
ja
(bad)
push
repnz
mov
push
sbb
inc
inc
mov
cld
jb
xor
mov
jecxz
push
push
lock
mov
(bad)
aam
test
and
addr16
and
pop
shl
dec
inc
jl
pop
shl
mov
adc
arpl
mov
cmp
loopne
je
jmp
or
mov
adc
add
inc
sbb
sbb
mov
cmp
add
cmp
leave
dec
nop
xor
and
imul
push
inc
xor
dec
or
cld
and
imul
adc
setg
add
cmp
and
outs
or
and
outs
inc
mov
cmp
je
cmp
leave
jno
ins
xor
xor
enter
adc
repnz
cmp
adc
sbb
repnz
je
mov
test
adc
cwde
mov
sbb
mov
xchg
pushf
pop
adc
cmp
jb
jb
js
or
cmp
push
sub
dec
xchg
arpl
jnp
or
mov
fisttp
mov
loopne
inc
add
lods
inc
out
out
rcr
mov
push
inc
es
sub
inc
adc
gs
(bad)
jns
or
sahf
jmp
mov
and
sub
add
adc
sbb
sub
pop
push
dec
fldenv
(bad)
push
xor
and
or
imul
mov
dec
idiv
push
scas
pop
push
jne
dec
add
inc
xor
adc
add
mov
mov
push
mov
or
push
sub
je
mov
dec
inc
and
enter
add
bound
pop
sbb
inc
sub
and
hlt
and
test
xchg
add
ret
adc
inc
sbb
jg
add
xchg
icebp
jo
dec
sbb
loope
inc
fmul
add
test
loopne
sbb
push
mov
push
jns
add
aad
sbb
mov
test
aam
cmc
pop
ins
es
movzx
mov
cmps
and
adc
push
inc
fs
cmp
jne
sar
add
sub
mov
inc
cmp
cmp
and
adc
sbb
or
sbb
add
sub
or
stos
pusha
es
push
push
add
icebp
shl
push
xor
xor
mov
xor
push
inc
rcr
loope
leave
shr
mov
call
sbb
adc
pop
out
stos
ds
addr16
pop
add
inc
xor
movs
test
pop
cdq
ret
jb
leave
lahf
jmp
out
test
mov
not
in
cmp
and
pusha
jge
mov
mov
pop
shr
adc
out
or
xchg
pop
call
(bad)
das
sub
repnz
cmp
push
retf
in
ja
cwde
add
add
sar
mov
jno
sub
add
add
addr16
inc
or
pop
mov
icebp
sub
sbb
adc
jg
imul
mov
dec
imul
jae
in
in
or
out
shr
pop
push
add
es
lock
js
fidivr
mov
push
jb
dec
inc
into
add
add
cmp
add
inc
cmp
mov
mov
mov
call
jmp
mov
popa
or
or
aam
test
dec
xchg
(bad)
jb
das
popa
mov
ret
xchg
add
pop
clc
add
add
cs
pop
mov
inc
cs
xor
push
push
or
add
dec
sub
inc
adc
or
rcr
int
xchg
jmp
call
repnz
sar
fcom
fcomp
push
mov
pop
xchg
ja
add
lods
adc
lock
dec
fdivr
add
pop
jl
adc
shr
lea
sti
add
mov
add
or
mov
pop
(bad)
sti
dec
dec
jne
test
adc
jne
sbb
sub
or
add
inc
push
add
mov
inc
es
pop
mov
(bad)
jbe
xchg
mov
cmp
loopne
test
push
test
push
jmp
mov
lea
out
add
cmp
jae
rcr
mov
std
add
dec
push
cmp
jae
lds
sub
dec
js
retf
in
out
popa
xchg
jne
sub
xor
add
jns
mov
mov
add
lods
cmc
nop
mov
int3
dec
mov
adc
mov
add
push
push
cmp
jnp
jne
icebp
adc
and
jle
in
inc
imul
rcr
jb
movs
adc
addr16
call
mov
adc
div
fisttp
cmp
push
push
push
sub
cmp
(bad)
sbb
les
and
test
int
cmp
mov
and
add
cmp
(bad)
cmc
dec
ins
dec
fadd
in
pusha
adc
add
dec
and
adc
pop
xchg
sar
les
sti
cmp
jbe
movzx
push
neg
shl
cmp
and
inc
ret
loope
les
call
adc
jg
sub
sub
inc
pop
jb
sti
pop
cmp
jl
lods
add
or
mov
cmp
mov
dec
ja
push
les
test
adc
and
movs
mov
idiv
mov
pop
mov
shl
add
sbb
jge
jmp
mov
test
inc
cmp
sub
jns
(bad)
mov
cwde
div
jbe
xor
(bad)
jo
jmp
jbe
mov
cmp
mov
shl
and
cmp
pop
idiv
xchg
push
jmp
sub
adc
fisub
movs
mov
dec
test
inc
popf
test
add
sub
push
shl
lock
jae
xchg
lea
sbb
ins
adc
retf
jno
idiv
jmp
xchg
push
jb
xchg
jle
leave
xchg
imul
loope
inc
or
cmp
sbb
test
jbe
jb
icebp
dec
and
push
add
outs
outs
shr
out
add
ficom
sti
lods
cmp
push
sbb
jle
pop
es
lahf
daa
or
daa
mov
add
sbb
aad
cmp
or
aam
adc
shr
sub
dec
or
push
pop
push
movs
and
imul
out
add
mov
cld
adc
cmp
(bad)
sbb
mov
bound
jae
aam
add
jg
jno
inc
xor
mov
scas
ret
xchg
and
sub
mov
sub
and
push
mov
(bad)
or
call
shl
add
adc
cmp
inc
cmps
add
add
mov
mov
and
sbb
push
add
xor
mov
push
shl
pop
mov
test
sbb
mov
cmp
aam
xchg
mov
add
js
test
sbb
clc
shl
dec
cli
dec
xchg
xor
mov
into
push
fcomp
test
aas
jbe
int3
adc
or
xchg
mov
in
cmps
mov
push
(bad)
or
or
shl
jns
add
xor
adc
ds
add
add
gs
je
ret
add
jbe
outs
jmp
or
cld
(bad)
pop
or
sbb
inc
sti
cdq
in
jl
cmp
outs
inc
outs
jl
xchg
sbb
jle
ret
test
add
rol
(bad)
push
dec
(bad)
push
sub
adc
push
cmp
mov
mov
inc
(bad)
jmp
mov
xor
test
sbb
sbb
and
sbb
xor
(bad)
and
xchg
inc
mov
cmc
adc
ret
xchg
je
dec
jne
add
and
js
shl
cmp
and
adc
xor
inc
outs
aad
sub
enter
mov
xchg
out
pop
and
jg
repnz
and
rol
rcl
sub
iret
xor
mov
jmp
dec
adc
rol
repz
retf
inc
mov
shl
mov
aaa
jl
js
loop
push
sub
jb
jne
dec
add
add
inc
xchg
inc
out
les
inc
cld
inc
push
sub
out
pop
push
cmps
or
dec
hlt
in
ins
adc
jg
push
sub
cmp
cwde
dec
or
mov
add
imul
jne
lea
dec
sub
xchg
push
or
push
clc
xchg
(bad)
aas
xchg
inc
fist
call
sub
push
push
adc
(bad)
push
push
push
call
xchg
add
push
pusha
mov
ins
les
imul
mov
mov
adc
mov
shl
jo
xchg
pop
(bad)
(bad)
daa
movs
jl
sub
jp
daa
test
push
aas
add
xchg
dec
cdq
call
nop
in
add
je
pop
mov
call
or
cmp
cmp
and
ja
rcr
cmp
adc
and
pop
jb
xchg
mov
test
mov
je
push
pop
mov
mov
add
fadd
xlat
push
xchg
fiadd
mov
call
sbb
xchg
inc
sub
lahf
nop
cdq
pop
xor
pop
or
xchg
aas
cmp
jle
daa
fimul
and
add
mov
or
addr16
push
mov
add
mov
test
add
dec
test
scas
fadd
rep
xchg
xchg
sub
mov
cld
loopne
nop
nop
pop
add
add
nop
dec
add
nop
add
nop
or
adc
nop
add
sbb
add
nop
add
nop
add
nop
xor
cmp
nop
add
inc
inc
dec
add
nop
add
add
nop
push
pop
pop
sbb
push
ins
jo
add
nop
je
jl
shl
add
sub
sub
das
xor
xor
mov
out
out
aas
inc
inc
inc
inc
dec
adc
add
shl
add
jmp
ss
add
push
or
mov
call
fisttp
sub
inc
sub
push
dec
shl
jo
push
add
add
shl
pop
pop
das
aas
mov
dec
rcr
mov
push
dec
shl
or
xor
shl
shl
sbb
push
std
sbb
das
psubusb
add
mov
dec
cmps
sub
pop
(bad)
es
sub
fs
add
add
mov
scas
or
in
push
or
enter
or
enter
or
push
and
adc
ins
xor
adc
aaa
es
and
add
pop
push
add
add
add
ss
push
xchg
mov
outs
or
fwait
loop
adc
and
xor
cmp
push
adc
mov
add
outs
or
add
add
push
arpl
pop
or
iret
fiadd
pop
(bad)
not
mov
and
xor
inc
add
add
cmp
and
add
adc
sbb
and
inc
add
fbld
push
add
or
arpl
or
jae
cmc
adc
adc
stc
in
loope
or
pop
mov
aas
(bad)
jg
add
sub
cmp
jecxz
pushf
daa
cmp
imul
loopne
pop
fwait
cmps
in
cld
adc
pop
and
dec
shl
pop
jo
xor
shl
nop
pushf
test
int3
sub
mov
cmps
imul
pop
or
and
pop
add
xor
pop
ins
add
add
(bad)
retf
inc
push
js
mov
push
sbb
add
lock
push
outs
adc
out
push
je
fdiv
adc
ins
mov
add
fadd
xor
mov
xchg
mov
add
lahf
inc
mov
jo
mov
cmp
cli
pop
ins
and
ss
jle
add
dec
maxps
push
data16
push
pop
addr16
bnd
fwait
pop
mov
pop
add
cld
xor
rcl
loope
in
retf
adc
iret
inc
retf
jnp
lahf
push
es
add
inc
arpl
dec
gs
into
rep
arpl
push
ins
inc
push
add
pop
add
fld
(bad)
cmp
bound
cmp
daa
ins
add
jae
or
jo
in
imul
ja
sbb
jb
dec
dec
lods
jno
sub
dec
data16
sti
test
inc
push
push
pop
arpl
pop
sbb
and
js
(bad)
adc
test
adc
or
call
inc
ret
xor
pushf
xor
xor
xor
xor
xor
push
sar
xor
xor
xor
xor
xor
xor
xor
xor
push
xor
inc
xor
lahf
xor
mov
xor
lock
(bad)
cmp
sub
ss
ss
ss
mov
movs
shl
add
or
push
aaa
xor
(bad)
cmp
aaa
popa
aaa
addr16
outs
aaa
jge
(bad)
aaa
lahf
aaa
movs
aaa
stos
aaa
scas
aaa
mov
mov
(bad)
(bad)
(bad)
dec
jb
jl
test
xchg
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
dec
cmp
(bad)
(bad)
jmp
jne
mov
xchg
cmp
cmp
cmp
cmp
cmp
cmp
cmp
(bad)
(bad)
inc
or
adc
sbb
sub
xor
inc
cmp
push
cmp
cmp
jbe
cmp
cmp
call
cmp
cmp
cmp
cmp
cmp
cmp
pop
cmp
(bad)
jg
push
and
xor
add
mov
pop
xor
or
jnp
mov
xlat
pop
sub
test
sbb
or
ss
sbb
and
sub
das
ss
inc
(bad)
dec
ss
ss
dec
mov
out
lea
xchg
out
mov
les
jecxz
(bad)
or
(bad)
(bad)
(bad)
call
aaa
push
aaa
sub
cmp
aas
aaa
inc
aaa
dec
aaa
push
aaa
pop
aaa
gs
imul
aaa
jns
jg
mov
xchg
aaa
push
(bad)
call
aaa
mov
mov
mov
aaa
repz
cld
aaa
out
inc
cmp
dec
cmp
(bad)
(bad)
(bad)
jmp
imul
cmp
cmp
cmp
mov
cmp
cmp
cmp
cmp
cmp
dec
xchg
dec
dec
or
cmp
cmp
cmp
inc
ret
dec
pop
cmp
outs
cmp
cmp
pop
or
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
push
(bad)
(bad)
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
(bad)
(bad)
(bad)
(bad)
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
(bad)
(bad)
dec
xchg
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
(bad)
(bad)
call
mov
sar
jmp
icebp
cmp
cmp
cmp
sub
mov
jmp
cmp
fnstcw
(bad)
cmp
sub
xor
ds
ds
(bad)
(bad)
jmp
jg
(bad)
ds
ds
movs
ds
ds
mov
ds
jmp
add
adc
xor
(bad)
(bad)
aas
fnstcw
cmp
inc
aas
dec
aas
gs
jl
mov
aas
sar
fidivr
jmp
hlt
aas
cli
xor
test
mov
xchg
fist
xor
xor
cmp
xor
xor
xor
stc
push
(bad)
out
icebp
xor
xor
xor
xor
xor
cmp
mov
(bad)
cwde
xor
jo
je
js
jl
test
(bad)
(bad)
(bad)
sti
leave
cmp
cmp
cmp
cmp
inc
cmp
cld
cmp
or
or
(bad)
(bad)
(bad)
call
ds
dec
ds
jge
mov
nop
ds
ds
mov
ds
ds
(bad)
(bad)
(bad)
dec
or
push
aas
adc
sbb
push
aas
pop
aas
popa
aas
imul
aas
xchg
aas
cwde
aas
popf
aas
mov
mov
sar
imul
int3
xor
xor
xor
push
(bad)
cli
xor
xor
sub
xor
jle
test
xchg
xor
jg
xor
xor
xor
xor
xor
xor
xor
pop
xor
jge
(bad)
(bad)
(bad)
push
xor
xor
xor
xor
xor
xor
xor
xor
xor
push
(bad)
jnp
xchg
xor
xor
xor
xor
xor
or
xor
xor
xor
xor
xor
xor
(bad)
(bad)
dec
xor
xor
xor
xor
xor
out
sbb
dec
xor
push
xor
xor
stc
xor
daa
dec
std
add
xchg
lods
ss
rcl
jg
push
aam
fdiv
fdiv
loopne
pop
cmp
cmp
retf
cmp
or
pop
(bad)
aas
cmp
aas
mov
mov
push
cli
(bad)
jmp
xlat
xor
xor
xor
cmp
cmp
cmp
mov
cmp
ins
cmp
mov
(bad)
ds
jmp
retf
aas
loop
out
fiadd
fwait
cmp
xor
xor
xor
xor
xor
dec
data16
jle
mov
sub
(bad)
call
xor
xor
xor
xor
xor
xor
xor
pop
or
pop
dec
xor
inc
xor
xor
loopne
cmp
xor
jne
aaa
dec
xor
inc
pop
xor
xor
dec
xor
xor
(bad)
inc
pushf
xor
xor
mov
xlat
cmc
xor
xor
xor
xor
xor
imul
lods
dec
xchg
push
jmp
dec
or
cmp
jbe
pop
loopne
pop
adc
imul
daa
lahf
sbb
xor
adc
arpl
xchg
out
add
ficomp
(bad)
cvtpi2ps
xchg
push
mov
nop
mov
ret
pop
rcl
les
and
push
cmc
and
icebp
inc
je
movs
add
test
dec
ins
push
mov
xor
cmp
xor
xchg
mov
loopne
push
mov
mov
add
push
inc
(bad)
dec
or
std
popa
add
ret
test
jmp
mov
inc
rol
mov
rol
je
xchg
push
add
jb
sbb
push
stos
sbb
outs
inc
mov
rcl
or
nop
lahf
sbb
push
fld
add
call
out
sbb
dec
dec
sbb
xchg
adc
bound
pminub
fmul
aas
das
jg
lahf
imul
ins
je
inc
jns
mov
push
pushf
cdq
push
and
sub
xor
sbb
imul
popa
fs
xor
sub
lds
ss
in
fsub
inc
sbb
ret
adc
xor
cdq
int
add
sbb
mov
and
test
push
xchg
sub
aaa
mov
dec
sub
inc
sbb
push
adc
es
inc
pusha
mov
aas
stc
xor
add
adc
jl
inc
fdivr
push
push
sbb
sbb
and
rcl
inc
dec
pop
and
int3
lds
in
fisub
push
or
es
pusha
jmp
mov
and
add
dec
fs
adc
sub
mov
pop
les
sub
xchg
pop
sbb
mov
adc
pusha
pop
xlat
add
jmp
lods
inc
sbb
sub
adc
mov
xchg
pop
push
std
daa
ret
cmp
gs
sbb
push
sbb
sub
jne
push
imul
jno
and
push
jge
rol
mov
pop
les
inc
ficom
push
gs
fwait
jbe
mov
push
mov
push
dec
mov
xor
bound
adc
mov
adc
add
add
xchg
xor
xchg
imul
inc
adc
jo
cmps
outs
push
mov
dec
rol
mov
test
inc
sub
pop
(bad)
xor
dec
mov
sbb
fs
jne
ret
push
adc
sbb
(bad)
fdivr
loopne
and
addr16
push
inc
and
push
push
scas
sbb
fist
fdiv
sbb
sub
popa
loop
mov
and
cmp
inc
aad
jno
push
dec
popa
test
leave
inc
fs
inc
sar
or
mov
add
mov
cdq
inc
push
aam
mov
nop
adc
cmps
dec
ss
mov
cmp
mov
test
inc
dec
add
bound
inc
xchg
mov
jo
fadd
in
repnz
adc
arpl
dec
popf
sbb
pop
loopne
push
sbb
rol
xor
fs
cmp
push
sub
ins
push
mov
jle
in
dec
repz
and
lods
les
loop
add
enter
push
jns
sbb
xchg
xchg
sub
inc
cmp
push
xchg
mov
xlat
xor
push
and
outs
jo
fs
outs
push
pop
mov
shr
mov
adc
pop
scas
int
and
jne
movs
bound
sub
fdivr
and
fmul
sub
sar
iret
sub
leave
rol
or
adc
push
call
dec
jp
iret
lds
and
push
jbe
dec
adc
dec
push
fldenv
add
jle
cmp
pop
(bad)
adc
stc
sbb
pusha
and
inc
pop
push
ret
sbb
jl
fsub
scas
mov
push
mov
mov
pop
les
les
popw
fs
push
fwait
and
push
push
xchg
or
push
shr
push
push
lds
outs
arpl
jno
cmp
sub
imul
xchg
bound
push
rcl
arpl
(bad)
imul
jo
psubusb
adc
inc
(bad)
sbb
adc
loopne
xlat
inc
inc
jo
pop
ins
add
inc
dec
add
lock
cmp
fimul
sbb
cwde
jge
test
jmp
inc
push
sbb
push
arpl
(bad)
leave
and
icebp
and
inc
sub
pop
xchg
test
call
jbe
std
mov
and
(bad)
stos
leave
(bad)
pop
or
mov
inc
push
int
(bad)
imul
xchg
sbb
add
cli
xchg
cld
or
sbb
sub
sbb
arpl
bound
inc
les
and
adc
add
std
cmp
or
push
nop
push
push
cmp
sub
inc
pop
push
mov
adc
mov
loopne
add
inc
or
adc
or
scas
push
add
dec
or
out
push
inc
pop
sbb
push
popf
jge
punpckhwd
inc
push
push
pop
or
movs
mov
pusha
add
push
xor
mov
xchg
add
lahf
pushf
jb
push
sar
push
dec
fisub
pop
adc
lock
push
add
add
mov
lock
mov
(bad)
mov
cs
add
add
mov
add
add
add
add
add
inc
xchg
mov
not
int
jmp
nop
nop
nop
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jb
dec
add
jne
mov
sub
adc
adc
jmp
xor
sub
jb
shl
mov
inc
xor
je
sar
mov
jmp
add
jne
mov
sub
adc
adc
add
jne
mov
sub
adc
adc
jne
inc
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
nop
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmp
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
popa
jmp
test
inc
add
movs
inc
