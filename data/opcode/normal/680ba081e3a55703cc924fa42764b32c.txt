cwde
mov
add
add
add
add
add
add
lods
add
mov
add
add
or
cmp
add
add
sub
add
or
jle
add
add
and
inc
add
add
idiv
(bad)
call
sub
add
es
push
pop
add
push
jae
add
or
jle
add
add
sbb
add
sub
add
add
or
cmp
add
add
add
pop
or
add
push
and
add
sub
add
or
add
sub
add
or
add
add
add
or
sbb
add
and
add
add
add
xor
add
add
add
add
add
jle
add
add
sbb
movs
add
add
sub
add
or
adc
add
add
add
add
add
add
mov
add
add
push
add
or
add
add
or
pop
add
add
add
add
add
pop
add
or
outs
and
add
and
pop
inc
add
add
idiv
(bad)
call
sub
add
add
add
or
es
inc
add
add
idiv
(bad)
inc
sub
add
push
and
sbb
add
(bad)
(bad)
inc
pop
outs
and
add
sub
xor
scas
add
add
add
adc
add
and
add
add
add
or
add
and
add
add
and
add
add
add
add
movs
add
add
add
add
push
sub
es
add
add
(bad)
(bad)
call
sub
add
add
outs
and
add
sub
outs
add
or
add
outs
daa
add
or
add
and
sbb
add
add
idiv
(bad)
jmp
sub
add
or
add
and
add
and
add
and
inc
add
add
idiv
(bad)
call
or
or
outs
add
or
add
outs
sub
add
and
add
or
add
outs
daa
add
or
add
and
inc
add
add
idiv
(bad)
jmp
add
add
or
add
outs
daa
add
or
add
and
add
add
inc
add
add
idiv
(bad)
inc
outs
add
or
add
outs
sub
es
add
add
(bad)
(bad)
inc
mov
outs
add
or
add
outs
daa
add
or
add
and
add
and
sbb
add
add
(bad)
(bad)
inc
pop
outs
and
add
add
add
or
add
outs
sub
es
inc
and
add
pop
inc
add
add
idiv
(bad)
inc
outs
add
or
add
outs
daa
add
or
add
add
add
or
add
and
add
add
inc
add
add
idiv
(bad)
inc
pop
outs
and
add
sub
sub
es
add
add
(bad)
(bad)
inc
pop
outs
and
add
sub
outs
add
or
add
outs
daa
add
or
add
and
sbb
add
(bad)
(bad)
jmp
add
add
or
add
outs
daa
add
or
add
and
add
add
inc
add
add
idiv
(bad)
inc
outs
add
or
add
outs
sub
es
add
add
(bad)
(bad)
inc
mov
outs
add
or
add
outs
daa
add
or
add
and
add
and
adc
inc
add
add
idiv
(bad)
inc
pop
outs
and
add
add
add
or
add
outs
sub
es
inc
lock
add
add
(bad)
(bad)
inc
outs
add
or
add
outs
daa
add
or
add
add
add
or
add
and
mov
add
sbb
add
add
(bad)
(bad)
inc
pop
outs
and
add
sub
sub
add
or
inc
add
add
idiv
(bad)
inc
pop
outs
and
add
sub
pop
outs
and
add
push
pop
popa
sbb
inc
add
add
idiv
(bad)
inc
pop
inc
xor
inc
add
add
idiv
(bad)
inc
outs
add
or
add
pop
sub
add
push
and
add
push
pop
jo
sbb
inc
add
add
idiv
(bad)
inc
pop
push
xor
inc
add
add
idiv
(bad)
inc
outs
add
or
add
sbb
add
push
and
add
add
add
or
add
outs
xor
add
sub
add
or
pop
add
add
add
add
outs
xor
add
sub
add
or
or
add
add
sub
add
add
adc
add
add
xor
add
add
add
add
add
pop
sub
add
push
sub
xor
inc
add
add
add
adc
jnp
add
add
push
or
add
xor
es
add
sbb
jl
add
add
pop
sub
add
sub
xor
sbb
add
add
(bad)
(bad)
call
sub
add
sub
xor
inc
add
add
add
adc
jnp
add
add
push
or
add
aaa
add
or
add
or
jl
add
add
pop
sub
add
sub
xor
sbb
add
add
idiv
(bad)
call
sub
add
sub
xor
inc
add
add
add
adc
jnp
add
add
push
or
add
xor
es
add
sbb
jl
add
add
pop
sub
add
sub
xor
pop
inc
add
add
idiv
(bad)
call
sub
add
sub
xor
inc
add
add
add
adc
jnp
add
add
push
or
add
aaa
add
or
add
or
jl
add
add
pop
sub
add
sub
xor
sbb
add
add
(bad)
(bad)
call
sub
add
sub
xor
inc
add
add
add
adc
jnp
add
add
push
or
add
xor
es
add
sbb
jl
add
add
pop
sub
add
sub
xor
sbb
add
add
(bad)
(bad)
call
sub
add
sub
xor
inc
add
add
add
adc
jnp
add
add
push
or
add
aaa
add
or
add
or
jl
add
add
pop
sub
add
sub
xor
sbb
add
add
(bad)
(bad)
call
sub
add
sub
xor
add
add
add
add
add
add
add
pop
push
adc
cmp
add
and
add
and
add
add
shl
add
add
add
add
or
push
sbb
add
or
pop
outs
cmp
add
push
push
outs
cmp
add
and
pop
add
push
jae
add
or
add
or
add
xor
add
add
adc
jae
add
or
add
sub
add
push
add
sbb
add
add
(bad)
(bad)
call
sub
add
es
outs
inc
add
or
inc
add
add
idiv
(bad)
inc
jnp
add
add
pop
push
adc
cmp
add
and
add
and
add
add
add
and
add
add
add
inc
jae
add
or
pop
sbb
add
or
pop
outs
cmp
add
pop
push
outs
cmp
add
and
sbb
add
add
(bad)
(bad)
inc
inc
sbb
add
jae
add
or
outs
add
or
add
xor
add
add
adc
jnp
add
add
push
sub
sbb
add
(bad)
(bad)
call
sub
add
es
add
add
or
add
add
xor
add
add
add
adc
jnp
add
add
push
sub
sbb
add
add
(bad)
(bad)
call
sub
add
es
add
outs
inc
add
or
add
adc
add
and
add
adc
jnp
add
add
push
sub
sbb
add
add
(bad)
(bad)
call
sub
add
es
add
add
or
add
add
xor
add
add
add
add
adc
jnp
add
add
adc
inc
add
add
idiv
(bad)
call
sub
add
sub
pop
jge
add
add
adc
add
push
and
add
or
add
sub
or
add
xor
dec
add
add
add
adc
or
pop
pop
inc
add
add
add
add
sldt
add
xor
add
add
add
jge
add
add
add
mov
add
jge
add
add
jnp
add
add
inc
or
add
jae
add
or
add
or
add
jge
add
add
add
add
xor
add
add
add
add
add
sub
add
push
sub
add
or
pop
add
add
add
add
sub
add
sub
add
add
add
add
add
pop
jge
add
add
sub
add
add
sub
add
sub
add
or
add
and
add
and
add
and
inc
add
add
idiv
(bad)
call
sub
add
add
add
add
outs
inc
add
or
jle
add
or
push
daa
add
push
jae
add
or
sub
add
add
add
or
push
sub
add
jae
add
or
sub
add
add
add
or
push
sub
add
jae
add
or
sub
add
sub
add
add
or
add
add
add
add
out
add
add
add
push
and
add
sub
add
or
add
sub
add
or
jns
add
and
add
add
push
sbb
dec
add
or
add
or
sbb
add
and
add
test
add
push
and
add
sub
add
or
add
sub
add
or
add
sub
add
push
and
and
add
jae
add
or
add
or
sbb
add
and
add
add
add
push
and
add
sub
add
or
add
sub
add
or
add
sub
add
push
and
and
add
jae
add
or
add
or
sbb
add
and
add
adc
add
sub
add
push
and
add
sub
add
or
add
sub
add
or
add
and
add
and
add
and
add
push
jae
add
or
add
or
sbb
add
and
add
add
add
or
adc
add
add
add
add
add
add
sbb
es
add
add
add
xor
add
add
add
jle
add
add
sub
add
or
add
add
xor
add
add
or
add
add
add
add
push
cmp
add
add
inc
add
add
idiv
(bad)
call
sub
add
es
jnp
add
add
or
add
sbb
add
add
(bad)
(bad)
inc
push
jge
add
add
outs
sbb
add
and
pop
pop
pop
pop
outs
jp
add
and
add
push
and
add
or
add
jge
add
push
and
add
and
sub
add
and
add
and
add
and
add
and
and
add
push
and
add
and
or
adc
push
add
or
add
adc
inc
add
add
idiv
(bad)
inc
or
add
pop
adc
pop
outs
push
add
or
add
push
or
add
sub
add
and
pop
pop
outs
push
add
or
add
sub
push
or
add
pop
or
add
or
pop
pop
outs
push
add
or
add
push
jle
add
or
add
push
push
pop
jge
add
add
add
or
adc
add
add
add
add
add
add
sbb
es
add
add
add
xor
add
add
add
jle
add
add
sub
add
or
add
add
xor
add
add
adc
jne
add
add
push
cmp
inc
add
add
idiv
(bad)
call
sub
add
es
jnp
add
add
xchg
add
add
inc
add
add
idiv
(bad)
inc
push
jge
add
add
or
add
push
add
or
add
and
pop
add
or
cmp
inc
add
add
idiv
(bad)
inc
(bad)
sub
add
and
add
and
add
push
and
add
and
add
outs
sbb
add
push
pop
jge
add
add
push
pop
sub
add
and
add
push
and
add
and
add
outs
sbb
add
push
pop
jge
add
add
add
add
xor
add
add
add
add
add
jle
add
add
sbb
es
add
add
add
xor
add
add
add
jle
add
add
sub
add
or
add
add
xor
add
add
add
add
add
push
sub
sbb
add
add
(bad)
(bad)
call
sub
add
es
jnp
add
add
inc
sbb
add
add
idiv
(bad)
inc
push
jge
add
add
push
outs
sbb
add
and
add
and
push
add
or
add
and
add
outs
sbb
add
push
pop
jge
add
add
add
or
adc
add
add
add
add
add
add
sbb
es
add
add
add
xor
add
add
add
jle
add
add
sub
add
or
add
add
xor
add
jne
add
add
push
cmp
add
sbb
add
(bad)
(bad)
call
sub
add
es
jnp
add
add
push
add
add
inc
add
add
idiv
(bad)
inc
push
jge
add
add
or
add
push
add
or
add
and
add
and
add
and
add
and
add
and
inc
add
add
idiv
(bad)
inc
outs
sbb
add
and
add
and
pop
add
or
add
and
add
and
add
and
add
and
add
and
inc
add
add
idiv
(bad)
call
sub
pop
hlt
pop
or
add
push
add
or
add
and
add
and
add
and
add
and
add
and
inc
add
add
idiv
(bad)
inc
outs
sbb
add
and
add
and
or
pop
push
outs
sbb
add
and
add
and
add
outs
sbb
add
push
pop
jge
add
add
add
adc
add
jp
add
push
add
adc
outs
pop
add
or
add
or
or
sub
add
and
and
add
idiv
(bad)
call
sub
add
es
jne
add
add
sbb
add
(bad)
(bad)
inc
sub
sbb
add
add
(bad)
(bad)
inc
je
add
add
pop
outs
pusha
add
or
inc
add
add
idiv
(bad)
inc
outs
popa
add
or
outs
and
add
sub
add
xor
add
add
add
add
adc
outs
pop
add
or
add
or
sub
sbb
add
add
(bad)
(bad)
call
sub
add
es
outs
xor
add
sub
adc
add
add
add
add
adc
jnp
add
add
adc
inc
add
add
idiv
(bad)
call
sub
add
sub
pop
jge
add
add
add
add
add
push
and
add
or
add
sub
or
add
add
or
or
add
add
add
add
add
bound
add
and
xor
add
add
or
add
add
push
pop
pop
inc
add
add
add
add
sldt
add
add
sub
add
sub
add
add
adc
add
add
add
add
jge
add
add
add
add
add
jge
add
add
add
add
add
jge
add
add
add
jge
add
add
adc
add
add
add
adc
add
add
push
sbb
add
(bad)
(bad)
call
sub
add
sub
add
and
outs
add
or
add
and
add
or
add
and
add
and
add
and
cmp
add
and
add
add
add
or
pop
add
add
add
add
sub
add
sub
adc
add
add
add
adc
or
add
add
xchg
and
sub
add
add
(bad)
(bad)
call
sub
add
es
add
add
xchg
or
pop
pop
dec
add
cmp
add
add
add
xchg
pop
inc
pop
sub
add
add
(bad)
(bad)
(bad)
jle
add
add
xchg
and
(bad)
call
bound
push
jle
add
add
pop
pop
xchg
pusha
or
sbb
or
add
inc
jle
add
add
xchg
and
(bad)
(bad)
call
sbb
push
jle
add
add
pop
pop
xchg
pop
adc
or
jle
add
add
sbb
push
bound
push
jle
add
add
sbb
pusha
or
sbb
or
add
pop
das
adc
idiv
(bad)
(bad)
jle
add
or
sub
add
and
add
push
outs
push
add
and
imul
or
xor
add
add
add
add
add
sub
add
sub
adc
add
dec
add
add
add
adc
movs
and
add
or
sub
sbb
add
(bad)
(bad)
call
sub
add
es
add
or
daa
add
add
add
push
and
add
and
add
or
cmp
add
sub
add
push
and
add
and
xor
add
add
add
add
add
mov
add
add
add
or
pop
add
add
add
add
sub
add
sub
add
or
push
add
add
add
add
sub
add
and
add
sub
add
xor
add
add
add
add
add
mov
add
add
add
or
pop
add
add
add
add
sub
add
sub
adc
add
push
add
add
add
adc
jne
add
sbb
or
add
outs
add
or
inc
add
add
idiv
(bad)
call
sub
add
adc
sub
add
and
sub
pop
sub
pop
inc
add
add
idiv
(bad)
call
mov
add
add
pop
mov
add
add
add
xor
add
add
add
add
add
add
or
add
xor
add
add
add
add
add
(bad)
(bad)
(bad)
jg
sbb
add
add
add
add
sbb
add
sbb
add
push
sbb
add
add
xor
add
add
add
add
add
sub
add
sub
sbb
pop
add
add
adc
add
jle
add
add
adc
or
or
add
add
or
pop
pop
cmp
add
add
inc
add
add
idiv
(bad)
call
sub
add
es
add
or
add
adc
adc
push
outs
je
add
and
add
jne
add
push
lea
add
adc
push
outs
je
add
and
push
adc
pop
sub
adc
adc
xchg
adc
adc
sub
sbb
add
add
idiv
(bad)
call
adc
sub
adc
pop
pop
adc
adc
adc
mov
fcomp
add
(bad)
(bad)
call
push
sub
sbb
add
add
(bad)
(bad)
jmp
arpl
add
and
add
and
add
and
adc
or
add
add
inc
sbb
add
add
(bad)
(bad)
(bad)
jle
add
add
(bad)
(bad)
(bad)
jg
pop
sbb
add
add
(bad)
(bad)
inc
outs
js
add
and
add
or
sub
jle
add
add
jns
add
sbb
add
sbb
add
push
jp
add
or
add
or
or
add
or
or
add
or
outs
jge
add
and
add
adc
adc
outs
jl
add
and
add
adc
add
add
or
sub
add
or
adc
outs
je
add
and
adc
push
adc
adc
push
outs
jg
add
and
sbb
add
or
adc
or
or
or
or
or
or
add
add
or
inc
add
add
idiv
(bad)
inc
adc
push
add
add
or
pop
imul
es
adc
push
add
add
or
pop
imul
adc
jle
add
add
push
push
adc
mov
add
or
add
add
push
push
push
jp
add
jle
add
add
or
pop
cmp
add
add
inc
add
add
idiv
(bad)
(bad)
jle
add
add
inc
sbb
add
(bad)
(bad)
(bad)
jle
add
add
add
add
add
add
idiv
(bad)
inc
outs
js
add
and
jae
add
or
sub
jle
add
add
jns
add
sbb
add
sbb
add
push
jp
add
push
push
jae
add
or
mov
add
add
adc
adc
adc
adc
adc
push
adc
outs
je
add
and
adc
xor
sbb
add
add
(bad)
(bad)
(bad)
jle
add
add
adc
adc
outs
add
or
adc
adc
int3
sbb
add
add
(bad)
(bad)
(bad)
jle
add
add
fiadd
fiadd
pop
sub
sbb
add
add
(bad)
(bad)
inc
outs
add
or
aaa
add
add
or
add
or
and
add
adc
add
adc
adc
mov
je
add
and
adc
or
adc
or
adc
add
inc
xor
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
xor
add
add
add
add
add
sub
add
sub
adc
add
add
add
add
adc
sub
add
and
sub
and
add
sub
add
push
and
add
and
add
or
push
add
add
add
add
add
or
add
xor
add
add
add
add
add
sub
add
sub
adc
or
xor
add
adc
je
add
add
adc
pop
pop
pop
push
outs
jp
add
and
add
push
and
add
or
add
jge
add
push
and
add
and
add
xor
add
add
add
add
add
add
or
add
xor
add
add
add
sub
add
add
dec
add
push
sub
add
add
add
add
add
add
(bad)
add
add
add
push
and
add
sub
add
or
add
sub
add
or
add
and
add
jmp
add
push
and
add
sub
add
or
add
sub
add
or
add
add
add
or
sbb
add
and
add
adc
add
inc
add
add
add
adc
jnp
add
add
push
or
add
xor
es
add
sbb
jl
add
add
pop
sub
add
sub
xor
sbb
add
add
(bad)
(bad)
call
sub
add
sub
xor
inc
add
add
add
adc
jnp
add
add
push
or
add
aaa
add
or
add
or
jl
add
add
pop
sub
add
sub
xor
sbb
add
add
(bad)
(bad)
call
sub
add
sub
xor
add
add
add
add
adc
jnp
add
add
push
sub
sbb
add
add
(bad)
(bad)
call
sub
add
es
jae
add
or
add
or
add
add
xor
add
add
add
add
add
jle
add
add
sbb
movs
and
add
sub
add
or
adc
add
add
add
add
add
add
mov
add
add
push
add
or
add
add
or
adc
add
add
add
add
add
add
sbb
movs
and
add
sub
add
or
adc
add
add
add
add
add
add
mov
add
add
push
add
or
add
adc
add
scas
add
add
add
adc
mov
add
and
add
sbb
add
add
(bad)
(bad)
call
sub
add
add
mov
add
and
mov
add
and
add
sub
add
push
and
add
or
push
outs
mov
add
pop
outs
pop
add
and
sub
add
and
inc
add
add
idiv
(bad)
call
add
outs
add
or
sub
sbb
add
add
(bad)
(bad)
inc
add
inc
add
push
and
sub
add
add
inc
add
push
sub
add
inc
add
push
and
sub
add
add
inc
add
push
sub
adc
add
add
add
add
adc
jnp
add
add
adc
inc
add
add
idiv
(bad)
call
sub
add
sub
pop
jge
add
add
jno
add
sub
add
push
and
add
or
add
sub
or
add
adc
add
dec
add
add
add
adc
or
pop
pop
inc
add
add
add
add
add
add
xor
add
or
and
add
jnp
add
add
inc
dec
add
push
jae
add
or
add
or
add
sbb
add
jge
add
add
add
jge
add
add
add
add
xor
add
add
add
add
add
sub
add
sub
add
or
or
add
add
add
add
add
or
add
xor
add
add
add
add
add
outs
push
add
or
add
xor
add
add
add
sub
sub
add
sub
add
add
or
pop
add
add
add
add
jnp
add
add
add
xor
add
add
add
add
adc
jnp
add
add
adc
inc
add
add
idiv
(bad)
call
sub
add
sub
pop
jge
add
add
inc
add
sub
add
push
and
add
or
add
sub
or
add
adc
add
add
add
add
adc
or
pop
xor
sbb
add
add
(bad)
(bad)
call
sub
add
add
pop
add
add
add
add
add
jge
add
add
add
add
or
pop
add
add
add
add
sub
add
xor
add
add
add
add
adc
add
push
or
sbb
add
or
or
add
add
or
add
xor
add
add
add
push
add
add
add
push
and
add
xor
add
add
add
add
add
jbe
add
sub
add
push
and
add
jp
add
xor
add
add
add
mov
add
push
and
add
xor
add
add
add
add
add
rol
add
sub
add
push
and
add
jp
add
xor
add
add
add
add
add
push
and
add
xor
add
add
add
add
adc
add
push
or
outs
cwde
add
push
push
outs
xchg
add
or
add
xor
add
add
add
add
add
pop
add
push
and
inc
add
add
idiv
(bad)
call
sub
add
sub
outs
cwde
add
or
sub
add
add
add
(bad)
(bad)
call
push
popa
add
push
jae
add
or
jle
add
add
call
sub
add
add
or
add
add
add
add
sub
add
adc
add
add
add
add
adc
add
push
or
jle
add
or
add
or
and
add
add
add
push
and
add
pop
(bad)
sub
outs
sahf
add
or
or
sub
add
xor
add
add
add
add
add
jnp
add
add
add
xor
add
add
add
add
add
add
add
add
add
or
sbb
add
add
add
sub
outs
lahf
add
or
add
outs
mov
add
add
xor
add
add
add
add
add
sub
add
xor
add
add
add
inc
add
add
add
push
and
add
xor
add
add
add
add
add
add
or
add
xor
add
add
add
push
add
add
add
push
and
add
xor
add
add
add
add
add
add
or
add
xor
add
add
add
add
add
push
push
push
jae
add
push
sub
add
sub
xor
add
add
add
add
add
jnp
add
add
add
xor
add
add
add
add
add
add
add
add
add
or
pop
add
add
add
add
jnp
add
add
add
xor
add
add
add
add
add
add
add
add
add
or
pop
add
add
add
add
jnp
add
add
add
xor
add
add
add
add
add
add
add
add
add
or
pop
add
add
add
add
jnp
add
add
add
xor
add
add
add
add
add
add
add
add
add
or
pop
add
add
add
add
jnp
add
add
add
xor
add
add
add
add
add
jnp
add
add
cs
inc
add
add
idiv
(bad)
call
sub
add
add
jge
add
add
and
add
add
push
and
add
sub
add
xor
add
add
add
add
add
jnp
add
add
add
xor
add
add
add
add
add
jnp
add
add
cs
inc
add
add
idiv
(bad)
call
sub
add
add
jge
add
add
and
add
sub
add
push
and
add
sub
add
xor
add
add
add
add
add
add
mov
es
sub
inc
add
add
idiv
(bad)
call
sub
add
verw
mov
es
add
add
(bad)
(bad)
call
sub
sub
xor
inc
add
add
add
add
add
add
push
or
add
xor
es
add
add
jl
add
add
pop
sub
add
and
xor
sbb
add
add
(bad)
(bad)
call
sub
add
sub
xor
inc
add
add
add
add
add
add
push
or
add
aaa
add
or
add
or
jl
add
add
pop
sub
add
and
xor
sbb
add
add
(bad)
(bad)
call
sub
add
sub
xor
add
add
add
add
add
jnp
add
add
and
add
idiv
(bad)
call
sub
add
add
add
add
add
add
or
add
or
add
add
or
pop
add
add
add
add
sub
add
sub
add
or
adc
add
add
sub
add
add
sub
add
add
jge
add
sub
add
add
or
pop
add
add
add
add
jnp
add
add
add
xor
add
add
add
add
add
add
add
add
add
or
pop
add
add
add
add
jnp
add
add
add
xor
add
add
add
add
add
add
add
add
adc
add
push
add
add
jne
add
add
push
adc
add
push
and
inc
add
add
idiv
(bad)
call
sub
add
es
outs
jp
add
and
add
push
and
inc
add
add
idiv
(bad)
inc
outs
jl
add
and
add
push
and
push
sub
add
xor
add
add
add
add
add
movs
add
or
inc
add
add
idiv
(bad)
call
sub
add
add
movs
add
or
inc
add
add
idiv
(bad)
inc
adc
movs
add
or
inc
add
add
idiv
(bad)
inc
add
add
or
pop
sub
add
xor
add
add
add
add
jg
add
and
sub
add
add
or
pop
add
add
add
add
sub
add
xor
add
add
add
add
add
add
push
and
add
xor
add
add
add
add
add
sub
add
xor
add
add
add
dec
or
add
add
push
and
add
xor
add
add
add
movs
or
add
add
push
and
add
xor
add
add
add
add
add
arpl
add
and
add
and
add
and
add
or
push
add
add
add
add
arpl
add
and
add
and
add
and
add
or
push
add
add
add
add
add
or
add
xor
add
add
add
add
add
sub
add
xor
add
add
add
sbb
stos
add
or
add
sub
add
push
and
add
and
add
xor
add
add
add
aaa
or
add
add
push
and
add
xor
add
add
add
add
add
and
add
sub
add
push
and
add
and
add
xor
add
add
add
add
add
add
push
sub
add
xor
add
add
add
add
add
push
add
add
add
push
and
add
jae
add
push
jae
add
or
scas
add
or
and
add
sub
add
push
and
add
add
adc
add
sub
add
push
and
add
jae
add
or
mov
add
sub
xor
add
add
add
add
sub
es
add
add
add
push
and
or
or
add
add
xchg
or
add
add
push
and
add
xor
add
add
add
add
add
mov
add
jle
add
add
mov
add
and
add
and
inc
add
add
idiv
(bad)
call
sub
add
es
add
add
mov
add
and
add
and
fiadd
sub
adc
add
add
add
inc
add
pop
add
add
xor
add
add
add
add
add
sbb
stos
add
or
add
sub
add
push
and
add
and
add
add
add
or
pop
add
add
add
add
jnp
add
add
add
xor
add
add
add
add
add
add
add
add
add
or
pop
add
add
add
add
jnp
add
add
add
xor
add
add
add
add
add
add
add
add
add
or
inc
add
add
add
add
sub
add
and
add
add
xchg
add
push
and
inc
add
add
idiv
(bad)
call
sub
add
add
sub
outs
mov
add
and
add
and
add
sub
adc
add
push
add
add
add
adc
jnp
add
add
adc
inc
add
add
idiv
(bad)
call
sub
add
sub
pop
jge
add
add
and
add
sub
add
push
and
add
or
mov
mov
add
sub
add
push
and
add
or
add
sub
or
add
adc
add
push
add
add
add
adc
add
push
or
outs
cwde
add
push
push
outs
xchg
add
or
add
xor
add
add
add
add
add
sub
add
add
mov
jae
add
or
pushf
add
push
sub
xor
add
add
add
add
add
jnp
add
add
add
xor
mov
add
adc
add
add
add
xchg
add
add
inc
add
add
idiv
(bad)
call
sub
add
add
add
add
xchg
add
add
inc
add
add
idiv
(bad)
inc
jnp
add
add
inc
lahf
add
push
jae
add
or
add
or
or
push
add
add
add
mov
es
outs
mov
es
add
add
pop
sub
pop
inc
add
add
idiv
(bad)
inc
add
push
sahf
add
push
jae
add
or
add
push
pop
add
push
mov
rol
or
add
push
push
pop
pop
or
add
add
add
mov
outs
rol
or
inc
add
add
idiv
(bad)
inc
jnp
add
add
mov
outs
ret
or
add
add
add
jnp
add
add
mov
inc
add
add
idiv
(bad)
inc
add
add
add
popf
add
push
add
add
add
ret
add
or
push
adc
les
add
and
add
push
or
add
or
add
push
mov
rol
or
add
push
or
inc
sahf
add
push
jae
add
or
add
push
add
add
add
mov
or
add
or
outs
mov
sub
add
add
(bad)
(bad)
(bad)
ficom
adc
adc
idiv
(bad)
call
add
enter
fadd
jnp
add
add
inc
lahf
add
push
jae
add
or
add
or
add
add
adc
add
add
add
add
add
add
adc
add
ja
add
pop
add
adc
or
adc
push
outs
retf
or
add
push
push
pop
pop
or
add
add
or
inc
add
add
idiv
(bad)
call
sub
add
es
or
and
add
add
outs
retf
or
add
and
add
sbb
add
add
(bad)
(bad)
inc
pop
pop
or
fadd
add
add
outs
retf
or
add
and
add
sbb
add
add
(bad)
(bad)
inc
pop
outs
retf
or
add
and
retf
or
add
and
add
and
add
sbb
add
add
(bad)
(bad)
inc
pop
outs
retf
or
add
and
sbb
add
add
(bad)
(bad)
inc
or
add
or
add
and
sbb
add
add
idiv
(bad)
inc
pop
outs
retf
or
add
and
sbb
add
add
(bad)
(bad)
inc
or
add
or
add
and
sbb
add
(bad)
(bad)
inc
or
add
or
add
push
or
pop
or
add
add
or
(bad)
call
idiv
(bad)
inc
pop
pop
or
add
add
or
sar
(bad)
call
add
(bad)
(bad)
jmp
add
xor
add
add
add
add
add
add
add
add
popf
add
push
jle
add
add
sub
rol
add
sbb
sbb
add
and
add
sub
sbb
add
add
add
adc
int
add
and
or
add
add
add
add
popf
add
add
into
add
or
add
or
add
or
add
push
or
push
outs
lds
add
pop
and
add
add
add
add
add
or
add
push
mov
rol
or
add
push
pop
add
push
sahf
add
push
jae
add
or
add
push
add
add
add
mov
es
outs
mov
or
add
or
add
add
add
dec
inc
and
add
add
shl
rol
add
and
add
jae
add
or
add
sub
add
push
and
add
add
add
or
(bad)
add
or
outs
xlat
add
or
add
or
or
add
or
add
add
sub
rol
add
sbb
sbb
add
and
add
cmp
outs
fiadd
add
and
add
or
add
adc
jnp
add
add
mov
outs
fild
add
and
inc
add
add
or
add
or
adc
jae
add
push
adc
adc
add
add
add
or
add
add
add
add
or
add
add
adc
add
sbb
add
add
(bad)
(bad)
call
sub
add
adc
jnp
add
add
fld
add
and
call
inc
add
add
idiv
(bad)
call
or
add
add
inc
mov
rol
or
add
push
adc
jnp
add
add
inc
sahf
add
push
jae
add
or
add
push
jae
add
or
push
and
add
add
add
add
add
add
add
jb
sub
add
or
add
jae
add
or
pop
adc
and
or
add
add
push
and
add
add
add
or
(bad)
add
or
push
outs
xlat
add
or
fadd
add
adc
adc
sub
add
add
(bad)
(bad)
call
or
push
call
cmp
or
or
add
or
or
add
add
push
outs
fld
add
jle
add
add
sub
rol
add
sbb
sbb
add
and
add
sub
adc
outs
mov
cmp
inc
add
add
idiv
(bad)
(bad)
ficomp
adc
jne
add
add
or
or
adc
inc
add
add
idiv
(bad)
call
or
enter
fadd
add
add
add
popf
add
push
sub
add
add
add
add
add
add
pushf
add
add
add
add
add
add
xor
add
add
add
add
add
sub
add
add
or
add
xor
add
add
add
add
adc
jnp
add
add
adc
inc
add
add
idiv
(bad)
call
sub
add
sub
pop
jge
add
add
cmp
add
push
and
add
or
add
sub
or
add
adc
add
add
add
add
adc
or
pop
xor
sbb
add
add
(bad)
(bad)
call
sub
add
add
pushf
add
add
add
add
add
jge
add
add
add
adc
or
scas
add
add
add
adc
sub
add
add
lods
add
push
push
or
mov
add
push
or
push
pop
push
pop
sbb
sub
add
jae
add
or
jge
add
push
and
add
and
add
or
pop
sbb
jns
add
outs
lds
add
or
inc
stos
add
push
jae
add
or
add
or
jnp
add
add
mov
or
add
or
pop
or
pop
or
xchg
pop
inc
add
add
idiv
(bad)
call
sub
add
es
pop
pop
or
pop
sbb
jo
(bad)
call
add
(bad)
(bad)
jmp
add
add
or
inc
add
add
add
add
out
add
add
add
push
and
add
sub
add
or
add
sub
add
or
jns
add
and
add
add
add
or
sbb
add
and
add
add
adc
add
inc
add
add
add
adc
jnp
add
add
push
or
add
xor
es
add
sbb
jl
add
add
pop
sub
add
sub
xor
pop
inc
add
add
idiv
(bad)
call
sub
add
sub
xor
inc
add
add
add
adc
jnp
add
add
push
or
add
aaa
add
or
add
or
jl
add
add
pop
sub
add
sub
xor
sbb
add
add
(bad)
(bad)
call
sub
add
sub
xor
add
add
add
add
adc
jnp
add
add
push
sub
sbb
add
add
(bad)
(bad)
call
sub
add
es
jae
add
or
add
or
add
add
xor
add
add
add
add
add
jle
add
add
sbb
es
add
add
add
xor
add
add
add
jle
add
add
sub
add
or
add
add
xor
add
add
add
add
add
add
add
outs
fld
add
and
add
sub
jnp
add
add
jae
add
or
add
or
sub
add
add
push
add
add
add
push
add
or
add
sub
add
add
(bad)
(bad)
call
sub
add
add
add
add
mov
es
add
or
add
outs
out
add
and
inc
add
add
idiv
(bad)
inc
jnp
add
add
jae
add
or
add
or
add
out
add
sub
xor
add
add
add
add
adc
jnp
add
add
adc
inc
add
add
idiv
(bad)
call
sub
add
sub
pop
jge
add
add
mov
add
push
and
add
or
add
sub
or
add
adc
add
pop
add
add
add
adc
or
pop
pop
inc
add
add
add
add
sldt
add
add
sub
add
sub
add
sbb
add
jge
add
add
add
mov
add
jge
add
add
add
cwde
add
add
add
add
add
pushf
add
add
add
add
add
jge
add
add
add
or
or
add
add
sub
add
add
scas
add
push
sub
add
adc
add
add
add
add
adc
jnp
add
add
adc
inc
add
add
idiv
(bad)
call
sub
add
sub
pop
jge
add
add
pop
or
add
add
push
and
add
or
add
sub
or
add
add
or
or
add
add
add
add
jge
add
add
add
add
sahf
add
add
add
add
sub
add
add
mov
jnp
add
add
call
es
or
add
add
push
and
add
and
inc
add
add
call
es
or
add
add
push
and
add
and
inc
add
add
call
es
or
add
add
push
and
add
and
inc
add
add
inc
mov
mov
inc
add
push
add
add
add
inc
mov
mov
movs
add
push
sub
add
xor
inc
add
add
add
adc
jnp
add
add
push
or
add
xor
es
add
sbb
jl
add
add
pop
sub
or
pop
xor
sbb
add
add
(bad)
(bad)
call
sub
add
sub
xor
inc
add
add
add
adc
jnp
add
add
push
or
add
aaa
add
or
add
or
jl
add
add
pop
sub
or
pop
xor
sbb
add
add
(bad)
(bad)
call
sub
add
sub
xor
inc
add
add
add
adc
jnp
add
add
push
or
add
xor
es
add
sbb
jl
add
add
pop
sub
add
sub
xor
sbb
add
add
(bad)
(bad)
call
sub
add
sub
xor
inc
add
add
add
adc
jnp
add
add
push
or
add
aaa
add
or
add
or
jl
add
add
pop
sub
add
sub
xor
sbb
add
add
(bad)
(bad)
call
sub
add
sub
xor
add
add
add
add
adc
jnp
add
add
push
sub
sbb
add
add
(bad)
(bad)
call
sub
add
es
jae
add
or
add
or
add
add
xor
xor
add
and
add
add
add
add
push
sub
sbb
add
add
(bad)
(bad)
call
sub
add
es
add
fld
add
and
add
outs
jmp
add
xor
add
add
add
add
add
sub
add
xor
add
add
add
add
add
sub
add
xor
add
add
add
add
add
sub
add
xor
add
add
add
add
add
sub
add
xor
add
add
add
add
add
sub
add
xor
add
add
add
add
adc
jnp
add
add
adc
inc
add
add
idiv
(bad)
call
sub
add
sub
pop
jge
add
add
outs
or
add
add
push
and
add
or
add
sub
or
add
add
or
or
add
add
add
add
add
bound
add
and
xor
mov
add
adc
or
pop
pop
inc
add
add
add
add
add
add
add
add
add
add
jp
add
or
inc
add
add
add
mov
add
jge
add
add
jnp
add
add
inc
mov
jmp
add
outs
in
add
or
add
sbb
add
jge
add
add
add
fwait
add
add
add
add
jnp
add
add
inc
mov
dec
add
or
add
or
add
popf
add
add
inc
mov
dec
add
or
add
or
add
jge
add
add
add
add
or
or
add
add
sub
add
or
sub
add
push
sub
add
adc
add
add
add
add
adc
jnp
add
add
adc
inc
add
add
idiv
(bad)
call
sub
add
sub
pop
jge
add
add
adc
add
push
and
add
or
add
sub
or
add
add
or
or
add
add
add
add
jge
add
add
sbb
push
add
add
adc
sub
sub
add
push
add
inc
les
add
jae
add
or
out
add
or
out
add
or
xor
inc
add
add
idiv
(bad)
call
sub
add
and
add
push
and
add
or
add
sub
add
or
add
add
repnz
or
sub
add
or
add
add
dec
inc
pop
sub
add
or
add
add
cmc
add
or
inc
add
add
idiv
(bad)
(bad)
jle
add
add
push
add
sbb
sbb
add
and
add
and
add
or
sub
sbb
add
add
(bad)
(bad)
inc
jnp
add
add
outs
pushf
add
push
add
add
or
add
add
clc
add
or
add
add
add
add
stc
add
or
outs
pusha
add
push
adc
add
add
(bad)
(bad)
jmp
retf
push
add
sub
add
push
and
add
and
push
add
sub
add
push
and
add
sub
add
push
and
sub
add
or
add
or
add
add
lds
add
add
inc
retf
add
push
jae
add
or
and
add
add
add
or
add
add
inc
add
jae
add
or
and
add
push
and
add
and
inc
add
add
idiv
(bad)
inc
sub
add
or
pop
sub
add
push
fiadd
fiadd
sub
add
add
add
add
imul
movs
add
pop
add
add
xor
add
add
add
add
add
add
push
sub
add
add
jno
add
add
add
add
add
or
add
add
jnp
add
add
push
add
add
add
push
and
add
add
add
add
add
outs
mov
add
and
add
and
add
add
add
add
inc
aad
add
jae
add
or
add
or
jnp
add
add
inc
(bad)
add
push
jae
add
or
add
or
add
add
xor
add
add
add
add
add
jnp
add
add
pop
sbb
add
add
(bad)
(bad)
call
sub
add
add
add
add
outs
or
add
sub
xor
add
add
add
add
add
jnp
add
add
or
add
add
sub
sbb
add
add
or
add
add
jnp
add
add
fwait
add
push
and
add
sub
add
or
add
add
add
add
dec
sbb
add
add
(bad)
(bad)
call
sub
add
es
outs
or
pop
sub
add
push
add
cwde
add
or
sub
add
add
(bad)
(bad)
inc
inc
fld
add
jae
add
or
push
outs
call
fiadd
fiadd
sub
add
add
add
add
add
jnp
add
dec
add
add
xor
add
add
add
pop
jge
add
add
push
sub
add
push
add
cwde
add
or
push
sgdtd
or
add
or
add
or
fiadd
sub
add
add
add
add
add
sub
add
add
xor
add
add
add
add
add
sub
push
sub
add
push
sub
add
xor
add
add
adc
adc
add
and
sub
add
or
sub
add
or
push
add
add
fwait
add
push
and
add
and
xchg
add
adc
or
outs
push
outs
jp
add
and
add
sbb
add
add
(bad)
(bad)
call
sub
add
or
outs
push
outs
jl
add
and
add
sbb
add
(bad)
(bad)
dec
outs
ins
add
push
and
add
sbb
add
add
(bad)
(bad)
dec
outs
jo
add
and
add
sbb
add
add
idiv
(bad)
dec
outs
jb
add
and
add
sbb
add
add
(bad)
(bad)
dec
outs
outs
add
push
and
inc
add
add
idiv
(bad)
dec
outs
outs
add
push
and
sbb
add
add
(bad)
(bad)
inc
sub
push
and
inc
add
add
idiv
(bad)
dec
outs
outs
add
push
and
add
add
inc
add
add
idiv
(bad)
inc
sub
push
and
add
sbb
add
(bad)
(bad)
push
add
push
adc
add
jge
add
add
pop
outs
ins
add
push
adc
jge
add
add
xchg
add
or
add
and
add
push
jmp
add
outs
adc
add
and
pop
or
add
push
and
add
and
inc
add
add
idiv
(bad)
dec
or
add
push
and
add
and
inc
add
add
idiv
(bad)
dec
push
outs
ins
add
push
adc
or
(bad)
call
inc
add
add
idiv
(bad)
(bad)
ficom
adc
add
add
idiv
(bad)
call
add
or
sub
add
add
add
add
xor
add
movs
add
add
add
add
add
add
add
add
xor
add
add
adc
add
push
or
add
add
add
add
add
add
jnp
add
add
xor
pop
inc
add
add
idiv
(bad)
call
sub
add
add
add
add
adc
add
and
inc
add
add
idiv
(bad)
inc
jnp
add
add
outs
adc
add
add
add
push
add
or
add
push
jge
add
add
jnp
add
add
jnp
add
add
adc
inc
add
add
idiv
(bad)
inc
pop
jge
add
add
xchg
add
or
add
and
inc
in
add
push
jae
add
or
add
or
add
or
or
add
add
add
sub
add
or
add
add
or
sbb
add
add
add
add
add
add
fwait
add
push
and
add
outs
sbb
add
sub
xor
add
add
add
jnp
add
add
fwait
add
push
and
add
outs
sbb
add
fiadd
fiadd
sub
add
add
add
add
add
sbb
add
dec
add
add
xor
add
add
add
add
add
jnp
add
add
sbb
inc
add
add
idiv
(bad)
call
sub
add
add
jge
add
add
add
xor
add
add
add
add
add
or
add
and
add
add
add
or
add
and
add
xor
add
add
add
add
adc
jnp
add
add
adc
inc
add
add
idiv
(bad)
call
sub
add
sub
pop
jge
add
add
enter
sub
add
push
and
add
or
add
sub
or
add
add
or
or
add
add
add
add
add
bound
add
and
xor
and
add
or
add
add
push
pop
pop
inc
pop
add
add
add
add
add
jnp
add
mov
add
lods
add
add
add
add
out
add
add
pop
add
add
inc
mov
add
or
add
or
pop
add
add
inc
enter
jae
add
or
add
or
pop
add
add
inc
rol
add
jae
add
or
add
or
add
xchg
add
add
inc
retf
push
jae
add
or
add
or
add
xchg
add
add
inc
leave
add
push
jae
add
or
add
or
add
sbb
add
jge
add
add
add
popf
add
add
add
add
jnp
add
add
inc
iret
add
push
jae
add
or
add
or
add
popf
add
add
add
add
jnp
add
add
inc
rol
add
jae
add
or
add
or
add
popf
add
add
add
add
jnp
add
add
inc
int
add
jae
add
or
add
or
add
jge
add
add
add
adc
add
inc
add
add
add
adc
and
add
and
and
inc
xor
add
sbb
add
add
(bad)
(bad)
call
sub
add
add
sbb
add
push
and
add
and
add
or
add
or
and
add
sub
add
push
and
add
and
inc
add
add
idiv
(bad)
inc
and
add
add
push
and
add
pop
jle
add
add
sbb
add
(bad)
(bad)
call
push
xlat
add
push
jae
add
or
jle
add
add
push
add
or
aas
pop
and
add
sub
add
push
and
add
pop
jle
add
add
sbb
idiv
(bad)
call
push
fadd
add
jae
add
or
jle
add
add
push
add
or
outs
call
outs
and
sbb
sbb
inc
add
add
idiv
(bad)
inc
outs
call
es
pop
outs
add
or
sbb
add
and
add
or
outs
call
es
pop
outs
add
or
push
outs
sub
add
add
sub
add
and
outs
sub
add
sub
add
xor
add
add
add
add
add
and
add
and
adc
xor
sbb
add
add
(bad)
(bad)
call
sub
add
add
mov
push
sub
add
push
sub
xor
add
add
add
add
add
push
add
add
add
push
and
add
sub
add
xor
add
add
add
add
add
push
add
add
add
push
and
add
and
add
and
add
sub
xor
add
add
add
add
add
add
add
fiadd
fiadd
sub
adc
add
add
add
or
add
add
xor
add
add
add
add
add
sub
add
sub
adc
add
dec
add
add
add
adc
add
add
sbb
add
add
(bad)
(bad)
call
sub
add
es
sldt
sub
add
push
and
add
sub
add
or
add
and
add
or
sbb
add
pop
add
add
add
xor
add
add
add
add
add
add
add
add
add
or
pop
add
add
add
add
sbb
add
add
xor
add
add
add
add
add
sub
add
or
add
xor
add
add
add
add
add
add
push
sub
add
or
add
sbb
add
add
xor
add
add
add
add
add
add
add
add
add
or
pop
add
add
add
add
sub
add
or
add
xor
add
add
add
add
add
and
add
adc
add
xor
add
and
add
xor
add
add
add
add
add
add
adc
add
or
add
or
push
add
add
add
add
add
push
adc
push
add
xor
add
sub
add
xor
add
add
add
add
adc
xor
and
adc
add
add
push
and
add
adc
sbb
or
push
add
push
adc
add
or
add
sub
add
add
or
or
add
add
add
add
or
add
add
xor
add
add
add
add
add
sub
add
sub
add
or
push
add
add
add
add
jnp
add
add
cmp
add
mov
add
add
add
cmp
add
sub
add
xor
add
add
add
add
add
sub
add
sub
add
add
add
add
add
add
jnp
add
add
jnp
add
add
push
add
and
add
sbb
sub
add
push
and
add
and
add
and
inc
add
add
idiv
(bad)
call
sub
add
add
add
add
mov
add
and
cmp
add
sub
add
xor
add
add
add
add
add
sub
add
sub
add
add
mov
add
add
add
sub
jnp
add
add
and
inc
add
add
idiv
(bad)
call
sub
add
add
add
pop
jge
add
add
push
add
add
pop
jge
add
add
jnp
add
add
dec
add
add
jnp
add
add
cmp
add
pop
adc
cmp
add
add
add
add
and
inc
add
add
idiv
(bad)
inc
jnp
add
add
jnp
add
add
mov
add
(bad)
(bad)
inc
jnp
add
add
and
add
idiv
(bad)
inc
jnp
add
add
jnp
add
add
pop
(bad)
(bad)
call
idiv
(bad)
jmp
das
loopne
add
retf
add
add
xchg
add
add
jae
gs
cs
gs
jne
arpl
cs
gs
jne
arpl
gs
fs
and
arpl
ins
imul
jae
outs
outs
cmp
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
aaa
popa
xor
cmp
xor
xor
cmp
push
jns
je
ins
cs
gs
jne
arpl
cs
jne
je
ins
gs
gs
jne
arpl
gs
add
add
add
add
add
push
inc
inc
push
inc
inc
push
shl
mov
cwde
loope
addr16
jbe
mov
es
mov
popa
addr16
push
int3
clc
push
cwde
aad
in
fld
push
icebp
lods
jl
jecxz
xchg
push
aaa
hlt
frstor
mov
pop
sub
mov
retf
xchg
jae
pop
clc
pop
aaa
sub
jmp
inc
out
or
cld
into
push
mov
les
fbld
pop
sbb
add
add
add
test
add
push
add
add
add
mov
add
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
rol
add
movs
add
add
add
add
add
sub
add
lea
add
add
add
mov
add
adc
jo
jo
add
popa
add
ins
add
add
add
add
outs
add
add
ins
add
das
add
add
add
ja
jb
jne
ins
add
bound
jne
je
je
outs
add
add
popa
add
ins
add
add
arpl
outs
add
je
jb
outs
add
add
add
outs
add
add
jns
je
ja
add
je
add
popa
add
ins
add
pop
add
sub
add
outs
add
add
ins
add
das
add
jne
ins
add
jbe
imul
add
popa
add
ins
add
add
xor
add
outs
add
add
ins
add
das
add
jne
ins
add
jbe
imul
imul
ins
add
add
popa
add
ins
add
arpl
outs
add
je
jb
outs
add
add
add
add
add
imul
add
add
popa
add
ins
add
arpl
outs
add
je
jb
outs
add
add
add
add
add
add
add
je
outs
add
add
popa
add
ins
add
and
add
outs
add
add
ins
add
das
add
add
add
add
add
jb
add
popa
add
ins
add
add
arpl
outs
add
je
jb
outs
add
add
add
arpl
push
add
bound
outs
add
add
popa
add
ins
add
sub
add
popa
add
add
das
add
add
add
ins
add
arpl
imul
add
outs
add
pop
add
sub
ins
add
add
jae
das
add
add
add
outs
add
add
add
outs
add
xor
add
sub
ins
add
add
jae
das
add
add
add
outs
add
ins
add
ins
add
add
outs
add
add
imul
add
jae
das
add
ins
add
arpl
imul
add
add
popa
add
ins
add
add
add
outs
add
pop
inc
add
and
ins
add
add
jae
das
add
ins
add
arpl
imul
add
outs
add
fmul
add
imul
add
jae
das
add
outs
add
data16
add
add
add
outs
add
popa
push
add
sub
add
popa
add
add
das
add
outs
add
data16
add
ins
add
ins
add
add
outs
add
pop
pop
add
sub
add
popa
add
add
das
add
add
popa
add
add
add
outs
add
add
outs
add
movs
pop
add
sub
add
popa
add
add
das
add
outs
add
je
add
sub
add
imul
add
outs
add
jne
add
sub
add
popa
add
add
das
add
add
add
jb
sub
add
imul
add
outs
add
adc
imul
add
jae
das
add
arpl
outs
add
pop
add
add
add
outs
add
inc
jge
add
imul
add
jae
das
add
data16
sub
add
add
add
outs
add
in
fadd
add
imul
add
jae
das
add
data16
sub
add
ins
add
ins
add
add
outs
add
mov
add
imul
add
jae
das
add
outs
add
add
add
add
outs
add
pop
out
add
imul
add
jae
das
add
outs
add
add
ins
add
ins
add
add
outs
add
push
in
add
sub
add
popa
add
add
das
add
imul
je
sub
add
outs
add
add
outs
add
(bad)
icebp
add
push
ins
add
imul
imul
outs
add
add
popa
add
ins
add
repnz
and
outs
add
add
jns
ja
imul
outs
add
add
popa
add
ins
add
inc
add
add
jne
outs
add
add
arpl
outs
add
add
arpl
outs
add
add
add
inc
add
add
add
dec
add
inc
add
dec
add
add
add
pusha
add
add
add
(bad)
(bad)
(bad)
inc
sbb
add
orps
jne
gs
outs
outs
arpl
jb
gs
add
push
outs
ins
jne
gs
outs
outs
arpl
jb
gs
jo
add
add
sbb
add
dec
push
imul
popa
jae
sub
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
xor
bound
cmp
ss
xor
pop
push
jb
jae
outs
je
je
outs
outs
inc
jb
ins
gs
jb
sub
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
xor
bound
cmp
ss
xor
push
push
jb
jae
outs
je
je
outs
outs
inc
outs
jb
sub
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
xor
bound
cmp
ss
xor
push
das
das
jae
push
cs
imul
je
arpl
das
ja
outs
data16
xor
xor
das
js
ins
ins
das
jo
gs
outs
je
je
outs
outs
add
add
add
add
adc
add
push
das
das
jae
push
cs
imul
je
arpl
das
ja
outs
data16
xor
xor
das
js
ins
ins
add
add
add
add
pop
adc
add
inc
or
push
ja
dec
outs
fs
add
adc
dec
popa
imul
ja
ins
outs
jae
cmp
add
inc
or
jae
jne
arpl
or
add
hlt
std
add
dec
gs
gs
imul
jb
gs
or
add
push
outs
jne
arpl
hlt
std
add
add
add
std
add
add
add
gs
outs
je
je
outs
outs
inc
jb
ins
gs
jb
cs
gs
sub
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
xor
bound
cmp
ss
xor
outs
arpl
jae
jb
jb
push
je
jb
cmp
cmp
ins
jo
outs
outs
je
je
gs
gs
popa
gs
outs
outs
jb
popa
ins
arpl
outs
jb
js
ins
ins
aas
std
add
hlt
std
add
add
cmp
arpl
das
das
popa
jo
ins
imul
cmp
sub
inc
outs
ins
ins
outs
outs
cmp
ins
jo
outs
outs
je
push
je
ins
gs
dec
popa
imul
aas
std
add
and
add
add
and
add
add
push
add
inc
add
dec
add
add
add
pusha
add
add
add
(bad)
(bad)
(bad)
inc
sbb
add
cmp
outs
outs
sub
push
gs
imul
cs
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
outs
jne
ins
sbb
arpl
outs
popa
ins
gs
popa
arpl
inc
outs
ins
ins
outs
outs
cs
outs
outs
je
outs
ins
jae
popa
jae
gs
bound
inc
outs
ins
ins
outs
outs
cmovae
ins
outs
outs
cs
outs
outs
je
outs
ins
jae
add
add
orps
jne
gs
outs
outs
arpl
jb
gs
add
push
outs
ins
jne
gs
outs
outs
arpl
jb
gs
outs
outs
je
outs
ins
jae
inc
fs
gs
jne
add
add
sbb
add
dec
push
imul
popa
jae
sub
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
xor
bound
cmp
ss
xor
pop
push
jb
jae
outs
je
je
outs
outs
inc
jb
ins
gs
jb
sub
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
xor
bound
cmp
ss
xor
push
push
jb
jae
outs
je
je
outs
outs
inc
outs
jb
sub
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
xor
bound
cmp
ss
xor
push
das
das
jae
push
cs
imul
je
arpl
das
ja
outs
data16
xor
xor
das
js
ins
ins
das
jo
gs
outs
je
je
outs
outs
add
add
add
add
adc
add
push
das
das
jae
push
cs
imul
je
arpl
das
ja
outs
data16
xor
xor
das
js
ins
ins
add
add
add
add
adc
or
outs
je
outs
ins
jae
arpl
outs
popa
ins
gs
popa
arpl
inc
outs
ins
ins
outs
outs
cs
outs
outs
je
outs
ins
jae
popa
jae
gs
bound
inc
outs
ins
ins
outs
outs
add
add
add
add
and
(bad)
inc
xor
movs
(bad)
and
sar
add
xor
xchg
inc
pop
adc
add
jb
gs
jns
and
add
jmp
push
inc
into
inc
cs
call
add
inc
outs
ins
ins
outs
outs
cs
outs
outs
je
outs
ins
jae
inc
imul
add
or
add
add
add
popa
ins
gs
add
add
gs
std
pop
or
add
push
outs
jne
arpl
xor
add
popa
arpl
das
das
popa
jo
ins
imul
cmp
sub
dec
ins
popa
addr16
popa
fs
popa
ins
cs
addr16
add
pop
lsl
xchg
inc
or
addr16
or
add
push
std
add
(bad)
add
add
push
jb
jo
jb
jns
adc
mov
std
or
dec
outs
jne
gs
jbe
jb
or
add
add
gs
push
add
cs
add
std
add
adc
add
std
add
push
popa
jb
gs
popa
ins
gs
push
add
gs
std
pop
sysret
add
std
add
push
jb
jo
jb
jns
push
pop
add
push
outs
jne
arpl
or
add
std
add
gs
or
sub
arpl
das
das
popa
jo
ins
imul
cmp
sub
dec
ins
popa
addr16
popa
fs
jb
jo
addr16
add
add
add
pop
add
mov
idiv
push
push
add
cs
add
std
add
push
add
gs
std
push
push
pop
add
push
outs
jne
arpl
xor
add
jo
arpl
das
das
popa
jo
ins
imul
cmp
sub
dec
ins
popa
addr16
popa
fs
imul
outs
addr16
add
or
or
and
add
or
add
dec
add
inc
add
dec
add
add
add
pusha
add
add
add
(bad)
(bad)
(bad)
inc
sbb
add
orps
jne
gs
outs
outs
arpl
jb
gs
add
outs
ins
jne
gs
outs
outs
arpl
jb
gs
outs
outs
je
outs
ins
jae
dec
outs
je
data16
ja
gs
add
add
add
dec
push
imul
popa
jae
sub
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
xor
bound
cmp
ss
xor
pop
push
jb
jae
outs
je
je
outs
outs
inc
jb
ins
gs
jb
sub
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
xor
bound
cmp
ss
xor
push
push
jb
jae
outs
je
je
outs
outs
inc
outs
jb
sub
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
xor
bound
cmp
ss
xor
push
das
das
jae
push
cs
imul
je
arpl
das
ja
outs
data16
xor
xor
das
js
ins
ins
das
jo
gs
outs
je
je
outs
outs
add
add
add
add
adc
add
push
das
das
jae
push
cs
imul
je
arpl
das
ja
outs
data16
xor
xor
das
js
ins
ins
add
add
add
add
sub
pop
or
add
std
add
popa
ins
gs
add
or
je
data16
ja
gs
std
and
(bad)
inc
xor
xor
add
repnz
add
add
sub
add
inc
sub
pop
or
add
inc
add
popa
ins
gs
add
or
outs
push
ja
gs
std
and
repnz
dec
gs
ins
outs
and
jb
fs
std
and
(bad)
inc
xor
xor
add
xor
add
and
add
add
add
dec
add
inc
add
dec
add
add
add
pusha
add
add
add
(bad)
(bad)
(bad)
inc
sbb
add
orps
jne
gs
outs
outs
arpl
jb
gs
add
push
outs
ins
jne
gs
outs
outs
arpl
jb
gs
outs
outs
je
outs
ins
jae
push
jne
gs
imul
sbb
add
dec
push
imul
popa
jae
sub
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
xor
bound
cmp
ss
xor
pop
push
jb
jae
outs
je
je
outs
outs
inc
jb
ins
gs
jb
sub
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
xor
bound
cmp
ss
xor
push
push
jb
jae
outs
je
je
outs
outs
inc
outs
jb
sub
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
xor
bound
cmp
ss
xor
push
das
das
jae
push
cs
imul
je
arpl
das
ja
outs
data16
xor
xor
das
js
ins
ins
das
jo
gs
outs
je
je
outs
outs
add
add
add
add
adc
add
push
das
das
jae
push
cs
imul
je
arpl
das
ja
outs
data16
xor
xor
das
js
ins
ins
add
add
add
add
and
(bad)
inc
jne
outs
movs
(bad)
and
sar
add
jne
outs
movs
(bad)
repnz
(bad)
add
popf
inc
jne
outs
cmp
add
add
add
or
add
popa
ins
gs
add
push
jbe
gs
jb
std
add
add
and
or
add
dec
add
inc
add
dec
add
add
add
pusha
add
add
add
(bad)
(bad)
(bad)
inc
sbb
add
inc
push
outs
ins
jne
gs
outs
outs
arpl
jb
gs
push
gs
imul
cs
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
outs
jne
ins
sbb
arpl
outs
popa
ins
gs
popa
arpl
push
outs
ins
jne
gs
outs
outs
arpl
jb
gs
outs
outs
je
outs
ins
jae
push
outs
ins
jne
gs
outs
outs
arpl
jb
gs
outs
outs
je
outs
ins
jae
add
inc
sub
jb
outs
popa
ins
gs
popa
arpl
push
outs
ins
jne
gs
outs
outs
arpl
jb
gs
outs
outs
jbe
jb
gs
sbb
ins
jne
gs
outs
outs
arpl
jb
gs
outs
outs
jbe
jb
gs
add
sbb
add
cmp
outs
outs
sub
push
gs
imul
cs
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
outs
jne
ins
sbb
arpl
outs
popa
ins
gs
popa
arpl
inc
outs
ins
ins
outs
outs
cs
outs
outs
je
outs
ins
jae
popa
jae
gs
bound
inc
outs
ins
ins
outs
outs
cmovae
ins
outs
outs
cs
outs
outs
je
outs
ins
jae
add
add
ins
gs
outs
outs
arpl
jb
gs
outs
outs
je
outs
ins
jae
push
jne
gs
imul
add
add
sbb
add
dec
push
imul
popa
jae
sub
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
xor
bound
cmp
ss
xor
pop
push
jb
jae
outs
je
je
outs
outs
inc
jb
ins
gs
jb
sub
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
xor
bound
cmp
ss
xor
push
push
jb
jae
outs
je
je
outs
outs
inc
outs
jb
sub
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
xor
bound
cmp
ss
xor
push
das
das
jae
push
cs
imul
je
arpl
das
ja
outs
data16
xor
xor
das
js
ins
ins
das
jo
gs
outs
je
je
outs
outs
add
add
add
add
adc
add
push
das
das
jae
push
cs
imul
je
arpl
das
ja
outs
data16
xor
xor
das
js
ins
ins
add
add
add
add
adc
or
outs
je
outs
ins
jae
arpl
outs
popa
ins
gs
popa
arpl
push
outs
ins
jne
gs
outs
outs
arpl
jb
gs
outs
outs
je
outs
ins
jae
add
add
add
adc
or
outs
jbe
jb
gs
sub
jb
outs
popa
ins
gs
popa
arpl
push
outs
ins
jne
gs
outs
outs
arpl
jb
gs
outs
outs
jbe
jb
gs
add
add
add
add
adc
or
outs
je
outs
ins
jae
sub
outs
popa
ins
gs
popa
arpl
inc
outs
ins
ins
outs
outs
cs
outs
outs
je
outs
ins
jae
popa
jae
gs
bound
inc
outs
ins
ins
outs
outs
add
add
add
add
and
sar
add
xor
push
inc
or
jae
jne
arpl
or
add
add
aaa
push
outs
ins
jne
gs
outs
outs
arpl
jb
gs
outs
outs
jbe
jb
gs
cs
ins
imul
gs
outs
push
je
imul
gs
gs
and
add
ins
imul
gs
outs
push
je
imul
gs
gs
dec
add
add
inc
push
outs
ins
jne
gs
outs
outs
arpl
jb
gs
outs
outs
jbe
jb
gs
cs
jne
gs
outs
popa
bound
inc
push
fs
outs
push
imul
je
inc
outs
outs
jbe
jb
gs
sub
add
push
jne
gs
outs
popa
bound
inc
push
fs
outs
push
imul
je
inc
outs
outs
jbe
jb
gs
cmp
add
add
push
outs
ins
jne
gs
outs
outs
arpl
jb
gs
outs
outs
jbe
jb
gs
cs
gs
outs
fs
outs
jne
push
outs
dec
outs
je
outs
outs
jbe
jb
gs
sbb
add
push
gs
outs
fs
outs
jne
push
outs
dec
outs
je
outs
outs
jbe
jb
gs
aas
add
add
cmp
ins
jne
gs
outs
outs
arpl
jb
gs
outs
outs
jbe
jb
gs
cs
jae
outs
popa
bound
push
outs
dec
popa
bound
inc
outs
ins
outs
jb
outs
outs
jbe
jb
gs
and
add
dec
jae
outs
popa
bound
push
outs
dec
popa
bound
inc
outs
ins
outs
jb
outs
outs
jbe
jb
gs
hlt
std
add
or
add
add
add
add
or
add
add
or
add
add
add
add
or
add
add
add
add
add
add
add
add
add
add
add
add
push
repnz
into
inc
and
cli
inc
xor
sub
sub
jno
push
push
sti
(bad)
call
arpl
arpl
cs
inc
add
add
sar
add
xor
add
add
inc
outs
ins
jne
outs
inc
imul
outs
outs
jae
add
add
repz
cmp
add
add
cmps
inc
and
repz
xor
xor
cmps
inc
and
repz
xor
xor
cmps
inc
and
repz
sub
inc
cmps
inc
and
repz
xor
add
add
cmps
inc
and
repz
xor
inc
cs
sbb
add
push
outs
ins
jne
gs
outs
outs
arpl
jb
gs
outs
outs
je
outs
ins
jae
push
inc
push
outs
js
add
add
add
or
add
popa
ins
gs
add
or
ins
gs
outs
popa
bound
cdq
std
and
ret
inc
xor
(bad)
and
enter
outs
je
jb
jmp
sar
push
inc
outs
je
jb
call
adc
add
jae
push
fs
add
add
inc
sub
or
dec
jae
outs
popa
bound
sub
or
in
inc
add
outs
fs
add
push
push
ja
push
popa
jns
inc
pop
adc
or
inc
outs
outs
data16
imul
in
inc
pop
or
add
inc
add
popa
je
and
push
add
jae
outs
outs
data16
imul
add
add
movs
inc
sub
pop
or
add
ins
gs
pop
add
jo
jb
outs
fs
ins
bound
inc
xor
(bad)
and
(bad)
inc
cmp
movs
(bad)
and
sar
add
xor
xlat
std
add
arpl
dec
outs
fs
or
add
inc
sub
or
push
gs
outs
sub
adc
add
inc
or
outs
jbe
jb
gs
or
pop
add
add
pop
jnp
add
inc
pop
adc
add
inc
or
gs
outs
je
popa
ins
gs
or
or
ins
gs
outs
popa
bound
cdq
std
and
push
add
dec
jae
push
fs
add
add
sub
add
add
push
outs
ins
jne
gs
outs
outs
arpl
jb
gs
outs
outs
je
outs
ins
jae
push
imul
gs
push
add
sub
pop
or
add
add
add
popa
ins
gs
or
push
jo
arpl
jb
std
and
ret
inc
xor
(bad)
and
(bad)
inc
cmp
movs
(bad)
and
sar
add
xor
in
inc
and
or
or
ins
gs
outs
popa
bound
cdq
std
and
push
add
dec
jae
push
fs
add
pop
or
push
add
add
imul
in
inc
sub
push
add
jb
ins
sub
add
mov
add
add
or
add
popa
ins
gs
or
ins
jne
gs
ins
imul
ret
inc
xor
(bad)
and
iret
inc
aaa
sub
sub
sub
jno
and
enter
outs
je
jb
call
push
push
add
inc
pop
dec
popa
js
ins
jne
and
push
add
xor
xor
pop
push
str
inc
pop
dec
imul
pop
sldt
xor
pop
adc
add
inc
or
popa
ins
ins
inc
push
and
adc
add
adc
or
add
dec
popa
jb
gs
push
and
adc
add
inc
in
inc
and
or
or
ins
gs
outs
popa
bound
cdq
std
and
push
add
dec
jae
push
fs
add
pop
or
add
inc
add
gs
adc
add
inc
sub
or
push
outs
ins
jne
sub
add
cmp
and
ret
inc
xor
(bad)
and
sar
push
inc
outs
je
jb
jmp
enter
outs
je
jb
inc
xchg
inc
in
inc
and
or
or
outs
ins
jne
gs
ins
imul
push
add
gs
and
add
add
add
pop
jnp
add
inc
and
or
or
ins
gs
outs
popa
bound
cdq
std
and
push
add
dec
jae
push
fs
add
pop
xchg
inc
in
inc
and
or
or
ins
gs
outs
popa
bound
cdq
std
and
push
add
dec
jae
push
fs
and
add
add
add
add
cmp
sub
and
ret
inc
xor
xchg
inc
push
gs
outs
jbe
cdq
std
and
sar
push
inc
outs
je
jb
jmp
enter
outs
je
jb
jmp
sub
sub
sub
jno
and
xchg
dec
push
outs
fs
imul
adc
push
inc
push
inc
jne
jae
jb
or
add
popa
outs
fs
pop
leave
inc
xchg
std
add
adc
xchg
std
add
push
popa
jb
gs
jns
and
cmp
adc
add
std
add
unpckhps
aam
add
push
jb
jo
jb
jns
pop
adc
call
or
add
std
add
gs
push
push
add
add
pop
and
xor
gs
movhps
xchg
std
add
push
jb
addr16
or
add
push
std
add
prefetchnta
push
std
add
push
jb
jo
jb
jns
pop
sbb
mov
jnp
pop
or
add
add
gs
push
sbb
add
cs
add
std
add
pop
adc
inc
or
add
add
add
add
add
cmps
std
add
ret
ss
or
inc
inc
outs
je
outs
ins
cmp
add
jb
outs
je
je
outs
outs
and
sbb
or
jb
jp
outs
je
ins
cmp
inc
gs
jmp
iret
dec
xor
sub
sub
sub
jno
pop
leave
inc
xchg
std
add
adc
cmps
std
cs
add
std
add
pop
adc
jmp
push
add
inc
outs
ins
ins
popa
jo
gs
add
xchg
add
push
sbb
xchg
add
inc
imul
sbb
add
inc
and
push
add
jae
outs
outs
data16
imul
add
pop
or
add
popa
ins
jne
add
push
jb
gs
inc
aam
add
pop
adc
jmp
imul
inc
or
or
sub
sbb
add
inc
outs
ins
ins
outs
outs
cs
outs
outs
je
outs
ins
jae
inc
imul
add
or
add
push
outs
jne
arpl
aaa
sbb
outs
ins
jne
gs
outs
outs
arpl
jb
cmp
ins
jo
outs
outs
je
dec
ins
popa
addr16
jb
addr16
jb
ja
jo
addr16
and
iret
inc
xor
sub
sub
jno
and
sar
add
xor
add
xor
add
xchg
inc
xor
sub
and
xchg
inc
push
jne
and
and
and
outs
data16
imul
push
and
push
outs
and
and
ins
ins
and
je
bound
gs
arpl
gs
std
push
push
xchg
(bad)
call
bound
popa
xor
or
inc
inc
outs
je
jb
jmp
sar
push
inc
outs
je
jb
inc
add
add
and
add
add
push
add
inc
add
dec
add
add
add
pusha
add
add
add
(bad)
(bad)
(bad)
inc
sbb
add
cmp
outs
outs
sub
push
gs
imul
cs
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
outs
jne
ins
sbb
arpl
outs
popa
ins
gs
popa
arpl
inc
outs
ins
ins
outs
outs
cs
outs
outs
je
outs
ins
jae
popa
jae
gs
bound
inc
outs
ins
ins
outs
outs
cmovae
ins
outs
outs
cs
outs
outs
je
outs
ins
jae
add
add
inc
push
outs
ins
jne
gs
outs
outs
arpl
jb
gs
push
gs
imul
cs
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
outs
jne
ins
sbb
arpl
outs
popa
ins
gs
popa
arpl
push
outs
ins
jne
gs
outs
outs
arpl
jb
gs
outs
outs
jbe
jb
gs
sbb
ins
jne
gs
outs
outs
arpl
jb
gs
outs
outs
jbe
jb
gs
add
sbb
arpl
outs
popa
ins
gs
popa
arpl
push
outs
ins
jne
gs
outs
outs
arpl
jb
gs
outs
outs
je
outs
ins
jae
push
outs
ins
jne
gs
outs
outs
arpl
jb
gs
outs
outs
je
outs
ins
jae
add
add
push
outs
ins
jne
gs
outs
outs
arpl
jb
gs
outs
outs
je
outs
ins
jae
push
imul
gs
add
add
add
dec
push
imul
popa
jae
sub
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
xor
bound
cmp
ss
xor
pop
push
jb
jae
outs
je
je
outs
outs
inc
jb
ins
gs
jb
sub
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
xor
bound
cmp
ss
xor
push
push
jb
jae
outs
je
je
outs
outs
inc
outs
jb
sub
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
xor
bound
cmp
ss
xor
push
das
das
jae
push
cs
imul
je
arpl
das
ja
outs
data16
xor
xor
das
js
ins
ins
das
jo
gs
outs
je
je
outs
outs
add
add
add
add
adc
add
push
das
das
jae
push
cs
imul
je
arpl
das
ja
outs
data16
xor
xor
das
js
ins
ins
add
add
add
add
adc
push
inc
outs
ins
ins
outs
outs
inc
outs
outs
je
outs
ins
jae
arpl
outs
popa
ins
gs
popa
arpl
inc
outs
ins
ins
outs
outs
cs
outs
outs
je
outs
ins
jae
popa
jae
gs
bound
inc
outs
ins
ins
outs
outs
add
add
add
add
adc
or
outs
jbe
jb
gs
sub
jb
outs
popa
ins
gs
popa
arpl
push
outs
ins
jne
gs
outs
outs
arpl
jb
gs
outs
outs
jbe
jb
gs
add
add
add
add
adc
or
outs
je
outs
ins
jae
arpl
outs
popa
ins
gs
popa
arpl
push
outs
ins
jne
gs
outs
outs
arpl
jb
gs
outs
outs
je
outs
ins
jae
add
add
add
sub
pop
or
add
std
add
popa
ins
gs
add
or
arpl
ins
gs
outs
je
std
and
(bad)
inc
jne
outs
movs
(bad)
and
sar
add
xor
push
inc
or
jae
jne
arpl
or
add
add
xor
ins
jne
gs
outs
outs
arpl
jb
gs
outs
outs
jbe
jb
gs
cs
imul
push
je
imul
gs
gs
sbb
add
push
imul
push
je
imul
gs
gs
hlt
std
add
or
add
add
add
add
add
add
push
repnz
into
inc
sub
pop
or
add
inc
add
popa
ins
gs
add
or
jb
gs
popa
imul
inc
xor
pop
sbb
add
add
push
outs
popa
jo
push
outs
inc
gs
arpl
imul
add
add
pop
leave
inc
xchg
std
add
adc
xchg
std
add
push
popa
jb
gs
jns
and
into
jmp
adc
add
std
add
syscall
add
std
add
push
jb
jo
jb
jns
pop
add
call
or
add
std
add
gs
adc
add
add
or
inc
inc
xor
xor
pop
sysret
add
imul
pop
add
push
std
add
invd
add
add
push
jb
jo
jb
jns
pop
or
mov
jnp
pop
or
add
add
gs
push
or
add
cs
add
std
add
pop
add
inc
adc
add
add
or
inc
inc
inc
xor
xor
xor
add
std
add
pop
add
inc
adc
add
add
or
inc
inc
inc
inc
inc
xor
add
or
or
pop
inc
add
add
sub
add
sub
pop
or
add
add
popa
ins
gs
or
adc
outs
push
push
arpl
outs
jo
jo
std
and
iret
inc
xor
pop
leave
inc
xchg
std
add
add
fs
cs
add
std
add
pop
add
inc
push
add
xchg
inc
pop
adc
add
jb
gs
jns
and
add
push
inc
cmps
std
add
or
cmps
std
add
popa
ins
gs
or
push
jae
dec
popa
imul
add
jb
outs
je
je
outs
outs
and
or
jb
jp
outs
je
ins
cmp
add
add
cs
sbb
add
ins
gs
outs
outs
arpl
jb
gs
outs
outs
je
outs
ins
jae
push
imul
arpl
add
add
and
(bad)
inc
ss
enter
outs
je
jb
jmp
sub
sub
sub
jno
pop
or
add
add
add
imul
in
inc
pop
adc
add
inc
or
gs
outs
je
popa
ins
gs
str
jo
arpl
ins
gs
outs
je
std
pop
or
add
inc
add
popa
je
and
adc
add
imul
pop
leave
inc
xchg
std
add
add
add
or
add
push
std
add
pop
or
mov
jnp
push
push
or
add
cs
add
std
add
pop
add
jmp
push
add
add
add
add
sbb
add
add
inc
outs
ins
ins
outs
outs
cs
outs
outs
je
outs
ins
jae
inc
imul
add
leave
inc
xchg
std
add
add
add
cs
add
std
add
push
add
add
push
outs
jne
arpl
xor
add
das
push
outs
ins
jne
gs
outs
outs
arpl
jb
cmp
ins
jo
outs
outs
je
dec
ins
popa
addr16
arpl
imul
outs
addr16
add
pop
add
push
std
add
pop
or
mov
jnp
push
push
or
add
cs
add
std
add
push
add
add
push
outs
jne
arpl
cmp
add
push
outs
ins
jne
gs
outs
outs
arpl
jb
cmp
ins
jo
outs
outs
je
dec
ins
popa
addr16
arpl
imul
ins
gs
addr16
add
or
or
add
add
or
sbb
add
movs
inc
inc
outs
je
outs
ins
cmp
add
inc
push
push
gs
imul
jae
je
or
add
sub
movs
inc
in
inc
and
lldt
bound
push
arpl
outs
jo
jo
std
and
adc
or
inc
push
fs
pop
or
add
inc
add
outs
fs
adc
push
dec
outs
gs
popa
jns
inc
pop
retf
inc
in
inc
and
adc
or
je
popa
ins
push
imul
str
bound
fs
popa
imul
push
adc
sbb
add
push
ins
popa
arpl
outs
je
popa
jb
gs
adc
add
inc
and
str
bound
fs
popa
imul
cmps
inc
into
inc
push
or
(bad)
call
(bad)
jmp
cli
inc
xor
push
push
sti
(bad)
call
xor
xor
push
add
add
cs
inc
(bad)
add
into
inc
xor
xor
add
repnz
cmps
std
add
and
or
push
jae
push
jb
fs
imul
gs
std
or
adc
xchg
inc
or
addr16
add
std
add
daa
leave
inc
add
add
add
add
leave
jmp
adc
add
std
add
pop
add
inc
or
add
add
(bad)
(bad)
(bad)
inc
aam
add
pop
add
inc
push
add
xchg
inc
and
add
jmp
push
inc
into
inc
and
(bad)
jp
call
inc
xor
movs
(bad)
cs
inc
call
add
jmp
sar
add
gs
jmp
enter
outs
je
jb
jmp
sub
sub
sub
jno
add
or
add
add
adc
add
dec
jae
outs
jne
gs
jbe
jb
push
or
add
cs
add
std
add
push
add
pop
add
inc
or
or
add
add
add
add
add
and
push
add
or
add
dec
add
inc
add
dec
add
add
add
pusha
add
add
add
(bad)
(bad)
(bad)
inc
sbb
add
inc
push
outs
ins
jne
gs
outs
outs
arpl
jb
gs
push
gs
imul
cs
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
outs
jne
ins
sbb
arpl
outs
popa
ins
gs
popa
arpl
push
outs
ins
jne
gs
outs
outs
arpl
jb
gs
outs
outs
jbe
jb
gs
sbb
ins
jne
gs
outs
outs
arpl
jb
gs
outs
outs
jbe
jb
gs
add
sbb
arpl
outs
popa
ins
gs
popa
arpl
push
outs
ins
jne
gs
outs
outs
arpl
jb
gs
outs
outs
je
outs
ins
jae
push
outs
ins
jne
gs
outs
outs
arpl
jb
gs
outs
outs
je
outs
ins
jae
add
add
ins
gs
outs
outs
arpl
jb
gs
outs
outs
je
outs
ins
jae
push
imul
arpl
add
add
sbb
add
dec
push
imul
popa
jae
sub
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
xor
bound
cmp
ss
xor
pop
push
jb
jae
outs
je
je
outs
outs
inc
jb
ins
gs
jb
sub
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
xor
bound
cmp
ss
xor
push
push
jb
jae
outs
je
je
outs
outs
inc
outs
jb
sub
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
xor
bound
cmp
ss
xor
push
das
das
jae
push
cs
imul
je
arpl
das
ja
outs
data16
xor
xor
das
js
ins
ins
das
jo
gs
outs
je
je
outs
outs
add
add
add
add
adc
add
push
das
das
jae
push
cs
imul
je
arpl
das
ja
outs
data16
xor
xor
das
js
ins
ins
add
add
add
add
adc
or
outs
jbe
jb
gs
sub
jb
outs
popa
ins
gs
popa
arpl
push
outs
ins
jne
gs
outs
outs
arpl
jb
gs
outs
outs
jbe
jb
gs
add
add
add
add
adc
or
outs
je
outs
ins
jae
arpl
outs
popa
ins
gs
popa
arpl
push
outs
ins
jne
gs
outs
outs
arpl
jb
gs
outs
outs
je
outs
ins
jae
add
add
add
add
pop
or
add
std
add
popa
ins
gs
add
or
imul
arpl
cdq
std
and
sar
add
xor
push
inc
or
jae
jne
arpl
or
add
add
xor
ins
jne
gs
outs
outs
arpl
jb
gs
outs
outs
jbe
jb
gs
cs
push
imul
push
outs
push
imul
arpl
and
add
pop
push
push
imul
push
outs
push
imul
arpl
add
std
add
or
add
add
add
add
add
add
push
repnz
cmps
std
add
adc
add
jb
outs
je
je
outs
outs
and
add
or
jb
jp
outs
je
ins
cmp
inc
inc
outs
je
jb
jmp
sub
sbb
add
push
outs
ins
jne
gs
outs
outs
arpl
jb
gs
outs
outs
je
outs
ins
jae
inc
imul
gs
inc
outs
js
add
add
pop
or
add
add
add
popa
ins
gs
add
pop
push
bound
std
pop
or
add
add
jns
gs
add
or
imul
cmp
add
popa
js
outs
addr16
and
add
(bad)
and
(bad)
inc
xor
movs
(bad)
and
out
add
jno
and
(bad)
add
je
inc
mov
add
inc
pop
adc
add
inc
or
gs
outs
je
popa
ins
gs
push
add
imul
arpl
cdq
std
pop
or
add
inc
add
popa
je
and
pop
add
outs
jne
adc
add
add
cmp
and
xchg
inc
cmp
add
sub
and
add
or
outs
jne
gs
bound
std
and
add
or
je
dec
imul
jmp
add
(bad)
and
(bad)
inc
xor
movs
(bad)
and
out
add
jno
and
(bad)
add
gs
inc
mov
add
inc
and
push
add
imul
arpl
cdq
std
and
pop
add
dec
imul
add
add
add
add
and
add
or
outs
popa
je
jb
bound
std
and
add
pop
dec
gs
gs
cmp
add
xor
(bad)
and
(bad)
inc
jne
outs
movs
(bad)
and
out
add
jno
and
(bad)
add
gs
inc
mov
add
inc
and
push
add
imul
arpl
cdq
std
and
pop
add
inc
gs
outs
popa
je
jb
inc
add
add
and
add
or
add
dec
add
inc
add
dec
add
add
add
pusha
add
add
add
(bad)
(bad)
(bad)
inc
sbb
add
orps
jne
gs
outs
outs
arpl
jb
gs
add
push
outs
ins
jne
gs
outs
outs
arpl
jb
gs
outs
outs
je
outs
ins
jae
push
imul
gs
add
add
add
dec
push
imul
popa
jae
sub
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
xor
bound
cmp
ss
xor
pop
push
jb
jae
outs
je
je
outs
outs
inc
jb
ins
gs
jb
sub
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
xor
bound
cmp
ss
xor
push
push
jb
jae
outs
je
je
outs
outs
inc
outs
jb
sub
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
xor
bound
cmp
ss
xor
push
das
das
jae
push
cs
imul
je
arpl
das
ja
outs
data16
xor
xor
das
js
ins
ins
das
jo
gs
outs
je
je
outs
outs
add
add
add
add
adc
add
push
das
das
jae
push
cs
imul
je
arpl
das
ja
outs
data16
xor
xor
das
js
ins
ins
add
add
add
add
adc
add
cmp
je
cmp
das
jae
push
outs
jo
outs
js
ins
outs
jb
popa
je
outs
jb
das
ins
popa
jb
jne
sub
popa
je
bound
imul
add
add
add
add
adc
add
je
jo
das
das
jae
push
cs
imul
je
arpl
das
gs
jb
jae
imul
outs
fs
xor
xor
add
add
add
add
repnz
add
add
add
mov
add
or
add
dec
add
inc
add
dec
add
add
add
pusha
add
add
add
(bad)
(bad)
(bad)
inc
sbb
add
cmp
outs
outs
sub
push
gs
imul
cs
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
outs
jne
ins
sbb
arpl
outs
popa
ins
gs
popa
arpl
inc
outs
ins
ins
outs
outs
cs
outs
outs
je
outs
ins
jae
popa
jae
gs
bound
inc
outs
ins
ins
outs
outs
cmovae
ins
outs
outs
cs
outs
outs
je
outs
ins
jae
add
add
orps
jne
gs
outs
outs
arpl
jb
gs
add
push
outs
ins
jne
gs
outs
outs
arpl
jb
gs
outs
outs
je
outs
ins
jae
push
inc
push
outs
js
add
add
add
dec
push
imul
popa
jae
sub
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
xor
bound
cmp
ss
xor
pop
push
jb
jae
outs
je
je
outs
outs
inc
jb
ins
gs
jb
sub
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
xor
bound
cmp
ss
xor
push
push
jb
jae
outs
je
je
outs
outs
inc
outs
jb
sub
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
xor
bound
cmp
ss
xor
push
das
das
jae
push
cs
imul
je
arpl
das
ja
outs
data16
xor
xor
das
js
ins
ins
das
jo
gs
outs
je
je
outs
outs
add
add
add
add
adc
add
push
das
das
jae
push
cs
imul
je
arpl
das
ja
outs
data16
xor
xor
das
js
ins
ins
add
add
add
add
adc
or
outs
je
outs
ins
jae
arpl
outs
popa
ins
gs
popa
arpl
inc
outs
ins
ins
outs
outs
cs
outs
outs
je
outs
ins
jae
popa
jae
gs
bound
inc
outs
ins
ins
outs
outs
add
add
add
add
sub
pop
or
add
std
add
popa
ins
gs
add
pop
gs
gs
outs
je
std
and
(bad)
inc
xor
movs
(bad)
and
sar
add
movs
(bad)
pop
or
add
inc
jne
jae
jb
or
add
popa
outs
fs
repnz
add
add
sub
sbb
add
inc
outs
ins
ins
outs
outs
cs
outs
outs
je
outs
ins
jae
inc
imul
add
pop
or
add
add
add
popa
ins
gs
add
add
gs
std
pop
leave
inc
xchg
std
add
adc
add
jb
gs
jns
and
add
add
adc
add
std
add
(bad)
add
std
add
push
jb
jo
jb
jns
push
add
mov
add
push
outs
jne
arpl
or
add
std
add
gs
add
arpl
das
das
popa
jo
ins
imul
cmp
sub
dec
ins
popa
addr16
outs
outs
sub
popa
ins
cs
addr16
add
clts
add
imul
push
add
pop
inc
pop
adc
add
add
inc
outs
outs
imul
add
sahf
inc
pop
push
or
sahf
inc
pop
inc
imul
or
add
inc
pop
adc
add
inc
or
gs
outs
je
popa
ins
gs
or
pop
gs
gs
outs
je
std
pop
or
add
inc
add
popa
je
and
or
or
inc
push
fs
add
pop
or
add
popa
ins
jne
add
push
jb
gs
sahf
inc
pop
or
add
inc
and
or
pop
gs
gs
outs
je
std
and
or
or
inc
outs
outs
data16
imul
add
inc
popa
ins
jae
add
sahf
inc
pop
or
add
inc
and
or
pop
gs
gs
outs
je
std
and
or
or
dec
outs
jne
gs
jbe
jb
inc
add
push
jb
gs
cs
add
std
add
push
add
mov
add
push
outs
jne
arpl
xor
arpl
das
das
popa
jo
ins
imul
cmp
sub
dec
ins
popa
addr16
outs
outs
sub
jb
jo
addr16
add
add
add
pop
add
sahf
inc
pop
or
add
inc
and
or
pop
gs
gs
outs
je
std
and
or
or
inc
push
fs
add
add
push
jb
gs
sahf
inc
pop
or
add
inc
and
or
pop
gs
gs
outs
je
std
and
or
or
inc
outs
outs
data16
imul
add
push
jb
gs
sahf
inc
pop
or
add
inc
and
or
pop
gs
gs
outs
je
std
and
or
or
dec
outs
jne
gs
jbe
jb
inc
add
inc
popa
ins
jae
add
cs
add
std
add
push
add
mov
add
push
outs
jne
arpl
xor
arpl
das
das
popa
jo
ins
imul
cmp
sub
dec
ins
popa
addr16
arpl
sub
jb
popa
ins
cs
addr16
add
add
add
pop
add
sahf
inc
pop
or
add
inc
and
or
pop
gs
gs
outs
je
std
and
or
or
inc
push
fs
add
add
push
jb
gs
sahf
inc
pop
or
add
inc
and
or
pop
gs
gs
outs
je
std
and
or
or
inc
outs
outs
data16
imul
add
push
jb
gs
sahf
inc
pop
or
add
inc
and
or
pop
gs
gs
outs
je
std
and
or
or
dec
outs
jne
gs
jbe
jb
inc
add
push
jb
gs
cs
add
std
add
push
add
mov
add
push
outs
jne
arpl
xor
arpl
das
das
popa
jo
ins
imul
cmp
sub
dec
ins
popa
addr16
arpl
sub
jbe
jb
jo
addr16
add
add
add
pop
add
sahf
inc
pop
or
add
inc
and
or
pop
gs
gs
outs
je
std
and
or
or
inc
push
fs
add
add
inc
popa
ins
jae
add
sahf
inc
pop
or
add
inc
and
or
pop
gs
gs
outs
je
std
and
or
or
dec
outs
jne
gs
jbe
jb
inc
add
inc
popa
ins
jae
add
cs
add
std
add
push
add
mov
add
push
outs
jne
arpl
xor
arpl
das
das
popa
jo
ins
imul
cmp
sub
dec
ins
popa
addr16
outs
data16
jb
popa
ins
cs
addr16
add
add
add
pop
add
sahf
inc
pop
or
add
inc
and
or
pop
gs
gs
outs
je
std
and
or
or
inc
push
fs
add
add
inc
popa
ins
jae
add
sahf
inc
pop
or
add
inc
and
or
pop
gs
gs
outs
je
std
and
or
or
dec
outs
jne
gs
jbe
jb
inc
add
push
jb
gs
cs
add
std
add
push
add
mov
add
push
outs
jne
arpl
xor
arpl
das
das
popa
jo
ins
imul
cmp
sub
dec
ins
popa
addr16
outs
data16
jbe
jb
jo
addr16
add
or
or
add
and
add
add
or
or
add
or
add
add
or
add
add
adc
add
add
je
pop
je
outs
data16
popa
jb
add
outs
bound
dec
ins
popa
addr16
gs
fs
leave
gs
add
jne
inc
inc
push
js
mov
mov
(bad)
data16
arpl
into
sbb
and
inc
loop
pop
loopne
xchg
movs
adc
inc
jecxz
xchg
xchg
cmp
xchg
adc
dec
adc
movs
dec
xchg
and
adc
add
dec
mov
fprem1
fiadd
iret
outs
test
fistp
int3
adc
or
aam
stc
adc
inc
addr16
dec
pushf
adc
inc
xchg
pop
cli
lods
jb
mov
push
xchg
or
push
in
xor
or
sbb
out
sbb
fcmove
jbe
mov
xchg
add
add
imul
lahf
dec
mov
imul
fist
je
fs
repz
fsub
xchg
aas
mov
das
sahf
push
lock
mov
popa
call
and
shr
int
pusha
jp
(bad)
retf
mov
cmp
pop
adc
xchg
pop
or
(bad)
cmc
pusha
cmp
dec
retf
add
sub
int
adc
loopne
imul
push
mov
lods
mov
dec
int
div
mov
mov
or
gs
mov
ins
shr
xor
out
bound
sbb
sahf
dec
sub
push
test
adc
retf
add
retf
add
fld
inc
push
sub
or
iret
jne
idiv
out
mov
sub
inc
add
push
dec
cs
add
fldcw
sar
arpl
xlat
outs
aam
jbe
add
push
rcr
and
js
push
or
imul
rol
jmp
ror
adc
iret
mov
cwde
adc
mov
mov
sub
or
sbb
sbb
pusha
jbe
aad
out
add
arpl
pop
mov
jmp
sbb
scas
cld
push
dec
cmp
sub
push
(bad)
in
or
cdq
mov
popa
or
jmp
enter
jno
sbb
mov
adc
mov
pushf
push
std
xor
stos
mov
or
ss
mov
sbb
jmp
lods
sbb
push
sub
in
xchg
add
call
mov
push
leave
dec
fidivr
imul
movs
scas
loop
sub
xor
mov
sub
jbe
pop
sbb
xor
push
mov
es
mov
lock
add
mov
loop
mov
arpl
sar
fcomp
push
jae
es
aad
(bad)
addr16
je
bound
and
mov
mov
mov
cmp
sbb
sub
outs
add
retf
dec
sahf
dec
pop
icebp
and
fs
rcl
invd
ss
mov
mov
ficomp
mov
(bad)
daa
adc
inc
lods
retf
or
movs
cmp
cwde
pop
fld
repz
(bad)
out
bound
mov
sub
mov
and
or
inc
jne
push
xchg
daa
cmp
fcom
hlt
call
push
jle
clc
and
xchg
aas
loope
add
add
dec
inc
scas
inc
pusha
and
add
add
or
or
add
or
add
add
or
add
add
adc
add
add
je
pop
je
outs
data16
popa
jb
add
outs
bound
dec
ins
popa
addr16
gs
fs
leave
gs
add
jb
inc
inc
push
js
mov
dec
dec
adc
mov
mov
mov
sbb
adc
mov
push
pop
inc
and
jne
movs
scas
or
sbb
push
loop
popf
imul
mov
mov
cvtps2pi
adc
cdq
jns
aaa
popf
pop
inc
jbe
fwait
sar
(bad)
ja
(bad)
cmp
sub
adc
add
sbb
loop
lea
add
inc
xchg
and
les
das
in
add
shl
push
push
pop
cmp
mov
pop
movs
mov
mov
cmps
add
popf
in
cmp
movs
pop
mov
icebp
ds
push
sub
movs
(bad)
fdivr
in
frstor
adc
add
xchg
loopne
out
repz
xor
and
jmp
psrlq
idiv
mov
dec
cmp
test
push
sbb
xchg
mov
or
(bad)
fnstcw
hlt
jo
popf
mov
lock
or
xlat
(bad)
cmp
fs
(bad)
nop
dec
lds
xor
pop
sbb
bound
xchg
ret
and
outs
mov
fild
shl
das
jmp
or
pop
add
aad
add
pop
sbb
and
outs
sub
push
rdtsc
in
lods
scas
divps
lahf
out
dec
call
dec
(bad)
stc
xor
int3
inc
pushf
push
nop
xor
into
mov
cmps
lds
mov
outs
mov
cmp
dec
xchg
mov
mov
rcr
pop
movs
mov
push
mov
outs
add
int
mov
cmp
cmp
inc
cmps
repz
dec
lahf
cmp
xchg
cdq
fcom
mov
sbb
fdivr
stc
les
rcl
loopne
dec
sti
outs
(bad)
imul
add
cld
xor
(bad)
sahf
mov
mov
sub
lods
es
xchg
cmps
lods
dec
js
(bad)
xchg
adc
imul
push
and
cmps
xor
pop
dec
mov
cli
cmp
(bad)
dec
repz
lds
jae
mov
or
mov
lea
mov
xor
repz
and
xchg
leave
out
daa
scas
rcl
sbb
int3
das
popf
dec
je
push
mov
cdq
dec
jmp
mov
mov
fidivr
in
daa
adc
xor
out
cmp
test
or
sub
sbb
cld
iret
cdq
mov
ins
jno
out
xchg
loop
add
inc
ror
cmp
call
(bad)
rol
adc
inc
or
movs
dec
test
not
fidiv
push
out
loope
cld
int3
neg
mov
fsubr
sub
lods
loopne
xchg
push
and
add
clc
adc
mov
pop
fnstsw
neg
push
add
mov
xchg
(bad)
pop
sbb
call
and
adc
stc
out
das
clc
push
hlt
jle
cmp
loop
outs
les
jns
pmullw
movs
mov
dec
cmp
and
mov
loopne
enter
add
or
mov
mov
dec
inc
dec
inc
scas
inc
pusha
and
add
add
or
or
add
or
add
add
or
add
add
adc
add
add
je
pop
je
outs
data16
popa
jb
add
outs
bound
dec
ins
popa
addr16
gs
fs
leave
gs
add
lahf
dec
inc
inc
push
js
mov
dec
adc
adc
cmp
adc
cmp
push
adc
or
xor
outs
inc
adc
fsub
mov
shr
mov
cmp
xor
inc
push
sbb
movs
mov
mov
cmps
repnz
scas
jmp
test
std
jle
ja
fs
jl
neg
sbb
fdivr
mov
mov
jmp
rcl
(bad)
mov
mov
sub
iret
adc
mov
cmp
or
ror
cmp
pop
and
mov
(bad)
outs
ja
stc
repnz
clc
push
jnp
xor
shl
data16
push
loop
jne
pop
mov
jnp
ror
retf
push
push
lock
out
pop
pusha
(bad)
ficom
pop
or
movs
fiadd
(bad)
and
or
daa
in
jmp
fnstsw
push
inc
in
pop
(bad)
hlt
and
fs
rcl
adc
add
into
mov
xchg
xchg
push
push
adc
sbb
pop
inc
pushf
cmp
jmp
out
cwde
mov
sbb
mov
push
dec
inc
inc
jmp
cmp
mov
fs
aam
xor
enter
pop
fs
add
push
cmp
test
(bad)
sub
cwde
pop
or
xchg
outs
enter
dec
iret
pop
scas
xchg
call
cmp
test
xchg
ja
mov
jecxz
outs
scas
mov
mov
mov
push
push
push
outs
adc
idiv
outs
and
push
mov
xor
jno
jle
mov
dec
(bad)
aaa
mov
push
mov
adc
sub
push
out
(bad)
cmps
mov
fsubrp
mov
push
lahf
neg
pop
fs
ret
xchg
cmps
pushf
mov
jp
add
jp
push
jecxz
sbb
fistp
jl
fisub
loopne
out
or
add
out
xchg
jmp
fsubr
mov
call
jg
mov
(bad)
mov
dec
lods
pop
shl
rcr
push
pop
leave
adc
fnstsw
jmp
shr
sbb
push
fistp
repnz
dec
mov
xchg
dec
mov
das
lahf
xchg
jnp
neg
movs
sbb
mov
jmp
sub
sbb
jecxz
out
dec
mov
jb
into
adc
ins
pop
out
jecxz
or
das
mov
pop
mov
je
mov
clc
pop
(bad)
fst
retf
jmp
jno
adc
call
push
mov
xchg
add
add
popf
ins
out
out
push
mov
add
xchg
cmp
or
shl
xor
fisubr
xor
jnp
mov
cs
mov
ffreep
pop
mov
mov
sbb
pextrw
xchg
mov
and
loop
int3
adc
adc
cwde
or
(bad)
push
dec
ins
sub
cld
mov
add
daa
push
(bad)
push
inc
push
and
sbb
or
adc
xor
retf
push
loope
call
add
mov
jns
in
add
add
dec
inc
scas
inc
pusha
and
or
dec
inc
or
add
or
add
add
add
add
add
mov
or
pop
jae
add
adc
add
adc
add
or
inc
inc
push
push
push
push
inc
inc
and
outs
imul
ficomp
jmp
hlt
inc
dec
mov
adc
mov
and
adc
and
adc
add
enter
mov
sub
mov
fadd
in
mov
mov
sti
loope
mov
out
(bad)
mov
ds
repz
mov
pop
ror
xchg
dec
xor
or
push
adc
add
(bad)
loope
cs
or
or
and
add
jle
cmp
and
pop
mov
or
add
dec
fwait
shl
xchg
pminsw
pop
add
xchg
cmp
adc
jp
inc
cmps
add
add
add
arpl
add
add
jg
rol
sbb
pop
xchg
and
and
mov
cmp
lods
iret
push
mov
pop
xor
adc
dec
les
add
sub
dec
add
adc
mov
or
xor
test
add
add
and
js
test
push
cmp
sub
add
mov
mov
pop
or
cs
sub
dec
pop
sub
popa
add
inc
cs
sbb
xor
add
xor
js
push
scas
into
into
mov
mov
(bad)
stos
jo
add
loope
jle
(bad)
sub
mov
cmp
sub
and
or
mov
inc
mov
mov
jo
jle
cmp
mov
in
in
dec
les
popa
retf
(bad)
addr16
push
std
ins
stc
jle
cld
div
loopne
loop
xor
clc
loopne
int3
hlt
dec
movs
sbb
xchg
or
cld
mov
(bad)
cld
sbb
bound
push
adc
inc
call
inc
xchg
sub
and
fild
add
fbstp
add
sub
test
pop
je
loop
add
repnz
or
sub
iret
ja
out
aas
std
inc
mov
dec
xchg
jno
add
and
push
retf
(bad)
or
add
sub
sbb
push
sbb
add
pusha
test
(bad)
inc
or
jb
sub
mov
sub
aam
sbb
xchg
push
mov
cli
popa
or
or
enter
and
mov
bound
pop
cdq
test
and
dec
add
mov
leave
mov
and
xor
push
and
sbb
cmp
cmp
add
cmp
mov
mov
cmp
mov
inc
mov
xor
shl
sbb
shr
ds
(bad)
xor
call
ins
xor
mov
mov
sub
xchg
arpl
mov
lods
or
(bad)
sbb
mov
arpl
mov
add
add
inc
and
inc
dec
pop
dec
pop
dec
fmul
and
xor
fimul
aaa
or
test
daa
and
mov
bound
xor
(bad)
adc
mov
aaa
and
mov
daa
mov
movs
push
rcl
rol
outs
push
and
sub
fwait
xor
sbb
xchg
leave
fisub
pop
cmp
in
in
in
in
in
repnz
or
clc
push
loop
push
retf
sbb
adc
xor
push
gs
xor
mov
mov
pop
inc
lods
mov
xchg
cmp
adc
dec
movs
lods
mov
pop
push
je
adc
xchg
push
dec
xchg
rcl
retf
jmp
add
ja
or
mov
sbb
sbb
scas
cwde
dec
cmps
sbb
mov
(bad)
push
xor
xor
cwde
out
setns
pop
sub
retf
dec
xchg
es
sbb
das
push
test
stos
or
push
retf
push
(bad)
jge
inc
push
xor
test
push
stos
popf
push
jmp
sbb
test
addr16
push
aas
movs
jle
std
mov
pop
ret
dec
ret
dec
inc
movs
push
mov
(bad)
and
arpl
mov
sub
imul
les
mov
fnstcw
mov
mov
inc
xor
push
mov
repz
data16
pop
jecxz
jno
pushf
je
or
sub
ficom
sub
sub
cmps
xor
mov
stos
xchg
xchg
xchg
pop
stos
dec
stos
push
stos
inc
jmp
ss
in
cmps
popf
cmps
mov
or
pop
daa
inc
addr16
into
add
push
frstor
cmp
stos
imul
mov
sahf
mov
outs
cmps
fidivr
out
sbb
das
std
push
std
ins
cli
cmps
cmc
inc
or
push
mov
and
fisttp
sbb
sbb
push
inc
pop
ret
inc
inc
movs
popa
xchg
popa
xchg
loope
xchg
mov
inc
lea
mov
pop
jecxz
jecxz
(bad)
ins
(bad)
mov
es
dec
jmp
cmps
sub
(bad)
int
int
int
cdq
xor
xor
fwait
out
xlat
fbstp
sub
test
mov
pop
cmps
pop
out
mov
outs
test
pop
movs
pop
push
pop
pop
mov
lods
popf
lods
and
cmps
adc
stos
sahf
(bad)
addr16
mov
mov
mov
mov
mov
fadd
fld
popa
bound
addr16
scas
ret
out
xchg
mov
(bad)
std
cmp
push
stos
sbb
mov
adc
push
cmp
call
hlt
xchg
jmp
adc
fdiv
jecxz
adc
sub
imul
jae
xrelease
cs
ds
sbb
(bad)
mov
jno
loope
shl
popf
fwait
mov
ret
fld
out
xchg
lahf
int3
xor
sub
ret
enter
in
aas
or
lods
jle
inc
dec
and
das
xchg
push
lods
xlat
mov
movs
ja
mul
pop
idiv
jb
jecxz
jecxz
aaa
fidiv
ficomp
int3
aaa
shl
outs
sahf
pop
test
inc
jg
jmp
call
add
add
add
clc
jp
and
div
mov
pop
lods
and
in
nop
lods
and
out
into
xchg
into
imul
(bad)
rol
popa
out
mov
jle
daa
test
mov
pop
sbb
xor
inc
jae
inc
cli
inc
xchg
inc
ficomp
scas
sub
stos
cs
fidiv
mov
cs
int3
aad
popf
pop
dec
ins
dec
sbb
sub
(bad)
in
repz
popf
loop
jecxz
pop
cwde
das
enter
mov
cmps
push
test
xchg
inc
dec
mov
xchg
lock
adc
test
mov
mov
jns
sbb
shl
ror
push
dec
repnz
sub
xchg
in
xchg
mov
xor
daa
test
dec
fstp
jbe
ins
xor
xchg
xchg
nop
jno
stos
and
mov
jmp
test
mov
push
xchg
pop
leave
imul
or
pop
sub
sub
mov
gs
mov
retf
stos
sahf
sub
in
int3
mov
fist
(bad)
in
adc
adc
xchg
mov
xchg
sub
lods
push
mov
jno
fisttp
jecxz
add
lods
cmp
mov
stos
in
push
xchg
scas
jle
es
imul
mov
imul
push
or
test
(bad)
in
pop
dec
pop
das
pop
fbstp
sbb
adc
fist
xchg
adc
js
sbb
fcom
fs
data16
out
sub
stos
xchg
out
push
outs
or
fist
in
cmc
test
xchg
int
fstp
mov
cmps
leave
into
int
aas
push
movs
push
hlt
push
cli
push
ss
rcr
mov
xlat
clc
outs
shr
sbb
div
aad
pop
mov
mov
dec
aad
aad
sti
dec
sti
mov
aas
scas
mov
ins
pop
lods
dec
ins
jno
mov
and
mov
mov
cmp
sub
inc
push
(bad)
pop
mov
sub
lea
jns
jmp
push
or
jnp
loope
rcr
jbe
addr16
repnz
bound
dec
int3
ds
jmp
setl
pop
jns
repz
leave
imul
addr16
mov
cs
fsub
mov
into
fild
outs
out
mov
inc
dec
into
pop
repnz
in
push
mov
pop
ins
jmp
dec
(bad)
mov
mov
jp
mov
imul
sbb
mov
(bad)
aad
cmp
outs
test
fnstsw
daa
std
into
retf
mov
lods
mov
inc
in
inc
fld
xchg
aas
pop
(bad)
(bad)
out
fdivr
shl
rcr
inc
test
xchg
cmc
(bad)
cmovae
xchg
cmp
loop
jb
jmp
fs
es
pop
(bad)
mov
push
das
jle
aad
xlat
into
rcr
xchg
xchg
mov
jmp
ret
mov
pop
hlt
push
sti
in
shl
sbb
dec
in
and
jmp
mov
push
shl
xchg
inc
cwde
repz
arpl
sub
and
push
dec
add
jp
add
add
add
xor
add
pusha
add
cmp
xchg
pop
lds
add
test
movs
push
cmp
cmc
clc
xchg
clc
and
push
arpl
or
mov
and
and
cmp
add
and
or
mov
and
xor
(bad)
pop
xor
fldenv
push
ret
mov
scas
fisubr
jns
iret
pushf
jae
fiadd
(bad)
clc
repz
fistp
xchg
cmps
test
or
clc
test
sbb
jg
add
sub
je
push
xchg
movs
lock
sbb
adc
jle
jge
dec
test
push
push
ins
fucomi
cmc
jp
jmp
mov
dec
sar
outs
outs
and
retf
xor
cmp
loope
call
cmps
cmps
imul
inc
or
sbb
daa
xchg
leave
stc
stc
jns
(bad)
in
jbe
jno
(bad)
jno
dec
dec
cmp
jbe
popa
sbb
xor
sub
mov
in
jmp
retf
mov
(bad)
dec
repz
mov
mov
imul
adc
outs
ins
ins
aad
adc
mov
and
scas
jmp
sbb
std
jle
repz
repz
pop
pop
pop
ss
shl
sub
stos
punpckhwd
and
lods
lods
lods
mov
lods
das
adc
jmp
mov
or
and
and
push
push
pop
daa
inc
mov
fstp
sbb
es
push
push
adc
sub
add
movs
xchg
xchg
xchg
cmp
mov
or
das
das
(bad)
(bad)
emms
jbe
mov
ds
xchg
mov
into
push
and
xchg
les
adc
out
xor
jecxz
loop
xlat
cmc
cmp
(bad)
ficom
mov
xchg
dec
fbstp
sub
add
and
repz
shl
pop
cmps
sub
inc
shr
adc
add
push
push
xchg
cmp
and
fninit
icebp
cmp
cmp
test
pop
xchg
adc
pop
addr16
leave
mov
cmps
and
(bad)
(bad)
sqrtps
mov
ins
sub
dec
rcr
adc
push
add
or
sar
shr
xchg
push
xlat
jne
(bad)
dec
dec
dec
adc
dec
cmps
shr
test
mov
or
add
xchg
lahf
test
xchg
mov
scas
sti
mov
add
jecxz
stos
aad
(bad)
mov
xor
pop
xlat
gs
xchg
xor
push
adc
das
hlt
push
or
mov
popa
sbb
out
mov
shr
scas
retf
add
push
mov
xor
jae
xor
aaa
push
(bad)
sahf
xor
fsub
int
cmps
in
dec
xchg
in
dec
enter
leave
mov
mov
dec
stc
add
add
dec
inc
dec
inc
scas
inc
pusha
and
add
add
or
or
add
or
add
add
add
add
add
mov
sbb
je
outs
data16
popa
jb
add
outs
bound
dec
ins
popa
addr16
gs
fs
leave
gs
add
es
inc
inc
push
js
movs
push
dec
dec
adc
sahf
cmp
imul
push
mov
push
push
or
arpl
xchg
inc
mov
mov
push
and
xchg
shl
dec
out
ret
xor
mov
mov
into
stc
into
add
dec
int3
iret
iret
aaa
fwait
dec
jmp
test
xchg
scas
or
sar
xlat
test
xor
les
fidiv
repz
jmp
ds
push
in
push
jg
sbb
mov
int
sub
bound
aad
pop
mov
adc
push
xor
mov
loopne
jle
div
retf
dec
lea
ja
ds
stos
xor
(bad)
neg
inc
sub
mov
aad
aaa
pop
repnz
inc
jecxz
sub
daa
fwait
add
xor
lock
pushf
shl
out
popf
popf
add
gs
sbb
push
mov
ror
mov
(bad)
repnz
inc
and
mov
int3
int3
or
jle
addr16
call
and
sbb
cli
xchg
lds
psubw
rol
and
mov
cmp
in
rol
test
fdivr
sub
push
cmp
int
push
push
pop
push
mov
inc
mov
xor
inc
shl
ret
retf
or
and
add
(bad)
dec
cmps
rol
dec
mov
aad
cs
retf
stos
stos
stos
jae
jae
xchg
xchg
lods
push
stos
push
test
mov
ss
call
call
inc
pop
scas
ja
gs
add
test
jmp
cwde
out
ja
cmp
inc
enter
adc
xor
push
mov
and
cmp
daa
mov
xor
pop
dec
or
mov
pop
(bad)
or
xor
movs
aaa
mov
ins
sub
push
jns
or
push
add
sub
sub
fsubr
or
dec
hlt
push
mov
sub
pop
add
sbb
pop
xchg
aam
jmp
loop
loop
int
xchg
mov
lods
pop
mov
mov
fmul
jno
push
pop
pop
dec
es
rol
(bad)
cmp
(bad)
adc
mov
test
jo
popf
and
inc
mov
sub
xlat
fdivp
sbb
(bad)
not
inc
ret
push
sub
scas
sbb
(bad)
and
dec
imul
out
jns
cmp
mov
cmps
inc
xchg
and
or
shld
pop
add
ret
pop
sub
jp
push
jmp
mov
fild
sub
fdivr
jno
jne
mov
pop
xchg
cmp
rol
xchg
and
push
pop
dec
dec
add
add
dec
inc
dec
inc
scas
inc
pusha
and
add
add
or
or
add
or
add
add
add
add
or
add
add
rol
add
sbb
je
outs
data16
popa
jb
add
outs
bound
dec
ins
popa
addr16
gs
fs
leave
gs
add
dec
inc
inc
push
js
mov
dec
and
aas
ja
fisubr
mov
pop
or
shl
imul
and
add
xchg
vpaddw
cld
das
in
and
push
int
or
ins
inc
push
dec
xor
(bad)
lea
ins
mov
push
or
call
mov
fdivrp
jp
fdivp
cmp
fdiv
and
leave
fs
ins
ins
addr16
fwait
int
pop
xchg
test
lods
pop
mov
add
je
jbe
cmc
cmc
or
adc
(bad)
xlat
pop
push
mov
and
clc
rol
out
cld
jno
lea
and
and
mov
add
or
and
push
jmp
and
lods
cs
fcomp
sub
loopne
pop
jge
mov
sbb
test
sti
out
(bad)
clc
stc
inc
retf
or
imul
sbb
dec
add
loope
leave
leave
dec
popf
sbb
push
pop
mov
icebp
js
jmp
jle
mov
js
sub
sub
dec
xchg
(bad)
mov
cld
js
popf
ret
and
bound
cwde
(bad)
sbb
sub
bsf
cli
call
jo
sti
mov
ss
jecxz
js
push
adc
ja
jb
jecxz
jecxz
div
push
pop
fistp
sbb
xchg
cld
adc
inc
cmps
inc
dec
xor
push
aam
sahf
les
jecxz
mov
mov
dec
cmps
stc
xchg
xchg
adc
ret
outs
mov
div
add
mov
sub
data16
cmps
add
xor
cmp
mov
jmp
sub
outs
jmp
jmp
(bad)
(bad)
jle
int3
arpl
bound
mov
pop
std
shr
repz
js
mov
adc
(bad)
jecxz
jno
je
mov
dec
sub
push
adc
and
sahf
adc
jnp
jnp
push
push
xor
into
mov
sub
push
bound
sti
std
jle
jbe
movs
or
push
out
add
in
xor
mov
and
test
or
mov
and
popa
repz
pop
(bad)
ret
mov
pop
popa
mov
dec
fwait
pop
xor
xchg
aaa
stos
into
xor
push
repz
xor
fs
and
mov
popf
or
cmp
fld
xchg
retf
test
aad
lods
cmp
cmps
cmps
es
inc
jp
repz
xlat
adc
sbb
mov
jb
enter
and
(bad)
(bad)
hlt
hlt
hlt
js
sub
(bad)
push
sub
mov
or
mov
xlat
mov
mov
pusha
xor
gs
push
push
sbb
aad
fcmovne
loopne
ret
icebp
addr16
push
push
xor
pop
scas
pop
cdq
nop
(bad)
cmps
add
test
cmp
call
cmp
adc
sub
fmul
jo
jge
sub
xor
lahf
out
loop
sar
fstp
inc
outs
aaa
adc
repz
cmc
fistp
test
and
je
outs
xchg
ret
xor
or
inc
jae
shl
cmp
sub
cmp
(bad)
jae
jae
aas
int3
daa
push
div
aas
mov
add
jg
js
mov
push
ds
jge
lock
mov
pushf
pop
mov
add
in
fs
cmps
daa
inc
mov
(bad)
popf
aaa
sti
and
ficom
stos
mov
aas
int3
pop
pop
sbb
sub
xchg
(bad)
leave
mov
repnz
lods
(bad)
sti
mov
mov
loopne
loop
fnstsw
repnz
js
(bad)
mov
jecxz
mov
mov
leave
mov
(bad)
push
rcr
test
inc
and
jl
lods
out
bnd
or
sub
push
pop
add
add
add
dec
inc
dec
inc
scas
inc
pusha
and
add
add
or
or
add
or
add
add
add
add
or
add
add
rol
add
sbb
je
outs
data16
popa
jb
add
outs
bound
dec
ins
popa
addr16
gs
fs
leave
gs
add
dec
inc
inc
push
js
xchg
push
fisttp
push
adc
ja
cmp
leave
cmps
mov
dec
or
adc
adc
pop
in
lock
ret
mov
mov
pop
mov
xor
add
call
retf
mov
in
sub
mov
xor
cdq
mov
dec
mov
out
jle
jl
and
aam
cmp
pop
pop
pop
(bad)
fmulp
data16
into
mov
cld
lahf
test
inc
or
jge
xor
push
jg
call
rcl
mov
jl
nop
jns
in
push
pop
bswap
cmp
pop
pop
inc
fwait
mov
pop
cmps
jmp
dec
pop
stos
imul
or
fsub
ficomp
push
push
push
sbb
aam
sub
das
sub
out
cld
aad
pop
hlt
hlt
hlt
mov
mov
sub
dec
popa
or
or
ja
out
ja
cmps
ror
lea
sbb
xor
push
or
adc
dec
inc
js
jo
cmp
fistp
clc
in
movs
ret
loope
fs
jl
mov
adc
mov
out
stos
or
mov
xchg
pop
fnstcw
jns
das
cld
inc
xchg
and
push
mov
push
test
retf
mov
mov
push
jl
sti
addr16
bound
inc
loop
lods
xchg
in
inc
inc
inc
in
in
in
rcl
rcr
pop
(bad)
std
xchg
xor
pop
mov
mov
in
xchg
cld
arpl
push
cmp
mov
and
shr
scas
sub
movs
or
lock
pop
pop
repnz
out
cmp
(bad)
jmp
lods
mov
mov
cmp
test
pop
daa
adc
sti
push
ret
mov
sbb
cmp
(bad)
je
rcr
mov
push
test
mov
lods
or
add
icebp
into
mov
mov
mov
sub
cli
cli
cli
push
push
push
rcr
fnstcw
mov
sar
add
mov
push
push
(bad)
dec
push
cmp
xchg
ficomp
daa
jae
sub
sbb
test
fstp
mov
mov
or
(bad)
in
adc
cmc
jno
mov
sub
or
and
xor
push
ja
in
add
retf
mov
rcr
inc
sbb
bound
dec
push
dec
(bad)
in
mov
jae
ret
cmps
out
ret
test
clc
adc
stc
jl
push
data16
js
cmp
test
dec
mov
or
cmps
inc
mov
jne
pop
mov
jnp
and
or
ret
ret
or
inc
in
fcmovu
sbb
and
jmp
add
stos
aad
xchg
fcmovu
(bad)
cmp
xchg
cdq
sbb
lods
pushf
xor
adc
test
mov
push
movs
cwde
and
hlt
div
xor
push
ficomp
inc
mov
mov
mov
jb
push
push
jle
cmc
int
pop
jge
mov
push
stc
adc
repz
je
aad
add
ja
jb
js
jge
jnp
sahf
sub
dec
aaa
jnp
push
add
xor
push
sub
inc
pop
pop
cmp
jo
mov
das
scas
hlt
daa
mov
dec
(bad)
mov
sub
dec
dec
mov
or
xor
dec
lea
iret
into
into
(bad)
mov
pop
sub
pop
(bad)
call
js
cwde
repnz
fsubr
and
test
popf
fs
inc
or
xchg
shl
xchg
outs
leave
ret
iret
stos
aas
or
pop
mov
sti
mov
scas
pop
outs
push
shr
xor
mov
and
add
sti
call
data16
in
xchg
popf
dec
jecxz
or
outs
ficom
std
ds
movs
popf
push
xor
mov
xor
cld
push
add
mov
adc
cdq
out
add
add
add
dec
inc
scas
inc
pusha
and
add
add
or
or
add
or
add
add
add
add
or
add
add
(bad)
xchg
dec
add
add
je
pop
je
outs
data16
popa
jb
add
outs
bound
dec
ins
popa
addr16
gs
fs
leave
gs
add
outs
dec
inc
inc
push
js
ins
push
shl
xor
std
clc
dec
ss
inc
mov
popf
add
inc
(bad)
cli
pop
mov
add
mov
out
popf
cmp
das
scas
push
cmp
jne
icebp
jecxz
imul
push
pop
jns
imul
push
cli
popf
mov
les
pop
loop
push
cmp
popf
jo
xchg
or
add
dec
in
mov
xor
lahf
xor
fstp
int
loop
jo
movs
not
add
and
mov
push
(bad)
dec
inc
ret
scas
jp
mov
mov
push
ins
mov
test
or
mov
daa
mov
push
fsub
lea
call
out
cdq
fmul
cmp
arpl
mov
cld
or
xor
mov
mov
xchg
imul
int
or
mov
push
dec
je
aam
push
push
popa
mov
sbb
xchg
sbb
lods
add
jnp
inc
popa
pop
mov
inc
jle
sbb
rcr
add
shr
js
xchg
push
and
and
jnp
or
push
mov
jbe
test
pop
pop
repnz
imul
movs
lds
or
add
aam
dec
mov
add
dec
inc
dec
inc
scas
inc
pusha
and
aaa
add
mov
inc
or
add
or
add
add
add
pop
or
add
add
shl
add
sbb
je
outs
data16
popa
jb
add
outs
bound
dec
ins
popa
addr16
gs
fs
leave
gs
add
cmp
js
jl
ins
and
sbb
aad
idiv
dec
call
cmp
ja
push
adc
data16
mov
cdq
sbb
inc
(bad)
jecxz
(bad)
jmp
call
mov
jg
addr16
scas
sub
mov
stos
jb
sti
stc
icebp
out
push
(bad)
jg
stc
mov
xchg
aas
data16
mov
lahf
out
icebp
mov
pop
out
out
cmp
jg
repz
mov
js
inc
out
fdivr
mov
iret
cmps
into
lahf
out
out
jle
adc
repnz
pop
(bad)
pop
jge
ret
inc
jl
int
xor
ds
push
out
rcr
idiv
out
xor
and
inc
out
repz
ret
(bad)
mov
test
or
into
jae
sar
jl
sbb
mov
jge
jp
ds
mov
sti
into
imul
test
(bad)
dec
sahf
ja
leave
je
jg
repz
cmp
std
fcomi
sub
(bad)
out
neg
std
fs
mov
jbe
fbstp
push
jmp
shr
idiv
iret
and
movs
icebp
cwde
cmp
fnstenv
fidiv
sbb
int
cmp
mov
push
pop
xor
imul
enter
call
fnstcw
rcl
pop
lods
iret
call
or
sbb
add
sti
out
cmc
(bad)
out
out
data16
out
inc
into
mov
pusha
ror
pop
jecxz
jae
xor
jecxz
pop
push
xchg
stc
into
stos
retf
push
xor
xor
jg
repz
gs
idiv
adc
(bad)
leave
cmp
sub
(bad)
push
dec
stos
sbb
(bad)
jge
or
or
(bad)
lods
inc
xchg
dec
sub
cmp
cmp
imul
loop
shr
mov
mov
or
pop
dec
cs
or
sub
cs
mov
push
pop
pop
ds
inc
cmp
xor
push
dec
das
sbb
pusha
xor
iret
ja
jg
stc
xlat
neg
mov
fistp
jg
jmp
sti
iret
cmps
mov
std
iret
iret
es
stos
pop
repz
or
lods
call
int
lods
mov
dec
ss
inc
pop
stos
lods
mov
xor
ret
repz
hlt
out
xor
das
jp
jecxz
repz
jne
iret
aad
scas
std
jle
jp
jnp
int
lock
lahf
imul
pop
mov
mov
jp
sbb
retf
or
sbb
clc
jl
dec
inc
scas
div
cmp
fiadd
nop
retf
jb
in
mov
repz
mov
mov
jle
dec
sahf
in
mov
data16
in
cmp
imul
outs
cs
jg
jno
mov
jnp
in
and
ds
nop
xchg
iret
or
lock
jp
jl
aad
pop
jecxz
jge
(bad)
cmc
and
jmp
js
leave
popf
outs
xor
pop
addr16
clc
pop
out
mov
(bad)
push
outs
add
int
lods
cld
mov
mov
sahf
fwait
pushf
fnsave
inc
mov
sti
push
sbb
sbb
in
in
stos
addr16
js
mov
mov
mov
xor
out
pusha
and
stc
aad
in
cmp
std
xor
jp
or
iret
pop
out
aam
cmp
out
push
mov
xchg
(bad)
in
repz
xchg
out
inc
cld
fsubr
cmp
jo
jnp
int
mov
mul
daa
mov
xlat
aad
xchg
cld
jne
data16
std
out
cs
pushf
push
aaa
push
stc
outs
dec
repnz
in
fisub
or
push
jl
pop
mov
push
mov
mov
sbb
(bad)
(bad)
pushf
inc
mul
mov
pop
(bad)
loop
pop
lea
or
out
les
shr
cmps
in
xor
lods
cmc
xor
cmps
fisttp
loope
adc
mov
dec
add
icebp
mov
fcomip
cmc
jmp
pop
(bad)
jg
(bad)
cli
jmp
(bad)
out
fistp
repz
mov
jnp
rcr
adc
data16
shl
stos
xchg
cwde
movs
hlt
(bad)
jmp
out
mov
sbb
rcl
add
stos
cmp
jae
jbe
jb
sbb
xchg
cmp
in
or
clc
jb
ret
and
mov
retf
push
xchg
ss
adc
jno
fldenv
sbb
push
pusha
fdiv
neg
cld
jmp
enter
cmp
mov
dec
pusha
xchg
out
sub
je
jnp
dec
cmp
ja
mov
dec
mov
or
retf
cmp
in
mov
int3
xor
imul
out
in
add
cs
mov
arpl
xchg
dec
and
jg
fnsave
mov
cmc
cwde
adc
addr16
cmc
jo
adc
xchg
adc
inc
push
cmps
cmc
cmp
cmp
or
es
sbb
and
(bad)
pop
inc
out
pop
imul
mov
or
ins
push
ins
add
dec
xor
mov
mov
sbb
push
fisttp
jle
test
data16
popa
retf
dec
or
mov
jno
lds
add
cmp
ins
stos
pop
adc
shl
adc
arpl
pusha
sbb
out
mov
adc
retf
scas
mov
call
xchg
sti
or
xor
(bad)
jl
mov
cmp
xchg
addr16
pop
pop
(bad)
sub
sbb
push
ins
dec
xchg
ja
out
cmp
unpcklps
mov
jle
fild
add
out
jbe
icebp
jp
(bad)
addr16
sbb
repz
stc
jmp
test
jg
jle
iret
xor
cmc
inc
push
pop
mov
pop
in
call
es
movs
add
ins
push
loope
pop
bound
adc
ds
daa
data16
lahf
sub
xlat
sbb
push
not
ja
dec
rcl
jecxz
jno
cmp
cmp
outs
inc
xor
les
sar
xor
pop
and
lods
add
mov
add
sahf
cmp
sahf
clc
push
mov
adc
mov
test
jb
xchg
js
clc
cmp
mov
scas
push
gs
int
jmp
add
fidivr
pop
inc
mov
(bad)
push
ret
mov
call
jns
popf
into
push
dec
xchg
inc
fsubr
push
cmps
popa
ss
mov
ror
and
inc
fstp
add
mov
add
loop
pusha
jne
loop
jecxz
(bad)
cmp
loope
adc
inc
add
imul
mov
out
xchg
iret
sub
sbb
in
mov
or
fs
mov
mov
pop
in
push
dec
jno
fcom
lds
sub
adc
xor
dec
mov
(bad)
repnz
stos
pop
stos
mov
inc
xchg
popa
mov
int3
rcr
out
pop
ret
cmp
imul
(bad)
aad
push
in
scas
push
repnz
bound
imul
mov
push
sub
out
xor
or
iret
jbe
dec
mov
jmp
adc
(bad)
ror
cmp
pop
ins
push
sbb
(bad)
lock
arpl
xor
cmp
dec
jg
shr
scas
outs
(bad)
cli
mov
(bad)
stc
std
scas
lds
mov
push
ins
sbb
cmc
pop
scas
dec
aas
dec
cmp
cmp
pop
xchg
jmp
mov
sub
push
and
out
popa
sti
pop
test
aas
add
inc
stos
scas
fmul
mov
wrmsr
jnp
push
nop
jmp
cwde
pushf
ret
xor
rcr
pusha
into
cmp
push
in
neg
nop
stc
pusha
xor
dec
inc
jbe
jmp
dec
leave
cmp
jmp
pop
ror
(bad)
dec
mov
cdq
push
mov
(bad)
not
sbb
fstp
mov
mov
sbb
(bad)
fadd
add
hlt
into
lods
pusha
pop
clc
xchg
sub
daa
and
cwde
mov
idiv
fisubr
retf
jae
retf
cmp
cmp
sub
ds
xchg
mov
daa
sbb
fnop
sub
dec
mov
div
xchg
out
or
sbb
jge
test
cmps
cmp
push
xchg
les
mov
sub
sub
arpl
aaa
pop
pop
hlt
add
stc
add
or
sbb
mov
mov
sar
cmp
sbb
jb
(bad)
mov
jno
(bad)
je
retf
push
inc
dec
lds
push
(bad)
jge
(bad)
fidivr
xchg
in
jge
pop
shr
shr
mov
xchg
int
lea
pop
lods
push
call
scas
cmps
sbb
jae
jne
out
mov
and
pushf
nop
fwait
adc
sbb
fs
lods
aad
jge
jg
or
outs
sub
xor
or
add
popf
in
jbe
(bad)
fisubr
sub
fidivr
dec
inc
in
or
sti
xlat
xlat
scas
jl
(bad)
scas
mov
leave
pop
cmp
sbb
push
xor
sub
xor
mov
test
pop
(bad)
idiv
jmp
adc
inc
and
(bad)
mov
test
mov
lods
ror
dec
(bad)
dec
(bad)
repnz
adc
pop
mov
pop
sbb
sub
add
mov
inc
add
scas
xchg
rcl
and
es
cwde
and
call
ss
add
add
and
stos
sbb
xchg
push
push
les
call
sbb
mov
mov
inc
bound
ja
adc
scas
jl
dec
bound
iret
in
test
push
shl
jmp
pusha
imul
in
cmps
mov
jmp
sub
movs
ret
test
(bad)
or
xor
call
aaa
outs
movs
out
add
add
mov
inc
ds
xchg
js
mov
es
jo
in
xchg
leave
or
rol
cld
jl
jbe
data16
repnz
out
cdq
jo
jge
inc
cmp
xchg
repz
jo
sub
xchg
and
adc
sbb
ins
xchg
jle
inc
adc
mov
int3
imul
(bad)
adc
xor
mov
bound
stc
cmp
sbb
sub
mov
or
ja
aad
int3
xchg
dec
push
es
sbb
xchg
push
or
dec
cdq
push
(bad)
out
daa
std
push
inc
sub
dec
das
cmp
ins
pop
cmps
dec
es
shr
and
lods
cmp
or
ja
jae
scas
daa
mov
in
aam
jmp
(bad)
mov
aas
aas
cmp
call
jg
or
cmp
les
cwde
dec
test
xlat
in
adc
cmp
ins
or
mov
xchg
cdq
out
aam
and
lods
push
int
fcom
movs
dec
xchg
rol
pop
rcr
rol
enter
cdq
or
push
pop
jl
outs
mov
cs
daa
ja
add
inc
dec
jb
sti
mov
push
movs
jne
lods
sub
or
xchg
adc
mov
out
lods
loope
int3
pushw
xchg
xchg
rol
push
lods
cmps
cwde
cmp
ja
mov
dec
and
stc
dec
jb
loopne
xchg
addr16
jecxz
ror
push
jae
dec
lods
mov
out
push
ret
adc
in
hlt
cmp
lods
repnz
shr
mov
pusha
(bad)
fsub
inc
mov
and
and
inc
jae
sbb
adc
cmp
xlat
add
enter
adc
xchg
out
dec
xchg
loop
(bad)
movs
(bad)
in
rcl
fs
jmp
pop
pop
stos
dec
ja
ins
stc
mov
sbb
scas
add
and
test
xor
cmp
add
dec
pop
push
jp
movups
ss
ret
jge
and
jecxz
mov
inc
ret
push
rep
jecxz
retf
mov
sbb
mov
dec
outs
pop
sub
xchg
cmc
and
not
test
aam
pop
add
xlat
or
fld
jle
jmp
in
fisubr
cmp
cmp
add
or
fisttp
push
ret
jae
ret
stos
ds
clc
mov
paddd
jg
retf
add
jae
jecxz
fdiv
jecxz
cmps
cmps
cs
xor
jb
pop
jnp
cmps
nop
cmp
scas
es
pop
inc
call
mov
jecxz
sub
retf
pop
jmp
das
es
bound
ret
lods
adc
scas
push
stos
pop
inc
nop
hlt
and
cmp
cmp
leave
arpl
pop
lahf
mov
shl
inc
shl
in
mov
in
or
sbb
lea
add
and
repnz
cmps
int
inc
inc
out
imul
inc
xchg
and
sub
movs
std
push
pushf
mov
in
icebp
and
jne
pop
aam
ins
add
fcom
dec
rcr
pop
mov
das
loopne
and
xor
xchg
xchg
dec
mov
cwde
or
retf
stc
inc
inc
dec
lock
xchg
jmp
push
or
stc
adc
xor
in
sbb
pushf
popf
in
add
xchg
int
daa
popf
sub
adc
popf
idiv
push
adc
inc
add
dec
and
cmps
xchg
out
xor
add
dec
cmovb
bound
int
das
mov
push
sbb
(bad)
mov
outs
and
(bad)
in
imul
xor
lock
loop
pushf
add
push
xchg
movs
popa
jbe
pop
retf
adc
push
in
xor
out
add
movs
sub
in
std
pop
push
and
mov
out
test
popa
sbb
jne
pop
dec
stos
add
jmp
and
mov
shl
cs
outs
add
retf
jg
scas
(bad)
in
movs
push
int3
cdq
and
sbb
mov
test
das
push
lahf
call
xchg
rol
inc
pop
inc
mov
in
sub
jmp
jne
mov
sub
lock
lods
adc
push
fs
rcr
dec
mov
mov
push
mov
test
sbb
jb
mov
push
xchg
jge
inc
mov
test
adc
pushf
sbb
cmp
aam
cmps
ret
xchg
(bad)
fidivr
ins
cmp
rcr
xchg
ja
mov
scas
xchg
jnp
outs
js
jp
cmp
pop
dec
inc
pop
mov
cmp
test
fwait
jp
or
rcr
or
inc
into
div
in
adc
ss
sub
mov
mov
cmp
enter
cmp
out
(bad)
aam
or
inc
iret
or
dec
les
mov
inc
fisubr
dec
fwait
add
cmp
cs
clc
and
ret
jnp
pop
dec
xchg
push
fiadd
fsub
lahf
or
push
ret
sub
dec
adc
pop
call
sub
les
pop
loopne
ds
jnp
rcr
inc
and
sub
sbb
dec
inc
xchg
mov
xlat
test
dec
in
and
into
xor
test
cmp
dec
icebp
out
xlat
push
jb
(bad)
dec
sub
jp
sub
pop
sub
retf
iret
pop
lds
pop
movs
dec
into
call
pop
dec
or
sub
jecxz
pop
(bad)
dec
dec
fld
stos
and
and
outs
movs
loop
push
mov
fpatan
jmp
cmp
cmp
push
mov
jae
mov
and
test
dec
push
je
mov
push
inc
test
(bad)
data16
mov
push
ds
icebp
mov
iret
lds
sub
xor
jmp
inc
jnp
addr16
in
and
repz
out
icebp
(bad)
dec
test
xchg
test
xor
jg
mov
(bad)
push
pop
sub
and
push
sub
push
fwait
cmp
pop
pop
dec
push
test
dec
imul
push
cmp
jecxz
mov
and
cmp
fadd
cmp
pop
arpl
add
pop
or
push
adc
jmp
fs
ds
lods
inc
out
mov
mul
test
add
iret
neg
jle
xchg
xchg
pop
js
out
mov
mov
cmp
xor
scas
cwde
pop
adc
dec
dec
cmp
dec
sub
mov
push
fwait
lahf
stos
mov
cld
xchg
fucomi
push
add
inc
out
sbb
iret
js
or
call
(bad)
dec
and
(bad)
test
xchg
adc
dec
jno
fnstsw
xchg
push
mov
lods
lock
daa
xor
mov
mov
mov
gs
jl
ins
mov
sbb
mov
inc
ret
mov
and
in
ins
push
pop
stos
mov
hlt
cdq
icebp
in
js
inc
pop
or
ja
jae
popf
out
int3
xchg
popa
and
sub
sub
pop
and
xor
adc
dec
movs
(bad)
pop
dec
add
jbe
mov
sub
shr
and
(bad)
sti
pushf
xchg
(bad)
cmps
ret
call
push
sbb
pop
mov
ret
jne
aam
(bad)
jno
es
jne
lahf
fsubr
xchg
repz
sbb
sbb
inc
loopne
dec
sbb
push
pop
jne
jl
cmc
sub
neg
jae
cmp
jb
jmp
js
out
lods
fmulp
loopne
jb
pop
pop
icebp
jmp
pushf
cmp
mov
sysenter
retf
aaa
push
pop
loop
and
push
dec
inc
das
and
fs
sub
sub
sti
sub
aad
jmp
jp
jg
lds
pop
enter
test
sub
leave
mov
sbb
bound
adc
or
std
sub
int3
sti
clc
popa
adc
mov
or
sub
jp
loop
adc
ret
mov
scas
dec
fwait
mov
mov
fs
aaa
call
dec
call
jb
mov
push
mov
dec
les
lods
mov
jno
stos
iret
xor
mov
xchg
outs
jbe
les
cmp
mov
pop
cli
test
mov
mov
jecxz
ror
pop
(bad)
lea
cmps
mov
stc
fidivr
mov
fsubr
xor
mov
call
(bad)
std
or
aas
test
daa
stc
jb
cmp
sbb
sbb
aaa
jo
mov
into
clc
adc
push
xor
sbb
push
or
mov
xchg
dec
add
pop
mov
mov
pop
push
mov
mov
into
and
adc
ret
out
dec
mov
ins
ror
repz
mov
mov
fdiv
out
add
mov
popf
mov
mov
pop
lds
cmp
mov
mov
scas
ret
inc
movs
neg
fimul
loop
ret
and
test
xchg
cmp
and
dec
das
loop
loope
std
adc
out
lds
adc
cmp
neg
xchg
shl
(bad)
xchg
fs
xor
mov
xchg
outs
mov
popa
clc
pcmpeqw
pushf
int
jb
jmp
pop
fist
pop
or
fs
call
hlt
inc
pop
(bad)
jno
lods
sub
retf
es
outs
add
or
shr
mov
push
cwde
add
or
add
cmps
lds
pop
adc
cmp
(bad)
and
jl
inc
xchg
push
jb
push
sbb
dec
ins
movs
lods
xor
jbe
mov
sahf
adc
mov
daa
pop
retf
cmps
ficom
mov
xchg
jo
xchg
mov
mov
inc
push
xchg
adc
fs
data16
push
sub
sbb
mov
inc
and
lods
pop
sub
mov
cmp
and
jl
inc
daa
mov
mov
stos
les
or
mov
ret
sub
and
aas
push
ss
jecxz
inc
cdq
sub
sub
inc
dec
cmps
push
inc
pop
push
or
add
lods
cmp
ret
cmp
xchg
mov
push
retf
neg
dec
sti
mov
fdiv
fldenv
push
push
ins
dec
bound
sub
mov
dec
rcr
leave
mov
sbb
sar
sbb
stos
bound
fld
cmp
dec
stc
dec
add
scas
movs
cmp
dec
mov
jae
daa
jne
loopne
popa
inc
out
jae
test
mov
cmp
push
ucomiss
jb
mov
dec
js
nop
and
push
dec
repnz
mov
mov
xor
or
les
mov
inc
xor
out
sbb
sbb
or
push
jns
pop
pop
outs
adc
call
sti
les
cmp
into
pushw
and
neg
jnp
adc
mov
in
xchg
push
in
popf
push
(bad)
fcomp
pop
int3
clc
cmp
nop
int3
call
sti
xchg
mov
fninit
cmp
or
into
adc
sub
push
or
inc
jo
mov
mov
ret
push
mov
inc
retf
jno
add
mov
sub
adc
adc
and
push
push
aaa
lds
push
call
adc
push
in
mov
lea
ror
js
dec
lods
xlat
(bad)
imul
add
inc
add
outs
sub
mov
sub
mov
and
in
push
popf
mov
call
popf
sub
sub
in
and
ror
sub
and
call
inc
sbb
inc
(bad)
push
stc
ret
xor
mov
(bad)
or
mov
sub
xchg
jb
xchg
xor
xorps
lock
rcr
xor
(bad)
pop
push
call
out
jmp
push
mov
scas
cmp
jne
adc
movs
inc
pop
xchg
call
pop
adc
ins
xchg
xlat
mov
mov
and
or
dec
bound
test
ja
adc
sub
mov
jno
popw
imul
mov
pop
ret
xchg
icebp
jg
rcl
pop
or
aaa
int3
rcl
mov
xchg
xchg
pusha
pusha
sar
mov
inc
xchg
pop
and
xchg
ins
lock
xchg
mov
xchg
movs
dec
stos
scas
pop
sub
xlat
adc
xor
ror
dec
mov
mov
(bad)
mov
retf
jae
mov
adc
popa
mov
jne
and
jmp
cli
cwde
fstp
in
mov
cmp
sub
rcl
jge
clc
ror
mul
push
(bad)
aad
sbb
inc
fld
push
mov
sbb
test
into
xchg
dec
pop
add
arpl
hlt
jnp
xchg
scas
adc
scas
mov
mov
inc
mov
cmp
and
push
add
push
out
jge
in
dec
sbb
js
adc
ds
js
dec
in
xor
fwait
push
sub
adc
stos
mov
add
cmp
add
aas
cwde
inc
or
ror
inc
mov
or
jne
test
and
xor
js
fucomp
mov
push
push
sysexit
cmp
or
xor
dec
ss
xor
into
pop
enter
mov
fnstenv
inc
push
mov
jmp
dec
cmps
xchg
mov
and
add
cmp
mov
(bad)
les
imul
shl
cmp
jb
out
adc
sbb
and
int
mov
imul
mov
adc
xor
and
aaa
inc
mov
mov
stc
ror
inc
push
inc
outs
mov
jmp
int
repz
shl
cwde
fs
loop
ret
mov
enter
ror
pop
inc
ret
das
mov
or
jl
inc
dec
push
retf
push
loop
push
mov
ret
xchg
inc
ja
cwde
sbb
cmp
loopne
cli
repnz
call
mov
call
stc
aad
test
xchg
cdq
movs
bound
sbb
les
inc
mov
ficom
hlt
je
and
and
xchg
cmc
out
pop
sbb
into
dec
movs
mov
jle
daa
je
(bad)
sub
pop
aam
pop
cmp
in
jecxz
pop
pop
push
sub
or
les
xor
dec
or
pop
jmp
xor
sub
dec
bound
inc
jle
mov
mov
repnz
ds
lds
jl
scas
sub
jb
stc
mov
jb
ins
sbb
mov
ret
mov
nop
je
xchg
mov
mov
rol
adc
sub
cmp
(bad)
test
lea
fcmovbe
loop
movs
cmps
in
and
leave
and
mov
or
daa
adc
lods
test
pushf
inc
imul
add
adc
dec
out
stos
(bad)
xor
cmp
xchg
shl
pop
test
mov
call
inc
stos
add
cmps
adc
fdiv
add
jae
fdivp
cmp
je
push
movs
push
sbb
cmps
dec
sbb
cld
addr16
test
mov
pop
loope
sbb
xchg
sub
out
pop
data16
push
stos
and
sub
xchg
and
mov
int3
mul
xor
movs
daa
imul
adc
sbb
cld
ds
pop
cmp
adc
popa
clc
cmp
pop
jns
mov
push
es
cwde
dec
mov
xchg
outs
fcompp
sub
jo
div
push
adc
mov
ficomp
sub
mov
mov
push
xchg
xchg
or
out
and
loope
jmp
out
pop
adc
dec
popf
or
mov
pop
int3
popf
lds
sbb
scas
pop
retf
(bad)
out
in
sub
pop
mul
push
(bad)
push
popa
fld
add
mov
adc
fwait
(bad)
in
lds
or
adc
imul
mov
add
sub
imul
adc
imul
cmps
daa
xor
lock
loop
(bad)
and
inc
jne
ds
sbb
mov
shl
adc
add
mov
cs
jmp
(bad)
call
push
adc
and
mov
push
add
(bad)
dec
pop
mov
xor
xchg
das
test
imul
sub
sbb
jle
ins
and
adc
out
jno
mov
inc
enter
add
in
push
xor
and
retf
ja
hlt
fst
sub
push
push
dec
add
les
add
mov
dec
add
jne
dec
mov
and
fst
aam
add
push
xchg
popa
and
shl
imul
xchg
jbe
xor
and
and
ss
leave
lds
and
into
stos
adc
push
add
push
in
les
cs
xchg
mov
fisttp
ja
outs
mov
imul
mov
fcom
mov
call
jmp
adc
push
and
les
test
aam
cmp
test
xchg
inc
mov
ror
test
test
out
push
cmps
sub
mov
jae
jle
push
mov
ja
bound
xchg
sub
fs
push
sti
addr16
mov
adc
xor
pop
data16
test
into
sub
push
push
jmp
and
sub
ds
shl
jmp
fist
out
cmp
inc
ins
and
bound
iret
push
dec
mov
lods
ret
ins
xchg
pop
or
ja
aam
sub
or
neg
(bad)
gs
shl
push
pop
add
dec
pop
xchg
jae
pop
xor
outs
sbb
cmps
xor
and
mov
xchg
mov
push
es
mov
xchg
ins
jg
out
pop
movs
jg
out
es
mov
xor
ss
xor
adc
add
xor
in
call
cmp
lds
int
dec
rcl
xchg
mov
mov
push
jnp
sub
shl
imul
hlt
add
xchg
or
sub
jno
push
jb
lahf
lds
outs
imul
cs
enter
add
mov
push
sti
inc
inc
outs
mov
loop
repz
mov
inc
cdq
loope
xor
stc
enter
xor
xchg
xchg
repz
push
xchg
push
pop
sbb
jb
mov
add
dec
or
je
xchg
nop
movs
out
std
(bad)
sub
xchg
mov
aad
repz
or
pop
std
rol
mov
xchg
push
mov
pop
jns
mov
mov
arpl
scas
div
pop
jo
adc
pop
enter
inc
dec
inc
sbb
stos
adc
inc
xchg
ds
jb
mov
pop
call
in
aad
retf
mov
inc
or
loopne
push
add
add
in
inc
in
lods
xchg
rol
mov
xchg
dec
dec
add
aam
mov
sbb
push
and
push
jmp
mov
xchg
fidiv
sub
jne
adc
inc
dec
movs
xchg
aam
call
push
mov
add
test
cmp
mov
cs
adc
es
rcr
sbb
fwait
std
mov
xchg
mov
fwait
mov
(bad)
add
push
jo
rcr
or
fs
pop
jb
repnz
leave
push
cmp
and
jno
mov
stos
repz
cmp
(bad)
sub
and
jp
(bad)
xor
pop
inc
sub
(bad)
mov
test
pusha
imul
cs
xor
mov
shl
retf
cdq
jne
adc
fldcw
xor
xchg
cmp
mov
mov
or
hlt
adc
push
jbe
mov
mov
mov
sbb
in
pop
sbb
dec
mov
sahf
dec
ror
dec
dec
ficom
call
and
or
shrd
ja
add
mov
jne
inc
mov
into
and
arpl
jecxz
(bad)
mov
and
fstp
mov
das
movs
fs
aaa
lods
cmp
test
js
dec
and
ds
and
aaa
and
(bad)
repz
out
push
pop
mov
jmp
mov
mov
loope
or
jl
and
inc
dec
imul
inc
pop
mov
int
les
cmc
push
or
sub
ja
pop
pop
outs
xchg
mov
mov
imul
mov
mov
inc
out
cdq
pop
dec
mov
fwait
(bad)
repz
fcomp
cwde
sahf
ds
xchg
inc
sub
mov
nop
push
out
add
sar
add
imul
xchg
cmp
(bad)
pushf
sbb
cmp
mov
lds
aaa
xor
sbb
xchg
fldcw
pop
hlt
mov
ss
fs
aad
xchg
push
stos
jo
aam
jg
cmp
jo
xchg
push
leave
xor
jmp
test
cwde
pop
cli
bound
jecxz
or
call
into
pop
cli
das
inc
inc
fidiv
mov
dec
xor
ret
push
scas
nop
xchg
push
ret
sub
rcr
sbb
clc
xor
idiv
mov
xor
mov
mov
lods
loope
sub
into
lds
sbb
jmp
imul
mov
mov
xchg
add
or
aaa
lock
sub
ins
dec
jl
adc
mov
enter
call
iret
lds
or
cli
in
out
and
stos
movs
scas
xchg
call
xchg
adc
cmp
and
mov
dec
push
popf
scas
jae
int3
add
dec
add
dec
out
mov
scas
xchg
mov
les
lahf
cmp
(bad)
cmp
es
cwde
js
call
push
jp
push
mov
xor
lods
mov
int3
jge
xchg
mov
pop
xchg
jbe
ins
ss
xchg
cmp
jmp
push
es
in
scas
mov
pusha
xchg
imul
into
add
stos
ss
(bad)
dec
retf
sti
pop
jnp
xor
push
cmp
lahf
and
mov
pop
imul
push
retf
(bad)
push
mov
mov
shl
popf
aad
add
xchg
sbb
inc
(bad)
mov
rcr
sub
call
push
mov
iret
sbb
dec
movs
inc
inc
pushf
push
jmp
jae
inc
jmp
xor
mov
sub
sub
lds
pop
xchg
dec
repz
push
xor
sbb
ss
gs
sar
cld
shr
xchg
js
sar
arpl
xchg
or
dec
xchg
xor
cmp
sbb
jbe
(bad)
int
xchg
cld
test
adc
mov
fidivr
ffree
int
cmp
movs
movs
jne
(bad)
fcmovbe
dec
xchg
pop
or
sub
sbb
aam
cmps
lods
xor
bound
jp
push
cmps
xor
bound
out
data16
pusha
push
inc
jl
xor
jecxz
fidivr
jae
xchg
test
xchg
es
cs
jge
idiv
pop
int3
cmps
xchg
fist
mov
mov
popf
xchg
mov
push
lods
and
(bad)
cmps
outs
stos
fld
sub
ins
push
adc
popa
fld
or
repnz
push
inc
sub
fimul
jb
ja
or
pop
je
cmp
popa
mov
mov
and
push
adc
or
push
pop
mov
add
mov
ins
adc
icebp
push
mov
and
gs
and
xchg
and
shr
xchg
xor
jmp
loopne
mov
fisubr
addr16
xchg
sahf
push
(bad)
fld
mov
imul
xchg
push
loop
mov
shl
lods
scas
push
ss
adc
jae
fisttp
ret
push
in
int
sub
mov
inc
or
movs
es
xor
xor
sbb
dec
jb
jbe
ins
das
adc
aam
jl
lock
retf
ins
sub
xchg
push
bound
and
shl
cwde
adc
jle
dec
push
push
mov
jbe
mov
push
mov
movs
xor
ds
push
fxch
movs
inc
fadd
or
pop
scas
mov
ds
out
dec
push
cmp
fsubr
pop
hlt
rol
cli
cld
aam
push
mov
sti
test
cmp
add
call
daa
adc
mov
xchg
mov
ins
lds
aas
or
sub
pop
inc
aad
adc
cmp
fimul
xor
cmps
out
mov
dec
popa
mov
or
mov
enter
outs
pop
mov
sub
dec
mov
imul
sar
mov
dec
data16
pop
push
or
(bad)
outs
lock
adc
(bad)
dec
aam
(bad)
retf
push
cmc
push
lahf
xchg
mov
ins
cmc
adc
adc
aam
inc
movs
push
mov
and
cmp
mov
fisubr
not
in
imul
sar
and
ret
lods
or
jns
or
push
ins
ficom
sahf
dec
jle
pushf
int
(bad)
out
cwd
popf
and
pop
cmc
or
lods
hlt
xchg
(bad)
fnstcw
or
pushf
jge
mov
cs
call
pop
mov
test
mov
pop
pusha
mov
cdq
retf
(bad)
test
movs
xchg
in
jo
push
call
clc
cwde
dec
dec
mov
dec
(bad)
adc
retf
outs
popa
jno
inc
pop
xchg
mov
and
cmps
stos
fldenv
and
mov
pop
and
mov
pop
movs
mov
pop
pop
in
mov
ja
test
push
pop
pop
pop
mov
imul
pop
int
call
lock
and
daa
int
(bad)
call
adc
ss
ret
push
or
mov
cs
pop
inc
cmps
mov
push
cmps
or
ins
and
sub
call
and
imul
enter
adc
imul
outs
pusha
jns
jecxz
sar
stos
inc
call
ja
movs
cdq
jmp
dec
push
push
gs
mul
daa
inc
mov
call
mov
scas
mov
jmp
ins
call
or
lea
dec
fwait
pop
jmp
push
xor
jo
movs
and
jbe
push
sub
jl
nop
and
pop
and
sub
rcr
pop
in
pop
movs
stos
cmp
out
pop
(bad)
aam
mov
dec
pushf
repnz
mov
lods
aas
xchg
xor
int3
imul
mov
out
cli
sahf
sub
lock
inc
and
pusha
ja
addr16
sbb
adc
adc
xor
(bad)
lods
test
pop
mov
in
mov
cmp
push
dec
test
cld
hlt
mov
arpl
cwde
push
dec
cli
push
xor
test
or
jge
jnp
int
xor
fstp
test
outs
adc
xchg
hlt
arpl
(bad)
ret
scas
push
pop
dec
add
mov
jmp
push
mov
aas
test
add
sbb
sbb
fwait
xor
push
mov
add
stos
mov
cli
dec
fadd
add
push
sub
or
fld
fnstenv
je
sti
stos
retf
mov
in
push
cmp
or
cwde
xchg
out
push
fst
popa
cld
push
push
adc
push
outs
(bad)
pop
stc
xchg
dec
cmps
mov
sub
jle
addr16
and
or
loopne
mov
pop
mov
xchg
pop
sub
xchg
pushf
mov
jns
fst
out
xchg
dec
shr
xchg
call
or
mov
ret
imul
out
in
sub
retf
jb
dec
pushf
jb
mov
out
or
sbb
test
sub
cs
mov
pop
cmc
je
movs
sub
scas
sbb
jle
in
pop
xchg
shr
pop
jg
adc
pop
loop
aam
aam
movs
push
mov
adc
sub
pop
pop
out
pop
rcl
add
or
mov
push
xor
pop
cld
fwait
(bad)
repnz
fild
sub
sbb
cmps
(bad)
mov
inc
imul
cmp
sbb
out
data16
push
call
pop
fs
fidiv
push
mov
push
add
fwait
adc
aaa
mov
sub
dec
cmps
push
fs
adc
ins
jo
aas
mov
fsubr
mov
fiadd
test
aas
dec
loop
pop
mov
pop
xor
cmps
leave
je
mov
jl
inc
shl
aas
cmp
(bad)
outs
add
sbb
or
ja
push
sub
gs
dec
pop
jns
pop
push
mov
push
dec
jmp
iret
sub
stc
sbb
push
shl
mov
loope
pop
xchg
xchg
fcomp
sub
xor
je
test
jnp
ins
or
aad
mov
mov
aad
sbb
mov
(bad)
dec
pop
mov
lods
push
mov
lods
mov
aaa
jmp
xor
xchg
xchg
pop
inc
inc
fst
stos
fadd
or
cmp
inc
jno
adc
cmp
(bad)
fst
test
movs
dec
push
and
sub
sub
adc
shl
inc
sub
pop
rcl
pop
dec
xchg
inc
push
mov
lods
add
push
sbb
movs
dec
addr16
and
mov
xor
test
ja
loop
mov
xchg
or
test
stos
adc
fisub
jmp
ds
mov
xchg
ss
outs
xchg
sub
add
pop
mov
mov
fadd
les
inc
push
test
jmp
enter
pop
repnz
bound
adc
sub
or
mov
aaa
into
pop
call
mov
shl
xchg
ror
int
jne
sti
xchg
clc
nop
sub
imul
push
sub
scas
lods
(bad)
test
loope
shr
mov
inc
(bad)
cmp
nop
test
mov
mov
clc
mov
or
ins
dec
dec
pop
cmp
cmp
push
sub
mov
pop
xor
inc
mov
ret
inc
scas
push
imul
pop
mov
int3
sub
nop
ficomp
inc
icebp
mov
rcl
scas
or
loopne
fiadd
cmps
dec
daa
int
pop
push
and
jb
cmps
sar
stos
jnp
mov
push
jo
cmp
xchg
pop
clc
(bad)
in
add
cdq
ins
pop
mov
adc
inc
or
push
mov
(bad)
movs
mov
push
push
ss
test
mov
mov
in
push
retf
push
xchg
scas
add
jb
sub
cmps
ins
push
mov
jo
and
call
xchg
loop
and
jl
inc
add
test
mov
outs
test
or
sbb
(bad)
push
loop
in
repnz
or
jnp
xchg
gs
test
cmp
fmul
retf
adc
into
in
outs
pop
inc
add
cmp
inc
call
in
xchg
arpl
mov
xor
cli
inc
sbb
mov
int
outs
mov
rcr
push
sbb
fisttp
cmp
xor
jae
mov
popa
retf
stos
je
xor
dec
fisttp
cmp
xchg
add
dec
iret
pusha
out
jne
test
ins
add
sub
enter
xor
fcmovu
dec
xchg
test
or
out
pop
imul
lds
mov
aad
std
mov
mov
movs
xchg
adc
push
and
add
dec
sbb
mov
cmp
je
fbstp
(bad)
test
and
push
pop
scas
aaa
movs
shl
push
push
xchg
int3
loop
sub
test
sub
add
adc
push
shl
and
adc
mov
popf
inc
push
sti
cmp
sbb
inc
or
add
mov
bound
data16
repnz
jp
mov
and
inc
xor
cld
jmp
push
shr
jge
dec
adc
or
jns
or
clc
aam
push
cmps
xor
mov
je
in
inc
and
imul
jb
out
push
ret
push
add
or
lods
jp
push
test
into
nop
dec
add
adc
adc
test
retf
add
rol
leave
out
pop
popf
out
fs
out
fcmovnbe
dec
jmp
inc
adc
scas
cs
(bad)
cwde
test
xchg
and
loopne
mov
shl
pop
cmp
fcmovb
xchg
dec
xchg
ret
lods
add
pop
mov
aaa
div
fist
in
push
in
mov
xor
das
add
inc
adc
popf
cmps
or
movs
adc
mul
aad
std
scas
pop
mov
jo
cwde
xor
mov
adc
mov
stos
mov
stc
ficom
fs
and
push
push
inc
aas
or
lods
inc
xchg
in
int
cli
(bad)
mov
pop
or
and
mov
je
push
clc
ins
(bad)
fsubr
mov
mov
add
test
inc
inc
xor
xchg
imul
ficom
mov
sbb
sub
sbb
jmp
jge
movs
dec
outs
test
sub
pop
aad
mov
sbb
sub
add
outs
not
pop
ficomp
adc
cmp
(bad)
xchg
outs
xor
add
xchg
ja
add
int3
pop
dec
jns
dec
mov
sub
and
sub
push
test
jp
jmp
pop
push
sbb
sbb
mov
loope
fistp
pop
icebp
and
xor
or
fnstsw
lods
cmp
fisub
inc
nop
lods
shl
fidivr
xchg
jg
dec
mov
dec
mov
rol
pop
push
pop
mov
lds
mov
push
mov
xchg
sub
stos
leave
in
mov
movs
fwait
jae
or
fbld
loopne
xor
xchg
add
jg
stos
loop
dec
push
mov
add
push
mov
imul
push
jmp
pop
sub
out
into
pop
(bad)
fisub
mov
cs
dec
sub
enter
and
mov
stos
repz
shl
retf
out
pop
stos
fs
inc
mov
stos
movs
(bad)
adc
push
jl
sub
out
or
add
cli
xor
inc
call
pop
push
xchg
je
mov
das
add
stos
popf
in
icebp
cmps
jb
xchg
mov
repnz
xchg
in
mov
sbb
popf
jbe
or
aam
mov
data16
lods
pop
mov
fs
mov
adc
mov
mov
ss
add
push
push
xchg
sbb
cmc
jne
int3
pop
and
dec
jno
jmp
bound
lock
mov
mov
int3
jb
cmps
mov
push
cmp
jns
pop
add
dec
pop
lods
xchg
hlt
shl
mov
scas
jne
jbe
mov
in
dec
stos
cdq
sbb
(bad)
fpatan
mov
xchg
stos
not
scas
ds
xor
mov
xlat
dec
mov
sti
xchg
adc
leave
pop
jge
jmp
push
movs
mov
mov
cmp
je
push
test
mov
adc
iret
sub
stos
jge
xor
int
nop
inc
jo
mov
cmc
cmc
xor
push
addr16
nop
or
inc
adc
fwait
mov
imul
jp
mov
scas
mov
mov
dec
aam
jne
js
rol
and
out
ja
ret
sbb
and
push
xchg
adc
std
pop
fild
sahf
and
cmps
repnz
cli
mov
rcr
imul
mov
mov
cdq
data16
ror
inc
inc
jae
icebp
stos
addr16
cs
pop
sub
inc
mov
(bad)
or
aam
pushf
or
xchg
fwait
dec
pop
stos
jmp
stos
jle
mov
stc
push
sbb
push
and
scas
inc
pop
adc
mov
cwde
pop
sub
mov
lds
stos
mov
pop
imul
mov
cmps
push
sub
pop
push
imul
(bad)
mov
adc
xlat
dec
mov
test
push
add
xor
sub
sbb
out
cmp
jnp
or
ins
pusha
out
jecxz
sbb
or
imul
adc
mov
mov
cs
call
ins
movs
ret
shl
bound
fwait
test
sti
shl
mov
dec
sub
retf
movs
sub
dec
int
cmp
push
call
pop
out
mov
nop
fld
cmp
xchg
mov
inc
sbb
mov
imul
mov
pop
movs
bound
lods
ret
jp
popf
in
hlt
jne
push
and
sbb
jo
ficomp
and
xchg
dec
jmp
das
push
inc
add
jp
fist
mov
cmp
into
inc
imul
mov
lods
es
int3
sti
outs
popa
xor
sub
je
(bad)
push
push
push
stos
jbe
cmp
rcl
pop
xchg
sbb
dec
test
push
out
clc
loop
jmp
test
push
cmp
pop
and
sar
mov
pop
or
popa
cli
push
mov
cmp
and
inc
cdq
inc
and
shl
sub
cs
and
je
xor
mov
test
mov
(bad)
nop
fdiv
push
push
push
arpl
clc
pop
mov
mov
neg
and
scas
push
xchg
mov
inc
adc
lahf
jbe
push
icebp
add
in
xchg
scas
add
pop
je
mov
pop
(bad)
jae
push
dec
cmps
dec
jb
inc
mov
jmp
pop
inc
bswap
popf
fiadd
ds
pop
or
jp
stos
jmp
mov
into
rcl
aad
(bad)
repnz
mov
setle
push
cmp
mov
outs
or
inc
jns
hlt
jg
clc
jbe
lods
mov
push
dec
mov
cld
mov
and
dec
mov
shr
xor
xchg
sub
xchg
arpl
enter
sub
mov
sub
icebp
cmp
add
mov
inc
sub
hlt
pop
sti
jle
aam
mov
stc
mov
pop
mov
xor
add
add
dec
inc
scas
inc
pusha
and
out
add
or
or
add
or
add
add
add
xchg
or
add
add
jno
add
add
je
pop
je
outs
data16
popa
jb
add
outs
bound
dec
ins
popa
addr16
gs
fs
leave
gs
add
retf
dec
inc
inc
push
js
in
mov
jns
jle
mov
jp
ror
push
dec
push
jae
sbb
(bad)
aam
fmul
jbe
adc
dec
or
add
test
sbb
shl
sbb
rol
fs
mov
xlat
hlt
cli
out
mov
cmps
lahf
sti
data16
add
add
mov
jle
out
jnp
cmp
and
adc
and
std
xor
ret
and
sub
adc
inc
or
movs
nop
inc
or
test
nop
inc
or
movs
nop
inc
or
xor
nop
inc
clc
or
movs
nop
inc
or
movs
adc
inc
or
movs
nop
inc
or
movs
adc
inc
or
movs
nop
inc
or
test
nop
inc
or
movs
nop
inc
or
xor
nop
inc
clc
or
movs
nop
inc
or
movs
adc
inc
or
movs
nop
inc
or
movs
adc
inc
or
movs
nop
inc
or
test
nop
inc
or
movs
nop
inc
or
xor
nop
inc
clc
or
movs
nop
inc
or
movs
adc
inc
or
movs
nop
inc
or
movs
adc
inc
or
movs
nop
inc
or
test
nop
inc
or
movs
nop
inc
or
xor
nop
inc
clc
or
movs
nop
inc
or
movs
adc
inc
or
movs
nop
inc
or
test
nop
inc
or
movs
nop
inc
or
test
nop
inc
or
movs
nop
inc
cli
stc
xchg
test
and
into
in
movs
(bad)
mov
out
inc
mov
push
sub
test
dec
and
xchg
retf
jecxz
jecxz
push
sbb
loope
mov
pushf
mov
mov
pop
xchg
cs
out
ins
imul
out
loope
xchg
dec
and
sub
test
hlt
fdivr
clc
push
dec
out
fidiv
in
call
jno
iret
jae
xchg
inc
sub
push
clc
push
lds
or
mov
push
pmuludq
scas
pop
mov
inc
or
movs
nop
jle
loopne
pop
lods
push
cmp
mov
out
jge
aam
xor
sub
mov
and
mov
or
in
cs
sub
sub
sbb
mov
loop
or
movs
nop
inc
cli
in
dec
call
mov
mov
adc
stc
adc
adc
ret
and
aaa
push
(bad)
(bad)
and
pushf
iret
into
into
xchg
mov
mov
jnp
sub
and
movs
nop
jle
loope
js
clc
lahf
mov
std
fwait
jae
pop
sub
out
and
cmc
loope
add
call
pop
in
or
mov
mov
xor
dec
lea
leave
int
push
jmp
out
clc
cmc
mov
aam
into
cmp
mov
sub
iret
stc
stc
stc
mov
std
std
aas
push
(bad)
mov
xchg
pop
adc
dec
int3
or
mov
test
movs
pop
and
scas
pop
mov
(bad)
inc
fdiv
sub
daa
and
push
jmp
fst
imul
mov
movs
imul
or
movs
nop
inc
or
fild
fmul
xchg
daa
dec
jg
das
(bad)
jmp
stos
mov
or
nop
sub
mov
or
pop
scas
xor
test
test
pop
sub
fcom
push
xlat
aam
add
cmp
ss
dec
vmovntpd
ds
xchg
iret
pop
cmp
cmc
jmp
shl
push
dec
and
neg
push
outs
sti
xlat
outs
jle
outs
aas
pop
sub
pop
and
dec
repz
jl
push
retf
scas
jmp
jecxz
js
adc
adc
jno
lds
xchg
cdq
sahf
cdq
into
out
jne
ins
(bad)
(bad)
mov
fdivr
mov
dec
sahf
jb
vdivsd
out
fidivr
std
(bad)
(bad)
pxor
pop
pop
ret
push
dec
and
jl
mov
(bad)
pop
test
pop
scas
pop
sub
out
sub
lods
mov
adc
mov
loopne
sub
es
test
cmp
jo
mov
jbe
cmps
cmps
cli
aaa
mov
xchg
cmp
mov
aaa
mov
call
fistp
jl
pop
or
test
dec
and
in
fcomi
in
out
aaa
mov
popf
out
(bad)
push
jmp
popf
fwait
sbb
dec
pushf
mov
dec
arpl
std
push
adc
and
int3
in
addr16
or
fistp
add
xlat
scas
sbb
call
mov
repz
cld
(bad)
repz
out
movs
(bad)
(bad)
and
outs
jo
cmp
dec
and
icebp
jnp
ja
jl
pop
or
test
dec
and
ds
or
(bad)
jge
push
pop
aas
pushf
das
push
adc
xchg
int
dec
pusha
pop
cmc
cmp
sbb
cli
pop
pop
pop
jge
ds
dec
inc
mov
in
xor
jl
xor
ss
cmp
fwait
pop
mov
pop
jg
jg
pop
cmp
enter
mov
adc
pop
mov
mov
jl
fs
xor
mov
mov
test
dec
and
neg
xchg
aas
inc
jmp
movs
test
dec
movntq
pop
add
pop
pop
inc
cld
js
pop
sti
rol
pop
fist
sub
mov
and
lea
mov
cmp
ins
stos
outs
pop
xor
in
in
mov
test
movs
(bad)
cmc
(bad)
jecxz
mov
movs
shl
or
ja
sti
jp
jecxz
mov
push
sub
test
lock
jecxz
loope
cmp
and
pop
sbb
jae
jle
outs
aas
std
fldcw
jg
imul
leave
in
(bad)
popf
push
repz
mov
or
pop
nop
lods
or
arpl
lds
pop
aam
mov
sub
cli
(bad)
out
ja
jge
fdiv
cmps
cmp
xor
cmp
fcmovnbe
sahf
retf
pop
xchg
hlt
je
mov
jno
jbe
fwait
iret
in
shr
push
push
fisttp
pop
inc
dec
and
add
cdq
int
aas
hlt
out
mov
loop
test
bound
xchg
fwait
sbb
mov
mov
test
push
popa
ror
pop
sub
lods
stos
dec
and
inc
mov
(bad)
js
xchg
mov
cmps
es
mov
cs
xchg
call
pmaxsw
in
ins
push
add
repz
stc
ins
dec
inc
pop
call
jns
mov
adc
(bad)
enter
pop
gs
inc
or
movs
nop
inc
or
movs
call
cmp
stc
(bad)
shl
int3
mov
jmp
in
push
imul
imul
adc
pop
gs
mov
rol
dec
sti
les
popa
jne
mov
jle
push
lock
pop
dec
and
leave
inc
stos
xor
pop
sub
sub
cmc
and
movs
movs
push
sub
mov
pop
pop
push
pop
xor
mov
jmp
mov
sub
hlt
pop
mov
popa
sub
and
mov
ret
icebp
lahf
cld
in
daa
sbb
into
cld
int3
push
aaa
xchg
push
imul
add
cs
push
pop
mov
push
or
lods
xchg
cmp
ins
iret
dec
(bad)
mov
cmp
jmp
cld
cld
cmp
or
sub
dec
ds
(bad)
clc
push
loopne
adc
mov
aaa
pop
(bad)
iret
lock
in
dec
ds
cld
jmp
cli
in
pop
cs
fiadd
ds
out
sti
jbe
mov
cld
cli
inc
dec
adc
jns
sub
mov
ret
in
cmp
ja
xor
shl
add
and
outs
pop
ja
dec
pop
idiv
dec
(bad)
mov
dec
jge
dec
aas
cmp
aad
mov
nop
inc
jp
shl
repz
pop
(bad)
jmp
(bad)
in
mov
xchg
sbb
inc
add
pop
iret
imul
outs
push
xor
push
adc
mov
cmp
jge
popf
ror
test
lods
xchg
sub
jle
inc
jmp
ret
adc
popf
outs
outs
out
cmp
clc
sar
ss
mov
in
sbb
or
leave
js
retf
add
retf
add
fistp
xchg
idiv
pop
inc
outs
ins
je
ret
outs
fimul
outs
mov
sahf
push
test
sbb
xor
movs
dec
inc
pop
push
mov
shl
add
movsx
or
cmc
loope
ja
jbe
xor
xlat
sahf
inc
pop
xchg
cmp
cwde
jnp
cmps
inc
sub
or
(bad)
adc
(bad)
pusha
dec
jnp
jge
jmp
pop
inc
lock
add
push
mov
xchg
test
neg
cmp
sbb
or
je
and
bound
add
dec
test
int3
inc
retf
mov
inc
cmps
in
push
js
add
das
or
pop
and
scas
es
mov
das
push
dec
sub
mov
mov
pop
cmp
int
add
push
(bad)
iret
test
mov
fsubrp
cmps
out
mov
lock
lock
jp
cmp
adc
add
sbb
mov
sti
xor
or
cld
mov
push
adc
sbb
in
fwait
dec
cmps
mov
call
out
mov
(bad)
leave
adc
inc
or
movs
push
push
jl
xchg
cld
les
aas
jae
idiv
dec
movs
add
addr16
stos
test
arpl
jge
push
sub
in
movs
push
jne
or
in
jnp
jmp
fcomp
mov
and
or
inc
aam
mov
xchg
repnz
jbe
or
shr
fdiv
mov
xor
test
or
inc
jmp
out
cwde
mov
ins
out
cld
leave
into
rcr
loopne
stos
aaa
xor
(bad)
in
jo
lods
jmp
inc
aaa
cmc
mov
xchg
dec
ins
add
ds
fcomp
aam
cld
mov
and
push
js
in
pop
sbb
inc
repz
push
pop
cld
cli
lahf
mov
xchg
dec
je
jbe
cmp
sub
or
xchg
add
pop
(bad)
stc
mov
inc
adc
icebp
int
mov
mov
out
dec
cmps
push
xchg
dec
aad
and
je
xor
test
xchg
or
aas
push
cs
dec
xchg
and
sub
popa
mov
xor
dec
sub
adc
xor
ret
sub
push
mov
add
add
ret
inc
xchg
push
dec
sbb
rcl
push
jecxz
mov
outs
mov
xlat
sahf
rol
bound
shl
iret
sahf
or
fcomp
mov
outs
mov
dec
dec
cmp
call
cmp
cmp
sbb
ja
aad
adc
hlt
aam
mov
mov
popf
imul
leave
ret
inc
sub
jmp
adc
xor
inc
aaa
scas
mov
xchg
inc
sub
push
jo
inc
sub
jae
fiadd
fstp
jl
xlat
mov
push
aas
xor
out
cs
and
pushf
pop
mov
es
pushf
into
xor
rol
jae
out
das
push
dec
into
adc
mov
dec
sar
movs
sub
dec
and
cmp
cli
pushf
jmp
inc
addr16
sub
pop
iret
imul
scas
stos
add
mov
adc
popa
push
cs
retf
inc
or
mov
dec
lds
mov
mov
stos
jbe
aas
cmp
mov
push
xor
aas
lds
jge
scas
push
mov
xor
std
pop
xor
mov
jle
push
sub
xchg
push
add
outs
stos
enter
pop
dec
mov
jg
dec
and
sbb
xchg
mov
or
shl
jae
rcl
jae
lea
fimul
ja
mov
cmc
mov
cdq
adc
dec
mov
outs
mov
cli
inc
cmp
dec
sbb
daa
icebp
jmp
dec
sbb
ret
(bad)
fidivr
pop
mov
jmp
push
cld
stc
in
dec
fdiv
int
fdivp
xchg
lods
dec
fcmovnbe
lahf
sti
xlat
daa
mov
shr
or
cli
in
pop
cmp
mov
inc
stos
jmp
sti
adc
aas
repnz
pop
jle
jno
xchg
jns
cmp
out
pop
mov
js
fst
out
jae
out
cs
dec
fwait
ss
mov
imul
or
pop
xor
jg
dec
aas
jns
xlat
dec
gs
pop
mov
jg
jecxz
cmp
jg
pop
loopne
loope
fcomip
xchg
hlt
fdivr
retf
sti
xchg
xchg
ja
lods
mov
jo
dec
pmaxsw
int3
in
dec
call
mov
jl
fsub
(bad)
popf
adc
fisubr
sti
pop
sub
fstp
mov
inc
inc
push
mov
add
repz
sbb
cmp
jge
popf
out
adc
fistp
jno
repnz
lahf
jge
xchg
scas
sti
sub
ja
inc
xor
pop
mov
jge
cmp
scas
mov
dec
xchg
fst
and
ret
and
jg
ror
retf
and
dec
push
mov
movs
fmul
mov
js
xor
push
pop
icebp
arpl
or
push
push
sub
mov
xlat
jmp
test
sub
popa
inc
cmp
or
mov
inc
ror
out
jns
dec
sub
cmc
sub
or
sub
outs
outs
hlt
pop
iret
jno
das
aad
lds
(bad)
(bad)
rcl
jle
loope
cmp
iret
shl
(bad)
push
xchg
xchg
lods
outs
and
mov
scas
jnp
rep
lods
pop
mov
(bad)
std
jge
cdq
pop
pop
cmp
aaa
sahf
cmp
cmp
jmp
mov
adc
jae
cmps
ret
sbb
add
or
pop
jae
jns
fisubr
xchg
pop
daa
mov
jmp
cmp
mov
inc
rcl
add
stc
into
(bad)
xchg
aaa
std
leave
mov
idiv
hlt
out
jl
pop
mov
cmp
out
aas
repnz
fnstsw
xor
fld
(bad)
std
xchg
jle
shl
shl
pop
push
out
mov
das
loopne
fidiv
(bad)
ins
dec
sahf
lea
sbb
out
push
mov
(bad)
in
jmp
out
inc
iret
fdivr
xor
inc
outs
jge
mov
sbb
stc
mov
test
cli
fstp
nop
hlt
icebp
mov
out
stc
loope
iret
jg
xchg
movs
lods
test
mov
js
dec
fdivr
out
into
rol
(bad)
cmps
mov
bound
mov
add
push
icebp
dec
rol
cmp
sbb
in
outs
jl
(bad)
into
cli
test
shl
arpl
out
push
mov
fdivrp
jle
addr16
popf
out
add
xchg
push
fcomp
pop
out
imul
(bad)
in
add
ds
add
sub
sbb
dec
mov
cdq
ret
sbb
daa
out
adc
aaa
and
ret
dec
xlat
outs
pop
push
pop
neg
jle
ins
xlat
mov
scas
sti
mov
jg
mov
or
movs
pop
inc
clc
add
hlt
push
jg
shl
ret
mov
xchg
retf
addr16
add
pop
pop
sbb
sbb
xchg
dec
xor
and
add
add
inc
sub
xor
sub
inc
push
mov
cmps
es
xchg
cmpxchg
sub
or
arpl
jge
imul
jecxz
sbb
jno
pop
call
cmp
clc
sub
push
jae
out
cmp
dec
js
mov
pop
cs
fcomp
inc
adc
test
fistp
aaa
cld
out
cmps
out
pop
in
jl
cmc
sub
jne
xor
xchg
dec
outs
mov
out
sub
jecxz
outs
pop
mul
fistp
sbb
xlat
loope
nop
xor
dec
push
mov
dec
test
out
test
ret
mov
jecxz
(bad)
std
mov
pop
mov
pop
cli
cli
add
cmp
lds
in
pop
(bad)
hlt
stc
ja
xchg
rcr
dec
in
add
in
into
popf
inc
fidiv
sbb
jmp
daa
jg
cs
(bad)
into
cmc
xlat
ins
jmp
push
stc
(bad)
pop
jg
movd
lds
mov
int3
jecxz
jmp
push
scas
lock
jnp
pusha
jo
cmp
pusha
sbb
mov
sbb
lahf
pop
jl
test
pop
jge
shl
movs
stos
loopne
js
cmps
jge
pop
mov
(bad)
fimul
jecxz
push
jle
cld
int
test
repz
mov
mov
mov
push
out
fnstcw
fidiv
sbb
ds
in
mov
add
add
fbstp
push
loope
xlat
lods
imul
and
out
fstp
dec
retf
test
sub
test
idiv
je
mov
sub
ficomp
mov
outs
out
cld
mov
xlat
outs
call
rcl
stos
iret
imul
and
in
aaa
cs
shr
(bad)
inc
maxps
cmp
lock
inc
sar
xor
sub
sbb
sub
pop
sub
mov
jae
and
repnz
push
sub
mov
cwde
lds
ds
mov
repz
ret
xchg
push
xor
xor
lods
stc
stc
jns
push
cmc
dec
sub
(bad)
push
dec
in
jl
xchg
cdq
mov
cmp
jp
out
stc
sub
rol
cli
mov
cmp
cld
gs
fnstsw
push
scas
cld
(bad)
cmp
repnz
mov
mov
cli
pop
push
call
jmp
mov
cmp
out
ret
rcl
out
stc
out
imul
inc
pushf
push
mov
sbb
movs
in
mov
pop
fcmovnu
(bad)
(bad)
push
lods
je
jne
jno
push
rcl
mov
or
test
or
xchg
sbb
fcmovu
icebp
mov
shr
cmc
lods
pop
aad
cwde
jp
adc
ins
popf
popa
jbe
loope
push
jae
and
sub
sahf
fwait
retf
imul
jp
jp
cs
xchg
sbb
pushf
cmp
stc
int
xor
call
stc
cmp
push
add
sti
adc
outs
fdivr
jo
jmp
mov
jl
(bad)
out
out
add
outs
mov
pop
dec
mov
or
jl
test
cmps
mov
adc
lods
pop
mov
(bad)
stos
xchg
cmc
mov
fs
(bad)
stc
scas
imul
ror
push
aaa
and
movs
nop
inc
cli
xchg
or
(bad)
dec
jl
or
call
fsubr
add
adc
cdq
push
adc
xor
sbb
add
pusha
and
dec
movs
add
and
leave
xor
jo
shl
push
test
inc
scas
stos
xchg
or
mov
inc
or
dec
in
mov
mov
mov
lahf
retf
aaa
xor
push
stos
gs
add
adc
repz
popf
mov
jns
mov
out
mov
test
xor
fdivr
add
(bad)
scas
mov
lods
inc
pusha
mov
test
(bad)
dec
dec
push
in
sub
jbe
loopne
mov
aad
mov
scas
mov
mov
add
adc
in
inc
adc
mov
mov
ret
shr
inc
lods
xchg
sbb
sbb
popa
out
inc
mul
cmp
sbb
jmp
pusha
xor
push
xchg
xor
push
mov
pop
sbb
push
xor
ror
adc
adc
push
ja
mov
pop
xlat
int
push
test
fild
data16
cwde
sti
mov
pop
call
fidiv
ror
adc
adc
jae
mov
mov
inc
icebp
fs
xchg
sub
jmp
fisttp
cdq
rcr
stos
clc
retf
cmc
ret
ins
xor
and
fnsave
je
pop
adc
sbb
cli
mov
in
sahf
out
cmp
dec
ss
iret
pop
fisub
sbb
inc
fcomp
mov
lock
fwait
xchg
dec
mov
cdq
cdq
(bad)
cli
fstp
out
mov
xchg
inc
(bad)
pop
pop
cmp
dec
and
mov
inc
add
jo
shr
pop
mov
gs
cmp
clc
xor
push
in
fld
xchg
add
mov
fwait
cdq
cdq
dec
and
shl
sub
push
lahf
dec
xor
or
(bad)
fistp
and
ror
(bad)
icebp
repz
mov
mov
idiv
push
push
jmp
push
jbe
jae
rcr
repnz
out
lock
dec
fnsave
out
push
lods
out
outs
or
ins
jl
ret
jns
mov
loope
lds
mov
xor
xor
jae
loope
xor
pop
ja
(bad)
fld
mov
mov
jle
ror
mov
jae
pop
in
cmc
ror
in
and
lahf
inc
jecxz
jl
pop
imul
lds
mov
fwait
cs
xor
mov
mov
dec
cmp
add
jmp
clc
(bad)
(bad)
rcl
loope
ja
dec
pop
push
pop
push
enter
cdq
rcr
rcl
test
or
cmp
or
sbb
jp
cmp
fabs
and
nop
ret
mov
into
mov
lods
retf
sbb
mov
xlat
mov
inc
mov
push
retf
xor
sub
rcl
rcr
jno
push
mov
fild
push
dec
sahf
pop
imul
or
dec
or
add
cmp
cwde
ret
movs
test
mov
mov
mov
pop
push
test
in
pop
push
push
aad
fiadd
jmp
into
mul
lea
inc
outs
je
int3
repz
cs
adc
pop
add
stos
stos
repz
or
outs
fcmovbe
mov
iret
call
iret
aaa
aaa
fdivr
lock
div
xlat
adc
push
test
mov
sahf
fwait
(bad)
std
jbe
cli
xor
adc
jb
lock
repz
push
sbb
loopne
mov
shr
mov
das
ins
cmp
adc
jmp
retf
(bad)
jne
into
push
sbb
sbb
adc
(bad)
retf
lods
in
mov
(bad)
mov
ret
loope
sub
xor
jns
(bad)
cs
arpl
push
retf
adc
push
add
imul
imul
fstp
mov
movs
mov
stos
push
cwde
mov
sbb
mov
sbb
out
fidiv
aas
mov
or
inc
jle
or
xchg
inc
and
(bad)
or
shl
or
add
outs
ja
xor
xor
push
retf
jo
clc
(bad)
mov
loopne
push
loope
or
dec
mov
and
jmp
inc
jo
ret
push
xor
xor
(bad)
aam
fs
shl
outs
push
clc
(bad)
out
push
rcl
fdiv
adc
xchg
cmp
mov
aad
std
jae
xchg
arpl
ret
fiadd
ds
jge
lock
(bad)
jecxz
int3
retf
js
scas
mov
or
mov
repz
out
xchg
pop
mov
push
pop
aas
mov
(bad)
cmp
cmp
lahf
or
xchg
mov
adc
pusha
mov
adc
pop
inc
rcr
pushf
add
call
lock
outs
fnstenv
clc
test
ss
dec
cmp
aam
cld
ret
push
or
ds
rcr
sbb
rol
mov
mov
iret
pop
int3
jnp
jne
cmp
dec
sub
mov
pop
pop
imul
pop
mov
rcl
cmp
retf
adc
mov
nop
inc
jp
ror
shl
pop
sub
aas
repnz
jp
sahf
pop
int3
stos
movs
cmp
sti
int3
ins
retf
dec
mov
jae
or
loope
xchg
ret
inc
or
cmp
daa
pusha
addr16
adc
xchg
jnp
sub
daa
test
in
mov
jle
fld
adc
dec
fisubr
cmp
sbb
rcl
hlt
je
jge
mov
cmps
shl
icebp
lahf
cmp
or
test
dec
loopne
cld
pusha
xchg
clc
iret
mov
cmp
mov
jns
in
int3
dec
jae
jmp
lock
dec
jnp
push
and
cli
loopne
sub
jae
mov
pop
(bad)
mov
fistp
retf
in
jg
stos
push
pop
adc
mov
push
push
mov
adc
aam
(bad)
cmp
out
mov
call
popf
mov
cli
inc
mov
call
pop
and
sub
inc
push
and
icebp
lds
lods
and
dec
out
fnstenv
pushf
jb
aad
or
les
cmp
ficom
ror
imul
outs
call
jle
jb
mov
stos
out
xchg
(bad)
mov
lea
mov
cld
pushf
sbb
or
movs
push
sub
rol
xor
mov
outs
push
push
les
dec
and
and
cmc
test
pop
test
pop
inc
xchg
cmp
retf
xor
ret
mov
lods
mov
cmp
inc
xor
lock
pusha
loop
jae
stc
jl
fldcw
add
cmps
xchg
add
test
loop
jne
add
cmp
mov
or
outs
fcmovne
dec
les
out
loopne
xchg
pushf
xlat
push
jecxz
test
mov
movs
daa
(bad)
dec
jmp
pop
mov
out
jne
imul
mul
sti
lods
inc
mov
je
or
mov
cmc
rcr
sub
adc
add
jmp
adc
jne
test
and
out
ds
arpl
mov
mov
outs
pop
or
mov
inc
cmps
out
pop
mov
(bad)
loope
retf
(bad)
pop
mov
ret
mov
jecxz
arpl
rcl
add
push
pop
imul
enter
mov
inc
jmp
(bad)
fidiv
xor
test
or
fsubrp
fimul
loopne
inc
mov
xlat
adc
push
inc
mov
mov
fbstp
mov
or
lock
ror
inc
jo
inc
out
pusha
or
rcl
shl
stc
xor
movs
nop
jle
mov
sti
hlt
out
push
push
add
cmps
cmps
push
bound
mov
div
or
bound
shl
loope
xchg
or
test
jge
mov
push
clc
dec
sub
ror
push
push
push
pop
(bad)
lock
adc
ds
jp
xor
pushf
pushf
mov
jge
aaa
(bad)
aad
cmps
push
daa
dec
sahf
sbb
pushf
pop
mov
dec
test
mov
(bad)
add
adc
cld
(bad)
or
cld
clc
jmp
fwait
out
mov
daa
mov
stc
sbb
call
push
idiv
lahf
scas
ds
ret
stos
aaa
sub
jae
in
xchg
iret
dec
in
jp
sar
cmp
push
lea
rol
xchg
bnd
lods
add
inc
xchg
cli
fnstsw
daa
data16
jmp
jns
jmp
cmp
xlat
sar
(bad)
push
das
sti
cli
cmp
jg
in
push
stos
pop
mov
int3
loope
(bad)
lahf
cmp
in
or
in
pushf
dec
fidivr
adc
ja
jl
xchg
inc
push
pop
mov
pop
out
imul
out
sbb
neg
push
sub
pusha
cli
mov
lea
stc
out
mov
cmp
jne
cmps
ds
xchg
repz
jge
push
outs
mov
fstp
mov
sar
out
dec
or
jg
jecxz
imul
clc
ror
mov
aam
mov
outs
jg
push
push
mov
jle
test
popf
jnp
idiv
aaa
js
pop
out
mov
pop
(bad)
shl
pop
xchg
fdiv
arpl
mov
mul
mov
or
inc
mov
jg
dec
out
fdivp
into
in
sbb
sub
dec
sbb
sbb
cld
lods
imul
mov
xor
mov
push
xchg
jne
iret
int3
pop
ja
sbb
cld
shr
or
clc
cld
out
mov
dec
(bad)
xchg
jb
xchg
iret
pusha
xlat
add
aad
test
sti
cs
sbb
xchg
pop
es
fdivr
dec
mov
sub
jmp
mov
into
sub
adc
jnp
xchg
movs
std
cmp
xchg
add
sar
fwait
popf
int
jg
jae
jl
out
sti
rcl
fcomp
cmp
aas
aas
cmp
sbb
pusha
cmp
(bad)
(bad)
sbb
cmc
mov
jns
push
dec
stos
shr
jae
inc
jl
pop
pusha
aad
jle
aad
iret
mov
mov
aaa
pop
pop
mov
rcl
inc
ins
sub
sar
fist
call
call
aaa
pop
mov
retf
ret
mov
lahf
cdq
das
ds
lock
sahf
mov
mov
sub
iret
xor
jl
mov
sbb
jmp
mov
mov
mov
mov
sub
mov
stos
popa
push
iret
imul
std
gs
call
dec
cmp
sub
sbb
mov
in
mov
or
jecxz
dec
jle
sti
bound
or
jno
idiv
aaa
fcomp
pop
add
lea
out
out
mov
inc
xchg
(bad)
push
mov
(bad)
fimul
adc
inc
idiv
imul
mov
in
(bad)
fsubr
push
push
jbe
out
ins
pop
fistp
mov
call
pop
lock
neg
aas
cmp
xchg
add
mov
icebp
enter
push
adc
sbb
test
jecxz
mov
jp
neg
adc
call
retf
and
out
xor
push
mov
cdq
int
mov
outs
jp
xchg
fwait
mov
jge
loop
test
jp
jmp
stos
ficom
dec
sub
mov
call
test
lds
push
lods
shl
retf
repnz
loop
xor
xchg
pop
pop
mov
jg
mov
add
call
add
jbe
push
rcr
rcl
(bad)
(bad)
jbe
hlt
jmp
or
pop
in
lods
xlat
pop
jno
jl
jae
pop
div
sub
mov
jl
leave
push
push
xor
clc
in
in
in
in
lock
hlt
adc
out
xchg
pop
cmp
xor
cmp
jg
aam
xor
mov
mov
pusha
rcr
ins
test
push
outs
mov
mov
sahf
cmp
xor
js
stc
xor
fsubr
jmp
inc
inc
inc
pop
inc
ins
mov
add
sbb
add
sub
out
out
(bad)
add
inc
push
ds
push
xchg
leave
cmp
xor
sbb
(bad)
adc
push
or
or
cmp
aam
jnp
es
pusha
stc
mov
or
push
adc
add
leave
cmp
mov
sbb
mov
sbb
out
fcmovu
pop
hlt
jne
fisub
jae
mov
ror
xor
icebp
push
pop
add
gs
daa
data16
xchg
outs
pop
fisub
mov
xlat
or
inc
or
sbb
popf
(bad)
mov
(bad)
pop
aam
cli
pop
jg
cdq
cmps
icebp
add
cmp
es
inc
and
jle
repz
cmp
or
xor
retf
sahf
mov
adc
and
mov
lods
mov
movs
dec
mov
push
jns
cmp
outs
jns
and
sbb
pop
xor
lods
mov
xchg
gs
int
scas
leave
out
mov
cmp
or
pop
imul
xor
adc
xchg
repnz
mov
test
adc
push
xchg
dec
add
add
int
dec
mov
inc
mov
xor
aas
xchg
xlat
(bad)
push
sbb
arpl
ins
pop
mov
clc
adc
sub
into
and
jg
test
and
out
sub
fnstenv
in
add
popf
loop
mov
push
aaa
aam
sub
mov
sub
and
scas
mov
aam
movs
push
clc
cs
dec
addr16
ds
mov
inc
mov
mov
dec
jle
outs
dec
hlt
pop
adc
sar
adc
outs
or
cmp
mov
add
inc
jp
js
clc
dec
push
push
xchg
cmp
dec
add
movs
les
dec
repnz
add
cmp
mov
inc
loope
clc
and
test
adc
add
jnp
scas
sbb
das
sbb
test
fcom
std
xor
out
enter
jecxz
pop
and
and
adc
sahf
push
adc
loopne
fdiv
inc
pop
mov
jg
xor
sbb
ja
inc
sbb
scas
mov
fadd
adc
nop
shl
retf
mov
add
pop
sub
retf
push
xlat
cmc
inc
xchg
xchg
imul
cmc
jmp
mov
sbb
mov
mov
(bad)
in
or
(bad)
lods
pop
neg
leave
fwait
and
sub
mov
cmp
or
daa
out
je
sub
push
pusha
add
addr16
xchg
loope
pop
push
mov
sub
mov
(bad)
inc
test
inc
(bad)
push
pushf
popf
sub
fnstenv
or
dec
mov
out
outs
lahf
jecxz
inc
dec
pop
sahf
(bad)
pop
lods
dec
rcr
mov
pop
rcr
call
jmp
lods
fbstp
xor
push
push
dec
add
adc
aam
std
push
mov
std
daa
shl
ret
je
mov
add
lods
lea
lock
mov
sub
mov
xchg
lods
pop
dec
and
pop
fnsave
mov
xor
cmps
or
or
cld
js
les
test
imul
jnp
fcmovu
cmp
out
pushf
fwait
fwait
addr16
pop
test
int
cld
or
out
mov
sbb
shr
(bad)
popa
jmp
cld
cli
mov
jno
out
mov
cs
test
movs
rcr
xor
ja
add
adc
rcl
stos
shl
iret
ds
test
cs
lods
out
push
sbb
pop
nop
inc
loop
lds
lds
das
aas
stos
call
pandn
xor
xchg
ror
cdq
not
iret
cmp
mov
add
fwait
jbe
std
push
xchg
sbb
aas
xchg
jle
mov
sbb
add
sti
enter
clc
mov
mov
imul
cs
rcl
mov
dec
cwde
jge
pop
mov
jmp
data16
rol
cmp
pop
(bad)
and
mov
ret
out
daa
cwde
mov
pop
loope
inc
mov
sahf
stc
xor
lds
jmp
stc
jmp
out
mov
mov
push
push
mov
adc
inc
aas
in
sti
lahf
repz
mov
hlt
outs
jmp
and
mov
sti
push
test
xchg
push
inc
fwait
inc
mov
data16
fstp
scas
jmp
bnd
push
mov
jbe
pop
sub
lock
retf
lds
adc
mov
cmp
mov
stos
jmp
lods
mov
lea
dec
xor
fs
rcr
cdq
cdq
jb
rcl
into
sub
jecxz
arpl
pop
dec
retf
scas
mov
aaa
scas
cmp
call
mov
pop
xor
dec
movs
inc
jae
add
(bad)
lock
loopne
fld
std
idiv
neg
repnz
aaa
dec
jle
daa
mov
loopne
and
or
(bad)
ror
cmp
sbb
inc
push
push
das
mov
aam
xor
and
pop
jbe
pop
ret
pop
test
push
xchg
loope
dec
ret
pop
sbb
cwde
mov
addr16
mov
cmp
test
jecxz
movs
pminsw
lahf
push
iret
add
xor
sub
dec
jl
scas
fstp
stc
in
or
ja
(bad)
jae
rcl
lock
out
mov
cmp
out
sub
xor
sbb
shl
movs
ficomp
out
mov
push
sbb
sub
js
sub
test
pop
ret
mov
fs
rcl
and
xchg
repnz
ins
(bad)
pop
es
fcmovb
ins
fild
test
cmps
sub
(bad)
(bad)
out
cmp
xor
push
sub
ret
pushf
jge
push
jb
call
sbb
add
xor
adc
(bad)
mov
xor
hlt
adc
mov
jg
push
add
das
cs
enter
push
imul
xor
and
or
test
push
scas
add
mov
sahf
cmp
test
dec
shr
jl
pop
mov
mov
mov
mov
push
ret
pop
pop
dec
dec
lods
test
cmp
lds
imul
jmp
xor
jmp
int3
int3
hlt
sub
into
jmp
ins
cmps
mov
xor
test
call
ret
xchg
mov
inc
fwait
(bad)
or
clc
sub
dec
pushf
les
jge
mov
(bad)
shl
out
(bad)
mov
call
fdivrp
jbe
xchg
pop
sub
adc
aam
push
mov
out
sub
mov
sub
test
adc
rol
cdq
push
xor
mov
lods
retf
out
das
fisubr
js
pop
sub
aas
scas
ror
scas
test
sbb
pushf
pop
push
cmps
call
mov
js
cmp
inc
mov
xchg
arpl
(bad)
push
adc
lods
add
dec
cmp
mov
add
push
sub
ds
pop
(bad)
js
retf
mov
stos
mov
arpl
scas
rol
lods
daa
repz
xchg
rcl
sub
sbb
inc
inc
leave
xor
pop
dec
cwde
(bad)
xor
data16
mov
inc
add
or
ss
mov
or
ins
enter
push
popa
imul
mov
iret
push
addr16
sub
and
sub
dec
retf
shr
and
test
and
mov
ret
mov
ror
push
in
jbe
aam
xchg
sbb
scas
in
mov
or
retf
xchg
cmc
shr
push
(bad)
or
add
jnp
aad
(bad)
pop
xchg
pop
ret
jbe
mov
cmp
push
mov
mov
(bad)
shl
jecxz
shl
dec
add
pushf
dec
or
hlt
sbb
xor
shl
sub
cmp
push
ins
inc
jle
push
repz
sub
lock
mov
je
mov
loop
iret
or
mov
xor
adc
ret
push
test
xchg
clc
shl
in
inc
mov
sub
mov
lea
inc
out
lahf
fwait
popf
add
clc
cmp
push
xor
ins
ss
aad
cli
cwde
scas
pop
aad
outs
cmc
mov
std
clc
mov
ins
mul
and
xchg
mov
pop
xor
ja
fisub
mov
in
pop
nop
repnz
ss
xchg
(bad)
jl
xchg
dec
fidivr
or
nop
(bad)
dec
add
add
adc
xchg
scas
push
out
push
and
in
xor
and
mov
jb
push
jno
cdq
adc
push
pop
sub
neg
cmp
scas
push
lods
adc
ds
and
cmp
push
test
shl
int
mov
stc
rcl
mov
mov
mov
(bad)
pop
dec
pop
mov
fdivrp
leave
rcl
shl
fisttp
and
pop
out
cmp
mov
out
outs
outs
imul
scas
pop
push
sub
or
lock
push
lea
mov
mov
lea
push
ins
ret
aad
or
push
pushf
enter
sbb
pop
mov
arpl
daa
sbb
cmp
inc
adc
enter
and
cdq
retf
dec
xchg
dec
or
retf
add
test
pop
test
add
mov
pop
dec
sub
xchg
inc
fst
xchg
or
je
icebp
xchg
ror
inc
ds
cmp
scas
push
ret
ds
and
xor
jbe
dec
mov
lea
sbb
and
push
imul
adc
lods
xor
dec
mov
test
data16
enter
inc
sti
mov
add
fistp
xchg
jmp
or
dec
xchg
cwde
mov
punpckhbw
pop
test
mov
or
loop
or
int
test
push
inc
adc
repz
ins
fwait
pop
loopne
inc
xchg
in
inc
xor
in
shl
gs
neg
jo
xchg
mov
mov
ret
sub
mov
jae
data16
sub
cmps
jmp
xor
pop
push
imul
out
mov
out
in
retf
pop
cdq
pushf
test
push
imul
mov
pop
mov
cmp
out
into
mov
fdiv
cmp
clc
int3
out
out
ins
fidiv
xlat
fcmovu
dec
sub
adc
(bad)
stos
cmp
mov
shr
inc
test
in
xchg
cld
popa
push
or
jl
call
cmp
and
xor
shl
sub
sub
or
(bad)
mov
sub
pusha
mov
mov
dec
test
dec
retf
cmp
test
dec
push
pop
mov
and
jo
ss
jo
adc
retf
dec
in
adc
imul
mov
vmptrld
sbb
pop
(bad)
mov
js
mov
push
push
fsubr
add
call
mov
mov
jp
cld
in
leave
push
xor
(bad)
out
shl
pop
or
mov
pushf
xor
mov
int3
and
imul
mov
dec
mov
adc
mov
and
cmp
loop
inc
pop
out
stos
xchg
sub
call
pop
xor
in
(bad)
cmps
ret
loop
add
inc
inc
out
push
jno
leave
xchg
pop
stos
or
sub
cs
(bad)
pop
sbb
or
xlat
adc
adc
stos
and
inc
xchg
pop
push
jle
add
xchg
stos
nop
cmp
call
les
mov
dec
jo
add
mov
int
pop
sub
syscall
and
sbb
retf
and
pop
fsqrt
pop
lea
shl
push
mov
test
inc
mov
retf
jbe
mov
xchg
arpl
xchg
sub
xor
add
push
hlt
pop
jae
pop
mov
(bad)
fidiv
push
add
dec
xchg
retf
adc
clc
push
and
jg
push
or
std
aam
mov
movs
les
(bad)
popf
test
cli
xchg
push
ret
out
xchg
pop
mov
les
pusha
jne
or
pop
push
or
fild
xchg
jecxz
and
jecxz
arpl
adc
in
mov
sbb
xor
mov
dec
jae
lds
rol
in
in
mov
stc
pop
jnp
sbb
mov
fnstenv
sub
outs
imul
add
pop
xor
inc
popf
(bad)
adc
add
xchg
ffree
pop
lods
jl
(bad)
pop
lea
bound
push
add
in
stos
lock
scas
xor
(bad)
adc
adc
xor
xlat
inc
sbb
inc
dec
pop
mov
lock
pop
dec
sub
shl
popa
ja
in
mov
xor
dec
leave
data16
mov
cmp
xor
mov
mov
aad
xor
adc
xchg
cmp
fnsave
into
in
mov
mov
mov
jae
(bad)
adc
add
leave
(bad)
leave
inc
jle
push
dec
movs
xchg
jne
cli
xor
ins
icebp
inc
ret
pop
in
or
mov
sub
mov
loop
jbe
push
rcl
ret
inc
dec
retf
cmp
aam
addr16
aam
(bad)
iret
data16
xor
push
imul
sahf
xor
xchg
add
es
push
or
movs
cld
lods
push
xlat
mov
inc
in
int
sbb
test
jge
gs
and
jb
les
stos
or
sub
push
outs
cmps
pop
fdivr
imul
cmp
fidiv
test
ins
or
sbb
les
pop
adc
loope
add
xor
mov
in
and
fisttp
xchg
imul
fs
sbb
fcom
mov
fisttp
bound
xchg
fisttp
psraw
call
nop
bound
mov
and
jno
rcl
test
jmp
sub
xchg
push
xor
jecxz
fcomp
xchg
pop
mov
push
test
push
jecxz
push
and
movs
cmc
pop
jno
mov
cmc
call
push
dec
push
cdq
inc
inc
arpl
cmc
jb
stc
daa
lahf
fiadd
int
sub
mov
jnp
and
cmp
add
stc
int
test
(bad)
jg
call
test
lds
mov
popf
lahf
fwait
lahf
cdq
call
sbb
lahf
sbb
mov
jp
xor
sbb
sbb
ins
scas
mov
adc
jmp
push
xchg
idiv
clc
rol
out
test
cs
jmp
je
popf
cwde
popf
popf
std
loope
pop
bound
push
leave
bound
pop
shr
(bad)
leave
xchg
lahf
stc
mov
push
mov
lods
popa
jne
xchg
cwde
push
cs
xor
shl
mov
adc
sar
add
shr
dec
popf
inc
dec
test
pop
sbb
dec
push
pop
mov
add
xor
adc
xchg
jl
ss
lds
mov
push
xor
ficomp
or
jne
clc
cmp
pushf
ror
gs
push
cwde
test
pop
leave
adc
fmul
xor
fst
rcl
ins
push
inc
pop
or
xchg
and
mov
mov
test
sar
sbb
cs
jp
mov
test
(bad)
jmp
fst
ror
jb
mov
lea
and
shl
push
sub
inc
lods
sahf
and
loopne
sbb
cmps
les
stos
add
mov
int
scas
pusha
stos
popa
add
les
push
sbb
test
xchg
pop
sbb
add
daa
mov
xchg
add
pop
sbb
cmps
les
sub
and
xor
mov
push
mov
jb
sub
xchg
pop
sub
icebp
and
sbb
xchg
xlat
mov
or
add
(bad)
das
aad
test
fsub
sub
xor
xor
push
in
adc
pop
cmp
call
cmp
xor
add
and
jbe
pop
ret
xor
jle
jecxz
mov
sbb
aad
mov
push
sbb
xchg
adc
sbb
fidivr
not
cmc
mov
sub
ret
pop
pop
and
and
lods
movs
xlat
xchg
cmps
dec
pop
cmp
sbb
ins
adc
shl
test
jae
mov
jle
cs
loopne
xor
aaa
movups
fs
aas
sbb
fucomip
cli
in
and
call
arpl
sar
sbb
aaa
xor
dec
push
mov
(bad)
std
xor
pop
repz
cmp
jno
stc
jmp
mov
cmp
cwde
ret
xchg
aas
mul
xchg
cmp
rcl
aad
push
je
xchg
leave
push
sub
mov
pop
pop
pop
fimul
sbb
adc
inc
xor
std
mov
jle
mov
inc
icebp
imul
or
add
(bad)
ins
test
xchg
push
cmp
or
bound
dec
ins
mov
into
ins
mov
rol
mov
retf
pop
pushf
(bad)
aaa
test
dec
in
cmp
push
push
in
orps
push
xchg
inc
sbb
inc
xor
dec
and
inc
and
lea
(bad)
or
ror
test
test
add
sahf
dec
dec
push
mov
(bad)
ja
test
dec
or
cmp
ins
mov
cmps
inc
mov
pop
cmc
cmps
xchg
or
addr16
imul
push
lods
adc
jno
mov
adc
push
aam
pusha
je
mov
push
addr16
ja
mov
sbb
dec
inc
push
les
pop
out
dec
ficom
inc
lds
scas
push
or
in
jno
add
push
mov
ins
cmps
(bad)
sbb
fs
and
clc
aad
jae
mov
fadd
or
xchg
(bad)
pop
imul
lea
push
dec
popf
adc
fdivr
or
movs
inc
stos
ins
cli
xor
xor
adc
shl
or
es
inc
mov
push
aaa
adc
jmp
add
adc
push
pop
pop
cmps
cmps
rcl
xor
mov
push
out
push
adc
jne
cmps
jecxz
ins
mov
sub
sbb
adc
ret
dec
push
dec
ins
ret
mov
(bad)
mov
adc
outs
mov
sbb
push
ja
(bad)
sbb
retf
fs
js
int3
or
repnz
pop
dec
cmp
daa
loope
push
jmp
stos
ror
sbb
mov
add
daa
xchg
push
fwait
popf
ret
out
inc
sub
sub
lds
xchg
retf
in
test
jge
nop
and
pop
mov
leave
and
xor
ds
push
repz
push
retf
scas
cs
mov
xchg
call
adc
jecxz
jecxz
je
xchg
inc
jg
cmp
cmp
or
sbb
bound
or
inc
mov
sbb
shr
push
add
or
mov
push
lea
push
dec
xor
aam
mov
xor
push
pop
and
mov
and
mov
aam
test
das
and
fisubr
pop
cmp
dec
imul
sti
ins
push
and
dec
test
and
inc
adc
push
stos
pop
jmp
dec
or
jnp
fs
mov
rol
(bad)
ror
add
ins
shl
pop
adc
add
jne
mov
cmps
or
or
xor
adc
xor
(bad)
les
retf
imul
and
popa
add
imul
jge
int
push
jo
or
ja
sub
jb
pop
aas
mov
ficomp
jp
cdq
dec
add
adc
push
mov
adc
ret
(bad)
adc
add
cwde
and
fcomp
dec
aaa
aas
test
xchg
div
add
jg
arpl
mov
add
or
jmp
test
fistp
inc
add
push
pusha
or
xor
or
xchg
inc
inc
out
mov
jbe
push
retf
jg
adc
dec
mov
popf
ret
or
add
push
scas
loope
xchg
popw
push
les
cmp
xchg
gs
sbb
mov
mov
cwde
push
mov
fcmove
in
add
aam
sar
push
jp
cld
inc
sbb
push
(bad)
jmp
adc
aad
sub
or
sub
mov
cdq
jmp
cdq
jmp
aaa
push
int3
out
cmp
xor
jle
(bad)
outs
pop
mov
or
pop
test
out
fiadd
pop
sahf
fwait
iret
pop
mov
imul
xchg
inc
retf
out
(bad)
hlt
xor
sub
dec
and
data16
xchg
inc
out
sbb
add
aam
test
shld
add
mov
pop
mov
jne
sbb
push
mov
ret
xchg
mov
clc
inc
sub
mov
cdq
data16
mov
ficomp
inc
mov
push
dec
fistp
jle
fsub
fidiv
mov
rol
mov
imul
jge
imul
daa
movs
mov
mov
out
xor
mov
ss
push
push
jae
dec
or
popa
push
idiv
cmp
sbb
pop
sub
push
shl
sub
jns
add
repz
dec
mov
mov
cs
pop
push
arpl
xchg
loopne
lds
retf
xchg
dec
les
sti
mov
push
scas
les
lds
imul
mov
push
pop
aam
neg
jns
pop
jmp
lods
int
ja
pusha
in
inc
data16
ins
outs
adc
xor
aam
jae
fmul
jmp
ss
repnz
inc
rol
in
xchg
pop
sub
add
sbb
repnz
rol
test
mov
xchg
cmps
aam
not
in
in
test
daa
js
add
pop
mov
imul
jp
push
shl
pop
sub
cmc
add
inc
(bad)
or
adc
aad
iret
ins
lods
and
xchg
rcr
adc
push
cmp
adc
sub
bound
stos
sub
mov
sbb
inc
shl
inc
xchg
mov
mov
dec
test
pop
mov
cmp
dec
les
sub
pop
push
cmp
movs
fsub
retf
nop
xchg
add
add
jle
adc
aas
jge
add
pop
xor
data16
add
mov
dec
mov
test
xor
cmp
aaa
mov
mov
div
mov
mov
inc
pop
jae
jge
cld
call
mov
pop
cmp
lahf
mov
jmp
mov
(bad)
mov
(bad)
mov
mov
jnp
lock
shl
jo
xchg
fs
xchg
dec
xchg
xor
add
mov
jl
inc
addr16
xchg
and
mov
mov
mov
adc
cld
outs
imul
xor
xor
dec
mov
push
pop
or
sti
stos
mov
rol
ss
pop
out
mov
xor
test
int3
pop
icebp
and
push
arpl
push
adc
mov
pop
cmp
push
add
xchg
test
lea
dec
pop
test
aas
test
aas
test
jbe
stos
repz
inc
movs
or
pop
adc
sbb
retf
pusha
movs
arpl
in
nop
or
rcr
stos
popa
test
movs
push
pop
sbb
and
inc
push
and
pop
pop
or
mov
jb
dec
add
sub
cmps
or
mov
adc
call
cmp
inc
jbe
mov
popa
ret
xchg
popa
add
call
(bad)
and
adc
test
pop
sub
pusha
xor
cmp
mov
or
stos
jno
icebp
cmp
test
int
xchg
adc
int3
mov
mov
jecxz
adc
sub
mov
fnstenv
aad
rcl
leave
add
bound
add
or
ins
dec
not
cmp
add
and
xchg
xor
add
das
test
cmp
dec
int3
mov
ret
enter
mov
jb
push
mov
adc
scas
rcr
mov
or
test
ret
imul
in
jg
cwde
dec
sub
cmp
sbb
loope
data16
add
jbe
cmp
mov
leave
mov
repz
rcr
jbe
dec
xor
or
mov
mov
or
pcmpgtd
dec
clc
or
pop
add
cmc
mov
pusha
sbb
xlat
lods
jb
imul
lock
movs
pop
icebp
js
mov
sbb
xchg
jnp
lods
fnstcw
out
mov
or
scas
out
out
in
jl
(bad)
(bad)
cmp
pop
xchg
mov
adc
sar
pop
fdiv
loop
pop
jb
or
or
jg
stc
mov
xchg
retf
and
aaa
xor
aam
add
retf
mov
adc
cmp
cmp
jbe
mov
ret
(bad)
jo
retf
sahf
add
xor
cld
xchg
repnz
ins
xchg
inc
sbb
in
ret
xchg
imul
shr
ret
aam
ins
xor
dec
adc
mov
mov
pushf
test
xor
int3
xor
jmp
add
(bad)
(bad)
int3
mov
mov
ror
adc
sar
and
cmp
cmp
ror
inc
push
mov
shr
cmp
icebp
jo
into
icebp
test
sub
push
sbb
js
or
inc
cmps
mov
xchg
mov
jbe
mov
and
dec
in
cs
retf
je
mov
xor
call
jge
push
ror
xor
dec
sub
pushf
dec
adc
in
scas
enter
cmp
fcomp
movs
add
add
xchg
inc
and
or
cmps
add
ins
xchg
cmp
mov
push
mov
das
sub
test
scas
jmp
pop
mov
out
bound
inc
inc
xchg
repnz
adc
les
xor
ins
xchg
mov
in
pop
adc
dec
sub
jb
push
adc
push
inc
mov
adc
pusha
dec
in
adc
outs
push
or
or
lods
add
pop
in
sub
retf
pop
push
fs
lahf
bound
adc
inc
inc
mov
add
mov
cmp
mov
inc
pushw
mov
test
adc
fs
test
adc
cs
pop
ret
and
mov
test
inc
nop
movs
fdiv
and
push
jb
ret
sub
sub
loopne
inc
in
mov
inc
mov
(bad)
(bad)
jle
dec
cld
xchg
gs
mov
ss
sub
aad
setl
pop
cmp
xchg
sub
nop
mov
push
cs
jmp
fs
out
scas
jge
cmp
in
mov
mov
sbb
mov
cmp
js
test
js
dec
sbb
in
xor
and
stos
out
fst
xchg
adc
push
adc
int
inc
mov
lea
inc
mov
mov
test
ret
push
sub
sub
(bad)
(bad)
sbb
jno
xlat
int3
loope
add
mov
xchg
xchg
adc
jecxz
test
push
sbb
hlt
lea
xchg
pop
or
out
jp
icebp
bound
shr
or
mov
mov
xor
mov
test
mov
sub
call
inc
xor
sbb
movs
mov
arpl
popa
jecxz
xor
inc
jb
(bad)
pop
cmp
inc
or
(bad)
pusha
and
dec
mov
sub
in
popf
dec
gs
or
add
fxch
xor
push
cmps
push
dec
or
and
xchg
int3
xchg
test
es
xor
jle
mov
jl
jl
pusha
and
push
movs
or
pop
(bad)
fsub
sbb
inc
inc
jnp
std
pop
daa
stos
sub
test
dec
enter
out
sub
dec
adc
and
stc
push
fiadd
leave
mov
outs
push
sbb
es
into
dec
sub
cdq
adc
pusha
mov
mov
adc
push
mov
and
sbb
inc
imul
stos
lods
cmp
fs
popf
imul
xchg
mov
and
adc
fdiv
daa
jge
add
arpl
adc
sub
sbb
or
mov
jno
test
dec
mov
sub
pop
mov
sbb
jecxz
adc
gs
and
or
pop
and
jns
in
aam
mov
inc
pop
imul
sub
shl
pusha
dec
mov
pop
inc
cdq
mov
cmp
mov
cdq
outs
jnp
and
pop
mov
or
jg
xchg
adc
cmp
ret
mov
jno
stos
push
sub
push
shr
inc
fmul
retf
adc
aas
push
arpl
cmp
fcom
mov
mov
out
jae
jb
mov
pop
mov
rcl
or
jno
scas
pop
jne
call
xchg
dec
xlat
aad
(bad)
cli
in
ins
sub
adc
repz
pop
(bad)
clc
adc
sbb
hlt
or
fldenv
cmp
ja
cmp
adc
rcr
pop
fcmovnu
fsub
adc
ret
test
cwde
lods
sbb
cmp
xor
movs
xchg
dec
cmc
push
and
icebp
imul
adc
movs
mov
push
stos
jb
movs
test
scas
(bad)
das
clc
test
(bad)
or
inc
imul
ins
adc
mov
js
mov
mov
add
push
push
xor
adc
lods
push
adc
xor
lock
push
es
jecxz
add
xchg
push
and
jle
mov
push
adc
mov
call
ror
mov
xor
add
jmp
cmp
push
enter
sub
movs
and
sbb
inc
and
cwde
ret
add
stos
sbb
cmps
push
popf
inc
addr16
add
xchg
jmp
mov
jmp
xchg
enter
pop
jae
mov
shr
rol
sbb
jnp
movs
push
xchg
lods
jb
lock
adc
jmp
daa
mov
aas
xor
bound
test
mov
nop
ror
pop
outs
inc
inc
and
push
test
nop
fdivr
xchg
add
cmp
mov
cwde
int
sbb
mov
xchg
jno
stos
mov
pop
in
mov
stos
dec
js
adc
rol
jge
xchg
int3
jo
fisttp
pop
cdq
mov
es
nop
push
test
or
out
into
in
mov
cmp
ret
push
cld
les
and
test
dec
pop
test
pop
sti
mov
xchg
fnstenv
xchg
inc
cmps
ret
fmul
rol
lock
adc
mov
(bad)
xchg
pop
xor
(bad)
cwde
push
pop
add
mov
mov
sahf
movs
mov
enter
add
jne
movs
pop
sub
sub
les
scas
cwde
das
add
mov
mov
dec
dec
xor
in
movs
push
cs
stos
gs
adc
sar
out
bound
mov
mov
lock
pop
dec
mov
cmp
leave
fs
in
in
push
arpl
outs
das
or
test
xor
das
mov
xchg
retf
in
in
fadd
ins
fdiv
fistp
mov
sbb
stos
xor
(bad)
into
out
clc
rcr
ins
xor
into
int3
int3
fdivr
std
add
pop
push
rol
jne
ins
fild
adc
mov
jno
pop
dec
add
jae
in
daa
and
mov
xor
pop
and
xchg
mov
in
call
sbb
jp
pop
cli
jecxz
add
xchg
(bad)
xor
push
push
and
mov
mov
fwait
mov
push
push
inc
pop
imul
aaa
jns
mov
mov
sub
xchg
cmp
xchg
sahf
adc
test
xor
jmp
enter
cdq
sbb
clc
lods
arpl
push
push
inc
test
test
jmp
mov
outs
lahf
jl
popf
into
retf
popf
xchg
cmp
ficom
xor
mov
or
imul
repz
jmp
int3
mov
cmp
lea
jbe
mov
sbb
xchg
adc
mov
add
xchg
shl
dec
mov
cld
shl
int3
or
cwde
jg
shl
dec
xor
push
leave
and
mov
dec
pop
jb
push
loop
push
or
lods
loop
lods
adc
pop
ficom
dec
mov
xlat
cli
scas
mov
ret
nop
lock
in
pop
inc
es
ret
mov
shl
cmp
retf
(bad)
loope
xchg
cmp
inc
out
push
ret
test
xchg
dec
cs
and
fs
scas
retf
sar
cmp
outs
adc
dec
call
in
dec
out
inc
add
jbe
adc
popf
mov
xor
mov
cli
sub
arpl
mov
inc
sub
inc
stc
xor
cmp
bound
jecxz
enter
sbb
cli
adc
in
add
sbb
(bad)
push
cmp
xchg
mov
xchg
dec
lds
aas
cmp
jmp
add
inc
inc
or
repnz
adc
dec
sbb
mov
div
mov
mov
int
sbb
es
pop
jge
fimul
ins
jbe
repnz
outs
mov
pop
mov
iret
jge
(bad)
xlat
lods
pop
(bad)
xchg
dec
and
cld
push
iret
cmp
ss
aam
or
cmps
add
xchg
dec
lea
icebp
(bad)
pop
fistp
stos
jns
adc
fwait
fwait
pop
mov
mov
mov
and
add
arpl
inc
imul
mov
and
scas
adc
test
je
sub
mov
sub
mov
sbb
sahf
inc
add
mov
adc
stos
xor
ds
add
mov
hlt
mov
sahf
xchg
call
adc
sahf
adc
test
and
push
dec
pop
push
adc
popa
adc
mov
xlat
stos
int3
jg
xor
mov
movs
ss
enter
adc
stos
or
les
or
or
loop
inc
stos
int
jae
aam
sbb
sbb
add
mov
xchg
sbb
xchg
push
popf
dec
inc
(bad)
cmp
push
jmp
adc
xor
cmp
test
pop
push
jmp
or
mov
push
and
test
mov
pop
push
inc
sbb
retf
pop
daa
cmp
test
pop
jmp
add
lods
shl
pop
pop
cdq
iret
mov
out
stos
inc
push
aam
jbe
mov
int
sub
mov
out
push
lahf
bound
inc
xchg
inc
scas
mov
xchg
inc
push
imul
jnp
sub
popa
pop
imul
mov
xchg
push
add
xor
imul
mov
ins
inc
sub
retf
mov
dec
or
ss
call
adc
shr
and
outs
mov
ins
inc
push
mov
jns
xchg
ins
pop
pop
push
popf
or
stos
and
and
call
pop
mov
cmps
mov
ror
jae
ds
xor
das
pop
push
test
outs
out
jae
dec
and
pop
xchg
push
sbb
sub
in
adc
test
neg
jp
test
pop
jl
shl
lock
sub
jae
shl
fldcw
mov
mov
out
mov
iret
jnp
lea
push
mov
test
out
or
sbb
(bad)
fmul
adc
sbb
cmp
sbb
push
lods
pop
xor
jle
gs
sti
xchg
cmp
sbb
sub
push
add
sub
dec
mov
adc
test
bound
push
xchg
pop
adc
mov
imul
push
jmp
imul
mov
mov
push
dec
dec
fisub
dec
dec
sahf
xor
pop
add
push
(bad)
sub
pop
dec
inc
jle
cdq
shr
adc
adc
or
mov
mov
cdq
xchg
xchg
call
sbb
push
in
inc
lock
lods
cmp
retf
test
and
aaa
test
hlt
ror
fwait
dec
jmp
and
(bad)
and
sub
dec
and
xor
cmp
test
(bad)
cmps
push
or
shr
sub
pop
mov
(bad)
xor
pop
mov
add
loope
mov
lods
push
xchg
sbb
retf
daa
jb
inc
int3
ret
in
push
rol
cdq
jo
fild
inc
and
cmp
inc
fsubr
ins
adc
fld
adc
xchg
aam
sbb
ss
sub
sub
adc
fadd
or
loopne
push
push
and
sbb
cdq
inc
jbe
jbe
push
inc
inc
push
jo
nop
or
push
pushf
dec
pop
sbb
dec
push
jbe
push
rcl
cmp
xchg
inc
jp
jbe
and
fcomp
mov
cdq
mov
pop
out
dec
cdq
cmp
sub
pop
leave
cli
push
mov
and
ror
mov
sti
iret
jae
inc
xchg
mov
retf
ins
sub
shl
jmp
mov
dec
movs
data16
cmc
lods
push
ret
mov
(bad)
lods
pop
pop
jmp
ds
(bad)
fcmovu
ret
add
xor
mov
jl
arpl
rcl
lds
push
mov
div
(bad)
aad
inc
xchg
xchg
xchg
xchg
cmps
dec
lahf
sub
dec
add
pop
mov
repz
mov
scas
fidiv
addr16
stc
shl
dec
(bad)
adc
mov
cmp
cmps
stos
lds
mov
cmp
out
mov
rol
push
mov
aas
aas
xlat
fstp
or
mov
jge
test
fldcw
ret
lds
lahf
pop
outs
mov
call
add
mov
sbb
dec
lods
xor
rcr
xor
push
inc
xchg
xor
dec
lds
push
and
xor
gs
bound
test
shl
inc
and
jle
popf
dec
scas
add
adc
popf
mov
sbb
or
cmp
inc
movs
xchg
adc
inc
lods
xor
cmp
jo
fs
xchg
mov
aam
jne
cdq
xchg
mov
fimul
test
sbb
in
stos
std
(bad)
jne
mov
out
aad
and
adc
adc
sub
xchg
repnz
and
pop
js
push
sbb
arpl
ins
sub
add
out
imul
test
sub
inc
xchg
mov
aad
jnp
rol
icebp
push
push
fwait
push
mov
mov
test
pop
jle
aad
(bad)
xor
jb
dec
aas
push
xchg
jbe
fs
test
sub
enter
add
or
or
sub
sbb
push
in
loope
sub
xchg
mov
mov
ins
pop
sub
mov
repz
mov
out
fmul
mov
stos
arpl
stos
pop
sbb
mov
xchg
adc
lods
push
out
push
lods
jmp
out
mov
sbb
aaa
pusha
inc
imul
push
push
ret
daa
sub
or
push
cwde
out
add
dec
retf
adc
fs
xchg
cmp
into
jae
xchg
lds
pop
test
mov
sbb
mov
ins
enter
xor
pop
inc
iret
inc
sbb
mov
fmul
inc
imul
aam
dec
push
daa
fs
js
shl
xor
xor
js
dec
jae
jp
adc
mov
dec
push
push
add
add
mov
push
pop
cmp
leave
into
xor
ret
mov
aaa
ss
test
and
jmp
fidiv
addr16
test
cmps
mov
mov
loope
(bad)
aas
icebp
in
push
push
jbe
mov
jbe
popf
test
lds
enter
add
mov
mov
cli
add
cmp
fdiv
add
sti
push
mov
fidiv
pop
push
les
mov
repz
lods
xchg
add
imul
int3
rcr
and
push
xchg
sub
mov
push
outs
loop
sbb
jne
ds
adc
xchg
cmps
push
cwde
push
add
push
xchg
hlt
cdq
ja
lock
lods
push
ficom
shl
je
add
add
retf
mov
adc
out
push
pop
mov
js
push
out
cmp
dec
out
test
outs
mov
ins
mov
ret
retf
arpl
adc
pop
mov
or
mov
sub
push
push
add
mov
xor
int3
pop
pop
cmp
xchg
in
loopne
sahf
movs
and
pop
dec
imul
adc
(bad)
mov
mov
mov
(bad)
or
arpl
sbb
mov
leave
mov
sub
adc
add
shl
cmp
call
push
pusha
inc
xor
arpl
sahf
xor
inc
fmul
inc
jbe
cmp
pop
shl
sub
int3
or
add
ss
and
lods
arpl
add
fadd
or
xchg
cmp
push
cwde
daa
int
ja
loope
loope
test
test
pop
imul
push
out
sub
mov
or
jmp
sub
jmp
adc
sbb
lods
aaa
inc
xchg
mov
mov
outs
sub
cld
inc
out
push
jae
xchg
sub
gs
vsqrtpd
fisttp
sbb
add
xor
cwde
bound
jmp
and
inc
mov
xor
cmp
push
adc
syscall
out
and
or
addr16
lods
cwde
jae
xchg
daa
rcl
repnz
rcl
cmps
clc
mov
lods
push
loop
rcl
outs
ins
cmp
out
test
cmp
jmp
cmp
or
gs
jg
add
sub
pop
in
or
mov
lock
sar
add
test
dec
lods
fnsave
mov
jmp
mov
rol
push
jmp
out
fdivr
loopne
add
mov
dec
push
mov
test
dec
sbb
push
pop
aas
mov
mov
xchg
push
push
addr16
or
int
sub
into
outs
jg
fistp
mov
cdq
dec
dec
dec
dec
xor
movaps
xchg
test
(bad)
mov
mov
in
push
adc
leave
jmp
std
pop
movs
dec
shl
(bad)
popa
sub
pop
ds
cs
sbb
cmp
ds
lods
imul
in
xor
fs
dec
fucomi
ret
out
mov
sbb
cmps
popa
sti
or
dec
or
mov
movs
sub
cmps
shr
or
cmp
(bad)
push
sbb
stos
push
mov
arpl
jb
adc
ror
mov
psubd
call
jno
sbb
lea
es
xchg
add
cmp
xor
das
mov
out
pop
jl
nop
push
push
aaa
mov
sub
adc
adc
and
clc
pop
jae
cmp
pop
xor
pop
sub
enter
ja
int3
pop
inc
(bad)
pop
(bad)
jb
mov
dec
stos
es
jns
add
jl
sti
pop
adc
bound
push
pop
cmp
cdq
xor
push
rol
or
mov
les
add
test
xlat
push
popf
adc
adc
fs
call
pop
(bad)
rcr
add
xchg
fsub
push
out
sbb
pusha
mov
xchg
xchg
mov
mov
sub
adc
mov
fwait
jp
dec
fstp
lds
mov
sbb
xor
clc
sub
sbb
jge
push
pop
ss
sub
or
mov
push
push
inc
dec
cmp
mov
and
ss
cmps
inc
inc
cmp
out
inc
sar
mov
imul
lahf
cmp
nop
in
or
and
jbe
mov
inc
xor
ficomp
xor
xchg
(bad)
and
push
push
aad
adc
in
mov
lods
dec
xchg
and
gs
mov
push
ss
dec
fiadd
pop
movs
scas
xchg
loop
push
nop
repnz
outs
ins
imul
mov
inc
cli
jnp
scas
dec
dec
mov
loope
jne
jmp
imul
add
pop
pop
pop
aas
cmp
test
dec
fild
cmp
sub
daa
sub
pop
sub
mov
push
test
jge
test
jp
(bad)
clc
call
jecxz
(bad)
outs
pop
mov
jge
push
push
sub
addr16
enter
jl
cli
push
ret
inc
ret
cmp
xor
int
jmp
mov
dec
jecxz
add
mov
loope
inc
(bad)
ds
aam
mov
or
jp
cli
int3
jmp
shl
mov
fucomp
mov
out
call
xor
pop
xchg
xor
adc
aaa
pop
jg
push
scas
mov
outs
inc
fs
push
pop
inc
mov
out
movs
add
and
aas
in
jne
mov
sub
dec
inc
push
inc
push
sub
das
aad
dec
lods
imul
cmp
aaa
or
and
mov
mov
test
mov
mov
setne
sub
push
bound
push
mov
retf
mov
popa
(bad)
aam
data16
adc
xchg
inc
add
inc
sti
inc
and
xchg
jne
clc
inc
xchg
or
sbb
je
push
rcr
inc
pop
(bad)
adc
push
call
dec
add
and
mov
nop
pop
and
pop
xlat
in
or
ins
push
jmp
pusha
sbb
lock
ds
stc
and
sbb
imul
push
stos
add
push
inc
pop
cmp
pop
push
inc
mov
rcl
xchg
mov
mov
es
dec
ja
out
push
pop
adc
je
jo
jno
pop
push
movs
imul
retf
pop
mov
adc
(bad)
dec
test
rcr
test
and
mov
fiadd
xor
in
enter
pop
out
cs
lea
enter
data16
xchg
pushf
mov
cdq
xchg
fsubr
adc
xlat
scas
stos
sub
dec
daa
mov
mov
xchg
daa
out
sti
mov
pop
sbb
xchg
pushf
(bad)
push
cmp
ins
les
lods
cmp
sub
xchg
mov
or
movs
mov
sar
fidivr
xlat
rcl
xor
jb
dec
jb
jp
in
bnd
sub
sbb
xor
jp
cli
leave
inc
or
push
xchg
fisub
and
sar
ds
jnp
mov
mov
sbb
push
pop
movs
dec
push
enter
mov
xor
or
push
data16
lahf
in
lea
inc
(bad)
cmp
ja
rol
mov
test
dec
mov
lods
mov
cmps
dec
lahf
sbb
pop
arpl
sbb
jecxz
cmp
or
in
pop
push
je
stc
ins
movs
inc
xchg
cmc
dec
add
das
in
pop
mov
push
retf
mov
dec
mov
leave
stos
das
mov
jp
sahf
addr16
fistp
xchg
das
(bad)
in
pop
inc
stos
inc
fisttp
shr
lock
dec
ds
adc
xchg
rcl
or
xor
add
mov
jg
std
arpl
xchg
push
stos
push
inc
jmp
cdq
cdq
leave
mov
lods
movs
mov
add
sbb
push
mov
xchg
les
dec
and
pop
pop
inc
xchg
imul
jae
mov
pop
pop
mov
mov
dec
push
fs
fimul
and
and
xor
pop
xchg
(bad)
test
or
daa
rol
int
adc
retf
jne
jecxz
ja
jle
jae
mov
or
mov
and
inc
dec
ins
mov
loope
sar
mov
dec
mov
lahf
add
ss
lds
rcr
lahf
xchg
sub
aaa
movs
enter
cmp
add
outs
inc
pop
dec
add
repnz
inc
cmp
mov
lds
out
xchg
clc
inc
fstp
mov
rcl
add
mov
bound
and
or
ins
fs
mov
dec
pop
xchg
xchg
test
ins
and
cwde
dec
add
repnz
dec
lea
bound
aas
xor
xchg
call
test
adc
ins
pop
lods
cmp
or
xor
in
cmp
in
retf
les
dec
mov
push
loopne
stos
pop
push
adc
aas
inc
movs
inc
fist
jae
and
test
and
ror
jne
in
xor
test
cdq
add
les
loope
mov
sub
popf
xor
mov
gs
dec
movs
pop
out
or
xlat
inc
sar
or
adc
enter
retf
cdq
push
imul
or
(bad)
sub
or
push
inc
mov
daa
pop
div
add
fimul
mov
and
hlt
xchg
dec
push
sub
jb
dec
xchg
and
lds
cmova
push
lods
pusha
add
adc
cmp
in
retf
(bad)
popf
xor
inc
dec
sti
pop
inc
in
sub
popf
mov
pop
pop
ror
jmp
rcl
fcmovu
add
pop
jnp
mov
sub
shr
(bad)
mov
adc
(bad)
daa
cmps
mov
push
js
dec
mov
aas
pop
push
fbstp
pop
arpl
xor
and
mov
push
outs
mov
push
sub
outs
(bad)
fcom
daa
dec
(bad)
xlat
cmps
outs
mov
cs
out
or
mov
sub
ins
out
fidivr
mov
stos
aad
lahf
scas
ja
(bad)
std
cmp
push
cs
mov
jl
add
movs
cmc
mov
xchg
xor
sbb
leave
sub
push
sub
dec
pushf
call
xor
mov
push
mov
and
movs
push
test
add
sti
jge
ja
out
fistp
test
xor
std
pop
jnp
out
pop
jmp
dec
jbe
loop
idiv
aad
mov
cmp
les
(bad)
fild
sti
fsub
jbe
out
fwait
outs
mov
inc
jmp
imul
inc
(bad)
out
jg
xor
popa
movs
adc
mov
xor
call
xor
dec
add
add
sbb
mov
xor
add
inc
mov
addr16
or
sbb
mov
cmps
add
cmp
or
sbb
outs
xor
nop
adc
int3
pop
pop
rcl
inc
in
sahf
aad
daa
inc
les
ret
sbb
int
inc
or
pushf
fist
stos
mov
pop
outs
sahf
xchg
pop
popf
les
sbb
scas
arpl
xor
(bad)
lods
jmp
jge
ror
outs
ror
sahf
ins
xor
xchg
mov
es
test
cli
nop
loop
mov
push
mov
mov
inc
cli
(bad)
mov
sti
mov
cmp
mov
mov
sbb
cwde
inc
adc
pop
je
sbb
jecxz
loop
lahf
xor
xor
inc
push
push
sbb
mov
push
jb
(bad)
xor
jmp
test
retf
daa
js
(bad)
cmc
nop
jnp
fsubr
mov
inc
dec
sbb
push
xor
aaa
or
sbb
stos
mov
bound
mov
cwde
gs
mov
jae
xchg
xchg
or
enterw
stos
pop
sub
sar
pop
push
and
adc
push
rcr
cmp
jae
call
or
lods
jp
out
mov
fisubr
fs
jmp
lahf
es
xchg
aam
cmp
rol
adc
cmps
iret
in
ret
or
sbb
cwde
mov
fcomi
adc
ret
loop
dec
jl
dec
inc
mov
(bad)
jmp
cli
fadd
jl
loop
aas
jns
lea
hlt
idiv
loopne
jecxz
jnp
outs
fnstsw
loopne
icebp
leave
ret
jge
neg
xor
cs
loope
rol
xor
in
clc
(bad)
int
(bad)
nop
jl
or
test
jg
das
mov
mov
jge
stc
jg
retf
jg
call
mov
dec
push
sti
lock
fnstenv
outs
jg
neg
mov
js
jmp
xlat
pop
fistp
(bad)
push
(bad)
into
lea
scas
cld
lods
das
jge
test
jne
jnp
mov
(bad)
clc
(bad)
mov
fwait
pop
std
jmp
cmc
cld
inc
jns
ret
repnz
mov
or
add
aam
sub
enter
(bad)
std
push
int3
pushf
xchg
sbb
mov
push
fadd
repnz
xchg
outs
cdq
mov
push
and
pushf
mov
dec
pusha
xchg
xchg
out
mov
repz
xor
mov
inc
adc
vcvtps2dq
dec
pusha
mov
or
sub
push
outs
out
call
inc
jmp
sub
mov
xchg
jle
mov
pusha
add
shr
mov
sbb
jae
mov
jecxz
jae
out
inc
adc
and
ret
call
arpl
sbb
das
ss
push
or
mov
xor
mov
in
neg
in
out
or
movs
test
outs
push
leave
inc
cmp
xor
sbb
mov
dec
icebp
inc
imul
enter
in
inc
fsubr
push
retf
sahf
sub
movs
fmul
(bad)
hlt
push
or
dec
cmp
pop
add
in
dec
mov
inc
jb
pop
adc
inc
dec
hlt
jecxz
fdiv
xor
inc
push
dec
mov
mov
inc
mov
sub
idiv
retf
and
iret
std
mov
stos
call
popf
mov
and
mov
loop
mov
adc
push
js
in
mov
ret
jl
adc
je
ret
xchg
cmp
es
and
daa
es
xor
pop
dec
out
xor
inc
pushf
dec
add
dec
mov
sub
loope
sbb
lods
pop
out
fptan
movs
xor
adc
dec
sub
sub
or
cli
(bad)
sbb
pushf
arpl
adc
imul
mov
(bad)
enter
int
(bad)
jmp
idiv
shl
hlt
push
mov
sti
xor
xlat
scas
mov
(bad)
push
mov
out
push
dec
cwde
cmps
not
lods
cdq
loopne
ret
jecxz
adc
mov
(bad)
cld
cmps
aas
stc
mov
mov
retf
cli
scas
pop
jp
cmps
outs
pop
cmp
pop
clc
mov
sti
or
icebp
leave
leave
push
mov
push
mov
jle
inc
mov
fimul
je
clc
popf
mov
(bad)
out
outs
in
(bad)
jae
into
popf
fld
fnstenv
mov
loop
mov
loopne
cmp
mov
fstp
(bad)
lock
aas
inc
out
std
dec
mov
and
imul
mov
jp
clc
xchg
dec
arpl
cwde
mov
xchg
out
xlat
enter
pop
mov
or
jmp
fistp
xchg
sbb
or
dec
add
xchg
test
jo
pop
loopne
(bad)
and
jmp
aam
pop
push
adc
and
es
les
lods
push
or
lahf
sbb
jmp
rcr
dec
cmc
adc
sub
push
scas
mov
into
sbb
movs
and
or
fimul
imul
lahf
mov
stos
ss
or
mov
cmp
xchg
mov
mov
push
push
jnp
fistp
mov
jb
xlat
ds
in
test
mov
push
in
and
retf
leave
jle
mov
call
add
jno
sti
popa
and
xchg
xor
and
cmp
cwde
fst
dec
xor
xchg
mov
pop
add
push
mov
and
sbb
mov
mov
stos
dec
movs
sbb
mov
ret
scas
mov
cmp
ja
push
pop
fisub
sbb
sub
mov
push
int
push
enter
aam
nop
enter
sbb
scas
adc
cmp
adc
(bad)
adc
fmulp
aaa
aaa
iret
not
and
jge
ins
out
imul
fdivr
inc
lods
xchg
mov
dec
loope
adc
sbb
pop
mov
addr16
pop
xchg
ss
cmps
cmp
jo
inc
repz
mov
jae
xchg
cmp
aad
pop
push
lods
xchg
fst
mov
fldcw
xchg
dec
lahf
mov
cmp
out
(bad)
jecxz
out
mov
lock
ret
dec
jge
jecxz
jnp
in
stc
xchg
push
fistp
pop
mov
icebp
xchg
sti
ins
sti
int
lahf
pop
mov
stc
cmp
mov
jnp
sti
lahf
cld
in
jle
ret
pop
cld
cdq
js
repnz
aas
cli
aaa
outs
mov
jg
push
lahf
clc
mov
clc
imul
mov
jnp
pop
(bad)
cld
test
pop
outs
fnstsw
(bad)
pop
jle
xchg
push
cmps
dec
sbb
out
mov
xlat
fidivr
in
ja
jns
mov
fdivr
aas
(bad)
cld
outs
jge
mov
stc
mov
cld
(bad)
idiv
xchg
pop
mov
cmc
lods
outs
std
loopne
aas
js
icebp
(bad)
dec
push
cmp
jecxz
retf
mov
xor
sub
retf
mov
(bad)
push
std
ffree
mov
out
loop
cli
movs
outs
jnp
cwde
movs
or
mov
xor
popa
int3
pop
jmp
mov
xor
cdq
or
ja
fistp
mov
jae
ins
aaa
es
jg
xchg
cli
push
aaa
retf
iret
inc
mov
in
(bad)
xchg
rol
push
sub
sbb
push
neg
sbb
cmp
cmp
mov
add
addr16
jbe
mov
in
inc
or
pushf
sub
push
cs
outs
adc
or
push
sbb
pop
popa
adc
push
inc
retf
lods
jp
ret
pop
mov
(bad)
cmps
mov
dec
in
mov
shl
shl
mov
pop
adc
dec
stos
je
xor
cmp
inc
mov
sahf
stos
inc
sbb
rol
scas
dec
xor
fistp
out
movs
pop
and
and
cmp
inc
and
call
stos
push
test
adc
xchg
scas
xchg
adc
cmp
and
test
mov
mov
add
int
xchg
and
pop
jae
shl
cmp
fist
mov
sub
sbb
mov
or
aas
test
stos
sub
sbb
loopne
pop
scas
pop
sub
or
int3
repnz
mov
xchg
xchg
gs
ret
lea
jb
xor
cli
icebp
adc
push
(bad)
inc
rol
into
push
int
dec
adc
lahf
js
call
jo
and
mov
rol
loop
cli
cmp
(bad)
idiv
sahf
sbb
lahf
(bad)
aas
jg
ud0
aas
ficomp
das
in
ss
(bad)
aas
not
sar
mov
inc
out
fidivr
imul
fidivr
dec
lahf
cmp
cmp
hlt
test
scas
pop
jp
retf
repz
pop
mov
mov
mov
adc
std
loop
aas
neg
iret
jle
fidivr
push
fidivr
ja
cld
out
scas
pop
jns
xchg
aas
cld
ret
aas
fcomp
cmp
mov
jp
cli
int
and
out
fnstsw
rcl
icebp
sbb
ds
in
aaa
std
ror
jg
(bad)
out
pop
jl
div
fistp
stos
pop
mov
push
cdq
mov
daa
cwde
mov
dec
xor
stos
leave
daa
push
xchg
mov
fisttp
inc
popa
adc
sub
and
and
cmp
dec
(bad)
push
mov
(bad)
imul
pop
int3
jl
dec
cmps
sahf
sbb
jb
aas
cdq
pop
cmp
outs
test
sbb
cmp
xchg
cdq
add
sbb
and
jne
out
push
mov
push
dec
mov
fs
shl
dec
addr16
cs
cmps
add
inc
and
ret
jne
fidiv
leave
sar
mov
jl
(bad)
add
pop
add
aam
push
stos
outs
inc
cwde
call
movs
fucomi
inc
push
(bad)
js
fwait
xchg
out
popf
xor
aad
adc
or
sbb
stos
daa
dec
mov
and
(bad)
add
xchg
xchg
ja
aam
int3
ss
bound
xchg
loopne
rcr
add
cmp
mov
and
je
mov
pop
jae
ja
xor
rcr
cmp
mov
movs
mov
sub
sub
int3
sub
mov
or
and
aas
xchg
popa
call
rol
sar
dec
xor
dec
(bad)
loop
add
loope
xor
in
or
imul
call
mov
fisttp
cli
inc
mov
xchg
fld
jge
(bad)
mov
pop
aam
fs
(bad)
sbb
push
or
bound
cwde
mov
fwait
ds
sbb
mov
js
fmul
add
cmc
imul
xlat
(bad)
clc
lahf
cld
(bad)
mov
dec
aam
int
xchg
cs
int3
mov
das
ds
and
cs
mov
cmp
stc
icebp
leave
mov
mov
outs
mov
mov
fistp
mov
jecxz
iret
cmp
sub
lock
jmp
jae
inc
xchg
jae
sti
push
loop
sti
cli
xlat
(bad)
stc
aas
(bad)
aas
jbe
in
sbb
pusha
call
mov
(bad)
cmp
jle
xchg
lahf
cld
int
cld
int
jg
repz
cmp
int3
adc
jno
fidivr
jg
out
mov
std
out
out
mov
inc
(bad)
ja
out
pusha
add
loopne
mov
mov
ja
ret
jo
push
inc
cmp
mov
mov
aaa
outs
or
cli
jmp
inc
ins
test
pusha
out
je
sbb
leave
fld
jbe
outs
pop
fiadd
cmp
pop
jns
jno
clc
leave
adc
lea
dec
into
adc
shl
pop
dec
sbb
ror
hlt
cmps
retf
mov
jmp
ds
aad
fnsave
ror
js
(bad)
scas
pusha
aas
xchg
push
shl
pop
sbb
fild
icebp
mov
test
leave
adc
sbb
ja
cli
enter
nop
inc
(bad)
push
dec
pop
fistp
dec
fsub
mov
into
inc
adc
repz
pop
mov
jb
pop
add
rcr
dec
fnsave
test
jbe
aad
jae
stos
xchg
outs
fcomip
out
cwde
div
mov
aad
fstp
shr
and
call
leavew
mov
mov
mov
xchg
cmp
stc
push
sub
pop
adc
sbb
mov
pop
sub
sub
mov
push
imul
dec
test
pop
lock
into
stos
jp
leave
ins
xor
cli
xor
mov
adc
jo
dec
mov
xor
mov
dec
(bad)
jns
sbb
push
cmp
pusha
pop
cs
and
or
pop
or
jl
cmps
sbb
lahf
push
cmp
push
xlat
imul
mov
test
(bad)
in
fnstsw
out
stc
retf
(bad)
cmps
push
add
jge
dec
mov
aas
mov
pop
mov
(bad)
iret
popf
cmp
(bad)
out
cmp
popf
cmp
out
aas
jl
repnz
test
and
dec
das
std
loop
sahf
sti
clc
inc
pop
fidivr
out
outs
(bad)
stc
or
jmp
cmp
mov
pop
jl
(bad)
(bad)
push
stos
mov
jecxz
div
out
fimul
(bad)
repnz
ret
lock
in
sbb
ja
inc
dec
das
jge
pop
(bad)
into
ja
repz
das
lahf
aas
jg
aas
jmp
dec
(bad)
in
(bad)
adc
rcl
inc
popf
sar
cmp
cmp
fisubr
and
or
pop
mul
jnp
inc
test
or
popa
ins
js
sti
cmps
js
arpl
mov
jns
xchg
jp
cmps
sub
aas
ret
xor
ss
sbb
mov
push
test
aad
sub
mov
sbb
ficomp
inc
push
xchg
sbb
imul
inc
ins
dec
sbb
ret
nop
mov
dec
and
and
dec
gs
div
test
sbb
and
xchg
mov
es
bound
daa
cmp
inc
mov
xchg
pop
mov
add
daa
dec
mov
shl
out
sub
push
mov
dec
pop
les
pop
cmp
adc
adc
ss
(bad)
and
(bad)
or
pushf
cli
xchg
add
pop
jp
es
and
icebp
in
lock
aad
dec
jbe
cdq
fisttp
in
jne
and
out
scas
adc
push
or
mov
iret
mov
inc
pop
pop
xlat
gs
cmp
xor
jae
gs
adc
or
add
mov
int
in
dec
pusha
je
adc
(bad)
pop
inc
imul
xchg
or
out
jne
mov
mov
enter
pop
stos
lods
and
leave
ss
xchg
call
jmp
xchg
stos
inc
imul
call
imul
add
fisubr
mov
inc
jg
fucomp
jle
in
in
mov
cmp
dec
iret
frstor
in
aam
add
addr16
int3
dec
pop
mov
jle
test
sahf
sti
in
iret
mov
sbb
fistp
int
das
aas
jg
ret
addr16
out
in
mov
out
(bad)
jmp
mov
sti
(bad)
into
in
gs
psadbw
fidivr
repnz
aas
imul
stc
fstp
rol
ds
ja
jl
lea
mov
sti
fstp
pop
jg
xchg
scas
(bad)
in
iret
ds
sar
mov
test
je
pop
je
sub
gs
and
ja
add
or
push
dec
jge
rcr
arpl
add
add
mov
mov
sti
addr16
pop
dec
call
or
mov
pop
xchg
inc
enter
jbe
or
mov
ins
shl
or
mov
adc
and
pop
pop
and
ja
mov
sar
cwde
iret
mov
(bad)
and
mov
(bad)
sbb
pop
xchg
mov
(bad)
cmp
test
and
sbb
leave
mov
jmp
add
int
int
xor
sub
cmc
pop
pop
add
movs
sbb
sar
(bad)
mov
jne
in
call
test
adc
test
inc
add
or
mov
out
add
mov
arpl
dec
stos
iret
daa
(bad)
cmp
add
mov
mov
fdivr
fcmovbe
test
adc
sar
adc
fidiv
jle
inc
mov
ror
xchg
sub
arpl
fdiv
aad
stos
scas
mov
or
sahf
mov
cmps
xchg
test
ins
xlat
rol
and
adc
jecxz
in
rcl
dec
test
test
in
mov
(bad)
pop
mov
dec
push
shl
mov
sub
gs
lods
fcmovu
and
mov
js
add
or
push
cmps
push
enter
push
cmps
dec
ins
(bad)
push
and
xor
jl
mov
out
clc
clc
dec
pop
jnp
xchg
pop
(bad)
call
out
popf
pushf
mov
ficom
pop
push
mov
lahf
jp
test
inc
aas
cld
shr
cs
aas
mov
jge
(bad)
push
cmp
arpl
fisubr
out
(bad)
retf
jp
cld
arpl
cmc
jge
ds
jl
out
fwait
iret
cmp
into
jg
or
cld
jecxz
jg
stc
out
cld
loope
aas
std
hlt
rcl
push
pop
ds
neg
out
cld
call
out
(bad)
aad
cli
mov
jge
out
das
jg
retf
push
jg
lahf
ds
or
cmps
jecxz
xor
sbb
mov
lods
ins
or
sub
jnp
out
adc
and
adc
push
and
xchg
adc
pop
xchg
dec
mov
push
jno
cmc
into
mov
aam
jmp
lahf
push
and
cli
daa
cmp
je
and
stos
ror
push
add
rcl
adc
or
aas
es
push
retf
cs
mov
paddd
mov
stos
push
call
inc
mov
scas
and
ror
cmp
test
adc
fcmovbe
xor
dec
and
lea
or
xlat
push
push
push
or
shr
lahf
dec
mov
pop
pop
cmps
mov
hlt
sbb
lods
mov
dec
mov
arpl
or
mov
adc
inc
push
cmp
cmp
mov
pop
mov
lods
rcr
adc
cmp
adc
jns
repnz
stos
pop
shl
sbb
arpl
add
pop
mov
inc
test
mov
and
push
adc
pop
push
into
lahf
sbb
addr16
or
sub
mov
adc
and
push
icebp
nop
inc
fwait
mov
je
test
mov
scas
test
cmp
push
pop
cld
inc
shl
jae
xor
gs
int
call
mov
and
pop
in
into
xor
cmp
sahf
mov
pop
popf
pop
push
inc
test
imul
das
jne
dec
xor
adc
mov
pop
je
jmp
fdiv
shl
bound
mov
or
xor
loop
xor
cmc
int
(bad)
in
(bad)
in
or
push
jnp
loop
pop
jle
(bad)
mov
test
cmp
ja
je
mov
sbb
outs
fistp
lahf
cmp
cld
test
test
pop
cmp
xchg
jbe
mov
(bad)
repnz
dec
out
jnp
adc
icebp
pop
(bad)
in
lahf
std
(bad)
out
std
into
outs
imul
pop
jle
pop
pop
js
test
jge
fstp
iret
cmp
clc
lock
jge
daa
scas
jle
sti
(bad)
stos
mov
(bad)
cmc
dec
jg
out
out
inc
outs
cld
popf
jg
aas
clc
(bad)
lock
sti
outs
fistp
push
sbb
xchg
jnp
hlt
test
jmp
es
jmp
sbb
add
loopne
sub
xor
cmc
cmp
xchg
jbe
sub
sahf
xor
movs
mov
xor
lea
bound
and
cmp
test
in
sub
test
icebp
and
lods
movs
fidivr
int3
je
fcmovnbe
mov
(bad)
leave
imul
(bad)
imul
fs
dec
dec
push
and
jmp
test
jno
xlat
sbb
je
mov
ss
shl
jo
arpl
cmp
sub
adc
add
(bad)
call
pop
imul
add
hlt
pop
and
mov
dec
mov
inc
fistp
scas
int3
push
ins
iret
mov
push
jb
mov
adc
pop
imul
push
adc
adc
jnp
dec
mov
std
aam
push
xor
push
icebp
and
pcmpgtb
inc
movs
cmp
pusha
cmp
mov
std
lds
and
or
inc
dec
rcr
sub
jb
or
adc
sub
or
(bad)
loope
cdq
and
fs
ficom
stos
sub
loop
cld
or
and
mov
push
(bad)
mov
xor
cmp
enter
mov
ins
aas
inc
int
les
ror
dec
pop
ins
hlt
jne
popw
sbb
inc
pop
jmp
xchg
stos
xchg
neg
add
ror
xchg
cmp
movs
push
(bad)
ja
xchg
jne
mov
ins
jg
out
int3
test
xor
cmps
in
gs
(bad)
neg
sbb
pushf
sbb
aas
mov
repz
int3
jmp
lahf
push
addr16
out
addr16
cmps
iret
fidivr
pop
cmp
(bad)
sbb
in
mov
xlat
out
fnstsw
mov
(bad)
jmp
xchg
pop
fdivrp
ret
jg
xchg
ds
(bad)
cmp
mov
jg
cmc
xchg
pop
jle
movs
xchg
pop
jp
xchg
xchg
fistp
xchg
xchg
xchg
addr16
jge
xor
out
shr
pxor
jge
aas
inc
pushf
ficom
sub
aas
je
fild
mov
cmp
out
mov
mov
jmp
xor
mov
sbb
repz
mov
dec
pusha
movs
out
xchg
sub
repz
pusha
dec
pop
inc
retf
mov
fld
or
in
xchg
pusha
cmp
jmp
cmp
or
sbb
add
add
sub
mov
les
(bad)
div
gs
ja
or
ss
outs
jbe
sub
not
daa
xor
repz
dec
pop
test
loop
out
pop
mov
test
sub
repz
out
sbb
sub
mov
push
(bad)
xlat
mov
push
cmc
lds
and
test
shl
cmp
out
in
rcl
jmp
jnp
dec
pop
aam
jb
jo
add
aaa
push
test
popa
push
int3
mov
xor
xchg
adc
pop
and
add
mov
imul
add
lds
movs
cmp
es
dec
push
mov
cmp
les
fwait
dec
gs
pop
dec
mov
dec
scas
test
aam
or
xor
mov
dec
daa
bound
arpl
sbb
shl
xchg
loope
outs
jo
push
or
fucomp
inc
aad
fidiv
push
sar
adc
cmc
xor
inc
jno
adc
lods
scas
in
shr
push
inc
mov
xor
mov
stos
cmp
stc
push
or
in
or
(bad)
push
enter
dec
cmc
lds
fwait
adc
dec
adc
xor
pusha
cmp
jp
je
out
jg
pop
aas
jge
jmp
sti
cli
ja
sti
(bad)
out
outs
in
test
out
daa
jb
(bad)
iret
cdq
mov
int3
(bad)
fidivr
loopne
aad
out
mov
inc
in
dec
mov
not
pushf
clc
mov
rol
icebp
jb
ret
jge
int
fidivr
dec
cmp
hlt
ror
ds
jmp
imul
jge
push
stc
in
iret
mov
cld
jecxz
in
lock
popf
fucomi
cmp
popf
mov
addr16
out
repz
pop
mov
xchg
retf
push
fdivp
mov
out
sti
mov
pop
lods
bound
sbb
bound
sub
test
dec
je
int
adc
mov
xchg
ret
in
call
imul
gs
shl
jae
repnz
dec
sbb
xor
xor
mov
push
outs
push
pop
xchg
pop
movs
addr16
retf
mov
movs
jne
sbb
inc
sbb
adc
out
pop
cdq
xor
mov
(bad)
mov
imul
and
adc
bound
and
mov
inc
xchg
or
js
aaa
into
(bad)
mov
sbb
xchg
lea
or
jl
mov
and
xchg
call
pop
mov
jle
pop
int3
jb
movhps
cmc
and
in
mov
arpl
int3
inc
cmp
lods
popa
into
jge
sbb
lods
(bad)
xor
mov
call
jnp
xor
xor
adc
popa
aaa
mov
and
pop
repnz
(bad)
xlat
mov
xor
push
sar
pusha
adc
mov
inc
inc
ins
stc
push
(bad)
and
xor
fstp
sub
clc
mov
inc
(bad)
mov
adc
aad
je
imul
jmp
rcl
mov
or
jp
pushf
jbe
adc
call
test
mov
xor
xor
je
jns
push
je
stos
in
dec
repz
pop
push
pop
lock
mov
mov
dec
cs
rcpps
mov
cmp
xchg
pxor
mov
sbb
outs
mov
out
fimul
in
das
jmp
mov
sahf
fadd
(bad)
in
jo
jl
sti
out
in
mov
ja
ja
mov
retf
push
push
jnp
mov
emms
jnp
inc
or
mov
mov
pop
mov
scas
pop
mov
out
neg
pop
mov
ds
xor
js
(bad)
out
in
ds
icebp
icebp
jno
add
fdiv
mov
push
jg
rcl
xchg
fidiv
xchg
mov
mov
jecxz
xor
jae
adc
sbb
out
mov
rcl
sub
movs
mov
outs
jecxz
mov
movs
loope
jo
mov
pop
inc
rcl
cmp
push
jne
dec
clc
sub
jecxz
ror
jnp
mov
cmp
xor
sar
jp
popa
into
inc
sbb
mov
(bad)
das
dec
outs
enter
repnz
rcl
inc
push
nop
xchg
cs
adc
mov
xchg
daa
push
pop
pop
leave
pop
pop
push
loopne
aam
movs
pusha
cmp
jmp
aaa
fild
scas
bound
icebp
sbb
hlt
lahf
mov
mov
push
sub
sub
pop
cwde
fsubr
lock
push
rcl
mov
lods
mov
and
push
iret
push
mov
and
fist
push
hlt
call
xor
test
mov
mov
fistp
sbb
mov
test
outs
push
push
fmul
fidivr
push
popa
push
cdq
jge
sub
scas
iret
(bad)
mov
jmp
and
or
push
loop
xor
push
fisubr
mov
aad
lock
imul
nop
xchg
stc
out
sbb
sbb
jbe
adc
xor
xchg
jae
in
add
cmp
and
mov
out
mov
out
js
repnz
sub
jb
cmps
sahf
mov
lahf
mov
fild
cli
outs
inc
cmovo
sub
loope
aas
fsubrp
push
pxor
lods
fwait
ja
(bad)
addr16
jge
inc
jbe
std
jmp
jnp
out
in
jg
in
(bad)
ds
loop
mov
repz
xchg
out
sti
gs
sahf
out
(bad)
jae
cmp
fldenv
ror
in
fstp
outs
mov
jp
cld
test
aas
jle
call
cmp
ja
(bad)
xchg
mov
cmp
or
outs
in
mov
mov
(bad)
iret
popf
fidiv
dec
cmps
frstor
mov
je
pop
std
add
aaa
sub
sbb
xor
push
jge
sbb
je
mov
push
sbb
push
jbe
adc
les
xor
mov
push
push
jmp
out
jno
test
aam
jle
rol
cmps
inc
push
stos
and
movs
aad
int3
jp
jmp
hlt
mov
inc
add
push
pop
test
add
inc
lods
aad
dec
je
inc
enter
movs
push
stos
pop
sbb
push
mov
inc
cdq
add
ja
mov
sub
inc
push
outs
lea
cdq
xchg
int
inc
lahf
mov
and
retf
adc
shl
and
ss
ins
fwait
les
(bad)
inc
fadd
pop
sti
or
test
mov
or
repz
push
or
outs
cdq
leave
and
jg
jbe
in
mov
sub
shr
push
int3
push
cmc
shl
or
pop
(bad)
mov
mov
dec
sub
enter
xor
cs
dec
jmp
sbb
dec
sub
adc
call
imul
out
and
add
add
in
dec
lods
ins
stos
inc
add
xor
mov
push
(bad)
pop
pop
outs
addr16
sbb
jmp
stos
mov
int
or
sbb
xchg
stos
(bad)
aad
mov
mov
jle
cmp
loope
test
push
inc
fwait
maskmovq
test
fs
add
ret
xor
int
sbb
nop
stos
rcl
inc
jb
sbb
sbb
xchg
push
jno
sti
into
outs
adc
jo
stc
in
add
lods
int3
daa
sub
mov
shl
mov
cmp
retf
adc
xchg
pusha
push
fst
push
(bad)
sbb
fld
out
sub
mov
mov
push
cli
jmp
popa
fdiv
fstp
push
repnz
inc
mov
loope
iret
mov
aaa
cmps
imul
call
or
arpl
mov
jmp
jne
sub
out
fistp
jno
pusha
das
or
xor
loopne
repz
mov
sbb
push
mov
fcmovb
pop
mov
cmc
add
(bad)
mov
add
fldenv
mov
sub
mov
dec
ss
mov
xor
add
or
lock
ins
js
inc
xor
aam
dec
(bad)
and
test
sub
pop
test
mov
sub
mov
dec
mov
push
pop
inc
adc
jno
daa
pop
jmp
add
leave
dec
(bad)
call
push
and
cmps
jbe
mov
cwde
push
loop
lods
enter
adc
ss
mov
and
lock
dec
fdiv
cmp
rcr
add
xchg
mov
test
lods
push
mov
jns
ror
mov
sub
inc
ja
xor
xor
push
jo
add
shl
mov
(bad)
sub
lea
xchg
jns
add
xchg
(bad)
jb
push
lods
sti
daa
mov
in
push
inc
into
ror
ins
mov
out
or
xchg
pop
aas
adc
push
jecxz
inc
pop
lods
in
push
clc
xor
mov
icebp
add
push
push
add
adc
sbb
push
pop
jnp
sub
leave
mov
les
inc
push
adc
cwde
cmp
call
fistp
cmp
adc
and
rcl
sti
push
jmp
cld
dec
(bad)
arpl
mov
(bad)
cmp
jne
pop
icebp
mov
popf
outs
pop
add
(bad)
and
sbb
popf
cmp
lods
jmp
es
retf
in
dec
into
cmp
aaa
or
jo
test
mov
mov
cdq
dec
add
xor
clc
pusha
cmp
jl
sub
cs
repnz
dec
pop
mov
mov
gs
dec
popf
mov
mov
cmc
in
or
and
gs
or
mov
add
cmc
jg
inc
xor
jle
or
fldcw
pop
or
push
or
and
sbb
xchg
inc
mov
jns
or
mov
ss
xor
cdq
cmps
imul
jmp
inc
fwait
mov
cmc
outs
push
dec
pop
jno
xchg
sbb
or
inc
retf
sub
add
pop
out
sub
sbb
sbb
outs
sub
es
bound
ins
jnp
aad
push
bound
add
movs
xlat
xor
sar
push
hlt
dec
ds
sahf
(bad)
pop
dec
xchg
into
dec
adc
jnp
mov
jp
cmp
push
fbstp
ror
sub
dec
pushf
mov
jle
xchg
jge
add
movs
test
cwde
loop
retf
arpl
jae
xor
adc
pop
mov
bound
mov
ja
leave
adc
dec
push
push
add
jbe
jmp
or
mov
and
jg
fidiv
cmp
sub
mov
or
and
cmp
inc
imul
inc
lock
add
mov
pop
xor
das
push
repnz
inc
mov
mov
cld
or
scas
pushf
xchg
in
push
or
pop
cmps
mov
lds
ins
hlt
inc
retf
cdq
mov
adc
xor
std
iret
mov
cdq
mov
sub
xor
das
pushf
(bad)
jle
sbb
push
jp
daa
rol
enter
adc
imul
clc
or
fadd
mov
mov
call
(bad)
add
pop
aam
add
xor
sub
xor
(bad)
xchg
push
les
into
imul
sbb
hlt
and
jo
into
call
and
mov
jge
jno
sub
lahf
sbb
push
push
jecxz
push
push
gs
or
push
xor
int3
enter
fwait
fwait
or
scas
xchg
out
int3
in
dec
pop
xor
daa
push
repnz
cmp
and
addr16
sbb
ret
jae
mov
sbb
mov
push
popa
ror
xor
inc
push
xchg
out
xchg
lea
in
or
aam
dec
inc
mov
pop
pop
aad
shr
stos
cmp
ret
mov
test
or
cmp
int3
rcl
lock
mov
repnz
push
rcr
jge
aam
fistp
add
cmp
iret
pusha
lahf
dec
xchg
jnp
nop
push
cmp
lods
lds
in
iret
hlt
cmp
(bad)
lock
push
in
fst
add
push
out
sti
push
mov
movs
jno
mov
xchg
rol
jne
inc
je
lods
lods
ret
mov
mov
hlt
mov
sbb
sub
cmc
add
shr
pop
inc
and
inc
dec
ds
rcl
push
clc
cwde
jmp
xchg
jecxz
es
pop
or
pop
push
lods
pop
in
cdq
mov
or
pop
cmp
pop
cmp
cmp
or
pop
add
inc
xchg
or
out
push
xor
mov
inc
jmp
movd
sbb
push
fst
xor
movs
push
(bad)
jp
xchg
dec
adc
dec
je
fcmovnu
mov
loop
inc
iret
ret
dec
jmp
aas
mov
mov
add
cmps
adc
push
push
loope
jp
inc
inc
mov
fiadd
sbb
xchg
xchg
lea
xchg
clc
xchg
push
aaa
and
inc
(bad)
std
leave
jae
sub
xchg
and
inc
in
arpl
xchg
pop
ss
int3
dec
or
test
sub
push
out
or
adc
jnp
and
popf
movs
into
sar
cmc
enter
shl
aaa
imul
sbb
cmp
mov
rcl
jp
inc
xchg
stos
jge
add
loop
pop
not
dec
das
mov
fisttp
mov
jl
aaa
gs
cmps
sub
pop
and
add
add
mov
repnz
icebp
or
call
sub
pop
mov
test
icebp
xchg
push
pushf
adc
out
mov
enter
lods
pop
push
sub
stc
jno
in
sbb
or
lods
cli
lds
lods
repz
or
lds
movs
inc
or
mov
pop
dec
cmc
(bad)
aam
enter
mov
push
fisub
push
js
icebp
or
adc
adc
imul
jno
loope
pop
sbb
jns
(bad)
jmp
in
sar
sbb
mov
push
jg
test
fild
mov
sbb
push
xchg
int3
in
or
sbb
xchg
loope
xor
sub
sub
adc
cmp
outs
ins
and
xor
jno
popa
into
xchg
pop
jmp
dec
cmps
xor
dec
pop
iret
xor
ins
and
dec
fadd
xchg
out
arpl
movs
mov
dec
dec
mov
(bad)
and
push
fwait
popa
mov
mov
das
jmp
rcr
xor
sbb
sbb
push
jl
and
jl
mov
or
test
in
xchg
das
dec
imul
or
ins
mov
mov
scas
push
mov
int
scas
rcl
sbb
rcl
fst
or
out
jne
push
mul
cs
call
inc
pop
int3
and
xchg
mov
or
push
jge
jmp
cld
xor
retf
jmp
cmc
stos
sbb
fcomip
sbb
add
ret
xchg
add
add
mov
outs
xlat
add
sub
movs
jo
clc
leave
or
pop
into
or
jbe
mov
cdq
sub
loope
arpl
nop
lock
adc
mov
call
fistp
or
mov
jae
enter
cmc
sbb
push
xchg
mov
adc
cmps
scas
cdq
jo
mov
retf
jnp
mov
int3
sbb
adc
fld
and
push
aaa
loopne
imul
cmc
movs
daa
(bad)
mov
push
sbb
leave
dec
xchg
pop
(bad)
and
std
(bad)
out
fmul
iret
push
inc
out
inc
pop
adc
(bad)
jmp
call
push
movs
push
out
push
mov
in
cmp
ret
sbb
inc
lds
mov
scas
pop
ins
pop
cmps
inc
hlt
xlat
out
pop
cmp
sbb
add
in
push
dec
popa
fxch
sub
pop
lods
cmc
(bad)
and
push
jmp
xchg
icebp
sbb
cmps
mov
sub
fcom
pop
mov
call
std
ret
and
mul
out
ret
mov
pop
loopne
rcl
aaa
inc
mov
inc
sti
jecxz
call
ret
sub
push
(bad)
dec
jecxz
mov
call
out
ficomp
push
daa
adc
fdiv
jmp
iret
in
mov
ds
sub
add
mov
inc
ds
add
stos
or
xchg
push
test
dec
mov
imul
jmp
loope
dec
call
lock
gs
arpl
adc
aam
into
adc
fsubr
sub
or
and
mov
bound
pop
inc
retf
or
in
xchg
jmp
push
popf
sar
adc
es
cli
cmp
cmps
pop
mov
dec
rol
fwait
mov
cmp
or
mov
inc
in
aam
mov
sahf
mov
xor
sub
xlat
out
call
sahf
jmp
sub
mov
repz
mov
pop
mov
inc
pop
pop
loopne
mov
sub
or
outs
gs
or
clc
inc
xor
xchg
test
jg
pop
xchg
es
ins
jae
adc
cmp
sti
sahf
xlat
mov
jle
xchg
(bad)
retf
push
push
fst
push
rcl
inc
fcom
dec
sbb
jecxz
mov
xchg
add
and
push
in
scas
pushf
jmp
jbe
fiadd
je
ds
pushf
push
push
sbb
loop
pop
aam
ja
sbb
pop
or
add
pop
sbb
jne
imul
xor
mov
call
bswap
ret
add
aad
add
iret
vmovdqu32
ror
outs
ss
or
sbb
pop
(bad)
fsubr
sub
je
sub
retf
das
xchg
repz
adc
and
repz
cmp
push
ret
sbb
pop
add
push
ja
rcr
addr16
add
ss
cmp
or
shl
xchg
xor
fadd
iret
jns
lea
jle
jb
mov
test
(bad)
retf
fst
stos
push
out
aam
and
lock
shl
jo
push
sbb
pop
stc
adc
ins
loop
bound
jb
push
mov
inc
jecxz
fst
mov
outs
lea
js
push
mov
(bad)
std
pop
adc
call
cmp
dec
(bad)
pop
bound
mov
mov
push
push
sub
pop
ds
adc
cmp
add
mov
sti
aad
sbb
cld
push
adc
xor
and
fsubrp
cmp
inc
stos
sbb
or
and
mov
or
xor
add
aas
sbb
mov
xchg
scas
loop
pop
cmp
pop
and
fucomp
mov
mov
pushf
fldpi
adc
jge
mov
hlt
fwait
sbb
mov
add
jbe
aas
sub
ret
cs
iret
mov
add
jmp
xchg
in
jg
fwait
jmp
pop
in
repz
daa
test
mov
dec
movs
inc
mov
shl
dec
xor
push
je
retf
inc
jno
jmp
(bad)
jmp
mov
xchg
(bad)
lock
sbb
loope
and
imul
and
inc
outs
sub
xchg
jno
ret
inc
loope
mov
adc
sub
xor
or
mov
push
and
and
or
arpl
dec
cmc
push
xor
test
inc
retf
bound
lea
dec
pop
add
adc
push
cwde
into
leave
cdq
pop
add
loope
adc
dec
pop
cmps
dec
adc
jmp
xchg
push
into
es
jnp
add
xor
sub
jp
(bad)
int
sbb
and
test
ins
fucomi
sbb
cs
and
(bad)
mov
sbb
xor
mov
loop
movs
lods
adc
cmp
push
in
(bad)
cwde
daa
fdivr
push
or
not
and
add
test
cmp
adc
mov
loop
pusha
cmc
es
push
sub
enter
xchg
cmp
dec
cmp
mov
cmps
xchg
movs
adc
or
adc
in
sahf
sub
jge
mov
sbb
sub
lods
movs
aam
xchg
or
push
fld
sbb
and
xor
and
sub
fld
ror
jg
loop
xchg
or
rcl
xor
dec
loopne
push
add
mov
imul
ins
je
add
inc
loopne
popf
dec
leave
sbb
xor
cmc
les
jmp
outs
xchg
pop
dec
cmp
or
xlat
retf
bound
push
dec
cmp
jne
inc
sahf
or
mov
adc
xchg
ins
push
adc
or
mov
mov
or
jp
xchg
xchg
mov
lods
js
sahf
dec
xchg
mov
add
mov
push
stc
add
jno
or
cmp
and
sub
or
out
call
retf
mov
mov
mov
push
cmps
add
push
or
mov
fidiv
jmp
pop
fidivr
icebp
stos
mov
xor
enter
daa
imul
rol
(bad)
xchg
inc
cmp
mov
test
jmp
mov
test
pop
ja
mov
jl
shl
mov
arpl
ror
cmp
les
jb
std
dec
aam
sbb
dec
pop
arpl
adc
mov
mov
jbe
push
rcr
mov
mov
nop
push
inc
jg
popf
ss
fst
(bad)
ret
test
cdq
push
ret
cmps
sub
movs
stos
sbb
test
mov
ins
xor
call
ins
sub
mov
dec
daa
fcmovnu
jg
scas
sahf
inc
sub
jmp
arpl
add
push
add
and
xor
xchg
inc
fimul
(bad)
ror
imul
(bad)
mov
dec
sar
xchg
pusha
mov
lods
cmp
jmp
popf
add
scas
mov
inc
or
xor
pop
push
or
mov
push
lock
inc
mov
enter
jp
adc
jle
sub
push
cdq
mov
jbe
arpl
retf
cmp
adc
stos
jnp
mov
aas
in
push
lods
in
add
cmp
jl
int
mov
xor
rcl
mov
pop
mov
pop
mov
push
push
mov
ret
pminsw
mov
bound
xchg
jo
xchg
div
add
in
jmp
out
jecxz
jo
push
push
sbb
inc
or
imul
rcl
or
or
imul
lods
mov
std
mov
pushf
fild
pop
adc
outs
cmp
js
pop
cmp
sub
inc
mov
nop
inc
mov
and
sar
ds
or
and
adc
mov
shr
push
xchg
add
xchg
mov
jae
pushf
test
retf
xchg
stos
fsub
lock
ja
lea
adc
push
ja
jge
scas
test
dec
leave
dec
data16
and
xor
adc
cmc
push
and
shr
dec
or
jmp
(bad)
jae
jbe
lock
daa
xor
rcl
jge
stos
and
add
ret
jl
ins
and
in
and
mov
pusha
(bad)
mov
in
shl
jae
sub
xor
push
xor
dec
idiv
iret
in
inc
push
mov
sbb
mov
mov
in
es
in
adc
pop
loopne
out
xlat
bound
mov
mov
xchg
pop
jb
ins
xchg
xor
jb
fistp
add
(bad)
ror
out
fwait
inc
mov
sub
pop
leave
fisubr
xchg
ss
sbb
imul
shr
sub
dec
(bad)
xor
(bad)
(bad)
mov
push
jb
lods
in
or
idiv
pop
(bad)
pop
out
sub
aam
mov
rcr
sbb
xchg
daa
adc
(bad)
jbe
or
neg
cmp
dec
add
rol
fdiv
push
les
push
xchg
inc
jne
popf
push
dec
push
repz
gs
push
cmp
sub
xor
mov
jne
jbe
pop
in
jecxz
xchg
lock
add
inc
aam
adc
xchg
dec
enter
push
(bad)
call
sbb
ror
jno
add
sbb
dec
mov
push
add
arpl
adc
pop
jae
or
mov
pop
xor
sub
bound
pop
add
lahf
or
inc
(bad)
adc
inc
sub
mov
shl
arpl
jnp
loopne
test
ret
repz
mov
call
add
dec
shl
fsub
daa
mov
lds
out
call
scas
pusha
imul
dec
iret
push
repnz
arpl
in
gs
(bad)
(bad)
pop
pop
xchg
push
xchg
out
mov
aam
push
clc
mov
xor
retf
sar
je
mov
dec
push
std
mov
daa
add
xchg
adc
loope
add
test
sbb
ins
movs
and
push
gs
(bad)
xchg
xor
fldcw
and
jmp
or
pop
mov
in
imul
repnz
popa
fistp
mov
dec
push
or
pop
adc
push
arpl
(bad)
pop
mov
inc
pop
enter
push
push
xor
mov
ret
nop
inc
mov
fild
mov
mov
outs
adc
xlat
mov
inc
inc
scas
stos
mov
ret
mov
or
dec
int
fisttp
sub
xor
mov
(bad)
jno
sbb
aaa
push
and
jmp
inc
inc
idiv
es
dec
pop
je
xchg
sbb
mov
lods
jno
sbb
shl
fsubr
dec
mov
and
sbb
fmul
scas
arpl
xchg
cmp
es
lea
push
xor
pushf
rcl
xor
movs
and
dec
pop
fcmovb
xor
nop
out
nop
mov
jbe
sbb
mov
outs
popf
out
je
mov
leave
xor
cli
test
dec
mov
cmp
stc
(bad)
cwde
add
stos
push
inc
or
push
ins
inc
fst
shr
outs
and
xor
xchg
cmp
and
(bad)
push
frstor
shl
mov
mov
test
outs
rdtsc
or
stc
mul
mov
fdiv
xor
dec
xchg
(bad)
ror
aas
jae
pushf
and
inc
rcr
mov
xor
inc
and
jns
xor
mov
push
mov
popf
fld
sub
push
mov
fist
mov
ror
sub
test
enter
(bad)
js
retf
ret
pop
lea
enter
jmp
cdq
stc
imul
test
imul
adc
push
adc
mov
push
or
lods
test
retf
out
aad
inc
xor
push
or
fnstenv
aad
scas
mov
test
mov
imul
int3
xchg
test
test
rcl
xchg
adc
test
push
pop
xor
push
pop
jne
out
pushf
cmp
std
movs
in
mul
cld
cmp
xor
sbb
movs
mov
or
push
sub
or
pop
or
rol
dec
jno
lea
adc
test
int3
cmp
push
shl
mov
mov
mul
cmp
inc
gs
mov
sub
fisubr
test
getsec
pop
dec
adc
mov
ss
call
inc
jge
push
xor
mov
mov
mov
jp
stos
mov
js
dec
add
add
ins
outs
xor
mov
iret
mov
xor
add
pushf
adc
and
jno
mov
hlt
lods
pop
dec
cmp
in
scas
out
neg
in
(bad)
xor
or
js
retf
pop
fwait
dec
cmps
fs
jo
cmp
mov
hlt
push
jp
inc
fs
sbb
test
lods
xor
add
xor
push
and
popf
sub
lea
iret
mov
fwait
lods
jne
sbb
sub
(bad)
xor
nop
clc
cmp
dec
movs
(bad)
xor
push
and
sbb
rcr
cmps
push
sub
or
enter
cwde
hlt
xor
(bad)
cdq
add
add
das
cmp
jmp
mov
mov
stos
sahf
pmullw
and
pusha
mov
inc
cmp
mov
loopne
(bad)
add
push
push
(bad)
bound
imul
or
jo
cwde
cmovl
(bad)
aas
xlat
scas
pop
in
sbb
fucomip
jae
xchg
retf
fadd
popf
inc
mov
inc
shl
outs
xchg
push
sbb
xchg
lahf
(bad)
jns
pop
cmps
xchg
push
cmp
adc
pop
mov
mov
cmps
outs
int3
sbb
push
add
jnp
adc
retf
ins
movs
jns
add
cmp
mov
push
imul
mov
ds
sub
or
xchg
cmp
add
mov
test
adc
lods
hlt
xchg
jbe
iret
inc
adc
leave
sbb
or
loope
adc
jne
mov
mov
sahf
daa
sbb
in
mov
mov
push
das
cmp
xor
and
jns
test
jl
loope
pop
es
loope
push
mov
inc
pop
mov
jecxz
push
push
mov
cli
addr16
xchg
xchg
lods
in
retf
ja
int
pop
shl
fcomp
push
mov
inc
(bad)
std
jmp
cmp
jg
inc
jb
mov
push
xchg
bound
adc
pop
aad
xchg
(bad)
xor
clc
sbb
outs
xor
push
xor
pop
xor
xor
or
cmp
jmp
je
jmp
mul
cli
and
add
into
fldenv
inc
and
ficomp
sub
push
std
(bad)
repz
push
jne
loop
leave
in
bound
xchg
gs
adc
push
adc
out
dec
imul
xchg
mov
jg
int3
cmp
lds
push
into
movs
pusha
xchg
fidivr
test
push
(bad)
fld
sub
test
mov
es
xchg
into
aaa
mov
dec
mov
xrelease
xor
add
inc
aam
data16
fnstenv
sbb
out
fstp
fcmovnb
or
call
mov
sahf
out
in
mov
push
stos
or
dec
fidivr
mov
mov
fldenv
inc
(bad)
jmp
pop
push
hlt
shr
xor
add
mov
out
jge
mov
mov
fnsave
gs
ret
(bad)
loop
xlat
fmul
xor
out
mov
push
inc
lahf
jae
pushf
xchg
fld
je
pop
mov
sbb
cmp
lods
cmp
gs
pop
ror
cdq
and
push
addr16
fdivr
pop
sub
jp
ret
push
mov
sub
inc
inc
and
fdiv
push
les
jp
sbb
sbb
sbb
sbb
add
sbb
idiv
or
adc
pop
arpl
or
or
inc
mov
mov
mov
stos
push
or
and
mov
adc
pop
pop
mov
pop
sub
and
sub
jl
xchg
add
(bad)
out
lods
pop
rcr
xchg
int3
xor
ja
dec
mov
and
jno
mov
loope
out
adc
jl
mov
jge
cdq
dec
sbb
and
retf
and
and
dec
push
or
lea
ret
jno
jno
lods
je
retf
call
bound
sbb
test
mov
pop
push
inc
(bad)
outs
adc
mov
movs
push
push
sbb
leave
sbb
into
sub
inc
mov
add
out
es
ss
out
xchg
movs
fstp
test
mov
and
jle
xchg
into
data16
and
nop
jo
adc
ret
adc
cmp
push
jl
and
push
mov
(bad)
jbe
jns
and
xlat
sbb
adc
jl
xlat
hlt
dec
xor
xchg
jecxz
push
aaa
adc
mov
ins
mov
in
out
sahf
mov
add
out
or
adc
add
inc
mov
xor
xor
int
mov
cmp
jns
or
xchg
lahf
xchg
mov
push
nop
cmp
cmp
es
loope
dec
or
sub
ss
lds
mov
lea
jmp
outs
jecxz
movs
sbb
ins
inc
adc
mov
(bad)
clc
push
cmp
jl
and
test
in
iret
xchg
(bad)
ficomp
mov
(bad)
sub
inc
mov
stc
sub
loopne
mov
fcom
imul
mov
mov
sub
inc
in
mov
in
jnp
inc
pop
pop
xor
daa
push
popa
je
outs
push
stos
dec
shr
push
in
mov
shr
or
xchg
xchg
fldenv
and
loop
repz
dec
mov
pop
jg
in
(bad)
retf
and
in
push
test
inc
cdq
sbb
xchg
cmp
hlt
ins
push
daa
arpl
push
and
cdq
call
and
cmp
addr16
dec
jo
inc
mov
pop
adc
push
cwde
loopne
out
jne
pusha
or
jbe
sbb
cmp
mov
sbb
gs
sti
out
inc
inc
in
fdivr
sbb
cmp
xchg
dec
ds
cmp
loope
mov
in
cmps
mov
leave
jne
ror
pop
gs
sti
aad
test
popf
cmps
cmp
sahf
jbe
gs
arpl
xor
arpl
mov
in
mov
inc
dec
or
aam
loop
sahf
jo
addr16
add
mov
dec
adc
fs
xchg
cmp
add
fmul
outs
ins
dec
popf
test
xor
jmp
addr16
pop
mov
jnp
sbb
jb
or
fwait
jle
and
stos
ror
add
jmp
xchg
das
mov
push
test
cli
pushf
pop
das
in
dec
ss
add
int3
push
or
sbb
dec
push
xor
fs
sub
leave
xor
inc
xchg
jecxz
mov
stos
mov
movs
rol
inc
lds
mov
or
nop
fnstcw
fsub
test
mov
shl
fucomip
or
ror
and
dec
jb
inc
pop
rcl
pop
in
xchg
add
dec
mov
fs
mov
and
inc
mov
leave
pop
add
cs
lea
or
adc
test
add
jp
sbb
scas
inc
sahf
inc
retf
fsubr
fcmovu
mov
sub
in
loop
mov
adc
jg
bnd
(bad)
xchg
add
cmc
fs
adc
adc
icebp
or
xor
pop
stos
mov
jp
cmp
(bad)
fxch
mov
xor
jae
adc
add
fidivr
es
sar
push
cmp
fsubp
daa
and
and
dec
loop
jmp
in
push
dec
dec
inc
dec
dec
xor
cmp
push
mov
cmps
or
or
mov
movs
add
cmps
clc
add
dec
add
cmp
add
cmp
fld
sbb
(bad)
mov
and
adc
inc
sbb
mov
bound
fisubr
popf
pop
lock
mov
ja
imul
mov
cmp
pushf
sbb
mov
xor
xchg
call
ins
push
add
mov
stos
fs
stos
sbb
add
mov
lahf
pop
dec
icebp
leavew
dec
jmp
mov
xchg
aam
inc
test
(bad)
mov
jecxz
(bad)
ror
xchg
push
xchg
ror
bound
inc
sub
sub
xor
push
in
(bad)
out
pop
or
test
jns
adc
inc
mov
in
jns
cmp
xlat
shl
inc
movs
pusha
xchg
test
mov
mov
xor
push
mov
repnz
cmp
jg
addr16
mov
pop
les
push
push
fadd
xor
cmc
sub
and
cli
nop
repz
add
cmp
cs
mov
dec
stc
aas
cmp
xor
jne
pop
mov
in
ins
mov
sbb
lahf
mov
or
mov
test
xchg
(bad)
dec
test
nop
or
ror
daa
daa
inc
sar
popa
arpl
mov
das
fucom
pop
clc
or
mov
popf
sbb
leave
mov
inc
pop
xchg
jne
add
in
push
addr16
out
add
idiv
xlat
test
sahf
dec
mov
inc
jbe
xchg
xchg
adc
popf
imul
ret
jmp
ficom
(bad)
jmp
scas
pop
mov
cmp
pop
pop
test
div
inc
adc
sub
jno
(bad)
pop
test
push
xor
ror
jle
push
cmps
fucomi
sub
push
push
jne
pop
sbb
pop
bound
retf
sub
daa
inc
stos
mov
mov
pop
push
scas
or
xchg
popa
jmp
aad
(bad)
sbb
jmp
inc
inc
xor
in
pop
ret
or
xchg
xchg
xor
mov
jbe
mul
or
icebp
inc
mov
dec
(bad)
mov
mov
or
popf
stos
mov
bnd
mov
pop
dec
sub
xchg
mov
je
cmp
pop
in
xchg
mov
fmul
mov
int3
mov
lock
imul
out
inc
outs
pop
add
xchg
test
rcr
rcl
mov
add
arpl
add
sub
fidivr
stos
jp
cdq
mov
jmp
mov
push
out
push
addr16
add
nop
in
push
bound
scas
inc
inc
fsub
scas
bnd
repnz
and
cmp
or
cwde
dec
xor
adc
call
fs
fs
iret
call
(bad)
leave
(bad)
fidiv
paddsb
add
sub
jp
sbb
ss
test
fs
mov
ds
fldenv
call
dec
jbe
jmp
dec
ins
int
imul
shl
cmp
in
jp
je
aaa
adc
mov
inc
icebp
sub
shr
mov
dec
sub
sub
mov
jl
and
cdq
sub
mov
pxor
and
mov
cmp
sbb
sbb
and
pop
and
and
jbe
jnp
aam
daa
imul
clc
ret
ror
ret
xor
push
fcom
call
mov
push
add
cli
(bad)
mov
mov
adc
pop
pusha
test
into
les
ffreep
sbb
mov
xchg
rcr
ret
push
clc
dec
ds
mov
xchg
mov
in
push
xchg
std
mov
or
loope
(bad)
pop
and
aad
xor
arpl
push
inc
inc
bound
imul
jae
in
push
xor
imul
data16
sub
sbb
push
mov
push
mov
popf
adc
shl
daa
push
lock
test
stos
scas
psrlw
dec
jno
dec
dec
or
int3
jno
test
fld
call
dec
loope
mov
cwde
push
mov
or
int
jo
pop
stc
aad
adc
dec
cmp
mov
xor
dec
mov
popa
adc
inc
and
mov
and
pop
jmp
test
int
sub
mov
push
retf
push
sbb
dec
fcom
jne
inc
pop
push
or
je
and
je
adc
jge
or
xchg
inc
mov
adc
sbb
dec
test
mov
fnstcw
call
inc
xchg
loope
adc
fsub
inc
stos
test
and
mov
jno
fldcw
and
stos
std
out
jmp
mov
lea
mov
pushf
test
adc
or
add
mov
mov
mov
loop
inc
xchg
jbe
pusha
push
ja
mov
xlat
daa
and
cmps
out
(bad)
ins
sub
jbe
add
xchg
adc
inc
sub
add
or
fisub
pop
dec
movs
fucom
sti
dec
mov
sub
movs
xchg
xor
sbb
cmp
cmps
cmps
adc
ja
xchg
adc
xchg
iret
imul
shl
jno
mov
inc
fcomp
push
in
adc
mov
lahf
jns
mov
sti
int
lods
inc
xlat
test
popf
mov
fwait
hlt
movs
stos
cmps
adc
cmp
hlt
jl
shl
push
in
xor
retf
mov
sar
repz
test
mov
mov
stc
movs
inc
out
nop
mov
add
jp
xchg
enter
jmp
cmp
dec
xor
pop
dec
pop
mov
ret
xchg
mov
loop
iret
jbe
jnp
mov
pop
fstp
sbb
int3
dec
(bad)
dec
icebp
ror
pop
push
push
repz
adc
adc
das
aaa
test
ins
stc
mov
cmp
fsubr
jmp
in
xchg
bound
ja
push
nop
cdq
jecxz
xchg
mov
xlat
scas
mov
aad
pop
ins
loop
pop
les
das
pop
out
push
shr
fadd
push
cmp
ret
xchg
in
stos
mov
sub
ret
sbb
fcmove
and
ins
inc
cmp
jnp
xor
pop
scas
(bad)
out
popf
xchg
and
pop
xchg
ja
neg
xchg
nop
xchg
push
pop
cmps
js
(bad)
mov
scas
push
add
or
in
shr
pop
mov
jp
jo
mov
xor
jbe
movs
jae
in
mov
sahf
inc
pop
xor
mov
leave
push
adc
cmp
pop
daa
iret
fistp
fcmovnbe
rcl
stos
sbb
in
dec
ds
les
dec
adc
jae
mov
jbe
push
sbb
sbb
xor
or
xchg
mov
xchg
push
fsub
inc
fldl2t
pop
loope
test
out
push
push
inc
or
push
jbe
jmp
pop
repnz
aam
(bad)
sub
das
add
xor
clc
pop
xor
mov
cmp
jmp
pop
outs
stos
or
in
or
and
push
mov
das
aaa
std
jo
hlt
mov
add
lods
sbb
(bad)
int3
sbb
(bad)
out
lahf
pop
mov
and
sbb
xchg
stos
xlat
scas
jb
mov
in
jb
sub
out
arpl
pop
push
mov
mov
out
adc
push
pushf
sar
test
pop
loope
sub
fistp
mov
ret
pop
into
out
lods
(bad)
pop
xor
fcomi
into
push
fsub
mov
add
int3
les
popf
and
sub
imul
xchg
pop
pop
popa
lds
or
lea
leave
xor
mov
pop
loope
pop
mov
lods
xchg
(bad)
mov
sub
add
and
xlat
pop
aam
mov
pop
jle
icebp
lods
sbb
jecxz
push
mov
or
stc
add
xchg
mov
sbb
rcr
sbb
(bad)
popf
aam
int3
dec
in
or
in
cmps
or
pop
or
out
sbb
pop
push
idiv
push
lahf
(bad)
or
and
sbb
inc
mov
ficom
div
call
stos
clc
daa
fidiv
cmp
mov
sti
jb
dec
push
enter
fisttp
mov
xchg
cmp
push
jbe
sbb
dec
fwait
xchg
ret
jg
div
sbb
sahf
cmp
xchg
jnp
jge
push
or
push
ret
pop
jne
jmp
cmp
xor
popa
js
repnz
and
xor
xchg
mov
std
sbb
int3
mov
inc
xchg
(bad)
data16
and
in
je
(bad)
nop
popa
push
push
ror
sbb
jecxz
adc
sub
daa
daa
call
or
mov
mov
cmp
add
icebp
jmp
mov
or
or
movs
in
push
daa
pusha
dec
xor
jnp
sub
mov
lods
pusha
call
fisubr
jecxz
test
adc
jmp
mov
js
nop
cmp
sub
out
outs
lods
dec
inc
sbb
imul
iret
jae
popf
ins
out
shl
jae
mov
mov
mov
imul
dec
sbb
mov
mov
iret
adc
test
repz
cld
popa
fbstp
dec
es
adc
sub
out
mov
sub
inc
or
adc
pushf
aad
dec
push
pop
dec
ss
data16
or
bound
loopne
push
inc
sub
jecxz
mov
int
ret
ret
addr16
inc
mov
pop
pushf
mov
out
repnz
mov
lds
jb
jge
(bad)
lahf
in
retf
push
loop
lea
fidiv
or
add
xor
and
xor
dec
sahf
(bad)
xor
mov
add
popf
cmp
inc
push
mov
pusha
shl
adc
pop
and
cmp
xor
test
cmp
xor
xchg
xchg
not
sub
inc
dec
mov
in
pop
adc
xchg
pop
fidiv
shr
push
xchg
leave
iret
lods
(bad)
push
sub
fist
aad
inc
pop
je
daa
push
jb
popf
mov
sar
xor
push
inc
cmp
inc
cdq
mov
inc
out
in
mov
data16
gs
and
imul
sar
inc
inc
mov
sbb
enter
fs
xchg
mov
rep
dec
lods
inc
fiadd
pop
mov
test
int3
xchg
dec
push
add
leave
push
lea
sub
add
and
scas
ror
jmp
jl
aad
xchg
imul
push
inc
mov
es
mov
jmp
jmp
push
pop
xor
jmp
sub
adc
cmp
adc
jb
es
and
adc
mov
int3
pop
mov
cld
(bad)
or
adc
mov
pop
repnz
xchg
add
lock
je
loop
nop
add
outs
jle
(bad)
and
aaa
mov
xchg
aaa
fs
inc
sub
adc
pop
push
inc
addr16
jns
movs
sahf
sbb
xchg
xor
fstp
adc
push
leave
(bad)
aaa
(bad)
in
mov
jne
ss
jbe
fmul
push
cmp
mov
push
xchg
pushf
dec
cs
cmps
dec
es
mov
fimul
add
sbb
mov
jns
fs
push
int
cmp
imul
xor
sub
fldcw
fisttp
or
xchg
data16
enter
cmp
cmp
dec
jne
icebp
mov
dec
xchg
cdq
test
sub
lahf
outs
mov
mov
div
addr16
into
mov
mov
scas
aas
fld
dec
mov
inc
adc
xchg
dec
test
sar
js
sbb
outs
fst
ins
loope
jo
pushf
arpl
or
addr16
pop
sbb
ins
pop
sbb
jb
add
sub
(bad)
mov
sub
sbb
je
xchg
jmp
cli
push
jmp
push
retf
cmp
scas
aad
push
in
inc
rcl
imul
dec
xor
(bad)
jecxz
dec
sbb
arpl
inc
das
xor
fisttp
lock
in
or
mov
xchg
and
push
das
sar
fnsave
int
mul
cmp
gs
je
push
add
stos
int
pusha
sbb
jne
rcl
adc
and
jmp
daa
call
cdq
xchg
int3
cmp
ret
sub
xor
test
jns
mov
aas
and
sub
or
out
inc
sti
jo
xchg
and
loope
xor
lahf
jno
ret
jnp
scas
mov
dec
pop
lods
or
pusha
cmc
arpl
aas
inc
aam
inc
adc
jo
lods
inc
test
cwde
jmp
adc
sbb
lahf
hlt
mov
(bad)
fsub
xor
xchg
adc
lds
sub
out
adc
add
xor
xchg
loope
movs
add
stos
stos
(bad)
repz
sub
movs
ret
sar
imul
aam
mov
mov
fild
inc
sub
lea
inc
das
jmp
imul
nop
sub
cmps
cmp
test
lock
test
scas
cmp
add
mov
out
add
arpl
ins
sbb
inc
mov
sub
in
jno
je
dec
mov
pop
xchg
or
cmps
jno
mov
xchg
inc
in
inc
jge
add
dec
and
add
pop
dec
js
cmp
sub
jnp
mov
xchg
stc
sti
in
fs
ss
adc
push
cmc
xor
movs
sahf
push
sbb
cmp
push
stos
mov
inc
push
(bad)
cwde
dec
mov
pop
int
fcomp
xor
sub
jae
fcomp
push
lock
and
(bad)
ror
push
sub
cmc
xor
jp
fldcw
and
(bad)
nop
inc
xchg
aad
mov
cmp
in
in
repnz
inc
and
sub
mov
ror
sub
stos
inc
dec
xchg
adc
dec
mov
inc
in
mov
repz
sbb
out
ss
sbb
cmp
mov
push
jmp
add
lds
cdq
add
push
aas
int3
xchg
cmp
mov
push
lea
adc
ret
popf
test
clc
cmp
inc
sub
(bad)
fstp
sbb
je
push
push
sti
pop
mov
mov
mov
lock
mov
mov
in
out
call
jbe
mov
shr
icebp
push
bound
sbb
bound
xchg
sbb
pop
jo
(bad)
lods
or
int3
adc
adc
aaa
repnz
addr16
rcl
xchg
xchg
(bad)
ins
test
mov
or
fidivr
ficom
cmp
push
jmp
pop
xchg
popa
(bad)
fidiv
dec
cmp
(bad)
mov
xor
jmp
enter
mov
test
rcl
int3
mov
push
dec
fdiv
sub
enter
(bad)
and
cmp
(bad)
mov
in
xchg
mov
std
loop
sbb
out
inc
xchg
adc
jg
jmp
lods
pusha
test
cwde
xchg
mov
jns
pop
or
sub
cmp
xchg
pushf
(bad)
out
mov
push
fmul
scas
add
dec
bound
cmps
addr16
xchg
mov
in
cs
outs
push
loop
fcom
fiadd
dec
retf
adc
xor
xchg
cmp
cmps
push
aam
(bad)
jnp
mov
mov
adc
mov
adc
pop
or
sbb
jne
push
mov
daa
xor
and
repz
jmp
pop
dec
stos
pushf
lods
int
cmp
add
mov
pop
stos
jne
(bad)
out
into
out
pusha
cmp
add
mov
adc
mov
push
jnp
or
or
jmp
mov
pop
ret
lods
mov
mov
pop
cmp
push
ins
adc
mov
jnp
inc
outs
stos
call
inc
sbb
push
jmp
pushf
lods
xchg
imul
xchg
mov
fsub
aas
push
jmp
sbb
ss
je
jo
scas
pop
and
popf
jno
sbb
mov
mov
mov
add
mov
cmp
push
imul
out
cmp
icebp
popa
cmp
sti
mov
stos
and
(bad)
inc
dec
sub
out
inc
push
(bad)
jl
inc
bound
jp
(bad)
jae
(bad)
ss
mov
rol
inc
add
(bad)
fmul
and
sbb
aaa
not
xor
(bad)
out
xor
mov
and
add
or
inc
scas
pop
sar
ret
adc
or
push
je
mov
imul
mov
push
inc
dec
gs
dec
mov
mov
ins
jnp
js
cs
sbb
stos
xlat
xchg
fnstcw
jle
add
fsub
push
push
int
dec
lahf
xchg
neg
scas
xor
mov
cmc
retf
retf
sbb
ss
outs
adc
leave
push
pushf
pop
fld
sub
sbb
mov
or
mov
xchg
push
and
test
and
mov
test
push
sbb
jb
push
mov
jp
(bad)
ins
in
push
aas
daa
dec
xchg
cld
mov
xchg
push
adc
push
test
push
or
add
shl
push
ins
rcr
and
rcr
xor
outs
je
inc
xor
je
int
loope
shl
mov
xlat
or
cmp
add
push
push
pop
call
jge
movs
adc
sub
jp
iret
dec
push
mov
push
xor
fdiv
or
jp
sbb
arpl
sub
ins
jnp
mov
stos
xor
and
nop
div
dec
fidiv
adc
das
stos
daa
dec
mov
or
and
cs
xor
das
push
je
push
mov
inc
ret
pop
in
jp
jmp
xchg
imul
add
dec
cmp
mov
in
sbb
jne
xlat
les
dec
xor
enter
mov
mov
xchg
imul
ficom
and
retf
mov
icebp
arpl
ficomp
mov
add
and
ret
jmp
call
fstp
mov
adc
sbb
pop
into
enter
mov
fist
push
xor
arpl
xchg
mov
pop
inc
fiadd
and
fsubr
cdq
das
scas
jl
shl
and
dec
les
inc
pop
mov
or
in
nop
nop
xlat
jmp
test
ins
pop
lahf
dec
or
xacquire
aaa
sbb
loop
mov
test
mov
mov
mov
or
xchg
(bad)
repnz
and
xor
dec
int
repz
cmps
xor
adc
icebp
enter
xchg
mov
scas
fisub
(bad)
fld
pop
or
jge
push
repz
nop
cmps
test
xor
fucomi
popa
aaa
aad
or
ja
add
mov
adc
pusha
shr
push
dec
dec
sbb
ret
inc
retf
ss
sub
dec
mov
xlat
cmps
call
push
mov
mov
pop
dec
mov
popa
pop
mov
push
pop
ds
(bad)
repz
popa
or
dec
mov
mov
cdq
arpl
mov
sub
out
ins
dec
push
adc
fsubr
rol
aas
loopne
std
adc
mov
push
popf
(bad)
xchg
and
es
cmp
sub
arpl
mov
push
mov
ja
pop
dec
jne
push
xor
into
mov
mov
pusha
pop
mov
ins
xor
ficomp
mov
inc
inc
or
dec
dec
adc
add
adc
xlat
rcl
pop
add
cmp
xor
movs
fwait
stos
dec
sar
jmp
inc
mov
je
mov
out
mov
sbb
inc
push
pop
xor
mov
jl
ja
pop
jns
jb
es
js
(bad)
mov
adc
jne
sbb
sar
ds
cdq
ins
cmp
popa
mov
inc
(bad)
cs
or
movs
pop
xchg
scas
pop
mov
ret
icebp
in
retf
gs
cmc
fcomp
cs
pop
pop
pop
xchg
(bad)
addr16
adc
mov
xor
sub
add
fsubr
mov
and
add
jae
bnd
mov
xor
mov
fdivr
push
movs
xchg
jmp
fisttp
ror
inc
mov
inc
in
sbb
sbb
in
mov
or
xor
or
loopne
clc
pusha
add
xchg
jbe
out
aas
leave
shl
mov
add
jns
add
(bad)
mov
fs
fxch
ror
cmp
in
mov
ins
pop
xlat
in
(bad)
stos
loope
adc
repnz
ja
jg
add
fs
pop
pop
mov
cld
mov
ins
movs
pop
test
push
jp
mov
xlat
scas
(bad)
sbb
arpl
xchg
in
jmp
mov
mov
cmp
out
or
fadd
test
movhps
and
mov
inc
rol
cmp
or
fistp
outs
in
add
shl
ja
(bad)
fsubrp
jl
or
cmc
ins
cmp
mov
div
das
ins
iret
cld
cmc
stos
push
or
call
jge
mov
push
inc
sbb
mov
mov
out
cmp
mov
sub
and
rcr
mov
pop
arpl
xchg
mov
scas
jne
call
lods
test
fimul
sub
in
or
inc
nop
cli
push
test
inc
(bad)
jmp
add
movs
cmp
or
pop
sbb
mov
jle
sti
rcr
push
test
jnp
add
or
sub
ja
or
push
(bad)
test
hlt
or
pavgw
and
jbe
adc
movs
fldenv
addr16
ret
mov
cmp
popa
les
xor
sub
jge
pop
xchg
cs
jae
dec
pop
dec
shr
push
test
cmp
push
cli
pop
jmp
sbb
sbb
sub
adc
jae
in
jge
call
sub
pop
dec
es
or
lea
push
add
jb
mov
retf
dec
sbb
mov
sti
rol
cld
add
push
repnz
fs
and
dec
adc
mov
fstp
dec
ins
out
into
xor
push
adc
xchg
mov
pop
(bad)
aam
mov
ins
inc
cwde
mov
pop
xor
sbb
retf
in
pop
push
fcomp
es
or
jl
sub
out
sub
adc
ds
cmp
adc
inc
test
jns
shr
mov
lea
daa
jmp
mov
pop
bound
repnz
sub
add
(bad)
ret
dec
aam
es
jl
sub
push
or
idiv
jno
dec
in
cmp
adc
jmp
push
jns
mov
mov
cli
and
jb
sbb
xor
pop
test
ja
add
inc
aas
sub
sbb
retf
fild
dec
xor
xor
mov
mov
(bad)
push
ss
xor
or
push
and
outs
pop
shl
frstor
inc
fisttp
xor
push
pop
mov
mov
or
(bad)
xchg
cmp
xchg
sub
sub
lds
fwait
jle
xor
movsx
add
cmp
add
jmp
mul
mov
scas
imul
dec
daa
mov
and
aas
jecxz
pop
and
lods
cli
jmp
outs
imul
dec
dec
out
loop
cs
adc
push
outs
push
xor
cmps
mov
js
sbb
pop
cmps
scas
sahf
xor
and
dec
mov
xor
retf
stc
outs
call
sub
xchg
cmps
and
fcomp
ror
movntq
out
leave
rol
mov
imul
shr
lahf
and
fcomi
lods
daa
push
mov
pop
and
lods
lods
mov
push
call
sub
mov
dec
mov
fisttp
sub
out
cmp
xchg
add
cmps
inc
aam
mov
ret
bound
sahf
push
mov
arpl
movs
or
push
push
mov
shl
sub
sub
xchg
dec
ins
pop
test
push
jb
stos
pop
mov
lods
(bad)
int
pop
repz
int3
mov
in
pusha
ss
pop
jae
ins
popa
scas
pop
pop
push
pop
les
mov
xor
retf
fwait
xchg
mov
sbb
and
les
mov
data16
aas
or
add
push
or
fsubr
add
jb
out
or
jl
pop
(bad)
outs
push
sbb
push
push
mov
data16
test
mov
sub
jns
jmp
or
sbb
jp
les
sub
adc
push
sti
dec
movs
in
int
add
test
lods
popa
lds
pop
test
xor
sub
mov
(bad)
mov
cli
fist
xchg
sub
data16
add
mov
mov
sub
and
mov
lods
fild
cmp
xor
int3
rol
cmp
enter
jmp
dec
xor
icebp
or
mov
in
add
imul
(bad)
nop
xor
stos
sub
mov
push
fmul
mov
scas
lock
mov
test
lahf
jo
pop
popf
repz
cmp
pop
lods
retf
or
and
cmc
xchg
mov
inc
or
ror
add
jno
pop
test
(bad)
enter
fwait
test
in
sub
sub
mov
adc
test
ins
push
ret
sbb
mov
dec
dec
or
jbe
(bad)
adc
xchg
retf
inc
in
push
out
inc
mov
xchg
adc
stos
jl
xor
add
out
jle
sbb
hlt
std
adc
aam
in
ret
inc
adc
je
adc
jns
bnd
dec
mov
push
xor
xor
mov
cwde
stos
fwait
adc
loope
nop
js
sub
pop
or
push
sub
into
mov
outs
push
pop
pop
cli
mov
shl
lahf
test
ja
in
outs
lea
cmp
jmp
mov
pop
lods
mov
cmp
ins
stos
in
mov
rcr
movs
jecxz
fsub
mov
popf
push
push
push
xchg
ds
shl
scas
or
xor
pop
inc
cmp
les
mov
out
fstp
loop
add
mov
xchg
iret
cmp
retf
test
push
test
push
and
xor
mov
movs
(bad)
or
cmp
arpl
inc
int
sbb
sbb
jo
push
clc
mov
int
stos
or
xchg
repz
in
sbb
sub
aam
add
and
ins
xor
in
xchg
xchg
pushf
inc
es
ins
and
push
cmc
push
add
rol
mov
bound
or
in
dec
fnsave
add
push
clc
add
sub
shr
inc
inc
aaa
xor
in
sub
jae
jns
jno
xor
rol
cmp
fwait
lahf
sbb
ret
jg
and
cmp
add
sub
fist
mov
(bad)
mov
dec
test
xchg
jmp
jbe
sub
push
mov
lock
mov
(bad)
inc
cli
jo
jp
lods
fidivr
jp
fadd
jg
push
retf
clc
dec
xor
arpl
cwde
or
xor
inc
mov
or
jl
dec
sbb
imul
test
xchg
inc
into
popa
cmp
xor
aaa
out
shl
retf
imul
sahf
add
jne
fmul
mul
nop
mov
or
jns
aas
add
or
rcr
pop
xor
data16
mov
sbb
cmps
imul
popf
bound
and
xor
addr16
outs
jmp
loope
fs
or
cmp
mov
cmp
and
sbb
rcr
test
xchg
inc
gs
mov
jmp
test
les
pop
cmc
je
jne
retf
movs
shr
cmp
cwde
je
adc
ins
xor
cld
shl
cmp
mov
es
push
daa
push
add
mov
fimul
mov
ins
cmp
mul
loopne
sar
aam
in
pop
shl
neg
outs
push
xchg
adc
adc
mov
inc
and
scas
call
retf
int3
inc
mov
sub
cmp
xor
js
jmp
mov
or
dec
sub
call
jg
lods
push
jno
int3
daa
jbe
out
or
ret
cmp
lods
inc
das
jge
mov
adc
jmp
cmp
fisub
sti
push
in
stos
xor
imul
hlt
sub
ss
cmps
jne
popa
sub
and
push
cmp
xor
push
cmp
hlt
daa
xor
outs
xor
int
sbb
mov
dec
jns
jmp
mov
mov
mov
or
test
shl
push
ret
xchg
fwait
lahf
test
jg
cmps
shl
pusha
sub
sub
ja
xor
pop
cwde
loope
inc
pusha
push
xacquire
test
lahf
mov
mov
mov
xchg
adc
xchg
dec
dec
fbstp
push
mov
adc
ins
sub
xchg
xchg
outs
jge
les
dec
cmps
loope
mov
(bad)
jae
jbe
fild
mov
xchg
mov
movs
out
dec
dec
mov
jg
cmp
stos
and
cmp
sahf
dec
je
sub
mov
add
mov
stos
out
xor
shr
in
ret
sub
call
(bad)
rcr
or
push
shr
cmp
mov
dec
adc
in
int3
dec
xchg
punpckhwd
or
jmp
or
inc
mov
push
retf
or
out
push
add
push
pop
stos
push
inc
push
pop
pop
mov
repnz
nop
shr
ss
call
not
mov
and
ror
(bad)
pop
jecxz
cmp
jb
xchg
out
push
retf
adc
add
rol
fsub
push
cwde
scas
adc
aad
pop
cmp
mov
mov
(bad)
scas
(bad)
mov
ror
sub
mov
lods
push
das
rcl
ret
jnp
dec
and
daa
out
aam
jbe
cwde
push
(bad)
and
mov
cmp
pop
cwde
dec
or
pop
loop
arpl
jp
xchg
in
(bad)
pop
adc
pop
cmps
xor
mov
cmc
xor
pop
movs
mov
popa
fwait
and
xor
lea
inc
fiadd
and
xchg
or
in
fwait
sbb
cmp
inc
into
int3
xchg
xor
jmp
call
push
push
sub
mov
push
add
es
loope
push
push
outs
or
sbb
mov
loop
leave
sbb
and
cmc
cmp
rcl
push
in
push
mov
inc
cmps
test
add
(bad)
scas
lods
sahf
nop
scas
sti
mov
mov
mov
and
(bad)
adc
mov
mov
xor
outs
pop
xchg
pop
in
or
call
sub
int3
mov
mov
aad
frstorw
xchg
jg
mov
out
sub
scas
test
dec
sbb
shl
fsub
popa
add
out
stos
fcmovnbe
(bad)
pop
pop
or
dec
mov
jne
into
aaa
jp
mov
test
cmc
adc
and
imul
pop
cmp
loop
mov
das
mov
cmp
stc
popf
scas
dec
retf
lock
ficomp
daa
daa
dec
outs
push
xchg
call
or
cli
push
in
test
pop
push
sti
(bad)
mov
in
popf
xor
outs
ret
ficomp
call
dec
inc
and
xor
mov
sub
jbe
in
jmp
dec
adc
and
pop
sbb
int
xchg
jbe
call
mov
pop
int
lock
sbb
loope
out
jmp
js
inc
pop
lods
sub
shr
fcmovnu
xor
mov
movs
add
push
int
mov
xchg
js
bound
fmul
leave
mov
pop
stc
rol
mov
mov
jp
shl
push
cs
mov
enter
mov
or
popa
mov
xchg
pop
imul
fdiv
push
mov
mov
aas
jo
retf
sbb
shl
aad
movs
jno
dec
mov
xchg
out
fsub
mov
stc
mov
dec
inc
push
mov
xchg
xlat
(bad)
mov
push
dec
adc
and
bound
aam
fnstenv
mov
xchg
xchg
adc
pop
fimul
pop
lds
bound
repnz
fisub
pop
(bad)
xchg
xchg
lock
push
shl
aad
shr
arpl
ret
cmp
movs
(bad)
jnp
dec
(bad)
push
jb
fwait
icebp
mov
mov
outs
repz
(bad)
repnz
inc
ret
test
idiv
mov
mov
jns
jno
in
gs
add
xor
cwde
sbb
pop
xlat
lds
int
gs
cmp
(bad)
pop
stc
add
add
cmp
mov
push
rol
loop
mov
and
xchg
jp
mov
imul
add
mov
in
jle
mov
push
psrld
(bad)
sbb
cmp
cmc
jecxz
scas
lods
jmp
jae
xchg
icebp
icebp
push
mov
and
lahf
cmps
xchg
stos
jg
mov
inc
dec
mov
fmul
xchg
pop
(bad)
mov
mov
jg
mov
jno
pop
jns
call
mov
cmp
pop
mov
inc
out
jmp
dec
cwde
xchg
jbe
sbb
test
js
out
aad
jecxz
test
(bad)
call
cmps
dec
jmp
xchg
pop
pop
call
cmp
scas
leave
sbb
data16
and
xor
mov
add
inc
lods
sti
jmp
aam
dec
cmp
pop
imul
in
in
jg
rcl
cmp
stos
bound
mov
fisubr
shr
mov
jne
jnp
dec
sbb
sub
cmp
add
aaa
data16
push
or
das
ins
in
outs
fsub
xchg
xchg
inc
out
imul
add
movs
jbe
pop
sub
pushf
pusha
xor
jnp
fdivp
pusha
in
fild
jo
mov
ret
mov
jmp
pusha
imul
bnd
loop
pop
ins
pop
push
rcl
rcl
mov
das
imul
into
imul
dec
cld
mov
shr
rcl
push
mov
sbb
leave
jp
rol
out
adc
fucomip
pop
lahf
dec
cld
aam
into
pop
pushf
jle
dec
js
pop
repnz
cmp
(bad)
mov
jecxz
push
std
push
mov
imul
or
xor
in
je
cmp
inc
test
push
jns
test
fidiv
pop
jno
or
sub
jno
sbb
pop
and
aas
and
push
lock
and
adc
jo
das
fucom
mov
inc
xchg
test
outs
or
xchg
nop
retf
adc
loop
push
sub
loopne
mov
xchg
mov
sbb
hlt
mov
cwde
jge
push
mov
push
hlt
(bad)
cli
(bad)
scas
cli
ss
mov
jle
dec
adc
movs
adc
repnz
out
movs
pop
stos
nop
popa
shr
push
sub
neg
cmp
and
shr
xor
std
and
rcl
mov
pusha
jns
mov
cmp
(bad)
mov
aam
ror
iret
in
mov
and
lods
jg
leave
mov
jb
jns
cmp
xlat
leave
push
idiv
add
cld
and
and
outs
(bad)
sbb
cwde
mov
dec
in
jno
and
sub
(bad)
neg
(bad)
push
cmp
jnp
xchg
cmp
mov
imul
jo
lock
mov
fidivr
cmp
out
pushf
ss
adc
pop
dec
mov
jb
and
cmc
push
popf
xlat
rcl
pop
sub
jo
cmps
test
(bad)
(bad)
aas
retf
push
inc
push
xchg
sar
dec
test
aaa
inc
mov
ret
pop
ror
std
ins
retf
xlat
dec
pop
inc
mov
call
dec
stos
dec
jecxz
sbb
(bad)
fdivr
in
(bad)
adc
test
mov
xor
into
iret
add
push
std
mov
cmc
mov
and
pop
mov
sub
neg
pop
sub
cmovbe
push
out
loop
out
js
xchg
xlat
frstor
cdq
mov
add
sbb
ret
lahf
test
lds
call
jmp
xchg
pushf
pop
lahf
imul
sub
and
inc
inc
xchg
inc
xchg
xor
fcmovb
inc
lds
(bad)
fdivr
popf
aad
iret
cmps
or
retf
pusha
xor
cmp
leave
inc
vmwrite
or
test
push
push
pop
icebp
sbb
pushf
mov
sub
push
fdivrp
mov
leave
mov
js
iret
jno
xchg
mov
mov
call
xor
rol
(bad)
std
sar
adc
std
add
inc
sbb
fimul
leave
jecxz
jle
mov
in
jo
jb
lahf
data16
mov
sub
call
pop
in
cli
mov
jl
(bad)
mov
xor
sbb
outs
xchg
lods
dec
jmp
inc
dec
add
test
or
popf
xchg
sbb
shr
jmp
or
xor
outs
shr
sub
push
mov
cdq
das
daa
in
test
test
pop
test
outs
mov
iret
xchg
retf
out
mov
xor
cwde
(bad)
les
icebp
adc
aaa
and
(bad)
adc
inc
mov
lock
dec
cmp
ss
or
movaps
sub
ja
xlat
js
or
ins
rcl
mov
pop
outs
pop
es
adc
mov
cmps
jne
pop
mov
enter
pop
pop
dec
cs
imul
sub
popa
jae
mov
jb
cmp
mov
(bad)
fisub
xchg
cmps
inc
and
push
fcmovnbe
scas
inc
lods
stos
mov
xlat
mov
leave
(bad)
fist
jno
jle
cmp
(bad)
inc
(bad)
test
or
sbb
cmp
out
mov
loopne
cs
imul
mov
les
pop
cli
inc
mov
inc
mov
cmps
int
adc
in
pop
push
xor
pop
xor
mov
adc
pop
dec
loopne
xor
hlt
dec
lods
and
xor
jg
inc
mov
pop
inc
fisub
lods
jg
and
test
retf
dec
push
(bad)
aam
sub
adc
or
cpuid
xchg
push
scas
sbb
aad
or
stos
mov
ret
mov
push
mov
call
pop
xchg
fsubrp
dec
daa
mov
sbb
or
mov
loope
mov
(bad)
fist
icebp
loopne
mov
lds
enter
pop
icebp
lea
jge
popa
cmp
jl
and
mov
cmp
push
xchg
mov
add
stos
fld
mov
cmps
jnp
pop
xor
sbb
mov
fsubp
add
hlt
jns
xchg
outs
jle
mov
pop
jnp
fdivp
jns
gs
mov
dec
jmp
dec
sbb
rcl
or
loope
push
dec
xchg
sbb
mov
(bad)
sub
push
mov
pop
test
xchg
aaa
cmp
mov
push
ins
scas
loop
test
or
iret
mov
mov
mov
gs
adc
pop
push
push
int3
jno
push
sub
ret
push
and
retf
sbb
pop
retf
movs
xor
xchg
mov
add
data16
dec
cmp
jmp
aaa
retf
push
ins
mov
add
stos
sti
sbb
out
mov
xlat
pop
xor
adc
movs
in
xchg
pop
inc
iret
xor
addr16
sbb
mov
stos
sub
(bad)
fistp
mov
mov
push
mov
shl
pop
ficom
xchg
xchg
int3
xor
sub
sub
call
mov
pop
bound
or
call
mov
and
inc
sbb
mov
adc
outs
xchg
jbe
mov
mov
dec
mov
push
xor
lds
loop
jns
in
fmul
jmp
pop
push
mov
sub
or
in
les
out
repnz
add
cmp
fisubr
enter
inc
aad
cmp
int
push
div
sub
les
xchg
or
mov
push
mov
add
out
sub
pop
dec
pop
inc
stos
addr16
ss
and
jg
mov
movs
adc
dec
gs
lods
gs
ins
movs
(bad)
fwait
mov
fs
(bad)
mov
iret
jae
stos
out
push
lea
stos
sbb
mov
jle
lea
popa
adc
into
push
stos
push
test
dec
add
sub
xchg
sub
movs
jo
rsqrtps
pop
cmps
adc
cmp
rol
push
and
mov
pop
ret
and
lock
and
jp
mov
or
push
scas
mov
cmp
je
xchg
pop
and
inc
push
call
push
sbb
sahf
popa
mov
rcr
sbb
adc
mov
push
inc
outs
adc
nop
xchg
xor
inc
or
sbb
dec
sbb
push
loope
cmps
repz
ss
mov
and
cli
(bad)
xchg
mov
cli
cdq
sti
into
and
(bad)
sbb
lea
xor
leave
xchg
das
xchg
sbb
jnp
outs
lods
out
mov
pop
or
jnp
jmp
lods
jp
mov
movs
push
icebp
ss
ss
sbb
nop
icebp
jmp
lds
(bad)
stc
pop
pop
ja
or
in
mov
add
mov
shr
pop
sbb
jbe
mov
xchg
pop
jno
or
fwait
mov
leave
xor
xchg
into
(bad)
sub
into
cmc
nop
in
or
pop
mov
or
lds
fmul
pop
cmc
aad
inc
inc
enter
movs
pop
fsub
cmps
shl
rcr
mov
ins
cmps
mov
data16
sub
or
push
add
cmp
jle
movs
aam
and
fucomi
(bad)
or
dec
ins
lea
sbb
jle
or
pushf
daa
call
imul
pop
push
mov
mov
mov
or
mov
sti
xchg
dec
rcl
enter
jmp
lock
jp
xchg
(bad)
loope
xor
fs
jp
mov
(bad)
sub
sbb
push
js
dec
cmp
add
and
movs
fmul
retf
cmp
test
xchg
stos
je
movs
push
sbb
test
sbb
mov
and
jno
nop
fcomp
cmps
(bad)
jae
dec
ror
jb
into
scas
aas
imul
sahf
pushf
jne
inc
and
and
cmp
into
pushf
inc
mov
pop
call
imul
movs
dec
pop
push
jnp
int3
retf
mov
sbb
inc
mov
cld
in
es
and
pop
sub
add
push
call
mov
or
ret
and
mov
mov
aad
inc
iret
adc
adc
jnp
add
push
lods
test
jnp
inc
(bad)
shr
jp
mov
in
dec
mov
xchg
aas
cmp
movs
inc
mov
sbb
ret
mov
stc
test
addr16
popa
jns
cmp
and
push
jg
dec
jge
lahf
jb
jnp
xchg
movs
add
call
mov
dec
cs
add
leave
dec
sbb
cmps
mov
imul
xchg
les
les
aas
enter
mov
or
jnp
jmp
push
fdiv
mov
repnz
push
retf
mov
dec
lahf
xlat
bound
test
dec
cs
jns
in
dec
mov
push
test
ja
or
jle
js
in
pop
cmc
dec
dec
pop
mov
(bad)
pop
ins
test
shr
ret
inc
scas
int
cmp
dec
dec
and
pop
fsub
cwde
push
jmp
aaa
cmp
inc
ss
in
(bad)
sti
es
push
xor
mov
adc
fstp
sahf
jnp
sub
cwde
mov
test
push
hlt
fbld
cwde
cmp
clc
mov
call
stos
movs
rol
and
dec
outs
sbb
je
adc
cmc
add
call
mov
imul
sbb
adc
fsub
out
mov
xor
dec
pop
add
out
add
mov
stos
adc
xchg
rol
cmp
cli
movs
(bad)
mov
imul
and
je
mov
jno
ins
jl
jp
(bad)
mov
mov
mov
add
in
jle
xchg
jne
xchg
int
lahf
ins
lock
sbb
data16
(bad)
mov
mov
pop
xor
mov
outs
movs
pop
dec
test
and
sbb
sbb
mov
cmp
push
in
xchg
sbb
pop
mov
es
mov
rcr
sub
and
shr
push
cmps
mov
aaa
(bad)
or
in
jge
cvtpi2ps
int
cmp
xchg
rcl
loop
pushf
adc
mov
or
mov
xchg
xlat
retf
lea
pop
adc
sub
mov
sahf
sysret
fdivr
dec
or
dec
and
mov
or
pop
mov
xor
test
push
sub
mov
mov
lods
cmp
mov
aam
in
and
cdq
rcr
movs
xchg
jns
mov
shl
aad
add
adc
push
nop
sbb
adc
fwait
add
push
rcl
dec
push
inc
adc
or
shl
fmul
and
add
(bad)
pop
jp
sub
lea
dec
mov
mov
(bad)
test
push
or
mov
jmp
sub
ins
shr
xchg
test
inc
enter
in
pop
cmp
in
stos
stos
movs
movs
or
push
inc
dec
sahf
je
int
push
adc
adc
inc
dec
sub
mov
popa
xor
mov
pop
in
and
cmps
pop
pop
leave
(bad)
mov
pop
cli
pop
lahf
mov
inc
push
mov
inc
cmps
inc
mov
es
daa
sbb
lds
xor
fist
int3
retf
pop
jecxz
push
rcr
push
test
enter
hlt
inc
inc
mov
clc
hlt
out
(bad)
mov
aad
daa
push
(bad)
mov
ds
or
pop
sti
inc
jp
out
(bad)
pop
out
jecxz
jg
cld
scas
fdivr
dec
mov
pop
push
xchg
sar
js
and
push
mov
daa
cmp
ret
sti
pop
out
jecxz
xchg
shr
fisttp
fiadd
inc
cs
xor
imul
dec
repz
jmp
mov
aaa
aas
xor
cld
stc
sti
out
push
jne
xchg
enter
movs
xchg
lahf
shl
jecxz
mov
pop
sbb
push
fsub
inc
and
mov
shr
nop
rcl
jp
pop
push
pop
push
ret
inc
hlt
pop
bnd
sti
mov
dec
dec
pop
pop
scas
adc
dec
ins
ins
cld
fisttp
std
xchg
loopne
and
not
out
scas
dec
sub
sti
fs
ficomp
fwait
mov
mov
(bad)
mov
mov
loop
sub
loopne
mov
into
xchg
div
push
(bad)
leave
mov
or
jo
xchg
pushf
cld
push
cmp
(bad)
mov
fisubr
sbb
pop
scas
sbb
pop
ffreep
ret
jge
cld
frstor
xor
test
and
jle
movs
push
inc
sbb
mov
out
es
arpl
scas
mov
add
jns
stos
ds
cmp
dec
ficomp
fist
test
clc
out
shl
popf
jns
test
ins
daa
movs
ins
dec
shl
lods
mov
sub
inc
mov
and
(bad)
movs
std
gs
pusha
add
or
xor
mov
ror
adc
xor
sub
xchg
mul
push
dec
or
das
retf
pushf
mov
div
loope
pop
int3
(bad)
push
pop
mov
push
stos
repnz
mov
in
(bad)
xlat
or
sub
int
imul
test
mov
mov
inc
jmp
es
push
adc
jno
push
stos
inc
popf
cmps
pop
cwde
or
addr16
in
hlt
dec
push
test
and
mov
mov
pop
loope
dec
jecxz
shl
mov
dec
cmp
push
outs
fsub
pop
mov
adc
(bad)
ror
out
mov
fcmovu
lds
dec
lods
sub
xchg
ror
lods
inc
dec
rol
fsub
push
inc
cs
add
nop
movs
hlt
test
jns
sbb
and
xchg
xchg
xor
dec
fbld
loopne
mov
nop
lods
xchg
push
push
aad
add
inc
div
mov
cmp
popa
not
push
dec
mov
mov
jne
ss
xlat
push
aaa
jmp
into
add
ss
in
data16
push
push
adc
adc
jae
es
inc
test
ja
sbb
in
sbb
xchg
cmp
adc
mov
adc
mov
sub
cmp
and
sbb
or
inc
pop
fsub
sbb
mov
fwait
adc
(bad)
std
and
pop
xor
jbe
pop
adc
cdq
mov
leave
xor
fcomp
push
mov
jmp
outs
and
ds
xchg
xor
fcomp
xchg
sub
daa
fimul
and
pop
push
dec
test
ret
das
cmc
pop
aam
sub
pop
xchg
adc
mov
aam
sub
imul
jge
ficomp
pop
push
cmp
call
das
mov
pusha
mov
add
jbe
imul
out
add
jecxz
jae
inc
or
pop
xor
mov
add
cmp
pushf
xchg
ja
inc
ja
sub
lods
out
(bad)
cmp
out
inc
inc
jae
outs
mov
sti
in
es
jge
push
add
dec
jecxz
xchg
dec
add
sub
jle
push
cwde
mov
pop
pusha
hlt
xor
push
pop
adc
rcr
aam
or
sub
pop
jo
mov
gs
fbstp
test
sahf
and
mov
in
arpl
je
sti
je
push
in
lods
sbb
(bad)
rcl
dec
cmp
mov
and
test
cwde
sub
mov
mov
aad
adc
ja
je
sbb
retf
mov
jne
movs
xor
xchg
jo
pop
test
out
mov
hlt
cmp
adc
mov
adc
xchg
mov
je
shr
out
loope
and
or
repnz
icebp
xor
sbb
sub
into
add
xor
inc
adc
push
int
add
in
xor
push
xor
pop
dec
xor
fnstsw
or
pusha
scas
jmp
shl
xchg
add
arpl
lods
push
pop
pop
sbb
or
movs
test
xor
inc
jmp
test
aad
call
mov
xor
in
adc
lds
dec
dec
sbb
push
push
xchg
mul
push
cs
fisttp
dec
lock
xchg
cmp
push
pop
pop
repz
mov
addr16
(bad)
out
mov
xchg
adc
mov
push
inc
add
sub
dec
xchg
sahf
xchg
sub
setno
push
out
iret
adc
lea
or
mov
addr16
das
test
call
(bad)
jb
or
pop
pop
adc
in
push
rcr
retf
mov
cmp
xor
inc
xchg
or
aaa
sub
call
adc
jne
into
sbb
xchg
leave
and
movs
inc
lds
fnstsw
enter
or
sub
nop
loop
or
pushf
mov
repnz
fst
(bad)
and
fbld
gs
out
cld
jmp
aas
mov
mov
add
lahf
jno
sub
sub
mov
push
add
mov
xlat
jne
(bad)
dec
sub
ffreep
mov
lahf
jecxz
scas
jns
or
xchg
enter
jo
jno
cmp
retf
mov
jl
mov
in
dec
mov
movs
loopne
xchg
inc
addr16
fsubr
arpl
jle
inc
(bad)
sbb
cmp
mov
fld
xchg
(bad)
mov
(bad)
out
mov
xor
imul
sbb
and
nop
es
sub
cmp
fidivr
lahf
fucom
jnp
mov
dec
cmp
mov
xor
pop
sbb
enter
cmp
xchg
xor
cmp
push
jbe
imul
xlat
and
sub
loop
or
xor
sbb
sub
mov
out
jg
sbb
mov
cmc
push
in
and
pop
sbb
icebp
in
jecxz
out
out
lods
sbb
stos
push
xlat
enter
inc
hlt
push
jns
mov
jb
jge
int
and
out
add
lods
xor
mov
rol
sub
mov
xor
nop
pop
test
push
dec
test
cmp
pop
mov
sar
ins
push
jl
add
mov
jmp
and
lods
sar
sub
sahf
mov
lahf
jecxz
sbb
int
scas
jmp
xchg
pop
push
jge
push
ret
cli
adc
ds
jp
mov
pop
rol
dec
ds
pop
xor
test
sub
iret
jle
mov
adc
(bad)
sub
mov
fiadd
fwait
rol
pop
cwde
mov
iret
jmp
lods
pop
jmp
inc
pushf
sub
sub
repz
mov
xchg
mov
inc
jmp
idiv
xlat
jmp
es
push
sub
or
call
jmp
sbb
xor
mov
jmp
js
mov
dec
out
lock
and
cwde
(bad)
lods
jecxz
and
into
mov
dec
xor
jg
(bad)
mov
cmp
pop
test
mov
repz
jae
loopne
mov
bound
cmps
mov
popf
mov
ja
cmp
cs
fdiv
xchg
push
cdq
stc
aad
nop
ss
les
jns
(bad)
ficom
into
(bad)
mov
loope
pop
fadd
mov
mov
cwde
cmps
hlt
cmp
scas
ss
pop
pop
jae
dec
mov
inc
sbb
dec
test
cmc
jne
mov
out
inc
ins
sub
ds
cmp
xor
imul
lock
dec
bound
in
pushf
addr16
jne
gs
and
test
movs
(bad)
jnp
test
fwait
arpl
mov
in
sub
dec
push
dec
pop
sti
jmp
dec
inc
fwait
repz
mov
push
gs
inc
neg
jl
cli
mov
clc
jns
add
scas
mov
pop
ret
xlat
mov
int
(bad)
repnz
xchg
cmps
cmp
in
mov
(bad)
jno
int
lahf
add
pop
nop
mov
repz
dec
and
je
jmp
inc
cmp
mov
movs
test
dec
or
or
ds
sahf
pop
(bad)
dec
xlat
jns
pop
jmp
adc
jg
popa
xchg
test
movs
ins
cmp
adc
xchg
(bad)
ficom
mov
imul
xor
scas
adc
push
push
push
inc
(bad)
fs
pop
xor
fidiv
cmp
(bad)
fmul
fstp
popa
adc
jmp
jb
mov
pop
push
add
in
push
fcomp
iret
fnstsw
lds
sub
dec
hlt
stc
lock
xlat
pop
retf
add
or
adc
pop
jmp
mov
int
pusha
fcompp
fimul
mov
push
or
ficom
jo
mov
inc
int3
test
loop
sub
jmp
adc
pop
mov
or
mov
mov
stc
js
mov
pushf
cdq
mov
cmp
ret
cmps
(bad)
cmp
lahf
neg
add
rcl
fsub
es
mov
push
rcl
jle
rol
lock
mov
xor
or
adc
(bad)
cld
(bad)
loop
pop
cmp
xchg
jg
idiv
jl
lock
scas
sahf
xor
call
cmp
jnp
mov
repz
xor
mov
iret
mov
jp
aad
sub
cmp
scas
ds
lahf
mov
ins
or
push
pop
scas
nop
xchg
ins
fs
mov
cmp
fstp
test
push
jno
push
ficom
cmps
ret
dec
dec
nop
dec
mov
repz
jecxz
fnstenv
in
pop
xchg
rcr
retf
cmp
add
scas
std
or
(bad)
xchg
mov
loop
xor
out
mov
jns
cmp
push
ins
scas
ds
mov
movs
sub
ins
xchg
xchg
mov
push
jl
stc
pop
adc
lock
sub
(bad)
(bad)
fistp
dec
repnz
(bad)
pop
mov
outs
outs
jecxz
(bad)
icebp
fidivr
popa
jbe
mov
rcr
arpl
xchg
repz
rcl
jno
fcomp
pusha
push
mov
(bad)
bound
scas
test
jnp
out
aaa
fld
sbb
in
cmp
popa
xor
mov
rol
inc
push
out
sbb
aas
ds
inc
les
mov
sub
(bad)
xchg
gs
scas
not
in
cmp
pop
sbb
ficomp
jp
sub
addr16
stc
ss
mov
dec
stos
test
add
stos
mov
(bad)
cld
cli
mov
dec
cmp
hlt
lods
push
lds
xor
mov
and
aam
test
sub
ret
icebp
jne
jge
xchg
lock
shl
les
es
(bad)
cmps
add
adc
fst
shr
jne
aas
inc
lods
aas
ss
repz
pop
xchg
nop
xor
test
mov
xlat
cs
xchg
stos
outs
mov
psraw
scas
add
sti
sbb
mov
test
fistp
fisubr
popf
dec
mov
sub
scas
mov
ds
sub
pop
rcr
jecxz
jne
int
cld
imul
es
call
xor
in
fsubr
out
sub
jnp
mov
pop
cdq
ss
(bad)
jae
or
mov
retf
jecxz
js
pop
dec
pop
out
arpl
clc
repz
or
xchg
mov
add
add
add
dec
inc
dec
inc
scas
inc
pusha
and
pop
add
mov
inc
or
add
or
add
add
add
add
or
add
add
data16
add
inc
dec
inc
add
mov
or
popa
add
arpl
dec
add
jp
add
add
sub
add
add
jmp
add
jo
mov
add
bound
inc
add
add
add
mov
add
push
js
aam
xlat
scas
and
call
jno
pop
pop
mov
aad
aad
aad
pop
mov
out
cdq
sahf
fisub
pop
mov
or
inc
adc
test
sub
jb
sbb
or
add
mov
push
push
pop
repnz
int3
cmp
push
sub
lds
(bad)
cmp
jns
dec
test
jmp
jg
jl
and
inc
shr
sbb
idiv
retf
jg
sahf
adc
shr
pusha
hlt
mov
add
jg
cmp
ret
js
nop
jle
movs
(bad)
std
cmc
or
mov
repnz
sub
push
dec
cld
pop
(bad)
xlat
(bad)
cmp
pop
or
clc
scas
jg
sub
fistp
pop
dec
and
pop
int3
loope
add
pop
mov
jo
call
pushf
popf
bound
(bad)
stc
jmp
icebp
das
(bad)
(bad)
sbb
loop
(bad)
add
cli
hlt
(bad)
fild
into
icebp
fnstsw
std
dec
test
jecxz
mov
out
pusha
sbb
jl
imul
jne
ret
or
jmp
(bad)
(bad)
jmp
dec
lods
xor
cld
repnz
cli
jmp
arpl
jge
(bad)
sbb
and
push
div
cmp
and
xor
cmp
add
pop
aas
mov
mov
outs
scas
outs
add
mov
cmp
jmp
movs
add
pop
mov
adc
mov
mov
dec
iret
pusha
jnp
mov
cmp
fild
rol
jmp
cli
int
mov
and
pusha
mov
ins
adc
mov
call
test
fidivr
or
mov
cmp
je
sbb
ins
aad
dec
sub
push
lods
push
push
and
fidivr
lods
mov
pop
ror
inc
addr16
shr
mov
push
stos
popa
xlat
in
int3
mov
jp
jge
jecxz
ds
les
(bad)
jnp
xchg
neg
inc
(bad)
clc
icebp
arpl
not
add
call
fisub
or
xchg
dec
dec
and
leave
shl
rcr
mov
idiv
int
loope
add
mov
repnz
aas
inc
push
push
or
idiv
(bad)
cmp
pop
pop
imul
loope
in
dec
mov
mov
cmp
mov
and
leave
or
loopne
sub
inc
xor
jmp
not
sub
jge
mov
test
call
mov
xlat
adc
fisttp
out
int
jmp
outs
das
test
test
mov
jmp
fdivr
xor
dec
xor
dec
imul
mov
sar
sahf
sbb
sub
or
sub
or
add
test
mov
rcl
or
adc
lods
push
and
xchg
push
add
js
mov
xchg
xor
bound
pop
arpl
push
sub
(bad)
mov
inc
retf
aaa
pushf
pushf
pushf
hlt
(bad)
pop
and
and
aas
xor
pop
neg
out
dec
sar
push
mov
jle
mov
jnp
into
mov
rdtsc
add
mov
test
adc
(bad)
or
dec
(bad)
in
les
int
jne
cdq
(bad)
push
push
call
xor
xor
push
test
mov
and
sub
mov
frstor
inc
in
push
(bad)
lahf
icebp
cmp
cmp
jge
out
adc
int3
xlat
xchg
push
inc
push
pop
push
dec
test
or
les
jne
add
jno
adc
test
cs
inc
mov
jae
xchg
adc
inc
dec
jmp
mov
or
pop
stc
adc
pop
ret
jle
into
fidivr
mov
cmc
jmp
cmp
int
sti
jmp
fucomi
in
jbe
jae
hlt
fdivrp
mov
inc
aam
xchg
xchg
not
xor
in
cli
imul
jae
mov
in
ret
xchg
mov
pop
sti
int3
gs
mov
dec
je
add
adc
mov
and
cmp
jnp
xor
out
sub
and
pop
addr16
adc
js
push
out
pop
pop
sub
xchg
mov
xlat
cmp
fst
rol
(bad)
xor
add
cdq
icebp
dec
ret
loop
jecxz
xor
test
mov
lea
in
lock
int3
adc
test
push
test
jns
cld
data16
and
sti
movs
xor
dec
fnstsw
xchg
adc
test
and
test
cwde
add
inc
dec
and
or
push
jp
in
dec
gs
mov
call
lods
sbb
mov
loop
aaa
lahf
pop
pusha
mov
in
ds
fstp
fnstsw
scas
fwait
cmp
stos
cmps
mov
aaa
imul
mov
daa
sbb
adc
or
js
add
xor
mov
sbb
mov
sbb
and
(bad)
gs
mov
(bad)
pop
adc
lock
js
push
sbb
jg
add
sbb
mov
cwde
push
(bad)
mov
daa
adc
or
out
pop
inc
retf
sbb
sub
xchg
adc
retf
repz
into
sbb
sbb
dec
lock
fwait
arpl
adc
lds
xchg
adc
scas
mov
fidivr
inc
mov
into
mov
lock
sbb
sti
aaa
xchg
test
test
pushf
pop
jmp
aaa
mov
mov
jnp
mov
loopne
or
or
leave
mov
or
inc
add
push
dec
and
movs
push
jne
mov
push
mov
(bad)
fldenv
(bad)
outs
fcmovu
jo
outs
out
xchg
scas
int
aaa
pop
jnp
adc
cld
int
(bad)
push
mov
outs
outs
ds
jne
xchg
frstor
cmp
mov
sbb
pop
cmps
inc
mov
ds
pop
and
xchg
ret
(bad)
push
cmp
dec
dec
or
cmp
or
js
mov
sbb
inc
xchg
pop
jp
or
call
out
push
mov
lods
ds
fisub
xchg
(bad)
into
mul
daa
jecxz
pop
not
sub
adc
xchg
sti
dec
sub
push
adc
dec
rcr
pop
out
mov
jge
xchg
mov
mov
cmp
iret
xchg
or
xlat
rol
adc
push
(bad)
pop
mov
es
mov
add
sub
sub
dec
jmp
imul
xor
repz
das
xor
pop
cs
inc
xor
fistp
cli
in
mov
int
not
pop
pop
jle
push
pop
jg
icebp
daa
aas
cld
rol
aas
jo
(bad)
adc
push
movs
ret
loope
aas
mov
pop
inc
js
cmp
cwde
mov
fcmovb
stos
add
dec
aaa
jp
into
(bad)
adc
dec
dec
cmp
dec
stos
dec
add
ret
sub
jmp
mov
jle
mov
fwait
xor
push
jae
movs
ret
fist
dec
repz
jl
mov
and
xchg
clc
leave
je
dec
shr
jecxz
add
arpl
inc
in
leave
aam
jg
ret
int3
loop
pop
push
iret
sbb
hlt
shl
outs
jge
push
jg
mov
mov
shr
xchg
hlt
jmp
outs
xchg
mov
stos
out
xchg
mov
dec
jns
adc
add
add
repz
inc
adc
add
xchg
add
and
add
add
add
cmp
loope
popf
lds
and
outs
pop
sub
sub
mov
xchg
loop
loop
das
out
cmps
(bad)
pop
jg
mov
xchg
addr16
mov
je
icebp
std
neg
std
aam
fidivr
int
repz
jmp
aas
pop
outs
aaa
mov
rcr
bound
or
push
(bad)
jo
lahf
mov
out
stos
sbb
or
mov
jmp
rol
pop
jg
add
jg
ret
pushf
scas
fsubr
jnp
mov
add
add
sub
mov
mov
in
out
rcl
mov
sub
mov
inc
jmp
pop
in
(bad)
ja
cmps
sub
or
stos
or
push
add
jmp
mov
loop
mov
stos
jmp
das
dec
and
(bad)
mov
jmp
in
mov
xor
sbb
and
dec
xchg
popf
pop
mov
adc
dec
sbb
(bad)
inc
clc
bound
mov
rol
and
add
push
lea
mov
repz
ja
push
pop
cmp
(bad)
sbb
jne
jle
mov
stc
repnz
mov
mov
(bad)
cdq
aad
cmc
std
pop
ds
push
pop
ds
rcr
scas
mov
into
scas
jge
and
cmp
add
out
push
mov
or
jl
push
cmp
and
test
inc
int3
and
out
pop
sbb
push
or
iret
stos
jmp
dec
xchg
hlt
sub
sbb
fs
fdiv
aas
(bad)
sbb
test
movs
lods
xchg
int
inc
xor
stc
es
cmp
sbb
cli
dec
movs
or
mov
stc
xchg
mov
inc
sbb
int
es
push
dec
call
icebp
mov
fstp
mov
cmc
mov
repz
fwait
int
mov
xor
ss
sbb
inc
les
inc
shl
pop
push
inc
or
push
jmp
push
pop
add
(bad)
sub
sbb
lock
aad
inc
shl
and
test
add
push
add
add
in
push
(bad)
int
or
(bad)
jno
jp
ja
cmc
jbe
in
xlat
pop
jnp
int
mov
(bad)
in
in
out
pop
pop
jg
rol
in
movq
mov
aas
clc
out
jnp
jle
jle
ror
pushf
fcomp
add
jmp
jg
xchg
shl
movs
out
fs
hlt
js
jecxz
inc
(bad)
enter
add
stos
call
(bad)
rcl
xchg
movs
sbb
out
and
call
adc
inc
sbb
and
pushf
sbb
xor
mov
xchg
mov
arpl
jnp
dec
xchg
jno
mov
jb
movs
lods
test
scas
fistp
jp
pop
scas
mov
mov
jl
fld
pop
scas
mov
cmp
ja
cmps
lods
xor
sti
push
fidivr
pop
push
jnp
xchg
fld
add
test
dec
add
mov
add
push
cmp
sub
or
(bad)
out
int3
push
shr
pop
sbb
out
cmp
adc
mov
ja
call
lea
mov
neg
jnp
cld
repnz
in
mov
mov
jns
jle
(bad)
cmps
fistp
das
sahf
cmp
hlt
iret
mov
call
jp
mov
xor
adc
int3
add
idiv
je
xchg
hlt
clc
push
xor
in
add
jmp
(bad)
mov
ds
inc
ja
ficom
xor
push
lds
jp
lds
icebp
rcr
fxch
jns
stc
mov
add
daa
dec
pop
bound
add
push
stos
out
jnp
fcomip
cmp
sbb
or
fnsave
cmps
jnp
(bad)
out
push
pop
test
ret
xor
out
lahf
je
xor
jbe
(bad)
cmp
popf
test
mov
nop
pop
inc
add
push
xchg
mov
adc
dec
sub
mov
inc
adc
and
pusha
mov
xchg
and
jo
and
sti
add
retf
cmp
push
dec
es
push
add
xor
fdivr
shl
jge
or
ja
mov
scas
mov
fdivrp
int
(bad)
int3
xchg
daa
xchg
cmc
leave
jmp
pop
popf
lahf
pop
cld
fstp
out
fidivr
loope
pop
mov
nop
adc
dec
mov
sar
add
gs
neg
hlt
ds
in
icebp
add
out
or
mov
loopne
pop
fdivr
sbb
cmp
adc
stos
ds
mov
jmp
jecxz
sub
adc
or
sub
sub
sahf
mov
jno
aaa
icebp
push
dec
inc
mov
or
add
outs
pop
pop
fstp
jl
pop
out
(bad)
ins
aaa
pop
sbb
fnstsw
out
pusha
lods
test
jecxz
adc
adc
pop
inc
or
sub
push
nop
mov
xchg
ret
mov
pop
add
mov
aas
int
or
xchg
bound
test
cld
sub
add
cmc
mov
les
add
add
loopne
fxam
inc
clc
movs
inc
jns
adc
leave
arpl
add
imul
nop
jmp
sahf
pop
pop
arpl
stos
aas
sti
mov
jns
(bad)
pop
aas
sti
stc
(bad)
dec
push
cmp
popf
das
pop
mov
stc
in
daa
push
dec
add
gs
(bad)
mov
sub
int
cmp
jo
push
loopne
syscall
pop
cmp
adc
(bad)
popa
lea
dec
push
inc
xchg
push
adc
push
enter
outs
nop
mov
inc
out
cmp
sub
mov
jg
xor
das
loop
inc
neg
inc
test
fwait
mov
cmp
(bad)
and
popa
xor
mov
test
test
push
ret
(bad)
cwde
das
push
daa
fcmovne
jmp
mov
pop
jmp
mov
fcmovne
cli
mov
mov
ret
adc
call
and
lods
and
or
push
add
ds
pop
sub
enter
adc
mov
xchg
pop
movs
xchg
push
dec
adc
mov
cmp
mov
(bad)
sar
xor
push
adc
and
xchg
adc
xor
inc
pusha
fld
xchg
(bad)
(bad)
std
jmp
out
clc
aam
ds
jmp
fnstenv
pop
cmps
jg
out
jbe
mov
rcl
jmp
dec
call
fcomi
xor
ja
mov
xor
jbe
push
and
xor
push
mov
loopne
neg
jo
xor
fisttp
lods
inc
loopne
loopne
add
int3
loopne
xchg
cs
xor
or
inc
mov
mov
sti
clc
gs
dec
jp
shl
push
jnp
mov
push
cmova
mov
ds
jbe
jp
jne
sti
mov
jmp
mov
cmp
rcl
pop
inc
push
push
push
inc
sub
lods
adc
push
and
and
inc
les
mov
push
jb
cwde
add
inc
or
and
or
xor
enter
and
sub
jl
pop
and
adc
test
or
cmp
jns
out
add
out
push
pop
aaa
xor
ret
ja
jae
xor
push
jo
std
ror
lods
stos
stc
cmp
mov
aaa
mov
mov
rcl
pop
jg
cli
xlat
(bad)
(bad)
mov
pop
push
mov
adc
leave
(bad)
jl
(bad)
not
inc
jns
jb
scas
jb
inc
mov
aas
adc
xchg
jnp
popf
fcomp
das
sbb
std
frstor
xchg
pop
cwde
mov
sub
pop
xchg
test
xor
pop
inc
sub
dec
push
fwait
inc
inc
dec
add
outs
mov
mov
adc
cdq
jne
xchg
int
test
(bad)
xchg
cwde
iret
out
jmp
(bad)
imul
mov
jmp
out
scas
outs
outs
aas
mov
in
test
das
pushf
mov
lock
dec
inc
imul
inc
rol
loopne
leave
in
inc
xor
push
sar
clc
and
xor
and
mov
adc
pop
add
pop
pop
out
and
shl
xor
jmp
into
jnp
ret
sbb
cmp
rol
add
out
or
and
rcr
mov
dec
mov
shl
addr16
scas
mov
rcl
pop
(bad)
(bad)
aaa
jg
int3
pusha
dec
mov
cwde
pop
lock
call
cmp
std
hlt
sbb
mov
ja
or
mov
jns
sbb
and
mov
idiv
shl
jns
and
inc
cmp
retf
cmp
pop
xchg
imul
inc
mov
dec
mov
arpl
(bad)
xor
je
popa
test
fnstsw
jae
(bad)
jmp
fld
push
aas
xlat
jne
xlat
in
dec
pop
ss
ds
mov
cmp
adc
sbb
mov
popa
sahf
xor
xor
push
or
fld
leave
adc
test
sar
int3
js
or
es
sbb
push
push
push
inc
xlat
or
xchg
pop
inc
sub
xchg
es
add
icebp
inc
and
pop
or
mov
call
push
push
outs
jg
popf
fistp
leave
push
dec
pop
imul
test
out
add
push
fistp
sbb
ss
inc
fadd
xor
inc
add
imul
mov
push
in
inc
fwait
movs
and
push
mov
add
mov
dec
push
cmp
inc
dec
cmp
sti
les
loop
xchg
dec
cmp
loopne
std
lods
mov
cmps
imul
(bad)
aaa
or
adc
fs
js
stc
bound
outs
mov
or
fwait
out
shl
in
jbe
(bad)
je
sar
div
or
or
mov
mov
movaps
xchg
aas
inc
push
cmp
ret
mov
add
mov
push
add
and
or
stc
loopne
push
rcl
movs
and
sub
adc
add
xor
or
mov
xchg
dec
mov
pop
or
add
push
sub
psraw
repz
fistp
lahf
das
mov
or
cld
xchg
pop
(bad)
js
in
xchg
not
repnz
sbb
hlt
aaa
(bad)
xor
jmp
push
push
cli
loopne
dec
or
fidivr
pop
adc
enter
xchg
imul
fwait
cmp
xchg
xor
movs
dec
scas
arpl
repz
cmps
push
inc
cs
outs
cmps
mov
(bad)
mov
sub
jecxz
(bad)
int3
push
inc
xchg
scas
sbb
push
icebp
xor
push
push
leave
stc
mov
push
lahf
pop
lods
out
aas
jge
jne
sbb
mov
mov
ret
adc
adc
in
jnp
rol
pusha
pop
and
add
setp
xor
jb
and
and
or
mov
add
lahf
test
and
xchg
and
push
jp
push
push
push
std
shl
js
pop
aas
bound
add
add
xor
or
outs
pop
and
jmp
cld
in
mov
(bad)
das
scas
(bad)
fcos
jmp
std
aaa
jg
mov
xchg
and
jo
xchg
(bad)
adc
pusha
stos
adc
jmp
add
test
cmp
dec
cmps
iret
push
call
ins
mov
sahf
sub
aas
dec
(bad)
repnz
inc
push
xchg
daa
adc
int3
cmp
sti
xor
push
pusha
adc
iret
add
addr16
pop
mov
popa
jge
cli
aam
rep
lahf
fld
lods
aas
ja
jae
mov
in
mul
dec
cmp
and
add
push
inc
inc
mov
les
or
and
add
js
inc
ret
lsl
pop
add
mov
and
inc
movs
jae
enter
mov
mov
add
jmp
pop
jo
mov
sbb
add
add
sub
mov
push
neg
adc
jne
push
aaa
int
jl
popf
pop
cli
int3
cmps
fistp
inc
jg
xchg
sti
cmc
frstor
jmp
pop
cld
aas
outs
out
jns
push
jmp
(bad)
repz
cld
aas
inc
xlat
jne
std
cld
sub
stc
xchg
je
cmp
sbb
add
jo
daa
cwde
movs
rol
enter
aaa
(bad)
iret
push
add
loop
lahf
in
loopne
fwait
mov
test
call
jne
cwde
les
aam
mov
jecxz
shl
int
add
movs
push
push
mov
hlt
cmps
scas
sahf
cmp
mov
ins
push
pop
mov
mov
dec
sbb
lods
test
adc
and
or
jmp
cwde
ss
pop
sub
adc
jmp
mov
xor
in
mov
fs
popa
xor
cmp
(bad)
cmp
je
movs
dec
inc
mov
and
xchg
nop
or
push
test
push
(bad)
sbb
mov
imul
inc
mov
or
nop
mov
hlt
cld
jmp
push
mov
xlat
mov
imul
repz
mov
jge
loope
cld
stc
pop
cld
in
mov
sub
bound
mov
outs
pop
dec
out
add
cmp
fld
popf
cmp
or
mov
sub
fild
cmps
jbe
or
clc
dec
xor
cmp
pop
pop
and
cmps
bound
dec
sbb
pop
outs
ret
lds
sub
xchg
sbb
sbb
dec
loop
jmp
cmp
in
pop
jl
jne
sti
int
push
xor
das
scas
mov
outs
mov
inc
into
cmp
mov
inc
mov
dec
in
bound
pop
es
dec
fmul
(bad)
and
cs
xchg
pop
lahf
cwde
inc
or
sbb
das
scas
xchg
inc
mov
movs
pusha
call
add
sub
mov
in
xchg
scas
(bad)
in
push
dec
ror
xor
sub
mov
jbe
jae
mov
in
adc
inc
fbld
or
ret
idiv
cmps
dec
mov
cmp
iret
pop
cmps
mov
out
jmp
mov
mov
(bad)
psrlq
xchg
pop
mov
scas
sbb
enter
rol
sub
fistp
or
rol
inc
test
into
lahf
dec
dec
mov
je
(bad)
pop
jge
icebp
push
push
inc
jbe
jne
dec
sub
ret
cmp
loope
iret
leave
adc
lahf
sub
adc
dec
xor
cs
cmp
das
pop
aas
mov
int
cli
fidivr
xor
pop
or
movs
pop
cld
cmp
clc
push
leave
mov
xchg
test
add
ret
imul
mov
popf
out
sub
dec
push
test
xor
bound
adc
cld
adc
pop
adc
movs
je
mov
(bad)
rcr
nop
mov
sub
push
pop
loopne
inc
push
add
scas
and
rcr
mov
push
xor
mov
lock
jb
inc
or
pop
or
fist
fisubr
imul
cmp
jle
ds
loopne
lds
inc
test
adc
loop
fcmovnu
idiv
adc
and
sti
mov
inc
pop
pushf
cmp
daa
add
fcmovbe
push
inc
mov
jne
popf
adc
ja
jns
retf
inc
xchg
mov
int3
xchg
xor
ja
push
out
sbb
das
jae
loop
inc
cmps
addr16
and
das
test
dec
xchg
iret
das
and
jbe
sti
movs
jmp
xlat
pop
mov
jmp
push
data16
dec
xchg
sbb
or
jge
push
and
test
fsub
adc
leave
cmp
ret
inc
and
and
or
hlt
pop
in
dec
or
cmp
adc
adc
xor
inc
xor
sbb
out
shl
cmp
push
lds
add
lock
out
push
mov
push
xor
test
push
mov
fisub
or
push
imul
or
add
xchg
xchg
mov
repz
lahf
(bad)
fmul
(bad)
in
jo
jbe
in
stos
pop
stc
jns
push
push
loopne
add
jg
mov
nop
jbe
enter
ror
and
xchg
mov
jg
(bad)
loope
push
add
sbb
leave
adc
lahf
popa
int3
or
mov
lea
pavgw
nop
mov
xchg
mov
aaa
aaa
xchg
clc
xor
inc
and
pop
fdivr
cli
sar
std
std
out
outs
outs
mov
jb
jg
mov
pop
pusha
mov
stos
shr
mov
cmps
and
sti
ud2
mov
cmp
inc
into
inc
jmp
and
loopne
or
xchg
inc
hlt
into
test
xchg
xchg
adc
push
jo
adc
sub
push
mov
fs
mov
in
push
adc
and
cmps
cmp
push
xor
(bad)
call
jae
mov
daa
jl
dec
or
mov
sahf
and
test
push
dec
mov
mov
xchg
cmp
jle
repnz
jns
or
cld
pop
cmp
pslld
hlt
movs
fld
pop
add
adc
in
sub
cwde
jl
cmps
xchg
fsub
inc
add
les
add
ds
jne
or
sbb
cmp
jmp
test
(bad)
loop
or
xor
adc
ror
retf
gs
xor
jmp
int3
and
sar
into
pop
mov
xlat
dec
lahf
std
cld
jp
(bad)
fstp
(bad)
lahf
mov
outs
mov
in
jbe
scas
pop
add
mov
pushf
out
adc
aaa
fld
jb
shr
(bad)
fisttp
(bad)
ret
rcr
mov
jo
rol
(bad)
pop
push
sub
stc
ret
data16
rcl
jle
or
adc
test
nop
or
and
or
pusha
mov
jbe
cmp
sbb
add
mov
mov
add
fdivr
dec
push
xor
xchg
inc
in
sbb
add
cmp
clc
and
out
in
int
jmp
push
mov
dec
jle
sar
stc
jbe
jno
fucomp
mov
sbb
in
add
mov
neg
pop
daa
jnp
enter
cdq
out
pop
(bad)
retf
inc
add
push
adc
xchg
loopne
jo
daa
popf
dec
(bad)
les
cwde
fadd
jnp
mov
shr
pop
dec
outs
cmp
aad
cwde
in
icebp
sub
push
jl
xchg
adc
outs
xor
leave
add
jg
push
adc
or
push
mov
cmp
cmc
pop
mov
aaa
fucomip
jbe
xlat
out
outs
out
mov
(bad)
lods
xor
sahf
ins
in
dec
aad
xchg
test
adc
and
rdmsr
ret
jne
add
adc
mov
rol
out
jl
xor
ret
test
aas
aas
jbe
repnz
movs
pop
aas
scas
pop
cld
(bad)
iret
fist
sbb
xor
add
mov
test
add
adc
pushf
(bad)
test
add
cmps
or
imul
push
aaa
je
test
sbb
iret
dec
mov
ja
mov
mov
packuswb
xor
je
aad
lea
mov
(bad)
push
pop
mov
mov
cld
movq
xor
mov
push
(bad)
add
movs
lods
inc
mov
sbb
adc
cmp
or
xchg
out
test
dec
pop
cmps
cmp
xchg
mov
sub
out
fwait
jp
cmp
jecxz
in
daa
cmps
les
jne
jmp
shl
lahf
xor
cmp
movs
adc
(bad)
pop
jle
(bad)
pop
jg
jg
(bad)
xchg
(bad)
dec
aas
cli
call
inc
outs
jbe
mov
jmp
jmp
pop
jmp
xor
loope
pop
add
add
in
add
xor
into
cmp
jl
push
push
mov
jns
dec
in
mov
(bad)
mov
push
xchg
adc
push
into
sbb
mov
aad
cld
lock
popf
jmp
stos
sbb
ror
nop
xor
xor
sbb
add
add
stos
add
jge
stos
jmp
fisttp
cmps
addr16
adc
(bad)
pop
arpl
jge
je
add
ficomp
arpl
push
add
or
mov
and
(bad)
test
mov
sahf
outs
mov
jg
mov
or
iret
xor
(bad)
and
mul
pop
(bad)
out
mov
pop
jp
icebp
jb
out
dec
aad
mov
lahf
pop
fbld
dec
cwde
mov
jl
jmp
inc
fnstsw
xchg
xchg
nop
(bad)
lahf
daa
cdq
scas
push
pushf
or
jmp
cmp
pop
jge
shl
and
or
aaa
cmc
in
(bad)
aas
clc
loope
jg
jecxz
jl
jmp
mov
jnp
cwde
xor
inc
or
xchg
cmc
push
(bad)
es
mov
sub
push
es
jne
out
push
pop
inc
mov
loope
mov
pop
push
jle
mov
jno
clts
or
icebp
pop
shl
mov
pop
cmp
mov
adc
sbb
icebp
push
xchg
aam
pushf
ret
dec
imul
push
mov
test
imul
scas
adc
out
test
cmp
inc
shl
add
inc
sub
sar
and
out
add
and
and
push
call
sub
imul
mov
out
jg
sbb
jmp
loope
out
data16
jae
or
pop
add
inc
(bad)
xor
clc
or
dec
cmc
jmp
in
pop
jns
push
cmps
push
or
pop
xor
sbb
jl
(bad)
das
ss
(bad)
mov
test
ret
mov
mov
push
fadd
add
movs
lods
jo
xor
or
imul
sbb
jge
mov
inc
sub
sub
lahf
mov
in
(bad)
ds
retf
repz
(bad)
fnstsw
jmp
scas
idiv
bound
and
popf
and
ror
jnp
mov
imul
(bad)
sar
sbb
(bad)
loope
mov
pop
push
inc
xor
inc
inc
nop
dec
inc
lock
ret
adc
scas
sbb
ja
data16
pusha
arpl
and
in
jnp
lods
push
call
adc
loope
xchg
cwde
mov
icebp
or
sub
inc
movs
enter
repz
pop
xlat
and
pusha
jns
sbb
jns
add
call
nop
sub
(bad)
pop
pop
out
xchg
sbb
cmp
inc
addr16
js
in
add
cmps
addr16
cld
cmc
inc
xchg
xchg
pop
imul
out
mov
arpl
test
jnp
lahf
(bad)
(bad)
sbb
test
xchg
or
mov
or
sbb
and
dec
inc
(bad)
sub
jp
inc
sar
pop
xchg
mov
mov
popf
fiadd
cmp
dec
cmp
add
cmp
aam
inc
inc
mov
pop
leave
xlat
lahf
jg
in
fwait
aaa
das
scas
jg
cli
jmp
jmp
in
add
adc
cs
push
xor
cmovg
sub
out
sbb
mov
lods
or
xchg
(bad)
and
mov
inc
shl
cld
hlt
pop
cld
sbb
mov
add
add
add
cs
ss
or
mov
adc
inc
pop
mov
je
ret
dec
or
add
addr16
mov
stos
sbb
dec
push
mov
popa
inc
fbstp
lods
adc
cwde
fisub
jbe
lahf
sub
add
test
(bad)
jp
arpl
or
mov
push
iret
scas
jo
jno
xlat
fistp
daa
cmps
loop
in
push
jbe
in
outs
mov
dec
or
mov
stc
mov
jg
loopne
or
retf
pop
mov
cmp
sub
or
jle
ins
nop
adc
push
sti
and
daa
mov
mov
cmps
mov
jmp
movs
in
pop
mov
ror
das
gs
dec
sub
call
xchg
cmp
stos
rol
shr
mov
(bad)
out
scas
scas
jg
out
out
ja
push
imul
ins
ss
mov
ja
mov
in
pop
dec
add
popa
bound
imul
xchg
jmp
dec
arpl
add
or
inc
lock
jmp
out
sbb
push
cdq
mov
lods
rcr
and
inc
pop
or
xor
mov
sub
xchg
push
neg
add
jp
test
hlt
ret
inc
imul
(bad)
jbe
mov
lods
shl
in
out
xlat
push
xchg
(bad)
dec
adc
push
or
in
xchg
movs
xor
out
pushf
add
jle
frstor
jmp
iret
pop
rcl
xchg
xchg
gs
push
jmp
sti
aad
cmovg
mov
cmp
daa
push
div
enter
fdivrp
dec
xchg
movs
or
push
int3
and
adc
aas
inc
xchg
(bad)
add
cmps
stos
ss
(bad)
adc
sbb
cld
shl
mov
mov
fnstsw
in
jle
mov
xchg
rol
cdq
retf
xor
adc
dec
jne
or
xchg
push
(bad)
lahf
mov
fcmovnu
fcmovnu
fild
ja
cmc
mov
test
push
dec
(bad)
int3
inc
cdq
mov
dec
cld
sub
adc
outs
popa
jl
jge
in
dec
dec
or
clc
lods
out
mov
repz
test
scas
fs
gs
xchg
loopne
ja
inc
clc
nop
push
mov
or
dec
pop
imul
fidiv
loopne
fisubr
fsub
add
xor
dec
xchg
pop
or
(bad)
mov
pushf
sub
add
mov
jbe
sbb
jns
xchg
in
cli
retf
jae
shl
popa
cmp
ins
dec
loopne
dec
jecxz
xchg
into
jnp
push
imul
pop
mov
out
loope
fisubr
jmp
ins
(bad)
mov
or
cwde
cmp
xor
push
rol
rcl
xchg
jge
int3
(bad)
das
add
call
jmp
jno
add
pop
jle
dec
jecxz
push
ret
ret
adc
sub
nop
arpl
jmp
add
(bad)
xchg
push
cld
xor
iret
jmp
out
bound
aas
jnp
ror
(bad)
loopne
iret
lahf
ds
fnstsw
repz
scas
idiv
and
mov
push
and
cmp
cmc
(bad)
ret
into
not
lock
adc
dec
mov
mov
and
(bad)
dec
aam
add
jmp
loopne
and
pop
cdq
xchg
add
add
fsubr
les
adc
or
xchg
fisttp
mov
bound
(bad)
sbb
jne
call
ins
add
sbb
xchg
neg
jl
jo
cmp
push
dec
or
(bad)
push
(bad)
fldcw
push
bound
inc
sub
pop
pushf
pop
dec
rcr
repz
mov
iret
jg
xchg
in
mov
xchg
(bad)
or
or
mov
movs
sub
add
inc
loop
sti
push
stc
mov
lahf
ds
imul
mov
xchg
mov
push
std
call
ficom
not
rcr
mov
scas
dec
ds
call
or
mov
ja
fld
dec
push
push
inc
inc
dec
and
mov
retf
mov
dec
dec
mov
aas
dec
xchg
mov
push
(bad)
cmp
out
sub
push
nop
pop
pop
imul
leave
jecxz
mov
(bad)
fpatan
cld
mov
cmovl
dec
enter
cdq
lds
repz
ret
rcr
popa
push
sbb
sbb
or
std
sbb
pop
lock
pop
dec
clc
mov
or
fwait
or
sar
cdq
int
pushf
inc
mov
shr
jbe
adc
sbb
sub
cwde
scas
xchg
inc
and
xor
mov
jp
pop
pop
loope
repnz
lahf
sahf
mov
mov
ins
mov
sub
(bad)
pop
fisttp
push
iret
(bad)
cmp
popa
and
imul
cmp
dec
aas
sub
xor
shl
adc
cmp
xchg
jnp
add
fucomip
test
dec
inc
cmp
ja
and
xor
mov
push
in
fs
fwait
sbb
iret
enter
les
scas
xor
inc
add
sbb
jae
xor
jge
(bad)
out
pop
cld
loope
(bad)
xchg
aaa
fwait
cmc
iret
pop
jecxz
into
pop
aam
dec
cdq
jp
xor
pop
je
lods
mov
push
aaa
pop
mov
rcr
sbb
mov
sub
out
(bad)
cmp
dec
fmul
cmp
idiv
push
popf
sub
adc
ds
dec
out
mov
and
mov
pushw
and
les
adc
mov
mov
pop
pusha
xchg
add
xchg
push
lock
mov
ror
shl
int3
xor
pop
or
pusha
jns
inc
jae
ret
frstor
jp
loopne
in
xor
retf
push
aam
xor
ficomp
movs
inc
leave
inc
push
into
pop
sub
popa
(bad)
shl
mov
stos
shl
dec
or
addr16
mov
mov
mov
test
cmp
leave
in
in
in
daa
pop
aaa
clc
sti
aad
push
or
lock
mov
jmp
cmp
cmp
add
mov
sbb
(bad)
imul
dec
mov
adc
jle
hlt
add
(bad)
add
fisttp
les
scas
xor
pop
icebp
mov
push
iret
retf
in
pop
add
into
stos
stos
jp
stc
mov
mov
aaa
pop
pop
mov
fbstp
inc
rcl
lods
and
bound
stos
adc
xchg
or
adc
inc
arpl
mov
popf
inc
out
dec
mov
inc
mov
pop
loop
sbb
xchg
lods
movs
fstp
or
mov
mov
mov
or
xor
ret
or
push
push
or
push
push
and
mov
ins
pop
data16
sbb
jnp
add
mov
xchg
mov
fadd
inc
mul
dec
cmp
fisttp
fcomi
push
cmps
pop
and
out
jbe
(bad)
push
fst
mov
retf
and
fucomi
xor
mov
imul
jmp
sbb
stos
adc
xor
stos
inc
push
push
and
call
repz
repnz
test
ds
sahf
nop
ret
add
mov
ss
push
mov
mov
jo
loopne
(bad)
and
in
cli
pop
out
pop
bound
out
cmp
sbb
scas
sub
arpl
adc
retf
loop
in
push
dec
mov
xchg
out
fsubp
mov
pop
mov
test
test
iret
scas
jle
out
div
pmaxsw
out
aas
fbstp
(bad)
into
jns
add
pop
lds
push
and
loopne
pushf
ja
pushf
ror
xor
outs
pop
jmp
pop
inc
push
xchg
jb
fnstenv
fisub
push
loopne
dec
inc
retf
dec
xchg
push
dec
inc
add
inc
xchg
scas
retf
sbb
push
rcl
out
enter
mov
adc
pop
push
rcr
cmp
mov
jmp
loopne
xchg
xor
bound
call
push
scas
add
inc
add
pop
cwde
mov
pop
movups
mov
daa
cmps
or
fnsave
mov
ins
pop
imul
jae
xchg
or
rol
es
cmp
mov
sbb
xchg
stos
mov
hlt
cwde
xchg
js
jb
enter
dec
push
aas
mov
aad
jecxz
push
xchg
bnd
(bad)
fidivr
dec
and
hlt
cmp
shr
fsubrp
fldcw
test
aas
add
push
pop
sti
pusha
jl
add
cmps
mov
std
scas
in
dec
sub
call
les
fidivr
loop
jae
imul
jle
jne
dec
ret
xor
outs
pop
push
mov
(bad)
sbb
adc
mov
sar
add
sbb
test
jbe
push
les
les
fiadd
adc
lods
mov
add
shl
pusha
xor
lods
inc
push
and
faddp
cmp
addr16
pop
fistp
pop
adc
popa
dec
enter
dec
rol
popf
mov
sub
jns
scas
and
mov
into
je
jmp
in
xchg
rol
and
push
xchg
jp
arpl
call
pop
jecxz
outs
test
sub
stos
mov
repnz
mov
push
dec
xchg
fmul
cwde
add
push
stos
cmc
or
shl
jae
mov
add
mov
in
sub
cmp
mov
das
inc
xlat
jne
mov
repz
cmp
inc
and
xchg
sbb
xchg
aas
out
rcr
or
pusha
cmps
hlt
shl
or
adc
(bad)
shr
xchg
aam
fld
xchg
fiadd
inc
stc
pop
adc
push
loopne
imul
xchg
jno
jne
mov
stc
jecxz
(bad)
loope
(bad)
fdivr
div
ja
int
lea
mov
mov
xor
inc
adc
adc
pop
out
pushf
shl
mov
scas
mov
sbb
hlt
ds
aam
dec
mov
stos
sub
adc
add
mov
sbb
ror
mov
cmp
push
and
sbb
jge
jmp
push
arpl
and
std
pop
repnz
fiadd
or
or
pop
or
imul
ja
int3
jmp
test
xlat
arpl
psubsb
mov
xor
xchg
cmps
daa
pop
cs
(bad)
call
fistp
retf
stc
or
ins
add
cmp
shl
loop
test
sbb
push
pop
push
push
dec
mov
dec
mov
rcl
aaa
popf
idiv
daa
pop
test
dec
jnp
icebp
aaa
mov
inc
imul
xor
mov
nop
movups
push
cmc
ds
cmp
adc
mov
push
sbb
xor
rcl
std
or
nop
out
sbb
push
inc
call
fdivp
mov
xchg
pop
std
call
pusha
in
das
jne
in
cmps
popf
mov
jl
adc
dec
pop
mov
xor
push
lock
jb
jnp
loopne
ret
(bad)
sbb
push
and
jecxz
(bad)
or
imul
mov
sub
call
jmp
adc
test
lods
cmps
ficom
popf
pop
dec
fcmovnb
sbb
add
sbb
push
(bad)
adc
sbb
sahf
cwde
xor
lock
xchg
arpl
xor
jbe
cmp
add
or
int
jp
shr
mov
mov
shr
shl
shl
jecxz
repnz
lds
int
frstor
repz
into
push
or
cmp
ins
in
outs
adc
lods
mov
dec
cmp
add
out
push
mov
popf
add
push
pop
(bad)
lock
popa
pop
retf
sbb
jecxz
hlt
hlt
xchg
push
jmp
pushf
popf
cs
loopne
adc
xor
out
aas
test
push
jmp
mov
xchg
ret
in
mov
dec
inc
ins
pusha
out
mov
int3
fdivr
push
inc
rcr
sub
pop
mov
(bad)
arpl
test
dec
push
retf
in
cmc
jecxz
std
loopne
(bad)
aas
cli
lock
das
outs
jle
xlat
cmc
fistp
jo
or
aad
sbb
(bad)
in
out
sar
ss
and
mov
mov
arpl
mov
push
ret
mov
movs
pop
jae
inc
add
and
aam
ret
fadd
fadd
mov
sbb
and
inc
adc
arpl
xchg
fwait
pop
xchg
jno
cs
xchg
in
aas
lea
add
ror
pop
out
mov
jbe
and
or
hlt
sbb
push
inc
sub
ficom
mov
or
cmp
or
add
jmp
mov
push
pop
test
mov
inc
movs
adc
sahf
pop
mov
sub
lahf
iret
aad
jmp
jle
(bad)
(bad)
(bad)
jmp
scas
mov
sbb
sub
mov
mov
add
sbb
xor
leave
ds
cli
fwait
clc
mov
inc
push
lods
loope
mov
(bad)
icebp
nop
pop
hlt
clc
dec
(bad)
out
pop
test
cld
in
add
test
push
iret
sahf
jle
shr
jg
loope
mov
mov
xchg
xchg
pop
imul
mov
mov
cld
into
sbb
rol
add
test
adc
(bad)
adc
pop
fidiv
xlat
rcl
sub
or
outs
cmp
std
inc
dec
int3
ins
out
arpl
(bad)
icebp
cmp
in
(bad)
int3
inc
add
jmp
push
mov
push
mov
mov
nop
push
call
ins
pop
xlat
xor
lds
faddp
add
mov
push
dec
xchg
dec
xchg
loopne
or
xor
mov
bound
mov
(bad)
shl
mov
cmps
lds
inc
xor
or
jcxz
cmps
add
xor
cmp
push
ins
daa
inc
out
dec
out
adc
pop
pop
mov
mov
fsubr
imul
adc
mul
loope
nop
mov
push
cmp
lock
inc
pop
xor
sub
cmp
xchg
add
jmp
out
cmp
pop
ror
mov
cdq
adc
or
pusha
add
dec
and
ja
aam
mul
jmp
cld
out
(bad)
fnstsw
fucomi
mov
adc
and
cmp
leave
lahf
sbb
pusha
lock
xchg
jnp
rcr
call
push
pop
pop
mov
inc
push
scas
mov
imul
xor
data16
and
out
stc
dec
cmps
or
sub
adc
or
adc
nop
xor
or
stos
or
push
imul
in
mov
mov
mov
xchg
je
mov
and
adc
add
rcr
arpl
sbb
fdivr
retf
ret
add
div
int3
xor
dec
push
push
sub
aam
jmp
pop
mov
call
jp
test
mov
or
data16
cmps
sub
mov
jge
int
lods
adc
mov
bnd
cld
ret
(bad)
std
std
pop
sbb
add
nop
xor
xchg
mov
cmp
cmp
sub
cmp
ret
test
aam
push
pop
outs
inc
adc
inc
aas
xor
outs
fs
(bad)
out
and
push
sbb
popa
add
xchg
push
imul
hlt
stc
mov
cmp
(bad)
lods
jmp
pop
jg
(bad)
xor
or
push
lods
int3
stos
shl
stos
shl
pop
pop
sar
inc
sbb
shld
xchg
out
test
or
jne
dec
xlat
push
push
dec
enter
jp
and
je
shl
loop
stos
inc
fs
push
mov
lea
cmps
dec
xchg
dec
add
adc
dec
add
or
jmp
cmps
dec
and
add
pop
test
shr
sbb
ret
xchg
mov
cmp
rol
pop
div
mov
xor
add
mov
jbe
test
push
mov
or
push
popf
arpl
je
int
push
into
pop
or
inc
jae
xor
mov
pop
mov
cmp
imul
mov
pop
and
daa
adc
pop
pop
pop
jle
pop
push
jg
jnp
shr
inc
or
icebp
sbb
add
sbb
and
sbb
jae
push
or
mov
sbb
jo
cmps
loopne
test
leave
cmp
iret
ss
jge
mov
pop
dec
inc
add
pushf
inc
movs
stos
inc
xlat
xlat
aaa
mov
pop
fstp
scas
mov
fidivr
and
test
je
neg
call
bound
mov
lods
rcl
jmp
push
jae
mov
mov
xchg
push
mov
stos
call
ficom
mov
jne
call
(bad)
pop
cmps
out
mov
cmps
scas
enter
push
mov
push
and
or
mov
dec
imul
dec
or
shl
jmp
int3
das
pusha
push
call
loope
pushf
neg
fld
(bad)
cmps
cmc
and
mov
add
pop
aaa
cwde
das
pop
cwde
das
addr16
mov
pop
minps
dec
or
or
cmp
jmp
bound
adc
sbb
jae
xchg
inc
into
data16
fwait
cmps
stc
je
stos
(bad)
mov
stos
jns
mov
inc
rol
jmp
xchg
jo
iret
pop
push
repz
sub
and
add
add
cmp
push
out
push
and
mov
or
movs
jp
cli
jmp
fucomp
pop
das
mov
out
adc
stos
retf
ins
sti
sbb
jo
loop
cmp
cmp
shl
mov
shl
fbstp
imul
lds
test
inc
add
or
xchg
mov
lea
aad
mov
mov
adc
daa
rdtsc
push
add
loopne
ret
or
cli
or
cli
enter
pop
xchg
stos
push
add
or
mov
or
fld
es
xchg
mov
pop
loopne
scas
imul
sbb
rcr
cmp
lods
hlt
push
repz
and
outs
xchg
push
in
ins
fwait
sbb
cmp
mov
popa
pop
pop
outs
pop
dec
repnz
mov
or
inc
enter
push
(bad)
pop
hlt
in
in
mov
lea
je
xchg
out
or
test
in
jmp
idiv
mov
sti
das
imul
aaa
ins
out
xchg
shl
adc
sbb
mov
imul
dec
push
sbb
add
aas
and
or
sub
push
(bad)
xor
and
test
out
stc
mov
jg
hlt
out
fisubr
cli
mov
add
leave
popf
jne
stos
push
xor
jae
mov
jle
dec
retf
lock
mov
(bad)
(bad)
xor
push
xlat
push
adc
(bad)
sar
jmp
dec
push
adc
add
push
call
mov
retf
in
inc
sub
adc
jl
cmp
in
lods
lea
rcr
imul
in
pusha
mov
addr16
xlat
mov
mov
mov
lods
mov
jge
repz
mov
and
jo
or
cmp
xor
mov
pushf
mov
into
mov
add
mov
ret
xchg
int3
sbb
sub
mov
add
nop
mov
jns
mov
pushf
mov
rol
jg
pop
outs
out
test
data16
inc
cmp
mov
jl
adc
test
xchg
rol
jb
rcr
enter
jno
mov
xor
out
adc
and
jb
push
shr
push
ror
(bad)
sti
push
imul
aad
addr16
(bad)
addr16
mov
xor
mov
aad
call
fnstsw
and
and
daa
sub
and
xor
dec
stos
jne
outs
sub
dec
cmp
cld
leave
out
call
adc
xor
mov
adc
mov
xchg
rcr
xor
adc
aas
lods
adc
adc
adc
pop
cmp
or
inc
mov
xchg
xsha1
cmps
dec
or
nop
cmp
mov
add
popa
cmp
dec
outs
dec
xchg
or
xor
psubsb
mov
cmps
cmps
cwde
sub
fsub
sbb
mov
or
xor
scas
mov
mov
pop
sub
pop
icebp
dec
retf
push
xlat
cmp
stc
cmps
xchg
nop
outs
neg
and
lds
aam
mov
mov
mov
popa
jnp
dec
jmp
mov
mov
jg
(bad)
xlat
mov
(bad)
xor
jmp
pop
cs
std
scas
sahf
fnstsw
cli
stc
repz
mov
cli
mov
fsincos
xor
xchg
ins
call
xor
push
jle
mov
ret
dec
xor
(bad)
pop
xchg
retf
jne
stos
stos
xor
sbb
loop
retf
sti
in
or
test
pop
add
test
leave
retf
xchg
pusha
and
xor
cmc
push
and
pop
mov
add
or
in
sub
jle
aam
dec
dec
xchg
push
ja
into
movs
pop
add
jno
shl
imul
or
xchg
sub
sbb
stos
dec
push
jae
mov
bound
adc
mov
adc
xor
xchg
pop
(bad)
dec
inc
pop
xchg
adc
add
repz
or
dec
mov
inc
push
xchg
ret
dec
fnsave
jge
mov
adc
or
cwde
in
hlt
test
adc
call
cmp
mov
sti
sti
cmps
and
jno
out
jle
loopne
sti
push
(bad)
ror
inc
xchg
clc
jnp
add
jno
xchg
lahf
push
jl
gs
push
mov
frstor
outs
outs
(bad)
out
int
aad
out
outs
outs
jg
sbb
mov
sbb
mov
push
rcr
add
in
loop
and
dec
sub
pop
mov
mov
xchg
mov
sbb
push
cs
or
or
(bad)
rcr
adc
or
sub
xchg
inc
lahf
pop
jno
rcl
fldenv
rcl
sub
add
and
jl
push
pop
adc
lods
sbb
xor
aam
arpl
aaa
inc
retf
xchg
jmp
repnz
test
jae
sbb
loope
into
hlt
call
dec
cmc
add
not
or
inc
aad
cwde
das
xchg
cmp
cmp
(bad)
sbb
scas
sub
push
mov
mov
and
push
aam
cmp
stos
mov
mov
ins
imul
in
sbb
jmp
lods
cmc
daa
setne
jle
jecxz
adc
cmps
inc
push
cdq
push
push
xchg
retf
mov
lock
and
push
or
popf
nop
ret
arpl
icebp
cmp
mov
inc
xlat
neg
fstp
mov
es
out
mov
pop
data16
push
shl
imul
ret
sar
not
push
add
ins
or
outs
sbb
cmp
or
rcr
loope
(bad)
rol
dec
sub
sbb
popa
imul
fs
sub
mov
movs
cwde
stos
movs
mov
mov
mov
xor
jbe
jge
(bad)
fnstenv
adc
stc
(bad)
loop
add
mov
fdiv
jo
xchg
and
ds
sti
mov
inc
mov
jecxz
mov
sbb
inc
fiadd
lods
mov
push
(bad)
clc
test
xchg
and
imul
fnstcw
outs
faddp
into
dec
(bad)
rol
cmp
adc
add
xor
add
ror
mov
lahf
xor
lahf
fcomp
ret
hlt
add
adc
retf
cs
mov
mov
jg
sbb
das
or
sti
(bad)
neg
mov
cwde
call
jg
or
mov
push
pop
dec
stc
jp
cmc
lahf
mov
fwait
pop
aaa
mov
mov
mov
pop
push
fild
cmp
and
add
enter
jb
sbb
mov
shr
imul
movs
bound
ins
pop
stos
push
or
arpl
int3
sbb
dec
xchg
aam
dec
xchg
cmp
jo
jecxz
inc
sar
ret
repz
stos
sub
call
mov
adc
add
(bad)
ror
fiadd
or
dec
test
mov
rcr
lahf
dec
adc
pusha
ins
dec
sub
ficomp
ins
xchg
daa
mov
add
sbb
sahf
imul
call
add
mov
pop
xchg
sub
or
jb
enter
(bad)
xor
hlt
hlt
mov
inc
inc
mov
or
in
gs
sahf
xor
jae
fisttp
inc
sbb
mov
sti
mov
add
gs
cmps
and
loope
(bad)
cwde
sahf
mov
nop
push
stc
xchg
mov
jecxz
fld
aam
mov
dec
std
xor
mov
inc
aaa
jl
(bad)
(bad)
(bad)
imul
pop
jg
mov
jl
sbb
cli
stos
cwde
sbb
sub
adc
repz
lds
sub
stos
mov
(bad)
adc
or
les
aad
ret
packuswb
icebp
adc
mov
adc
fs
gs
adc
push
inc
pop
add
adc
mov
test
push
inc
js
adc
adc
and
and
mov
fcmovne
push
dec
mov
mov
ins
push
pop
xor
or
shl
mov
jecxz
les
mov
movs
rcl
mov
cli
fdivr
add
sbb
cmps
loopne
popf
fcom
mov
inc
mov
out
cmps
int3
dec
jmp
test
aad
fsub
daa
outs
inc
push
push
mov
stos
mov
sub
movs
mov
add
rcr
(bad)
pop
and
jmp
movs
jg
inc
inc
add
loopne
adc
inc
clc
shufps
fbld
xchg
cli
fstp
cmp
xchg
and
int
mov
ret
(bad)
aas
jns
cld
jmp
loope
add
push
dec
ret
inc
push
push
inc
fbstp
pusha
add
fstp
jecxz
fsub
or
dec
div
cmps
mov
dec
mov
jne
mov
and
mov
and
adc
pop
inc
xchg
clc
xor
repz
mov
imul
adc
retf
lea
sbb
(bad)
jg
pushf
cmp
sbb
sbb
mov
clc
push
or
(bad)
or
mov
test
push
and
dec
popf
jne
mov
sbb
add
lds
fidiv
and
or
mov
pop
dec
sbb
inc
sahf
pop
ja
mov
cmp
jecxz
and
fwait
adc
enter
iret
lea
add
ret
and
lods
adc
sbb
xchg
inc
inc
pusha
sbb
addr16
jns
pop
xlat
cmps
jne
pop
push
mov
push
pop
pop
jmp
shl
xchg
cwde
loopne
retf
or
movs
push
data16
push
dec
inc
add
and
jl
mov
push
sub
xor
in
add
push
sbb
cmp
shl
in
(bad)
mov
out
mov
mov
jg
loop
out
outs
ss
lods
xor
inc
inc
push
adc
pop
adc
adc
add
dec
aas
and
xchg
sbb
sti
lods
cmps
into
fistp
stos
cmps
inc
pop
aaa
adc
jbe
jb
inc
jle
fs
pushf
push
dec
add
lods
loop
imul
and
fdiv
push
jmp
or
cmp
push
in
and
and
loopne
xchg
and
sbb
repz
jmp
pop
jne
mov
or
add
push
ss
push
add
fwait
mov
push
lods
jmp
push
jne
pop
push
movs
and
or
push
push
bound
pop
adc
or
ficom
add
add
inc
in
xor
cmps
stos
fs
test
push
movs
mov
sub
push
xchg
or
fist
std
pusha
mov
or
mov
inc
mov
sub
adc
pop
test
shl
cmps
jo
pop
adc
out
and
repz
out
mov
sti
(bad)
lahf
jae
and
dec
inc
not
or
(bad)
stos
mov
imul
fist
sub
push
push
jno
sub
popf
inc
xlat
sbb
dec
add
mov
test
fdivr
pop
mov
lea
mov
aas
mov
les
and
inc
repz
jge
jmp
mov
push
adc
inc
les
int3
call
sub
push
lods
stos
sub
or
xchg
std
nop
cdq
add
pop
sub
mov
movs
dec
dec
cmp
aas
bound
sub
xchg
aas
aaa
es
push
rol
xor
dec
add
movs
cmp
sub
sub
pop
sub
movs
sbb
outs
rol
inc
inc
xor
or
sub
cmp
cmp
mov
lock
outs
rol
or
push
arpl
jp
inc
loope
ds
sar
aad
cmp
mov
jl
mov
lock
jl
xchg
(bad)
out
std
iret
lods
out
out
jle
out
jle
mov
(bad)
ficom
pop
imul
sub
push
mov
leave
fistp
into
or
mov
or
pop
mov
sbb
push
adc
mov
ror
add
loop
scas
je
aam
es
add
or
loopne
movs
adc
mov
(bad)
aad
mov
nop
adc
shl
ds
adc
loope
sub
xor
jmp
xchg
or
and
pop
xchg
cmp
and
retf
sub
lods
adc
ins
nop
jmp
dec
sbb
xor
shl
adc
pop
stos
mov
fmul
imul
es
ins
xchg
nop
fs
lock
popa
pop
and
adc
es
jae
out
lds
cmp
shr
aam
sub
sub
push
je
leave
xchg
mov
out
movs
hlt
add
lock
(bad)
mov
jmp
test
mov
mov
dec
sub
cld
mov
in
mov
fisubr
inc
push
inc
out
rcr
les
push
sahf
xchg
jns
(bad)
sar
inc
inc
(bad)
or
xchg
adc
inc
or
push
aaa
dec
cmp
ins
cmp
cdq
fidiv
rcr
or
sub
fnsave
ret
xchg
out
push
adc
xor
or
cdq
mov
mov
jae
push
and
xchg
inc
movs
adc
mov
add
les
mov
add
cmps
mov
repz
mov
call
adc
inc
sub
push
lock
mov
mov
cmps
clc
xchg
shl
dec
inc
sub
push
xchg
cmp
into
mov
daa
pop
stos
push
imul
scas
call
lea
adc
inc
lds
fcom
jge
mov
dec
iret
sbb
mov
sti
jg
addr16
jg
(bad)
jle
jge
neg
(bad)
pop
test
push
sub
stos
repz
mov
sub
jne
xor
adc
mov
mov
push
dec
pop
fcomi
sub
in
xchg
iret
rcl
and
loop
sub
shl
or
lds
leave
sahf
xchg
leave
cmp
jmp
xchg
scas
iret
cmp
ds
lods
mov
fiadd
dec
mov
imul
mov
inc
adc
lods
mov
hlt
jecxz
and
jge
sub
mov
jo
loopne
dec
mov
imul
imul
cmp
push
push
jg
(bad)
push
dec
mov
or
inc
dec
es
jecxz
idiv
and
aam
aaa
xor
dec
mov
shr
mov
rcl
dec
dec
pop
xchg
in
std
dec
mov
out
les
idiv
mov
and
stc
dec
lock
enter
jecxz
ins
pop
and
cmp
sahf
ins
loop
in
cmp
(bad)
into
add
mov
aaa
dec
jg
idiv
out
fisttp
or
sbb
nop
std
movs
inc
retf
imul
call
cld
jbe
xor
out
mov
shl
mov
rol
mov
aam
fwait
icebp
pushf
adc
nop
push
cmp
push
cmp
test
or
movs
cmp
add
xchg
jb
test
jnp
(bad)
sbb
sub
mov
jns
loope
arpl
repnz
mov
loopne
call
inc
adc
popf
ret
test
rcr
pusha
mov
popa
mov
sub
inc
jae
add
mov
in
or
int3
lds
xor
in
or
push
pop
push
std
sub
pop
sub
movs
push
shl
test
and
jns
(bad)
and
sub
sbb
dec
mov
push
sbb
add
sbb
sbb
mov
je
enter
mov
(bad)
cwde
inc
mov
lahf
pop
push
popf
scas
icebp
nop
lods
aas
mov
dec
cmps
xor
icebp
imul
loop
sti
pop
jg
(bad)
std
mov
jg
out
lds
adc
aam
push
inc
dec
or
(bad)
aad
ficomp
call
inc
mov
push
sar
inc
shl
and
into
(bad)
pusha
xchg
sub
arpl
mov
scas
es
popf
repz
loop
adc
ds
call
popf
push
xor
std
lods
xchg
dec
test
sbb
mov
mul
mov
(bad)
int3
ret
popf
(bad)
iret
sbb
xor
jg
add
dec
jecxz
sar
inc
repnz
cmp
sbb
iret
mov
fdiv
mov
sbb
or
pop
sbb
add
movs
xchg
iret
inc
repnz
(bad)
ret
push
mov
and
repnz
cmp
jmp
and
xor
xchg
mul
movs
adc
movs
pop
repz
out
(bad)
cmp
add
lock
add
les
cwde
xor
test
mov
xor
fistp
mov
mov
data16
fnstcw
(bad)
out
mov
(bad)
out
or
not
inc
mov
cwde
cmc
push
pop
mov
jne
mov
xchg
or
scas
mov
mov
aad
xor
das
mov
fadd
sub
push
lds
or
sub
jmp
les
xchg
jno
xor
mov
mov
into
loope
dec
icebp
inc
fwait
cmp
add
jmp
mov
jae
clc
cmp
and
cmc
xchg
xlat
sub
popf
in
ins
adc
rol
cmps
gs
jae
retf
push
je
dec
push
(bad)
and
xchg
jne
addr16
sahf
dec
xchg
push
dec
test
dec
cmps
pop
push
adc
pop
cmp
sahf
cwde
mov
mov
or
add
in
pop
pop
ins
jge
xor
jmp
arpl
iret
add
scas
jp
call
fild
fdiv
test
pop
cwde
pop
jnp
repz
stos
imul
into
and
mov
aaa
fucomip
jbe
dec
idiv
inc
sbb
push
fldcw
dec
sub
inc
out
jp
mov
jns
add
fimul
mov
ret
sbb
ret
retf
pusha
ja
pushf
adc
lods
mov
dec
mov
add
sbb
sub
retf
pop
push
xchg
retf
jg
repnz
xchg
pop
push
jae
int3
mov
or
pop
and
dec
mov
sub
pop
xchg
jno
push
add
nop
nop
jno
movs
shl
push
dec
fadd
test
mov
js
cmp
jns
adc
data16
or
outs
jno
dec
and
or
inc
inc
add
inc
imul
bound
and
dec
sti
cmp
push
mov
ds
xchg
mov
mov
dec
push
mov
aad
fisttp
imul
(bad)
popa
sbb
rcr
pop
or
arpl
call
pusha
mov
mov
push
call
cld
adc
(bad)
xchg
adc
dec
xor
imul
mov
push
stos
sti
mov
out
retf
mov
test
jp
test
xchg
lods
(bad)
leave
stos
mov
push
push
sbb
test
and
out
jno
outs
sbb
out
sbb
inc
mov
cmps
mov
ja
sahf
cdq
stos
pop
dec
adc
les
call
retf
jle
and
dec
inc
mov
pop
cmp
push
add
pop
inc
dec
and
xor
inc
dec
cwde
ja
inc
inc
sub
push
stos
stos
mov
dec
std
inc
ret
pop
lock
ins
into
jb
in
mov
lods
and
pop
add
out
sbb
xchg
sbb
and
cmps
sbb
mov
(bad)
mov
inc
movs
xchg
lods
addr16
xor
pop
dec
mov
enter
pop
jg
in
push
cld
jnp
mov
dec
pushf
mov
mov
(bad)
sbb
leave
pop
gs
jb
dec
aad
icebp
adc
pop
mov
cld
mov
aad
out
out
and
movs
sbb
pop
jg
(bad)
out
ja
jmp
jnp
fild
or
stos
lds
ss
clc
pop
and
add
stos
popf
mov
pop
push
cwde
aad
stos
cwde
cmp
aad
jecxz
mov
mov
test
cld
push
test
jnp
and
in
inc
mov
ja
rol
(bad)
dec
cwde
and
add
out
jne
jmp
add
and
or
rcl
push
dec
or
xchg
cmp
xor
or
ret
mov
mov
xchg
mov
mov
js
dec
jb
pop
sbb
cmp
xchg
mov
es
loopne
es
or
fninit
dec
rol
xchg
dec
inc
push
push
inc
out
addr16
mov
or
push
jecxz
push
(bad)
icebp
dec
in
jp
das
add
pop
push
inc
push
xchg
loopne
adc
cmps
stos
add
popf
jnp
pop
and
mov
add
rol
cmp
stc
retf
outs
cmp
jp
cmp
cmps
adc
outs
sub
ja
imul
std
pop
stos
mov
add
jns
pop
lds
mov
and
je
mul
arpl
mov
sbb
xchg
stos
shl
dec
inc
movs
mov
inc
push
ja
rcl
fs
sub
or
or
add
cwde
sbb
fadd
xchg
call
dec
add
fwait
mov
cmp
pop
jle
push
cmp
xor
xchg
mov
test
inc
mov
cmps
mov
ret
and
push
es
or
xor
fiadd
sahf
cdq
jno
adc
push
add
xor
mov
xor
sub
sbb
dec
inc
sub
push
lods
stos
fcomp
pop
push
adc
loopne
(bad)
fisub
xchg
imul
cmp
test
sbb
aam
js
sbb
les
mov
stc
int3
test
fwait
add
pop
dec
int
repnz
(bad)
aas
jmp
jmp
mul
sahf
aad
mov
ins
pop
jle
int
stos
add
(bad)
mov
in
int
repz
rcr
mov
xchg
sub
in
mov
pop
pop
jecxz
in
sub
cmp
out
and
scas
test
xchg
adc
and
in
mov
push
out
push
mov
jae
mov
ret
js
hlt
fsubr
leave
push
das
int3
adc
rol
mov
push
nop
aaa
retf
popa
lods
xor
dec
cdq
test
mov
push
add
jne
jmp
or
pop
ror
or
fldenv
cdq
inc
jno
sub
imul
loopne
xchg
in
mov
adc
retf
push
sub
jb
repz
fs
cmp
jb
lahf
mov
into
mov
push
mov
push
adc
pusha
push
xchg
push
jle
pop
scas
mov
cmp
dec
sub
sbb
bound
dec
sahf
in
or
(bad)
or
rcr
stc
adc
loop
mov
xor
in
inc
(bad)
jle
cli
mov
pop
push
loopne
mov
mov
push
ds
fdivrp
out
(bad)
int
(bad)
fdivrp
pop
xlat
jne
dec
in
into
mov
jb
adc
out
test
cmps
add
stos
bound
cmp
icebp
jmp
adc
nop
imul
aaa
cmp
pop
repz
xchg
jns
adc
jnp
push
dec
jmp
rcr
rol
or
add
pop
jns
aam
mov
(bad)
ror
or
adc
shl
and
int3
add
mov
repz
cmp
(bad)
fwait
inc
or
sub
or
cld
and
sub
cli
jl
xor
inc
and
adc
mov
pop
xor
lock
push
adc
jle
imul
xchg
cmps
(bad)
add
cmp
xchg
inc
jecxz
out
sub
xchg
mov
imul
xchg
sbb
xchg
ja
or
push
in
mov
fcomi
nop
daa
clc
shl
push
sub
push
imul
sbb
loope
fld
(bad)
jle
pop
fwait
ins
test
jae
dec
jle
push
add
into
stc
pop
lods
xlat
pusha
jo
aam
adc
xor
mov
mov
sub
cli
sahf
mov
call
push
inc
xchg
xchg
sar
add
jmp
rol
push
mov
cmp
adc
xchg
or
jns
clc
adc
hlt
mov
or
add
dec
gs
into
inc
rcl
xor
arpl
out
test
xchg
push
(bad)
stos
mov
jb
push
adc
adc
das
loopne
pop
add
(bad)
jl
or
dec
neg
test
inc
lock
sbb
cmp
cmps
(bad)
nop
out
and
add
scas
movs
test
jmp
mov
out
ins
push
out
cmps
mov
push
inc
xchg
fwait
jns
inc
or
repnz
hlt
and
cdq
cwde
das
js
xchg
lock
in
mov
cmp
rol
xor
xchg
loop
lahf
or
aas
cmp
xchg
jg
gs
outs
push
dec
push
lea
add
mov
rcl
bound
out
out
imul
(bad)
fdivr
(bad)
scas
sbb
into
push
popa
or
jge
adc
mov
pushf
dec
push
xor
pop
pop
sub
aaa
fwait
lds
and
gs
jb
pop
in
sbb
rcr
addr16
sbb
popf
cmp
dec
ins
repz
xor
cmp
test
xchg
and
sub
sub
push
jmp
mov
test
adc
add
jo
fdivr
pushf
test
pop
loope
adc
js
mov
in
mov
dec
mov
and
mov
mov
adc
cmp
test
fcomp
cmps
xor
or
dec
sub
xor
push
or
call
popa
and
or
outs
pushf
or
fwait
pop
(bad)
(bad)
adc
mov
(bad)
pop
bound
lock
sbb
pop
sbb
out
and
fiadd
xor
int3
fnstcw
loope
daa
iret
addr16
cli
sub
fcmovnu
outs
scas
out
xlat
pop
in
xchg
xor
cwde
mov
mov
push
enter
inc
mov
jl
xlat
ins
sbb
adc
dec
sub
push
mov
imul
and
cmps
mov
push
retf
and
add
mov
ss
dec
push
and
pop
sar
ins
repnz
pop
pop
mov
ficom
push
mov
sahf
mov
test
into
daa
fs
cmp
push
loop
ins
push
ss
mov
xchg
push
sar
mov
jo
retf
lahf
idiv
or
mov
ss
cmc
xor
test
sahf
mov
movs
bound
lahf
xlat
and
ins
rcr
jecxz
push
pop
mov
lock
mov
pop
ror
jae
or
or
jnp
cmp
fwait
push
add
xchg
cli
xchg
scas
push
in
leave
js
fadd
mov
enter
fsubrp
mov
inc
mov
jecxz
inc
xor
stos
sti
jmp
scas
fstp
(bad)
in
fistp
out
fisubr
or
pop
inc
mov
sbb
(bad)
mov
lea
mov
mov
inc
into
out
fwait
cmp
pop
aad
jb
mov
jno
dec
sub
sbb
sub
aaa
pop
xchg
ss
inc
iret
fwait
outs
mov
in
adc
mov
sbb
push
add
rcl
rol
push
adc
shl
jecxz
sar
and
cld
ficom
repz
in
and
xor
pop
mov
sbb
in
mov
(bad)
icebp
add
outs
dec
push
or
fmul
cmp
jl
and
add
push
rol
adc
ja
aad
arpl
xchg
mov
inc
iret
push
xor
shl
xor
or
xchg
loopne
fcom
aam
lods
or
setne
test
daa
ds
inc
(bad)
hlt
in
imul
clc
mov
hlt
pop
mov
clc
adc
pop
xchg
cmp
aam
imul
pop
imul
xor
pop
arpl
retf
mov
mov
cli
(bad)
mov
int
hlt
pop
call
lods
(bad)
lock
inc
mov
add
sbb
inc
addr16
pop
outs
loop
dec
inc
ds
cmp
push
push
int
push
pop
jns
jb
mov
push
push
scas
shl
mov
ss
push
dec
mov
mov
push
ret
movs
dec
sahf
add
xchg
pop
adc
push
leave
xlat
loopne
mov
fsubp
dec
pop
bound
movs
and
inc
test
jmp
dec
ds
and
mov
jle
ins
cmps
pop
jae
int
sbb
lea
mov
or
mov
sbb
sbb
and
push
add
and
loop
mov
enter
sbb
loopne
pop
xor
ss
retf
jo
sub
mov
mov
mov
or
and
cmp
ja
lods
popf
das
push
out
addr16
cmc
aam
data16
pop
pop
jmp
popf
sbb
je
sti
stos
dec
cdq
rcl
dec
mov
sbb
dec
xchg
xor
cmp
jne
jecxz
jg
(bad)
cmp
clc
jmp
dec
jne
fsubr
jbe
inc
fnsave
and
jl
sbb
sahf
sbb
lds
movs
push
push
lods
sub
dec
inc
pop
rol
sbb
dec
xor
cmp
loope
add
pushf
jecxz
fdiv
dec
repz
and
mov
or
ret
add
mov
inc
xor
ds
adc
push
dec
out
adc
mov
xor
(bad)
or
aad
add
fs
or
out
mov
out
movs
in
sbb
or
sti
xor
push
pop
enter
jne
jp
add
popf
cmps
push
test
xor
push
push
icebp
cmp
xor
cmp
dec
inc
lock
out
sti
retf
inc
cmps
pop
xor
dec
sub
repnz
scas
inc
outs
add
and
outs
jb
in
mov
adc
jb
(bad)
xlat
mov
mov
icebp
outs
dec
aas
scas
pop
pop
mov
fistp
push
sti
cmc
mov
je
mov
aaa
stos
xchg
lds
mov
xchg
xor
arpl
dec
jmp
and
(bad)
shl
fcmovnu
popa
aaa
adc
outs
enter
or
ss
out
(bad)
push
fs
fcmovnb
leave
out
iret
jg
dec
sbb
lods
inc
jnp
xlat
and
mov
enter
nop
mov
cmps
jb
and
enter
jle
or
ficom
shl
push
and
push
popf
(bad)
or
lea
sbb
sbb
cmp
mov
xchg
push
mov
mov
jo
fcom
push
xchg
xchg
nop
rol
ins
sub
sub
lahf
fadd
sub
or
jp
and
mov
out
jbe
xor
jg
aad
pop
es
add
cli
push
xchg
fdiv
jecxz
add
jecxz
or
int
std
shl
loop
jmp
lea
dec
(bad)
cmp
aas
test
cli
mov
jne
mov
aad
cli
pop
(bad)
mov
movs
mov
mov
movs
gs
xor
addr16
pushf
inc
nop
and
xor
pushf
(bad)
call
mov
sub
push
leave
sub
inc
fnstenv
adc
arpl
sub
pop
movs
lea
xor
addr16
xchg
scas
nop
js
shl
adc
loope
call
mov
jl
and
mov
sub
push
es
popf
push
push
sub
push
xchg
dec
int
div
xchg
cli
ins
(bad)
movs
mov
icebp
or
xor
cld
jecxz
sub
pop
fisttp
or
popf
xor
adc
or
or
pop
mov
popa
or
pushf
test
imul
cmp
jp
fmul
cmp
test
adc
rdmsr
add
fiadd
daa
and
test
jno
call
inc
movs
mov
out
(bad)
fcmovb
lds
jmp
aad
xlat
mov
jle
les
sbb
add
outs
in
ins
mov
(bad)
fsub
sbb
mov
mov
push
mov
push
loopne
push
push
inc
jg
xor
adc
sbb
add
push
xor
out
mov
inc
add
repz
dec
loope
cmp
and
xchg
int
outs
scas
adc
dec
pop
jns
test
ins
out
call
and
or
jle
and
add
enter
mov
mov
inc
mov
out
stc
sbb
fisubr
push
in
or
(bad)
push
int3
sbb
sbb
sub
popf
mov
cmp
sub
popf
lea
add
xor
loope
xlat
cmps
adc
test
call
jne
lock
and
pushf
mov
mov
sub
in
ffreep
hlt
fisubr
sbb
call
sbb
in
enter
jbe
ds
movs
inc
cmp
mov
pop
and
or
das
xlat
ja
outs
fstp
fdivrp
(bad)
push
cli
(bad)
shl
cmp
adc
ror
push
dec
cwde
inc
mov
icebp
add
add
bound
fwait
push
ror
push
push
sti
leave
movs
inc
loopne
xchg
push
adc
inc
push
nop
pop
xor
xchg
lahf
daa
dec
sub
sbb
(bad)
and
imul
adc
inc
xor
push
pushf
aaa
add
or
aam
add
mov
sbb
cdq
and
dec
fiadd
inc
or
aaa
add
mov
adc
dec
pop
dec
or
adc
cmc
jbe
add
add
mov
and
xor
lea
arpl
xchg
jmp
(bad)
and
ds
mov
(bad)
mov
push
inc
dec
(bad)
cmps
sahf
loope
ins
mov
xor
add
dec
movs
or
shl
popf
xor
cmp
cld
stos
mov
into
test
es
std
jecxz
jmp
mov
(bad)
repz
xor
(bad)
les
lock
lea
mov
(bad)
jle
cli
jmp
cmovae
sbb
bound
sub
adc
aam
mov
sbb
cmp
push
xchg
dec
pusha
jo
(bad)
daa
test
(bad)
call
push
adc
adc
loop
mov
adc
inc
adc
jl
or
pop
test
or
push
pop
dec
and
jle
rcr
sub
add
or
mov
pop
movs
mov
gs
add
loop
pop
out
add
imul
mov
mov
test
(bad)
call
add
jmp
int
sub
inc
es
sub
data16
pop
lds
pop
pop
dec
test
stc
or
push
mov
inc
xchg
mov
push
fwait
mov
jmp
neg
js
ja
cmp
mov
push
mov
rcl
sbb
jnp
std
sbb
sbb
cli
arpl
pop
aaa
sub
xor
pop
pop
cmp
test
xlat
aaa
mov
fidivr
add
mov
fidiv
pop
sbb
push
cmp
xchg
mov
mov
pop
pop
js
in
data16
arpl
call
adc
jl
push
inc
ds
ret
or
popa
add
ss
and
les
adc
push
popf
add
mov
sar
mov
xor
shr
fiadd
cs
or
loopne
popa
push
fdivr
rcr
leave
cmps
mov
jnp
and
pop
or
rcr
jb
sar
sbb
mov
mov
cmp
test
lds
das
out
mov
pop
cwde
rol
aam
xor
je
sub
into
mov
cmp
xor
out
(bad)
sbb
mov
mov
fcom
jne
pop
jns
mov
ss
lea
out
or
add
ret
cli
iret
(bad)
aad
out
dec
bound
enter
and
or
jge
lahf
xchg
scas
lds
adc
into
loope
mov
jmp
cmp
cli
in
sbb
mov
leave
pop
add
leave
pop
push
cmp
mov
sub
lahf
sub
xchg
repz
sar
pop
sbb
cmp
dec
test
adc
cmp
std
push
stc
pop
push
xchg
jl
cwde
mov
mov
in
pop
mov
add
push
add
jo
(bad)
pop
push
repz
nop
xor
push
leave
std
xchg
bound
inc
sahf
mov
call
in
out
ja
sub
xor
mov
leave
xchg
push
cmps
movs
inc
movs
test
sub
mov
mov
mov
(bad)
xchg
add
sbb
or
xor
cmc
add
dec
push
inc
xlat
push
stos
push
test
pop
pop
js
cwde
xchg
push
inc
dec
and
popf
aaa
fdivrp
into
add
xchg
sbb
cld
in
and
out
dec
out
push
adc
out
popf
push
ins
mov
shl
dec
(bad)
add
cmps
shl
jmp
mov
out
hlt
jge
xor
mov
cdq
add
icebp
mov
shl
jle
shr
ds
and
lods
jae
inc
dec
sub
push
xor
(bad)
dec
mul
xchg
ins
(bad)
jno
sub
push
neg
pusha
dec
xchg
cld
fild
cdq
and
inc
es
adc
into
jae
jl
(bad)
test
push
inc
sub
add
xor
ss
pop
or
push
mov
aad
enter
jb
fadd
and
aad
adc
xchg
add
je
xchg
adc
mov
sub
mov
adc
aas
mov
test
outs
xor
call
mov
push
stos
push
ins
ds
repnz
add
lds
in
dec
xchg
rcl
hlt
mov
outs
mov
or
mov
into
ins
lods
mov
js
rcr
hlt
jbe
shr
cmc
lods
call
test
pushf
iret
repz
mov
dec
sub
fwait
int
mov
jmp
fild
scas
lahf
aas
std
rcr
mov
xor
adc
jl
jbe
retf
lock
shl
jae
push
sbb
(bad)
in
scas
je
and
push
shl
sub
sbb
rol
sub
(bad)
not
mov
dec
call
(bad)
icebp
xchg
in
retf
nop
inc
inc
cmp
mov
icebp
mov
xchg
lock
movs
popa
test
inc
cmp
mov
pusha
scas
add
mov
loopne
hlt
dec
gs
adc
sub
jae
jo
add
or
in
stc
push
dec
lock
cdq
sbb
mov
mov
inc
es
adc
jo
outs
and
xchg
scas
push
stos
mov
mov
cmp
cmp
retf
mov
sar
xchg
inc
cmp
into
data16
add
pop
or
mov
adc
mov
pop
imul
(bad)
or
mov
mov
imul
dec
mov
std
dec
cdq
loop
xor
jg
and
jae
mov
(bad)
iret
sub
sbb
nop
pop
vpsubsw
(bad)
sar
hlt
jg
stc
bound
push
(bad)
jbe
dec
mov
scas
jle
imul
div
xchg
xchg
add
dec
cld
jmp
mov
aaa
lock
and
pop
rol
ror
call
fisubr
arpl
dec
jno
sub
rol
arpl
inc
addr16
shl
sbb
(bad)
and
adc
mov
xchg
and
jge
imul
xchg
sbb
loopne
mov
(bad)
pop
cmc
test
and
and
clc
adc
jecxz
aaa
push
jne
sub
pop
jb
nop
xor
mov
inc
jb
jo
(bad)
(bad)
lock
(bad)
cmp
mov
cdq
imul
stos
sbb
push
std
add
imul
les
and
sbb
in
jae
fwait
push
mov
push
pushf
pushf
sahf
mov
fadd
into
cmp
xor
push
cmp
adc
push
mov
ins
fcomip
aaa
jge
scas
(bad)
mov
fisttp
cli
mov
cmp
add
out
push
add
dec
neg
(bad)
xor
shr
int3
test
cmp
xchg
pop
addr16
jns
(bad)
(bad)
(bad)
push
ss
das
or
cmps
mov
mov
pushf
dec
jp
mov
jae
aam
push
leave
jns
push
shl
mov
pop
dec
push
das
movs
mov
test
fnstenv
pushf
mov
movs
mov
mov
mov
es
les
loop
xchg
outs
ror
cld
adc
cmp
sub
dec
bound
test
(bad)
out
adc
xlat
ss
(bad)
mov
test
pop
sbb
fnstsw
add
pop
inc
lahf
dec
sub
lods
xor
(bad)
cld
jecxz
in
push
(bad)
sub
xlat
addr16
sar
push
and
sub
retf
push
sbb
push
out
add
jg
push
add
ficom
pop
mov
adc
dec
push
pop
mov
fidiv
add
add
cmc
icebp
outs
add
push
retf
mov
cld
or
fstp
push
sbb
cmps
ins
xor
popa
in
cmp
xlat
call
loopne
pusha
ins
fmul
add
xor
cmps
repz
outs
jb
lahf
push
inc
jns
pop
(bad)
(bad)
in
in
int
fisubr
gs
out
enter
popf
xchg
mov
pusha
addr16
das
gs
xchg
pop
or
jnp
push
ins
mov
xchg
retf
pop
repnz
pop
outs
push
mov
outs
mov
sub
xlat
sti
inc
rcl
call
fisttp
sbb
(bad)
xor
mov
xor
jns
push
pop
or
mov
cmovns
inc
mov
das
imul
push
sbb
add
jae
shl
nop
mov
inc
add
idiv
loopne
test
jne
adc
fild
retf
mov
lods
push
push
jne
out
inc
ss
xchg
mov
sbb
pop
xor
inc
sti
jno
push
fst
ret
or
test
mov
mov
cmp
mov
(bad)
xchg
cmps
cmps
adc
loopne
aad
loopne
bound
add
cmps
mov
jecxz
pushf
jmp
xorps
int
jmp
(bad)
and
mov
fist
push
mov
mov
and
pop
rol
lock
or
pusha
ret
xor
in
(bad)
sub
das
xchg
std
jbe
cmc
fwait
stos
pop
mov
imul
adc
add
mov
or
adc
and
(bad)
ss
push
adc
out
inc
push
mov
pushf
push
(bad)
cld
stc
dec
and
jp
clc
pop
fstp
adc
adc
sub
dec
mov
adc
dec
adc
adc
dec
jo
or
aam
or
into
pop
push
sbb
cmp
sub
leave
mov
cbw
xor
sbb
jecxz
xchg
int
out
sub
shr
dec
mov
out
ds
or
mov
shl
sub
sub
push
lods
and
dec
out
mov
stos
push
push
dec
xchg
(bad)
add
test
adc
xchg
fldenv
sbb
inc
push
push
push
xor
ins
ss
mov
movs
stos
cld
cld
inc
mov
and
xor
sbb
jo
jmp
cmc
aad
stos
pop
(bad)
sub
movs
dec
push
retf
pusha
out
arpl
mov
cmp
test
adc
neg
mov
cmp
or
loopne
or
pop
mov
cli
movd
jle
mov
mov
pop
cmp
int
cmp
out
fcmovu
add
cmp
inc
popa
fwait
shl
push
lds
jne
fistp
push
sbb
xchg
xchg
dec
cmp
adc
test
jg
mov
icebp
pop
bound
sbb
call
jns
cmp
out
ror
or
adc
xor
xchg
or
and
mov
pop
jo
push
and
sub
cmovg
scas
xchg
jmp
fs
mov
sti
loope
add
rcr
movs
cli
cmp
test
jg
mov
sub
xor
test
(bad)
mov
pushf
xor
push
lods
sub
rcr
pop
rcl
fiadd
or
and
add
or
cs
out
mov
add
push
pop
movs
and
lock
xor
(bad)
cmp
ins
mov
cmp
sbb
xor
(bad)
fild
add
fwait
cld
std
and
fsubr
and
int3
mov
out
sbb
clc
cmp
cmp
in
xor
aaa
stos
aaa
scas
lahf
mov
lahf
aaa
inc
dec
adc
test
retf
ss
add
into
push
mov
call
pop
push
inc
jmp
stc
mov
xor
jmp
pop
pop
add
cmps
adc
leave
push
or
or
jae
push
in
cmp
add
cmp
xchg
inc
std
inc
hlt
or
dec
shl
mov
sbb
sahf
(bad)
test
test
mov
enter
outs
xchg
test
loop
lods
xor
or
mov
and
push
ss
cmp
lods
jb
sbb
mov
std
mov
shr
add
in
stos
sbb
push
cli
mov
xor
push
loope
xor
add
fmul
stos
inc
cmp
add
ds
cmp
call
and
sub
dec
pop
aaa
add
xchg
mov
into
cmp
mov
sub
cmp
scas
out
es
mov
(bad)
push
jae
arpl
sub
mov
ficom
jbe
arpl
cli
mov
cmp
xchg
(bad)
xchg
push
lahf
jl
xchg
cld
(bad)
outs
lods
outs
out
mov
rcl
enter
adc
fisubr
cli
cmp
sbb
xor
pop
sub
dec
dec
adc
bound
and
das
in
jae
enter
add
xor
sbb
push
or
cs
imul
mov
bound
inc
sub
ror
mov
rcr
xor
jns
cmp
(bad)
bound
loop
lea
ret
cmc
jmp
adc
or
or
or
pop
inc
leave
ss
int
or
mov
pop
xchg
cmp
shl
imul
xlat
add
fistp
movs
xor
dec
mov
jl
pop
jmp
je
jnp
sub
jo
push
push
pusha
ss
jp
shl
mov
jp
push
add
adc
pop
addr16
int3
out
inc
bound
push
mov
ss
xchg
and
pop
mov
fucomi
out
jbe
pop
jg
xchg
jp
ficom
pop
xchg
retf
adc
das
pusha
inc
jmp
mov
aas
(bad)
lock
sub
xchg
xlat
cwde
or
jne
es
nop
mov
adc
(bad)
push
jg
mov
mov
hlt
rol
hlt
loope
mov
lods
pop
or
mov
cli
push
jo
jne
push
arpl
sbb
xchg
pop
test
inc
aad
rcr
jno
add
retf
inc
les
dec
inc
or
ins
cmp
mov
xor
dec
mov
cs
cdq
sar
je
xor
imul
popa
rcr
push
adc
out
repz
or
inc
jmp
jb
xor
jp
adc
lea
sbb
inc
data16
mov
enter
ret
pop
imul
push
mul
(bad)
ds
cmps
fs
inc
pop
xor
sub
pop
pop
push
rcl
rol
pushf
ret
ror
xor
pop
xchg
adc
ss
popa
cmp
sub
cdq
movs
push
mov
adc
shl
adc
mov
mov
repnz
jg
sub
leave
pop
xor
pop
adc
fwait
push
xchg
push
lock
or
nop
inc
in
inc
sti
xchg
and
mov
pop
icebp
test
inc
shl
push
pop
std
jecxz
outs
pop
pop
jge
mov
xchg
jne
add
and
int
dec
add
inc
sbb
xor
push
push
push
pop
and
shr
jl
fmul
add
scas
mov
xor
adc
push
push
mov
hlt
xor
pop
xor
mov
add
push
in
xchg
xor
cmp
pop
inc
clc
xor
xor
ja
mov
call
push
les
iret
add
sub
fsubr
leave
aas
push
mov
xchg
mov
je
pop
jecxz
gs
lds
mov
add
mov
(bad)
push
test
lods
vpunpcklqdq
adc
push
add
aam
and
rcr
shl
add
pop
pop
sub
xchg
push
dec
xor
repz
(bad)
das
jo
jns
test
adc
fs
pushf
mov
mov
mov
fucomp
jmp
(bad)
mov
pop
sbb
out
inc
pop
xor
pop
out
sbb
add
mov
mov
jp
or
sub
jge
jmp
pop
pusha
push
rcr
(bad)
into
out
loopne
(bad)
fstp
xchg
inc
inc
ins
stc
mov
push
xchg
fist
inc
pop
test
jns
call
retf
cwde
push
icebp
xchg
cmp
int3
add
mov
aad
mov
(bad)
mov
mov
arpl
inc
les
pop
jmp
fst
dec
add
xor
int
out
adc
jno
mov
fst
shr
mov
sbb
inc
test
adc
push
adc
retf
jecxz
and
push
ret
and
mov
mov
out
jb
cli
cwde
add
push
push
lock
and
call
inc
xchg
rcr
repnz
push
sbb
jns
in
call
jbe
or
dec
push
jne
xchg
rcl
pop
jae
pusha
loope
xor
xor
ffree
into
pop
out
fistp
jecxz
xchg
lods
push
jmp
ins
sub
ds
fld
int3
shr
add
imul
xchg
enter
mov
fistp
push
stc
jl
inc
jnp
stos
push
xor
das
adc
jl
div
cli
outs
std
mov
mov
stos
pop
jmp
(bad)
mov
sahf
repnz
add
xor
pop
scas
ja
jmp
xchg
xor
call
or
xor
or
push
add
sbb
xchg
sub
pop
xor
stos
stc
pop
jg
test
jmp
jbe
bound
sub
arpl
call
jp
ret
xchg
int
ret
sar
imul
adc
inc
test
sti
jmp
imul
xor
dec
push
test
push
pop
jo
mov
(bad)
sbb
xor
dec
test
mov
jecxz
xchg
mov
pop
popa
(bad)
mov
aad
mov
or
and
mov
loope
and
test
mov
sbb
inc
loopne
movs
stc
cmps
xor
or
jb
vmovapd
ficom
fidivr
xchg
mov
(bad)
mov
adc
pop
lods
sbb
std
clc
out
out
out
pop
xchg
xchg
and
idiv
lock
mov
add
inc
test
mov
bound
jo
inc
popa
shl
xchg
dec
inc
add
jmp
sahf
jle
mov
repz
add
mov
dec
adc
loop
mov
or
ror
mov
add
std
mov
es
add
(bad)
mov
dec
adc
cmp
dec
inc
pop
inc
mov
or
cmp
jmp
(bad)
cmp
les
adc
adc
xor
or
dec
test
call
scas
outs
add
add
(bad)
int3
movs
aam
rcr
not
and
cmps
sbb
neg
fidivr
addr16
arpl
sub
call
sub
xor
push
stos
inc
push
mov
jmp
mov
and
push
mov
xor
sbb
xchg
or
push
push
xchg
test
(bad)
in
jbe
jmp
dec
jmp
adc
add
jne
pop
mov
sbb
add
push
jmp
or
jmp
jg
or
std
and
js
jge
sub
stc
cmp
xchg
dec
dec
cld
icebp
aas
sti
pop
out
jl
ret
lahf
cld
out
int
ja
fdivrp
lods
sbb
push
in
adc
ss
clc
mov
lds
loope
ins
inc
js
sbb
or
jmp
and
les
push
in
add
(bad)
scas
fistp
cmp
sti
icebp
add
ins
inc
jb
xor
cmp
ds
jecxz
dec
add
adc
sbb
pop
mov
fiadd
xchg
mov
mov
call
or
ss
int
sub
dec
and
loopne
popa
lea
(bad)
int3
sub
mov
jg
push
push
xor
pushf
int3
pop
push
add
outs
call
xor
fcmovnu
push
fst
ret
fstp
dec
sub
mov
push
pushf
lahf
aas
ret
cmp
xor
mov
enter
shl
sub
sub
frstor
in
mov
repz
outs
mov
dec
loope
in
pop
jnp
in
dec
imul
mov
jg
and
mov
sbb
dec
fdivr
std
test
icebp
ja
shl
inc
sar
cmp
hlt
mov
stc
shr
(bad)
das
cmp
hlt
sbb
pop
cmp
lds
sar
or
bound
gs
cmp
adc
imul
(bad)
mov
jbe
imul
push
lock
icebp
jb
and
cmp
out
pop
pop
jbe
cmp
pop
ror
inc
out
xchg
lea
mov
sar
xor
lahf
pop
mov
ins
push
aad
sub
dec
xor
cmp
and
jb
cmp
cmps
add
adc
sti
adc
or
push
mov
movs
div
rcr
dec
jmp
jae
in
std
push
fidiv
shl
jno
mov
push
inc
and
mov
jae
xor
pop
(bad)
jle
shl
cmp
or
inc
aam
sub
sar
je
and
sub
mov
push
and
jno
movs
sub
and
pop
add
pop
xlat
jne
cmps
pop
outs
pop
stos
sbb
(bad)
jmp
or
adc
cmps
xchg
lds
adc
cmp
sti
call
adc
sti
xchg
jg
scas
fdivrp
in
(bad)
mov
mov
pop
push
lods
bound
ficom
push
jne
sbb
loop
push
xchg
inc
jge
xor
dec
out
xchg
pop
nop
inc
sbb
adc
and
mov
shl
mov
fidivr
in
jle
inc
or
inc
mov
add
out
inc
and
lds
xchg
movups
dec
dec
fiadd
mov
jnp
mov
sbb
add
rcl
adc
aas
out
(bad)
xchg
jp
mov
and
push
loop
fdivr
arpl
pop
sbb
cdq
inc
fiadd
and
retf
data16
movs
lock
stc
pop
xchg
mov
sbb
daa
or
loop
inc
inc
push
adc
cmp
add
(bad)
or
fcomi
sbb
in
push
inc
and
pusha
ds
jecxz
jecxz
mov
sub
mov
adc
mov
outs
rcr
jmp
push
xchg
xor
add
push
jmp
std
int
mov
mov
jecxz
in
aaa
add
in
imul
xor
(bad)
aas
ss
repz
cmp
repz
xchg
sbb
sub
les
jmp
fld
add
xchg
addr16
ds
daa
loop
dec
pop
out
stc
jmp
sbb
xor
ja
cmps
arpl
aaa
nop
add
(bad)
(bad)
stc
int3
and
or
loop
xor
out
add
pop
popf
jl
sbb
(bad)
or
xor
mov
in
dec
fs
and
push
vmovlpd
cdq
xchg
lock
push
add
cld
jb
inc
ss
xchg
test
pop
dec
sbb
out
cmp
rol
fidivr
fadd
inc
ret
dec
imul
cmp
adc
pop
mov
adc
pop
ret
stos
adc
and
push
fnsave
loop
adc
mov
mov
add
aam
(bad)
xchg
mov
out
shl
add
mov
pop
dec
movs
out
pop
jg
cmc
dec
daa
rcl
push
popa
add
aas
hlt
mov
add
fs
fistp
jns
(bad)
fwait
scas
mov
retf
xchg
adc
mov
ja
jnp
in
int
repz
jnp
mov
repnz
movs
xchg
or
mov
adc
inc
add
xor
mov
mov
or
jb
dec
adc
or
add
push
xchg
pushf
cs
xor
fnstsw
(bad)
stc
repz
fst
dec
pop
mov
jbe
out
xchg
pop
jae
scas
dec
pop
push
push
inc
cmc
push
dec
or
test
and
add
scas
nop
loop
mov
mov
add
and
mov
arpl
or
xor
or
sbb
cmps
xchg
dec
push
leave
mov
pop
cmp
movs
bound
cwde
mov
sub
xor
sub
imul
xor
adc
add
mov
adc
push
jno
mov
stos
xor
in
daa
cmp
fsubr
push
and
aas
cmps
xchg
add
ins
enter
mov
(bad)
jg
mov
sbb
in
xchg
cmp
addr16
dec
mov
clc
loope
xchg
jmp
ins
test
jmp
arpl
pop
das
add
lods
push
clc
vpmullw
push
imul
lahf
mov
mov
cmps
lahf
(bad)
mov
adc
inc
inc
cmp
aaa
pusha
loopne
in
mov
adc
jecxz
mov
sub
mov
cmp
(bad)
mov
mov
mov
and
aas
jp
pushw
mov
xlat
(bad)
int
cmps
push
dec
inc
mov
adc
test
loopne
adc
and
test
scas
fsubr
or
mov
mov
phaddw
repnz
scas
adc
in
and
jge
pushf
adc
movs
and
out
mov
jae
dec
outs
lods
rcr
neg
and
sub
sbb
jae
adc
mov
imul
aas
dec
aas
mov
push
ss
push
push
stos
mov
adc
jl
stc
bound
(bad)
call
xchg
adc
inc
mov
jmp
xor
pop
shl
(bad)
(bad)
scas
lods
mov
(bad)
cwde
mov
or
adc
add
cmp
xor
cmps
push
sbb
mov
outs
stc
stc
les
ds
(bad)
rcl
test
or
aad
icebp
dec
(bad)
xchg
outs
pop
pop
dec
jmp
and
push
push
pop
jecxz
sub
nop
repnz
out
popa
sbb
lahf
cmp
push
or
mov
daa
and
mov
test
xchg
add
ds
or
mov
push
fiadd
xchg
ins
(bad)
pop
ret
(bad)
mov
pop
xor
lock
jmp
push
jecxz
add
mov
shl
xchg
xor
shr
idiv
xor
cli
or
scas
rol
adc
and
adc
mov
mov
and
fdivp
in
loope
and
push
dec
jnp
ins
in
fcomp
pop
lds
cli
add
lds
out
push
ins
xchg
arpl
dec
lock
inc
movs
call
mov
pushf
sub
add
mov
aam
push
dec
or
push
std
ror
fsubr
fcomp
scas
shl
cmp
xor
pop
jecxz
in
or
push
aas
ror
or
jmp
lahf
iret
push
mov
lods
push
push
add
lds
mov
push
add
cmp
fucomi
out
(bad)
aaa
aaa
mov
clc
lock
(bad)
lahf
sub
ret
clc
imul
pusha
xchg
mov
or
fisttp
adc
or
jnp
(bad)
addr16
jecxz
inc
aas
jl
mov
jle
sbb
dec
lea
or
faddp
js
inc
jb
not
mov
cwde
sub
mov
aad
ja
dec
push
inc
jmp
imul
ss
and
daa
cdq
or
ret
out
mov
(bad)
iret
push
mov
dec
inc
data16
push
push
(bad)
jns
movs
fisttp
and
pusha
scas
pop
dec
push
repz
inc
jno
mov
retf
jecxz
inc
loopne
xchg
test
mov
adc
fstp
imul
and
sub
test
rcl
and
call
fmul
cmp
inc
mov
shl
cmp
or
dec
inc
dec
xchg
pop
pushf
sahf
bound
add
fcom
pusha
popf
dec
iret
pop
jmp
movs
sbb
push
mov
or
js
mov
pop
lods
out
lahf
jge
leave
daa
pop
and
cli
aad
movs
mov
and
stos
jp
mov
in
(bad)
(bad)
jb
test
icebp
add
sti
int
movs
cmp
or
jg
jne
dec
int
repz
cmp
inc
ins
xlat
sub
cmp
adc
lods
(bad)
xor
out
retf
shl
mov
in
inc
adc
or
or
add
mov
shl
jp
mov
jg
or
aas
adc
nop
or
xchg
sbb
stc
data16
outs
dec
clc
test
or
dec
sbb
shl
jge
add
test
aad
cld
in
sti
pop
xor
ficomp
mov
xor
mov
out
cmps
or
jnp
ret
and
lds
std
stc
stc
fdecstp
aaa
xchg
out
pop
adc
into
xchg
daa
xor
xor
add
mov
aam
or
xchg
lock
sti
push
jmp
cmp
mov
jbe
retf
rcl
add
push
push
mov
jg
or
hlt
(bad)
push
adc
frstor
or
sub
data16
rcr
fisttp
outs
outs
outs
out
mov
clc
(bad)
(bad)
clc
mov
push
idiv
mov
inc
push
lock
inc
pop
out
dec
cmp
out
je
movs
ss
mov
out
hlt
and
data16
cmc
fstp
iret
outs
ss
lods
xor
inc
jmp
mov
mov
cmp
lock
test
aam
popf
std
fsub
jo
in
fist
mov
mov
and
add
ja
push
xchg
ucomiss
jmp
add
faddp
and
js
mov
ins
mov
push
arpl
inc
pop
mov
jnp
sbb
in
dec
mov
jns
sub
retf
adc
xchg
out
add
mov
and
and
or
adc
mov
ret
mov
jp
stc
fcom
mov
std
push
out
xchg
jmp
sbb
idiv
cdq
adc
(bad)
mov
push
mov
les
inc
lods
pop
add
sbb
cli
fisttp
ins
xchg
mov
fldcw
stc
stc
sbb
repz
std
rol
pop
pop
test
push
push
rcl
inc
movs
in
loope
push
js
and
test
add
sti
cmps
(bad)
fcom
fidivr
sbb
pop
retf
sub
imul
jne
add
fs
dec
movs
lods
add
sahf
ret
xor
push
cdq
inc
sbb
pop
add
jecxz
jg
xor
cmp
(bad)
(bad)
sbb
adc
add
pusha
pushf
inc
out
sub
xlat
or
mov
push
mov
sub
mov
xchg
sub
pop
sub
dec
fldcw
pushf
xchg
jnp
cmc
(bad)
loopne
or
into
mov
stc
outs
scas
out
sbb
jp
mov
dec
sbb
sub
adc
enter
leave
dec
add
mov
xchg
sbb
xchg
dec
or
xchg
mov
mov
sbb
or
loop
or
sub
jle
aad
mov
add
ins
fucom
jl
and
xchg
or
ret
xlat
jp
inc
cmp
jnp
cdq
mov
or
add
pop
xchg
test
cli
push
inc
mov
xchg
(bad)
pop
cs
call
in
mov
or
pop
mov
mov
push
fmul
add
mov
test
push
outs
outs
outs
ds
repz
repz
outs
mov
xchg
jb
leave
xor
jecxz
out
pop
int
shl
mov
cwde
fdiv
data16
add
add
or
push
jg
ds
ror
mov
jmp
out
test
jne
xor
std
cmp
ror
loopne
push
lods
js
mov
jmp
and
in
xchg
or
outs
sti
add
nop
cli
adc
xchg
inc
or
daa
pcmpgtw
sahf
aad
add
cmp
push
inc
sbb
xor
pop
test
mov
sahf
and
sub
push
dec
jl
push
pop
repz
nop
es
xchg
mov
mov
mov
adc
ret
mov
or
into
in
bound
dec
mov
fistp
ror
imul
sbb
pop
cmps
xor
mov
inc
inc
mov
or
xor
aaa
rcr
xor
jl
(bad)
fptan
add
cmp
or
inc
xor
adc
dec
or
lods
jecxz
sbb
jmp
aaa
fwait
int
stos
stos
(bad)
lahf
std
in
test
push
or
cmp
mov
in
mov
sub
nop
lahf
inc
or
stos
(bad)
iret
ds
rol
pop
cld
cli
fucomp
(bad)
neg
jmp
or
add
call
inc
or
aad
mov
fild
mov
xchg
add
shr
out
arpl
in
data16
mov
scas
hlt
jecxz
add
push
nop
mov
lods
or
add
push
and
inc
nop
dec
sub
xchg
adc
adc
add
and
repnz
inc
cmp
pushf
mov
retf
push
mov
inc
mov
cmp
add
aaa
or
nop
fdiv
mov
add
mov
xchg
daa
out
stos
sub
sub
test
sbb
(bad)
fwait
push
push
dec
cwde
mov
aaa
xlat
ja
jbe
js
and
dec
and
push
mov
cmp
xor
ja
xor
mov
shl
push
or
sbb
(bad)
outs
xlat
jne
int
daa
push
push
xlat
(bad)
loopne
pop
jle
xor
arpl
repnz
cmp
add
push
push
and
add
cwde
sub
jle
jns
shl
lods
idiv
dec
ret
xor
in
xor
dec
pushf
mov
repnz
pop
dec
mov
cmp
cmps
and
lods
imul
push
ror
retf
test
or
add
xchg
aad
xor
sbb
nop
movs
mov
popa
push
inc
inc
and
enter
aad
lahf
and
mov
cmp
in
inc
sub
or
jmp
loope
pushf
retf
pop
jae
jge
inc
sbb
out
mov
pusha
xchg
dec
xchg
imul
bound
pusha
pop
out
cmps
lods
cdq
xor
or
mov
(bad)
pusha
or
mov
fucom
sbb
pop
popf
(bad)
inc
std
cmp
cs
int3
fistp
cld
ret
jmp
xor
sub
adc
add
scas
out
push
fsubr
rol
push
or
repnz
mov
test
ror
inc
jne
inc
cmps
fcmovne
push
inc
dec
inc
push
fbstp
xor
or
mov
jmp
shl
cmp
std
leave
enter
rol
inc
test
hlt
not
inc
stos
or
fwait
adc
pop
push
fsub
ja
mov
mov
cmc
std
cli
push
sti
mov
adc
test
push
cld
popf
mov
fsub
repnz
sub
mov
jne
lea
mov
mov
dec
sub
and
jb
mov
daa
push
adc
dec
push
inc
icebp
leave
cmp
dec
sub
xchg
push
adc
add
pop
or
mov
lock
xor
push
jmp
daa
dec
idiv
je
lock
and
pop
inc
xchg
mov
retf
lahf
and
(bad)
iret
push
loopne
sahf
xor
inc
cmovp
jg
and
inc
inc
aas
cli
scas
sub
cmp
std
pop
inc
mov
mov
(bad)
jmp
push
sub
pop
stos
or
inc
shl
push
adc
sub
rol
push
bound
sub
jmp
outs
scas
out
mov
lods
popa
push
fwait
sahf
test
mov
(bad)
xlat
jno
jbe
fidiv
pop
dec
or
shl
int3
add
jo
jg
mov
mov
std
aad
fucomp
dec
push
push
mov
mov
cld
je
mov
sbb
or
test
outs
mov
shr
sti
and
add
inc
mov
mov
jge
fsub
ins
and
push
dec
clc
cwde
jecxz
pop
or
xlat
loopne
dec
sbb
aam
mov
or
jo
push
leave
or
(bad)
mov
(bad)
pop
fnstcw
pop
pop
adc
mov
pushf
fdivr
sbb
test
dec
int3
das
adc
pop
sbb
pop
cwde
mov
dec
jge
push
std
nop
jo
xchg
fmul
cdq
ins
ins
cmps
and
dec
dec
enter
mov
dec
imul
pop
pop
ret
jl
inc
out
inc
mov
(bad)
hlt
cs
push
mov
adc
jne
jno
retf
rol
add
dec
in
mov
cli
mov
(bad)
(bad)
push
movs
mov
mov
mov
stc
sbb
push
inc
add
mov
scas
int3
mov
inc
(bad)
dec
cmp
frstor
add
fsubr
mov
jecxz
mov
imul
jmp
pop
sbb
inc
pop
pop
sub
stos
mov
movs
loop
je
inc
inc
ins
fnsave
pusha
mov
fld
xor
pusha
jl
ror
xchg
dec
iret
fbld
sub
push
lahf
test
adc
ret
neg
inc
or
sbb
in
jae
pop
sub
jmp
iret
sahf
inc
std
in
jmp
cdq
push
and
fbstp
mov
stos
leave
iret
cmp
jno
xchg
mov
outs
push
ss
es
dec
jb
sub
push
cmp
adc
adc
add
dec
mov
pop
mov
pop
sbb
fs
mov
out
cmp
std
dec
or
mov
and
test
cmps
and
addr16
aas
or
xchg
pop
push
sub
adc
mov
les
and
out
leave
and
shl
cmps
or
adc
outs
and
mov
push
xchg
test
fiadd
mov
push
movsx
call
stc
std
jge
adc
sbb
mov
pop
cs
xor
inc
das
sub
stos
xchg
in
retf
xchg
push
call
push
imul
fcomp
arpl
and
mov
shl
cmp
jecxz
or
push
add
pushf
pushf
mov
test
mov
or
hlt
mov
sti
loop
out
xlat
das
scas
mov
leave
repnz
push
xor
in
clc
adc
test
dec
and
nop
in
jle
js
adc
mov
arpl
lahf
push
fdivr
bound
imul
pusha
int3
xchg
cli
pop
mul
jns
dec
outs
adc
pop
repz
mov
stos
out
add
sbb
sbb
ds
pushf
ds
mov
cs
push
add
xor
jae
mov
add
int
jle
push
stos
retf
fs
mov
rcl
bound
(bad)
outs
push
retf
inc
loop
movs
cmc
sub
jg
fisub
fst
cwde
iret
xchg
push
adc
add
les
pop
loope
inc
lods
js
ror
es
pushf
cli
fst
sbb
imul
jo
inc
outs
popf
xchg
cld
enter
push
sbb
dec
ss
jo
push
push
out
leave
pop
sub
or
data16
and
push
fs
movs
push
iret
sbb
xor
(bad)
jbe
push
fwait
cmc
cmp
adc
arpl
mov
cmp
sbb
and
cmps
push
jecxz
fisub
cmp
bnd
out
jo
fld
aaa
pop
xlat
cmp
movs
xchg
(bad)
jns
add
and
and
push
jle
push
mov
xor
add
cmp
mov
loopne
adc
push
or
iret
lahf
jg
out
out
aaa
ss
push
lea
jmp
clc
and
lods
mov
test
ja
into
adc
mov
gs
scas
dec
cld
xor
stos
enter
cld
cmp
xor
movs
fiadd
jno
xchg
fbld
dec
outs
leave
test
cdq
arpl
jecxz
inc
pusha
lock
cmps
out
mov
jb
xchg
das
sahf
jnp
xor
push
add
or
mov
pop
cs
ror
pop
int3
out
stos
sbb
fcmovnu
and
xor
mov
ret
pop
or
mov
pop
in
test
and
jns
push
add
xchg
in
lahf
cmp
add
mov
add
add
retf
and
(bad)
leave
cmp
ret
sub
mov
cld
je
stc
leave
or
mov
or
div
test
inc
fadd
fs
jmp
mov
inc
js
lods
mov
icebp
call
nop
movs
(bad)
sub
cdq
push
sub
xor
addr16
outs
ja
in
cli
scas
aas
stc
in
mov
pop
pop
cmp
scas
(bad)
add
push
or
pop
inc
cld
cmps
add
sub
xchg
xor
sbb
inc
in
or
cwde
aam
and
mov
pop
pop
fistp
fidivr
repz
mov
dec
mov
or
loope
les
je
addr16
mov
pop
xor
ins
les
idiv
dec
adc
js
sbb
and
and
mov
mov
sti
retf
inc
sub
mov
add
push
add
arpl
xchg
or
xchg
int
(bad)
loopne
bnd
jb
mov
adc
movs
shr
sbb
adc
push
inc
fcmovne
or
adc
xor
push
or
ja
out
loope
xor
inc
push
lock
call
test
jmp
mov
cwde
hlt
and
sti
lahf
inc
cmp
jmp
in
mov
mov
int
(bad)
mov
imul
xchg
adc
mov
xchg
mov
xor
add
call
stos
jnp
fisttp
fidiv
ret
movs
mov
ins
mov
xchg
and
cdq
int
mov
inc
mov
inc
imul
xor
cmc
pop
dec
or
rcr
pop
xlat
ins
mov
pop
jg
std
mov
jg
inc
cld
jmp
mov
shr
inc
xor
pop
jmp
cmc
cmc
std
xlat
scas
scas
pop
cld
jmp
push
and
(bad)
push
push
mov
imul
push
sti
mov
pop
mov
out
add
mov
push
pop
and
rcl
mov
stc
stc
jg
std
dec
adc
ja
dec
dec
cmp
adc
or
movs
and
test
mov
(bad)
(bad)
je
pusha
xchg
xor
movs
ret
mov
call
int3
out
aas
aas
(bad)
jb
sar
mov
scas
or
inc
rcr
cs
mov
cmp
sub
mov
mov
and
pop
sbb
add
inc
or
or
push
loop
je
not
out
push
mov
(bad)
mov
dec
into
xor
mov
aaa
mov
bound
xor
int
stos
jno
jno
in
or
pop
or
cmp
mov
in
xchg
test
lock
outs
loopne
loop
push
mov
shl
cwde
sub
and
and
xor
add
div
neg
std
std
std
lahf
pop
pop
mov
push
ja
imul
pop
movs
mov
(bad)
leave
ins
dec
outs
loopne
std
test
call
adc
cmp
fidivr
popf
lock
pop
mov
mov
cdq
outs
xlat
jge
pop
mov
cmps
sahf
cmp
add
lds
xchg
fld
sti
pushf
mov
dec
sub
sbb
xlat
inc
xchg
cs
pop
lods
and
mov
xchg
(bad)
ds
adc
int
cmp
sti
bt
in
add
pop
enter
enter
iret
aad
mov
das
or
daa
jae
in
inc
ss
dec
mov
cdq
add
jecxz
or
xchg
test
test
mov
ret
in
cmp
xchg
ror
dec
adc
(bad)
adc
nop
push
push
dec
sub
add
inc
(bad)
and
repz
popf
pop
push
ret
sub
dec
push
pop
test
or
or
or
in
mov
call
xchg
scas
jo
lahf
loope
mov
add
shl
test
push
mov
ds
inc
aad
cli
int
jmp
xor
mov
les
and
sub
jbe
mov
imul
sub
call
mov
(bad)
sbb
jmp
jmp
jg
and
mov
es
mov
arpl
add
jge
xchg
jnp
cmp
and
retf
jg
int
mov
ss
lahf
sbb
and
jmp
mov
jge
mov
dec
call
xor
cld
retf
and
sbb
dec
mov
add
dec
pop
push
mov
xor
lods
or
pop
mov
test
es
pushf
in
dec
test
mov
iret
adc
scas
adc
xchg
mov
daa
les
jo
jb
mov
push
cmp
mov
imul
sbb
imul
fs
(bad)
sub
mov
xor
push
and
or
ds
popf
xchg
mov
jae
pop
(bad)
shr
loope
mov
pop
or
xor
mov
cmp
xor
test
sub
jp
adc
mov
pop
pop
pop
loope
lds
pop
adc
add
pop
xchg
in
jg
clc
adc
pop
jmp
mov
sbb
inc
ror
enter
mov
(bad)
cld
fstp
hlt
rol
jg
fucomi
sahf
popf
popf
lahf
es
jge
adc
in
fucomip
in
lods
mov
call
xor
loopne
ins
in
enter
or
dec
pop
femms
add
mov
jge
mov
in
ds
xchg
mov
add
cmp
js
std
cmps
nop
pop
jbe
pusha
pop
sub
pop
sub
adc
xor
and
out
cmp
mul
and
sti
mov
mov
mov
icebp
jmp
push
push
adc
dec
in
or
ret
mov
dec
loope
mov
xchg
xchg
mov
xlat
or
lds
(bad)
push
pop
bound
inc
add
scas
and
mov
retf
add
add
add
sbb
add
hlt
adc
jae
adc
dec
inc
lock
cmps
add
out
hlt
xabort
jne
call
pusha
stos
adc
jae
addr16
jg
stc
in
test
adc
mov
inc
inc
ret
ret
and
xor
dec
out
or
(bad)
call
mov
sub
sub
and
mov
mov
ins
shl
movs
push
test
call
pop
mov
daa
loope
shl
(bad)
fidivr
rol
pop
sbb
imul
or
out
cmp
in
adc
add
or
add
int3
call
cmp
mov
jl
mov
cmc
das
scas
(bad)
jmp
cwde
shl
sub
push
(bad)
ficom
xchg
sub
xor
sub
std
and
mov
sub
dec
jmp
adc
cli
pop
xchg
dec
(bad)
jmp
lds
dec
int3
xor
mov
push
sub
xchg
dec
fs
cli
mov
movs
and
xchg
(bad)
push
(bad)
mov
sbb
das
das
icebp
cli
xchg
daa
push
add
pop
mov
xor
popa
(bad)
dec
in
(bad)
ds
into
ret
ds
pop
fcomp
mov
mov
mov
dec
call
jecxz
sub
loope
data16
and
movs
fs
in
lds
add
mov
out
scas
sub
sahf
jecxz
lds
call
push
or
dec
or
pop
jae
cmp
add
shl
push
daa
sub
imul
(bad)
pop
jecxz
neg
frstor
jo
and
pop
pop
loop
mov
(bad)
mov
sbb
inc
fbstp
int
pop
int3
pop
shl
mov
xchg
add
sti
call
fld
scas
outs
outs
(bad)
hlt
div
neg
fstp
fidivr
sti
mov
jg
mov
sti
xchg
nop
es
mov
add
aam
ds
pop
mov
int3
out
mov
fdivr
lods
stos
mov
and
adc
mov
dec
movs
inc
(bad)
je
push
adc
or
or
add
or
pusha
and
stos
push
enter
js
pop
aam
les
fcomp
js
jae
dec
hlt
sbb
xchg
pop
or
js
add
pop
pop
aas
dec
popa
mov
loopne
call
rol
xchg
ret
mov
xchg
cmp
cmp
or
sub
dec
and
mov
sub
dec
push
test
(bad)
(bad)
pmulhw
enter
inc
mov
icebp
lods
in
add
fadd
lods
sahf
pop
push
out
loopne
xchg
adc
imul
dec
xor
retf
pushf
test
jo
aad
pop
cs
pop
inc
imul
or
inc
popa
into
dec
cmp
repnz
xor
push
sub
out
add
mov
into
iret
das
jo
jbe
mov
sbb
outs
sub
fmul
jns
repz
or
push
jns
cmc
cli
out
outs
mov
sti
popa
or
aaa
mov
jp
xor
(bad)
cmp
add
cmp
and
repz
idiv
(bad)
sbb
dec
adc
test
pushf
add
sub
inc
cdq
mov
xchg
sub
xor
jo
push
adc
gs
in
sub
jns
shl
sar
or
cmp
mov
ret
mov
inc
pop
addr16
out
imul
out
add
push
cmp
aas
(bad)
mov
cli
jmp
mov
fidiv
add
push
jl
push
hlt
fs
ins
imul
out
mov
adc
inc
adc
aam
xchg
and
int3
xchg
out
test
or
add
mov
mov
pop
nop
and
mov
mov
vpslld
cmps
out
pop
sub
pop
dec
jle
(bad)
and
add
jne
arpl
lahf
jecxz
leave
and
mov
in
sbb
sub
shr
push
jne
jecxz
repnz
jmp
and
jns
mov
test
xchg
leave
ins
fdiv
mov
lahf
cmp
iret
jmp
jge
imul
mov
cmc
js
nop
aas
je
inc
add
call
adc
out
(bad)
pop
fwait
mov
fwait
ja
mov
add
jnp
inc
push
sbb
std
test
xchg
retf
dec
cmp
inc
leave
test
rcl
das
sub
and
inc
cmp
cmp
sar
and
movs
mov
mov
sahf
and
or
mov
test
jb
sbb
nop
loop
mov
ins
shl
and
(bad)
fnstcw
ins
dec
ss
adc
mov
(bad)
lods
popf
mov
xchg
movs
ins
and
adc
rcl
out
inc
imul
adc
das
retf
xchg
pop
sbb
gs
jg
mov
leave
fucomip
cmp
pusha
mov
cwde
aaa
or
mov
(bad)
xor
stos
stos
test
cwde
(bad)
adc
mov
pushf
popf
sahf
mov
cmps
shl
cli
test
add
cmp
rol
adc
imul
pop
loopne
loop
mov
mov
jp
outs
call
cdq
(bad)
mov
and
stc
das
ret
ficom
cdq
mov
push
ja
stos
(bad)
scas
scas
sahf
jg
fldcw
mov
int3
jge
cmp
lahf
cwde
retf
stos
dec
jl
fistp
sti
out
adc
mov
sar
jbe
inc
movs
sub
ja
or
aad
out
scas
outs
jle
mov
add
inc
or
fwait
into
jp
sar
pop
sti
iret
es
mov
cmp
retf
ins
mov
xchg
mov
sbb
adc
adc
add
rcl
sar
mov
mov
or
std
fisubr
(bad)
aas
fld
jne
in
scas
add
and
sub
(bad)
fldenv
imul
xchg
inc
in
repz
clc
pop
inc
xor
aaa
cmc
jne
nop
adc
adc
sbb
or
std
js
retf
mov
push
add
mov
push
pop
pop
call
inc
sub
es
push
sbb
nop
popa
scas
cld
aaa
inc
mov
add
push
xor
iret
xor
dec
int3
out
pushf
lahf
popf
mov
push
jo
mov
inc
(bad)
cmp
inc
xor
mov
jg
cmps
ja
fldcw
and
or
sub
jb
test
inc
pop
adc
dec
and
inc
xchg
ss
pop
xchg
xchg
jb
dec
aas
jge
sti
xchg
cs
cmp
leave
fs
adc
call
cmp
cmp
lds
repnz
dec
push
xlat
sub
ds
icebp
hlt
mov
popw
add
push
sahf
push
adc
mov
jl
rep
or
dec
dec
adc
sub
std
or
mov
retf
or
(bad)
in
ins
cmp
push
xor
fmul
inc
dec
and
(bad)
bound
jbe
jo
pop
xor
aas
inc
(bad)
fmul
fcom
mov
xor
mov
mov
aas
cld
loope
fcomip
pop
inc
cmp
in
mov
pop
cdq
jns
mov
mov
mov
gs
out
inc
xchg
adc
out
inc
call
clc
(bad)
mov
inc
sbb
sbb
scas
cmps
mov
call
sub
mov
and
fadd
mov
inc
(bad)
cmp
adc
imul
add
fdiv
sti
sbb
jnp
sldt
jb
and
push
mov
cdq
data16
daa
add
mov
dec
adc
jno
sbb
xchg
imul
adc
pushf
push
push
push
xor
push
xchg
int
rcr
in
push
mov
arpl
adc
aam
and
rol
jp
or
mov
push
dec
push
in
push
dec
push
dec
mov
test
cdq
add
dec
mov
gs
and
cmc
mov
jp
inc
shl
adc
pop
bound
adc
fst
fstp
dec
ret
sbb
lods
xor
addr16
and
pop
or
in
or
mov
and
pop
lods
push
jg
mov
fist
in
neg
jle
jmp
neg
test
out
sub
sbb
inc
bound
sbb
(bad)
jg
and
jmp
add
lea
ds
aaa
jmp
push
mov
jmp
push
or
lock
repnz
shl
cmp
inc
pop
adc
adc
adc
inc
mov
sbb
sbb
pop
xor
pop
mov
addr16
mov
in
loope
jne
repnz
mov
adc
sbb
push
mov
add
into
push
pop
sbb
lahf
lock
bound
cwde
push
adc
inc
adc
dec
mov
mov
call
pusha
xchg
cmps
mov
lea
add
inc
ja
jbe
adc
or
popa
cs
out
scas
xchg
push
lods
inc
sub
int3
push
dec
popa
push
cmp
push
loope
sub
test
and
sub
mov
inc
sahf
out
mov
(bad)
dec
mov
std
ins
or
push
and
retf
adc
adc
cmc
or
(bad)
js
jl
pop
xlat
(bad)
enter
mov
cmps
sub
out
repz
or
fisubr
shl
sti
jae
in
add
imul
jg
mov
pop
out
imul
fprem1
popf
movs
xchg
dec
inc
mov
sti
push
mov
call
jle
add
vmwrite
add
xchg
sti
ins
mov
pop
out
ja
jmp
out
dec
dec
stc
ret
jno
(bad)
sub
cmps
fwait
xchg
and
retf
cmp
sub
aaa
jne
rcl
inc
and
faddp
js
inc
gs
in
cmp
mov
mov
mov
jno
fnstsw
shl
xchg
and
inc
out
in
call
fs
retf
ja
jmp
cmp
fs
js
push
pop
call
mov
or
cmps
dec
(bad)
or
(bad)
je
dec
shr
in
sbb
push
xor
mov
into
es
and
ret
test
(bad)
int3
fldenv
fild
mov
inc
xor
and
and
mov
bound
pusha
cmp
fs
in
mov
push
add
mov
outs
ss
lods
xchg
test
cmp
inc
ins
imul
jmp
mov
ins
shl
lea
pop
rcl
pop
test
sub
gs
pop
add
cmp
pminsw
out
outs
(bad)
fwait
shr
mov
pop
das
fwait
cmps
rcr
(bad)
or
cmp
dec
loop
mov
retf
add
inc
repz
std
mov
in
repz
or
pop
jle
inc
inc
sub
sbb
arpl
leave
adc
in
shl
sbb
jmp
out
xchg
xor
int3
inc
leave
and
sub
jnp
push
ret
jae
or
ret
mov
mov
push
in
and
sub
pop
lahf
and
sub
inc
ret
and
jge
add
fbstp
inc
or
outs
and
jp
or
inc
cmp
cmp
ins
push
shl
cwde
aam
lods
and
popa
adc
stc
and
stc
popf
icebp
je
mov
cdq
hlt
ret
sub
out
fwait
into
jno
dec
xchg
les
pop
adc
(bad)
cmp
jno
mov
push
ror
cmps
xlat
xchg
cmp
shl
lock
jo
(bad)
shr
inc
test
adc
jle
mov
leave
or
jae
mov
mov
mov
data16
in
jge
fiadd
mov
fucom
das
(bad)
loop
hlt
lahf
(bad)
stc
lahf
dec
mov
out
adc
lods
mov
ja
sar
fcomp
add
pop
add
icebp
mov
push
or
retf
push
jg
ds
pop
xchg
daa
call
out
inc
pop
xlat
pop
mov
sar
adc
mov
aam
mov
test
or
adc
hlt
push
push
sub
loop
xchg
cli
xor
les
ins
push
pop
js
mov
sub
call
cmp
cmp
or
xchg
inc
retf
mov
ja
sub
out
ret
or
jg
or
out
mov
gs
and
inc
into
stos
(bad)
push
mov
xor
mov
mov
jecxz
sub
mov
fcom
stc
mov
jp
scas
mov
ins
xor
pusha
sbb
leave
jmp
adc
mov
jle
scas
xchg
call
mov
adc
xchg
(bad)
pop
ret
dec
or
ss
push
ret
sbb
test
jb
aad
and
jmp
and
dec
dec
daa
xor
js
mov
inc
ret
rol
ds
cmc
xor
or
(bad)
pop
leave
pop
(bad)
clc
inc
cli
(bad)
pop
jg
lea
xor
std
mov
mov
mov
add
mov
(bad)
jae
lahf
aas
mov
clc
sub
pusha
lock
jnp
xor
aaa
cmp
add
ins
aaa
fwait
dec
outs
mov
iret
mov
inc
and
std
inc
out
mov
daa
sub
fsub
sbb
outs
mov
in
ds
jl
adc
dec
cmp
dec
xor
out
pushf
div
loop
push
fistp
inc
and
test
and
pop
xchg
add
inc
add
jae
pop
mov
pop
stos
shr
mov
jns
leave
js
stos
sbb
outs
push
stc
mov
xchg
test
cmps
test
icebp
xor
scas
xor
or
nop
inc
inc
hlt
mov
pop
add
xor
in
stc
inc
mov
(bad)
pop
imul
adc
(bad)
pop
and
in
jmp
pop
out
add
bound
mov
dec
and
ins
jp
add
jmp
cmp
leave
leave
sbb
scas
das
xor
jp
mov
jle
std
int
pop
push
pop
shr
imul
sub
cli
fstp
dec
out
je
xchg
pop
or
lds
call
fisttp
or
das
xchg
js
js
cmps
dec
lahf
enter
jns
jns
xchg
cmp
jbe
fnsave
fbld
es
stos
stos
cli
neg
mov
and
das
popa
mov
mov
in
add
mov
inc
sbb
std
lahf
adc
xchg
jmp
jge
jg
mov
pop
adc
test
rcl
sub
arpl
dec
push
(bad)
fisubr
xlat
shr
fwait
adc
dec
(bad)
xchg
sbb
sbb
out
mov
movs
fstp
sbb
ds
hlt
loope
frstor
gs
and
in
fstp
aas
mov
add
and
int
mov
xchg
out
and
movs
shl
push
push
aaa
jmp
mov
mov
ss
push
inc
inc
or
imul
gs
push
jg
pusha
push
cs
aaa
jmp
jmp
push
jae
repz
(bad)
scas
es
or
mov
mov
sbb
sub
popf
bound
inc
push
in
push
mov
xchg
pop
das
(bad)
fsubr
add
mov
adc
adc
mov
fs
ins
mov
push
aaa
or
xchg
loopne
ds
dec
outs
rcl
xor
ins
mov
inc
shl
ret
jecxz
mov
or
mov
aam
add
mov
jl
std
xor
push
xchg
in
jmp
sbb
jge
(bad)
xor
clc
mov
cld
mov
je
pop
jge
xor
(bad)
jle
sbb
lods
aaa
(bad)
out
(bad)
jmp
aaa
pop
xor
retf
cmp
stc
xchg
cmc
bound
retf
cld
repz
movs
pop
cmp
xor
scas
call
or
(bad)
ins
ret
jnp
repnz
mov
inc
ret
dec
sbb
pop
mov
out
and
sti
dec
sbb
mov
adc
xor
(bad)
in
daa
in
mov
mov
fidiv
(bad)
call
sbb
stc
imul
aas
add
dec
scas
cdq
int
mov
outs
ret
or
xlat
outs
mov
mov
movs
xchg
mul
add
neg
(bad)
in
rol
jno
pusha
and
addr16
mov
out
cmp
mov
or
repnz
dec
xor
jmp
xchg
add
mov
fs
int
iret
jo
jge
jne
arpl
cmp
(bad)
div
or
fist
mov
sbb
repnz
push
sub
add
inc
dec
mov
mov
setnp
outs
scas
jmp
jo
int3
std
jle
mov
aas
loop
jmp
stos
dec
ja
cmps
fld
imul
(bad)
pop
cs
int
ins
ss
std
jle
lahf
pop
jno
lea
jmp
add
shl
(bad)
fmul
mov
push
pusha
nop
add
and
pop
inc
sbb
jmp
test
rcr
mov
add
hlt
jbe
push
add
add
mov
jb
jecxz
call
mov
scas
jae
(bad)
cmc
rol
stos
test
(bad)
sahf
in
fldenv
add
fstp
jp
mov
rcr
pop
add
sar
mov
iret
rcr
popf
mov
(bad)
and
stos
cmp
js
jns
xor
lods
rcl
data16
xor
xor
mov
jecxz
sbb
inc
pop
push
cmp
dec
dec
sub
adc
iret
stos
adc
xlat
pushw
or
xor
sub
xor
(bad)
in
dec
in
add
inc
add
mov
adc
aam
mov
xor
test
arpl
dec
out
dec
inc
mov
rol
mov
jle
loop
add
push
add
sahf
arpl
jecxz
cld
add
push
inc
push
data16
add
adc
frstor
(bad)
inc
sub
popf
xchg
sbb
mov
loop
in
jne
and
jae
popf
dec
int
or
dec
rol
inc
pop
mov
xlat
int
cmp
ss
mov
iret
aaa
pop
mov
sbb
sbb
lahf
(bad)
aaa
push
call
add
jp
lods
cdq
sub
cdq
dec
inc
mov
fnstsw
ss
ins
jmp
movs
inc
in
cmp
jno
and
lea
fidiv
fs
cwde
outs
outs
inc
cmp
jne
repz
inc
sbb
xchg
push
adc
inc
cmp
mov
stos
jp
pop
js
jmp
mov
push
pusha
sbb
add
cmp
add
aaa
int
dec
or
adc
cmp
movs
cdq
sub
out
xchg
sub
push
rol
and
test
sbb
add
jb
and
out
dec
add
aam
movs
push
fistp
pop
dec
push
xor
div
mov
add
jp
inc
or
cmp
and
shr
das
push
inc
cmps
mov
sub
daa
and
mov
(bad)
xchg
or
mov
push
lods
sahf
pop
call
cwde
rol
mov
(bad)
(bad)
mov
lds
cmps
fld
jge
and
adc
call
icebp
in
lods
mov
jo
xchg
(bad)
mov
sub
js
jns
xchg
push
or
mov
or
(bad)
movs
pushf
xor
jecxz
mov
ins
popa
sub
and
scas
in
jecxz
ret
push
ret
xchg
push
or
adc
mov
cmp
adc
jmp
xchg
imul
cs
adc
(bad)
push
cmc
sbb
and
(bad)
in
es
jns
std
(bad)
ds
popf
pusha
out
icebp
cmp
or
xchg
fnstsw
or
jge
xor
xlat
jp
fbld
shl
mov
pop
cmp
sbb
test
push
mov
add
mov
jns
inc
sbb
test
pop
xchg
inc
(bad)
mov
or
test
ins
rcl
mov
or
popa
xor
and
adc
adc
pop
jns
jo
inc
popa
rol
adc
vmwrite
mov
xchg
mov
cld
push
popf
popf
adc
xor
dec
mov
gs
sub
sbb
mov
pop
(bad)
lea
jg
sub
cdq
dec
push
dec
sub
pop
lods
icebp
mov
ret
inc
fistp
(bad)
enter
jmp
in
add
pusha
mov
adc
imul
and
xor
and
bound
js
js
push
add
adc
adc
xor
rcl
add
(bad)
stc
gs
inc
call
jmp
je
repnz
scas
sti
lahf
sbb
add
sti
push
call
add
data16
push
outs
les
aaa
mov
pop
sub
mov
out
(bad)
pop
fbstp
jp
arpl
add
call
xchg
pop
pop
out
cdq
or
cs
pop
adc
in
or
adc
pop
in
adc
add
push
cmp
ret
test
pushf
sbb
jg
ror
pusha
repz
jecxz
mov
push
cwde
ss
pop
xor
pop
sbb
adc
jmp
mov
xchg
cli
jb
fstp
xchg
call
inc
jne
mov
popa
jne
test
push
mov
or
outs
add
inc
or
and
mov
ins
sbb
xor
pop
or
pop
adc
mov
stc
or
xor
stc
jne
data16
aad
cmp
push
xchg
cmp
(bad)
shr
mov
(bad)
std
hlt
test
jp
int
or
mov
adc
dec
out
pushf
(bad)
(bad)
push
adc
cmp
fs
popa
clc
or
sbb
sub
loop
in
pop
mov
add
data16
stos
push
sub
shufps
fucomp
push
xor
retf
jp
es
mov
(bad)
in
aas
adc
mov
sar
sbb
adc
push
pop
mov
das
or
es
add
push
or
cmp
inc
out
mov
xchg
adc
not
call
mov
mov
mov
es
and
hlt
imul
movs
sahf
or
sub
cmp
test
or
pop
ss
neg
push
dec
test
sbb
popa
(bad)
rcl
out
or
sar
out
sub
sbb
data16
push
and
ds
inc
pop
mov
repz
retf
inc
fs
xchg
sub
iret
mov
dec
pop
pop
lahf
icebp
cli
xchg
sbb
sub
iret
ret
std
push
ja
js
lock
(bad)
pop
hlt
loopne
or
movs
mov
rol
cmp
out
add
or
mov
mov
sbb
rcr
jno
inc
test
sbb
sti
inc
mov
sub
fs
cld
mov
cmps
xor
mov
sub
(bad)
pop
scas
push
adc
inc
int3
jno
imul
mov
mov
mov
adc
lods
or
add
neg
jle
mov
in
mov
sub
pop
lods
shl
push
xchg
sub
or
fist
outs
mov
cmps
inc
sub
inc
xchg
pop
sahf
lahf
sbb
cld
jge
adc
stc
fs
and
sahf
movs
(bad)
jg
mov
pcmpeqb
popa
int
in
fsub
cmp
cld
hlt
sub
shr
in
add
out
(bad)
neg
inc
fistp
mov
sbb
cld
dec
lock
arpl
movs
xchg
cld
xchg
jle
mov
(bad)
push
push
retf
inc
int3
dec
jno
cwde
push
adc
jp
push
call
cmp
or
mov
push
outs
les
push
ret
mul
sar
or
mov
fs
cmp
lock
retf
push
pusha
adc
mov
ret
iret
adc
jle
and
shr
xchg
jbe
lods
xlat
sub
pop
imul
push
jmp
out
jns
dec
pop
jo
mov
fwait
stos
adc
retf
jns
test
ins
(bad)
mov
aas
add
pop
dec
out
(bad)
cmps
(bad)
stc
or
loop
jno
add
shl
pop
mov
and
xlat
popa
stc
repnz
outs
icebp
js
(bad)
jp
test
sbb
and
adc
pushf
popf
pop
(bad)
(bad)
add
loop
mov
and
mov
js
les
jbe
or
sbb
loopne
mov
js
jae
scas
pop
mov
adc
into
xor
xchg
mov
fadd
cli
rol
push
ret
jb
out
movs
push
or
sub
(bad)
mov
hlt
pop
push
inc
mov
mov
cdq
push
stos
add
jl
sub
clc
push
mov
ja
jae
lock
inc
lods
pop
sahf
rcl
push
repnz
in
inc
and
mov
pop
out
sbb
popf
cmp
push
push
pop
xchg
repz
mov
cmp
inc
out
pop
sahf
jg
xchg
lock
xlat
push
or
lea
mov
mov
retf
push
cmp
or
iret
addr16
cmp
jae
retf
cdq
sbb
sbb
retf
imul
(bad)
(bad)
test
xchg
mov
adc
push
jb
jns
push
dec
cwde
je
sbb
and
mov
sar
out
cmp
cli
xchg
and
iret
xchg
mov
add
test
add
push
ss
mov
and
inc
mov
cmp
adc
xchg
sbb
(bad)
test
arpl
push
adc
lock
xchg
jbe
pop
or
(bad)
enter
leave
add
xchg
push
mov
mov
aam
sbb
enter
gs
sub
(bad)
out
mov
add
jmp
jle
xchg
xchg
and
or
cmp
jae
sub
test
popa
jl
arpl
jle
(bad)
lock
inc
jmp
inc
or
jmp
jae
ret
jae
cld
xlat
retf
and
std
sub
push
das
jmp
ja
es
sbb
pop
inc
cmp
push
rcr
mov
data16
xchg
jmp
(bad)
jmp
lds
adc
dec
lods
(bad)
adc
icebp
aad
xor
mul
cdq
jecxz
nop
arpl
lahf
and
ficomp
std
dec
pop
shl
pop
mov
add
je
jmp
or
sbb
xchg
push
nop
popf
test
pop
fisub
sbb
add
mov
mov
aam
mov
push
adc
out
les
sbb
das
mov
cmp
imul
xchg
nop
push
adc
push
pop
loopne
jbe
retf
leave
sbb
xchg
sbb
mov
lock
pusha
xor
jecxz
loop
xchg
out
scas
xor
popf
add
dec
shl
in
adc
fst
call
popa
cmp
pusha
cmp
loop
repnz
pop
test
arpl
dec
mov
dec
push
mov
mov
cmps
lahf
jg
cwde
icebp
data16
mov
mov
js
ret
jle
retf
retf
mov
adc
add
pusha
xor
mov
add
ja
mov
fs
dec
pop
les
pop
ret
neg
xchg
dec
dec
lds
movs
inc
(bad)
imul
xor
aas
add
and
pop
(bad)
mov
stos
fistp
(bad)
repz
dec
mov
jp
retf
add
test
mov
clc
push
push
sar
push
sub
adc
pop
cmps
push
inc
cmp
repz
add
dec
pmaxub
std
or
sbb
lock
cmc
sbb
mov
push
clc
arpl
in
and
(bad)
push
ret
test
xchg
outs
js
and
or
adc
or
not
nop
popa
push
or
mov
(bad)
jmp
adc
and
xchg
pop
test
mov
loope
and
mov
in
cmp
jg
sub
inc
cmps
adc
aaa
das
xor
push
enter
add
adc
ret
test
into
xor
xor
clc
je
aam
retf
dec
lods
push
cmps
aad
mov
mov
xchg
lds
loop
inc
cmp
xor
cwde
dec
mov
arpl
mov
sbb
inc
add
fnstcw
add
pop
test
pop
sub
(bad)
idiv
out
and
inc
add
shl
lds
and
jp
loopne
mov
mov
outs
ss
mov
cmps
stos
stos
not
(bad)
push
(bad)
call
push
xchg
shl
sub
mov
call
(bad)
mov
sbb
sub
push
and
pusha
cmp
push
movs
jl
cmps
cmc
je
leave
ret
shl
xor
xor
mov
loopne
rcr
out
in
mov
or
lods
pop
ds
push
movs
jg
fwait
inc
push
(bad)
push
mov
out
dec
inc
mov
lods
rcl
mov
sub
fstp
arpl
imul
or
(bad)
add
ja
xchg
jecxz
dec
je
and
jnp
jp
test
mov
loopne
inc
cmps
lahf
mov
pop
into
fcomip
cmp
mov
sub
xor
rcr
hlt
add
cwde
in
xchg
sbb
mov
cmp
add
jno
cmc
sub
cli
adc
add
test
(bad)
cmp
iret
das
xor
cdq
and
je
(bad)
in
jbe
sub
aad
imul
jecxz
test
mov
jl
out
lahf
mov
outs
shr
pushf
(bad)
sbb
lods
sub
push
fwait
mov
cmc
or
push
and
imul
pushf
xor
mov
dec
iret
into
and
(bad)
jg
clc
dec
add
xlat
enter
or
mov
or
outs
leave
lds
inc
dec
jne
or
adc
ss
mov
cmp
sub
std
mov
in
inc
pop
shr
hlt
push
push
ins
imul
imul
xor
xchg
adc
add
mov
scas
(bad)
pop
out
adc
cmp
push
sub
out
data16
stos
push
xor
push
sbb
mov
popf
add
movs
adc
sub
push
test
and
xchg
push
mov
xchg
xlat
adc
mov
inc
add
push
pop
sbb
pop
add
jl
icebp
mov
movs
xor
adc
lods
mov
add
xor
imul
push
jmp
inc
add
pop
pushf
bound
jo
(bad)
rcr
adc
es
int3
xchg
mov
call
jp
inc
sub
inc
das
cmp
cmp
mov
push
daa
adc
and
mov
sbb
cmps
cmp
mov
fs
arpl
sub
nop
jo
mov
push
xchg
retf
pop
sub
nop
push
sbb
imul
adc
sub
imul
call
xchg
mov
pop
scas
jo
(bad)
or
fdivr
retf
movs
sub
sbb
imul
outs
lock
repz
mov
adc
arpl
mov
mov
cwde
int
dec
bound
add
call
xchg
pop
cmc
push
xor
(bad)
jb
cdq
and
nop
or
jg
or
or
mul
pop
div
mov
sbb
daa
lock
add
js
call
or
int
push
mov
pop
shl
pop
iret
ins
cdq
mov
rol
pusha
and
cdq
jo
test
xchg
add
test
in
mov
xchg
or
mov
cmp
imul
xor
test
push
lods
push
ret
or
mov
cli
push
mov
stc
mov
jl
mov
call
jo
popf
jecxz
cmp
movs
test
lods
xor
(bad)
int3
lock
mov
jle
mov
xchg
cwde
sahf
sahf
and
jae
jge
in
add
(bad)
loope
push
fucomi
sbb
jl
or
xchg
cmp
daa
cmp
push
sahf
jb
cmp
mov
sbb
std
mov
inc
pushf
les
mov
fldcw
mov
mov
mov
outs
xchg
sti
jnp
(bad)
pusha
mov
in
xchg
sti
push
fdivr
rol
mov
inc
movs
add
jmp
das
das
das
xchg
(bad)
push
or
packuswb
jl
popf
or
mov
(bad)
out
jg
pop
in
xor
cli
retf
add
outs
movlhps
adc
xor
retf
cmp
mov
cmp
(bad)
jmp
mov
xchg
dec
popa
add
push
jo
call
push
rcl
push
loope
rol
push
sahf
jp
sar
jo
add
cmp
es
xor
mov
jnp
sub
mov
fsub
aas
test
mov
xchg
cmp
popa
dec
add
xor
mov
cmp
dec
inc
cmc
ficom
add
or
jnp
add
inc
mov
xchg
popa
loope
cld
cmp
aas
inc
shr
xchg
mov
mov
std
repz
je
(bad)
stc
je
cmp
sub
jmp
push
call
or
jmp
xchg
(bad)
mov
in
jbe
xchg
xchg
cmp
aas
bound
bound
arpl
sub
in
push
popf
jmp
add
aam
fist
mov
clc
fxch
popf
call
lahf
icebp
cld
clc
mov
jbe
dec
dec
imul
mov
push
push
cmps
xor
push
aam
imul
addr16
lods
and
jo
mov
imul
icebp
stos
or
sbb
dec
or
jge
jnp
dec
idiv
xchg
inc
dec
sub
xor
fld
pushf
xlat
repz
or
push
outs
push
test
inc
push
(bad)
aaa
cmp
or
or
(bad)
jmp
xor
shl
ret
push
sar
jno
imul
or
sbb
ja
(bad)
cdq
stos
or
mov
jg
inc
mov
and
push
mov
mov
jnp
cmps
aam
outs
xor
ret
fcomp
add
outs
or
sbb
sub
adc
jae
into
xchg
push
aad
retf
test
and
adc
jb
sar
hlt
cld
inc
or
mov
inc
xor
ret
mov
mov
fs
ins
lea
pop
mov
cdq
loopne
loop
daa
xlat
xchg
cwde
pushf
dec
sar
fabs
jmp
jg
rcr
mov
jns
pusha
jbe
xor
adc
xor
call
mov
les
sar
stos
stos
and
mov
xor
ror
mov
scas
lock
repnz
std
push
xchg
jae
mov
xchg
cmps
cdq
enter
adc
std
inc
add
lods
push
dec
cmp
call
mov
cmp
push
test
sar
stc
cmp
jmp
mov
push
jmp
mov
scas
std
sahf
jb
jae
in
mov
pop
das
lds
dec
popf
xor
jae
or
aam
ins
mov
outs
mov
pop
adc
fnstsw
inc
int3
cmps
loope
nop
aas
stc
pop
pusha
sub
test
jo
aam
fstp
fidiv
jno
jbe
stc
sti
scas
rol
jo
aas
ds
aaa
sub
inc
and
retf
cwde
ds
xor
add
outs
mov
jge
rol
pop
add
or
retf
add
lea
xchg
sbb
add
ror
xchg
hlt
push
retf
sbb
pop
push
xor
sbb
push
add
and
into
push
adc
dec
retf
stos
in
sub
add
sbb
xchg
les
or
addr16
adc
jmp
xchg
in
jp
aad
test
(bad)
lods
push
das
push
in
repnz
out
mov
pop
mov
ret
repnz
inc
and
xchg
add
xchg
sbb
pop
jp
cmc
jp
mov
adc
cdq
sub
jb
push
lods
push
cld
addr16
jae
mov
or
mov
(bad)
cdq
sub
mov
das
das
mov
mov
xor
(bad)
pop
cmps
shr
ins
xlat
jne
sbb
fisttp
ins
xchg
adc
cdq
adc
mov
jne
ja
outs
lock
(bad)
pop
pop
xchg
inc
sub
add
idiv
popa
scas
js
scas
pop
aam
lods
nop
mov
xor
loope
push
add
fsub
cmp
sahf
jmp
cmp
xlat
hlt
add
push
dec
add
js
push
push
and
mov
aaa
test
add
sub
sbb
adc
xor
les
fisubr
or
in
or
rol
push
sbb
test
jle
add
pop
jns
add
mov
sar
aas
sub
dec
popa
ss
mov
mov
test
stos
or
and
gs
and
jno
cmp
addr16
mov
sub
daa
dec
mov
inc
pop
add
cmp
push
and
mov
pusha
or
xchg
jle
mov
pop
inc
dec
test
push
(bad)
(bad)
cwde
sahf
dec
xor
cmp
ins
ds
xor
jmp
or
adc
xchg
js
cli
loopne
inc
retf
jbe
dec
sub
mov
retf
retf
or
jg
mov
mov
xor
std
repnz
cmp
neg
add
retf
lods
mov
je
mov
dec
sub
in
das
movs
add
and
or
sti
pop
xchg
cmp
mov
jecxz
push
dec
ins
mov
and
push
and
mov
xor
push
adc
adc
lods
aad
movs
aam
(bad)
push
adc
pop
popa
rep
js
fbstp
or
iret
jmp
outs
pop
sub
frstor
shl
popa
mov
lea
xchg
push
je
retf
aad
push
arpl
call
mov
jp
jl
push
pop
cmp
loopne
cmp
popf
rol
jae
lods
push
dec
stc
jno
dec
sub
sub
dec
adc
sub
ret
rol
invd
fidiv
rol
in
inc
shl
sub
(bad)
xchg
adc
cs
outs
pop
jl
mov
icebp
push
ret
test
xchg
xchg
ror
mov
sbb
jne
fnstcw
les
sbb
xor
cdq
mov
cdq
cmp
(bad)
push
retf
and
mov
dec
pop
xchg
mov
fs
mov
push
les
dec
jae
loope
movs
aaa
enter
sbb
hlt
add
out
out
out
jno
js
jge
adc
or
xchg
arpl
arpl
xor
push
sbb
mov
or
mov
and
pusha
mov
jp
(bad)
jp
sbb
jl
out
dec
xchg
and
mov
jo
fld
cmp
das
dec
xchg
add
sbb
loopne
adc
pop
xlat
ss
mov
ins
mov
and
jmp
adc
mov
add
adc
xor
adc
dec
push
inc
and
or
(bad)
test
mov
mov
or
loopne
aam
add
pop
movs
scas
or
xchg
mov
jbe
push
cmps
icebp
fidiv
jne
bound
rcr
dec
out
ins
fnstsw
in
push
dec
repnz
sbb
dec
retf
or
arpl
movs
popa
sti
sub
and
ds
cld
mov
retf
out
push
sbb
nop
cmps
cmp
push
pop
iret
iret
jno
cdq
and
xlat
lds
call
aas
rcr
sbb
repz
mov
clc
mov
out
push
mov
in
clc
scas
fnstcw
jl
fnstenv
js
sbb
sub
or
div
call
(bad)
pop
and
mov
clc
hlt
shl
cmp
cmp
jmp
lock
int
adc
cmp
mov
int3
test
sti
jnp
adc
scas
cmp
into
loope
fimul
pop
loopne
fdiv
dec
add
and
(bad)
pop
popf
and
popf
mov
adc
bound
sub
add
add
adc
in
and
stos
std
out
mov
es
sub
jns
pop
test
cmp
iret
add
dec
fcomp
enter
addr16
pop
sti
lods
inc
out
fld
jge
mov
mov
fdiv
lahf
movs
mov
xor
mov
retf
push
push
or
fwait
pop
and
xchg
fld
loop
or
push
add
ins
mov
mov
scas
xchg
jb
fcom
push
jmp
jg
sub
popa
ja
nop
adc
mov
pop
sbb
mov
jge
push
mov
cmp
dec
ror
loope
and
popa
out
xchg
xor
xchg
sbb
cmp
adc
int3
dec
out
inc
sbb
add
std
cmp
push
jo
sbb
fisub
adc
or
push
xor
jmp
mov
ins
outs
call
mov
loop
stc
or
push
pushf
push
sar
push
jecxz
jo
jmp
mov
jo
les
add
and
or
jo
adc
add
(bad)
mov
or
and
js
std
icebp
sahf
cld
adc
pop
fild
lods
out
stos
not
mov
out
xor
inc
nop
sbb
pop
mov
and
enter
cli
(bad)
push
add
int
add
jno
sbb
sub
cmp
fdiv
adc
mov
ss
popa
rcr
inc
or
ret
sbb
jle
jb
sbb
dec
sbb
sbb
sar
in
stc
add
adc
sub
pop
rol
mov
adc
add
inc
loopne
lods
pusha
or
mov
inc
xlat
push
retf
xchg
sahf
mov
sbb
(bad)
movs
add
scas
cmp
call
retf
icebp
arpl
loopne
adc
in
scas
dec
into
jno
cdq
arpl
daa
cmp
lea
push
and
jae
push
add
pushf
loop
loop
repz
and
push
sub
dec
(bad)
fcmovne
pop
lock
pop
sub
sahf
and
into
cmp
lds
in
hlt
adc
xchg
adc
inc
sub
inc
jecxz
paddw
int
int3
xchg
jae
xor
cmp
(bad)
clc
cld
in
jle
hlt
or
in
dec
or
jno
into
sti
fisttp
sub
sahf
or
stos
ss
and
mov
mov
fimul
cwde
jno
into
imul
cmps
sbb
out
sub
jge
(bad)
jne
pop
shl
pop
mov
into
out
and
xchg
push
mov
xor
add
bound
push
inc
inc
dec
sbb
ins
lods
mov
out
popa
fiadd
sbb
and
lahf
repz
fiadd
push
xchg
imul
mov
add
ret
cwd
mov
nop
cmp
push
pop
jnp
fs
out
in
cmp
sub
and
outs
fwait
jl
popa
cmp
and
stos
mov
imul
dec
addr16
adc
inc
adc
sub
or
ja
jp
cmp
ror
js
mov
out
pop
xchg
or
jge
xor
push
test
ins
xchg
mov
out
jle
sbb
fs
xchg
daa
enter
sar
add
test
mov
loop
gs
mov
dec
and
xchg
dec
mov
out
lock
test
mov
hlt
popf
add
inc
pop
mov
leave
xor
loope
mov
adc
fs
dec
daa
mov
push
sbb
sbb
scas
sti
push
call
std
xlat
pop
mov
or
or
shr
add
pop
inc
mov
loop
cmp
sub
scas
movs
stos
sbb
jo
inc
push
imul
adc
xlat
jne
cmps
mov
dec
addr16
int3
sub
and
mov
loop
sub
add
gs
js
and
mov
mov
ret
adc
ret
mov
fbstp
cs
aas
lock
mov
gs
ret
ror
sbb
outs
and
dec
cmp
mov
inc
or
adc
in
jae
xor
(bad)
ror
cmp
xlat
add
mov
mov
mov
adc
mov
mov
fld
jo
out
test
div
(bad)
mov
lods
fnstsw
xlat
mov
test
int3
dec
mov
out
dec
push
pop
aam
mov
xchg
dec
bound
shr
dec
scas
iret
push
mov
mov
inc
xlat
mov
jle
rcl
das
fsubr
es
mov
ret
sbb
mov
dec
adc
into
shl
sar
cmp
clc
dec
lds
lods
ss
movs
xchg
pusha
mov
loope
out
mov
mov
call
sbb
lahf
daa
mov
sti
pop
imul
fs
xlat
push
push
inc
adc
je
int
and
xor
sbb
movs
add
jb
inc
aad
fnsave
xor
xchg
push
or
int
nop
add
movs
sbb
movs
jb
xor
(bad)
sti
fsubr
test
dec
or
cmps
cmc
pusha
add
adc
pop
pop
sbb
or
retf
call
add
inc
movs
rcr
push
push
xchg
aaa
push
gs
call
or
xor
div
xchg
gs
rcr
jle
push
sub
ja
inc
xchg
ins
sub
xchg
int
test
pop
or
repz
fwait
push
mov
popa
jb
add
in
mov
add
jo
out
shl
ficomp
fdivr
fisubr
sub
lahf
popf
and
shr
int3
xchg
xchg
and
fs
and
push
push
sbb
jmp
sahf
pop
push
and
pop
sub
push
mov
in
mov
(bad)
(bad)
fst
cmp
xchg
xor
sub
outs
mov
inc
nop
sub
ds
fldenv
pop
jnp
mov
imul
loopne
dec
dec
push
add
or
and
jo
inc
xchg
push
popa
push
dec
inc
enter
mov
jmp
aaa
mov
sub
cmps
stos
dec
dec
sub
cmp
inc
mov
add
dec
mov
jae
enter
inc
or
adc
(bad)
dec
inc
jno
into
jmp
mov
and
mov
cdq
sbb
(bad)
mov
xor
cmp
push
call
inc
add
and
dec
shl
inc
push
dec
dec
pop
mov
fadd
add
pop
mov
cmp
mov
push
xchg
loop
shl
imul
pop
push
inc
adc
sbb
add
or
repnz
cs
mov
adc
xor
fimul
push
aad
sub
sbb
movs
out
lock
je
or
sar
ficomp
xchg
xchg
and
mov
sbb
call
ss
push
mov
jo
in
pop
jle
or
arpl
pop
adc
leave
push
mov
arpl
dec
dec
xor
add
(bad)
ja
call
ins
aam
in
std
setbe
xchg
push
js
jle
out
lahf
jno
inc
enter
push
cmps
(bad)
mov
sub
push
jne
bound
fistp
in
xor
sub
mov
fcom
xchg
push
inc
dec
cdq
dec
and
lods
jne
test
ss
das
push
test
and
push
or
jb
imul
sbb
or
and
add
fidiv
pusha
xchg
pop
cmp
adc
cld
int3
sub
mov
ss
test
sub
xor
jb
sub
and
cmp
mov
xor
outs
int3
mov
es
pop
mov
fimul
and
and
popf
in
cmp
pop
dec
fisttp
movs
sub
cli
sub
sar
xor
test
ret
sti
call
add
mulps
fsub
mov
dec
adc
cs
test
sbb
call
jo
nop
sub
imul
dec
repz
or
popa
mov
loop
icebp
push
retf
daa
shl
retf
sub
mov
sbb
mov
push
shr
sbb
inc
push
aad
jecxz
add
jno
mov
ret
aas
rcr
mov
jns
lods
xlat
imul
ins
mov
ins
push
xchg
jecxz
data16
or
jecxz
cmp
mov
int
adc
push
ins
pop
aaa
or
xchg
mov
test
in
push
pop
push
pop
adc
pop
repnz
rol
shr
cmp
sub
mul
sub
xor
bound
and
jns
jecxz
shr
mov
add
das
inc
push
sbb
sbb
lds
cmp
pushf
ins
shl
mov
sbb
push
cwde
jecxz
cs
jle
mov
or
sbb
fistp
movs
inc
sti
repz
into
in
push
add
lahf
cmp
sbb
out
mov
xor
adc
and
xor
pop
pop
mov
jge
cmp
pop
pop
jmp
sbb
xchg
xor
xor
sub
xor
loopne
mov
aam
in
test
cmp
daa
sub
mov
mov
ds
jmp
jbe
xor
xor
add
fs
retf
jae
pop
pushf
mov
jbe
jp
mov
mov
cmps
xchg
pop
sub
pop
mov
mov
scas
clc
cld
stc
xor
adc
or
in
sbb
pushf
call
data16
jnp
jg
fbld
(bad)
or
pop
xchg
clc
dec
(bad)
mov
push
add
mov
movs
mov
ds
mov
pop
add
call
ror
or
xchg
inc
pusha
retf
inc
xchg
cwde
leave
cmp
cmp
das
mov
jecxz
jo
ins
call
fs
cmc
ins
jnp
mov
fs
rcl
or
test
scas
cdq
sbb
mov
ret
or
mov
mov
outs
push
int3
cmp
ds
cdq
cli
and
inc
add
dec
inc
stc
xchg
inc
jae
inc
call
pop
movs
not
enter
push
test
test
mov
ror
out
xor
shl
cmp
sub
adc
mov
movs
and
leave
push
test
(bad)
mov
out
nop
(bad)
sub
test
sbb
dec
or
pop
or
push
add
mov
shl
pushf
dec
mov
push
adc
int
dec
out
dec
addr16
movs
gs
sbb
sub
in
push
sbb
fucom
stc
out
adc
outs
outs
clc
adc
(bad)
xchg
and
es
xor
mov
mov
dec
pusha
add
mov
fs
bound
sbb
imul
push
call
addr16
pop
sahf
sahf
add
pop
aam
outs
stos
push
sbb
hlt
and
ret
(bad)
xor
mov
call
in
mov
cmp
jne
popa
pop
movs
mov
(bad)
add
test
sahf
sbb
and
sar
push
dec
jns
ja
bound
ss
rcl
and
lods
xor
adc
add
jb
jp
mov
mov
cmps
test
or
mov
sbb
loopne
ds
fnstenv
jmp
test
xchg
test
jecxz
pop
push
out
mov
cmp
call
(bad)
lods
inc
cmp
in
cmp
sbb
shr
pop
dec
push
clc
int
sub
pop
mov
rcr
add
inc
loopne
jg
retf
xchg
repz
cs
cli
push
mov
push
mov
loope
jle
aaa
daa
out
xchg
adc
push
hlt
jbe
lods
(bad)
lea
dec
inc
ror
jae
das
dec
xor
cmp
retf
pop
(bad)
int
sub
iret
js
js
jmp
dec
add
cmp
xor
cmp
fld
mov
mov
call
ds
cld
or
fidiv
outs
outs
jno
jg
in
outs
out
xchg
cli
push
mov
(bad)
xchg
lock
inc
mov
mov
outs
in
mov
loopne
(bad)
repz
(bad)
scas
cmp
cld
mov
in
outs
psubb
adc
mov
add
popa
xchg
push
stos
push
inc
out
dec
loop
jo
cmps
add
pop
pop
push
fidiv
xchg
std
out
or
pop
push
pop
adc
adc
ins
adc
mov
dec
js
pop
jmp
pop
shl
sbb
cld
(bad)
fisttp
push
xchg
push
test
add
pop
or
add
or
inc
(bad)
xchg
dec
mov
int
lock
sbb
push
jmp
push
sbb
mov
inc
mov
ret
push
jmp
fcmovnu
rol
push
sbb
fild
xchg
inc
das
adc
(bad)
stc
or
mov
pushf
mov
sub
jle
mov
inc
sbb
dec
ror
sahf
and
icebp
je
leave
in
add
xchg
and
mov
ret
rol
sub
jle
xchg
loopne
mov
cmp
shl
retf
bound
sbb
jmp
mov
mov
add
jl
cmc
mov
xor
adc
int
adc
(bad)
xchg
add
jle
adc
fimul
xchg
jb
jmp
sub
jecxz
lea
cdq
adc
jno
nop
jno
outs
in
push
push
xchg
jmp
cmp
mov
push
jmp
push
jmp
lods
int3
int3
xlat
out
sbb
push
xchg
adc
out
mov
nop
xor
mov
dec
scas
stos
imul
or
mov
sbb
and
ficomp
adc
or
call
lds
lods
lods
or
or
cmps
dec
pop
cmp
and
jne
bnd
aaa
and
movs
outs
jmp
pop
jns
jnp
or
add
xchg
mov
fmul
(bad)
sbb
push
add
mov
jno
scas
jmp
mov
in
adc
push
popa
pop
push
mov
cld
add
sub
mov
bound
(bad)
bound
adc
sbb
ss
push
les
test
sbb
sbb
std
int
mov
imul
in
in
out
mov
outs
nop
(bad)
in
inc
iret
scas
add
push
mov
mov
adc
maxps
or
jne
inc
mov
sahf
lock
clc
push
xchg
ret
push
(bad)
pushf
inc
je
aaa
and
mov
popa
(bad)
pop
xlat
xor
fwait
or
adc
rcr
out
sub
push
call
iret
inc
sub
movs
or
jmp
xor
adc
inc
hlt
mov
stc
pop
add
cwde
jo
adc
scas
movs
sub
rcr
movs
mov
push
mov
add
push
sbb
or
loopne
out
call
add
pop
out
int3
retf
(bad)
jnp
cmp
out
inc
sbb
mov
jnp
jp
in
sbb
shl
test
enter
jbe
imul
sar
cmps
push
jg
cmp
leave
(bad)
push
push
xor
jmp
dec
inc
or
inc
and
add
out
sub
cmp
cmps
lods
xlat
and
adc
dec
out
popf
dec
push
adc
or
adc
lock
leave
push
fs
mov
sbb
stc
add
pop
and
loope
dec
ja
outs
mov
mov
addr16
pop
inc
sub
sbb
push
outs
xor
pop
and
out
mov
mov
sbb
ret
imul
add
aad
ja
ja
lods
xlat
adc
sbb
cmp
xor
in
cmp
aam
sbb
pop
(bad)
cmp
ins
inc
rcl
and
add
add
ror
dec
or
or
test
popa
mov
adc
dec
lods
cmp
test
cmps
push
hlt
test
jae
sbb
add
mov
cvtdq2ps
fdiv
imul
test
retf
adc
out
adc
out
inc
jne
push
mov
dec
or
dec
sub
pop
xchg
mov
pushw
popf
iret
shl
lods
add
pushf
lock
add
add
pop
push
movs
inc
arpl
sbb
add
mov
xchg
rcl
push
imul
jp
add
jae
sub
mov
xor
xor
sbb
pop
retf
iret
out
dec
iret
iret
xor
pushf
out
lahf
pushf
loopne
leave
add
xchg
mov
adc
les
mov
and
and
xchg
leave
or
addr16
dec
enterw
xor
div
jmp
cmps
scas
pop
outs
(bad)
call
gs
xor
js
shl
imul
and
hlt
push
and
jae
cmps
arpl
fist
in
push
ds
aad
test
mov
mov
(bad)
hlt
jge
mov
cmp
push
les
push
jmp
neg
xchg
pop
sub
pop
scas
xlat
inc
mov
fisttp
mov
sub
jmp
dec
packssdw
sbb
dec
test
nop
(bad)
jle
out
jg
or
lods
adc
adc
adc
fdivp
push
mov
or
sti
fisubr
in
loope
ret
sbb
iret
jg
cwde
push
ds
sahf
jns
push
mov
mov
or
sbb
clc
sbb
daa
ins
scas
jle
xor
xchg
jg
lods
sub
or
cmp
mov
mov
sbb
add
mov
sbb
int3
js
xor
fstp
jle
lea
mov
arpl
or
jmp
mov
sahf
jecxz
cmp
stc
je
sub
inc
or
stos
fidivr
jnp
cmp
mov
lea
push
xchg
test
es
push
mov
dec
(bad)
fsub
stc
shr
sub
jae
popa
xor
cmp
lods
ja
cmp
stos
mov
push
mov
cwde
sti
fisub
sub
adc
pop
push
call
xor
mov
lods
mov
stc
aaa
dec
or
and
sar
mov
ins
lea
mov
sti
inc
sbb
arpl
cli
cmp
fwait
push
add
mov
xor
push
xchg
pop
or
rcl
addps
lods
push
and
popa
add
sbb
rcr
push
(bad)
cmp
lods
or
inc
cli
std
xchg
pop
adc
inc
mov
cwde
or
inc
pop
adc
adc
dec
fisttp
pushf
mov
call
adc
jnp
dec
sub
ds
add
mov
mov
mov
or
cmp
fsub
fs
sub
dec
or
pop
jbe
cmc
jge
pop
mov
mov
mov
(bad)
jno
ret
adc
iret
into
xor
sub
rcr
xchg
xchg
cmp
clc
mov
call
daa
addr16
lahf
dec
xor
shl
inc
or
aas
loop
cmps
iret
clc
cld
inc
ret
hlt
jmp
push
test
jo
inc
or
push
loope
ja
loope
mov
ins
neg
xor
xchg
mov
inc
cli
retf
test
std
jle
xchg
sbb
nop
and
sub
test
fmul
inc
mov
loop
pop
xchg
mov
fcomip
adc
or
movs
imul
fiadd
sub
(bad)
sar
mov
jb
xlat
push
adc
cmp
int
scas
sbb
mov
retf
inc
imul
test
jae
(bad)
popa
jle
aam
jno
or
jnp
repnz
inc
push
push
retf
mov
jp
fistp
pop
outs
rcl
ret
sub
xchg
pop
cmp
fistp
sbb
aas
mov
inc
push
push
adc
dec
push
push
test
xchg
mov
cmp
retf
jne
ror
and
mov
or
lds
or
dec
sub
stos
cmp
sbb
hlt
mov
ficomp
repnz
pop
leave
das
mov
xchg
imul
add
shl
add
inc
call
and
fs
mov
int
cmp
jnp
(bad)
pusha
cmc
mov
adc
movs
data16
dec
push
mov
mov
and
scas
aaa
cmp
adc
push
push
gs
in
fcomip
mov
outs
jno
jae
xchg
out
rol
adc
mov
ss
cmp
jle
mov
push
rcr
mov
mov
sbb
les
fwait
push
mov
(bad)
xchg
mov
mov
jle
add
into
push
and
movs
xor
(bad)
sub
sbb
arpl
call
push
ret
cli
lea
sbb
pop
or
mov
inc
add
pop
sub
imul
test
jmp
ja
mov
loop
inc
je
(bad)
sub
call
rol
xchg
xor
(bad)
push
sub
xchg
es
call
gs
cmp
mov
xchg
cdq
in
dec
dec
fsubr
shl
sbb
sbb
lods
rcl
ret
setge
rol
dec
popf
dec
add
ss
jns
push
daa
scas
inc
cmp
lock
leave
cmp
cmp
cmp
jno
cmp
mov
imul
add
xchg
and
movs
pop
xor
xor
int3
into
iret
xor
movs
xor
mov
repz
cmp
aas
pusha
mov
add
movs
mov
jns
mov
loope
xchg
clc
out
xchg
jno
out
mov
cmp
xor
pop
xchg
dec
pop
sub
std
xchg
neg
in
jbe
mov
add
jmp
mov
mov
pop
jecxz
int
push
or
push
call
loope
push
mov
xor
xor
mov
popa
jnp
push
or
push
dec
(bad)
(bad)
stc
rcr
fiadd
push
inc
sub
test
jae
push
call
enter
jle
cdq
pmaddwd
rol
hlt
cwde
retf
dec
popf
rol
mov
out
test
dec
dec
sbb
pop
rcl
jae
shl
bnd
xchg
xor
retf
adc
pop
pusha
(bad)
sbb
and
inc
jnp
dec
inc
inc
pop
iret
out
jae
loope
cmp
pusha
add
inc
pop
and
aas
sbb
out
movs
nop
pop
add
mov
mov
inc
scas
mov
aam
lods
inc
sti
popa
fsubrp
push
mov
jp
loop
loop
jbe
movs
ficomp
jb
xchg
add
das
sub
cmp
dec
adc
scas
sub
push
push
arpl
retf
xchg
addr16
add
dec
and
mov
mov
or
imul
sub
pop
ins
mov
push
push
and
call
xor
add
fdivr
mov
jae
cwde
leave
rcl
sbb
cmp
sbb
xchg
mov
jno
frstor
pop
popa
mov
mov
add
adc
xlat
pop
sub
fcom
mov
jl
sub
into
dec
dec
ds
(bad)
jecxz
arpl
jmp
push
sbb
jle
sbb
push
je
adc
jno
test
dec
dec
or
sbb
loop
outs
mov
int3
adc
add
and
ficomp
mov
inc
data16
dec
dec
mov
jg
adc
jo
xchg
jmp
lods
(bad)
cmps
jbe
push
jmp
in
lea
ds
mov
scas
sub
sbb
retf
hlt
jo
xchg
ror
lock
adc
sub
pop
mov
inc
ins
mov
cmc
cli
jecxz
inc
cmp
jl
hlt
mov
sbb
popa
push
push
mov
hlt
add
and
add
xchg
dec
adc
xor
xor
xchg
adc
push
push
xchg
retf
xor
out
pop
lock
int
ss
adc
cdq
add
out
or
mov
jecxz
mov
in
enter
inc
aas
test
icebp
in
lahf
lock
clc
or
xor
or
shld
mov
ss
(bad)
idiv
scas
pop
lods
push
push
pop
and
push
neg
mov
push
adc
fbld
sbb
loope
movs
imul
(bad)
fwait
test
xor
or
adc
pop
mov
scas
pushf
call
ds
pop
test
fadd
je
inc
jl
fcomp
sti
pop
jns
mov
dec
rcr
cmps
hlt
mov
inc
(bad)
(bad)
jno
jge
in
xchg
sbb
add
bound
mov
lods
ret
or
mov
or
out
and
push
loop
dec
dec
xor
(bad)
test
inc
mov
adc
lahf
jns
inc
and
sub
ror
and
sbb
sub
inc
test
test
hlt
mov
jp
mov
sub
xchg
mov
cmp
xchg
pop
(bad)
repz
popf
fild
xchg
jmp
adc
fs
(bad)
sbb
dec
mov
test
pop
adc
dec
shl
xchg
xchg
imul
loope
fstp
pop
pop
and
push
mov
and
adc
or
cld
lods
retf
or
push
stos
adc
pop
scas
mov
add
(bad)
sbb
push
repz
int3
push
mov
jns
and
jecxz
jnp
and
into
xchg
push
fwait
or
mov
or
mov
sbb
adc
sbb
adc
adc
les
pusha
mov
imul
xor
mov
push
inc
sbb
sbb
inc
jns
pop
jmp
pusha
push
adc
add
loope
jmp
xor
ret
adc
push
pop
(bad)
enter
lods
xchg
movhps
inc
mov
mov
adc
adc
icebp
gs
in
(bad)
ror
div
jmp
sub
icebp
cmp
sahf
cmp
test
pushf
fistp
push
imul
inc
fcomp
jg
adc
test
mov
xor
out
jmp
mov
(bad)
scas
outs
and
xchg
vpunpcklqdq
rol
pushf
inc
dec
popa
je
add
dec
add
mov
xchg
es
fst
xchg
cmp
scas
xor
cdq
and
inc
and
pop
jecxz
jmp
pop
fdivr
(bad)
xor
xor
xchg
es
or
push
xchg
clc
clc
ret
idiv
icebp
cmp
jecxz
add
inc
je
xchg
mov
sti
outs
or
sub
sub
dec
jl
repnz
jmp
mov
xchg
sbb
mov
outs
pop
ins
mov
jg
add
in
jbe
fcmovu
(bad)
out
out
push
dec
dec
dec
push
popa
cmp
push
test
leave
mov
ret
call
sub
xchg
cmp
dec
jb
sub
jge
loope
or
das
cmps
add
adc
scas
mov
jo
pusha
push
gs
or
push
push
jle
pop
sub
lods
mul
mov
in
cmp
adc
xchg
retf
mov
enter
sbb
xchg
jecxz
mov
push
lds
or
add
or
jno
add
rsm
sbb
out
jmp
nop
ret
repnz
or
mov
jo
push
adc
mov
cmp
add
jns
popa
out
mov
cs
pusha
and
and
mov
loope
or
inc
adc
add
pop
pushf
bound
jo
jp
jns
inc
call
mov
push
push
call
or
mov
cmp
js
inc
call
push
cmp
inc
mov
sub
jmp
xchg
push
(bad)
arpl
(bad)
fwait
aaa
outs
push
push
and
mov
add
lods
sub
push
fdiv
cs
cs
js
jp
data16
cmp
popa
or
xchg
mov
lods
inc
add
xchg
fsubr
fidivr
sub
jmp
idiv
adc
mov
call
add
inc
cmp
mov
push
sbb
jb
inc
push
mov
sbb
into
imul
outs
xor
adc
iret
mov
push
ror
movs
test
pop
leave
inc
(bad)
add
or
cmp
jmp
inc
xchg
je
pop
mov
sbb
push
cmp
fdiv
xor
(bad)
mov
cmc
rcl
mov
imul
pusha
cmp
in
ss
xor
movs
popa
loopne
xchg
cwde
inc
jmp
xor
sbb
cmp
repz
cdq
ins
add
xchg
push
movs
push
push
xor
fwait
push
push
or
jno
aas
movs
cmc
cli
mov
push
mov
xlat
inc
push
leave
xor
loopne
leave
mov
push
icebp
mov
fbstp
or
cmp
aas
aas
(bad)
mov
jb
movs
add
pop
lods
mov
pop
loop
pop
inc
mov
adc
xchg
xchg
pop
mov
std
lock
retf
sub
mov
mov
outs
icebp
lock
loopne
sti
mov
pusha
push
test
lea
adc
retf
scas
out
dec
lods
cmps
push
add
lods
pop
mov
jmp
and
mov
loopne
pop
retf
xlat
jge
push
push
push
fnstenv
adc
test
mov
and
mov
cmps
imul
clc
std
mov
movs
and
lods
jge
lods
jecxz
sbb
or
pusha
ins
std
pushf
mov
sbb
sbb
or
ins
arpl
cmp
ficom
pop
call
mov
in
sti
push
rcl
test
add
push
pusha
xchg
call
out
inc
sti
jae
call
inc
inc
int
push
push
cmp
xchg
inc
out
sub
lock
mov
push
xor
cmp
shl
cmps
adc
xlat
mov
retf
inc
xchg
fistp
(bad)
popa
in
stos
add
imul
sub
mov
adc
sbb
push
push
adc
push
mov
pushf
adc
cmps
xor
and
in
lock
test
jb
fwait
das
lahf
jno
in
sti
cmc
(bad)
inc
ins
scas
jl
jns
stos
sbb
loop
add
ficomp
les
jo
mov
push
rcr
pop
pop
add
cmc
sbb
aaa
pop
fnstsw
jmp
out
stos
push
jbe
stos
adc
std
cmp
xchg
cmp
xor
lahf
lahf
mov
ins
rcr
push
adc
repz
adc
scas
mov
sub
into
iret
adc
mov
pop
jb
push
imul
lds
dec
add
dec
xchg
pusha
gs
rcr
outs
sbb
fidiv
aam
and
repnz
ror
and
xchg
dec
add
push
and
push
imul
dec
xor
or
add
pop
jbe
jno
ret
sbb
jmp
mul
cmp
mov
dec
sbb
inc
sar
push
ret
mov
dec
test
inc
jp
icebp
hlt
test
sub
pop
add
xchg
scas
dec
shr
fldcw
jnp
arpl
cwde
je
jne
enter
(bad)
mov
jmp
and
retf
jecxz
fmul
push
scas
das
loop
imul
cmps
mov
hlt
fadd
and
fs
ja
daa
adc
idiv
mov
sbb
pop
arpl
jmp
cmp
cmp
adc
push
(bad)
dec
sbb
jmp
pop
loop
aas
sti
add
push
xchg
mov
or
fst
inc
dec
movs
imul
ror
call
aaa
js
pop
mov
xchg
pop
imul
inc
inc
sub
pop
jne
jg
fndisi(8087
in
add
repnz
outs
outs
outs
mov
out
push
push
adc
inc
and
pop
jnp
push
jl
mov
out
dec
retf
adc
sbb
sahf
out
shl
inc
push
hlt
sbb
(bad)
ret
idiv
cmc
stos
add
cmp
cdq
adc
xchg
dec
imul
fst
jns
arpl
sbb
in
mov
aas
rcr
sbb
mov
jne
and
into
(bad)
(bad)
rol
or
push
mov
aam
sub
dec
fnstenv
push
push
(bad)
dec
(bad)
sub
lods
fiadd
push
dec
mov
outs
ins
sub
test
push
ins
xchg
lds
push
and
xchg
outs
adc
leave
or
adc
lods
ror
popa
cmp
jle
cmps
imul
jp
sub
jb
jo
mov
pop
sbb
ds
out
out
ds
mov
arpl
sbb
xchg
dec
mov
inc
sbb
push
popa
jle
mov
ja
jno
out
jns
inc
jmp
xchg
or
jl
(bad)
scas
fsubr
shl
bound
imul
out
jno
jns
mov
or
repnz
inc
pop
adc
es
aad
and
(bad)
mov
mov
cmp
jnp
and
push
aas
mov
(bad)
ret
push
adc
adc
nop
push
loope
xchg
in
jbe
cmp
aas
sti
(bad)
pop
ins
dec
jg
push
cdq
xor
div
push
test
(bad)
dec
inc
cli
mov
push
es
or
or
adc
xlat
jno
aas
jae
lahf
or
jne
mov
(bad)
loope
mov
push
lods
and
sub
inc
pop
xor
shl
inc
and
sbb
arpl
sbb
adc
push
sbb
jns
cwde
push
cmp
jmp
cmp
out
les
and
adc
xchg
mov
je
js
dec
pop
jle
push
jle
adc
sbb
or
fbld
sbb
lds
ror
xor
mov
xchg
cmp
dec
dec
adc
ret
jne
mov
popa
cli
sbb
cs
or
xchg
fidiv
xlat
add
call
or
xor
test
dec
push
jp
xchg
inc
dec
add
(bad)
in
hlt
add
out
(bad)
ret
out
dec
xlat
push
cwde
int3
cmps
adc
mov
loope
pop
jg
int
sbb
in
push
mov
sbb
jmp
jo
not
dec
push
pusha
mov
inc
mov
and
push
push
adc
loop
push
(bad)
test
fist
xor
cmp
popa
mov
mov
test
movs
cmp
add
cs
jno
mov
xchg
stc
xchg
retf
pop
jmp
outs
ror
hlt
ror
mov
enter
jmp
ds
jmp
cmp
cmp
jb
aad
pop
mov
sub
mov
cs
scas
cmp
lahf
movs
xchg
sti
inc
or
fld
mov
ret
mov
test
jbe
cwde
xor
and
pop
inc
adc
icebp
js
sbb
inc
adc
add
in
pop
(bad)
xlat
lea
gs
pop
jne
adc
fild
mov
or
mov
popa
cwde
inc
sub
fnstenv
xchg
dec
mov
hlt
ins
dec
rol
into
mov
sbb
adc
push
sub
addr16
ret
or
push
fwait
shr
push
mov
ins
sub
jmp
cmps
xor
inc
jmp
imul
push
dec
pop
pop
xor
lds
adc
xchg
adc
aas
pushf
shl
ss
mov
push
arpl
and
xor
lea
xchg
mov
js
bound
aad
ja
idiv
pop
mov
sub
dec
lods
push
or
jl
(bad)
scas
fsubr
adc
xor
xchg
out
into
scas
into
icebp
inc
add
cmps
imul
movs
xor
cmp
cmp
setne
mov
ret
ret
sbb
xlat
or
or
sbb
aaa
loope
outs
and
enter
jno
call
jmp
pop
lods
push
mov
jae
shr
mov
xchg
les
mov
xchg
push
sub
push
aam
mov
pop
ret
inc
jl
(bad)
and
rcl
and
test
pop
add
or
pop
add
icebp
pop
or
xor
add
test
xor
mov
dec
mov
adc
fld
and
xchg
pop
xchg
loopne
sbb
add
cmc
xchg
push
xor
jns
fadd
jp
call
or
gs
cmp
and
outs
scas
icebp
sbb
inc
cmp
outs
add
dec
xchg
push
repz
inc
dec
mov
jmp
ret
fisubr
push
mov
or
xor
stos
mov
fdiv
sysenter
out
cmp
in
jb
movs
xchg
pop
sahf
call
xchg
mov
xor
int3
iret
jo
cdq
popa
push
mov
mov
imul
sub
xchg
out
dec
into
dec
jo
(bad)
sub
seta
das
push
popf
dec
ror
mov
jp
in
or
lahf
outs
icebp
xacquire
adc
add
jg
(bad)
fyl2xp1
adc
mov
xor
das
dec
imul
xor
addr16
pop
cld
or
stos
int3
xchg
sbb
aas
aas
loope
out
pop
sub
inc
mov
daa
jnp
mov
aad
je
add
lock
xor
or
and
(bad)
sti
std
push
(bad)
(bad)
(bad)
mov
dec
lahf
lods
shr
jle
mov
test
cmp
or
sbb
inc
sbb
pop
add
jg
fsubr
dec
adc
mov
mov
xchg
out
(bad)
pop
xchg
std
and
mov
and
dec
inc
sub
call
or
sbb
push
fistp
or
mov
sbb
sbb
popf
daa
jae
lods
xchg
mov
push
shl
xor
fwait
shl
mov
sbb
pop
int
xchg
hlt
cmp
call
push
jmp
popf
(bad)
popa
pop
xor
mov
dec
jmp
fwait
imul
aam
dec
pop
inc
pop
aaa
or
scas
dec
mov
xor
and
jl
scas
xor
sub
out
mov
sub
add
push
pushf
dec
dec
jno
cdq
loope
xor
mov
mov
outs
and
sbb
xchg
sub
push
adc
jle
in
dec
movs
pop
mov
(bad)
outs
outs
outs
jo
cmc
push
cmc
popw
sub
loop
pop
and
xor
mov
ds
lock
fiadd
cmp
mov
inc
push
mov
sbb
push
sub
xchg
cmp
pop
or
shl
or
out
mov
outs
mov
jle
fld
cmp
push
mov
mov
ds
xor
shl
dec
sti
jne
jg
cmc
sbb
iret
iret
js
jns
jle
pop
movs
adc
push
pusha
xor
and
and
mov
rcr
scas
das
sbb
in
loop
es
repnz
leave
pop
xchg
and
into
mov
div
fdivr
mov
jg
add
push
hlt
pushf
push
sbb
jmp
and
jae
(bad)
sub
jle
mov
fwait
adc
inc
mov
push
pop
push
jp
and
mov
lods
add
aaa
jnp
mov
cmp
mov
sub
ret
adc
xchg
xor
cmp
sub
mov
jb
mov
movs
sbb
dec
inc
xchg
or
push
sub
push
out
shl
or
(bad)
mov
pop
pop
fild
pop
mov
imul
ret
and
or
cmp
jmp
push
push
mov
div
jg
xchg
retf
dec
push
repz
mov
int
mov
lahf
jle
ret
int
pop
push
sahf
in
inc
push
mov
xor
repz
jl
cmp
jecxz
fstp
gs
jbe
mov
rcr
xchg
cmps
sub
shl
sbb
jl
push
jo
pop
inc
pop
loopne
icebp
adc
outs
lock
clc
mov
iret
(bad)
xor
je
sar
popf
xor
pop
cli
daa
dec
loop
and
sub
or
sbb
xlat
jg
mov
(bad)
jecxz
adc
cmp
inc
pop
popa
dec
jge
iret
jp
jle
mov
sahf
ins
sub
test
mov
pusha
push
xchg
fwait
sub
jmp
int
jg
cmp
jp
jle
out
jnp
adc
sbb
pop
push
push
mov
xor
test
add
cmp
repz
sbb
fs
retf
or
or
or
and
xlat
jne
push
xor
ins
leave
dec
fistp
fs
test
xchg
sahf
mov
cmps
pop
pop
(bad)
ror
dec
and
lods
lods
loop
lea
push
call
loop
push
mov
scas
shl
cmps
call
test
mov
fadd
je
jg
out
cli
push
push
call
test
or
mov
call
stos
dec
xor
inc
dec
je
sar
in
add
jg
add
fistp
dec
sbb
ins
cmp
push
outs
outs
jo
cmc
push
int
xor
xchg
sub
push
xchg
inc
xor
pop
mov
int
pop
sub
retf
xchg
shl
fdiv
fcomp
ret
jl
das
movs
jmp
mov
rcr
scas
pop
cwde
cmp
(bad)
pop
test
mov
dec
cmp
daa
jle
mov
xlat
in
idiv
cld
mov
fistp
sbb
fldcw
jmp
sub
mov
jecxz
push
jle
jno
adc
xor
jno
(bad)
(bad)
movs
xchg
out
cmp
cli
lods
sbb
push
add
sub
mov
out
cmp
inc
xor
adc
pop
and
add
fild
jbe
or
imul
mov
call
fidivr
or
loopne
stos
sbb
or
or
retf
sar
mov
adc
mov
dec
mov
xor
(bad)
xlat
dec
add
xchg
cmp
sbb
pop
shl
int3
push
mov
mov
outs
daa
ret
je
sbb
arpl
(bad)
adc
push
std
and
mov
mov
sub
jge
icebp
jge
out
clc
cld
push
mov
jo
sahf
popa
ds
loope
jp
cmp
not
sbb
inc
gs
rol
push
pushf
mov
test
jg
imul
adc
arpl
lock
bound
stc
loope
retf
out
sar
sub
add
daa
cmps
cmps
cmp
inc
push
outs
fbld
sub
adc
pop
and
jecxz
cmp
cmp
ins
int
sub
iret
mov
fstp
xchg
and
lahf
push
test
ret
or
scas
push
xchg
cmp
sub
(bad)
ds
pop
jecxz
(bad)
push
aas
(bad)
clc
and
jge
test
xor
test
fs
hlt
add
in
jp
les
xchg
out
mov
jecxz
cmp
retf
dec
push
push
pop
retf
mov
std
xchg
(bad)
jp
cmp
pop
jp
and
shl
dec
mov
add
sbb
add
pusha
and
add
out
mov
(bad)
push
xchg
adc
sbb
xchg
inc
cs
test
cmp
push
and
or
retf
jne
add
inc
inc
dec
adc
je
das
mul
lahf
sbb
imul
call
or
(bad)
dec
je
jmp
add
inc
popf
mov
fisttp
cs
mov
jno
retf
xor
adc
xchg
stos
ror
fcomp
sbb
sbb
pop
push
xor
jl
ja
push
into
scas
cs
popf
into
adc
ins
push
arpl
lock
cmp
cmp
cmp
retf
sbb
sub
mov
out
aas
loop
jmp
fsubr
or
outs
push
push
sbb
nop
std
mov
jb
pop
movntps
cmp
iret
das
push
jge
ins
ss
cwde
ja
xor
mov
movs
in
dec
dec
ret
daa
push
xchg
add
lds
(bad)
jmp
test
out
addr16
pop
dec
adc
shr
xchg
and
aam
mov
scas
xchg
fidivr
dec
out
sbb
xor
and
pusha
pushf
stos
and
(bad)
push
loop
mov
dec
repz
neg
pop
and
scas
movs
fst
mov
stos
test
sub
add
add
or
push
les
cs
rcr
xlat
push
in
add
adc
mov
ficomp
dec
mov
add
loope
mov
mov
and
fist
dec
arpl
mov
push
mul
cwde
inc
jbe
mov
int
jecxz
xchg
fadd
xchg
inc
popa
xchg
call
xor
xchg
(bad)
pop
cmovle
cmps
or
jmp
outs
jbe
(bad)
cs
ja
fs
sti
vmovhps
sbb
imul
loop
sbb
test
and
push
adc
pushf
popf
loop
call
shr
cmc
xchg
pop
ins
mov
outs
repnz
mov
pandn
mov
push
add
call
das
(bad)
clc
bnd
mov
lods
or
sub
int
ret
pop
addr16
cmp
mov
sub
mov
add
push
fadd
and
mov
das
out
outs
pop
jnp
jno
cmc
sub
enter
out
add
mov
push
shl
fisttp
fidiv
fwait
shl
out
cmp
ds
pop
jg
pop
(bad)
clc
inc
sub
or
jno
mov
xor
cwde
sub
push
mov
push
fimul
outs
and
movs
push
xor
sbb
inc
hlt
ret
call
stos
cli
retf
shr
xchg
mov
int
sbb
popa
xchg
fisubr
add
mov
dec
mov
pop
int
xchg
ret
or
sbb
xchg
shl
and
sub
add
shr
and
enter
adc
popa
js
lods
sbb
jp
push
add
gs
adc
push
adc
dec
mov
addr16
pop
icebp
pop
mov
sub
xor
mov
repnz
mov
pop
stos
xchg
push
mov
out
je
outs
mov
pop
test
mov
dec
push
and
out
jle
or
xchg
push
sar
ret
jno
sahf
arpl
push
jecxz
xor
adc
dec
stos
xchg
xor
mov
dec
xor
aas
pop
arpl
jo
out
or
(bad)
in
mov
ja
out
mov
jp
(bad)
rcr
cmp
jne
cmc
rcl
jp
shl
ss
adc
pop
mov
mov
arpl
push
push
mov
test
mov
add
retf
adc
push
repnz
pop
or
add
call
enter
fistp
push
adc
push
sbb
jg
jmp
add
pushf
push
adc
xchg
movs
pop
or
jg
inc
and
adc
or
retf
or
jno
xor
(bad)
outs
xchg
and
xchg
data16
test
call
aad
xor
and
and
pop
iret
cmp
pop
mov
or
xor
mov
imul
pop
add
out
rcr
rcl
in
stos
scas
ins
mov
lea
ror
(bad)
and
inc
or
mov
and
mov
or
sbb
repz
pop
movs
jge
ins
fst
rol
jbe
mov
rol
movs
inc
inc
leave
jge
mov
xchg
mov
ss
xchg
xchg
or
cld
outs
jecxz
iret
out
or
pop
test
test
mov
xchg
iret
push
sbb
or
xchg
rcl
mov
sar
loop
out
mov
add
cmps
ror
add
iret
das
clc
cli
stc
xor
das
or
mov
mov
jl
les
out
mov
mov
cs
fs
sbb
add
xor
mov
pop
sub
ins
xlat
frstor
shl
iret
pop
cs
push
push
sbb
iret
rsm
or
add
out
(bad)
out
test
les
xchg
xor
inc
pop
mov
stc
stc
cmp
lea
ja
call
dec
fmul
xor
movs
mov
xor
sub
dec
call
add
or
xchg
inc
movs
movs
test
test
adc
xor
(bad)
mov
xchg
movs
or
add
push
test
ror
add
in
arpl
jp
cmp
nop
inc
cmp
in
aaa
jbe
fild
mov
dec
scas
pop
out
outs
sar
ins
or
in
push
hlt
add
bound
pop
rcl
cmp
mov
jb
push
jb
ja
add
xchg
mov
push
ds
(bad)
stc
je
cmp
push
(bad)
sbb
jns
pop
(bad)
call
dec
sub
dec
jecxz
daa
addr16
icebp
cmp
xchg
xchg
xor
inc
and
mov
std
in
cmp
js
sub
ins
and
test
cld
xlat
outs
icebp
(bad)
sti
(bad)
mov
jp
(bad)
jbe
test
sti
cmp
push
loopne
xchg
mov
dec
bound
jle
loop
imul
icebp
arpl
test
loope
or
ret
ret
add
sub
jl
(bad)
jl
(bad)
or
mov
cmp
pop
push
pop
rol
mov
movs
dec
xchg
add
sahf
aas
and
fcom
add
in
mov
pop
aaa
stos
aas
arpl
jmp
dec
jmp
pop
(bad)
out
jae
punpcklbw
push
push
mov
inc
retf
or
xchg
daa
add
sbb
pusha
inc
pop
dec
or
mov
aaa
(bad)
out
add
mov
ret
sbb
out
mov
xchg
adc
xchg
push
jle
add
repnz
cwde
loope
cmp
and
push
adc
mov
xchg
fisttp
retf
fwait
popa
ret
into
xor
sbb
xchg
mov
movs
xor
or
mov
sbb
push
or
mov
sbb
mov
ret
fs
fs
pop
mov
adc
cmps
adc
(bad)
and
in
frstpm(287
or
jbe
cdq
jno
sub
ret
jle
retf
retf
or
lock
xchg
mov
jbe
std
jbe
push
sub
in
out
aam
mov
rol
xchg
into
push
or
xchg
cli
movs
xchg
fsubr
pop
scas
lea
jle
jle
fcomip
cwde
dec
es
shl
pop
jecxz
and
loop
inc
stos
(bad)
repz
lea
test
clc
repnz
jle
icebp
inc
cmp
cmp
sub
jge
(bad)
dec
cmp
(bad)
mov
ja
sahf
push
cmps
bound
sbb
add
mov
stos
stos
sahf
stos
stos
cli
mov
jecxz
pop
imul
imul
ret
out
mov
push
push
ficom
fimul
sub
mov
ins
xlat
mov
mov
push
jecxz
mov
gs
movs
icebp
xor
xchg
(bad)
lock
movs
push
mov
mov
mov
sbb
pop
loop
cmp
outs
mov
sbb
clc
or
in
push
or
sub
movs
xchg
add
(bad)
mov
pop
fisttp
sbb
sbb
arpl
hlt
add
cmp
enter
jb
mov
nop
lds
retf
adc
add
pop
movs
dec
inc
inc
push
xor
fldenv
pop
popa
pop
mov
bound
cdq
push
and
repnz
jbe
xchg
cmp
push
mov
adc
mov
in
imul
arpl
cld
test
das
pop
mov
pop
bound
and
sub
rcr
mov
loopne
jmp
not
test
xchg
and
jmp
jnp
mov
xchg
adc
retf
aad
aas
jle
adc
iret
iret
and
jb
(bad)
fadd
clc
push
or
shl
adc
xlat
fsub
pop
jae
jnp
xlat
xor
cmc
jmp
cmp
cmp
jb
xor
sti
pop
ret
adc
xchg
dec
push
jnp
sub
dec
mov
inc
icebp
(bad)
xor
out
sbb
cwde
in
inc
or
add
out
neg
cmp
or
add
xchg
inc
call
fwait
jmp
sub
je
mov
jae
outs
or
adc
mov
imul
dec
jae
rol
in
sbb
bound
or
fisttp
lock
pop
sbb
test
cmp
mov
dec
push
jbe
xchg
xor
out
xor
or
push
inc
inc
neg
sbb
sbb
shl
adc
inc
test
js
mov
sbb
lods
inc
push
(bad)
push
xchg
imul
loope
mov
aas
xor
mov
leave
jno
jno
mov
sub
lahf
popa
jbe
xchg
mov
push
sti
jbe
(bad)
fwait
inc
cmp
cmp
jmp
push
pop
rcr
inc
and
les
jmp
xlat
cmp
cld
sbb
sbb
loope
das
ja
ja
add
sahf
and
mov
or
imul
imul
pop
xlat
jne
lea
and
jecxz
cmps
push
outs
cmp
and
or
jb
out
mov
call
cli
or
cmc
sbb
jecxz
jmp
mov
xor
xchg
int3
out
pop
pop
mov
ins
xor
or
xchg
gs
fs
cdq
dec
(bad)
jns
adc
and
scas
and
mov
in
push
lods
fwait
pop
xor
or
pushf
jae
sub
add
cmc
fdivr
pop
push
add
jnp
dec
bound
and
adc
mov
mov
sbb
pop
pop
out
inc
outs
jb
into
inc
add
getsec
js
push
xor
sbb
inc
push
mov
cmp
and
xchg
cmps
jne
or
jle
loope
add
add
sub
mov
or
test
cmp
adc
arpl
pushf
and
dec
inc
and
data16
inc
call
mov
and
sbb
cmp
pop
fwait
and
test
pop
dec
jno
jno
out
(bad)
in
pop
pushf
pop
pushf
popa
jbe
xchg
mov
lods
push
pop
cmp
jecxz
jmp
jbe
xor
ss
mov
imul
mov
cmps
jae
sti
lock
out
fsubp
hlt
in
sbb
shl
fldenv
(bad)
nop
out
aam
lea
pop
push
mov
xor
pop
cmps
in
out
ins
ss
jmp
cld
add
sub
and
out
(bad)
sbb
mov
push
xlat
mov
inc
dec
ja
jle
mov
retf
retf
or
out
out
icebp
lock
or
rcr
scas
scas
scas
push
pop
mov
mov
pop
jge
or
push
lock
dec
or
and
fdiv
arpl
xor
sub
fcomp
add
call
shr
js
aam
(bad)
in
xchg
xor
daa
jno
mov
pop
sub
ror
push
xchg
ror
cmp
and
test
test
mov
inc
sahf
movs
cwde
pop
retf
cmp
das
add
sub
rol
les
jmp
cld
push
bsf
mov
xchg
ds
jp
add
(bad)
cmp
mov
iret
cmp
pop
jge
icebp
pop
into
out
mov
xor
dec
mov
ret
lds
jecxz
rcl
fdivr
add
xchg
push
push
add
xchg
outs
jg
push
aad
add
(bad)
push
adc
mov
(bad)
push
mov
hlt
mov
call
mov
mov
ds
xor
jp
popa
fbstp
pusha
test
sub
xchg
xor
pop
pop
push
xor
jle
inc
jne
xchg
push
mov
push
clc
cli
rcl
ds
gs
scas
cmc
icebp
mov
xlat
pop
dec
lea
xchg
adc
std
fidivr
into
xchg
mov
lock
hlt
or
ss
(bad)
jnp
lds
call
(bad)
jecxz
cmp
push
xchg
sub
popf
loop
xor
arpl
jmp
inc
lahf
(bad)
mov
mov
sbb
test
inc
dec
inc
dec
pop
inc
push
pop
pop
aad
push
or
cmp
or
and
dec
fldenv
adc
inc
ret
scas
dec
push
dec
mov
ret
sub
ror
mov
call
into
push
pusha
xlat
cdq
loope
popa
into
in
dec
in
cmp
jo
and
adc
outs
push
mov
push
(bad)
aas
mov
fbld
xchg
aas
aas
scas
dec
test
pushf
sbb
fisttp
rcr
ss
ret
dec
int3
stos
or
loopne
inc
sub
mov
sbb
or
ror
add
cwde
int3
mov
push
out
mov
mov
push
push
stos
xchg
adc
lock
push
int
inc
outs
test
in
dec
add
push
in
into
das
into
icebp
icebp
sti
(bad)
mov
movs
les
inc
fstp
lods
inc
(bad)
sbb
cmp
sbb
push
mov
out
ffree
mov
dec
outs
aam
repz
aad
aas
jge
or
das
iret
rcr
sbb
jl
pop
popf
and
jg
in
outs
xor
scas
jne
pop
xor
cmp
cmc
ja
inc
(bad)
jmp
dec
int3
out
fs
(bad)
addr16
pushf
cmp
adc
retf
add
jae
fild
xchg
(bad)
repz
shl
mov
js
pop
sbb
mov
add
fist
imul
ins
xchg
cmps
and
in
clc
fidiv
int
sub
cs
add
and
dec
addr16
push
cmps
test
mov
ins
xchg
and
pop
in
(bad)
in
aaa
push
sub
inc
xchg
jns
shl
scas
xor
push
popa
pop
fnsave
test
cs
cld
(bad)
(bad)
aaa
stc
inc
ja
nop
fistp
loope
cmp
xchg
jge
xor
xchg
cmp
int3
stos
xor
mov
test
or
pusha
push
ret
outs
ds
and
js
(bad)
push
mov
cmp
add
mov
imul
(bad)
popa
icebp
cld
mov
ror
nop
mov
and
push
(bad)
lock
ret
jnp
jns
push
outs
aas
mov
xchg
(bad)
mov
lock
lods
inc
adc
mov
xor
jmp
ja
repnz
ja
add
inc
xor
lea
mov
fnstsw
push
mov
and
dec
pop
fldcw
pushf
in
mul
retf
pop
jl
cld
sbb
aaa
aaa
fsubr
ds
(bad)
clc
icebp
and
repz
jecxz
sub
gs
neg
data16
push
mov
data16
ins
ss
xor
dec
inc
xchg
and
mov
neg
jp
mov
mov
or
in
push
(bad)
les
jecxz
xchg
mov
push
out
imul
pop
mov
dec
aam
jge
xchg
or
mov
mov
nop
icebp
sbb
dec
sub
pop
cmp
or
addr16
imul
or
sbb
sbb
out
lock
mov
ret
xor
popa
(bad)
fcomp
jmp
retf
push
push
xor
inc
sbb
retf
mov
mov
sbb
(bad)
lods
pop
cwde
inc
das
xchg
xchg
sub
push
mov
(bad)
jecxz
cmp
imul
add
js
mov
aad
adc
dec
shr
xchg
jmp
clc
(bad)
ja
loopne
loop
pop
sahf
pusha
mov
arpl
cmp
movs
cmps
cmc
push
les
jecxz
pop
retf
push
ret
enter
push
cs
sbb
cli
cmc
stos
imul
out
sbb
mov
lahf
and
add
dec
iret
ins
inc
cli
or
fsubr
mov
push
cmp
cmps
cmps
cmps
cmp
cmp
jl
mul
gs
pop
xchg
and
js
iret
icebp
xchg
xor
iret
repz
xchg
cld
pop
(bad)
fmul
(bad)
fsub
xor
inc
push
loopne
ins
gs
mov
cwde
cmps
pop
xchg
out
bound
adc
mov
mov
mov
inc
imul
and
les
push
in
int3
out
movs
sbb
test
fistp
jnp
xchg
add
jb
and
mov
jg
ret
leave
sub
add
adc
pop
outs
push
retf
push
repz
pop
into
adc
and
(bad)
in
lods
xor
inc
pop
je
sub
and
in
push
outs
gs
push
and
ins
iret
add
sar
xchg
les
mov
cmp
jge
adc
pop
out
daa
adc
aam
ficom
stos
cmps
pop
lods
xchg
dec
cmp
fisub
fldenv
or
mov
jo
out
arpl
ds
sbb
int
mov
mov
push
pop
xlat
and
movs
rol
inc
arpl
cmc
jb
icebp
mov
or
(bad)
fsub
icebp
jmp
mov
jge
and
pop
mov
ds
addr16
inc
stc
sbb
imul
mov
dec
add
adc
out
ins
cli
dec
sbb
fstp
loope
out
push
lahf
ds
retf
retf
or
and
cmp
ret
(bad)
(bad)
pop
jno
jne
xchg
xchg
adc
xor
sar
cmps
imul
mov
inc
dec
sub
scas
stos
stos
cli
pop
shl
addr16
cli
jle
dec
nop
sub
jmp
movs
push
push
and
addr16
stos
jg
or
jbe
xchg
icebp
add
push
movs
int3
mov
int3
in
in
cmp
push
fxrstor
mov
mov
mov
lahf
(bad)
xchg
or
push
icebp
mov
ret
mov
sbb
cmp
dec
test
pusha
daa
push
loop
mov
dec
xor
(bad)
adc
jno
push
xchg
sbb
xor
mov
push
mov
push
lea
out
push
or
mov
xor
xchg
leave
adc
jl
jo
(bad)
test
push
mov
pop
outs
mov
sub
adc
cwde
sbb
jbe
jbe
aaa
out
fsubp
jecxz
aas
pusha
xor
inc
inc
loope
jmp
xor
sub
xchg
xor
and
mov
push
addr16
cmc
adc
jle
repz
mov
push
dec
mov
fistp
gs
adc
jl
nop
pushw
cmp
lods
jmp
mov
enter
mov
dec
mov
ss
dec
popa
ds
jecxz
in
or
pop
pop
sbb
push
loope
mov
in
sbb
xor
sub
pop
xchg
gs
outs
mov
(bad)
sti
std
push
jecxz
clc
aad
shr
sti
cmp
clc
sub
cmp
pop
aas
mov
mov
stos
sub
fistp
aaa
fsubr
adc
xchg
inc
pop
or
xchg
or
rcl
add
add
xchg
dec
nop
lock
call
in
sbb
out
mov
test
xlat
inc
out
test
add
repnz
loopne
push
jp
(bad)
pop
outs
not
jecxz
ins
int3
pop
imul
pop
or
sbb
mov
imul
cmps
inc
test
sub
sub
sti
cmc
sbb
je
shl
push
xchg
and
(bad)
mov
push
dec
xchg
inc
adc
jp
mov
ret
add
jne
shl
mov
out
cmc
ins
ds
leave
cld
or
jg
sub
rcl
cmp
inc
scas
adc
xchg
jnp
(bad)
mov
inc
sbb
inc
jmp
pop
jg
daa
dec
ins
jbe
ins
xchg
dec
jl
jp
mov
mov
mov
sbb
mov
hlt
(bad)
enter
je
jmp
rcr
sub
out
pop
mov
fld
sub
fsubp
std
sti
idiv
adc
call
mov
(bad)
popa
fcomip
call
mov
retf
rol
stos
icebp
js
iret
data16
gs
push
imul
fucomp
push
fnstcw
(bad)
inc
add
push
inc
push
movs
adc
dec
loop
das
les
push
mov
add
cmps
mov
mov
arpl
xor
leave
push
mov
les
mov
add
jo
sbb
fs
sbb
cmp
in
push
stos
std
push
mov
and
mov
stc
mov
(bad)
shr
or
daa
popa
jle
pop
f2xm1
and
daa
(bad)
or
xchg
xchg
adc
cwde
inc
xor
dec
jecxz
xchg
bound
xchg
add
mov
popf
inc
sub
fs
cmp
stos
cmc
or
ds
jmp
(bad)
mov
pop
sbb
fidivr
push
cmps
xlat
xchg
mov
xor
call
pop
cmps
xlat
retf
adc
sahf
pop
shr
imul
fcmovb
xor
test
fidivr
jecxz
fstp
jno
ins
mov
shl
jns
cmp
adc
xchg
scas
icebp
imul
jge
add
jp
adc
xor
jge
adc
movs
pop
sub
cld
push
dec
adc
sub
pop
fcomp
into
mov
ja
xchg
add
scas
inc
addr16
xlat
outs
int
cmp
aam
in
les
cmp
push
mov
leave
les
mov
sub
fsubp
jmp
add
out
out
sub
xor
mov
nop
and
mov
aas
jle
(bad)
int
sbb
inc
mov
ja
daa
mov
jge
sbb
mov
retf
ins
inc
jnp
mov
adc
pushf
mov
mov
fwait
add
xchg
fiadd
and
out
not
rep
push
cdq
mov
cmp
dec
dec
xor
inc
fnsave
or
mov
inc
and
test
les
adc
jb
(bad)
imul
xor
fs
and
inc
sbb
mov
and
and
mov
sbb
cmp
ss
mov
xchg
sub
xchg
and
out
cmps
cwde
lahf
popf
ficomp
in
inc
das
and
push
arpl
js
mov
jle
movs
mov
les
arpl
jecxz
repnz
jge
cmp
xchg
add
mov
cmp
add
pushf
jge
ja
(bad)
cmp
pop
mov
dec
mov
jnp
xchg
dec
jl
mov
mov
int3
ins
xor
sub
pop
add
push
adc
aaa
sti
(bad)
icebp
ins
fnstsw
shl
jbe
dec
pop
mov
mov
loopne
fwait
aaa
clc
out
mov
jnp
imul
and
div
inc
jle
std
fwait
cmps
icebp
ror
mov
jmp
cmp
xor
mov
cmp
(bad)
(bad)
pop
jno
(bad)
cmp
mov
or
call
repnz
mov
cli
jle
xor
je
pop
fldcw
mov
jb
cmps
mov
fisub
in
sbb
mov
mov
push
sbb
cmp
or
fist
mov
inc
push
and
ss
sbb
fistp
pavgw
cld
ss
mov
iret
sahf
mov
lods
mov
xor
mov
inc
pushf
and
jno
and
sub
sbb
dec
xchg
push
adc
dec
or
jo
or
cmc
jmp
cwde
inc
cwde
into
cmps
mov
xchg
out
xchg
repz
cmp
loop
(bad)
adc
mov
lods
shl
outs
cmps
in
pop
jno
xchg
push
jl
mov
mov
jmp
das
pop
pop
das
push
call
jecxz
and
pop
lds
into
ja
or
imul
fndisi(8087
in
or
jg
in
cmp
pop
xchg
sub
or
out
push
imul
add
and
mov
pop
mov
xor
in
scas
push
sub
(bad)
loopne
loope
mov
loop
loop
out
fistp
int
fst
imul
add
push
out
inc
outs
fimul
in
aaa
mov
dec
mov
sbb
push
jge
shl
fild
clc
mov
retf
add
xchg
pop
pusha
lods
mov
add
(bad)
scas
jmp
push
pop
jno
popf
dec
mov
dec
je
ins
add
inc
pop
(bad)
(bad)
pop
and
push
xlat
xor
mov
jb
aam
sbb
in
lods
adc
cld
inc
mov
cwde
push
movs
cmp
sub
mov
int3
mov
movs
inc
shl
ja
rcr
cmps
mov
or
retf
popf
call
call
(bad)
lods
and
cmps
or
bound
jbe
and
nop
sub
and
add
ror
cmp
dec
mov
and
sbb
lods
dec
pop
xor
adc
sub
push
js
(bad)
sub
(bad)
out
sub
and
mov
sub
xchg
fsubr
xchg
pop
mov
mov
cmp
call
stos
(bad)
cmc
fwait
mov
mov
outs
xor
push
aad
mov
inc
adc
out
dec
mov
shr
imul
stc
ins
dec
jmp
retf
cmc
or
outs
mov
pop
mov
and
lea
mov
add
scas
push
add
sbb
mov
fdivr
pop
fsubr
sub
das
fdivp
cmps
imul
clc
icebp
mov
or
inc
or
outs
and
pop
mov
std
jle
loopne
(bad)
and
cmps
inc
adc
std
mov
leave
in
leave
leave
leave
jg
popf
dec
jmp
push
lahf
push
push
push
push
rcl
test
cld
fsub
push
mov
out
ret
cmp
mov
xor
cmp
push
out
retf
bound
jl
xchg
dec
cmp
add
das
das
sub
or
addr16
or
scas
mov
sbb
adc
xlat
imul
iret
inc
add
xchg
stos
ror
in
gs
and
push
sbb
imul
sub
mov
xchg
sbb
ret
and
cmps
push
cmp
pop
je
outs
sub
dec
mov
sub
push
cmps
cmps
dec
call
(bad)
and
add
hlt
dec
add
sbb
mov
(bad)
push
mov
jae
xor
retf
hlt
mov
pop
fisub
jbe
fxam
cmp
pop
out
std
and
mov
cmc
lock
xor
shl
add
sbb
stc
jmp
clc
out
jecxz
jo
jns
xor
mov
ins
mov
outs
shl
(bad)
push
dec
shl
lock
fistp
icebp
adc
push
jecxz
add
aas
loopne
not
retf
in
test
jns
inc
in
jne
pop
jno
rcl
jnp
sti
shl
cmp
cmp
pop
pop
mov
in
test
aam
movs
sbb
mov
sbb
sub
(bad)
ds
cmp
out
aaa
jge
gs
inc
xor
ds
sub
test
out
mov
jbe
nop
jl
dec
dec
mov
cmp
sahf
out
jp
sbb
retf
stc
leave
leave
in
jl
(bad)
stc
lds
jmp
sar
pop
push
fwait
int
mov
ins
call
addr16
jg
into
daa
fistp
cmps
daa
mov
mov
int
or
dec
push
lea
enter
sub
pop
enter
inc
adc
aaa
xchg
outs
movs
xor
inc
and
imul
sub
ss
or
or
fnsave
test
xchg
mov
jnp
push
pop
xchg
add
jns
pusha
imul
jo
mov
fcomp
into
cmp
mov
xchg
xchg
add
adc
(bad)
jae
pushf
fwait
mov
les
mov
add
jle
sub
adc
mov
mov
or
outs
scas
xor
call
outs
mov
outs
shr
imul
fucomip
and
stos
aaa
adc
sbb
xchg
sub
shr
ds
add
pop
xchg
mov
or
shl
ins
mov
mul
test
int
imul
sar
mov
lahf
pop
ins
add
clc
adc
jno
cld
mov
jl
mov
push
mov
push
mov
or
mov
inc
push
and
sub
fnstcw
jbe
xor
scas
push
xor
test
into
repz
mov
data16
jl
mov
mov
pop
lock
jecxz
xlat
test
and
popa
fucomi
mul
fucomip
mov
ins
mov
and
xor
xchg
xchg
jg
test
stos
jg
popf
dec
pop
pop
sbb
mov
pop
iret
cmc
fucomp
cmp
aas
test
or
fcom
dec
cmps
pop
push
ja
popf
aam
sub
sbb
jecxz
ins
in
ret
cdq
adc
xchg
enter
xchg
and
test
cmp
sub
js
mov
adc
push
dec
sbb
in
gs
inc
dec
sbb
adc
xor
mov
fnstcw
gs
(bad)
loop
pop
bound
and
sbb
fadd
pop
pop
scas
fild
or
cmps
mov
stos
push
inc
adc
xor
cld
adc
dec
jmp
rcl
mov
xor
dec
jo
not
daa
pop
pop
cmp
sub
cmp
mov
les
ret
(bad)
retf
ror
neg
mov
pop
dec
test
(bad)
mov
add
sub
xor
push
outs
ficomp
leave
push
das
das
dec
cmps
lea
stos
(bad)
dec
and
jno
mov
fild
sbb
add
pop
into
sbb
(bad)
std
std
cmp
(bad)
push
push
xor
add
mov
mov
or
pop
add
jmp
cmp
mov
cmp
out
sub
aam
sti
in
frstor
inc
mov
push
repnz
(bad)
std
jle
cmp
jno
jno
sub
or
(bad)
dec
inc
push
fidivr
in
add
pop
mov
scas
sub
icebp
mov
repz
ds
outs
jne
leave
mov
mov
fstp
fcom
pop
mov
pop
js
mov
lods
and
mov
xchg
retf
jg
out
cli
repz
jmp
int
pop
lods
dec
xlat
ja
push
mov
mov
inc
cmp
or
add
loopne
add
out
(bad)
jno
mov
pop
push
jbe
adc
int
icebp
mov
inc
test
inc
push
aad
adc
(bad)
je
inc
dec
xlat
pushf
jbe
add
adc
sub
and
sar
xor
push
jo
sub
push
mov
das
lahf
clc
iret
or
sbb
in
movs
aad
dec
dec
pushf
inc
cwde
popf
sahf
bound
lahf
jecxz
ret
cmp
sbb
adc
fstp
in
ja
scas
push
adc
(bad)
jmp
frstor
arpl
add
ss
int
or
push
jecxz
loop
addr16
sti
ret
ja
lahf
sahf
mov
push
frstpm(287
push
fcmovne
push
ins
das
nop
movs
xor
and
inc
inc
dec
ins
cmp
(bad)
mov
fwait
cmp
movs
leave
test
pop
loop
icebp
adc
(bad)
jbe
mov
imul
cmp
jno
shl
pop
xchg
sti
mov
xchg
adc
fisttp
lods
xor
push
mov
or
pop
into
bnd
add
loop
fwait
aaa
js
out
sbb
sub
mov
dec
add
mov
jg
fbld
(bad)
out
idiv
lods
fsub
das
mov
psllq
cld
mov
ins
sahf
gs
inc
mov
idiv
adc
jg
pushf
(bad)
or
fwait
into
add
mov
dec
iret
iret
seta
xchg
mov
test
mov
xchg
stos
sbb
sbb
sbb
repnz
add
push
sub
adc
add
in
cmp
out
sbb
sbb
add
mov
mov
xor
and
fcmove
inc
sbb
mov
mov
pop
aas
mov
cmp
add
out
mov
dec
shr
dec
test
and
fs
fidivr
pusha
cmp
sub
cmp
sbb
dec
dec
push
mov
outs
sbb
push
xlat
cwde
pop
pushf
loopne
cli
sbb
push
and
ins
adc
arpl
inc
mov
inc
xor
ror
push
sub
add
mov
inc
cmp
sti
mov
daa
push
pop
lods
ss
pop
pop
sbb
pop
imul
cmp
sahf
(bad)
add
aam
xchg
daa
cmp
adc
ins
xor
pop
mov
outs
mov
mov
clc
push
add
pop
sbb
outs
dec
mov
jae
push
aaa
mov
sbb
add
inc
inc
je
shl
fisubr
mov
mov
shl
cs
das
icebp
loope
pop
int3
xor
leave
cwde
gs
xor
arpl
pop
cmpps
rol
push
mov
icebp
add
sar
pop
add
jecxz
in
repnz
out
repz
or
mov
xor
xchg
xlat
idiv
xor
jae
jg
add
lods
or
lods
sub
jbe
cld
stc
xor
jle
jne
cmc
div
jmp
aad
sbb
mov
hlt
lods
or
xchg
lods
(bad)
nop
xchg
stos
imul
adc
mov
movs
cmps
btr
mov
or
inc
movsx
inc
adc
dec
add
je
sbb
push
cmps
jne
jno
pop
shl
adc
xlat
fucompp
add
add
ds
sbb
jle
fwait
inc
xchg
push
sub
adc
xor
sbb
mov
(bad)
ror
xor
push
bound
(bad)
mov
xchg
sub
cmps
push
movs
leave
leave
sbb
sbb
test
mov
adc
cdq
mov
adc
(bad)
fistp
sbb
aad
lods
push
jo
or
neg
xchg
dec
sub
inc
mov
add
and
das
clc
scas
xor
cld
mov
push
pop
pop
int
adc
in
(bad)
pop
push
mov
imul
arpl
jne
pop
xchg
div
fsubr
call
mov
mov
xchg
pop
lods
push
push
dec
mov
call
out
fistp
xchg
xor
(bad)
(bad)
(bad)
sub
push
js
div
jmp
cmc
fucomip
mov
xor
cli
dec
or
and
dec
mul
daa
cmps
jg
popf
dec
jmp
call
in
(bad)
sbb
aas
das
div
sti
mov
(bad)
hlt
loopne
push
sub
movs
and
iret
iret
shl
cmp
lahf
cmps
repz
fstp
fld
mov
pop
test
in
cmp
inc
add
cmc
push
pop
fild
rcl
or
(bad)
push
stos
nop
xchg
jne
gs
loopne
dec
mov
(bad)
pop
cmp
cmp
push
dec
pop
xchg
adc
inc
mov
in
mov
repnz
mov
xchg
adc
into
push
fcom
cmp
enter
push
and
cmp
dec
mov
call
aam
jmp
fwait
cmc
sbb
int
jmp
or
mov
push
xor
xor
cmp
enter
outs
scas
jno
out
fidivr
add
add
add
fcomp
push
sub
rcr
sub
jo
inc
mov
mov
jp
fucomp
sbb
jge
(bad)
dec
xchg
push
hlt
push
test
rcl
lods
pop
cdq
iret
mov
loopne
imul
lods
ins
scas
imul
mov
ror
popf
scas
in
addr16
jp
mov
adc
(bad)
fldcw
mov
(bad)
or
icebp
jne
mov
pushf
inc
imul
xor
sub
dec
cld
das
mov
das
mov
aad
jp
xlat
pop
test
faddp
rol
xor
test
out
in
rol
mov
idiv
dec
shl
out
fidivr
jmp
dec
jns
cmps
dec
sbb
and
cmp
adc
stc
push
sbb
dec
adc
adc
js
adc
xor
cmp
out
ror
outs
addr16
adc
adc
mov
(bad)
jp
int
inc
push
lods
add
or
aad
jg
cli
shl
cmps
push
and
mov
scas
sub
loope
mov
sbb
cmp
dec
xchg
pop
cmp
ret
push
adc
adc
shl
in
jle
cmc
jp
cmps
ins
mov
out
shl
xor
imul
and
push
inc
mov
ror
nop
jne
addr16
cmp
mov
jbe
push
and
jmp
push
stos
int
fstp
push
xchg
xchg
rcr
xchg
or
adc
cmp
dec
stos
inc
push
cmovp
or
js
jl
push
jp
and
adc
dec
mov
sar
retf
repz
ror
dec
cmp
sbb
jmp
fucomip
jbe
pushf
arpl
jnp
(bad)
(bad)
std
jnp
dec
xor
mov
push
adc
xchg
and
mov
aaa
adc
stc
aaa
fwait
or
mov
adc
cdq
jae
stos
stos
mov
leave
in
ss
(bad)
ffreep
jecxz
jg
cmps
fstp
sbb
push
std
sbb
cmp
add
out
popa
test
cmp
sbb
popf
loop
cli
das
dec
add
stos
shl
mov
ins
mov
sahf
xchg
das
jg
push
aad
jmp
repz
(bad)
es
sub
sub
shl
mov
loop
out
adc
jmp
jno
std
jle
fnsave
ffree
xor
imul
jbe
sub
test
push
fs
add
inc
sub
lock
clc
out
cmp
inc
xor
fsub
test
push
pusha
les
(bad)
mov
in
movs
movs
test
outs
add
cs
xor
cdq
popa
jle
cmp
adc
outs
xlat
push
push
mov
push
fwait
cmc
push
sti
int
mov
mov
sbb
push
mov
call
(bad)
xchg
or
dec
icebp
(bad)
pop
jno
jns
stc
leave
or
scas
xchg
fcom
xor
clc
jno
mov
sub
or
ret
les
mov
imul
sbb
mov
adc
pop
xor
idiv
out
pop
stos
daa
mov
pcmpgtw
jl
xchg
push
je
nop
jl
adc
stos
pusha
pushf
mov
outs
call
daa
cmp
aas
(bad)
in
and
xchg
imul
mov
jae
jo
cmp
outs
out
adc
std
pop
pop
inc
sub
out
(bad)
shr
sbb
inc
jmp
call
xchg
addr16
cli
ret
pop
pop
in
clc
sti
mov
out
sti
test
push
push
adc
jg
fcomip
loopne
fdivrp
mov
add
out
div
pop
push
retf
hlt
fs
out
ret
ja
dec
fist
mov
in
mov
inc
pop
and
push
cli
mov
inc
pop
mov
mov
popa
enter
rol
ins
arpl
inc
xchg
movs
dec
ror
aam
mov
mov
and
jbe
repz
cmp
sbb
lea
shl
pop
inc
inc
jge
popa
pop
sbb
add
cwde
inc
adc
popa
inc
leave
add
arpl
loop
mov
mov
fs
int
push
dec
sub
and
inc
add
std
push
fcmovnbe
or
popa
mov
inc
test
mov
dec
sub
cwde
dec
pop
lods
out
in
movs
mov
push
loope
mov
(bad)
lds
lods
xor
fwait
cmp
outs
ja
test
jmp
mov
and
pop
lahf
sub
mov
outs
mov
out
mov
ins
jno
ja
(bad)
gs
push
cwde
mov
nop
pop
mov
sbb
outs
fidiv
fcmovb
cmp
mov
clc
and
mov
jbe
mov
dec
lock
out
mov
fidivr
adc
cmp
nop
movs
mov
fwait
mov
ret
rcl
in
(bad)
mov
mov
or
shr
iret
repz
fwait
in
dec
dec
dec
(bad)
pop
push
push
call
mov
movs
dec
scas
or
lods
std
pushf
ja
sub
pop
pop
pop
clc
daa
jmp
lahf
cld
cmps
lea
sbb
xor
mov
mov
jmp
iret
retf
jmp
ds
mov
mov
mov
pop
hlt
mov
fidivr
out
or
push
test
pusha
mov
les
sbb
stos
inc
xchg
in
mov
movs
add
or
(bad)
pop
js
dec
iret
dec
add
push
adc
jle
dec
cmp
xchg
sbb
pop
scas
dec
add
and
or
xchg
(bad)
xlat
and
xchg
mov
add
xchg
pusha
cmp
pusha
cmp
jecxz
repnz
fs
js
retf
addr16
js
sub
fisub
mov
jge
clc
mov
and
imul
sbb
push
sub
pushw
arpl
cdq
cs
sbb
inc
repnz
pop
data16
pop
cmps
stc
psubb
lock
call
and
adc
push
jbe
rol
mov
jne
push
push
pop
xchg
dec
ins
outs
(bad)
pop
pop
ja
icebp
xor
mov
add
shl
xchg
adc
(bad)
jle
scas
xchg
enter
xchg
mov
adc
xchg
cld
mov
in
leave
jo
sbb
ret
xlat
jno
cli
dec
sbb
mov
push
pusha
mov
bound
sbb
out
les
bound
ds
add
or
push
cmps
cmp
cmp
jmp
(bad)
lods
cmps
fs
push
inc
loop
je
repz
stos
jmp
out
cmp
fld
sub
sbb
out
dec
lods
add
sbb
ret
outs
fidivr
xor
jne
pop
es
adc
mov
cwde
pop
pop
imul
adc
in
xchg
or
pop
rcl
inc
adc
cmp
clc
and
mov
mov
cmc
mov
sbb
add
pusha
cmp
jecxz
pop
(bad)
repnz
and
daa
ror
or
leave
push
addr16
push
mov
out
jge
xchg
and
push
xlat
push
ret
jb
mov
push
test
(bad)
nop
and
in
mov
ficom
mov
or
stos
and
jecxz
xchg
sub
mov
push
int
repz
mov
out
xor
adc
mov
xlat
dec
mov
cmps
je
dec
(bad)
retf
xchg
not
mov
add
push
and
or
cwde
add
adc
loope
and
aas
shl
xchg
jge
retf
inc
int
xchg
pop
mov
scas
nop
sub
mov
push
cmps
int3
rcl
push
mov
xor
lods
inc
sub
(bad)
sbb
push
bound
cdq
loop
fstp
int
adc
adc
popa
pop
scas
adc
test
(bad)
xlat
pop
sbb
mov
and
mov
mov
jmp
(bad)
int
add
push
arpl
inc
xchg
cmps
mov
and
adc
mov
rol
hlt
mov
add
shl
pop
and
mov
push
push
div
out
pop
jns
adc
jg
pop
mov
pop
push
jnp
lahf
add
mov
sbb
inc
cmp
retf
repz
push
hlt
fsin
aad
aad
fcomip
cmp
data16
push
adc
shl
jmp
xor
mov
(bad)
jecxz
das
mov
aas
jne
out
push
test
cli
mov
cmc
add
sub
xbegin
lahf
pop
lock
push
xchg
push
pop
dec
mov
pop
lahf
jne
not
mov
shl
sbb
in
sub
arpl
or
pop
inc
sbb
dec
push
adc
mov
es
push
xchg
mov
(bad)
jnp
je
lea
sub
xchg
push
add
cmps
popa
lds
jecxz
scas
sbb
dec
dec
shl
dec
mov
push
xchg
ins
pop
jle
sti
or
icebp
xlat
sar
inc
cwde
inc
mov
jecxz
push
xchg
rcr
nop
gs
pop
sbb
or
xor
cmp
in
jo
adc
sub
enter
inc
push
push
push
pop
sub
dec
shl
xor
sub
dec
dec
arpl
add
jno
repnz
cmps
cmps
dec
xchg
adc
movs
lods
(bad)
aad
sub
adc
shr
dec
(bad)
call
sbb
pop
push
add
xlat
fbstp
jecxz
pushf
popf
popf
loope
cld
cld
add
push
add
lods
das
stos
push
sbb
out
dec
jae
sub
scas
rcl
push
pop
addr16
sub
(bad)
mov
sbb
jmp
dec
cmps
cwde
iret
out
fcomp
lock
fucomi
add
das
sbb
adc
push
ins
int
add
retf
mov
jle
and
cmc
out
sbb
aas
sbb
fisttp
inc
call
cmps
imul
out
xlat
scas
and
hlt
outs
fs
lahf
push
add
cmps
pop
fisttp
inc
or
jb
cli
jno
xlat
jg
sbb
stos
pop
push
cmp
ds
pop
adc
sub
out
or
or
leave
push
jmp
push
dec
push
and
xor
add
cwde
adc
call
xor
(bad)
ss
pop
push
sbb
shl
pop
pop
retf
sar
aad
add
jno
test
stos
ins
mov
add
stos
pop
sub
xor
sti
adc
pushf
and
gs
fcomp
mov
or
icebp
fs
ja
cli
jb
jbe
sbb
push
mov
mov
outs
cmp
mov
aam
xchg
push
pop
mov
dec
mov
fs
ss
and
ins
dec
mul
fdivr
cmp
out
test
push
imul
xlat
mov
fsub
cmc
jp
aaa
mov
dec
or
xor
inc
jge
lods
cmps
and
dec
push
das
nop
test
nop
movs
mul
pop
mov
mov
mov
xor
test
add
cmp
sub
outs
neg
jl
loope
dec
sahf
and
imul
and
jne
xchg
jge
cmps
fild
mov
pusha
icebp
cmc
outs
xlat
int
mov
adc
mov
mov
ret
icebp
js
xchg
jecxz
call
jge
inc
mov
mov
push
xchg
in
mov
mov
outs
fisttp
push
pop
sub
ins
xchg
int
jge
jge
push
(bad)
mov
dec
ss
xchg
pusha
mov
add
sub
es
test
(bad)
bound
fs
jb
cmc
cmp
add
dec
inc
cwde
dec
es
lea
loopne
dec
or
xor
pop
scas
bound
cmp
add
xchg
nop
pop
fild
out
fs
popf
test
daa
imul
pop
mov
push
nop
leave
cmp
add
inc
std
leave
cli
mov
stos
inc
addr16
mov
or
add
or
jae
inc
ds
ss
or
mov
aad
xchg
stos
dec
mov
xchg
gs
mov
push
jmp
les
cmp
mov
or
mov
imul
outs
(bad)
cmp
scas
iret
inc
dec
adc
arpl
push
xlat
or
cli
stos
dec
dec
lea
into
out
jmp
xor
call
sahf
cmp
push
popa
mov
enter
(bad)
sbb
ror
int
or
out
xor
jb
popf
scas
int3
cmc
clc
jae
in
jne
lods
stos
aas
jb
ficom
mov
mov
add
mov
sbb
fadd
(bad)
(bad)
ds
fidivr
add
mov
out
and
add
sbb
jnp
xchg
push
js
daa
ret
sbb
ret
lock
pop
xchg
idiv
addr16
xor
leave
retf
fdivr
loope
test
(bad)
jae
and
jmp
lods
mov
or
fnstenv
pop
call
fiadd
les
ja
cmp
pop
outs
cmps
pusha
sub
(bad)
shl
cld
rol
jp
pop
bts
push
(bad)
mov
sub
or
inc
rol
sbb
add
sbb
ins
es
sbb
dec
dec
adc
ret
and
mov
mov
xchg
repnz
add
xor
test
or
and
inc
sbb
cmp
sbb
sub
xor
adc
ins
and
pop
push
ins
aaa
dec
movs
dec
movs
sbb
aad
mov
lods
call
out
(bad)
enter
adc
(bad)
adc
popa
mov
scas
and
lods
sub
out
mov
adc
call
shr
push
push
fptan
mov
data16
xor
jle
mov
shl
jl
mov
lods
mov
sub
in
(bad)
pop
push
in
int
xlat
add
call
push
rcr
stc
or
mov
sub
ins
into
call
cmp
(bad)
jmp
mov
fdivr
lahf
dec
cld
in
mov
push
add
mov
loop
scas
ds
jmp
xchg
jge
mov
mov
dec
les
jnp
aas
cdq
dec
cmps
fistp
gs
fist
sub
mov
imul
cld
pop
add
push
pop
jo
adc
out
ins
loop
out
and
jne
sti
out
call
xchg
xlat
aam
mov
int3
in
or
mov
adc
push
int3
or
popa
mov
mov
outs
push
out
sahf
cmp
loop
shr
out
jnp
dec
inc
pop
xchg
add
jmp
pop
ror
js
mov
mov
jp
lods
add
arpl
mov
or
xchg
xor
call
cmps
inc
popa
adc
pushf
or
gs
push
cwde
(bad)
jmp
sub
cmp
nop
push
xlat
push
shl
sbb
retf
cmps
sub
(bad)
daa
inc
jmp
mov
sub
push
jecxz
rcl
test
jo
in
adc
or
dec
sahf
bound
aam
and
(bad)
es
aam
lahf
popa
or
test
in
inc
or
mov
mov
jne
xlat
push
daa
cmp
ds
setno
jp
out
xchg
dec
mov
nop
xor
xchg
nop
pop
mov
in
aaa
ins
sub
or
mov
jbe
mov
jecxz
outs
outs
sysret
pop
pop
mov
repz
mov
out
mov
add
lahf
loope
jbe
fldlg2
push
jmp
xchg
cld
mov
jmp
sbb
xor
ret
popa
mov
cmp
ja
out
push
shr
or
gs
cmc
xor
popa
adc
aas
push
shr
and
pop
fdiv
jp
push
mov
jg
sbb
outs
rcl
aas
std
test
adc
hlt
clc
clc
adc
or
add
and
out
fnsave
or
lock
ds
arpl
or
mov
repnz
adc
sbb
adc
cwde
push
test
sub
pop
push
and
sub
push
inc
es
aam
daa
push
gs
fild
mov
jmp
movs
adc
fdiv
mov
gs
cmp
push
mov
xchg
in
scas
pop
cmp
mov
sar
pop
ror
sbb
inc
(bad)
lods
add
xchg
push
icebp
push
js
cmp
ror
out
scas
popa
sbb
jo
nop
fsubr
outs
fimul
sub
aam
push
mov
fs
mov
mov
add
fsubr
loopne
in
or
in
nop
icebp
mov
clc
jmp
jge
add
cli
mov
pop
scas
jnp
mov
push
call
je
fld
and
inc
cli
pop
push
pop
iret
inc
sbb
cwde
dec
cmps
mov
mov
ds
push
ins
mov
int3
scas
mov
popa
dec
scas
into
dec
adc
pop
lods
arpl
icebp
jne
(bad)
in
in
lods
iret
add
cli
mov
inc
aad
pop
mov
jecxz
dec
cmps
sar
sub
scas
jae
lahf
pop
adc
and
outs
mov
adc
lock
leave
mul
inc
(bad)
cs
retf
push
dec
and
(bad)
mov
(bad)
jp
out
popf
out
pop
inc
xor
adc
stos
ins
(bad)
test
push
aad
or
(bad)
je
pushaw
adc
or
add
push
lea
pop
sub
xor
test
ret
mov
loope
ds
gs
cmp
fcomp
jb
add
or
add
je
scas
out
jo
and
inc
stos
call
cs
push
cdq
ins
outs
jmp
mov
call
shl
sub
popf
sbb
inc
jnp
es
ret
das
add
jmp
adc
out
and
div
mov
jecxz
adc
inc
push
xchg
cmp
popf
and
jae
push
movs
xor
sub
cmp
cmps
inc
test
in
xchg
jo
push
xor
call
and
push
sub
into
into
lock
loope
xchg
daa
in
jecxz
std
xchg
add
cmp
dec
mov
rcr
jl
pop
jl
out
jecxz
add
(bad)
imul
sub
frstor
stos
call
cdq
loopne
call
jo
imul
pop
lock
mov
xlat
pop
rcl
inc
addr16
xor
call
pop
jle
sbb
mov
push
mov
jge
mov
or
mov
fdivr
pop
push
in
outs
ins
jmp
and
fs
pop
scas
and
mov
in
pop
aam
cmp
(bad)
repz
xor
popf
jecxz
ss
mov
sar
jb
sub
rcl
xchg
fstp
repz
jge
push
sub
loope
cs
inc
mov
jno
or
xlat
or
push
lds
cmp
jno
(bad)
idiv
sub
dec
fidiv
test
jge
mov
add
push
pusha
adc
jns
aam
rcl
imul
xor
es
lds
(bad)
cmp
jno
xor
lahf
mov
adc
sub
mov
loop
loope
mov
in
pop
mov
jecxz
call
nop
lods
(bad)
cmp
jp
shl
js
xlat
iret
mov
(bad)
(bad)
pop
or
xchg
outs
adc
mov
pop
push
lea
mov
mov
loope
xchg
mov
jge
push
or
(bad)
xlat
push
retf
ins
mov
lahf
cmps
ror
mov
sbb
pop
xor
or
inc
(bad)
fisttp
loope
in
pop
mov
fnstsw
das
cmc
jmp
inc
fcomip
stc
fstp
jne
dec
pop
je
loope
mov
aam
jle
icebp
pop
xchg
cli
push
mov
sahf
int
test
mov
neg
pushf
repz
das
and
xor
scas
push
jl
sbb
add
rol
inc
movs
pushw
fdivr
out
fistp
aad
ret
xor
cld
hlt
cmps
or
cmp
pop
iret
in
xlat
and
inc
dec
add
jne
lds
pop
iret
add
pop
(bad)
nop
adc
mov
inc
popf
pop
mov
mov
rol
movs
sub
cmps
test
mov
pop
xor
inc
pop
push
(bad)
pop
mov
add
aaa
sub
outs
mov
and
test
enter
enter
movntq
out
add
xchg
into
push
inc
push
cwde
cmps
je
gs
or
outs
push
popa
ds
popa
jle
or
scas
mov
jge
lods
push
cmc
jne
mov
cmp
pusha
test
push
inc
out
xor
mov
jne
push
mov
sbb
mov
hlt
inc
int3
daa
mov
aas
cld
ror
sub
aas
jns
mov
pop
mov
ja
(bad)
pop
xchg
sub
mov
mov
adc
sbb
mov
or
rcl
shr
(bad)
push
adc
jae
mov
mov
cld
inc
xchg
inc
ins
pop
scas
xor
add
mov
fisubr
imul
mov
cmp
xchg
mov
jmp
adc
int
(bad)
pop
mov
aas
lahf
pop
loopne
pop
(bad)
pop
aas
outs
mov
in
test
mov
pop
mov
ins
(bad)
shl
(bad)
adc
frstor
mov
fs
jmp
mov
shl
jl
in
dec
sahf
cmp
stos
xchg
ins
loope
sbb
push
push
test
inc
adc
or
and
sahf
push
ror
mov
test
xchg
mov
in
push
dec
ds
add
jecxz
aam
pop
sub
lds
push
inc
lahf
push
loopne
sbb
ds
loop
shr
cdq
daa
xchg
loopne
sub
and
test
xor
sub
cmp
xchg
mov
pusha
push
adc
ret
mov
or
movs
imul
xor
imul
sbb
xchg
ins
clc
ret
push
pop
inc
sub
pop
lock
push
sub
call
jmp
jge
std
imul
hlt
in
in
dec
movs
dec
add
xor
stos
adc
(bad)
xchg
nop
mov
cmp
push
ret
or
push
add
in
mov
cli
and
adc
ja
push
mul
fdivr
cwde
ret
mov
add
pop
ret
xor
cs
jmp
and
mov
dec
cmps
imul
jne
(bad)
cli
retf
in
mov
jne
arpl
mov
pop
sbb
psrad
(bad)
out
je
std
ja
imul
pop
fcmovbe
lahf
int
clc
out
cld
pop
jl
bnd
add
leave
xor
ficom
addr16
mov
fidiv
xchg
aaa
leave
xor
outs
aas
repz
div
cmp
mov
ret
pop
mov
rol
sub
and
push
dec
inc
xor
push
push
xor
enter
xchg
adc
xchg
mov
popf
in
and
dec
or
sbb
push
stos
test
add
cmp
mov
jb
or
or
pop
or
cs
push
xor
or
dec
add
add
in
ror
out
fs
cmc
sbb
xor
loopne
es
rcl
sub
adc
dec
and
xchg
lods
dec
adc
cli
push
sub
sub
fstp
aas
add
out
popa
mov
sbb
int
add
retf
adc
dec
repnz
xchg
ds
mov
pop
pop
out
in
loope
mov
js
or
pop
data16
sub
loope
inc
mov
adc
xchg
pop
(bad)
data16
rol
je
aas
cwde
jg
daa
cmc
sbb
out
shr
adc
ror
xlat
scas
pop
(bad)
fs
mov
xlat
xchg
mov
stos
mov
shl
scas
pop
adc
sub
or
js
push
sub
mov
or
mov
das
mov
gs
mov
push
adc
push
adc
xor
(bad)
call
inc
dec
jne
out
xor
mov
add
sbb
imul
lea
in
mov
aad
mov
mov
cmps
(bad)
(bad)
xor
fdiv
xchg
or
mov
std
cmp
dec
jl
xchg
(bad)
std
js
(bad)
cld
shl
jg
add
ds
mov
inc
(bad)
and
mov
pop
or
pop
mov
mov
fisubr
mov
gs
dec
jnp
sbb
or
dec
std
add
sub
pop
lahf
xor
hlt
call
xchg
stc
neg
js
push
xor
in
add
xor
xchg
pop
aas
les
and
xchg
iret
mul
stc
push
mov
jmp
lods
shl
mov
adc
test
xlat
jae
sbb
adc
push
mov
das
sub
jb
push
(bad)
outs
mov
inc
test
inc
push
mov
add
gs
xor
mov
mov
shl
mov
imul
xchg
cwde
add
xor
inc
xchg
xchg
aaa
fld
add
add
sti
test
adc
stc
or
int3
out
sbb
sbb
cmp
xor
(bad)
nop
mov
fbstp
pusha
dec
fcom
mov
clc
stos
les
inc
pop
in
ins
xchg
sub
lods
daa
mov
xor
pop
jp
iret
imul
mov
jecxz
aaa
jecxz
(bad)
div
xchg
neg
nop
fmul
inc
dec
cmc
idiv
lock
sar
push
mov
inc
push
add
cmps
iret
dec
pusha
sbb
sti
into
idiv
stc
lahf
(bad)
fidivr
cld
cld
repnz
xlat
pop
out
cmps
jnp
iret
cmp
cmps
out
fdivr
jge
jp
sbb
sub
pop
and
xor
sbb
neg
add
xor
push
cs
imul
mov
sahf
hlt
std
sti
ret
ds
sti
imul
and
ins
mov
xchg
inc
or
fbstp
or
push
or
ins
rol
leave
xor
(bad)
rcr
adc
ret
jge
inc
add
repz
xor
xchg
rol
test
cwde
and
mov
add
cmps
jge
push
sub
xchg
jo
enter
mov
mov
fs
push
or
adc
es
leave
jmp
mov
push
sti
jbe
pop
and
lea
mov
scas
das
into
iret
push
xchg
and
mov
pop
(bad)
xchg
jno
ror
ins
aas
mov
test
(bad)
ins
in
xchg
bound
xor
in
in
int
xchg
fst
cmp
ins
scas
retf
jns
mov
mov
mov
add
mov
stos
inc
xchg
fs
ins
jae
xchg
ins
mov
push
push
mov
dec
call
mov
mov
je
pop
mov
cmp
bound
jns
adc
sub
retf
xlat
pop
pop
add
cmp
inc
bnd
outs
mov
fild
mov
lock
movs
(bad)
icebp
xchg
cmps
dec
mov
aaa
outs
ds
js
inc
pop
inc
sbb
repz
dec
mov
sub
cmp
mov
gs
mov
retf
fs
loopne
data16
mov
je
mov
(bad)
mov
jp
test
dec
mov
sub
sub
jo
or
es
push
in
pop
retf
add
pop
les
cmp
fstp
add
push
jns
arpl
lods
push
xor
or
repnz
das
clc
nop
test
mov
xor
inc
adc
inc
(bad)
xor
data16
mov
retf
into
into
dec
jg
fldenv
pop
aam
sbb
dec
ret
test
test
(bad)
in
adc
add
mov
arpl
pusha
mov
push
or
inc
fistp
mov
push
sbb
xchg
aam
push
test
and
data16
fdivr
mov
jne
dec
cmp
jmp
sbb
daa
ror
inc
or
gs
and
in
mov
bound
lods
push
in
push
mov
sub
inc
push
dec
(bad)
and
popa
adc
jno
lods
data16
jg
xchg
xlat
daa
xchg
leave
(bad)
jmp
faddp
cmp
sbb
stc
(bad)
(bad)
push
cld
ja
lock
xor
dec
aam
fld
das
or
push
imul
lock
ret
cld
stos
retf
pop
mov
in
repz
cmp
ret
xchg
in
int
lahf
fwait
mov
jbe
adc
and
and
hlt
rol
sahf
popf
jecxz
jecxz
enter
dec
fnsave
jno
popa
dec
mov
push
or
push
xor
and
pop
movs
inc
push
adc
repz
and
jmp
mov
push
fild
shl
ret
jnp
cwde
dec
inc
cwde
int
aam
lods
or
xchg
loop
in
mov
inc
sahf
in
jmp
fst
dec
in
ins
ds
inc
fbstp
sbb
mov
xchg
test
adc
jnp
(bad)
cmps
dec
rcl
mov
mov
sti
fidivr
inc
lods
pop
xlat
ins
or
arpl
cmp
aas
leave
shl
dec
push
xlat
cmps
bound
inc
add
xor
(bad)
or
push
in
sbb
pop
jmp
xor
cmp
dec
or
fcomip
adc
jle
jb
jmp
retf
in
sub
imul
rcl
cmps
push
add
sub
push
xchg
dec
(bad)
imul
ss
push
gs
mov
sub
push
aad
fld
mov
xchg
jb
(bad)
dec
jns
jnp
out
mov
sbb
in
add
sbb
(bad)
cld
retf
(bad)
xchg
pop
mov
dec
stos
pop
lahf
and
dec
add
lds
adc
movs
jns
push
sbb
ja
jnp
std
sbb
outs
scas
lahf
cmp
jle
lock
jne
jo
jmp
(bad)
cmc
jge
cmp
fwait
arpl
mov
or
mov
mov
pop
aad
push
sti
xor
and
add
cli
faddp
push
rol
jne
sbb
fnstenv
loop
adc
cwde
mov
lock
arpl
or
dec
mov
frstor
es
sahf
das
nop
push
mov
in
fiadd
mov
push
jg
fcom
inc
rcr
pop
cwde
pop
cmp
popf
push
das
sbb
sbb
cmp
mov
iret
into
pop
out
pop
inc
(bad)
in
mov
push
in
sub
loop
sbb
inc
pop
mov
and
das
cmp
xlat
cmp
jae
fidiv
inc
push
adc
cmp
and
mov
cdq
repnz
sbb
xchg
cmp
dec
cmps
lock
pop
jno
ret
nop
retf
fld
pop
jp
and
mov
fsubrp
fld
sbb
out
jmp
aad
pop
sub
test
sbb
aad
push
push
mov
mov
xor
cmps
shr
jecxz
je
push
iret
repz
cli
mov
test
les
dec
jmp
gs
mov
dec
fisttp
jns
psubusb
jnp
mov
mov
data16
ret
int
pmaxub
mov
outs
(bad)
inc
aas
js
xor
scas
pop
fidivr
lea
cmc
fld
jmp
and
nop
sbb
stos
push
jns
enter
leave
dec
xor
sub
daa
aam
stos
cld
cmps
pop
jle
loope
ficom
sbb
push
adc
mov
push
lock
or
lock
cs
icebp
or
bound
push
ret
pop
mov
xlat
jae
sub
retf
mov
adc
cmp
sub
and
add
xchg
stos
mul
loope
test
fmulp
sub
shl
shl
pop
mov
jmp
and
ret
retf
pop
mov
aad
data16
aas
dec
sar
lahf
or
cmp
repz
movs
imul
xchg
(bad)
jae
xlat
aas
stc
cmp
out
push
push
aas
scas
jmp
int
js
daa
retf
mov
aam
inc
pop
(bad)
and
stos
test
adc
aaa
mov
(bad)
sti
mov
clc
ds
iret
inc
sbb
mov
stos
out
ja
pop
xchg
jecxz
ret
push
dec
fild
aam
dec
push
call
pop
sub
inc
or
rol
cli
cmp
cmc
ror
mov
push
mov
add
jge
into
pop
aad
and
ret
xchg
cwde
(bad)
and
rol
push
push
jle
ss
std
test
or
mov
or
sbb
stos
sub
imul
test
mov
popf
add
dec
cmp
cli
cld
fcmove
test
nop
pop
sub
push
mov
ja
xor
and
dec
imul
mov
(bad)
jecxz
leave
js
cdq
pop
inc
inc
lahf
lahf
iret
out
std
jmp
sti
loopne
or
into
not
and
adc
pop
sub
stc
mov
adc
(bad)
pop
retf
out
ss
aaa
cmp
jl
inc
adc
enter
jb
mov
jecxz
mov
add
jnp
or
mov
in
or
adc
fistp
pop
sbb
(bad)
retf
push
in
xchg
sub
movs
sub
xor
adc
xchg
ret
in
shl
xchg
mov
ret
push
imul
xchg
addr16
dec
mov
mov
ret
test
xor
pop
pop
shl
stos
jbe
fstp
scas
mov
dec
dec
iret
mov
out
(bad)
pop
lahf
cmp
mov
pop
dec
loopne
adc
adc
repz
std
sti
out
inc
push
hlt
pop
mov
ins
sbb
cmp
rol
pop
test
sbb
inc
sbb
dec
adc
sahf
mov
mov
mov
jnp
mov
sti
mov
outs
adc
inc
sahf
das
fisubr
addr16
inc
or
lds
shr
rcl
mov
imul
fnsave
jmp
mov
dec
fld
sar
push
into
out
ja
mov
inc
pushf
popf
popf
std
loopne
pop
cld
bound
push
(bad)
pop
pop
aas
jp
mov
(bad)
pop
xchg
jg
pop
paddusw
and
xlat
mov
adc
jle
push
cmp
stos
dec
dec
dec
pop
lods
push
stos
outs
xor
mov
push
add
out
pop
(bad)
(bad)
xlat
mul
and
add
cmp
mov
sbb
clc
dec
icebp
iret
xor
aad
mov
test
and
ins
or
leave
cmp
ins
aaa
cmps
jmp
stos
pop
pop
mov
repnz
gs
and
push
out
outs
push
xchg
mov
push
(bad)
xchg
mov
test
and
or
xor
push
in
cmp
or
or
in
adc
mov
inc
inc
adc
call
sub
dec
xchg
push
test
popfw
movs
fwait
in
dec
call
je
ja
popa
cmp
outs
push
(bad)
out
fistp
div
aas
jg
dec
call
mov
(bad)
std
fucomip
scas
aad
mov
in
jae
sti
fsub
shr
dec
out
cli
cmc
jmp
cld
mov
and
(bad)
in
popf
imul
shr
cmp
sub
(bad)
loopne
mov
and
adc
fwait
shl
cmc
xchg
or
test
(bad)
adc
pop
sub
inc
sahf
out
stos
or
mov
ss
jl
mov
push
je
push
daa
cli
add
shr
cmps
shl
div
(bad)
cld
loopne
loopne
pop
nop
(bad)
fdivrp
std
sti
div
xchg
xchg
mov
(bad)
pop
xlat
test
movs
dec
add
or
ss
mov
cmc
imul
inc
add
dec
imul
imul
in
mov
icebp
test
inc
icebp
in
xlat
scas
pop
sti
hlt
xor
imul
loop
xchg
(bad)
rol
rcr
retf
sbb
jo
popa
cmps
push
push
cli
xor
shl
push
sub
loope
xchg
inc
xchg
mov
adc
mov
or
mov
and
mov
aam
or
cmps
shl
daa
sbb
in
sub
xchg
stos
dec
xchg
enter
jge
bound
icebp
ins
(bad)
sahf
add
jmp
push
push
pop
mov
int
mov
retf
repz
cmc
push
push
push
mov
lea
mov
div
jle
aaa
aam
ss
pmaxub
aas
clc
cmp
je
cld
leave
lahf
cld
or
loopne
jg
aaa
icebp
(bad)
sbb
sbb
sbb
or
fs
sahf
ja
pop
sub
lea
aad
jg
push
dec
xchg
mov
pop
pop
(bad)
mov
clc
mov
icebp
jne
and
or
inc
mov
xor
pop
xchg
mov
adc
xor
fcmovnu
push
cmps
sbb
inc
adc
scas
dec
sar
shl
mov
xchg
mov
(bad)
nop
aam
xor
push
aas
daa
sbb
mov
into
jecxz
mov
mov
mov
mov
popa
xor
push
(bad)
jp
pop
in
lock
inc
pop
mov
mov
jbe
mov
xor
imul
sahf
ds
cmp
ds
xchg
jecxz
fidivr
sub
or
or
adc
imul
out
and
or
mov
add
(bad)
xor
es
mov
dec
jb
push
ins
lea
xor
outs
push
push
mov
ss
fst
enter
push
adc
dec
push
push
cmp
out
jmp
ss
daa
cli
dec
dec
xchg
xor
shl
mov
ins
out
jo
mov
dec
jb
ja
jecxz
retf
mov
dec
fnstsw
sub
mov
out
mov
mov
std
push
sbb
(bad)
(bad)
clc
(bad)
cmc
(bad)
jg
(bad)
(bad)
clc
xchg
je
xchg
sbb
sbb
push
or
pop
xchg
sbb
loope
jo
lahf
inc
adc
ror
push
and
jb
stos
das
(bad)
div
mov
cmp
popf
jmp
aad
les
push
sub
fild
cld
(bad)
jmp
xchg
sub
adc
xchg
aaa
mov
mov
int3
mov
sub
lock
stos
imul
xlat
icebp
shl
out
ret
(bad)
mov
jmp
fistp
sar
repnz
dec
fidiv
add
jne
mov
add
and
lahf
xor
jae
sub
arpl
xor
scas
xchg
mov
cmp
(bad)
jecxz
out
fldcw
ret
jecxz
mov
mov
ja
push
dec
repnz
jge
aam
add
aad
in
fs
mov
mov
(bad)
fld
fcomip
push
dec
frstor
imul
jmp
inc
dec
inc
jp
cmps
mov
dec
daa
push
lds
dec
and
mov
xor
call
mov
mov
jp
jns
inc
pop
(bad)
jne
adc
leave
mov
jns
jbe
push
dec
xchg
mov
in
mov
pop
fmul
(bad)
cdq
sahf
enter
outs
outs
rcl
xchg
dec
outs
cli
jns
sub
mov
fdivr
sub
mov
cmp
jmp
push
adc
scas
sub
cmp
test
push
add
pop
mov
ins
sti
adc
mov
cmps
(bad)
push
in
rcl
xchg
jne
int
inc
pop
xchg
adc
pop
pop
jl
out
xor
jbe
cmp
sbb
dec
shl
jns
mov
addr16
das
push
mov
cmps
push
cmp
into
mov
pop
add
test
sahf
addr16
aas
pop
movs
cmp
adc
sbb
push
add
mov
add
aas
(bad)
in
mov
ffreep
mov
dec
arpl
adc
mov
or
scas
imul
icebp
mov
icebp
pop
retf
fcom
imul
pop
xlat
xor
mov
scas
and
and
js
mov
inc
sbb
ror
xor
stos
inc
scas
daa
xchg
in
dec
icebp
loop
jge
out
cmp
test
enter
push
add
and
cmps
add
(bad)
addr16
out
sub
les
xchg
(bad)
in
dec
jecxz
sub
inc
push
mov
in
pop
sahf
gs
daa
daa
daa
outs
cmps
pop
(bad)
(bad)
mov
in
in
mov
popf
je
push
jno
arpl
jo
xchg
xor
or
mov
push
adc
ins
aaa
mov
stc
stc
stc
mov
popf
ja
sub
sti
sti
pmaxsw
mov
lahf
sbb
inc
inc
call
test
adc
jmp
(bad)
fucompp
push
jg
stc
mov
inc
aaa
or
(bad)
push
test
jmp
inc
xchg
in
stos
ins
xor
mov
jmp
es
rol
adc
dec
ficomp
xchg
(bad)
push
mov
jnp
shl
inc
ins
fild
shl
pop
das
scas
js
push
or
push
xor
retf
outs
cli
xor
jmp
sub
jo
xor
(bad)
out
pop
mov
and
loopne
cs
or
adc
add
adc
pop
fstp
jno
iret
adc
pop
retf
mov
xchg
push
aas
cmp
push
sbb
pop
add
adc
xchg
adc
retf
shr
stos
mov
and
or
mov
scas
(bad)
call
and
(bad)
cmps
jnp
jb
or
stos
jmp
das
fidiv
scas
aaa
cmps
addr16
in
idiv
pop
std
test
jmp
mov
jmp
out
sbb
mov
mov
shl
out
or
lock
lock
mov
xor
lods
leave
fs
mov
ret
ret
push
push
push
push
ds
sub
mov
jge
push
xor
jmp
xor
inc
rcl
neg
sub
out
rol
push
xchg
dec
mov
movs
fs
adc
rcl
dec
mov
mov
xchg
dec
push
cmps
lods
ds
cmps
mov
cmp
dec
xor
idiv
cmps
imul
retf
in
cmp
ret
mov
in
xchg
(bad)
ja
das
push
add
mov
fisubr
jge
and
push
xchg
jecxz
dec
jg
inc
out
mov
std
shl
test
sub
cmp
fild
in
pop
xchg
outs
or
push
ret
mov
xor
jecxz
pusha
loop
push
icebp
add
sbb
imul
push
ret
(bad)
cmp
imul
add
hlt
adc
loopne
cmp
adc
cmp
fnstsw
jmp
xlat
pop
stc
and
push
push
jbe
and
dec
scas
imul
movs
pop
jne
hlt
clc
je
pop
das
(bad)
(bad)
(bad)
aas
pop
lods
xlat
out
out
pop
push
push
mov
retf
mov
adc
mov
rcr
gs
mov
pop
pop
cmp
xchg
out
jns
fnsave
out
out
xchg
and
call
rol
int3
stos
stos
mov
xchg
retf
cmp
mov
inc
rcl
enter
test
push
xchg
jne
jmp
int
dec
into
es
add
std
jne
adc
stos
jp
dec
xchg
addr16
out
movs
imul
es
push
add
xor
mov
xchg
jo
jno
push
mov
pop
mov
lock
xlat
out
std
fsubrp
popa
mov
cld
loopne
outs
and
mov
push
dec
inc
lahf
ja
sti
adc
cld
add
mov
sahf
jmp
xor
xchg
push
push
and
leave
lds
jmp
aam
js
out
daa
shl
pusha
pop
pop
fsub
fidiv
xchg
mov
mov
inc
cs
out
je
daa
stos
stos
jmp
dec
shl
outs
ss
xchg
addr16
mov
jmp
push
pop
scas
xchg
and
arpl
imul
xchg
fistp
aad
ja
dec
push
jmp
les
mov
popf
cmp
cmp
lea
imul
mov
out
mov
adc
inc
sbb
push
xor
xlat
outs
call
mov
xchg
add
push
cmc
add
add
dec
out
outs
data16
sbb
out
lahf
lods
push
stos
pop
dec
xchg
pushf
sub
dec
mov
mov
or
pop
xor
jp
mov
mov
hlt
add
lods
fisubr
inc
jmp
and
retf
pop
movs
add
int
inc
hlt
(bad)
lods
and
into
fnstsw
(bad)
loop
xor
div
mov
inc
out
dec
dec
mov
mov
dec
test
xlat
sbb
das
cs
xor
dec
pop
movs
ins
test
xor
adc
adc
pusha
lds
sbb
in
scas
stos
mov
call
push
jmp
jmp
fldenv
in
mov
cmps
imul
add
aas
vmovhps
sahf
addr16
cmps
jmp
ret
ret
ret
mov
aad
push
fwait
jne
cmp
jl
mov
or
mov
add
inc
iret
fild
out
aam
xor
push
stos
cmps
or
jo
and
sbb
cmps
imul
mov
and
push
xchg
gs
(bad)
pop
fnsave
das
mov
jae
shl
mov
push
(bad)
jne
xchg
(bad)
lock
bound
xor
mov
jmp
sbb
scas
jmp
add
pop
jo
add
push
aas
sti
pop
mov
ja
xor
sub
jae
push
ret
cmp
xchg
xor
cmps
popa
adc
js
imul
adc
shl
sub
outs
stc
sti
xor
cli
cmc
pop
es
hlt
mov
jmp
fstp
mov
fwait
jno
or
cmp
sub
mov
ficom
jns
lods
xchg
retf
jne
adc
bound
dec
shl
pop
push
pop
inc
mov
xchg
in
iret
mov
inc
cmp
aas
es
cs
fsubr
push
jg
imul
sub
ss
add
mov
jg
jmp
xor
pop
xlat
pop
mov
pop
lahf
fwait
and
test
inc
pop
mov
scas
shl
jge
cmps
xchg
adc
(bad)
and
xor
shl
dec
imul
mov
dec
xchg
jl
out
fldcw
cmp
repz
inc
aaa
sti
mov
out
mov
add
fdivr
mov
aaa
mov
mov
jle
cs
mov
or
nop
pop
inc
jg
popa
xor
mov
xor
xchg
push
push
dec
and
mov
adc
iret
out
xlat
loop
mov
push
inc
repz
mov
mov
fcom
inc
(bad)
mov
loopne
push
inc
sar
inc
mov
into
mov
pop
call
test
and
xchg
xchg
ins
sbb
xlat
jmp
push
adc
jbe
jbe
xchg
jmpw
jbe
xchg
data16
dec
(bad)
retf
mov
jae
jns
jne
int
push
push
mov
jmp
aam
outs
jbe
jns
jno
aaa
repnz
mov
add
jg
jno
cmp
das
mov
inc
mov
unpcklps
lods
clc
je
jbe
shl
retf
stos
pop
mov
adc
adc
xchg
cmp
xlat
retf
in
cmp
mov
xchg
gs
jns
sbb
(bad)
(bad)
xchg
std
ret
pop
std
loope
xchg
add
sahf
fwait
popa
push
(bad)
mov
ficom
cmc
in
mov
ficom
in
mov
stos
or
imul
(bad)
clc
add
dec
mov
mov
pop
adc
cmp
and
cmp
adc
shl
add
(bad)
(bad)
popf
jno
sbb
rcr
add
out
jns
fld
cwde
(bad)
iret
rcl
ins
fld
fnsave
pop
mov
jo
inc
jo
call
cmp
cmps
outs
mov
gs
push
int
mov
retf
stos
sub
mov
dec
retf
repnz
push
jne
xchg
gs
or
sti
test
iret
retf
shr
or
dec
cmps
rcl
ins
fstp
cmp
sbb
cdq
ss
arpl
ds
cmp
or
inc
mov
xchg
push
dec
cdq
inc
or
movs
and
adc
dec
rcr
in
sahf
out
int
mov
repz
sub
jae
aad
clc
pop
into
shr
gs
mov
mov
cdq
add
cmc
or
mov
pop
cli
out
add
aad
pop
pop
int
int
iret
fld
sbb
add
add
cmps
imul
test
pop
xchg
aas
push
(bad)
out
js
cmp
xor
daa
sti
xchg
mov
fild
xor
jg
pop
dec
add
clc
xor
lods
dec
pop
test
mov
mov
stos
cmp
repz
mov
das
mov
sub
aad
pop
push
jns
movs
dec
rcl
gs
xlat
add
mov
jae
ss
aaa
pop
mov
ds
(bad)
gs
push
out
cmp
sti
jle
add
je
(bad)
lea
jnp
jnp
xchg
call
or
pop
xlat
cmc
test
ins
jg
cmp
stos
dec
and
and
and
rep
stos
stos
(bad)
inc
push
in
int
push
xlat
jne
xlat
jne
cmp
sbb
jmp
scas
retf
call
outs
jb
ret
(bad)
and
jne
loope
mov
ret
shl
lock
pop
mov
cld
jns
sbb
push
mov
ror
(bad)
ror
imul
rcl
cdq
out
mov
lahf
sbb
add
test
ret
leave
(bad)
jl
xor
ret
rcr
fisubr
and
ret
shl
dec
sub
inc
out
inc
(bad)
and
pop
je
jecxz
xor
sbb
mov
shl
dec
xlat
mov
push
xchg
gs
jne
push
in
fidiv
pop
inc
cdq
xchg
in
test
fnsave
ins
jmp
stos
or
cs
addr16
aas
dec
popf
cli
cmps
mov
mov
imul
dec
sub
ins
ss
(bad)
icebp
sub
mov
lods
shl
adc
pop
inc
or
adc
adc
pop
pushf
rep
imul
jne
fldcw
mov
mov
gs
inc
mov
jge
adc
lock
out
stos
and
shl
mov
or
dec
out
jg
or
in
mov
dec
add
retf
scas
mov
sbb
pop
xor
mov
sbb
push
dec
sbb
sbb
fldcw
test
fnstenv
repz
and
add
jno
or
arpl
(bad)
ins
leave
fisub
cmp
mov
call
scas
sub
cmp
fidivr
fidiv
mov
popa
pushf
ja
repz
jmp
into
mov
mov
in
xchg
aaa
in
sahf
(bad)
test
push
push
cli
popa
xor
das
repz
xchg
sbb
push
inc
adc
data16
cmp
(bad)
push
jmp
mov
ins
cmp
jns
mov
imul
jmp
outs
call
mov
mov
adc
mov
arpl
out
or
cmp
sahf
xchg
pop
push
jns
push
and
sbb
addr16
cld
mov
push
pop
mov
sti
xchg
jb
call
pop
push
and
fimul
mov
mov
cvtps2pi
xchg
jb
xchg
and
hlt
or
cmp
cmp
cmc
loop
adc
mov
aas
ss
xor
jle
push
(bad)
cmp
dec
dec
ins
daa
inc
xlat
(bad)
jne
leave
or
mov
push
xor
sbb
retf
mov
cmp
rcl
jge
in
ds
jnp
std
loope
les
pop
cmc
or
in
pop
xor
neg
sar
inc
push
adc
(bad)
jecxz
imul
fdiv
xlat
xor
push
jno
fwait
mov
stos
scas
jmp
stos
stos
push
pop
pop
xchg
in
sub
jle
mov
cdq
mov
rcr
jp
jb
push
sub
pop
loopne
mul
(bad)
mov
xchg
and
test
mov
fadd
repz
cmp
fmul
cdq
add
mov
fnstcw
fisttp
xchg
pop
inc
or
and
(bad)
movs
arpl
addr16
push
xchg
mov
test
out
pusha
sar
in
and
mov
mov
sbb
xchg
and
repz
loope
cmc
add
jge
icebp
mov
in
and
jno
(bad)
xor
and
sub
ror
dec
or
clc
idiv
pop
mov
hlt
mov
and
mov
fidiv
je
stos
push
loopne
ror
mov
inc
mov
pop
mov
scas
xor
mov
fisttp
das
sbb
sub
mov
retf
and
cmp
push
sub
int
adc
stc
inc
push
nop
pop
repnz
repnz
xchg
dec
mov
cld
xor
popa
call
ja
cld
cs
gs
jno
jno
loopne
sahf
jmp
xor
or
retf
push
mov
ds
stos
cmc
ja
add
shr
cmc
inc
xor
xchg
retf
jae
dec
outs
dec
dec
shl
push
or
xor
inc
rcl
mov
cmp
mov
pop
mov
scas
repnz
out
call
stos
into
jmp
jnp
cwde
dec
cli
lock
repnz
pop
hlt
mov
sti
mov
(bad)
xchg
jg
jg
jmp
add
mov
dec
pop
jg
inc
mov
pop
scas
pop
scas
mov
loopne
jmp
jmp
loop
lahf
add
mov
rol
add
and
fs
je
cmp
gs
je
add
xor
aaa
sub
xor
cmp
xor
xor
sub
xor
add
and
fs
je
cmp
imul
aaa
sub
xor
cmp
xor
xor
sub
xor
icebp
retf
add
add
dec
inc
scas
inc
pusha
and
add
add
or
or
add
or
add
add
add
add
or
add
add
add
sbb
je
outs
data16
popa
jb
add
outs
bound
dec
ins
popa
addr16
gs
fs
leave
gs
add
dec
inc
inc
push
js
mov
dec
dec
ins
inc
adc
xchg
mov
jns
sub
cmps
inc
jo
or
and
ret
add
or
faddp
and
pop
push
mov
outs
inc
les
add
mov
inc
pushf
addr16
cmps
dec
popa
pop
scas
(bad)
in
bnd
jno
in
scas
scas
ds
call
and
enter
out
and
mov
pusha
rcl
mov
add
repnz
das
jle
jle
mov
rcl
mov
mov
mov
mov
mov
fcmovu
ficomp
fstp
fmul
data16
cmc
cmc
xor
jno
and
push
not
mov
js
in
xor
cld
inc
add
add
sbb
vmovupd
dec
cmp
cmp
cmp
pop
pop
in
loope
loopne
xchg
jmp
scas
test
and
ja
jbe
push
jb
sbb
sbb
out
enter
mov
repnz
hlt
movs
fstp
pop
cmp
aas
pop
arpl
adc
fwait
fwait
aam
fisttp
repz
dec
cmp
in
and
and
std
std
cmp
jo
loopne
loopne
xchg
inc
fs
aad
rol
lds
aaa
lock
adc
das
das
or
or
stos
stos
and
mov
pop
push
push
mov
sub
and
popa
psubq
or
xcrypt-cbc
cmps
xchg
xchg
adc
sbb
sub
(bad)
cdq
adc
or
stc
stc
mov
jnp
pop
add
mov
pop
fstp
fisub
xchg
leave
inc
and
xlat
inc
add
push
push
pop
pop
dec
add
add
add
xor
mov
push
push
push
ficomp
sbb
push
jp
movs
lds
jb
inc
nop
in
push
sbb
int3
stc
cwde
dec
dec
dec
adc
loope
in
in
jle
add
nop
xchg
xchg
inc
sbb
in
sub
add
push
inc
cmp
cmp
(bad)
dec
imul
pusha
jno
mov
loope
in
cmc
div
rcr
fcomp
cmps
aad
xchg
ja
mov
add
rol
jns
out
mov
out
push
test
and
icebp
sbb
lock
(bad)
mov
mov
or
xchg
cwde
cwde
dec
push
push
push
adc
int3
and
mov
sbb
and
sbb
mov
dec
push
ins
add
inc
adc
push
push
adc
push
or
mov
push
mov
outs
inc
inc
test
mov
dec
lea
popf
and
out
in
push
jmp
bound
(bad)
mov
xchg
inc
add
mov
sahf
and
add
add
fist
xchg
pop
adc
(bad)
(bad)
ds
or
in
push
stos
je
jge
mov
mov
mov
mov
sti
xchg
sbb
dec
jo
push
mov
mov
pop
cmp
cmp
sub
test
jp
push
push
push
add
vshufps
inc
pop
mov
outs
inc
jp
push
add
xor
push
aad
gs
mov
cmps
xchg
mov
mov
adc
fwait
nop
inc
pusha
adc
xor
aaa
jecxz
jl
clc
repnz
push
pop
pop
stos
int
lea
inc
inc
inc
dec
sbb
loopne
adc
sahf
movs
mov
cmp
stos
ss
clc
call
in
rcl
shl
jb
cmp
fisttp
stos
stos
adc
sbb
pop
test
mov
sub
inc
in
out
cs
mov
cmp
xchg
xchg
xchg
leave
(bad)
pop
jmp
and
and
(bad)
cs
sbb
xor
mov
fild
mov
jge
imul
jle
mov
aaa
test
hlt
ds
scas
sub
(bad)
les
jmp
hlt
ja
imul
mov
cmp
pop
pop
std
or
xor
in
pop
xor
jg
scas
fucom
das
inc
jecxz
in
push
xchg
ja
outs
mov
sbb
xor
mov
das
add
add
dec
inc
scas
inc
pusha
and
add
add
or
or
add
or
add
add
add
add
or
add
add
add
sbb
je
outs
data16
popa
jb
add
outs
bound
dec
ins
popa
addr16
gs
fs
leave
gs
add
dec
inc
inc
push
js
movs
push
cmp
inc
adc
mov
js
sub
inc
inc
or
adc
sub
push
adc
push
cmp
adc
mov
mov
movs
icebp
inc
push
icebp
mov
loope
mov
(bad)
sbb
fidivr
repz
mov
dec
xchg
xchg
xchg
movs
push
jle
jle
aaa
gs
(bad)
das
cs
data16
jmp
leave
je
pop
movs
(bad)
std
add
cdq
mov
lods
cmp
rcr
fild
pop
pop
add
mov
mov
dec
cmps
xchg
cld
std
std
jmp
mov
fstp
daa
ja
xchg
fwait
lds
div
hlt
dec
ud2
or
push
scas
dec
(bad)
add
push
out
in
(bad)
popf
popf
popf
addr16
dec
dec
dec
sub
and
sub
sbb
inc
mov
inc
jmp
call
xchg
test
cli
cli
ret
fwait
fwait
fwait
pop
sbb
rep
ins
ins
push
movs
movs
movs
add
add
out
add
enter
mov
fstp
fld
sbb
std
das
sub
add
rcl
(bad)
(bad)
ud1
outs
dec
mov
jecxz
test
scas
scas
cmps
rcl
push
fcmovu
fcom
shl
rcl
push
fcmovu
fbld
mov
inc
loope
div
mov
(bad)
jg
pusha
and
gs
not
mov
inc
es
pop
push
dec
icebp
(bad)
sbb
stc
stc
inc
ds
lahf
mov
add
int3
int3
xchg
add
cmp
adc
or
mov
push
push
push
xchg
sub
(bad)
adc
dec
xchg
pushf
pushf
sbb
push
or
aam
push
jl
mov
dec
lea
or
push
push
mov
je
in
gs
jbe
inc
and
dec
mov
inc
adc
xor
pop
daa
movs
inc
inc
inc
sub
popa
mov
add
into
into
es
xor
add
pop
pop
fs
mov
ss
imul
dec
inc
int
fistp
xchg
jle
retf
hlt
enter
cwde
adc
pop
or
sahf
test
nop
test
loopne
(bad)
int
in
loopne
int
iret
retf
fdivr
cli
mov
nop
jg
mov
mov
inc
xchg
inc
mov
mov
mov
ds
sbb
jmp
pop
lea
dec
mov
sbb
xor
pusha
movs
or
ror
adc
push
push
push
push
daa
sub
(bad)
cmp
aam
in
les
or
std
rcl
xor
gs
pop
pop
inc
lods
add
or
inc
sbb
sbb
pop
inc
popa
shl
pop
add
dec
xchg
push
push
addr16
dec
dec
dec
pop
stos
jo
int
jne
or
loopne
loopne
rcr
in
cld
or
lds
aaa
adc
sbb
arpl
rcl
pop
jne
add
enter
push
dec
adc
aad
pop
pop
pop
loop
(bad)
aad
mov
or
outs
cmp
xchg
push
push
push
and
sub
mov
inc
call
push
imul
push
lds
je
push
push
inc
adc
pop
ja
fcomip
inc
inc
out
add
xchg
inc
fnstsw
ss
push
push
push
test
inc
sbb
or
aam
fimul
rcl
adc
sbb
call
mov
bound
pusha
push
add
loope
jp
jl
das
das
cmps
in
or
or
ss
dec
cmc
cmc
cmc
add
(bad)
ja
and
cmp
jb
ret
jns
sbb
mov
ins
pop
mov
add
(bad)
push
lods
test
xchg
pop
addr16
(bad)
mov
das
outs
mov
ins
jae
push
mov
ins
xchg
or
mov
or
pop
cmp
push
(bad)
mov
pop
aas
cld
jbe
loop
push
hlt
dec
add
shl
clc
data16
add
dec
inc
dec
inc
scas
inc
pusha
and
add
dec
inc
or
add
or
add
add
add
add
or
add
add
add
sbb
je
outs
data16
popa
jb
add
outs
bound
dec
ins
popa
addr16
gs
fs
leave
gs
add
push
js
je
jge
push
push
adc
mov
jmp
push
mov
int3
mov
call
push
arpl
pop
or
or
jmp
pop
xor
xchg
sub
xor
xchg
mov
nop
add
dec
mov
fild
inc
fidiv
out
mov
jnp
fcomp
dec
out
mov
out
std
out
mov
push
push
push
push
push
dec
mov
je
icebp
cwde
inc
adc
inc
jl
pop
das
imul
es
ds
dec
es
xor
std
in
ss
neg
inc
xchg
outs
sub
sbb
pop
cmp
mov
jno
mov
arpl
add
xor
xchg
adc
shl
add
fimul
cmp
rol
push
pop
xchg
ins
in
xchg
and
into
lahf
dec
add
mov
imul
test
push
nop
inc
mov
push
jp
dec
adc
(bad)
fisttp
(bad)
in
addr16
dec
xchg
xchg
xchg
and
sub
jp
out
pop
hlt
hlt
hlt
loopne
xlat
pop
inc
xor
pop
ja
jmp
mov
data16
out
sbb
loopne
push
inc
lods
or
sahf
iretw
push
(bad)
dec
inc
and
xchg
stos
add
retf
movs
cmps
cmps
arpl
xchg
xchg
xchg
ret
mov
loope
pusha
ins
ins
or
sbb
add
sbb
jnp
lds
mul
dec
shl
and
rol
inc
addr16
and
push
je
jg
xor
xchg
jns
xor
or
dec
sbb
int3
lock
and
inc
arpl
cmps
cmps
cmps
xor
or
fisttp
or
add
jb
jae
xor
ja
fs
mov
scas
xlat
xlat
(bad)
xchg
inc
or
enter
fisttp
xor
ficom
das
push
push
loope
daa
stos
adc
mov
test
test
std
xor
ins
jno
xchg
dec
pop
dec
repz
shr
xchg
cdq
arpl
fcomp
repnz
mov
bound
or
ja
(bad)
cmp
sbb
hlt
xchg
or
ror
mov
mov
repnz
lds
mov
pop
ins
int
add
sub
inc
xchg
sub
xor
xor
call
inc
xor
lea
cdq
dec
xor
addr16
stc
mov
fnstsw
enter
mov
aad
out
pop
ds
ins
jne
sbb
mov
es
xor
and
push
rcl
adc
push
out
cmp
pop
dec
std
fcom
sar
jmp
or
bound
mov
or
and
push
dec
fdivrp
je
sbb
xor
xchg
mov
xor
stos
in
iret
loop
les
push
stc
pop
rol
out
and
sbb
sahf
mov
push
mov
xlat
xchg
mov
mov
push
ins
aam
out
movs
add
mov
fcomi
inc
pop
push
pusha
es
hlt
and
aad
jae
jecxz
pusha
rcl
cmp
xor
adc
jbe
push
push
hlt
mov
ret
test
add
outs
(bad)
shl
pop
jp
and
push
pop
nop
xchg
xchg
xchg
add
push
out
lahf
popf
and
dec
aas
(bad)
in
fwait
mov
iret
inc
dec
pop
push
sbb
aad
mov
xchg
shl
ds
mov
mov
or
or
gs
(bad)
(bad)
enter
mov
(bad)
dec
cmp
push
in
(bad)
xchg
sub
stos
loope
mov
js
mov
ja
aaa
in
xchg
bound
dec
inc
jmp
in
pop
lods
test
jae
cwde
fwait
dec
fmulp
mov
mov
fsubr
(bad)
adc
push
cld
mov
or
jl
lahf
push
jge
in
lahf
rcr
je
jbe
lods
lods
dec
les
adc
xchg
icebp
js
cmp
test
jecxz
fcomi
ss
das
loopne
ss
int3
jmp
jmp
pop
jne
jp
in
daa
jmp
push
push
pop
lea
mov
xor
leave
pop
mov
ud2
pop
call
jecxz
jmp
sahf
popf
pop
xlat
fcmovu
cli
popa
mov
jg
cmp
pop
cmp
push
jl
xchg
stos
mov
mov
aam
enter
cli
inc
mov
sahf
jl
jns
cmovp
xchg
popf
popf
sub
aad
test
pop
sbb
xchg
xor
outs
outs
cwde
ja
push
xor
idiv
jo
pop
call
push
pop
(bad)
into
dec
gs
jne
dec
(bad)
fdiv
pushf
mov
sub
pop
ret
ins
dec
fcmovnu
aam
je
mov
ins
in
cmc
mov
(bad)
cmp
xchg
lds
inc
neg
sar
dec
mov
push
mov
xor
xchg
jg
mov
int
and
inc
pushf
lahf
inc
dec
dec
adc
xchg
add
add
dec
inc
scas
inc
pusha
and
add
dec
inc
or
add
or
add
add
add
add
or
add
add
add
sbb
je
outs
data16
popa
jb
add
outs
bound
dec
ins
popa
addr16
gs
fs
leave
gs
add
push
js
pushf
xchg
imul
(bad)
push
ds
movs
push
xor
xor
shl
xchg
adc
bound
movntps
enter
std
push
add
and
inc
or
jle
call
add
sub
scas
add
mov
mov
jnp
dec
bound
jnp
ja
pushf
cmp
or
pusha
outs
aad
aad
push
push
dec
mov
in
(bad)
or
movs
into
cmp
push
jnp
call
push
aad
movs
push
jno
cmc
and
sti
sub
ret
and
cmp
xor
fimul
dec
cld
cld
inc
pop
cmp
ins
jae
mov
adc
les
dec
jp
call
ret
adc
add
fnsave
lods
push
jmp
xchg
xchg
xchg
out
and
into
inc
jecxz
inc
pop
outs
std
int
scas
rcl
sub
in
cdq
and
ins
pop
xchg
xchg
xor
xor
mov
in
jne
xchg
xchg
ret
out
test
cmp
jno
cmc
xor
cs
or
sub
in
retf
jno
or
push
inc
daa
nop
nop
fnstcw
outs
in
pop
test
jecxz
js
push
mov
push
cs
sbb
mov
inc
and
rol
jle
mov
aad
or
iret
xchg
retf
jmp
pop
jne
mov
jns
(bad)
xor
cmp
dec
jae
sar
jbe
jne
call
rcl
jecxz
pushf
int
push
push
or
js
leave
fs
xlat
pop
sub
aam
repz
mov
jl
jo
pop
jae
dec
cmc
std
sub
dec
or
mov
(bad)
popa
lock
or
jge
push
jno
jg
sbb
or
jnp
ret
inc
sbb
scas
ficomp
pop
mov
lea
xchg
cwde
call
fmul
cld
cld
jl
fnstcw
mov
jo
inc
jne
push
fs
aaa
push
jb
ds
jbe
test
lea
pop
add
add
cmc
dec
jmp
mov
push
add
cs
jecxz
sbb
daa
rcr
or
cli
pushf
arpl
xor
xchg
pop
test
and
pop
or
xchg
xchg
push
bound
inc
sub
mov
fld
or
sub
in
xor
fdivr
sub
les
in
and
push
stc
gs
mov
fisttp
sub
(bad)
in
sub
sbb
je
add
fwait
imul
sub
pop
pop
push
mov
jmp
xabort
push
xchg
sar
out
pop
or
fwait
dec
add
mov
in
inc
shl
rcl
mov
mov
mov
pop
push
jle
mov
inc
mov
jecxz
(bad)
not
sub
ret
push
xor
div
push
addr16
xchg
adc
add
(bad)
fisttp
les
cmp
push
push
mov
cmc
fwait
scas
or
jge
jge
test
add
test
aaa
sti
xor
xor
int
or
mov
jmp
ins
into
js
repz
mov
pop
out
add
sbb
sahf
and
xchg
add
sub
loopne
cmc
mov
cmp
add
xor
mul
push
out
mov
int3
sbb
cli
mov
dec
jle
dec
dec
rep
das
jle
pop
pop
lahf
dec
cmp
test
xor
jo
sbb
ret
fstp
fisubr
out
cmp
unpcklps
cld
cmp
pop
out
ss
pop
je
jmp
div
jbe
push
push
shr
and
retf
and
xor
push
inc
adc
lods
cmp
repz
and
jmp
out
fldenv
mov
out
xchg
out
jns
add
lock
inc
test
mov
lock
jl
pusha
xchg
mov
xchg
sbb
pop
sbb
(bad)
jl
test
fild
cmps
imul
jle
push
jl
jle
inc
xchg
mov
outs
cwde
push
dec
test
fld1
int
retf
jp
lahf
dec
push
js
or
out
fsubr
push
adc
outs
push
sbb
sbb
iret
pusha
neg
push
pusha
repz
mov
xchg
jae
mov
les
es
mov
mov
xor
jb
cs
jo
leave
inc
xchg
mov
cmp
push
lods
outs
adc
(bad)
scas
mov
lahf
push
dec
out
xlat
dec
mov
sti
jmp
mov
xchg
out
dec
mov
jp
iret
jo
sub
add
lds
add
dec
inc
scas
inc
pusha
and
add
add
or
or
add
or
add
add
add
add
or
add
add
sbb
add
add
je
pop
je
outs
data16
popa
jb
add
outs
bound
dec
ins
popa
addr16
gs
fs
leave
gs
add
or
pop
nop
inc
push
test
or
iret
sub
out
cdq
bound
mov
pop
in
inc
xchg
out
repz
repnz
adc
mov
xor
mov
not
(bad)
pop
mov
push
stos
(bad)
retf
out
ds
lods
loopne
enter
ins
sbb
cdq
in
(bad)
cmp
jle
sbb
adc
pop
mov
mov
(bad)
pop
add
push
cmp
push
add
add
dec
inc
dec
inc
scas
inc
pusha
and
or
add
add
dec
add
inc
add
dec
add
add
add
pusha
add
add
add
(bad)
(bad)
(bad)
inc
sbb
add
inc
push
outs
ins
jne
gs
outs
outs
arpl
jb
gs
push
gs
imul
cs
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
outs
jne
ins
sbb
arpl
outs
popa
ins
gs
popa
arpl
push
outs
ins
jne
gs
outs
outs
arpl
jb
gs
outs
outs
je
outs
ins
jae
push
outs
ins
jne
gs
outs
outs
arpl
jb
gs
outs
outs
je
outs
ins
jae
add
add
cmp
outs
outs
sub
push
gs
imul
cs
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
outs
jne
ins
sbb
arpl
outs
popa
ins
gs
popa
arpl
inc
outs
ins
ins
outs
outs
cs
outs
outs
je
outs
ins
jae
popa
jae
gs
bound
inc
outs
ins
ins
outs
outs
cmovae
ins
outs
outs
cs
outs
outs
je
outs
ins
jae
add
add
push
outs
ins
jne
gs
outs
outs
arpl
jb
gs
popa
imul
ja
add
add
add
dec
push
imul
popa
jae
sub
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
xor
bound
cmp
ss
xor
pop
push
jb
jae
outs
je
je
outs
outs
inc
jb
ins
gs
jb
sub
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
xor
bound
cmp
ss
xor
push
push
jb
jae
outs
je
je
outs
outs
inc
outs
jb
sub
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
xor
bound
cmp
ss
xor
push
das
das
jae
push
cs
imul
je
arpl
das
ja
outs
data16
xor
xor
das
js
ins
ins
das
jo
gs
outs
je
je
outs
outs
add
add
add
add
adc
add
push
das
das
jae
push
cs
imul
je
arpl
das
ja
outs
data16
xor
xor
das
js
ins
ins
add
add
add
add
adc
or
outs
je
outs
ins
jae
arpl
outs
popa
ins
gs
popa
arpl
push
outs
ins
jne
gs
outs
outs
arpl
jb
gs
outs
outs
je
outs
ins
jae
add
add
add
adc
or
outs
je
outs
ins
jae
sub
outs
popa
ins
gs
popa
arpl
inc
outs
ins
ins
outs
outs
cs
outs
outs
je
outs
ins
jae
popa
jae
gs
bound
inc
outs
ins
ins
outs
outs
add
add
add
add
sub
pop
sbb
add
imul
popa
jb
jne
dec
outs
arpl
imul
or
outs
je
jb
arpl
outs
cmp
add
gs
jp
dec
outs
fs
add
or
push
gs
jp
cmp
add
imul
adc
ins
jne
and
outs
arpl
jb
gs
std
pop
adc
add
imul
outs
je
outs
je
adc
add
push
imul
imul
adc
push
inc
or
jae
jne
arpl
or
add
adc
je
imul
outs
je
js
dec
outs
jne
adc
or
popa
arpl
outs
je
adc
add
popa
jae
jb
jo
push
pop
or
add
add
popa
ins
gs
std
add
or
add
add
add
add
xchg
inc
and
add
jne
gs
outs
imul
push
add
add
cs
inc
ins
inc
and
pop
add
push
gs
arpl
gs
std
sub
and
mov
outs
cdq
std
add
(bad)
std
add
ins
inc
and
pop
add
dec
outs
jne
push
jne
je
std
sub
and
mov
imul
repnz
add
add
(bad)
inc
xor
movs
(bad)
pop
adc
add
push
outs
ja
imul
outs
outs
jae
or
add
std
add
mov
ss
add
jecxz
add
jecxz
add
mov
add
add
cs
sbb
add
inc
outs
ins
ins
outs
outs
cs
outs
outs
je
outs
ins
jae
inc
imul
add
sar
xor
(bad)
pop
or
add
push
outs
jne
arpl
aaa
or
xor
push
outs
ins
jne
gs
outs
outs
arpl
jb
cmp
ins
jo
outs
outs
je
dec
ins
popa
addr16
push
jb
bound
imul
outs
addr16
and
(bad)
inc
xor
movs
(bad)
and
sar
add
xor
movs
inc
cmp
and
sar
xor
(bad)
and
xchg
inc
xor
jmp
iret
dec
xor
cmp
xor
sub
jno
and
enter
outs
jo
jmp
sar
add
gs
jmp
arpl
fs
and
je
ins
popa
je
arpl
jbe
ins
jne
and
push
jae
ins
outs
je
je
and
outs
imul
outs
jb
popa
bound
jae
je
popa
je
outs
outs
jae
cdq
std
add
cmp
and
sar
xor
inc
push
xchg
(bad)
call
aaa
xor
xor
xor
xchg
inc
xor
sub
and
iret
dec
xor
cmp
xor
sub
jno
and
enter
outs
jo
jmp
sar
add
gs
jmp
(bad)
inc
xor
xor
(bad)
inc
jb
jo
jmp
add
js
cmp
push
gs
popa
jne
outs
sub
and
ja
and
xor
and
cmp
and
and
jne
push
imul
and
je
outs
and
jb
jns
je
and
fs
outs
and
and
and
and
ins
outs
je
popa
outs
jns
gs
outs
je
ins
imul
jae
outs
addr16
outs
outs
je
imul
imul
and
ins
jne
and
outs
and
jae
ins
jns
ja
imul
push
jo
cdq
std
add
daa
add
add
and
ins
jne
gs
outs
outs
arpl
jb
gs
outs
outs
je
outs
ins
jae
push
jne
gs
imul
sub
pop
or
add
add
add
popa
ins
gs
or
or
ins
gs
imul
sar
xor
inc
add
add
sar
xor
(bad)
and
or
xor
push
outs
ins
jne
gs
outs
outs
arpl
jb
cmp
ins
jo
outs
outs
je
dec
ins
popa
addr16
outs
outs
je
jb
bound
imul
outs
addr16
and
(bad)
inc
xor
movs
(bad)
and
sar
add
xor
add
sar
xor
(bad)
pop
adc
add
jb
outs
je
je
outs
outs
and
or
or
jb
jp
outs
je
ins
cmp
inc
inc
outs
je
jb
jmp
sar
add
gs
jmp
sub
sub
sub
jno
pop
or
add
inc
jne
jae
jb
or
add
popa
outs
fs
cs
sbb
add
push
outs
ins
jne
gs
outs
outs
arpl
jb
gs
outs
outs
je
outs
ins
jae
inc
fs
gs
jne
add
add
sbb
add
push
outs
ins
jne
gs
outs
outs
arpl
jb
gs
outs
outs
je
outs
ins
jae
inc
fs
gs
jne
gs
or
add
add
imul
add
inc
fs
gs
jne
gs
inc
ins
imul
sar
xor
(bad)
and
sar
add
gs
jmp
iret
dec
xor
sub
sub
sub
jno
add
cmp
sub
pop
or
add
popa
ins
gs
push
add
popa
fs
gs
std
and
sar
xor
(bad)
and
xchg
call
inc
fs
ja
push
outs
ins
jne
and
ins
gs
std
and
xchg
inc
xor
sub
push
push
xchg
(bad)
call
xor
cmp
data16
iret
inc
xor
sub
sub
jno
and
enter
outs
je
jb
jmp
xchg
dec
push
outs
fs
imul
add
add
add
push
add
jae
jo
outs
jb
dec
bound
and
sar
xor
(bad)
and
xchg
inc
push
jne
jo
jb
cdq
std
and
sar
push
inc
outs
je
jb
jmp
enter
outs
je
jb
jmp
or
add
popa
outs
fs
and
xchg
inc
xor
sub
push
push
xchg
(bad)
call
xor
cmp
data16
xchg
dec
push
outs
fs
imul
cmps
std
add
sar
xor
(bad)
and
or
or
jb
jp
outs
je
ins
cmp
inc
inc
outs
je
jb
jmp
sar
add
je
jmp
iret
dec
xor
sub
xor
jno
and
or
add
popa
outs
fs
cs
add
add
and
or
xor
push
outs
ins
jne
gs
outs
outs
arpl
jb
cmp
ins
jo
outs
outs
je
dec
ins
popa
addr16
outs
outs
popa
je
sub
cs
addr16
and
sar
add
xor
(bad)
inc
xor
cmp
sub
and
push
add
outs
outs
popa
je
dec
bound
and
xchg
call
and
gs
jae
and
popa
je
and
push
jne
jo
jb
cdq
std
and
xchg
inc
xor
sub
push
push
xchg
(bad)
call
xor
cmp
data16
xchg
dec
push
outs
fs
imul
add
add
jecxz
add
or
add
dec
add
inc
add
dec
add
add
add
pusha
add
add
add
(bad)
(bad)
(bad)
inc
sbb
add
cmp
outs
outs
sub
push
gs
imul
cs
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
outs
jne
ins
sbb
arpl
outs
popa
ins
gs
popa
arpl
inc
outs
ins
ins
outs
outs
cs
outs
je
imul
outs
outs
inc
outs
je
jb
popa
jae
gs
bound
inc
outs
ins
ins
outs
outs
sbb
ins
ins
outs
outs
cs
outs
je
imul
outs
outs
inc
outs
je
jb
add
add
orps
jne
gs
outs
outs
arpl
jb
gs
add
outs
ins
jne
gs
outs
outs
arpl
jb
gs
outs
je
data16
imul
add
sbb
add
dec
push
imul
popa
jae
sub
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
xor
bound
cmp
ss
xor
pop
push
jb
jae
outs
je
je
outs
outs
inc
jb
ins
gs
jb
sub
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
xor
bound
cmp
ss
xor
push
push
jb
jae
outs
je
je
outs
outs
inc
outs
jb
sub
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
xor
bound
cmp
ss
xor
push
das
das
jae
push
cs
imul
je
arpl
das
ja
outs
data16
xor
xor
das
js
ins
ins
das
jo
gs
outs
je
je
outs
outs
add
add
add
add
adc
add
push
das
das
jae
push
cs
imul
je
arpl
das
ja
outs
data16
xor
xor
das
js
ins
ins
add
add
add
add
adc
adc
je
imul
outs
outs
inc
outs
je
jb
arpl
outs
popa
ins
gs
popa
arpl
inc
outs
ins
ins
outs
outs
cs
outs
je
imul
outs
outs
inc
outs
je
jb
popa
jae
gs
bound
inc
outs
ins
ins
outs
outs
add
add
add
add
pop
adc
add
push
push
popa
jae
bound
push
push
add
add
pop
adc
add
imul
jns
gs
add
add
outs
outs
gs
add
gs
jp
dec
outs
fs
add
or
push
gs
jp
cmp
add
ins
ins
outs
ja
push
jb
outs
jae
popa
jb
outs
arpl
push
add
add
push
or
(bad)
call
inc
repnz
add
outs
outs
cs
outs
je
imul
outs
outs
inc
outs
je
jb
dec
outs
je
imul
outs
outs
jae
outs
jo
jo
outs
outs
je
imul
add
pop
or
add
add
popa
ins
gs
add
movd
imul
popa
imul
adc
add
add
or
je
ins
jae
outs
jne
je
or
(bad)
add
and
add
add
add
add
add
add
add
push
add
add
xor
add
add
add
add
int3
xchg
add
and
add
add
and
sub
add
xor
add
sbb
add
add
and
mov
leave
add
adc
add
add
and
push
rol
add
or
or
add
or
add
add
add
add
or
add
add
data16
and
dec
inc
inc
push
js
int3
mov
jns
mul
mov
aad
aad
xor
sub
sub
cmp
call
mov
lds
fdiv
or
sub
jne
push
out
jnp
in
out
mov
push
push
cmps
or
lahf
int3
mov
out
mov
ins
ror
int3
int3
xor
xlat
xlat
sbb
adc
les
cmp
and
sub
shl
mov
into
push
sbb
add
cwde
xor
fistp
pop
aaa
jmp
push
aas
aaa
pop
sti
pop
int
icebp
popa
xor
(bad)
std
call
sub
cs
jmp
frstor
out
lds
fcomp
mov
iret
into
int
xchg
xchg
xchg
int
in
fcmovne
xchg
cld
(bad)
data16
test
stc
mov
sti
pop
cmp
std
lahf
mov
popa
jae
jno
fdivr
mov
xor
outs
mov
rcl
xor
ret
fcomp
out
mov
icebp
shl
dec
call
(bad)
mov
lods
cmp
int
cli
jp
fisubr
fisubr
mov
xlat
fidivr
aas
aas
outs
outs
fnstsw
ins
cwde
ret
add
and
pop
xor
push
fwait
jnp
pop
pop
xchg
popf
cmps
pop
int
lock
mov
pop
dec
loopne
jmp
cmp
je
test
call
js
sbb
retf
das
fs
cmps
aaa
aas
xlat
mov
fcomp
mov
fwait
push
jp
mov
jne
jle
ins
scas
inc
push
outs
(bad)
(bad)
in
test
popf
sbb
shr
jne
stos
stos
mov
data16
mov
pop
xchg
ret
out
cld
lods
cmp
je
popf
jmp
mov
int3
into
int
cmp
or
pushf
mov
test
xor
pop
leave
popf
retf
and
pop
mov
out
mov
(bad)
inc
xchg
repz
xchg
repz
mov
retf
lea
pop
mov
shr
ss
mov
into
popf
data16
inc
mov
js
pop
outs
fistp
mov
mov
je
lock
ss
lock
jae
mov
out
(bad)
std
sti
(bad)
test
aad
jbe
idiv
js
jp
ss
xlat
jg
hlt
sti
jge
(bad)
jmp
pop
ret
addr16
and
jmp
mov
fimul
xor
stc
sbb
dec
cmps
div
ud0
in
into
push
mov
ror
(bad)
ins
adc
sbb
inc
push
dec
mov
imul
daa
aas
adc
adc
or
dec
jp
adc
pop
push
mov
sub
clc
loopne
sbb
mov
push
cmps
push
mov
lahf
lahf
int3
xor
or
xor
mov
enter
cmp
push
retf
push
xchg
xor
mov
add
mov
shl
or
psubusb
cmps
jb
mov
adc
aam
ja
cmps
aas
fist
cmps
es
pop
or
fstp
lods
cmp
jle
shr
mov
push
adc
je
stos
fimul
rcl
xor
jae
sbb
dec
cmps
jnp
into
jo
(bad)
mov
outs
out
hlt
repnz
jmp
in
jns
jns
jle
jno
imul
mov
or
xor
out
cs
rol
sub
jp
inc
daa
fnsave
dec
mov
cdq
(bad)
leave
js
xchg
je
jmp
adc
arpl
stos
repnz
push
shr
jo
lahf
ret
add
rcr
shr
and
lds
jecxz
clc
or
jle
jns
cdq
xor
rcl
sub
mov
push
jecxz
dec
or
cwde
xor
into
cmp
adc
leave
lods
in
or
enter
jb
lock
add
scas
sub
push
jecxz
push
dec
repnz
jnp
dec
movs
popa
lea
dec
push
call
pusha
pop
das
scas
outs
pop
aaa
push
imul
xlat
out
inc
inc
in
mov
fistp
jmp
xchg
mov
dec
mov
outs
cmps
cdq
in
jbe
or
out
pop
int
into
pop
dec
jmp
outs
cmps
jae
xor
sbb
sbb
mov
sar
jns
jno
jne
jge
js
mov
cmps
mov
je
jle
pusha
outs
outs
out
in
hlt
repnz
jp
sub
(bad)
in
push
or
jecxz
lods
and
scas
jmp
pop
jnp
pop
(bad)
test
pop
ret
jo
push
ret
pop
dec
icebp
dec
cwde
hlt
cmps
popa
mov
fild
jecxz
loope
retf
adc
ficom
push
shr
ret
sub
shr
cmp
jo
mov
movs
push
mov
in
inc
and
inc
inc
jl
inc
(bad)
cmp
pop
loope
mov
sbb
mov
(bad)
je
xor
or
(bad)
dec
pop
repnz
(bad)
inc
mov
or
mov
and
pop
in
repz
cmp
inc
inc
xchg
inc
ins
cmps
movs
adc
sub
adc
loop
pop
inc
aam
stc
loop
sub
adc
(bad)
push
(bad)
or
dec
jae
repnz
pop
xchg
imul
xor
movs
xchg
jnp
jns
mov
repnz
pop
cmc
pop
xor
jns
out
inc
mov
shl
repz
mov
jnp
lahf
popf
cmp
jbe
jnp
fwait
in
popf
test
jnp
jae
(bad)
cmps
cmp
cmp
mov
add
jle
rcr
fcomp
fistp
retf
mov
into
jne
inc
ss
inc
cmps
fidivr
xor
jne
in
in
and
(bad)
dec
rol
scas
xchg
add
retf
jo
and
hlt
imul
popa
add
push
movs
push
cmp
sub
inc
lock
dec
pop
xchg
xchg
or
dec
push
mov
loopne
lock
jle
and
push
sub
cwde
mov
push
shl
imul
in
cmp
inc
movs
mov
mov
push
sbb
xchg
(bad)
pop
jmp
adc
xor
add
mov
or
call
aad
pop
push
scas
(bad)
mov
lock
vpsubd
jo
loop
in
push
jmp
cs
inc
sub
pop
xchg
jae
and
das
jnp
mov
jmp
mov
cli
int3
cmc
cmc
and
xchg
scas
jg
pop
add
adc
out
(bad)
out
dec
cmps
ja
cwde
in
iret
cmc
jp
jmp
mov
pop
int
into
pop
int
int
sub
sub
inc
retf
or
dec
das
sub
pop
jl
ficom
mov
push
dec
mov
outs
jge
repz
fstp
(bad)
aaa
mov
cmp
pop
pop
outs
out
outs
dec
cmps
fwait
pushf
sub
mov
movs
fst
ss
sahf
jle
sahf
mov
jle
loopne
jns
dec
pop
in
cmps
imul
nop
test
ret
(bad)
push
sub
push
mov
adc
add
dec
push
and
sub
xor
fmul
adc
rcr
xor
add
popf
jo
xchg
rcr
dec
jp
adc
jl
jne
or
shl
test
and
xchg
add
cmps
lahf
cmp
out
mov
into
and
mov
push
cmps
push
loop
mov
or
data16
shr
cmc
lods
in
scas
mov
jle
jle
cli
bnd
cli
repnz
mov
lds
retf
mov
sbb
push
jbe
je
in
mov
(bad)
jp
sbb
clc
fiadd
fwait
iret
xchg
push
push
xor
stos
iret
xchg
data16
ror
dec
push
imul
push
fisubr
xor
js
pop
pop
outs
out
pop
pop
mov
aaa
dec
dec
dec
mov
sti
mov
jg
jae
(bad)
sub
mov
push
ds
sar
jl
in
daa
mov
aad
sbb
and
int
mov
add
pusha
fsubr
add
loope
in
jns
rcr
jecxz
loope
shr
leave
or
push
mov
retf
bound
fsub
xor
jne
lds
cmps
xlat
loope
cmps
out
dec
jge
fwait
les
adc
adc
push
dec
pop
and
loopne
into
daa
das
in
pusha
arpl
adc
cmp
sub
or
sub
xor
fisttp
sar
sub
gs
int3
pop
pop
retf
fwait
xor
push
cmp
hlt
or
aaa
aas
fld
scas
cmps
rol
das
out
pop
pop
pop
mov
(bad)
cld
je
(bad)
lock
jp
sbb
push
mov
fistp
sahf
(bad)
out
das
iret
mov
jg
push
(bad)
push
mov
ror
sbb
popa
cmp
movs
xor
sbb
jne
xchg
push
fisttp
mov
test
xchg
repnz
dec
cdq
sub
sti
je
cli
je
and
xchg
gs
lea
cmps
xor
dec
or
sub
mov
in
jb
jge
in
aad
pop
mov
fnstsw
mov
pop
(bad)
loopne
std
sti
jg
je
repz
(bad)
pop
jle
aaa
inc
daa
(bad)
jnp
mov
cmp
or
mov
bound
popa
pop
xchg
popf
cmps
retf
movs
sub
dec
js
jmp
and
sbb
popa
lock
das
fcomp
sub
pop
and
and
or
xchg
inc
push
adc
add
push
imul
jo
mov
push
aaa
push
loop
add
pop
(bad)
sbb
push
pop
sub
les
cld
xchg
in
dec
and
pop
std
xchg
lods
ror
mov
mov
or
repnz
aad
enter
push
stc
adc
fs
pop
repnz
into
sub
sub
test
scas
jl
cmc
dec
fidivr
cwde
jmp
pop
fnstsw
jmp
mov
pop
push
div
mov
fnstcw
out
mov
inc
in
dec
dec
mov
aas
test
mov
(bad)
adc
lods
ret
shl
sar
lods
(bad)
pop
in
sbb
xor
in
mov
pop
mov
dec
jmp
dec
inc
push
jge
push
frstor
jnp
mov
mov
fcomp
fstp
mov
(bad)
pop
mov
mov
call
mov
(bad)
pop
xlat
shl
cmp
(bad)
aaa
ss
xchg
inc
jo
pop
retf
mov
nop
add
retf
add
in
pop
sbb
cmc
jb
retf
push
adc
or
leave
iret
cld
fisub
mov
fistp
ret
dec
inc
and
pusha
pop
cmp
adc
push
loop
add
jno
mov
pop
inc
(bad)
xchg
outs
mov
in
add
hlt
hlt
dec
rdtsc
stos
xchg
mov
mov
adc
cli
push
and
icebp
push
movs
movs
bound
dec
leave
sub
adc
push
mov
mov
jo
add
(bad)
mov
inc
xchg
jg
or
push
push
mov
(bad)
in
loope
fimul
cmps
lock
sbb
call
(bad)
jmp
jge
lock
imul
jno
cwde
inc
inc
in
cmp
rcr
push
gs
push
mov
arpl
adc
lods
lahf
ins
adc
pushf
inc
cs
loop
inc
shl
fld
gs
push
xor
adc
shr
mov
ss
pop
jg
sub
lods
xor
mov
or
pop
mov
(bad)
(bad)
push
push
lods
fistp
clc
retf
iret
je
pusha
stc
xchg
out
mov
jnp
scas
mov
pop
jle
cdq
rcr
and
lock
fwait
jbe
rcl
scas
dec
retf
jo
mov
sub
clc
sbb
mov
hlt
test
icebp
shl
std
jns
int3
add
mov
loop
retf
xchg
xor
add
push
sbb
pop
fisub
pop
lds
adc
shl
cdq
dec
mov
movs
lods
adc
leave
(bad)
enter
jb
mov
push
adc
jo
push
(bad)
in
pusha
lods
inc
dec
int3
add
rcl
fwait
pop
nop
push
imul
mov
ret
cmp
ins
inc
adc
mov
pop
test
xor
inc
sti
fsubrp
out
frstor
mov
jle
in
in
loope
ror
and
loopne
lahf
mov
mov
cs
shr
je
retf
dec
in
mov
ja
fsubr
mov
xlat
outs
ds
(bad)
call
enter
popa
fist
daa
sar
int3
int
sbb
sub
fdivr
mov
add
jb
mov
fwait
(bad)
fsubrp
mov
pop
je
pop
fcomp
jg
fimul
not
(bad)
xlat
push
ficomp
std
in
in
mov
pop
pop
jge
xchg
mov
lahf
mov
movs
jmp
and
adc
and
xchg
jb
dec
cmp
cmp
test
xor
inc
sub
icebp
xor
xor
dec
jge
push
and
scas
sub
cmp
push
adc
int3
sub
outs
ins
and
pop
(bad)
sub
sub
add
push
fldcw
rol
in
pop
call
mov
imul
jmp
push
ds
xor
mov
lds
pop
mov
inc
test
pop
pop
pop
ja
popf
shl
in
mov
(bad)
int
xor
jmp
push
push
aas
lods
push
jg
call
jo
scas
shl
jmp
mov
dec
pop
lea
pop
fwait
outs
fdiv
loope
lds
jnp
out
pop
sub
arpl
or
jb
out
xchg
scas
inc
ret
pop
sbb
jl
or
sub
je
pop
daa
pop
(bad)
popf
jbe
ja
inc
and
pusha
jg
xlat
push
ret
mov
retf
or
cmp
and
xchg
xchg
sub
fwait
dec
fwait
popf
std
frstor
jnp
sar
inc
repz
mov
jl
cli
fnstsw
lds
add
mov
pop
(bad)
(bad)
aas
std
in
jg
jp
test
not
push
inc
pushf
mov
dec
cwde
hlt
mov
adc
xor
sbb
scas
popa
jmp
je
loop
inc
daa
jns
rep
pop
je
sub
(bad)
sahf
or
loop
inc
(bad)
adc
mov
push
xor
pop
sub
xchg
clc
mov
fwait
jo
daa
dec
push
fwait
xor
lods
sub
xor
inc
ins
push
add
pop
les
in
adc
sahf
and
jb
mov
cmps
and
cmp
cmp
xor
dec
mov
ret
test
push
loope
and
fisttp
dec
or
xlat
mov
mov
sbb
in
call
jecxz
stos
popa
fdivr
cmp
mov
hlt
addr16
cs
fadd
push
inc
addr16
loop
jecxz
mov
(bad)
dec
jnp
dec
pop
das
mov
nop
fsubr
adc
or
mov
ret
inc
jnp
stc
(bad)
addr16
outs
xor
xchg
inc
push
ror
neg
inc
xchg
cdq
push
inc
dec
nop
xchg
scas
into
inc
mov
jge
mov
jno
mov
pushf
test
stc
call
hlt
jmp
out
in
mov
xlat
xchg
push
pop
jmp
xchg
lea
(bad)
jle
scas
retf
pop
fimul
dec
addr16
repz
std
test
jb
aas
ror
pop
jmp
sbb
mov
hlt
cmps
imul
adc
add
inc
xchg
add
dec
test
test
scas
std
push
adc
push
mov
xor
push
daa
and
add
xchg
jge
add
mov
push
popa
stos
jnp
add
sub
and
outs
sbb
ss
inc
mov
mov
inc
sub
int3
inc
imul
leave
daa
jge
sbb
stc
dec
and
pop
fidivr
push
lock
mov
xchg
dec
mov
jg
push
leave
leave
push
xor
fistp
hlt
je
hlt
mov
inc
imul
xchg
bndstx
out
scas
push
dec
arpl
ss
retf
aas
mov
pop
imul
lds
pop
xor
movs
imul
xchg
mov
inc
xlat
lock
fwait
dec
pop
ds
xor
inc
jne
rol
in
(bad)
mov
ficom
and
popw
int3
cmp
pop
sub
mov
fs
jne
cli
sbb
fnstenv
rol
out
lock
fwait
xchg
pop
jg
aad
imul
scas
iret
int
data16
std
(bad)
retf
in
fistp
idiv
xchg
pop
pop
pop
cmp
cmp
sub
hlt
cmps
shl
dec
fidiv
cmp
fwait
xor
adc
dec
sbb
and
cli
mov
adc
mov
rcl
push
jne
xchg
rcl
mov
pushf
add
xchg
xchg
test
call
mov
adc
mov
add
addr16
sub
ficomp
mov
test
push
in
cmp
and
dec
out
pop
mov
inc
add
pop
out
movs
and
mov
fwait
iret
mov
out
fwait
daa
inc
xchg
dec
pop
std
xchg
hlt
das
push
jo
push
jnp
lods
pop
jbe
pop
retf
stos
xchg
jmp
fwait
js
loope
mov
dec
stc
jecxz
push
push
and
ds
adc
mov
inc
fisub
or
cmps
out
add
in
lods
or
out
out
loope
jae
test
sbb
xor
push
jb
push
or
nop
xchg
and
push
inc
pop
mov
jae
je
push
imul
std
test
loopne
std
out
lods
fistp
push
xchg
push
(bad)
jp
pop
out
mov
jmp
hlt
mov
pop
push
sbb
jo
cmp
in
in
das
std
test
sub
xchg
jle
and
push
lahf
test
(bad)
pop
cmp
or
lahf
push
adc
adc
(bad)
xchg
pop
pusha
add
fimul
or
xchg
inc
mov
test
jo
inc
retf
scas
enter
outs
jmp
gs
jmp
pop
sub
mov
jmp
cmc
or
dec
xor
imul
xchg
jo
xlat
mov
cmp
sar
mov
cld
mov
xor
clc
rcl
neg
addr16
jg
dec
int3
rol
mov
movs
(bad)
in
mov
leave
push
pop
dec
out
rcl
jne
xlat
jle
cli
xor
int
mov
pop
aam
dec
jle
in
pop
pop
sub
push
mov
push
push
daa
fwait
imul
add
adc
outs
mov
shl
or
xor
call
shl
push
push
pop
sbb
adc
add
inc
inc
pop
xor
cmp
pushf
xor
scas
sbb
icebp
test
stc
mul
aas
repz
jge
adc
jmp
(bad)
repnz
cmp
hlt
movs
mov
and
popa
ficomp
lahf
test
and
jb
xor
aas
std
int3
(bad)
scas
shr
jo
movs
pop
aaa
in
mov
movs
stos
pusha
sub
cmps
push
sbb
cs
ret
push
cwde
adc
js
pop
clc
sub
dec
call
sbb
lock
cmp
iret
mov
shl
push
dec
pop
dec
mov
addr16
ret
push
jno
or
adc
leave
or
loopne
sub
xor
gs
xor
movs
adc
scas
scas
mov
mov
pop
out
pop
mov
pushf
sbb
jle
mov
aas
scas
xor
cmc
mov
rcr
or
cmc
ror
aad
cmp
mov
js
jmp
stos
inc
repnz
dec
cmp
pop
arpl
push
outs
or
fmul
jmp
nop
pusha
adc
cmp
rcl
sbb
pop
jl
push
int
and
adc
repnz
js
xor
mov
les
fimul
cwde
pop
xor
inc
xor
into
idiv
cld
sub
dec
and
cli
maxps
ja
fdivr
stos
(bad)
jmp
stc
out
icebp
outs
dec
lock
mov
adc
cmp
movs
cmovb
dec
jecxz
pop
stc
dec
fadd
push
jecxz
add
out
mov
imul
out
sub
add
xchg
adc
sbb
dec
cli
imul
jmp
xor
ret
fild
mov
in
xor
outs
loopne
fadd
adc
ror
xchg
and
mov
dec
popa
gs
push
push
arpl
xchg
enter
iret
jmp
add
imul
jecxz
mov
mov
xor
cmps
lds
(bad)
je
scas
mov
sbb
mov
in
ret
mov
data16
adc
movs
test
cld
xor
cmp
mov
xchg
adc
shl
adc
cs
retf
mov
dec
add
adc
mov
mov
add
pop
mov
fwait
mov
and
jno
lods
les
pushf
aad
xchg
movs
sub
pop
sbb
leave
jge
movs
ds
loopne
cmp
or
xchg
pop
jge
lds
cmp
pop
pop
pop
cmp
mov
lahf
cld
leave
arpl
and
xchg
in
pop
lea
into
sbb
mov
or
or
popa
loopne
jb
ret
inc
adc
fmul
add
cwde
xchg
xchg
or
mov
or
add
daa
pop
dec
jb
push
(bad)
int3
int3
xchg
xchg
jno
inc
inc
push
sbb
push
mov
unpckhps
movs
enter
adc
addr16
jb
sub
ret
mov
or
pushf
mov
mov
push
xor
outs
jge
lock
fstp
ds
loope
inc
ret
mov
mov
mov
test
xchg
mov
xor
ret
jle
(bad)
mov
in
lock
dec
je
sbb
and
push
ds
jecxz
push
and
fs
inc
xor
aas
enter
mov
sbb
ds
adc
js
and
push
scas
push
pcmpeqb
mov
xchg
jnp
movs
adc
xchg
idiv
scas
std
lods
xor
xor
loop
jno
pop
mov
dec
bound
shr
or
sbb
pop
lea
ja
in
(bad)
cli
sar
pminub
ror
inc
dec
int
hlt
sub
push
(bad)
jnp
bound
adc
or
sub
xor
adc
inc
xchg
push
call
cmp
pop
call
mov
rol
inc
mov
shl
pop
dec
and
cmp
loop
shl
mov
pop
loope
call
rcl
cld
push
jns
stos
stc
sub
rcr
leave
ret
push
pusha
adc
mov
mov
maxps
add
push
jg
call
fstp
iret
imul
xor
(bad)
shr
in
test
add
ret
jae
jl
add
retf
mov
pop
fstp
test
jmp
inc
adc
pop
xor
pushf
loope
ins
loope
scas
les
xchg
cmp
cmp
mul
or
mov
inc
mov
xor
outs
inc
sbb
lods
inc
jp
inc
shl
mov
pop
rcr
shr
outs
xor
(bad)
rol
popa
repz
mov
adc
jl
stos
scas
mov
jle
jecxz
and
inc
scas
neg
sbb
loop
sbb
aas
stc
daa
(bad)
fsubr
jb
dec
outs
ins
xchg
mov
mov
outs
(bad)
fstp
xchg
or
jno
sbb
add
mov
shr
je
outs
mov
dec
loope
push
popa
pop
xor
mov
push
sub
stos
dec
and
aas
clc
loope
retf
imul
fsubr
push
je
inc
sub
xor
sub
imul
dec
push
jb
dec
jne
outs
dec
pop
fstp
jp
stc
pusha
ja
sti
fwait
pop
fistp
jne
mov
shl
in
ins
xchg
xchg
mov
ja
cdq
sbb
mov
inc
cdq
cli
and
xchg
xchg
(bad)
shl
pop
in
mov
pushf
ins
sbb
(bad)
adc
or
xchg
sbb
inc
ret
push
add
fst
lods
fadd
adc
or
mov
leave
sti
add
mov
xlat
xlat
add
sahf
ins
mov
push
fimul
data16
and
jnp
mov
push
pop
(bad)
(bad)
loop
dec
jge
mov
mov
(bad)
(bad)
xlat
mov
jecxz
cmp
imul
(bad)
(bad)
xchg
mov
push
xor
rol
aas
pop
jmp
lea
dec
cmps
loope
lock
xchg
pop
icebp
and
add
(bad)
call
fsubp
xchg
dec
aam
or
mov
pop
rol
pop
rcl
aad
inc
mov
in
sbb
lea
sub
lea
arpl
adc
inc
pop
scas
push
xchg
ins
loopne
das
jb
dec
clc
mov
sbb
add
ror
inc
fdiv
sub
jmp
dec
ds
lock
cmp
cli
lods
cmps
mov
inc
pop
jns
jmp
(bad)
in
adc
lods
cmps
rcr
push
ret
mov
ret
inc
mov
xor
inc
imul
jbe
fidiv
shr
inc
hlt
ror
mov
pusha
add
and
retf
add
inc
enter
cwde
cmp
ror
dec
add
jns
sbb
xchg
pop
pop
sub
std
or
jno
sub
jp
mov
xor
jnp
rcr
repz
sbb
jno
jb
popf
add
movs
and
ss
sub
test
neg
imul
or
lea
aaa
(bad)
loopne
jg
xchg
mov
popf
sahf
popf
lea
cli
call
sub
sub
and
mov
adc
outs
icebp
cmps
loopne
xchg
pop
add
cmp
scas
or
sbb
in
adc
pusha
or
pop
xchg
stc
test
xor
add
outs
push
sub
push
rol
xchg
xchg
aad
jmp
or
cmp
shl
push
cwde
sub
in
xor
inc
xchg
add
rcl
es
cmp
dec
fiadd
mov
push
arpl
fcompp
jp
icebp
mov
int
mov
aad
div
(bad)
call
inc
pop
mov
inc
jnp
push
ret
sbb
pop
sub
inc
sbb
fld
ret
in
fwait
cdq
add
or
sub
cmp
mov
mov
aas
rcr
push
and
call
cmps
clc
xor
loope
ret
inc
sbb
fsubr
stc
shl
popa
in
retf
adc
add
dec
fst
nop
pop
xchg
jb
dec
jecxz
arpl
sbb
inc
sbb
add
popa
outs
rcl
cmc
mov
push
mov
out
ins
jg
movs
xlat
data16
push
jle
dec
inc
pop
sub
ds
addr16
(bad)
aas
xlat
in
jmp
shl
and
ret
and
int
fimul
ror
in
mov
movs
jno
inc
add
sbb
jbe
out
hlt
(bad)
in
ror
push
or
leave
sub
xchg
imul
add
jle
lods
repz
shr
or
test
inc
xor
xchg
outs
scas
pop
arpl
shl
cmp
sub
test
fiadd
adc
add
ret
repz
or
fnstsw
repz
cmp
jl
mov
pop
(bad)
push
hlt
fsub
in
(bad)
jecxz
sub
cld
pop
adc
aaa
adc
cli
dec
sbb
pushf
jle
mov
aaa
cmp
xor
inc
lea
test
push
pop
and
jmp
pop
sar
push
lock
xor
mov
mov
cmp
add
and
dec
inc
inc
push
mov
call
clc
shl
or
cmp
add
mov
in
gs
push
inc
mov
mov
adc
jmp
push
mov
mov
xchg
or
cmp
shl
lods
data16
lds
inc
sbb
mov
ss
mov
push
lahf
jle
in
fild
out
xchg
es
dec
push
xchg
sbb
dec
imul
jns
mov
cwde
pop
dec
test
les
xor
repnz
mov
dec
int
es
(bad)
cld
int3
stos
xchg
leave
jo
and
dec
ds
rcl
or
adc
daa
cs
push
dec
daa
fdivrp
mov
dec
jns
rcr
or
dec
lods
jmp
xchg
out
xchg
retf
data16
adc
xlat
mov
(bad)
mov
jo
lock
jmp
ret
(bad)
movs
rcl
(bad)
cmp
pop
jge
mov
push
(bad)
cld
pop
into
movs
adc
cmp
lea
fisttp
push
arpl
sbb
xchg
and
add
xchg
sbb
mov
pop
push
rol
(bad)
out
pop
cdq
jns
cmc
pop
out
add
cmps
and
in
test
rol
add
ffree
and
push
jb
or
mov
rcr
ja
je
test
push
inc
out
imul
cdq
pop
jo
dec
cmps
cmp
sbb
xor
rcl
jnp
es
and
std
and
clc
mov
das
mov
repnz
iret
jl
shl
ret
push
addr16
out
inc
cmp
stc
push
inc
in
cmp
and
add
or
sbb
xchg
dec
push
xchg
lods
mul
mov
sub
aaa
popf
push
rcl
in
add
or
push
mov
sub
xchg
mov
xchg
and
in
xlat
mov
push
mov
sbb
push
icebp
xor
pop
loope
aas
jb
pop
pop
movs
ss
or
(bad)
adc
add
sub
or
ins
jb
jg
and
ins
mov
inc
xchg
push
pop
jl
cmp
lea
out
out
in
sbb
sti
ins
sbb
pop
sbb
loopne
ja
jnp
dec
inc
mov
sub
jecxz
add
pop
cdq
out
leave
push
popa
xor
or
arpl
dec
jno
int
xchg
xchg
out
and
add
stos
mov
push
in
mov
(bad)
jb
sub
shl
mov
call
ins
out
fwait
add
adc
lahf
pusha
cmp
pop
sbb
nop
add
arpl
enter
pop
mov
pushf
stc
or
mov
jle
inc
psubq
sahf
dec
inc
dec
fst
loopne
push
les
xor
loopne
or
adc
push
mov
dec
out
sbb
sti
add
xor
sysret
das
fdivr
sub
mov
mov
sahf
pop
inc
push
mov
shl
jne
mov
rcl
retf
mov
dec
and
fmul
jecxz
imul
inc
js
fcmovnb
add
add
cmps
sbb
jecxz
pop
adc
sub
cli
cmp
adc
push
mov
inc
clc
or
loopne
xor
repnz
rcl
xchg
jle
test
sbb
pop
ror
mov
scas
repnz
or
push
mov
(bad)
mov
adc
out
adc
jo
and
add
stc
xchg
sbb
xchg
psadbw
mov
dec
lea
lahf
sbb
push
pop
imul
outs
(bad)
out
cmp
push
dec
test
mov
push
sub
xchg
push
jnp
pop
mov
ins
ret
ds
lock
jge
or
and
jne
sub
lahf
inc
push
in
lds
push
sbb
rcl
out
dec
or
xchg
iret
or
mov
cmc
lods
mov
cmp
inc
push
cmp
stos
xor
add
mov
pop
sub
int3
inc
out
xor
or
cs
aas
push
and
dec
cdq
popa
test
sub
(bad)
mov
addr16
aas
arpl
sbb
sbb
int
data16
cli
sub
into
(bad)
(bad)
call
sbb
mov
psrlq
sar
mov
push
imul
movs
imul
cmp
add
and
xchg
loope
pop
pop
fs
sub
into
out
loopne
mov
pop
cmp
jmp
test
adc
xor
pop
into
and
cmp
push
ss
or
pop
push
(bad)
cmp
jbe
xchg
daa
movs
icebp
adc
hlt
push
es
out
jg
addr16
ss
iret
call
popf
lea
int
scas
call
adc
mov
push
sub
out
mov
mov
scas
fisubr
mov
imul
xchg
mov
ret
xor
inc
ss
sahf
popa
sub
and
out
jecxz
sbb
ins
and
ins
add
mov
test
sbb
(bad)
sub
jae
or
adc
ds
out
xor
sbb
cmp
aam
push
xor
pop
pushf
pop
lock
cmps
addr16
xchg
xchg
pop
or
lea
nop
inc
mov
and
(bad)
sbb
pushf
pop
sbb
push
out
stos
xor
call
mov
imul
daa
pop
cmps
jmp
add
test
xchg
pop
out
aaa
sti
cld
fcmovbe
(bad)
mov
popf
cmp
aas
jl
cmp
sbb
jmp
and
xchg
push
shl
retf
push
sub
rcr
push
outs
cmp
mov
rol
jmp
and
in
loop
add
movs
das
cmps
sbb
fs
mov
loopne
jp
and
ror
je
lods
inc
ret
jno
adc
ins
cdq
test
or
ds
in
adc
fnsave
pop
jle
cmp
pushf
xchg
jns
add
cmp
in
dec
jno
(bad)
(bad)
mov
out
jg
test
pop
je
test
mov
in
in
push
loope
iret
pop
mov
pop
fwait
push
enter
pop
jge
cmp
cld
jecxz
jmp
mov
dec
daa
and
mov
cmp
mov
int3
pusha
mov
add
mov
xor
std
xchg
cli
jecxz
inc
dec
cdq
adc
pushf
mov
mov
mov
push
mov
lods
in
mov
aam
cdq
adc
and
mov
mov
sbb
call
adc
fcmovnu
pop
shr
mov
push
rcl
mov
mov
ds
push
pusha
je
jmp
ins
je
pop
sbb
inc
add
mov
push
loopne
mov
sti
int
pop
jmp
inc
(bad)
push
mov
lods
pop
cs
out
out
into
out
in
out
lea
outs
loope
sub
push
inc
cdq
dec
mov
cmp
push
add
sub
adc
(bad)
scas
add
xchg
gs
adc
add
arpl
add
sbb
inc
int3
ficom
dec
push
push
fidiv
inc
loop
xchg
xor
xchg
cmps
popa
xchg
or
pop
jo
shl
or
mov
cmps
xor
pop
sbb
daa
icebp
or
outs
cmp
call
out
sub
sbb
cmp
repz
sti
sti
outs
imul
mov
mov
lods
cmp
out
or
xor
nop
loop
fsubr
mov
mov
rcr
sbb
out
adc
push
pop
inc
jb
push
xor
je
dec
mov
push
addr16
outs
mov
jnp
test
lahf
jno
add
or
xchg
push
fidiv
pushf
sub
and
jle
sbb
jno
add
es
cmc
jb
pop
ins
(bad)
(bad)
(bad)
(bad)
push
xchg
pop
ja
sbb
push
aaa
neg
dec
gs
rcr
data16
jmp
js
into
pusha
in
add
push
mov
inc
and
nop
mov
fwait
sub
xchg
xor
mov
lods
fnstsw
cmp
jmp
and
or
mov
frstor
or
xchg
or
movs
nop
popa
push
push
or
xchg
(bad)
repnz
mov
test
retf
pusha
add
push
lahf
pop
int3
or
fadd
lahf
stc
sub
nop
jle
mov
xor
adc
jbe
fadd
popa
mov
or
add
sbb
dec
jb
in
lock
cmp
ss
jle
lods
fucomp
popf
(bad)
(bad)
cli
scas
into
repz
rcr
mov
xor
cld
sbb
pop
aam
pop
pop
inc
jbe
push
sub
push
jle
lock
rcr
jecxz
cmp
or
cmps
jno
pop
cli
lock
imul
mov
dec
sub
sub
addr16
xor
sbb
mov
icebp
pop
mov
(bad)
jnp
scas
arpl
mov
sahf
lock
mov
(bad)
mov
cdq
retf
call
sub
add
js
sbb
sbb
into
xchg
push
push
or
adc
dec
and
outs
pop
jmp
iret
in
or
mov
(bad)
or
ins
outs
imul
fisubr
xchg
push
data16
lods
fucomip
pop
aas
cmp
ret
icebp
ror
sbb
in
out
lods
jg
inc
cmp
pop
and
xlat
cdq
test
pop
jle
cmp
int3
add
sbb
(bad)
jns
sbb
cmps
fadd
mov
(bad)
in
inc
int3
lods
sub
jno
add
inc
adc
rcr
and
xor
add
ss
xor
lea
sub
stos
das
xor
mov
sub
xor
cmp
repnz
push
repnz
pusha
inc
add
enter
ret
jg
sar
scas
fstp
test
jg
jg
out
mov
cmp
dec
outs
lods
jge
jne
jle
push
(bad)
push
mov
pop
cwde
xor
xacquire
mov
dec
popa
les
out
xor
sbb
nop
and
mov
stos
hlt
call
dec
pusha
jns
ret
gs
(bad)
or
cmp
(bad)
pop
cwde
in
or
clc
fwait
ret
cmp
lods
jge
in
rol
inc
arpl
add
mov
ja
je
into
push
test
into
in
pushf
push
mov
je
mov
mov
cwde
ror
dec
daa
inc
cmps
mov
ds
popa
fsubr
movs
inc
mov
xchg
out
loopne
inc
stos
sub
(bad)
hlt
fidiv
rcr
stos
lock
test
mov
sub
dec
adc
adc
adc
into
std
jns
pusha
mov
sub
repnz
outs
push
ja
cmp
cmp
ins
arpl
addr16
out
xor
mov
jno
leave
ss
xchg
clc
mov
lods
push
inc
push
cdq
or
loopne
stos
add
cmp
aaa
inc
(bad)
jno
fwait
adc
jae
inc
movs
or
fisttp
shr
pop
adc
fldenv
adc
xchg
popf
mov
fld
add
inc
cmps
mov
mov
xor
(bad)
in
scas
xchg
pop
mov
jnp
bound
mov
xor
scas
and
push
test
cmp
push
std
in
jne
idiv
mov
mul
imul
cmps
div
sbb
cmps
int
sbb
cld
dec
dec
addr16
rcr
xchg
cld
pusha
pop
push
or
push
push
stos
in
mov
mov
mov
or
cmp
movs
shr
mov
into
add
cmp
daa
mov
dec
xchg
xor
addr16
xchg
jns
gs
add
popa
ds
jns
adc
scas
inc
inc
cwde
and
jle
data16
mov
call
daa
xchg
fcom
or
(bad)
xor
rcr
sbb
xor
lahf
icebp
iret
call
lods
lahf
or
xchg
imul
loop
xor
cmp
cmp
xchg
vmwrite
jle
inc
aas
dec
mov
mov
out
lock
popf
fcom
mov
stc
(bad)
int
aas
pop
or
add
sbb
jae
std
call
pop
mov
shl
repz
cs
push
repnz
xor
retf
sar
xor
xchg
xor
mov
shl
push
add
test
add
sub
test
cmp
imul
add
stc
xchg
test
cmps
inc
xor
mov
pop
xchg
clc
push
ret
dec
fwait
das
lock
jmp
outs
dec
aaa
ins
mov
mov
addr16
mov
sti
sti
fstp
mov
dec
cwde
dec
repz
iret
(bad)
call
out
pop
enter
xor
jl
stc
repz
ficomp
push
aam
cwde
add
rcl
or
fistp
mov
cmp
sbb
lods
xchg
push
dec
add
xchg
xchg
loope
and
xchg
stc
fmul
jle
and
bt
mov
retf
cs
call
dec
out
or
sbb
pop
sbb
in
aas
je
mov
push
push
pushf
xlat
sbb
out
das
pop
fnstsw
fcmovnbe
out
in
imul
mov
popf
jmp
inc
jne
cs
sbb
dec
or
stos
cmps
inc
dec
jg
dec
je
cmc
pop
add
call
jmp
js
jle
icebp
mul
out
jmp
push
mov
daa
sbb
ret
addr16
test
add
jge
loopne
rol
mov
or
stos
retf
call
daa
popa
cld
jmp
push
in
cmp
sub
push
mov
cmps
push
add
push
sbb
mov
data16
mov
mov
movs
bound
jle
fistp
sub
stc
call
clc
rcl
aaa
ss
xchg
call
xchg
sub
jbe
cmp
bound
(bad)
mov
popa
add
(bad)
call
sahf
ja
sbb
cmc
mov
addr16
repz
xor
or
xchg
jns
imul
mov
mov
or
clc
adc
test
call
mov
xchg
adc
cmp
iret
stc
inc
mov
hlt
pop
inc
mov
out
cmps
repnz
aam
shr
je
dec
inc
ins
pushf
mov
jns
or
std
sub
pop
(bad)
dec
inc
clc
pushf
popf
push
jnp
jp
sub
push
xchg
xchg
call
jl
mov
push
jb
adc
pop
cmp
xchg
sahf
sbb
loope
ficomp
fcomp
aaa
cld
push
sbb
in
dec
mov
aad
loop
imul
mov
mov
pop
aam
pop
pusha
pop
mov
cmps
out
push
frstor
test
shl
ror
cmp
mov
neg
add
adc
lods
and
outs
mov
cmps
retf
ficom
pop
movs
add
sar
leave
and
add
xlat
shr
xor
aad
adc
enter
jp
mov
cmp
mov
and
or
mov
jmp
sbb
fs
pop
(bad)
mov
(bad)
jl
in
aaa
lahf
outs
call
inc
pop
cmp
ds
mov
pop
iret
stos
stos
loope
xor
mov
cmp
and
add
sub
jmp
xor
es
int
rol
pop
loopne
jle
daa
clc
jo
sub
cmps
inc
shl
cld
xor
in
sar
jge
jle
adc
push
stc
inc
ss
addr16
sbb
jno
mov
aam
fcomp
mov
fcom
cmp
cmp
mov
push
test
popf
mov
aad
jbe
cdq
add
dec
imul
mov
lock
loopne
pushf
pop
jmp
int
jmp
jno
or
(bad)
aad
jmp
(bad)
(bad)
and
out
enter
mov
mov
mov
cmc
jp
adc
std
sti
das
outs
dec
pushf
and
cli
mov
loope
xchg
or
pop
mov
aad
mov
icebp
add
mov
aas
xchg
add
push
xchg
je
ja
push
and
shr
clc
or
test
rcl
and
ror
js
sbb
dec
sbb
push
stc
add
shr
inc
adc
add
push
es
jle
shl
fs
push
mov
or
loop
ror
out
outs
outs
ins
jge
jnp
sti
mov
icebp
nop
mov
jge
cmp
ret
test
dec
ror
lods
(bad)
mov
in
cmp
les
push
cwde
inc
enter
jno
iret
mov
fidiv
add
movs
and
or
dec
(bad)
fcomp
(bad)
cmc
xor
inc
outs
aaa
push
fsub
xor
ror
vpcmpgtb
xchg
lea
(bad)
ds
call
sbb
hlt
cmps
pop
rcl
setle
cmp
mov
inc
jle
sbb
cmp
gs
push
loopne
(bad)
inc
rol
mov
sar
rcr
sub
sbb
push
inc
loope
push
dec
pop
aas
movs
enter
push
and
mov
cmp
sbb
mov
jnp
loopne
das
cs
ja
sub
aam
loopne
jge
loope
aas
xlat
shr
adc
cmp
sar
retf
in
jns
mov
add
iret
xor
push
or
popa
pop
or
es
xlat
mov
sahf
loope
ror
mov
jmp
test
cld
sbb
ret
adc
ficom
dec
movs
cmps
lods
and
xor
mov
lods
inc
int
neg
jp
xlat
out
in
out
in
std
mov
sub
sbb
sbb
mov
dec
std
adc
shl
mov
fisub
xor
call
vmovlpd
sbb
pop
ja
dec
fadd
pop
push
movs
repnz
mov
popa
jae
loop
xchg
call
mov
mov
(bad)
jbe
enter
bound
pop
shl
sub
addr16
ret
cmp
data16
(bad)
ins
clc
xchg
add
mov
xchg
inc
cmp
push
ret
pop
xchg
add
mov
es
es
jmp
push
fucomp
data16
add
add
jl
shl
loopne
jnp
and
out
(bad)
das
add
jle
dec
iret
or
(bad)
in
pusha
shr
mov
pusha
xchg
jo
jne
xchg
mov
cmps
sub
scas
cmp
lds
sub
inc
cli
inc
adc
dec
out
ins
shl
add
and
adc
ds
mov
outs
stos
push
jl
out
popf
mov
or
sbb
jns
repnz
mov
std
movs
xor
push
mov
jl
and
les
xchg
mov
mov
lods
pop
call
lahf
dec
or
adc
cmp
scas
jns
xor
push
call
add
in
jns
pop
cmp
pusha
mov
adc
push
pop
ins
outs
outs
mov
push
dec
out
jge
lock
imul
jmp
pop
lea
ds
xchg
inc
and
pop
stos
xchg
mov
movs
rcr
lea
jo
dec
ret
xor
jne
ja
dec
cli
lds
sbb
(bad)
js
ss
data16
ins
sbb
cmps
add
cdq
mov
push
ins
gs
and
pop
sub
xor
xchg
xor
add
ins
sbb
xchg
lahf
push
js
dec
adc
fld
sbb
js
mov
mov
pop
dec
jno
dec
cmc
pop
out
fnsave
data16
in
sub
dec
push
fnstenv
or
jo
addr16
std
push
(bad)
bnd
shl
dec
push
stc
jae
sbb
push
scas
aas
aaa
rol
aas
dec
int
jle
pop
(bad)
mov
adc
arpl
stos
mov
sub
adc
ins
push
mov
cwde
shl
aas
sbb
hlt
xor
rcl
dec
jmp
ret
and
cmps
fwait
dec
pop
arpl
call
dec
and
hlt
es
scas
pushf
push
push
or
sbb
mov
xchg
xor
xchg
xlat
xchg
push
mov
dec
mul
arpl
mov
js
sbb
es
mov
push
jb
mov
add
adc
inc
sti
ja
stc
pop
(bad)
(bad)
lds
jmp
std
or
mov
bnd
adc
mov
fwait
jno
rcl
(bad)
and
xor
(bad)
fprem1
sub
pop
add
lods
loopne
fwait
rol
xor
inc
fldenv
ret
(bad)
sti
add
jmp
call
jns
xchg
sbb
xor
mov
call
inc
mov
cmp
pop
xchg
xchg
mov
movs
add
cwde
int3
jbe
lods
in
(bad)
int
cmp
lea
inc
gs
or
enter
dec
and
cmp
cs
lds
rcl
sbb
adc
mov
inc
(bad)
push
dec
add
mov
stc
out
jge
data16
mov
out
hlt
jmp
mov
or
and
add
push
inc
out
(bad)
leave
and
and
aad
pusha
jae
xor
push
xchg
add
ror
(bad)
fcom
stc
mov
mov
mov
lock
cld
fdivr
(bad)
scas
mov
fimul
aam
pushf
retf
push
jl
dec
cmp
add
xor
push
ror
popa
pop
mov
(bad)
mov
imul
lods
cld
movs
push
shr
push
ss
mov
dec
or
cmps
pmulhw
add
test
cmp
or
xchg
push
nop
xor
push
(bad)
xor
int3
mov
cmc
mov
hlt
inc
iret
outs
popf
mov
xchg
outs
test
mov
dec
ret
rcr
js
or
std
icebp
xor
inc
jb
xchg
imul
mov
cdq
dec
lods
ins
adc
data16
add
xchg
cmc
ss
mov
call
cdq
ins
and
pop
inc
inc
xchg
and
in
add
adc
pop
add
sub
and
push
cmp
xor
sbb
popf
dec
and
add
fcomp
dec
xlat
adc
jb
ss
addr16
sbb
in
and
dec
jnp
fsubr
dec
scas
sti
call
or
dec
or
cdq
mov
popf
call
xor
xchg
sub
mov
mov
out
imul
lahf
push
aas
sahf
outs
(bad)
je
mov
inc
mov
mov
push
push
jge
sbb
das
popa
scas
cmp
sub
cmp
or
and
mov
jmp
pop
je
mov
mov
mov
xchg
and
inc
ja
jne
fst
stos
sar
dec
mov
popa
out
add
pusha
jmp
jo
dec
clc
test
add
lea
add
jmp
mov
cmp
jecxz
add
xor
aad
fs
dec
idiv
aam
icebp
cmps
shr
xlat
mov
out
mov
mov
cmp
push
cli
(bad)
call
and
in
sbb
in
nop
push
or
inc
cmp
and
xchg
mov
xchg
ja
mov
lods
sbb
mov
test
ficomp
lock
lock
xchg
add
call
aaa
repnz
out
xchg
mov
das
add
xor
or
repnz
in
mov
out
shl
jo
lds
movs
(bad)
ror
jno
jno
ror
not
cmp
hlt
add
test
loop
hlt
pop
fwait
jge
and
mov
sub
pop
jb
out
cmp
add
inc
int3
es
inc
mov
or
cmp
(bad)
xor
xchg
inc
out
pushf
push
repz
popw
mov
js
fiadd
js
or
mov
test
add
lock
sahf
dec
lahf
mov
push
push
push
(bad)
fwait
popf
mov
sbb
popf
jmp
add
jmp
and
retf
cmps
into
lods
ret
lahf
add
adc
loop
dec
pop
shl
dec
inc
add
mov
cmp
leave
nop
popa
fstp
sbb
rcl
popa
stos
movs
adc
mov
inc
movs
adc
xor
mov
jnp
jecxz
jne
in
lea
dec
cmp
mov
and
jge
xchg
je
push
enter
adc
mov
gs
jne
sbb
jns
sbb
cmp
pop
lods
mov
rol
scas
jecxz
(bad)
mov
loop
pop
mov
xor
repz
sbb
adc
push
enter
xchg
pop
imul
dec
stos
xor
jecxz
or
inc
inc
arpl
les
jecxz
inc
das
sbb
sbb
cld
add
lds
sbb
mov
cmps
das
mov
add
jmp
sti
push
out
fisubr
mov
jge
cwde
fld
daa
push
hlt
sbb
mov
mov
out
mov
jb
jp
push
xchg
ja
push
sbb
faddp
je
mov
sub
jmp
lods
pop
shr
das
adc
mov
jb
je
pop
mov
jmp
mov
sub
inc
stc
and
ret
dec
lahf
(bad)
lds
shl
inc
mov
xor
xor
jmp
outs
and
push
push
dec
push
pop
fstp
fidiv
rcr
imul
and
lahf
xor
cmp
inc
fdivr
adc
dec
cmp
jl
in
daa
fwait
jg
pop
fdivr
ror
fldl2t
xchg
mov
ss
adc
(bad)
cli
mov
dec
cmp
mov
pusha
add
aad
cmp
mov
ficomp
jmp
ja
sbb
retf
push
lahf
xchg
pusha
jg
cmp
adc
mov
(bad)
push
lea
dec
add
dec
xchg
js
push
add
mov
sar
jecxz
dec
in
or
ins
mov
cdq
jmp
jbe
fwait
xor
mov
mov
hlt
inc
scas
cld
and
movs
fcomp
in
jne
movs
pusha
mov
and
enter
sbb
pop
jg
fcomp
cmp
mov
lods
in
lahf
xlat
inc
fld
mov
ins
bnd
hlt
jb
ins
push
jmp
pop
jbe
sbb
jbe
ds
add
fld
adc
retf
dec
push
sbb
fstp
jmp
sub
mov
jmp
xchg
(bad)
(bad)
retf
inc
dec
shr
jp
retf
repnz
adc
or
sbb
(bad)
add
pushf
scas
adc
pusha
ret
(bad)
mov
popa
xchg
pop
lods
sbb
jo
test
scas
adc
iret
aam
imul
jp
or
lods
std
mov
mov
imul
jmp
jo
jg
imul
fisttp
mov
jnp
jae
jmp
retf
push
mov
(bad)
mov
(bad)
aam
(bad)
mov
sbb
inc
ss
lahf
xchg
ja
cmc
(bad)
pop
stos
into
call
mov
mov
aas
popf
or
fwait
xchg
xor
lods
cmps
cmps
lods
mov
(bad)
shr
xchg
lods
lods
addr16
scas
and
fld
xchg
pop
and
sbb
mov
inc
rcr
push
outs
rol
xchg
js
mov
mov
cmp
test
or
test
pop
mov
loopne
push
jge
rcr
add
sbb
dec
jle
stc
add
and
dec
inc
inc
push
nop
fnstcw
retf
cmp
test
mov
mov
pop
sar
mov
inc
je
in
std
ins
(bad)
mov
fisub
xlat
adc
mov
mov
xor
into
popa
pop
mov
adc
(bad)
in
add
nop
fstp
shl
cmp
jmp
jge
or
push
loop
loop
addr16
bts
nop
adc
xchg
or
sbb
xchg
inc
add
mov
xchg
cmp
mov
mov
ret
adc
jecxz
jns
loopne
and
cmps
jmp
xor
fisubr
ds
call
or
adc
cmp
std
outs
push
into
into
out
aaa
mov
ds
leave
rol
iret
out
repz
int
adc
or
ds
popa
adc
iret
jno
fwait
push
ins
repnz
jns
neg
inc
add
into
dec
inc
sbb
in
les
mov
inc
mov
test
movs
add
ror
mov
mov
out
inc
repz
mov
aaa
pop
imul
out
mov
ret
rcl
push
push
mov
pop
lfence
mov
or
iret
push
jb
dec
inc
inc
ret
inc
cmps
retf
fadd
mov
loopne
mov
clc
ret
inc
push
mov
dec
je
enter
test
cmc
loope
mov
add
sbb
repnz
bnd
cdq
inc
push
or
test
popf
ins
call
add
ror
ins
test
clc
or
fcmovbe
nop
rcl
or
xchg
jle
int
out
test
inc
mov
fistp
popf
lea
mov
and
dec
mov
add
jo
or
mov
fisttp
xor
and
popf
scas
mov
fidivr
das
push
(bad)
fisttp
sub
xchg
xor
pop
imul
ins
cmp
mov
aaa
jl
jne
xor
mov
mov
cmp
out
sti
dec
div
div
loop
(bad)
dec
add
xchg
cmp
imul
jg
sbb
out
(bad)
test
push
lods
aam
xor
loopne
dec
and
jno
in
pop
or
adc
loopne
frstor
jp
lahf
mov
(bad)
outs
stos
test
shr
pusha
xor
xchg
mov
sub
add
add
movs
jecxz
xchg
jb
pop
popa
mov
icebp
mov
shl
data16
(bad)
cld
cli
rep
cmp
shl
push
ja
movs
adc
cmp
je
rcl
rcr
sbb
sbb
mov
ins
neg
pop
jle
jae
xchg
popf
movs
inc
in
fdiv
bound
aaa
cmps
imul
cmp
xor
ins
adc
dec
adc
stc
sub
pop
pusha
scas
jmp
and
xor
mov
cmps
inc
repnz
push
daa
nop
xor
pop
sbb
xchg
dec
dec
xor
push
(bad)
cmp
mov
jno
out
xor
inc
mov
retf
clc
cmp
pushf
dec
mov
adc
fst
inc
imul
add
dec
dec
xchg
pop
xchg
mov
ins
inc
gs
or
adc
xor
retf
pushf
push
mov
lods
js
push
sub
mov
mov
or
add
or
mov
xor
mov
(bad)
hlt
cld
mov
(bad)
push
arpl
mov
out
cmp
inc
and
jno
lahf
stos
mov
cdq
or
inc
outs
out
xor
dec
sbb
adc
add
je
fstp
(bad)
push
ins
push
mov
repnz
pop
mov
scas
retf
sub
stos
ror
call
xchg
adc
mov
sbb
imul
test
cmp
xor
into
xchg
xchg
inc
pop
sbb
add
enter
adc
sbb
fs
mov
scas
sbb
xor
in
lds
in
xor
icebp
(bad)
mov
jae
jle
scas
or
data16
rol
ja
outs
sub
adc
and
xchg
and
push
test
mov
xchg
kaddb
jmp
dec
jns
(bad)
and
mov
xchg
icebp
ret
fdivr
inc
mov
popa
sub
dec
movs
retf
mov
jns
test
sti
inc
mov
mov
fiadd
test
dec
cld
push
cmp
mov
add
mov
loopne
pop
mov
rcr
clc
test
and
ret
in
fimul
pusha
data16
mov
sti
and
(bad)
fcmovnu
cmp
xor
dec
mov
push
sbb
inc
add
cmp
retf
and
cmc
push
adc
push
pop
push
push
mov
adc
pop
pop
push
adc
mov
pop
inc
jl
stos
push
call
pusha
lock
pop
fsubr
mov
lock
or
mov
add
sbb
repz
sbb
hlt
jne
or
pop
jp
push
sbb
ss
sbb
xor
xchg
psubq
aas
out
aam
xor
pushf
aad
je
(bad)
int
sbb
adc
inc
push
scas
test
pop
sbb
or
xchg
out
pop
frstor
out
and
xor
pop
(bad)
fsubrp
addr16
pop
jnp
(bad)
lahf
xlat
or
jl
iret
dec
ds
addr16
repz
mov
std
mov
outs
adc
call
icebp
cs
in
stc
add
jbe
lock
imul
fnstcw
call
repnz
das
sub
jmp
lock
push
ds
mov
jne
cmp
shl
(bad)
ins
test
popf
pop
sbb
pop
stc
loopne
iret
dec
in
add
sub
dec
or
mov
cmp
sbb
jmp
addr16
cmp
aad
inc
(bad)
mov
daa
sbb
xchg
pop
clc
cdq
outs
adc
(bad)
cmp
ret
xlat
mov
out
jge
addr16
daa
sti
inc
xchg
sbb
lea
repz
jg
retf
dec
mov
sbb
sbb
cwde
retf
test
rol
cmc
pop
sbb
loop
imul
push
inc
cmps
loope
leave
js
push
mov
xchg
je
pop
jns
inc
jns
fs
push
sub
dec
adc
xor
(bad)
std
test
lea
clc
loopne
fwait
push
jno
xor
aas
rol
rcr
and
sub
ins
inc
inc
and
jno
inc
adc
xchg
in
dec
rol
mov
imul
xor
imul
cmp
mov
jmp
and
add
lock
inc
popa
sbb
fs
cmp
xor
mov
lock
jo
cmp
in
mov
adc
jo
fisub
lea
sbb
lock
xor
ror
mov
or
mov
out
mov
(bad)
xchg
and
retf
(bad)
(bad)
ds
mov
adc
mov
xor
cmp
cli
inc
or
mov
shr
(bad)
scas
ja
xchg
xchg
pop
imul
dec
test
sahf
imul
pop
and
fucomp
outs
dec
outs
sbb
xor
jmp
movs
dec
mov
xor
sub
daa
test
add
or
movs
shl
pop
sub
ja
ret
ja
idiv
push
fnstsw
mov
mov
aam
fnsave
nop
pop
jg
cli
mov
adc
pop
icebp
jo
push
shl
out
scas
je
adc
imul
movs
sbb
lds
imul
push
push
out
inc
jne
xor
lds
mov
imul
arpl
ins
lods
inc
mov
std
ins
cmp
or
ror
mov
and
or
cli
shl
and
ja
retf
rcr
and
mov
(bad)
int
into
icebp
push
or
cwde
add
pop
je
ins
mov
inc
iret
mov
push
(bad)
ror
rol
(bad)
int
pusha
clc
ror
inc
outs
pop
pop
ja
push
hlt
adc
mov
(bad)
in
out
in
sub
lea
sbb
jl
and
lods
in
mov
call
cwde
dec
(bad)
out
popa
aad
popa
adc
ins
dec
nop
into
cs
out
stc
fld
add
pop
xchg
jle
push
movs
icebp
jmp
pop
scas
aaa
loope
cwde
mov
xchg
mov
inc
loop
cmp
cmp
cs
movsx
pop
loopne
pop
mov
or
les
aam
xchg
pop
rol
inc
(bad)
cmp
out
outs
ins
(bad)
(bad)
loope
icebp
jmp
in
shl
iret
push
movs
sub
int
test
jle
addr16
xor
inc
jle
cmp
gs
clc
gs
cmps
shl
fmul
(bad)
jne
test
mov
das
inc
dec
sbb
mov
lahf
inc
mov
inc
mov
jo
or
inc
xor
dec
sbb
jns
or
mov
stc
outs
in
call
sahf
stos
sub
adc
loopne
aas
and
ret
push
enter
mov
icebp
cli
mov
sub
and
xor
js
mov
mov
pop
stos
popa
sar
jmp
jbe
(bad)
popa
sbb
out
loopne
mov
shl
cmc
jp
inc
test
sub
cld
in
cmp
pop
dec
xchg
scas
and
adc
xor
or
shl
inc
fisttp
dec
jmp
sbb
rol
mov
jne
push
out
fadd
and
sub
cmps
and
dec
arpl
in
js
push
sbb
dec
jp
mov
arpl
push
ror
pop
js
jmp
jecxz
fistp
or
scas
add
pop
pop
add
pop
mov
push
pop
inc
stos
xor
mov
or
sub
and
sub
cmps
lahf
in
sbb
add
loop
push
lds
not
sahf
(bad)
pop
outs
out
out
in
inc
mov
call
cmp
and
jmp
out
(bad)
dec
push
add
icebp
cmp
arpl
iret
adc
adc
or
dec
sbb
sbb
mov
fsubr
adc
pop
in
sub
imul
out
inc
jecxz
inc
popa
(bad)
hlt
mov
das
add
adc
xor
jne
ds
pop
inc
imul
cld
shl
daa
sti
call
mov
sbb
xor
dec
inc
mov
idiv
push
fmul
cmps
inc
and
and
mov
inc
or
popf
(bad)
jmp
mov
jno
enter
xchg
outs
lods
shl
jmp
cmp
cmc
pop
sar
pop
or
ret
mov
cmps
sub
xor
add
pop
push
sub
int3
(bad)
mov
add
xor
mov
push
lds
sbb
cmps
dec
sar
pop
inc
pop
mov
mov
cmp
ds
push
mov
jns
loopne
movs
and
dec
inc
ret
dec
inc
adc
mov
adc
xor
sbb
jo
sub
jns
scas
das
sub
pop
cdq
in
add
mov
bound
jle
data16
xchg
rcl
in
jmp
sbb
jecxz
sub
icebp
mov
cmps
mov
xor
sbb
test
jmp
in
adc
ret
sbb
test
mov
cld
push
js
(bad)
shl
les
mov
xchg
xchg
xchg
mov
btc
pop
xchg
xor
mov
add
movs
xor
out
bound
inc
es
inc
push
inc
inc
mov
and
test
xchg
push
mov
pop
outs
ss
sbb
push
dec
sub
jl
adc
cwde
xchg
lds
mov
call
mov
jno
cwde
mov
in
and
jge
xor
sar
jno
mov
call
shl
push
lahf
or
ja
gs
and
int
cwde
push
jns
test
ins
pop
cli
data16
cmp
mov
iret
retf
push
cmps
fiadd
mov
(bad)
into
push
push
test
into
lock
das
not
data16
inc
sbb
xchg
loopne
lock
mov
cmp
movs
jbe
aas
sti
fcomp
sub
sbb
sbb
(bad)
add
shl
xlat
scas
jo
mov
or
push
inc
add
fsub
jle
arpl
cmp
ds
or
xor
(bad)
(bad)
adc
and
sti
jp
fcomp
sti
pop
dec
repnz
pop
std
or
xchg
loop
cmps
sub
mov
push
cmp
sbb
xchg
push
jmp
adc
sar
mov
push
dec
pop
jg
sub
outs
sub
xor
xor
jmp
sbb
bound
adc
sub
sbb
shl
push
imul
xor
cmp
jmp
cmp
inc
cwde
adc
icebp
dec
call
dec
mov
in
sbb
popf
das
ror
adc
inc
sub
outs
adc
(bad)
call
sbb
outs
or
in
inc
daa
inc
inc
mov
lds
sbb
jle
add
push
pushf
pop
js
and
clc
jle
and
pushw
cld
cs
cmp
iret
push
inc
push
dec
adc
gs
push
mov
rol
arpl
fabs
nop
dec
je
and
mov
inc
xchg
sahf
cld
stos
adc
mov
ret
inc
std
inc
ins
adc
add
cmp
sbb
inc
shl
into
lods
mov
lods
mov
or
aam
mov
sbb
dec
or
les
leave
add
cli
sar
lds
daa
shl
jmp
mov
push
xor
adc
jle
jmp
jmp
jl
sahf
call
out
hlt
je
cld
rcr
jl
sar
push
xor
jae
xlat
shl
icebp
inc
rol
stc
mov
dec
and
out
mov
js
sub
xchg
outs
dec
aaa
iret
add
add
fnstenv
pop
icebp
and
and
mov
push
shl
jmp
mov
loopne
icebp
pushf
or
sub
jmp
test
nop
into
fs
cdq
dec
cmps
gs
mov
mov
dec
sbb
shl
fmul
sbb
in
sbb
lds
mov
add
jl
dec
cmp
ins
cld
sbb
push
bound
and
and
inc
cmp
add
mov
xchg
test
rcr
ret
inc
add
call
mov
fdiv
lock
shl
shr
mov
stos
adc
cli
int3
test
mov
rcl
retf
fs
add
add
dec
add
ret
nop
gs
(bad)
jmp
lea
arpl
adc
adc
loop
xor
sbb
cmps
sub
xor
ror
test
sahf
test
mov
push
enter
dec
inc
out
lods
mov
fistp
cld
xchg
pop
call
neg
sbb
sbb
cmp
fst
xor
add
fsubp
xlat
test
cmp
sub
call
and
inc
push
shl
mov
mul
(bad)
adc
test
push
je
ss
mov
dec
sbb
inc
pushf
mov
sti
xor
ror
mov
and
jl
movs
or
sbb
mov
out
xchg
daa
in
cmps
inc
mov
pop
nop
cld
sti
test
iret
or
xchg
pmaxub
lahf
popf
add
add
push
loop
call
daa
fbld
mov
or
mov
fwait
rol
xchg
push
xor
retf
test
xor
div
mov
or
stos
repnz
std
lods
cmps
mov
(bad)
mov
fadd
mov
fcmovu
loopne
xchg
push
pop
and
lahf
cs
aad
dec
jg
mov
shr
cli
das
in
arpl
cwde
lods
adc
pop
or
pop
cli
movs
stos
ret
dec
sub
test
aas
and
pushf
icebp
retf
popf
in
push
cmps
adc
lods
mov
add
mov
pusha
xchg
out
xchg
and
jl
sub
sahf
jl
mov
loope
(bad)
out
out
pop
sbb
pop
popf
ror
cs
mov
mov
xlat
into
loop
mov
out
dec
mov
pushf
icebp
repz
test
test
ret
xchg
in
fdiv
call
std
pop
(bad)
xchg
xor
sbb
adc
imul
das
sub
fcomp
aad
inc
and
cmp
mov
jo
jae
sub
mov
sub
mov
inc
mov
xchg
in
xor
fst
mov
xor
push
cmps
imul
lods
adc
xchg
push
popf
add
nop
sub
jb
not
ja
scas
aas
jo
pop
xchg
adc
and
pop
xchg
mov
sahf
sbb
push
outs
fcom
sbb
xchg
movs
sbb
shl
out
sbb
adc
retf
pop
add
mov
cmp
hlt
push
inc
mov
add
fcom
fsubrp
sub
push
cmp
ret
fiadd
and
movs
mov
cmps
lahf
enter
xchg
adc
push
ret
xchg
dec
mov
inc
mov
aad
push
jl
sbb
es
hlt
pop
pop
add
iret
(bad)
div
jmp
xlat
mov
pop
dec
jmp
xchg
fdiv
mov
pop
xor
nop
xchg
imul
xchg
push
dec
xchg
xchg
add
stc
fdivr
(bad)
(bad)
ror
fsubrp
push
iret
out
push
add
jo
fs
or
xchg
adc
cmp
sbb
hlt
push
pushf
mov
xor
push
and
inc
imul
clc
lock
gs
pop
sbb
sahf
sahf
stos
ret
(bad)
jbe
jo
loop
pop
cmp
in
loope
xor
in
retw
sbb
ret
int3
or
pop
adc
dec
jge
push
idiv
lea
pop
sub
out
pop
aas
mov
mov
mov
punpckhwd
leave
div
cdq
add
dec
jmp
je
cmp
jmp
inc
jp
add
lahf
inc
push
sahf
loope
dec
cs
sar
(bad)
je
ss
cmp
test
(bad)
pop
mov
stos
push
(bad)
adc
mov
ss
arpl
cmp
push
out
add
dec
retf
mov
add
xor
mov
pop
xor
cmp
shr
mov
push
cmp
out
cmp
or
ss
ret
add
rcl
jno
mov
shr
fdivrp
jmp
loope
ja
pop
dec
lahf
jle
push
dec
mov
jmp
out
jle
rcl
in
dec
xchg
frstor
test
or
ret
mov
clc
ror
xchg
iret
call
xor
pop
mov
pop
in
cs
xchg
xchg
stc
fadd
mov
loopne
mov
xor
js
dec
popa
(bad)
clc
pop
icebp
ins
add
js
mov
adc
ds
pop
lods
inc
mov
xor
xor
inc
(bad)
ins
sahf
dec
mov
push
rcl
inc
jo
adc
mov
sub
cwde
push
and
inc
(bad)
aam
and
xor
test
arpl
dec
shl
xchg
and
add
jl
pop
iret
mov
jle
push
jge
add
or
push
push
cmps
out
out
loope
jle
loopne
adc
int3
push
sub
retf
adc
test
not
jne
jmp
mov
stos
scas
call
jne
add
sbb
lods
xor
mov
lahf
cmp
lsl
fwait
inc
mov
or
push
ret
mov
jmp
sbb
loopne
shl
push
loop
or
sub
dec
mov
push
retf
sbb
mov
in
retf
popf
lahf
sbb
scas
(bad)
mov
cli
jmp
aas
adc
ret
das
clc
push
cwde
and
sahf
sub
and
add
jnp
cld
call
ret
sbb
or
sbb
icebp
jp
out
push
dec
push
call
bound
ret
mov
jmp
add
ja
jl
loope
into
add
add
loopne
cmp
nop
push
sbb
push
das
ret
or
fld
bound
ins
or
pop
mov
lds
ret
pushw
stos
mov
test
fidivr
inc
retf
push
in
inc
mov
push
sub
xor
xor
sbb
nop
adc
jmp
out
retf
mov
in
xchg
mov
test
add
xchg
daa
pop
sbb
rcr
call
iret
jb
int
dec
in
aas
js
and
pop
stc
je
adc
scas
setge
xlat
xchg
into
xchg
xchg
js
inc
daa
pop
mov
jmp
je
dec
add
push
xchg
mov
and
mov
mov
xor
add
mov
pop
inc
loopne
push
lods
fbld
rol
add
pop
in
mov
push
and
fwait
xor
sub
jle
xor
and
out
(bad)
int
jle
jnp
popf
lods
int
jmp
neg
cld
sub
pop
sbb
sub
mov
lds
ds
xchg
xor
jae
adc
dec
jge
sbb
enter
imul
gs
pop
test
pop
out
retf
movs
push
dec
pop
ret
movaps
adc
push
aam
out
dec
dec
loopne
or
inc
mov
dec
scas
push
jecxz
(bad)
adc
scas
sbb
xor
loop
pop
pop
push
inc
in
push
cmp
test
sbb
mov
out
loopne
mov
jne
scas
dec
xchg
xchg
arpl
fidivr
and
mov
sbb
inc
sub
or
out
push
fimul
nop
mov
xor
jmp
fs
fwait
pop
mov
call
push
adc
in
inc
popa
enter
xchg
sbb
inc
in
test
xchg
iret
bsr
aam
stc
loopne
xor
ror
push
cmc
add
or
jmp
dec
xchg
mov
adc
(bad)
push
shr
or
int3
and
sbb
clc
and
inc
jle
jp
or
xor
xchg
dec
cmps
xchg
xor
lahf
cbw
cmps
xchg
cmps
mov
pop
mov
std
mov
xchg
push
jecxz
test
jp
fcmovnu
jns
and
je
push
lea
jae
xchg
adc
das
xchg
mov
pop
sbb
sub
jne
mov
aaa
(bad)
sti
push
lods
aad
cld
fsubp
adc
pop
outs
mov
jle
sub
mov
sbb
fldenv
inc
xor
xchg
push
into
mov
stos
daa
cmp
test
lods
sbb
or
add
imul
cs
push
xchg
int
or
push
pop
push
jb
sbb
mov
adc
sub
xchg
jbe
xchg
inc
jg
rcr
jle
inc
pop
xor
mov
jo
enter
mov
mov
cmp
jo
icebp
adc
ins
rol
mov
dec
push
push
cmps
push
dec
sub
mov
fcmovnbe
cdq
aas
mov
das
cmc
mov
hlt
scas
ds
rol
mov
or
js
xor
jb
sbb
push
jb
mov
cmp
jle
(bad)
call
add
lods
pop
cmp
sbb
and
adc
retf
leave
jl
jbe
ret
cmp
push
int3
sub
or
sbb
xchg
push
loope
push
test
mov
hlt
mov
jmp
mov
(bad)
std
repz
idiv
aaa
iret
clc
mov
jecxz
fld
cmp
iret
xor
add
or
mov
sbb
retf
sub
(bad)
stos
push
fwait
pop
jge
sbb
in
add
and
sbb
test
test
sub
leave
fld
mov
imul
jno
mov
adc
mov
imul
adc
and
and
xor
ja
xchg
sub
into
daa
loop
rol
or
ror
inc
push
pop
cli
gs
xchg
xor
or
shl
fsub
jnp
gs
xchg
inc
lock
addr16
popf
add
jl
sbb
push
test
cli
mov
push
mov
pop
into
xchg
cdq
mul
xor
jnp
das
clc
pop
fnstsw
inc
lahf
and
sub
push
cmp
test
push
add
mov
push
stos
and
js
mov
aam
xchg
cmps
sti
mov
mov
or
pop
adc
int
inc
xor
arpl
test
ins
xchg
and
push
enter
or
cmp
and
dec
mov
cmp
push
pop
out
cmp
pop
xchg
or
ja
or
cmps
imul
mov
xlat
ss
shr
jg
jecxz
pop
sbb
in
jg
xor
push
stc
push
mov
lods
idiv
retf
aaa
jne
je
push
mov
mov
jmp
add
addr16
sub
mov
enter
or
pop
jp
lods
sbb
cmps
int
scas
inc
cmps
in
adc
pop
mov
cmps
sbb
mov
add
sbb
push
lahf
jmp
dec
and
jmp
ret
lods
das
sbb
and
push
mov
dec
cmp
rcl
call
xchg
imul
sub
sbb
mov
stos
mov
sbb
jmp
ret
mov
pushf
dec
sbb
cli
dec
sub
cmps
mov
in
sahf
aas
mov
jno
in
(bad)
dec
jns
je
mov
pushf
add
mul
ret
into
retf
pop
pop
(bad)
ror
dec
cli
cmp
call
add
add
inc
loopne
iret
push
pop
movs
cmps
or
cmp
adc
jg
fistp
(bad)
mov
xlat
pop
out
mov
ins
pop
or
sub
fs
dec
dec
(bad)
jbe
hlt
ror
mov
jo
fs
popf
pusha
les
cmp
inc
fidivr
std
jmp
sbb
mov
sub
and
in
lock
fistp
cmp
jl
xchg
fsub
mov
popa
pop
sbb
rcl
jmp
sbb
icebp
loope
push
aam
push
push
jecxz
test
in
mov
das
jae
enter
icebp
push
pop
push
adc
xchg
ret
aam
and
jae
or
jnp
jge
add
movs
sahf
cmp
pop
into
xor
xlat
xchg
jae
ja
push
and
cmp
or
loop
test
loope
test
xor
push
mov
inc
int3
gs
hlt
sub
sub
stc
int
(bad)
repz
sbb
dec
aaa
icebp
je
test
test
ret
into
dec
iret
fwait
mov
adc
cmp
pop
pop
mov
xor
aad
push
lods
lock
das
pusha
mov
cmp
pop
sbb
inc
fsubp
xor
jmp
mov
mov
aaa
adc
fld
ret
adc
xchg
sbb
in
push
mov
imul
sbb
dec
dec
aam
or
cmp
jno
cmp
sub
push
jmp
xor
dec
push
adc
cwde
jmp
fsub
xlat
xor
jg
mov
movs
xchg
pop
xor
ror
fmul
int3
jmp
loope
call
hlt
jmp
sbb
cld
cmp
ret
or
push
add
mov
stos
mov
jle
add
jo
pop
pop
shl
ins
retf
fldenv
xchg
addr16
scas
pop
push
stos
cmp
outs
sub
xchg
add
xor
movs
mov
cmc
add
and
dec
inc
inc
push
mov
xor
shl
add
add
and
jbe
sub
sbb
jns
dec
push
dec
mov
jo
inc
cmp
es
clc
fldenv
adc
ret
jo
xor
sbb
fiadd
jo
sub
jae
or
lds
lods
jl
and
mov
mov
shr
clc
push
xchg
lods
je
cs
jne
js
mov
push
je
int3
int3
push
std
retf
sar
jle
mov
fwait
popf
dec
mov
and
xor
aas
int3
sub
cs
xor
enter
push
inc
fwait
rcr
inc
mov
call
mov
sub
mov
lods
xchg
cdq
inc
pushf
fisubr
jp
inc
loope
cld
xchg
hlt
sbb
xor
stc
ins
(bad)
test
(bad)
(bad)
iret
xor
idiv
call
pusha
cmps
out
cmp
test
in
js
cmp
add
out
lahf
in
xchg
push
mov
inc
push
dec
int
fwait
inc
push
mov
out
outs
cld
rcl
ins
adc
pop
es
xor
sub
test
dec
dec
jp
push
and
call
and
out
cmp
xchg
push
out
pusha
inc
fwait
mov
cmp
shl
sub
cwde
pop
xchg
adc
stos
sbb
(bad)
retf
mov
and
inc
xor
pop
or
pop
mov
lea
sbb
or
cli
xchg
sbb
add
push
push
sbb
or
push
mov
mov
inc
sbb
es
add
adc
dec
jbe
mov
(bad)
in
cs
por
lods
iret
cmp
sbb
pop
cmp
call
mov
fnstenv
add
arpl
xchg
sar
stc
xchg
int3
enter
leave
or
or
in
mov
mov
cmp
mov
lds
and
rol
out
fistp
aaa
jg
fsub
add
push
fwait
mov
inc
xor
(bad)
or
lock
test
ds
pop
clc
fwait
add
cld
popf
xor
or
loopne
or
out
leave
fidivr
mov
idiv
dec
nop
sub
mov
lea
bound
stos
adc
mov
push
pop
xor
pop
js
mov
mov
stos
sbb
xchg
dec
jecxz
cmp
mov
jo
mov
lock
loop
fdiv
test
xchg
xor
or
stc
xor
icebp
int3
inc
mov
rcr
add
fcom
and
test
add
sub
call
inc
inc
xchg
jl
sti
ror
data16
xchg
iret
jnp
rcl
xchg
xchg
push
adc
je
inc
cmps
in
jb
inc
es
out
(bad)
les
jb
jno
fadd
sbb
and
loopne
add
test
lock
outs
jg
hlt
add
inc
mov
push
das
or
pop
mov
and
or
retf
test
xor
pop
ret
aam
es
pusha
or
clc
inc
in
out
test
pusha
ss
xor
inc
mov
movs
xchg
push
out
adc
ins
and
mov
popf
sbb
inc
jp
mov
xor
stc
or
fisubr
fdivrp
stos
cli
jns
out
sbb
pushf
jge
(bad)
hlt
into
push
push
imul
sahf
inc
cmp
das
psadbw
iret
adc
push
jge
popa
aam
push
movs
clc
imul
xchg
les
jno
ror
push
xchg
jmp
push
mov
sahf
test
inc
rol
mov
shl
cmp
in
outs
icebp
adc
xor
js
lods
xchg
enter
mov
inc
push
loopne
(bad)
or
pop
pop
adc
pop
push
add
mov
cmp
int3
jb
mov
test
cmps
or
(bad)
repnz
repnz
fs
inc
pop
xchg
jg
adc
popa
add
scas
push
rcl
fdivr
xchg
xor
test
mul
xchg
sub
jmp
cli
adc
pusha
inc
sub
cmc
push
mov
shr
mov
jmp
pop
push
(bad)
retf
or
push
pop
sets
and
stc
pop
mov
inc
pop
xor
and
dec
inc
pop
xchg
or
adc
loop
scas
repz
xchg
sub
data16
inc
retf
sbb
hlt
cdq
(bad)
jecxz
out
out
out
std
rol
out
fidiv
iret
inc
imul
cli
cmp
jo
xor
popa
or
cmps
sbb
pop
jns
and
gs
stc
sbb
pop
jns
sub
mov
(bad)
push
cwde
not
test
movs
sbb
xchg
nop
data16
gs
inc
pop
push
pop
shl
repnz
push
or
jmp
repnz
inc
fbld
xchg
lds
dec
movs
nop
sub
cmp
sbb
movs
repnz
jle
mov
and
mov
xchg
inc
mov
dec
jecxz
mov
dec
cmc
dec
inc
cmp
mov
inc
push
dec
add
sub
ja
sub
imul
sbb
mov
dec
or
mov
xchg
dec
cmp
cs
or
push
pop
sbb
jmp
and
xchg
sbb
sbb
adc
add
push
js
add
das
out
inc
sub
icebp
pop
mov
xchg
mov
mov
arpl
shl
leave
xchg
leavew
jno
mul
in
xchg
xchg
sbb
aad
xor
mov
and
mov
or
cli
add
fiadd
popf
and
rol
imul
mov
adc
push
gs
in
repz
cdq
cli
std
(bad)
out
jge
mov
mov
jle
pop
ja
jae
jae
repz
cmc
fstp
add
mov
rcl
pop
out
cmps
jmp
cmp
(bad)
dec
xchg
add
xchg
jmp
inc
push
mov
pop
aas
out
inc
mov
lock
es
les
loope
mov
lahf
cmp
into
ja
mov
mov
icebp
jmp
push
xor
cs
push
pop
lea
fsubr
adc
cld
arpl
aam
mov
inc
fld
movs
mov
sub
mov
xor
pop
jle
repnz
xchg
cmps
js
sub
or
call
cmp
mov
movs
hlt
in
cmp
leave
fcmovu
test
mov
xor
retf
pop
pop
sub
ret
ret
push
xchg
les
les
xchg
fmul
loopne
nop
pop
outs
sbb
and
in
ds
in
lods
jl
scas
addr16
push
ds
lock
call
pop
pop
push
sub
dec
scas
xchg
mov
xchg
jns
push
sub
fwait
rcl
push
xchg
sahf
push
or
inc
jbe
aam
(bad)
cmp
pushw
xchg
xchg
out
adc
jne
adc
scas
jns
xor
add
push
(bad)
repnz
rcl
add
and
xchg
mov
mov
in
add
mov
push
into
pusha
and
push
in
mov
lock
leave
sbb
mov
inc
cmps
jnp
pusha
inc
ret
sti
sub
out
or
dec
out
jl
das
rcl
aam
jmp
xor
cdq
pop
ficomp
(bad)
cmp
mov
repz
daa
inc
daa
jbe
dec
cdq
movs
es
into
add
cs
je
leave
icebp
lods
pop
mov
sub
and
not
mov
jmp
jg
jmp
(bad)
pop
movs
push
mov
pop
mov
(bad)
mov
lods
xor
(bad)
push
sub
push
jmp
gs
cdq
imul
jb
dec
xchg
cmp
das
shl
aas
movs
and
call
jo
mov
mov
outs
add
sahf
xchg
(bad)
jmp
mov
mov
sbb
fwait
jne
mov
out
in
mov
mov
stc
push
pop
pop
aaa
jle
cmp
std
sbb
imul
cwde
popf
mov
in
test
ja
shl
dec
imul
aaa
(bad)
jno
xor
(bad)
fld
mov
cs
xor
sub
xor
shl
das
stc
jl
xor
dec
dec
out
fistp
repnz
mov
mov
outs
jmp
int3
add
inc
sbb
pushf
rcl
inc
and
(bad)
jmp
adc
mov
pop
cmps
aad
push
retf
sub
mov
lds
lahf
lods
jg
push
jp
or
jmp
ficom
sub
fldcw
outs
cmc
shr
sti
ds
scas
fisttp
lods
dec
push
mov
repnz
sbb
mov
pushf
or
int
icebp
outs
les
xchg
imul
dec
dec
fiadd
fsub
mov
fbstp
pop
mov
sub
mov
shl
lock
sub
je
or
dec
and
bound
repnz
push
push
mov
dec
mov
dec
lds
sub
mov
xchg
jb
and
dec
cmp
fs
pop
jl
imul
fisttp
push
mov
dec
xchg
(bad)
xor
pushf
pop
push
sbb
adc
lods
loop
push
sub
jns
mov
xor
xor
sub
(bad)
aam
or
lea
fidiv
lds
je
je
add
xor
rol
stc
mov
cld
leave
fwait
dec
inc
mov
aam
outs
sub
aas
push
mov
into
dec
scas
xchg
in
jle
lahf
lds
cdq
sti
cli
scas
pop
push
or
or
mov
(bad)
xlat
icebp
sub
ror
(bad)
jne
lahf
in
clc
pop
adc
int
add
ret
or
cli
movs
inc
pop
aas
cli
mov
retf
mov
xlat
das
lahf
nop
leave
arpl
sub
mov
jg
out
xor
jl
pop
cs
adc
push
pushf
je
xchg
inc
sub
jp
pop
lea
in
lods
push
inc
lods
push
adc
jno
addr16
inc
scas
jne
repz
out
cmp
rcl
xor
dec
mov
lock
les
cmps
inc
mov
aam
cdq
daa
push
(bad)
jge
out
cmp
dec
(bad)
rcl
test
stos
movs
test
dec
ret
cs
push
test
nop
mov
sub
push
adc
(bad)
xor
lock
xchg
xor
sub
jecxz
ins
pop
cmp
and
js
mov
xor
jle
add
sub
cs
dec
ja
ret
pop
jmp
pop
xchg
fsubr
ficomp
addr16
arpl
xchg
cmp
stos
adc
pop
test
mov
out
fmulp
pop
lock
jecxz
out
mov
fdivr
shl
push
addr16
sbb
adc
out
(bad)
xchg
(bad)
jnp
jns
mov
popf
add
test
add
cmp
mov
mov
shl
or
call
cli
repz
in
shl
ins
ds
into
icebp
icebp
jmp
lds
jmp
arpl
ret
(bad)
xchg
(bad)
xchg
cwde
or
lds
je
inc
(bad)
lods
mov
in
in
retf
cmp
out
cld
mov
dec
inc
cmp
xchg
imul
sbb
mov
retf
enter
inc
sbb
or
jno
add
stos
add
sub
pop
cmp
inc
ror
stos
cmp
retf
lods
inc
ds
ret
cmp
ret
outs
pop
(bad)
jns
das
xchg
out
push
ror
xor
mov
pop
add
fld
xchg
xchg
cmp
outs
sbb
repnz
mov
dec
mov
dec
rol
rcl
loop
adc
inc
imul
mov
push
dec
cdq
popa
les
popa
sbb
cmp
retf
or
and
sbb
mov
in
stc
push
pop
xchg
pop
cld
in
imul
and
repnz
sbb
mov
and
jmp
sahf
mov
cmp
sar
stos
or
cwde
dec
icebp
cmp
sbb
and
jb
mov
cdq
jle
(bad)
cmp
push
int3
sbb
mov
xabort
loope
mov
iret
xchg
mov
mov
in
sti
jnp
jmp
stos
loopne
fbstp
mov
inc
ficom
(bad)
jne
jmp
cmp
fiadd
shl
adc
push
loop
inc
test
inc
cmp
(bad)
lds
lods
push
(bad)
add
sahf
out
shr
jns
sbb
into
les
jns
adc
rcr
mov
fnstcw
int
js
mov
out
fidiv
(bad)
and
xor
sub
cld
sbb
xchg
push
das
aaa
push
je
mov
cmc
mov
cmps
fwait
add
stc
push
cs
repnz
mov
inc
sub
push
pop
(bad)
adc
sbb
imul
mov
cmp
cli
aad
and
jns
fbstp
iret
in
aaa
clc
mov
mov
aaa
dec
addr16
inc
dec
pop
jge
xchg
test
pop
pop
jne
lock
out
pop
enter
and
push
pop
repnz
les
ror
xchg
xor
repz
adc
and
xor
or
mov
sti
cmps
shl
jge
cmp
jle
mov
jns
sub
mov
rcr
push
mov
out
mov
iret
shr
sti
in
ret
std
sbb
cmp
mov
or
lds
xor
push
arpl
sub
cmp
test
retf
push
and
pushfw
sbb
push
mov
dec
dec
push
in
cmp
and
sub
and
loop
cmp
stos
addr16
iret
mov
test
inc
test
fdivp
push
adc
xor
or
cmp
mov
dec
dec
daa
ss
clc
nop
jae
push
je
sbb
add
bound
jnp
xor
or
push
jge
imul
push
mov
push
mov
(bad)
mov
(bad)
jge
sub
enter
pop
xchg
retf
push
outs
out
test
pop
(bad)
call
adc
movs
mov
fist
loopne
(bad)
loope
fidiv
xor
into
push
call
and
loopne
in
cmp
mov
jb
jne
push
js
lock
pop
sub
pop
retf
bound
das
add
jg
inc
xor
cs
iret
sbb
scas
jns
ret
es
stc
dec
retf
mov
push
xlat
es
mov
push
cmp
jae
in
xor
mov
lds
and
push
mov
hlt
jge
adc
ss
in
pop
pop
std
lods
int
aas
fstp
fyl2xp1
es
adc
fistp
adc
push
dec
hlt
(bad)
or
xor
into
or
jo
sbb
nop
xor
fs
rol
ss
bnd
sar
mov
jae
ret
lods
fadd
sbb
pmuludq
jg
enter
sbb
rol
xchg
aas
dec
inc
mov
pop
mov
adc
sar
loop
add
mov
nop
pop
pop
jnp
mov
dec
enter
xchg
dec
jg
aam
mov
fcmovnbe
inc
stos
sub
dec
add
leave
mov
popf
dec
add
sar
cmp
sbb
add
lock
jl
out
clc
mov
ja
xchg
(bad)
jo
push
push
test
es
leave
dec
cmp
add
imul
and
push
jne
mov
scas
pop
mov
push
add
and
pop
aaa
push
inc
ror
and
fidivr
pop
push
cmp
push
cld
or
std
jg
(bad)
mov
pop
fucomp
jne
aam
scas
(bad)
(bad)
cmp
dec
lds
adc
icebp
dec
push
pushf
push
xchg
add
jnp
(bad)
ins
jmp
cli
or
std
jmp
out
sbb
pop
icebp
mov
adc
push
jl
rol
adc
pop
ret
ds
xor
int3
clc
(bad)
lods
xor
mov
cmp
iret
mov
add
pusha
mov
aam
iret
jne
and
mov
or
mov
int3
(bad)
cmp
mov
xor
xchg
and
push
loopne
adc
xchg
mov
cmp
xor
retf
lods
sti
adc
int
daa
sbb
or
mov
(bad)
jmp
and
xchg
or
sub
mov
les
enter
addr16
fs
add
mov
xor
movs
dec
into
adc
repnz
(bad)
xchg
or
inc
mov
adc
in
sub
sbb
call
jge
add
jmp
and
mov
(bad)
cmp
pop
dec
jo
xor
sub
test
fistp
pop
test
jbe
inc
dec
stos
popa
xor
dec
movs
retf
daa
xchg
xchg
add
mov
and
sub
dec
sti
addr16
cld
clc
sbb
adc
sbb
imul
das
pop
xchg
jno
loopne
push
lahf
(bad)
xchg
ins
push
sbb
test
pop
shr
shr
mov
mov
cmp
xlat
aaa
inc
repnz
jns
sbb
stos
les
leave
cs
pop
jbe
shl
loopne
shl
pop
aaa
lock
inc
icebp
xchg
xor
pop
stos
dec
push
mov
sub
sub
mov
ins
jno
pop
mov
in
test
or
mov
fwait
out
add
je
xor
or
inc
(bad)
fnsave
loope
shr
jp
xchg
pop
cmp
out
jmp
es
in
loopne
jl
push
into
(bad)
imul
push
je
push
xchg
sub
dec
adc
push
popf
loopne
(bad)
jmp
mov
jle
int
add
ret
movs
sub
pop
ja
loop
iret
push
cmp
test
lock
sub
mov
jne
loop
mov
fmulp
cmp
xlat
dec
adc
cmp
sahf
sbb
add
or
mov
dec
pop
adc
fld
daa
sbb
ja
test
out
cli
mov
pusha
outs
loope
jge
mov
push
mov
inc
jge
(bad)
stc
pop
imul
jne
hlt
pop
dec
pop
out
sub
mov
mov
test
add
shl
sub
jns
push
xor
aaa
push
(bad)
xlat
jg
aaa
jl
fs
jle
clc
fwait
cmp
cmp
clc
pop
mov
gs
pusha
push
and
inc
or
pop
jo
push
dec
push
and
lahf
jecxz
dec
pop
adc
fmul
lds
xor
mov
push
sub
dec
and
call
sahf
in
jmp
inc
test
and
sbb
add
rol
dec
add
je
ret
dec
or
jp
sub
sub
test
sub
aas
icebp
loop
xchg
das
sbb
mov
mov
movs
imul
xchg
sahf
int
pushf
xchg
pop
xchg
shl
push
popa
sbb
pushf
and
pusha
retf
stos
loope
adc
xor
push
or
pop
fucomi
mov
inc
addr16
push
(bad)
mov
sbb
xchg
es
mov
jo
sub
loop
out
das
in
or
adc
(bad)
mov
xchg
cdq
jo
gs
not
repz
push
sbb
repnz
push
js
call
cli
pop
xor
cmp
mov
std
xchg
lods
je
addr16
retf
lock
in
cmps
out
out
add
arpl
jae
push
add
xchg
mov
xchg
pushf
test
imul
ret
(bad)
fwait
push
retf
pop
jg
loope
scas
aas
jns
dec
(bad)
mov
mov
mov
ret
call
clc
mov
repz
mov
mov
repnz
idiv
mov
add
imul
xchg
add
js
retf
inc
stos
xor
add
inc
add
jae
jno
and
cmps
inc
rcl
jne
daa
pop
pop
addr16
call
push
pusha
mov
pop
and
lock
inc
test
ss
fdiv
inc
inc
and
cld
pop
ss
xor
dec
imul
pop
add
hlt
cld
mov
push
add
sub
daa
inc
pop
add
and
rol
loope
sar
cmp
dec
das
rcr
xchg
scas
lds
jle
mov
sub
mov
mov
cli
aad
jnp
aad
arpl
mov
mov
sbb
add
ja
mov
out
daa
retf
mov
int
(bad)
cmp
xchg
pop
aaa
xlat
xchg
fstp
add
aam
xchg
and
dec
rol
mov
out
add
mov
(bad)
ja
cmp
jmp
les
fwait
(bad)
dec
jecxz
dec
or
fstp
mov
fwait
inc
into
sub
sub
enter
cld
inc
dec
adc
or
pusha
stos
dec
cmps
xor
cdq
out
(bad)
jmp
pop
pop
jg
call
fbld
idiv
jmp
popf
push
cs
xor
rep
lahf
jno
xchg
addr16
scas
ret
sbb
jo
sub
in
cmp
mov
inc
push
push
fwait
xchg
bnd
push
and
aad
jnp
lods
jbe
mov
push
rol
cld
mov
retf
icebp
je
pop
hlt
movs
or
jb
mov
and
and
xlat
adc
or
stos
mov
dec
dec
pop
aad
dec
push
fdivr
jne
sahf
xor
fsubr
retf
mov
leave
lea
sub
jmp
sub
dec
push
repz
js
push
push
or
mov
xchg
xchg
mov
xchg
popf
xor
loope
mov
loope
mov
icebp
(bad)
call
xchg
push
mov
adc
push
gs
and
ficomp
jmp
mov
repz
shl
jb
pop
mov
mov
clc
mov
lock
(bad)
or
repnz
test
xchg
push
cmp
adc
inc
retf
push
xor
push
lar
dec
(bad)
fnstsw
fist
test
(bad)
fmul
xchg
dec
adc
xchg
pusha
mov
dec
sub
fcom
mov
fldl2e
jmp
jb
adc
(bad)
cli
cmps
inc
jnp
loopne
call
(bad)
jmp
js
div
mov
in
jge
fsubr
jl
add
sbb
ret
gs
cs
rcr
cmps
adc
shl
fwait
cmp
loope
add
pop
or
inc
push
pop
out
sub
scas
outs
add
xor
mov
mov
xchg
test
movs
sbb
sahf
pop
sub
dec
jle
pop
loop
cmp
repz
cld
sbb
inc
ret
int3
rol
mov
xchg
push
rcl
xor
mov
popf
mov
adc
jns
addr16
ret
cmp
in
mov
dec
and
call
movs
push
or
clc
jbe
jns
adc
push
mov
in
cmp
lods
cmp
stc
sbb
addr16
mov
mov
shr
fcom
push
sete
mov
and
add
pop
and
shl
retf
call
call
adc
aam
in
dec
jge
push
inc
cmps
retf
aad
dec
cmp
fcomi
mov
aas
aas
ds
sbb
xchg
retf
shl
jge
mov
dec
push
jl
adc
repz
out
in
or
mov
add
xor
xchg
pop
and
call
adc
or
sub
push
(bad)
outs
int
(bad)
dec
push
ins
outs
outs
call
fdivrp
(bad)
aas
(bad)
clc
out
cmp
out
dec
in
xchg
pop
push
dec
push
out
add
lahf
mov
cld
sub
bound
cmp
jo
fild
push
fst
test
test
adc
fisub
sub
xor
in
jo
mov
push
or
or
adc
push
lds
xchg
das
into
or
dec
mov
nop
pop
outs
inc
sub
(bad)
add
push
cwde
xchg
mov
inc
xchg
xor
stc
pop
cmp
jno
push
pop
pusha
mov
cdq
retf
xor
hlt
inc
dec
(bad)
or
mov
mov
jnp
retf
dec
xchg
jmp
enter
test
loop
ficomp
adc
retf
js
cmp
sahf
mov
push
bound
sbb
rcr
clc
sbb
popa
cwde
test
sbb
int3
dec
inc
(bad)
test
mov
inc
pusha
push
or
sub
and
xchg
fs
pop
in
pop
or
cmps
pop
jo
dec
(bad)
sbb
pop
mov
daa
pop
push
iret
out
mov
fdivr
sbb
mov
push
iret
pop
sub
xlat
xchg
add
cwde
mov
bound
inc
push
lahf
push
mov
jmp
adc
fsin
std
int
lea
mov
sti
fmulp
icebp
mov
push
loop
popf
pushf
leave
and
mov
sub
jmp
sbb
jmp
push
ja
rol
mov
ret
pop
iret
mov
mov
pop
scas
in
pop
rol
xor
pushf
shr
addr16
push
mov
imul
mov
ja
ret
clc
dec
dec
pushf
mov
js
mov
pop
repz
jnp
in
adc
sub
rcl
push
xor
fcom
inc
out
fisub
cs
popa
ror
add
mov
pop
dec
inc
fidivr
icebp
(bad)
jecxz
jnp
dec
stos
pop
outs
out
inc
cmp
iret
ret
jnp
(bad)
jae
add
jne
out
ret
loope
mov
xchg
xlat
push
add
fld
stos
push
mov
scas
mov
je
mov
nop
push
inc
jmp
and
imul
hlt
add
cmc
sbb
fstp
pop
sbb
sbb
adc
sahf
out
out
in
ds
in
jle
dec
or
cmp
retf
push
shl
jb
mov
jl
add
or
fs
sbb
add
les
jno
arpl
sbb
add
out
lods
ja
lods
in
clc
sbb
std
in
(bad)
in
sar
shl
mov
outs
popa
cld
pop
shr
mov
sub
outs
or
xor
xlat
faddp
jl
in
push
movs
pop
xchg
cmps
push
fdivr
(bad)
mov
lds
pop
mov
xchg
xchg
mov
or
add
ss
inc
sbb
sahf
mov
mov
pusha
jecxz
xor
test
fwait
xor
gs
lds
jp
sahf
dec
and
or
cmp
ds
jl
popf
cmps
and
cmps
daa
xor
movs
or
sbb
pop
lar
int
push
pop
imul
mov
(bad)
fwait
enter
or
lods
pop
xchg
daa
loopne
shr
pop
popf
cmps
inc
pop
push
retf
and
mov
cli
mov
ja
push
pop
jg
mov
nop
(bad)
xlat
aaa
pop
in
(bad)
xchg
jl
mov
sbb
movs
lods
cs
aas
gs
and
lods
cld
xor
xor
gs
xchg
leave
ds
cmp
push
sti
stc
enter
stc
in
adc
int3
retf
inc
sbb
(bad)
out
mov
lahf
ds
and
or
ret
imul
idiv
xchg
add
add
inc
push
ret
enter
xchg
repnz
mov
jbe
sub
xchg
jns
adc
cmp
inc
sub
dec
ja
mov
mov
jmp
mov
dec
ss
loopne
outs
push
jmp
jno
push
sub
push
pop
stc
popf
mov
pop
sub
sar
jecxz
jle
add
inc
jbe
in
xchg
pop
cwde
jne
shl
xchg
stc
push
mov
sub
div
hlt
lock
sub
add
scas
push
lds
xlat
sub
ret
mov
ins
sub
in
pushf
jle
int
or
in
nop
xchg
push
mov
imul
dec
outs
xchg
inc
addr16
sub
inc
ins
pop
jle
sub
pop
iret
push
mov
and
cmp
out
cs
push
fadd
xchg
pop
sbb
movs
test
push
jns
mov
jg
xchg
xor
and
sub
jns
cli
das
mov
das
jae
je
lahf
pop
mov
scas
jno
ret
sub
add
sbb
outs
daa
sbb
mov
sub
cmp
mov
sbb
fsin
loope
in
mov
pop
push
xor
test
imul
mov
addr16
jp
add
lock
js
int
lods
lahf
daa
sub
pusha
popa
dec
es
add
or
repz
dec
xor
lea
aaa
fcmovnu
fdivr
std
icebp
mov
lock
dec
mov
cs
aaa
xchg
mov
sub
xchg
imul
mov
fimul
xor
push
xchg
sbb
push
mov
in
push
mov
inc
add
sub
pop
push
sbb
and
in
pop
fnstcw
ss
mov
xchg
xchg
adc
mov
icebp
inc
xlat
cwde
scas
loope
adc
js
pop
fs
mov
ins
int3
sub
in
ror
out
clc
or
aas
or
mov
pop
out
pop
xchg
push
xchg
cmps
push
dec
iret
or
push
bound
sbb
inc
adc
(bad)
in
mov
dec
cmp
in
ja
popf
dec
xor
outs
pop
jmp
and
mov
mov
cli
pushf
fistp
xchg
sahf
or
adc
call
jle
cmp
mov
sub
cmp
jge
enter
dec
xchg
push
call
mov
stos
sbb
sub
repz
rcl
xchg
dec
pop
jo
jp
ret
retf
add
jmp
mov
jmp
push
xor
push
rcl
sbb
sub
clc
popa
inc
mov
mov
sub
cmp
pop
adc
repz
push
fdivp
cmps
ror
lahf
std
stc
mov
call
addr16
dec
sbb
jge
mov
pop
or
add
inc
stos
outs
mov
xchg
and
cdq
repz
mov
mov
mov
mov
pop
and
je
mov
pop
xchg
out
lock
jmp
jmp
or
mov
cmc
dec
retf
add
movs
push
inc
mov
jmp
std
retf
dec
(bad)
and
pop
adc
pop
sahf
xor
repnz
icebp
jno
movs
lds
cmp
cmp
movs
sub
das
jmp
inc
xor
jle
or
aas
xor
mov
jmp
test
xlat
out
retf
xchg
mov
push
xchg
shl
jmp
rep
cdq
cmp
sbb
ret
xor
pop
and
mov
cs
cmp
mov
lds
ins
mov
xchg
icebp
(bad)
scas
cmp
mov
add
ret
retf
mov
add
iret
out
jae
cwde
and
mov
jg
mov
gs
ds
shl
cmps
push
lods
mov
inc
je
or
adc
inc
jl
jp
scas
pop
(bad)
xor
test
sbb
js
xor
push
(bad)
stc
hlt
xchg
pop
mov
scas
add
cwde
test
xor
sar
fwait
(bad)
jmp
mov
loope
outs
jg
lock
push
(bad)
scas
repz
mov
sub
and
sar
jno
jg
div
dec
sub
xor
push
add
sbb
call
cli
xor
jp
out
jle
xchg
(bad)
sahf
sbb
xchg
dec
iret
add
push
pop
fwait
outs
mov
xchg
mov
gs
daa
mov
aaa
(bad)
lock
jecxz
push
fwait
push
adc
rol
adc
pop
or
push
cmc
adc
stos
xor
retf
cdq
dec
dec
arpl
out
jns
xchg
cmp
cmp
in
sbb
ror
xor
add
and
pop
jge
outs
out
dec
arpl
dec
inc
rol
ror
lods
xlat
mov
(bad)
ficom
pop
fstp
aam
(bad)
mov
cs
outs
icebp
in
int3
(bad)
arpl
dec
je
sbb
inc
xchg
out
xchg
cmps
test
add
inc
inc
rcl
mov
cmps
and
sbb
mov
int
sub
ja
mov
xor
sbb
pushf
jne
xchg
and
xchg
sub
adc
pop
in
jns
repnz
lds
in
mov
call
jnp
xchg
or
in
xlat
(bad)
dec
popa
mov
fiadd
scas
push
into
(bad)
movs
imul
or
sub
test
add
outs
into
cmps
pop
sbb
inc
scas
jl
xor
retf
repnz
(bad)
(bad)
mov
jg
mov
cmp
arpl
jg
pop
xor
les
rcl
(bad)
ja
int
mov
cmp
cmp
sub
jno
div
outs
mov
out
cmp
mov
push
push
and
xchg
int
push
icebp
push
and
retf
ffree
dec
xchg
inc
sub
adc
repz
into
xor
pop
or
imul
pop
dec
(bad)
imul
sub
xor
imul
mov
xchg
mov
cdq
pop
lock
push
push
leave
lods
xor
push
call
jne
adc
dec
push
jp
push
hlt
sub
push
mov
aaa
adc
sbb
inc
stos
mov
add
and
shl
inc
sbb
loopne
mov
cmp
or
test
mov
lock
cmps
jp
dec
push
sar
mov
js
hlt
push
dec
xor
cmp
cmp
enter
dec
push
push
ins
and
lock
not
data16
fsub
(bad)
and
push
popf
dec
fs
or
or
das
popa
call
out
xor
jg
mov
mov
loopne
and
inc
cmps
popf
(bad)
out
mov
repz
xchg
popa
jno
add
adc
push
add
aaa
mov
je
icebp
xchg
mov
sti
(bad)
mov
(bad)
icebp
aaa
xchg
ret
sbb
or
dec
ror
mov
stos
push
xlat
sbb
fld
lahf
jnp
xchg
test
jae
and
in
cmps
cmp
adc
mov
pop
stos
je
adc
pop
shl
sbb
test
rcr
sar
push
stc
movs
addr16
jge
push
into
add
popa
or
and
fcomi
adc
hlt
mov
xlat
and
pop
xchg
lds
mov
aas
ror
out
cmp
cli
mov
push
repnz
pusha
and
push
push
push
pop
ror
jns
mov
jne
cmp
xchg
mov
icebp
call
and
jecxz
or
outs
retf
pop
or
xor
nop
(bad)
xchg
xlat
sahf
pop
in
adc
and
addr16
pop
retf
inc
into
enter
in
mov
(bad)
adc
shr
lds
clc
clc
iret
cmp
clc
pop
in
jge
jne
xor
stc
jmp
repz
clc
call
mov
retf
aaa
push
ja
pushf
inc
hlt
addr16
mov
loop
mov
mov
test
stos
js
lds
(bad)
popa
add
mov
and
sbb
jnp
mov
sbb
pop
add
push
jmp
dec
pop
xchg
out
jl
das
icebp
into
in
jge
cmp
xor
sub
cld
pop
int
je
shl
push
ins
stos
(bad)
jmp
hlt
sti
xchg
fstp
aam
add
(bad)
xchg
das
mov
sub
lds
lods
int
jl
js
xchg
stos
loope
enter
fld
scas
idiv
(bad)
jae
mov
and
jne
dec
dec
add
xchg
or
sub
add
mov
(bad)
mov
push
int3
je
dec
fwait
jecxz
add
sar
ins
sbb
mov
xchg
push
dec
pop
nop
mov
sahf
or
and
add
aas
add
jae
jge
(bad)
mov
enter
xchg
jnp
add
pop
fsubr
sbb
lea
in
sub
and
iret
pop
jmp
mov
clc
xchg
stos
jp
jb
mov
jmp
pop
jg
xor
(bad)
arpl
push
jo
and
push
adc
std
ja
div
call
jns
loopne
into
ins
mov
test
out
jle
pop
cmp
pop
jecxz
js
daa
fild
mov
loop
jg
int3
cld
pop
sbb
data16
mov
fistp
cmp
out
fs
cmps
add
sub
xchg
iret
imul
cmps
sub
clc
(bad)
pop
lock
(bad)
(bad)
(bad)
mov
inc
pop
adc
xchg
mov
jno
and
dec
pop
(bad)
jbe
iret
cmp
cmp
adc
retf
push
cmovns
push
pop
sub
or
adc
or
and
(bad)
in
mov
(bad)
pop
jge
jg
loopne
imul
cmp
xchg
fadd
dec
sub
std
shl
and
fimul
aam
add
in
mov
mov
daa
leave
jge
or
mov
pop
cmp
cmp
loope
lea
retf
push
ins
add
cmp
clc
int3
sub
lock
loope
rol
xchg
cmps
arpl
iret
fcomp
call
sti
movs
adc
and
fmul
fisttp
sub
shl
stos
pop
leave
fist
sub
xor
push
cmp
sahf
dec
cmp
(bad)
push
xor
push
es
mov
xchg
xchg
jne
xchg
push
out
mov
pusha
sbb
std
dec
(bad)
jp
dec
mov
sar
and
xchg
pop
push
ret
adc
clc
out
pop
ret
data16
and
push
sar
int
rol
cmp
mov
push
gs
mov
jo
test
ret
jg
xchg
xchg
xchg
pop
ds
in
xor
sbb
mov
or
jbe
fisub
sahf
clc
sub
retf
stos
test
popa
aam
jmp
adc
cmp
neg
popa
leave
icebp
jno
rcr
jns
test
inc
xor
outs
sbb
inc
xchg
adc
std
jg
(bad)
(bad)
call
jle
jb
je
gs
push
fcom
ss
jmp
jecxz
jmp
push
(bad)
sbb
mov
mov
mov
xchg
jb
jle
xor
mov
test
adc
(bad)
jne
in
enter
xchg
into
hlt
push
add
or
cmp
mov
adc
mov
cmp
xor
(bad)
daa
pop
xor
lahf
repz
or
xchg
outs
shl
imul
adc
jmp
enter
fstp
fisttp
repnz
call
xchg
pop
js
jge
jne
pop
or
pop
pop
popf
mov
int3
sbb
fcomp
dec
and
xchg
dec
mov
inc
and
in
aaa
sbb
and
mov
lea
cmc
fs
and
into
ret
es
pop
mov
add
es
inc
addr16
outs
rol
sub
call
cld
loope
shr
mov
sub
ret
(bad)
mov
mov
stc
dec
cmp
aas
les
movs
addr16
(bad)
mov
and
mov
cmp
xchg
cmp
addr16
mov
mov
pop
pop
out
jg
jb
test
push
push
into
xchg
fsub
cmp
jns
jg
pop
inc
les
dec
sbb
mov
call
xchg
icebp
test
mov
(bad)
fstp
lahf
cmp
es
or
daa
push
sub
out
add
outs
jecxz
in
(bad)
fistp
imul
mov
xchg
mov
hlt
or
xor
imul
(bad)
das
rcr
or
pop
sbb
mov
jmp
xchg
mov
mov
jae
aad
dec
xor
lock
push
sub
aas
repnz
inc
retf
jg
pop
dec
and
fild
sahf
xchg
lock
jne
(bad)
push
adc
jns
cmps
mov
sbb
xchg
(bad)
scas
jno
adc
cmp
jmp
xor
add
jg
imul
fwait
add
adc
sbb
xchg
inc
push
popf
adc
mov
xchg
stc
push
fcomip
xor
iret
cmc
and
rcr
mov
js
fidiv
scas
jmp
add
cmp
mov
sbb
mov
jmp
inc
js
add
or
outs
les
cmp
test
inc
sbb
pop
(bad)
sub
add
push
(bad)
push
sahf
jmp
add
cwde
je
movs
out
cmp
add
out
mov
mov
pop
sbb
test
lock
jmp
iret
xor
mov
sub
cli
ja
loop
mov
jle
addr16
pop
xor
jg
mov
hlt
push
lods
add
adc
adc
cmp
push
mov
repnz
lahf
js
les
and
sub
movs
push
jecxz
pop
pop
ins
jo
stos
push
loope
stos
movs
lods
daa
pop
or
shl
mov
out
inc
dec
stos
in
jns
gs
cmp
sub
inc
sub
shr
mov
scas
icebp
int
sub
xchg
adc
rol
adc
xor
add
fmul
mov
xchg
lods
xor
xchg
pop
nop
in
fidivr
pop
jge
push
push
arpl
and
cdq
mov
imul
lods
sub
sub
pop
mov
xor
out
outs
push
daa
lahf
icebp
cmp
mov
out
dec
fnstcw
ss
out
int
retf
mov
xlat
outs
in
xor
icebp
push
or
aad
jnp
shl
pop
or
icebp
test
hlt
inc
sub
push
imul
fstp
dec
sbb
xchg
inc
push
cmp
lods
mov
jne
push
stc
mov
adc
add
mov
mov
pop
or
ds
cmc
scas
jmp
cmc
add
and
stos
ror
(bad)
idiv
adc
jp
dec
add
test
cmps
or
imul
push
mov
xlat
(bad)
fidivr
cmp
std
cmp
out
lods
mov
xor
dec
adc
(bad)
jae
scas
mov
hlt
mov
retf
dec
iret
sahf
pop
jg
lods
enter
sbb
scas
stos
out
repnz
xor
push
cmp
aas
inc
add
sbb
xor
scas
into
add
ds
xor
lods
daa
add
pop
je
hlt
retf
outs
push
and
adc
push
jmp
je
xchg
ds
inc
pop
push
xlat
mov
ins
rcl
push
ins
in
je
in
xchg
aad
jl
arpl
cmps
push
push
cmp
pop
jge
sub
jno
and
cmp
loop
test
cwde
pushf
lds
inc
or
ret
add
out
(bad)
mov
rcr
xlat
mov
nop
mov
fldenv
ins
cmp
jnp
bnd
xor
in
sbb
ds
rcl
sbb
stc
sub
mov
sahf
inc
gs
pop
les
fs
ss
xlat
sub
sub
and
inc
and
stc
pause
aas
stc
push
out
jns
fwait
cmp
(bad)
loope
ret
pushf
mov
jmp
cmp
jp
mov
pushf
pop
stc
iret
or
mov
mov
add
add
retf
outs
cmps
inc
fsub
(bad)
mov
ins
xchg
mov
sbb
xor
popf
mov
dec
mov
lock
test
leave
ficomp
adc
dec
pop
push
jp
cwde
push
lds
sub
out
sbb
mov
movs
iret
mov
mov
jns
test
lock
retf
js
pop
rol
mov
out
dec
in
mov
sbb
(bad)
xchg
xchg
outs
pushf
and
inc
cmp
fldl2t
xchg
push
sbb
cmp
mov
push
icebp
ret
lds
lods
call
cmp
(bad)
(bad)
js
xchg
or
push
(bad)
adc
push
and
shl
mov
mov
nop
les
mov
ins
test
jo
mov
jb
sar
imul
pop
cmp
xchg
aas
sbb
pop
sbb
xchg
sbb
std
jg
cmp
test
adc
mov
sbb
shl
clc
push
daa
cmc
pop
jecxz
in
dec
push
dec
or
adc
inc
cmp
xor
xor
out
fsub
cli
jge
shr
mov
jae
push
mov
fwait
rcl
repz
mov
retf
pop
mov
arpl
in
outs
jg
xor
scas
or
pop
aam
jbe
dec
mov
sar
xor
cmp
mov
loope
jle
in
sbb
cdq
add
jne
jae
ds
outs
dec
jle
(bad)
adc
stos
test
adc
loop
sub
hlt
push
ja
ja
lea
mov
dec
add
pop
push
out
jle
cmps
mov
(bad)
div
lahf
stc
sub
xor
push
mov
mov
mov
retf
outs
ins
jecxz
and
adc
cmp
retf
add
loopne
test
push
popf
jl
xor
xor
lock
xchg
mov
jb
inc
adc
jae
(bad)
psubusw
push
int3
(bad)
pusha
mov
(bad)
sbb
(bad)
adc
push
jle
movs
or
inc
jno
mov
mov
push
iret
outs
movs
popa
retf
sub
jmp
pop
and
or
cmp
gs
call
push
into
or
cld
or
out
jns
in
in
icebp
xor
ss
mov
shr
add
daa
and
popf
xchg
mov
das
aaa
add
mov
jo
mov
stc
loopne
jno
stos
add
es
out
xor
cwde
clc
jle
jp
mov
mov
test
cmp
aas
out
dec
mov
adc
and
repnz
mov
std
jmp
pushf
daa
push
push
inc
in
sbb
xor
mov
jno
xlat
out
repnz
jg
lahf
(bad)
pop
xlat
inc
fbld
in
outs
cmp
jmp
push
push
imul
mov
jle
stc
mov
push
arpl
je
xor
push
pusha
push
scas
or
sti
pop
test
cdq
enter
add
xchg
addr16
cmp
je
bound
int3
mov
(bad)
lea
icebp
cld
cwde
push
pop
jo
xchg
ret
mov
movs
aaa
popf
movs
out
pop
iret
addr16
outs
loop
stc
arpl
mov
sbb
sub
sbb
je
cmp
sub
jne
sub
das
les
pusha
test
mov
cmc
rcl
test
daa
jns
addr16
out
lods
fucom
xchg
popf
cmc
and
cs
jg
mov
cmp
xor
mov
pop
ret
add
pop
cmps
cmc
mov
inc
ins
dec
xchg
push
jmp
in
jg
cmc
test
loopne
pushf
or
jp
fisubr
loop
div
lea
mov
icebp
mov
enter
sub
add
fdivp
retf
xlat
scas
repnz
repz
popf
and
jmp
(bad)
(bad)
jmp
xrelease
pop
jle
js
add
xchg
adc
mul
out
scas
test
cld
sbb
mov
push
dec
mov
push
outs
cmp
popf
xor
loop
data16
add
stc
fstp
xchg
dec
jge
cld
push
(bad)
cmp
cmp
repz
add
pop
sub
cmps
xchg
in
push
sub
bound
mov
pop
or
ret
mov
push
fild
or
ficom
std
movs
inc
gs
xchg
mov
and
push
movs
je
imul
sub
jecxz
push
mov
scas
push
jb
scas
add
mov
xchg
bswap
jmp
clc
and
lock
adc
xlat
xchg
sub
fild
sbb
cmp
add
sbb
imul
sbb
mov
xor
mov
dec
pop
sbb
dec
add
dec
cdq
cmp
ds
mov
cwde
rol
inc
fmul
cmp
scas
leave
push
loope
clc
jp
mov
push
stos
pop
mov
lds
pop
loopne
cmp
stc
jne
mov
fnstcw
cld
mov
sub
dec
mov
loop
pusha
jno
mov
outs
(bad)
jmp
fnstsw
ins
out
mov
outs
test
sbb
mul
jmp
icebp
repz
clc
xchg
dec
fst
(bad)
mov
pop
test
inc
js
ja
mov
xchg
bound
and
dec
sub
and
cld
sub
mov
movs
dec
mov
mov
stc
rcl
fsubrp
out
outs
in
ins
ins
jmp
iret
cmp
mov
ds
lea
sub
pushf
xor
xor
cmc
cmps
push
ret
cmp
or
stos
push
sbb
xor
ret
test
sub
xchg
inc
sbb
test
pop
call
mov
movups
mov
dec
adc
mov
dec
mov
addr16
idiv
or
int
shr
sub
add
bound
mov
(bad)
sub
pop
rol
in
cmp
retfw
in
mov
cdq
adc
movs
inc
mov
stos
es
adc
pop
sbb
inc
mov
repnz
sar
mov
mov
pop
lock
cmps
jge
iret
outs
mov
outs
mov
xchg
jmp
mov
mov
ds
fdivrp
repz
pop
aaa
push
addr16
push
ds
xor
and
mov
js
cwde
jmp
int3
add
mov
jnp
jbe
ja
mov
jbe
call
pop
add
cdq
daa
mov
xor
lahf
fucom
repz
sbb
sub
xor
pop
mov
pusha
add
inc
lods
xor
sbb
jno
dec
ins
loope
lods
(bad)
sti
loope
das
add
mov
iret
xchg
daa
sbb
push
fisubr
sbb
xchg
ds
call
sub
retf
adc
adc
imul
push
adc
mov
movs
repnz
ret
(bad)
out
out
std
pop
lea
and
repz
inc
pop
xchg
jge
sub
shr
dec
(bad)
js
pushf
mov
sub
push
fcomip
ja
sub
add
in
add
movs
ret
adc
xchg
je
cmp
add
pop
jb
into
pop
mov
dec
pop
mov
test
es
mov
mov
cmp
jmp
fcmovnbe
mov
sub
xchg
push
retf
xor
pop
mov
int3
les
enter
mov
je
data16
dec
movs
and
jecxz
push
jne
sub
xchg
ins
ret
js
lahf
rcr
adc
je
sbb
pop
jge
mov
mov
in
loop
repz
push
inc
or
in
mov
push
jo
outs
rcl
xor
jecxz
dec
inc
popaw
aad
dec
sbb
clc
repnz
test
and
sbb
nop
mov
mov
out
pop
int
adc
pop
cmp
call
push
xchg
jp
xchg
adc
ins
jmp
sar
cmp
iret
pop
ret
inc
xchg
ins
das
inc
mov
dec
stc
les
test
iret
mov
aaa
mov
jmp
push
scas
popa
xchg
jo
xchg
retf
xor
mov
adc
adc
adc
and
int
push
jmp
aas
cld
cld
rol
(bad)
jg
addr16
ja
femms
jle
inc
sub
jg
jmp
movs
push
add
lahf
sub
repnz
shl
inc
loope
pop
pop
pop
push
jae
add
add
jmp
(bad)
mov
retf
xchg
repnz
cld
das
jo
cs
scas
lock
out
xor
mov
jmp
mov
dec
out
cmp
js
ret
jno
imul
movs
jne
dec
fiadd
and
jno
mov
iret
les
adc
fimul
fwait
clc
shl
jmp
mov
retf
retf
aaa
sbb
sbb
ins
fdivr
xchg
or
inc
(bad)
aad
pop
push
jmp
stc
jp
hlt
mov
push
pop
retf
in
xor
in
mov
int3
sbb
cwde
int
pop
add
outs
cmp
ins
sub
(bad)
sbb
cwde
lds
out
shl
into
out
ss
mov
jmp
jns
gs
cdq
(bad)
mov
jae
pusha
sbb
jb
fmul
ins
sbb
or
jo
das
ja
jbe
mov
aad
cmc
cmc
cmc
pop
mov
pop
cmp
xor
xor
add
es
ror
stc
jno
or
dec
xor
cdq
loop
arpl
(bad)
or
gs
test
(bad)
fstp
jp
jecxz
(bad)
(bad)
cli
xor
cmps
(bad)
addr16
pop
adc
jo
mov
repz
sub
sbb
enter
mov
jl
push
retw
fs
mov
add
lds
fucomp
add
dec
mov
jns
inc
pushf
inc
es
cmp
clc
leave
daa
push
call
sub
add
add
gs
or
adc
jle
push
pushf
imul
rcr
iret
jno
call
jp
pop
sub
dec
dec
lahf
xor
inc
outs
xor
ds
dec
cmp
call
xchg
inc
aas
dec
in
cmp
outs
rcr
(bad)
into
mov
int3
xchg
jmp
scas
xchg
out
mov
fmul
add
xor
push
shl
popa
add
icebp
mov
mov
mov
ins
stc
sbb
cld
adc
and
enter
into
jnp
clc
ffreep
and
jne
and
shl
sub
mov
or
rcl
mov
push
cs
loope
rcr
dec
sub
push
fld
cmp
fisub
jae
and
xor
ja
clc
lds
fisttp
pushf
hlt
xchg
test
cmps
xor
fsubr
sbb
sub
ins
adc
ins
in
nop
jno
mov
jbe
outs
pushf
cs
repnz
(bad)
(bad)
aas
not
xchg
(bad)
and
push
mov
scas
xor
adc
aad
push
mov
jg
cli
xor
daa
push
sub
faddp
sbb
cmp
push
in
out
stos
mov
and
and
inc
pop
scas
ror
bts
arpl
mov
fwait
xchg
inc
pop
jb
pop
adc
or
retf
popa
pop
shl
jmp
xor
cmp
adc
mov
stc
inc
mov
inc
sar
imul
popa
xchg
scas
and
or
cmp
pusha
call
push
fdivr
add
mov
ja
rol
ins
stos
mov
sti
jb
repnz
fdivrp
and
inc
aas
cmps
aad
xor
sub
scas
(bad)
(bad)
loop
jle
repz
fcmovne
mov
xchg
inc
jg
cld
add
je
pop
mov
and
movs
mov
jg
jge
push
lea
pop
enter
fisubr
icebp
out
jge
or
std
jle
inc
or
xchg
push
stc
test
into
retf
retf
in
addr16
ja
outs
jecxz
cmps
dec
xlat
push
ret
nop
retf
add
and
dec
inc
inc
push
xchg
(bad)
rcl
je
je
fbstp
lahf
cmps
jmp
cmp
shr
ret
or
scas
in
xchg
jl
mov
outs
fstp
xchg
retf
push
fidivr
sbb
movs
mov
push
add
or
or
out
in
xor
shl
sub
(bad)
jg
xchg
cmp
test
and
add
adc
lock
ss
xchg
push
dec
mov
sub
sub
xor
adc
xchg
adc
lds
add
xchg
scas
retf
ror
in
mov
mov
dec
test
push
xor
add
addr16
sbb
or
pushf
add
es
adc
cmp
rsm
xchg
inc
ret
popa
(bad)
in
adc
popa
inc
ja
pop
repz
cs
test
push
adc
mul
jmp
mov
sub
test
iret
(bad)
jno
add
inc
pop
pusha
pop
cwde
lahf
sti
std
scas
sub
jecxz
add
loop
sbb
gs
cmc
ins
in
sub
sahf
fcom
jmp
xchg
lods
xor
stc
pop
test
in
cmp
mov
stc
jmp
into
and
gs
add
shl
rol
(bad)
jg
call
cmp
mov
mov
in
inc
(bad)
sar
lods
jmp
lods
out
jmp
ja
jp
sub
jns
cs
push
arpl
nop
dec
inc
sub
js
xor
arpl
repz
lods
lods
int
(bad)
fdivrp
ss
sbb
jmp
xor
cmp
jecxz
push
(bad)
push
leave
movs
cmp
push
mov
mov
adc
movs
xchg
xor
movs
popa
add
push
aad
inc
sbb
leave
dec
es
push
adc
movs
or
push
cs
and
sub
cdq
jg
jo
fld
mov
xchg
dec
pushf
ret
jmp
adc
cld
fs
mov
and
and
(bad)
test
sub
cmps
stos
ror
pop
sbb
or
cld
sub
adc
cmps
cmc
xlat
cli
and
movs
jl
out
or
adc
mov
not
shr
jae
inc
(bad)
pop
test
int
call
in
jne
xor
movs
out
lock
mov
rcr
test
pop
or
cmp
mov
lock
ret
pop
lods
sti
fistp
mov
cmp
xor
jmp
imul
dec
in
test
(bad)
jle
pop
pop
cli
pushf
leave
loopne
enter
imul
xor
out
add
jbe
mov
cmp
ins
pop
push
sahf
add
jl
mov
int
in
cmp
daa
adc
jno
stos
mov
jae
retf
rol
out
xor
add
daa
mov
das
xor
add
fcom
jmp
cli
xchg
cmc
das
lock
ret
xchg
fsubr
hlt
sub
xchg
ror
cmp
test
iret
icebp
mov
ja
adc
cmp
stos
(bad)
(bad)
shl
xchg
in
out
mov
out
in
ret
and
xor
adc
push
xchg
mov
out
xor
ret
jne
(bad)
fild
mov
sahf
jae
mov
mov
test
imul
push
jne
and
xchg
js
jae
xor
jmp
out
sbb
es
pushf
xchg
cmp
mov
rcr
push
mov
mov
fst
adc
and
xchg
aaa
sbb
je
neg
loop
leave
sti
adc
push
lahf
fdiv
add
push
push
rol
cmps
ret
push
(bad)
hlt
inc
fcmovnbe
jae
in
cmp
cld
xchg
scas
push
les
fadd
and
popf
jno
xchg
push
pop
into
jno
(bad)
add
sbb
xchg
lahf
(bad)
(bad)
cs
cmp
lods
loope
in
adc
ja
xchg
lahf
cs
or
add
daa
and
scas
shl
cs
icebp
imul
mov
aam
xor
push
cmp
shl
gs
sbb
cmp
int
and
dec
shl
or
test
daa
imul
fisttp
mov
or
add
pop
pusha
stc
jge
int
inc
inc
xor
mov
pusha
sbb
mov
icebp
xchg
cmps
(bad)
pop
jge
jnp
(bad)
sub
push
es
popf
leave
mov
sti
jge
iret
call
sub
sub
mov
or
sub
push
ds
sbb
mov
retf
out
outs
or
add
rol
arpl
sbb
dec
jae
or
push
xchg
lea
xor
addr16
cmp
inc
clc
dec
and
inc
(bad)
retf
(bad)
mov
add
(bad)
cmp
sub
or
mov
add
out
test
dec
jno
xchg
stos
mov
or
xor
stc
sub
jb
xchg
repnz
stc
cmp
inc
xor
pusha
push
ds
popa
mov
inc
push
push
and
mov
xabort
jl
rcl
mov
in
test
dec
cmp
mov
xchg
inc
iret
cld
fist
(bad)
retf
xchg
scas
int3
(bad)
cwde
stc
mov
add
movs
rcl
mov
stos
jae
mov
cmp
mov
push
jge
arpl
leave
xor
pushf
les
lods
(bad)
cmp
das
inc
add
and
inc
pushf
pop
arpl
out
cmp
std
inc
sub
sar
stc
es
dec
je
and
scas
inc
outs
test
mov
icebp
hlt
fld
(bad)
(bad)
xlat
lahf
lods
jmp
jp
pop
clc
neg
mov
dec
sbb
pop
pop
fld
dec
les
cmp
jbe
xchg
test
clc
sbb
dec
lods
imul
scas
inc
pop
inc
into
fldenv
stos
cwde
mov
std
mov
iret
stc
push
sbb
mov
cs
popf
push
repz
pop
jmp
cmc
xchg
add
inc
push
cmps
push
sahf
push
sub
and
or
loope
pop
xchg
or
cmps
or
push
ret
(bad)
jae
xor
retf
mov
dec
mov
and
(bad)
(bad)
rol
sbb
into
mov
repz
loopne
pushf
in
stos
and
xor
pushf
sbb
das
xchg
mov
(bad)
adc
push
add
push
ret
cmp
mov
cmp
pop
call
outs
pop
pop
mov
push
cmp
push
dec
mov
retf
fdivp
mov
loope
cld
xor
pop
ins
jge
pop
cmp
test
mov
(bad)
mov
repnz
mov
lock
call
pop
aam
xlat
mov
cmp
(bad)
mov
pop
ss
mov
and
das
loopne
out
or
sbb
pop
(bad)
mov
ds
jno
retf
jg
aaa
pop
aaa
or
repnz
mov
mov
sub
cmps
mov
xchg
lods
(bad)
mov
mov
or
mov
or
mov
pop
aas
daa
scas
or
cli
fbstp
pushf
loop
fld
dec
(bad)
movs
mov
test
out
mov
fs
loop
mov
cwde
add
mul
mov
fs
push
mov
jns
movs
lods
(bad)
int
mov
loope
je
xlat
push
adc
retf
pop
or
or
repnz
push
lods
mov
kmovw
out
inc
pop
sub
mov
mov
(bad)
mov
push
retf
xor
fwait
xor
fld
jmp
rcl
fmul
jno
mov
das
das
inc
dec
inc
hlt
dec
ret
xchg
xor
xchg
loop
dec
adc
jmp
into
cmp
pop
pop
ret
pushf
mov
dec
dec
adc
sbb
mov
ins
push
xchg
fisttp
(bad)
mov
add
cmp
sti
xchg
jb
ins
movs
and
aaa
pop
popf
add
xchg
push
or
cmps
cmps
sbb
sub
cmp
out
fnsave
inc
popf
cld
jae
loopne
rcr
fdiv
stc
push
jmp
cmp
mov
dec
push
ds
(bad)
dec
mov
cmp
inc
cmp
xor
mov
call
jno
mov
xchg
mov
aam
mov
outs
lock
scas
sbb
scas
cmps
mov
cmps
jmp
mov
pop
cli
jmp
or
scas
mov
mov
pop
jg
int
fcmovu
cmp
(bad)
sbb
jne
retf
xor
xor
(bad)
jne
jmp
jae
inc
mov
jge
leave
(bad)
aas
clc
sar
or
and
ins
push
lods
aaa
and
das
jg
push
loop
gs
hlt
leave
mov
xchg
jo
repz
into
mov
pop
neg
enter
clc
sub
loope
repz
cmp
jmp
pop
in
pop
mov
add
popf
es
push
aad
ins
adc
jnp
add
dec
add
jno
ja
lods
aam
and
xchg
pop
daa
mov
aam
mov
xchg
jle
cs
loope
pop
out
mov
div
mov
xor
add
in
mov
sbb
dec
movs
adc
jne
scas
inc
xchg
ins
iret
inc
jnp
xchg
sahf
aas
into
dec
ins
in
sbb
jo
je
xchg
loop
add
pop
jg
pop
fnstenv
fs
pop
push
xchg
dec
mov
stc
and
cmp
cmp
sbb
xchg
pop
lahf
js
xchg
xor
test
outs
xchg
out
and
xchg
xor
jecxz
add
jle
mov
xor
dec
jmp
cmp
jp
fsubr
push
leave
cmp
pop
ret
ins
stc
pop
test
adc
iret
fimul
adc
add
daa
popa
retf
mov
aas
and
mov
loope
gs
aaa
push
xor
sub
xchg
(bad)
ja
lock
push
xor
ds
xchg
mov
fist
rcl
cli
xchg
sar
push
out
push
(bad)
jl
(bad)
fistp
(bad)
push
jbe
add
leave
cs
add
or
neg
scas
adc
mov
(bad)
cmc
cmps
iret
mov
push
retf
sbb
popa
mov
inc
mov
xchg
pop
pop
fs
push
in
lea
sbb
(bad)
inc
fs
stos
jns
adc
cwde
pushf
push
fs
xor
rcl
jecxz
jl
clc
cdq
ja
dec
stos
push
fdiv
add
retf
pop
lods
imul
sbb
mov
pop
adc
(bad)
xor
or
enter
mov
inc
cmps
adc
cs
fistp
cmp
mov
sub
jmp
shl
push
xor
movs
loopne
and
cwd
sbb
and
icebp
and
fs
pop
and
cmp
xor
mov
inc
sbb
lods
mov
sbb
(bad)
sbb
fldz
retf
out
imul
popa
add
aad
jecxz
xchg
clc
ins
fstp
mov
fcomp
sahf
cmp
sub
(bad)
cmc
or
jg
repz
mov
out
pop
ja
sti
aas
js
jne
jl
div
aad
mov
daa
pop
stc
inc
loopne
(bad)
retf
pop
cmps
lock
out
jmp
cmp
outs
xor
out
arpl
cmc
addr16
js
hlt
jmp
std
jg
aas
or
pop
dec
test
nop
push
aad
aad
mov
xor
xor
inc
arpl
or
sub
mov
(bad)
jne
pop
push
in
mov
xchg
pusha
add
pop
jecxz
cs
sbb
dec
popf
mov
out
mov
xchg
imul
aaa
lock
jmp
jnp
jp
call
xchg
js
jno
jmp
cmp
loope
inc
cdq
loope
mov
cmp
pop
mov
add
(bad)
jg
add
int
mov
(bad)
sbb
and
adc
or
fs
jge
jnp
aas
out
out
cmp
test
add
cmps
ja
fnstenv
add
or
icebp
in
cli
into
sbb
fistp
push
(bad)
adc
sub
xlat
pop
xchg
mov
inc
push
test
xor
fisttp
jl
push
pop
pop
rcl
add
(bad)
lock
gs
outs
inc
sbb
icebp
test
cli
jnp
pop
retf
loop
mov
pop
idiv
push
push
rol
not
rcr
outs
lods
out
call
mov
sub
xchg
or
jl
and
stc
in
xor
or
stc
daa
das
jb
fisubr
outs
punpckhwd
aas
popf
sub
cmp
sub
mov
aam
outs
sar
ret
pop
fs
pop
xchg
hlt
xchg
pop
cli
ret
(bad)
pop
cmp
hlt
lds
ror
sbb
jb
jne
frstor
jo
add
cld
ss
xchg
outs
jl
aad
and
les
outs
out
lods
xor
idiv
inc
ret
dec
loope
out
shr
fcmovu
(bad)
ss
jne
jbe
in
xchg
pop
mov
inc
push
hlt
jne
jl
or
cld
sub
retf
test
xchg
cmps
xor
xchg
dec
daa
jg
jnp
add
sbb
fmulp
xchg
mov
push
mov
fild
jecxz
(bad)
in
mov
push
mov
xchg
ins
push
jne
je
push
les
pushf
or
jns
lds
or
and
outs
pop
lock
repnz
frstor
sti
(bad)
in
aad
pop
mov
jecxz
es
jb
fsubr
and
inc
mov
push
push
popa
mov
jl
rcr
jle
mov
xchg
iret
addr16
push
mov
outs
icebp
(bad)
inc
fmul
pusha
pop
cdq
inc
and
jmp
(bad)
cs
sub
push
int3
inc
and
imul
mov
cs
jp
into
adc
mov
push
jg
xchg
addr16
jbe
inc
(bad)
jmp
lock
inc
mov
jnp
jbe
(bad)
(bad)
cli
retf
xchg
pop
push
repnz
cmp
add
cmp
imul
jmp
sti
fbld
sar
mov
fsub
jg
jecxz
sbb
sbb
push
ffreep
and
out
(bad)
stos
arpl
(bad)
lods
lods
in
lea
dec
push
inc
(bad)
ds
clc
outs
fdivr
jecxz
cmc
rol
das
sbb
push
vmovdqu
or
push
inc
(bad)
cld
mov
ret
push
std
fstp
dec
test
mov
retf
rcr
add
mov
xchg
div
jbe
jo
ja
cmp
das
push
and
js
(bad)
jle
shl
cdq
dec
xor
or
mov
mov
pusha
jno
adc
shl
xchg
stos
add
js
outs
jns
cmps
pop
loop
push
sbb
dec
and
xor
dec
adc
add
xor
mov
xchg
mov
neg
mov
mov
int
jnp
(bad)
int3
daa
sub
dec
adc
mov
push
xor
out
or
adc
xlat
adc
jb
mov
cmc
enter
xchg
loope
cmp
jl
sub
or
(bad)
mov
cli
scas
in
jb
sahf
mov
add
je
jne
pop
cs
rcr
mov
jo
les
outs
xor
lods
add
(bad)
pop
jns
addr16
push
out
loopne
xchg
jns
add
or
cmp
jo
xor
outs
cmc
push
dec
int
or
mov
inc
and
gs
push
daa
or
fdiv
aas
retf
mov
xchg
int3
pop
pop
mov
fidivr
(bad)
cmp
push
sbb
sub
jmp
ret
add
mov
jno
repnz
not
sub
mov
popa
fld
enter
aas
pop
pop
ds
sahf
loope
outs
cld
jle
add
aaa
popa
fldenv
adc
int
cmps
jle
into
xor
sti
push
cmps
add
jge
(bad)
fild
jle
fistp
pop
jb
mov
and
(bad)
mov
adc
(bad)
ficomp
dec
jbe
std
and
out
or
mov
push
push
int3
xlat
xchg
jge
out
dec
and
retf
adc
(bad)
push
pop
pop
jg
fadd
adc
pop
fld
or
mov
clc
mov
pop
push
inc
dec
fcom
dec
scas
fs
mov
loope
or
jl
sub
mov
mov
xchg
cli
sbb
lods
dec
xchg
cmp
mov
movs
mov
outs
xor
pop
mov
push
jno
xchg
xchg
jne
popa
pop
arpl
ins
mov
jae
and
and
xor
out
dec
pop
sbb
or
arpl
retf
in
imul
jp
mov
mov
stos
jmp
(bad)
jno
inc
retf
mov
ret
(bad)
pop
das
retf
or
addr16
(bad)
mov
lahf
sahf
int
push
out
shl
mov
add
jle
imul
outs
lock
jbe
es
cmp
(bad)
sbb
scas
iret
push
rol
push
jp
push
bnd
xor
inc
xchg
lahf
gs
mov
fld
pop
imul
push
ds
cmp
mov
sar
jnp
add
jnp
pop
xor
xlat
inc
repz
push
mov
xor
pop
rcl
lods
cwde
sar
ja
mov
aas
retf
cmp
pop
out
lock
pop
in
retf
scas
int3
cs
sub
adc
jo
scas
push
mov
jmp
bound
das
aas
shl
sbb
dec
dec
cmp
xlat
or
mov
repz
jecxz
sbb
jb
fidiv
pop
repz
in
mov
jle
test
dec
call
ret
or
cmp
loopne
mov
movs
and
fisubr
repz
jo
jecxz
int
imul
lods
inc
aas
sbb
mov
dec
pop
js
dec
or
mov
ret
sbb
pop
or
cmp
sti
pushf
and
loopne
dec
test
mov
cmp
das
cmp
imul
shl
into
cmp
cmp
push
sub
xchg
int3
fiadd
add
pop
idiv
outs
jmp
jmp
pushf
(bad)
iret
cmp
out
jmp
adc
pushf
(bad)
dec
mov
xor
popa
jnp
jmp
mov
stc
js
iret
std
fld
cmp
sbb
push
push
jne
pop
mov
jecxz
(bad)
dec
(bad)
(bad)
outs
arpl
or
(bad)
mov
repnz
cmps
loop
or
sahf
mov
pop
iret
fiadd
cmps
adc
inc
retf
and
sub
outs
sar
popa
or
dec
add
js
shl
not
dec
es
out
xchg
mov
in
inc
outs
loopne
push
fdiv
in
scas
xor
push
je
lock
cli
mov
retf
and
call
xor
xor
inc
cdq
push
js
mov
ror
dec
adc
loope
add
rcl
icebp
bound
pushf
iret
and
div
pop
mov
into
push
rcr
cmp
jnp
xlat
aad
mov
ja
lods
jle
aaa
(bad)
scas
shl
not
inc
imul
cmc
lea
rol
jne
jmp
xor
fadd
xor
jne
jecxz
nop
mov
xor
mov
arpl
(bad)
sti
sbb
retf
jne
into
push
inc
sbb
pop
mov
jmp
pop
mov
mov
push
xchg
outs
mov
out
jecxz
lahf
mov
jmp
fdiv
and
mov
jb
dec
mov
gs
xchg
clc
dec
adc
aas
div
mov
(bad)
(bad)
cmp
xchg
pop
(bad)
(bad)
cli
or
out
xor
mov
test
push
retf
push
(bad)
std
pop
repnz
mov
lahf
mov
iret
fild
aas
jp
cwde
sub
jge
cmps
gs
cli
xor
lock
iret
inc
sbb
dec
scas
xor
ror
imul
fdivr
imul
icebp
div
imul
mov
cmp
sar
(bad)
out
sti
xchg
push
mov
adc
push
xchg
je
inc
sbb
adc
daa
loope
xchg
pop
outs
out
pmullw
inc
pop
lock
je
xor
sub
pop
pop
add
repnz
daa
popa
mov
mov
sub
xchg
mov
icebp
xchg
mov
mov
arpl
das
sub
add
int3
je
xchg
push
arpl
sbb
xor
sbb
jg
test
jnp
push
shl
inc
shr
sbb
dec
fisub
mov
inc
cmp
jecxz
scas
cmp
jb
ds
inc
loopne
popf
mov
or
pop
ficomp
dec
pop
cld
or
sub
mov
xchg
fnstcw
xchg
jl
je
sub
ins
pop
xor
inc
sbb
jo
test
jnp
lods
mov
jmp
pop
jle
js
stos
mov
fstp
mov
shr
and
pop
pop
jecxz
pop
jb
addr16
cmp
jae
ret
xor
push
inc
xchg
ins
cwde
iret
not
not
daa
lock
imul
cmps
dec
lahf
jl
lea
mov
jnp
xchg
cmc
sbb
je
or
aas
jg
(bad)
(bad)
push
xor
out
push
out
and
fisub
dec
inc
shr
cmp
fisubr
jg
aaa
test
retf
pop
sti
cmp
cs
cmp
jp
sub
mov
out
in
iret
mov
mov
fs
or
pop
jne
xchg
rol
loope
jno
adc
jl
int3
rcr
adc
sub
in
xchg
jae
inc
and
fimul
cmp
js
mov
xor
pushf
mov
(bad)
(bad)
pop
cmp
neg
xor
xchg
add
lds
jl
sub
jle
scas
cmp
xchg
fldcw
mov
retf
xchg
mov
lds
sub
xor
aaa
lods
ret
mov
dec
dec
scas
sub
cmps
push
push
jmp
test
jb
scas
adc
mov
pop
xor
and
mov
mov
sbb
add
mov
popf
xor
mov
sti
mov
repnz
das
jmp
data16
push
xor
push
cmp
sbb
cld
mov
loopne
mov
cmc
(bad)
fld
or
xor
out
scas
mov
sti
mov
dec
(bad)
in
repz
outs
(bad)
mov
add
push
leave
mov
inc
pop
push
sbb
mov
mov
shr
jno
xlat
daa
iret
(bad)
fild
mov
cmc
out
cld
into
out
xor
call
sti
add
or
pop
in
mov
mov
push
out
neg
scas
hlt
adc
dec
stos
and
test
jecxz
outs
adc
fsub
push
cwde
and
inc
add
icebp
sbb
or
gs
pop
push
lds
and
mov
jp
popf
mov
dec
das
cld
jno
and
xor
call
add
add
mov
mov
cld
ja
movs
adc
test
adc
rcr
addr16
or
sti
adc
xlat
cmp
lea
mov
adc
push
inc
jbe
arpl
adc
gs
cli
push
jbe
push
push
test
(bad)
jmp
test
sbb
pop
loope
scas
mov
psraw
arpl
jmp
dec
mov
pop
mov
sbb
push
pop
loopne
pop
clc
in
out
mov
adc
out
jl
daa
mov
pop
jl
popf
test
jmp
es
jl
inc
dec
mov
in
mov
sbb
sub
mov
fistp
fld
fnstenv
mov
(bad)
movs
jg
cmps
or
pop
jno
into
sub
ja
lods
mov
xor
jle
fmul
inc
dec
dec
dec
xor
xchg
mov
mov
daa
mov
mov
jmp
cmp
std
jmp
fwait
mov
(bad)
in
cld
or
dec
pop
je
rcl
sar
mov
cmps
in
lds
cld
mov
(bad)
cmc
jmp
add
and
outs
outs
(bad)
xlat
jge
mov
out
out
and
(bad)
mov
leave
test
sar
mov
mov
or
ret
call
push
and
(bad)
mov
adc
xchg
and
addr16
pop
jecxz
test
xor
test
xor
ins
push
loop
pop
fs
(bad)
cmps
mov
xor
sbb
adc
mov
sar
imul
ds
pop
jmp
adc
pop
test
(bad)
(bad)
jmp
je
push
jmp
and
pop
mov
mov
mov
mov
jge
pushf
and
scas
popa
cmp
arpl
push
pop
pop
(bad)
and
mov
adc
jae
xor
pop
arpl
cmp
repnz
hlt
add
ins
aad
outs
inc
(bad)
pop
cmps
pusha
fucomp
add
or
jmp
push
shl
outs
jne
xor
xchg
xchg
scas
dec
and
repnz
gs
scas
mov
mov
lods
cli
inc
push
mov
std
lahf
ds
jnp
in
pop
pop
sbb
inc
lahf
xlat
in
adc
loopne
in
in
iret
jge
jbe
sar
int
out
sbb
test
xchg
imul
push
aam
not
cmp
js
icebp
(bad)
pop
pop
clc
loopne
psadbw
jp
jo
aaa
fs
xchg
jns
mov
push
iret
lods
mov
call
scas
and
sar
call
push
dec
jmp
mov
movs
cli
push
mov
or
(bad)
jmp
cmc
mov
div
fbld
in
call
out
dec
jae
xchg
int3
push
jg
and
sbb
xor
push
inc
icebp
cmp
sbb
xor
cmps
pop
add
pop
int
fcmovbe
adc
mov
out
cmc
dec
push
sub
mov
bound
inc
xor
mov
ins
jecxz
push
clc
xchg
test
stc
jle
nop
lea
mov
ja
pop
daa
sub
cmps
jmp
pop
add
movs
pop
pop
pop
jns
sbb
inc
or
ret
mov
fs
in
xchg
mov
xor
(bad)
jmp
mov
and
sbb
sar
adc
in
mov
mov
icebp
ds
fsub
xchg
pop
(bad)
hlt
sahf
xchg
xchg
and
add
enter
stos
imul
push
push
aaa
std
je
xchg
iret
jmp
fld
xchg
sbb
call
add
jne
sti
mov
lock
xchg
out
clc
data16
cmp
fldcw
or
jle
add
daa
leave
add
jb
setae
cdq
adc
call
ror
mov
mul
jecxz
(bad)
pop
mov
test
mov
sub
pop
inc
dec
das
std
sbb
push
out
mov
dec
popa
mov
call
pop
das
stc
(bad)
push
dec
inc
sub
mov
out
ja
fldenv
rcl
pop
mov
fiadd
out
lock
mov
xchg
xchg
pop
inc
ins
sbb
dec
pop
jo
ret
call
pusha
cli
adc
stos
push
adc
aad
daa
push
leave
mov
lea
call
out
add
and
push
mov
pop
repnz
adc
xchg
or
dec
sbb
in
dec
sbb
push
lock
cmp
cmp
loop
addr16
(bad)
adc
out
jecxz
xlat
test
mov
jge
jle
mov
mov
enter
js
mov
popf
jge
arpl
inc
jne
aas
jg
inc
or
sbb
pop
dec
ret
jp
ret
lods
out
ins
data16
xchg
mov
arpl
jge
addr16
jl
lock
js
push
dec
xadd
xor
add
dec
mov
cmc
(bad)
neg
jp
jbe
cmc
sti
jns
fild
std
lock
in
leave
jecxz
mov
daa
iret
push
or
cs
mov
aad
dec
retf
fild
add
add
inc
push
js
pop
cmp
mov
cmp
pop
loop
shr
mov
inc
gs
lahf
stos
addr16
fisub
pop
clc
enter
(bad)
fmulp
out
jle
mov
sar
jb
in
xor
cli
add
std
dec
inc
add
push
(bad)
xchg
or
out
inc
call
stos
inc
aas
dec
js
add
pop
adc
inc
dec
cli
cmp
hlt
mov
popf
mov
in
lahf
inc
js
or
ret
sahf
xchg
popa
sbb
(bad)
adc
loopne
sti
or
mov
add
or
mov
retf
sbb
ins
jle
stc
ins
adc
(bad)
xchg
jbe
push
shl
in
adc
adc
cmp
cdq
or
dec
ror
lods
cwde
leave
add
dec
das
sbb
push
pop
loope
in
dec
cmp
sub
or
dec
idiv
clc
jecxz
mov
sbb
out
cs
or
call
fst
ret
pop
mov
cmps
mov
stos
imul
xor
fwait
ret
mov
arpl
retf
inc
cmp
test
push
cmp
jp
icebp
mov
das
and
repnz
icebp
sbb
sub
fsubr
stos
(bad)
sbb
test
jo
jg
sbb
sahf
std
stos
or
xchg
xlat
outs
out
fbld
idiv
ja
mov
mov
jl
xchg
cli
iret
lock
cli
jno
je
dec
aam
(bad)
sbb
repnz
les
inc
push
xchg
cmp
cmp
adc
mov
pop
xchg
daa
cli
sub
push
sar
js
fiadd
icebp
lahf
cmp
jb
std
pop
(bad)
lock
jg
mov
xor
retf
aaa
xor
sbb
fisubr
xor
daa
rcl
(bad)
dec
out
mov
repz
jl
cli
sti
xchg
add
xchg
mov
test
js
fnstcw
mov
push
mov
sti
or
retf
dec
cmp
imul
std
pop
ss
ret
push
mov
inc
test
cmc
dec
push
jecxz
cmp
test
cld
mov
and
push
clc
loope
out
dec
cmp
xchg
or
fadd
ret
jmp
int
push
popa
xchg
fwait
sahf
inc
or
rcr
mov
jae
frndint
les
jb
cwde
adc
mov
inc
adc
jecxz
(bad)
xor
dec
sbb
mov
mov
in
mov
jecxz
mov
xchg
pop
daa
test
addr16
cmp
cmps
xlat
nop
mov
mov
movs
gs
dec
sbb
daa
(bad)
adc
pop
xchg
mov
fnstcw
xor
mov
sar
xlat
lock
jecxz
out
js
pusha
call
adc
sbb
mov
shl
jns
inc
and
fnstsw
jmp
jecxz
ja
shr
pop
jg
repz
das
repz
cld
repnz
jl
(bad)
cwde
push
jg
push
adc
xchg
add
cld
(bad)
data16
mov
xchg
cmp
cmc
sar
xchg
dec
and
sub
mov
popf
arpl
loopne
ret
(bad)
(bad)
pop
iret
jle
jecxz
pop
jo
adc
xchg
jmp
imul
push
loopne
sbb
push
(bad)
ins
mov
pop
jns
sti
cmp
loop
mov
sbb
mov
jns
xchg
mov
popa
push
into
dec
jmp
shr
xchg
emms
ja
out
ins
outs
aas
fdivr
cmp
add
cmps
mov
or
adc
stos
icebp
push
and
cdq
out
ret
add
call
pop
push
inc
adc
mov
out
pusha
sub
mov
mov
comiss
aad
aad
enter
sub
clc
repnz
xor
je
sub
clc
repz
adc
jae
sbb
dec
and
mov
cmps
retf
cmps
gs
sbb
fnsave
cmp
loop
xor
int3
pop
fucomip
pop
pop
mov
pop
inc
dec
setns
test
xchg
push
mov
stc
jbe
xor
pusha
sbb
jne
xor
loopne
popa
cmp
pusha
sub
test
push
sub
sub
retf
and
test
pop
div
jns
gs
xchg
mov
cmp
xlat
jns
jge
(bad)
fisubr
arpl
(bad)
jmp
mov
sub
mov
inc
mov
mov
into
(bad)
sub
sbb
rcl
lea
sub
pop
pop
rol
repnz
push
pop
xchg
xchg
jns
mov
mov
ds
jb
das
repz
mov
loopne
outs
add
out
mov
jb
jmp
mov
gs
icebp
or
test
aad
sbb
mov
sbb
mov
outs
mov
push
sbb
in
cmps
sub
mov
pavgw
ins
call
sub
hlt
retf
xchg
stos
fsubr
or
xchg
popa
sub
add
add
or
fs
call
push
adc
sbb
add
push
adc
xchg
ja
dec
popf
add
not
cld
ret
shl
add
pop
rcl
pop
pop
push
inc
lods
retf
cmp
iret
(bad)
jno
cmps
scas
jl
mov
fld1
rcr
js
jp
xor
out
lock
push
dec
stos
lahf
idiv
inc
stos
dec
popf
fs
ss
loop
jge
or
out
icebp
xor
sbb
cmp
jns
xor
mov
xchg
out
sbb
enter
mov
std
out
cmp
ja
push
and
int3
xchg
mov
pop
jmp
shr
pop
mov
scas
lock
fstp
jecxz
(bad)
popw
jg
push
idiv
repz
jg
adc
lods
clc
jecxz
xor
js
aaa
(bad)
push
lock
mov
jecxz
out
xchg
loope
dec
push
sbb
cdq
iret
aam
inc
test
or
movs
mov
(bad)
imul
fld
inc
ss
js
hlt
dec
lock
mov
xchg
jb
xadd
hlt
xchg
jge
dec
inc
cmc
stc
adc
adc
mov
rcr
add
rol
pop
(bad)
rcr
mov
(bad)
cmp
int3
jnp
and
jg
clc
mov
cld
adc
jmp
xchg
pusha
mov
les
xor
retf
leave
leave
repz
xor
leave
pop
pop
mul
pop
loopne
push
dec
mov
idiv
aaa
aad
cwde
jmp
or
cdq
pop
pop
mov
bound
ja
(bad)
mov
enter
sahf
mov
add
push
adc
or
push
push
sub
in
pop
inc
sbb
pop
push
js
or
mov
fadd
pop
fs
sub
or
or
lods
cmp
in
jle
outs
in
push
fst
stos
pushf
sahf
adc
rol
xchg
mov
jmp
sub
addr16
ins
pop
call
call
popa
das
rol
jo
inc
cdq
aaa
sbb
cmp
sbb
(bad)
(bad)
jo
scas
xor
sub
push
stc
adc
mov
and
or
jb
mov
cld
lods
xor
out
add
adc
jmp
xchg
cmps
fadd
sbb
shl
fistp
mov
cmp
dec
neg
and
repz
cmps
dec
retf
(bad)
fisubr
cwde
dec
pop
dec
iret
hlt
jo
and
sbb
xor
dec
popf
push
sub
cs
iret
mov
cdq
out
sbb
mov
(bad)
repnz
adc
ja
pop
adc
fs
add
adc
retf
cmp
sbb
int
in
mov
std
or
je
jl
pop
dec
sbb
cld
jge
sbb
mov
sahf
xchg
movzx
mov
sbb
shl
cmp
call
(bad)
jnp
es
sbb
jle
mov
jns
dec
dec
aaa
dec
fiadd
dec
movs
mov
adc
dec
dec
pop
scas
or
sbb
cmp
inc
icebp
test
push
shl
dec
test
ret
jmp
inc
rol
xchg
xchg
hlt
or
push
mul
xchg
mov
add
jo
loope
push
or
imul
sbb
enter
push
sub
push
pop
jnp
dec
test
(bad)
sti
pop
pop
and
retf
cmp
sub
sahf
xchg
sub
icebp
pushf
iret
iret
movs
sbb
loope
or
add
loopne
jl
add
mov
retf
sbb
xchg
pop
out
retf
xor
push
test
icebp
jb
pop
push
popf
mov
pop
scas
clc
mov
or
pop
push
or
jecxz
cmp
imul
pop
addr16
mov
adc
es
shr
dec
mov
jmp
xchg
cdq
cli
xlat
fidivr
sbb
popf
pop
data16
fsqrt
daa
dec
jmp
dec
and
daa
inc
fstp
cli
mov
loope
lods
or
loop
pop
inc
fdivr
pop
sub
mov
addr16
cmp
mov
pop
jle
(bad)
popa
cmp
xor
adc
xchg
and
adc
mov
fild
pushf
cmp
mov
lods
clc
leave
rol
mov
loopne
inc
mov
cmps
ds
mov
jbe
xor
pop
mov
ins
nop
(bad)
repz
out
cli
sahf
add
stos
imul
push
push
cmp
pop
ret
clc
aas
(bad)
dec
cmp
mov
jmp
pop
sbb
(bad)
ss
dec
sbb
stos
sub
dec
ror
mov
pop
sub
push
adc
cs
pusha
outs
add
or
popf
or
int
out
add
mov
(bad)
out
inc
cmp
xor
xor
ret
movq
mov
nop
mov
jg
sub
xchg
das
(bad)
and
jmp
out
and
movs
adc
mov
add
mov
lock
pop
data16
loope
xchg
out
sbb
nop
pop
mov
and
cli
ror
xchg
and
cmp
out
jge
ret
dec
mov
and
aam
jb
jno
(bad)
scas
ret
jmp
adc
and
movs
aad
dec
stos
mov
xor
add
fnstsw
jbe
jne
inc
idiv
push
jnp
fnstsw
jno
pop
js
loop
arpl
cmc
lea
dec
or
nop
retf
cmps
xlat
cwde
icebp
pop
adc
xor
movs
pusha
jbe
movs
xlat
and
jp
call
adc
jecxz
jl
(bad)
sbb
out
xchg
mov
arpl
sbb
and
jge
ret
sahf
(bad)
movs
jmp
aam
loop
ins
fdivr
sbb
sbb
hlt
clc
clc
fist
sub
dec
adc
sub
hlt
lahf
push
push
or
shl
fisubr
pop
(bad)
fcomp
xchg
movs
pop
(bad)
stos
repnz
repz
mov
int3
and
fstp
push
add
jne
xchg
jg
imul
lods
inc
(bad)
in
fcomp
push
cwde
push
pop
sub
add
ror
or
or
add
(bad)
cld
adc
adc
mov
pop
sahf
cwde
mov
mov
push
xchg
sbb
xchg
mov
adc
bnd
mov
jecxz
nop
mov
hlt
mov
cs
ds
fdivr
sub
push
fbstp
(bad)
in
in
shr
jge
out
add
es
xor
scas
cs
cmc
adc
adc
push
aaa
jmp
mov
test
jmp
sbb
mul
xor
jns
retf
sahf
pop
leave
push
scas
jne
sub
mov
fucomip
ja
mov
out
ins
cdq
push
dec
xor
jl
dec
and
xchg
jp
dec
cmp
jl
lods
fnstcw
fnstsw
rep
sti
jmp
aas
loope
mov
(bad)
mov
jle
and
in
ds
sub
mov
cs
rcl
jge
pcmpgtd
dec
fs
les
outs
pop
dec
jne
scas
inc
pop
repnz
sbb
leave
dec
mov
(bad)
cld
adc
mov
fnsave
dec
mov
adc
ret
std
(bad)
mov
dec
fldenv
or
movs
mov
jo
jmp
scas
and
mov
outs
inc
movs
jno
sbb
in
hlt
imul
jp
stos
mov
and
fs
addr16
fdivr
repnz
pop
out
cmp
in
jl
lea
arpl
jnp
in
push
in
sbb
dec
mov
mov
add
adc
add
(bad)
push
inc
dec
movs
jnp
pop
add
add
imul
popf
(bad)
or
pop
mov
nop
mov
cdq
pop
or
push
ins
icebp
pop
(bad)
or
pop
add
adc
retf
out
sub
fisubr
dec
adc
push
aaa
popf
inc
mov
not
inc
lds
dec
lods
xor
js
push
leave
jne
das
pop
or
stc
(bad)
add
mov
add
jmp
push
cs
mov
mov
mov
pop
pop
out
pop
daa
arpl
fild
test
std
lds
pusha
js
xchg
push
ja
xor
jl
add
mov
mov
out
fwait
inc
ja
xor
inc
adc
and
je
aaa
aaa
sahf
xor
mov
dec
push
jl
popa
or
pop
jle
icebp
fidiv
add
jg
(bad)
pop
push
in
dec
mov
mov
dec
imul
jg
mov
jnp
daa
(bad)
jae
lahf
idiv
es
gs
sbb
mov
out
or
mov
pop
jl
mov
test
test
ja
xchg
add
stos
jae
cli
in
fldenv
cmp
or
not
xlat
xor
add
xchg
mov
lahf
test
jmp
movs
js
adc
movs
fld
rol
fld
(bad)
(bad)
dec
mov
pop
ja
inc
out
adc
jo
retf
ins
movs
push
mov
ss
sub
push
ins
add
enter
sbb
cdq
hlt
or
lock
xchg
shr
sub
xor
add
and
fidiv
in
and
add
or
dec
enter
and
sbb
xlat
pop
std
jbe
mov
retf
retf
shl
inc
out
aaa
mov
pop
pop
add
inc
pop
lea
mov
sahf
pushf
arpl
add
mov
fwait
mov
fsubr
pop
pop
push
aaa
mov
aad
sahf
jmp
or
dec
adc
jbe
adc
mov
imul
add
mov
fadd
das
mov
popa
iret
retf
jge
repnz
jmp
xor
repnz
sbb
outs
ja
jp
fcmovb
adc
daa
sbb
mov
jnp
jecxz
retf
scas
sti
cmp
leave
(bad)
mov
pop
aas
call
sbb
xlat
fdivr
call
lock
and
(bad)
call
retf
leave
cmp
inc
iret
out
iret
leave
retf
xchg
jmp
jle
rol
xchg
cdq
outs
shr
leave
cmp
imul
jo
loope
(bad)
mov
scas
repz
in
or
ret
jecxz
test
gs
shr
or
aas
std
loop
jb
es
das
fdiv
jg
lahf
out
xchg
xor
(bad)
dec
jecxz
iret
pop
xchg
(bad)
jo
sbb
mov
sbb
jbe
std
clc
cdq
or
outs
sahf
push
sbb
jns
jb
in
cwde
xor
popa
lods
sbb
inc
push
sahf
das
stos
inc
xor
sub
add
push
scas
dec
mov
mov
ret
(bad)
jnp
or
inc
xchg
pop
mov
sub
add
cmp
fidivr
adc
jecxz
bound
and
call
and
sahf
fisub
mov
add
fcomp
fs
mov
cdq
ins
dec
rdmsr
dec
psubd
dec
and
jmp
fmul
out
loopne
lea
pop
xchg
stos
ficom
sahf
int3
mov
ret
ret
ret
ffree
arpl
pop
push
int
sbb
iret
mov
mov
mov
sub
and
(bad)
nop
pusha
es
and
xchg
add
adc
xchg
data16
inc
cld
mov
xor
sar
dec
push
xchg
cmp
jmp
loopne
push
or
aam
pop
or
add
scas
sti
push
sub
(bad)
out
jmp
pop
das
mov
aad
push
add
inc
loope
mov
ret
cmp
xchg
cmc
sti
sahf
imul
and
popf
ins
cdq
jns
mov
jae
sub
mov
int
cmp
mul
loop
shr
aad
adc
or
fisub
popa
sub
popa
addr16
test
sti
in
sahf
daa
adc
mov
cwde
mov
inc
ds
cli
xchg
fidivr
mov
and
stos
mov
ret
jecxz
cmp
xchg
mov
js
or
out
or
mov
and
xchg
pop
loopne
popf
inc
sub
mov
pop
dec
mov
xchg
icebp
pop
xchg
jne
dec
push
cmp
mov
clc
cmp
cld
xor
pop
mul
cli
cmp
dec
test
jge
fwait
dec
fs
iret
xchg
or
cld
xchg
lds
jmp
push
rcl
mov
sub
pop
and
movs
sub
push
lahf
adc
jmp
pop
cmp
xchg
push
bound
add
or
mov
jae
mov
sub
das
in
aam
and
dec
addr16
fstp
jg
pop
pop
or
adc
fxch
adc
push
jo
xor
outs
fcom
ror
push
shl
cwde
idiv
mov
sbb
dec
add
dec
sbb
loop
mov
rol
aad
push
or
fldcw
jl
push
ja
pop
push
mov
xchg
test
mov
stos
icebp
push
(bad)
das
(bad)
or
mov
inc
lahf
rcr
push
mov
or
jge
sti
jmp
(bad)
mov
add
push
retf
(bad)
ret
int3
jne
sbb
sbb
fsub
iret
push
jnp
pop
jl
xchg
fld
test
leave
iret
(bad)
das
sbb
ja
dec
lds
cmp
dec
jno
iret
jne
cld
ja
pop
addr16
loopne
popf
cmp
cwde
jmp
aam
ins
sbb
cmp
shl
mov
cmp
jo
pushf
xor
xor
retf
retf
mov
in
ins
sub
outs
or
(bad)
cmc
pop
pop
leave
xor
ss
push
fs
and
lods
mov
outs
outs
out
pop
out
out
pop
pop
daa
iret
adc
scas
and
jmp
sub
xor
daa
mov
sub
sub
jmp
in
cs
faddp
mov
sbb
(bad)
leave
pusha
sbb
popa
js
push
dec
inc
mov
inc
push
xchg
pusha
and
ja
stos
dec
lods
cld
push
dec
aas
and
mov
dec
pop
jle
inc
push
les
imul
cmp
xchg
je
repz
sbb
shl
(bad)
add
ins
jmp
xor
jecxz
pop
mov
imul
and
jp
(bad)
js
(bad)
or
xchg
mov
movs
hlt
mov
hlt
pop
out
iret
imul
jno
cmp
add
daa
mov
xchg
xor
jae
sub
ret
push
push
inc
movs
push
loope
clc
xor
push
retf
add
add
icebp
aad
neg
mov
mov
stc
fldenv
mov
mov
scas
leave
xchg
ins
sub
add
add
push
rcl
mov
push
sbb
mov
fbstp
scas
push
ins
pop
xchg
out
popa
setne
std
jle
add
clc
ins
dec
dec
repnz
into
sub
cwde
out
push
xchg
mov
imul
push
xchg
push
out
sar
sahf
push
cmp
inc
fwait
ja
fbld
sub
cs
adc
sbb
hlt
xchg
es
and
fild
leave
pop
push
call
add
sahf
ds
mov
sar
loope
sub
xchg
test
sahf
mov
jmp
gs
loopne
jo
cs
push
sbb
fdivp
rol
adc
retf
push
and
rol
mov
ret
dec
lds
arpl
pop
xchg
dec
ror
add
fdivr
dec
push
(bad)
mov
jno
hlt
push
add
hlt
stos
cwde
retf
rol
pop
xchg
(bad)
mov
and
inc
push
cmc
dec
mov
push
addr16
cmps
lods
jo
push
call
or
adc
loope
push
in
and
pop
jns
sub
(bad)
int3
dec
inc
repnz
out
mov
push
inc
xchg
and
push
test
or
sub
test
sub
sub
(bad)
fnstenv
shl
imul
sbb
arpl
mov
js
sbb
hlt
pop
jne
cmc
inc
mov
xchg
mov
mov
(bad)
aaa
adc
test
mov
mov
idiv
das
xor
int3
lock
push
xor
out
rcl
push
out
xor
jg
cmc
sti
sbb
bound
jle
leave
arpl
mov
pop
shl
pop
addr16
in
fld
and
mov
in
punpcklbw
scas
out
fldln2
daa
dec
sahf
mov
out
scas
or
jnp
test
or
jg
push
jg
sti
(bad)
fs
sub
fstp
pusha
inc
js
or
jl
add
daa
mov
aaa
mov
xlat
shl
xor
sbb
sbb
ss
cdq
sbb
int
imul
fdivr
add
out
sbb
mov
adc
pop
or
mov
cwde
daa
jg
or
push
sbb
mov
and
jmp
les
inc
and
dec
(bad)
loopne
mov
or
mov
in
sbb
sbb
inc
mov
pop
ins
adc
pop
pop
leave
retf
out
xchg
sub
mov
shl
adc
add
mov
xor
adc
or
jno
mov
push
xor
shl
shl
sbb
pop
xor
dec
les
popa
loop
lock
or
push
or
push
js
inc
adc
sahf
pop
cmp
and
xor
xor
sbb
dec
pop
out
or
push
lods
xor
loopne
and
das
mov
inc
bound
mov
mov
repnz
loope
not
lahf
sar
dec
adc
icebp
in
xor
mov
push
loopne
inc
popa
dec
pop
aaa
sti
in
ins
outs
mov
xchg
pop
js
mov
xor
and
hlt
cmps
mov
lock
jle
cli
stos
or
mov
sub
clc
cmp
sub
add
add
or
pop
pop
data16
jnp
cli
mov
adc
shl
loopne
sub
fld
mov
call
cmp
fist
sub
lock
popa
ss
xor
and
outs
sub
sbb
sub
(bad)
shr
xchg
popa
add
and
popa
clc
inc
xlat
(bad)
out
call
xchg
pop
and
dec
jecxz
jne
adc
repz
mov
mov
mul
jmp
dec
out
sar
bound
add
and
dec
out
adc
xor
push
cmp
inc
inc
cmp
mov
rcl
sbb
(bad)
add
jno
cmp
mov
cmps
stc
push
int3
movs
not
or
fdiv
movs
xor
repz
mov
xchg
push
pop
add
test
mov
add
lock
inc
jl
push
sub
repz
shr
aad
scas
mov
repnz
das
mov
mov
push
(bad)
mov
adc
ret
xchg
push
in
or
stos
mov
xlat
adc
icebp
pushf
lea
movs
push
es
pop
(bad)
cmp
pusha
aaa
inc
pop
xor
cmp
dec
(bad)
mov
add
jp
stos
inc
and
mov
xor
out
daa
pop
jno
ss
shl
rcl
pop
push
rcr
sahf
jge
cli
scas
(bad)
cli
jnp
sbb
push
dec
push
cmp
(bad)
or
add
int3
pop
mov
jmp
mov
(bad)
repz
ins
neg
jnp
stc
shl
call
pop
fs
(bad)
mov
push
ins
scas
pop
jl
pop
(bad)
sbb
or
std
cmps
scas
sahf
xchg
fst
or
or
ret
in
inc
fwait
sub
aam
bnd
lahf
ins
hlt
mov
cmp
sbb
pushf
pop
addr16
add
cmps
sub
scas
int
mov
clc
fild
jns
(bad)
imul
push
dec
inc
xor
repz
ins
sbb
fdiv
loopne
cli
mov
mov
pop
inc
pop
push
pop
pop
fsubr
xchg
push
pop
cmps
imul
push
or
scas
xchg
xchg
nop
daa
cmp
push
mov
rcl
xor
and
les
lock
ds
xchg
into
hlt
adc
mov
or
mov
jo
addr16
mov
lahf
jo
mov
add
rol
das
sub
mov
pop
lock
pop
mov
lods
mov
arpl
stos
jo
sub
(bad)
iret
jbe
and
nop
(bad)
fnsave
lahf
retf
sbb
xchg
cmp
push
ss
sub
hlt
mov
arpl
loop
adc
cld
sub
mov
and
adc
add
mov
ins
fwait
cld
mov
fistp
pop
or
call
test
xchg
push
ror
sub
stc
jp
mov
mov
retf
jbe
push
jmp
jg
call
shl
pop
ja
fild
xor
dec
cld
cmp
jmp
xor
and
ror
out
cdq
cmp
aas
(bad)
loopne
adc
pop
inc
sub
xor
pop
test
call
cmp
sbb
add
addr16
jae
or
iret
test
or
ins
push
arpl
mov
adc
jae
mov
fs
mov
jecxz
lahf
inc
loope
ds
out
push
dec
outs
lock
ja
pop
icebp
ror
inc
loop
xchg
mov
(bad)
adc
xor
rol
mov
adc
mov
mov
push
mov
fstp
dec
test
xchg
and
cld
mov
adc
cmp
push
mov
inc
pusha
repz
out
shl
into
addr16
xchg
adc
movs
xor
adc
aam
push
ret
sub
ret
pop
sub
lahf
in
ins
sub
retf
cmp
lock
xchg
int
mov
fwait
cs
xor
mov
add
push
and
or
sar
mov
pop
add
cmp
push
call
and
jmp
sub
lods
xor
pop
loope
cmc
aas
je
sub
or
xor
jg
cmc
dec
or
inc
xor
mov
psubb
sti
cld
das
pop
push
push
add
jg
jmp
test
pop
popf
push
add
mov
sahf
bnd
scas
add
jge
enter
lock
fs
or
inc
int
rcl
pop
mov
retf
out
retf
fwait
mov
cmc
lahf
cmp
clc
and
mov
cmp
das
shr
inc
stc
jo
es
stc
test
push
inc
mov
in
mov
bound
dec
mov
mov
fbstp
xor
clc
mov
inc
js
jne
call
data16
(bad)
push
xchg
fwait
pop
lds
stc
lock
(bad)
fist
int3
add
dec
pop
pop
push
push
jno
and
fldcw
aaa
sub
je
xor
cdq
cmp
das
add
add
cld
pushf
aas
mov
out
add
fadd
jp
scas
pusha
dec
ret
jae
push
add
sub
mov
pop
mov
add
stos
sub
test
retf
or
sub
push
push
add
and
dec
inc
inc
push
call
pop
ret
xor
jg
xchg
lock
test
dec
ja
adc
sbb
pop
pop
jmp
ret
mov
popa
repz
repnz
mov
pop
push
loopne
out
pop
add
fs
ret
inc
mov
mov
stos
and
dec
xor
hlt
ficom
fiadd
repnz
add
fst
mov
std
pushf
aaa
std
jno
neg
movs
mov
les
cmp
mov
fcom
jle
jnp
loopne
pop
add
cli
lods
aas
jmp
pushf
mov
xor
cli
pusha
lea
das
and
js
ins
adc
bound
aad
jbe
ds
adc
dec
stc
sub
jae
lods
js
inc
lods
sub
retf
(bad)
adc
xor
push
loopne
pop
cdq
neg
fbld
sub
into
sti
dec
repnz
mov
xchg
jle
out
clc
xchg
mov
mov
and
pop
jns
cmp
push
jno
pop
cmp
and
adc
mov
cmc
mov
add
mov
lods
fstp
test
aam
or
inc
jle
(bad)
loopne
mov
ja
pop
sbb
or
mov
sahf
addr16
push
pop
add
sub
sbb
call
mov
push
js
mov
xchg
inc
mov
sub
add
add
dec
pop
retf
(bad)
cmp
mov
adc
jle
hlt
dec
xlat
ja
shl
jns
sbb
mov
ds
popa
fadd
rol
mov
dec
push
xchg
inc
cmp
sar
push
inc
arpl
adc
aam
xlat
cmp
push
pop
dec
call
push
push
ins
jmp
mov
jge
adc
retf
mov
call
dec
mov
ret
ret
or
movs
cmps
lock
sub
mov
aas
jecxz
pop
pushf
xchg
(bad)
stos
jle
jecxz
jno
test
cdq
push
sub
jecxz
adc
or
jl
cld
scas
shl
out
jo
scas
rol
(bad)
rcl
frstor
pop
scas
adc
jae
pop
xchg
cmp
outs
sub
scas
pop
add
mov
jmp
stc
mov
mov
jne
(bad)
sbb
(bad)
cdq
jge
add
lock
cdq
add
mov
mov
pop
xsaves
nop
inc
sub
and
jae
(bad)
sub
outs
push
loope
std
js
sahf
in
div
(bad)
sub
retf
ja
es
jne
call
jecxz
iret
stc
call
(bad)
xor
jmp
not
dec
int3
add
nop
test
in
scas
shr
add
sbb
xchg
push
imul
or
sub
mov
and
jae
sti
mov
xor
test
ds
lods
sbb
push
mov
(bad)
jno
push
or
icebp
lods
xchg
clc
or
enter
jmp
je
add
and
sahf
cli
cvttps2pi
aaa
xchg
adc
leave
movs
ins
jle
or
adc
sub
dec
out
mov
pop
ins
aaa
mov
ret
sbb
mov
mov
sub
add
shr
or
mov
mov
adc
jle
enter
cmp
pusha
adc
sub
cmp
ror
popa
call
sub
lods
in
cmps
(bad)
pop
jmp
shr
push
jmp
pop
imul
add
stos
out
push
sbb
xor
mov
loopne
mov
clc
sub
arpl
iret
out
sbb
add
popf
fstp
inc
ins
stc
jmp
and
sub
ret
cmp
pop
sub
clc
jmp
(bad)
jno
xlat
push
fistp
retf
push
pop
sbb
out
(bad)
xor
push
lock
jle
jg
nop
ss
push
hlt
xchg
(bad)
jne
scas
cmc
and
hlt
dec
dec
mov
lock
outs
xchg
mov
inc
mov
mov
mov
iret
push
test
sti
inc
add
cld
xchg
fwait
iret
aaa
rol
or
adc
push
xchg
jns
call
movs
and
pop
mov
and
ja
cdq
les
ins
bound
or
jbe
jg
jbe
movs
inc
cmps
loopne
xor
movs
push
xchg
mov
repz
test
pop
(bad)
sar
lahf
out
pop
sbb
and
push
mov
test
cs
out
into
sub
movs
pop
push
inc
xor
sbb
pop
(bad)
dec
xchg
push
jg
(bad)
xchg
daa
or
repz
adc
mov
aaa
ds
or
leave
sbb
sbb
shr
and
std
outs
jae
(bad)
cli
sub
dec
int3
or
xor
fwait
mov
add
jo
stos
sub
enter
out
addr16
jle
pop
cmp
int3
fcomip
sub
das
pop
dec
addr16
add
jg
icebp
imul
mov
call
xor
push
xor
inc
xchg
xor
adc
js
(bad)
bound
mov
mov
jg
popa
idiv
mov
xchg
lock
or
repz
mov
outs
or
cmps
test
cmps
(bad)
mov
gs
xor
call
test
xor
scas
and
stos
call
iret
aas
dec
sahf
aas
jle
jne
test
std
jg
sti
retf
or
ins
lock
imul
hlt
data16
aas
imul
push
or
loop
pop
xchg
cli
adc
sub
fisub
ja
or
jle
ret
adc
aas
jmp
sti
xor
cwde
dec
data16
pop
mov
fwait
cs
sub
iret
mov
push
or
movs
push
mov
rol
xor
imul
out
popa
les
jns
mov
sub
sub
into
mov
outs
mov
ror
xchg
xchg
xor
ins
mov
loope
mov
mov
fcomi
cmp
push
push
mov
repz
div
jl
sar
inc
cmp
aas
(bad)
jl
jns
mov
ret
les
pop
adc
or
or
sbb
adc
jecxz
cmps
mov
ss
or
in
sub
lods
mov
cmp
push
mov
ins
loope
pop
shl
sbb
and
hlt
inc
leave
push
imul
pop
add
cmps
in
jl
jmp
push
sbb
and
mov
jnp
iret
fiadd
dec
sub
xchg
jmp
pop
(bad)
(bad)
mov
imul
adc
nop
pop
loop
call
push
pushf
dec
jbe
push
jle
xor
outs
js
cli
stc
fnstenv
repz
mov
push
das
mul
and
mov
cs
and
xor
shr
das
jne
dec
inc
jmp
aad
adc
lahf
push
add
jo
sub
pushf
adc
pop
inc
pop
cmp
ins
jmp
std
adc
lds
outs
add
cli
(bad)
es
xor
popf
xchg
jecxz
adc
test
adc
fiadd
mov
jge
pop
cmps
sbb
and
std
call
add
cmps
icebp
cmp
mov
jbe
ret
rol
mov
adc
clc
or
test
push
mov
out
lock
mov
xor
outs
sbb
out
jae
xlat
mov
xor
xchg
push
sbb
repz
(bad)
popf
popf
jmp
fwait
div
icebp
pop
cs
mov
inc
mov
push
mov
push
retf
mov
pop
add
call
xchg
and
or
jo
stc
popa
loope
xchg
fild
lods
sbb
inc
stos
lds
repz
icebp
pop
out
(bad)
mov
xchg
cmp
ror
push
fnstcw
mov
mov
jp
dec
out
aad
adc
add
cld
xchg
pop
(bad)
movq
out
cli
imul
cs
pop
or
clc
sbb
(bad)
fs
ins
cdq
fucomp
cmps
mov
popa
jl
sub
in
adc
jo
out
add
out
pushf
mov
dec
or
xchg
sar
aas
out
mov
pop
clc
dec
outs
jmp
mov
jmp
pmaxsw
cld
push
mov
or
and
imul
jo
sub
or
pop
dec
sbb
out
mov
mov
cmps
add
jo
aam
mov
mov
aas
mov
inc
add
push
cwde
push
inc
xchg
pop
repz
xchg
inc
ret
and
mov
mov
inc
push
test
add
pop
outs
pop
inc
inc
add
loop
loopne
and
adc
inc
loope
inc
rep
es
jns
pushf
adc
aam
int3
scas
or
arpl
and
jno
ror
popf
mul
dec
pop
dec
leave
mov
xchg
xchg
ins
mov
(bad)
xor
push
test
or
mov
pop
xchg
dec
inc
xchg
out
sub
repz
arpl
adc
pop
xor
inc
stc
movs
ins
ja
adc
fist
cmp
(bad)
mov
sbb
sbb
xchg
out
outs
jmp
push
add
jmp
gs
ret
push
push
jbe
dec
jmp
fidivr
cmp
push
cmc
outs
popa
popa
pop
iret
and
idiv
push
ret
lods
adc
jle
mov
(bad)
in
and
out
jnp
call
pushf
(bad)
mov
jne
int3
rcl
mov
in
mov
mov
mov
repnz
cmp
ins
ds
jb
push
jle
inc
clc
adc
(bad)
jne
fnsave
add
push
leave
sub
add
inc
or
cmp
stc
movs
xchg
mov
out
jmp
add
(bad)
fmul
pop
pop
inc
cmp
mov
in
xchg
xchg
or
pop
inc
add
mov
repnz
out
outs
jo
add
cld
loop
inc
xchg
pop
inc
xchg
fbld
sub
dec
push
fcom
stc
in
repnz
or
movs
loopne
js
mov
mov
fiadd
inc
mov
jne
mov
inc
mov
cmps
int
in
inc
adc
lock
gs
cmp
test
cmps
lods
xor
pusha
(bad)
cmps
xchg
les
in
aam
pusha
pop
adc
mov
cld
pushf
rcr
and
je
pop
lahf
adc
icebp
inc
pop
push
lods
push
outs
sahf
(bad)
xlat
inc
sahf
add
jbe
cdq
mov
dec
pop
mov
cmps
xor
out
add
mov
scas
mov
(bad)
sub
loopne
call
cmp
jmp
(bad)
pop
push
mov
mov
cmp
push
lock
xchg
test
out
jp
cli
movs
gs
dec
out
outs
xor
mov
ins
adc
fisttp
xor
lahf
add
adc
sar
out
stos
mov
repz
outs
dec
jg
or
leave
sbb
out
mov
imul
and
imul
or
fdiv
mov
mov
pand
lods
retf
retf
icebp
add
adc
addr16
xor
out
jae
retf
pop
xchg
inc
sbb
out
fstp
adc
es
sahf
mov
jo
adc
xchg
mov
rcl
mov
jbe
inc
int
test
pop
rol
mov
xchg
push
std
jmp
(bad)
ins
adc
mov
bsf
sti
fld
mov
cmp
cwde
enter
test
rol
ins
aad
and
xchg
jnp
mov
add
and
into
inc
enter
adc
xchg
push
jno
xchg
mov
out
cs
es
cmps
xlat
(bad)
nop
pop
and
cli
add
popf
icebp
sub
test
popf
aaa
lock
call
repnz
retf
jnp
js
popa
int3
test
sub
mov
ror
(bad)
xchg
in
js
repz
xor
cmp
stc
or
sbb
xchg
(bad)
repz
je
mov
add
imul
iret
add
sbb
jb
aaa
xor
dec
aas
xor
pop
add
cmps
neg
ins
cmp
leave
dec
push
push
(bad)
jns
out
inc
mov
cli
stc
sub
rcl
and
jno
pop
mov
jo
fistp
mov
pushf
lock
leave
xor
outs
clc
icebp
aam
pop
sahf
mov
shl
cmp
pop
jp
pop
pop
loop
jl
ret
push
jo
lock
pop
jbe
aas
ja
push
mov
dec
push
iret
push
pushf
push
mov
stos
pop
clc
js
stc
add
test
or
add
sbb
lods
test
and
(bad)
fdivp
xor
cmc
xchg
dec
lea
loopne
in
pop
sahf
(bad)
cmp
sub
out
clc
aad
sbb
popfw
jo
stc
imul
ins
pusha
and
cli
mov
aaa
xor
mov
aas
es
jne
xor
sbb
inc
or
mov
data16
test
xchg
adc
pop
add
xor
scas
add
jns
pop
cmp
aas
or
jns
aam
push
or
lahf
cs
pusha
cwde
(bad)
(bad)
sub
jnp
xchg
gs
xchg
dec
push
or
sub
push
stc
ins
movs
add
in
arpl
cmp
push
cs
xor
jecxz
int3
or
cmc
add
or
dec
push
xchg
into
mov
cmc
fnsave
mov
(bad)
mov
scas
sub
mov
cs
adc
std
adc
outs
icebp
gs
pop
scas
jne
jno
push
xchg
jmp
std
push
nop
adc
pop
add
cwde
xor
mov
xlat
in
fwait
in
xlat
fnstsw
jnp
push
outs
pop
dec
jg
lea
push
sti
cmp
clc
cmp
shr
pop
sub
dec
dec
jge
in
popf
sub
in
add
out
aas
out
addr16
mov
push
ins
(bad)
dec
mov
dec
ret
mov
xchg
rol
ds
imul
fpatan
or
sub
shl
frstor
repz
push
mov
sub
and
pop
imul
sbb
push
push
repnz
es
retf
mov
add
ret
and
shr
adc
cs
gs
xor
sbb
add
sub
or
data16
ret
lahf
sar
pushf
xchg
xchg
mov
ret
jp
lods
mov
in
dec
or
sbb
sbb
push
js
or
xchg
test
jnp
(bad)
cdq
loope
push
xchg
push
outs
pop
push
retf
and
add
jg
das
outs
les
add
jl
xchg
mov
movs
int
(bad)
icebp
xor
das
imul
lahf
popa
pop
leave
(bad)
ja
stos
mov
jmp
dec
pop
pop
lods
sub
enter
jg
pop
inc
xchg
or
jne
mov
popf
xchg
leave
mov
icebp
mov
jecxz
iret
or
rcl
retf
cmp
lods
mov
fimul
or
jg
mov
cli
gs
push
cmps
cld
es
mov
ret
ja
lock
mov
out
xlat
pop
inc
and
outs
out
inc
sbb
xchg
add
pop
idiv
pop
mov
push
mov
mov
in
sbb
(bad)
stc
add
jmp
mov
cmp
mov
dec
inc
test
mov
cmp
lods
jle
test
int3
cmps
dec
pushf
in
idiv
xchg
push
test
jge
mov
into
mov
add
xlat
cmps
mov
pop
inc
lock
ror
stc
mov
mov
or
jb
in
add
jmp
in
fdiv
mov
out
jl
xlat
or
jne
retf
sbb
hlt
dec
rcr
pop
inc
test
pop
data16
adc
dec
loope
add
mov
dec
jg
inc
sbb
adc
retf
mov
imul
lea
sub
(bad)
or
push
(bad)
cdq
cwde
addr16
sub
jmp
xor
cmp
and
test
sbb
fwait
jge
shl
xor
stos
xor
jmp
fdivr
sbb
stos
sbb
mov
stos
or
xchg
out
in
fistp
retf
adc
int3
(bad)
shl
xchg
clc
adc
jg
out
daa
adc
xor
xlat
cli
sub
cmp
lds
add
mov
fcompp
mov
idiv
or
ret
inc
fistp
add
sbb
in
sbb
push
push
jmp
loope
dec
ja
cmp
loopne
jg
fdiv
sahf
ds
cmp
into
std
sub
(bad)
int3
sar
push
pop
pop
mov
mov
jp
dec
pop
cs
push
jg
movs
clc
dec
loope
popf
inc
mov
mov
or
push
loopne
pop
mov
mov
out
movs
adc
jo
sbb
pop
popa
sub
dec
xor
aam
(bad)
sbb
sbb
inc
mov
push
rol
cld
mov
in
loope
mov
pop
inc
cmp
aam
inc
ret
or
lock
and
int
aaa
push
xor
xor
mov
jle
loopne
mov
mov
outs
rol
and
stos
(bad)
in
lds
mov
xor
mov
pop
add
lods
and
bound
add
adc
mov
jle
movs
cmc
xor
outs
sbb
and
mov
push
adc
or
lock
cwde
inc
inc
add
arpl
aaa
cmp
mov
sbb
int3
aas
aas
and
xchg
xchg
cmp
sub
lds
(bad)
les
out
in
pop
retf
imul
sub
arpl
adc
scas
inc
add
loopne
pop
movs
shl
ret
imul
loop
mov
call
push
xchg
inc
pop
push
cli
fld
cmp
std
jge
jle
sar
not
(bad)
dec
inc
cmps
mov
loopne
jmp
cmp
sar
xor
dec
imul
shl
mov
xor
mov
sub
cmp
sbb
fsubrp
dec
sahf
repz
or
dec
pusha
jno
fwait
add
adc
ins
mov
xor
pop
jl
xlat
xchg
pop
out
lds
(bad)
adc
jmp
xor
mov
push
das
xor
or
imul
mov
das
mov
ffreep
cmp
cmp
xchg
lods
lds
mov
sahf
sub
xchg
dec
cmp
sbb
ret
add
cmc
test
jge
pop
and
xchg
xchg
xor
js
adc
aaa
pusha
sahf
stos
sub
pop
xchg
inc
out
jno
daa
fs
or
adc
push
inc
ret
js
mov
loop
mov
popf
call
or
mov
dec
shl
xor
pushf
push
test
inc
xchg
push
int
xchg
adc
cwde
sub
scas
mov
push
sbb
cli
pop
dec
ins
movs
(bad)
aad
mov
scas
push
mov
in
or
aam
cli
icebp
aaa
jns
and
jns
cmp
sbb
hlt
rol
or
push
retf
and
push
mov
adc
fnstenv
shl
mov
mov
xor
bound
push
add
repz
imul
nop
cmps
retf
ja
std
sub
cld
outs
xor
out
jmp
xlat
popf
js
fwait
add
imul
retf
je
and
sar
xor
and
sbb
loope
mov
push
adc
pop
pop
adc
push
adc
or
movs
mov
or
push
hlt
sub
jl
mov
arpl
movs
or
scas
stos
in
call
sub
xchg
lods
and
adc
push
xchg
movs
daa
and
mov
jmp
and
xchg
jb
sub
push
dec
push
ins
dec
or
and
mov
xchg
xchg
ret
add
out
jns
and
aad
in
sbb
xchg
mov
out
aas
scas
sar
dec
out
xor
mov
mov
call
inc
and
repz
xor
and
adc
sbb
stos
and
loopne
test
and
imul
repnz
les
aam
mov
stc
rol
dec
push
push
ret
sbb
jge
fld
sahf
xchg
movntps
fnstenv
sbb
cld
dec
arpl
and
popa
mov
xchg
adc
aad
loop
retf
cld
icebp
scas
mov
add
ss
(bad)
mov
xor
adc
add
and
add
adc
lods
add
cli
imul
jbe
out
or
lods
xor
clc
movs
mov
sbb
or
fcmove
das
stc
push
(bad)
sbb
test
sub
jge
adc
xchg
out
xor
mov
icebp
scas
mov
xor
or
and
sub
imul
inc
pusha
paddq
outs
shr
sbb
ins
push
(bad)
xchg
lods
pop
pop
and
test
shl
dec
pop
imul
or
scas
cmps
add
jbe
pop
mov
mov
(bad)
mov
les
dec
adc
aaa
punpckhwd
test
and
xor
xor
and
xor
test
mov
push
into
and
rcl
jae
pushf
sub
pop
movs
(bad)
jg
sbb
push
repnz
jns
pop
xor
sbb
ror
ja
aam
dec
pushf
xor
mov
icebp
push
mov
stc
push
add
cdq
ret
sbb
aam
cmps
mov
and
int3
push
jl
xor
sbb
test
mov
xchg
lahf
outs
xchg
daa
mov
pop
xchg
sub
xchg
nop
mov
or
stos
push
xor
aas
loop
outs
retf
dec
int3
in
push
movs
xor
lods
or
scas
push
push
jmp
add
ret
and
push
fst
pop
cmp
inc
daa
dec
cdq
mov
mov
xor
xchg
mov
stc
outs
xor
ja
out
retf
jge
lock
sbb
retf
arpl
je
cli
pop
lods
shr
(bad)
ror
std
cmp
or
aas
mov
push
aas
cld
cmp
enter
popa
push
fsub
and
sub
push
or
fnsave
xchg
sbb
jl
adc
cdq
repz
and
inc
pop
inc
adc
xor
fwait
cs
sar
loope
in
dec
aaa
jo
jg
enter
ss
and
lds
sbb
mov
mov
cmp
movs
xchg
sti
and
arpl
pop
ds
pop
sahf
(bad)
nop
jns
(bad)
adc
jle
out
sub
adc
add
scas
hlt
popf
dec
retf
sub
retf
call
das
xor
mov
mov
ds
adc
test
cmp
lods
push
push
xlat
aam
adc
hlt
sub
in
xchg
push
movs
inc
pop
pop
(bad)
mov
and
push
xor
xlat
adc
add
xor
sar
dec
mov
(bad)
fst
ss
test
call
dec
into
jnp
push
ss
adc
popa
pop
jae
scas
daa
jno
fistp
xchg
sbb
push
jl
dec
mul
sbb
sbb
pop
xchg
mov
sub
pop
loopne
test
fwait
js
into
push
retf
xchg
les
push
pushf
sbb
pusha
int3
cld
test
aaa
repz
das
xrelease
retf
lods
push
cmps
loope
and
neg
jmp
idiv
aaa
fwait
xchg
pushf
sbb
bound
inc
mov
dec
inc
loopne
and
out
mov
mov
sbb
jecxz
cs
arpl
pushf
js
(bad)
jle
in
loop
mov
adc
pop
and
pop
cld
fdivr
call
or
jns
aad
pop
mov
inc
cmp
iret
rcr
push
cli
xchg
jno
aas
and
jmp
inc
dec
xchg
es
jb
arpl
push
frstor
jno
aas
xchg
adc
pop
add
sbb
push
xor
call
fsub
cwde
xor
retf
arpl
push
mov
push
scas
mov
push
add
(bad)
sbb
jns
movs
or
jecxz
mov
push
push
(bad)
test
add
add
popa
rcl
into
add
aaa
dec
add
add
fmul
mov
and
ret
push
add
js
jmp
mov
loopne
stc
push
fwait
sar
push
add
and
scas
call
jb
add
ins
and
cs
lock
xchg
into
cld
and
mov
pusha
jo
bound
dec
out
je
stos
lock
(bad)
jnp
inc
js
leave
stos
icebp
pop
sahf
xchg
imul
or
inc
ret
inc
cmp
or
cld
ins
loope
es
(bad)
sbb
lock
pusha
add
mov
(bad)
push
mov
ds
pop
mov
pop
dec
sti
sub
popa
je
shr
cmp
js
mov
in
ret
sub
fnstsw
sti
dec
mov
sbb
(bad)
lock
mov
(bad)
leave
xchg
lahf
push
mov
cmc
pop
xchg
dec
lock
or
fistp
mov
jg
repz
jnp
add
xor
and
std
stos
hlt
adc
outs
jo
and
hlt
jae
cmp
outs
push
and
mov
pop
mov
(bad)
mov
inc
or
dec
inc
test
std
add
push
out
clc
or
imul
xor
inc
jmp
cmp
mov
xor
lock
mov
dec
mov
fsub
clc
sbb
aas
je
idiv
xlat
div
sub
pop
and
push
dec
ret
adc
mov
fs
out
icebp
adc
loop
adc
dec
lahf
cld
imul
mov
test
pop
xchg
into
dec
test
adc
lea
jmp
f2xm1
data16
sbb
cld
adc
mov
inc
(bad)
or
dec
or
dec
arpl
jp
adc
dec
test
pop
pop
push
js
ins
mov
aaa
cmps
jle
les
out
xchg
push
aas
jno
push
xchg
js
sub
jmp
daa
jecxz
stos
shl
gs
mov
ficom
cld
imul
data16
stos
adc
mov
cmp
iret
repz
sub
iret
sbb
or
arpl
mov
arpl
jmp
ret
into
cmc
stos
add
in
adc
jecxz
mov
mov
into
fnstsw
stc
movs
xchg
add
sahf
adc
sbb
lods
add
arpl
aas
mov
sbb
loop
add
xor
or
stos
inc
ffreep
gs
cwde
imul
and
repnz
xor
outs
repz
pop
jl
out
repz
mov
mov
cmp
mov
out
push
arpl
push
cmp
xchg
cmps
gs
out
arpl
add
into
adc
clc
iret
cld
test
(bad)
aam
dec
in
or
add
cmp
pop
or
mov
pop
shr
and
icebp
daa
mov
ins
add
dec
das
sti
mov
cdq
(bad)
imul
cwde
mov
mov
cli
leave
cmp
mov
iret
cs
sub
pop
add
dec
dec
cwde
dec
adc
lea
fwait
cld
pop
mov
rcl
mov
mov
enter
mov
dec
push
push
jecxz
aas
sbb
bnd
mov
or
mov
xor
dec
addr16
cmp
aaa
icebp
or
in
cmp
pop
repz
cs
in
fld
imul
mov
es
clc
mov
xor
cli
out
xor
out
fistp
sar
or
mov
push
xchg
repnz
scas
cs
fild
imul
mov
dec
cmp
(bad)
pop
clc
das
cmp
jecxz
inc
sti
pop
cld
icebp
out
je
jecxz
add
add
inc
push
in
lock
nop
or
sbb
hlt
mov
outs
mov
mov
jge
cli
sbb
cmp
enter
sub
fcomip
arpl
in
je
repz
mov
jbe
push
xchg
call
sub
and
add
and
shr
sub
lds
call
jnp
and
mov
xchg
pop
and
pop
movs
mov
fs
iret
pop
pop
jbe
in
aam
iret
inc
out
cmp
dec
dec
js
jecxz
scas
ja
repz
sti
inc
rol
mov
push
or
(bad)
xchg
or
gs
call
stc
push
fdivr
sbb
int3
jo
xor
jmp
out
ret
pop
adc
and
mov
inc
jecxz
xlat
(bad)
aad
outs
xor
push
ftst
sbb
adc
mov
mov
ds
imul
add
(bad)
leave
mov
pop
outs
add
xor
xchg
ds
jmp
or
push
call
imul
xor
loope
in
cmp
das
daa
lods
sub
or
les
sbb
xor
pop
xor
fsubr
mov
bound
popf
mov
movs
mov
add
loop
lods
nop
sub
xor
cmp
xchg
(bad)
js
iret
or
(bad)
pop
test
push
xlat
out
pop
xlat
dec
outs
sub
mov
sahf
aam
lahf
pop
loope
addr16
sbb
js
test
push
cld
test
add
adc
dec
fcomip
pusha
nop
(bad)
outs
dec
outs
jo
fmul
jmp
fucom
sti
mov
inc
push
clc
adc
cmp
xor
push
cld
in
aas
call
cld
cs
sbb
dec
jmp
cmp
xchg
add
pop
mov
retf
fwait
push
shr
add
repz
scas
push
sbb
pop
xchg
cdq
push
hlt
push
push
int3
cmps
in
mov
adc
xchg
mov
push
add
ds
(bad)
ja
add
dec
adc
dec
mov
(bad)
sti
mov
jnp
jae
push
popa
sbb
mov
pop
or
xlat
lock
int3
js
mov
in
arpl
mov
cdq
(bad)
adc
outs
push
mov
adc
push
imul
ds
mov
push
and
add
sbb
mov
fs
out
and
or
sbb
or
dec
retf
add
pop
daa
push
mov
sbb
mov
lds
dec
cmp
cmps
minps
bound
or
movs
int3
jns
in
ret
jl
imul
jmp
mov
test
test
xor
loopne
retf
fbstp
mov
sub
add
mov
out
dec
out
mov
dec
sub
mov
adc
movs
leave
out
mov
cs
(bad)
not
stc
rol
lahf
in
add
sub
jge
jmp
(bad)
pushf
in
sti
jl
cmp
sbb
sbb
or
neg
std
neg
leave
ja
fistp
(bad)
ds
pop
icebp
leave
scas
xchg
pop
and
sar
jecxz
dec
idiv
iret
inc
dec
movs
dec
lods
mov
mov
ror
cmp
sar
sub
mov
lea
pop
jg
and
mov
fisttp
lock
cmc
cmp
rol
dec
ret
dec
popf
icebp
loop
nop
jne
push
or
sub
js
std
out
push
add
or
cmovae
push
or
pop
xchg
mov
push
add
ins
stos
ins
pusha
and
and
xchg
sub
out
or
fisttp
sub
xchg
lea
jns
loope
imul
mov
add
sbb
xchg
ret
mov
and
xor
pop
and
or
mov
or
stc
nop
outs
adc
cmps
sbb
pop
adc
retf
pop
mov
cmp
lock
test
sbb
xchg
test
fnsave
sub
ins
call
jmp
add
into
push
jne
add
mov
ret
es
jmp
data16
sahf
pop
lock
dec
inc
hlt
jmp
mov
popf
in
outs
ins
mov
push
push
arpl
lahf
pop
lahf
gs
repz
add
inc
iret
push
push
push
scas
(bad)
(bad)
neg
jle
sti
mov
inc
dec
jecxz
or
xchg
pop
(bad)
fsub
mov
xchg
sub
jo
in
test
dec
lods
sar
into
inc
cmp
fidivr
or
fdivp
test
inc
jmp
pushf
adc
jmp
iret
imul
lahf
xchg
mov
or
jno
pop
cmc
and
into
mov
imul
dec
push
jmp
mov
push
call
clc
outs
cmp
inc
fiadd
dec
jns
sbb
sbb
clc
popa
add
popa
les
mov
xchg
pop
cwde
aas
cmps
sbb
push
clc
out
sub
mov
sbb
mov
xlat
jle
loope
sbb
fs
rol
in
retf
ret
sub
adc
sbb
dec
popa
sbb
sub
inc
popf
(bad)
bound
rol
mov
lock
sbb
or
mov
cmps
jl
ds
adc
adc
fst
movs
lock
int
and
adc
jl
mov
movs
mov
scas
xor
stos
pusha
xor
js
jns
sahf
push
mov
arpl
adc
int
ja
test
loopne
mov
out
out
test
or
mov
arpl
cmp
cmps
mov
popf
add
pushf
mov
imul
cld
lods
pop
das
iret
mov
test
mov
test
pop
inc
sub
popa
bound
mov
(bad)
push
mov
popf
sbb
push
lea
ins
imul
mov
mov
imul
scas
adc
fs
sahf
leave
iret
test
loope
mov
out
pop
mov
in
out
lahf
popa
add
and
jae
pop
cmp
and
pop
push
stc
fptan
fistp
arpl
cmp
inc
cmp
clc
mov
pop
xor
(bad)
cli
mov
idiv
nop
cs
movs
fst
stc
xor
xchg
pop
mov
das
fwait
xchg
mov
jno
mov
or
adc
cmp
and
xchg
xor
(bad)
pop
data16
sbb
jnp
mov
cs
pop
inc
sti
pushf
dec
hlt
add
sahf
mov
shl
lahf
mov
rcr
mov
and
mov
xchg
enter
cmp
punpckhbw
in
ret
les
outs
inc
ret
dec
(bad)
xchg
xor
aas
popa
xchg
mov
push
add
sub
je
dec
cmp
sbb
or
or
scas
ja
push
movs
pusha
push
add
(bad)
add
faddp
daa
or
xchg
ret
add
bound
xor
icebp
push
push
xor
imul
lock
mov
loopne
pushf
xchg
dec
out
pop
test
aaa
outs
dec
add
int3
inc
ret
xor
nop/reserved
inc
push
cmps
aam
mov
lods
lds
ins
pop
stos
sub
add
loope
inc
jge
fwait
mov
popa
bound
imul
sbb
inc
inc
stc
cdq
dec
fs
cmc
jbe
fild
pop
(bad)
cmp
loop
push
mov
sahf
jo
xchg
jb
inc
push
inc
cld
push
rcl
outs
fdivr
outs
fbld
sub
inc
xor
mov
jno
add
add
out
or
push
or
cld
sahf
shl
mov
int
jmp
outs
cmps
outs
in
pop
push
ret
mov
call
repnz
ds
lods
sub
inc
icebp
push
gs
xor
jmp
push
push
aaa
and
or
jo
inc
dec
adc
bound
inc
xchg
jge
jnp
jp
mov
pop
add
sbb
inc
pop
lahf
sub
mov
and
ror
cld
fidivr
push
(bad)
xchg
rcl
repz
int3
add
jbe
jmp
es
(bad)
fist
out
jno
popa
push
dec
cmp
add
ss
fnstenv
retf
add
lds
pop
adc
add
call
(bad)
mov
imul
sub
xor
and
and
pop
data16
lods
and
loope
inc
pop
mov
add
dec
and
data16
mov
jmp
jb
(bad)
repz
cmp
dec
push
inc
setae
lods
fucom
aas
mov
repz
mov
das
xor
mov
shl
into
int
outs
inc
jbe
inc
addr16
aad
scas
push
nop
dec
cmp
imul
fnstcw
outs
mul
or
outs
pop
jmp
fsubp
ror
dec
sahf
mov
iret
in
mov
mov
dec
scas
xchg
out
push
sub
fwait
lods
mov
iret
lods
inc
daa
mov
pop
push
call
idiv
imul
clc
xchg
mov
adc
fwait
cld
cmps
pusha
push
sub
mov
xchg
pop
ins
jne
or
xor
sbb
ja
xchg
ja
es
shr
adc
test
cmp
or
(bad)
adc
repnz
mov
out
loop
movs
xchg
je
sahf
add
lds
outs
cwde
movs
std
xor
into
mov
cld
or
inc
jge
add
jp
mov
addr16
jno
das
add
cwde
cmp
mov
push
push
fdivr
inc
je
scas
cwde
mov
mov
jp
push
out
outs
sbb
pop
aam
inc
aam
push
enter
icebp
sub
lahf
aaa
es
stos
dec
sbb
dec
mov
rcr
dec
loope
adc
in
mov
cli
sbb
lahf
sub
icebp
and
test
(bad)
push
mov
ins
sub
(bad)
or
xor
stos
and
or
inc
mov
(bad)
jmp
mov
popa
sbb
sub
jmp
or
push
add
add
jp
mov
imul
jle
out
imul
fldenv
out
mov
(bad)
sbb
retf
sbb
sbb
cdq
ss
xchg
sub
hlt
fbstp
pop
lods
popf
jge
test
retf
jnp
ds
popf
imul
lods
mov
movs
ja
xor
mov
pop
xchg
fcomi
sti
sbb
and
mov
lahf
scas
add
mov
xchg
push
mov
je
lea
cld
repnz
xor
fwait
mov
cdq
push
mov
or
jp
xchg
cmp
mov
inc
cmp
cmp
mov
div
das
pop
dec
jg
cmp
pop
jmp
rcl
rep
mov
jmp
xchg
lods
addr16
xor
dec
popf
lahf
mov
loope
cli
fisub
inc
jmp
aas
repz
mov
inc
jae
add
nop
jno
mov
adc
ja
or
xor
clc
int
sub
rol
jno
xor
leave
mov
lods
add
mov
cld
inc
out
mov
es
rol
mov
mov
in
retf
mov
ds
xor
cmp
repz
neg
stos
inc
int3
mov
mov
outs
lds
xchg
dec
jp
les
pop
dec
retf
int3
pop
push
mov
xor
xlat
loope
inc
mov
xor
sbb
add
sbb
out
jmp
imul
push
fsubr
out
sbb
jmp
pushf
cmps
adc
popf
(bad)
sbb
mov
fmul
lds
dec
test
std
cld
aaa
jbe
loope
push
pop
mov
cmps
clc
xchg
inc
addr16
inc
fbstp
pop
hlt
adc
hlt
jno
out
push
fnstsw
mov
mov
jl
and
pop
inc
or
mov
lock
pop
gs
cwde
jmp
outs
xor
ja
fld
out
mov
int
add
retf
pop
stc
aam
(bad)
mov
fucomip
sbb
jnp
mov
mov
pop
mov
ins
stc
lods
das
repz
xchg
push
call
xlat
xchg
xor
xor
add
ins
ins
enter
popa
add
lods
pop
aaa
adc
cmp
jae
xor
das
cmp
cmp
fs
sub
jecxz
(bad)
call
lock
xor
mov
and
jge
fnstcw
add
and
mov
mov
dec
xor
ficom
add
mov
ja
les
cmps
jmp
sub
push
or
jae
mov
call
add
sbb
(bad)
leave
push
adc
lock
cmp
rol
xor
aas
xchg
adc
ins
rcl
mov
js
add
jno
inc
loopne
jno
loopne
mov
cli
into
dec
sub
mov
sbb
xchg
test
jno
cli
lea
aas
lods
cmp
cli
cld
scas
jge
ins
sub
cs
pusha
ror
or
push
mov
jne
cs
push
add
ret
arpl
out
ds
std
test
and
add
pop
mov
xor
mov
popf
iret
jbe
and
cmps
lock
loopne
adc
sahf
cmp
ret
inc
icebp
sub
pushw
cmps
mov
imul
ins
out
jle
and
pop
loopne
jl
cdq
jle
jmp
daa
jle
ss
jmp
pushf
xor
and
jg
das
(bad)
xchg
dec
cmps
and
xchg
leave
cli
adc
cmp
lds
(bad)
mov
in
adc
fdiv
push
in
out
imul
cwde
ja
jno
iret
std
or
cmp
imul
ret
mov
int
push
loopne
(bad)
jmp
addr16
add
adc
add
imul
retf
mov
mov
mov
or
mov
inc
adc
adc
das
pushf
pop
jnp
fs
mov
rol
sub
and
clc
sub
cli
cs
sub
fistp
or
lods
mov
add
bound
and
push
ret
push
adc
sub
imul
es
sbb
stos
jmp
jb
aas
mov
push
pop
jle
lea
ret
jmp
fisttp
push
or
mov
int
retf
movs
(bad)
jae
cmp
mov
ret
xor
add
sub
push
sbb
test
call
mov
mov
cmps
in
mov
jne
xor
xor
mov
lahf
mov
push
out
cmp
jbe
leave
ja
lea
(bad)
cmp
xor
iret
(bad)
pop
xchg
stc
(bad)
sub
aam
test
in
add
stos
push
sbb
mov
outs
mov
cmp
fwait
dec
pop
sub
(bad)
jb
mov
cmps
aas
jmp
push
fisub
aas
data16
fidiv
push
cli
leave
fldenv
outs
add
dec
xlat
xchg
sbb
mov
or
and
and
fwait
push
call
mov
jo
sar
fnstenv
pop
fimul
or
test
jmp
lock
adc
cmp
jmp
lods
stc
and
jle
clc
inc
scas
aas
push
imul
sbb
sbb
xlat
out
in
aas
jnp
cmp
mov
add
sbb
push
and
sub
inc
lods
mov
in
mov
dec
add
dec
push
pusha
and
bound
push
dec
xchg
popa
add
xchg
jo
pop
push
xor
(bad)
cmps
outs
popa
iret
rcl
lahf
add
call
ret
aam
inc
mov
inc
xchg
popa
jb
and
inc
mov
dec
dec
pop
dec
fadd
addr16
sar
in
dec
mov
jge
push
xor
cli
ret
and
loop
cli
lea
adc
rol
bound
push
cld
adc
nop
and
aad
pop
cs
xor
add
loop
cmp
mov
popa
int3
fcmovnbe
jge
sbb
jge
ret
cmp
pop
lahf
out
cmp
scas
add
pop
mov
js
(bad)
sub
sbb
fist
sti
imul
shl
addr16
adc
stos
rcl
cld
iret
enter
jmp
cmp
cmc
fwait
xlat
(bad)
imul
jb
pop
fwait
iret
es
pop
and
scas
arpl
sti
and
dec
push
dec
xchg
pushf
jmp
push
push
mov
cld
stos
cmp
cmp
sbb
pusha
mov
and
fcmovbe
mov
mov
jg
mov
(bad)
hlt
repnz
xchg
dec
rcl
popa
cmp
scas
adc
rcpps
mov
mov
(bad)
icebp
xchg
mov
mov
movs
add
leave
lahf
outs
shl
jo
or
das
add
repnz
jmp
jno
dec
mov
out
inc
sub
mov
nop
retf
inc
mov
into
push
pop
cmps
xor
adc
jae
pop
add
imul
and
ror
out
xor
aas
push
sub
fwait
xor
add
xchg
addr16
cmp
mov
sbb
les
or
cmp
mov
mov
and
push
inc
pop
push
std
push
es
pusha
js
jae
mov
test
in
int3
push
inc
rol
sub
pushf
or
stos
inc
push
mov
sahf
push
xor
hlt
fadd
ret
stos
cld
xor
or
mov
xchg
push
ror
push
mov
jle
fidivr
ficom
pop
or
out
pop
aas
fdiv
inc
ds
shl
imul
sub
mov
xor
jns
dec
loop
test
(bad)
in
out
jle
mov
dec
in
sbb
jge
(bad)
pop
push
add
lods
aas
xchg
add
addr16
test
in
inc
pop
(bad)
fwait
pop
push
idiv
fcmovne
cmc
cmp
push
neg
sub
jecxz
call
inc
movs
push
(bad)
cmp
sub
cmp
cs
sahf
ds
jmp
jmp
test
push
pop
aad
or
xchg
jle
ret
or
adc
je
dec
and
cld
jmp
add
push
and
xlat
xchg
jmp
in
adc
fsub
push
dec
dec
or
sub
mov
movs
sub
std
or
movs
cmc
sub
lods
xchg
hlt
iret
sar
cwde
shr
add
(bad)
pop
shr
int
jg
sub
jne
mov
stos
mov
xor
inc
mov
jp
pop
and
out
out
in
inc
inc
push
test
mov
mov
loopne
ja
push
inc
fwait
inc
adc
or
fs
(bad)
std
les
pop
pusha
mov
jo
add
inc
test
sbb
int
clc
mov
dec
aam
jmp
cmp
xor
pop
cdq
cli
and
rcl
mov
ds
sub
lea
xchg
test
retf
test
mov
data16
mov
out
dec
cmp
jns
test
in
ss
cmps
xchg
pop
add
fs
push
cld
fadd
jl
aaa
pop
clc
ins
mov
outs
xchg
dec
jne
(bad)
push
std
in
mov
xchg
push
aaa
lds
inc
add
retf
out
sbb
mov
(bad)
out
xchg
jmp
outs
fst
cwde
imul
add
daa
lock
mov
neg
xor
jg
cld
out
sti
fild
sub
adc
and
(bad)
(bad)
sub
cmp
and
fs
aaa
iret
lahf
aas
lea
out
ins
mov
add
push
mov
retf
or
mov
add
and
stos
jns
mov
mov
repnz
add
stc
in
add
fdiv
stc
pop
mov
add
icebp
test
xchg
movs
jno
ss
fcom
data16
retf
ss
pop
cwde
pop
js
clc
iret
push
je
mov
jmp
ins
xchg
and
sbb
or
xor
repz
out
das
jle
mov
mov
movs
inc
in
add
xchg
imul
cwde
push
mov
xchg
adc
and
sub
cmps
adc
ss
pop
dec
pop
int3
imul
push
jne
sub
sub
cwde
dec
loop
mov
jne
push
lods
adc
mov
add
add
push
popa
shl
rcr
inc
loopne
ret
mov
scas
jb
pop
repz
push
sbb
mov
adc
dec
loop
mov
mov
test
mov
mov
sub
jecxz
fcmovnb
push
mov
jne
sub
dec
jg
je
xor
xlat
js
mov
and
scas
sub
ror
ds
ret
out
test
xchg
aad
xor
in
mov
sar
adc
cli
shl
dec
mov
mov
sahf
sub
frstor
vshufps
es
int3
cmc
pop
push
iret
icebp
jnp
outs
cmp
cmps
psubb
mov
daa
pop
jmp
pushf
add
in
outs
mov
cmp
add
mov
stc
pop
es
sti
call
js
repnz
scas
gs
mov
xchg
popf
scas
in
xchg
or
in
arpl
mov
ficom
jne
push
add
push
pusha
rcr
sub
retf
addr16
retf
mov
lock
push
mov
scas
aad
int
in
fadd
mov
neg
xchg
mov
or
call
daa
movs
jno
jp
and
(bad)
mov
sbb
mov
out
aas
or
jne
cld
sar
std
fdivrp
mov
inc
inc
(bad)
das
mov
xchg
mov
and
ret
dec
cmp
add
inc
dec
adc
xchg
test
cdq
or
pop
and
push
mov
(bad)
pop
jle
add
mov
popa
or
movs
or
(bad)
push
sbb
add
and
mov
js
jbe
dec
sub
push
inc
dec
dec
cwde
mov
xor
sti
test
popa
sbb
add
mov
fstp
inc
mov
retf
xor
sub
loop
sbb
mov
sub
xor
clc
loop
push
sbb
mov
pop
mov
fs
outs
xor
hlt
pusha
mov
add
lahf
sbb
add
data16
add
fild
or
mov
je
jge
dec
icebp
pop
test
outs
pop
imul
mov
mov
shl
push
fistp
jb
fidiv
jne
ret
xlat
das
pop
popa
push
xlat
cmps
cmc
inc
outs
cmp
aam
jns
sbb
in
cmp
add
out
fucomi
repnz
lods
inc
out
and
lahf
or
push
mov
add
movs
pop
inc
(bad)
mov
je
std
and
cmp
and
bswap
add
jnp
ret
lahf
sti
mov
add
stc
jge
push
push
(bad)
pop
cmp
pusha
sub
xor
ins
jecxz
stc
outs
(bad)
inc
inc
adc
jle
int3
mov
xchg
dec
push
cld
xchg
and
test
and
push
xchg
in
mov
int3
iret
cmp
mov
adc
or
sub
mov
mov
xlat
push
iret
mov
push
out
push
arpl
mov
or
(bad)
cdq
mov
cbw
push
out
repz
dec
in
adc
jo
pop
mov
sbb
daa
call
popa
test
dec
sbb
xchg
idiv
test
push
push
stos
movs
cld
enter
and
pop
cli
mov
in
je
fwait
ret
(bad)
lock
xchg
popf
adc
loop
pop
cmc
mov
fidivr
cmps
pop
add
or
cmp
leave
ror
push
cmp
ret
and
or
sub
lahf
mov
adc
adc
nop
jbe
imul
xchg
fild
aas
das
popf
xor
adc
dec
sub
jbe
aad
jp
jae
fbstp
or
rcr
mov
call
icebp
add
pop
mov
sub
int
mov
fistp
aaa
mov
addr16
das
in
sub
push
mov
imul
jp
sub
cli
mov
mov
pop
movs
xor
imul
fsub
out
es
cli
mov
sub
aas
or
mov
popf
clc
jmp
cmps
aas
jns
popa
ja
sbb
inc
ds
loop
mov
jae
push
mov
mov
fsub
pop
cmp
dec
in
mov
add
mov
test
js
cmp
iret
adc
sar
repz
dec
iret
adc
mov
mov
cmc
daa
push
(bad)
jae
mov
jns
gs
and
(bad)
mov
aas
jmp
sar
mov
daa
js
leave
mov
mov
jg
cmp
dec
and
xor
inc
daa
mov
mov
test
cld
pop
cli
cmp
lds
jns
jb
imul
aaa
inc
cmps
sub
or
xchg
add
gs
imul
xchg
fldcw
push
xchg
mov
xchg
fsub
fstp
dec
xor
shl
dec
jo
pop
push
aad
xchg
mov
pop
add
or
or
pop
push
aad
and
sbb
inc
or
rcl
mov
mov
pop
hlt
dec
xor
or
push
pop
jle
fistp
pop
mov
cs
push
add
jmp
ror
push
mov
loop
pop
pop
mov
mov
scas
stc
ja
xor
stos
mov
dec
ja
xchg
jge
ror
imul
dec
out
std
out
sti
leave
or
mov
jmp
cdq
push
repz
jnp
pop
loope
call
pusha
pop
jns
shl
daa
dec
dec
loope
pop
loop
jmp
sbb
retf
neg
cli
cdq
out
mov
outs
and
adc
inc
sahf
loope
pop
add
xor
test
ret
mov
add
outs
mov
rcl
imul
inc
pop
iret
retf
test
add
cli
adc
fcmovne
(bad)
pop
rcr
xchg
jg
mov
jg
jg
lea
int3
ror
mov
dec
fisttp
jmp
pop
loopne
jne
(bad)
aaa
popa
ss
push
inc
mov
and
fidiv
lahf
fptan
add
jle
sub
rol
mov
push
jno
jmp
and
jecxz
push
cmp
in
inc
popa
add
sub
jae
inc
arpl
enter
mov
cmp
mov
and
lock
cli
add
shl
ins
cmp
rcl
xchg
push
bound
dec
or
or
int
cld
cdq
(bad)
sti
cmp
adc
pop
pop
dec
jle
inc
adc
push
xor
or
adc
repnz
xchg
push
fisubr
call
das
ret
mov
adc
stos
dec
mov
mov
xchg
fbstp
std
xchg
daa
jno
cmp
jmp
repz
dec
ret
test
jmp
sub
iret
jae
scas
pop
inc
shr
idiv
mov
popf
adc
jg
ror
jl
jle
in
outs
out
dec
out
std
mov
dec
cmp
mov
cli
cld
outs
es
cmp
(bad)
das
idiv
adc
or
popa
aaa
icebp
or
not
aaa
out
mov
xchg
xchg
call
inc
cdq
xor
cmp
popw
cli
jecxz
dec
fwait
out
dec
popf
mov
jg
or
clc
sub
or
fstp
shr
xchg
fisub
mov
movs
gs
push
pop
popa
inc
test
call
dec
mov
cs
lea
push
ret
shl
lods
hlt
les
movs
std
add
into
xor
push
cs
push
lods
dec
jl
jnp
jl
mov
jle
pop
(bad)
pop
jae
ret
mov
and
jl
cmp
ret
inc
adc
dec
and
and
out
movs
std
xchg
mov
sub
and
add
iret
pop
outs
mov
pop
push
adc
mov
out
fnsave
out
jge
lahf
and
(bad)
jns
push
mov
retf
mov
mov
cmp
sub
retf
sbb
push
lock
dec
movs
out
and
loop
gs
dec
add
and
dec
inc
inc
push
cmp
pop
xchg
sbb
rcr
in
mov
and
les
mov
add
stos
aas
sar
adc
cmp
loop
movs
adc
pop
loopne
fidivr
hlt
fnstsw
or
sub
(bad)
mov
or
sti
scas
and
imul
dec
ds
dec
loope
pushf
jge
cmp
dec
clc
out
jecxz
jle
sar
mov
and
jle
out
icebp
mov
pushf
(bad)
imul
aad
sbb
cli
std
jl
and
leave
and
fadd
jl
xor
imul
das
(bad)
mov
(bad)
jecxz
mov
adc
outs
jmp
cmps
js
mov
(bad)
push
cwde
jnp
sub
adc
es
mov
ins
in
mov
cmps
arpl
ins
std
retf
fisttp
call
clc
test
mov
out
jge
add
ret
add
imul
mov
and
sub
aas
xchg
push
ret
out
(bad)
scas
cmc
loopne
sar
mov
out
push
test
push
sub
inc
neg
addr16
or
cmp
std
addr16
scas
mov
aaa
iret
dec
sub
mov
dec
ucomiss
adc
dec
adc
(bad)
into
jae
or
or
arpl
into
loop
fs
nop
das
stos
fidivr
or
aas
and
ret
adc
and
pop
sbb
test
es
sub
adc
mov
aas
lahf
aad
pop
call
call
lahf
in
inc
jecxz
mov
fs
mov
and
xor
or
adc
fidivr
push
mov
cli
pushf
xchg
dec
test
rcl
repz
mov
(bad)
push
arpl
pop
ds
sbb
xchg
pop
sbb
int3
arpl
leave
inc
js
jnp
fild
jmp
out
xor
cmp
cmp
mov
lds
imul
xchg
into
inc
cmps
mov
hlt
jno
(bad)
out
fdivrp
outs
jb
imul
xlat
cmp
les
sub
int3
repz
ds
cmc
xchg
cmp
push
or
int3
sbb
fild
mov
iret
call
pop
(bad)
mov
jle
pop
cmp
fdiv
jp
and
not
push
xor
jno
sbb
in
sub
js
jns
and
jno
test
int
add
pop
jle
fistp
into
inc
push
pop
xchg
pop
sub
add
sbb
sub
mov
cld
dec
jmp
(bad)
aas
(bad)
xor
add
in
sbb
mov
lods
mov
pop
pop
out
rcl
clc
loopne
mov
test
lds
retf
retf
inc
or
aas
mov
out
in
jbe
push
cmps
in
lea
xchg
mov
out
jb
jno
push
push
ror
cld
shr
dec
add
push
cdq
iret
mov
sbb
mov
sub
cmp
xchg
ins
scas
fisubr
mov
cmp
or
dec
push
mov
pop
dec
sbb
cmp
jg
xchg
fs
xchg
jae
pushf
pop
and
icebp
jae
fbld
pushf
push
adc
mov
mov
mov
cwde
ret
inc
pop
sub
repnz
adc
js
push
popf
sub
jo
mov
push
mov
xchg
pop
or
fisttp
mov
fwait
inc
xchg
pop
inc
adc
popa
jp
add
ret
xchg
xor
retf
mov
leave
mov
mov
mov
and
lahf
push
call
out
or
sub
mov
in
mov
(bad)
clc
mov
in
push
mov
sbb
jle
push
in
mov
aas
push
sti
mov
mov
outs
sbb
stc
outs
mov
inc
shr
adc
std
out
pusha
mov
(bad)
cli
push
cld
add
cmp
sub
aas
jne
cmp
cmp
mov
retf
imul
push
sub
pop
ret
jge
fst
out
shl
aam
popa
ret
mov
imul
lahf
scas
xor
push
stos
js
stc
(bad)
jecxz
mov
imul
lock
pop
cmp
cmp
mov
mov
test
iret
sub
push
xor
adc
cmp
mov
fucomip
out
mov
pop
mov
xor
adc
adc
mov
mov
mov
dec
retf
mov
iret
adc
test
adc
push
stos
dec
mov
outs
cmp
jns
data16
jp
stos
movs
sbb
jnp
xlat
cld
dec
cwde
dec
lock
inc
cld
xor
popf
cli
push
inc
popf
mov
add
out
lods
xor
or
pop
data16
das
jle
cmp
and
ins
push
mov
mov
jb
pop
retf
mov
dec
pop
gs
mov
repz
push
js
mov
xchg
dec
cmp
xchg
cmps
adc
xchg
iret
xchg
mov
call
jg
repz
out
pop
ss
mov
icebp
push
stos
push
jo
aam
pop
push
jmp
mov
push
outs
jge
xchg
jae
ss
(bad)
mov
sti
xchg
fisttp
addr16
scas
fs
stc
(bad)
sbb
jle
jmp
shl
jmp
mov
loopne
pop
push
sti
scas
sar
mov
outs
shl
xor
pop
sub
mov
mov
mov
adc
dec
int
xchg
or
pop
sti
mov
dec
xor
sbb
movs
sbb
inc
sbb
cmc
movs
or
aad
imul
ret
xchg
cmp
(bad)
mov
in
mov
jmp
ja
inc
jb
aaa
nop
xor
or
rcr
and
push
mov
aas
xor
lahf
bound
std
jnp
push
std
jnp
fwait
jecxz
jbe
imul
xchg
mov
fld
dec
xchg
push
(bad)
aas
xor
add
or
and
dec
outs
sbb
mov
push
retf
call
jmp
xor
ret
inc
inc
int
sub
sub
sub
fist
les
movs
cmp
ins
pop
das
loope
aaa
sahf
xchg
and
sbb
xlat
adc
mov
and
mov
sub
mov
pop
out
push
les
sub
inc
scas
in
add
aam
cli
fsubr
jge
pop
fst
stc
add
ds
icebp
js
movs
mov
cmp
imul
jg
repz
adc
or
dec
jmp
and
push
mul
sub
out
jge
stc
div
fisttp
cmp
xchg
pop
push
add
out
(bad)
mov
xchg
xlat
hlt
std
cmp
jmp
mov
into
repz
fwait
std
cld
mov
mov
pop
mov
mov
out
sti
push
adc
dec
cmp
stos
jp
cmp
iret
scas
popa
pop
jl
or
sub
dec
js
mov
sbb
and
movs
cmc
call
and
sar
imul
mov
mov
mov
mov
add
or
xor
push
cld
ret
jl
jle
jmp
adc
pop
push
jo
cmp
repnz
out
ret
lock
imul
xor
clc
(bad)
mov
cmps
fistp
cdq
jle
popa
icebp
ret
xchg
and
ins
dec
je
ds
leave
pop
add
dec
hlt
xchg
gs
inc
pop
push
out
inc
fcmovu
adc
cmps
cmps
mov
dec
cs
cwde
xchg
(bad)
xchg
push
cmp
add
and
cwde
and
jne
and
(bad)
lds
push
ret
and
pop
mov
xchg
pop
js
test
fnstenv
test
sub
push
mov
add
hlt
mov
sbb
jno
call
in
jl
mov
mov
sub
jb
shr
pop
out
scas
sbb
mov
das
and
jl
cmps
adc
jge
pop
or
fidivr
cli
mov
repz
mov
mov
ds
pop
jae
ret
cmp
shr
jg
xor
mov
movs
adc
add
xchg
(bad)
mov
xchg
fs
push
loope
pop
jmp
mov
pop
popa
and
ins
jmp
jp
cmps
mov
call
rol
repnz
mov
test
xchg
mov
pop
rcr
fdivrp
push
jnp
loope
mov
loope
dec
fcmovnb
scas
inc
and
mov
scas
rcr
cli
dec
pop
and
cmp
jo
sub
je
in
dec
xchg
(bad)
cld
je
fisubr
mov
(bad)
leave
jnp
adc
fcom
and
lock
pop
jb
fist
mov
popa
cmp
(bad)
out
mov
fdivrp
jne
sti
std
sar
mov
ret
and
cmp
adc
cmp
push
push
dec
retf
pop
sub
ret
enter
or
xchg
lock
enter
add
cmps
pop
(bad)
loopne
int
movs
sbb
pop
sub
sub
adc
mov
test
mov
shl
or
xchg
ror
popf
jno
cdq
cli
sti
ins
or
pop
sbb
pop
pop
jecxz
dec
jo
scas
aas
jle
aaa
pop
sbb
scas
imul
fisttp
ds
and
retf
add
xchg
pop
jmp
lock
(bad)
out
xchg
jbe
imul
mov
xchg
adc
ret
jecxz
or
shr
mov
(bad)
fnsave
movs
mov
inc
movs
mov
and
dec
pusha
jbe
fnstenv
jae
shl
rol
cmp
fs
jmp
imul
scas
retf
jae
pushf
mov
(bad)
add
add
mov
push
mov
xchg
hlt
push
popf
mov
jmp
(bad)
sbb
jmp
or
mov
mov
fbstp
xchg
icebp
mov
cli
sbb
push
retf
aas
psubw
test
(bad)
jbe
pushf
repz
(bad)
mov
shl
pop
les
out
mov
cmc
lds
iret
xchg
adc
stc
or
gs
pop
psubsw
xchg
sti
xor
and
pop
(bad)
lea
ja
mov
loope
adc
pop
out
das
mov
pop
dec
sub
jo
pop
xchg
iret
dec
fdiv
jmp
cwde
ds
inc
lods
ins
jae
mov
mov
adc
jbe
int
pop
les
movs
sti
cmp
icebp
pop
mov
icebp
lods
mov
jnp
jmp
cs
ret
dec
sbb
dec
sahf
fidivr
or
out
push
pop
xchg
xlat
imul
ficomp
pop
out
loop
and
out
mov
(bad)
and
xor
inc
mov
xlat
sar
(bad)
retf
(bad)
pop
sbb
mov
sbb
jl
movs
push
(bad)
jecxz
mov
jae
jne
sahf
sar
add
in
out
out
xchg
sar
in
xchg
aas
mov
jg
sbb
jl
dec
xchg
mov
jo
shl
lods
mov
into
std
out
mov
jl
lock
adc
ffreep
cmp
sub
cld
adc
push
mov
jo
in
rcl
scas
pop
daa
std
call
fldenv
test
out
sub
ss
sbb
add
dec
pop
std
mov
push
add
push
sti
inc
rol
inc
aas
aad
cmc
rcl
gs
jbe
sub
cmp
jl
(bad)
fwait
scas
nop
movs
fucomip
(bad)
push
sub
sti
aam
xchg
mov
jg
test
adc
loope
push
mov
in
out
fild
out
mov
in
jnp
push
mov
or
xor
or
test
out
mov
ret
mov
jl
cmp
dec
sub
push
imul
aaa
pushf
inc
inc
add
gs
push
jl
repnz
retf
jne
je
bound
cmp
sub
or
sub
js
or
xchg
ja
inc
add
sar
in
pop
sub
and
es
jmp
sar
js
ja
addr16
int
sub
pop
(bad)
jmp
jnp
test
mov
push
mov
inc
cmp
retf
stos
call
cwde
cli
outs
jecxz
in
ds
int3
mov
mov
lahf
sub
pop
adc
outs
mov
jb
stos
repnz
fidivr
fmul
dec
sti
in
cmp
xchg
xor
repz
add
cdq
ret
sub
or
jle
sub
sbb
ds
inc
jbe
popf
mov
loopne
lahf
push
mov
mov
mov
add
in
mov
inc
aaa
gs
push
or
in
jnp
js
sbb
int
(bad)
adc
int
fidivr
dec
fimul
xchg
xchg
repz
scas
add
mov
(bad)
repz
cs
shr
ja
sar
cmps
sti
je
out
pop
and
mov
jno
je
or
add
loop
jno
lods
cwde
pop
mov
xchg
adc
ins
scas
dec
shr
popf
mov
mov
or
(bad)
jae
mov
iret
dec
add
iret
mov
add
pop
jl
lea
pop
aam
pop
mov
enter
sub
and
mov
loope
and
sub
lea
sbb
jo
dec
inc
in
sub
test
ret
pop
adc
xchg
pop
std
mov
and
adc
jae
xchg
sub
loopne
inc
dec
int
loopne
and
(bad)
es
sbb
push
add
mov
imul
xlat
add
mov
iret
jge
mov
jl
loopne
outs
out
ja
xchg
add
add
lea
lahf
addr16
out
cmp
fisub
ins
dec
jle
shl
movs
imul
stos
and
sahf
jb
jae
rcr
jmp
mov
out
push
sar
mov
sbb
jne
jecxz
ret
mov
hlt
sahf
ret
xor
jmp
stos
cld
pop
loop
jns
pop
push
jbe
sbb
jb
xchg
sub
mov
lock
add
mov
pop
mov
mov
inc
sub
pop
loop
adc
shr
xor
sar
shl
adc
push
dec
(bad)
jle
xchg
push
pop
cmp
sub
repnz
jb
mov
out
mul
sbb
in
(bad)
or
out
mov
ins
shl
jns
dec
mov
sti
push
ds
repnz
shr
fucomi
jmp
fwait
outs
call
fcom
cli
hlt
pop
pop
push
not
repnz
pop
cwde
mov
rol
cmp
jl
in
(bad)
cmc
outs
mov
dec
hlt
cs
ficomp
std
jl
jmp
addr16
mov
leave
cmp
dec
add
test
dec
dec
add
jmp
adc
xlat
fstp
call
jns
lea
imul
aad
pop
push
mov
mov
adc
add
pop
adc
lods
test
add
sbb
adc
inc
popa
and
jmp
ds
or
into
lock
cmp
jle
mov
mov
std
scas
lahf
jo
jle
ror
jl
mov
jge
scas
lahf
adc
and
mov
repz
or
cdq
(bad)
mov
inc
inc
jne
(bad)
test
das
push
mov
xor
push
mov
imul
fisttp
pop
add
inc
into
out
retf
dec
cmp
lahf
mov
mov
push
cmps
sbb
ja
push
pop
cmp
sar
cmp
dec
pop
addr16
sub
imul
xor
push
dec
dec
jge
data16
shl
ds
pop
inc
mov
test
loope
out
cli
dec
imul
rcl
iret
repz
mov
sub
(bad)
cdq
ror
out
cmp
test
test
cmp
mov
imul
js
cmps
fld
iret
repz
xchg
and
pop
xchg
xchg
adc
push
shl
inc
dec
cdq
jl
mov
lods
mov
jl
xor
ret
data16
cmp
in
jge
adc
xor
aas
and
rcr
xchg
pop
stos
retf
push
aas
leave
mov
add
xlat
mov
mov
and
cmp
push
repz
inc
sbb
ins
in
push
stos
mov
mov
and
push
mov
dec
hlt
sub
xchg
push
sub
sub
push
add
mov
fwait
dec
fidiv
xchg
mov
in
mov
ret
jmp
scas
ret
test
or
lock
jg
mov
or
call
pop
cmp
jg
(bad)
jno
rcr
ja
jg
outs
push
xchg
fistp
adc
sub
sub
jmp
retf
push
cli
clc
cmp
arpl
or
int
sbb
jnp
or
mov
sti
push
popa
mov
hlt
lods
fcomip
xchg
into
lods
sbb
ss
call
sbb
out
cmc
sub
xlat
jg
push
out
sbb
inc
clc
mov
mov
cmps
or
test
retf
std
pop
cmps
jnp
ins
jge
mov
push
and
add
leave
je
popf
inc
xchg
rcl
out
pop
rcr
stos
int
add
stos
inc
aas
stc
int3
clc
repnz
loope
pop
sub
adc
cli
mov
stc
in
out
ffreep
bnd
dec
cli
ss
mov
mov
cmp
dec
cmp
jmp
retf
xlat
icebp
aaa
int3
icebp
mov
ret
cmp
ret
sub
cmp
(bad)
pop
sbb
sar
jmp
repnz
xlat
clc
cmp
retf
(bad)
jmp
fnstcw
ja
scas
jecxz
ds
inc
loop
dec
sar
cld
cld
xchg
cmc
out
jl
fs
mov
js
push
xchg
and
out
(bad)
push
or
or
cld
pusha
and
xlat
adc
mov
adc
or
ficomp
ins
ds
mov
repz
iret
sub
xlat
imul
(bad)
(bad)
aad
fistp
jns
xchg
pop
cli
outs
mov
push
scas
out
jge
inc
mov
into
int3
xor
or
out
jge
inc
jae
pop
out
and
lods
mov
outs
out
cld
aam
loopne
iret
stos
add
enter
sbb
inc
adc
cmc
add
arpl
stc
out
(bad)
mov
or
sahf
aas
arpl
gs
lahf
fdiv
mov
sbb
iret
jnp
movs
push
pslld
gs
fisttp
mov
xor
test
push
jae
movs
add
das
adc
inc
mov
jno
mov
add
push
sub
push
shl
hlt
pop
(bad)
loopne
xor
sahf
xchg
(bad)
cmp
pop
mov
or
ja
fsubrp
xchg
loope
sbb
mov
outs
mov
xlat
in
or
outs
jecxz
pop
ret
mov
jne
ja
jp
fcomp
pop
nop
adc
inc
dec
jg
mov
cmp
stc
out
in
pop
mov
jae
out
or
mov
lock
imul
(bad)
jae
scas
pop
pop
data16
dec
mov
inc
dec
add
sbb
pop
mov
iret
xor
mov
mov
movs
js
fwait
xor
mov
popf
icebp
fidiv
js
mov
sbb
push
adc
outs
rol
call
call
xor
fistp
std
outs
mov
(bad)
hlt
(bad)
dec
fisttp
mov
and
test
(bad)
loop
sub
leave
jl
mov
(bad)
sahf
sbb
ret
push
sbb
sub
mov
xchg
xor
imul
jmp
push
fnstenv
out
std
jnp
clc
jae
daa
mov
fimul
clc
mov
or
in
mov
xchg
in
in
mov
outs
or
ss
adc
dec
repz
inc
fdivr
out
mov
not
inc
pop
mov
pop
sub
push
cld
xor
dec
sti
cmc
mov
mov
loop
cmps
pushf
sub
sub
jl
scas
adc
cmps
outs
xlat
mov
jne
pop
aad
jecxz
lds
mov
outs
ret
out
test
mov
adc
std
jle
add
mov
pushf
not
mov
xchg
add
lea
lods
mov
lahf
jl
mov
bnd
mov
lds
test
mov
ds
mov
cdq
jmpw
(bad)
std
dec
outs
push
and
jnp
hlt
xchg
jecxz
jl
jmp
add
mov
and
or
push
mov
lahf
mov
in
shl
loop
cmp
fs
mov
call
dec
and
and
inc
and
cld
cmp
jae
cwde
ds
scas
dec
inc
cld
jl
cs
mov
scas
mov
dec
and
js
cmp
xor
shl
mov
jns
retf
mov
outs
js
adc
mov
(bad)
push
xchg
dec
jmp
in
addr16
clc
imul
jmp
push
lds
mov
fld
outs
icebp
mov
aas
sar
mov
scas
std
sub
scas
loopne
add
in
and
or
stos
xor
fisttp
jbe
ror
jnp
fdiv
sahf
push
jle
dec
pand
test
ja
push
mov
pop
std
pop
call
mov
pop
stc
cmp
into
and
lods
lea
aaa
sbb
call
mov
movs
stc
lods
nop
mov
lods
das
jmp
bound
adc
inc
repz
inc
jecxz
loop
add
jle
jecxz
(bad)
mov
pushf
aam
sub
jnp
popf
add
xor
loopne
xchg
cdq
js
ja
in
lods
or
push
outs
idiv
jo
sbb
adc
out
imul
ds
(bad)
or
mov
ret
leave
hlt
mov
neg
mov
daa
out
les
pop
cmps
jp
fchs
loope
inc
sti
call
stos
sbb
imul
jae
(bad)
push
(bad)
test
ins
or
and
or
popa
in
mov
pop
pop
add
ja
inc
pusha
retf
inc
mov
and
(bad)
lock
sub
pop
js
fwait
inc
push
jb
jmp
gs
mov
scas
xor
cmps
mov
test
jns
(bad)
(bad)
sbb
sub
mov
dec
out
sub
add
pushf
cmp
loopne
aas
ror
mov
rcl
mov
lahf
add
out
ss
mov
mov
xchg
mov
jp
cmps
call
fsubr
sar
cmp
add
or
cmc
ss
test
mov
je
jbe
shl
cwde
mov
pop
pop
or
push
mov
lea
out
cmp
mov
or
jge
mov
(bad)
and
and
(bad)
mov
xlat
fcmovu
dec
lods
xor
dec
test
mov
movs
sbb
rcl
icebp
sahf
push
js
mov
xlat
dec
mov
mov
xlat
mov
dec
jecxz
fistp
jmp
pop
out
sub
mov
loope
dec
gs
jecxz
test
cmp
pop
sbb
mov
and
cmps
or
xor
jg
std
jg
std
inc
into
pusha
enter
sbb
imul
imul
inc
jle
sub
pop
rcl
imul
pusha
mov
add
pop
cs
xchg
sar
mov
and
mov
jmp
pop
(bad)
jnp
mov
xchg
repz
mov
and
inc
lahf
std
retf
push
imul
out
pop
jb
sub
mov
test
inc
call
push
add
push
pop
mov
icebp
sub
dec
sbb
cld
dec
xor
dec
xlat
iret
jge
jg
push
mov
mov
mov
enter
cmp
adc
lods
mov
into
sbb
or
jne
test
add
fs
adc
loopne
mov
cmps
sub
push
jae
int
push
cmp
cli
sbb
int3
push
or
and
in
ja
xchg
cmp
imul
ds
mov
mov
xchg
inc
div
push
add
stc
scas
jmp
pop
sub
or
loop
cmp
mov
and
je
cmc
mov
push
call
and
add
push
lods
jae
popa
fldcw
loopne
std
test
dec
and
fld
mov
mov
sub
add
mov
data16
retf
sbb
das
or
popa
sbb
(bad)
push
jnp
retf
pusha
imul
in
sub
push
(bad)
inc
ja
and
outs
int
jle
mov
ja
clc
loopne
xor
aam
data16
add
add
repnz
iret
sub
cmp
dec
sti
scas
cmp
push
push
lock
std
cmps
(bad)
outs
cs
jge
jle
jnp
fsqrt
movs
lea
aaa
sub
call
(bad)
pop
ds
mov
sbb
sub
add
int3
xchg
push
push
fisubr
adc
pusha
pop
push
cwde
sbb
sub
pop
pusha
and
cdq
(bad)
add
mov
mov
popa
fs
les
push
popa
data16
xchg
mov
mov
pop
add
push
add
push
stc
xchg
lahf
popa
in
and
sub
stos
pop
xchg
push
sub
out
pushf
push
adc
xchg
imul
retf
xor
add
jne
je
lea
cmp
fld
test
pop
adc
out
sbb
fs
nop
dec
fsub
or
and
scas
lods
push
cs
mov
scas
out
pushf
call
out
test
pop
ins
pop
mov
in
xchg
jl
iret
sbb
in
out
pop
inc
jp
mov
push
jmp
outs
dec
jbe
pop
popf
jl
(bad)
ds
add
jb
rcr
add
add
retf
scas
jmp
fwait
cmps
ror
cli
cs
jp
cmp
sub
icebp
mov
pop
int3
mov
xor
push
imul
xchg
pop
adc
leave
ret
mov
push
or
sub
pop
xchg
push
loope
retf
iret
int3
test
lods
xor
or
xchg
sahf
inc
dec
imul
jle
or
repnz
fistp
pop
pop
jg
pop
test
(bad)
xor
fcmovnb
mov
lods
xchg
loopne
ret
inc
inc
pusha
pop
movs
sub
(bad)
and
call
std
jg
mov
mov
loope
clc
imul
mov
stc
push
int3
mov
loope
mov
and
loop
jg
ins
add
or
pusha
mov
pop
pop
xlat
in
add
pop
stc
in
adc
or
xchg
pop
test
inc
dec
sub
pop
test
and
dec
iret
hlt
loop
out
div
cmp
in
int3
punpckhbw
push
and
lods
adc
rcl
test
ins
cmp
scas
mov
push
or
push
dec
cwde
fld
push
xchg
imul
mov
or
fistp
xchg
loop
sub
lods
pop
push
lods
add
mov
cli
xchg
xchg
cmp
push
ins
in
mov
adc
and
not
in
pop
fistp
(bad)
movs
lahf
iret
int3
ror
les
sbb
dec
ss
in
xchg
ficomp
xor
clc
jmp
jmp
push
repz
pusha
idiv
push
int3
add
push
ss
push
loop
retf
das
scas
les
mov
mov
mov
xchg
les
inc
jg
pop
in
jb
sbb
pushf
push
fs
xchg
sub
and
lods
and
cdq
shr
sahf
out
cmp
outs
xchg
cs
sub
xor
clc
dec
(bad)
mov
das
cmps
iret
(bad)
cmps
dec
not
retf
push
push
xchg
popa
jmp
mov
cmp
and
dec
inc
inc
push
pop
(bad)
sbb
adc
retf
daa
xor
adc
cmp
cmp
push
aad
les
sbb
imul
mov
inc
mov
push
mov
mov
lock
sbb
leave
sbb
add
mov
aam
pop
push
fnsave
pop
fild
and
ss
gs
and
jae
pop
push
pop
add
leave
mov
iret
lahf
cmp
cld
lahf
cmc
jle
stos
mov
mov
mov
push
cwde
jae
cmps
lods
sbb
xor
jno
xor
inc
xor
mov
test
movs
pop
stos
out
inc
sbb
jl
cs
mov
popf
popf
dec
test
sbb
mov
imul
fimul
mov
sbb
push
jbe
int
and
and
neg
push
sub
xchg
dec
and
bound
mov
mov
sbb
mov
retf
nop
cmp
xchg
mov
dec
xchg
js
shr
add
fidivr
mov
inc
fs
inc
in
rol
cmp
mov
push
test
aaa
add
cmp
xchg
repz
xchg
test
mov
pop
adc
xor
idiv
clc
ror
mov
sbb
pop
or
cmp
push
repnz
mov
jmp
mov
jl
fninit
mov
jne
dec
jb
add
sahf
movs
mov
jmp
jb
jmp
test
xor
loopne
sar
xchg
out
jmp
out
stc
jg
lods
sbb
xor
movzx
popf
test
std
imul
xchg
jle
mov
add
xor
das
mov
jbe
sub
xor
(bad)
loope
jl
dec
loop
mov
dec
mov
mov
xchg
cld
or
or
push
sbb
xchg
aad
pop
mov
popa
call
addr16
and
or
pop
std
sti
das
mov
pop
jp
es
into
movs
mov
jp
cmp
and
pop
mov
push
xchg
cli
fnstenv
fucomi
das
iret
and
outs
test
(bad)
mov
pop
clc
cmp
in
fwait
aam
pop
data16
jle
popf
inc
cwde
sbb
jnp
iret
xor
push
inc
adc
and
mov
jo
jg
mov
scas
call
pop
push
movs
out
xor
mov
pusha
sbb
push
inc
xor
cdq
out
ins
dec
push
push
dec
icebp
dec
dec
sbb
sbb
outs
mov
inc
adc
jmp
ss
fs
jo
hlt
and
push
mov
add
js
es
into
dec
mov
push
retf
pop
pop
mov
jb
aad
sar
pop
stos
sbb
cdq
(bad)
dec
xchg
(bad)
push
(bad)
loop
sub
out
xor
jmp
pcmpgtw
pop
cmp
mov
pop
in
xor
daa
or
push
cmps
sub
mov
sahf
pop
push
icebp
mov
cmp
push
mov
fdiv
mov
and
inc
jl
xchg
jno
pop
pushf
sahf
sub
xchg
xor
pop
lea
aam
fucom
imul
xor
ins
mov
call
(bad)
jmp
adc
cmp
xchg
movs
mov
rcl
hlt
sub
rol
stos
je
or
xchg
add
cmp
not
mov
movs
jp
ret
jbe
jmp
xor
ins
inc
adc
rcl
movs
mov
adc
es
and
dec
add
(bad)
repnz
aas
or
stos
movs
jg
bound
sub
dec
hlt
(bad)
mov
bound
ret
nop
loop
xor
mov
dec
ret
leave
jo
stc
xchg
pusha
xor
mov
sbb
cmps
or
add
jmp
fcomi
mov
cli
movsx
jecxz
xor
jecxz
cmp
scas
scas
mov
jl
push
cld
enter
xchg
arpl
(bad)
pop
xchg
ins
jecxz
xor
pop
dec
cmps
icebp
adc
or
sub
scas
fwait
imul
aaa
and
mov
fld
adc
push
or
push
stc
mov
fcomp
popa
aam
dec
test
js
(bad)
jnp
xlat
add
in
les
push
jne
sbb
inc
and
lea
stos
jmp
or
iret
inc
pop
sti
cmps
pop
mov
jns
repnz
and
icebp
cmp
mov
out
xor
test
retf
int
loop
jl
pop
sub
adc
loope
inc
call
call
cwde
dec
cmp
in
jmp
inc
mov
xchg
mov
inc
mul
xchg
dec
std
add
jns
jle
loop
mov
and
popa
in
loope
mov
enter
mov
mov
pop
jle
inc
xor
add
sti
or
jg
push
mov
push
ret
js
data16
ror
mov
jecxz
mov
mov
and
clc
sbb
and
inc
retf
inc
adc
and
sbb
nop
lods
movs
(bad)
mov
(bad)
cmp
dec
arpl
mov
or
jb
out
leave
or
imul
cwde
cwde
or
(bad)
push
push
ret
lahf
jmp
scas
hlt
xchg
jns
or
enter
cmc
sbb
neg
jl
mov
not
xchg
not
pop
pop
sti
sti
mov
sti
imul
push
jmp
and
push
cmps
cdq
mov
mov
sbb
mov
add
pop
push
in
hlt
clc
ins
mov
xchg
xchg
cwde
shl
movs
(bad)
mov
scas
int3
inc
xor
sub
push
xchg
ret
leave
xor
dec
jmp
shr
outs
dec
stc
xor
add
pop
retf
leave
sub
xchg
shl
sar
inc
out
jle
push
inc
push
or
dec
not
push
cmps
pop
xchg
in
inc
jo
movs
jo
add
add
push
or
gs
in
stos
les
in
and
dec
dec
mov
cmps
out
popa
in
add
lods
and
dec
inc
jge
jno
aas
xchg
pop
sar
sub
xor
mov
add
imul
rcl
cmp
push
std
adc
xor
ss
(bad)
push
fistp
rcl
iret
adc
jnp
pop
not
xchg
xlat
loop
jl
ficom
or
mov
repz
jge
xor
mov
out
mov
xchg
out
jmp
sbb
and
popf
jno
call
adc
div
out
mov
and
outs
mov
call
inc
sar
test
push
call
into
das
arpl
stos
add
adc
ror
ins
jle
(bad)
cmp
dec
mov
loop
or
cmp
stc
test
sti
adc
jo
mov
loop
stc
fidivr
xchg
aas
or
xor
les
inc
mov
pop
sti
or
iret
ja
les
scas
xor
pop
es
xor
jae
mov
pop
xchg
pop
mov
sub
mov
cmp
ret
cdq
arpl
iret
push
dec
repz
cli
jno
push
scas
xor
test
xor
scas
fsubp
pusha
xchg
iret
pushf
cmp
imul
fdivr
xor
sub
jne
in
sbb
rcl
xchg
neg
xchg
cmps
xchg
mov
jecxz
mov
or
jmp
movs
jbe
jg
clc
bound
call
and
fs
jno
sub
xlat
cmp
mov
adc
sbb
sbb
and
push
push
retf
aaa
or
xor
lods
test
cwde
iret
fistp
mov
sub
sti
mov
retf
inc
mov
mov
mov
scas
push
(bad)
pop
dec
jmp
aas
pop
dec
xchg
lea
dec
outs
pusha
push
sti
mov
out
ins
mov
(bad)
loope
sub
std
icebp
push
xchg
cmps
das
mov
cmp
(bad)
and
jmp
xlat
cmp
jbe
cmp
pop
(bad)
movs
adc
jl
imul
ficomp
dec
add
arpl
pop
or
jb
fstp
add
jo
jge
sbb
lahf
add
cld
push
cwde
cmp
xchg
cwde
cmps
mov
inc
and
cmps
psllq
lahf
std
xchg
clc
jae
mov
xchg
jle
adc
pop
(bad)
or
sbb
sbb
daa
add
adc
mov
loop
pop
(bad)
fsub
lea
dec
adc
clc
xchg
jmp
loope
addr16
lods
xchg
clc
cmp
ins
bswap
jmp
or
stos
aam
xlat
or
push
add
les
sbb
pop
clc
push
div
call
cmp
sbb
outs
pop
xchg
add
cmp
cmp
clc
leave
sti
mov
cld
rcr
(bad)
fstp
xchg
push
sub
pop
(bad)
rcl
ret
sub
cmc
xor
mov
jle
shl
fld
aam
out
sub
andnps
fidiv
jp
rcl
aaa
add
icebp
les
and
repnz
ins
xchg
outs
icebp
popf
jae
lahf
test
mov
ror
cmps
mov
repnz
jnp
test
mov
(bad)
cmp
outs
adc
sub
mov
dec
mov
sub
test
data16
mov
jecxz
mov
lahf
sbb
pop
lods
jecxz
inc
leave
into
ds
dec
push
neg
sub
cmp
arpl
jns
add
and
stos
or
adc
dec
xchg
cmps
dec
and
cmps
xor
out
mov
ins
call
mov
movs
sti
jno
push
pop
push
mov
out
mov
outs
inc
(bad)
and
or
add
mov
and
(bad)
or
jge
fmul
xchg
rcr
and
dec
pop
aam
retf
ds
in
cld
cmp
shl
loopne
faddp
gs
add
sbb
cmp
cmp
bound
or
and
sti
es
cdq
adc
ret
(bad)
jmp
dec
fadd
(bad)
jmp
pop
mov
mov
mov
dec
js
loope
push
pop
fdivr
pop
jge
pop
(bad)
mov
jle
inc
mov
sti
ret
xor
mov
lods
pusha
fbstp
xor
fucom
sub
push
xchg
hlt
dec
push
mov
or
aam
inc
loop
mov
or
ss
fiadd
cmp
push
sbb
jo
cdq
fld
push
xchg
push
cmp
popa
inc
(bad)
movs
dec
das
call
rol
xchg
adc
out
xor
sar
sub
sar
xchg
ins
scas
xchg
arpl
push
push
inc
pop
sub
add
ja
icebp
scas
mov
add
test
cmp
fisubr
jmp
mov
ja
int
into
popa
loopne
shr
les
mov
int
sahf
enter
xchg
pop
jno
jl
cmp
xchg
mov
cmp
mov
mov
jmp
test
mov
sbb
sbb
and
repz
add
loope
xor
sbb
sub
push
jmp
pop
mov
push
fnstenv
sub
xchg
ins
aaa
shr
icebp
lods
jecxz
fst
pop
adc
add
jno
sar
loope
stos
jge
xlat
test
cmp
out
dec
and
xchg
dec
aas
adc
mov
nop
les
jno
in
movs
js
aam
mov
adc
jns
add
ret
int
nop
sar
fs
ja
(bad)
adc
mov
mov
or
jle
das
adc
mov
xchg
cli
(bad)
cmps
imul
xchg
cmp
xor
dec
mov
cli
or
std
dec
push
xchg
mov
inc
sbb
pusha
push
push
mov
mov
leave
addr16
test
cmps
stc
sahf
imul
mov
jae
mov
je
test
loopne
pop
jns
jnp
fs
pop
jo
mov
dec
out
mov
(bad)
out
jb
xchg
jne
xor
xchg
fmul
mov
repnz
push
loopne
cmp
adc
out
xor
xchg
dec
adc
sbb
and
add
mov
and
mov
jbe
push
xlat
ds
fisubr
jmp
lea
mov
jbe
mov
and
ror
xor
xor
add
retf
clc
mov
ss
in
ret
js
sub
jge
sbb
test
xchg
pop
loop
sbb
outs
popa
push
aad
add
push
push
stos
xor
mov
inc
jnp
cmp
add
sbb
add
sbb
stos
mov
and
push
and
cmp
sbb
test
pop
cwde
cld
sbb
aad
ss
sub
mov
xor
and
rcr
and
or
sbb
dec
js
inc
dec
and
es
movs
int
daa
cmp
jns
adc
pop
and
repnz
movs
mov
test
mov
jnp
inc
and
loop
lods
nop
dec
mov
pop
mov
jp
or
leave
or
out
lea
iret
xchg
pop
clc
outs
xor
lock
das
rol
cmp
in
adc
mov
mov
sti
push
pop
push
xor
mul
sub
xor
out
popf
sub
xchg
mov
mov
ficomp
jo
mov
jns
add
loop
(bad)
loopne
lock
mov
mov
cmp
pop
test
rcr
shr
and
pushf
pop
and
stc
xchg
sbb
jmp
sti
adc
in
es
push
fwait
shl
cmps
int3
push
inc
adc
or
mov
sbb
push
mov
je
shr
lldt
cld
pop
fadd
jle
fiadd
jge
enter
(bad)
cwde
inc
repz
cwde
push
push
dec
adc
pop
lods
out
pusha
xor
lods
stos
and
or
fwait
xor
mov
cmp
xor
and
out
test
sbb
and
cmp
(bad)
push
pusha
add
(bad)
push
push
sbb
in
or
cdq
mov
mov
lds
loopne
jns
stc
inc
mov
xchg
(bad)
lock
and
icebp
push
push
loopne
pop
sbb
mov
aas
fisubr
mov
sbb
jecxz
or
or
mov
pop
push
jl
fisubr
pop
aam
adc
jle
sub
pusha
push
and
jno
ins
fiadd
xchg
add
xlat
adc
repz
mov
aaa
int
lods
sbb
hlt
out
xchg
mov
add
stos
push
cwde
out
mov
or
jp
daa
add
mul
jae
(bad)
fdivp
lock
hlt
jge
and
or
mov
in
or
push
(bad)
and
jl
mov
sub
(bad)
std
push
std
xchg
pop
mov
dec
aas
sub
pop
xchg
jns
sbb
out
pusha
add
jae
and
jp
scas
mov
in
or
mov
add
xor
ins
mov
iret
outs
ror
lock
outs
mov
and
popa
jo
mov
enter
inc
xrelease
fnstenv
xchg
fs
xor
(bad)
mov
mov
pop
sub
adc
js
ins
mov
cmp
sub
icebp
mov
adc
mov
pop
fiadd
ret
ds
jg
jnp
push
mov
and
inc
push
push
stos
or
cmp
and
test
add
popf
rcl
or
fisttp
mov
sub
cmp
cli
out
jae
(bad)
xor
cmp
shr
and
inc
rol
cmp
xchg
les
dec
jge
enter
adc
and
in
or
in
clc
js
or
pop
(bad)
push
nop
shl
jge
ret
sub
and
inc
jbe
das
mov
pop
shr
rcl
das
into
mov
clc
pop
push
push
mov
fisttp
xchg
dec
pop
inc
fdivr
mov
adc
or
arpl
push
adc
jae
daa
pop
jge
and
mov
int
test
dec
sti
mov
jnp
pop
mul
repz
(bad)
jae
xchg
xchg
and
(bad)
and
inc
sti
stos
mov
sub
popa
mov
fisub
(bad)
or
sbb
(bad)
cwde
out
scas
ins
xor
inc
jmp
jmp
int
mov
sbb
out
stos
inc
shl
(bad)
lock
dec
repz
sbb
pop
jg
aaa
stos
mov
cmp
(bad)
and
lods
cmc
stos
test
iret
jecxz
jb
bound
sub
jle
jmp
or
xchg
or
dec
aaa
or
stc
icebp
add
ret
and
jmp
clc
jae
cmp
cwde
mov
push
mov
xor
adc
sub
stc
sahf
imul
mov
mov
mov
fst
inc
adc
add
push
and
cmp
stc
stos
inc
sar
loop
inc
xchg
imul
xchg
add
or
mov
enter
push
and
loop
out
test
pop
push
inc
or
lds
dec
stos
ins
or
jmp
xchg
jb
jbe
push
pop
pusha
jl
inc
adc
sub
(bad)
mov
dec
pop
pop
mov
ds
fnstcw
mov
aaa
(bad)
mov
cmc
xchg
pushw
cs
loope
mov
pop
dec
push
ja
cmps
aam
fcom
xchg
fdivr
adc
pop
pop
mov
(bad)
imul
mov
inc
or
(bad)
hlt
lods
iret
jb
mov
and
xchg
mov
retf
les
and
out
push
jl
xor
mov
or
out
test
rcr
mov
arpl
into
xor
lock
rol
and
ret
or
add
jbe
mov
imul
sub
jmp
fistp
div
add
es
loop
shr
clc
lods
popa
cmc
jg
mov
pop
(bad)
out
sbb
push
pop
nop
scas
jo
cmp
and
loope
mov
out
std
fsubrp
sbb
sahf
pop
lock
mov
and
fidivr
jmp
jbe
cmc
(bad)
cld
sub
out
inc
sbb
cmp
(bad)
iret
inc
outs
xor
inc
sar
cmps
fsubr
inc
sbb
mov
push
loope
call
cmp
test
add
xchg
das
mov
loope
xchg
add
outs
xlat
mov
sbb
push
mov
sbb
adc
jb
pop
loopne
dec
(bad)
scas
add
push
mov
fsub
ficomp
pop
ret
and
and
ret
pop
test
push
dec
movs
cmp
add
lea
icebp
jnp
shl
bound
push
mov
inc
dec
jo
stos
pop
aaa
push
iret
cmp
std
push
mov
ret
mov
sbb
jbe
stos
(bad)
mov
cmp
sahf
ret
mov
add
mov
push
push
sub
dec
ins
jp
mov
dec
sbb
fbld
call
cmp
cmc
bound
xchg
mov
xlat
mov
out
std
cmp
mov
add
js
inc
test
sbb
in
xchg
fwait
inc
leave
das
cs
xor
mov
cld
jne
aaa
mov
mov
xor
sbb
cmps
mov
mov
adc
pusha
out
dec
mov
pusha
dec
xchg
arpl
mov
jle
inc
adc
sti
repz
mov
ins
inc
hlt
jle
repz
out
ficom
mov
cmps
xchg
mov
test
repz
js
hlt
aad
sahf
jnp
mov
je
add
data16
push
add
xor
repz
pop
sahf
mov
mov
jno
fldcw
fild
cmp
add
mov
pushf
repnz
outs
repz
pushf
call
pop
js
dec
inc
gs
jne
cmps
daa
call
in
jge
popa
and
out
sub
add
lea
std
xchg
js
or
mov
repnz
pop
(bad)
sbb
mov
push
leave
or
sub
cwde
dec
add
popa
cmp
mov
test
loopne
cs
fmul
sbb
fwait
js
pop
(bad)
push
mov
aad
push
nop
xor
retf
pop
in
mov
int
aaa
push
stos
inc
cmp
fs
mov
jecxz
test
movs
mov
cmp
gs
sub
sub
jp
add
popf
(bad)
aaa
shl
loopne
icebp
sahf
retf
jnp
jge
adc
bswap
imul
mov
dec
shl
jmp
pushf
mov
into
cmp
retf
loop
loopne
adc
dec
xlat
fdivr
mov
test
daa
(bad)
jecxz
sar
jle
sub
cdq
mov
pop
outs
fs
xor
popa
push
and
and
ins
jg
lahf
test
pop
mov
jge
mov
sahf
or
xor
fcmovnbe
(bad)
cmp
push
xchg
leave
push
sub
sbb
arpl
xchg
mov
add
fisubr
nop
mov
ja
pop
js
popa
or
cmps
out
xchg
and
mov
sub
sbb
leave
jbe
jnp
enter
out
(bad)
xor
xor
stc
popf
fisttp
cld
cmp
mov
mov
div
pop
mov
loope
enter
ins
mov
mov
dec
and
mov
cs
je
pop
add
xor
dec
sbb
push
jbe
imul
xor
leave
cmp
push
scas
inc
lods
loop
addr16
retf
add
xor
hlt
and
pop
(bad)
jbe
sbb
test
data16
je
jle
pop
std
xchg
ror
push
adc
out
fsubr
xchg
mov
out
adc
icebp
cld
cwde
jae
shr
jmp
xchg
cmp
ins
ror
xlat
rol
ja
pusha
adc
and
fcmovnb
mov
and
shr
(bad)
inc
xchg
mov
js
imul
test
popa
outs
mov
in
movs
push
cmp
cmp
xlat
imul
mov
das
adc
inc
and
xchg
cmp
lahf
iret
or
mov
mov
inc
xlat
mov
adc
jle
mov
and
retf
xchg
and
and
repz
jmp
cmp
add
xlat
xor
retf
jae
and
dec
mov
push
mov
jecxz
repnz
stc
sahf
ins
xchg
mov
das
scas
cmp
aad
mov
(bad)
test
test
rcr
test
cmps
repnz
test
fiadd
dec
jae
pusha
sub
enter
ss
aas
repz
cwde
mov
push
cli
mov
ins
rcr
add
push
mov
or
xor
in
jmp
mov
aas
mov
mov
jp
mov
ret
daa
and
pusha
mov
dec
pop
jae
fsub
cld
imul
and
repnz
mov
aaa
dec
jmp
mov
cmp
pop
test
push
add
add
dec
lods
jne
test
mov
cmps
rcr
mov
adc
movs
mov
inc
jmp
or
add
out
add
in
in
push
or
add
or
pop
mov
jle
inc
add
push
jle
jle
not
pop
mov
ret
fs
mov
ds
leave
scas
loop
pop
cmp
inc
aas
sub
call
xor
retf
hlt
aam
jbe
retf
div
jnp
leave
ret
sti
inc
imul
test
ret
ret
jle
add
popa
les
(bad)
mov
repz
hlt
(bad)
pusha
pop
in
je
movs
cs
mov
aaa
mov
mov
nop
mov
xor
aad
mov
pusha
inc
mov
xchg
das
rcr
daa
out
jl
pop
fcmovu
sub
or
cwde
xor
jmp
pop
mov
ins
mov
sbb
mov
(bad)
adc
cmp
sub
and
cmp
jmp
loope
int3
cdq
lock
adc
shl
out
pop
mov
sub
mov
pop
mov
mov
mov
aas
sti
push
or
out
jle
or
xchg
ja
cld
scas
push
div
(bad)
lock
mov
dec
fsub
add
fnstenv
mov
xchg
mov
loop
inc
push
std
jp
cmc
jmp
push
and
xchg
xchg
mov
mov
sbb
pop
iret
pop
mov
popa
js
jnp
in
cdq
xchg
pop
cwde
push
xor
sub
dec
ins
repnz
ja
cmc
mov
pop
scas
mov
fimul
sub
and
std
push
push
xor
push
push
xchg
aad
pushf
aaa
inc
add
lds
lahf
outs
push
cmp
sub
pop
mov
mov
xchg
bound
je
bound
div
arpl
cmp
jmp
pop
push
and
push
add
movs
add
pusha
loopne
daa
dec
(bad)
jmp
sub
xchg
outs
ror
mov
loopne
cdq
in
push
cmp
jns
lods
xor
mov
ret
jb
shl
or
pop
dec
popf
push
fdivr
pop
pop
xor
loopne
mov
or
ss
mov
(bad)
out
pop
pop
and
leave
mov
adc
push
mov
nop
mov
or
dec
mov
xchg
xor
mov
dec
aas
sub
and
inc
imul
pop
movs
mov
arpl
(bad)
pop
jp
sbb
nop
adc
das
popa
sub
call
aas
mov
add
and
test
test
lahf
pushf
pushf
or
xchg
push
fs
sub
fwait
ror
mov
in
inc
inc
dec
leave
sahf
mov
cs
out
shr
jl
clc
mov
xchg
xchg
pop
aad
sbb
jge
clc
out
fcmovu
mov
lds
xor
and
les
popf
loopne
fidiv
js
pop
setbe
popa
dec
cld
jp
pop
mov
sub
cmc
push
adc
scas
ret
adc
inc
pop
outs
jb
not
mov
xor
and
pop
xlat
lods
pop
aaa
cmp
cs
nop
nop
clc
in
dec
aam
or
fisttp
push
mov
jnp
fidivr
jmp
in
pop
cmp
mov
add
inc
inc
or
retf
push
add
inc
mov
mov
cmp
(bad)
(bad)
mov
gs
or
xlat
jbe
and
or
movs
push
xchg
imul
(bad)
cdq
test
push
vmwrite
mul
ins
js
push
pop
mov
pushf
xchg
mov
jno
rol
cmp
fdivr
or
xcrypt-ofb
cmps
sub
pop
mov
inc
mov
(bad)
in
xchg
fstp
jae
push
popf
movs
jmp
fs
sti
add
mov
xlat
aas
jne
sqrtps
xchg
dec
out
ret
aaa
fmul
cs
pop
in
dec
mov
rcr
mov
xchg
pop
sub
or
jno
jnp
mov
retf
aad
hlt
sbb
fwait
xlat
lods
xlat
scas
in
add
jbe
(bad)
jne
jns
imul
imul
pop
jno
sti
mov
nop
out
cwde
idiv
stc
mov
jnp
test
pop
sub
rcr
jle
sbb
inc
loop
fist
fiadd
mov
lods
add
daa
popa
cmps
in
cmp
jl
and
mov
and
icebp
pop
jle
mov
fwait
sub
rcl
pop
sub
in
jno
cmp
add
stc
shl
arpl
mov
pop
out
ins
mov
into
into
pop
rcr
aaa
push
jg
popf
cmp
hlt
jmp
inc
inc
dec
mov
in
dec
jg
jno
call
mov
xchg
mov
sub
lods
lahf
iret
pop
or
mov
and
ins
push
add
push
push
add
mov
add
inc
push
pop
(bad)
test
push
pop
ret
and
mov
adc
arpl
sbb
add
ja
mov
call
sub
sub
je
inc
inc
sahf
imul
cmps
fiadd
adc
dec
leave
mov
mov
jge
or
dec
push
xor
push
imul
push
idiv
and
lock
push
mov
jno
sahf
int
icebp
faddp
stc
hlt
jbe
pop
(bad)
cs
dec
addr16
cmps
pop
scas
jmp
dec
adc
data16
inc
int
jne
mov
cwde
lahf
lock
inc
push
repnz
int3
dec
push
pop
xor
jge
cs
(bad)
lea
xor
xchg
or
inc
(bad)
sbb
mov
stos
inc
cld
loop
adc
jb
aam
sub
lods
push
sti
dec
sbb
mov
inc
jp
pop
mov
sahf
jg
pop
add
xlat
mov
(bad)
test
pop
bound
and
push
jge
xchg
clc
xchg
add
push
loope
icebp
es
icebp
cmp
iret
pop
adc
fisub
sbb
cmp
xlat
sar
inc
sbb
add
addr16
out
mov
outs
aad
xor
outs
or
mov
ds
rcl
je
cli
lea
mov
push
femms
cmc
lahf
cmp
in
addr16
stos
ins
lock
out
ins
cmp
push
js
xor
lods
arpl
push
inc
ffreep
sbb
or
ret
inc
out
rcr
xor
push
repz
fild
sbb
repz
cmp
xchg
adc
cli
test
test
jge
fcomp
clc
mov
lock
push
cdq
adc
mov
mov
jae
inc
(bad)
and
das
push
int3
outs
add
push
lea
mov
imul
cmps
mov
mov
inc
jl
adc
shl
push
cmc
popf
mov
mov
sub
icebp
cmp
fimul
jb
cmp
nop
push
(bad)
std
repnz
sub
call
cmc
(bad)
add
mov
call
mov
cmp
pop
mov
cmp
neg
(bad)
enter
cs
pop
mov
jae
or
ja
sub
fucomi
nop
cmc
out
jmp
adc
push
repnz
lahf
addr16
xor
ret
jmp
cwde
out
jae
repnz
(bad)
test
jno
ret
outs
jb
xor
(bad)
cmp
mov
(bad)
pop
pop
mov
jp
jo
xchg
mov
fsubr
icebp
lea
mov
xchg
adc
mov
xchg
dec
pop
scas
cmc
pop
inc
enter
aas
popa
add
push
(bad)
pop
loope
inc
fsub
clc
fwait
(bad)
cmp
adc
xchg
hlt
mul
mov
out
xor
js
dec
sbb
mov
jp
shl
out
(bad)
(bad)
(bad)
not
push
iret
pushf
cmp
popa
scas
fisttp
outs
mov
push
iret
ds
test
sub
inc
retf
sbb
push
cmp
cwde
fild
mov
mov
jecxz
js
xchg
arpl
nop
(bad)
popf
xor
sub
mov
pop
xchg
mov
nop
xor
push
adc
sbb
cmp
test
lock
jle
xchg
cmp
dec
test
sub
inc
and
jb
sar
cmps
xchg
push
jmp
jg
ds
aad
int3
ror
cmp
or
cli
ins
dec
mov
pop
mov
and
push
cmps
adc
mov
pop
inc
push
(bad)
stos
(bad)
push
popa
xor
xchg
or
pop
cmp
and
fs
push
bound
mov
repnz
jns
xchg
mov
call
sub
mov
fcomp
aaa
scas
pop
cmc
pushf
(bad)
push
inc
and
adc
scas
ins
mov
test
jae
test
and
inc
lock
out
add
push
mov
lods
cmc
in
fpatan
test
mov
cdq
cs
sti
retf
stc
mov
scas
pusha
out
adc
(bad)
xchg
push
xor
arpl
fistp
scas
jmp
(bad)
(bad)
push
loope
fcomp
pop
loop
inc
enter
xor
dec
cwde
xor
xchg
jns
jmp
(bad)
jmp
test
jl
mov
pop
dec
scas
out
jp
repz
pop
sbb
aas
mov
jo
je
out
jge
pop
je
push
push
xchg
mov
add
inc
mov
mov
mov
out
mov
cmps
out
loop
jmp
repz
and
out
lods
lock
outs
mov
push
fs
jnp
push
xor
retf
mov
sub
sbb
js
and
or
cmp
and
dec
adc
test
clc
adc
mov
push
or
or
lods
out
lods
adc
add
dec
data16
cmp
movs
ss
es
stos
mov
cmp
out
(bad)
push
clc
push
inc
cmp
pop
(bad)
cmp
xchg
pop
xlat
sub
and
sar
push
xor
xlat
test
loopne
adc
movs
pop
mov
test
jo
int3
(bad)
cmps
adc
(bad)
push
cwde
pop
push
jg
(bad)
dec
push
std
pop
pushf
or
(bad)
sbb
push
adc
xchg
jmp
lock
xlat
and
fbld
push
lea
and
inc
push
lahf
icebp
repz
mov
jp
bound
xor
mov
test
mov
loop
dec
clc
and
pop
sahf
shl
lock
hlt
xchg
lock
iret
mov
or
repz
fwait
test
test
cmp
lock
loop
repnz
out
fs
jmp
sbb
les
fsub
push
mov
push
(bad)
into
add
outs
fnstsw
mov
fcom
lock
mov
mov
in
adc
sub
sub
idiv
jo
cs
icebp
add
pop
sub
idiv
dec
sub
push
scas
inc
cwde
push
sbb
adc
fdivr
inc
add
outs
and
ins
mov
ins
or
inc
or
out
and
dec
mov
jmp
test
fst
adc
cmp
dec
or
adc
cdq
xor
mov
and
sub
ror
jno
out
and
dec
inc
mov
arpl
xor
sbb
dec
cwde
retf
stos
call
in
mov
(bad)
pop
inc
jmp
xchg
jge
xchg
jmp
mov
adc
push
iret
int
mov
fnstsw
pop
jmp
and
fucomi
outs
stos
lock
adc
call
fdivr
test
popa
jge
mov
sbb
popa
jp
ror
dec
jbe
stos
stc
and
sahf
cmp
jbe
sbb
fcomp
sub
(bad)
loop
mov
clc
sahf
aas
retf
lock
xchg
sbb
stos
cli
add
stc
in
jnp
mov
mov
push
mov
push
and
jns
jae
mov
fisubr
js
stos
outs
pop
sahf
jnp
fistp
jp
xchg
mov
dec
xor
and
movs
sbb
push
mul
hlt
(bad)
pop
ja
mov
pop
cs
imul
sbb
stc
mov
mov
jnp
hlt
adc
pop
fs
loopne
scas
(bad)
icebp
mov
outs
mov
or
cmp
cld
cs
mov
cmp
or
jle
add
mov
stos
test
push
dec
(bad)
mov
in
and
retf
jae
sub
adc
jmp
fcomp
push
pop
jo
add
pop
mov
test
pop
ret
(bad)
cdq
mov
xchg
jle
mov
dec
pop
je
inc
jne
into
xor
pop
add
(bad)
jb
sbb
cmp
mov
lock
cmc
adc
pushf
imul
cmp
std
cmc
pop
and
push
fisttp
jae
sbb
ret
retf
xchg
int3
mov
and
(bad)
push
and
add
jo
test
clc
push
pop
fld
mov
fild
sbb
es
add
loop
push
add
data16
xor
sbb
repnz
popf
in
xchg
pop
xchg
pop
and
pop
out
cli
repnz
pop
pop
cmp
pop
jmp
rol
adc
xor
pop
ret
add
dec
jmp
mov
jecxz
les
sbb
pop
aam
dec
sti
cmp
out
gs
adc
ret
mov
das
fstp
fld
add
inc
lds
movs
jecxz
out
(bad)
(bad)
jg
hlt
hlt
daa
jg
sbb
cmc
and
push
pop
inc
jp
out
sub
loopne
gs
imul
mov
pop
iret
aas
jg
lahf
lods
popf
sbb
out
int3
mul
icebp
(bad)
jmp
fs
test
stos
clc
enter
or
jno
ror
iret
add
inc
xchg
sbb
mov
rol
lea
push
ss
dec
push
xor
xchg
or
pop
mov
jmp
mov
jno
daa
in
add
xor
js
and
mov
rol
repnz
addr16
aas
movs
mov
inc
or
iret
sbb
int3
std
and
sbb
xor
div
sbb
and
dec
xchg
shr
pop
pop
push
jecxz
mov
sahf
lea
add
pop
popa
or
push
and
sub
xchg
fwait
pop
fs
adc
neg
or
sbb
mov
cs
push
mul
push
sahf
or
(bad)
aam
sub
jns
cmp
inc
fdivr
mov
sub
aas
dec
cwde
xchg
icebp
lea
jne
rcr
pop
lock
sahf
lock
mov
sub
xchg
and
imul
jl
pusha
jg
not
pop
jne
dec
retf
mov
repnz
std
mov
scas
adc
adc
and
pop
and
cdq
stos
jnp
fs
mul
stc
jecxz
pushf
je
xor
mov
(bad)
ja
cmc
std
out
mov
push
or
lds
xor
(bad)
aaa
pusha
rcl
(bad)
test
add
(bad)
pop
add
call
sti
movs
jno
mov
xlat
out
mov
aaa
sahf
lods
addr16
adc
repz
movs
jmp
pop
push
push
push
arpl
out
jmp
outs
xor
ror
ss
or
mov
or
jmp
jl
nop
ss
mov
sub
mov
div
ja
add
sub
cmp
and
mov
fidiv
add
mov
add
jne
or
cmp
into
xchg
xor
inc
fdivr
fcmovnb
ja
xor
cmc
mov
pusha
adc
out
mov
ret
jo
mov
call
in
and
rcl
adc
retf
push
imul
xchg
aam
cmps
stos
ins
sti
test
fld
cmp
and
sbb
or
out
arpl
call
mov
test
sub
adc
cmp
rcl
fdiv
test
lea
out
mov
shl
mov
jno
cld
xchg
(bad)
fdiv
nop
jno
mov
movs
fwait
mov
test
fld
or
(bad)
mov
int
add
mov
sub
cmp
fisub
lock
add
xchg
out
xchg
cld
js
cmps
aad
sbb
icebp
push
sbb
jo
cld
jne
clc
ja
fisttp
dec
(bad)
mov
out
je
aas
lea
jg
(bad)
repnz
das
loope
mov
inc
jo
ret
lahf
sub
fcmovne
xchg
(bad)
jl
arpl
fidiv
sbb
fucomp
mov
cmp
out
icebp
mov
cmp
loopne
(bad)
jmp
dec
lahf
(bad)
js
into
popf
es
sbb
pop
dec
repz
iret
push
pop
and
adc
inc
js
add
inc
imul
(bad)
mov
lods
(bad)
add
adc
js
pop
inc
fbstp
clc
mov
add
(bad)
div
div
pop
outs
mov
lea
or
(bad)
fst
xor
loopne
(bad)
dec
fwait
imul
adc
lock
mov
inc
das
gs
stc
aam
test
(bad)
cwde
and
xchg
es
or
rcr
ins
mov
fld
imul
cmps
dec
scas
pushf
cmp
xor
stc
fst
ss
mov
in
jmp
bnd
sbb
inc
sub
fisttp
xlat
loopne
repz
mov
push
inc
push
pop
or
add
jmp
fsub
out
sbb
push
aam
jp
push
dec
cld
loop
jns
iret
out
fbstp
fistp
(bad)
xchg
repnz
xor
mov
das
sar
dec
imul
loopne
jmp
fnstsw
pushf
mov
ret
mov
retf
xor
xor
das
rcr
lods
and
cmc
lds
pop
movd
scas
bound
push
nop
mov
cs
mov
aaa
push
jns
ror
das
mov
xchg
lds
ja
fistp
jg
int3
sbb
mov
xor
xor
(bad)
stos
jp
cmp
xchg
ins
movs
jle
ret
and
pop
ret
xchg
add
mov
jmp
loop
aam
imul
jno
out
and
dec
and
and
push
jb
mov
mov
call
sbb
sub
push
mov
jmp
sub
dec
xlat
lds
inc
aaa
mov
loop
sub
in
je
push
pop
pop
popf
fild
fwait
or
mov
in
pop
add
inc
fistp
add
outs
inc
add
xor
push
div
pop
addr16
retf
int3
hlt
imul
cs
(bad)
lods
pop
data16
fucomp
mov
mov
lahf
loopne
add
or
lock
inc
out
pop
fisubr
push
mov
or
jno
add
inc
xchg
out
xor
popf
js
mov
add
sub
std
mov
iret
ja
pavgw
in
push
test
mov
lods
int3
inc
mov
hlt
sbb
fidiv
clc
or
sar
dec
retf
cdq
icebp
or
fcomp
push
push
neg
movs
xchg
xchg
jne
(bad)
in
sahf
sahf
jns
mov
add
(bad)
xlat
xor
mov
cwde
xchg
(bad)
arpl
cld
ins
jg
add
xchg
dec
dec
nop
xor
mov
pop
stc
add
rol
std
imul
mov
sti
mov
xor
and
sbb
sbb
cld
stc
daa
cs
sbb
or
xor
jecxz
fcomp
push
mov
pop
or
pop
cmp
repz
das
adc
push
test
mov
(bad)
mov
retf
ds
xor
add
xchg
inc
dec
adc
sbb
xchg
and
and
pop
add
test
add
xchg
cmp
dec
xchg
aad
dec
inc
inc
(bad)
arpl
push
pop
xchg
je
cdq
mov
scas
out
cmp
sbb
dec
mul
cmp
imul
ins
scas
inc
les
sahf
mov
push
xchg
mov
push
aaa
cmp
(bad)
mov
call
sub
and
ficom
fldcw
or
mov
sbb
or
outs
mov
ret
cmp
loopne
test
adc
fnstsw
ja
shl
pusha
stos
xchg
adc
jmp
ja
dec
mov
adc
shl
arpl
and
stc
add
cmp
aaa
or
mov
push
sub
jae
stc
pop
fisttp
ins
or
cld
pusha
and
les
das
test
inc
popa
sub
sub
shr
pop
aas
and
retf
jns
fdivr
cmps
out
clc
fnstcw
or
push
inc
loopne
push
jmp
pop
fldcw
ds
(bad)
fbld
jecxz
add
ins
dec
js
loopne
pop
pop
inc
lahf
pusha
add
pop
cld
adc
push
xchg
(bad)
and
adc
xor
sti
out
pop
mov
lahf
ds
idiv
mov
iret
jmp
push
sahf
in
(bad)
push
aam
into
movs
adc
sbb
mov
cld
pop
push
lods
out
sbb
stos
add
lods
inc
cld
test
test
test
(bad)
(bad)
jo
sar
mov
pop
cmc
fistp
adc
mov
retf
in
mov
cmc
pop
ins
ds
sbb
fpatan
aad
add
push
nop
pushf
rcl
add
mov
pop
inc
mov
xchg
mov
enter
aam
mov
mov
xchg
mov
xor
xchg
jbe
jecxz
xor
adc
out
iret
or
scas
add
shl
jle
push
aaa
addr16
into
fsubp
in
cmp
out
lock
ds
arpl
scas
xor
fild
outs
push
into
sub
inc
cld
movs
xchg
jo
add
arpl
ret
cmp
or
enter
mov
frstor
scas
std
mov
sti
and
or
lock
mov
jle
and
dec
(bad)
fild
dec
add
dec
add
test
push
inc
out
and
cwde
and
nop
cli
adc
das
rcl
dec
mov
lds
stos
ins
mov
arpl
sbb
lock
imul
pop
fstp
sahf
out
sub
and
dec
clc
mov
pop
ret
sbb
cld
js
jo
pop
or
dec
fidivr
ret
(bad)
icebp
pop
xor
nop
bound
and
aas
stc
aam
ret
sub
mov
jae
sahf
in
stos
stos
mov
sbb
rcr
jge
add
mov
inc
pop
arpl
mov
sub
rcl
sub
icebp
ret
dec
pop
sub
mov
pop
inc
in
pop
xchg
in
pop
jno
jmp
nop
nop
mov
sub
scas
xor
adc
in
lds
outs
cs
pop
pop
sbb
dec
fimul
push
jle
inc
mov
jmp
cmps
popf
sbb
(bad)
inc
sub
dec
adc
adc
push
cmp
sbb
and
adc
and
add
add
sti
aaa
adc
repz
jl
out
(bad)
fnstenv
mov
out
xchg
imul
fidivr
dec
dec
dec
mov
inc
fimul
xor
int3
call
test
hlt
push
dec
pop
ds
fcomp
scas
and
scas
or
push
dec
sub
mov
(bad)
ret
mov
sub
mov
xchg
(bad)
mov
push
leave
das
xor
xchg
push
or
lea
mov
cmps
push
adc
(bad)
lods
lods
nop
fcomp
shl
xchg
adc
sub
pop
push
jg
in
pop
and
adc
mov
cmp
inc
adc
dec
sbb
(bad)
int3
cmp
fsub
clc
retf
dec
push
pop
popa
xchg
ror
dec
pop
inc
loopne
inc
ret
(bad)
in
fbstp
mov
in
or
loopne
mov
adc
cdq
(bad)
gs
mov
adc
and
cmp
sub
mov
cld
retf
inc
sbb
pop
mov
jmp
sahf
std
sub
fbstp
cmp
fimul
mov
push
pop
scas
pop
(bad)
or
cmp
loopne
jae
add
std
(bad)
mov
inc
sub
inc
adc
xor
or
push
jne
int
into
jmp
mov
push
pop
jp
mov
test
aad
push
xchg
and
inc
push
out
js
cmp
rcl
push
push
cmp
add
sub
lods
mov
dec
pusha
aaa
lods
pop
scas
scas
retf
jecxz
stc
push
pop
aaa
nop
sbb
xchg
jg
mov
xlat
xchg
addr16
or
adc
pusha
jmp
and
dec
or
xor
jbe
js
les
sbb
outs
ret
sbb
mov
int
call
sub
xor
loopne
(bad)
hlt
hlt
ret
out
cmps
cmps
outs
(bad)
cld
das
cmp
sar
mov
test
jne
and
xor
outs
xor
sar
ret
add
sub
mov
xor
or
mov
dec
xchg
pop
addr16
cmp
iret
xchg
mov
add
lock
test
repnz
aad
fisttp
popa
loopne
stos
fwait
mov
dec
mov
mov
dec
jecxz
fist
and
inc
jle
enter
mov
mov
mov
out
fbstp
stos
push
cs
mov
icebp
scas
adc
not
adc
repnz
mov
sub
hlt
dec
mov
call
loop
test
dec
js
pop
mov
and
dec
add
gs
outs
jo
in
and
push
daa
fcomp
mov
mov
neg
xchg
jb
je
in
inc
push
jmp
cmp
add
mov
(bad)
adc
mov
inc
imul
cmp
mov
ins
cmp
adc
push
and
xor
jne
cmp
ins
ret
fs
mov
das
inc
in
outs
into
or
push
rcl
cwde
mov
mov
push
mov
cwde
inc
lods
mov
inc
cs
or
mov
movs
push
inc
adc
ins
loope
pop
(bad)
adc
cli
xor
mov
push
jns
pop
jg
dec
popa
xchg
fnstsw
or
js
das
ret
ret
out
imul
add
(bad)
sbb
fdivp
outs
jg
xlat
arpl
and
fdivp
inc
jg
inc
push
push
test
cmp
cdq
iret
jl
push
add
inc
xchg
or
ins
cmp
push
ss
in
pop
sbb
rol
xor
(bad)
out
pushf
pop
fadd
add
aaa
fdivr
retf
xchg
loope
ret
xor
jmp
push
sub
arpl
xchg
or
xchg
pop
lea
in
stc
loope
dec
ja
lahf
out
xchg
adc
xor
retf
adc
ins
inc
sysret
and
out
imul
xchg
(bad)
xchg
fld
jmp
repnz
jg
in
clc
pop
std
adc
xor
outs
jbe
mov
jecxz
and
mov
xchg
mov
pushf
add
stos
sub
paddw
jo
loopne
test
shl
cdq
mov
daa
(bad)
jecxz
aas
jo
push
dec
(bad)
jmp
mov
(bad)
test
xlat
push
repnz
mov
dec
mul
mov
or
lods
sar
cmp
nop
repnz
jns
jbe
fisubr
inc
and
sub
lea
xor
aad
dec
push
xor
jmp
iret
imul
mov
scas
xchg
fisubr
and
(bad)
pop
mov
out
xchg
ror
sub
xor
dec
ret
pushf
push
into
das
int3
inc
stc
ins
xchg
bound
into
fwait
mov
xchg
dec
test
cmps
aas
(bad)
jecxz
scas
push
fnstcw
mov
lods
cmps
retf
xchg
das
dec
and
push
pusha
adc
fidiv
push
ja
arpl
mov
mov
leave
iret
aad
adc
fidiv
push
cmp
xor
sbb
add
lock
sub
push
xor
xor
arpl
lea
cld
adc
xchg
mov
cld
ror
pop
stc
push
repnz
nop
clc
in
mov
jp
jno
movs
(bad)
sub
mov
sub
inc
clc
ja
fdivr
lea
push
cwde
add
push
test
sar
repz
mov
pop
ficomp
loop
push
pop
lds
or
and
and
fimul
mov
push
add
mov
mov
repz
mul
in
std
sti
in
dec
loop
test
loopne
sbb
and
movs
sbb
fdivr
mov
jbe
data16
sbb
or
inc
and
in
rcl
fcomip
arpl
jnp
adc
loop
pop
jg
inc
ins
or
(bad)
sbb
mov
xor
push
push
fcomp
shl
or
aaa
lock
ror
add
in
jg
mov
inc
cmps
inc
test
retf
lock
pop
and
out
xor
retf
nop
loope
and
rcl
ret
int
in
cmp
jmp
and
add
cdq
fcmovnu
mov
mov
shl
lea
mov
(bad)
fstp
std
aaa
mov
cmc
hlt
sar
addr16
popf
jmp
mov
mov
and
push
outs
or
pop
xor
add
out
fsub
mov
and
jo
das
sub
push
rcr
and
mov
jmp
frstor
jae
cwde
ret
inc
call
dec
js
mov
fwait
ja
aad
test
xchg
or
loop
loop
es
pop
(bad)
sbb
mov
mov
jg
mov
loop
and
or
and
loop
mov
jmp
scas
out
imul
imul
(bad)
std
mov
mov
and
gs
mov
fsub
shr
xor
scas
jae
into
mov
out
add
or
into
loope
pop
or
mov
rol
inc
adc
cmp
int
cmp
and
call
inc
sub
pop
pop
(bad)
scas
aas
adc
movs
push
movs
hlt
lock
in
popf
mov
sahf
out
sub
pop
into
xchg
adc
repnz
cmps
push
add
ficomp
fidiv
sub
add
push
ret
sbb
addr16
nop
push
inc
fcomp
(bad)
mov
test
leave
ss
fmul
int3
aam
xchg
push
xchg
outs
mov
mov
cld
scas
icebp
jno
lods
scas
dec
push
arpl
inc
das
and
pop
xchg
leave
jne
mov
cmc
pop
ds
frstor
sub
sub
popf
cwde
cwde
js
out
call
sti
mov
cmps
rcl
or
fucomi
xor
in
ins
pushf
mov
loop
pushf
sbb
xor
test
sub
imul
jle
mov
xchg
xchg
pop
mov
xchg
test
call
mov
(bad)
dec
cmp
popf
ins
cwde
rcl
push
xchg
out
or
xor
jge
push
mov
sti
sahf
movs
outs
xchg
clc
and
nop
cwde
fidiv
cwde
add
cmp
xor
cdq
fild
xor
lahf
out
in
out
cmp
xor
lahf
iret
repnz
ins
lock
outs
dec
add
jmp
iret
(bad)
mov
mov
sar
jecxz
cmp
sti
rcr
xor
push
sbb
cli
sbb
xor
inc
cmp
test
mov
push
sub
in
adc
je
sub
loop
jmp
mov
push
ja
push
bound
dec
add
adc
push
cs
(bad)
ds
adc
les
mov
pop
adc
adc
pop
sub
icebp
xor
xor
sbb
ret
inc
dec
bound
imul
(bad)
ss
add
pop
mov
(bad)
fnstcw
call
sbb
(bad)
cs
outs
fimul
shl
sti
mov
repnz
leave
iret
sub
ret
popf
stc
(bad)
in
or
or
call
adc
mov
shl
test
mov
sub
push
rcl
sbb
sahf
cli
mov
fbld
jl
fcmovu
movs
jle
les
xor
gs
test
loope
out
(bad)
xlat
ret
cmp
push
outs
inc
hlt
mov
test
stc
jnp
es
and
in
aad
scas
(bad)
mov
dec
or
or
sbb
xor
pop
push
xchg
arpl
mov
ins
push
mov
cmp
pop
jns
loop
mov
jo
out
fldenv
add
lods
dec
inc
inc
push
stc
adc
neg
add
repnz
sbb
je
mov
imul
sahf
sub
sbb
and
jae
mov
mov
(bad)
sbb
fs
sbb
mov
push
shl
int3
mov
mov
cmps
pop
inc
dec
test
clc
sahf
jns
or
nop
ficomp
out
stc
imul
add
imul
push
not
out
mov
sbb
jmp
sbb
js
or
stos
stos
imul
jmp
xor
push
jo
in
push
fstp
ret
pop
jp
push
(bad)
sub
repz
(bad)
stc
push
sbb
lahf
aad
pop
pop
xlat
arpl
dec
fs
lods
lea
leave
dec
sub
pop
les
sub
pop
add
pop
cdq
push
xchg
xor
popa
xchg
dec
cmp
add
cwde
scas
dec
sub
adc
dec
jecxz
aaa
mov
lock
sbb
repz
dec
cmp
add
arpl
repnz
das
ror
(bad)
push
scas
in
out
gs
imul
mov
lock
push
jmp
xor
xlat
jns
iret
ret
imul
out
popf
jg
outs
fmulp
ja
mov
push
jmp
cdq
xchg
inc
outs
in
iret
xchg
bnd
ins
pop
xchg
outs
mov
inc
in
jne
movs
test
jg
cmps
jg
fs
mov
add
jb
adc
xlat
loope
mov
cmc
std
gs
out
pusha
mov
test
(bad)
sbb
jle
sbb
(bad)
xchg
jo
pop
push
cdq
ds
cwde
xor
mov
mov
mov
vfnmsub132ss
mov
test
and
ins
stos
and
adc
jo
outs
call
cmps
and
int
stos
or
push
or
cmps
adc
outs
add
push
retf
xchg
adc
sub
out
mov
mov
imul
mov
inc
jle
push
inc
mov
ins
cmp
lods
pop
inc
sahf
push
push
sub
pop
and
addr16
or
ja
pop
xchg
not
fwait
outs
fidivr
pushf
sti
sbb
iret
call
dec
in
dec
imul
jge
jae
ins
and
loope
mov
shl
mov
adc
ret
inc
xchg
mov
pop
or
leave
or
sub
(bad)
jmp
mov
sbb
mov
rcr
stos
jle
dec
cmp
sub
push
ins
jg
pop
outs
icebp
into
sbb
clc
test
mov
sub
xchg
jo
xchg
pusha
push
mov
aad
out
cwde
xchg
xlat
(bad)
mov
inc
pop
(bad)
jnp
addr16
dec
jecxz
jl
das
and
fwait
mov
jle
ret
loope
(bad)
pop
ins
pop
out
in
scas
mov
fdiv
mov
idiv
rcl
addr16
jns
mov
xor
jae
imul
or
inc
stos
adc
xchg
lar
lea
add
push
popa
mov
les
mov
mov
out
and
les
sti
jle
inc
sahf
sbb
inc
mov
mov
xchg
cli
repnz
lahf
fstp
cmp
div
jg
mov
add
stos
movs
dec
in
push
mov
cmps
je
mov
push
mov
mov
mov
pop
sti
sahf
call
push
sub
daa
es
push
pushf
inc
mov
and
cli
inc
xlat
retf
push
pop
xchg
std
mov
repz
test
sbb
xchg
jns
or
in
add
stos
aas
jbe
gs
div
sub
push
add
(bad)
adc
sbb
cmp
ins
ins
cs
lods
rcr
jne
mov
std
xor
lahf
add
and
xchg
aad
add
fistp
or
out
repz
jo
jnp
xchg
enter
arpl
in
inc
outs
in
mov
shl
push
mov
sar
das
jg
cmp
pop
(bad)
fdiv
mov
call
out
ins
out
in
dec
pushf
jae
sti
cli
jnp
inc
add
pop
dec
mov
mov
cmp
dec
movs
or
and
mov
out
jge
mov
out
fbstp
pop
pusha
in
add
lods
popa
mov
call
adc
sub
fldcw
repz
xor
adc
xor
(bad)
(bad)
cmp
cmp
mov
mov
and
pop
pop
inc
jne
lods
fsubr
push
jp
mov
jmp
lock
cmc
jnp
mov
ret
ds
popa
add
popf
in
(bad)
call
ror
retf
or
int3
push
fwait
sub
addr16
and
aaa
add
sub
iret
xchg
jns
mov
out
jo
or
mov
cld
faddp
mov
pop
xchg
addr16
ror
jle
and
hlt
and
jecxz
cmp
dec
xchg
fiadd
jae
(bad)
lods
sub
loope
lock
push
xchg
fbld
mov
push
or
mov
or
scas
xor
pop
mov
sbb
mov
out
in
cmp
das
(bad)
mov
pop
jns
mov
inc
pushf
push
scas
xlat
imul
push
sub
fnstenv
std
imul
mov
dec
and
mov
in
xor
test
outs
out
test
ret
stos
adc
adc
icebp
sbb
sub
pop
adc
inc
push
push
movs
aaa
and
inc
fdivr
pop
xor
movs
inc
or
push
mov
mov
(bad)
inc
cli
ins
lods
lods
scas
ins
loope
mov
sub
jl
push
cdq
mov
jecxz
dec
aas
ret
pop
pop
dec
pop
mov
fst
or
inc
arpl
in
cmp
stos
in
and
adc
inc
out
sar
scas
lock
pop
pop
sbb
int
adc
out
sbb
jmp
cmps
mov
in
outs
test
push
ret
and
dec
xchg
sahf
xlat
sub
dec
mov
pusha
push
xor
fidivr
(bad)
jne
das
out
push
out
mov
ret
sbb
repz
clc
push
push
pop
and
add
lock
cmp
dec
mov
repnz
imul
xchg
jg
out
mov
xor
dec
clc
sbb
dec
shl
inc
dec
or
add
clc
ds
xchg
aas
jmp
mulps
xchg
out
push
push
mov
fistp
add
mov
sbb
push
mov
lods
popf
test
xor
push
jp
dec
inc
int
inc
adc
movs
adc
mov
clc
fs
jmp
out
and
sar
push
add
icebp
sbb
cld
add
out
add
or
xor
ins
shl
adc
push
clc
mov
jmp
mov
nop
iret
and
dec
adc
retf
ret
sbb
popa
int
imul
and
pop
pop
fistp
lock
xchg
mov
push
adc
popa
imul
add
jno
inc
aad
and
out
paddsw
daa
into
lahf
aas
inc
ds
dec
(bad)
(bad)
xchg
test
pop
jecxz
or
cwde
add
cmp
rcr
sub
mov
mov
mov
xchg
aaa
iret
repz
pusha
jnp
pop
ret
push
out
and
pop
std
add
dec
retf
jnp
xchg
xchg
ins
mov
add
mov
out
jge
mov
pushf
test
pop
cmp
ret
stc
mov
jmp
int
jno
stos
std
lods
ret
mov
cld
mov
(bad)
(bad)
in
adc
dec
iret
mov
xor
sti
mov
(bad)
jl
xchg
cmps
mov
jl
gs
mov
dec
loop
rcl
adc
fwait
and
das
cmp
push
inc
and
adc
jae
push
mov
xchg
cmp
sub
test
out
inc
(bad)
imul
jb
sbb
and
lds
push
mov
pop
sbb
out
clc
lods
lods
sub
(bad)
repz
jo
arpl
jo
sub
imul
mov
cmp
mov
jl
pop
movs
xor
xor
shl
into
dec
rcl
xchg
xchg
jbe
pop
bound
retf
dec
rcl
add
sbb
lahf
jmp
sbb
push
jne
pop
addr16
ja
cmp
fistp
mov
xor
sar
icebp
(bad)
fisttp
xchg
nop
jmp
jne
clc
sahf
cmc
cdq
push
(bad)
mov
adc
mov
cmp
aas
adc
dec
push
push
pop
test
idiv
sbb
or
imul
out
lahf
test
add
mov
fnstcw
lods
lods
(bad)
pop
aaa
xchg
hlt
(bad)
repz
add
rol
jle
cs
and
sub
or
mov
push
push
pop
mov
mov
and
neg
or
outs
ins
cmp
mov
mov
push
in
popa
js
cs
shl
or
mov
mov
push
sti
in
dec
dec
inc
pop
xor
xor
jg
and
jmp
enterw
add
sub
std
sbb
sbb
imul
mov
in
call
xor
icebp
push
push
cmp
pmullw
or
stc
add
(bad)
sbb
add
leave
shl
pop
test
sub
pop
mov
xchg
fisub
pop
xchg
repz
iret
repz
jmp
stos
ja
xchg
pop
xchg
cmp
call
popf
add
pushf
out
gs
mov
or
mov
push
nop
inc
dec
push
pusha
pushf
add
xlat
dec
lock
imul
dec
sub
add
aaa
(bad)
gs
data16
pop
dec
pop
or
sbb
adc
popa
jmp
into
mov
jge
je
fs
fs
outs
das
or
ret
jmp
sub
ins
add
lods
int3
sti
js
icebp
xchg
mov
in
xor
jne
mov
(bad)
int3
push
cs
dec
and
pop
ret
mov
mov
retf
adc
adc
mov
jbe
aas
in
pop
pop
sbb
nop
enter
fsubrp
stc
loope
fisubr
jp
imul
retf
add
or
cmp
inc
xlat
sbb
lea
or
and
dec
mov
jbe
add
ins
push
lock
out
pop
and
das
push
pop
dec
ret
cmp
ret
and
repz
pop
call
xlat
loop
stc
xor
mov
jl
pushfw
cmp
and
pop
pop
sbb
sbb
sbb
push
inc
std
mov
add
cmp
pop
dec
add
mov
inc
adc
enter
loopne
and
push
fdivrp
mov
jg
jbe
and
or
stos
ret
xchg
xor
pop
arpl
out
mov
sti
push
jp
inc
xchg
repz
and
mov
xchg
mov
mov
dec
sbb
inc
xlat
cmp
dec
adc
jle
sub
mov
pop
sbb
mov
or
xchg
xlat
and
mov
push
rcl
bound
(bad)
shr
popa
add
push
dec
(bad)
ins
mov
dec
mov
sbb
inc
adc
loopne
loope
shl
fist
xchg
adc
ins
scas
mov
jecxz
jne
std
fiadd
sbb
jbe
imul
jecxz
add
aas
je
jae
aad
cmp
add
les
adc
ret
inc
pop
adc
(bad)
fiadd
mov
ffree
mov
xor
jp
movs
push
sti
int3
jnp
jns
daa
mov
call
dec
stos
adc
jg
jp
int
repnz
cmps
daa
and
fisub
dec
xchg
jge
cmp
mov
mov
stos
mov
outs
pushf
mov
xor
shl
fbstp
lahf
imul
xor
sub
in
lods
sbb
add
xor
sbb
jo
(bad)
inc
add
call
lds
aaa
shr
out
adc
mov
dec
push
jg
xchg
in
and
mov
sbb
cmp
out
pop
ja
fstp
push
jo
xor
xchg
rep
xlat
out
imul
stc
dec
jg
mov
jp
cmc
push
aas
add
pop
mov
inc
jo
inc
test
mov
mov
arpl
cdq
inc
pop
or
push
adc
add
add
or
add
xor
ins
jae
jns
cmp
fsubr
sti
imul
jno
aaa
sub
das
retf
cmp
data16
adc
mov
int3
xchg
stc
mov
(bad)
in
aas
jl
or
ficomp
sbb
pusha
in
push
les
mov
sahf
das
shl
and
cmp
dec
sub
mov
out
repz
cmp
cmp
stos
and
ror
or
dec
pop
add
adc
jmp
jmp
cli
xor
rol
arpl
xchg
neg
ds
jmp
ret
hlt
jp
push
test
jno
jns
xlat
mov
aad
xor
test
push
(bad)
jp
xchg
xchg
and
ins
(bad)
inc
mov
std
loope
adc
mov
add
push
mov
xor
jns
add
neg
fdivr
cmp
jb
enter
int
les
iret
cmp
pop
xchg
lahf
imul
pop
addr16
sub
fisttp
adc
mov
rcr
adc
cwde
(bad)
cmps
gs
cli
lock
stc
in
pop
push
mov
loope
xchg
xchg
loopne
ins
out
pop
aam
shl
inc
(bad)
mov
sub
add
popf
sbb
cmc
cwde
(bad)
or
cmc
pop
cmp
iret
jmp
mov
mov
fucomip
mov
mov
in
dec
sbb
sbb
sbb
jno
fistp
dec
mov
cld
jns
pop
jg
scas
jmp
jge
retf
xor
pop
out
loope
dec
cli
cmps
adc
in
mov
addr16
leave
mov
lods
ins
lahf
lods
mov
xor
xlat
sbb
mov
jp
pop
push
icebp
dec
inc
adc
aas
push
add
add
pop
push
inc
mov
mov
inc
aad
push
call
mov
mov
out
jnp
hlt
cli
jne
xor
pushf
sahf
in
cmp
jbe
cmc
loope
sub
sahf
sahf
in
shl
lahf
iret
mov
mov
xchg
mov
jae
mov
retf
pop
pop
jmp
xlat
jns
jg
div
sbb
xchg
add
ror
and
out
fadd
adc
sbb
or
dec
clc
clc
loop
or
jg
adc
cwde
add
rcr
jmp
jnp
xor
add
mov
rol
add
add
dec
inc
scas
inc
pusha
sub
add
xor
add
pusha
add
add
add
add
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
add
add
add
add
add
add
add
add
or
or
sub
xor
dec
dec
xor
push
ss
dec
dec
xor
cmp
sub
or
or
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
add
or
or
sbb
and
cs
sub
sub
or
sbb
add
adc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
add
add
add
or
add
sbb
or
and
and
aas
inc
ins
pop
pop
pusha
(bad)
jno
jae
jne
ja
jae
je
imul
pop
pop
pop
mov
dec
jns
sub
adc
dec
add
add
add
inc
add
add
add
inc
add
add
add
dec
adc
adc
sub
push
dec
dec
mov
push
mov
cmp
cmp
sbb
sbb
or
dec
add
add
add
add
add
add
add
aaa
add
add
add
add
add
add
add
add
add
add
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
sbb
sbb
dec
dec
dec
daa
bound
pop
imul
jnp
jl
xchg
xchg
not
xchg
xchg
clc
(bad)
(bad)
xchg
hlt
mov
xchg
jne
jbe
pop
pop
pop
stos
ds
or
push
add
add
add
push
add
add
adc
cmp
jp
jp
mov
jle
addr16
dec
dec
dec
fidiv
aaa
cmp
and
adc
or
add
pop
add
add
add
push
add
add
add
cmp
add
add
add
add
add
add
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
cdq
cdq
cdq
jle
xchg
ret
mov
(bad)
mov
(bad)
xchg
xchg
popf
(bad)
pushf
fwait
mov
(bad)
mov
mov
movs
std
mov
fwait
pushf
in
nop
xchg
xchg
aad
jg
cmps
data16
ss
and
and
cmp
jbe
jbe
mov
mov
ret
scas
scas
dec
push
dec
in
xor
mov
adc
add
add
add
add
add
add
add
add
add
add
add
add
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
add
push
(bad)
cmp
je
jl
imul
(bad)
imul
(bad)
je
jl
jge
xchg
mov
sahf
(bad)
mov
test
scas
(bad)
scas
mov
(bad)
scas
mov
cli
mov
mov
lods
lods
lods
(bad)
movs
mov
mov
dec
dec
je
cmp
sar
cmp
cld
jo
jo
xchg
xchg
xchg
std
mov
mov
retf
dec
enter
scas
scas
inc
pop
repz
inc
inc
(bad)
cmp
cmp
xor
sub
add
or
add
add
add
add
add
add
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
add
add
fwait
xchg
fwait
and
or
imul
(bad)
pop
pop
jmp
outs
jmp
jae
ins
push
jbe
outs
push
push
jle
cmp
(bad)
movs
mov
mov
mov
mov
(bad)
mov
mov
lods
les
sar
das
cld
cs
xor
cmp
cmp
push
push
push
inc
mov
dec
leave
leave
(bad)
mov
cdq
xchg
(bad)
push
dec
dec
sar
cmp
daa
push
push
push
add
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
mov
xor
jbe
jno
jns
jp
cmp
jno
push
jnp
jne
jle
ja
cmp
jne
(bad)
jl
xchg
jl
test
jp
cmp
jne
(bad)
js
cmp
jne
inc
nop
pushf
(bad)
stos
cmps
mov
mov
ret
mov
(bad)
test
jnp
pop
pop
pop
std
dec
dec
dec
std
inc
inc
inc
std
xor
xor
sub
sub
xor
xor
pop
pop
pop
call
mov
ret
(bad)
mov
ins
ins
cli
inc
inc
inc
fidivr
cmp
test
cmp
sub
add
add
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
xchg
xchg
xchg
pop
je
jp
popa
pop
imul
outs
imul
outs
push
jno
pop
push
push
pop
dec
call
call
imul
pop
outs
jmp
jne
outs
addr16
jbe
cmp
cmp
cmp
adc
mov
mov
dec
into
iret
dec
iret
sar
ret
(bad)
movs
movs
movs
inc
jno
(bad)
arpl
dec
dec
(bad)
cmp
cmp
xor
xor
dec
dec
dec
inc
mov
inc
rol
mov
imul
cmp
cmp
cmp
push
add
add
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
je
je
push
push
popa
mov
push
in
push
push
pop
jmp
imul
push
dec
pop
inc
push
(bad)
cmp
xor
cmp
inc
(bad)
cmp
dec
inc
dec
inc
push
dec
pop
call
jmp
jb
jbe
cmp
xchg
mov
xchg
mov
inc
(bad)
aam
aad
(bad)
(bad)
aam
aad
mov
mov
xchg
inc
ins
ins
call
push
dec
dec
call
push
(bad)
jp
jp
test
mov
xchg
call
pop
cli
cmp
cmp
aaa
aaa
aaa
cmp
cmp
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
pop
pop
arpl
inc
dec
mov
dec
dec
pop
dec
push
(bad)
ds
push
daa
cmp
sub
jmp
and
jmp
and
jmp
and
jmp
xor
xor
(bad)
cmp
inc
push
call
jmp
jne
jp
xchg
mov
xchg
dec
mov
(bad)
call
(bad)
fcos
loopne
loope
(bad)
(bad)
into
into
into
push
movs
cmps
call
add
arpl
jmp
gs
jnp
jnp
cmps
cmps
cmps
jmp
add
aaa
aaa
aaa
mov
inc
inc
inc
or
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
dec
dec
push
jne
cmp
inc
inc
dec
dec
push
(bad)
cmp
inc
jmp
daa
cmp
and
and
jmp
cs
push
xor
push
xor
jmp
cs
jmp
sub
sub
sub
daa
and
xor
aaa
xor
inc
aas
push
call
jmp
jnp
test
xchg
dec
mov
(bad)
(bad)
(bad)
in
out
out
out
xlat
xlat
fcos
rol
push
cmps
test
xchg
xchg
xchg
inc
js
jmp
outs
(bad)
jle
jle
mov
cdq
cdq
jmp
gs
cmp
cmp
xor
xor
add
add
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
inc
inc
dec
xchg
aas
cmp
dec
inc
push
inc
dec
jmp
daa
cmp
and
sub
and
and
(bad)
cmp
cmp
cmp
cmp
cmp
cmp
aaa
aaa
aaa
push
xor
push
xor
jmp
sub
daa
daa
sub
es
xor
cmp
dec
jmp
jno
cmp
xchg
lea
call
mov
(bad)
jmp
jmp
in
in
in
(bad)
fstp
(bad)
enter
mov
scas
scas
call
(bad)
(bad)
inc
je
inc
cdq
cdq
(bad)
jp
jp
dec
dec
dec
cld
xor
xor
xor
xor
dec
dec
dec
push
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
inc
cmp
inc
out
inc
aas
push
(bad)
xor
and
jmp
push
and
das
das
das
(bad)
cmp
cmp
ss
xor
push
xor
xor
push
push
xor
jmp
cs
sub
sub
jmp
sub
jmp
jmp
sub
inc
dec
call
push
call
mov
(bad)
mov
fucom
(bad)
out
out
out
push
icebp
icebp
jmp
loop
dec
retf
retf
(bad)
mov
mov
call
fwait
fwait
dec
jbe
inc
add
ss
das
das
das
test
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
aas
cmp
cmp
inc
icebp
cmp
es
pop
sbb
jmp
and
xor
xor
xor
das
das
xor
cmp
cmp
inc
inc
inc
dec
dec
inc
dec
inc
inc
(bad)
cmp
cmp
jmp
sub
daa
daa
sub
es
and
and
and
sub
cs
cmp
inc
call
(bad)
push
jg
nop
mov
call
mov
jmp
(bad)
push
repnz
push
hlt
hlt
jmp
in
dec
retf
mov
stos
stos
jmp
cmps
cmps
dec
jae
(bad)
js
jns
arpl
(bad)
cmp
sub
(bad)
xor
xor
dec
dec
or
(bad)
inc
(bad)
(bad)
inc
cmp
inc
scas
aaa
xor
xor
and
call
sbb
jmp
sub
jmp
sub
cs
cmp
aas
dec
dec
call
push
call
push
dec
inc
dec
inc
inc
(bad)
cmp
aas
push
jmp
jmp
and
jmp
and
jmp
and
jmp
xor
dec
pop
jmp
jge
xchg
mov
call
mov
jmp
loop
push
div
push
cmc
cmc
jmp
loopne
inc
(bad)
(bad)
push
movs
movs
jmp
test
jl
imul
inc
jmp
cs
sub
sub
cmp
cmp
(bad)
(bad)
inc
(bad)
(bad)
inc
cmp
cmp
in
xor
call
sbb
jmp
daa
daa
jmp
sub
push
inc
dec
call
push
call
pop
dec
push
inc
dec
inc
inc
(bad)
cmp
cmp
push
aaa
push
xor
jmp
sub
call
pop
pop
call
push
push
call
pop
pop
jmp
and
dec
pop
push
cmp
cwde
cmps
call
xchg
mov
jmp
out
(bad)
stc
idiv
push
hlt
hlt
(bad)
fcmovu
(bad)
mov
movs
movs
jmp
mov
xchg
jmp
call
pop
inc
inc
jmp
sub
sub
add
add
(bad)
(bad)
inc
xor
cmp
xor
call
and
sub
sub
cmp
dec
dec
call
push
call
push
dec
dec
inc
inc
(bad)
cmp
cmp
push
xor
jmp
sub
jmp
sub
jmp
and
call
sbb
call
push
pop
call
sbb
call
push
push
jmp
pop
and
xor
call
pop
inc
sahf
stos
call
xchg
mov
(bad)
in
jmp
(bad)
cli
cli
cli
push
lock
int
jmp
mov
mov
jmp
outs
dec
inc
inc
jmp
cs
std
es
das
das
das
push
xor
xor
xor
cmp
sub
cmp
and
call
sbb
and
and
sub
dec
dec
call
push
dec
push
inc
dec
(bad)
ds
(bad)
cmp
cmp
xor
xor
jmp
sub
jmp
and
call
pop
sbb
push
adc
pop
call
sbb
call
pop
and
xor
arpl
xchg
stos
call
sahf
test
push
lock
(bad)
stc
stc
stc
jmp
out
(bad)
mov
pushf
popf
push
(bad)
(bad)
inc
inc
inc
(bad)
cmp
cmp
cs
jmp
sub
cmp
(bad)
(bad)
inc
xor
xor
ret
xor
pop
sbb
call
sbb
call
sub
(bad)
aas
aas
inc
dec
dec
dec
push
dec
dec
inc
inc
(bad)
cmp
cmp
jmp
cs
sub
sub
and
and
call
sbb
jmp
and
push
sbb
sbb
sbb
sbb
sbb
sbb
pop
pop
and
xor
cmp
pop
push
imul
movs
mov
mov
(bad)
fstp
loopne
hlt
hlt
cmc
push
cmc
cmc
call
(bad)
(bad)
jmp
cmps
cmps
inc
(bad)
xchg
xchg
xchg
inc
inc
(bad)
xor
xor
sub
sub
and
cs
cmp
(bad)
(bad)
inc
xor
sub
mov
pop
sbb
call
push
sbb
sbb
sbb
sub
sub
cmp
aas
dec
dec
dec
push
dec
dec
inc
inc
push
aaa
cmp
xor
xor
sub
sub
call
pop
and
sbb
sbb
sbb
sbb
pop
pop
and
cs
aaa
jmp
sub
call
sbb
sbb
sbb
sbb
sbb
(bad)
cmp
jo
xchg
mov
jmp
ror
out
call
(bad)
in
in
in
(bad)
mov
mov
mov
dec
dec
(bad)
sub
sub
daa
daa
sub
daa
daa
daa
shr
das
das
push
sub
sub
(bad)
(bad)
inc
cs
daa
and
sub
push
sbb
call
adc
sbb
daa
es
cmp
cmp
inc
inc
dec
dec
dec
inc
dec
(bad)
ds
push
cs
daa
daa
sub
and
and
sbb
sbb
pop
pop
sbb
pop
pop
sbb
and
es
cmp
dec
dec
inc
inc
push
xor
sub
sbb
sbb
call
sbb
inc
dec
jmp
jp
cdq
xchg
mov
jmp
int3
sar
jmp
in
push
repnz
(bad)
fdivr
mov
mov
scas
scas
scas
(bad)
sahf
sahf
sahf
std
dec
dec
dec
std
daa
daa
daa
(bad)
daa
daa
sub
sub
cmp
xor
add
add
(bad)
inc
sub
sub
sub
sub
int3
push
sbb
std
sbb
pop
jmp
and
xor
aaa
inc
inc
inc
dec
inc
(bad)
cmp
xor
jmp
jmp
pop
and
sbb
sbb
adc
adc
jmp
inc
dec
call
(bad)
call
pop
dec
dec
(bad)
cmp
aas
jmp
sub
sbb
sbb
call
and
dec
push
(bad)
js
test
popf
cdq
movs
call
scas
mov
xlat
aad
(bad)
in
in
in
(bad)
jmp
in
dec
enter
cmps
cmps
std
mov
inc
std
daa
daa
daa
repnz
inc
inc
inc
or
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
sub
and
hlt
sbb
and
adc
push
pop
jmp
das
xor
cmp
inc
inc
dec
inc
inc
(bad)
cmp
inc
push
xor
jmp
sub
call
pop
sbb
adc
adc
adc
adc
push
sbb
dec
jmp
outs
jmp
jne
bound
dec
push
(bad)
cmp
aas
jmp
daa
sub
sbb
sbb
call
sbb
jmp
sub
call
arpl
xchg
call
cwde
mov
(bad)
(bad)
loope
in
in
in
(bad)
(bad)
fdivr
test
ins
outs
sti
cmp
cmp
sub
cmp
pop
push
push
push
adc
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
and
aaa
push
and
sub
fcomp
pop
and
adc
sbb
jmp
sub
push
ss
inc
aas
inc
inc
inc
(bad)
cmp
inc
push
xor
jmp
sub
call
push
call
push
pop
call
adc
dec
push
push
call
adc
xor
popa
push
push
jnp
bound
dec
push
xor
and
call
sbb
(bad)
cmp
jae
xchg
mov
call
leave
into
jmp
out
(bad)
out
out
mov
mov
addr16
stos
cmp
cmp
inc
inc
adc
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
add
add
sub
cmp
sbb
daa
not
adc
call
push
pop
jmp
and
xor
xor
cmp
inc
inc
(bad)
cmp
xor
jmp
and
call
push
call
pop
sbb
adc
adc
or
or
call
push
dec
dec
jmp
je
jp
cmp
ins
je
pop
pop
pop
inc
jmp
sub
pop
call
sbb
call
push
pop
jmp
and
push
(bad)
jp
xchg
call
jmp
xlat
(bad)
out
out
rcl
shl
sahf
mov
fs
inc
inc
inc
or
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
es
and
and
daa
loop
adc
sbb
sbb
sbb
push
xor
inc
(bad)
cmp
inc
push
ss
cs
and
push
and
sbb
sbb
adc
adc
push
push
push
dec
or
dec
and
inc
inc
dec
jmp
jmp
imul
pop
pop
dec
dec
push
xor
call
sbb
call
pop
and
xor
notrack
ins
dec
xchg
popf
call
rol
(bad)
loopne
(bad)
fdivrp
retf
mov
add
add
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
add
add
and
cmp
sbb
mov
sbb
call
push
sbb
and
and
das
das
xor
cmp
cmp
cmp
aas
(bad)
cmp
cmp
xor
xor
sub
sub
and
and
sbb
sbb
adc
adc
dec
or
push
push
ud0
push
pop
push
aaa
inc
inc
inc
inc
(bad)
cmp
cmp
sub
sub
pop
push
pop
call
sbb
call
sbb
jmp
and
push
(bad)
jp
xchg
xchg
xchg
lahf
dec
scas
call
rcl
(bad)
fstp
(bad)
rcl
aam
mov
cdq
cdq
ud0
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
sub
sub
and
sub
fstp
adc
sbb
sbb
sbb
sub
sub
xor
xor
cmp
cmp
cmp
cmp
jmp
and
pop
call
sbb
call
adc
dec
push
push
dec
or
(bad)
(bad)
ud0
adc
and
and
and
and
and
pop
pop
and
and
and
and
and
pop
pop
and
pop
and
jmp
and
push
xor
jmp
jno
xchg
(bad)
pushf
call
(bad)
pushf
inc
mov
(bad)
aam
aad
mov
popf
popf
daa
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
add
add
and
sbb
movs
sbb
and
(bad)
push
adc
and
sub
push
xor
(bad)
cmp
cmp
aaa
aaa
cmp
xor
xor
sub
sub
and
and
sbb
push
call
sbb
call
adc
call
adc
call
movups
adc
adc
adc
adc
call
sbb
push
push
and
and
jmp
sub
jmp
daa
jmp
and
jmp
and
jmp
es
pop
dec
xchg
mov
jmp
iret
aam
rcl
aam
ret
ret
(bad)
test
dec
add
add
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
cs
or
sbb
int3
sbb
sbb
sbb
sbb
and
cs
xor
cmp
push
cs
sub
sub
and
and
sbb
sbb
call
pop
sbb
adc
adc
call
pop
sbb
sbb
sbb
sbb
and
es
sub
jmp
sub
jmp
and
jmp
and
(bad)
aas
cmp
js
test
sahf
call
xchg
xchg
sahf
inc
ret
rcl
aam
enter
lods
lods
lods
jo
add
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
and
sub
and
es
adc
call
push
jmp
sub
jmp
das
xor
ss
cmp
cmp
xor
cmp
cs
sub
sub
and
call
pop
and
sbb
push
call
sbb
sbb
sbb
sbb
sbb
sbb
push
call
pop
and
and
and
es
sub
sub
push
xor
sub
sub
and
and
push
cs
imul
call
adc
into
into
iret
dec
leave
retf
mov
xchg
xchg
xchg
xchg
sbb
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
add
add
and
cmp
sbb
cmps
sbb
and
push
adc
call
adc
and
sub
sub
xor
xor
aaa
aaa
cmp
cmp
cmp
xor
cmp
xor
xor
sub
sub
jmp
and
jmp
and
jmp
and
jmp
and
jmp
daa
sub
sub
jmp
xor
push
cmp
das
cs
daa
es
and
and
call
call
xchg
mov
jmp
(bad)
leave
inc
(bad)
enter
mov
cwde
cwde
cwde
das
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
cs
or
sbb
rcr
and
adc
pop
sbb
and
and
sub
sub
push
aaa
cmp
cmp
cmp
ss
cmp
xor
jmp
cs
sub
jmp
sub
jmp
daa
sub
daa
daa
sub
sub
sub
sub
sub
push
xor
ss
cmp
ds
ds
push
ss
sub
sub
daa
daa
daa
jmp
and
dec
call
lahf
test
jle
xchg
xchg
(bad)
fwait
(bad)
mov
(bad)
(bad)
sti
mov
mov
cwde
cwde
cwde
inc
add
add
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
and
cs
and
sub
sbb
aad
adc
sbb
sbb
sbb
and
and
sub
sub
(bad)
cmp
cmp
cmp
aas
(bad)
cmp
cmp
push
xor
push
xor
das
das
xor
cs
das
das
xor
xor
xor
xor
aaa
(bad)
cmp
cmp
cmp
inc
inc
inc
inc
dec
(bad)
ds
xor
sub
sub
and
cmp
cdq
jmp
jl
inc
mov
inc
ret
mov
mov
call
add
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
add
add
sub
sub
sbb
and
pop
adc
std
adc
sbb
jmp
and
push
xor
(bad)
cmp
ds
(bad)
cmp
inc
(bad)
cmp
ds
cmp
cmp
aaa
aaa
cmp
cmp
cmp
cmp
cmp
cmp
aas
(bad)
ds
inc
inc
inc
dec
dec
dec
inc
inc
push
xor
jmp
cs
(bad)
cmp
test
cmp
scas
stos
mov
mov
mov
fcomp
push
push
push
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
add
add
and
pop
sbb
call
sbb
(bad)
sbb
sbb
and
and
push
xor
(bad)
cmp
cmp
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
dec
inc
dec
dec
dec
dec
push
dec
push
inc
push
xor
jmp
das
das
jmp
and
inc
inc
mov
xchg
jbe
jg
cmps
movs
stos
(bad)
mov
mov
ficomp
dec
dec
pop
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
and
and
and
sub
sbb
and
pop
adc
std
adc
sbb
jmp
and
jmp
push
xor
(bad)
cmp
inc
inc
inc
dec
inc
dec
dec
dec
dec
dec
dec
dec
dec
dec
push
call
push
call
pop
call
push
inc
inc
push
xor
push
xor
jmp
es
cmp
inc
inc
sahf
test
push
jnp
mov
mov
mov
cwde
cwde
cwde
pop
push
push
push
push
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
sbb
sbb
and
sbb
mov
sbb
std
adc
sbb
jmp
and
jmp
sub
xor
xor
cmp
cmp
inc
inc
inc
inc
dec
dec
push
dec
push
dec
push
call
push
call
pop
call
call
pop
dec
(bad)
cmp
cmp
xor
xor
xor
xor
es
(bad)
cmp
adc
jmp
js
sahf
pushf
movs
push
lods
lods
rcl
inc
inc
add
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
and
and
and
sub
sbb
fwait
sbb
adc
sbb
push
push
sbb
push
sbb
sub
das
cs
ss
ds
inc
dec
dec
dec
dec
push
call
push
call
push
call
push
dec
push
(bad)
aas
aas
inc
jmp
das
xor
xor
xor
xor
xor
and
daa
inc
dec
mov
jmp
ja
lahf
popf
cmps
(bad)
mov
mov
cmps
cmps
cmps
ror
add
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
and
and
and
sbb
xchg
sbb
adc
sbb
adc
sbb
jmp
and
jmp
sub
push
xor
(bad)
cmp
cmp
cmp
inc
inc
inc
dec
inc
dec
inc
inc
(bad)
cmp
jmp
cs
das
cs
push
ss
sub
jmp
and
dec
pop
inc
jp
jmp
ins
push
jnp
mov
mov
out
mov
add
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
xor
xor
and
sbb
adc
(bad)
adc
adc
(bad)
sbb
sbb
pop
pop
and
and
sub
push
xor
push
xor
jmp
das
xor
sub
sub
sub
xor
jmp
das
jmp
and
sub
push
addr16
jge
mov
ins
addr16
pop
push
gs
js
cmp
movs
stos
cmc
test
stos
mov
je
je
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
add
add
daa
pop
and
pop
sub
sub
push
sbb
out
sbb
and
pop
adc
(bad)
adc
adc
(bad)
pop
push
sbb
sbb
sbb
pop
pop
and
and
and
and
daa
sub
sub
sub
xor
xor
sub
sub
and
and
and
sub
cmp
inc
jmp
ins
jmp
jns
pop
push
call
arpl
test
cmps
retf
sahf
data16
add
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
add
add
and
xor
and
mov
push
sbb
stc
sbb
and
sbb
sbb
push
adc
sbb
sbb
sbb
and
and
and
and
and
and
pop
sbb
sub
sub
cmp
pop
push
data16
pop
push
dec
pop
jmp
push
mov
popf
jae
test
add
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
sbb
xor
sub
sub
jnp
sbb
sub
push
sbb
cld
sbb
pop
and
sbb
and
sbb
pop
(bad)
sbb
and
sbb
and
push
sbb
call
sbb
jmp
and
jmp
and
inc
inc
dec
dec
push
dec
push
(bad)
push
dec
pop
cld
jae
jnp
xchg
nop
cwde
adc
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
add
add
sub
sub
and
sub
pop
sub
and
out
and
sub
and
sub
and
sub
and
sub
and
(bad)
and
and
sub
cmp
cs
cmp
(bad)
cmp
inc
(bad)
cmp
aas
dec
std
arpl
loop
test
sub
push
add
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
sub
sub
sub
xor
sub
push
and
and
and
sub
cmc
and
das
cld
and
and
std
sub
xor
sub
(bad)
sub
sub
(bad)
xor
ds
cmp
push
pop
fnstcw
or
cmp
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
cmp
cmp
xor
xor
sub
xor
daa
xor
xor
sub
xor
sub
out
es
sub
sub
inc
out
ds
rcl
pop
lods
outs
data16
xchg
cdq
add
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
inc
inc
inc
add
ss
xor
push
aaa
xor
inc
xchg
aas
cmp
inc
aas
dec
mov
inc
push
stos
push
dec
push
(bad)
pop
pop
arpl
addr16
xor
add
add
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
sub
add
and
add
inc
add
add
add
add
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
add
add
(bad)
(bad)
mov
cmp
gs
pop
inc
inc
inc
dec
and
and
push
push
push
sub
add
sub
add
add
add
add
add
push
push
push
sub
es
cmp
cmp
and
inc
or
or
add
add
add
add
add
push
add
add
add
add
add
add
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
sbb
sbb
dec
dec
dec
xor
popa
popa
jns
je
mov
mov
mov
add
dec
mov
daa
daa
push
add
add
or
push
sub
pop
pop
mov
jp
shl
jno
push
push
push
shl
xor
push
push
push
push
add
add
add
inc
add
add
add
pop
add
add
add
add
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
mov
mov
js
test
ja
jecxz
jl
cli
mov
xchg
call
movs
std
mov
popf
sahf
jmp
jns
jnp
dec
dec
dec
inc
xor
xor
inc
inc
shl
jo
movs
movs
movs
(bad)
mov
mov
mov
jb
repz
dec
dec
shr
sub
adc
add
and
add
sbb
add
add
add
add
(bad)
(bad)
inc
(bad)
(bad)
inc
nop
test
jne
jne
shr
jae
bound
(bad)
imul
je
jge
jge
xchg
(bad)
mov
(bad)
mov
mov
mov
mov
mov
stos
stos
scas
pop
pop
pop
ret
cmp
cmp
cmp
push
push
cld
jns
jns
test
test
mov
mov
(bad)
(bad)
(bad)
sti
pop
pop
pop
fnstcw
aas
aas
jge
xor
add
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
add
push
addr16
je
jl
jo
jp
push
jne
imul
imul
je
jge
js
cmp
xchg
(bad)
fwait
(bad)
stos
test
(bad)
mov
(bad)
(bad)
movs
cmps
cli
jne
jbe
push
push
push
std
inc
inc
inc
std
cmp
cmp
dec
dec
dec
inc
mov
(bad)
cdq
cdq
cdq
std
pop
pop
pop
jecxz
ds
cmp
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
pop
pop
addr16
dec
pop
mov
popa
pop
ins
call
inc
push
inc
dec
inc
push
dec
push
call
popa
jmp
outs
push
jle
cmp
(bad)
mov
mov
sar
enter
cmps
cmps
cmps
dec
imul
dec
dec
call
push
inc
lods
lods
call
push
push
fidiv
aaa
aaa
outs
aaa
aaa
aaa
push
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
dec
inc
push
jg
aas
dec
jmp
cmp
sub
jmp
and
jmp
sub
jmp
xor
das
sub
dec
push
jmp
outs
(bad)
jp
test
mov
mov
(bad)
(bad)
(bad)
fcmovnu
(bad)
ret
ret
(bad)
jmp
(bad)
(bad)
push
jb
imul
test
push
jne
inc
inc
inc
into
ss
xor
xor
(bad)
(bad)
inc
inc
ds
lods
inc
aas
dec
cmc
cmp
dec
jmp
and
jmp
and
push
xor
push
ss
xor
xor
xor
sub
sub
jmp
sub
push
xor
dec
pop
push
jge
mov
(bad)
mov
fnstsw
jmp
out
call
rcl
(bad)
mov
mov
mov
jl
jl
xchg
mov
push
push
push
div
xor
xor
xor
(bad)
(bad)
inc
(bad)
(bad)
inc
aas
cmp
inc
cmp
das
sub
jmp
and
push
xor
push
xor
(bad)
cmp
cmp
cmp
cmp
xor
xor
jmp
sub
jmp
sub
inc
dec
jmp
jb
xchg
lahf
(bad)
mov
loop
(bad)
in
in
in
call
xlat
xlat
(bad)
mov
cmps
cmps
call
test
jmp
(bad)
cmp
cmp
xor
xor
inc
inc
add
(bad)
inc
cmp
inc
enter
stc
and
jmp
cs
ss
inc
inc
dec
dec
dec
dec
inc
inc
push
ss
sub
jmp
and
jmp
and
(bad)
cmp
jmp
ins
dec
xchg
mov
(bad)
call
lock
aam
push
cmps
jmp
jns
jmp
arpl
cmp
sub
pushf
aaa
aaa
aaa
pop
(bad)
(bad)
inc
xor
sub
jmp
and
cs
inc
call
push
dec
push
inc
(bad)
cmp
xor
xor
daa
daa
sub
pop
pop
pop
call
sbb
and
and
xor
cmp
bound
call
cdq
movs
(bad)
mov
in
in
(bad)
in
in
in
inc
mov
push
mov
(bad)
cmp
sub
(bad)
sub
(bad)
inc
xor
cmp
pop
sbb
call
pop
and
xor
xor
inc
inc
dec
dec
push
dec
dec
(bad)
cmp
xor
das
jmp
daa
sub
and
and
sbb
sbb
pop
pop
pop
call
sbb
call
pop
and
xor
cmp
ins
data16
cdq
xchg
mov
dec
enter
icebp
bnd
loop
jmp
scas
scas
jmp
push
push
(bad)
aaa
aaa
cmp
sub
sub
sub
sub
add
add
sub
daa
and
in
sbb
call
sbb
das
das
xor
inc
inc
dec
dec
push
inc
inc
push
aaa
cmp
cs
es
call
pop
and
sbb
push
jmp
and
jmp
sbb
sbb
pop
push
and
cmp
jle
fwait
xchg
mov
(bad)
fcmovnu
(bad)
icebp
icebp
repnz
int3
into
jmp
mov
(bad)
pop
pop
pop
(bad)
cs
jmp
daa
sub
sub
sub
add
add
sub
cs
and
sub
sbb
and
sbb
sbb
sub
inc
inc
dec
dec
inc
inc
push
xor
jmp
sub
jmp
and
call
sbb
call
sbb
xor
xor
inc
aas
inc
push
jmp
and
sbb
sbb
and
and
inc
cmp
(bad)
jle
mov
lahf
pushf
cmps
(bad)
mov
in
jmp
out
(bad)
mov
stos
stos
std
bound
std
sub
sub
sub
sub
(bad)
inc
es
sbb
pop
sub
stc
pop
push
sbb
es
(bad)
cmp
aas
inc
(bad)
ds
push
xor
jmp
es
sbb
sbb
call
pop
sbb
cmp
call
arpl
push
push
pop
(bad)
cmp
notrack
call
sbb
and
dec
push
dec
lahf
test
(bad)
call
aad
std
sahf
sahf
sahf
cld
push
push
push
cli
sub
sub
xor
xor
cmp
or
(bad)
inc
sub
sub
and
pop
push
sbb
in
adc
and
xor
inc
inc
(bad)
cmp
xor
jmp
sbb
adc
adc
adc
adc
cs
ins
push
ja
push
push
pop
(bad)
cmp
cmp
and
and
sbb
sbb
sub
pop
ins
call
mov
(bad)
(bad)
loope
loop
sahf
sahf
mov
ret
xor
xor
inc
inc
ud0
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
and
mov
adc
sbb
sub
sub
cmp
cmp
push
xor
jmp
es
sbb
sbb
adc
adc
or
or
inc
dec
jmp
jb
data16
dec
dec
dec
jmp
sub
sbb
sbb
pop
pop
and
cmp
inc
(bad)
jp
xchg
xchg
xchg
sahf
push
(bad)
enter
(bad)
(bad)
(bad)
imul
or
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
and
and
and
sub
pop
and
pop
adc
and
xor
xor
cmp
cmp
jmp
sub
push
push
pop
call
pi2fw
or
call
sbb
(bad)
cmp
cmp
dec
inc
dec
(bad)
ds
jmp
daa
sub
sbb
sbb
sbb
sbb
call
dec
cwde
mov
(bad)
fcmovu
(bad)
(bad)
(bad)
mov
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
and
lods
sbb
pop
stc
sbb
sbb
sub
sub
xor
aaa
push
aaa
cmp
das
das
xor
and
call
sbb
adc
adc
dec
push
push
call
adc
jmp
pop
and
pop
and
jmp
and
and
and
and
and
aas
cmp
cmp
xchg
mov
call
rcl
cld
enter
test
test
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
sub
sub
and
and
push
adc
(bad)
push
push
pop
jmp
push
xor
cmp
sub
jmp
and
sbb
sbb
push
push
pop
call
adc
call
push
pop
call
sbb
and
and
sub
sub
es
sub
and
and
sub
jmp
jbe
xchg
(bad)
fwait
call
(bad)
retf
(bad)
add
add
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
and
and
and
mov
push
and
pop
push
sbb
and
and
das
das
xor
ss
xor
aaa
jmp
jmp
call
pop
and
sbb
push
call
sbb
jmp
and
sub
sub
das
das
xor
das
das
xor
es
jmp
and
pop
call
mov
dec
enter
mov
js
mov
add
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
and
sub
pop
sbb
scas
sbb
stc
sbb
sbb
and
xor
push
ss
xor
cmp
das
das
xor
sub
sub
es
es
daa
daa
sub
sub
sub
(bad)
cmp
cmp
cmp
cmp
jmp
and
dec
call
xchg
jmp
ret
mov
mov
mov
add
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
add
add
sbb
and
push
adc
sti
sbb
sbb
es
xor
xor
cmp
cmp
cmp
cmp
push
xor
push
xor
xor
xor
(bad)
cmp
inc
inc
inc
inc
push
jmp
sub
(bad)
cmp
mov
call
mov
mov
xchg
xchg
xchg
push
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
sub
sub
sbb
xlat
push
adc
std
sbb
sbb
daa
daa
sub
xor
xor
(bad)
aas
aas
inc
(bad)
aas
aas
inc
(bad)
ds
(bad)
aas
ds
inc
inc
inc
dec
dec
dec
dec
(bad)
cmp
cmp
sub
sub
cmp
xchg
dec
or
scas
scas
mov
xchg
xchg
xchg
and
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
sbb
sub
and
outs
sbb
and
push
adc
cld
sbb
sbb
es
push
xor
inc
dec
dec
dec
dec
dec
dec
push
call
push
dec
dec
push
sub
(bad)
cmp
nop
inc
mov
scas
lods
mov
lods
lods
lods
scas
mov
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
and
and
and
daa
jo
sbb
push
adc
cld
sbb
sbb
and
and
cs
cmp
inc
dec
dec
dec
push
call
push
dec
push
(bad)
cmp
xor
jmp
sub
cmp
inc
inc
je
(bad)
jge
xchg
lods
stos
scas
stc
cmps
cmps
cmps
popf
test
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
sbb
sub
pop
sbb
arpl
and
sbb
stc
pop
adc
sbb
and
das
xor
cmp
cmp
aas
aas
inc
inc
inc
(bad)
cmp
cmp
xor
xor
xor
xor
sub
push
(bad)
jl
xchg
push
jae
cmp
lahf
lahf
lahf
push
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
daa
adc
or
pop
sbb
mov
push
and
pop
adc
(bad)
push
push
sbb
sbb
sbb
and
and
and
sub
jmp
sub
jmp
es
sub
call
pop
(bad)
imul
inc
mov
(bad)
and
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
sub
sub
and
ss
sbb
xchg
sbb
push
and
sbb
push
(bad)
sbb
sbb
sbb
sbb
push
sbb
and
and
and
push
sub
dec
pop
(bad)
push
dec
pop
(bad)
pusha
pop
push
mov
add
add
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
add
add
and
cs
and
pusha
and
sub
pop
sbb
cli
push
sbb
(bad)
and
sub
and
(bad)
and
and
(bad)
xor
dec
dec
cmc
jo
jns
xchg
xchg
fwait
cmp
push
add
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
sub
sub
and
and
movs
and
sub
jmp
and
hlt
sub
stc
xor
ds
cmp
pop
push
mov
mov
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
and
and
sub
xor
sub
sub
xor
cmp
aaa
inc
mov
cmps
push
push
pop
outs
ins
ins
jae
data16
add
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
sub
add
sbb
add
xor
add
add
and
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
add
add
fstp
fld
and
and
dec
dec
dec
xor
push
xchg
jno
inc
inc
inc
push
adc
adc
add
add
(bad)
(bad)
(bad)
dec
dec
dec
pop
jo
jo
pop
pop
pop
jbe
das
das
push
or
or
add
add
add
and
add
adc
add
add
add
add
(bad)
inc
(bad)
(bad)
inc
lahf
pushf
movs
add
mov
mov
fwait
cdq
mov
out
movs
movs
cmps
jecxz
fwait
pushf
enter
nop
push
push
push
push
cmp
ins
ins
into
mov
mov
jbe
inc
inc
inc
xchg
sbb
sbb
add
sub
add
sbb
add
push
add
add
(bad)
(bad)
inc
(bad)
(bad)
inc
xchg
xchg
fwait
jl
test
clc
cmp
xchg
(bad)
call
mov
std
rol
jmp
mov
jns
pop
pop
pop
cli
outs
outs
outs
(bad)
xchg
xchg
xchg
(bad)
lods
lods
lods
(bad)
xchg
xchg
xchg
jmp
inc
inc
inc
and
adc
add
add
add
add
add
(bad)
inc
(bad)
(bad)
inc
jno
jp
jae
jge
js
cmp
fs
gs
jb
push
jbe
jae
jg
cmp
cwde
xchg
mov
inc
(bad)
retf
ret
sahf
lahf
lahf
std
jns
jp
fs
stos
stos
call
pop
pop
mov
dec
pop
inc
inc
inc
add
dec
add
(bad)
inc
(bad)
(bad)
inc
pop
push
mov
dec
inc
pop
(bad)
cmp
cmp
cmp
inc
dec
call
pop
jmp
dec
cmps
mov
retf
(bad)
fcmovnu
(bad)
leave
leave
leave
(bad)
cmps
cmps
cmps
dec
nop
nop
jmp
jbe
in
dec
dec
imul
dec
add
(bad)
inc
(bad)
(bad)
inc
push
dec
pop
iret
dec
inc
push
cld
xor
(bad)
cmp
inc
inc
inc
inc
(bad)
aas
aas
inc
push
aaa
cmp
cmp
inc
call
(bad)
inc
mov
iret
jmp
out
(bad)
fcmovu
(bad)
mov
mov
cdq
inc
push
ret
ds
and
and
(bad)
(bad)
inc
(bad)
(bad)
inc
dec
inc
push
fdivr
xor
cld
xor
inc
inc
call
pop
call
pop
dec
push
(bad)
aas
aas
inc
push
xor
xor
xor
dec
inc
push
(bad)
jnp
xchg
test
mov
iret
int
(bad)
in
in
in
(bad)
(bad)
fcos
mov
test
test
push
push
push
out
cmp
cmp
dec
dec
dec
push
(bad)
(bad)
inc
(bad)
(bad)
inc
inc
ds
(bad)
xor
cmp
xor
xor
dec
dec
dec
jmp
call
pop
dec
dec
(bad)
cmp
xor
and
and
inc
dec
inc
stos
mov
aad
fdivr
in
in
in
dec
retf
mov
lea
cld
cmp
cmp
(bad)
(bad)
inc
(bad)
(bad)
inc
cmp
xor
dec
call
dec
push
(bad)
ds
push
das
xor
sub
sub
sub
jmp
sub
jmp
daa
sub
dec
inc
dec
dec
mov
jmp
loope
inc
rol
cdq
cdq
cdq
dec
dec
std
xor
cmp
inc
(bad)
(bad)
inc
xor
ds
xor
es
inc
dec
call
pop
dec
dec
push
and
jmp
dec
dec
call
push
push
sub
call
pop
call
ror
in
out
rcl
sar
xchg
xchg
xchg
std
inc
inc
inc
out
cmp
outs
inc
inc
dec
or
(bad)
inc
(bad)
(bad)
inc
xor
cmp
mov
cmp
cmp
push
push
push
inc
dec
push
xor
push
push
pop
call
sbb
push
push
push
(bad)
jns
jle
pop
pop
pop
push
xor
jmp
sub
jmp
outs
jmp
sar
(bad)
(bad)
xchg
xchg
xchg
jecxz
dec
dec
test
inc
sbb
call
inc
(bad)
(bad)
inc
cmp
inc
or
aaa
je
push
sub
sub
inc
dec
inc
dec
push
aaa
call
pop
and
adc
adc
sub
sub
jmp
ins
inc
inc
jmp
and
inc
inc
scas
mov
(bad)
aad
std
enter
xchg
xchg
xchg
sub
out
out
add
addr16
(bad)
inc
(bad)
(bad)
inc
add
add
xor
cmp
and
shl
sub
cmp
cmp
inc
inc
dec
(bad)
cmp
aas
jmp
sub
call
sbb
call
adc
jmp
and
cmp
xor
xor
sub
sub
sub
das
call
push
inc
rol
(bad)
fcmovbe
retf
ds
(bad)
inc
mov
(bad)
inc
(bad)
(bad)
inc
xor
cmp
cmp
inc
push
sub
sub
sub
sub
cmp
inc
inc
push
daa
sub
sbb
sbb
and
and
sub
push
xor
inc
dec
dec
lods
mov
into
into
shl
leave
leave
retf
xchg
xchg
add
mov
add
(bad)
inc
(bad)
(bad)
inc
xor
and
add
sub
sbb
and
xchg
and
daa
imul
sub
inc
inc
inc
(bad)
cmp
cmp
xor
xor
sub
das
jmp
das
xor
cmp
cmp
inc
inc
inc
(bad)
cmp
aas
(bad)
cmp
aas
inc
mov
(bad)
sti
(bad)
enter
stos
lods
push
mov
mov
(bad)
(bad)
inc
(bad)
(bad)
inc
add
add
aaa
xor
add
inc
add
sub
xor
sub
sti
xor
xor
inc
inc
inc
dec
dec
inc
inc
inc
inc
inc
dec
dec
call
push
dec
dec
(bad)
cmp
cmp
jmp
mov
inc
ret
les
mov
mov
(bad)
(bad)
inc
(bad)
(bad)
inc
cmp
inc
add
cmp
es
lds
pop
daa
sti
xor
xor
inc
inc
inc
call
push
call
call
pop
call
pusha
call
dec
push
(bad)
cmp
push
js
call
(bad)
mov
stos
stos
sbb
(bad)
inc
(bad)
(bad)
inc
cmp
daa
aaa
add
and
sub
cli
sub
inc
inc
(bad)
push
push
push
(bad)
pop
pop
pusha
(bad)
pusha
pusha
call
pop
inc
dec
(bad)
cmp
ins
jns
(bad)
mov
cld
mov
movs
movs
adc
(bad)
inc
(bad)
(bad)
inc
xor
xor
add
and
push
sub
and
xor
(bad)
ds
inc
inc
inc
(bad)
cmp
cmp
cmp
imul
mov
mov
mov
pusha
xchg
xchg
xchg
add
movs
cmps
add
(bad)
inc
(bad)
(bad)
inc
sub
add
xor
aaa
xor
and
and
cs
pop
sub
and
sub
(bad)
das
cs
xor
cmp
inc
cmp
jno
ja
sub
scas
scas
scas
adc
mov
mov
add
(bad)
inc
push
push
push
add
push
adc
sub
pop
sub
aaa
test
and
aaa
repz
cmp
cld
inc
ds
stc
pop
push
data16
jns
mov
ret
out
add
add
(bad)
(bad)
inc
(bad)
(bad)
inc
or
add
cmp
add
xor
and
xor
aaa
xor
cmp
inc
enter
fcom
pop
mov
mov
inc
(bad)
fild
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
sub
add
adc
add
and
add
add
and
(bad)
(bad)
inc
pop
pop
pop
push
pop
pop
bound
je
xchg
add
(bad)
dec
dec
dec
sbb
sbb
sub
pop
bound
xchg
push
ss
or
or
add
add
add
add
(bad)
inc
je
adc
jb
imul
leave
jne
jge
test
xchg
lock
lahf
push
push
push
mov
add
fisttp
dec
mov
push
push
sub
add
pop
(bad)
(bad)
inc
pop
push
bound
pop
push
pop
push
(bad)
call
pop
(bad)
pop
push
gs
jb
jnp
xchg
lea
cmc
sahf
sahf
mov
std
gs
add
xor
xor
(bad)
(bad)
inc
inc
aas
dec
(bad)
cmp
aaa
push
das
xor
(bad)
cmp
aas
(bad)
push
push
pop
inc
mov
dec
enter
test
inc
mov
fstp
cmp
push
add
add
cmp
inc
loope
es
xor
xor
aas
aas
inc
(bad)
cmp
cmp
jmp
sub
(bad)
jle
mov
mov
(bad)
(bad)
mov
xchg
xchg
jmp
sti
cmp
daa
daa
sbb
and
cld
aaa
aaa
cmp
dec
dec
dec
(bad)
cmp
inc
jmp
call
pop
and
pop
sbb
inc
inc
leave
call
(bad)
(bad)
(bad)
mov
mov
jae
jae
cmp
cmp
sub
sub
and
sub
div
aaa
inc
inc
push
xor
jmp
pop
and
and
jmp
jmp
inc
dec
call
into
sar
mov
jns
xor
xor
es
sbb
and
sub
cs
cmp
inc
jmp
sub
call
pop
sbb
es
push
(bad)
cmp
cmp
es
pop
jmp
retf
into
std
test
push
push
push
and
sbb
stos
and
and
xor
jmp
sbb
call
aaa
cmp
inc
aas
inc
jmp
and
push
jle
mov
mov
lods
test
add
add
add
sbb
pop
sbb
and
sub
sub
xor
xor
and
and
call
push
pop
jmp
pop
and
and
and
call
call
(bad)
int3
mov
(bad)
inc
(bad)
(bad)
inc
sbb
es
sbb
lea
pop
hlt
sub
sub
jmp
es
and
and
and
jmp
sub
das
inc
dec
dec
mov
call
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
sbb
and
lods
push
sbb
imul
sub
cmp
aaa
aaa
cmp
cmp
cmp
(bad)
cmp
cmp
aas
cmp
test
mov
scas
scas
ins
add
add
(bad)
inc
add
add
sbb
and
sbb
and
cs
cmp
aas
inc
dec
dec
dec
(bad)
cmp
cmp
cmp
je
jl
xchg
xchg
call
push
push
add
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
add
add
sbb
and
sbb
and
and
es
sub
xor
(bad)
sub
sub
(bad)
push
xchg
xor
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
add
add
push
pop
and
pop
and
sbb
and
push
sbb
lock
sub
and
cld
cmp
gs
cmp
push
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
adc
daa
or
and
sub
das
sub
loopne
cmp
pop
push
popa
pop
add
add
(bad)
inc
add
out
mov
xchg
add
add
jae
gs
cs
gs
jne
arpl
cs
gs
jne
arpl
gs
fs
and
arpl
ins
imul
jae
outs
outs
cmp
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
aaa
popa
xor
cmp
xor
xor
cmp
push
jns
je
ins
cs
gs
jne
arpl
cs
jne
je
ins
gs
gs
jne
arpl
gs
add
add
inc
push
inc
inc
push
mov
add
cdq
pop
add
add
pop
xchg
sub
sar
xor
cmp
push
aad
push
bound
or
jb
jae
ret
scas
bnd
jnp
iret
int3
jge
adc
jne
dec
xor
in
mov
fcom
icebp
shl
or
icebp
hlt
jmp
cmp
imul
mov
or
or
iret
imul
add
rcr
les
push
or
jge
pop
pop
mov
mov
ret
hlt
adc
push
out
jo
push
pop
out
cmps
jmp
pusha
and
enter
(bad)
cmp
shl
sbb
sahf
int
cmp
push
js
daa
clc
repnz
inc
mov
es
fiadd
or
mov
jb
xchg
xchg
adc
iret
out
fld
ds
push
je
fisttp
rol
std
into
jl
push
or
mov
sbb
adc
add
or
sbb
(bad)
test
(bad)
or
mov
cli
out
dec
mov
mov
stc
add
movs
(bad)
xor
lods
cmp
je
dec
repnz
adc
xor
ss
and
dec
cmps
mov
sar
ffreep
xor
cmc
jp
xor
push
(bad)
clc
call
and
or
mov
sub
fsub
(bad)
sbb
mov
mov
cmp
sbb
adc
push
sahf
sahf
pusha
xchg
pusha
xlat
int
mov
push
mov
out
pop
push
mov
outs
xchg
lods
sbb
lods
ss
push
inc
mov
jne
mov
sti
xchg
mov
push
rcr
leave
sub
icebp
imul
iret
cli
icebp
add
adc
mul
mov
add
aad
ja
or
outs
test
repz
dec
mov
or
jb
add
fdivr
jns
(bad)
sub
xchg
push
mov
rcr
clc
sbb
scas
dec
mov
mov
xchg
inc
dec
aaa
mov
xchg
stos
mov
jmp
xor
sub
sub
adc
rcl
ret
fisttp
inc
mov
dec
xchg
(bad)
jg
mov
mov
gs
mov
push
mov
xchg
sbb
out
aaa
cld
loop
dec
xchg
mov
sbb
mov
dec
test
xchg
mov
xor
pushf
in
cs
push
dec
ret
fwait
in
(bad)
(bad)
cmp
jae
pop
cmps
aaa
ins
(bad)
stos
in
fiadd
push
pop
mov
sub
iret
sar
stc
std
or
mov
das
jo
inc
or
add
jns
fs
or
bnd
xor
pop
outs
std
inc
nop
loopne
jno
sbb
push
xor
xchg
cmc
and
js
push
ins
cld
pop
add
mov
cdq
pop
stos
jo
scas
or
(bad)
js
jmp
xor
loope
fidivr
repnz
sub
outs
sub
sbb
sub
into
leave
adc
add
sub
jg
xor
in
xor
retf
jmp
dec
cmp
dec
inc
jl
push
ds
pop
push
cmp
mov
mov
(bad)
lods
push
cmps
add
mov
pop
mov
adc
dec
mov
dec
ror
jns
jbe
xchg
or
jmp
and
mov
push
mov
xchg
xor
and
pop
bound
adc
bound
addr16
sub
adc
sar
cmp
sub
inc
mov
xor
mov
sub
cmps
pop
mov
mov
repnz
xlat
retf
and
cmps
add
sti
jp
imul
dec
ins
int3
ja
jne
mov
sbb
nop
test
xchg
enter
(bad)
(bad)
fnstenv
jnp
mov
(bad)
scas
mov
scas
xchg
pop
(bad)
(bad)
out
or
sbb
or
mov
leave
jnp
les
std
xor
out
jge
push
jno
stos
retf
dec
ret
inc
stos
test
mov
hlt
xor
loop
shl
leave
ficom
out
xor
cli
pop
push
ss
lods
and
out
loopne
xor
(bad)
mov
push
jnp
sub
xchg
or
push
or
push
cmp
cdq
popf
xchg
sub
add
in
popf
ins
jmp
sti
mov
data16
sub
pop
adc
fld
xchg
imul
xchg
mov
add
arpl
sub
mov
inc
sbb
ret
push
not
jo
xchg
jne
mov
leave
cmp
repz
pop
mov
push
loope
ss
mov
daa
imul
mov
int
xchg
sub
mov
cmp
fldcw
dec
out
inc
or
jne
mov
inc
scas
sbb
cmps
mov
sub
xchg
push
jecxz
dec
aas
scas
cmp
fstp
jl
or
mov
xchg
inc
xchg
or
outs
mov
ret
or
aaa
popa
inc
inc
and
ds
dec
nop
cli
sub
pop
inc
push
add
shl
or
jl
dec
cdq
xchg
out
push
ja
es
pop
xchg
fstp
lock
pop
xor
push
add
stc
push
lds
fdiv
jnp
and
imul
mov
push
jo
ja
popa
mov
adc
in
mov
iret
jle
sbb
or
or
cmp
add
pop
xchg
sti
xor
or
aaa
sbb
in
jg
mov
(bad)
and
add
sub
xlat
dec
das
ins
xor
pop
mov
lds
(bad)
xchg
fs
(bad)
push
mov
xchg
jns
sbb
out
lea
ins
xor
or
iret
push
pop
call
shl
dec
pop
dec
rcl
adc
popf
test
pop
jle
jo
test
std
cmovb
lea
sti
mov
lahf
pushf
cmp
fiadd
push
fiadd
(bad)
jecxz
retf
cmp
jns
or
lea
test
ins
xor
and
push
cmp
test
cld
pop
sub
shl
mov
out
(bad)
scas
ror
mov
sbb
jb
(bad)
out
mov
xchg
sub
mov
dec
and
mov
ds
or
(bad)
test
movs
push
cmps
add
sbb
dec
add
aad
push
cmp
(bad)
ret
pop
pop
xor
add
sbb
sbb
mov
sbb
enter
sbb
cmp
dec
jae
sbb
dec
movs
mov
pusha
mov
mov
shr
sti
(bad)
mov
pop
out
inc
sbb
sub
cmp
rcr
inc
or
std
hlt
call
leave
gs
(bad)
mov
es
inc
cwde
movs
inc
daa
fadd
(bad)
lock
add
add
add
mov
mov
add
add
add
add
push
dec
add
add
inc
push
lock
adc
nop
repnz
dec
test
xchg
lock
(bad)
lods
aas
add
add
arpl
pop
push
outs
data16
jb
outs
outs
pop
jne
imul
fs
push
outs
ins
jne
gs
outs
outs
arpl
jb
gs
outs
bound
js
ss
push
gs
gs
jae
pop
push
outs
ins
jne
gs
outs
outs
arpl
jb
gs
bound
add
dec
inc
add
add
add
add
or
add
jbe
xor
xor
add
add
push
add
add
lods
sub
add
jle
add
add
inc
dec
push
add
sub
add
and
jb
outs
addr16
add
add
add
and
dec
inc
add
add
add
and
outs
bound
add
inc
js
add
add
push
push
add
add
add
add
add
mov
or
add
add
add
add
add
add
add
fiadd
add
sub
add
arpl
add
in
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
add
add
add
add
or
add
or
add
add
add
or
add
add
add
add
add
add
add
add
add
add
add
add
dec
add
add
dec
add
add
dec
add
add
mov
add
add
push
add
add
and
push
add
push
add
dec
add
add
dec
add
add
cmps
add
push
add
add
push
add
add
push
add
dec
add
add
add
sbb
push
add
push
add
dec
add
add
mov
dec
add
fadd
add
push
add
add
push
add
dec
add
add
add
add
add
dec
add
add
add
enter
push
add
add
add
add
add
add
add
add
inc
add
dec
add
push
add
pop
add
gs
push
push
add
add
xchg
lods
add
lods
add
lods
add
call
add
add
push
push
adc
sub
add
push
adc
add
mov
add
push
(bad)
push
push
add
push
(bad)
push
push
add
push
(bad)
push
push
add
pop
(bad)
push
push
add
pop
(bad)
push
push
add
pop
(bad)
push
push
add
(bad)
push
push
add
(bad)
push
push
add
add
add
add
pop
push
add
add
pop
push
add
add
pop
push
add
add
pop
push
add
add
pop
add
add
push
or
add
add
add
add
push
add
add
push
add
push
add
add
mov
push
add
push
add
add
push
add
add
add
push
add
add
add
cmps
or
or
or
push
add
or
push
add
or
push
add
or
push
add
or
or
add
or
or
add
add
aaa
or
add
aaa
or
add
or
add
aaa
or
add
aaa
or
add
push
add
add
add
add
add
add
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
push
add
jno
push
add
add
retf
or
add
or
or
add
add
or
or
add
inc
or
add
inc
or
add
add
fwait
or
or
add
add
or
or
add
or
or
add
or
or
add
or
or
add
or
or
add
or
add
add
add
or
push
or
push
or
push
or
and
ds
pop
or
fs
ins
or
jl
inc
or
inc
or
inc
or
inc
or
inc
or
inc
or
inc
or
fisttp
fisttp
fisttp
fisttp
inc
or
inc
or
inc
or
inc
or
inc
or
inc
or
inc
or
inc
or
stos
push
or
mov
add
push
das
or
das
or
das
or
das
or
das
or
das
or
das
or
das
or
xchg
add
add
add
add
mov
xchg
add
add
sete
es
sete
or
fisttp
das
or
das
or
das
or
das
or
das
or
dec
adc
add
dec
adc
add
dec
adc
add
dec
adc
add
add
add
add
adc
adc
add
adc
adc
add
adc
adc
add
adc
adc
add
or
push
add
or
push
add
or
push
add
or
push
add
adc
add
add
aad
mov
adc
adc
or
das
or
das
or
das
or
das
or
das
or
das
or
das
or
das
or
das
or
das
or
mov
adc
rcl
mov
adc
loope
mov
adc
cmc
adc
adc
or
das
or
das
or
aaa
adc
adc
add
add
add
push
adc
add
add
add
add
add
add
ins
adc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
rcl
lock
sbb
das
add
add
add
adc
adc
sbb
xor
add
adc
and
lock
sbb
xor
add
add
sbb
cmp
add
adc
outs
adc
adc
push
add
add
add
add
add
add
add
add
add
add
add
add
adc
lods
adc
adc
and
dec
add
add
add
adc
add
and
push
add
add
add
adc
add
add
add
add
adc
add
sub
push
add
add
add
adc
add
add
add
add
adc
sub
add
add
add
adc
xor
js
add
adc
dec
adc
xor
add
add
dec
add
add
add
add
add
add
add
add
add
add
adc
xor
add
add
adc
cmp
call
adc
cmp
mov
add
adc
inc
add
add
adc
inc
add
add
ins
adc
add
add
add
push
add
jno
dec
add
add
add
add
push
dec
add
pop
add
add
add
add
inc
push
jmp
add
add
add
dec
add
add
add
add
add
add
add
add
add
pop
add
add
add
add
push
add
jns
pusha
add
add
add
add
push
add
std
jmp
add
add
add
push
ins
adc
jmp
add
add
add
push
lock
jmp
add
add
add
push
add
std
jmp
add
add
add
push
dec
add
jmp
add
add
add
push
inc
push
std
jmp
add
push
jmp
xor
pop
add
std
push
pop
add
or
pop
add
add
pop
xor
adc
and
aaa
add
add
add
add
pop
add
add
sbb
add
and
jg
add
inc
sbb
test
add
imul
mov
xor
add
add
add
(bad)
sbb
add
add
sbb
add
add
sbb
add
add
add
test
xor
jo
add
adc
call
add
add
sbb
inc
sbb
gs
xchg
in
sbb
nop
add
add
push
xor
add
xor
xor
add
push
push
add
add
test
add
or
add
test
push
push
jmp
or
add
push
pop
pop
add
pop
pop
pop
add
add
add
add
add
test
add
test
test
add
xchg
and
and
and
add
iret
and
pop
add
add
and
add
and
add
add
daa
fadd
add
inc
sbb
fild
add
pop
daa
in
add
(bad)
add
add
std
daa
or
sbb
sub
add
add
sub
add
pop
sub
add
cmp
inc
add
add
or
sbb
test
add
movs
sub
add
in
sbb
(bad)
sub
add
add
sub
add
or
cmp
add
sub
pop
add
add
test
add
inc
sbb
ja
add
pop
sub
add
add
add
sub
test
add
or
sub
add
add
add
add
mov
add
inc
sbb
mov
adc
mov
mov
adc
aam
test
adc
imul
lods
add
add
add
add
das
pop
add
add
xor
xor
add
add
xor
add
add
xor
push
add
xor
lsl
add
and
push
and
add
add
add
add
xchg
sbb
inc
add
add
and
add
add
add
add
add
add
xchg
pop
pop
dec
add
add
add
add
les
addr16
dec
add
add
add
add
push
add
add
add
add
add
pop
and
xchg
inc
pop
cmp
push
add
add
add
add
add
add
or
pop
or
aam
add
add
out
xchg
pop
or
and
add
add
out
xchg
sbb
add
add
out
mov
add
add
or
add
add
add
out
mov
add
add
add
out
enter
push
add
add
add
sbb
sub
add
add
add
add
add
lldt
sub
add
add
add
add
add
add
out
mov
cmp
adc
dec
sub
add
add
add
sbb
sub
add
add
add
add
add
adc
shr
add
add
xchg
inc
pop
cmp
push
add
add
add
xchg
sbb
inc
add
add
sub
add
add
add
add
sub
add
add
add
add
sub
add
add
add
add
add
add
xchg
ins
sbb
add
add
add
add
xchg
jbe
in
sbb
jl
add
add
xchg
add
(bad)
add
add
add
add
add
ins
add
add
xchg
xchg
sbb
add
mov
add
add
xchg
add
add
add
add
xchg
scas
sbb
add
add
add
add
xchg
mov
add
das
add
add
xchg
add
sbb
add
add
add
add
xchg
add
sbb
add
add
xor
add
add
add
cmp
add
add
out
mov
cmp
add
add
sbb
add
add
loope
retf
add
add
xor
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
or
sub
in
add
add
out
repz
add
add
xor
add
add
add
add
xor
add
add
add
pop
or
xor
sub
add
add
out
repz
add
add
add
add
add
add
add
add
out
retf
pop
or
cmp
mov
add
add
sbb
add
add
xor
add
add
add
add
add
add
xchg
inc
pop
cmp
inc
add
xor
xchg
add
add
add
add
cmp
add
add
add
pop
or
inc
add
cmp
add
add
add
sbb
add
cld
cmp
add
add
add
cmp
add
add
add
pop
or
dec
add
add
add
add
sbb
add
push
add
add
cmp
add
add
add
cmp
add
add
add
cmp
add
add
add
xchg
cmp
add
add
add
int3
cmp
add
add
add
in
cmp
add
add
add
or
add
add
xchg
aad
inc
add
sub
add
add
xchg
in
test
cmp
add
add
add
or
add
add
add
add
add
add
add
sbb
cmp
add
add
add
cmp
add
add
add
pop
or
pop
add
cmp
add
add
add
sbb
add
hlt
cmp
add
add
add
cmp
out
das
pop
push
add
cmp
out
mov
cmp
add
add
add
loope
retf
add
cmp
xchg
inc
pop
cmp
data16
cmp
xchg
add
add
cmp
(bad)
or
pop
loopne
add
add
add
(bad)
or
and
add
and
add
add
(bad)
or
loopne
push
add
add
or
add
add
add
(bad)
or
add
add
add
add
and
imul
add
mov
and
add
add
add
mov
and
imul
aas
add
add
mov
and
ins
add
add
add
xchg
cwde
and
ins
add
add
add
add
mov
add
add
xchg
add
and
outs
add
add
add
les
add
add
(bad)
or
and
add
loopne
add
add
(bad)
or
and
add
hlt
aas
add
add
(bad)
or
and
add
adc
add
add
or
add
and
add
add
xchg
inc
pop
cmp
jo
inc
inc
add
add
xchg
push
and
add
pop
inc
add
add
xchg
mov
add
ins
inc
add
add
xchg
sbb
mov
jno
add
add
xchg
and
lea
jno
xchg
inc
add
add
xchg
and
jb
test
add
add
xchg
inc
and
inc
add
add
xchg
push
and
inc
add
add
xchg
pop
and
inc
add
add
xchg
push
add
inc
add
add
xchg
jbe
test
inc
add
add
xchg
test
inc
add
push
inc
add
add
xchg
xchg
and
inc
add
add
xchg
add
add
inc
add
add
out
mov
movs
add
and
add
add
out
leave
and
add
add
add
jns
lods
inc
add
add
xchg
inc
pop
cmp
jp
rol
add
xchg
inc
pop
stos
add
in
add
add
xchg
xchg
add
inc
add
add
xchg
nop
and
add
inc
add
add
xchg
call
inc
add
add
xchg
cmps
and
add
xor
add
add
mov
and
add
cwde
inc
add
add
xchg
or
add
inc
add
add
xchg
or
and
sbb
add
xchg
inc
pop
cmp
add
inc
add
add
(bad)
or
loopne
add
inc
add
add
xchg
inc
pop
cmp
add
inc
add
add
(bad)
or
loopne
add
inc
add
add
(bad)
or
add
xchg
or
add
add
add
and
fadd
add
mov
and
lock
add
add
xchg
inc
pop
cmp
test
add
add
add
(bad)
or
loopne
test
xor
add
add
or
loopne
test
dec
inc
add
add
mov
es
test
jo
add
add
(bad)
or
rol
test
test
add
add
add
add
add
or
es
add
add
add
or
daa
loopne
test
sbb
add
add
xchg
inc
pop
cmp
test
add
add
xchg
sbb
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
dec
add
add
loope
retf
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
out
mov
cmp
xchg
add
add
add
loope
retf
add
add
add
add
add
add
add
add
push
add
add
loope
retf
add
add
add
add
add
add
add
add
add
add
add
add
add
add
xchg
test
cmp
popf
add
push
add
add
xchg
xchg
push
cmp
sahf
add
push
add
add
xchg
jns
cmp
sahf
add
add
add
add
sahf
add
add
mov
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
sbb
add
add
add
add
sbb
push
add
add
xchg
inc
pop
cmp
stos
add
add
add
out
mov
cmp
stos
add
add
add
loope
retf
add
add
add
add
add
add
lods
add
add
add
add
scas
add
pop
add
add
xchg
or
hlt
pop
add
add
add
scas
add
add
add
add
mov
mov
add
add
add
mov
add
add
add
add
mov
and
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
add
out
mov
cmp
ret
add
add
add
add
sbb
add
add
add
add
loope
retf
add
add
add
add
add
add
add
add
add
popa
add
add
xchg
add
add
add
add
xchg
add
add
add
add
add
iret
add
add
add
sbb
pop
cmp
iret
add
add
add
add
add
bound
add
add
add
add
bound
add
add
add
add
bound
add
add
add
add
arpl
add
add
add
add
add
add
xchg
or
add
add
add
add
xchg
inc
pop
cmp
rol
pop
arpl
add
add
add
rol
rol
jl
add
add
les
je
fiadd
rol
cwde
arpl
add
add
add
add
les
stos
das
icebp
add
add
arpl
add
add
add
das
cld
add
add
add
add
xchg
inc
pop
cmp
fild
sub
add
xchg
sub
mov
add
add
xchg
inc
pop
cmp
loope
push
add
add
add
add
add
xchg
inc
pop
cmp
loope
lock
add
xchg
sbb
cmp
loope
add
add
popa
pop
add
add
js
add
add
js
add
add
cdq
pop
add
add
js
add
add
je
add
add
js
add
add
popa
pop
add
add
popa
pop
add
add
popa
pop
add
add
popa
pop
add
add
popa
pop
add
add
popa
pop
add
add
or
add
add
jb
add
add
in
sbb
add
add
sbb
add
add
add
add
add
cdq
pop
add
add
js
add
add
popa
pop
add
add
je
add
add
js
add
add
popa
pop
add
add
je
add
add
js
add
add
popa
pop
add
add
je
add
add
js
add
add
popa
pop
add
add
je
add
add
js
add
add
je
add
add
js
add
add
je
add
add
js
add
add
sub
add
add
dec
sbb
add
add
sbb
add
add
sbb
add
add
popa
pop
add
add
(bad)
sbb
add
add
sbb
add
jmp
add
add
popa
pop
add
add
(bad)
sbb
add
add
sbb
add
jmp
add
add
popa
pop
add
add
(bad)
sbb
add
add
sbb
add
jmp
add
add
popa
pop
add
add
(bad)
sbb
add
add
sbb
add
jmp
add
add
popa
pop
add
add
(bad)
sbb
add
add
sbb
add
jmp
add
add
popa
pop
add
add
(bad)
sbb
add
add
sbb
add
jmp
add
add
retf
sbb
popa
pop
add
add
(bad)
sbb
add
add
sbb
add
jmp
add
add
popa
pop
add
add
(bad)
sbb
add
add
sbb
add
jmp
add
add
popa
pop
add
add
(bad)
sbb
add
add
sbb
add
jmp
add
add
popa
pop
add
add
(bad)
sbb
add
add
sbb
add
jmp
add
add
popa
pop
add
add
popa
pop
add
add
popa
pop
add
add
popa
pop
add
add
je
add
add
js
add
add
in
sbb
add
add
sbb
add
add
add
add
(bad)
sbb
add
add
sbb
add
jmp
add
add
popa
pop
add
add
(bad)
sbb
add
add
sbb
add
jmp
add
add
in
sbb
add
add
sbb
add
add
pop
add
add
cmp
add
add
cmp
add
add
out
and
add
add
pop
add
add
out
and
add
add
add
add
popa
pop
add
add
cmp
add
add
cmp
add
add
popa
pop
add
add
popa
pop
add
add
popa
pop
add
add
popa
pop
add
add
popa
pop
add
add
popa
pop
add
add
mov
add
add
popa
pop
add
add
popa
pop
add
add
cmc
and
add
add
add
add
fs
add
add
add
add
popa
pop
add
add
mov
add
and
add
add
and
fbld
add
add
and
and
add
add
mov
add
add
popa
pop
add
add
popa
pop
add
add
js
add
add
popa
pop
add
add
push
sub
add
add
add
add
add
add
add
cdq
sub
add
add
sbb
add
add
sbb
add
add
add
add
popa
pop
add
add
popa
pop
add
add
je
add
add
js
add
add
js
add
add
in
sbb
add
add
sbb
add
add
sbb
add
add
sbb
add
add
add
add
popa
pop
add
add
popa
pop
add
add
popa
pop
add
add
je
add
add
js
add
add
je
add
add
js
add
add
cdq
sub
add
add
add
add
add
add
cdq
sub
add
add
add
add
dec
sbb
add
add
sbb
add
add
sbb
add
add
sbb
add
add
sbb
add
add
add
add
add
add
sub
je
add
add
js
add
add
je
add
add
js
add
add
je
add
add
js
add
add
je
add
add
js
add
add
scas
sub
cmp
add
add
je
add
add
js
add
add
je
add
add
js
add
add
je
add
add
js
add
add
je
add
add
js
add
add
je
add
add
js
add
add
sub
add
add
dec
sbb
add
add
sbb
add
add
sbb
add
add
add
add
add
xchg
add
add
js
add
add
xchg
add
add
pushf
add
add
xchg
add
add
pushf
add
add
popa
pop
add
add
outs
das
add
add
jmp
add
add
test
add
add
xchg
das
add
add
jmp
add
add
test
add
add
xchg
das
add
add
popa
pop
add
add
jmp
add
add
mov
add
add
das
add
add
fisubr
add
add
xchg
das
add
add
(bad)
das
add
add
dec
xor
add
add
add
popa
add
cmc
add
add
add
add
add
mov
or
add
add
add
add
add
add
add
add
add
add
cmc
add
add
add
add
add
add
add
aaa
add
add
cmp
jmp
add
add
add
cmp
jmp
add
add
in
test
add
add
lea
cdq
add
cmp
or
inc
pop
in
add
inc
pop
mov
pop
in
dec
add
in
and
inc
pop
in
adc
inc
pop
in
mov
add
inc
pop
in
add
inc
pop
in
push
add
in
test
add
add
pop
cmp
xor
sbb
and
xor
add
fwait
add
add
add
das
add
ss
dec
add
add
mov
es
add
push
jp
push
add
add
loope
cmp
add
push
add
push
add
loopne
fld
push
xor
add
pusha
xor
add
jae
pop
add
loopne
icebp
add
xor
add
add
xor
add
add
add
xor
add
push
add
in
mov
add
add
add
stc
add
xor
add
pushf
add
test
fadd
cmp
add
pop
add
out
add
hlt
add
push
add
add
mov
inc
pop
cmp
mov
enter
or
shl
shl
inc
pop
inc
push
dec
add
xor
inc
pop
push
add
push
push
rol
repnz
add
arpl
fld
rol
and
push
arpl
jns
inc
arpl
pop
push
inc
pop
push
add
jae
cdq
add
jmp
push
jmp
push
jno
popa
ss
fld
jae
mov
cmps
push
fld
test
fadd
dec
add
icebp
add
loopne
add
loope
lds
push
loope
lds
push
fld
mov
add
jno
mov
push
retf
ss
add
fild
rol
call
push
add
inc
add
add
add
aaa
add
stc
add
add
add
add
aaa
adc
icebp
add
cmp
loope
dec
aaa
and
loope
push
aaa
es
fld
pop
aaa
cs
xor
inc
pop
cmp
leave
add
aaa
pop
sub
ja
dec
pop
sub
mov
inc
add
add
cmp
icebp
add
add
inc
pop
cmp
rol
movs
aaa
test
leave
add
add
add
aaa
mov
rol
push
xor
pop
rol
pop
lea
rol
retf
aaa
fwait
pop
leave
add
aaa
mov
aaa
mov
rol
aaa
mov
rol
(bad)
pop
rol
cmp
cmp
cmp
pop
ret
add
xchg
pop
icebp
add
jg
add
inc
add
popa
push
inc
pop
fwait
add
inc
pop
cmp
sbb
shl
push
cmp
or
add
and
loope
mov
sub
pop
xor
loope
xchg
cmp
or
push
sahf
cmp
rol
test
push
inc
pop
cmp
mov
add
or
or
add
in
dec
add
cmp
cmp
mov
or
add
pop
push
add
jbe
sub
xor
fadd
sub
push
cmp
add
add
in
sub
jno
in
dec
add
cmp
cmp
sub
inc
pop
cmp
jmp
or
add
add
xor
sahf
cmp
mov
rol
inc
pop
cmp
push
add
cmp
cmp
scas
cmp
add
add
mov
add
cmp
or
add
leave
or
or
add
add
pop
in
dec
push
inc
pop
fmul
mov
fidivr
fisttp
dec
add
pop
cmp
leave
add
cmp
pop
test
or
or
add
cmp
add
add
cmp
or
ss
or
inc
pop
cmp
add
xor
inc
cmp
or
or
add
cmp
or
inc
pop
push
add
push
add
mov
stc
add
cmp
cmp
test
or
cmp
add
stc
add
cmp
push
add
add
add
add
dec
or
je
mov
dec
add
cmp
jns
out
cmp
cmp
cmp
cmp
pop
cmp
sbb
cmp
pop
sahf
or
add
imul
adc
and
mov
sub
pop
cmp
cmp
or
or
inc
cmp
cmp
or
or
push
add
push
add
fmul
cmp
sysexit
fisttp
pop
add
pop
cmp
imul
add
sub
inc
pop
and
rol
clc
or
add
stc
add
cmp
or
push
test
dec
add
or
or
shl
inc
pop
push
add
inc
or
push
mov
dec
or
push
popa
add
cmp
push
add
push
or
jb
mov
or
and
or
or
or
cmp
or
inc
pop
cmp
mov
or
cmp
cmp
movs
cmp
add
add
cmp
or
jmp
add
pop
push
add
sahf
or
repnz
or
pop
lods
or
cmp
or
push
add
add
mov
stc
add
cmp
sbb
add
add
int
mov
mov
cdq
add
add
test
pop
push
add
cmp
jmp
or
add
mov
jmp
add
or
jb
inc
add
xchg
cmp
mov
mov
jmp
or
mov
add
cmp
scas
sbb
or
add
add
loope
sbb
fmul
cdq
add
xor
xor
xor
adc
xchg
add
cdq
add
pop
cmp
adc
dec
ds
add
add
mov
add
lea
jno
test
test
ds
add
add
add
add
and
and
add
das
or
add
cmp
fld
out
ds
or
add
adc
pusha
das
inc
or
or
push
or
adc
add
ds
and
aas
jle
jno
into
das
(bad)
or
add
xor
adc
out
add
inc
pop
sahf
or
xor
lea
stc
add
or
add
add
add
add
sub
or
adc
sub
add
add
add
add
arpl
mov
add
mov
add
add
xchg
add
add
imul
add
add
mov
add
rol
mov
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sub
cmp
add
add
or
sub
add
sub
mov
add
add
add
add
add
and
inc
add
inc
add
inc
add
pusha
add
pusha
add
pusha
add
popa
add
loope
or
sub
add
or
sub
and
or
sub
inc
push
or
sub
popa
push
or
sub
add
loope
or
sub
add
or
sub
pusha
or
add
add
adc
adc
or
add
add
add
add
adc
adc
inc
or
add
add
sbb
sub
pusha
or
add
add
sub
cmp
add
add
or
add
add
or
add
add
or
add
add
or
add
add
or
add
add
or
and
inc
or
pusha
or
or
or
ror
or
inc
ud2
add
add
or
sub
or
add
add
add
or
sub
adc
add
add
add
adc
add
add
adc
add
add
adc
add
add
adc
add
add
adc
add
add
adc
add
add
adc
add
add
adc
add
add
sub
cmp
add
add
sbb
sub
adc
adc
mov
add
add
add
adc
loopne
sbb
sub
add
sub
cmp
add
add
push
adc
adc
mov
add
add
pop
sbb
sub
rcl
add
add
pop
sub
cmp
add
add
pop
sbb
sub
and
adc
adc
and
sbb
sub
inc
sbb
add
add
sub
cmp
add
add
adc
adc
inc
sbb
add
add
sbb
sub
pusha
sbb
add
add
add
add
add
add
sbb
add
add
sbb
add
add
sbb
add
add
sbb
add
add
add
or
adc
push
push
push
xchg
lods
push
lds
retf
push
call
pop
xor
cmp
push
pop
int3
pop
loope
pop
or
or
or
or
or
pop
or
or
or
dec
or
or
or
or
or
or
add
add
or
add
add
add
add
add
or
add
push
xor
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
and
add
add
add
add
add
imul
add
add
add
imul
add
outs
add
add
add
add
add
xor
add
icebp
xor
add
adc
outs
add
add
xor
add
inc
xor
add
xor
add
ins
xor
xor
add
xor
mov
outs
add
add
add
add
add
add
xor
add
icebp
xor
add
adc
mov
add
xor
add
imul
add
nop
add
add
add
add
add
add
add
add
add
or
xor
add
add
xor
add
add
add
add
add
add
add
add
add
add
add
add
adc
or
add
add
add
sbb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
and
or
add
and
or
or
jne
or
adc
jbe
or
add
and
add
or
adc
cmps
add
or
movs
add
add
inc
add
add
add
add
add
add
sldt
add
lldt
add
add
push
add
add
add
adc
add
push
add
add
add
adc
add
add
add
add
sbb
add
pusha
add
add
add
add
add
sbb
add
add
add
add
add
add
pop
add
add
and
add
imul
add
add
and
add
ins
add
add
add
and
add
add
add
add
daa
add
add
sub
add
jb
sub
add
jnp
sub
add
jp
sub
add
jl
sub
add
add
add
add
test
xor
add
xchg
xor
add
add
add
add
add
add
add
add
xchg
add
add
xchg
add
add
pushf
add
add
fwait
add
add
test
add
add
add
add
fld
dec
add
add
add
add
loopne
dec
add
sub
or
add
add
add
add
add
add
add
or
sbb
pusha
add
add
add
add
test
or
push
add
jae
stos
add
stc
or
or
or
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
add
add
add
add
add
or
jbe
add
add
add
xchg
add
add
add
add
add
xchg
add
add
add
add
add
add
add
add
add
add
add
add
add
add
ret
add
add
add
add
add
fild
add
in
loopne
add
add
add
add
add
pop
add
add
add
ins
add
or
add
push
add
push
outs
ins
jne
gs
outs
outs
arpl
jb
add
ins
jne
gs
outs
outs
arpl
jb
gs
add
arpl
ins
imul
outs
je
je
outs
outs
inc
jb
ins
gs
jb
add
ins
ins
outs
outs
add
outs
outs
ja
inc
popa
jae
add
jae
gs
add
ins
ins
outs
outs
cs
jo
ins
imul
push
popa
jae
jae
push
jb
jae
outs
je
je
outs
outs
inc
outs
jb
add
jb
inc
jne
imul
jns
je
ins
cs
imul
inc
outs
jb
jae
push
jns
je
ins
cs
ins
ins
add
jae
gs
cs
jb
ja
outs
add
ins
jne
gs
outs
outs
arpl
jb
gs
jae
jne
arpl
add
arpl
xor
cmp
ss
popa
gs
ss
xor
bound
xor
gs
jae
jne
arpl
add
ins
jne
gs
outs
outs
arpl
jb
gs
outs
ins
jne
gs
outs
outs
arpl
jb
add
xor
xor
data16
xor
cmp
aaa
bound
cmp
aaa
bound
xor
xor
add
arpl
xor
xor
xor
ss
data16
xor
arpl
cmp
data16
arpl
cmp
cmp
bound
popa
xor
cmp
bound
xor
arpl
xor
arpl
xor
cmp
popa
cmp
xor
cmp
bound
bound
aaa
xor
xor
xor
arpl
popa
xor
xor
cmp
arpl
xor
xor
ss
cmp
add
bound
xor
gs
cmp
xor
xor
gs
cmp
xor
bound
data16
fs
xor
cmp
bound
xor
xor
xor
add
xor
popaw
xor
popa
bound
xor
popa
xor
xor
xor
popa
bound
cmp
add
xor
cmp
arpl
xor
cmp
bound
cmp
xor
cmp
cmp
cmp
xor
add
xor
data16
cmp
xor
cmp
xor
bound
popaw
cmp
xor
arpl
bound
popa
arpl
xor
cmp
xor
cmp
bound
cmp
xor
xor
xor
cmp
arpl
popaw
xor
arpl
xor
gs
arpl
xor
popa
xor
xor
add
data16
xor
xor
cmp
gs
bound
popa
aaa
xor
xor
cmp
cmp
arpl
add
xor
xor
popa
xor
cmp
xor
xor
xor
arpl
popa
arpl
add
fs
xor
data16
fs
cmp
xor
xor
xor
xor
xor
xor
xor
ss
add
xor
xor
arpl
popa
xor
popa
bound
xor
aaa
xor
cmp
fs
arpl
xor
cmp
xor
fs
xor
cmp
arpl
add
arpl
popa
cmp
fs
cmp
xor
xor
xor
xor
arpl
popa
xor
cmp
bound
popa
cmp
cmp
gs
xor
ss
xor
arpl
xor
cmp
aaa
data16
aaa
xor
bound
aaa
bound
xor
arpl
bound
xor
xor
xor
xor
fs
xor
ss
xor
xor
xor
arpl
arpl
xor
cmp
xor
bound
xor
bound
popa
cmp
ss
add
popa
xor
xor
arpl
xor
cmp
arpl
ss
xor
cmp
popa
xor
arpl
xor
xor
popa
xor
cmp
bound
xor
xor
xor
xor
xor
bound
aaa
bound
popaw
xor
xor
cmp
cmp
popa
ss
xor
add
xor
arpl
ss
gs
popa
xor
arpl
cmp
popa
fs
add
jae
outs
addr16
outs
fs
ins
ins
outs
outs
cs
outs
imul
jae
inc
popa
jae
outs
add
je
popa
jo
inc
outs
ins
ins
outs
outs
cs
outs
outs
je
outs
ins
jae
inc
ins
popa
imul
gs
fs
bound
push
push
gs
imul
ins
outs
outs
cs
gs
jo
jb
add
je
imul
outs
outs
jae
outs
jo
jo
outs
outs
je
imul
ins
ins
outs
outs
cs
outs
je
imul
outs
outs
inc
outs
je
jb
push
ja
gs
outs
jb
add
je
outs
outs
pusha
xor
inc
arpl
popa
je
jb
inc
outs
outs
ins
gs
outs
add
je
add
popa
jb
inc
outs
gs
je
fs
outs
fs
je
jb
bound
add
jae
gs
cs
outs
fs
outs
ins
cs
outs
ins
jo
ins
gs
dec
inc
outs
jne
gs
bound
xor
push
jns
je
ins
cs
outs
ins
ins
arpl
outs
jae
inc
outs
gs
arpl
dec
inc
outs
jne
gs
je
jb
xor
dec
imul
inc
outs
jne
gs
je
jb
push
jns
je
ins
cs
outs
ins
ins
arpl
outs
jae
dec
dec
imul
ins
arpl
outs
pusha
xor
push
jns
je
ins
cs
outs
ins
ins
arpl
outs
jae
dec
bound
arpl
fs
add
jae
jb
popa
bound
outs
ins
ins
arpl
outs
pusha
xor
dec
outs
je
data16
outs
ins
ins
arpl
outs
inc
push
fs
arpl
outs
add
jae
gs
cs
outs
ins
ins
arpl
outs
jae
push
jo
arpl
ins
imul
je
data16
outs
ins
ins
arpl
outs
inc
push
fs
jbe
outs
je
jb
jae
dec
outs
je
data16
outs
ins
ins
arpl
outs
inc
push
fs
jbe
outs
je
popa
outs
fs
gs
inc
popa
outs
arpl
inc
jbe
outs
je
jb
jae
push
jns
je
ins
cs
outs
ins
jo
outs
outs
je
outs
fs
add
outs
arpl
inc
jbe
outs
je
popa
outs
fs
gs
inc
outs
ins
jo
outs
outs
je
inc
imul
jae
bound
je
jb
bound
add
imul
jae
bound
je
je
add
outs
je
data16
jb
jo
jb
jns
push
add
outs
jo
jb
jns
push
fs
jbe
outs
je
jb
jae
push
jb
jo
jb
jns
push
fs
jbe
outs
je
popa
outs
fs
gs
push
jns
gs
outs
outs
jbe
jb
gs
inc
jo
ins
imul
push
gs
imul
add
jae
gs
cs
outs
outs
imul
je
outs
outs
add
je
imul
add
outs
jbe
jb
add
gs
imul
dec
push
gs
gs
gs
je
add
jne
addr16
bound
je
jb
bound
add
jae
gs
cs
imul
imul
jne
imul
jae
inc
bound
addr16
outs
outs
push
jae
jb
outs
fs
je
jb
bound
add
ins
gs
gs
imul
add
outs
arpl
jae
inc
outs
jne
ins
add
outs
outs
add
jne
add
jbe
jb
outs
ins
outs
je
push
jo
arpl
ins
inc
outs
ins
fs
inc
jbe
outs
je
jb
jae
inc
jbe
outs
je
popa
outs
fs
gs
inc
js
gs
imul
je
jb
dec
outs
outs
add
jae
gs
cs
ins
outs
bound
imul
add
gs
imul
popa
je
outs
outs
add
imul
ins
add
je
xor
dec
outs
je
xor
dec
outs
je
je
add
ins
jo
gs
imul
add
jae
gs
cs
dec
cs
outs
ins
jo
gs
imul
ins
popa
je
push
je
gs
ins
add
arpl
jns
push
jns
je
ins
cs
dec
add
arpl
jns
outs
outs
add
ins
add
ins
outs
jb
push
je
gs
ins
add
je
add
jb
popa
ins
add
je
ins
jo
gs
outs
je
fs
js
gs
imul
push
jne
jo
jb
gs
js
gs
imul
ins
popa
bound
xor
dec
bound
arpl
jae
gs
bound
push
jns
je
ins
cs
gs
arpl
outs
add
jae
ins
bound
outs
ins
jo
outs
jns
je
jb
bound
add
jae
ins
bound
outs
outs
imul
je
outs
outs
inc
je
jb
bound
add
jae
ins
bound
outs
jo
jb
addr16
jb
bound
add
jae
ins
bound
jne
je
jb
inc
je
jb
bound
add
jae
ins
bound
gs
jb
jo
imul
imul
jae
gs
bound
imul
outs
outs
inc
je
jb
bound
add
jae
ins
bound
outs
outs
jb
popa
je
outs
outs
popa
ins
push
gs
imul
imul
jae
gs
bound
popa
ins
add
jae
ins
bound
jb
fs
je
je
jb
bound
add
jae
ins
bound
imul
imul
jae
gs
bound
jb
fs
popa
jb
inc
je
jb
bound
add
jae
ins
bound
gs
imul
imul
imul
imul
ins
popa
addr16
inc
jbe
outs
je
outs
outs
add
outs
jo
jb
jns
outs
outs
add
jae
jne
arpl
popa
outs
popa
addr16
push
jns
je
ins
cs
gs
jne
arpl
add
ins
jo
ins
popa
je
outs
outs
push
gs
popa
js
je
outs
outs
jae
je
jb
bound
add
jae
gs
cs
jne
je
ins
gs
outs
ins
jo
ins
gs
gs
imul
ins
jo
ins
gs
outs
gs
je
fs
je
jb
bound
add
outs
je
ins
gs
outs
ins
jo
je
bound
imul
bound
add
jo
jb
jae
dec
ins
fs
jae
inc
je
jb
bound
add
ins
push
imul
je
jb
bound
add
jae
gs
cs
jne
je
ins
gs
outs
je
jb
jo
gs
imul
outs
je
ins
gs
jns
gs
popa
outs
fs
add
inc
jb
jo
outs
push
gs
imul
imul
je
ins
cs
arpl
imul
je
addr16
jo
jns
dec
inc
jb
jo
outs
push
jb
outs
jae
outs
jb
add
ins
ins
gs
imul
imul
push
push
inc
je
jb
bound
add
jb
outs
add
arpl
imul
je
ins
cs
gs
add
je
jb
outs
arpl
add
jae
gs
cs
push
imul
imul
gs
add
gs
fs
je
jb
add
gs
push
imul
ins
bound
imul
imul
add
add
imul
imul
jae
outs
outs
add
imul
arpl
imul
je
ins
cs
imul
inc
outs
jb
gs
push
jns
je
ins
cs
imul
inc
outs
outs
je
outs
ins
jae
inc
jne
je
outs
add
ins
bound
outs
js
inc
outs
outs
je
outs
je
outs
outs
je
outs
ins
add
outs
je
js
dec
outs
jne
inc
outs
outs
je
outs
ins
add
popa
fs
fs
je
ins
jae
outs
outs
je
outs
ins
add
gs
inc
outs
ins
ins
arpl
outs
add
gs
jae
outs
outs
je
outs
ins
add
outs
jne
je
ins
add
outs
gs
add
je
outs
outs
inc
popa
jae
add
jae
gs
cs
imul
inc
outs
outs
je
outs
ins
jae
push
jb
ins
imul
gs
arpl
add
je
outs
js
popa
jae
add
ins
gs
jne
je
outs
add
ins
arpl
outs
inc
push
fs
jbe
outs
je
jb
jae
push
gs
arpl
outs
inc
push
fs
jbe
outs
je
popa
outs
fs
gs
push
ins
imul
arpl
popa
outs
gs
add
je
ins
outs
arpl
push
gs
inc
outs
js
push
dec
inc
ins
gs
outs
je
outs
ins
ins
arpl
outs
add
gs
outs
outs
je
outs
ins
add
ins
ins
arpl
outs
push
imul
je
ins
cs
imul
inc
popa
je
add
popa
ins
jne
inc
outs
outs
jbe
jb
gs
inc
popa
je
dec
bound
arpl
popa
je
dec
bound
arpl
outs
je
jb
jae
inc
popa
je
dec
bound
arpl
jae
imul
je
jb
jae
inc
popa
je
dec
bound
arpl
jae
imul
je
popa
outs
fs
gs
inc
gs
outs
fs
arpl
bound
arpl
gs
outs
fs
arpl
jb
jo
jb
jns
inc
gs
outs
fs
arpl
jb
jo
jb
jns
push
fs
jbe
outs
je
jb
jae
inc
jne
popa
je
outs
outs
add
ins
outs
addr16
gs
ins
je
dec
gs
popa
addr16
outs
js
jne
je
outs
jae
dec
gs
popa
addr16
outs
js
arpl
add
jne
gs
jne
je
outs
jae
dec
outs
jne
gs
jbe
outs
je
jb
jae
dec
outs
jne
gs
jbe
outs
je
popa
outs
fs
gs
dec
outs
je
data16
arpl
add
popa
ins
gs
jb
inc
ins
gs
outs
je
inc
jb
ins
gs
jb
push
jb
jo
jb
jns
gs
fs
je
add
popa
ins
gs
jb
push
jb
jo
jb
jns
gs
fs
je
dec
jo
imul
popa
ins
gs
jb
push
gs
jo
popa
je
add
outs
jo
je
ins
gs
outs
je
dec
gs
push
jns
je
ins
cs
imul
dec
outs
jo
je
dec
gs
outs
popa
jb
add
jns
jbe
outs
je
jb
jae
dec
outs
jne
gs
jne
je
outs
inc
jbe
outs
je
jb
jae
dec
outs
jne
gs
jne
je
outs
inc
jbe
outs
je
popa
outs
fs
gs
push
gs
inc
outs
ins
jo
jae
je
outs
outs
inc
jbe
outs
je
jb
jae
dec
inc
outs
ins
jo
outs
outs
je
outs
outs
outs
arpl
add
jae
gs
cs
imul
dec
popa
jb
jne
add
je
jb
popa
ins
push
jns
gs
gs
jo
jb
inc
outs
jne
ins
gs
outs
imul
add
jae
gs
cs
imul
dec
gs
popa
je
outs
outs
add
ins
ins
inc
gs
jb
dec
popa
outs
outs
data16
gs
jb
push
je
jb
bound
jb
add
gs
imul
gs
imul
arpl
outs
add
gs
imul
jo
inc
jb
jae
inc
outs
outs
jbe
jb
gs
push
jns
je
ins
cs
imul
dec
gs
gs
outs
jne
arpl
inc
imul
ins
add
jae
gs
cs
imul
dec
gs
imul
ins
popa
jo
ins
popa
add
jae
popa
ins
push
jb
gs
gs
jo
jb
push
jb
jo
jb
jns
push
fs
popa
ins
ins
bound
imul
jb
jo
jb
jns
gs
fs
je
add
outs
jo
jb
jns
popa
je
add
arpl
gs
jne
arpl
imul
jb
dec
outs
arpl
imul
je
fs
jbe
outs
je
push
outs
jne
gs
jbe
outs
je
jb
jae
push
outs
jne
gs
jbe
outs
je
popa
outs
fs
gs
push
je
jb
jne
inc
jbe
outs
je
jb
jae
push
jns
je
ins
push
popa
jb
ins
gs
jb
add
ins
gs
outs
outs
inc
je
jb
bound
add
jo
je
push
jns
je
ins
cs
imul
push
push
imul
jo
je
push
push
arpl
imul
gs
jo
jb
je
outs
outs
add
jo
je
push
imul
push
dec
inc
ins
gs
outs
je
push
imul
je
add
outs
outs
ja
pop
ins
ins
dec
outs
outs
jb
inc
je
jb
bound
add
jae
gs
cs
ins
ins
cs
gs
popa
ins
imul
add
gs
ins
je
jb
fs
gs
inc
outs
js
jns
add
ins
jne
gs
outs
outs
arpl
jb
gs
outs
outs
je
outs
ins
jae
inc
imul
gs
inc
outs
js
dec
outs
je
data16
ja
gs
push
imul
arpl
add
xor
ss
gs
arpl
xor
xor
aaa
xor
xor
fs
xor
dec
jae
outs
popa
bound
push
outs
dec
popa
bound
inc
outs
ins
outs
jb
outs
outs
jbe
jb
gs
push
outs
ins
jne
gs
outs
outs
arpl
jb
gs
outs
outs
jbe
jb
gs
add
jb
outs
fs
outs
jne
push
outs
dec
outs
je
outs
outs
jbe
jb
gs
push
jne
gs
outs
popa
bound
inc
push
fs
outs
push
imul
je
inc
outs
outs
jbe
jb
gs
arpl
fs
aaa
aaa
data16
aaa
xor
xor
xor
xor
xor
ss
gs
imul
gs
outs
push
je
imul
gs
gs
push
imul
push
je
imul
gs
gs
push
inc
push
outs
js
push
push
imul
push
outs
push
imul
arpl
add
je
data16
imul
gs
outs
fs
outs
jne
add
xor
xor
cmp
xor
xor
xor
cmp
xor
xor
xor
cmp
xor
arpl
cmp
cmp
cmp
xor
xor
xor
xor
xor
xor
add
gs
jne
add
xor
xor
fs
ss
cmp
xor
xor
xor
arpl
arpl
xor
arpl
popa
bound
cmp
bound
cmp
fs
xor
add
xor
xor
arpl
xor
xor
arpl
arpl
arpl
xor
arpl
xor
data16
popa
aaa
cmp
data16
popa
cmp
cmp
xor
xor
popa
add
arpl
cmp
xor
popa
xor
cmp
xor
popa
xor
ss
arpl
add
jo
push
jne
gs
imul
gs
imul
imul
gs
push
jne
gs
imul
add
fs
gs
jne
add
imul
ja
arpl
xor
cmp
ss
popa
gs
ss
xor
bound
xor
add
je
imul
ins
jne
gs
outs
outs
arpl
jb
gs
jb
jo
jb
imul
xor
cmp
popa
arpl
xor
xor
popa
popa
xor
xor
add
bound
xor
popa
xor
fs
cmp
data16
xor
xor
popa
cmp
arpl
xor
xor
aaa
bound
cmp
bound
popa
bound
arpl
xor
cmp
xor
xor
xor
ss
xor
xor
data16
cmp
xor
jbe
ins
jne
pop
pop
add
imul
add
imul
gs
dec
gs
gs
add
gs
jb
jo
jb
jns
arpl
cmp
arpl
cmp
cmp
cmp
cmp
xor
xor
xor
arpl
add
arpl
outs
jb
addr16
push
jns
add
je
push
jns
add
ins
jne
add
push
jb
jbe
gs
gs
outs
ja
add
dec
outs
push
jb
jbe
gs
gs
dec
outs
jo
je
cmp
arpl
bound
xor
jae
arpl
cmp
xor
xor
xor
cmp
fs
popa
xor
bound
arpl
popa
xor
add
cmp
xor
bound
cmp
xor
xor
fs
xor
cmp
add
xor
popa
fs
xor
cmp
arpl
gs
cmp
bound
arpl
arpl
xor
arpl
xor
ss
cmp
xor
xor
xor
xor
arpl
xor
gs
xor
xor
cmp
xor
xor
cmp
add
xor
cmp
bound
fs
xor
xor
xor
fs
xor
xor
inc
jne
je
outs
pop
inc
ins
imul
fs
popa
fs
dec
jo
outs
gs
ins
outs
jbe
pop
dec
jo
outs
gs
fs
inc
ins
outs
jae
outs
add
ins
outs
jbe
pop
inc
ins
outs
jae
outs
add
fs
inc
ins
outs
jae
add
ins
outs
jbe
pop
inc
ins
outs
jae
add
aaa
xor
arpl
ss
cmp
xor
cmp
bound
arpl
ss
xor
arpl
xor
aaa
xor
aaa
xor
xor
xor
xor
xor
xor
add
xor
bound
xor
xor
cmp
data16
xor
xor
xor
cmp
add
xor
aaa
xor
aaa
xor
arpl
arpl
cmp
xor
data16
popa
add
popa
bound
cmp
xor
bound
data16
arpl
gs
cmp
xor
bound
arpl
xor
cmp
xor
xor
bound
arpl
cmp
aaa
cmp
aaa
arpl
arpl
bound
cmp
arpl
xor
xor
gs
gs
cmp
aaa
xor
add
imul
inc
outs
ins
jo
outs
outs
je
arpl
aaa
xor
xor
cmp
xor
xor
xor
popa
bound
xor
fs
xor
xor
add
aaa
xor
arpl
cmp
cmp
xor
xor
bound
fs
arpl
xor
bound
cmp
add
gs
xor
ss
arpl
popa
xor
xor
bound
xor
aaa
xor
add
jo
outs
bound
xor
cmp
ins
outs
jae
bound
xor
arpl
xor
xor
xor
arpl
xor
xor
fs
data16
arpl
bound
xor
xor
cmp
popa
bound
popa
xor
data16
cmp
xor
add
gs
jb
jo
jb
jns
dec
outs
jne
push
jb
jo
jb
jns
dec
imul
outs
jo
jb
jns
inc
gs
outs
popa
je
jb
jb
jo
jb
jns
arpl
xor
xor
cmp
arpl
arpl
bound
cmp
aaa
bound
cmp
popa
xor
cmp
cmp
xor
fs
data16
cmp
add
gs
data16
popa
xor
xor
aaa
xor
xor
xor
gs
xor
cmp
aaa
add
cmp
cmp
xor
cmp
xor
xor
xor
bound
xor
addr16
push
imul
pop
push
imul
gs
push
add
je
dec
outs
jne
add
je
dec
outs
jne
add
jne
inc
push
add
je
dec
imul
gs
dec
imul
imul
popa
outs
gs
je
inc
gs
outs
popa
je
jb
jae
je
inc
gs
outs
popa
je
jb
inc
gs
outs
popa
je
jb
push
add
ins
arpl
gs
jns
outs
outs
jb
dec
outs
jne
gs
jne
je
outs
add
ins
arpl
ins
push
gs
add
bound
data16
xor
bound
arpl
cmp
aaa
xor
cmp
aaa
xor
arpl
cmp
arpl
xor
gs
xor
cmp
cmp
cmp
xor
xor
xor
xor
add
aaa
cmp
aaa
xor
xor
popa
xor
xor
xor
xor
xor
xor
cmp
arpl
xor
xor
ss
cmp
cmp
cmp
cmp
xor
fs
gs
add
xor
cmp
arpl
xor
cmp
cmp
cmp
ss
popa
add
xor
xor
xor
xor
cmp
aaa
cmp
cmp
xor
bound
bound
xor
add
addr16
jns
add
jb
ins
gs
jb
arpl
je
jb
add
outs
jbe
jb
inc
popa
arpl
arpl
xor
fs
xor
cmp
xor
arpl
xor
xor
xor
arpl
popa
cmp
arpl
xor
bound
cmp
xor
popa
arpl
xor
cmp
aaa
xor
xor
xor
xor
add
arpl
gs
popa
xor
bound
arpl
popa
fs
xor
xor
data16
ss
fs
xor
add
xor
xor
xor
bound
bound
arpl
cmp
data16
fs
arpl
xor
cmp
bound
gs
xor
cmp
aaa
xor
aaa
cmp
xor
popa
add
xor
xor
xor
cmp
xor
ss
xor
xor
xor
xor
xor
add
gs
xor
xor
xor
bound
xor
cmp
cmp
aaa
arpl
xor
arpl
arpl
data16
bound
xor
xor
xor
gs
bound
add
arpl
fs
jb
jo
jb
jns
inc
outs
outs
data16
imul
gs
jns
arpl
arpl
bound
data16
aaa
xor
bound
gs
xor
bound
xor
add
xor
cmp
xor
xor
aaa
aaa
ss
cmp
aaa
ss
popa
fs
inc
popa
je
inc
push
add
ins
outs
jbe
pop
inc
popa
je
inc
push
add
arpl
aaa
bound
bound
xor
fs
cmp
popa
cmp
arpl
xor
addr16
dec
jae
push
add
je
dec
jae
push
add
je
dec
jae
outs
outs
data16
imul
pop
dec
jae
outs
outs
data16
imul
ins
outs
je
dec
outs
jne
gs
gs
jne
je
outs
push
jo
arpl
aaa
xor
arpl
cmp
xor
bound
bound
xor
popa
cmp
gs
add
je
dec
outs
je
imul
outs
outs
inc
outs
outs
je
imul
gs
inc
popa
jns
push
outs
jb
inc
popa
jns
add
imul
jae
arpl
xor
cmp
xor
xor
arpl
cmp
bound
popaw
cmp
xor
xor
arpl
bound
xor
popa
xor
xor
xor
aaa
ss
arpl
xor
xor
data16
arpl
cmp
xor
arpl
xor
ss
xor
xor
aaa
cmp
bound
xor
xor
arpl
aaa
xor
fs
bound
cmp
xor
xor
xor
popa
bound
cmp
add
je
arpl
xor
xor
bound
ss
arpl
bound
cmp
xor
cmp
bound
xor
jae
je
arpl
xor
xor
bound
ss
arpl
bound
cmp
xor
cmp
bound
xor
arpl
xor
aaa
xor
aaa
cmp
xor
aaa
fs
cmp
xor
xor
popa
add
je
arpl
xor
xor
fs
xor
cmp
ss
xor
xor
xor
je
arpl
xor
xor
fs
xor
cmp
ss
xor
xor
xor
je
arpl
popaw
xor
ss
cmp
xor
xor
popa
cmp
xor
popa
xor
cmp
xor
xor
fs
arpl
arpl
fs
xor
xor
xor
arpl
fs
xor
arpl
gs
xor
gs
arpl
fs
aaa
fs
xor
arpl
arpl
xor
arpl
xor
cmp
xor
xor
popa
cmp
xor
arpl
xor
ss
aaa
xor
cmp
gs
xor
xor
ss
popa
cmp
xor
aaa
aaa
xor
arpl
cmp
data16
xor
cmp
bound
xor
arpl
add
xor
cmp
aaa
xor
bound
arpl
data16
xor
xor
xor
addr16
push
outs
jne
fs
popa
jb
inc
js
jae
jae
jae
je
push
outs
jne
fs
popa
jb
inc
js
jae
jae
arpl
xor
cmp
xor
cmp
bound
bound
xor
cmp
xor
xor
cmp
xor
je
arpl
arpl
gs
xor
xor
arpl
fs
data16
xor
cmp
xor
add
je
arpl
arpl
gs
xor
xor
arpl
fs
data16
xor
cmp
xor
add
je
arpl
arpl
xor
cmp
arpl
popa
xor
xor
cmp
cmp
cmp
xor
jae
je
arpl
arpl
xor
cmp
arpl
popa
xor
xor
cmp
cmp
cmp
xor
imul
gs
inc
outs
outs
data16
imul
jb
jo
jb
jns
push
add
jb
ins
imul
popa
arpl
outs
addr16
imul
outs
ins
jne
gs
popa
arpl
outs
addr16
imul
outs
ins
jne
gs
push
fs
popa
arpl
outs
addr16
imul
gs
outs
fs
popa
arpl
outs
addr16
imul
je
inc
jb
ins
add
je
inc
jb
ins
add
je
push
outs
ins
jne
add
je
push
outs
ins
jne
add
je
push
outs
ins
jne
gs
push
add
je
push
outs
ins
jne
gs
push
add
je
push
gs
outs
add
je
push
gs
outs
add
je
dec
jae
outs
popa
bound
add
je
dec
jae
outs
popa
bound
add
je
dec
jae
outs
outs
data16
imul
gs
dec
jae
outs
outs
data16
imul
jae
gs
add
add
fs
push
jb
jo
jb
jns
push
add
ins
outs
jbe
pop
push
jb
jo
jb
jns
push
add
imul
gs
jns
push
add
outs
jo
popa
ins
add
xor
xor
data16
xor
cmp
bound
xor
arpl
xor
xor
aaa
cmp
cmp
arpl
cmp
xor
aaa
xor
xor
xor
xor
arpl
cmp
xor
add
xor
xor
xor
xor
xor
xor
xor
xor
cmp
add
xor
xor
xor
xor
xor
bound
xor
popa
fs
xor
addr16
dec
outs
jne
jae
jae
je
dec
outs
jne
jae
addr16
dec
imul
jae
je
dec
imul
inc
jno
popa
ins
jae
outs
bound
arpl
cmp
cmp
aaa
xor
popa
cmp
xor
fs
bound
arpl
data16
arpl
arpl
cmp
aaa
xor
xor
xor
gs
cmp
xor
arpl
arpl
arpl
cmp
xor
xor
xor
popa
gs
bound
xor
xor
arpl
popa
xor
xor
cmp
popa
cmp
xor
xor
xor
cmp
xor
gs
arpl
gs
xor
ss
xor
xor
arpl
bound
fs
xor
xor
gs
arpl
fs
xor
xor
gs
gs
bound
xor
data16
aaa
xor
add
je
arpl
ss
xor
xor
xor
cmp
cmp
arpl
aaa
popa
arpl
add
je
arpl
xor
data16
xor
arpl
ss
xor
cmp
xor
ss
xor
popa
bound
bound
cmp
arpl
xor
aaa
xor
gs
fs
popaw
arpl
arpl
xor
arpl
bound
bound
cmp
ss
aaa
bound
xor
cmp
arpl
bound
xor
add
bound
aaa
xor
bound
xor
aaa
cmp
bound
xor
fs
xor
popa
cmp
addr16
arpl
arpl
data16
arpl
xor
aaa
bound
data16
arpl
data16
add
je
arpl
arpl
xor
popa
xor
xor
arpl
ss
cmp
cmp
bound
arpl
xor
xor
xor
xor
xor
xor
arpl
cmp
cmp
xor
xor
popa
fs
cmp
bound
aaa
xor
popa
xor
cmp
gs
add
je
arpl
cmp
xor
aaa
xor
popa
xor
aaa
cmp
xor
fs
xor
add
je
dec
outs
outs
add
je
inc
outs
ja
ins
outs
popa
fs
popa
addr16
imul
aaa
data16
aaa
popa
xor
cmp
bound
bound
fs
arpl
xor
bound
add
cmp
data16
popa
xor
xor
xor
cmp
cmp
cmp
xor
xor
add
gs
aaa
ss
xor
popa
xor
popa
aaa
xor
fs
xor
popa
bound
xor
addr16
inc
jae
gs
bound
jae
je
inc
jae
gs
bound
addr16
inc
jo
dec
outs
outs
add
je
inc
jo
dec
outs
outs
add
push
je
jb
jne
add
arpl
cmp
gs
arpl
xor
arpl
ss
cmp
xor
xor
add
cmp
popa
cmp
xor
xor
fs
xor
bound
xor
aaa
cmp
arpl
ss
xor
cmp
xor
aaa
xor
cmp
cmp
popa
xor
xor
xor
arpl
add
je
push
jne
gs
jae
je
push
jne
gs
arpl
popa
bound
cmp
cmp
popa
xor
aaa
xor
arpl
data16
xor
add
cmp
aaa
xor
xor
xor
aaa
ss
xor
xor
xor
aaa
ss
arpl
xor
xor
popa
popa
xor
xor
xor
bound
popa
xor
add
popa
xor
bound
aaa
xor
xor
aaa
xor
xor
xor
xor
add
ins
gs
inc
outs
ins
ins
arpl
outs
inc
push
add
cmp
popa
aaa
xor
xor
xor
fs
bound
gs
xor
xor
bound
arpl
xor
xor
xor
xor
data16
xor
xor
xor
cmp
xor
arpl
data16
cmp
xor
fs
popaw
xor
ss
add
cmp
cmp
xor
xor
xor
xor
fs
popa
xor
cmp
xor
xor
xor
gs
xor
cmp
fs
xor
cmp
add
inc
ins
imul
jae
gs
outs
popa
jb
inc
outs
arpl
push
imul
outs
gs
data16
fs
xor
arpl
cmp
popa
aaa
cmp
xor
bound
arpl
cmp
cmp
xor
bound
xor
cmp
xor
xor
xor
cmp
cmp
xor
xor
ss
xor
bound
cmp
xor
add
xor
xor
xor
xor
data16
xor
popa
xor
popa
xor
cmp
arpl
xor
popa
xor
fs
xor
aaa
xor
bound
cmp
xor
xor
add
fs
push
gs
outs
jbe
dec
outs
imul
jb
ins
outs
jbe
pop
push
gs
outs
jbe
dec
outs
imul
arpl
xor
xor
xor
cmp
arpl
popa
cmp
ss
xor
xor
xor
push
gs
inc
ins
outs
arpl
dec
outs
jne
gs
gs
jne
je
outs
push
jo
jbe
ins
jne
gs
ins
imul
jbe
gs
outs
jne
gs
gs
jne
je
outs
push
jo
arpl
xor
xor
aaa
xor
cmp
xor
xor
xor
xor
arpl
aaa
popa
xor
jo
jb
outs
fs
ins
bound
gs
arpl
outs
inc
push
add
xor
aaa
xor
xor
xor
popaw
fs
popa
xor
aaa
fs
xor
add
xor
xor
xor
xor
popa
popa
arpl
popa
xor
xor
add
xor
aaa
xor
xor
xor
xor
xor
aaa
xor
arpl
aaa
popa
xor
xor
arpl
xor
xor
bound
fs
xor
xor
cmp
bound
xor
aaa
xor
arpl
arpl
bound
data16
cmp
xor
xor
cmp
popa
cmp
popa
fs
xor
arpl
xor
popa
xor
xor
xor
aaa
cmp
xor
bound
popa
fs
xor
cmp
cmp
arpl
xor
arpl
gs
bound
xor
cmp
popa
cmp
arpl
add
bound
bound
xor
bound
cmp
xor
xor
xor
bound
arpl
cmp
aaa
bound
arpl
popa
aaa
popa
popa
xor
arpl
popa
xor
xor
xor
xor
xor
bound
arpl
bound
cmp
cmp
aaa
cmp
cmp
gs
gs
cmp
xor
cmp
add
bound
bound
cmp
xor
xor
cmp
xor
xor
bound
add
data16
cmp
arpl
gs
xor
data16
cmp
xor
xor
xor
arpl
data16
cmp
aaa
cmp
popa
popa
xor
xor
gs
xor
ss
add
imul
ja
dec
outs
popa
fs
aaa
xor
data16
popa
aaa
xor
ss
xor
xor
bound
xor
ss
add
xor
data16
bound
aaa
xor
cmp
xor
xor
xor
cmp
add
xor
xor
xor
gs
xor
xor
xor
arpl
xor
cmp
aaa
ss
data16
outs
outs
ja
inc
ins
outs
jae
add
outs
outs
ja
inc
ins
outs
jae
outs
add
outs
jne
push
jne
je
inc
ins
imul
jne
push
gs
arpl
gs
inc
ins
imul
xor
xor
xor
cmp
fs
popa
cmp
aaa
arpl
cmp
xor
bound
add
xor
ss
cmp
xor
xor
arpl
popa
cmp
data16
cmp
arpl
cmp
add
xor
cmp
cmp
xor
xor
bound
xor
xor
cmp
cmp
xor
outs
outs
popa
je
dec
bound
outs
jne
gs
outs
ja
add
fs
gs
jne
gs
inc
ins
imul
dec
gs
jne
gs
dec
outs
jne
gs
gs
jne
je
outs
push
jo
push
imul
outs
outs
je
outs
je
outs
fs
add
jo
outs
jb
dec
bound
outs
jne
gs
outs
ja
add
outs
popa
fs
jb
jns
arpl
bound
xor
cmp
outs
popa
fs
jb
jns
arpl
bound
xor
jae
add
outs
popa
fs
jb
jns
arpl
bound
xor
gs
outs
popa
fs
jb
jns
arpl
bound
xor
arpl
xor
xor
aaa
data16
xor
cmp
bound
xor
xor
add
ss
xor
popa
xor
xor
xor
ss
xor
xor
bound
xor
data16
popa
xor
xor
xor
gs
cmp
gs
xor
bound
add
je
push
gs
jne
arpl
popa
outs
popa
addr16
addr16
inc
jne
je
jb
add
je
inc
jne
je
jb
add
popa
jne
je
outs
jae
popa
outs
arpl
addr16
inc
gs
jne
je
inc
jb
popa
je
dec
outs
jae
popa
outs
arpl
je
jo
add
je
jb
jo
jb
jns
popa
ins
jne
add
outs
jo
jb
jns
outs
outs
add
addr16
push
gs
jb
jo
jb
jns
popa
ins
jne
add
gs
je
inc
gs
gs
je
add
gs
je
push
jns
add
outs
fs
gs
inc
fs
jbe
outs
je
popa
outs
fs
gs
gs
outs
je
outs
outs
add
xor
xor
ss
popa
data16
data16
xor
xor
xor
xor
add
xor
bound
cmp
xor
arpl
xor
xor
bound
xor
cmp
ss
cmp
bound
cmp
ss
xor
cmp
cmp
add
xor
xor
xor
popa
data16
xor
cmp
aaa
popa
fs
popa
cmp
xor
bound
cmp
data16
arpl
arpl
xor
ss
bound
xor
bound
gs
cmp
arpl
data16
popaw
ss
xor
arpl
popa
cmp
cmp
cmp
bound
arpl
fs
data16
ss
xor
xor
cmp
xor
fs
cmp
xor
xor
xor
xor
cmp
xor
ss
xor
xor
arpl
bound
bound
bound
popa
xor
xor
aaa
xor
add
xor
cmp
arpl
xor
aaa
data16
xor
cmp
popa
xor
cmp
xor
ss
xor
add
outs
outs
arpl
jo
outs
gs
outs
jae
outs
add
outs
jae
add
add
jne
add
outs
jne
add
imul
add
inc
push
add
inc
outs
outs
data16
imul
popa
inc
push
add
je
imul
outs
outs
inc
outs
outs
je
imul
xor
xor
bound
ss
arpl
bound
cmp
xor
cmp
bound
xor
arpl
xor
xor
fs
xor
cmp
ss
xor
xor
xor
popaw
xor
ss
cmp
xor
xor
popa
cmp
xor
popa
xor
cmp
xor
xor
fs
push
outs
jne
fs
popa
jb
inc
js
jae
jae
arpl
arpl
gs
xor
xor
arpl
fs
data16
xor
cmp
xor
add
arpl
xor
cmp
arpl
popa
xor
xor
cmp
cmp
cmp
xor
inc
jb
ins
add
ins
jne
add
ins
jne
gs
push
add
jb
outs
add
inc
outs
popa
bound
add
inc
outs
outs
data16
imul
outs
jne
jae
dec
imul
arpl
gs
xor
ss
xor
xor
arpl
bound
fs
xor
xor
bound
cmp
xor
xor
gs
gs
bound
xor
data16
aaa
xor
add
xor
xor
xor
xor
xor
cmp
cmp
arpl
aaa
popa
arpl
add
cmp
data16
xor
arpl
ss
xor
cmp
xor
ss
xor
arpl
data16
arpl
xor
aaa
bound
data16
arpl
data16
add
aaa
arpl
xor
popa
xor
xor
arpl
ss
cmp
cmp
bound
arpl
cmp
xor
aaa
xor
popa
xor
aaa
cmp
xor
fs
xor
add
outs
add
outs
ins
outs
popa
fs
popa
addr16
imul
dec
outs
outs
add
ins
gs
push
gs
outs
jbe
dec
outs
imul
inc
jne
je
jb
add
popa
jne
je
inc
fs
popa
jae
imul
ins
gs
inc
gs
jns
gs
jb
ins
dec
popa
outs
fs
add
imul
gs
popa
ins
jne
add
je
popa
ins
jne
add
je
dec
gs
jae
je
dec
popa
outs
fs
gs
je
push
gs
add
push
jae
imul
je
push
outs
jne
arpl
addr16
dec
outs
addr16
add
je
inc
jne
jb
outs
je
jne
je
jb
add
je
inc
popa
je
push
imul
popa
je
addr16
inc
dec
inc
gs
outs
popa
je
jb
addr16
push
gs
arpl
outs
dec
outs
addr16
add
je
push
gs
arpl
outs
push
je
jb
add
outs
arpl
add
outs
je
xor
dec
jae
gs
gs
jae
je
push
gs
add
ins
arpl
ins
add
outs
arpl
inc
outs
ins
ins
popa
outs
add
ins
bound
add
ins
jo
jb
inc
js
push
add
ins
outs
jbe
add
cmp
bound
xor
aaa
xor
data16
xor
xor
xor
bound
xor
arpl
je
arpl
xor
fs
cmp
ss
gs
data16
xor
aaa
xor
jae
je
arpl
arpl
xor
data16
cmp
popa
xor
fs
cmp
xor
ss
xor
cmp
arpl
xor
aaa
gs
arpl
xor
bound
xor
arpl
popaw
cmp
xor
aaa
bound
bound
bound
xor
cmp
xor
aaa
aaa
xor
aaa
xor
gs
inc
popa
outs
arpl
add
jbe
imul
outs
popa
fs
outs
ins
jo
outs
outs
je
popa
fs
inc
ins
imul
pop
push
imul
je
add
gs
gs
outs
jne
gs
gs
jne
je
outs
inc
outs
ja
inc
jbe
outs
je
inc
fs
popa
outs
fs
gs
inc
outs
je
gs
outs
popa
jb
inc
outs
arpl
inc
jbe
outs
je
dec
outs
jne
gs
outs
jne
ins
gs
ins
imul
je
push
outs
push
je
imul
pop
push
imul
jb
je
jb
dec
outs
fs
data16
bound
jb
outs
add
jo
jns
addr16
dec
gs
popa
ins
jne
add
push
popa
jb
add
pop
inc
jno
popa
ins
imul
dec
ins
fs
popa
ins
jne
add
je
push
dec
inc
gs
outs
popa
je
jb
addr16
dec
jb
imul
jb
add
je
popa
jb
outs
je
addr16
dec
jae
gs
outs
popa
jb
inc
outs
arpl
push
imul
arpl
add
je
js
arpl
imul
ins
bound
inc
gs
popa
ins
add
je
dec
popa
ins
add
je
popa
outs
imul
jae
jne
arpl
je
gs
ins
add
je
push
outs
imul
gs
je
imul
gs
add
outs
jbe
jb
inc
jb
ins
push
je
imul
push
popa
ins
jne
dec
jb
gs
jne
je
addr16
dec
popa
jae
popa
ins
jne
add
je
jb
push
gs
fs
jns
add
popa
add
je
dec
push
add
je
jne
ins
imul
imul
jae
je
dec
gs
jae
je
push
outs
jae
je
outs
outs
add
gs
je
inc
arpl
jo
outs
jb
addr16
dec
outs
jo
je
ins
outs
arpl
imul
pop
dec
jne
jo
je
ins
outs
arpl
imul
pop
push
outs
jae
je
outs
outs
add
outs
jae
outs
jb
inc
ins
outs
arpl
push
jb
je
add
outs
jae
outs
jb
inc
imul
arpl
push
outs
inc
jb
popa
jns
inc
js
je
addr16
arpl
arpl
cmp
cmp
cmp
arpl
bound
xor
fs
fs
je
outs
jo
popa
jb
outs
je
imul
gs
dec
arpl
add
je
dec
ja
gs
push
push
popa
ins
outs
add
fs
dec
outs
jne
gs
gs
jne
je
outs
push
jo
jae
je
arpl
bound
bound
gs
popa
xor
cmp
xor
xor
bound
xor
popa
bound
xor
add
cmp
cmp
gs
xor
fs
xor
xor
xor
gs
xor
xor
fs
arpl
push
jne
add
je
inc
jne
jb
outs
je
addr16
inc
imul
gs
inc
imul
add
xor
cmp
xor
data16
data16
xor
fs
popa
xor
add
je
push
jae
jb
popa
ins
add
je
push
gs
imul
add
je
push
jne
imul
je
dec
popa
imul
ja
push
push
gs
inc
popa
jns
push
gs
gs
outs
arpl
jno
popa
ins
jae
addr16
push
gs
imul
inc
outs
ins
fs
popa
je
add
popa
jb
add
je
push
imul
je
add
je
inc
jo
ins
imul
dec
arpl
add
je
imul
jns
popa
ins
add
imul
gs
je
inc
imul
jns
addr16
dec
outs
arpl
imul
push
gs
imul
add
je
push
je
jb
jne
push
jb
add
ins
outs
jbe
pop
inc
outs
ins
ins
arpl
outs
inc
push
add
je
inc
push
outs
add
je
dec
je
ins
add
je
inc
outs
jne
je
inc
ins
gs
jb
inc
gs
outs
jne
gs
je
jb
jae
je
inc
popa
je
inc
outs
outs
je
js
add
add
jbe
dec
gs
add
jo
jae
add
fs
inc
outs
ins
ins
arpl
outs
inc
push
add
cmp
xor
xor
ss
data16
bound
cmp
xor
xor
data16
xor
addr16
inc
arpl
outs
add
je
dec
gs
je
ins
jae
jae
je
dec
imul
outs
ins
dec
imul
outs
fs
push
gs
popa
jb
gs
jb
jo
jb
jns
inc
imul
bound
jb
add
je
dec
ins
fs
je
ins
jae
addr16
inc
popa
je
inc
outs
outs
je
js
add
fs
inc
outs
ins
jo
gs
add
je
inc
outs
outs
je
outs
je
addr16
inc
outs
arpl
gs
ins
gs
outs
je
inc
outs
outs
je
imul
pop
dec
je
ins
jae
popa
fs
push
gs
arpl
outs
inc
push
add
fs
push
jb
jbe
gs
outs
jne
gs
gs
jne
je
outs
push
jo
popa
fs
dec
outs
popa
fs
je
arpl
arpl
xor
xor
cmp
xor
bound
data16
xor
xor
add
gs
je
add
je
dec
arpl
add
je
push
outs
jb
inc
jb
popa
add
je
dec
imul
je
dec
popa
js
imul
xor
aaa
bound
xor
xor
ss
cmp
xor
cmp
xor
arpl
xor
addr16
arpl
fs
xor
gs
aaa
xor
xor
xor
xor
xor
popa
aaa
add
bound
xor
xor
aaa
gs
data16
gs
xor
xor
arpl
xor
cmp
xor
xor
aaa
aaa
xor
xor
cmp
arpl
cmp
aaa
arpl
xor
fs
arpl
data16
xor
add
jne
outs
ja
add
je
outs
ins
ins
popa
outs
fs
imul
add
fs
je
popa
ins
ins
imul
ins
bound
inc
js
jb
arpl
jae
arpl
je
fs
arpl
add
fs
dec
outs
jne
gs
outs
ja
add
fs
dec
outs
jne
gs
jo
jae
je
push
imul
jae
je
inc
popa
outs
arpl
add
outs
jae
add
je
dec
outs
ja
arpl
aaa
xor
xor
gs
aaa
data16
xor
bound
xor
cmp
xor
xor
arpl
xor
xor
cmp
popa
xor
popa
xor
xor
gs
cmp
add
xor
cmp
data16
xor
data16
fs
arpl
arpl
arpl
cmp
data16
xor
xor
xor
arpl
xor
aaa
xor
xor
data16
data16
xor
cmp
cmp
cmp
arpl
aaa
xor
cmp
bound
cmp
fs
inc
outs
outs
je
outs
je
outs
fs
add
je
inc
jne
je
outs
add
outs
fs
gs
jne
arpl
arpl
cmp
aaa
cmp
data16
xor
bound
arpl
xor
bound
arpl
arpl
jae
je
dec
gs
fs
dec
outs
jae
jb
add
ins
outs
jbe
inc
je
jae
je
dec
jae
jo
outs
add
je
jbe
je
add
bound
xor
xor
xor
xor
xor
cmp
arpl
xor
bound
data16
je
outs
je
jns
jae
gs
bound
arpl
cmp
fs
aaa
xor
xor
cmp
xor
xor
xor
push
jns
arpl
outs
outs
imul
je
jns
add
jbe
imul
ins
bound
add
xor
xor
xor
xor
bound
bound
cmp
bound
cmp
xor
aaa
xor
xor
add
bound
cmp
gs
xor
popa
ss
popa
xor
xor
push
ins
gs
add
jns
cmps
retf
cmp
jns
cmp
push
cmp
pop
push
sbb
mov
xor
dec
xor
jg
aad
cmp
push
or
push
adc
add
add
add
add
add
add
add
adc
sbb
add
add
add
or
or
and
add
and
and
add
xor
add
add
adc
test
adc
adc
add
or
add
push
adc
add
adc
pop
and
add
add
add
adc
adc
add
or
add
and
add
push
and
add
add
and
add
sbb
and
add
sub
add
adc
and
adc
and
add
push
or
add
adc
add
add
add
add
push
pop
add
add
sub
add
add
add
add
cmp
adc
add
sbb
push
or
and
sbb
adc
adc
and
add
or
adc
adc
xor
push
adc
and
add
adc
add
and
add
sub
push
adc
and
adc
push
adc
push
adc
or
add
push
add
push
add
or
adc
push
add
add
add
add
or
add
inc
add
inc
push
add
add
xor
and
add
and
and
add
or
add
sbb
add
add
push
adc
add
adc
adc
add
sbb
add
or
push
adc
or
add
adc
add
or
push
adc
adc
adc
adc
adc
add
adc
adc
add
adc
add
cmp
dec
add
adc
adc
and
add
adc
adc
add
adc
sub
add
adc
adc
add
sbb
and
adc
and
adc
push
jne
push
adc
add
add
and
add
and
add
cmp
add
adc
adc
adc
add
xor
adc
sbb
adc
xor
adc
add
cmp
adc
sbb
or
add
adc
std
add
adc
adc
adc
add
push
jb
jae
outs
je
je
outs
outs
inc
jne
ins
fs
popa
jae
jae
xor
xor
xor
xor
add
push
or
add
add
add
add
and
add
adc
sub
adc
or
adc
adc
adc
add
add
push
add
add
add
add
or
adc
adc
sub
or
add
inc
add
sbb
imul
adc
adc
adc
adc
add
ror
add
add
add
add
xor
push
jns
je
ins
cs
gs
jne
arpl
cs
outs
outs
ins
jae
push
je
outs
outs
ins
jns
jns
gs
gs
jne
arpl
jne
ins
fs
xor
xor
xor
xor
add
test
add
imul
je
push
imul
jne
imul
outs
jb
cs
gs
imul
imul
gs
imul
ins
gs
imul
popa
je
jb
xor
xor
xor
xor
add
add
add
aaa
add
or
add
add
add
add
add
add
and
add
cmp
add
add
add
add
add
add
push
add
push
jb
jo
outs
outs
inc
js
gs
imul
ja
add
add
and
add
add
ins
and
outs
arpl
jb
add
and
add
inc
outs
jo
jb
addr16
and
data16
jb
outs
outs
and
xor
aaa
add
push
add
or
data16
jb
outs
outs
add
add
sbb
add
add
sbb
add
adc
sbb
and
adc
xor
and
sbb
and
and
sbb
pop
add
or
or
add
push
add
add
add
and
sbb
and
adc
push
sbb
add
add
push
sbb
add
adc
test
adc
test
adc
adc
adc
adc
adc
add
add
push
add
add
add
pop
add
or
add
adc
add
or
add
adc
add
or
add
or
adc
or
add
pop
add
inc
adc
add
leave
adc
add
and
add
ins
or
add
or
add
and
adc
or
add
add
inc
adc
adc
adc
add
add
add
or
add
and
add
add
add
adc
push
adc
add
adc
and
add
or
add
adc
add
add
adc
add
and
add
adc
sub
adc
adc
push
adc
or
push
add
or
or
or
add
push
add
add
push
add
or
pop
add
adc
add
add
add
adc
add
add
sbb
add
or
add
add
adc
pop
add
adc
add
push
or
add
sbb
add
sbb
add
cmp
add
cmp
adc
push
or
add
cmp
add
cmp
popf
add
push
push
and
adc
add
push
add
icebp
pop
and
push
sbb
add
push
push
add
add
add
add
or
add
add
adc
add
add
add
imul
sbb
add
sbb
or
or
sbb
add
add
add
sbb
and
or
and
add
sbb
or
add
or
loope
and
or
add
sbb
and
sbb
or
and
add
sub
add
push
adc
adc
adc
adc
pop
add
adc
test
adc
test
adc
adc
adc
adc
adc
adc
adc
add
add
add
adc
add
sbb
adc
add
adc
adc
add
and
add
sub
pop
add
inc
adc
add
adc
and
or
adc
add
and
pop
or
add
and
adc
adc
dec
add
jno
and
adc
adc
adc
adc
add
sbb
pop
add
push
add
sbb
add
push
adc
adc
and
add
adc
adc
and
add
sbb
and
add
adc
and
push
add
adc
add
or
dec
adc
add
dec
adc
and
add
adc
adc
adc
add
adc
pop
adc
adc
adc
push
and
or
sub
add
or
add
or
add
add
sbb
adc
pop
or
adc
adc
or
cmp
sub
test
and
adc
adc
sbb
add
add
or
or
adc
add
and
add
sbb
add
sbb
add
adc
and
add
or
or
and
adc
add
sub
add
or
xor
sub
adc
add
add
fld
and
add
sub
add
add
add
sbb
pop
add
adc
add
add
add
adc
add
adc
add
adc
adc
mov
adc
and
add
add
jns
add
adc
push
and
add
sbb
cmp
and
or
push
adc
adc
add
sub
adc
add
or
or
add
add
add
adc
push
adc
push
push
add
adc
add
adc
add
add
pop
add
adc
push
adc
dec
adc
mov
add
adc
sbb
and
std
add
xchg
push
and
add
or
pop
add
cmp
or
add
cmp
add
add
push
add
push
add
rol
add
push
adc
adc
adc
add
adc
sbb
mov
sbb
adc
sbb
adc
push
add
adc
sbb
add
add
adc
sbb
adc
sbb
sbb
xor
push
and
add
sub
add
adc
add
add
or
add
add
add
add
add
add
cmp
xor
inc
add
add
add
sub
add
cmp
sub
add
add
add
add
xor
sub
add
aaa
add
xor
inc
add
add
cmp
cmp
inc
add
xor
and
adc
add
test
add
add
add
add
and
add
add
outs
jb
js
dec
popa
imul
jb
gs
ins
add
add
add
and
