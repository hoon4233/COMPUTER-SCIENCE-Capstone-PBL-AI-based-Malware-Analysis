mov
push
push
mov
xor
mov
push
inc
inc
outs
ins
jo
arpl
ror
xchg
(bad)
fcomp
in
sbb
(bad)
js
adc
mov
push
sub
mov
mov
mov
inc
cmp
mov
cmps
out
addr16
fdiv
pop
fidiv
mov
icebp
dec
jecxz
inc
cmps
cs
jge
mov
jg
loope
or
pop
or
adc
add
xchg
sar
pop
mov
and
adc
pop
fild
jl
cmp
xor
xchg
sar
sbb
jecxz
sbb
hlt
jge
js
dec
scas
and
loopne
lods
jmp
inc
xor
rcr
sub
jns
sub
sahf
mov
and
pop
or
hlt
dec
xor
pop
fisub
mov
pop
sub
sub
mov
test
mov
and
sar
lea
leave
fimul
or
out
test
pop
fist
xor
adc
jmp
stos
mov
mov
add
stc
push
ins
cmps
test
loop
push
mov
in
sbb
push
ror
aas
push
data16
dec
push
lods
loop
hlt
scas
mov
dec
cmc
pop
mov
movs
and
adc
add
or
ins
inc
inc
sub
jl
adc
ds
ja
cmp
ss
data16
rol
outs
aam
pop
add
(bad)
cdq
popaw
sar
sar
fsub
jns
inc
jmp
push
push
xchg
hlt
imul
or
out
bnd
mov
pushf
xchg
neg
(bad)
xlat
ds
in
sbb
pop
shl
inc
xchg
cmp
add
mov
popf
(bad)
mov
mov
(bad)
ret
mov
push
imul
setae
inc
jle
pop
add
add
jnp
jecxz
mov
mov
ffree
pop
imul
add
movs
hlt
xor
sahf
sub
fbld
mov
mov
inc
inc
push
xchg
into
dec
(bad)
cmp
rcr
cmp
jp
pusha
jns
push
inc
mov
and
xchg
add
or
call
ffree
ret
jb
cmp
imul
loop
ds
inc
test
or
test
jae
clc
jmp
cdq
rcr
cmp
adc
xchg
jp
arpl
sbb
jl
imul
xor
inc
pop
dec
inc
mov
gs
xchg
dec
inc
mov
push
aam
adc
mov
mov
ficom
and
or
adc
jo
data16
fsubr
dec
mov
ffree
dec
test
sub
pop
(bad)
xchg
push
scas
cmp
sbb
mov
mov
iret
add
addr16
push
aas
sub
inc
and
jnp
jne
fisub
pusha
cmp
push
imul
lds
xor
imul
imul
lods
not
push
stc
jg
pushf
lods
pusha
retf
gs
pop
lods
push
fs
dec
mov
jl
pop
xor
pop
cmps
mov
dec
test
in
lock
outs
pushf
xor
adc
mov
cmp
fwait
lock
mov
imul
hlt
cld
(bad)
leave
mov
mul
movs
fcom
xchg
xor
jge
cmp
push
retf
push
dec
mov
pop
lods
mul
out
cmps
imul
addr16
js
retf
and
xor
pushf
das
ds
aas
and
add
mov
call
mov
sub
or
clc
shl
shl
int3
jbe
sbb
jo
mov
mov
jae
sbb
ss
aas
nop
sub
dec
mov
xchg
add
sub
daa
in
jae
jb
and
loop
cmps
sbb
jmp
xor
sub
cmp
test
sub
aad
jne
mov
std
cmp
iret
jg
inc
shl
test
mov
popw
lahf
add
or
into
jo
fidivr
outs
sbb
inc
xchg
inc
nop
je
pop
je
sbb
pop
loop
inc
mov
pop
cmps
pop
test
xor
pop
(bad)
stos
jmp
test
movs
jecxz
jno
ds
or
stos
and
pop
fidivr
add
xchg
mov
and
retf
imul
add
sbb
repnz
mov
popf
into
cdq
pop
ds
or
fstp
and
paddusw
xchg
inc
stos
or
dec
popa
jo
fs
or
and
jl
cdq
jecxz
dec
bound
mov
sbb
sub
(bad)
fimul
out
mov
push
push
xchg
pop
push
stc
push
pop
std
xor
and
add
pop
xchg
mov
dec
retf
cs
mov
adc
xchg
lods
mov
and
mov
xchg
jg
movs
mov
jp
cmp
pop
pushf
cmp
aas
mov
adc
mov
and
scas
outs
sahf
and
int3
pusha
cmp
ret
enter
mov
inc
xor
dec
loope
and
hlt
rol
loope
add
fist
mov
scas
push
mov
bound
pop
clc
push
dec
out
cmp
inc
pop
dec
out
mov
mov
or
dec
sub
cld
xchg
data16
xlat
fcomp
ret
sbb
ins
fst
add
or
jmp
or
inc
aas
cs
int3
ja
gs
aad
sub
jbe
cwde
or
xchg
mov
(bad)
xchg
push
ins
push
mov
sar
jns
pop
ret
lods
sbb
stos
fwait
out
js
repnz
lea
int
mov
stc
into
mov
mov
fsubr
cmp
fisttp
cld
ins
neg
fbstp
lahf
push
es
xlat
das
jecxz
daa
pop
arpl
jae
out
adc
arpl
mov
cs
retf
inc
sbb
push
mov
(bad)
call
mov
and
aaa
pop
inc
inc
push
inc
test
cmp
aad
gs
inc
int
mov
and
push
popa
jne
jl
inc
pop
int3
or
cmp
add
sub
stos
add
push
adc
outs
mov
jmp
das
sar
cli
pop
ins
push
mov
out
inc
inc
movs
jle
mov
cs
repnz
lods
mov
int3
aad
cmps
cs
repnz
aas
stos
and
mov
pop
mov
call
lea
inc
ins
inc
sti
(bad)
xor
pop
bound
mov
cmp
out
dec
or
pop
jae
pop
rcl
xor
sbb
or
ret
movs
xor
int3
cmp
cld
mov
pop
les
stos
int
shl
mov
xor
hlt
leave
mov
push
repnz
mov
adc
fstp
push
aaa
and
jl
mov
pusha
in
mov
mov
push
(bad)
dec
fadd
dec
adc
push
ficom
daa
cmp
test
mov
(bad)
aam
popf
ficomp
(bad)
cmps
loope
je
in
in
sub
hlt
int
inc
stc
adc
arpl
xor
cmps
cmc
add
add
sahf
mov
sub
into
pushf
push
pushf
das
add
mov
out
xchg
xchg
paddusb
xchg
adc
rcr
lds
mov
out
ffreep
cdq
lods
call
neg
hlt
outs
inc
std
arpl
cwde
loopne
jae
push
bound
add
repnz
retf
pop
test
stos
outs
adc
adc
dec
es
cmp
add
inc
inc
ret
jmp
loope
jo
mov
cmp
out
sub
xchg
icebp
sbb
loope
sub
rdmsr
or
inc
lds
test
iret
jbe
call
mov
imul
loopne
and
push
mov
push
or
inc
aas
push
in
iret
popf
not
mov
mov
sub
stos
sbb
mov
cwde
inc
stc
cwde
inc
fidiv
mov
ret
and
push
stos
pop
cmp
les
push
jl
add
dec
out
ins
mov
cli
mov
rcr
out
cmps
rcl
std
cmp
leave
xchg
mov
addr16
mov
xor
cmp
cld
inc
ins
jp
dec
mov
fdivr
push
ss
repz
pop
sbb
xor
add
mov
test
jnp
das
xor
out
add
xchg
call
jmp
cmp
cmp
(bad)
nop
adc
mov
add
xor
add
sahf
fwait
ds
stc
js
and
leave
jmp
jl
imul
dec
addr16
(bad)
jbe
push
xor
outs
pop
rcl
jmp
mov
shr
push
into
iret
cld
pop
push
sahf
mov
hlt
les
ins
xchg
mov
or
sub
jbe
jmp
mov
psllq
jle
test
adc
sbb
cli
mov
stos
pushf
cld
iret
push
xchg
dec
push
push
pop
add
daa
push
aaa
fiadd
fstp
sbb
fild
js
test
sti
cmp
data16
or
mov
mov
ror
xor
inc
add
push
sar
mov
sbb
test
in
adc
xchg
inc
push
jl
in
pushf
xchg
rcl
scas
inc
push
mov
inc
pop
jge
lods
mov
push
iret
leave
cli
push
pop
or
sub
mov
loopne
mov
cmps
imul
dec
popa
icebp
mov
dec
cmp
fisttp
cmps
jmp
cmps
stc
in
test
mov
movs
outs
push
xchg
push
mov
fcom
div
xor
ret
adc
jne
push
rcl
xor
cli
aaa
pop
xor
jnp
push
not
imul
ins
jno
fild
sub
xchg
test
mov
add
jl
cwde
xor
sti
(bad)
cld
push
mov
jecxz
add
sbb
add
mov
jmp
loop
call
sub
mov
inc
pop
ja
jp
xchg
lahf
dec
mov
mov
fwait
das
xchg
ss
mov
mov
and
sbb
jecxz
pop
aam
jmp
dec
ret
xchg
clc
mov
lahf
imul
inc
fcmovb
or
pop
(bad)
in
sub
jp
stc
scas
ror
and
fisubr
std
paddsw
mov
inc
add
(bad)
ficomp
xchg
xchg
and
xchg
retf
scas
nop
loope
push
(bad)
loopne
pusha
adc
(bad)
mov
xchg
das
leave
jp
dec
popa
add
in
push
movs
sub
scas
loop
dec
and
cli
cmp
addr16
(bad)
pop
mov
popa
stc
sub
mov
bound
mov
in
or
inc
push
mov
(bad)
neg
add
sub
cmp
inc
imul
sub
add
pop
inc
and
scas
pushf
and
sub
ins
jne
test
push
inc
push
test
cld
lds
sub
int
dec
inc
push
sbb
cmp
jno
adc
arpl
test
xor
sbb
and
(bad)
repz
mov
push
sub
xchg
(bad)
leave
pop
push
jae
sbb
push
inc
inc
repnz
cmp
adc
mov
stos
(bad)
cld
stos
and
outs
add
push
lods
hlt
inc
jp
aas
inc
in
ins
pusha
not
ffree
xor
pusha
or
sub
or
out
(bad)
lea
mov
xchg
mov
cmc
xchg
test
in
in
and
or
mov
push
dec
stos
mov
or
jne
aaa
cmp
cmps
pop
dec
cmp
cmp
push
jle
shl
imul
cmp
xor
inc
fisttp
adc
push
jl
fs
pop
int3
and
mov
out
pop
imul
jmp
inc
mov
mul
or
push
dec
adc
shl
jg
cmp
aam
and
test
lahf
in
push
ins
call
bound
jbe
ss
inc
imul
(bad)
movs
cmp
imul
loope
test
xchg
test
scas
into
jecxz
hlt
fisttp
mov
in
ins
adc
jp
push
sti
aas
imul
xchg
mov
pop
aam
add
lods
or
and
pop
or
addr16
sub
call
jecxz
cmp
push
ins
rcl
test
inc
out
add
adc
cmp
xchg
cld
loop
dec
and
pop
movs
call
bound
jmp
mov
push
pop
rcl
xchg
mov
ss
mov
call
ss
push
dec
loopne
mov
scas
das
push
lock
popf
call
pop
mov
mov
inc
mov
mov
mov
std
jp
sbb
sbb
in
enter
cmc
pop
mov
icebp
add
sahf
mov
(bad)
popf
bound
dec
adc
frstor
pop
inc
pop
call
xchg
jmp
mov
inc
push
pop
pusha
shr
dec
(bad)
sahf
push
push
or
jne
adc
scas
jge
rcl
(bad)
xlat
imul
push
or
movs
xchg
loop
loop
shl
cmp
mov
stc
and
pop
cwde
pusha
push
test
cmp
das
sbb
xchg
mov
sbb
ret
and
shl
jmp
push
mov
leave
xchg
mov
xor
add
imul
gs
mov
mov
dec
add
sbb
outs
xchg
jno
inc
arpl
mov
mov
fsub
sar
(bad)
push
add
popf
sub
lods
ret
push
push
push
dec
mov
sub
int
cwde
mul
rcl
dec
(bad)
jo
cmc
xor
xchg
add
cld
lea
loop
cmps
arpl
mov
fwait
nop
test
lock
fwait
test
jo
mov
jle
push
hlt
cmc
std
mov
add
mov
movs
repnz
mov
add
xor
(bad)
adc
push
pop
jmp
lods
js
or
stos
push
aam
jbe
cwde
sub
mov
call
and
cmp
in
xchg
cmc
mov
call
jnp
push
xor
fsubr
mov
pop
lahf
outs
jecxz
shl
repnz
cmp
adc
pusha
mov
cmp
(bad)
das
push
js
and
lods
push
xor
fisttp
and
dec
pop
xchg
mov
sbb
ss
dec
or
mov
lea
int3
mov
ins
lds
(bad)
repnz
sbb
retf
stc
out
inc
jne
pop
mov
push
ds
jno
(bad)
cwde
(bad)
jecxz
lea
nop
mov
dec
cmc
repz
out
cmc
xchg
jp
mov
(bad)
cmp
mov
aas
pop
fcmovbe
mov
mov
les
jae
or
ds
cwde
lods
xchg
(bad)
movs
jmp
dec
mov
addr16
imul
in
addr16
push
fnstcw
lock
icebp
add
xchg
shl
mov
sub
pop
jge
push
jg
rcl
mov
sub
dec
shl
bound
xchg
inc
lea
repz
shl
imul
xor
mov
or
cmp
mov
gs
rcr
aaa
adc
repnz
adc
xchg
cs
add
mov
xor
fisub
stc
mov
mov
loopne
(bad)
inc
lods
mov
pop
in
sub
pop
and
test
enter
dec
adc
jnp
movs
sbb
test
sub
sbb
inc
popa
clc
adc
(bad)
jae
jne
and
pop
jnp
mov
into
cwde
aaa
inc
(bad)
jb
bound
jp
pop
cs
pop
dec
inc
outs
xor
hlt
call
adc
adc
addr16
sub
xchg
sub
mov
loopne
fistp
(bad)
and
ss
sbb
sbb
mov
push
sub
cmp
xor
dec
scas
cmps
scas
daa
push
xchg
es
aad
inc
push
or
mov
dec
adc
test
pop
mov
cs
or
pop
cmp
les
test
jmp
jb
in
inc
repz
hlt
cmp
adc
movs
inc
cmp
(bad)
or
cld
adc
je
std
imul
in
lahf
dec
sub
inc
test
add
es
lock
pop
inc
mov
cmp
fwait
mov
mov
push
enter
cdq
mov
push
xchg
cmp
ret
mov
cs
dec
outs
jmp
push
fild
(bad)
movs
or
add
xchg
inc
lock
in
scas
pop
imul
repnz
cmp
fld
int3
push
ss
fs
loopne
xchg
scas
adc
adc
sub
test
cmps
dec
cld
mov
cdq
int
or
jae
cmp
arpl
jg
cmps
daa
pop
scas
jg
adc
or
call
mov
mov
mov
loopne
adc
adc
xchg
mov
mov
and
cwde
cmp
mov
aas
test
xchg
aad
test
int3
xor
mov
pop
popf
das
adc
cmp
addr16
je
adc
test
or
mov
inc
cmp
or
and
inc
icebp
mov
addr16
mov
fwait
aam
stos
lods
xchg
fisttp
stc
mov
cdq
sbb
push
jecxz
pop
shl
mov
pop
call
xchg
mov
ror
int
scas
fcomi
repnz
mov
sti
rol
jl
pop
jg
shr
jbe
fsub
test
jl
mov
pop
inc
popf
jb
ins
popf
loop
(bad)
xor
mov
mov
and
or
lods
ds
ins
mov
xor
lea
enter
push
sbb
sbb
(bad)
jl
clc
mov
sar
push
push
pusha
test
pop
aam
dec
sub
(bad)
add
and
lahf
sub
and
mov
popf
js
xchg
aam
push
and
into
inc
(bad)
and
popa
jne
pop
adc
adc
jbe
cmp
adc
mov
push
xor
loope
or
cmps
sbb
push
mov
xchg
gs
shl
pushf
adc
mov
out
loop
aam
mov
test
mov
ror
push
mov
sub
dec
pusha
bound
jmp
or
mov
push
mov
les
inc
pop
xchg
lea
push
mov
jg
popf
xchg
xlat
mov
add
sbb
loop
or
and
push
mov
enter
ss
sti
and
ja
call
rcr
cmps
xchg
jne
jmp
xlat
mov
sar
mov
push
jle
and
aad
add
mov
outs
xchg
loopne
xor
inc
pop
pop
fcom
sub
mov
sbb
ffree
and
push
mov
xor
mov
sbb
ret
(bad)
movs
imul
(bad)
pop
push
fisub
retf
aas
xor
jo
dec
inc
popa
sub
fstp
arpl
jns
xor
jns
int3
sub
outs
idiv
mov
add
jns
add
cmp
loop
outs
jmp
mov
dec
sbb
jmp
or
mov
jmp
adc
inc
adc
and
mov
fcom
add
and
pop
fiadd
inc
mov
fsub
push
lods
mov
loopne
lods
add
mov
jno
mov
adc
dec
jmp
xor
loope
mov
add
add
push
idiv
adc
std
lods
or
daa
(bad)
fimul
fist
ins
and
iret
ss
lahf
call
mov
jns
sbb
lods
in
movs
stc
fstp
and
addr16
sub
push
es
rol
adc
pop
xchg
push
sub
(bad)
rcl
loopne
ret
int3
repz
mov
(bad)
stc
adc
scas
mov
xchg
mov
jl
pushf
xor
ret
cwde
popf
xchg
int3
pop
push
fdivr
clc
xor
fmul
and
mov
jl
jp
fbld
mov
sar
movs
lods
jmp
adc
or
xor
in
jne
retf
jnp
pushf
aaa
fstp
popa
les
es
retf
fld
lods
add
jae
sbb
in
pop
(bad)
cdq
sub
dec
adc
outs
rol
pushf
mov
jmp
add
std
push
sbb
ret
jmp
pop
retf
xchg
daa
and
fst
jbe
cmc
cmp
push
add
jecxz
cmps
pop
hlt
sbb
inc
cmp
hlt
dec
mov
aad
add
or
in
imul
pop
int3
xchg
(bad)
mov
data16
jl
mov
xchg
outs
sub
cmp
and
mov
adc
sub
pop
jl
loopne
rcl
inc
das
movs
or
pusha
adc
push
add
pusha
dec
pop
int3
or
cmp
sub
dec
dec
push
int3
pop
retf
popf
in
ror
xchg
lock
cmp
dec
aam
pop
jle
lock
sub
daa
jb
in
imul
mov
in
fisttp
xabort
xor
arpl
mov
or
fisttp
dec
mov
and
outs
pushf
(bad)
jecxz
fmul
int
fstp
adc
xchg
cli
fimul
pop
addr16
mul
push
xchg
cmp
mov
inc
sti
pusha
iret
or
inc
mov
add
or
push
xchg
xchg
(bad)
repz
aas
es
add
sub
dec
call
inc
xor
mov
movs
scas
and
ds
mov
jnp
adc
push
xchg
jmp
adc
and
mov
fld
and
fisub
fild
out
xor
dec
adc
cdq
es
pop
popfw
aas
adc
in
out
sub
dec
and
clc
adc
add
(bad)
repz
jb
pop
sti
bnd
nop
jmp
sar
fidivr
ret
dec
pop
jle
mov
cmc
sahf
jge
jns
dec
pusha
mov
mov
cmp
sub
ss
adc
sbb
stc
ins
mov
ins
repz
mov
lahf
int3
cld
push
cli
and
pop
xchg
pop
jmp
dec
adc
nop
push
dec
scas
loope
sub
adc
jno
mov
int
into
jmp
ins
mov
retf
mov
push
push
sti
jns
jmp
ret
popa
call
(bad)
in
mov
sbb
pop
iret
(bad)
xor
cli
pushf
cmp
fs
jge
fadd
sub
adc
jbe
jb
mov
mov
adc
push
aad
mov
jg
loopne
add
adc
jle
out
and
not
les
mov
leave
fcom
test
add
cld
test
pop
pusha
ins
lds
jb
add
aaa
aas
addr16
mov
enter
mov
cld
add
cmc
ins
hlt
and
xchg
xchg
jbe
push
retf
jns
ret
pusha
fwait
cld
mov
jae
mov
mov
mov
sbb
jg
fs
imul
cs
sbb
cwde
test
js
dec
js
and
and
mov
sub
jg
scas
mov
and
sub
rcl
imul
lods
and
xchg
xchg
(bad)
lods
outs
loope
pop
mov
jne
mov
imul
mov
mov
push
js
sti
int
test
aad
push
xchg
mov
(bad)
scas
fs
jg
jmp
out
and
xlat
daa
jg
pop
push
aaa
outs
adc
inc
push
outs
xchg
dec
repz
stos
icebp
push
fist
or
leave
xchg
xor
cmp
cmp
cmc
push
nop
outs
call
lock
push
add
or
fwait
clc
mov
xor
mov
inc
xor
mov
ds
mov
sbb
retf
mov
jae
icebp
mov
ins
jnp
lea
in
in
inc
xchg
mov
and
aam
cmc
mov
mov
out
cmp
mov
(bad)
xchg
xor
sbb
cmps
push
inc
add
inc
cmp
sub
ins
jnp
xlat
xchg
std
ret
test
push
xchg
sub
mov
cmc
xor
loope
js
daa
dec
sub
xor
adc
xchg
icebp
dec
add
clc
and
xor
dec
popa
cmp
add
xchg
aaa
popa
xchg
sar
pop
pop
sbb
add
cmp
sar
cmp
or
out
cmp
scas
mov
fild
inc
inc
inc
jne
xchg
dec
inc
rcr
add
scas
dec
ffreep
lahf
das
scas
or
fsub
imul
xchg
and
frstor
mov
pusha
mov
cmps
loopne
mov
push
or
cs
xchg
and
ds
stc
dec
inc
inc
pop
in
dec
cdq
mov
sbb
sbb
(bad)
aaa
jb
in
rol
xchg
fsub
in
or
and
xchg
mov
dec
push
not
ret
dec
sbb
mov
add
mov
hlt
mov
jp
movs
loopne
mov
repnz
pushf
into
mov
aaa
jb
sbb
adc
add
or
inc
jno
(bad)
icebp
mov
inc
jb
add
out
dec
call
pop
jnp
imul
ja
mov
loopne
cmp
imul
push
mov
push
(bad)
cmp
(bad)
movs
dec
xchg
jae
lahf
mov
xor
add
test
jl
lock
push
or
fwait
cmp
xchg
mov
dec
imul
(bad)
jg
test
sti
(bad)
push
pushf
mov
into
mov
add
adc
enter
xchg
add
fcmovbe
fild
call
or
push
daa
xchg
cli
dec
push
dec
mov
out
fcom
in
pop
or
stos
cmps
mov
jmp
aaa
je
nop
xchg
sub
popa
pop
into
pop
out
arpl
and
int3
mov
ja
push
xchg
ds
test
enter
mov
test
dec
arpl
and
pusha
jnp
fstp
rol
push
add
pop
adc
dec
ret
fiadd
cs
xchg
imul
loop
add
jbe
add
test
xor
(bad)
mov
jnp
jbe
outs
in
sub
dec
xlat
je
jmp
or
mov
shl
aad
push
das
js
cmp
and
jmp
test
jnp
and
in
mov
retf
pusha
xchg
dec
sub
inc
cmp
fld
sahf
es
test
popf
mov
mov
mov
sub
xchg
(bad)
mov
nop
pop
sbb
rcr
jg
xor
sti
sti
add
push
jmp
dec
gs
std
iret
or
fisub
dec
sbb
lahf
jo
cmp
retf
mov
inc
inc
adc
les
jge
out
cmp
out
mov
retf
jecxz
add
mov
add
push
sbb
pop
test
sub
pop
cmps
test
loopne
mov
pop
shl
(bad)
jae
movs
das
maskmovq
test
jg
sbb
jp
sti
mov
sar
dec
pop
jmp
pop
pop
retf
adc
stos
jae
or
pop
sbb
outs
movs
cmps
test
loope
stos
push
rol
inc
imul
clc
dec
movs
loope
xchg
(bad)
loope
add
xchg
adc
xchg
mov
cmp
dec
bound
ins
push
retf
retf
jmp
not
jae
in
adc
xchg
fimul
icebp
or
and
pop
dec
scas
arpl
xchg
pop
sub
cmps
mov
push
leave
iret
push
xchg
(bad)
call
mov
outs
daa
cli
pop
add
mov
aad
hlt
mov
cmp
push
dec
rcl
lock
outs
inc
jb
cmp
pop
sbb
retf
jne
dec
loopne
push
mov
xchg
mov
lahf
xor
int3
push
adc
push
ins
adc
ret
cwde
repnz
idiv
sbb
out
sbb
test
inc
push
jnp
pop
nop
or
dec
imul
or
jne
call
mov
popf
in
mov
pop
adc
dec
xchg
push
lods
xor
(bad)
mov
mov
fucomp
xor
jns
sbb
inc
stos
dec
jp
fst
xchg
or
mov
rol
mov
xchg
(bad)
jbe
(bad)
das
iret
(bad)
mov
out
jle
jecxz
rcr
jp
xor
dec
shufps
inc
dec
push
push
push
xchg
popf
icebp
sbb
into
lods
enter
or
push
aas
imul
les
fnstcw
push
pop
ins
(bad)
adc
cld
xchg
sbb
sub
nop
shl
mov
aaa
rcl
jae
jp
out
xchg
into
out
test
popf
xor
cmps
fnstenv
data16
jle
mov
fimul
add
enter
push
and
cmc
das
sub
xchg
or
mov
jmp
in
out
cwde
pop
pop
aam
int3
mov
retf
dec
cwde
or
cdq
push
push
std
cmp
dec
or
stos
cmc
sub
call
fdivr
xchg
push
enter
loop
xor
xchg
push
add
xchg
add
adc
adc
fwait
clc
cmp
aam
sub
xchg
jnp
cmc
and
(bad)
in
adc
fld
jns
xchg
xchg
dec
xor
jns
cmps
add
daa
cs
hlt
out
mov
sub
inc
or
dec
pop
pusha
out
mov
jmp
dec
cmp
or
adc
adc
mov
mov
repz
leave
add
mov
sbb
fild
and
xchg
out
push
mov
and
xchg
push
cs
lods
lods
les
dec
cmp
xchg
mov
scas
arpl
sbb
jae
mov
cs
imul
xchg
stos
test
or
cmp
jo
fmulp
jne
jecxz
inc
pushf
iret
cwde
jnp
mov
adc
inc
inc
icebp
xchg
iret
daa
push
inc
(bad)
inc
ret
shrd
adc
lea
ins
into
das
inc
lock
add
mov
bound
jp
repz
loop
jg
jno
adc
xchg
xor
test
arpl
dec
arpl
pusha
mov
lds
hlt
add
adc
xchg
(bad)
std
pop
adc
fild
sub
aas
jno
loope
jecxz
in
sub
push
ins
out
inc
mov
mov
jo
pop
out
rcr
sahf
mov
retf
daa
and
jae
out
push
popf
push
fadd
daa
push
add
dec
sub
mov
lods
xchg
aaa
(bad)
mov
pop
mov
jae
mov
jg
sub
and
jbe
sbb
jae
xor
pop
scas
pop
push
and
jl
scas
sub
add
scas
stc
(bad)
sbb
jmp
rol
fsubr
or
aaa
push
test
imul
inc
sub
ja
(bad)
xor
inc
xchg
adc
mov
dec
xor
(bad)
mov
pop
outs
mov
cmps
cmp
loope
xor
jle
cmp
and
call
movs
jp
adc
jno
cmc
stc
out
mov
rcr
adc
cmp
xchg
lds
mov
jb
mov
dec
cmps
jb
(bad)
push
popf
(bad)
mov
or
jb
ja
mov
cmp
shr
or
push
xor
push
das
sbb
sbb
inc
adc
fadd
je
in
not
mov
dec
ret
icebp
and
scas
stc
dec
cmp
imul
dec
jle
ret
retf
out
jl
imul
cmp
ret
push
in
ret
push
add
mov
in
daa
mov
or
mov
and
cmp
ffreep
shl
(bad)
aam
(bad)
dec
movs
jnp
push
add
lods
mov
dec
mov
(bad)
push
outs
test
(bad)
into
js
or
enter
test
mov
adc
and
int
pop
mov
mov
retf
iret
adc
(bad)
push
jne
dec
scas
sbb
stos
outs
(bad)
ins
push
jo
push
js
add
jae
gs
das
sti
inc
retf
inc
fs
xchg
loope
neg
rol
mov
mov
mov
xchg
add
xchg
pop
lahf
jbe
pop
out
jnp
clc
in
pushf
mov
mov
mov
mov
call
sub
test
pop
xor
push
(bad)
push
xor
retf
leave
cli
rol
repz
fs
xchg
loop
jg
(bad)
ja
sbb
pusha
es
cmp
ret
(bad)
aad
comiss
mov
fucomp
jl
add
jno
fnstsw
or
retf
dec
cmp
std
add
pop
iret
retf
pop
and
jo
add
jnp
xchg
popa
pop
xchg
xchg
inc
push
jo
dec
add
aaa
xor
inc
pop
cmps
mov
mov
es
sbb
sbb
and
mov
cwde
or
scas
mov
sub
sbb
cmp
pop
push
daa
rcr
jns
cmp
cmp
mov
nop
retf
lods
sub
imul
jb
mul
adc
push
adc
addr16
jmp
inc
jae
mov
ret
cmp
vdivsd
xor
inc
inc
lds
pop
les
inc
inc
call
push
pop
pop
fsubr
sbb
cmp
adc
ror
mov
xor
adc
loope
sbb
retf
(bad)
in
jb
fldln2
xor
fild
mov
mov
jg
mov
pop
ss
jg
or
neg
jle
sub
mov
jecxz
or
cmp
inc
scas
cmp
add
push
mov
push
sbb
ss
cmp
gs
ret
gs
pushf
xchg
dec
inc
dec
in
mov
out
pusha
sti
dec
and
pop
push
imul
jecxz
pusha
dec
mov
ins
push
inc
ja
mov
jecxz
call
xor
xchg
es
fdiv
(bad)
xor
mov
(bad)
jge
jge
cwde
pop
xchg
xor
pop
out
test
mov
cmp
add
(bad)
sti
ret
mov
call
ss
inc
bsf
ins
ins
push
(bad)
scas
adc
add
xchg
dec
mov
fcomp
mov
shl
cmp
cmps
mov
aad
loopne
loope
outs
xchg
or
push
xor
out
mov
sahf
sbb
outs
or
fcom
pop
dec
iret
pushf
adc
hlt
lahf
mov
mov
add
pop
or
jp
pusha
cmp
xchg
mov
aaa
xchg
xchg
aam
aaa
nop
push
xor
pop
repz
jl
inc
loop
inc
or
jp
out
pop
sub
std
sbb
xchg
repz
xchg
lahf
je
bound
in
push
test
adc
ins
mov
or
sub
addr16
daa
mov
mov
addr16
xor
iret
push
xchg
adc
aas
icebp
or
or
icebp
fmul
stos
icebp
add
xor
retf
sar
cld
xor
in
xor
adc
mov
mov
mov
mov
fld
cmc
pusha
and
popa
pop
imul
fdivr
mov
scas
scas
xor
dec
retf
push
jno
sub
jo
dec
add
inc
std
or
test
mov
sub
(bad)
sbb
push
push
(bad)
addr16
or
and
shl
adc
imul
(bad)
xchg
or
sbb
test
fdiv
arpl
mov
fcmovne
sti
or
push
mov
cmp
pop
bound
retf
push
pop
add
mov
jnp
out
hlt
inc
xchg
add
movs
repnz
mov
dec
into
rcl
scas
pop
div
cmps
or
cmc
sub
adc
test
jge
or
cmp
out
call
and
cli
sub
arpl
shr
enter
fs
(bad)
test
push
sub
loope
push
call
pop
repz
int3
and
xchg
sbb
aad
sahf
fistp
xor
cmp
lea
jg
jmp
mov
shl
jg
add
push
repnz
ds
cld
dec
fwait
setno
adc
arpl
pushf
popa
lods
dec
adc
fs
fdivr
pop
leave
stc
cli
sbb
ss
fwait
rol
jle
xor
xor
xchg
sbb
mov
mov
pop
pop
shl
fwait
push
imul
mov
fmul
mov
rol
mov
inc
imul
test
in
dec
and
add
xor
xor
clc
and
sub
adc
jecxz
into
scas
aas
test
sbb
jg
mov
xor
mov
and
adc
xor
mov
cmps
dec
rcr
fisubr
mov
out
add
stc
aam
out
sbb
sub
shl
push
rol
cmc
jo
inc
mov
shl
xor
push
add
(bad)
repnz
pop
out
repz
jmp
int3
loopne
add
inc
and
stc
out
mov
pop
pop
es
mov
daa
jecxz
sub
setno
cmp
sbb
in
mov
stc
cmps
jg
push
leave
dec
xor
sub
je
pop
mov
sub
jge
ins
clc
or
mov
mov
fcom
bound
popa
out
or
xchg
lock
pcmpgtb
icebp
call
(bad)
hlt
mov
sub
and
movs
or
(bad)
xor
dec
jp
mov
or
nop
add
popa
daa
jmp
aad
pop
dec
(bad)
mov
test
sub
(bad)
add
dec
mov
movs
inc
je
mov
mov
sbb
xchg
sbb
add
mov
fld
and
mov
fist
pusha
sub
repz
xor
jmp
sub
sbb
test
mov
data16
or
(bad)
je
xchg
mov
test
lahf
cmp
loopne
je
push
push
or
fdiv
aaa
scas
push
cmp
in
mov
dec
mov
xor
int3
cdq
fisub
int3
add
pusha
xchg
mov
adc
addr16
lods
addr16
sbb
ret
push
loope
mov
xor
movs
ds
dec
pop
scas
call
fiadd
mov
inc
xchg
pop
push
leave
mov
fisubr
xchg
add
adc
sar
dec
jb
push
xor
mov
inc
cmc
xchg
scas
in
add
leave
dec
rcl
inc
test
jmp
add
mov
jmp
mov
push
add
pushf
and
mov
aad
test
adc
mov
xor
ja
fbld
pop
dec
fbld
mov
xchg
adc
mov
mov
mov
mov
stos
xor
jae
cli
repz
sub
push
outs
jnp
pop
sub
xor
sub
(bad)
rcl
dec
aam
cmps
add
cld
hlt
add
or
sub
lods
add
rcl
stos
jecxz
xchg
pop
jnp
mov
add
hlt
ret
jmp
iret
inc
ins
inc
pop
stos
jp
pop
lock
and
shr
sub
inc
xchg
sbb
add
mov
mov
pop
int3
mov
and
mov
cmp
iret
imul
pop
fbld
stc
mov
or
in
mov
mov
cli
inc
sbb
push
div
xor
jg
das
sub
mov
jno
jp
lods
call
add
and
mov
ss
jge
fisub
lea
mov
jae
ret
xchg
vpackuswb
push
pop
stos
ds
call
dec
jno
aam
retf
btr
cwde
push
jb
dec
cmps
mov
loope
cmp
arpl
adc
cmps
icebp
(bad)
arpl
in
mov
gs
xchg
and
mov
int3
push
das
mov
aam
jb
cdq
pop
pop
mov
mov
lods
push
push
pop
xor
mov
outs
icebp
(bad)
jno
mov
out
jle
xchg
loopne
test
or
push
xchg
pop
mov
inc
je
gs
xchg
ins
inc
xor
ins
sub
stos
sbb
movs
aaa
jle
sub
in
jb
mov
stos
in
es
aas
adc
lahf
cmp
(bad)
mov
mov
dec
jmp
test
or
pop
jne
test
rcl
std
ror
add
sub
or
ret
fidiv
jge
adc
mov
pop
sbb
jns
sar
xor
mov
jne
xchg
push
out
mov
pop
push
outs
out
into
add
ss
jecxz
jno
cmp
mov
sub
mov
into
pushf
pop
jmp
std
mov
mov
in
test
pop
leave
mov
add
xchg
and
mov
cli
arpl
loop
push
adc
dec
les
push
pusha
xor
aaa
sbb
(bad)
test
in
ret
xchg
js
arpl
mov
retf
es
outs
arpl
jge
jl
adc
ror
inc
dec
in
inc
mov
sar
jmp
mov
js
hlt
push
jl
pushf
leave
aaa
sub
adc
dec
xor
and
fnsave
rcl
movs
loope
dec
popf
mov
xchg
or
dec
in
mov
mov
inc
mov
and
jmp
dec
xlat
mov
std
pop
mov
aaa
in
fst
lock
sub
dec
xchg
and
xlat
test
jmp
mov
push
shr
int
movs
mov
inc
mov
inc
(bad)
enter
jge
xor
fwait
push
pop
cmp
mov
add
cmp
je
shl
pop
inc
and
push
scas
push
xor
add
adc
inc
into
mov
mov
xchg
xchg
fidivr
jl
sbb
mov
xor
pop
ss
inc
pop
mov
scas
adc
add
cmps
inc
test
cmp
and
or
pop
(bad)
cmps
or
mov
add
inc
shl
add
aad
outs
(bad)
dec
mov
hlt
xlat
cmp
push
repnz
pop
mov
fild
dec
pop
add
sub
cwde
sub
dec
and
in
in
sbb
aaa
retf
pop
push
pop
xchg
repz
jno
ins
nop
or
inc
pop
fs
xchg
sbb
stc
pop
xchg
nop
and
rol
cmc
add
or
loopne
or
sar
sbb
movs
mov
and
add
sbb
cmp
syscall
dec
cmp
(bad)
shl
push
inc
mov
mov
(bad)
fild
pushf
leave
add
div
and
loopne
cmps
pop
jge
xchg
add
arpl
push
cmp
imul
pop
test
sbb
jmp
cmp
dec
jg
push
dec
mov
xchg
je
idiv
or
ja
inc
mov
retf
ins
mov
cmp
inc
lahf
call
data16
push
inc
xchg
xchg
movs
test
push
mov
add
or
int
and
in
ins
jge
iret
jno
sub
jle
(bad)
xlat
add
xchg
cmps
jle
in
movs
cmps
rcr
mov
test
mov
jg
add
mov
sbb
or
mov
mov
add
scas
mov
shrd
cs
test
(bad)
push
test
cmp
movs
xor
retf
movs
retf
loope
shl
sub
sti
shl
repnz
lock
jge
mov
(bad)
inc
mov
fnstcw
mov
mov
inc
adc
cmp
adc
(bad)
repnz
push
inc
movs
mov
int
dec
ret
daa
inc
cli
adc
fwait
push
sar
mov
lahf
mov
stos
or
arpl
jb
xchg
cs
mov
cmp
dec
stos
fs
add
jp
paddsw
push
ds
push
push
pop
clc
mov
pusha
fucom
mov
push
sub
inc
pop
ret
icebp
ja
cmp
push
js
lea
xchg
fld1
dec
dec
or
lods
xlat
xor
cld
adc
ins
xor
cmc
dec
ss
cdq
and
pop
stc
xor
cmp
loope
add
or
repz
out
outs
or
or
test
ror
mov
mov
ror
and
cmp
mov
sbb
lods
sbb
add
mov
jo
int
push
cmp
sub
vscatterdps
loop
cmp
dec
jg
hlt
cld
aad
out
cmps
cmp
dec
and
xchg
into
push
inc
xchg
test
into
not
xchg
lea
or
out
adc
fwait
push
js
add
aaa
ficom
shl
mov
add
js
mov
inc
rol
xchg
jp
(bad)
ja
sub
and
or
out
popa
mov
sub
aad
push
sub
loop
sbb
dec
loope
or
mov
retf
shl
pusha
inc
mov
jnp
mov
arpl
mov
test
mov
push
push
xchg
adc
test
xchg
inc
adc
js
sub
clc
add
or
test
leave
cmps
mov
inc
test
mov
xchg
sub
cs
(bad)
stc
inc
pushf
outs
sub
(bad)
ficomp
push
pop
and
das
popa
mov
sbb
pusha
mul
ja
jae
dec
scas
leave
cmps
lds
hlt
cmp
pop
scas
ret
or
hlt
xor
in
int
mov
ds
loope
(bad)
jp
adc
out
dec
sbb
pop
test
adc
push
lods
sub
push
fcom
push
sub
sub
xchg
loop
pop
sub
mov
repnz
movs
cmp
outs
adc
mov
mov
cmps
push
cmp
popa
icebp
xor
in
repz
jne
in
(bad)
js
loop
fistp
mov
mov
adc
jns
cmp
push
xor
mov
aas
es
inc
inc
cmp
ret
clc
cmp
mov
xchg
jp
mov
ret
shr
push
fs
repz
cld
aam
out
imul
aam
aaa
(bad)
jmp
aas
aaa
add
mov
dec
rol
xor
in
sbb
cmps
sub
cmps
xchg
ja
push
xchg
jle
xor
and
stos
xchg
sti
add
sub
inc
add
ja
(bad)
shl
data16
repz
mov
movs
pop
out
sbb
mov
add
pop
jno
mov
arpl
jns
aaa
lock
xchg
fdivr
or
mov
in
cmp
data16
fwait
ja
jno
push
in
iret
cmp
push
out
inc
mov
xlat
(bad)
(bad)
dec
xchg
loop
sub
mov
pusha
adc
ja
inc
test
aas
xlat
xchg
ja
iret
pop
sub
xlat
outs
retf
stc
adc
and
cmp
mov
lock
fwait
push
or
and
cmps
fidiv
mov
into
aaa
(bad)
sub
mov
push
pop
cs
sub
cld
shr
adc
pop
repz
ret
xor
push
jle
xor
or
repz
pushf
add
ficom
(bad)
mov
mov
clc
sar
cmp
mov
xchg
or
sbb
mov
sub
call
pop
pop
mov
ja
cli
mov
sbb
repnz
nop
fnstcw
and
imul
outs
mov
cld
sub
pop
outs
sahf
movs
daa
aam
xor
adc
fdivp
xlat
sub
out
inc
int3
xor
mov
arpl
add
add
push
repnz
add
mov
mov
in
(bad)
jne
fdivr
and
pop
clc
mov
pop
(bad)
or
jge
iret
ror
sbb
cmp
ins
scas
sub
xor
mov
(bad)
jmp
pop
mov
(bad)
or
(bad)
xor
out
sti
lods
add
lds
or
pop
(bad)
mov
pushf
ss
mov
cli
ds
sbb
mov
or
arpl
(bad)
jns
cwde
push
fwait
push
jl
xchg
int3
xor
pusha
xchg
add
enter
mov
sbb
xchg
cmps
das
sub
jb
xor
test
mov
mov
ins
push
nop
jb
inc
push
sti
xrelease
int3
push
leave
dec
loop
add
dec
pop
shl
xor
mov
and
adc
mov
push
sbb
xchg
data16
pop
push
js
xor
jmp
repnz
push
pushf
rcl
pop
adc
and
sahf
cwde
jge
ret
(bad)
jle
sbb
xchg
sahf
jecxz
daa
xlat
mov
jge
pop
sbb
popa
sbb
jno
adc
pop
outs
mov
jl
pusha
ds
pop
mov
retf
retf
and
leave
clc
mov
jmp
mov
iret
xor
in
cwde
pop
loope
dec
jmp
and
mov
inc
dec
push
push
dec
mov
push
mov
fld
stos
jle
ja
addr16
xchg
test
test
pop
xchg
mov
push
or
imul
fdiv
sbb
adc
stc
into
dec
push
call
pop
and
mov
int3
xor
ins
pushf
xlat
xchg
or
lds
mov
out
inc
adc
xor
xor
xchg
sbb
and
or
sbb
inc
pop
loopne
mov
jmp
adc
repz
aas
fimul
cmp
push
cwde
pop
loope
sub
mov
pop
fild
dec
pop
mov
mov
cmps
retf
mov
adc
shl
push
ins
cdq
adc
ret
and
push
ds
jbe
icebp
fwait
dec
sub
daa
call
cli
addr16
jg
adc
enter
or
mov
scas
addr16
jecxz
add
cmp
jg
shr
fwait
cdq
sub
in
mov
cdq
inc
inc
ins
stc
mov
enter
retf
enter
aaa
imul
stc
cmp
jle
hlt
call
dec
lods
sbb
sub
sahf
jo
loope
out
lods
loope
(bad)
std
inc
jle
ins
add
or
dec
pop
mov
inc
in
xchg
or
into
mov
add
movs
add
cmps
mov
shl
shl
dec
push
sbb
enter
lods
push
aad
mov
dec
std
sbb
mov
sub
das
retf
pop
cld
jg
retf
sub
movs
sub
or
mov
popf
push
arpl
dec
adc
outs
outs
loope
jmp
or
dec
in
out
pop
push
adc
add
fldz
add
aas
xchg
sbb
and
xor
aaa
mov
sbb
xor
and
das
push
aas
and
cld
js
pop
imul
cs
push
in
pop
mov
jge
scas
mov
lods
das
nop
stc
arpl
push
hlt
mov
sbb
imul
cli
clc
gs
fistp
cld
int3
mov
arpl
popa
clc
xchg
jno
and
mov
xor
pushf
sar
scas
or
pop
cmps
mov
mov
(bad)
mov
adc
mov
je
jns
adc
xchg
test
push
pop
hlt
outs
(bad)
dec
hlt
mov
and
jns
cmp
rcr
pop
xor
sbb
cs
fist
adc
dec
sbb
sbb
shl
xchg
push
dec
lock
cli
lods
pop
push
pop
cmps
cdq
sub
gs
loope
cmps
imul
inc
dec
clc
jmp
mov
push
shr
fild
push
xchg
sub
sbb
mov
jp
arpl
inc
rep
cwde
inc
dec
imul
rol
jge
mov
dec
out
jmp
(bad)
fdivr
cdq
inc
bound
into
test
dec
mov
imul
in
or
cli
xchg
stos
ja
jne
(bad)
xor
test
sti
adc
jmp
mov
call
daa
jge
sbb
rcl
(bad)
pop
hlt
xor
jge
xchg
aas
push
test
mov
sbb
or
mov
(bad)
das
xchg
fwait
push
xor
jg
pusha
jae
xchg
mov
jg
mov
mov
fs
adc
or
cli
mov
pop
jnp
shl
xchg
sub
jmp
(bad)
jecxz
(bad)
and
daa
ja
xor
lods
fdiv
mov
imul
pusha
push
outs
data16
ja
mov
fbld
out
push
pop
add
stos
push
push
inc
scas
mov
scas
xchg
mov
and
std
(bad)
test
pushf
xor
sbb
jo
fcom
pop
mov
jno
sub
and
out
(bad)
jmp
dec
xchg
call
dec
mov
hlt
std
xor
cld
sbb
push
jb
clc
cmp
rcl
loope
outs
xchg
repz
mov
fild
mov
idiv
mov
adc
adc
(bad)
icebp
stc
daa
retf
xchg
cmc
scas
jge
sahf
je
nop
in
test
sub
adc
xchg
fld
cmps
out
outs
fnstsw
lahf
jecxz
sahf
outs
in
push
ins
jl
bnd
sub
inc
cmp
test
outs
sti
cmp
idiv
ds
mov
(bad)
outs
inc
xchg
jno
aad
lods
mov
nop
pusha
and
jns
push
inc
adc
jnp
mov
rcr
sub
dec
xor
scas
iret
loop
mov
scas
cwde
inc
jmp
inc
aam
pop
in
ins
popf
mov
push
adc
inc
and
(bad)
pop
ja
dec
inc
push
or
int
sub
inc
mov
cmps
inc
jb
mov
pop
cdq
ja
jb
dec
inc
sti
test
adc
xor
jmp
push
fwait
(bad)
pop
je
ins
in
scas
xchg
adc
lods
stos
push
add
lock
dec
dec
push
inc
out
dec
aaa
sbb
ret
data16
mov
cmove
push
and
aaa
push
hlt
arpl
sub
test
dec
arpl
inc
out
sahf
mov
and
pop
sbb
xchg
adc
push
jp
ret
or
out
enter
shl
push
(bad)
cmp
imul
pop
(bad)
aas
push
inc
sub
enter
mov
mov
push
mov
(bad)
in
add
mov
mov
ror
mov
or
or
push
call
mov
xchg
lahf
loop
sbb
adc
in
mov
sbb
or
shr
or
fsubr
add
enter
jne
mov
or
cmp
fwait
jl
xchg
cmps
dec
pop
xchg
popf
and
repnz
sub
push
mov
shl
daa
aas
pop
int3
mov
std
ja
sahf
pushf
pop
scas
in
pop
out
stos
std
pop
cmp
xchg
rcr
push
enter
(bad)
addr16
sbb
cmp
out
pusha
inc
sub
mov
dec
data16
xchg
push
call
dec
sbb
cmps
(bad)
(bad)
push
push
pop
pop
(bad)
jge
test
out
sar
out
lock
icebp
test
fs
out
or
jb
aam
inc
mov
ins
cwde
rcr
mov
fs
call
pop
int3
repnz
mov
jae
xchg
movs
xlat
lahf
sahf
fnstcw
test
pop
shl
push
int
inc
test
jge
pop
xor
sub
sbb
adc
push
cmp
xor
cmp
hlt
outs
dec
ins
mov
push
ins
cli
xchg
repnz
das
dec
add
jbe
movs
in
fwait
mov
jb
jle
and
sahf
adc
xchg
mov
in
sbb
nop
adc
(bad)
jge
mov
js
mov
enter
sub
arpl
in
pop
cs
retf
shl
mov
outs
adc
add
adc
retf
xchg
push
adc
test
(bad)
jg
loopne
aas
inc
xchg
test
xchg
out
mov
ret
dec
repnz
push
adc
sbb
clc
leave
ja
adc
pop
into
ja
clc
mov
inc
dec
std
popa
ja
xchg
movs
dec
adc
jl
sub
lea
cdq
(bad)
movs
fist
jp
or
outs
mov
push
repz
xchg
ret
mul
push
xor
dec
test
rcr
mov
pop
mov
jns
fisub
cmps
mov
jg
dec
and
inc
sahf
push
mov
cwde
popf
cwde
sbb
xchg
(bad)
in
ret
xchg
add
aad
push
rcr
xchg
mov
(bad)
jmp
xchg
fwait
div
push
test
loop
mov
push
xor
xchg
loopne
popa
jo
fld
lea
add
mov
enter
inc
mov
mov
pop
mov
das
rcl
outs
daa
mov
dec
cmp
in
jg
mov
ror
movs
inc
repz
inc
outs
jo
in
sar
sahf
jmp
cmp
sar
and
mov
mov
iret
xchg
pop
int3
push
out
cmp
inc
(bad)
push
adc
scas
or
(bad)
pusha
iret
aam
xchg
push
fld
lds
mov
push
out
adc
mov
lods
(bad)
mov
mov
jle
in
adc
int3
iret
in
jge
push
push
cmp
dec
ins
dec
fcmove
aam
sti
pop
les
pusha
mov
mov
setns
push
(bad)
sbb
movs
push
sub
push
xchg
jmp
push
in
pusha
and
inc
pop
fistp
or
pusha
aad
shl
cmps
(bad)
xor
lods
mov
test
ret
xchg
cmp
data16
mov
movs
push
repnz
repnz
and
mov
cld
inc
jmp
jp
scas
xor
pop
icebp
call
inc
jge
in
arpl
sbb
push
pop
gs
scas
cdq
sbb
out
xchg
xchg
dec
cdq
cmc
mov
mov
sbb
ins
cwde
jmp
push
rol
pop
push
or
sahf
add
xor
in
cmps
dec
pusha
aam
jmp
scas
sar
stc
(bad)
cmp
cdq
loop
ret
jmp
add
and
xlat
iret
out
inc
out
aam
pop
adc
mov
and
jl
xor
mov
popa
jb
lock
xor
imul
cmp
lods
adc
clc
in
test
mul
stos
test
leave
mov
or
repz
xchg
sbb
and
cmp
jp
adc
sbb
ror
(bad)
sbb
fldcw
sub
dec
imul
pop
movs
jnp
sub
mov
aad
out
and
das
xchg
fcmovnu
pop
push
sub
inc
pop
xor
cmps
dec
sub
add
rcl
xchg
add
ins
popa
or
lea
adc
dec
int3
xor
imul
jmp
pop
ret
adc
loopne
pusha
mov
cmps
arpl
lock
dec
add
pop
mov
jecxz
clc
test
and
inc
imul
ds
not
mov
push
icebp
jge
jle
(bad)
lock
retf
in
test
ja
test
pop
fmul
mov
cmp
cmps
adc
mov
jecxz
lahf
mov
mov
mov
aam
push
jns
sub
pushf
cmp
inc
jp
push
neg
push
jmp
repz
mov
dec
call
xlat
mov
in
mov
mov
jmp
adc
mov
jg
rcl
ret
mov
les
(bad)
lock
push
jle
js
rcl
and
cmc
(bad)
or
add
pushf
pop
push
sahf
scas
cmp
xchg
lock
outs
xor
fsub
sbb
lods
movs
test
test
test
int
xchg
add
sub
fistp
lods
jb
sahf
push
pop
in
sbb
shr
popf
ret
mov
xchg
xor
call
pop
xlat
jbe
scas
or
daa
fld
mov
mov
stc
adc
dec
ret
fdivr
aaa
es
inc
add
ret
data16
aas
push
xor
add
out
cdq
mov
sbb
add
pop
jbe
push
lock
mov
jnp
dec
cs
test
push
mov
outs
pop
xor
je
add
ja
jnp
push
adc
ins
mov
aad
cmp
sbb
ret
add
sbb
ss
(bad)
mov
fnstsw
pushf
xor
adc
aaa
mov
out
sub
arpl
pop
inc
bnd
sahf
sub
xchg
jnp
(bad)
in
jns
inc
inc
mov
sub
xchg
aaa
xchg
bound
xchg
jb
enter
pop
mov
adc
sbb
sub
(bad)
push
es
lods
jmp
ja
addr16
mov
add
pop
mov
adc
push
push
mov
xchg
dec
sub
out
into
inc
pop
and
and
add
mov
mov
sti
dec
sbb
mov
icebp
jb
push
retf
adc
ss
jo
repnz
out
jecxz
adc
or
xor
in
sub
adc
adc
xchg
icebp
cwde
sar
out
mov
out
in
stc
retf
loope
sub
cs
int
push
mov
mov
jle
out
test
add
jle
add
sti
ror
fdivr
movs
xor
hlt
or
pop
shl
clc
xchg
mov
retf
cmp
in
inc
mov
jecxz
push
imul
lods
fwait
mov
cmp
inc
pop
int
xchg
js
mov
out
or
cld
and
sahf
pop
les
cmps
dec
push
push
ja
dec
cmc
pushf
repnz
imul
mov
fst
dec
rcl
gs
imul
and
mov
sub
lahf
fld
out
mov
xor
in
imul
mov
icebp
mov
mov
out
int
or
mov
cmp
pop
inc
mov
add
push
jg
fsubr
cmp
sub
adc
pusha
mov
push
out
mov
std
and
stc
mov
scas
push
sbb
or
adc
inc
(bad)
jnp
jmp
pop
into
push
mov
retf
mov
add
retf
xor
pusha
pop
add
or
dec
pop
gs
inc
aas
jecxz
jecxz
rcl
frstor
(bad)
xor
(bad)
dec
(bad)
lea
and
mov
fisttp
jl
sbb
fnsave
hlt
test
inc
aad
mov
js
outs
je
fistp
dec
popf
or
aad
retf
loope
test
ja
push
sub
dec
cli
dec
push
imul
mov
shl
in
adc
pushf
nop
adc
ret
mov
adc
cli
nop
outs
(bad)
jnp
push
cmps
rol
(bad)
movs
add
and
push
out
mov
lods
dec
and
and
adc
gs
ins
outs
push
scas
je
inc
aaa
scas
sbb
mov
shr
fucomp
cmp
sbb
xchg
inc
aaa
xchg
lds
fwait
test
cmps
pop
inc
lock
ds
pop
push
pop
out
and
ficomp
int
xchg
pop
sbb
or
mov
or
xor
sar
js
and
sbb
call
mov
add
sub
sbb
sbb
pop
jle
mov
lahf
test
aam
push
repz
dec
mov
jle
dec
sbb
cmps
jmp
clc
xchg
test
and
test
sti
jno
pushf
ins
imul
outs
repnz
cmp
aam
stos
cmc
movs
daa
xcrypt-cfb
cmp
sahf
mov
xchg
adc
and
nop
add
mov
lahf
(bad)
repz
inc
loope
rcr
jae
pop
xchg
out
ds
sbb
jmp
sub
jmp
add
rcl
pop
ss
out
ret
hlt
addr16
or
push
jae
lds
cdq
repnz
test
mov
jo
cmp
cmp
fidiv
cmp
pop
leave
pop
ja
cwde
cmp
icebp
mov
and
mov
pushf
(bad)
scas
aas
mov
les
sub
scas
lods
rcl
mov
mov
jmp
aas
cdq
mov
arpl
jl
sbb
and
sub
js
adc
pop
mov
dec
jb
xchg
pop
jnp
rcr
sub
inc
sub
mov
loopne
bound
push
imul
sar
mov
dec
fdivr
sub
nop
out
leave
sub
mov
shr
add
(bad)
hlt
ret
pop
pop
into
pop
ret
xchg
(bad)
clc
mov
fsubr
fst
pop
pushf
jp
or
popf
adc
xor
fsubr
fimul
test
sbb
hlt
into
into
xchg
pop
push
mov
daa
jne
mov
xchg
rcr
aaa
sbb
xchg
jge
push
adc
imul
in
popf
jmp
cmp
cmp
cmps
or
loop
pop
jns
stos
push
sub
bswap
aaa
mov
cli
mov
jecxz
or
jp
or
jno
adc
push
add
sbb
push
cmp
xlat
cmp
mov
mov
and
inc
cmp
xor
jns
jo
inc
sbb
lahf
mov
sub
push
vfnmadd213pd
(bad)
cmp
xor
mov
dec
inc
inc
xchg
jge
mov
mov
lods
xor
dec
mov
cmp
inc
rcl
aaa
shr
sub
gs
sbb
loop
or
je
paddusw
adc
push
jmp
lods
push
out
pop
data16
mov
or
stos
mov
cmc
sbb
sub
mov
mov
jne
and
repnz
push
(bad)
sbb
pop
push
in
or
or
and
jle
mov
out
sbb
ins
rcl
js
adc
rol
popf
in
stos
dec
or
rcr
jnp
sbb
dec
das
jbe
fimul
pop
je
jle
int
retf
stc
fidivr
test
mov
sbb
mov
das
repz
aam
loope
bswap
jecxz
add
mov
mov
push
pusha
adc
sbb
imul
jge
mov
out
pop
push
lds
daa
and
push
js
jmp
inc
int3
mov
cmp
mov
mov
mov
jg
jmp
push
cdq
or
ja
xchg
or
es
fild
pop
xchg
pop
aam
inc
idiv
mov
adc
pop
jg
inc
aam
inc
xchg
nop
jmp
fadd
jecxz
cld
or
(bad)
addr16
fld
(bad)
xor
(bad)
sbb
push
repz
add
cmp
mov
sar
xchg
pop
xor
push
cmps
add
sti
lea
ins
jmp
out
fwait
jg
dec
fsub
pop
push
mov
xor
or
push
(bad)
int
mov
pop
ss
loope
lahf
jmp
ins
mov
ret
pusha
sbb
lods
call
fnsave
push
call
and
call
rcr
adc
dec
jl
mov
mov
cmp
xchg
div
icebp
xchg
xor
scas
std
jecxz
cld
inc
inc
out
pop
sub
cmps
stos
sub
jne
pop
push
and
in
je
xchg
movs
adc
ror
pusha
push
and
call
(bad)
in
(bad)
jns
jb
pop
iret
lea
inc
jb
adc
adc
jns
stos
(bad)
nop
pop
bound
jo
push
mov
popf
push
push
sub
aad
ss
retf
mov
inc
(bad)
mov
ficomp
sbb
imul
add
and
pop
cmp
arpl
push
inc
pop
out
xor
jb
imul
cmps
call
add
fistp
jno
sbb
or
lock
in
stos
adc
inc
shl
lds
movs
dec
sub
dec
mov
mov
rcl
pop
lea
jns
adc
retf
xchg
pop
and
cmp
push
xor
xchg
jecxz
call
out
shr
fisubr
js
and
ret
pusha
test
and
sbb
and
mov
pop
push
int
shr
xor
mov
adc
pop
push
pop
out
pop
rcr
aaa
int3
pop
jge
or
pop
xchg
jg
mov
fiadd
pop
xchg
sbb
cmp
outs
imul
sbb
loop
xchg
mov
push
mov
fimul
pop
cmp
mov
inc
int
pushf
jns
(bad)
call
loope
lock
inc
ret
(bad)
pop
and
mov
lds
sub
jle
sahf
mov
pop
aas
in
or
leave
inc
cmp
xchg
hlt
push
inc
cmc
dec
cmp
aaa
push
imul
xor
mov
daa
shl
movs
stc
cmc
sti
ins
enter
cmp
dec
dec
icebp
cld
mov
dec
mov
jmp
xchg
and
test
pusha
imul
pop
jp
idiv
sub
pop
mov
adc
out
add
outs
inc
sahf
adc
add
cli
add
(bad)
sub
dec
mov
aaa
push
xchg
xchg
xor
mul
das
pop
push
int
add
fisubr
ins
aaa
inc
ror
pop
popa
popf
jbe
or
push
enter
outs
mov
pop
sub
or
loopne
push
adc
mov
mov
pop
and
sbb
xchg
mov
push
adc
jmp
ja
icebp
sbb
adc
push
inc
pop
retf
and
lea
pop
imul
outs
fld
popa
cs
mov
int3
stos
or
fs
cmp
or
or
pushf
aas
loop
jbe
cmp
loopne
jmp
ss
scas
jmp
dec
xchg
jae
add
cwde
dec
and
cmp
or
adc
jmp
nop
aaa
adc
ins
adc
int3
and
cmp
movs
jmp
push
dec
mov
pop
pushf
popa
xor
call
sbb
es
std
dec
mov
clc
lea
jae
sar
lds
xchg
jmp
outs
or
mov
ins
fwait
mov
mov
pop
push
xchg
pop
sub
clc
bound
lea
sbb
aaa
shl
aas
iret
ret
sbb
push
ins
dec
sbb
mov
ffree
sar
add
shl
(bad)
imul
jmp
inc
add
dec
sar
fcmovnb
cmp
sbb
cdq
push
add
in
push
inc
out
fisub
retf
and
cmps
test
mov
div
jbe
cwde
rcr
(bad)
rol
ficomp
dec
cmp
inc
in
jo
fcomp
iret
and
and
mov
inc
fmul
lds
mov
mov
lea
pusha
pop
push
adc
out
repz
es
pop
fisubr
add
in
in
ins
jo
mov
jg
pop
or
add
test
shr
cwde
das
push
jle
in
xor
mov
inc
cmp
cmp
xor
fild
add
push
(bad)
andnps
push
fwait
movs
jnp
rcl
imul
push
pop
daa
test
mov
push
rol
loop
adc
arpl
bound
stos
rcr
sub
pusha
out
push
call
xor
jmp
out
pop
sub
or
or
pop
add
mov
(bad)
and
sub
(bad)
out
mov
mov
push
and
loope
push
adc
xor
shl
es
and
(bad)
movaps
mov
sbb
aad
movs
mov
sahf
add
jae
(bad)
(bad)
jl
scas
push
lock
mov
push
loopne
xor
shr
jl
mov
adc
xchg
jge
xchg
sahf
retf
adc
mov
ror
inc
ret
ja
fadd
lea
pop
mov
test
sub
arpl
pop
aas
and
test
add
mov
sbb
push
jmp
mov
test
and
popf
mov
mov
repz
add
sub
cmp
push
jmp
pushf
into
cmps
stc
mov
int3
stc
dec
vfnmsub132pd
data16
int3
(bad)
shl
or
test
test
shl
cvtps2pd
retf
push
pop
data16
xlat
stos
mov
call
push
xor
xor
int
dec
add
stos
or
ins
push
lea
es
(bad)
mov
xor
std
xchg
cmps
fs
ds
mov
add
or
loopne
ja
fnstenv
out
sbb
or
test
pop
or
mov
movs
lods
xor
js
push
adc
push
pop
sbb
push
int3
pop
fild
call
repz
adc
sub
push
jne
add
pop
cmp
xchg
repz
ja
imul
aaa
pusha
ror
push
fwait
pop
jns
jbe
hlt
mov
cmc
hlt
clc
sti
(bad)
push
scas
xlat
and
push
jmp
nop
in
sub
jns
cli
int3
lods
inc
into
inc
inc
and
shl
aam
scas
or
leave
and
in
dec
sub
and
idiv
sbb
fwait
loop
sbb
bound
push
adc
lahf
loopne
cs
mov
pop
fs
mov
xor
ds
jne
inc
shl
xchg
cmp
push
pop
cmp
in
push
fdivrp
sti
or
push
jle
(bad)
ret
cld
addr16
outs
push
add
cdq
pop
or
inc
sbb
outs
popf
pop
cmp
and
lods
ficomp
das
inc
cmc
retf
xchg
or
mov
and
test
loopne
cmp
out
and
or
inc
mov
in
dec
push
pop
int3
out
dec
data16
xor
sti
fcmovb
aaa
or
rcr
loopne
mov
pop
loope
inc
ficom
cmp
in
pop
sbb
mov
stc
push
call
(bad)
pop
out
or
cmp
pushf
leave
aaa
dec
movs
xor
xchg
add
pop
sti
sbb
xchg
fadd
xchg
fwait
data16
inc
lea
dec
pop
adc
lahf
fnstcw
fidivr
daa
retf
call
fldenv
(bad)
mov
cld
mov
rcr
cli
jb
adc
adc
xchg
cli
cmp
call
and
adc
sub
mov
jmp
lods
leave
adc
xor
xchg
jno
jl
inc
loopne
pusha
jo
xchg
out
cmps
mov
pop
pop
dec
test
xor
nop
pushf
xor
push
push
outs
adc
das
jmp
jns
push
ja
int
ins
mov
xor
sub
fbld
push
lea
ret
(bad)
pop
ss
dec
and
inc
std
mov
ins
dec
mov
stc
sbb
xchg
in
pop
sub
ss
popf
pop
(bad)
pushf
sub
pushf
and
std
add
(bad)
(bad)
and
loopne
push
push
inc
push
pop
outs
cmp
push
call
dec
xchg
sar
pop
mov
cmps
xchg
adc
inc
inc
sbb
mov
fwait
add
push
iret
mov
jne
(bad)
xor
test
(bad)
mov
dec
(bad)
jo
push
jmp
aaa
bound
shr
movs
sahf
inc
xchg
and
sti
and
pushf
loopne
mov
call
sti
aad
jae
pop
sbb
mov
push
sub
inc
cld
icebp
pop
xchg
sub
and
dec
cld
leave
or
inc
sub
in
imul
pop
or
and
fsubr
sub
push
cld
les
js
add
push
sub
mov
mov
mov
ret
and
inc
adc
cmp
xchg
xor
stos
cli
jge
imul
jne
iret
push
fidivr
scas
movs
movs
sbb
(bad)
push
push
int3
nop
cmp
xlat
(bad)
es
xor
inc
test
inc
sbb
mov
jmp
lea
fsubr
pop
dec
xor
pop
pop
das
mov
xor
or
retf
add
sbb
repnz
dec
cmp
jb
repnz
shl
adc
and
cmc
pop
and
xor
test
cmc
stc
mov
loope
mov
stos
sahf
out
shr
(bad)
adc
fsubr
mov
outs
mov
jmp
jmp
pop
jge
(bad)
jl
or
add
mov
out
pop
xchg
stc
leave
jge
mov
cmc
ins
adc
cmp
xchg
ret
repnz
push
push
xor
xchg
retf
ds
xchg
test
iret
adc
mov
pop
xadd
adc
add
pop
stc
xchg
js
mov
push
icebp
dec
aaa
test
sub
or
sti
sti
stos
stos
out
or
sbb
rcl
cdq
(bad)
fnstcw
cmc
jmp
add
push
cli
sub
xchg
push
out
xchg
loope
stos
xchg
push
mov
add
in
push
sbb
push
cmp
dec
imul
cmps
adc
(bad)
jmp
and
fsubp
dec
ficom
add
jne
xchg
or
rol
iret
xchg
adc
repnz
pop
cmp
adc
(bad)
sar
(bad)
or
ficomp
inc
lock
cli
and
outs
loope
repz
pop
psubb
outs
int
dec
adc
add
push
adc
mov
dec
in
sbb
sbb
inc
jl
mov
xor
retf
pop
xchg
mov
hlt
xlat
out
imul
pop
sbb
sub
movs
ret
pop
popa
push
lea
jnp
mov
dec
mov
not
add
sti
or
cdq
or
test
push
or
sti
fmul
cmp
push
daa
jle
pusha
hlt
retf
in
adc
dec
sar
mov
stos
arpl
rol
sub
ror
jbe
fcmovne
dec
dec
ds
jge
sbb
cmc
and
in
(bad)
cdq
jle
rcl
(bad)
push
inc
rcr
xor
aaa
cmps
jbe
mov
and
les
mov
push
sbb
fisttp
xor
xor
hlt
or
mov
dec
jle
sub
stos
and
xchg
adc
add
int
lods
dec
xor
jnp
add
pushf
or
jmp
std
cs
ja
out
dec
dec
arpl
push
movs
shl
sub
xchg
out
inc
mov
rol
inc
ret
push
addr16
pusha
push
mov
scas
adc
mov
cmp
test
dec
movs
mov
cmp
mov
jb
mov
out
dec
xchg
pop
es
mov
or
cli
add
dec
adc
sub
scas
nop
xchg
repz
jg
repz
iret
jle
ss
fild
bound
fs
fnstsw
jmp
test
xchg
xor
sbb
popf
arpl
jmp
sub
mov
mov
and
js
or
push
js
fs
cmp
push
loope
cs
pop
ficomp
lods
out
stos
movs
call
lods
hlt
push
lds
push
xchg
shl
add
(bad)
xchg
jle
test
in
lahf
dec
call
jo
arpl
gs
jp
pop
movs
imul
cs
adc
ins
hlt
xchg
sbb
fild
and
movs
jns
ss
(bad)
jne
cmp
loopne
push
sbb
(bad)
and
inc
lock
add
mov
fnsave
rcr
shl
or
pop
jno
inc
shr
sub
sub
sbb
cld
movs
pop
lods
ret
sahf
mov
out
movs
or
adc
mov
cmc
pop
(bad)
iret
push
cmp
retf
adc
mov
push
shr
cmp
push
sbb
imul
push
icebp
push
popa
xlat
and
xor
(bad)
mov
jg
icebp
loope
call
ins
out
and
loope
scas
je
push
loope
(bad)
ficom
mov
icebp
dec
dec
mov
out
mov
or
div
xchg
fild
mov
and
jno
mov
retf
xor
xor
push
cmp
push
add
pop
sbb
rcr
jge
out
leave
add
adc
add
data16
pop
jmp
cmps
xchg
pop
int
ret
or
in
loopne
not
push
repnz
xchg
leave
out
inc
bound
or
mov
mov
dec
jne
or
jge
daa
je
mov
rcr
jg
fs
cmp
cmp
push
int3
inc
arpl
sub
popf
sar
push
ins
pop
dec
shl
dec
push
cmp
stos
cmp
push
stos
cmps
adc
xor
or
jle
sbb
das
dec
sub
call
mov
xor
push
jl
pop
(bad)
xchg
pop
cmp
cmps
sahf
cwde
cmp
repz
mov
mov
and
push
dec
dec
loop
fldenv
sar
or
mov
mov
xor
push
xchg
test
arpl
inc
ins
dec
clc
ja
mov
punpcklbw
jecxz
outs
add
mov
and
mov
xchg
ficomp
inc
fld
push
scas
xchg
(bad)
retf
dec
or
push
jb
iret
add
cmp
int
test
mov
or
sbb
das
push
ret
out
inc
js
bound
pop
sub
mov
dec
aas
ins
mov
js
jg
lahf
push
sar
push
push
push
fisubr
pop
loop
shl
mov
imul
add
mov
inc
movs
xchg
not
mov
dec
jp
mov
push
xor
xchg
jle
cmp
je
xor
add
pop
adc
sbb
adc
dec
pop
out
in
cmps
(bad)
std
mov
xor
lea
or
inc
(bad)
jl
sbb
jp
stc
call
pop
in
xchg
addr16
mov
dec
xcrypt-ctr
cmps
cdq
pusha
fidivr
cmp
je
lock
lds
(bad)
out
inc
pop
mov
jp
mov
push
test
ja
mov
pop
or
stos
jno
into
(bad)
jmp
mov
xor
add
xchg
xchg
int3
sbb
fstp
retf
and
(bad)
mov
cmps
jg
cwde
mov
outs
mov
fcom
sub
adc
xchg
cmp
dec
jb
mov
mov
xchg
repnz
in
or
ss
push
jg
repz
mov
dec
mov
arpl
imul
shl
jl
(bad)
adc
(bad)
test
outs
cmp
pushf
mul
call
ret
inc
xbegin
pop
mov
inc
stc
loopne
sub
jp
call
dec
pop
pusha
test
mov
arpl
xor
inc
fst
pop
hlt
add
out
pop
lahf
fimul
repz
fldcw
mov
jle
cmp
sbb
add
dec
out
push
xchg
test
or
pop
cli
imul
lds
imul
jmp
(bad)
ins
aad
test
adc
jbe
xchg
inc
jl
xor
mov
mov
hlt
inc
(bad)
jo
add
xchg
hlt
sar
loope
int
mov
mov
jecxz
outs
fcom
cwde
cmps
and
jle
lahf
fimul
cli
ds
inc
add
inc
or
ss
div
sbb
(bad)
in
jb
int3
and
sub
xchg
adc
in
test
in
cmp
mov
sub
xor
(bad)
outs
dec
cdq
or
movs
movs
adc
jo
mov
mov
stos
ins
nop
dec
mov
sbb
gs
push
push
mov
push
xor
pop
aad
test
push
sbb
mov
cmps
cli
mov
icebp
inc
stos
inc
pop
xchg
and
popf
add
mov
xchg
push
jle
imul
and
sub
repz
sub
adc
xor
lods
or
mov
out
or
adc
test
xor
lods
mov
sahf
jae
xor
stc
loope
push
cdq
and
ins
adc
jl
push
loopne
outs
lds
mov
jae
cdq
sub
lea
js
nop
sbb
xor
xchg
pop
fs
stos
pop
(bad)
out
cmp
lahf
loope
pop
jg
retf
and
push
pop
xchg
and
pushf
lods
mov
add
retf
retf
push
jp
sbb
jecxz
jg
shl
xlat
cs
mov
(bad)
ins
in
jno
xchg
jns
adc
mov
std
lahf
xchg
int
mov
loop
xor
mov
pop
shl
scas
jl
push
ret
inc
add
out
call
cdq
pop
push
out
push
push
pusha
ja
and
aas
pop
fs
in
enter
push
xor
sub
push
test
xchg
cmp
(bad)
in
pop
sub
push
push
add
fldenv
push
call
fiadd
hlt
lds
inc
mov
test
jg
pop
cmp
(bad)
scas
sbb
(bad)
push
(bad)
fild
repz
mov
retf
out
rcr
adc
pop
out
outs
jg
adc
cmp
jnp
shr
jg
pushf
ja
sub
imul
out
mov
shr
mov
into
xchg
add
xchg
repz
cmp
dec
pop
loop
sub
hlt
cmps
(bad)
sar
mov
hlt
mov
jg
or
mov
sbb
mov
adc
jb
mov
outs
movs
out
sbb
ins
push
scas
ins
or
mov
mov
push
sahf
mov
mov
jmp
ror
sbb
loop
lea
jg
push
test
jge
pop
jmp
sub
mov
sbb
inc
std
mov
cmp
push
add
(bad)
call
jae
out
and
or
lods
stc
jg
loop
aas
and
dec
test
ss
retf
cmp
mov
jae
mov
inc
sub
movs
(bad)
scas
add
stos
popa
pushf
imul
les
mov
cwde
jmp
inc
xlat
lahf
repnz
retf
jecxz
jbe
inc
call
fldenv
in
add
fisub
pusha
outs
cmp
mov
ficomp
test
push
push
icebp
mov
js
add
out
cmc
outs
add
inc
dec
mov
aad
pop
mov
popa
xor
pop
jo
sub
icebp
retf
out
fsubrp
(bad)
sub
add
push
mov
jne
sbb
ret
sar
push
inc
jle
mov
pop
pusha
mov
dec
test
mov
sahf
jae
add
dec
pop
push
push
int3
jb
js
cwde
xor
xchg
inc
or
mov
add
fcmovnb
mov
dec
sub
inc
mov
out
mov
mov
xor
sub
icebp
and
fsub
jmp
mov
aaa
cld
std
mov
mov
push
push
rol
mov
cld
xchg
push
iret
pop
xchg
mov
sbb
int
(bad)
ret
stc
jge
fs
and
repnz
stos
pop
repnz
es
or
xor
in
cmps
inc
mov
cld
xchg
xchg
ror
jmp
adc
dec
mov
outs
setp
cmp
xchg
es
push
mov
adc
dec
cmp
dec
loopne
mov
repz
pop
sbb
test
(bad)
add
xchg
test
sbb
push
shl
jb
mov
and
int
jle
mov
xor
fiadd
xor
retf
sbb
adc
inc
xchg
dec
sbb
adc
adc
or
js
push
xor
adc
retf
push
pop
jp
test
sbb
add
(bad)
out
inc
movs
clc
jnp
jmp
xor
xor
xchg
pop
add
sbb
out
cmc
out
xor
nop
cmp
in
mov
sub
mov
pop
fcmovnb
mov
xchg
clc
ins
inc
jne
jge
fisttp
sub
or
repz
ret
push
dec
xchg
ret
inc
popa
cmp
cmp
nop
or
inc
int
pop
adc
loop
jno
mov
icebp
pop
add
jbe
xor
fisttp
mov
xor
pop
xor
fdivr
std
retf
push
push
pop
(bad)
gs
popa
(bad)
xchg
mov
fs
lea
aaa
push
stos
test
xor
inc
mov
(bad)
call
jae
sub
xor
sbb
dec
sbb
xchg
aad
cmp
dec
aad
sub
fdiv
adc
fcom
shl
mov
mov
test
in
retf
test
dec
movs
xchg
div
pop
pop
fisub
xor
mov
test
mov
fst
int3
test
cmp
push
rol
adc
mov
mov
push
push
sub
cwde
fisttp
add
lahf
neg
adc
cmp
cmp
push
cmp
xchg
mov
retf
and
jmp
(bad)
adc
jg
adc
cmp
fstp
sbb
out
lahf
dec
push
mov
dec
sbb
inc
sbb
pop
inc
jno
xchg
xor
stc
jge
mov
cld
cdq
fsub
inc
fnsave
imul
mov
lds
jle
cdq
and
retf
popf
add
mov
sub
sbb
xor
icebp
rcr
pop
outs
data16
outs
cmps
jp
ret
shl
dec
mov
sbb
mov
xchg
mov
sbb
sar
pop
test
fbstp
add
sub
imul
sti
pop
mov
and
fdivrp
mov
movs
test
jecxz
popf
cmp
mov
sub
push
push
xchg
fs
push
movs
lock
stos
add
add
cmps
sahf
and
lahf
cmps
or
mov
push
addr16
out
mov
nop
aaa
dec
adc
data16
inc
rol
mov
push
out
popf
mov
and
fiadd
cmc
sbb
sti
jle
push
ins
fmulp
push
push
std
push
pop
icebp
jle
inc
mov
mov
inc
pop
loop
jl
dec
adc
mov
fdiv
dec
mov
add
icebp
ret
sub
aas
dec
adc
cmp
movs
inc
mov
mov
sub
jmp
xchg
imul
js
int3
cwde
mov
lds
jo
cmp
jmp
jg
push
hlt
adc
mul
pop
jl
jmp
addr16
push
mov
pusha
push
ret
retf
shr
das
push
mov
mov
dec
ja
mov
stos
add
jecxz
jno
mov
addr16
or
arpl
bound
lahf
add
dec
inc
ret
lahf
fistp
jmp
inc
(bad)
lea
lds
retf
aas
in
sbb
or
cmp
fnstenv
mov
or
in
imul
(bad)
cmp
sbb
push
adc
movs
mov
push
imul
push
repz
mov
jge
into
inc
mov
jge
retf
inc
mov
pop
sub
sahf
dec
xor
sar
and
inc
int
vcvtpd2dq
adc
pop
retf
rcl
push
cwde
xor
cmp
idiv
mov
ins
adc
ja
out
mov
scas
lds
jnp
dec
adc
xor
or
push
jle
out
cdq
int
in
add
int
fldcw
call
xchg
shl
popf
pop
dec
jp
scas
stos
out
and
out
fst
push
repnz
pop
inc
dec
mov
in
jge
xchg
xor
fld
and
xchg
mov
movs
jmp
mov
mov
push
xchg
xor
inc
enter
(bad)
call
push
(bad)
cmp
bound
inc
sbb
out
in
movs
xchg
cmp
fcmove
test
ffree
push
mov
in
sub
add
int
mov
xor
add
pop
ins
mov
add
and
inc
pop
outs
inc
mov
fwait
call
jmp
dec
push
shl
rcr
jp
(bad)
ins
ins
xor
lea
pop
inc
push
(bad)
sbb
out
mov
(bad)
scas
(bad)
aad
sahf
xchg
xchg
push
loop
xchg
bsr
jl
xor
mov
xchg
imul
or
mov
std
(bad)
rcl
or
sahf
mov
repnz
xchg
not
sti
std
or
or
rcr
jno
add
cmp
inc
dec
xor
mov
add
cmps
fmul
push
push
popf
imul
or
cmps
stc
mov
adc
xlat
and
xchg
dec
pusha
pop
ret
mov
loop
test
xor
jmp
mov
push
sahf
loope
push
clc
lock
and
cmp
push
sahf
aam
ss
push
or
into
and
cdq
push
sub
or
outs
retf
jno
push
jo
and
(bad)
out
inc
inc
dec
aam
int3
pmuludq
adc
jg
(bad)
mov
jb
repz
jl
ins
mul
pop
sub
addr16
cmp
cmp
stc
ds
cs
test
(bad)
xor
rol
push
push
cmp
jae
sbb
test
inc
cwde
stos
sar
pop
ror
mov
push
push
movs
scas
loope
sbb
cld
les
xchg
or
inc
mov
pop
push
cmps
lock
mov
adc
imul
mov
sbb
mov
pop
cdq
fwait
or
and
or
push
test
add
repz
fild
shr
adc
fwait
pushf
push
iret
push
inc
push
cmovo
outs
mov
data16
ja
xor
jns
mov
inc
mov
mov
pop
jecxz
jg
add
xchg
outs
in
lea
pop
in
push
sahf
or
jmp
pop
mov
fidivr
rcr
xor
xchg
retf
sub
push
shl
daa
mov
mov
mov
jg
nop
push
adc
push
xchg
addr16
adc
loope
mov
mov
dec
ds
or
dec
cwde
push
mov
aam
call
and
enter
mov
pop
or
dec
(bad)
cmps
xlat
lods
dec
xor
mov
xchg
pop
jl
fild
add
fnstcw
add
ret
or
ins
xchg
jb
ja
jns
in
bound
xchg
stc
aaa
icebp
hlt
loopne
push
pop
mov
push
fidiv
add
dec
dec
xchg
gs
mov
(bad)
mov
jl
pop
cmp
adc
sub
mov
jnp
inc
aam
xchg
pop
push
pop
xlat
call
pop
and
imul
js
pop
jnp
or
stos
iret
repnz
or
cli
in
pop
xor
jae
imul
cmp
cmps
xor
rol
fadd
fwait
pop
sbb
sbb
mov
adc
jmp
aam
retf
pushf
mov
jne
test
cmp
adc
sbb
mov
dec
sbb
xchg
retf
mov
xor
retf
mul
das
pop
(bad)
retf
sbb
mov
into
cmp
sbb
fwait
enter
mov
ds
dec
xchg
outs
jge
mov
adc
adc
fwait
outs
and
jo
xchg
mov
addr16
fmul
pop
sti
daa
jae
or
cmp
add
loopne
outs
add
xchg
outs
push
pop
adc
cmp
lahf
rol
hlt
or
dec
pop
or
aaa
(bad)
nop
repnz
xor
cmps
in
sub
jmp
ins
test
jne
repz
or
mov
or
xchg
push
fisub
(bad)
cmc
jecxz
shr
mov
pop
test
adc
mov
add
in
add
fist
cdq
in
mov
loope
sub
inc
pop
pop
jp
push
adc
call
repnz
ret
cmp
jns
lea
iret
cmp
cwde
daa
mov
adc
sub
push
push
xchg
sar
push
push
inc
loope
pop
lea
push
jae
sub
out
pop
mov
pop
loopne
dec
xchg
push
jo
xor
ja
movs
lods
scas
movs
out
xchg
aaa
pop
cdq
xchg
ja
mov
jb
sti
sahf
push
xchg
fwait
mov
cli
call
sub
mov
dec
xor
jmp
scas
push
xchg
mov
dec
sbb
adc
inc
stos
retf
dec
mov
push
mov
add
jns
sbb
cmc
add
cs
ins
scas
aad
ja
cmp
arpl
sbb
push
xchg
arpl
mov
aas
ins
add
rcr
or
dec
jg
push
dec
aaa
push
arpl
addr16
cmc
jne
or
xor
aas
pop
and
repnz
rcr
addr16
cmps
mov
stos
hlt
or
cmps
adc
fldcw
dec
loope
cmp
enter
mov
scas
push
(bad)
mov
neg
sub
mov
into
cmp
cli
xchg
jle
and
popf
lock
shl
mov
repz
shl
rcr
les
mov
cmp
push
inc
ficom
cli
gs
dec
test
jne
outs
add
aaa
jp
push
fwait
inc
movs
dec
test
xor
xor
sahf
imul
ds
fistp
inc
sub
jg
mov
aad
mov
arpl
pop
aaa
mov
adc
or
mov
push
test
xchg
pusha
data16
jns
push
xchg
mov
dec
xor
xchg
ja
out
jmp
test
adc
jp
jb
push
arpl
into
pop
push
sar
outs
pop
xchg
rcpps
fcmovu
adc
lock
sahf
pop
jae
lods
ins
sub
lds
pop
test
add
mov
pop
aad
leave
and
jnp
ret
fcomp
scas
cmp
data16
xchg
rcl
add
sub
xor
add
popf
add
sub
cld
loop
lea
or
stos
ins
push
scas
in
pushf
push
imul
adc
mov
gs
fild
pusha
push
xchg
retf
jmp
jg
fadd
in
sbb
jmp
mov
sbb
mov
or
adc
jmp
adc
rcr
ins
lock
cmp
xchg
pop
cmp
xor
jo
mov
les
clc
mov
iret
adc
(bad)
mov
xor
mov
mov
popa
and
test
sahf
adc
sub
jp
call
mov
xlat
fadd
mov
or
and
jne
(bad)
xor
mov
cmps
mov
imul
mov
std
out
pop
sbb
fild
mov
mov
xchg
sub
sahf
ja
mov
sub
mov
fisubr
pusha
mov
or
cdq
popa
ins
mov
aas
lahf
shl
cdq
lgs
cmp
out
lods
jb
aaa
mov
mov
xor
xchg
stos
and
stc
mov
je
add
and
dec
inc
sbb
dec
or
stos
packuswb
jg
xor
dec
mov
lods
cwde
arpl
mov
jns
jg
cdq
clc
clc
in
xchg
imul
mov
ss
add
imul
cwde
jns
xor
pop
pop
cli
jmp
sub
cmp
xchg
xchg
stos
push
jno
add
enter
ja
mov
shr
repz
rcr
adc
sti
(bad)
retf
cdq
stos
xchg
ffreep
popf
sub
imul
jns
popf
pop
pop
push
jmp
mov
cmps
fild
inc
mov
xchg
mov
popa
adc
out
push
bound
pop
mov
imul
add
hlt
fdivr
inc
dec
js
ja
add
push
mov
aas
xchg
pop
out
cli
or
jl
sub
and
dec
sub
push
bound
xchg
bound
enter
arpl
mov
stc
out
jo
mov
pop
mov
ss
add
dec
push
mov
and
or
mov
mov
repz
fisttp
mov
(bad)
in
dec
mov
data16
cmps
add
fld
dec
mov
mov
shl
inc
inc
cli
push
xchg
mov
test
pushf
call
cmps
fnstsw
test
cli
cld
jb
(bad)
jge
inc
(bad)
dec
jne
sahf
mov
push
push
sub
stos
pop
div
lea
xor
popf
popa
lock
add
or
push
fsubp
pop
and
mov
inc
and
test
pop
lods
push
loopne
fs
inc
or
and
(bad)
xor
push
xchg
mov
into
xor
jno
xor
ret
xchg
or
cmps
mov
xchg
pop
lahf
dec
ja
shl
movs
jecxz
pusha
out
mov
(bad)
nop
les
addr16
or
(bad)
xchg
(bad)
ret
jle
jg
cdq
mov
cwde
add
push
shr
xchg
mov
into
aad
push
and
cdq
mov
pop
mov
neg
and
arpl
push
mov
pushf
jae
movs
mov
enter
outs
pop
mov
dec
int3
shl
stc
jle
jmp
sbb
out
jecxz
lock
inc
pop
mov
inc
mov
leave
addr16
dec
movs
stc
jmp
gs
test
cld
repnz
shl
jmp
aad
and
jge
sub
sar
fs
leave
pop
stos
cmp
add
and
pop
cmp
dec
and
daa
pop
sub
(bad)
mov
shl
dec
popf
mov
call
and
or
xchg
fs
retf
jnp
les
shr
pop
clc
ror
dec
aaa
dec
mov
fnstcw
in
rol
cdq
dec
(bad)
in
and
pop
enter
cmp
ja
mov
inc
jnp
push
mov
lock
push
dec
inc
mov
jmp
add
stos
cmps
jp
or
popa
mov
jnp
add
xchg
mov
(bad)
stc
fcmovu
lods
out
jmp
ret
hlt
mov
(bad)
adc
xlat
test
call
mov
(bad)
xchg
cmps
mov
jle
jecxz
and
cmc
mov
scas
or
neg
mov
inc
pop
jmp
adc
ret
mov
aam
pop
mov
call
test
sahf
add
outs
test
ss
lods
(bad)
cmp
cdq
ja
cmps
mov
xor
in
arpl
adc
and
mov
iret
fsub
xor
and
and
jle
int
mov
outs
lds
test
sar
in
jno
sub
sub
sbb
idiv
add
pop
gs
retf
aam
dec
clc
xchg
inc
(bad)
cmps
mov
ja
pop
dec
and
mov
cdq
clc
in
(bad)
fcomp
cmp
push
dec
in
mov
sbb
fdivr
movs
sar
mov
mov
mov
xchg
loopne
cmp
xchg
pop
neg
nop
mov
cmp
add
out
dec
push
add
sub
and
pop
and
cmp
cmc
ins
leave
lods
pusha
xchg
sbb
sub
imul
adc
jb
sti
jb
jecxz
mov
jle
popa
sahf
loope
in
xchg
loop
(bad)
dec
lock
cs
adc
cmc
sub
in
pop
mov
clc
leave
jae
mov
sbb
mov
into
fisttp
or
cmp
xchg
enter
mov
jp
cmp
mov
sub
jg
call
aas
mov
add
xchg
push
inc
xchg
add
or
pop
and
sub
test
and
lods
jge
fidiv
lahf
setbe
push
and
add
pop
mov
jge
mov
jns
dec
or
cmp
inc
(bad)
jle
sbb
int3
imul
pusha
adc
ss
movs
push
mov
scas
inc
push
cmp
push
sub
pop
pop
and
push
push
push
stos
or
inc
inc
es
repnz
xor
gs
sub
mov
jecxz
rol
sbb
jecxz
dec
sbb
adc
sub
xor
std
aad
iret
sbb
in
or
push
movs
jb
in
mov
rcl
outs
cmp
lods
mov
fist
gs
jbe
and
fsubr
popa
xor
inc
inc
sub
adc
out
push
mov
or
(bad)
repnz
push
or
sbb
xchg
sar
sbb
sbb
push
mov
dec
lds
xor
jb
out
js
mov
inc
sub
mov
sbb
loop
mov
imul
daa
jl
fcomp
mov
mov
jmp
adc
mov
mov
mov
pop
xchg
sbb
push
adc
push
push
imul
add
(bad)
stos
or
int3
leave
stos
and
fwait
outs
aas
nop
mov
scas
ss
sub
push
hlt
dec
out
jge
ficomp
adc
fst
jno
mov
sub
stos
ud1
nop
ja
cmc
inc
add
clc
dec
clc
mov
adc
and
scas
aad
dec
sub
pop
mov
call
lahf
clc
test
repnz
pop
mov
adc
sub
xor
inc
add
loope
xor
xchg
mov
adc
pop
bound
repz
(bad)
mov
fs
or
popf
bound
dec
jmp
sub
mov
mov
dec
outs
mov
in
push
sub
cdq
xchg
xlat
fisub
mov
gs
adc
sbb
call
adc
sub
inc
arpl
push
and
mov
ss
jo
sbb
loope
mov
ss
xor
dec
adc
cmp
mov
jnp
jl
dec
loop
into
jmp
mov
xchg
div
pop
or
sub
aas
dec
dec
inc
dec
pop
pushf
jmp
cmp
pop
mov
fstp
mov
(bad)
ficomp
mov
add
dec
rcr
(bad)
lahf
into
mov
and
dec
int3
sub
enter
outs
mov
sub
sub
add
inc
push
inc
rcl
sbb
sub
fwait
imul
leave
(bad)
mov
test
nop
adc
xor
mov
xor
and
push
out
loopne
imul
retf
out
popa
add
mov
jmp
mov
fcom
push
mov
jecxz
dec
pop
pop
test
aas
inc
lods
addr16
sar
add
das
addr16
cmovne
and
mov
dec
xor
nop
ins
movs
sub
inc
xchg
mov
jg
or
retf
xor
xchg
std
jbe
dec
mov
inc
arpl
shl
push
in
mov
popa
push
in
xchg
popf
adc
xor
sub
fsubr
or
or
cmp
repnz
sar
cmp
stc
sub
mov
les
fwait
push
cmps
mov
xor
xchg
mov
dec
inc
out
cli
popa
sub
or
retf
loopne
lock
sti
repnz
xchg
stos
xchg
sub
mov
or
(bad)
loop
or
je
inc
cdq
es
fwait
movs
or
xor
fiadd
pushf
retf
xchg
pop
neg
sti
mov
retf
sub
aas
(bad)
shr
push
jmp
xor
fidiv
stos
aas
ss
imul
loop
mov
or
mov
xlat
adc
mov
jmp
and
out
lock
pop
sub
pop
jb
jo
idiv
jne
and
xchg
or
xor
pop
sahf
cmps
(bad)
mov
add
and
or
inc
test
sahf
cmp
retf
in
xchg
stos
inc
push
lock
add
or
add
mov
jnp
aas
(bad)
cld
lds
cmp
lea
sub
jmp
jb
xlat
sub
dec
adc
inc
mov
cmps
cmp
sub
dec
repz
cli
jne
and
adc
into
retf
and
jo
dec
adc
movs
retf
jmp
cmp
ja
popa
xchg
popf
loopne
movs
inc
inc
dec
popf
mov
mov
inc
pop
jle
or
repnz
mov
or
out
fmulp
or
jbe
sub
fisubr
inc
xchg
stos
pop
jbe
jae
scas
(bad)
sub
and
inc
iret
ret
cwde
in
dec
pop
mov
test
es
dec
push
cmp
or
push
push
in
gs
bound
sbb
jle
sub
add
push
or
xor
iret
imul
mov
rcr
pop
xchg
and
scas
mov
sahf
(bad)
out
sbb
pop
fcom
in
push
push
lahf
mov
sbb
test
cmp
inc
pop
jae
(bad)
loop
mov
std
sbb
dec
xlat
scas
pop
out
push
movs
idiv
div
sbb
cmp
xor
and
in
xor
sub
sbb
adc
aaa
inc
je
inc
ds
xchg
gs
mov
mov
fistp
loop
clc
inc
aad
cmp
test
xchg
gs
mov
jae
or
add
add
xor
je
cmp
xchg
stc
and
push
cmp
mov
loopne
push
add
jmp
ins
sbb
or
pop
or
in
sti
mov
cmp
ins
xchg
mov
xor
out
cdq
sub
pop
push
ds
bound
and
xor
sbb
hlt
rcr
fcmovu
outs
adc
mov
pop
xor
mov
addr16
cwde
pop
xor
sahf
test
push
pushf
ds
div
jo
(bad)
cmp
into
retf
sub
call
stc
add
mov
add
jecxz
adc
(bad)
out
mov
jmp
xchg
or
and
adc
xchg
(bad)
jle
cdq
cmp
cld
push
rcr
in
push
addr16
(bad)
pusha
imul
sub
in
sbb
cmc
and
jl
shr
lahf
push
mov
xchg
pop
iret
sub
sbb
dec
stc
(bad)
mov
fadd
pop
jbe
pop
(bad)
data16
inc
les
cmp
mov
push
or
in
adc
mov
dec
mov
push
xchg
mov
jb
xor
call
mov
iret
and
and
inc
mov
pop
cmp
push
cmp
loop
(bad)
(bad)
xchg
aad
add
ret
clc
pop
iret
pop
lea
popa
fwait
mov
jge
cld
jp
out
clc
cmps
aad
sbb
adc
loope
sbb
ror
pop
aas
ret
dec
xchg
inc
test
fdivr
and
pop
fld
hlt
sbb
jp
add
push
ret
mov
inc
es
adc
jmp
aam
push
sbb
shl
and
pop
add
sub
mov
rcl
outs
retf
nop
shr
jecxz
push
push
neg
int
jbe
enter
jp
in
push
ja
cmp
rdpmc
sahf
pop
scas
loope
dec
popa
push
mov
xchg
stc
lds
inc
xor
and
xchg
inc
aas
cmps
and
in
scas
adc
ret
cwde
adc
aad
daa
or
popf
cmp
jg
xor
mov
lds
pop
inc
mul
push
es
mov
pop
mov
sbb
fdivr
jns
jae
inc
xchg
cmc
mov
adc
push
push
es
sar
ret
xchg
pop
dec
rol
mov
stos
push
rcr
push
jbe
mov
out
jp
push
fdivr
pop
daa
xlat
xchg
push
stos
xchg
aad
jl
jp
and
inc
test
out
ds
loop
(bad)
ins
(bad)
ffree
sub
push
dec
mov
mov
sub
imul
test
hlt
sbb
das
xchg
jo
pop
sbb
xchg
mov
sti
fmulp
sbb
push
and
dec
out
pushf
or
(bad)
fstp
(bad)
(bad)
sub
rcl
mov
sub
and
xchg
mul
fisttp
dec
sub
in
adc
inc
inc
popf
jnp
in
repnz
dec
lea
pop
or
sti
icebp
cmp
lods
inc
test
pusha
ret
fidivr
loopne
retf
call
out
test
pop
xlat
cmp
push
mov
ret
push
push
aas
mov
add
std
ss
cmc
(bad)
call
jmp
je
dec
inc
fdivr
test
icebp
lock
sub
(bad)
sti
(bad)
pop
mov
or
inc
aam
test
mov
mov
sbb
lock
lods
test
jo
or
js
push
dec
idiv
or
in
test
push
test
call
inc
aad
(bad)
adc
jmp
loopne
jmp
scas
and
fld
imul
adc
mov
dec
mov
xor
aad
test
retf
mov
xchg
cmp
adc
pop
mov
cdq
pop
arpl
xchg
pusha
scas
push
jmp
adc
sub
push
jne
and
retf
sub
or
mov
push
add
push
call
pop
mov
lahf
enter
pushf
call
add
call
imul
add
outs
ds
dec
mov
sbb
ins
inc
cmp
mov
push
imul
daa
loop
or
inc
rcr
out
imul
repnz
push
mov
cmp
mov
mov
lods
mov
clc
ds
nop
mov
sbb
call
in
test
jmp
jmp
cmp
or
pop
sub
xchg
sub
sbb
lahf
dec
test
mov
ins
mov
cmp
pop
jns
mov
jno
scas
adc
ror
ins
les
jmp
loopne
mov
mov
adc
fstp
out
std
psubw
shl
rcl
sbb
ficomp
rcr
mov
or
arpl
cmp
lods
retf
xor
sub
pop
push
loopne
sub
jno
dec
mov
out
ja
aam
mov
push
nop
mov
lds
lahf
out
add
pop
fmul
cmp
dec
test
dec
dec
cs
sahf
movs
sbb
sbb
xchg
clc
or
sbb
sti
das
(bad)
outs
clc
push
mov
lock
iret
test
dec
in
ins
mov
fwait
dec
fdiv
pop
hlt
xchg
lods
pop
push
mov
cmp
ret
or
mov
in
jo
push
ss
in
and
dec
inc
inc
test
in
push
add
sub
sbb
mov
int3
mov
mov
call
dec
inc
push
jmp
sbb
xor
out
mov
call
imul
xchg
lahf
mov
sbb
outs
jle
mov
mov
xchg
fsub
stc
bound
mov
add
scas
push
lds
gs
cld
sub
imul
ret
sub
ret
and
push
cmps
sub
es
shl
mov
lock
cmp
leave
(bad)
outs
lock
out
or
lds
push
pop
inc
cs
stos
jmp
mov
std
out
inc
inc
sahf
jmp
out
xchg
adc
inc
push
cli
xor
std
or
clc
or
into
mov
popa
push
test
xchg
aad
inc
les
push
std
and
mov
addr16
dec
fiadd
xchg
in
mov
xchg
add
sub
outs
and
aas
lds
xor
int
ss
xchg
inc
xor
pop
shr
xchg
fdiv
sub
arpl
push
jmp
mov
jge
mul
fisttp
stc
(bad)
xchg
out
push
add
movs
jne
add
gs
xchg
pop
arpl
or
mov
xchg
and
push
and
sub
pop
and
mov
dec
push
cmp
aam
dec
push
add
pop
adc
(bad)
scas
inc
(bad)
stos
sub
or
jg
ret
mov
push
sbb
jns
fs
icebp
(bad)
repz
push
fbstp
arpl
add
imul
mov
jnp
pop
jbe
cmp
add
outs
out
xchg
pop
xor
mov
mov
pop
mov
dec
loopne
pop
jns
adc
mov
and
jmp
rol
xor
out
xchg
daa
mov
sub
nop
pop
leave
loopne
repnz
cs
cmp
push
outs
ror
repnz
lods
adc
xchg
pop
pop
or
ret
sub
inc
fwait
and
daa
and
cmp
sbb
pop
xchg
adc
dec
cli
cmps
xchg
fwait
neg
sbb
add
stos
xchg
xchg
daa
push
and
in
pop
sar
leave
xchg
sar
xchg
and
fcmovb
mov
mov
test
inc
jne
retf
add
push
mov
jae
add
out
jle
xor
jp
mov
inc
mov
inc
mov
jno
mov
loop
inc
fwait
sti
std
mov
pop
rol
je
mov
je
lods
and
mov
and
fnstsw
lock
xor
jne
xchg
mov
ret
out
inc
ds
xor
cmp
and
rcr
add
iret
stos
scas
mov
cmp
sahf
push
mov
adc
ja
jmp
inc
call
fstp
sti
sbb
adc
pop
imul
scas
aam
sti
inc
pop
xor
iret
adc
push
push
adc
mov
jbe
loope
mov
push
push
cmp
xor
pop
add
adc
mov
mov
jg
sbb
ja
inc
xchg
jecxz
sub
jl
pop
ins
jle
cwde
lds
mov
xor
mov
pop
pop
mov
retf
xchg
sbb
sub
jne
or
add
mov
dec
popa
mov
(bad)
mov
fisub
rep
dec
xchg
sar
jnp
jns
xor
mov
mov
sbb
dec
bound
sub
lds
sub
(bad)
stc
cmc
mov
xor
push
cmps
cs
mov
test
mov
ins
sbb
jg
and
sbb
xor
clc
out
fisttp
or
call
jmp
(bad)
mov
and
mov
lds
(bad)
xchg
pop
dec
mov
mov
mov
xor
and
scas
mov
frstor
add
mov
and
or
sahf
xchg
movq
rol
mov
push
(bad)
repnz
popf
inc
out
and
sub
lods
ins
pop
ja
sub
lock
loop
or
mov
dec
aam
xchg
mov
(bad)
mov
bound
pop
or
mov
inc
mov
add
jns
and
or
jl
aam
test
fisub
dec
xchg
aad
push
add
cwde
test
aam
call
jg
dec
fdiv
push
dec
and
psrlq
mov
adc
jg
mov
sub
pop
repnz
adc
leave
dec
fild
lea
or
mov
xor
cdq
mov
in
and
inc
jmp
jmp
js
ins
and
aaa
jg
sbb
cli
xchg
fbld
in
mov
cmp
inc
enter
push
inc
rcl
xor
test
xor
movs
mov
fmul
fistp
xchg
push
jne
fwait
imul
sbb
sub
jae
fadd
out
mov
sbb
push
push
xchg
mov
add
mov
bound
pop
push
push
mov
pop
xchg
jno
jp
sbb
jne
cmp
shl
cld
mov
adc
(bad)
ja
gs
pop
or
pop
test
popa
lock
push
dec
xchg
and
(bad)
idiv
xor
loope
mov
rcr
les
mov
sti
pop
test
jl
sub
cmp
cmp
loope
push
mov
jae
or
xchg
scas
jle
sub
shr
daa
(bad)
stc
lds
in
sahf
outs
imul
xchg
int3
inc
pop
inc
jno
push
daa
sbb
cmc
jp
(bad)
stc
push
add
ja
add
xor
retf
cvtpi2ps
cli
pop
add
adc
leave
xor
popa
mov
xchg
push
call
packsswb
fwait
retf
stos
adc
es
lock
popf
mov
in
sti
(bad)
test
sbb
or
in
cmp
cmp
(bad)
add
pop
in
mov
add
mov
mov
fldcw
mov
les
ror
fadd
cmc
popf
repnz
aas
pop
cmp
xchg
pop
mov
les
mov
repnz
test
sbb
sub
add
mov
dec
xlat
scas
xchg
lods
nop
pop
imul
sub
fistp
mov
cdq
push
out
sbb
jno
cmc
or
fwait
mov
or
and
jo
in
xchg
cmp
cmp
xchg
test
mov
bound
mov
xchg
loope
test
ficom
mov
hlt
push
xchg
out
ror
shr
mov
sub
cmp
mov
daa
sub
xchg
jae
jne
dec
inc
push
mov
mov
pusha
mov
fimul
and
xchg
jecxz
xchg
scas
add
mov
push
push
(bad)
repz
test
retf
adc
pushf
jno
xchg
push
sahf
dec
sub
push
lahf
adc
movs
mov
daa
mov
call
push
dec
cmp
into
mov
dec
push
ret
cmp
and
ret
pop
out
xchg
mov
cmp
aas
add
xchg
fcomp
ret
mov
cli
in
aas
push
jmp
mov
fisub
mov
imul
add
shl
loop
push
lahf
dec
jnp
xor
xchg
xor
scas
mov
int
xchg
cmp
adc
ficom
push
xchg
mov
push
sbb
into
cli
or
mov
xor
sub
ds
enter
leave
movs
adc
iret
sbb
jae
cmps
xchg
push
push
push
mov
xor
shl
mov
icebp
xchg
mov
stos
gs
pop
sub
add
inc
xchg
je
outs
or
xchg
adc
lods
xor
outs
fisubr
clc
and
jbe
mov
sti
xchg
push
mov
adc
mov
sub
add
repz
xchg
dec
in
xchg
test
add
test
push
call
xchg
mov
out
sahf
dec
movs
dec
xor
stos
xchg
aad
jns
fisttp
fidiv
mov
and
sub
mov
xchg
push
ror
ja
jb
push
in
into
push
and
mov
jecxz
mov
ror
jo
inc
mov
nop
sub
test
dec
xchg
lock
into
sahf
cmp
pop
dec
out
mov
movs
cdq
inc
leave
xlat
shr
sub
add
jmp
add
test
jecxz
sub
rol
sub
add
outs
cvtdq2ps
sbb
pop
icebp
sbb
outs
mov
inc
mov
aas
pop
jno
sbb
xchg
push
xchg
mov
out
test
add
dec
fdivr
sub
iret
(bad)
rep
push
(bad)
mov
mov
add
rcr
mov
or
ret
pusha
imul
dec
or
mov
icebp
jecxz
repnz
sub
jns
sbb
into
in
inc
dec
mov
loopne
(bad)
jae
or
dec
push
scas
mov
dec
frstor
ja
push
xlat
sbb
stos
cmp
mov
aad
adc
push
cmp
pop
out
out
ss
xor
pop
fnstcw
pop
cs
mov
mov
cmps
jl
xchg
pusha
and
sar
iret
mov
test
xchg
retf
aad
cmp
pop
jae
retf
icebp
sub
sub
call
mov
mov
dec
int3
popa
mov
movs
mov
mov
push
shl
pop
push
lahf
xchg
push
pop
and
es
jle
pop
mov
mov
xchg
sub
cmps
xchg
dec
ror
xor
xchg
add
(bad)
cs
sbb
out
add
mov
jecxz
push
and
in
in
int3
das
push
jle
add
sbb
push
stos
and
in
inc
js
sub
push
and
push
lock
jo
clc
jecxz
ins
cdq
shl
sti
in
int3
push
and
outs
xchg
not
adc
cmps
pop
sub
xchg
jb
ret
mov
repnz
cmp
bound
iret
(bad)
out
(bad)
sub
lea
add
out
(bad)
cdq
xor
aaa
fcomp
ret
(bad)
fdivp
or
jge
popf
jo
xchg
sahf
imul
cld
repz
cmps
mov
inc
dec
cld
lock
ret
gs
jp
ja
sub
ja
test
and
fdiv
sub
fwait
add
sub
jb
imul
push
xchg
jle
dec
adc
xor
pop
movs
ins
repz
aam
push
stc
ss
push
sub
pop
inc
retf
fsubr
mov
pop
(bad)
movs
xchg
stc
jle
fcom
sub
or
pop
popa
jae
sub
lock
aaa
retf
mov
inc
add
jmp
xchg
mov
mov
mov
or
mov
xor
sub
add
movs
ds
xor
push
pop
and
or
out
(bad)
in
dec
push
test
outs
cmp
(bad)
mov
stc
repnz
dec
ret
lahf
sub
inc
repz
sbb
xor
std
pop
popf
(bad)
scas
iret
jne
cmc
lock
sbb
sub
and
pop
inc
div
push
push
mov
iret
retf
call
or
mov
popa
adc
adc
jbe
stos
mov
bound
out
test
jbe
jle
das
std
xchg
cdq
sub
je
cmp
ins
xchg
fabs
movs
or
pusha
push
outs
mov
push
mov
xor
xchg
loop
cmp
icebp
pushf
push
mov
js
outs
test
sar
xchg
inc
movs
fs
ror
add
mov
cmp
ss
sahf
xlat
(bad)
in
call
fistp
sub
jecxz
cmps
ret
mov
hlt
stc
fwait
dec
aam
mov
cmp
shl
xchg
mov
inc
les
in
mov
xchg
ins
or
jge
clc
pop
or
pop
jnp
mov
ficom
jno
ficom
aad
addr16
or
cli
or
in
shl
int3
mov
cmp
jae
jae
mov
lds
stos
mov
mov
pushf
sbb
jns
inc
mov
or
inc
std
or
out
jno
pop
and
bound
add
dec
add
and
lds
fcomip
ret
sub
pop
xchg
mov
xchg
(bad)
or
(bad)
repnz
lods
(bad)
pop
mov
iret
mov
lods
inc
loopne
lock
push
sub
pop
aad
cmps
cmp
(bad)
fstp
add
add
xor
mov
out
in
cwde
xchg
mov
and
sbb
adc
and
cmps
(bad)
out
push
xor
in
sub
cmps
movs
test
xor
sbb
xor
fcomi
sub
jb
fsubr
fdivrp
mov
int
mov
lahf
sbb
inc
mov
or
pop
pop
or
imul
xor
or
dec
jnp
dec
mov
cmp
pushf
das
mov
xlat
stc
outs
addr16
sub
push
leave
jae
lds
imul
retf
repnz
clc
mov
scas
xchg
retf
pop
adc
add
in
ja
and
ficom
sub
pop
push
ss
scas
push
rep
xor
and
xor
cmps
jge
es
out
push
out
daa
inc
xor
jecxz
shr
or
xor
ds
mov
push
jmp
mov
mov
aas
mov
iret
lahf
and
cmp
or
test
mov
or
xor
es
xchg
sbb
std
add
ds
sbb
xchg
mov
sysenter
xchg
test
push
cdq
inc
loop
add
jns
push
push
lods
sbb
pop
dec
(bad)
jl
retf
rcr
xor
inc
and
or
sbb
pop
(bad)
mov
xchg
jecxz
inc
jb
jl
mov
jmp
lahf
inc
mov
cmc
lock
fnstcw
jae
(bad)
cmp
mov
xor
dec
pusha
stc
(bad)
xor
xlat
loop
imul
fadd
mov
add
jecxz
mov
mov
test
inc
adc
hlt
mov
scas
(bad)
fs
popf
sbb
sar
sahf
ss
mov
and
je
rol
push
push
mov
push
arpl
retf
xor
jbe
daa
cmp
jl
inc
fadd
lea
sbb
sub
mov
pop
ror
pushf
and
ins
into
sbb
lock
mov
dec
inc
test
adc
mov
dec
imul
mov
stc
add
inc
(bad)
mov
jbe
and
add
push
add
bound
mov
shr
xchg
pushf
push
retf
xchg
jmp
dec
loope
push
mov
jle
lock
(bad)
shl
rcl
fldcw
fistp
push
daa
test
ret
dec
push
xchg
xchg
dec
cld
sti
xchg
push
xlat
push
cmp
sub
mov
cmps
add
idiv
pop
loopne
mov
dec
or
sub
fbstp
mov
xchg
jge
rcr
loope
iret
sub
pop
mov
icebp
adc
sbb
jge
push
xchg
mov
mov
mov
ret
inc
lea
outs
jg
lods
in
inc
push
int3
inc
or
inc
scas
adc
xor
jp
add
push
pop
cmps
mov
and
pop
push
ja
sub
mov
ins
repnz
push
pop
dec
jne
test
enter
js
mov
add
fwait
aaa
in
loopne
enter
cmp
stos
(bad)
out
imul
jl
(bad)
jecxz
or
mov
int
sbb
outs
in
imul
push
dec
mov
mov
test
movs
push
jnp
shl
mov
(bad)
cmp
pushf
cmp
int3
in
dec
mov
into
lock
jmp
out
xor
jno
clc
pusha
dec
mov
outs
push
jl
dec
pop
add
sub
test
std
sbb
cmp
cmp
gs
in
or
and
jecxz
and
mov
inc
jge
sub
shr
push
mov
adc
scas
and
xor
lods
cmp
iret
add
ins
add
shr
mov
leave
xchg
in
cld
and
xor
bound
cmp
fsub
fist
inc
inc
int3
movs
leave
cmp
gs
popa
lods
jbe
js
jb
sbb
retf
retf
mov
add
nop
cmps
mov
pop
leave
pop
jecxz
in
pushf
stc
sub
lods
clc
loop
cwde
clc
fstp
adc
arpl
adc
pop
pop
pusha
hlt
add
outs
sub
or
pop
push
sar
add
bnd
inc
(bad)
pop
(bad)
call
retf
loopne
lods
mov
and
fwait
cmps
push
ds
xchg
sub
jmp
loope
in
adc
cmp
pop
fnstsw
sub
fwait
xor
inc
cmp
inc
push
cmp
inc
ss
push
fwait
xchg
sub
repz
pop
fidivr
or
mov
and
cmps
pop
cmp
sub
fdivr
imul
jns
je
retf
or
icebp
cmp
sub
mov
cmp
xchg
iret
dec
ds
rcl
cld
hlt
cmc
cld
sbb
into
in
out
dec
call
dec
in
push
les
inc
iret
xchg
lock
cli
push
cs
or
mov
aad
arpl
jae
mov
repnz
aad
or
or
pop
test
movs
into
xor
in
sar
xchg
mov
sbb
mov
shr
adc
dec
retf
test
lahf
sahf
ret
dec
inc
iret
cmp
sbb
mov
leave
inc
and
ins
std
mov
sbb
add
push
pop
popf
scas
add
cmp
xchg
cwde
jne
(bad)
adc
pop
stos
imul
push
rcl
fsub
or
fdivr
pop
xchg
test
test
push
pushf
pop
dec
pop
push
sbb
xor
cdq
adc
mov
jns
push
sub
cmp
stc
fadd
add
jae
repnz
pop
dec
repnz
mov
inc
out
stos
arpl
xchg
in
aam
(bad)
sbb
xchg
pop
retf
mov
in
cdq
dec
pop
add
push
xor
test
in
add
pop
repz
mov
loopne
push
push
test
xchg
add
add
inc
jp
jnp
lds
push
in
cmp
or
adc
push
rcl
sub
iret
nop
xor
dec
push
mov
mov
xor
sbb
iret
push
scas
test
sahf
fsub
imul
and
push
add
stc
mov
shl
ret
push
aaa
push
sbb
movs
jns
inc
cmc
in
mov
daa
pop
in
rcl
cmps
and
mov
mov
into
mov
jl
out
mov
je
xor
jnp
add
adc
push
push
pop
ins
das
test
pop
xchg
je
in
ficomp
stc
sbb
rol
fistp
bound
sbb
lods
hlt
sub
pop
cdq
jl
jg
mov
or
mov
add
ds
pop
imul
mov
pop
sbb
or
movs
push
dec
sub
in
(bad)
push
jp
repz
or
mov
dec
lahf
xchg
sub
lahf
sbb
fistp
mov
imul
ret
mov
and
ja
out
lods
lds
fucomip
mov
jns
and
adc
mov
ja
mov
aaa
pop
cmp
cmc
push
inc
inc
cmp
sti
jae
adc
mov
lods
fnstenv
gs
(bad)
retf
ins
scas
out
out
(bad)
lods
gs
inc
clc
scas
inc
sbb
xchg
pop
xchg
jl
mov
mov
cmp
dec
inc
adc
mov
mov
push
lea
jecxz
push
xor
inc
in
fsub
push
cld
mov
cmp
lods
mov
test
popa
leave
adc
push
inc
mov
lds
push
sahf
and
sub
xlat
clc
mov
imul
(bad)
xchg
(bad)
stc
pusha
aad
retf
cmp
sbb
in
repz
pop
bound
jecxz
lahf
out
xchg
test
or
dec
xor
ins
stc
sub
ret
pop
(bad)
mov
inc
rol
inc
pop
jb
and
push
scas
jno
pop
(bad)
(bad)
cmp
pop
leave
add
cmp
mov
cmp
in
jnp
jno
vrsqrtps
outs
daa
or
inc
iret
sbb
jne
xor
imul
nop
and
xor
int3
inc
xchg
outs
mov
in
dec
mov
scas
xchg
out
stos
pop
inc
and
daa
cmp
int3
push
aas
js
mov
test
xchg
mov
and
inc
outs
lods
lods
scas
xchg
push
xchg
bound
push
xchg
movs
ret
fsubr
mov
dec
les
inc
fmulp
cmp
mov
xchg
xor
mov
sbb
daa
int3
js
add
adc
icebp
in
adc
js
push
xchg
fadd
and
jae
push
fist
das
sub
mov
clc
jecxz
cli
int3
jmp
fwait
jb
in
(bad)
shr
idiv
xchg
push
push
sbb
call
xor
or
push
inc
sub
loopne
outs
es
pop
daa
les
pusha
xor
sbb
inc
scas
ins
mov
mov
cmp
jnp
call
out
sbb
scas
sahf
jno
adc
and
xlat
sub
xchg
ins
sbb
sub
jb
push
or
push
call
inc
outs
dec
mov
cdq
in
imul
and
inc
cmp
sub
adc
xchg
loopne
xchg
loopne
test
dec
movs
pop
lahf
test
das
add
js
imul
mov
out
fdivp
jmp
mov
jnp
arpl
imul
cmp
add
test
lock
adc
cmp
push
mov
inc
pop
add
and
sub
std
jae
jb
in
popa
into
ret
cmp
jecxz
call
in
push
jmp
fbld
jne
(bad)
retf
repnz
cli
les
sti
jg
js
icebp
push
mov
mov
(bad)
jmp
xchg
jb
sti
xchg
pop
mov
ins
addr16
or
add
jae
mov
xor
scas
data16
sar
jle
daa
lahf
ret
ja
test
test
(bad)
nop
cmp
jge
dec
jecxz
daa
pop
fucom
sbb
or
das
xchg
in
jmp
es
xchg
ja
jmp
call
jno
cld
(bad)
shl
not
ss
idiv
inc
xchg
stos
xchg
dec
inc
cdq
(bad)
xor
sbb
mov
popf
mov
jmp
mov
xchg
and
pop
cli
imul
push
ror
cmp
xchg
stc
cmp
push
mov
pop
ficom
cwde
add
sub
addr16
dec
sbb
dec
lock
pop
jmp
pop
jnp
mov
into
cmp
inc
mov
aaa
and
int3
pop
dec
sti
fidiv
jle
push
pop
ret
popa
inc
daa
repz
sahf
mov
mov
in
dec
sahf
mov
pop
mov
push
push
out
pop
call
les
cmp
pop
xchg
fs
into
es
push
stc
pop
movs
mov
sub
jbe
aaa
jge
push
jle
jns
dec
inc
ret
add
adc
loopne
mov
cld
cmp
xchg
test
cli
retf
xor
out
loop
iret
addr16
push
and
cmp
mov
inc
imul
fxch
cwde
sbb
adc
fwait
or
pop
icebp
inc
push
arpl
mov
fmul
xlat
fcomp
dec
xor
pop
push
push
jo
out
sbb
in
cmp
mov
shr
loope
ret
(bad)
jp
mov
mov
jmp
and
jne
xchg
and
cmp
fisubr
mov
mov
loopne
or
mov
call
adc
retf
or
ds
add
xchg
pushf
sub
outs
pushf
dec
inc
add
and
sar
lods
fimul
fisttp
ja
js
ss
fbstp
out
mov
call
gs
inc
cmp
cmp
cwde
dec
mov
mov
out
push
(bad)
jle
jp
(bad)
cli
add
mov
mov
inc
(bad)
call
dec
jg
mov
sub
ins
push
xchg
in
push
sbb
dec
mov
mov
xchg
and
ja
lahf
pop
nop
(bad)
(bad)
add
iret
adc
repz
out
mov
push
jnp
(bad)
sub
dec
dec
lock
xor
adc
leave
jl
dec
in
adc
sub
ins
or
pop
jnp
cli
sti
adc
test
call
jo
add
repz
cmc
iret
das
sub
dec
in
sub
int
call
mov
dec
inc
push
pop
cld
stos
fidivr
fstp
rcr
retf
push
cmp
mov
mov
cmp
fbstp
out
mov
or
mov
les
ja
adc
jl
not
cmps
(bad)
mov
inc
aaa
mov
jno
inc
jo
inc
jb
frstor
retf
push
imul
imul
cli
in
sti
(bad)
or
dec
sbb
add
mov
push
pop
jb
mov
fiadd
dec
or
pop
add
stos
mov
movs
sub
adc
repz
lea
push
mov
pop
push
ds
inc
mov
jmp
mov
mov
jo
loope
(bad)
jecxz
sub
xchg
xor
push
stc
es
mov
shr
xlat
mov
popf
sti
or
mov
fnstcw
cmp
pop
pop
pop
into
cld
loop
mov
aas
ins
mov
xchg
or
inc
aad
enter
cdq
in
jbe
add
outs
pop
dec
aas
aas
xor
jg
xchg
pop
push
sub
xchg
mov
jb
xchg
push
lea
xchg
in
out
xlat
jmp
push
adc
stos
xchg
mov
(bad)
xor
jmp
inc
sub
mov
cli
xchg
rol
in
sbb
fs
inc
les
inc
push
leave
inc
xchg
mov
shl
dec
xor
scas
add
call
cld
mov
fild
push
add
pop
pop
push
jb
lods
adc
xchg
daa
(bad)
fmul
jp
ret
mov
ins
sbb
stos
jecxz
(bad)
cmc
or
into
sbb
push
shr
dec
mov
in
cmps
pop
push
test
fsub
push
ficomp
mov
sub
loope
ds
sbb
and
loop
cmps
cmp
fwait
nop
mov
push
mov
adc
ja
xchg
sbb
mov
scas
and
cwde
inc
inc
jbe
add
push
pop
add
call
outs
aam
je
mov
mov
push
ins
sbb
out
dec
leave
int
push
or
js
(bad)
push
adc
mov
sub
lods
aas
in
mov
int
cmp
add
imul
jl
bound
push
popa
mov
stos
rcr
jbe
xchg
push
dec
adc
ficomp
xchg
cmp
loopne
fbstp
addr16
mov
popa
daa
bound
push
shl
or
cli
and
and
xor
ins
rcl
retf
pslld
jmp
inc
adc
ja
addr16
fwait
push
push
pop
mov
shr
movs
jae
popa
fcom
pop
and
lea
mov
push
fisub
retf
pop
adc
pop
fadd
fsub
mov
dec
inc
add
pop
jmp
sbb
rcl
ja
jns
inc
cld
out
or
jnp
dec
cmps
cdq
shr
aad
outs
pop
and
pop
ret
sub
pop
jo
int
shl
jmp
push
loopne
call
aas
jmp
dec
inc
push
cli
je
(bad)
call
stos
lods
and
js
ret
dec
adc
mov
(bad)
loop
in
adc
(bad)
loop
mov
push
outs
cmp
ins
push
add
dec
mov
je
sub
fwait
dec
int
cli
sahf
lock
jbe
inc
ja
and
in
fdivr
hlt
dec
jae
sub
sub
imul
fbld
jg
xchg
imul
adc
loopne
jmp
and
dec
xor
inc
pop
jmp
xor
cwde
push
lock
and
aaa
sets
test
mov
out
and
jbe
imul
cwde
or
adc
mov
mov
test
aaa
sub
sub
mov
scas
enter
shr
pop
ja
xchg
mov
push
arpl
xchg
mov
or
add
cmp
sbb
lahf
or
inc
xchg
sub
add
scas
pop
pop
call
aad
fistp
jnp
pop
mov
repz
sbb
mov
(bad)
jae
xor
mov
sbb
aam
sar
xor
inc
cmps
adc
sbb
jmp
into
arpl
mov
repz
xchg
and
dec
outs
sub
mov
xor
jnp
xor
push
leave
in
mov
cmps
rol
test
out
shl
jle
jmp
mov
sar
and
ds
cmp
mov
xlat
sbb
es
cmp
push
inc
sbb
push
xor
clc
add
popf
leave
mov
movs
inc
jo
mov
arpl
inc
lahf
mov
test
test
enter
and
add
xor
add
sbb
pop
je
mov
(bad)
xchg
scas
rol
xor
movs
cmp
in
mov
mov
fwait
in
loope
out
pop
fwait
mov
jg
in
(bad)
inc
sub
cmp
test
mov
xchg
int
xor
icebp
mov
je
mov
mov
outs
mov
jmp
sbb
inc
in
lahf
enter
jmp
fistp
bnd
inc
sbb
xchg
fld
push
pop
cmps
or
loope
add
shr
in
cmps
data16
(bad)
push
ds
rcl
xor
popa
mov
ret
test
pusha
jae
ja
pop
mov
or
(bad)
jae
jge
iret
xor
(bad)
cmovl
loopne
cmp
jge
cmps
call
jge
ror
inc
(bad)
sub
mov
aaa
adc
mov
icebp
sub
aad
ficomp
or
and
(bad)
fimul
xchg
fild
lds
mov
lahf
or
ja
les
jg
(bad)
pop
movs
lea
sbb
push
jnp
pusha
mov
and
in
pop
sub
scas
mov
int
push
aas
push
fsin
inc
pop
dec
repnz
fst
and
or
out
fild
fs
out
inc
dec
mov
mov
add
cdq
cmp
stos
aaa
data16
outs
xor
inc
add
add
jne
out
jp
sahf
in
les
add
push
pop
(bad)
cmp
xchg
call
jl
fdiv
inc
jp
cmp
push
out
ins
iret
popa
jg
es
das
xchg
jg
arpl
mov
cdq
(bad)
sti
int
test
pop
mov
jmp
lods
daa
add
push
lods
sub
dec
mov
cmp
nop
aam
mov
pop
call
fcom
cs
out
hlt
xchg
sub
mov
and
or
and
jp
aad
sbb
xchg
or
push
cmps
jmp
pop
rol
xchg
cwde
cmp
adc
sahf
xor
inc
jg
dec
rol
rcr
movs
pop
adc
cmps
mov
rcl
and
xchg
add
pop
jmp
mov
jmp
dec
clc
rcl
pop
rol
jecxz
ret
cli
into
xor
cmp
sub
outs
sbb
fadd
iret
dec
stc
jnp
or
add
lahf
mov
sbb
stos
movs
cwde
cmp
loop
dec
xchg
jns
pop
(bad)
lods
addr16
lahf
data16
dec
(bad)
pop
push
mov
jnp
pop
sub
retf
sub
aad
in
pop
dec
dec
out
packssdw
xchg
ins
pop
xchg
jns
mov
mov
div
ror
pop
je
inc
stos
add
add
add
sahf
cmps
clc
fs
dec
mov
xor
sub
adc
adc
mov
ja
mov
out
dec
hlt
aaa
pop
cli
pusha
sub
idiv
inc
push
into
xor
and
mov
and
or
jp
pop
pushf
stc
xor
pop
es
and
cwde
jne
nop
mov
adc
leave
and
rol
pop
(bad)
in
mov
xchg
sub
sbb
out
ja
imul
pop
inc
inc
pop
adc
dec
or
sub
out
lods
xchg
outs
mov
jnp
jae
shl
xor
cwde
mov
push
push
xchg
mov
inc
rcr
in
test
test
xor
out
or
sub
jnp
cld
outs
imul
xchg
in
pop
dec
ins
adc
test
sbb
cmps
icebp
rcr
xchg
dec
movs
out
arpl
mov
lock
aad
mov
push
mov
mov
add
in
rol
push
xlat
mov
out
push
mov
(bad)
aaa
jbe
pop
lea
(bad)
(bad)
movs
stc
adc
add
sti
retf
scas
aad
(bad)
and
mov
call
in
add
and
in
or
jl
out
stos
xchg
inc
and
in
cmp
mov
jns
xor
imul
retf
pop
jb
aam
test
push
push
daa
ret
out
push
dec
outs
and
ss
mov
rcr
fcom
jne
test
js
icebp
(bad)
iret
lea
pop
adc
fs
aaa
sub
imul
pushf
enter
sbb
imul
fxtract
addr16
inc
repz
int
add
cmp
loope
fdivrp
stc
inc
push
(bad)
out
pusha
outs
inc
retf
sbb
lds
pop
out
enter
lahf
shl
in
xor
mov
dec
sbb
push
or
or
pop
mov
pusha
add
pop
jb
or
xor
cmp
lods
das
dec
mov
leave
jmp
es
ja
pop
inc
fmul
sub
mov
test
or
jnp
xor
jmp
pop
xchg
or
cmp
xor
sti
repz
outs
bound
or
cmp
xchg
data16
pop
stos
sti
xchg
call
ins
jecxz
mov
pop
sti
loop
out
push
retf
push
adc
stos
jne
fstp
cmp
inc
mov
imul
ds
mov
inc
shl
jmp
ds
mov
sar
clc
sub
test
shr
test
xchg
push
inc
pop
jno
inc
cwde
cli
sbb
clc
rcl
call
test
mov
into
xchg
xchg
mov
and
loope
fisub
aaa
in
shl
and
xchg
in
gs
popa
pop
movs
ret
loope
mul
jecxz
ins
out
iret
fbstp
pop
loope
retf
and
stos
scas
mov
sbb
jg
std
or
pushf
nop
fmul
xchg
push
xchg
out
fwait
jle
jmp
in
int
fistp
das
jl
aad
(bad)
fstp
or
out
clc
loopne
sbb
dec
cmps
sub
std
hlt
mov
test
pop
idiv
xchg
or
rol
popa
pop
cld
outs
cwde
inc
pop
call
sub
in
jnp
add
popa
cli
ror
xor
pop
or
mov
pop
scas
loop
or
sub
(bad)
sub
leave
pop
sub
adc
lods
ja
movs
pop
jp
mov
stos
in
add
loope
aaa
mov
das
mov
jecxz
test
pop
data16
push
and
jl
sahf
dec
movs
addr16
fwait
outs
popf
ins
call
cs
in
or
and
mov
push
dec
xlat
fbstp
mov
mov
pop
pop
sar
push
cmp
jo
cmps
test
fcomp
xor
mov
popa
adc
xor
pop
fld
cmps
and
push
movs
sbb
retf
sbb
jb
adc
mov
mov
push
es
mov
or
adc
push
out
push
and
in
shr
jle
push
xchg
adc
jae
aas
in
push
adc
jae
shl
push
sub
cs
sbb
and
std
shl
fiadd
sub
adc
cmp
cmp
jb
or
xlat
inc
pop
mov
mov
jo
outs
test
test
hlt
jno
fdivr
xor
in
add
or
imul
jle
dec
push
fisttp
or
out
test
les
add
jbe
out
test
je
inc
dec
xor
rol
iret
pop
pop
fcomp
loopne
js
jg
outs
int3
retf
test
xor
lds
les
sbb
imul
scas
ficom
adc
xor
add
fwait
or
and
clc
shl
sbb
das
ss
ds
and
shl
repz
and
dec
add
mov
les
call
inc
call
scas
and
sti
push
mov
sub
inc
ror
call
push
test
inc
retf
ja
sbb
out
mov
adc
pop
push
push
pushf
in
or
xchg
int
mov
xchg
push
(bad)
jmp
dec
sub
mov
ret
dec
popa
cld
mov
ldmxcsr
mov
push
das
jle
sahf
add
(bad)
das
addr16
mov
stos
mov
in
jo
std
cmp
adc
(bad)
dec
or
test
test
stos
add
aaa
ss
arpl
inc
ins
rcr
and
in
movs
jge
pop
lea
jp
jmp
pushf
(bad)
ss
dec
ficom
mov
ds
inc
gs
and
dec
xchg
aas
jne
xor
les
ins
jnp
xlat
scas
enter
sub
jo
jmp
inc
sbb
push
xchg
xchg
jge
std
sbb
mov
jge
hlt
pusha
les
mov
popa
fisub
sbb
es
mul
xlat
push
cs
mov
mov
and
lahf
and
arpl
sub
or
push
fcom
hlt
or
add
cdq
jl
bound
cmp
jecxz
out
inc
push
mov
inc
jecxz
movs
aad
(bad)
aas
call
jmp
push
loop
or
pop
test
(bad)
aas
and
retf
arpl
jae
out
mov
xchg
int
ds
ins
lock
(bad)
nop
cmp
jecxz
and
cmp
out
cmc
mov
jl
pop
(bad)
mov
aad
icebp
bnd
jns
fbld
cmp
inc
retf
loop
and
ret
shl
icebp
lock
cmps
or
fisubr
jae
sub
outs
call
aas
into
pop
adc
mov
mov
out
rcr
xchg
jne
or
fs
mov
jge
shr
popf
jae
mov
out
cs
add
js
xlat
xor
mov
stc
movs
cmp
mov
sub
sbb
sbb
jmp
cmp
jmp
clc
loopne
push
fidiv
fisub
cmps
dec
jmp
test
jnp
jle
test
mov
dec
xchg
jo
stc
and
call
jp
or
js
ror
sti
das
shl
mov
cmps
add
imul
lock
aad
out
inc
es
jnp
pushf
jae
fstp
or
pusha
push
pop
adc
and
inc
push
fwait
aad
cdq
push
inc
test
and
popa
mov
out
xchg
xlat
ffreep
jl
mov
call
lds
jmp
mov
bound
or
jmp
mov
fimul
stos
ins
outs
lds
inc
mov
and
int3
xchg
ja
push
jl
rol
fdiv
or
ins
stc
push
xchg
inc
repnz
sub
cmovns
in
mov
xchg
ins
out
dec
mov
pop
jbe
call
sahf
jnp
es
adc
lods
movs
push
push
(bad)
push
jp
xchg
nop
push
movs
or
inc
jge
(bad)
leave
mov
out
adc
jae
sub
mov
jmp
stos
dec
add
ret
clc
and
mov
dec
mov
into
sub
sti
repz
pushf
clc
mov
adc
nop
hlt
jbe
movs
jecxz
retf
xor
cmc
inc
sub
loopne
mov
mov
cmc
cmp
sub
adc
mov
mov
dec
fsubr
jmp
push
dec
mov
push
inc
ins
pop
jo
xchg
pop
or
not
stos
not
push
sbb
daa
adc
xchg
push
in
(bad)
in
sahf
ret
mov
lahf
les
mov
push
popf
in
addr16
adc
sar
in
in
push
adc
dec
dec
loop
dec
loop
or
mov
or
sub
into
mov
xchg
lods
mov
mov
dec
mov
std
add
popf
mov
inc
in
call
mov
mov
imul
adc
pop
inc
and
inc
jmp
and
aaa
(bad)
sbb
sub
scas
call
push
div
xlat
fs
push
(bad)
call
xor
js
add
mov
(bad)
mov
cmp
push
push
movs
int
outs
dec
pop
jbe
pop
and
aaa
add
out
clc
mov
pop
cmc
cmc
pusha
sbb
sbb
cmp
inc
push
dec
xor
xchg
dec
mov
fbld
xor
mov
popa
inc
jl
jl
int
sub
lock
into
test
fidiv
popa
test
(bad)
loope
xchg
push
mov
jmp
inc
(bad)
fiadd
aas
je
ss
dec
mov
(bad)
(bad)
sub
mov
fpatan
stc
and
retf
jno
rcr
jns
cmp
clc
daa
les
lock
cmps
dec
inc
jbe
sbb
lds
stos
sahf
push
movs
(bad)
mov
cmc
icebp
xchg
mov
dec
dec
stc
mov
cmp
js
xchg
jae
cmp
dec
or
xor
fs
cmp
aad
daa
sub
and
sti
xchg
fdiv
addr16
stos
sub
xchg
(bad)
lock
or
and
call
test
fs
int3
dec
daa
fcomi
shl
xchg
push
xchg
stos
lods
jnp
das
mov
jmp
jae
mov
mov
mov
ret
imul
xor
js
xchg
call
stos
cmps
jns
lds
adc
xchg
movs
or
jle
shl
jg
outs
out
cwde
xchg
fwait
cld
stos
cmps
add
pop
js
inc
add
pop
leave
repz
add
push
mov
daa
outs
sub
adc
dec
aam
in
xor
mov
cli
cmp
cmp
das
push
retf
test
sub
loope
mov
(bad)
frstor
mov
cmp
(bad)
pop
lds
mov
push
out
dec
pushf
jg
not
fsubr
fcmovb
rol
in
mov
mov
mov
lahf
mov
(bad)
xor
mov
shl
(bad)
fsubr
out
cmp
aam
sub
shr
(bad)
in
sahf
sbb
xor
xchg
fdiv
jp
repz
into
clc
adc
lock
out
jg
mov
lods
jmp
movs
adc
mov
repz
dec
mov
sahf
pop
imul
hlt
jp
fsubr
jbe
out
movs
mov
out
out
std
mov
stos
(bad)
jb
cmps
ss
jns
es
and
iret
cdq
xor
xchg
jle
xor
mov
mov
mov
movs
xchg
jl
popf
mov
sub
out
data16
push
jae
test
add
xor
ja
jg
lea
arpl
jnp
into
js
scas
pusha
cmp
clc
jns
in
inc
jle
data16
mov
jno
movs
into
std
lods
js
push
fdivr
jmp
xor
xchg
sub
sbb
out
dec
pop
push
fisttp
lea
dec
xor
jmp
xchg
retf
jmp
pushf
retf
push
adc
or
fdivr
dec
mov
xor
les
mov
js
mov
jb
lea
ror
pushf
adc
popf
dec
leave
lds
hlt
dec
fild
xchg
shr
sti
aas
(bad)
push
test
push
or
hlt
call
mov
jecxz
call
fcomp
and
xor
adc
dec
sbb
cmp
pop
cld
retf
inc
test
xchg
dec
jns
sub
add
add
pop
xor
enter
pop
jecxz
mov
or
pushf
xchg
sub
fcomp
pop
inc
(bad)
dec
add
sti
mov
mov
cmp
inc
rcr
icebp
xchg
daa
sub
add
or
or
les
retf
mov
dec
jb
cmp
gs
or
dec
xchg
cs
sar
test
mov
adc
mov
and
sbb
fwait
mov
repnz
mov
test
addr16
pop
shl
mov
fwait
arpl
out
mov
lods
cs
push
dec
aad
inc
xor
mul
cmp
(bad)
fstp
lods
mov
dec
pop
sbb
imul
mov
adc
pop
cdq
out
stc
adc
pop
(bad)
push
mov
inc
xchg
pop
scas
push
int
(bad)
adc
mov
cld
(bad)
ficomp
aam
adc
push
lods
stos
or
ins
cld
sbb
pop
and
les
movs
scas
or
cmp
movs
push
sbb
dec
out
out
mov
cmp
sbb
fdivr
sbb
xor
or
sub
shl
adc
sbb
fld
mov
(bad)
fisubr
in
test
push
xchg
jo
(bad)
icebp
mov
inc
mov
push
adc
fisttp
mov
jb
repnz
pop
mov
jl
in
scas
aad
push
inc
shl
es
test
(bad)
fstp
mov
sbb
fsub
pop
push
push
out
sbb
leave
movs
in
mov
adc
jp
adc
dec
mov
imul
outs
push
in
cwde
in
mov
(bad)
jno
int3
mov
pop
and
adc
les
loopne
shl
nop
jp
or
jmp
mov
push
adc
shl
in
call
add
bound
mov
loope
(bad)
idiv
xor
je
add
mov
xrelease
mov
ja
mov
sti
push
loope
pop
xor
cld
sub
xor
fistp
sub
dec
sbb
das
adc
add
into
mov
cmp
lahf
retf
cmp
sar
cmp
mov
xor
je
adc
pop
imul
jns
repz
adc
lahf
mov
dec
inc
mov
shl
pushf
lods
idiv
mov
xor
push
sbb
push
icebp
inc
clc
fist
xchg
push
int3
sbb
adc
jnp
test
xor
repnz
sbb
dec
repnz
cld
lock
ss
cmp
and
das
movq
jp
cmp
jae
lea
dec
and
cwde
stos
cmp
mov
pushf
rcr
bnd
idiv
fucomi
shl
test
bound
test
mov
and
dec
call
stos
cmp
mov
jmp
xchg
cld
sti
xchg
enter
lods
jmp
out
test
mov
cmc
mov
cmp
(bad)
xchg
mov
mov
inc
and
sar
(bad)
nop
xor
xor
xor
sbb
mov
stos
mov
push
test
adc
aas
and
in
call
outs
push
and
test
cli
les
icebp
add
lods
xchg
rcl
mov
sub
sbb
jmp
(bad)
lods
sub
pop
iret
mov
mov
or
inc
adc
in
mov
jge
jmp
mov
jle
xor
and
loop
sbb
xchg
pusha
mov
rol
jbe
dec
sbb
sar
jae
xchg
(bad)
push
shl
(bad)
lods
mov
push
data16
mov
jge
daa
aad
mov
(bad)
adc
pop
out
mov
int
ret
cdq
lock
repz
inc
cmp
mov
add
jae
aam
cmp
cdq
lds
jb
add
push
add
imul
retf
enter
mov
sub
mov
cs
cmp
test
jmp
cmp
xchg
ins
sub
leave
and
mov
pop
fisubr
inc
not
loope
pop
mov
aam
mov
daa
jp
mov
mov
push
pop
setae
std
and
dec
icebp
sahf
jp
push
call
push
imul
cmps
xchg
mov
jnp
xchg
das
and
inc
xchg
(bad)
mov
pop
scas
push
aam
mov
clc
sar
mov
hlt
jb
das
fldenv
sbb
xor
fdivr
fdiv
fst
pop
ja
ds
mov
fist
loope
paddd
add
inc
xchg
or
jns
mov
and
xchg
ret
mov
in
adc
(bad)
ficomp
jb
sub
popf
xor
mov
clc
lods
add
pushf
leave
jmp
mov
or
sahf
fwait
aad
mov
inc
aam
out
test
je
enter
test
pop
cs
fsubr
mov
push
or
rsm
jae
xchg
ins
shr
in
mov
inc
out
jge
mov
(bad)
xchg
or
pop
arpl
push
dec
xor
stos
adc
add
loop
stc
mov
icebp
call
js
sub
test
outs
fisttp
ins
ins
sbb
cli
or
cdq
xchg
mov
mov
fisubr
shl
cmp
stc
int
push
mov
add
xchg
int3
outs
sti
shl
jg
out
cmp
dec
(bad)
xor
add
call
push
jge
pextrw
and
cmc
test
xchg
mov
lock
(bad)
in
out
xchg
mov
popf
mov
sbb
dec
cmp
lods
(bad)
fs
daa
cmp
mov
inc
mov
push
ins
call
imul
sub
test
inc
mov
pusha
mov
mov
cmps
pop
pop
es
inc
pop
push
sub
leave
scas
and
push
xor
sbb
test
imul
cmp
call
in
cld
jp
test
cmp
xor
add
jae
pop
mov
add
or
nop
jl
dec
outs
or
xchg
fist
cld
ficom
pop
out
mov
and
dec
xchg
sbb
fs
mov
pushf
pop
or
xor
jecxz
ds
mov
ret
call
pushf
inc
test
pop
dec
jecxz
sub
int
jmp
sub
cwde
xchg
jnp
and
js
mov
gs
mov
test
mov
mov
test
sub
inc
dec
fadd
cli
repz
loop
call
adc
pop
jno
repnz
push
mov
xchg
lea
jp
sbb
dec
push
inc
jg
xchg
adc
add
lock
jp
loop
mov
xchg
cmp
xchg
leave
addr16
repnz
sti
and
lahf
push
push
cmps
jb
fcom
sub
or
mov
xchg
sti
xchg
push
and
std
inc
ins
(bad)
retf
(bad)
and
adc
sbb
shl
hlt
stos
ins
pop
data16
inc
ja
push
outs
aas
(bad)
jl
mov
retf
push
(bad)
xchg
aam
jno
sar
jge
int3
inc
mov
(bad)
sub
(bad)
pushf
push
sub
sti
sub
xchg
adc
rol
xchg
leave
stos
xor
rol
test
jae
inc
call
adc
add
and
pop
pop
fist
rcr
lock
mov
mov
mov
xchg
mov
pop
cmc
ja
std
das
mov
int
push
cmp
fist
in
jl
sbb
jge
mov
push
rcl
test
sahf
xor
pop
enter
or
pop
mov
xor
cdq
fcom
jo
cmps
add
(bad)
push
adc
cmps
adc
jnp
pop
xor
jge
stos
lods
fs
xor
pop
leave
pop
clc
arpl
repnz
push
clc
jl
mov
retf
jb
push
loop
sti
loope
xchg
add
add
loop
or
inc
add
fsub
movs
retf
lea
iret
aaa
lods
frstor
mov
xchg
adc
pop
cld
enter
sbb
pop
(bad)
xchg
(bad)
cld
sti
icebp
sub
adc
push
ret
lods
xchg
mov
shl
jp
push
xchg
bound
or
pop
add
push
xor
test
imul
push
or
fs
int
(bad)
outs
cmps
push
pop
int
sub
and
xchg
sbb
sbb
in
xlat
jecxz
arpl
dec
in
or
jle
hlt
lods
sub
mov
shl
popf
mov
das
fadd
aad
pusha
sar
mov
sub
dec
ficom
fs
in
aaa
xlat
push
jnp
xchg
les
sbb
cwde
cmps
xor
test
sub
mov
inc
mov
pop
xchg
shl
inc
jmp
mov
jl
mov
nop
(bad)
jmp
xor
mov
mov
jno
dec
sti
jno
xchg
push
dec
xor
adc
mov
jo
movs
call
stos
mov
les
daa
cmp
sbb
jno
iret
add
call
popa
mov
out
pop
inc
loop
mov
inc
gs
inc
in
jo
orps
jo
ja
cld
in
in
and
sbb
mov
shl
adc
adc
xchg
add
or
test
out
out
add
add
sbb
adc
stos
or
call
and
inc
aaa
dec
and
(bad)
mov
sub
jmp
mov
cmp
xor
pop
jno
retf
xchg
inc
or
aam
xchg
fistp
dec
mov
xchg
jns
pop
jb
adc
adc
mov
es
adc
sar
dec
sahf
jbe
leave
push
add
add
rol
test
aam
lock
jno
adc
test
js
loope
jo
xchg
or
hlt
pop
or
mov
pop
or
fidiv
into
mov
jecxz
xor
ret
pop
stos
adc
pop
in
jmp
popa
jbe
ins
cmp
arpl
dec
mov
cmp
jbe
xchg
(bad)
ja
jmp
sub
jle
cwde
cmps
mov
and
cmp
sub
lds
js
xor
cmp
add
enter
int3
xor
popf
jmp
xlat
mov
fstp
sahf
push
ror
xchg
cmp
mov
in
pop
mov
(bad)
push
ja
and
sub
es
xchg
icebp
push
mov
xchg
push
call
add
das
retf
dec
and
sbb
dec
xchg
ret
dec
dec
repnz
fs
sub
div
(bad)
mov
push
scas
mov
or
mov
in
mov
inc
mov
or
popa
les
cs
lahf
jl
loopne
jecxz
in
xor
pop
sub
or
inc
imul
sbb
pop
and
(bad)
dec
mov
push
cmp
repz
pop
ja
imul
adc
jmp
sub
out
int3
movs
jo
jbe
test
out
arpl
int3
add
bound
sub
aam
pop
mov
call
pop
mov
pop
imul
mov
retf
adc
call
sbb
or
repz
aam
jle
inc
jp
adc
mov
xor
dec
fld
lds
mov
or
pop
jmp
les
mov
ret
mov
fistp
pop
out
cmp
js
and
ja
add
ret
popa
mov
mov
int3
inc
sti
movs
(bad)
iret
lea
addr16
push
mov
push
ret
mov
ficomp
jns
inc
mov
cmp
fs
jg
adc
jnp
je
hlt
sbb
aaa
push
test
mov
xchg
mov
es
sbb
stc
clc
adc
pop
shl
icebp
mov
test
cmc
nop
fidivr
ins
pushf
into
jl
and
xchg
sti
call
push
push
data16
lds
mov
push
push
mov
imul
push
mov
movs
inc
xchg
fs
cmc
inc
pop
loopne
arpl
mov
inc
cld
fsubr
cwde
jle
jne
push
xchg
out
push
adc
sbb
mov
hlt
loopne
idiv
call
gs
lods
inc
push
add
mov
sbb
inc
inc
cwde
xor
or
push
mov
inc
lods
aaa
pop
xchg
cmp
xor
pop
mov
and
inc
and
das
add
es
jg
icebp
dec
push
cmp
xlat
mov
fcomp
nop
sahf
sub
shl
es
or
daa
jle
cmps
popa
daa
lahf
add
cmp
mov
jno
mul
mov
cwde
jne
push
int
bound
stos
sub
adc
stc
sbb
cld
(bad)
leave
out
adc
jbe
jne
inc
mov
inc
sub
lods
mov
xchg
mov
jns
add
out
outs
data16
rol
out
test
cmps
dec
add
pop
mov
das
jno
adc
add
ds
and
out
cmps
sbb
xor
jno
arpl
scas
or
xor
stos
imul
dec
out
mov
inc
xchg
sbb
xchg
js
sub
push
aam
jl
jb
mov
mov
mov
out
add
and
or
or
mov
xchg
mov
(bad)
cld
das
fwait
push
enter
jmp
je
jp
mov
(bad)
cdq
jns
pop
and
movs
cmps
sub
or
cdq
test
push
cli
jecxz
jge
cli
push
adc
aam
pop
dec
ret
int3
shl
ins
mov
test
push
cmps
int3
mov
sahf
or
fwait
mov
int
mov
ficomp
dec
aas
push
lods
pop
mov
mov
mov
ins
dec
into
mov
xor
lods
(bad)
mov
dec
push
lods
cmp
push
ins
into
adc
cdq
out
mov
neg
cmp
inc
add
(bad)
push
das
in
into
in
(bad)
jmp
jecxz
jae
dec
repnz
inc
mov
lahf
sbb
push
cmps
dec
popa
or
arpl
daa
or
int3
imul
sbb
push
push
out
dec
stos
and
in
xchg
movs
xchg
pop
pop
add
sar
cdq
test
xchg
retf
enter
std
fcomp
imul
imul
push
ins
rcl
xchg
lea
xchg
inc
inc
mov
inc
add
cmp
(bad)
popa
into
repnz
xor
adc
push
fwait
nop
stos
push
and
mov
or
or
pop
xor
into
outs
cmp
mov
shr
add
int3
xchg
sub
mov
pop
cmps
jmp
mov
mov
mov
mov
jnp
jmp
ss
ja
xlat
fild
adc
cmp
shl
hlt
das
pop
mov
hlt
mov
call
ins
cs
sbb
dec
fs
cmps
movs
sbb
cli
cmps
les
aas
repz
cmps
add
leave
scas
imul
mov
jne
or
iret
mov
test
lock
add
pop
jmp
xchg
pusha
lods
je
pushf
inc
clc
bound
into
xchg
push
dec
lock
mov
nop
es
cmp
push
std
push
cmc
retf
aas
pop
imul
(bad)
pop
inc
es
nop
cmps
dec
sub
push
mov
ds
or
shl
lods
fidiv
adc
(bad)
sbb
xchg
inc
jno
rol
cmp
mov
and
add
push
dec
dec
nop
les
mov
mov
sbb
xchg
mov
(bad)
sbb
cmps
imul
push
(bad)
mov
mov
aad
out
arpl
pop
mov
fwait
xor
cmp
ds
cmp
jo
adc
or
jecxz
lods
dec
cmp
or
add
scas
pop
out
fsubr
in
sub
adc
cmp
cs
pushf
sbb
jbe
jle
je
mov
push
movs
mov
sub
inc
outs
hlt
mov
jecxz
call
int3
cmps
and
mov
pop
outs
aam
in
and
mov
scas
movs
mov
shl
and
rcr
sbb
sub
xchg
jmp
inc
test
mov
add
mov
cmp
jle
mov
aas
xor
push
or
push
mov
push
pop
sahf
jg
mov
pop
inc
out
je
jp
add
adc
and
cmps
pop
fidiv
test
(bad)
cmp
out
mov
jmp
(bad)
out
iret
(bad)
jae
add
fld
ins
(bad)
sar
mov
xor
pop
stc
ins
xor
inc
mov
fbstp
add
pop
fmul
or
xchg
(bad)
or
aaa
mov
daa
shl
(bad)
mov
dec
add
push
inc
addr16
fwait
out
push
clc
mov
dec
mov
popa
dec
gs
pop
cmp
mov
xchg
js
popf
int
sahf
jae
add
xchg
jb
jp
stos
mov
dec
dec
fisttp
and
sti
loope
rcr
push
dec
push
add
popf
scas
cmp
pop
or
mov
mov
rcl
dec
pop
sub
xor
inc
push
(bad)
xor
add
icebp
add
dec
xchg
jno
fidivr
nop
into
jg
dec
inc
test
sub
jp
lds
mov
mov
das
mov
jnp
dec
cmps
call
sti
pop
mov
icebp
or
jge
hlt
fild
std
or
(bad)
scas
iret
push
xchg
arpl
sub
sahf
ja
icebp
sbb
mov
fwait
stos
mov
test
test
cli
add
arpl
mov
ds
cs
pop
jecxz
xor
pop
cmp
pop
cmp
stos
xchg
ja
sbb
adc
xlat
popa
push
inc
repz
xchg
xor
stos
hlt
leave
jno
inc
xor
and
mov
jns
push
jne
jbe
sbb
xchg
xor
in
(bad)
mov
ins
adc
retf
jg
jg
mov
call
push
fcom
adc
inc
inc
rcr
mov
xor
mov
in
or
jmp
xchg
add
sar
rcr
push
loopne
aam
fucomp
push
xor
aaa
das
idiv
pop
or
in
icebp
jo
mov
jbe
pop
fiadd
mov
cmp
sahf
jbe
smsw
aas
sub
ret
or
inc
jp
mov
add
test
gs
(bad)
xor
push
and
ret
inc
loope
mov
push
fistp
fwait
xor
mov
inc
lahf
test
in
adc
imul
clc
push
xor
inc
mov
inc
sti
pop
in
int
cmp
test
mov
mov
dec
mov
fidiv
push
or
mov
lea
push
jo
sbb
js
mov
dec
jg
icebp
repz
mov
push
push
inc
xchg
ins
push
ins
stos
fst
aaa
sbb
pushf
dec
xchg
xor
jo
push
dec
jmp
push
in
xchg
xchg
jb
(bad)
adc
lods
inc
jl
sti
int3
jnp
popf
jle
push
pop
iret
xchg
adc
imul
aad
and
(bad)
nop
sub
and
out
sahf
gs
mov
jne
jne
mov
mov
mov
mov
add
icebp
mov
add
imul
scas
shr
mov
and
push
push
mov
daa
push
(bad)
cld
jecxz
jno
mov
test
ficom
pop
scas
xchg
iret
movs
in
(bad)
or
test
out
or
popa
dec
xchg
mov
mov
mov
fidiv
std
cmp
pop
cmc
nop
mov
rcl
sub
fsub
addr16
mov
cdq
jnp
(bad)
xchg
pop
or
mov
cmp
shl
imul
and
dec
shr
int
mov
aaa
popa
test
mov
iret
add
inc
sahf
or
loop
aas
ja
test
call
xchg
scas
or
or
dec
cmp
outs
movs
push
mov
lahf
or
mov
clc
mov
leave
mov
add
imul
bnd
cmp
mov
xchg
or
jmp
or
into
pop
dec
jne
cld
or
lahf
int
cmp
inc
or
inc
call
mov
and
fsincos
(bad)
and
push
fnsave
fisub
sub
sbb
imul
add
adc
inc
jo
xchg
cld
aaa
out
push
mov
jne
adc
mov
jle
jbe
push
mov
data16
xor
pop
dec
cwde
int3
es
jno
mov
or
cmp
pop
lods
pusha
lea
pop
pop
pop
ror
mov
lds
mov
data16
icebp
das
(bad)
cmp
mov
dec
lods
jmp
sahf
push
pop
nop
or
push
inc
rcl
stc
call
mov
in
xlat
xlat
mov
std
(bad)
call
add
mov
mov
mov
ja
xchg
les
ss
gs
test
popf
or
hlt
dec
shl
xchg
mov
ja
dec
icebp
mov
mov
cs
jne
push
dec
push
sub
sti
pop
push
push
dec
add
xchg
mov
inc
xor
popf
cwde
ss
sub
adc
xchg
add
pop
push
jmp
inc
mov
xor
daa
push
and
cld
inc
popf
pmaddwd
and
mov
pusha
nop
dec
jl
cld
cmp
push
loope
in
fdiv
(bad)
xor
enter
xor
adc
in
xchg
xchg
xlat
fs
push
add
push
mov
movs
push
jmp
push
xchg
jecxz
test
mov
int3
sbb
inc
jne
fiadd
lea
or
push
fmulp
cli
repnz
xor
and
mov
mov
div
push
rcl
sub
xchg
push
pushf
or
mov
xor
gs
add
mov
aas
pusha
sbb
cmp
call
sub
out
sub
(bad)
stc
mov
pop
mov
(bad)
je
mov
xor
push
push
jle
int
xchg
loop
pop
dec
sbb
add
in
pop
pop
das
mov
sub
in
rol
mov
xor
jge
jecxz
add
cmp
movs
cmp
mov
jbe
jnp
jnp
push
add
xor
nop
hlt
sbb
ds
sbb
out
retf
cmp
addr16
jb
xchg
adc
jb
jl
jbe
mov
push
or
movs
mov
cmp
mov
mov
sub
xor
or
cmp
hlt
mov
push
xchg
cmovl
mov
sub
test
loopne
les
hlt
(bad)
mov
pop
pusha
and
iret
dec
mov
mov
push
sub
shl
and
or
and
mov
enter
repnz
cdq
and
cmp
push
stos
mov
ins
and
jmp
(bad)
(bad)
jae
js
cmp
jne
nop
ss
scas
push
leave
popf
daa
push
stos
ja
mov
sbb
stc
pusha
push
icebp
sbb
and
cmp
test
ins
jecxz
(bad)
std
mov
test
sbb
cmc
aaa
mov
stos
test
test
add
movs
not
push
(bad)
into
nop
mov
jmp
push
(bad)
fcom
push
jl
shr
or
xchg
dec
jmp
xchg
pop
xchg
mov
push
cs
jg
cmp
ds
mov
rol
pop
cmp
mov
xlat
or
adc
ss
mov
out
inc
movs
pop
push
sbb
in
shr
or
jno
dec
sbb
sub
cmc
add
push
mov
mov
xchg
jne
cmps
mov
imul
call
iret
outs
scas
cmp
inc
mov
sbb
jae
pop
sar
pop
adc
push
shl
mov
scas
das
test
fimul
mul
and
(bad)
jae
pusha
add
xor
and
sbb
std
xchg
jmp
mov
adc
push
cmp
inc
movs
add
cmp
dec
sahf
pop
mov
pop
mov
fadd
dec
mov
(bad)
(bad)
in
cmps
gs
mov
imul
arpl
xor
sub
clc
push
in
pop
xor
shl
imul
enter
ja
out
jmp
push
and
mov
add
ins
xchg
push
xor
xor
shl
cs
cmps
out
xchg
sbb
in
inc
push
push
mov
xchg
push
mov
jmp
cmc
xchg
test
lahf
mov
xchg
(bad)
std
icebp
dec
cmc
loop
dec
jo
in
arpl
xchg
mov
loopne
mov
inc
or
out
mov
cmp
mov
loopne
xor
pop
rol
(bad)
sbb
push
sbb
pop
cmp
sub
ins
and
pop
dec
xor
jmp
icebp
xchg
aam
lea
(bad)
call
sahf
dec
inc
sar
cli
ds
add
int
sbb
es
in
jl
xor
retf
jg
add
pushf
fwait
mov
mov
rcl
mov
jae
stos
popf
mov
outs
mov
sbb
fstp
lods
frstor
pop
add
test
push
repnz
jb
mov
cs
rcr
adc
mov
sbb
sub
iret
or
pop
lods
imul
(bad)
fcom
push
jl
je
xor
and
xor
mov
and
dec
out
aaa
xchg
add
jns
add
fsubr
inc
pop
fcomp
xchg
inc
cmc
rcl
mov
fucom
nop
je
pop
and
and
popa
popa
or
bound
out
add
sub
mov
cmp
jge
cli
xchg
dec
sti
les
inc
int3
jl
and
adc
sbb
push
cmp
pop
sbb
jo
jg
iret
bound
xor
xchg
(bad)
scas
xchg
in
test
jl
add
xchg
sar
jbe
xor
xor
or
into
rol
or
int3
cmp
iret
xor
div
mov
int3
xor
inc
ja
loop
xchg
dec
and
and
adc
mov
outs
cmp
daa
add
push
pop
cmps
retf
xchg
push
sbb
add
lds
fadd
cmp
rcr
aad
adc
sar
xor
femms
jae
add
test
pop
(bad)
js
jb
dec
retf
dec
test
and
pop
xchg
jbe
sub
cmc
in
push
(bad)
jge
mov
inc
outs
push
and
fdiv
bound
push
sbb
addr16
sub
xor
pop
mov
xor
push
cmp
mov
mov
inc
enter
pusha
rcl
pop
sub
add
sub
jg
cwde
xor
fiadd
inc
xchg
dec
shl
repnz
outs
and
lock
pop
sti
repz
cmp
(bad)
lock
cmps
push
js
out
rol
or
mov
lock
(bad)
jmp
into
sahf
push
pusha
mov
jne
fld1
and
mov
shl
xor
shr
cmp
cmp
xchg
fcom
aad
popf
lds
mov
jmp
and
int
mov
cmp
leave
push
imul
jmp
push
cmps
cmp
jnp
test
enter
pop
jns
aas
mov
ds
cmp
mov
xor
retf
shl
mov
scas
sub
jns
mov
dec
and
cmp
inc
inc
xor
ins
sub
jmp
scas
mov
sbb
aad
cdq
jmp
daa
test
xor
pop
enter
in
pop
and
(bad)
jl
sub
iret
repnz
mov
call
and
pop
xchg
(bad)
mov
mov
pop
add
fisttp
cmp
mov
adc
loop
pop
or
jmp
push
mov
cmp
les
std
xchg
push
adc
xor
jmp
xor
xor
outs
rcr
jmp
sbb
into
hlt
inc
pop
(bad)
xor
sbb
iret
sub
(bad)
sub
loope
and
lods
bound
dec
shr
mov
sbb
shl
icebp
sbb
push
stos
shl
pop
add
push
adc
cmps
xchg
add
ins
push
cmp
sub
mov
clc
daa
xchg
dec
adc
sti
(bad)
pop
or
daa
sub
ja
and
outs
xchg
xchg
fsub
or
sbb
clc
repz
loop
mov
adc
mov
hlt
popf
dec
std
int
test
push
xor
call
aaa
rol
add
sub
mov
mov
stc
mov
and
retf
cmp
test
add
inc
mov
mov
dec
rcl
out
fild
test
and
stos
mov
dec
jmp
mov
push
sbb
sbb
sub
ins
adc
iret
sub
mov
je
adc
xchg
rcr
add
jnp
push
mov
btr
ret
xchg
pop
jbe
and
add
or
into
pop
sbb
jb
mov
sahf
inc
mov
xor
inc
jl
mov
cld
mov
(bad)
in
arpl
mov
push
sbb
jle
test
jno
sbb
mov
sbb
sbb
retf
sub
js
inc
jo
fnstenv
jl
add
jno
mov
retf
xchg
sbb
xchg
jnp
int
jnp
and
mov
aas
loope
stc
iret
push
fild
(bad)
push
inc
jg
into
mov
test
adc
das
shl
dec
sub
xchg
xchg
pop
aad
sub
mov
hlt
add
xor
pop
mov
stc
outs
jb
aad
xchg
in
cld
outs
push
icebp
in
add
xor
cmps
inc
dec
xchg
(bad)
xchg
int
loop
jecxz
jmp
add
scas
test
call
loop
mov
or
jl
mov
fcomi
mov
out
repnz
bnd
and
sbb
sbb
pop
mov
cmp
fst
out
and
je
mov
jns
fsub
inc
js
xchg
xor
push
nop
and
or
dec
mov
test
mov
cmc
ins
fisttp
jno
or
fdiv
out
push
push
jbe
shl
sub
jns
cmovns
mov
xor
fsubr
jge
jle
aam
mov
(bad)
retf
(bad)
cli
arpl
push
inc
rol
arpl
pop
addr16
cmp
out
dec
fiadd
pusha
lods
push
fxam
mov
fmul
cmp
push
push
outs
(bad)
(bad)
xchg
aad
xor
(bad)
daa
push
add
add
push
cmp
inc
fimul
aas
add
or
movs
lahf
icebp
push
cwde
mov
pop
aas
in
fisttp
movs
pop
adc
fwait
fs
jp
popf
and
pop
mov
test
ins
popa
out
pop
push
(bad)
cmc
jno
xor
jne
jecxz
or
mul
lock
test
pusha
mov
sar
dec
repnz
shl
inc
add
dec
mov
xor
les
adc
call
mov
xor
iret
cmps
cmp
cmp
pop
inc
push
leave
jmp
pop
sbb
push
(bad)
into
jle
or
mov
dec
xchg
push
sub
add
cwde
sbb
(bad)
retf
std
daa
popa
and
pop
cmp
movs
adc
adc
nop
xor
mov
in
sub
repz
mov
call
add
sub
std
xchg
mov
push
cdq
js
sbb
jne
pop
out
fldenv
lahf
neg
dec
pop
gs
pop
leave
call
nop
and
movs
dec
push
fist
and
aaa
dec
repnz
jae
push
dec
int3
mov
mov
dec
leave
sub
xchg
mov
fiadd
cmp
cmp
push
repz
into
movs
inc
pop
cmc
mov
fnstenv
mov
sub
out
inc
lods
pop
mov
mov
ins
les
mov
fwait
ds
push
jmp
xor
aad
ss
cwde
das
pop
xchg
les
jge
inc
jmp
adc
add
xor
cmp
adc
pushf
sbb
xchg
xchg
inc
repz
imul
sub
call
das
mov
jg
inc
into
bound
adc
and
enter
rol
fld
jbe
mov
imul
jmp
ficom
sub
sti
xor
popa
out
mov
xchg
mov
pop
xor
cmp
fisub
pop
or
inc
cmp
fadd
push
fcmovbe
call
and
mov
inc
cld
sub
mov
jecxz
sbb
clc
jno
test
pop
daa
lock
ret
lods
inc
sbb
cmp
mov
pop
inc
mov
sbb
leave
stos
dec
mov
dec
out
pop
scas
inc
xlat
sbb
xchg
mov
adc
jp
stos
jmp
(bad)
xchg
add
ja
cmps
pop
pop
jns
adc
hlt
mov
cmp
add
mov
mov
xlat
or
jne
mov
les
cs
or
cmps
(bad)
xchg
loop
outs
icebp
sub
test
test
mov
sbb
repz
out
test
or
dec
aas
lock
lahf
add
retf
add
push
inc
ret
in
jbe
movs
aam
mov
inc
or
cmp
add
jae
mov
xchg
aaa
mov
or
test
enter
cli
mov
sbb
mov
jmp
push
movs
icebp
fild
push
addr16
pop
(bad)
mov
lods
int
jne
mov
test
sub
je
into
pop
jno
sbb
clc
or
popa
lods
xchg
cmps
loopne
add
pop
sbb
dec
into
pop
sbb
cli
gs
pusha
sub
or
push
mov
inc
out
cmp
inc
cdq
inc
sub
pop
loopne
daa
fs
mov
jnp
(bad)
(bad)
leave
test
bound
iret
xor
push
in
data16
popa
ds
loope
mov
cmp
jp
pop
into
cmp
cmps
pop
push
inc
add
stc
pmullw
ret
fnstsw
xor
gs
mov
aas
inc
adc
jmp
pop
sub
push
pushf
sub
scas
or
mov
push
push
outs
sub
imul
scas
cli
dec
jecxz
out
sbb
mov
pop
push
out
(bad)
repnz
into
in
xchg
add
arpl
push
repz
xor
bound
rcl
jne
nop
daa
scas
jle
sahf
fdivp
xchg
mov
addr16
loop
imul
lahf
div
mov
shl
jmp
test
arpl
or
repz
cli
idiv
pop
ret
xor
add
das
xchg
add
lods
pop
push
mov
fadd
in
je
popa
mov
xor
stos
aas
dec
les
addr16
xlat
outs
push
sbb
sbb
add
aaa
and
jmp
int
mov
cmp
mov
fsubr
push
jmp
jmp
add
adc
xor
std
dec
mov
sub
(bad)
out
fbld
les
pusha
fld
ret
add
enter
and
pop
cdq
adc
adc
mov
and
cmp
sub
cmp
mov
cmps
inc
lods
jge
push
(bad)
daa
mov
mov
mov
leave
retf
mov
sti
je
stos
push
add
push
cmp
pop
mov
xlat
call
cmp
call
and
test
mov
aad
int
add
pushf
push
jnp
sub
or
push
mov
test
xor
in
lock
cmp
dec
das
pop
push
push
call
push
js
out
sbb
fsub
popa
sbb
sbb
ds
cmps
cmps
or
push
jo
scas
mov
mov
xchg
adc
das
gs
lahf
push
pop
xchg
shl
std
ja
into
sub
pop
push
xlat
mov
test
dec
jl
shl
ins
push
(bad)
lds
add
dec
or
sbb
int3
and
(bad)
test
sbb
push
inc
cmp
into
cmp
mov
call
push
data16
inc
ret
push
cmp
iret
pop
pop
lock
add
std
sbb
test
inc
mov
imul
inc
ins
sahf
mov
addr16
fisubr
mov
sbb
ja
xor
ret
mov
sbb
inc
xchg
dec
xchg
pushf
mov
push
inc
or
aaa
pop
mov
out
shr
call
cmp
adc
mov
cmp
lahf
ret
cli
or
ins
call
mov
mov
mov
enter
mov
cs
data16
dec
push
jecxz
std
fld
shl
enter
or
sahf
cmps
ret
sub
lea
sub
xor
xor
sub
out
cmps
adc
jne
cmp
dec
and
xchg
(bad)
and
out
push
or
fist
(bad)
xor
imul
mov
dec
cwde
retf
icebp
sub
mov
and
das
pusha
sbb
ror
aas
fcom
sar
adc
fs
pop
and
out
mov
jae
sahf
mov
mov
out
mov
fldenv
jmp
aam
das
dec
sbb
add
adc
push
in
je
aad
sub
outs
(bad)
js
js
add
fcmove
fst
adc
sti
push
jl
pop
pop
sub
xchg
jp
ja
mov
xchg
mov
mov
mov
aas
push
(bad)
jp
adc
adc
ror
mov
cwde
test
out
dec
and
outs
dec
mov
mov
mov
mov
fcomp
add
out
aam
xchg
out
adc
sti
or
mov
out
aas
xchg
lods
sbb
leave
xrelease
pop
out
push
dec
xor
test
cmps
punpcklbw
into
mov
adc
lock
push
jae
mov
push
jbe
lds
jns
mov
push
jo
inc
mov
test
add
or
pusha
ss
outs
pop
push
mov
pop
xor
mov
cdq
stos
stos
cmp
les
std
mov
add
(bad)
(bad)
jmp
adc
adc
cdq
sbb
xchg
mov
sub
push
xlat
rcl
and
pop
pop
dec
fsub
adc
(bad)
sub
hlt
or
pushf
dec
bnd
jns
fucomip
lahf
jg
outs
movs
mov
adc
xor
daa
(bad)
ss
ficomp
sbb
push
add
xor
std
sub
in
cmp
pop
mov
sub
sub
daa
ror
out
and
pop
imul
aad
cmp
dec
jmp
jo
xchg
jae
stos
xchg
sub
and
mov
sti
lods
and
mov
inc
inc
rcl
mov
js
gs
dec
mov
mov
xchg
add
xor
call
inc
sbb
xchg
sbb
(bad)
test
arpl
push
and
movs
or
and
and
dec
jmp
inc
ins
mov
movs
pusha
leave
movs
fs
or
inc
xchg
pop
(bad)
shl
(bad)
shl
scas
adc
inc
add
shr
nop
movs
mov
cdq
lock
daa
fimul
cmp
div
data16
pop
enter
iret
test
or
jae
fcom
xor
xchg
mov
fstp
mov
fucomp
cwde
mov
push
jbe
pop
loopne
retf
fistp
or
cmp
hlt
cmp
pop
cli
mov
(bad)
lock
adc
es
sub
adc
push
mov
mov
cmp
xchg
pop
(bad)
int3
out
pop
pop
mov
push
lock
dec
fadd
mov
out
test
test
xor
mov
mov
lds
mov
pop
out
cmp
mov
cmp
call
mov
ror
xchg
mov
push
test
adc
push
popf
push
push
lods
pop
es
jne
bound
pop
adc
rcr
pop
out
mov
pop
mov
repnz
inc
push
stos
adc
aas
push
dec
ss
lods
loope
xchg
mov
ds
mov
mov
add
push
pop
dec
rol
jmp
out
test
or
adc
in
push
mov
std
mov
xor
add
call
lahf
pusha
jne
call
scas
pop
pop
add
add
popf
(bad)
fs
mov
ss
rol
arpl
xor
jne
ds
sub
clc
movs
sub
mov
push
shl
add
mov
arpl
rol
xor
jle
jcxz
mov
test
test
add
xlat
cmp
push
mov
adc
adc
sub
pop
imul
movs
cmp
call
cmp
loop
shr
fdivrp
push
adc
pop
cmp
mov
in
enter
test
lea
xchg
mov
fwait
das
mov
xor
adc
xor
jp
rol
call
cmps
fisttp
fmul
xor
ja
sub
pop
mov
jmp
rcr
retf
xor
push
call
fistp
dec
lods
hlt
imul
push
stos
stos
or
(bad)
mov
loope
das
jae
aad
pop
lea
test
outs
sahf
mov
ror
xlat
leave
rol
sub
sub
jl
sahf
pop
out
pop
shr
inc
inc
add
and
jo
mov
ja
test
mov
(bad)
hlt
dec
retf
outs
add
ror
(bad)
mov
adc
es
add
mov
jmp
mov
xchg
popa
sbb
mov
sub
or
mov
loopne
in
xor
jp
and
lahf
dec
call
xrelease
cmp
nop
push
pushf
fucomip
add
stos
es
dec
loope
rcl
sbb
adc
cmps
sbb
inc
fisttp
fst
idiv
out
mov
push
mov
jo
js
adc
jmp
(bad)
aaa
call
mov
push
sbb
fimul
loope
(bad)
shl
ja
aas
sub
sub
xor
add
and
arpl
mov
jecxz
mov
adc
mov
cld
iret
mov
les
xlat
stc
inc
mov
iret
or
jns
xchg
push
pop
cs
mov
mov
ror
jns
hlt
out
stos
shl
in
into
lahf
or
ror
adc
jbe
into
mov
inc
aad
sbb
xchg
inc
add
push
gs
push
inc
cdq
adc
iret
cmp
adc
pop
cli
push
inc
das
dec
or
pushf
and
push
cwde
push
push
loopne
fs
cmp
inc
ds
cmp
and
enter
les
inc
cdq
xor
mov
gs
int3
in
and
aas
inc
loop
cmp
jae
fistp
int
xchg
aam
push
mov
outs
xor
arpl
hlt
mov
das
je
push
and
rcr
call
dec
xchg
cmps
das
xchg
adc
push
xchg
int3
(bad)
xchg
fstp
mov
jge
pop
push
add
cmp
jmp
mov
inc
lahf
jle
dec
mov
ins
add
cwde
call
mov
xchg
cwde
lods
sti
mov
test
sahf
and
sub
and
xor
mov
add
xchg
inc
out
sti
push
scas
adc
mov
test
mov
mov
ins
pop
ss
sbb
or
push
mov
mov
jb
or
aam
inc
mov
inc
pop
dec
mov
inc
sbb
dec
aam
aad
cs
in
out
or
and
pusha
das
fs
mov
clc
push
out
rcl
icebp
movs
into
fild
mov
add
and
xor
(bad)
outs
push
in
inc
jmp
or
enter
push
cmp
jns
add
jecxz
cmps
push
xor
shr
out
dec
out
mov
xor
ds
sbb
add
mov
pushf
inc
adc
xchg
and
sar
pop
lock
or
scas
jae
sub
(bad)
sub
ret
sahf
outs
push
pop
movs
pop
pop
cmc
das
icebp
stc
test
mov
pop
gs
pushf
or
and
jecxz
push
clc
adc
sti
fldenv
mov
(bad)
xchg
mov
dec
cmpxchg
int
xchg
daa
mov
imul
imul
or
push
push
fcomp
xchg
out
dec
mov
xor
pop
std
jne
lods
xor
test
(bad)
lods
adc
inc
cwde
ficom
test
jmp
xchg
cdq
inc
jmp
mov
(bad)
(bad)
and
sub
lods
fbld
mov
(bad)
aas
mov
not
outs
sub
ror
hlt
or
mov
adc
imul
mov
je
(bad)
push
jns
push
jmp
sbb
dec
movs
jmp
sbb
movs
fld
pop
xchg
pop
adc
and
push
sbb
enterw
jp
mov
enter
inc
addr16
sbb
sub
dec
sub
sbb
cdq
push
repnz
mov
xchg
movs
int
mov
mov
adc
es
jno
dec
(bad)
mov
and
shl
mov
and
adc
fs
mov
mov
fwait
int3
jnp
add
ss
mov
fimul
push
sbb
inc
enter
adc
adc
hlt
sub
retf
and
fnsave
dec
mov
mov
pop
sbb
dec
and
es
lds
adc
jb
inc
repz
jmp
in
push
push
js
in
ret
mov
dec
mov
imul
add
into
adc
cs
ja
adc
or
push
xchg
pusha
not
les
out
mov
xor
cmp
and
fs
scas
xor
xchg
xchg
fs
inc
cmp
push
aas
mov
outs
xchg
and
cmp
repnz
sub
and
push
pop
xor
xor
mov
xor
out
pushf
and
mov
lods
mov
iret
sbb
jae
ins
test
test
or
mov
add
mov
jl
mov
xchg
loop
xchg
mov
into
jbe
adc
ins
sub
mov
xchg
dec
test
inc
sub
mov
mov
mov
pusha
cmps
pop
or
sahf
push
imul
sbb
fisttp
retf
or
ss
repnz
imul
mov
fsub
fs
cmp
in
sub
sub
inc
enter
add
pushf
popa
cmc
sti
inc
retf
jmp
fisttp
sbb
icebp
les
test
inc
outs
sub
mov
sub
pop
mov
sub
xor
(bad)
gs
sahf
mov
push
sub
adc
test
pcmpgtw
pop
into
jge
repz
or
test
pop
push
push
adc
push
mov
std
and
loopne
mov
mov
call
mov
ror
jmp
mov
sub
adc
(bad)
mov
test
jne
xchg
xchg
lds
dec
pop
fisub
repnz
mov
sbb
leave
test
(bad)
or
imul
leave
sbb
cmp
cmp
jg
test
aaa
push
jl
lods
cmp
xor
dec
sub
out
mov
fs
cs
stc
dec
inc
adc
xchg
dec
cmp
in
mov
(bad)
aad
loope
fsubr
pop
push
mov
and
jg
cs
add
test
or
pushf
mov
add
dec
push
ins
adc
mov
dec
fst
pop
xchg
or
dec
mov
jp
add
test
call
mov
nop
nop
mov
add
cmp
pop
push
iret
jns
int
ds
mov
sahf
sub
mov
mov
inc
loope
xor
mov
mov
pop
fild
jno
pop
in
into
xor
bound
inc
xchg
iret
or
in
or
push
xchg
sub
repz
shr
lahf
xor
ret
jp
iret
pop
scas
jg
aas
add
and
movs
pop
pop
dec
fwait
movs
sbb
out
or
jns
jne
enter
mov
rcl
(bad)
jecxz
es
loopne
jg
pop
ret
mov
jl
retf
jns
lock
aad
dec
sub
cli
mov
fcom
hlt
call
mov
icebp
cld
jbe
add
repnz
jp
adc
inc
test
mov
push
adc
test
stc
sar
xor
pop
loopne
ins
leave
lods
xor
inc
push
mov
cmps
stos
mov
stc
add
jo
inc
dec
xchg
xor
inc
sub
loope
sahf
sbb
fwait
call
enter
inc
mov
in
lods
ss
bound
adc
or
test
lock
cmps
xor
or
cmp
xor
retf
cmp
sbb
(bad)
fmul
aas
cmp
jp
(bad)
lock
outs
loope
std
aas
mov
add
ds
cdq
aad
sbb
xchg
and
ffreep
in
fwait
adc
cmp
or
jl
inc
fistp
fist
jmp
and
jle
addr16
mov
mov
lods
cmps
ss
inc
push
cmp
inc
mov
ins
hlt
push
or
outs
sbb
xor
ins
(bad)
jnp
lods
mov
cmp
js
cmp
ss
fsubr
aam
inc
fist
retf
cmp
dec
add
retf
pop
inc
fwait
cmp
int
pusha
sbb
jl
sub
shl
xchg
sar
icebp
fbld
icebp
(bad)
cmp
fdiv
pop
push
in
inc
mov
and
and
hlt
scas
mov
adc
sbb
push
addr16
adc
mov
imul
bound
adc
cmp
jg
pop
pop
cmps
out
cmps
or
fisttp
sub
mov
xor
pushf
ss
push
inc
jns
sub
mov
push
and
fsubrp
mov
pop
adc
enter
mov
mov
pop
jle
pop
call
jl
stos
out
ret
pop
std
xchg
inc
xchg
add
data16
jp
mov
push
push
jnp
lds
adc
xchg
mov
push
mov
add
and
imul
movs
mov
mov
push
ret
mov
lahf
fbstp
xchg
pushf
scas
sbb
scas
(bad)
mov
cmp
mov
cld
lock
daa
jecxz
mov
jmp
jmp
xchg
or
(bad)
pop
sub
daa
cs
rol
out
rcr
xchg
dec
in
inc
test
jae
jno
sbb
rcr
pusha
gs
pop
adc
xchg
mov
push
out
and
rol
sub
inc
mov
xchg
xchg
xchg
mov
add
mov
cwde
sub
(bad)
cmp
sbb
mov
xchg
sti
sahf
pop
(bad)
aam
int
nop
or
xchg
call
rcr
fs
cmps
push
xchg
add
adc
out
(bad)
or
dec
pop
pop
xor
sbb
repz
repz
pushf
jp
pop
xchg
adc
aaa
push
jle
add
pop
dec
sub
sbb
xor
jno
sbb
mov
push
pop
adc
pop
fstp
pop
into
pusha
int
(bad)
pop
fucomp
or
xor
ins
adc
lock
scas
cdq
pop
pushf
pusha
pop
imul
dec
mov
push
dec
jo
in
mov
mov
jo
jecxz
das
and
push
dec
aas
inc
jne
push
in
pop
xor
in
adc
hlt
enter
cmp
fisttp
ins
jno
loop
inc
jmp
addr16
mov
outs
es
out
stc
xor
aam
cmp
dec
jmp
adc
test
lea
mov
imul
cmp
shr
xchg
fild
mov
(bad)
test
mov
pop
inc
cmp
pop
push
cwde
cmp
dec
push
mov
ret
or
push
stos
pop
jnp
inc
cld
sbb
xchg
mov
fstp
adc
cmc
rcpps
sti
aad
add
jo
and
jg
push
retf
adc
inc
(bad)
pop
mov
repz
or
dec
jmp
xchg
dec
cmp
rcl
into
cdq
dec
or
dec
inc
aas
mov
lods
fistp
push
push
inc
sti
push
cmps
inc
sbb
xor
pop
sub
mov
pop
dec
pop
dec
push
movs
fbld
fldcw
sbb
jbe
pop
les
xor
test
scas
and
popa
add
xchg
data16
jge
mov
setl
bnd
inc
sbb
fs
and
xor
arpl
neg
cmp
and
dec
inc
add
mul
hlt
leave
dec
in
push
scas
imul
shl
test
push
xor
mov
ins
fsubr
pop
xor
cmps
rcr
loop
dec
xchg
in
test
sbb
outs
daa
sbb
lods
rcl
scas
sar
xor
cmc
inc
dec
push
aas
add
or
loopne
xor
dec
xchg
mov
jge
fistp
in
gs
xor
mov
pop
pushf
jo
sbb
push
cwde
inc
imul
pop
sub
shr
pop
mov
fist
nop
repz
jmp
cmps
ins
mov
pusha
push
pushf
push
mov
inc
std
repz
pusha
fiadd
push
mov
hlt
push
loopne
cmp
sub
div
mov
sbb
dec
xor
cmovp
cs
pusha
loope
lds
cdq
ret
out
retf
sbb
out
adc
push
push
adc
retf
cmps
add
cli
add
les
cmps
jns
push
in
mov
xor
test
dec
in
push
retf
pop
daa
xchg
jg
aam
or
lea
jno
dec
mov
push
pushf
jo
sti
mov
jno
aam
out
lahf
add
or
outs
es
stos
sub
or
aaa
adc
je
xor
(bad)
sub
adc
icebp
push
test
dec
inc
xchg
ins
and
xchg
out
lods
and
sub
or
adc
rol
mov
mov
enter
sub
repnz
movs
loope
jg
xchg
pop
sub
repnz
mov
enter
ffreep
and
mov
fpatan
cmp
xchg
loopne
aas
jl
cmp
fcmovnb
push
add
adc
leave
cmp
(bad)
out
mov
cmp
mov
inc
fcmovne
or
or
pushf
add
out
(bad)
(bad)
sbb
sub
add
data16
cmp
imul
push
pop
fmul
dec
xor
push
mov
adc
lods
clc
jno
clc
dec
and
rol
adc
inc
rcl
push
aaa
lods
xchg
scas
inc
repz
lods
mov
jo
loope
push
pushf
jecxz
mov
loopne
cmp
movs
test
ss
jmp
mov
loopne
mov
inc
jmp
mov
stc
or
(bad)
in
pop
pop
add
test
in
mov
mov
bound
pop
in
mov
dec
mov
test
mov
inc
and
stc
pop
and
xchg
es
or
shl
sbb
lea
test
hlt
sbb
mov
inc
test
icebp
pushf
pusha
or
mov
(bad)
dec
mov
lea
xchg
inc
into
xor
test
cmp
adc
pop
sbb
xor
dec
push
arpl
cmp
cmp
cmp
sub
test
jbe
rol
dec
(bad)
jecxz
push
pop
xor
mov
pop
movs
nop
(bad)
in
mov
add
shl
outs
and
fisubr
jp
inc
jmp
mov
xor
das
inc
shl
stc
mov
mov
jb
popa
xor
mov
mov
(bad)
fsub
jp
pop
dec
out
jns
or
xor
add
sti
inc
push
fwait
lods
out
or
add
jecxz
push
jns
test
adc
es
mov
dec
inc
aas
jp
cmps
repz
pushf
test
and
or
in
rol
or
pop
add
cmc
not
adc
pop
fnsave
push
xor
in
add
or
(bad)
out
mov
les
in
bound
jbe
dec
aad
out
loop
les
push
ins
enter
aad
popa
enter
adc
pop
dec
cmps
mov
jae
xchg
xor
mov
mov
arpl
mov
add
inc
rol
adc
ret
(bad)
xchg
(bad)
call
shr
add
or
push
mov
sbb
fst
hlt
leave
(bad)
ds
sbb
inc
and
fdiv
mov
xor
mov
dec
das
int
xchg
inc
xchg
dec
outs
outs
mov
push
dec
mov
out
cmp
xchg
in
cs
nop
lea
inc
dec
or
pop
mov
xlat
out
bound
into
call
push
icebp
mov
mov
or
inc
cmp
dec
add
mov
sbb
mov
bndldx
xor
fist
or
cmps
xchg
push
aad
stos
or
push
pop
cmc
sbb
sbb
mov
adc
adc
call
pop
push
(bad)
cmp
ret
sar
into
push
mov
jle
adc
inc
addr16
jge
xchg
lods
das
mov
(bad)
jbe
pop
cmp
pop
pop
push
movs
dec
ins
or
ds
dec
cld
imul
mov
mov
clc
sti
loopne
pop
or
cld
lods
out
cli
ret
cmp
idiv
dec
xor
inc
or
mov
ror
cmp
or
ffreep
into
sub
das
jge
adc
sti
mov
ror
cmp
repnz
xor
add
push
mov
mov
js
(bad)
sub
test
jge
outs
inc
xchg
fbld
cwde
pop
mov
xor
add
outs
jg
mov
in
mov
fs
push
fdiv
mov
ins
xchg
retf
mov
(bad)
push
xchg
leave
ja
shl
leave
pop
mov
xor
pop
(bad)
xor
inc
adc
sbb
cwde
sbb
(bad)
(bad)
jge
mov
mov
add
sub
inc
cwde
mov
je
scas
jge
ja
add
mov
aaa
loopne
fisttp
xchg
push
push
mov
or
adc
pop
xor
cmp
xchg
mov
movs
xor
mov
icebp
ror
in
add
(bad)
adc
jmp
ret
push
rcl
fild
push
cli
nop
stos
movs
jae
mov
push
ret
push
into
jno
cmp
pop
aam
push
or
push
sbb
hlt
mov
shr
sub
xor
ins
(bad)
sub
iret
js
lock
out
das
arpl
sbb
cmp
xor
jnp
dec
fisub
outs
inc
jl
mov
mov
xchg
scas
lds
adc
cli
imul
fisttp
ins
movs
enter
or
movs
(bad)
adc
mov
je
call
mov
(bad)
ds
jne
fdivp
nop
aaa
xchg
das
cld
xor
outs
scas
cmp
mov
and
jl
jmp
clc
cmp
sub
in
mov
(bad)
out
and
imul
loope
shl
fisubr
nop
sahf
(bad)
sti
inc
add
jmp
fwait
push
movs
adc
inc
test
sub
mov
or
push
mov
inc
cdq
xor
call
jl
push
ja
fdivr
aaa
cmp
popf
jns
xchg
cmp
mov
addr16
lahf
enter
sbb
jmp
js
fild
scas
xor
in
cmp
adc
pop
inc
cmp
je
cmp
mov
ins
fwait
sub
push
bound
fdivr
mov
mov
addr16
dec
add
mov
push
mov
retf
loop
movs
xchg
cmps
pop
sbb
add
jno
xor
call
loopne
idiv
mov
mov
push
cmps
push
outs
or
add
bound
(bad)
lods
dec
push
out
or
mov
pop
mov
daa
into
dec
test
push
jns
stos
and
shl
adc
mov
std
cmp
repnz
hlt
push
retf
cmp
mov
or
(bad)
(bad)
call
int
xchg
(bad)
rol
cmp
pop
enter
mov
ror
dec
jbe
cmp
hlt
mov
sbb
mov
xchg
adc
add
in
pop
shl
in
add
mov
mov
and
fcomp
cli
cmp
xchg
cmps
(bad)
inc
and
jmp
cwde
je
clc
dec
sahf
cmc
push
les
addr16
jle
add
call
xor
dec
repz
dec
mov
and
test
retf
ja
(bad)
jne
jns
add
sbb
sub
dec
push
test
pop
mov
ret
dec
push
pop
jecxz
xchg
leave
xchg
in
pop
mov
gs
clc
stos
jns
push
sbb
daa
xchg
sti
pusha
push
shl
xchg
jmp
sub
adc
add
and
push
and
push
stos
jle
push
out
jo
daa
std
xor
mov
rcl
(bad)
jbe
xchg
push
cld
rcl
pusha
or
push
mov
std
add
aas
jbe
pusha
dec
xchg
mov
pop
iret
dec
rsqrtps
cdq
stos
mov
out
mov
push
push
mov
or
jnp
leave
and
dec
jne
lods
dec
add
cdq
pop
pop
icebp
inc
or
iret
stc
arpl
sub
test
pop
xchg
shl
xlat
jae
xchg
mov
adc
popa
mov
std
nop
add
call
mov
sub
and
idiv
test
jmp
and
sbb
popa
adc
pusha
retf
aad
and
test
inc
arpl
jo
cld
dec
ja
data16
or
and
out
loopne
sbb
sbb
ins
in
call
jecxz
imul
adc
sahf
jmp
push
dec
sub
mov
cmp
or
push
mov
mov
or
ss
fidivr
enter
sbb
pop
ffree
cld
and
mov
sbb
jecxz
xor
dec
cmp
loopne
inc
repz
mov
scas
ja
in
inc
inc
xchg
mov
push
gs
rcr
mov
xor
adc
dec
jle
adc
sbb
clc
jne
pop
int3
pop
aaa
xchg
mov
stos
retf
mov
movs
jmp
repz
mov
pop
sti
jb
in
out
push
pop
jg
lods
jl
push
dec
fucomi
xchg
push
mov
pop
gs
stos
xchg
cmp
push
nop
fimul
inc
outs
xchg
mov
xor
pop
inc
push
ja
mov
cmps
adc
jne
fistp
jp
ss
jmp
add
mov
jns
test
inc
dec
out
(bad)
sbb
jmp
xor
mov
push
(bad)
out
sahf
out
mov
add
cmps
inc
cld
stc
mov
adc
icebp
cmp
fs
sub
adc
mov
and
adc
dec
xchg
xlat
mov
jecxz
nop
mov
push
mov
ja
push
cmp
aas
inc
mov
inc
jecxz
sbb
xchg
or
inc
sub
add
jge
jmp
sub
mov
push
test
mov
and
retf
vpaddq
(bad)
hlt
cmp
dec
gs
ds
(bad)
adc
mov
retf
popf
adc
ret
and
shl
sub
cmps
sbb
cs
inc
adc
into
je
push
fsub
sub
push
jno
cdq
outs
fcom
jmp
loope
test
xlat
pop
or
sahf
or
retf
push
mov
fs
pop
or
jbe
jle
xchg
test
xor
lods
cmp
std
cld
jns
jmp
aas
stos
mov
cli
arpl
leave
mov
movs
push
xor
mov
inc
in
sub
push
push
cwde
int
rcr
movs
jge
repnz
push
div
cmp
pushf
out
mov
pop
sbb
cmp
sar
adc
add
mov
into
fimul
es
fcmovnb
gs
xchg
dec
loope
inc
xchg
jmp
cmp
xlat
xchg
sahf
mov
pop
cs
mov
xchg
inc
jnp
aad
adc
add
jge
movs
das
mov
cmp
enter
repz
xchg
cmps
mov
sbb
pop
cmps
xor
push
stos
and
retf
repnz
fs
inc
lds
sub
ins
int
inc
sahf
mov
pop
dec
cmp
hlt
jle
(bad)
enter
gs
(bad)
test
xor
rcr
add
jge
jmp
jb
inc
(bad)
push
pop
push
in
scas
push
outs
or
scas
sahf
gs
iret
movs
popf
movs
scas
cmp
pusha
cli
in
pop
shl
xchg
add
mov
dec
stos
xor
push
jmp
push
dec
inc
mov
loopne
clc
popf
jge
aaa
test
pop
or
sbb
lds
add
jecxz
mov
mov
jl
rcl
sub
fwait
adc
sbb
loopne
enter
ret
sbb
fsub
arpl
ins
sbb
push
push
mov
aas
cmp
and
or
popf
popf
pop
addr16
jmp
sub
cmc
inc
das
aad
ja
mov
cwde
push
aad
sub
inc
je
lods
add
imul
(bad)
xlat
call
mov
js
jno
jl
and
cmps
nop
and
test
out
adc
pop
xchg
test
cwde
pop
leave
sub
add
dec
cli
pop
dec
jne
xor
pop
jbe
jp
ja
pop
xor
sbb
adc
cwde
outs
or
call
mov
js
stos
das
mov
int
cmps
cmp
cli
xor
out
jl
mov
ja
sub
or
xchg
mov
mov
outs
sub
dec
popa
mov
xchg
mov
jb
jnp
mov
je
lock
imul
and
sub
and
push
mov
xchg
fdivr
dec
pop
push
cmp
pop
in
mov
xchg
sbb
adc
jecxz
addr16
sbb
aaa
jmp
add
int3
inc
ins
jo
icebp
pop
lods
in
popa
fsub
jmp
js
(bad)
push
push
sub
pop
sbb
mul
sbb
call
xlat
pop
sahf
shl
jmp
dec
dec
lea
enter
push
in
cdq
dec
inc
jne
jno
mov
ins
jmp
xchg
retf
cmp
mov
js
cmps
adc
fisubr
out
ins
daa
or
cmp
div
adc
adc
into
sbb
ret
in
sub
xchg
ins
int
lods
xor
(bad)
cmp
xchg
sbb
jp
repz
xchg
xchg
push
xchg
mov
gs
repnz
sbb
add
mov
cmp
fcomi
cmp
inc
out
inc
stc
push
scas
mov
sti
retf
hlt
out
push
call
shr
cld
or
iret
not
clc
mov
fist
cmp
sub
nop
inc
call
dec
outs
adc
retf
xchg
pop
mov
loope
mov
shr
jbe
xchg
add
es
sbb
(bad)
adc
dec
mov
add
dec
pop
frstor
sub
mov
test
and
push
sub
dec
outs
adc
fstp
fadd
push
jge
inc
mov
xchg
sahf
fstp
pushaw
ss
sbb
inc
adc
cmp
mov
cmp
enter
outs
push
push
ins
pop
push
xor
mov
cmp
or
mov
inc
sub
out
int3
and
fsub
fisub
outs
scas
xor
or
loopne
mov
shl
outs
lea
add
sbb
ds
int3
jmp
add
mov
jmp
in
pop
or
dec
add
out
dec
loop
or
add
push
stos
loop
add
(bad)
movs
cmp
pop
adc
mov
retf
inc
aad
(bad)
fldln2
mov
xor
das
pop
in
ror
jns
retf
dec
dec
mov
loopne
ret
mov
loope
test
addr16
push
cwde
fnstcw
xchg
lock
sub
popa
sbb
xor
xor
pop
and
push
std
inc
fimul
jbe
pop
or
imul
jp
stos
lds
add
sub
xchg
int
mov
(bad)
jnp
push
imul
not
xchg
adc
pop
test
test
xchg
repnz
cmp
push
push
in
imul
lahf
cmp
jb
lds
cmps
xchg
jo
outs
jp
les
add
movs
lods
sti
fcom
jb
dec
test
push
scas
push
cmp
jmp
hlt
cwde
test
xor
(bad)
popa
push
cmp
in
retf
repz
(bad)
(bad)
push
lock
fidivr
outs
or
popa
div
xor
xchg
inc
cmc
leave
ins
mov
hlt
ja
xchg
repz
or
dec
jae
inc
mov
xchg
sbb
lahf
push
(bad)
mov
sbb
out
nop
push
les
pop
mov
cld
dec
mov
movs
add
cmps
aam
loop
sub
cmp
retf
cmps
loop
mov
mov
in
in
fst
scas
or
call
data16
xor
(bad)
and
jbe
push
sbb
jle
push
jecxz
dec
xchg
repnz
fwait
movs
jo
xor
jl
add
jbe
jl
enter
ins
xor
ins
in
(bad)
(bad)
les
adc
mov
fwait
inc
les
in
jmp
fs
addr16
sbb
and
or
adc
fsubr
les
call
imul
es
out
mov
inc
shl
fxam
test
and
cmp
sahf
cwde
dec
outs
nop
and
daa
test
xor
cmp
test
mov
es
push
sbb
mov
mov
jmp
xlat
sub
fdivr
shr
shl
xor
sbb
iret
outs
inc
ins
inc
fsubr
dec
add
jle
inc
fst
cmp
push
aam
pop
pushf
cmps
pop
sahf
std
inc
fsubp
test
fdivr
scas
loopne
cmp
mov
ret
mov
test
pop
iret
jp
outs
sti
mov
into
inc
mov
xchg
push
aad
mov
ins
or
mov
lahf
into
mov
cwde
sbb
inc
push
cmc
mov
jb
mov
add
outs
xor
stos
in
mov
jp
jo
sbb
sbb
add
push
dec
inc
adc
or
push
jo
dec
sbb
and
mov
nop
inc
mov
add
mov
xlat
mov
call
xchg
cmp
cmp
shr
jne
xor
in
sbb
retf
mov
xchg
pushf
mov
lock
repz
(bad)
pushf
das
mov
pop
jo
jns
lds
cwde
shl
mov
(bad)
sbb
push
inc
mov
retf
push
pop
pushf
ins
iret
mov
pop
or
sub
add
outs
xchg
cmp
jle
int3
lds
push
sbb
mov
dec
lahf
in
mov
aad
and
xchg
inc
mov
test
xchg
add
mov
sub
cmp
pusha
loop
push
retf
sbb
imul
scas
popa
mov
cwde
inc
mov
sub
dec
lea
xchg
add
jecxz
sbb
cmps
inc
or
push
mov
je
fstp
mov
(bad)
cmp
cmps
and
gs
ds
xchg
out
add
int
or
push
mov
leave
adc
addr16
fisttp
movzx
mov
cmp
(bad)
sbb
in
call
jmp
inc
ret
push
add
sbb
cmovae
aam
xor
scas
es
ins
push
mov
into
mov
retf
or
push
push
in
mov
jb
(bad)
mov
xchg
cli
ror
sub
mov
add
mov
(bad)
sbb
xor
sub
cmp
(bad)
arpl
fcomip
cmp
mov
xor
test
cmc
dec
xchg
sbb
xor
in
enter
pusha
mov
fist
(bad)
mov
pop
icebp
xor
mov
mov
lea
aaa
xor
or
pop
mov
inc
scas
xor
dec
xchg
aas
and
mov
pop
retf
ins
mov
jmp
test
cmp
pop
inc
mov
sub
or
shl
ss
pop
lfs
data16
and
call
mov
enter
jmp
fwait
jecxz
push
cmp
xor
xchg
fcmovb
pusha
call
sub
fstp
fwait
mov
sbb
dec
inc
shl
std
aas
mov
jmp
shl
outs
arpl
ja
ret
loop
sub
push
jbe
shl
loopne
shl
retf
push
shr
nop
sahf
pop
std
in
dec
xchg
mov
and
stc
sub
inc
jnp
mov
das
push
mov
(bad)
and
clc
int3
pop
dec
xchg
dec
arpl
jp
mov
je
sbb
repz
stos
div
test
xchg
add
test
mov
std
mov
ja
shr
cmps
out
mov
out
gs
rcl
push
sub
lock
clc
(bad)
leave
sbb
add
iret
dec
repnz
jb
push
add
jno
(bad)
xor
push
outs
mov
popf
sbb
ins
pop
jo
movs
and
push
sbb
sahf
std
in
sub
push
jl
mov
push
pop
inc
icebp
leave
xchg
imul
je
dec
mov
xchg
push
push
add
je
mov
mov
cmp
(bad)
jecxz
arpl
nop
mov
sbb
int
fiadd
and
xor
rol
xor
adc
addr16
fistp
xor
in
dec
in
dec
cli
and
data16
xchg
mov
int
sar
pusha
scas
sbb
leave
addr16
mov
cmps
mov
pop
inc
add
aam
adc
or
(bad)
jecxz
sbb
test
adc
add
jmp
(bad)
lock
std
sahf
mov
fcmovb
lahf
movs
mov
adc
sbb
ret
cmp
ds
adc
ficomp
and
into
mov
rcl
cli
(bad)
or
push
sbb
pop
xor
add
lods
lods
out
cmp
inc
addr16
and
or
jmp
xor
pop
push
aaa
daa
jp
mov
mov
xchg
xor
sub
jns
mul
test
cmps
xchg
xchg
mov
push
pop
and
nop
iret
and
fnsave
out
repz
hlt
test
pusha
test
std
dec
js
loope
scas
fwait
lock
iret
jno
and
int3
pop
xchg
cli
lea
add
inc
aas
sbb
and
retf
dec
imul
and
sti
test
sub
xchg
push
add
mov
push
repnz
ror
xor
movs
add
or
(bad)
(bad)
pusha
in
sub
into
fcomp
fdiv
dec
jl
inc
clc
add
ret
pop
xor
jne
arpl
(bad)
dec
mov
push
push
or
mov
cmps
cmp
xor
sti
mov
add
rcr
mov
outs
jb
cmps
and
mov
or
rol
jge
adc
loop
jle
sub
in
loop
pop
pop
pop
sub
jmp
imul
(bad)
bound
sahf
mov
lods
fwait
stc
mov
shr
dec
out
outs
xchg
mov
dec
xchg
ss
pop
ds
sub
fstp
lahf
and
add
std
in
aas
mov
inc
jne
outs
inc
lock
rcr
pop
mov
sbb
cmp
sbb
jmp
inc
ja
sbb
shr
adc
out
test
aad
scas
sar
(bad)
cdq
dec
jl
clc
(bad)
xchg
sbb
mov
fadd
mov
lods
sub
or
in
cwde
repz
retf
aaa
mov
mov
fiadd
es
adc
idiv
stos
cmc
add
add
cmps
aad
cs
scas
sahf
js
fst
movs
adc
movs
inc
loope
cmp
mov
ret
mov
mov
mov
xor
pop
shr
or
fdivr
jnp
ret
enter
loopne
jmp
mov
adc
cmps
test
push
rol
int
std
jge
(bad)
mov
inc
(bad)
rol
loopne
inc
xlat
cdq
mov
push
or
xchg
dec
mov
aas
inc
in
mov
inc
shl
add
mov
data16
retf
push
mov
jb
push
mov
mov
cdq
fisubr
mov
(bad)
xchg
lods
sbb
xor
fild
fistp
jb
(bad)
cld
xchg
sbb
xlat
dec
stc
push
lods
clc
xchg
shl
xchg
and
shr
repnz
leave
aaa
push
push
or
cld
xchg
pop
jno
fwait
pop
std
mov
add
mov
push
sti
sub
mov
jns
mov
mov
adc
or
(bad)
pop
fisub
popa
or
mov
lds
(bad)
sub
and
inc
push
push
or
push
add
and
mov
and
pop
mov
mov
sbb
inc
cmp
cmp
sti
sbb
and
popa
imul
dec
fmul
xor
popa
mov
mov
pusha
jmp
cmp
into
cmps
and
retf
and
mov
jae
xor
xor
push
xchg
xchg
mov
loopne
inc
mov
jecxz
cwde
scas
xlat
retf
lods
push
mov
sbb
sub
rcl
dec
mov
scas
dec
cmp
xor
lea
shl
pop
inc
scas
push
mov
(bad)
stos
outs
xor
dec
xor
dec
sub
mov
push
push
cmp
jge
ins
js
enter
cmps
inc
loope
pop
cmc
(bad)
shr
loop
push
mov
repz
dec
xchg
xchg
sti
iret
add
je
xchg
aam
(bad)
out
cs
(bad)
repnz
inc
in
mov
mov
jmp
imul
iret
outs
(bad)
cli
xchg
mov
cmp
sub
jle
pop
in
and
jmp
mov
js
inc
mov
nop
gs
jp
fdivr
popa
xchg
mov
mov
mov
test
loope
push
retf
inc
pop
ror
pop
out
hlt
mov
push
mov
or
fisub
fcmovnb
push
sub
out
adc
psubusb
nop
or
lahf
sub
cmp
icebp
inc
pop
pop
stos
mov
retf
scas
xchg
sub
int3
lods
pop
jnp
std
xchg
push
inc
movs
push
into
test
mov
test
lock
test
iret
int3
mov
jg
and
xor
xchg
ret
sbb
sub
cmps
gs
ja
loop
(bad)
jmp
xchg
pop
push
adc
cmp
aas
mov
pop
sub
shr
loope
shl
sbb
cmps
paddw
dec
mov
rol
mov
mov
pop
sub
movs
movs
pop
mov
ins
fist
mov
dec
sub
mov
test
outs
push
add
test
out
rcl
xchg
mov
or
push
fwait
pop
icebp
movs
mov
neg
xor
jo
(bad)
mov
sub
mov
test
adc
shl
mov
sahf
rcr
daa
lds
movs
stc
dec
adc
push
cdq
push
mov
push
mov
daa
lods
pop
mov
scas
cs
pop
call
dec
aad
cmps
mov
mov
jne
and
adc
jecxz
mov
sub
push
mov
in
aam
cmp
inc
pushf
push
leave
outs
in
(bad)
mov
or
sub
mov
pop
mov
aaa
adc
adc
ret
or
pop
loopne
jmp
xchg
pop
mov
mov
cmp
jb
xor
(bad)
dec
pop
or
scas
pop
outs
pop
inc
lods
popa
adc
xchg
fnclex
or
(bad)
loop
mov
lahf
pop
sbb
sahf
es
ror
bound
(bad)
push
and
xchg
xchg
dec
ins
movs
es
cmp
stos
clc
stos
mov
std
jno
mov
retf
retf
pop
sbb
into
jb
mov
xchg
jle
or
fcomp
hlt
mov
or
push
jo
xchg
fwait
aad
pop
es
(bad)
or
hlt
(bad)
ins
fst
dec
jnp
sub
enter
pusha
mov
xor
rcr
mov
jne
popf
xchg
sar
add
shl
xchg
popf
inc
lahf
push
movs
popf
and
in
(bad)
lock
stos
jmp
aas
and
sahf
pop
inc
fdiv
sbb
data16
cmp
stos
(bad)
pop
push
popf
mov
push
inc
dec
or
or
push
push
dec
in
xor
aad
jae
adc
xchg
push
pop
fisttp
pop
aam
movs
and
pop
cmps
xchg
sub
iret
retf
repz
jmp
pop
push
test
cmp
aaa
ins
iret
cld
adc
mov
loopne
jmp
dec
in
pushf
pop
dec
movs
into
pop
add
cwde
add
inc
test
jne
xchg
(bad)
jge
cld
inc
shl
fwait
retf
pop
in
adc
cs
pop
mov
sbb
pop
ja
dec
sbb
iret
(bad)
fiadd
retf
jg
inc
xor
aam
fldenv
mov
mov
bound
(bad)
pop
dec
xchg
lods
jo
mov
cmp
sub
loop
es
fsubr
in
enter
cmps
sub
hlt
imul
cmp
in
or
mov
add
(bad)
(bad)
ja
xchg
xchg
imul
jne
mov
retf
jle
shl
call
lahf
dec
pushf
rcl
xchg
jae
ror
rcl
or
inc
nop
jle
pusha
and
pop
les
push
sbb
int
rcl
and
out
pop
sub
cs
scas
arpl
pusha
push
sub
stos
(bad)
mov
outs
aam
jl
adc
or
adc
mov
push
xchg
mov
in
xor
adc
leave
pop
arpl
xchg
jmp
mov
in
cs
xchg
(bad)
scas
adc
call
hlt
mov
test
push
push
push
lods
mov
xor
adc
ds
clc
mov
sbb
jmp
out
inc
cld
fild
fiadd
mov
xchg
jp
nop
lods
xchg
test
sub
jbe
cmc
pop
cmps
sub
pop
psubb
loope
adc
mov
mov
pushf
adc
popa
mov
jge
icebp
pop
cli
out
jecxz
test
cmps
pop
pop
dec
enter
and
pop
add
xchg
pop
and
fs
dec
fadd
sbb
ror
xchg
sbb
fisttp
test
pop
jmp
and
jg
inc
das
push
dec
out
bound
dec
xor
mov
cmp
popf
sahf
sahf
mov
mov
pop
dec
sbb
popf
cmp
cmps
retf
xchg
out
and
jl
jmp
pusha
addr16
pop
pop
iret
loopne
jb
add
and
aas
mov
and
adc
sub
mov
pop
rol
div
adc
mov
jp
loopne
dec
or
xchg
sbb
mov
pop
aam
sbb
xchg
lahf
push
cld
mov
mov
mov
loopne
les
fsubr
dec
in
and
sub
xchg
pop
ret
lods
dec
neg
aas
jmp
mov
push
sub
imul
mov
adc
mov
not
dec
call
jp
pop
xchg
and
mov
in
addr16
xchg
in
(bad)
adc
cmp
jmp
sbb
cmps
xchg
jo
neg
pop
movs
data16
ds
jne
movs
enter
jno
inc
add
jge
mov
cmp
cmp
xadd
cmp
mov
add
cmp
inc
push
adc
mov
or
imul
jg
or
sub
inc
add
mov
jne
les
mov
jmp
fild
js
pop
aad
push
pop
ins
mov
push
sahf
sbb
idiv
test
into
mov
mov
pop
add
loopne
xchg
das
jle
mov
jns
mov
jno
push
add
or
push
jno
inc
sub
dec
inc
sbb
out
mov
cmps
push
xchg
scas
test
cwde
add
jbe
ficomp
das
xor
pusha
or
pop
xchg
jmp
in
mov
pop
cs
and
or
fcomip
sub
push
daa
icebp
dec
pop
mov
jae
enter
xor
popf
js
outs
(bad)
adc
cli
sub
mov
mov
movs
retf
retf
lock
ins
loope
in
fiadd
cmp
push
and
sar
into
mov
mov
pavgb
cs
mov
jae
push
shl
pop
popa
lock
outs
dec
mov
jp
popa
mov
mov
jno
fyl2xp1
das
dec
push
(bad)
cmp
mov
sti
pop
fwait
mov
push
push
aad
mov
mov
push
push
add
inc
loope
pop
xchg
fiadd
push
add
inc
sub
jns
xchg
mov
into
(bad)
in
cs
and
movs
add
mov
test
pop
and
jb
pop
push
sahf
dec
inc
stc
pop
call
jecxz
pop
sub
mov
dec
stc
cld
and
gs
call
sbb
mov
adc
dec
jecxz
inc
in
push
aam
es
out
movs
out
xchg
fimul
arpl
add
test
pusha
xchg
pop
pop
(bad)
into
xor
movzx
ss
fs
sbb
jo
mov
jo
add
daa
push
xor
push
fnstcw
lds
arpl
sti
(bad)
test
and
mov
xor
neg
push
mov
xchg
adc
int
aaa
(bad)
rol
xchg
pop
mov
adc
mov
test
cmp
movs
pop
test
aad
adc
scas
mov
sub
xchg
sbb
pop
dec
xchg
stos
cwde
pushf
loop
ja
xor
push
movs
push
cmp
cli
sbb
std
nop
push
test
inc
int
sbb
mov
push
call
or
(bad)
xor
or
sub
cmp
ins
mov
ds
xchg
mov
pop
mov
mov
and
mov
add
arpl
test
push
lods
fistp
push
(bad)
xor
push
daa
xchg
push
ja
pop
mov
cwde
and
sub
jae
cmp
push
lahf
retf
jle
mov
mov
add
jmp
scas
and
nop
push
imul
fucom
fild
nop
(bad)
in
push
adc
fld
sbb
pop
xor
int3
or
sbb
inc
xchg
add
stc
pop
xlat
faddp
fsub
je
inc
jo
cmp
mov
in
dec
std
xchg
mov
or
jmp
mov
xchg
stos
shl
dec
pop
stos
pop
ror
sbb
lahf
or
mov
sub
test
dec
test
(bad)
test
jns
mov
fsubrp
xchg
call
push
sub
int
bound
pop
and
rcr
adc
movs
xor
push
jo
ins
imul
xchg
adc
mov
pop
inc
test
ja
neg
test
jne
xor
xchg
jg
dec
jmp
push
repnz
dec
sub
call
(bad)
ficomp
pop
pop
or
add
xchg
stos
lods
mov
xor
mov
push
push
stos
jp
dec
movs
push
les
lock
jnp
rol
xor
mov
out
leave
pop
mov
jg
fnstsw
mov
ins
loopne
dec
ins
sbb
jle
lods
push
loop
pop
dec
inc
mov
stos
shl
cmp
daa
add
fstp
add
sub
sahf
je
(bad)
call
shl
clc
in
sar
xchg
and
adc
jo
fs
mov
push
sub
fidivr
mov
jb
fmul
fldlg2
ja
or
xlat
repnz
fld
mov
mov
mov
outs
mov
outs
nop
mov
jbe
stc
fimul
adc
pushf
mov
sbb
(bad)
mov
push
mov
and
stos
int3
pop
je
mov
imul
jmp
rol
sbb
daa
push
lock
pop
cmp
dec
rcr
jp
cs
nop
jbe
pop
(bad)
fist
movs
repz
jg
jge
dec
adc
imul
mov
test
xor
es
test
loope
jno
fnstsw
add
sbb
dec
jmp
clc
mov
xchg
das
in
in
and
jge
jnp
sub
bound
and
nop
mov
cs
inc
push
and
sub
push
shr
add
jp
sbb
inc
xor
fbld
fisubr
test
jp
mov
dec
add
dec
mov
mov
out
mov
or
(bad)
rcl
ds
shl
jmp
in
push
and
xchg
fwait
push
ret
xor
call
adc
call
mov
sub
cmp
sti
test
loop
jns
(bad)
fist
pop
add
iret
and
mov
push
mov
repz
out
xor
mov
mov
add
ds
inc
dec
stos
loop
rcr
(bad)
data16
lahf
push
cwde
out
inc
sub
das
and
and
mov
scas
xchg
pop
inc
outs
adc
mov
xchg
in
repz
popa
jecxz
bound
fisttp
sub
mov
xlat
cmp
inc
add
ret
or
jmp
pop
rcr
les
imul
shl
jne
out
and
ins
int
inc
into
mov
mov
push
outs
push
dec
push
push
jp
push
stos
popf
ret
fisttp
pop
es
pop
mov
mov
cmp
(bad)
dec
outs
jp
(bad)
pop
neg
call
ret
mov
jge
sbb
aad
retf
fdivr
ret
dec
scas
jmp
xchg
stc
mov
mov
mov
out
jecxz
pop
fdiv
data16
stc
in
nop
gs
xchg
neg
dec
aaa
cmc
in
and
cmps
cli
outs
pshufw
mov
push
mov
push
test
cmp
enter
xor
cmp
lods
inc
into
cmp
outs
mov
pusha
icebp
fst
aaa
mov
and
repz
sbb
setbe
out
pop
test
bnd
scas
(bad)
xchg
jno
inc
cwde
pop
arpl
cmp
mov
fsub
mov
push
xchg
push
loopne
jl
and
adc
lea
mov
mov
mov
into
inc
fld
retf
or
xchg
mov
lds
push
sub
aaa
xchg
adc
shr
pop
sbb
icebp
cwde
jmp
mov
mov
in
mov
in
push
cdq
(bad)
retf
les
jl
cdq
dec
fwait
js
pushf
(bad)
mov
pop
(bad)
fist
test
mov
sar
mov
call
adc
or
imul
loope
push
mov
push
and
push
cmp
ja
and
hlt
or
mov
push
aaa
xor
sbb
mov
dec
in
and
pop
push
js
xchg
arpl
cmp
sbb
mov
shl
pop
out
fwait
sub
xor
ror
or
cmp
mov
in
mov
retf
dec
xchg
ror
cld
push
cld
push
push
addr16
or
repz
mov
data16
loope
sbb
mov
pop
or
mov
neg
mov
imul
pop
aam
push
mov
adc
pop
ja
inc
dec
int
cmc
setl
loopne
add
popf
push
imul
out
lahf
jns
scas
je
inc
aaa
movs
mov
sub
sbb
cld
std
or
test
mov
cmps
stos
and
pop
jecxz
cmps
sub
mov
mov
xchg
mov
(bad)
ror
ret
clc
pop
sub
arpl
inc
scas
mov
call
push
or
loopne
xchg
push
cmp
xchg
das
repz
adc
jecxz
test
sub
sbb
scas
clc
mov
es
std
mov
in
popf
mov
ror
dec
outs
test
push
sbb
or
test
jmp
std
sub
xchg
and
repnz
inc
daa
mov
cmp
movs
in
in
fnsave
push
adc
jno
mov
mov
jl
sbb
push
call
idiv
fsub
arpl
xchg
sbb
xchg
outs
pushf
mov
inc
cmp
add
out
pop
add
dec
jo
and
cmps
pop
aam
push
repz
es
jmp
add
add
aad
mov
out
mov
fbld
pop
xchg
xchg
test
repz
mov
mov
sub
push
jno
hlt
jmp
xchg
sub
dec
mov
jecxz
sahf
mov
mov
xor
stos
cs
lahf
mov
dec
cmp
stos
fdivr
mov
add
xchg
test
in
cmp
add
rcr
mov
add
pop
and
daa
push
ds
fwait
jns
(bad)
fisttp
sbb
mov
faddp
pop
xchg
jae
js
ret
fnsave
(bad)
jp
push
dec
iret
sbb
hlt
ds
push
add
stos
add
pop
and
or
arpl
fistp
ror
sub
pop
pop
mov
pop
xchg
das
jmp
scas
inc
clc
iret
xor
(bad)
jg
mov
lods
ds
arpl
test
stos
xchg
push
outs
fcomi
and
cdq
mov
xchg
or
(bad)
out
stos
push
dec
(bad)
push
or
or
dec
ret
leave
cli
js
in
jnp
add
push
cmc
mov
repnz
imul
int
mov
out
cli
icebp
into
bound
pop
inc
ds
ss
pop
jb
add
jbe
cld
fisttp
inc
outs
aam
cmp
test
test
clc
sub
je
out
mov
int3
movs
test
out
or
loope
mov
mov
pop
adc
cmp
sbb
stos
add
add
add
xor
or
es
dec
retf
mov
aam
dec
and
pop
and
cmp
fstp
xor
lea
call
int3
in
imul
in
hlt
or
add
fmul
add
cmp
arpl
mov
nop
lock
xchg
mov
fstp
(bad)
call
dec
(bad)
pop
sub
in
mov
jmp
(bad)
xchg
inc
loope
adc
sbb
mov
enter
sub
stos
js
push
fwait
pop
or
aam
mov
test
fistp
jo
xor
adc
pop
sbb
pushf
xor
jge
lahf
scas
mov
mov
or
or
(bad)
repz
cmp
mov
cli
mov
dec
idiv
sbb
mov
ss
mov
mov
inc
add
mov
xor
xchg
in
imul
ror
cmp
xor
aad
cli
adc
mov
pop
and
xor
in
ins
lahf
xchg
and
pop
ds
arpl
ret
jne
mov
or
sub
mov
(bad)
pop
scas
and
daa
xor
je
sbb
imul
fisttp
in
jnp
jmp
shl
or
xchg
test
adc
adc
div
add
dec
inc
xchg
inc
jb
test
mov
pusha
fs
arpl
jne
add
inc
jmp
pop
psubsw
fs
or
cmp
cmp
dec
or
or
sahf
rcl
mov
push
dec
add
iret
cmp
lods
pop
sub
test
int
fwait
push
lea
xchg
ret
stc
jae
test
dec
mov
push
xor
dec
out
xchg
xor
or
cld
fs
faddp
or
lock
mov
jmp
pop
adc
sbb
je
mov
pusha
cld
fld
cmps
and
cld
pushf
stc
dec
push
xor
aam
aas
push
adc
sbb
xchg
xchg
test
pop
or
sub
imul
imul
mov
fld
ds
adc
dec
aad
out
pop
call
inc
sbb
dec
ins
scas
or
je
pop
ja
and
cld
popa
dec
xchg
push
shl
pop
jle
add
cs
pop
out
push
rcl
jns
aad
cmp
dec
cmp
shr
inc
push
xchg
sahf
call
adc
dec
jg
out
imul
sbb
adc
mov
cwde
inc
dec
push
sbb
ins
in
in
daa
push
(bad)
retf
inc
ret
xlat
dec
sbb
mov
mov
mov
test
adc
clc
adc
rcr
adc
fs
retf
shl
aaa
bound
iret
enter
addr16
or
in
mov
mov
mov
(bad)
mov
sar
inc
lahf
fbstp
mov
imul
mov
pop
call
pop
lods
loop
xlat
or
or
test
lods
adc
dec
ds
inc
adc
imul
lods
xchg
jg
repz
shl
es
mov
add
mov
ficom
pop
stos
xor
sbb
call
fucomip
inc
mov
xchg
mov
in
daa
cmp
xchg
lods
and
jle
xchg
xor
cs
jae
pop
sub
adc
jge
lods
jo
sbb
jbe
arpl
sub
pop
sub
pop
push
cs
or
arpl
inc
scas
sub
jnp
cmps
repz
push
xor
push
cdq
call
ins
enter
jl
xchg
add
data16
loop
fadd
fwait
mov
mov
(bad)
fcomp
dec
icebp
ret
sbb
mov
rcr
stc
and
mov
xor
icebp
stos
and
push
mov
fnstcw
ret
pop
and
enter
dec
stc
movs
jns
pop
dec
in
push
inc
packuswb
cli
inc
push
out
dec
aaa
sbb
dec
and
je
jl
test
popa
pop
sub
cld
stos
xor
lock
dec
push
fisttp
repnz
ds
mov
popf
inc
and
pop
mov
call
fwait
jns
push
arpl
dec
test
icebp
mov
in
movs
scas
rol
cmp
in
inc
lock
cmp
inc
mov
push
iret
mov
lock
or
stc
pop
outs
xlat
mov
pop
mov
jae
dec
lea
aaa
ins
cmp
pop
and
loop
popf
ins
cli
loope
add
lds
cwde
sub
dec
mov
leave
xor
and
out
loopne
xchg
call
and
adc
mov
mov
adc
mov
dec
arpl
je
lahf
dec
cdq
adc
fadd
dec
test
aam
nop
scas
shl
retf
xlat
stos
adc
retf
or
mov
sbb
pop
fist
popf
enter
sahf
sub
mov
or
add
mov
mov
adc
js
mov
mov
adc
mov
lock
neg
push
mov
mov
cmp
int
dec
pop
add
bound
inc
es
je
jbe
out
popa
jns
call
movs
je
lock
jno
out
dec
sub
lahf
lds
add
not
push
cmp
fdivrp
cwde
cmp
adc
scas
mov
push
lods
mov
arpl
sub
retf
aas
sti
popf
call
or
jge
outs
(bad)
sahf
adc
aad
jecxz
mov
add
out
inc
(bad)
addr16
aad
sar
xchg
jmp
or
sahf
popf
in
dec
mov
mov
mov
cli
mov
push
test
outs
push
sti
inc
mov
inc
in
(bad)
int
gs
push
jg
xor
stos
and
pop
retf
scas
adc
(bad)
adc
pop
sub
and
(bad)
repz
add
jo
test
ds
imul
dec
pop
jne
in
ins
das
fnstenv
call
fistp
push
jnp
sbb
shr
es
scas
pop
xchg
test
push
and
call
lods
or
add
sar
aaa
mov
fnstcw
sbb
push
push
movs
inc
ficomp
mov
xor
cmp
loopne
inc
cli
fbld
jmp
dec
and
jp
push
xor
pop
sub
leave
or
test
cmp
repnz
js
arpl
clc
xor
lea
dec
out
leave
outs
add
jmp
mov
xor
and
push
rol
int3
pushf
cmc
cmp
daa
pop
jmp
mov
imul
jns
push
pushf
stos
out
mov
rcr
sbb
sub
adc
adc
ror
ins
ins
adc
mov
repnz
repz
or
mov
xor
fs
jne
sahf
scas
jns
adc
mov
jo
and
cld
pop
cmp
mov
dec
sub
std
sbb
pop
outs
jo
push
mov
jle
fdivr
lods
push
pop
push
sub
xlat
cmp
arpl
mov
or
mov
ret
popa
das
pusha
push
mov
div
icebp
xchg
lds
mov
mov
ins
xchg
bound
cmp
nop
xchg
pop
(bad)
jns
xor
in
pop
xchg
xor
scas
mov
imul
inc
and
dec
push
xchg
sub
pop
ins
ret
fs
or
div
dec
sub
test
out
je
jns
sub
test
fdiv
mov
mov
imul
mov
and
imul
iret
inc
mov
mov
test
loope
push
jns
push
es
cwde
loop
fs
adc
aaa
dec
mov
(bad)
repnz
push
into
outs
daa
pop
and
outs
xor
retw
and
mov
jmp
fisttp
lea
shr
xchg
add
mov
and
add
stos
dec
icebp
shr
fisubr
push
outs
rcr
and
mov
add
cmp
das
outs
aaa
rol
sbb
hlt
sbb
jle
and
fcomp
dec
fnsave
or
cdq
js
sub
push
mov
jmp
std
push
inc
xchg
mov
call
aaa
add
data16
enter
dec
mov
cli
dec
dec
pop
arpl
cli
cmp
or
outs
or
in
mov
test
mov
and
inc
mov
repnz
cmps
adc
pop
jl
hlt
mov
or
out
jecxz
sahf
jecxz
leave
xchg
adc
or
inc
push
stc
inc
int3
aaa
mov
fsub
adc
inc
xlat
ins
lods
movs
push
sub
cs
gs
iret
shl
ror
add
js
cdq
cmps
push
outs
mov
iret
rcr
or
dec
mov
fisttp
lock
xor
je
mov
mov
mov
dec
mov
out
push
add
pushf
(bad)
iret
xchg
mov
mov
scas
(bad)
fsubr
mov
les
fwait
sub
movhps
movs
pop
nop
pusha
(bad)
(bad)
push
ja
fisttp
xor
dec
push
sahf
push
adc
ds
sbb
out
sub
fld
mov
mov
xor
adc
cmp
int3
hlt
outs
add
aad
xchg
pop
sbb
lds
popa
cmp
loope
xchg
scas
call
ret
(bad)
(bad)
mov
mov
jmp
aaa
je
lock
add
or
mov
jmp
inc
sar
sbb
pop
xchg
xchg
jmp
js
mov
repz
sub
std
jecxz
push
mov
push
mov
fwait
and
jnp
xor
push
add
adc
sbb
mov
mov
adc
mov
adc
jmp
test
cdq
daa
dec
xchg
mov
push
or
dec
sub
ror
ficom
cmp
cmp
ja
popa
mov
jnp
out
ins
clc
inc
sub
sbb
mov
sbb
pop
cwde
mov
(bad)
in
mov
arpl
in
mov
cmp
fisttp
cmp
sub
lea
lods
pop
into
lods
hlt
int
leave
jnp
pop
jp
cmp
add
(bad)
and
in
in
ins
jl
cmp
jb
int
xchg
mov
ja
test
mov
jbe
in
cmp
inc
add
mov
and
ficomp
fcmove
ja
mov
popf
push
repz
add
or
shr
out
dec
fidivr
mov
imul
scas
out
pop
daa
dec
fisttp
fimul
out
add
push
ret
xchg
test
sbb
mov
mov
push
ins
popa
push
aas
mov
sbb
addr16
fs
(bad)
jmp
(bad)
push
mov
aad
sub
ret
push
push
add
or
xor
and
sbb
cmp
sub
loop
mul
adc
add
xor
and
cmps
les
push
(bad)
push
sbb
leave
add
ins
addr16
rcl
dec
xchg
es
xchg
add
mov
(bad)
sbb
jle
xchg
ret
ins
lock
loopne
popa
cld
dec
js
(bad)
jo
pop
loopne
sbb
cli
xchg
pop
bound
dec
jle
call
cmp
aas
inc
or
sar
ss
test
ret
pushf
mov
outs
dec
leave
cmp
xor
or
cmp
adc
nop
xor
push
int
and
sti
rol
es
jge
cmp
fisttp
dec
aaa
fst
hlt
std
pusha
mov
jne
fld
dec
aad
sub
scas
jle
push
adc
repz
pop
in
mov
or
mov
add
jge
cld
push
xchg
mov
hlt
ins
(bad)
xor
jg
addr16
(bad)
cs
sub
cli
imul
dec
stos
dec
push
fst
jo
push
aam
xor
add
(bad)
push
aaa
hlt
jmp
cmp
or
sub
jle
call
dec
xchg
out
lea
and
js
cmc
dec
bound
mov
add
jne
enter
scas
imul
or
rcl
test
lds
push
adc
pop
mov
outs
lods
call
dec
test
ret
ss
or
scas
iret
loop
loopne
inc
jge
cmp
fnsave
repnz
(bad)
mov
mov
sbb
jmp
mov
call
cmc
dec
xorps
movs
inc
xor
dec
jns
pop
mov
and
mov
jo
jae
and
int
call
mov
inc
aad
aaa
pop
or
or
in
sar
jae
or
xor
retf
mov
movs
xor
or
push
or
pop
ror
jae
pop
cmp
mov
aaa
and
data16
mov
fistp
fsub
shr
mov
mov
fcom
repnz
and
ins
xchg
push
add
dec
les
push
or
loop
aad
xor
jae
push
mov
and
xchg
ret
imul
fcom
call
mov
das
test
add
add
mov
(bad)
out
sbb
fxch
inc
sti
fs
inc
sub
fwait
cmp
das
dec
jecxz
pop
sub
mov
sub
add
std
aas
adc
add
data16
retf
mov
clc
cmc
jmp
mov
adc
loopne
xchg
mov
aaa
aam
fldcw
push
(bad)
arpl
cmp
data16
xchg
sbb
xchg
jmp
aam
inc
das
mov
jl
arpl
jmp
movs
ror
sahf
inc
and
add
xchg
xchg
sbb
mov
lds
adc
xor
test
cs
lods
fld
jge
test
pushf
xchg
jle
jb
cli
xchg
popa
and
enter
push
(bad)
leave
gs
add
scas
pop
lahf
repnz
cmc
dec
sbb
jg
ss
jmp
fmul
inc
sbb
retf
aam
hlt
pop
jnp
or
mov
add
aad
jo
adc
lahf
mov
sub
mov
(bad)
arpl
outs
jp
mov
pop
mov
sbb
sub
arpl
or
dec
xor
(bad)
fsub
test
xor
or
sbb
lea
adc
inc
jl
out
jns
sbb
and
sub
cmp
fidivr
mov
aas
inc
addr16
sbb
sahf
pop
cmp
data16
dec
outs
inc
ds
(bad)
out
mov
in
jg
shl
mov
adc
retf
jne
pop
rcl
mov
adc
int
repnz
or
adc
xor
ficomp
retf
jl
cmps
aad
adc
imul
iret
push
dec
mov
adc
xchg
movs
inc
out
sbb
mov
cmp
sar
imul
push
lds
sub
scas
mov
inc
jle
cdq
addr16
mov
repnz
xor
mov
test
std
dec
xchg
shl
in
push
xchg
mov
pop
push
pop
xor
inc
adc
sti
cmc
sbb
mov
js
sbb
enter
cwde
rcr
xor
fbstp
shl
lods
sbb
shl
mov
mov
dec
xor
mov
cmp
push
inc
retf
cmps
clc
mov
dec
cld
sbb
sub
fnstenv
and
int3
sbb
push
mov
dec
in
sub
lods
sti
retf
sbb
lods
aam
pop
mov
jb
mov
movs
push
repnz
in
inc
stos
and
imul
cs
dec
cmps
cmc
lods
arpl
lds
cmp
mov
jp
sahf
add
ja
sti
lods
mov
xlat
(bad)
pop
push
push
adc
fstp
sub
outs
repz
jl
mov
dec
je
outs
out
xchg
data16
push
push
retf
push
adc
pop
movs
(bad)
addr16
pop
les
xlat
test
adc
nop
add
retf
retf
jne
mov
adc
push
test
pop
cmp
mov
mov
sub
xor
mov
repz
dec
fwait
pop
scas
sahf
shl
(bad)
retf
lods
push
test
pop
inc
adc
leave
or
sbb
sbb
sub
jbe
cld
adc
xchg
movs
jo
fucomp
mov
sahf
inc
jg
imul
imul
fdiv
bound
scas
dec
sub
std
add
push
dec
jb
es
(bad)
jge
scas
ja
xor
inc
lods
stos
jmp
lds
pop
sbb
popf
push
call
cmp
sub
icebp
repnz
icebp
jbe
fiadd
mov
int
stos
mov
test
pop
sbb
xlat
jo
push
lock
pop
xor
test
add
adc
(bad)
mov
mov
cmp
jnp
movs
shl
(bad)
fst
repnz
pop
jb
ds
lds
or
mov
mov
inc
fs
inc
inc
ins
inc
xchg
sub
mov
pop
mov
ret
out
lahf
jle
and
jb
cwde
dec
jecxz
rol
in
mov
xor
lods
stos
data16
sub
pop
jp
shl
jns
retf
mul
aam
mov
test
pop
dec
shl
lods
sub
inc
repz
add
pop
cmps
xchg
push
pushf
gs
bound
call
sbb
jo
test
and
stos
dec
pop
jl
lods
into
xor
sahf
sbb
shr
mov
jbe
and
cld
pop
xchg
lods
scas
push
push
lods
pop
sub
and
inc
cmp
fcom
cmp
or
dec
data16
mov
fwait
leave
push
and
fcomp
xlat
adc
sub
lock
sub
in
(bad)
aaa
xchg
in
lea
scas
cmc
mov
or
push
mov
adc
movs
pop
mov
push
push
sub
dec
push
retf
call
jmp
lea
test
dec
cli
xor
xchg
adc
or
adc
jl
cmp
lods
ss
push
mov
lods
ss
in
in
ror
mov
ins
ins
jecxz
sbb
mov
cmps
inc
sub
sub
shl
push
into
call
jp
in
(bad)
loope
das
or
and
outs
mov
fnstsw
jecxz
mov
cmc
xchg
fisub
jo
adc
sbb
pop
mov
mov
retf
mov
ret
sub
nop
scas
sbb
(bad)
scas
int
and
inc
jmp
cmp
mov
dec
inc
dec
adc
adc
mov
push
enter
cld
dec
adc
xchg
push
mov
and
in
xchg
mov
xor
cmp
xchg
adc
mov
dec
or
or
pop
js
mov
mov
les
sbb
xchg
adc
adc
cdq
sbb
adc
pop
(bad)
clc
xchg
mov
out
adc
mov
add
shl
inc
sub
jg
mov
jbe
add
mov
sbb
mov
sti
and
pop
dec
dec
aas
stc
mov
sub
mov
cmc
ins
jb
inc
push
push
out
sub
in
into
int3
std
sub
into
cmp
dec
mov
fadd
inc
fmul
in
add
sub
rol
fistp
dec
pop
ja
inc
mov
clc
loop
xchg
sub
gs
rcr
inc
jo
mov
or
or
pop
test
cmps
xlat
jae
xlat
xor
mov
cdq
jns
jl
sub
ffreep
or
repnz
lea
inc
dec
sahf
ins
push
add
jae
mov
mov
cmp
jl
inc
or
dec
jmp
std
mov
pop
mov
outs
popa
cdq
dec
rcl
cmc
(bad)
aas
xchg
cmps
sbb
imul
dec
or
(bad)
mov
lds
xchg
or
aad
iret
push
xchg
jg
iret
in
clc
mov
or
mov
push
mov
ret
movs
push
sbb
bound
fwait
mov
test
aas
clc
cmps
cmp
ja
mov
jmp
lods
mov
pop
push
idiv
lods
fs
xor
push
jecxz
mov
sbb
dec
retf
xchg
sbb
and
pop
aas
call
push
cmp
(bad)
mov
cdq
mul
and
mov
add
adc
mov
test
fisubr
cmc
and
push
mov
pop
(bad)
cmp
in
cmps
call
in
xor
mov
jmp
loopne
pop
fs
dec
aam
xor
pop
sbb
enter
pop
loop
cmp
fild
(bad)
mov
pop
nop
mov
push
jo
shl
lds
nop
inc
mov
test
int3
daa
mov
and
cmc
jne
es
dec
in
xchg
call
adc
push
mov
sahf
jecxz
mov
sbb
xchg
jmp
adc
imul
nop
sub
and
and
push
fnstcw
adc
ss
pop
aaa
mov
out
or
aad
imul
das
xchg
fadd
pop
ror
jae
sbb
pop
sbb
lods
test
adc
fld
es
jo
(bad)
out
shr
and
movs
outs
xchg
idiv
movs
call
sub
mov
ds
fldenv
inc
inc
call
scas
or
jge
ret
dec
xchg
repnz
cld
adc
rcr
ja
dec
dec
mov
mov
push
hlt
rcr
sub
mov
cmp
jmp
sar
lods
jp
(bad)
loopne
cmps
idiv
ds
and
mov
sub
or
out
pop
jne
inc
inc
fs
pushf
xchg
enter
(bad)
cmp
out
pop
imul
frstor
fbstp
movs
fdivr
stos
mov
pop
(bad)
jecxz
xchg
movs
push
movs
call
addr16
test
sub
mov
bound
adc
pop
scas
es
ret
(bad)
out
int3
sub
xchg
popa
mov
sbb
lahf
pop
lods
shr
xchg
mov
ins
dec
not
pop
mov
clc
pop
popa
cmps
jle
push
out
inc
inc
outs
ret
cs
outs
push
mov
lods
or
cmp
aam
push
sbb
out
das
ja
adc
jmp
push
icebp
data16
and
dec
enter
sub
cmp
rcr
push
cli
in
cli
int
push
xor
cmp
push
fist
pusha
dec
popa
dec
hlt
fisub
into
shl
sbb
mov
and
loop
popa
fisubr
xor
test
and
xchg
imul
out
movs
imul
pop
daa
repz
sbb
mov
pop
les
xchg
cld
pop
and
popf
in
lds
ror
push
sub
cli
lahf
push
pushf
push
dec
scas
add
cmc
mov
push
pop
sub
jmp
sbb
xor
mov
or
mov
jl
push
add
push
push
ss
and
mov
mov
inc
push
xchg
jno
or
sbb
mov
test
scas
jle
test
jl
dec
inc
mov
cmp
retf
fcom
and
sbb
les
jmp
adc
add
loop
adc
push
sbb
rcr
popf
and
pushf
std
dec
jnp
ja
jge
js
mov
aam
je
outs
inc
cmp
ds
cwde
cwde
sbb
(bad)
ins
jae
jbe
clc
and
pop
and
push
jp
xchg
leave
cmp
sub
cmc
hlt
mov
fisttp
sbb
fs
inc
sahf
(bad)
pop
and
adc
sub
xchg
jle
pushw
sbb
int3
jne
icebp
in
jb
inc
je
xchg
cld
dec
xor
sahf
jno
lds
out
mov
ins
mov
mov
loope
jmp
add
adc
int
mov
cwde
ret
(bad)
lods
add
xor
jl
xlat
lock
ret
mov
adc
in
or
jnp
or
sbb
fidivr
push
aas
(bad)
push
mov
add
into
or
das
enter
repz
std
sub
mov
div
mov
xor
inc
pop
jmp
sahf
sbb
push
cmps
xchg
push
test
fcmovb
xchg
cld
scas
or
jmp
and
cmp
outs
cmp
jle
dec
int
adc
frstor
add
mov
jbe
pop
lea
lods
retf
sti
jecxz
fs
in
je
in
inc
rcl
xor
jmp
hlt
jle
push
repnz
fist
xor
pop
cmc
push
mov
xchg
or
add
push
not
xor
mov
lods
sbb
out
data16
or
and
and
pushf
arpl
adc
std
addr16
sti
jecxz
adc
cmp
out
mov
mov
sbb
jmp
sub
fwait
sti
addr16
imul
bound
dec
and
jle
push
in
mov
cmp
pusha
push
and
jno
add
out
loope
not
ret
ins
jnp
out
add
ret
addr16
int3
(bad)
pop
lahf
ret
add
add
js
xor
mov
sub
jbe
cmovae
dec
repz
jge
cwde
push
jbe
jb
pusha
hlt
lods
call
mov
cmp
outs
ror
jbe
sti
aad
outs
inc
nop
leave
test
neg
adc
mov
sbb
das
inc
or
lahf
xor
add
mov
stos
push
outs
push
push
rol
pop
cmps
aad
and
je
cmp
repz
adc
jbe
sbb
aaa
mov
xchg
lods
hlt
mov
cdq
mov
xor
dec
xchg
jns
movs
(bad)
(bad)
mov
mov
or
cmp
sti
and
mov
push
and
jle
cmp
sub
dec
std
ficom
cmps
cmp
jns
dec
sbb
jne
mov
loop
imul
imul
gs
in
jbe
frstor
xchg
call
addr16
shl
sbb
pop
inc
sub
push
sbb
push
sbb
dec
add
ds
popa
and
xchg
mov
dec
retf
jno
cmp
push
xchg
xchg
and
push
mov
or
fidivr
xor
push
les
jmp
mov
les
sbb
icebp
test
rcl
mov
jle
mov
inc
jle
xchg
(bad)
sbb
imul
or
mov
push
fwait
mov
push
pop
xchg
ret
neg
add
xchg
jl
jg
movs
out
mov
inc
out
sbb
lea
cwde
adc
jne
addr16
dec
adc
jecxz
aas
sub
rcl
dec
dec
sbb
jge
sub
add
imul
mov
cmp
inc
shl
rcl
push
sbb
fsubp
cli
xchg
mov
mov
mov
retf
adc
xor
mov
aam
das
dec
sahf
add
cs
push
test
cwde
dec
iret
mov
and
inc
pop
jg
dec
sub
pop
mov
push
pop
into
sahf
adc
out
ins
es
ret
pop
or
frstor
mov
ja
bound
mov
xchg
out
neg
jl
std
bound
sub
inc
retf
dec
mov
pop
push
es
cmc
push
sbb
and
shr
jne
dec
out
sub
in
movs
and
leave
or
cmp
aaa
mov
and
outs
mov
or
adc
in
cmc
or
mov
jmp
mov
sbb
add
add
and
xlat
adc
leave
sti
out
js
mov
jb
dec
retf
outs
or
xor
dec
sbb
jmp
mul
cdq
pop
ss
fist
push
sar
jo
push
push
cli
es
push
(bad)
fs
rcl
cmp
(bad)
mov
aas
imul
retf
fld
push
pusha
mov
aas
jmp
inc
add
pop
push
cdq
out
test
cdq
ror
jmp
mov
inc
xchg
sbb
ja
(bad)
sahf
mov
gs
mov
(bad)
fisub
repz
sbb
xor
loopne
pop
call
mov
jmp
add
and
fcom
add
or
and
jnp
jae
inc
push
sbb
je
inc
les
or
fstp
xchg
jno
cmp
pop
xlat
scas
mov
fcom
sbb
cmps
adc
(bad)
jne
icebp
inc
popa
push
fbstp
hlt
mov
stos
pusha
sbb
rcr
rcr
sbb
mov
xchg
dec
push
fcom
scas
fcomp
loop
call
jge
cmp
repz
fwait
push
jb
imul
sbb
bnd
pushf
lds
sti
lock
fwait
mov
adc
cmps
sbb
hlt
adc
add
aam
or
sti
test
pop
sar
enter
(bad)
out
mov
aad
outs
out
aad
push
cmps
stos
sub
add
push
add
cs
out
fistp
(bad)
and
mov
imul
in
mov
inc
sbb
sbb
(bad)
retf
jge
pop
jno
mov
push
mov
nop
idiv
outs
out
in
(bad)
sub
jne
cmp
xchg
rol
jne
retf
pop
jmp
jge
out
(bad)
xor
mov
repz
add
cdq
mov
jg
ins
outs
dec
and
mov
mov
fs
adc
mov
inc
xor
dec
shl
cmps
push
mov
scas
mov
cmps
pushf
(bad)
call
jno
cmp
(bad)
push
inc
call
inc
xor
out
xchg
sub
call
fild
f2xm1
(bad)
bnd
xchg
icebp
push
and
adc
adc
test
in
shr
cmp
cmp
aaa
fiadd
sbb
xor
mov
mov
in
(bad)
jbe
bound
in
jmp
mov
adc
inc
test
outs
mov
vsqrtsd
movs
jb
xor
push
test
xchg
fimul
or
ror
mov
sub
mov
out
push
fwait
inc
ss
int3
outs
xchg
cmp
movs
xor
add
int
lods
lahf
aad
sub
cs
imul
inc
pop
or
sbb
mov
icebp
xchg
sbb
jecxz
xor
inc
adc
pop
adc
enter
cmps
push
rcl
or
adc
out
imul
rol
movs
movs
test
dec
sbb
or
imul
fs
push
daa
pop
fcmovb
inc
jnp
push
pop
hlt
pushf
push
lds
fld
jmp
lods
out
mov
je
sub
dec
out
ss
shr
pop
repnz
(bad)
cld
pop
cwde
mov
xor
inc
or
pop
xchg
mov
scas
add
mov
icebp
adc
xchg
leave
mov
mov
mov
(bad)
or
jl
and
inc
imul
dec
outs
movs
mov
inc
test
sub
xchg
movs
das
jp
(bad)
fisub
aaa
stc
stos
adc
jmp
out
ins
and
cmp
stc
mov
neg
jp
gs
leave
scas
xchg
lahf
mov
dec
xor
aam
mov
(bad)
ffreep
sti
in
push
jge
in
sbb
mov
ins
ins
mov
cmps
mov
cmp
jl
gs
and
pop
icebp
inc
sbb
test
cmp
into
out
dec
push
sbb
and
test
cwde
jbe
das
fwait
out
loop
cmp
inc
or
ins
ror
cmp
outs
data16
xchg
clc
scas
xor
or
mov
xchg
sub
outs
pop
clc
fldenv
mov
cld
loope
xchg
or
out
cmp
jno
jl
pop
xchg
push
and
sbb
pop
call
(bad)
xor
jmp
xor
lock
ret
add
xor
cmp
mov
lods
pushf
push
inc
retf
(bad)
and
adc
fstp
or
xor
mov
adc
xor
js
mov
add
fmul
loopne
shr
mov
sbb
adc
mov
or
out
add
add
or
jl
shl
stos
shl
sbb
hlt
push
(bad)
push
mov
mov
(bad)
sahf
xchg
(bad)
push
cdq
jb
dec
movs
lahf
mov
jnp
call
add
mov
push
inc
mov
ss
inc
test
cld
movs
daa
loopne
xor
fmul
pop
jp
or
dec
adc
push
jg
out
xchg
les
ror
in
test
sbb
xor
pop
in
add
lods
push
ss
jno
retf
xlat
cwde
mul
stos
ins
pop
jmp
and
cli
addr16
lea
es
jnp
add
cdq
jmp
or
or
push
or
jno
push
fnsave
cli
cmp
xchg
push
call
stos
pop
mov
aaa
and
int3
(bad)
gs
hlt
sub
mov
mov
aad
or
div
in
cdq
jne
aad
sbb
test
inc
jecxz
sub
and
xchg
lock
push
add
out
sub
add
cld
je
inc
(bad)
jmp
lods
adc
aaa
mov
test
sbb
pop
aad
jl
mov
scas
icebp
add
xchg
xchg
cmp
xor
and
in
mov
sar
test
(bad)
pusha
fwait
(bad)
rcl
xor
clc
inc
push
(bad)
(bad)
inc
mov
dec
sub
std
push
sbb
xchg
shl
fmul
out
add
mov
out
mov
retf
sub
addr16
inc
stos
push
xor
or
shr
push
cmps
outs
mov
sub
(bad)
xchg
mov
bound
dec
or
cs
lahf
out
dec
xor
aas
cmp
jl
cmp
mov
jns
mov
ss
jg
jp
adc
mov
jmp
cmp
aaa
shl
cdq
or
jae
sbb
inc
push
ins
mov
test
mov
xor
aaa
mov
inc
sbb
stc
pop
mov
ja
and
push
fimul
cwde
mov
mov
xchg
xor
mov
fdivr
ja
mov
pop
jns
and
scas
xlat
clc
inc
dec
and
(bad)
ret
ss
mov
dec
mov
fist
mov
mov
out
loopne
pop
pop
push
cmps
xor
jl
fisub
pop
push
popa
aad
arpl
(bad)
aad
add
in
cli
enter
rcr
retf
imul
mov
dec
std
jo
int3
cs
shl
sti
mov
in
push
call
mov
and
mov
dec
or
jno
stc
not
or
pop
test
pop
inc
test
std
add
jecxz
ins
scas
loop
popf
test
and
push
and
pop
cmp
xlat
loope
sbb
xchg
jecxz
and
hlt
sub
xor
and
xlat
ins
mov
mov
int3
clc
xor
stos
sbb
ret
xchg
scas
lea
(bad)
push
or
fsubr
daa
lds
or
inc
and
rcr
sub
(bad)
jbe
mov
mov
cmp
fmulp
lahf
jg
add
mov
call
jno
mov
add
fs
add
out
sbb
mov
sbb
jmp
mov
xchg
push
push
mov
icebp
xchg
rol
jl
mov
(bad)
mov
pop
jp
mov
(bad)
ficom
(bad)
jbe
ins
inc
repnz
push
mov
and
ret
lahf
dec
imul
shr
sar
int
jb
ins
xor
pop
jnp
push
adc
push
shl
pop
cwde
mov
jo
xor
movs
sbb
jne
ss
stos
into
mov
loope
addr16
xlat
mov
sub
rcr
iret
push
jge
pop
aad
fwait
hlt
add
repz
dec
jle
cmp
mov
cmp
lahf
pop
jae
add
xor
jno
add
sub
sahf
movs
enter
sbb
sub
nop
inc
je
pop
test
ficomp
xlat
and
add
pop
mov
inc
hlt
bound
sar
xlat
jg
ss
cmps
push
adc
call
popa
dec
out
push
inc
adc
adc
mov
and
js
push
loope
leave
xor
xlat
in
sbb
mov
pop
xor
mov
mov
in
push
mov
jle
mov
and
shl
adc
mov
mov
es
stc
jl
push
out
mov
je
das
cld
jge
(bad)
les
add
(bad)
push
in
push
push
mov
jl
(bad)
aad
add
movs
aad
fcomip
sub
lahf
arpl
popa
or
jp
inc
ja
cmps
arpl
pop
or
ror
in
pop
mov
xchg
cmc
and
or
out
mov
xchg
xlat
lods
(bad)
(bad)
loopne
outs
pop
jp
mov
xor
icebp
rol
pop
cmc
(bad)
sub
jge
xchg
jge
inc
push
jmp
push
push
and
sub
out
xlat
jmp
cmp
push
sub
mov
add
fnstenv
push
(bad)
mov
pop
xor
gs
ret
rol
mov
lock
frstor
mov
popf
ret
shl
pop
jge
bound
repz
fwait
jg
cli
scas
add
cdq
and
mov
out
adc
ins
pushf
fldcw
fs
xlat
or
lods
nop
mov
shl
enter
mov
jmp
ja
mov
jmp
push
cdq
sub
xor
imul
sar
inc
(bad)
fsubr
test
frstor
mov
into
sbb
mov
xor
sub
rcr
stos
inc
sahf
xchg
xlat
inc
xchg
retf
inc
inc
push
adc
nop
jno
xor
cmps
push
cs
xor
xor
push
cmp
stc
in
or
iret
push
dec
nop
pop
pop
shr
vsubsd
cwde
mov
dec
adc
cmp
dec
push
addr16
ret
das
xchg
scas
popf
or
ds
inc
cmp
sub
daa
push
movntps
(bad)
mov
(bad)
retf
xor
stc
out
mov
lock
mov
or
dec
mov
sbb
in
mov
inc
fs
push
test
ds
jno
cmp
jecxz
es
push
call
retf
sbb
or
ret
pop
dec
les
push
and
dec
fbstp
fcmovbe
sar
mov
pop
jle
cdq
or
(bad)
jmp
and
test
dec
dec
clc
comiss
retf
pop
pop
lahf
gs
jo
cmp
mov
pslld
pop
popf
daa
push
test
loopne
jnp
std
lods
in
sbb
mov
adc
neg
out
mov
clc
push
xchg
and
cld
cdq
jge
add
xchg
jg
fisub
dec
xchg
imul
mov
adc
fcom
and
fimul
(bad)
out
push
sub
or
scas
iret
mov
loopne
pop
pop
std
les
adc
es
sbb
push
sti
int3
cmp
cmp
pop
dec
inc
sbb
jne
and
cwde
movs
push
daa
pushf
out
movs
repz
inc
push
mov
lar
xor
loope
jecxz
xor
adc
or
add
fimul
or
shr
jl
pop
sar
mov
push
xchg
push
int
add
and
ins
sbb
in
and
dec
aas
pop
test
xor
adc
adc
xchg
mov
out
cmc
cdq
mov
mov
ds
jg
mov
jle
outs
mov
pop
or
leave
out
pop
mov
or
mov
sbb
idiv
push
cmp
lods
shl
push
sar
add
stos
das
mov
sar
dec
sub
add
mov
adc
mov
xchg
xchg
jb
pushf
mov
stc
imul
in
bnd
sbb
add
leave
stc
push
pushf
stos
mov
jp
pop
dec
or
sahf
or
fild
ds
mov
inc
out
inc
lahf
dec
xchg
cmp
xchg
cmp
mov
pop
jl
add
xchg
adc
int3
cmp
mov
loop
sub
pop
pop
inc
shl
ss
xchg
mov
test
xor
sbb
push
mov
lock
lea
or
push
dec
iret
lds
bound
mov
cmp
popa
or
nop
adc
sbb
inc
ror
pmuludq
stc
jb
in
or
outs
call
jb
adc
xchg
retf
mov
imul
mov
inc
dec
pop
icebp
ret
bound
(bad)
retf
or
adc
cmp
test
mov
mov
and
lock
dec
jbe
pop
xchg
fnstcw
dec
popa
in
test
cmp
pop
and
in
(bad)
ins
mov
jmp
mov
or
addr16
mov
mov
cmps
sub
pop
mov
neg
rol
sub
imul
inc
lea
push
add
retf
inc
cmp
ja
jecxz
sub
clc
in
xchg
or
pusha
(bad)
outs
test
adc
add
xchg
out
rcl
add
mov
inc
inc
sub
adc
ins
stos
inc
and
daa
fnstcw
mov
jo
push
movs
jg
cmc
inc
or
adc
xlat
push
adc
inc
outs
je
jo
sti
iret
mov
bnd
inc
push
repz
sub
not
push
call
ins
sahf
add
mov
and
(bad)
add
jg
and
sahf
push
test
lods
lods
addr16
sar
inc
xor
xor
jmp
inc
sbb
dec
outs
mov
retf
adc
imul
xor
stos
mov
inc
in
push
sub
push
test
mov
into
pop
add
and
xchg
les
nop
(bad)
xchg
(bad)
pop
mov
pop
sti
xor
adc
lock
or
ds
retf
and
mov
cld
pop
int3
add
push
inc
in
addr16
ins
test
cmp
ss
mov
xchg
aad
idiv
hlt
std
jl
jae
fs
adc
pop
cmp
xchg
lea
cmp
sbb
test
adc
fwait
inc
jno
dec
scas
mov
shl
jb
test
xchg
rcl
mov
add
clc
fld
daa
jns
xor
outs
and
popa
or
pop
dec
loope
aaa
xchg
iret
addr16
(bad)
shl
cli
mov
std
fwait
xor
mov
or
aas
or
jns
clc
cmc
sbb
jno
imul
dec
repnz
call
jno
inc
loopne
pop
pop
fdivr
cmp
fcomp
pop
xor
and
imul
push
(bad)
mov
mov
loope
aam
add
out
lahf
xlat
xchg
cmps
and
inc
xchg
or
js
addr16
(bad)
cwde
xchg
add
sti
or
cmp
retf
retf
and
ds
jne
or
das
cmp
pop
sti
and
mov
xchg
mov
or
push
jnp
and
mov
inc
cmp
and
push
or
pop
pushf
sub
jns
js
add
xor
push
adc
mov
scas
fsubr
pop
aaa
jno
pop
dec
xchg
inc
pop
aaa
lea
xchg
shl
loop
fist
pop
cmc
stc
add
popa
jmp
lock
add
ds
push
or
or
call
xchg
ja
mov
hlt
pop
or
jg
iret
fcomp
stos
aam
outs
pop
jnp
addr16
out
in
lea
std
adc
sub
mov
add
mov
sbb
scas
out
push
xchg
mov
movs
sub
dec
in
mov
mov
scas
daa
inc
mov
daa
jge
inc
pop
cmp
push
loope
add
enter
(bad)
fcmovnu
cmp
rcl
xlat
cmps
mov
and
test
cli
mov
inc
sub
mov
cmps
xor
(bad)
push
retf
fimul
outs
adc
pop
cmp
push
test
xchg
(bad)
mov
jg
enter
push
xor
int
push
lock
out
in
xor
adc
jg
push
sbb
in
and
not
inc
in
and
stos
out
and
xchg
rcl
repz
out
push
push
jo
fld
and
or
call
pop
xchg
ficom
test
cmp
movaps
inc
jmp
int3
sub
(bad)
(bad)
hlt
lock
and
imul
shl
mov
jmp
jae
cdq
cli
lock
retf
mov
scas
mov
inc
mov
or
emms
jne
xchg
test
mov
imul
dec
iret
jne
jmp
mov
xor
mov
cmps
sub
scas
pop
cmc
test
arpl
or
and
pop
adc
adc
ror
push
arpl
jb
dec
into
xchg
jmp
shl
push
fisubr
inc
pop
sbb
ss
fcom
push
cld
push
fmul
out
cmp
movs
jb
ret
sbb
pop
fwait
scas
jbe
jmp
in
pop
push
dec
daa
mov
pop
iret
xor
mov
sub
lds
cmp
ins
shr
push
out
cmp
mov
clc
int
test
sahf
mov
push
sub
(bad)
mov
jo
(bad)
push
adc
add
cmp
lds
push
(bad)
and
in
jno
clc
xor
mov
adc
mov
jne
sbb
push
jae
inc
mov
sub
inc
cmc
xchg
mov
add
or
icebp
test
add
inc
repz
scas
psllq
dec
sbb
test
inc
jnp
mov
cmp
mov
add
repz
mov
cmp
or
rcr
adc
push
nop
add
mov
adc
jmp
dec
push
jl
push
sub
cli
stos
mov
push
fst
mov
call
into
push
inc
clc
int3
and
fwait
xchg
call
nop
in
stc
sub
add
pop
pop
pop
cmp
sbb
ds
mov
arpl
mov
jb
xchg
jns
(bad)
fstp
xchg
mov
and
sbb
cmps
out
inc
popf
stc
repnz
xchg
mov
stos
dec
dec
inc
jecxz
js
call
pushf
clc
mov
fs
adc
pop
(bad)
dec
push
das
sar
dec
jge
ret
std
data16
outs
cmps
add
jae
adc
mov
mov
sub
xchg
es
push
test
stc
aad
ret
sbb
fld
xchg
xchg
sahf
push
lock
dec
stos
icebp
lahf
retf
(bad)
cmp
push
ja
or
push
jle
in
push
dec
iret
sub
ds
push
push
aaa
mov
and
jno
jns
mov
cmp
push
xchg
cmc
pop
adc
out
dec
and
mov
in
shr
dec
xchg
jmp
in
pop
pushf
push
jno
rcr
ja
lahf
sbb
and
sub
sbb
push
pop
aad
jb
inc
lods
adc
sub
xor
xchg
fmul
shl
push
push
jmp
hlt
dec
lds
out
sub
add
retf
out
(bad)
xchg
cmp
lds
scas
int3
mov
shr
cvtps2pi
(bad)
and
test
mov
out
jecxz
dec
(bad)
bound
in
fiadd
adc
jp
push
add
dec
pop
push
and
pop
je
mov
ss
aas
push
test
xor
jmp
clc
fmul
clc
lock
fs
clc
lods
jmp
fild
cmp
dec
lods
fisubr
rcl
sub
ror
imul
movs
outs
sbb
inc
(bad)
(bad)
icebp
lods
pop
out
mov
aas
add
mov
dec
and
pop
xchg
xor
and
aaa
pop
nop
mov
xchg
mov
add
je
rcr
(bad)
cli
jns
push
addr16
and
fs
push
push
mov
jecxz
inc
xchg
pop
sbb
or
add
stc
ins
sub
adc
adc
adc
fcmovu
pop
jle
sahf
xor
or
xor
pop
jp
arpl
xor
sti
fucom
mov
mov
or
fisttp
mov
sti
aaa
adc
dec
popf
jecxz
out
sub
push
fiadd
or
cwde
mov
or
mov
push
gs
add
inc
loope
leave
jne
pop
or
js
loopne
cdq
aad
cwde
add
test
or
jae
jl
stc
repz
mov
or
retf
aam
sub
and
movs
adc
test
cmp
mov
nop
jnp
jnp
jmp
in
mul
loop
and
aam
(bad)
loopne
pop
cmps
inc
and
dec
aam
in
sbb
xchg
inc
mov
or
loop
ret
shl
jno
mov
(bad)
cdq
cmps
in
data16
push
retf
push
sbb
rol
scas
inc
test
cmp
aas
(bad)
mov
dec
jg
sahf
or
adc
imul
xchg
inc
jp
stc
dec
xchg
das
jo
xor
hlt
jp
les
fs
daa
loop
das
out
pushf
rol
pop
popf
xlat
push
aaa
retf
fwait
jmp
outs
aad
ins
adc
push
outs
pop
cmp
or
xchg
pop
inc
push
test
test
jns
or
dec
push
gs
pop
inc
je
mov
movs
std
fs
ret
cli
cmps
push
and
lock
mov
xchg
jae
inc
cdq
xor
or
cs
imul
mov
mul
std
add
imul
push
outs
sub
push
add
and
in
fcom
xchg
movs
scas
add
add
dec
test
stos
mov
test
lea
pusha
sahf
sar
movs
ds
cli
loope
sub
rcl
and
dec
out
bnd
push
imul
mov
pop
mov
push
mov
cmp
dec
inc
pop
mov
aas
xchg
les
ss
push
jl
call
stos
jne
pop
icebp
and
xchg
mov
lea
jle
and
scas
sub
sub
ficomp
or
test
mov
jns
xor
mov
or
cmps
mov
xor
and
mov
push
sbb
inc
add
(bad)
ins
pop
sub
aas
dec
cmps
jp
sahf
jg
into
dec
and
test
sbb
push
lahf
test
or
(bad)
(bad)
adc
lods
cmp
test
sbb
mov
out
cmc
pop
jns
addr16
loop
adc
and
mov
imul
push
adc
push
adc
xor
cmp
neg
xchg
pusha
pop
imul
cld
(bad)
jne
push
cmp
add
pop
adc
adc
adc
mov
(bad)
aad
outs
xlat
mov
and
push
mov
jmp
add
(bad)
popf
iret
mov
pop
int3
daa
call
or
mov
ss
xchg
repz
(bad)
push
in
xchg
lods
lahf
das
mov
push
add
pop
fild
and
jae
pop
dec
mov
xor
xor
mov
pop
push
and
popf
xor
or
div
dec
push
mov
mov
retf
in
call
pop
sbb
enter
(bad)
imul
into
jo
inc
loopne
test
cli
ret
push
xor
mov
mov
out
(bad)
popa
inc
push
mov
fs
adc
adc
les
cmp
inc
and
loopne
nop
xchg
jno
mov
push
pop
sub
mov
fild
mov
sbb
pop
inc
fisubr
jnp
xchg
ins
inc
gs
mov
add
sub
inc
or
scas
fbstp
adc
and
or
cs
push
aam
cmp
xor
mov
cmps
in
inc
test
movs
das
sar
adc
cmc
xchg
add
dec
test
rcr
std
pop
cwde
pop
addr16
xchg
mov
jg
scas
pop
jae
xor
cmp
cli
dec
mov
call
sub
xchg
mov
add
push
popf
ficom
hlt
rcr
test
out
test
pop
dec
inc
fnstenv
sbb
or
call
lea
pop
xchg
cmps
enter
cli
in
add
sub
les
pop
lock
in
out
adc
or
int
out
or
and
imul
loope
outs
mov
out
cmp
inc
mov
push
jne
inc
pusha
pusha
jns
(bad)
fisttp
mov
aad
push
fwait
jl
push
or
sbb
fwait
or
cld
(bad)
sbb
jle
mov
and
xchg
push
sbb
(bad)
mov
xor
repz
fwait
enter
xor
xlat
movs
jp
les
xor
(bad)
cld
repz
cmc
xor
inc
sbb
mov
and
mov
sub
cs
jecxz
adc
test
pushf
or
vmwrite
adc
inc
lods
sub
(bad)
jae
mov
cmps
pop
cld
dec
push
add
or
or
xchg
add
jl
gs
retf
cmp
push
mov
pusha
std
inc
jae
jl
ret
and
leave
outs
lahf
imul
pop
gs
sub
add
mov
cmp
lods
icebp
mov
sbb
pop
mov
adc
inc
mov
and
and
mov
sub
fs
cmp
lahf
sbb
out
inc
mov
add
adc
fistp
xchg
xor
push
sub
je
mov
outs
pop
mov
aas
inc
lds
pop
xchg
jmp
adc
push
cmc
ja
clc
inc
push
jle
sub
add
or
bound
push
adc
cli
sbb
mov
push
fdivr
mov
dec
dec
mov
enter
sar
(bad)
jp
xchg
mul
cwde
ror
sbb
(bad)
cmp
movs
repz
pop
shl
jo
push
int3
retf
cdq
popa
push
jae
cmps
out
or
rcr
mov
mov
scas
popa
rcl
sub
jbe
adc
push
fwait
or
or
push
mov
or
mov
dec
scas
xchg
test
add
inc
adc
and
or
sub
in
cmp
scas
xlat
(bad)
js
mov
or
(bad)
fcom
(bad)
sbb
mov
aaa
iret
pop
test
cmp
add
cmp
cmps
dec
cmp
adc
mov
bound
mov
jge
mov
sub
pop
cli
(bad)
and
mov
add
addr16
out
jmp
xor
pop
cmps
aaa
sbb
in
cld
mov
and
pop
xor
jle
fstp
dec
add
and
jbe
jge
es
mov
xor
mov
imul
daa
xchg
retf
test
mov
out
scas
cld
jnp
cmps
ret
out
cld
scas
call
mov
inc
in
(bad)
cmp
fsub
shr
dec
sbb
sbb
sbb
icebp
dec
(bad)
iret
int
push
adc
jno
jmp
sbb
jae
hlt
add
jmp
ins
fdivp
out
test
sbb
xchg
(bad)
mov
pushf
inc
xchg
scas
es
icebp
out
stos
xchg
movs
cmp
arpl
or
in
inc
out
pop
cs
mov
fcomp
pop
jno
dec
and
(bad)
popa
call
mov
popa
fild
and
inc
mov
sbb
xchg
into
pushf
adc
pusha
aaa
out
imul
adc
sahf
jp
cmp
(bad)
pop
aam
jo
dec
or
jo
pop
imul
jbe
cmp
pop
cmp
dec
imul
mov
xchg
mov
push
push
test
inc
xchg
sahf
enter
xor
repz
pushf
or
dec
cmp
adc
jo
xchg
dec
int3
hlt
mov
sbb
cs
push
mov
icebp
add
sub
popa
pop
cli
dec
or
pushf
xor
aad
inc
popa
mov
das
xor
mov
mov
jbe
scas
daa
fcmovnb
sbb
pop
cs
jmp
std
icebp
pop
sbb
cmp
outs
mov
xor
sbb
jnp
mov
inc
cs
sub
icebp
out
cmc
cmps
and
test
inc
jmp
jg
pop
mov
sbb
mov
test
fstp
cmps
mov
and
movs
cmp
outs
cmc
es
std
es
xor
(bad)
shl
mov
add
test
inc
dec
lods
jecxz
int3
sub
out
test
movs
add
push
push
sti
sahf
xchg
or
push
fdiv
cwde
lods
sbb
fiadd
movs
sub
push
cli
lea
xchg
out
cmps
xchg
inc
fst
inc
pop
fimul
mov
jmp
shr
fdiv
in
xor
xor
sub
mov
sbb
clc
shr
(bad)
dec
out
cmp
mov
test
and
xor
xor
out
and
(bad)
test
dec
sub
push
out
test
jle
hlt
push
jecxz
or
adc
cmps
popf
cld
data16
test
pop
mov
(bad)
imul
mov
jl
(bad)
mov
repz
ja
mov
scas
ins
dec
jle
jno
clc
ds
adc
movs
shl
fidivr
leave
mov
shl
mov
mov
jmp
fldcw
xor
sub
sti
ja
jbe
push
push
gs
ret
sub
nop
add
push
aas
cmp
push
push
mov
inc
jno
push
push
clc
jne
mov
scas
imul
pop
sar
cmc
dec
push
dec
inc
pop
iret
retf
xchg
jg
sub
cld
cld
das
enter
xlat
mov
fwait
jg
pop
pop
ret
xor
(bad)
xchg
das
mov
cs
or
push
sti
out
mov
add
sbb
push
sub
aam
pop
fnstsw
mov
mov
dec
sub
hlt
xchg
mov
mov
and
popf
pusha
mov
or
and
in
pop
and
pop
mov
pop
fidivr
mul
out
mov
mov
outs
xor
(bad)
stos
xor
cmp
and
retf
adc
mov
loopne
and
mov
imul
xor
outs
mov
addr16
stc
pop
daa
scas
inc
imul
stc
out
fisttp
inc
add
test
sbb
dec
jle
cmp
mov
hlt
cmp
mov
outs
and
xor
or
dec
shl
push
mov
retf
xor
xor
sbb
retf
int3
cmp
mov
pushf
imul
fnsave
in
aas
inc
in
xchg
outs
or
and
(bad)
push
out
xlat
adc
mov
sub
icebp
push
cmp
jae
sub
push
data16
scas
sbb
retf
jecxz
or
iret
sbb
cmps
cmp
sbb
and
in
mov
pop
fdiv
out
mov
mov
and
adc
test
jnp
pusha
or
mov
lods
in
adc
pushf
cmps
mov
adc
rol
aam
int
test
sub
and
dec
mov
loop
lahf
stos
push
ds
das
or
mov
or
lahf
movs
retf
in
adc
mov
push
dec
mov
shr
ror
(bad)
retf
call
sbb
cdq
mov
sub
stos
mov
lods
shl
das
mov
adc
in
in
jmp
mov
add
cmps
mov
test
jns
loope
cld
movs
pop
pop
scas
jg
cmps
or
sub
pop
sub
xchg
pusha
ret
hlt
stc
sbb
pop
sub
pop
repz
imul
(bad)
popa
mov
pop
ficomp
mov
adc
jg
add
ret
(bad)
ja
es
or
cmp
xor
mov
ds
mov
xchg
push
add
or
xchg
cwde
mov
mov
xchg
shl
cmps
xchg
stos
ins
pop
popa
sahf
add
mov
fs
sub
es
pusha
pop
adc
dec
pop
sub
(bad)
inc
lods
hlt
mov
push
and
sub
pop
jb
mov
ins
repz
mov
aad
sahf
retf
push
ss
push
dec
das
cdq
cmp
sub
aam
daa
lods
pop
fsubr
call
pop
pop
sub
inc
push
cld
push
es
in
pushf
mov
daa
jns
jne
xor
popa
dec
(bad)
push
jnp
inc
inc
js
jne
adc
pop
xchg
fcomp
sahf
xchg
nop
and
xlat
je
and
inc
arpl
xor
mov
das
push
add
mov
pushf
mov
fwait
lds
inc
ret
scas
pop
pop
xor
add
xchg
rcr
pop
ret
lea
rcr
popa
jne
lods
aas
jae
arpl
inc
lahf
inc
fidivr
test
leave
dec
in
int
in
adc
adc
scas
mov
test
rcl
int
sub
push
mov
mov
(bad)
cld
xor
lds
mov
xor
(bad)
pop
jnp
mov
(bad)
xchg
xchg
jb
or
mov
and
push
lea
movs
sub
gs
les
aas
adc
ins
and
fsub
fisubr
push
sub
inc
mov
mov
retf
push
push
sahf
sbb
mov
out
lahf
cmovb
in
in
mov
dec
sar
lock
in
cmp
adc
mov
std
jg
xor
lods
aaa
pop
shr
fs
data16
mov
xor
out
or
cs
pop
dec
mov
loope
dec
retf
lods
jle
pop
daa
and
psubusb
xor
aaa
fcomp
push
push
cmp
pop
cmp
pop
scas
jecxz
shl
sub
adc
nop
rol
je
inc
aaa
sub
dec
inc
imul
mov
repz
jp
ss
test
stos
xchg
enter
xor
push
add
scas
rol
push
cld
js
dec
shr
cmp
outs
sar
stos
mov
mov
dec
push
dec
or
into
cs
push
out
cmp
aas
xchg
sub
int3
or
(bad)
xchg
icebp
jmp
add
jl
cmp
in
(bad)
pop
nop
call
sti
and
das
pop
pushf
inc
(bad)
sub
mov
xor
jnp
es
xchg
dec
popa
add
xchg
adc
aas
mov
jns
push
and
xlat
stos
mov
movs
jo
or
ffreep
sub
ret
add
add
adc
add
test
mov
in
mov
into
jg
pop
aam
push
fisttp
daa
dec
cmp
jge
sub
xchg
mov
pushf
jecxz
out
and
ficom
and
aaa
(bad)
dec
add
inc
scas
mov
jmp
and
xchg
sbb
(bad)
jb
loop
adc
sti
ja
adc
popf
mov
inc
or
pop
mov
es
mov
push
popf
les
add
pop
test
dec
xlat
sbb
ror
popf
mov
(bad)
scas
mov
cmp
mov
sub
push
dec
mov
out
popa
mov
iret
pop
add
fmul
xchg
bound
js
jl
mov
dec
ja
loop
pusha
leave
pusha
dec
mov
ins
mov
fnsave
cdq
in
hlt
xchg
push
inc
dec
aaa
mov
mov
aam
xchg
pop
dec
lods
in
and
outs
push
fldenv
int
ins
aaa
pop
outs
mov
mov
out
push
icebp
cmp
and
mov
push
fst
push
imul
stc
rcr
loop
sub
stc
ret
xchg
pop
jae
fidiv
xchg
les
mov
jmp
stos
push
(bad)
push
mov
pop
idiv
ret
int
in
test
xchg
mov
arpl
pop
dec
clc
lods
mov
inc
sub
(bad)
mov
aaa
jae
add
mov
and
add
(bad)
pop
retf
scas
jmp
scas
loop
dec
enter
sti
cmp
cmp
sbb
(bad)
cmp
ins
push
add
loope
push
jno
mul
mov
ja
inc
inc
sbb
pop
leave
cmc
imul
jnp
push
lds
cmp
ret
ins
test
mov
pop
shl
push
arpl
cmp
(bad)
clc
cmp
(bad)
std
leave
hlt
(bad)
cmp
adc
test
lods
jne
es
mov
outs
mov
inc
sub
xchg
retf
inc
pop
push
ficom
xor
loope
ds
xor
fstp
iret
arpl
push
popa
mov
shl
or
xchg
dec
jbe
adc
into
jb
clc
ins
clc
or
es
sar
popa
in
dec
mov
in
jb
js
aad
stos
ds
repz
or
mov
inc
mov
push
je
mov
inc
sbb
push
daa
sbb
daa
scas
addr16
shr
and
loope
push
pop
es
sbb
push
push
test
jmp
mov
xor
cli
push
mov
test
dec
clc
adc
cwde
xor
fnstsw
or
jmp
cmp
iret
int3
mov
sub
gs
xchg
dec
xor
repz
mov
push
pop
xor
fwait
jnp
pop
xor
jecxz
xor
cmc
popf
icebp
sbb
inc
cmp
out
and
sub
cmp
mov
outs
test
mov
inc
inc
sub
out
out
inc
clc
out
mov
adc
jle
cmp
jl
mov
aad
xchg
push
daa
fld
push
lds
imul
mov
int3
leave
aas
push
mov
(bad)
sbb
test
mov
fs
push
mov
fisttp
add
fs
jb
into
sbb
mov
test
imul
movs
push
cmp
and
sahf
dec
mov
les
jae
cmp
es
xchg
xor
sub
lea
push
xchg
xor
or
mov
inc
outs
arpl
mov
pop
mov
cmp
mov
cmovo
stc
sub
xchg
mov
ror
into
inc
iret
pop
loopne
jno
xor
fwait
in
or
and
inc
jecxz
or
repnz
(bad)
imul
push
addr16
push
pop
ds
call
outs
pop
add
rol
(bad)
lahf
jl
mov
xchg
inc
aad
sub
std
addr16
xchg
adc
cmp
pop
mov
add
jo
jl
(bad)
dec
and
imul
jecxz
addr16
ins
cmp
adc
dec
test
sbb
(bad)
movs
call
sbb
sbb
jl
cmp
pop
popa
jg
mov
ds
jbe
cdq
add
rol
stc
dec
dec
mov
mov
int
cmp
xchg
xor
and
jne
call
lods
mov
adc
or
imul
sub
call
push
jle
mov
fadd
adc
xor
push
test
inc
data16
push
fcmovnbe
or
mov
pop
mov
cwde
jecxz
sub
mov
sub
sub
adc
mov
cmps
pop
dec
add
test
mov
int3
mov
adc
rcr
pop
adc
cmp
pop
mov
aam
cmp
pushf
in
xchg
popa
add
pusha
into
or
loope
sbb
pop
into
retf
movs
popa
and
lods
push
cmps
iret
cmp
dec
rol
pop
add
adc
cs
test
jg
push
call
sbb
pop
pop
sbb
outs
or
(bad)
outs
ins
icebp
cmp
dec
mov
sub
push
mov
or
fld
pop
out
jmp
popf
and
mov
icebp
cwde
push
jmp
movs
dec
(bad)
dec
rcl
ds
xchg
mov
sbb
mov
retf
nop
xor
pop
clc
int
pop
pop
fist
int3
adc
fld
shl
fimul
gs
clc
add
sub
and
xchg
add
cmp
pop
fimul
push
pop
sbb
(bad)
add
lods
mov
mov
popf
jns
(bad)
xchg
xor
xchg
cld
in
rcl
fisub
xchg
lea
mov
scas
pop
sar
jge
and
mov
xlat
jne
js
sub
je
ds
mov
rol
xor
inc
fidiv
les
ja
xchg
sub
jmp
sbb
mov
jle
pop
cmps
fld
and
inc
mul
mov
mov
fbstp
sub
pop
push
outs
push
aad
stos
pop
and
cdq
and
sbb
xor
dec
push
pop
out
jno
inc
in
cmp
bound
add
(bad)
fldcw
aad
(bad)
sub
repz
cmovnp
jp
pusha
aam
sbb
mov
sbb
push
mov
ficom
fs
xor
sub
popa
xchg
test
nop
imul
push
lahf
outs
inc
repnz
cmp
in
stc
and
cmp
pop
adc
cmp
out
dec
test
rcr
fnstenv
jp
adc
sub
and
div
test
add
or
in
ja
jb
test
js
adc
pop
fld
mov
cmps
xlat
neg
adc
pop
daa
sub
movs
lea
mov
push
adc
dec
popf
mov
sub
arpl
cmps
cdq
inc
push
retf
or
push
jo
xchg
mov
std
lods
fisttp
pop
cmp
jle
movs
jl
and
cwde
ret
add
ds
loopne
sub
jecxz
ins
xor
adc
jnp
cs
test
dec
xchg
mov
fwait
daa
push
mov
sub
gs
fld
inc
inc
inc
ss
fimul
lods
clc
push
sahf
rcr
fdiv
jge
pop
push
mov
repnz
push
pop
pop
scas
add
sti
push
js
das
push
fild
es
sbb
(bad)
enter
mov
in
es
repz
dec
fisubr
or
push
inc
js
cmps
ret
cmps
push
das
dec
push
dec
jmp
pop
inc
not
push
cdq
lahf
inc
out
and
sbb
cmp
jnp
fsubp
mov
mov
pop
jmp
aad
shr
aad
je
into
popf
imul
sub
inc
sub
pushf
aas
das
arpl
jecxz
inc
(bad)
nop
sub
neg
lods
es
sub
lods
aaa
and
test
cmp
jmp
cmps
jne
xchg
sti
jmp
ins
xor
jae
loope
or
ret
daa
mov
mov
push
or
aam
test
mov
cmc
add
or
sub
adc
or
jae
and
das
push
mov
mov
jno
test
std
cs
lock
mov
loopne
jbe
outs
sti
push
jl
lahf
ja
stos
fdivr
jmp
clc
adc
mov
add
shl
retf
or
std
mov
and
shl
fld
loop
sbb
out
loopne
or
add
adc
js
pop
mov
cmp
test
jo
imul
sub
std
out
mov
jge
jp
mov
das
push
inc
in
fst
loop
sub
movs
mov
stc
cmc
push
xlat
pop
ja
stos
in
jne
ins
and
es
xchg
push
cli
jno
push
pop
push
xor
jbe
scas
gs
std
fldenv
lea
data16
outs
call
inc
scas
frstor
push
jecxz
mov
(bad)
imul
xchg
cmp
dec
xchg
xchg
shl
sti
xor
lahf
stos
or
dec
jmp
jbe
fild
jmp
push
stos
aas
loopne
push
add
fsubr
mov
(bad)
xchg
lock
frstor
add
adc
push
pop
xchg
ins
shl
inc
repnz
xchg
push
adc
pop
rcr
stos
or
jb
sub
lods
cmp
xor
pop
dec
or
mov
inc
inc
jp
jp
sahf
mov
jne
xor
out
retf
adc
pop
es
inc
retf
dec
cmc
adc
mov
pop
dec
push
out
push
leave
sti
repz
outs
xor
jmp
sbb
jmp
mov
stos
mov
dec
ror
push
jo
adc
jmp
lods
call
adc
call
xor
push
fwait
out
sar
imul
sti
push
push
and
dec
icebp
xchg
sub
outs
je
aas
lahf
cld
(bad)
mov
or
add
in
shl
dec
jl
iret
cmp
inc
popf
sub
dec
jno
test
dec
dec
jne
jecxz
shl
mov
sbb
mov
arpl
test
and
ror
stc
scas
adc
inc
pop
pushf
loopne
adc
adc
test
and
ins
cmp
lock
call
and
jge
mov
sbb
sbb
add
rcr
push
cs
and
popa
mov
mov
scas
and
cmp
cdq
dec
fimul
push
cmp
in
jno
cmp
ret
push
out
pop
(bad)
nop
sbb
fld
mov
rcl
adc
add
bound
jne
fdiv
movs
adc
clc
addr16
ret
mov
out
add
mov
out
lea
dec
daa
push
push
jno
adc
mov
adc
shr
xchg
stos
mov
inc
pop
cmp
adc
cld
cdq
jl
rcr
push
es
xchg
adc
mov
or
cmps
into
inc
out
inc
sahf
inc
sahf
and
arpl
pop
(bad)
into
dec
dec
jp
jge
mov
dec
dec
mov
pop
bound
lods
ins
and
inc
mov
or
mov
stc
add
dec
dec
sahf
mul
clc
dec
mov
push
pop
cmc
mov
test
repnz
(bad)
nop
push
mov
pop
or
sbb
call
push
sub
push
mov
jp
dec
inc
dec
xchg
ja
icebp
mov
cs
cmp
or
std
lods
mov
mov
retf
pop
sbb
lods
mov
int
jbe
dec
cmp
ror
imul
arpl
xor
xor
xor
imul
jecxz
jg
shl
clc
dec
in
xchg
rcr
pop
lea
push
aas
std
or
int3
cmps
adc
or
or
stc
push
mov
pop
dec
int3
fwait
xor
xchg
stc
fstp
cmp
bound
dec
mov
lods
mov
sub
push
mov
add
sbb
bound
mov
mov
mov
stc
xor
in
pop
stos
jnp
or
push
cmps
jp
pushf
push
jmp
and
fs
xchg
lock
cmp
pop
and
hlt
mov
cli
loop
jnp
shl
mov
retf
sbb
(bad)
add
fisttp
mov
push
sbb
mov
mov
mov
test
cmp
shl
cmps
xchg
mov
add
mov
mov
cmp
pop
xor
outs
outs
jmp
iret
shl
pop
mov
scas
sbb
adc
sbb
and
sub
jnp
push
stos
xchg
cmovae
pushf
inc
leave
ret
cs
ds
and
xor
xchg
popf
xor
out
xor
iret
in
mov
in
push
lahf
or
repnz
in
jmp
push
pop
aad
mov
aas
cmps
rcr
mov
and
or
mov
inc
push
outs
mov
ss
shl
sub
cmp
shl
daa
xor
and
mov
sub
repnz
sbb
mov
cld
pop
pusha
test
jmp
cmp
jmp
mov
mov
sub
out
mov
les
add
push
lods
jb
shr
mov
adc
sub
push
jmp
cmc
out
or
sahf
inc
or
aad
mov
push
pop
vdivsd
pop
pop
ret
daa
push
repz
retf
adc
add
push
(bad)
add
mov
cmp
aas
into
xor
push
dec
fs
xchg
sub
out
jnp
je
arpl
inc
inc
cmp
rol
mov
cmp
sti
std
mov
add
movd
push
fdiv
ret
push
jl
popf
pop
das
adc
out
adc
and
xchg
lea
push
sahf
pop
adc
add
jmp
lock
out
int3
je
mov
mov
test
cmp
mov
stos
(bad)
shr
(bad)
jns
mov
jp
(bad)
cli
push
xchg
scas
or
ja
ins
dec
dec
jle
test
xchg
mov
sar
jge
or
or
adc
fld
ins
mov
push
push
test
outs
push
xor
mov
mov
out
ss
mov
dec
jecxz
mov
xchg
inc
fidiv
add
lahf
jle
mov
stos
frstor
rol
out
pop
stos
push
xor
bound
mov
enter
(bad)
cmp
in
mov
nop
iret
inc
sub
jbe
or
xchg
add
pop
sar
gs
out
pop
xchg
ds
xchg
or
or
inc
jmp
aam
ror
cmp
(bad)
xchg
sub
shr
jns
jns
(bad)
xor
add
loope
xor
pusha
mov
in
dec
pop
mov
gs
pusha
pushf
out
and
dec
mov
out
mov
retf
ret
loope
push
imul
push
xor
mov
lock
add
mov
sbb
stos
adc
(bad)
pop
aaa
xor
dec
iret
push
add
popf
pop
lahf
mov
mov
pushf
xor
adc
xor
jl
iret
shr
call
mov
hlt
les
dec
or
movs
mov
pop
xchg
daa
pushf
idiv
icebp
push
stos
ficom
ficom
leave
cmps
adc
popa
repnz
inc
push
fisttp
stos
mov
js
pop
mov
jp
cmc
div
cmp
je
xchg
ret
inc
aam
mov
mov
xchg
sub
ss
aas
outs
jg
xchg
and
jnp
(bad)
push
xchg
jno
push
test
out
jecxz
push
cmp
mov
xor
mov
and
aam
and
dec
test
or
jmp
stos
add
movs
jl
sbb
add
mov
or
or
cmc
js
sub
pop
je
push
cwde
jl
mov
in
nop
or
sub
int
xchg
addr16
mov
je
sub
imul
jp
in
loop
scas
ret
mov
add
sar
push
call
cmp
push
daa
push
sub
int3
adc
mov
jp
bound
ret
cwde
sar
xor
fdecstp
std
sahf
pushf
retf
ret
pusha
inc
in
xor
cmps
xor
adc
sbb
sbb
cmp
push
call
dec
cs
in
mov
jmp
push
js
pushf
stos
pop
mov
cmp
sbb
add
push
je
xor
aam
mov
movs
mov
push
scas
push
or
jo
ja
ret
aad
mov
jg
sbb
jnp
es
gs
adc
ret
inc
repz
xor
enter
cld
enter
jp
add
adc
jmp
jmp
xchg
pop
aaa
lea
jbe
jecxz
adc
sar
cld
enter
xchg
or
shr
mul
bound
mov
xchg
pop
lea
out
mov
iret
adc
lock
dec
jg
pop
outs
push
mov
adc
loop
call
loop
fsub
sbb
ja
out
sub
and
xor
mov
pop
cmc
inc
inc
push
mov
mov
call
std
repz
xchg
and
xor
adc
in
push
ds
test
push
pop
repnz
mov
imul
daa
in
sahf
test
out
jle
and
fadd
mov
cdq
aam
mov
xchg
mov
(bad)
scas
fsub
sub
imul
cdq
add
(bad)
out
out
(bad)
cmp
pushf
xor
iret
cmp
sub
or
and
frstor
leave
jae
add
mov
and
(bad)
ja
pop
cs
lds
dec
test
shl
sbb
aad
xor
add
and
lock
pop
(bad)
push
jge
ror
jecxz
mov
test
xchg
retf
(bad)
push
ret
xchg
lea
cmp
pop
je
test
scas
and
ins
cdq
xchg
stc
jp
cmovbe
arpl
pop
xchg
xchg
jecxz
mov
add
out
xor
nop
mov
pushf
push
rcl
fucomp
add
ficomp
pop
inc
add
retf
xchg
mov
(bad)
pop
jae
and
pop
lods
jecxz
jno
mul
frstor
sti
xchg
sbb
xor
(bad)
push
lock
das
mov
mov
call
and
pop
jecxz
outs
xchg
ss
imul
lahf
lods
push
jp
push
mov
mov
sbb
out
les
jmp
in
xchg
iret
pop
addr16
xor
dec
xchg
stos
or
jne
fsubr
and
hlt
sub
sahf
add
fs
out
jne
push
(bad)
shl
gs
sbb
xchg
jo
xchg
es
xor
test
outs
or
adc
pop
neg
lods
data16
out
(bad)
dec
fs
(bad)
loopne
inc
aaa
sbb
out
jae
imul
mov
je
xchg
pop
dec
rcr
cmp
test
push
inc
(bad)
pop
icebp
(bad)
mov
xor
jecxz
mov
lahf
(bad)
jle
push
sbb
imul
clc
cmp
(bad)
xlat
aas
sbb
dec
retf
mov
add
xchg
out
inc
xchg
pop
adc
lds
mov
rol
rcl
or
in
cs
stos
gs
mov
inc
xor
and
xchg
sti
ficomp
cmps
inc
push
dec
push
or
call
inc
mov
aad
add
push
dec
iret
jnp
not
xor
dec
or
jecxz
inc
inc
and
adc
inc
adc
mov
add
cdq
inc
lods
jp
fisubr
cmc
xchg
inc
dec
ja
repnz
outs
cmp
test
ins
ficomp
sbb
outs
inc
jns
daa
and
in
jae
addr16
shr
sbb
test
pop
out
or
xor
or
sar
jecxz
pop
add
(bad)
inc
push
adc
cmc
pop
cmp
loope
imul
xchg
(bad)
in
ins
push
sub
inc
jmp
jno
push
mov
jl
or
sbb
dec
(bad)
mov
ss
sbb
dec
ficom
cmps
(bad)
cmps
gs
push
mov
jmp
cmp
dec
dec
movs
mov
xchg
cmp
je
enter
fidiv
xlat
xchg
mov
outs
inc
mov
cmp
std
mov
cmp
test
ja
jge
imul
dec
ins
xor
movs
cwde
xchg
add
sub
jle
or
pusha
sub
(bad)
imul
xchg
add
jnp
ss
sub
ins
jae
jne
and
jl
mov
fcomp
mov
(bad)
test
push
push
(bad)
out
cmp
inc
and
and
rol
in
mov
pop
push
push
pop
mov
jns
jmp
inc
lea
sub
jg
push
daa
repz
shl
pop
mov
call
and
or
ja
and
inc
mov
call
shl
or
xchg
cmp
xor
xchg
(bad)
mov
and
jnp
cmps
or
jns
xor
std
sar
(bad)
lds
cmp
not
ins
mov
int
hlt
dec
mov
lea
cwde
dec
sbb
call
fsubrp
mov
mov
mov
dec
(bad)
rol
in
dec
mov
push
fadd
cmp
loope
cmp
retf
lock
or
into
adc
jmp
mov
mov
outs
lods
sbb
addr16
ja
jge
jmp
loopne
and
inc
pop
mov
and
sub
fild
dec
jmp
lods
into
stos
pop
pop
jnp
mov
mov
popfw
(bad)
sahf
add
pop
mov
jb
push
aas
sub
mov
mov
outs
imul
jle
retf
mov
xor
mov
push
xor
push
jge
fwait
movs
mov
call
mov
inc
sub
mov
test
ror
push
ins
test
push
call
ins
mov
mov
cld
fidiv
repz
add
jecxz
sub
jle
xchg
pusha
mov
sbb
adc
jbe
xor
(bad)
outs
std
das
outs
sub
es
into
sub
xchg
ret
das
out
inc
jp
shr
or
jl
pop
adc
outs
pusha
test
sbb
jns
not
mov
daa
(bad)
or
ins
fld
das
fidivr
mov
mov
add
sbb
jne
cmp
outs
pop
iret
movs
and
out
leave
not
lahf
lahf
mov
aas
or
fldenv
aas
test
and
push
pop
xchg
jecxz
js
or
imul
mov
loopne
pop
jae
cmp
pop
mov
pop
xchg
xlat
inc
(bad)
or
sar
gs
scas
push
cmp
sti
push
inc
mov
out
loopne
mov
xor
enter
fs
clc
fwait
movs
outs
outs
xor
pop
pop
mov
jg
jne
ret
lock
mov
mov
imul
jmp
or
xor
inc
loop
dec
xchg
add
and
mov
ds
out
iret
adc
mov
popa
daa
cwde
ja
or
mov
std
shl
add
sbb
xor
inc
jns
loopne
lds
xchg
loope
sbb
fstp
cmp
adc
cmp
loopne
sbb
aas
cdq
mov
dec
cmp
mov
jae
mov
inc
pop
jno
lea
or
mov
push
pop
sub
scas
xor
pop
and
pop
fild
pop
lahf
adc
or
nop
pop
push
mov
cld
xor
out
lods
adc
in
repnz
pusha
jae
(bad)
xor
jl
(bad)
out
sub
and
and
(bad)
push
cmp
sbb
and
cmc
cmps
pop
cmp
lods
imul
xlat
les
push
mov
cmp
add
call
fucom
push
push
pop
or
ficom
push
pop
stos
add
pusha
(bad)
aas
out
retf
mov
push
je
xor
das
inc
sahf
out
xor
in
popf
or
dec
or
test
shl
jmp
or
dec
jle
rcpps
mov
add
repnz
xchg
inc
mov
push
mov
fcmovne
jmp
push
push
adc
imul
in
xchg
xor
test
push
(bad)
mov
xor
mov
xor
jmp
dec
lods
arpl
mov
aam
sar
xchg
dec
jecxz
mov
mov
lahf
fsub
enter
mov
daa
mov
mov
add
fcom
inc
mov
leave
xor
jns
iret
stc
cmp
xchg
sti
mov
aad
in
inc
mov
push
inc
out
nop
test
sub
xor
cmps
sbb
inc
ins
in
popf
dec
movs
cmps
cmc
test
mov
mov
(bad)
fs
mov
mov
aaa
jge
xchg
jecxz
push
loope
inc
dec
in
in
in
push
pop
push
sub
mov
adc
push
lock
push
in
jecxz
xchg
jns
push
push
fsubp
jb
cdq
dec
jbe
cwde
jae
into
or
test
mov
mov
shl
fucomp
mov
fmul
mov
cmp
outs
xchg
dec
aaa
push
mov
jne
and
icebp
in
daa
ret
sbb
inc
jecxz
mov
inc
icebp
jecxz
dec
jle
pop
push
out
sbb
test
sar
sub
jl
aaa
adc
mov
mov
pop
xchg
or
ja
inc
xchg
neg
mov
(bad)
stos
repnz
dec
push
lock
jbe
sbb
jno
mov
or
add
sub
mov
xlat
bound
cwde
dec
fs
cmps
call
data16
imul
mov
pop
out
dec
out
nop
mov
jecxz
inc
fidivr
mov
jg
jne
sub
test
jmp
test
jle
or
outs
mov
cmp
std
mov
mov
mov
jl
bound
adc
in
xchg
push
mov
int3
lds
data16
clc
add
icebp
push
ja
mov
jecxz
push
sbb
mov
inc
mov
icebp
dec
mov
js
imul
inc
(bad)
push
scas
mov
jmp
lds
pusha
mov
repz
pop
jae
pop
add
test
sbb
pop
pop
stos
push
cmp
addr16
arpl
in
or
scas
cld
sti
(bad)
cmp
jmp
xor
push
out
xchg
out
lea
out
les
fadd
aas
jecxz
jl
aas
sbb
mov
(bad)
dec
icebp
fmul
gs
jbe
push
mov
movs
div
gs
dec
out
xor
sahf
ret
adc
pop
add
inc
test
jl
fistp
mov
inc
or
gs
cs
imul
or
jg
pop
(bad)
and
pop
inc
clc
jge
(bad)
mov
jb
pop
ret
retf
clc
cmp
jmp
and
loopne
pop
jnp
mov
cmps
sub
pop
stos
xor
arpl
jae
sub
inc
outs
and
mov
add
push
je
sub
pushf
test
adc
mov
scas
hlt
cmps
mov
or
mov
mov
ins
xor
pop
iret
inc
cmps
sbb
shl
lds
mov
mov
push
leave
ins
push
popa
adc
in
retf
dec
scas
inc
in
(bad)
aas
add
xlat
sub
js
or
dec
xor
call
fisubr
or
pop
cmp
mov
iret
mov
xor
xchg
outs
inc
mov
fisub
test
sub
add
xlat
mov
cmp
push
call
fild
daa
sbb
and
out
jle
inc
mov
ja
js
imul
pushf
movs
cmps
cld
dec
xor
retf
loop
lds
ds
int3
popf
(bad)
jb
adc
pushf
pop
mov
pop
pusha
add
loop
cmp
lock
jb
mov
add
mov
popf
scas
mov
push
or
jge
cmp
and
test
pop
mov
mov
push
dec
and
inc
(bad)
and
aad
ss
or
sub
retf
and
pop
dec
dec
sbb
imul
inc
cmp
sub
or
or
out
push
inc
jmp
pop
jmp
add
(bad)
lods
cmp
pop
jbe
ss
mov
(bad)
icebp
lea
stos
mul
pop
mov
int
sahf
mul
xor
lahf
cmp
mov
add
frstor
into
sbb
jecxz
leave
sub
push
and
mov
imul
mov
sbb
jecxz
dec
sub
cmps
xchg
mov
xchg
loope
sub
or
fdivr
daa
inc
xchg
pushf
nop
outs
jmp
outs
lea
dec
movs
sti
call
cmps
push
sbb
jno
iret
sub
push
cmp
sbb
cmps
sahf
out
push
icebp
push
cmp
jnp
cmps
mov
sti
pop
(bad)
call
shl
mov
jo
test
push
sti
push
sub
or
adc
lods
fxch
mov
mov
imul
out
(bad)
jmp
sbb
(bad)
rcl
mov
pop
pop
idiv
push
mov
int3
aad
cmp
sar
lods
xchg
cmps
jl
out
xor
dec
icebp
data16
pop
shl
jno
daa
adc
shl
and
jmp
mov
mov
inc
pop
ret
xor
xchg
pop
xor
out
push
shl
dec
mov
inc
mov
mov
rcl
jle
mov
xor
or
jp
pop
and
jmp
sub
jl
dec
push
mov
add
icebp
loopne
mov
fist
or
push
mov
(bad)
clc
inc
push
sbb
push
lock
sub
aaa
add
push
sub
jo
sbb
sub
jne
xchg
aas
pop
inc
pop
mov
pop
pushf
inc
mov
nop
imul
cmp
retf
adc
cmp
dec
in
repz
imul
mov
(bad)
rcr
not
imul
push
mov
xlat
sbb
lods
iret
stos
movs
sbb
mov
cmp
ja
or
in
das
out
jmp
leave
shl
push
xchg
in
cmp
movs
push
push
mov
mov
call
dec
mov
fdiv
sbb
adc
test
shl
mov
or
jmp
lods
sub
xor
jne
data16
(bad)
xchg
mov
das
and
lds
imul
push
push
push
cmp
leave
pop
push
mov
mov
xchg
push
jae
into
ins
loopne
add
mov
dec
aaa
das
sub
repnz
cmp
hlt
rcr
inc
mov
gs
or
jmp
or
dec
loopne
dec
dec
ret
push
xchg
imul
(bad)
push
outs
cmps
or
dec
fcomp
add
xor
or
ret
into
cmp
xlat
jae
aam
mov
inc
push
out
call
push
mov
iret
xchg
fwait
mov
sub
das
dec
aaa
les
or
cmps
push
mov
das
mov
xchg
movs
stos
in
xchg
ret
cwde
scas
push
test
jno
repnz
loop
adc
sub
movs
into
push
dec
xor
dec
push
cmc
push
add
mov
xchg
lock
repnz
pop
aas
das
dec
je
and
or
cwde
and
push
inc
mov
pusha
xor
pop
(bad)
rcl
loop
in
fs
inc
ret
mov
xchg
or
shl
rcl
aam
mov
fs
retf
mov
leave
leave
jge
(bad)
retf
ins
and
gs
movs
lds
dec
push
dec
push
fadd
out
cmps
cmc
inc
fwait
loop
pusha
inc
js
icebp
arpl
rol
cld
arpl
ins
jne
push
or
adc
ds
sbb
rcr
jb
jmp
cmps
push
adc
xor
add
or
jg
in
push
je
mov
ins
dec
in
mov
nop
fld
jge
xchg
imul
pop
dec
push
fs
jle
test
sub
mov
cli
cli
mov
ja
jmp
push
pop
sbb
cs
adc
retf
sar
inc
mov
jne
lea
add
fld
out
sub
or
outs
das
xor
stos
xchg
inc
call
adc
out
test
dec
sbb
mov
stc
ret
mov
(bad)
inc
imul
pop
pop
sub
stc
and
add
popa
xor
add
sub
jmp
arpl
add
imul
cs
ins
and
jecxz
enter
pop
fld
mov
lock
sbb
mov
pop
jg
bound
adc
mov
add
stc
xchg
mov
fiadd
icebp
pushf
daa
cmp
and
jns
ja
dec
jns
add
add
push
sbb
fistp
lods
fucomp
inc
ja
inc
imul
sbb
and
repz
test
or
scas
mov
out
sub
jae
sub
mov
icebp
cli
jbe
xor
push
mov
adc
xor
xchg
clc
mov
test
adc
push
stos
jecxz
inc
ror
xchg
xor
push
add
sub
ror
adc
add
fwait
sub
icebp
push
pop
mov
mov
ret
dec
clc
add
push
lock
jle
lahf
jg
jmp
sub
gs
push
sbb
imul
ja
pop
fcom
push
push
dec
jno
sbb
jae
(bad)
mov
jmp
pop
es
test
repnz
mov
mov
lods
or
outs
loopne
cli
jp
xor
ins
jno
out
ja
adc
rol
in
cmp
mov
jge
out
jmp
fst
push
aad
in
cmp
pop
icebp
fimul
loope
add
sahf
xchg
cdq
ror
das
mov
ins
mov
int
jae
mov
dec
ret
or
nop
cdq
dec
mov
in
and
xchg
or
fldenv
and
iret
out
adc
cmc
sti
cmp
fisttp
and
iret
mov
icebp
ja
rcl
jcxz
pop
fcom
cwde
mov
xchg
xlat
xor
push
lahf
fst
xchg
adc
sbb
ins
int3
dec
gs
aad
pushf
or
mov
mov
sub
mov
dec
popf
pop
test
pusha
xchg
mov
push
push
(bad)
repnz
les
push
mov
lock
pop
into
fstp
push
retf
retf
pop
into
cmp
add
dec
mov
(bad)
in
sub
shr
call
mov
cwde
xchg
adc
mov
retf
pop
dec
cdq
loope
test
mov
xor
dec
dec
(bad)
enter
imul
and
jmp
xlat
scas
fsub
rcr
cmp
or
ret
jl
jnp
lea
add
mov
popa
dec
push
xchg
sbb
pop
sbb
outs
jae
inc
cmps
push
(bad)
mov
mov
xchg
inc
mov
iret
fs
fcmovnbe
out
mov
cmp
es
(bad)
std
mov
ins
mov
add
dec
or
ja
pop
jmp
jmp
fwait
rcl
pusha
fs
xchg
jmp
xchg
xor
stos
das
xor
sub
retf
icebp
mov
inc
xlat
mov
cmp
loopne
pop
stos
sub
fcom
sbb
cdq
pop
xchg
jmp
inc
repnz
sahf
pushf
loop
sbb
or
xchg
fsubr
test
pop
or
sahf
ret
pop
gs
inc
jno
dec
dec
pop
push
loope
mov
lods
jo
push
add
mov
push
xchg
call
adc
adc
nop
inc
sbb
sar
aaa
(bad)
pop
lock
dec
dec
jmp
out
mov
cmp
paddsw
fldenv
or
data16
jae
jno
cmp
out
sbb
xor
or
das
sub
inc
dec
jge
int
mov
jl
cmp
mov
adc
mov
mov
adc
(bad)
jecxz
inc
repz
ror
mov
aad
mov
fdivr
xchg
std
jle
sahf
arpl
xlat
push
adc
xor
mov
mov
stos
cmp
mov
push
xchg
sbb
iret
data16
loopne
dec
push
je
jecxz
lahf
arpl
jge
aam
jo
pop
sub
sbb
dec
or
sub
and
out
(bad)
mov
xor
jge
loope
mov
(bad)
lds
adc
sbb
cwde
dec
mov
sub
push
and
cwde
cli
push
dec
out
pop
ds
jno
dec
arpl
mov
push
pop
mov
jno
push
rol
(bad)
sbb
je
mov
imul
(bad)
xchg
xlat
out
icebp
jne
sbb
push
pop
ret
sub
pminub
enter
addr16
gs
and
xchg
cmc
mov
sub
mov
add
lea
in
pop
imul
or
retf
ret
inc
dec
movs
es
mov
mov
or
(bad)
sub
leave
mov
out
jp
pop
movs
dec
imul
bound
or
or
sti
sub
stos
ja
or
loopne
stos
sahf
arpl
jb
xor
ret
or
pop
xchg
outs
cli
dec
ja
(bad)
pusha
call
jecxz
inc
push
std
mov
in
shr
ret
sbb
mov
nop
sbb
mov
mov
jbe
sub
retf
xor
test
pop
sub
xchg
data16
(bad)
push
push
int
fwait
and
dec
sbb
inc
pop
xchg
fnsave
sub
sar
mov
inc
or
mov
enter
mov
adc
call
imul
mov
les
cmc
scas
xlat
push
mov
neg
xchg
iret
lock
adc
(bad)
fimul
popf
jb
mov
mov
in
aam
sti
es
push
fs
and
jmp
fsub
rep
inc
jmp
shr
pusha
shl
in
stos
add
shr
loope
jmp
cmps
sub
mov
xchg
std
lea
in
in
pop
push
sbb
add
dec
mov
push
or
inc
jo
sti
push
mov
xor
add
pop
or
test
and
stc
xchg
sahf
xchg
jno
or
gs
lods
and
enter
cmc
jmp
mov
cwde
popa
icebp
push
hlt
sub
dec
ins
mov
jno
xor
add
add
cmp
push
outs
movs
adc
cmp
(bad)
retf
sar
adc
cmc
pusha
push
and
fwait
sbb
sbb
dec
test
fidiv
pushf
adc
rcl
inc
jo
mov
sub
and
mov
sbb
xor
icebp
(bad)
push
js
cmp
jnp
cwde
repz
test
sub
fs
push
mov
xchg
jbe
cmp
dec
sub
lock
sar
iret
push
add
xor
fdivr
mov
xchg
dec
xchg
pop
icebp
pop
repz
xor
aad
test
mul
cmp
mov
add
bound
in
leave
in
dec
fstp
pop
sti
rcr
in
sbb
test
cmp
mov
xchg
sbb
fdivr
xor
jb
xchg
mov
ja
adc
jl
outs
aaa
scas
and
outs
sub
pop
mov
sbb
cwde
pusha
loop
xlat
adc
push
pop
cmp
pop
cmp
call
ds
jb
push
inc
sar
or
jmp
or
outs
xor
outs
push
out
xchg
jbe
sar
(bad)
test
scas
xchg
dec
pop
jle
xchg
imul
push
cld
add
push
push
lds
aas
jo
xor
int
nop
cmp
jns
mov
push
and
ins
(bad)
jbe
cmp
pop
mov
outs
daa
sub
xchg
int
adc
sahf
xor
add
xor
faddp
fild
jns
lods
xchg
mov
mov
and
scas
sub
ds
popa
(bad)
in
xchg
ins
xchg
xor
out
push
xchg
pop
in
xor
push
movs
mov
sti
jecxz
fs
xchg
and
inc
ret
mov
js
sbb
cmps
sar
mov
out
gs
and
lea
jno
xchg
mov
push
out
cmp
(bad)
push
fs
sub
inc
mov
cmc
lea
(bad)
lds
ins
ins
test
xor
jno
loop
mov
push
out
rol
push
xchg
xchg
inc
sahf
jo
in
lods
sub
stos
enter
shl
arpl
xchg
add
daa
(bad)
jne
mov
lds
inc
je
sub
in
inc
push
sti
add
pop
int3
packuswb
dec
mov
jns
xchg
xchg
(bad)
cmp
stos
dec
cwde
or
ss
stc
push
popf
sti
test
sbb
sbb
add
jmp
sahf
pushf
xchg
xchg
enter
cmp
stc
stos
sub
cmp
bound
pop
mov
test
push
retf
lods
mov
loop
cdq
and
out
jp
xchg
adc
cmps
movs
enter
rcr
rol
and
ror
aaa
push
or
fnsave
mov
pop
mov
enter
add
and
rcr
or
xchg
pop
pop
xchg
push
call
cwde
in
mov
pop
rcr
inc
sar
xor
rol
ror
xor
leave
repz
movs
popf
(bad)
add
push
push
sbb
inc
fmul
pop
cmp
sub
das
jmp
pop
xchg
adc
adc
xchg
cmps
fcomp
cmc
adc
pop
jbe
lds
int3
into
enter
stos
and
add
pop
icebp
sub
or
out
xchg
mov
rcl
and
xchg
cmps
stc
push
mov
adc
sub
fsubr
imul
mov
adc
adc
sub
cli
sahf
mov
out
pop
mov
jbe
pop
xchg
push
sub
xor
jmp
sub
pop
sbb
mov
bnd
out
fwait
je
daa
jge
sbb
push
loop
nop
pop
cmp
cmp
mov
pop
clc
mov
jae
jmp
mov
nop
jno
sub
lods
ret
xchg
sti
jb
(bad)
cdq
(bad)
xchg
sbb
aam
mov
mov
mov
xacquire
jb
and
jo
dec
push
cmp
leave
xchg
jge
inc
push
jnp
jmp
loop
mov
daa
push
push
cwde
addr16
out
jnp
cmp
fbld
fadd
and
das
pop
repz
lea
shl
adc
div
jle
into
ret
test
int3
out
outs
add
mov
mov
xchg
in
addr16
jb
popf
or
stos
mov
xchg
fild
bound
je
loop
cmp
push
movs
aas
mov
push
ret
sbb
mov
mov
fucomip
inc
xor
out
int3
jb
mov
inc
bound
or
inc
sbb
mov
test
arpl
shl
adc
mov
popa
push
in
inc
fwait
mov
inc
mov
arpl
fst
in
test
int
mov
cmp
out
pop
fwait
adc
mov
jno
mul
add
hlt
jge
ror
sub
in
lss
mov
lods
out
pop
jle
mov
test
jmp
add
adc
mov
icebp
(bad)
cmp
and
mov
add
popf
pushf
fldcw
mov
sbb
je
dec
or
icebp
(bad)
push
pop
dec
xchg
stos
jns
xor
sbb
jle
jp
arpl
xor
data16
adc
or
mov
mov
in
mov
pop
mov
scas
adc
jp
and
scas
fsubr
sbb
mov
cmp
stos
cmp
shr
mov
ret
cwde
mov
lods
in
jbe
cmp
gs
dec
scas
xchg
mov
mov
push
out
ins
in
ins
mov
aam
add
inc
sbb
mul
sbb
sbb
jb
gs
ins
enter
div
mov
inc
jl
sbb
fisubr
add
pop
popf
stc
call
xchg
pop
push
push
ret
jae
int3
cmp
mov
push
and
mov
(bad)
inc
imul
pop
in
pop
mov
lock
mov
pushf
mov
push
xor
lock
(bad)
lock
sbb
lods
outs
das
or
pop
sub
push
cmp
cwde
stos
cmp
fcmovbe
add
andps
les
mov
call
pop
xor
pop
adc
mov
sub
in
pop
addr16
mov
sub
mov
push
dec
cdq
repz
push
sub
inc
sub
mov
(bad)
pop
pop
jnp
sub
leave
out
and
test
aad
pop
call
fsubr
adc
(bad)
sbb
inc
cmp
mov
daa
retf
push
inc
sbb
mov
xchg
inc
cmps
in
in
pop
inc
push
outs
adc
stos
push
adc
(bad)
es
sub
es
lods
pushf
or
imul
mov
rcl
dec
jge
fld
mov
stos
das
gs
mov
jecxz
inc
retf
dec
(bad)
adc
sub
mov
adc
lock
lock
and
add
scas
adc
xchg
sti
(bad)
mov
fdiv
cmps
cmp
imul
aas
mov
popf
inc
pusha
xor
fwait
xor
mov
clc
dec
fwait
sub
je
mov
les
pushf
aam
(bad)
fcomi
sub
fwait
jl
test
int
idiv
arpl
aam
repnz
leave
jl
jno
mov
pop
call
mov
pop
retf
cmp
adc
xor
(bad)
jmp
sbb
call
lea
mul
xchg
jne
pop
mov
pop
lods
pop
or
sbb
aam
push
add
adc
inc
mov
push
mov
ret
cdq
sub
retf
fmul
js
pop
stos
jle
inc
int3
jge
mov
jmp
pusha
(bad)
push
out
ss
repz
cmp
ins
and
test
mov
test
sub
lahf
or
outs
mov
fsubr
pop
test
adc
xchg
pop
mov
inc
movs
loopne
sar
xor
cli
icebp
add
xor
sub
mov
cdq
(bad)
mov
mov
scas
sub
test
imul
mov
rcl
jne
jae
xchg
xor
movs
mov
sub
fnsave
adc
stos
dec
push
lea
adc
inc
sbb
sub
repnz
call
mov
lea
pusha
pop
sub
xchg
sub
pop
xchg
lahf
jecxz
ror
stc
mov
mov
test
pop
xchg
clc
sbb
in
aam
aaa
cmp
push
popa
or
pop
repz
xchg
cmp
outs
dec
fwait
scas
popf
xor
cmp
int
xchg
push
mov
cmp
mov
fiadd
or
cdq
jl
push
cmp
bnd
mov
cmc
xchg
xchg
sub
rcl
lock
std
sti
mov
test
sbb
outs
lahf
mov
xchg
mov
(bad)
dec
bound
cmps
fwait
dec
bound
push
cld
push
mov
xor
pushf
cmp
push
pop
xor
sub
sti
adc
cmp
add
xor
aas
inc
mov
nop
jmp
dec
sbb
jno
and
pop
(bad)
pop
std
aas
fiadd
cmps
mov
mov
fsub
xchg
add
cld
adc
sahf
scas
push
add
(bad)
ret
dec
test
sub
add
cmp
cld
iret
jno
push
inc
pop
ror
mov
ds
test
daa
mov
movs
lds
pop
call
sub
int
cwde
and
push
xchg
mov
inc
xchg
mov
xchg
xor
sbb
cmp
sbb
lahf
into
jmp
mov
cmp
xchg
xchg
jbe
pop
in
ds
call
ins
out
aad
add
mov
push
cdq
and
in
aad
mov
push
push
ret
pop
lods
mov
or
call
ret
or
xchg
jae
mov
xlat
pop
test
out
jle
xchg
les
mov
fidiv
add
retf
ss
popa
pushf
inc
push
sahf
loope
adc
scas
test
es
ret
out
test
sbb
dec
addr16
sti
les
xchg
push
sub
out
cmp
hlt
movs
pop
rol
xor
add
rcr
mov
loope
push
stos
adc
aad
aam
xchg
stc
lahf
(bad)
xor
push
retf
pop
xor
adc
push
fstp
loop
nop
cmp
pop
adc
jmp
sbb
push
jle
add
div
adc
js
jmp
aaa
inc
mov
rcr
push
pop
jnp
xchg
sub
idiv
xor
std
outs
mov
call
jle
mov
rol
adc
popf
mov
pop
inc
add
adc
inc
retf
std
push
mov
add
push
mov
rcr
ficom
or
pop
lods
adc
push
pop
cmp
jns
jo
xchg
add
mov
mov
inc
inc
xor
jmp
ins
outs
sub
js
push
cwde
xor
int3
sub
mov
int
push
loop
pop
push
push
or
pop
jg
fmul
(bad)
push
rcl
or
mov
add
div
or
ss
sub
and
mov
daa
cmp
cmps
out
ror
xor
jecxz
and
jecxz
xor
push
mov
out
fsubr
push
and
or
sub
xchg
xchg
lock
sahf
js
lahf
aad
stos
push
fidivr
shl
inc
add
shl
jo
(bad)
xchg
adc
pop
and
ss
ret
xchg
scas
ror
pop
dec
leave
jns
xchg
cmp
xor
mov
aad
fs
repz
mov
outs
or
pop
repz
dec
cmp
std
lods
movs
std
adc
mov
dec
or
mov
sbb
mov
sub
js
fdiv
dec
lds
std
inc
ds
mov
dec
and
mov
(bad)
jg
mov
mov
idiv
xchg
mov
add
jns
scas
or
or
dec
xchg
test
popf
lahf
cmp
jae
cs
jg
push
pop
enter
and
out
or
in
dec
push
mov
xchg
pop
mov
lahf
(bad)
ss
xchg
jne
je
seto
fiadd
push
std
push
iret
dec
call
and
lods
bound
stos
out
imul
call
adc
mov
sub
push
xor
jns
sti
xor
rcr
in
mov
adc
push
push
push
pop
in
add
xchg
push
mov
es
pop
jg
sahf
cwde
sub
les
mul
pop
sub
xchg
jns
lds
jecxz
adc
popa
adc
cs
xchg
adc
fdiv
jnp
loope
mov
test
push
jg
movs
ins
sub
ja
jns
clc
inc
out
aaa
sbb
xor
adc
aam
mov
cli
sub
arpl
xchg
jb
pop
(bad)
aas
nop
test
pop
xchg
lods
jle
icebp
outs
call
sub
mov
repz
popf
dec
fisttp
daa
pop
add
pop
ret
dec
js
dec
mov
push
ret
mov
or
mov
cmp
cmps
inc
sbb
push
pop
jb
repz
sub
mov
shr
(bad)
xor
add
xor
fsubr
adc
mov
lahf
xor
mov
repz
loop
mov
adc
inc
mov
sbb
fwait
cli
imul
or
div
sbb
jo
imul
push
inc
(bad)
sbb
mov
push
sbb
cmp
or
sbb
and
lea
call
mov
add
cmp
fdivp
hlt
inc
aas
cmp
pop
dec
movs
jne
xchg
or
rol
cli
outs
inc
loopne
ins
das
sbb
xlat
rcr
movs
call
enter
(bad)
sub
jo
cmp
pop
cmp
inc
in
aas
pop
or
xchg
cli
sbb
adc
inc
std
or
mov
push
fucom
add
dec
ss
ja
outs
jle
pop
push
mov
and
repz
add
popa
std
jbe
mov
lods
cmp
and
fld
ret
jmp
outs
call
push
fsubr
cwde
mov
xor
pushf
aaa
dec
mov
ret
out
sbb
push
sbb
lods
dec
sub
aaa
cmc
std
cmp
out
inc
ds
push
mov
(bad)
sar
adc
lods
jne
jbe
xor
scas
(bad)
ja
imul
pop
jge
jns
stc
shl
pop
add
sbb
jge
scas
loope
sbb
(bad)
(bad)
daa
pop
jo
in
pop
les
loop
out
aad
outs
ins
cmps
enter
inc
xchg
outs
test
xchg
cmp
mov
mov
xor
sbb
stos
push
mov
rcr
rcl
leave
mov
cmp
(bad)
cmps
sbb
jecxz
data16
retf
push
xor
cmp
ss
in
lods
call
out
fwait
and
(bad)
sub
mov
sbb
psubsw
adc
(bad)
mov
mov
mov
pop
xor
push
and
addr16
mov
into
loopne
iret
cmp
stc
aas
mov
adc
or
daa
or
mov
push
sub
sbb
lock
jb
xchg
sbb
mov
inc
mov
lds
inc
push
into
mov
fisubr
sbb
and
into
push
xor
xchg
pushf
mov
pop
scas
adc
stos
fidiv
push
or
int3
sub
sub
imul
fisub
add
mov
and
retf
data16
les
gs
jle
sbb
mov
pop
shl
(bad)
lahf
fcmovne
pop
stos
xchg
jmp
call
in
cmps
add
dec
frstor
mov
stc
push
jg
cwde
and
das
and
mov
lds
mov
adc
dec
mov
cwde
fcmovnb
pop
mov
sbb
stos
xor
sbb
pop
or
xor
mov
pushf
adc
cmp
lods
(bad)
jecxz
jmp
clc
cdq
push
mov
test
faddp
shl
fs
and
movs
shl
mov
aam
gs
loopne
jecxz
pusha
fwait
cmps
xor
add
or
cmp
popf
lahf
push
push
sbb
push
jmp
mov
fimul
jg
retf
add
std
shl
pop
or
or
scas
rcr
ja
xchg
cmc
push
jno
inc
push
rcl
inc
aad
dec
mov
adc
add
pop
ret
and
out
dec
push
retf
movs
jmp
xor
imul
xor
popa
cld
jmp
sub
mov
xchg
cmp
sbb
dec
pop
sbb
inc
push
mov
scas
xchg
loopne
popf
dec
stos
xchg
mov
pushf
cmc
(bad)
mov
pop
mov
mov
push
(bad)
js
mul
clc
dec
xchg
test
adc
cli
es
push
icebp
lods
xor
mov
mov
outs
ja
xchg
fimul
jle
mov
xchg
pop
fst
push
sbb
test
out
jne
mov
scas
jae
movs
jmp
(bad)
rol
pushf
into
out
pop
aas
in
jbe
xchg
(bad)
sbb
ret
push
ror
dec
imul
jae
push
nop
int
in
repz
pushf
iret
loopne
mov
mov
adc
mov
out
rcl
inc
neg
and
xchg
(bad)
(bad)
mov
repz
pop
in
out
mov
pop
cld
sbb
and
push
push
imul
or
push
les
sub
and
(bad)
dec
sti
out
int
stos
pop
sbb
and
je
jne
lahf
mov
push
daa
aad
jnp
or
jns
cmp
mov
lea
mov
sub
inc
jecxz
aas
nop
dec
fimul
cmp
fdivrp
xor
outs
(bad)
push
mov
cmp
cli
lea
jge
mov
xor
mov
data16
pop
push
mov
dec
retf
ins
fist
or
inc
leave
cmps
out
cmp
fimul
in
not
fwait
sbb
fistp
repnz
jmp
mov
stc
nop
push
out
stos
pop
pushf
mov
inc
adc
cmps
in
or
adc
add
ja
ret
lds
jl
dec
cmp
jmp
mov
div
into
mov
enter
mov
test
push
fsubrp
fst
mov
cmp
neg
stos
jns
sub
fbstp
dec
jl
test
(bad)
aas
jnp
stc
ins
int
into
or
sbb
jb
mov
retf
xchg
mov
sbb
sub
stc
mov
sbb
mov
inc
popa
sahf
popf
stos
xor
ret
and
pop
pushf
push
les
stos
sub
cmp
jnp
into
lods
popa
dec
jmp
adc
jp
loope
cwde
pop
inc
cdq
or
lock
scas
or
idiv
and
or
add
cwde
addr16
adc
mov
(bad)
mul
sbb
mov
jno
dec
cli
outs
xor
ins
cmp
sbb
call
arpl
ret
jns
imul
fcomi
sub
jle
pop
fild
cmp
call
hlt
ja
pushf
iret
shl
aam
xchg
mov
lock
mov
dec
(bad)
mov
cdq
loopne
push
xchg
jle
out
mov
sbb
in
mov
movs
mov
pop
not
jo
stos
adc
mov
mov
in
inc
pop
mov
push
popa
mov
retf
imul
adc
nop
test
push
cmps
pop
xchg
test
lods
rcr
popa
popa
movs
(bad)
adc
inc
lea
sbb
mov
popf
dec
test
pop
adc
out
shr
out
out
enter
dec
jge
fwait
inc
scas
xor
fld
sbb
sub
jb
xchg
fwait
call
ins
das
pop
xchg
fwait
mov
inc
pop
mov
add
cmp
and
movs
pushf
clc
les
cld
in
mov
jp
in
push
pusha
addr16
adc
and
jmp
sar
xchg
out
jo
std
fwait
push
xlat
push
out
sub
sbb
cmp
retf
and
add
push
hlt
jecxz
mov
jb
dec
jecxz
mov
xchg
xchg
iret
add
mov
xlat
sbb
je
(bad)
popa
fwait
pop
mov
xor
jno
mov
mov
sub
inc
in
scas
cmp
lods
outs
and
into
sub
leave
cmp
and
lds
jmp
push
inc
arpl
or
mov
mov
jo
imul
popf
dec
mov
(bad)
hlt
test
pushf
fsubrp
leave
xchg
mov
mov
hlt
retf
push
(bad)
mov
mov
fbld
lds
xlat
sbb
adc
in
fisttp
sub
and
test
lock
movs
inc
aas
jae
cwde
mov
pop
shr
add
mov
pop
out
add
push
sar
xchg
sub
xchg
(bad)
(bad)
popf
shl
es
or
mov
sub
jl
clc
jns
xchg
pop
bound
aad
sub
scas
xchg
dec
mov
out
pop
ss
imul
sti
stos
xchg
and
aaa
imul
icebp
hlt
cmp
mov
lahf
in
jne
pop
loop
movs
xchg
or
ins
adc
inc
and
adc
jecxz
jle
push
and
mov
xchg
cmc
mov
jmp
or
aam
rcr
dec
dec
cmps
fs
dec
jne
sbb
lahf
push
jns
xor
(bad)
mov
leave
ret
loop
adc
jae
sbb
pop
push
in
xchg
fucomi
aad
add
xchg
test
push
(bad)
cmp
fwait
(bad)
sbb
out
popa
jo
cmps
push
mov
sbb
jmp
mov
les
xor
mov
xchg
bound
pop
cmc
inc
leave
cmp
lds
pop
jle
int3
rol
clc
ja
xchg
je
es
pop
xchg
inc
hlt
sbb
jb
jo
stc
mov
dec
mov
das
pop
popf
ins
pop
xchg
lahf
dec
out
cmp
pop
push
sbb
xor
dec
ins
jp
(bad)
sbb
xbegin
cmps
pop
daa
inc
cmps
mov
push
outs
cmps
push
jle
pusha
push
clc
jle
outs
push
aaa
inc
ins
and
mov
sbb
dec
jnp
sub
pop
icebp
mov
clc
lock
sub
sar
pop
lods
add
arpl
jmp
repz
xor
cmp
dec
pushf
xchg
loopne
cmps
mov
test
add
mov
mov
cli
jl
adc
ins
adc
call
dec
sub
sub
mov
bound
imul
pop
pop
outs
mov
xchg
lahf
iret
inc
adc
jno
xlat
fld
or
jb
scas
stos
jb
jl
adc
inc
mov
add
sub
out
stos
or
add
mov
inc
or
cmc
xor
cld
adc
mov
jae
cmp
into
or
and
adc
pop
shr
pushf
push
jo
push
retf
add
aad
cmp
push
aad
and
mov
lahf
(bad)
loopne
mov
mov
mov
jns
and
stos
shl
pop
cmp
cmp
stc
in
dec
pusha
aam
enter
imul
jnp
test
shl
hlt
retf
sub
das
mov
js
dec
xchg
sti
imul
xchg
push
fdivrp
stos
jno
push
add
ret
cmc
mov
rol
psrlq
jbe
jle
or
dec
adc
push
in
push
fimul
popa
cdq
mov
mov
or
stos
call
call
xor
xor
(bad)
aas
xchg
jo
sub
dec
pop
jl
repnz
imul
cmp
inc
enter
lods
cmp
lea
in
xchg
mov
sti
rcl
imul
fiadd
jnp
test
sub
or
call
dec
mov
dec
dec
dec
pop
bound
call
loopne
xor
pop
into
sbb
mov
(bad)
mov
xlat
pop
rcl
and
jnp
cld
movs
test
ins
push
mov
push
cdq
xchg
(bad)
xor
dec
pop
in
gs
or
popf
jo
mov
push
enter
ins
sub
jmp
pop
retf
daa
(bad)
rcr
mov
push
jle
aam
push
xchg
pop
(bad)
(bad)
pop
imul
mov
cmp
cmp
in
mov
mov
fistp
push
(bad)
cmps
sti
dec
push
cmps
add
jb
or
dec
inc
(bad)
movs
sub
xchg
imul
stc
das
stos
dec
call
pushf
ja
stos
idiv
out
es
pop
inc
in
repz
xchg
adc
aad
in
inc
jnp
test
popf
popa
rol
mov
cwde
or
imul
xchg
loopne
sbb
jle
dec
lods
fisttp
pop
ret
fcomp
es
mov
pusha
lahf
xchg
mov
inc
popa
push
push
mov
push
call
hlt
daa
out
xlat
mov
sbb
pushf
dec
(bad)
jecxz
jmp
sbb
xchg
mov
clc
loopne
sub
mov
jecxz
xchg
and
in
cmp
imul
jae
int
xchg
sub
call
das
jmp
sar
lds
add
xor
cmp
outs
pop
xor
dec
push
add
movs
pop
(bad)
cwde
imul
call
cmp
cmc
neg
xor
test
stc
dec
call
lds
in
push
ja
clc
push
cmp
inc
push
mov
cmp
mov
arpl
pop
jnp
stos
xor
mov
gs
pop
shl
mov
jne
(bad)
cmps
scas
and
mov
pop
fldenv
mov
jle
jmp
(bad)
or
pop
jb
mov
dec
arpl
xchg
out
or
mov
and
stc
pminub
mov
inc
loope
mov
shl
or
mov
or
loopne
or
test
xchg
stc
add
mov
aas
add
mov
dec
leave
sahf
pop
mov
pop
cmp
shr
mov
es
enter
dec
mov
int3
stos
jb
sbb
mov
rcr
std
out
xchg
scas
out
cmp
jl
jo
push
jmp
xor
bnd
in
test
dec
add
int3
hlt
fcmove
dec
xor
test
repz
sti
sbb
and
adc
in
test
xchg
(bad)
jl
outs
inc
aas
fnsave
dec
shr
je
jg
lahf
mov
loopne
mov
lahf
inc
sub
xchg
dec
ja
call
sbb
sbb
add
dec
repz
adc
test
popa
pusha
mov
cmp
mov
push
pushf
(bad)
push
xchg
add
mov
scas
pop
xchg
adc
jge
mov
in
xchg
xchg
sbb
ds
inc
pushf
ds
xor
sbb
sub
sahf
inc
sub
pop
out
jmp
push
push
ds
xlat
cmp
xor
leave
in
push
sbb
stos
jp
jl
in
mov
ror
push
push
or
inc
mov
lds
or
push
enter
adc
pusha
jmp
loop
xor
xchg
ja
adc
js
cli
jl
push
aas
imul
int3
(bad)
scas
xchg
sub
cmps
or
sub
or
cmp
push
clc
xor
cs
lods
dec
clc
sbb
cmp
lods
shl
dec
test
push
inc
cmc
fisub
push
lods
or
(bad)
fild
dec
mov
mov
int3
or
retf
pop
cmc
enter
adc
jl
stos
push
sub
cmp
out
pop
jbe
xor
or
mov
lods
test
xor
jo
mov
inc
mov
and
ror
adc
xchg
int3
or
out
mov
das
pop
push
add
mov
cmp
jnp
mov
push
fst
cmp
rcr
adc
retf
shl
pop
dec
fmul
mov
lds
xchg
add
int
in
(bad)
or
xchg
push
dec
js
popf
dec
or
xor
imul
adc
nop
fmul
sbb
bound
test
mov
sub
push
push
je
ins
cdq
mov
jo
push
xor
mul
call
inc
xchg
and
mov
std
cld
jo
push
scas
inc
std
ret
mov
retf
test
nop
fsub
cmp
cmp
pushf
scas
push
mov
scas
leave
dec
shr
leave
sar
pop
cmp
push
cs
dec
push
pop
ret
mov
pop
add
ret
aaa
adc
mov
and
push
repz
jg
in
xor
ret
arpl
jp
xor
adc
push
dec
push
fmul
mov
data16
dec
fimul
jno
movs
les
movs
xchg
add
arpl
out
bound
mov
sbb
sbb
jmp
xor
adc
sub
and
cmp
mov
addr16
scas
dec
or
push
loopne
jb
dec
mov
repz
inc
mov
xchg
push
cmp
call
add
adc
xchg
jge
xchg
sti
push
out
int
sub
cmc
retf
outs
cdq
xor
movs
sub
aam
xor
xor
inc
push
nop
add
xor
mov
and
std
mov
std
ins
xchg
and
add
movs
cwde
loope
repnz
mov
add
int3
xchg
and
pop
sub
push
popa
jp
push
inc
int
pop
or
imul
xchg
dec
in
je
icebp
and
push
mov
cld
xchg
jl
nop
aad
stos
icebp
retf
dec
sub
inc
aaa
pop
adc
mov
js
jge
das
jmp
mov
and
mov
cmp
iret
jl
pusha
jl
fcomp
mov
push
pop
xchg
fsubr
icebp
mov
jl
fst
retf
mov
into
add
out
ficomp
jle
fcomp
cld
sbb
jl
jl
dec
mov
mov
aaa
push
test
jno
sbb
fchs
jg
fwait
das
cdq
cs
repz
out
popf
push
jg
stos
iret
scas
out
inc
sub
(bad)
cmp
fld
sbb
or
je
cdq
in
sbb
add
iret
push
and
movs
cmps
fisubr
xor
leave
sbb
push
sbb
push
(bad)
scas
sub
mov
pop
enter
pusha
pop
push
mov
call
dec
movs
(bad)
jno
push
test
sub
fnstcw
cmp
into
in
and
fnstsw
push
mov
sub
adc
sbb
fcom
fiadd
retf
movs
push
test
pop
jge
cs
add
loop
(bad)
cli
and
data16
loop
add
aas
mov
gs
or
cmovs
jns
in
xchg
ffreep
or
aas
mov
je
mov
sbb
mov
push
aad
retf
ins
jne
xchg
mul
mov
(bad)
dec
xchg
sbb
enter
cmp
and
ret
popa
inc
movs
push
movs
mov
push
out
in
xor
inc
push
es
sahf
dec
mov
fnstcw
arpl
sub
inc
jb
mov
stos
inc
loop
jle
push
pusha
mov
jo
add
cmp
sbb
and
inc
and
cmp
stc
push
cmp
in
inc
out
leave
inc
ins
sahf
cmp
and
pop
movs
push
and
jmp
cwde
xlat
ffreep
sub
das
dec
lods
inc
jmp
es
push
adc
mov
cmp
cmp
xlat
push
cs
faddp
xlat
mov
cmp
or
push
out
cs
dec
fs
cmp
outs
iret
fdivrp
inc
xchg
xchg
pop
mov
in
(bad)
xor
sub
jb
popf
dec
inc
cmp
push
(bad)
scas
pop
sub
clc
stos
les
sub
daa
inc
xchg
and
push
clc
adc
ja
repz
mov
std
cmp
jbe
movs
jle
push
push
sbb
cs
adc
xor
sar
xchg
mov
das
inc
push
mov
mov
out
lea
in
sbb
dec
mov
dec
jnp
mov
scas
xor
push
jg
addr16
aam
push
inc
pop
out
or
push
jnp
cmps
mov
pop
pushf
mov
inc
cmp
add
mov
push
add
push
pop
push
xor
xchg
ret
jae
fs
push
push
repnz
stos
jb
jmp
push
cld
int3
push
jne
xor
mov
mov
pop
in
mov
mov
pop
inc
push
mov
stc
sub
shr
out
pop
cwde
in
neg
mov
rcl
(bad)
xor
jecxz
jg
push
or
mov
push
jns
mov
push
mov
pusha
out
push
call
inc
repnz
movs
mov
dec
adc
sub
xchg
push
mov
aam
or
in
test
data16
add
add
mov
cmc
fidivr
out
stos
inc
ss
or
(bad)
aaa
sub
outs
mov
sbb
fwait
and
cs
xor
jge
arpl
adc
adc
retf
mov
pop
push
xchg
addr16
add
movs
dec
jne
or
rcr
scas
(bad)
fs
arpl
mov
adc
sbb
in
jne
jno
mov
xchg
(bad)
jle
and
pop
int
aam
fs
jno
cs
jmp
arpl
imul
and
cs
xchg
push
sub
fidivr
into
jnp
mov
cmps
cmp
outs
stc
jnp
add
out
or
or
in
popf
add
pop
int3
inc
popf
jb
pop
pop
enter
sahf
lods
leave
adc
fldcw
adc
or
cmps
pop
sbb
scas
std
and
lods
push
fisub
fcomp
mov
lods
lods
icebp
push
mov
mov
adc
popf
mov
lahf
cmp
inc
fisubr
popa
das
mov
dec
sub
inc
ret
push
push
mov
popf
fwait
into
nop
add
sbb
fdiv
sbb
hlt
or
fdivr
fimul
mov
and
je
loopne
in
mov
dec
cs
cwde
sqrtps
fsub
popa
(bad)
pop
jg
int3
sub
das
loopne
cmc
add
jmp
retf
dec
jns
loope
jecxz
adc
pop
pop
(bad)
aad
mov
(bad)
js
and
arpl
inc
dec
xchg
mov
movd
ja
int3
inc
or
test
xor
dec
or
xchg
push
repnz
addr16
ins
xchg
jecxz
fwait
nop
rcl
mov
pop
icebp
and
mov
and
call
cs
pop
add
lock
jo
out
jnp
aaa
push
es
(bad)
mov
iret
xchg
or
(bad)
adc
xor
out
adc
loope
rcl
sub
push
data16
add
sbb
xlat
push
and
or
mov
loop
xor
jo
pop
test
push
into
pop
test
inc
push
jb
xor
add
xchg
sahf
fwait
pop
and
xlat
ftst
sbb
mov
dec
out
sbb
push
repz
cs
inc
shl
jae
adc
(bad)
pop
jb
or
dec
(bad)
mov
push
lods
push
aas
adc
pop
retf
adc
test
mov
or
xchg
cwde
pop
stc
fbstp
sbb
jmp
call
sti
icebp
xchg
int3
mov
stos
test
jl
xchg
mov
les
push
jo
pop
sub
adc
mov
in
xchg
sbb
sub
cdq
mov
out
add
or
jae
in
rcr
outs
pop
mov
outs
repnz
xor
fsub
adc
sub
pop
div
fcom
les
test
xchg
fld
rol
adc
cwde
aad
pop
mov
mov
imul
inc
jne
fcom
gs
push
(bad)
test
mov
push
xor
ror
jg
xor
out
dec
push
fcomi
retf
loope
repz
ficom
xor
nop
popf
sbb
xchg
pop
daa
jns
out
loop
jecxz
idiv
cs
push
push
data16
fistp
aam
sbb
in
out
dec
fsubr
fwait
pop
and
push
pusha
push
aaa
jne
fcom
sbb
or
test
sbb
enter
pop
xchg
mov
dec
mov
inc
push
push
pop
xchg
xchg
push
push
shl
inc
mov
pop
or
inc
sub
jno
and
movs
gs
pop
xlat
not
lods
xor
xor
ins
push
or
pop
cmp
mov
pop
push
dec
lock
popa
mov
mov
xchg
fucomp
cmp
lods
jmp
fwait
rcr
jb
pop
jmp
cli
cmp
or
push
dec
in
mov
mov
jp
add
dec
mov
or
aaa
imul
cmp
out
test
retf
imul
(bad)
outs
cmps
cmps
(bad)
clc
mov
lock
sahf
mov
jbe
push
(bad)
sub
mov
dec
(bad)
mov
pop
scas
xor
retfw
adc
cs
imul
test
xchg
lds
(bad)
mov
mov
push
mov
mov
bound
in
mov
mov
xchg
xor
dec
mov
cmp
scas
mov
(bad)
fisub
in
cmp
fmul
or
movs
jo
pop
fmul
cmp
cmp
dec
cmp
(bad)
xor
dec
cs
fs
in
int
add
jne
push
into
and
inc
ins
cmps
push
mov
(bad)
shl
mov
(bad)
cmp
sub
cmp
in
dec
jb
adc
(bad)
pop
pop
ret
jmp
fwait
lea
lods
push
aaa
adc
rcl
sub
cmp
dec
jecxz
xchg
sbb
mov
lods
xchg
inc
adc
(bad)
inc
fidivr
test
and
cmp
jle
ja
data16
in
clc
sbb
mov
sbb
adc
adc
nop
inc
cmps
je
sbb
pop
iret
pushf
hlt
or
js
or
xchg
mov
cmp
sbb
mov
ins
pusha
sbb
xor
data16
mov
adc
pop
jb
lock
ja
mov
ins
mov
sub
push
mov
out
fmul
data16
div
rcr
push
jge
movs
xchg
stc
xchg
mov
sub
imul
fst
jg
dec
mov
push
movs
or
and
fiadd
mov
test
and
mov
or
ror
sub
(bad)
cmp
jns
fwait
mov
xor
jg
scas
mov
out
xor
push
xor
inc
adc
cs
sub
sub
shl
imul
mov
int3
es
cli
fmul
adc
mov
sub
xor
inc
inc
das
sbb
pushf
cmps
cmp
aam
daa
dec
add
inc
fld
shl
and
sbb
out
push
mul
ret
sub
fnstenv
inc
dec
je
les
fdiv
cmc
mov
aam
add
mov
pop
pop
int3
jbe
shr
sti
add
or
xchg
iret
data16
inc
xchg
sar
lahf
xlat
mov
push
xchg
adc
adc
push
or
stos
test
mov
lods
ret
dec
(bad)
and
nop
mov
outs
js
add
hlt
es
sbb
sbb
lds
sbb
gs
adc
cmp
sbb
and
cmp
dec
sbb
mov
aaa
mov
push
xor
loopne
cmps
inc
dec
pop
rcr
inc
mov
(bad)
stc
inc
popf
je
sahf
leave
lods
jnp
popf
retf
scas
inc
add
lock
repnz
lods
add
dec
mov
push
jae
pop
cld
adc
enter
daa
jp
or
jp
popf
aas
data16
pop
daa
inc
dec
ins
xor
push
retf
aaa
cld
ss
imul
sbb
cli
add
sub
imul
mov
jmp
xchg
in
cmc
fadd
sub
mov
sar
or
cli
popf
test
push
test
imul
pop
and
xchg
push
pusha
sub
push
xor
xchg
popf
int
iret
add
int
dec
mov
adc
xchg
scas
sahf
add
stos
fild
psrld
call
jmp
push
dec
pop
scas
jo
xchg
imul
out
bound
cld
mov
bound
sbb
fist
dec
cli
into
test
push
mov
dec
sahf
sub
push
push
retf
repz
inc
pushf
inc
test
pushf
jae
inc
dec
bound
fsubp
pop
ins
inc
fwait
lahf
xor
sub
aam
sub
lock
pushf
mov
pop
gs
jge
lods
or
in
cdq
mov
mov
(bad)
fld
nop
cmp
addps
push
(bad)
cmp
and
sar
jmp
ins
jb
in
pusha
mov
inc
leave
je
sub
xchg
inc
scas
or
(bad)
(bad)
mov
sub
jmp
movs
movs
jae
rol
loop
fisubr
adc
es
(bad)
dec
popa
lods
cmp
push
xchg
in
bound
js
mov
sbb
xchg
inc
mov
add
dec
sar
add
dec
xor
lods
dec
inc
aaa
add
sub
test
and
xor
mov
add
pop
inc
dec
adc
cwde
mov
jle
(bad)
jmp
lahf
fimul
js
pop
cmc
mov
stos
jns
jmp
repnz
xor
dec
fbstp
inc
aam
dec
clc
sbb
or
xor
cmps
test
pusha
cmp
push
in
lods
dec
mov
pop
int
xchg
jae
jg
jae
xchg
int
jp
clc
push
xlat
(bad)
scas
jmp
ja
aad
retf
inc
test
push
mov
fsubr
pop
xchg
call
push
scas
movs
add
pusha
shl
call
inc
stc
into
mov
xor
outs
imul
(bad)
push
shr
loope
jmp
jle
pop
add
xchg
push
inc
jl
pop
pushf
xor
mov
cmc
ins
mov
loopne
xor
int
xchg
jmp
test
add
in
or
sbb
add
sbb
in
pop
push
push
retf
mov
and
pop
imul
sbb
pop
push
addr16
jge
jno
mov
pop
xchg
pmaddwd
sbb
lods
adc
(bad)
dec
jge
ret
es
mov
adc
dec
icebp
xor
xchg
sbb
sub
xchg
push
xchg
push
xor
sub
xor
(bad)
ss
loop
dec
lods
cmp
adc
je
or
inc
icebp
jb
xor
cld
push
ja
add
sahf
xchg
sar
jbe
cmps
outs
push
dec
jp
repnz
scas
push
outs
rcr
jno
adc
push
cmp
mov
cwde
call
mov
xor
jmp
aam
mov
jae
mov
mov
mov
mov
inc
cwde
loopne
sbb
or
cs
aas
xor
cmp
retf
rol
fist
or
and
dec
in
adc
daa
sub
ja
cmp
ret
fistp
jp
(bad)
fdivr
call
and
(bad)
jge
inc
pusha
or
mov
retf
xchg
cmps
pop
movs
adc
mov
bound
dec
mov
jl
or
or
mov
pop
inc
mul
xchg
cmps
xor
popa
mov
mov
cmp
stos
xchg
xchg
loop
inc
lock
xor
mov
retf
adc
int3
out
xor
cmp
and
fmul
imul
push
punpckhdq
mov
data16
retf
imul
adc
dec
xor
pop
jo
push
inc
push
or
mov
ins
dec
test
mov
enter
les
cmp
dec
repnz
popa
pop
xchg
sbb
inc
popf
out
jg
add
and
mov
jbe
std
cwde
cmp
(bad)
js
sbb
push
adc
add
jp
xor
mov
call
push
or
div
in
cmps
lods
push
sub
inc
clc
pop
sahf
pusha
cwde
sti
pushf
adc
in
fldcw
clc
fsub
mov
js
sub
(bad)
loopne
pop
jg
jbe
mov
retf
popa
push
(bad)
sbb
mov
jmp
fs
outs
xchg
jle
mov
movs
push
xor
bound
sub
pop
call
retf
cmp
dec
jg
and
mov
sub
stos
aaa
sbb
out
dec
and
es
popf
enter
in
rol
jb
call
sub
nop
or
mov
mov
sub
pop
adc
push
aad
test
mov
in
or
pop
repz
fidivr
mov
sbb
dec
bound
dec
push
mov
xor
rcl
arpl
push
(bad)
mov
shl
dec
(bad)
mov
jmp
into
jecxz
std
repz
ja
sbb
mov
je
add
dec
push
cmp
push
rcr
cmp
ja
xor
jge
pop
imul
in
pop
and
ins
sbb
add
aad
shr
inc
push
dec
mov
mov
sbb
ds
stc
pop
and
sub
fs
sub
xchg
cmp
mov
jecxz
(bad)
and
je
repz
jmp
jnp
mov
mov
add
stos
shl
fwait
clc
xchg
add
ficomp
sub
and
adc
jae
adc
xlat
add
lahf
add
mov
mov
add
inc
xchg
sbb
add
sahf
cmp
dec
pop
sti
ins
icebp
mov
pop
out
push
shl
sbb
aas
mov
loopne
mov
ds
pop
je
lea
or
cmp
jno
je
imul
cmp
push
xor
das
xchg
push
push
leave
cwde
jmp
call
jle
jecxz
sub
inc
(bad)
iret
jp
es
jbe
push
mov
mov
pop
stos
inc
add
xchg
xchg
cld
loop
xchg
iret
mov
imul
sbb
mov
sbb
call
sti
push
cmc
and
ror
inc
add
mov
call
sub
xchg
adc
nop
shr
sbb
pop
cmp
sahf
sahf
(bad)
in
add
dec
xchg
jp
pop
cld
scas
je
add
mov
repz
push
xchg
ins
arpl
mov
scas
fcmovnu
(bad)
stos
data16
cmp
mov
dec
cmp
dec
lods
pop
test
sbb
addr16
ins
or
or
sub
push
sti
push
xor
nop
pop
fnstenv
(bad)
push
jl
pop
jmp
and
sub
sub
mov
in
adc
mov
mov
pop
fistp
jno
xchg
sub
xchg
jle
mov
jne
inc
pusha
nop
add
in
jge
inc
and
les
sbb
xchg
leave
or
xor
xor
sub
add
xlat
xchg
lahf
jmp
adc
test
pop
adc
jmp
add
add
mov
mov
ja
jmp
addr16
adc
movs
int3
adc
outs
push
jl
mov
imul
std
clc
add
pop
mov
add
pop
retf
je
cmp
add
pushf
mov
outs
cs
repz
mov
or
jbe
outs
lods
pop
push
call
pop
mov
fsub
cmp
add
xchg
xchg
shl
xchg
test
xlat
idiv
xor
fst
inc
scas
fs
das
(bad)
cli
addr16
cld
add
pusha
or
rcl
sbb
fst
and
leave
cmp
pop
inc
sbb
inc
arpl
push
ja
das
inc
retf
ss
out
lock
mov
rcr
loope
push
daa
ins
inc
repnz
shl
stc
mov
movs
aas
or
xor
mov
and
push
push
inc
shl
xchg
cmp
imul
add
into
std
cmp
xor
stos
pop
pop
shr
mov
fimul
or
jns
fwait
je
or
sbb
outs
dec
ds
fiadd
mov
cmps
xor
mov
or
mov
cmp
push
xor
cdq
adc
mov
aad
lds
outs
jmp
push
movs
js
cli
imul
and
push
xor
out
jg
xchg
repnz
std
pop
pusha
fldenv
push
outs
(bad)
repz
cmp
xchg
movs
cmp
cdq
es
push
lock
inc
dec
sbb
shl
adc
jmp
inc
popf
std
and
pushf
mov
or
repz
mov
jo
and
mov
clc
fwait
jo
sbb
mov
nop
mov
mov
pop
stos
adc
jecxz
icebp
in
sbb
cwde
cld
adc
xor
jns
loopne
or
add
mov
mov
push
xor
aas
enter
mov
es
inc
loope
jge
pop
lods
in
ret
mov
shl
jns
stc
movs
je
push
ror
mov
push
ror
mov
jg
push
rcl
push
rcl
and
mov
fcom
xchg
test
mov
out
and
data16
mov
cld
cmps
(bad)
mov
jae
mov
mov
fmul
daa
xchg
shl
jmp
mov
jo
pop
aas
cmp
je
lods
adc
adc
loope
xchg
jmp
jmp
mov
mov
shl
xor
push
jno
mov
ret
rol
inc
push
push
jmp
xchg
adc
mov
lods
cs
pop
pop
dec
shl
outs
push
out
ret
ficom
daa
lods
test
mov
pusha
add
cli
mov
inc
push
clc
imul
pop
add
jnp
xor
and
sub
xchg
dec
pop
repnz
cmps
(bad)
loopne
dec
add
ss
pop
dec
xor
cmps
sbb
jge
test
call
sti
cmp
test
dec
mov
imul
std
push
cdq
rcr
push
shr
imul
dec
sbb
and
div
clc
dec
push
jbe
lahf
cdq
adc
pop
xor
in
dec
nop
inc
call
adc
jne
pop
fisubr
enter
test
daa
sbb
sub
add
jne
mov
sbb
call
dec
xchg
add
pop
add
pextrw
aaa
or
and
mov
int3
lahf
mov
pop
pop
or
sbb
pop
icebp
sbb
add
xor
imul
fisub
imul
sar
outs
in
jnp
mov
cld
push
ja
push
inc
mov
pusha
ret
call
push
out
jecxz
mov
pop
(bad)
gs
loopne
nop
test
dec
idiv
push
dec
popf
cmp
mov
pop
je
sub
es
mov
test
mov
cwde
imul
xor
and
pop
mov
push
pop
nop
into
dec
pop
(bad)
jns
mov
ins
pop
(bad)
stc
sub
mov
lea
xchg
xchg
fimul
xor
mov
das
mov
push
mov
in
mov
pusha
(bad)
dec
cmp
popa
mov
outs
fs
sti
pop
gs
popf
leave
pop
cmp
mov
in
sar
enter
and
sub
gs
arpl
loope
jbe
xchg
shl
js
xchg
and
sbb
cmps
lods
std
mov
xchg
sub
rcr
cmp
imul
jo
add
sbb
jecxz
cmps
out
push
imul
jl
jmp
(bad)
gs
xlat
sbb
sub
adc
test
ret
sar
mov
out
ins
dec
pop
mov
push
or
retf
ja
fdivr
mov
arpl
mov
add
pop
and
sti
shr
sub
sbb
add
mov
mov
addr16
inc
push
xchg
jbe
(bad)
sahf
loop
jne
xchg
nop
xor
or
push
mov
jno
arpl
xchg
scas
mov
mov
jecxz
ret
popf
lods
cmps
push
fwait
jno
addr16
adc
repnz
outs
jp
ret
sub
mov
mov
and
mov
out
dec
aad
mov
mov
cmp
jl
jp
fwait
pop
aam
mov
pop
xor
sahf
push
mov
es
mov
jns
retf
cwde
and
cdq
in
out
repz
(bad)
mov
mov
pushf
push
dec
adc
jno
in
call
push
push
push
mov
jl
xlat
icebp
icebp
popa
xor
push
pop
cli
mov
clc
dec
(bad)
and
stos
jns
int
xchg
fcmovb
rcl
jne
or
arpl
cdq
or
push
cmp
jmp
fmul
pop
lahf
sbb
mov
popa
outs
lods
adc
pop
popa
jp
aaa
add
add
lea
fist
loopne
xor
cmp
sub
or
pop
mov
xlat
jecxz
mov
call
push
enter
sbb
mov
out
lea
test
push
leave
adc
in
xor
shr
stos
cs
jl
push
add
(bad)
cld
out
mov
fmul
cmps
push
xor
mov
call
mov
rcr
mov
fsub
aam
pop
jmp
ret
pop
or
call
inc
inc
pushf
out
mov
push
mov
pop
pop
shl
sahf
xchg
mov
addr16
dec
mov
pop
xlat
mov
fdivr
mov
add
retf
stos
jne
jne
(bad)
fnstenv
cmps
addr16
adc
les
dec
(bad)
icebp
jp
int
or
aaa
not
arpl
adc
inc
mov
scas
movs
mov
into
jg
jecxz
aas
loop
jne
mov
sub
loopne
retf
inc
jmp
repz
ins
pop
jle
and
dec
add
sub
in
sar
pusha
cmps
lahf
push
mov
addr16
mov
ret
iret
cli
repz
dec
sub
sar
jle
stos
push
ret
popa
repz
pop
and
mov
(bad)
mov
bound
jns
das
enter
adc
scas
dec
jae
(bad)
lea
ja
inc
fdiv
dec
out
sub
cmp
cmp
les
inc
xchg
test
pop
rol
xlat
adc
bound
(bad)
shl
mov
int3
sub
mov
jp
pop
and
aas
and
je
stos
scas
fsubr
js
mov
movs
cwde
cli
sub
cmp
test
lods
cmps
xor
jp
fsubrp
mov
outs
(bad)
cmp
test
dec
cdq
mov
dec
jmp
dec
mov
cmps
fwait
jge
stos
xchg
jns
aam
aam
dec
xchg
sub
dec
cmp
or
pop
mov
(bad)
or
inc
les
inc
jecxz
xchg
xor
out
adc
clc
push
xchg
or
pop
push
out
sti
jbe
cmp
bound
dec
ss
mov
mov
push
pusha
ja
or
inc
call
xchg
push
add
add
jmp
enter
icebp
add
and
repz
lea
das
mov
pop
fadd
ret
pop
xor
test
adc
cdq
xchg
outs
test
fcom
inc
fadd
(bad)
jge
xchg
lock
into
jecxz
or
and
sub
jl
sbb
ss
aaa
daa
cmp
or
mov
xchg
out
xor
sub
jp
mov
jl
adc
adc
xor
test
jnp
das
mov
jae
xchg
mov
das
adc
mov
sbb
inc
adc
xchg
in
cmp
lahf
and
sbb
into
retf
and
mov
pusha
xchg
xor
and
pop
pushf
fisttp
ret
xor
aam
lock
ss
(bad)
push
xchg
pusha
fild
push
pop
xchg
test
push
jo
add
movs
jmp
xchg
mov
inc
call
or
imul
xchg
out
fadd
sub
and
retf
mov
cwde
or
add
mov
add
leave
lods
mov
mov
test
xchg
fmul
pop
(bad)
ins
test
sbb
jl
mov
aas
out
fisubr
in
retf
mov
push
or
dec
cmp
stos
ror
mov
ins
inc
clc
pop
cmps
push
(bad)
shl
pop
xor
sbb
push
mov
(bad)
sar
mov
retf
inc
cli
inc
shr
jnp
pop
xchg
cdq
cmp
xchg
xor
cwde
push
(bad)
std
popa
mov
popf
(bad)
jecxz
fstp
movs
jnp
cmps
inc
es
in
(bad)
mov
fnstcw
mov
ss
scas
sbb
push
jl
mov
arpl
add
add
ins
in
das
inc
xor
mov
xor
in
push
add
xor
cmp
adc
add
dec
test
and
mov
ss
sub
movs
jmp
add
lahf
call
arpl
rcl
or
popa
inc
pop
adc
(bad)
out
jmp
lock
pop
or
jmp
and
cmp
shr
pop
mov
test
sbb
pop
fnstsw
retf
out
fdivr
pop
cdq
popa
mov
cmp
push
mov
add
mov
lods
lods
sub
xchg
mov
jl
(bad)
pop
movs
inc
and
push
xor
aad
adc
add
out
lds
cmp
or
inc
and
in
cld
jecxz
sti
enter
pop
jo
xlat
icebp
dec
xor
mov
shl
mov
inc
popa
adc
cmp
sbb
scas
fwait
sar
mov
mul
repnz
add
das
rcr
movs
push
pop
outs
push
fnsave
cmp
lea
cmp
xchg
sbb
push
pushf
mov
out
inc
xchg
bound
sbb
cdq
dec
pop
sbb
add
aaa
inc
ret
call
xchg
xlat
sbb
xor
test
mov
mov
ror
inc
test
cmp
scas
dec
push
pop
or
leave
mov
out
aad
adc
push
icebp
rol
mov
xchg
into
and
dec
stos
in
mov
test
xor
add
int
or
cli
sbb
mov
lods
(bad)
fmulp
scas
mov
pusha
ret
popf
lods
loop
push
dec
jp
mov
hlt
pop
ins
inc
fwait
xchg
popa
sub
int
xchg
xchg
push
iret
xor
(bad)
pop
(bad)
and
xchg
faddp
mul
jmp
sub
sbb
int3
popa
js
dec
add
lock
repz
add
cdq
outs
in
adc
dec
call
push
adc
cs
or
jmp
mov
test
lods
jmp
push
daa
sub
test
into
lock
or
mov
push
add
xor
(bad)
sub
cmp
xor
sub
jmp
shl
out
cwde
xor
clc
dec
jge
sub
xlat
mov
pop
int
stc
sub
stos
pop
fdivr
jbe
sbb
loope
inc
add
inc
fs
repz
mov
inc
sub
inc
xor
xchg
movs
jne
xor
jbe
jo
fcomp
out
jp
jecxz
and
ds
jecxz
add
push
mov
test
mov
sbb
inc
rcr
arpl
retf
jns
mov
pop
or
sahf
into
cli
and
ins
jae
ins
pop
add
popa
adc
popa
xor
xchg
fs
inc
loop
xor
into
inc
cmps
add
(bad)
push
push
push
fidivr
mov
mov
in
jno
xchg
inc
mov
and
shl
xlat
nop
xor
mov
add
jns
scas
cs
inc
jnp
stos
loopne
xlat
inc
test
daa
je
xchg
sub
or
mov
cmps
dec
pop
aaa
pop
mov
push
or
mov
shr
call
popa
pop
lods
dec
sub
cmp
fisubr
scas
mov
cmp
xchg
loopne
push
out
mov
mov
test
int
sub
mov
mov
jecxz
movs
jge
pop
pop
out
cmp
inc
mov
push
cld
shl
xchg
mov
mov
scas
or
aad
lds
mov
pop
mov
nop
mov
std
aas
enter
mov
dec
popf
jo
inc
mov
ret
dec
test
sbb
leave
cmp
xor
adc
into
inc
jno
(bad)
push
jge
and
pop
adc
push
movs
in
push
out
outs
fwait
xchg
inc
cmc
call
add
xor
sahf
push
cli
mov
add
sbb
js
mov
cmps
ret
xor
jl
sbb
frstpm(287
stos
lods
fwait
sbb
or
(bad)
aad
sub
pop
cli
outs
sbb
mov
test
mov
dec
push
data16
inc
movs
adc
daa
lock
sar
out
lea
pop
push
aaa
imul
sub
mov
mov
mov
jge
jno
(bad)
dec
popf
or
sub
sub
mov
sbb
icebp
in
scas
sub
leave
pop
mov
sbb
mov
das
inc
movs
adc
aad
jge
ja
ss
mov
fcmovnb
xchg
int3
dec
and
pop
out
mov
mov
or
jb
fs
dec
xor
jno
loope
addr16
and
outs
mov
pop
and
jg
xchg
inc
jl
retf
cmp
(bad)
adc
adc
pushf
ror
add
cmp
sub
shl
lods
and
and
daa
and
cmc
mov
and
pop
bound
rcr
ss
in
rol
addr16
test
sub
dec
pop
jmp
add
imul
add
movs
xchg
sbb
cmp
pop
in
cmp
inc
add
jg
cmps
ds
mov
mov
mov
sbb
cmc
(bad)
push
xchg
mov
cmp
sbb
dec
outs
push
mov
mov
popf
xchg
mov
je
loope
push
fdiv
push
fnstenv
aaa
ja
retf
or
rol
sub
rol
cmp
inc
push
mov
mov
out
jp
sub
popa
pop
pop
(bad)
stos
mov
(bad)
int
dec
je
int3
xchg
mov
cmp
cmp
xor
ror
out
sbb
test
fcom
inc
shl
stos
test
dec
aaa
fild
(bad)
in
fwait
and
mov
loopne
loop
lods
ds
or
ja
iret
mov
test
sub
and
ja
or
add
mov
or
xchg
xor
std
dec
sub
repnz
dec
sti
hlt
cs
call
adc
(bad)
pop
jnp
in
test
iret
mov
pop
out
inc
pop
pop
jmp
cs
popa
fs
mov
data16
inc
sub
je
je
mov
cmp
mov
cmp
pop
mov
jge
dec
mov
(bad)
mul
dec
fsubr
ror
add
iret
push
jo
in
xor
lock
jo
push
and
les
daa
les
mov
jg
addr16
xor
add
fdiv
add
cmp
mov
mov
add
jne
sub
mov
mov
clc
mov
sti
fldenv
mov
and
(bad)
ffree
das
or
fimul
cs
arpl
push
xchg
scas
ins
jp
pop
call
push
mov
cmps
cmp
pushf
push
jae
jne
jb
cmp
pop
or
push
shl
sub
mov
iret
or
(bad)
das
ja
mov
cmp
jno
test
imul
and
rcl
mov
call
pop
push
shl
push
xlat
ds
rcl
and
inc
test
loope
push
cmps
or
gs
jns
retf
cld
push
mov
pop
jbe
push
xchg
stc
pop
pop
dec
in
int
adc
shl
push
push
std
adc
repnz
or
jne
inc
or
pop
cmp
mov
xor
mov
mov
out
push
lock
mov
in
js
and
rcr
and
inc
jne
mov
dec
sub
xlat
mov
jo
mov
mov
in
push
push
jp
int
js
pop
mov
inc
fimul
inc
pop
mov
ins
xchg
jne
dec
inc
xor
popa
jg
xor
mov
jbe
jb
xchg
mov
mov
dec
(bad)
fdivr
sbb
mov
leave
add
xor
lahf
in
xchg
enter
push
fcmovbe
stc
and
std
outs
(bad)
arpl
fild
jbe
scas
jne
(bad)
and
xor
popf
mov
mov
icebp
jno
adc
xor
imul
repz
or
outs
out
cld
push
hlt
nop
fidiv
mov
add
push
popf
dec
out
sbb
sahf
aam
push
sar
ja
and
xchg
neg
out
lea
jp
xchg
rcr
dec
mov
inc
xor
movs
sub
ror
mov
sub
xchg
clc
dec
add
jge
xor
sbb
and
pop
mov
or
in
mov
xor
call
ret
pop
lea
dec
xor
add
int
dec
ja
xchg
out
sbb
push
cmp
movs
xchg
mov
jg
(bad)
(bad)
adc
pop
ss
mov
pushf
jecxz
and
xor
adc
sbb
xchg
das
sbb
out
repnz
in
retf
dec
or
xchg
sar
dec
rcr
test
inc
test
je
lahf
(bad)
xor
aam
push
xchg
jo
iret
fisub
pop
push
out
xchg
xchg
pushf
outs
jbe
mov
pop
sti
adc
imul
jae
xor
imul
cli
jae
ror
rcr
clc
pop
fcom
(bad)
mov
repz
popa
sub
add
adc
pop
cmps
test
(bad)
in
jmp
fwait
cmp
mov
pusha
aaa
(bad)
fs
enter
sub
mov
mov
js
dec
outs
lds
mov
push
ins
sbb
in
in
imul
int
int3
pop
mov
(bad)
xor
lds
add
test
or
std
xor
inc
mov
push
dec
div
into
add
cmp
scas
xor
cmp
test
fisubr
jl
pop
sub
aad
inc
scas
loopne
jne
push
mov
imul
or
push
setp
clc
xor
and
sub
xor
mov
dec
(bad)
mov
mov
not
dec
mov
fsub
jno
mov
mov
loope
out
inc
fild
jbe
ss
mov
xchg
vcvttps2dq
in
and
(bad)
in
push
lahf
fcom
fisttp
jge
adc
popf
pusha
imul
dec
mov
loope
sub
inc
adc
sub
and
int
(bad)
outs
repnz
sti
aas
push
xchg
test
add
dec
add
aad
call
das
push
test
mov
scas
adc
inc
push
mov
add
mov
std
add
retf
and
icebp
pop
(bad)
daa
sahf
jecxz
add
inc
(bad)
mov
jo
fwait
mov
jb
retf
jg
mov
js
mov
repz
jo
aaa
xor
mov
sub
jle
or
ret
pusha
adc
stos
jg
dec
xor
inc
push
std
push
or
xchg
(bad)
sub
pop
push
or
pop
pop
sub
and
xchg
xchg
inc
mov
pop
jmp
test
cs
jae
scas
(bad)
xor
test
push
adc
adc
jo
aad
mov
sbb
popa
add
xchg
dec
jmp
push
cmp
(bad)
lds
push
repz
mov
push
jmp
sub
jmp
clc
pop
mov
pop
aaa
call
inc
cmps
bound
mov
and
imul
je
adc
sbb
mov
sbb
popa
aad
add
sub
or
and
inc
lods
push
arpl
je
add
inc
int
or
das
or
cmp
jecxz
mov
dec
pop
adc
sbb
xor
dec
lds
bound
and
gs
daa
sub
sbb
popa
test
adc
jg
test
inc
loope
add
cmp
repnz
stos
shl
pop
ins
call
and
shl
imul
test
inc
add
mov
mov
mov
fcomi
in
sub
leave
lock
adc
rcr
mov
sbb
dec
push
inc
dec
cli
sub
dec
mov
xor
or
pop
nop
or
outs
je
pop
and
ds
int
shl
mov
push
sbb
cmp
arpl
pop
and
nop
push
shr
mov
jle
and
lock
shr
push
in
inc
fwait
(bad)
and
inc
retf
sub
pop
bound
mov
dec
or
push
call
inc
or
mov
sub
int3
sbb
sub
scas
das
sub
lock
adc
js
cld
and
add
sbb
mov
retf
lahf
rol
or
sbb
fistp
and
pop
mov
aaa
movs
ins
enter
ds
cmp
jno
and
enter
lods
push
pop
push
inc
into
inc
cdq
clc
jmp
push
repnz
dec
ficom
pop
outs
jle
gs
aas
dec
inc
jge
adc
fld
adc
aaa
fstp
repnz
int
or
int3
push
sub
jne
cmp
(bad)
int3
jl
iret
inc
loopne
dec
mov
lods
jg
test
mov
addr16
add
je
je
mov
stos
push
js
adc
sbb
dec
mov
imul
inc
nop
jg
xor
jbe
cwde
dec
inc
repz
out
push
cmp
jg
xchg
int3
push
jp
inc
leave
cwde
sub
movs
lds
and
dec
shr
daa
xor
add
cwde
addr16
data16
pop
inc
jae
cmp
adc
dec
pop
in
test
das
xor
xchg
sub
ja
retf
or
xchg
addr16
pushf
les
jle
out
aad
or
bnd
loopne
pop
mov
cli
mov
or
jle
xor
pop
cmc
int
dec
xchg
cmp
inc
bound
(bad)
ja
mov
repnz
mov
mov
jecxz
inc
out
jae
sahf
sar
out
pop
jge
jecxz
arpl
stc
into
pop
(bad)
out
pop
call
inc
iret
test
int
scas
fs
dec
imul
stc
lds
xchg
push
sbb
fcom
mov
pushf
pop
mov
daa
pop
mov
mov
lea
cmp
(bad)
aam
aam
arpl
xchg
(bad)
ret
fcomp
mov
jne
je
xchg
xor
mov
daa
add
add
and
mov
dec
adc
jbe
xor
sub
call
and
in
xchg
les
ja
idiv
shr
movs
xor
je
xor
aam
sbb
push
in
cmp
jb
cmc
cmps
mov
or
xchg
pop
jmp
pop
retf
jle
retf
xlat
xchg
sbb
inc
(bad)
rol
lods
in
in
shl
test
ss
and
ja
add
mov
loopne
popf
in
arpl
icebp
out
call
outs
hlt
inc
adc
call
or
ja
xor
fcomp
xchg
in
pushf
add
retf
and
adc
movs
std
pop
fs
int
dec
push
sar
fdivr
adc
sbb
daa
push
cs
jp
mov
mov
xchg
adc
pop
cmp
leave
dec
pop
mov
mov
in
or
inc
jecxz
xchg
scas
retf
fsub
adc
sub
xor
cmp
fcmovnbe
and
xor
pop
inc
inc
push
jecxz
xchg
mov
sar
fwait
popf
sbb
and
(bad)
fadd
ret
sti
and
xor
mov
repz
popf
push
or
push
mov
shl
xor
aad
mov
push
mov
dec
sub
jmp
test
ret
mov
xchg
cmp
jae
inc
jnp
out
fsubr
dec
inc
pushf
gs
or
push
or
scas
mov
neg
sbb
repz
jmp
cwde
lock
lahf
xchg
js
movs
ret
xor
mov
sar
loope
int3
xlat
hlt
ss
push
stos
shr
mov
in
mov
popa
push
sub
aam
test
push
cs
mov
adc
out
cld
pop
xchg
stos
stos
js
idiv
test
(bad)
push
ja
(bad)
jle
xchg
rcl
mov
fidivr
cmp
loope
mov
shr
jns
dec
in
adc
enter
add
repz
mov
jns
in
and
shr
mov
retf
ret
ror
imul
test
scas
sub
mov
adc
push
sar
sbb
mov
in
inc
mov
pop
add
adc
dec
dec
jl
mov
in
ins
iret
push
cmc
mov
add
mov
and
push
cs
push
or
imul
fwait
xor
mov
or
pop
dec
push
xor
sub
test
mov
fxch
dec
jge
cs
enter
add
ret
and
bound
pushf
add
sti
sbb
mov
push
sti
mov
test
movs
jb
into
fsub
icebp
pop
push
adc
sub
das
xlat
aad
pop
pop
adc
xchg
pop
fisub
mov
jo
jbe
mov
sbb
addr16
ins
mov
in
or
fdiv
pop
hlt
cmc
test
mov
ret
rol
cmp
nop
enter
in
mov
cdq
daa
fst
int
add
mov
lds
out
movs
out
cmp
iret
lea
movs
xor
shr
mov
(bad)
inc
push
scas
or
and
mov
sub
sub
jp
jb
xchg
xchg
sub
cmp
popa
shr
push
int3
retf
imul
cmps
cmp
cmp
ret
xor
ja
pop
inc
adc
imul
add
nop
jge
inc
inc
mov
adc
jg
enter
pop
xchg
jecxz
or
jmp
cdq
dec
lods
rcl
sub
sbb
sbb
sbb
sub
add
lea
sbb
nop
xchg
lock
out
in
mov
shl
pop
mov
sub
push
mov
clc
loopne
leave
(bad)
jne
mov
retf
icebp
add
push
mov
mov
sub
or
punpckhwd
xchg
in
(bad)
sub
sbb
pop
popa
xchg
mov
jo
ret
mov
xlat
or
xor
inc
xlat
mov
mov
repnz
scas
cs
or
mov
mov
xor
(bad)
retf
in
test
mov
sub
adc
fidivr
(bad)
fwait
mov
dec
call
jb
cmc
cwde
add
imul
nop
mov
fdiv
cdq
jns
xlat
mov
sub
push
movs
pop
mov
and
push
xchg
sar
stc
jno
clc
mov
int3
mov
repnz
test
mov
lds
outs
push
rcr
movs
dec
xor
xor
mov
sbb
sub
movs
push
pushf
or
test
xor
xchg
add
mov
aaa
(bad)
cld
int3
mov
sahf
ins
mov
mov
cmp
repz
mov
mov
and
mov
mov
ds
mov
xchg
test
mov
ja
xor
dec
and
dec
inc
cmp
(bad)
fcmovnb
popf
in
xchg
div
clc
fdivr
inc
mov
icebp
mov
pop
(bad)
and
xchg
aaa
jb
scas
mov
out
into
test
jbe
inc
sar
cmp
fisttp
in
add
jge
ret
je
push
scas
add
mov
xlat
pusha
ret
ds
clc
jmp
pop
mov
dec
in
xor
cmp
mov
push
stc
out
xor
jmp
dec
hlt
mov
retf
and
ins
jl
les
cli
div
adc
sub
xor
jnp
loop
movs
shl
movs
sets
leave
scas
imul
mov
out
stos
(bad)
mov
adc
mov
mov
sub
xchg
xor
(bad)
out
pop
sbb
inc
add
cmp
xor
dec
adc
mov
mov
inc
or
div
pop
mov
mov
dec
jmp
call
test
adc
mov
xchg
aaa
inc
mov
fs
dec
sbb
imul
test
xchg
hlt
cmp
iret
sub
popa
fidiv
ss
mov
xchg
sbb
cmps
(bad)
call
dec
retf
jne
or
sti
es
pop
sbb
lods
dec
and
fs
imul
retf
xchg
sbb
imul
test
jecxz
inc
shr
and
mov
adc
adc
fidiv
gs
mov
xor
out
inc
jmp
pop
ins
lock
aam
stc
js
aad
mov
pop
pop
mov
adc
push
arpl
fadd
call
adc
jg
add
mov
xchg
test
xor
scas
imul
cld
(bad)
add
into
fcomp
out
out
imul
jmp
rcl
pop
xor
loopne
imul
test
add
inc
test
jge
test
rol
test
jne
pop
movs
push
sub
xor
add
imul
add
lds
sbb
jb
and
mov
xor
jle
sub
jmp
retf
push
add
dec
stc
mov
xor
hlt
mov
sbb
sahf
xchg
cs
aas
and
mov
cmp
(bad)
in
out
in
mov
adc
sbb
in
push
enter
scas
adc
mov
pop
add
pusha
aad
and
imul
inc
cmp
dec
cmps
call
and
pop
mov
movs
and
jbe
xchg
ja
(bad)
and
dec
xor
ret
jne
mov
in
aas
xor
in
cmps
loopne
mov
fsub
push
xchg
xor
icebp
movhps
adc
inc
pop
iret
or
mov
test
or
mov
cmp
adc
mov
jne
imul
ja
aas
ins
xor
movs
imul
mov
mov
popa
cmp
and
xchg
leave
xor
stos
repz
xor
push
pop
jmp
dec
mov
test
dec
push
scas
scas
dec
xor
pusha
sahf
xor
hlt
cmc
dec
mov
mov
mov
mov
cmc
jmp
mov
ds
mov
loopne
btc
cs
int
in
jge
movs
xor
in
inc
lods
cmps
add
sahf
adc
cmp
(bad)
lods
fidivr
dec
xor
stos
jle
pop
sar
or
(bad)
sti
mov
adc
jbe
push
sbb
xor
mov
or
sub
jno
icebp
dec
sub
(bad)
test
daa
test
xlat
pop
imul
fiadd
out
stc
loope
and
bound
fs
daa
jp
popf
jl
or
gs
dec
push
push
xlat
out
pop
xchg
mov
(bad)
aaa
jo
dec
sbb
ret
mov
paddsw
pushf
imul
push
sti
mov
cdq
pop
push
cmp
ds
mov
scas
mov
popf
dec
mov
fisubr
pop
adc
movs
jge
es
push
fwait
sar
popf
ret
cmp
add
repz
lea
add
adc
xor
dec
stos
int3
pusha
stc
push
add
add
sub
xchg
(bad)
mov
or
cmp
sub
xchg
add
into
stos
pop
mov
adc
cmp
inc
and
sub
cwde
cld
cmp
jnp
(bad)
push
adc
repz
imul
jg
xor
jnp
add
loop
sub
test
aaa
jle
jns
jmp
ficomp
sbb
in
mov
push
dec
or
sti
pop
jp
mov
xchg
mov
pop
sahf
or
cmps
mov
xor
jb
mov
inc
push
adc
add
ins
dec
mov
push
and
inc
and
icebp
or
cwde
sub
out
int3
sbb
into
mov
and
call
cmp
cmc
mov
adc
and
test
gs
outs
add
pop
fld
int3
out
cmp
int
xchg
ja
mul
xchg
stos
mov
imul
pop
(bad)
add
movs
sub
iret
int
push
xchg
cmp
push
xchg
imul
ret
inc
shl
sahf
sahf
out
push
leave
mov
sbb
call
(bad)
sbb
push
pop
cmc
jp
lock
pop
dec
xchg
test
stos
add
aaa
aad
std
cmp
mov
fisub
xor
sub
fmul
mov
jo
jmp
mov
popa
(bad)
shr
enter
ins
mov
inc
bound
jno
adc
retf
aas
leave
shl
pop
inc
adc
mov
mov
xchg
neg
lahf
sbb
mov
cmp
sub
stc
adc
lahf
(bad)
jmp
rcr
or
inc
stc
out
sub
stos
xchg
mov
cmps
cmc
jbe
xchg
push
aam
inc
jbe
mov
push
enter
add
jmp
cwde
movs
sbb
xchg
je
push
jo
not
repnz
mov
outs
mov
ds
jp
ror
inc
dec
jmp
(bad)
dec
push
lods
cmc
add
pushf
sbb
inc
or
dec
(bad)
scas
inc
push
stc
mov
mov
iret
(bad)
retf
sub
or
cmp
xchg
fmul
loop
dec
mov
gs
je
(bad)
pop
je
and
shl
in
push
in
jecxz
push
dec
or
push
xor
mov
(bad)
or
dec
jns
xor
mul
lods
or
popf
leave
mul
pop
pop
cmps
add
jnp
inc
push
adc
rcl
js
retf
add
repz
jmp
cmps
fs
repnz
retf
inc
imul
addr16
sub
jno
jo
pop
sub
shl
cdq
inc
rcl
mov
add
pop
xor
mov
mov
scas
out
cmp
jno
sbb
std
sbb
xchg
sbb
xchg
arpl
lea
mov
xchg
aas
test
and
cmp
dec
sbb
inc
push
ins
and
add
arpl
add
call
rcl
lock
in
imul
stc
dec
add
repnz
cmc
stos
(bad)
pop
div
mov
test
jns
fimul
out
push
ret
pop
pop
cs
leave
stos
cs
(bad)
lahf
xchg
bound
(bad)
aas
cmp
inc
jmp
scas
clc
(bad)
add
cmp
xchg
data16
gs
sub
jno
cmp
sti
dec
jg
mov
xchg
or
jno
pushf
int3
gs
cmp
pop
inc
xor
out
lahf
and
jno
ret
ret
adc
call
adc
sbb
inc
or
mov
and
sbb
add
retf
int3
imul
adc
cld
shl
xor
push
loopne
mov
ror
inc
jns
jnp
or
cmc
mov
cmps
imul
ja
inc
fidiv
test
xlat
mov
sahf
pop
test
push
or
imul
retf
sbb
and
xor
mov
adc
cdq
and
adc
dec
jmp
mov
mov
mov
fst
sub
add
or
jne
and
jbe
xor
sahf
js
out
cli
xor
out
mov
adc
vpaddusb
sub
cmp
dec
fs
(bad)
pop
sti
pop
sti
xchg
sub
out
mov
xchg
xor
adc
adc
inc
and
push
or
je
hlt
arpl
push
xlat
sbb
pop
jnp
movs
mov
jmp
std
(bad)
push
and
pop
test
mov
mov
dec
mov
pop
inc
call
out
arpl
push
or
fld
cmp
addr16
inc
lods
fsubp
loope
retf
adc
jb
and
cwde
outs
aad
stos
enter
leave
push
sub
ja
loop
loopne
call
push
mov
cmps
popf
(bad)
in
int
in
sub
adc
mov
push
out
jecxz
pop
ins
and
jne
jnp
call
or
out
cmps
mov
cdq
in
xor
jle
inc
cmp
ja
xchg
int3
sub
push
mov
stos
mov
in
xor
sub
leave
push
call
mov
ins
sub
xchg
xor
cmp
ins
dec
xor
pusha
dec
dec
nop
jmp
cmps
mov
mov
movs
jbe
(bad)
fwait
fs
dec
xchg
loope
mov
and
and
fidivr
mov
inc
in
outs
push
lea
dec
out
mov
hlt
int3
mov
push
(bad)
xchg
jb
test
bound
cwde
mov
cmp
lods
div
pop
out
push
je
mov
add
in
cmp
cmp
subps
adc
mov
(bad)
iret
std
inc
adc
fsub
movs
push
in
out
mov
(bad)
pop
mul
fsubp
cmp
sti
les
mov
jb
mov
push
xchg
add
addr16
(bad)
int
bound
pop
or
ins
xor
push
jmp
(bad)
gs
in
mul
fidiv
jno
cmc
xor
pop
lods
daa
cmc
arpl
ds
shl
xchg
sbb
dec
shl
sub
int3
bound
(bad)
adc
pop
sbb
mov
and
jo
adc
xor
inc
cmp
gs
sub
cmps
sub
jb
inc
call
mov
xor
ja
adc
(bad)
bound
dec
pop
ins
in
je
loope
stc
jae
lods
xchg
adc
jmp
hlt
call
pop
movs
adc
data16
mov
addr16
mov
adc
mov
lds
in
add
adc
push
idiv
push
test
add
add
scas
stos
movs
ss
sbb
mov
and
xor
enter
lock
movs
add
or
mov
(bad)
cmc
daa
and
popa
test
sub
mov
retf
call
nop
sub
enter
loop
outs
js
adc
and
pop
mov
inc
pusha
(bad)
xchg
fimul
les
cmps
ja
mov
pop
mov
pop
aas
pushf
mov
shr
hlt
pop
pop
xor
hlt
dec
ret
jbe
inc
xor
iret
add
xchg
fsub
mov
xor
dec
out
xor
add
jecxz
xor
xor
lds
int
out
das
mov
xchg
inc
in
shl
adc
push
movs
fild
ds
ficomp
mov
adc
das
inc
cwde
xor
xchg
or
arpl
pop
adc
jo
ffreep
aad
add
movs
aam
xchg
pop
ja
cmp
out
add
sbb
int
cmp
adc
cmps
ror
pop
(bad)
div
mov
xor
lock
sahf
into
mov
jecxz
iret
div
push
jmp
add
and
pop
lods
das
jmp
aad
(bad)
pop
stos
jmp
dec
jecxz
xchg
and
and
ins
add
scas
xchg
xchg
jmp
xchg
aam
sbb
nop
dec
es
rcr
push
pop
and
inc
es
(bad)
stc
xlat
sbb
or
and
adc
js
in
iret
mov
dec
push
test
rcl
xor
rcl
and
xchg
mov
aas
leave
popf
lahf
xor
rcl
inc
aas
inc
add
adc
imul
jp
jnp
aas
out
and
daa
add
idiv
push
adc
lea
adc
pop
mov
mov
add
imul
paddsb
cdq
cmps
stos
fidiv
cmc
imul
imul
push
pushf
mov
test
int
icebp
mov
push
aas
or
and
lods
sub
inc
jl
mov
xchg
popa
sub
test
ret
cmps
movs
push
or
xchg
fxch
ins
pop
inc
jmp
jle
mov
adc
mov
cmps
fucomi
pop
cmp
lock
shl
out
pop
scas
je
retf
pop
scas
push
jge
loope
push
leave
sbb
push
mov
aas
in
jl
push
jmp
sbb
sbb
adc
mov
adc
mov
ja
rcr
push
pop
cdq
adc
jbe
inc
lock
lahf
xchg
icebp
ja
adc
push
stc
ins
cdq
in
jge
adc
test
popa
leave
call
(bad)
mov
inc
push
cdq
and
xchg
mov
jb
enter
aas
clc
daa
in
cdq
add
and
sub
loop
jno
and
inc
faddp
retf
and
je
mov
push
test
outs
add
dec
push
adc
xor
jmp
add
dec
mov
cmp
lahf
idiv
aaa
mov
arpl
dec
pop
add
popa
pusha
cmp
imul
push
aas
je
imul
dec
test
xchg
sub
mov
stos
jo
outs
out
aam
xchg
loop
push
aad
ret
pop
jne
and
xor
pop
in
es
mov
dec
xor
sbb
mov
mov
clc
stc
and
scas
bound
adc
add
stos
pop
cmp
pushf
popf
lea
pop
sub
fisttp
(bad)
jecxz
lock
jecxz
mov
fsub
arpl
inc
jg
mov
call
and
pop
in
vmwrite
pop
xchg
xchg
out
lahf
daa
jmp
movs
dec
call
xchg
fld
call
pop
loopne
xor
inc
mov
push
push
fs
fcomp
icebp
jl
test
aaa
sbb
sar
jl
(bad)
fisubr
sbb
add
or
xor
mov
and
fmul
pusha
inc
mov
cmp
jmp
mov
sbb
or
cmc
or
ins
pop
add
fidivr
adc
ret
retf
xchg
stos
push
int
sbb
hlt
pop
outs
loopne
inc
frstor
in
imul
and
sub
(bad)
or
addr16
push
adc
sub
es
jecxz
sub
mov
pop
dec
mov
mov
push
sbb
pop
hlt
push
mov
test
in
mov
out
cmc
loope
in
push
(bad)
mov
cmp
mov
cdq
pop
fstp
add
cs
scas
sub
mov
adc
neg
xor
mov
pushf
ss
jns
mov
inc
movs
(bad)
(bad)
pop
stos
ins
add
jmp
sub
mov
push
xor
(bad)
adc
push
mov
cmps
and
les
aad
in
mov
cmps
call
(bad)
mov
mov
movs
(bad)
fcom
cld
dec
dec
and
mov
js
sbb
adc
pop
aaa
mov
push
fsub
imul
pop
cmp
cwde
scas
or
mov
clc
jl
popf
test
dec
xor
pop
fstp
mov
add
jl
adc
cmp
stos
jo
hlt
bound
leave
mov
pop
push
mov
out
stc
adc
adc
movs
into
jbe
(bad)
jb
bound
lods
jle
cmp
push
dec
adc
mov
fisubr
add
dec
fs
mov
xchg
outs
sbb
mov
mov
inc
mov
or
xchg
jmp
ds
aas
in
jl
ins
clc
lods
retf
cmc
shl
pop
jno
mov
je
sahf
lds
mov
fnstcw
loop
mov
push
popf
in
pushf
inc
pop
jae
push
rcl
or
cs
(bad)
mul
shl
out
sbb
adc
movzx
mov
sub
add
sbb
in
xchg
(bad)
pushf
call
cmp
xchg
sbb
ret
in
xor
adc
xchg
push
inc
add
movs
arpl
fucomi
mov
lds
pushf
ret
fidivr
rcr
enter
add
loop
cwde
push
jae
shr
ins
in
test
iret
call
rcr
xlat
xchg
xor
xchg
cmps
cmp
pop
jmp
fs
(bad)
hlt
int3
aaa
cmc
sbb
inc
inc
bound
mov
cwde
and
fucomp
popf
das
push
or
sbb
leave
cmps
mov
xchg
es
addr16
add
inc
or
jmp
cmp
(bad)
mov
jg
and
test
aad
pop
inc
jle
bound
inc
emms
(bad)
xor
xchg
leave
push
ss
cld
jp
iret
ss
out
clc
pop
adc
jnp
cs
neg
cs
into
aam
outs
movs
retf
dec
or
adc
pop
push
loopne
push
dec
jmp
inc
outs
mov
cmp
movs
ret
add
inc
fwait
adc
call
out
or
cmp
mov
idiv
stos
scas
sub
inc
cs
fdivr
das
xchg
sbb
lahf
es
push
fs
cld
jns
dec
fwait
pop
sbb
repnz
scas
test
sub
dec
adc
add
inc
aas
sbb
cmp
sahf
inc
jecxz
test
add
loop
inc
clc
fnstsw
pop
lods
std
in
leave
mov
movs
retf
jg
xor
xor
or
mov
inc
nop
xor
sub
imul
mov
mov
or
aad
lods
loop
aas
pop
mov
jnp
mov
sub
and
mov
inc
sbb
sub
mov
cmp
and
inc
or
sbb
lds
repz
pop
das
das
test
lahf
popf
xchg
cmp
sub
dec
fsubr
jmp
mov
sbb
mov
fisub
push
popa
cmp
mov
adc
push
mov
outs
dec
cld
mov
jnp
xor
mov
jnp
and
stos
inc
dec
dec
push
ja
or
push
jne
inc
or
or
test
jmp
call
in
adc
cld
loope
mov
pop
fs
dec
mov
retf
es
dec
in
cs
loope
fs
es
bound
dec
bound
fild
push
mov
sbb
mov
dec
and
cmp
(bad)
(bad)
in
jl
fsubp
or
dec
jb
aad
sub
cmp
jo
jns
cmp
pop
or
pop
jb
sub
mov
lock
stos
cmp
push
xchg
shl
stos
or
iret
cs
aam
xchg
ins
out
out
loop
dec
cmp
xor
lods
enter
aas
dec
add
pop
loopne
stos
dec
sbb
rcr
(bad)
stos
fisubr
call
js
mov
ficomp
jmp
sbb
into
inc
fcmovbe
adc
ror
out
(bad)
nop
mov
adc
push
pop
cs
mov
addr16
push
retf
and
pop
jae
data16
push
mov
dec
ins
jo
adc
and
add
sbb
inc
fldenv
inc
lock
push
push
sbb
pop
mov
push
jb
mov
push
dec
es
adc
push
cmp
ret
jg
rcl
and
mov
add
sbb
jg
je
jge
movs
fsin
dec
ds
fistp
mov
pop
mov
sti
aaa
or
pop
shl
and
mov
inc
lods
cmp
push
push
push
fdiv
xchg
jmp
mov
test
mov
cmc
lods
xchg
(bad)
pop
jge
mov
jbe
xor
pop
and
repz
mov
inc
add
xor
mov
outs
dec
mov
push
ret
dec
mov
pop
add
sti
stc
pop
add
mov
lods
out
adc
push
jp
in
rcr
ret
das
mov
mov
ret
sahf
call
jno
adc
add
idiv
fimul
loop
ret
out
pop
push
(bad)
mov
mov
mov
test
jmp
loopne
inc
pushf
retf
mov
in
push
add
cld
out
mov
addr16
inc
mov
rcl
add
mov
xor
jbe
mov
dec
sub
xor
pop
xchg
mov
pop
mov
lods
mov
mov
adc
cdq
inc
nop
sub
cmps
sub
pop
add
popa
push
addr16
mov
mov
dec
push
dec
inc
sub
cmps
out
jle
jl
xor
mov
xor
shl
cmps
les
jne
int
dec
cwde
jge
mov
pop
call
movs
stc
fcomp
jp
imul
sbb
push
cmp
mov
xor
add
clc
push
and
sub
imul
xchg
stc
pop
fwait
lds
inc
(bad)
movs
dec
sub
sar
mov
sahf
jnp
xchg
mov
mov
movs
inc
stos
pop
inc
push
test
inc
ret
es
jns
mov
les
push
pop
jb
loop
pop
push
rcr
imul
xor
scas
(bad)
adc
cmp
aas
and
jae
pop
jns
adc
(bad)
mov
push
and
fisub
outs
fmul
push
sub
push
fild
lods
jle
into
ror
cmps
call
ror
test
pop
add
test
jo
es
pop
fistp
popa
inc
ja
pop
lods
call
mov
mov
jae
mov
xchg
mov
mov
addr16
cmp
dec
repnz
or
dec
shr
leave
scas
test
xor
mov
imul
sti
call
aaa
mov
jb
fsub
imul
mov
cmp
push
ja
pop
clc
cmc
mul
cs
pop
icebp
mov
sbb
sbb
shr
inc
push
test
loop
add
mov
gs
pushfw
aad
jecxz
ins
mov
xor
fldcw
mov
sbb
jmp
sub
je
dec
mov
push
xchg
mov
mov
sub
mov
repz
or
pushf
inc
xchg
pop
out
dec
mov
loop
jae
fcomp
and
cmps
inc
cld
imul
mov
push
and
push
pop
jae
clc
iret
jmp
mov
call
jb
pop
xchg
fld
add
or
into
inc
dec
test
fwait
sbb
add
push
and
hlt
xchg
dec
cmc
inc
mov
jle
outs
xchg
sbb
rcl
xchg
jne
mov
or
ds
sbb
sbb
shl
jge
mov
push
mov
imul
dec
sub
ret
cmp
lea
mov
mov
fwait
popf
push
jbe
sbb
gs
sub
jo
loop
outs
ins
pop
inc
mov
loope
pop
pop
and
and
push
jle
xor
scas
das
xor
xchg
mov
dec
mov
xchg
clc
mov
and
arpl
ret
jge
mov
jns
int3
mul
adc
mov
dec
fcmovu
(bad)
pop
loope
add
push
out
jb
xchg
push
sub
out
push
pusha
and
and
jmp
mov
pop
sub
mul
mov
out
sub
pop
adc
outs
pop
adc
leave
adc
fidiv
xor
iret
imul
rcl
add
mov
jnp
mov
(bad)
cdq
jns
(bad)
in
inc
imul
push
pop
inc
jg
dec
popa
out
inc
inc
pop
das
add
mov
push
shr
xchg
sbb
jo
sbb
in
adc
mov
lods
loope
test
pushf
dec
push
dec
fnstenv
jmp
arpl
addr16
outs
fcom
cmc
jmp
mov
inc
out
jg
cmp
xlat
mov
aam
jmp
dec
mov
cmp
sbb
fdivp
xchg
jge
lea
and
and
pop
fisub
sub
rep
in
dec
push
in
jno
sbb
push
aaa
push
sar
push
adc
dec
rol
fs
sbb
mov
add
(bad)
sti
arpl
nop
dec
hlt
mov
out
fbstp
adc
adc
adc
adc
cmp
add
data16
jne
mov
jbe
adc
hlt
dec
sbb
movs
arpl
in
movs
sub
(bad)
jb
add
fdiv
sub
push
nop
pop
lods
test
popf
pop
jl
fbld
imul
les
mov
lea
hlt
adc
sub
dec
xor
dec
jns
addr16
adc
xchg
xor
(bad)
les
imul
mov
div
sbb
jae
xchg
les
jns
push
push
imul
cmp
and
push
sub
jne
(bad)
fcmove
cs
shl
rcr
fisttp
cmp
jmp
fist
mov
popf
das
add
vcvtsi2ss
fistp
mov
cdq
shl
jmp
repz
mov
jmp
sub
mov
mov
mov
outs
inc
push
mov
pop
iret
stos
jmp
and
sbb
call
pop
sahf
test
por
cdq
push
dec
aad
dec
and
shr
cs
loopne
jo
mov
xchg
ins
les
mov
sub
add
mov
dec
dec
fld
(bad)
push
mov
sub
or
push
push
mov
cmp
cld
and
aas
ror
addr16
add
mov
fadd
das
jmp
and
ds
dec
push
and
mov
js
loop
push
mov
popa
mov
ds
in
fisub
cs
div
fxch
loop
cld
jo
xchg
push
or
(bad)
mov
mov
ins
xor
add
mov
in
xchg
push
mov
sbb
mov
pop
cmps
mov
outs
and
push
ins
dec
inc
sti
pop
mov
push
inc
ins
outs
daa
lds
nop
adc
bound
arpl
psubq
cmp
xchg
inc
jns
xchg
shl
seta
dec
add
outs
ret
cmp
jg
fsub
inc
cmp
das
inc
out
fs
push
adc
movs
sti
xor
sbb
xor
and
pusha
inc
daa
mov
and
inc
(bad)
icebp
popf
push
dec
jne
sti
pop
sbb
xor
sub
stos
push
cmp
xchg
(bad)
mov
dec
add
scas
mov
jl
pop
sbb
fmul
cwde
xchg
enter
arpl
imul
sti
in
or
sub
ror
cld
data16
mov
(bad)
into
ds
and
stc
add
lods
int3
sub
fucomi
sub
mov
fld
xor
lods
mov
add
jge
retf
xlat
icebp
mov
push
shl
adc
xchg
retf
pop
test
mov
add
dec
daa
xchg
scas
or
icebp
and
in
xchg
xlat
or
push
sbb
sbb
lods
push
mov
ins
xchg
adc
jb
mov
mov
shr
inc
popf
xor
fisttp
dec
cmp
adc
add
cmp
sub
lods
scas
cdq
push
add
dec
int
inc
dec
mov
ss
jnp
dec
leave
dec
cs
cmp
(bad)
repnz
loopne
or
cmps
les
sar
test
retf
imul
inc
mov
add
shl
dec
test
xor
(bad)
cli
retf
sar
inc
mov
pop
and
pop
loope
xor
movs
sbb
hlt
fild
mov
out
fdivr
fimul
inc
xchg
and
cdq
jno
or
jmp
mov
inc
mov
inc
jb
jl
cli
or
xchg
test
xchg
rol
sub
inc
dec
hlt
jb
jp
sub
xchg
arpl
dec
pop
inc
arpl
mov
mov
push
jb
pop
cmp
and
int
or
outs
pop
shl
test
sar
retf
jne
sti
ds
inc
dec
pop
xchg
inc
shl
mov
mov
sub
or
jmp
popf
sti
pinsrw
cmp
ss
mov
sub
push
lahf
mov
pop
je
and
push
add
or
cmps
inc
rcr
aaa
stc
daa
test
add
repz
cmps
push
bound
js
sbb
cmp
push
push
out
sub
test
sub
mov
mov
xchg
adc
scas
js
cmps
fidivr
fld
mov
in
rol
ret
pusha
ret
cmp
daa
mov
push
lahf
in
xor
sub
cli
sti
xchg
call
or
dec
(bad)
push
fwait
dec
idiv
or
push
fadd
push
(bad)
aas
(bad)
rcr
pop
xor
xor
pop
xor
cmovbe
cmp
(bad)
rol
stos
pop
cmp
push
and
out
ins
mov
sbb
pop
retf
lds
aaa
loop
rcl
pusha
jb
sub
aad
iret
xchg
mov
mov
mov
ret
das
scas
pop
mov
call
cmc
sbb
sub
sbb
fld
jle
xor
jne
or
add
jp
push
movs
push
cmp
cmp
dec
or
sub
xor
mov
imul
mov
xor
bound
sbb
dec
jmp
pop
lahf
jns
sbb
push
psubusb
push
sbb
(bad)
cmps
addr16
imul
mov
retf
stc
lds
in
or
mov
push
fs
rol
mov
push
or
mov
pop
ins
xor
pcmpeqd
mov
test
pusha
mov
inc
sub
pop
out
adc
retf
mov
fdiv
mov
ss
jp
outs
and
mov
jecxz
cmp
xchg
enter
sub
inc
pop
rcr
push
stc
loopne
repnz
ret
(bad)
imul
jmp
jns
(bad)
daa
cmp
arpl
(bad)
hlt
fist
call
ds
adc
(bad)
nop
dec
loope
int3
movs
dec
popf
inc
dec
sub
and
cwde
cmp
ror
or
sbb
cmp
out
jl
cmps
out
adc
neg
cmps
cmp
mov
push
mov
push
sub
push
pop
lahf
mov
retf
retf
inc
sbb
sbb
retf
popa
add
out
or
sub
xchg
icebp
and
std
xor
sbb
jnp
js
pop
and
mov
repnz
jg
mov
pop
and
push
sub
cmp
inc
cmp
cmp
pop
dec
pop
pop
mov
jle
test
adc
jle
add
sub
mov
dec
imul
mov
jle
and
daa
mov
jo
(bad)
shr
popa
jno
push
push
imul
loop
je
xor
push
bound
shr
call
and
hlt
cmp
loopne
adc
or
pop
or
xor
(bad)
cmps
mov
sahf
jnp
movs
xchg
and
xchg
and
ins
adc
fld
imul
xor
push
imul
inc
les
mov
xchg
mov
ficom
xor
test
ja
fnsave
and
movs
or
scas
retf
xchg
jmp
cmp
cmp
or
sbb
xor
adc
je
xchg
mov
out
add
or
(bad)
xlat
push
inc
jns
sbb
(bad)
in
dec
aaa
cld
movs
lods
popa
sbb
sub
sbb
cli
pop
xchg
cmp
cmp
dec
cmp
mov
adc
pop
inc
xchg
cwde
je
clc
mov
pop
imul
call
adc
arpl
xchg
mov
(bad)
cmp
outs
pop
inc
push
call
mov
cmp
sbb
cmp
iret
test
arpl
rol
xor
add
int3
mov
in
enter
jnp
mov
fld
arpl
mov
jbe
push
aaa
arpl
je
lahf
je
push
cmp
lea
(bad)
mov
inc
scas
cs
xchg
outs
test
bound
test
sbb
mov
mov
cmp
fwait
lds
loope
lds
repz
shl
xor
pop
mov
pop
imul
mov
pop
icebp
inc
inc
cmp
aad
stos
std
retf
sub
and
add
leave
sub
repnz
inc
jg
and
rcl
stos
popa
(bad)
stos
or
jmp
scas
add
test
cld
mov
fisttp
xor
fwait
add
outs
jl
sbb
adc
das
xchg
arpl
cmp
cmp
cld
clc
fsubr
js
cmp
dec
mov
mov
fmul
sbb
xor
cmp
movs
cmp
rcl
push
lods
cmp
cdq
jg
ins
cmp
enter
jo
sahf
cmp
add
and
adc
lods
dec
add
in
mov
and
cdq
add
fiadd
xchg
jle
call
or
in
xchg
call
jmp
call
js
repnz
cmp
lods
push
mov
or
push
dec
test
add
clc
imul
out
mov
xchg
add
lock
in
dec
sub
mov
repz
mov
xlat
add
loopne
and
mov
cmp
mov
ja
cmp
lock
mov
inc
add
cmp
nop
adc
cmc
test
xchg
shl
mov
test
xchg
mov
jb
fist
mov
pop
fwait
inc
sub
arpl
(bad)
pop
imul
retf
push
add
(bad)
jl
dec
add
and
mov
pop
stc
jns
pop
(bad)
cs
push
and
pop
cwde
push
and
fwait
in
dec
stc
movs
push
add
retf
mov
cmp
push
mov
shl
inc
dec
or
xor
cmp
shl
dec
je
ficomp
adc
push
or
mov
jno
adc
fadd
outs
dec
int3
mov
push
or
adc
xor
xchg
jno
dec
(bad)
add
mov
and
outs
mov
ds
out
addr16
add
cmp
jne
inc
xchg
daa
push
mov
imul
inc
in
push
xor
xchg
outs
xor
bound
lock
outs
pop
jmp
adc
ins
fxch
pop
movs
addr16
stos
clc
int3
data16
jmp
std
(bad)
jmp
dec
ret
enter
mov
mov
inc
mov
push
cmps
mov
mov
movs
mul
movs
sub
dec
mov
scas
push
aaa
xor
loopne
out
popf
lods
or
and
sbb
inc
scas
cmp
lods
in
cli
jnp
jmp
cmp
xor
pop
int3
xor
dec
out
ret
retf
retf
pusha
sbb
sar
retf
(bad)
out
dec
ins
xchg
call
push
mov
das
and
mov
push
ficomp
es
xchg
adc
int
pop
pop
test
sub
out
push
xchg
xor
adc
popf
out
pop
mov
adc
xchg
dec
je
pop
pop
ficom
sub
ret
stos
inc
mov
daa
es
std
add
xor
or
sar
adc
push
or
sub
(bad)
sahf
adc
dec
sbb
mov
pop
repz
enter
test
repz
movs
sub
inc
xor
neg
ret
mov
fcomi
retf
aad
cdq
jmp
aaa
jmp
jmp
or
(bad)
aam
jmp
cmp
dec
xchg
add
pop
cmc
push
mov
xor
mov
rol
(bad)
add
inc
addr16
in
test
jne
push
or
popa
jecxz
push
jg
jge
fisttp
inc
retf
ins
movzx
mov
mov
mov
imul
aam
and
inc
jmp
cmp
xor
pop
pop
loop
jmp
cmp
xor
adc
cmp
push
rol
fistp
jecxz
shr
lods
jo
sbb
icebp
sub
lea
dec
mov
in
push
fwait
mov
jb
fmul
ss
push
aaa
daa
mov
cwde
mov
or
int3
pop
xor
jge
mov
cmp
pop
into
out
lock
call
jmp
jmp
push
seta
aad
hlt
push
ss
pop
clc
leave
adc
cmp
adc
push
in
add
jno
sbb
lods
jmp
xor
aaa
adc
jle
mov
daa
dec
out
call
retf
shl
mov
test
sar
call
jnp
xchg
mov
int3
cmp
test
test
fcom
adc
rcr
mov
sbb
push
lea
fsub
jae
dec
mov
inc
dec
mov
pushf
ss
adc
jns
jae
mov
pop
mov
xchg
fmul
lods
dec
jmp
and
mov
inc
sahf
repnz
stos
clc
in
ins
shl
sbb
push
nop
xor
inc
mov
mov
cli
xchg
add
dec
mov
xchg
cmps
cmp
sti
xor
cmp
xlat
pop
jle
sub
dec
sbb
stos
shr
fwait
mov
retf
or
add
retf
pop
sar
pop
cmp
popf
inc
gs
out
in
and
cmp
mov
iret
lods
lods
jb
leave
or
inc
mov
push
push
leave
frstor
test
dec
sbb
or
push
movsx
mov
cmps
sub
leave
jmp
(bad)
jle
aaa
cmp
fcmovnbe
pop
inc
ins
popf
lods
loop
std
jg
scas
jg
fnstcw
shl
scas
pop
jle
mov
mov
call
int
jle
cdq
loope
push
sub
clc
fmul
stc
sbb
dec
neg
ret
add
(bad)
shr
outs
(bad)
ret
sub
lds
sub
mov
mov
cmp
movs
dec
and
jnp
cmp
mov
daa
push
jl
dec
adc
scas
jecxz
cmps
fiadd
test
and
dec
pop
push
dec
out
int3
std
(bad)
xor
(bad)
in
sti
aam
aas
xchg
or
mov
addr16
imul
sub
dec
xor
mov
mov
sub
ins
dec
push
das
push
adc
out
mov
ret
in
(bad)
std
mov
stos
das
imul
mov
xchg
ja
fcom
mov
mov
xor
mov
push
jb
mov
movs
adc
aaa
test
out
jl
or
push
push
inc
stos
push
stos
stos
add
mov
nop
cld
cmp
bound
retf
mov
les
outs
xor
(bad)
es
fimul
adc
jb
es
and
add
int
push
push
and
gs
movs
dec
and
and
or
inc
in
pusha
jmp
shr
add
cmp
addr16
mov
retf
add
sbb
xchg
mov
aam
cmp
xchg
inc
xlat
outs
in
jmp
push
jbe
and
push
jg
std
ins
fst
(bad)
sub
or
xchg
inc
xchg
aaa
sub
stc
outs
hlt
imul
inc
add
ror
xor
sbb
in
mov
(bad)
push
push
mov
sub
fwait
xor
enter
std
mov
movs
aaa
jo
loopne
cmp
mov
mov
fcom
push
jmp
lods
adc
imul
fistp
jbe
in
fwait
jmp
inc
es
dec
push
test
fs
mov
call
or
out
fidiv
push
mov
jmp
frstor
cmp
sub
ds
xor
es
loope
mov
adc
pusha
jmp
sub
dec
into
cli
add
iret
popa
outs
add
xchg
ret
movs
fwait
mov
(bad)
in
jmp
and
or
hlt
xor
cmp
js
sub
mov
rcr
pop
push
ficom
das
fcomp
xchg
adc
adc
hlt
imul
dec
outs
scas
mov
adc
jmp
stos
cmp
sub
dec
cmp
sbb
je
stc
inc
adc
sahf
jge
push
mov
sub
ja
ficom
and
aas
mov
lods
out
mov
sub
mov
fmul
ins
gs
js
std
iret
and
xor
xor
pop
sbb
mov
movs
gs
dec
in
ficom
mov
aad
mov
pop
pop
xor
jl
les
jp
sbb
daa
sti
sub
sar
in
mov
scas
pop
icebp
lods
mov
push
xchg
jl
imul
out
push
in
ja
xor
xor
xchg
adc
outs
mov
jp
xchg
pop
scas
ds
dec
adc
pop
xchg
pop
xor
mov
adc
dec
pop
and
cmp
(bad)
cld
mov
pop
bnd
outs
pop
into
jle
or
pop
sbb
xor
or
ins
sub
das
lods
jbe
push
or
test
retf
or
out
mov
or
jl
rcr
aad
jg
mov
jb
cld
mov
cld
je
loopne
ret
popa
dec
bound
sub
or
push
xor
je
aaa
dec
and
sbb
stc
or
pop
fs
(bad)
les
in
sbb
movs
push
xchg
mov
push
mov
repnz
push
(bad)
and
sub
jp
fsub
imul
push
cmp
xor
aam
movs
dec
jae
fld
inc
maxps
ficomp
sub
stos
or
pop
arpl
iret
std
fadd
mov
jmp
bound
and
cmp
lock
enter
push
out
mov
xchg
mov
mov
mov
adc
(bad)
call
dec
stos
test
scas
sub
in
cmc
dec
inc
icebp
jno
ds
sub
fld
lods
sbb
cmp
and
ja
in
arpl
xchg
pop
(bad)
repnz
lock
jge
mov
push
icebp
jg
test
mov
sub
(bad)
repnz
pop
xchg
in
pop
adc
push
and
xchg
fcmovbe
mov
cmp
xor
std
js
jg
clc
outs
mov
mov
cmps
dec
frstor
or
sbb
cmp
outs
clc
aam
aad
inc
es
into
mov
dec
clc
scas
out
pop
xchg
push
(bad)
dec
mov
add
scas
xor
repnz
or
iret
mov
inc
sti
sar
add
push
ins
sbb
and
mov
cmps
nop
push
cmp
xor
in
sbb
xchg
aaa
sbb
je
mov
dec
sub
mov
push
fild
jmp
lods
mov
dec
pop
inc
lods
lea
add
mov
xchg
or
adc
loope
mov
aam
div
sbb
inc
test
xchg
scas
push
ja
iret
cwde
ret
inc
xchg
xor
jb
fnsave
xlat
call
mov
jmp
fsub
and
mov
out
fwait
cmp
fnstenv
cmp
jg
aaa
imul
inc
inc
out
pusha
push
int3
or
jno
addr16
rcr
dec
stos
jg
lahf
sbb
jp
jno
xor
cmps
push
mov
jns
sbb
jns
ins
or
int
mov
adc
push
lds
out
aam
mov
movs
push
xor
popa
shl
call
sahf
inc
jg
pop
xchg
test
int
(bad)
jle
xchg
ds
es
cwde
pop
stc
imul
das
mov
rcr
movs
mov
test
cdq
mov
rcr
into
hlt
cmp
lods
adc
mov
out
jle
sub
call
in
mov
aas
xchg
cld
stos
cdq
mov
fcmovbe
adc
in
lock
lock
sub
adc
stc
cmc
dec
mov
sub
dec
cmp
mov
xor
jp
mov
(bad)
pop
fnstenv
pop
jo
jmp
repnz
mov
scas
or
xchg
sar
(bad)
bound
iret
pushf
fist
lds
mov
sub
mov
mov
enter
div
(bad)
add
dec
adc
pop
push
cmp
jae
sti
rcl
and
inc
mov
add
adc
sbb
jle
js
add
add
pop
jmp
or
xor
pop
cmp
jmp
push
xor
add
jmp
retf
inc
or
xchg
fiadd
push
iret
add
mov
jge
xchg
mov
jl
pusha
in
int
int3
shr
or
shl
aam
out
sub
sar
aam
xor
fdiv
loop
lahf
out
scas
push
dec
pop
dec
adc
nop
pop
les
adc
test
test
dec
les
scas
xchg
xchg
fdivp
scas
pop
mov
in
or
xchg
push
(bad)
cmp
mov
dec
mov
into
mov
inc
push
cmps
mov
xchg
or
ret
arpl
shr
inc
dec
add
dec
das
and
scas
xor
test
xchg
out
iret
sti
in
inc
mov
sub
pop
pop
adc
in
shl
mov
push
jl
xchg
cmps
rcl
gs
cmps
fs
imul
push
or
pop
adc
sub
retf
push
and
stc
mov
push
dec
aas
mov
mov
jno
out
push
xchg
ds
fmul
push
push
std
pop
mov
(bad)
retf
(bad)
pop
xchg
mov
int
stos
addr16
into
inc
xchg
loop
mov
jbe
pop
jne
jmp
mov
xchg
xlat
push
and
mov
add
and
pop
mov
retf
dec
sub
or
popf
in
in
dec
int3
inc
push
pushf
(bad)
push
(bad)
clc
push
outs
dec
es
cs
sub
fsubr
sbb
inc
retf
xor
pop
addr16
rol
add
js
enter
xor
dec
dec
aam
aam
adc
not
(bad)
cmc
(bad)
mov
jp
pop
repz
mov
jo
in
mov
jbe
test
push
bound
hlt
fwait
or
add
mov
std
gs
cmp
(bad)
in
pop
push
test
sub
test
mov
inc
push
ficomp
dec
xchg
xor
or
mov
cmp
movs
xchg
stos
inc
test
ss
or
mov
mov
push
movs
mov
rol
pop
cvttps2pi
push
fild
pop
int
and
jp
inc
pop
push
mov
xchg
inc
dec
or
mov
fdivp
dec
arpl
sti
push
xchg
scas
xchg
cdq
jle
xchg
clc
imul
cmps
adc
inc
sub
jg
popf
mov
inc
call
fucomp
(bad)
jo
adc
fsubr
jle
pop
xchg
push
mov
imul
lea
jp
cmps
mov
je
fdivr
add
jne
push
out
or
and
xchg
call
push
jecxz
cmp
jmp
es
(bad)
fist
cmp
xor
clc
sbb
xlat
pop
pusha
mov
sub
loopne
cmps
push
out
inc
sbb
cmp
adc
mov
loopne
out
fisubr
adc
mov
pop
jl
test
test
mov
fldenv
es
or
(bad)
inc
cmp
cmp
push
pop
ds
fadd
sbb
loop
jl
or
mov
out
and
push
push
cpuid
ins
sar
jge
push
cmps
dec
push
cmp
push
(bad)
ja
push
cmp
les
int3
cmp
mov
rcr
mov
adc
in
lock
push
sbb
ja
gs
jae
cs
in
sub
mov
rcl
aad
retf
in
mov
rcr
xchg
jp
pushf
retf
aad
dec
lods
inc
call
ret
mov
ror
pop
mov
fstp
test
or
ja
iret
mov
stos
out
call
pop
xchg
jge
enter
test
inc
cmps
and
aaa
rcl
aas
sbb
jnp
push
sub
adc
ror
nop
imul
sub
stos
test
inc
clc
inc
inc
xchg
mov
inc
pop
xchg
dec
(bad)
jno
add
mov
inc
aaa
and
adc
mov
sbb
dec
aaa
out
jecxz
mov
xor
test
retf
fcom
mov
out
cmc
std
stc
dec
dec
xor
cld
and
mov
(bad)
fucomip
add
push
mov
mov
jbe
arpl
adc
push
mov
fisubr
adc
adc
movs
inc
sub
mov
std
aas
dec
xor
cmp
pop
mov
add
int3
xlat
jbe
sbb
jae
and
cmp
and
test
mov
push
fisubr
imul
cdq
outs
xchg
in
aad
sahf
clc
scas
inc
retf
pushf
and
jle
xchg
pop
jns
push
ins
inc
jbe
mov
sub
push
out
sub
sbb
into
jge
in
outs
pop
and
imul
jge
cwde
adc
jbe
(bad)
dec
mov
dec
jbe
in
jbe
xor
adc
lahf
fmul
add
mov
mov
xchg
lock
(bad)
pop
xor
adc
add
aas
push
mov
jb
sbb
retf
lahf
jl
add
call
mov
inc
pushf
ins
and
pop
aad
xchg
xchg
mov
pop
call
cmp
mov
mov
ins
gs
jmp
cmc
pop
mov
or
adc
nop
fistp
ins
scas
or
push
lds
ins
xor
pop
dec
mov
dec
jbe
inc
jne
imul
jmp
sub
sbb
movs
cs
mov
mov
inc
stc
xchg
jmp
scas
popw
inc
and
into
mul
inc
sbb
sub
mov
in
mov
in
ss
nop
pop
dec
cmp
jmp
(bad)
xor
test
jle
clc
imul
pop
clc
and
stos
mov
jl
test
xor
sub
lods
cmps
add
xor
shl
shr
ins
hlt
gs
dec
lock
imul
rdtsc
sbb
cmp
adc
dec
jmp
dec
lock
mov
cdq
aaa
xor
sahf
dec
loope
js
cwde
dec
mov
dec
stos
push
adc
sbb
repnz
call
push
retf
arpl
retf
test
nop
jb
pop
push
jo
in
cld
adc
mov
xor
test
pop
and
jmp
loopne
sbb
loope
jp
(bad)
movs
add
mov
retf
adc
inc
and
sbb
xchg
pop
popa
or
mov
mov
push
add
push
inc
pop
inc
pop
add
xchg
stos
popf
add
(bad)
push
or
jae
stos
in
mov
ret
fidivr
enter
xor
mov
and
pop
cmps
adc
xor
inc
test
xchg
add
pop
cdq
mov
pop
mov
shr
cmp
pop
jmp
xor
ror
aam
addr16
inc
jge
push
sbb
fwait
mov
stos
push
in
inc
pop
lea
jns
jbe
and
xchg
adc
clc
inc
out
movs
(bad)
cmp
sub
dec
jns
scas
dec
mov
(bad)
mov
lods
cmp
data16
lock
dec
shl
add
jmp
lods
mov
mov
inc
add
jb
arpl
pop
fbld
sub
aad
push
adc
(bad)
shl
iret
pop
push
sub
sbb
xor
sahf
pushf
push
(bad)
repnz
sbb
dec
add
ins
out
add
pusha
fdiv
or
icebp
add
dec
sbb
pop
xchg
push
inc
push
sbb
adc
push
jo
sub
xchg
mov
jg
jmp
ins
je
aam
rcl
rol
es
sbb
mov
scas
jl
retf
mov
les
popa
jmp
pop
adc
push
jp
cmc
mov
scas
and
outs
and
movs
ins
xchg
cli
pop
jmp
mov
cmps
sbb
test
push
xor
(bad)
mov
jnp
pop
inc
das
mov
adc
in
bound
xchg
mov
sbb
dec
outs
adc
push
sbb
pop
pusha
loop
mov
jmp
loopne
(bad)
repnz
push
add
dec
not
mov
retf
sbb
shl
gs
fcomp
imul
inc
inc
(bad)
outs
mov
jbe
int
xchg
pop
loope
imul
in
cwde
int
mov
mov
orps
ret
fmul
jp
mov
fbstp
into
daa
out
cmc
adc
xchg
aaa
aaa
xchg
sub
inc
aaa
pop
je
jno
imul
je
mov
(bad)
adc
push
call
cmp
adc
add
push
add
adc
push
bound
inc
leave
shl
mov
inc
pop
popf
xor
pop
ror
inc
aad
addr16
adc
push
pop
sti
and
enter
sub
cli
mov
fist
lea
push
cmp
and
sbb
shl
inc
mov
out
add
or
inc
sbb
repnz
cld
pop
fnstcw
in
push
pop
mov
sbb
pop
inc
sub
ds
mov
dec
ds
xor
push
push
xchg
dec
xor
push
test
push
and
(bad)
mov
jno
lock
in
or
push
sar
dec
stos
push
jmp
test
pushf
or
or
add
jbe
push
punpckhwd
mov
not
out
sbb
pop
add
sub
push
sti
out
add
inc
mov
adc
mov
addr16
xor
inc
psllw
xchg
mov
cld
js
pop
mov
xor
popf
dec
shl
jae
je
ret
sbb
test
loop
fcmove
xor
sub
mov
and
stos
das
and
mov
and
pushf
and
aaa
inc
adc
cmps
mov
dec
xchg
aam
cli
mov
add
cld
(bad)
pop
jp
hlt
rsqrtps
cs
inc
pop
out
push
and
push
xor
xchg
setp
jmp
push
cs
mov
sbb
xchg
jmp
mov
ret
xchg
jnp
clc
add
cmp
dec
fwait
shl
cmp
push
mov
xchg
jmp
scas
cmps
mov
lds
mov
mov
add
lea
ret
xor
dec
xlat
ss
repnz
push
jge
dec
fadd
pusha
mov
lods
or
fidivr
jecxz
mov
mov
add
xor
jecxz
xor
mov
fistp
xchg
jg
pop
aaa
lods
sahf
shl
inc
int
fsub
(bad)
repz
bound
pop
add
fs
or
fs
push
jo
dec
inc
mov
push
stos
push
lds
sbb
and
ja
mov
sbb
fmul
cmp
retf
aaa
out
sbb
jge
adc
sbb
fsubr
mov
xlat
retf
xor
enter
and
ss
xchg
sub
neg
or
and
retf
adc
mov
leave
and
add
je
cmp
or
push
xor
pop
loope
xchg
jmp
retf
fnstcw
lahf
mov
popa
pop
call
loope
sub
ds
sub
and
and
jmp
cmp
xchg
icebp
sbb
xor
sbb
cmps
clc
nop
out
ins
or
icebp
mov
ret
bound
pop
pop
in
popf
retf
shl
xor
xchg
pop
pop
fiadd
mov
jne
push
xor
or
leave
or
(bad)
out
xchg
ins
mov
cmp
mov
pusha
fbstp
push
sub
pop
out
pop
or
jmp
dec
mov
addr16
out
mov
cmps
imul
ja
test
inc
add
loopne
adc
push
lock
nop
sti
xchg
in
xchg
mov
addr16
push
lods
sub
cmp
hlt
cmc
jg
inc
add
dec
push
ss
xor
inc
stos
dec
ret
or
lahf
or
fsub
cmp
out
dec
idiv
out
cwde
movs
xchg
stos
rol
clc
xlat
dec
ror
sbb
sub
xor
jo
neg
repnz
sti
push
adc
dec
inc
in
outs
stos
daa
jp
sar
mov
cli
leave
out
jmp
scas
lea
xchg
sbb
mov
cmp
adc
sbb
push
mov
sub
adc
pop
mov
jae
push
push
xor
add
adc
retf
mov
mov
test
(bad)
loope
ja
cmp
(bad)
lock
xchg
movs
or
movs
dec
inc
add
fisttp
cmp
mov
lods
test
in
xchg
jnp
aaa
bt
mov
xchg
imul
sub
xor
dec
rcr
adc
(bad)
lds
in
jp
add
jmp
pop
inc
mov
pop
jo
xchg
loop
inc
je
cmp
push
cmp
push
and
dec
mov
push
arpl
jge
dec
scas
dec
pusha
xor
es
jecxz
mov
jbe
mov
mov
int
cmc
div
or
sbb
sbb
cwde
loopne
jmp
lods
(bad)
cld
push
rol
shr
aas
and
add
fsubr
pop
lock
jo
push
pop
repnz
cdq
dec
loopne
mov
and
jp
stc
jns
imul
stos
(bad)
lods
sub
loop
and
cdq
pop
dec
arpl
std
or
xor
mov
mov
cmp
adc
test
and
ret
pop
shl
or
push
lods
xchg
cmp
mov
or
(bad)
gs
in
inc
push
jmp
cmp
jnp
inc
push
mov
imul
mov
jp
pop
icebp
sbb
inc
jae
mov
xor
scas
mov
nop
cmps
mov
push
in
jbe
frndint
push
ds
std
out
xlat
adc
cmp
and
adc
cs
ss
mov
(bad)
inc
sbb
xchg
aaa
lds
and
cmp
inc
mov
and
add
cli
rcl
or
stos
adc
pop
xor
aad
cmp
jge
xor
cmps
jge
and
(bad)
in
inc
dec
ds
sub
pop
dec
int3
xchg
out
cli
out
mov
adc
cld
mov
pop
xchg
and
fld
mov
cmp
and
dec
and
cli
mov
add
and
jl
cli
mov
mov
not
jae
dec
ja
(bad)
dec
aad
fimul
fdivp
pop
mov
push
lock
(bad)
xor
cmp
loop
mov
dec
gs
(bad)
jmp
bound
in
movs
adc
pop
mov
pop
movs
aad
das
addr16
out
push
idiv
xchg
xchg
sahf
dec
push
or
pop
out
in
pop
push
pop
and
inc
xchg
cmp
and
sub
mov
cs
out
mov
jmp
xchg
(bad)
mov
mov
push
stos
jb
int3
sub
out
std
ja
or
stos
mov
dec
pop
packsswb
les
inc
dec
jg
stos
push
mov
cmp
mov
push
fucomi
in
jbe
bound
cli
dec
cmp
fmul
dec
in
dec
movs
test
aas
data16
add
add
aad
and
gs
mov
cdq
cmp
push
add
pusha
fscale
jno
mov
push
mov
faddp
pop
gs
nop
cmp
mov
mov
test
sub
jns
push
pop
sar
mov
jbe
outs
push
cli
int3
dec
dec
mov
adc
inc
pop
mov
add
out
mov
pop
cmp
jns
push
mov
inc
cmp
cld
inc
push
call
fs
ds
add
retf
or
adc
in
xor
dec
loope
pop
test
mov
lock
dec
lahf
push
cs
std
mov
xor
mov
repz
or
int
gs
pop
pop
inc
ins
jbe
pop
out
inc
add
mov
stc
sub
das
sub
(bad)
or
cdq
(bad)
adc
lods
adc
pop
(bad)
xchg
adc
vpextrw
lds
mov
pop
inc
(bad)
call
sub
add
lea
and
movs
sbb
aaa
dec
pop
sub
loopne
inc
push
sbb
ss
dec
cmc
xlat
aad
std
pop
cld
movs
aad
outs
fs
inc
dec
or
das
lea
scas
jo
inc
cwde
mov
mov
arpl
sbb
bound
iret
jle
pushf
mov
aas
pusha
adc
add
inc
push
dec
mov
ins
sahf
sti
js
pop
mov
xchg
sti
arpl
mov
inc
and
adc
fs
ficomp
int
push
add
iret
enter
mov
icebp
repnz
arpl
xchg
and
lods
sbb
(bad)
mov
fcom
gs
(bad)
xchg
cmp
inc
add
fstp
lock
xlat
xlat
(bad)
pop
push
push
cmp
mov
inc
scas
data16
imul
ss
aam
dec
pop
mov
fisttp
shl
outs
mov
inc
mov
adc
add
add
mov
sub
shl
dec
and
ss
repnz
xor
inc
push
and
scas
pop
mov
enter
add
pop
jns
ficomp
mov
fld
xor
repz
sbb
dec
arpl
sub
outs
sbb
pop
int3
sbb
push
into
mov
jp
pop
jno
(bad)
adc
das
mov
push
sub
loopne
or
movs
cs
mov
xor
sbb
rcr
push
(bad)
movs
cli
push
mov
add
pop
outs
(bad)
bound
addr16
inc
gs
lea
dec
mov
pop
data16
mov
inc
mov
xchg
or
(bad)
shl
in
mov
jb
in
fcomp
call
mov
sbb
icebp
test
xor
sub
mov
inc
ror
ja
cmp
(bad)
adc
inc
pop
cmps
fld
in
pop
inc
sbb
mov
inc
imul
retf
ins
adc
inc
lock
pop
or
lods
shl
int3
repz
xor
ret
les
and
popa
mov
sub
movs
(bad)
pop
jmp
js
call
add
imul
ror
lahf
lods
sbb
jne
xchg
pusha
loopne
cmp
dec
pop
add
adc
pop
mov
mov
add
and
je
mov
sahf
popf
push
popf
mov
xor
leave
jbe
add
fcomp
ret
in
aaa
cs
xor
into
enter
sbb
jno
xchg
int3
pop
bound
repz
mov
sbb
(bad)
es
push
dec
ss
cld
js
cwde
sbb
cmp
sbb
jb
clc
mov
ss
push
pop
in
and
pop
xchg
sar
sub
int3
int
dec
dec
test
sti
adc
mov
xor
pop
ficom
in
and
outs
cli
fs
mov
xor
adc
mov
jb
out
mov
mov
jne
je
movd
clc
xor
xor
jmp
std
inc
div
les
jmp
cmp
fs
xor
frstor
mov
mov
sahf
jnp
movs
int3
loop
adc
xchg
and
or
push
(bad)
xchg
sub
mov
dec
stos
movs
cmp
xchg
cmps
pop
push
xchg
andnps
xchg
enter
jg
add
or
dec
sbb
jo
push
fidivr
bnd
(bad)
cmps
cmp
or
pushf
sbb
mov
dec
cdq
sbb
adc
inc
or
inc
int
inc
(bad)
pop
stos
aaa
es
lahf
inc
sub
pop
outs
(bad)
mov
adc
adc
adc
jae
pop
and
xchg
inc
jmp
loope
pop
retf
fldcw
xor
xlat
imul
loop
xor
mov
call
pushf
test
inc
or
xchg
(bad)
data16
xchg
mov
cwde
or
and
js
lods
cmps
cwde
mov
and
call
lds
push
dec
push
lahf
imul
outs
jbe
stc
xor
mov
mov
and
or
fwait
mov
lods
stc
fst
add
shl
cmp
cdq
ss
sub
out
stos
repz
pop
mov
jp
add
pushf
sahf
and
mov
push
mov
jle
and
fidivr
gs
rcr
js
xor
das
push
mov
sub
repz
std
leave
inc
test
jne
sahf
cmps
inc
popf
fimul
xchg
aam
mov
mov
dec
or
dec
rol
movs
cmp
out
adc
shr
mov
ins
popf
or
in
test
fsubr
leave
clc
adc
std
push
or
arpl
sub
test
inc
push
shr
js
enter
fwait
push
in
lods
xlat
mov
arpl
inc
pop
shl
pop
push
and
or
cmps
xchg
mov
mov
mov
outs
cmps
push
clc
cld
pop
sub
pop
ret
cmp
adc
fcmovbe
push
call
cmps
xchg
add
ret
sub
or
(bad)
out
jbe
pop
jle
popf
add
cmp
jmp
cdq
loopne
iret
in
dec
scas
or
adc
sbb
push
mov
ins
adc
daa
jb
(bad)
bound
pop
and
shl
out
jl
ret
xchg
pop
test
shl
clc
and
ja
xchg
cmp
mov
mov
cmp
test
jne
xor
add
sbb
test
test
and
fidivr
dec
daa
imul
jb
or
paddsb
jo
repz
xor
aad
out
xchg
test
imul
push
mov
dec
imul
add
or
sub
sahf
xchg
pushf
stos
mov
mov
ficomp
fcom
imul
loopne
out
cmp
pop
(bad)
jne
clc
mov
dec
cmps
fs
inc
(bad)
jp
call
xchg
pop
mov
xchg
xchg
imul
pop
xchg
xchg
movs
jge
sbb
mov
cmp
sti
jl
xor
cmc
fld
sub
test
mov
(bad)
push
ds
sahf
mov
mul
fs
fnstsw
stc
retf
call
push
test
cld
cli
jo
out
dec
adc
dec
call
cs
jno
lods
shl
pop
mov
mov
push
pop
pop
push
loop
pop
cwde
aad
mov
dec
mov
rdrand
and
dec
pop
(bad)
xchg
es
push
and
ss
push
cmp
imul
cmps
push
sahf
pop
or
loop
mov
outs
mov
(bad)
mov
lock
scas
push
push
dec
pop
int3
add
adc
pop
loop
arpl
ins
inc
or
cdq
fdivr
aam
xor
retf
cs
icebp
cdq
das
push
inc
in
outs
xchg
inc
cwde
adc
add
add
inc
cld
or
adc
loop
test
mov
fnstsw
cli
and
je
das
(bad)
jg
jge
add
xor
xor
mov
sub
pusha
adc
fdiv
ds
mov
or
jo
pusha
sub
pop
aad
dec
rep
loopne
and
lea
dec
cs
mov
and
(bad)
scas
pop
push
ins
cmc
repz
pop
outs
add
stos
xchg
or
nop
lods
add
xchg
push
jg
cmc
mov
cdq
xor
jmp
and
xchg
mov
fs
punpckhdq
(bad)
adc
popf
psubsw
and
mov
dec
out
loop
ret
inc
ins
sbb
lea
retf
push
cli
add
bound
jmp
(bad)
stos
mov
adc
dec
xchg
cli
cmps
ins
pop
aas
lea
int
sar
adc
sub
out
(bad)
mov
inc
push
jmp
arpl
hlt
hlt
data16
mov
sbb
xchg
aam
cmp
in
jno
pop
bound
stos
adc
xchg
clc
push
inc
sub
out
call
mov
iretw
dec
adc
aam
fcom
adc
pop
test
or
jae
lahf
dec
cmp
xor
fmulp
or
sub
xchg
and
and
fisubr
mov
in
pushf
push
out
aam
or
sub
jl
push
sub
es
ss
xchg
inc
ret
sbb
inc
push
mov
and
inc
jmp
nop
adc
jle
lock
rol
add
add
dec
sbb
mov
sahf
out
arpl
jle
stos
or
cli
jp
test
inc
inc
cmps
pop
sbb
cmp
and
inc
cld
jbe
pop
addr16
sahf
mov
jae
cmps
push
push
mov
lods
add
xchg
cs
clc
pop
out
pop
mov
fdiv
pop
repz
movs
idiv
hlt
mov
xor
loopne
test
cmp
fadd
leave
dec
pop
push
adc
fidiv
stc
stos
xor
mov
mov
aad
pop
and
sti
int3
lahf
sub
fnsave
adc
mov
xchg
sub
push
and
push
call
frstor
retf
out
in
nop
gs
jne
data16
lahf
pop
int
jge
mov
xchg
mov
mov
fcmovnu
dec
outs
or
pop
sub
(bad)
sahf
cmp
mov
mov
or
sbb
pop
mov
push
lds
mov
mov
pop
pop
pop
mov
icebp
call
cwde
push
std
loopne
xor
add
in
or
data16
add
push
pop
dec
jmp
mov
or
loope
pushf
test
gs
clc
adc
sub
mov
in
in
mov
imul
sti
imul
mov
lods
pop
out
(bad)
mov
mov
iret
add
and
jnp
push
leave
pop
into
cmp
push
(bad)
sbb
scas
push
mov
inc
mov
pop
sub
push
out
jnp
sub
jae
xor
mov
sbb
push
or
popa
pusha
mov
ins
dec
cmps
iret
fdivr
out
std
mov
stc
mov
sbb
fnstenv
mov
test
adc
out
je
(bad)
cmps
in
jno
in
push
push
sub
ss
jg
xor
pusha
bound
ds
dec
mov
mov
pop
fimul
cmp
xor
and
jo
enter
push
pusha
mov
push
mov
movs
mov
jg
sbb
outs
dec
mov
lds
pusha
retf
sub
popa
push
cmp
pop
test
and
push
cld
(bad)
mov
lea
mov
imul
push
xchg
or
retf
jmp
fsubr
inc
loope
js
and
outs
test
enter
push
popf
les
xor
popf
xchg
rcr
or
enter
dec
pusha
popa
fucomp
pop
xor
fadd
les
jns
bound
push
inc
in
stc
inc
pop
push
rcr
sahf
mov
xchg
push
jne
into
and
cmps
jne
cmp
cmc
adc
pop
mov
std
xchg
clc
and
(bad)
rcpps
jns
in
fwait
in
fdivp
jp
jns
out
cmp
push
jg
sti
pop
mov
ins
ret
test
mov
cmps
mov
stos
push
mov
or
pop
push
or
js
jge
mov
test
mov
daa
bound
pop
dec
mov
fwait
(bad)
(bad)
xchg
or
mov
fnstcw
jb
std
cwde
add
push
sbb
dec
ss
ins
into
adc
in
xchg
les
sub
mov
jge
adc
mov
dec
in
xchg
inc
pop
cmps
stos
jp
fist
sti
ret
(bad)
add
pop
add
jne
lods
movs
paddw
push
add
mov
adc
inc
inc
pop
jbe
je
rol
daa
ds
push
out
pop
xchg
iret
push
in
aas
loope
sahf
je
popa
add
retf
mov
mov
ret
fistp
add
xchg
into
jne
xchg
stc
xlat
mov
into
lods
cmp
scas
adc
loop
popf
mov
dec
stos
sbb
imul
cmp
mov
mov
lock
popa
and
or
push
rcl
ds
push
xchg
ficom
xor
aam
and
pop
mov
mov
loope
pushf
inc
jg
fcomp
jo
jle
jnp
cmp
jmp
pop
xchg
mov
mov
and
in
mov
mov
call
fabs
lods
jmp
mov
aas
jno
aas
retf
cli
xor
ror
repz
imul
or
mov
mov
std
call
shl
mov
adc
out
inc
cld
scas
leave
mov
jbe
and
enter
adc
rcl
daa
enter
out
clc
aaa
addr16
test
add
sbb
sbb
jmp
(bad)
dec
add
xchg
fist
mov
adc
adc
pop
pop
repz
stos
pop
cmps
mov
push
ins
mov
pusha
and
jge
mov
cmp
ja
mov
dec
ret
(bad)
ja
gs
mov
push
imul
ret
ins
cmp
push
pop
mov
mov
cmp
mov
and
mov
xchg
mov
movs
in
push
and
cmp
(bad)
dec
dec
xchg
sbb
leave
cmp
(bad)
stc
data16
fmul
stos
scas
adc
cmps
mov
in
mov
int
mov
in
sbb
lods
aas
jmp
(bad)
not
fistp
jnp
mov
inc
jne
xchg
add
ja
loope
enter
jp
test
xor
push
cmc
in
in
and
(bad)
xchg
in
sbb
fs
das
xchg
outs
ficom
hlt
sbb
sbb
loop
inc
and
pop
arpl
sbb
sahf
sub
adc
shld
nop
sbb
cwde
xor
test
jo
test
cmp
outs
pop
adc
mov
aas
jmp
jne
fist
cmp
sub
sub
int3
push
aam
out
cmps
add
(bad)
stos
neg
mov
ins
shr
mov
or
fistp
cli
push
ins
daa
adc
loopne
aam
movs
stos
and
sbb
lea
pusha
add
pop
inc
repz
xor
sbb
xorps
or
pop
mov
pushf
pop
mov
or
cld
add
xor
mov
mov
xchg
mov
cmc
stos
iret
sti
gs
xchg
test
pop
sbb
jno
ds
ss
addr16
inc
sbb
out
sahf
jbe
add
(bad)
adc
pusha
jle
sbb
sub
loopne
pop
and
jae
xor
(bad)
jb
loop
call
dec
ficom
jl
cmp
lahf
push
push
push
(bad)
call
or
enter
cli
outs
jmp
cdq
sub
pop
je
mov
ds
pop
add
mov
inc
jno
or
mov
dec
xchg
test
call
clc
dec
mov
push
cmp
push
dec
shl
pop
popf
in
mov
fstp
jecxz
jb
popf
and
std
pop
popa
push
xchg
jb
jbe
ds
dec
iret
call
sti
push
aam
das
loope
pop
add
mov
jns
pop
mov
popf
loope
pop
clc
jmp
and
sub
mov
(bad)
sub
mov
sbb
and
pop
sbb
retf
shr
sahf
push
add
in
xor
pop
mov
js
jle
jmp
xor
and
mov
adc
or
leave
movs
push
xchg
pop
cmp
imul
mov
inc
xor
push
in
inc
mov
ret
mov
icebp
outs
inc
(bad)
call
(bad)
sbb
adc
dec
or
mov
xchg
mov
sub
xor
lahf
lea
data16
or
and
push
jmp
(bad)
push
add
(bad)
leave
xor
loop
adc
push
ins
adc
mov
retf
jge
sub
xchg
or
pop
(bad)
jnp
and
jge
push
div
pop
jl
ss
call
call
mov
loope
dec
add
mov
mov
addr16
fcom
add
or
jmp
lods
pop
pusha
fs
mov
mov
mov
imul
mov
pop
sub
cmc
inc
lahf
call
fild
sahf
repnz
add
mov
(bad)
pop
retf
cs
movs
xchg
xchg
ror
cmp
ret
push
jmp
dec
sub
xor
xchg
jmp
pop
repnz
xor
push
test
cmps
clc
into
jmp
xlat
push
pop
imul
push
push
iret
stos
js
loope
pop
jns
fs
jge
fistp
jae
jle
test
test
out
sub
(bad)
mov
rcr
int
enter
(bad)
into
popa
sub
jp
ficomp
xchg
je
js
xor
add
sbb
in
retf
cmps
jg
mov
popf
out
jl
scas
mov
inc
xchg
push
or
and
push
adc
ror
ret
into
xor
test
xor
leave
dec
inc
adc
int
pop
jecxz
inc
cmp
pop
pop
jge
sub
loop
xor
push
cmc
outs
call
push
push
push
shr
retf
jb
push
push
cmp
ret
mov
sub
add
xor
add
cs
add
jne
mov
ins
ds
pop
jmp
pop
adc
loop
pop
int
pop
int3
jmp
ret
mov
shl
ret
jp
cmp
cmps
cmps
pop
push
retf
dec
mov
mov
test
popf
jno
sub
fsubr
test
imul
or
(bad)
fist
fnstsw
pop
test
call
out
mov
inc
sub
inc
mov
sahf
mov
lea
dec
cmp
aaa
and
inc
leave
in
or
pop
adc
pop
sbb
rcr
xor
push
sahf
cmp
(bad)
sahf
push
xchg
sub
lea
ja
jl
and
mov
prefetchw
add
mov
test
lods
and
add
imul
and
icebp
repz
hlt
js
push
data16
(bad)
test
(bad)
test
jb
pop
cwde
sbb
xacquire
push
and
leave
dec
sub
pop
scas
mov
je
je
or
mov
jmp
mov
call
in
jb
mov
adc
xchg
cli
or
lea
or
xor
(bad)
retf
dec
in
lock
(bad)
test
sbb
cmps
xor
xor
adc
xchg
xchg
retf
faddp
fidiv
mov
push
inc
das
mov
xchg
ja
cmp
mov
dec
mov
add
pushf
inc
jmp
jae
inc
nop
lods
repnz
cs
mov
and
sub
movs
rcr
rcl
jle
xor
shl
mov
add
sar
ins
cmc
and
dec
sbb
icebp
mov
loop
clc
not
dec
out
adc
sub
adc
xchg
loopne
pop
add
or
add
and
mov
shl
(bad)
mov
xor
inc
js
(bad)
rcl
inc
jb
sub
movs
or
pop
xchg
out
movs
sbb
sub
push
jp
pop
jecxz
mov
ret
jge
inc
dec
sub
call
out
cli
rcl
dec
mov
in
jmp
fist
fst
sub
dec
bound
imul
in
(bad)
xchg
loop
aas
lea
popa
enter
sbb
repz
dec
cli
call
jbe
es
mov
bound
cs
xchg
push
fs
cdq
ins
mov
mov
imul
rcr
out
dec
bound
js
xchg
adc
mov
cmp
(bad)
adc
das
push
repz
lods
mov
mov
cmp
mov
or
dec
les
cmp
fwait
jmp
sbb
cmps
es
adc
cmps
mov
clc
out
into
mov
(bad)
inc
es
in
push
retf
imul
hlt
lods
test
ror
pop
nop
adc
loopne
sbb
adc
or
fcomp
jmp
mov
dec
in
dec
retf
cli
fdivr
pop
arpl
pop
in
(bad)
scas
or
jo
int3
in
push
mov
mov
xor
int
fisttp
jg
mov
jmp
fsub
outs
xchg
cs
lahf
sar
jnp
sbb
adc
push
stos
test
mov
call
cmps
test
test
xor
push
add
pop
fwait
xor
jle
sub
pop
jg
push
mov
sub
lds
pop
jnp
lea
xchg
jns
retf
ja
loope
scas
iret
inc
(bad)
(bad)
fisttp
jmp
mov
iret
sub
mov
push
nop
cmp
shr
add
jno
add
mov
xor
mov
jbe
arpl
pop
in
adc
scas
jne
jbe
daa
push
add
push
sub
stc
lock
mov
jbe
(bad)
jmp
je
fsubr
cli
test
jp
imul
imul
cmp
jl
mov
xchg
jecxz
or
mov
pop
push
cdq
sahf
pop
and
ins
call
fmul
je
fisub
or
xchg
sbb
outs
push
retf
test
es
(bad)
push
in
sub
ja
sbb
sub
bound
jp
jmp
adc
inc
int
jbe
repnz
pop
daa
dec
adc
inc
inc
mov
aaa
mov
xchg
fild
cdq
cmps
in
or
fisubr
and
dec
pop
jno
cmps
rol
pop
test
xchg
daa
jnp
push
or
adc
hlt
and
xchg
mov
clc
sbb
xor
stos
cmp
test
xchg
pop
inc
fstp
mov
loopne
out
ror
inc
loop
jno
enter
add
scas
and
mov
sbb
das
les
adc
les
sahf
lods
cmp
xchg
(bad)
cli
push
ss
fiadd
or
dec
(bad)
lods
push
std
or
fnstsw
add
jae
cs
in
mov
lods
ins
mov
div
push
cmp
xchg
cmp
pop
in
sub
inc
pop
out
or
repnz
inc
xchg
and
jae
xor
aam
cld
clc
hlt
inc
adc
stos
(bad)
jg
xchg
jnp
and
xor
mov
(bad)
enter
xchg
shr
arpl
mov
int3
and
fs
jmp
push
and
fldenv
mov
mov
mov
or
(bad)
cmp
sahf
clc
sub
dec
call
or
inc
pop
xchg
jno
sub
cwde
mov
fstp
daa
or
xchg
test
dec
rcr
pusha
daa
pop
sbb
cmp
jb
and
mov
mov
lock
pop
mov
jb
adc
les
sub
mov
sar
fisub
ret
in
jmp
sub
jb
or
xor
lock
mov
fld
fucomip
mov
mov
(bad)
mov
mov
pushf
sbb
movs
bound
jmp
push
or
mov
cmp
cs
cmc
mov
push
gs
jp
xor
mov
lods
dec
fisubr
xchg
cli
mov
(bad)
icebp
push
lods
ss
fild
adc
inc
or
xchg
jne
push
pop
push
xchg
fld
cmp
retf
fdivr
add
push
cmps
jo
push
call
inc
push
cli
nop
sub
out
sbb
jne
inc
repz
test
fistp
out
lea
in
lea
sub
or
daa
add
(bad)
fcmovnu
das
sub
packssdw
test
into
cld
jecxz
push
push
mov
xor
iret
retf
das
xchg
jg
adc
jnp
xor
cmp
push
out
cwde
and
popf
jb
mov
xor
out
dec
inc
fstp
add
mov
sbb
add
dec
xchg
adc
jmp
mov
adc
leave
(bad)
dec
pop
mov
out
jmp
add
or
sbb
dec
loop
das
or
cdq
test
dec
arpl
inc
pop
mov
repz
(bad)
xor
pop
xchg
cmps
inc
ins
test
xlat
inc
stos
mov
cmc
les
or
call
push
mov
into
leave
out
(bad)
(bad)
in
push
int
cmp
jp
fwait
jge
test
jmp
sbb
or
push
jno
xchg
out
frstor
mov
jge
inc
test
jmp
pop
shr
or
jb
mov
mov
mov
adc
mov
adc
call
jmp
push
cli
xlat
arpl
fwait
push
test
push
xor
pop
mov
sti
outs
mov
out
(bad)
xor
out
push
sub
and
repz
out
test
sti
out
je
clc
(bad)
in
mov
test
rcl
or
sub
mov
call
int3
mov
xchg
ds
ret
xor
adc
inc
adc
inc
pushf
sbb
mov
pop
push
inc
rcr
sub
sub
pop
ret
jge
pushf
sar
cmps
jmp
mov
and
add
sub
cmp
stos
jb
cs
push
lods
scas
add
push
xchg
lahf
repz
mov
cdq
js
outs
ds
mov
cmps
pusha
jp
sbb
mov
push
sub
push
fmul
out
dec
sbb
lahf
and
jge
dec
jne
mov
push
loop
dec
ror
xchg
jo
ins
inc
sti
jae
fdivr
in
jo
mov
(bad)
test
retf
(bad)
call
mov
mov
add
xchg
call
retf
retf
mov
pop
popa
push
stos
stos
push
retf
mov
repnz
ins
xchg
push
sbb
fcomip
aam
pop
dec
jo
gs
push
mov
cmp
push
ror
xchg
push
out
mov
dec
ins
add
imul
add
js
cmp
and
out
mov
(bad)
cmc
cmp
adc
sub
inc
push
hlt
inc
inc
addr16
call
cmps
cmp
jb
cdq
es
movs
mov
or
xor
stos
call
loope
xchg
add
and
or
mov
dec
cld
cmp
dec
out
test
out
mov
or
gs
out
mov
mov
or
es
ds
mov
pop
jno
rcr
sti
ficomp
fisttp
push
pop
sub
or
add
fcmovne
mov
retf
(bad)
aaa
sub
(bad)
dec
out
hlt
es
or
add
mov
pushf
aad
stc
push
xchg
arpl
ret
idiv
jmp
repnz
out
mov
in
jecxz
jo
xchg
fucomip
mov
add
cmp
sahf
(bad)
cmps
rcl
out
dec
or
sub
ds
aam
sub
pop
fnsave
jae
aam
fmul
inc
jnp
in
repnz
stos
aad
and
dec
into
cmp
cld
inc
jnp
mov
fadd
iret
push
imul
mov
xor
xchg
hlt
cmp
jle
sti
bound
inc
shl
mov
(bad)
retf
and
pop
shl
mov
je
or
pop
xchg
sbb
and
sub
pop
mov
adc
(bad)
test
dec
scas
(bad)
xchg
or
scas
movs
xor
aam
arpl
call
sub
jg
fsub
ss
cmc
movs
mov
dec
ss
xchg
mov
jg
xor
cdq
xor
daa
je
push
clc
lahf
or
std
in
shl
mov
jo
push
nop
jmp
stos
js
iret
inc
sbb
xor
mov
add
ins
ins
retf
pushf
frstor
or
pop
mov
jp
ret
jns
mov
fist
push
jo
clc
inc
push
retf
iret
ins
dec
mov
ret
std
xchg
push
push
scas
push
adc
mov
loope
mov
cmp
je
cmps
shl
int3
scas
add
enter
and
dec
sub
xchg
mov
cmps
test
pop
repnz
fwait
out
movs
out
fwait
je
in
mov
in
cmp
stos
xchg
pop
cmp
fistp
mov
push
iret
and
retf
sub
or
aad
dec
lds
add
mul
mov
aad
xchg
cmp
xor
aaa
push
enter
cmp
jno
fmul
enter
pop
in
push
cdq
jle
mov
cmp
pusha
dec
div
dec
jle
push
sbb
mov
mov
add
stc
xor
(bad)
stos
lahf
aas
and
cmp
fimul
mov
add
std
rol
jbe
push
inc
test
sbb
aam
(bad)
clc
cmps
rcl
cmp
add
jnp
jmp
aaa
sub
outs
xor
mov
retf
push
lods
xchg
stos
outs
adc
mov
xchg
push
sbb
mov
xchg
(bad)
(bad)
mov
pop
inc
xchg
addr16
icebp
(bad)
aaa
in
pop
cmps
fiadd
jge
cmp
jge
adc
cwde
cmp
test
pusha
(bad)
sub
or
mov
jl
icebp
lahf
sub
das
push
aam
pop
(bad)
jmp
ret
mov
cs
hlt
xchg
ret
sti
shl
dec
mov
cmp
sbb
js
xlat
mov
popa
icebp
in
sub
loope
aaa
mov
mov
mov
and
in
vaddsubps
pusha
add
mov
xor
push
pop
mov
xor
and
into
cmp
push
cmp
stos
aam
sub
adc
inc
aaa
push
imul
repz
xchg
jne
lock
lds
outs
and
pop
push
fs
and
(bad)
xchg
js
pushf
cli
gs
std
sbb
mov
test
xor
mul
dec
stos
or
clc
fadd
dec
addr16
sbb
push
dec
add
ins
addr16
icebp
ret
leave
or
mov
xor
cmp
lock
dec
mov
fimul
add
data16
call
ss
sub
sbb
or
mov
adc
mov
adc
sub
push
cs
in
push
mov
js
nop
jmp
pop
outs
adc
jmp
ins
ds
mov
push
rol
fdiv
in
aas
int
xchg
sub
dec
jl
sub
mov
rcr
push
out
test
sti
stos
push
(bad)
sbb
cwde
in
add
fcmovbe
out
jmp
loope
in
adc
add
dec
mov
leave
xchg
fdivrp
outs
pusha
push
cmp
das
cmp
mov
das
rol
sub
push
mov
data16
cmp
shl
push
mov
ins
imul
pushf
aas
dec
mov
ins
inc
and
sub
xchg
inc
dec
mov
ds
xor
cmp
sub
sub
and
push
push
fisub
jno
push
or
iret
push
ds
pop
and
mov
jns
jae
mov
outs
sbb
xor
jle
pop
mov
jne
(bad)
cmp
bound
mov
xchg
pop
or
jo
pop
popf
sahf
sub
mov
aas
int3
(bad)
out
cmp
sub
push
mov
call
add
mov
xchg
aas
rcl
mov
clc
(bad)
xchg
fsub
mov
(bad)
ins
mov
or
pop
lds
and
xor
xchg
jbe
out
jo
jmp
(bad)
or
fldcw
mov
jecxz
mov
add
and
pop
dec
xor
lock
jnp
je
sti
push
xchg
push
test
pusha
sahf
or
das
nop
cmps
test
mov
stos
stos
and
inc
(bad)
mov
adc
dec
aas
push
addr16
or
data16
pusha
ss
xchg
ret
and
xor
jge
mov
xchg
mov
sbb
sub
inc
jne
or
xchg
mov
xchg
pop
imul
ss
ror
or
retf
movs
jp
fiadd
sub
xchg
div
xchg
test
mov
mov
sub
mov
dec
sbb
inc
and
add
xchg
jle
jmp
push
add
xor
jnp
sbb
and
out
xchg
sti
jb
mov
outs
loop
or
adc
loopne
xor
int
stos
push
jl
dec
inc
nop
scas
scas
mov
imul
adc
xlat
dec
shl
repnz
mov
hlt
rol
popf
push
out
out
push
xor
movs
das
ror
jl
fwait
xor
(bad)
xor
and
ins
cmp
mov
int
sahf
and
icebp
lods
mov
add
stc
leave
xor
test
adc
pop
push
call
mov
mov
div
mov
out
cs
mov
cwde
lock
sbb
mov
xchg
mov
lea
inc
push
push
imul
xchg
xor
ror
xchg
in
cwde
jl
and
fld
inc
cmp
push
adc
inc
mov
fst
jae
outs
ins
cmps
mov
addr16
popf
cmps
fs
add
mov
xor
mov
xchg
cmp
mov
xchg
push
mov
dec
sti
test
int3
icebp
cdq
sub
(bad)
mov
hlt
repnz
out
popa
dec
cmp
mov
adc
outs
outs
sub
outs
jnp
xchg
push
push
push
jbe
cmp
add
scas
into
icebp
mov
push
lock
push
xor
jp
pop
pushf
jecxz
sbb
(bad)
cdq
fadd
mov
es
push
or
and
xor
xor
(bad)
in
daa
je
call
idiv
cdq
xlat
xor
stos
pop
fdivr
in
imul
mov
mov
inc
clc
test
cmp
stc
and
fadd
sub
xlat
inc
outs
and
ret
or
out
push
in
loope
xchg
imul
push
dec
or
test
fs
les
sbb
mov
cmp
mov
dec
js
or
push
mov
lahf
dec
xor
xor
mov
xchg
mov
sbb
or
mov
or
(bad)
lds
fistp
mov
iret
in
sbb
sub
outs
mov
adc
jmp
cmp
pop
xchg
dec
cmp
mov
pop
sub
sbb
sbb
pop
and
daa
sub
cmp
loopne
repnz
xor
sti
fcom
loopne
mov
sub
or
shl
(bad)
push
das
xchg
outs
int
xchg
xchg
movs
xchg
adc
std
fnstcw
movs
xor
add
dec
shl
das
dec
push
adc
jmp
stos
xor
popf
inc
mov
ret
push
fwait
loope
inc
push
cmp
es
sbb
repz
dec
loopne
mov
movs
daa
repz
je
add
mov
lea
(bad)
add
jge
xor
mov
out
xor
fwait
mul
mov
fdivr
cs
adc
(bad)
cmp
sbb
and
sub
call
lahf
cwde
repz
in
xchg
shr
call
pop
repz
add
fwait
mov
shl
out
xchg
fisub
mov
out
dec
mov
cdq
dec
dec
call
pop
dec
mov
mov
dec
mov
je
jmp
mov
or
test
adc
ret
or
mov
loope
xchg
ins
push
rcr
les
idiv
and
cmp
std
sti
push
inc
popf
into
push
les
ret
sti
xchg
ja
xor
les
mov
push
mov
inc
sbb
movsx
ret
arpl
fcomp
inc
jmp
test
or
(bad)
pop
sub
and
mov
jo
mov
lock
push
(bad)
lahf
es
xlat
popa
cli
mov
sub
cmp
movs
inc
pop
aad
fwait
das
mov
cli
imul
test
icebp
(bad)
add
fdiv
dec
xchg
xor
xor
inc
pop
retf
or
mov
adc
cmp
mov
data16
cmp
scas
xor
xchg
stc
dec
jmp
cmp
sbb
jnp
das
cmp
rcl
and
pop
mov
sub
jnp
jmp
test
mov
add
pop
mov
outs
pop
test
popa
clc
pusha
jl
scas
sar
pop
or
adc
fmul
push
inc
test
in
leave
out
int
lock
add
inc
mov
lods
jle
out
into
pop
jne
iret
adc
add
xchg
pop
or
js
sbb
in
xor
dec
fst
hlt
pop
push
scas
fistp
sub
and
push
(bad)
stos
mov
adc
leave
mov
jae
scas
mov
repnz
and
fmul
dec
inc
jns
aas
ss
push
adc
call
mov
push
lahf
sub
adc
into
add
cmps
sub
sub
movs
sub
adc
push
cs
ds
minps
push
jl
cmp
pop
jp
sub
add
popa
mov
jb
xchg
stos
xlat
mov
sahf
pop
dec
and
aad
or
ins
mov
test
and
and
mov
lds
sub
bound
push
mov
nop
pop
pop
inc
adc
cmp
imul
js
or
inc
pop
inc
mov
sub
lahf
push
ss
popf
jne
sub
jo
sbb
dec
lods
rcl
enter
inc
mov
aad
mov
out
adc
int3
lock
xchg
cmps
icebp
lds
jb
lods
in
cdq
push
ins
mov
dec
int3
popf
xor
fsubp
xor
push
dec
ror
mov
pop
cmp
jl
inc
out
mov
in
(bad)
mov
sbb
sti
(bad)
add
out
repnz
retf
loope
xor
(bad)
je
xor
jb
out
ss
call
push
mov
pusha
je
mov
loope
test
out
arpl
mov
in
inc
test
pop
xor
loopne
adc
xchg
pop
or
jno
push
mov
neg
sti
xchg
inc
cmps
sbb
mov
jg
pop
cmp
xor
cmp
cmp
and
(bad)
iret
daa
test
dec
stos
jb
add
jge
call
pusha
sbb
(bad)
arpl
lock
jmp
push
push
xchg
xor
stos
adc
or
mov
test
and
sbb
loope
jp
dec
add
ret
xor
jmp
jecxz
mov
call
adc
jle
dec
fs
and
es
imul
ret
xlat
out
call
mov
adc
data16
xchg
mov
mov
fimul
ja
pop
xchg
ret
mov
push
adc
inc
pusha
sub
iret
addr16
hlt
sbb
inc
ss
dec
(bad)
or
xchg
mov
out
test
xchg
pop
cmp
and
xor
adc
test
pop
std
ins
mov
mov
imul
mov
cmp
repz
add
or
jg
scas
mov
ret
inc
pushf
mov
(bad)
lods
test
retf
out
(bad)
adc
(bad)
in
xor
mov
inc
je
or
aad
pop
iret
jbe
add
call
fldcw
(bad)
fsubr
sub
pop
push
out
dec
mov
retf
icebp
sub
dec
bound
cwde
sbb
mov
clc
mov
test
pop
or
sbb
data16
jae
xchg
pop
pop
js
and
and
jb
pop
out
data16
iret
jle
push
loopne
shl
pop
cmp
xor
(bad)
cld
sbb
push
(bad)
mov
test
xor
leave
in
ret
push
shr
fnstsw
inc
mov
sbb
arpl
pop
shr
pop
das
inc
xor
xor
mov
aam
fld
cmps
inc
mov
jge
adc
neg
add
add
xor
arpl
push
mov
mov
ret
arpl
clc
cmp
adc
aam
movs
les
mov
imul
add
xadd
fild
cmc
out
xor
jbe
jns
push
mov
data16
out
xchg
in
dec
jo
imul
sbb
aam
pop
sar
aas
pop
inc
xchg
mov
gs
and
xlat
pop
dec
push
ror
pop
xor
and
fcom
add
sub
pop
add
mov
test
out
and
ins
scas
dec
outs
lock
rcr
in
es
cld
inc
lds
mov
les
jmpw
aam
mov
xchg
les
es
jp
int3
inc
ficomp
invd
(bad)
int
jns
out
mov
inc
sbb
in
xor
bound
fld
rol
lock
jo
dec
out
pop
cwde
jbe
inc
mov
xchg
(bad)
call
pop
int
fwait
jns
mov
shl
xchg
cmps
jmp
sbb
jp
nop
fcom
mov
push
push
(bad)
call
shl
sub
(bad)
adc
jmp
aas
inc
push
push
into
mov
nop
call
push
pop
mov
aas
push
adc
mov
inc
fcomi
mov
or
out
mov
or
or
inc
jns
sbb
jl
xor
cdq
fmul
mov
movs
dec
scas
push
xchg
cmp
adc
aam
or
call
enter
xor
call
add
adc
sub
fsub
mul
in
mov
adc
gs
dec
add
mov
xchg
cmc
div
shl
shr
(bad)
xchg
fwait
push
rcr
sbb
aad
cmp
stc
mov
(bad)
cmp
idiv
(bad)
lahf
jnp
inc
mov
xlat
inc
push
ss
adc
push
loop
sbb
pop
cmp
pop
lods
div
xor
push
or
out
push
lods
and
repnz
adc
fst
enter
push
scas
aad
out
out
jo
dec
jmp
mov
push
call
jae
loope
(bad)
ds
mov
leave
lods
sbb
jge
movs
xchg
xchg
mov
push
push
mov
xchg
sar
cmp
adc
movs
push
adc
cmp
dec
add
stos
cmp
and
push
fsubr
call
sub
call
call
push
out
cld
lods
mov
xchg
test
cmp
aas
push
add
ins
cmps
pop
adc
xor
xchg
cwde
shr
std
scas
mov
pusha
fimul
inc
jecxz
xor
neg
mov
mov
retf
addr16
inc
ficom
lods
movs
dec
add
xor
push
jmp
jg
jo
xchg
xor
movs
mov
sbb
fmul
push
cmps
fsub
push
inc
xor
getsec
arpl
ret
xchg
pop
shr
bnd
pause
xchg
sub
fsubr
js
push
mov
popf
cdq
test
jbe
pop
stc
ret
jbe
xchg
mov
shl
sbb
gs
xor
adc
jle
fcomp
mov
dec
out
jg
iret
icebp
inc
and
pusha
mov
adc
pop
jae
dec
mov
popa
ss
dec
mov
idiv
lods
push
aaa
mov
leave
mov
mov
clc
or
(bad)
cli
adc
ret
fs
cmp
add
repz
fwait
dec
mov
xchg
sub
sbb
jle
mov
pushf
mov
loopne
jne
arpl
jmp
xor
mov
push
lods
mov
xchg
adc
inc
dec
mov
in
pop
push
mov
xchg
add
and
je
xchg
push
iret
popf
add
push
dec
ret
or
jbe
inc
mov
pop
jl
lea
clc
pop
in
xchg
pop
int
inc
fst
push
in
mov
retf
and
mov
jmp
mov
scas
loopne
cmps
inc
std
rcl
cld
icebp
data16
std
retf
mov
scas
pushf
mov
or
sub
mov
push
pop
jnp
arpl
stos
mov
jle
push
popf
test
js
push
adc
jae
mov
or
lods
daa
xchg
sahf
in
push
ss
retf
fld
retf
mul
pop
sbb
mov
jmp
cs
jnp
clc
inc
push
dec
gs
mov
xor
push
inc
mov
int3
mov
aaa
cwde
js
leave
scas
jl
pop
xor
das
mov
sti
aas
mul
dec
mov
mov
loopne
or
add
add
add
lock
shl
dec
(bad)
push
push
mov
les
ds
fidivr
mov
ret
and
sub
xor
dec
ret
out
(bad)
push
iret
retf
add
test
pop
and
in
xchg
dec
clc
dec
mov
aaa
in
test
inc
or
in
add
test
dec
or
mov
mov
out
inc
icebp
ret
pop
dec
leave
dec
fld
cs
mov
and
test
call
push
cld
ficomp
imul
jns
inc
retf
iret
inc
add
icebp
and
inc
cmp
mov
mov
pop
dec
cmp
mov
jle
xchg
and
data16
mov
nop
iret
popa
adc
cwde
and
into
dec
cmp
jp
nop
lods
imul
or
mov
push
and
mov
js
and
xchg
test
adc
and
dec
sti
and
cs
ins
daa
cmp
or
lods
repz
or
mov
jb
lods
sub
sti
xor
in
xor
mov
or
test
repz
outs
jbe
js
fistp
mov
and
je
push
xor
dec
push
lods
dec
int
jae
(bad)
xchg
movs
cmp
mov
mov
and
ja
cli
or
dec
xor
lods
inc
fwait
scas
and
psubb
shr
xchg
jb
dec
push
lods
or
scas
push
and
cmps
lea
gs
cmps
adc
xor
sbb
fild
stc
adc
jne
pop
inc
iret
and
out
dec
mov
jbe
cmp
ins
mov
sub
and
stos
add
cmp
xchg
xchg
pop
and
loopne
inc
dec
sub
sar
(bad)
jo
inc
arpl
(bad)
xchg
in
pop
pop
ficomp
mov
ret
sbb
push
nop
inc
mov
pop
adc
cmp
daa
retf
enter
xchg
in
jmp
lods
std
inc
scas
pop
pop
dec
repz
fwait
mov
jmp
jns
daa
fcom
outs
repz
js
or
in
call
push
out
mov
and
(bad)
jmp
daa
retf
scas
lahf
jmp
pop
or
jns
ss
add
ins
sub
jl
cli
outs
pop
cld
test
pop
(bad)
pop
inc
or
ja
xchg
nop
mov
mov
ret
ss
rol
pop
inc
sub
jno
lahf
(bad)
ret
cmc
repnz
jne
stc
mov
popf
movs
rcr
sub
push
mov
jo
sub
dec
pop
ret
jmp
loope
sti
pop
movs
jae
int3
repnz
(bad)
push
das
push
adc
cld
adc
mov
push
ds
repz
sub
sbb
sbb
movs
push
iret
sar
ins
push
sbb
test
out
jle
mov
test
ss
xchg
aas
stos
adc
mov
push
mov
sbb
push
push
pusha
(bad)
jmp
jge
rep
std
and
shl
sub
jl
scas
lods
mov
out
push
or
call
xchg
bound
mov
mov
popf
aas
cmp
add
sub
pop
xchg
aas
test
(bad)
(bad)
push
aad
data16
push
sbb
in
mov
dec
add
enter
jno
pop
mov
ja
and
inc
int
popf
xor
sbb
loope
mov
inc
jecxz
adc
or
in
es
mov
sub
push
push
mov
sti
imul
inc
mov
jmp
push
jnp
ss
and
into
jo
inc
mov
mov
jecxz
or
mov
and
add
dec
nop
push
push
sar
xor
xchg
movs
retf
pop
jl
enter
xor
stos
inc
adc
xchg
push
sbb
jle
xchg
add
push
movs
out
xor
leave
(bad)
mov
mov
jmp
popa
pop
or
add
jne
cmp
cmp
out
enter
enter
cmp
in
and
daa
push
push
push
pop
sbb
xor
aam
xor
out
not
jge
mov
ins
xor
dec
imul
hlt
gs
mov
xchg
cmp
aas
mov
stos
pop
data16
cmp
mov
test
pop
test
jmp
test
loopne
add
aas
inc
or
push
xchg
add
fwait
in
jle
daa
(bad)
je
add
ins
mov
(bad)
ins
(bad)
bound
hlt
hlt
and
dec
mov
mov
push
scas
jge
jle
mov
hlt
mov
xor
jle
mov
push
cmps
or
fwait
daa
mov
cmp
fwait
adc
jp
push
movs
out
clc
lea
(bad)
cmp
aad
dec
int3
or
call
jo
outs
mov
jae
jmp
xor
jecxz
retf
enter
xchg
pop
nop
or
shl
es
jns
mov
je
mov
lock
daa
in
dec
xor
rcr
push
add
xor
xor
(bad)
clc
xlat
popa
mov
ret
stos
in
xchg
ret
mov
push
sbb
or
mov
loopne
cmps
pushf
enter
arpl
xchg
jmp
inc
in
lds
push
add
xchg
and
out
jae
int
sbb
mov
retf
dec
adc
push
in
adc
push
xchg
nop
cmc
fld
fsub
pop
(bad)
mov
clc
xlat
test
aam
outs
xchg
(bad)
push
and
cmps
inc
jp
imul
call
inc
pusha
cmp
jge
hlt
loop
mov
mov
push
adc
mov
les
adc
xchg
nop
mov
mov
add
int3
fsubr
dec
dec
jb
sbb
cmp
inc
sub
scas
scas
scas
cmp
cld
push
pop
mov
pop
sub
out
in
in
cmp
outs
sbb
lods
jle
fwait
retf
pop
push
mov
dec
and
or
jns
aad
sub
scas
mov
inc
cmp
mov
xchg
mov
adc
shl
lods
pop
sbb
popf
cs
outs
push
rol
stc
mov
rcr
mov
cmp
pop
and
mov
out
and
jmp
fild
stos
sbb
sub
inc
inc
jle
cli
loopne
loop
mov
and
and
nop
or
call
push
call
lahf
and
fcmovbe
sub
not
inc
mov
sub
mov
in
sbb
mov
dec
xor
or
inc
popf
popa
stc
push
inc
cmp
retf
add
jl
mov
das
movs
pop
adc
xchg
int3
gs
or
stos
enter
dec
rcl
mov
sub
push
mov
into
sub
imul
xor
fisub
push
outs
pop
adc
inc
in
lea
jg
sahf
xchg
out
jge
jmp
cli
jno
mov
cli
inc
popw
jecxz
pop
pop
and
and
outs
cmp
loopne
arpl
add
jbe
cmp
adc
(bad)
outs
xchg
mov
dec
mov
addr16
push
out
pop
or
imul
out
push
pop
push
mov
jmp
int
push
scas
mov
addr16
ror
scas
ss
sbb
leave
sbb
dec
push
pop
add
push
(bad)
pusha
repnz
dec
hlt
and
jbe
add
push
inc
ins
enter
icebp
retf
out
or
pop
dec
leave
cli
je
xor
cmps
inc
push
inc
cli
sbb
xchg
imul
pushf
sub
push
inc
(bad)
push
mov
push
std
jmp
jb
jp
mov
sti
arpl
xor
mov
iret
in
enter
popf
push
imul
shr
push
(bad)
cli
xchg
sbb
add
out
pop
mov
push
retf
inc
cmp
hlt
and
mov
jg
mov
ja
pushf
jo
mov
xor
scas
jl
inc
repz
and
icebp
sub
adc
pop
pop
sahf
pop
jae
adc
(bad)
leave
dec
leave
lods
jb
pop
fdiv
ins
jns
pop
jle
mov
mov
mov
push
je
pop
xchg
jo
icebp
jbe
mov
shr
add
mov
outs
fld
cmp
stc
nop
fidivr
push
inc
dec
in
dec
jnp
cld
inc
xchg
stc
fst
stc
retf
xor
jnp
(bad)
shr
into
test
mov
jg
mov
stos
pop
dec
mov
adc
stos
ret
repz
jae
fnsave
mov
daa
call
movs
cmc
mov
hlt
addr16
test
sti
and
movs
icebp
push
jp
jo
dec
in
sub
out
push
or
iret
xchg
jnp
add
lahf
cld
mov
cld
or
cdq
pop
std
mov
rcl
pop
pop
sub
push
or
jl
sub
mov
outs
xchg
mov
data16
add
les
(bad)
(bad)
or
cmp
or
push
dec
mov
lods
cmps
add
pop
in
jnp
mov
mov
mov
imul
in
and
xor
mov
stos
mov
dec
mov
ja
nop
mov
retf
mov
cld
outs
jl
push
and
rcr
push
cmp
sub
repnz
lods
add
and
cld
lea
xchg
pop
fldcw
xchg
xor
lea
(bad)
rcl
sar
mov
pop
jb
push
hlt
je
not
or
ror
xor
aaa
(bad)
cmc
push
xchg
test
ds
or
test
xor
fidiv
ins
jno
jbe
repz
dec
pop
jge
retf
stos
es
cld
repz
out
sbb
xor
xor
sub
retf
xchg
sbb
xchg
icebp
pop
dec
jl
push
in
sbb
std
(bad)
xor
push
aam
out
adc
adc
add
adc
inc
push
xchg
imul
or
xor
mov
mov
scas
(bad)
jg
jo
enter
jecxz
rcl
inc
xor
sub
fnstenv
clc
jmp
mov
xchg
sbb
repnz
dec
sahf
add
fisub
jns
xchg
nop
jecxz
inc
mov
push
push
or
mov
mov
add
sbb
dec
or
dec
call
dec
add
fcmovne
lea
sub
dec
outs
push
xchg
icebp
jns
jg
es
cdq
pop
xchg
push
fdivr
mov
xor
sti
jmp
or
mov
cdq
and
mov
xchg
inc
mov
xor
fisub
add
pop
popf
sub
shr
(bad)
movs
es
push
xor
xor
pop
xchg
pop
out
cmp
pop
inc
lahf
repnz
fbstp
adc
mov
nop
push
lods
xchg
xchg
xchg
enter
inc
dec
loopne
psllw
adc
jg
mov
or
cmp
xchg
add
sbb
pop
(bad)
mov
pop
loope
adc
push
or
fwait
or
call
test
ret
adc
xor
inc
(bad)
pop
leave
pop
div
call
jnp
sar
sub
add
scas
sub
outs
xchg
lds
das
retf
cwde
jmp
call
push
xchg
aad
int
mov
out
test
jmp
repz
jp
sar
inc
xlat
iret
mov
(bad)
idiv
and
bound
mov
add
mov
jmp
sbb
adc
jne
mov
scas
(bad)
mov
test
cmp
ss
cwde
aaa
sti
bt
pop
sti
sbb
fwait
and
fcmovnbe
icebp
add
repz
xchg
jecxz
dec
dec
inc
mov
imul
sbb
push
cmp
cmp
rcr
cmp
ror
pop
pop
or
fcomp
and
bound
and
jmp
add
inc
lods
xor
add
cmp
xchg
outs
clc
xlat
mov
cli
loope
push
inc
pop
push
xlat
inc
dec
popa
in
hlt
das
jno
pop
pop
xchg
cdq
inc
adc
cmc
mov
mov
sbb
push
ins
mov
jmp
cld
and
call
push
hlt
mov
outs
mov
push
jae
rcl
mov
push
fnstcw
mov
std
rcl
add
scas
mov
int
mov
cmp
push
imul
xlat
xlat
and
mov
gs
out
push
nop
cmpxchg
(bad)
adc
mov
stos
mov
ficom
enter
adc
scas
fcomip
jecxz
adc
out
and
and
stos
push
mov
pop
lock
add
in
mov
out
adc
cmp
test
or
aam
movs
inc
inc
data16
jns
push
ror
or
sbb
push
ins
jmp
leave
in
movs
fdivp
(bad)
xor
lods
adc
xchg
push
test
aam
xchg
add
jmp
hlt
loope
fs
mov
inc
pop
sub
add
stc
add
rcr
push
pop
inc
pop
lahf
ds
jbe
imul
cmps
mov
rcr
push
pop
mov
xor
icebp
pop
ret
ins
mov
movs
pop
ja
stos
xor
call
mov
mov
mov
xor
sbb
jns
jns
cmp
aas
sbb
adc
inc
lods
cmp
js
out
xchg
psllq
addr16
ror
or
clc
add
(bad)
pop
dec
loope
pop
cld
es
xor
rol
imul
fidiv
mov
jmp
dec
shr
pop
adc
out
into
jp
sub
add
add
mov
call
ret
stc
nop
pop
mov
and
cmp
fadd
pop
xor
mov
mov
imul
cmp
lods
bound
cmp
mov
mov
sbb
cmps
cmps
push
jo
pop
adc
jmp
cmp
sbb
add
xchg
hlt
xchg
jmp
mov
js
call
ja
and
push
fwait
movs
in
push
or
ficomp
es
xlat
ins
shr
xlat
mov
xor
jl
dec
mov
sahf
(bad)
pop
or
pushf
mov
lods
icebp
out
and
cdq
dec
in
(bad)
and
ins
retf
or
mov
inc
push
xchg
rol
ja
lods
xor
pop
test
jp
scas
pop
cmps
mov
das
inc
fld
xchg
push
cmp
mov
mul
pusha
inc
fdivr
mov
in
dec
sbb
xor
inc
or
imul
ins
mov
fadd
xor
ins
aaa
push
in
or
or
sub
loop
iret
jmp
and
mov
call
ins
imul
out
cld
lock
popf
jge
jecxz
inc
scas
shl
mov
shl
clc
ja
addr16
cmp
dec
call
in
and
in
xchg
inc
jl
jno
hlt
mov
ss
sub
loop
push
jg
push
sbb
lods
lock
out
daa
mov
mov
(bad)
jb
call
adc
je
cmp
lds
pop
mov
add
test
pop
lds
rcr
test
push
mov
repnz
out
inc
(bad)
pushf
outs
sub
pop
sub
jmp
dec
add
mov
mov
test
push
mov
and
inc
and
(bad)
cli
stos
and
adc
cli
imul
movs
popf
addr16
or
push
repnz
pop
mov
addr16
leave
shl
div
and
and
nop
mov
icebp
cmp
push
cmps
xor
xor
movs
and
jmp
push
aad
or
or
(bad)
sub
and
cmc
in
xor
mov
lds
inc
jmp
outs
movs
daa
xchg
lock
xor
cmp
cmp
aas
pop
xchg
pop
je
sbb
popa
or
in
out
popa
pop
inc
or
inc
(bad)
fist
cmp
stos
pop
inc
in
jb
gs
cmp
scas
addr16
inc
xor
fmul
cld
or
xchg
sbb
out
test
cmps
fwait
enter
sbb
xor
adc
push
or
test
cmp
cmps
and
enter
popf
stos
sar
pop
xlat
iret
mov
mov
stc
and
xchg
aad
(bad)
aad
into
outs
cdq
mov
sub
retf
xor
mov
imul
adc
shl
jnp
scas
jae
jo
and
mov
adc
in
inc
pushf
xchg
push
into
and
sub
imul
adc
adc
add
(bad)
scas
jge
cli
jp
addr16
setb
cmp
int3
cmp
dec
lods
iret
loopne
push
ja
push
hlt
lahf
pop
jl
scas
push
push
and
xor
add
sbb
dec
push
lock
cmp
and
rcr
mov
int3
in
mov
mov
mov
xchg
cwde
retf
mov
and
mov
mov
int
arpl
jo
dec
(bad)
enter
stos
popa
out
inc
sub
cs
call
push
scas
mov
xor
xlat
stos
mov
add
mov
push
sti
lods
sub
inc
jg
xchg
test
adc
fsub
jo
cmp
jo
ret
popf
je
jns
mov
out
dec
das
cmps
shl
jmp
sbb
jmp
cwde
push
jb
(bad)
fisubr
std
xor
movs
movs
mov
(bad)
in
je
mov
inc
and
loope
or
idiv
into
sbb
dec
push
xchg
jae
retf
shl
cmp
sbb
neg
adc
loope
inc
mov
jmp
and
movs
jl
fcomp
jge
in
xor
push
aam
and
xchg
dec
and
fs
inc
test
inc
or
and
inc
ror
pop
pop
xor
cld
push
jmp
xchg
(bad)
inc
loop
call
fidivr
enter
xor
mov
mov
and
fsub
dec
push
push
or
fild
adc
stos
cmc
sbb
sub
mov
xchg
xor
push
icebp
mov
xor
mov
mov
fs
ret
sbb
add
retf
fucomp
and
xor
stos
retf
cmc
and
jmp
and
jae
nop
and
pop
cld
aad
and
shl
sbb
test
or
mov
mov
pop
es
jmp
jns
rcl
fmul
test
add
add
xchg
aad
das
pop
aas
mov
sbb
mov
fdiv
and
jbe
inc
popa
xor
mov
sub
cmps
loopne
(bad)
xchg
push
in
cmp
fsubr
sbb
jle
(bad)
not
sub
(bad)
and
mov
sub
outs
add
outs
add
stos
sahf
sub
sahf
pop
inc
call
mov
rol
leave
retf
cmp
add
movs
lock
int3
(bad)
xchg
push
js
fcomp
sub
sbb
call
mov
or
mov
sub
enter
mov
xchg
or
or
push
mov
dec
cmp
aad
add
jmp
(bad)
and
sbb
outs
test
jle
cmp
push
or
sbb
push
sub
cmps
(bad)
push
outs
inc
je
imul
das
aam
stc
sti
mov
ficomp
ret
out
std
adc
xchg
hlt
jns
sbb
(bad)
loope
xchg
mov
mov
js
(bad)
mov
je
cmp
mov
fcom
mov
mov
cmp
gs
and
outs
pop
cmp
(bad)
(bad)
pop
aad
add
test
adc
jae
(bad)
sbb
add
cli
shl
xchg
cmps
ins
jae
lahf
(bad)
mov
popf
jecxz
mov
mov
fbld
mov
(bad)
pop
loop
xchg
inc
sbb
pop
lds
mov
leave
(bad)
xchg
shl
cmp
pop
cli
push
shl
pop
fwait
or
ss
out
imul
jne
cwde
sahf
jp
jmp
iret
loope
clc
mov
(bad)
outs
pusha
xor
fwait
nop
and
jae
mov
mov
aad
cmp
enter
out
popa
stos
dec
and
xor
push
arpl
jmp
pushf
test
arpl
js
inc
shl
(bad)
fwait
(bad)
leave
outs
retf
or
icebp
frstor
int3
inc
outs
(bad)
out
loope
iret
mov
sub
adc
out
mov
out
cdq
sbb
cld
mov
test
js
xor
xchg
rcr
jbe
es
push
xlat
mov
out
shl
mov
or
sahf
leave
or
fnstcw
fcmovnu
cmc
or
pop
xor
adc
cmp
mul
mov
icebp
add
cmc
inc
daa
dec
repz
(bad)
xchg
add
rcl
jge
or
adc
stos
(bad)
jl
sbb
dec
pop
xor
xchg
jnp
adc
std
jne
lods
jle
mov
lods
shr
(bad)
out
push
add
xor
xor
js
cmp
movs
in
mov
outs
mov
or
cmc
cmps
xchg
jnp
or
fist
lods
push
shr
adc
stc
test
sub
out
call
dec
jns
out
sbb
lock
out
movups
es
cmp
cmps
inc
fstp
fldenv
call
fs
adc
stos
repz
fistp
popf
leave
aaa
aaa
imul
test
inc
jno
adc
jecxz
xor
push
lock
mul
pop
mov
mov
and
and
jmp
cmps
out
sub
jmp
xlat
ss
cmp
and
add
mov
dec
daa
sbb
lods
sbb
mov
jo
cmp
mov
inc
xlat
cmp
into
fadd
iret
out
push
inc
mov
sub
imul
adc
retf
mov
dec
cmp
push
dec
xchg
dec
jle
sub
ds
ret
sbb
shl
cs
cmc
cld
in
inc
add
adc
mov
lea
jne
push
aad
mov
or
sub
mov
iret
aam
push
and
in
test
mov
mov
sub
scas
mov
out
jl
cmps
adc
in
(bad)
out
xor
in
neg
call
add
mov
sar
cld
mov
cld
jb
int
dec
ficomp
les
or
cwde
cmp
pop
pop
pop
jo
test
mov
(bad)
jg
jbe
mov
or
inc
imul
jno
add
cdq
push
jmp
adc
shl
cwde
pop
cmp
push
out
test
add
test
jg
les
sbb
sub
mov
out
cmpxchg
sbb
idiv
cmp
xchg
lahf
pop
push
jge
lods
repz
xor
inc
(bad)
adc
imul
ja
lods
call
mov
test
pop
ror
cdq
out
loop
cmp
loope
dec
jp
jne
sub
mov
scas
pop
hlt
sbb
hlt
icebp
stos
std
sub
lock
jno
loopne
movs
xor
push
cmp
xchg
ins
mov
xchg
in
mov
ins
xchg
inc
ret
sbb
pop
sbb
sbb
loopne
inc
ja
cmps
pop
inc
rol
push
mov
xchg
or
xchg
retf
pop
pshufw
loope
(bad)
pop
sbb
xchg
in
mov
jecxz
dec
xlat
sub
int3
push
iret
ins
fucom
test
mov
inc
(bad)
jge
ds
jns
push
fcmovnb
sbb
ins
aas
mov
sbb
iret
sar
out
pushf
mov
jae
mov
cmp
mov
push
test
fcom
inc
jnp
dec
int3
cmp
xchg
stc
repz
cmc
xchg
dec
jne
dec
in
sbb
push
in
mov
cli
lods
mov
fild
and
call
jle
mov
in
nop
push
or
sub
dec
cmps
ficomp
dec
xchg
fimul
mov
int
adc
mov
add
cli
movs
push
je
lock
int3
fldcw
inc
test
dec
rol
xor
call
jno
les
jg
add
arpl
adc
sar
xor
fidivr
in
mov
lea
stos
inc
movs
inc
mov
js
xchg
(bad)
sub
push
scas
xlat
mov
in
mov
or
and
pushf
into
xlat
xor
inc
lea
xor
xlat
bound
(bad)
add
xchg
jb
push
sahf
dec
mov
adc
add
mov
jns
or
sbb
test
outs
sub
rcr
retf
std
adc
addr16
and
push
pop
sahf
loope
psubusb
ins
not
lods
nop
sub
push
add
dec
pop
inc
xlat
xor
add
stos
and
jmp
xchg
inc
fstp
mov
and
jmp
xor
push
push
xchg
pop
test
mov
imul
xor
int
jnp
stos
adc
jae
ins
std
ss
pop
mov
retf
rcr
push
push
(bad)
fnsave
or
jecxz
add
pop
and
sub
enter
pop
and
frstor
pushf
add
mov
inc
rcl
mov
outs
shr
jnp
popa
and
mov
add
cmps
jp
cmp
and
push
icebp
push
mov
shl
pop
sub
ja
add
ins
pop
je
aas
loop
dec
dec
jecxz
cmp
sar
fisub
push
mov
pop
and
xor
pop
push
std
mov
gs
les
dec
jno
sbb
push
xor
les
loope
adc
dec
add
or
add
cmp
mov
inc
dec
mov
mov
stos
shr
cmps
movs
mov
xor
mov
dec
int3
les
in
loopne
mov
mov
adc
(bad)
jno
or
data16
sbb
push
mov
scas
sub
ds
pop
popa
push
xchg
popa
pop
cmp
into
mov
bsr
jo
(bad)
(bad)
es
nop
ja
aad
mov
out
imul
cs
sbb
call
out
aaa
add
les
iret
jle
inc
jmp
pop
jo
int3
sti
ret
sbb
xor
cmp
or
dec
(bad)
in
pop
ret
stos
fstp
push
in
sub
dec
push
mov
cmp
or
fs
repnz
cmp
push
sub
out
inc
in
add
dec
es
jb
jmp
fild
jno
and
fs
or
push
cmps
test
icebp
pop
mov
dec
jg
cmp
xchg
inc
(bad)
sbb
rol
dec
bswap
lahf
cmp
push
push
sar
frstor
bound
and
dec
push
lds
add
aam
ins
dec
clc
(bad)
scas
and
aaa
sahf
out
aam
mov
icebp
mov
fstp
fidiv
mov
pop
cmp
mov
mov
or
pop
jne
or
jp
es
jbe
xor
retf
in
jb
fwait
call
or
fadd
scas
int
test
pusha
adc
cmp
mov
pop
call
mov
icebp
jp
sbb
adc
lods
icebp
pop
retf
adc
push
cmps
dec
pop
in
and
xlat
call
add
pop
jl
stos
movs
cmps
es
jg
push
cmp
into
push
inc
in
adc
ficomp
or
push
or
clc
jno
dec
test
sub
adc
je
sub
push
gs
push
mov
inc
push
cmp
xchg
mov
(bad)
xor
and
rol
xchg
cmp
mul
push
scas
or
(bad)
mov
mov
mov
xor
lea
fcmovb
inc
daa
dec
dec
xor
das
ss
loop
icebp
cdq
out
in
mov
mov
mov
call
ret
leave
out
cs
shl
mov
dec
cdq
or
(bad)
xlat
pop
and
mov
jb
loope
cs
fbld
xor
aaa
jmp
jge
push
popa
jmp
cmp
fs
jne
pop
pop
dec
add
sub
dec
std
cmp
jbe
daa
add
mov
loopne
xor
mov
fcmovnb
add
mov
mov
pushf
jae
mov
cmp
xor
jb
xlat
jmp
inc
xor
call
hlt
cwde
out
push
jmp
(bad)
and
clc
mov
mov
rcr
cmp
push
inc
aas
je
ror
in
jecxz
je
retf
push
pop
pop
jo
mul
xchg
jecxz
lea
pop
retf
cmps
adc
xor
and
pushf
jne
pop
mov
inc
dec
jle
mov
out
jmp
imul
jmp
test
stc
xchg
(bad)
retf
jge
iret
xchg
in
pop
dec
cmp
outs
fcomp
adc
cmp
sti
mov
ds
outs
movs
dec
ins
jnp
or
dec
enter
(bad)
pop
retf
cmps
and
xchg
pushf
daa
aam
push
mov
stc
repnz
dec
arpl
xor
inc
add
lock
cli
add
add
and
xlat
push
xchg
lds
sbb
fucomip
inc
xor
push
sbb
(bad)
xor
mov
(bad)
xlat
push
or
mov
int3
in
dec
and
mov
xor
inc
fcomp
xor
pop
aaa
shl
sub
adc
mov
and
or
(bad)
lods
stos
xor
jne
fwait
mov
fistp
into
cld
sbb
jp
mov
cdq
sub
rcr
jae
pushf
lock
or
inc
mov
jnp
jno
ins
lods
sub
call
shl
cli
movs
xor
add
je
pop
addr16
in
test
push
lss
dec
cwde
or
sub
pop
jge
cs
mov
xor
push
cwde
push
sub
cmp
data16
dec
stc
add
xlat
call
xor
(bad)
push
mov
mov
cmp
push
mov
cwde
xchg
scas
(bad)
in
pop
imul
hlt
ret
cli
sub
retf
addr16
inc
sub
mov
data16
pushf
shl
lea
pushf
or
push
xchg
pop
adc
cmp
in
scas
enter
ret
hlt
stos
pop
cmp
je
popa
fucomip
push
sub
mov
adc
fdivp
cs
aas
add
cmp
ficomp
lods
cmps
(bad)
sbb
ins
test
sub
jbe
test
xchg
add
shr
sub
cs
ret
jp
sbb
sbb
mov
inc
ror
jle
(bad)
adc
adc
fwait
sbb
test
mov
sub
sub
fs
push
mov
js
mov
fcomp
sar
(bad)
fld
addr16
sbb
aad
into
dec
add
fucomip
popa
push
jecxz
fsubp
dec
je
sub
(bad)
pop
or
in
xor
ins
(bad)
mov
cwde
sbb
xor
gs
xchg
ss
and
xchg
mov
stos
into
pop
retf
sbb
mov
addr16
ja
pop
sbb
loope
dec
jb
(bad)
movs
push
or
and
idiv
xchg
xchg
lahf
mov
push
std
addr16
loop
jo
imul
xor
dec
jns
and
aaa
call
ins
push
xor
sbb
sbb
jne
int
mov
adc
xchg
in
test
ret
cdq
adc
fs
fistp
dec
in
lods
mov
cwde
adc
fld
xor
pop
mov
retf
push
add
ss
pop
jmp
ficom
in
inc
mov
mov
movs
adc
xor
inc
push
mov
mov
scas
gs
adc
pop
in
lea
adc
out
(bad)
test
gs
rol
nop
push
mov
xchg
adc
std
lods
cld
or
push
push
ds
in
sti
in
jle
test
lods
add
cli
sti
aad
mov
pop
data16
retf
pop
rcr
imul
daa
inc
sub
sub
stc
sbb
test
or
mov
pop
pop
lods
cmp
(bad)
loop
or
pop
jmp
pop
xchg
sbb
xchg
outs
pop
xchg
or
jg
push
jmp
cwde
aas
sub
sbb
mov
push
or
in
pop
scas
ins
in
sbb
sub
add
and
fdiv
in
pusha
arpl
sub
jmp
repnz
leave
and
cmp
ja
cmp
sbb
and
scas
pop
outs
stc
(bad)
in
sar
cmp
iret
arpl
and
xor
xchg
imul
add
jns
call
mov
sub
je
mov
add
dec
fisub
pop
sbb
(bad)
jno
fstp
mov
cs
mov
stc
jne
or
mov
dec
xor
add
inc
mov
jecxz
fsub
jbe
ins
mov
push
cmp
adc
or
mov
cmc
jb
xor
push
jmp
popa
mov
pop
push
push
and
mov
mov
out
loop
stc
not
sbb
add
enter
xchg
(bad)
out
push
int
sbb
int3
push
jmp
jno
or
sbb
popf
int
jae
jmp
pop
loop
add
inc
pop
pop
and
fsub
gs
fcom
jbe
mov
jl
xchg
push
sub
cmps
(bad)
mov
add
jecxz
jne
imul
pop
xor
fwait
popa
sbb
popf
dec
test
adc
push
jmp
jbe
fcomp
je
pop
jns
cwde
or
sbb
fsubr
arpl
xlat
push
pop
lea
test
dec
push
adc
inc
inc
out
ror
push
adc
xor
rol
pop
pop
dec
adc
add
test
jnp
dec
lods
push
xlat
jl
cmp
(bad)
push
xchg
or
xchg
mov
dec
dec
sub
add
xchg
test
mov
fxam
inc
movs
jmp
out
data16
push
push
xor
iret
dec
dec
fisubr
add
push
mov
es
mov
mov
sbb
cs
shr
out
sbb
das
xchg
lea
loope
mov
or
inc
sub
xchg
cmp
retf
add
clc
cmp
int3
gs
sub
stc
and
dec
mov
mov
outs
div
test
dec
ss
push
sbb
mov
push
les
or
jno
lahf
or
or
enter
jg
rol
pop
inc
add
into
xchg
mov
pop
addr16
out
xchg
cmp
icebp
add
out
xlat
cdq
push
mov
loope
bnd
inc
sbb
pusha
or
and
in
sbb
jg
rol
xor
and
es
mov
and
xchg
leave
cmp
neg
jbe
ds
out
and
divps
icebp
adc
test
sub
(bad)
mov
std
mov
leave
inc
(bad)
lock
add
outs
cmp
popf
gs
shl
sbb
daa
jp
xchg
imul
xlat
jg
add
mov
push
cmp
fdivr
pushf
clc
lods
dec
and
sahf
cmp
test
push
or
pop
aas
loope
arpl
outs
imul
dec
or
inc
jno
call
sahf
sub
sub
cdq
mov
dec
retf
movs
mov
inc
jmp
or
xchg
cmp
or
pop
mov
adc
push
sub
cmps
mov
and
(bad)
bound
jecxz
fmul
sbb
push
mov
jno
dec
xchg
cli
fnstsw
enter
add
sti
pushf
rol
arpl
and
sahf
mov
pop
lahf
push
xchg
bound
cmp
pop
and
push
mov
push
sbb
mov
xor
and
push
mov
lods
outs
adc
xor
and
fidivr
cs
jne
dec
stos
adc
cmc
cs
push
out
pop
test
jmp
pushf
sbb
sbb
jb
mov
adc
sbb
dec
mov
inc
xor
test
jmp
jnp
sbb
shr
jle
jne
adc
xor
cmc
movs
mov
and
fld
mov
hlt
aaa
test
add
sbb
call
jne
mov
mov
out
inc
in
hlt
inc
push
mov
pop
jnp
repz
mov
jl
xlat
je
in
out
jmp
mov
cmp
mov
lods
cmp
adc
mov
push
or
fsub
out
bound
inc
inc
test
ret
pop
inc
mov
cmps
int
add
rol
or
je
pushf
jmp
scas
stos
das
xchg
arpl
cmc
int3
sti
fcomip
lea
inc
mov
jmp
xor
movs
in
xchg
cmp
pop
ror
iret
mov
adc
and
dec
mov
retf
fucomip
rcr
mov
imul
push
cmp
ja
jbe
inc
lds
mov
jb
mov
mov
(bad)
pushf
cwde
push
(bad)
pop
sub
or
hlt
xor
out
cld
imul
push
retf
xchg
dec
call
cwde
mov
retf
xchg
lock
iret
jb
jp
or
cmc
xchg
and
lock
inc
popf
push
stos
add
adc
int
(bad)
sub
jmp
ss
fucomip
pop
xchg
(bad)
inc
cdq
mov
mov
mov
lock
inc
ja
shl
fwait
inc
out
jge
jg
jae
pusha
test
dec
lods
push
pop
inc
pop
movs
cmp
mov
xor
cmp
jne
mov
sub
mov
test
or
xchg
mov
inc
sbb
jge
jp
jae
push
or
dec
das
out
mov
fcom
cmp
and
inc
adc
popf
int3
retf
xchg
sbb
popf
jl
lock
fdivrp
aam
mov
dec
ror
clc
pop
scas
add
mov
push
or
push
pop
mov
mov
pop
sub
jp
mov
mov
dec
test
hlt
dec
int3
sahf
cld
push
inc
int
loope
scas
inc
lahf
bound
aad
cli
lock
mov
pop
inc
inc
sbb
dec
jmp
mov
mov
cmp
sub
mov
pushf
int
cmp
jne
xchg
or
out
sbb
xchg
mov
into
pusha
stc
mov
xchg
jl
mov
test
inc
jns
fsubr
xchg
es
int
lahf
and
mov
jecxz
imul
lds
xor
movs
push
jb
(bad)
and
or
pop
sub
pop
dec
aad
popf
xchg
mov
sar
stos
mov
jecxz
or
scas
(bad)
cld
mov
or
out
pop
mov
std
js
and
push
clc
cmp
pop
ja
push
and
ret
xor
mov
(bad)
ret
loopne
pcmpgtb
rcr
jno
shl
sbb
push
ins
mov
pop
dec
add
add
and
aad
je
icebp
and
push
xchg
cmps
rcr
mov
inc
xor
stos
shl
mov
adc
sbb
movs
dec
mov
retf
and
inc
or
xor
repz
movs
push
mov
sub
ss
out
and
xor
pop
sbb
retf
outs
outs
xor
mov
mov
adc
enter
js
jmp
ins
aas
retf
idiv
and
shl
pop
mov
(bad)
fsubr
push
add
outs
and
sbb
lock
cmp
push
bound
mov
pop
and
mov
mov
mov
cmp
inc
fstp
jge
mov
and
ins
xor
(bad)
dec
lds
stos
pop
adc
mov
movq
retf
push
add
push
in
test
add
adc
xor
mov
sub
shr
push
or
movs
cli
jb
pushf
scas
ror
ins
scas
retf
fst
push
fstp
cmp
mov
jae
scas
icebp
push
pop
or
cmp
xchg
mov
cmp
(bad)
push
std
nop
mov
dec
xchg
mov
hlt
sub
test
jl
ror
dec
in
ror
mov
cmp
dec
and
mov
add
and
fcmovbe
cmp
icebp
das
push
sub
pop
lahf
les
das
and
sti
push
sub
and
lods
sbb
mul
shl
(bad)
shl
pop
pop
mov
pusha
fisttp
test
dec
jno
test
xor
mov
shl
xchg
mov
mov
xchg
pusha
lds
dec
and
leave
adc
ffreep
mov
mov
lahf
sbb
pop
xchg
inc
shl
loopne
sub
daa
jp
test
pop
loope
pop
jae
lock
ret
in
jnp
(bad)
push
in
out
sub
jge
xchg
cmp
mov
xchg
xor
shl
stos
xor
jmp
rcl
lods
clc
loope
fistp
daa
jl
aas
mov
je
lahf
call
pop
(bad)
std
inc
and
or
arpl
test
mov
or
xchg
das
(bad)
cdq
pop
ja
cli
es
mov
ds
bound
out
add
pop
cmp
push
jbe
call
in
jmp
lahf
test
adc
adc
sbb
dec
cmp
or
sub
xchg
pop
push
loop
bound
out
cmps
test
ret
push
cmp
fist
scas
mov
and
sub
in
sbb
push
mov
mov
fidivr
push
cwde
outs
lea
xchg
adc
sar
inc
pop
in
mov
jmp
movs
xchg
fisub
loop
dec
fdivr
add
jno
setle
(bad)
inc
sbb
in
mov
and
outs
outs
dec
lds
scas
pusha
dec
xchg
idiv
mov
movs
push
fisub
cmp
je
push
dec
cmp
xchg
adc
xlat
push
sbb
xchg
inc
jb
out
shl
xor
jne
jecxz
mov
dec
mov
adc
mov
pop
loope
dec
fs
adc
div
cmp
jno
push
nop
mov
xchg
or
fst
mov
or
inc
cmps
pop
or
shl
push
or
dec
push
loope
test
fcomp
rcl
adc
cmp
imul
enter
dec
in
out
repnz
adc
add
xchg
cmps
pushf
add
inc
pusha
fcom
mov
cmp
addr16
dec
std
std
std
sub
xchg
mov
mov
shl
enter
pop
pop
(bad)
push
xchg
in
or
and
or
repz
xor
daa
test
ins
dec
push
leave
adc
cmp
fdivr
jbe
push
mov
popaw
cmps
dec
scas
fbstp
nop
scas
pushf
gs
(bad)
inc
add
add
sbb
dec
mov
xor
out
(bad)
sub
(bad)
cmp
mov
test
mov
inc
dec
js
jmp
dec
fwait
mov
test
jnp
push
dec
(bad)
jg
jnp
mov
sar
push
cwde
sbb
pop
dec
inc
mov
cwde
inc
push
cs
pop
call
outs
push
dec
jne
pusha
push
mov
daa
cmp
xor
inc
arpl
mov
movs
adc
das
adc
jmp
inc
dec
mov
cdq
add
frstor
out
mov
push
(bad)
cmp
fsubr
clc
ds
or
dec
add
mov
add
sub
cmp
push
int3
(bad)
ret
sub
(bad)
icebp
and
sub
adc
shl
ja
sahf
mov
cwde
mov
ins
lea
mov
dec
pop
push
sbb
ds
pop
adc
push
test
xchg
cmp
cmp
test
sub
es
adc
or
cmc
mov
push
fs
jmp
test
mov
dec
inc
dec
dec
inc
push
fcomp
lahf
ret
cmps
daa
jae
xor
inc
mov
mov
(bad)
mov
repz
movs
sahf
push
daa
setnp
clc
push
mov
sbb
add
add
inc
out
and
sti
call
adc
mov
mov
lea
mov
push
inc
scas
or
add
pop
pop
xchg
test
or
cmp
mov
in
mov
add
pop
sbb
mov
adc
test
jne
mov
retf
push
jl
fdiv
sbb
pop
sbb
or
and
gs
nop
cmps
add
outs
or
push
or
cld
and
sbb
adc
dec
mov
mov
push
add
push
or
dec
mov
retf
pop
mov
test
lea
(bad)
and
ja
mov
sub
jne
xor
scas
div
jmp
jmp
mov
dec
bound
jg
adc
jbe
les
call
repz
sbb
int
jae
inc
dec
jo
pop
push
or
shr
sub
(bad)
js
test
and
push
xor
mov
cmp
adc
dec
rol
adc
inc
mov
sahf
fst
test
stc
call
inc
sbb
pop
aad
shl
data16
sub
shl
push
pop
test
pop
fcomp
mov
scas
pop
das
inc
mov
sbb
mov
into
enter
push
jge
add
es
das
pop
xor
inc
pop
pop
shr
ret
rol
jns
mov
xor
sub
add
test
stc
inc
add
(bad)
pop
outs
sbb
xlat
fdivr
popa
sbb
push
outs
out
inc
dec
loope
sub
enter
movs
dec
mov
mov
repz
push
popf
dec
inc
pop
outs
popf
cmp
mov
in
fwait
xor
aaa
shl
aaa
push
cli
pop
dec
mov
inc
aaa
add
adc
icebp
cdq
add
in
mov
lea
fcmovbe
xchg
mov
es
add
xchg
sub
xor
pop
or
out
(bad)
out
js
inc
push
int
push
pusha
inc
ss
ds
add
daa
adc
and
push
adc
or
sbb
or
adc
xor
out
mov
jns
(bad)
(bad)
icebp
adc
out
loopne
ret
add
in
out
sub
ret
movs
(bad)
push
jmp
movs
(bad)
lock
or
jbe
dec
cmp
mov
pop
(bad)
shl
mov
mov
push
stos
mov
call
lds
cmps
int
pop
int
test
sahf
ror
dec
mov
out
stc
mov
inc
inc
add
inc
(bad)
sub
neg
dec
sbb
xchg
push
movhps
in
fnstsw
mov
stc
push
out
or
mov
jns
fs
jbe
cdq
cmps
xchg
cs
retf
mov
(bad)
mov
adc
xor
out
movs
bound
pop
aam
cmp
inc
xor
arpl
xchg
xor
cmps
jmp
push
jmp
data16
(bad)
fadd
jle
imul
dec
popa
jg
(bad)
jl
jae
sub
adc
shl
fs
cmps
call
sar
dec
push
popa
cmps
pop
fsub
dec
xchg
lods
push
mov
xchg
pushf
in
iret
ja
or
mov
loope
daa
mov
iret
xor
push
out
jmp
lods
jns
mov
pop
sti
test
in
jecxz
(bad)
out
xor
addr16
(bad)
div
cwde
fs
into
mov
cwde
daa
fwait
dec
ins
arpl
inc
test
mov
sahf
fdivr
dec
aaa
in
fnclex
cmp
movs
xchg
cmps
mov
fs
xor
outs
pop
ins
cs
dec
cmp
sub
inc
inc
call
mov
fcom
jne
fwait
sahf
lock
lahf
sub
sahf
jg
or
or
mov
push
test
xchg
push
push
or
and
jmp
jl
out
jecxz
sar
pminsw
adc
in
xchg
xchg
shr
mov
call
lahf
pop
push
mov
lods
add
inc
jl
or
dec
jne
add
xsha256
cmps
pop
adc
in
aad
fidivr
loop
push
jmp
imul
aad
stc
(bad)
pop
js
sbb
inc
mov
out
jb
fwait
(bad)
xor
addr16
sbb
dec
in
out
jb
xchg
int3
mov
push
push
inc
adc
dec
sub
js
je
(bad)
push
imul
dec
jbe
sub
inc
push
push
mov
ins
jmp
dec
sahf
(bad)
mov
mov
push
clc
adc
sub
loop
(bad)
xchg
sub
and
push
inc
inc
sub
mov
shr
and
adc
xchg
push
test
jne
sbb
jno
xor
jl
adc
retf
idiv
lds
es
xchg
xchg
iret
mov
icebp
in
push
aad
pusha
pop
pusha
add
cmp
xor
sahf
and
(bad)
mov
pop
jae
stc
adc
loope
aaa
fbld
out
and
pop
mov
adc
mov
sub
inc
fucom
dec
adc
pop
in
(bad)
test
cdq
add
inc
es
pusha
shr
ins
pop
dec
xor
ja
(bad)
dec
mov
jge
push
mov
pop
or
cs
(bad)
scas
mov
or
mov
add
mov
arpl
jb
fdiv
sbb
aam
in
js
(bad)
mov
cmp
pop
dec
pushf
mov
repnz
imul
je
mov
xor
or
sbb
sub
cwde
pusha
shl
pop
lods
sbb
mov
dec
popa
xor
jp
push
popa
adc
pushf
popa
jno
mov
cmc
push
jecxz
push
aas
fs
jge
pusha
sub
adc
mov
cs
js
inc
mov
sbb
cmps
xor
ins
cwde
loop
pop
inc
es
mov
loopne
cmp
fdiv
mov
in
mov
into
(bad)
clc
lock
pop
(bad)
retf
lods
cmps
adc
imul
or
xlat
push
nop
adc
cmp
stos
sbb
stos
sbb
ja
pop
or
xchg
test
adc
mov
mov
fbld
pop
mov
sbb
clc
fist
sub
pop
sti
bound
sti
out
sbb
mov
push
mov
js
dec
test
hlt
push
pop
ins
jmp
cld
mov
std
fld
shl
inc
add
outs
jnp
rcr
rol
frstor
xchg
jns
xor
xor
nop
xor
mov
sub
dec
cmps
mov
leave
or
sub
sub
fst
pop
mov
cmp
es
pop
inc
enter
adc
inc
add
(bad)
(bad)
cmp
iret
out
daa
add
into
sub
call
dec
adc
rol
jo
repz
repnz
jne
sub
out
push
mov
fwait
(bad)
mov
js
gs
test
retf
fdiv
dec
(bad)
dec
outs
and
xor
fld
sahf
pop
dec
pushf
push
mov
les
fidiv
js
cmc
pop
int3
jmp
push
aam
xchg
mov
sub
mov
sub
push
pushf
add
enter
xchg
cdq
xchg
rol
aas
inc
dec
imul
jl
cmps
lahf
mov
outs
push
daa
sbb
add
gs
push
mov
lods
repnz
mov
mov
push
pop
xor
js
rol
(bad)
stc
mov
inc
sub
jge
fst
fwait
mov
xchg
mov
cmc
inc
jl
pop
jmp
in
jge
add
das
imul
sbb
test
fwait
pop
in
dec
sub
gs
mov
int3
out
or
xor
mov
xchg
fadd
nop
sub
xor
mov
test
into
sbb
(bad)
sbb
icebp
jne
xchg
add
dec
sbb
sub
cli
mov
bnd
mov
hlt
add
adc
in
xor
add
out
fwait
mov
adc
push
xchg
pusha
imul
sub
push
int
aas
push
fsubr
inc
xchg
and
int
clc
test
mov
iret
mov
jno
mov
rol
sub
lods
cli
imul
cld
jl
jb
mov
aad
inc
push
lods
fs
stc
dec
inc
and
movs
movs
movs
in
fdivrp
push
add
or
adc
add
push
outs
psrlq
jbe
add
es
push
mov
jmp
bound
jns
cli
leave
push
mov
popf
adc
out
mov
je
push
pop
mov
inc
(bad)
pop
sub
imul
(bad)
aaa
cmc
rcr
ss
aam
push
mov
aaa
fs
pop
dec
nop
sti
fsub
(bad)
popf
inc
xchg
mov
cmp
int
imul
jo
xor
cmp
mov
xchg
fucom
jbe
dec
mov
je
rol
cmp
pop
in
daa
outs
sub
or
add
sub
out
push
cmp
fst
cmp
xor
dec
dec
dec
xor
xor
add
jle
(bad)
mov
clc
xor
and
rol
shr
cli
lds
inc
xchg
xchg
lds
sahf
mov
mov
cmp
stos
push
(bad)
adc
mov
out
sahf
push
pusha
ja
add
arpl
mov
push
mov
sbb
mov
pop
sbb
dec
dec
jle
test
test
sbb
cmp
or
mov
xor
jbe
mov
push
fidivr
dec
and
stc
not
mov
push
and
fadd
jp
and
pop
das
jp
cmp
lds
fcomp
mov
xchg
lea
sub
mov
push
mov
mov
call
and
push
xor
sub
push
jb
or
cmp
es
out
shr
or
or
out
cmp
fldenv
in
or
scas
add
mov
dec
mov
loop
and
idiv
data16
pop
inc
pushf
sub
mov
in
inc
lods
hlt
stos
lds
retf
pop
cmp
sbb
inc
ror
leave
clc
hlt
daa
and
mov
or
(bad)
cmc
lahf
dec
pusha
dec
xor
fnstsw
mov
in
add
out
and
pop
arpl
dec
jne
lahf
mov
jnp
in
fwait
sbb
ret
mov
lea
adc
mov
cmp
lods
sub
sub
(bad)
rcl
sub
push
pop
cmp
cld
cmps
cmp
and
aam
cwde
xchg
add
(bad)
mov
inc
mov
leave
jl
inc
sbb
cli
mov
xchg
inc
sub
push
int
(bad)
addr16
jle
mov
push
jmp
xchg
lods
jl
iret
xor
add
fstp
push
inc
mov
mov
jne
repnz
mov
xchg
mov
adc
dec
aam
jnp
movs
mov
xlat
(bad)
outs
fmulp
ret
aas
ss
sub
and
push
aaa
mov
jl
loope
icebp
xchg
ror
cmps
push
add
out
(bad)
in
test
bnd
retf
and
pop
aad
popa
in
ficomp
movs
ja
jle
cmps
mov
dec
sub
popf
mov
xchg
arpl
adc
test
cmp
jecxz
fwait
ret
out
jmp
mov
jno
adc
mov
aas
xor
cmps
or
dec
cmps
xor
lea
ficom
sub
xor
adc
mov
fwait
popf
imul
sub
mov
dec
sbb
xor
adc
mov
mov
jg
add
or
stc
scas
push
out
out
pop
scas
inc
in
xor
pop
icebp
fistp
stc
pop
ss
popf
mov
nop
and
fdivp
dec
mov
lahf
pop
or
xchg
or
jbe
mov
jmp
inc
adc
push
or
stos
xchg
or
xchg
jl
retf
into
les
jp
jmp
push
outs
loop
mov
pusha
jecxz
aam
add
xor
lods
pop
into
and
fwait
mov
jmp
cs
adc
xchg
push
and
cs
js
cmp
out
push
push
jg
popf
sar
jbe
push
aam
push
loopne
sbb
iret
push
xchg
imul
les
scas
jecxz
mov
nop
pop
add
das
pop
cwde
out
pop
mov
mov
das
fisttp
pop
bound
add
inc
xor
mov
stos
sbb
cmp
jmp
inc
call
jb
mov
cs
xchg
enter
or
sub
xor
jo
loop
mov
inc
jnp
in
repz
inc
loopne
and
xchg
add
cmp
into
lds
xchg
aas
sub
cs
dec
pop
ret
cli
pusha
mov
dec
repnz
loop
mov
cmps
imul
cmp
pop
and
jge
jle
fistp
mov
pop
adc
cmp
mov
cmova
int3
fwait
add
gs
mov
mov
jp
retf
cwde
mov
(bad)
mov
das
adc
lods
jmp
xor
scas
mov
fwait
pushf
popf
or
jno
xchg
mov
mov
mov
xor
outs
xlat
cmp
fidivr
cmp
add
push
ja
and
fadd
lock
mov
xor
or
mov
repz
pushf
arpl
dec
push
das
inc
(bad)
out
test
adc
push
fxch
sahf
adc
nop
adc
add
scas
sbb
sets
cmp
jmp
jge
in
iret
iret
test
sub
test
retf
popf
and
stos
xchg
sub
push
mov
(bad)
repz
and
pop
xchg
jl
xor
add
call
stos
dec
popa
jmp
out
pop
fucomi
stos
adc
dec
retf
ss
lds
jno
mov
sbb
mov
xchg
mov
mov
xor
pop
pop
adc
(bad)
ret
sar
fidiv
mov
outs
loopne
cmp
cmps
mov
sbb
mov
lds
in
jge
cmp
or
jbe
push
mov
enter
ja
add
dec
fwait
jp
test
add
lods
movs
fwait
(bad)
mov
(bad)
jge
adc
loope
outs
sub
das
ins
lahf
in
(bad)
jg
mul
aaa
jbe
(bad)
mov
mov
or
adc
mov
inc
(bad)
mov
ins
mov
mov
and
jp
and
dec
daa
sub
push
test
ds
and
mov
in
mov
dec
sub
aad
es
out
push
xchg
mov
mov
test
mov
sub
mov
mov
js
sti
loope
arpl
es
push
scas
xchg
mov
sar
ror
dec
fcomp
pop
outs
mov
(bad)
in
enter
fcom
mov
add
call
leave
icebp
inc
xchg
xchg
lds
adc
shl
hlt
(bad)
loop
outs
sbb
popf
in
out
cmps
add
repnz
inc
fdiv
pusha
inc
cmp
mov
scas
icebp
stc
xchg
loop
ss
pop
jno
mov
das
call
xor
int3
test
pop
shl
push
push
enter
xchg
mov
xchg
xor
jp
xor
lds
jns
mov
add
(bad)
mov
call
mov
rcr
or
inc
dec
mov
ja
mov
cmc
repnz
xchg
xor
cld
inc
pop
cmp
dec
or
cmp
(bad)
mov
and
in
lahf
xchg
cld
movs
or
loop
vhsubps
sti
nop
or
or
push
sub
lds
(bad)
mov
push
iret
in
jnp
les
inc
or
mov
loope
imul
(bad)
mov
call
fwait
sub
in
(bad)
fbstp
loopne
xor
std
into
inc
std
push
sbb
ds
in
or
mov
pop
popf
(bad)
cwde
dec
stc
cs
dec
mov
addr16
mov
test
pop
push
cmp
cmp
mov
jmp
int
arpl
adc
xchg
or
leave
mov
pop
dec
add
imul
jl
cmc
call
gs
pop
cmps
fcomp
sub
mov
outs
sahf
ss
cmps
sub
mov
mov
call
repz
xchg
adc
das
adc
movs
sti
dec
and
sbb
mov
push
pop
es
arpl
xchg
cmps
mov
outs
inc
jg
ins
or
into
out
mov
xchg
(bad)
hlt
mov
shl
add
mov
pop
imul
dec
sbb
data16
test
sar
lock
test
lods
scas
test
mov
enter
pop
scas
pop
test
out
inc
stos
push
in
es
push
cli
mov
aas
xor
push
sub
xchg
or
xchg
aas
jmp
test
sub
js
iret
pop
jge
aas
imul
push
mov
sub
xchg
mov
mov
mov
cmp
push
cmp
fwait
and
pop
retf
push
out
fdiv
cld
push
pusha
std
ss
lock
es
lods
ficom
push
xor
pusha
add
mov
mov
mov
scas
test
call
mov
and
add
movs
mov
dec
(bad)
int
lods
mov
mov
aam
xlat
into
daa
inc
enter
sub
lods
xor
in
add
sbb
add
dec
xchg
je
fisubr
lahf
push
rol
cwde
fwait
inc
test
aad
stos
xchg
inc
sbb
sub
mov
(bad)
ret
adc
push
mov
mov
div
test
mov
hlt
push
(bad)
mul
xor
adc
test
xchg
cs
aad
cmp
mov
movs
js
outs
fistp
fidivr
or
cmp
test
iret
fwait
mov
mov
push
or
fmul
in
mov
js
call
inc
test
addr16
data16
cdq
jg
and
int
xor
(bad)
fcom
dec
lods
aam
or
inc
test
pop
aam
pop
pop
aam
les
xlat
retf
cmp
mov
sar
aaa
mov
mov
rcr
push
cmp
jno
mov
jno
push
inc
in
jno
inc
imul
in
mov
jns
xor
add
test
dec
je
jb
outs
loope
outs
inc
int
(bad)
mov
pop
adc
mov
jns
xor
jmp
in
jp
push
imul
xchg
push
xchg
out
add
cmp
jmp
(bad)
mov
mov
fnsave
cld
icebp
push
fisub
and
scas
sub
sub
ja
daa
inc
or
clc
ja
jne
mov
cwde
adc
sbb
inc
into
cwde
call
or
xchg
loopne
sub
adc
add
or
sub
cli
(bad)
repnz
(bad)
mov
rcl
mov
clc
leave
push
push
lahf
stos
test
ror
rol
and
imul
add
push
popa
xchg
dec
xchg
add
adc
jmp
sbb
cli
mov
jno
add
jge
mov
movs
(bad)
jmp
gs
cdq
ror
out
in
sar
sub
fwait
sbb
ja
retf
popf
mov
imul
lock
fs
dec
lock
je
mov
push
push
iret
add
dec
je
loopne
aas
cs
test
movs
imul
dec
pop
mov
cmp
mov
out
imul
retf
xchg
call
inc
adc
pop
ja
or
xor
push
lea
ror
call
or
into
daa
xor
test
jb
or
cmps
add
aad
mov
out
imul
sub
addr16
(bad)
sbb
packssdw
arpl
add
rsqrtps
ins
adc
pop
xchg
cld
mov
mov
mov
mov
jnp
(bad)
dec
daa
mov
lock
sbb
iret
mov
dec
dec
pop
sbb
jmp
xor
xor
xor
push
pusha
xchg
dec
out
fst
ror
imul
(bad)
push
or
pop
aad
sub
or
jae
mov
sub
mov
jne
inc
mov
in
ficomp
fbstp
data16
dec
rol
mov
sub
fwait
dec
test
fld
in
push
cmps
xchg
cmp
adc
pop
mov
xor
leave
loop
stos
into
push
hlt
loope
jmp
xor
es
mov
das
push
adc
je
pop
cmp
iret
int3
push
mov
sub
iret
test
lahf
add
dec
cmp
loope
push
mov
dec
fsubr
iret
pop
cmp
test
ins
je
jl
daa
pop
xchg
or
push
(bad)
(bad)
fnstenv
test
push
cs
dec
js
cmp
(bad)
test
jb
dec
jbe
push
jmp
pop
mov
adc
jge
mov
jmp
sar
jg
adc
out
retf
rcl
pop
mov
adc
cli
or
aaa
aas
cld
ins
and
inc
mov
mov
jno
push
push
jmp
dec
push
lods
out
lods
daa
(bad)
jmp
pop
fadd
fidivr
sub
jns
sahf
inc
cmps
and
aam
scas
mov
pop
(bad)
dec
xlat
gs
cmp
retf
pop
jno
xchg
push
pop
scas
imul
jb
int3
pop
fs
fiadd
ret
dec
test
pop
or
inc
mov
mov
jecxz
lea
fst
add
xor
xchg
int
mov
fist
mov
daa
pop
mov
rcl
pop
mov
inc
std
(bad)
xor
cmp
inc
sahf
xlat
mov
xchg
mov
push
js
jo
test
aad
inc
xor
into
(bad)
xor
jmp
jle
fwait
in
setp
into
dec
or
adc
mov
pushf
pop
dec
clc
dec
jae
mov
out
mov
lds
cdq
nop
stc
add
ds
sbb
jno
inc
in
aas
out
(bad)
adc
add
fstp
adc
lods
mov
pop
dec
xor
xor
(bad)
aas
fst
daa
sub
sub
in
mov
xor
xor
pop
inc
ret
ins
in
push
inc
stc
call
aad
les
jmp
sub
adc
repnz
test
popf
push
retf
std
test
xor
test
and
jle
xchg
jnp
push
imul
mov
das
adc
cmp
push
push
mov
adc
leave
dec
fsub
aaa
jmp
ror
ins
lds
outs
jns
jle
pslld
popf
xor
enter
dec
frstor
cwde
pop
jb
scas
xchg
xor
push
dec
repnz
repnz
stc
cmp
mov
aas
fisubr
(bad)
jne
mul
inc
push
mov
cli
mov
cmp
ret
repz
or
lods
mov
mov
clc
repnz
call
inc
addr16
xor
mov
outs
sbb
xor
ret
nop
cdq
stos
sub
ds
movs
repz
call
jle
xchg
pop
in
inc
(bad)
leave
jl
push
mov
or
ins
sbb
lock
mov
add
scas
clc
lods
push
add
sbb
out
and
ret
jge
sub
jl
add
push
jno
push
icebp
out
popf
(bad)
mov
jae
(bad)
pop
or
sub
pop
movs
addr16
sbb
dec
or
pop
(bad)
mov
push
inc
ins
imul
xchg
mov
out
jl
fidiv
stos
cmp
out
cmps
cmp
add
popf
sub
adc
das
into
sbb
xor
xlat
sti
xchg
(bad)
aad
mov
or
sub
jl
xor
sti
jo
cmp
fwait
push
inc
iret
ss
pushf
stc
dec
cmp
mov
test
in
test
ret
je
mov
xchg
add
xchg
clc
test
fist
adc
leave
arpl
mul
xchg
in
push
add
sub
jno
lds
jge
push
jb
call
mov
dec
dec
popa
fist
rcl
mov
retf
int3
(bad)
test
mov
push
dec
jb
jno
xchg
repnz
clc
fisttp
push
mov
scas
inc
xchg
push
stos
push
mov
ja
test
push
pop
mov
lock
inc
pop
stos
dec
xchg
xchg
rol
data16
and
mov
and
dec
ja
jns
cmp
adc
xor
dec
call
leave
movs
sub
or
mov
das
rol
enter
shr
inc
shl
mov
dec
xchg
shl
adc
adc
and
inc
or
and
cmp
cmps
(bad)
imul
push
jne
mov
test
pop
int
inc
mov
mov
jne
ror
push
dec
iret
not
push
dec
daa
sub
xchg
cmp
jecxz
popf
pushf
mov
movs
xchg
and
cmc
into
mov
dec
in
daa
jae
ins
mov
pop
mov
jae
cmp
add
lahf
dec
sbb
dec
and
or
lds
pop
int3
(bad)
loopne
push
pusha
sub
nop
cmp
mov
add
pop
mov
shl
cdq
fwait
mov
arpl
icebp
xchg
pop
xlat
xor
ins
nop/reserved
push
stc
dec
test
push
pop
sub
dec
cmp
pop
pop
cmp
sar
sub
loopne
es
js
cmps
jmp
rcr
mov
and
add
bound
test
int3
xchg
outs
push
xor
inc
sbb
jle
pusha
repnz
xor
xchg
fimul
aad
ret
lds
jns
adc
pop
stos
lods
xchg
enter
sub
push
pop
dec
inc
push
jmp
push
cmps
in
mov
js
and
neg
daa
ja
popf
fmul
inc
fstp
add
dec
pop
push
sub
add
mov
push
sti
inc
xlat
pop
cwde
pop
pop
push
enter
jle
mov
or
fwait
shr
ins
sbb
jb
mov
int
ficomp
or
sub
add
jle
push
mov
repz
aaa
cmp
aad
scas
jge
(bad)
fistp
ja
(bad)
leave
sub
jo
mov
add
jl
sbb
push
sbb
addr16
in
cmp
or
dec
adc
sbb
sbb
mov
mov
fcmovnbe
cmps
mov
sub
loop
xlat
(bad)
jg
imul
cmp
cmc
or
mov
sbb
outs
mov
cmp
xor
cmp
ror
iret
setns
sub
into
cli
enter
jp
int3
not
movs
xchg
cmc
jle
push
dec
xchg
jne
sbb
out
nop
lock
mov
aas
popf
and
sub
cld
in
mov
mov
test
je
mov
and
ds
test
push
lods
std
push
add
pop
aaa
adc
jae
mov
test
push
pop
das
leave
xchg
xor
mov
pop
mov
clc
fwait
add
cwde
ror
fist
sub
jo
(bad)
push
jge
lea
fldcw
cld
lds
stos
pop
cmp
inc
std
imul
ds
xor
retf
nop
pop
in
imul
test
push
jae
test
dec
xor
mov
leave
stc
or
push
or
mov
mov
mov
movs
out
pop
mov
adc
jmp
dec
push
into
and
cmp
mov
push
push
daa
mul
movs
adc
dec
adc
cmp
popa
cs
xlat
cmp
in
cmp
dec
adc
es
in
ins
outs
jp
inc
mov
dec
xchg
cmp
sti
mov
das
lahf
into
push
dec
pop
nop
jmp
repnz
add
dec
dec
jle
sbb
add
ficomp
cmp
or
rol
aaa
ja
cdq
or
int
push
sub
inc
jbe
add
(bad)
cmc
mov
stos
push
or
jns
(bad)
sub
cli
jmp
orps
inc
aad
je
sti
test
pusha
outs
inc
bound
xor
xor
(bad)
dec
sub
fidiv
jno
jecxz
cld
jle
xchg
popa
push
cmp
xchg
and
pop
ins
out
int3
loope
pop
add
sbb
out
pop
outs
dec
sub
pop
or
xchg
mov
iret
xchg
sbb
sbb
(bad)
mov
mov
fcmovnu
mov
sbb
jle
cmp
cmp
jg
xchg
inc
mov
dec
icebp
jno
cli
xchg
pop
std
jns
inc
xbegin
stc
fneni(8087
inc
cmp
xchg
daa
dec
mov
mov
xchg
retf
and
sub
scas
test
lods
push
xor
fnsave
jnp
out
(bad)
mov
pop
iret
cmp
pop
or
jmp
dec
lods
idiv
adc
cmp
pop
(bad)
mov
adc
loopne
lods
pop
mov
cdq
cmp
retf
or
pop
pop
cli
push
shld
adc
ins
lock
push
xor
cmp
pop
or
fdivr
cmp
out
outs
adc
sar
mov
(bad)
std
xor
in
arpl
jbe
xchg
push
es
call
test
nop
or
jl
imul
rol
sar
or
mov
dec
dec
(bad)
fld
int
push
adc
cmp
or
xchg
mov
(bad)
in
movs
adc
fs
cmps
dec
jo
and
pop
test
mov
mov
add
scas
jnp
sub
std
push
xlat
scas
adc
and
mov
dec
cmp
jo
jnp
jmp
test
test
mov
mov
cdq
mov
pop
xchg
sub
cmp
adc
in
cmp
xchg
xor
(bad)
add
or
gs
aad
inc
and
repnz
ss
cli
(bad)
into
lahf
pop
fadd
fist
pop
push
or
xor
mov
cmps
aam
mov
pop
xor
arpl
lds
inc
ja
mov
or
rcr
fild
pop
push
pop
(bad)
int
mov
mov
cmp
jp
push
inc
ins
push
rcr
arpl
addr16
mov
popf
adc
ror
mov
dec
or
inc
(bad)
sbb
mov
cmp
ss
xchg
movs
pop
xor
mov
xlat
add
xor
dec
popf
popa
push
out
loope
bnd
sub
add
fcomp
pop
test
or
pop
shl
or
xchg
sub
mov
lahf
xrelease
dec
sbb
rol
lahf
xchg
xchg
les
pop
fst
ss
dec
ret
(bad)
mov
sub
jo
je
ss
push
xchg
add
ja
call
sub
xchg
rol
clc
cmps
xor
mov
cdq
xor
cmc
lods
mov
push
out
mov
lds
in
loop
jb
into
xchg
or
sbb
leave
pop
add
jp
mov
(bad)
call
sub
push
lods
enter
mov
adc
cmps
mov
add
repnz
sahf
xlat
or
std
jg
cwde
test
cmp
(bad)
cmps
dec
bound
arpl
adc
inc
pop
mov
stos
dec
dec
push
adc
lods
add
retf
push
aam
imul
and
cmp
xor
sbb
aad
dec
mov
mov
(bad)
frstor
dec
icebp
rcl
sub
int3
dec
push
pushf
arpl
jmp
daa
cmp
or
out
dec
cs
fwait
mov
cmp
jno
fld
mov
adc
add
jmp
ret
mov
and
inc
clc
imul
dec
aaa
pop
xchg
push
xchg
rcr
fidiv
and
adc
cmp
adc
sets
mov
jnp
lods
mov
xchg
dec
mov
in
xor
xchg
add
cmovp
imul
cmp
popf
cmps
jno
cwde
aad
pop
movs
(bad)
sub
loop
jbe
inc
pop
xchg
loopne
add
inc
fucomi
dec
aam
xor
dec
(bad)
clc
jns
dec
xor
pop
ret
ins
cmp
push
cdq
sahf
push
xchg
cmp
outs
lds
dec
adc
repz
aaa
pop
jl
mov
adc
rcr
and
ins
cmp
xchg
jp
and
inc
sbb
test
xor
or
pop
mov
mov
cmps
dec
stos
imul
jmp
je
xor
jp
or
adc
test
fist
rcr
setp
jecxz
std
dec
mov
imul
fucomp
and
jge
jle
in
xchg
jo
popa
(bad)
retf
mov
mov
sahf
push
push
and
inc
jne
dec
sbb
gs
ins
cs
ja
icebp
shr
or
dec
add
or
cmp
inc
(bad)
fbld
or
inc
pop
push
aaa
(bad)
pop
cmp
push
cmps
jp
sahf
push
inc
in
shl
in
mov
push
dec
fidivr
outs
dec
(bad)
pop
xchg
aam
xchg
xor
imul
lods
bound
sbb
and
in
retf
enter
xor
pop
setne
ins
lods
mov
mov
les
out
ins
mov
mov
das
jmp
aam
call
mov
cld
and
mov
xchg
inc
sub
inc
jb
frstor
mov
out
and
(bad)
adc
push
push
data16
out
jmp
ja
das
mov
jge
or
cmp
push
pop
cmp
(bad)
fcomp
stos
cld
push
gs
push
xchg
fild
jg
cmp
arpl
jmp
hlt
xlat
or
pop
pop
sbb
std
cmp
pop
dec
leave
scas
push
push
aaa
(bad)
test
add
repz
scas
imul
test
or
loopne
dec
mov
push
stos
stos
out
(bad)
or
ins
xor
aam
cmc
xchg
pop
out
ins
iret
sahf
and
call
cli
rcr
jle
inc
in
test
inc
jg
and
or
jmp
mov
ins
int3
retf
pusha
xchg
in
ins
pop
jg
mov
dec
loop
adc
aaa
add
rcl
in
sub
jno
xor
dec
jnp
out
cmps
push
out
retf
les
idiv
dec
gs
mov
jg
mov
or
cdq
or
(bad)
out
fld
stos
sub
jge
adc
sbb
pop
test
(bad)
aad
push
mov
xchg
pop
clc
push
rcl
sti
rol
inc
mov
or
gs
inc
outs
rcr
in
push
fs
push
cmp
sub
xor
popf
or
pop
push
or
or
enter
data16
cmp
lock
push
cmp
jno
and
sub
lds
retf
stc
fwait
ins
push
inc
push
in
push
popf
int
sub
pop
outs
lahf
pop
adc
into
leave
pop
and
add
out
push
push
sub
inc
hlt
cld
ins
inc
loopne
xchg
ror
jl
xchg
test
mov
je
scas
jg
cmps
ror
and
mov
test
stc
hlt
lea
push
mov
retf
adc
xchg
jmp
xchg
mov
pop
mov
mov
sub
cmps
inc
mov
lock
aas
jns
nop
not
jbe
scas
idiv
ja
daa
int3
pushf
cmc
push
outs
aad
cli
add
mov
pop
pop
stos
inc
shl
mov
daa
test
push
fild
loope
or
test
mov
in
dec
adc
mov
out
adc
inc
sbb
clc
and
ret
(bad)
sub
jecxz
pop
adc
outs
push
mov
add
mov
out
sub
push
xor
outs
sbb
add
loopne
je
mov
and
in
enter
xor
(bad)
mov
dec
inc
pop
jl
xchg
mov
clc
add
out
jbe
jbe
mov
add
lea
imul
ds
pop
cmps
sub
mov
mov
out
or
and
dec
fidiv
pusha
leave
inc
cmp
fucomp
cmp
rol
jne
cmc
xor
adc
arpl
repz
sub
mov
fbld
adc
daa
imul
jg
jns
inc
mov
add
and
and
(bad)
push
and
aaa
mov
adc
sub
mov
lods
mov
and
jbe
inc
sahf
xchg
pop
aas
neg
push
ror
into
ret
mov
das
dec
idiv
push
xor
fstp
sbb
sub
cmp
ss
call
add
lea
ja
jmp
mov
leave
aad
mov
xchg
repnz
sbb
ins
pusha
jns
pop
movs
push
push
fst
mov
cmc
(bad)
mov
sbb
inc
cwde
in
adc
(bad)
in
sub
push
push
cmp
mov
xchg
push
call
cld
push
pusha
lock
pop
pop
call
pop
sbb
shl
jp
jl
(bad)
cmp
cmp
push
in
aas
mov
lods
fcomp
(bad)
(bad)
stc
pop
test
out
clc
ins
jb
ss
psllw
push
xchg
pop
pop
dec
mul
lahf
inc
sbb
pop
cmp
cmp
neg
or
test
inc
(bad)
mov
inc
test
mov
or
sti
xchg
sbb
in
aam
inc
pop
mov
cmp
jge
xor
jge
rol
jmp
dec
mov
sbb
xor
jle
xadd
out
in
in
fcmovnb
push
xor
push
xor
cmp
push
sahf
inc
xor
mov
cmc
fwait
jg
pop
cmps
aam
dec
adc
mov
outs
sbb
ds
mov
sub
fsub
pop
jl
in
jge
adc
sar
sbb
jnp
data16
bound
lahf
outs
pop
addr16
retf
lds
cmps
sub
pop
ins
xor
sbb
popf
or
jae
jns
retf
push
push
add
cmp
adc
sub
js
xchg
sub
mov
fistp
inc
cmps
xchg
dec
pushf
ror
nop
push
sar
fiadd
scas
(bad)
in
jbe
inc
jns
enter
inc
sub
push
in
rcl
inc
(bad)
retf
mov
outs
sbb
add
sbb
dec
or
mov
clc
lods
xor
sub
sbb
out
int3
sub
fisubr
sub
jnp
repz
xor
fstp
fisubr
das
jns
inc
loop
sub
dec
(bad)
dec
(bad)
sub
lock
addr16
rcr
mov
test
scas
mov
aad
mov
and
xor
sbb
cwde
out
pop
arpl
mov
mov
ins
and
loopne
mov
lods
(bad)
pop
repnz
(bad)
lds
ss
retf
idiv
add
inc
adc
fidivr
pop
leave
sub
call
bound
push
mov
and
xlat
mov
push
pop
push
cmp
rep
and
loopne
sub
push
add
jg
pop
dec
ins
push
pop
ja
pop
test
imul
dec
in
ja
jle
mov
xor
or
mov
outs
es
push
inc
inc
gs
lea
jae
dec
out
adc
cli
in
push
xor
xchg
imul
mov
or
or
push
aaa
add
ds
xchg
push
pop
call
fisub
adc
sub
mov
dec
mov
pop
loope
mov
xchg
and
jb
inc
sbb
pusha
(bad)
js
rol
std
mov
nop
sbb
shr
les
mov
les
shl
sub
xor
pop
enter
fdiv
repz
mov
neg
jl
fs
sub
pop
mov
(bad)
(bad)
push
adc
lea
stos
sbb
jno
pop
das
lods
imul
add
add
scas
dec
mov
mov
jno
lahf
pop
les
xor
and
jle
mov
pop
(bad)
pop
sub
pushf
test
jne
and
lahf
sub
add
xchg
test
sbb
mov
fild
push
hlt
stc
mov
les
cmp
jns
arpl
pop
xchg
call
mov
adc
cmc
cld
imul
test
and
fsubp
in
sbb
in
pop
mov
ins
jnp
sub
(bad)
pop
jmp
movs
out
sbb
xchg
sbb
adc
mov
int
xor
and
fistp
jp
inc
pop
in
push
mov
stos
div
cmp
inc
comiss
sub
mov
retf
sbb
pop
pop
jmp
mov
scas
ins
sahf
stc
inc
gs
mov
pop
(bad)
adc
inc
call
cmp
daa
push
lods
lods
jg
and
div
fsubr
jne
fbstp
dec
xchg
inc
push
sar
loope
popf
pushf
fstp
mov
loopne
jno
loope
xor
push
pop
pop
(bad)
jp
mov
mov
push
mov
push
xor
mov
data16
pusha
pusha
movs
cwde
jns
loope
into
daa
sub
push
mov
or
inc
iret
int
addr16
movs
cmp
inc
cli
inc
jp
adc
lods
sti
lock
pop
dec
jle
jle
ret
(bad)
test
mov
cmp
mov
div
mov
nop
fst
pop
(bad)
fist
mov
cs
cmp
adc
inc
fnsave
sbb
jle
dec
sbb
xchg
cmp
movs
out
arpl
and
mov
push
test
or
jle
test
cmp
scas
and
jbe
pop
cmp
int
out
nop
or
mov
aaa
add
adc
enter
cmp
dec
cld
(bad)
in
in
pop
(bad)
jmp
ins
retf
mov
imul
scas
cmp
idiv
push
cmp
xor
sti
mov
movups
cwde
popa
clc
jmp
pop
sysenter
nop
and
mov
dec
cmp
in
adc
pop
ja
push
pop
dec
jo
lea
pusha
sub
stos
aam
lea
jno
into
imul
aad
pop
sbb
call
add
lods
jb
es
enter
pop
scas
clc
and
aas
cwde
cmps
cld
mov
in
loop
pop
mov
sub
mov
xchg
xor
mov
ret
stos
jle
jmp
retf
and
and
inc
pop
mov
aaa
retf
or
xor
sub
push
leave
outs
xchg
fldenv
dec
inc
jns
pop
in
or
xchg
and
call
mov
or
icebp
fild
jbe
stc
rcr
dec
dec
cmp
sbb
sub
mov
add
mov
stos
or
fmul
xchg
fisubr
add
cdq
mov
cmp
pop
xchg
dec
test
push
xlat
out
cs
(bad)
jno
sub
or
sbb
jl
leave
aad
js
jne
addr16
dec
cmps
sub
imul
xchg
imul
stos
dec
add
(bad)
jp
retf
sub
xchg
ret
pop
lods
xor
out
mov
xchg
dec
ins
dec
sbb
cmp
sub
sbb
fistp
mov
ss
adc
adc
xchg
dec
add
dec
mov
xor
sbb
cmp
or
sub
pop
sub
retf
out
mov
lods
cmp
cmc
sub
and
je
aad
loop
cmp
or
push
out
test
out
inc
jnp
sbb
ins
jmp
ja
ss
dec
call
ror
mov
test
sbb
pop
inc
iret
push
call
xchg
mov
and
jge
cmps
jmp
stos
leave
pusha
loop
loopne
lahf
clc
ds
push
dec
jge
mov
cmps
ror
adc
aas
sub
pop
cmps
ins
sbb
pop
push
cvttps2pi
popa
dec
js
mov
(bad)
in
es
mov
fstp
int3
xor
mov
xor
xchg
mov
mov
mov
and
retf
inc
add
fadd
call
stos
jl
mov
pop
int3
imul
ret
ja
arpl
clc
or
(bad)
outs
jo
sbb
inc
mov
hlt
rol
jl
jmp
clc
out
xchg
xlat
or
dec
lods
leave
or
mov
icebp
mov
imul
(bad)
leave
inc
dec
push
sub
or
or
bound
stos
adc
out
nop
das
dec
xor
push
lock
jnp
(bad)
stc
daa
ss
hlt
popa
cwde
pop
imul
ins
mov
pop
add
div
int3
dec
mov
dec
mov
add
dec
xchg
jae
retf
push
and
not
stos
(bad)
push
repz
and
xor
sub
pushf
sbb
mov
(bad)
jno
jno
add
ins
test
pop
sbb
mov
movs
ret
movs
test
mov
adc
jge
icebp
jnp
daa
gs
dec
sti
jae
pop
out
inc
inc
loopne
in
ss
jae
cmp
fld
sub
mov
or
xchg
cmp
and
sub
mov
test
dec
aas
imul
push
add
jmp
and
xchg
call
dec
in
test
in
aad
add
jl
inc
xchg
mov
outs
sub
rol
outs
enter
dec
movs
jge
cli
sub
int
(bad)
push
arpl
ret
repnz
add
lock
adc
in
cwde
mov
out
jg
mov
in
aad
mov
inc
mov
icebp
xchg
xchg
fcmovnu
pop
es
ins
in
adc
ud1
jp
and
sti
out
cmps
ja
dec
jo
and
test
mov
adc
shl
sar
xchg
shl
cs
inc
inc
xor
icebp
es
js
mov
mov
mov
sbb
rol
sub
(bad)
mov
fisubr
stos
mov
or
dec
cmps
pop
push
in
mov
jge
aad
xchg
xor
pop
into
xor
adc
mov
adc
push
add
jae
scas
push
mov
add
mov
rcl
adc
add
and
repnz
(bad)
retf
add
sbb
pop
loopne
test
jns
dec
pop
xchg
mov
arpl
sub
push
mov
mov
ffree
inc
std
enter
retf
pop
or
ja
fdivr
int3
jge
and
adc
mov
out
mov
pop
jae
xlat
scas
jmp
mov
or
outs
sbb
scas
xchg
in
ret
pop
add
dec
xor
mov
repnz
lds
pop
mov
cwde
adc
(bad)
div
and
cmp
lods
fcom
jno
outs
cli
enter
ret
pop
jae
lahf
cmp
xchg
repnz
jno
mov
popf
cmps
ret
(bad)
mov
mov
cdq
xchg
gs
fmul
dec
in
call
gs
mov
jg
retf
adc
jecxz
pop
add
mov
push
push
pop
call
pop
es
ret
mov
jecxz
idiv
add
mov
movs
lds
add
and
les
je
xchg
cmp
cmp
lds
sti
in
xchg
jmp
push
inc
or
push
pop
loope
xchg
cmp
add
jae
idiv
outs
add
mov
lds
ret
mov
xor
mov
xchg
out
int3
xor
add
or
sar
sub
sbb
enter
adc
mov
sub
stc
(bad)
push
popa
clc
and
retf
les
(bad)
push
jbe
retf
mov
je
arpl
sub
cmp
outs
xor
xor
stos
iret
outs
sti
cmp
repz
fmul
cmps
mov
in
jle
and
jmp
push
dec
arpl
inc
adc
push
push
leave
jle
fwait
jb
xchg
int
aad
dec
shl
pop
hlt
out
lahf
adc
ficomp
jno
cmp
ficom
test
jno
push
enter
and
test
sbb
pop
push
xchg
pop
cwde
jae
xor
retf
sub
mov
aas
push
inc
cli
hlt
add
inc
jae
pushf
retf
inc
loope
or
sub
out
mov
dec
pop
out
xor
mov
jge
jo
sub
fnstcw
aam
pop
jns
xchg
pop
lods
mov
or
cmp
dec
push
cdq
and
test
mov
mov
sub
and
sahf
and
push
and
lods
pusha
mov
(bad)
and
mov
adc
jl
xchg
mov
push
jle
adc
shr
pop
dec
adc
dec
pop
jmp
inc
pop
or
sbb
xchg
mov
push
out
retf
imul
adc
les
sub
gs
ficomp
add
dec
add
cmp
int3
retf
daa
mov
jl
in
jge
scas
mov
mov
out
and
nop
mov
adc
xlat
hlt
dec
(bad)
push
xchg
or
inc
retf
js
std
pop
sti
push
push
sbb
jns
cs
movs
cli
inc
adc
adc
in
pusha
sub
or
sub
inc
mov
retf
sbb
push
xlat
fld
jl
leave
lods
jns
pop
mov
lea
jecxz
mov
push
ficomp
ds
adc
jmp
xor
icebp
dec
pop
call
xchg
dec
push
je
lods
retf
cmc
or
adc
in
push
lock
popf
cld
push
dec
sbb
arpl
lock
aaa
out
add
fisubr
sub
(bad)
mov
inc
pushf
dec
pop
mov
sahf
mov
xchg
ins
dec
push
popf
xchg
add
xor
or
add
cmps
xchg
in
mov
jns
adc
push
ret
out
or
or
mov
cmp
movs
cwde
adc
cmps
xchg
(bad)
std
push
lar
rcl
or
mov
push
pop
xlat
mov
inc
repnz
push
dec
inc
sub
pmuludq
pop
(bad)
jmp
push
cs
add
idiv
pop
enter
adc
cmp
push
mov
int
xchg
push
ins
or
jno
and
shr
cli
mul
dec
ret
cwde
ret
or
xchg
ds
ret
arpl
outs
es
dec
fisub
push
inc
adc
inc
cld
setne
adc
jnp
sar
mov
mov
inc
jmp
add
jge
rol
ret
pop
leave
data16
outs
push
aas
mov
pop
or
sbb
fs
in
sub
cmp
je
lods
pop
jmp
jg
inc
jno
jns
mov
(bad)
(bad)
xor
dec
cmp
add
push
inc
sbb
inc
inc
jb
xchg
cmp
cmc
cli
sub
mov
and
mov
cmp
mov
lds
jmp
push
cdq
jnp
push
std
adc
pop
push
pop
ficomp
aas
sbb
aad
mov
out
jmp
and
dec
cwde
sub
xchg
adc
xor
ins
push
loope
mov
sbb
jl
or
dec
add
les
repz
pop
outs
cs
adc
xchg
pop
mov
inc
inc
movs
dec
gs
je
inc
fcomp
jle
dec
mov
adc
addr16
dec
inc
cmp
ret
pop
in
retf
retf
jo
clc
sbb
aaa
scas
push
sti
lea
inc
dec
add
jne
xchg
das
popf
cli
ror
je
in
loopne
mov
fwait
inc
and
or
das
cmp
mul
mov
or
mov
or
mov
jp
popf
inc
push
inc
jno
test
mov
xchg
or
int
xor
inc
scas
cmps
sti
adc
les
in
push
ins
in
pop
xchg
out
xor
push
scas
arpl
cmp
xchg
lahf
call
pop
sbb
inc
sbb
call
jmp
or
mov
movs
into
mov
mov
outs
jne
aam
test
pop
cmc
test
xchg
mov
(bad)
ja
dec
(bad)
push
retf
dec
lahf
push
mov
mov
pop
mov
dec
push
dec
cmp
ret
add
dec
cmps
xor
xor
xor
jecxz
scas
dec
push
cli
push
jns
ret
sbb
xor
push
sub
mov
rcl
stc
or
or
jp
xchg
sub
arpl
jmp
xabort
pop
jl
cld
add
jns
pop
mov
inc
scas
inc
lock
repnz
jnp
cli
adc
rcr
xor
or
inc
aad
mov
cmp
fsubr
mov
sub
lock
aad
push
sub
jmp
or
add
jmp
or
ds
lods
cmp
les
(bad)
sbb
sbb
or
jmp
dec
adc
aaa
or
hlt
cmp
mov
cmc
pop
push
cmps
adc
into
arpl
out
xchg
jae
push
test
mov
popf
inc
fisub
out
enter
pop
jp
mov
add
(bad)
dec
mov
push
xchg
test
test
fsub
push
les
out
bound
mov
enter
mov
cmp
fbld
or
(bad)
addr16
aaa
cmp
sbb
pop
pop
mov
leave
(bad)
in
es
xchg
popf
add
jmp
adc
and
repz
pop
mov
xchg
mov
adc
mov
jbe
pushf
mov
in
imul
cld
jge
int
or
imul
in
std
mov
mov
scas
ins
mov
jbe
adc
jno
mov
shl
retf
xchg
test
ficomp
daa
imul
imul
mov
(bad)
mov
or
hlt
repz
sbb
and
(bad)
mov
xor
sub
jmp
in
mov
cli
pop
pop
mov
pop
or
mov
sbb
adc
push
xchg
xchg
xor
cdq
not
imul
fistp
iret
imul
sub
mov
xchg
xchg
or
jle
push
fcom
out
or
jecxz
mov
mov
xchg
int3
and
add
jmp
cmp
iret
(bad)
imul
sbb
jnp
add
sahf
xlat
sbb
xlat
xchg
mov
retf
cmps
(bad)
ss
fmul
inc
fisub
call
stos
xchg
std
mov
cdq
xchg
scas
sbb
dec
pusha
cmp
push
lahf
loope
or
xchg
loopne
xchg
mov
ror
outs
xor
xchg
pop
add
test
pop
sub
cmc
cmps
das
js
js
popa
popf
mov
cmp
fcom
mov
test
add
sbb
es
call
dec
or
daa
push
lahf
jbe
(bad)
(bad)
inc
out
ins
aaa
mov
mov
pop
mov
into
cld
test
(bad)
sbb
rol
cmps
mov
cmp
out
cmp
push
push
out
cmp
add
cmp
or
jmp
xor
jbe
mov
bnd
ror
jle
mov
pop
adc
enter
jmp
xchg
sub
sbb
jg
push
sbb
push
jle
icebp
add
fst
imul
aad
jnp
mov
in
int3
dec
popa
pop
xchg
or
or
je
mov
mov
mov
shl
inc
jb
daa
push
(bad)
push
rol
pop
js
fwait
add
les
cmps
(bad)
mov
pop
fistp
push
stos
inc
jmp
imul
rcl
cli
rcl
sahf
sahf
mov
or
sub
xor
fs
lock
jo
fsubrp
(bad)
out
mov
or
inc
mov
jns
jne
and
fs
in
jae
sub
clc
mov
cmp
ss
dec
sbb
aad
rol
mov
add
push
cdq
xchg
(bad)
sbb
int3
loope
jno
aad
out
xchg
test
addr16
sahf
adc
mov
cld
repnz
popf
and
jmp
mov
cmp
arpl
pop
aad
std
loope
hlt
mov
jge
dec
daa
shl
aad
imul
mov
add
xchg
mov
and
test
inc
dec
adc
mov
xor
or
and
int
mov
jle
pop
cmp
jo
fs
xor
call
mov
and
lea
or
cmps
jl
mov
pop
fsubr
add
inc
mov
mov
(bad)
push
into
sbb
or
aaa
adc
or
adc
loop
cld
int
mov
fist
jne
jmp
add
ins
sub
inc
test
push
bound
sub
adc
and
dec
jbe
outs
fadd
cli
fiadd
sub
add
icebp
jecxz
test
jl
pop
imul
ss
add
jmp
pusha
and
pop
mov
cmc
mov
or
jno
or
mov
cmps
pop
xchg
xchg
mov
push
shr
retf
int
mov
call
pop
pop
and
loopne
inc
push
push
or
jge
outs
or
inc
rol
iret
fadd
js
and
fwait
pop
and
cmp
lods
xchg
ja
call
pop
xor
xor
jne
arpl
lock
cmp
ror
push
mov
ror
imul
push
dec
add
fnstenv
inc
sbb
add
(bad)
dec
nop
popf
retf
pop
xchg
jge
sub
sub
jbe
push
les
or
inc
jb
mov
out
pop
ficomp
xchg
scas
loop
fcmovnbe
inc
xchg
mov
xchg
or
or
arpl
and
fimul
inc
ror
pop
jno
cs
enter
mov
mov
push
cmp
pop
and
jmp
mov
mov
pop
push
enter
rol
pop
aam
popf
(bad)
dec
or
rol
int3
push
and
jle
and
cmp
das
outs
fisttp
push
mov
arpl
xor
inc
sahf
retf
dec
xchg
and
xor
add
dec
pop
loopne
cmp
xchg
stc
push
mov
sbb
loopne
movs
imul
sbb
cmps
push
cdq
dec
push
mov
mov
aas
push
xor
xor
pop
lods
adc
dec
mov
inc
repz
dec
fnstsw
fild
fstp
in
dec
mov
sub
in
fisubr
cmps
imul
mov
and
nop
rol
mov
jecxz
inc
add
out
push
cwde
std
lods
sti
cmp
dec
push
adc
sahf
mov
pop
pushf
imul
add
mov
mov
outs
imul
rcr
jne
sbb
mov
jle
jbe
repnz
cmps
in
mov
push
sub
mov
dec
mov
js
in
aam
(bad)
push
pusha
(bad)
cmp
pusha
movs
adc
jecxz
loop
test
pop
jnp
ins
push
dec
fcom
adc
jne
fimul
inc
and
xchg
jb
out
add
or
pop
in
jae
push
mov
repnz
lahf
movs
push
sub
mov
inc
mov
popa
jns
rcr
es
push
xor
test
mov
inc
enter
(bad)
lds
popf
inc
and
sbb
fcmovbe
jl
xor
imul
dec
inc
pusha
sub
aam
mov
push
xor
push
out
aad
pop
pop
mov
jo
xchg
add
sbb
data16
adc
fist
arpl
movs
(bad)
(bad)
aas
(bad)
inc
pop
mov
jmp
fwait
push
test
(bad)
aaa
pop
xor
or
(bad)
imul
pop
mov
cmp
jns
dec
jne
in
push
cdq
dec
sbb
push
push
sbb
dec
xchg
fistp
lea
mov
jmp
mov
ja
daa
aas
or
loopne
stos
or
pop
push
in
sbb
xchg
adc
add
add
push
mov
sub
jo
movs
test
sbb
adc
test
jae
(bad)
or
mov
add
movs
sti
outs
mov
and
shr
jge
in
sub
dec
ja
jbe
fsub
jae
ins
pop
div
shl
push
iret
cdq
adc
jo
jb
les
dec
test
xor
jno
outs
mov
pop
mov
mov
test
cwde
setbe
hlt
xchg
push
aas
hlt
stos
std
sbb
imul
pop
mov
outs
push
mov
mov
pop
pop
test
or
jns
nop
cmp
xor
lods
xor
push
cmp
(bad)
push
outs
or
jae
imul
mov
mov
add
sbb
rol
push
mov
jne
cmps
jne
(bad)
idiv
jns
sbb
pop
mov
add
jge
xchg
cwde
mov
dec
push
xchg
ins
stos
cmp
sbb
lods
mov
dec
cld
mov
and
inc
pop
pusha
xor
or
and
bnd
cmp
scas
jae
pop
test
ss
jbe
mov
imul
leave
or
lods
rol
push
xchg
cmp
adc
loope
pushf
jp
sbb
push
arpl
jle
sub
fldcw
rol
stos
clc
jo
lds
push
clc
mov
push
jno
mov
inc
sbb
jle
mov
add
test
mov
shl
xor
fisttp
out
sbb
and
add
in
test
pop
int
xor
push
xchg
xchg
or
aaa
pop
push
push
mov
fadd
test
clc
push
ror
adc
clc
movs
cmp
scas
inc
or
adc
aam
lods
inc
inc
jecxz
in
dec
xchg
cwde
repnz
jmp
sahf
fstp
es
mov
enter
pop
test
push
sub
lahf
gs
jmp
xor
mov
(bad)
clc
add
movs
imul
ins
sub
pop
clc
add
fwait
and
and
xor
rol
jns
pmaxub
jmp
xchg
pop
push
ins
push
jae
jno
mov
fwait
ret
pop
jb
cmp
push
pop
fdivr
and
les
adc
pushf
(bad)
inc
push
jg
fcom
mov
cld
test
adc
movs
jns
lods
stos
repnz
loope
sub
(bad)
pop
ds
and
mov
jns
shl
int
les
jno
adc
(bad)
mov
sub
fdivr
arpl
mov
in
aas
mov
stos
mov
and
jmp
fdivp
sti
repz
push
test
inc
mov
inc
out
cmp
inc
dec
sub
and
sbb
mov
and
add
je
in
out
sti
fld
inc
mov
fcom
push
arpl
jmp
cmps
or
cdq
mov
repnz
leave
imul
jecxz
adc
push
int
or
jno
arpl
imul
push
lods
xchg
jge
dec
pop
popa
cmp
xor
mov
dec
movs
shl
sbb
xlat
cmps
jbe
test
dec
ins
mov
ror
imul
retf
xchg
adc
repz
adc
dec
das
shr
sbb
test
stos
xor
add
jp
outs
cmp
out
lods
jne
aaa
rcr
push
pop
xchg
mov
jecxz
call
loope
test
cmp
lea
sahf
test
fisttp
adc
pop
bound
push
push
mov
mov
jne
out
sbb
inc
xchg
lods
cwde
ja
pushf
push
add
jl
fsubr
out
jl
(bad)
in
dec
mov
mov
repnz
(bad)
outs
pushf
inc
sub
setbe
retf
pop
mov
fwait
retf
jmp
(bad)
cmp
imul
and
aaa
ds
jno
data16
xchg
mov
sbb
imul
rcr
mov
fmulp
xor
and
sub
push
loop
jl
dec
repnz
mov
inc
mov
sub
pop
lahf
adc
sub
stos
and
sahf
rcr
hlt
and
mov
(bad)
xor
out
push
adc
in
sbb
(bad)
shr
cmp
or
jns
xchg
jo
and
cwde
mov
(bad)
out
cmp
sub
cmc
mov
or
fsubr
push
leave
and
cmp
add
jle
dec
cmp
mov
and
jne
enter
jne
and
cmp
pop
sbb
cmc
mov
add
popf
add
xchg
inc
or
add
adc
mov
jg
adc
jbe
nop
and
jge
ret
mov
fmulp
push
jbe
sub
mov
scas
lahf
pop
in
mov
or
retf
sub
cmc
sti
aaa
rol
sbb
aam
sub
das
xor
mov
cmp
lods
mov
and
sti
add
jnp
sbb
pop
dec
dec
push
cli
retf
(bad)
dec
adc
and
stos
in
push
sub
iret
sbb
sbb
test
or
adc
pop
and
aas
push
jmp
pop
mov
mov
sub
shr
jns
ficom
imul
lds
pop
mov
dec
mov
mov
out
ds
loopne
aam
mov
sub
cdq
adc
lods
mov
frstor
or
or
inc
cs
push
mov
or
mov
push
int3
xchg
adc
adc
add
sbb
xlat
repnz
repnz
imul
js
scas
lahf
aas
jnp
pop
push
sbb
cmps
xor
(bad)
popf
push
ror
in
pusha
push
ficomp
iret
push
stc
mov
mov
inc
cli
ror
jmp
rcl
outs
xor
push
test
mov
ficom
cwde
xchg
shl
jge
pop
or
cmc
dec
pop
xor
and
cmp
mov
jb
pop
pop
add
ss
jg
dec
dec
dec
ds
push
jne
out
xor
fs
retf
xor
rol
sub
(bad)
popa
iret
push
pop
(bad)
sahf
or
xor
test
xchg
ret
movs
in
push
ds
movs
xor
popf
je
mov
xor
dec
sub
scas
mov
nop
mov
enter
ins
int
or
lahf
jbe
stos
mov
sbb
sbb
inc
dec
xor
lahf
cs
mov
add
jle
pop
lds
dec
inc
xchg
(bad)
mov
or
jns
lds
enter
cli
out
jns
or
cmps
dec
push
xlat
cli
push
dec
jg
dec
adc
pop
stc
inc
mov
pop
jmp
push
hlt
xchg
pop
inc
sub
fisub
push
jle
sahf
add
daa
test
into
fcom
out
xchg
in
sbb
sahf
xor
addr16
sahf
call
mov
out
iret
out
sti
aam
jg
repz
push
leave
es
retf
xor
les
jns
lods
test
dec
mov
xchg
stc
movs
addr16
cmps
push
mov
cmp
sti
cmp
pop
daa
mov
pop
fdivp
in
loope
outs
adc
xor
pushf
cwde
sbb
adc
mov
or
inc
sbb
int3
sub
daa
jecxz
arpl
mov
pop
inc
and
fmul
repnz
sbb
out
or
fidivr
sub
sub
inc
popf
add
aas
test
push
jns
cmps
out
xor
and
call
scas
mov
adc
stos
inc
call
scas
inc
cld
cmp
fs
push
jmp
shl
and
mov
mov
pop
lock
enter
pop
ss
outs
jge
mov
push
jmp
and
and
shl
es
les
popa
arpl
adc
dec
ins
dec
pop
mov
mov
push
iret
add
out
xchg
ficom
retf
adc
test
outs
dec
jo
jecxz
shl
in
or
div
inc
cmps
adc
arpl
push
push
mov
jle
push
(bad)
std
mov
jbe
repz
mov
pop
cmc
in
not
cld
mov
mov
push
sub
cli
jno
sbb
fidiv
cwde
add
mov
or
jmp
call
xchg
mov
fwait
or
dec
fimul
gs
add
sbb
clc
loop
shl
in
movs
(bad)
popf
data16
mov
mov
or
jecxz
loope
dec
je
pop
fistp
or
pop
jno
jo
test
fld
mov
sahf
out
add
mov
and
rcr
addr16
sub
lds
sub
xchg
mov
inc
pushf
push
jmp
fsubr
daa
jne
xchg
shl
js
jae
adc
stos
push
xchg
hlt
mov
pop
xchg
sub
icebp
mov
das
fsubr
out
jle
sbb
pop
test
or
test
dec
mov
arpl
popa
push
mov
shl
stc
mov
fadd
jae
test
sbb
cld
mov
sbb
les
ja
xor
out
dec
adc
data16
aaa
test
mov
xchg
push
dec
mul
aaa
cmp
imul
lock
sub
into
xlat
dec
jle
xchg
(bad)
pop
mov
cmps
sub
push
cld
cmp
sub
jmp
aam
sti
or
div
mov
jnp
psraw
sti
xchg
mov
xchg
and
xor
(bad)
adc
pop
fld
xor
int
loope
push
arpl
mov
sub
cld
sbb
push
and
mov
xor
mov
cmc
rol
xor
jb
repz
call
cwde
mov
(bad)
mov
inc
stos
and
test
and
mov
push
xchg
jo
ret
mov
std
xor
sub
xchg
lods
mov
xor
adc
sub
pushf
retf
mov
jmp
sub
sub
cmps
push
pop
sbb
xchg
sub
lods
es
or
enter
js
adc
test
jle
mov
pushf
push
daa
inc
jno
imul
mov
in
jmp
call
inc
jne
int
xchg
frstor
xor
inc
adc
inc
ret
cmp
lea
sar
and
mov
xchg
cmp
mov
add
pop
test
cmp
stos
cmp
jb
fstp
scas
sar
jp
cli
xchg
sbb
scas
popf
mov
mov
std
clc
adc
cmp
mov
mov
cwde
stc
rcl
fs
mov
mov
pop
nop
mov
push
jge
push
or
pop
and
in
sub
jle
jle
scas
jnp
out
mov
jp
push
lds
xor
cs
adc
mov
mov
sbb
sbb
es
mov
add
lods
jns
out
mov
loope
dec
sbb
adc
push
or
adc
jb
fld
adc
cmp
ds
cmp
or
and
jnp
xor
and
std
test
and
pop
les
imul
jg
jl
mov
test
out
jl
xor
ret
mov
mov
xor
mov
idiv
jo
ret
xchg
cmp
mov
lods
jnp
cmc
sar
div
fild
repnz
(bad)
mov
xchg
mov
and
adc
or
(bad)
out
mov
into
sets
outs
fdiv
xchg
dec
xchg
xor
fsub
das
loopne
mov
jl
push
or
xchg
(bad)
fwait
rol
call
or
fdivr
jl
loop
fs
and
data16
ror
lods
xchg
out
rcr
add
test
repz
or
mov
call
mov
aaa
test
push
in
mov
cmp
cmp
mov
add
(bad)
in
pop
dec
xor
push
shl
mov
popa
push
loope
jp
xchg
rol
sub
out
sbb
mov
test
push
and
lahf
push
jno
mov
xor
pop
cwde
test
mov
fs
pop
repnz
nop
pop
loopne
lock
mov
outs
mov
mov
repz
(bad)
stos
pop
pop
fsub
lds
das
sub
clc
fwait
int
dec
pop
dec
repz
aad
and
push
mul
fdiv
cmc
fs
or
pop
(bad)
adc
std
sbb
fsub
jns
mov
push
sbb
and
mov
cwde
in
lods
retf
int
push
retf
rcr
cdq
fwait
int
mov
add
arpl
dec
std
ret
push
ins
or
adc
das
jmp
test
es
lock
(bad)
aaa
(bad)
ins
pop
pop
cmps
cdq
lds
repz
add
mov
or
retf
push
les
inc
sahf
in
ret
push
cmp
bound
inc
jb
mov
out
pop
mov
lea
cmp
ja
dec
or
or
mov
sbb
int
xchg
push
jmp
adc
test
sub
sbb
int3
loop
sub
dec
pushf
(bad)
icebp
in
xchg
in
mov
push
stc
mov
fdivr
lds
xchg
or
jle
inc
cmp
je
jmp
cmp
out
cld
sbb
cli
mov
xchg
aam
xor
ja
cli
add
add
sub
push
inc
dec
sub
out
pop
push
fwait
dec
jo
mov
dec
xor
cmp
jno
(bad)
shl
cld
sti
scas
jp
pop
out
xor
fmul
push
arpl
push
lds
outs
and
mov
dec
pusha
enter
out
ss
gs
jnp
(bad)
in
aad
lods
jo
sahf
and
jb
lahf
xor
push
mov
in
jg
jb
xor
and
ja
stos
rol
sub
xchg
aad
or
xchg
add
xor
loopne
dec
mov
cli
xchg
push
in
adc
and
mov
in
movs
test
push
loope
lods
js
data16
shr
retf
test
ret
retf
dec
jns
cmc
mov
or
mov
sub
inc
pop
inc
xor
icebp
test
mov
mov
inc
jnp
jg
pop
cli
dec
cmp
out
fnsave
mov
xor
test
out
dec
adc
daa
das
out
xor
lahf
dec
jbe
js
call
in
mov
sub
mov
push
popf
int3
pop
mov
in
int
pop
adc
sbb
and
mov
aaa
aam
cmp
pop
mov
mov
jns
fst
sub
inc
and
or
std
mov
loope
outs
mov
dec
push
movs
lods
xor
test
adc
in
es
pop
daa
scas
jl
in
xor
cmp
fstp
pusha
inc
retf
xor
das
test
adc
movs
mov
jl
rcr
pop
xchg
fsubr
and
push
cld
jle
mov
jmp
push
cwde
ret
push
movs
jmp
xchg
pushf
aad
cmp
fisub
add
or
adc
cmc
movs
fld
dec
cmp
sbb
out
adc
out
stc
test
(bad)
mov
arpl
(bad)
test
add
xchg
add
pop
adc
cmps
call
imul
sub
mov
xor
jnp
mov
xchg
jbe
jbe
stc
add
jl
pop
fcomp
xchg
test
push
pop
inc
adc
stos
mov
(bad)
idiv
jl
shl
adc
inc
xor
sbb
sub
jg
ret
jno
mov
icebp
lea
imul
sub
jne
(bad)
dec
loope
jmp
mov
sbb
call
in
push
xor
xchg
arpl
leave
dec
jmp
ins
inc
adc
push
pop
ss
fist
cmps
in
inc
and
jl
fs
mov
pop
loop
rcr
sub
push
jnp
xchg
aad
cmps
popf
jae
fidivr
or
jmp
rcl
cmps
pop
sbb
xchg
dec
xchg
xchg
push
add
sbb
inc
and
outs
and
jns
add
jno
ds
cmp
jae
pop
adc
arpl
dec
inc
inc
jge
popf
cmp
push
aad
mov
icebp
(bad)
pushf
test
icebp
mov
ds
push
lods
jne
aam
cmp
jo
pop
pop
jmp
sbb
xor
adc
sahf
mov
mov
xchg
adc
mov
push
mov
loope
cdq
add
or
movs
jo
lods
mov
lahf
lock
pop
add
movs
clc
sbb
mov
sbb
mov
mov
neg
jmp
imul
in
adc
stos
seta
leave
pop
sub
pop
scas
xchg
xchg
push
pop
fld
xor
jmp
call
inc
pop
addr16
ror
inc
add
retf
xor
retf
out
jp
neg
cwde
loop
call
pop
add
aaa
arpl
push
add
inc
fistp
jne
lea
push
jle
popf
cmp
mov
pusha
(bad)
hlt
gs
cmp
aad
sbb
mov
idiv
sbb
cmc
popf
scas
mov
and
pop
xlat
adc
sahf
ror
mov
test
sbb
outs
jmp
fstp
mov
inc
add
push
mov
imul
add
sbb
fs
push
jge
mov
adc
arpl
jl
gs
daa
mov
out
outs
xor
in
pop
dec
or
and
jno
mov
push
sti
jns
gs
push
pop
fisttp
xchg
les
adc
and
call
movs
aad
enter
cld
mov
repz
xchg
adc
ss
mov
cmc
neg
jl
xlat
push
lahf
mov
retf
ret
dec
and
je
xor
ficomp
jae
mov
ret
out
or
or
dec
sub
sub
push
dec
ror
jnp
and
lods
(bad)
fimul
stos
mov
outs
cmps
adc
and
mov
inc
cmp
jo
in
pop
push
mov
aas
cmp
and
jb
adc
xchg
pop
sbb
in
call
mov
(bad)
rcr
cmp
mov
popa
sbb
sub
and
jg
add
dec
jb
pop
adc
in
fwait
outs
add
jmp
call
xlat
test
adc
pop
push
dec
int3
push
fnstenv
push
test
add
lds
mov
pop
mov
mov
mov
xchg
jb
push
jne
mov
mov
jno
mov
pop
pop
out
xchg
and
pop
inc
sub
cmp
out
addr16
inc
fidiv
xor
jae
sub
ja
dec
imul
aaa
cmp
loopne
sub
loopne
mov
push
dec
sbb
cmp
dec
adc
call
out
lahf
mov
mov
and
jmp
and
pop
test
jmp
retf
clc
add
mov
cmp
mov
xchg
out
sub
stos
cmp
mov
ja
retf
push
das
fld
jl
fstp
xor
idiv
cwde
xchg
xlat
movs
inc
stos
fbld
adc
dec
es
icebp
loope
and
je
in
retf
imul
mov
cmp
dec
and
mov
mov
in
adc
out
int3
push
or
aad
repz
mov
mov
enter
cmp
lgs
xacquire
leave
dec
adc
cmp
call
ret
pop
cmps
frstor
cdq
xchg
pop
test
fwait
dec
test
sbb
fstp
inc
hlt
jle
ins
retf
cmp
pop
aas
stos
mov
add
or
popa
popf
xchg
in
push
sbb
pop
and
push
aam
test
mov
fcom
inc
mov
dec
inc
jbe
push
std
xor
clc
jl
xor
arpl
inc
ret
inc
jnp
ret
cld
sub
fiadd
pop
movs
jne
pop
scas
mov
dec
aas
daa
scas
xlat
out
cmp
push
push
into
mov
pop
mov
test
pop
and
ror
fisub
xchg
jnp
add
(bad)
xchg
in
enter
ret
jmp
clc
cmp
retf
js
(bad)
(bad)
sub
xor
fisub
add
inc
push
jecxz
mov
stos
mov
jnp
or
ins
repz
sbb
add
mov
es
ss
pop
add
adc
cmp
cmp
enter
xchg
adc
xchg
rol
stc
fdiv
lods
cs
and
aad
inc
add
jnp
bound
and
out
ds
(bad)
lds
xor
cmp
bound
xchg
cmp
mov
or
sbb
adc
mov
jo
mov
add
ins
or
(bad)
cmp
vpcmpgtb
sub
push
lahf
int
push
push
retf
xor
ins
cld
push
imul
stos
iret
sbb
loopne
jne
mov
(bad)
and
mov
fs
xchg
dec
jg
fimul
out
addr16
(bad)
stc
aas
cli
adc
aad
dec
add
sub
cli
ds
pop
(bad)
and
jmp
iret
ds
mov
xor
or
push
in
mov
mov
xchg
mov
add
fdivr
pop
lahf
ds
call
jo
or
mov
mov
ficomp
std
mov
push
je
dec
sbb
out
mov
out
adc
sub
loop
retf
pop
stc
or
push
mov
fcomi
and
push
movs
nop
adc
es
add
and
xor
cli
xchg
xchg
pushf
popa
popa
in
aas
fucomip
movs
cmp
mov
push
cmp
stc
pop
lock
arpl
retf
sub
enter
lea
sub
push
out
adc
pop
imul
(bad)
je
int
mov
sbb
xlat
mov
or
and
pop
or
and
iret
mov
aam
push
inc
cli
scas
(bad)
fcmovnb
adc
and
and
in
leave
aad
push
jp
fsub
mov
(bad)
repnz
sub
sbb
sub
test
loopne
mov
dec
jno
sbb
mov
aam
add
jns
test
out
jne
jno
retf
sub
je
pop
cmps
aad
loopne
push
hlt
fwait
into
int
add
call
jne
cmp
cmps
adc
fs
int3
jge
aas
lods
jp
js
dec
adc
std
div
pop
iret
popa
aam
std
sti
mov
cmps
outs
adc
sub
sub
js
jno
int3
in
nop
sbb
inc
fadd
xchg
dec
pop
cmc
mov
fldenv
adc
push
retf
jo
fwait
aam
push
out
jne
adc
nop
inc
push
mov
scas
hlt
or
add
adc
xor
hlt
inc
push
loopne
inc
xor
out
add
sub
mov
dec
sub
cmp
cmp
dec
and
fld
jns
inc
dec
(bad)
cmp
pop
stos
cmps
jo
adc
cmp
adc
push
cld
scas
adc
das
dec
ds
inc
scas
mov
or
cmps
push
lahf
movs
ret
push
movs
inc
loope
ins
jge
scas
pop
test
xlat
stos
push
dec
iret
cmps
out
bound
pop
push
inc
cmps
repnz
sbb
div
jb
and
jle
pop
push
and
pop
xor
dec
dec
sbb
sbb
call
cwde
xor
sbb
pop
push
mov
aad
cld
sub
(bad)
movs
and
mov
das
jns
mov
aam
xor
(bad)
fimul
add
dec
adc
jmp
test
(bad)
int3
mov
scas
repz
inc
das
(bad)
push
or
sub
pop
add
jp
in
mov
rcl
and
mov
jle
xor
pop
fs
(bad)
push
cmps
fwait
(bad)
jmp
lock
xchg
pop
push
pop
dec
or
hlt
sbb
dec
mov
int3
dec
inc
imul
call
arpl
test
clc
fcmovu
ds
xchg
dec
sbb
rcr
div
add
mov
push
mov
inc
push
call
mov
test
pop
xor
push
mov
fwait
ins
push
sbb
sbb
hlt
in
stc
movs
mov
bound
push
cmp
mov
nop
aas
leave
sti
inc
adc
popa
ret
mov
fcom
mov
or
sub
shl
push
fwait
movs
push
mov
scas
icebp
es
cmp
adc
dec
and
(bad)
mov
sti
rol
in
test
sar
dec
push
ror
das
outs
sbb
lods
cmp
xor
jg
scas
retf
mov
sbb
lods
sub
arpl
inc
xchg
sub
cmp
jmp
xor
mov
pusha
mul
mov
adc
mov
xor
mov
jp
mov
inc
inc
retf
mov
(bad)
in
cmp
ss
es
mov
and
test
jne
movs
mov
push
and
into
or
outs
push
xor
mov
imul
and
arpl
iret
inc
(bad)
es
cdq
xor
push
sti
push
addr16
and
(bad)
loop
out
call
or
cwde
imul
cmps
jb
pop
loop
xchg
mov
cmps
xchg
cdq
mov
sti
mov
push
sbb
stos
cmp
gs
aam
movs
push
iret
ins
mov
test
test
and
dec
xor
test
mov
sbb
pop
loop
mov
mov
adc
es
sahf
(bad)
dec
std
sub
sub
push
pop
add
dec
push
iret
inc
pop
and
test
loope
outs
or
inc
data16
inc
mov
in
test
bound
and
cmps
int3
cwde
test
pop
mov
mov
jp
ins
and
popf
and
jb
(bad)
icebp
fiadd
push
mov
jmp
push
addr16
fnsave
(bad)
stos
cmp
test
jmp
jo
cmp
pop
push
inc
sahf
retf
jbe
fisttp
out
fmul
xor
mov
shl
push
imul
mov
dec
cmp
(bad)
int3
popf
add
or
jecxz
gs
pop
in
out
push
cmp
and
bound
lea
push
aaa
fidivr
fucomp
test
ret
imul
enter
jbe
xor
cmp
and
arpl
sbb
sub
sbb
mov
cmp
and
jge
bound
fwait
jo
stos
xchg
mov
int3
test
lods
movs
fsub
imul
shl
inc
bound
cmp
ret
and
cmc
movs
xor
jo
mov
sbb
scas
imul
stc
jo
push
mov
mov
sub
jge
xchg
je
mov
push
ja
ds
xchg
fild
mov
iret
and
sbb
push
or
inc
pop
mov
push
jl
rcl
push
popa
xchg
fcomip
lods
test
icebp
and
sar
out
push
rol
arpl
(bad)
cmp
inc
jecxz
and
pop
stos
data16
out
pushf
or
or
popa
test
jp
icebp
rcl
das
xchg
sub
add
xor
rol
ds
fdiv
or
pop
dec
out
adc
out
iret
int
push
inc
retf
xchg
push
shl
sahf
and
xlat
in
cmp
or
xchg
rcl
and
cmps
lds
cdq
jno
scas
mov
ins
push
stos
mov
mov
jp
or
jno
xchg
cmp
jae
jl
inc
cmps
adc
aaa
inc
cmp
int
jnp
fadd
jecxz
std
push
inc
xor
int
xchg
popf
jae
or
ret
xchg
ins
ins
lock
nop
inc
cmps
mov
ja
add
js
loope
cwde
popf
push
push
js
jl
xchg
push
pop
test
mov
adc
push
or
dec
or
ins
das
clc
jb
lods
ja
mov
jle
in
arpl
or
cmp
and
add
mov
scas
push
cwde
into
outs
mov
cmps
in
(bad)
fadd
icebp
add
mov
adc
in
cld
fidivr
out
sahf
bound
fsubr
adc
retf
push
int3
sub
jmp
mov
cmp
ror
sbb
neg
sbb
and
stos
cmp
pop
dec
stos
pop
dec
pop
shl
retf
movs
mov
dec
cmps
bound
dec
xchg
stos
scas
das
mov
xchg
pop
sbb
int
(bad)
shl
jmp
shl
adc
test
add
add
adc
xchg
dec
jg
sbb
xchg
ret
mov
xor
sub
imul
mov
mov
inc
stos
in
push
add
and
inc
popa
outs
imul
cmp
mov
mov
stos
jbe
or
mov
hlt
pusha
xchg
adc
dec
sbb
jmp
cs
clc
int
stc
test
sbb
or
mov
rcr
xchg
mov
mov
cmps
test
mov
ss
daa
sub
push
add
sbb
int
sub
xchg
daa
jl
pushf
push
cwde
cmp
addr16
xchg
shl
cs
mov
stos
cmps
retf
adc
or
out
loopne
xor
ins
scas
ret
cs
push
inc
pop
sbb
lock
or
mov
ror
call
jecxz
pop
ret
cmp
sbb
ins
out
iret
jo
sbb
ret
jnp
fadd
add
adc
or
mov
add
cwde
sbb
inc
and
test
and
sbb
mov
xchg
sbb
and
or
vmovntps
aas
dec
pop
nop
dec
lea
cs
push
js
in
jo
push
jp
cmp
and
repnz
pop
ins
test
inc
iret
inc
or
shr
add
(bad)
xor
mov
ret
xlat
push
and
retf
xor
mov
mov
fidiv
and
sub
pop
aas
and
fidiv
inc
call
mov
mov
cmp
loope
(bad)
out
lea
lds
stos
call
dec
pusha
enter
or
imul
and
cmc
jae
mov
into
cmp
and
scas
hlt
cmp
ins
aas
mov
lea
arpl
pop
or
and
add
stos
adc
sbb
push
and
cwde
xchg
jp
and
or
rcr
cmp
icebp
or
and
cmp
sbb
js
mov
stos
pop
jmp
out
sbb
lods
pop
mov
(bad)
mov
(bad)
jecxz
or
add
inc
retf
dec
jae
mov
jb
movs
scas
pop
mov
push
xchg
pushf
xor
scas
dec
hlt
into
push
push
cmp
sub
stos
mov
sub
fsub
cmp
out
lea
sbb
xchg
xor
in
jbe
lds
pusha
sahf
dec
jnp
mov
mov
jmp
and
add
jmp
out
pusha
addr16
test
sub
add
test
lock
test
push
push
dec
nop
call
mov
adc
arpl
jbe
retf
les
(bad)
adc
mov
or
pop
imul
sbb
jno
imul
sbb
mov
jge
scas
push
jmp
or
mov
pop
ja
lea
or
sbb
sti
dec
aaa
adc
bnd
sti
fwait
pushf
int3
aam
xchg
iret
cmp
jae
ss
shl
out
mov
jne
sbb
pop
inc
cmp
cld
jge
retf
outs
popa
pop
mov
push
loope
stos
mov
stos
outs
jp
scas
aam
inc
xor
int
packsswb
cmovo
repz
cmp
arpl
fnstsw
test
inc
jnp
mov
adc
in
les
lods
dec
adc
add
cli
out
pop
sbb
mov
stos
mov
push
rol
stc
dec
adc
es
dec
test
out
dec
data16
iret
retf
icebp
cmovo
push
mov
jg
outs
mov
ret
inc
sbb
popa
cmp
pop
imul
xchg
mov
loopne
hlt
xchg
into
pop
int
cmp
push
jge
push
jecxz
dec
(bad)
sbb
retf
dec
jo
pop
ds
lds
fist
push
mov
ins
rcr
pop
xlat
sub
mov
rcr
cdq
add
loop
loopne
and
fst
xor
push
ja
sbb
xchg
adc
loope
or
out
jns
and
and
sbb
jo
(bad)
movs
xchg
inc
sub
jns
not
imul
je
add
lds
adc
xor
shr
ror
sbb
push
pop
jg
div
push
adc
or
movs
add
mov
and
outs
cmp
(bad)
xchg
pushf
xchg
daa
dec
or
mov
lock
dec
pop
mov
push
add
dec
fsubr
ret
stc
pop
iret
pop
dec
das
mov
jb
mov
sbb
loop
rcr
fs
and
scas
loopne
inc
dec
pop
(bad)
or
cmc
pop
(bad)
out
sub
mov
adc
ret
jmp
test
push
out
inc
xchg
sbb
mov
int
inc
sbb
mov
jp
cmc
mov
in
jbe
and
xor
ret
loopne
or
add
das
out
sbb
fcmovb
jno
shl
popa
popa
popf
in
and
movs
jg
es
mov
imul
stos
adc
in
add
scas
or
pop
adc
fistp
cmp
lds
xor
xchg
cmp
sbb
mov
sti
pusha
inc
mov
fisttp
daa
dec
lea
in
pop
shl
cmp
lock
fild
loop
jecxz
push
or
inc
xchg
js
and
sahf
add
int
std
mov
mov
ficom
bound
fsubr
fsub
xchg
mov
and
push
jmp
xchg
mov
xor
jno
xchg
(bad)
fwait
add
cld
hlt
and
inc
(bad)
mov
mov
daa
pop
push
aaa
add
dec
hlt
pop
pop
cli
aad
outs
pcmpeqb
and
push
dec
pusha
cld
inc
sbb
inc
adc
enter
jle
(bad)
dec
inc
or
mov
fwait
out
sbb
mov
and
ds
sahf
ror
mov
mov
cld
stc
or
lods
std
and
sbb
dec
dec
mov
inc
mov
xor
cmp
pushf
in
ds
call
mov
or
mov
test
push
push
adc
mov
je
(bad)
fsubp
(bad)
rol
ins
and
cmp
shr
pop
int
inc
not
mov
or
mov
mov
adc
mov
scas
shr
retf
aaa
adc
cmp
pop
imul
xchg
movs
xchg
int
test
mov
mov
jnp
lea
call
mov
lock
mov
mov
sub
jmp
mov
mov
lods
mov
test
pop
outs
out
jl
scas
movs
scas
imul
adc
and
movs
mov
das
imul
icebp
pop
fidiv
inc
icebp
test
add
iret
adc
repz
les
scas
call
jg
mov
xchg
mov
push
jne
add
xor
push
cmp
enter
push
xchg
scas
loop
cmps
push
add
mov
fstp
and
test
movs
les
(bad)
cmp
sbb
inc
test
push
push
scas
les
pop
ss
(bad)
(bad)
mov
test
sub
and
test
(bad)
and
jmp
sbb
lds
movs
sbb
jle
test
fnstsw
or
jne
push
add
push
pop
lods
push
pop
inc
xchg
leave
nop
ds
callw
jae
mov
adc
inc
inc
inc
adc
add
xor
data16
inc
push
cmp
push
retf
jae
xor
and
int
out
push
fmul
and
add
inc
jl
cmp
jo
mov
mov
popa
shld
cdq
xor
adc
ror
repz
pop
ja
repz
in
mov
pusha
mov
dec
ficom
mov
ins
inc
sub
faddp
adc
stos
push
fsubr
inc
mov
mov
popf
pop
jnp
adc
test
mov
xchg
sub
xchg
arpl
cmp
out
gs
imul
ss
inc
push
cmpxchg
push
fisttp
sbb
jge
test
adc
outs
pop
mov
adc
repnz
call
mov
jo
dec
sbb
sbb
sahf
cmp
jmp
daa
popa
xchg
mov
mov
movlps
ss
xchg
or
inc
and
fdivr
daa
dec
xchg
cmp
dec
nop
ror
(bad)
ficom
in
or
add
fwait
sti
mov
mov
js
outs
std
(bad)
mov
outs
retf
(bad)
(bad)
ror
xor
push
cmc
mov
mov
cmp
out
jnp
int3
sub
retf
push
sub
ss
pop
aas
sub
cmp
or
adc
loope
dec
call
rol
lea
sub
into
and
push
pop
icebp
fwait
pushf
lods
xchg
ds
mov
shl
jmp
adc
scas
cmp
loopne
and
cmp
call
daa
sbb
mov
scas
or
mov
mov
xlat
sbb
mov
and
shr
(bad)
sub
xchg
scas
add
(bad)
(bad)
nop
lods
addr16
inc
mov
stc
pop
enter
dec
lods
imul
mov
pop
sbb
cmp
sbb
cmps
mov
pop
add
jge
push
pop
mov
ds
jae
jno
jmp
push
into
das
test
dec
pop
push
mov
into
aaa
enter
mov
outs
push
pop
sbb
test
addr16
jp
pushf
cdq
push
inc
push
jbe
push
fdiv
mov
mov
push
(bad)
fstp
add
std
gs
mov
mov
xor
inc
arpl
mov
xlat
fdiv
xchg
adc
dec
mov
pop
or
jl
pop
pusha
scas
jecxz
cmps
ins
sbb
sub
ins
test
sbb
in
adc
push
popa
push
das
in
movs
mov
push
fcomip
das
icebp
data16
retf
add
or
add
lock
pop
push
cmps
inc
fs
add
rcr
arpl
add
xor
jmp
dec
lock
xchg
(bad)
loop
adc
lock
sub
int3
mov
jae
aam
jp
les
push
add
jnp
jb
inc
add
dec
fwait
out
movs
test
mov
dec
or
loopne
jge
sbb
fsubr
aas
dec
in
or
jg
dec
add
and
sbb
adc
test
jno
(bad)
(bad)
lahf
jg
push
sbb
test
cdq
gs
stc
movnti
mov
daa
add
push
lods
punpckldq
push
addr16
repnz
outs
cmp
sbb
dec
and
jg
call
mov
xor
addr16
hlt
fwait
push
xor
jmp
mov
popf
mov
xor
(bad)
fimul
mov
mov
xchg
sbb
adc
in
adc
mov
(bad)
nop
mov
pop
sbb
(bad)
bound
pop
callw
shr
inc
jecxz
lods
jns
fsubr
fiadd
push
pop
push
lods
out
jp
cdq
mov
test
(bad)
mov
fadd
int3
jl
adc
fdiv
sub
loopne
daa
fwait
cld
std
adc
sub
ins
fdivr
pop
adc
fwait
pop
icebp
jo
aad
dec
rcl
cmps
ss
mov
lds
int
add
cmps
xor
aas
jecxz
sbb
mov
add
and
call
pop
jge
and
xor
fs
pop
fwait
dec
xchg
cld
mov
sbb
dec
mov
adc
mov
push
fcomp
cmp
jbe
(bad)
mov
inc
icebp
sahf
call
and
aam
pop
push
lahf
sbb
pop
jno
fisubr
aas
xchg
push
jae
cli
sub
pop
stc
cmps
in
dec
bound
adc
lds
fisttp
in
pop
cmps
or
stc
out
and
mov
mov
sbb
cmps
cmps
or
and
sbb
cmc
add
addr16
movs
cmp
sbb
rcr
hlt
out
or
cmp
fdivr
(bad)
adc
scas
pop
dec
in
push
inc
cmp
xchg
shl
pop
mov
push
(bad)
cmp
inc
pushf
fld
cmps
sub
lods
ins
je
cli
(bad)
pop
xchg
mov
lahf
or
mov
sahf
xchg
mov
dec
push
loopne
jge
dec
push
shl
(bad)
adc
jecxz
inc
adc
xor
mov
pop
pop
jmp
je
aam
dec
aaa
jbe
sgdtd
mov
(bad)
(bad)
sbb
or
cmc
outs
(bad)
pop
push
xchg
or
pop
daa
cmp
mov
(bad)
out
les
pusha
mov
repz
or
push
xchg
mov
cli
add
sub
or
popf
mov
aam
ficom
leave
loop
aaa
enter
ret
fist
loope
dec
jl
out
or
pop
push
out
adc
into
out
in
lods
fcmove
out
or
inc
jl
push
ds
fstp
push
add
int
std
daa
sbb
jne
sub
mov
inc
mov
push
mov
pop
jbe
mov
jmp
call
test
mov
jb
mov
xchg
daa
test
daa
data16
xchg
cs
test
mov
sub
shl
cmp
jbe
fst
hlt
call
inc
cdq
push
repnz
stos
add
scas
push
stos
or
jns
adc
dec
fidiv
sub
cmps
out
adc
pop
and
cmp
cmp
cmp
hlt
xchg
xchg
xchg
inc
pop
loop
mov
pop
mov
loopne
mov
into
in
add
call
ret
sub
jmp
push
jb
ret
leave
mov
or
sbb
pop
mov
lock
dec
aas
inc
inc
cmp
pop
or
out
xor
fcom
fmul
dec
repz
push
mov
cli
sub
fdiv
or
mov
add
fcomp
adc
pop
dec
sub
add
fistp
in
pushf
mov
dec
jne
xor
iret
(bad)
shl
cmp
sub
nop
xor
jmp
add
or
(bad)
and
ins
aas
sti
jge
mov
mov
inc
and
fnsave
sti
lods
or
jbe
js
mov
mov
(bad)
jmp
test
jbe
dec
loope
sar
hlt
push
and
pop
fidiv
ins
sar
push
loop
(bad)
cli
xchg
cmps
cli
adc
inc
scas
adc
cmp
int
test
dec
mov
add
ins
pop
scas
jmp
jno
leave
mov
dec
imul
add
sbb
add
push
clc
scas
jo
bound
sub
ja
mov
sbb
rcr
out
and
cmps
sbb
imul
push
adc
mov
aaa
fld
push
out
int3
dec
and
lock
(bad)
cmp
mov
aam
xor
punpckhdq
add
adc
(bad)
jge
mov
das
jns
int3
jecxz
je
push
arpl
les
movs
mov
inc
dec
into
cmp
or
mov
jl
ret
addr16
add
cmc
xchg
jne
add
(bad)
cmp
xchg
ins
cmp
stos
xchg
xchg
push
fisubr
retf
(bad)
sar
pop
mov
add
cmp
pop
movs
jnp
scas
jp
stos
inc
mov
or
sbb
push
aam
enter
xchg
mov
iret
lods
and
cli
in
(bad)
mov
addr16
in
std
inc
jo
sbb
pop
ret
js
push
pop
repnz
lods
fstp
test
or
cmp
xor
pop
dec
sub
ds
ror
loopne
clc
leave
jecxz
cmp
sub
mov
or
jno
mov
mov
jb
mov
adc
fs
nop
push
push
add
adc
sar
scas
push
cmp
ret
sbb
inc
repz
add
adc
ss
xor
loop
mov
pop
jmp
adc
out
adc
pop
or
ins
dec
bnd
mov
cmp
mov
sbb
frstor
iret
(bad)
dec
cmp
outs
xchg
cli
jge
sahf
ds
pop
adc
and
popf
sbb
ror
aam
mov
xor
cmc
add
shl
or
(bad)
rcl
mov
pop
and
mov
xor
inc
js
int
mov
xchg
push
std
cs
xchg
sbb
leave
mov
(bad)
aam
test
(bad)
daa
adc
ret
aas
neg
add
lea
popf
lea
jmp
ret
add
pop
xor
mov
dec
nop
jg
xchg
and
das
mov
cmps
sbb
dec
outs
int3
sbb
cmp
test
xor
sub
adc
arpl
hlt
icebp
add
in
sar
sar
fnstenv
cmc
lea
inc
sub
cmp
or
jb
cmc
pop
arpl
lea
add
jecxz
xor
int3
sub
xchg
leave
sar
push
(bad)
mov
test
scas
cmp
hlt
int3
scas
jmp
ror
xchg
add
cmps
cwde
jle
je
in
or
or
movs
mov
pop
pop
loop
jae
jle
pop
sbb
and
jns
leave
ja
inc
fcomp
and
fild
sub
rcl
cmp
mov
xchg
sbb
outs
mov
sbb
jg
movs
xchg
add
(bad)
push
or
sar
xchg
xor
jns
(bad)
test
mov
cmps
clc
xchg
mov
mov
jns
fs
inc
fidivr
aam
push
inc
test
movs
dec
pop
adc
xlat
imul
cld
(bad)
gs
test
jmp
mov
popf
imul
daa
es
adc
adc
rol
fnsave
jmp
mov
adc
ret
cli
sub
ror
test
fcmovnu
inc
lods
data16
xchg
inc
cmp
mov
div
enter
cmps
iret
jae
js
aad
cmps
pusha
lahf
push
adc
xchg
add
jo
jmp
sub
xchg
imul
fsubr
fimul
nop
mov
bound
dec
(bad)
or
mov
hlt
mov
cmpxchg
jno
jg
add
fisttp
pop
(bad)
out
in
inc
outs
aad
adc
pop
add
push
loop
xor
dec
lock
mov
adc
pop
and
(bad)
retf
mov
cmc
(bad)
rcr
sbb
add
int
repz
imul
jmp
mov
cmp
sbb
cmc
retf
cmp
jne
pop
loope
mov
mov
ror
fst
jmp
dec
imul
mov
jecxz
fsub
imul
(bad)
mov
es
movs
cmp
mov
je
push
add
ins
bound
jl
push
arpl
mov
dec
test
xlat
xchg
jmp
push
in
shl
inc
add
cmp
dec
xchg
cmp
mov
inc
mov
lock
aas
add
inc
call
jl
adc
stos
dec
in
push
fs
pushf
aad
cmc
aam
movs
xchg
sub
mov
dec
(bad)
lock
adc
mov
inc
mov
outs
ficom
and
xchg
(bad)
in
cmp
push
inc
rol
mov
push
bsr
jl
pushf
cdq
jne
lahf
mov
or
out
sub
inc
and
push
loop
popa
cld
sub
sub
jp
pop
lds
cmps
stos
jp
js
ja
das
pop
push
xchg
sbb
adc
sti
push
rol
jo
cs
xchg
cmps
cmp
push
loope
adc
cdq
retf
inc
scas
jo
jno
cmp
mov
jmp
pop
adc
fist
mov
jmp
jge
ins
jo
xor
int
aas
push
xchg
pop
ret
sbb
mov
or
fist
mov
cmps
cmps
retf
mov
pop
mov
fmul
jmp
mov
mov
and
fstp
call
pop
aam
cld
ficom
js
popf
mov
dec
and
(bad)
pop
adc
xchg
jg
sub
rcl
sub
mov
loope
xchg
leave
xchg
add
xor
out
ror
not
add
sbb
sbb
mov
mov
mov
ret
dec
inc
dec
ds
rol
inc
adc
leave
jmp
mov
sub
xchg
sbb
pop
(bad)
loope
(bad)
lds
mov
dec
popa
pop
lods
pusha
inc
mov
cwde
int3
fwait
cdq
mov
sub
inc
sub
adc
ds
jl
in
pusha
test
xor
leave
pop
fsubp
popa
jno
push
icebp
mov
push
xchg
push
push
ja
std
gs
xor
mov
out
xchg
and
and
sahf
push
sbb
push
adc
or
cmp
xchg
push
jno
adc
and
push
cmps
push
cmp
push
shr
scas
adc
pop
mov
xchg
mov
leave
je
out
test
sar
pop
cmc
pop
xor
fs
xchg
xor
jmp
xor
xchg
add
xor
repz
pop
mov
or
adc
in
pusha
jno
dec
test
ret
xchg
(bad)
sar
pop
scas
rol
or
adc
jmp
sub
lods
addr16
pop
adc
adc
add
inc
xchg
test
rol
cmp
vphsubdq
sbb
in
lahf
mov
ret
ffree
fisubr
sub
inc
test
imul
xchg
jmp
out
bound
popa
ins
lods
push
cmps
sub
push
cwde
mov
repnz
sub
fisttp
cmps
loope
sbb
mov
scas
(bad)
(bad)
dec
push
repz
jnp
and
pop
lds
outs
mov
stc
or
shl
(bad)
xchg
movs
sub
cmp
mov
mov
push
inc
dec
(bad)
adc
loop
pop
pop
nop
loopne
add
shl
fsubrp
lods
loop
mov
adc
int
ins
sbb
hlt
cmp
mov
test
push
pusha
arpl
mov
xchg
in
mov
outs
push
mov
jnp
fcomp
(bad)
cmps
call
(bad)
xchg
jno
cli
or
jnp
adc
add
fidivr
stos
dec
inc
adc
push
xchg
or
mov
cmp
sbb
ins
pop
outs
adc
loop
icebp
dec
dec
dec
fscale
lods
jae
pop
(bad)
xchg
jns
cmp
retf
lds
cmps
and
cmp
jecxz
mov
cmp
fistp
pop
mov
outs
fld
dec
push
cmp
movs
ins
pop
push
pop
sub
scas
in
xchg
cmpxchg
add
movs
mov
dec
sub
push
lods
cmps
mov
stos
dec
mov
inc
scas
jno
sbb
mov
sahf
(bad)
aas
test
cli
aam
stos
dec
inc
xor
std
sti
inc
int
push
dec
and
jp
sub
out
adc
mov
and
daa
sahf
push
jg
clc
inc
mov
xchg
ja
sub
and
ret
scas
sub
aad
shl
sbb
in
nop
cmp
inc
or
inc
sar
and
nop
mov
sbb
outs
cdq
les
jbe
clc
sahf
push
jecxz
sub
pusha
pusha
out
es
or
popa
push
add
or
lea
(bad)
jns
mov
pushf
push
test
push
mov
push
retf
adc
stos
and
pop
sbb
pop
mov
pop
push
dec
mov
sti
ja
aad
(bad)
mov
dec
fsubr
or
xchg
stos
push
xchg
push
rcl
jbe
and
sub
pop
scas
jae
fimul
pop
mov
mov
mov
mov
and
sub
inc
mov
ds
mov
inc
ds
movs
fcomp
outs
push
je
push
inc
out
dec
mov
aad
jp
push
lods
mov
das
push
cld
data16
jmp
add
mov
mov
mov
mov
sub
cmp
xchg
sub
mov
out
pop
scas
fwait
xchg
ds
cmp
and
xlat
mov
mov
scas
pop
int3
push
fdiv
retf
and
repnz
push
jmp
mov
and
and
lods
test
mov
in
xchg
push
inc
xchg
xor
jne
aam
dec
movs
stos
push
sti
es
mov
push
and
shl
mov
adc
clc
retf
clc
sub
mov
xchg
push
mov
test
xlat
add
call
daa
data16
and
mov
mov
mov
and
xchg
add
xor
loope
ins
mov
jae
jl
out
ss
cmp
pop
mov
xchg
mov
(bad)
bound
movs
pop
retf
scas
adc
nop
or
push
mov
call
mov
inc
ins
or
sub
aad
jo
inc
cmps
push
sub
push
mov
cmc
fwait
push
imul
daa
aam
push
xchg
ss
xor
nop
(bad)
lahf
push
pop
mov
jmp
and
mov
mov
loop
sbb
ds
std
and
add
rol
mov
fwait
sub
arpl
or
dec
inc
cli
xor
(bad)
and
sub
leave
inc
sbb
sbb
adc
pop
cmp
jns
mov
pop
mov
or
test
out
xor
cmc
jl
cwde
sbb
jl
or
shr
mov
xchg
pop
iret
sbb
in
sbb
test
(bad)
(bad)
std
pop
xchg
mov
dec
pop
pop
pop
xlat
push
sub
outs
cmp
xchg
mov
jnp
sar
std
(bad)
ja
xor
es
dec
lea
mov
jb
and
fstp
stc
clc
mov
sbb
sbb
lahf
fdiv
mov
cmps
push
add
pushf
jno
arpl
and
mov
lods
cdq
test
push
mov
outs
lods
(bad)
mov
aas
fdivr
sbb
(bad)
fdiv
mov
xchg
out
push
pop
(bad)
sbb
push
dec
xor
aaa
push
or
call
in
mov
sub
mov
inc
mov
imul
push
mov
je
jmp
mov
push
nop
jae
icebp
in
mov
cmc
sbb
sub
dec
call
mov
mov
dec
cmps
mov
adc
out
xchg
dec
jo
stc
imul
es
mov
(bad)
mov
cwde
sbb
fisubr
in
shl
cld
clc
mov
mov
push
inc
fstp
jb
stc
icebp
mov
sbb
or
ret
sar
pop
push
adc
leave
shl
push
sti
adc
mul
test
pushf
cmps
test
nop
xor
dec
aam
cmp
inc
adc
xor
(bad)
jae
and
add
xlat
test
ins
inc
enter
dec
ja
inc
jmp
ja
in
test
pushf
jmp
std
xchg
xor
rol
in
ret
push
jo
nop
add
push
mov
fidivr
xlat
xor
or
pop
xlat
or
mov
fisubr
jp
shl
sub
inc
inc
sbb
pop
push
mov
inc
adc
outs
push
cmc
sbb
sub
jl
mov
lods
dec
ret
pushf
inc
xchg
fisttp
xor
repnz
mov
je
add
jle
mov
inc
xor
test
and
pop
mov
call
jg
lea
dec
jns
shld
mov
xor
push
mov
xchg
clc
test
mov
sub
jnp
imul
cdq
and
sti
adc
jne
push
out
mov
sbb
inc
push
cmp
imul
adc
add
fwait
inc
pop
cwde
push
dec
xchg
and
fwait
sahf
push
dec
jge
xor
mov
push
scas
hlt
mov
mov
pop
out
xchg
inc
sub
adc
push
pop
jg
(bad)
mov
dec
out
cmp
mov
pusha
loope
pop
retf
or
dec
outs
sbb
outs
dec
xor
jle
jmp
sbb
and
push
xchg
(bad)
arpl
jge
repz
aas
adc
test
inc
sbb
mov
(bad)
out
fstp
push
aam
cmp
mov
xor
(bad)
test
jns
push
dec
cmps
in
aaa
mov
stos
icebp
aaa
ret
and
fsubp
push
pusha
fnsave
or
fiadd
fisttp
add
ds
ss
push
jle
mov
sbb
leave
(bad)
retf
cmp
fucom
push
add
lock
jge
mov
mov
xchg
lock
pop
rol
cmp
gs
in
jnp
or
out
sbb
xchg
mov
pop
and
mov
xchg
fstp
ror
inc
sbb
sbb
pop
jbe
call
iret
pusha
jb
jmp
jecxz
les
aas
push
icebp
push
daa
cmp
push
mov
xor
in
sub
lock
retf
jmp
xor
dec
je
lods
cmp
cld
into
sbb
mov
jns
fnstenv
fldenv
xchg
or
push
xchg
jge
adc
add
mov
and
sahf
and
cmp
jae
inc
int3
push
jl
inc
inc
daa
inc
sub
mov
adc
and
mov
outs
jmp
add
scas
outs
jns
or
push
xchg
dec
jbe
lods
outs
test
loop
not
fdiv
or
lods
ret
or
mov
sub
jecxz
inc
adc
repnz
cmp
cmps
and
cwde
push
call
mov
inc
sub
mov
bound
mov
or
jp
popa
test
jl
sbb
scas
enter
mov
xchg
rol
loopne
sub
js
push
adc
test
retf
mov
adc
retf
adc
push
out
xor
inc
out
xchg
cmps
dec
xchg
stos
jl
xor
jge
call
leave
loope
in
stc
xor
fsub
sub
in
mov
cli
inc
ins
hlt
add
xchg
ret
mov
sbb
push
mov
icebp
sahf
cmp
xor
mov
jmp
xor
push
cld
mov
rol
push
ins
int
pusha
and
sahf
(bad)
push
in
cmp
fild
movs
sbb
mov
das
fld
mov
in
xor
jecxz
push
push
(bad)
sbb
push
jno
and
int
pop
clc
shr
retf
adc
fstp
dec
push
loope
jmp
sbb
(bad)
mov
test
sub
popa
sbb
cmp
lods
and
ds
and
xor
iret
out
retf
je
sar
and
jns
bound
add
pop
or
mov
lahf
or
xor
aaa
cdq
std
les
and
pusha
jb
mov
repnz
sbb
sbb
sbb
push
jnp
inc
ins
push
loope
rcl
lahf
loope
and
jo
cmp
xor
cmp
das
jle
nop
cmc
inc
aam
mov
mov
retf
and
sbb
test
jo
mov
push
or
push
inc
add
add
cli
mov
test
or
mov
xchg
jecxz
cli
bound
or
or
jne
push
int
push
test
js
sbb
imul
sbb
mov
test
movs
in
leave
ss
or
test
(bad)
call
xchg
cmp
push
jbe
or
xor
fistp
jns
cli
sahf
(bad)
xchg
les
arpl
test
mov
jl
scas
adc
xchg
inc
mov
aad
push
xchg
in
push
jne
cmc
or
mov
into
cmp
xor
int
movs
inc
ds
jo
dec
add
mov
cmc
fs
stos
and
ss
pop
lea
push
xchg
xchg
cld
stc
dec
loop
out
pop
cmc
jge
xlat
popa
add
and
or
ins
ja
sar
les
in
cmp
add
sahf
loope
mov
jmp
cmps
lods
dec
out
xor
addr16
push
int3
scas
les
adc
sbb
out
xchg
sbb
push
jge
test
fs
xlat
fmul
cmp
mov
mov
push
fisubr
and
push
je
hlt
ss
mov
lock
and
pop
out
and
cmp
jae
sbb
inc
push
call
leave
mov
movs
sub
xchg
xor
outs
xchg
pusha
imul
cmps
mov
bound
scas
pop
xchg
fstp
inc
or
inc
add
das
test
scas
ins
pop
sbb
lods
cmc
push
pop
std
fwait
(bad)
retf
mov
add
sbb
jmp
or
ficom
push
movs
test
push
mov
outs
pop
mov
jge
hlt
jecxz
push
and
sub
dec
addr16
pop
pop
cmps
mov
push
fcmovnbe
je
(bad)
adc
scas
xor
dec
addr16
xchg
inc
push
sahf
pop
mov
jecxz
push
push
(bad)
and
fs
inc
popf
js
rol
loope
sbb
xchg
out
pop
cmp
pushf
add
sub
push
jecxz
sahf
sbb
mov
jmp
dec
push
imul
movs
push
push
addr16
jl
dec
jg
pop
enter
sti
mov
xchg
jp
xchg
pop
pop
rcl
(bad)
inc
or
xchg
adc
xchg
add
inc
mov
xlat
stos
imul
push
shr
nop
lds
(bad)
push
xlat
jmp
mov
enter
inc
mov
call
jg
dec
ds
stc
pop
adc
test
ret
xlat
ins
dec
push
or
dec
imul
enter
sub
pop
scas
inc
inc
xchg
lea
push
dec
data16
push
mov
jmp
jmp
inc
mov
rcr
add
pop
jle
neg
cmps
mov
adc
pop
(bad)
and
and
aam
mov
mov
jb
adc
shl
xchg
int3
or
xchg
call
sti
jb
shl
popf
and
xor
mov
inc
pusha
dec
sbb
call
dec
xor
inc
scas
pop
mov
mov
or
lods
push
mov
jbe
div
popa
inc
cld
iret
push
mov
sub
add
mov
call
aad
addr16
dec
dec
ss
pop
mov
bound
xchg
add
jg
sub
jae
cli
addr16
mov
sbb
jbe
std
in
ret
call
or
loop
mov
push
ins
mov
xchg
xor
mov
jp
jp
pop
cwde
adc
dec
jmp
mov
call
xchg
shl
mov
cld
xchg
pop
(bad)
sub
inc
pop
jo
sub
sbb
sbb
cmp
mov
popf
fs
hlt
jnp
push
adc
add
lds
stc
inc
jbe
arpl
dec
test
leave
mov
sub
and
mov
shl
xchg
or
add
and
and
rcr
mov
not
cli
(bad)
jmp
push
xor
pop
aam
dec
jmp
inc
nop
into
rol
mov
push
in
xchg
idiv
sub
pop
pop
xor
jmp
cld
nop
movs
stc
jae
aam
push
iret
pop
jecxz
cmp
jge
push
fnsave
dec
fmul
push
adc
call
std
loope
in
repz
mov
cmp
and
mov
arpl
cmps
jae
loopne
add
(bad)
fimul
test
jae
pop
rol
adc
ror
or
mov
pop
push
jp
xchg
add
pop
in
mov
cmp
test
(bad)
xchg
mov
out
xchg
ficomp
lock
cmp
inc
(bad)
ficomp
cmp
stos
or
mov
out
rcr
iret
bsr
push
and
xor
das
inc
xchg
enter
push
add
mov
sub
shl
cmps
fmul
add
mov
test
dec
pusha
push
sahf
or
or
fist
xor
out
mov
les
shl
pop
adc
jmp
mov
sub
int3
mov
xor
and
mov
lds
sar
cld
jg
pop
sbb
xchg
push
dec
mov
lea
adc
push
daa
dec
sub
sbb
(bad)
fisubr
cli
dec
lea
or
inc
jne
ret
ret
rcr
ret
inc
mov
clc
popf
daa
pop
sub
mov
or
cwde
imul
int
and
sub
adc
fsub
push
mov
aas
iret
stos
jnp
into
das
js
push
push
popa
push
test
sub
sti
xchg
xor
cmps
xchg
jmp
or
xchg
mov
test
in
mov
test
jno
test
pop
cmp
mov
adc
xchg
and
push
push
ret
lds
out
cmps
adc
mov
aas
es
pop
push
outs
push
std
xor
add
std
mov
ins
fist
add
xor
cmp
xchg
call
imul
jne
mov
ficomp
retf
aad
pop
out
push
pop
aam
mov
pop
push
sbb
shl
scas
in
and
jge
mov
jnp
adc
adc
int3
aam
push
pop
popa
js
adc
out
cmp
int
into
push
fld
and
jns
pop
push
push
loope
sbb
sti
gs
js
mov
mov
adc
adc
inc
mov
add
pop
pop
and
xchg
rcl
adc
mov
(bad)
sbb
mov
ins
adc
adc
stos
inc
push
jmp
adc
sub
and
or
jno
pop
into
cmp
sbb
out
mov
loopne
das
or
loop
sub
cli
les
pop
dec
sub
ficomp
xor
stc
xchg
fcom
sahf
pop
iret
enter
mov
add
ficomp
hlt
ins
sbb
pop
jge
cwde
(bad)
hlt
rcl
jge
mov
mov
cmp
not
jae
sub
dec
fisttp
jae
movs
mov
add
retf
push
ss
aam
pop
je
cmp
ins
dec
lods
shl
mov
xchg
mov
pushf
xchg
sbb
cmp
ins
out
xor
jg
scas
mov
out
xchg
mov
add
loopne
and
fcomp
dec
arpl
ret
xchg
add
pop
cwde
mov
aad
ret
xlat
out
pusha
inc
not
in
sbb
jo
jecxz
add
cwde
push
(bad)
pusha
cmp
cmps
cmps
adc
ins
in
daa
outs
xchg
sahf
mov
fmul
mov
adc
int
pop
js
jmp
icebp
inc
or
ja
lock
(bad)
repz
and
pop
jnp
sar
or
es
mov
cmp
or
mov
mov
(bad)
loopne
call
inc
push
(bad)
jmp
push
jge
(bad)
xchg
test
fwait
push
mov
or
pop
in
bound
xchg
loope
jp
cld
jo
mov
adc
mov
dec
retf
mov
js
into
imul
push
outs
aas
mov
mov
test
xchg
popf
sbb
cs
leave
call
ss
xchg
pushf
mulps
jle
pop
cdq
cld
stos
jns
adc
or
pop
jno
cmp
out
jnp
mov
sbb
movs
or
mov
rcl
adc
sub
(bad)
cmp
test
nop
push
mov
std
inc
push
sbb
js
inc
dec
cmps
cli
gs
mov
daa
inc
rcl
mov
icebp
test
jns
jl
jnp
mov
das
aad
xchg
jp
sahf
cdq
inc
bound
scas
adc
push
xor
pop
mov
das
aaa
adc
lock
adc
sub
sbb
mov
popa
add
jo
push
jmp
push
push
cmp
push
jecxz
fisubr
hlt
pop
xchg
sub
rcl
xchg
add
and
or
or
add
sub
jno
xchg
fyl2x
cmp
pop
push
movs
and
ds
inc
add
iret
popf
mov
cmp
sbb
jb
and
lea
mov
dec
adc
sub
sbb
xchg
movs
xor
xor
dec
fimul
xor
xchg
ja
out
mov
out
daa
pop
jmp
into
retf
cmps
dec
cdq
test
cmp
xchg
aad
outs
call
ret
pop
in
or
add
out
cmp
xlat
inc
sbb
push
loopne
push
sub
inc
not
or
or
stc
out
movs
fiadd
xor
retf
sti
or
pop
(bad)
loop
data16
mov
adc
pop
add
fadd
daa
shl
(bad)
mov
out
mov
iret
xor
xchg
loope
add
xchg
int3
in
mov
cli
and
and
shl
pop
push
jmp
pop
cld
jns
popf
and
jns
jl
or
lahf
scas
jb
imul
adc
nop
call
lods
in
xor
bnd
jne
jo
jb
mov
jo
stos
shl
out
and
int
fs
test
cs
add
daa
mov
sti
pop
fcmovnbe
mov
(bad)
push
push
jns
hlt
mov
adc
mov
ds
push
jmp
lods
mov
xchg
mov
shr
cmp
jo
or
xor
mov
jbe
(bad)
xchg
jbe
in
das
mov
xchg
jae
das
div
pop
or
jmp
cmps
sub
pop
cld
movs
xchg
jge
mov
pop
fsubr
rol
test
pop
mov
imul
cmp
rcr
stos
push
call
fiadd
mov
dec
xchg
jno
bnd
cdq
stc
pop
aam
sti
lock
mov
pop
pop
ror
mov
jg
mov
iret
mov
call
lock
stos
pop
pop
(bad)
test
gs
iret
fild
xor
dec
and
push
xor
inc
cdq
dec
pushf
dec
mov
mov
(bad)
shl
cmps
dec
jmp
inc
lods
push
adc
sti
dec
sbb
and
mov
or
add
inc
mov
repnz
fwait
sub
ja
shl
pop
aam
mov
and
jnp
adc
sahf
test
xlat
call
mov
push
clc
add
xor
lock
shl
cld
inc
lahf
jb
cdq
or
push
dec
and
in
and
add
mov
inc
or
jp
in
jb
xchg
scas
mov
int
stc
dec
jbe
sub
pop
lds
mov
out
xor
out
arpl
out
cld
sbb
and
adc
sub
inc
push
mov
stos
sub
fxam
es
sahf
or
pusha
pop
inc
cmps
cmp
in
scas
iret
sahf
jo
shr
jge
inc
xor
je
imul
jl
fucompp
inc
dec
stc
lods
test
loop
rcr
aaa
cwde
pextrw
aaa
test
cmps
leave
ror
movs
add
xor
xchg
xchg
push
test
hlt
aad
mov
pop
xchg
xor
in
or
push
push
or
pop
mov
ins
mov
pop
add
call
sbb
pop
ds
jns
jae
adc
adc
xchg
pop
daa
push
inc
cmp
push
xor
and
fisub
stos
xchg
sbb
ficom
ret
mov
sbb
data16
add
inc
and
repnz
retf
inc
fidivr
(bad)
shr
jecxz
std
out
fist
push
adc
jns
mov
or
mov
jo
mov
mov
in
push
add
cmp
nop
inc
jle
(bad)
call
mov
stos
mov
sub
inc
add
lods
push
pusha
out
inc
and
jns
sbb
adc
fst
pop
jmp
icebp
lea
shl
mov
sbb
inc
inc
pop
dec
adc
sahf
pop
scas
pop
lahf
cmp
mov
pop
mov
nop
nop
cmp
dec
mov
aas
cmp
jle
leave
in
dec
inc
repnz
nop
sub
sbb
sbb
cpuid
call
mov
inc
push
fstp
adc
sbb
mov
and
popa
stc
ins
sub
adc
stos
loop
adc
int
pop
add
jl
imul
mov
pop
dec
pop
ds
mov
and
pop
loope
mov
das
xor
jmp
xor
iret
and
xchg
jno
mov
sub
push
xlat
aaa
xchg
sbb
enter
int
mov
lahf
inc
cmp
movs
mov
xor
cmps
or
out
rol
cmp
retf
fdivr
mov
mov
imul
cdq
call
push
mov
xchg
mov
sbb
mul
sbb
adc
xchg
and
cmp
sbb
xor
imul
pop
cmp
jb
mov
jno
jne
xor
sahf
pop
and
stos
cmps
push
adc
mov
mov
xor
dec
jno
enter
fscale
push
outs
dec
(bad)
mov
nop
ret
xchg
cmp
popa
ret
xor
sub
out
cmc
(bad)
sub
sub
inc
ret
out
mov
leave
mov
push
jno
pushf
sub
imul
push
xchg
enter
cmp
jne
mov
adc
dec
retf
sbb
or
inc
inc
cmp
cmps
leave
jns
(bad)
xor
pop
loope
pop
aaa
jo
push
(bad)
fnstenv
push
sbb
icebp
pop
jns
and
or
push
outs
mov
cmp
inc
aaa
lea
jp
test
or
dec
das
es
stos
pusha
mov
icebp
sbb
shl
xchg
xor
clc
cmp
and
and
or
cld
ror
(bad)
jmp
call
ins
retf
arpl
push
jmp
es
stc
aam
push
stos
lea
jae
jmp
cmp
rcr
rol
rol
mov
jge
mov
jg
stos
(bad)
mov
or
fldenv
popf
push
push
mov
div
arpl
rcl
mov
cmp
jg
div
cmps
cmc
push
and
and
and
es
std
shl
(bad)
pop
pop
ror
adc
sub
ret
cmps
in
(bad)
int3
cmp
mov
repz
stos
dec
ins
repz
jp
(bad)
inc
gs
shr
sbb
mov
sub
push
mov
outs
dec
xlat
or
pop
xchg
lods
cld
jecxz
push
cmp
cmc
push
stc
sbb
cmp
jns
jg
call
add
xlat
jg
sbb
in
pop
xor
(bad)
cmp
test
js
pushf
mov
sub
sbb
daa
sub
inc
out
outs
and
and
jg
stos
outs
dec
push
stos
xchg
aas
imul
shr
jns
daa
ins
cmc
arpl
in
test
test
jno
adc
cdq
retf
push
add
js
pusha
pop
or
sbb
xchg
jg
(bad)
in
iret
inc
pop
cmp
xchg
pop
es
inc
cmp
sahf
mov
mov
sbb
xor
sbb
test
xchg
jo
int
dec
pop
addr16
mov
xchg
sbb
sar
in
pop
out
les
jmp
mov
neg
jmp
sub
sbb
mov
xor
inc
push
cmp
jmp
movs
push
adc
or
or
push
imul
or
or
aam
mov
hlt
ret
mov
test
push
push
xor
bound
jmp
out
inc
aam
and
add
pop
out
popa
jae
mov
fisubr
add
jns
inc
mov
test
rol
push
mov
loopne
fwait
pop
inc
mov
fild
push
jnp
js
sub
add
(bad)
inc
rcl
hlt
fist
lods
cmp
mov
jo
in
loop
add
cmc
cmp
push
mov
add
jge
pop
mov
stos
(bad)
cmp
rcl
mov
pop
pop
adc
pop
or
push
jo
xor
enter
out
xor
test
pop
lds
sub
in
std
jl
cmp
dec
jmp
fcmovu
xor
jns
jb
mov
imul
addr16
jnp
push
jb
nop
mov
mov
push
push
xchg
xchg
bound
mov
jae
in
icebp
xor
and
fidiv
loopne
cwde
movs
inc
popw
sahf
ins
fldenv
(bad)
shl
sti
sbb
cmp
xchg
push
out
mov
dec
and
fistp
iret
pop
fwait
xchg
(bad)
cli
push
xor
test
inc
mov
sbb
or
mov
mov
xchg
jne
push
or
inc
dec
in
cwde
ret
mov
push
scas
out
cwde
xchg
mov
sub
outs
xlat
pop
mov
mov
ja
pop
loope
aam
and
icebp
dec
fdiv
adc
add
xchg
cmps
jne
lds
sub
fwait
xchg
mov
xchg
dec
shl
js
rcr
outs
scas
pop
iret
push
sbb
pusha
dec
not
fisub
enter
out
loop
mov
sub
cmp
pop
or
jle
mov
pop
mov
leave
xor
and
ror
dec
and
mov
jg
jmp
(bad)
cmps
mov
mov
outs
mov
cmp
dec
mov
pop
xchg
cdq
push
mov
nop
xchg
add
sub
cmps
ret
stos
dec
mov
xchg
mov
stos
stos
inc
xchg
pop
daa
fmul
sub
jle
shr
and
jne
pop
mov
push
xlat
dec
sbb
push
adc
fwait
les
mov
xchg
loope
iret
sbb
pop
ss
cmp
mov
mov
out
int
nop
jnp
jmp
scas
xor
aas
mov
and
stos
sub
sub
jge
adc
push
lock
fdivr
retf
rcl
cli
push
and
cld
add
push
pop
sbb
loopne
xchg
dec
pushf
out
jno
ror
mov
cli
fsub
or
and
jmp
mov
xor
xchg
(bad)
sbb
cwde
dec
inc
fcmovb
add
jp
movs
lea
sub
lods
and
retf
or
and
out
addr16
fidiv
popa
xchg
and
dec
mov
out
or
sub
pop
dec
mov
sub
pop
(bad)
push
inc
xor
rcr
data16
iret
mov
pop
ins
int3
mov
fldl2t
and
mov
movsx
out
sbb
fdivr
(bad)
int
cmps
pop
push
add
inc
and
data16
retf
cmp
dec
and
in
xor
fsubr
sbb
sahf
das
jg
shr
cmp
loopne
sbb
sbb
sub
imul
addr16
stos
push
push
or
daa
fnstenv
or
sbb
shl
inc
aaa
jno
cwde
cdq
hlt
test
mov
add
or
jp
addr16
sbb
xchg
inc
and
cmp
(bad)
push
sbb
leave
xchg
pop
and
xchg
mov
xchg
dec
push
sub
in
mov
out
xor
test
or
mov
push
scas
or
or
dec
mov
sub
jl
inc
sub
(bad)
repz
add
outs
mov
or
cs
push
jnp
mov
jmp
jns
jb
dec
cwde
popf
cvtps2pi
jle
stos
adc
jl
and
mov
cmps
push
pop
and
(bad)
or
pop
idiv
inc
mov
stc
mov
dec
es
jno
jno
fdiv
stc
dec
xor
or
jne
je
mov
pop
pushf
xchg
mov
mov
adc
sub
adc
and
hlt
xchg
and
push
pop
cmp
pop
xchg
(bad)
adc
push
(bad)
ret
movs
lods
xchg
cmp
mov
je
fld
and
adc
addr16
fadd
xor
add
pop
mov
fs
pop
xlat
loopne
jae
je
retf
(bad)
and
iret
cmp
nop
jbe
dec
popf
lds
(bad)
call
jecxz
sbb
pop
stos
jno
(bad)
push
push
aaa
jl
pushf
mov
ror
(bad)
leave
popf
call
mov
pop
pop
sbb
xchg
dec
popf
(bad)
dec
push
pop
jmp
in
mov
popa
jno
sbb
mov
call
in
mov
ror
(bad)
pop
inc
iret
fst
fld
fnstsw
es
cmc
aad
ja
add
xor
jne
inc
xor
lock
pop
jnp
loope
inc
jg
or
or
add
test
out
(bad)
ss
cmp
aad
or
mov
jmp
je
xor
sbb
std
sbb
in
lods
add
adc
push
cmps
dec
nop
inc
push
pop
or
ja
fmul
in
(bad)
nop
fwait
cmp
or
in
mov
and
loop
cs
jmp
not
xchg
lds
loop
pop
jmp
aaa
test
sbb
xchg
nop
adc
fwait
ret
mov
out
rcl
xchg
ret
int
cmps
sbb
shl
cld
mov
sti
inc
jns
es
and
adc
repnz
aaa
into
mov
lahf
dec
test
xchg
pop
leave
cld
mov
pop
push
adc
sbb
int3
arpl
call
sub
cdq
jp
test
addr16
inc
out
xlat
ret
inc
adc
(bad)
repnz
rcr
aam
dec
dec
repz
out
mov
(bad)
test
jne
in
in
ins
pop
xchg
aad
test
or
(bad)
sub
popf
pushf
cld
out
or
push
pop
jmp
cmp
jp
or
push
popf
adc
ja
mov
call
in
adc
addr16
inc
gs
adc
sahf
lods
cwde
dec
jae
jne
jmp
mov
fwait
jp
leave
adc
sbb
je
sar
cmps
daa
pop
cmp
inc
sub
xchg
dec
sbb
mov
cmp
cld
in
jecxz
pop
xor
ins
repnz
adc
test
call
inc
fstp
in
mul
test
cs
push
mov
inc
mov
jb
jl
fisttp
push
mov
fdiv
sar
adc
jecxz
jb
add
mov
call
js
aad
fwait
xchg
push
mov
sub
iret
xor
mov
sti
sub
retf
sbb
nop
loopne
test
push
fstp
or
sub
inc
sub
loope
daa
aas
test
pop
lods
aaa
pop
mov
je
mov
inc
in
cmps
cdq
xor
aam
add
dec
and
mov
push
mov
repz
out
add
rcr
pop
outs
ds
fld
or
mov
sub
jmp
rcr
dec
retf
mov
test
mov
jns
fld
hlt
retf
push
inc
sbb
push
pusha
loopne
loope
lahf
dec
xchg
add
mov
cli
stc
push
sbb
pop
cdq
adc
adc
mov
cli
test
xchg
push
leave
ins
sar
cmpps
mov
sub
pop
mov
jmp
jmp
popa
adc
pop
push
jne
shr
stc
repz
jle
add
movs
call
stos
mov
retf
mov
ret
ret
lds
xchg
mov
mov
sbb
xlat
push
sub
add
xchg
and
mov
pop
dec
cld
sar
sub
xor
or
xchg
push
(bad)
xlat
mov
mov
mov
pushf
push
adc
sbb
cld
cld
dec
cmc
shr
out
dec
shl
imul
xchg
push
xchg
minps
outs
clc
test
push
lock
sbb
stos
shl
cmp
int
imul
push
fild
les
mov
add
add
clc
xor
ins
add
or
adc
mov
xrelease
ins
and
ins
inc
inc
mov
js
out
into
in
shr
cmp
dec
mov
sub
popa
add
(bad)
sbb
movs
ficomp
dec
adc
sub
cmovo
inc
rol
out
shl
inc
jg
pop
pop
inc
or
imul
add
adc
xchg
xchg
fsubr
mov
neg
push
pop
rcl
add
scas
xor
mov
cwde
xchg
mov
arpl
xchg
pop
xchg
movs
adc
or
popf
sahf
frstor
ja
repnz
jo
cs
test
call
psubsb
loope
push
sbb
pop
mov
add
jmp
or
popa
fdiv
cld
shl
adc
sbb
in
push
mov
jae
dec
mov
pop
rol
fnstenv
shl
cmp
mov
das
xor
and
test
call
loopne
in
push
or
retf
and
or
cld
mov
add
out
cwde
pop
xor
xchg
add
jno
mov
push
sti
(bad)
pop
sub
cmc
pushf
mov
push
cli
and
jb
aad
push
jg
in
call
mov
or
mov
inc
cmps
or
popa
into
jne
sbb
cmp
mov
cs
sub
adc
std
not
repz
fst
dec
cmps
jnp
jp
pop
mov
sbb
jp
movs
and
pmaddwd
les
pop
inc
adc
iret
mov
add
stos
mov
repnz
sbb
mov
test
imul
lahf
(bad)
push
sbb
xchg
(bad)
sbb
xchg
and
pop
in
pop
imul
cmp
or
fsubr
sbb
pop
aaa
adc
es
je
inc
push
fsub
mov
ror
push
clc
and
int
lods
fcomp
sub
retf
pop
(bad)
mov
pop
cmp
ficom
cmp
lods
js
and
sti
scas
jle
adc
add
enter
add
sbb
iret
ret
mov
mov
aad
mov
sbb
mov
mov
xchg
or
mov
icebp
addr16
dec
in
xor
jns
pop
fs
mov
sbb
add
mov
ret
(bad)
rcr
sti
cmc
add
jmp
leave
shl
xchg
xchg
mov
push
dec
(bad)
jns
fcmovne
loop
or
(bad)
mov
sub
aaa
pop
arpl
clc
add
stos
icebp
dec
dec
daa
in
call
mov
sbb
outs
and
(bad)
xchg
cdq
push
mov
bound
push
cwde
inc
dec
aaa
lock
xor
inc
shr
sub
jb
push
and
add
push
xor
dec
xchg
xor
pop
into
adc
sub
dec
outs
fwait
mov
inc
out
ror
arpl
jp
repnz
(bad)
fs
(bad)
add
or
push
fisub
pop
dec
mov
test
mov
ins
dec
pop
leave
add
mov
into
add
mov
sbb
push
cmp
mov
out
fld
clc
loopne
fadd
xchg
xor
loope
add
mov
mov
xor
rol
or
lds
in
scas
mov
jno
xor
fdivr
imul
popa
cli
outs
cmp
add
dec
mov
xchg
jmp
xchg
outs
pop
pop
push
sbb
cmp
pop
mov
inc
pushf
xor
arpl
test
sbb
sub
sub
retf
pushf
or
std
cmps
xchg
cs
mov
pop
mov
push
adc
hlt
mov
and
push
outs
jbe
ja
std
ins
push
in
pusha
hlt
dec
mul
test
jmp
cmp
je
fwait
or
icebp
scas
jle
loop
fsub
enter
mov
push
pusha
mov
xchg
addr16
mov
inc
das
lods
cmps
adc
push
adc
(bad)
add
xchg
sub
mov
add
fs
xchg
lock
mov
or
retf
out
(bad)
mov
pop
sar
popa
mov
fild
xor
test
(bad)
fld1
nop
push
neg
(bad)
pusha
out
jmp
xor
out
shr
dec
mov
pushf
ins
(bad)
xor
push
xchg
push
fst
jno
loop
cmp
scas
dec
das
push
loopne
xor
leave
cld
jbe
fdivr
jle
mov
and
adc
loope
sub
inc
(bad)
jl
add
stos
adc
leave
pop
jnp
pop
mov
mov
enter
inc
sub
add
out
pop
push
aaa
cmp
into
fimul
mov
popf
pop
jbe
sub
mov
test
and
out
cdq
or
ret
pop
add
leave
jecxz
pminub
stos
cmp
push
loopne
rcl
xchg
nop
(bad)
jmp
in
lods
xchg
or
xchg
imul
and
dec
(bad)
and
in
lods
inc
push
(bad)
mov
mov
shl
fiadd
sahf
mov
sub
sbb
mov
pop
dec
push
pop
push
cld
mov
push
std
fcomp
xor
xor
adc
cmp
or
outs
ja
outs
mov
clc
fwait
mov
outs
push
sahf
retf
rcr
add
push
adc
add
push
shl
dec
pop
movs
mov
cmp
fild
(bad)
inc
das
sub
mov
ret
push
mov
call
dec
mov
mov
jg
into
icebp
sub
loopne
cwde
jmp
lds
xor
sub
pslld
test
lea
cmp
add
mov
mov
ret
in
hlt
pop
or
adc
cmps
push
pop
xchg
xchg
jbe
gs
repnz
jle
hlt
in
push
les
retf
or
cmp
xchg
clc
and
xor
rol
mov
jmp
es
loopne
jg
popf
or
xchg
cmps
shl
adc
call
or
cmps
cmp
ret
push
push
fcomp
push
push
sbb
ret
dec
dec
mov
and
dec
das
xor
lods
inc
inc
inc
cmps
push
loop
mov
push
jo
cmp
push
xchg
movs
jae
push
xor
cmps
cli
xor
ss
mov
dec
sub
imul
cmp
(bad)
push
loop
xchg
fisttp
and
sub
sub
mov
mov
scas
jnp
add
dec
cmp
sub
repz
cli
push
jg
nop
and
pop
xchg
test
ins
mov
fdivp
inc
cmp
dec
sub
loopne
mov
retf
mov
mov
mov
repz
cmp
xchg
sti
outs
ins
bsr
mov
pop
or
hlt
dec
xor
jp
sbb
mov
loop
xlat
jno
dec
loope
retf
mov
fdiv
mov
repz
push
jp
and
push
adc
dec
aam
xchg
jge
icebp
aas
cld
push
in
inc
fs
outs
dec
lods
and
add
sub
imul
(bad)
dec
loopne
mov
push
into
pop
jp
nop
push
sbb
inc
cld
pop
cmp
jno
mov
push
sbb
ins
loop
adc
jns
jecxz
aaa
int
push
xor
sub
mov
mov
(bad)
sbb
lock
lahf
xchg
outs
into
test
pop
mov
mov
sbb
shl
xor
jno
push
dec
mov
cs
mov
sub
cmc
inc
gs
std
cld
in
in
adc
(bad)
dec
dec
fs
xlat
fwait
std
xor
jmp
xchg
cwde
mov
jge
sbb
and
add
shl
ret
dec
xchg
ins
cmp
movs
movs
inc
pop
in
test
xor
mov
mov
jl
iret
xlat
jmp
loopne
scas
cld
loopne
jno
lods
mov
mov
sbb
inc
cmp
(bad)
mov
es
stos
enter
and
icebp
xchg
es
jno
es
pop
push
xor
mov
jns
retf
mov
cmp
add
cwde
rcr
push
xchg
ret
js
loopne
or
push
mov
xchg
mov
xor
mov
(bad)
aad
int
retf
xlat
pushf
loop
and
inc
push
cmps
push
mov
fild
test
call
ret
fild
ret
push
jnp
adc
js
inc
push
ficom
retf
add
aas
adc
mov
hlt
test
test
movsx
mov
cdq
fisub
sub
std
xchg
cmp
dec
pop
xor
push
ret
adc
lock
xor
jle
adc
sti
call
and
push
inc
mov
movs
sar
ins
out
mov
xchg
cli
adc
mov
sti
and
xor
mov
or
sahf
mov
or
gs
jne
mov
ins
ja
xor
inc
xor
shl
push
out
hlt
test
xor
mov
mov
stos
ja
ins
jecxz
fcmovnb
dec
pop
push
adc
rol
inc
mov
popf
outs
ss
(bad)
std
ret
adc
fimul
dec
call
mov
enter
adc
mov
nop
jp
ret
add
das
cmp
clc
or
mov
retf
lds
repz
icebp
and
mov
dec
pop
inc
outs
mov
add
adc
mov
mov
fmulp
(bad)
shr
xor
mov
jne
xor
cwde
sar
sub
and
add
jg
mov
ret
inc
push
pop
dec
test
sbb
and
popa
jbe
jp
pushf
arpl
outs
cmc
nop
xchg
fnstenv
add
nop
iret
lahf
mov
or
lea
loopne
sbb
jmp
inc
pop
cmp
inc
lahf
dec
push
add
jo
(bad)
ds
xor
mov
or
(bad)
push
push
cmps
xchg
add
mov
retf
int3
outs
shl
adc
add
add
popf
div
nop
cmc
sti
shl
cmc
mov
mov
pusha
xchg
inc
iret
adc
aad
push
cmp
xlat
pop
sbb
sbb
dec
or
fst
(bad)
call
cmp
adc
stos
mov
adc
mov
jns
icebp
mov
jb
add
movs
test
jecxz
sub
imul
cmps
pop
in
daa
push
(bad)
int3
fsubr
ins
jle
pop
xchg
or
(bad)
push
aad
in
mov
test
cmp
push
inc
adc
into
mov
mov
imul
ins
cli
int
stc
mov
pop
loopne
ja
(bad)
(bad)
shl
ror
cmps
push
dec
cmp
dec
sar
test
inc
lods
in
xchg
aam
in
stc
imul
pop
in
cmp
xor
xchg
inc
outs
and
xor
inc
lods
mov
jp
pop
sub
test
fld
imul
ficom
es
lods
out
and
dec
outs
imul
mov
cmps
cmp
and
fisttp
(bad)
stos
mov
in
sbb
adc
sbb
fwait
not
lods
iret
test
sub
cmps
enter
dec
cs
push
stos
call
movs
fwait
pop
cdq
pop
mov
add
jg
les
fmul
adc
(bad)
cld
(bad)
sbb
dec
and
mov
sub
sbb
push
mov
cmp
rcr
jg
and
jl
es
inc
or
ss
pop
in
inc
dec
je
inc
leave
mov
(bad)
jg
cwde
lds
sahf
and
jbe
scas
popa
pop
mov
sahf
call
cmps
cdq
mov
jg
(bad)
pop
fild
and
btc
or
frstor
cwde
mov
cmp
sub
pop
adc
mov
sub
pushf
popf
inc
jbe
add
outs
push
cmp
(bad)
jns
sar
int3
pop
jecxz
dec
mov
cwde
aaa
and
add
fs
call
mov
call
push
mov
inc
retf
je
dec
mov
pop
sbb
imul
mov
repz
push
or
ds
and
ret
or
mov
push
aaa
or
test
(bad)
aad
fdiv
mov
xor
(bad)
mov
call
xor
inc
int
popa
mov
sahf
lock
fsubr
inc
cmp
xlat
mov
dec
popa
add
int3
in
cmp
scas
hlt
cli
adc
(bad)
lds
mul
mov
sub
repz
enter
test
and
or
adc
out
call
jle
aam
bswap
dec
ins
fwait
cmp
mov
cwde
fcomp
outs
xchg
ret
test
pop
movs
test
stos
push
jbe
outs
adc
pop
jae
ins
and
(bad)
mov
cwde
sub
push
mov
dec
add
mov
push
call
aas
jo
push
mov
sub
(bad)
lods
cmps
call
adc
jl
and
dec
xor
jnp
les
scas
js
adc
mov
mov
jns
dec
aas
inc
cli
push
cs
stos
(bad)
sub
cmp
cmps
lds
daa
mov
jbe
sbb
outs
in
sbb
imul
pop
xchg
jns
mov
arpl
das
popa
hlt
push
(bad)
aas
int3
sub
sub
mov
mov
repnz
mov
jp
outs
mov
cmps
not
lea
rcl
xor
cmp
pop
or
jae
add
jmp
ins
push
dec
xchg
ret
sbb
mov
test
jns
mov
es
call
shl
cmp
cld
nop
or
rcl
(bad)
leave
clc
std
add
sub
mov
fisub
sbb
or
nop
(bad)
sar
pop
or
dec
cmp
ds
(bad)
iret
lea
fnstenv
sbb
in
pop
cmp
push
(bad)
cmc
push
mov
dec
and
jg
and
add
pushf
int
arpl
pop
mov
inc
sub
jbe
(bad)
scas
mov
shl
jg
fstp
xchg
jo
imul
scas
stc
shl
mov
jae
iret
and
aas
jns
fs
cmp
ret
fstp
lock
daa
dec
sub
dec
xchg
stos
mov
mov
jge
lea
inc
sbb
stc
lock
cs
loop
int
nop
push
inc
mov
and
push
stos
adc
sbb
sbb
push
scas
sti
mov
pusha
mov
inc
sbb
xchg
mov
inc
lea
inc
add
mov
scas
adc
dec
fimul
and
push
fs
outs
movs
lds
das
adc
dec
xor
or
jp
pop
mov
mov
test
call
out
pop
xchg
push
mov
lds
sar
fsubr
outs
or
idiv
int3
mov
sbb
hlt
add
adc
cmp
push
and
outs
out
push
push
cmps
sbb
mov
mov
fcomp
nop
mov
push
cmp
fcmove
not
push
jnp
inc
push
jae
into
xchg
call
mov
hlt
add
pop
mov
test
fsubp
sub
dec
leave
mov
xchg
shl
out
movs
xchg
sbb
(bad)
js
adc
int
jmp
out
cmp
push
test
fsub
push
stc
mov
fidiv
ret
mov
mov
xor
(bad)
retf
xor
les
fwait
pop
inc
aam
fnstenv
in
sub
sti
clc
jmp
clc
cmp
mov
imul
cmp
sbb
xor
cmp
test
or
jl
fadd
outs
imul
repz
push
jo
hlt
sbb
cwde
dec
outs
repnz
xchg
xlat
mov
inc
adc
mov
popf
sbb
push
xchg
fcom
mov
xlat
adc
push
sbb
add
dec
int3
mov
repnz
fiadd
mov
retf
shl
dec
ins
dec
rcr
pop
xchg
cmp
cmp
repz
test
mov
scas
jne
inc
push
inc
gs
dec
ja
mov
in
adc
(bad)
push
add
mov
push
sti
pop
movs
cmp
test
jne
and
and
adc
in
popf
pop
jno
and
xchg
rcl
xchg
adc
mov
outs
in
shr
sbb
mov
ins
jl
pop
or
or
sbb
cmps
popa
or
addr16
ret
jns
call
jp
sbb
ss
scas
add
dec
add
jecxz
push
xchg
(bad)
fistp
adc
int
sub
cmp
loope
pop
jb
loop
dec
in
xlat
add
mov
cmp
out
neg
jnp
mov
ret
aas
mov
jno
sbb
xor
or
pop
mov
dec
inc
cmc
or
push
pop
push
in
js
mov
jge
push
mul
jno
xchg
or
xchg
jno
push
dec
mov
out
add
retf
adc
push
mov
jle
sbb
and
cmc
scas
js
xchg
shl
push
pop
add
loopne
pop
sbb
pop
(bad)
ins
jle
shr
sub
nop
div
mov
popf
mov
sbb
lds
(bad)
dec
pop
or
enter
mov
hlt
pop
push
fnstenv
mov
add
push
adc
pop
ins
mov
pop
sbb
jno
js
imul
jb
scas
xchg
jnp
shr
jns
fndisi(8087
xchg
xor
stos
cs
xchg
fptan
sub
jl
dec
imul
pop
inc
(bad)
mov
js
repz
cmp
inc
sbb
stos
call
or
stc
stc
leave
mov
sahf
jbe
test
push
rol
or
xlat
sbb
push
mov
jle
lds
and
cwde
sar
imul
aad
push
jp
sbb
mov
jne
push
inc
test
data16
imul
outs
push
fcomi
jle
cmp
xchg
mov
ror
cs
add
repnz
lods
retf
ins
js
gs
imul
test
mov
les
sub
sbb
inc
idiv
dec
and
outs
add
mov
mov
in
dec
or
mov
xlat
adc
mov
push
fidivr
xchg
or
jmp
mov
mov
jl
dec
mov
and
xchg
scas
cmp
addr16
stos
fidivr
pop
ret
jl
xchg
ss
ins
cli
xor
mov
mov
pop
dec
arpl
pop
jp
ret
inc
pop
out
loop
sbb
int
mov
cmp
push
mov
out
inc
inc
shl
jecxz
mov
xor
aaa
or
adc
jg
ret
push
inc
cmp
imul
ss
pop
dec
test
push
call
das
sub
push
jecxz
dec
pusha
enter
jne
cwde
popa
ins
sub
dec
repnz
pop
mov
and
mov
mov
sub
lods
retf
xchg
and
jl
inc
scas
in
mov
std
call
cld
jns
mov
pop
fwait
(bad)
cmp
lock
cld
iret
pop
lahf
jne
mov
xchg
mov
push
cmp
sub
jge
and
push
xchg
xor
or
aaa
call
push
loope
outs
mov
mov
inc
mov
sbb
cmp
scas
js
dec
inc
(bad)
jp
pop
or
call
mov
out
jmp
loopne
cli
icebp
ret
or
or
add
popf
jns
scas
xchg
pop
cmc
xor
adc
mov
sahf
arpl
movs
mov
icebp
(bad)
int
xchg
dec
add
or
add
jo
repz
adc
pop
cmc
and
outs
xlat
push
inc
cmc
frstor
popa
mov
push
mov
popf
nop
fdivr
out
shl
hlt
leave
(bad)
arpl
push
jo
dec
xor
std
in
and
(bad)
icebp
inc
cmp
xchg
push
idiv
mov
xchg
fdivrp
gs
or
push
pop
sar
sbb
(bad)
cmp
scas
mov
dec
mov
pop
sahf
faddp
sti
shr
(bad)
dec
xor
xchg
xor
and
and
adc
outs
pop
fst
jns
sbb
sub
pop
xchg
mov
dec
pop
(bad)
pop
xchg
adc
sbb
jmp
inc
lds
out
jnp
sub
ds
pop
xchg
sub
mov
js
out
ds
mul
mov
push
cmp
adc
out
sub
mov
ins
sub
mov
(bad)
lock
jns
frstor
inc
and
cmps
bound
je
fisub
(bad)
out
int
cmc
iret
fdivr
mov
adc
lods
sysexit
bound
xor
mov
cld
(bad)
cs
(bad)
or
push
adc
jl
pop
xchg
shr
xchg
cmp
mov
in
mov
in
fist
lods
aam
adc
add
fisttp
mov
shl
loope
ja
loop
mov
xlat
out
push
js
cmp
xchg
xor
push
shr
cmp
jp
sub
jl
jae
jecxz
jl
xor
imul
shr
lahf
jg
adc
add
jp
mov
push
inc
(bad)
xlat
push
xchg
dec
int3
out
mov
push
xor
inc
add
mov
or
mov
or
(bad)
and
(bad)
ficomp
mov
jbe
ins
pop
push
movq
into
ret
and
mov
aam
es
or
into
push
arpl
sbb
cmp
sub
adc
in
push
in
aaa
(bad)
mov
mov
clc
jg
jbe
scas
stos
aam
cmp
lods
inc
mov
rol
scas
xor
sti
mov
pop
pushf
xor
adc
cmp
in
test
inc
mov
xor
iret
es
pop
pop
sub
ins
add
rcr
dec
cmp
imul
cmc
pop
nop
mov
out
pop
or
mov
xchg
sub
jmp
scas
imul
int3
sub
and
scas
sbb
push
mov
mov
test
fst
or
pop
test
(bad)
adc
push
push
cmp
mov
sub
push
inc
lods
daa
sub
clc
sti
mov
jmp
in
lods
cmps
movs
hlt
push
fcomi
jecxz
scas
jg
retf
js
jnp
das
adc
sbb
or
iret
retf
or
jo
(bad)
xchg
push
inc
fstp
mov
outs
mov
pop
inc
scas
cmc
dec
inc
ja
hlt
sahf
mov
cdq
mov
mov
outs
push
addr16
or
push
pop
pop
fs
pop
mov
xchg
test
push
arpl
mov
fnstcw
iret
loopne
retf
or
pop
pusha
hlt
aad
aas
scas
int3
out
jno
inc
mov
mov
jg
push
add
fwait
adc
rcl
repnz
bswap
cwde
push
aad
sbb
ror
pop
rol
cmps
mov
jmp
xor
inc
ret
enter
test
int3
fnstcw
inc
sbb
iret
out
xchg
add
push
(bad)
pop
adc
xchg
lahf
xchg
sub
jo
cmps
movs
retf
and
mov
push
push
(bad)
leave
cmp
dec
call
imul
nop
scas
(bad)
cld
aam
and
das
in
out
and
jle
xor
cmp
xchg
jb
loop
mov
inc
mov
cli
fnstenv
ficomp
dec
movs
stc
inc
sbb
jecxz
sbb
add
imul
mov
mov
push
push
into
jo
cdq
inc
xchg
inc
xchg
gs
mov
add
iret
sbb
jb
and
cmps
push
shl
push
sahf
jg
out
mov
mov
inc
push
(bad)
popa
(bad)
lds
arpl
mov
cmps
pop
mov
sbb
in
lea
leave
sub
xor
(bad)
data16
(bad)
cli
xchg
jae
in
inc
push
sbb
mov
shr
jo
lock
jecxz
add
pop
inc
out
sub
popa
dec
fwait
inc
push
(bad)
(bad)
fldcw
sbb
mov
mov
xchg
loope
arpl
inc
sub
jb
and
loop
fimul
dec
mov
mov
out
jmp
out
(bad)
xor
or
pop
dec
lahf
(bad)
call
jl
lods
pop
ss
daa
add
mov
xor
hlt
retf
mov
sar
into
xchg
mov
fdiv
in
cmp
ror
push
in
push
dec
hlt
fldcw
xchg
aas
inc
xchg
and
sbb
imul
imul
cli
pop
push
mov
test
lock
(bad)
out
adc
jecxz
dec
mov
mov
lods
fild
stos
pop
rcl
ffreep
bound
mov
test
sbb
pop
cmp
dec
sub
in
repz
push
(bad)
mov
mov
ins
repnz
rol
push
push
mov
cmc
inc
mov
push
pop
nop
push
cmps
pop
pushf
and
push
mov
test
fdivr
cmps
dec
adc
leave
cmp
movs
inc
mov
ins
inc
gs
xchg
cmc
movs
int3
jae
neg
mov
cs
xor
sub
lock
jl
pop
push
inc
push
ficom
scas
xchg
in
xchg
xchg
pop
ins
xor
nop
mov
mov
hlt
cmp
xchg
imul
sbb
add
std
cwde
test
add
lahf
jbe
mov
xchg
or
call
inc
in
mov
push
test
pop
popf
sub
popf
retf
cmp
jbe
jno
sub
sbb
or
call
cmp
xor
cmp
in
pop
pop
addr16
stos
in
pop
outs
sub
mov
xchg
cs
mov
sti
or
(bad)
out
sbb
xor
jmp
mov
movs
push
inc
clc
leave
fmul
ss
or
cmc
cmps
xchg
ret
cmp
and
mov
adc
in
in
stc
cmp
push
mov
push
jno
xor
and
sub
adc
jge
fidiv
push
fwait
inc
mov
mov
call
retf
inc
pusha
pop
(bad)
test
das
cmp
daa
jmp
fcom
push
fucomi
stos
mov
arpl
pop
cmp
jno
xor
pushf
xor
test
adc
mov
mov
in
mov
sbb
mov
cmp
pop
xchg
cmps
mov
sub
sub
xchg
sbb
adc
cmp
add
or
je
xor
pop
mov
movs
out
sbb
inc
cwde
xor
popf
push
fnsave
pop
push
mov
addr16
aam
aas
cmp
mov
pop
sbb
aad
xor
test
(bad)
icebp
jmp
lods
ror
inc
pop
daa
neg
outs
push
and
loope
push
es
loope
push
push
pop
mov
ret
call
loope
xor
js
test
retf
cld
pop
shl
fwait
lock
loopne
seta
jne
lock
xlat
add
cmp
inc
ins
arpl
fwait
imul
mov
stos
aas
adc
js
xchg
lea
in
mov
mov
xchg
call
pop
call
fldenv
xchg
cmc
or
fcom
mov
mov
aam
imul
mov
mov
cmp
cmp
mov
stc
(bad)
movs
jmp
pop
leave
rol
xchg
mov
fcos
mov
pop
dec
jae
les
sbb
lods
sub
ins
scas
sar
sbb
jle
pop
mov
ret
push
push
cmp
sbb
pop
xor
jo
ins
pop
mov
lods
popf
xlat
data16
sbb
int
out
cwde
mov
xor
imul
not
fsub
push
arpl
cmps
sbb
xchg
adc
jp
mov
sub
xchg
cmp
call
or
xor
inc
(bad)
stos
fistp
inc
xor
(bad)
cmp
add
jno
push
retf
pop
dec
out
pop
test
clc
pop
jmp
(bad)
in
in
out
shl
push
adc
(bad)
mov
push
jmp
into
imul
dec
(bad)
push
frstor
jne
mov
mov
jb
ds
je
je
scas
fs
sahf
fiadd
jb
mov
(bad)
shr
mov
int
inc
jle
bound
jl
mov
mov
sar
pavgw
sub
adc
call
das
outs
mov
test
adc
iret
push
cmps
outs
xor
push
add
sbb
adc
jg
dec
out
lock
mov
xchg
jecxz
fst
mov
mov
scas
or
xchg
push
dec
jne
jg
cdq
jb
fdiv
sub
or
sar
dec
adc
jne
sbb
or
add
inc
enter
add
imul
(bad)
push
retf
mov
popf
iret
int
and
or
fst
dec
jecxz
stos
test
std
cmp
lods
fldcw
inc
sbb
mov
cmps
add
pop
stos
jnp
aaa
hlt
jbe
adc
pop
push
ret
jle
xchg
sub
dec
push
lock
fnsave
(bad)
jne
push
loope
add
push
dec
inc
div
pop
repz
mov
jns
inc
inc
mov
cmc
lock
xlat
imul
xchg
jmp
imul
add
sub
ja
addr16
fwait
mov
das
fcom
jb
loope
ja
outs
fst
dec
fstp
icebp
push
outs
mov
push
sub
dec
aaa
mov
mov
or
aad
test
adc
cmps
out
rcl
pop
add
loopne
out
or
cdq
ins
stos
mov
out
aas
(bad)
sbb
xor
lahf
push
ja
add
cdq
stos
in
xor
aas
push
lods
xor
push
repnz
or
and
jmp
and
vmovhpd
push
or
mov
stos
mov
sti
rol
and
adc
add
popf
data16
rol
call
mov
and
mov
xor
or
xchg
adc
mov
and
xchg
fisubr
jno
jno
push
mov
jbe
sbb
ror
sbb
fidiv
cmp
jecxz
aas
repz
adc
cmp
mov
jge
mov
and
mov
(bad)
imul
inc
cmps
ins
or
dec
repz
dec
cmp
mov
sub
(bad)
(bad)
popa
push
sbb
xchg
mov
xchg
push
pop
loope
out
inc
iret
adc
and
fnstenv
mov
cmps
fist
mov
push
aaa
outs
add
mov
call
jl
fidivr
pop
lods
mov
mov
in
dec
push
or
fistp
mov
es
cmp
mov
fwait
jecxz
popf
clc
pop
pmulhw
push
dec
retf
jle
jb
jae
daa
(bad)
mov
in
push
movs
outs
pop
outs
mov
ret
jecxz
sub
adc
sub
popa
sbb
das
cmp
repz
repz
leave
loop
icebp
jg
sbb
mov
data16
push
mov
jnp
sbb
hlt
movs
push
in
push
cmp
arpl
scas
js
mov
std
shr
pop
stc
and
mov
scas
fidiv
lds
mov
add
mov
sbb
ret
add
push
fs
in
and
or
aad
call
add
mov
inc
pop
sahf
fdiv
mov
jae
xor
repnz
fild
dec
ja
mov
loop
dec
ret
jl
sar
dec
sar
or
adc
outs
mov
xor
ror
and
test
adc
mov
jmp
sub
movs
sub
lds
cmp
iret
dec
inc
cld
(bad)
fimul
jge
int3
push
jge
movhps
push
mov
sub
out
jae
iret
or
jl
je
rol
or
cmps
shr
push
sbb
cmp
movs
dec
test
mov
pop
inc
cmp
es
xor
add
adc
dec
jno
xor
or
sbb
aad
dec
sti
xchg
cmps
push
jns
dec
fnstsw
mov
ds
call
test
jl
jbe
push
outs
push
cmp
xor
test
shr
cmc
fld
retf
cwde
es
sub
in
dec
cmp
sub
loopne
mov
ret
mov
fdivr
pop
dec
sub
pop
pusha
push
(bad)
cmp
xchg
cmc
jne
inc
arpl
adc
cld
inc
das
jmp
dec
les
jmp
mov
mov
xchg
mov
mov
ja
mov
sti
sbb
cmps
lea
mov
lahf
mov
jmp
aam
repz
daa
push
push
mov
cmp
cli
mov
fmulp
and
je
jbe
dec
push
clc
je
or
and
ficomp
adc
fwait
test
pop
xor
push
sub
mov
scas
lods
std
repnz
mov
shl
pop
lahf
sbb
popa
enter
mov
iret
or
mov
int
sahf
arpl
pushf
ins
pop
aas
pop
in
fwait
js
mov
mov
add
cmp
vpshuflw
adc
pop
pushf
cmp
fbstp
daa
mov
push
sub
(bad)
leave
sahf
retf
(bad)
ret
cwde
xor
xchg
push
sbb
les
rcr
cmp
mov
inc
jbe
jmp
shl
retf
push
adc
add
jns
sbb
or
xor
sbb
movs
adc
aam
retf
inc
in
jb
loopne
and
mov
das
dec
ins
mov
mov
pop
clc
ins
popf
sbb
mov
sbb
pop
dec
inc
int3
in
in
std
fst
add
outs
add
ja
sub
jmp
dec
pop
test
arpl
add
pop
cmc
fiadd
sbb
sbb
pusha
sahf
mov
fwait
ds
jg
cmp
cmps
stc
fild
mov
adc
neg
aaa
mov
mov
lock
jp
outs
rcr
push
sub
xor
cmp
popa
frstor
mov
xchg
mov
out
and
aaa
adc
inc
repnz
cwde
mov
jae
fiadd
and
leave
push
cmps
in
jb
sbb
and
ret
retf
sub
jae
fsubr
mov
(bad)
int
jge
or
stos
mov
lods
jmp
test
adc
addr16
ret
call
movs
mov
pop
aad
(bad)
inc
xor
call
push
or
push
inc
push
or
sti
pushf
stos
jmp
paddd
arpl
push
xor
clc
(bad)
inc
repz
xchg
dec
out
(bad)
ror
push
daa
pop
mov
xor
test
(bad)
in
pop
inc
retf
jnp
fld
sbb
mov
je
cmp
std
inc
jmp
outs
sbb
pslld
addr16
push
iret
cmp
sahf
jge
sub
in
js
je
scas
jmp
cmp
mov
sub
mov
fwait
mov
movs
sub
rcr
cli
mov
test
mov
loope
dec
push
std
mov
js
and
adc
stos
shr
sub
call
push
(bad)
jbe
push
xchg
xchg
jge
add
test
xchg
jge
dec
lods
in
movs
cmps
les
jge
cmp
cmp
and
test
or
lods
xchg
inc
cmp
add
loope
fcmovu
sbb
jo
(bad)
jno
jno
ins
mov
rol
loopne
shl
fnstsw
mov
adc
in
stos
cmp
mov
rol
mov
aad
nop
loop
fwait
inc
shr
or
mov
retf
jmp
movs
out
cdq
xor
mov
dec
cs
das
xchg
stos
mov
push
call
pop
mov
cmp
mov
sbb
nop
cli
sbb
jne
inc
adc
aaa
mov
jns
outs
lahf
retf
mov
in
dec
pop
xor
sub
and
cmp
pushf
mov
cdq
ret
rol
(bad)
out
xlat
pop
xor
pusha
pop
adc
jne
mov
aas
cmp
cmps
stos
mov
ins
addr16
clc
push
les
cdq
int
jno
fisttp
mov
fwait
mov
mov
push
jle
pop
imul
aas
or
es
cmp
mov
pop
ins
sbb
imul
push
pusha
xor
loop
add
fcomp
cmp
dec
in
repz
js
pop
mov
push
add
into
inc
test
out
(bad)
or
(bad)
(bad)
pop
aaa
adc
push
xchg
mov
leave
test
outs
push
iret
jae
cmp
cmp
mov
sbb
xchg
mov
out
loope
dec
mov
nop
cld
int
out
jo
les
call
xchg
push
inc
add
sub
jl
std
adc
sbb
or
popa
or
loop
hlt
and
inc
inc
fidiv
ins
sar
ins
push
add
arpl
adc
add
ja
stc
daa
nop
cmp
dec
mov
dec
shl
add
sub
sbb
push
pop
and
dec
pop
daa
sbb
jmp
mov
dec
(bad)
test
dec
mov
loopne
dec
test
push
call
(bad)
push
aas
or
xor
(bad)
rcl
lahf
shr
icebp
in
adc
add
aam
mov
fstp
inc
dec
jl
js
test
arpl
sbb
sub
in
leave
pop
int3
retf
(bad)
xor
in
or
jp
(bad)
imul
push
enter
pop
or
inc
mov
std
(bad)
xor
iret
jg
sbb
jle
fdivrp
xchg
pop
hlt
(bad)
and
dec
or
sub
lock
dec
sbb
dec
fld
jne
xchg
mov
adc
(bad)
pop
test
out
add
dec
add
movs
and
add
jle
mul
(bad)
bound
into
jb
xor
(bad)
fisub
mov
push
scas
dec
in
fcmovb
adc
or
not
adc
sub
mov
(bad)
in
or
pop
mov
sub
cmove
jne
stos
jmp
out
or
daa
cmps
mov
or
sbb
mov
xchg
out
imul
dec
test
ret
sub
xor
mov
push
xchg
push
push
(bad)
clc
sti
push
out
imul
xchg
dec
ret
pop
pusha
mov
pop
xchg
or
div
cmp
xchg
mov
scas
repnz
xchg
push
push
mov
adc
pop
ret
adc
mov
sbb
out
push
into
pop
retf
push
rcl
hlt
sub
push
xchg
dec
outs
dec
aam
and
push
add
push
or
ror
das
pop
jmp
mov
jae
mov
lock
inc
pop
out
jle
stc
test
lock
pop
ins
stos
inc
sar
nop
adc
mov
mov
(bad)
fisttp
mov
leave
lea
cdq
ins
in
ficomp
mov
push
out
push
adc
icebp
mov
inc
push
(bad)
jp
fidiv
push
push
cmp
rcl
xor
ja
cmp
(bad)
lahf
icebp
cmp
xor
scas
dec
jae
cs
mov
push
mov
and
mov
fld
inc
shl
sub
mov
pop
cli
cmp
mov
mov
pop
sub
pop
das
pop
scas
in
pop
jns
out
mov
ss
xchg
aad
mov
mov
mov
aas
push
mov
mov
xchg
shr
outs
shl
push
sti
mov
mov
pop
adc
mov
mov
xchg
movs
jbe
outs
xchg
push
jnp
(bad)
ret
mov
or
cmp
test
sbb
fstp
ds
test
mov
dec
(bad)
ror
xor
sbb
sbb
pop
cmp
loope
cmp
jo
das
aas
jne
dec
mov
cmps
es
jge
dec
and
cmps
and
jmp
imul
xchg
xchg
stc
inc
movs
fst
or
cmp
mov
fistp
jmp
rcr
mov
leave
mov
add
inc
ficomp
dec
pop
adc
cmp
add
nop
xchg
loop
pmaddwd
inc
sbb
iret
or
push
(bad)
lock
out
ins
stos
fidivr
rcl
or
arpl
in
mov
dec
sbb
das
dec
mov
sbb
into
fcmove
sbb
ins
push
mov
mov
jmp
lods
adc
test
dec
push
dec
out
movs
xchg
pop
xchg
out
jb
lahf
cmc
adc
popa
lds
fs
imul
movs
fwait
pusha
mov
or
mov
cmc
mov
cmp
mov
jmp
sbb
cmp
dec
mov
cmps
call
cmp
pushf
pop
xchg
jo
(bad)
mov
xlat
lock
aas
adc
xor
daa
or
jne
ret
ins
cmp
and
xor
sub
push
xor
and
sub
or
mov
mov
xor
sbb
push
jb
enter
(bad)
mov
aam
int
(bad)
mov
mov
(bad)
aad
js
add
in
add
push
cmp
rcr
popf
mov
inc
sub
daa
push
jne
fadd
out
je
loopne
out
jl
sbb
fsubr
push
cmp
pop
and
pop
loopne
test
scas
xchg
scas
clc
and
pop
(bad)
jle
daa
sub
push
cmps
into
pop
adc
cmp
xor
push
dec
fdivr
enter
xlat
mov
aam
xor
pop
jg
jle
xchg
hlt
stos
arpl
call
lahf
test
iret
push
xor
or
(bad)
push
pop
add
cmp
pop
mov
jne
loop
pop
pop
fs
mov
popf
xchg
mov
push
in
mov
xchg
ret
add
retf
fild
out
push
sbb
dec
push
pop
jp
fldenv
test
mov
xchg
(bad)
repnz
mov
xchg
jmp
mov
sub
push
shl
adc
enter
cmp
and
xchg
jb
xchg
inc
dec
dec
mov
xchg
push
lea
lahf
sub
cmp
mov
sbb
out
mov
stc
mov
xor
daa
mov
test
(bad)
jmp
jge
jle
(bad)
mov
ror
mov
mov
xchg
mov
sbb
xchg
xor
push
(bad)
mov
aad
inc
(bad)
jp
mov
lods
adc
or
inc
popa
lea
outs
rcl
jle
mov
adc
out
push
pop
adc
(bad)
dec
jle
dec
mov
and
xchg
dec
nop
enter
ss
mov
and
add
mov
dec
scas
push
lsl
sub
jnp
jb
mov
dec
nop
fild
mov
cmp
movs
xor
mov
movs
je
mov
loope
xor
imul
push
es
pop
lods
enter
xchg
stos
pushf
push
mov
jnp
add
lock
dec
xor
push
fwait
push
jmp
push
in
push
cmp
add
sti
push
adc
pop
adc
cmp
add
scas
xor
push
dec
cmc
frstor
in
cmps
sahf
jg
or
ins
outs
inc
cmp
jb
fdivr
fmul
sti
iret
pop
sbb
in
inc
sbb
test
ins
in
test
mov
aaa
leave
loop
inc
cld
sub
push
mov
pop
imul
sbb
retf
out
cmp
mov
ret
data16
push
jp
popa
push
movs
sahf
movs
dec
(bad)
sub
push
and
aaa
push
push
add
or
ficomp
sahf
repnz
sub
push
mov
in
iret
fidiv
adc
adc
aas
adc
adc
aad
inc
bound
stc
jnp
iret
in
mov
push
retf
les
push
adc
popf
mov
and
test
fstp
cmps
sbb
into
mov
arpl
mov
dec
repnz
jmp
jo
jb
sub
jp
add
(bad)
fistp
cmp
retf
outs
cmps
out
pop
cmps
jp
jnp
inc
fadd
adc
push
jns
jp
(bad)
xchg
cmps
cmp
iret
pop
test
in
cmps
ins
or
out
sub
xchg
mov
pop
sti
loope
imul
mov
fist
mov
jle
push
lock
sbb
add
add
test
sbb
xor
adc
jne
loopne
mov
add
stos
xor
aaa
scas
xor
inc
jo
out
call
test
(bad)
sar
mov
inc
inc
retf
fcmovb
sar
cmps
into
jb
rcl
retf
mov
pop
mov
mov
mov
sahf
jp
mov
in
das
push
sbb
(bad)
mov
sbb
(bad)
or
(bad)
and
dec
xcrypt-cbc
cmps
aad
pop
xor
ror
ret
inc
je
inc
fnstsw
mov
jns
jle
sbb
adc
push
or
jbe
pop
xchg
loop
xchg
into
adc
dec
and
mov
mov
pop
jl
fs
jge
mov
cmp
jno
pushf
push
sbb
js
sbb
mov
jmp
sbb
(bad)
outs
jmp
cmps
dec
das
jmp
shl
sbb
imul
cs
sbb
scas
rol
(bad)
push
out
ficom
sar
lahf
clc
add
add
hlt
mov
jmp
jne
ins
(bad)
push
and
psubsw
dec
add
xor
out
push
sbb
push
adc
jne
hlt
test
ss
jmp
nop
mov
js
pop
and
xchg
dec
int3
xchg
out
pop
dec
push
cli
xchg
xlat
popf
daa
sub
test
mov
dec
sbb
dec
mov
add
loopne
add
mov
mov
fsubr
vaddsd
test
mov
and
add
jl
jmp
mov
neg
dec
pop
jne
(bad)
adc
jns
dec
mov
mov
movs
dec
ret
int3
jp
cmc
push
pop
pushf
inc
int3
nop
loop
popa
inc
test
mov
test
sub
test
mov
and
out
xor
jle
outs
fwait
lods
in
(bad)
cmp
xchg
jb
idiv
pop
cmps
out
rcr
mov
pop
mov
xchg
stos
fwait
aaa
add
out
mov
imul
fidiv
dec
pop
mov
je
cmc
hlt
adc
and
push
sbb
scas
sbb
pop
nop
inc
dec
jns
dec
add
js
sbb
or
retf
pop
or
xchg
int
sbb
bound
and
scas
cdq
inc
int3
lds
inc
sbb
jmp
jmp
mov
mov
cmps
je
ret
lock
mov
cmps
fs
ins
adc
ret
imul
pop
mov
xchg
retf
daa
jne
dec
mov
push
xchg
cmp
sub
adc
pop
fild
daa
inc
in
cmp
lods
rcr
fnstenv
push
xlat
dec
inc
dec
push
sbb
dec
sbb
or
cwde
inc
jl
sub
cmp
xor
mov
int3
push
aad
pushf
shl
dec
xor
in
pop
xor
pop
dec
xor
aas
leave
aad
fnstsw
data16
dec
jno
xchg
xchg
ins
cmps
leave
sub
fcmovb
or
out
add
or
mov
add
imul
push
out
shl
cmp
jns
and
inc
sub
xor
pop
inc
or
cmp
(bad)
push
sbb
hlt
add
fistp
sub
mov
test
cmp
jnp
mov
sbb
imul
lods
jae
mov
add
xor
test
call
mov
xchg
push
call
xchg
shl
outs
push
sahf
loop
in
cs
scas
pop
fwait
in
or
pop
inc
mov
sahf
xchg
stos
mov
or
cmps
push
dec
(bad)
mov
hlt
fstp
mov
xchg
ss
push
shl
and
addr16
outs
clc
hlt
mov
mov
test
je
pushf
jbe
adc
imul
ds
arpl
fcmove
out
xor
dec
ret
out
arpl
dec
daa
sub
pop
sub
xchg
out
popa
mov
or
rcl
daa
add
in
add
add
sub
mov
dec
pushf
mov
stos
mov
aas
push
fisubr
test
mov
mov
das
test
(bad)
or
scas
xlat
stos
adc
loopne
add
stos
data16
scas
and
in
mov
or
mov
inc
mov
popa
pop
mov
retf
fild
cdq
dec
push
test
imul
push
jge
sub
hlt
fwait
repnz
(bad)
push
lahf
sub
inc
mov
cmp
push
mov
pop
mov
xor
fnsave
data16
dec
cmp
mov
ss
pusha
mov
push
adc
sbb
add
aad
push
push
ror
fidiv
icebp
jg
cli
add
mul
pop
mov
ror
jecxz
(bad)
mov
mov
nop
ins
in
mov
cmps
hlt
jl
nop
frstor
loop
addr16
das
jae
inc
xchg
repz
bound
loopne
mov
test
retf
jo
cmp
ficom
pushf
inc
sbb
xchg
movs
mov
xor
in
cdq
add
(bad)
call
and
out
cmps
bound
mov
nop
ja
vmulpd
mov
xor
mov
xchg
xchg
add
(bad)
or
in
sub
out
lds
push
dec
push
test
push
sub
rcr
jmp
pop
xchg
or
jle
jnp
jl
xchg
dec
cmp
cmp
jle
sbb
rcr
in
outs
sbb
out
loop
(bad)
sub
or
scas
jo
pop
mov
shl
cmp
xchg
lock
jno
rcl
ss
pop
adc
into
jl
in
add
mov
fwait
mov
(bad)
cmc
adc
stos
inc
or
repz
mov
in
xchg
test
inc
jle
cmp
and
out
mov
aas
xor
sahf
mov
rcr
jl
jg
mov
jne
push
out
fisttp
mov
jp
sub
(bad)
cdq
in
jns
xchg
stos
jle
xor
dec
rcr
cs
outs
pop
jl
xlat
sbb
test
mov
(bad)
mov
test
pop
or
push
(bad)
jns
cmps
ror
dec
int
test
fcmovb
cmps
jbe
mov
mov
pusha
pop
aam
iret
xlat
sbb
mov
cmp
xchg
add
jp
(bad)
push
test
or
inc
aam
push
inc
mov
stos
jge
sbb
scas
pop
fs
fisttp
inc
sbb
mov
mov
mov
add
xchg
in
das
pushf
ret
mov
xchg
sar
mov
mov
sub
in
or
xchg
adc
lock
daa
xor
cwde
mov
(bad)
mov
push
scas
cwde
in
shr
dec
outs
mul
mov
add
mov
lods
jmp
daa
push
xlat
out
adc
push
fwait
xor
mov
mov
mov
sub
jmp
xor
sub
xor
vpsubq
int
inc
dec
lock
lea
sub
out
push
sar
and
mov
sub
push
jle
jmp
mov
popa
out
xchg
jno
lods
movs
push
rol
in
test
stc
xchg
xchg
test
adc
in
mov
mov
fild
loope
and
popf
pop
stos
and
dec
push
push
xchg
pop
and
and
in
dec
outs
scas
lods
mov
jne
daa
sahf
adc
push
sbb
imul
or
inc
jnp
mov
add
ins
dec
rcr
adc
test
inc
or
lods
or
push
loopne
nop
mov
aas
adc
int3
sbb
ins
add
out
call
mov
inc
movs
sub
mov
xlat
int
ja
jmp
in
loopne
push
xor
das
enter
mov
pushf
call
jne
inc
mov
sbb
push
pop
std
(bad)
or
loop
aaa
fsubr
add
retf
es
add
dec
inc
push
sbb
lods
xchg
inc
mov
inc
push
mov
lock
push
aad
pushf
dec
loop
inc
aam
sar
ins
test
out
lock
in
rcl
cmp
add
sbb
mov
lahf
repnz
mov
mov
push
xor
lahf
ror
shl
pop
pushf
movs
push
jb
inc
shr
ja
mov
jecxz
pop
cmps
aas
ss
lods
fadd
mov
or
outs
mov
lods
cs
jecxz
push
push
dec
into
pop
popf
xor
pop
call
mov
sbb
fsubrp
in
cmp
xchg
mov
shr
xchg
jae
scas
jbe
retf
mov
lods
scas
sar
sub
dec
jmp
jbe
out
retf
push
push
push
ret
push
cli
push
fstp
xor
pop
ret
dec
int
sub
scas
std
movs
test
int3
adc
(bad)
jb
adc
fwait
mov
shl
inc
cmp
xchg
rcr
retf
nop
out
sub
mov
mov
push
xchg
sbb
(bad)
rcl
sti
outs
push
inc
mov
mov
call
inc
or
outs
sbb
sub
scas
cmp
ja
sub
mov
jo
jmp
xlat
mov
sub
cwde
jmp
ds
mov
pushf
cmp
lock
xor
stos
push
mov
enter
enter
stos
mov
and
xchg
and
pop
and
xchg
cmc
adc
cmp
sub
inc
clc
popa
test
hlt
inc
jp
pop
xchg
inc
xchg
fs
nop
les
cmp
in
adc
push
mov
push
jns
idiv
lods
add
and
enter
cmp
(bad)
movs
sti
adc
or
push
pop
mov
and
pop
pop
int
jmp
movs
gs
pop
sbb
add
clc
sbb
sub
test
sti
push
clc
jle
test
addr16
adc
lea
(bad)
mov
lock
dec
icebp
retf
test
clc
add
das
cdq
aam
test
les
jns
rcr
in
in
adc
xor
sub
(bad)
pop
(bad)
adc
outs
sbb
mov
lea
mov
sbb
xlat
push
arpl
mov
imul
inc
mov
outs
add
sbb
inc
pop
sub
jle
push
and
push
scas
adc
mov
test
iret
xchg
mov
mov
imul
dec
push
dec
fsub
cmc
fwait
inc
mov
repz
mov
mov
pop
jne
mov
test
jno
sbb
jb
(bad)
mov
lds
and
leave
sbb
xchg
stos
pop
mov
add
cld
inc
xor
ss
iret
push
sahf
jo
jmp
push
xor
stos
or
jmp
in
leave
mov
call
cmp
pusha
das
icebp
ins
and
sbb
in
(bad)
fs
imul
(bad)
shl
mov
sbb
xor
jnp
or
and
and
jmp
test
xor
aam
add
and
xlat
aaa
es
jnp
sub
fcom
mov
xor
cmps
jbe
xor
jp
and
movs
aam
xchg
inc
nop
das
sahf
mov
or
push
fidiv
inc
test
bnd
cmp
outs
adc
inc
call
lock
js
cli
jnp
cmps
push
sbb
and
rcr
xchg
outs
and
adc
ret
shl
sbb
es
scas
xchg
sbb
or
scas
shl
dec
scas
xor
or
adc
jge
shl
or
daa
adc
clc
cmp
in
push
mov
call
movs
lock
mov
rcl
stos
or
lods
mov
popf
lds
lahf
cmp
stos
test
in
xlat
and
jmp
outs
mov
aad
inc
cs
inc
mov
dec
pop
push
jle
icebp
mov
shl
sbb
inc
pop
gs
lods
stos
mov
jo
retf
push
mov
and
sahf
lahf
stc
imul
cmp
ja
mov
push
mov
cmps
(bad)
mov
xor
aaa
push
repz
dec
adc
and
cmp
arpl
imul
cmp
dec
in
xor
jp
mov
xor
out
dec
imul
xchg
mov
pop
mov
xor
fidivr
and
fs
jne
fist
jl
fdiv
jb
jae
out
adc
mov
sbb
outs
ja
cmc
mov
je
pop
add
lds
lods
push
stc
push
pop
adc
les
outs
jecxz
aam
xchg
adc
pushf
mov
ss
adc
adc
hlt
cmp
mov
fisub
sbb
jmp
mov
jno
push
loopne
(bad)
sbb
ds
in
fwait
add
adc
push
(bad)
jno
cmc
js
cmp
inc
cli
xchg
imul
into
push
arpl
neg
inc
repnz
(bad)
hlt
add
movs
pop
xchg
dec
ss
adc
mov
push
or
xchg
pop
adc
in
ins
cmc
mov
or
fs
rcl
ins
cmp
ds
add
repz
les
dec
push
daa
dec
jmp
fmul
pop
mov
push
or
int3
scas
cdq
add
loopne
jp
ins
xchg
xlat
imul
xor
inc
ret
imul
and
je
cmp
push
in
cli
hlt
sbb
push
push
pop
jb
mov
outs
sub
mov
jb
xor
loop
dec
jl
std
push
jno
sub
retf
cmp
test
ins
mov
sub
push
test
xchg
push
in
jmp
mov
leave
bnd
adc
fwait
push
bound
sub
rol
(bad)
in
retf
mov
xor
aaa
jae
push
pop
or
gs
and
int
add
push
or
and
repz
mov
jp
fwait
push
mov
jbe
or
loope
xchg
push
stos
xchg
ss
pop
or
je
daa
push
call
iret
icebp
mov
push
out
xor
into
xchg
(bad)
and
cmps
cwde
(bad)
cmp
popf
lock
cdq
add
aad
out
das
jp
inc
ficom
mov
outs
xchg
mov
arpl
inc
addr16
rcl
sub
jp
jno
xor
fmul
jno
and
aas
jmp
mov
sbb
outs
push
inc
inc
test
mov
push
xor
div
outs
cwde
xchg
inc
popa
test
sub
lods
jno
mov
sahf
bound
in
(bad)
ficom
je
jmp
push
mov
ins
rol
mov
xor
xchg
mov
es
or
inc
cmp
(bad)
fld
fbld
in
dec
push
(bad)
fyl2xp1
imul
pushf
mov
add
lods
cmp
mov
adc
in
and
imul
mov
lea
pop
popf
hlt
dec
cli
and
add
xchg
pop
out
add
mov
sbb
adc
push
and
mov
test
push
mov
inc
loope
cmp
jo
clc
stc
ins
lds
jnp
jmp
test
movs
imul
or
pop
cmp
and
fcmovnu
fisubr
cmp
(bad)
lea
cmp
mov
arpl
mov
xchg
test
sbb
jbe
popf
je
loop
xchg
fnstsw
mov
repz
xor
adc
and
loopne
into
ja
ret
sti
in
inc
popa
jne
in
mov
xor
jg
stc
adc
out
in
push
and
and
add
retf
dec
cmp
(bad)
ss
mov
js
push
add
jmp
(bad)
mov
popw
sbb
in
sub
cmp
inc
jne
popa
cmp
push
pop
or
jne
or
and
arpl
cs
add
mov
fdivr
push
dec
div
in
fidiv
dec
lahf
pop
push
stos
mov
int
push
scas
bound
mov
and
out
jecxz
jno
cwde
and
inc
or
add
popf
and
adc
(bad)
mov
mov
pop
movzx
lods
xchg
pop
push
scas
fld
sbb
push
push
jnp
int3
sti
mov
in
jmp
pop
xchg
mov
lods
call
(bad)
pop
jecxz
mov
les
inc
test
mov
jmp
pop
mov
aad
nop
sbb
and
cwde
pop
push
fwait
xchg
(bad)
mov
test
adc
inc
jecxz
xchg
add
mov
movs
inc
sub
pushf
pop
call
xchg
lahf
dec
xor
std
xor
not
lea
jo
push
mov
jp
pop
or
sar
(bad)
or
es
xor
sub
fdivrp
xor
push
fs
or
sbb
lods
sar
cli
outs
xlat
mov
arpl
loop
or
dec
cmp
xor
rcr
cmc
push
ret
or
jb
ss
seta
fnsave
xchg
and
std
mov
in
leave
sub
clc
lock
jge
imul
sub
hlt
data16
and
(bad)
cmc
push
inc
data16
inc
movs
sub
jnp
mov
mov
push
pop
(bad)
xor
retf
push
xor
inc
push
cmc
(bad)
fidiv
mov
addr16
and
shl
and
jp
pop
out
mov
into
inc
cli
popa
movs
and
xchg
or
push
fist
and
inc
xor
mov
(bad)
mov
into
dec
cmp
test
push
or
out
lock
sbb
jecxz
xchg
arpl
popf
or
mov
sti
cs
mov
das
xor
jmp
jb
cli
(bad)
loop
popa
jmp
aaa
adc
sbb
lea
mov
pop
adc
push
adc
call
movlps
int3
into
cmp
or
push
push
inc
je
ficomp
movs
(bad)
outs
xlat
lods
push
inc
stos
sub
or
popf
mov
sub
cmps
mov
cwde
pop
repz
repnz
movs
mov
jae
outs
(bad)
jecxz
jmp
dec
ss
in
dec
sbb
dec
dec
adc
fistp
xor
mov
mov
push
xchg
cmp
aad
sub
xchg
mov
xchg
and
add
and
adc
clc
push
inc
je
inc
clc
lock
pop
das
cmp
or
and
gs
pop
cmp
imul
retf
mov
arpl
add
mov
ds
sub
aaa
out
pop
mov
hlt
daa
sub
cmps
xchg
jmp
xor
sar
repz
fbstp
into
xchg
push
and
sub
ins
jl
imul
mov
cmp
(bad)
iret
sub
(bad)
sub
mov
fidiv
lock
(bad)
inc
sar
mov
mov
add
int3
nop
aam
je
mov
adc
sbb
movs
jmp
gs
fbstp
mov
sub
outs
push
dec
jecxz
sub
and
popf
jmp
(bad)
out
add
xchg
or
push
scas
movs
imul
es
add
mov
inc
dec
inc
mov
mov
in
stos
daa
add
ss
jae
xchg
xchg
xor
cmp
shl
mov
pop
push
jns
cs
div
stos
ja
lods
mov
sub
pop
(bad)
pop
jnp
rcr
stc
call
repz
sbb
fs
out
sub
(bad)
sbb
xor
aaa
loop
(bad)
loopne
and
adc
push
push
outs
in
adc
aam
inc
xor
xor
fstp
xchg
xor
addr16
adc
outs
push
mov
lods
or
sbb
pop
cmp
push
lds
xchg
in
shl
fisubr
stc
(bad)
(bad)
fsub
inc
sub
push
cdq
inc
cmc
add
xor
dec
retf
pushf
repz
inc
out
repnz
imul
jnp
outs
int
pushf
jp
or
mov
repnz
sbb
iret
mov
popf
mov
mov
ins
in
dec
pop
xchg
xchg
retf
lods
adc
lds
jno
repz
ret
call
mov
mov
fcmove
inc
inc
push
xchg
jmp
jmp
push
test
mov
push
jecxz
fdivr
cmp
loope
mov
out
call
jmp
mov
jmp
xor
lahf
jns
jmp
inc
mov
scas
adc
fucomip
outs
popa
jns
arpl
inc
lds
sbb
xchg
cli
mov
jmp
push
and
pop
mov
xor
cmps
mov
push
nop
xchg
and
inc
mov
fcomi
test
dec
inc
and
arpl
je
loop
jne
lds
dec
cli
mov
mov
jae
ds
scas
pop
inc
in
push
mov
mov
sub
mov
push
sar
pop
sbb
imul
fbld
and
inc
int
ret
inc
lahf
inc
xchg
mov
add
call
inc
in
rcr
inc
adc
sbb
ror
fwait
(bad)
std
mov
repnz
mov
inc
test
xchg
movs
and
cmps
cmps
adc
xor
mov
into
js
(bad)
rol
das
pop
add
in
or
sub
xchg
shl
stos
stos
shl
test
repnz
xchg
(bad)
js
and
jmp
inc
aam
push
test
or
push
call
or
cmp
mov
outs
into
cmp
dec
or
jns
loope
ss
sbb
push
loopne
call
stos
sti
mov
mov
mov
mov
jmp
mov
inc
dec
pop
es
lods
fmul
sub
add
loope
fwait
sbb
xor
inc
bound
mov
xor
arpl
add
inc
xor
lods
call
mov
rol
mov
add
cli
push
in
push
cs
inc
cmc
fistp
shl
aaa
jne
mov
aaa
or
cmc
ret
mov
and
scas
movs
leave
movs
xchg
push
std
push
adc
pop
or
cmps
pop
pop
jmp
gs
sbb
fist
xor
inc
push
lods
jp
pop
in
pop
jb
cmp
aad
and
pop
pop
enter
dec
add
leave
fwait
ins
call
xchg
(bad)
sbb
ds
adc
dec
push
sbb
jge
push
cmp
pop
xor
jmp
or
sub
int
mov
pop
xor
add
cmps
repz
es
hlt
mov
push
jmp
cmp
cmc
inc
iret
cmp
push
jle
inc
sti
and
sbb
cdq
mov
mov
and
and
jl
add
pop
lods
ja
(bad)
push
inc
dec
mov
outs
ins
mov
sub
popf
mov
cld
sub
call
nop
pop
cmp
xchg
xchg
xchg
add
push
out
fistp
pushf
or
not
retf
push
pop
test
fimul
sub
mov
sar
jl
in
(bad)
mov
retf
(bad)
out
sti
cdq
sti
xor
mov
inc
and
xchg
sbb
sbb
scas
cs
inc
and
mov
fucom
cmp
ret
and
pushf
sub
jmp
sbb
jmp
stos
scas
mov
push
and
(bad)
cmp
xor
or
and
int3
or
cmp
jne
add
imul
push
ror
jno
push
and
mov
out
std
pusha
mov
lods
cs
ror
add
and
clc
pop
sar
cld
cmc
adc
mov
fdiv
idiv
mov
test
data16
jp
ss
dec
ret
hlt
adc
xchg
push
mov
or
jmp
fs
sub
test
jns
bound
jnp
cli
adc
sub
into
xor
inc
outs
jns
add
cmps
scas
in
test
sti
dec
stos
jmp
popf
and
(bad)
jbe
adc
das
(bad)
or
dec
jl
ret
inc
fld
icebp
dec
cmp
stos
pop
jge
mov
cmp
mov
dec
ds
sbb
pop
push
sbb
enter
aaa
outs
cmc
or
jne
cs
movs
js
or
mov
imul
mov
shl
mov
xchg
cwde
sub
lea
push
cwde
out
js
not
fsub
scas
jp
xchg
mov
or
and
aas
push
or
mov
int3
pop
jle
push
mov
les
test
jo
inc
lock
stc
sbb
pop
icebp
jne
frstor
mov
jne
ins
ror
and
sub
dec
nop
add
cmps
and
stos
cmp
dec
scas
sahf
in
and
shl
fimul
repnz
push
icebp
mov
sbb
pop
push
call
leave
in
enter
dec
sar
push
inc
gs
outs
jne
cwde
lds
mov
cmp
mov
mov
jne
ins
xchg
xchg
mov
xchg
mov
push
nop
mov
out
icebp
jl
xor
inc
inc
mov
dec
dec
cmp
aam
fdiv
nop
fwait
out
mov
jae
rol
adc
push
cmp
xlat
mov
dec
mov
into
out
mov
xchg
jle
jle
sbb
(bad)
mov
cli
pop
fs
mul
pop
popa
mov
(bad)
cli
cmp
jecxz
cld
and
mov
inc
scas
mov
adc
addr16
mov
cli
fdivr
retf
xchg
cmc
test
or
cld
jb
push
and
mov
sahf
arpl
(bad)
in
mov
mov
out
fisub
lds
leave
pop
jbe
inc
or
mov
inc
js
xor
pop
pop
ret
push
push
loope
outs
in
push
in
push
lods
fs
mov
int3
sub
xchg
mov
xchg
xor
adc
leave
enter
add
out
les
ins
lea
push
jne
pop
(bad)
ss
ds
test
sub
lods
loopne
(bad)
stc
stc
rcr
lods
mov
(bad)
mov
mov
stos
dec
sbb
xor
(bad)
ds
sub
cmp
xchg
cmp
inc
cdq
or
call
jge
and
sti
lock
test
popf
and
cmps
mov
xchg
sub
xchg
xchg
add
add
or
mov
xchg
sbb
push
leave
adc
sub
adc
mov
test
shr
or
jne
xchg
jns
xchg
xchg
push
retf
in
outs
jmp
repz
outs
out
jg
shl
test
jecxz
dec
jge
cmp
cli
push
xchg
push
or
repz
repnz
fistp
mov
lds
ja
mov
jmp
test
push
fs
das
mov
iret
pop
(bad)
pusha
adc
(bad)
(bad)
out
enter
xchg
adc
call
mov
cwde
pusha
cmp
or
push
movs
adc
mov
push
push
mov
jmp
add
inc
pop
stos
jns
xchg
out
jns
pusha
inc
xchg
(bad)
mov
int3
xchg
stos
mov
xor
mov
cmp
ret
dec
jne
mov
jg
gs
sub
inc
mov
jg
cmp
push
loopne
fs
add
nop
inc
cwde
push
mov
mov
pop
in
leave
fsub
fadd
aas
(bad)
push
pop
jge
dec
xlat
push
(bad)
cmp
je
(bad)
es
retf
add
add
jns
jl
ror
pop
loope
jmp
add
ins
or
push
jne
cli
xor
sbb
pop
int
clc
ror
mov
sbb
sbb
(bad)
jns
imul
ss
test
cmp
or
cld
std
fnstcw
stc
and
lods
sti
pop
pop
sbb
jne
mul
adc
sbb
test
test
and
fisttp
jo
imul
imul
jmp
jp
dec
xchg
imul
sti
xchg
and
mov
cmp
adc
pop
pop
sub
lock
test
ret
pop
imul
jno
mov
inc
jno
ds
daa
out
sbb
scas
sbb
movs
mov
ror
jmp
push
aad
shl
push
aas
push
add
xlat
cmp
cli
dec
repnz
sub
jo
repz
gs
out
cmp
sar
sbb
pop
adc
jbe
jnp
adc
and
sbb
sbb
sahf
mov
sub
push
jnp
mov
inc
mov
rcl
fist
retf
scas
and
mov
dec
scas
stc
jns
push
sub
aas
shl
loop
cmps
cmp
push
popf
xor
jmp
iret
dec
and
cmp
adc
jmp
stos
test
nop
lds
int
ins
lods
call
mov
pop
call
inc
scas
clc
mov
push
mov
movs
loopne
ja
jecxz
xor
adc
(bad)
pop
add
iret
fbld
push
mov
mov
lea
cmp
cmps
inc
call
cmp
cmp
rol
loopne
loopne
cmp
gs
and
call
ror
add
arpl
out
xor
push
xor
cmps
int
jmp
test
sahf
add
ins
shl
cwde
lock
aam
pop
cwde
jnp
fmul
pop
int3
sbb
hlt
push
cmps
clc
pushf
add
and
pop
(bad)
jae
sbb
cwde
pop
push
push
pusha
mov
fwait
add
and
ins
mov
loop
aas
adc
les
imul
xchg
mov
xchg
or
push
test
adc
jne
mov
jp
jnp
shl
fmul
loopne
jbe
fbstp
es
inc
pusha
jbe
add
cmp
inc
pop
or
or
push
es
mov
and
cmp
mov
(bad)
dec
mov
mov
(bad)
xor
mov
add
mov
retf
retf
adc
popa
jecxz
cwde
ret
inc
inc
out
jno
push
push
xor
pop
imul
or
retf
push
pop
cmp
ins
test
ja
cmp
cmp
fdivr
enter
mov
and
jl
jp
gs
fcmovbe
in
ds
bt
and
xchg
leave
pop
enter
mov
mov
jno
pop
push
ins
xor
mov
call
ror
jp
scas
mov
push
loop
mov
stos
inc
in
add
ss
add
xchg
jnp
sahf
push
inc
cmps
cs
mov
out
(bad)
fwait
bnd
sbb
inc
je
aad
xor
sbb
arpl
popf
stos
(bad)
dec
arpl
test
mov
loop
fnstsw
sub
pop
inc
std
lock
push
cmp
pop
xchg
ret
rcl
scas
or
fst
xchg
lds
jge
fs
inc
(bad)
dec
icebp
loopne
and
mov
rcr
or
sbb
retf
push
pop
enter
xchg
sbb
(bad)
sub
and
xor
repnz
push
jp
mov
cs
imul
jno
pop
nop
mov
ret
xchg
test
mov
mov
adc
clc
pop
mov
mov
rcl
std
push
cmps
call
mov
int
bound
and
and
push
or
daa
cmp
dec
jge
jbe
fiadd
sbb
shl
mov
shr
xlat
cs
push
aam
aas
sub
in
dec
mov
cmc
push
mov
fadd
outs
inc
aad
sbb
int
jle
sbb
neg
xchg
aaa
es
push
jmp
fiadd
inc
jge
cmp
stc
or
dec
imul
loope
fcomp
adc
and
push
call
pop
outs
adc
leave
dec
pop
dec
pushf
jae
xor
inc
jne
stc
in
mov
call
inc
imul
and
lods
stc
rcl
xor
or
stc
jge
sub
push
sub
or
fwait
out
mov
mov
xchg
ret
pop
or
push
inc
ror
repz
mov
xor
dec
imul
out
imul
push
mov
sbb
retf
pop
imul
aad
stc
mov
movs
cmps
cmps
inc
mov
frstor
cmps
push
in
inc
lods
ins
pop
jmp
fxtract
and
dec
ret
sahf
jmp
dec
rcr
ds
push
push
cmp
and
idiv
jmp
movups
pop
or
xor
cmp
test
dec
inc
fcom
xchg
push
cmc
into
dec
js
sub
mov
add
imul
fwait
mov
adc
inc
push
or
ror
rcl
frstor
mov
ret
stc
cmp
lods
inc
cmp
lods
cmps
and
in
fbld
and
aas
test
mov
movs
outs
dec
fwait
adc
add
test
mov
stos
cld
cs
sbb
inc
push
sub
in
push
push
pop
test
out
icebp
fsubr
retf
or
xor
int3
pop
outs
mov
inc
ins
loope
gs
or
dec
nop
mov
and
add
ins
mov
mov
and
cmp
xor
mov
dec
dec
adc
dec
sbb
and
fcomp
jmp
lds
xchg
jnp
mov
or
push
jnp
movs
dec
mov
adc
cmp
ins
dec
mov
icebp
stc
mov
scas
jg
dec
mov
(bad)
pop
mov
add
sub
inc
push
mov
sub
sub
lea
(bad)
je
fidiv
mov
fidivr
xchg
jge
sti
call
stos
iret
les
cmp
mov
lfs
lea
les
push
ret
pop
aam
lahf
pushf
test
test
aas
in
enter
je
pop
pop
jp
cmp
shl
dec
pop
out
and
xchg
data16
fyl2x
stc
iret
add
jmp
int3
inc
pop
lods
test
jbe
push
cmp
sub
cs
inc
pop
pop
outs
or
push
mov
and
es
jmp
or
frstor
and
jmp
mov
or
scas
mov
pop
cdq
cmp
xchg
adc
sub
mov
in
cmp
sub
push
cmc
movs
out
stos
shl
dec
mov
pop
push
ins
test
popa
(bad)
dec
retf
retf
adc
aas
sub
int
or
out
ja
test
int3
xor
pop
es
ret
repnz
mov
bound
pop
sbb
lds
popf
inc
add
mov
jecxz
retf
inc
fsub
xchg
in
mov
jno
sbb
aas
fcmovu
rol
icebp
pop
xchg
jle
push
cmp
dec
std
pop
jge
les
mov
xor
mov
in
je
add
dec
jle
daa
sbb
std
pop
jmp
out
(bad)
mov
mov
sbb
cmp
xlat
jge
iret
hlt
adc
and
rcr
(bad)
adc
inc
mov
mov
das
(bad)
fbstp
in
stos
daa
ror
movs
inc
pop
pop
test
add
and
jecxz
test
int
xchg
pop
cmp
fptan
in
stos
xchg
movs
mov
add
into
inc
mov
in
test
push
xor
(bad)
jmp
pop
pop
pop
xchg
mov
mov
sub
gs
out
std
ja
(bad)
mov
fwait
dec
mov
sbb
shl
pop
cmp
shl
retf
xor
xlat
test
popf
dec
cmp
xchg
call
jge
adc
jp
jo
inc
iret
inc
loopne
and
ss
in
(bad)
imul
push
jg
dec
and
popf
icebp
dec
pop
add
retf
mov
push
fs
xor
dec
sub
pop
lahf
inc
rol
test
dec
ror
adc
jmp
xor
out
jl
fs
into
xor
mov
inc
xchg
sub
mov
movs
lahf
cwde
(bad)
and
push
aam
dec
fild
out
ror
lock
pop
xor
cld
xchg
cli
enter
cdq
nop
mov
and
movs
mov
dec
adc
cdq
mov
and
test
fs
retf
dec
inc
pop
inc
bound
push
jmp
loope
rcl
push
and
int
xchg
dec
jb
dec
lods
xchg
pop
xchg
shr
mov
scas
dec
sbb
imul
std
int
aad
or
mov
push
jne
outs
push
popa
out
jp
xchg
cwde
aam
cmp
push
ins
xor
mov
xor
jp
mov
mov
pushfw
fcomp
dec
and
das
test
adc
cdq
stos
cwde
xchg
xchg
daa
pop
mov
into
add
pop
cld
addr16
fdivr
cwde
adc
pop
mov
dec
rcl
cmp
adc
leavew
inc
stos
loopne
and
sbb
ret
loopne
sbb
or
imul
or
sbb
int3
pop
pop
xor
pop
jg
nop
(bad)
loopne
sub
loopne
sti
ror
and
cld
jnp
xor
jae
push
cmps
mov
xlat
pop
stos
mov
cmp
in
ins
mov
add
push
aad
repz
and
out
outs
inc
test
iret
ret
pop
push
ret
push
jp
std
repnz
test
gs
cld
dec
fldenv
mul
stc
or
dec
adc
test
scas
(bad)
or
or
jl
jbe
loope
adc
outs
retf
push
push
sub
in
push
sbb
daa
push
popa
cwde
cld
mov
outs
push
jecxz
(bad)
fild
and
cwde
inc
add
push
jo
div
push
sbb
cmc
cli
shl
hlt
and
icebp
sar
jae
and
cld
jb
ds
jle
(bad)
outs
mov
stos
fldcw
or
test
xchg
cld
xor
adc
pusha
div
or
daa
int3
xchg
dec
retf
mov
cmp
or
or
idiv
mov
cmp
lahf
adc
adc
cmp
mov
popa
xor
imul
push
enter
ss
mov
push
mov
fstp
xor
adc
movs
ins
scas
sub
sub
leave
cmp
push
outs
or
shl
mov
int3
add
movs
mov
lock
jmp
add
push
in
adc
mov
mov
pop
in
ret
push
and
push
dec
cmp
fild
cmp
fdivr
sub
bound
loop
mov
fistp
fisttp
aaa
mov
scas
ss
add
ret
fnstcw
and
jmp
dec
addr16
adc
and
mov
lock
pop
mov
lahf
addr16
(bad)
mov
sub
inc
xchg
hlt
sub
inc
or
add
aam
(bad)
(bad)
jle
cli
call
aam
lods
nop
jo
mov
or
(bad)
lea
int
fwait
inc
ins
push
cli
pop
sub
mov
dec
xchg
and
adc
fwait
neg
mov
jl
jb
sbb
call
jp
mov
iret
pop
loope
and
xchg
push
xchg
shl
sbb
add
inc
sub
stos
pop
cmp
and
test
cmp
or
loopne
(bad)
shl
int3
mul
push
ja
adc
lea
or
cmps
xor
mov
cmp
daa
mov
cmp
xchg
and
fwait
mov
adc
jo
imul
cmp
lds
aam
div
push
jmp
and
rcr
daa
xchg
sahf
ja
and
ret
sar
arpl
mov
lock
repz
dec
cmp
xchg
sub
cmp
call
fdivr
dec
les
cld
jl
xchg
out
rcl
xchg
arpl
or
cmps
fstp
cmp
xor
pusha
push
cmp
push
sbb
jnp
fcomp
pop
jecxz
aad
data16
and
sbb
cli
jmp
ficomp
push
mov
and
xchg
cli
cmps
cmps
cdq
jl
inc
jae
and
jle
cmp
xchg
sub
jae
jmp
call
push
iret
pop
or
outs
jns
popa
jne
xchg
fucomip
das
add
mov
adc
or
or
cmp
mov
pop
sti
loop
call
jns
sar
sbb
xor
xchg
xchg
add
cwde
mov
(bad)
dec
or
stc
mov
(bad)
xchg
push
jg
sub
sub
xchg
les
cli
std
popa
dec
jne
js
cmp
ins
sbb
rcr
das
sbb
hlt
jno
push
aam
fs
mov
sbb
pop
or
jne
and
imul
jae
mov
aad
arpl
shl
cmp
ss
mov
dec
je
xor
ja
pop
cdq
xchg
cld
cmp
mov
sub
dec
shl
mov
push
ja
cmps
inc
das
jae
call
fwait
sbb
sub
xor
adc
retf
fmulp
stos
or
cmps
imul
mov
push
mov
inc
outs
imul
or
jne
sub
icebp
jnp
pop
mov
jbe
adc
rcl
in
mov
mov
loop
pop
mov
iret
das
imul
fnstenv
out
addr16
fisub
in
cli
adc
add
daa
inc
pushf
imul
fsub
push
dec
sbb
imul
sbb
jae
sbb
movs
and
frstor
and
sub
std
push
add
iret
mov
cmp
xchg
xchg
mov
das
mov
pop
fs
jbe
mov
ss
scas
pusha
push
fs
js
pop
push
call
mov
outs
mov
je
clc
xor
push
stos
fnstcw
mov
or
xor
hlt
es
movs
imul
fiadd
add
push
pop
dec
mov
sahf
dec
cmc
mov
ja
xor
xchg
sbb
imul
sub
leave
std
and
dec
inc
xchg
or
and
pop
or
sub
xchg
loope
push
jo
mov
ss
add
jg
mul
xor
inc
stc
push
repz
adc
outs
std
mov
inc
and
rcl
call
mov
arpl
mov
out
cli
mov
arpl
mov
stos
lods
lock
pop
ror
iret
mov
mov
das
pop
dec
jg
ret
push
and
fmul
push
cwde
ds
inc
cmp
cmp
xchg
inc
pop
icebp
pop
mov
mov
das
add
sbb
add
ss
dec
ja
mov
adc
and
push
out
pop
out
mov
and
nop
hlt
xchg
sahf
retf
pop
adc
cwde
bound
imul
xchg
xchg
fild
es
mov
pop
pop
pushf
mov
jl
loop
mov
scas
adc
in
outs
push
leave
inc
shl
cmp
out
test
sahf
dec
inc
inc
inc
js
cmp
mov
sar
iret
loopne
sub
addr16
out
retf
mov
out
mov
rcr
nop
pop
cmps
sbb
imul
mov
mov
call
sub
ins
ss
leave
sbb
jbe
inc
out
daa
mov
aaa
cld
or
imul
mov
mov
add
(bad)
jmp
mov
mov
movs
shl
shl
(bad)
(bad)
ds
hlt
cmp
push
(bad)
fsubr
mov
sbb
ss
ins
cmp
and
push
lock
out
ins
(bad)
jnp
or
mov
mov
inc
scas
xchg
out
mov
js
js
nop
dec
daa
xchg
ret
xchg
adc
out
pop
xor
aad
sbb
scas
dec
xor
ins
or
test
push
loop
sub
xchg
push
and
or
add
shr
pop
jl
loopne
jo
inc
push
fdiv
test
aam
sub
and
imul
rcl
pop
xor
daa
sbb
inc
ror
(bad)
inc
in
scas
add
mov
cli
sbb
dec
movs
mov
sbb
jp
fwait
jp
mov
sub
into
and
adc
out
outs
mov
test
fisttp
jl
retf
(bad)
inc
sub
test
mov
into
in
xchg
popf
test
mov
pushf
dec
outs
jno
xchg
repnz
ret
icebp
add
push
ret
pop
add
arpl
std
adc
fmul
test
pusha
mov
fsub
rol
leave
push
cli
cld
mov
imul
es
mov
js
loop
adc
xchg
xchg
mov
inc
sub
outs
jp
lods
mov
sub
fwait
cmc
and
pop
in
retf
jnp
repnz
stc
out
add
int3
popf
ret
xchg
aaa
ror
retf
cmps
mov
add
push
mov
test
cli
adc
jo
and
or
out
and
mov
jno
ja
int
fcmove
sub
ja
iret
(bad)
arpl
dec
sub
push
je
sub
mov
lods
jge
jmp
aam
in
adc
(bad)
pop
int3
push
push
push
jb
xchg
retf
clc
dec
add
mov
adc
cmp
mov
mov
arpl
sbb
js
sahf
and
mov
test
jns
mov
(bad)
shl
test
out
imul
movsx
jbe
neg
and
rol
aaa
jle
mov
(bad)
std
or
fsubr
xor
mov
add
cmp
(bad)
dec
sub
push
pop
inc
lahf
or
xor
xchg
or
ins
mov
dec
cli
popa
or
movs
sbb
or
mov
xchg
hlt
jge
call
push
push
(bad)
jg
sbb
cs
enter
fwait
jnp
mov
popa
retf
pop
mov
jg
adc
fwait
(bad)
cld
mov
sbb
or
push
pushf
stc
adc
cwde
jl
mov
adc
test
std
mov
sub
adc
mov
sub
sbb
adc
gs
pop
jle
imul
fild
jecxz
in
jb
mov
adc
xchg
push
(bad)
cmp
repnz
xor
dec
imul
and
out
mov
cmp
outs
dec
fild
push
sub
add
sbb
add
or
sub
pusha
or
mov
test
(bad)
xchg
repz
sbb
int3
adc
mov
push
adc
mov
ss
outs
fisttp
imul
retf
rcl
frstor
loopne
ret
jmp
popa
lea
dec
loope
mov
in
inc
push
(bad)
xchg
ins
xchg
mov
sbb
lds
int
xchg
aas
and
mov
mov
xor
sub
mov
idiv
push
lds
rcl
test
lods
sbb
xchg
fwait
movs
dec
mul
inc
fabs
mov
fsubr
hlt
push
push
sub
mov
ja
(bad)
scas
inc
enter
or
cdq
pushf
pushf
jmp
mov
xchg
test
cmp
adc
mov
popf
and
mov
push
or
mov
push
pop
aad
push
jne
out
outs
push
jg
jl
cmc
add
dec
retf
adc
mov
call
xchg
fcmovnbe
push
and
pop
aam
gs
rcl
cs
mov
jmp
dec
lds
mov
pop
mov
push
xchg
mov
das
mov
mov
inc
push
hlt
and
mov
je
mov
hlt
pop
xor
and
ficomp
pop
push
int3
xchg
jne
push
or
es
add
jl
lahf
xchg
pop
popa
fmulp
ins
mov
pop
mov
cmp
inc
adc
aas
into
cmps
ja
dec
mov
pusha
xor
aam
adc
popa
and
cmp
sbb
sar
imul
or
inc
or
shl
inc
sbb
(bad)
enter
(bad)
push
scas
stos
pop
or
mov
mov
pop
jmp
xchg
xor
in
movs
into
stos
pop
fmul
call
je
xchg
mov
test
shl
or
cmp
rcl
sbb
or
ret
fnstenv
ret
es
stos
outs
xchg
adc
sbb
push
cmp
cmp
jle
pop
sti
xor
out
jns
outs
push
fisttp
idiv
cmp
xor
(bad)
adc
push
test
enter
addr16
mov
mov
inc
cmp
mov
sbb
sub
dec
out
xlat
push
scas
and
push
nop
cmp
inc
adc
ss
mov
(bad)
movs
imul
add
pushf
pop
inc
sub
icebp
dec
dec
xchg
adc
cs
cld
test
stos
(bad)
mov
mov
ss
imul
rol
inc
shl
push
pop
mov
push
std
aas
or
pop
leave
cmp
mov
push
aam
or
fcomp
jg
xchg
lock
dec
call
pop
les
jae
jbe
fwait
lahf
sbb
adc
mov
aam
xchg
jecxz
jl
clc
sahf
mul
or
aad
adc
pop
ja
sti
push
ds
test
pushf
cwde
lahf
adc
sbb
sub
call
dec
jge
int3
pop
push
mov
jns
xchg
inc
imul
pop
bound
or
aaa
and
xchg
xchg
sub
in
sbb
jge
and
add
sbb
cdq
or
sti
dec
loop
and
cmp
pop
inc
pop
repz
cmp
ja
loope
les
fadd
mov
inc
es
mov
mov
retf
gs
jno
jg
aam
cmps
loop
lods
xchg
cwde
add
xchg
ss
mov
out
add
enter
mov
and
cmp
ror
jmp
outs
inc
jno
push
mov
test
or
sbb
mov
cmps
dec
sbb
sub
jp
or
cmp
mov
xchg
ret
mov
fild
call
pop
xlat
add
sub
stos
inc
cmp
pop
dec
fistp
inc
in
mov
mov
xor
jmp
aaa
xchg
call
test
push
mov
fsubr
cmp
js
adc
outs
in
sbb
lods
adc
mov
sbb
je
jmp
(bad)
mov
jl
mov
cmp
pushf
(bad)
sbb
aad
pop
fs
rol
xor
inc
xchg
mov
mov
jnp
xor
dec
ds
(bad)
mov
mov
retf
xor
in
add
nop
xchg
mov
fidivr
bound
inc
iret
sahf
cld
(bad)
sub
sub
mov
daa
push
inc
fisttp
scas
mov
cdq
xchg
sub
icebp
xor
out
aaa
idiv
lahf
test
out
pop
movs
add
lods
ja
or
dec
pop
mov
fstp
xor
(bad)
add
rsqrtps
cmc
fidivr
test
in
sub
rol
pop
pop
js
cmp
ror
cmp
test
movs
mov
pop
stc
mov
or
dec
fiadd
scas
or
cmp
cmp
push
jmp
iret
shl
cmp
iret
pop
xor
ret
pop
xor
push
pop
mov
pop
xchg
std
mov
dec
je
pop
out
outs
call
mov
mov
mov
adc
and
cmp
jns
neg
sub
pusha
push
addr16
pop
cmp
push
xor
jbe
lods
mov
gs
stos
jmp
jae
pop
fwait
cmp
icebp
and
fld
not
dec
scas
sub
jge
loope
test
xchg
call
adc
add
jl
pop
sub
int
cld
and
or
and
sbb
imul
call
call
xchg
pop
stos
pop
out
mov
and
scas
int
rcr
lds
test
mov
inc
mov
ret
ret
(bad)
lock
bound
pop
stos
arpl
pop
mov
pop
sbb
xor
jno
mov
pop
cld
xchg
jne
ja
aam
xor
adc
jne
sbb
ja
xor
aas
inc
in
and
aas
sar
dec
imul
sub
into
push
hlt
ret
add
push
add
jo
pop
push
jno
dec
adc
cmp
je
shr
mov
sub
and
call
clc
xchg
bound
jl
sbb
ja
int
jp
cmps
pop
out
(bad)
jle
shl
and
push
dec
dec
mov
hlt
cmps
xor
mov
aam
rol
push
call
in
rcl
pop
test
jp
sub
xor
into
shr
std
(bad)
jbe
and
js
jne
adc
jae
push
mov
cmp
or
leave
das
outs
addr16
bound
(bad)
movs
cmps
movs
jmp
out
les
mov
pop
popa
lahf
neg
jg
cmp
dec
mov
mov
stos
mov
aaa
popf
shl
push
imul
test
jmp
mov
stos
inc
adc
aaa
pop
inc
lock
add
adc
pop
or
inc
inc
daa
sbb
push
mov
stos
xchg
or
and
(bad)
outs
icebp
jae
and
pop
inc
sti
stos
mov
idiv
cmp
cwde
iret
ret
mov
sub
and
mov
cmp
add
inc
out
loop
movs
retf
sbb
(bad)
ss
out
imul
shr
out
mov
sti
xor
mov
repnz
jnp
aad
in
pop
cmp
dec
xchg
dec
sbb
jg
test
mov
inc
out
xor
mov
popa
pushw
push
es
pop
(bad)
jge
mov
hlt
push
or
cli
call
mov
xor
ss
test
mov
(bad)
outs
or
pop
jb
or
jo
and
hlt
sti
mov
out
dec
lods
and
nop
jbe
cmp
pop
fxch
dec
cli
xchg
ret
pop
xor
pop
push
xchg
aas
or
stc
or
adc
scas
mov
adc
or
and
adc
dec
inc
outs
gs
test
imul
add
sbb
repz
push
inc
fst
sbb
mov
test
cmp
push
inc
fstp
fucomi
mov
cmp
cmp
xchg
adc
(bad)
xor
lea
sar
sbb
les
push
lods
jnp
or
push
push
mov
xchg
aam
jo
dec
jle
sbb
cmps
dec
mov
retf
les
adc
(bad)
int
mov
push
jmp
jnp
sub
sti
in
int
dec
jno
cmps
ret
mov
mov
xchg
(bad)
cdq
imul
and
je
adc
add
pcmpeqw
mov
enter
xchg
or
loopne
in
cli
inc
stc
xor
mov
sbb
inc
pop
add
xchg
loop
test
xchg
lds
push
or
fdivr
or
outs
ss
imul
push
mov
dec
aaa
fst
mov
out
in
cmp
jmp
sbb
add
inc
mov
jb
les
cmp
imul
adc
repnz
adc
loope
cs
cs
mov
retf
pop
and
mov
fist
jo
dec
lock
mov
pusha
aas
adc
fst
sub
inc
pusha
adc
mov
retf
shl
cld
jp
mov
mov
mov
(bad)
pop
arpl
inc
clc
out
mov
sub
xchg
or
xor
dec
cwde
dec
add
cld
rol
xchg
test
dec
jp
arpl
sahf
idiv
lahf
div
xor
xchg
sahf
or
cmp
dec
dec
sub
inc
inc
mov
push
leave
xor
bound
xchg
int3
add
fcmovnb
aas
and
lahf
mov
call
aad
mov
mov
push
mov
shr
pop
fisubr
sub
add
sub
lods
xor
or
pop
in
in
push
and
mov
sub
ret
popf
jl
popf
xchg
in
push
and
cmp
imul
cmps
pop
jne
into
or
dec
add
mov
std
in
push
sti
lods
and
mov
sbb
inc
cmp
sbb
mov
push
sbb
aas
movs
ja
mov
adc
outs
mov
enter
xchg
sub
jb
and
push
and
adc
pop
push
inc
ret
xchg
xchg
imul
jno
jo
push
cld
cmp
xchg
sub
jge
jle
push
and
mov
mov
jmp
imul
pop
stos
(bad)
int3
stos
jne
out
mov
mov
imul
xchg
xor
in
jo
add
ja
ins
test
ja
addr16
mov
mov
add
push
xchg
icebp
dec
cld
cld
lds
xchg
mov
and
(bad)
test
sti
out
inc
add
js
jecxz
or
rcl
idiv
das
pop
ret
retf
repz
push
clc
call
lea
xchg
(bad)
cmp
push
adc
push
dec
ins
cld
mov
ja
push
mov
mov
xor
scas
out
loope
ret
in
add
je
mov
push
cmp
jne
xchg
push
(bad)
movs
clc
cmp
fstp
fldenv
and
pop
mov
dec
(bad)
gs
xor
retf
dec
int3
pinsrw
addr16
setbe
push
xchg
mov
out
in
cmp
mov
mov
cli
xchg
inc
loopne
xor
rcr
adc
inc
shr
push
ja
in
mov
jno
sub
xor
fidivr
jge
push
adc
int3
xor
mov
push
pusha
jle
outs
addr16
mov
fsubr
mov
std
dec
inc
(bad)
out
jp
push
cld
mov
rcl
aad
call
fist
ja
repz
pop
or
loope
add
loope
sub
mov
push
xor
fsubrp
test
in
cmp
pop
(bad)
push
loope
inc
mov
in
push
(bad)
icebp
jl
cmp
jecxz
je
pop
aaa
mov
xchg
mul
mov
mov
pop
or
ss
rcr
mov
mov
xor
and
pop
(bad)
in
ficomp
jo
sahf
mov
or
lods
add
inc
sub
adc
pop
sbb
dec
mov
xchg
adc
movs
(bad)
pusha
sbb
sbb
cmp
push
push
push
dec
adc
cld
into
(bad)
ficom
scas
sub
call
cmp
mov
loopne
aaa
stos
sub
add
outs
repz
mov
retf
pop
jmp
div
add
jns
pop
jl
cmp
mov
ins
jmp
add
ins
test
pop
sar
jmp
and
sub
movs
or
in
out
pop
bnd
dec
sbb
cmp
stos
and
test
cmp
inc
sbb
dec
add
cwde
js
into
clc
or
loopne
movs
or
mov
arpl
mov
mov
dec
div
cs
and
(bad)
mov
outs
lock
ss
mov
out
cwde
sub
pop
jne
jb
nop
or
jge
mov
fwait
sbb
pop
fidiv
pop
dec
xchg
fisttp
cmps
out
inc
dec
js
add
lods
in
xor
daa
jbe
cmp
int3
inc
mov
mov
in
lds
rcl
push
dec
or
mov
out
sub
movs
neg
iret
sbb
nop
ss
mov
sub
add
ror
pop
ja
and
mov
inc
iret
push
call
add
fcmovnu
retf
stos
imul
and
fsub
sbb
add
mov
xchg
sbb
jno
shl
mov
das
movs
inc
leave
icebp
pop
cmp
push
cmc
rol
xchg
mov
ret
loopne
daa
mov
sub
test
push
xchg
mov
or
(bad)
call
jecxz
xchg
pop
sub
in
pop
pop
xchg
cmp
xchg
and
dec
sbb
fcmovne
rol
nop
mov
rol
loopne
inc
int
outs
inc
daa
hlt
sbb
pop
ror
ds
cmp
xlat
push
add
sub
push
iret
xor
push
add
(bad)
sub
cmp
cmp
or
bound
ins
out
test
push
jae
push
sub
pop
pop
jo
mov
outs
mov
push
jnp
and
mov
push
mov
out
push
xchg
xchg
or
jnp
pushf
stc
mov
test
inc
pushf
lock
jmp
out
push
out
cmp
in
ffree
test
push
das
loope
or
or
fadd
test
xchg
adc
aaa
adc
push
lock
adc
push
sahf
out
dec
xchg
pusha
sahf
fild
pop
scas
dec
lds
adc
mov
cwd
sar
push
(bad)
pop
and
jmp
cmp
jbe
daa
xor
jp
push
sti
mov
xor
enter
test
xchg
ret
push
dec
loope
and
jae
mov
adc
jmp
xchg
add
mov
je
loope
popf
xor
inc
outs
mov
push
nop
pop
cmp
ds
push
popa
push
movs
jbe
bts
std
mov
add
test
repnz
xchg
sti
cmpxchg
jo
mov
push
pop
out
cmp
xchg
fidivr
repnz
outs
shl
xor
inc
adc
movs
bound
retf
jge
or
mov
push
movs
push
pop
ins
scas
xchg
adc
shr
or
pop
mov
and
adc
cmp
sub
sub
mov
ret
mov
ror
mov
xor
and
push
dec
dec
mov
push
mov
loope
test
mov
stos
jecxz
and
dec
data16
add
cmps
es
mov
in
push
pushf
mov
shl
xor
dec
xor
cli
push
cmp
add
fnstenv
test
jno
repz
xchg
sub
or
ror
test
mov
xor
pop
push
xor
enter
push
xor
stos
gs
(bad)
cwde
pop
loopne
test
jo
js
xor
(bad)
test
fs
hlt
fcmovbe
cmp
and
mov
lahf
push
jns
sbb
push
scas
into
xlat
aad
xchg
or
int3
gs
fs
jge
sti
out
cmp
(bad)
in
and
ret
ret
ja
pop
xchg
lods
cmp
mov
cld
xchg
dec
stos
int3
lea
ss
lea
cmp
call
mov
mov
push
xor
or
and
in
and
push
sub
cld
inc
ins
and
push
mov
out
or
ds
push
xor
cwde
outs
jo
mov
out
int
stos
imul
sub
add
adc
(bad)
int3
cmp
jmp
xor
mov
inc
ret
rol
cwde
mov
ja
xchg
mov
xchg
sti
(bad)
and
sar
rol
cs
mov
xchg
imul
fimul
das
inc
mov
imul
xchg
sar
sbb
inc
push
pushf
add
leave
xor
sti
xchg
inc
cld
xchg
ss
mov
shr
push
add
inc
cld
mov
xor
stc
inc
push
pusha
cmp
test
mov
mov
inc
and
repnz
aaa
movs
xchg
mov
mov
sbb
jmp
daa
mov
out
cmp
outs
sar
xchg
jns
pop
aad
cmc
dec
imul
int
call
dec
fcmovb
xchg
movs
das
mov
outs
inc
bound
sub
jb
xchg
jae
std
movs
ret
cmp
fcmovb
inc
dec
nop
mov
push
mov
xor
or
mov
sbb
xchg
stc
retf
lods
dec
bound
jns
scas
retf
fldenv
stos
lea
sbb
sbb
sahf
scas
xchg
sahf
cmps
test
sbb
sub
xor
stc
out
mov
pop
inc
sbb
inc
out
jnp
(bad)
jge
and
xor
or
pop
ins
mov
dec
cmp
enter
xchg
push
push
in
bound
jns
nop
iret
stos
mov
push
scas
jmp
jl
xchg
(bad)
lock
shl
pop
mov
cmp
jo
(bad)
mov
int3
sti
push
call
pop
jmp
(bad)
jle
pop
ja
les
fsub
or
in
test
xchg
mov
retf
pop
neg
pop
movs
(bad)
scas
dec
lahf
mov
rol
shl
adc
pusha
ficom
repnz
push
mov
rol
lds
jmp
mov
mov
jbe
mov
pop
cmps
(bad)
mov
sti
and
imul
in
xchg
xchg
aas
push
xor
(bad)
adc
daa
or
push
mov
sub
imul
fild
(bad)
fiadd
aaa
dec
mov
stos
cmc
vpshufhw
addr16
adc
pushf
mov
sbb
test
aas
xchg
ret
mov
imul
mov
shr
mov
inc
inc
dec
fmul
test
ins
aam
aaa
ds
pop
imul
jo
fnstsw
jg
jecxz
shr
adc
pop
aam
or
dec
sbb
pop
push
push
loop
push
pop
inc
jnp
mov
adc
push
jns
cmp
xchg
int3
ja
add
fs
and
xor
dec
sti
dec
xchg
imul
test
arpl
pop
mov
cmp
loope
fst
xor
jno
scas
and
xor
jb
mov
retf
mov
mov
ja
adc
aas
sahf
ja
out
xchg
xor
xor
div
out
cmp
push
not
ja
add
dec
or
mov
add
movntq
out
sub
inc
loope
add
jns
sub
add
leave
mov
cmp
inc
pop
dec
push
sysret
and
xchg
call
sbb
xor
test
push
lods
scas
xlat
jne
push
and
dec
stos
mov
xchg
popa
push
in
mov
or
mov
add
cmp
inc
fs
xchg
test
sub
adc
mov
sbb
mov
mov
adc
mov
fdiv
mov
sub
jne
xchg
dec
pop
push
mov
jne
sub
xchg
aam
call
cli
inc
inc
push
push
inc
retf
in
lods
stos
inc
ins
inc
and
retf
pushf
dec
and
pop
adc
stos
or
(bad)
jmp
sub
movs
jmp
mul
pop
or
lods
xor
fcom
ins
aaa
das
dec
test
xor
(bad)
int
mov
hlt
ja
sub
xchg
in
sub
push
into
lods
jnp
dec
hlt
out
call
pop
sbb
fdivr
addr16
cmp
push
cmp
push
lahf
les
pop
sub
popa
jecxz
pop
inc
loope
or
lds
inc
out
sub
ss
fbstp
sub
add
cmp
and
iret
out
(bad)
iret
cmp
xlat
mov
je
das
cs
sub
push
ret
xchg
and
push
mov
stc
pop
adc
arpl
inc
mov
int3
cmps
jnp
add
stos
xchg
out
jmp
retf
imul
xchg
push
repnz
or
std
out
(bad)
adc
pop
cwde
outs
xlat
dec
and
jno
imul
pop
enter
aam
or
cmp
mov
sbb
mov
xchg
mov
push
movs
cld
jl
mov
add
or
mov
je
test
xor
xor
push
fsubr
inc
push
loop
jge
adc
rcl
inc
mov
out
adc
jbe
mov
or
jecxz
das
xchg
aad
in
test
pop
or
dec
push
aam
popf
out
cdq
jmp
xor
sub
inc
adc
push
fsqrt
data16
loop
(bad)
fisub
inc
stc
retf
je
sbb
jnp
add
out
pop
xor
out
cmp
mov
imul
lods
xchg
pop
movs
mov
push
retf
out
lds
mov
popf
cmp
sbb
jno
out
adc
jbe
nop
ret
test
repnz
ds
adc
add
sub
int
sub
ins
mov
lea
sbb
adc
hlt
push
dec
mov
adc
push
push
inc
cmp
ret
cmp
sbb
dec
push
inc
sbb
test
mov
jmp
aaa
sub
push
js
sbb
iret
arpl
test
ins
jbe
ss
ss
and
inc
ins
out
mov
mov
loop
(bad)
aas
add
mov
add
sub
push
xor
dec
jmp
dec
or
fsub
sbb
inc
push
imul
hlt
mov
mov
(bad)
repnz
sbb
adc
call
push
adc
lods
mov
cmp
mov
adc
jmp
idiv
in
lea
pop
std
pop
call
iret
xchg
xchg
inc
and
add
add
adc
stos
mov
adc
mov
xlat
push
and
pop
add
inc
pop
push
hlt
je
push
pop
mov
bound
add
out
push
test
shl
inc
push
pop
rcr
xlat
jbe
out
jge
fs
adc
sar
jnp
sub
xchg
cli
adc
xchg
and
mov
ds
scas
out
hlt
stc
xor
mov
add
repz
sbb
cdq
adc
xchg
dec
scas
sbb
bound
mov
push
std
or
xchg
inc
inc
mov
mov
cmp
es
and
adc
sub
aad
xchg
ds
pop
fimul
aam
leave
sbb
sar
dec
cmc
(bad)
sub
push
dec
inc
dec
jmp
(bad)
int
cmp
cmps
or
sti
lahf
(bad)
sti
push
push
push
(bad)
push
cmp
jmp
add
shl
ds
inc
mov
jo
sti
imul
jne
jmp
sar
push
jno
xor
xchg
sahf
bound
mov
jno
jg
ins
dec
and
scas
dec
in
shr
xchg
mov
pop
inc
push
imul
sub
mov
clc
xor
push
rcr
and
int3
test
dec
cmp
and
inc
xor
imul
bnd
mov
xor
pop
xor
loopne
test
retf
sub
test
stc
repnz
sahf
mov
retf
and
(bad)
enter
stc
(bad)
fiadd
dec
je
xchg
xor
and
lods
(bad)
jmp
and
movs
mov
cli
cmp
hlt
cmp
pop
sub
mov
mov
jmp
aam
and
nop
test
add
add
xrelease
loopne
arpl
or
pop
mov
addr16
(bad)
fld
ds
(bad)
sub
iret
call
scas
(bad)
aaa
clc
pop
movs
jb
mov
stos
mov
hlt
sbb
mov
dec
mov
mov
fld
dec
jo
mov
push
mov
outs
sbb
adc
ror
dec
iret
mov
leave
enter
out
fldenv
adc
rcr
sbb
ret
cmp
or
pop
mov
xchg
mov
(bad)
test
fwait
das
add
scas
push
adc
mov
nop
push
cmp
stos
sbb
pop
add
lods
adc
add
push
jae
call
(bad)
adc
gs
outs
or
fisubr
js
mov
cwde
test
repz
fld
push
add
cmps
mov
mov
cld
test
ins
adc
lods
jl
pop
adc
sbb
pop
in
cmc
mov
dec
fiadd
stc
xchg
dec
add
cmp
cmp
fmul
cmp
clc
jmp
mov
stos
push
add
push
push
mov
xchg
repz
mov
aas
xchg
push
leave
xor
pop
dec
data16
data16
mov
rcl
das
mov
inc
retf
and
fdivr
js
or
mov
nop
push
jmp
jle
lods
and
fcomp
mov
mov
dec
jb
jno
aam
lahf
pop
inc
pop
movs
fsin
loopne
cmp
(bad)
psubsb
jg
jl
xchg
mov
mov
out
push
pop
pushf
mov
or
add
inc
push
or
movs
cmp
repz
mov
fldcw
pop
push
cmps
(bad)
daa
sub
aaa
sahf
add
dec
mov
sti
ins
out
mov
outs
mov
cmps
scas
jno
lds
or
addr16
nop
test
and
xor
imul
adc
mov
push
lods
jge
ja
outs
cmp
cdq
cli
cmp
cs
sub
or
and
ficomp
test
clc
inc
sub
mov
cli
add
scas
inc
cmp
rol
aaa
add
xchg
dec
cmp
mov
ss
gs
test
fild
pop
cmp
rcr
scas
inc
jge
dec
jp
mov
xor
movs
repz
lods
cmp
jge
popf
mov
add
stos
shl
sub
ja
das
shl
dec
pop
adc
pop
jmp
xor
mov
fiadd
push
sbb
dec
xchg
push
fs
pop
jmp
adc
sbb
bound
hlt
sub
(bad)
cwde
imul
and
int3
ins
push
and
jmp
sbb
dec
in
add
and
push
dec
jmp
push
cmps
js
ja
leave
mov
and
retf
test
xlat
or
(bad)
sbb
mov
inc
out
mov
inc
ins
nop
shl
js
pop
hlt
lods
adc
add
fadd
not
push
pop
cmp
cmp
inc
in
adc
call
add
pop
sub
stos
push
push
in
push
cmps
cmps
ret
in
jb
add
cli
inc
sub
in
push
mov
outs
popf
dec
mov
and
push
xchg
or
(bad)
je
xlat
cmp
ja
movs
bound
scas
jns
xchg
call
outs
sub
mov
push
push
mov
mov
test
cld
xchg
(bad)
push
push
not
imul
push
(bad)
adc
add
sub
cmp
inc
aam
imul
pop
rcr
push
fadd
jae
mov
push
mov
outs
pop
push
sbb
pop
shld
(bad)
ins
add
cmp
loope
cmp
adc
xor
adc
xchg
pop
dec
movs
ret
cmp
lods
ins
push
(bad)
jmp
add
aaa
lea
(bad)
or
and
shl
shl
mov
cdq
push
jne
(bad)
clc
or
cmps
(bad)
clc
jp
clc
outs
or
sbb
pop
adc
lds
scas
daa
stc
punpcklwd
inc
in
scas
push
lods
inc
shl
mov
lock
adc
lahf
xchg
dec
mov
jg
jo
mov
shl
lea
shl
in
and
shr
aaa
fistp
cdq
add
call
das
pop
mov
push
mov
loopne
xlat
call
push
sar
cmps
push
pop
xor
mov
fs
les
mov
test
ds
inc
xchg
scas
cmps
and
cmp
xlat
lds
mov
dec
or
cli
or
cwde
ins
test
push
dec
retf
cmp
aad
sub
adc
mov
fsub
mov
jl
mov
or
jne
or
sub
retf
mov
xchg
or
(bad)
push
shl
pop
cmps
rcl
cwde
cld
dec
rcr
loopne
js
pop
or
jae
pusha
sub
mov
lods
mov
test
arpl
pusha
push
cmp
xor
pop
inc
fisttp
in
dec
push
lods
xchg
call
and
xor
xchg
dec
cmp
xor
mov
mov
push
xchg
in
mov
mov
std
jno
xor
and
sub
inc
xchg
add
in
pusha
push
mov
cmovp
mov
cmp
mov
fbld
ja
sub
or
or
sti
mov
and
xlat
pushf
add
mov
je
and
rcr
rcr
sub
push
fnstenv
mov
or
sbb
and
push
sub
pop
(bad)
jne
ins
fdiv
mov
repz
lea
xchg
push
rol
adc
mov
add
sub
or
mov
fnstsw
sub
test
push
or
add
out
sti
pop
clc
dec
or
lock
mov
cmp
(bad)
arpl
sti
mov
dec
out
(bad)
les
les
and
cmc
loop
mov
xchg
and
imul
stc
cli
outs
and
sbb
inc
mov
push
xchg
lods
push
das
popf
dec
xchg
adc
fdivr
mov
fisttp
hlt
or
sar
cmp
adc
ins
sub
retf
cdq
xchg
bnd
je
fld
inc
jg
in
cmc
sbb
push
xchg
mov
cdq
mov
pop
in
call
or
shl
dec
cmp
sahf
test
fiadd
mov
cmp
xchg
das
cmp
mov
enter
or
imul
fld
ss
xchg
popa
iret
mov
push
dec
sub
ins
or
push
(bad)
mov
sbb
jg
hlt
setle
movs
mov
push
adc
sub
sbb
imul
frstor
and
and
lea
call
dec
mov
iret
mov
js
jmp
jno
sub
daa
jge
sub
(bad)
imul
sbb
(bad)
shl
mov
aad
ffree
(bad)
mov
jb
cwde
jbe
test
rcr
dec
pop
repnz
sbb
enter
inc
xor
push
mov
les
jge
push
jne
cmp
xlat
adc
or
dec
lock
mov
cmp
aaa
icebp
jge
mov
sar
adc
aam
mov
test
aad
dec
lea
ins
xor
pop
add
sti
sbb
ror
cmp
cmp
loope
sub
inc
sub
dec
iret
jg
xchg
les
(bad)
(bad)
ds
and
inc
test
ficomp
mov
push
aam
clc
in
xchg
xchg
out
adc
lds
data16
scas
mov
fcomp
pop
test
push
hlt
jo
retf
fs
and
mov
addr16
cli
and
scas
int
add
dec
mov
(bad)
adc
push
and
mov
(bad)
xor
outs
popf
lahf
sar
push
cli
fcmovb
sti
adc
(bad)
and
adc
mov
jne
shl
or
sbb
xchg
add
add
add
test
ja
push
fdiv
test
xchg
out
mov
push
add
adc
inc
pop
fbld
punpcklwd
or
or
and
mov
mov
mov
mov
arpl
call
xor
cs
test
xor
and
add
out
inc
je
movs
rcl
sub
sbb
or
xchg
cmp
std
fcom
xor
mov
lds
int3
ins
fsubr
xchg
fwait
pop
ror
and
adc
shl
ss
jl
push
(bad)
iret
fcmovnbe
sbb
pop
push
mov
push
ss
dec
mov
scas
adc
cdq
fnstenv
xchg
dec
xor
repz
pop
mov
(bad)
pop
and
and
fxtract
sub
jle
jne
iret
in
xchg
sbb
aaa
jnp
add
int3
push
add
hlt
or
sub
test
push
sub
or
retf
ret
cld
inc
xor
cmp
retf
ins
arpl
xor
mov
test
push
mov
sbb
adc
add
pop
stc
push
addr16
mov
std
sbb
jo
not
(bad)
in
mov
das
ret
mov
dec
inc
add
cmps
fwait
sbb
es
dec
rcr
or
pushf
adc
lahf
fidivr
icebp
mov
mov
cmp
xchg
ja
xchg
repnz
mov
mov
(bad)
xchg
call
jae
pop
shl
mov
add
xchg
mov
jecxz
inc
sbb
pop
es
inc
test
lahf
test
ret
leave
add
pop
mov
ficom
ret
jmp
dec
xchg
je
ror
std
movs
gs
dec
das
add
xor
sbb
retf
cmp
es
mov
jne
pop
iret
sbb
and
pop
xchg
imul
popf
sub
gs
adc
mov
pop
mov
es
neg
xchg
test
or
jae
pusha
rol
sbb
popf
adc
add
adc
int3
sbb
cmp
mov
add
sbb
xor
pop
mov
seto
js
sbb
shr
sbb
sbb
xor
bound
jecxz
nop
jae
cmp
dec
mul
das
jo
loope
or
push
retf
sbb
sahf
add
mov
popf
lods
jge
mov
in
inc
cmp
test
stc
dec
aaa
xor
std
in
sbb
and
in
adc
mov
outs
sbb
mov
lods
sbb
inc
out
mov
xchg
in
shr
xchg
pop
lea
mov
dec
xor
aaa
sub
push
test
shl
les
shl
fcom
cmp
push
rep
test
movs
jecxz
cli
mov
in
loopne
push
aam
cmc
data16
aas
fwait
mov
dec
sbb
aaa
call
cdq
and
inc
ds
push
mov
popf
mov
xor
add
mov
or
cdq
lahf
jl
das
mov
jne
aaa
mov
nop
repnz
push
aam
rcr
ror
mov
nop
add
pop
mov
push
push
xor
neg
dec
jmp
ret
or
add
jae
dec
jmp
inc
jmp
fwait
xchg
mov
push
sub
push
xor
and
pop
mov
and
add
ret
bound
mov
push
fwait
mul
add
imul
or
dec
and
(bad)
pop
adc
rcl
(bad)
xor
cmp
jl
sahf
ffreep
(bad)
jle
enter
imul
(bad)
mov
(bad)
xor
adc
aad
cmp
rcr
in
inc
mov
ds
fwait
enter
adc
sahf
xor
dec
ret
movs
pop
cld
or
jno
cld
pusha
and
or
mov
add
cwde
ret
pop
es
ins
fwait
push
lds
mov
ins
mov
jmp
fbld
xchg
pop
sbb
imul
and
jmp
cmp
mov
jmp
movs
mov
aad
sti
lods
jg
inc
repz
mov
mov
xchg
gs
add
mov
nop
adc
xor
movs
sbb
call
or
ss
jecxz
push
sub
lock
dec
or
lods
int3
call
ins
mov
and
add
inc
(bad)
and
mov
xchg
dec
fdiv
ins
mov
mov
dec
dec
mov
xor
loopne
psubd
clc
cmp
iret
mov
loop
sub
fsub
pop
pusha
fst
clc
add
push
and
mov
jae
or
inc
in
pop
mov
xchg
jns
cld
ins
int3
xchg
repnz
cmp
vsubsd
mov
aam
cs
pop
pusha
mov
outs
inc
arpl
loopne
lods
aad
mov
loop
(bad)
ret
and
cs
mov
jmp
mov
xor
test
leave
push
ins
aam
(bad)
push
cmp
arpl
sub
repnz
xor
(bad)
inc
rol
(bad)
movs
repnz
in
cld
aaa
stc
push
in
xchg
rcl
xor
pushf
aam
inc
jp
ret
aaa
jns
icebp
(bad)
mov
mov
into
mov
and
retf
dec
test
xchg
adc
cmp
xchg
push
sbb
mov
push
pushf
(bad)
push
jmp
xchg
lahf
rcl
inc
sub
les
jae
xchg
adc
ja
inc
inc
mov
wrmsr
pop
jl
xchg
adc
loopne
cld
adc
lock
mov
ins
mov
add
xchg
add
out
bound
mov
inc
dec
adc
push
aas
jge
pop
leave
lds
and
scas
(bad)
fucomi
pop
movs
imul
adc
inc
stos
neg
jbe
jecxz
and
mov
inc
pop
jae
jmp
mov
cmp
mov
je
ret
add
lods
test
mov
sub
jle
lahf
xchg
pop
cli
out
lds
xlat
xor
movs
les
adc
lods
sbb
sbb
push
jecxz
data16
scas
imul
and
cmc
mov
fcmovb
bound
adc
inc
test
ror
push
out
into
mov
jl
inc
pop
jnp
jae
scas
mov
inc
lods
adc
ficom
add
sbb
sbb
add
lods
repnz
adc
xor
fdivrp
(bad)
xchg
push
shr
or
adc
loope
ja
jae
out
jl
jge
adc
lea
xchg
movs
adc
inc
rcr
out
shr
jp
arpl
mov
xchg
adc
sahf
shl
mov
inc
in
and
add
dec
sub
movs
ret
xor
dec
into
cs
test
mov
les
sbb
jmp
xchg
dec
call
mov
dec
jne
out
pusha
mov
pop
int
loope
or
sub
(bad)
movs
jecxz
movs
out
test
in
adc
je
fs
shl
adc
scas
imul
pop
pop
pop
push
push
imul
sub
ror
push
xchg
jnp
jle
ss
shr
ror
adc
or
cmp
jo
mov
or
sbb
out
mov
fstp
adc
push
std
sti
mov
stos
mov
and
jo
mov
and
mov
in
xlat
pop
sar
adc
add
xlat
cdq
push
(bad)
sub
pusha
retf
or
cmp
pop
mov
jle
adc
loope
push
loop
sbb
and
add
sbb
cmps
nop
mov
mov
jp
cld
ret
fcom
sub
loop
adc
push
cmp
xor
cmp
mov
or
outs
xchg
sub
push
push
inc
xchg
cmc
ds
adc
mov
(bad)
(bad)
(bad)
cmp
pusha
or
(bad)
mov
cs
popa
mov
adc
or
fsubr
mov
ins
sub
xchg
sbb
cs
push
clc
add
(bad)
imul
adc
jge
js
mov
fdivr
push
sub
or
fucomp
mov
lock
add
js
dec
call
aam
adc
into
iret
loope
xchg
mov
xchg
ror
(bad)
jns
jle
add
xor
dec
leave
jmp
mov
cwde
aas
pop
adc
xor
mov
inc
pop
lods
adc
push
mov
mov
pop
jmp
or
mov
push
adc
mov
(bad)
mov
cwde
jmp
adc
fstp
ja
in
sbb
cmp
inc
push
in
fist
aam
loopne
sti
add
pop
movs
jle
mov
and
movs
cli
jno
mov
inc
cli
xlat
add
aad
add
sbb
xchg
cwde
cmp
cmp
scas
push
mov
mov
(bad)
das
jae
fucomip
cmp
jl
mov
leave
jb
shl
jno
call
(bad)
xchg
add
mov
mov
ss
fs
sub
jle
sub
stc
fwait
test
outs
jg
mov
push
xchg
int
pushf
pushf
dec
push
pop
jno
pop
(bad)
jb
or
inc
ret
adc
pushf
and
mov
xor
gs
dec
das
lds
mov
bound
call
scas
es
cmp
cmps
pop
jp
das
out
xchg
add
int
das
or
fisttp
mov
dec
out
repnz
(bad)
(bad)
cs
dec
nop
repz
adc
mov
and
adc
ror
dec
mov
mov
mov
fwait
add
cli
outs
cmp
adc
cmp
sbb
dec
into
dec
add
jns
or
daa
loopne
les
xchg
xor
pop
(bad)
outs
leave
adc
mov
sbb
or
cmp
mov
sub
cmp
fcomp
(bad)
ins
out
pop
mov
and
mov
dec
xlat
and
jge
mov
adc
fwait
jmp
retf
shl
pop
pop
jbe
and
lds
xbegin
push
mov
dec
cwde
out
sub
loope
mov
out
inc
pop
setl
mov
scas
add
lods
xchg
in
js
mov
dec
in
dec
xchg
dec
mov
push
out
out
imul
jns
into
cmp
and
movs
mov
rol
aam
fild
sub
sub
cwde
adc
add
adc
push
mov
sub
cmp
add
and
mov
ss
mov
xor
mov
(bad)
loopne
push
stos
popf
(bad)
in
nop
lods
xchg
mov
mov
scas
push
fcomi
push
pop
sub
inc
push
xlat
jge
mov
test
push
test
test
pop
mov
xor
xlat
push
jnp
sar
cmp
mov
or
jmp
and
xchg
mov
inc
sub
mov
cmps
test
cwde
dec
enter
cmp
mov
fild
frstor
sti
sbb
mov
mov
jns
pop
retf
int
pop
mov
scas
mov
popf
cwde
leave
stos
and
in
outs
or
sti
mov
mov
aas
sbb
(bad)
dec
push
inc
dec
retf
push
inc
leave
jg
pusha
call
adc
push
lods
movs
cdq
aaa
add
inc
mov
test
push
adc
xchg
mov
bound
in
stos
pushf
ja
mov
adc
inc
mov
cmp
pop
sub
dec
fbstp
xchg
sbb
add
pop
ret
sbb
into
idiv
lahf
mov
inc
not
push
test
cld
ins
sbb
xor
add
add
or
lea
xor
sub
jmp
mov
and
out
mov
dec
mov
stos
loopne
pop
mov
push
mov
adc
xchg
xor
xchg
xchg
test
sub
add
pushf
mov
test
enter
(bad)
jae
cmps
ds
out
cmp
and
lds
test
lds
cld
mov
inc
paddsb
add
dec
adc
fs
sbb
adc
call
stc
or
xchg
push
push
push
leave
xchg
mov
sbb
iret
mov
push
mov
stc
cmp
jle
cmps
pop
sub
sbb
aas
stos
cmp
leave
test
add
xchg
push
jge
fs
cmc
call
out
adc
dec
out
mov
sub
ror
loope
or
xchg
aas
cmp
(bad)
pop
cli
push
out
neg
(bad)
cli
nop
jle
dec
lea
hlt
jle
jle
adc
call
cmc
and
add
pop
mov
mov
cmps
aaa
out
adc
push
xchg
pop
xchg
cmp
xor
and
push
jecxz
adc
mov
sbb
jnp
and
scas
in
scas
mov
cmp
push
and
test
repnz
xchg
sbb
add
xchg
fisttp
push
or
pop
je
xchg
movzx
dec
add
mov
inc
mov
mov
jno
pop
je
out
jae
or
pop
mov
sub
sbb
imul
pop
shl
cmc
repz
lock
push
sahf
or
(bad)
adc
sbb
mov
mov
test
jle
cmp
add
push
ins
iret
cmp
fadd
mov
sbb
lds
repnz
dec
pop
in
xchg
shl
fld
and
iret
(bad)
push
cmp
mov
mov
in
(bad)
sti
jne
and
rcr
out
mov
aam
or
mov
sti
jg
cmp
dec
mov
sub
fsubr
repnz
sti
inc
inc
adc
sbb
mov
cmp
adc
jb
ds
fdiv
adc
or
in
mov
das
mov
(bad)
popa
retf
sub
cmps
popf
into
xor
cmp
outs
shr
xor
lock
add
rol
push
ret
mov
addr16
jnp
pop
fsub
xchg
jb
and
cwde
mov
xchg
(bad)
and
je
mov
xchg
js
in
add
enter
bound
mov
fiadd
pop
inc
jge
xor
outs
xchg
lahf
repnz
sbb
dec
aad
(bad)
adc
mov
inc
push
fsubr
jp
fwait
ins
push
dec
ds
outs
loope
and
and
xchg
xlat
nop
(bad)
daa
ror
sahf
ds
retf
(bad)
xor
mov
mov
sub
in
push
add
les
ret
ja
repz
adc
daa
(bad)
inc
std
mov
pop
jp
mov
push
xor
jne
loop
add
out
or
(bad)
xchg
test
shl
sbb
mov
aad
mov
imul
mov
in
leave
dec
lock
(bad)
cdq
mov
aam
iret
call
push
jbe
push
jmp
add
inc
imul
pushf
sub
inc
add
mov
pop
xor
pop
xlat
mov
mov
xchg
mov
push
daa
add
jno
test
mov
out
(bad)
in
repz
lods
add
xor
rcl
stos
daa
sub
mov
push
gs
mov
or
push
pop
sbb
mov
das
mov
dec
jl
mov
ficom
stos
icebp
es
(bad)
xchg
test
(bad)
(bad)
cmp
ins
movs
(bad)
shl
lahf
cmp
in
cmps
cdq
inc
jb
scas
push
rol
jmp
sbb
jmp
cld
fimul
inc
push
shl
(bad)
(bad)
das
fsub
lea
sbb
lods
jl
cmp
retf
mov
jbe
xchg
push
or
mov
call
push
pop
inc
retf
dec
cmp
jb
pushf
ror
sbb
ins
lock
xor
ret
jo
dec
(bad)
fiadd
jecxz
xor
or
or
jle
inc
das
test
scas
sub
mov
movs
out
dec
cdq
(bad)
loopne
cld
adc
cmp
in
scas
xor
clc
pushf
xor
xlat
lds
mov
aam
cmp
sub
cmp
push
stos
(bad)
pop
push
imul
stos
addr16
lock
add
add
sub
test
std
cmp
sbb
mov
mov
push
mov
aam
stos
mov
fiadd
pop
cwde
cmp
(bad)
ja
ins
xchg
adc
cmp
and
scas
sti
mov
xchg
cmps
cld
into
popa
or
inc
lock
scas
mov
fisttp
fisttp
mov
lods
cmp
and
imul
mov
sbb
out
gs
ss
out
ret
pop
mov
daa
jp
xor
iret
movs
xchg
push
xchg
xor
(bad)
jns
(bad)
sar
jmp
sub
dec
ja
fcomip
idiv
mov
outs
(bad)
(bad)
xchg
cmp
in
cli
add
jmp
adc
ret
aas
fisub
test
and
in
cmp
lea
jae
cmc
or
push
mov
imul
shl
sub
lock
sar
jno
pop
psubsb
fdivr
cwde
or
das
frstor
stos
mov
xchg
ins
jge
push
out
(bad)
(bad)
cmp
ins
jno
xor
repz
sub
push
jecxz
(bad)
mov
sti
jp
pop
dec
in
or
outs
cwde
(bad)
or
jae
jnp
pop
add
daa
xabort
inc
jecxz
fisttp
test
cmp
xchg
fsubr
mov
cdq
xor
and
jo
push
and
call
jg
(bad)
dec
pusha
sbb
push
imul
mov
in
lods
fcmovu
mov
inc
dec
mov
dec
push
xchg
push
in
(bad)
pop
out
jecxz
out
lahf
mov
jecxz
or
call
out
sbb
push
test
imul
dec
sub
sbb
mov
and
sub
pop
jno
cmc
xchg
shl
jl
stc
xlat
xchg
shr
dec
cmp
sbb
imul
outs
dec
push
and
dec
and
ss
mov
cld
pop
pop
jno
lds
and
(bad)
cmps
sbb
iret
icebp
lahf
scas
enter
dec
jae
aam
fmul
es
in
jg
mov
adc
aad
inc
xchg
sub
in
jmp
adc
cmps
(bad)
jg
jmp
sbb
inc
xchg
ins
or
sbb
bound
mov
mov
jmp
lock
cmp
cmp
mov
aam
repnz
mov
jle
cli
aaa
inc
sbb
cmp
push
dec
cs
sub
or
sbb
imul
lahf
out
mov
push
cmps
pop
pop
rcr
fmul
and
pop
sbb
xor
pusha
aas
mov
sahf
sbb
and
mov
int3
pop
rol
cs
stc
jle
xchg
xchg
pushf
call
daa
xchg
daa
repz
mov
popa
cmp
inc
jne
inc
dec
ins
test
test
sub
cmps
into
pop
mov
popf
push
scas
lods
mov
mov
push
sti
add
mov
mov
shr
cmp
repz
fmul
ds
dec
jmp
push
jg
or
repnz
and
or
push
popa
sub
dec
jmp
ds
loope
xchg
rol
xor
ror
popf
outs
pop
imul
in
adc
inc
sub
and
mov
mov
dec
repz
lods
xlat
mov
mov
das
and
mov
ss
sti
call
jbe
push
cdq
pushf
pcmpgtw
inc
aaa
(bad)
pop
or
call
add
sub
xchg
cmc
shl
mov
sbb
mov
(bad)
hlt
pop
cmc
or
fcom
dec
js
(bad)
(bad)
dec
shl
cs
fisttp
xchg
into
int
call
mov
int3
jl
iret
movs
(bad)
in
xlat
cmovp
je
xor
into
inc
mov
add
mov
(bad)
xchg
or
jge
jecxz
in
fwait
popf
fwait
inc
xor
dec
test
(bad)
(bad)
fsub
or
push
lea
jae
xchg
in
sub
in
cmp
add
jns
fwait
leave
test
or
dec
push
pop
or
push
push
movs
or
push
int3
mov
add
imul
mov
cmp
push
cmp
outs
xor
adc
mov
jmp
xor
hlt
aaa
in
mov
pop
mov
add
jns
fs
xchg
adc
jo
lock
pushf
push
cmp
xor
mov
jp
inc
bound
xlat
popa
jnp
aad
fs
(bad)
xlat
retf
jecxz
jns
mov
out
out
daa
cmp
fadd
add
mov
sbb
dec
repnz
jno
adc
ins
enter
cmps
test
jnp
ds
add
xchg
push
ins
lock
in
sar
frstor
mov
rcl
jo
push
pusha
outs
or
iret
xor
bound
push
aas
js
clc
popa
mov
call
xchg
das
xchg
icebp
inc
fwait
imul
sbb
push
retf
adc
cli
pop
in
and
lds
push
das
mov
inc
les
sub
xchg
in
clc
and
inc
clc
xor
pop
sub
lods
pusha
and
ja
fiadd
xor
push
push
cli
jl
cmp
xor
hlt
imul
jae
push
mov
inc
imul
imul
imul
sar
in
sub
pop
repz
movs
(bad)
add
repz
pop
sub
push
sbb
test
repz
add
pop
jle
in
jbe
cmp
pop
jecxz
in
rcr
nop
jbe
lock
push
leave
inc
push
jo
repnz
lds
push
xlat
es
or
push
xor
or
adc
and
fwait
mov
enter
retf
ret
lahf
xlat
fadd
fwait
(bad)
cmp
xchg
cmps
stos
test
test
or
and
push
stos
xchg
push
rcr
iret
rcr
imul
push
aaa
fisttp
push
lea
fnop
mov
xor
inc
(bad)
and
(bad)
pop
stos
leave
arpl
mov
pusha
push
mov
sbb
xor
shl
push
call
mov
sub
xchg
rcl
fcmove
fisttp
xor
xchg
movs
(bad)
mov
icebp
into
add
test
push
inc
scas
xor
xchg
adc
mov
neg
or
cmp
xchg
inc
js
push
pop
ret
(bad)
mov
xchg
stos
(bad)
loop
add
or
add
or
mov
dec
push
jl
inc
xor
dec
popa
xlat
in
and
xchg
and
shl
adc
cwde
inc
nop
(bad)
out
mov
out
and
clc
hlt
push
add
ss
jns
mov
or
idiv
pop
dec
ds
jno
dec
scas
mov
adc
inc
mov
sti
sub
pop
movs
aam
sbb
xchg
in
mov
push
jbe
push
not
sbb
int
imul
shr
dec
fisub
push
iret
pusha
iret
jne
push
leave
mul
inc
inc
test
fs
daa
arpl
cmp
mov
aaa
push
inc
fwait
je
sahf
nop
push
push
outs
or
out
icebp
cmp
sub
pop
jmp
sti
cmp
jne
add
xor
imul
mov
sbb
jg
push
adc
push
pop
popf
or
jne
sub
int3
push
xchg
mov
inc
out
cld
dec
clc
cdq
ja
in
pop
sbb
inc
shl
icebp
pop
fsubr
clc
test
cmp
add
imul
cmps
ins
or
enter
jecxz
dec
pop
dec
adc
sahf
cmp
js
sub
scas
inc
addr16
push
(bad)
mov
add
adc
xchg
push
mov
outs
jae
repz
stos
test
adc
jecxz
push
sub
push
lds
(bad)
aad
xor
pop
je
ins
dec
rol
push
loopne
inc
sub
pop
pop
leave
sub
sti
xchg
jecxz
mov
xor
adc
js
push
daa
jle
adc
cmp
in
jae
mov
aaa
lods
and
outs
jl
cmp
sti
adc
mov
popa
es
mov
retf
add
sub
xchg
(bad)
mov
shr
xor
in
sub
inc
fistp
repz
adc
mov
push
push
js
mov
mov
pop
and
push
jge
stos
hlt
popf
adc
out
cmp
in
movs
outs
pusha
outs
xchg
adc
mov
pushf
xchg
ja
push
adc
xchg
add
out
sbb
int3
imul
(bad)
xor
mov
push
add
rep
mov
cmps
push
jecxz
mov
cmps
jmp
aaa
cmps
rol
cmp
cmp
inc
mov
or
add
push
mov
sbb
test
inc
mov
jnp
xor
(bad)
add
ret
in
mov
lods
pop
jl
imul
je
cmp
(bad)
(bad)
xchg
push
out
js
sub
lods
jmp
call
pop
mov
ja
je
scas
xchg
shl
sti
fidivr
jmp
jp
icebp
test
push
sub
(bad)
dec
mov
adc
and
mov
push
sbb
xchg
(bad)
adc
adc
sbb
push
xor
das
sub
cmp
out
es
cmp
addr16
pop
rcl
jns
ds
pop
sti
pusha
cmp
pusha
movs
jbe
popf
add
ror
shr
inc
es
push
xchg
pop
jle
mov
fadd
xor
fdivrp
dec
push
scas
call
mov
out
pop
enter
ins
dec
jp
jne
fist
push
into
aad
xor
aaa
imul
jo
outs
add
test
cmp
add
fild
pop
inc
add
xchg
pop
inc
jnp
lds
inc
call
and
inc
je
push
mov
fistp
inc
mov
or
dec
jbe
jle
jnp
lods
and
pop
adc
jno
mov
(bad)
mov
add
inc
out
loopne
sbb
je
adc
jmp
cmp
inc
xchg
xchg
addr16
adc
xchg
mov
mov
xchg
pop
ss
cmps
jne
add
sbb
jg
fwait
jo
sub
xchg
push
push
jmp
cld
dec
aad
fs
scas
mov
pop
int
dec
mov
cvttps2pi
add
repz
xor
mov
mov
adc
into
mov
(bad)
in
jmp
add
cmc
xchg
xor
cwde
scas
aas
pop
mov
push
cmp
mov
jbe
(bad)
push
add
sbb
fld1
iret
stos
mov
ret
adc
xchg
adc
popf
xchg
jmp
shl
sbb
popf
addr16
and
jae
cmps
lahf
push
retf
cli
hlt
imul
loope
enter
idiv
or
mov
xlat
ds
pop
inc
push
mov
lahf
leave
out
push
stc
cld
dec
ret
into
cmp
dec
(bad)
push
jmp
xor
mov
adc
cmp
dec
js
xchg
lods
or
jp
daa
iret
mov
loop
mov
xor
xchg
pop
mov
adc
jno
inc
scas
xor
nop
test
mov
jl
js
push
out
stos
adc
xchg
cwde
pop
ret
mov
into
or
rol
bound
add
cdq
mov
frstor
mov
jmp
push
or
(bad)
jge
pop
sub
xchg
pop
or
dec
movs
cs
pop
(bad)
loope
sub
sbb
call
mov
(bad)
push
lds
adc
scas
jecxz
stos
imul
iret
sub
(bad)
fdivr
lds
daa
push
aas
jns
inc
jns
popf
cld
arpl
push
cmp
mov
add
nop
adc
ds
or
or
mov
xor
xchg
xor
and
or
pop
lock
or
cmps
lds
fwait
aad
popa
push
cmp
ds
mov
(bad)
mov
jge
sar
cmp
aam
ins
mov
jmp
out
jne
or
jmp
xchg
lods
aas
jno
jbe
clc
jmp
push
mov
out
pop
stos
mov
aam
je
(bad)
and
arpl
and
test
jns
jae
cs
imul
mov
test
adc
mov
aam
jns
push
sbb
bound
cmp
fucom
cmp
addr16
mov
cmps
and
pop
mov
rol
xchg
idiv
xchg
in
test
add
xchg
cmps
data16
adc
sub
std
cmp
and
pop
mov
and
add
fdiv
sbb
sub
jo
arpl
in
sub
out
sahf
and
in
addr16
loopne
add
mov
inc
mov
push
jae
movs
test
xchg
ja
pop
adc
sbb
rcl
push
mov
push
icebp
push
xor
pop
repz
popf
fcmovnb
adc
das
or
sbb
mov
dec
movs
es
mov
in
or
(bad)
or
mov
inc
cmp
adc
ret
push
mov
pop
enter
pop
retf
retf
jle
loope
push
mov
xor
pop
cmp
inc
mov
and
push
mov
sar
jmp
jne
adc
fist
inc
sbb
cdq
lock
movs
retf
sbb
outs
call
or
scas
sbb
lods
test
xchg
adc
pop
or
push
add
fsubr
sbb
in
jmp
call
add
test
or
(bad)
xlat
shl
mov
mov
mov
div
test
div
ins
adc
test
or
xor
pushf
mov
jle
cmp
jne
mov
mov
and
mov
cmp
sub
in
cmp
cmp
in
xchg
xchg
aad
mov
mov
xchg
inc
(bad)
in
add
ror
idiv
mov
scas
ins
inc
sub
aam
pop
ret
sbb
es
mov
push
loope
scas
stc
jne
nop
inc
movs
sub
and
push
add
mov
stos
dec
push
mov
imul
jge
xchg
lods
mov
lods
sbb
jl
out
add
and
xor
pop
cwde
sahf
sub
loopne
mov
enter
mov
popf
pop
je
sub
mov
das
mov
sub
mov
cmp
xchg
pminsw
jno
aam
shl
nop
mov
and
enter
xchg
outs
fcom
sahf
and
and
ret
cmp
xor
sub
lods
repz
out
(bad)
in
mov
add
push
jmp
pop
or
cld
je
inc
inc
push
lds
xchg
call
mov
sub
shl
adc
pop
add
push
add
jp
out
addr16
sahf
sbb
xor
adc
mov
rol
cmp
mov
popa
ret
out
sbb
mov
pop
sub
call
and
xor
stos
sysret
lds
adc
js
es
adc
jnp
adc
rol
pop
sub
fidiv
out
ret
xchg
(bad)
ja
pop
push
rcl
adc
(bad)
jle
rcr
lods
pop
into
inc
in
scas
add
mov
aas
lods
fcomp
pop
es
xor
daa
jb
loope
jb
sar
clc
dec
ss
loope
loope
mov
icebp
int
jge
cmc
and
cmp
ins
mov
addr16
xchg
jae
push
inc
cmps
xchg
test
mov
xor
push
and
fiadd
dec
push
add
cmps
dec
iret
cmps
jnp
cld
test
mov
addr16
push
cmps
jecxz
mov
sub
loope
add
push
call
mov
sub
mul
aam
enter
addr16
cmp
or
in
pop
iret
loop
movs
mov
loope
mov
(bad)
popf
fisubr
pusha
scas
pop
push
xchg
xchg
dec
cli
movs
not
mov
push
call
and
lods
adc
pop
jp
fwait
nop
xor
cwde
xlat
or
sub
out
push
jns
cmp
xor
gs
retf
call
aaa
jp
adc
(bad)
or
lock
push
add
add
cs
clc
cmp
jns
leave
and
sbb
jecxz
mov
push
and
ret
les
int
lods
dec
inc
xor
jmp
movs
xchg
outs
push
ss
movs
cmps
inc
xor
xchg
aam
lods
push
inc
adc
bound
retf
aas
shl
outs
hlt
mov
mov
inc
loop
xor
fwait
out
jae
(bad)
call
cmps
push
dec
in
cmc
leave
int3
xchg
jo
clc
cld
call
mov
push
mov
adc
xor
mov
out
repz
pop
lock
xor
sbb
(bad)
fstp
cmp
push
push
jne
test
mov
mov
or
(bad)
(bad)
mov
and
push
inc
sti
add
inc
repnz
ds
cs
addr16
xchg
jmp
std
pop
mov
shl
scas
test
sub
or
xor
bound
push
dec
cmp
popf
or
cld
mov
(bad)
jae
fcmovbe
(bad)
loope
aad
mov
inc
mov
inc
sub
inc
fimul
push
xor
(bad)
jmp
sub
xchg
xchg
(bad)
fstp
fld
adc
mov
outs
retf
ror
fwait
add
mov
call
xor
js
sbb
imul
shr
(bad)
pop
or
pop
test
lea
(bad)
stc
mov
mov
pushf
(bad)
mov
test
mov
movs
push
inc
mov
dec
fistp
inc
push
mov
iret
mov
add
sub
rcl
pusha
mov
leave
jmp
xchg
add
pusha
inc
retf
das
js
xchg
jecxz
sbb
out
xor
sbb
bnd
and
sub
push
hlt
or
aaa
adc
inc
mov
mov
jmp
inc
xchg
inc
inc
cmp
cmp
mov
push
cmps
inc
inc
repnz
bound
popf
dec
add
push
sub
push
and
push
adc
adc
mov
retf
fst
daa
adc
icebp
stos
fild
out
mov
hlt
and
mov
jg
and
bound
xor
fucomp
cwde
in
(bad)
xor
pop
inc
stos
adc
movs
scas
or
push
xchg
test
dec
cmps
push
shr
sahf
in
xchg
mov
dec
pop
push
je
jecxz
dec
adc
adc
nop
scas
xchg
push
(bad)
int3
jno
js
aam
mov
cmps
add
dec
sub
xchg
lahf
repnz
lods
push
adc
add
mov
stos
mov
and
mov
sahf
cmp
mov
push
mov
inc
push
shl
lods
fisub
and
mov
or
mov
test
dec
xchg
lods
adc
sbb
xor
push
adc
sbb
and
daa
dec
inc
inc
xchg
jbe
stos
jb
push
pop
cmp
scas
in
ins
jae
add
add
pushf
cmp
mov
scas
out
xor
pusha
outs
xchg
test
and
mov
scas
push
je
sahf
xchg
hlt
push
xor
push
fistp
dec
into
stc
jae
mov
pop
cmp
hlt
mov
lea
mov
cmp
setle
nop
mov
stos
and
inc
iret
jb
xchg
aas
cmc
test
sar
cmps
(bad)
fidivr
fisttp
mov
or
sti
not
adc
mov
or
fcom
stos
lahf
adc
pop
sub
daa
ret
xor
fs
jecxz
dec
out
ficom
mov
pop
int3
ins
(bad)
lods
dec
stos
pop
mov
les
xchg
lahf
xor
adc
push
mul
ficomp
sbb
test
rcl
lock
inc
adc
dec
ret
es
xchg
in
mov
int3
mov
xchg
adc
test
cmc
ins
push
fdivr
jg
push
mov
mov
add
mov
xor
xor
mov
xchg
adc
scas
fnstsw
adc
pusha
scas
or
(bad)
stos
(bad)
sahf
leave
fwait
pusha
and
add
dec
cwde
ret
mov
sbb
mov
xchg
xor
xor
sub
out
jo
cmp
ret
add
pop
iret
mov
push
cwde
pop
xchg
jge
pop
sbb
jecxz
(bad)
jne
cmp
out
sub
dec
dec
mov
xor
test
dec
pop
retf
push
push
dec
repnz
mov
jl
jae
ret
sbb
xchg
pop
enter
xor
movs
add
pop
retf
jle
adc
jmp
popa
dec
lods
mov
gs
into
push
out
sub
and
cs
xchg
lods
push
sub
jo
stc
mov
xchg
mov
out
add
inc
push
push
nop
out
and
aas
cmps
ins
pop
jns
imul
js
out
dec
rol
outs
fs
pop
in
iret
out
jecxz
les
inc
jno
scas
int
popa
jle
ss
(bad)
fdiv
mov
mov
mov
mov
push
pop
dec
sub
shl
pop
hlt
loopne
adc
in
dec
mov
pushf
call
(bad)
and
hlt
bound
dec
mov
push
fmul
dec
mov
outs
jb
xor
fmul
sbb
xor
push
mov
mov
movs
add
cmp
inc
and
fchs
call
or
imul
repnz
sbb
adc
(bad)
(bad)
jle
in
mov
or
sbb
xchg
fcmovnu
dec
add
add
out
lea
retf
imul
xchg
in
dec
pusha
pop
pop
mov
call
jmp
xchg
cmps
aam
out
push
sub
popa
lds
jno
imul
call
lods
ins
push
(bad)
or
imul
retf
inc
out
or
fidivr
fldenv
jle
(bad)
fadd
xor
fild
push
in
test
mov
(bad)
dec
data16
xor
cmp
pop
aad
adc
mov
dec
les
push
add
jle
jo
adc
mov
inc
scas
fiadd
shr
push
jle
ret
pusha
sti
add
xchg
lods
ins
cmps
pop
push
std
dec
push
push
stc
mov
adc
cmps
lea
ss
ror
(bad)
cmp
cmp
mov
stc
jno
mov
cmp
js
adc
or
dec
mov
outs
pop
(bad)
xchg
lods
mov
sub
mov
jp
ss
(bad)
pop
mov
inc
sub
cmc
inc
sub
mov
repz
test
and
sub
punpckhdq
jmp
nop
adc
adc
mov
int3
hlt
inc
out
push
ins
xchg
les
icebp
jge
pop
sub
test
je
push
dec
push
or
xor
dec
pop
in
pop
push
and
jae
dec
fdivr
(bad)
ins
scas
popf
pop
sub
cli
pushf
movs
enter
mov
loop
adc
dec
pop
dec
mov
xlat
push
iret
fisttp
into
and
jbe
mov
inc
pop
adc
je
lahf
sbb
dec
aam
(bad)
leave
ficomp
fisubr
inc
and
cmps
sar
pop
adc
in
fwait
mov
movs
fsubr
dec
mov
fs
and
or
retf
pop
sub
push
arpl
mov
pop
in
cmp
shl
cwde
pop
rcr
in
and
ret
jp
movs
ins
xor
js
cmp
cmp
cmp
mov
jo
sbb
xor
jae
shl
ror
mul
les
jl
mov
cmp
imul
iret
fst
aam
xchg
mov
outs
and
add
test
dec
mov
xor
sbb
sub
and
sahf
xchg
(bad)
mov
ins
xor
out
inc
sbb
ss
jmp
and
aaa
je
sbb
outs
(bad)
fwait
and
dec
push
add
out
lods
xchg
cs
mov
sub
fs
rcr
pop
adc
scas
test
xchg
stc
and
or
push
cmovp
mov
int
xchg
(bad)
out
ss
jge
daa
mov
call
call
in
gs
mov
sti
repz
jp
out
sub
lods
stos
sbb
daa
inc
mov
mov
xchg
mov
or
sar
mov
(bad)
xchg
popf
leave
mov
xor
xor
arpl
add
pop
jbe
push
jo
(bad)
call
outs
and
cmps
mov
cmps
push
inc
scas
fwait
pop
push
repnz
out
sbb
(bad)
cmc
rcl
adc
or
push
mov
mov
test
or
mov
ror
jo
in
mov
add
lahf
gs
mov
arpl
push
mov
xchg
ss
dec
aas
push
popa
scas
mov
sbb
movs
clc
pop
clc
ss
and
xchg
rcr
idiv
mov
sbb
nop
add
(bad)
test
test
ins
adc
push
push
das
and
mov
pop
leave
sahf
and
dec
lock
or
div
mov
inc
mov
in
sub
es
sub
neg
test
pusha
push
aas
cmps
cmp
jbe
mov
push
stos
adc
cdq
daa
lods
or
mov
push
call
rcr
or
test
ret
loopne
pop
movs
dec
stos
std
pop
aad
sbb
cli
cmp
outs
xor
cmps
test
jecxz
leave
out
jne
enter
pop
rol
and
popf
dec
call
scas
mov
stos
shl
jmp
enter
xchg
rcr
in
jmp
hlt
jnp
test
pop
les
mov
cs
push
add
cmp
pop
inc
mov
js
xor
xor
xrelease
ja
je
or
mov
mov
jl
push
sub
or
jmp
fdivr
in
fld
mov
mov
cmps
and
sub
adc
(bad)
repz
mov
or
jmp
sbb
(bad)
out
sbb
aaa
adc
sbb
div
cli
xchg
fxch
cmp
sbb
jecxz
cmp
sbb
pop
inc
sahf
div
addr16
adc
jg
add
cdq
shufps
adc
fnstsw
mov
dec
retf
lahf
dec
mov
or
jns
in
xor
inc
mov
mov
leave
outs
es
xor
dec
dec
(bad)
cmp
mov
jns
dec
mov
inc
add
lods
mov
ret
dec
(bad)
std
add
mov
gs
fimul
cli
aad
retf
jecxz
mov
inc
fcomp
mov
mov
mov
lods
inc
out
repz
leave
mov
out
fisubr
mov
jecxz
inc
jg
cmp
mov
sub
rcr
sub
mov
inc
data16
int
daa
scas
cdq
es
cld
adc
and
(bad)
inc
icebp
mov
leave
cmp
cmp
mov
mov
sahf
lea
pop
addr16
adc
lock
sbb
adc
prefetch
add
xchg
rcl
push
fisttp
inc
iret
jno
in
or
mov
scas
test
fadd
push
aas
xchg
cmps
scas
mov
(bad)
arpl
xor
jge
and
ins
pop
(bad)
imul
adc
hlt
mov
rcr
arpl
push
sbb
mov
popf
mov
gs
addr16
out
sub
pop
pop
rcl
push
mov
mov
fcom
iret
mov
mov
scas
jge
into
adc
sub
fsubr
cmp
mov
mov
imul
retf
jge
jmp
mov
sahf
repz
scas
and
test
cmp
xor
aam
jne
or
loope
or
lods
(bad)
fimul
mov
cli
push
das
ror
push
add
ins
movs
add
out
daa
fsubr
dec
dec
adc
push
es
add
or
xchg
mov
leave
inc
xchg
jb
and
mov
in
dec
dec
call
jge
imul
mov
add
mov
iret
xor
stos
sahf
push
mov
(bad)
push
pop
push
jl
add
mov
(bad)
mov
ins
push
lock
inc
and
loopne
test
jae
pop
in
sbb
mov
push
sub
lock
push
pop
ret
aaa
sub
add
and
aad
pop
mov
mov
scas
mov
scas
mov
iret
xchg
ja
inc
ins
xlat
cmp
(bad)
fcmovnb
(bad)
jb
loop
sahf
xor
pop
inc
iret
mov
mov
ins
mov
stos
pop
pop
mul
push
mov
push
fwait
test
xchg
call
cli
call
cmp
cli
or
xor
sub
pop
xor
leave
jl
ret
pop
push
popf
sub
ret
ins
dec
inc
inc
ret
xor
jp
dec
icebp
push
es
popa
xchg
aas
icebp
(bad)
in
cmc
inc
iret
ins
dec
fwait
adc
pop
imul
xlat
pushf
mov
cmps
xor
sub
sbb
ror
pop
cmp
sub
fisttp
(bad)
push
sbb
shr
xor
push
push
mov
or
pop
lahf
sub
push
mov
jb
outs
push
or
clc
cmc
mov
push
fnstcw
jg
jl
push
push
(bad)
xor
hlt
sbb
arpl
cli
mov
xchg
cmp
pop
adc
or
lahf
sbb
jmp
aam
sub
mov
push
xchg
or
loope
gs
mov
mov
aad
call
ds
sub
sbb
pop
xor
xor
and
je
xchg
mov
adc
scas
dec
cmp
dec
push
push
gs
loop
enter
adc
arpl
adc
aam
mov
je
test
adc
imul
mov
inc
lds
mov
fs
out
mov
inc
jo
cmps
jmp
enter
sbb
add
xlat
ins
xor
mov
mov
aad
add
mov
pop
in
inc
cmps
add
mov
int3
nop
lahf
and
or
into
lds
jp
mov
mov
stos
mov
add
cmps
mov
lock
sahf
inc
add
ds
xchg
pop
xchg
test
data16
mov
dec
stc
mov
shl
movs
loop
dec
mov
jecxz
fnstenv
inc
xchg
sar
lods
jl
cli
ror
pop
clc
call
das
xchg
xchg
lea
mov
cmp
add
sti
aas
sbb
imul
retf
imul
sbb
sub
sar
mov
push
inc
mov
mov
push
movs
jnp
push
mov
jmp
cmp
xchg
mov
mov
inc
sub
jmp
shl
inc
sub
xchg
or
xor
sbb
push
retf
call
pop
cwde
out
xor
jmp
dec
sub
mov
ja
jp
mov
dec
sbb
ror
sub
xor
jle
out
lods
js
mov
mov
or
icebp
pop
or
(bad)
loop
dec
nop
lods
dec
gs
mov
mov
xchg
inc
mov
adc
fadd
cmovae
aad
adc
outs
fstp
int
sbb
rcr
inc
pop
popa
sbb
jbe
ret
jecxz
retf
repz
mov
rcl
ret
cmp
stos
into
into
outs
stos
mov
sub
cmp
push
xlat
mov
dec
cmps
pop
dec
imul
mov
enter
pop
mov
or
ja
lods
sub
in
or
imul
jnp
mov
or
pop
sbb
and
xchg
clc
leave
call
arpl
(bad)
call
pop
ja
mov
mov
cs
jle
(bad)
call
dec
mov
and
push
std
out
add
push
sub
mov
pop
adc
adc
sbb
pop
test
pop
xchg
jmp
(bad)
ins
das
or
inc
pavgb
es
add
xchg
fdiv
jno
sbb
(bad)
bound
pusha
adc
push
call
lds
add
out
jnp
sti
jmp
or
(bad)
loope
mov
loopne
std
inc
sar
data16
pop
cmp
mov
pop
jnp
loop
xor
push
pop
cmp
adc
mov
sbb
lods
lods
xor
pop
je
sbb
ret
dec
dec
sub
jl
outs
(bad)
pop
addr16
das
pop
retf
push
push
into
stos
test
fwait
sti
pop
push
nop
outs
hlt
pop
adc
test
leave
sub
leave
jbe
mov
cmp
shl
sbb
pop
xchg
dec
pop
ins
push
xchg
jno
sbb
push
das
out
stos
add
stos
jp
cmp
push
cmp
icebp
ret
jae
dec
(bad)
mov
mov
icebp
fwait
retf
retf
jge
pop
sub
je
pushf
cmps
or
popf
jnp
or
pop
movs
and
test
ds
pop
adc
jbe
outs
movs
pop
xchg
cwde
pop
movs
sub
repz
ins
popf
ret
js
or
mov
jmp
sahf
dec
shl
fnstcw
dec
es
test
stc
jge
into
movs
lock
fucomip
jo
push
(bad)
in
cmp
into
mov
push
and
mov
ins
push
call
sub
retf
jbe
add
inc
dec
mov
mov
push
imul
and
imul
jl
pop
pop
nop
stc
aaa
ds
es
jmp
cwde
loope
cmp
imul
outs
dec
cmp
fiadd
adc
cmp
and
dec
test
sahf
xor
arpl
and
nop
sub
sbb
test
ja
cmc
pop
inc
lods
pop
mov
sub
cld
int3
rcr
test
retf
gs
ret
adc
pop
push
(bad)
shr
and
in
ror
imul
pop
mov
sbb
dec
sti
mov
jb
in
cli
jne
mov
lds
push
jb
and
ins
daa
cmp
inc
xor
pusha
mov
push
add
sub
push
xchg
retf
pop
shr
adc
imul
jmp
jnp
js
dec
pop
lock
xor
in
add
mov
jg
sbb
lds
out
jl
add
sub
in
aaa
or
sub
gs
pop
add
pop
imul
rcr
xor
sbb
xchg
add
xor
(bad)
aad
mov
loop
adc
ror
ins
retf
shl
mov
mov
mov
inc
dec
scas
retf
adc
jmp
mov
xor
js
and
mov
mov
sti
jge
push
call
jbe
std
adc
pop
push
out
pop
sbb
lock
mov
fcmovbe
push
add
outs
mov
sub
pusha
xchg
shl
in
repz
leave
xchg
pusha
cmps
aaa
xchg
loope
xor
retf
dec
mov
sbb
cmp
push
out
dec
jno
push
stc
rcr
add
das
mov
sub
push
outs
stos
daa
or
sti
mov
adc
cmp
dec
into
stc
int
jp
sbb
xchg
js
inc
call
adc
enter
cmps
xor
xlat
jo
in
xchg
cmps
xchg
ins
pop
push
fcomp
repz
(bad)
xchg
fadd
fisub
(bad)
xchg
fadd
push
push
xor
inc
xor
jb
test
ins
loope
inc
in
jns
aas
mov
sbb
adc
mov
scas
push
add
mov
inc
(bad)
scas
jne
or
or
movs
call
dec
cmp
lea
xlat
inc
cmps
out
pop
ins
packuswb
js
rcl
fmul
push
jl
stc
sub
pop
and
mov
dec
jns
and
cmp
jbe
jne
or
loope
cmp
adc
pop
out
ins
cmp
ins
xchg
jge
lods
ret
inc
mov
(bad)
je
sbb
sub
scas
popf
add
lahf
shl
out
movs
pop
mov
push
jge
inc
cwde
pop
mov
adc
mov
xor
ffreep
call
push
outs
fs
cmovnp
movs
push
fcomi
sub
ret
sbb
push
pusha
cmp
push
mov
aas
push
das
adc
inc
lods
push
movs
into
retf
(bad)
jo
pusha
in
daa
dec
inc
ficom
mov
or
cmps
scas
pop
out
and
popf
nop
xchg
loope
cmps
(bad)
leave
repz
pop
cmp
push
jno
jo
(bad)
mov
xchg
sub
inc
pop
jno
pop
not
daa
adc
xor
into
clc
fdivr
push
jno
dec
mov
out
lods
push
cmp
lock
les
fwait
lods
jmp
sahf
fcomp
xchg
gs
popf
adc
dec
leave
loope
push
dec
out
add
test
push
lock
(bad)
or
or
call
pop
dec
mov
mov
nop
dec
pop
sbb
outs
push
xor
(bad)
pop
push
or
in
mov
mov
sti
ret
add
push
mov
je
daa
inc
out
inc
sub
add
popf
cli
aad
stos
push
jge
gs
pop
jnp
pop
xchg
shr
in
mov
hlt
in
sbb
(bad)
sub
dec
cmp
mov
je
or
xor
mov
popa
mov
sbb
in
push
pop
shl
retf
dec
push
dec
inc
movs
jmp
jmp
push
movd
inc
pop
sbb
mov
ja
push
leave
rcl
or
dec
add
jno
or
sti
sub
das
add
cli
fisub
xor
push
inc
mov
gs
dec
sahf
adc
fwait
mov
lods
or
fmul
daa
je
xlat
idiv
scas
and
xchg
xor
mov
cwde
mov
inc
jno
push
mov
mov
inc
int3
mov
push
test
xor
and
mov
mov
imul
fwait
mov
das
xor
cmp
mov
clc
xor
out
lods
or
jmp
bound
push
sahf
sbb
ins
sbb
test
and
(bad)
sub
jo
nop
jbe
cmc
mov
arpl
into
mov
(bad)
fisttp
mov
push
cmp
call
mov
jmp
push
inc
mov
icebp
mov
dec
lods
pop
int3
call
pop
pop
xchg
jmp
ja
mov
cmc
mov
fdivr
and
cmps
shl
pop
push
inc
sahf
shl
iret
jmp
mov
movs
jno
push
les
cli
mov
or
jno
inc
lds
add
push
enter
jmp
add
push
fsub
sbb
add
sub
mov
gs
int
dec
adc
enter
or
(bad)
outs
fwait
(bad)
or
mov
ror
mov
(bad)
mov
test
adc
xchg
aam
mov
inc
retf
sub
pop
and
inc
lods
fucomp
jb
imul
mov
pop
xor
int
test
mov
sub
jae
nop
icebp
retf
icebp
xor
jle
pop
pop
push
pop
sub
movs
aas
inc
fcom
adc
lahf
fucom
int3
ins
sub
pop
repz
arpl
daa
push
daa
sahf
push
aaa
sbb
adc
inc
add
jle
ja
data16
movs
pop
or
push
gs
cmps
and
cdq
daa
cmps
out
dec
(bad)
or
dec
add
jnp
fstp
inc
je
out
push
pop
inc
sub
push
fst
xor
(bad)
fist
arpl
mov
push
mov
stos
icebp
jbe
call
mov
cmp
bound
and
dec
sub
in
add
fistp
inc
in
adc
mov
out
mov
mul
xchg
inc
sbb
mov
(bad)
adc
movs
mov
mov
bound
pushf
loopne
dec
aas
(bad)
lahf
xchg
xlat
dec
push
jno
push
jmp
es
in
mov
or
pop
mov
shl
mov
xchg
cmp
shr
mov
inc
lahf
mov
mov
stos
jmp
or
or
(bad)
aad
or
add
call
sbb
scas
fs
sbb
lahf
(bad)
aas
dec
jnp
dec
push
ds
and
sub
lods
inc
rol
inc
mov
mov
call
jb
push
out
repz
inc
or
loop
hlt
aad
lds
imul
shl
adc
push
aad
dec
sbb
adc
mov
add
fsubp
clc
jge
nop
call
push
push
bnd
test
xchg
movs
adc
mov
call
test
xor
add
push
push
jne
adc
lods
out
inc
retf
pop
je
and
push
sub
and
xchg
pop
adc
cmp
rcr
push
shr
lock
sbb
les
dec
push
fisub
sub
daa
out
jg
lds
loop
call
mov
jmp
or
movs
js
ins
jmp
jne
pop
out
jle
and
jo
in
mov
sub
push
lea
das
sub
push
xor
cmps
cmp
mov
repnz
fist
adc
mov
add
movs
push
sahf
add
pop
xor
mov
ins
aas
sub
lods
lahf
sbb
mov
dec
es
sahf
xchg
cmp
mov
adc
loop
pop
mov
das
inc
mov
les
(bad)
dec
ret
mov
cmps
fist
mov
jae
xchg
mov
mov
jae
mov
and
push
xchg
adc
or
push
cdq
mov
xchg
push
js
dec
mov
inc
repnz
dec
daa
leave
popf
scas
cmp
stos
adc
sbb
mov
clc
push
sub
pop
add
xor
xor
cmp
cmp
push
cmp
sub
fisttp
popa
adc
inc
(bad)
shl
fs
jl
cli
sub
stos
sbb
and
bound
fwait
mov
sti
jb
jp
loope
add
fisubr
in
fcom
inc
sub
dec
sub
sahf
aam
outs
test
rcr
jo
mov
mov
icebp
ss
or
push
loopne
xor
out
sub
repnz
xchg
dec
in
xchg
push
sbb
mov
mov
xor
jne
in
(bad)
and
sbb
pop
cmps
fisttp
ins
scas
loopne
jecxz
jg
sub
fisttp
enter
pop
xor
outs
pusha
push
inc
mov
or
imul
loopne
(bad)
mov
repnz
mov
xor
mov
and
outs
stos
movs
pop
enter
inc
lods
mov
push
ds
xor
mov
push
lods
mov
fisttp
outs
mov
(bad)
aam
aaa
loopne
ret
and
out
jle
lahf
inc
in
dec
jl
cmp
imul
mul
pop
in
xchg
sbb
inc
test
inc
ficom
cdq
out
or
add
(bad)
mov
cld
pop
(bad)
ins
ret
gs
(bad)
iret
mov
lds
sbb
mov
jmp
pop
ror
(bad)
lahf
cmp
pop
gs
or
cmps
push
push
aas
inc
push
pop
dec
pop
xchg
jmp
in
arpl
pop
mov
stc
xchg
sbb
pushaw
and
test
fs
xchg
(bad)
stos
loopne
outs
adc
and
adc
pop
out
cmp
mov
cmp
adc
inc
aam
xchg
or
sahf
mov
push
cmps
int
fs
mov
in
xchg
test
xchg
and
arpl
fs
push
add
adc
shr
dec
cmps
xchg
cmp
mov
out
hlt
sbb
xchg
sub
jnp
rcl
xor
mov
into
(bad)
cli
and
les
ror
cdq
rcr
mov
xor
xchg
xor
nop
ret
pcmpeqb
and
dec
xchg
jl
adc
jbe
xor
loop
push
test
daa
ins
push
push
sahf
addr16
mov
(bad)
hlt
jmp
ret
cmp
(bad)
(bad)
bound
test
fs
cmp
sub
push
test
popf
stos
lahf
mov
ins
call
popa
xlat
push
mov
test
sbb
lods
jbe
push
and
inc
cmp
sub
push
xor
mov
mov
nop
jmp
inc
mov
addr16
mov
cmp
test
hlt
retf
repz
dec
aas
bound
movs
xor
jnp
stos
test
jo
mov
push
push
mov
pop
cmc
inc
mov
or
add
repnz
imul
cmp
leave
imul
adc
add
cmp
xchg
stos
ins
dec
xor
into
push
cwde
cmp
fidiv
or
das
ficomp
popa
mov
popa
xor
stc
and
xor
and
adc
ret
rcr
outs
adc
sub
and
mov
rcl
movs
(bad)
xor
mov
mov
imul
dec
sub
ret
ss
test
push
xchg
sahf
add
cmp
test
xchg
pop
cmp
mov
sub
ficom
mov
xchg
push
mov
mov
pop
or
aaa
out
ds
dec
retf
inc
xor
push
shl
add
or
in
sub
(bad)
dec
mov
fs
mov
ins
retf
fsub
cmp
sub
and
mov
mov
icebp
and
nop
mov
add
test
jbe
xor
pop
lods
movs
rol
ja
cmp
adc
fwait
clc
retf
imul
jge
pop
ins
pop
int
dec
mov
mov
bound
sbb
push
push
xor
rcl
push
mov
scas
cmp
pop
mov
call
pop
(bad)
dec
dec
int3
xchg
arpl
shl
mov
mov
lock
fmul
adc
push
out
mov
das
rol
hlt
hlt
(bad)
aad
jno
lahf
loope
jo
xlat
cmp
dec
jl
jns
test
test
dec
and
push
add
setnp
cmps
mov
push
out
mov
cwde
or
lahf
mov
mov
test
ja
je
cmp
test
lods
sub
lock
dec
push
out
int
(bad)
jmp
cmp
lods
psraw
aaa
daa
cli
sbb
adc
cli
shl
hlt
popa
dec
cwde
push
sub
xchg
je
or
idiv
jge
inc
scas
cmp
outs
in
sub
sub
das
push
add
inc
mov
sbb
sbb
and
dec
sub
inc
imul
cmp
and
stc
sbb
mov
mov
sti
(bad)
xor
adc
and
out
cld
fld
mov
aaa
push
sub
mov
push
call
pop
xchg
ret
movs
xor
xchg
xor
test
psadbw
push
retf
inc
jle
dec
mov
mov
stos
pop
lds
jp
stos
mov
add
pop
scas
adc
data16
adc
into
and
xor
pop
pop
fwait
imul
gs
out
mov
push
lods
lods
scas
sahf
push
ror
in
int3
data16
mov
lahf
nop
stos
xor
mov
into
data16
sub
out
lahf
test
fidivr
xor
xchg
sub
jo
in
in
jne
cmp
add
rcr
stos
ret
pop
mov
jle
sub
shl
jne
dec
mov
push
(bad)
mov
inc
and
jp
mov
xchg
mov
and
nop
iret
inc
icebp
xor
mov
sahf
aam
jae
out
adc
cmp
xchg
out
(bad)
xor
inc
lods
jnp
or
xlat
push
js
or
ror
les
mov
in
xchg
test
push
lods
sub
ins
std
mov
mov
sub
jecxz
add
in
add
popa
repnz
dec
(bad)
sbb
inc
mov
dec
nop
sub
mov
inc
leave
dec
add
jmp
fwait
arpl
cmc
cmp
daa
in
mov
imul
push
cs
sub
in
clc
ja
sahf
push
icebp
das
stc
fiadd
jb
in
sbb
push
pop
add
adc
ins
pop
in
js
lods
ds
cmp
add
into
sbb
stos
stos
push
dec
mov
pop
xchg
pop
add
es
mov
imul
or
stos
retf
cmp
rcr
fcmovb
pop
pop
mov
xlat
aam
add
inc
xor
imul
loope
cwde
fmul
stc
push
aaa
aaa
mov
inc
mov
in
out
push
loop
cmp
xchg
pop
test
imul
fwait
ja
mov
xlat
repz
jb
scas
sbb
or
jae
stos
mov
dec
imul
enter
gs
test
dec
xor
cdq
scas
and
fistp
fsub
xor
retf
cdq
jmp
push
in
outs
mov
in
xor
dec
lea
aas
xchg
mov
push
cmp
add
shl
ret
je
push
nop
popf
call
adc
xor
xor
push
inc
cli
lock
mov
dec
jmp
add
jl
test
and
mov
mov
ja
mul
xlat
cmp
add
xchg
loope
loopne
(bad)
sbb
es
xchg
mov
bound
cld
fs
xlat
inc
add
sbb
into
pusha
fdivr
xlat
cmp
loope
retf
mov
sbb
sub
mov
pop
mov
or
xor
cdq
lods
push
clc
sub
ins
fmul
cld
add
or
(bad)
jns
arpl
(bad)
xchg
mov
and
cmp
scas
mov
fld
cmp
mov
add
push
or
mov
push
adc
in
mov
sahf
cmpps
or
inc
arpl
cld
xchg
fcmovnb
repz
loope
pop
xchg
sbb
push
div
mov
in
inc
lods
movs
jmp
adc
mov
les
mov
inc
push
or
out
outs
push
fcom
mov
mov
jb
inc
fstp
sbb
pop
pop
fdiv
mov
dec
jg
xchg
(bad)
cdq
xor
jp
out
ins
popa
cmp
xchg
xor
dec
daa
adc
cmp
ret
push
xlat
(bad)
adc
data16
push
test
iret
cmps
test
ds
les
and
into
sub
jnp
xor
inc
lds
adc
cmp
and
dec
imul
jge
in
mov
inc
repnz
and
jle
popa
dec
cmc
in
mov
pop
mov
scas
pop
push
mov
mov
sbb
adc
adc
enter
xchg
div
pop
call
data16
adc
test
pop
out
xor
int3
in
jp
dec
mov
out
and
cmovs
mov
sub
out
inc
out
or
push
cmps
xchg
and
int
xor
xchg
inc
xchg
inc
neg
scas
test
push
mov
jp
inc
shl
pop
mov
sbb
or
push
and
add
cmps
adc
(bad)
inc
cmp
sbb
sub
jbe
inc
mov
mov
push
into
cmc
cmps
adc
fimul
or
(bad)
out
out
(bad)
adc
ficom
jb
test
sub
ins
jmp
dec
fbstp
sub
add
jle
cmp
popa
pop
sbb
pusha
push
push
fcom
imul
div
(bad)
mov
inc
xchg
ret
push
pop
ins
jnp
arpl
enter
dec
mov
add
adc
mov
dec
pop
int
mov
fdiv
pop
mov
sti
test
cld
and
push
xchg
test
das
jne
push
popf
sar
pop
adc
stos
mov
aas
leave
(bad)
jne
les
push
add
mov
clc
pushf
pop
cli
mov
xchg
(bad)
pop
jo
push
int3
sbb
jo
fst
sbb
inc
ss
in
adc
sbb
sub
and
lahf
jmp
mov
aam
aaa
loopne
and
mov
pop
call
mov
ficomp
ss
cmp
in
jbe
mov
mov
stc
loop
lods
rcr
dec
idiv
enter
xchg
push
jae
lods
mov
sbb
jno
pop
div
dec
movs
les
xchg
sahf
dec
jnp
clc
in
movs
jle
stos
and
fisub
push
dec
push
xchg
sub
or
pop
inc
xor
sub
and
inc
out
jae
push
stos
adc
pop
ins
sub
into
push
add
es
sub
and
je
inc
mov
and
sub
pusha
shl
dec
cmp
xlat
mov
push
stos
adc
clc
xchg
xchg
sub
mov
cmc
fsub
push
leave
inc
fwait
in
jb
push
hlt
or
shl
cmps
sub
dec
and
addr16
pop
xchg
ja
mov
xor
scas
or
sub
sbb
mov
sbb
test
adc
sti
xchg
sub
jbe
sahf
sbb
push
push
lds
test
test
mov
sbb
xchg
leave
movs
es
mov
test
pop
pop
out
fwait
xchg
test
add
or
cli
fld
add
xchg
xchg
(bad)
push
and
sar
lock
ins
in
and
cmp
mov
cmp
push
(bad)
jecxz
cdq
mov
mov
mov
mov
loop
sti
fwait
xchg
loope
and
sub
in
ja
dec
in
jp
or
in
xor
dec
xchg
shr
push
arpl
mov
test
pop
jp
inc
adc
imul
das
jns
aam
nop
lds
(bad)
aam
mov
cmp
rcl
mov
stc
mov
xchg
sub
imul
icebp
call
and
rol
or
inc
jecxz
jecxz
out
pop
call
fbld
fistp
and
pop
cmp
nop
xchg
mov
retf
lahf
adc
adc
push
test
adc
outs
cmp
or
in
add
shl
xchg
leave
mov
jno
in
cdq
repnz
mov
pop
cld
(bad)
dec
and
gs
xchg
js
cwde
fld
nop
inc
leave
push
pop
out
add
pop
adc
mov
mov
pushf
aaa
dec
add
loopne
sub
in
scas
movs
fwait
clc
dec
in
popa
inc
movs
sub
dec
pop
cmc
dec
xor
add
sbb
and
xchg
cmps
loop
popa
adc
sbb
mov
aam
xchg
mov
ds
arpl
mov
ret
push
lods
shl
jbe
pop
in
mov
test
mov
jmp
jmp
mov
push
dec
xchg
imul
or
stos
cmc
ret
int
mov
add
mov
xlat
push
adc
aam
inc
xchg
dec
lea
push
or
xor
jle
outs
and
mov
out
pop
ins
or
test
inc
inc
xchg
mov
dec
cmc
scas
inc
lods
pop
outs
cmp
pop
xor
and
push
xchg
xchg
fwait
adc
loop
in
out
iret
adc
add
mov
out
inc
ss
mov
imul
in
xchg
into
push
adc
inc
mov
mov
aam
adc
imul
jmp
mov
(bad)
inc
es
invd
idiv
mov
jmp
lahf
ins
shl
popf
sbb
imul
add
jl
inc
ds
push
jg
cmps
mov
xchg
out
vmread
sbb
xchg
ins
mov
dec
inc
ins
loope
push
stos
sub
and
aam
xor
int3
sub
and
loopne
mov
cmp
sub
dec
xor
mov
fwait
(bad)
pushf
mov
sbb
pop
in
xchg
cmps
xor
add
das
adc
xchg
xchg
ja
loop
adc
xchg
es
jmp
fisub
scas
jne
sbb
test
pop
inc
adc
push
cmp
cmp
or
pop
add
inc
jmp
test
rcl
dec
add
pop
dec
or
mov
adc
popf
mov
jge
inc
add
jae
aaa
cmp
jae
xor
ret
pop
xchg
cmps
adc
loop
inc
(bad)
bound
jmp
jp
dec
add
cmp
sub
sub
jecxz
xchg
inc
xchg
inc
fs
jne
(bad)
and
lods
in
scas
jl
dec
call
cmps
pop
mov
stc
hlt
sub
mov
jmp
pop
(bad)
sub
data16
inc
jbe
jmp
out
mov
mov
xchg
sub
xor
std
div
enter
cli
in
mov
aam
ins
adc
(bad)
fdivr
jns
lods
movs
cmps
fst
lahf
ret
mov
mov
popa
and
cwde
outs
stos
jp
test
jge
std
out
mov
add
pop
cmp
imul
bound
out
enter
ins
pop
frndint
clc
adc
cmp
cdq
pop
sbb
xchg
dec
aam
sbb
add
(bad)
lds
add
cmps
adc
dec
adc
mov
push
popa
mov
sbb
ins
aam
jmp
mov
minps
dec
(bad)
cmps
call
mov
cmp
ucomiss
mov
dec
xchg
and
sbb
ret
push
cmp
mov
mov
and
mov
mov
jmp
lods
sbb
cmp
loop
fidiv
xchg
jmp
mov
xor
push
push
jnp
(bad)
ror
push
cmc
pusha
dec
pop
loope
lea
and
pop
inc
adc
lods
sub
adc
sbb
or
(bad)
mov
cmps
rcr
dec
mov
(bad)
cld
call
jne
(bad)
jmp
das
bound
jle
xor
lahf
out
adc
sbb
clc
shr
push
pop
fidivr
into
push
rol
sub
test
lods
fidivr
sbb
adc
in
les
cmps
(bad)
mov
je
mov
je
imul
xchg
and
scas
addr16
xchg
pop
adc
movs
push
cld
mov
add
inc
push
stc
pop
inc
ficom
and
sub
xchg
jne
out
loop
out
mov
stos
sub
mov
sub
xchg
mov
mov
add
not
push
push
fwait
push
mov
cmp
mov
js
jnp
aad
(bad)
cli
(bad)
test
scas
and
mov
mov
mov
add
jmp
jae
mov
cmps
out
stos
clc
mov
mov
bound
inc
cmp
retf
enter
mov
mov
in
push
inc
shl
stos
in
loop
jecxz
cmp
jmp
fxch
sbb
xchg
and
enter
shr
add
fst
je
sbb
push
jb
aas
(bad)
add
jns
xchg
mov
adc
outs
scas
xor
pop
test
sahf
mov
inc
femms
pop
push
inc
cli
jl
out
pop
mov
fadd
lahf
sahf
adc
ds
jnp
sbb
sub
push
mov
sbb
je
div
mov
jg
rcl
cli
sbb
jb
test
xlat
(bad)
mov
jge
mov
ds
pusha
adc
jns
repz
repnz
mov
(bad)
mov
arpl
in
loop
mov
frstor
jo
mov
gs
mov
fstp
mov
movs
adc
clc
js
lds
test
jecxz
push
pop
cmp
push
mov
mov
addr16
fs
xchg
mov
mov
retf
test
ss
adc
and
out
jg
cmp
cdq
iret
mov
add
mov
sar
stos
imul
mov
in
dec
in
retf
cmc
or
adc
cmp
adc
imul
jo
bound
pop
jo
pop
lds
adc
stc
jae
in
ficom
xchg
test
iret
lahf
aad
into
and
movs
jge
outs
add
imul
mov
aad
pop
jne
cmps
sub
jl
dec
cmc
out
out
fcmovnbe
or
pop
cs
sar
add
dec
jl
sub
(bad)
jnp
adc
cmp
mov
mov
out
sahf
lods
or
push
sbb
into
push
xor
jl
adc
ins
mov
adc
mov
inc
pop
ins
stos
jl
add
fwait
xor
pop
test
jbe
add
lods
sbb
or
leave
xor
inc
cmps
lods
shl
xchg
sub
mov
adc
fld
xor
sbb
mov
cwde
pop
outs
or
cmps
mov
pop
in
(bad)
pushf
aad
(bad)
push
out
mov
retf
inc
mov
(bad)
mov
mov
inc
(bad)
shr
in
xor
dec
cdq
xchg
mov
inc
iret
sbb
rol
push
sbb
inc
retf
fs
push
mov
dec
ss
xchg
pop
cwde
addr16
outs
mov
adc
push
sub
pop
jb
and
jns
dec
lds
ret
sub
int3
mov
stc
and
scas
arpl
dec
or
mov
fdivr
and
and
cs
add
iret
jl
hlt
mov
mov
pop
popf
mov
push
in
sar
loopne
and
mov
lds
movs
dec
xchg
pop
(bad)
jmp
mov
adc
cdq
adc
inc
mov
push
add
push
(bad)
push
mov
sub
mov
(bad)
mov
mul
dec
jmp
ins
cs
jns
lds
shl
or
cs
mov
sbb
sti
push
xlat
push
push
push
sti
mov
push
mov
pop
cmps
push
jmp
nop
inc
les
out
push
pop
sub
push
sbb
dec
icebp
mov
mov
int3
cdq
icebp
mov
iret
sub
mov
inc
in
pop
adc
test
inc
rcr
(bad)
leave
jge
xchg
shl
lea
dec
adc
leave
rol
lock
pop
movs
mov
inc
outs
adc
(bad)
cmps
lods
mov
sub
cmps
dec
jge
xor
sti
fmul
and
std
jne
inc
push
test
(bad)
and
xor
std
jmp
data16
mov
jge
ds
iret
jne
cmc
xchg
jge
adc
retf
fmul
out
jne
jo
adc
pop
sub
arpl
scas
test
mov
pusha
or
aas
mov
stos
mov
punpckhbw
jle
mov
cs
mov
pop
int3
sub
jae
sbb
and
cmovne
jns
ror
retf
ss
cmp
push
dec
imul
jl
xor
xchg
test
aad
jns
shr
pop
xor
push
push
dec
xor
sub
in
jmp
fadd
cmps
out
add
mov
icebp
and
ret
imul
and
mov
jmp
fwait
mov
add
leave
and
jmp
in
test
push
xor
mov
fld
imul
push
mov
js
int
lea
or
sahf
stos
xor
sahf
jno
ror
xor
sti
mov
dec
sbb
add
adc
add
mov
jo
cmp
clc
jl
mov
jmp
pop
mov
cdq
jg
xor
js
jmp
mul
int
sub
xor
int
inc
cwde
rol
sahf
adc
les
(bad)
xchg
retf
imul
pop
push
stc
not
adc
push
(bad)
push
lea
(bad)
sbb
inc
jne
inc
jecxz
in
cmp
stos
call
adc
push
ficom
(bad)
mov
mov
jb
scas
or
xchg
fimul
mov
int3
ror
fwait
data16
or
mov
xor
lds
push
mov
aad
sbb
xchg
inc
mov
sahf
icebp
jae
ja
mov
mov
inc
jecxz
test
ret
cmp
push
jmp
inc
aam
and
cmp
retf
aas
ins
mov
scas
rcl
sbb
add
xchg
jge
imul
mov
sub
dec
inc
iret
and
aam
loopne
aad
mov
sub
fstp
mov
lods
fdivr
push
retf
sbb
sub
sub
mov
lods
pop
lods
mov
jmp
adc
mov
outs
mov
xor
sbb
and
ds
sub
mov
sbb
sbb
mov
fbld
cmps
cmp
push
jbe
mov
mov
mov
inc
out
fldenv
push
fsub
(bad)
jno
mov
cs
mov
push
in
and
sti
add
icebp
jne
ss
xchg
push
aaa
popa
jecxz
pushf
(bad)
mov
pop
loopne
in
sub
in
sbb
sub
sbb
repz
mov
sub
shr
(bad)
(bad)
scas
mul
cmp
pop
jp
int3
xchg
mov
mov
inc
xchg
mov
and
movs
inc
push
jecxz
mov
and
rcr
ins
movs
jmp
push
adc
cmp
push
xchg
dec
dec
jmp
pop
mov
lock
cmp
mov
pop
bound
and
cmp
(bad)
cdq
mov
call
mov
aas
imul
fsub
pop
mov
out
and
and
pop
dec
mov
jbe
lods
push
inc
cmc
xchg
data16
mov
jb
jmp
scas
into
cmps
fnsave
add
add
sbb
lock
xchg
mov
inc
sbb
sub
xchg
test
or
fwait
xchg
not
mov
add
es
call
xchg
adc
lock
add
call
add
movs
xchg
jmp
int3
dec
mov
mov
jae
loopne
in
jecxz
pushf
aaa
sub
cmps
clc
add
hlt
xor
mov
push
movs
ror
fisub
fisttp
pop
and
adc
jmp
fnsave
scas
je
jns
jne
(bad)
out
in
cs
pushf
das
mov
inc
xor
pop
mov
mov
xchg
rol
cmp
nop
mov
cld
sbb
std
popf
xchg
pop
cmp
lods
repnz
movs
xor
loopne
add
imul
mov
loopne
les
lds
xchg
mov
loope
jp
xchg
std
ins
mov
popa
add
mov
stos
xchg
leave
(bad)
fucomip
push
inc
xchg
mov
xor
mov
test
pop
pop
shl
(bad)
cmp
mov
xchg
cs
dec
adc
fbld
cmp
xchg
sar
jns
push
jns
push
inc
mov
addr16
mov
cli
mov
add
ficomp
inc
mov
out
in
mov
push
sbb
jnp
fs
mov
add
in
lods
fwait
(bad)
and
mov
addr16
push
ins
sbb
xor
sbb
lods
iret
or
inc
cmp
push
cmp
shr
jo
and
xor
fsubr
cmp
jmp
push
daa
lock
shl
inc
arpl
mov
xchg
lock
or
push
loopne
mov
or
jg
out
and
mov
ins
inc
ror
loop
fistp
cmps
call
das
mov
push
cmc
outs
sbb
xchg
rol
jb
inc
or
test
scas
add
mov
inc
in
sbb
push
repnz
adc
cmp
loopne
cdq
sbb
or
gs
test
aam
loope
lods
test
rcr
adc
mov
dec
dec
sti
pop
sahf
stos
cmp
scas
xor
fadd
xor
and
adc
add
not
adc
adc
retf
fs
mov
inc
mov
push
clc
bound
sbb
ja
stos
arpl
inc
xlat
and
loopne
mov
outs
mov
push
test
pop
cli
jne
add
das
jo
or
sbb
dec
hlt
sar
nop
sub
cmp
addr16
pushf
sahf
jle
cdq
out
mov
out
sti
add
xchg
jae
cmp
in
inc
ins
(bad)
jp
and
outs
mov
addr16
(bad)
adc
call
mov
pop
cmc
add
pop
pusha
and
cdq
add
retf
push
retf
dec
stc
inc
popf
add
xlat
inc
cli
add
push
sbb
xchg
out
adc
ror
int
dec
mov
inc
movs
mov
gs
bound
mov
adc
jecxz
push
and
mov
int3
mov
jp
cvtdq2ps
or
cld
pop
push
push
mov
ror
xchg
push
scas
jns
push
movs
add
cs
stos
mov
pop
jo
(bad)
xlat
sti
aam
jl
push
movs
dec
and
jecxz
add
js
repz
popa
jmp
fisub
icebp
jge
retf
imul
addr16
xchg
push
(bad)
mov
outs
cmc
(bad)
iret
(bad)
mov
pushf
dec
cdq
loop
enter
cmp
sbb
or
shl
mov
(bad)
(bad)
sub
icebp
pop
hlt
cmp
dec
call
std
loope
push
mov
movs
in
push
mov
bound
mov
or
push
adc
outs
pop
lea
xchg
and
enter
mov
hlt
rol
pop
jg
movs
out
aad
mov
sbb
push
sub
adc
pusha
mov
jp
sub
mov
mov
arpl
jae
mov
xchg
aas
mov
jg
rol
cmps
sbb
sahf
inc
shl
push
pop
rol
mov
and
dec
jmp
ret
inc
pop
cli
adc
sub
cmp
inc
leave
push
je
sub
mov
stc
jg
ins
mov
dec
sar
and
pop
dec
xchg
sub
sahf
pop
add
out
popf
jo
push
push
push
mov
dec
je
mov
nop
into
dec
pop
inc
mov
sub
repz
lea
movs
dec
inc
ficom
mov
lods
shl
mov
daa
test
and
sub
shl
mov
or
(bad)
js
mov
jmp
cli
out
xor
repz
aas
xchg
stos
mov
xor
add
pop
xor
ja
or
mov
xor
ins
ja
lds
ss
das
(bad)
add
sbb
pop
add
pop
push
mov
mov
pop
inc
pop
retf
jp
(bad)
dec
mov
icebp
mov
push
stos
dec
call
call
shl
ror
jbe
dec
mov
jmp
add
aaa
or
xchg
jmp
ror
lahf
pop
lods
mov
mov
shl
aas
mov
mov
jmp
or
adc
jo
jns
std
fdiv
call
aaa
(bad)
sbb
ficomp
rcl
cmc
int3
jp
mov
repnz
adc
add
jmp
or
jmp
lds
nop
jp
aaa
je
xor
xchg
sub
push
inc
push
hlt
rep
jae
inc
inc
push
push
adc
xchg
cmps
loop
push
std
es
add
inc
adc
ror
sbb
xlat
or
jg
sbb
sub
mov
xchg
hlt
(bad)
les
mov
aaa
add
jo
das
xchg
xor
pop
or
cdq
mov
or
xor
add
mov
or
inc
into
fsubr
cmps
push
inc
cmc
jge
sti
add
icebp
and
(bad)
frstor
inc
push
mov
or
push
pop
pop
call
push
inc
shl
push
sti
sbb
in
mov
mov
cmp
cmc
push
pop
lods
and
pop
inc
pop
idiv
jne
sahf
nop
call
stos
cmp
(bad)
(bad)
and
enter
enter
loopne
jmp
and
jbe
sub
add
push
cmp
outs
popa
ja
repz
mov
loopne
inc
jl
ret
fisub
sub
jbe
ror
mov
pop
test
(bad)
xchg
sbb
sahf
sbb
and
mov
jge
fimul
xchg
mov
mov
mov
loope
cs
jo
rol
movs
adc
push
(bad)
mov
pop
pop
fistp
cmp
cmp
fld
stos
adc
stos
cmp
inc
ins
loop
jno
cmps
xlat
pop
neg
and
imul
ja
inc
jp
jle
xchg
out
adc
dec
repnz
jae
mov
or
push
adc
idiv
dec
cli
sbb
or
(bad)
repnz
or
push
stos
in
xor
jge
jmp
adc
es
xchg
ret
mov
sub
or
jl
jb
pop
add
jl
fld
xor
or
pop
and
arpl
and
call
loope
pop
iret
add
push
add
pop
dec
nop
mov
xchg
nop
sub
inc
or
and
fadd
push
inc
cdq
shr
ss
cmp
mov
in
retf
inc
scas
xor
mov
mov
sbb
mov
arpl
pop
fwait
or
call
xor
and
mov
mov
jmp
sbb
dec
ficom
add
sbb
inc
sbb
sbb
jbe
imul
and
imul
sbb
lea
lods
shl
xor
sbb
cmp
imul
addr16
fwait
dec
add
fld
push
dec
inc
jno
inc
push
mov
jae
out
and
(bad)
loopne
xchg
add
in
dec
pop
lea
and
sbb
out
stc
sbb
and
jnp
add
pop
sbb
mov
pop
sbb
adc
and
repnz
pushf
mov
push
pop
pop
fstp
xor
xor
jecxz
cmps
push
data16
pop
mov
out
cmps
cld
mov
jnp
sbb
sub
xchg
and
in
movq
mov
jno
es
push
es
jnp
leave
lahf
je
sbb
sbb
sub
or
pushf
add
dec
mov
aas
mov
es
ds
sbb
mov
mov
lock
and
loope
lea
sub
sub
xor
jl
mov
add
push
sar
sar
mov
mov
idiv
mov
pop
arpl
sub
sbb
pushf
out
pop
mov
cmp
xrelease
inc
aaa
iret
mov
adc
stos
mov
stos
or
popa
mov
sub
or
or
push
mov
pusha
mov
add
xor
jne
mov
fistp
cmps
inc
mov
inc
cwde
jg
sahf
arpl
cmp
xchg
or
dec
loopne
ins
rol
retf
push
int3
scas
mov
lahf
xchg
mov
fild
scas
push
dec
and
jl
xor
aas
les
test
stos
lock
mov
mov
jae
or
out
mov
(bad)
mov
xchg
mov
jle
push
pop
sbb
mov
bound
mov
sbb
data16
adc
adc
test
sub
aas
adc
mov
sbb
adc
sbb
pop
inc
jmp
jns
imul
jmp
cmp
imul
cmps
ret
aam
fsub
or
stc
jno
jb
pop
mov
shr
sar
mov
leave
add
dec
int
js
push
pusha
xor
test
mov
(bad)
xchg
push
nop
add
rcl
jbe
loop
jge
and
inc
dec
adc
mov
fst
mov
jp
xchg
jge
mov
mov
mov
mov
mov
mov
ror
xlat
jmp
cmp
mov
ins
movs
pop
scas
sbb
movs
xchg
dec
jne
repz
jbe
scas
sub
ins
pop
mov
and
sub
jns
mov
inc
adc
xchg
jno
mov
ret
scas
inc
stc
cmps
loopne
lahf
mov
leave
mov
test
mov
movs
mov
sub
shl
enter
inc
mov
nop
mov
cdq
push
(bad)
ins
push
js
cmc
inc
push
enter
ins
dec
xchg
icebp
leave
out
xor
cli
(bad)
cmps
call
mov
mov
ss
stc
retf
mov
mov
icebp
inc
sti
sbb
inc
or
test
inc
push
loop
add
cmp
(bad)
adc
mov
cmp
sbb
rcr
jae
xor
jne
imul
lock
cmp
inc
mov
fs
add
xchg
push
cmp
sub
mov
dec
fidivr
call
fstp
or
pushf
ins
add
mov
out
mov
xchg
cld
mov
sti
loop
push
cmp
loope
inc
icebp
lds
cwde
int
nop
pop
ror
cmp
push
pop
dec
xchg
pop
jg
mov
in
fstp
outs
inc
retf
inc
daa
mov
mov
ins
add
sahf
pop
cld
xlat
jmp
repz
aad
mov
xchg
jno
sub
lds
mov
mov
out
adc
imul
repz
jmp
or
test
jge
add
push
sahf
ss
lods
sbb
push
outs
jns
ss
std
hlt
int
gs
repnz
es
sub
pop
or
sti
xor
or
and
xchg
jle
jne
neg
mov
ret
call
fnsave
and
adc
mov
leave
int3
mov
or
push
sbb
xchg
nop/reserved
das
mov
(bad)
adc
clc
call
int3
push
leave
jo
fwait
xchg
sti
jl
sbb
pushf
dec
adc
add
sub
lds
jne
jge
(bad)
xor
sar
dec
lock
bound
or
lds
mov
ja
jmp
add
mov
scas
rcl
xchg
(bad)
test
or
inc
in
sbb
rcr
add
popa
jle
jp
pop
retf
or
dec
int3
stos
shl
test
add
sub
aas
fsubr
stos
xor
pop
and
push
call
dec
sub
and
pcmpgtw
sub
push
and
xlat
lahf
sbb
cmp
inc
(bad)
in
add
add
mov
cdq
or
popf
repnz
(bad)
out
enter
add
or
std
in
rcl
pop
mov
pop
cmp
cmp
lods
ins
jnp
push
mov
outs
in
mov
adc
test
lock
retf
leave
pop
(bad)
int3
jnp
adc
nop
rcr
add
and
int3
je
aam
aas
dec
xor
nop
sub
xor
dec
div
xchg
stos
push
cmps
mov
push
xlat
out
inc
xor
adc
sub
xor
ss
sbb
sbb
and
ret
push
jle
or
outs
popf
mov
fiadd
cs
(bad)
js
stos
or
stos
mov
cmp
cwde
adc
sub
shl
retf
lahf
dec
ins
jns
daa
sbb
sbb
imul
jmp
les
xor
xor
(bad)
adc
ret
push
pop
fadd
js
and
imul
xchg
movs
cli
test
in
push
mov
sti
(bad)
xor
mov
mov
or
pusha
and
pop
js
push
cs
pop
xor
and
xor
or
(bad)
add
fistp
inc
sub
pop
ss
outs
inc
clc
dec
ss
dec
or
cld
add
call
xchg
xor
xchg
div
push
dec
clc
movs
cmp
fwait
and
xchg
(bad)
pop
mov
mov
lea
push
xchg
jecxz
repz
mov
(bad)
jb
cmps
mov
fdivr
cmp
pop
fucomi
push
rcl
adc
xor
push
popf
std
cli
(bad)
repz
icebp
xchg
or
mov
(bad)
cmc
into
adc
test
outs
xor
mov
(bad)
das
ret
cmps
(bad)
fadd
lds
xchg
cmc
nop
into
sti
xchg
inc
mov
jge
and
push
push
pop
or
inc
jb
ja
ss
jnp
jb
inc
cmp
cmps
cmp
cdq
add
mov
js
and
or
inc
xchg
out
cmp
inc
loop
mov
mov
enter
test
push
lea
push
jle
jl
mov
and
and
pop
inc
pop
mov
(bad)
ss
adc
dec
xchg
push
sub
add
add
repz
and
cli
(bad)
pop
xchg
adc
(bad)
lods
(bad)
cmps
es
mov
pop
arpl
xor
sub
enter
dec
jge
enter
mov
xor
dec
push
(bad)
mov
fisubr
mov
inc
rcl
adc
hlt
clc
jb
fild
inc
sub
cmp
arpl
jmp
dec
cmp
sar
inc
lea
jmp
cmp
sub
push
fwait
call
or
jmp
jo
pop
push
sub
in
stc
or
xchg
(bad)
sar
or
and
data16
add
fldenv
fcomp
popaw
cmp
movs
(bad)
shl
add
cmp
jo
push
push
adc
inc
fimul
push
scas
mov
lahf
cmp
xchg
jmp
sub
push
xchg
mov
xor
popf
repz
fwait
and
mov
inc
pop
or
xor
dec
lock
rol
push
push
sub
and
jp
nop
popf
fxch
xchg
pop
inc
aad
mov
(bad)
js
add
adc
fisubr
enter
pop
adc
cli
push
pop
xor
or
push
mov
lea
sbb
rcl
fld
jp
push
pop
xor
jo
cmps
cmp
jae
daa
xchg
in
or
stos
adc
aad
pushf
mov
and
sar
jge
(bad)
retf
cmp
push
cmps
ret
jl
ds
pop
movs
adc
inc
jnp
xor
fild
adc
(bad)
xchg
fwait
sub
cmp
shl
sbb
xor
lds
xchg
movs
test
mov
jae
add
and
xor
shr
xlat
call
jne
call
jecxz
das
and
clc
adc
mov
sub
or
xchg
jno
jb
cmps
fimul
adc
scas
inc
outs
test
test
pop
jns
in
jns
addr16
ret
jo
pop
out
cmp
repnz
inc
imul
ss
into
int3
retf
jg
retf
icebp
inc
bound
xor
nop
imul
and
mov
and
sbb
sar
push
enter
jne
rcl
mov
mov
mov
(bad)
sub
xchg
mov
mov
cld
shl
lock
mov
xchg
pop
pop
(bad)
mov
jmp
outs
dec
sbb
dec
call
jns
mov
iret
mov
and
cmps
pop
inc
cld
mov
imul
or
inc
fst
jp
jp
retf
jle
ins
push
test
not
ins
mov
enter
sbb
pusha
pop
sar
sub
fcmovb
cmp
mov
xor
aaa
sub
inc
mov
sbb
enter
mov
dec
dec
ja
pop
dec
adc
fisttp
jge
loop
ret
pop
cmp
fistp
cmp
call
call
fsubr
mov
(bad)
cmp
sbb
movs
fstp
in
addr16
mul
dec
fcom
clc
gs
fsub
inc
inc
mov
aas
mov
mov
jb
(bad)
sti
cmp
dec
mov
dec
push
rcl
std
in
push
in
mov
in
mov
les
xchg
neg
jb
cld
xlat
mov
loope
xchg
mov
aam
mov
dec
cmp
iret
fiadd
sar
movs
sbb
inc
pop
add
sbb
push
ffreep
(bad)
inc
dec
dec
mov
pop
dec
out
retf
test
sahf
test
out
je
and
xchg
add
cmp
mov
mov
pop
movs
inc
mov
ret
fnsave
data16
inc
cli
mov
push
push
xchg
imul
loopne
int3
adc
adc
sub
js
adc
mul
jb
jno
push
or
and
pushf
xor
adc
int
xchg
out
cmp
leave
pop
ins
(bad)
shl
inc
loopne
xchg
dec
xor
jg
push
repnz
mov
mov
mov
cmp
push
scas
jl
cdq
jns
mov
mov
pop
in
adc
ror
fist
cmp
pop
add
aam
jae
adc
les
sahf
dec
repnz
jo
test
mov
cmc
lds
push
xor
adc
test
stos
pop
popf
bound
push
inc
data16
rcr
dec
mov
les
jmp
mov
add
js
scas
dec
in
mov
les
fwait
loopne
jle
sbb
dec
int3
lea
ins
pop
inc
and
sbb
fild
mov
loopne
jmp
(bad)
pop
out
(bad)
(bad)
ja
jle
in
ss
adc
adc
ins
int3
inc
cmps
sub
out
fs
stos
into
stc
js
pushf
jne
xlat
pop
pop
imul
fs
adc
sahf
mov
jo
pop
xlat
mov
add
cmp
xor
and
call
mov
mov
mov
pop
push
gs
arpl
shl
mov
add
addr16
cmp
int3
sahf
les
jbe
ja
cld
xchg
cmp
pop
pop
lock
neg
fst
pop
es
lahf
(bad)
cmp
xor
fld
adc
mov
mov
into
jo
cld
inc
xchg
xor
pushf
or
aaa
iret
push
lea
xchg
cmp
adc
aaa
pop
xchg
retf
mov
loope
sbb
sub
and
cli
dec
in
jo
stos
iret
jl
xchg
sti
clc
mov
out
jnp
cli
mov
out
adc
in
jbe
(bad)
out
outs
mov
pop
pusha
mov
pusha
stos
sar
or
add
daa
outs
push
retf
mov
pusha
out
in
sub
sahf
ins
jg
lock
pop
fistp
pop
push
gs
loop
jmp
popf
inc
cld
and
cmp
addr16
and
pavgb
cmp
loop
sub
jmp
sbb
mov
mov
in
retf
cdq
retf
mov
inc
xchg
test
ret
repz
jno
cmp
popa
pushf
retf
add
inc
push
mov
sti
or
clc
outs
xor
rcl
shr
mov
inc
xor
arpl
add
inc
or
jae
add
scas
(bad)
nop
sbb
fs
in
out
xchg
dec
or
iret
adc
mov
pop
mov
std
sbb
stc
pusha
arpl
fs
mov
jne
push
inc
lahf
pop
cmc
mov
stos
mov
lds
es
ret
inc
mov
mov
mov
pop
arpl
cmps
cmps
sub
call
les
sub
cmp
fld
shl
pop
clc
inc
sbb
out
daa
adc
mov
cmps
mov
mov
aas
mov
jp
jnp
loop
push
cld
call
ret
sub
sar
aam
or
sti
scas
shl
cdq
repz
adc
pop
mov
mov
xor
xor
push
jg
das
test
shl
icebp
test
lods
in
sbb
push
xchg
push
ds
xor
ja
push
xor
iret
sbb
in
je
adc
leave
or
outs
add
mov
xchg
rol
push
rcr
out
or
sub
mov
data16
test
pop
arpl
pop
call
mov
sub
xor
fimul
cmp
call
mov
sub
ins
adc
fwait
test
in
(bad)
test
pop
or
or
test
adc
movs
xor
and
or
jp
push
jge
and
pusha
jmp
adc
or
arpl
lods
sar
cmc
pop
in
cmpxchg
jmp
test
or
mov
pop
and
mul
xor
mov
xor
imul
pop
mov
imul
mov
fidivr
push
push
push
add
dec
aam
daa
cmp
repnz
jb
jp
rol
mov
test
aam
push
and
out
xor
lahf
and
scas
mov
clc
loope
or
pop
inc
cmp
fs
mov
or
ret
js
jnp
jmp
fist
sbb
xlat
je
sti
adc
pop
mov
stos
jle
aaa
movs
add
add
mov
nop
(bad)
test
ret
mov
mov
push
jns
dec
scas
push
xor
mov
dec
clc
mov
push
movs
std
das
iret
sahf
xor
jl
fadd
leave
test
push
pop
jge
and
gs
xor
(bad)
int
adc
div
jo
lds
jb
daa
xor
addr16
dec
sti
pop
out
push
popa
leave
fnstenv
jl
xor
pop
adc
call
jns
cmp
mov
xor
fstp
xor
loopne
cmp
je
push
xchg
and
aam
iret
adc
pop
rcr
xor
icebp
push
lods
nop
(bad)
pop
scas
call
jge
into
adc
je
pop
inc
adc
pop
imul
sub
scas
pop
call
movs
xchg
or
clc
stc
das
popf
or
lds
or
fldenv
hlt
dec
imul
jge
fisttp
push
popf
push
add
test
shl
ret
pop
ret
dec
add
push
not
push
or
and
loopne
jp
fucomi
xchg
cmp
push
and
iret
cs
aaa
(bad)
xchg
cli
jp
add
out
std
call
imul
fwait
in
xchg
sbb
hlt
clc
call
test
fnstsw
ja
sbb
jmp
jmp
dec
scas
mov
(bad)
in
push
sub
mov
addr16
mov
jp
fwait
retf
sub
aaa
(bad)
fild
sub
mov
rol
mov
pop
outs
les
add
call
xchg
inc
aad
cmp
push
add
mov
cmp
fidivr
retf
cwde
(bad)
ffreep
out
bound
mov
and
xchg
movs
xor
sbb
test
sub
je
icebp
mov
jne
repz
popf
mov
pop
push
call
test
cmc
or
xor
cmp
in
fs
cmp
mov
in
sub
inc
xor
push
sbb
mov
enter
rcl
into
mov
aad
mov
std
test
xor
add
mov
mov
fisub
push
cmp
add
xor
pop
dec
jne
inc
lods
xor
dec
out
dec
xor
pop
pop
mov
xor
ror
xor
sub
jg
mov
idiv
mov
movs
outs
pop
ds
mov
(bad)
xor
cmp
push
jp
xchg
mov
and
adc
xchg
inc
push
sbb
cdq
retf
pop
or
cmps
mov
leave
lods
stos
addr16
(bad)
mov
rol
in
ins
movs
nop
test
jns
ret
rcr
or
sbb
fnstsw
mov
fwait
xor
push
pop
in
mov
nop
pop
mov
push
mov
clc
and
pop
mov
daa
add
jno
sub
adc
retf
pop
int
jle
add
pop
cwde
adc
add
xchg
xor
mov
mov
or
push
jb
(bad)
sbb
and
dec
sub
retfw
fs
dec
lock
sahf
jno
push
sbb
das
adc
xchg
push
jae
fadd
sub
idiv
push
mov
or
daa
mov
dec
dec
sub
test
fisttp
fwait
xchg
pop
shr
test
repz
adc
mov
int
clc
lea
sub
cwde
out
stos
lds
test
mov
sti
xchg
(bad)
jmp
cmp
xchg
test
push
stos
jg
push
or
push
sbb
sti
adc
cli
mov
xlat
pop
push
pop
jl
(bad)
(bad)
std
not
cmps
ret
movs
or
daa
cmp
mov
in
dec
cmp
scas
dec
push
sbb
je
aad
retf
stos
pop
jo
dec
push
shl
jb
xchg
les
adc
adc
or
and
and
in
or
dec
xor
cmp
xchg
dec
and
xchg
(bad)
sub
or
in
test
das
mov
pop
movs
add
adc
mov
mov
aad
jmp
xor
sar
call
pop
jo
cmp
fimul
fist
sub
es
(bad)
pop
neg
(bad)
dec
sub
out
adc
test
mov
jbe
push
in
out
iret
stos
leave
xchg
jnp
mov
shl
std
jns
pop
mov
lahf
or
jnp
sbb
nop
into
mov
jnp
cmps
dec
bound
test
inc
ss
cld
or
mov
jbe
pop
push
add
and
push
fnsave
out
jb
scas
pop
retf
aas
je
push
jbe
mov
cmp
add
jmp
in
cmp
or
iret
fwait
lods
sub
jae
mov
mov
jno
mov
idiv
lds
push
and
out
rol
jg
sub
gs
ins
ficomp
or
out
mov
or
fld
cli
sub
loopne
xchg
ret
scas
out
and
mov
mov
jecxz
sub
movs
xor
fdivr
ret
mov
call
jecxz
(bad)
xor
and
sub
pop
lds
sbb
sub
or
imul
in
xchg
jno
test
mov
adc
stos
add
xor
cmp
ins
(bad)
call
pop
pop
icebp
pop
inc
sbb
push
inc
scas
imul
loopne
arpl
push
(bad)
nop
ret
scas
xchg
mov
dec
inc
adc
inc
fmul
movs
mov
mov
jmp
cmp
ss
pushf
pop
sbb
out
ss
aaa
push
inc
in
xor
loopne
inc
int
or
mov
das
in
les
cmps
mov
cmc
int
mov
jno
call
cmc
out
mov
push
dec
cmps
push
mov
ds
xor
rol
jb
pop
and
lock
sub
outs
sub
jmp
test
adc
push
jmp
sbb
xchg
nop
push
cmp
bound
mov
xchg
or
and
push
add
cmp
jae
int3
xor
aam
pop
fs
fadd
ret
addr16
ds
sub
jmp
push
ret
sub
xor
test
mov
imul
jl
lock
(bad)
(bad)
jecxz
js
jno
movs
adc
inc
sub
mov
in
icebp
cli
jmp
je
(bad)
adc
mov
test
nop
xchg
test
inc
call
addr16
jae
and
mov
add
lods
jb
call
pop
stos
cmp
pusha
enter
aam
cmp
and
jae
sti
mov
jl
mov
icebp
push
adc
ror
pop
popa
scas
outs
or
add
sahf
lahf
imul
jge
push
int3
and
cs
jnp
repnz
xor
pop
test
lahf
stc
sahf
add
jmp
imul
out
jg
fdivr
rdpmc
mov
fs
fisubr
mov
ret
mov
xor
pop
test
push
sbb
in
rcl
ins
aaa
mov
rcr
inc
stos
mov
aam
loope
arpl
add
ins
aas
push
(bad)
fucomip
cmp
or
jmp
mov
cdq
cmps
mov
test
pop
aad
adc
neg
sub
je
lea
push
ja
pop
cmp
add
or
scas
sahf
mov
(bad)
outs
push
sbb
popf
jle
xchg
adc
add
out
or
mov
mov
(bad)
retf
push
and
cdq
push
loop
test
shr
mov
inc
enter
xlat
sub
popf
and
aas
pusha
ins
xlat
sbb
sar
mov
or
inc
jecxz
jecxz
xor
adc
lods
xchg
push
xchg
jmp
std
stos
xchg
dec
jge
or
cwde
and
ss
jbe
in
ss
shl
fistp
je
cli
pushf
jmp
cmp
add
pop
xchg
mov
mov
jle
pop
sub
push
or
xlat
jmp
mov
aaa
(bad)
jo
rcr
xchg
shl
xor
cmp
add
ins
and
inc
push
ja
test
sbb
xchg
push
cmp
sbb
pop
(bad)
sbb
inc
lock
std
mov
add
adc
mov
inc
sbb
out
jmp
sbb
dec
and
mov
(bad)
movs
hlt
fstp
cmp
cmps
int
std
movs
push
xchg
test
imul
add
cmp
ja
add
push
cwde
jae
push
inc
or
scas
jnp
iret
es
dec
aaa
and
(bad)
arpl
mov
pusha
repnz
test
addr16
dec
lea
xchg
in
or
addr16
jmp
add
fwait
sbb
jge
inc
data16
mov
push
adc
mov
ror
mov
int
and
fsub
pop
jp
sub
and
sbb
sub
or
jb
lds
ret
movs
xor
sahf
adc
sub
adc
cmp
popf
sub
cs
stc
sbb
sbb
not
add
fwait
xchg
enter
jl
loope
fcmovb
cwde
mov
movs
mov
arpl
xor
stos
push
int3
cmp
loopne
out
adc
push
popf
jbe
pop
cdq
ss
and
fstp
cmp
in
mov
je
stc
(bad)
adc
call
test
(bad)
daa
adc
mov
mov
shr
adc
daa
test
test
sub
aaa
(bad)
jbe
or
nop
fimul
in
(bad)
imul
sub
test
test
cmp
sbb
or
sbb
cli
push
das
enter
mov
(bad)
jecxz
lods
ins
dec
jmp
cmp
add
sahf
addr16
out
gs
dec
sbb
adc
pop
mov
sahf
dec
shl
and
sti
ficomp
in
xor
rcl
call
xchg
inc
jne
bswap
cli
neg
loop
pushf
loopne
fiadd
or
sub
icebp
(bad)
cmp
das
test
outs
mov
data16
sbb
cli
mov
push
(bad)
mov
outs
mov
je
nop
sub
jmp
in
ds
cs
shl
jg
icebp
jnp
and
jnp
push
dec
call
adc
retf
xor
(bad)
sti
mov
pop
(bad)
ins
fisttp
stos
sub
sub
outs
and
lock
retf
dec
inc
sar
mov
fcom
fidiv
je
mov
adc
pop
jns
pop
mov
pushf
mov
into
hlt
in
leave
jle
mov
cmps
aas
adc
outs
mov
repz
adc
xchg
lods
dec
enter
cmp
cld
int3
xlat
adc
mov
xchg
xchg
mov
(bad)
mov
shl
and
and
loopne
fwait
push
mov
nop
push
enter
loopne
ficom
stos
xchg
pop
xchg
into
imul
adc
inc
jg
out
(bad)
les
ret
lods
sbb
sub
mov
in
addr16
push
xchg
cmps
mov
into
aas
ret
or
or
int
enter
jp
stc
loope
pop
xlat
retf
hlt
mov
out
mov
addr16
mov
aad
jo
cmp
cmc
push
out
stos
mov
shl
mov
out
cs
xchg
outs
sti
stc
or
int3
and
cmps
xor
push
ins
dec
cwde
push
push
fdivr
cmp
dec
adc
mov
ret
inc
imul
add
iret
lea
adc
sahf
xchg
aaa
and
dec
add
mov
mov
mov
mov
stos
popf
jae
call
out
mov
xor
neg
(bad)
push
pushf
gs
lods
pop
mov
dec
push
arpl
add
pop
in
loopne
test
sub
sti
scas
in
lock
mov
inc
dec
xchg
popa
adc
sub
jle
cmp
push
add
mov
xchg
ror
lahf
jecxz
mov
adc
enter
xchg
adc
stos
or
pop
rol
hlt
mov
add
lods
das
cmp
mov
out
dec
cmp
loop
xchg
test
push
(bad)
fidiv
dec
out
pop
fcomp
mov
pop
out
mov
dec
inc
pop
pusha
scas
add
rol
cmp
and
dec
dec
xor
dec
inc
jg
mul
fldenv
stc
icebp
test
pop
clc
jo
je
push
add
sub
aas
sub
xor
inc
mov
pushw
repz
xchg
repnz
adc
popf
(bad)
push
outs
jmp
mov
sub
xor
loopne
sbb
test
jae
xchg
sbb
pop
test
lock
push
into
ror
iret
sbb
je
adc
jb
rol
and
repz
add
and
jbe
gs
adc
xchg
pop
sbb
and
pop
mov
jmp
dec
int
pop
inc
and
inc
aaa
lods
jmp
xchg
mov
dec
mov
sub
fisttp
dec
fiadd
inc
mov
imul
(bad)
addr16
xor
jne
gs
mov
in
fsubr
cmp
jmp
ds
pop
sub
jnp
outs
push
sar
cmp
mov
fidiv
mov
stos
xor
or
in
es
or
test
inc
fwait
jmp
out
jmp
repnz
popf
push
mov
outs
cli
xlat
dec
mov
mov
sahf
xchg
push
push
and
lds
mov
xor
xchg
sbb
pop
push
scas
test
xchg
lock
scas
ret
push
icebp
scas
and
pop
jb
xor
fcomip
or
jmp
scas
mov
out
add
add
xchg
test
mov
pop
mov
leave
pop
jb
mov
push
nop
retf
cmc
fistp
adc
stos
sbb
push
scas
sub
jae
sbb
adc
std
add
and
and
sbb
mov
xor
sub
add
fcom
xor
inc
cli
retf
popa
push
jp
aam
in
movs
and
sub
xor
retf
ret
adc
loope
and
call
jmp
jg
add
sahf
sub
aam
inc
fst
fimul
pop
dec
test
movs
lea
(bad)
ss
cmp
cmp
pop
mov
jmp
scas
sub
je
mov
sti
adc
dec
dec
aad
push
mov
dec
sub
xchg
fisubr
fbstp
pop
pop
dec
xor
jecxz
data16
mov
adc
ds
adc
xchg
sbb
enter
mov
and
ins
ja
push
mov
xor
fbstp
pop
cli
gs
in
js
mov
jle
push
test
ret
xor
xor
xchg
xchg
and
(bad)
mov
(bad)
ja
xor
mov
fisubr
test
jb
shl
xor
imul
pop
shl
dec
add
and
xor
xor
out
jp
xchg
xchg
inc
xlat
out
cmp
sahf
pop
scas
xor
(bad)
js
lea
fsubr
nop
imul
mov
ja
int
retf
adc
push
cmps
or
adc
pop
adc
pop
out
out
shr
adc
popf
pusha
int
pop
push
jg
jg
es
push
cmp
adc
shr
leave
imul
adc
adc
pop
mov
xchg
jo
call
aas
dec
dec
push
mov
ror
ja
pop
sub
xor
repnz
pop
aam
movs
cli
add
into
shl
iret
xchg
test
and
xor
dec
xor
fistp
icebp
leave
pop
out
and
jns
movs
call
sbb
jno
into
sub
mov
inc
mov
popf
inc
adc
mov
test
gs
jmp
cld
pushf
sub
pop
lods
sbb
ror
cmp
xchg
push
mov
ins
test
jnp
cmps
xchg
mov
mov
adc
pushf
scas
je
inc
das
leave
push
rcr
sbb
sar
lds
js
arpl
pusha
es
(bad)
retf
fadd
stos
cmp
and
cmps
outs
mov
pop
movs
inc
shl
lock
and
jge
imul
bound
mov
loopne
add
mov
or
sbb
lods
push
xor
dec
mov
sar
mov
aad
jmp
daa
pop
daa
inc
cmp
mov
(bad)
and
loope
mov
stos
pop
jle
jno
and
hlt
pop
sbb
mov
cs
je
dec
inc
mov
imul
mov
mov
in
sti
fwait
xchg
and
sub
in
cmc
jge
jge
mov
jnp
jle
(bad)
push
mov
leave
or
or
xor
inc
call
pop
test
or
leave
(bad)
mov
pop
xor
fiadd
xlat
xchg
sbb
pop
lea
stos
addr16
clc
jl
ja
mov
adc
jnp
add
push
lds
dec
sbb
mov
lea
add
mov
add
stc
cdq
mov
lods
inc
adc
cmp
and
mov
mov
pop
retf
sub
fimul
call
or
pop
jecxz
cmp
sbb
arpl
xchg
int
xlat
xchg
loopne
or
daa
xor
mov
imul
push
enter
sub
addr16
mov
add
pusha
(bad)
mov
lahf
scas
movs
cmp
pop
loopne
sub
or
pop
mov
add
adc
mov
inc
adc
xor
and
dec
xchg
xchg
cdq
stos
call
scas
xchg
outs
pop
push
adc
nop
mov
imul
scas
lods
and
and
xor
ficomp
adc
fwait
and
ss
xor
std
scas
hlt
push
adc
int
(bad)
(bad)
or
or
pop
inc
sbb
data16
jbe
pop
in
push
xchg
or
cmps
sbb
and
pop
stos
(bad)
fldcw
jmp
adc
xchg
movs
add
inc
(bad)
(bad)
pop
out
shr
xchg
call
adc
xchg
jmp
push
gs
cmc
loope
jnp
push
jmp
fcomp
jle
and
sar
pop
ret
dec
cmp
pop
xsha256
cmps
xchg
cmp
fisttp
jl
hlt
mov
addr16
fcom
mov
dec
pop
popf
push
ror
das
cmp
dec
fstp
shr
imul
jl
lods
ret
out
xchg
mov
test
inc
xor
add
pop
js
xor
xlat
fidiv
scas
in
ins
push
gs
xchg
fcomp
pop
add
push
sub
push
sahf
add
push
(bad)
mov
lock
aam
shr
daa
data16
dec
sbb
fxtract
std
(bad)
leave
adc
popa
fst
ds
movs
jle
inc
push
dec
dec
jns
sub
fnstcw
aaa
shr
dec
or
pop
ret
popf
iret
jp
xor
popa
loopne
sar
std
cmp
jb
inc
fiadd
fidiv
mov
popa
dec
es
add
lds
pop
mov
mov
aam
test
inc
movs
sbb
add
hlt
xor
ja
outs
inc
pusha
adc
inc
and
cmp
pushf
das
xchg
in
idiv
mov
push
cmp
push
mov
retf
dec
xchg
inc
sbb
daa
sbb
add
add
adc
add
jl
mov
pop
xor
sahf
movs
pop
add
jle
mov
sbb
mov
test
inc
or
sub
daa
stos
scas
pop
dec
jle
jmp
std
lds
inc
in
xor
jmp
vfmsub213ps
pushf
sub
std
or
repz
cmp
(bad)
mov
xchg
aad
jl
xchg
loopne
loope
lea
movs
xchg
test
cmp
add
and
fmulp
das
cwde
and
scas
movs
add
jo
lock
mov
jo
or
pop
sub
jge
pop
and
mov
or
push
pop
bound
sub
out
(bad)
adc
or
out
test
fs
xor
or
stos
or
shr
jns
mov
daa
aam
push
inc
mov
icebp
aas
adc
ins
aas
les
out
mov
ret
stc
aaa
xor
mov
and
cld
fmul
(bad)
push
cmp
pushf
(bad)
xor
popf
shl
(bad)
jl
iret
jae
mov
cmp
dec
stos
mov
or
out
pop
ins
add
iret
sbb
sbb
mov
ja
in
js
mov
out
stos
mov
imul
sbb
mov
jb
xor
enter
sahf
mov
pop
cmp
push
dec
jl
jl
stc
lock
es
mov
in
fcomp
sahf
(bad)
out
xlat
xor
jo
lahf
pop
jecxz
hlt
jg
out
(bad)
in
and
sar
(bad)
(bad)
aad
cmp
jle
pop
retf
(bad)
leave
arpl
push
mov
or
jo
pop
pop
lds
add
xchg
data16
fs
out
(bad)
xor
loop
daa
sbb
or
cmps
pop
daa
xchg
push
lods
mul
test
(bad)
or
retf
cld
xor
cmps
sbb
push
cmps
out
into
sbb
bound
sbb
pushf
dec
mov
shr
je
sar
and
adc
xor
jp
jb
mov
cs
mov
and
out
mov
jmp
outs
xchg
ins
addr16
inc
pushf
js
aas
out
imul
xor
ret
jae
in
fimul
call
push
jp
mov
into
inc
es
xchg
mov
dec
mov
loop
mov
imul
enter
shl
mov
mov
xlat
sti
out
scas
add
mov
ds
push
push
cmp
imul
stc
mov
aad
fbld
push
mov
test
or
les
sbb
loopne
push
(bad)
test
mov
std
cmp
sub
or
push
sbb
rcl
push
mov
cmp
xchg
gs
jl
dec
and
(bad)
rep
sbb
cmps
addr16
sbb
cmp
ror
and
push
cmps
(bad)
mov
add
outs
jmp
mov
mov
aas
and
jnp
push
mov
pop
sbb
cdq
fwait
xor
jecxz
sahf
iret
inc
retf
cmps
call
sub
mov
dec
fidiv
jle
cmp
and
or
daa
popa
jae
jns
out
push
push
shld
pop
(bad)
mov
fdiv
pushf
xchg
pusha
pop
mov
mul
or
out
(bad)
std
jecxz
aaa
push
sar
ret
(bad)
push
sub
and
ret
add
retf
(bad)
sub
push
and
je
int3
in
or
fwait
inc
je
jp
pop
push
mov
icebp
push
ffreep
rcr
xlat
pop
pop
push
out
mov
aad
inc
stc
xchg
shr
add
stos
mov
mov
adc
fidivr
sar
hlt
adc
leave
inc
mov
sub
out
neg
mov
inc
cs
ret
scas
(bad)
lock
push
sbb
ror
dec
sahf
and
cdq
adc
sub
push
loop
pusha
pop
lock
pop
xchg
fsub
lods
leavew
movs
sbb
es
jecxz
mov
mov
sbb
mov
pop
aaa
ret
bnd
mov
out
adc
pop
jmp
add
jns
ds
or
pop
mov
call
push
mul
mov
xor
inc
push
or
out
test
adc
(bad)
int3
in
lods
movs
inc
ins
inc
inc
and
pusha
jge
pop
test
adc
xchg
fild
pop
pop
and
movs
xor
aad
pop
btr
ja
ss
popf
mov
(bad)
outs
or
fwait
mov
or
xchg
pop
shl
aad
mov
jle
pop
jmp
and
clc
loope
loop
sub
int3
ja
ret
push
stc
cmp
and
call
in
sub
jmp
pop
sahf
lods
cwde
mul
mov
xchg
jge
fisubr
or
mov
jmp
add
mov
mov
pop
mov
add
dec
push
sahf
ret
cmp
mov
sub
or
sub
push
add
mov
addr16
push
addr16
icebp
xchg
or
push
loopne
mov
mov
nop
pop
sub
jp
push
pop
sti
or
(bad)
fldenv
lock
adc
rol
imul
shl
repz
ins
dec
loopne
arpl
pusha
test
pop
repz
nop
push
sar
and
mov
adc
or
aad
mul
(bad)
xchg
xchg
call
daa
retf
pop
std
mov
cmp
or
mov
mov
sub
sti
(bad)
dec
mov
mov
ret
mov
mov
mov
adc
test
data16
fstp
aaa
or
pop
fist
cmps
int3
dec
mov
mov
ins
nop
sbb
rol
xlat
out
mov
add
jg
adc
call
loop
mov
out
jle
enter
jle
rol
icebp
dec
dec
pop
popf
lods
add
lds
pushf
imul
dec
imul
mov
fwait
retf
mov
xor
push
sbb
(bad)
sbb
mov
add
jmp
inc
pushf
mov
mov
sbb
jmp
pusha
xchg
adc
xchg
adc
mov
and
dec
fdiv
stc
jne
aas
push
mov
scas
popa
add
pushf
leave
loop
sub
jae
mov
lods
push
push
jmp
jl
adc
sub
dec
dec
mov
inc
popa
outs
xlat
cmp
pop
lahf
and
xchg
xchg
gs
jle
jb
cmp
and
mov
popf
lahf
repz
enter
push
imul
stos
or
loope
push
jmp
sub
jp
push
xchg
stc
repnz
nop
pop
aas
sub
les
lods
sub
mov
inc
sub
mov
loopne
jno
jno
cmp
push
push
sub
inc
mov
and
pop
ins
jl
fsubr
xor
mov
cmp
push
fs
out
rcr
mov
inc
loope
dec
jle
cs
jp
adc
hlt
adc
ret
scas
or
xchg
sbb
mov
xchg
int
xor
rcl
(bad)
push
mov
jae
xor
sub
mov
ja
data16
enter
mov
in
retf
int3
adc
fld
inc
hlt
jmp
dec
dec
loop
cli
pusha
xchg
xlat
loop
psubusw
or
xchg
push
stc
stos
add
bound
popa
daa
stc
jb
sub
mov
enter
out
mov
inc
jmp
xor
not
push
ja
or
daa
dec
xor
in
ret
fiadd
(bad)
in
out
fwait
and
xor
mov
rcr
mov
ss
aaa
ret
loopne
xor
clc
movs
pop
mov
addr16
shr
dec
sar
test
sub
shl
or
aad
fs
movs
clc
ret
pop
sub
adc
sbb
nop
(bad)
call
cmp
xchg
fbld
sub
push
pop
les
jb
mov
js
xor
pusha
rcr
sbb
xchg
sub
or
mov
mov
(bad)
nop
sub
loopne
aaa
sbb
stc
push
push
and
int
jmp
mov
dec
cs
pop
jbe
es
dec
into
xor
enter
add
aam
adc
bound
xor
or
adc
scas
popf
xor
cmp
sbb
sub
lock
cmp
out
fcomp
cmp
lea
ss
mov
pop
pop
add
icebp
popa
and
xor
or
pop
sti
pop
xchg
dec
dec
leave
mov
push
or
mov
idiv
loope
rol
mov
call
icebp
and
inc
(bad)
jmp
mov
cmp
daa
jno
fs
sbb
hlt
jbe
xchg
jmp
mov
jnp
cmc
fdivr
push
jbe
push
sub
in
ror
inc
pop
fst
sub
jb
int3
pop
jmp
jmp
js
leave
jne
test
or
ins
push
inc
add
pushf
and
aas
or
repz
add
adc
jecxz
push
adc
and
xor
xor
pop
mov
iret
mov
movs
addr16
mov
mov
sbb
push
dec
or
test
retf
or
mov
mov
gs
add
or
pop
push
fisttp
adc
(bad)
adc
mov
pop
sti
loop
sub
dec
cli
jo
and
adc
sti
shl
cmps
mov
or
xor
repz
cmps
and
repz
mov
sar
ja
xor
sub
fwait
in
mov
xchg
push
jg
into
jle
hlt
mov
jge
or
adc
mov
popf
leave
call
cmp
ret
lods
push
ds
pop
xor
jnp
xor
fbstp
mov
int
das
pop
mov
test
mov
data16
mov
das
add
and
rol
add
pop
mov
jbe
mov
sub
ror
inc
jmp
ds
ins
push
je
jg
mov
out
jb
aam
mov
fild
call
xor
mov
out
dec
sar
sbb
cmp
jns
push
or
add
xor
or
arpl
(bad)
cmps
ret
push
test
in
mov
addr16
stos
cmp
mov
mov
pusha
mov
lods
xchg
inc
xchg
in
jno
mov
out
cmp
cmp
pop
inc
out
mov
mov
push
outs
test
jmp
ror
adc
ds
inc
rol
and
jmp
mov
dec
shl
adc
cmps
or
mov
ret
(bad)
popf
stos
add
xchg
sub
push
shl
and
mov
cmp
jne
clc
inc
pop
loop
pop
mov
jbe
inc
sub
sbb
xchg
pop
imul
jmp
cmp
jae
popf
(bad)
adc
imul
mov
fild
xchg
jb
imul
jg
xchg
or
jbe
mov
xchg
pop
add
je
mov
icebp
or
cmp
jns
jbe
test
(bad)
mov
dec
xor
pop
enter
addr16
loope
mov
loope
aaa
xchg
out
xor
cmc
dec
sbb
sahf
mov
push
shr
retf
out
jle
mov
leave
dec
and
xchg
push
mov
ds
adc
jae
push
movs
inc
xchg
cmp
jl
out
scas
cmp
pop
cmp
push
adc
jbe
and
and
aad
inc
cmps
jae
pop
push
sar
das
fsub
jmp
xor
sahf
or
fsubr
sbb
mov
jnp
(bad)
repz
xchg
and
movs
fwait
and
pop
jnp
fidiv
xor
(bad)
xchg
or
mov
xor
cld
dec
jne
xchg
adc
ret
call
fisubr
(bad)
mov
push
jnp
es
jbe
cmp
inc
push
inc
mov
(bad)
xchg
adc
sbb
sub
fdiv
cmp
in
test
mov
pop
add
scas
loop
ins
in
cdq
jne
xchg
retf
iret
xchg
shr
imul
jae
mov
lahf
std
and
test
inc
push
xchg
or
push
sub
sub
sbb
jns
jno
adc
cdq
inc
push
push
cmp
mov
adc
push
jbe
(bad)
out
lods
dec
xor
repnz
inc
shl
nop
adc
mov
mov
repnz
nop
std
imul
imul
jmp
dec
and
xchg
mov
fs
mov
push
pop
(bad)
(bad)
cmp
movs
in
cmp
popf
aaa
sub
mov
ret
iret
add
lahf
(bad)
enter
push
inc
inc
add
dec
mov
adc
xor
int
das
mov
inc
in
adc
inc
mov
xchg
lods
adc
outs
sbb
popa
loopne
xor
mov
movs
bound
lock
scas
xor
ja
jnp
xchg
mov
or
add
lahf
sub
mov
call
mov
add
mov
xchg
ror
ret
inc
sub
xor
adc
and
mov
pop
pop
xor
outs
inc
loope
jnp
cmp
retf
push
sahf
cmp
xchg
sub
mov
mov
nop
jge
mov
dec
mov
inc
adc
xchg
jp
xchg
xor
cmps
js
std
mov
mov
ret
fwait
scas
sub
pop
mov
push
cmps
in
xor
mov
pop
pop
xchg
out
ins
out
mov
xchg
mov
push
pop
jmp
sbb
(bad)
dec
mov
clc
idiv
adc
stos
ret
xor
jmp
ins
sub
ret
push
leave
neg
leave
jecxz
inc
pop
sar
inc
xchg
pop
and
hlt
ret
jl
ret
aaa
loopne
xchg
and
addr16
std
jp
pop
mov
retf
sub
sbb
lds
pushf
pushf
push
loopne
mul
std
cld
or
sub
out
loop
jnp
mov
ret
in
xchg
sub
lods
out
cmp
jbe
icebp
out
out
(bad)
mov
push
das
pop
into
jl
into
imul
rcl
jg
adc
jmp
push
hlt
ins
xor
stos
adc
arpl
retf
mov
int
popa
and
jmp
shl
push
(bad)
xor
and
mov
mov
cmp
sub
push
popa
(bad)
je
push
mov
push
out
mov
aaa
push
sub
dec
cmp
or
pop
div
jne
mov
push
sbb
sub
outs
jns
and
xchg
nop
xchg
into
ins
and
sub
out
fisub
push
out
addr16
fwait
rcl
out
fwait
sbb
stos
retf
pushf
loope
retf
jmp
lods
mov
jmp
adc
leave
pop
add
mov
cs
and
jno
int
aaa
mov
mov
stc
adc
test
mov
daa
daa
mov
scas
cs
addr16
pushf
aad
cdq
cmp
xor
fimul
int3
pusha
cwde
dec
sahf
out
retf
ja
or
sub
cwde
mov
xchg
mov
push
enter
jbe
shl
in
jb
gs
dec
dec
scas
inc
xor
mov
mov
pop
add
sbb
pop
xchg
mov
jno
outs
sti
ror
lock
das
or
inc
jns
adc
inc
(bad)
mov
lock
jle
cmps
int3
(bad)
and
fcmovu
imul
push
cmps
stc
jmp
std
add
inc
mul
jg
test
mov
push
and
mov
push
xchg
pop
shr
mov
std
aas
push
popf
dec
mov
out
dec
jecxz
jecxz
div
test
xor
push
mov
add
fwait
sbb
cmp
push
je
adc
cmp
push
rdmsr
add
cmp
and
push
push
cmp
scas
xor
mov
inc
fsubr
sub
mov
aas
cmps
sub
cmp
test
or
lahf
lods
xchg
or
xor
ffreep
retf
inc
cli
popa
cmp
scas
(bad)
pop
ss
push
es
ret
push
int
sub
bnd
dec
daa
daa
push
inc
pop
in
push
and
adc
xchg
ds
mov
push
mov
mov
inc
mov
fisubr
and
push
mov
icebp
or
mov
fsubr
mov
(bad)
cmps
repnz
and
xchg
bound
int
icebp
inc
scas
leave
mov
das
cmps
and
xchg
lods
adc
add
repz
jns
add
inc
jno
xchg
sub
movs
mov
ror
jmp
sbb
imul
ror
in
mov
push
jno
sbb
repz
or
push
push
outs
lock
jae
outs
xchg
cld
fldenv
pop
and
pusha
adc
inc
and
stos
cli
and
push
clc
xor
(bad)
lahf
push
or
xor
(bad)
and
(bad)
jmp
pop
and
inc
sbb
sub
fs
mov
or
pop
mov
ror
mov
iret
data16
jecxz
cmp
mov
add
adc
outs
cdq
pop
mov
jge
mov
pop
retf
icebp
pop
(bad)
bound
dec
push
js
fdiv
push
jnp
ds
daa
addr16
call
jp
pop
dec
xchg
push
push
push
enter
xchg
cmp
je
adc
int
mov
movs
pop
es
xor
dec
rcl
mov
pop
dec
push
add
pop
jp
cmps
or
sbb
jae
outs
call
jmp
jae
mov
retf
dec
cmps
mov
retf
cmp
in
and
je
popa
test
jecxz
stos
xchg
mov
xor
push
out
pushf
mov
dec
lds
and
push
push
xchg
test
dec
fisttp
stos
jecxz
and
test
mov
cmp
into
push
loopne
es
call
sbb
call
stos
les
(bad)
fsub
sub
push
icebp
loop
(bad)
(bad)
retf
aad
daa
mov
mov
test
imul
nop
xor
pop
mov
push
leave
jnp
in
pop
out
cmp
ins
mov
jp
mov
retf
xlat
std
fcom
sbb
test
mov
cmp
iret
js
cmp
lahf
outs
(bad)
scas
xchg
mov
inc
add
pop
pop
dec
inc
out
mov
es
sub
scas
push
div
loopne
or
aad
leave
cmp
push
mov
xlat
jecxz
push
aas
cmps
adc
jae
push
enter
cmps
in
enter
mov
push
mov
sbb
sub
and
inc
and
movs
jno
mov
loopne
fs
and
or
out
inc
stc
pop
or
test
mov
pop
lods
inc
dec
mov
add
push
repz
ficom
dec
lods
(bad)
or
inc
nop
(bad)
(bad)
(bad)
es
(bad)
jo
mov
(bad)
cld
or
pop
(bad)
std
mov
ret
sbb
aam
rol
and
xor
xor
or
mov
sub
adc
push
adc
jb
or
jecxz
dec
xchg
cmp
int
out
lds
push
xor
adc
fwait
daa
sahf
retf
sahf
xchg
sub
out
imul
ret
lods
add
ret
push
push
xchg
mov
pusha
or
jno
dec
call
js
inc
sahf
mov
test
dec
jo
sub
xor
mov
fsubrp
(bad)
push
jbe
and
inc
sub
cmp
dec
mov
lock
scas
stos
int3
ror
sub
fmulp
enter
adc
mov
push
mov
xor
adc
inc
and
es
push
ds
and
sub
out
inc
or
mov
push
cmp
int
push
test
push
mov
fbstp
pop
add
push
pop
dec
push
adc
xchg
cmp
movs
mov
out
push
dec
int3
cmp
push
dec
std
or
mov
cmp
push
ins
cmp
ds
shl
mov
xchg
int
addr16
mov
pop
jnp
xor
(bad)
jo
dec
cmc
and
aad
adc
add
out
scas
dec
mov
push
sbb
sahf
mov
(bad)
xor
dec
nop
shl
and
mov
xor
gs
jo
jb
aad
int
fadd
movs
ds
xchg
inc
inc
out
cdq
bound
adc
or
mov
lea
jecxz
push
retf
pusha
pop
push
into
test
dec
sbb
aaa
test
shr
sbb
dec
cli
loope
sbb
sahf
lahf
pop
xchg
cwde
in
sar
cmp
enter
add
inc
into
or
and
jne
retf
and
aam
or
mov
(bad)
in
retf
inc
jmp
inc
mov
mov
or
repz
out
xchg
repz
das
xor
das
test
repz
adc
mov
sbb
enter
pop
and
mov
xor
mov
adc
pop
and
call
and
mov
les
pop
xchg
inc
push
pop
fsubrp
popf
and
stos
arpl
jecxz
out
dec
inc
data16
pusha
adc
inc
mov
dec
cmps
call
loopne
mov
fld
fadd
mov
adc
scas
gs
es
outs
xchg
test
and
lea
in
xchg
js
cld
aas
scas
mov
fs
mov
push
cmp
stos
inc
mov
jbe
or
add
inc
retf
xor
pop
sub
les
dec
test
dec
xchg
jnp
dec
jb
mov
cmc
mov
sub
gs
inc
jae
cs
sbb
adc
mov
retf
inc
push
pop
mov
dec
imul
nop
inc
repz
cmp
sub
inc
mov
scas
pop
sti
dec
hlt
call
sar
outs
adc
clc
and
ins
pavgb
dec
push
lahf
loop
mov
and
pop
push
mov
add
dec
push
mov
retf
fs
xlat
inc
js
or
retf
arpl
add
and
sub
dec
enter
in
mov
sub
and
ror
mov
nop
lods
jg
aas
jns
and
pop
iret
(bad)
cdq
xchg
sub
dec
push
fistp
pushf
inc
xlat
(bad)
loopne
mov
scas
int3
jl
and
pusha
cmp
sbb
jne
jnp
ss
fld
(bad)
iret
inc
dec
fmulp
dec
mov
int3
fdiv
(bad)
pop
scas
sub
xor
mov
enter
dec
mov
loop
shr
in
jb
out
and
xchg
out
jge
and
push
cmps
adc
xlat
push
fist
imul
leave
jae
pop
or
push
cwde
ins
aaa
sahf
cmp
popa
cmp
mov
bound
sub
bound
cmc
not
dec
js
push
dec
xchg
outs
jb
pop
xchg
mov
cmp
cmps
(bad)
sbb
cmps
mov
out
sub
aad
call
(bad)
push
add
popf
or
sbb
shl
push
test
call
push
sub
xchg
jbe
sbb
mov
test
retf
mov
push
fldlg2
inc
xor
sti
fisttp
push
loope
inc
in
pop
popa
dec
ins
ja
push
repnz
pop
data16
sbb
imul
jmp
push
sbb
inc
scas
and
mov
call
sti
mov
xchg
add
fdiv
outs
fcom
ficomp
push
xor
xchg
pushf
mov
push
or
xor
(bad)
ins
mov
in
jnp
rcl
mov
mov
cdq
cvtdq2ps
(bad)
fld
cmps
sar
inc
pop
outs
add
dec
add
sbb
mov
neg
in
pusha
aam
jne
out
adc
or
or
sub
es
mov
mov
int
xor
sbb
inc
int
fdivr
gs
dec
loopne
fmul
cmp
shl
inc
xlat
loope
add
imul
adc
ins
jecxz
jge
popf
shr
in
cld
dec
xor
mov
sbb
out
push
push
dec
push
xchg
fdivp
jp
cli
xchg
push
sti
dec
xor
fs
cmps
dec
inc
push
mov
xchg
gs
aas
push
aam
ins
xor
out
shl
cs
mov
(bad)
ror
or
mov
ror
scas
aam
pop
data16
shl
inc
pop
(bad)
add
mov
test
popw
in
dec
inc
mov
and
out
mov
scas
(bad)
xchg
repz
sub
enter
jp
xchg
int3
out
push
lds
add
pop
cmp
xor
lds
lahf
xchg
(bad)
jmp
sbb
mov
pop
xor
repnz
or
cmp
jbe
loope
movs
addr16
jb
cmp
adc
addps
loopne
jecxz
lods
push
inc
test
pusha
xor
xchg
mov
ret
stos
inc
int
mov
(bad)
cdq
mov
rcr
mov
repz
sbb
fsubr
mov
out
fstp
fisub
fsubr
pop
and
pop
mov
add
mov
jb
xchg
scas
pop
sti
ud0
add
mov
dec
not
jg
div
jecxz
sub
mov
cmc
sub
sbb
movs
inc
sub
sbb
(bad)
stos
outs
ja
mov
retf
sub
cwde
add
loop
xor
mov
mov
dec
mov
and
jg
and
test
int3
mov
into
aam
dec
test
fidiv
ss
mov
shl
arpl
or
push
lods
cli
mov
pop
je
out
pop
adc
cmp
pop
pop
lods
int
jno
pop
hlt
ins
sbb
out
cmps
pop
push
call
jb
sbb
cs
sbb
xchg
clc
or
jbe
dec
fadd
jecxz
(bad)
cmp
xlat
shl
or
arpl
(bad)
fdiv
jle
cmps
out
dec
ds
imul
or
mov
sub
inc
andnps
lods
jo
sub
lahf
jns
push
push
pop
mov
jecxz
fsin
aad
sbb
lock
mov
adc
push
xchg
add
sbb
ss
mov
mov
dec
(bad)
dec
inc
cmps
mov
push
jno
mov
lock
fs
in
mov
pop
sub
(bad)
add
and
repnz
pop
mov
mov
push
fsub
ja
inc
pop
mov
push
out
sub
int
xchg
sbb
retf
jo
and
js
fs
mov
in
addr16
push
adc
imul
jae
int3
out
cmps
pop
sub
or
add
push
mov
cmps
les
jp
sbb
mov
loope
pusha
mov
lahf
outs
mov
add
int
jg
arpl
stc
mov
fsubr
cs
test
lds
xchg
jl
jno
test
push
aad
xor
fwait
mov
dec
loopne
gs
mov
xlat
push
sub
cmp
xchg
scas
data16
jp
xlat
pop
lods
inc
loope
xor
mov
sub
add
sti
xchg
iret
adc
adc
(bad)
push
cs
outs
jae
mov
outs
inc
add
cdq
(bad)
mov
aas
xor
mov
sub
inc
push
or
loope
and
stc
cli
cmc
or
int3
jno
mov
jecxz
mov
enter
adc
dec
jb
dec
pop
xor
mov
test
adc
fiadd
daa
adc
pop
scas
rcr
mov
cmp
push
push
add
sub
loope
dec
ins
sbb
cmp
sbb
sti
les
pop
xor
imul
vmulpd
mov
repz
sbb
fimul
mov
mov
ds
xchg
xor
and
rol
and
and
enter
sti
cld
in
xchg
fistp
es
mov
xchg
xor
gs
test
pop
sub
xchg
dec
out
leave
fs
pop
dec
xor
xor
xor
fs
cmp
(bad)
push
xchg
outs
mov
stos
shl
fiadd
pop
sub
sbb
pushf
jmp
fwait
shl
shl
rcr
mov
mov
rol
mov
stos
or
ins
into
les
loopne
jmp
int
frstpm(287
xor
xchg
and
adc
nop
mov
mov
jecxz
mov
(bad)
sub
add
cwde
jo
and
das
adc
pop
mov
fdivr
adc
push
dec
ror
push
push
hlt
lods
test
outs
(bad)
repz
aam
push
ja
sub
hlt
into
inc
push
mov
hlt
shl
xor
mov
sar
or
cmp
pop
inc
pop
ret
mov
imul
push
cmp
pop
int3
xchg
push
fnstenv
inc
sar
retf
or
jae
cs
in
cld
or
sub
jb
test
das
es
mov
int
push
dec
daa
cmp
pop
xor
dec
pop
pop
fld
test
(bad)
(bad)
xlat
xor
(bad)
add
lods
lea
outs
jp
pop
jg
cmp
ja
(bad)
push
fbstp
lahf
retf
hlt
adc
cdq
dec
int
push
push
xor
adc
mov
adc
add
pop
imul
jae
cs
xchg
or
(bad)
movs
pop
dec
test
cld
int
cmp
int
retf
dec
push
fstp
out
lahf
sub
lods
shr
xchg
scas
add
shr
push
or
hlt
stc
pop
push
fidiv
jns
loop
clc
dec
inc
jge
daa
dec
int3
loope
cmp
fld
lods
jp
sub
gs
shl
les
retf
stos
aaa
cmp
cdq
sar
jmp
lahf
pop
aad
and
fs
xlat
and
xchg
dec
jecxz
ins
mov
cwde
mul
xchg
or
rcl
les
push
ds
cdq
mov
or
inc
imul
popf
mov
push
icebp
imul
adc
add
add
cld
shl
cmps
aam
lds
rcr
jae
pop
inc
mov
test
dec
shr
jl
mov
ja
or
fimul
fcom
push
inc
and
dec
je
pop
aam
jge
xor
jo
cmps
stc
xor
rcr
jmp
mov
popf
int
or
cmp
out
loop
xor
or
gs
mov
test
pop
jle
xchg
sub
aas
out
jnp
shl
mov
nop
leave
inc
imul
in
push
jnp
ja
dec
mov
sub
cmp
ds
lods
in
pushf
imul
cld
cmp
inc
stc
pop
into
jle
jmp
mov
gs
(bad)
rcr
jmp
enter
nop
push
mov
add
out
pop
fld
inc
mov
xchg
lahf
imul
je
rcl
mov
xor
and
mov
push
mov
lea
adc
xchg
xor
xchg
push
mov
adc
mov
fwait
xlat
and
push
ret
retf
js
lods
adc
(bad)
fcomi
cmps
cdq
cmc
jnp
inc
mov
ret
inc
setne
fucom
sahf
xor
ss
pop
and
push
call
(bad)
aam
push
inc
arpl
mov
lods
push
or
enter
out
es
xchg
test
inc
adc
inc
(bad)
mov
inc
and
cmp
dec
(bad)
add
add
sti
loop
inc
(bad)
sbb
mov
or
out
mov
test
ins
fs
sbb
nop
dec
data16
jb
outs
mov
aad
stc
cmp
push
xchg
sbb
(bad)
jmp
rcr
and
jbe
dec
mov
enter
mov
leave
or
push
push
mov
test
mov
pusha
sbb
pop
mov
push
pusha
pop
in
ret
stos
rcl
ss
adc
dec
push
mov
dec
adc
xor
adc
xchg
or
xchg
add
pop
(bad)
aam
dec
jg
fidiv
xor
(bad)
lock
jmp
(bad)
mov
retf
mov
sar
jg
and
mov
out
dec
movs
jl
xchg
enter
es
pop
ds
cld
and
push
mov
inc
aad
push
xor
(bad)
push
adc
xor
sbb
pop
(bad)
sahf
in
je
jb
mov
inc
push
sub
mov
cmp
mov
arpl
or
cmp
daa
movs
push
push
add
sbb
push
xor
mov
fnstenv
mov
test
stos
or
push
mov
jmp
sbb
push
and
cmp
movs
pop
imul
ds
ja
inc
fs
xchg
aam
mov
(bad)
nop
ficomp
lea
xchg
fwait
mov
sbb
inc
jg
push
ret
push
imul
lahf
das
push
inc
mov
idiv
push
and
inc
cmp
xchg
xchg
cmp
add
call
mov
pop
sti
inc
loope
xchg
les
(bad)
sbb
pop
and
in
in
loop
cwde
cmp
(bad)
sbb
outs
inc
sub
mov
lods
vpavgw
dec
xor
adc
mov
fstp
dec
iret
mov
sbb
(bad)
or
push
scas
adc
enter
cmp
add
and
dec
std
mov
cdq
jmp
cmps
mov
xor
movs
mov
aam
push
scas
rcl
popf
add
add
mov
xchg
jae
dec
add
push
mov
repz
and
xor
xor
sub
xchg
push
mov
xor
pop
cmp
clc
ja
or
pop
js
push
(bad)
jp
(bad)
divps
push
and
jne
or
movs
or
xchg
push
mov
test
pop
push
retf
stc
sbb
outs
mov
into
loop
sub
mov
mov
fadd
adc
aad
adc
ds
gs
or
pop
fisub
test
stc
mov
xchg
fwait
sub
popa
sbb
jmp
xchg
xchg
es
repz
sub
pop
sti
or
pop
call
push
adc
fsubr
scas
or
clc
test
xor
imul
ds
aam
fsubr
cmp
scas
jecxz
jne
(bad)
pop
add
lods
push
(bad)
iret
loopne
push
je
out
adc
inc
popf
pop
mov
retf
and
jnp
cmp
xor
repz
sahf
outs
ret
imul
bound
in
in
add
call
fimul
mov
jmp
push
jne
jmp
stc
inc
(bad)
call
add
fisub
sbb
sub
leave
inc
rcr
jmp
(bad)
not
push
popf
add
cwde
adc
pop
jmp
aas
and
cmc
das
mov
fild
iret
or
pop
jb
out
daa
sahf
cmc
or
adc
push
cdq
jae
in
aas
or
sub
sbb
mov
sbb
mov
cmp
mov
clc
or
adc
pop
(bad)
jmp
xchg
std
dec
sub
push
push
sub
push
pop
sar
cli
mov
lahf
into
jmp
cmps
jl
mov
fidivr
cmp
psubw
mov
movs
stos
mov
loopne
xor
mov
cmovl
gs
test
dec
pop
inc
or
mov
mov
aas
in
cmp
loopne
mov
aam
loop
inc
sbb
in
aas
jae
scas
add
cld
xchg
and
sub
test
outs
fisub
mov
test
push
frstor
mov
cmp
call
je
mov
aaa
aam
inc
les
cmp
outs
push
jg
(bad)
adc
inc
ds
lea
xchg
test
pop
into
jno
xchg
and
leave
inc
icebp
or
xor
out
or
sub
aad
out
sbb
stos
rol
cmp
out
pop
mov
dec
lock
int
mov
inc
test
add
xchg
lds
sbb
daa
test
cwde
xchg
sub
loop
stos
push
sub
jge
or
or
pop
xchg
nop
shr
mov
std
ins
repz
into
xchg
ds
push
pop
jno
mov
shl
adc
into
cmp
cmps
fisubr
pop
es
mov
adc
and
or
xor
or
cmps
push
stc
in
pop
pop
fbld
pusha
retf
cmps
push
add
arpl
ins
push
pop
and
stc
mov
sti
repnz
xchg
adc
lea
inc
iret
fwait
jnp
movs
pop
fisttp
and
std
jp
lods
mov
aam
mov
lods
inc
stos
and
mov
shl
cwde
ret
mov
inc
jle
adc
int
add
test
xchg
inc
mov
sbb
xor
mov
addr16
fs
inc
cli
dec
push
fstp
inc
sbb
jne
pop
in
push
ja
mov
fcomp
jnp
jp
jns
aam
adc
xchg
hlt
repz
(bad)
dec
cmp
mov
jge
imul
out
cmp
test
movs
inc
js
test
mov
cmp
repz
jmp
ins
push
sbb
sub
cmp
fiadd
sbb
out
jl
outs
add
pop
mov
ror
stos
fsub
es
mov
movs
cmc
(bad)
rol
add
mov
call
jb
or
mov
cwde
dec
cs
push
xlat
test
ins
psrad
jl
mov
call
dec
sbb
jne
cmps
mov
or
fsubr
fbld
sbb
cwde
mov
js
aas
sbb
sub
(bad)
shl
adc
out
add
loopne
nop
loopne
leave
leave
or
cmp
or
mov
add
cdq
inc
pop
jge
pop
and
or
lods
jae
lds
pop
xchg
push
cwde
movs
push
jp
add
sub
sub
(bad)
xchg
data16
scas
mov
retf
or
jp
shl
sbb
sahf
push
imul
add
cmp
xchg
ror
shl
push
cmp
icebp
mov
xchg
(bad)
push
js
test
sbb
sbb
stos
xor
xchg
xchg
ja
push
push
xchg
(bad)
loop
jg
sar
fwait
jle
mov
(bad)
mov
test
add
lahf
jb
(bad)
enter
das
pusha
or
and
cmp
ss
enter
out
int3
mov
test
scas
(bad)
out
fwait
cmp
adc
add
add
(bad)
rol
jb
imul
push
es
dec
jmp
(bad)
pusha
call
jo
push
mov
enter
pop
dec
ins
xchg
lea
and
add
mov
rcr
push
loop
jp
mov
(bad)
pop
aad
jo
iret
mov
lock
stc
cwde
repnz
lock
je
push
mov
mov
(bad)
mov
sub
mov
mov
mov
cmp
pop
pop
aaa
push
es
rcr
or
push
sbb
inc
shr
inc
push
bts
mov
mov
xor
sbb
enter
cdq
hlt
in
ret
out
dec
or
jns
retf
fsubr
jl
add
in
dec
data16
pop
scas
out
sub
dec
shl
out
jns
xchg
jo
and
stc
shr
jmp
cwde
xchg
aas
in
loopne
or
jg
cmp
adc
sub
dec
ss
dec
sar
ins
jae
mov
out
dec
jge
call
cmp
out
push
add
push
out
jno
cmp
(bad)
mov
imul
leave
jae
push
adc
push
aam
leave
(bad)
cld
cmp
popa
ins
scas
jle
fs
inc
xor
sbb
inc
pop
or
call
pushf
addr16
inc
sbb
cmp
push
dec
inc
xchg
inc
pop
mov
mov
ret
or
jmp
inc
mov
push
inc
xor
adc
mov
out
test
sub
inc
outs
pop
inc
mov
xor
ds
ret
or
es
pop
cmp
mov
sahf
test
sub
add
test
cmp
ja
cmp
fwait
imul
inc
icebp
mov
xchg
mov
rcl
repnz
jno
mov
aad
jmp
out
or
mov
push
pop
jp
sub
ja
push
push
xchg
add
in
adc
adc
fwait
mov
out
sub
mov
jno
mov
bound
sti
pop
shl
(bad)
jno
mov
xchg
jg
in
cmp
test
pusha
sub
sbb
mov
cmp
adc
mov
cmp
rol
imul
int3
bound
test
movntps
dec
cmps
or
pop
mov
pusha
arpl
jbe
inc
push
sub
popf
inc
jnp
inc
clc
cli
cmp
mov
inc
mov
mov
ins
and
loopne
sbb
push
and
xor
xchg
(bad)
and
dec
shr
pop
fwait
or
sbb
jmp
adc
out
cmp
aam
fimul
ja
cmps
outs
mov
int
aas
les
fst
xor
dec
inc
aas
(bad)
mov
int
mov
jb
jbe
inc
pushf
movs
mov
int3
std
mov
dec
jg
mov
hlt
sbb
mov
xlat
scas
cmp
adc
fs
aaa
sbb
jge
cmp
adc
sub
shr
mov
or
jecxz
cmp
jae
xchg
xchg
jne
cmps
call
les
rcr
imul
(bad)
cmps
jle
xor
inc
js
and
clc
xchg
jecxz
mov
cmp
mov
pop
mov
jmp
jle
cmp
push
rcr
mov
and
shl
retf
dec
pop
arpl
ret
fild
xchg
fsubrp
in
cld
jns
mov
add
mov
jge
test
shl
fs
daa
out
and
pusha
nop
ins
adc
add
adc
sub
mov
(bad)
push
pop
sbb
mov
xchg
push
mov
adc
jmp
mov
jo
jl
(bad)
push
pop
scas
push
mov
push
push
hlt
jecxz
sbb
inc
hlt
aad
fbstp
mov
jl
xchg
popf
add
out
pusha
jmp
xchg
push
push
push
pop
inc
push
push
adc
add
xchg
mov
jb
loop
push
mov
pop
adc
cwde
push
inc
sub
lea
std
fst
inc
push
rcl
xor
clc
sub
mov
pop
lahf
pop
push
arpl
out
dec
leave
cmc
sar
cld
inc
pop
out
cmps
aad
push
lea
cmps
out
lds
mov
xchg
scas
push
xor
mov
adc
add
dec
add
cmps
dec
shl
(bad)
loop
mov
push
jg
retf
mov
push
fst
xlat
leave
jg
add
jl
stc
or
lods
shl
mov
mov
int3
into
mov
jmp
ja
fs
pushf
leave
xor
mov
jmp
data16
adc
mov
xlat
jnp
fnsave
pop
jmp
mov
jle
(bad)
add
xchg
enter
mov
rcr
les
adc
jo
retf
pop
cdq
xchg
and
mov
add
(bad)
enter
inc
mov
cmp
lds
ins
dec
in
pop
stos
and
lea
xchg
fs
std
cdq
xor
pushf
push
(bad)
sbb
xchg
fistp
mov
loope
scas
push
and
pop
scas
dec
sbb
call
movs
cmp
ret
add
adc
pop
xor
pusha
cwde
cmps
xor
lods
dec
pop
(bad)
in
jbe
xchg
sbb
je
or
pop
int
jecxz
cmp
repnz
xchg
adc
test
jno
xor
fmul
fs
outs
add
inc
ror
pop
sub
jle
out
mov
(bad)
push
cmp
popa
loopne
and
leave
sub
or
into
xor
and
shl
sub
cld
push
scas
add
pop
pop
pop
and
xor
xchg
dec
movs
dec
xchg
dec
dec
xchg
sbb
in
xor
outs
test
ins
xor
and
test
mov
pusha
aaa
lods
addr16
ror
outs
cld
jg
adc
retf
fldenv
fist
inc
and
test
add
inc
jbe
adc
stc
sub
movs
pop
in
loop
pop
fldcw
xchg
add
hlt
cmp
fldcw
push
pop
adc
mov
push
inc
inc
jnp
sbb
outs
stos
daa
and
repz
xchg
das
adc
and
or
aad
outs
inc
sbb
pop
(bad)
movs
fldenv
xchg
test
mov
jno
mov
pop
add
ins
mov
or
adc
loop
in
mov
cmp
or
(bad)
add
jbe
shl
(bad)
sti
stos
sahf
push
jl
inc
sub
nop
repz
xor
adc
out
jae
xchg
ins
aam
stos
jp
movs
cmp
add
pop
clc
inc
or
jmp
sub
repz
xor
repz
jmp
mul
jmp
add
rcr
push
pop
sub
cmps
cmc
(bad)
repz
aaa
popf
or
add
cmc
jmp
xchg
add
test
jle
xor
jnp
inc
mov
std
and
or
loop
jb
shr
out
xchg
push
pop
fucom
dec
(bad)
push
call
mov
fst
or
loop
dec
out
jle
sbb
pushf
mov
imul
jns
loopne
gs
daa
scas
push
or
sbb
jnp
push
in
arpl
sbb
jbe
cmc
push
into
ret
adc
repz
lock
ins
fmul
fidiv
cmp
test
test
cs
iret
int3
mov
or
loopne
jmp
shl
dec
std
pop
call
jns
adc
or
mov
repz
xor
mov
stc
or
retf
imul
aas
(bad)
and
dec
mov
imul
(bad)
in
arpl
aas
test
xchg
call
dec
adc
retf
or
xchg
pusha
clc
stos
sbb
pop
les
mov
out
sub
sub
xchg
jnp
dec
ss
xchg
popa
cmp
mov
jg
sbb
fiadd
lds
cmp
pusha
dec
xchg
jae
test
and
mov
mov
std
adc
(bad)
ror
daa
loop
std
xchg
ret
dec
fistp
enter
mov
jg
or
(bad)
push
inc
das
rcr
les
data16
sbb
push
test
loop
pop
xor
repnz
shr
or
hlt
call
xchg
std
push
scas
jo
xchg
retf
das
mov
jbe
ins
je
sbb
loope
adc
mov
iret
into
test
pop
repz
inc
sub
jns
bound
push
sub
cmp
sbb
inc
mov
adc
test
out
sbb
and
iret
mov
mov
jb
or
jns
adc
mov
fucomp
test
add
arpl
mov
sahf
ss
sbb
jg
popf
xchg
sahf
mov
dec
jae
ja
not
xchg
(bad)
div
mov
dec
mov
cmps
mov
jae
and
in
js
cmp
mov
mov
or
movs
mov
aaa
sbb
sbb
(bad)
mul
xor
push
xchg
cmc
lds
ret
push
leave
call
clc
sar
jmp
test
pop
es
xchg
in
outs
or
in
or
mov
call
(bad)
test
mov
fs
push
xor
or
and
inc
push
fisttp
fbld
pop
jno
fcomp
mov
fcmovne
movs
cwde
cmps
mov
cmp
mov
sbb
mov
cmp
and
jecxz
mov
nop
add
aam
sub
retf
or
adc
mov
fild
hlt
test
and
push
cmp
ja
push
(bad)
sar
in
jns
shl
jb
mov
data16
xchg
or
xor
cdq
popf
shl
(bad)
mov
sbb
pop
mov
mov
mov
leave
adc
movs
jnp
add
scas
scas
out
cli
into
pushf
mov
(bad)
dec
push
rcr
(bad)
repz
movs
push
dec
cmps
popf
xchg
push
inc
mov
(bad)
mov
fcomi
lock
inc
cmps
cmps
dec
mov
cmc
inc
jecxz
cli
cmp
les
inc
js
repnz
hlt
fcomip
cmc
popf
sub
out
pop
aaa
(bad)
xchg
sbb
das
ja
or
mov
in
mov
push
xlat
cmp
pusha
xor
mov
inc
pop
popa
dec
daa
and
fistp
fdivr
in
sbb
scas
jmp
mov
push
cmp
mov
ror
sbb
and
pop
(bad)
jb
loope
sbb
sbb
ds
xchg
jp
lods
daa
outs
mov
mov
jbe
dec
aad
or
xor
out
fs
jp
and
(bad)
sbb
in
dec
ja
mov
cmps
ror
sub
fsub
aad
sub
es
call
pop
addr16
data16
adc
mov
cmc
jns
es
fdivr
frstor
stos
fdivr
mov
hlt
adc
pop
scas
lods
cs
lea
lods
pop
fisub
(bad)
scas
jbe
xchg
cmps
add
dec
jmp
outs
int
jmp
clc
mov
or
adc
push
mov
popf
shl
mov
(bad)
pop
(bad)
xchg
aam
jmp
inc
pop
sub
pop
add
test
(bad)
xchg
cwde
fsub
adc
test
enter
or
iret
adc
popf
pop
adc
jp
test
pusha
inc
ss
call
ret
jb
mov
and
pop
ret
inc
sbb
fimul
mov
in
clc
push
add
sub
lds
and
fiadd
fild
jmp
adc
sbb
xor
mov
out
mov
sub
imul
pushf
xchg
sar
xchg
jb
in
add
sbb
test
sub
mov
call
xchg
push
test
push
sub
and
cmc
(bad)
call
pop
rol
pop
mov
mov
dec
sti
mov
inc
adc
jno
mov
lock
jl
xchg
les
shr
stos
fwait
lock
mov
sbb
mov
xlat
cld
mov
sub
movs
mov
arpl
bound
je
or
sti
mov
lea
popf
lock
dec
out
dec
adc
mov
add
mov
and
jne
mov
loop
shl
outs
sbb
(bad)
cmp
out
mov
jecxz
push
out
push
pop
and
bound
adc
adc
inc
xor
hlt
sahf
cmp
int3
jl
add
cmc
push
fcomp
popa
and
pop
cmp
jae
adc
and
gs
shl
lods
retf
xor
ficom
ss
xlat
pop
neg
jmp
or
dec
aaa
xlat
push
imul
out
fucomi
jle
lahf
adc
jecxz
jmp
jmp
and
pop
or
sub
icebp
xrelease
pop
cmp
mov
adc
cs
pop
xlat
out
(bad)
jns
push
sti
(bad)
ins
xchg
sti
sub
pop
jmp
repz
mov
mov
pop
fcomp
push
jns
ins
sub
xchg
pop
or
sti
dec
fld
sahf
inc
les
xchg
test
jnp
push
or
cmp
pop
fild
and
and
xchg
cwde
mov
inc
dec
sub
fisttp
sub
ja
outs
dec
fistp
xor
dec
mov
xchg
bound
sbb
jb
jge
add
pop
(bad)
rol
test
xchg
test
mov
(bad)
mov
push
scas
test
enter
mov
dec
jp
sti
add
mov
movs
popf
sub
into
loopne
or
call
stc
xor
add
(bad)
cli
retf
jp
fs
aas
arpl
mov
jb
in
loope
(bad)
or
xchg
push
scas
xor
mov
mov
inc
sub
clc
push
ja
pop
aas
adc
je
push
shr
scas
mov
or
jge
inc
inc
inc
in
call
inc
sub
lods
xor
pop
sbb
adc
push
repz
(bad)
out
pop
pop
repz
sub
icebp
scas
dec
and
(bad)
shl
clc
ror
loop
out
arpl
push
clc
cmps
pushf
lea
stc
loopne
mov
test
nop
cmps
dec
rol
das
mov
out
and
(bad)
xlat
sub
inc
mov
fistp
mov
icebp
cmps
nop
push
sub
sbb
mov
repnz
sbb
xchg
pusha
(bad)
dec
sub
test
mov
or
retf
inc
jbe
pop
xchg
adc
jmp
adc
push
inc
int
or
(bad)
jns
fnstsw
xchg
mov
cmp
mov
imul
outs
mov
imul
mov
and
icebp
sbb
out
mov
aam
sahf
aad
scas
xchg
jge
loop
dec
adc
push
in
mov
out
xchg
mov
imul
or
lock
pop
push
xor
pop
ds
(bad)
push
mov
jecxz
outs
lahf
movs
jae
push
mov
sbb
xchg
movs
ret
jo
xchg
jbe
cli
sub
xor
in
or
push
call
mov
arpl
pop
ds
push
inc
push
pop
xor
adc
retf
jp
cmovb
pop
cmc
call
mov
push
dec
pusha
bound
cmp
fistp
call
xor
xor
mov
pop
shr
dec
retf
pushf
xchg
mov
lods
push
bound
(bad)
rcr
xchg
or
cmp
cmc
mov
mov
rcr
(bad)
ds
push
cwde
ja
loopne
push
icebp
aad
mov
jns
push
pop
cmp
jne
add
popf
lahf
add
sar
cdq
jae
ficom
push
jo
je
push
add
ss
mov
mov
push
xchg
pusha
mov
cmps
(bad)
lahf
and
cmc
fidiv
mov
lea
(bad)
jecxz
cmp
jmp
xchg
jbe
dec
jo
cwde
push
xor
and
rcr
je
fstp
push
stos
stos
jmp
pop
and
loope
icebp
pop
int3
test
jne
(bad)
pushf
addr16
xchg
bnd
fst
pop
xchg
scas
dec
dec
leave
retf
enter
mov
jbe
add
pop
add
cmps
sub
pshufw
sbb
ins
loopne
xchg
std
(bad)
mov
mov
pop
dec
lahf
shl
fld
push
adc
mov
and
or
(bad)
in
adc
push
test
in
xlat
sub
retf
(bad)
scas
sub
mov
xchg
pop
in
mov
push
mov
cmp
outs
ins
enter
mov
inc
or
rcl
cdq
adc
out
sbb
pop
cmp
mov
mov
(bad)
fidiv
adc
lods
les
sahf
push
ins
push
xchg
jne
push
ficomp
dec
xchg
mov
add
pop
and
or
xor
test
fcomp
xchg
outs
int
and
popf
mov
jnp
jmp
and
mov
lea
out
repnz
leave
test
lahf
cmc
push
dec
cmp
test
mov
mov
xor
dec
sub
jmp
adc
sub
fmul
loope
stos
mov
and
bound
(bad)
xlat
and
or
inc
loope
cs
iret
jg
pop
dec
push
jo
mov
dec
je
lock
mov
sbb
push
xchg
and
xor
cld
fild
fwait
mov
retf
shl
lock
push
adc
xor
cli
cdq
push
cmp
dec
repz
test
xchg
xchg
sub
mov
pop
mov
(bad)
adc
clc
fstp
js
dec
(bad)
jl
int3
fwait
cmp
out
adc
xor
pop
into
adc
popf
retf
xor
adc
pop
pavgw
or
adc
(bad)
clc
jns
iret
jbe
arpl
(bad)
mov
mov
jg
dec
cmp
stos
test
sub
mov
lods
leave
mov
and
mov
or
rcr
mov
es
pop
fdivr
mov
nop
or
pop
popf
sahf
movs
shl
loop
push
sbb
adc
xchg
int3
and
mov
cwde
push
cwde
inc
test
and
xor
mov
imul
enter
outs
aam
mov
inc
test
inc
test
mov
stc
jmp
push
fiadd
sbb
retf
daa
hlt
push
and
mov
cmp
jmp
(bad)
loopne
xor
add
sbb
dec
add
mov
test
xor
in
mov
mov
call
xor
pop
cmc
mov
in
(bad)
mov
adc
in
or
mov
jmp
in
sahf
nop
dec
iret
inc
cmp
push
ficom
adc
push
jne
dec
and
mov
cwde
cmp
push
out
pusha
sub
push
(bad)
cmp
cmp
cmps
leave
neg
aas
in
fcmovnu
daa
mov
data16
pop
pop
(bad)
retf
jge
pop
mov
adc
xlat
sub
dec
std
add
out
inc
sub
sub
xor
or
adc
xor
test
lahf
xor
loop
fdivr
jo
jg
or
icebp
push
(bad)
mov
imul
pop
jo
(bad)
icebp
cdq
adc
repnz
es
and
push
aam
jnp
or
mov
jp
pop
jmp
adc
std
in
ret
cmp
mov
dec
iret
std
into
inc
out
and
ret
ror
jnp
jb
cwde
xchg
cdq
or
lea
je
lahf
rol
push
pop
stos
sbb
xchg
mov
mov
imul
retf
xchg
cmp
in
xchg
mov
out
jo
stc
jns
mov
xchg
jno
mov
cld
and
mov
or
loope
gs
cmc
xchg
test
in
lahf
dec
pop
pop
(bad)
or
test
stos
jle
mov
push
in
cmp
push
fadd
mov
jmp
adc
push
mov
lock
push
push
lahf
sub
cmp
inc
ficom
mov
rol
or
(bad)
aad
mov
in
jmp
jne
inc
cmp
fstp
dec
pop
push
sbb
cmp
and
data16
cmps
rcr
inc
inc
push
sub
scas
std
or
push
pop
jo
sar
repnz
adc
push
add
jmp
dec
xor
or
int3
jae
jecxz
rcl
out
xor
nop
push
and
push
dec
dec
arpl
(bad)
lahf
retf
repz
mov
push
jg
ja
shr
mov
jns
add
push
mov
mov
cmp
ds
js
fcmovne
mov
sti
adc
shl
outs
push
dec
pop
es
xchg
ror
addr16
pop
push
ficom
cmp
out
push
adc
xchg
movs
stos
push
push
lds
sub
inc
inc
xor
push
js
cmovb
jmp
fdivrp
xor
jb
jp
sar
sbb
hlt
(bad)
pop
mov
scas
test
xchg
and
mov
in
rol
pushf
out
cmp
push
jo
int
or
mov
dec
inc
jns
jmp
adc
jno
in
xor
push
mov
lock
aam
fadd
sub
mov
clc
mov
dec
in
das
pop
mov
shl
cmp
jp
in
mov
(bad)
mov
aad
xor
data16
sahf
mov
jns
les
and
test
gs
push
scas
jl
and
mov
adc
add
mov
dec
mov
xlat
inc
add
and
ja
ss
mov
xlat
push
ins
out
leave
lahf
push
ds
fist
jp
call
add
inc
xchg
push
ja
dec
mov
shr
jno
lods
shl
popa
(bad)
mov
bound
imul
adc
xor
xchg
movs
sti
das
cmps
shr
or
into
push
adc
push
sub
mov
div
fisttp
xor
sbb
mov
bound
jnp
jbe
cmps
popf
pushf
(bad)
mov
pop
(bad)
jle
mov
(bad)
jecxz
(bad)
call
jbe
repz
and
movs
adc
test
fild
mov
add
daa
sbb
aad
(bad)
aas
sub
or
pop
rol
sbb
ret
jmp
stos
scas
repnz
(bad)
stos
movs
cld
aam
jp
add
scas
sti
gs
xchg
test
xchg
xor
adc
fisubr
jle
push
push
pop
mov
xor
mov
and
xor
jmp
clc
push
or
stc
mov
outs
enter
test
dec
adc
inc
ret
mov
ss
cmp
jns
idiv
xchg
and
jl
sub
adc
aaa
push
out
lods
rcl
popa
sbb
lods
and
out
inc
xchg
loope
jbe
test
test
sub
shr
(bad)
lds
scas
push
sub
push
xor
inc
add
xchg
fcom
inc
pop
jmp
dec
xor
lods
or
cmc
push
hlt
addr16
in
mov
call
mov
jno
in
inc
scas
xor
and
xor
rol
retf
push
das
mov
js
add
addr16
int
shr
icebp
jne
xchg
shl
push
into
sub
(bad)
mov
cwde
fstp
mov
stos
or
push
xor
scas
fnstsw
int
fadd
cmps
arpl
cdq
pop
or
dec
dec
sub
inc
dec
ret
adc
mov
xlat
(bad)
cmc
sbb
ins
mov
adc
iret
add
mov
adc
out
icebp
add
push
inc
pop
iret
sub
xor
lock
cmp
dec
inc
push
pop
(bad)
shr
xor
mov
sub
jl
push
cmps
mov
inc
int3
(bad)
out
mov
and
imul
or
call
xchg
dec
xor
pop
movs
push
mov
mov
std
mov
ror
inc
mov
mov
cmp
enter
cdq
add
mov
int
adc
xlat
int
retf
call
mov
inc
xchg
add
fisubr
push
aam
pushf
in
sbb
movs
push
cmps
nop
das
and
mov
sbb
lds
aam
dec
ret
call
xor
in
setge
cpuid
lahf
sti
push
jmp
jg
pusha
push
pop
jge
mov
or
xor
cdq
dec
retf
in
jp
test
nop
pop
in
adc
fdivr
in
mov
arpl
add
push
pop
sti
cmp
push
pop
mov
jp
cmc
icebp
xor
stos
mov
fwait
push
cs
sub
inc
dec
scas
mov
inc
or
sub
js
aad
retf
cmp
pop
movs
push
aad
js
cmp
sbb
in
mov
mov
popa
hlt
scas
sub
std
sahf
fimul
dec
adc
aaa
test
jae
outs
jbe
and
xchg
xchg
inc
pop
movs
inc
sbb
jmp
mov
cmc
test
fld
sar
cmp
or
nop
sbb
push
int
aaa
std
cld
jns
jmp
sub
mov
and
test
data16
cmps
ret
sub
or
out
mov
dec
test
hlt
out
xor
jecxz
cwde
xor
fs
mov
cmp
jmp
or
and
(bad)
test
jns
cmp
mov
sub
stc
out
test
lods
and
in
into
ret
mov
cmps
neg
cwde
(bad)
sbb
cs
sub
add
movs
dec
pop
ret
xor
sbb
cmp
adc
or
push
cmp
jmp
sub
xchg
pop
(bad)
lock
into
bound
(bad)
cli
sub
push
and
int3
dec
aas
dec
loopne
jnp
push
mov
or
adc
popf
cmp
inc
cmp
js
pop
dec
loop
lds
cmp
lods
jo
push
dec
pop
(bad)
and
mov
jnp
adc
or
mov
fwait
mov
push
or
jns
jle
loop
pop
fcom
adc
jmp
int
stos
mov
addr16
mov
add
pop
and
xor
sahf
jne
(bad)
xor
jnp
push
add
dec
sbb
into
add
in
mov
arpl
and
mov
xchg
fstp
fdivr
call
loop
out
lahf
sbb
xchg
pop
xor
jmp
clc
fimul
ja
mov
dec
test
ins
leave
sub
mov
xchg
add
fistp
faddp
or
dec
lahf
jne
shl
test
pop
and
lods
(bad)
rcl
(bad)
jbe
sbb
in
xchg
jns
lahf
lock
sub
xor
(bad)
sahf
xchg
mov
pop
xor
or
and
loop
mov
bound
lock
xchg
jecxz
lock
push
js
xchg
push
arpl
pop
or
push
repz
adc
inc
push
mov
data16
cmp
lock
mov
addr16
mov
add
and
pop
push
push
add
add
jmp
and
inc
stc
cwde
adc
mul
mov
aad
int3
repz
jb
pushw
not
xchg
(bad)
ins
lods
push
sahf
xchg
call
mov
ret
pusha
(bad)
sub
xor
inc
mov
(bad)
not
ror
call
call
call
leave
or
(bad)
xlat
pop
fnsave
inc
and
pushf
retf
ja
cmps
sbb
dec
ret
hlt
sbb
cmps
pop
(bad)
push
retf
and
jmp
adc
retf
imul
mov
mov
aaa
inc
loope
loopne
cmp
pop
add
inc
cdq
hlt
sbb
mov
adc
aaa
(bad)
xchg
dec
in
lds
stc
jmp
shl
xor
out
push
sub
push
imul
mov
stos
sbb
add
mov
mov
repz
test
mov
sub
xor
and
sbb
dec
fcmovnu
adc
inc
lods
repnz
ror
aam
mov
jp
mov
outs
adc
adc
adc
xor
nop
das
and
retf
call
shl
call
xor
imul
icebp
push
pop
xchg
jge
cmp
(bad)
daa
dec
and
or
ss
sub
loopne
fiadd
pop
add
sub
xchg
jl
sub
cs
cmp
push
popa
arpl
bound
jle
jmp
int
sbb
nop
or
xlat
add
loope
test
inc
dec
rcr
mov
inc
sbb
cdq
lods
mov
xchg
and
mov
add
int3
gs
cmp
aad
add
sbb
mov
add
xchg
or
cmp
(bad)
(bad)
sbb
cmps
jmp
rol
push
or
ret
cmp
std
stos
xor
pop
je
sub
jle
enter
mov
cmp
jge
sbb
icebp
ins
sti
adc
outs
cmp
out
jge
inc
ret
push
and
fiadd
pop
mov
jbe
mov
pop
xchg
pop
int3
or
imul
pop
call
mov
mov
pop
cmp
sbb
clc
xchg
in
mov
popf
jle
mov
cmps
mov
xor
fmul
inc
retf
(bad)
mov
jl
adc
rcr
push
dec
cs
or
sub
cmp
push
gs
mov
sbb
retf
push
adc
repz
dec
and
ins
ds
(bad)
xor
stos
and
loopne
int3
adc
lea
not
(bad)
inc
push
xchg
mov
cmp
cwde
cli
data16
call
hlt
jp
and
adc
cmp
rcl
cmp
mov
into
cmc
lds
mov
lea
xchg
into
mov
pop
in
call
mov
sub
ins
inc
rcl
std
(bad)
dec
jne
sbb
add
leave
jge
push
cld
xchg
mov
or
ins
data16
dec
cmp
or
jb
cmp
mov
xchg
outs
mov
pop
cmp
xlat
add
leave
cdq
int3
jp
aaa
jmp
jno
adc
pusha
mov
mov
jp
xchg
and
sub
test
pop
push
and
xlat
call
mov
push
xchg
cmps
adc
aad
sub
imul
xor
(bad)
adc
les
sbb
cmps
je
jl
imul
jecxz
lods
aam
fsub
or
and
nop
pop
jl
stos
add
pushf
repz
dec
shr
mov
sub
into
pop
fwait
(bad)
repz
cdq
xor
inc
add
outs
in
aad
add
dec
imul
inc
(bad)
leave
stos
repz
rol
push
cmp
jg
ja
std
add
xchg
add
std
push
ins
jg
(bad)
jmp
xor
pop
dec
loop
jg
push
es
mov
je
repz
add
(bad)
xlat
pop
fcmovnbe
jmp
gs
sub
xor
icebp
xchg
jg
pop
pushw
push
and
push
movs
and
inc
retf
mov
pop
rol
pop
xchg
or
xor
push
jb
(bad)
pop
cmp
adc
fwait
push
pop
inc
addr16
jge
popa
(bad)
in
pop
movs
cmp
sbb
pop
adc
pop
cmp
mov
cmp
aad
je
dec
dec
es
mov
gs
not
pop
push
rcl
pop
stos
jae
test
(bad)
cmps
push
div
add
arpl
outs
sbb
(bad)
mov
dec
stos
cld
jb
add
cmc
sahf
mov
dec
test
or
jno
xlat
mov
mov
movs
out
cmps
mov
mov
sbb
icebp
inc
repz
xor
fist
test
jbe
xor
rcl
push
and
and
test
inc
or
out
jbe
cs
in
and
pop
pop
add
cld
stos
cli
sahf
mov
shl
sbb
push
jns
xor
or
inc
test
out
test
stc
and
mov
test
fisttp
mov
mov
sbb
mov
dec
xor
push
inc
cmp
mov
cmp
and
cmp
sti
fild
mov
xchg
jmp
jl
out
pop
jns
adc
mov
mov
jmp
dec
sbb
push
jns
nop
push
cmp
inc
pop
jae
lock
rol
pop
pop
or
scas
lods
daa
ins
imul
and
mov
sahf
pop
lods
fcmove
jmp
cmp
mov
mov
xlat
xor
or
mov
mov
icebp
ja
inc
and
xchg
or
inc
add
xor
and
not
out
enter
add
xlat
(bad)
or
ror
cmp
lea
or
mov
fidiv
mov
fst
dec
loope
rol
bound
xor
cdq
loope
cli
es
mov
sahf
or
mov
sti
pushf
lods
xor
dec
inc
fistp
adc
jne
inc
add
leave
jp
push
leave
push
push
xchg
xor
push
ret
add
push
add
pop
retf
mov
retf
pusha
rcr
xchg
jno
jo
push
inc
inc
clc
ficom
sti
mov
test
fwait
mov
inc
add
dec
cld
xor
ror
ror
xor
(bad)
jmp
pop
mov
sub
or
std
inc
sbb
adc
into
xchg
mov
addr16
jg
jge
iret
mov
inc
ins
int3
cmp
pop
jae
into
ds
push
clc
test
jmp
hlt
sbb
dec
jno
daa
fmul
jo
dec
xchg
and
cli
mov
sbb
aam
scas
jecxz
clc
pusha
mov
pop
mov
sar
mov
shl
mov
jmp
mov
and
shl
xchg
xor
leave
mov
aas
popf
jge
je
dec
or
imul
call
mov
push
scas
xchg
dec
push
daa
test
cmp
cld
mov
xchg
and
and
mov
dec
and
xchg
int3
jl
jl
test
ret
or
dec
js
les
es
(bad)
js
sub
ss
pop
out
mov
jno
push
test
mov
cmp
sbb
pop
xchg
xchg
outs
and
mov
jmp
pop
mov
nop
mov
pop
and
sahf
hlt
add
pop
push
jne
pop
(bad)
fisub
ss
scas
scas
ins
repz
mov
xor
mov
daa
push
sbb
call
jp
(bad)
mov
or
cdq
sar
cmps
pop
(bad)
cdq
sbb
xor
and
bound
mov
mul
call
sbb
dec
clc
ins
push
push
mov
mov
and
jmp
push
cmp
dec
(bad)
fidiv
retf
push
mov
js
sti
xchg
jmp
lahf
cwde
cmp
mov
in
js
dec
xor
push
xchg
add
jp
inc
in
jecxz
jge
pop
in
xchg
sub
xchg
mov
rcl
pop
imul
or
rol
cmp
popa
inc
dec
movs
test
pop
push
aad
push
adc
jmp
mov
mov
and
or
mov
not
sbb
aas
cdq
daa
sahf
xchg
mov
fild
in
and
jmp
lahf
jl
popf
fnstenv
enter
adc
cmps
cmp
mov
enter
movs
fisttp
mul
out
xchg
cmp
sub
retf
jbe
fnstenv
mov
cmps
lods
js
dec
arpl
inc
mov
mov
leave
imul
adc
std
sub
inc
adc
xor
inc
push
dec
fs
mov
sahf
mov
loope
cs
mov
cmp
adc
fadd
dec
iret
xchg
sub
adc
add
pop
scas
fs
icebp
sub
sbb
jmp
lea
loopne
aam
mov
pop
retf
enter
in
push
jbe
pop
mov
shl
xchg
outs
pop
repz
retf
fwait
(bad)
sub
cmc
cli
pop
push
ds
xlat
cmc
popf
pop
cmp
mov
fnsave
ins
sahf
scas
sub
bound
sub
xor
jbe
sbb
and
mov
xchg
mov
movs
fwait
sub
retf
inc
and
mov
jmp
mov
jecxz
jl
sbb
fstp
hlt
push
push
icebp
push
fadd
fisttp
test
mov
out
xchg
and
icebp
jmp
pop
pop
mov
lods
cmp
shl
repnz
push
dec
pop
(bad)
dec
test
xrelease
repz
push
shl
dec
pop
call
lds
sub
test
leave
(bad)
mov
mov
or
inc
aad
sbb
sub
dec
scas
mov
fcomp
es
das
mov
loopne
fistp
pop
pop
xor
cmc
dec
in
mov
or
mov
pop
mov
lock
int3
xchg
mov
stos
pop
sub
sar
ja
lock
pop
and
mov
cli
jmp
addr16
loopne
pop
rol
das
aas
enter
gs
push
push
cmp
mov
sbb
push
xchg
push
push
push
mov
xchg
arpl
push
mov
pop
xchg
xchg
push
ss
imul
xor
in
cdq
or
icebp
(bad)
cmp
push
idiv
xor
stos
int
fsubr
pop
push
jle
mov
into
mov
xchg
or
dec
push
sbb
movs
cmp
in
mov
pop
lds
push
push
leave
jle
ret
mov
mov
inc
pop
fs
xor
jl
(bad)
fild
adc
(bad)
or
imul
and
cmp
sub
out
push
push
mov
ret
(bad)
in
inc
sti
push
xchg
or
inc
pushf
xchg
sub
ficomp
popf
out
lahf
push
add
rcl
mov
rol
mov
and
adc
mov
scas
mov
or
lods
dec
xor
es
(bad)
cli
movs
imul
dec
je
and
(bad)
adc
or
mov
scas
sub
ins
mov
inc
inc
retf
push
popf
pop
test
jl
inc
or
aam
iret
xchg
(bad)
loopne
cmp
lahf
call
and
add
push
or
jmp
adc
imul
and
test
fiadd
ficom
mov
cmp
sbb
pop
add
das
inc
outs
push
jnp
(bad)
shufps
jae
sti
fwait
mov
aas
adc
pop
addr16
cmp
inc
addr16
sbb
or
mov
aad
mov
mov
mov
push
leave
pop
lods
in
in
sbb
pop
add
sub
or
out
mov
and
cld
pop
push
sub
stc
jno
sbb
jne
nop
loope
loopne
xor
(bad)
ds
xchg
scas
dec
adc
pop
(bad)
jmp
sahf
mov
sbb
push
test
xor
inc
(bad)
ret
scas
dec
sub
je
js
push
aam
mov
cmp
and
inc
aas
and
add
je
and
out
push
ins
dec
push
jle
dec
sahf
gs
xchg
retf
mov
pop
jno
lods
adc
mov
loopne
les
aad
aaa
arpl
jns
xchg
daa
call
xor
and
fiadd
mov
in
mov
lock
lahf
hlt
push
shr
mov
enter
std
sahf
retf
test
cmp
and
and
rcr
xor
or
pop
out
gs
push
ret
and
mov
or
jmp
cmp
bound
push
stc
cdq
sbb
test
nop
xchg
out
fidivr
ds
dec
add
mov
mov
sub
inc
test
test
loop
xchg
pop
xchg
loope
inc
dec
dec
repz
jno
pop
fucom
cli
out
jne
sub
jmp
fsub
sti
push
inc
jae
ja
adc
jno
push
es
sbb
and
mov
(bad)
pusha
jp
out
cmps
pop
das
sbb
xor
ret
outs
mov
aaa
mov
mov
lock
ins
mov
lds
mov
in
mov
fimul
out
cmp
mov
mov
xor
mov
mov
dec
not
dec
inc
jnp
mov
mov
test
add
fwait
movs
das
shl
hlt
xor
scas
inc
fdivr
mov
push
cmp
movs
pusha
cmp
mov
xchg
fimul
scas
cmp
leave
out
push
lock
repnz
fmul
push
sbb
lock
retf
sahf
shl
pop
push
das
mov
jo
push
adc
ffree
(bad)
fmulp
ret
and
aad
push
es
fisttp
cmp
dec
outs
mov
aam
add
jb
mov
sub
jmp
cmp
jno
pusha
cmp
(bad)
push
js
sub
ja
lea
stos
ja
cmps
mov
test
mov
in
rcl
icebp
scas
loopne
xchg
aad
rcr
out
jb
sub
test
push
and
outs
mov
and
dec
inc
xchg
loope
rcl
or
stc
mov
mov
mov
sahf
sti
call
push
ins
call
and
adc
je
push
sahf
cmc
lods
push
rcl
fadd
and
mov
mov
jae
ror
jae
jo
test
sub
jb
pop
sbb
cdq
xchg
sub
std
add
push
(bad)
ins
(bad)
add
jbe
leave
inc
pop
sub
adc
or
mov
(bad)
repnz
jge
cld
sbb
retf
in
mov
cmp
popa
and
scas
js
js
mov
cld
fnclex
dec
mov
mov
test
inc
sub
cwde
fist
pop
je
and
dec
retf
jecxz
xchg
cmps
scas
cmp
push
push
enter
jg
push
(bad)
rol
or
fwait
sbb
jae
cwde
ret
xchg
add
mov
pop
mov
fwait
adc
mov
(bad)
mov
mov
cmp
xchg
push
mul
dec
test
add
inc
shl
retf
mov
jns
xor
sub
adc
test
sbb
fdivp
loop
fcmovu
xchg
fist
divps
push
mov
stos
daa
mov
pop
mov
xchg
mov
push
mov
pop
loope
test
dec
mov
mov
mov
sbb
push
sub
mov
add
mov
int3
scas
es
fdivr
(bad)
jp
mul
(bad)
and
in
sbb
and
arpl
mov
mov
add
pop
inc
add
std
fisub
outs
pop
xchg
dec
xor
mov
xor
mov
and
jns
adc
and
dec
jmp
or
sbb
push
lods
ja
xor
mov
jl
and
xor
movs
mov
pop
ja
lea
nop
test
aam
ins
xor
jo
jp
in
shr
push
call
mov
in
jo
into
xchg
sar
das
cmp
imul
pop
jmp
sbb
jmp
cmp
movs
data16
xchg
jo
adc
adc
xor
ror
jg
dec
add
sar
pop
push
arpl
push
test
or
xchg
mov
iret
ins
movs
movs
call
fnsave
mov
and
jmp
shl
xchg
dec
xor
pop
addr16
(bad)
stos
inc
mov
scas
jecxz
jp
mov
dec
daa
ss
add
sbb
mov
data16
and
rcl
pop
and
fnstcw
scas
sbb
sar
cs
mov
out
pop
div
and
daa
pop
dec
dec
xlat
push
cdq
std
lds
and
aaa
push
ins
pop
mov
lods
ss
sub
cmps
popa
stos
sbb
jecxz
in
lods
add
rcr
inc
pop
ins
mov
icebp
jbe
(bad)
aad
inc
aam
call
cmp
cmps
xor
mov
inc
add
jns
mov
stos
outs
cs
jecxz
inc
out
jo
es
dec
sub
int
ss
push
pop
mov
repnz
ret
adc
ror
dec
movs
daa
mov
mov
push
and
push
or
add
inc
popf
push
mov
sbb
adc
mov
mov
xchg
mov
dec
imul
or
out
gs
movs
ins
push
mov
scas
sbb
pushf
jb
jne
pop
xchg
dec
jb
cmp
gs
xchg
or
mov
lods
pop
call
iret
pop
and
enter
js
not
ror
or
bound
cmp
inc
inc
pop
fst
inc
loope
push
xchg
jmp
dec
mov
push
cmp
or
adc
leave
jnp
out
add
cmp
sahf
push
add
push
push
cdq
(bad)
inc
pushf
scas
add
or
jmp
push
mov
pop
retf
nop
xchg
or
retf
add
mov
hlt
and
cli
jge
jo
imul
pushf
mov
test
jmp
and
lahf
inc
lds
sbb
cmp
xchg
aas
cmp
mov
or
stos
sar
test
adc
sbb
inc
stc
sub
pop
pusha
es
xchg
arpl
out
loop
mov
mov
outs
mov
ins
add
push
cmps
xchg
icebp
lock
push
repnz
mov
out
sub
aas
test
cs
dec
jne
in
ins
mov
push
mov
adc
dec
xchg
das
enter
(bad)
mov
cmp
loopne
loope
ds
pop
cmp
aas
nop
sbb
mov
sub
xchg
rcl
shl
daa
aam
push
xchg
popf
rcl
mov
mov
movs
pop
stos
lods
daa
pop
js
pop
pop
mov
lock
adc
lds
push
test
test
movs
push
bnd
loopne
and
scas
daa
pop
sub
xor
nop
lds
pushf
call
das
jb
inc
jb
add
add
inc
rcr
cmc
cmp
into
dec
int3
jae
inc
sti
ret
push
dec
mov
mov
out
xor
or
push
and
adc
jae
sti
int3
jg
inc
cmp
add
into
mov
push
dec
jmp
mov
ror
cdq
pop
jno
lock
add
ss
push
ret
in
clc
mov
imul
and
int3
test
pop
adc
jo
xor
fcomp
add
dec
xor
stc
sti
call
stc
mov
jmp
int3
pop
push
aam
xchg
cmp
ins
test
or
in
xor
add
mov
pop
sahf
xor
xor
jmp
add
and
in
leave
int
(bad)
(bad)
mov
fs
mov
xor
in
in
rol
aas
(bad)
lahf
jg
jb
mov
sub
dec
sub
cs
aaa
pop
adc
fst
jp
mov
call
or
bound
popa
sbb
dec
pop
std
outs
inc
shr
cdq
xchg
ror
push
lea
mov
xlat
add
ret
retf
std
pusha
dec
cs
retf
add
or
nop
mov
cs
xor
leave
les
test
mov
push
or
imul
mov
add
jg
push
xor
mov
mov
test
xchg
pushf
mov
inc
out
jmp
scas
xlat
sbb
xor
adc
push
xchg
sub
inc
jne
popa
dec
lahf
dec
leave
jne
sbb
fsubr
add
and
cmp
mov
daa
aam
fwait
dec
and
stos
popa
mov
loope
and
mov
jmp
in
fs
add
pushf
hlt
repnz
push
lods
xchg
and
dec
imul
or
ficomp
jno
lods
sub
out
into
shl
sub
loopne
jno
inc
mov
mov
retf
repz
and
je
and
mov
stc
in
or
pop
ret
test
es
stos
mov
mov
mov
mov
pop
(bad)
ror
bound
pop
fcmovu
xchg
leave
push
dec
jmp
mov
popf
inc
add
jne
aas
push
lds
mov
sub
mov
(bad)
shl
xchg
fldenv
lds
inc
jns
mov
mov
cli
aas
push
xor
clc
mov
pushf
xchg
sbb
push
out
and
mov
repnz
xchg
adc
mov
and
ret
push
jbe
push
pop
xchg
cmc
fcmove
stos
lock
mov
dec
call
test
stc
jl
xor
mov
imul
push
mov
and
fbstp
(bad)
xchg
xchg
pop
or
xor
cmp
mov
enter
jae
xor
iret
adc
fistp
push
leave
bound
fisttp
mov
stc
xor
movs
pop
in
xchg
ret
mov
or
dec
pop
push
mov
mov
fmulp
jo
fidiv
adc
sti
cwde
ror
jmp
xor
ds
mov
cwde
test
add
mov
mov
push
dec
addr16
cmp
scas
shl
dec
loope
imul
(bad)
arpl
mov
lahf
imul
mov
push
out
inc
retf
(bad)
std
popf
push
loop
aaa
xor
or
test
movs
mov
clc
rol
push
loope
xchg
je
xchg
movs
test
mov
enter
cli
cmp
mov
inc
push
inc
hlt
fist
jne
test
pop
int3
mov
cmc
xor
mov
ret
stos
mov
lods
lea
or
or
stc
mov
jl
std
iret
sub
pop
xor
dec
fdivr
fstp
xor
cmps
std
sbb
jae
lods
inc
fnstenv
fwait
das
scas
jmp
mov
mov
sbb
inc
push
inc
add
push
cmp
les
inc
and
xchg
inc
mov
adc
add
in
dec
in
and
cmc
jbe
(bad)
stos
add
popa
mov
cmp
lods
push
mov
jae
fwait
mov
mov
push
daa
mov
jl
and
pop
sub
push
(bad)
lods
pop
add
mov
lods
ss
ins
sub
(bad)
outs
fidivr
int3
(bad)
jns
push
pop
pop
cs
in
sbb
(bad)
xchg
das
(bad)
push
xlat
(bad)
jmp
cmp
add
out
add
xchg
stos
in
ins
xchg
test
xchg
imul
add
hlt
jmp
sub
outs
lahf
js
xchg
pop
pop
sub
dec
jns
push
and
push
sbb
cmp
fs
mov
jmp
push
xchg
mov
push
in
popf
inc
je
xchg
ror
out
sub
mov
ins
fs
xchg
dec
mov
test
outs
fadd
adc
inc
and
sbb
adc
cli
adc
add
xor
out
div
jmp
mov
jmp
and
lods
jns
push
imul
inc
push
jnp
push
in
in
jmp
(bad)
mov
fxtract
fldenv
jl
fnstenv
fcomp
mov
frndint
enter
jbe
cdq
or
out
cli
inc
cmp
inc
test
mov
fwait
mov
nop
pusha
shr
push
adc
add
pop
inc
dec
and
mov
test
pop
inc
cld
pop
ds
mov
(bad)
lods
sub
and
cmp
into
fld
test
xchg
mov
imul
dec
or
sub
fwait
sub
xchg
leave
aas
xor
sbb
add
and
out
xchg
mov
push
pop
fisub
sbb
fwait
imul
xchg
cwde
je
adc
(bad)
fwait
inc
(bad)
std
test
test
scas
dec
sub
fdivr
pop
and
(bad)
enter
neg
iret
mov
push
mov
push
mov
and
ds
adc
and
dec
fist
nop
jge
xchg
test
jbe
xchg
cmp
and
add
xchg
pop
mov
test
es
addr16
les
adc
xchg
shr
xor
sbb
and
fsub
in
jmp
jmp
cmp
retf
enter
out
pusha
pop
sbb
mov
dec
test
mov
xchg
arpl
les
mov
xchg
pop
loope
lds
adc
movs
out
jnp
sbb
lea
stos
test
mov
hlt
inc
mov
enter
pushf
scas
or
enter
xlat
retf
xor
inc
cmps
sbb
or
jns
es
inc
in
inc
jp
xchg
pop
and
mov
xor
sbb
out
je
sub
call
add
mov
addr16
pop
and
das
mov
(bad)
sbb
mov
das
cld
and
dec
shl
lds
dec
fild
ds
call
push
mov
pusha
push
hlt
cmp
stc
out
or
cdq
sbb
pop
lods
cmp
ror
dec
xor
test
jg
pop
icebp
sub
mov
xor
retf
xchg
xchg
mov
sti
jns
push
mov
add
cmp
mov
test
mov
jne
mov
push
jle
fucomip
ret
xchg
cmps
lds
pop
int3
retf
mov
icebp
pop
movs
sub
fcomp
sub
stos
xor
sbb
xor
jmp
mov
fstp
xlat
or
xor
jo
hlt
xchg
xchg
loop
mov
(bad)
in
pop
push
inc
ret
sub
sub
cld
adc
addr16
and
cmps
adc
xchg
fst
mov
ret
xchg
pop
mov
pushf
shld
mov
fdiv
stos
jns
nop
inc
adc
sub
push
add
add
cmp
pop
push
jle
fstp
loope
in
add
mov
push
jnp
xchg
dec
sbb
jmp
pop
addr16
jmp
daa
jmp
(bad)
out
jg
jno
retf
ret
xor
mov
cmp
rcr
mov
xchg
les
out
loopne
push
mov
sub
aad
dec
test
jae
jo
ss
scas
(bad)
repnz
jmp
je
xor
int3
sub
into
scas
sahf
inc
inc
inc
and
jmp
fdivr
mov
pop
leave
push
dec
mov
hlt
inc
push
mov
pusha
jne
(bad)
stc
dec
imul
cmp
push
fiadd
pop
fbstp
adc
popa
push
mov
xchg
data16
jnp
iret
daa
xor
or
or
or
adc
push
mov
repnz
or
sti
popa
aaa
scas
xor
dec
gs
fidiv
dec
adc
xchg
cdq
sbb
daa
ret
mov
xchg
cdq
rcr
ins
push
or
sbb
dec
rcl
mov
push
add
call
(bad)
(bad)
jo
stos
cmp
test
inc
or
daa
xor
adc
test
push
outs
inc
lock
cld
mov
loope
mov
mov
(bad)
dec
add
jle
sbb
gs
cwde
inc
pushf
mov
mov
call
push
lock
cmp
sbb
pop
nop
shrd
ffree
pop
scas
cmp
je
cs
pop
mov
mov
add
jle
aas
les
mov
cmp
fsub
pop
outs
mov
bound
pop
jge
pushf
cmps
sbb
les
adc
pop
data16
xchg
push
in
ss
xor
mov
cmp
dec
sti
sbb
movs
jmp
push
loop
test
pop
seta
xchg
outs
iret
dec
fwait
xor
push
int3
lds
and
inc
ins
in
fild
xor
push
sub
cmps
mov
xchg
and
mov
jno
rcr
adc
or
jb
movs
mul
sahf
lods
inc
cld
pusha
dec
movs
pop
cmc
lds
jmp
adc
outs
pop
mov
push
pop
mov
xor
inc
popa
lahf
cld
add
mov
push
clc
dec
out
(bad)
push
sbb
mov
mov
out
adc
aaa
jae
or
xlat
push
mov
push
call
mov
jbe
out
or
jns
hlt
sbb
imul
outs
adc
or
or
add
sbb
repz
test
arpl
hlt
sub
or
jo
popf
jl
inc
arpl
mov
xor
and
das
ret
xchg
or
cmps
adc
cmp
push
xor
aas
mov
(bad)
xchg
fcmovnbe
pop
in
repz
sub
pop
jno
rcl
(bad)
jno
pop
xchg
into
(bad)
mov
call
movs
push
inc
je
push
fs
fcomp
dec
int
mov
ins
es
shl
das
xchg
jnp
neg
mov
mov
loope
xchg
ss
mov
cmps
imul
jl
(bad)
js
pop
xor
or
jecxz
jmp
(bad)
dec
adc
inc
and
adc
aas
push
cmp
ins
mov
pop
rcr
hlt
inc
fld
lahf
jno
ror
dec
(bad)
sbb
fwait
pop
stc
test
test
scas
sbb
pop
mov
jmp
shl
call
add
fdivr
mov
xor
fbld
mov
mov
retf
icebp
jecxz
ja
mov
adc
xchg
jp
mov
push
jecxz
add
shl
mov
xchg
pop
mov
dec
push
cmp
daa
mov
sub
sub
mov
and
fild
into
cmp
arpl
adc
sub
pop
not
lea
mov
hlt
shl
data16
sbb
jle
xor
sbb
movs
das
push
les
sbb
jl
lahf
sbb
in
jno
sbb
rcr
and
fistp
test
cld
mov
push
mov
cmova
in
mov
pop
cdq
pop
(bad)
ins
lds
xor
jmp
xchg
shl
lods
mov
push
mov
cwde
mov
out
out
jmp
(bad)
xor
fwait
hlt
pushf
adc
fs
dec
retf
adc
ret
fistp
push
mov
ins
std
cli
lock
popf
push
js
push
ins
lods
repz
adc
adc
add
daa
sti
jge
sbb
pop
stc
jmp
jne
pop
mov
sbb
out
fist
and
into
mov
and
fidivr
mov
cmp
rcr
jle
inc
pop
mov
cmp
mov
dec
imul
xchg
xchg
int3
out
jo
retf
xor
sbb
dec
or
or
jmp
push
and
cmp
fistp
push
or
mov
jecxz
in
pop
icebp
in
sti
fidivr
stc
ins
pop
sbb
sbb
adc
popf
hlt
adc
add
shr
fdiv
or
pop
std
inc
mov
lock
cli
sub
xchg
and
or
not
in
xor
lds
add
aam
mov
into
shl
mov
mov
in
(bad)
movs
lds
mov
pop
scas
cmps
call
sub
jecxz
lods
sbb
lahf
ret
in
pop
dec
inc
loop
cdq
cmp
xlat
mov
and
xchg
sti
pushf
(bad)
xchg
mov
shl
pop
xchg
fist
mov
mov
(bad)
stos
pop
dec
adc
jmp
mov
xor
push
sti
in
xchg
mov
stos
mov
xor
push
xchg
jbe
mov
ds
or
sahf
inc
out
lea
mov
push
push
or
fwait
outs
test
test
jmp
jbe
mov
mov
push
(bad)
dec
popf
in
mov
iret
and
outs
push
ja
sub
push
mov
movs
and
loopne
clc
and
leave
pop
inc
lds
mov
push
aas
xchg
dec
xchg
test
jmp
cmp
xor
and
pop
xchg
je
cld
pop
adc
cli
dec
fldcw
(bad)
cmp
rcl
das
mov
imul
cmp
scas
xchg
ficom
dec
sbb
jecxz
rol
adc
xchg
in
pop
ins
test
cmp
xor
out
pop
mov
into
fcomp
lods
jmp
add
retf
jne
dec
pop
ret
pop
dec
call
push
addr16
aaa
push
inc
pop
mov
jg
test
jne
in
and
retf
dec
and
xchg
inc
and
sar
repz
out
cmps
xchg
sbb
cmp
mov
mov
xchg
enter
fist
xchg
test
inc
inc
pushf
inc
in
pop
or
mov
js
jmp
xchg
mov
mov
xor
sbb
adc
push
aaa
and
jns
adc
cmp
fcmovbe
loopne
jo
xchg
iret
lds
fisttp
or
cmp
pop
jp
mov
sub
sbb
push
test
mov
sbb
xchg
xor
cmc
int3
jl
adc
fild
xchg
out
fmul
pop
or
fmul
mov
xor
aas
dec
sbb
cmp
or
es
mov
popf
fsub
xor
xchg
inc
mov
sti
vmovaps
pop
imul
and
xlat
push
scas
dec
push
xchg
add
push
movaps
or
aad
pop
das
sahf
call
fdivr
gs
(bad)
pushf
jmp
mov
xor
xor
and
(bad)
xor
sbb
fbld
(bad)
and
outs
push
and
cmps
icebp
cmp
adc
les
fisttp
adc
fld
and
mov
jae
fidiv
xlat
data16
rol
jmp
sbb
(bad)
sbb
fxch
shl
out
jno
pop
pextrw
fwait
mov
jnp
(bad)
inc
mov
mov
add
jnp
pop
imul
fmul
mov
mov
data16
pop
cmp
dec
sub
test
jne
cmps
aaa
cmp
in
icebp
push
sub
and
mov
int
push
jmp
cmps
je
addr16
mov
movs
cmp
ins
or
push
cdq
mov
push
leave
xor
pop
std
pop
push
and
xor
mov
repz
push
shl
ffree
xor
rcr
and
call
fdivp
adc
mov
pop
std
aaa
jns
nop
ret
pop
clc
mov
scas
mov
in
cli
mov
ins
xchg
aas
retf
je
push
rcl
pop
cwde
cmp
cmp
xchg
adc
rcr
xchg
ja
xchg
(bad)
aam
ins
mov
out
pop
jns
cmp
push
test
mov
stos
sub
fidiv
adc
fstp
mov
jmp
mov
leave
mov
adc
add
fnstsw
(bad)
arpl
inc
jmp
loope
out
and
movs
and
push
mov
push
or
test
push
pop
xchg
fisttp
add
jo
aad
jnp
sub
sbb
mov
enter
cmp
pop
lds
jecxz
mov
xchg
popf
cs
mov
(bad)
ins
mul
out
fild
sbb
outs
imul
pop
out
in
push
hlt
jbe
(bad)
(bad)
jo
out
mov
adc
and
imul
and
cmp
jl
mov
sub
xchg
inc
cmp
dec
clc
ds
mov
inc
sbb
push
bound
cli
imul
gs
and
mul
push
push
dec
cmps
sub
mov
sbb
push
in
jle
or
(bad)
stc
sbb
rcr
xor
aas
mov
add
popf
int
fdecstp
dec
mov
mov
dec
cmp
stos
hlt
pop
scas
inc
push
pop
fwait
xchg
jl
das
(bad)
cmps
jmp
or
add
add
jno
jns
nop
or
pop
adc
jo
xor
mov
mov
sub
add
mov
push
(bad)
xor
out
call
aam
push
hlt
mov
ret
sbb
pop
fwait
rol
jb
mov
imul
push
xor
mov
dec
sub
cmp
xchg
xchg
adc
shl
loop
cwde
icebp
popa
mov
mov
cmp
enter
push
adc
dec
or
mov
std
(bad)
es
sbb
mov
mov
pop
and
es
dec
call
mov
pop
mov
pop
dec
push
nop
mov
sbb
mov
cwde
sub
push
xchg
ror
stos
mov
add
jmp
es
xor
int
or
cmc
inc
call
outs
adc
fwait
cmp
jl
ret
fwait
push
jp
lds
and
or
adc
xchg
sar
cmp
leave
jae
(bad)
js
push
or
setg
adc
stos
xor
test
cmp
outs
inc
in
call
sar
movs
mov
jmp
jns
push
lods
sbb
jmp
xchg
cmps
popa
or
mov
mov
sub
mov
lea
ficomp
sbb
fs
and
je
lahf
push
fsub
shl
jl
jge
ret
dec
pop
jle
jne
xchg
std
test
add
inc
fcom
mov
out
add
aas
jne
clc
pop
xchg
int3
mov
cmps
fld
mov
int
cli
arpl
sbb
stos
mul
shl
xchg
xchg
cmps
stc
or
popf
and
mov
stc
leave
sub
xchg
fbld
and
sub
pop
dec
xchg
sub
dec
push
nop
int3
test
in
(bad)
repz
push
in
pop
iret
push
and
in
xchg
cmp
cmp
adc
loop
push
int3
xor
mov
dec
outs
and
mov
xor
pop
into
sub
xor
sbb
mov
mov
sub
xor
jno
popf
cmp
lds
mov
or
adc
mov
arpl
mov
mov
movs
aas
push
cld
xor
xchg
adc
jge
push
test
jmp
pusha
sub
ins
cmps
(bad)
(bad)
jns
jno
xchg
jae
xor
cmp
mov
sub
daa
fdiv
out
rol
imul
mov
das
fs
icebp
mov
ficom
mov
aaa
mov
and
enter
call
pop
imul
test
cmp
pop
cmc
mov
gs
bound
movs
mov
outs
test
cld
out
mov
(bad)
cs
sub
jecxz
push
xchg
loop
test
js
jle
sbb
add
scas
mov
das
mov
enter
test
pop
pop
loope
scas
add
or
xchg
gs
mov
mov
xor
mov
sbb
fstp
sub
mov
or
rcl
inc
(bad)
in
push
inc
int
ret
push
in
mov
lock
add
cdq
hlt
inc
mov
mov
daa
aas
push
loope
jae
dec
xchg
cmp
mov
cmp
aas
ret
fwait
inc
cmps
aas
xor
mov
cmp
inc
dec
jmp
and
dec
popf
and
cmp
push
mov
adc
mov
enter
ret
(bad)
push
imul
pusha
icebp
jle
or
jb
cdq
pop
js
pop
adc
adc
pop
mov
push
imul
popa
jg
mov
inc
pushf
(bad)
xor
cwde
jg
fs
xchg
push
jge
push
mov
fiadd
lock
cmp
mov
ins
test
sbb
aaa
sbb
outs
inc
ret
mov
(bad)
jno
pop
fiadd
pop
xchg
sub
imul
pop
out
cdq
push
outs
adc
dec
shl
cli
cmc
fcomp
retf
cli
dec
mov
mov
icebp
test
mov
pop
push
inc
mov
int3
in
mov
(bad)
sahf
jb
mov
(bad)
int
daa
inc
ins
loop
pop
neg
cli
push
add
js
fbstp
sub
or
lods
int3
jns
adc
sbb
ret
cmp
cmp
ficomp
je
ja
div
ds
pop
scas
retf
ficomp
pop
ds
es
(bad)
and
shl
clc
sbb
sub
xor
enter
add
retf
mov
mov
icebp
adc
popf
jne
in
test
addr16
leave
daa
idiv
sbb
add
in
call
xchg
popf
mov
cs
xor
and
xchg
xor
jp
enter
jmp
and
hlt
gs
imul
inc
hlt
retf
mov
cmp
xchg
pop
dec
pop
ret
mov
mov
mov
lea
add
dec
and
inc
push
aam
mov
pop
pop
dec
js
pop
cmp
pusha
stos
mov
in
outs
jns
jnp
mov
or
out
ds
pop
int3
mov
ins
mov
sar
xor
mov
test
out
cmps
rcr
sbb
and
sbb
add
sub
lds
rol
enterw
jae
imul
lods
gs
sub
loope
cmc
in
scas
into
movs
(bad)
(bad)
ret
add
aas
dec
mov
xor
in
movsx
cmp
jns
rol
and
mov
cs
sub
and
cmp
retf
push
aad
sub
inc
iret
jns
and
(bad)
and
and
and
sub
and
sbb
call
push
pop
cmp
dec
add
pop
imul
lock
pop
jns
lock
inc
xchg
jae
mov
xchg
mov
mov
pusha
or
nop
and
ds
xchg
ret
xor
dec
repnz
ficomp
not
mov
cmp
xchg
fcmovnu
push
pop
shr
add
jb
cmp
hlt
stos
ror
xchg
inc
sub
call
add
cmps
daa
pop
sbb
dec
cmc
ret
cmp
jmp
mov
popf
movs
xor
push
out
xor
nop
iret
jg
pop
sahf
pop
inc
xor
int3
nop
stc
popa
sbb
push
jle
test
sub
(bad)
and
sbb
pop
xchg
iret
out
mov
fistp
neg
call
or
xchg
mov
test
mov
retf
psrlw
bound
ins
inc
ins
sbb
push
jg
add
add
sbb
pop
pushf
jmp
lahf
(bad)
out
out
test
addr16
add
push
fdivr
mov
inc
xchg
(bad)
lahf
stos
jnp
mov
cmp
sub
push
pop
outs
mov
fnstcw
daa
mov
int
dec
sub
xchg
pop
adc
repnz
xor
pop
pop
cmps
icebp
rol
(bad)
mov
imul
pop
retf
pop
pusha
adc
lock
mov
push
call
mov
test
stos
mov
cmp
cs
push
mov
inc
sub
jl
pop
loope
leave
in
mov
mov
jmp
shl
test
mov
jne
xchg
mov
mov
js
aaa
jle
(bad)
sbb
out
mov
fistp
pop
nop
adc
sahf
sahf
mov
mov
imul
movs
mov
sub
jp
pop
jp
fistp
lea
inc
cwde
mov
stos
or
add
shl
adc
sar
test
sar
icebp
idiv
mov
gs
nop
cli
mov
stos
mov
not
sub
adc
mov
mov
daa
fidivr
push
and
leave
fmul
ins
scas
inc
push
push
rol
pop
push
js
in
mov
add
sar
cs
je
(bad)
jnp
jle
jae
fisttp
pop
pop
add
test
ret
mov
test
pop
push
sar
mov
xchg
adc
cmp
loop
std
sub
fidivr
mov
dec
cmp
lea
call
inc
dec
push
dec
and
and
and
mov
mov
lds
pop
mov
lods
and
mov
xor
mov
jle
inc
retf
sub
jno
and
cld
retf
or
(bad)
push
sub
fwait
cmp
dec
(bad)
ins
out
jp
mov
repz
ja
call
or
xchg
(bad)
aad
icebp
and
jl
inc
je
dec
mov
lea
jle
mov
cli
les
inc
loop
mov
inc
add
inc
arpl
in
cdq
call
js
jae
lods
hlt
push
mov
xor
add
pop
(bad)
(bad)
push
xor
mov
push
cmc
stos
cmc
pop
mov
sti
fild
pop
repz
out
pop
xlat
loop
and
lods
in
and
lods
mov
mov
push
mov
in
in
push
mov
jno
repz
mov
nop
ins
xor
xchg
mov
cmp
out
push
jne
es
cmp
sub
xor
add
jb
sub
adc
cmp
cmp
adc
xchg
dec
(bad)
js
call
in
mov
fdivr
mov
lds
test
lods
jp
daa
sbb
jnp
pop
or
jmp
adc
jle
fistp
add
jg
mov
mov
cmp
pop
sbb
mov
mov
jp
mov
pop
int3
ins
mov
push
mov
popf
jl
inc
icebp
adc
sbb
(bad)
xlat
pop
jae
(bad)
scas
test
mov
sbb
ret
retf
(bad)
pop
nop
shl
xlat
sub
repnz
lds
mov
lds
mov
or
pop
and
jp
aaa
int
cmc
sub
and
ja
ds
popa
and
test
pop
xchg
test
js
fmul
ins
xchg
neg
jns
add
daa
sbb
inc
jmp
push
test
lods
mov
inc
aas
clc
es
dec
jo
shr
cmc
out
mov
jmp
fbstp
retf
xchg
xchg
jge
ins
call
sub
push
add
fbld
mov
call
push
iret
xchg
xlat
add
mov
xchg
mov
xor
xor
call
fcompp
pop
mov
imul
and
jge
cmc
fstp
cmp
xchg
dec
sub
pop
scas
aas
fs
mov
dec
sbb
add
or
inc
mov
(bad)
jbe
mov
pop
or
fwait
push
aam
add
and
inc
inc
xchg
outs
mov
xchg
mov
cmc
fimul
in
outs
clc
cmp
outs
inc
pop
rcl
(bad)
aaa
sub
repnz
in
fwait
fwait
bound
iret
or
mov
push
push
or
sbb
cmps
dec
add
or
call
pop
cmps
xchg
xchg
and
mov
jmp
jno
enter
fadd
(bad)
out
xor
add
push
pop
rcr
cmp
xor
fdiv
sub
dec
call
push
hlt
shl
ficom
xor
icebp
out
pop
cmp
shl
adc
in
push
(bad)
sub
ret
rsqrtps
xchg
jmp
daa
mov
scas
pop
adc
jo
push
lahf
or
aaa
pop
les
ins
fsubr
xchg
(bad)
mov
arpl
xor
cmp
or
aam
(bad)
mov
leave
jns
int3
repnz
test
retf
xchg
jmp
jmp
push
dec
pop
loop
and
pusha
xor
add
test
xor
fnsave
xchg
push
pop
sar
push
cs
or
mov
neg
(bad)
sub
movs
mov
sub
xor
or
movs
(bad)
sbb
loop
pop
lods
leave
sbb
mov
fcom
shl
push
cmps
in
jno
mov
jle
mov
ja
jae
sub
xchg
nop
pop
comiss
and
dec
jmp
(bad)
in
sbb
mov
jmp
scas
idiv
sbb
test
dec
adc
cmps
and
jmp
cmp
xchg
call
ror
add
xchg
rcr
xor
ds
pusha
push
lods
mov
ret
mov
aad
pop
outs
sar
mov
cli
cmp
shr
mov
imul
in
out
outs
add
call
xor
mov
stos
xor
scas
bound
lahf
loope
mov
sub
es
ins
pop
(bad)
jnp
into
ror
jb
cmp
outs
cmc
mov
xor
push
pop
xchg
cwde
lods
fwait
rcr
sub
mov
cdq
xor
test
mov
test
(bad)
out
int
or
xor
dec
inc
xchg
inc
jae
outs
dec
push
jb
int
mov
mov
pushf
jno
mov
mov
daa
out
mov
adc
mov
sbb
pop
pop
fs
outs
cmc
mov
inc
mov
xchg
fadd
ficom
and
xor
call
dec
addr16
ficom
data16
das
ret
push
cmp
pop
cmp
sbb
jecxz
pushf
mov
mov
pop
and
js
push
mov
adc
mov
xor
pop
(bad)
jb
adc
jns
sub
cld
xor
adc
aam
iret
adc
xor
sbb
jne
cmp
cmp
pop
arpl
enter
xchg
pop
std
xor
lock
sbb
aad
int
outs
inc
sti
ja
dec
dec
test
(bad)
jns
push
xchg
mov
into
(bad)
cli
adc
les
mov
add
push
sub
xor
cmp
cmp
fiadd
jmp
jnp
ins
and
and
jmp
mov
pop
scas
sub
es
and
aad
aas
cmp
dec
enter
add
push
mov
dec
popa
js
(bad)
lock
(bad)
test
mov
imul
add
jno
mov
arpl
enter
fs
(bad)
jmp
cmp
js
stos
pop
loopne
popf
stos
test
mov
in
pop
xchg
pop
out
inc
fadd
sar
mov
jl
rcl
push
outs
cs
or
or
sub
dec
nop
cmps
cld
stos
or
daa
inc
fsub
inc
loope
fsubr
cmp
bound
das
(bad)
leave
mov
shr
repnz
inc
fidiv
push
mov
mov
pop
fdivp
jg
cld
and
mov
cs
or
xchg
jmp
iret
sbb
repz
pop
cwde
xor
add
(bad)
sahf
test
xor
in
loop
cmp
jbe
inc
rcr
xlat
or
pop
pop
fisttp
push
jo
mov
push
data16
in
inc
add
or
inc
in
icebp
enter
sti
ds
fist
loope
in
movs
pop
dec
sbb
shl
push
inc
xchg
add
inc
cmp
jecxz
sbb
dec
cmp
sbb
sbb
jge
or
cs
pop
mov
and
fstp
out
mov
xor
cmp
scas
iret
jp
cmp
pop
(bad)
imul
in
push
cmp
sub
imul
sub
retf
adc
(bad)
fsubr
adc
mov
cmc
sub
mov
jp
int
retf
cmp
mov
into
out
sub
adc
mov
sar
sub
and
sti
mov
imul
fs
call
addr16
nop
pop
push
cmp
or
inc
std
ss
mov
repnz
(bad)
aas
aas
(bad)
mov
mov
into
lods
enter
clc
pop
sub
bnd
retf
inc
xchg
and
pop
outs
mov
mov
mov
sbb
enter
cli
lock
mov
dec
jg
push
movs
loop
push
aam
jle
icebp
lds
fdivr
push
gs
jecxz
mov
sahf
enter
mov
xchg
push
test
in
add
jl
mov
ret
mov
ret
jnp
dec
test
retfw
adc
pop
xor
rcl
adc
dec
jl
sbb
add
cdq
repnz
int3
test
repz
lods
or
push
dec
pusha
push
push
test
pop
jno
mov
add
jo
dec
sbb
mov
add
mov
in
pop
outs
xchg
adc
call
dec
aam
pop
adc
in
push
retf
cmps
and
xor
xchg
push
fcmovnbe
arpl
push
jne
cmp
push
sbb
xor
(bad)
mov
in
stc
cdq
mov
scas
jmp
push
loop
cmp
imul
loope
xlat
stc
movs
ins
pop
jle
inc
test
push
adc
stos
jno
ffreep
cmp
arpl
imul
fcom
inc
popf
lods
std
inc
fwait
jo
lahf
and
repnz
in
sbb
push
mov
cmp
sti
jp
aam
in
and
inc
inc
repz
fstp
pop
outs
xor
popa
fist
scas
jns
cmp
sbb
arpl
mov
mov
xor
(bad)
push
inc
mov
fst
int3
xlat
bound
int
ins
jle
sub
add
pushf
xchg
inc
popf
mov
add
and
xchg
std
gs
mov
or
pop
mov
repz
test
cmc
push
inc
jno
ja
add
xchg
xor
movs
cmp
sbb
jmp
xchg
push
mov
repz
pop
xor
pop
add
dec
inc
and
outs
or
aaa
mov
cs
xchg
in
ins
es
rol
pop
xlat
stos
rcl
cli
fdivr
out
inc
leave
pop
pushf
imul
and
jno
std
fadd
add
fisub
daa
cwde
in
cmc
fist
popa
add
outs
pusha
mov
cmp
sub
dec
lds
lea
fwait
fwait
dec
ror
loope
ss
adc
inc
or
mov
inc
jo
outs
push
(bad)
imul
jge
int3
xlat
push
out
push
pop
adc
popf
cmps
sar
popf
and
add
movs
cmps
stos
loope
push
idiv
mov
faddp
es
push
movs
dec
adc
or
pop
test
out
pop
fs
scas
jb
xor
xchg
mov
xor
cmp
cmp
mov
pop
xchg
popa
clc
and
mov
daa
mov
fisubr
sub
push
aas
gs
mov
retf
stc
lods
add
sar
dec
xchg
add
xor
and
and
std
ins
inc
(bad)
mov
out
cld
aas
outs
(bad)
outs
xchg
mov
mov
sbb
ins
aas
mov
repz
(bad)
xor
cwde
aad
add
shr
add
cli
mov
int3
cmp
jecxz
or
or
add
mov
test
xlat
pop
sub
pop
test
push
sub
leave
mov
jmp
aaa
push
xor
dec
icebp
sbb
xchg
ja
xchg
pop
xor
push
in
dec
add
mov
push
bound
stos
loopne
test
sub
popf
(bad)
ret
or
jae
mov
xor
shr
mov
fcomp
(bad)
mov
mov
xor
fisubr
retf
xchg
jecxz
xor
(bad)
dec
ret
mov
gs
add
daa
jg
les
psrlq
adc
adc
jb
not
mov
dec
jns
xor
pop
cmps
pop
sbb
pop
inc
pop
fs
out
popa
inc
lods
rdseed
xchg
push
cli
sbb
pushf
add
lock
leave
push
cli
sahf
jl
in
imul
xor
imul
cs
pop
xchg
cdq
push
int
or
lahf
push
or
mov
out
pusha
mov
shr
fwait
sbb
mov
les
in
sub
movs
add
(bad)
jne
jp
ss
and
xor
sub
aam
icebp
and
pop
into
hlt
(bad)
out
into
scas
jae
inc
dec
dec
sub
fadd
lock
fwait
cmps
std
lahf
mov
or
stc
and
lock
mov
cmp
xor
fucom
inc
shr
add
fwait
repz
add
sub
dec
push
or
jno
clc
test
push
nop
addr16
out
pop
adc
fwait
pop
mov
outs
dec
gs
in
jno
cmc
adc
popa
xchg
cmp
fisubr
outs
repnz
jp
dec
sbb
dec
push
jge
repz
aaa
inc
fbld
pop
mov
xchg
in
adc
pop
sahf
jg
mov
cmp
add
iret
inc
daa
or
shl
les
fsub
scas
ror
xchg
jo
and
adc
inc
sbb
mov
(bad)
pop
repnz
mov
jae
push
ja
aam
iret
mov
push
mov
mov
into
movs
dec
into
hlt
repnz
aaa
dec
test
xlat
inc
mov
fisubr
(bad)
mov
sbb
and
loop
idiv
and
sbb
ins
test
ins
xchg
jnp
push
add
jb
movs
sub
xor
fisttp
dec
nop
les
cld
inc
cmp
jp
call
repnz
call
pushf
mov
repz
popa
xchg
inc
out
lods
out
mov
mov
mov
rol
cmp
dec
aam
jae
loopne
pop
adc
test
and
jne
xor
cld
mov
fcomp
in
(bad)
fist
fdiv
adc
xlat
aam
pop
or
mov
mov
and
shr
xor
cmp
imul
test
dec
stc
out
or
mov
sub
mov
test
xchg
sbb
fisubr
jecxz
mov
mov
mov
outs
mov
dec
iret
popf
jnp
mov
cmp
pop
test
mov
out
adc
(bad)
or
add
aaa
xchg
jae
das
pushf
mov
dec
inc
stos
jno
jb
cmps
stos
cmp
mov
pop
(bad)
adc
aad
and
jge
fidivr
dec
sbb
or
jae
adc
mov
cmps
(bad)
arpl
adc
cld
jmp
inc
sbb
hlt
in
imul
aad
popf
out
mov
sub
sti
add
ja
add
jae
jae
or
stos
daa
pop
xchg
mov
arpl
nop
sub
sub
cld
mov
shl
jg
jno
movs
cmp
push
ja
(bad)
aaa
aad
mov
(bad)
mov
xchg
stos
cmp
and
pop
pop
dec
out
cmp
mov
fisttp
gs
xchg
popa
add
adc
add
mov
pop
std
js
imul
push
adc
xor
fidivr
sbb
ret
ja
xchg
jge
leave
icebp
push
mov
sbb
adc
xor
mov
mov
stos
aaa
sbb
sahf
aaa
in
pusha
bound
sub
pop
xor
or
xchg
mov
mov
sub
cmc
xlat
mov
xor
icebp
adc
ret
jecxz
mov
pop
sbb
arpl
shr
mov
dec
or
add
inc
adc
ins
scas
int
(bad)
hlt
jnp
ins
shr
pop
sbb
mov
scas
fld1
lods
xlat
cli
rcr
out
shl
xchg
add
cmp
push
jo
je
test
xor
addr16
xchg
jmp
cli
sti
rol
movs
sar
inc
pop
les
mov
icebp
add
arpl
jecxz
xlat
aaa
repz
inc
mov
mov
cmc
loope
cmp
stc
xchg
out
sbb
(bad)
mov
shr
xchg
push
dec
call
test
xchg
repnz
shl
or
mov
pop
mov
mov
sahf
xchg
adc
test
test
fld
cmps
jp
dec
dec
and
adc
add
test
movs
push
fwait
xchg
dec
add
repz
shl
mov
sahf
(bad)
aam
jmp
cmps
je
add
xlat
shl
js
pop
push
sub
shr
cmp
in
test
leave
add
idiv
retf
or
and
push
popf
leave
adc
mov
mov
je
outs
icebp
cmp
pop
xor
pop
cli
jne
mov
bound
inc
push
loop
jnp
mov
stos
jl
xor
in
sbb
xchg
loopne
out
pop
cli
xchg
xchg
outs
mov
push
xchg
jl
sub
pop
jecxz
retf
pop
shl
mov
add
dec
cdq
fisub
mov
xchg
mov
movs
jl
cmps
jbe
mov
retf
mov
ror
xchg
dec
fsubr
inc
rcl
sub
jge
ins
ds
stos
cli
jns
ret
retf
movs
mov
retf
xchg
lock
cmp
shl
repz
jne
dec
bound
adc
xor
xlat
pop
xor
push
retf
outs
(bad)
pop
js
jno
sub
call
retf
movs
or
outs
mov
adc
leave
pop
dec
outs
arpl
dec
or
fstp
sahf
inc
push
sbb
xchg
cmp
pop
(bad)
or
mov
xchg
rcl
in
jne
fild
push
repnz
dec
addr16
aaa
xchg
cdq
push
movs
sub
mov
jg
push
es
adc
arpl
out
retf
push
loop
push
mov
clc
jge
jne
fild
aam
mov
jne
aad
sahf
mov
mov
inc
outs
pop
lods
clc
retf
aam
hlt
aad
shl
sbb
repnz
jl
inc
add
push
mov
jnp
xor
imul
push
sbb
add
inc
push
cmp
call
scas
cmps
cmp
leave
mov
fsub
in
call
mov
and
and
ret
or
pop
rcl
es
xchg
or
in
dec
mov
fldcw
fisub
jbe
ins
test
cs
or
adc
cmps
xor
push
mov
es
adc
or
mov
int
push
sti
mov
shl
shl
jecxz
je
loop
(bad)
into
mov
sbb
xchg
jecxz
cmp
dec
rol
test
jnp
outs
sub
lea
in
pop
jo
into
stos
dec
pop
mov
iret
xor
xor
ret
mov
mov
repz
jae
shl
inc
pop
inc
sbb
fsubr
add
xchg
retf
xchg
lahf
add
dec
xchg
sub
mov
mov
mov
inc
inc
jb
and
ins
jp
sar
mov
xor
nop
add
adc
xchg
xor
sbb
lock
dec
cli
and
mov
dec
sbb
jae
ss
xchg
cmp
lods
scas
lds
inc
js
jbe
ins
aaa
js
dec
jl
loop
mov
or
(bad)
es
push
xor
push
ret
call
call
out
icebp
push
sbb
xchg
js
das
dec
push
adc
call
sahf
adc
test
add
jp
pop
mov
test
ret
test
aad
inc
add
imul
gs
dec
adc
adc
inc
push
fild
xchg
mov
fadd
jb
cmp
sub
shl
dec
call
retf
shl
mov
and
hlt
shl
scas
or
mov
xchg
pop
xchg
test
dec
outs
aad
out
bound
test
cmps
cmp
pop
sub
lds
rol
push
dec
xor
ffree
ss
sub
out
push
jns
ins
cmp
or
sub
jb
out
xor
adc
into
in
imul
sbb
loopne
sbb
pusha
mov
mov
mov
sub
xor
pop
mov
pop
pop
inc
mov
pop
jp
stc
add
sbb
and
sbb
test
adc
scas
sbb
stos
dec
add
inc
xlat
push
inc
inc
xchg
xor
adc
cwde
fwait
and
or
rsqrtps
mov
add
push
dec
jno
call
adc
pop
mov
fadd
les
lods
xlat
out
sahf
and
mov
ins
and
dec
inc
pop
imul
xchg
xchg
lahf
mov
out
dec
xor
mov
add
scas
push
aad
ret
mov
out
ins
jge
pop
outs
mov
adc
cmp
cmps
mov
div
jns
adc
call
fst
out
sti
add
pop
or
mov
(bad)
int
adc
movs
repnz
xor
not
mov
cmps
sbb
xchg
xor
shr
dec
mov
xor
cmps
int3
add
sbb
pusha
retf
push
xchg
jno
cs
iret
cmps
mov
test
jmp
test
inc
mov
add
jnp
aad
ins
mov
test
or
(bad)
aad
test
scas
jle
pushf
nop
jl
push
inc
jp
push
test
dec
test
addr16
movs
jl
ds
sbb
add
aaa
push
test
push
xor
pop
ds
das
outs
mov
pop
pop
mov
movs
cli
and
scas
xor
movs
retf
cmp
scas
sub
xchg
fs
gs
sbb
push
add
xchg
cmps
adc
mov
inc
jle
pop
lea
imul
fimul
mov
pop
push
fsubrp
daa
bound
stos
daa
sbb
mov
fstp
stos
sti
icebp
ret
cmp
je
scas
je
mov
pop
sbb
imul
mov
jae
cmp
pop
and
loope
imul
aaa
fwait
inc
loopne
dec
xchg
cwde
repnz
add
shr
sbb
cmp
sbb
mov
repnz
sub
enter
push
inc
inc
aas
and
mov
sti
fdivr
leave
lea
lods
test
or
xchg
retf
pop
std
dec
mov
fisttp
sar
fldenv
int3
dec
retf
jg
xor
imul
cmp
test
rol
or
pop
mov
outs
aas
push
(bad)
push
mov
mov
jmp
pop
jl
(bad)
adc
sub
mov
fwait
movs
jle
(bad)
and
cmp
loope
stos
xchg
cmp
test
adc
push
mov
sub
add
cwde
jbe
jbe
retf
push
mov
test
jl
imul
jecxz
xor
cli
mov
jbe
adc
inc
adc
int3
retf
clc
mov
sub
das
aad
push
inc
cmc
retf
cmp
inc
or
retf
cmp
daa
sbb
cli
jnp
lods
rol
hlt
cmp
xor
push
scas
(bad)
test
pop
sub
push
scas
add
lock
mov
mov
cmps
push
jmp
push
push
inc
loopne
fbld
jmp
push
pop
out
fsub
mov
lods
mov
lds
sub
sbb
test
inc
ja
mov
(bad)
fs
pop
mov
inc
into
or
dec
mov
wbinvd
cmp
ja
ss
dec
push
xchg
in
out
test
lods
xor
cdq
pushf
sti
sbb
sbb
ins
stos
fisub
sub
rol
(bad)
adc
je
xor
ret
cmp
add
pop
pop
cdq
mov
mov
adc
out
and
adc
retf
cmps
push
dec
mov
mov
aas
lock
std
adc
add
ins
sahf
das
scas
mov
imul
sti
js
scas
adc
mov
div
scas
adc
sbb
cdq
jnp
pop
jns
mov
or
test
cdq
xor
push
sbb
js
jmp
ja
out
xchg
addr16
xchg
or
jge
(bad)
aas
xor
sysenter
mov
repz
fs
repz
cmp
pop
(bad)
fcmovne
cli
repnz
inc
cmp
fnstenv
(bad)
add
scas
lahf
js
jno
mov
push
dec
sub
retf
push
jb
inc
je
xor
dec
cld
mov
pop
rcl
out
xchg
int
stc
push
(bad)
jmp
pand
sub
ror
fisttp
imul
mov
retf
call
jg
pop
mov
jns
xchg
and
xor
and
icebp
repz
adc
pop
jmp
iret
dec
sti
push
ss
mov
mov
dec
and
inc
test
xor
ss
jle
xchg
movs
adc
shl
gs
stos
adc
xlat
cs
sbb
jmp
cli
aad
or
test
and
inc
bound
lea
ds
jmp
jg
aas
push
aaa
cmp
stos
mov
inc
mov
mov
cs
sar
stc
call
neg
xrelease
mov
std
(bad)
or
sahf
adc
jle
shl
push
retf
sbb
(bad)
daa
stos
std
pop
sahf
das
pop
cmp
adc
cmp
xor
(bad)
rcr
sti
hlt
add
lods
dec
mov
mov
push
(bad)
push
mov
and
lock
jbe
sbb
call
daa
js
dec
fwait
jmp
fidiv
inc
and
jno
fwait
mov
leave
xor
sub
jbe
add
shl
stos
ss
(bad)
(bad)
std
mov
add
inc
or
ins
xchg
jmp
push
adc
(bad)
mov
fmul
cli
jb
xchg
in
jecxz
fld
aas
and
test
rol
mov
test
jp
pusha
cmp
mov
xor
imul
add
dec
push
cmp
out
out
pop
mov
xor
mov
fldcw
ret
cmps
cmc
aam
pop
mov
push
cmp
pop
jmp
xchg
scas
fisttp
in
and
or
or
jmp
shr
xchg
push
jl
outs
jmp
sub
test
mov
sbb
fidivr
inc
loop
(bad)
test
sti
jnp
xor
retf
pop
fwait
stos
xor
inc
(bad)
pop
fimul
inc
or
jbe
jmp
inc
xchg
sbb
cmp
shr
cmp
in
div
jle
or
cdq
sub
(bad)
in
mov
sbb
sbb
or
ins
int3
add
or
loopne
sbb
pop
or
sbb
fcom
je
stos
icebp
sub
sub
xchg
ins
cwde
push
aam
call
inc
jnp
mov
(bad)
mov
cmc
fsub
(bad)
cmp
cmp
adc
aas
aas
cli
push
mov
ror
mov
mov
test
das
jno
ja
push
retf
mov
cmp
xor
sub
xchg
push
sub
inc
ret
fistp
sar
outs
out
stc
dec
repz
scas
adc
in
and
inc
fs
pushf
not
push
out
pusha
pop
push
xlat
ret
popa
lds
or
xor
fistp
push
(bad)
iret
clc
adc
shl
sub
(bad)
pop
mov
inc
mov
addr16
aaa
xchg
mov
sub
jmp
add
mov
or
sti
mov
mov
dec
push
out
xchg
mov
int
cld
iret
dec
mov
or
push
cs
ficomp
fidivr
xchg
ret
outs
fwait
adc
mul
adc
sbb
pop
inc
or
dec
sti
cmp
(bad)
test
dec
pop
xchg
dec
adc
cld
mov
sbb
add
jmp
inc
mov
sbb
into
test
sub
xchg
adc
xlat
mov
inc
sub
inc
test
sti
sbb
mov
int3
push
mov
scas
dec
mov
sbb
retf
and
(bad)
popa
addr16
mov
(bad)
pop
and
cmp
or
cld
xchg
pop
call
ret
hlt
sti
jp
sub
dec
push
push
into
push
pop
push
in
mov
arpl
retf
sub
sti
hlt
shr
add
cmps
mov
xchg
pop
add
into
mov
jns
fidiv
push
push
jb
fisttp
mov
xchg
xor
sbb
cmp
add
inc
into
call
in
adc
(bad)
pop
mov
cmp
test
out
clc
lahf
mov
ja
xor
(bad)
fidiv
jae
call
cmp
add
jnp
dec
dec
inc
leave
push
xor
cmc
jne
call
mov
push
imul
pop
mov
lds
das
push
sbb
and
adc
lods
test
out
cs
dec
mov
mov
dec
mov
sar
sti
retf
retf
dec
xor
jne
aas
and
test
retf
outs
neg
popa
dec
je
pop
xor
bound
dec
xor
test
movs
fldcw
stc
arpl
mov
mov
xor
or
adc
and
shl
ins
push
mov
xor
inc
push
outs
pop
sbb
mov
shr
mov
push
mov
pop
and
mov
cwde
jg
sub
cmps
adc
stc
ret
pop
fisttp
fstp
dec
je
mov
push
cdq
adc
xor
arpl
cli
in
pop
inc
mov
mov
sub
in
stos
ins
xlat
movs
pop
mov
test
push
rcr
adc
jae
scas
and
mov
and
shr
jmp
pop
mov
(bad)
mov
test
nop
(bad)
jb
push
cwde
test
jae
xor
push
data16
xchg
and
imul
sbb
jge
js
mov
icebp
xor
ins
add
xchg
(bad)
leave
call
sub
lea
mov
movzx
cs
movs
(bad)
nop
ds
sahf
jbe
fld
jne
jne
frstor
scas
xchg
inc
jmp
sti
push
dec
mov
ins
inc
xchg
cmp
sahf
mov
xchg
xor
sub
pop
sbb
ror
and
sbb
clc
lock
jo
cdq
test
mov
pop
jno
sub
inc
jno
loopne
sahf
in
jnp
xlat
dec
test
pop
and
push
sbb
push
cld
aaa
sub
jecxz
int
dec
sbb
xchg
std
push
cmps
mov
bound
retf
fnstcw
xchg
or
sbb
div
pop
inc
(bad)
ins
sub
mov
idiv
(bad)
mov
xchg
ret
stos
jl
iret
xlat
pop
ins
inc
shr
outs
xchg
jge
stos
push
dec
pop
mov
call
scas
clc
pop
clc
jp
xor
sub
in
mov
or
ror
fdiv
(bad)
adc
inc
push
aas
mov
sbb
mov
xchg
fidiv
scas
icebp
arpl
mov
and
shl
dec
mov
int
loope
and
in
sub
sahf
adc
hlt
imul
loop
data16
inc
arpl
loopne
retf
xlat
push
je
mov
rcl
fadd
movs
cld
adc
push
or
jl
jmp
mov
aaa
mov
retf
sbb
adc
mov
div
add
mov
cmp
in
repnz
inc
adc
mov
dec
data16
ja
das
call
add
jmp
imul
test
adc
add
push
fnstsw
xchg
mov
(bad)
xor
fld
enter
ror
fs
mov
(bad)
mov
or
or
mov
loopne
and
push
xchg
inc
pop
sar
in
lds
mov
sub
(bad)
mov
lods
push
neg
shl
scas
mov
dec
inc
int
popa
popf
js
loope
pop
test
mov
hlt
xor
pop
ja
repnz
arpl
pop
cmps
add
fs
(bad)
cmp
mov
outs
and
mov
cmps
mov
mov
lock
push
mov
mov
retf
push
jmp
jnp
or
pop
(bad)
es
adc
pop
push
fbld
enter
xor
fisttp
xor
mov
lods
cmp
cmps
cmp
jg
hlt
int3
shl
int3
dec
sub
in
fprem1
fs
pop
outs
ja
jno
daa
add
in
sbb
xlat
(bad)
xchg
dec
add
xor
lods
adc
dec
cmps
(bad)
mov
xchg
pop
test
add
push
cmp
jbe
lods
aad
arpl
sbb
cli
pop
movs
inc
cdq
idiv
data16
cmp
or
jmp
fidivr
push
arpl
mov
movs
push
outs
imul
movs
mov
sub
xchg
adc
mov
xchg
dec
mov
pop
js
movs
mov
loopne
inc
ss
lods
movs
push
adc
stc
rcl
test
bound
gs
xor
cwde
xor
nop
lea
inc
in
cmc
ins
xor
cwde
sub
call
les
xor
cs
iret
mov
add
cmp
jle
fstp
cmp
call
adc
xchg
aam
loop
clc
popf
push
fadd
dec
outs
xchg
(bad)
pop
shl
pop
xor
sbb
retf
stos
cmp
arpl
pop
call
cmc
inc
test
or
sub
(bad)
in
mov
dec
out
iret
xor
call
aas
cmp
gs
and
mov
ins
cmc
mov
xchg
rcr
cs
aaa
push
inc
lods
jbe
out
adc
sub
pusha
hlt
out
test
add
mov
cmp
xchg
jmp
sbb
inc
dec
pop
shl
mov
and
pop
mov
and
xchg
cwde
xor
movs
mov
inc
fs
loop
cmps
cmp
xchg
pop
mov
sub
imul
mov
and
mov
fwait
adc
adc
test
arpl
cmp
popa
mov
out
lock
fistp
inc
cmp
cwde
pop
cmp
fs
mov
add
in
in
push
icebp
adc
and
sub
mov
leave
in
xchg
mov
mov
pop
enter
jo
cmp
ja
mov
cmp
enter
cwde
sar
xchg
(bad)
sar
xor
pop
movs
cmp
adc
push
popf
outs
dec
add
addr16
xchg
mov
shr
inc
jecxz
pusha
mul
call
mov
mov
inc
inc
xchg
push
lds
jge
les
clc
jns
call
scas
ds
scas
jnp
ins
bound
inc
mov
div
xchg
sar
xchg
jge
xor
push
shl
sub
pusha
xor
bound
cmps
cld
aaa
fldenv
xor
mov
enter
fimul
push
jle
mov
sahf
ins
cmp
call
jno
pushf
xor
cli
jmp
jecxz
sub
lods
sub
mov
icebp
dec
jmp
mov
and
ffree
pusha
fdivr
cmp
sbb
imul
xchg
sub
bound
nop
imul
iret
and
jecxz
or
mov
cmp
mov
mov
inc
in
fsub
push
dec
inc
add
adc
push
fucomi
mov
cmp
int
jb
xchg
pop
pop
sbb
or
xor
sub
xchg
stos
push
nop
stc
sbb
jmp
add
adc
retf
add
jbe
ror
cmp
imul
jp
or
sbb
xlat
pop
in
outs
jae
sbb
cmp
sub
loop
(bad)
fist
repnz
adc
into
pop
pop
dec
stos
addr16
xchg
jnp
test
bound
js
fiadd
fiadd
(bad)
gs
fst
scas
push
sub
xchg
push
call
idiv
jmp
sub
jecxz
and
les
rcl
cmp
mov
mul
out
mov
repnz
adc
ja
mov
sar
je
stos
ss
adc
popf
adc
sbb
mov
aam
and
out
lods
ss
outs
mov
shl
mov
adc
aam
xlat
jmp
in
adc
jne
pushf
das
rcr
mov
scas
sbb
je
lahf
inc
mov
dec
add
xor
adc
cmps
and
jecxz
arpl
or
retf
mov
push
std
or
fs
xor
xor
jbe
nop
sahf
stos
adc
nop
daa
xor
lahf
das
ror
push
dec
dec
bound
sbb
and
pop
inc
mov
repz
loope
(bad)
mov
stos
jmp
sbb
xchg
and
sbb
xor
cli
(bad)
pop
lds
xchg
sbb
jne
shl
mov
std
inc
cmp
shr
and
add
cmp
add
add
jle
div
pop
adc
jle
pushf
addr16
addr16
in
fistp
call
fnstsw
repz
inc
dec
sbb
aam
jne
test
adc
and
mov
xchg
jnp
test
and
or
pop
xor
gs
inc
imul
inc
lds
pop
ins
sbb
(bad)
xchg
push
xlat
fidivr
(bad)
clc
lahf
nop
jo
xchg
cwde
and
lods
stos
jg
std
push
or
cmp
clc
movs
mov
jns
sahf
cmp
and
and
into
push
push
xchg
ds
cmp
mul
aaa
dec
push
clc
jns
push
jno
retf
sub
mov
ins
cdq
push
xchg
dec
sahf
mov
push
dec
ror
jae
cld
mov
push
or
das
mov
add
ja
push
dec
fisttp
mov
jle
xchg
ss
shl
cmp
std
aas
add
xor
lds
repnz
in
inc
pop
pop
mov
sub
jbe
lds
pop
mov
outs
movs
add
mov
gs
xlat
adc
cmps
add
mov
fisttp
xor
outs
cmp
push
dec
adc
out
jge
inc
popa
jge
sbb
ss
adc
sub
mov
add
inc
sbb
jg
rol
inc
cdq
or
xchg
mov
out
cld
jno
data16
mov
add
fdiv
jnp
add
mov
prefetcht2
xchg
inc
mov
xchg
or
sbb
popa
ja
jecxz
pop
xor
add
pop
mov
fcmove
(bad)
out
sbb
xor
cmps
xchg
and
rcr
add
mov
and
popf
push
scas
pushf
or
push
js
test
push
lahf
jecxz
cmc
xlat
sbb
lahf
add
jle
xchg
inc
in
ret
popa
and
imul
cmps
ret
sub
ins
jle
icebp
pusha
jl
push
imul
jae
fst
in
sbb
mov
xor
fstp
xor
xchg
ds
ret
cmp
(bad)
test
dec
pop
fmul
mov
into
stos
inc
enter
dec
or
dec
push
stos
das
(bad)
cmp
push
mov
inc
ds
mov
jmp
cmps
aas
mov
retf
inc
scas
and
push
sub
rcr
ja
push
rol
jge
pop
fucom
adc
jns
and
cmp
push
sbb
outs
fstp
xor
jmp
ins
jb
add
jp
adc
inc
clc
mov
test
sub
retf
retf
mov
inc
mov
jg
dec
dec
and
add
jnp
test
popf
ds
int3
jmp
inc
adc
cmps
test
das
movs
in
aam
jmp
mov
xlat
loope
xchg
pop
inc
hlt
push
loopne
lahf
push
mov
movs
mov
aaa
sub
xchg
pop
push
pop
inc
pop
pusha
sti
aad
pop
cs
xchg
cmp
xchg
test
pop
mov
cld
xchg
cmp
leave
les
sbb
inc
or
adc
pop
pop
(bad)
push
jae
and
loopne
in
sbb
mov
dec
add
sbb
jo
xchg
sahf
mov
jmp
cmp
xchg
scas
cmp
or
jmp
not
jmp
cmp
cmp
and
xor
cmc
jne
inc
pop
sub
xchg
push
or
(bad)
fcmovne
adc
test
sub
aas
lock
pushf
mov
and
(bad)
jge
inc
fwait
mov
lea
add
and
dec
out
ins
movs
jle
(bad)
and
or
ins
xor
fmul
xor
sar
mov
(bad)
into
loope
mov
dec
movs
ja
hlt
aad
movs
dec
xchg
sahf
loope
jmp
call
mov
mov
sub
fld
call
daa
cmp
ds
cli
or
xchg
pop
test
pushf
dec
js
inc
imul
dec
push
mov
add
in
xor
cli
icebp
fld
and
scas
addr16
mov
in
sub
cs
sti
sbb
mov
jmp
pop
leave
and
jo
xor
daa
repz
push
jecxz
mov
popa
repz
mov
xchg
in
xchg
outs
jle
jmp
or
jp
stos
push
xchg
scas
add
out
loop
push
call
cmp
xor
aad
sub
enter
mov
mov
mov
(bad)
icebp
imul
fwait
aam
and
imul
in
fld
repz
mov
leave
unpckhps
test
mov
ret
adc
add
sub
xchg
xchg
and
(bad)
cmp
and
aad
popf
jns
adc
(bad)
pop
ds
cld
fwait
push
iret
cmp
dec
jmp
add
aaa
jecxz
les
jge
stos
mov
in
cmps
mov
pop
push
dec
mov
mov
mov
mov
lds
sub
js
sub
or
push
push
hlt
outs
shl
out
(bad)
imul
push
dec
out
push
lods
pop
jle
xor
aas
or
xchg
sub
les
fiadd
sbb
jge
add
and
out
cwde
add
cmp
ret
xor
sub
sbb
std
test
inc
mov
cmp
jle
test
mov
pop
jno
cmp
pushf
loop
es
pop
cs
or
stos
stc
cmp
ficom
inc
popf
rol
ret
imul
push
pusha
sti
lahf
pop
je
outs
xchg
in
pop
mov
iret
mov
stos
and
cs
sub
aas
pop
dec
push
cwde
xlat
loopne
pusha
aaa
adc
jp
mov
out
(bad)
mov
sar
or
push
sub
mov
jge
dec
aad
inc
arpl
pop
jecxz
out
stos
xchg
ror
sbb
or
push
idiv
sub
(bad)
or
outs
pop
ds
pop
mov
mov
jp
lock
arpl
dec
aas
jecxz
mov
dec
sub
pop
cmc
aad
and
xchg
xor
jae
imul
repz
push
not
cmps
sub
push
std
inc
test
mov
mov
ds
and
lds
rcr
pop
fcomp
stc
int3
jge
xor
psubb
and
cmp
fwait
fwait
pop
mov
and
rol
pusha
dec
mov
lods
das
mov
xor
std
fstp
xor
ror
aam
xchg
jge
enter
mov
mov
xor
in
and
and
mov
movs
addr16
mov
or
dec
dec
mov
inc
xchg
push
jb
inc
push
int3
jnp
gs
rol
pop
mov
jns
fimul
adc
out
shr
mov
xor
pop
sbb
jo
inc
rcl
mov
loope
in
xor
lahf
sahf
aam
push
and
sbb
fs
jmp
cli
loope
mov
dec
pop
xchg
adc
cmp
pop
leave
test
mov
mov
fs
push
data16
jb
stc
mov
mov
lea
cmp
xlat
jmp
adc
and
or
sbb
dec
pop
test
clc
in
es
lds
xor
fcom
mov
mov
shr
xor
cmp
scas
mov
repz
push
(bad)
mov
mov
adc
dec
cmp
in
cld
push
xor
add
jl
bound
mov
icebp
inc
out
sbb
clc
add
popa
dec
adc
ins
cmp
aaa
rol
xlat
pop
adc
shl
jno
adc
mov
aam
inc
outs
push
bound
dec
pop
repz
movs
je
sti
adc
idiv
fcomp
sbb
sub
adc
outs
add
dec
pusha
push
or
int
sar
lods
mov
fcom
scas
imul
test
pop
ins
(bad)
popf
movs
retf
ret
or
movs
jo
mov
out
(bad)
and
push
push
mov
jmp
out
in
mov
xlat
pop
test
pop
xlat
jmp
pusha
ret
ror
cmp
pmullw
xor
mov
jg
jo
clc
dec
pop
add
mov
and
inc
pop
jle
lahf
bound
xchg
cli
jle
add
cld
loop
dec
rol
hlt
aaa
mov
mov
mov
call
mov
cmp
fisubr
mov
jmp
or
xchg
jbe
sub
adc
adc
mov
ret
dec
mov
sbb
xlat
xor
mov
fnsave
call
(bad)
pop
push
xchg
sahf
xor
(bad)
out
push
and
dec
adc
retf
sbb
data16
pop
pop
fld
push
mov
sub
sub
int
ja
cmps
ror
sub
cs
out
arpl
into
pop
scas
ins
xlat
xchg
(bad)
adc
frstor
adc
xchg
fisttp
inc
jecxz
repz
mov
enter
mov
mov
sub
add
xchg
push
aam
jo
cmp
adc
xchg
mov
test
in
fs
std
mov
cdq
fcmovne
jl
xchg
in
or
and
pop
in
add
retf
xchg
test
gs
sub
mov
xor
mov
mov
push
jns
and
sar
aas
xor
int
stos
and
jmp
jmp
out
mov
mov
cdq
mov
(bad)
inc
test
mov
push
js
or
fs
or
aad
push
push
dec
inc
jl
or
add
or
jnp
mov
fwait
cli
pop
mov
sub
mov
in
adc
push
jp
sbb
dec
es
jp
jo
mov
adc
out
(bad)
xor
adc
cmp
sbb
mov
out
adc
add
xor
jns
addr16
cmp
dec
add
cdq
pop
test
or
int3
out
lahf
pop
rcl
inc
ret
ins
pushf
mov
sbb
jmp
je
mov
daa
fnstcw
repnz
movs
mov
cmps
sub
add
ja
cmp
ins
sub
push
adc
add
cwde
sbb
mov
(bad)
je
adc
fisubr
(bad)
cmp
sbb
jno
push
(bad)
mov
mov
clc
cmps
mov
xchg
(bad)
xchg
push
cmps
arpl
mov
and
shl
xchg
aaa
sahf
cmp
xchg
xor
xlat
adc
pop
jo
sub
repz
and
xchg
pop
mov
stos
push
sub
fldcw
rcl
push
in
in
mov
pop
cmp
test
add
inc
into
ret
sti
pop
fcomip
(bad)
sub
xchg
mov
call
retf
js
cmp
retf
push
jae
jle
push
xor
or
adc
retf
lock
add
or
mov
jg
loopne
clc
mov
pop
mov
fistp
xor
sbb
out
push
ja
and
add
sub
popfw
outs
stc
out
mov
les
sub
mov
rcr
xor
sbb
retf
push
stc
repnz
leave
test
xchg
sbb
xor
inc
repnz
adc
fmul
jmp
add
imul
and
std
lock
clc
push
popf
and
std
push
cli
xchg
inc
icebp
out
xor
icebp
xchg
arpl
jl
inc
popa
mov
push
nop
pop
sahf
and
xchg
mov
test
shl
fbstp
mov
xchg
and
sub
push
shr
add
pop
adc
add
push
ins
div
dec
or
xor
loop
push
jmp
fist
pop
call
fidivr
aam
dec
int3
(bad)
jge
dec
lods
inc
es
mov
ins
loopne
mov
mov
cmp
lods
jne
sub
xor
stos
push
imul
ret
mov
sub
mov
jns
inc
addr16
repnz
fadd
inc
cld
jg
test
jo
mov
push
icebp
and
xor
std
pusha
add
mov
push
cmp
push
push
movs
add
push
jge
pop
mov
ss
inc
(bad)
xor
popa
pushf
sbb
cmp
sub
cmc
pop
xor
push
test
cmps
adc
iret
jmp
dec
lods
push
push
mov
xor
inc
test
sbb
fwait
scas
rcl
ret
adc
push
sahf
repnz
or
ins
sbb
push
inc
push
clc
and
lods
mov
pop
mov
jno
cmps
xchg
pusha
adc
rcl
fwait
(bad)
xor
(bad)
aad
push
adc
jb
test
dec
xlat
ret
sbb
dec
add
lods
outs
cmp
push
pop
arpl
add
cmps
pop
dec
mov
shl
(bad)
sub
mov
outs
push
push
aad
inc
ja
cld
fld
in
cmp
mov
mov
mov
and
add
mov
sbb
sub
outs
inc
and
jno
push
js
jae
inc
out
adc
cdq
(bad)
xchg
xchg
iret
push
mov
mov
xchg
pop
js
xchg
ja
cmp
call
ds
stos
or
jecxz
jg
out
sbb
add
add
les
jno
inc
cmc
rcl
adc
jbe
push
add
xchg
test
shr
adc
out
sbb
call
sub
(bad)
xor
push
jmp
sbb
and
out
popa
fst
pop
ins
mov
fwait
and
sar
push
jmp
pop
jg
pop
xchg
sub
xchg
popf
pop
cmp
fs
jbe
out
into
xchg
nop
shr
xchg
jle
shl
mov
pushf
xchg
mov
push
mov
dec
popf
mov
jns
(bad)
and
rol
ret
(bad)
jmp
dec
loop
sub
jmp
mov
mov
mov
xchg
or
inc
xor
xchg
xchg
jg
mov
scas
adc
jmp
sub
mov
sbb
(bad)
dec
aaa
mov
mov
das
push
add
xchg
add
adc
scas
cmps
fild
cmp
jno
imul
popa
call
imul
(bad)
inc
lock
mov
mul
mov
mov
movs
in
loopne
out
jbe
mov
lods
mov
sbb
jns
jmp
sub
cmps
xor
cmc
pop
ret
xchg
mov
mov
test
gs
adc
popa
cmp
push
es
or
jne
pinsrw
sub
cli
pop
xchg
mov
sbb
mov
add
fwait
sbb
cmp
mov
cld
pushf
pop
xor
adc
and
ja
cmp
mov
cli
push
fisttp
into
gs
jo
add
loop
add
js
arpl
(bad)
fstp
inc
mov
ror
lea
out
scas
mov
nop
stc
aad
lods
getsec
aad
or
mov
or
jno
add
js
push
stos
(bad)
jmp
mov
xchg
dec
fcmovnu
add
shl
add
pop
add
(bad)
cmp
jno
pop
in
pop
outs
sbb
test
sub
sti
pop
fsub
push
jns
outs
jle
mov
inc
xor
and
push
arpl
jne
lahf
adc
mov
dec
pop
jp
cmp
in
cld
xchg
inc
mov
push
icebp
lea
xchg
mov
push
jmp
(bad)
rcr
loop
outs
sbb
add
es
(bad)
jbe
xor
lahf
jns
mov
data16
les
sbb
dec
xor
cmp
dec
out
push
sub
in
push
lods
fld
and
ins
mov
mov
mov
pushf
out
dec
repz
rol
sub
popa
je
sbb
cld
xchg
mov
aad
sar
add
call
test
sahf
bound
pop
into
lds
jno
xchg
push
jg
jo
or
(bad)
mov
std
das
std
xchg
sub
push
pop
addr16
cmp
sbb
push
sbb
mov
and
xchg
gs
iret
aaa
jle
call
cmp
inc
lahf
outs
leave
mov
jge
dec
fisubr
xchg
fnstenv
jle
aas
jnp
or
addr16
pop
sub
fbld
xchg
adc
call
sbb
xor
lods
or
rcr
mov
mul
jecxz
jnp
hlt
mov
mov
inc
dec
lock
xor
test
cmp
imul
mov
pop
sbb
mov
pop
ja
int3
cli
cmp
or
std
inc
mov
sti
add
ja
jl
icebp
dec
outs
cmc
mov
push
cli
or
pop
aaa
ds
loopne
mov
movs
jecxz
inc
sbb
push
movs
sbb
mov
fwait
neg
jne
jno
pusha
in
mov
out
dec
sar
sub
movs
adc
(bad)
shl
sbb
int3
add
mov
mov
mov
mov
(bad)
sahf
pop
packsswb
cmp
xor
push
sti
imul
lods
test
sub
sbb
xchg
js
stos
in
xchg
or
inc
jb
fadd
add
add
in
sahf
cmp
sub
lock
in
push
std
xchg
add
aaa
ror
dec
adc
xor
adc
sbb
iret
movs
shl
xchg
ja
(bad)
lea
xchg
mov
inc
ret
sub
out
dec
jno
or
xchg
adc
sub
xchg
mov
dec
push
int3
mov
das
jmp
stc
repz
cdq
(bad)
ficom
clc
mov
sar
inc
push
out
dec
jnp
lea
and
fisttp
push
dec
pop
in
xchg
call
ret
xor
fdivrp
pop
jne
dec
fdiv
cmp
push
repz
add
mov
(bad)
xchg
dec
jmp
clc
ins
jl
cli
pop
or
inc
pusha
dec
dec
mov
addr16
dec
jns
sbb
fwait
dec
sub
dec
leave
ins
dec
mov
xchg
add
cmc
mov
rol
xchg
push
inc
scas
jl
fwait
push
jp
test
mov
add
dec
sbb
mov
shl
loop
ins
inc
mov
cmp
imul
je
movs
loope
out
mov
lock
dec
sub
or
movs
adc
xor
jg
and
push
cmp
shr
adc
pop
pop
or
imul
dec
and
es
inc
loope
mov
into
mov
inc
je
pop
rol
add
into
sbb
xchg
shr
nop
push
inc
rol
pop
xor
aaa
or
fmul
mov
ins
enter
xor
push
scas
sub
pusha
shl
inc
push
push
mov
out
xor
and
push
test
push
xor
jle
in
fistp
jnp
jle
xor
mov
or
fisub
enter
jmp
push
and
push
lods
mov
int3
mov
mov
repnz
adc
test
ja
xor
sub
adc
mov
ror
js
fmul
mov
gs
inc
out
adc
mov
jne
loope
sbb
ret
xchg
push
ins
dec
sbb
leave
imul
ficom
and
popf
cmp
add
fcmovne
es
push
dec
or
cs
cmp
mov
lods
les
je
enter
in
push
jg
sub
pop
adc
ror
push
ds
jno
clc
add
pop
add
adc
out
sub
mov
xor
cmp
shl
add
dec
mov
mov
or
xchg
inc
inc
jae
in
movs
mov
stos
sbb
ret
aad
mov
ds
in
push
mov
leave
sub
inc
xor
out
lea
sti
cli
jae
dec
pop
push
xor
shr
dec
mov
dec
add
out
repz
fld
dec
jb
push
nop
cmp
je
arpl
pop
dec
imul
les
(bad)
jno
or
xchg
loope
int3
push
mul
mov
fadd
mov
das
dec
and
xlat
rol
(bad)
sub
add
add
dec
mov
cld
add
daa
cmp
dec
mov
mov
movs
(bad)
leave
cmps
inc
pop
aas
push
mov
mov
push
test
int3
arpl
std
int
out
cmp
sbb
repz
ficomp
daa
(bad)
cs
mov
inc
int
xchg
ja
cmps
dec
test
mov
dec
call
add
push
mov
push
pushf
lods
pop
movs
mov
loopne
loop
ins
leave
jg
push
cmp
xchg
xchg
mov
pop
jg
out
test
aam
jg
xor
push
or
adc
into
and
in
fsub
lds
call
ja
inc
stos
loopne
dec
jbe
add
es
pop
xor
or
mov
push
jbe
js
pushf
mov
inc
jecxz
mov
movs
aam
add
push
stos
push
xchg
sub
and
inc
xchg
xchg
jbe
mov
mov
repnz
ins
lods
push
pushf
(bad)
push
sub
push
aam
adc
cld
movs
ins
pushf
mov
mov
sub
das
fld
cwde
out
jo
xor
pushf
cmps
inc
push
jl
(bad)
mov
or
cs
and
sbb
jp
push
scas
jo
cmps
add
sub
mov
pusha
xchg
ds
les
call
jne
call
stos
out
mov
add
sub
push
(bad)
cmp
sub
dec
pop
mov
and
add
retf
imul
and
ins
div
icebp
mov
fs
clc
cmp
sub
fnstsw
mov
jmp
popw
lds
and
out
loopne
repz
adc
sbb
jno
loop
and
dec
xchg
pop
inc
aam
and
push
bnd
int3
jmp
dec
and
rcl
mov
dec
aaa
mov
in
ins
mov
imul
mov
cld
adc
push
sar
clc
clc
push
mov
int
sub
mov
mov
push
fdivrp
adc
out
inc
imul
mov
cmovns
repz
fisub
mov
scas
mov
into
adc
inc
adc
push
mov
test
mov
inc
xchg
cwde
sub
fwait
jb
jg
out
int
or
or
enter
mov
jp
xchg
mov
aam
(bad)
movs
pop
jle
sub
jge
mov
inc
xor
push
leave
enter
sbb
jns
inc
and
fistp
rcr
add
or
push
fcom
fwait
and
int
pop
xchg
adc
dec
add
inc
or
loop
add
pop
sub
dec
aaa
dec
dec
jl
ss
sbb
sbb
aad
test
add
push
xchg
mov
inc
pop
and
ins
inc
pop
gs
xlat
xchg
hlt
mov
mov
cli
jmp
sbb
test
jbe
dec
push
sub
jge
cmps
mov
fidivr
adc
jbe
outs
xchg
dec
fwait
div
(bad)
mov
fmul
sbb
dec
pop
sub
adc
xchg
arpl
xchg
adc
push
or
pop
jb
je
repnz
and
mov
mov
les
dec
addr16
add
inc
push
lods
or
inc
mov
stos
mov
in
test
test
scas
into
aas
aaa
cmp
sti
(bad)
or
push
(bad)
std
inc
mov
sti
cmp
dec
iret
(bad)
xchg
mov
sub
mov
loope
and
dec
sbb
popa
mov
or
imul
pop
leave
dec
ins
(bad)
push
cmp
lods
movs
pop
jecxz
inc
xchg
bnd
cli
mov
pop
sbb
mov
xchg
out
jge
or
jo
ror
cmps
dec
(bad)
lods
mov
dec
inc
aaa
xchg
push
arpl
ins
sub
ins
mov
neg
push
stos
sub
cdq
mov
repz
mov
cmp
jne
cmps
mov
in
and
mov
xor
fs
mov
lahf
cdq
mov
pusha
sahf
mov
inc
dec
cli
fcomp
fdiv
jl
repnz
hlt
int3
jno
jmp
mov
nop
in
fidivr
adc
lock
xchg
add
xchg
pop
outs
sbb
push
(bad)
and
adc
imul
sahf
push
call
xor
dec
pusha
sar
nop
inc
add
lock
dec
mov
pushf
mov
test
js
push
cmp
lock
lock
pop
mov
inc
sbb
arpl
cld
stc
sub
lahf
mov
mov
xor
and
icebp
push
adc
xor
sbb
pop
mov
sbb
into
or
jle
out
push
xchg
std
das
rcl
pop
mov
aad
cmp
js
push
xor
int
add
(bad)
fwait
mov
or
sbb
xchg
and
mov
xor
sub
ja
jo
sub
cmp
and
mov
sbb
mov
pop
sub
mov
ss
mov
aas
xor
shr
retf
pop
jg
out
std
movs
adc
rcr
pop
cmp
shl
add
out
rcr
cs
inc
mov
ins
sub
mov
ret
xor
sbb
push
nop
xchg
mov
inc
dec
in
cmc
test
repnz
ficomp
sbb
jecxz
pop
rol
pop
xrelease
mov
jg
dec
push
pop
in
in
cwde
push
lahf
leave
or
loopne
push
loopne
mov
xchg
xor
call
push
bound
aad
daa
push
call
jle
in
xchg
loopne
sbb
xchg
mov
sub
rcl
ret
adc
fnstenv
jl
clc
test
or
add
mov
pushf
dec
(bad)
mov
jb
(bad)
cmps
rol
cmp
sbb
add
mov
add
jmp
pop
adc
cmp
jnp
xchg
sti
test
fwait
je
mov
lods
xchg
adc
cmp
ror
ret
ror
scas
ror
inc
aam
sub
nop
movs
jmp
icebp
ins
mov
sub
out
inc
mov
lods
mov
inc
push
sub
stc
daa
sub
xor
sbb
ret
dec
popf
xor
jmp
mov
popf
cmp
cdq
cmp
push
push
push
push
push
cmps
or
into
adc
in
cld
adc
fbld
les
daa
xor
repnz
shl
xlat
push
out
xchg
in
mov
inc
(bad)
sub
jbe
or
xor
jl
mov
sub
pop
push
or
out
mov
into
test
pop
iret
outs
aam
pop
adc
dec
imul
fisubr
jmp
aaa
mov
mov
pop
add
daa
jo
icebp
or
sti
arpl
inc
sub
movs
ins
sbb
mov
xor
dec
adc
shl
push
popa
dec
shl
mov
push
pop
ret
mov
pop
out
xor
jmp
in
stc
inc
jge
dec
aad
ins
pop
mov
cwde
bound
xchg
xchg
(bad)
pop
pop
push
or
adc
adc
js
test
pusha
sbb
xchg
sub
in
gs
mov
jns
loopne
jns
adc
sub
adc
mov
add
mov
les
jle
push
shl
nop
(bad)
cli
cmp
sub
out
pop
fstp
pop
inc
cli
mov
ds
and
or
nop
in
test
ja
jl
sbb
ror
add
xlat
clc
adc
test
and
stc
and
repnz
test
xor
mov
gs
dec
cmp
ret
addr16
xor
xor
mov
outs
dec
out
shr
xchg
mov
shr
xchg
xchg
xor
sub
cmc
sub
out
ret
cwde
loop
jns
xchg
je
mov
xor
jmp
(bad)
jg
mov
ret
or
test
sub
ja
sbb
lahf
popf
jae
pop
dec
mov
call
sbb
sub
sbb
jns
pushf
xchg
lds
(bad)
rcr
xor
cld
and
clc
adc
xchg
ins
push
cmp
mov
arpl
sub
sahf
sub
xchg
outs
xor
out
adc
iret
(bad)
sbb
mov
ins
cmp
das
movs
and
or
vpandd
and
in
pusha
and
push
cld
je
xlat
xchg
repz
cwde
mov
mov
dec
pop
mov
aad
push
push
jmp
pop
inc
in
xlat
jg
xor
outs
xchg
jb
shr
pop
mov
xor
cmp
dec
call
and
push
pop
or
ret
cmps
call
lods
add
repz
rcr
sub
enter
fxam
mov
mov
retf
mov
shl
cmp
lock
ins
mov
outs
adc
xchg
in
fmul
ins
xchg
push
loopne
fcomp
push
cwde
(bad)
icebp
shl
mov
mov
and
imul
fs
out
inc
jl
adc
in
push
repz
inc
inc
fwait
xchg
and
xchg
bound
lods
inc
aam
mov
cwde
lahf
jle
ins
sbb
in
push
(bad)
sub
inc
fadd
mov
or
fsubr
jmp
in
fwait
mov
out
out
mov
xchg
icebp
cmp
xchg
xor
mov
outs
fadd
iret
jmp
std
push
mov
lock
xor
outs
mov
add
mov
in
cmp
out
or
int
mov
loope
mov
lods
pop
fdiv
inc
push
jmp
jno
es
adc
pop
xchg
sbb
mov
ds
pusha
mov
jp
std
pop
xor
ds
out
lods
fsubr
mov
int
mov
push
push
push
imul
cmp
dec
lods
mov
pop
int3
mov
mov
(bad)
neg
imul
jmp
movs
mov
je
test
push
stos
fsub
jp
and
push
sbb
(bad)
nop
mov
lds
mov
popf
out
and
xor
inc
add
pop
jp
je
cmp
in
mov
mov
popf
fmulp
mov
xchg
call
jae
cmps
sbb
sub
fistp
test
out
aaa
mul
mov
iret
jns
sub
and
xor
mov
in
mov
jge
sub
outs
jnp
pop
jb
clc
push
or
mov
jb
sub
mov
imul
jae
mov
sub
adc
inc
movs
sahf
ret
and
cli
pushf
cmp
div
test
mov
mov
jne
outs
repz
mov
mov
imul
mov
and
stos
call
xchg
out
mov
jne
in
test
mov
dec
cmp
out
jns
cmps
mov
out
jge
xchg
nop
xchg
mov
mov
stos
jg
dec
js
pusha
stc
xchg
dec
mov
shl
and
outs
pop
popf
(bad)
jg
call
shl
retf
rcl
push
ja
jbe
nop
push
sbb
imul
fistp
sub
mov
fisub
jo
lahf
sub
fld
mov
outs
pop
pushf
cmc
repnz
mov
cli
rcr
cmp
clc
sbb
dec
mov
mov
inc
add
sahf
in
cwde
lds
dec
xchg
in
fs
inc
mov
jns
mov
int3
jmp
sti
leave
push
adc
aam
or
jno
in
repnz
mov
push
into
sbb
pop
rcl
adc
mov
out
mov
add
out
xchg
outs
mov
mov
or
jmp
out
and
int3
fsub
(bad)
dec
xchg
adc
mov
pop
es
ret
retf
ret
movs
adc
imul
fisttp
sub
gs
inc
stos
add
push
fmul
icebp
mov
loope
fidivr
icebp
cmc
lahf
cmp
int
in
jp
std
xchg
xor
sub
cmp
xchg
clc
lods
dec
and
je
push
cmc
test
in
cmps
ins
adc
cmp
fdivr
add
aaa
and
dec
pop
cmp
push
sbb
out
mov
inc
aaa
scas
test
jbe
mov
aas
fcmovnbe
in
rcr
mov
jae
in
jno
cld
xor
add
out
or
fwait
sbb
lock
pop
dec
add
mov
outs
ins
fisttp
or
cmp
sbb
stos
retf
dec
push
cmp
in
pusha
out
cmp
fstp
jecxz
xor
sbb
sahf
dec
push
mov
xor
sar
mov
mov
mov
daa
mov
sub
div
xchg
mov
jne
adc
shl
lea
inc
inc
mov
xor
cld
cmps
and
mov
lods
mov
xor
xchg
inc
fwait
es
xchg
push
push
sbb
pop
daa
sub
inc
loope
sbb
mov
call
cmp
dec
stos
pop
(bad)
xor
add
mov
repz
lea
in
imul
das
push
xor
mov
lahf
es
mov
lock
cwde
jo
push
xor
lods
shr
jp
ds
sti
pop
icebp
arpl
hlt
fadd
push
inc
loop
cld
test
sub
inc
sub
popa
or
mov
push
aaa
jne
mov
mov
mov
adc
in
and
push
fnstcw
sahf
push
imul
in
inc
mov
sbb
lods
fcomp
pusha
cmp
aam
push
rcr
lahf
inc
jne
(bad)
push
stos
adc
sub
or
xchg
shl
pop
jmp
push
or
scas
(bad)
xor
sub
jns
push
push
or
inc
xor
dec
lods
ror
aam
add
jnp
repnz
inc
fild
in
and
sahf
leave
and
pop
call
out
xchg
push
sbb
(bad)
sub
mov
xor
push
js
jge
inc
or
pushf
fiadd
leave
push
mov
dec
mov
xchg
sub
sbb
retf
mov
mov
pop
outs
jmp
pop
jp
push
jb
push
cwde
ror
add
pop
cld
cmp
xchg
movs
push
sbb
data16
mov
sub
or
fidiv
mov
cmp
jg
push
test
ja
clc
imul
cmp
sar
inc
iret
aad
xlat
adc
fidivr
in
rol
push
outs
dec
inc
adc
xchg
shr
xor
push
mov
adc
pop
lock
mov
sub
push
in
push
jecxz
ins
sub
mov
mov
inc
call
xchg
outs
xor
mov
sub
or
mov
jns
faddp
cmp
test
push
(bad)
inc
lods
pop
fcom
scas
add
aaa
sub
test
sbb
popf
jne
push
push
imul
test
fidiv
push
shl
sti
loopne
sbb
sbb
xchg
mov
(bad)
or
shl
jle
jp
inc
sub
test
aam
(bad)
pop
sub
out
into
cmp
neg
in
fisttp
fcmovnu
mov
aam
or
xchg
loop
aaa
or
int
ret
je
call
aas
test
scas
push
js
test
loop
daa
push
sbb
je
js
cli
inc
in
or
sub
add
dec
and
addr16
sub
mov
jmp
cmp
jl
pushf
test
not
std
sbb
xchg
sub
(bad)
out
ins
sub
out
mov
mov
dec
dec
pop
ins
pop
ds
cmp
cmp
in
cmp
lea
stos
out
jns
add
mov
shl
dec
cmps
xchg
sub
call
hlt
call
ss
dec
adc
sbb
sbb
cmp
dec
jmp
(bad)
fiadd
in
cli
imul
repnz
in
pop
das
lods
inc
adc
fisubr
xchg
movs
out
loop
movs
rcr
outs
xchg
add
retf
and
(bad)
scas
daa
ins
icebp
jnp
mov
push
cdq
sbb
jo
sub
(bad)
mov
mov
out
hlt
call
rol
push
add
mov
pop
adc
test
adc
in
mov
int3
xor
mov
push
xor
adc
and
enter
mov
fisub
movs
inc
push
pop
mov
lea
js
mov
adc
cmps
xchg
mov
jge
sti
mov
jo
jns
ja
or
dec
or
pop
push
adc
cmps
cld
cwde
jge
push
sub
test
jle
retf
call
inc
xor
dec
call
xchg
xor
fwait
arpl
and
(bad)
mov
push
mov
jge
test
jmp
mov
jns
call
mov
repnz
pop
dec
aaa
sub
leave
enter
sub
and
adc
sbb
hlt
fisub
jmp
es
push
std
pop
xchg
loope
jecxz
fst
cmp
push
cmp
in
les
jg
sar
or
xchg
and
(bad)
jecxz
gs
std
cmp
mov
sub
cmps
lea
rcr
and
aas
shl
iret
stos
retf
jp
aad
xchg
jle
push
out
lahf
imul
mov
popf
dec
fist
mov
lock
xchg
ss
push
xchg
lds
or
loopne
pop
xchg
fadd
mov
mov
sar
test
retf
mov
mov
pop
in
inc
inc
in
ds
pop
mov
ja
(bad)
sbb
scas
inc
call
ret
les
xchg
pop
outs
mov
mov
repnz
(bad)
(bad)
cli
outs
jle
cwde
loope
sbb
dec
cmp
fimul
or
ins
sahf
cld
adc
cdq
fmul
xchg
cmp
pushf
in
pop
push
push
sbb
xchg
jmp
gs
pop
fwait
out
stc
xchg
ja
pop
push
rcl
add
mov
add
pop
or
mov
push
test
xchg
inc
jno
adc
jmp
jl
aas
loop
sub
fisttp
mov
sbb
mov
push
or
mov
jns
lea
lds
sar
or
mov
aam
dec
add
mov
dec
add
push
cli
ins
mov
add
(bad)
leave
xor
xchg
call
pop
shl
jno
jmp
dec
adc
cwde
in
rol
push
xchg
das
mov
mov
jbe
dec
push
xchg
int
call
or
mov
repnz
or
inc
cwde
cmc
rol
inc
out
cld
scas
ins
ffreep
cmp
rcl
sbb
stos
add
jmp
daa
xor
or
ins
rcl
or
test
imul
loop
sti
xor
hlt
dec
push
in
mov
bound
jns
(bad)
loope
clc
ins
sub
dec
and
pop
adc
jae
inc
int
fmulp
es
nop
jae
ror
xor
sbb
cwde
std
xor
pop
retf
shr
dec
mov
movs
rcl
(bad)
pop
fistp
add
inc
xchg
inc
stos
push
shl
push
sbb
(bad)
jl
imul
les
sub
cdq
mov
sub
fbstp
mov
fsubr
bound
in
loop
std
cmp
xor
les
xor
push
sbb
nop
test
jae
mov
je
mov
push
jo
lahf
out
dec
dec
popa
aam
adc
pusha
dec
in
or
push
test
xor
retf
shl
jp
call
das
popf
aaa
out
imul
imul
ss
or
sbb
mov
pop
sbb
loope
dec
icebp
(bad)
call
or
and
retf
jl
mov
sbb
add
mov
xor
pop
mov
xor
jne
imul
lods
push
test
xchg
in
push
mov
js
sbb
or
lea
cmp
pop
jns
neg
mov
jmp
loopne
inc
jg
push
outs
stos
sub
mov
sbb
dec
xor
push
mov
jnp
or
dec
test
(bad)
inc
mov
push
sbb
mov
xor
xchg
out
repz
or
push
inc
(bad)
ficom
mov
sub
pop
icebp
ds
cld
pusha
imul
ins
jle
sbb
cmp
xchg
push
ins
call
inc
data16
add
hlt
test
and
cs
sbb
fnclex
cmps
stc
inc
jbe
cmp
popf
hlt
mov
inc
dec
outs
test
xor
dec
int
mov
and
(bad)
fisubr
jge
and
adc
enter
sub
or
mov
outs
cwde
into
pop
pop
pop
xlat
(bad)
jno
jl
in
sbb
sbb
and
out
push
xor
(bad)
fcomp
test
xchg
sub
(bad)
jl
shl
call
icebp
imul
mov
pop
sub
sub
xor
adc
neg
mov
aas
test
xchg
pop
aaa
call
out
fmul
and
ja
pusha
out
mov
(bad)
push
sub
int
or
mov
push
ins
mov
jp
aas
cmc
jbe
enter
test
imul
mov
fisttp
cld
sbb
dec
push
pop
mov
stos
fldenv
dec
lahf
ss
sbb
pop
lahf
int
push
mov
mov
push
jg
pop
clc
out
pop
sbb
mov
dec
jae
aas
jge
cmp
nop
mov
or
inc
or
push
or
add
adc
sbb
lahf
(bad)
jecxz
add
sahf
push
call
dec
push
cwde
mov
(bad)
aaa
xor
mov
mov
push
jae
dec
mov
imul
inc
imul
aas
mov
test
dec
mov
in
(bad)
jge
push
loopne
add
xchg
or
push
mov
jmp
xor
shl
adc
xchg
ja
sub
shr
neg
or
imul
and
dec
dec
xlat
xchg
enter
adc
(bad)
enter
mov
mov
ins
dec
sub
(bad)
bsf
add
sbb
sub
jl
dec
ret
sbb
and
pop
adc
jle
fsub
outs
xchg
sahf
or
test
push
fnsave
jecxz
sti
mov
imul
and
or
push
add
jnp
cmp
mov
rol
sbb
pop
std
push
scas
sbb
sbb
adc
push
mov
mov
jmp
lock
and
int
(bad)
jb
or
dec
neg
xchg
push
iret
adc
xchg
cli
jg
dec
(bad)
hlt
fdivrp
inc
jmp
jb
mov
cdq
mov
rol
pop
and
push
test
shl
add
call
and
inc
and
inc
dec
inc
jmp
fld
dec
mov
jmp
mov
les
pop
push
divps
sbb
ret
and
add
mov
imul
mov
ficom
jne
mov
and
xchg
cdq
jge
sbb
push
push
push
push
jl
mov
jle
bound
mov
mov
xchg
mov
xchg
sbb
test
add
and
repnz
inc
or
lahf
xchg
jno
adc
xor
xor
retf
or
pop
ins
fistp
nop
mov
push
std
and
imul
icebp
bound
push
adc
push
push
ret
push
add
std
in
movs
sub
(bad)
sub
pop
jmp
pop
int3
ja
inc
adc
xchg
cmp
pop
xchg
jnp
jae
cli
stos
loopne
loopne
push
imul
inc
inc
sub
mov
fs
add
in
ds
(bad)
fdiv
dec
fwait
retf
mov
sub
jp
(bad)
pop
add
mov
xchg
pop
mov
jg
icebp
adc
popa
je
bound
push
pop
sub
xor
in
pop
jl
push
icebp
int3
outs
pop
das
es
jb
sar
adc
cmps
test
jnp
dec
jg
fdivrp
jle
pop
sbb
sahf
jl
repz
int
xchg
popa
mov
or
sub
xchg
cmp
sbb
sahf
cmc
ins
pop
shl
push
scas
and
cmp
ret
inc
jmp
movs
mov
or
jge
cmps
lea
fcmovu
cs
inc
and
mov
inc
retf
pop
mov
push
inc
mov
xor
sahf
and
push
dec
int3
movs
xor
push
paddusw
es
inc
mov
adc
arpl
mov
jg
cld
jbe
jecxz
xor
(bad)
push
test
jmp
or
call
in
xchg
cli
ret
in
fnsetpm(287
ja
lock
xchg
inc
jae
sbb
pop
movs
clc
mov
mov
pop
sbb
test
add
dec
cmps
js
sub
fcmovnbe
fnop
or
pop
jge
sub
and
clc
inc
lahf
lahf
mov
xchg
xor
push
mov
xchg
cs
outs
shr
scas
adc
or
std
or
in
and
sar
push
dec
and
fwait
in
imul
mov
dec
lods
adc
mov
sub
iret
ficomp
test
jnp
inc
pop
xchg
(bad)
push
add
loope
dec
orps
pop
call
inc
sbb
dec
call
push
movs
jae
sbb
pusha
cmp
call
sbb
rcl
mov
stos
mov
jnp
mov
lahf
ficomp
mov
pop
adc
bound
cli
mov
and
add
aad
sub
or
xchg
inc
movs
(bad)
sbb
mov
popa
bound
xchg
sbb
xchg
int3
hlt
imul
pop
call
inc
or
outs
adc
lea
pop
loopne
or
cs
mov
mov
inc
fs
shl
jo
mov
adc
sub
test
adc
cmp
clc
(bad)
test
mov
xlat
mov
sub
xor
dec
or
sbb
xlat
stc
and
mov
jb
pop
test
add
rol
push
int
cmc
aad
jbe
jle
push
ficomp
loop
cwde
call
adc
xchg
xchg
mov
and
add
ds
pop
pop
jns
xor
xor
pop
fdivr
movs
je
cmps
sbb
icebp
dec
jmp
aaa
push
mov
sbb
pop
xlat
jge
mov
dec
and
clc
jbe
sbb
out
push
push
retf
mov
adc
cmc
int
sti
inc
je
sbb
mov
pop
imul
jmp
dec
stos
jp
fs
ins
jecxz
cmp
int3
sbb
imul
jp
out
inc
sbb
call
sbb
rcr
mov
and
push
xchg
test
sti
push
sar
mov
sub
mov
imul
stos
nop
push
sbb
in
inc
xor
ror
jne
xchg
jle
mov
xchg
mov
inc
sbb
push
dec
cmp
loopne
dec
sub
(bad)
cli
mov
enter
mov
lods
(bad)
pop
outs
xchg
ds
in
pop
sar
or
out
adc
and
mov
mov
mov
pop
adc
call
xchg
add
jnp
pusha
out
add
mov
mov
retf
in
sti
xchg
dec
and
cmc
stos
jge
(bad)
cdq
cmp
xor
inc
scas
adc
sub
mov
mov
cmp
movs
and
sbb
daa
mov
(bad)
retf
mov
ins
es
rcl
push
mov
shl
sub
mov
sbb
mul
xor
call
fmul
push
in
jl
dec
push
icebp
not
inc
arpl
dec
inc
aad
cmps
dec
gs
shl
inc
inc
xlat
xor
mov
popf
push
adc
adc
outs
fucom
call
or
sbb
movs
push
cmp
push
cmp
inc
jne
push
mov
bound
inc
push
out
(bad)
mov
cdq
int3
mov
icebp
pop
imul
jge
add
cmps
jg
stos
out
lea
sbb
sbb
int3
sbb
jmp
(bad)
xchg
xchg
mov
ins
xor
sub
pop
mov
jmp
mov
and
fcomp
and
mov
in
(bad)
add
mov
rcr
shr
cmp
test
xchg
sbb
out
das
push
fidivr
aaa
cmps
sar
sbb
sbb
jae
sub
out
outs
sti
je
pusha
lods
in
mov
cmc
retf
jle
jno
mov
inc
leave
xor
pop
pop
mov
outs
dec
mov
sar
retf
jnp
xchg
pushw
mov
jp
aam
xchg
jl
in
sub
cmp
xlat
jle
add
mov
dec
imul
mov
sar
mov
fisttp
and
or
xorps
sbb
mov
inc
jg
mov
jb
jl
test
push
fimul
repz
mov
xchg
scas
mov
imul
je
adc
int3
dec
fwait
mov
push
lahf
cmc
scas
repz
lea
push
add
sub
jmp
mov
push
lock
or
lock
cmp
stos
ins
int
pop
cmp
addr16
dec
adc
xor
cmc
push
cli
ins
movs
popa
xchg
and
cld
out
pop
sbb
popa
addr16
jl
mov
mov
pop
jnp
retf
adc
pop
scas
sar
bound
andnps
mov
rcl
or
xor
in
jg
js
outs
out
jnp
xchg
inc
xchg
scas
push
das
dec
mov
pop
inc
and
jl
sub
in
shl
(bad)
packsswb
and
loope
jnp
add
push
cli
and
rol
addr16
cmp
lea
inc
cmp
mov
xadd
jmp
cs
fwait
dec
fdivr
popf
mov
jle
cdq
jb
loopne
icebp
pop
in
test
xchg
(bad)
and
lods
mov
and
loop
ja
adc
call
inc
aad
ficomp
push
dec
dec
neg
jbe
jge
dec
adc
addr16
push
(bad)
(bad)
rcl
inc
mov
pop
mov
out
push
lods
add
mov
dec
pop
aam
cld
pop
popa
xor
test
mov
out
fist
dec
lods
test
adc
jg
sbb
xchg
pop
jge
cmp
mov
lds
out
popf
add
xchg
jo
cmp
jg
out
int3
push
mov
scas
jnp
push
js
or
xchg
mov
aad
pushf
or
jae
ds
and
xchg
ins
pop
sub
sbb
cmp
fimul
dec
popf
bound
push
je
or
lds
leave
cdq
(bad)
mov
mov
sub
out
xlat
sahf
mov
pop
add
gs
sahf
and
mov
jns
add
jae
pop
sub
xlat
in
fs
sub
data16
push
push
xor
jmp
xchg
lock
mov
jno
jg
and
scas
cmp
lods
std
sub
dec
je
lds
sub
or
sbb
sub
or
fs
pop
jmp
dec
lods
in
rcr
mov
(bad)
loopne
xor
xchg
loop
(bad)
enter
wbinvd
push
mov
or
push
xchg
enter
mov
fcomp
push
sbb
sbb
dec
shl
inc
or
sbb
jp
or
sbb
sbb
mov
pop
inc
jbe
adc
adc
dec
dec
int
push
sbb
call
mov
lods
scas
xchg
test
push
cmp
retf
cdq
sbb
sbb
push
sbb
jae
sti
bound
push
shr
movs
mov
add
fwait
sar
pushf
aam
movs
cmp
retf
nop
jbe
dec
or
mov
xchg
mov
adc
fbstp
nop
call
ds
sub
pop
mov
frstor
or
push
jbe
pop
pop
mov
rol
dec
fiadd
nop
xor
xor
jo
xchg
inc
push
popf
ds
push
mov
aaa
mov
add
and
loop
inc
mov
sahf
dec
or
push
mov
jecxz
adc
lahf
test
popa
addr16
in
mov
lea
mov
mov
xor
sti
ss
mov
inc
push
adc
cs
pop
push
jo
mov
cmp
xchg
adc
icebp
imul
add
(bad)
js
mov
or
outs
lahf
in
mov
hlt
mov
add
cmp
xchg
xchg
mov
cmp
in
mov
jnp
xchg
push
mov
cmp
(bad)
mov
pop
lahf
lods
cmps
test
sub
aad
daa
loope
retf
push
sub
push
(bad)
mov
arpl
(bad)
(bad)
imul
mov
leave
and
loope
add
or
icebp
xchg
mov
jns
fld1
iret
xor
xchg
js
test
mov
push
into
sbb
lods
iret
cmp
les
or
xchg
push
es
inc
(bad)
cld
mov
int3
fs
mov
cmp
fidivr
jmp
add
fldpi
mov
repz
cmps
sbb
inc
jo
sbb
mov
xlat
mov
cmps
stc
das
xor
movs
lods
xchg
shr
iret
pop
cwde
fbstp
xor
out
aad
xchg
sub
es
fcomp
in
push
retf
mov
into
test
push
dec
sahf
out
jnp
dec
push
in
adc
fild
pop
leave
ins
mov
mov
sub
shl
fsubr
(bad)
mov
mov
inc
mov
mov
mov
or
dec
and
cmps
pop
adc
test
push
dec
pop
sbb
daa
popf
movs
pop
inc
int3
sti
cwde
mov
jle
iret
pop
add
pop
(bad)
js
aaa
mov
ror
cli
test
xchg
leave
mov
mov
cs
xor
push
adc
enter
je
and
sub
pop
ins
push
je
push
call
jbe
and
scas
push
lahf
sub
mov
and
ins
mov
addr16
or
cdq
ds
(bad)
repz
ror
fild
(bad)
aam
cmps
cmp
dec
push
int3
imul
inc
in
(bad)
and
xlat
cmp
les
fild
push
add
push
les
jo
outs
inc
add
test
stc
test
ja
dec
jae
and
fistp
cmp
imul
inc
ins
aaa
adc
inc
loopne
aad
out
and
adc
gs
call
xchg
aas
loope
mov
iret
push
mov
test
aaa
pop
fs
mov
jno
cmp
mov
arpl
out
ficomp
adc
and
or
mov
inc
cdq
lods
mov
mov
iret
and
into
stos
cli
xchg
push
jbe
aam
lods
(bad)
adc
sbb
ret
or
adc
xor
les
js
lahf
nop
dec
fs
or
and
mov
mov
pop
popf
xlat
sub
mov
shld
lods
test
aas
out
jb
dec
sbb
jmp
clc
vpslld
(bad)
scas
into
add
mov
cmc
mov
outs
(bad)
push
bound
clc
lods
jns
inc
push
fld
ret
test
fadd
add
cvtdq2ps
pusha
xchg
sahf
push
sbb
je
push
add
xor
daa
mov
xchg
inc
out
cmps
xchg
push
jl
scas
push
nop
jl
jno
ss
and
sub
adc
dec
cmp
neg
scas
and
(bad)
(bad)
(bad)
and
pop
clc
jnp
out
mov
idiv
push
bsr
jle
(bad)
loop
(bad)
pop
add
push
ficomp
fstp
push
sub
cmp
inc
bound
inc
adc
data16
daa
dec
fdivr
mov
out
or
mov
les
xchg
dec
ret
sbb
xor
push
pop
sti
cmp
sbb
retf
bound
leave
xor
adc
mov
sub
sti
mov
jne
fdivr
push
xchg
push
pop
test
pop
leave
add
adc
inc
fcomp
pop
ficom
out
push
add
dec
lock
lahf
outs
sbb
jne
aas
mov
pop
jp
scas
arpl
sbb
scas
xchg
push
pop
inc
scas
js
dec
xchg
retf
xor
xchg
jno
xchg
jbe
test
addr16
rcr
inc
mov
popa
test
mov
into
les
(bad)
add
in
test
out
leave
xor
mov
out
xor
mov
jno
or
jbe
inc
add
js
jbe
push
jb
into
(bad)
mov
leave
dec
scas
cmp
xlat
in
jmp
and
and
dec
fsubr
mov
or
xor
mov
fs
mov
(bad)
fwait
jb
push
sub
dec
outs
cmp
fwait
stos
fcomp
(bad)
mov
mov
bound
lds
jmp
mov
outs
ja
lock
jne
sub
dec
fidivr
fwait
add
pop
stos
or
arpl
xchg
out
cmc
repz
pop
xchg
pop
sub
imul
int3
loopne
js
test
out
cmc
xor
push
adc
push
sub
and
mov
mov
pop
sbb
fst
scas
adc
or
aam
sti
gs
mov
inc
push
push
and
jo
xlat
push
loopne
fadd
jp
mov
lods
mov
and
retf
cmovge
jae
inc
ss
jp
inc
iret
inc
loope
repnz
mov
mov
pushf
jnp
mov
xor
loopne
test
jle
outs
arpl
and
bnd
mov
push
or
fld
pop
je
push
mov
(bad)
mov
lea
cmc
clc
cmp
jmp
pop
mov
adc
sub
hlt
int
imul
aaa
jge
lea
sub
stos
sbb
xchg
jae
or
imul
jae
xchg
adc
loope
rcl
(bad)
retf
adc
int
adc
jae
(bad)
loope
xor
ins
in
pop
adc
xchg
sub
push
std
inc
outs
test
mov
inc
shl
(bad)
xchg
cmp
and
cdq
or
(bad)
sub
sub
inc
leave
inc
dec
outs
outs
inc
and
dec
jg
scas
stc
dec
inc
mov
push
xchg
test
or
mov
xchg
test
mov
cmps
mov
cmps
in
cmp
push
mov
sbb
out
jl
lods
sbb
int3
fcom
push
je
sbb
pop
sahf
lock
stos
out
jnp
xchg
cmp
xchg
mov
sbb
in
pop
sub
sbb
js
pop
sub
jnp
mov
and
scas
add
out
movs
outs
mov
and
dec
mov
jmp
scas
lods
and
inc
enter
adc
dec
lock
mov
push
pop
out
inc
out
iret
cmc
cmp
sub
dec
mov
cld
inc
mov
addr16
gs
stc
cmps
rcl
push
sub
into
xor
test
dec
and
mov
cmc
jns
cmp
mov
xchg
mov
fcomp
cmps
movs
jb
mov
(bad)
clc
shl
push
add
cli
test
mov
dec
scas
push
test
add
xchg
adc
push
pop
cmc
sub
pop
mov
push
mov
mov
xchg
pop
jne
inc
sbb
icebp
dec
xor
jge
or
add
mov
mov
mov
cmc
push
aam
das
push
pop
sub
stos
arpl
fcom
fxch
adc
rcl
mov
push
push
add
xchg
aas
fisttp
sbb
jl
pop
std
mov
mov
(bad)
push
mov
icebp
mov
ret
mov
jno
leave
sbb
jbe
push
outs
aaa
ss
nop
test
mov
fadd
xor
adc
rol
mov
fbstp
inc
adc
add
xchg
pushf
mov
xchg
pop
ret
fucomp
in
clc
ret
rol
scas
sar
and
icebp
ret
adc
daa
je
pop
imul
movs
imul
inc
in
lds
test
test
ins
and
push
mul
or
ja
cmps
in
stc
pop
sahf
test
fwait
inc
test
arpl
leave
mov
into
xlat
adc
and
cmc
jns
fistp
into
sub
dec
mov
sti
mov
adc
sub
jmp
xchg
or
hlt
ret
cmps
(bad)
mov
(bad)
mov
or
cli
or
scas
hlt
xchg
jae
ins
cld
fistp
into
and
mov
xchg
sub
imul
mov
adc
or
mov
fild
inc
in
bound
sbb
shl
fdiv
arpl
ds
pop
call
inc
sbb
lods
ss
cli
fnstsw
jno
sbb
cld
ret
or
test
mov
or
push
mov
sbb
add
jno
ret
enter
mov
loopne
xchg
jae
loope
xchg
cmps
dec
ja
fbld
js
push
inc
mov
iret
stos
div
sbb
mov
sahf
neg
pop
adc
jbe
nop
mov
(bad)
pusha
push
mov
and
mov
retf
mov
fmul
cli
mov
lods
and
xchg
into
xchg
aam
rcl
mul
xor
mov
sub
jge
pop
mov
add
mov
mov
xchg
movs
ret
cmp
outs
test
sub
inc
push
dec
jns
fisub
retf
or
out
retf
test
fsubr
cld
dec
mov
ffreep
mov
jno
das
xchg
fwait
ror
jb
inc
dec
fmul
mov
xchg
aas
mov
mov
retf
xchg
pop
outs
push
popa
and
in
pop
dec
sub
shl
mov
or
inc
pop
push
into
(bad)
fcom
mov
fidivr
add
xor
sbb
mov
hlt
adc
hlt
stc
inc
lea
inc
ja
(bad)
icebp
mov
lock
mov
push
add
xchg
cmp
jae
adc
pushf
xchg
aaa
mov
xor
xor
sbb
rcl
dec
inc
dec
push
xchg
aam
fcomip
mov
into
fs
rcr
mov
sub
adc
fcmovu
jg
jbe
jmp
mov
int3
lahf
mov
(bad)
(bad)
cs
or
pop
inc
aam
push
push
mov
hlt
out
and
test
sub
mov
ins
push
scas
dec
inc
xchg
movs
jecxz
adc
adc
clc
lock
push
pop
xor
mov
retf
rol
xor
add
leave
scas
adc
adc
loopne
and
int3
lods
retf
popa
jno
jp
push
and
or
or
or
or
cmps
imul
and
xchg
sub
cmp
mov
jp
add
aad
cmp
add
retf
pop
mov
std
add
cmp
imul
xchg
cwde
jno
xlat
imul
add
mov
repnz
push
sub
test
test
int3
mov
addr16
cdq
ret
pop
imul
js
pusha
add
mov
sub
fs
xchg
scas
in
jo
pop
(bad)
mov
clc
ret
nop
cs
out
jne
frstor
mov
push
frstor
xchg
add
mov
mov
xor
jmp
daa
fstp
out
int3
xchg
lahf
pop
or
jecxz
push
(bad)
jns
aad
scas
shl
je
loopne
dec
stos
nop
repnz
xchg
and
jmp
push
data16
mov
push
or
fsub
and
iret
push
adc
outs
and
inc
pop
cmps
cwde
(bad)
inc
pop
pusha
lods
inc
ins
inc
aas
push
test
inc
into
ss
arpl
fistp
and
into
fdivrp
push
add
pop
add
rdtsc
xchg
pop
mov
adc
enter
test
jns
icebp
cmps
mov
mov
push
bound
mov
nop
xor
lods
cmp
inc
push
adc
arpl
pop
inc
xchg
pop
mov
pop
test
adc
hlt
xor
mov
fld
cmp
and
sahf
data16
jecxz
cmps
ins
sbb
aas
mov
xchg
outs
sbb
pop
adc
daa
outs
in
jl
test
out
add
jl
popf
in
pop
popf
mov
retf
inc
jle
jp
mov
movs
jge
mov
in
cmc
inc
cmps
aas
inc
jo
dec
sub
ror
inc
mov
sub
jle
repz
jg
imul
inc
add
nop
xor
cwde
scas
es
sub
outs
sbb
hlt
dec
mov
shl
mov
dec
xor
mov
xor
xor
cmps
inc
in
and
xchg
pop
xlat
push
inc
setns
cs
nop
xor
icebp
aad
mov
add
and
hlt
out
arpl
lock
std
jl
add
pop
fwait
data16
aad
sbb
push
sbb
adc
loop
call
rep
xchg
leave
xchg
ret
push
mov
xchg
mov
dec
nop
adc
dec
inc
dec
adc
adc
jge
adc
sti
inc
cmp
xchg
xlat
adc
cmp
ins
les
adc
xchg
aaa
cwde
je
adc
xor
pop
cmp
aaa
inc
jbe
sub
outs
pop
aaa
movs
dec
push
mov
fs
into
mov
repnz
and
scas
jbe
cs
xor
or
call
pop
test
(bad)
lock
mov
ret
call
jne
sub
pop
cmc
jbe
loope
cmps
push
test
iret
(bad)
scas
sub
movs
add
test
ds
add
jmp
pop
inc
cmp
jg
das
out
dec
xor
clc
dec
out
inc
in
cld
jge
out
jbe
jno
push
lds
sahf
movs
ins
dec
aad
sbb
inc
cdq
cmp
sub
lock
adc
add
push
xor
scas
sbb
mov
fnstenv
mov
es
jecxz
pop
fs
sbb
into
popf
enter
pop
cmp
xor
add
in
std
jb
add
dec
test
call
(bad)
dec
into
cli
push
loopne
push
sub
test
xchg
jecxz
dec
ja
push
mov
dec
(bad)
test
cmp
outs
jmp
pop
out
sub
pop
push
pop
cwde
sub
bound
data16
jnp
push
repz
push
jbe
xchg
or
ins
ins
das
cwde
mov
cs
or
cmp
mov
hlt
fisub
add
call
jb
movs
int
out
dec
ret
and
cmp
std
ss
mov
test
scas
push
sub
pop
jp
popf
nop
mov
imul
repnz
and
mov
push
mov
pop
enter
push
sub
fidivr
push
inc
jnp
sub
add
mov
pop
xchg
js
ja
loope
pusha
adc
or
nop
(bad)
les
mov
(bad)
push
out
inc
popa
xchg
dec
mov
fbstp
imul
in
and
stos
pushf
push
mov
outs
sub
mov
out
push
clc
mov
push
and
outs
dec
inc
add
gs
cld
xchg
into
into
add
xchg
ror
xchg
or
nop
fwait
jmp
ficomp
pop
pop
jmp
ret
add
movs
test
mov
mov
call
out
inc
fwait
addr16
test
loopne
mov
push
add
and
test
ja
sub
add
cmp
jmp
dec
pop
scas
fs
add
adc
in
and
cmps
mov
jae
test
or
mov
mov
xor
pusha
mov
jmp
inc
pop
(bad)
push
push
mov
popf
in
or
pop
loop
setg
jmp
add
sbb
push
mov
add
mov
push
gs
cmp
cmp
in
loope
popf
mov
fisub
pop
test
stos
and
pop
imul
or
pop
push
add
push
fcom
sbb
movs
pop
dec
sub
mov
jb
pop
jl
ret
fcomp
std
or
xchg
sbb
push
fist
(bad)
popf
jae
repz
jno
pop
(bad)
sbb
es
retf
ins
or
push
cmp
add
adc
arpl
icebp
pop
or
pop
fsub
jmp
inc
imul
mov
adc
in
adc
fdiv
(bad)
dec
cdq
test
xchg
xor
pusha
sub
cwde
cdq
cli
(bad)
jbe
pop
push
jae
jecxz
scas
cmc
and
popf
enter
retf
xchg
mov
mov
int3
lea
sbb
stos
stos
scas
cdq
imul
mov
iret
pushf
sbb
cmp
and
pop
add
mov
js
jmp
mov
push
add
pop
xor
(bad)
out
rol
cmps
sub
cmp
sub
fisub
xbegin
mov
adc
bswap
ds
rcr
adc
scas
mov
dec
lahf
adc
jo
dec
push
movs
add
and
pop
loopne
daa
outs
sub
mov
fsubr
je
mov
xchg
inc
sar
daa
adc
lods
xchg
dec
jmp
div
(bad)
ss
add
jmp
lods
mov
mov
loope
mov
rol
push
jp
dec
cmp
loop
xchg
push
add
lods
sti
xchg
inc
call
add
(bad)
xchg
fwait
add
call
jge
mov
pop
cmp
dec
adc
fimul
sahf
jmp
xlat
aaa
outs
jns
or
xor
pop
adc
out
adc
ds
mov
loopne
lods
mov
mov
inc
pop
push
jge
daa
in
shr
adc
scas
repnz
aam
repnz
jecxz
les
pop
outs
(bad)
sbb
adc
or
add
ss
mov
pop
icebp
mov
push
sub
and
cmovs
xor
adc
hlt
and
or
xor
(bad)
jp
sbb
sbb
adc
mov
out
adc
in
(bad)
std
xor
je
xor
sbb
mov
or
or
daa
push
test
nop
xchg
cmp
stos
aam
daa
xchg
pop
repz
or
(bad)
leave
sub
sbb
retf
ror
les
jbe
mov
shl
inc
inc
and
fst
cmp
out
xchg
pop
jb
in
cmp
test
push
mov
mov
xchg
sub
iret
jp
retf
daa
cmp
jp
call
ficomp
mov
dec
mul
stos
xchg
or
mov
add
pop
pushf
ror
push
mov
out
outs
fidivr
sbb
sahf
sbb
(bad)
dec
xor
cmp
loopne
in
lods
adc
cmps
(bad)
push
ds
jnp
mov
daa
les
retf
xor
iret
lahf
sbb
lea
aas
pop
xor
out
ret
add
xchg
pop
add
mov
cwde
mov
enter
lahf
pop
xor
lods
push
or
test
mov
test
test
push
adc
shr
dec
or
cmp
mov
addr16
leave
mov
lods
push
test
mov
fwait
mov
mov
mov
pop
mov
je
fist
adc
inc
adc
push
adc
mov
ds
dec
xor
in
mov
pop
movs
sbb
sub
lahf
xchg
add
mov
xchg
lock
popa
dec
popa
fdivr
in
mov
push
retw
mov
sahf
call
jne
lods
loop
retf
dec
fs
pusha
movs
jecxz
mov
mov
inc
jb
loop
psubusw
call
xor
cmc
ficom
mov
cmc
inc
repnz
xchg
mov
push
ins
mov
cwde
pop
inc
add
btr
mov
movs
xlat
mov
das
mov
add
aad
(bad)
jge
and
pop
jmp
inc
mov
pop
fiadd
mov
ror
ins
fmul
sti
ret
mov
(bad)
(bad)
cmovge
fsubr
nop
addr16
mov
xor
and
std
sti
stos
sub
xchg
push
cmp
ror
pop
pop
aad
xor
mov
mov
(bad)
xchg
mov
nop
mov
push
lods
lea
push
mov
ret
dec
jmp
popa
push
mov
lock
mov
mov
dec
ja
gs
sub
ror
jg
adc
adc
xor
cmp
nop
jne
imul
add
in
adc
add
jo
xor
fmulp
inc
lahf
sahf
pop
push
mov
mov
fdivp
loopne
outs
mov
add
sbb
aam
push
xchg
cmps
pop
sbb
jecxz
adc
imul
push
sub
xchg
fidivr
xchg
addr16
push
cmp
cli
mov
fistp
or
jge
rcl
push
mov
outs
jmp
psubsb
pop
mov
fwait
dec
movs
sahf
lods
cmp
cld
mov
or
leave
das
pop
inc
fs
xchg
mov
mov
mov
jmp
add
cmps
out
outs
cmp
xchg
or
jo
enter
push
pop
mov
inc
lds
cwde
cs
aaa
jmp
jae
xor
xchg
or
inc
cs
test
sub
mov
into
jnp
iret
test
mov
jmp
aas
mul
adc
inc
ss
mov
xchg
mov
jnp
add
mov
popa
arpl
push
out
icebp
or
js
jo
xchg
outs
ror
jl
and
push
sbb
(bad)
xlat
push
mov
ret
inc
imul
imul
jne
xchg
sbb
push
leave
(bad)
repnz
int3
mov
mov
add
leave
dec
in
les
stc
sbb
push
xor
sar
popf
lea
outs
mov
ds
inc
rep
inc
das
ret
xlat
xchg
jns
inc
(bad)
cmp
sub
sub
rcl
mov
sbb
je
jmp
enter
push
mov
out
xchg
fs
int
and
add
xor
and
xchg
xchg
mov
and
cli
xor
lods
add
retf
(bad)
sbb
sub
(bad)
(bad)
sub
mov
adc
ja
fnstenv
sbb
inc
stos
xchg
pop
sub
jg
retf
test
mov
mov
or
loopne
xlat
dec
xor
jne
sahf
test
sti
jecxz
pop
mov
stos
cmc
inc
ds
lahf
test
scas
mov
ss
mov
test
js
std
frstor
call
aam
dec
sbb
lods
xchg
mov
xor
jb
in
cmp
jg
mov
rol
mov
scas
pop
push
xor
pcmpgtb
fdiv
xchg
inc
ins
sub
sbb
pop
push
mov
scas
push
mov
rol
jmp
cmc
push
rcl
aas
push
cmps
push
mov
inc
test
(bad)
mov
in
loopne
lock
jb
xlat
ret
inc
fist
lds
clc
fs
imul
fwait
pop
sti
aas
sub
jmp
ins
clc
loopne
retf
add
adc
scas
jo
sbb
aam
xor
cmp
repnz
push
out
enter
cmp
ja
stos
mov
push
xchg
or
movs
ret
push
mov
push
sub
in
sbb
xor
fcomp
add
or
cmc
lds
jmp
xchg
dec
aad
lds
mov
jmp
lods
mov
pushf
cwde
in
out
cmp
fidivr
sub
fldcw
push
sahf
dec
stos
mov
dec
xchg
std
hlt
cmp
ret
push
jo
outs
es
add
pop
push
inc
dec
sbb
adc
scas
hlt
icebp
ins
fucom
lods
and
fidivr
aaa
(bad)
in
xchg
cli
inc
das
ret
push
pop
xor
test
jb
stos
iret
mov
adc
iret
sub
adc
cdq
scas
add
movs
loope
std
std
add
push
xchg
and
test
aad
std
mov
pushf
into
popf
outs
sub
push
fxtract
mov
inc
mov
stc
fdivr
dec
pusha
out
xchg
test
mov
adc
sbb
push
and
sub
in
retf
push
jmp
out
mov
xor
inc
fs
aam
xor
pop
out
inc
stos
hlt
mov
jle
dec
jnp
repz
cmp
xchg
cmp
fldln2
lods
cmps
fwait
sub
inc
pushf
test
data16
push
aad
out
mov
inc
stos
movs
cmc
xor
pop
ja
adc
push
out
out
add
push
sbb
into
ja
outs
xchg
pop
int3
in
jl
fimul
in
call
sbb
sub
adc
push
imul
dec
lock
fmul
lea
(bad)
aas
jae
in
lods
or
scas
sbb
outs
(bad)
scas
(bad)
(bad)
out
adc
retf
mov
push
mov
aaa
jg
xor
sahf
imul
aaa
lods
pop
inc
xchg
push
lods
pop
mov
push
test
inc
dec
sbb
xor
ret
jp
or
scas
idiv
pop
push
mov
sub
add
in
lock
inc
push
inc
cli
push
or
add
iret
jns
cmp
jae
jns
cld
jb
scas
adc
push
xor
xchg
dec
jge
shl
or
adc
inc
(bad)
adc
mov
(bad)
jp
dec
ret
stos
clc
xor
aad
pop
xchg
dec
jbe
int3
(bad)
sbb
cwde
repnz
test
push
add
mov
out
inc
and
mov
in
mov
ja
lods
test
stos
push
popf
mov
pop
movs
jmp
sub
lahf
dec
mov
call
dec
inc
jne
movs
push
mov
test
stos
pop
xchg
inc
stos
xor
(bad)
adc
or
mov
ins
lds
inc
jl
in
movs
adc
jno
cmc
push
sbb
pop
jl
sti
and
mov
pop
mov
mov
fs
cmp
lea
jne
pop
ret
cwde
xor
dec
mov
adc
inc
sub
jbe
(bad)
popf
pop
scas
dec
pop
out
in
sahf
mov
or
imul
dec
imul
mov
jno
sar
and
sub
bound
pop
push
cmp
cmc
fcom
jnp
inc
pop
loopne
xchg
adc
fwait
xchg
adc
inc
push
jo
dec
enter
retf
fisub
mov
call
pop
call
inc
ds
pushf
mov
loopne
aas
add
rcl
in
movs
sbb
(bad)
jb
pop
sub
nop
inc
jns
cmc
in
cmp
jo
ins
(bad)
cs
sbb
jns
rol
mov
aaa
leave
inc
out
mov
(bad)
addr16
pop
ins
cwde
sub
or
sub
dec
in
pop
loopne
ror
(bad)
imul
loope
and
dec
inc
fnstenv
jb
mov
(bad)
fidivr
stos
cmp
pusha
xor
pop
scas
add
mov
mov
fbld
jnp
cmps
not
cmp
clc
cmp
push
mov
aad
sub
imul
dec
mov
dec
mov
dec
std
inc
je
xchg
pop
and
or
jnp
test
in
jecxz
retf
sbb
pop
imul
pop
fs
loopne
mov
dec
adc
and
adc
aad
mov
mov
and
fnstsw
fucomi
adc
mov
or
pop
mov
xchg
stos
imul
add
lock
mov
(bad)
lods
push
dec
loop
pop
xor
sub
lahf
and
cld
(bad)
fmul
(bad)
jmp
xchg
and
out
inc
and
or
cmp
mov
pop
xor
mov
test
inc
das
out
rcl
in
push
and
adc
mov
xlat
mov
stos
mov
mov
and
(bad)
and
xor
fisubr
retf
je
je
jne
mov
xor
xchg
nop
fs
pushf
lods
dec
test
stc
mov
in
mov
les
jbe
popf
adc
popf
jmp
push
xor
into
sbb
xchg
cmp
cmps
ret
stos
loope
inc
cmps
rcl
in
(bad)
mov
xchg
jnp
add
call
add
pop
mov
xchg
and
dec
dec
sub
and
add
dec
jne
xchg
and
xor
mov
fmul
out
shl
inc
rcl
fucomi
jle
pusha
popf
dec
push
out
addr16
mov
dec
mov
mov
sar
outs
push
mov
ret
jmp
push
mov
sbb
clc
je
cmp
pop
(bad)
jmp
jnp
adc
pop
jns
xor
dec
arpl
je
cld
sub
lock
lea
dec
sbb
jno
mov
out
xchg
mov
pop
inc
mov
mov
cmps
popa
ficom
or
mov
test
cmp
mov
repz
shr
xchg
or
xor
scas
mov
leave
repnz
(bad)
in
cmp
ret
adc
sbb
aad
sahf
or
cmp
pop
fisub
adc
repnz
fistp
sub
sub
push
out
jb
(bad)
xchg
pop
jmp
push
std
loop
ror
sar
cmp
xor
xor
pusha
cmp
sub
mov
hlt
add
call
aad
cmps
add
icebp
call
add
xchg
inc
mov
fwait
push
out
jmp
scas
setno
adc
xchg
pop
push
and
int3
into
add
xor
pop
aas
xchg
mov
pop
mov
sbb
popa
into
ret
push
movs
mov
sub
lds
pop
sar
retf
fs
ror
and
movs
js
lahf
ins
cmps
dec
ins
ror
fnsave
pop
mov
lahf
movs
es
mov
dec
loope
or
cwde
push
ss
bound
cmp
pop
or
mov
add
sub
imul
vfrczpd
xor
or
mov
daa
daa
outs
loop
jecxz
cmp
adc
outs
imul
mov
add
sbb
not
sbb
jecxz
rol
sbb
test
sbb
es
outs
jg
push
adc
fwait
jb
out
lock
xchg
adc
in
sub
(bad)
cmp
or
cmps
ss
adc
mov
retf
jmp
and
sub
jns
and
iret
dec
mov
xor
rcr
cwde
pop
hlt
jne
mov
mov
jle
pop
or
and
jnp
mov
stos
xchg
dec
loop
lds
pop
push
dec
sub
add
or
push
and
push
movs
ins
adc
push
cwde
inc
push
cmp
pop
imul
es
cmps
nop
stc
call
lds
test
std
adc
aas
imul
pop
aad
pop
aam
(bad)
cmp
lea
enter
rol
mov
xor
retf
(bad)
iret
iret
adc
pop
push
and
jle
sbb
(bad)
sar
pushf
ja
jne
inc
sar
inc
les
dec
mov
sbb
cli
dec
in
fimul
pushf
movs
call
and
xchg
and
jl
xchg
xor
push
clc
ret
repz
mov
clc
sub
pop
adc
fist
dec
stc
rcr
test
ds
mov
mov
mov
pop
sub
inc
arpl
jno
pop
mov
cmp
and
js
rcl
or
push
cmp
hlt
mov
dec
out
inc
mov
add
mov
(bad)
sahf
pop
and
fstp
sub
adc
and
nop
push
mov
sbb
cmp
ror
clc
or
(bad)
in
ret
jl
or
pop
repnz
aad
cmps
scas
add
and
inc
sbb
mov
lds
ret
dec
mov
mov
fsub
scas
jge
sub
lahf
push
mov
data16
sub
sar
push
mov
fwait
mov
arpl
jns
dec
xchg
add
shr
cmps
ret
clc
adc
sub
add
cmp
movs
jns
push
sar
cli
pop
add
push
jbe
shl
xor
pusha
adc
pusha
sti
dec
test
iret
and
loopne
push
inc
les
xlat
mov
pop
test
and
jnp
ud2
push
add
(bad)
sub
dec
rcl
pop
dec
add
jmp
(bad)
fiadd
lods
add
(bad)
imul
pop
pop
js
adc
pop
xchg
xchg
pop
in
and
test
sti
(bad)
jb
sub
jg
jmp
dec
cmp
lock
add
(bad)
sar
out
int3
out
xor
(bad)
in
inc
popa
add
call
cmp
icebp
repz
sbb
stc
mov
bound
stos
scas
repz
adc
das
push
or
sbb
ret
inc
inc
mov
xor
popa
vpaddusb
pop
shl
sub
ins
sbb
sti
(bad)
rol
or
mov
xlat
adc
data16
call
jae
mov
sbb
and
cmp
sbb
mov
pop
ret
into
xor
repz
addr16
push
xchg
repz
push
mov
cld
dec
pop
mov
test
dec
fisub
push
jb
and
repnz
cmc
test
jmp
sbb
ins
adc
out
dec
push
dec
xor
jmp
jl
fisttp
mov
or
pop
das
and
cmp
fidiv
in
fild
mov
dec
aas
retf
push
jo
pop
call
sbb
enter
sbb
mov
lds
sahf
sub
push
les
je
inc
rol
les
add
mov
mov
add
push
outs
outs
xchg
test
call
cli
push
(bad)
jb
int3
inc
mov
or
dec
inc
jecxz
sub
xchg
cwde
repz
pop
pop
leave
test
cli
inc
test
jge
adc
and
inc
xchg
xor
cmps
or
je
mov
sub
push
pop
push
push
or
mov
push
fmul
pop
inc
aas
jecxz
jb
loope
int
adc
sar
push
jne
clc
mov
cmp
mov
int
inc
addr16
mov
movs
sub
push
pop
inc
mov
fs
dec
ret
mov
lock
xor
cmc
mov
inc
xlat
push
lahf
aaa
push
push
mov
or
dec
std
jb
mov
fdivp
in
sub
jne
stos
lahf
js
mov
stos
sub
ret
out
ss
ins
inc
int3
sbb
neg
(bad)
jmp
push
xor
in
movs
clc
push
test
stc
dec
(bad)
mov
addr16
lods
test
out
cli
cmp
sub
push
mov
fstp
add
lahf
pop
(bad)
cmps
sbb
leave
jno
retf
xchg
arpl
arpl
cli
push
(bad)
mov
jecxz
or
ds
push
mov
jbe
stos
jns
jmp
stc
mov
or
movs
mov
adc
pop
je
addr16
mov
and
shl
mov
mov
sbb
adc
ss
inc
sti
das
push
pop
mov
lahf
adc
int
movs
pop
inc
inc
mov
push
push
hlt
pop
int3
outs
jp
mov
fst
ja
sar
xor
and
cld
popf
xchg
loop
(bad)
ret
neg
ret
inc
adc
and
cli
xor
ds
mov
popa
std
cmp
(bad)
sbb
ret
js
cmps
lods
xor
xlat
add
sub
in
ror
pmulhuw
and
cmp
cs
dec
xchg
jmp
inc
cmp
xchg
popa
push
dec
dec
stos
and
scas
in
js
dec
aaa
lods
fs
cmp
les
and
jecxz
enter
jge
adc
daa
ret
enter
push
push
cmp
into
dec
lds
arpl
outs
les
jb
cmp
idiv
push
cli
loopne
sbb
sbb
fcomp
or
retf
daa
jp
cmp
and
push
out
pusha
neg
pop
stc
aas
mov
mov
in
movs
jbe
ins
and
push
dec
test
push
pop
and
push
aam
iret
int3
sti
or
pop
or
test
inc
aas
and
hlt
out
mov
loop
or
cmp
pusha
cmp
sti
xlat
sub
add
movs
fisttp
push
jo
push
out
xchg
or
imul
cmps
fs
test
add
push
and
(bad)
hlt
fist
xlat
dec
rol
xlat
mov
or
jbe
mov
(bad)
icebp
cmp
dec
dec
jmp
arpl
sub
adc
add
fist
imul
sub
fild
in
mov
push
lock
addr16
cli
jl
cdq
out
in
imul
(bad)
das
pop
jmp
mov
(bad)
imul
aad
cmp
or
cmps
add
dec
test
adc
pop
or
out
fcomp
js
jmp
xor
sub
or
mov
sbb
in
in
mov
xor
and
rcr
add
repz
xor
int
loope
cwde
mov
mov
jae
or
pop
inc
iret
imul
clc
adc
jae
aam
and
mov
gs
stos
out
jo
cmc
(bad)
push
inc
mov
push
addr16
pop
push
jns
in
sub
pushf
inc
jnp
xchg
fisttp
in
iret
cld
aaa
mov
pop
pop
arpl
adc
mov
mov
push
mov
repnz
push
sahf
jns
ret
aam
pop
adc
rol
movs
test
sbb
(bad)
fiadd
dec
fcmovnu
aaa
in
mov
xlat
push
push
sbb
rcr
not
fistp
mov
or
loop
aad
jmp
lods
adc
adc
adc
push
cwde
out
mov
bswap
imul
repz
aam
jecxz
arpl
pop
jns
xor
push
repnz
movs
in
mov
dec
dec
add
pusha
xor
ja
scas
mov
pop
cmc
out
out
lock
add
or
mov
xchg
mov
dec
dec
popf
xchg
lods
shl
leave
cdq
loope
ins
and
jmp
adc
mov
(bad)
pusha
ror
outs
nop
fild
mov
sti
jmp
xor
inc
in
ficomp
dec
fdivr
jmp
imul
sub
fimul
in
cmp
dec
adc
outs
cmc
aam
or
fidiv
mov
shl
stos
fidiv
test
and
xor
and
pop
dec
icebp
xchg
dec
(bad)
loopne
sbb
inc
pop
cmp
outs
jne
js
popf
pushf
inc
fwait
sbb
pushf
sub
outs
dec
mov
add
je
je
xchg
into
retf
(bad)
sti
add
mov
and
mov
adc
sub
jg
mov
lea
fst
lahf
cmps
xor
push
sub
add
retf
cs
or
sbb
pop
mov
mov
outs
adc
sahf
rol
and
push
stc
in
int3
cld
inc
mov
mov
jne
mov
xchg
fs
outs
mov
pand
or
in
in
adc
or
fbld
adc
or
cli
xor
or
jae
adc
daa
fstp
repz
jns
dec
xchg
inc
xor
ret
pop
js
push
(bad)
cld
imul
iret
shl
jmp
dec
rcr
cwde
movs
aam
dec
jp
int
sbb
pop
cmp
stos
repnz
les
cmp
dec
rol
scas
add
add
lea
pop
shl
sub
sbb
fmul
mov
mov
mov
adc
int
gs
mov
aaa
arpl
cmps
jb
xchg
mov
dec
adc
push
inc
loope
repnz
call
jmp
dec
repnz
push
rol
push
int
inc
dec
push
lods
imul
jb
mov
push
pop
retf
add
fnstsw
ins
add
cld
icebp
out
js
push
mov
fs
push
es
xchg
xlat
xor
mov
and
pop
outs
pop
pop
into
xor
and
pop
jge
shl
ss
hlt
or
pushf
add
adc
test
stos
fdivr
in
xor
add
inc
dec
jae
xor
xor
xchg
mov
dec
cld
call
and
jno
loope
retf
pushf
and
jnp
mov
sbb
xchg
sahf
ins
neg
mov
(bad)
cmc
xchg
mov
adc
ret
mov
in
xchg
js
cld
lahf
addr16
hlt
pop
lods
nop
cmp
loop
(bad)
int
pushf
dec
pop
pop
inc
push
cmps
ins
cmp
mov
outs
cmp
movs
stos
jne
mov
iret
push
push
mov
cmp
or
icebp
and
loopne
std
(bad)
push
enter
scas
adc
jp
in
cmp
mov
mov
cmp
xchg
aaa
jo
div
xchg
pop
test
out
movs
test
frstor
mov
loopne
popa
shr
int3
inc
lea
xchg
bound
aas
test
mov
pop
xlat
mov
pop
cmp
sub
xchg
cmp
loopne
and
fs
test
mov
in
inc
pusha
jp
mov
and
push
jne
out
xlat
rcl
dec
fld
add
dec
adc
xchg
mov
dec
cli
adc
jnp
push
sub
nop
clc
push
scas
inc
aaa
cmp
jns
cmp
stos
adc
daa
push
xchg
cmp
mov
dec
call
jbe
mov
xor
mov
or
rol
add
mov
repz
loope
inc
mov
cmp
xchg
(bad)
mov
(bad)
jbe
jb
push
push
nop
add
das
adc
lea
icebp
mov
mov
jns
ret
pop
xchg
nop
dec
cmp
push
jecxz
mov
sub
push
fld
ret
add
push
outs
iret
cmc
xchg
outs
jecxz
pop
call
inc
fwait
pop
daa
retf
jns
cmc
fsub
retf
sbb
(bad)
es
loope
fld
seto
mov
jp
jne
adc
nop
call
xlat
mov
out
cli
mov
mov
arpl
loop
cmps
mov
sti
sti
setno
sbb
cs
mov
jbe
rcr
bound
outs
int3
mov
jns
scas
bound
out
adc
jp
jmp
pop
cmp
outs
lods
jge
mov
call
enter
pop
push
xchg
xchg
or
push
retf
fsubr
das
je
aas
push
or
jl
ja
dec
mov
popa
push
jecxz
fdivr
mov
leave
sub
out
sub
and
popf
call
sub
inc
adc
adc
jge
mov
jmp
pop
div
push
mov
cmp
pop
pushf
pop
push
inc
pop
xlat
and
and
sub
(bad)
mov
hlt
arpl
fild
fld
pop
call
outs
jp
int3
xchg
inc
jne
scas
sbb
push
shl
repnz
cmp
aas
cmp
js
pop
retf
imul
xor
mov
in
je
inc
dec
mov
ds
data16
dec
xor
push
jne
fs
enter
jne
enter
sahf
int
xor
pop
shr
mov
pop
int3
jmp
and
pop
fwait
push
mov
imul
mov
and
and
sub
push
cmp
pop
icebp
outs
xor
dec
jge
mov
fwait
lods
int3
add
and
stc
xchg
or
(bad)
cmc
inc
jle
cmp
pop
dec
sub
inc
arpl
jnp
inc
mov
xor
adc
sahf
jnp
retf
or
fmulp
xchg
stos
hlt
adc
std
pop
cld
sub
sbb
dec
mov
ror
retf
dec
cmp
inc
push
mov
fstp
rol
mov
jae
or
adc
dec
inc
xor
dec
mov
mov
repz
daa
fs
cmps
or
mov
sub
xchg
adc
jnp
dec
add
inc
fild
lds
add
mov
je
jno
sub
dec
ret
dec
push
and
cmp
lods
mov
popf
test
fstp
or
aaa
mov
sbb
mov
pop
(bad)
in
pusha
dec
(bad)
jo
ficom
jo
shl
mov
jne
push
or
mov
cli
movs
jmp
add
stos
out
mov
lock
sar
push
popa
mov
pop
and
call
mov
xchg
mov
push
inc
lahf
dec
leave
stc
scas
push
inc
xchg
pop
mov
sbb
sbb
xor
jb
xor
pusha
push
jmp
jp
retf
aas
jmp
pop
xor
outs
das
dec
mov
adc
or
add
std
inc
repnz
fstp
repz
es
enter
(bad)
fistp
rol
and
int3
mov
shr
cmp
jo
pop
cdq
(bad)
fiadd
js
fiadd
xor
out
adc
inc
ins
push
add
push
jne
gs
(bad)
sbb
nop
imul
daa
mov
test
sbb
push
mov
iret
adc
add
push
jae
or
push
pop
sar
jle
cld
arpl
jge
test
adc
in
and
pop
imul
call
aam
outs
int3
icebp
ja
mov
cld
out
mov
or
div
test
adc
std
add
cld
mov
in
mov
sub
icebp
test
mov
retf
rcr
fs
pop
loope
(bad)
cld
sahf
in
in
mov
jne
xchg
ds
mov
popf
std
pop
cmp
cli
pop
ss
mov
add
adc
inc
mov
daa
lea
and
lods
lds
pop
push
fstp
mov
das
jle
in
lods
mov
sbb
scas
sub
lahf
sub
cmps
int
loopne
(bad)
sub
cdq
mov
xadd
scas
loop
(bad)
jp
sbb
cmc
jmp
add
or
dec
mov
sbb
xor
adc
cmp
loopne
ins
inc
mov
dec
popa
push
or
leave
js
pop
ror
jg
adc
adc
push
xchg
rcl
dec
adc
call
sub
push
dec
cmps
pusha
imul
mov
pop
icebp
adc
call
retf
cs
mov
sar
push
lods
pop
stos
leave
cwde
sub
lea
xor
(bad)
jl
cwde
jp
cmp
ja
loopne
sbb
jmp
push
or
leave
mov
jecxz
and
sahf
test
mov
add
push
push
mov
xchg
adc
jne
mov
pop
(bad)
iret
scas
mov
mov
repnz
dec
outs
fst
mov
repz
enter
push
pop
cmp
stos
les
jbe
test
popf
cmps
dec
aaa
fild
sub
cmps
xor
push
jecxz
lock
and
ins
pop
in
or
lahf
ret
retf
fsub
sbb
push
sbb
push
imul
in
ja
mov
xchg
push
cmp
jmp
mov
adc
dec
fwait
(bad)
sub
es
sbb
aam
jmp
lods
into
or
mov
cmc
and
mov
ds
jno
aas
push
mov
(bad)
jp
aaa
iret
sub
mov
test
icebp
bnd
xor
call
in
lods
xchg
mov
fadd
ins
sub
bound
cmp
test
sti
ror
xchg
mov
in
pop
scas
xchg
pop
pop
movzx
cmp
call
(bad)
in
jg
pushf
pushf
aaa
mov
aas
fmul
dec
dec
js
pop
test
movs
addr16
xor
or
dec
ja
pop
nop
shl
jl
sbb
ficomp
sub
inc
ds
ret
call
jns
cli
pop
movs
out
sub
xchg
jge
jb
mov
jns
push
jg
cmp
loopne
fadd
ror
jl
call
je
fcom
pop
fcmovbe
stc
push
(bad)
jmp
jge
xchg
imul
call
mov
shl
cwde
ret
sub
pop
jp
fwait
(bad)
mov
ret
ds
push
jnp
rcr
jns
xor
enter
jge
or
xor
std
inc
jnp
xor
sub
xor
push
ss
addr16
into
xlat
and
sub
xor
push
icebp
stc
outs
lods
mov
cwde
or
dec
push
mov
nop
sbb
sti
scas
loop
add
mov
(bad)
test
xor
xchg
lods
sub
stc
ja
pusha
or
mov
dec
ds
xor
outs
or
je
cmp
xor
out
ja
int3
js
es
add
push
pop
retf
mov
push
mov
xlat
lea
jl
test
mov
jnp
mov
pop
dec
push
jns
test
fisttp
push
pop
in
jl
mov
pushf
cmps
xor
ss
shl
pop
cmps
push
aas
inc
lods
push
xchg
and
xor
jp
jge
mov
clc
ret
ficom
adc
mov
loopne
fmul
pop
xchg
in
bound
jo
dec
xor
scas
mov
cmp
test
push
push
std
int
in
outs
sub
push
jmp
das
pop
lds
or
call
gs
push
sub
rol
or
nop
pop
inc
sbb
pushf
cmp
or
cmp
push
daa
mov
push
xchg
imul
loopne
xchg
dec
pop
jno
cli
imul
inc
out
push
aad
test
adc
(bad)
jae
mov
dec
or
jno
mov
sub
stos
lahf
imul
movs
push
sub
pop
or
or
add
in
push
daa
les
cmp
xor
jmp
imul
cmp
stos
sti
mov
mov
pop
ror
in
das
jl
or
pop
jb
add
add
add
ins
push
repnz
mov
pmaddwd
fidiv
inc
stc
and
dec
fadd
sub
fistp
xchg
imul
(bad)
xchg
or
add
xchg
xchg
jmp
(bad)
dec
jp
jns
or
test
mov
fild
je
add
ret
jle
push
fcmove
(bad)
cli
in
stc
pusha
pop
aad
sub
push
add
jne
push
aad
pop
ror
lods
aam
add
inc
dec
rol
push
div
inc
mov
outs
pop
retf
stc
pop
sbb
cmps
rol
pslld
lahf
jle
fstp
pop
std
jg
mov
mov
das
cmp
bound
fcomp
sbb
pop
inc
adc
inc
inc
dec
outs
xor
push
inc
and
addr16
xor
xor
cs
mov
inc
out
aad
dec
(bad)
sbb
std
es
mov
cli
shl
loopne
or
mov
sub
iret
data16
push
xchg
adc
leave
fs
or
jnp
mov
mov
dec
mov
ds
es
cmps
jl
and
sti
xchg
pop
or
fbld
adc
xor
bound
dec
fsub
adc
maxps
inc
js
ins
pop
pop
xchg
nop
xchg
clc
cmp
lahf
or
sbb
pop
ds
(bad)
shr
mov
fsub
lea
rol
xlat
push
in
push
push
push
push
jnp
mov
inc
fs
push
sub
outs
cmps
lea
adc
mov
(bad)
leave
or
and
retf
xor
jne
mov
je
cmps
jecxz
popf
in
movs
mov
and
test
pop
fiadd
mov
pop
pop
test
shrd
push
push
pop
jg
movs
sbb
jmp
xchg
inc
ins
ret
pop
mov
sub
push
jle
mov
outs
xchg
push
retf
jge
out
rcl
in
push
test
xchg
into
retf
mov
sti
fs
cmp
mov
test
pushf
mov
pshufw
inc
out
adc
push
clc
retf
nop
fidivr
lahf
iret
add
cmps
outs
aas
retf
cmc
xchg
stc
add
add
in
add
or
aas
loope
sbb
jne
cli
xchg
call
fisubr
sbb
out
fisubr
inc
stc
push
jae
add
mov
jbe
or
movs
arpl
scas
ret
test
aaa
out
cli
dec
out
cli
adc
adc
sbb
mov
fiadd
je
sub
ins
xchg
jg
test
mov
ins
add
aam
std
adc
and
stos
nop
les
mov
push
sub
pop
or
xor
test
add
or
inc
add
scas
cmp
retf
into
stc
pop
lods
outs
cmp
aaa
push
bound
sar
jp
je
push
(bad)
(bad)
jge
sbb
sub
mov
das
retf
jbe
sbb
inc
cmc
push
loope
or
sahf
mov
inc
dec
jp
fisubr
mov
push
or
xchg
add
rol
sub
push
loope
lods
int
imul
sub
sbb
test
sub
sbb
(bad)
jp
sbb
or
xchg
fcom
movs
pop
xchg
fwait
add
and
(bad)
fisubr
sti
hlt
fs
adc
fnstcw
and
sbb
scas
imul
test
mov
not
inc
aam
inc
aas
xor
leave
scas
out
ret
(bad)
mov
dec
or
and
mov
sub
xor
retf
push
aam
adc
adc
xchg
sbb
call
or
arpl
dec
jmp
icebp
lds
in
test
lahf
rcl
outs
sub
nop
fld
lds
jle
(bad)
jmp
dec
jns
scas
aad
out
mov
inc
mov
xchg
push
mov
ja
or
daa
icebp
inc
sub
pop
or
ret
push
pop
adc
inc
dec
or
imul
xchg
push
jle
scas
jns
jg
fmul
xchg
cmp
jb
loop
test
and
das
inc
mov
adc
adc
test
daa
push
cmp
rol
dec
lahf
mov
in
dec
jns
adc
push
adc
cmp
sub
js
in
bound
or
(bad)
xchg
xchg
icebp
adc
adc
xchg
fisubr
lahf
pop
(bad)
retf
inc
cmp
test
jae
sar
xchg
lds
sub
xchg
xchg
rcr
ins
xor
aam
idiv
in
outs
mov
pop
dec
es
ins
das
dec
pop
sahf
shr
stos
push
enter
test
(bad)
sbb
cmps
sub
adc
ret
xor
lea
or
ret
retf
pop
inc
int
clc
(bad)
(bad)
add
dec
call
mov
mov
push
dec
adc
test
sbb
pop
ficom
fs
mov
pop
add
imul
cwde
cmp
jne
jge
add
test
mov
pusha
sahf
jle
dec
popa
or
(bad)
lods
fnstsw
sub
mov
mov
sti
xlat
bound
push
and
repz
mov
je
(bad)
or
in
sub
jmp
sub
inc
jbe
inc
out
aam
lods
dec
dec
xchg
mov
jo
fucomip
cmp
xor
scas
push
dec
jmp
call
push
sahf
shl
or
mov
sahf
sub
push
shl
xchg
jnp
leave
in
mov
pop
adc
pop
push
test
mov
pop
mov
fs
dec
shld
cs
push
das
sub
mov
ss
pop
std
cwde
push
dec
add
gs
pop
out
ja
enter
in
fs
lock
lea
and
inc
sti
pop
jmp
sbb
adc
or
inc
lock
retf
adc
add
push
add
out
mov
and
fsubr
fs
lea
popa
cmp
lds
movs
cmp
(bad)
repz
fs
out
scas
dec
mov
mov
lea
push
cwde
ficomp
pop
ret
jp
sbb
sub
xchg
or
call
and
sub
xchg
jmp
fcom
or
cld
fs
neg
mov
shl
int3
cmps
add
fcomip
push
(bad)
icebp
add
nop
sub
aad
push
cmp
les
push
mov
sub
stos
add
xchg
shl
mov
int3
inc
mov
cmps
sub
aaa
imul
inc
jmp
scas
jns
inc
hlt
mov
loop
and
cmp
cmp
js
and
push
adc
jns
xchg
dec
ret
and
pop
push
(bad)
sahf
popa
adc
stos
jle
mov
add
and
adc
ja
out
and
push
cmps
mov
mov
(bad)
mov
inc
mov
or
push
retf
mov
mov
jmp
repnz
cmp
jne
xchg
jmp
xor
retf
(bad)
repnz
mov
mul
pop
xchg
das
mov
jo
pop
scas
cmp
jl
cmp
and
xchg
scas
adc
out
push
jmp
jmp
push
sub
push
stc
lods
dec
in
lods
fistp
daa
adc
cmp
call
mov
mov
push
aam
movs
xchg
loop
sti
add
ja
outs
stos
or
sbb
movs
in
mov
add
fild
test
fistp
arpl
pop
mov
outs
out
repz
add
push
dec
(bad)
loop
mov
sbb
popa
push
sub
push
inc
xchg
mov
inc
popf
mov
mov
fisub
nop
cmp
adc
dec
sar
inc
or
adc
xor
mov
xchg
inc
and
in
sti
xor
outs
jge
add
bswap
jg
les
adc
sbb
jo
retf
aaa
popa
addr16
outs
inc
sbb
inc
es
aaa
inc
lock
push
jbe
pmulhuw
outs
or
push
push
sti
and
or
push
pop
(bad)
and
pop
arpl
pop
dec
mov
and
pop
or
js
xor
ret
jl
mov
outs
mov
cdq
inc
add
aaa
mov
cmps
jb
xchg
add
out
or
pusha
pop
xchg
lods
xor
mov
pushf
pop
dec
push
cli
or
sub
leave
repnz
repnz
jl
dec
sub
sub
nop
mov
cwde
int
ss
fwait
jmp
cmc
mov
cmp
mov
(bad)
xchg
mov
into
xchg
cmps
sti
adc
inc
xchg
mov
imul
into
dec
mov
cmp
lods
sub
cwde
cmp
arpl
inc
loop
or
and
and
and
jmp
test
pushf
out
xchg
outs
enter
clc
call
in
mov
dec
stos
dec
test
mov
(bad)
out
in
ret
and
and
int
repnz
pusha
(bad)
aam
mov
dec
fsubr
mov
mov
push
xor
adc
pop
jecxz
and
push
sub
push
call
xchg
xor
inc
pop
loop
ror
or
xchg
mov
fimul
pop
cmp
pop
out
xor
mov
add
mov
sbb
test
inc
rcl
ins
jmp
sti
inc
loopne
push
loop
pop
lock
xchg
rcl
or
inc
xor
jae
inc
call
mov
dec
xor
adc
shr
test
sbb
mov
inc
cmp
mov
icebp
and
inc
sub
pop
add
test
push
inc
int
xchg
(bad)
add
cmp
rcl
popf
mov
xor
ds
push
mov
call
sub
mov
arpl
in
cmc
int
dec
pop
jae
scas
jb
in
and
jp
retf
inc
and
mov
and
cdq
gs
jmp
outs
inc
xor
inc
mov
retf
call
push
cmp
fnsave
(bad)
ss
pop
jge
mov
out
xchg
and
add
bound
add
xchg
pushf
(bad)
sbb
dec
loope
in
sti
xor
dec
cmps
pop
add
push
lods
sub
dec
pop
xchg
mov
cmp
adc
push
inc
data16
jle
stc
push
sub
dec
inc
ja
xchg
jae
movs
in
lahf
jp
or
xchg
cmp
push
fbld
bound
cmp
sbb
and
clc
dec
cli
popf
imul
push
adc
into
adc
sub
je
push
push
scas
jmp
repz
sar
cmp
inc
out
jnp
mov
or
(bad)
lock
pop
cmp
scas
not
icebp
add
mov
jmp
shl
jecxz
cld
pop
repnz
xlat
mov
js
cmp
icebp
cdq
sbb
xlat
jecxz
or
dec
inc
movs
mov
fcomp
lods
arpl
mov
(bad)
push
dec
loope
outs
loope
xchg
shl
call
cmps
and
shl
movs
sub
loopne
ret
int
sahf
push
imul
(bad)
mov
jnp
fdivr
lea
sbb
out
lods
inc
xchg
call
xchg
push
leave
loope
lods
push
add
out
out
inc
push
pop
sub
pop
(bad)
mov
or
adc
dec
or
in
jecxz
icebp
inc
scas
adc
sub
add
cmp
or
push
cmc
jmp
pop
push
scas
lock
movs
mov
fwait
or
retf
or
jns
and
jg
cmc
dec
cld
dec
jmp
mov
lahf
ss
pop
cmp
add
cmc
pop
je
fwait
in
icebp
dec
(bad)
jo
(bad)
daa
and
repnz
mov
js
test
cmps
fisub
int3
adc
xchg
fistp
mov
xchg
push
scas
test
inc
(bad)
int3
ss
or
ret
lar
shr
dec
sbb
loope
dec
mov
sar
mov
fild
xchg
adc
lahf
inc
ds
and
jmp
dec
rcl
cmps
fst
cs
retf
daa
ret
fcomp
aam
int3
dec
or
icebp
push
movs
jno
mov
fadd
xor
stos
mov
adc
sahf
daa
inc
xor
out
outs
jmp
je
outs
out
jne
call
ss
adc
outs
add
xchg
(bad)
xor
retf
mov
inc
mov
dec
adc
jl
inc
mov
inc
push
(bad)
sub
sbb
enter
xchg
mov
pop
mov
and
add
add
jg
(bad)
adc
mov
push
cmps
cmp
lahf
jmp
test
push
cmp
pop
lock
test
in
gs
std
(bad)
cli
jbe
add
mov
cdq
mov
scas
std
push
mul
mov
lea
pop
icebp
push
xor
mov
mov
and
or
fdivrp
aas
jg
xchg
mov
mov
loopne
hlt
jns
mov
loopne
pop
rcr
xor
jge
add
push
std
cld
cwde
pop
add
push
add
pushf
cdq
fild
sbb
shr
push
call
or
and
scas
loopne
add
in
push
nop
fwait
daa
clc
test
push
(bad)
iret
push
pop
loope
imul
outs
mov
outs
ret
mov
add
neg
or
mov
adc
rol
test
stos
mov
or
or
jo
add
cmp
jb
cmp
lahf
rol
sub
rcl
jne
dec
test
pop
bound
test
imul
inc
or
out
(bad)
push
cmps
adc
sbb
(bad)
cs
enter
push
mov
je
or
push
aas
pop
cld
cdq
stos
mov
int
adc
inc
push
dec
pop
dec
ds
dec
js
test
push
mov
cmps
lods
call
retf
ins
inc
jae
imul
out
ret
test
adc
bound
xor
dec
fdiv
int
dec
shr
leave
jbe
jge
pop
iret
mov
call
arpl
xchg
add
sub
mov
outs
lea
push
in
jmp
cmp
jge
js
jae
pop
retf
lock
icebp
je
(bad)
mov
mov
xchg
push
repnz
into
shl
outs
scas
repz
cdq
stos
and
movs
mov
leave
dec
sar
jb
lea
das
cli
push
sbb
xlat
in
or
stos
shl
xlat
mov
pop
retf
mov
call
cld
aad
add
imul
in
mov
sti
movs
cmp
mov
jge
cmp
adc
(bad)
sti
addr16
dec
pop
xchg
test
inc
popf
xor
adc
js
adc
pop
add
rol
sahf
imul
mov
dec
push
add
jl
fisubr
fisttp
inc
outs
or
call
movs
add
xchg
lock
inc
repz
mov
push
pop
or
xor
retf
mov
lods
xor
jae
imul
test
daa
movs
inc
loope
sti
popa
inc
shl
mov
sahf
faddp
mov
dec
clc
push
xchg
xor
ficomp
nop
add
jl
push
into
out
adc
push
test
aas
or
fistp
xchg
sbb
xor
pop
clc
mov
pop
dec
sub
xchg
into
fld
movs
push
(bad)
pop
inc
aam
mov
loopne
(bad)
bound
(bad)
stc
arpl
fsub
sar
cmp
mov
mov
sbb
ret
lahf
jmp
popf
daa
rcl
sbb
xchg
iret
cmp
imul
jo
xor
daa
cli
sbb
xchg
stos
xchg
ror
loopne
es
adc
movs
cdq
scas
push
lods
sar
sti
es
sbb
mov
call
arpl
inc
dec
dec
jmp
popa
and
sub
movs
call
pop
adc
ss
jnp
test
(bad)
movs
cwde
add
mov
adc
in
test
ret
not
sbb
cs
inc
scas
jmp
push
and
sbb
push
outs
inc
adc
loopne
stos
leave
mov
adc
idiv
dec
dec
test
(bad)
or
jle
jg
xchg
sbb
shl
jns
jno
mov
sub
cld
cmp
rcr
inc
cmp
and
jle
test
cmp
xor
popf
mov
adc
ds
fstp
out
or
ins
test
xor
ja
lods
adc
clc
mov
mov
push
push
mov
adc
repz
xchg
int
cmp
inc
jbe
(bad)
pop
retf
fiadd
jecxz
aam
push
mov
push
ss
mov
xchg
aad
std
adc
test
std
pushf
xor
inc
stc
push
es
inc
and
rcr
arpl
dec
in
ins
rcr
pop
dec
into
mov
mov
jmp
inc
pop
fadd
mov
xchg
and
pop
hlt
add
dec
fwait
test
enter
or
pop
mov
test
sbb
fdiv
mov
jmp
ins
mov
push
or
js
sahf
mov
jl
cmc
pop
mov
xchg
adc
lods
(bad)
retf
(bad)
test
pushf
cmp
outs
sub
cmp
out
clc
sbb
xchg
call
retf
(bad)
aas
cmp
out
lea
int
sub
shl
jmp
inc
nop
jmpw
inc
dec
retf
mov
out
cmps
sub
into
es
add
xchg
pushf
push
sti
scas
cmps
cmp
loopne
loope
push
push
into
xor
in
adc
outs
rol
cmp
xor
adc
ins
push
popa
test
cmp
push
pop
shr
iret
xor
jb
dec
push
imul
outs
(bad)
in
idiv
rcr
pop
sti
pop
push
popa
in
sbb
adc
enter
dec
xor
xchg
cmp
cmp
push
push
ins
fadd
xchg
je
mov
dec
in
cmp
xor
mov
call
or
adc
scas
gs
nop
push
jg
and
or
add
jp
mov
call
jae
pop
ja
sub
call
ins
cmp
adc
iret
fidiv
icebp
int3
ins
cmps
movs
mov
loop
mov
push
add
push
fwait
mov
fmul
shl
mov
mov
inc
add
(bad)
xchg
or
mov
outs
js
aam
test
out
pop
shl
ror
cmp
retf
mov
pop
xchg
call
push
xlat
cdq
out
je
stos
dec
loope
js
mov
mov
clc
out
xchg
das
lods
sub
(bad)
cmp
or
adc
and
out
mov
call
xchg
shl
enter
imul
xor
mov
mov
adc
xor
jecxz
pop
pop
jmp
xchg
pop
int3
mov
push
jno
pop
cmp
jmp
js
ins
in
call
popf
das
add
fs
(bad)
(bad)
jg
sub
fwait
mov
pop
loop
movs
nop
ds
or
lds
adc
pop
cmp
mov
adc
inc
jbe
jb
xor
xchg
sub
loopne
adc
aad
cmps
xor
retf
inc
xchg
add
push
add
fstp
and
jno
mov
div
mov
xor
cs
aas
push
sub
in
in
sbb
mov
test
mov
(bad)
push
xchg
push
pop
add
dec
(bad)
or
sti
dec
ss
stc
push
shl
les
or
call
sub
dec
lock
lods
nop
es
sub
sub
leave
xchg
cmps
in
xor
mov
loopne
jp
xchg
mov
mov
in
xor
and
(bad)
hlt
pop
xlat
and
push
lahf
retf
retf
sbb
stos
sub
popa
aad
inc
inc
test
dec
ret
pop
int3
sub
push
dec
jle
mov
bound
fisttp
xor
sahf
push
test
shl
std
adc
cmp
aaa
dec
jmp
mov
test
pop
xchg
outs
jg
pop
jmp
pop
clc
ja
mov
icebp
cmp
movs
inc
jne
enter
jb
xchg
bound
sahf
sbb
pop
dec
or
mov
(bad)
clc
inc
cli
js
jnp
inc
cs
retf
pop
sbb
aaa
in
ss
mov
pop
nop
repnz
inc
push
mov
dec
xchg
aaa
inc
stc
inc
jns
fistp
cmp
aaa
add
mov
ret
sti
das
sbb
leave
scas
call
inc
mov
sar
mov
add
repz
cmp
add
mov
jmp
inc
xor
inc
jae
(bad)
mov
mov
fisubr
cmc
nop
cs
pushf
mov
xlat
fsubr
jb
dec
movs
(bad)
cmp
repz
fldcw
fsubr
dec
sub
or
inc
cmc
icebp
sub
scas
jmp
cs
dec
push
or
and
cld
(bad)
pop
call
repnz
jns
das
cmp
adc
add
jg
dec
shr
inc
jbe
pop
ins
out
ret
jp
adc
cwde
or
mov
cmc
adc
fcmovbe
sbb
loopne
pop
sub
mov
sub
(bad)
rol
movs
out
sbb
sbb
data16
cmp
leave
push
inc
icebp
mov
popf
inc
movups
or
pushf
js
cmp
movs
and
mov
sub
inc
push
dec
es
xchg
(bad)
mov
clc
pusha
mov
xchg
aas
fwait
inc
xchg
push
movs
(bad)
dec
sub
hlt
mov
pusha
pop
leave
call
push
xor
mov
je
popa
shl
jecxz
in
mov
icebp
std
push
or
sbb
inc
dec
cli
adc
(bad)
jecxz
ror
adc
xor
mov
xor
mov
dec
jne
xor
cli
js
loopne
mov
mov
cs
les
jmp
bound
repz
rcl
mov
aad
out
or
aas
xchg
cdq
test
aad
mov
push
in
push
xchg
xchg
jl
ds
es
cmp
sahf
lea
cvtdq2ps
push
cmp
cmp
mov
lahf
cld
nop
cmp
cmp
pop
xchg
jne
cli
xchg
cmc
cmps
loopne
out
or
adc
addr16
in
mov
lods
inc
(bad)
jmp
cmp
cmc
push
test
push
and
test
in
cs
fdivp
test
shl
xchg
cmp
cmp
sub
or
xchg
cmc
neg
jns
fadd
mov
outs
ror
mov
aas
ror
in
adc
cmp
mov
dec
cmp
add
cmp
xchg
pop
movs
or
sti
mov
addr16
mov
or
dec
stos
and
hlt
fcom
xchg
rcr
or
pop
(bad)
aad
lock
call
or
cmp
push
sub
call
cmp
pop
xchg
les
adc
imul
pop
lock
pop
fiadd
xor
jmp
adc
mov
adc
xchg
lahf
inc
push
pop
pop
cld
xchg
fistp
pusha
pop
pop
repnz
fstp
data16
aam
jno
inc
mov
dec
(bad)
pop
pop
or
sar
test
sar
adc
and
and
nop
mov
xor
xchg
scas
adc
lods
nop
inc
shl
sub
sbb
push
(bad)
cld
add
sbb
repnz
aaa
ficomp
stos
or
or
mov
or
pop
popf
dec
or
(bad)
(bad)
mov
fwait
(bad)
in
pop
imul
in
ror
cld
std
and
add
stos
mov
cwde
or
(bad)
lods
add
out
int3
mov
jmp
cs
(bad)
pushf
mov
sub
fs
mov
callw
in
jne
(bad)
and
and
sbb
outs
push
jecxz
push
push
mov
push
add
jae
int3
or
push
cmps
daa
dec
pop
add
leave
enter
outs
mov
xchg
and
add
ins
mov
ja
into
mov
pop
arpl
stos
cli
mul
mov
std
inc
nop
xor
mov
xchg
repnz
cdq
test
mov
mov
inc
inc
jl
fild
sbb
in
push
or
loope
cmps
xor
mov
push
jbe
cli
int3
sbb
repz
test
jp
adc
in
jmp
stc
inc
push
xor
pop
add
add
rol
sub
xchg
mov
jmp
jno
xchg
pop
dec
outs
aam
xor
neg
mov
dec
mov
xchg
sahf
sti
mov
sahf
ja
xchg
cli
sub
fcomp
cmp
fs
stos
dec
xlat
mov
dec
rcl
dec
imul
adc
mov
test
sar
fs
jns
(bad)
in
pop
das
xlat
or
fmul
add
push
lea
gs
mov
mov
movs
into
mov
ds
push
or
je
add
out
inc
lods
popa
sbb
(bad)
lods
imul
cmp
div
add
aam
in
xchg
pop
(bad)
mov
fsubr
into
in
mov
(bad)
sub
or
les
cdq
inc
pop
inc
mov
into
out
cmp
sub
pop
sub
mov
xor
lea
call
jle
test
ror
movs
test
push
fisub
jl
mov
ins
shl
stc
arpl
xor
xchg
movs
retf
movs
mov
sti
mov
add
adc
mov
daa
pop
jbe
js
call
xchg
mov
mov
fdiv
sbb
jl
mov
repnz
leave
cmp
push
mov
test
add
and
adc
outs
jns
cmc
xchg
sub
pusha
cmp
mov
pop
cmp
popf
or
mov
cld
lds
push
into
mov
hlt
popa
cwde
push
inc
jmp
pop
movs
std
xor
or
scas
mov
xor
(bad)
out
lea
pop
icebp
scas
push
xchg
(bad)
in
or
jae
jmp
jecxz
add
es
sub
inc
xchg
fdivr
iret
pop
push
mov
mov
add
push
and
dec
adc
popf
dec
fidivr
test
add
xchg
mov
xchg
nop
je
rol
cwde
inc
adc
stos
mov
cdq
jbe
cs
pop
add
je
mov
dec
adc
cmc
xchg
xchg
inc
mov
popf
adc
add
add
mov
fxch
add
cmp
aad
lea
jge
sub
mov
fistp
mov
dec
mov
xor
cmp
shl
push
out
dec
imul
ja
loop
adc
test
sbb
mov
fidivr
jmp
(bad)
mov
call
mov
rol
js
mov
mov
push
gs
dec
int3
pushf
fistp
mov
daa
push
jns
cmp
mov
movs
inc
sub
adc
inc
sbb
outs
or
scas
fcomp
lea
xor
add
loopne
shl
(bad)
call
lods
pop
imul
mov
not
or
outs
sbb
jg
inc
das
stos
xchg
sbb
outs
inc
add
dec
adc
mov
ds
fwait
out
mov
sub
rcl
dec
sbb
and
loopne
call
mov
push
or
jbe
aaa
or
retf
nop
pushf
add
adc
into
pop
cmp
test
int
shl
cmp
cs
add
lea
out
sbb
pop
stos
data16
and
xor
fs
adc
xor
mov
push
add
lea
jno
ins
pop
mov
fnsave
cmp
inc
aad
adc
sbb
xchg
and
mov
outs
lock
cdq
sbb
dec
fisub
add
xchg
push
ret
sbb
fidivr
or
loope
jmp
pop
data16
dec
adc
lods
inc
ficomp
mov
jmp
xchg
(bad)
hlt
test
add
movd
pop
jb
and
push
loopne
ins
cmp
jmp
jb
sbb
mov
ins
das
dec
imul
in
pop
lea
jbe
inc
jecxz
pop
xor
sysenter
repz
lods
out
out
sub
fwait
js
(bad)
mov
gs
xchg
cmp
aam
mov
neg
sbb
call
inc
popa
daa
call
mov
jge
add
(bad)
outs
not
les
xchg
pop
xor
fbld
mov
adc
imul
mov
fwait
repz
clc
or
loop
in
jmp
add
mul
lahf
inc
add
dec
cld
push
lods
push
adc
mov
and
loope
cmp
(bad)
push
jo
inc
outs
pop
aaa
pop
arpl
aaa
mov
leave
shl
test
jle
pop
sbb
mov
std
stos
jnp
retf
lock
jp
lahf
xor
jge
cdq
pop
ja
mov
push
xor
adc
fwait
and
fwait
xchg
xlat
inc
mov
(bad)
fsub
push
or
popa
sub
xor
jmp
lods
mov
dec
adc
in
xor
mov
cwde
pop
test
mov
jmp
fdiv
pop
xchg
cmc
mov
mov
pop
out
hlt
cmps
push
jns
cmc
lock
jae
add
jno
mov
(bad)
daa
jecxz
xchg
dec
ins
cmp
pop
and
stc
mov
stos
jl
jge
sbb
aam
imul
cs
les
aas
dec
sub
sbb
mov
aam
cmp
xlat
and
in
dec
ret
fist
mov
jl
ss
sub
push
push
stc
pusha
(bad)
shl
lods
and
sub
lods
sbb
xlat
dec
in
ja
retf
aad
push
jge
stos
pop
test
xchg
out
arpl
mov
cmp
mov
inc
push
scas
pop
ror
icebp
xchg
sub
cmp
or
pushf
jl
add
push
outs
sub
jne
in
shl
fsub
fwait
jge
dec
ror
inc
sbb
aam
cld
mov
dec
int3
dec
loop
in
cdq
shl
stos
mov
bnd
sub
push
nop
mov
mul
mov
outs
adc
ins
mov
mov
cwde
mov
add
jge
ficom
adc
inc
dec
mov
leave
push
enter
scas
mov
bound
test
repnz
sbb
add
add
lahf
adc
lods
dec
stos
fdiv
inc
enter
lods
repnz
or
push
into
ins
pop
in
jno
push
push
pop
and
outs
(bad)
sti
dec
adc
fnstsw
sahf
push
in
icebp
cmps
xor
mov
lock
cdq
lods
outs
mov
stos
xchg
inc
ret
cmp
pop
sbb
jl
mov
idiv
test
iret
fcmovnb
fucom
xor
pop
js
jle
cmp
xor
aam
xchg
xor
loope
cwde
push
or
push
push
jmp
jb
xchg
test
ret
and
dec
mov
or
sbb
fcmovne
mov
pop
pop
add
leave
jecxz
xchg
mov
xchg
and
aas
or
mov
sub
jg
iret
rol
xchg
ret
push
jno
daa
add
pop
push
stos
sub
dec
pop
adc
sbb
xchg
sub
jge
or
xchg
pop
popf
mov
je
sub
gs
jl
inc
call
push
pop
push
scas
cwde
mov
retf
xchg
adc
in
aaa
cli
call
dec
inc
mov
push
dec
cdq
dec
nop
addr16
ret
(bad)
or
inc
jns
shl
int3
pop
mov
jo
push
mov
adc
icebp
jge
js
(bad)
add
mov
mov
je
cld
dec
loopne
daa
lods
test
push
mov
dec
mov
push
lahf
pop
and
lods
jmp
stos
dec
ins
dec
jo
jmp
fs
xchg
add
stos
sub
fild
mov
inc
or
mov
xlat
inc
mov
cdq
in
bound
cmp
sti
pop
jecxz
pop
rol
sub
jb
jnp
mov
push
mov
gs
jmp
pop
out
dec
aad
in
mov
xlat
cmp
enter
ja
sbb
mov
scas
shr
xor
dec
ret
cmp
scas
pushf
adc
xor
daa
lahf
xchg
shl
adc
test
out
xchg
jne
or
aam
inc
sbb
test
add
aam
shl
in
ds
pop
and
cmps
sbb
and
aas
adc
ffree
ret
push
fnstenv
addr16
pushf
inc
pushf
push
rol
push
push
test
jl
int3
or
sbb
sub
lods
rcl
xchg
out
xchg
test
mov
out
mov
cmp
mov
add
cdq
fdiv
leave
pop
aam
cli
and
mov
cmp
mov
rcr
(bad)
xchg
xchg
je
xor
push
mov
ins
mov
add
retf
add
das
push
sbb
sbb
jb
neg
rcl
call
outs
inc
cmp
xor
add
cwde
aaa
fsubr
or
(bad)
push
jl
sbb
ins
pop
loope
xchg
mov
jmp
ror
popa
out
stos
aam
aam
pushf
in
cli
setg
out
sbb
dec
cdq
cmp
(bad)
jns
(bad)
sti
push
addr16
je
jmp
jns
pusha
ins
pop
xchg
cdq
push
pop
pusha
mov
inc
popf
je
mov
cdq
pop
xor
(bad)
int3
scas
stc
ja
adc
loopne
mov
inc
dec
sbb
out
mov
dec
not
lea
(bad)
jae
stos
out
rcl
mov
enter
pop
cmp
aas
dec
stc
jmp
test
push
scas
jle
xor
jb
adc
clc
shl
cmp
outs
cmp
outs
push
lahf
dec
pop
ds
pop
stc
mov
jl
fisub
mov
xor
ds
jl
and
aas
mov
sahf
push
or
inc
ss
mov
retf
in
pop
pop
(bad)
or
popf
icebp
mov
mov
cld
mov
mov
call
push
add
xor
sbb
lods
cdq
ins
in
jno
fs
push
jo
mov
sahf
or
aas
(bad)
aas
sub
mov
jnp
add
jno
ror
jnp
inc
mov
test
mov
pop
jb
test
sbb
or
mov
xor
sahf
mov
sbb
retf
pop
mov
add
aad
pop
in
sub
jnp
inc
leave
mov
pop
nop
and
aaa
ja
stc
jmp
adc
mov
cmp
xor
dec
xchg
pop
fmul
std
xchg
stos
addr16
mov
bnd
and
mov
dec
cmp
mov
push
jo
or
jmp
mov
cmp
dec
out
and
stc
sahf
inc
shr
mov
call
push
bound
(bad)
mov
xor
ret
out
rcl
inc
(bad)
and
pop
jp
add
xlat
mov
mov
or
or
movs
mov
push
fstp
daa
cmp
scas
mov
leave
scas
daa
enter
xchg
cs
mov
mov
xor
add
or
adc
(bad)
push
inc
mov
test
push
arpl
xor
scas
loopne
or
dec
lahf
push
lods
stos
pop
sub
push
ffree
(bad)
bound
sbb
clc
pop
stos
adc
sbb
cdq
loope
iret
mov
cmp
sti
adc
sub
(bad)
pop
(bad)
inc
imul
jecxz
clc
loope
mov
ficom
dec
inc
nop
inc
xlat
and
sub
cmp
jb
and
xor
repz
mov
push
int
(bad)
and
lds
fld
neg
(bad)
inc
data16
test
add
rol
sub
fst
or
fmul
dec
sbb
pop
mov
hlt
mov
in
xlat
and
xor
pop
dec
in
xor
and
xchg
movs
ret
leave
test
mov
xor
stc
mov
cdq
movs
xchg
xchg
adc
xor
sbb
sub
sti
fucom
test
sbb
add
sub
in
out
fcomp
shl
fisttp
adc
jmp
std
jmp
cmps
dec
test
push
inc
add
(bad)
mov
dec
push
popa
ja
rcl
int3
push
dec
xchg
lds
mov
rcr
mov
ja
sub
sbb
push
out
mov
repz
mov
cmps
xchg
mov
mov
in
mov
cmp
inc
inc
imul
test
and
pop
neg
pop
jg
call
mov
bound
fadd
mov
pop
xchg
hlt
inc
in
mov
cmp
mov
mov
fdivrp
or
jbe
in
retf
inc
mov
movs
ud0
out
retf
push
daa
aad
or
je
arpl
adc
jns
jge
jbe
adc
sub
adc
and
repnz
sbb
xchg
cli
call
repz
js
jle
xchg
cld
pop
out
or
add
stos
fist
fs
mov
push
aad
shl
imul
cmps
sub
aad
test
(bad)
pop
jae
out
test
retf
cmp
pop
lds
dec
sbb
test
stc
out
pop
mov
repnz
arpl
pushf
dec
push
pop
adc
adc
cld
xchg
jo
stos
xor
cmp
in
(bad)
jno
push
and
lods
or
mov
out
popa
addr16
xlat
das
xlat
push
das
loope
fisubr
or
aas
push
push
movs
push
and
test
nop
push
(bad)
fs
js
lods
and
shl
cmp
cmp
jae
leave
jl
add
(bad)
sbb
(bad)
movs
cmp
nop
out
rol
xor
addr16
mov
mov
sub
adc
inc
int
mov
pop
inc
push
scas
in
and
aas
jbe
xchg
test
popa
push
shl
fucomp
jp
xchg
cmp
mov
mov
push
sub
test
lahf
mov
test
or
aad
and
in
and
mov
sbb
pop
push
fwait
jbe
mov
rcr
pop
les
fnsave
or
leave
stos
bswap
mov
or
sub
rol
fcomp
push
adc
loope
pusha
or
sbb
sbb
das
arpl
dec
(bad)
in
pop
(bad)
je
and
imul
add
jnp
jbe
mov
into
fist
jmp
rol
mov
mov
xchg
clc
call
xchg
popa
ret
xchg
dec
xor
push
dec
loope
and
int3
xor
xchg
pop
(bad)
xchg
jnp
xor
cs
lock
pop
sbb
test
stc
inc
sub
out
fnstenv
call
lods
cmp
sbb
mov
and
mov
dec
loopne
mov
cmps
adc
mov
fistp
jmp
ja
push
out
push
add
cli
pop
fcomp
test
fcmove
lds
lea
cmp
jae
pop
cmp
dec
repnz
sub
sub
retf
and
push
test
gs
ja
xor
dec
(bad)
pop
or
fldenv
mov
mov
sbb
fsubr
jmp
fldcw
sub
popf
push
mov
loopne
jmp
xchg
sar
in
es
enter
addr16
jns
(bad)
mov
int3
not
mov
ins
jmp
aas
sbb
dec
fdiv
xchg
adc
add
fadd
dec
xchg
mov
xchg
fnstenv
xor
data16
ficom
mov
xchg
add
xor
pop
test
jns
xchg
ss
mov
push
mov
sbb
loop
push
sbb
(bad)
mov
in
mov
xor
push
adc
mov
inc
imul
cmp
repnz
enter
xchg
push
mov
dec
inc
test
sub
shl
pushf
and
mov
mov
inc
pop
js
jl
sub
popf
xchg
ret
cmc
mov
icebp
bound
lock
inc
jne
test
add
dec
pop
sub
pop
mov
ret
inc
fadd
sub
nop
(bad)
sub
cwde
stos
out
inc
or
arpl
push
es
xor
fidiv
rcr
sub
xor
push
xchg
repnz
xchg
clc
in
xrelease
push
xor
rol
adc
xchg
aad
jle
adc
push
int3
movs
inc
push
ins
ds
call
retf
or
retf
fidiv
(bad)
add
lea
mov
fwait
pop
adc
inc
mov
lock
sub
add
mov
xlat
out
jb
ss
mov
lock
add
jmp
shl
and
mov
ja
repz
imul
mov
jo
push
mov
pop
sbb
pop
repz
jno
inc
data16
lock
push
cmp
mov
jne
in
sbb
jb
pop
jge
ins
ds
xchg
cmps
cwde
pop
xor
out
stos
pop
inc
mov
or
enter
repz
out
jne
xchg
rol
push
mov
es
cmps
cwde
hlt
les
hlt
call
daa
dec
jae
mov
jnp
out
mov
js
ja
cli
jb
lods
mov
call
inc
pusha
mov
lods
or
add
enter
sti
(bad)
jb
add
push
(bad)
sub
cmp
jb
add
aam
mov
int3
rol
cwde
enter
(bad)
xlat
adc
mov
push
ins
dec
jl
xor
stc
or
jle
pop
xor
imul
inc
cmps
imul
scas
xchg
xchg
jle
in
ja
jmp
popf
jecxz
ins
retw
xchg
sbb
dec
sbb
int3
ror
push
mov
pop
and
dec
pop
popa
jmp
mov
ficomp
shl
mov
mov
leave
(bad)
mov
in
int
mov
inc
ins
add
jle
shl
or
sub
fdiv
and
mov
mov
xor
pop
pop
push
sti
jnp
fcmovu
das
data16
sbb
mov
test
dec
pusha
xor
pop
cld
ret
mov
imul
shr
mov
mov
push
cmp
aad
mov
gs
ja
lods
push
jl
cmp
cmp
das
call
shr
push
fistp
mov
out
nop
das
fs
int
add
(bad)
orps
pushf
mov
push
test
cld
(bad)
fldcw
mov
mov
and
pop
dec
popa
popf
dec
or
or
pop
push
jnp
push
push
ror
and
dec
test
movs
cmp
imul
jnp
in
mov
aas
shr
add
mov
std
mov
fstp
enter
popa
adc
js
xchg
aam
and
shl
stos
cmp
mov
add
aaa
and
lds
imul
addr16
inc
rcr
fnstenv
test
jge
jg
cmp
and
test
out
pop
mov
mov
pop
jle
ss
mov
and
xor
mov
cmp
out
repnz
cmp
jmp
stos
retf
or
push
pushf
iret
cwde
fsubr
ins
cs
arpl
fsub
xor
xchg
test
adc
leave
push
mov
ds
or
cmp
ficom
xlat
push
push
stos
addr16
sbb
jle
mov
mov
fwait
out
mov
shr
int
shr
mov
es
push
xlat
icebp
inc
jg
frstor
sbb
add
stos
aaa
not
and
lea
dec
pop
faddp
jl
les
(bad)
aas
inc
mov
inc
xor
rcl
loop
neg
arpl
ret
sar
mov
lea
fist
mov
jp
mov
aas
or
sbb
xchg
dec
xor
mov
cmps
sub
imul
push
in
fisttp
push
dec
jne
mov
mov
outs
push
fdivr
or
sbb
es
push
cmp
or
mov
push
sbb
jmp
ret
cli
and
cdq
(bad)
aad
icebp
jmp
dec
add
xchg
cmp
imul
in
jns
or
call
push
or
dec
pminsw
jmp
xor
push
in
(bad)
cs
mov
aas
cmp
cli
xor
nop
ins
rol
je
push
or
push
dec
add
or
and
aaa
out
dec
adc
icebp
inc
add
in
icebp
adc
je
push
xchg
or
ds
mov
cmp
sbb
mov
ins
ficomp
inc
xor
adc
cmovs
lahf
mov
enterw
push
inc
ret
aaa
dec
cmp
icebp
(bad)
mov
test
out
push
ds
push
enter
push
fsubrp
and
or
or
aad
xchg
inc
xchg
pop
inc
dec
je
inc
sub
jmp
dec
jge
and
mov
xchg
inc
rcr
dec
xchg
adc
shr
mov
mov
inc
xor
xor
imul
inc
jge
nop
mov
jp
aad
pop
loopne
jmp
ret
dec
(bad)
rcr
mov
dec
xchg
fcomp
int
bound
fbld
out
fisubr
loop
repnz
mov
loop
ficomp
cmp
retf
inc
in
push
and
fwait
jl
inc
and
addr16
pop
xchg
mov
dec
xor
ror
cmp
push
add
stos
pop
and
pusha
in
pop
xchg
cmp
and
popf
push
mov
mov
inc
test
pop
dec
scas
js
inc
data16
push
jg
sbb
pusha
aaa
mov
aad
rcl
enter
scas
dec
dec
outs
sub
hlt
(bad)
xor
push
pop
cmp
inc
cdq
sub
pop
or
ret
scas
(bad)
jmp
xchg
(bad)
daa
loopne
cmc
cmp
xchg
(bad)
repz
mov
sub
adc
inc
out
xlat
ret
int
ret
movs
leave
or
cmc
sub
ret
cmp
and
cmp
cs
pop
lahf
nop
cmovo
stc
push
dec
xor
jbe
scas
xor
adc
(bad)
pushf
pop
xchg
sbb
sbb
out
repz
mov
xchg
sbb
adc
cmp
shr
push
adc
sbb
and
out
sbb
in
xor
sub
ins
cli
lods
xor
pop
in
out
in
popa
pop
mov
adc
mov
push
jecxz
movs
inc
div
mov
dec
shr
dec
ret
(bad)
imul
(bad)
cmp
fcomp
popa
add
mov
cmp
adc
sub
out
mov
xchg
rcr
cwde
xchg
ja
mov
cmp
out
cmp
jne
pop
adc
pusha
popa
push
xor
in
sub
sub
jmp
movs
or
adc
repnz
pop
add
xchg
push
push
enter
jle
mov
out
cld
test
or
push
jecxz
add
clc
xchg
fnsave
in
fwait
ror
mov
sbb
test
sub
inc
jl
(bad)
shr
retf
adc
add
adc
add
add
adc
and
mov
cmp
jno
mov
dec
aaa
inc
dec
push
xchg
out
lea
test
pop
ja
pop
ins
xor
es
pop
pop
aam
jmp
pop
outs
or
into
dec
hlt
xor
xchg
retf
mov
scas
leave
cli
int3
pop
sbb
xchg
mov
(bad)
cld
aas
sahf
ja
ja
out
inc
mov
mov
fimul
pop
fbstp
and
std
retf
inc
dec
addr16
cli
cld
inc
mov
mov
jne
xchg
(bad)
cmp
mov
js
in
jbe
jae
rcl
lahf
jae
test
pop
lds
adc
cmp
mov
dec
aas
shl
push
sub
outs
das
lahf
push
and
add
popa
popa
jmp
sbb
adc
fs
(bad)
push
cli
(bad)
mov
mov
pop
xchg
and
inc
add
fidiv
imul
jns
clc
imul
out
mov
movs
cmp
(bad)
dec
xor
lea
sbb
inc
call
ror
pop
jmp
es
mov
not
cwde
sbb
jno
call
mov
mov
nop
jo
inc
cmp
push
outs
jg
clc
es
fild
ret
out
jo
mov
cmps
or
xchg
xchg
xor
xchg
rol
or
and
fisttp
pop
cmp
sbb
cmp
repz
jns
lods
xor
adc
xor
push
shl
in
mov
pop
repnz
aam
mov
add
pop
mov
sub
es
das
mov
push
rol
ins
fwait
movs
mov
and
push
ss
cli
mov
mov
mov
fistp
test
jns
gs
mov
dec
inc
mov
xchg
push
hlt
cmp
xor
stos
dec
into
mov
jbe
pusha
sti
gs
aad
loope
xor
cmc
sbb
mov
(bad)
outs
sbb
or
xchg
das
jg
adc
imul
jne
lock
mov
inc
pop
lea
arpl
ins
adc
(bad)
test
jecxz
rcl
in
aad
mov
sbb
sub
jnp
jb
xor
dec
nop
sbb
dec
popf
aad
mov
pop
push
aas
push
imul
inc
cmc
inc
xchg
pop
js
dec
clc
cmp
int
add
cdq
movs
push
fwait
std
xor
xor
push
or
hlt
mov
and
sbb
mul
in
popf
shr
arpl
fnstcw
loope
lahf
or
mov
jbe
sbb
shl
test
scas
mov
lods
lods
out
inc
cmp
imul
xor
sub
add
popa
shr
aam
(bad)
cmp
mov
mov
pusha
and
mov
hlt
fwait
jp
hlt
jle
lock
je
jo
cmp
or
fs
fidivr
sub
push
movs
and
lock
and
scas
scas
test
shl
lea
cli
sbb
jns
call
cld
fs
xchg
imul
hlt
xor
jae
(bad)
daa
inc
pop
jecxz
fdivr
mov
pop
push
in
mov
shr
sti
xor
jae
ins
fcomp
ins
sbb
call
in
cmc
jo
push
sub
aad
fcomp
out
mov
mov
inc
mov
jns
push
out
movs
xor
or
cdq
jo
mov
or
cmp
das
inc
int
scas
(bad)
call
loope
fisub
dec
jmp
xchg
stos
and
(bad)
xor
inc
clc
popa
ret
push
(bad)
mov
jne
jno
int3
push
push
fadd
loop
mov
repz
xor
inc
push
rcr
lods
retf
test
jmp
mov
push
mov
pop
mov
jle
mov
dec
jnp
outs
mov
xor
shr
xchg
mov
push
retf
stos
cmp
inc
sub
or
mul
cmp
or
call
hlt
cmp
outs
xchg
adc
fld
jle
add
pusha
xchg
xchg
push
mov
cli
cmp
push
sar
clc
aam
dec
xor
call
outs
and
sub
xchg
xchg
ret
mov
cld
aam
adc
lods
pop
inc
mov
inc
sti
adc
test
mov
cmp
lds
jbe
jb
dec
ds
popa
pushf
icebp
mov
ja
push
cwde
xchg
lock
daa
jecxz
aam
xchg
lds
sbb
enter
mov
cmp
mov
add
fst
int
xor
inc
dec
movs
dec
or
(bad)
or
add
push
xchg
outs
xor
int3
mov
fdivr
sub
push
jecxz
and
ja
push
cmc
cmp
mov
push
cmp
inc
xor
adc
inc
dec
retf
add
nop
test
inc
inc
das
jo
adc
mov
xor
mov
sub
cmp
mov
cmp
mul
int
shl
aas
repz
add
out
test
dec
sbb
stc
adc
mov
push
call
add
cmc
sbb
sbb
mov
lds
stos
jg
iret
add
xchg
sub
xchg
movs
jno
cmp
sbb
add
cmps
dec
pop
fcomp
mov
jae
repnz
(bad)
mov
cli
sar
xchg
sbb
push
movs
dec
and
(bad)
jbe
pusha
cmps
mov
adc
jbe
xchg
test
dec
mov
mov
cli
ret
pushf
jmp
sub
and
mov
sub
jg
out
xchg
ds
sbb
jmp
add
push
daa
cmc
jl
xchg
ins
jmp
js
cs
js
or
push
pop
sub
cmp
rol
mov
ins
retf
cli
setno
dec
pushf
or
aad
jb
jmp
ins
mov
fs
sbb
ds
daa
fadd
xor
cmp
cmp
or
icebp
cmc
inc
inc
jmp
xlat
sbb
sub
cli
ror
mov
mov
mov
mov
retf
bound
inc
aam
jle
loopne
inc
mov
jno
sbb
sbb
lahf
inc
loope
inc
aad
scas
xchg
lea
adc
mov
mov
and
int
pop
fdivp
data16
loop
ds
push
mov
mov
dec
jbe
jbe
mov
cld
add
ja
dec
(bad)
stc
dec
cmovp
sbb
add
rcl
std
test
xor
pop
daa
sub
and
xor
movs
imul
cli
cmp
shl
add
xchg
aam
(bad)
int3
xchg
xchg
cli
shr
loope
add
dec
repz
sub
movups
and
pop
shl
js
imul
cmps
lea
or
mov
hlt
nop
inc
repz
push
add
lock
ja
arpl
cmovp
mov
(bad)
fbld
out
sti
loop
out
mov
(bad)
sub
shr
or
pop
cs
cmc
rcr
(bad)
fistp
out
cmp
ret
mov
adc
push
test
in
mov
add
ds
stos
xor
mov
mov
popf
fbld
mov
lods
cmps
jmp
pop
lock
mov
movs
in
push
fistp
loopne
mov
inc
shl
sbb
jmp
jae
ins
mov
xor
test
hlt
jne
dec
xor
stc
pop
push
fsubr
(bad)
xlat
repz
cmc
jl
sbb
les
outs
and
(bad)
pop
stc
xchg
push
jnp
shl
aad
xlat
outs
xor
jp
sbb
fs
pop
add
jg
sbb
pop
xchg
mov
inc
stos
lea
mov
xor
xchg
outs
in
xor
out
add
in
lds
or
(bad)
in
movs
stc
add
xor
fst
outs
push
fld
inc
mov
xchg
xor
lods
mov
cmp
popa
jnp
call
stos
push
out
daa
mov
movs
and
fwait
adc
xor
xchg
sbb
xor
xchg
cmp
dec
xchg
dec
jmp
adc
dec
int3
sbb
mov
pop
and
imul
cli
sahf
retf
inc
push
(bad)
neg
inc
mov
jno
pop
outs
or
xor
outs
lods
sub
xchg
pop
popa
(bad)
pop
xor
popa
push
inc
test
add
shr
push
jmp
outs
mov
jmp
pushf
and
nop
in
inc
jp
int
jno
repnz
or
dec
icebp
push
mov
int
xor
jo
in
mov
(bad)
mov
js
xor
hlt
daa
jle
out
cmp
pop
mov
scas
xchg
sbb
and
xor
jmp
push
hlt
iret
mov
xor
or
pop
in
fxch
mov
lock
sbb
stos
jp
stos
neg
(bad)
dec
or
ret
mov
or
sbb
sbb
sub
mov
mov
pop
call
fild
cmp
mov
mov
outs
enter
pop
push
(bad)
sbb
jnp
in
mov
nop
mov
adc
(bad)
pop
and
dec
and
mov
fnstsw
jne
pop
shr
or
sub
dec
dec
add
nop
dec
mov
(bad)
mov
mov
aas
jb
out
fadd
mov
pop
loope
idiv
cmps
fistp
pop
xor
pop
scas
into
out
mov
and
mov
and
cmc
push
int
inc
shl
(bad)
xor
out
outs
repz
cmp
xchg
push
push
popa
dec
(bad)
stc
cs
jp
mov
xor
xchg
mov
(bad)
xchg
int
xor
mov
adc
pop
sub
bound
inc
sbb
xchg
add
mov
xabort
sub
add
dec
ret
in
je
mov
cld
pop
loope
repnz
pop
mov
bound
aad
jmp
imul
aad
(bad)
adc
or
out
mov
scas
jno
fidiv
sti
jp
cwde
int3
in
add
fcom
fwait
enter
add
pushf
xor
dec
aaa
xchg
sar
fsubr
push
jmp
daa
xchg
pop
lock
icebp
test
(bad)
int
cld
adc
push
out
xchg
adc
sbb
hlt
cs
mov
mov
call
scas
leave
xchg
push
xchg
xchg
int
call
int
sub
pop
and
mov
shl
scas
daa
into
mov
dec
loop
sahf
ror
outs
iret
shl
repz
lahf
fwait
adc
add
mov
std
cmp
mov
aam
add
xor
out
mov
stc
ja
push
pop
fist
pop
adc
add
inc
cmps
or
pusha
jne
fldlg2
popa
(bad)
ds
sub
push
add
lods
mov
mov
movs
lods
push
jmp
adc
popa
sbb
jle
cmp
add
inc
ret
(bad)
div
(bad)
ror
push
(bad)
stc
mov
nop
inc
shl
test
xlat
xchg
mov
pop
xor
dec
jmp
out
es
adc
mov
mov
fldcw
clc
pusha
jmp
jp
arpl
out
or
inc
(bad)
retf
retf
mov
fadd
and
mov
fs
iret
test
mov
and
inc
adc
jle
ins
xor
or
inc
mov
inc
into
inc
jae
xor
fucom
(bad)
in
push
adc
mov
(bad)
hlt
mov
xor
lods
pop
pushf
je
iret
and
sbb
sbb
scas
or
sub
add
mov
xlat
cdq
add
sar
cwde
cmps
mov
jne
ret
out
sub
dec
sub
loop
in
inc
cli
push
jp
xor
int3
xchg
xchg
aas
xchg
cmp
stos
aaa
or
out
cdq
xchg
movs
pusha
repz
not
xchg
xor
test
xchg
xchg
xchg
dec
xchg
call
inc
inc
pop
add
outs
sbb
mov
push
jns
imul
jge
sar
inc
das
test
loop
push
dec
add
pushf
jae
test
call
jl
sub
sub
vpsubsb
mov
icebp
push
out
xor
out
add
stos
sbb
scas
pop
hlt
fsubr
adc
(bad)
and
mov
pop
fidivr
dec
sub
retf
push
xchg
xor
push
sub
fidiv
cmp
xor
ret
loope
loope
test
(bad)
hlt
pop
aas
dec
idiv
(bad)
inc
outs
out
sub
jno
sbb
jb
test
pop
cmps
aad
mov
xchg
sub
mov
mov
add
test
or
test
ds
in
xchg
add
out
sub
inc
xchg
adc
adc
rcr
vpacksswb
pusha
fldcw
push
movs
enter
out
xchg
sub
pop
xchg
or
mov
jmp
xchg
inc
mov
retf
xchg
dec
fwait
push
xor
icebp
mov
sub
sti
inc
in
sahf
in
mov
mov
jnp
xchg
jl
mov
stos
int3
mov
dec
xor
cmp
in
outs
pop
aam
fisub
inc
cmp
mov
adc
sub
push
adc
pusha
scas
cmps
push
jne
div
jae
cmc
push
mov
fistp
out
dec
xor
mov
stc
mov
xchg
mov
cmp
stos
sub
ficomp
popf
add
sbb
sub
loope
fbld
push
fst
loopne
aas
adc
sbb
addr16
popa
jle
out
jl
lds
lock
ins
and
mov
cmps
mov
rcl
dec
fs
movs
jnp
and
or
inc
daa
jae
xchg
add
adc
add
and
sub
test
test
dec
ret
jecxz
add
sub
std
xor
mov
addr16
mov
jne
xchg
shl
mov
idiv
mov
add
rcl
aam
retf
outs
jg
jnp
idiv
scas
(bad)
inc
mov
mov
repz
div
sbb
aaa
xor
movs
mov
or
mov
add
ja
mov
test
xor
push
inc
pop
(bad)
jle
jb
(bad)
push
adc
outs
bound
xchg
xchg
or
mov
mov
pop
sub
cmp
and
iret
(bad)
pop
stos
outs
inc
dec
push
loopne
mov
fmulp
jne
sti
cmp
dec
imul
xchg
lods
cmp
fdivr
or
cld
ins
mov
shl
mov
adc
je
xchg
jl
xlat
mov
cmps
push
bound
sbb
lea
lods
call
mov
retf
pop
cli
mov
popa
mov
lods
sub
push
mov
lods
dec
enter
vpsubusw
adc
stos
stos
jg
fiadd
cdq
sti
pop
inc
popa
nop
or
mov
and
sbb
(bad)
popf
adc
mov
cmp
clc
(bad)
xor
pop
call
fild
jmp
les
xchg
sbb
jmp
xchg
(bad)
pop
mov
sub
addr16
adc
mov
test
jnp
push
data16
add
call
pop
(bad)
cmp
into
mov
jmp
mov
dec
sbb
retf
mov
adc
loop
fxtract
scas
inc
push
test
adc
cmc
add
push
lea
sub
mov
xor
in
add
lea
or
inc
(bad)
aad
out
mov
shr
pop
mov
test
lods
leave
add
pusha
add
loopne
jmp
mov
push
shr
call
sahf
(bad)
push
mov
jp
dec
shl
aas
mov
and
arpl
loope
fstp
ds
fstp
mov
icebp
jge
test
stos
cmp
pop
pop
out
jnp
dec
xchg
into
(bad)
mov
hlt
ss
call
loopne
aaa
lds
fcmovbe
xchg
js
mov
or
cmp
stos
lods
pusha
dec
cwde
test
std
mov
mov
stc
ret
fucomip
mov
mov
fcomip
jnp
xor
sbb
idiv
(bad)
lahf
xchg
and
fstp
scas
test
and
dec
inc
ret
fcomip
fist
shl
xchg
jle
loop
sub
sbb
and
je
shl
rcr
cmps
mov
inc
pop
jno
test
sbb
add
inc
sbb
push
ret
add
xchg
iret
sbb
movs
popa
xchg
data16
and
repz
or
das
sub
rol
pop
repz
inc
push
inc
jge
out
sub
or
mov
or
adc
outs
and
repnz
mov
les
jg
lods
dec
mov
inc
(bad)
div
jbe
push
scas
mov
lea
fwait
cs
sbb
jle
push
repnz
mov
mov
mov
mov
fadd
and
jge
mov
iret
xchg
and
adc
mov
not
or
mov
cdq
outs
add
daa
out
jle
in
jnp
adc
arpl
dec
enter
sbb
arpl
mov
popa
mov
cmc
inc
(bad)
outs
rcl
dec
idiv
mov
shl
push
mov
or
aad
imul
fwait
sti
loope
dec
cld
mov
mov
(bad)
push
cmps
dec
add
loope
xchg
jmp
cmps
mov
aam
loopne
daa
outs
sar
clc
xchg
ja
jmp
add
push
stc
mov
sub
shl
dec
outs
mul
fs
stc
jne
stos
in
and
pop
popf
mov
sbb
sub
pop
and
add
aad
dec
add
mov
pop
repz
outs
rcr
in
and
inc
xchg
cmp
fdiv
jmp
lock
xor
dec
repz
inc
inc
sar
test
mov
mov
in
arpl
in
or
out
add
bound
in
stos
cmp
leave
dec
int3
jge
call
scas
add
push
fidivr
gs
sbb
jnp
outs
cmp
cwde
int
push
push
scas
ret
push
mov
inc
into
jns
je
push
add
int
lds
out
mov
jbe
pop
sbb
mov
jb
lahf
jmp
jmp
adc
cmps
xchg
mov
sbb
ja
xor
jae
ja
les
and
imul
loop
das
jne
shl
call
fwait
and
(bad)
pushf
sub
inc
sub
push
rcr
fisubr
mov
jns
cmp
jmp
add
cwde
clc
popa
retf
lods
cli
xchg
(bad)
daa
mov
xlat
xchg
pop
jecxz
es
sub
inc
jecxz
inc
call
leave
aam
ss
popa
and
jle
sbb
jl
mov
sbb
jmp
aaa
xchg
loop
cmp
jl
clc
leave
cmp
mov
mov
test
mov
cmp
cmp
ins
sub
pop
rcr
mov
hlt
push
mov
xor
inc
sub
fidiv
dec
pop
dec
mov
cmp
es
inc
xchg
mov
cdq
rol
icebp
cmc
pop
stos
imul
enter
scas
jge
or
cmps
mov
jle
add
and
das
dec
(bad)
fstp
push
mov
jo
sub
cdq
retf
pop
push
jno
xchg
dec
cmp
mov
cmps
es
xchg
out
jnp
test
fwait
sbb
mov
and
jo
xor
cmp
xchg
push
into
retf
push
xchg
fsubrp
inc
lds
ins
call
enter
in
dec
aaa
push
cmp
pop
dec
repnz
(bad)
fild
hlt
fs
addr16
call
lea
(bad)
in
retf
mov
ins
cmp
popf
mov
sti
sub
or
sub
cmp
or
movs
cmc
push
test
sub
or
inc
ss
jmp
cmp
(bad)
(bad)
pop
scas
lahf
in
ret
out
fldenv
retf
add
adc
mov
mov
cmps
(bad)
mov
test
jle
mov
cmc
add
or
jb
pop
cdq
popa
stos
iret
xchg
aad
jo
gs
inc
add
or
or
push
dec
lods
pop
adc
ret
call
aaa
stos
(bad)
out
and
(bad)
mov
lods
or
stos
mov
inc
sub
out
sar
sub
sub
jg
mov
cmps
lds
into
or
sub
pop
jecxz
cmc
in
mov
inc
dec
imul
cs
pop
mov
cmps
cmp
xchg
addr16
fadd
adc
cdq
es
sti
cmp
dec
xchg
int3
or
and
xor
dec
test
icebp
fwait
jae
std
es
jbe
rcl
jp
pop
push
test
js
jno
sbb
dec
push
int
sub
pushf
pop
bound
aam
fnstcw
leave
mov
xchg
pop
mov
inc
and
cmp
addr16
aad
xchg
adc
jl
dec
(bad)
repnz
add
cmps
(bad)
fldenv
pop
in
fnstsw
adc
pop
cmp
in
sub
mov
jns
ud2
add
dec
and
jge
mov
daa
adc
xchg
ins
jne
fnstcw
jecxz
xchg
cwde
mov
pop
popa
lods
push
(bad)
adc
scas
mov
ins
cmp
xlat
loopne
popf
sbb
mov
pop
adc
sti
sbb
pop
xchg
xchg
cmp
mov
ror
mov
jo
xchg
pop
in
in
xor
js
sub
jmp
push
add
test
jg
push
sar
push
int
shl
repz
cld
adc
pop
push
movs
dec
mov
jnp
mov
cdq
adc
daa
mov
pop
cmps
dec
scas
repz
xor
fstp
add
jge
test
es
inc
sbb
adc
xor
les
lock
pop
imul
and
mov
mov
xchg
fldenv
inc
push
scas
adc
mov
fld
ret
mov
aad
nop/reserved
adc
push
and
mov
in
push
dec
dec
push
cmps
push
inc
sub
xchg
xchg
jle
cmp
bound
pop
(bad)
neg
adc
cli
inc
out
adc
dec
cld
shr
fimul
jp
dec
mov
test
and
adc
lods
fs
movs
mov
(bad)
lods
xchg
xlat
in
test
fsubr
pop
fild
mov
fisub
pop
cmp
cmp
outs
add
ret
mov
jg
into
std
sub
jmp
dec
mov
test
daa
mov
adc
jmp
mov
mov
fcomp
dec
pop
sub
sbb
adc
dec
das
xor
jle
(bad)
out
push
pop
mov
and
sbb
push
cmps
sbb
push
inc
sahf
jb
push
fist
mov
xchg
pop
and
inc
push
push
push
shl
mov
cmp
xchg
retf
js
push
jnp
and
push
(bad)
mov
push
je
xchg
lods
bound
mov
adc
inc
add
push
mov
push
cdq
scas
xor
imul
shl
ins
add
out
aas
and
push
outs
push
pop
jns
adc
in
out
sar
outs
in
fs
dec
ja
hlt
push
cmp
hlt
(bad)
inc
nop
sbb
cmp
call
int
inc
sub
retf
in
add
xor
push
cmp
cmp
cmp
outs
add
and
in
ret
adc
cmc
sahf
scas
pop
push
repnz
xlat
fs
pop
call
jmp
idiv
fst
add
test
adc
movs
sub
shl
push
ret
mov
mov
fdiv
daa
outs
xchg
loopne
pop
mov
mov
sub
and
pop
and
cmp
inc
adc
xchg
popa
dec
imul
fsub
(bad)
mov
mov
dec
pop
(bad)
ror
jmp
sar
push
sahf
dec
xchg
and
stos
aas
mov
pop
mov
loopne
dec
rcr
fs
(bad)
sub
cmps
inc
cmps
call
in
sub
pop
mov
jae
retf
cwde
popf
pop
mov
sar
sub
stc
retf
aam
ror
inc
loop
or
sub
ret
inc
ins
mov
stc
in
and
mov
mov
xor
cli
and
(bad)
lea
shl
adc
cmp
pop
repnz
mov
xchg
xchg
sbb
or
inc
jbe
test
les
jge
jno
xchg
loope
jmp
fisub
mov
cmp
add
and
fstp
loope
jge
in
push
cmp
cmp
loop
repz
in
xchg
mov
inc
dec
imul
mov
mov
das
into
das
imul
jns
shr
mov
sbb
xor
and
mov
js
xchg
mov
fidivr
dec
and
pop
push
fwait
cmp
loop
inc
(bad)
shl
cmc
std
pop
adc
mov
leave
(bad)
xchg
dec
or
(bad)
cmp
lds
mov
lods
pop
mov
ret
mov
sbb
lods
xchg
adc
outs
jle
cmp
cmps
rcr
push
popf
sub
fdiv
shr
dec
scas
loop
mov
cli
not
(bad)
je
xchg
shr
push
jmp
jno
adc
cs
pusha
xchg
das
mov
mov
out
into
jle
inc
rcl
bound
loop
mov
repz
push
or
pop
cmp
sbb
data16
sar
mov
push
sbb
jmp
adc
cmps
mov
cwde
int
sbb
and
inc
cwde
xor
xlat
xchg
je
out
inc
push
leave
ins
xchg
dec
mov
jmp
sti
sbb
inc
popf
fstp
mov
ror
dec
mov
mov
mov
js
cmp
xor
adc
addr16
loop
fcmovbe
adc
pop
aaa
mov
add
clc
outs
jo
imul
lods
pushf
mov
pusha
adc
jno
fdivr
aas
mov
dec
pop
cwde
call
dec
pop
aam
or
scas
hlt
adc
xchg
cmp
push
punpckhwd
sbb
test
outs
inc
shl
push
and
sbb
jg
popf
retf
or
scas
add
push
call
jle
push
jne
enter
jecxz
mov
or
js
jmp
and
dec
ficomp
rcl
push
mov
add
(bad)
mov
popf
push
or
lea
fsubr
nop
mov
xor
subps
pop
outs
sbb
mov
rcl
sub
ins
jb
inc
dec
push
gs
and
rol
scas
lods
jns
(bad)
jmp
dec
(bad)
pop
xlat
jmp
adc
scas
or
nop
pop
adc
or
inc
mov
call
inc
pop
inc
jmp
leave
jecxz
mov
adc
add
aaa
push
add
xchg
imul
add
(bad)
and
outs
cmps
or
fcomp
daa
and
popa
jg
dec
xor
enter
pop
and
jns
adc
xchg
popa
or
scas
mul
and
add
xchg
clc
dec
pop
cli
dec
pusha
jae
adc
push
clc
js
rcl
push
retf
in
pop
test
and
sub
and
mov
or
mov
fnsave
or
xor
scas
shl
in
in
out
aam
push
pop
outs
push
cmp
xor
or
cmp
lahf
jl
stos
pop
and
ja
int3
mov
rcr
or
mov
clc
dec
sbb
pop
js
out
das
in
inc
mov
icebp
pop
dec
popa
mov
cwde
adc
pop
adc
test
test
mov
jb
sub
sub
dec
and
mov
or
inc
leave
mov
inc
pushf
test
fcmovnu
jnp
or
lock
addr16
xchg
mov
loop
jg
mov
push
mov
mov
imul
repz
cmp
das
mov
movs
sti
push
call
jle
push
loopne
jle
sub
or
inc
cmp
pop
hlt
sub
and
pushf
shl
fstp
aad
aad
pop
mov
lahf
mov
xlat
and
aam
jns
ins
mov
mov
add
les
add
sub
test
sub
fwait
or
xchg
js
sbb
jo
jg
into
dec
int
jnp
cmp
lock
test
jp
and
xchg
loope
xchg
stos
cmp
mov
ja
and
clc
popf
xchg
fstp
xlat
cmp
and
test
mov
cli
(bad)
(bad)
push
daa
jne
sar
sub
std
xchg
ret
retf
scas
push
aas
jne
ja
inc
mov
call
mov
out
div
cmp
inc
adc
into
pop
and
int
adc
and
jmp
hlt
jbe
or
or
das
xchg
pop
mov
adc
(bad)
jle
scas
ficomp
ss
dec
cmp
loop
scas
mov
lock
bnd
pop
or
add
push
or
mov
ins
into
jo
xchg
addr16
fiadd
outs
arpl
inc
sub
xchg
fidivr
ja
jmp
in
xor
cmp
pop
xor
in
cmp
cmc
pusha
add
push
mov
jae
or
xchg
ja
jbe
(bad)
into
push
scas
adc
(bad)
adc
clc
mov
push
jbe
inc
out
mov
popf
mov
xlat
or
(bad)
imul
aaa
pop
rol
push
dec
popa
rcl
pop
and
push
mov
or
leave
das
inc
xchg
(bad)
xchg
mov
inc
adc
adc
xchg
dec
mov
mov
mov
push
icebp
pop
sbb
jo
psubw
xchg
mov
push
inc
dec
aas
xchg
cmp
arpl
mov
add
cdq
jmp
or
mov
in
les
loope
cmp
push
aaa
mov
arpl
mov
arpl
pop
mov
sub
sbb
cmp
mov
and
fist
pusha
sbb
cs
int3
jge
mov
addr16
push
loope
fsubr
cmp
push
scas
dec
popf
mov
lahf
scas
loopne
dec
lods
lea
mov
mov
jne
xchg
xor
call
call
sahf
les
clc
icebp
imul
addr16
mov
out
mov
dec
enter
mov
inc
fdiv
test
fimul
inc
icebp
mov
sub
adc
mov
mov
xchg
mov
(bad)
shl
adc
sbb
es
in
fiadd
xchg
fdiv
leave
pop
(bad)
call
(bad)
adc
push
sub
ret
push
dec
fucom
xor
cmp
mov
xchg
fimul
clc
mov
dec
mov
pop
and
out
sbb
or
sub
mov
and
call
aam
mov
bound
iret
sbb
jae
jg
loope
inc
pop
mov
xor
sar
shl
mov
clc
pop
push
push
sbb
or
cmps
outs
div
add
bound
arpl
and
cmp
and
add
adc
push
repnz
daa
mov
xor
ds
lahf
icebp
movs
jmp
ja
scas
or
push
jns
(bad)
mov
cmps
push
ss
loop
ror
push
jo
scas
hlt
push
(bad)
jnp
dec
sub
sbb
cld
sub
cmp
jge
mov
pop
fild
mov
pusha
fst
stos
pushf
jae
sub
js
stos
imul
xchg
cmp
mov
pop
rcl
pushf
pop
les
stos
pop
fistp
repz
(bad)
not
push
xor
push
pop
jmp
pop
loopne
not
sub
jmp
dec
mov
or
pop
je
das
add
mov
inc
mov
in
and
add
xchg
adc
adc
(bad)
cli
outs
pusha
or
cmp
xor
jb
rol
sbb
inc
push
mov
add
shl
xchg
xchg
jp
cmps
cmp
jp
sub
into
ins
mov
cli
(bad)
mov
dec
in
test
jo
cmp
sti
lea
out
bound
and
xchg
dec
and
xchg
inc
xor
jge
je
les
xchg
cmps
enter
lods
mov
sbb
jae
(bad)
(bad)
out
mov
mov
outs
idiv
call
or
inc
enter
dec
(bad)
push
pop
ins
inc
mov
dec
ins
pop
mov
and
pop
and
dec
stos
push
imul
mov
and
pushf
jl
pop
shl
aam
and
lds
and
adc
or
int3
inc
dec
loope
movs
imul
push
ret
movs
fbstp
(bad)
sbb
ret
xor
pop
dec
loopne
(bad)
mov
aaa
or
mov
mov
test
mov
imul
cli
dec
add
sbb
mov
shl
call
cmp
imul
add
dec
pusha
xchg
outs
mov
enter
(bad)
out
clc
retf
sbb
jae
test
mov
imul
jmp
mov
(bad)
ds
push
outs
cmps
out
or
push
push
mov
mov
add
push
lods
pop
in
push
sahf
push
outs
arpl
in
push
test
dec
mov
fcom
or
fimul
sub
dec
and
sbb
mov
sbb
cld
je
inc
dec
fs
sbb
sub
sbb
sbb
adc
retf
cli
bound
or
in
aam
xor
sbb
aaa
cmp
cld
ret
push
aaa
jmp
shl
dec
btc
and
mov
push
jo
inc
les
mov
dec
dec
mov
cmp
sub
in
mov
mov
test
aas
fxch
jg
iret
ins
clc
cmp
push
outs
pop
sub
int3
jae
push
int3
rcl
jg
das
jns
adc
mov
push
inc
retf
shl
nop
cmps
mov
or
dec
(bad)
sahf
sbb
mov
imul
scas
push
leave
inc
cmps
enter
or
in
ja
xchg
shl
push
xor
sub
sub
xchg
repz
js
sub
push
mov
push
sar
stos
jmp
dec
xlat
add
loope
sbb
ret
cmp
in
add
imul
in
movs
adc
xchg
in
outs
bound
outs
pop
pop
test
cli
mov
(bad)
adc
or
ins
repnz
push
cmp
pop
fsub
jno
lock
test
test
add
out
add
mul
and
inc
or
jbe
ja
jae
xchg
xlat
pop
mov
das
(bad)
out
pop
pop
xchg
dec
push
loope
les
aad
(bad)
mov
dec
xlat
scas
fpatan
jne
(bad)
cli
mov
dec
jle
pop
std
cli
aam
ins
sub
(bad)
dec
inc
inc
push
sub
sub
mov
pop
retf
mov
aas
sbb
push
cwde
iret
add
dec
mov
lods
fmul
sbb
stos
call
push
hlt
loopne
mov
xchg
cmp
cmp
pop
push
daa
dec
or
int
icebp
les
popa
jmp
pop
sbb
lods
ret
dec
pusha
mov
ins
cmp
add
scas
sub
adc
icebp
jmp
adc
outs
dec
or
je
push
adc
dec
in
call
pushw
jo
xor
xlat
lahf
(bad)
jne
je
retf
ins
mov
or
adc
dec
es
data16
and
sbb
pop
mov
inc
pop
and
(bad)
sbb
retf
aad
xstore-rng
cmps
pop
or
out
add
push
sub
xor
xor
xlat
lock
repz
cmc
cmc
push
mov
rcl
push
push
enter
push
xor
mov
jae
mov
or
xchg
xchg
sub
sub
cmps
push
push
(bad)
call
and
cli
mov
push
adc
arpl
jg
lods
ret
ins
xor
stos
add
das
lods
jl
push
add
or
mov
cs
adc
jmp
ret
add
movs
arpl
xor
fsubr
std
xchg
or
pop
add
and
xor
push
xor
je
add
push
mov
mul
sbb
xchg
xor
repz
and
lds
sbb
out
(bad)
dec
pop
sbb
pop
repz
fimul
mov
cmp
fst
sbb
mov
jne
add
inc
(bad)
dec
dec
dec
cmp
inc
clc
mov
sbb
xchg
(bad)
(bad)
shr
sti
jns
dec
repz
loop
mov
jp
(bad)
(bad)
(bad)
or
and
scas
ss
push
retf
daa
pop
fisubr
inc
pop
rcl
xor
pop
aas
in
cmp
mov
adc
mov
push
or
mov
ret
test
sub
out
outs
(bad)
and
mov
add
sbb
imul
das
ret
adc
inc
or
stos
repnz
add
adc
arpl
cs
xchg
je
jmp
popa
cmc
fwait
mov
fwait
popf
adc
gs
sbb
and
jmp
in
xchg
jle
repz
push
shl
and
jnp
jbe
push
xchg
rcl
mov
nop
dec
xchg
mov
or
fmul
outs
jecxz
push
aas
cmp
js
xor
xor
and
pmaddwd
dec
mov
imul
cmp
ret
icebp
das
or
aas
jge
stos
inc
(bad)
xlat
ds
dec
fcmovbe
aas
les
inc
cs
xchg
inc
std
int3
cmp
paddq
stc
push
mov
mov
imul
jle
(bad)
add
lods
icebp
mov
retf
leave
movs
jecxz
and
imul
pop
iret
jp
cmps
jge
pop
cli
sar
dec
call
lods
rol
shl
call
xchg
and
mov
dec
pop
jg
jns
test
pop
cmps
cmp
cmp
xor
sti
bound
lods
or
inc
scas
inc
inc
enter
ins
sub
aam
stc
push
cmp
push
je
xor
stos
cmp
outs
mov
xor
mov
dec
sbb
xlat
lea
pop
xchg
or
adc
in
mov
xchg
out
aad
out
(bad)
ret
rcr
aas
sub
movs
mov
push
xchg
lods
imul
clc
fistp
dec
out
ds
iret
outs
sub
sti
xchg
cmps
sub
rcr
mov
mov
frstor
mov
pop
sub
fdivr
mov
lods
int3
push
fsub
in
fiadd
inc
add
ins
(bad)
mov
sbb
out
in
scas
cmps
cmp
mov
and
in
imul
inc
int
pop
loope
mov
pop
xchg
and
lahf
gs
mov
dec
mov
xor
cwde
into
sub
adc
shl
loop
dec
ret
inc
scas
lods
sub
jle
push
xchg
imul
dec
push
lock
daa
pop
test
add
in
inc
add
cmp
movs
lea
lahf
ret
movs
cmp
lds
sti
cli
sbb
(bad)
ss
cmp
rcl
mov
loop
mov
test
push
scas
xchg
sti
xor
sbb
in
and
sahf
or
ret
rcl
sar
daa
dec
aas
int
jmp
dec
in
scas
sub
add
mov
add
push
mov
nop
inc
fimul
adc
sbb
daa
call
adc
sbb
je
test
or
(bad)
ficom
jecxz
test
xchg
ret
in
outs
mov
pusha
imul
int
aad
add
stc
mov
dec
or
dec
jmp
and
jmp
mov
jne
jle
push
push
je
cwde
cmp
xchg
mov
mov
(bad)
lea
inc
and
pop
lea
push
popf
pop
dec
mov
push
movs
push
jle
jns
or
push
ror
in
stos
xor
ret
test
mov
add
jae
sbb
adc
mov
add
loope
fidiv
jp
pop
(bad)
xor
add
enter
fmul
test
xchg
nop
retfw
pop
in
(bad)
cmc
mov
cwde
pop
shr
mov
dec
inc
pop
mov
dec
jle
push
pop
outs
mov
cwde
xchg
push
xor
cs
or
pop
inc
and
sub
jne
aam
test
add
sub
fstenv
inc
loopne
mov
mov
jmp
stc
add
test
add
xchg
rcl
ficom
repnz
cmp
cwde
xor
icebp
nop
retf
jge
xor
push
pushf
sbb
push
adc
jns
inc
xor
loop
mov
or
rcl
enter
popf
xor
sub
inc
loopne
inc
(bad)
loope
mov
push
xchg
sub
or
dec
out
jg
push
call
(bad)
cld
repz
daa
jle
ja
inc
ja
ins
std
rcl
ja
ja
xor
jmp
push
mov
inc
inc
outs
sar
fadd
cmc
pop
jmp
sbb
retf
rol
xor
in
jg
add
div
mov
(bad)
mov
lea
imul
and
int3
call
mov
xchg
int
xchg
jo
add
pop
jmp
add
or
inc
mov
inc
rol
daa
dec
push
test
and
xor
mov
add
js
int3
adc
mov
jp
push
fs
xchg
mov
add
mov
and
xchg
mov
xor
jg
mov
adc
mov
test
jbe
xchg
pop
cs
rcr
mov
outs
add
dec
call
mov
xchg
es
dec
sbb
mov
addr16
jp
jmp
mov
outs
sbb
mov
and
adc
dec
mov
clc
cdq
inc
mov
and
dec
sbb
ret
cdq
cmp
jmp
ins
mov
jl
sbb
and
div
fs
imul
pop
add
pop
aaa
inc
xor
pop
push
or
dec
es
jnp
or
retf
jbe
jl
and
mov
dec
mov
xchg
mov
test
pushf
and
ret
test
sub
mov
pusha
mov
xchg
push
repz
jo
mov
sbb
jne
sbb
fidiv
mov
cli
sbb
mov
or
sub
in
xchg
xor
xor
mov
pop
adc
fcomp
imul
jnp
push
jl
jle
push
stos
ret
fs
int
jp
fbld
xchg
aaa
enter
(bad)
int3
push
mov
add
int
dec
mov
mov
mov
xor
mov
mov
add
and
xchg
cmp
mov
cli
dec
add
icebp
(bad)
lods
leave
sub
cwde
pop
jno
jle
std
xchg
pop
mov
imul
xchg
mov
retf
adc
sbb
sahf
xor
jb
lea
int
(bad)
fwait
scas
and
push
enter
mov
sbb
imul
je
sahf
push
mov
fwait
sub
inc
inc
mov
cmp
idiv
cmc
fst
push
aad
icebp
xor
jns
xor
lahf
(bad)
aaa
(bad)
outs
stc
mov
and
clc
or
popf
repnz
push
imul
outs
mov
xchg
fdiv
daa
sub
adc
sub
popa
loopne
aam
add
les
in
popf
inc
hlt
push
popf
mov
es
mov
push
aas
stos
call
mov
jbe
inc
sar
xor
mov
test
stos
xchg
mov
jno
xchg
test
test
in
pushf
xor
sub
sub
mov
in
lock
clc
div
jp
push
repnz
jecxz
xor
mov
pop
fsubr
or
and
inc
nop
mov
icebp
daa
jecxz
nop
mov
mov
push
jl
arpl
hlt
pop
push
push
xor
lds
call
push
push
jge
loopne
ss
jge
call
pop
push
test
imul
fldenv
xchg
dec
out
jg
push
ja
mov
adc
xchg
mov
pop
push
and
sub
loop
pushf
mov
cs
xchg
loop
pop
(bad)
loop
(bad)
(bad)
nop
pop
cmp
les
ror
adc
push
imul
loopne
pop
les
add
idiv
inc
fild
das
call
push
(bad)
aam
xchg
pop
inc
cdq
and
aad
test
fs
push
inc
ficom
dec
cld
xchg
aam
inc
cmps
test
push
stc
imul
jp
gs
mov
movs
int
jbe
cmp
in
ss
xor
jae
jl
ffree
push
test
jb
and
cwde
and
out
push
jne
xlat
add
mov
push
in
daa
mov
mov
(bad)
(bad)
mov
mov
fbld
push
retf
repz
mov
sahf
shl
xor
repnz
cdq
cwde
xor
lock
sub
sub
(bad)
data16
into
das
inc
in
data16
sbb
retf
cmp
inc
mov
jns
sahf
xor
mov
in
push
cmc
rol
push
push
jb
or
pop
outs
test
sub
jb
mov
mov
jmp
adc
mov
imul
sbb
push
and
push
retf
adc
push
and
sar
dec
retf
pop
iret
lods
lock
cli
inc
cmp
ds
push
jne
mov
enter
dec
push
xchg
mov
daa
dec
les
xchg
mov
pop
add
imul
aam
sahf
mov
sbb
repz
(bad)
push
push
sbb
ja
rol
add
xchg
lods
shr
and
int
movs
movs
push
lods
jo
cmc
and
mov
fwait
and
test
xchg
pop
mov
test
loopne
or
mov
dec
or
in
and
ret
push
dec
xor
add
sbb
call
and
test
push
and
sbb
jbe
push
fcmovb
or
enter
test
std
jp
cmp
push
jo
push
jmp
das
bound
fwait
aas
test
in
test
stos
retf
imul
jo
or
xchg
ret
lea
out
pop
jl
sbb
dec
xchg
push
fidivr
les
fcomi
js
out
sbb
mov
ss
(bad)
(bad)
enter
(bad)
xchg
imul
push
stos
pop
jmp
aad
jns
push
arpl
nop
cwde
inc
jp
push
jbe
les
in
xchg
xor
(bad)
adc
push
xor
cdq
mov
push
pop
lahf
jb
mov
addr16
dec
push
je
or
jns
cmps
mov
pushf
xor
clc
leave
xor
fcmovu
jmp
sub
(bad)
fwait
add
cmp
mov
add
xor
mov
push
xchg
adc
movs
mov
xchg
in
(bad)
sub
mov
jbe
shr
ficom
mov
daa
jnp
enter
push
pop
add
mov
out
push
and
xor
retf
outs
ja
jo
cld
cmps
pop
mov
daa
dec
add
adc
and
outs
dec
in
mov
mov
sub
sbb
gs
stc
jno
pop
mov
pop
les
gs
ror
mov
push
arpl
lods
outs
pusha
xchg
jne
stos
xchg
iret
cmp
aas
add
scas
mov
jmp
shl
and
rcl
mov
aaa
dec
repnz
sar
ror
(bad)
popa
jns
fbstp
movs
cmp
push
(bad)
sub
xor
cmp
fiadd
enter
pop
and
leave
xchg
jmp
cmc
mov
xchg
cmp
mov
inc
xor
imul
mov
hlt
ds
je
lds
aad
xor
jp
adc
cmp
scas
es
enter
repz
inc
xor
add
dec
cld
ss
(bad)
jns
mov
xor
lods
test
scas
jns
jae
inc
pushf
jns
add
mov
adc
ret
adc
hlt
pop
call
mov
xor
pushf
ret
dec
sub
test
or
xchg
xlat
outs
movs
enter
into
push
sbb
adc
dec
pop
loop
mov
test
cmp
mov
sar
jecxz
mov
and
xchg
cmp
gs
mov
add
ret
cmp
push
xor
fld
sub
adc
jmp
(bad)
aad
dec
pop
rcl
sbb
xor
xchg
aad
cli
out
ret
inc
sbb
push
mov
lods
(bad)
jge
adc
pop
outs
ret
ins
(bad)
ja
test
test
leave
in
out
push
in
test
out
cmp
pop
fimul
imul
arpl
imul
fwait
push
(bad)
ret
loopne
jne
push
pop
shl
aam
sbb
xor
jnp
in
push
into
xchg
add
jae
ret
push
test
aaa
jne
jns
lods
sbb
push
jbe
push
js
rol
stos
xor
and
push
sub
mov
cld
push
push
stos
pop
mov
ret
jae
or
inc
adc
dec
lods
(bad)
dec
cmp
add
mov
es
pop
in
adc
(bad)
ror
add
pop
imul
(bad)
jmp
ret
push
lds
or
mov
mov
jns
jne
and
test
(bad)
clc
jnp
push
dec
adc
mov
jmp
call
mov
and
mov
push
pmaddwd
rol
jb
push
sbb
jne
jae
cmc
shl
inc
loope
imul
ret
pusha
push
inc
inc
sar
ins
mov
pusha
mov
es
add
xor
xor
add
xchg
add
xchg
jecxz
pop
cmp
ds
cmp
inc
push
in
stc
or
in
in
retf
jne
jmp
lahf
adc
aaa
push
or
jle
std
sub
mov
jmp
out
lds
pop
xchg
xchg
inc
push
jo
push
mov
adc
retf
icebp
out
xchg
adc
in
out
cdq
inc
sub
and
mov
push
mov
data16
in
call
and
pop
dec
int3
and
dec
test
pop
rol
jmp
out
dec
scas
cmp
icebp
fldcw
das
jae
pop
xor
je
cmp
and
cmp
xor
ds
sbb
sub
retf
mov
dec
push
pushf
neg
add
inc
std
push
mov
jbe
mov
fcom
fwait
sub
test
pop
ret
jmp
pop
shl
pop
cmp
cmp
(bad)
mov
lods
jg
call
(bad)
hlt
push
cmp
mul
iret
cmp
sub
xchg
test
dec
or
and
inc
jmp
fsub
sti
mov
out
and
mov
das
and
jp
jg
mov
ror
mov
mov
daa
je
shl
ins
xor
daa
arpl
pop
ja
sub
dec
or
inc
lock
scas
stos
adc
pop
and
in
fnstenv
out
xchg
mul
scas
xor
aaa
rcl
fdivr
sub
mov
xlat
pusha
mov
xor
push
cmps
mov
xor
or
push
mov
cmp
add
jl
shl
pushf
out
sbb
retf
sbb
xchg
ins
jge
push
mov
jne
aaa
mov
mov
popa
jns
rcl
sub
test
clc
jno
(bad)
or
jb
lahf
cmp
or
lods
xchg
sbb
pop
mov
sar
mov
adc
pop
add
retf
sbb
push
(bad)
and
aas
stos
in
repnz
jne
sub
adc
cs
ret
sub
call
outs
into
leave
jmp
inc
mov
or
cwde
(bad)
(bad)
into
cwde
xchg
jae
cmc
pop
mov
sbb
test
loop
xor
mov
aad
aaa
mov
xor
rcl
and
mov
fisttp
ret
push
xor
pop
retf
into
fwait
mov
push
idiv
fdivr
int3
pop
cld
or
xchg
lods
dec
push
xor
inc
mov
repz
jmp
ds
data16
rol
arpl
fsub
lock
outs
imul
dec
dec
repnz
push
mov
xor
sub
push
inc
lahf
lods
jo
inc
pushf
push
aam
mov
sub
jae
arpl
iret
cmp
and
xor
cmp
ja
bound
enter
add
adc
pop
out
push
add
or
inc
fdivr
test
bnd
ret
test
stos
xchg
sahf
ss
mov
add
icebp
loope
push
xor
movs
mov
enter
sbb
push
xor
sahf
call
dec
loop
sbb
lock
mov
idiv
adc
ret
sub
and
sub
imul
jbe
scas
adc
fstp
test
add
push
mov
ss
test
cs
mov
aaa
mov
iret
pop
mov
jno
(bad)
lahf
cmp
(bad)
test
inc
or
mul
jb
cwde
movs
aaa
retf
ret
(bad)
fisub
jl
mov
out
cmp
mov
fdivr
mov
ror
imul
cmp
fadd
sub
movs
clc
shr
imul
(bad)
jecxz
pop
inc
imul
sar
push
rol
xchg
pop
aam
dec
imul
(bad)
pop
dec
or
or
sub
out
stos
xor
pop
add
cmp
outs
mov
call
in
retf
es
mov
push
iret
push
mov
aas
outs
aaa
ins
aam
dec
and
fldenv
ss
pop
sbb
inc
and
test
ror
push
push
rcr
push
sub
stos
mov
cdq
mov
pop
sbb
mov
faddp
mov
fild
ds
xchg
lea
jnp
dec
sbb
repnz
int
or
sbb
adc
mov
pusha
xor
cmps
stc
arpl
mov
call
in
nop
add
jecxz
pusha
mov
sbb
jnp
cmps
repnz
aam
jnp
pop
outs
loope
ret
cmps
pop
inc
inc
jno
pop
in
sbb
ret
neg
push
das
mov
stos
pop
jl
cmp
jle
push
push
dec
xchg
inc
jb
ror
or
adc
inc
into
sbb
daa
push
add
in
or
dec
ins
and
mov
or
cwde
(bad)
in
cmp
push
icebp
es
out
xor
push
fisttp
rcl
setle
jecxz
(bad)
imul
mov
arpl
imul
inc
mov
inc
cwde
pushf
xchg
stos
dec
daa
push
jecxz
inc
jno
cmp
push
push
loop
and
jb
xor
pop
push
mov
push
test
mov
lock
push
ret
fwait
(bad)
or
popa
fcom
sub
jno
in
div
jmp
mov
out
arpl
not
mov
and
in
xor
lea
fsub
aaa
xor
adc
imul
jecxz
mov
loope
rcr
clc
dec
mov
mov
and
jne
sub
retf
xor
data16
jb
movs
cs
add
aad
cmp
inc
les
in
movs
(bad)
stos
pop
xor
cmps
push
sti
dec
pop
and
test
inc
loope
mov
lock
shl
cmp
mov
dec
mov
xchg
pop
jge
es
mov
(bad)
scas
addr16
xchg
shl
repz
out
adc
sbb
cld
setno
repz
mov
sub
les
or
push
mov
in
dec
fisubr
out
jle
push
mov
cmp
sub
push
icebp
popf
in
cwde
mov
xor
mov
add
pop
adc
shl
mov
ret
sub
in
sub
popa
push
imul
mov
out
loop
ss
xchg
adc
jb
loopne
inc
loope
ss
ss
daa
cmc
push
fwait
mov
add
push
mov
sbb
rcr
setge
call
cmps
clc
in
adc
add
xchg
push
pop
dec
(bad)
jl
sbb
xchg
add
sub
test
out
add
mov
movs
rcl
fdivr
jmp
not
cwde
xor
and
pop
shr
xchg
rol
push
popa
nop
xlat
cmp
mov
ret
cmp
dec
add
inc
and
es
scas
pop
shl
mov
mov
daa
mov
cwde
or
sub
lods
movs
test
push
dec
cwde
jmp
mov
repz
inc
sbb
cmp
mov
rcl
xchg
adc
jle
shl
sub
je
or
fild
pop
lods
das
dec
pop
repz
imul
stc
xor
sti
stos
pop
cmc
pop
fdivrp
lahf
setge
jno
mov
lea
loop
movs
push
fdivr
xchg
lods
(bad)
dec
cmp
xchg
push
pop
inc
xchg
jp
cmp
fiadd
dec
repnz
fsub
scas
cmp
repz
lock
or
mov
jle
inc
aam
iret
inc
adc
stos
fistp
mov
imul
push
mov
inc
cmc
fdivr
mov
add
and
data16
jmp
sub
movs
loop
mov
sub
rcr
je
out
xor
sti
je
mov
enter
out
or
sub
aad
adc
pop
call
add
data16
mov
or
cmp
sbb
call
scas
in
mov
adc
mov
mov
popa
sub
(bad)
dec
lock
in
mov
popf
xchg
test
dec
mov
adc
shl
jmp
add
test
aam
xchg
cmc
mov
sbb
fisub
or
(bad)
sbb
hlt
in
sub
fidiv
sbb
fwait
data16
jl
jl
xchg
fwait
movs
pop
call
xchg
rcl
retf
pop
sub
add
lahf
in
sbb
or
enter
or
arpl
pop
retf
loope
mov
mov
ins
cmp
(bad)
std
adc
mov
dec
xchg
fs
ss
les
add
(bad)
push
dec
push
dec
xchg
inc
mov
mov
jmp
inc
int
jmp
js
sub
leave
or
inc
daa
hlt
mov
inc
cli
jae
stc
push
adc
into
or
and
sti
(bad)
fadd
cli
dec
sahf
dec
sub
aas
sahf
retf
ret
fimul
adc
outs
aad
push
push
rcl
cmps
mov
xor
add
sbb
retf
das
fwait
shl
sub
test
ret
adc
cdq
int3
sub
out
adc
add
push
sahf
fild
and
dec
sub
jle
retf
mov
sub
repz
jle
frstor
inc
jne
lds
cmps
push
adc
sbb
push
lahf
retf
add
es
jns
js
jmp
pavgw
stos
scas
leave
popf
test
or
jnp
idiv
(bad)
push
int3
dec
adc
push
cs
pop
cmp
xor
jmp
aad
inc
adc
xchg
jne
mov
sbb
ins
or
adc
stos
(bad)
fdivrp
sub
fs
into
jmp
out
or
stc
xor
popf
xchg
in
mov
pop
sub
jne
icebp
aam
out
jnp
test
push
test
fcomp
xor
mov
and
pusha
retf
jg
xor
push
fild
fdiv
movs
mov
(bad)
das
call
mov
ror
xor
add
fdiv
call
inc
add
ds
stos
jbe
shl
jns
dec
dec
test
push
movs
xchg
test
push
add
stos
sub
movs
gs
imul
outs
loopne
add
xchg
lock
and
lods
outs
xchg
fsub
mov
push
mov
pop
dec
in
pusha
add
int3
add
fwait
in
retf
inc
and
and
mov
jns
neg
in
rcr
and
inc
cmp
mov
or
inc
sti
inc
cmps
push
aaa
loop
test
je
jl
jl
fs
pop
adc
sti
cmp
(bad)
fucom
inc
xor
or
pop
fs
pop
lods
out
arpl
jl
ror
and
cmp
sub
mov
ins
sbb
call
push
mov
pop
adc
xor
mov
jg
popf
in
fcomp
xchg
cmp
inc
ret
out
ins
inc
mov
call
add
push
test
outs
cmps
test
scas
push
xchg
and
jo
std
xor
pop
outs
xor
mov
std
xor
push
cmp
add
stos
test
add
inc
xor
and
ret
jge
ret
call
xchg
js
loop
cs
popa
xchg
jecxz
push
cmps
and
and
xlat
xor
nop
mov
or
add
mov
push
xor
cmp
mov
push
sbb
xor
push
push
inc
push
inc
cmp
aaa
mov
lea
cmps
mov
ret
jae
test
cwde
mov
inc
test
pop
pusha
in
mov
mov
adc
ror
imul
dec
fisttp
xchg
loope
add
mov
test
and
dec
lock
test
out
jns
push
xor
in
out
sub
cmp
or
pop
dec
mov
aad
and
jecxz
xchg
ins
dec
pop
in
push
fild
push
jecxz
es
div
and
int3
lods
into
pop
xchg
mov
xchg
(bad)
push
ins
mov
pop
jnp
and
repnz
jmp
push
lods
pop
jne
sbb
mov
test
(bad)
jmp
push
push
inc
xchg
std
dec
push
outs
daa
repnz
pop
popf
cmp
jnp
adc
call
scas
cmc
xchg
test
jle
jbe
(bad)
mov
mov
call
popa
aaa
shr
cwde
mov
push
push
fst
push
xor
stos
dec
jmp
mov
stc
jae
aad
shr
fstp
enter
push
mov
bound
dec
push
xchg
add
retf
(bad)
pusha
jle
mov
les
repnz
sbb
out
mov
inc
add
ficomp
outs
mul
fs
(bad)
loop
movs
scas
dec
sub
sub
(bad)
sti
int3
mov
std
mov
fcom
push
repz
les
cs
popf
imul
call
cmp
gs
xor
add
inc
and
sbb
adc
sbb
iret
addr16
pop
fdivrp
mov
xchg
mov
jge
scas
fwait
pop
xor
push
jns
jo
nop
xchg
mov
das
sbb
popf
jbe
pop
xor
adc
inc
shl
sbb
idiv
and
dec
imul
mov
add
xor
mov
test
cli
cli
aad
mov
cmp
adc
movs
inc
jmp
mov
mov
jnp
jnp
xchg
(bad)
stc
xor
and
jmp
cmc
in
rcl
shl
and
or
jne
mov
fs
push
xchg
lods
xor
or
aaa
(bad)
cmp
and
adc
movs
iret
mov
popa
xor
ss
test
add
mov
xchg
push
aad
fidivr
sbb
fmul
idiv
movs
sbb
fisttp
adc
mov
test
xchg
movs
into
or
mov
cmp
ins
jo
retf
retf
mov
and
(bad)
js
mov
inc
or
push
aaa
retf
push
mov
mov
outs
(bad)
dec
pop
mov
outs
mov
addr16
xor
jp
xor
das
xor
out
(bad)
fsub
or
arpl
aas
mov
inc
and
ja
lods
mov
popf
mov
push
push
loope
mov
call
retf
push
inc
aam
jno
jno
(bad)
cmp
bnd
sbb
or
outs
or
and
rcr
addr16
cmp
fwait
hlt
(bad)
std
int
test
or
jecxz
movs
into
out
xchg
sti
rcl
pop
mov
push
fwait
adc
out
xchg
push
sbb
loop
fbstp
ret
inc
xor
aam
mov
call
mul
and
mov
mov
push
int
add
bound
inc
fiadd
fimul
mov
and
test
sbb
iret
mov
ds
(bad)
mov
loop
push
call
(bad)
mov
mov
and
add
xor
cmp
es
mov
fcomp
xchg
outs
jp
add
xchg
inc
(bad)
pushf
add
rcl
pop
cmps
enter
and
test
adc
retf
outs
cmp
adc
pop
sub
stos
int
or
mov
imul
int
je
or
hlt
sbb
shl
jb
out
cmp
push
sbb
sahf
mov
je
mov
scas
adc
or
xor
popa
sub
lock
js
push
daa
or
scas
pop
(bad)
stos
push
cmps
popf
popf
adc
lods
mov
mov
sub
retf
mov
sahf
cmp
pusha
mov
jbe
lahf
sti
sub
mov
mov
test
imul
movs
mov
test
jns
sbb
dec
mov
int3
mov
punpckldq
sbb
mov
dec
push
mov
imul
mov
repz
cs
mov
or
retf
int3
push
xor
stc
(bad)
adc
or
adc
lods
enter
je
dec
ret
sub
xchg
arpl
pop
stos
mov
jge
dec
cmp
(bad)
mov
outs
in
or
sub
(bad)
jnp
mov
(bad)
aam
cld
enter
sar
dec
aas
in
pop
inc
mov
movs
das
mov
pop
test
jbe
xor
int
stc
pop
in
aam
fnstsw
and
jle
retf
scas
xor
ficomp
add
pop
add
sbb
pop
xchg
pop
or
jp
iret
les
das
mov
xchg
lds
jg
mov
pop
jbe
mov
add
mov
sub
mov
movs
inc
jl
push
shl
leave
jg
push
arpl
mov
ins
aas
je
retf
iret
xor
nop
scas
or
xchg
adc
inc
dec
adc
bound
out
or
cmc
cmp
or
adc
shl
xor
fwait
das
dec
in
scas
jnp
pusha
dec
sbb
idiv
ror
(bad)
xchg
mov
imul
loopne
and
loop
dec
inc
cmp
shl
pop
or
aaa
loopne
sar
add
pop
call
and
ds
or
push
test
and
fwait
ret
shl
(bad)
fwait
cs
pop
lods
sbb
mov
mov
inc
retf
xor
repnz
scas
cmp
leave
mov
mov
add
pop
adc
jb
in
scas
or
or
push
pop
xchg
push
ret
leave
inc
out
xor
inc
daa
jne
enter
ins
cmp
and
mov
xchg
xchg
or
sbb
adc
push
add
fiadd
and
jp
lods
div
pop
sbb
xchg
push
jnp
je
rcl
lods
shl
jne
xor
lea
or
sub
or
cmpxchg
xor
mov
rol
ror
in
mov
call
aas
out
pop
fbstp
data16
mov
(bad)
imul
pop
icebp
dec
push
js
sub
pop
cmp
push
and
or
out
arpl
xchg
out
clc
and
sahf
jae
int3
leave
das
add
dec
mov
repz
popf
cmps
ss
cmps
into
push
mov
cdq
pop
jae
push
bswap
mov
jmp
call
data16
mov
fst
repz
add
jnp
lahf
int
mov
sti
lahf
cmp
mov
jecxz
inc
outs
mov
adc
pop
dec
arpl
outs
outs
jns
mov
call
and
test
pop
jmp
or
loop
(bad)
ja
bound
and
mov
cmp
add
and
movs
dec
into
mov
push
test
xor
mov
call
dec
push
fisttp
ins
push
xor
sbb
cmp
test
push
inc
xor
or
pop
out
loop
movaps
imul
jb
add
ds
inc
add
xchg
mov
push
aam
xchg
cmps
xchg
pop
xor
xlat
mov
mov
xchg
sbb
ins
ds
jmp
inc
std
inc
aas
pop
(bad)
jle
push
adc
mov
fcomp
adc
lahf
bound
sbb
movs
cli
adc
popa
fcom
dec
cwde
xchg
push
sar
add
call
sub
pop
outs
xor
cdq
add
xchg
gs
shl
lahf
sbb
sub
lods
xchg
aaa
jne
add
movs
ds
in
mov
retf
sub
and
mov
sbb
mov
mov
cmp
std
in
mov
popa
cmp
mov
stos
mov
mov
xor
inc
jg
xor
or
stos
pushf
xlat
adc
les
add
sbb
(bad)
pop
mov
xchg
popa
rcr
stos
out
lea
xchg
jl
int
jge
pop
ud2
cmc
add
push
add
pop
push
mov
ds
dec
cmp
xlat
retf
jnp
sub
idiv
mov
push
pop
adc
fimul
es
fldenv
lea
daa
je
movs
arpl
mov
mov
in
idiv
push
retf
inc
ins
cmp
xchg
xchg
dec
dec
sbb
ret
fsubr
std
mov
xor
push
fadd
cli
nop
or
retf
jmp
pop
mov
test
loope
adc
and
cmp
lea
shr
push
adc
inc
sub
xchg
mov
jbe
icebp
ja
jae
mov
push
cmp
mov
adc
jg
arpl
lahf
in
lods
jmp
pop
leave
mov
and
xchg
stos
test
das
jno
cmp
add
dec
movs
sub
push
sbb
sbb
cld
cmps
in
mov
imul
and
or
jae
sub
inc
mov
dec
es
fs
sbb
xchg
xchg
ret
movs
inc
fstp
icebp
or
mov
and
jno
out
add
arpl
rol
sub
mov
js
cmps
test
and
mov
cmp
push
in
loopne
rcr
stos
loope
addr16
fbstp
and
dec
clc
cdq
rcl
cmp
or
movs
(bad)
rcr
mov
loope
sub
add
xor
in
les
adc
out
cdq
repz
jbe
add
dec
cld
stos
mov
push
add
shr
retf
iret
adc
lock
outs
inc
inc
pop
ds
das
push
sbb
push
dec
cmp
add
das
icebp
cmp
pop
mov
jnp
dec
xchg
daa
jmp
add
shl
add
cdq
popf
cmc
daa
pop
xchg
adc
mov
mov
sbb
into
pop
cmp
mov
and
xchg
push
(bad)
aam
push
imul
xlat
xchg
and
xchg
and
das
sar
inc
sub
bound
into
add
pop
arpl
rcl
scas
std
mov
sti
push
sbb
test
in
call
(bad)
mov
cwde
call
push
and
std
lods
out
enter
inc
add
pop
out
push
inc
sub
add
ja
lea
(bad)
ins
dec
popf
movs
xor
pop
push
inc
mov
jne
jo
rcr
out
lds
add
fcmove
cmp
retf
fild
xchg
cmp
xor
leave
sahf
cwde
xor
fist
or
iret
das
mov
xchg
in
mov
stos
jge
xlat
loopne
cmps
int3
loope
scas
mov
dec
jmp
pushf
cdq
sahf
mov
sub
out
cld
jne
mov
jl
jae
shl
enter
ds
out
test
lock
call
adc
xor
dec
jg
popa
cwde
cmp
mov
mov
mov
mov
xor
rcl
out
or
add
pop
inc
call
dec
xchg
mov
inc
and
cli
or
stos
daa
dec
mov
adc
xchg
sar
mov
xor
mov
test
ret
pop
jno
and
call
lea
mov
xor
inc
mov
add
sub
rcl
fwait
and
movs
shr
push
call
and
movs
frstor
adc
cmp
cmc
addr16
ss
loope
(bad)
jns
cmp
fsubr
movs
je
and
and
ja
sub
(bad)
and
into
scas
cmc
jl
dec
cmp
pop
pusha
retf
mov
loop
mov
jbe
push
outs
cmp
cmp
dec
mov
xor
ds
xchg
and
xor
mov
mov
fsub
push
mov
cmp
sub
scas
sbb
ss
or
pop
mov
es
xor
lds
bsr
xchg
mov
push
in
leave
jge
nop
aad
adc
or
push
push
cmp
sbb
mov
pop
add
imul
jnp
retf
shl
sub
(bad)
aam
movs
fadd
in
jbe
dec
popf
jle
div
out
mov
dec
pop
push
jmp
mov
iret
shl
push
test
jno
push
push
mov
add
xchg
lock
scas
das
push
add
adc
lea
cmp
jmp
fdivr
jp
addr16
aaa
fdivr
stc
mov
or
dec
ja
stos
cmp
aad
test
outs
jge
sub
sbb
jl
push
jae
out
ss
aam
add
add
xchg
mov
jns
scas
xchg
sub
sub
clts
mov
cmp
mov
fucompp
jb
add
adc
xor
js
out
rcl
cmp
(bad)
xchg
stos
int
gs
push
call
and
movs
sub
pop
xor
hlt
or
mov
test
ins
inc
pusha
adc
cli
sub
add
or
cmps
mov
fcom
mov
push
pop
jle
mov
dec
addr16
cwde
scas
mov
cmp
push
jl
sub
pop
or
jge
cdq
pop
test
adc
sub
xchg
cmps
xor
xor
jmp
lock
pop
push
fiadd
loopne
cli
inc
mov
mov
push
xor
mov
and
push
out
hlt
cmps
pop
and
mov
(bad)
arpl
(bad)
loopne
icebp
mov
out
mov
(bad)
jg
rol
jno
lahf
jg
enter
cmp
pop
xchg
and
int3
mov
dec
mov
movs
je
pop
pop
(bad)
mov
or
push
xor
adc
stc
sbb
mov
imul
int3
les
mov
sub
repz
adc
jbe
cmc
pop
lods
jmp
cdq
aas
js
mov
cmc
in
lods
xchg
push
(bad)
jmp
(bad)
js
push
lods
push
cdq
jns
lahf
mov
jne
cli
hlt
mov
mov
push
xchg
pop
mov
in
sub
mov
jno
iret
lods
jl
shl
cs
push
cmp
enter
jo
jmp
lahf
cmp
jbe
mov
xchg
fnsave
mul
loopne
jg
cmp
pop
push
inc
loop
sar
pop
fldenv
mov
daa
(bad)
xchg
nop
arpl
retf
imul
or
jo
mov
push
mov
ins
mov
dec
mov
ret
nop
lock
ins
cs
jl
push
dec
mov
add
sysenter
jp
cmps
(bad)
clc
mov
cmp
stos
clc
stos
adc
xor
inc
stos
lea
call
test
cmc
dec
add
cdq
push
mov
ja
adc
fistp
add
stos
push
cli
lods
cwde
jmp
js
aas
rcr
jbe
in
cmp
xor
xchg
push
aad
mov
test
hlt
xchg
pop
repz
ror
fsubp
enter
jecxz
out
inc
gs
sbb
sub
scas
fst
test
xor
arpl
xchg
mov
adc
sub
xlat
popf
add
dec
inc
stc
rcr
das
in
iret
inc
stos
cmps
outs
xor
repnz
or
(bad)
pusha
or
push
xchg
mov
cld
sar
outs
js
jb
or
xchg
clc
nop
jg
icebp
push
push
call
sti
fist
or
(bad)
(bad)
in
mov
addr16
cmp
repz
inc
pop
jge
mov
or
aaa
push
outs
pop
add
jge
mov
push
in
mov
fdiv
mov
dec
push
popf
mov
cmps
pop
sub
data16
out
aas
neg
adc
popf
sbb
push
adc
pop
arpl
mov
int
add
pop
fnstcw
outs
and
lahf
(bad)
aad
mov
dec
lock
dec
and
lods
repnz
shl
ins
and
arpl
nop
adc
push
cmp
test
sbb
sub
jns
xor
push
add
scas
das
push
fucomi
or
sub
out
(bad)
popf
lea
pushf
lods
jo
inc
cld
and
sub
cdq
push
out
mov
pop
jmp
mov
push
mov
jae
into
idiv
nop
add
and
sti
xchg
hlt
mov
jecxz
xchg
(bad)
out
movs
xor
cwde
(bad)
pop
dec
inc
rcl
repnz
js
cdq
je
mov
clc
movs
inc
scas
cmps
sbb
mov
sbb
jg
cmc
cmc
xchg
test
xchg
inc
mov
jg
fwait
call
iret
cwde
jmp
xchg
in
mov
(bad)
loop
jno
xchg
mov
int
clc
pop
add
fmulp
shr
xchg
(bad)
and
test
shr
out
mov
add
xchg
jb
fsubr
and
or
(bad)
fs
push
movs
je
adc
shl
or
int
ret
sub
iret
ja
add
(bad)
pop
pop
repz
neg
popa
int
push
adc
scas
icebp
cmp
js
fmul
and
inc
int
iret
xchg
xchg
gs
jge
cmp
hlt
push
jbe
mov
add
stos
xor
add
pop
scas
sub
enter
mov
ja
xchg
jmp
mov
fwait
shl
es
sub
(bad)
adc
mov
or
pusha
sub
mov
sbb
fs
(bad)
xchg
jo
sahf
int3
jne
mov
pop
dec
adc
test
push
xchg
inc
cmps
ins
pop
pop
push
push
inc
cld
mov
or
mov
aam
dec
add
fcomp
xor
inc
in
fmulp
cmp
out
mov
scas
std
jl
inc
or
dec
(bad)
jbe
or
mov
mov
pop
std
pushf
sub
aad
push
imul
jne
addr16
in
out
sub
stc
fwait
lods
sbb
or
sub
xchg
loopne
fld
cs
xor
(bad)
clc
dec
aam
pop
pusha
sbb
mov
gs
test
adc
inc
adc
cmps
xor
in
cli
mov
pop
nop
shl
jge
mov
or
clc
gs
xor
inc
sub
xchg
cs
aas
sar
fldcw
mov
xor
test
adc
movs
push
sahf
jmp
inc
dec
test
mov
sbb
pop
mov
xchg
push
jno
cmp
das
out
xor
imul
push
push
xor
jmp
cmps
pop
push
sub
mov
icebp
ss
stc
dec
adc
adc
js
out
inc
mov
or
sub
neg
test
jmp
and
or
dec
jmp
div
out
and
aaa
data16
sub
loop
lea
sbb
mov
pop
addr16
adc
add
(bad)
mov
xor
cmps
or
xor
or
inc
addr16
xchg
rol
mov
jmp
cmp
adc
test
(bad)
mov
dec
xor
mov
mov
repz
push
mov
mov
dec
retf
idiv
cli
cld
jae
mov
and
cmp
pusha
hlt
imul
mov
mov
pop
repz
push
or
lods
jno
xor
dec
bound
inc
mov
lahf
inc
pusha
sbb
test
sahf
aam
pop
sbb
xchg
or
xchg
mov
ror
inc
loopne
cmp
pop
call
sahf
push
mov
or
and
in
pop
cmp
cmp
jbe
cmps
mov
lea
cdq
in
ds
add
or
mov
mov
jb
jge
ins
inc
imul
and
push
jle
dec
inc
int3
cwde
enter
fcomp
mov
das
lods
jecxz
mov
sbb
ja
inc
lock
xor
fsubr
sub
jle
jg
dec
cli
dec
xor
movs
or
xor
punpckhdq
fstp
in
or
pop
push
push
jo
retf
js
mov
jns
xor
dec
ss
lock
std
lea
daa
cld
push
or
popf
and
pop
fist
xor
jmp
mov
pop
int
mov
sbb
inc
rol
aad
das
stos
inc
lds
dec
push
loopne
mov
xchg
inc
dec
adc
fcom
sti
xchg
jnp
retf
(bad)
dec
jle
push
or
out
dec
pop
in
or
cmps
and
fwait
cmps
or
rcr
adc
nop
int
push
xchg
sbb
in
push
push
xchg
inc
push
mov
cmp
stos
shr
pop
lods
shl
mov
pop
pop
out
loop
stc
cmps
fdivr
ret
xchg
(bad)
and
fsub
pop
pusha
loop
int3
xor
ss
mov
loopne
add
cmp
pusha
pop
retf
push
test
mov
ja
pop
outs
cmp
pop
xlat
(bad)
fcmovu
xor
out
in
test
adc
repz
lahf
jns
xchg
pop
mov
(bad)
iret
dec
lahf
and
repnz
sbb
ss
jne
in
or
rcr
push
pop
push
pop
adc
sbb
and
shl
push
sub
fdiv
pop
scas
adc
std
add
les
adc
add
mov
sub
cld
push
dec
jmp
or
mov
stc
push
repz
dec
and
or
or
ins
sahf
aad
or
in
pop
in
mov
dec
mov
test
mov
loopne
mov
outs
fisubr
or
fsincos
(bad)
jne
call
cmp
test
fadd
adc
pop
mov
inc
xchg
lea
lea
pop
dec
cmp
pop
enter
push
jb
jmp
cmps
cmp
xchg
mov
dec
jge
ja
dec
popa
test
in
pusha
(bad)
xlat
jbe
in
mov
sbb
cdq
jmp
fdiv
ins
xchg
or
daa
or
pop
ins
(bad)
cld
ss
ds
sbb
push
xchg
aam
xchg
ficomp
leave
xor
push
mov
retf
lock
cdq
fild
in
xor
push
nop
daa
jl
xchg
mov
sub
mov
leave
f2xm1
out
leave
leave
jno
sub
dec
aad
in
gs
fcmovnu
push
mov
dec
mov
loopne
sub
jecxz
retf
xchg
jae
std
jge
int
xchg
shl
jmp
lods
popf
movs
les
retf
mov
aad
sub
add
out
test
dec
out
clc
fidiv
pop
xor
in
stos
xor
sub
dec
das
clc
mov
fimul
pop
jmp
jmp
gs
lock
sbb
lahf
mov
mov
dec
adc
gs
iret
push
cmps
sbb
mov
ins
xchg
adc
mov
pop
daa
sub
arpl
mov
aaa
add
mov
or
push
lahf
and
pop
adc
call
fsubr
mov
retf
ins
fwait
and
jno
xchg
sub
mov
into
into
push
bound
mov
inc
arpl
jmp
push
mov
sbb
xchg
mov
add
shl
addr16
retf
push
mov
pop
cld
scas
dec
cli
dec
add
mov
test
mov
sbb
movs
jg
jne
push
push
push
sahf
xchg
cmp
cmp
lods
fild
sbb
inc
cmp
adc
int
popa
pushf
out
(bad)
jno
iret
cmp
push
sub
adc
mov
cs
shr
stos
shl
jnp
(bad)
hlt
dec
cmp
xor
js
cld
shr
jl
cwde
movs
add
dec
inc
jl
sub
mov
mov
cmp
mov
mov
clc
dec
cmp
add
mov
cdq
add
inc
xchg
mov
(bad)
scas
jecxz
test
inc
ss
or
inc
sub
cmp
fld
add
ja
fld
popf
sti
or
add
mov
xlat
jle
scas
(bad)
mov
lods
(bad)
sbb
repz
fucomi
iret
aaa
jg
retf
(bad)
scas
sub
in
jmp
sbb
mov
pop
mov
call
jbe
sub
xchg
retf
xor
mov
push
adc
and
shl
jnp
lds
fistp
add
cwde
pop
retf
xchg
loopne
call
call
xchg
add
xlat
dec
push
loope
push
or
outs
enter
push
inc
int
push
cld
pop
cmp
dec
mov
push
jno
pop
push
mov
push
dec
fld
call
and
or
dec
xchg
mov
js
int
out
or
pop
loopne
sub
xor
add
adc
sub
adc
call
mov
add
fcom
add
mov
xchg
in
inc
fistp
fisttp
repz
jo
div
fcmovnu
or
add
mov
xchg
ret
mov
pop
and
adc
jg
xchg
pop
fs
mov
push
and
mov
jle
jp
push
sbb
mov
neg
in
pop
loop
inc
xor
or
cmc
idiv
dec
xchg
out
push
cmp
repnz
(bad)
mov
out
pop
mov
mov
mov
cmp
jp
adc
retf
test
inc
test
ja
loope
neg
add
and
popa
dec
jecxz
ja
cmps
or
and
iret
test
mov
shl
xor
out
or
js
inc
and
xchg
mov
fsub
jbe
leave
stos
xor
jecxz
xchg
cmp
in
sub
es
jp
inc
sub
jg
pop
sbb
adc
xor
loope
out
push
push
ffreep
and
adc
push
fstp
dec
mov
push
out
cmp
je
fdivrp
cwde
jecxz
jmp
call
adc
xchg
jae
add
jae
ins
imul
in
adc
or
adc
test
(bad)
or
or
mov
push
sbb
mov
call
jp
shr
enter
idiv
js
out
or
or
ficomp
je
push
dec
in
mov
pop
add
dec
fstp
xchg
jmp
ror
mov
scas
or
call
mov
xor
push
div
cld
stc
mov
inc
loope
inc
jnp
pop
test
xchg
pop
into
jne
mov
int3
pushf
or
imul
dec
mov
dec
mov
mov
mov
rol
push
lods
clc
push
mov
mov
xor
jge
fst
cmp
sub
ficom
int3
mov
std
aas
or
mov
mov
in
rcr
cmp
(bad)
(bad)
test
mov
out
call
sub
push
movs
xchg
gs
cli
adc
jecxz
jle
add
dec
fwait
and
add
(bad)
ret
cmp
test
dec
jl
mov
add
(bad)
jbe
inc
mov
stos
pop
pop
push
xchg
sti
jno
(bad)
push
rol
push
rcl
test
push
loop
hlt
cwde
int3
inc
cmps
or
pop
test
xor
xor
cmp
xchg
inc
(bad)
in
add
xchg
mov
adc
jns
or
jo
xchg
dec
and
outs
mul
loopne
dec
xor
pop
cld
xchg
rcl
adc
in
sti
int3
(bad)
push
test
in
inc
pop
jmp
xchg
call
imul
outs
cmp
xor
lds
iret
div
mov
or
mul
cmps
enter
xor
out
pcmpgtb
imul
mov
mov
out
xor
scas
pushf
add
dec
mov
xchg
xlat
loopne
dec
xor
cwde
repnz
fdivr
jb
loopne
mov
aad
jge
js
xchg
jo
sbb
repz
mov
sar
mov
mov
paddsw
ins
stos
xchg
pop
sub
repz
aas
iret
mov
fisub
or
lahf
popf
je
cmp
das
cmp
fild
pushf
mov
adc
mov
and
mov
call
int3
adc
sti
arpl
mov
jecxz
fwait
call
stos
push
test
rcr
cld
std
jge
adc
jp
and
cld
adc
inc
rcl
call
jecxz
cmp
daa
js
ss
push
add
jmp
jae
and
sub
lea
add
add
js
inc
adc
sahf
ja
jno
scas
sbb
shl
fild
cli
je
mov
jb
jle
pop
push
sub
cmp
call
push
in
mov
ret
jae
pop
(bad)
cwde
pop
cmp
sbb
sbb
pop
and
movs
xchg
nop
pop
and
outs
lahf
inc
dec
pusha
fstp
test
je
cs
and
sbb
sbb
das
lea
sub
xchg
xlat
xchg
mov
(bad)
not
mov
mov
popa
fld
in
(bad)
pop
pushf
ficomp
inc
shr
mov
clc
(bad)
ins
mov
cli
shl
ja
test
push
daa
inc
adc
cmp
sub
cmp
dec
enter
ins
repnz
inc
add
dec
jns
fcom
icebp
sahf
(bad)
pop
mov
jno
rcr
jae
pop
dec
outs
push
fwait
ds
and
sub
xor
in
mov
add
jno
test
je
dec
sub
pushf
xor
mov
je
std
xchg
sub
(bad)
(bad)
das
out
rcl
aad
loope
fsub
cmp
xlat
ins
pop
test
xchg
cmovl
imul
mov
and
xor
sub
(bad)
jle
adc
cmp
mov
cmp
inc
clc
jbe
pushf
in
in
fcom
mov
mov
iret
inc
test
inc
jnp
sub
pop
cli
push
ror
or
sub
repnz
out
xor
adc
mov
inc
sahf
sbb
add
cwde
mov
test
xor
movs
jmp
add
gs
faddp
outs
outs
imul
xor
addr16
xor
scas
(bad)
ret
add
push
cmp
xor
sahf
faddp
enter
lods
pop
push
or
add
sbb
pop
sub
xchg
xor
test
sbb
jg
fidivr
into
scas
xchg
xchg
pop
cwde
and
sub
out
and
pop
(bad)
jmp
xor
push
pusha
xchg
or
add
adc
jb
xor
dec
fdiv
enter
(bad)
popf
hlt
jg
and
jp
popf
scas
push
jle
aaa
jns
pop
mov
imul
lods
xor
cmp
add
sub
call
ror
fidiv
inc
(bad)
xor
sti
dec
mov
sbb
jge
ins
bound
pop
sub
xchg
jecxz
call
push
inc
xor
outs
in
or
or
cmps
rol
cdq
cs
jb
sub
xor
cmp
fist
test
adc
jl
or
test
(bad)
lahf
xchg
enter
les
pop
cmp
add
popa
and
jg
pushaw
inc
mov
mov
add
sub
xchg
(bad)
fidivr
leave
add
and
pop
pop
xchg
call
or
gs
jno
inc
mov
fdivr
(bad)
xor
lods
or
mov
aam
mov
push
les
mov
xchg
xchg
xchg
popf
or
gs
inc
repnz
pusha
iret
adc
cmp
dec
sbb
call
test
adc
loope
mov
ret
cmps
xor
and
(bad)
xor
arpl
imul
outs
xor
mov
sub
stc
or
int
pop
mov
enter
pop
cmp
mov
test
sahf
inc
cmp
add
pop
retf
mov
hlt
repnz
adc
cmps
xor
cli
sbb
fst
dec
in
imul
test
fincstp
fdiv
clc
nop
lock
xor
sub
or
rcr
xor
pop
out
xchg
jb
xlat
dec
sbb
inc
jmp
lock
mov
sub
jmp
gs
pusha
pop
xchg
pusha
push
inc
stc
fs
cmps
and
into
stc
mov
jne
aam
mov
mov
lahf
popf
(bad)
mov
mov
pop
mov
mov
or
ror
mov
jmp
test
fadd
mov
addr16
test
lods
mov
xchg
xor
mov
dec
inc
xor
outs
cli
stos
sar
cli
rcr
out
out
cmp
out
cld
xchg
cwde
clc
adc
add
cmp
adc
out
and
jecxz
push
add
jp
sub
int
jp
pop
xchg
push
push
ja
jge
jmp
and
outs
mov
cld
mov
das
test
add
jle
mov
sbb
fst
pop
jno
fwait
mov
lods
xor
adc
pushf
not
cs
inc
mov
dec
lahf
enter
mov
sbb
rol
js
jmp
leave
mov
imul
scas
mov
or
fmul
mov
sbb
sub
outs
sbb
xchg
or
mov
and
sub
mov
adc
mov
rcr
add
mov
popf
into
or
sub
or
inc
scas
int3
into
and
cmp
sub
jo
sti
ror
dec
xor
(bad)
movd
ret
dec
(bad)
retf
mov
sub
rsqrtps
push
jl
(bad)
repnz
adc
xlat
ins
int3
fld
js
stc
jge
frstor
mov
sbb
ret
dec
test
fadd
or
add
repnz
add
sti
or
mov
jns
movs
movs
imul
mov
push
out
sbb
inc
and
mov
mov
cmp
imul
xor
fild
inc
add
mov
xchg
cmc
adc
stos
fcmovb
(bad)
fwait
and
imul
hlt
inc
mov
cmp
mov
test
pop
or
cmp
popa
mov
out
push
jg
ja
add
cmps
jnp
int
sub
sbb
adc
jnp
jge
fimul
mov
jns
ins
and
rcl
sbb
jbe
mov
addr16
cs
or
loopne
test
hlt
or
sbb
mov
faddp
inc
cmp
cmp
xor
push
(bad)
jecxz
cmps
pusha
inc
imul
fsubr
addr16
or
retf
sbb
push
ds
pusha
xor
push
mov
xchg
out
enter
or
or
ror
hlt
mov
(bad)
sbb
ds
lods
pop
dec
(bad)
xchg
xchg
jnp
call
push
and
jge
or
push
and
add
movs
ret
lea
test
dec
shl
xor
adc
ret
jnp
mov
mov
dec
mov
push
fnstsw
mov
sbb
xor
add
jne
stc
aad
or
pop
es
fdiv
test
xlat
and
mov
mov
in
xchg
repz
xor
adc
dec
mov
mov
mov
cmp
cmp
push
xchg
popf
test
jge
pop
or
jp
in
repz
push
clts
loopne
jle
sub
loopne
arpl
mov
pop
ds
fs
in
xchg
jmp
stos
and
mov
ds
sbb
xchg
dec
int3
test
test
loope
mov
js
or
lds
bnd
(bad)
dec
leave
inc
test
and
in
cs
(bad)
mov
and
inc
push
mov
leave
or
push
inc
mov
pop
call
fldenv
cmp
arpl
mov
add
mov
inc
xchg
mov
mov
ins
scas
dec
rcr
imul
shl
fiadd
test
idiv
push
aaa
ds
mov
fwait
xchg
in
retf
(bad)
call
xchg
adc
sahf
sub
xchg
cmp
loopne
push
add
and
pop
push
addr16
in
fcmovnb
jae
stos
nop
dec
daa
adc
push
(bad)
jmp
lock
shl
das
bound
push
popa
jge
dec
(bad)
mov
test
push
rcr
cld
dec
cli
push
(bad)
cmp
pop
loopne
jmp
adc
(bad)
mov
mov
push
sbb
mov
popa
arpl
popa
push
and
data16
stos
icebp
mov
mov
int
test
sub
movs
mov
int
leave
fwait
mov
mov
or
aad
dec
popf
ins
mov
jle
mov
test
shr
rcr
mov
movs
hlt
imul
mov
sahf
jns
out
sbb
stc
mov
jmp
in
push
in
add
jle
(bad)
cwde
ja
push
aaa
mov
add
outs
fs
inc
in
add
mov
popa
rcl
mov
mov
addr16
jmp
int3
fld1
movs
or
push
out
pop
push
aas
fisub
and
mov
mov
pop
repnz
das
call
xor
jo
sbb
mov
sahf
sub
cmp
aam
mov
inc
fnstsw
repz
sub
int3
loop
outs
jl
xchg
fidivr
inc
loopne
add
dec
enter
cmp
lods
mov
cmps
scas
sahf
les
push
ror
aad
test
shr
dec
push
or
retf
inc
push
mov
mov
fnsave
jg
test
jne
and
jle
in
push
push
stc
or
sahf
push
xor
add
push
push
push
xchg
loopne
lods
cmps
push
mov
hlt
test
mov
ins
jp
hlt
cmp
cmp
aaa
pop
pop
pop
jge
scas
mov
rcl
dec
iret
mov
sub
retf
fadd
js
pusha
and
sub
sub
push
sub
mov
jmp
push
cdq
(bad)
xchg
sub
ss
or
adc
and
cmc
cmp
or
in
les
mov
inc
popf
and
out
add
inc
mov
fmul
inc
xor
inc
xchg
(bad)
sbb
test
push
push
sub
icebp
jle
loopne
or
jmp
ins
fistp
or
mov
dec
mov
cmovae
cwde
jmp
mov
in
mov
xor
fnsave
sti
mov
xor
pusha
and
inc
cld
jae
add
(bad)
push
mov
aas
xchg
and
nop
and
fmul
pop
xchg
add
daa
mov
sub
aas
(bad)
fsub
les
mov
rcr
mov
and
repnz
inc
xchg
daa
sub
jo
cmp
cmp
jg
mov
lahf
sbb
sub
sub
sar
xlat
and
push
add
sbb
aas
icebp
retf
xchg
jg
jbe
inc
hlt
clc
hlt
in
mov
in
cdq
jns
aas
in
(bad)
jo
aad
adc
jecxz
sub
add
dec
add
rcr
imul
mov
sub
xchg
out
inc
enter
stos
push
sti
out
sbb
mov
jmp
in
pop
pop
or
xlat
dec
fs
cmp
push
pop
cmp
cs
clc
lods
popf
out
pop
sub
or
push
jmp
sub
mov
mov
push
das
xchg
jg
xor
pop
(bad)
dec
fcmovnu
lods
out
(bad)
je
jecxz
lock
adc
fsub
nop
repz
jbe
(bad)
ror
and
push
(bad)
std
into
idiv
fcmovu
stc
pop
movs
imul
in
mov
arpl
hlt
push
lods
stc
sbb
xchg
fmulp
sbb
push
nop
repnz
in
pop
xchg
xchg
dec
push
push
in
in
test
mov
dec
push
fwait
mov
ins
push
xchg
shl
xor
js
outs
xor
pop
mov
sahf
xchg
fdivrp
imul
xor
cmc
mov
xor
jmp
sub
out
inc
inc
push
imul
pop
sbb
test
test
mov
dec
ror
into
fcomp
out
xlat
mov
repz
retf
aad
or
jnp
fiadd
xchg
push
cmp
sub
mov
dec
sub
rcr
das
getsec
iret
mov
dec
das
push
jmp
fcomp
dec
push
and
adc
push
fsub
cmp
mov
not
adc
xor
dec
pcmpeqw
popa
jne
mov
loopne
dec
sub
pop
icebp
push
mov
stc
fiadd
fdiv
mov
mov
cmp
dec
retf
mov
hlt
pop
pusha
lock
mov
xchg
je
mov
push
les
xchg
(bad)
sbb
inc
xor
in
mov
add
xchg
frstor
pop
mov
(bad)
dec
hlt
push
dec
mov
jg
hlt
add
xor
in
or
lea
fst
xor
movs
adc
lea
(bad)
or
sbb
push
aad
ffree
cdq
pop
(bad)
ss
stos
dec
dec
gs
scas
mov
push
jne
inc
inc
pop
sar
(bad)
xchg
push
and
add
shl
arpl
mov
sbb
inc
ja
hlt
or
ss
xor
ret
int3
pop
cmp
(bad)
mov
ret
loope
pop
shr
(bad)
imul
mov
gs
xor
dec
les
xchg
lds
loope
cmp
push
mov
push
xchg
lods
mov
inc
gs
arpl
cmp
ds
xchg
loop
dec
jl
inc
adc
fsubr
int3
pop
or
pop
xor
(bad)
loopne
add
fwait
out
xchg
movs
lods
push
and
daa
ffreep
mov
daa
mov
or
jo
add
mov
push
jae
mov
cs
xchg
mov
sub
dec
xor
popa
movs
inc
add
iret
int
lahf
out
pop
sbb
inc
cmp
aam
movs
outs
stos
lods
fidivr
push
add
pop
mov
mov
cmp
push
test
(bad)
gs
xor
pop
loope
adc
adc
push
mov
adc
inc
icebp
cmp
jle
out
jg
lods
test
sub
shl
idiv
push
pop
cld
push
cmp
fidivr
xchg
dec
add
sbb
and
mov
mov
mov
inc
and
pop
push
rcr
dec
xchg
fisttp
das
ins
adc
xor
and
inc
cwde
jno
push
cmp
dec
and
dec
ins
std
ds
imul
push
test
sbb
mov
int3
retf
jmp
aam
scas
aam
fmul
push
jg
cs
cmp
pop
scas
out
adc
dec
cmp
push
mov
addr16
dec
push
nop
add
push
lea
sar
(bad)
cmc
cmp
jmp
xchg
idiv
or
call
push
jae
nop
sub
and
inc
xlat
pop
sbb
mov
jns
mov
sbb
sbb
xchg
dec
mov
stos
add
jbe
fld
dec
pushf
xchg
pop
call
xor
nop
repnz
add
jl
(bad)
out
sti
mov
push
movs
mov
popf
test
fld
icebp
pop
xor
jae
sbb
xor
aam
xor
xchg
push
test
fld
fsubr
stc
(bad)
push
in
adc
sub
sbb
inc
mov
mov
dec
pop
push
adc
ja
push
pusha
ffreep
pop
adc
in
mov
mov
jnp
mov
dec
cmps
sbb
iret
imul
sub
xor
adc
jmp
jmp
dec
and
lea
ins
jecxz
pop
xchg
xor
rol
cld
xchg
ja
dec
aam
push
jge
or
mov
mov
frstor
(bad)
and
xor
lds
movs
std
push
dec
into
push
(bad)
enter
mov
pop
push
cmp
mov
cmps
mov
(bad)
adc
inc
pop
cmps
jmp
mov
jmp
lods
aam
out
repnz
(bad)
aas
add
mul
dec
retf
xchg
mov
rcr
xchg
test
cld
out
and
or
or
not
mov
push
xchg
stc
dec
stos
(bad)
mul
mov
cmc
lods
popf
stos
popf
xor
inc
xor
cmp
repz
pop
mov
mov
mov
imul
sbb
inc
pop
sar
mov
jo
mov
mov
ds
sub
ret
jge
pop
sbb
xor
xor
fidiv
test
pop
and
cmp
jge
fild
jno
fbstp
pop
(bad)
adc
aaa
dec
fistp
es
mov
sar
cli
stc
lock
bound
sub
jae
outs
mov
cdq
add
mov
mov
fadd
adc
cmp
inc
mov
in
hlt
lahf
or
cmp
mov
addr16
jns
idiv
push
shl
mov
int
cmp
sub
add
mov
sub
pop
pop
int
mov
jmp
rdmsr
out
aaa
js
call
sbb
cmp
and
pop
jmp
pop
jmp
or
jmp
pop
sub
xor
repz
adc
sub
sahf
(bad)
and
mov
(bad)
das
pop
sbb
loope
jbe
cdq
jg
dec
dec
and
lahf
dec
jl
cmps
repz
mov
dec
das
or
icebp
test
mov
(bad)
mov
out
cwde
in
push
(bad)
lea
mov
sbb
fnstsw
mov
sbb
and
jnp
in
retf
mov
mov
adc
shr
cdq
ds
cs
cmp
adc
cmc
jl
into
cmp
imul
in
pusha
les
and
add
xchg
neg
int
hlt
sbb
adc
jb
inc
fabs
inc
fwait
pop
dec
outs
sbb
test
push
jmp
lods
pop
mov
push
or
and
ds
imul
loope
push
pop
mov
sbb
pop
neg
push
outs
fidiv
cwde
cs
push
sti
mov
or
xchg
aas
lods
jb
mov
in
ret
iret
mov
stos
push
aaa
lods
xor
cmp
lock
movs
inc
push
mov
mov
adc
cmp
adc
das
jo
cmp
scas
mov
add
push
(bad)
mov
mov
fmul
cmp
push
fst
mov
in
adc
xor
test
sahf
inc
jge
cmp
jmp
and
mov
adc
xchg
scas
push
loopne
sub
scas
lea
iret
mov
xchg
mov
dec
cwde
mov
mov
aaa
outs
add
adc
mov
mov
fst
jns
(bad)
sub
ss
mov
sbb
pop
in
jge
je
sbb
cmps
ret
aaa
jbe
and
pop
inc
(bad)
shr
dec
sub
int
or
dec
pop
jmp
js
sub
mov
(bad)
adc
xchg
lods
mov
stc
inc
cli
jnp
add
and
int3
bound
call
dec
push
mov
fucomp
cmp
fwait
fwait
daa
test
ror
jge
mov
mov
stos
adc
ficom
das
xchg
jecxz
lock
aaa
loope
cmp
mov
loopne
clc
es
push
in
dec
sbb
mov
mov
loope
mov
mov
and
mov
push
push
out
fistp
and
ret
xor
aas
cli
out
(bad)
mov
jmp
test
mov
stc
push
loopne
dec
sub
stos
in
ret
out
and
cmp
or
add
iret
in
xchg
bswap
and
sub
mov
aaa
and
pop
mov
test
or
clc
rcr
mov
xchg
push
push
jecxz
add
mov
ss
xchg
les
in
add
pop
stc
int3
retf
xchg
push
imul
test
test
add
leave
(bad)
imul
mov
jb
xchg
mov
call
jmp
sbb
scas
icebp
adc
mov
call
in
out
mov
shrd
dec
sub
push
inc
cs
or
jg
mov
retf
hlt
lahf
adc
stos
mov
cmc
ror
cld
sar
xor
or
ins
ja
sub
mov
adc
int3
adc
mov
repnz
dec
sbb
pop
mov
outs
jl
mov
inc
retf
fiadd
xchg
fstp
push
pop
mov
dec
push
xor
jns
in
sbb
adc
fsub
adc
loope
sub
mov
js
js
sub
jne
mov
out
cs
aaa
pop
xchg
addr16
pop
clc
dec
xchg
movs
loope
jnp
add
popa
fs
rcr
cmp
mov
std
out
dec
ja
loope
call
xlat
inc
xchg
mov
les
jl
push
pop
(bad)
mov
or
mov
nop
loope
push
xor
aam
dec
shr
popf
xor
shl
cli
push
aas
out
out
addr16
hlt
(bad)
push
inc
repz
cld
(bad)
cmc
mov
and
jmp
sbb
dec
inc
ss
jmp
pushf
cmp
into
test
cli
mov
inc
ins
pop
lahf
movs
jmp
popa
addr16
gs
(bad)
ss
add
xchg
mov
dec
push
in
iret
sbb
ficomp
popf
pop
jns
push
sub
and
repz
cmp
dec
pop
arpl
cwde
icebp
xchg
and
dec
xchg
or
inc
mov
push
pop
or
jae
sbb
pop
lahf
pop
ret
jmp
std
xlat
inc
xchg
ror
lods
or
jns
push
mov
dec
xchg
sbb
leave
dec
not
and
jb
aaa
movs
loopne
clc
das
shl
cli
dec
fsubr
mov
or
xor
idiv
addr16
ret
pushf
lahf
cwde
xor
jge
xchg
mov
mov
aas
jp
cs
pop
pop
cmp
or
scas
push
aad
call
inc
fisttp
dec
inc
jmp
cmp
mov
add
scas
(bad)
invd
mov
pop
lock
inc
ror
xchg
inc
pop
mov
mov
xor
jmp
jmp
inc
les
inc
xchg
mov
ins
into
cs
sbb
jo
fld
pop
mov
lahf
cld
or
imul
fisub
(bad)
pop
test
or
mov
mov
fnstsw
mov
add
fstp
ret
push
mov
or
dec
inc
jp
fmul
cmc
push
and
arpl
dec
and
xchg
lss
mov
jbe
pop
jle
push
push
into
sbb
icebp
movs
and
mov
push
dec
dec
pop
pop
sub
sub
mov
cld
or
mov
mul
scas
and
inc
cmp
pop
fucomip
inc
outs
mov
xchg
shl
lds
xor
push
pop
adc
push
mov
ds
fst
inc
mov
cmp
push
jno
js
cmp
xchg
mov
adc
pop
push
stc
imul
cmp
les
xchg
pusha
add
stc
aam
cwde
dec
adc
gs
jmp
aad
pop
jecxz
adc
adc
xor
xor
shl
xchg
hlt
xchg
jbe
or
xlat
loop
sub
push
sbb
or
mov
jg
adc
jecxz
xchg
pop
fmul
stos
dec
pop
cmps
int3
sub
mov
dec
mov
mov
mov
add
movs
movs
and
rcr
dec
ret
inc
push
std
or
jecxz
mov
sub
jmp
adc
cwde
xchg
and
inc
adc
mov
sub
into
imul
sbb
xor
pop
outs
adc
and
push
stc
sub
mov
mov
hlt
xor
xchg
ss
adc
loop
enter
and
repnz
or
and
loope
into
repz
int
mov
adc
je
das
mov
xchg
mov
out
outs
js
repnz
les
mov
xchg
outs
and
fsubr
data16
push
in
in
cs
icebp
jbe
retf
cmps
test
cmps
fcomp
jecxz
das
pop
or
daa
test
mov
pop
cmp
sbb
add
or
je
retf
mov
sahf
pop
mov
fcom
loope
aas
add
mov
add
aaa
retf
pop
test
and
push
xchg
lods
cmc
push
xchg
ss
clc
mov
xor
jl
(bad)
adc
cmp
push
lods
cmp
sub
ffreep
test
data16
adc
sbb
(bad)
or
rcl
dec
xor
dec
(bad)
movs
call
lods
div
outs
popf
add
outs
inc
cmp
in
xchg
icebp
xchg
lea
gs
test
(bad)
dec
mov
mov
or
dec
fist
lods
push
sar
sub
lods
lock
iret
psubusb
sub
arpl
call
jb
mov
(bad)
jmp
mov
add
jne
cmp
adc
mov
cwde
loope
xchg
je
lock
leave
(bad)
in
adc
sahf
xchg
add
xchg
sbb
xchg
cmp
sbb
shr
dec
add
or
sub
jno
sbb
test
mov
ins
pop
jle
adc
dec
dec
pop
jnp
aad
neg
mov
adc
call
(bad)
out
push
xchg
and
sub
in
iret
sub
xchg
pop
rol
leave
pop
call
out
(bad)
jl
cmp
push
add
pop
test
and
aas
pushf
iret
xchg
mov
je
jno
mov
push
ins
ret
fwait
push
(bad)
aaa
je
addr16
mov
xor
push
adc
pusha
retf
cmp
repz
das
loopne
test
dec
or
jnp
iret
aad
das
adc
mov
xlat
les
(bad)
iret
shr
mov
jle
add
inc
sbb
aad
int
add
pushf
cmp
test
sub
(bad)
in
(bad)
ds
fdivr
cs
cmps
dec
bound
icebp
into
inc
test
mov
std
cmp
imul
mov
sbb
adc
mov
es
or
and
mov
pushf
xor
rol
push
or
pop
push
rol
mov
jp
mov
dec
dec
retf
rcr
fiadd
ret
movs
fsubr
and
inc
mov
xchg
pop
add
jno
fdiv
cmc
sub
ret
repnz
stos
gs
cmc
loope
lahf
imul
les
(bad)
aad
fdiv
out
mov
xchg
sbb
add
outs
setbe
fs
and
std
cmovb
clc
ret
movs
and
xchg
je
mov
ja
jns
xor
xchg
das
sbb
pop
push
add
mov
or
inc
add
mov
sub
aaa
sbb
xor
in
call
inc
out
xchg
fild
dec
call
call
xchg
pop
and
push
pop
mov
ins
ror
mov
push
and
loop
aad
rcl
iret
aad
cmp
sbb
imul
mov
push
ret
lahf
test
call
sbb
icebp
lea
and
aas
test
mov
arpl
ret
jb
push
and
scas
xor
jo
inc
cmp
ins
or
div
jmp
add
cwde
popf
push
sahf
xchg
cmps
ror
test
xor
sub
jne
dec
mov
into
test
push
ins
or
jecxz
jo
in
push
adc
popa
popf
mov
mov
mov
dec
xor
and
test
pop
xchg
inc
lahf
xor
sbb
clc
lods
jae
jne
xor
xchg
dec
clc
icebp
outs
sub
je
lock
aam
ja
stc
mov
fnstsw
out
ja
test
push
pop
aas
mov
mov
stos
pushf
cld
or
(bad)
(bad)
sbb
mov
sub
inc
fistp
mov
outs
not
ret
cdq
mov
mov
jmp
imul
mov
dec
dec
pop
and
stc
lds
movs
jle
push
push
sub
xchg
imul
test
arpl
mov
cmps
push
ror
cmc
loopne
xchg
scas
add
test
adc
lea
push
scas
jp
lock
mov
loopne
add
sti
loopne
or
xchg
xchg
and
(bad)
iret
xor
popa
dec
inc
leave
fisubr
push
dec
add
xchg
fisub
sahf
fadd
or
mov
jns
pop
jbe
pop
xchg
mov
lea
jmp
mov
clc
jae
stos
mov
or
push
cmc
mov
sub
sahf
popa
or
dec
pop
adc
cmp
outs
mov
lahf
jle
rcl
and
loopne
je
xchg
pop
icebp
mov
mov
inc
retf
push
popa
push
push
or
mov
pop
cld
pushf
jbe
sar
sbb
movs
movs
out
rol
push
add
outs
mov
retf
add
fst
fwait
dec
movs
cmp
xor
mov
xchg
mov
addr16
add
int3
into
out
mov
push
shr
aas
test
dec
push
(bad)
sbb
pop
push
inc
push
xchg
xor
out
cmp
push
pop
movs
and
stos
ja
mov
push
pop
add
mov
mov
push
sbb
xor
or
pop
or
jl
aaa
sar
xchg
push
lds
stc
push
out
mov
push
retf
push
add
stos
aad
jno
out
cs
movs
imul
fadd
ja
sbb
xchg
(bad)
mov
mov
cwde
push
call
stc
mov
cmp
sbb
scas
mov
mov
mov
inc
push
jg
dec
scas
aas
out
pop
mov
adc
out
sti
call
movs
adc
test
push
fidiv
xor
add
push
and
retf
retf
mov
and
and
jge
cmp
cmp
xchg
es
mov
sub
adc
sbb
imul
ret
les
pop
push
inc
fimul
cmps
fiadd
and
out
cmp
les
and
call
cmc
rol
mov
inc
test
and
jne
call
jnp
mov
add
aas
(bad)
es
or
jb
(bad)
adc
adc
adc
rol
inc
or
arpl
jg
mov
sub
dec
add
(bad)
jge
mov
xchg
xchg
add
std
xor
jb
scas
sub
into
cld
dec
push
xchg
movs
test
mov
mov
aad
jno
push
mov
or
and
push
pop
adc
sub
sbb
call
out
lea
pop
dec
fst
ficom
jl
ins
das
jmp
in
add
or
push
movs
add
push
jle
push
mov
mov
in
repnz
jb
pop
push
dec
addr16
xor
retf
pop
stos
push
sbb
xlat
es
loop
test
mov
pusha
scas
mov
jmp
cmp
shl
pop
(bad)
out
(bad)
mov
and
rcl
inc
and
mov
push
push
lods
(bad)
ficomp
xchg
js
push
fwait
leave
popf
sahf
mov
jns
sbb
pop
sbb
jne
mov
lea
jg
lahf
inc
popa
sti
inc
or
push
les
cmp
push
outs
jbe
outs
test
xchg
dec
idiv
test
mov
add
outs
ins
mov
mov
pop
aaa
nop
call
lods
dec
and
inc
xor
(bad)
mov
ss
rol
mov
cmp
mov
jg
cmps
inc
std
push
push
repnz
loope
add
in
push
lahf
or
inc
out
sbb
inc
mov
mov
sub
lods
adc
mov
xor
and
sbb
mov
call
sbb
aaa
inc
sub
and
jae
adc
or
cmp
pop
fsubrp
or
stc
add
and
cmp
jmp
inc
fdiv
repz
sbb
in
adc
sbb
mov
sub
data16
data16
loop
pop
push
sbb
lock
sbb
ficomp
in
cld
sbb
xor
(bad)
mov
movs
adc
inc
popa
fimul
sub
call
retf
imul
call
pop
aas
pusha
int
hlt
xor
inc
xor
and
stc
jns
dec
test
xchg
xor
xlat
sub
xor
xchg
or
inc
fsub
mov
test
mov
retf
neg
mov
aaa
mov
inc
mov
adc
sub
pop
xchg
mov
in
push
cmp
cdq
jne
out
dec
inc
js
xchg
jmp
xchg
mov
cmps
imul
out
mov
mov
adc
sbb
outs
jbe
xchg
icebp
ja
mov
push
call
cdq
sub
jb
pop
movs
cmp
das
pop
outs
js
nop
pop
jmp
iret
fsubr
into
aad
push
(bad)
pop
jb
push
sbb
mov
and
mov
adc
mov
ror
adc
repz
jecxz
pop
call
sti
inc
mov
int
or
into
jmp
aam
int
aad
stc
mov
outs
dec
repnz
mov
ficom
jae
mov
jge
cs
loopne
in
clc
(bad)
mov
push
mov
jmp
inc
sub
rol
mov
mov
(bad)
push
cmp
pop
xor
add
jns
and
push
mov
add
cmps
mov
(bad)
int3
jns
imul
js
cmp
test
mov
jmp
aam
in
push
fbstp
je
jb
mov
sub
mul
xor
fcomi
push
cmp
inc
cwde
jecxz
cmp
mov
sub
enter
in
or
std
neg
jae
jecxz
int
add
nop
clc
ror
stos
sbb
xchg
out
je
pop
or
stos
or
in
sbb
ds
sar
pusha
add
push
stos
ficomp
pop
sti
pop
aam
adc
lock
jne
fcom
jb
repnz
xor
outs
mov
cmp
mov
dec
test
ja
loop
lods
clc
jle
test
pop
loop
mov
stos
ret
int3
loope
cmps
outs
mov
std
fucom
xor
fistp
fadd
xchg
add
retf
je
add
sub
(bad)
adc
retf
fnstcw
je
and
cmps
pop
sbb
adc
test
lahf
mov
leave
pop
adc
fs
cmp
sub
sub
mov
test
mov
out
mov
stos
cmp
jne
stos
adc
push
xchg
fsubr
sbb
lods
shl
cmp
xor
fwait
lea
ret
sahf
add
mov
les
fisubr
ficomp
jne
sub
push
ss
ja
xchg
jp
inc
cmps
mov
shl
call
jns
pushf
sti
push
adc
add
call
movs
pop
ss
mov
and
das
aaa
dec
dec
fcmovnb
daa
push
sbb
xchg
or
fdivrp
test
xchg
xchg
(bad)
cmp
repnz
(bad)
jmp
inc
fwait
jl
retf
inc
mov
std
ja
addr16
cmp
jle
js
fnsave
cmc
fcom
pushf
jo
inc
xchg
mov
push
sahf
fsubr
and
push
xor
jl
pop
mov
repnz
mov
aaa
sti
stos
dec
dec
popf
and
or
xchg
mov
pop
in
xchg
std
mov
into
mov
sub
mov
aaa
add
sub
ja
leave
push
je
pop
jge
push
cmps
cmps
sub
or
pop
inc
xchg
push
test
sbb
add
arpl
inc
sbb
push
sar
adc
pop
push
dec
adc
ins
les
out
repnz
nop
or
push
add
sub
test
and
stos
aam
mov
loope
addr16
rol
inc
std
ins
shr
mov
sub
dec
pop
icebp
lahf
jo
xor
jg
jp
or
shr
fmul
(bad)
repz
test
mov
mov
cdq
sbb
test
pusha
sahf
dec
call
bound
inc
outs
sbb
hlt
jo
movs
pop
fldcw
adc
jno
mov
(bad)
mov
and
push
hlt
and
lods
mov
loop
push
cs
lods
cs
jmp
call
(bad)
icebp
adc
lea
xlat
push
add
das
es
add
or
in
rcr
out
mov
in
lods
and
hlt
cmp
test
sar
inc
fdivr
inc
mov
dec
(bad)
sti
xor
add
aad
out
or
stos
(bad)
(bad)
mov
daa
scas
gs
repz
test
mov
xor
mov
jae
not
out
add
jmp
inc
sub
mov
fmul
outs
pop
int
fiadd
out
repnz
fisubr
fwait
leave
retf
rcr
mov
retf
bound
rcl
add
cwde
adc
sub
push
rol
lea
mov
pushf
push
xchg
mov
add
add
mov
das
js
mov
mov
cmps
sbb
(bad)
gs
mov
out
cmp
rol
mov
sbb
mov
dec
int3
fnstsw
aaa
out
dec
fst
(bad)
push
inc
out
ins
pop
cmc
xor
push
shr
add
int3
or
sub
adc
or
in
mov
int
aad
mov
sub
sbb
sub
aam
mov
(bad)
sub
cmp
data16
loope
sbb
sbb
xchg
nop
loopne
test
adc
xor
movs
cli
sbb
jo
cmp
jo
mov
mov
jl
test
mov
pop
pop
in
outs
js
pop
inc
out
aaa
(bad)
bound
arpl
imul
adc
imul
fild
cmp
inc
int3
mov
hlt
fwait
inc
jb
xlat
push
pop
jp
push
adc
clc
add
mov
sbb
sub
test
push
push
jge
push
xchg
sar
jge
repnz
pop
mov
cmp
cmp
mov
or
cs
dec
inc
cmps
dec
jmp
out
adc
jnp
sub
inc
ja
mov
shl
push
and
inc
mov
ret
retf
pop
dec
das
jmp
call
dec
pop
bswap
adc
sti
leave
jo
ror
jmp
pusha
or
xlat
jmp
inc
loope
lea
ins
ret
rcr
movs
adc
jne
mov
mov
cs
(bad)
(bad)
sbb
ficom
mov
sti
test
xor
sub
mov
mov
pop
popf
push
cdq
push
mov
es
cmp
jbe
jno
lea
pop
out
into
push
pop
lods
dec
push
outs
jnp
ja
fsubr
push
out
ficom
xor
imul
sub
add
push
jp
pop
ds
loop
call
and
jecxz
ficomp
loopne
scas
mov
or
ds
shl
pop
rol
pushf
xor
test
out
mov
pop
push
jo
in
sar
int
xlat
sahf
push
imul
int
mov
int3
mov
lods
xor
push
mov
inc
pop
not
cmp
add
and
jns
sbb
lds
mov
arpl
mov
mov
xchg
ins
aad
pop
sub
xchg
outs
dec
gs
outs
data16
mov
(bad)
xor
jns
clc
inc
call
adc
in
ins
pop
jo
stc
mov
mov
mov
xor
hlt
fsubrp
mov
hlt
pusha
int3
lahf
pop
shr
mov
jae
rcr
in
bound
test
loope
push
xchg
aam
dec
bound
xchg
push
std
sub
bound
pop
fistp
ja
stos
cdq
sub
js
int3
pop
popf
pop
add
repnz
into
aam
sbb
mov
or
xchg
rol
clc
int3
mov
dec
nop
xor
(bad)
je
jp
jae
jp
clc
xchg
push
add
push
xchg
lods
dec
cmp
fs
lods
or
enter
ds
jbe
mov
out
adc
into
mov
inc
in
call
pusha
retf
fs
cmc
jbe
cwde
sub
dec
rcl
mov
ins
aas
sbb
dec
add
fisttp
(bad)
out
outs
rol
add
test
sub
push
dec
and
ja
or
jecxz
sahf
rcr
add
cmps
mov
out
(bad)
push
dec
aaa
push
cs
mov
(bad)
pusha
stos
xchg
mov
jne
popa
push
mov
test
mov
jbe
or
push
xchg
in
in
inc
cdq
in
and
(bad)
es
xchg
cmps
push
xchg
(bad)
dec
dec
or
xchg
imul
and
loopne
aam
add
repz
aaa
dec
into
xlat
bound
call
popf
pop
inc
mov
fisubr
xchg
loop
jl
push
in
push
mov
ficom
jmp
mov
xor
pop
xchg
in
das
jmp
fdiv
sub
enter
mov
dec
adc
xchg
fisub
jl
mov
fwait
in
add
mov
mov
jmp
cmp
dec
jmp
sahf
push
daa
rcr
fcom
jle
add
dec
or
push
retf
jg
jo
sbb
push
inc
pop
add
adc
in
jmp
xchg
in
jecxz
test
fstp
call
jg
(bad)
pop
cmps
sbb
mov
in
xlat
dec
pop
mov
out
(bad)
mov
push
xchg
iret
je
xor
in
fs
addr16
clc
pop
jl
add
sub
ja
idiv
in
pop
fdivr
aaa
retf
loope
cmp
sbb
and
sub
add
push
mov
lock
retf
cmc
enter
cwde
mov
xchg
jbe
pop
jne
lock
jb
clc
test
and
jns
sub
cmp
in
pop
push
inc
(bad)
into
push
aaa
and
movs
jne
ret
and
and
cmp
add
movs
scas
adc
div
add
cmp
ds
and
push
inc
jge
mov
repnz
mov
xor
scas
shr
in
xchg
pop
add
inc
adc
xor
nop
shl
adc
cmp
push
test
inc
inc
dec
sbb
add
fwait
jl
sub
push
sbb
movs
xchg
jle
lds
or
icebp
mov
and
dec
mov
mov
add
sar
cmps
shl
clc
sub
jb
mul
mov
aad
and
jns
cmp
xchg
fld
push
push
ds
cwde
dec
es
cmp
int3
test
cmc
mov
js
cmps
mov
mov
imul
and
nop
jg
in
mov
pop
das
ret
sub
sbb
xor
(bad)
rol
add
arpl
jns
rol
mov
sub
adc
push
dec
lds
lahf
imul
cmp
inc
cdq
sahf
push
cdq
or
and
test
jmp
push
cmp
popa
in
je
sub
enter
cmp
dec
and
and
xchg
ja
jno
adc
mov
cld
stos
adc
inc
xchg
cs
sbb
mov
jne
add
jl
push
push
add
(bad)
mov
and
cwde
push
mov
test
std
jae
sub
repnz
mov
popf
pop
jmp
std
cli
and
inc
aad
jo
aad
daa
jnp
push
mov
sub
push
popf
outs
jmp
pop
dec
pop
fs
pop
jae
bound
dec
cmp
inc
adc
adc
fild
pushf
pusha
push
out
and
aaa
pop
lods
push
popa
stc
pop
mov
lock
or
mov
push
and
mov
pop
rcl
arpl
cmp
jmp
outs
stc
fnstenv
jns
cmovo
addr16
gs
pop
mov
xchg
and
cmp
jl
mov
adc
inc
inc
ins
fbld
aas
cmc
jns
sbb
cld
aaa
(bad)
jecxz
enter
adc
fidiv
mov
cmp
rcl
sbb
mov
popa
out
fmul
mov
mov
cmp
loope
lahf
hlt
mov
cmp
xchg
mov
int
mov
scas
sbb
and
pop
jnp
ficom
adc
fucomi
fadd
mov
push
sbb
iret
xchg
dec
mov
and
stos
xchg
inc
dec
cmp
cli
and
dec
es
jmp
cmp
in
les
pop
push
push
dec
add
push
daa
push
sbb
in
push
loopne
das
add
test
jl
xor
stc
dec
js
add
out
loop
mov
adc
ret
jbe
aad
stos
pop
arpl
inc
(bad)
push
and
call
jg
or
in
rcl
cmps
push
cmp
sbb
ins
sub
push
int
aam
sub
ret
adc
test
hlt
xchg
retf
xchg
rol
push
(bad)
ror
push
add
cdq
jp
sbb
das
xlat
cmps
ja
(bad)
aam
push
inc
push
inc
mov
mov
cmp
xchg
cli
xchg
inc
aaa
fsubr
mov
xchg
stos
add
leave
push
mov
aaa
stos
stc
(bad)
hlt
ficom
sbb
in
aaa
stos
lock
xor
lods
mov
push
pop
js
mov
cmp
fnstcw
mov
scas
adc
fstp
xlat
xor
mov
popa
div
xor
arpl
xchg
aad
xchg
and
or
pop
bnd
pop
das
and
fimul
das
pop
fadd
lds
std
jl
repz
sar
pop
pop
or
cwde
push
ins
xchg
dec
hlt
or
lahf
mov
pop
std
repnz
imul
mov
retf
pushf
jo
fadd
mov
adc
jne
inc
sbb
and
adc
faddp
jne
imul
and
(bad)
loope
dec
aad
dec
into
scas
and
push
sub
and
scas
xchg
(bad)
sbb
stc
or
dec
mov
adc
jno
js
add
stc
cld
or
jmp
int
fwait
sahf
ficomp
mov
ds
sahf
cmps
(bad)
leave
(bad)
adc
or
gs
xor
inc
rcr
mov
pop
and
dec
(bad)
jmp
and
dec
or
rol
in
and
sbb
movzx
inc
jecxz
neg
xchg
jl
ds
xchg
inc
pop
pop
shr
pop
in
stos
adc
pop
mov
xor
jge
and
sahf
adc
jecxz
sbb
es
sbb
dec
mov
cdq
or
repnz
or
push
loopne
jmp
add
lods
jp
jae
into
sahf
pop
push
les
mov
sbb
jae
mov
fwait
cmc
test
idiv
or
mov
push
stos
fimul
cdq
gs
nop
mov
rep
lods
mov
jmp
push
sti
fistp
cwde
pop
loopne
sub
imul
push
les
fisub
push
xchg
imul
jmp
mov
icebp
mov
or
or
neg
ret
rol
push
arpl
mov
mov
(bad)
pop
jmp
mov
sub
in
fild
(bad)
and
sub
fbld
cmp
xchg
ins
jbe
adc
push
aad
fisttp
xchg
data16
scas
ja
scas
outs
js
inc
dec
cld
stc
inc
daa
or
lds
outs
or
pop
pop
pop
push
push
jge
push
adc
and
sysexit
and
ficomp
test
rol
js
push
push
rep
movs
pusha
mov
mov
jmp
stos
sbb
aad
dec
out
xchg
mov
cdq
mov
clc
fnstenv
loope
and
std
ret
into
lods
sub
jo
pushf
das
inc
out
ja
xlat
pop
rol
adc
mov
mov
sbb
(bad)
mov
out
xchg
retf
push
mov
int
sar
push
movs
shl
shr
loop
pop
pushf
aam
imul
loope
xchg
sbb
out
dec
imul
sbb
inc
and
mov
sbb
lods
test
sub
xchg
xor
retf
jp
cmp
fst
test
mov
pop
int
mov
pop
xor
dec
mov
stos
repz
mov
mov
ror
push
jo
jb
mov
js
xor
inc
sub
jge
movs
sbb
jmp
push
sbb
sar
push
pop
jnp
loopne
enter
fxch
jle
push
popf
movs
add
jne
xor
and
jg
jg
sar
mov
mov
xor
cmp
repz
sub
test
jmp
test
jge
addr16
xchg
popa
mov
std
mov
mov
and
retf
bound
cs
xchg
movs
xchg
scas
pop
mov
outs
dec
(bad)
icebp
hlt
inc
sbb
cmc
ret
clc
daa
scas
or
or
or
(bad)
cmp
push
sub
inc
pushf
inc
pop
cdq
jbe
hlt
int
or
mov
cmp
jbe
mov
add
call
pop
(bad)
push
mov
jl
cmp
dec
sbb
dec
and
les
clc
push
out
test
mov
clc
je
imul
sbb
stc
inc
lock
xchg
push
xchg
dec
push
sub
fwait
je
sar
pop
stc
or
adc
movs
cmp
fdiv
inc
and
mov
sub
mov
hlt
add
mov
sub
vdivss
and
fisubr
mov
loope
mov
ins
push
push
popa
jge
mov
push
pop
outs
out
movs
inc
jp
pop
inc
jae
aas
cwde
dec
jmp
cmc
cmpps
rol
mov
jp
xlat
dec
stc
sbb
or
add
mov
mov
sbb
mov
dec
ja
sub
popf
out
das
jo
xchg
sub
adc
xchg
cwde
sub
out
mov
jge
jno
add
test
mov
loope
lock
jae
pop
retf
fwait
mov
pop
inc
mov
in
test
ficom
iret
xor
stos
out
retf
ret
mov
js
jg
daa
jmp
and
pop
sub
and
or
jno
jns
popf
add
in
mov
jle
hlt
fnsave
pop
sub
fsubr
imul
(bad)
cmps
mov
push
cmps
icebp
push
adc
aam
or
out
aad
aas
(bad)
loope
jg
js
ret
cmp
jno
fimul
stos
shl
imul
or
or
push
std
xchg
out
les
cwde
mov
xchg
xor
adc
lds
pop
jp
xor
pop
ret
adc
pop
xchg
in
mov
mov
jmp
fst
push
xchg
xor
ins
mov
test
sbb
aas
inc
(bad)
adc
adc
add
jp
sahf
dec
sbb
dec
or
mov
fld
adc
jecxz
jmp
fwait
jle
and
cmps
dec
call
mov
dec
jns
jne
or
adc
inc
shl
push
inc
cdq
push
inc
xchg
enter
jo
iret
sahf
out
mov
enter
(bad)
fbld
push
sub
in
daa
xor
sar
pop
mov
and
mov
mov
movs
das
or
or
fadd
nop
bound
push
test
loope
dec
shl
xor
mov
iret
pop
fwait
jne
xchg
enter
or
add
call
cmp
adc
mov
ins
sub
jp
pop
scas
leave
pop
xchg
cs
(bad)
sub
mov
or
mov
stos
call
ins
pusha
xor
ja
mov
je
popf
loopne
add
pop
pushf
cmps
mov
iret
adc
mov
shl
or
cmp
retf
cdq
cmc
add
adc
pop
in
clc
jns
xchg
pop
push
rcr
push
enter
in
or
(bad)
(bad)
aam
add
fstp
add
pop
lea
fistp
mov
xchg
add
out
lods
stos
adc
sub
fst
fidiv
inc
sbb
lods
jmp
ss
inc
sub
iret
add
iret
and
icebp
pop
popa
and
and
mov
out
imul
inc
adc
in
cli
lock
xchg
add
mov
pop
dec
mov
and
aam
push
sub
add
lds
jg
sbb
jmp
sbb
adc
sahf
in
mov
(bad)
in
xchg
jbe
mov
sub
fwait
inc
add
mov
adc
pop
cmp
retf
push
in
dec
idiv
sub
mov
rcl
(bad)
loopne
fstp
sub
dec
cld
push
pop
or
dec
call
pop
or
jl
mov
jmp
or
jg
add
ret
pop
push
inc
xchg
pop
add
push
inc
dec
ins
neg
pminub
inc
or
adc
mov
or
cmps
sub
sbb
ror
mov
out
out
mov
cmp
mov
add
push
xchg
push
xchg
loope
xor
sub
mov
popa
cmps
leave
mov
push
ret
fwait
cmps
jae
shl
cld
cmp
push
int
push
xor
jle
(bad)
int3
imul
mov
add
fisubr
cmp
fst
lea
icebp
out
or
fistp
mov
lahf
pop
add
sub
out
jp
gs
es
call
push
je
xlat
cmp
dec
fstp
shl
leave
outs
cmovs
or
ror
movs
movs
loope
pop
movs
cmps
adc
mov
scas
loopne
(bad)
jg
and
mov
add
shl
sub
mov
out
dec
fdivr
cld
push
or
jecxz
sahf
ror
jnp
cmps
enter
sub
sub
push
or
int3
pop
aas
pop
add
mov
cmc
inc
ret
push
cmps
add
xor
sbb
adc
call
ja
and
or
xor
xchg
test
add
and
loop
or
les
stc
jmp
pusha
mov
mov
into
jb
jns
inc
mov
lahf
add
ret
inc
shl
cmp
xor
and
je
xor
pop
mov
(bad)
leave
cmp
xchg
jno
dec
mov
fdivrp
(bad)
mov
mov
loope
cmp
sub
repz
mov
mov
adc
jle
jnp
jno
sbb
push
inc
sti
out
sbb
and
(bad)
cwde
xchg
xchg
in
aad
or
jg
ja
jnp
mov
inc
mov
ds
daa
imul
push
push
aaa
leave
dec
push
fdiv
mov
push
sub
loopne
xor
mov
lea
or
adc
int
jl
add
sub
pop
repz
inc
inc
enter
int3
jns
rol
sub
dec
dec
inc
adc
xchg
dec
pop
and
ret
mov
sub
aad
movs
loope
xchg
and
test
sbb
retf
sub
xor
jge
call
ins
je
and
enter
mov
inc
fadd
mov
fsubr
push
mov
xor
cld
xor
test
rcr
ds
sbb
cmp
cmp
sar
lock
gs
sar
jno
scas
int
out
retf
ror
lods
push
ds
retf
push
je
xor
lock
es
lea
jo
xchg
int
ret
stos
cmc
cmp
hlt
in
xchg
fadd
lds
or
inc
arpl
adc
mov
aad
inc
cmp
adc
aam
xor
push
mov
test
stc
and
xor
in
xchg
mov
adc
adc
xchg
inc
int
pop
mov
mov
adc
jmp
mov
xor
imul
push
cli
push
mov
dec
sub
es
or
dec
inc
clc
imul
inc
cmp
repz
mov
sbb
cmp
xor
rol
aam
imul
inc
xchg
std
sub
mov
add
or
inc
fdiv
or
cmp
or
imul
push
lods
in
push
repnz
or
(bad)
and
push
xchg
adc
call
or
jle
dec
jmp
mov
int
mov
pushf
es
cli
xor
adc
inc
test
imul
ds
cmps
xor
ins
(bad)
data16
fcomp
sbb
inc
test
cmc
out
sbb
mov
retf
clc
adc
mov
sub
jo
es
adc
push
imul
xchg
mov
jo
jno
(bad)
dec
fsub
mov
sub
mov
mov
mov
mov
adc
jmp
ret
jae
dec
sbb
ss
xor
dec
retf
fwait
pop
retf
cmp
fsubr
and
add
fld
add
push
or
push
dec
retf
and
and
lock
retf
pop
inc
jmp
ror
fs
mov
repz
loopne
xor
in
mov
pop
je
inc
jns
dec
arpl
retf
pop
pop
int
pop
outs
xor
in
fadd
pop
pop
jmp
xchg
jge
into
jl
cmps
inc
out
xchg
add
retf
adc
sahf
cmp
cs
mov
pop
in
inc
mov
fdiv
mov
mov
(bad)
inc
(bad)
clc
add
loopne
mov
loop
adc
mov
push
scas
add
or
imul
mov
ins
dec
push
sub
mov
lea
in
std
ret
sbb
xor
adc
mov
stos
pop
dec
popa
pop
xor
xor
xor
fs
push
push
out
fbstp
mov
pop
aaa
pop
pop
pop
xor
mov
jp
mov
xchg
add
push
pop
inc
dec
add
mov
ficomp
fiadd
cmp
bound
sub
cmp
in
mov
jne
dec
in
arpl
rcl
pop
cmp
mov
mov
test
inc
ror
shl
mov
(bad)
xlat
inc
das
add
jnp
xor
sbb
retf
cld
out
pop
jbe
rcr
arpl
inc
pop
cdq
stc
sub
pop
mov
test
push
adc
mov
pop
mov
neg
sahf
das
adc
cmp
or
add
fld
sub
pop
(bad)
jbe
lea
mov
or
adc
sar
lock
idiv
and
jle
sub
cwde
cmp
push
(bad)
(bad)
lods
shr
or
lods
xchg
adc
mov
daa
jp
pop
ds
(bad)
mov
and
std
ror
jmp
sar
retf
repnz
or
test
lahf
xor
das
ins
popa
xor
sbb
test
push
bound
cmp
mov
push
or
sti
push
ins
dec
repnz
mov
lds
dec
ret
add
cmp
fist
addr16
and
loope
pop
adc
imul
test
cmps
outs
stos
ficomp
rol
mov
jecxz
jmp
mov
and
and
mov
mov
inc
gs
out
lds
mov
xchg
push
sbb
mov
cmps
sbb
xor
ja
sahf
stos
cmp
(bad)
in
cmps
pushf
frstor
push
push
lods
xor
into
(bad)
jbe
imul
loopne
(bad)
mov
gs
xchg
cmp
scas
jb
movs
fadd
dec
movs
inc
int
into
xlat
and
ins
ja
inc
xor
add
adc
int
(bad)
pop
pop
xor
in
and
imul
call
pop
ss
xchg
ja
daa
rcl
aad
lock
cdq
push
lock
pop
push
mov
xor
lods
or
dec
clc
mov
test
dec
aad
or
jmp
fcom
pusha
test
scas
mov
cmps
jmp
cmp
je
addr16
fldcw
lods
push
repz
jmp
and
sahf
xor
inc
and
xlat
sub
lea
pop
jg
jb
pusha
dec
adc
xor
enter
push
sbb
dec
and
loope
inc
retf
imul
test
fsubr
out
push
out
mov
mov
aas
cwde
retf
sub
sbb
fnsave
gs
sub
xor
rol
mov
outs
fild
xchg
jge
jl
cwde
mov
push
lods
cmps
xchg
test
sti
push
out
jg
call
(bad)
dec
int3
sub
mov
loope
sar
fstp
adc
push
jno
jp
push
(bad)
in
ss
mov
cmp
mov
inc
sahf
adc
xor
and
stc
or
cmp
pop
dec
jp
shl
and
test
fwait
mov
aas
xor
(bad)
mov
cmps
add
inc
and
push
sub
or
call
xchg
cmp
aam
xchg
adc
pusha
ins
test
repnz
and
out
js
pop
not
repz
std
mov
popf
fidiv
xor
push
rol
add
inc
call
sbb
loop
dec
jge
cmp
(bad)
shl
(bad)
lods
mov
push
sbb
dec
sub
loope
lds
xor
fwait
xchg
cli
mov
mov
call
(bad)
aam
cmp
xor
mov
js
inc
pop
inc
mov
test
fnsave
push
js
mov
dec
mov
mov
pop
js
or
jno
sub
adc
loop
sahf
rcr
data16
ret
fst
xor
imul
xor
out
mov
xor
test
pop
fidiv
dec
rol
xlat
xor
mov
fimul
xor
sbb
call
js
stos
mov
pushf
movs
in
xchg
xchg
mov
fstp
loopne
in
dec
imul
mov
shr
mov
test
cmp
xchg
push
fs
mov
dec
xor
jae
sbb
(bad)
or
test
(bad)
sub
callw
leave
mov
jne
aas
jae
mov
outs
out
sub
xchg
stos
(bad)
push
stos
jg
jbe
xor
fild
ins
js
call
sahf
pop
sub
jno
jl
test
mov
ins
into
mov
fnstenv
(bad)
adc
inc
inc
mov
lods
or
or
adc
xchg
in
test
in
(bad)
out
imul
sub
fimul
xor
leave
dec
loope
or
jg
and
sti
sar
lock
cmps
dec
push
push
call
and
and
clc
fwait
in
and
movs
out
lahf
fdiv
lods
xor
adc
jp
inc
xor
sbb
pop
xchg
cld
sub
fild
outs
or
jp
inc
and
mov
rcl
nop
xlat
or
and
push
adc
popf
out
loopne
lods
sbb
ret
in
mov
int3
or
mov
add
arpl
shr
rcr
cdq
add
(bad)
das
in
mov
cmp
push
cmp
pop
mov
jge
cli
mov
call
cli
inc
jmp
or
idiv
imul
nop
outs
xor
add
inc
sbb
hlt
mov
int3
out
out
loope
xchg
xchg
stos
jg
dec
inc
fisubr
repnz
cdq
mov
(bad)
clc
or
ret
inc
cmps
pop
jl
cld
sub
mov
repnz
xchg
sbb
xor
sub
add
js
or
xchg
aad
pushf
in
inc
sbb
dec
mov
scas
jp
shr
xchg
call
je
shl
inc
mov
sar
jge
pop
cmc
pop
sbb
std
out
ret
jo
or
mov
dec
push
push
and
sub
pop
xlat
adc
add
aam
dec
mov
hlt
push
sbb
js
fsubrp
or
loop
inc
push
sbb
adc
jmp
shl
shr
or
fnstsw
nop
lock
fs
fld
or
push
fisttp
and
jne
repz
add
mov
xchg
(bad)
adc
pusha
(bad)
push
mov
or
jmp
pop
xor
push
ins
sub
out
xchg
jns
pop
or
push
test
cmp
test
add
mov
xchg
repz
sub
inc
add
int3
je
(bad)
jmp
ffree
rol
gs
iret
push
pop
jb
test
or
push
aad
bound
and
jmp
cmc
push
ins
pop
mov
cwde
retf
data16
clc
or
nop
and
dec
jl
and
inc
adc
in
cmps
fsub
movs
jmp
and
movs
lds
pop
cs
call
out
xor
cwde
ins
outs
fisttp
push
mov
jae
lods
inc
xchg
cmp
mov
push
pand
mov
pushf
movs
push
mov
js
cli
mov
mov
mov
icebp
pop
stos
pop
in
mov
mov
out
arpl
xor
cmc
and
test
mov
push
cs
in
add
call
inc
aaa
sti
mov
pop
xchg
or
fisttp
cmp
test
cmps
inc
push
cmp
ss
int
jne
shr
enter
repnz
icebp
or
sub
push
pushf
scas
sub
retf
call
outs
(bad)
lods
xchg
xchg
push
jg
xchg
(bad)
pop
jp
jl
fst
dec
lds
push
mov
mov
sbb
mov
mov
pop
adc
jg
cld
push
mov
dec
jbe
sub
out
mov
sub
out
js
ja
jne
jl
(bad)
rol
mov
fldenv
xor
mov
or
das
mov
imul
inc
sub
ds
movs
or
cdq
int
jmp
das
cmp
sbb
cmp
lods
scas
fld
sbb
inc
outs
push
ret
cld
inc
push
push
aam
in
mov
dec
or
inc
mov
daa
loopne
jecxz
dec
add
dec
paddq
lahf
ss
aas
fwait
mov
jl
mov
(bad)
test
sbb
dec
rcr
add
mov
adc
scas
mov
not
retf
jmp
out
(bad)
fwait
nop
xor
jmp
jnp
aas
(bad)
pop
pop
pop
sub
xchg
inc
add
cwde
or
cmp
inc
and
xchg
adc
ja
les
(bad)
sbb
mov
fisubr
dec
or
jns
lock
and
and
xchg
mov
inc
xor
xchg
push
out
or
push
jge
stos
mov
in
add
xchg
mov
dec
neg
or
ja
(bad)
cmp
dec
movs
inc
pop
add
fs
stos
and
xchg
int3
pop
dec
add
mov
cmp
in
lock
arpl
jbe
pop
push
push
jnp
jp
test
int
mov
jb
inc
xchg
loop
adc
in
jmp
sbb
jp
in
leave
fwait
test
pop
clc
sub
push
retf
retf
inc
(bad)
add
inc
lahf
xor
inc
in
push
xor
push
dec
pop
in
jg
retf
add
xor
xor
xchg
xchg
lods
add
sbb
mov
adc
cmp
dec
and
or
test
cdq
dec
mov
(bad)
scas
retf
sbb
push
sub
sub
xor
sbb
xor
enter
mov
aas
test
push
dec
test
imul
and
shl
inc
jl
jecxz
bound
mov
call
cmp
jecxz
adc
int3
jae
push
inc
mov
cmp
cmps
push
pop
xchg
lea
jbe
fidivr
test
icebp
dec
inc
cld
fld
popa
pop
dec
jmp
cld
sar
in
cmp
popa
out
add
test
ss
lds
inc
call
movs
xchg
sub
mov
mov
push
push
(bad)
xchg
sbb
call
lock
frstor
pop
xor
add
pop
sub
int
retf
xor
outs
dec
mov
push
sub
xchg
or
adc
sub
test
sbb
add
loopne
shr
fistp
adc
sbb
les
psubusb
mov
data16
call
repz
xor
mov
jl
sahf
ja
ror
inc
cmp
xor
scas
pop
mov
mov
inc
adc
into
ss
push
daa
inc
xor
(bad)
pop
sti
add
jp
push
pop
pop
out
cdq
ins
sbb
xchg
push
ret
add
mov
ins
scas
pop
enter
rcr
jnp
add
xor
jp
inc
xchg
jne
and
jbe
shl
mov
dec
mov
lahf
push
fst
dec
xor
xchg
push
or
sbb
es
outs
cs
lods
lea
out
call
adc
cs
push
mov
add
ds
add
cmps
out
inc
int3
mul
les
mov
imul
push
nop
fcomp
mov
clc
mov
je
pop
add
sbb
jnp
fild
push
inc
push
mov
mov
xor
mov
adc
add
scas
mov
mov
shl
lds
jnp
mov
je
or
and
and
mov
test
sbb
mov
sbb
mov
inc
jg
pop
ror
jle
and
lods
inc
mov
arpl
xchg
iret
pop
cwde
or
(bad)
sub
push
enter
push
loop
push
mov
test
sub
aaa
gs
scas
pop
push
loopne
sbb
stos
xchg
ds
mov
or
repnz
cwde
fs
mov
pop
jb
mov
dec
outs
out
clc
push
mov
adc
in
pop
lods
cdq
aas
xor
mov
retf
ret
ja
sub
(bad)
and
push
aam
cwde
and
mov
sbb
xor
pushf
(bad)
imul
sub
dec
or
stc
std
jne
pop
daa
int3
(bad)
ja
div
cmp
mov
ja
lods
and
mov
dec
xchg
mov
and
and
daa
jnp
add
and
and
fnstsw
aam
or
and
add
jmp
inc
pop
icebp
imul
mov
mov
sbb
sahf
arpl
sub
jp
adc
out
inc
xchg
cmp
add
push
inc
jbe
mov
xchg
bound
int
and
jl
jmp
sub
or
outs
imul
sbb
es
mov
sub
mov
mov
xchg
mov
mov
dec
in
inc
jns
js
mov
jge
inc
mov
xchg
cmp
pop
adc
hlt
dec
dec
inc
popf
frstor
inc
pushf
jae
rcl
adc
or
xchg
fld
imul
(bad)
push
test
(bad)
jbe
and
mov
or
sbb
addr16
aaa
(bad)
xor
jnp
adc
shl
rol
aam
and
mov
iret
ret
cli
xchg
adc
sub
lds
pop
xchg
les
and
add
adc
adc
and
pop
loop
cmps
pop
push
mov
add
xchg
mov
ret
xchg
push
sbb
(bad)
cmps
daa
aaa
ds
fidiv
add
imul
dec
jp
dec
fstp
retf
fs
mov
add
out
xchg
dec
in
loop
sub
push
and
mov
pop
mov
cdq
sbb
dec
clc
and
iret
data16
out
call
cli
imul
inc
fnstcw
xchg
sbb
retf
mov
pop
push
or
cmps
pop
dec
data16
(bad)
fld
xchg
mov
sbb
fwait
mov
pushf
dec
push
jmp
dec
xor
imul
or
fmul
in
mov
(bad)
push
stos
mov
xor
push
fadd
mov
(bad)
dec
mov
aam
sub
inc
mov
lock
fmul
jb
fdiv
xchg
leave
inc
jo
sub
int
jb
xor
clc
xchg
mov
mov
test
(bad)
xchg
sub
cmp
fdivr
lock
push
sti
dec
push
sti
and
inc
mov
aam
inc
jge
lock
mov
les
pop
sbb
das
jl
pop
dec
(bad)
push
inc
cmps
mov
and
les
mov
mov
mov
sbb
pop
out
cmp
arpl
fwait
xor
xchg
cmp
jmp
mov
pop
stos
cmp
aam
js
mov
loopne
(bad)
mov
imul
pop
fldenv
repz
int
ss
ret
sub
std
push
pop
xchg
ins
int3
or
or
aaa
repz
sbb
jae
mov
aad
scas
cwde
ds
adc
pop
cmps
cmp
sub
sar
(bad)
out
or
shl
cld
aad
inc
in
push
inc
pop
bnd
mov
cld
add
test
mov
xchg
pop
repnz
lahf
(bad)
add
mov
jnp
test
and
jbe
imul
xor
and
xor
mov
sub
pushf
cmp
cmp
xor
pop
not
retf
cmp
sbb
lahf
jne
pop
outs
pop
je
or
xor
add
mov
lahf
xchg
loope
mov
jecxz
pop
inc
pusha
popa
or
xchg
fidivr
push
dec
xchg
cmp
pushf
scas
ins
inc
add
xor
mov
call
aaa
mov
jo
mov
(bad)
sbb
mov
int3
and
or
push
pop
out
call
je
push
jbe
jnp
jg
mov
sub
sbb
inc
cmp
pop
mov
jecxz
sar
fcom
imul
dec
adc
stos
push
sti
nop
shl
and
push
neg
bound
sub
push
push
rol
cmp
lods
cmp
scas
xchg
pop
fwait
add
mov
and
sbb
in
mov
or
jb
(bad)
sbb
jo
outs
out
outs
in
call
jo
imul
aaa
or
jns
jno
pop
test
and
ins
out
mov
adc
xchg
jne
test
add
inc
push
fsub
mov
jo
int3
push
jne
in
call
mov
imul
sbb
mov
rol
popa
out
mov
out
out
ins
inc
lea
fcom
pop
and
cmp
les
add
dec
pop
popa
cmp
mov
and
cmps
xchg
mov
aas
in
shr
fdiv
dec
adc
or
daa
sti
sbb
(bad)
out
add
gs
test
mov
outs
enter
iret
pop
sub
push
add
pop
call
in
adc
cmp
pop
mov
movs
int3
push
sbb
adc
sub
add
int3
in
imul
push
aad
mov
and
inc
popf
jmp
inc
and
(bad)
adc
repnz
ins
add
pop
pop
pop
xor
les
jl
pop
test
mov
pop
and
js
mov
sti
pushf
jmp
je
popa
popf
fs
clc
jno
popa
arpl
xchg
fisttp
mov
iret
(bad)
sub
push
out
in
outs
mov
cmps
inc
mov
je
dec
fistp
mov
out
xor
mov
retf
cvtpi2ps
pop
sbb
sbb
pusha
jno
in
pop
mov
rcl
xor
mov
xlat
mov
sti
sbb
cmps
push
jecxz
lahf
data16
(bad)
sti
js
call
cs
shr
hlt
adc
lds
adc
cmp
cmp
push
test
lahf
adc
and
inc
push
stos
sub
cmp
adc
or
iret
xchg
push
(bad)
cmc
cwde
and
mov
aad
add
popf
or
jbe
or
xor
pop
mov
push
dec
call
add
in
(bad)
icebp
xchg
add
idiv
neg
outs
cdq
xchg
sub
(bad)
neg
fisub
gs
mov
mov
cmp
push
retf
pushf
cdq
aas
mov
mov
pop
and
add
popa
xor
bound
hlt
aad
stc
int3
xlat
loope
jp
pushf
sub
xor
jbe
push
xor
mov
or
enter
icebp
pushf
mov
push
pop
test
sahf
jp
mov
mov
mov
(bad)
mov
cmps
jecxz
push
sbb
sub
sbb
aaa
add
outs
ss
add
xchg
shl
pop
hlt
les
push
sub
dec
test
push
fwait
nop
jns
cwde
repz
push
and
repnz
pop
(bad)
cmp
fidivr
les
js
ins
(bad)
loopne
mov
cmc
dec
mov
movs
inc
pop
imul
inc
push
dec
aaa
inc
and
xor
jge
sbb
xchg
fistp
add
cmp
mov
and
fsubr
movs
jl
mov
and
dec
xor
fstp
mov
(bad)
sub
adc
je
cmp
loop
fidiv
pop
dec
fsubr
cmp
jnp
inc
sub
push
cmp
(bad)
cmp
sahf
(bad)
mov
add
jae
leave
sub
sbb
add
dec
jmp
repnz
push
pop
add
sar
and
adc
and
push
sbb
btc
fwait
icebp
push
nop
cmp
mov
cwde
int3
cmp
xchg
and
or
dec
dec
test
arpl
stos
shr
push
push
fld
shl
sub
adc
pop
and
pop
pushf
jo
sub
fs
sbb
pop
lods
push
aas
imul
dec
(bad)
mov
jae
popa
xchg
sar
mov
xor
(bad)
xchg
call
or
cmps
adc
mov
and
pop
dec
sbb
int
or
mov
out
add
fdivr
mov
outs
inc
int3
jo
in
adc
xor
jnp
add
shl
fild
inc
cmp
xor
ret
jle
pop
jmp
fmul
lahf
adc
retf
bound
jp
push
les
mov
pop
ins
test
fwait
and
inc
adc
adc
jmp
icebp
stc
sub
cmp
xor
sbb
mov
aam
sahf
pop
push
shl
js
fnstsw
sub
(bad)
mov
mov
sbb
inc
inc
jae
gs
je
add
sahf
stc
pop
rcl
loope
movntq
xor
iret
sub
push
mov
or
mov
inc
loope
pop
push
mov
(bad)
mov
stc
jno
cmps
inc
adc
ins
xor
data16
pop
imul
sbb
addr16
sbb
or
adc
inc
fisub
cdq
push
or
out
pusha
cs
lea
add
mov
adc
push
adc
lods
push
mov
mov
ss
loopne
stos
out
mov
scas
hlt
cwde
adc
in
and
and
ins
xchg
inc
(bad)
mov
(bad)
mov
imul
xor
test
adc
push
mov
jle
xchg
cld
fldcw
and
in
repz
pushf
leave
loopne
imul
cmp
retf
clc
push
sbb
sbb
dec
ror
aam
add
dec
pop
pop
jae
neg
loopne
push
dec
cmovle
xchg
movs
and
out
pop
cld
fld
aaa
sub
pop
mov
repz
mov
push
arpl
mov
inc
or
out
xchg
aaa
mov
cmps
pusha
jmp
xchg
pop
xor
push
das
inc
stos
adc
(bad)
das
sub
cwde
popa
push
cmc
pushf
pusha
cmc
sub
and
push
in
icebp
dec
push
jnp
iret
inc
mov
pushf
sub
or
mov
stos
xor
shl
push
shl
sbb
xor
xchg
xchg
fdivp
(bad)
pop
popf
ins
jl
dec
daa
retf
gs
ret
pop
out
fadd
or
mov
cmc
add
std
mov
xchg
push
out
mov
mov
test
cmp
add
add
sbb
lods
jge
xor
fs
mov
add
stos
mov
cmp
mov
out
push
test
in
jmp
ins
sbb
sti
and
dec
mov
clc
dec
push
sbb
pusha
ins
xor
and
(bad)
fs
adc
stc
mov
sub
cmps
lock
dec
pop
das
into
cmc
rcr
cmp
ins
pop
les
push
mov
xchg
out
sbb
test
xchg
adc
outs
(bad)
cmp
ror
in
jnp
mov
clc
imul
ins
jnp
lss
push
ja
(bad)
loope
gs
loop
pop
mov
bound
mov
push
in
out
stos
jecxz
xchg
cwde
call
push
stos
and
sub
mov
and
inc
inc
mov
jmp
jl
outs
in
sub
adc
gs
inc
cld
mov
ficomp
into
and
push
xor
pop
pop
jmp
sti
mov
and
push
jmp
cmps
nop
mov
xor
movs
adc
sbb
jg
dec
stos
out
pop
dec
movs
mov
movs
out
xchg
hlt
mov
mov
and
xlat
dec
push
cmp
es
fnstenv
dec
popa
or
mov
sub
fisttp
ret
add
test
inc
es
into
xchg
cmp
xor
dec
sub
inc
mov
mov
xchg
xchg
cmp
ja
push
in
add
xchg
xchg
nop
push
xor
jmp
cmp
inc
mov
mov
cdq
jns
fsubr
and
add
sti
sar
(bad)
cmp
out
jmp
scas
fsub
addr16
sbb
mov
leave
stos
les
loopne
ja
add
aam
aad
ret
fcmovb
fidiv
cmp
lea
inc
sub
das
lea
sub
add
aad
pop
cld
mov
test
lahf
gs
jbe
in
xor
loope
sub
repz
dec
outs
mov
scas
mov
dec
mov
and
dec
sbb
adc
pop
(bad)
sbb
inc
cmps
pop
loop
xor
jecxz
mov
pop
push
inc
sub
fwait
inc
leave
cmp
aas
adc
rcr
pop
or
fldcw
sub
test
jp
les
dec
ror
add
retf
test
jle
mov
jb
mov
and
or
and
push
mov
or
loop
dec
jae
in
and
pop
mov
mov
mov
mov
fstp
aas
dec
push
sub
xor
sub
cli
ins
xchg
out
ss
das
pop
mov
xchg
arpl
and
mov
add
add
or
js
pop
sub
dec
arpl
xchg
mov
cwde
cmp
(bad)
aaa
shl
jbe
aaa
add
test
push
popa
xor
inc
into
pop
repnz
repz
call
gs
dec
inc
dec
xor
cs
xor
rcl
call
loop
inc
fisub
add
jp
fld
sub
adc
ins
mov
imul
xchg
call
cmp
dec
inc
aas
lahf
mov
nop
inc
in
cmovnp
(bad)
(bad)
stos
dec
inc
call
xor
pop
dec
mov
push
push
add
in
ja
test
stos
gs
adc
rcr
xchg
add
out
in
movs
jnp
and
sbb
mov
shl
jp
mov
cmp
pop
dec
mov
lahf
imul
push
adc
adc
ret
mov
adc
add
inc
xchg
outs
adc
outs
sbb
mov
popa
xchg
leave
pop
xchg
movs
cmp
and
in
inc
cmp
mov
sub
push
jnp
mov
(bad)
popf
in
lahf
mov
mov
movs
cmp
test
sub
push
mov
js
outs
sbb
sub
cmps
fdivr
movs
inc
adc
int
das
push
push
test
inc
mov
xchg
push
sbb
inc
nop
arpl
pop
sbb
push
jp
icebp
call
imul
aam
add
loopne
jno
mov
lods
(bad)
pop
sbb
mov
mov
xchg
or
xlat
in
ds
and
fwait
(bad)
jne
arpl
cdq
sub
dec
mov
lods
mov
ds
xchg
test
xor
add
push
xchg
sahf
push
fbld
fcomi
xor
cmp
stc
sub
cmps
inc
mov
ja
in
ins
dec
add
adc
push
mov
inc
ja
mov
mov
jae
aad
cdq
xor
aad
cmp
pop
mov
stc
fbstp
(bad)
in
les
sub
mov
fcom
xor
movs
out
fbld
cmp
pop
inc
dec
bound
mov
fst
lds
pop
push
in
dec
sub
push
rcr
aaa
dec
ret
add
arpl
or
(bad)
outs
add
dec
out
loop
test
jae
sub
jmp
jne
mov
inc
in
mov
jnp
mov
push
and
mov
aaa
out
stos
call
(bad)
xchg
push
pop
data16
inc
dec
jge
xor
pop
ret
int
adc
push
xchg
mov
je
and
dec
pushf
and
jns
xchg
xor
lds
retf
xchg
stc
jle
outs
mov
pop
sub
adc
mov
mov
xchg
push
jne
mov
add
scas
bound
xor
jp
clc
ror
(bad)
aaa
fdiv
jo
movs
sbb
mov
popf
jg
popf
enter
(bad)
mov
adc
mov
popf
xchg
xchg
out
clc
pop
jg
out
adc
jno
sub
inc
sub
fistp
ss
hlt
fcom
(bad)
dec
icebp
add
in
packuswb
addr16
cmp
xchg
iret
cmc
nop
push
cmc
xlat
loopne
jmp
aaa
jmp
lock
and
imul
scas
mov
ja
or
mov
inc
retf
and
mov
neg
pop
mov
stos
sub
movs
sub
neg
xor
mov
mov
lock
and
fsubr
aas
mov
fidivr
outs
dec
(bad)
sbb
pop
cmp
jg
fs
push
sbb
dec
int
cld
fisttp
rcr
xchg
sahf
out
add
fwait
and
fwait
mov
out
dec
ins
xor
je
mov
push
out
push
push
ror
jns
cdq
retf
and
xor
push
fst
ins
aad
sbb
push
mov
inc
xchg
add
out
lods
xchg
jecxz
mov
dec
sbb
iret
xchg
mov
sbb
mov
adc
mov
xor
and
or
lea
and
jecxz
dec
jecxz
icebp
and
popa
mov
xchg
lods
stos
jmp
out
fwait
sub
cmp
add
add
mov
enter
or
mov
cmp
retf
or
dec
push
stc
mov
or
adc
mov
or
retf
jg
sbb
jmp
lea
ret
imul
cmps
fisubr
xor
loop
lods
jle
xchg
jg
push
imul
xchg
jnp
add
leave
arpl
leave
mov
adc
xor
dec
scas
jnp
hlt
ret
push
and
push
aam
cmp
pop
(bad)
sub
pop
dec
ins
out
fidiv
jmp
mov
daa
add
scas
ins
inc
sbb
dec
sub
aas
loopne
inc
dec
sbb
pop
out
or
push
jle
out
aas
(bad)
xor
mov
pop
loope
ins
fstp
ins
jne
or
jge
push
and
mov
mov
pop
aas
pop
setle
dec
pop
push
cld
cmp
dec
or
in
or
pop
inc
lea
data16
imul
into
jae
xchg
out
jno
outs
adc
aas
out
das
sub
jb
adc
into
mov
jno
scas
jo
push
lock
out
add
adc
arpl
aaa
pop
pushf
bound
cmp
jb
pop
mov
fcomp
retf
test
xor
mov
xchg
lock
mov
mov
std
outs
cdq
stos
push
xor
mov
mov
(bad)
push
pop
lods
mov
xchg
int3
jp
pop
add
movs
and
push
push
add
or
ja
mov
mov
mov
scas
shl
push
call
mov
push
data16
rol
mov
pop
jl
cli
pop
push
adc
loopne
mov
mov
dec
fwait
adc
test
adc
ret
jge
fs
movs
rcl
jbe
out
sub
(bad)
or
jle
aad
pop
xchg
jle
fs
js
sar
sub
mov
out
mov
xchg
xlat
aaa
jecxz
mov
aam
jb
dec
pop
(bad)
cmp
std
and
mov
xor
xor
add
mov
out
out
fmul
xchg
test
scas
sbb
or
jp
mov
add
out
into
dec
inc
sbb
or
rol
xlat
sbb
jmp
push
or
and
xor
sbb
mov
xor
imul
mov
sbb
xor
cmp
data16
(bad)
lea
lods
adc
jle
inc
mov
stc
inc
sbb
hlt
mov
mov
retf
push
sbb
xchg
jae
jmp
(bad)
ss
inc
mov
aad
mov
data16
pop
cwde
adc
push
sub
mov
mov
mov
loope
ss
fwait
pop
sbb
add
jnp
test
imul
fnstcw
push
and
xrelease
sub
lods
aad
loopne
pop
pop
test
add
shl
jge
outs
xchg
add
xchg
add
push
shl
sub
loopne
adc
push
outs
pop
rcl
test
adc
add
jge
sbb
and
in
aad
xchg
cdq
adc
sbb
loopne
add
push
repnz
sti
shl
push
sub
mov
xchg
ret
cmp
or
lahf
jo
pop
mov
xchg
or
test
push
cmp
ins
push
sbb
push
sbb
inc
and
nop
pop
mov
sub
imul
add
movs
sbb
scas
cld
(bad)
mov
pop
call
xchg
cmps
out
push
out
jmp
cmp
jmp
cmp
mov
lods
outs
mov
out
std
mov
loope
pop
jp
pop
xchg
lds
mov
xor
inc
ss
pop
in
jg
ret
sub
jecxz
sar
sbb
jmp
pop
retf
push
sub
aaa
(bad)
pop
cmc
jge
mov
xor
sbb
fcomp
xor
jg
std
add
cmp
ja
idiv
push
push
fld
enter
popa
in
daa
movs
outs
jg
js
inc
das
add
das
xor
aaa
test
(bad)
sbb
call
pop
xor
xchg
movs
add
mov
out
ret
xor
xor
aam
fidivr
cmp
push
(bad)
test
and
retf
xchg
adc
sbb
cmp
daa
add
test
loope
xor
repnz
pop
jg
inc
int3
sbb
add
push
jp
cs
inc
pop
dec
(bad)
adc
or
dec
popf
add
in
outs
mov
mov
call
les
pop
leave
adc
xchg
jmp
jns
fisub
cmp
je
xor
mov
iret
stc
pop
(bad)
aaa
cmp
iret
repnz
cld
and
adc
jg
inc
xor
(bad)
sub
cmp
lods
mov
mov
jge
cmp
(bad)
int
mov
inc
and
popf
push
jp
sub
add
push
dec
mov
inc
loop
xor
or
retf
sti
push
add
das
mov
aad
pop
and
or
xchg
and
dec
jp
pop
data16
shl
mov
das
mov
pop
aaa
adc
adc
sub
adc
cli
outs
cmp
mov
xor
dec
sbb
and
mov
mov
pushf
out
mov
xor
fs
fsub
clc
push
repnz
ret
cmc
sahf
int3
pop
dec
jmp
xor
mov
adc
js
scas
xchg
jecxz
test
scas
outs
retf
and
and
and
les
inc
xchg
(bad)
test
rol
sbb
fsub
ss
fwait
and
mov
cmps
bound
inc
cwde
cs
pop
adc
sbb
mov
fnstsw
lahf
in
dec
test
movs
test
das
xor
fwait
cmp
ror
ins
loope
dec
push
push
jmp
arpl
lods
or
test
sbb
int3
imul
imul
pop
and
mov
inc
sub
adc
pop
push
fstp
adc
mov
adc
in
jge
lods
in
dec
or
push
cmp
aad
lock
lods
loopne
aam
lahf
mov
repz
scas
ret
lock
pop
inc
jmp
mov
xchg
fbstp
arpl
scas
and
bound
push
(bad)
sbb
fild
cld
or
aam
call
test
or
lods
or
push
jmp
mov
sbb
or
inc
mov
test
js
xor
xchg
pop
cdq
xchg
cdq
in
aad
pop
sbb
mov
adc
dec
test
jns
call
sub
push
pop
cmp
jg
cmp
sbb
clc
bound
imul
sbb
and
rol
xor
xchg
test
mov
pop
mov
loope
dec
(bad)
xlat
stos
ror
xchg
dec
addr16
lods
mov
pusha
cmp
dec
cwde
inc
retf
pop
add
aad
frstor
nop
stos
call
retf
sub
cld
test
xor
frstor
inc
clc
test
mov
sbb
lock
sbb
mov
cmp
xor
pushf
pop
dec
pop
xchg
pcmpgtw
ss
pop
loop
cmc
mov
cs
int
and
(bad)
mov
mov
push
mov
es
push
or
test
adc
cs
push
mov
outs
outs
aaa
sub
jle
adc
aam
sub
mov
push
sub
xor
sbb
sbb
mov
and
fwait
or
jge
jecxz
cli
fwait
sbb
call
outs
mov
ins
ret
sub
fdivrp
fld
sbb
xchg
test
retf
sbb
fsub
(bad)
push
inc
popa
jns
push
int3
and
sub
pop
sbb
add
std
xchg
mov
add
xor
daa
jo
lea
ret
out
in
mov
les
int3
ds
sub
je
adc
mov
sub
icebp
cwde
adc
iret
xor
and
pop
int3
lahf
scas
adc
(bad)
loopne
push
mov
cmp
add
jge
push
mov
push
packuswb
push
jno
inc
push
xchg
mov
je
(bad)
cmp
sbb
movq
dec
pop
out
pop
mov
pop
outs
or
push
cmps
pop
out
inc
xchg
sbb
mov
fadd
in
xchg
cwde
mov
sbb
sbb
adc
div
test
mov
cdq
fld1
pop
inc
cld
lahf
sub
loope
inc
mov
and
add
pop
loopne
mov
cli
stos
test
lods
stos
test
adc
(bad)
dec
out
mov
sar
dec
sbb
lea
mov
mov
mov
in
cmp
mov
sub
sub
mov
inc
jbe
jae
cmp
pop
pushf
xlat
mov
sbb
xor
popf
fs
add
loopne
xor
sub
lods
ins
jns
push
xchg
cmp
mov
dec
dec
push
repz
sbb
and
cmp
pop
mov
hlt
out
inc
push
lahf
adc
lds
dec
imul
fs
in
push
mul
jns
or
jecxz
xchg
xor
jb
iret
or
xchg
(bad)
fcmovne
adc
dec
push
jp
xlat
ds
je
pop
nop
fldenv
push
xor
add
in
xor
int3
mov
jns
ja
cmp
scas
inc
xchg
lods
inc
and
jbe
stc
int3
psraw
shr
lock
pop
fisubr
inc
out
fisttp
sub
dec
cmc
test
out
nop
xchg
mov
sub
sti
push
stc
hlt
icebp
sahf
in
xchg
rcl
sti
lods
add
add
bnd
sub
cmp
(bad)
enter
mov
mov
pop
mov
int
inc
sub
inc
popf
inc
mov
dec
ins
aaa
cmp
or
outs
sbb
cmps
ror
xchg
mov
test
add
inc
sub
add
mov
push
idiv
mov
xlat
mov
pop
je
(bad)
in
aam
stos
jecxz
mov
and
aaa
push
xchg
bound
pop
mov
test
nop
les
sbb
inc
movs
stos
(bad)
in
sub
xor
fmulp
out
fmul
outs
movs
(bad)
loopne
xor
fwait
or
mov
(bad)
arpl
push
pop
jb
shl
bound
jo
sbb
pusha
mov
xchg
and
jae
add
fs
fisub
(bad)
inc
add
mov
imul
pop
out
add
(bad)
dec
rcl
ret
sbb
lea
mov
aad
aaa
sub
add
sahf
push
mov
inc
mov
push
jge
std
aam
test
mov
jge
(bad)
test
leave
jp
rcr
inc
mov
inc
add
lahf
das
mov
jbe
xor
lods
lahf
ret
pop
pop
jmp
sbb
push
mov
xchg
outs
inc
pushf
xor
pushf
mov
and
xor
inc
aas
mov
dec
mov
push
xchg
dec
jb
bound
call
dec
or
loope
call
inc
out
jge
loop
ret
outs
cmp
inc
scas
dec
fmul
jns
cs
jp
mov
popa
out
and
jae
dec
sbb
sub
or
inc
xor
lock
push
xlat
mov
iret
sub
(bad)
movs
mov
clc
(bad)
fsub
jmp
test
mov
xchg
fcmovnbe
and
fs
(bad)
jmp
xchg
out
push
sbb
cwde
hlt
xchg
add
addr16
xchg
adc
inc
pop
or
mov
iret
mov
inc
xchg
movs
xchg
in
stos
test
inc
xchg
mov
jmp
imul
ret
sub
or
xor
push
inc
movs
lea
retf
movhps
popa
aas
and
(bad)
lds
movs
outs
push
and
iret
sub
or
in
gs
clc
cmp
jl
inc
mov
cld
and
sbb
test
into
call
add
dec
je
imul
mov
fnstcw
ror
dec
sub
xor
in
add
adc
daa
cmp
pop
iret
sbb
push
pop
lock
mov
push
popa
out
cmp
push
es
cwde
lock
add
cwde
inc
jmp
shr
xlat
ds
jo
mov
cld
or
cmp
out
out
gs
push
adc
fmul
cmps
dec
jmp
int
test
pop
mov
fwait
(bad)
daa
sub
push
lock
dec
sub
xor
(bad)
pop
ret
xchg
mov
or
jbe
xor
popf
pop
fmul
jae
mov
inc
push
cmp
xlat
sub
mov
pop
fbstp
push
lods
push
out
std
outs
aas
movs
inc
adc
xchg
xor
mov
push
jecxz
iret
cmp
(bad)
(bad)
sub
je
clc
push
xchg
adc
and
aad
and
push
sub
jecxz
pop
cs
gs
ret
mov
jb
dec
sbb
jns
pushf
out
sar
adc
xlat
inc
sbb
xor
clc
je
ins
mov
mov
dec
scas
in
pop
push
dec
xlat
(bad)
xchg
in
bound
test
mov
sbb
inc
xchg
ficomp
adc
xor
nop
iret
(bad)
outs
or
sub
movs
and
(bad)
xchg
inc
add
pushf
cmp
xor
jmp
fdiv
cmp
je
mov
push
cmps
jle
sbb
jns
clc
push
or
sub
das
ins
pop
dec
lahf
test
test
retf
rol
sahf
dec
xor
jmp
xor
ins
dec
jo
cmc
push
sbb
push
and
cmp
imul
sbb
or
cmp
add
xor
mov
(bad)
pop
add
(bad)
push
sbb
mov
dec
stc
inc
fisub
into
add
mov
push
popf
and
sbb
mov
fmul
int3
mov
cli
or
add
inc
call
stos
jg
cdq
shl
cmp
pop
das
fiadd
fadd
xchg
sbb
mov
mov
mov
mov
xchg
mov
xor
mov
add
inc
idiv
sbb
inc
(bad)
aad
test
sbb
xor
cmp
adc
shl
leave
es
pop
movs
clc
fwait
in
mov
enter
es
pop
out
or
jge
add
loopne
in
pop
pop
rcr
xchg
or
ja
test
push
pop
hlt
out
jge
imul
fucomip
arpl
xor
mov
int
in
in
push
lds
or
cmp
fnstcw
rol
call
ret
retf
inc
out
dec
push
fdiv
push
aaa
neg
movntps
jmp
lock
and
mov
cdq
popf
cwde
mov
mov
sbb
clc
add
(bad)
jb
stos
mov
dec
shl
enter
sbb
cmp
push
sbb
sub
pop
mov
gs
loopne
int3
mov
imul
adc
dec
fisub
dec
jns
add
dec
shl
imul
bound
ds
outs
out
out
adc
pop
ror
int
popf
and
mov
sti
cmc
mov
push
retf
cli
cdq
add
push
(bad)
mov
xchg
fdiv
in
retf
push
mov
push
add
push
je
fld
pop
mov
push
test
push
je
pop
add
jp
scas
nop
ins
lds
scas
jne
xchg
mov
rcl
xlat
jo
lock
fiadd
leave
lock
cld
sub
fisttp
pop
cld
stc
mov
push
xchg
out
cmp
scas
pushf
push
pop
in
and
sbb
shr
cmp
mul
or
sbb
ins
mov
sub
push
(bad)
sbb
fldcw
and
inc
adc
inc
dec
mov
(bad)
ds
aam
cmp
lahf
mov
mov
sbb
addr16
mov
das
in
test
stos
mov
in
inc
lea
fwait
data16
in
push
loope
mov
addr16
add
out
ret
and
cmp
cmp
push
outs
add
loopne
test
xchg
retf
dec
mov
std
mov
scas
xchg
stos
aas
or
jp
shl
or
(bad)
enter
sbb
mov
fcmovnb
cmp
or
fsub
mov
inc
stos
loop
fst
popf
aas
cmp
inc
mov
lds
mov
aas
push
xor
mov
jmp
dec
pop
xchg
retf
das
mov
xchg
push
push
(bad)
jg
sub
retf
daa
mov
out
dec
sbb
in
push
(bad)
call
jle
sbb
sbb
std
in
push
push
sbb
imul
cs
loopne
inc
loop
mov
push
ss
xor
mov
vpminub
lock
xchg
and
cmps
popf
cmp
add
xor
xor
add
and
jp
and
jbe
adc
add
xchg
add
mov
and
pop
test
xor
mov
sbb
cs
int
loop
jp
in
(bad)
xchg
ja
adc
jecxz
(bad)
jmp
inc
fldenv
push
xchg
lods
and
and
cmp
push
inc
push
enter
ss
xor
(bad)
sbb
ret
mov
aaa
sub
or
cmc
jmp
outs
add
or
push
push
cmps
jg
push
and
cmp
clc
mov
cld
popa
adc
in
sub
xor
repz
(bad)
(bad)
jmp
sbb
mov
add
or
sar
inc
push
mov
xlat
sub
sbb
and
dec
int3
dec
out
push
push
dec
addr16
pop
dec
loope
sahf
cwde
pop
loopne
rcr
repz
push
sbb
fidivr
fistp
fmul
cmp
push
sub
sbb
arpl
pop
inc
lahf
add
cmp
mov
cmp
inc
adc
jns
mov
ret
mov
pop
xlat
mov
inc
jecxz
mov
pop
mov
cmp
adc
push
scas
aaa
mov
xor
shr
int
movs
cmps
sbb
push
pop
push
pop
jg
and
mov
sti
dec
add
es
neg
sub
mov
inc
sub
je
or
inc
dec
lea
push
pop
sub
lea
adc
out
mov
jg
push
movs
dec
rcl
xor
ins
adc
push
inc
fsubp
xchg
int
das
mov
push
iret
push
iret
add
shr
adc
clc
xchg
aaa
sub
retf
add
jecxz
aad
jg
sub
imul
scas
and
pop
call
push
rol
cmp
mov
dec
sub
xor
xor
fsubr
mov
push
rol
fsubr
arpl
and
or
and
xchg
das
push
lods
mov
add
xchg
ss
rol
jecxz
inc
push
push
mov
movs
movs
inc
iret
fisttp
out
cmc
in
xor
mov
pop
add
cmp
test
sti
adc
in
sub
push
fnstenv
lods
mov
add
pop
xor
push
pop
rcr
mov
dec
and
or
call
or
clc
and
fcmovnu
sbb
adc
cmp
(bad)
mov
jg
in
dec
out
idiv
je
inc
mov
cmp
clc
pop
test
loopne
inc
(bad)
in
popa
bound
(bad)
cwde
outs
(bad)
stos
pop
scas
mov
pushf
fst
and
lea
(bad)
jmp
mov
dec
and
jle
jnp
dec
aam
or
sbb
jmp
inc
jnp
in
cmps
mov
dec
adc
sbb
inc
cld
lock
add
in
addr16
out
std
mov
test
scas
xchg
dec
lock
out
repnz
xchg
xor
ret
sbb
icebp
mov
and
ja
adc
arpl
mov
fs
pop
pop
jne
and
aam
out
and
push
push
arpl
lods
sti
jbe
shr
push
dec
cmps
cld
test
inc
loop
mov
div
repnz
push
cmp
cmps
sub
imul
(bad)
int3
icebp
mov
mov
pushf
xchg
and
ficom
mov
in
add
(bad)
ins
arpl
lods
cmp
dec
fldenv
pop
gs
sahf
mov
cmp
and
xlat
clc
fwait
xor
rcr
(bad)
js
out
dec
call
sbb
jmp
dec
mov
jmp
leave
pop
push
adc
add
ret
cmp
xor
hlt
sub
mov
pop
xchg
mov
cli
push
cs
xor
fmul
jb
je
or
cdq
arpl
or
sub
dec
add
mov
data16
out
cmp
js
push
out
cmp
and
push
je
stos
loope
and
mov
retf
dec
nop
test
push
sub
ja
rol
(bad)
cmps
or
mov
dec
test
je
test
cwde
mul
add
sub
or
leave
jl
mov
xor
enter
or
adc
adc
xchg
popf
mov
pop
cmc
(bad)
or
sbb
cld
sbb
cwde
stos
retf
cwde
inc
(bad)
fmul
clc
ret
lahf
lea
pop
jnp
fst
add
sbb
adc
push
pop
xchg
inc
aam
sbb
fs
rcl
loopne
or
push
sbb
test
shr
or
(bad)
pop
test
shl
dec
ror
mov
repz
dec
push
xor
cld
pop
mov
mov
mov
psllw
test
adc
pop
add
and
sbb
das
sbb
into
sbb
call
xchg
push
and
arpl
add
call
shl
cmp
sahf
int3
movs
fbstp
sbb
popf
jmp
scas
rcr
cdq
call
es
(bad)
xor
shl
rol
mov
loopne
push
aas
stos
aaa
xchg
or
ror
cmc
sahf
mov
cli
ins
sahf
pop
cmc
jecxz
(bad)
shl
cli
ror
ret
sub
loopne
jae
adc
rol
cld
ja
stos
jmp
pop
pusha
xchg
scas
mov
push
loop
jnp
cmp
add
cmp
jo
mov
pop
push
sahf
sub
xor
xchg
sub
cmp
or
fcom
lgs
xchg
idiv
aam
cmp
mov
ja
and
cmp
inc
stos
or
and
cli
cs
outs
kunpckwd
cld
push
pop
or
sbb
repnz
push
bound
mov
aas
sbb
nop
mov
clc
sbb
jecxz
inc
and
(bad)
cmc
and
das
pop
sahf
sbb
out
mov
ins
adc
scas
cmp
repnz
stc
mov
pop
add
imul
sub
or
push
nop
adc
test
sti
loope
inc
and
movs
dec
pop
test
daa
scas
mov
xlat
leave
sahf
ror
mov
cmc
mov
xor
inc
sub
(bad)
rcl
lahf
add
mov
lds
iret
jmp
inc
dec
adc
inc
cmp
adc
push
pop
gs
inc
dec
xchg
inc
jnp
xor
ret
sbb
dec
sbb
out
mov
inc
mov
loope
stos
dec
mov
mov
jle
dec
mov
pop
sbb
int3
adc
outs
cmps
xchg
sbb
rcl
cmps
add
cmp
rcl
aaa
mov
dec
pop
jle
pop
add
movs
neg
pusha
pushf
dec
data16
dec
mov
cmp
jnp
loop
sub
pop
pusha
add
and
in
scas
jmp
call
lods
in
vpmulhw
(bad)
bound
(bad)
xchg
jns
mov
adc
add
jp
clc
popa
retf
ins
mov
xchg
jne
or
pop
jmp
mov
mov
clc
jecxz
xchg
pop
pop
jl
popa
cmc
and
and
in
mov
icebp
sub
add
(bad)
ret
shl
out
fdivp
xor
pop
mov
sti
fdiv
sbb
fadd
stos
mov
outs
adc
dec
ja
iret
retf
add
add
or
maxps
scas
test
push
mov
add
sbb
out
imul
mov
popa
call
outs
ins
add
out
stos
mov
add
jecxz
repnz
fadd
xchg
fwait
arpl
clc
add
sub
into
dec
in
pop
je
in
(bad)
leave
cdq
cmp
jne
dec
mov
mov
neg
aad
jmp
int3
add
test
bound
jbe
je
xchg
dec
outs
xor
adc
clc
xor
xor
pop
imul
cmp
mov
mov
arpl
pop
cmp
ret
jecxz
cli
xor
lahf
and
jb
shl
sti
inc
aaa
sbb
cmps
or
sahf
mov
movs
dec
jl
movs
rcr
xchg
dec
xor
xchg
mov
rcl
imul
pop
inc
dec
or
test
std
inc
mov
test
xor
ins
sub
test
pop
out
fsub
sahf
jne
cmp
(bad)
or
outs
popf
loope
inc
and
add
mov
ret
xlat
adc
stos
icebp
adc
inc
js
mov
mov
mov
pop
aas
or
adc
retf
xor
or
mov
cmp
and
popf
cmp
dec
dec
dec
adc
dec
sbb
fisub
cmp
bound
inc
pushf
daa
jbe
arpl
cmp
sub
div
adc
pop
push
out
xchg
cmps
push
jne
imul
in
mov
jo
lahf
adc
out
mov
mov
dec
inc
or
out
xchg
cmp
frstor
movs
jmp
pop
repz
sub
repnz
sti
add
loopne
pushw
fdivr
jae
xor
or
and
cmp
xchg
stos
mov
add
jbe
xor
ret
(bad)
retf
test
push
test
or
int
inc
outs
jle
nop
fwait
adc
dec
push
stos
xchg
push
in
aaa
(bad)
and
ret
test
xchg
ss
mov
mov
mov
fdivr
lahf
stos
jo
sti
sub
or
in
add
nop
ja
movs
or
(bad)
daa
mov
xchg
iret
aam
inc
or
(bad)
das
rol
dec
push
sar
inc
cli
xor
mov
xchg
mov
(bad)
or
dec
pop
fstp
in
mov
xchg
jg
jmp
mov
push
call
arpl
pop
inc
jmp
sub
or
in
or
es
push
(bad)
lods
repnz
popa
inc
aaa
loopne
sets
fisub
fabs
int3
mov
jmp
xchg
xchg
idiv
imul
aam
dec
fimul
pop
jbe
and
sbb
retf
fidivr
mov
push
in
push
dec
aas
dec
xchg
call
cwde
sub
cmp
cmps
xchg
cdq
shl
inc
(bad)
mov
push
jmp
or
mov
outs
cs
lods
mov
loope
xchg
pop
loop
(bad)
out
out
push
inc
aaa
mov
les
dec
out
ds
out
jmp
das
daa
pop
ss
push
xor
out
jae
call
fist
cmc
ror
xchg
stos
xor
pop
mov
xchg
add
jp
xor
sub
inc
daa
cmp
sar
xor
js
push
jge
lea
jbe
and
test
dec
(bad)
jmp
cmps
xor
lods
add
xchg
jo
cmp
out
(bad)
stc
push
ror
xchg
jbe
gs
retf
xor
or
adc
ins
in
mov
xor
loopne
mov
(bad)
adc
mov
ret
pushf
push
mov
xchg
lea
lds
xchg
shr
jb
sbb
mov
movs
jbe
xor
mov
sub
xor
call
pop
mov
mov
add
fadd
jmp
mov
push
lea
push
dec
sbb
cmps
test
add
(bad)
jmp
enter
add
jmp
icebp
fistp
mov
mov
mov
lock
imul
bnd
and
lods
(bad)
push
xchg
cmp
or
fild
test
or
ret
push
jns
das
jp
fisttp
call
aas
rol
leave
push
pop
and
lock
idiv
mov
push
psadbw
jmp
pop
stc
or
cmps
outs
gs
pop
(bad)
ins
lds
lds
ins
jns
or
push
popf
pop
and
sub
push
cmp
pop
xchg
fisub
rcr
jnp
leave
neg
xchg
pop
jns
shl
add
outs
pop
ror
ds
xchg
jo
xchg
stos
cmp
lds
push
sahf
retf
sbb
popa
imul
repnz
mov
iret
(bad)
mov
xchg
or
xor
ss
add
mov
jbe
push
ret
jns
cmp
fwait
int3
cli
fiadd
add
sbb
out
cmp
or
mov
lea
hlt
and
sbb
stc
shl
in
jns
cmp
leave
adc
mov
push
xchg
push
inc
ins
pop
push
popa
jns
jge
jmp
and
xchg
xchg
call
mov
shl
mov
pushf
sahf
(bad)
mov
lods
and
dec
lahf
aas
sbb
fsubr
pop
sar
test
daa
cwde
out
lock
(bad)
cdq
dec
out
adc
js
sbb
mov
test
or
sub
out
cs
je
push
jae
mov
push
cmps
add
lods
mov
adc
iret
jnp
cdq
enter
sbb
aad
ins
xor
lock
cmp
push
cmp
mov
or
cli
sahf
pop
rcl
ds
and
push
retf
push
cmp
add
xchg
retf
mov
std
dec
daa
push
jae
repnz
lahf
xor
retf
clc
pop
push
mov
push
jbe
sti
push
mov
adc
push
popa
inc
mov
dec
adc
aas
shl
pop
cmps
shl
xor
das
test
shl
dec
or
mov
push
(bad)
and
pop
(bad)
cmc
push
jnp
add
mov
jl
outs
add
mov
mov
cmp
in
jnp
call
imul
or
dec
mov
scas
nop
mov
inc
mov
jne
pop
popf
(bad)
iret
inc
lods
adc
jp
xchg
sub
dec
xchg
jg
mov
xor
add
mov
aam
cmp
in
adc
dec
sbb
add
adc
xchg
cmp
ins
bound
or
mov
repz
inc
xchg
pop
push
sbb
mov
out
pop
enter
js
pop
ret
mov
in
aam
jl
cmp
mov
sub
xchg
pop
push
je
inc
aaa
add
test
movs
lods
xchg
lahf
jl
mov
bound
(bad)
xor
and
imul
(bad)
movs
loopne
data16
xor
clc
test
cbw
out
out
pushf
pop
xlat
and
adc
xor
xchg
push
or
xor
pushf
mov
jno
inc
sub
sbb
cmp
repnz
sahf
or
jecxz
adc
aas
mov
mov
(bad)
push
mov
adc
mov
pop
ins
icebp
cmps
or
push
dec
daa
push
out
iret
xor
jbe
fsubr
mov
push
mov
out
xor
mov
adc
or
cli
fldenv
stc
cmp
add
mov
xor
icebp
inc
sbb
out
test
jne
or
lea
popf
int
cwde
or
add
jbe
ins
cmp
and
imul
xchg
pop
and
ins
push
jb
jmp
mov
shl
movs
std
sub
sbb
dec
call
imul
sbb
xchg
jmp
push
fiadd
xchg
shr
mov
lods
outs
pushf
aaa
sbb
or
in
test
test
icebp
push
int
pop
push
cmp
jmp
je
loopne
iret
push
lods
aam
or
int3
stos
push
pushw
test
inc
add
retf
xchg
jg
push
jp
mov
out
icebp
inc
sub
dec
inc
test
sar
pop
dec
push
cmp
lea
fwait
hlt
ds
lods
sub
jg
push
and
xchg
push
inc
xlat
fs
popa
dec
cdq
lods
mov
ds
test
add
jb
push
adc
cld
jl
or
mov
push
rcr
leave
outs
mov
inc
les
jle
mov
xchg
and
push
dec
dec
pop
std
in
and
(bad)
sbb
pop
out
add
not
pop
fbld
aad
jno
lods
bound
into
icebp
or
add
mov
jno
and
push
imul
fidiv
fwait
shl
add
dec
cmc
fnstcw
pop
ss
es
pop
push
scas
pushf
sub
mov
mov
add
enter
push
mov
das
ss
scas
clc
mov
cmp
jae
mov
fisubr
dec
inc
xchg
call
fcom
fs
push
mov
xchg
add
push
add
ja
sbb
inc
in
dec
cmp
inc
push
repz
mov
hlt
or
and
sbb
inc
jb
push
repnz
in
mov
cld
adc
repz
jg
shl
sub
jb
sbb
push
out
(bad)
dec
add
bound
(bad)
dec
idiv
fst
paddw
dec
(bad)
fild
xor
stos
jmp
sbb
pop
pop
clc
fst
imul
mov
cli
retf
mov
add
out
add
jge
dec
test
mov
ficom
repnz
and
xor
jae
xor
cmps
and
dec
sub
(bad)
pop
mov
inc
in
xchg
jae
ja
push
sub
xchg
aam
fwait
mov
cdq
and
in
out
mov
inc
les
scas
push
fwait
xchg
jbe
and
rol
inc
add
in
inc
inc
adc
cmp
mov
lods
retf
adc
nop
dec
lahf
(bad)
loopne
and
ret
imul
pop
mov
imul
outs
xor
push
sub
push
popa
and
jns
(bad)
fadd
sub
dec
and
lds
aaa
ficomp
push
inc
mov
lahf
mov
lods
cmp
xor
push
mov
mov
icebp
call
xchg
push
and
cld
outs
dec
(bad)
pop
(bad)
xor
add
lahf
sub
mov
jns
push
pop
stos
inc
clc
and
cwde
test
adc
cwde
outs
lahf
in
or
pop
sub
mov
push
jno
stos
fnsave
jae
adc
je
mov
push
dec
dec
sub
push
inc
dec
fstp
xor
mov
push
popa
pusha
mov
imul
mov
dec
mov
fnstsw
mov
(bad)
jl
les
ss
adc
mov
or
push
jmp
aad
mov
jno
adc
shl
dec
fimul
cmps
cwde
fstp
mov
lods
add
test
or
sbb
mov
xchg
stos
mov
movs
mov
mov
pop
and
inc
movs
dec
test
jge
push
jo
add
hlt
sub
cwde
(bad)
xor
retf
lahf
data16
call
sub
loope
int
fs
push
stos
and
aad
int3
jl
pop
mov
mov
or
fld
jp
inc
lock
mov
inc
jnp
ret
and
dec
and
inc
mov
mov
in
mov
ds
pusha
mov
mov
aaa
outs
push
ins
mov
mov
jecxz
aas
int
jle
mov
scas
fnstcw
repnz
inc
(bad)
xchg
sti
mov
add
pop
inc
or
ret
cmp
in
xlat
fwait
into
pop
mov
push
and
retf
stc
in
iret
aas
sub
std
mov
mov
and
mul
inc
sbb
add
mov
mov
div
sub
scas
lahf
jg
mov
jae
and
sti
loope
and
(bad)
bound
sar
push
out
add
div
ds
cmps
icebp
(bad)
jb
or
jecxz
das
push
push
gs
in
jne
fidivr
je
rol
and
out
mov
call
out
cmp
xchg
ret
or
add
outs
push
in
jecxz
adc
ret
stc
add
jl
mov
call
movs
(bad)
ret
adc
mov
mov
mov
dec
mov
loopne
mov
nop
scas
inc
(bad)
cmp
mov
popf
out
das
std
shr
jmp
mov
mov
xchg
call
out
(bad)
mov
loopne
xor
popa
retf
jmp
fst
mov
push
pop
push
scas
pop
leave
in
movs
or
call
out
xchg
and
arpl
scas
add
in
pop
enter
dec
add
inc
pop
xor
sub
jl
ss
fcomp
cmps
outs
dec
dec
stos
int
outs
xor
cld
add
mov
in
int3
dec
jnp
aas
ror
dec
sbb
mov
mov
sbb
cmp
xchg
popf
fadd
pop
retf
(bad)
mov
aas
sbb
dec
cwde
not
js
sbb
jb
mov
(bad)
xchg
mov
jbe
mov
inc
xchg
add
pop
out
xor
mov
out
inc
stos
nop
fldenv
dec
cwde
jnp
cmp
push
loop
jl
fnstcw
add
cld
jns
push
xchg
or
add
add
fld
js
ret
mov
or
loop
mov
jmp
jnp
fidivr
ret
pop
scas
rol
xor
and
add
popa
mov
shr
mov
cmp
xor
bound
lea
aam
mov
jg
xor
pop
adc
sub
nop
scas
lods
dec
sbb
pop
cli
loopne
push
movs
xor
cmp
hlt
aas
mov
sub
mov
mov
jne
repz
push
push
ins
push
pop
jo
pop
push
mov
mov
dec
inc
cs
and
sahf
xchg
cmp
loop
inc
popf
and
mov
xor
and
(bad)
out
and
repnz
in
push
xchg
push
cdq
push
xchg
shl
iret
xor
and
sub
addr16
sbb
mov
cmps
inc
fbld
pop
add
sbb
adc
mov
retf
lods
push
cwde
lahf
xchg
mov
outs
cdq
inc
addr16
pop
mov
nop
and
push
sti
mov
aad
push
jae
jbe
mov
lea
push
xchg
imul
sub
sbb
ds
cdq
push
push
or
out
or
inc
mov
fistp
aas
in
js
out
aam
dec
jle
and
(bad)
inc
imul
push
cmp
mov
bound
pop
push
out
mov
jl
xchg
mov
cmp
ss
enter
inc
dec
mov
lock
xchg
push
movs
dec
mov
dec
jle
add
sbb
add
add
dec
loopne
inc
movs
sar
in
ret
mov
out
add
xchg
sub
(bad)
int3
or
mov
fld
sub
pop
fs
and
sub
je
int3
mov
pop
inc
fisub
mov
push
mov
cmps
mov
add
(bad)
addr16
xchg
sub
cmc
cmp
xlat
push
pop
rcl
ja
ds
bound
sbb
mov
dec
dec
stos
adc
dec
xchg
sub
mov
jg
loope
and
add
jg
ret
cmp
inc
enter
xor
inc
leave
bound
int
push
(bad)
(bad)
(bad)
xchg
push
lods
mov
xchg
push
mov
dec
enter
pop
adc
xchg
or
lods
sub
das
test
push
into
loopne
jb
loope
mov
shl
call
or
pop
adc
push
scas
mov
sub
push
call
lods
mov
repnz
mov
mov
scas
ret
jmp
(bad)
mov
test
imul
aas
cli
sub
xlat
clc
aas
xchg
or
fld
mov
push
dec
fiadd
cmps
push
mov
mov
dec
arpl
aam
pop
mov
mov
stos
in
mov
mov
xor
push
jbe
repnz
loop
push
mov
mov
add
fisttp
sbb
lds
out
repz
cwde
(bad)
(bad)
sub
dec
sub
dec
jnp
xor
(bad)
fist
pushf
mov
and
xor
add
mov
lods
imul
fs
sbb
cwde
cmp
psubsb
sub
aas
or
add
xchg
popa
cmp
clc
dec
and
outs
jbe
cmp
xchg
cmp
gs
mov
mov
mov
ins
ins
jmp
cmc
outs
cmps
sub
sbb
dec
inc
sbb
and
jge
ret
sbb
add
sub
gs
jmp
cld
push
movs
push
mov
pushf
bsr
inc
les
aad
xchg
push
mov
out
shl
daa
push
cli
stos
dec
retf
es
jp
test
sbb
outs
xor
lea
push
call
shr
rol
sub
sub
xor
mov
nop
aad
mov
jne
and
daa
adc
sahf
(bad)
sub
mov
pop
xchg
sub
in
or
and
sbb
pop
jmp
dec
add
push
jg
push
jns
popa
loope
leave
adc
mov
sub
xor
sbb
mov
int
(bad)
sbb
fdiv
push
daa
adc
lds
pusha
cmp
pop
mov
aam
mov
mov
and
rol
mov
mov
fwait
mov
retf
dec
mul
ins
loope
dec
fimul
mov
iret
(bad)
mov
add
sbb
retf
movs
call
adc
inc
and
add
ret
neg
std
jecxz
mov
jmp
sahf
adc
mov
add
(bad)
push
daa
add
jp
sub
pop
inc
loopne
es
loope
sub
push
pop
push
jns
outs
ins
mov
lahf
cmp
retf
pop
or
dec
call
add
or
jge
repz
and
retf
adc
lahf
jno
popa
and
sbb
ret
mov
pop
sbb
jmp
inc
mov
dec
adc
aad
lahf
push
and
jnp
sbb
add
mov
jne
mov
push
leave
arpl
adc
cmps
push
sub
xchg
test
stos
aam
dec
xchg
mov
mov
push
loope
lods
movs
cmp
add
xor
nop
dec
shr
and
push
sbb
retf
adc
push
cld
lock
ja
push
in
dec
add
in
imul
inc
ins
rcl
jnp
jmp
sub
gs
lahf
das
int3
xchg
pop
aaa
iret
mov
ja
add
mov
call
retf
add
pop
sti
sub
dec
ins
cwde
add
xchg
xchg
mov
push
or
inc
mov
jo
lea
push
fwait
mov
(bad)
push
push
and
pop
mov
clc
test
imul
out
ja
mov
mov
fstp
lds
push
add
inc
ds
jns
daa
cmp
mov
push
sbb
push
cmc
aas
in
mov
xor
mov
cmp
ds
push
stos
jp
and
mov
(bad)
mov
jp
sbb
pop
mov
cdq
jb
int3
xor
adc
lods
ret
shl
fiadd
mov
sbb
mov
pop
fstp
add
add
pop
cdq
pop
in
pusha
push
call
in
cmp
jecxz
gs
dec
jnp
and
and
and
ss
push
sar
xchg
aad
mov
sbb
jno
mov
xor
(bad)
gs
xchg
fld
ror
jb
mov
xlat
pop
imul
mov
js
nop
fild
dec
rol
and
push
push
clc
or
lahf
dec
mov
fstp
addr16
jmp
fcom
loop
push
adc
sub
dec
dec
int3
xchg
lahf
ins
mov
leave
cmp
push
xchg
scas
mov
or
add
shr
inc
jl
push
pop
std
outs
movs
mov
gs
sti
mov
lods
mov
xchg
in
fiadd
push
test
cmps
icebp
in
mov
jmp
lahf
test
data16
fs
dec
mov
adc
and
jnp
bound
leave
mov
mov
loopne
mov
fldenv
movs
cwde
jae
mov
sub
push
addr16
lock
cmp
mov
pop
push
sbb
fwait
lods
cli
add
xor
sbb
cmp
bsf
sbb
and
push
retf
pop
jecxz
dec
xchg
daa
enter
pop
xor
xor
push
push
xor
loopne
cwde
daa
fiadd
(bad)
fnstenv
daa
ss
push
lds
enter
addr16
pop
mov
mov
mov
xchg
(bad)
cmp
dec
aam
scas
or
mov
(bad)
jle
dec
mov
sbb
mov
inc
fsub
nop
xor
push
xchg
mov
nop
mov
rcr
loop
out
shl
fadd
repnz
mov
test
fiadd
int3
mov
sbb
pusha
or
sub
rol
xor
imul
sbb
fcomp
jmp
cmp
(bad)
jmp
test
xor
data16
add
and
mov
pop
std
aaa
lds
retf
(bad)
sub
adc
or
xchg
psllq
sub
pop
push
jl
ja
or
jecxz
shl
repnz
retf
sub
pusha
fld
xchg
xor
(bad)
cmc
push
ret
mov
clc
inc
sahf
fcmovbe
addr16
push
cmps
gs
ins
sahf
vmwrite
bound
sub
nop
add
sar
dec
(bad)
bound
add
sbb
mov
adc
dec
pop
or
xchg
inc
in
mov
(bad)
mov
xor
xchg
loope
out
lods
dec
push
test
mov
dec
mov
and
in
ss
push
idiv
sub
mov
xchg
mov
xor
jmp
ficom
mov
pushf
jns
repz
or
mov
dec
ja
sub
out
mov
repnz
in
pop
mov
pusha
test
xor
jb
mov
sub
data16
jmp
lock
scas
push
aaa
or
retf
inc
lods
repz
cmp
inc
dec
(bad)
pavgw
pop
(bad)
cmps
xlat
rcl
sub
cmps
xchg
ins
sar
adc
sar
mov
fcomp
or
adc
xchg
cmc
xchg
dec
pop
test
in
xchg
and
stos
cli
dec
rol
cmp
out
xchg
adc
lock
outs
pop
aaa
jg
cmp
btr
pop
mov
jmp
cmp
into
sub
sbb
and
int
dec
ds
sub
sbb
cwde
jl
mov
fdivr
push
sub
pop
push
pcmpeqb
das
rol
ror
js
test
shl
sbb
sub
add
sub
cmps
and
sbb
cmp
ror
fadd
xlat
pop
jmp
rol
nop
push
push
mov
mov
jg
sub
xchg
aas
repnz
jbe
pop
out
inc
enter
mov
push
jecxz
add
ret
mov
jmp
outs
clc
dec
and
test
mov
int
cmp
ss
and
outs
mov
fwait
sub
or
mov
imul
ds
mov
mov
mov
push
adc
push
sub
xchg
jp
sub
jnp
fdivr
fbld
gs
cli
cmp
mov
pop
icebp
fcom
xchg
xchg
std
xor
pop
aam
adc
inc
dec
test
xchg
shl
jmp
rcl
sub
add
pop
shl
push
or
scas
ins
pop
mov
and
shr
and
loope
jle
sub
sti
cs
or
imul
mov
adc
mov
test
mul
ret
mov
sub
fistp
xchg
movs
cmp
sbb
pfacc
std
in
sub
xor
push
out
scas
inc
push
xchg
fnsave
gs
push
repnz
lds
mov
or
in
int3
nop
adc
xchg
test
das
mov
cdq
cmp
or
je
lods
or
lods
sar
xlat
and
retf
cmp
inc
mov
jae
loope
xchg
clc
scas
jmp
xor
in
aad
inc
mov
int3
fsubr
daa
cmp
(bad)
ins
int3
leave
push
not
cmc
cmps
jb
mov
jae
xor
jb
fwait
fs
xchg
cwde
mov
and
imul
cld
lds
arpl
aam
out
dec
pushf
pushf
mov
jl
rcl
mov
daa
jae
sar
cmp
jbe
cmp
jge
push
lahf
adc
out
xor
jecxz
or
jmp
clc
ret
in
xchg
inc
and
js
dec
xchg
push
xor
jbe
cmp
add
fisub
push
gs
mov
test
mov
inc
mov
std
popa
fwait
push
es
push
stc
dec
shr
or
loop
pop
or
push
inc
stos
xchg
bound
mov
mov
and
pop
inc
popw
loop
lahf
adc
(bad)
xchg
or
ret
or
lods
ja
cwde
sbb
(bad)
unpcklps
pop
jae
xchg
and
lods
pusha
cmp
cs
add
loop
stc
sar
mov
out
mov
sub
(bad)
mov
xchg
add
jle
mov
aam
inc
ja
mov
mov
mov
sub
push
inc
dec
repz
icebp
inc
and
or
ret
push
or
rol
push
mov
mov
or
loope
or
imul
retf
pop
mov
push
and
stc
loop
inc
sar
or
adc
dec
ret
addr16
sub
loope
loop
ror
neg
mov
add
jne
push
lahf
jecxz
or
push
xchg
jmp
jmp
stc
and
sbb
dec
mov
pmulhuw
mov
stc
mov
pop
add
jmp
sbb
popf
dec
into
inc
fwait
ss
dec
pop
in
outs
sahf
push
aaa
out
loope
out
movq
inc
jmp
pop
ja
aam
or
jl
cmc
mov
repnz
imul
pop
loope
test
(bad)
stc
mov
test
loope
leave
sbb
push
mov
xchg
cmp
sub
js
bound
and
pop
repz
mov
push
pop
ficomp
or
call
jbe
(bad)
arpl
(bad)
mov
movs
or
jnp
movs
out
dec
dec
jecxz
fild
(bad)
xchg
add
mov
(bad)
mov
daa
mov
push
jno
mov
push
arpl
pop
call
fld
jp
clc
out
(bad)
fcmovnbe
xchg
mov
(bad)
push
adc
push
hlt
push
pushf
cmp
jbe
jmp
ss
stos
and
sti
xlat
idiv
je
xor
mov
jp
mov
int3
fbstp
inc
mov
and
sahf
push
cld
mov
pop
jmp
add
mov
adc
sbb
inc
test
push
(bad)
sub
mov
pop
adc
dec
mov
pushf
cmps
cmp
pushf
movs
int3
jg
inc
jo
aad
and
and
stos
(bad)
adc
jb
in
sub
dec
in
push
inc
sub
ror
xchg
sbb
pop
cs
sbb
test
out
ror
out
imul
shl
and
pop
xor
or
popa
push
nop
dec
add
xchg
icebp
cmps
test
dec
ins
js
mov
sub
leave
into
add
push
popa
or
fistp
sub
sbb
outs
pop
and
jae
sub
push
outs
(bad)
out
mov
hlt
ret
pop
not
mov
pop
mov
call
stos
push
mov
push
inc
push
and
sub
ins
mov
sub
ror
rcr
(bad)
js
or
lea
dec
pop
mov
mov
xchg
cmps
xchg
push
js
push
je
loope
add
call
sub
cmp
mov
cwde
push
sbb
or
xchg
cmp
or
mov
je
fsub
cmps
sbb
and
mov
mov
int3
outs
jne
cmps
cwde
ror
jl
mov
scas
mov
rcr
lock
imul
sti
fcomp
add
add
jnp
fadd
daa
mov
mov
hlt
mov
and
cs
mov
sub
cmp
std
sbb
jne
cmp
in
ins
add
sbb
or
in
sbb
fdivr
nop
dec
jbe
add
sub
mov
inc
iret
inc
shl
cld
scas
push
adc
xor
shr
jg
and
movs
xor
mov
xchg
cmp
pop
lods
iret
add
push
clc
in
leave
xor
inc
(bad)
hlt
fidivr
jno
outs
cmp
ret
clc
lahf
add
add
or
rol
pop
arpl
ins
fcmovb
cmp
mul
dec
and
xor
sub
add
ret
pop
into
pop
loopne
mov
mov
and
dec
cmp
xor
xchg
test
cmp
call
xor
into
jns
push
and
retfw
and
sub
aas
push
fidiv
rol
xchg
mov
shl
dec
mov
in
mov
in
call
mov
loope
ins
fiadd
cmp
adc
addr16
idiv
scas
outs
pushf
jo
into
or
pop
popf
int3
pop
sub
ins
stc
sti
mov
adc
mov
mov
scas
pop
sbb
xchg
or
push
les
mov
ins
xor
or
data16
pop
and
xchg
mov
gs
(bad)
cld
leave
retf
push
inc
sub
(bad)
sbb
dec
and
pop
inc
pop
sbb
pop
ins
scas
xor
cmp
mov
dec
push
inc
cmps
stc
scas
iret
repz
pop
mov
stos
popf
pop
xchg
xchg
jmp
ret
jnp
aaa
or
in
sbb
jl
data16
mov
fisub
push
out
mov
gs
jmp
popa
setae
out
ss
and
in
or
pop
ss
dec
popf
inc
jp
stc
fld
jmp
mov
test
rcr
test
dec
sbb
push
push
std
(bad)
fidivr
jno
dec
js
push
sub
ins
movs
jne
add
out
or
push
imul
cs
adc
and
inc
pop
jbe
mov
bound
push
inc
push
pop
mov
pop
lods
jae
cs
jg
add
repz
inc
in
cmps
cmc
and
sub
or
dec
rep
lock
ja
cmps
dec
sar
jl
xor
sbb
mov
ret
xor
add
mov
sbb
loope
sub
sbb
cmps
gs
inc
shl
dec
lods
adc
sbb
mov
loop
repnz
out
les
pop
ins
test
fisubr
xchg
test
add
xchg
fmulp
inc
mov
xchg
pop
cmp
pop
adc
jb
scas
ds
adc
add
xchg
sti
push
add
mov
repz
cld
pop
mov
sbb
stc
(bad)
ins
es
je
into
(bad)
ret
pop
pop
cmp
add
test
mov
mov
aas
and
imul
ds
mov
or
pop
xor
cmp
(bad)
pop
(bad)
adc
lahf
les
movs
xchg
repnz
sbb
pop
outs
xlat
arpl
cmp
mov
mov
mov
dec
mov
popa
test
stos
pop
pusha
rol
xlat
or
sub
repnz
fxch
sahf
mov
aaa
out
dec
sbb
in
dec
and
add
sub
in
outs
sbb
sbb
popa
out
lea
fwait
push
int3
mov
scas
je
cld
sub
or
lods
push
in
xor
nop
cld
mov
cwd
jmp
cmp
jmp
jp
jle
xchg
add
add
retf
inc
or
int3
fisttp
jmp
mov
mov
enter
and
lahf
fdiv
inc
xchg
xchg
idiv
retf
dec
call
or
xchg
ror
popf
cmps
sbb
xor
cmp
fld
cmp
scas
scas
retf
call
(bad)
pop
and
xor
xlat
outs
loopne
jmp
mov
call
ja
idiv
and
test
sub
jae
dec
mov
adc
lea
push
fld
in
mov
adc
or
outs
sar
mov
mov
jmpw
out
sbb
adc
and
imul
sahf
sub
pop
shr
mov
xor
xchg
shl
vpaddq
ror
push
pop
in
(bad)
in
mov
aas
cmps
scas
int
add
jno
dec
sahf
mov
jns
call
(bad)
or
wbinvd
cmc
hlt
mov
test
xlat
gs
xor
scas
mov
inc
push
mov
mov
mov
repnz
mov
cmp
rcl
popa
mov
mov
lahf
xor
jmp
lds
jne
aam
je
int
movs
xchg
mov
(bad)
push
les
sbb
into
mov
push
xchg
mov
or
cmp
xor
div
sbb
hlt
mov
mov
popf
cmp
out
pop
sti
jnp
xor
sub
add
cmp
and
shl
add
xor
pop
sar
test
inc
xor
lea
jbe
in
cdq
jmp
test
in
cmc
adc
xor
jmp
xor
lds
adc
cs
or
jl
enter
sbb
fmul
(bad)
fisttp
xor
and
mov
fild
sub
cmp
cmp
cmp
mov
jmp
jo
dec
pop
or
(bad)
cmp
adc
not
shr
xchg
mov
shr
mov
loop
jmp
inc
sub
lods
js
xlat
push
enter
aaa
in
inc
mov
cmp
inc
imul
arpl
mov
arpl
pop
leave
dec
test
jecxz
inc
pusha
inc
rcr
xchg
sbb
ret
div
mov
mov
push
mov
out
es
std
aam
in
mov
or
in
xchg
into
and
loop
lods
mov
and
pop
dec
mov
sub
sub
repz
xor
sbb
xor
hlt
lds
cmp
adc
in
sub
cs
aam
or
push
adc
xor
(bad)
jmp
xlat
xchg
repz
in
push
push
or
in
mov
call
lahf
bound
sbb
movs
add
xchg
mov
push
fidivr
mov
fcom
jl
adc
bnd
push
lahf
dec
pop
pusha
shl
stos
pop
dec
loop
push
push
xchg
mov
or
or
test
xor
repnz
lods
shl
jbe
jecxz
jg
pop
dec
lods
into
inc
fsubr
mov
jp
nop
xchg
push
std
outs
pop
loopne
jp
repnz
cmp
ins
test
adc
ins
cmp
and
cs
pop
mov
out
pusha
dec
pop
cmp
rep
loop
jmp
sbb
push
aad
icebp
or
xchg
jns
jl
mov
ret
popa
mov
push
into
and
ja
test
pop
retf
ins
and
out
push
mov
clc
mov
cmc
lods
enter
call
bound
nop
dec
aas
in
stc
ins
push
lods
ficom
xlat
repnz
jmp
ficom
mov
dec
and
mov
jmp
inc
and
mov
mov
push
or
push
sbb
test
int3
xchg
xchg
or
aas
mov
adc
into
pushf
pop
xchg
cmp
cmp
mov
cld
jp
push
xor
jne
shl
jp
dec
enter
mov
fst
sar
lahf
mov
xchg
jl
adc
and
jge
dec
or
in
cs
mov
in
test
jle
pop
dec
xor
shr
outs
add
test
popa
cmp
sbb
in
add
ret
loop
or
addr16
adc
int
push
je
mov
repnz
cli
xchg
adc
clc
or
test
(bad)
mov
mov
pop
das
es
xchg
sub
push
pusha
(bad)
jnp
hlt
(bad)
retf
mov
imul
jmp
mov
lock
push
mov
cmp
push
(bad)
fs
mov
out
nop
aam
les
lds
les
mov
clc
dec
in
aaa
sub
lods
push
sub
and
imul
pusha
cld
sub
lds
sbb
mov
xor
das
jmp
mov
sbb
mov
sub
add
dec
int
push
push
dec
xor
fadd
xchg
movs
sbb
imul
or
cmp
cmp
inc
es
pop
add
push
or
cmc
cdq
cmps
xchg
(bad)
xchg
arpl
test
aad
adc
retf
sbb
add
or
xor
push
cdq
gs
cmp
cmp
movs
push
push
and
cmp
mov
push
dec
jp
test
mov
cmps
adc
montmul
cmps
test
jecxz
shr
cmp
and
(bad)
lock
pop
mov
fild
and
pushf
mov
xchg
inc
nop
outs
sar
lahf
cmp
lahf
gs
dec
in
fidiv
rcr
mov
fdiv
icebp
pop
loopne
mov
mov
mov
push
jno
ret
sub
push
adc
sbb
into
mov
imul
icebp
cmps
jbe
mov
shl
(bad)
jmp
movs
scas
fimul
sub
rol
retf
xor
pushf
fiadd
dec
jae
lea
ficomp
sbb
scas
sub
mov
imul
add
test
mov
inc
mov
fimul
xchg
lods
iret
mov
jp
cli
mov
in
jo
int3
add
jnp
mov
push
outs
bound
aad
cmp
test
movs
mov
push
mov
scas
jae
gs
and
mov
jmp
bound
daa
daa
out
and
popf
(bad)
push
rcr
mov
inc
add
ficom
mov
dec
inc
pop
test
imul
jg
pop
jo
mov
int
or
sar
xchg
jmp
fcomip
in
movs
jns
fmul
sahf
ins
mov
sbb
dec
pop
mov
sbb
test
es
dec
mov
push
fsub
sub
ss
cmps
pushf
or
mov
std
(bad)
mov
ins
inc
call
mov
aad
add
je
stos
lock
movs
int3
cs
ss
or
jns
outs
imul
lds
ret
mov
dec
les
jns
sti
xor
stos
movs
or
stos
add
std
cmp
mov
inc
jmp
cmp
(bad)
dec
jae
cmps
ror
inc
sbb
add
mov
add
nop
fdivr
pop
mov
and
cli
loope
mov
in
dec
jae
ret
int3
hlt
xchg
js
or
cli
mov
fsubr
ins
sub
(bad)
mov
out
jbe
add
dec
js
lahf
les
xchg
(bad)
sub
push
cmp
adc
inc
jbe
out
inc
in
outs
in
inc
or
xor
mov
and
mov
fwait
ss
sbb
push
push
shl
sub
xchg
or
(bad)
push
imul
out
repnz
mov
adc
sbb
jmp
jo
adc
jne
push
loope
cmp
jo
inc
pusha
into
leave
dec
fcom
fisubr
ret
loopne
or
sbb
and
mov
lods
and
jmp
or
mov
mov
adc
call
add
and
stc
sub
add
sbb
and
(bad)
pusha
imul
fadd
pop
push
push
mov
jne
mov
retf
xchg
xchg
cmp
aad
out
dec
lds
jmp
jecxz
dec
pop
test
mov
imul
(bad)
mov
data16
lock
into
cmp
jg
adc
test
pop
cmc
ds
push
sbb
fsub
mov
les
or
je
lea
cmp
aas
outs
les
in
popa
mov
fsubp
(bad)
inc
add
in
std
or
jb
inc
mov
jnp
cld
xor
sub
popa
push
lods
test
shl
dec
iret
xor
xlat
ins
ins
lea
aam
jno
fisttp
xlat
jl
shr
push
ins
pop
popf
imul
push
or
call
dec
mov
mov
jb
mov
xchg
shl
mov
cmp
icebp
push
or
jae
lock
out
and
jb
cdq
xchg
lods
(bad)
pop
push
icebp
inc
pop
pop
mov
mov
out
xchg
pop
cmp
dec
ret
js
psrld
add
add
popf
aam
retf
sub
ins
inc
or
and
es
mov
push
lds
daa
sub
jp
into
xchg
pop
or
out
push
cs
aad
adc
loope
aad
jae
pop
sub
stos
and
mov
jae
push
out
push
inc
adc
int3
mov
jns
add
mov
jo
adc
out
xor
fsubr
fisttp
adc
sbb
adc
dec
xchg
xor
and
test
fisubr
and
not
fcomp
xor
retf
sbb
mov
leave
popa
cld
and
add
pop
(bad)
mov
int
xor
aad
jbe
es
(bad)
sti
or
cwde
add
scas
pminub
ja
lock
lds
dec
push
popa
push
inc
sbb
cdq
adc
jl
ret
rcr
jnp
push
in
and
or
sub
mov
mov
sbb
call
pop
jl
enter
and
dec
add
xchg
das
clc
xor
stos
mov
(bad)
jmp
vandnpd
mov
mov
lea
mov
ror
icebp
lods
inc
mov
cmp
ins
test
push
cmp
aaa
loop
ins
mov
pop
fsub
mov
push
inc
inc
sub
fnstsw
or
push
retf
retf
xchg
sahf
and
xchg
sub
push
mov
cmp
fdiv
fisttp
sbb
(bad)
or
xlat
or
shl
retf
sbb
xchg
fwait
xor
xchg
popf
add
add
or
data16
hlt
imul
xor
adc
push
add
(bad)
sub
cwde
cmp
fdiv
jle
out
adc
leave
adc
test
aas
mov
in
sub
(bad)
mov
retf
sahf
jno
and
int3
sbb
out
addr16
hlt
or
jbe
mov
and
cdq
inc
into
sahf
xchg
mov
dec
cld
or
mov
pop
fisub
cmp
fmul
das
cli
bound
fmul
addr16
(bad)
push
test
push
add
and
adc
push
bound
outs
outs
mov
je
retf
ins
ds
push
aad
adc
add
dec
movs
sti
inc
mov
push
inc
dec
retf
push
repz
mov
ds
dec
int
repz
fsubr
mov
jne
imul
(bad)
ds
inc
mov
adc
(bad)
retf
ins
sub
inc
rcl
fcomp
pop
fbld
jge
in
ins
add
xchg
and
dec
sbb
jle
inc
fs
dec
mov
nop
cmp
(bad)
into
ret
fnstcw
and
add
adc
sub
fs
sbb
in
faddp
jno
fld
test
in
xchg
lock
xchg
mov
mov
xor
mov
ins
iret
sub
js
inc
pop
pop
mov
sub
mov
xchg
and
stos
test
xor
inc
aas
inc
pop
dec
(bad)
jbe
aas
lds
pop
inc
cdq
mov
cmps
hlt
fldenv
pop
inc
adc
out
add
pop
jo
pop
xor
pop
jbe
jmp
call
xor
imul
clc
adc
pop
mov
xor
pop
pop
pusha
sub
push
outs
out
sbb
jns
ja
repnz
addr16
setae
outs
dec
cmp
jecxz
xor
mov
xor
daa
pop
ror
int3
in
xchg
ror
movs
and
imul
cmp
pop
mov
out
jge
pop
retf
pop
xchg
xchg
and
hlt
popf
in
sbb
dec
push
xor
mov
stc
or
mov
movs
mov
cmp
adc
push
jb
in
pop
xchg
or
push
sub
sbb
cmp
or
cld
cli
ds
aas
sub
jecxz
mov
popf
out
jnp
lahf
cmp
mov
(bad)
idiv
lea
shl
test
lahf
stos
mov
push
test
jns
jmp
jg
(bad)
adc
rcl
sub
pop
out
test
lods
mov
pop
mov
pop
inc
mov
mov
push
push
xchg
lds
push
mov
or
pusha
mov
and
jl
pusha
outs
dec
addr16
dec
rol
mov
jns
bound
arpl
or
xor
adc
mov
mov
sbb
sahf
or
xchg
jmp
cmp
dec
int3
outs
retf
pop
icebp
int3
cmp
and
xchg
pushf
lds
and
or
dec
scas
out
jnp
test
pop
and
jns
or
sub
add
inc
cmp
or
mov
pop
imul
xor
daa
push
xor
sahf
arpl
adc
sahf
jmp
mov
dec
(bad)
dec
pop
rcr
cmp
call
and
out
div
add
(bad)
dec
arpl
pushf
icebp
(bad)
movaps
and
mov
cld
push
mov
shl
mov
sub
and
mov
mov
cmps
cmp
repz
fstp
out
xor
adc
push
fcomp
or
cs
or
mov
test
and
call
ds
push
shl
jbe
cmp
cld
jge
jl
or
mov
jl
push
fsubp
mov
test
jecxz
push
test
sar
cmp
push
mov
pop
pop
xor
xor
in
shl
mov
xchg
and
and
aad
sub
pop
test
jle
fdiv
jl
fucom
push
jecxz
push
xor
es
or
xchg
push
ins
xchg
scas
and
and
int3
out
pop
ss
stc
lods
dec
(bad)
add
aas
mov
test
sub
pop
push
mov
and
repz
ret
ins
xor
cwde
inc
adc
adc
and
mov
dec
ds
mov
xor
dec
jge
dec
mov
pushf
je
pop
or
ror
push
fisubr
pop
js
in
adc
push
loop
jmp
aam
mov
lock
pop
sbb
cmc
adc
hlt
xchg
xchg
mov
xor
xchg
inc
dec
rol
fiadd
int
nop
sahf
sbb
pop
mov
add
mov
xor
pop
and
xchg
aas
push
mov
pop
lds
lahf
sbb
mov
ss
daa
xchg
lods
clc
sub
fs
out
or
sti
rol
cmps
outs
jbe
and
fcmovnbe
in
mov
dec
cmp
clc
ins
gs
dec
jno
clc
vpunpcklwd
push
cli
sar
(bad)
fsubrp
inc
pop
jne
(bad)
clc
jne
sbb
push
(bad)
into
jne
cdq
mov
sar
aad
mov
xchg
mov
movs
sahf
popa
xchg
jmp
jmp
mov
jns
loop
retf
and
movs
leave
push
pop
rcl
test
pop
jecxz
sbb
pop
and
sbb
ss
mov
int
ficom
push
sub
call
cmps
inc
test
sub
movs
mov
cmp
xor
ret
loopne
push
(bad)
sbb
scas
lahf
push
jnp
cdq
lahf
sbb
shl
or
into
xchg
cmps
ins
inc
push
setg
stc
fidivr
ja
js
jmp
das
pusha
aad
scas
xchg
pop
stos
aas
dec
mov
and
shl
push
test
sahf
pop
mov
int3
ins
xchg
lods
pop
push
jmp
fs
rol
jbe
repnz
push
sub
jne
pop
and
or
and
push
and
push
mov
inc
sub
jb
or
jmp
or
xor
mov
sbb
push
xchg
cdq
fwait
idiv
mov
jmp
iret
jl
test
das
lea
loop
(bad)
in
jecxz
ret
mov
push
psubq
cs
and
out
repz
inc
sbb
xchg
jmp
in
mov
imul
(bad)
ror
adc
daa
cmp
mov
inc
push
jmp
iret
sahf
inc
and
mov
and
lods
rcr
ja
inc
aas
retf
ret
xor
adc
xor
not
movs
push
add
and
jns
xchg
mov
cmps
and
mov
movs
fisubr
pop
add
call
popa
inc
pop
retf
sub
ret
push
aas
mov
push
jae
ror
or
js
cmps
movzx
mov
or
fwait
loopne
je
adc
lea
outs
pop
call
xor
(bad)
xchg
mov
inc
xchg
jnp
test
call
add
add
jp
add
loopne
popa
push
mov
jge
cmps
fstp
and
daa
lds
jae
je
add
mov
adc
stos
popf
(bad)
jle
into
bound
jne
jne
pusha
loopne
or
cdq
(bad)
in
mov
adc
jbe
pop
lds
sbb
push
loopne
test
js
sbb
mov
addr16
dec
mov
fisubr
imul
(bad)
cli
jnp
pushf
xchg
scas
sub
push
jne
loope
loope
xchg
cmc
sar
mov
inc
jge
sbb
cld
mov
sbb
sub
retf
or
xor
xor
fwait
jno
daa
adc
mov
(bad)
mov
push
sub
xor
out
mov
or
jmp
ds
mov
xor
clc
test
mov
ret
fidiv
es
adc
fs
test
loop
int3
sub
pop
jecxz
dec
and
dec
dec
test
pop
cdq
push
cmp
inc
jecxz
popa
adc
xchg
cmp
and
sub
aam
call
push
rol
or
inc
ret
ret
dec
ficom
std
add
stos
sub
mov
pop
outs
rcl
popf
add
out
dec
pop
out
mov
sti
inc
xchg
inc
(bad)
fisub
sub
bound
cmp
pop
adc
cs
or
sub
retf
or
cmps
dec
and
adc
(bad)
out
or
imul
push
mov
dec
loope
add
inc
(bad)
cmps
inc
xchg
add
xchg
adc
xor
jmp
pop
aas
xchg
adc
mov
push
fdiv
ret
xchg
sbb
out
mov
mov
add
ret
ret
ret
inc
(bad)
fcmovb
or
rcl
jnp
icebp
or
pop
ret
or
cmp
repz
out
push
loope
(bad)
aam
cmp
mov
pusha
mov
mov
js
xchg
ret
pop
inc
adc
sbb
outs
loope
adc
add
das
cmp
mov
fdiv
aas
ins
pop
push
jp
xor
hlt
loop
cmp
ss
mov
inc
xor
sbb
int3
add
push
xlat
and
ret
and
cld
pusha
daa
inc
repnz
bswap
push
jae
add
and
sbb
ins
stos
or
cdq
nop
mov
repz
sbb
int
rcl
data16
sti
mov
nop
ins
dec
lods
dec
cmps
shl
pop
lea
das
inc
adc
dec
pop
movs
movs
push
mov
mov
xrelease
sahf
loope
std
sbb
xchg
ret
xchg
cmp
in
iret
jg
push
inc
ins
lea
fldenv
mov
aaa
addr16
sahf
push
dec
sub
lods
mov
loop
in
std
int
lods
pop
cmp
in
loope
daa
int3
sbb
js
xchg
out
daa
and
or
in
cli
imul
jg
jns
adc
nop
mov
cdq
stos
adc
daa
or
xchg
inc
arpl
icebp
mov
jne
cmp
test
in
jmp
test
jl
and
sub
dec
jmp
adc
ret
push
cmp
cli
cwde
dec
lahf
ficom
dec
in
pop
jo
je
cmp
(bad)
dec
(bad)
dec
jb
nop
push
push
adc
jp
cmp
ja
xchg
xor
xor
imul
mov
push
and
stos
push
dec
adc
dec
xchg
out
pop
movs
mov
clc
mov
enter
jnp
mov
int
jae
mov
loopne
(bad)
retf
pushf
jge
iret
lea
ins
inc
fwait
push
(bad)
shr
xor
inc
cmp
xchg
movs
enter
dec
aaa
jae
mov
push
cld
mov
mov
or
xchg
mov
mov
sar
scas
rcr
repnz
or
cmp
sub
fwait
into
ss
adc
mov
mov
out
push
enter
movs
xchg
mov
fwait
lahf
loope
dec
jbe
pushf
pop
loop
mov
cmp
pop
dec
mov
popa
pop
sbb
push
std
jl
out
jne
or
popf
stc
lods
push
out
mov
call
sbb
cld
and
fiadd
fcomp
sub
into
jmp
pop
add
sbb
rcr
jg
xor
cmp
mov
popa
(bad)
cmc
xlat
or
jp
dec
(bad)
in
(bad)
jg
ins
les
xchg
js
fs
push
pop
xchg
sub
push
aad
mov
std
pop
jo
push
lods
lea
imul
cmp
pop
cmp
fisttp
loope
xchg
mov
iret
popa
xlat
sbb
and
mov
ds
and
dec
add
or
or
loope
adc
std
movs
pop
mov
sbb
cmp
dec
(bad)
xlat
or
sbb
cmps
(bad)
mov
pusha
push
mov
shr
pop
hlt
mov
aas
xor
push
cmp
adc
loope
cdq
jp
es
ins
jb
inc
fmul
mov
add
sbb
lods
pushf
in
sub
lods
dec
ffreep
arpl
or
xchg
mul
xchg
test
cmp
add
das
popf
mov
out
xchg
xchg
push
push
cmp
scas
int3
mov
je
xor
fwait
(bad)
push
ja
jmp
inc
mov
int
jg
xor
xchg
add
iret
out
cwde
cld
ds
mov
retf
jnp
mov
xchg
push
clc
or
daa
mov
mov
sti
cmp
xchg
xor
inc
sahf
es
(bad)
mov
and
ja
sub
mov
imul
lea
mov
in
call
sbb
fs
add
popa
sbb
push
in
sub
dec
int
pop
mov
mov
dec
data16
xchg
jecxz
and
sbb
loop
push
sbb
(bad)
loop
mov
cmc
(bad)
mov
sahf
aad
(bad)
fcomp
mov
test
fcmovbe
xor
xlat
fldenv
shr
mov
lahf
ds
pop
xchg
out
aas
mov
js
stos
ja
mov
les
fstp
adc
shr
dec
jecxz
pop
mov
push
push
cli
popa
outs
xchg
das
adc
dec
jmp
fsub
xchg
xchg
call
mul
aas
mov
stos
push
in
mov
push
add
mov
shl
xchg
fnsave
adc
sub
sub
call
push
aad
shrd
mov
in
pop
xchg
push
sahf
rcl
mov
inc
leave
in
nop
cdq
xchg
hlt
or
popf
adc
push
repz
xor
lds
pop
push
cdq
cdq
lods
(bad)
mov
fiadd
mov
sbb
dec
cmc
bound
mov
int
mov
xor
cli
repz
movs
mov
adc
cmp
stos
add
and
rol
sub
lock
fcomp
push
(bad)
mov
aam
test
sub
mov
ins
mov
in
push
test
out
pop
add
mov
jbe
js
cmps
add
push
mov
hlt
or
cmps
mov
push
push
mov
pop
sbb
mov
mov
mov
or
test
jl
(bad)
jmp
loope
xchg
adc
add
shl
inc
cmp
sub
pop
addr16
fwait
inc
xor
test
mov
sub
xor
addr16
fild
jp
or
mov
dec
mov
or
and
movs
push
hlt
mov
cmp
sahf
adc
sub
push
inc
jecxz
hlt
aaa
aam
add
mov
scas
mov
test
aam
adc
push
cmps
imul
push
pop
je
jecxz
push
pop
cld
xor
mov
je
mov
mov
nop
mov
jp
fsubr
xor
sbb
xor
retf
cdq
cmp
js
mov
in
mov
inc
sbb
or
push
shr
and
xchg
fwait
dec
mov
cld
mov
mov
iret
push
adc
pop
fld
loope
mov
mov
fiadd
push
loop
xchg
gs
push
cmp
aam
sub
div
ret
cmp
pop
add
nop
dec
and
ds
jmp
xchg
popa
sti
inc
cmp
or
inc
loope
int3
xor
mov
pop
cmps
cs
sub
arpl
jl
mov
shl
push
mul
enter
fistp
cmp
out
pop
int3
xchg
xor
adc
jmp
ins
lods
add
pop
cld
ins
dec
outs
das
fwait
outs
mov
xchg
dec
adc
fidivr
test
add
mov
jmp
test
jnp
add
adc
mov
cdq
(bad)
shl
pop
xchg
bnd
test
fisttp
out
(bad)
out
inc
jmp
mov
popa
and
xchg
mov
jo
sbb
retf
sub
ficomp
cmp
out
popf
push
(bad)
lea
xor
(bad)
arpl
enter
cmp
dec
out
(bad)
jae
and
test
lods
mov
mov
cs
fdiv
loop
(bad)
test
jl
addr16
add
fsub
jno
test
jp
pop
aam
inc
jle
sub
fstp
xor
shl
adc
fisttp
cld
outs
(bad)
movs
push
fld
das
jne
das
lock
(bad)
repz
mov
adc
mov
rcr
sbb
fldenv
jmp
add
cmp
mov
mul
jmp
pop
jnp
test
dec
loop
and
nop
fstp
pop
and
mov
mov
add
mov
adc
cmp
dec
(bad)
ins
mov
cmc
and
dec
js
xchg
or
pop
dec
xor
les
xchg
test
cmps
sub
jnp
adc
(bad)
cmc
scas
stos
in
add
jg
cdq
and
or
add
inc
pop
mov
cwde
push
mov
test
inc
cmp
outs
jns
cs
dec
test
aam
aad
xor
sbb
ins
and
push
(bad)
call
pop
push
jp
xor
or
(bad)
fcomp
mov
sbb
dec
arpl
cmp
mov
shl
gs
ins
rcr
psubw
hlt
cwde
gs
popa
pop
pop
aam
xor
lahf
pop
sbb
cli
rcr
psllq
xchg
test
les
sub
lods
and
sub
xor
cwde
test
mov
dec
out
xchg
fadd
dec
push
inc
inc
fsub
lock
dec
enter
imul
adc
or
or
jnp
mov
(bad)
mov
jmp
mov
fsubrp
pop
movs
push
sbb
imul
ins
mov
ss
xchg
out
pop
mov
jecxz
add
fbstp
scas
inc
or
cmp
mov
sub
jge
fbld
ja
pop
mov
arpl
dec
xchg
pushf
mov
iret
test
movs
or
bound
cmp
push
rcr
jb
jmp
rcl
retf
add
fwait
or
icebp
pmuludq
cli
(bad)
jmp
pop
addr16
adc
outs
(bad)
ds
lds
arpl
ins
push
ficom
xor
or
adc
cmps
lea
sahf
in
mov
sub
mov
xchg
dec
jg
popa
xchg
out
adc
cdq
mov
mov
and
popf
mov
jo
dec
inc
sbb
in
outs
mov
retf
cmp
(bad)
or
xchg
push
fcom
je
cmps
xchg
dec
cli
cmp
in
sub
jl
push
cld
sti
or
das
fld
outs
mov
mov
mov
mov
(bad)
mov
mov
fcomip
std
ins
jecxz
inc
imul
xchg
sub
scas
pop
out
jne
mov
add
push
push
inc
push
call
xchg
addr16
add
mov
std
add
sub
xchg
test
xchg
mov
dec
sub
cdq
sti
dec
xor
(bad)
(bad)
or
mov
pop
enter
adc
mov
bound
and
jno
and
cmps
xor
adc
out
push
mov
pop
xchg
xor
jp
push
adc
ud1
jp
rol
imul
fnstsw
sub
lods
ja
or
xchg
or
loopne
jae
adc
xor
je
mov
fs
dec
lods
cmp
out
pop
xchg
test
push
jge
rcr
xor
add
scas
mov
in
jg
nop
les
or
pop
cmp
in
push
adc
pop
cmp
xchg
jbe
add
repz
pop
and
sbb
ret
or
pop
lahf
and
cmps
fsub
and
in
aad
mov
lods
dec
icebp
(bad)
in
shr
mov
pop
ret
movs
mov
sub
mov
call
add
sahf
dec
push
not
or
into
pop
or
push
pop
stc
loop
push
jnp
mov
adc
cmp
mov
ret
ret
in
adc
ins
mov
jno
xchg
scas
test
cmps
mov
in
cmps
lea
xchg
xchg
pop
sahf
push
cmp
cdq
(bad)
jmp
adc
jns
sub
xlat
mov
dec
xchg
mov
adc
push
ds
inc
ror
add
pop
inc
pop
mov
jns
dec
inc
inc
out
sub
mov
rol
add
jle
sbb
mov
test
or
and
(bad)
sub
adc
xchg
jg
jle
stos
mov
and
mov
lea
mov
sbb
sub
add
mov
jnp
mov
icebp
in
push
lds
dec
and
mov
xchg
pop
cmc
mov
(bad)
imul
cdq
shl
inc
fmulp
and
aam
je
mov
inc
sub
or
jne
lea
hlt
test
cmp
xchg
fcmovnbe
popf
iret
les
adc
in
or
cmp
js
and
popa
cmp
xor
mov
cs
pop
stos
arpl
adc
jg
(bad)
mov
cld
jbe
div
scas
test
fild
lock
mov
xchg
xor
xor
pop
lahf
popa
push
popf
out
je
bsf
and
or
mov
sbb
pop
sub
mov
jl
arpl
push
leave
adc
cmc
rcr
xchg
sbb
inc
cmp
sti
shl
mov
or
call
mov
sub
pop
dec
sub
mov
lds
pop
fistp
jmp
fisttp
sbb
pop
lods
fst
add
scas
popf
adc
in
scas
mov
(bad)
pop
cdq
mov
jecxz
xchg
mov
pop
repnz
push
inc
call
inc
pop
jnp
movs
imul
hlt
in
jecxz
add
aaa
cmc
mov
adc
js
xchg
push
inc
jp
imul
add
jle
scas
fmul
mov
sub
mov
repz
xchg
iret
dec
daa
sub
cld
push
xchg
int
inc
xchg
dec
mov
sub
pop
jae
adc
cmp
(bad)
sbb
jno
jnp
data16
cli
shl
or
test
es
loopne
sbb
lock
in
iret
cmp
sbb
jmp
push
cmps
loopne
mov
inc
fwait
and
jns
(bad)
adc
push
xchg
test
add
aad
mov
fstp
jg
xchg
mov
dec
out
mov
and
mov
test
xchg
pop
jp
jne
jl
cmp
jae
sbb
mov
xor
into
sahf
adc
int3
cmps
adc
mov
popa
bound
std
cdq
jg
aaa
xchg
jle
(bad)
jae
aaa
sbb
aam
lds
(bad)
xor
sub
(bad)
inc
cmp
lahf
dec
iret
adc
int
es
pop
push
xchg
inc
pop
ret
test
scas
cmc
pop
clc
adc
lods
mov
dec
lods
inc
sbb
adc
pop
enter
inc
adc
xchg
jmp
add
or
(bad)
into
stc
bound
loope
emms
xchg
mov
mov
stos
cmp
mov
(bad)
test
inc
sub
ja
mov
or
shl
cdq
lds
xchg
sbb
in
enter
or
pop
inc
mov
call
ins
stos
inc
jg
mov
jne
adc
mov
mov
xchg
loop
jb
sahf
movs
imul
jge
ja
imul
cmc
push
jl
sbb
icebp
cmps
mov
pop
test
fwait
clc
rcl
and
fs
mov
xchg
mov
repz
hlt
ins
in
dec
add
fmul
push
adc
push
gs
rol
jg
mov
inc
mov
jbe
pop
popf
loopne
adc
add
leave
jmp
jmp
imul
add
loop
daa
dec
retf
sar
sub
xor
mov
xor
(bad)
cli
loop
dec
xlat
aaa
iret
xor
jg
cmp
cmp
arpl
pop
in
inc
psubusb
repnz
in
ret
mov
test
pop
jae
sbb
pop
in
js
mov
fsubrp
xchg
xor
pop
mov
mov
adc
(bad)
adc
inc
call
lods
mov
mov
ss
jne
ja
pop
and
and
sbb
sahf
addr16
clc
sbb
jb
jle
jae
sbb
jo
adc
dec
dec
out
xor
jp
jo
hlt
inc
mul
dec
daa
lds
std
std
mov
jbe
iret
test
xchg
shl
mov
div
cli
dec
xchg
xor
inc
call
cli
dec
ins
(bad)
shr
sar
cmps
out
pusha
ss
loopne
aaa
stos
data16
fadd
mov
push
dec
mov
mov
loop
(bad)
push
scas
dec
add
out
adc
sahf
shr
inc
loopne
dec
xor
xchg
adc
xor
jecxz
repnz
loopne
repz
mov
ins
xor
push
mov
xchg
rep
inc
push
push
mov
pop
pop
test
jmp
popf
add
jb
shr
and
out
in
ret
lods
outs
inc
cmps
iret
inc
push
int
ins
add
xor
dec
or
stos
mov
in
bound
movs
adc
jnp
outs
movs
pushf
sar
outs
mov
push
rol
neg
fild
inc
je
in
cwde
or
clc
inc
fild
mov
les
test
add
xchg
xchg
inc
mov
fld
lahf
arpl
inc
inc
rol
retf
popa
mov
jmp
mov
mov
cmp
adc
adc
jmp
shr
rcr
inc
sub
dec
pushf
dec
rcr
jae
ret
sbb
jmp
retf
fisub
xor
test
test
push
mov
jne
popf
add
fst
jb
inc
in
xchg
cmp
fwait
lds
gs
push
push
in
pop
add
cmp
cli
and
xor
push
mov
cli
fnstcw
sub
inc
xchg
dec
fisub
dec
push
mov
scas
je
jb
fsub
or
jno
add
(bad)
int3
inc
xchg
pop
psubw
mov
push
inc
daa
push
lods
jnp
pop
or
mov
sbb
shl
inc
lock
sub
push
into
pop
cmp
pop
ins
aaa
aas
xchg
or
retf
test
jbe
push
push
cmp
scas
sbb
adc
pop
stc
cmp
mov
inc
mov
stos
jae
mov
and
and
fst
inc
movs
je
push
repz
cld
push
xchg
push
mov
mov
dec
(bad)
cli
in
fdivp
out
inc
push
sub
stos
rol
dec
cdq
addr16
ins
jle
imul
scas
into
iret
lea
cmp
pushf
and
add
das
cs
push
outs
scas
or
call
cmp
xchg
(bad)
into
int3
push
or
dec
ja
sbb
cmp
jmp
sbb
xchg
inc
xchg
hlt
push
or
sub
das
mov
out
cdq
push
shl
fcomp
ret
push
sbb
push
sbb
cmp
sub
dec
push
mov
mov
sbb
es
mov
sbb
or
out
fcom
bound
pop
mov
aaa
gs
dec
icebp
or
fsubr
jns
int3
push
add
enter
push
mov
add
jne
pop
pop
arpl
adc
cmp
mul
add
xor
xor
ins
sub
fldenv
rcr
adc
adc
imul
xchg
dec
sbb
je
xchg
mov
aas
sub
test
dec
dec
xchg
into
enter
or
mov
push
aas
cwde
out
je
xchg
or
xchg
sub
mov
retf
mov
dec
jb
adc
ffree
push
push
icebp
jbe
add
push
call
jle
mov
adc
inc
outs
adc
xor
mov
and
cmp
mov
push
sub
lahf
fwait
xor
xor
adc
cmp
pop
movs
xchg
fdiv
pop
into
test
bound
and
add
mov
rol
adc
or
cwde
(bad)
call
mov
movs
sub
mov
or
lock
sbb
sbb
lahf
ja
and
xchg
adc
bound
jmp
sub
mov
mov
jl
pusha
jge
push
push
sahf
sub
ds
in
jno
pop
test
cmp
cmp
cmp
xchg
(bad)
xchg
pop
mov
dec
sbb
bound
push
jns
test
retf
push
xor
or
jns
loope
or
mov
pop
or
shl
push
push
pop
inc
lea
neg
sti
and
cwde
mov
cmp
inc
inc
sbb
sub
bound
pop
mov
mov
sbb
push
sbb
sub
mov
cdq
dec
outs
xchg
mov
les
sbb
imul
test
xor
mov
hlt
fild
jl
adc
add
mov
fisub
scas
popa
dec
inc
outs
push
mov
ds
add
scas
xchg
xchg
in
adc
and
inc
(bad)
pushf
arpl
in
pushw
mov
sbb
cwde
push
cmc
xchg
inc
xor
xchg
push
push
or
pop
or
mov
icebp
daa
pop
pop
inc
and
loope
mov
je
and
mov
push
sbb
push
popa
add
push
in
in
sbb
add
ds
scas
or
stos
mov
dec
adc
pushf
jns
inc
enter
mov
out
inc
pop
and
jne
fmul
mov
es
outs
pop
movs
movs
(bad)
jg
shl
xchg
pushf
dec
push
ja
jle
add
test
pop
lea
aaa
pop
int
xchg
add
addr16
sub
aaa
xchg
outs
lds
test
jmp
pop
add
and
fsubrp
cmps
call
xchg
out
jl
stos
cdq
and
adc
in
dec
push
ror
jecxz
mov
sbb
addr16
xor
and
jge
(bad)
fisttp
inc
xor
les
mov
dec
sub
cmc
sub
je
inc
lds
push
test
ss
dec
and
ror
and
(bad)
repnz
das
je
dec
sbb
mov
cmp
lods
retf
(bad)
sar
pop
call
mov
fcom
adc
pop
stos
mov
add
cdq
js
adc
shl
shl
push
sbb
sbb
ror
mov
jno
dec
sti
add
dec
push
loope
jno
(bad)
jb
loope
test
fidivr
push
xor
scas
jp
pop
call
jne
jl
and
cdq
mov
fidiv
xchg
push
ja
jb
mov
jp
leave
movs
or
push
mov
imul
das
mov
and
push
xor
arpl
mov
mov
stc
jmp
adc
cmp
mov
adc
movs
jae
bnd
xchg
pop
xchg
sub
xchg
dec
jp
sbb
fcmovne
pop
arpl
rcr
jmp
jmp
test
icebp
cld
fs
(bad)
and
cmps
movs
sub
imul
add
(bad)
in
sbb
jne
les
fdiv
pop
xor
fisttp
mov
test
mov
loopne
sbb
movs
scas
(bad)
stc
sub
int3
nop
or
mov
shl
xchg
sbb
cmp
or
ror
cmp
or
int3
jge
or
add
loope
sbb
mov
push
jns
mov
jbe
mov
adc
call
rcr
pop
dec
push
sbb
clc
adc
or
inc
and
mov
xlat
js
mov
jg
mov
add
retf
xor
outs
imul
imul
pop
ss
push
mov
leave
lods
adc
rcr
jmp
and
into
add
lods
mov
loop
cwde
xlat
cmc
jge
jb
cmp
push
sti
fistp
nop
cmps
sbb
and
arpl
inc
pop
inc
loopne
imul
mov
or
aas
popa
stc
xchg
xor
loopne
fistp
xlat
pop
shl
push
sbb
xchg
pop
frstor
ins
dec
mov
xlat
xchg
jle
ffree
mov
mov
mov
int3
mov
loope
ficom
jne
mov
sbb
fimul
stos
or
mov
mov
test
or
adc
stc
aas
(bad)
xlat
mov
mov
dec
jecxz
ror
pop
mov
push
stos
scas
aam
fs
cmp
xchg
leave
sbb
sbb
bound
add
sbb
scas
mov
shr
xchg
bound
sbb
in
mov
jle
adc
xchg
aad
dec
leave
adc
mov
adc
pop
outs
mov
imul
jns
sti
add
mov
sub
push
adc
jp
cmc
mov
sbb
inc
ins
mov
pushf
and
nop
cdq
enter
jns
jmp
cmp
cli
test
mov
cmps
jmp
inc
xchg
stos
(bad)
repnz
cmc
adc
movs
adc
mov
adc
push
(bad)
leave
repz
js
rcl
scas
jae
das
lahf
mov
cmps
(bad)
pop
das
mov
(bad)
adc
xchg
dec
daa
js
fs
push
push
ins
and
dec
mov
out
or
in
or
pushf
sar
jg
add
js
mov
adc
and
lods
or
xchg
shrd
scas
jmp
xor
adc
xchg
pop
movs
daa
mov
xor
cmps
test
shl
call
(bad)
push
mov
inc
bound
loop
mov
push
ret
arpl
gs
fdivrp
arpl
pop
jmp
call
loopne
repz
je
xor
sub
sahf
sub
cmp
xchg
add
push
(bad)
jmp
loopne
fld
jecxz
cld
movs
sbb
or
pop
xor
idiv
das
cmp
xchg
push
pop
mul
jne
imul
push
mov
mov
jae
jmp
dec
into
sub
jne
int
scas
jl
sahf
jmp
push
and
loope
aaa
xchg
jns
jge
in
in
leave
pop
repnz
jle
dec
xchg
cmp
pop
inc
fmul
hlt
cmp
xchg
xchg
and
iret
inc
outs
into
add
outs
sbb
imul
nop
ins
retf
(bad)
cmps
shl
mov
mov
div
les
cwde
bound
popf
in
push
lods
inc
jle
add
ror
mov
into
mov
xchg
mov
jmp
in
setb
movs
cli
lock
mov
test
aaa
iret
xor
jns
aad
int3
ins
xchg
sahf
and
pop
lods
xor
movs
push
mov
(bad)
jecxz
dec
ins
(bad)
mov
jmp
xchg
cmps
push
fstp
adc
gs
sbb
xor
cmp
sbb
inc
(bad)
clc
xchg
fidivr
xchg
sub
adc
push
adc
rcr
and
or
mov
sub
daa
call
out
sbb
int
dec
(bad)
(bad)
adc
cmp
imul
in
or
jp
fisub
daa
inc
push
mov
mov
fld
sub
inc
cmp
jno
jo
mov
mov
pop
outs
xor
imul
cmc
sbb
sub
jno
jle
dec
pop
mov
xchg
mov
ret
pandn
mov
sub
js
inc
mov
outs
mov
or
popf
pop
xchg
jge
sbb
(bad)
call
dec
add
xor
or
adc
adc
les
loope
dec
dec
adc
adc
mov
jns
pop
cmp
xchg
inc
xor
lock
push
jmp
test
jl
imul
in
outs
js
enter
push
jns
inc
mov
xor
out
shl
xchg
shl
mov
(bad)
shl
inc
jp
pusha
cwde
dec
push
repnz
iret
aad
mov
sbb
adc
adc
mov
gs
mov
mov
repz
adc
cmp
xchg
jno
xchg
mov
cmp
push
pop
pop
enter
fcmovnbe
dec
push
dec
lock
scas
push
nop
pop
stc
clc
cmp
sub
xchg
inc
jl
das
mov
adc
sub
(bad)
push
sbb
call
pop
fwait
push
imul
(bad)
mov
add
jge
rcl
dec
stc
mov
addr16
loope
sar
pushf
cmp
mov
imul
dec
xchg
mov
(bad)
jl
stos
jmp
test
mov
mov
dec
xor
test
mov
stc
mov
pop
sub
or
sar
mov
fwait
inc
xor
sbb
shr
fldenv
add
jecxz
daa
push
cmp
xchg
sub
ins
or
hlt
gs
lds
xor
dec
(bad)
stc
xchg
mov
mov
rcl
mov
xchg
sub
int
ds
jne
sub
test
dec
movs
xor
ss
mov
jae
push
lea
sbb
(bad)
call
test
(bad)
out
inc
cmps
sbb
dec
jecxz
out
cmp
out
vmwrite
cmp
popf
gs
leave
xor
out
push
sub
cmp
mov
mov
pop
sar
mov
mov
into
sub
sbb
jne
jp
leave
ret
fst
cli
inc
daa
adc
dec
out
aad
hlt
stos
jns
and
xchg
add
adc
add
sub
cmp
jmp
push
push
push
sbb
mov
sub
jb
loopne
es
jno
in
or
add
sbb
sbb
inc
ss
jmp
popf
cmp
scas
aaa
movs
sub
shr
adc
inc
adc
inc
in
gs
add
fisub
fnstenv
scas
es
or
stos
and
sbb
xor
in
pushf
js
xor
out
push
mov
(bad)
jg
call
jb
inc
push
jae
fcmovu
xchg
pop
scas
das
aad
dec
sub
fild
inc
inc
fcom
dec
daa
clc
mov
xor
inc
lods
or
in
into
cmp
(bad)
jp
outs
and
rol
or
add
fmul
dec
cdq
xor
cmp
addr16
ret
mov
dec
pop
retf
and
sbb
ret
dec
dec
inc
pop
pop
cmc
scas
popf
dec
loope
xor
jle
sub
adc
and
cmp
cmp
push
inc
aam
add
or
sub
sbb
fisubr
jne
cmp
fst
mov
push
fst
inc
loop
int3
cmp
mov
jb
inc
push
(bad)
xchg
and
in
pop
sub
xchg
cli
inc
mov
sar
jle
mov
scas
pop
inc
xor
loope
and
dec
mov
loope
sub
mov
xor
inc
or
mov
pop
lock
cs
fs
test
ins
jae
mov
push
inc
call
ret
bound
push
sbb
dec
adc
fsub
mul
mov
hlt
jae
arpl
jge
fisubr
int
jge
ret
retf
pop
shl
xor
xchg
inc
outs
xchg
jnp
repnz
into
inc
and
dec
xor
rol
mov
xchg
mov
pop
inc
xchg
pusha
sbb
sub
arpl
fnstsw
xor
iret
call
add
sbb
out
add
int3
add
fwait
dec
xor
mov
pop
pop
dec
or
sub
and
push
adc
inc
sbb
xchg
les
inc
dec
stos
sar
stos
dec
into
out
pop
and
dec
xchg
movs
inc
and
add
neg
jnp
xchg
push
pop
or
jge
xor
loopne
inc
dec
jns
pop
mov
lds
data16
cmp
outs
mov
js
inc
mov
push
cmp
imul
stos
scas
xchg
push
push
push
inc
cmp
inc
and
cli
xchg
das
repz
pop
inc
adc
push
clc
mov
jl
iret
call
lock
test
inc
popf
jnp
sub
or
call
dec
pop
stos
cmp
dec
xchg
leave
add
movs
sub
cmp
pop
loope
mov
enter
cdq
int3
push
aam
xchg
and
xor
xacquire
mov
out
push
fcomp
inc
push
pop
clc
stos
ins
popa
and
pop
fs
jbe
retf
pop
xchg
and
adc
loope
push
sti
inc
sub
sub
rcr
std
cmp
loop
(bad)
mov
fst
mov
mov
in
mov
mov
stc
pop
stos
shl
xor
into
fxch
popa
es
dec
mov
mov
mov
fsubr
xchg
adc
and
mov
xchg
sub
cmp
loop
push
les
jne
push
sub
cmp
sbb
lods
mov
ins
lock
ds
loop
in
(bad)
or
test
fwait
xor
cmps
not
es
sti
jne
add
jl
sbb
stos
neg
push
xchg
pusha
(bad)
out
aas
or
push
inc
sub
mov
imul
jne
xlat
inc
pop
stos
jo
nop
inc
and
daa
imul
xchg
push
lock
call
popf
mov
sti
mov
xor
dec
in
jmp
push
or
rcr
mov
mov
or
push
cmp
mov
cmp
xor
push
mov
test
cld
push
add
loope
adc
pop
clc
push
dec
push
jp
es
enter
xor
mov
popf
and
cmp
jle
jmp
jmp
adc
stos
test
bound
xor
or
jbe
xchg
call
cmc
sbb
cmp
lahf
jl
mov
test
fisttp
sahf
or
dec
xor
popf
stos
cdq
dec
leave
leave
daa
cmp
jae
ins
cmp
push
repz
xchg
out
push
adc
ret
push
jns
aad
adc
pop
and
stos
mov
sub
jne
int
jb
jbe
in
ds
leave
fdivr
fucom
add
lods
aad
jb
sub
addr16
adc
sahf
and
repz
inc
or
stos
outs
ins
inc
sbb
data16
cmp
jnp
push
fidivr
test
jo
ja
pop
lds
in
jo
adc
(bad)
xchg
dec
in
sahf
ja
cmp
aad
push
stos
push
rcl
mov
or
inc
not
loopne
mov
cs
sub
push
push
pop
nop
(bad)
call
xchg
sbb
out
sahf
leave
mov
addr16
pusha
pop
jbe
push
dec
shl
out
add
cmc
fidiv
add
mov
pushf
inc
sbb
cld
(bad)
mov
xor
ret
sar
popf
sub
inc
cmp
jmp
mov
adc
adc
nop
push
enter
mov
jmp
cli
xchg
and
daa
in
inc
jno
stc
int
dec
inc
inc
lods
sbb
pop
fisubr
aad
bound
rcl
jno
and
xor
movs
sbb
sbb
adc
xchg
ins
mov
add
dec
pxor
(bad)
aas
pop
cmp
mov
mov
rcr
adc
mov
and
(bad)
fidivr
lods
(bad)
retf
xchg
push
sub
sub
add
sbb
test
addr16
lods
mov
and
jae
out
jmp
pop
imul
jo
cld
pop
icebp
cmp
add
jg
xchg
lods
aam
ja
stc
and
jne
jbe
pop
out
or
popf
xchg
fs
inc
jne
mov
push
dec
jae
retf
dec
adc
and
mov
xor
es
jae
int3
inc
xor
pop
mov
pop
add
sub
mov
fldcw
retf
mov
repnz
dec
push
dec
in
push
popf
xchg
jg
ja
ds
out
loope
out
cmp
mov
push
jg
sub
fsubrp
jnp
jns
syscall
sti
push
add
ja
xchg
cmp
pop
call
adc
push
mov
mov
xor
jg
fstp
mov
adc
push
mov
xor
push
in
bound
or
pop
push
mov
(bad)
pop
xchg
adc
js
cld
jg
dec
retf
(bad)
bound
sahf
add
xchg
push
lea
mov
lock
xchg
pop
adc
(bad)
stos
mov
push
pop
sbb
mov
push
mov
pop
outs
xor
je
and
stos
outs
movs
jne
int
retf
mov
fdivr
cli
cmp
out
mov
pop
stos
sub
shr
mov
std
mov
sahf
add
outs
pusha
stc
jb
xor
bound
outs
sbb
mov
outs
mov
xor
ret
mov
mov
mov
mov
pop
cmp
rcr
shr
push
dec
cmp
mov
mov
push
int3
and
inc
pop
or
pop
shl
test
sbb
or
push
sub
mov
and
mov
movs
lds
jl
loop
push
inc
ror
sub
test
adc
imul
push
xchg
pop
imul
xchg
mov
fst
mov
mov
push
jmp
mul
out
jae
jbe
mov
iret
lahf
or
test
sub
inc
xchg
outs
cdq
sub
push
aaa
xor
imul
inc
xor
(bad)
mov
in
cmp
es
dec
sub
(bad)
push
xchg
into
inc
arpl
ror
and
sub
and
iret
ins
in
std
das
jg
scas
arpl
loop
popw
ja
add
or
imul
cmp
sub
mov
mov
pop
test
mov
rcl
cmp
push
fcom
xor
inc
jge
arpl
stos
loopne
retf
das
push
cs
sub
mov
out
xor
(bad)
push
cmp
loop
xchg
jns
cmp
sti
cld
mov
jg
lods
push
fldcw
mov
or
fwait
push
jmp
push
popa
xchg
xor
fisttp
sar
cmps
fimul
xchg
sbb
std
and
inc
adc
inc
dec
cli
outs
pop
(bad)
outs
data16
mov
jle
inc
push
cdq
movs
fistp
push
mov
leave
xchg
mov
into
int
pop
repz
ins
bound
xlat
lock
push
xchg
sbb
mov
(bad)
fist
aaa
(bad)
add
inc
jo
paddusw
jmp
xchg
pop
or
retf
scas
inc
xchg
mov
scas
jns
sti
fst
push
stos
sbb
push
(bad)
sbb
cld
loop
fnstenv
adc
cmp
(bad)
adc
ds
push
pop
mov
movs
cli
into
lods
hlt
cdq
push
xchg
f2xm1
cdq
pushf
jb
jl
sub
call
mov
sbb
movs
xor
daa
loope
sahf
inc
out
mov
outs
(bad)
mov
fmul
mov
and
jo
loop
lods
movs
or
fimul
pop
push
pop
stos
jg
jb
into
adc
arpl
mov
(bad)
xchg
xchg
and
les
and
popa
pop
jae
(bad)
iret
sub
cs
push
xchg
div
mov
ficomp
sbb
jno
mov
jge
ins
mov
es
outs
and
xchg
jmp
mov
push
add
inc
repz
xlat
test
loop
mov
jmp
sbb
mov
or
lock
lea
xbegin
jb
popa
xchg
rcl
fist
jne
lods
inc
popa
mov
ffree
or
ficom
sbb
shr
fnstenv
leave
mov
movs
and
dec
push
cld
cld
popa
in
jl
xchg
xchg
arpl
jmp
loope
adc
pop
mov
jmp
pop
xchg
loope
cld
dec
cmp
xchg
scas
sbb
cmc
jae
ret
jae
cmp
push
mov
popf
test
xchg
call
in
pop
cld
fisttp
pop
imul
cdq
jo
mov
inc
mov
fstp
ja
test
js
mov
mov
jg
aaa
imul
out
sbb
or
mul
jmp
in
movhlps
xlat
dec
pop
inc
out
arpl
adc
adc
jmp
lds
je
lods
xchg
data16
mov
cmc
aas
arpl
dec
ror
push
arpl
inc
int
dec
mov
mov
not
stc
fild
sub
or
cmp
jl
in
nop
dec
repnz
rcr
int
ins
popf
inc
sbb
xor
sbb
inc
jmp
inc
jne
sbb
(bad)
test
mov
add
inc
js
gs
dec
jp
push
mov
inc
imul
add
mov
mov
and
ror
mov
stos
mov
sar
dec
mov
push
xor
bnd
adc
add
xchg
imul
sbb
retf
mov
sub
xor
add
inc
adc
data16
out
ja
sbb
mov
and
test
or
push
mov
inc
das
das
(bad)
and
test
(bad)
jns
popa
jp
movs
das
mov
adc
push
dec
mov
dec
shl
ror
repnz
jnp
imul
cmp
inc
movs
(bad)
mov
int3
and
inc
inc
dec
push
daa
sbb
jle
into
std
iret
into
lahf
paddusb
outs
fimul
jg
repz
jne
mov
(bad)
jg
aad
cmps
jmp
add
pop
xchg
dec
xchg
call
ret
jmp
mov
mov
sbb
and
ins
pushf
stos
lods
adc
adc
and
push
mov
dec
sbb
stos
mov
jae
mov
imul
push
pop
lea
push
mov
or
push
xchg
addr16
iret
mov
fs
jnp
and
repz
je
imul
lock
fsubr
push
ror
rcr
jge
or
pop
mov
jg
sti
xchg
test
xor
les
add
adc
inc
dec
cmp
repz
das
fst
popf
jo
repz
or
ret
push
fsub
gs
jb
pop
xor
push
movs
int
pop
mov
test
pusha
cmp
cmp
pop
jne
jmp
xchg
mov
cmp
inc
aad
ret
ja
ret
adc
nop
add
add
dec
inc
cmc
cmps
adc
in
repnz
clc
fs
xchg
sbb
pop
int3
xor
ret
sub
sbb
mov
dec
mov
xchg
push
push
test
pushf
xlat
jbe
cdq
movs
stc
inc
adc
cli
dec
ds
adc
jbe
popa
push
or
sahf
int
fnsave
or
add
pop
push
or
add
retf
mov
xor
outs
ds
in
jl
and
pop
jge
rcr
fmul
add
pop
cmc
scas
xor
pop
cmp
lods
into
jns
aas
xchg
mov
popa
cmp
mov
outs
sbb
stc
pop
stos
in
sub
mov
xor
push
jge
hlt
xchg
push
jl
fcomp
out
inc
add
sbb
lds
into
lds
pop
sbb
xor
dec
push
loopne
out
mov
push
fs
cmps
jnp
pop
lods
and
popf
aaa
jb
sub
mov
movs
push
test
les
dec
fiadd
jns
mov
jl
jp
call
and
push
sub
mov
pop
sub
aas
dec
sbb
xchg
aaa
pop
push
add
clc
xor
mov
repnz
hlt
ds
push
add
pop
fcomp
in
inc
aas
push
(bad)
xlat
aad
inc
loop
idiv
pop
mov
aad
pop
cmp
push
mov
out
mov
addr16
int3
pop
cmp
jne
mov
test
fidivr
stos
or
mov
clc
lds
pop
mov
ins
ja
pop
js
iret
mov
stos
push
dec
outs
sti
stc
fisubr
push
sti
fistp
imul
scas
jecxz
inc
xor
out
aam
fisttp
mov
or
jle
xor
pop
ss
or
movs
ins
mov
retf
mov
mov
inc
nop
inc
jns
cmps
mul
in
data16
push
cdq
push
out
xchg
inc
out
cmps
push
push
inc
loopne
pop
xor
jle
dec
sti
(bad)
fdiv
push
mov
dec
loopne
js
not
cmps
out
or
out
dec
imul
jo
add
add
test
sub
ins
mov
mov
sub
or
inc
popf
dec
xor
inc
push
mov
call
or
fsubr
add
inc
jmp
gs
daa
jbe
cmc
jge
or
cmps
inc
sar
cs
pop
stos
cld
pop
outs
das
cli
mov
inc
fcomp
jns
cmp
add
dec
repnz
cmp
inc
push
sub
xchg
mov
or
retf
dec
jnp
int3
repz
enter
mov
xor
jg
retf
hlt
cs
out
xchg
or
push
mov
addr16
daa
add
mov
mov
adc
mov
bound
jb
xchg
pop
cmp
inc
out
sub
push
mov
cmp
mov
mov
ret
jmp
mov
mov
pop
movs
stc
lods
movs
inc
les
sbb
mov
call
mov
lock
push
xchg
sbb
aad
xchg
mov
iret
sbb
in
dec
int
hlt
push
sbb
or
into
xor
xor
jmp
mov
es
popa
(bad)
enter
jmp
sbb
jno
xchg
data16
mov
mov
jbe
push
mov
lock
lock
mov
inc
(bad)
ss
in
inc
and
sub
xor
mov
mov
mov
stos
aam
sbb
mov
imul
into
lods
and
ins
xlat
pop
(bad)
push
cld
dec
add
sub
add
inc
fnstsw
pop
inc
mov
js
shr
jl
push
inc
or
in
mov
imul
ins
test
fdiv
in
ss
(bad)
(bad)
inc
in
clc
xchg
in
adc
jno
mov
xchg
xchg
mov
movs
pop
(bad)
test
jmp
and
ret
xchg
xor
lods
dec
test
or
sub
retf
rcr
lock
mov
das
aaa
ds
pop
cmp
stc
icebp
jne
mov
inc
fwait
xor
popf
mov
not
mov
das
xchg
xor
mov
xchg
test
xor
adc
mov
mov
pop
clc
into
xchg
fisubr
cli
mov
fs
ret
in
dec
adc
retf
leave
lea
or
(bad)
in
retf
fwait
in
inc
cwde
mov
dec
push
jo
mov
mov
mov
shl
push
or
repz
imul
movs
xlat
mov
jae
cmps
push
mov
xchg
mov
mov
dec
lods
inc
add
jo
cmp
dec
mov
retf
inc
push
mov
cmp
push
(bad)
aam
(bad)
movs
pushf
jbe
pop
sbb
xor
jecxz
add
jae
mov
pop
mov
out
sub
add
adc
push
mov
or
pop
in
sub
mov
xchg
pop
pop
xor
pop
retf
lods
jg
retf
jne
outs
mov
cmp
xor
rcl
pop
dec
mov
mov
xchg
inc
and
fwait
mov
mov
iret
test
outs
dec
mov
fst
push
xor
enter
imul
or
xchg
push
inc
push
gs
fwait
out
rcl
retf
int
icebp
mov
push
add
in
data16
inc
in
push
js
scas
out
aam
jno
cmc
pop
xchg
hlt
aad
ret
inc
mov
call
leave
xor
xor
mov
ffreep
lods
mov
inc
cmc
repnz
in
in
xchg
(bad)
mov
cmp
rcl
test
mov
scas
jmp
xor
xor
(bad)
jne
jge
loope
and
shr
xchg
neg
or
mov
pop
jae
cli
adc
sbb
mov
mov
or
mov
xor
cmp
movs
lds
enter
stos
ficom
das
leave
arpl
and
mov
sub
ficom
cmps
jae
or
icebp
add
rcl
pushf
repnz
xchg
pop
int
test
gs
and
jno
test
or
pop
jno
push
dec
test
or
inc
dec
in
test
(bad)
mov
inc
in
sub
stos
jge
ds
lods
cs
sahf
push
sar
bound
inc
mov
repz
mov
adc
push
(bad)
jmp
and
mov
xchg
cmp
mov
ins
(bad)
jl
cmc
push
pop
mov
call
sbb
mov
mov
movs
jo
push
shl
add
sub
out
fsub
xchg
jns
mov
pusha
out
sar
and
pop
(bad)
loope
xchg
and
dec
jp
shl
fsub
or
retf
data16
retf
inc
call
inc
pop
dec
retf
iret
xor
outs
into
popf
add
push
or
adc
movs
ret
test
icebp
mov
fisub
dec
lods
jle
fs
in
imul
enter
xor
add
lods
or
ret
mov
add
sbb
in
and
jbe
dec
cmc
std
fchs
fldcw
mov
iret
mov
xor
xchg
ins
jo
push
call
adc
jb
dec
lods
test
lods
sub
arpl
fsub
mov
and
iret
jns
neg
cdq
test
jnp
push
pop
jecxz
ret
cmps
les
xchg
pushf
push
aad
jnp
xchg
and
ins
push
jmp
outs
xor
cmp
fnstenv
push
adc
ss
std
jns
sbb
call
xchg
pop
mov
add
adc
fldl2t
outs
xor
mov
push
dec
and
sti
(bad)
inc
movs
out
mov
jmp
out
lods
lock
idiv
push
pop
and
sbb
sub
jns
inc
jp
mov
add
test
inc
js
mov
mov
rol
scas
scas
(bad)
fistp
cs
push
cmps
pop
inc
loopne
jle
dec
iret
fsubrp
pop
out
or
xor
mov
inc
imul
fcom
mov
sahf
pushf
mov
cwde
push
sbb
and
cmps
mov
loope
aad
mov
push
loope
or
(bad)
and
test
pop
call
inc
xchg
mov
repz
mov
xor
mov
mov
(bad)
push
pop
iret
sahf
popf
cli
add
popa
fisubr
gs
leave
mov
sub
call
mov
aaa
mov
push
xchg
xor
lds
and
mov
push
js
cmps
mov
xor
out
push
in
pop
jo
inc
mov
stos
mov
sub
lods
(bad)
add
push
imul
dec
popf
je
cmp
add
add
mov
push
addr16
cmc
retf
rcr
clc
jnp
int
xor
xchg
sti
into
int
push
and
cdq
mov
xor
inc
xchg
fimul
mov
fdiv
adc
ins
pop
iret
mov
cli
fsubr
xchg
mov
retf
push
or
jmp
jno
sub
or
pop
cli
int
scas
and
outs
adc
add
int
sbb
ror
xor
out
push
jne
inc
stos
inc
dec
xchg
test
and
out
ins
icebp
fisttp
inc
xchg
ret
or
aas
lea
cmp
retf
std
sbb
repz
out
call
fstp
push
mov
js
dec
inc
ds
pop
push
je
dec
and
enter
jl
jnp
call
addr16
repz
push
sub
jne
shl
inc
push
inc
and
jg
mov
xchg
xlat
inc
icebp
and
lods
add
sbb
or
mov
aam
inc
inc
mov
cli
(bad)
repnz
xor
fidivr
mov
mov
xchg
rcr
test
scas
jp
mov
out
xchg
nop
das
in
enter
ds
pop
repnz
cwde
lds
nop
or
mov
clc
adc
ins
xchg
pop
sbb
jp
out
test
add
loop
sbb
push
xchg
fs
pushf
cmp
movs
lea
mov
shl
(bad)
mov
nop
dec
movs
div
push
call
inc
dec
ja
xor
and
xchg
or
dec
lods
stos
jmp
nop
inc
mov
inc
leave
jnp
pop
ins
push
cmps
cdq
mov
lods
lock
in
rcr
inc
mov
fcomi
sar
or
outs
pop
divps
sub
(bad)
sub
shl
in
inc
adc
xchg
js
sbb
int
stos
retf
sbb
addr16
inc
push
lods
call
jmp
jbe
jbe
scas
xchg
cwde
neg
mov
movaps
push
pop
pop
loopne
icebp
mov
xor
cs
jo
shl
pop
fnsave
aad
adc
arpl
std
dec
in
test
add
out
xchg
add
sub
int3
push
push
mov
xor
push
sbb
and
push
cmps
lods
mov
lock
hlt
ret
cmp
and
and
fwait
pop
adc
cdq
out
push
mov
sbb
popa
ret
lea
ds
stos
cmps
mov
pop
iret
inc
mov
xor
retf
ins
xor
push
imul
pop
xchg
pop
loop
mov
das
and
sbb
mov
movs
jno
xchg
mov
icebp
adc
loopne
jno
and
lock
xchg
in
(bad)
and
ss
lea
shl
mov
sub
push
inc
and
int3
mov
and
sbb
out
in
push
dec
test
inc
ins
cs
mov
fstp
or
push
enter
test
ficomp
push
hlt
fimul
jg
clc
push
dec
and
cdq
fild
sbb
cdq
dec
xchg
(bad)
and
out
adc
imul
mov
data16
mov
imul
lods
scas
xchg
hlt
ss
adc
mov
fadd
mov
ret
pop
fsubr
imul
sbb
cwde
bound
out
push
fwait
cmp
sub
xor
push
sub
sub
cmp
push
js
add
mov
data16
add
push
gs
push
repz
inc
mov
push
sub
stos
cmp
adc
push
push
pop
add
xchg
mov
and
lahf
jb
enter
or
xor
jnp
cmp
inc
xor
cmp
ja
adc
test
jnp
inc
es
push
jo
and
dec
into
lds
loope
out
sub
cmp
movs
aam
loop
sub
shl
dec
or
stc
ss
(bad)
test
loope
and
das
test
movs
dec
lods
mov
out
and
sub
pop
jge
test
mov
push
retf
ret
scas
mov
mov
push
cmp
cmp
jmp
fidivr
cmp
fdiv
or
loop
(bad)
neg
pop
pop
jns
push
jno
inc
int
xor
sbb
jmp
ror
inc
test
inc
shr
sub
dec
jae
int3
dec
mov
neg
inc
mov
and
sub
cwde
mov
pop
aaa
dec
pop
jle
ret
mov
stos
jge
mov
stos
shl
pop
leave
int
inc
mov
clc
loop
pop
cmps
(bad)
out
stos
aad
jno
iret
aaa
inc
mov
sub
jns
lods
push
std
je
rcr
cmps
mov
mov
or
fisub
pop
mov
mov
arpl
inc
mov
cmp
lds
jne
jmp
pop
out
or
sar
lea
int3
and
es
sbb
ja
fwait
xchg
jl
in
jp
(bad)
xchg
nop
push
ins
jae
sbb
jge
aad
std
sub
mov
pusha
jbe
pop
in
call
rol
ret
outs
xor
fistp
pop
add
and
popf
or
push
sti
push
es
mov
popf
bound
pop
mov
inc
sub
icebp
repnz
ds
test
inc
inc
sbb
sub
movs
xor
sub
inc
ret
and
or
es
push
add
movs
sbb
call
mov
jns
fnstenv
or
push
jae
pushf
add
popa
pop
cs
pop
pop
mov
jl
icebp
sub
jo
into
inc
jns
repz
adc
shl
xor
mov
pop
cli
in
call
inc
das
jb
dec
adc
out
int3
pop
xor
adc
pop
jge
adc
or
mov
cwde
mov
(bad)
mov
ret
push
mov
sbb
pop
cmp
inc
jl
push
mov
lds
jmp
xchg
in
je
ror
mov
icebp
cs
mov
cdq
lock
outs
std
lods
addr16
cmc
mov
fwait
mov
movs
inc
aaa
arpl
cld
(bad)
test
in
addr16
sahf
lea
dec
mov
sub
or
clc
dec
fistp
jge
jecxz
xchg
call
fsub
xlat
sar
jmp
out
sub
sub
pop
imul
add
out
dec
ss
mov
mov
inc
mov
retf
jae
repnz
jnp
add
ins
repnz
dec
ficomp
or
or
(bad)
adc
pop
sbb
hlt
xchg
mov
add
mov
rol
pmulhw
arpl
xor
in
jo
xchg
sar
xor
mov
or
jno
dec
add
cvtps2pd
popa
in
lods
cwde
js
rcr
push
mov
adc
xor
pop
pushf
je
stc
xor
or
iret
dec
mov
loop
mov
in
mov
pop
rcl
fwait
outs
pop
enter
lahf
or
mov
pusha
out
xchg
cmp
adc
push
pusha
xchg
push
movs
inc
xchg
rol
mov
jecxz
or
out
mov
cmp
mov
adc
or
icebp
push
add
mov
into
aaa
xchg
mov
jns
pop
or
cmp
jp
aas
push
sbb
dec
cmps
in
sub
push
dec
jo
adc
xchg
cld
cs
(bad)
jmp
mov
iret
std
retf
xchg
stos
cmp
pop
inc
pop
inc
sub
jns
test
mov
push
mov
sub
push
dec
ret
scas
hlt
xchg
xchg
inc
cmp
xchg
mov
std
mov
stos
leave
stc
or
push
cmp
dec
sub
lods
enter
xor
push
js
scas
push
aam
mov
das
mov
cmps
inc
adc
(bad)
lods
xor
imul
(bad)
pop
addr16
in
(bad)
call
xchg
pushf
paddsb
stos
add
in
or
dec
add
mov
mov
xlat
cli
adc
and
fs
sahf
mov
in
pop
xchg
fmul
mov
pop
inc
push
mov
pop
push
or
and
shl
cmp
sub
inc
movntps
dec
or
loop
bound
xor
mov
mov
cmp
push
add
movs
pop
fmul
adc
push
jne
and
scas
pusha
sub
push
mov
xor
sar
aad
mov
fsubr
in
cmp
mov
jmp
lahf
inc
and
mov
and
sbb
xchg
out
dec
addr16
xchg
stc
out
dec
push
(bad)
dec
icebp
dec
pushf
sub
mov
ins
xchg
scas
jo
mov
jmp
sbb
ret
(bad)
es
xchg
in
js
or
cwde
aad
push
and
cmp
dec
(bad)
das
jno
push
push
(bad)
and
dec
mov
int
pop
jbe
dec
push
ret
mov
test
(bad)
jb
fcom
pop
out
retf
mov
cmps
mov
js
pushf
(bad)
ret
xchg
shr
jae
mov
inc
and
push
jge
(bad)
(bad)
mov
aas
push
sub
ret
xor
stos
push
mov
lods
lods
mov
out
mov
repnz
test
fwait
mov
cld
mov
mov
jle
dec
arpl
ss
nop
fdivrp
pop
fsubrp
and
jbe
add
mov
adc
dec
jnp
jne
addr16
sbb
ins
out
loopne
pop
xor
sar
leave
or
push
hlt
jbe
xor
pop
lds
enter
jmp
and
jmp
inc
push
xchg
xchg
(bad)
in
movs
test
(bad)
adc
iret
aad
cwde
or
icebp
sbb
jno
mov
pop
mov
ret
jg
rcl
or
adc
cmp
mov
hlt
ds
ins
jecxz
(bad)
push
mov
arpl
xchg
dec
aaa
cmc
cmp
jg
inc
int3
or
popa
test
lods
mov
iret
dec
sbb
lea
stc
adc
aad
mov
hlt
cld
or
stos
daa
movs
and
mov
ficomp
dec
iret
ror
je
cmp
nop
xchg
out
test
sbb
idiv
xor
cs
mov
sub
sub
ja
adc
stos
pop
sbb
and
aad
cmp
mov
das
int
inc
icebp
data16
dec
cmp
daa
jmp
(bad)
ja
mov
aam
sub
aaa
jo
xor
add
ja
test
or
(bad)
int
inc
popa
jecxz
push
sbb
ins
mov
xor
jmp
xchg
mov
enter
outs
adc
sub
xor
xor
mov
pop
push
dec
or
pop
mov
daa
shl
js
out
or
sti
add
imul
mov
hlt
mov
mov
ins
cmp
push
test
mov
inc
mov
ja
pop
xchg
fisubr
jo
dec
cdq
test
sub
rcr
cmps
mov
jmp
xor
test
popf
adc
adc
cwde
cmc
shl
xor
push
(bad)
jne
push
pop
jg
add
cmp
jae
mov
in
adc
inc
mov
shl
popa
fistp
out
jnp
dec
(bad)
jle
adc
adc
fwait
repz
and
scas
mov
mov
push
sbb
test
dec
cwde
loope
ins
js
sbb
test
dec
jl
cmp
xor
enter
popf
ret
cli
mov
stos
pop
or
cmps
jbe
fiadd
push
push
bswap
loopne
inc
pushf
mov
adc
cmp
rcr
cmp
inc
add
dec
mov
loope
add
jae
and
sbb
and
push
pop
sub
icebp
mov
pop
xor
push
movs
data16
or
sub
fstp
rcr
call
cvttps2pi
test
sbb
das
(bad)
push
aaa
bnd
and
jb
push
call
sbb
jo
jo
fsub
mov
mov
push
jno
pop
aaa
mov
push
retf
retf
js
(bad)
loope
rcl
loop
sub
loope
inc
inc
hlt
into
inc
outs
inc
nop
mov
push
arpl
jns
(bad)
fwait
xor
mov
std
xchg
cdq
call
pop
repz
xchg
rcl
aaa
add
mov
inc
dec
mov
cmp
pop
(bad)
lds
lahf
ret
mov
mov
sub
sbb
inc
fisub
ins
xor
or
push
sbb
push
test
fcomp
mov
xchg
xor
or
and
and
or
and
dec
mov
je
push
mov
shr
mov
push
movs
or
add
sbb
sti
sub
shr
repnz
shl
mov
adc
loop
loopne
pop
sbb
sbb
out
jo
loop
pop
fst
outs
cmp
fs
and
cmps
mov
mov
cs
cmp
lods
mov
xchg
std
cmp
jge
xor
imul
popa
jecxz
outs
mov
push
sbb
pop
xor
iret
fcomp
xor
push
ret
stos
pushf
movs
or
out
jmp
es
pop
mov
aad
mov
jl
ins
iret
sbb
push
jbe
cmp
cs
into
ins
imul
add
cmps
imul
xchg
lds
mov
push
fadd
cdq
add
mov
or
dec
lods
je
or
or
xchg
test
pop
mov
add
push
repz
movs
stos
mov
mov
lds
sub
dec
not
(bad)
hlt
inc
mul
jp
retf
fsubrp
xor
fistp
out
inc
and
addr16
jl
mov
jmp
mov
inc
lods
and
mov
inc
push
pusha
mov
adc
sbb
cmp
lds
xlat
pop
adc
mov
inc
jl
shl
lea
sbb
lahf
mov
xchg
sub
fidivr
pop
dec
fidivr
push
push
pop
fwait
jp
fsubr
jecxz
adc
or
hlt
fbstp
and
mov
test
test
jnp
test
out
cs
mov
pusha
mov
sbb
or
adc
stos
sub
popa
sti
scas
rcl
ret
jo
aaa
sbb
xor
leave
ficomp
inc
ss
sub
dec
adc
outs
(bad)
repz
jp
xchg
sub
leave
aaa
sub
pop
xchg
mov
fnstcw
lds
or
mov
in
mov
cmp
or
jne
xor
pop
mov
mov
mov
call
inc
pop
ret
inc
mov
inc
retf
pop
jmp
dec
xlat
cdq
in
sahf
fst
xchg
inc
pusha
push
retf
das
sbb
pop
sbb
inc
pop
icebp
xchg
jmp
mov
clc
mov
enter
dec
hlt
cmp
ror
sar
(bad)
fiadd
push
jns
sub
lods
jne
sbb
into
inc
push
clc
call
sbb
in
xor
popa
int3
add
lods
adc
(bad)
and
dec
pop
imul
jecxz
das
out
push
xor
sbb
enter
sub
dec
mov
sub
fstp
adc
lock
sar
out
aas
cmps
ja
rol
(bad)
(bad)
push
xchg
jne
cwde
test
imul
add
cdq
ret
jnp
aam
in
push
imul
mov
in
add
cmp
call
(bad)
clc
mov
or
mov
stc
iret
or
sar
enter
outs
shl
mov
xchg
fcom
add
adc
(bad)
fwait
sbb
std
or
fistp
ds
jl
cmp
xchg
xchg
js
sar
mov
push
movs
pushf
push
bnd
and
es
sub
adc
push
pop
adc
outs
scas
aam
xchg
or
push
inc
nop
mov
jnp
mov
aaa
out
pop
xchg
or
fwait
mov
cmp
imul
push
push
ds
cmp
movs
jge
gs
xchg
(bad)
xor
fs
aad
or
test
cld
sub
sti
jae
clc
out
and
adc
mov
jl
addr16
test
pop
int3
out
and
pop
xor
shl
lea
xor
xchg
shl
xor
jg
push
test
int3
mov
imul
sub
data16
scas
cmp
jl
mov
cs
bnd
add
mov
shl
into
sub
mov
mov
imul
ja
pop
cdq
inc
lea
test
mov
jl
inc
(bad)
and
or
or
cmp
retf
add
add
das
lock
in
enter
repz
mov
mov
aad
movs
jnp
jnp
cmp
mov
stc
or
jmp
jbe
cmp
jb
adc
stc
mov
fcmovnb
(bad)
push
test
ds
rol
sahf
shr
ins
mov
jecxz
xor
jp
mov
retf
xchg
enter
sti
jmp
fldcw
sub
hlt
adc
leave
loopne
into
inc
push
aad
sub
in
dec
ss
fimul
shl
adc
jo
jb
lds
push
dec
ins
sub
mul
mov
dec
aam
(bad)
sar
stos
ins
xor
jmp
jbe
inc
dec
sbb
mov
sar
stos
int3
xchg
retf
out
imul
mov
scas
or
add
(bad)
cmp
popf
mov
hlt
sbb
adc
jnp
and
hlt
inc
sub
mov
jl
or
inc
xchg
loop
shl
(bad)
sbb
sbb
cmp
push
jb
cmc
ds
and
(bad)
sub
scas
jo
dec
or
xchg
test
bound
cmp
mov
push
clc
pop
test
sbb
pop
pop
jmp
hlt
pop
cmp
mov
ins
jg
cli
inc
inc
leave
add
mov
cld
popf
mov
sub
xor
and
stos
shl
jno
pop
jne
pop
outs
cmps
add
cwde
gs
mov
jns
mov
out
gs
or
loopne
adc
mov
sbb
xchg
dec
in
movs
fucomi
pushf
sub
xor
pop
sar
div
jg
xchg
inc
inc
push
mov
ins
jns
cld
cmc
scas
hlt
jmp
mov
ins
or
pop
rcr
mov
in
popa
jno
sbb
ret
scas
ins
jecxz
cmp
xchg
add
in
psrlw
adc
cmc
mov
lea
add
pop
shl
push
add
cvtpi2ps
arpl
add
or
lods
mov
sub
inc
data16
push
ss
hlt
popa
push
mov
pop
clc
sub
xor
jg
iret
cmp
fcom
mov
nop
jg
mov
pop
adc
call
and
sahf
cmp
sahf
mov
add
out
mov
not
mov
lahf
cmp
dec
shr
call
pop
out
idiv
sbb
xchg
jnp
mov
aaa
outs
add
adc
mov
std
xor
pop
inc
cmp
jmp
fidiv
jmp
mov
int3
hlt
add
test
and
mov
inc
sbb
daa
nop
inc
dec
sbb
sbb
add
mov
or
iret
(bad)
jl
repz
out
jle
jne
in
aam
in
aaa
or
pop
jo
mov
xor
retf
inc
sahf
mov
(bad)
mov
mov
mov
inc
ret
bound
sub
mov
in
sbb
cmps
mov
adc
fcom
lods
loope
push
(bad)
lahf
xor
inc
cmp
scas
mov
pusha
aam
mov
dec
mov
arpl
adc
mov
mov
int3
jns
adc
adc
jmp
xor
mov
pop
lods
xor
or
or
imul
cmp
add
push
inc
add
mov
sub
in
(bad)
jmp
push
pop
mov
inc
ret
sbb
ficom
stos
in
lock
mov
sub
stc
(bad)
mov
jo
jae
cmp
nop
cwde
(bad)
adc
(bad)
fwait
retf
dec
dec
fnstcw
dec
cmp
xor
cmp
add
sar
mov
lock
sbb
nop
std
or
xlat
and
(bad)
loopne
int
ret
push
popf
repnz
retf
mov
fcomp
mov
pop
xchg
mov
mov
xor
inc
mov
cmps
out
and
mov
out
test
std
xchg
xor
pop
xchg
mov
push
jnp
xor
mov
ror
gs
inc
stos
stos
sub
pop
jl
xlat
dec
ja
lock
dec
add
sahf
test
mov
in
sub
add
and
addr16
pop
mov
cmp
rcl
addr16
movs
nop
(bad)
xlat
lock
int
lahf
outs
push
mov
xchg
sub
xchg
test
xor
je
mov
sub
stos
mov
(bad)
mov
nop
dec
mov
bswap
pop
cs
and
push
addr16
shl
pop
mov
(bad)
mov
xchg
sbb
jmp
inc
lock
xor
jnp
pushf
adc
popa
adc
les
mov
dec
mov
push
in
mov
sub
and
xor
cmp
pushf
xchg
xchg
cmc
nop
pop
clc
rcl
fisubr
repnz
pop
xor
sbb
inc
stos
dec
sahf
test
sti
xchg
mov
jg
popf
mov
and
or
movs
add
nop
(bad)
(bad)
mov
jmp
or
out
das
jbe
jnp
push
gs
pop
push
add
scas
push
mov
pop
inc
push
mov
ficom
neg
inc
ret
adc
adc
jbe
popf
mov
add
jns
pushf
sbb
mov
outs
stc
mov
pop
test
sub
stos
ror
push
mov
and
test
adc
loopne
enter
movs
outs
mov
push
jb
dec
out
jnp
lds
xchg
imul
push
data16
test
sbb
sar
lock
imul
pop
clc
stos
retf
scas
sbb
push
ror
les
mov
push
push
and
(bad)
std
adc
mov
xchg
mov
push
pop
add
jmp
retf
movs
test
and
out
pop
push
jle
out
jns
repnz
test
pop
xlat
xor
and
ror
add
pop
mov
cmp
int3
popa
and
sub
jo
jbe
sbb
xor
sbb
xor
sti
out
jg
(bad)
mov
inc
div
in
sub
mov
adc
push
mov
rol
fdivr
push
fidivr
inc
adc
jmp
mov
and
pop
dec
add
ins
out
dec
push
push
pop
jge
imul
mov
push
cwde
sub
cmp
xchg
loop
mov
xor
xchg
sahf
dec
add
loope
aad
mov
retf
adc
mov
push
and
cmp
and
dec
mov
stc
popf
or
or
mov
cs
mov
or
sub
lods
pushf
mov
out
mov
dec
adc
mov
in
pop
test
repz
hlt
in
imul
(bad)
pop
mov
add
imul
int
or
sbb
mov
mov
pop
int
loope
xchg
dec
test
lods
retf
sar
(bad)
adc
das
pushf
pop
add
lea
and
mov
stos
imul
push
adc
cmp
add
rcr
test
push
stos
jmp
in
aad
and
fcomp
pusha
sbb
loop
adc
or
addr16
and
jns
cwde
xchg
jecxz
cmp
mov
inc
dec
call
icebp
imul
pop
fmul
cmp
adc
rcr
dec
fdivr
mov
jns
(bad)
mov
sbb
adc
xor
inc
sub
push
lods
int3
je
jb
inc
add
fs
fld
mov
(bad)
dec
hlt
jl
cmp
dec
and
pop
shl
hlt
stos
push
dec
xchg
sbb
sub
cmp
lea
out
push
es
pushf
inc
push
mov
test
(bad)
movs
mov
or
dec
dec
and
push
test
mov
jl
or
xchg
ror
inc
push
imul
movs
loop
or
(bad)
out
jmp
movs
nop
sbb
addr16
cmc
mov
sti
mov
ins
adc
add
push
js
mov
mov
jp
mov
ror
xor
stos
sbb
xchg
and
jbe
dec
fs
gs
adc
aas
and
shl
bound
dec
push
popf
jb
and
inc
movs
xchg
add
hlt
sbb
pop
add
pop
xor
add
xchg
ret
push
fsub
pop
(bad)
(bad)
jecxz
leave
js
sub
mov
or
fcmovnb
mov
stos
shr
sar
jbe
ds
adc
and
mov
add
jl
pop
dec
inc
or
add
fst
daa
out
jno
in
mov
adc
adc
rol
sub
imul
sub
adc
hlt
jmp
sbb
adc
inc
sub
pop
stc
or
mov
cli
ret
push
adc
jo
pop
sub
fs
mov
cli
dec
addr16
push
pusha
adc
(bad)
movs
jne
lds
mov
add
(bad)
xchg
sub
mov
jmp
xchg
or
pop
repnz
pop
in
push
loop
loopne
dec
lods
cs
je
ret
repz
clc
mov
mov
jmp
fcomi
lods
cs
dec
mov
outs
mov
test
(bad)
mov
xchg
jne
jmp
dec
mov
cmp
cmps
push
scas
push
push
loope
push
xchg
cdq
(bad)
and
mov
mov
and
jge
sub
sbb
inc
repnz
mov
in
mov
sub
sub
sti
xor
xchg
sar
cdq
sti
jbe
mov
stos
scas
or
sub
xor
outs
fisttp
popa
nop
icebp
pop
or
inc
cmc
ror
movs
jne
pop
sbb
fimul
mov
test
loope
movs
ins
jl
loope
cld
sbb
int
ss
retf
imul
add
mov
sub
in
sar
dec
pop
ret
mov
jmp
xor
mov
sub
aaa
xchg
outs
jae
add
mov
adc
adc
push
cmp
pop
sbb
xor
dec
mov
into
mov
dec
sahf
xor
and
mov
retf
or
push
mov
jmp
mov
mov
repz
sbb
pushf
pop
ds
scas
lahf
loopne
or
int
scas
in
sbb
mov
lahf
(bad)
mov
mov
cmps
dec
retf
jmp
mov
mov
xor
mov
std
enter
(bad)
xchg
fcom
in
imul
es
clc
pop
xchg
mov
ins
or
push
or
push
or
jp
(bad)
fisubr
ret
arpl
cmc
push
mov
sub
sbb
ror
shl
bound
out
cdq
mov
push
ror
es
dec
mov
mov
jecxz
add
aad
nop
dec
dec
fcmovu
jb
inc
jo
pop
mov
(bad)
lea
mov
lock
sub
push
ins
out
mov
adc
mov
mov
cdq
inc
imul
mov
iret
jns
out
fimul
jp
pop
shr
sub
push
push
or
sti
or
imul
xor
je
add
sbb
(bad)
iret
aam
dec
add
push
inc
jns
dec
mov
push
and
sbb
scas
pusha
nop
fwait
mov
jmp
add
daa
dec
test
add
ins
and
sbb
xchg
retf
push
and
sub
mov
out
mov
add
mov
add
adc
add
cli
repnz
push
add
call
jns
lds
in
ins
push
jne
or
mov
sbb
lods
jp
loopne
fiadd
adc
cmp
dec
dec
pop
push
gs
jmp
sbb
cdq
xor
idiv
pop
out
seto
cld
adc
xor
sbb
push
pop
jne
sbb
add
mov
cmp
(bad)
nop
adc
js
mov
(bad)
jmp
pop
cwde
push
sti
ror
retf
aas
sub
mov
test
cmps
xor
std
aad
jmp
sub
cwde
cmc
mov
cli
sub
mov
jne
(bad)
outs
int3
jmp
sub
mov
jbe
cli
jbe
stos
jl
outs
clc
jnp
xor
test
cmp
call
push
arpl
and
out
lock
xchg
mov
js
loopne
(bad)
repnz
jbe
fsub
ds
push
sub
sbb
cdq
sti
xchg
cli
les
push
pop
or
mov
bound
sar
dec
jp
sbb
or
inc
jp
push
jns
xchg
mov
fwait
sub
ds
mov
sti
sbb
or
mov
inc
enter
bound
jns
sbb
dec
movs
add
push
aam
in
loop
aad
(bad)
mov
mov
call
sar
int
inc
mov
into
add
pop
loop
test
loope
bound
mov
mov
sbb
push
mov
and
pop
mov
fsub
mov
(bad)
sbb
sub
int3
fstp
push
fwait
xor
inc
es
fisub
sti
(bad)
out
imul
xor
push
in
enter
mov
sub
aad
pop
dec
lock
xor
sahf
shr
test
fs
ror
cmc
in
bound
pop
or
sub
mov
test
cmp
scas
xor
retf
xlat
sub
xchg
cmp
pop
cmc
ret
out
es
shr
add
(bad)
pop
ins
jno
call
push
inc
dec
adc
sub
mov
lds
mov
shl
shl
in
xchg
ja
imul
push
mov
outs
loope
and
dec
jb
scas
xchg
sbb
cmp
ins
rcr
mov
dec
ret
pop
fs
mov
inc
dec
sub
adc
enter
clc
cmp
stos
inc
push
test
xchg
xchg
std
inc
inc
xchg
inc
jb
ror
push
jmp
ja
inc
fsubp
popf
stos
cmc
daa
sub
adc
cmp
pushf
pop
ficom
nop
fldcw
outs
jmp
sbb
ins
js
pop
mov
inc
cdq
(bad)
int
retf
int
mov
pop
mov
or
xor
mov
xor
sar
gs
repnz
pop
and
cmp
jns
push
mov
cmp
or
pop
pop
add
mov
mov
mov
call
mov
dec
pop
sub
in
das
cmps
dec
inc
nop
add
repz
fidiv
and
jmp
outs
sbb
pusha
out
in
mov
push
les
add
dec
mov
in
xchg
push
or
xor
ins
mov
test
xchg
inc
adc
mov
mov
mov
mov
retf
lods
and
cld
mov
ins
movs
imul
push
bnd
cmp
lods
repz
sbb
in
jmp
and
mov
das
dec
dec
xor
inc
inc
mov
ins
into
arpl
data16
pop
hlt
jl
adc
add
xchg
out
xchg
cld
aas
push
jle
pop
jae
xchg
cmp
loopne
push
mov
mov
jge
jno
fwait
aaa
in
add
out
pop
xchg
test
into
lahf
stos
icebp
cmp
and
sbb
mov
inc
fild
(bad)
cli
add
mov
pop
mov
mov
fwait
in
arpl
xor
in
popf
xor
sbb
push
mov
mov
push
xor
pop
js
sar
mov
in
push
clc
ror
pop
cs
icebp
push
xlat
inc
xchg
addr16
lock
iret
mov
and
push
jns
in
mov
jns
mov
test
stos
mov
mov
call
inc
aas
mov
loope
xor
fild
into
pop
cmp
test
cmp
add
dec
push
sub
mov
inc
xchg
dec
sbb
xchg
retf
enter
mov
ss
pusha
into
cmp
mov
cmp
cmp
or
hlt
pusha
aaa
idiv
das
sbb
jno
dec
mov
cmp
movs
in
rcl
adc
xchg
dec
test
cmp
aad
push
mov
mov
daa
adc
in
cwde
jp
xchg
ja
pop
sbb
mov
sub
clc
loop
pop
outs
cs
fsubr
outs
pop
mov
(bad)
loopne
push
inc
stc
icebp
call
jecxz
jp
stos
mov
mov
ficom
cmp
push
shl
jo
rcl
(bad)
popa
ins
jl
adc
pop
fist
fwait
sub
ins
(bad)
jp
imul
lock
cmps
push
mov
outs
cli
pop
sub
cs
ja
iret
std
fisubr
fs
jmp
jae
sbb
mov
call
lods
xchg
sub
loope
mov
cmc
sahf
jmp
fnstenv
or
and
ins
xchg
gs
fs
iret
sub
cmps
sbb
loope
mov
aad
add
adc
xchg
or
or
je
call
icebp
xor
inc
cmc
scas
mov
mov
add
jmp
call
movs
mov
or
jnp
data16
js
mov
mov
jne
adc
pop
xchg
aam
adc
ja
arpl
mov
dec
sahf
outs
lods
ins
xor
push
sbb
sbb
retf
push
jbe
outs
xor
mov
or
repnz
in
mov
and
xor
aam
nop
repnz
test
jae
not
sbb
out
cmp
popf
push
push
rol
push
pop
aad
push
nop
shl
inc
cwde
xlat
jbe
sub
cmp
icebp
mov
cmp
arpl
sbb
sti
add
mov
mov
gs
mov
dec
ja
inc
xor
ins
sbb
gs
sbb
sbb
out
add
rol
dec
inc
jmp
cmp
aas
mov
pop
fisub
aaa
push
std
sbb
xchg
push
mov
and
(bad)
stos
aas
frstor
jmp
mov
xchg
jo
fs
mov
imul
popf
ja
xchg
mov
push
scas
aam
aam
repz
aaa
mov
rcr
xor
xchg
(bad)
sub
push
cmp
in
stos
lock
out
sub
pop
adc
jge
cmp
adc
push
xchg
adc
sahf
fwait
mov
cld
shl
mov
dec
in
cmps
xchg
jo
(bad)
mov
enter
sbb
into
paddw
cdq
sub
ins
scas
dec
in
jmp
fmul
jle
inc
test
call
fsubr
push
and
out
dec
jnp
jno
mov
cmp
pop
int
mov
and
arpl
scas
aam
xchg
popa
jmp
scas
call
add
aad
in
pop
pop
mov
test
retf
xchg
pop
jno
add
out
out
mov
movs
fcom
sub
xchg
aas
cs
sar
sbb
push
mov
in
int
cwde
hlt
xchg
dec
push
mov
cwde
out
sar
cmps
cmp
iret
jecxz
lds
mov
stos
rol
(bad)
push
xlat
stc
sub
cmps
les
push
or
mov
lock
pusha
mov
pop
mov
std
mov
cwde
inc
imul
xor
popf
dec
sar
dec
fbstp
iret
das
xchg
icebp
jb
outs
aaa
and
lock
jecxz
add
je
pop
stos
test
pop
shl
cmp
cmp
out
ficomp
dec
rcr
mov
and
jmp
add
or
test
inc
push
push
rol
repnz
int3
data16
jge
rcr
mov
mov
neg
sti
sti
(bad)
sub
push
clc
xchg
retf
add
adc
xchg
(bad)
out
(bad)
call
hlt
or
imul
mov
leave
mov
jo
add
push
inc
popa
push
je
xchg
imul
cwde
icebp
lds
cmp
add
adc
std
jle
or
jg
test
push
xor
xor
aaa
scas
xor
push
bound
jb
jge
mov
pop
mov
vpcmpeqd
fimul
cmp
je
pop
mov
nop
scas
les
adc
mov
jb
cmc
addr16
inc
scas
loop
jmp
cmps
cmp
fwait
loop
cld
push
repz
lods
in
clc
add
pop
pop
leave
add
imul
in
xchg
xor
scas
mov
sbb
mov
pop
xchg
shl
idiv
idiv
jne
js
dec
aaa
mov
mov
cmc
dec
test
or
popa
ret
mov
jl
mov
rcr
mov
xlat
dec
mov
mov
jne
div
xchg
jo
fimul
jge
cmp
sub
mov
xor
nop
push
pop
inc
fwait
and
xchg
int
cli
cmp
mov
or
popa
cmp
adc
inc
clc
out
movs
and
mov
imul
mov
dec
clc
(bad)
mov
sbb
and
lods
mov
xchg
mov
fisubr
out
(bad)
cmc
bound
push
lahf
ja
fdivr
xchg
repnz
lds
ins
mov
jnp
sti
xor
mov
in
repz
mov
pushf
pop
scas
test
(bad)
and
fldenv
jbe
xor
xchg
stos
les
add
push
jae
inc
fwait
mov
pop
jne
mov
cwde
push
stc
imul
and
mov
enter
jmp
scas
int3
and
ror
(bad)
push
mov
nop
in
push
inc
stos
rcr
sub
jge
and
aam
cmp
dec
and
dec
inc
aaa
(bad)
jno
dec
push
mov
sbb
ficomp
sbb
out
or
push
and
pop
pushf
push
mov
mov
ret
fcom
lahf
xor
inc
int
mov
outs
pop
int3
add
jle
push
push
xor
xchg
test
lahf
scas
adc
iret
sbb
(bad)
mov
paddusw
and
and
push
mov
inc
int
arpl
dec
and
les
jmp
les
(bad)
pop
xchg
or
mov
aaa
mov
and
aaa
sub
sub
jge
cmp
and
sar
int
(bad)
lods
fs
xor
jmp
pop
dec
pop
aaa
cs
ds
dec
mov
lds
out
into
mov
imul
and
pop
dec
lods
bound
sbb
pop
test
(bad)
movs
add
mov
call
adc
fs
mov
sbb
adc
icebp
imul
cmp
pusha
clc
jo
inc
call
ret
pop
daa
aas
sbb
loope
jae
and
push
shr
sbb
out
hlt
mov
sbb
aaa
mov
add
in
call
call
out
aaa
or
mov
add
adc
adc
push
ds
inc
retf
add
es
cmpps
ja
ret
retf
ss
aad
cdq
mov
xchg
add
jmp
jne
or
dec
je
shl
lods
pop
cli
xlat
mov
lods
mov
mov
mov
adc
je
cmp
or
lods
and
aam
jg
mov
and
sahf
mov
jne
xchg
push
fadd
out
daa
pop
ja
stos
xor
add
mov
loope
idiv
outs
fldenv
loopne
in
lods
mov
push
movs
mov
xchg
dec
ins
fs
inc
sbb
retf
dec
pusha
push
sar
xchg
je
xchg
mov
xor
xor
mov
push
shl
lods
add
xlat
stos
mov
mov
inc
rcl
sbb
push
mov
inc
sbb
jae
cmp
test
mov
pop
gs
shr
jae
idiv
and
data16
pop
in
mov
cmp
pop
and
ss
cld
sbb
pop
and
sbb
je
retf
inc
arpl
lock
dec
push
cmp
jecxz
test
repnz
out
add
mov
and
hlt
mov
icebp
ret
mov
adc
adc
pop
cmps
nop
xor
push
lds
dec
xor
mov
aad
iret
lock
and
sbb
cmp
mov
pop
add
jb
lods
mov
sbb
jecxz
push
jmp
pop
inc
pusha
dec
mov
cld
adc
xor
shr
jl
sub
or
add
int3
or
(bad)
std
rcl
lea
mov
pop
add
dec
push
pop
sub
fcmovnu
mov
and
in
(bad)
jl
push
mov
jle
push
rcl
mov
daa
outs
xchg
cmc
stos
mov
or
sahf
test
sub
(bad)
mov
lds
test
cmp
push
mov
or
outs
sti
ds
leave
mov
shl
cmps
popa
jl
dec
push
jnp
lods
cmp
test
mov
sbb
push
fs
lods
mov
dec
pop
adc
push
test
imul
push
aad
mov
leave
pop
arpl
(bad)
jle
in
out
xchg
aaa
int3
lock
dec
jge
and
jmp
repnz
inc
mov
add
sbb
sub
aaa
outs
jbe
inc
push
pop
cmp
in
xchg
add
loope
cmp
pop
push
mov
jge
push
pop
clc
push
cmp
or
icebp
sti
jp
push
cdq
cmps
xor
imul
rcl
in
pop
mov
shl
mov
call
rcl
push
inc
stos
and
pop
xor
pop
retf
aad
push
and
stc
sti
outs
outs
scas
push
loope
push
cmp
(bad)
sbb
lods
mov
add
ret
jns
pop
popf
cmp
fst
mov
stos
cmp
in
mov
jae
push
pop
mov
sbb
mov
rcr
iret
hlt
or
popf
cmps
fwait
pop
push
leave
sahf
outs
out
sbb
iret
mov
dec
dec
push
shl
push
cmp
add
lods
sti
loopne
sahf
sub
repz
jge
leave
jnp
ins
aaa
jle
lds
sub
scas
enter
iret
and
lods
mov
cmc
xor
cdq
jmp
lock
fcmovb
pushf
not
call
mov
int
add
(bad)
lock
sbb
(bad)
pop
ds
test
sub
mov
ja
into
jmp
pushf
cmps
inc
jb
outs
inc
push
push
mov
clc
lock
ret
mov
push
fidivr
je
leave
jg
ret
mov
push
xchg
dec
and
test
and
repz
fwait
jecxz
(bad)
aam
retf
movs
pop
in
shr
xor
dec
test
lods
push
mov
sti
mov
lock
fwait
inc
pop
dec
ret
add
or
add
mov
scas
mov
loopne
ja
mov
xchg
sahf
movs
mov
dec
test
aas
sbb
add
mov
inc
js
and
pop
fadd
jne
sbb
xor
jg
dec
pop
aaa
push
sbb
in
cmps
bnd
mov
inc
pop
bound
test
ins
inc
scas
aas
icebp
sub
cmps
cmp
sahf
mov
lahf
mov
out
cmp
call
xchg
mov
and
adc
movs
lds
dec
add
pop
cli
mov
xor
dec
mov
mov
add
jg
mov
mov
dec
icebp
cs
adc
mov
cmps
data16
ret
jmp
mov
mov
xchg
lods
push
push
jns
icebp
push
adc
data16
xchg
xchg
adc
lahf
jl
fcmovnu
xor
je
retf
and
icebp
aas
test
dec
rcr
popf
in
neg
aam
inc
neg
scas
inc
xchg
dec
mov
movs
mov
pop
inc
adc
fwait
sub
dec
out
push
cmp
dec
sub
pop
push
mov
cmp
hlt
jp
mov
cmp
mov
xchg
xchg
(bad)
es
push
fdiv
lahf
out
inc
mov
adc
add
and
movs
out
cwde
lock
jg
out
mov
rcl
jp
pop
dec
pop
ucomiss
pop
cli
cmp
inc
xlat
and
(bad)
sub
mov
test
push
sbb
xchg
mov
inc
push
test
icebp
loopne
cs
dec
xor
stos
(bad)
add
mov
shr
mov
ret
enter
mov
je
out
adc
test
push
pop
outs
jl
xlat
sbb
outs
int3
int
arpl
mov
clc
dec
sti
das
enter
adc
pop
aaa
add
retf
ret
jae
scas
clc
pop
mov
and
jmp
(bad)
aad
or
cs
cmp
mov
lea
add
add
xchg
mov
fsub
mov
lods
mov
add
inc
fs
stc
arpl
movs
dec
mov
(bad)
in
cld
mov
ret
ficomp
jmp
call
es
push
ins
out
jne
mov
mov
sub
imul
aas
add
ror
inc
cmp
repz
or
pop
jmp
rol
repnz
icebp
pop
scas
dec
inc
jo
sbb
push
jns
lahf
pop
fwait
cmps
into
dec
push
sub
ja
mov
iret
fs
adc
movs
jg
addr16
shr
inc
jb
push
fs
outs
fsubr
push
fmul
movs
dec
cld
mov
hlt
aas
loop
shl
jle
retf
es
leave
or
pop
addr16
and
cdq
enter
mov
sar
enter
xor
repz
fcomp
dec
sub
mov
test
pop
push
test
addr16
data16
stc
mov
cli
mov
int
sub
dec
scas
(bad)
ret
mov
jae
outs
mov
mov
ins
add
mov
retf
xor
mov
and
(bad)
push
int3
dec
add
outs
rol
push
popa
cmp
test
and
xchg
mov
rcr
fld
test
outs
into
loop
(bad)
out
inc
inc
pop
ret
mov
rcr
inc
fsub
fisub
mov
adc
shr
bound
fdiv
int
mov
xor
push
mov
xchg
cwde
xchg
xor
mov
jecxz
inc
or
push
xlat
ror
adc
push
(bad)
mov
fnstenv
sub
scas
arpl
xlat
mov
repz
inc
pop
mov
daa
inc
xlat
push
js
pop
mov
pop
inc
push
loopne
into
or
xchg
loop
dec
nop
dec
loopne
add
fisttp
sub
mov
push
jge
imul
inc
pcmpeqd
and
dec
sbb
jl
inc
inc
pop
aaa
xlat
rcl
push
push
fcom
aaa
mov
xor
push
cdq
inc
jl
out
and
jno
adc
ret
pop
mov
pushf
jp
cs
and
scas
sub
push
mov
call
mov
pushf
inc
xchg
fcmovnbe
int3
enter
jne
fbstp
jge
rcr
xchg
hlt
ss
lahf
pop
jmp
jge
aaa
mov
xchg
dec
das
and
push
mov
dec
out
ds
mov
ds
cdq
jno
xchg
hlt
or
mov
scas
div
sub
enter
in
call
adc
mov
push
movs
int
ja
fistp
inc
inc
dec
jcxz
pusha
imul
and
or
lods
lds
jge
shrd
push
and
jmp
pop
xchg
sahf
fdivr
bound
imul
in
pop
xor
dec
mov
adc
sub
mov
jmp
and
add
adc
and
adc
sbb
shr
outs
rep
cmp
retf
(bad)
jmp
int
pop
add
cdq
fcomip
mov
push
or
retf
or
cmp
mov
or
hlt
sub
xor
into
ins
scas
lods
adc
sbb
and
sbb
ret
jmp
sbb
inc
sbb
mov
mov
(bad)
fadd
jmp
loop
or
daa
inc
jb
(bad)
xchg
mov
inc
cdq
push
xchg
push
mov
test
stc
and
push
cld
sbb
in
lods
aam
pop
xchg
leave
mov
popf
inc
sti
daa
scas
sbb
dec
xchg
popf
pop
lds
and
arpl
mov
repnz
adc
inc
mov
out
mov
nop
aam
popf
jae
xor
cli
push
shr
fstp
jmp
nop
jmp
mov
ret
adc
push
repz
fnsave
inc
or
sbb
shr
push
mov
xchg
or
mov
cmps
iret
call
push
mov
ss
sbb
ret
aas
(bad)
push
inc
(bad)
xchg
dec
mov
fiadd
mov
xchg
ret
les
and
out
xchg
ss
sub
clc
imul
mov
gs
jmp
pop
mov
jns
aaa
ds
cdq
xor
dec
retf
sbb
cmp
mov
and
popa
push
add
lock
inc
(bad)
retf
xchg
outs
sbb
or
loopne
pusha
sub
push
and
adc
and
mov
(bad)
test
inc
xor
int
icebp
leave
dec
ret
leave
push
mov
loopne
popf
dec
scas
push
aas
xchg
mov
push
dec
xchg
rcl
lea
ins
mov
dec
loop
and
sub
int3
out
mov
std
in
call
sti
inc
mov
mov
xor
sub
test
cmc
out
dec
aas
lahf
scas
pusha
int3
push
rol
dec
push
sub
inc
test
xchg
ins
fs
neg
push
mov
pop
repz
cmp
lods
scas
nop
xchg
jae
das
sbb
mov
shr
std
arpl
fcom
jo
stc
xor
fs
(bad)
lea
ror
jbe
leave
xor
jae
and
imul
and
pop
lods
jecxz
lea
mov
out
xchg
push
xor
dec
sub
xchg
adc
pop
jp
and
ins
push
outs
cmp
xchg
mov
test
and
push
mov
dec
pop
or
xor
sub
mov
adc
ret
iret
ss
(bad)
scas
hlt
cmc
pop
bound
enter
(bad)
fs
and
inc
push
xchg
fwait
jno
pop
and
dec
sub
pop
xchg
fwait
cdq
jl
push
enter
fisubr
fild
fcomp
retf
and
fidivr
pop
adc
enter
cmp
jo
push
mov
sub
sub
mov
push
sahf
mov
push
rcl
sahf
mov
xor
mov
cmp
(bad)
loopne
or
cli
ret
aad
mov
out
add
test
inc
in
jns
(bad)
sti
movs
popa
jo
leave
pmaddwd
retf
or
dec
(bad)
inc
or
push
sbb
push
pop
mov
xor
mov
sbb
cmp
cmp
test
sub
scas
inc
lods
xor
addr16
jo
jb
inc
mul
repz
jp
mov
out
sbb
jo
dec
xchg
xchg
popa
(bad)
cld
pop
fistp
imul
pop
and
pop
(bad)
fs
mov
and
imul
sub
xor
jp
sbb
adc
pop
xor
or
es
mov
xchg
fdiv
cmc
leave
movs
and
adc
pop
out
arpl
sub
pop
sub
out
lods
retf
push
sub
or
inc
out
repz
in
dec
add
sub
mov
or
cmp
push
sti
fisub
add
stos
push
(bad)
cmc
pop
xchg
jp
mov
sbb
sub
dec
out
mov
xchg
xchg
sub
xor
fs
pop
adc
test
and
ins
jne
(bad)
sahf
dec
adc
mov
xor
and
test
neg
xor
std
pop
ss
xchg
xor
xor
(bad)
popa
xchg
mov
inc
lods
jnp
and
test
imul
out
and
dec
cmp
add
ror
sbb
mov
and
push
ret
dec
out
iret
mov
stc
js
popa
sub
add
jne
jmp
mov
mov
iret
pop
inc
and
dec
std
pop
sti
pop
(bad)
cld
inc
xchg
lods
ret
dec
scas
fcomi
cdq
and
cmp
xor
pop
iret
add
ret
pop
les
sub
repz
scas
mov
out
cmp
and
inc
enter
pop
cmp
pop
mov
mov
xchg
pop
(bad)
(bad)
pop
adc
sbb
mov
jnp
jae
add
cdq
push
cmc
and
cld
push
popa
bound
adc
mov
add
adc
sub
cmc
out
push
aam
sub
mov
outs
mov
xlat
inc
lods
dec
add
cmp
pop
ss
aad
jge
int
sub
int3
add
cmps
cmp
add
xchg
ret
and
jbe
shl
and
pop
and
mov
jle
ds
call
sahf
cmp
jl
jnp
imul
je
out
push
xchg
mov
cmp
jmp
mov
ins
daa
arpl
cmp
push
(bad)
push
test
mov
mov
shl
enter
or
xchg
mov
pop
rol
sub
mov
mov
sub
outs
fst
sub
jmp
loopne
xor
jae
aad
inc
pop
adc
jle
xor
retf
xlat
scas
inc
push
retf
push
dec
and
inc
lods
pop
and
inc
mov
cmps
lock
cs
psubsw
cmp
jg
inc
sbb
in
or
and
js
mov
imul
into
push
pop
in
xchg
addr16
jne
or
push
out
mov
jnp
in
jns
cmps
loope
cmp
arpl
je
jns
sub
or
and
xor
sbb
and
push
xor
scas
neg
pop
fmul
mov
pavgw
xor
(bad)
ins
mov
std
or
mov
icebp
adc
imul
clc
xchg
sti
bound
xor
repnz
cmp
push
bound
cmp
push
jae
or
call
lods
mov
push
je
dec
pop
add
imul
mov
nop
scas
push
call
movs
inc
repz
test
cmp
dec
push
mov
(bad)
dec
leave
cmp
sub
or
dec
mov
pop
pop
and
dec
xor
sti
sub
lock
cmp
imul
pop
imul
test
pop
dec
mov
hlt
adc
xchg
sbb
push
aad
pop
push
leavew
xchg
pop
mov
push
pop
in
es
push
daa
cmp
and
into
imul
test
dec
lods
fcmovnbe
mov
xor
sbb
arpl
mov
test
leave
(bad)
or
inc
fnsave
shl
repz
or
ja
test
in
or
sti
xor
nop
and
mov
dec
dec
jbe
aam
mov
add
std
jae
dec
jmp
push
adc
xor
add
js
xchg
mov
es
sahf
in
ret
mov
ret
enter
fdiv
sub
and
push
test
movs
mov
cld
ret
jg
mov
adc
in
push
(bad)
xchg
push
dec
jb
adc
dec
lock
aad
push
pop
cdq
ja
ror
push
inc
xchg
cmps
lock
or
dec
ins
mov
push
sbb
test
into
ficom
push
inc
rdpmc
loopne
pop
jns
push
stos
fcomp
xchg
cmp
test
in
add
xchg
bound
out
in
stos
xor
outs
inc
xor
das
push
adc
pop
(bad)
and
paddsb
and
sbb
xchg
mov
cmps
jmp
inc
mov
dec
cmp
mov
inc
jns
daa
mov
(bad)
enter
mov
xchg
inc
pusha
and
adc
mov
cmc
int
mov
loop
push
in
pop
pop
fisttp
push
inc
mov
int3
and
sub
push
push
in
into
jb
mov
pop
adc
add
pop
adc
loopne
in
jne
(bad)
mov
add
scas
push
jae
cmp
pushf
daa
out
(bad)
pop
test
or
adc
mov
fidiv
rcr
movs
mov
sub
leave
sub
and
loopne
icebp
in
out
and
mov
or
aad
cmc
cmp
jl
mov
test
(bad)
mov
sbb
dec
movhps
repz
inc
outs
test
xor
test
fild
cmp
or
add
sti
jo
mov
inc
outs
int3
lods
push
sub
fdiv
mov
sub
movs
jno
mov
frstor
jl
inc
bound
outs
cli
mov
out
out
mov
cmp
mov
dec
out
push
ds
mov
push
jo
sbb
xor
push
cli
pushf
stc
call
sbb
(bad)
push
(bad)
jmp
sub
lods
fmul
push
bound
pushf
jo
fxch
inc
and
inc
lahf
jp
mov
add
lds
cmp
icebp
in
int
repnz
push
test
mov
xchg
test
std
mov
xchg
add
movs
add
add
scas
popa
(bad)
shl
inc
mul
(bad)
loope
and
or
scas
pop
mov
mov
movs
int
jg
push
push
mov
ds
inc
xchg
xor
cmp
mov
mov
mov
(bad)
fstp
fdiv
das
cli
dec
mov
inc
xchg
push
sub
nop
test
(bad)
fucomip
pop
mov
mov
js
es
movs
lods
in
call
sahf
imul
push
add
and
popf
loop
mov
imul
mov
idiv
fs
jns
in
in
es
sti
or
add
(bad)
sbb
jle
or
add
imul
pop
shr
cmp
test
mov
lods
arpl
inc
push
add
and
add
sub
mul
lahf
push
out
adc
outs
bound
call
xlat
add
mov
dec
ror
mov
iret
(bad)
bound
shl
sub
dec
dec
fnstenv
movups
scas
(bad)
jmp
or
idiv
and
out
int3
mov
ss
push
je
imul
cmp
imul
jbe
(bad)
mov
lock
jne
mov
lock
data16
jne
sub
(bad)
inc
out
shl
push
mov
or
retf
call
jne
add
jno
push
pushf
fpatan
aad
mov
(bad)
imul
ret
leave
in
push
cmps
jnp
retf
add
es
jno
stos
in
(bad)
in
ret
pusha
xchg
sub
(bad)
iret
loope
ins
jmp
not
and
mov
jmp
loop
icebp
(bad)
and
add
or
inc
test
adc
sahf
push
mov
jl
push
in
xchg
retf
es
sbb
adc
int
into
sbb
loope
les
mov
mov
add
jns
jbe
(bad)
in
pop
and
mov
(bad)
cmps
adc
iret
jmp
cmp
fwait
add
jae
jmp
pop
ja
out
int3
mov
jb
push
sbb
push
icebp
outs
inc
pop
inc
neg
cld
cmp
repz
fimul
imul
cmps
cmp
lods
sbb
push
jmp
dec
(bad)
push
out
loopne
sub
pop
outs
cmp
mov
sub
mov
adc
pop
lea
ficomp
cs
jp
div
out
dec
scas
or
inc
jbe
sbb
repz
ds
test
not
push
xor
jmp
cmp
adc
sbb
fild
adc
stos
retf
je
jae
push
pop
and
fwait
cmp
mov
test
mov
add
out
outs
jge
popa
sub
mov
call
mov
adc
out
jl
or
and
mov
inc
shr
cdq
pop
shr
sbb
movs
das
addr16
fsub
mov
in
inc
or
xor
mov
adc
outs
jbe
shl
ror
ins
bound
scas
jg
(bad)
xor
xor
in
rol
adc
(bad)
stc
dec
pop
inc
nop
cmp
push
pop
fwait
mov
hlt
jle
pop
stos
or
dec
fs
hlt
pop
push
sub
or
mov
cwde
fld
add
lahf
sbb
add
or
adc
jle
ret
cmps
repnz
call
dec
into
js
mov
mov
cmp
bound
pop
mov
jmp
push
mov
dec
sbb
je
cmp
fstp
mov
jno
cmp
add
imul
dec
xchg
inc
mov
(bad)
in
mov
dec
dec
imul
dec
popf
nop
fidivr
(bad)
rol
aas
xor
xor
or
stc
std
push
push
xchg
ds
push
and
ins
mov
call
loopne
mov
pop
adc
das
pop
mov
dec
aas
xor
sub
lea
daa
pop
jmp
out
jmp
cmp
fisubr
cli
mov
and
mov
or
aas
arpl
pusha
sahf
pop
cmp
mov
jns
popa
leave
movs
stc
in
dec
jecxz
aaa
sbb
(bad)
and
xchg
and
popa
mov
fs
scas
bnd
push
cmps
shr
clc
std
xchg
mov
popf
or
and
adc
pop
scas
(bad)
popf
fdiv
stos
cmp
ss
adc
mov
mov
test
add
aas
jp
outs
or
cli
mov
jbe
pop
mov
jnp
or
mov
aam
leave
mov
mov
add
scas
jnp
cmc
int
mov
cmp
mov
jae
dec
cmp
retf
cld
shr
call
out
dec
mov
jb
mov
int
inc
movs
outs
xlat
or
rcr
scas
jmp
inc
movs
inc
xchg
addr16
mov
inc
cmp
cmps
fst
iret
mov
imul
xor
jecxz
sub
repz
(bad)
sahf
mov
(bad)
lods
out
or
xor
rcl
arpl
dec
(bad)
iret
ja
repz
lods
test
mov
mov
sbb
mov
inc
mov
mov
pop
xchg
mov
and
call
dec
adc
push
and
(bad)
push
xchg
xor
sub
popa
movs
in
cdq
call
xchg
retf
sti
xchg
dec
iret
jae
adc
das
mov
jo
stos
sub
enter
xchg
fld
jl
mov
dec
ret
jne
mov
cmp
inc
test
push
lods
(bad)
iret
inc
in
mov
jmp
cmc
aaa
inc
sti
repnz
jo
push
ja
sbb
pop
ss
pop
jge
or
(bad)
loop
shl
mov
push
mov
sbb
mov
mov
shr
ror
in
stc
not
(bad)
xchg
sbb
loopne
push
jle
inc
cmp
(bad)
(bad)
and
ins
out
cmp
push
call
aad
dec
jmp
jmp
iret
or
add
add
shr
leave
pop
sbb
test
dec
push
adc
mov
cmps
ret
loop
enter
lds
int3
and
pop
and
xchg
fwait
adc
cmp
mov
rcl
fstp
rol
jecxz
aaa
or
popf
outs
cmp
sar
lods
inc
adc
add
mov
fcmovb
out
cmp
test
jns
sub
aaa
add
mov
cmp
push
test
xchg
retf
cwde
jo
sbb
push
aam
test
pop
fadd
mov
xor
dec
(bad)
iret
retf
inc
pop
adc
cld
in
xor
adc
retf
dec
and
(bad)
cmp
in
cli
xchg
clc
mov
rcr
add
sub
adc
jb
popf
mov
xchg
xor
dec
mov
test
cdq
xchg
sbb
mov
in
mov
pop
inc
add
(bad)
mov
std
test
adc
cld
push
loope
jle
ficom
ret
out
mov
jb
test
scas
idiv
adc
shr
fisttp
or
aad
sbb
dec
retf
scas
stos
lods
sub
cmp
into
jp
call
out
inc
daa
imul
jge
stos
dec
xchg
mov
(bad)
jae
lea
sar
movs
mov
adc
xor
and
popa
cli
rcr
popf
in
leave
repz
and
pop
cs
xchg
xor
fisub
mov
leave
sub
js
cmps
sbb
jg
scas
loope
arpl
mov
xchg
nop
lahf
jl
pop
mov
and
pop
add
dec
out
out
lock
mov
push
call
mov
xlat
test
mov
or
sbb
outs
les
shr
push
jbe
lods
iret
or
push
and
sub
and
popa
scas
cmps
push
(bad)
fisub
jecxz
pop
es
or
ins
jl
inc
jno
cmp
pushf
hlt
xchg
inc
ins
leave
call
cld
imul
xchg
mov
test
inc
out
and
sbb
out
ror
cdq
arpl
jno
sahf
fist
jnp
pop
jp
es
inc
pop
xor
jg
jae
cdq
out
add
das
lods
inc
sidtd
push
int3
xor
pop
pop
(bad)
jae
fcom
pop
or
stc
xor
and
pop
sbb
cmp
call
mov
push
mov
and
xor
inc
inc
fnop
inc
push
stos
push
(bad)
cld
es
rcl
hlt
je
loop
cwde
dec
push
shr
and
sub
sub
loopne
push
lahf
bound
xor
retf
mov
adc
mov
sub
jl
adc
js
nop
add
bound
addr16
add
out
cmp
xor
mov
dec
cmp
test
xor
repnz
sub
xchg
retf
xor
sar
adc
mov
test
ret
inc
xor
sub
jl
and
lea
(bad)
enter
fwait
adc
test
or
adc
adc
(bad)
add
in
cmp
out
in
mov
in
sbb
mov
push
push
scas
inc
cmp
scas
dec
xchg
add
jb
adc
dec
loope
int
add
cwde
xor
icebp
and
sbb
adc
sbb
in
nop
mov
xor
fs
or
jae
test
mov
lock
xchg
pop
and
pop
push
es
iret
int
pop
xchg
jp
aas
xor
ficom
fsubr
xor
neg
jge
sbb
and
push
or
outs
inc
sub
cmps
ds
daa
sub
stos
sbb
icebp
test
push
fldenv
jmp
call
push
dec
xchg
add
cmps
imul
dec
and
inc
loope
cdq
mov
lods
retf
rcr
js
aad
int3
test
xchg
or
(bad)
push
cs
mov
pop
inc
pop
or
sbb
cmps
loopne
out
stos
js
inc
push
ins
jmp
dec
jmp
xor
icebp
popf
lods
ins
cmp
dec
push
mov
pop
jle
and
je
push
or
cmp
pop
mov
popf
xor
pusha
js
cmp
ja
test
test
xchg
cli
and
and
jg
jmp
jb
lods
sub
loop
add
daa
jno
pop
jle
pusha
mov
es
leave
call
add
sub
push
test
jo
sbb
mov
popa
xlat
pop
pushf
dec
jns
ins
ror
lea
push
push
ret
and
rcl
or
aam
pop
loop
add
popf
mov
adc
mov
push
cli
loopne
xchg
in
or
sbb
inc
mov
mov
pushf
repz
out
loope
fstp
dec
or
cmp
ins
dec
gs
xor
in
sahf
popa
in
(bad)
and
aas
add
adc
push
(bad)
pop
xchg
jns
retf
ins
dec
push
leave
lods
imul
mov
js
pop
std
mov
dec
(bad)
lahf
cmp
add
xchg
out
mov
(bad)
icebp
xchg
sbb
daa
out
jp
mov
and
retf
cmp
inc
js
xor
add
imul
mov
xor
fbstp
mov
fdiv
fs
mov
dec
and
cmp
call
pop
xor
push
loop
or
or
cmp
(bad)
push
dec
arpl
mov
pop
fcmovu
shr
and
push
xchg
dec
push
movs
inc
adc
test
mov
cmp
out
jno
cmp
inc
mov
lahf
xchg
or
lea
sbb
push
mov
push
mov
add
fwait
in
popa
imul
ja
push
bnd
add
and
mov
and
push
out
out
call
push
jmp
js
pop
in
jns
mov
pop
leave
pop
cmps
jmp
js
cmps
outs
adc
xchg
retf
sbb
enter
adc
or
and
dec
fmul
leave
inc
std
jmp
xor
(bad)
cs
jne
and
pop
in
fidivr
ret
imul
call
icebp
jl
or
pop
push
(bad)
in
fldcw
imul
and
out
aaa
mov
fnsave
in
push
adc
mov
jae
inc
out
pop
fdivr
das
imul
(bad)
push
ror
ins
cmp
jns
es
in
or
mov
and
cmp
loop
pop
mov
inc
jle
popf
push
mov
fnsave
int3
mov
or
ds
pop
lods
(bad)
cmc
xlat
inc
mov
(bad)
imul
sbb
test
fstp
aaa
stos
outs
push
dec
movs
sub
inc
jbe
fild
sbb
inc
xchg
push
idiv
mov
and
cmps
stc
xchg
fdivr
cdq
and
xor
loop
jg
loopne
mov
or
mov
gs
dec
mov
or
mov
sub
inc
pushf
inc
mov
mov
xor
xor
imul
jbe
and
js
xchg
popa
mov
jmp
lods
popf
mov
shl
idiv
adc
bound
loop
xchg
mov
cmp
and
mov
enter
sub
daa
add
cs
adc
and
or
fs
sbb
repz
lods
addr16
(bad)
ins
js
push
repnz
xchg
mov
int3
sub
outs
aas
xor
lahf
push
mov
dec
jne
test
repnz
test
les
jnp
xchg
push
adc
jbe
push
in
push
ins
mov
mov
lahf
cwde
xchg
adc
sbb
xor
out
mov
or
fistp
pop
icebp
add
aam
cmp
mov
cmp
mov
imul
pop
mov
or
movs
cmp
push
inc
mov
mov
fcmovu
push
sbb
lahf
int3
into
loopne
fldenv
fbld
jmp
(bad)
and
add
out
sbb
test
je
test
add
aaa
sub
cmp
or
add
push
pop
inc
mov
(bad)
mov
jno
fyl2x
sbb
jg
out
add
pop
jns
mov
add
aad
inc
shl
(bad)
cmp
lahf
mov
jmp
leave
rcl
loopne
add
(bad)
push
aaa
inc
jmp
cmp
pop
sti
pop
xchg
cmp
fiadd
xchg
ds
imul
jecxz
jb
imul
mov
push
fcomp
out
rcl
and
les
push
adc
cmps
inc
pop
xchg
fdiv
sbb
in
mov
pop
cmp
dec
and
cmp
js
sub
std
and
cwde
mov
sbb
mov
sti
mov
ret
ja
pop
jmp
jp
unpcklps
xchg
xchg
push
mov
xchg
(bad)
aam
jnp
sbb
jp
aas
inc
fld
ins
push
cmp
pop
lahf
mov
mov
scas
cdq
and
fst
or
adc
xchg
and
outs
cmp
inc
cdq
jne
xchg
xor
jns
jl
jnp
sub
or
out
(bad)
dec
ins
xor
sub
adc
jp
push
sub
push
xchg
cmps
xor
call
imul
jnp
lea
lods
jge
loopne
mov
inc
iret
pop
ss
movs
xchg
icebp
dec
xor
dec
cs
pushf
pop
mov
mov
rcr
inc
js
adc
sbb
jo
cdq
imul
imul
mov
rcr
push
sar
rcr
aam
popf
cmp
(bad)
call
icebp
ds
cmove
aaa
or
dec
mov
push
ficomp
jp
or
(bad)
sub
imul
push
or
inc
mov
mov
(bad)
(bad)
fld1
mov
or
call
cmp
test
cmp
push
dec
movs
fdiv
jmp
jo
sbb
dec
rcr
out
in
or
adc
pop
addr16
dec
mov
xor
fld
adc
add
push
aaa
xchg
cdq
sar
pop
adc
repnz
aam
lea
div
sub
repz
movs
mov
ret
mov
in
sbb
movs
sti
inc
xlat
cdq
mov
push
mov
push
bound
loop
stc
xchg
add
(bad)
sti
xchg
call
jg
xlat
cmp
iret
pushf
inc
test
mov
scas
repnz
shl
adc
(bad)
mov
xor
or
mov
cmc
mov
xor
jns
int3
ins
cli
cmp
xchg
jae
jecxz
dec
dec
mov
push
mov
enter
and
cmps
mov
iret
out
in
das
lahf
sbb
push
inc
ins
jmp
push
mov
push
iret
fisttp
dec
jno
xor
or
pop
arpl
movs
mov
push
pop
int3
lock
dec
inc
adc
loop
retf
inc
addr16
fstp
lds
xchg
or
sbb
jmp
mov
cmovno
mov
int3
push
in
repnz
mov
pop
cmovge
inc
ss
jns
(bad)
icebp
fwait
scas
fs
into
cld
mov
mov
out
inc
daa
stc
cmp
jp
or
lea
shl
and
push
inc
bound
or
xor
mov
inc
mov
fwait
dec
(bad)
sahf
jbe
sub
xchg
shl
mov
into
cmp
mov
stos
jnp
inc
sub
fldcw
mov
xor
int
push
scas
mov
jle
mov
cmp
retf
mov
iret
cmp
jb
dec
dec
pop
xor
rcl
pop
cwde
mov
push
xchg
scas
inc
xchg
(bad)
loope
pop
test
or
iret
xchg
aas
and
push
in
cmps
xchg
adc
rcl
mov
imul
jge
push
adc
mov
push
mov
fs
cdq
daa
iret
jnp
addr16
mov
jmp
adc
mov
(bad)
call
fbld
pop
jmp
mov
xchg
adc
pop
xor
bound
pop
or
stos
xchg
inc
fwait
retf
xchg
xchg
add
bound
loope
pop
mov
push
sbb
icebp
ss
sahf
mov
jo
sub
cmp
fbstp
mov
mov
sbb
call
test
pop
scas
mov
push
repz
ins
fnstenv
push
add
into
nop
imul
sar
inc
pop
jae
xor
xor
scas
dec
pop
scas
loope
pop
mov
loopne
call
nop
cdq
inc
pop
test
test
inc
push
pusha
pop
data16
xchg
bts
in
aad
jmp
scas
pop
loop
scas
pusha
fwait
loopne
cmc
mov
pop
mov
sub
xchg
mov
ret
cmc
mov
xor
dec
jecxz
xchg
mov
retf
or
mov
retf
xchg
mov
push
mov
dec
xchg
push
int
sub
sbb
retf
fdiv
shl
mov
ret
mov
dec
stc
fbld
das
data16
cmps
add
mov
outs
mov
scas
xchg
clc
outs
jae
pop
dec
xchg
sub
cmp
xor
inc
pushf
push
enter
sub
ss
and
loopne
jp
inc
jb
adc
or
aad
das
push
dec
jle
xchg
movs
sbb
add
leave
into
add
mov
(bad)
mov
push
outs
inc
and
call
dec
inc
outs
push
mov
or
cli
outs
xchg
sbb
cld
add
cmp
jb
out
stos
nop
mov
jno
xor
jbe
dec
arpl
sbb
mov
mov
nop
out
out
adc
lahf
movs
(bad)
sbb
sbb
popf
dec
xor
pushf
jmp
cmps
outs
daa
loopne
jmp
int
lods
pushf
test
cli
ins
pusha
pop
mov
aam
mov
mov
sbb
inc
fsubr
sub
repnz
or
pop
sbb
dec
pop
push
test
mov
dec
aaa
test
into
dec
jne
in
xchg
(bad)
(bad)
int
adc
(bad)
shl
inc
in
enter
push
jmp
lock
test
sub
push
push
sar
cwde
jge
mov
or
fisttp
inc
sub
shl
mov
mov
sbb
add
inc
in
cs
sti
jb
(bad)
xchg
stos
and
sub
sar
inc
out
push
add
and
fnstcw
call
sub
push
imul
popa
jge
or
icebp
dec
and
cdq
jbe
xchg
mov
shl
xchg
adc
cld
xor
sub
ret
lods
mov
push
mov
push
or
(bad)
stc
adc
bound
in
mov
adc
aam
push
adc
cmps
inc
push
pop
stc
daa
inc
mov
call
push
popf
or
(bad)
xlat
movs
inc
icebp
mov
imul
or
mov
cdq
stos
xor
out
inc
jecxz
push
jnp
sbb
inc
rcl
imul
add
test
push
sub
sbb
mov
rol
push
retf
pop
jg
std
outs
xor
mov
inc
inc
in
push
and
xchg
push
lds
cmp
and
icebp
jne
clc
je
ja
ins
inc
sti
lods
test
inc
and
xor
and
fsubr
add
mov
in
jo
dec
and
fistp
adc
in
jmp
in
daa
sub
pop
ja
rcl
mov
cwde
shl
and
bound
dec
or
adc
icebp
push
inc
mov
enter
sbb
push
fist
jmp
push
outs
into
add
gs
aam
add
std
test
cmps
push
xor
std
cld
cmps
jb
pop
or
push
jb
data16
dec
xlat
test
movs
bound
and
fcom
or
add
into
fdiv
fild
mov
popf
push
out
(bad)
ret
out
adc
push
outs
aad
or
int
mov
mov
pop
inc
and
mov
pusha
xchg
dec
sub
push
dec
fisttp
xor
aam
add
jne
xor
pop
(bad)
cmps
aam
push
fwait
aaa
xchg
mov
in
cmp
mov
ret
scas
loop
jmp
scas
cmp
xor
mov
xchg
adc
daa
dec
(bad)
ja
xor
cmp
cmp
sbb
lahf
mov
stc
cmp
mov
inc
pop
fisttp
inc
repz
dec
ret
pop
cmp
xor
lds
jmp
clc
jns
adc
sbb
mov
mov
daa
adc
lods
mov
push
inc
out
int3
cli
xor
in
pop
mov
stos
fld
jnp
and
sbb
mov
sub
pop
sub
loopne
fisubr
leave
push
push
xor
mov
sti
mov
xlat
mov
icebp
inc
(bad)
push
dec
inc
mov
push
add
mov
or
xchg
test
popa
sub
imul
xchg
mov
or
test
sbb
mov
popf
div
js
or
add
stos
sbb
adc
sbb
cmc
test
aam
pop
test
fnstenv
inc
lock
xor
inc
(bad)
popf
mov
ror
test
cwde
xchg
mov
test
ror
in
adc
sbb
int
push
(bad)
imul
(bad)
jle
sub
jl
mov
mov
hlt
inc
(bad)
adc
jo
push
sub
or
jbe
aad
aam
out
or
lods
or
movs
mov
dec
mov
pusha
int
and
sbb
movs
je
stc
add
adc
pop
pop
std
sub
ret
shld
mov
pop
cmps
xchg
lahf
shr
stc
inc
ret
inc
inc
fisttp
in
fiadd
sub
push
xor
ret
jae
mov
in
fnstenv
inc
(bad)
inc
adc
push
mov
mov
loop
xor
sbb
inc
mov
rol
scas
and
fst
test
jo
add
mov
xchg
scas
rcl
push
movs
inc
push
mov
out
or
cmp
xchg
jae
pushf
das
arpl
mov
out
lea
pop
lods
jns
pop
fnstsw
dec
aad
mov
jo
jbe
mov
stos
add
cmovae
or
pop
cmp
shl
and
and
mov
or
int3
retf
jns
shr
sti
lea
push
pushf
xor
sub
mov
sbb
jbe
(bad)
in
int3
nop
jo
mov
xchg
cmp
cli
cli
(bad)
mov
aaa
inc
sub
cli
pop
ins
xor
xor
jnp
or
xchg
inc
ror
mov
int3
shl
repz
shr
loopne
mov
repnz
push
jmp
jae
inc
cmp
enter
(bad)
and
in
push
mov
mov
fsub
push
mov
(bad)
sub
retf
mov
popf
test
inc
mov
int
in
pop
inc
sbb
add
sar
dec
icebp
push
or
out
addr16
jb
jmp
cmp
sbb
mov
jbe
pop
cmp
(bad)
mov
jo
lahf
mov
rcr
dec
ret
fcom
jmp
xchg
ror
sbb
or
(bad)
lds
clc
jae
xchg
jecxz
out
or
xchg
sti
(bad)
in
xchg
jns
xor
inc
push
pop
(bad)
enter
pop
mov
xlat
dec
add
pop
jmp
loopne
sub
push
aam
movs
inc
clc
in
imul
in
je
sub
shl
xor
imul
cmc
repnz
sti
je
mov
cs
bound
mov
or
add
push
ss
xchg
cld
ds
in
mov
inc
dec
jno
dec
aas
ds
cmp
icebp
pop
cld
ficom
mov
mov
aaa
retf
int
movs
sub
pop
inc
scas
(bad)
and
mov
or
push
call
cmp
cmc
dec
xchg
arpl
push
push
fs
(bad)
push
fimul
rcl
fadd
mov
test
sub
mov
fist
cmp
xchg
xchg
jp
jnp
jmp
dec
lock
pop
xchg
das
jl
repz
sbb
pop
ror
in
retf
and
pushf
xchg
jmp
dec
bound
ins
fsub
push
pushf
inc
dec
jnp
ret
xor
jo
adc
pop
cmp
shl
jae
inc
idiv
push
xor
jg
jno
xchg
loope
jo
jle
pop
adc
xchg
pop
lea
pcmpgtd
loopne
mov
jge
in
clc
dec
jns
cmp
jo
mov
(bad)
pop
not
ja
cmp
adc
daa
adc
xchg
je
ins
add
adc
inc
inc
cmp
outs
outs
call
pop
retf
lock
pop
jp
imul
pop
enter
mov
pop
js
push
out
xor
pushf
inc
and
ficomp
je
cmp
test
sbb
lahf
pop
mov
cwde
movs
lock
inc
scas
jl
dec
adc
cmp
leave
xor
fcomp
adc
and
xchg
mov
test
cmp
shr
data16
icebp
sbb
cwde
ficom
das
pop
aas
in
sbb
lds
out
jmp
aaa
daa
mov
pusha
test
arpl
or
mov
cdq
push
dec
lahf
(bad)
hlt
xor
shr
dec
xchg
sub
or
in
test
lods
test
and
cdq
pop
in
mov
and
xchg
rol
jmp
pop
inc
push
pusha
aam
dec
sahf
fcmovnbe
loope
aad
sti
xchg
or
mov
cmps
jnp
push
inc
movs
xor
pop
jmp
ss
pop
loope
xor
out
stos
cld
and
mul
aaa
loop
je
(bad)
sbb
arpl
sbb
and
mov
inc
mov
sahf
dec
sbb
sub
pushf
mov
shr
adc
cmc
retf
jo
dec
xor
vpaddusb
adc
cmp
mov
mov
xchg
iret
mov
es
jg
scas
push
(bad)
(bad)
repz
mov
jae
jo
call
mov
repnz
lods
retf
test
fcom
cmps
inc
lods
sbb
aam
pop
gs
ja
cld
ds
aad
popf
sti
test
mov
test
iret
mov
stc
dec
mov
mov
inc
or
repnz
cmc
inc
addr16
inc
inc
pop
or
mov
imul
cmc
pop
mov
cmp
je
loopne
mov
inc
mov
dec
lock
sbb
stos
mov
std
outs
sub
mov
popf
fiadd
mov
mov
cs
popa
aas
out
rcr
and
mov
dec
xchg
mov
jns
cmps
sub
jns
(bad)
cmp
cli
retf
adc
es
data16
inc
ins
adc
xor
std
shl
sub
inc
fisub
pusha
repz
adc
add
pop
push
leave
dec
inc
jmp
call
adc
(bad)
push
push
mov
or
into
mov
jl
push
sbb
push
(bad)
push
mov
jmp
push
jmp
xchg
ds
lods
add
cmp
sub
sub
xchg
sub
pusha
mov
fsub
ds
and
mov
test
inc
pop
push
mov
aas
mov
pop
retf
ins
and
and
or
pushf
pop
stos
and
iret
out
inc
push
(bad)
int
adc
pop
jmp
dec
and
pop
mov
test
mul
scas
xor
sbb
(bad)
stos
mov
in
or
push
test
push
fdiv
push
sub
xchg
ja
and
into
jmp
jno
xor
pop
adc
das
cmp
and
xor
stos
ret
xchg
mov
mov
cwde
xlat
sbb
push
mov
inc
add
ins
sub
fstp
jno
je
xchg
repz
and
jl
push
fist
es
push
(bad)
jle
adc
mov
pop
ins
push
rol
or
cmp
cs
sbb
imul
dec
adc
and
ins
cmp
inc
sahf
sbb
inc
xor
in
nop
jo
jmp
ficomp
add
mov
push
push
ins
cmp
xchg
or
mov
(bad)
dec
lds
(bad)
repnz
add
and
(bad)
int
shl
ror
dec
pop
(bad)
sti
icebp
leave
js
movs
pop
in
fistp
push
ds
cmp
jne
(bad)
cmps
adc
adc
jb
rcr
frstpm(287
xlat
mov
pushf
add
imul
push
fldcw
xor
xchg
cmp
push
(bad)
cmp
sub
cmp
movs
inc
add
outs
sar
hlt
cmc
push
into
je
sub
shl
dec
jne
pop
xor
dec
mov
pop
cmp
fiadd
shl
movs
ds
dec
es
or
jo
sub
push
inc
cli
mov
inc
xor
add
adc
xor
fdiv
xchg
cmps
jo
mov
mov
push
cdq
enter
or
ds
sbb
in
les
pusha
cmp
mov
ss
pusha
test
xchg
lods
(bad)
dec
xchg
loopne
jmp
mov
xchg
cmp
pop
scas
sahf
mov
push
jno
push
fnstcw
lahf
imul
and
cdq
leave
mov
std
add
pop
pop
es
mov
lea
cmp
js
(bad)
in
clc
sub
adc
scas
mov
movs
or
test
mov
imul
lea
ins
mov
or
inc
inc
mov
in
dec
sahf
sbb
popa
clc
cmp
(bad)
repnz
in
mov
or
jae
inc
loopne
inc
or
aam
mov
aad
mov
ret
in
lea
out
out
stc
cdq
adc
dec
mov
cli
hlt
jge
aam
std
or
push
sti
xlat
and
cmp
int
xor
das
jl
jle
daa
out
pop
mov
popf
adc
inc
xor
mov
or
and
or
mov
sub
adc
fsubp
mov
push
mov
pop
fcmovnu
cmp
outs
imul
jge
nop
sub
scas
xor
inc
or
ror
std
test
inc
mov
lahf
(bad)
in
sbb
in
cld
mov
out
(bad)
mov
and
or
ret
or
mov
jnp
inc
inc
lock
xor
and
data16
sbb
das
mov
shl
les
or
mov
popf
push
jge
cmp
and
in
loopne
sbb
jl
mov
aad
lods
xchg
or
jne
inc
jno
mov
arpl
mov
push
mov
xor
arpl
cmp
mov
in
xor
loopne
xor
xor
jno
push
outs
jle
(bad)
inc
in
test
cmp
das
or
pusha
xor
cmc
mov
inc
js
jg
and
ins
sub
mov
ret
daa
xor
int3
es
inc
xor
dec
jmp
inc
dec
fild
cmps
lea
bound
pop
or
xor
popa
inc
sar
cld
adc
xchg
mov
push
sub
loopne
fld
movhps
pop
jp
out
mov
dec
retf
(bad)
repnz
xchg
push
mov
ret
inc
inc
mov
icebp
and
xlat
out
mov
sbb
xchg
cmp
jmp
imul
scas
mov
and
mov
xor
mov
gs
adc
dec
and
clc
cmps
cmp
xor
loopne
adc
js
cmps
xchg
aaa
adc
scas
inc
inc
cmp
fcomp
push
add
adc
daa
pop
into
fldcw
adc
data16
jb
xor
sub
add
jle
jecxz
lods
inc
ds
lods
and
ja
es
call
mov
sbb
push
into
mov
mov
(bad)
test
stc
test
jecxz
xor
repnz
xchg
or
movs
push
inc
jae
mov
sti
sar
jmp
sub
xchg
xchg
xor
dec
xchg
movs
nop
imul
sbb
mov
ins
je
pop
push
outs
adc
das
sub
in
mov
sbb
addr16
add
sbb
rol
movs
lock
mov
add
in
xlat
push
xor
jge
fmul
or
push
cs
sub
mov
sbb
iret
addr16
pop
or
mov
retf
dec
add
mov
xchg
dec
xor
fs
or
mov
loop
call
pop
mov
fbstp
(bad)
int3
aam
int3
mov
fnsave
lock
lahf
mov
adc
js
cmp
mov
jo
icebp
mov
sbb
pop
mov
sub
adc
adc
pop
xor
adc
and
cmp
aas
mov
ss
push
(bad)
cmp
jae
cmp
cmp
jle
cmps
pcmpeqd
mov
lock
sbb
out
int3
pop
push
xchg
mov
pop
cmp
int3
mov
retf
fwait
dec
aaa
and
pop
mov
xchg
daa
push
(bad)
push
pop
aas
test
xchg
jl
pop
cmp
or
icebp
inc
add
mov
outs
lds
inc
mov
cmp
into
out
jns
jno
sahf
jo
push
sub
mov
push
hlt
inc
lds
(bad)
mov
and
into
push
pop
mov
mov
iret
cmp
cmp
dec
test
jg
enter
xlat
or
cmp
jmp
aad
dec
adc
mov
aas
fisub
jl
iret
mov
es
mov
lds
mov
mov
push
inc
sti
jno
jnp
pop
dec
mov
mov
mov
cli
jp
xchg
add
xchg
inc
mov
mov
push
cmp
cmp
inc
into
or
je
lea
je
push
stos
stos
cmps
lahf
jmp
cmps
int
cmp
fmul
inc
push
xchg
stos
mov
lock
jne
adc
sub
mov
cmp
and
ret
mov
pop
jbe
iret
pop
inc
into
jno
jne
dec
mov
jne
mov
adc
cwde
scas
adc
rol
push
outs
pop
dec
xor
lods
cmps
loop
pop
add
xor
std
je
shr
movs
xlat
inc
in
ins
mov
push
scas
outs
in
test
icebp
push
shl
jno
cmp
jb
push
sub
and
fidivr
cmps
jle
dec
ins
and
test
mov
add
push
iret
rol
test
push
sub
ret
in
loopne
cmp
adc
pusha
pushf
xor
and
jg
loop
js
xor
inc
pop
retf
psrad
adc
(bad)
push
out
xor
adc
dec
call
and
fcom
pushf
int
sub
ins
mov
inc
xor
pop
lods
rcl
je
fst
popa
iret
cmp
mov
xchg
cwde
pop
daa
call
cmp
int
or
pop
xchg
sbb
not
sbb
lock
loopne
mov
aam
jecxz
cmp
icebp
mov
aad
rcr
cld
dec
stc
shr
call
mov
out
cmc
out
pop
jne
sbb
shl
imul
movs
mov
(bad)
out
repnz
leave
stos
retf
push
or
ret
push
(bad)
js
stos
repz
and
push
add
mov
sahf
lods
sub
lahf
sahf
or
loopne
adc
sub
inc
or
popf
(bad)
lahf
pop
loop
add
jno
inc
mov
inc
or
mov
mov
pushf
lods
outs
inc
inc
or
cmp
push
dec
xchg
inc
cmp
fld
popf
repz
xlat
push
movs
sti
iret
clc
(bad)
cwde
cmps
xor
mov
mov
loop
shr
call
mov
movs
push
sub
push
mov
mov
rcl
inc
push
pop
mov
ds
(bad)
xlat
stc
jmp
test
in
jp
cdq
popf
hlt
popf
repz
push
jge
or
dec
js
mov
push
mov
push
sidtd
cmps
mov
pop
lds
cdq
mov
mov
pop
pushf
xchg
lods
jecxz
loopne
fwait
sub
xchg
jns
add
mov
mov
add
les
sbb
into
xor
add
addr16
shl
mov
add
xchg
jne
popf
jge
sbb
ins
jne
or
xor
push
cld
outs
sbb
rcl
into
fistp
pop
add
retf
push
sub
jbe
imul
xchg
lahf
push
cmp
(bad)
pandn
in
arpl
ja
adc
rcr
push
sub
dec
fisub
jno
daa
(bad)
xchg
jnp
pop
mov
rcl
enter
or
push
inc
pop
inc
mov
push
push
mov
jmp
adc
int
in
sub
imul
adc
jno
adc
pusha
lods
jae
sbb
lock
retf
push
sar
push
push
mov
retf
in
xchg
in
outs
call
into
int
fnstcw
push
into
sub
repnz
and
sub
dec
cmp
pop
xchg
out
pop
sbb
and
xlat
jge
add
add
mov
stos
push
push
mov
mov
xor
rcl
mov
and
leave
push
ss
shl
outs
int3
mov
cmp
ret
pop
mov
sub
int3
sti
jecxz
shr
inc
xor
inc
arpl
inc
leave
jne
cmp
cli
jnp
push
out
cmc
in
mov
cvtps2pi
sub
scas
mov
fidivr
(bad)
(bad)
and
pop
sbb
fucomi
xor
iret
cmp
push
sub
pop
pop
pop
push
jb
cmp
fbstp
mov
pushf
sub
(bad)
mov
push
jmp
xor
jb
push
cmp
movs
mov
daa
inc
mov
ja
aam
aam
outs
cmp
mov
push
push
mov
lods
xor
dec
xor
pop
sub
fadd
sub
mov
stos
sub
jmp
jle
ins
and
icebp
sub
fild
sbb
jmp
dec
jge
cs
repnz
mov
fmul
xchg
cmp
fisub
cmp
and
test
jae
inc
add
das
and
dec
fidiv
pop
icebp
lods
mov
(bad)
icebp
std
ja
mov
add
test
data16
add
std
loope
sbb
retf
mov
adc
sbb
sub
mov
lea
or
dec
repnz
mov
call
movs
fmul
loope
xor
sub
imul
scas
lahf
pushf
loope
repz
retf
cli
adc
es
jmp
pop
jecxz
ss
push
mov
mov
js
mov
(bad)
ffree
mov
add
xor
movs
test
sahf
test
add
sbb
jmp
inc
jmp
sbb
loope
retf
cmp
xchg
enter
cmc
rcr
xor
mov
mov
mov
push
ficom
and
jecxz
in
lea
jo
adc
(bad)
cli
mov
test
inc
arpl
inc
cmc
(bad)
xor
jmp
mov
jmp
adc
sti
push
pop
lods
sbb
aad
sub
inc
jmp
rol
cmps
cli
jmp
movs
mov
sbb
lahf
cmp
mov
popf
jnp
cmp
(bad)
fidiv
aaa
adc
mov
bound
movaps
arpl
setb
sub
fwait
les
push
mov
cmp
cwde
push
add
lods
push
daa
outs
xchg
jge
icebp
sub
popf
mov
(bad)
mul
xchg
jge
cmp
dec
jo
in
mov
sar
sub
or
mov
xchg
mov
lods
movs
xchg
mov
lahf
pop
mov
mov
jl
outs
retf
push
out
cli
bound
jmp
shl
cmps
mov
outs
xchg
pop
adc
adc
fdivr
test
sbb
in
aad
movs
or
out
(bad)
cwde
scas
int3
mov
jge
stos
mov
cmp
data16
ds
addr16
push
sar
fidivr
cld
scas
int
mov
or
xor
cli
mov
(bad)
fst
sub
(bad)
in
jp
push
int3
dec
pusha
pop
cwde
push
cmp
jb
mov
mov
mov
inc
mul
fisub
xchg
sbb
push
call
jne
jmp
retf
cmp
and
xor
test
jp
lahf
jp
xor
push
ss
pushf
mov
cmps
cmp
xor
push
sub
push
mov
adc
adc
mov
jl
(bad)
aam
shl
call
popf
pop
fcomp
push
pop
mov
mov
sar
loope
inc
and
jecxz
test
pop
add
sbb
aas
sbb
cmp
add
inc
rcl
in
push
cmps
inc
push
in
sbb
int
loop
je
mov
ss
push
cmps
sti
int3
scas
popf
in
scas
test
scas
movs
inc
jl
ins
mov
push
loope
pop
sbb
not
cdq
lods
sahf
add
dec
div
test
mov
jbe
lea
adc
mov
adc
xlat
movs
xchg
or
dec
repnz
push
inc
mov
sbb
dec
arpl
packuswb
pop
sub
ins
outs
add
imul
in
out
js
f2xm1
push
add
arpl
mov
mov
jmp
call
mov
cdq
add
pop
call
mov
xchg
add
jmp
fcmovnb
add
add
jne
mov
fs
jnp
inc
es
stos
ret
(bad)
ret
sbb
inc
test
sbb
fmul
mov
pusha
jbe
je
jle
inc
ficomp
cmc
es
push
sub
enter
fbld
mov
pop
add
inc
and
add
in
add
pop
into
imul
xchg
pop
jmp
push
xor
(bad)
or
(bad)
dec
outs
test
jge
scas
daa
dec
adc
push
out
dec
cli
(bad)
sbb
pushf
sub
add
fiadd
cmp
fst
iret
les
push
mov
sbb
test
cli
sub
fwait
or
mov
imul
add
test
add
mov
add
push
jae
clc
adc
mov
xchg
jmp
or
sysret
daa
add
mov
pop
rcr
pop
xor
mov
push
or
jl
dec
idiv
sub
enter
test
in
sbb
js
and
(bad)
adc
jo
pop
and
mov
mov
movs
imul
ficom
out
mov
call
xchg
cli
mov
fadd
cmp
lods
jb
mov
jo
cli
(bad)
mov
mov
enter
fcomp
cld
sub
bsr
call
rol
adc
push
push
pop
aas
test
pop
mov
cld
in
push
outs
xchg
cmp
xchg
mov
jns
inc
push
ss
jb
sub
mov
sbb
cmps
nop
add
in
xchg
mov
test
inc
jbe
pop
cmp
enter
fisub
scas
xchg
int
retf
scas
aam
fwait
(bad)
in
push
jno
add
fnsave
outs
jae
and
ds
mov
hlt
fldenv
test
cmc
jmp
ret
mov
add
adc
daa
test
test
jno
loope
mov
dec
shl
mov
sub
cmc
pop
add
dec
mov
add
push
lods
inc
inc
ss
sahf
int
loop
out
int
mov
push
xor
mov
pop
adc
xor
shr
out
xchg
hlt
(bad)
nop
loop
imul
mov
xchg
out
rol
or
ss
push
xchg
ds
pop
lock
outs
push
ins
pop
jp
cli
push
jl
retf
popa
call
mov
imul
les
lock
imul
and
xor
shl
cwde
lds
ins
enter
sbb
test
mov
sbb
dec
sub
cmc
call
xor
ins
adc
xchg
xchg
xor
div
int3
xor
fst
mov
stos
pop
xchg
aaa
jmp
pop
xchg
fnstsw
cmp
and
push
pop
xlat
add
xchg
aad
add
in
inc
aaa
xchg
data16
push
inc
sbb
and
or
and
aad
popf
mov
push
xor
movs
inc
in
nop
jmp
jp
test
dec
loop
mov
mov
lds
pop
ret
jmp
sar
loope
sbb
adc
and
or
fistp
scas
mov
clc
ds
out
fbld
fisttp
cmp
pusha
adc
stos
fistp
pop
(bad)
jno
jo
push
push
add
aaa
loope
fadd
mov
int3
push
mov
mov
xor
mov
outs
adc
mov
in
xor
outs
fist
adc
aam
mov
sub
mov
dec
ss
out
dec
jns
push
pop
(bad)
loopne
scas
ja
jge
stc
inc
sub
ja
das
push
jne
in
inc
int
repz
cmp
loopne
inc
daa
dec
into
addr16
mov
push
fisub
aam
out
jbe
loopne
je
not
inc
mov
or
pop
cdq
mov
inc
and
sbb
cdq
neg
(bad)
popf
jmp
fld
into
mov
mov
bound
leave
leave
or
jns
test
outs
aas
push
push
stc
iret
or
mov
scas
fld
jp
jb
add
jns
fistp
adc
jmp
or
fadd
dec
sti
mov
jb
inc
retf
dec
aad
jb
cmp
test
out
scas
jne
add
imul
imul
inc
movs
das
fld
xlat
push
loope
test
repnz
sub
cs
and
xchg
push
aaa
jp
outs
dec
(bad)
call
dec
dec
push
sbb
mov
ficomp
xchg
enter
ss
jle
dec
nop
stc
inc
sbb
loopne
stos
cmps
sub
dec
pop
push
sub
cmp
sub
test
cmps
icebp
cdq
sbb
xor
ficomp
repz
cmps
and
(bad)
xchg
ins
scas
ins
rcl
sub
mov
mov
into
sbb
pusha
clc
mov
sbb
mov
dec
sub
out
(bad)
pop
lds
scas
push
pusha
lock
pop
fidiv
out
pop
mov
lds
ret
jp
sub
out
out
pop
aad
or
mov
pop
imul
jbe
sti
(bad)
js
inc
jae
inc
rcl
loopne
pop
jg
retf
xchg
inc
sub
add
sbb
xchg
int
push
dec
jne
imul
arpl
sbb
inc
clc
in
pushf
adc
arpl
dec
retf
bound
or
mov
xor
mov
data16
je
jbe
mov
mov
push
repnz
and
test
mov
or
sbb
dec
aaa
clc
outs
cli
mov
lods
sbb
(bad)
push
pop
fs
mov
inc
iret
gs
and
push
add
sbb
rcr
xchg
xor
call
(bad)
enter
xchg
rcl
pop
clc
lds
mov
or
or
dec
mov
mov
shr
cs
sbb
stos
fidiv
or
adc
rcr
dec
ins
call
pop
sbb
cs
push
pop
xchg
das
or
aaa
gs
mov
fld
and
pop
and
fsubr
sbb
loopne
add
push
sub
shr
sbb
inc
xchg
lods
cli
mov
mov
out
lahf
int3
xchg
aaa
js
add
or
popa
ins
(bad)
mov
je
sbb
cld
sar
xchg
fisttp
mov
stos
cld
add
repz
popf
sti
mov
jnp
sbb
push
xor
movs
or
cld
shl
in
adc
(bad)
stos
das
and
adc
push
pop
loop
push
cmc
mov
adc
xor
cmp
fwait
repz
jno
push
sbb
push
fmul
pushf
xchg
mov
cmp
(bad)
xchg
xchg
outs
jno
aam
jae
into
daa
inc
stc
dec
(bad)
xchg
sub
push
test
sbb
lods
fdivrp
jbe
mov
xchg
inc
in
clc
clc
dec
jb
dec
jno
shr
shl
mov
das
add
popa
push
(bad)
pop
addr16
pop
cmps
lahf
sbb
push
cmovp
xchg
pusha
sbb
pop
inc
push
xchg
xchg
pop
out
call
cmp
adc
int
popf
shr
in
not
sub
js
les
lea
ja
push
pop
xor
shl
or
mov
jge
popa
fld
ffree
push
mov
imul
push
aaa
or
outs
jnp
test
ror
ja
aad
jmp
dec
(bad)
cmp
clc
push
mov
dec
cmps
inc
mov
push
and
mov
jbe
cmp
mov
gs
xor
push
pop
not
pop
dec
pop
fisub
jmp
int3
rcl
xchg
xchg
cmp
pop
movs
or
mov
stos
adc
or
xor
jne
cmp
(bad)
(bad)
call
lods
push
fidiv
mov
enter
mov
in
int
leave
add
adc
ja
add
bound
lahf
das
(bad)
cld
dec
jae
movs
push
inc
cld
inc
scas
rdtsc
mov
add
push
movs
es
push
cmps
jb
sbb
fwait
pop
cli
sub
mov
pop
push
pop
cmp
popf
push
push
out
dec
pop
mov
xchg
mov
xor
test
push
pushf
imul
mov
sub
cwde
dec
jp
in
nop
aaa
lods
int3
xchg
loopne
pushf
mov
iret
or
mov
jnp
arpl
ret
popa
frstpm(287
retf
push
out
sub
fsubr
push
data16
aaa
(bad)
pop
xlat
rcr
cwde
pop
out
adc
mov
arpl
dec
and
sti
mov
je
mov
dec
xchg
outs
iret
ficom
xchg
jbe
(bad)
(bad)
stos
sti
jmp
pop
test
inc
es
add
movs
stc
lahf
leave
push
das
inc
ins
add
pop
das
test
retf
sub
sub
mov
push
xchg
in
push
mov
cwde
or
and
js
cmovne
cmps
mov
or
in
js
mov
pushf
add
sbb
(bad)
repnz
shl
imul
mov
bound
retf
jmp
and
lea
leave
and
sub
ins
aas
call
pop
cs
ss
jo
and
icebp
cmp
loop
adc
cmp
dec
movs
jle
jne
popf
je
aad
int
jmp
xchg
or
push
ret
pusha
pop
push
loope
sbb
call
mov
adc
icebp
push
cmps
adc
gs
mov
dec
jp
sar
mov
repnz
mov
and
cmc
mov
cmp
popa
cld
movs
cmp
push
adc
xor
pop
lods
jo
cmc
cld
test
sbb
ins
cld
inc
(bad)
lods
cmp
mov
dec
(bad)
xchg
pop
mov
mov
cmps
out
mov
outs
fst
mov
sub
mov
fidivr
jae
retf
mov
jp
and
dec
sbb
lds
dec
mov
repnz
and
fidivr
ret
mov
xchg
mov
inc
or
mov
movs
mov
cmps
sbb
les
call
cmp
imul
call
fsubr
imul
jmp
pusha
stc
add
push
cmp
sub
jmp
int3
imul
jle
jns
pusha
sub
adc
sbb
push
out
adc
inc
ret
cdq
(bad)
cmp
(bad)
loop
push
xor
repnz
adc
push
or
or
push
test
enter
add
mov
add
lods
xchg
mov
nop
mov
out
xor
ins
mov
mov
mov
mov
or
mov
xlat
leave
retf
jecxz
pop
lods
mov
movs
cmps
inc
arpl
sahf
retf
dec
shr
pusha
ss
in
out
sti
xor
jle
sbb
sub
dec
pushf
jmp
cmp
sbb
fdiv
push
ins
es
pushf
cmp
dec
mov
out
jl
pop
ja
retf
sbb
push
jp
cmps
pusha
mov
xor
addr16
adc
lea
aam
lods
jo
cmps
add
and
in
cmp
jae
pop
sbb
in
dec
and
in
and
and
sub
scas
sbb
fcomp
mov
xor
push
es
inc
mul
hlt
cmp
dec
add
ja
fisttp
or
jmp
and
xchg
lods
popf
pop
xchg
sub
jp
in
das
mov
cmp
add
add
es
sub
adc
mov
mov
or
adc
mov
leave
cmp
push
ja
or
outs
pushf
jmp
and
push
hlt
push
inc
imul
cli
pop
cmp
xchg
test
scas
push
sbb
sbb
retf
scas
push
fidiv
sub
inc
mov
ror
jmp
pmaxub
or
add
jecxz
push
iret
adc
add
enter
cs
test
sbb
sub
fwait
sar
inc
adc
shl
test
pusha
or
sub
add
sbb
pop
sbb
push
mov
sub
jmp
pop
fisubr
aas
mov
push
jnp
inc
push
fld
clc
and
dec
out
mov
xor
int
test
xchg
inc
pusha
pop
adc
mov
js
retf
(bad)
out
sub
cld
cmps
fild
sti
movs
or
out
add
aad
daa
jecxz
sbb
push
add
push
aas
inc
cmp
add
movs
pop
aam
out
or
mov
ret
scas
jge
sbb
dec
mov
or
cmp
rcr
mov
not
sbb
test
loop
pop
add
out
fidivr
leave
rcl
mov
pushf
mov
jns
mov
push
(bad)
add
inc
and
xchg
popf
shl
es
inc
mov
xchg
arpl
or
push
ficomp
add
pop
das
sbb
dec
out
sbb
lea
dec
fld
add
ds
add
xor
nop
imul
fisub
out
xor
dec
call
sar
fs
imul
mov
sbb
add
xchg
cmp
pop
(bad)
inc
cld
cmc
sub
inc
popa
lock
mov
fadd
adc
jno
jl
jmp
xchg
pusha
js
dec
add
fnstenv
adc
mov
cwde
add
or
mov
ja
scas
(bad)
mov
mov
xor
retf
cmc
maskmovq
neg
jge
imul
fs
sbb
dec
mov
ds
and
mov
cmp
rcr
aad
sbb
imul
mov
xlat
sub
mov
(bad)
scas
in
push
xlat
call
iret
jno
sub
mov
xor
jmp
jae
lds
fxch
jae
ret
sti
or
pop
stos
pop
test
mov
push
pop
imul
arpl
lea
sbb
jecxz
scas
dec
gs
or
out
rcl
push
add
xchg
adc
push
mov
ins
dec
retf
outs
add
cmp
cli
loope
adc
xlat
in
push
pop
fisub
inc
sub
or
xor
push
cmp
mov
push
scas
fsubr
and
aam
inc
push
out
add
sbb
cmps
mov
pop
pop
xchg
push
jnp
cmp
pop
pusha
mov
sti
sub
push
dec
daa
std
pop
lds
push
loop
xor
rcr
pop
cmps
hlt
jns
adc
imul
jbe
push
jmp
shr
xor
adc
fst
(bad)
data16
mov
cs
(bad)
xchg
inc
fdivp
dec
dec
mov
and
jmp
out
outs
xchg
call
mov
aaa
push
gs
push
imul
stos
cmp
movs
fwait
loop
sbb
mov
jg
scas
scas
dec
(bad)
in
push
aas
cmp
cmp
sar
fsubp
and
(bad)
(bad)
sbb
cmp
stc
je
lods
scas
push
(bad)
and
xchg
and
outs
mov
hlt
push
jle
dec
sbb
stc
popf
out
cwde
rol
inc
pop
int3
and
call
fwait
push
push
pop
push
inc
push
cmp
sub
mov
dec
loope
add
xchg
into
cmp
or
in
sbb
jns
lods
div
inc
retf
imul
stos
mov
in
xlat
xor
outs
pushf
iret
leave
cmps
xlat
movs
ja
mov
xchg
dec
dec
sub
scas
std
jae
scas
xchg
jmp
push
and
shr
mov
jmp
loopne
inc
pop
cwde
cmc
(bad)
cmp
out
dec
stos
adc
leave
je
cld
push
adc
push
js
mov
in
ds
fisubr
dec
jmp
xor
or
pop
and
cmp
push
mov
mov
cld
adc
jle
mov
lea
imul
sar
mov
ror
mov
adc
aam
mov
mov
imul
hlt
loopne
cmp
stc
mov
mul
inc
outs
cmp
sbb
into
repz
in
push
daa
adc
sbb
bound
lds
inc
xchg
jmp
int3
test
or
call
dec
add
ja
js
mov
dec
(bad)
push
int3
outs
and
out
mov
sbb
shl
adc
mov
xor
shl
push
jg
daa
fnsave
or
test
mov
mov
hlt
mov
inc
adc
mov
hlt
sti
jns
xor
sub
fdivrp
clc
adc
lahf
(bad)
loop
out
adc
mov
test
out
sbb
mov
stos
in
clc
lods
call
sar
paddusb
xchg
adc
add
inc
lahf
pop
sahf
xchg
(bad)
push
test
movs
cmp
or
das
in
add
pop
push
mov
cdq
and
sub
shl
sub
add
lock
push
jns
adc
xchg
xchg
das
push
sub
mov
xor
nop
rcl
or
movs
mov
dec
out
dec
cmc
(bad)
and
int
retf
pop
xlat
test
add
mov
or
xchg
adc
push
or
mov
or
neg
sbb
or
and
out
scas
and
leave
not
push
mov
call
adc
jmp
aam
aad
icebp
cmps
push
push
xchg
pop
cmps
rol
ret
out
lock
rol
les
mov
adc
inc
pop
loope
iret
inc
dec
jnp
mov
mov
cld
test
sub
push
repz
push
mov
xsha1
cmps
mov
push
mov
xor
dec
jge
sub
ds
sub
icebp
imul
addr16
sub
data16
icebp
mov
sbb
popf
adc
mov
jl
int3
ins
mov
adc
mov
ror
mov
das
mov
iret
and
mov
jns
cmp
inc
jmp
(bad)
nop
iret
sbb
jmp
cmp
adc
nop
fistp
daa
dec
pop
pusha
shl
bound
test
push
shr
push
daa
xchg
out
in
sbb
push
(bad)
ja
enter
stos
jmp
adc
(bad)
stc
lods
sar
jbe
xchg
push
test
in
test
rol
pop
scas
jl
sub
scas
push
jae
icebp
sbb
test
push
mov
xchg
(bad)
popa
jae
ror
xchg
cmp
rcr
clc
data16
enter
mov
push
out
sub
push
stc
lds
mov
mov
in
push
sub
(bad)
mov
loopne
add
mov
push
and
nop
fwait
inc
addr16
outs
pop
xlat
lods
xchg
popf
popa
stc
scas
hlt
adc
cmp
push
cdq
outs
jnp
sub
dec
fwait
push
cmp
mov
mov
push
jno
cmps
jnp
mov
leave
jg
sbb
int
or
adc
xlat
push
data16
lods
daa
push
mov
push
pop
sub
fcmovbe
shr
int3
xchg
stc
adc
scas
dec
adc
fsub
jp
inc
sbb
push
pop
nop
inc
into
imul
mov
addr16
test
mov
daa
dec
fdiv
bound
adc
add
jae
push
push
or
test
js
inc
icebp
xor
push
jmp
je
ja
inc
daa
mov
retf
scas
aam
lods
out
outs
loopne
retf
jae
cs
jbe
sbb
and
adc
gs
mov
dec
stc
in
push
push
and
ds
scas
test
gs
addr16
sbb
fmul
fiadd
mov
repnz
adc
and
mov
je
xchg
repz
(bad)
ins
inc
mov
pop
pop
das
fist
mov
pushf
mov
nop
mov
jb
shl
aas
mov
cmp
dec
loopne
les
js
ds
retf
aaa
shl
retf
pop
inc
mov
out
nop
sbb
add
xchg
pop
loopne
jo
test
jb
lods
inc
jo
mov
inc
push
xchg
stc
lahf
cld
push
(bad)
xlat
daa
std
sbb
inc
loopne
mov
out
cmp
xchg
add
lods
sahf
rcl
inc
aaa
push
sub
add
xor
add
(bad)
shr
out
or
push
ja
inc
cmc
and
jo
jmp
add
(bad)
cld
sar
mov
int
push
loope
(bad)
xchg
jae
and
xchg
imul
fucomip
shr
mov
int
imul
jge
jle
aaa
aad
ror
or
ds
sbb
pusha
mov
xchg
dec
mov
jb
or
and
test
fsubr
sbb
inc
and
mov
ss
push
or
sub
xchg
loopne
sub
sub
rol
dec
sahf
std
into
or
cwde
mul
mov
sub
mov
jecxz
ja
nop
loop
repz
jmp
mov
xor
push
or
call
mov
adc
dec
mov
push
and
pop
bound
mov
mov
test
test
sub
pop
call
jo
shl
dec
inc
inc
fist
fmul
xchg
or
sbb
cwde
js
cs
pusha
(bad)
mov
jae
pop
lea
leave
push
mov
or
aaa
xor
sbb
(bad)
add
in
mov
or
shl
jo
cmp
leave
gs
dec
fsubr
in
pop
push
adc
sub
call
dec
repz
sbb
in
lock
add
xor
jmp
cmps
into
cmp
sbb
fidiv
(bad)
in
mov
in
mov
push
dec
adc
outs
dec
dec
push
inc
scas
adc
shl
pop
pop
ret
mov
popa
fxtract
in
jbe
mov
mov
inc
mov
sbb
mov
outs
icebp
sub
repz
lea
mov
inc
add
std
loop
inc
or
adc
xchg
cli
xchg
pslld
pop
cmp
cmp
jo
es
clc
je
int3
adc
cwde
sbb
sub
(bad)
xor
sub
call
ins
or
shr
adc
xor
out
or
dec
mov
or
ss
mov
test
sbb
outs
or
out
(bad)
test
(bad)
inc
and
push
pop
hlt
cmps
xor
sbb
pop
popf
add
cmc
aas
jp
dec
mov
xchg
pushf
je
inc
sbb
push
fdiv
xchg
cmp
loope
dec
inc
out
xchg
rcr
push
cwde
mov
fsub
mov
pop
push
cmp
aaa
jno
cld
cmp
xor
test
adc
jl
cmp
jmp
fmul
sbb
dec
cmps
sub
cmp
dec
pop
pop
sub
mov
sar
or
pop
inc
mov
sub
xor
test
ror
scas
or
push
mov
dec
(bad)
mov
mov
ins
sub
dec
in
cmp
test
mov
sar
ss
out
jg
clc
mov
pop
shl
jle
out
rcr
loope
inc
sbb
xchg
shr
cs
dec
sub
jecxz
(bad)
dec
outs
rcl
test
jle
mov
out
fst
mov
imul
pushf
sbb
add
or
out
sbb
dec
xor
sbb
cmp
je
imul
icebp
in
adc
sbb
les
cli
xor
and
and
mov
lods
pop
inc
mov
push
sub
xchg
out
jns
adc
loope
(bad)
(bad)
pop
imul
jbe
pop
inc
xchg
pop
pop
adc
push
xor
cmp
loop
mov
cdq
ds
sub
shr
das
adc
sub
iret
push
mov
sub
jne
stos
mov
not
sbb
add
cmc
or
lods
mov
pop
push
inc
adc
jmp
or
mov
call
(bad)
cmc
es
cmp
push
cli
sbb
sbb
jo
dec
inc
or
mov
(bad)
jge
lods
or
add
and
pop
pop
mov
cmps
mov
jno
std
dec
dec
je
mov
push
out
data16
pop
xor
aam
inc
stc
pop
push
sar
add
mov
sbb
ins
jno
in
jne
pop
int
mov
iret
out
mov
cmp
jb
mov
mov
arpl
outs
loope
mov
inc
icebp
jne
loopne
int3
loopne
popa
cld
repz
mov
pop
and
std
add
pop
mov
sub
(bad)
adc
add
cmp
stos
cmc
and
dec
xchg
ror
push
aad
xor
out
xchg
jmp
xlat
fnstcw
xor
adc
hlt
arpl
xchg
pop
sub
lods
out
and
push
xchg
xchg
js
shr
dec
push
sub
push
int
cmp
cmps
into
cmp
cld
pop
lock
outs
jne
in
mov
sar
inc
fld
movs
fwait
enter
jp
repz
dec
cmp
int
dec
imul
mov
js
cmc
cmp
in
mov
adc
push
dec
rol
mov
dec
mov
xchg
pop
jle
push
ds
fnstsw
inc
push
cmps
cld
mov
mov
pop
ror
or
rcl
jnp
in
pop
pop
mov
cmp
fs
adc
mov
out
push
test
repz
fwait
jne
imul
pop
mov
jb
push
(bad)
pop
push
sub
sub
(bad)
mov
push
lahf
jae
dec
push
add
fst
push
pop
sbb
sub
xchg
loope
jg
call
test
and
mov
lods
les
out
push
ret
adc
inc
(bad)
adc
sub
(bad)
cmps
pushf
nop
add
mov
sbb
mov
pop
hlt
pop
mov
pop
bound
mov
repz
icebp
retf
in
mov
stos
add
inc
adc
xchg
mov
loopne
pop
pusha
ficom
mov
inc
movs
mov
add
gs
xor
pop
xlat
adc
outs
pop
addr16
mov
or
inc
add
clc
cwde
mov
push
hlt
or
mov
cs
or
mov
scas
icebp
and
mov
outs
mov
or
cli
jae
enter
mov
icebp
shr
mov
mov
lea
cli
pop
add
data16
pop
fwait
mov
adc
imul
mov
shl
shr
in
mov
mov
imul
add
add
add
push
(bad)
lods
aam
jle
sbb
mov
das
push
xor
or
inc
sbb
das
dec
popa
dec
jbe
stos
mov
retf
mov
out
adc
lods
stos
cmp
ror
cmc
push
sar
push
xchg
bound
popf
arpl
xor
vpmuludq
call
xor
push
test
push
jbe
jge
or
pop
jge
adc
test
(bad)
fcmovbe
lahf
pusha
mov
fist
mov
in
fwait
mov
xchg
sti
fsubr
fnstsw
pop
mov
aad
or
cmps
jno
sub
in
or
test
ins
mov
mov
fidivr
pop
into
mov
adc
or
enter
lea
pusha
or
push
test
loope
xor
aad
aam
jne
push
pusha
imul
and
and
add
ins
data16
sub
ins
or
je
cmp
jb
loope
(bad)
cmp
imul
test
add
cmp
xor
(bad)
cwde
retf
pop
push
mov
sbb
add
mov
pop
jmp
push
repz
xor
pop
lods
push
xchg
frstor
retf
add
jg
jns
sbb
sub
imul
arpl
lahf
mov
adc
sti
ins
pop
into
in
pop
adc
test
sbb
xchg
(bad)
outs
xchg
push
pusha
jno
jmp
in
mov
out
loopne
mov
dec
data16
pop
cmps
sub
mov
cmps
std
inc
inc
xor
inc
popa
push
js
call
in
not
mov
mov
stos
mov
or
shl
xchg
pop
jecxz
xchg
push
inc
movs
ficom
or
or
push
mov
out
or
not
inc
xlat
in
sub
push
gs
(bad)
ds
(bad)
and
cmps
mov
hlt
adc
pop
adc
mov
jge
in
sbb
push
sbb
fwait
ja
outs
fdivr
out
arpl
add
pop
inc
jmp
cmp
push
sub
mov
nop
lods
arpl
call
ins
cld
enter
aaa
push
mov
push
mov
(bad)
xor
leave
aaa
popf
sbb
loopne
fisub
mov
mov
scas
sbb
(bad)
fsub
push
movs
jno
mov
dec
stos
jo
inc
repnz
rcr
xor
stos
mov
(bad)
int3
xchg
loope
call
mov
dec
cdq
xchg
lahf
cmps
push
cmps
out
fs
int3
aam
out
out
xchg
in
xor
push
jg
mov
xchg
lock
int3
ins
add
iret
add
ret
sub
bound
adc
arpl
mov
pop
cs
jle
mov
sar
jae
cmp
add
cmp
test
add
or
out
xchg
pop
call
int
dec
add
inc
clc
mov
out
bswap
jg
pushf
fdivrp
ins
xchg
repnz
jle
loope
cwde
xchg
jb
mov
fs
mov
ret
fdivr
fistp
add
dec
inc
lahf
and
adc
mov
jns
aas
add
inc
sub
add
push
out
test
in
mov
inc
repnz
sub
sbb
xlat
add
test
ins
inc
lods
sub
sbb
cmp
or
jbe
ja
add
pop
inc
lds
test
popf
fisub
cmps
cmc
je
cmp
icebp
sub
pusha
pop
or
stc
xor
mov
data16
out
scas
cli
retf
leave
sub
jle
dec
pop
push
gs
adc
mov
cld
xchg
aas
mov
in
mov
in
jge
push
cmp
popf
pop
sbb
(bad)
fwait
aas
ficom
sbb
mov
pop
es
dec
neg
dec
retf
sbb
stc
lods
add
call
dec
retf
jnp
jbe
pop
pop
or
out
adc
push
cdq
mov
out
push
dec
data16
sahf
or
xchg
jb
sub
inc
fisubr
imul
loopne
add
push
adc
es
xchg
add
repz
out
inc
shl
cmp
mov
or
cmps
call
retf
sub
xlat
jo
sub
jb
das
bound
mov
ja
pop
jecxz
xchg
add
inc
jbe
sub
add
ret
xor
cwde
add
dec
jle
test
inc
or
jg
or
mov
sub
clc
ss
jnp
pushf
hlt
push
scas
or
push
xor
jns
(bad)
idiv
in
dec
pop
xchg
jle
fsub
data16
pop
add
mov
dec
(bad)
cmps
jle
in
lock
outs
sub
add
retf
lea
mov
add
mov
push
fistp
daa
xor
les
mov
sub
push
add
fbld
imul
(bad)
cmp
xlat
stos
aas
or
mov
mov
jbe
in
out
imul
sub
mov
popf
xchg
stc
push
sbb
loope
and
adc
dec
je
push
lock
sbb
(bad)
mov
and
ss
lea
add
in
mov
push
(bad)
mov
and
test
scas
imul
adc
call
js
xchg
mov
inc
lds
sar
add
push
mov
or
xchg
bound
push
xchg
js
jne
out
mov
dec
std
loope
in
cmp
int3
ins
test
fwait
add
add
punpcklwd
cmc
pop
test
aam
pop
mov
add
or
fcom
stos
sub
jo
pop
shl
shl
imul
or
mov
pushf
cmps
jp
les
push
outs
loope
dec
push
add
rcr
inc
mov
dec
out
sahf
outs
and
les
dec
(bad)
stc
das
jg
in
into
test
cmp
and
adc
dec
call
pop
ret
or
out
xlat
neg
inc
cli
jg
enter
(bad)
mov
int3
add
repz
add
fwait
cmc
lods
push
mov
aad
jns
lock
cdq
test
push
div
mov
xchg
cmps
xchg
ret
icebp
sub
dec
pusha
cld
xchg
add
ja
xlat
cmp
sub
xchg
cmp
loop
cmp
cs
mov
fadd
stc
adc
or
push
(bad)
jg
fsubr
inc
push
jg
leave
mov
sti
sub
lods
inc
jle
jl
or
dec
shl
sub
idiv
std
and
xchg
pop
pop
movs
pop
(bad)
xor
leave
int3
imul
adc
add
bound
std
mov
mov
dec
adc
cmp
mov
les
loopne
mov
cdq
imul
imul
or
es
test
outs
fnstcw
lea
addr16
pusha
sub
in
(bad)
data16
lds
dec
mov
push
mov
mov
xor
test
lahf
ficomp
jnp
les
jbe
xchg
xor
push
push
lock
cli
push
not
pop
and
xchg
xchg
dec
push
aaa
icebp
cmp
dec
inc
and
cs
mov
xchg
or
js
xchg
rol
js
(bad)
aad
cs
lds
push
push
jnp
cmp
je
add
push
dec
sub
outs
jp
mov
fistp
xchg
mov
cmps
and
and
push
fist
jb
clc
mov
mov
sbb
mov
push
jecxz
shl
test
imul
daa
aaa
pop
pop
leave
xor
inc
outs
cmp
dec
sub
xchg
mov
les
cmp
mov
xor
bound
scas
ror
cmp
push
push
add
je
sub
dec
adc
pusha
movs
ror
iret
int3
pop
and
cld
int3
mov
mov
adc
daa
lods
dec
nop
jbe
ds
lods
pushf
pop
sub
mov
jbe
jno
jmp
mov
test
sub
ds
or
xchg
or
cmp
aas
or
pop
and
cmp
inc
cdq
in
std
(bad)
jmp
inc
test
xor
dec
in
pushf
dec
clc
shl
fimul
outs
in
and
mov
imul
int3
jnp
in
dec
cmp
imul
add
xchg
adc
or
push
or
xchg
fiadd
sub
pop
(bad)
lea
dec
in
shr
inc
xchg
mov
pop
je
cmp
test
je
cmp
movs
mov
xor
idiv
fdivr
(bad)
stc
jo
(bad)
out
data16
fst
jl
fild
scas
mov
sub
add
imul
clc
cmp
cmc
jecxz
dec
inc
cmc
ror
imul
or
push
clc
mov
pop
jle
into
xchg
aam
hlt
repz
repnz
or
sbb
not
fnstsw
(bad)
(bad)
lock
adc
pop
mov
cs
(bad)
nop
and
mov
test
lahf
or
fwait
sar
ja
inc
pop
jp
or
in
stos
push
add
or
loop
dec
bound
pop
push
jmp
xchg
mov
jno
cmp
mul
pop
jne
call
adc
mov
and
cmp
jge
iret
xor
out
bound
mov
sub
jmp
popf
out
outs
ja
retf
sti
sub
or
add
xchg
xchg
arpl
loop
jbe
lods
fs
push
sbb
jae
cmp
sub
jmp
fidiv
jno
adc
into
cmp
daa
push
gs
int3
lea
out
jb
push
in
mov
loopne
into
sbb
test
popf
enter
mov
inc
jae
add
jp
dec
int3
cmp
repnz
je
mov
cld
ror
pop
pop
jb
shl
adc
(bad)
out
inc
sbb
mov
loop
shl
mov
xor
out
cwde
fisub
popa
ret
add
or
les
xchg
or
lock
pop
mov
push
mov
stos
cmc
mov
adc
and
std
sbb
test
loopne
pop
mov
scas
pop
outs
sbb
push
lods
ins
cmps
imul
lahf
sbb
dec
(bad)
mov
hlt
scas
push
outs
mov
jno
sar
or
dec
or
mov
mov
loopne
call
inc
mov
xchg
fnstsw
push
das
(bad)
mov
setnp
dec
(bad)
int
retf
ins
mov
mov
cmp
add
sub
inc
sbb
or
loopne
hlt
mov
fld
add
daa
sbb
jecxz
mov
jo
jns
enter
inc
pop
lahf
into
fldenv
mov
ins
stos
sbb
cmp
ins
inc
imul
popf
ret
xchg
ins
je
push
cli
mov
xchg
sti
es
rcl
call
push
daa
in
retf
fcom
sub
imul
cmp
jmp
add
cmps
ja
or
and
mov
popa
dec
adc
sahf
jmp
mov
xlat
cmp
div
stos
scas
dec
and
jp
inc
shl
dec
aam
icebp
js
inc
lahf
jmp
leave
test
bound
jmp
sahf
outs
in
lock
and
or
jb
scas
and
fstp
xor
(bad)
pop
cmp
rcr
popf
fnclex
xchg
daa
movs
mov
jmp
xor
stc
xor
jecxz
pop
movs
dec
js
call
push
dec
mov
xchg
add
lods
xchg
cli
mov
dec
pop
call
pop
xchg
and
fild
(bad)
fs
xchg
jbe
mov
(bad)
mov
rcl
inc
fild
jbe
dec
rol
retf
outs
and
(bad)
stc
xchg
mov
sbb
xchg
dec
jmp
ins
inc
inc
pop
hlt
sbb
or
(bad)
neg
mov
movs
dec
xor
mov
and
and
fst
jl
(bad)
ss
cs
(bad)
inc
aas
pop
out
pop
movs
(bad)
push
cmc
retf
cmp
out
sbb
icebp
popa
cmp
dec
lock
out
call
(bad)
sbb
push
cmps
fisubr
(bad)
jge
ss
mov
adc
sbb
cmps
adc
lahf
clc
adc
daa
adc
ret
push
pop
mov
fs
(bad)
dec
sbb
pop
in
fstp
jl
dec
mov
jo
jmp
sub
enter
jae
pop
jp
push
cmp
orps
adc
inc
xor
inc
push
or
lock
xchg
shr
jb
aas
dec
stos
or
or
push
and
sub
mov
fsubr
out
cmp
xchg
test
xchg
rcr
sub
pop
arpl
in
push
mov
mov
arpl
imul
inc
jb
imul
adc
add
repz
xor
and
ror
fwait
idiv
loopne
rcl
pop
mov
in
clc
sub
pop
enter
cmp
aas
pop
in
shr
(bad)
std
mov
push
cmp
retf
outs
movs
cmp
lea
or
dec
pop
mov
je
pop
sbb
sub
push
add
fwait
test
xchg
sbb
arpl
push
mov
cmp
or
mov
xor
add
imul
iret
xor
test
je
das
ret
cmp
in
or
jmp
and
(bad)
stc
adc
and
sub
and
dec
fdivr
test
xor
adc
sbb
std
fistp
mov
loopne
add
mov
push
ret
hlt
inc
adc
out
xor
in
repz
fisubr
jbe
mov
push
fsub
push
out
lock
sub
sub
mov
cwde
fild
sar
sbb
in
cwde
jecxz
jb
push
dec
mov
test
mov
outs
sbb
xor
sbb
mov
inc
movs
mov
add
jmp
push
inc
xor
xor
aaa
fnstcw
js
dec
repz
mov
adc
and
pop
pop
push
xor
int3
mov
dec
pop
jb
pop
mov
cmc
cli
push
jb
in
test
call
test
inc
ror
inc
jb
retf
dec
xchg
push
cwde
jge
dec
fstp
(bad)
stc
dec
lea
cmp
xchg
lods
xor
cmp
inc
add
stos
pop
mov
pop
mov
push
std
daa
hlt
mov
jecxz
pop
shr
cs
pop
test
xor
in
mov
pop
push
stc
adc
xchg
xchg
addr16
fdivp
add
cmps
inc
pop
xchg
lods
mov
sbb
sbb
outs
nop
jae
lods
repz
shl
cmp
and
mov
stos
ins
shl
mov
pop
jae
mov
add
adc
out
aas
cdq
and
outs
ret
ror
jmp
push
call
movs
mov
inc
mov
test
sbb
movs
mov
inc
in
mov
ds
lahf
test
dec
call
jmp
icebp
out
mov
adc
cmp
inc
inc
jle
js
mov
inc
adc
call
jb
xchg
test
pop
std
xlat
enter
shr
adc
inc
dec
push
mov
sbb
add
mov
xchg
outs
inc
mov
clc
or
enter
jns
in
and
shl
rcl
scas
scas
popa
sbb
repnz
mov
or
push
sub
mov
or
jge
scas
inc
fistp
xchg
dec
int3
ss
cmp
cmc
pop
int3
or
mov
xchg
dec
dec
xchg
movs
mov
call
mov
push
adc
int
push
les
or
ror
jecxz
cmp
jmp
pop
in
cmc
fwait
mov
arpl
leave
arpl
jnp
jbe
mov
add
cmp
mov
push
fcomp
and
push
or
jb
mov
sbb
xchg
or
imul
inc
dec
xchg
lds
xor
dec
movs
ss
sti
push
adc
fwait
mov
add
xchg
sti
inc
lahf
and
or
nop
push
or
das
ror
sbb
call
ja
add
out
jo
sub
mov
bound
pop
int3
and
icebp
dec
sbb
popa
hlt
jnp
lods
les
and
mov
pop
int3
jp
repz
mov
rcr
sbb
jp
push
das
test
(bad)
sbb
(bad)
ss
jae
adc
push
stos
add
pushf
ja
(bad)
aad
pop
cmp
jo
ja
cmp
sti
inc
mov
add
jns
push
or
scas
mov
cmp
dec
call
xor
adc
or
or
lock
jmp
imul
and
data16
mov
pushf
xchg
cmps
or
mov
enter
xor
mov
out
cld
fcom
mov
xchg
jp
call
(bad)
pop
cmc
push
loopne
cmp
in
inc
and
sysret
xchg
jno
cmps
out
or
jne
mov
ror
lock
test
lods
(bad)
dec
daa
adc
pop
push
fdivr
out
xor
add
imul
inc
mov
xchg
(bad)
mov
icebp
mov
popf
cdq
fwait
cmps
sbb
stos
pop
xlat
mov
hlt
add
pusha
push
push
jnp
inc
repnz
data16
inc
outs
xor
mov
dec
dec
inc
cwde
arpl
adc
pop
mov
lods
lds
adc
or
mov
js
call
push
mov
mov
cmps
sti
pushf
rol
push
adc
mov
les
push
jns
faddp
pop
adc
stos
xchg
cmp
and
pop
test
(bad)
push
bound
jno
test
dec
imul
mov
iret
call
cmc
add
dec
add
test
cmp
xor
push
add
lods
outs
cld
dec
mov
out
stos
push
or
out
lods
inc
dec
inc
and
pop
jmp
fistp
(bad)
sub
ss
fwait
mov
add
inc
movs
pop
cmp
out
push
call
cmp
in
fisub
aaa
outs
push
cdq
mov
and
sbb
(bad)
imul
fstp
test
adc
inc
xchg
mov
mov
mov
gs
shl
or
push
dec
jg
(bad)
push
ins
xor
leave
or
enter
jecxz
sub
outs
clc
xchg
js
in
icebp
out
push
cmps
fadd
lahf
cmp
inc
std
jle
jns
(bad)
xchg
ds
add
test
inc
mov
cmp
xor
mov
mov
inc
dec
mov
and
ds
inc
add
mov
mov
sub
loop
jecxz
xor
dec
and
dec
gs
mov
sub
sub
xchg
jb
loopne
sub
stc
rcl
xor
js
movs
dec
arpl
call
pushf
or
(bad)
pop
push
cmps
call
bound
(bad)
ja
hlt
ins
mov
mov
imul
clc
repz
sbb
ins
aam
mov
jne
jecxz
ds
or
pusha
data16
cmp
mov
push
mov
paddusb
xor
das
scas
iret
leave
jge
dec
adc
popf
pop
inc
adc
push
imul
dec
fbstp
cmps
xchg
pusha
add
retf
mov
stc
jae
cmp
mov
mov
(bad)
in
xchg
add
sbb
shl
pop
sbb
push
rcl
fwait
inc
sbb
mov
or
popa
in
rol
les
mov
adc
xlat
sbb
loope
mov
adc
mov
sbb
xor
sahf
loop
push
sub
call
arpl
dec
sub
imul
cmps
stc
add
loopne
ret
jne
xacquire
imul
popa
or
or
sbb
or
fld
daa
xchg
dec
lds
dec
sub
aam
test
pop
mov
sbb
xchg
pop
or
or
adc
mov
push
cdq
mov
cld
jbe
add
sub
mov
retf
imul
cdq
push
in
movs
cmps
and
jmp
test
scas
push
push
fwait
out
cmp
cmp
add
mov
imul
jmp
jb
inc
add
movs
rol
mov
lahf
and
add
pop
fxch
sub
add
jns
std
and
or
enter
sub
lahf
enter
push
xchg
jb
cdq
pop
lods
iret
popf
mov
cmp
fwait
xor
repz
or
sbb
ss
(bad)
repnz
pop
ja
cmp
ins
sbb
mov
jge
add
pop
pop
imul
sub
inc
daa
xchg
ins
cld
(bad)
outs
stc
inc
inc
jge
dec
stos
mov
sbb
push
mov
cmp
jge
into
pop
sbb
cmp
int3
jp
(bad)
jo
jmp
gs
adc
dec
mov
mov
xchg
mov
fbld
pop
fwait
pop
or
lea
inc
jl
sbb
ins
je
ja
pop
nop
ja
movs
pop
inc
cmp
jge
imul
mov
sub
int3
and
lahf
ds
cmps
pslld
scas
aaa
iretw
pop
les
imul
pop
in
sub
cmp
aad
mov
gs
stos
ficomp
fcmovnbe
mov
sbb
mov
into
inc
dec
ins
jb
mov
mov
jp
sahf
or
mov
or
ins
and
push
mov
push
popf
test
and
mov
cmp
mov
mov
or
mov
bound
mov
xor
cmp
in
xchg
fs
add
std
stc
inc
cmp
movs
xor
call
mov
mov
add
inc
js
test
jecxz
add
call
sub
test
movs
pop
pop
push
les
(bad)
lahf
icebp
imul
std
movs
or
xchg
adc
push
data16
in
retf
fwait
mov
lea
dec
dec
jbe
pop
push
mov
mov
stos
sbb
mov
jecxz
mov
popf
or
lds
aas
sub
cld
bsr
ds
push
lods
adc
not
movs
scas
test
ret
xchg
bound
call
out
outs
int
repnz
push
sub
mov
shl
mov
push
loop
cdq
cmp
lock
shr
aam
pop
xchg
jle
lea
mov
cwde
pushaw
xchg
enter
es
mov
shr
loopne
ret
push
cmp
pop
in
jg
mov
es
or
xlat
jmp
out
sub
dec
pop
inc
sub
xchg
cld
add
add
jbe
fld
inc
and
popa
sar
shr
xchg
mov
lock
xchg
pop
mov
push
fst
retf
daa
lods
sbb
jo
cli
or
or
cs
mov
xchg
pop
sbb
call
xchg
xor
std
inc
jo
mov
adc
dec
push
cmp
popf
sar
movs
nop
push
shl
lahf
xchg
(bad)
mov
or
fnstsw
jae
xchg
pop
lods
sti
xchg
fwait
pop
inc
clc
pushf
adc
jb
unpcklps
out
stc
aas
mov
adc
addr16
jns
imul
adc
jecxz
xchg
xor
mov
mov
out
push
mov
mov
push
aaa
fisubr
addr16
push
and
adc
imul
jp
jge
or
mov
call
adc
jmp
adc
mov
movs
dec
lods
adc
les
pop
or
jns
adc
pop
jb
stos
jmp
inc
fldcw
pop
sub
cli
mov
inc
add
cmp
jge
(bad)
punpckhdq
ret
test
jecxz
and
lods
mov
mov
(bad)
xor
cld
dec
dec
fild
ret
ins
sar
pop
daa
push
mov
jle
sub
lds
shr
jg
xor
jbe
scas
(bad)
iret
pop
sub
xchg
pop
push
in
cld
sub
clc
mov
ss
popf
bswap
jmp
mov
(bad)
movs
jmp
jnp
fistp
ins
sub
cld
je
fcomp
in
jno
cld
push
cmp
popf
mov
xchg
mov
stos
mov
mov
bound
sar
adc
out
rcr
aas
(bad)
repz
ficomp
test
test
sub
xchg
ds
dec
mov
cmp
cwde
aaa
rcl
out
jb
in
call
jge
mov
mov
outs
ins
add
mov
mov
popa
cli
push
ret
retf
ficom
adc
mov
addr16
popf
lods
add
mov
dec
int
jb
sub
mov
addr16
add
push
inc
jo
push
jg
dec
(bad)
jecxz
fiadd
pop
movs
jns
cs
clc
nop
pop
cmps
xor
inc
mov
stos
pushf
xor
pop
push
sahf
hlt
iretw
cld
and
mov
jne
jle
in
leave
push
fstp
mov
es
dec
and
inc
xchg
movs
adc
les
push
inc
dec
jnp
mov
dec
iret
imul
and
xchg
std
(bad)
mov
retf
inc
int3
les
push
mov
pushf
add
mov
pop
push
fld
mov
cdq
cli
pusha
jno
dec
ret
jl
inc
icebp
bound
mov
int3
or
fcmovnu
sar
sbb
dec
(bad)
mov
mov
es
outs
jge
mov
into
dec
stos
sar
in
pop
aas
(bad)
and
inc
int3
(bad)
fild
mov
pop
mov
or
jnp
cmp
xor
push
or
(bad)
sub
push
inc
mov
add
lds
mov
xor
sub
and
fist
jno
cmp
push
jne
jb
pop
xchg
adc
xchg
xor
loope
add
dec
leave
xchg
sbb
(bad)
mov
push
dec
push
inc
adc
mov
dec
test
sub
jmp
mov
clc
mov
mov
sub
aaa
cdq
push
repz
jae
out
dec
call
ret
mov
enter
sbb
sub
scas
push
lods
sub
mov
dec
cld
pop
idiv
mov
mov
or
jne
mov
add
push
mov
or
xchg
mov
dec
sbb
scas
pop
call
xchg
movs
test
imul
ds
pop
pop
add
pop
test
mov
shr
dec
jae
popf
push
push
and
or
cdq
cmc
add
mov
arpl
mov
pop
out
sub
adc
fsubr
fisttp
inc
jb
push
call
or
mov
sub
ds
jg
fistp
retf
loop
xchg
mov
pop
mov
mov
movs
and
xchg
scas
push
add
in
lods
ror
inc
sbb
cmp
mov
int
sti
sub
xor
in
inc
sbb
mov
xor
mov
icebp
fnstsw
adc
pusha
push
pop
aam
push
or
std
ret
cmp
test
mov
retf
ja
pop
sub
and
lods
lock
cli
sub
dec
int
xchg
inc
adc
push
int
loopne
sub
stos
jne
popa
push
lods
or
popa
push
mov
dec
mov
clc
or
xor
das
jns
rcl
mov
into
ins
xor
push
cmp
mov
push
xor
add
xchg
mov
aaa
push
das
dec
xor
call
out
cwde
push
or
iret
addr16
fstp
stc
pushf
jge
mov
retf
mov
mov
and
cmp
cmc
ins
test
popa
stos
ins
jp
mov
in
bound
dec
xlat
cs
icebp
cld
xor
jnp
ja
in
ins
fst
cs
inc
retf
pop
mov
aaa
inc
adc
cmp
(bad)
dec
sub
pop
cmp
(bad)
fsubp
and
loope
cmp
jnp
xchg
mov
lods
or
inc
inc
push
loop
push
iret
loopne
rcl
add
scas
mov
xchg
cmp
outs
jae
rol
push
(bad)
xchg
push
push
fiadd
jl
ins
dec
clc
cdq
arpl
movs
inc
mov
jmp
jnp
mov
push
pop
test
add
pop
xor
mov
fld
jmp
(bad)
pusha
pop
and
cld
mov
in
ins
addr16
shl
inc
fcmovnbe
pop
je
xor
lods
jmp
nop
sti
pop
dec
or
leave
xchg
ins
jp
add
dec
mov
xor
loop
adc
leave
inc
(bad)
hlt
inc
xor
adc
in
sub
aad
and
div
rol
or
lods
inc
cmp
jb
mov
adc
fistp
out
je
lds
sti
pop
mov
in
stos
jg
add
scas
cwde
sbb
aas
hlt
pusha
pop
call
mov
mov
cmp
sti
lds
mov
push
xchg
sub
imul
icebp
pop
imul
mov
push
mov
sub
and
into
pushf
xor
retf
das
push
mov
sahf
in
mov
mov
add
cmp
jecxz
iret
push
push
repnz
push
mov
push
ret
in
jb
lods
aam
aaa
inc
push
pop
call
add
mov
xchg
ds
lock
addr16
jbe
in
mov
sbb
scas
push
pop
pop
push
sbb
icebp
and
cmp
std
mov
xor
iret
out
and
clc
jns
xchg
or
inc
jbe
pop
xor
xchg
jbe
mov
cmp
ins
dec
cmp
ror
lea
imul
ds
stos
jmp
loopne
ficomp
(bad)
mov
(bad)
add
add
fwait
cdq
push
inc
mov
aad
in
rcr
jmp
idiv
inc
push
ret
std
hlt
xor
sub
dec
clc
sbb
inc
sbb
repz
cmp
daa
add
cs
loopne
cdq
jnp
mov
mov
mov
lods
aaa
stc
sbb
pop
mov
jge
mov
icebp
test
or
sub
jae
jno
div
je
loope
jno
aad
nop
mov
or
dec
mov
(bad)
xor
xchg
sbb
cmp
sub
stc
or
or
out
xchg
fist
rol
sub
ret
xlat
push
sbb
pop
mov
test
shl
int
pop
fild
fsubr
sti
fdivrp
sar
inc
les
cmp
loop
push
mov
(bad)
pop
cmps
stos
mov
adc
cli
div
(bad)
in
in
or
sbb
sub
mov
or
cli
push
mov
fs
in
mov
retf
fisub
xchg
jb
mov
lea
jmp
inc
push
adc
dec
cld
cmp
out
pop
and
xchg
std
aad
aaa
cdq
aaa
sahf
sbb
cwde
in
sub
inc
cmp
pusha
fbld
inc
les
gs
sbb
pop
or
xor
call
pusha
cmp
add
ret
mov
xor
push
and
jmp
sbb
xchg
dec
or
sub
cmps
test
fldenv
fcom
ss
cmp
mov
jb
xchg
jmp
push
add
cmp
mov
adc
call
sbb
out
jne
das
cmc
repz
ds
inc
mov
dec
sar
push
pop
loopne
imul
inc
lods
aad
jb
test
neg
mov
add
pop
(bad)
shr
repz
mov
jle
ret
inc
scas
jae
sub
push
jae
inc
popf
iret
fistp
mov
cdq
gs
dec
push
cwde
neg
imul
sub
and
mov
xchg
daa
hlt
sub
mov
mov
mov
aaa
jmp
cmps
mov
sub
les
es
mov
dec
mov
addr16
or
pop
push
add
and
(bad)
sub
push
adc
and
into
pusha
outs
fmul
int
std
xlat
out
fistp
mov
hlt
addr16
ret
jle
ins
mov
lds
icebp
icebp
and
sbb
xlat
lods
dec
jl
and
add
arpl
mov
sbb
push
sub
fst
xor
cmp
sub
pop
mul
cmp
(bad)
mov
inc
lahf
add
lods
pop
jno
xchg
mov
push
int
(bad)
inc
cdq
or
fcom
ret
inc
jl
jne
in
and
pop
fwait
jecxz
retf
xchg
pop
aad
repz
(bad)
pop
icebp
loop
sub
sub
outs
or
pmullw
xor
pop
pop
call
retf
adc
nop
stos
arpl
je
daa
call
add
sub
and
sub
xor
mov
jp
cli
cmc
lods
adc
inc
adc
dec
(bad)
jo
loop
retf
and
cmp
daa
cwde
rcr
mov
inc
(bad)
shr
je
cmp
inc
popa
adc
sbb
dec
pop
mov
dec
ins
(bad)
in
mov
sbb
test
aad
(bad)
mov
js
rol
dec
xor
mov
mov
push
sti
sbb
sahf
jmp
xor
fwait
sub
and
out
mov
(bad)
dec
cwde
arpl
test
add
or
pop
push
bound
or
add
out
(bad)
jnp
ja
lods
inc
lods
movs
mov
jl
mov
inc
sbb
fst
je
lods
add
scas
and
jmp
je
or
cdq
inc
sbb
mov
pop
cli
ret
adc
lods
loope
outs
xlat
stc
cs
stos
sub
out
dec
mov
sub
sub
repnz
sar
sbb
into
add
push
mov
loope
jbe
mov
cmc
adc
in
dec
sub
test
pushf
lds
add
lea
movs
rol
sar
(bad)
in
cmp
pop
sbb
add
sbb
sar
sub
aam
jecxz
jl
jns
push
sbb
rcr
lods
and
test
add
es
mov
push
push
rol
xor
adc
xor
inc
idiv
sub
cli
in
pop
cwde
clc
adc
dec
sbb
sti
jae
inc
sub
jb
es
enter
jmp
or
sbb
mov
jne
fimul
cld
das
push
stos
orps
retf
clc
or
pop
mov
ret
icebp
iret
(bad)
sbb
adc
pop
fwait
pop
dec
jg
mov
mov
(bad)
mov
push
jb
int3
push
jo
push
out
mov
enter
push
xchg
or
iret
adc
rep
(bad)
jnp
ret
sub
enter
push
jno
stc
movs
push
shl
rol
mov
cmp
(bad)
iret
or
loope
enter
lods
fsubr
sbb
ja
sti
dec
cmps
mov
popf
mov
popa
test
inc
in
cmc
push
cmp
ins
cdq
test
sub
sub
outs
fadd
xor
clc
bound
adc
daa
not
mov
pop
sub
sbb
rol
xchg
xor
call
sbb
fsubp
loop
add
pop
xor
cmps
je
xor
add
dec
ret
mov
mov
int3
pop
mov
fs
retf
jmp
pop
pop
lods
dec
sub
adc
lods
mov
pop
loopne
movs
pop
sub
ja
jp
mov
sar
dec
popa
push
adc
jne
sbb
ror
pop
cld
jp
cmps
push
adc
aam
scas
jae
and
pop
mov
inc
hlt
idiv
es
jne
dec
jl
in
popf
add
add
dec
enter
mov
test
xor
ins
or
shl
mov
or
mov
and
pop
pop
lea
hlt
fpatan
bound
(bad)
loopne
(bad)
pop
mov
stos
add
(bad)
sub
mov
fs
or
pop
imul
(bad)
or
inc
bound
div
mov
popf
in
pop
and
test
aas
cmp
in
xor
ror
mov
push
lods
mov
add
or
js
mov
jecxz
in
shl
aad
loopne
and
movs
stc
movs
outs
movs
call
cmp
sti
dec
call
cli
and
jne
sub
adc
push
xor
iret
and
jecxz
ret
add
cmp
mov
pop
sbb
fdivr
mov
xchg
fisttp
pop
(bad)
scas
bound
jnp
sub
not
cmp
movs
arpl
push
xor
and
out
jnp
addr16
cmp
test
dec
push
fwait
int
ror
nop
or
cmps
out
frstor
xor
nop
pop
pop
repnz
push
inc
js
sub
movs
xchg
mov
fnstenv
mov
ficom
out
loopne
mov
outs
stos
lods
adc
add
pop
mov
ins
inc
jae
dec
jb
inc
popf
xchg
jo
mov
pop
shr
js
mov
push
cmc
fadd
dec
mov
movs
dec
xchg
sbb
push
pop
jnp
jmp
repz
cmp
idiv
mov
jo
in
dec
ja
mov
out
add
or
ficom
gs
and
sub
add
cmp
stos
das
icebp
sub
dec
inc
dec
or
mov
std
fisubr
ss
cmp
in
ds
fs
cli
loopne
adc
dec
mov
sub
dec
outs
repz
xor
pop
add
sbb
aam
push
ins
ins
mov
push
sbb
stos
cmp
or
xchg
lods
cs
push
sbb
mov
in
add
dec
and
out
cs
push
or
mov
outs
in
mov
mov
add
pop
(bad)
xlat
out
adc
jp
push
lods
lods
add
movs
adc
jnp
rcr
mov
or
mov
dec
sbb
hlt
jno
cmp
pushf
jle
cmp
test
mov
loope
leave
aam
push
or
out
pop
sar
sbb
push
push
mov
addr16
std
xor
aam
push
outs
faddp
jp
add
retf
push
xchg
cmp
out
popf
cmp
leave
jae
sbb
push
jo
xchg
mov
rol
push
js
mov
fst
and
sub
fld
jbe
rol
cld
mov
es
push
push
ds
add
push
push
jmp
(bad)
sub
bound
data16
repz
dec
sahf
cld
movs
mov
fimul
inc
outs
(bad)
xchg
jbe
sti
mov
aaa
mov
push
popa
inc
fnstenv
lods
xchg
mov
popf
mov
test
cmp
push
pop
mov
jae
push
arpl
movs
inc
movs
add
les
dec
sbb
ja
ja
cmp
daa
das
arpl
iret
(bad)
pop
xchg
mov
and
mov
and
jb
aas
xchg
push
int3
(bad)
outs
icebp
jbe
lea
cmp
lahf
cmp
mov
sub
in
jle
scas
ds
sti
sbb
jbe
add
cmc
out
fcomp
jnp
dec
leave
adc
dec
sub
lds
in
scas
adc
mov
mov
jno
jne
int3
add
(bad)
sub
stos
pop
xor
cmp
cld
xor
or
mov
adc
bound
cmp
mov
mov
mov
in
in
lods
push
fwait
jb
shl
mov
jbe
mov
mov
mov
xlat
push
(bad)
fdivr
dec
shl
pop
xchg
mov
out
adc
repnz
test
imul
xlat
jbe
jge
adc
mov
lahf
addr16
mov
xor
and
rcl
rep
lock
add
out
mov
pop
pusha
cs
or
fs
mov
push
cwde
jecxz
jmp
jo
push
call
cmp
push
cmps
(bad)
sbb
bound
mov
popf
mov
sub
cmp
inc
sub
sbb
adc
loop
popf
jne
cld
popf
js
dec
aam
(bad)
fist
sar
pop
loop
les
xor
inc
cwde
jns
stc
lods
enter
scas
mov
cmps
out
push
cmpps
dec
pop
test
jl
mov
inc
sbb
shl
mov
mov
out
push
mov
fcomp
clc
mov
sbb
xchg
inc
mov
pushf
xor
or
xchg
mov
icebp
jbe
add
xor
mov
jle
sbb
in
mov
les
mov
fdivr
daa
xchg
sub
xlat
cli
mov
mov
jge
dec
jnp
cdq
mov
sub
cmp
hlt
dec
lds
lods
push
jmp
cs
push
mov
mov
jae
test
pop
call
(bad)
call
push
scas
loop
mov
shr
sbb
sbb
jecxz
pop
fld
jg
jecxz
and
mov
lods
and
jmp
push
jo
rcl
pop
jbe
(bad)
jbe
mov
jmp
mov
lods
xor
rcr
imul
test
jb
add
movs
inc
daa
mov
adc
mov
sub
(bad)
movs
or
retf
test
sub
jecxz
push
push
inc
adc
xchg
jl
hlt
add
rcl
aaa
call
pop
and
add
loopne
pop
lods
or
sbb
fldenv
retf
sub
add
inc
adc
sub
mov
jnp
mov
ret
test
push
mov
outs
data16
shl
xor
sbb
(bad)
retf
lock
shl
sub
and
outs
es
test
jmp
mov
push
imul
cwde
inc
sbb
sub
or
ret
dec
xchg
inc
push
sahf
jo
sub
cmps
in
push
or
jae
fmulp
pushf
ja
adc
jl
ficom
mov
(bad)
cdq
jecxz
mov
jbe
mov
adc
cli
xchg
lods
ficomp
jmp
mov
aad
dec
inc
xor
sub
mov
fadd
mov
or
or
test
lods
dec
xor
cli
add
mov
sub
mov
iret
loope
mov
mov
or
xor
and
dec
inc
cs
add
ins
cmp
sub
mov
and
jl
(bad)
cmp
push
or
(bad)
pop
pop
inc
xor
bound
and
outs
js
dec
or
xchg
ret
in
add
out
scas
(bad)
mov
xchg
jnp
adc
dec
hlt
in
sbb
aaa
jmp
lock
pushf
pop
jno
or
inc
out
adc
rcr
sub
adc
(bad)
mov
scas
push
retf
movs
dec
push
fst
pop
jbe
int
jge
arpl
fild
push
fsub
pop
add
jp
es
jp
add
and
add
inc
mov
aaa
jecxz
and
xlat
xchg
mov
mov
pop
or
xchg
out
pop
and
sub
(bad)
clc
test
inc
xchg
add
fild
add
jo
add
or
imul
dec
cwde
pop
mov
cmps
or
call
(bad)
es
push
out
add
neg
adc
xchg
gs
xchg
jne
jae
ret
fist
call
and
dec
loopne
xlat
jnp
loop
mov
test
mov
ret
sbb
cmc
scas
dec
pusha
cs
leave
mov
pop
cmp
sbb
mov
push
outs
dec
arpl
shr
or
jnp
add
mov
shl
sub
jmp
push
jbe
pop
adc
fild
inc
mov
jge
and
xchg
or
cwde
sbb
das
cmp
jno
or
mov
(bad)
sub
aad
add
push
(bad)
mov
or
cmp
clc
add
gs
mov
mov
xchg
pusha
out
jo
sahf
fimul
out
addr16
es
sbb
dec
mov
or
xchg
ror
or
fcomi
fcom
out
shl
mov
in
push
stc
mov
stc
dec
dec
sub
push
mov
retf
mov
int3
data16
jp
adc
fwait
nop
mov
aad
xor
fnsave
cld
fnstsw
xor
mov
(bad)
cwde
repz
icebp
int3
ror
add
je
or
out
icebp
sahf
out
lahf
mov
mov
(bad)
dec
and
pushf
add
mov
or
jle
js
(bad)
mov
bound
pop
lds
add
and
clc
fsubrp
aas
lods
ret
neg
inc
jb
lock
ret
cmc
push
fild
leave
pop
ins
adc
mov
jae
call
rcl
add
jns
mov
mov
add
cdq
call
inc
inc
mov
pop
dec
daa
add
aam
cmp
mov
lods
clc
icebp
loope
mov
es
push
pop
xor
push
scas
aad
xchg
test
xchg
cmp
inc
je
mov
cmps
cwde
fild
shr
jge
dec
loope
push
fisub
pushf
cld
dec
sahf
test
mov
out
mov
cmc
push
push
adc
cmp
pop
call
pop
sub
pop
arpl
and
mov
mov
pop
sub
or
fxch
mov
mov
aaa
jge
ficom
dec
sub
fidiv
out
mov
inc
jle
and
sbb
mov
xchg
mov
cs
push
sti
dec
push
std
fwait
loope
pop
cmp
pop
xor
fidiv
lahf
std
mov
xchg
pop
cmps
adc
outs
nop
lahf
cli
sub
bound
rol
sub
imul
ficomp
outs
sub
cmp
add
stc
adc
imul
stc
push
ins
push
inc
and
(bad)
fdiv
ret
retf
dec
mov
cmp
nop
mov
add
inc
xchg
sub
push
xor
std
js
dec
retf
shr
ret
push
sub
mov
adc
sahf
(bad)
or
cmp
mov
lods
out
jbe
outs
adc
fdiv
or
jecxz
inc
sub
test
sub
xor
fcomp
(bad)
dec
stos
xchg
inc
scas
scas
stos
push
jg
xchg
sub
cmp
out
inc
jb
or
xor
jmp
add
fcmovnb
and
sbb
sbb
xor
xchg
xchg
out
mov
repz
pushf
jecxz
pop
cld
jne
xchg
jb
data16
or
dec
dec
add
cmp
jae
inc
xchg
adc
xor
pop
xchg
mov
cmc
rcl
sbb
adc
adc
inc
push
push
mov
cwde
pop
data16
pop
rcr
retf
jbe
arpl
adc
aad
dec
rcr
ret
or
xchg
cs
inc
xchg
test
aad
pop
push
das
xchg
mov
xor
mov
shr
inc
test
daa
sbb
inc
mov
jl
jle
cmp
in
movs
mov
fist
inc
arpl
fld
idiv
in
imul
add
int3
ja
mov
xchg
imul
mov
das
ficomp
(bad)
iret
fild
push
add
jmp
idiv
jbe
add
(bad)
or
jbe
sbb
ja
mov
sbb
hlt
stc
daa
jle
push
bnd
mov
movs
xchg
data16
pop
cmps
bound
call
xor
push
cmps
stos
rol
lea
jns
mov
fmul
push
out
fldcw
(bad)
sbb
dec
add
xor
scas
call
sub
pusha
and
dec
das
aam
jae
push
neg
push
(bad)
ficomp
cld
in
pop
in
dec
add
in
and
in
push
pushf
rcl
xchg
cwde
test
int
push
mov
dec
scas
xchg
out
hlt
sub
test
ss
mov
shr
adc
adc
imul
shl
(bad)
mov
or
push
pop
pusha
retf
rol
push
adc
push
sti
stos
and
xor
dec
mov
push
pop
fdivrp
mov
in
aas
jbe
sbb
stc
sbb
ins
gs
cmp
jns
in
mov
cmp
jo
sbb
ja
call
int3
pop
cmps
fsub
retf
ds
test
fs
push
outs
pop
dec
jne
scas
repnz
(bad)
push
fdiv
pop
loopne
ret
loopne
shr
bound
hlt
int
jecxz
sbb
cmp
pusha
xor
dec
div
out
add
(bad)
in
mov
mov
adc
dec
imul
xor
ret
push
mov
push
les
xor
and
cmps
adc
retf
movs
dec
mov
inc
mov
xchg
lock
femms
sub
mov
push
xchg
stos
std
stc
outs
int
inc
inc
push
out
mov
stos
retf
sub
hlt
scas
(bad)
push
adc
xchg
pop
repnz
and
loop
fwait
mov
xchg
cmp
(bad)
stos
xchg
jmp
xchg
pop
mov
ins
xchg
pop
and
and
ja
lods
pop
mov
mov
loope
js
or
cmp
add
jmp
(bad)
adc
daa
cdq
jl
ss
add
js
gs
xor
add
inc
mov
imul
out
pop
ja
mov
xchg
push
sbb
cli
dec
xchg
pop
dec
sti
jnp
pop
cmp
or
and
xlat
data16
ds
pop
mov
jmp
aam
xchg
mov
or
mov
add
xchg
pop
popa
and
in
dec
dec
cmp
xchg
pop
(bad)
adc
fisubr
adc
mov
cmp
sahf
leave
fisubr
fmul
aaa
push
inc
add
jno
xor
adc
jbe
mov
sub
test
sub
mov
scas
xchg
sahf
shl
sub
pushf
cmp
out
cmp
outs
jl
repnz
fild
ja
icebp
pop
inc
sbb
clc
dec
nop
inc
add
int
cmps
dec
ret
xor
rcl
test
imul
dec
push
sub
jnp
mov
mov
mov
xchg
std
push
jae
mov
sub
pop
push
mov
inc
sbb
rol
mov
sub
jl
jge
fs
mov
push
adc
ja
pop
jp
sub
sub
add
push
cmp
fwait
cli
adc
mov
xchg
popa
movs
mov
jbe
mov
push
dec
lock
ret
mov
mov
ficomp
push
sub
mov
xor
jecxz
mov
and
or
ja
cmc
dec
push
dec
mov
or
mov
clc
dec
xor
inc
mov
cmc
jl
(bad)
xor
lahf
mov
pop
ret
std
sbb
sti
lahf
iret
(bad)
sbb
jnp
cld
xor
dec
dec
ins
cli
cdq
cs
out
xchg
(bad)
in
jnp
(bad)
loopne
push
pop
pop
shr
sub
popa
and
mov
pop
repnz
mov
cwde
fld
pop
mov
imul
(bad)
adc
shl
data16
sub
mov
adc
cwde
push
loope
fcomp
mov
in
test
pop
pop
(bad)
jle
loope
neg
dec
(bad)
jge
dec
js
xchg
not
and
dec
mov
arpl
inc
call
(bad)
popa
or
dec
movs
sub
loop
pop
xlat
xchg
pop
mov
pop
fsub
sbb
dec
aas
or
push
cmps
shl
push
pop
out
(bad)
out
jns
xor
sbb
in
dec
mov
or
adc
popa
add
xor
xchg
ror
fadd
jb
cmp
pop
nop
xor
iret
and
mov
loop
xor
pop
jo
inc
sbb
add
inc
fld
and
frstor
daa
xchg
out
jne
mov
lahf
nop
or
xor
loopne
mov
mov
mov
retf
test
jmp
loopne
adc
popa
sbb
(bad)
push
rcl
test
ss
leave
jmp
push
xchg
movs
aad
mov
ficomp
inc
lock
cs
pop
sub
not
fldenv
hlt
sub
dec
shl
cmc
mov
pop
pop
cmps
test
movs
aaa
cmc
enter
fnstenv
outs
fwait
or
hlt
retf
cmp
or
pop
in
out
pop
(bad)
jl
test
mov
repnz
xchg
cdq
(bad)
lock
pop
ret
jg
mov
jmp
icebp
add
(bad)
fdivrp
pop
cs
int
hlt
inc
aas
leave
adc
mov
adc
arpl
jle
inc
leave
adc
fwait
stc
jnp
dec
call
pop
push
test
sbb
xchg
pop
sub
sub
inc
mov
ins
mov
int3
xor
jne
mov
out
xchg
cmp
(bad)
xor
cmp
jecxz
push
call
(bad)
xor
test
aad
pop
xor
frstor
mov
scas
sbb
or
add
enter
jne
bnd
pop
addr16
(bad)
int
test
push
mov
sbb
sbb
inc
leave
push
push
ds
dec
test
push
mov
das
sar
addr16
jns
cmp
shl
pop
push
ds
sbb
bound
fcomp
fwait
xchg
jecxz
mov
push
xchg
xor
fistp
sti
dec
sub
movs
cmp
scas
xchg
sar
int3
jae
push
jl
adc
aam
int
lods
sbb
mov
mov
dec
pop
sar
rcr
xchg
test
mov
mov
or
xor
sub
int3
mov
sbb
arpl
adc
adc
dec
mov
dec
stos
in
jne
ja
and
xchg
pop
aad
xchg
jecxz
dec
xchg
mov
dec
mov
inc
or
dec
add
push
sbb
and
rcl
push
fs
dec
sbb
sub
fisubr
call
(bad)
dec
daa
retf
jle
add
jecxz
add
pop
cdq
cmp
popf
pusha
fistp
jns
cmp
cwde
fmul
cmp
sbb
mov
(bad)
shl
not
mov
mov
and
or
(bad)
jmp
cmp
pop
pop
mov
idiv
out
call
mov
add
push
in
mov
mov
xor
out
scas
aam
adc
dec
(bad)
movs
xchg
into
stos
xchg
sbb
add
xchg
fisub
add
mov
push
xor
adc
cmp
fsubr
mov
xchg
ror
sub
xchg
mov
jg
std
jge
in
call
jmp
jb
stc
dec
cmp
mov
ins
pop
dec
mov
pop
fcomip
and
mov
xchg
adc
add
cmp
or
mov
inc
cmp
shl
pop
repz
xchg
ins
jge
int
test
movs
cli
push
push
or
push
jnp
dec
test
das
mov
add
mov
ror
int3
dec
into
outs
mov
jge
xchg
jne
dec
(bad)
dec
adc
(bad)
repz
and
and
imul
mov
loope
ret
fneni(8087
cdq
mov
les
dec
shrd
int3
jecxz
dec
rol
push
adc
in
call
xor
es
mov
ja
loope
leave
in
fld
add
paddw
push
adc
les
xor
xchg
cdq
add
pop
cli
shl
or
jle
shl
mov
(bad)
jl
xchg
xchg
bound
cmp
ins
(bad)
or
cmp
pop
stos
cli
fadd
xor
js
ror
cmp
shl
popf
cld
lea
scas
pop
(bad)
ins
stc
fcom
xor
out
iret
hlt
and
je
mov
enter
sub
aaa
sub
imul
add
mov
and
dec
loopne
jo
das
push
inc
(bad)
daa
ret
pop
pop
in
(bad)
add
scas
and
jns
int
cmp
ins
inc
xchg
mov
inc
mov
loop
adc
jae
xor
shr
push
or
lods
dec
mov
cmp
clc
sub
jo
data16
push
fisub
pop
in
aas
inc
jbe
repz
sbb
add
dec
pop
xor
adc
or
pop
mov
adc
xchg
ror
add
lea
aam
or
clc
mov
dec
aad
retf
(bad)
or
push
mov
pop
imul
enter
loope
xchg
push
pop
scas
jmp
inc
dec
aad
daa
test
pop
mov
mul
sub
shl
mov
xchg
xor
sbb
pop
es
test
sub
push
repz
retf
cwde
jmp
ins
push
(bad)
push
or
xlat
jle
mov
xor
push
push
cli
icebp
adc
add
in
popa
pusha
mov
fdivr
data16
dec
xchg
xor
xor
dec
std
pop
mov
pop
dec
(bad)
mov
jg
mov
repz
mov
push
sub
cs
cmp
jnp
push
pop
lahf
jge
call
xchg
bound
shl
out
ds
mov
lods
dec
lock
(bad)
rcr
xchg
add
pop
push
std
mov
mov
xchg
push
mov
add
add
mov
mov
cmp
pop
push
not
xchg
imul
jb
sbb
push
cmp
xlat
cwde
popa
fisubr
xor
sub
jmp
add
(bad)
aaa
sub
out
push
adc
in
cs
pop
xlat
and
mov
(bad)
xchg
adc
sahf
fs
stos
push
sahf
(bad)
adc
fnsave
scas
fsubr
jmp
inc
cld
sub
mov
xlat
pop
mov
hlt
push
push
inc
loopne
js
jne
jmp
sahf
inc
dec
mov
inc
cmp
bound
repnz
mov
enter
and
mov
adc
xchg
mov
iret
sub
(bad)
int
jg
sbb
jnp
imul
daa
pushf
jmp
mov
retf
test
movs
popa
retf
add
push
lds
retf
sbb
mov
ss
push
mov
ss
retf
adc
nop
xchg
es
aad
or
jne
lock
pop
movs
movs
cmp
xor
loop
push
and
dec
xor
push
mov
ret
jmp
aas
icebp
xchg
pop
rcl
sbb
push
mov
xor
dec
loop
mov
push
cdq
xor
jae
mov
mov
loop
and
mov
cmp
dec
icebp
sbb
push
xchg
or
inc
adc
clc
push
pop
into
add
mov
adc
addr16
ins
jmp
and
jnp
data16
mov
jp
mov
pop
loope
scas
adc
jle
or
ret
mov
sbb
inc
push
and
or
adc
cmps
(bad)
stos
popf
out
xor
sti
jl
sub
or
jmp
rol
jl
cmp
fnsave
fidivr
jmp
cs
xchg
stos
cmp
mov
add
rcl
cs
add
dec
push
fsubr
fnstcw
push
inc
and
push
jle
lods
sbb
xchg
ss
inc
test
lds
jae
out
pop
mov
idiv
dec
mov
outs
adc
lds
pop
sub
mov
(bad)
mov
and
add
xor
xchg
lods
adc
imul
dec
xor
xchg
and
mov
cmps
push
sbb
test
sahf
test
push
pop
sbb
sub
rcl
cmc
(bad)
add
push
fimul
mov
retf
int3
push
xchg
ret
mov
push
dec
jmp
pop
das
xchg
mov
adc
inc
sub
xchg
cdq
lock
mov
adc
add
mov
lahf
and
add
popf
out
add
xlat
jo
aad
sub
scas
jae
push
pushf
ds
in
test
or
retf
cmp
jecxz
push
cli
jae
rol
pop
das
int3
fcomp
pop
sub
aam
test
pop
pop
seta
xor
shl
jb
(bad)
mov
xor
sub
pop
fwait
rcl
daa
mov
xor
ins
push
enter
in
inc
sbb
movs
(bad)
addr16
jecxz
or
imul
aam
or
xor
push
retf
sub
in
fsub
jnp
pop
lods
sub
push
je
jo
pop
fwait
outs
in
(bad)
jmp
mov
pop
or
dec
(bad)
xor
shl
add
push
loop
ds
mov
arpl
or
(bad)
in
sub
pop
jno
dec
sar
sub
mov
sahf
and
inc
mov
lahf
sub
mov
fisub
push
mov
jno
(bad)
jns
dec
lds
add
mov
fistp
ins
dec
dec
or
leave
les
sub
cmp
test
xchg
jge
push
jne
inc
adc
jmp
inc
loopne
daa
xchg
push
inc
(bad)
jge
out
gs
mov
cmp
loope
cmp
add
ret
movs
paddb
iret
and
movs
jg
(bad)
jp
jae
sbb
cli
mov
ror
mov
fst
lea
mov
sub
mov
aad
bound
ins
mov
pop
pop
mov
enter
jbe
xor
out
xor
int3
mov
sbb
fwait
bnd
or
loop
scas
dec
push
shr
enter
jbe
popf
cmp
scas
inc
adc
std
sub
jbe
mov
or
xchg
(bad)
xor
mov
rcr
enter
test
xchg
es
cwde
test
into
or
pusha
jp
call
mov
mov
xchg
or
into
jmp
lock
rcr
ficomp
and
gs
ja
sbb
scas
mov
xor
popa
dec
pextrw
add
adc
push
std
mov
jmp
retf
sbb
movs
pop
ret
mov
shld
pop
cdq
adc
mov
mov
cld
fdiv
dec
idiv
pop
pop
mov
inc
push
test
(bad)
out
mov
pop
fdivr
ret
pop
fnstcw
ins
jno
imul
mov
imul
mov
add
jnp
fs
int3
popf
mov
std
dec
mov
lds
sahf
addr16
mov
pop
popa
retf
lods
pop
aam
outs
sbb
movs
push
pop
mov
add
xchg
push
int3
push
cmp
inc
jmp
xor
pop
add
pop
pop
cmc
dec
inc
fcmovnb
sti
add
(bad)
stc
jl
std
mov
inc
xchg
scas
mov
in
cmp
sti
push
push
push
(bad)
cmp
or
aam
outs
sub
leave
jmp
fdiv
cli
cmp
pop
(bad)
cmp
lea
bound
add
inc
ins
mov
push
push
into
sub
jo
inc
fcom
mov
aaa
jbe
pop
retf
or
xor
inc
mov
ror
push
popf
pusha
outs
imul
jge
or
sub
or
fimul
xor
sbb
sub
adc
xchg
xchg
popf
cmp
rcl
cdq
stc
out
xchg
adc
or
iret
retf
into
mov
or
cmp
dec
and
in
mov
cmp
les
sahf
sar
test
pop
push
jge
aam
jp
and
add
lds
outs
mov
(bad)
(bad)
adc
test
stos
mov
mov
dec
jae
xchg
mov
les
xor
loope
jmp
xor
adc
mov
movs
xlat
mov
inc
ror
push
xor
adc
rol
test
jmp
outs
inc
xor
cmc
std
movs
cli
das
es
rcr
mov
cmp
dec
and
aam
sbb
or
xor
enter
mov
mov
xlat
mov
out
pusha
xchg
mov
mov
int3
arpl
mov
pop
fisub
test
(bad)
rcr
bound
fwait
sbb
push
dec
or
popf
out
adc
imul
mov
add
mov
movs
pop
daa
mov
push
std
jmp
sub
(bad)
mov
imul
comiss
cmp
cdq
addr16
sub
push
cwde
sub
outs
sahf
pop
ret
and
or
out
and
pop
sar
shl
dec
(bad)
lods
xchg
sbb
xchg
aad
rcl
sub
fs
adc
fcom
lods
pop
jp
stc
bound
sub
inc
adc
and
fidivr
dec
adc
jg
xchg
jbe
call
outs
cmps
outs
(bad)
cli
ror
loop
jbe
mulps
lahf
ins
rcl
gs
jnp
retf
loope
jle
pop
mov
xlat
sub
outs
addr16
fs
jb
adc
outs
arpl
test
add
sar
pop
repz
test
push
in
inc
dec
mov
data16
ja
jbe
mov
fisttp
and
shl
jl
in
call
or
js
js
gs
pop
xor
js
push
scas
popa
addr16
cdq
sub
jo
xchg
mov
bnd
sar
xchg
sbb
inc
in
dec
inc
pop
xor
inc
and
jnp
scas
aaa
in
in
test
retf
into
jnp
xor
aaa
(bad)
enter
push
retf
sub
mov
add
into
jl
pop
int
arpl
ins
mov
mov
add
iret
in
dec
mov
pop
add
test
sbb
jnp
stos
pusha
pop
sub
aad
loop
mov
not
mov
ss
cmp
sub
(bad)
mov
xor
sub
sub
icebp
jo
call
inc
push
hlt
add
bound
aad
sahf
pusha
fnstsw
dec
movs
ret
(bad)
aas
xchg
icebp
adc
push
fld
push
and
sub
enter
add
cmp
popa
(bad)
or
mov
dec
sbb
out
test
mov
mov
pop
pop
push
repz
adc
stos
mov
xchg
in
xlat
add
add
shr
xchg
cdq
xor
shl
sbb
dec
or
test
ja
mov
pop
fld
mov
dec
jo
mov
fcom
pop
sbb
aaa
pop
fcmovnu
add
or
mov
dec
pop
cmps
mov
sbb
movs
xchg
daa
ret
lahf
out
mov
das
(bad)
dec
popa
pop
in
jg
lahf
sbb
mov
aam
pop
pop
push
(bad)
pop
test
jmp
bound
add
bound
adc
or
cdq
std
bound
jnp
lahf
sbb
mov
ins
dec
push
mul
mov
and
mov
mov
pop
scas
call
retf
or
(bad)
mov
pop
fldenv
aas
push
sub
shl
call
lea
push
es
mov
mov
loope
mov
pusha
mov
jno
sti
cs
leavew
pop
int
dec
pop
jecxz
jmp
pusha
std
push
hlt
or
inc
sahf
in
ret
dec
dec
xchg
mov
or
adc
jl
dec
adc
cmp
inc
sub
push
adc
add
cwde
add
jle
(bad)
xchg
xor
mov
mul
mov
fstp
pop
or
daa
imul
xchg
sbb
add
test
dec
loop
fiadd
jp
scas
frndint
jle
xchg
mov
or
and
out
push
lahf
int3
add
push
lahf
sub
xor
add
stos
mul
cdq
jbe
loopne
jo
jmp
out
or
xor
cmp
sbb
icebp
jmp
test
mov
dec
aad
jnp
dec
fbld
xchg
and
inc
movs
jecxz
loopne
push
mov
jno
push
mov
ficom
repnz
fsincos
(bad)
sub
and
and
cmp
mov
pushf
sbb
cmp
in
cmp
or
retf
xor
mov
mov
cmp
loop
inc
fmul
or
sub
mov
mov
inc
adc
scas
lods
sbb
ins
call
dec
icebp
mov
fsubr
pop
xchg
jns
mov
pop
call
xor
adc
push
mov
ss
inc
add
inc
cld
xlat
cwde
sub
shr
inc
stc
enter
jbe
or
add
mov
clc
dec
imul
and
(bad)
(bad)
fmul
pop
ss
in
(bad)
adc
push
jl
pop
or
outs
or
sar
cdq
popf
push
popf
addr16
jp
mov
pop
nop
sbb
shl
and
mov
fdiv
stos
int
inc
sbb
out
push
cs
push
bound
fcom
xchg
pop
mov
stc
sbb
sub
dec
repz
inc
jo
sub
adc
push
rol
inc
ret
inc
sbb
enter
lock
aas
scas
out
fdiv
sbb
sub
mov
leave
xor
lock
in
fs
xchg
xor
and
pushf
mov
push
outs
pop
inc
mov
add
pop
or
pop
cmp
inc
inc
push
icebp
xchg
xor
sbb
outs
imul
and
out
loope
sbb
mov
out
mov
adc
mov
int
sub
inc
xor
sbb
sub
in
aam
jnp
std
mov
jle
cmp
jae
jo
loop
xor
daa
int3
(bad)
sbb
sbb
jecxz
jmp
not
xor
adc
mov
out
ret
call
push
or
push
imul
add
in
sahf
cli
sub
pop
push
mov
push
(bad)
lods
and
or
cwde
int3
call
pushf
addr16
scas
adc
xor
(bad)
int
mov
mov
jmp
push
cmp
lea
jle
sbb
fadd
mov
fld
imul
call
test
pop
scas
fnstcw
sbb
in
ins
pushf
mov
sub
shr
retf
jecxz
cld
adc
sub
sbb
xchg
cmps
sbb
push
ficomp
xchg
ja
xchg
pop
xchg
mov
adc
adc
call
mov
sbb
inc
je
push
mov
popa
dec
ror
mov
xor
fs
sbb
loopne
aad
dec
push
push
fdiv
cwde
add
inc
mov
cmps
mov
jae
sar
add
xchg
pop
nop
lock
mov
sub
xor
mov
ins
pusha
lods
mov
push
xchg
mov
xor
lea
fs
sbb
push
aad
cmp
mov
push
mov
xor
frstor
in
adc
push
jno
adc
jo
sahf
push
aaa
adc
sti
jno
sub
sbb
mov
adc
jbe
inc
dec
inc
sbb
pop
pop
mov
jno
fild
(bad)
out
rcl
inc
fist
pop
push
in
in
adc
inc
in
push
inc
sbb
imul
ret
mul
rcr
jmp
xchg
sub
push
adc
ret
(bad)
not
repnz
out
xchg
iret
and
clc
frstor
(bad)
mov
outs
jg
rol
pop
mov
xor
xchg
dec
lds
xor
loopne
rep
test
mov
add
adc
call
out
(bad)
push
jo
out
sti
retf
inc
sahf
pop
fucompp
mov
inc
out
mov
mov
ja
daa
and
xor
push
push
push
fdiv
add
or
mov
and
out
icebp
mov
mov
out
push
jecxz
(bad)
ja
cmp
clc
inc
(bad)
test
repnz
dec
adc
pop
mov
mov
fst
sub
add
lea
and
and
fisttp
xor
jp
stc
cmp
jno
dec
jns
cld
sti
jno
push
mov
std
mov
mov
jnp
mov
xor
loop
pop
aaa
cwde
jg
sbb
in
mov
xchg
outs
sbb
cdq
sbb
int3
add
pop
mov
bound
out
and
in
pop
in
sub
imul
outs
sub
repnz
mov
cmp
mov
out
out
fild
sahf
inc
dec
aaa
(bad)
cld
and
retf
or
aas
loopne
pop
dec
mov
and
sbb
shr
inc
pavgb
adc
ja
mov
pop
add
adc
mov
push
inc
xchg
in
fwait
cld
int3
mov
repz
ins
and
dec
icebp
mov
mov
jae
adc
mov
jns
add
jmp
xor
mov
retf
sub
jae
inc
stos
fdivr
lock
es
ret
ds
and
or
push
push
or
fidiv
cmps
mov
mov
xchg
jmp
cwde
pop
mov
add
outs
mov
repz
push
and
outs
repz
sti
loope
inc
xchg
test
cld
sub
cli
mov
movs
sub
mov
test
(bad)
in
into
in
push
sti
shl
test
xchg
inc
imul
pop
sti
mov
xlat
in
jecxz
push
or
or
pop
movs
sbb
adc
add
(bad)
and
int3
adc
mov
xchg
mov
lea
and
mov
inc
xchg
add
jmp
stc
daa
lods
(bad)
std
rcr
xor
mov
jo
jmp
enter
xor
loope
test
cmp
sbb
mov
push
shr
push
not
push
(bad)
mov
jp
or
ret
pop
loop
adc
repnz
sahf
mov
mov
pop
ins
loop
(bad)
(bad)
repnz
mov
popf
cs
sti
jmp
push
cmp
add
jnp
hlt
mov
add
push
sar
rep
push
stos
es
xchg
add
push
inc
pop
out
add
pop
xchg
or
lods
retf
inc
in
adc
stos
shl
call
ins
jb
cld
pop
add
or
xor
lds
shr
stc
xor
and
or
pop
dec
cwde
pop
out
test
fstp
jne
mov
cmp
repnz
out
(bad)
jno
push
movs
dec
mov
mov
call
add
out
pusha
mov
mov
in
xor
sub
out
pop
lods
xchg
jge
push
push
inc
lods
mov
shr
jmp
sbb
int3
cdq
cmp
int3
push
jae
sub
out
and
mov
jg
push
movs
mov
mov
sbb
fist
sub
out
daa
add
jb
or
aaa
mov
repz
aas
sub
lock
and
aad
sub
jp
inc
pop
mov
ss
(bad)
sar
fdiv
jmp
xchg
mov
mov
mov
inc
xor
mov
aad
(bad)
in
mov
push
dec
jl
mov
dec
jmp
(bad)
pop
push
call
int3
sub
adc
call
xchg
std
movs
(bad)
xchg
pop
ja
mov
push
or
xor
aas
aam
mov
out
test
fcomp
retf
shl
dec
push
fisub
les
repz
cwde
mov
cmc
or
sbb
cmp
loop
mov
dec
pop
adc
movs
outs
mov
cli
jle
mov
mov
dec
mov
int
imul
les
stos
popf
mov
(bad)
std
pop
je
cmp
sahf
jmp
sub
or
popf
sub
dec
cmp
ja
ja
jae
movs
out
(bad)
popf
scas
out
ins
and
(bad)
cld
sub
dec
add
pop
into
mov
ja
(bad)
add
sub
push
retf
sbb
push
iret
lock
cmps
pusha
push
shr
in
adc
mov
push
sub
call
pop
mov
jecxz
mov
repnz
sar
push
neg
cmps
hlt
sbb
mov
scas
and
inc
cwde
dec
(bad)
out
int3
(bad)
out
xor
xor
xor
jl
call
or
mov
div
imul
push
gs
push
mov
push
fdivp
test
mov
int3
jmp
pop
jge
shr
mov
cwde
cmp
inc
in
mov
sbb
sbb
aaa
mov
cs
mov
sub
sub
push
lds
cmp
xchg
jl
dec
jecxz
inc
mov
cmc
fdivr
cmp
push
push
imul
movs
repz
pop
inc
bound
retf
data16
add
inc
cmps
adc
push
add
sbb
mov
jg
pop
sbb
xor
cmovo
jl
jno
jbe
sti
in
mov
push
push
(bad)
xchg
stc
jae
rcl
jbe
ins
jmp
jb
xor
xchg
jbe
adc
nop
hlt
adc
inc
adc
jmp
cwde
aam
aas
rcl
xchg
or
inc
(bad)
inc
cdq
sub
loop
xchg
(bad)
in
sar
rcl
mov
inc
dec
fs
pusha
or
ins
std
and
mov
mov
sahf
fwait
fwait
imul
pop
xor
in
or
mov
fild
sbb
aas
dec
sub
xlat
in
mov
adc
mov
cs
xrelease
mov
mov
sub
(bad)
in
mov
jae
push
and
adc
xchg
scas
mov
bound
mov
inc
fld
or
jmp
mov
sbb
mov
push
xchg
add
nop
mov
jmp
mov
or
int
in
mov
pop
push
cmp
or
mov
loopne
nop
inc
popa
add
daa
add
pop
ja
hlt
fwait
sahf
inc
jne
cmps
in
scas
inc
outs
jge
sub
cmp
or
lahf
adc
or
arpl
icebp
inc
nop
mov
push
leave
outs
loope
shr
sub
or
lds
imul
aas
pop
js
mov
lahf
sub
sub
hlt
lock
push
sbb
ret
xchg
imul
or
mov
push
imul
sbb
push
lahf
xchg
xchg
mov
xchg
mov
xchg
mov
mov
imul
add
push
xor
sub
and
lds
sub
push
(bad)
lods
lea
sbb
mov
jo
cld
cmc
movs
es
xchg
pop
jge
loope
retf
push
and
leave
add
les
xor
imul
ja
imul
aad
les
push
jmp
push
push
(bad)
inc
pop
ret
repz
repz
inc
adc
sub
ja
mov
call
shl
outs
cmp
out
or
add
sub
xor
int3
cwde
arpl
sub
shl
jl
pop
or
mov
and
mov
out
mov
arpl
xchg
mov
retf
sbb
outs
xchg
aam
jge
mov
and
xchg
in
addr16
xchg
add
sub
ins
mov
repnz
xor
test
sub
cmps
mov
xchg
scas
xchg
cmp
xor
pop
or
pop
pop
mov
test
cmp
icebp
and
inc
pop
fcmovb
cld
push
and
jb
in
pop
icebp
cmp
jecxz
sbb
push
shr
jno
cmp
stc
les
popa
iret
inc
sub
mov
xlat
sub
cmp
jmp
xor
sub
arpl
adc
stos
sub
ins
out
test
pop
sar
arpl
add
scas
arpl
lahf
imul
jp
int3
or
cmps
xchg
mov
ins
xchg
sub
cwde
adc
lahf
lods
jb
repnz
push
add
int
mov
pop
pusha
out
mov
jbe
dec
sub
ret
xlat
enter
mov
sub
fidiv
cmp
in
xor
or
mov
adc
lea
in
inc
test
cs
fdiv
pusha
push
push
and
push
mov
enter
mov
mov
xor
ds
retf
cmp
cwde
ret
mov
xchg
mov
mov
mov
inc
rcl
loope
into
out
xor
in
frstor
ret
fisubr
pushf
and
push
stos
call
repz
mov
popf
sub
sbb
dec
mov
jl
sbb
sbb
lds
scas
or
push
leave
and
dec
inc
adc
rcr
out
fs
sbb
xor
cwde
repnz
add
ror
dec
outs
rcl
adc
sti
inc
sub
sahf
fistp
fs
and
inc
add
fstp
call
push
cmps
jae
and
mov
pop
aad
cmps
popf
pop
sub
jae
jmp
push
(bad)
pop
aaa
inc
dec
jle
or
pusha
es
cs
int3
pop
pushf
and
mov
scas
jbe
loope
adc
lea
loope
jmp
sbb
sub
sub
push
lahf
fcomip
and
iret
js
imul
dec
jl
sub
retf
push
mov
out
mov
cs
mov
push
jmp
data16
jmp
mov
add
xchg
jbe
push
jb
jnp
mov
(bad)
sub
cmp
pop
push
jnp
jmp
(bad)
hlt
and
or
dec
mov
shl
and
push
jl
jbe
inc
pop
(bad)
popf
dec
test
push
mov
pop
nop
xchg
jnp
(bad)
pop
jmp
dec
out
jge
cld
stos
out
and
icebp
cmps
adc
jp
into
pop
cmp
out
lea
lds
add
aas
daa
cdq
into
cmps
daa
scas
mov
shl
mov
adc
(bad)
out
iret
sub
mov
mov
ror
movs
sbb
lock
fidiv
pop
push
data16
scas
nop
es
and
(bad)
dec
jmp
inc
push
pop
shr
je
adc
jge
sub
les
out
add
adc
push
sbb
aad
inc
in
enter
adc
adc
out
(bad)
arpl
push
push
cmp
ss
std
lea
add
iret
cdq
retf
add
pop
(bad)
cmps
fadd
outs
scas
mov
jbe
adc
rcl
or
repnz
jno
shl
loop
les
js
mov
ret
pop
mov
aaa
add
xchg
jg
out
dec
mov
out
push
mov
mov
ja
sbb
push
fnstenv
ins
xor
lea
das
adc
mov
pop
pop
ins
dec
sbb
inc
test
stos
scas
(bad)
xchg
mov
xchg
fidiv
shl
cmp
push
aad
xchg
xchg
inc
push
push
jl
cmp
jl
mov
test
je
mov
ins
sbb
cmps
jmp
movs
shr
aaa
mov
cmps
or
mov
jo
cmp
and
pop
mov
out
fcomp
mov
cmp
lea
xor
cmp
bound
add
pop
sbb
jmp
test
jb
bound
scas
pushf
inc
(bad)
adc
je
jno
jb
mov
ds
stos
sbb
mov
push
rcl
je
retf
mov
jbe
popa
pop
dec
jecxz
mov
inc
int
loopne
clc
icebp
and
xor
mov
pop
cmp
or
out
loop
xor
popf
or
iret
in
mov
imul
xchg
(bad)
mov
jle
jmp
push
or
add
sbb
push
lods
aam
cld
add
out
sahf
jb
cmps
std
jg
inc
sbb
push
jl
xor
hlt
je
xor
and
sbb
std
stc
pop
inc
int3
stos
in
loopne
jo
inc
xor
fistp
sbb
out
loope
sub
and
xchg
ins
mov
pop
add
xchg
test
leave
mov
pop
out
push
xor
inc
mov
mov
mov
fwait
pop
xchg
cmp
aam
xchg
jbe
push
rcr
stc
call
test
dec
dec
popa
xor
lods
jne
movs
push
aaa
add
fneni(8087
mov
ins
int3
sbb
(bad)
rcl
sub
mov
sbb
fwait
or
dec
rol
jl
inc
xchg
repz
lds
aam
sub
ror
scas
out
(bad)
cmp
xchg
inc
mov
jmp
cmp
pop
and
cld
sub
arpl
sahf
mov
loopne
jmp
xchg
test
fs
scas
mov
adc
cmc
inc
fucom
mov
sub
inc
add
std
jns
add
adc
leave
xor
cdq
es
or
mov
jb
repz
pop
xor
cmp
cmps
or
aad
test
repz
or
push
push
ja
push
nop
test
(bad)
in
fcmovnu
shl
ror
push
mov
and
add
dec
sub
inc
push
pop
xor
scas
pop
mov
sti
(bad)
dec
scas
leave
popf
daa
xor
mov
pop
js
(bad)
sti
or
call
iret
not
dec
xchg
xchg
push
jg
xor
mov
dec
lods
push
mov
xor
leave
bound
push
pop
pop
xchg
push
mov
and
inc
mov
pop
gs
add
popf
rcr
inc
out
adc
sbb
cmp
mov
outs
fisub
or
aad
in
xor
int
cdq
add
push
pop
inc
test
(bad)
retf
mov
mov
icebp
cs
imul
jle
mov
retf
adc
stos
push
pop
xchg
lds
sub
xchg
iret
mov
imul
xchg
cmps
shr
and
cli
in
inc
pushf
adc
ret
push
mov
in
jnp
ds
mov
push
div
adc
js
ror
add
call
in
hlt
or
mov
addr16
outs
mov
shl
adc
(bad)
jg
mov
mov
jmp
push
adc
pop
into
jecxz
test
xor
bound
retf
cli
push
cwde
mov
xchg
and
shl
aaa
xchg
ss
pushf
sti
jbe
fnsave
add
jle
std
mov
mov
aaa
xor
addr16
or
add
pop
push
repz
mov
int3
xchg
push
iret
aas
clc
jnp
push
mov
rol
jl
ret
sub
mov
pop
pop
or
(bad)
leave
jb
aad
cmp
mov
imul
push
mov
aam
mov
shl
and
xor
mov
mov
les
dec
jbe
iret
repz
scas
sub
mov
out
retf
push
adc
xchg
push
(bad)
xchg
(bad)
test
sahf
outs
aas
ja
push
mov
mov
repnz
mov
add
sbb
mov
movs
pop
sbb
push
pop
mov
call
mov
(bad)
cld
cmp
es
adc
xchg
lods
sti
lods
loope
out
sbb
outs
push
mov
addr16
js
push
pop
push
mov
and
jbe
sbb
call
inc
pop
and
fcomp
and
pop
icebp
ins
jno
dec
out
pop
sbb
xor
cmp
add
jne
std
dec
xchg
mov
in
cmc
mov
add
int3
adc
jb
jg
cmp
aas
xor
cmps
fidivr
mov
aas
nop
mov
dec
fsub
dec
cwde
dec
addr16
xchg
jp
aad
add
fs
pop
mov
(bad)
xchg
push
sub
fbstp
mov
mov
push
mov
(bad)
out
push
pop
(bad)
mov
sbb
imul
ins
int3
mov
imul
idiv
(bad)
leave
ja
dec
in
pop
ja
cmp
fs
cmp
rcr
int3
stos
xor
mov
xchg
mul
scas
aam
cld
mov
fistp
jmp
data16
ret
cmp
mov
pop
rcl
fdiv
mov
(bad)
fdivr
push
pop
hlt
pop
or
mov
and
call
inc
in
push
loopne
xchg
addr16
lahf
push
aad
push
fld
aam
call
push
inc
test
cli
jnp
iret
push
cmps
jg
ficom
sub
daa
sbb
xchg
clc
dec
(bad)
or
mov
aam
cmp
stos
xchg
adc
sub
jl
bound
idiv
rol
shl
jno
xor
in
mov
dec
sub
xchg
movs
push
movs
test
xor
xor
das
xor
ins
mov
movs
es
jns
mov
scas
(bad)
pop
xchg
shl
xchg
das
pop
xchg
sbb
mov
adc
or
test
dec
sub
mov
and
clc
call
mov
mov
in
test
sub
test
inc
data16
sbb
add
dec
emms
sbb
mov
dec
cdq
rcr
je
sub
adc
loopne
cmc
and
daa
cli
xchg
pop
lock
in
dec
inc
scas
push
fidiv
clc
ins
adc
icebp
jae
sbb
daa
pop
stos
scas
pop
(bad)
pop
mov
jge
mov
xchg
mov
xor
adc
mov
jbe
pusha
mov
mov
out
ins
adc
ret
(bad)
test
fcmove
cs
sub
test
jecxz
je
mov
(bad)
push
pusha
les
fistp
mov
das
stos
adc
inc
cmp
sub
shr
movs
call
xchg
or
xchg
push
dec
push
dec
mov
jmp
mov
push
xor
push
into
pop
or
aam
push
call
adc
pop
cmp
imul
sub
loope
shr
(bad)
nop
mov
inc
adc
dec
inc
cmp
inc
pop
adc
sbb
jmp
shl
sbb
push
sbb
clc
jae
shr
int
ja
xor
mov
sub
push
sub
out
dec
pop
add
mov
(bad)
cmp
div
push
jns
push
popa
xchg
das
ret
int
out
mov
xchg
cmp
cmp
mov
mov
rcr
shl
les
cmp
(bad)
xchg
aam
ja
icebp
fs
push
xor
lods
pop
mov
adc
jg
shr
inc
test
in
fadd
mov
movs
mov
adc
inc
adc
mov
dec
sti
retf
jmp
test
jg
and
adc
stc
mov
inc
mov
sub
femms
adc
cmp
sbb
inc
daa
pop
cwde
test
xor
jmp
mov
and
mov
sub
(bad)
sbb
aaa
dec
aaa
nop
shl
sub
jae
sub
fidiv
repz
popf
cmp
inc
mov
cld
and
jmp
mov
je
and
lds
or
and
dec
out
cmps
(bad)
xor
(bad)
popa
inc
dec
arpl
inc
jmp
push
pushf
add
aad
jne
mov
pusha
sar
cs
fs
inc
cmp
push
dec
and
pop
and
mov
popa
std
(bad)
mov
jnp
mov
icebp
xchg
dec
sub
hlt
leave
(bad)
(bad)
lds
sti
add
push
aad
das
loopne
test
xor
repz
inc
mov
push
in
(bad)
jmp
shl
pop
call
stos
mov
push
mov
jae
push
mov
xor
and
fisttp
(bad)
call
movs
loopne
xchg
(bad)
xor
(bad)
cmp
inc
cmp
mov
pop
das
ja
ret
jbe
dec
xchg
jae
pop
pop
iret
mov
dec
data16
cdq
js
sbb
dec
nop
dec
test
mov
xchg
(bad)
sub
call
jg
mov
xor
enter
cmp
mov
jmp
test
sbb
stc
sbb
jb
cmp
push
cld
mov
fwait
adc
int
outs
mov
push
push
xor
add
sub
cmps
pop
push
sti
aas
lock
idiv
retf
dec
cdq
fstp
(bad)
sbb
pop
inc
outs
fdiv
retf
dec
pop
push
push
ins
std
ss
je
inc
mov
repz
std
loopne
xchg
lea
xor
add
dec
jecxz
mov
mov
mov
test
lods
fbld
rcr
shl
in
ja
mov
jne
sti
adc
xor
pslld
jge
mov
pop
sub
xchg
js
mov
push
xchg
(bad)
mov
jecxz
add
fsub
pop
das
sbb
fisttp
fldenv
lea
lea
pop
hlt
aad
push
cwde
mov
cmps
call
add
pop
xchg
ror
das
sub
dec
js
lahf
out
mov
adc
and
or
std
fild
or
xor
pop
movs
and
mov
xchg
loope
(bad)
xchg
ffree
outs
fnstsw
push
jnp
mov
cmc
dec
test
mov
ja
rcr
les
addr16
sub
jecxz
xlat
push
cmp
or
scas
jg
and
inc
je
lea
ds
xchg
(bad)
xor
or
inc
sbb
or
jg
in
adc
fsub
add
das
mov
adc
sbb
imul
movs
xor
or
mov
icebp
mov
add
mov
inc
(bad)
icebp
pop
cmp
mov
push
jg
add
imul
pop
stc
add
cmp
or
clc
push
jns
sub
and
ret
cmp
ins
sbb
cwde
je
push
mov
ja
dec
fwait
dec
inc
int3
pop
push
daa
push
jno
lods
lahf
fbld
fimul
dec
call
xchg
mov
xlat
dec
adc
adc
dec
int
cmp
scas
cmp
adc
jp
in
adc
je
push
gs
pop
push
movd
adc
jle
and
adc
sbb
pop
stc
loope
fstp
pop
add
test
leave
sar
je
cmp
dec
or
inc
imul
jb
gs
sub
pop
xchg
clc
xor
dec
push
mov
cld
(bad)
jmp
out
pop
mov
push
mov
test
and
adc
fsubr
jns
adc
out
aas
and
test
pop
push
(bad)
fcom
cmp
ret
cmp
adc
mov
dec
loopne
mov
or
push
and
loope
dec
push
(bad)
iret
rcl
cmp
pop
mov
lea
sub
div
jmp
fnstsw
scas
pop
dec
pop
push
xor
jp
lods
cmp
mov
ss
mov
fs
stc
add
addr16
pushw
test
dec
adc
(bad)
fwait
dec
pop
scas
sbb
add
je
add
js
inc
add
arpl
retf
jmp
lods
mov
movs
xchg
sub
jo
inc
pushf
xor
(bad)
test
jmp
retf
scas
and
add
sbb
adc
mov
cmp
loopne
int3
sahf
sbb
loop
ins
cwde
lock
call
lods
test
jecxz
mov
inc
fistp
std
iret
stos
pushf
shl
aad
inc
idiv
pusha
scas
jge
xchg
jae
gs
inc
div
push
xor
repnz
shl
icebp
ret
pop
xor
mov
add
shl
inc
std
push
ffree
outs
repz
mov
or
pop
fidivr
lock
pop
cmp
bound
adc
mov
mov
inc
or
jecxz
jecxz
or
jmp
out
repz
sbb
pop
icebp
cdq
imul
les
push
out
push
loope
add
sbb
arpl
jmp
pop
std
cdq
popa
icebp
inc
pop
retf
and
push
rcr
ss
mov
test
xor
push
int3
mov
mov
hlt
call
stos
test
inc
scas
pop
loope
fsub
mov
test
neg
sbb
push
out
sbb
imul
push
pop
popa
adc
adc
push
cmp
cmp
call
cwde
dec
pop
mov
icebp
inc
lods
repz
aas
adc
adc
sbb
bound
xchg
lods
and
cmc
or
lods
adc
sar
loop
adc
fs
test
push
popf
fimul
cmc
(bad)
ins
ds
add
imul
pop
loopne
icebp
ficomp
rcr
lods
mov
iret
pop
mov
adc
xor
mov
cmc
xor
fbstp
pop
push
leave
cmp
in
test
add
sub
sbb
adc
repnz
jl
add
ins
mov
pop
and
aaa
stos
pusha
clc
xchg
lods
test
inc
stos
xchg
das
enter
out
dec
movs
test
or
lods
scas
mov
aam
sub
add
mov
push
sbb
out
sar
push
cmp
cmps
cmps
fisttp
mov
test
stos
ja
lods
mov
les
shr
mov
and
mov
sub
daa
in
mov
aas
sbb
retf
pop
int
sti
push
aaa
dec
aam
in
dec
imul
nop
retf
lods
jmp
sahf
ins
iret
mov
xor
pop
mov
add
adc
adc
ret
adc
pop
or
int
mov
dec
adc
adc
cmps
(bad)
in
push
es
repnz
dec
adc
stos
pop
shl
mov
adc
dec
add
sub
bsf
pop
stos
pop
mov
pop
jle
pop
inc
mov
fmul
and
and
push
rol
mov
push
rcr
in
(bad)
cld
or
and
mov
stos
movs
shl
dec
lea
popa
out
adc
xor
push
pop
into
xchg
add
xchg
xchg
test
imul
out
add
loop
retf
and
jg
shl
cmp
sub
rcl
(bad)
cmp
addr16
jo
mov
or
enter
test
cdq
mov
adc
aaa
xor
int3
repnz
ficom
fidivr
push
inc
push
mov
adc
out
inc
xchg
daa
xchg
jmp
sub
cmps
icebp
mov
call
sbb
add
dec
push
mov
loop
aaa
aaa
jmp
js
outs
or
xor
es
mov
(bad)
pop
(bad)
mov
das
jg
cmp
fcomp
pop
dec
push
sbb
in
xor
test
pop
sbb
shl
sbb
or
pop
movs
and
xor
adc
outs
icebp
popf
add
retf
in
scas
xor
sub
call
and
outs
aad
mov
lods
repnz
je
pop
pop
inc
xor
inc
mov
inc
ffreep
jno
sub
mov
addr16
cmp
mov
stc
sub
pop
xor
(bad)
xor
mov
les
mov
int
std
dec
inc
lods
jle
sub
and
popf
adc
mov
ins
ror
sti
sub
add
test
mov
cmps
ins
int3
leave
xchg
push
(bad)
cs
pushf
inc
inc
mov
(bad)
(bad)
stos
fwait
inc
ror
pop
nop
and
daa
sahf
mov
jmp
pop
xchg
loop
mov
xlat
sbb
dec
mov
mov
jmp
or
ficom
cmp
pop
jnp
xor
ins
pop
inc
xchg
dec
add
sbb
dec
sbb
sbb
push
add
jo
mov
pushf
push
out
dec
add
jl
jmp
pop
mov
inc
in
call
push
mov
add
inc
iret
inc
shl
or
xchg
inc
inc
xchg
inc
dec
mov
(bad)
mov
adc
fwait
sub
(bad)
xlat
sub
or
inc
mov
add
lea
sub
xor
ss
adc
bound
xchg
fwait
mov
xor
int
retf
popf
mov
jp
dec
dec
mov
ret
test
test
cmp
dec
pop
pop
and
cmp
test
in
push
out
mov
test
out
leave
enter
scas
inc
div
and
pusha
sub
inc
cli
adc
add
push
(bad)
out
aad
push
cmps
test
das
icebp
mov
jmp
add
dec
lahf
stc
inc
inc
mov
xor
jge
mov
retf
int3
pop
xor
into
xor
cld
push
aad
pop
jge
jl
sbb
push
cmp
popa
push
std
or
xchg
out
int3
mov
pop
loop
sub
dec
and
sub
call
mov
clc
imul
out
sub
ins
popa
ret
cmps
pop
push
sbb
pop
jne
sti
ficomp
jno
mov
mov
fwait
adc
mov
movs
fmul
test
jg
jno
movs
arpl
call
xchg
mov
je
mov
loope
mov
lds
dec
daa
out
sbb
aas
jo
add
mov
enter
xchg
sti
inc
outs
not
jle
xchg
popf
xchg
ins
push
lds
cmp
sub
mov
mov
pop
repnz
jg
fisubr
es
(bad)
mov
mov
push
adc
shr
pop
scas
mov
adc
(bad)
ds
jo
jns
lds
ror
or
fild
nop
adc
dec
adc
mov
cwde
ret
stc
(bad)
ror
xchg
inc
jmp
or
or
xor
add
cmps
and
and
pop
shr
jle
mov
leave
(bad)
js
sub
das
call
mov
add
dec
pusha
or
or
cmp
and
cwde
and
or
in
pop
xor
inc
add
je
test
mov
scas
xchg
cmc
rcr
push
add
push
into
fcomp
or
sbb
and
jns
dec
push
xchg
cld
rol
inc
retf
iret
push
xchg
xor
nop
sbb
(bad)
out
mov
cs
leave
dec
imul
mov
int
or
stos
jle
retf
js
sbb
jbe
gs
imul
add
push
sbb
in
pusha
jns
add
ret
and
mov
and
push
jle
mov
leave
fisttp
mov
or
mov
jp
jmp
cld
xor
leave
dec
pushf
(bad)
fwait
mov
xchg
icebp
mov
add
xchg
inc
outs
scas
sbb
gs
dec
or
mov
inc
out
mov
mov
xor
or
cmc
lock
fcom
fucomp
mov
xchg
mov
out
push
add
jno
push
jle
push
mov
adc
test
rcl
and
mov
popa
and
jecxz
fwait
pop
retf
lahf
stos
add
xchg
int3
fwait
das
out
out
sbb
xchg
add
or
sbb
pop
std
adc
lock
jg
xchg
pop
xor
retf
aaa
test
fs
mov
adc
xrelease
or
ss
pop
sub
gs
dec
es
mov
or
fcomp
push
mov
xor
adc
push
lods
mov
into
xchg
movs
push
leave
sbb
mov
ja
test
pushf
imul
aam
dec
not
pop
bound
cmp
gs
pop
fs
dec
fcomp
call
push
push
adc
push
fstp
pop
inc
push
xor
psrld
ja
sub
movs
xchg
js
push
mov
aaa
imul
or
mov
jb
inc
(bad)
lds
outs
je
(bad)
jmp
aas
int
gs
sbb
lods
cwde
sbb
sbb
sahf
lods
or
into
inc
test
push
pop
pop
test
xor
sti
add
push
xchg
inc
daa
pop
test
stos
sub
(bad)
(bad)
mov
adc
and
pop
not
or
adc
scas
(bad)
stos
mov
mov
inc
jl
(bad)
sbb
mov
jbe
fbstp
repnz
repnz
in
inc
rcl
and
push
jns
mov
fwait
inc
imul
movs
cmps
pusha
add
and
ret
mov
sar
add
rol
(bad)
out
adc
inc
pop
jne
sub
sbb
mov
(bad)
cmp
xlat
pop
mov
fcom
pop
scas
sbb
scas
bound
fld
xor
call
add
push
push
xchg
fldenv
and
aam
(bad)
jbe
cmp
jbe
pop
aaa
or
test
div
outs
enter
aas
dec
push
(bad)
mov
mov
gs
xchg
or
push
cmps
mov
xchg
leave
adc
aaa
and
xchg
adc
retf
ror
mov
jne
leave
ficomp
sar
out
push
or
xchg
ficomp
fisttp
test
and
call
pop
ret
mov
arpl
gs
dec
mov
(bad)
cmp
jle
mov
daa
in
jo
add
sbb
into
ja
es
and
out
out
test
int
out
mov
cmc
push
imul
add
xor
je
sbb
retf
push
xchg
mov
cs
cmp
xor
pop
mov
adc
pushf
push
lds
cmp
or
dec
push
idiv
xor
jle
loopne
lahf
iret
not
push
xlat
jns
jle
adc
movs
jns
jo
jne
leave
pop
pop
mov
rol
rol
push
std
aad
scas
mov
and
retf
aaa
pop
inc
xchg
mov
not
dec
pushf
addr16
adc
and
sbb
adc
xchg
xchg
adc
and
fwait
in
es
or
mov
out
cs
mov
ja
rcr
dec
sbb
and
movs
pop
jmp
adc
fstp
xchg
dec
ficom
test
test
sbb
(bad)
xchg
rcl
fst
mov
dec
into
idiv
cmp
cmp
pop
push
xchg
dec
cmp
movs
sbb
inc
mov
jge
dec
or
(bad)
popf
mov
dec
fidiv
push
outs
cmps
rcl
int3
push
retf
inc
nop
mov
mov
sub
mov
mov
sbb
push
leave
lods
or
es
out
(bad)
out
jge
pop
mov
ror
and
jo
dec
nop
scas
lea
jecxz
mov
ja
sbb
lods
xor
push
xchg
mov
ins
(bad)
jmp
jns
jns
jecxz
fcomp
loope
mov
mov
fisttp
dec
ja
mov
dec
push
loope
cmp
pop
and
pushf
pushf
stos
out
sub
add
loop
dec
lods
call
sub
retf
jmp
mov
and
sub
pop
inc
mov
mov
pop
push
mov
inc
ja
push
xchg
ja
push
test
inc
in
(bad)
sub
jo
inc
movs
inc
or
mov
imul
sbb
pop
adc
cmps
aam
stc
sub
lea
inc
stos
or
mov
mov
test
xchg
pop
lock
mov
inc
mov
push
test
push
(bad)
xchg
mov
bound
arpl
mov
and
inc
inc
aad
cdq
test
inc
ins
mov
(bad)
int
sahf
jle
lods
div
push
jge
push
mov
xor
sub
jmp
xchg
fs
inc
jno
xchg
add
mov
xor
out
popf
ds
jmp
clc
fbstp
mov
push
fisub
out
mov
pop
push
dec
dec
in
mov
ret
sub
sar
xchg
push
cdq
or
jg
sbb
ret
fwait
push
push
shr
das
jmp
xchg
mov
pop
inc
scas
sbb
mov
inc
pop
dec
push
int3
out
xchg
(bad)
rol
inc
pop
icebp
mov
outs
shr
or
mov
push
dec
or
mov
pop
mov
movs
ja
lods
sahf
es
jmp
sub
hlt
in
xor
sbb
test
sbb
dec
repnz
inc
xor
dec
aam
cmp
jmp
in
inc
mov
out
jmp
jl
jb
lods
sahf
cld
xor
xchg
out
mov
xor
or
jb
retf
lods
fwait
sahf
shr
adc
(bad)
out
sub
ficomp
dec
div
push
push
(bad)
rol
clc
fwait
push
test
jbe
mul
pop
mov
clc
mov
aaa
scas
loopne
js
loop
cld
cli
in
sbb
dec
and
sub
cdq
push
scas
mov
fld
xchg
jg
jae
inc
push
and
push
ret
jl
addr16
or
aam
ja
push
xchg
and
leave
push
mov
sbb
sti
rol
mov
sar
inc
pop
push
sub
sub
sbb
pop
iret
fwait
mov
(bad)
mov
push
(bad)
test
call
jmp
and
cld
jns
cli
daa
frstor
imul
dec
pop
in
(bad)
or
pop
in
pop
jne
test
fidiv
rol
push
sub
clflush
loopne
add
lods
xor
add
mov
(bad)
ficom
ret
push
retf
mov
loop
ins
out
jmp
dec
outs
loop
dec
sbb
test
shr
pop
sti
pop
std
push
pop
loopne
test
loop
pop
jno
cmps
ret
sub
dec
sub
les
pop
and
cmp
xchg
sar
pop
xchg
xchg
clc
cmps
int3
aas
sbb
adc
repz
sub
mov
ret
in
mov
or
mov
les
mov
stos
hlt
mov
jnp
and
sbb
jl
push
imul
mov
sti
out
std
push
fstp
xchg
mov
cmp
loope
xchg
xor
js
mov
add
pushf
push
cmps
push
pop
lock
ins
dec
add
iret
fstp
jnp
lahf
add
mov
cdq
ret
in
arpl
adc
sub
jge
mov
leave
icebp
ins
sub
and
jg
xor
out
mov
pop
movs
popa
push
add
cmp
lock
mov
mov
mov
movs
and
fnstcw
int3
jbe
or
gs
pop
xor
pop
adc
cmc
gs
cmp
mov
in
loope
push
jp
not
pop
and
jmp
inc
mov
push
lods
enter
or
test
(bad)
mov
enter
clc
push
cmps
out
and
pop
lds
mov
pop
or
jae
adc
jecxz
jp
push
stos
xchg
push
mov
mov
sbb
cwde
mov
loop
cmp
call
push
push
ins
clc
or
cmp
add
cmp
lods
outs
xor
popa
or
addr16
xchg
clc
(bad)
out
or
jns
nop
jp
mov
adc
xchg
loop
add
pop
xlat
mov
and
adc
dec
es
xchg
sub
add
add
jb
out
in
cmp
mov
int
mov
adc
sbb
dec
xchg
scas
sbb
rol
inc
jbe
lahf
add
cmp
or
cmp
jne
mov
inc
adc
fstp
mov
(bad)
stc
mov
xor
in
lods
xor
sub
and
inc
inc
(bad)
pop
pop
movs
pop
arpl
repz
dec
hlt
test
cmpxchg
imul
adc
imul
lds
and
neg
icebp
jge
scas
xchg
or
pushf
mov
mov
dec
xor
jne
or
push
daa
dec
in
rcr
pop
pop
inc
jo
mov
jmp
lods
popa
mov
dec
movs
scas
jg
adc
mov
cmp
arpl
mov
shr
aas
mov
ror
loope
movs
pop
test
or
xchg
dec
in
pushf
fbstp
mov
call
loopne
ffreep
out
aas
out
test
jge
movs
jo
pop
and
gs
add
dec
ret
sub
push
in
sbb
cmps
gs
ins
xor
in
mov
das
ss
stc
sbb
add
pop
sbb
add
gs
dec
inc
jecxz
(bad)
leave
daa
lock
pop
mov
fdiv
mov
pcmpgtw
imul
cdq
daa
sahf
outs
ins
shl
jecxz
cmp
pop
in
imul
les
popa
or
cmp
mov
cmps
xor
sub
out
xor
cmp
pop
scas
repnz
jle
cmc
test
test
cmp
mov
dec
adc
pop
test
pop
cmps
(bad)
(bad)
fcmovbe
lahf
pop
in
push
loop
into
pusha
les
std
adc
xchg
cwde
mov
mov
cmp
pop
das
in
(bad)
sub
clc
std
jno
sub
inc
cmp
je
mov
aad
gs
xchg
int
mov
and
test
loop
ja
movs
mov
shr
and
ret
mov
add
nop
ret
mov
push
push
jmp
mov
fistp
pop
xchg
iret
(bad)
aaa
or
cs
sbb
not
or
push
fadd
dec
stos
aaa
add
adc
fldcw
imul
rcr
mov
mov
and
out
push
out
outs
ins
out
or
mov
dec
test
cmp
lods
outs
or
xor
fisttp
nop
add
test
pusha
movs
adc
sub
push
nop
adc
(bad)
mov
pop
addr16
imul
mov
inc
push
popf
(bad)
mov
and
sbb
fdivr
sbb
cmp
ss
lea
fwait
test
iret
(bad)
in
in
cmp
mov
test
out
f2xm1
fcomp
jb
imul
mov
jge
mov
ror
mov
adc
enter
mov
xor
and
ins
and
(bad)
fbld
(bad)
rcl
add
lods
in
mov
cld
inc
lods
(bad)
sbb
mov
test
sub
test
jne
inc
ins
jmp
ja
cs
leave
loop
das
lods
mov
xchg
sbb
jbe
nop
inc
mov
mov
dec
mov
inc
cmp
xlat
ret
mov
dec
adc
mov
mov
xor
inc
jae
mov
sar
sub
push
inc
push
int
xor
mov
test
xchg
aam
sub
dec
or
test
lods
out
cdq
mov
inc
pop
jne
mov
out
push
adc
jne
sub
dec
pop
mov
loopne
sbb
inc
add
mov
jne
push
fcmovu
sbb
jne
mov
aaa
mov
push
fsubr
ror
aam
int3
sbb
loope
neg
push
sub
mov
in
lods
dec
mov
dec
imul
mov
pusha
add
and
sub
lds
repnz
mov
dec
dec
loope
mov
push
pop
inc
fistp
js
addr16
dec
stc
xchg
loope
push
add
dec
jg
inc
sub
mov
aaa
push
arpl
adc
ret
mov
fst
xor
(bad)
retf
dec
pop
sub
adc
adc
pop
ficom
cmc
hlt
cmps
ja
(bad)
movs
gs
hlt
outs
jne
jmp
jp
pop
in
fiadd
(bad)
mov
pop
int3
pop
lods
data16
mov
mov
xchg
cmp
stos
outs
mov
cdq
mov
nop
into
inc
in
mov
add
retf
cdq
inc
cmp
and
sub
cmc
inc
sbb
ins
xor
sbb
and
ficom
sbb
mov
pop
sar
jbe
pop
or
ja
ret
ja
or
jmp
shl
xchg
aaa
scas
data16
adc
xor
jo
mov
jmp
push
mov
xchg
push
xor
arpl
(bad)
clc
jge
jmp
scas
mov
add
jecxz
jmp
and
jge
cmp
push
mov
int
jo
clc
inc
adc
jp
add
sub
pop
mov
xor
dec
jg
sub
fstp
pop
aas
mov
sub
mov
fdiv
xlat
sbb
fist
push
fsub
mov
and
push
cmp
out
ds
mov
sbb
adc
pop
rcl
bound
popf
ins
sub
mov
cmp
and
cli
scas
cwde
xlat
push
fwait
rol
push
jl
xor
rcr
sub
retf
sub
seta
(bad)
in
icebp
(bad)
adc
dec
fidiv
imul
(bad)
adc
popf
into
add
ins
push
arpl
pop
add
sbb
out
sub
mov
adc
test
fimul
in
es
repz
jmp
clc
dec
adc
xor
retf
scas
out
push
xchg
and
ins
aad
or
inc
das
xor
sbb
enter
and
push
lock
cmc
mov
mov
xchg
enter
imul
out
mov
jge
xchg
and
add
icebp
mov
xchg
push
test
icebp
mov
cmp
push
shl
mov
cdq
stos
xchg
(bad)
fnsave
xlat
sub
fsub
pop
mov
repnz
cmp
adc
popf
mov
sbb
cmp
jg
mov
adc
mov
call
dec
in
mov
in
push
cwde
xor
adc
or
(bad)
jecxz
mov
mov
aam
ds
lods
dec
adc
sar
push
test
dec
xor
inc
(bad)
pusha
repz
imul
cmp
repz
mov
mov
out
mov
gs
sbb
sbb
sbb
xor
jns
dec
stos
push
loopne
push
xor
jmp
sub
sub
mov
das
(bad)
(bad)
xchg
iret
pushf
push
int3
xor
add
lods
fimul
and
and
xacquire
push
bound
mov
stos
(bad)
out
mov
jae
sbb
jns
mov
or
mov
(bad)
stos
adc
xor
xor
mov
jo
loop
rcr
jnp
sahf
jmp
and
shr
sub
adc
retf
ds
sub
pop
sbb
pop
jnp
cld
cmc
fcmovbe
cli
(bad)
jbe
and
adc
jbe
aas
movs
mov
mov
fnsave
dec
icebp
clc
mov
push
cmp
cmp
push
jns
popa
push
pop
fcmovb
repz
mov
out
add
sbb
sbb
leave
or
shr
clc
mov
push
std
sub
fdiv
pop
sub
test
imul
(bad)
sub
jno
repnz
mov
(bad)
and
pop
cmp
shl
xor
in
push
loop
and
sbb
jbe
pop
fstp
jbe
xor
cmp
jecxz
and
retf
jno
and
sub
pop
adc
push
sbb
gs
xchg
push
push
xchg
out
out
cmp
test
(bad)
cmp
mov
add
cmp
cmp
or
add
pusha
sub
stos
aas
stos
repz
inc
aas
dec
movs
add
(bad)
jmp
outs
fsub
je
inc
loope
aad
mov
or
loope
add
cmp
fild
icebp
jbe
mov
push
push
dec
xchg
adc
lods
repnz
outs
jge
test
adc
mov
push
ror
push
or
mov
inc
pop
sbb
push
je
jo
push
sti
push
jbe
out
push
mov
adc
hlt
stc
or
add
jnp
add
out
setns
call
nop
push
fs
(bad)
xchg
jb
fidiv
xor
pop
fwait
js
xchg
jns
gs
ret
out
push
out
add
mov
push
and
inc
aas
sub
adc
ror
mov
sub
cwde
xchg
xor
mov
lea
(bad)
push
xchg
mov
inc
aam
jp
pusha
out
sub
std
out
popa
inc
xor
jne
cmc
bound
dec
or
jno
into
call
add
pop
xor
rcr
inc
es
imul
jg
xlat
imul
jns
cs
jb
and
sub
mov
add
sub
cmp
retf
dec
xchg
add
pop
xlat
inc
mov
and
out
push
push
sub
je
dec
daa
dec
fisubr
add
mov
and
inc
mov
and
jle
xlat
mov
or
pop
gs
jmp
fcomi
js
sbb
pop
jbe
dec
inc
(bad)
movs
aam
fldcw
jb
(bad)
movs
repz
cmp
mov
stc
mov
jle
mov
inc
or
or
mov
inc
mov
jmp
jge
cmc
xchg
out
hlt
loopne
dec
inc
outs
push
sub
ja
repnz
mov
cmp
movs
mov
xor
push
xor
les
out
mov
out
clc
xor
push
dec
pop
dec
addr16
xchg
xor
out
int
rcr
xlat
adc
imul
sbb
cmp
std
jl
mov
ins
pinsrw
pop
nop/reserved
mov
xchg
fwait
cli
mov
jb
daa
loopne
or
cs
jae
call
scas
and
xchg
imul
sub
les
fidivr
in
add
cmp
lock
pop
mov
retf
pop
fld
fnstsw
in
adc
scas
loop
test
sub
xor
lea
shr
movaps
sub
pop
xchg
sub
dec
jmp
sbb
clc
icebp
inc
add
nop
mov
xor
cmps
lahf
aas
jl
scas
mov
or
pop
ja
js
mov
retf
or
or
std
inc
cmp
xchg
scas
mov
sbb
or
out
push
sti
xor
inc
cld
jb
data16
dec
adc
xor
retf
inc
sbb
movs
xor
xor
xsave
lods
jnp
and
imul
jmp
cwde
in
js
and
stos
adc
ja
(bad)
xor
push
or
jns
outs
mov
je
mov
aad
xor
cld
or
fs
push
mov
mov
outs
or
add
jno
pop
outs
adc
push
sub
sbb
dec
mov
adc
mov
fs
enter
or
mov
mov
outs
mov
push
jae
push
je
cwde
fiadd
adc
loopne
out
cmp
adc
cli
shr
out
sub
hlt
in
neg
mov
push
fsub
stos
fwait
push
ds
les
push
adc
mov
inc
stc
loopne
(bad)
aam
pop
arpl
xchg
loop
ret
jnp
ins
xchg
mov
xchg
movs
pop
lea
push
pop
mov
add
lock
inc
jne
mov
xor
xchg
scas
xchg
mov
clc
pusha
enter
jp
cli
mov
jmp
cmps
or
out
mov
retf
out
arpl
hlt
xchg
mov
clc
xor
add
sub
mov
sub
mov
fwait
test
fisttp
in
inc
mov
aas
mov
ret
cs
sub
ror
sar
stc
ins
in
je
out
dec
fld
push
jne
push
sub
jno
scas
push
in
add
pop
repnz
mov
ins
scas
lahf
sti
loope
repnz
cmp
out
xchg
cmps
out
jb
fidivr
rcl
and
cmps
rcr
mov
(bad)
and
lea
add
mov
xor
pop
out
pop
bound
out
cmps
jecxz
sub
dec
outs
or
jae
dec
xchg
in
cmp
cld
push
pop
adc
add
push
lods
call
inc
cmp
add
sub
addr16
mov
dec
inc
adc
addr16
ret
std
mov
add
mov
mov
mov
cmps
inc
fsubr
(bad)
retf
mov
cmp
mov
and
mov
adc
lods
es
dec
push
scas
adc
pop
das
(bad)
(bad)
sti
xor
ja
lahf
push
cwde
dec
dec
jns
mov
fcomi
enter
in
jne
mov
push
cmp
repnz
arpl
cmp
rcl
pop
xor
or
add
test
dec
sahf
add
repnz
jo
xchg
xchg
sbb
dec
retf
enter
xor
jmp
adc
add
jb
int3
sub
mov
sub
mov
ins
ss
sti
loope
push
js
ret
cdq
popf
out
cmc
xchg
adc
mov
dec
ins
movs
add
sbb
jmp
sbb
sbb
cmp
rcl
lock
sub
rol
mov
pop
ss
pop
sub
and
sub
mov
and
ins
push
(bad)
loope
mov
pop
enter
cdq
push
imul
sahf
pop
and
and
or
ret
ret
arpl
pushf
scas
sub
stos
pop
in
push
and
xchg
stos
xchg
mov
mov
add
xchg
shr
fisttp
jno
icebp
ins
xor
iret
pop
mov
fcmovnu
jp
loopne
pop
push
cmp
xchg
xlat
pop
ror
mov
and
add
shl
add
push
cmp
call
jg
iret
pop
xor
cld
shr
push
clc
iret
push
xor
and
adc
cmps
dec
pop
sub
imul
push
(bad)
into
mov
or
and
adc
aaa
xor
mov
or
pop
mov
mov
leave
lods
mov
outs
mov
sbb
idiv
add
cmp
xchg
xchg
and
pop
std
mov
test
sbb
cwde
push
enter
jg
pop
pop
cmc
and
pop
mov
retf
dec
xor
sbb
fidiv
pop
sbb
ins
mov
or
xlat
mov
lea
xor
arpl
dec
add
ss
mov
dec
rol
cmp
loopne
arpl
into
dec
jle
push
adc
cmps
or
enter
test
daa
pop
fild
dec
gs
sar
mov
scas
and
push
stc
pop
cld
push
cmps
and
inc
pop
jp
inc
prefetchw
mov
fidiv
push
push
fwait
cmp
jne
sub
push
pop
pop
or
das
inc
jo
xor
mov
pop
pop
and
lock
cmp
or
pop
(bad)
jbe
retf
mov
ret
and
sub
aaa
outs
adc
add
ret
inc
mov
dec
cli
dec
cmps
lods
adc
dec
inc
out
xchg
aad
mul
aas
fsubr
fst
cmp
clc
fldenv
outs
loope
pop
aaa
cmps
jo
adc
cli
sbb
daa
test
fucomi
repz
inc
cld
dec
mov
rol
jnp
xor
or
or
sbb
inc
cmp
cmps
leavew
pop
jp
aam
dec
hlt
cmp
inc
not
and
push
push
mov
pusha
jl
jmp
in
mov
cmp
fistp
std
push
sbb
outs
call
sub
xor
mov
mov
adc
sbb
ja
sbb
stos
out
xchg
fild
xchg
jae
sub
add
pop
icebp
es
retf
mov
cmp
jmp
and
inc
pop
dec
push
ja
push
stos
xchg
retf
dec
rol
stos
leave
sbb
jmp
pop
sub
mov
gs
int3
and
test
int3
ret
add
pop
in
xchg
cwde
sbb
jmp
jge
fidivr
jmp
int3
call
inc
adc
dec
loope
fldl2e
loop
push
and
xchg
mov
sub
pop
dec
pop
aaa
add
push
dec
das
add
pushw
scas
pusha
or
sbb
lods
push
xor
cmp
aaa
retf
aas
and
dec
sbb
lods
jae
cmp
out
aas
repz
movs
outs
mov
neg
into
ins
mov
or
sub
xchg
out
mov
ins
pusha
lods
xchg
fistp
cmc
ins
and
cmc
jo
mov
xlat
mov
adc
xchg
xchg
scas
call
aas
popf
mov
lods
pop
mov
ficomp
loop
and
leave
in
fnstenv
pop
or
shl
hlt
push
popa
mov
dec
sar
cmp
ret
mov
in
(bad)
shr
lods
xchg
ss
jmp
jge
test
jae
dec
dec
dec
test
imul
cli
cmps
xchg
adc
mov
mov
sub
cmp
lahf
push
test
cld
pop
cmp
jmp
retf
es
or
pop
ss
xchg
dec
add
sbb
dec
repnz
lahf
idiv
mov
sbb
xor
ds
inc
mov
pop
stos
jl
hlt
mov
push
xlat
xor
retf
loop
js
push
movzx
push
push
aam
mov
xor
popa
push
push
jge
inc
jne
das
rcr
mov
jbe
movs
in
or
aaa
(bad)
fdiv
mov
mov
and
and
mov
shr
and
jne
ret
ds
jl
xor
add
cmp
cmp
adc
aas
cmp
or
call
shl
cli
jl
adc
(bad)
xor
and
xchg
dec
test
ror
stos
in
push
xchg
inc
sub
jp
test
push
and
scas
push
jecxz
(bad)
jge
imul
jno
mov
jo
clc
movs
adc
int3
sbb
xchg
loopne
dec
pop
sbb
call
dec
mov
lock
fptan
xchg
ficom
xchg
(bad)
jle
fs
inc
xor
pop
or
mov
adc
push
ret
or
inc
push
lahf
div
inc
outs
inc
mov
mov
cdq
jg
mov
jns
mov
inc
mov
ret
cmp
xchg
out
pop
jnp
dec
aam
call
loopne
(bad)
jmp
mov
sub
shl
mov
sbb
das
jmp
or
nop
or
inc
xor
mov
fdiv
add
add
fnstsw
mov
lahf
xor
adc
pop
push
sub
fld
jnp
inc
pcmpeqw
pusha
out
dec
retf
xchg
xor
jno
aad
cmp
jb
addr16
adc
movs
pop
pop
jmp
add
ss
xor
addr16
jae
fdivr
mov
xor
stos
push
jo
out
jb
fistp
inc
add
mov
mov
retf
jne
(bad)
mov
lahf
or
fsubrp
(bad)
mov
mov
mov
sbb
pop
ficom
mov
xchg
std
add
inc
(bad)
addr16
aad
cmp
pushf
mov
cmp
sub
out
pop
jmp
es
mov
mov
loop
mov
cmp
mov
test
clc
pop
stc
int
and
xlat
jno
enter
mov
imul
cmp
lods
mov
mov
add
addr16
jle
xchg
inc
lock
push
ins
cwde
jne
stos
add
jmp
retf
cmp
cmps
les
pop
data16
loop
mov
cmps
fcom
sbb
mov
dec
xchg
(bad)
mov
loop
pop
inc
jbe
inc
shr
xchg
adc
pop
iret
dec
test
imul
mov
mov
jb
(bad)
aam
jo
in
into
xchg
dec
adc
aaa
pop
dec
xor
loopne
daa
sbb
sbb
adc
inc
mov
popf
das
(bad)
stc
cmovb
and
and
call
ror
sar
mov
jmp
adc
arpl
jbe
xchg
cmc
leave
lods
enter
retf
push
cmp
pop
int3
rcr
imul
pop
leavew
int
je
mov
fs
ins
or
push
mov
mov
sub
cmp
xchg
sar
push
xor
lahf
stos
mov
jns
xchg
sub
cmp
sub
pop
in
push
inc
pop
mov
push
test
jp
xor
or
push
push
jge
(bad)
add
add
call
out
cmp
cmp
movs
rol
dec
push
test
mov
push
out
or
sbb
push
lea
jl
pop
sar
inc
shl
adc
pop
aaa
xor
rcr
out
mov
lock
(bad)
jge
xchg
stos
out
xchg
lea
inc
xchg
or
xchg
or
and
push
test
stos
sahf
xor
shrd
push
sub
push
mov
xchg
rol
or
out
ss
jns
fist
ret
je
in
inc
movs
hlt
inc
adc
lahf
add
(bad)
cmps
mov
and
ins
push
dec
cmp
popa
sahf
mov
stc
popf
xchg
jp
inc
ds
aad
fistp
fcmovb
fdivp
cmps
jmp
inc
cmps
and
jno
mov
mov
mov
stos
inc
(bad)
cld
inc
push
cmc
adc
arpl
pop
call
js
sbb
addr16
adc
and
imul
popa
xor
dec
push
cld
test
ret
jecxz
outs
loop
mov
sti
pop
sbb
xchg
movs
and
lahf
xor
out
popf
cwde
movs
xchg
sub
dec
into
jmp
pop
xlat
jmp
mov
sbb
mov
addr16
pop
hlt
das
or
dec
xlat
inc
idiv
add
in
jb
call
int
test
and
mov
add
and
scas
loope
or
mov
jns
cmc
repnz
pop
stos
nop
fst
xor
sub
data16
(bad)
lock
inc
and
out
test
pop
or
sbb
fsincos
bound
inc
mov
(bad)
out
push
fcmovne
loopne
pusha
cmp
sbb
inc
jae
lock
mov
adc
jge
sbb
xor
inc
pop
jnp
adc
stc
lahf
fst
mov
sbb
dec
cmp
fxrstor
in
or
sti
jnp
xchg
repz
dec
jle
jnp
mov
js
not
iret
int3
popf
es
mov
add
xor
push
jbe
ja
push
push
and
bound
mov
mov
dec
jle
push
icebp
sub
cmp
lods
mov
rol
(bad)
mov
add
js
xor
sbb
ds
cmp
iret
inc
fmulp
call
js
fnsave
sub
mov
sub
push
mov
adc
jl
test
cmp
icebp
jno
gs
fwait
mov
xlat
pop
or
jge
adc
mov
add
mov
xor
aas
popa
cli
das
sub
pop
mov
mov
add
cwde
or
cmp
inc
push
pop
ins
mov
loope
enter
call
inc
add
test
cld
add
stos
push
je
jnp
sahf
into
(bad)
cmp
mov
inc
inc
(bad)
mov
xchg
push
fs
and
mov
sti
mov
lea
dec
(bad)
stos
pop
adc
in
sbb
xor
mov
cli
out
add
not
frstor
inc
aaa
imul
or
pop
and
pusha
inc
pop
adc
ror
or
mov
xor
in
test
adc
xchg
aad
js
lock
fst
dec
mov
pop
ret
adc
adc
inc
pop
and
cdq
mov
mov
je
div
mov
imul
in
xchg
cmc
dec
inc
cwde
ficomp
loop
xchg
neg
(bad)
cmp
call
push
pop
pop
mov
hlt
or
lods
xchg
cmps
or
fbld
mov
or
mov
(bad)
call
mov
pop
stc
je
loope
mov
sub
hlt
cs
ins
(bad)
movs
push
icebp
sub
dec
imul
mov
dec
in
std
rcr
adc
and
inc
push
in
push
ins
mov
mov
stos
dec
push
sbb
ss
fsub
pop
lock
dec
out
inc
xchg
imul
push
fwait
in
movs
sub
sub
(bad)
iret
repnz
cs
ins
xchg
arpl
es
loop
retf
call
ret
fcomp
mov
sub
cmp
out
cmp
lods
test
adc
les
xchg
and
(bad)
cmc
loopne
arpl
outs
dec
rcl
or
and
dec
sub
jo
push
das
cmp
out
push
sbb
int
cmp
mov
mov
aad
cs
adc
int3
mov
out
jp
and
fdiv
sbb
xchg
fs
sbb
pusha
xchg
nop
adc
or
sub
xchg
xchg
push
es
loopne
mov
or
mov
mov
ret
sub
out
inc
cwde
movs
addr16
(bad)
mov
pop
sbb
xor
adc
adc
mov
hlt
xchg
jae
arpl
push
stos
retf
xchg
push
push
add
js
stc
mov
test
mov
fwait
sub
shl
push
retf
push
add
test
stos
cmp
out
mov
(bad)
sub
cmp
xlat
pop
fsubp
mov
out
pop
push
sbb
pop
jnp
push
xchg
adc
mov
sbb
in
(bad)
adc
push
jbe
push
push
loop
pop
pop
ret
xchg
movs
adc
xor
adc
fcomp
push
sub
sub
jo
retf
push
in
push
xchg
sub
cmp
(bad)
mov
outs
repz
outs
jne
xor
pop
inc
inc
pop
inc
push
leave
in
xor
push
inc
mov
pop
or
sahf
fnstcw
movs
inc
cmp
popw
inc
rol
inc
push
gs
add
pop
and
dec
mov
stos
and
test
cwde
test
dec
sti
or
loopne
jnp
les
repnz
jg
push
sbb
mov
je
inc
outs
add
xor
outs
cmp
xor
aas
sub
inc
lahf
shl
adc
jl
mov
sbb
jns
pop
or
jle
or
sbb
movs
div
dec
sti
lods
imul
pop
ret
xchg
out
movs
mov
ror
stos
sar
aad
ss
(bad)
jp
push
pop
out
mov
xchg
mov
mov
jge
jecxz
mov
comiss
mov
scas
dec
xor
pusha
xor
or
stos
ror
sub
inc
pop
pushf
mov
or
mov
lods
cmps
pop
fisub
movs
shl
jmp
cdq
inc
push
in
inc
repz
or
inc
arpl
repnz
aam
cwde
test
ins
fcmovnb
fwait
lds
dec
push
adc
pop
outs
sub
xor
imul
out
xor
test
cmp
cmp
pop
mov
ins
cmps
inc
push
addr16
gs
adc
outs
in
in
aad
and
fsub
je
jmp
(bad)
mov
call
mov
xchg
fist
mov
inc
xchg
jns
and
push
imul
bound
dec
scas
stos
sbb
and
shl
pop
mov
push
jg
and
out
mov
aas
fstp
push
ret
in
in
imul
pop
cdq
xor
push
sbb
adc
aaa
dec
jg
(bad)
sbb
pop
cmp
and
out
push
inc
aas
jo
jne
outs
inc
mov
bound
loop
pop
xor
jmp
dec
mov
call
or
add
mov
pop
call
mov
lea
clc
(bad)
repz
sub
xchg
ins
and
test
call
fs
xor
mov
ds
outs
stos
arpl
int
icebp
mov
icebp
jno
leave
add
call
or
stc
lods
inc
push
mov
stos
pop
stos
jge
(bad)
or
ret
fnstsw
mov
aas
lods
mov
push
dec
pop
rcr
jmp
je
and
dec
icebp
cwde
in
sub
sahf
icebp
icebp
jo
in
test
mov
jno
inc
and
sub
mov
(bad)
adc
call
sub
and
stos
mul
sub
or
cdq
adc
(bad)
sbb
inc
(bad)
or
mov
in
lds
inc
or
mov
shr
lods
xlat
cmps
ret
ja
and
rcl
mov
mov
xchg
mov
jmp
test
fcom
gs
sbb
adc
outs
(bad)
cmp
xchg
pusha
fisttp
test
sub
mov
sub
cmp
aam
ja
cmp
and
lahf
mov
addr16
in
jo
jmp
div
gs
jle
call
dec
and
add
and
aaa
adc
out
or
shr
jl
add
jp
inc
test
pop
add
jmp
adc
clc
mov
pmulhuw
add
cmp
and
lods
jo
adc
mov
scas
xchg
dec
fs
and
or
and
add
mov
mov
stos
push
int3
push
test
lods
leave
xchg
maxps
js
lock
aaa
sub
add
jae
mov
imul
cdq
loopne
test
mov
sub
add
xchg
mov
pop
add
mov
jge
mov
push
add
sbb
(bad)
stc
lahf
mov
and
ret
in
and
jecxz
mov
into
mov
cli
mov
xor
loopne
sbb
jmp
outs
and
iret
pop
inc
sti
mov
ss
xchg
test
jo
sub
jno
jne
sar
daa
shr
ins
inc
mov
neg
(bad)
in
(bad)
call
fisub
add
out
jae
pop
les
push
sbb
dec
pop
es
inc
ret
retf
add
xchg
and
xor
jbe
aas
in
push
cmp
sbb
stos
sbb
(bad)
mov
mov
mov
cmp
repz
pop
pop
adc
outs
cmp
and
bound
cmp
xor
hlt
sbb
sbb
hlt
popf
pop
mov
adc
push
std
stc
into
or
call
sbb
mov
add
inc
out
adc
mov
ins
mov
mov
mov
xor
sti
arpl
dec
pop
push
icebp
sub
fwait
(bad)
mov
dec
xchg
cmps
(bad)
mov
cmp
dec
or
stos
ss
lods
test
xchg
scas
dec
xor
aad
idiv
(bad)
ror
sahf
cmps
cmp
dec
cmp
jns
aas
fwait
inc
in
je
dec
ins
addr16
jno
adc
movs
movs
ins
dec
clc
sub
jmp
test
xchg
pop
dec
dec
or
xchg
cmp
adc
dec
lea
shl
loop
pushf
mov
bound
cwde
xchg
xchg
dec
and
movs
scas
dec
outs
jnp
cwde
shl
mov
fbld
ficomp
add
stc
aad
fcmovbe
mov
adc
rol
jnp
and
out
mov
fistp
add
push
mov
repz
(bad)
test
nop
mov
xor
push
movs
xor
pop
cmc
jle
mul
cmp
push
stos
fistp
and
stos
xchg
(bad)
jp
inc
xor
sar
sar
cmp
daa
(bad)
dec
nop
push
lock
push
scas
mov
sti
push
xchg
bound
mov
pop
push
and
push
loop
sub
inc
and
dec
in
pop
cs
outs
pop
inc
or
sub
in
xor
jle
add
stc
sahf
loop
inc
fadd
xchg
or
inc
pop
dec
lock
jmp
outs
mov
jnp
rcr
es
mov
mov
jbe
push
xchg
jbe
pop
mov
inc
imul
xchg
mov
xchg
sub
hlt
in
shl
into
xchg
aas
daa
cmp
pop
inc
add
iret
gs
ss
(bad)
(bad)
pop
ds
mov
mov
call
repz
repz
jle
fstp
das
stos
mov
dec
ins
inc
std
fst
inc
and
imul
lea
mov
daa
cmp
mov
out
adc
jnp
xor
retf
xchg
js
movs
lahf
xchg
clc
mov
clc
ins
adc
arpl
adc
jae
mov
in
scas
pop
sub
mov
jae
pop
inc
fst
pop
(bad)
cmp
sub
in
adc
mov
sar
xchg
mov
pop
push
push
jg
data16
cmp
data16
lea
sahf
adc
test
push
xor
ret
push
or
push
pop
inc
test
into
inc
gs
sahf
and
pop
ins
inc
icebp
je
xor
inc
jl
gs
fs
inc
inc
push
retf
aam
mov
xchg
and
mov
sbb
fistp
sbb
xchg
adc
sub
stc
enter
mov
pop
call
mov
mov
cmp
in
out
ja
cmp
loope
mov
xchg
lahf
jmp
mov
mov
repz
inc
xor
cld
lahf
out
mov
pop
pop
in
mov
mov
jo
mov
ins
dec
icebp
xchg
cld
add
lds
jge
out
cs
mov
or
add
xlat
and
repnz
leave
repnz
push
popa
push
fidivr
mov
jmp
idiv
lahf
test
or
ins
std
mov
dec
cmp
repz
sub
dec
cld
inc
jg
ds
sbb
shr
mov
fld
xchg
imul
mov
mov
add
jmp
cld
lahf
cmps
cmp
pcmpgtd
inc
adc
jmp
mov
xchg
cmps
(bad)
sbb
ret
dec
push
push
inc
inc
inc
pop
fadd
xor
add
and
push
xchg
jne
jge
xchg
or
dec
add
add
push
ins
outs
in
fild
shr
(bad)
lods
stos
sub
jmp
fdivr
and
ret
pop
cmps
jmp
out
xchg
mov
xor
mov
pop
inc
(bad)
jp
sub
adc
push
and
ret
jb
(bad)
(bad)
push
pop
cmp
xor
pop
xchg
arpl
and
int
mov
push
shl
push
and
xlat
push
dec
ins
test
bound
mov
mov
push
push
out
mov
mov
dec
adc
lea
movs
inc
pop
int
or
inc
retf
jbe
jge
sti
adc
movs
sbb
and
movs
xor
pop
xor
in
adc
test
and
loope
in
sbb
mov
mov
aaa
mov
in
mov
pusha
and
rcr
sbb
cmps
push
dec
in
mov
dec
(bad)
lock
sbb
enter
and
test
xor
or
fidivr
jmp
mov
jmp
sahf
lods
jbe
cmps
into
pop
add
xchg
pusha
adc
mov
add
or
mov
cmp
adc
or
in
cmp
les
mov
push
shl
(bad)
sti
test
or
push
cli
cmp
mov
inc
sub
xlat
mov
add
fidiv
mov
arpl
arpl
or
mov
movs
mov
scas
test
jns
lahf
add
add
outs
mov
push
movs
jns
in
pop
les
inc
pop
ret
jnp
sbb
inc
jmp
(bad)
mov
inc
sahf
and
dec
push
push
dec
test
mov
(bad)
add
and
fs
daa
ja
cld
or
push
mov
neg
jg
xchg
jle
mov
push
jb
inc
push
leave
hlt
mov
push
mov
mov
mov
xchg
add
fwait
ja
jns
mov
and
inc
inc
mov
test
loop
add
not
fs
movs
imul
push
xchg
dec
hlt
jnp
test
cmp
test
out
hlt
mov
or
xor
addr16
xchg
add
add
stos
pop
add
out
pop
push
inc
(bad)
jb
lea
mov
sbb
mov
xor
xor
mov
jecxz
mov
test
sbb
lds
stos
pop
shl
mov
ins
fimul
xchg
pop
jge
nop
jae
aam
mov
push
leave
cld
(bad)
rcr
inc
fs
jnp
out
call
adc
leave
movs
ins
and
leave
(bad)
jae
mov
in
cmp
dec
aam
ds
(bad)
push
lahf
xor
push
cmps
fadd
push
cmp
retf
rol
cmc
in
push
aad
call
data16
jg
and
add
push
push
sar
ret
mov
nop
mov
mov
adc
sub
push
gs
mov
scas
pop
(bad)
retf
pop
in
mov
adc
ret
ror
out
add
shr
push
mov
cmps
mov
ds
imul
fwait
pop
add
inc
fld
adc
imul
rol
fst
div
cmps
popa
es
and
or
xor
and
dec
push
fisub
adc
int
ret
push
jo
idiv
mov
leave
test
inc
xchg
ins
(bad)
shl
xchg
aas
loope
and
jge
sub
icebp
ret
shl
add
inc
xchg
push
call
add
pop
aaa
scas
inc
dec
xchg
add
in
xchg
clc
pusha
sbb
sbb
out
cmova
push
mov
adc
fisub
push
in
or
pop
ja
out
pop
enter
ret
add
es
sbb
xor
int
std
add
sbb
mov
inc
jb
jmp
loopne
add
push
adc
imul
rol
adc
repnz
(bad)
(bad)
mov
ins
aas
sub
jb
(bad)
ret
das
add
loop
inc
clc
dec
push
adc
mov
or
mov
test
and
iret
jno
xor
or
or
fwait
pop
fbld
movs
xchg
rol
std
or
ret
movs
xchg
dec
sbb
push
out
adc
and
mov
and
push
jmp
in
loopne
sbb
xchg
arpl
lahf
je
xchg
out
(bad)
jmp
das
mov
push
sbb
pop
inc
cld
fst
clc
cmp
fnstcw
jne
mov
add
mov
dec
inc
cdq
inc
stos
push
mov
push
jl
and
cmp
ret
xor
mov
shl
cli
les
xchg
cdq
imul
out
mov
jbe
nop
aam
push
and
outs
mov
mov
mov
inc
aam
sar
pop
addr16
test
test
fimul
add
clc
fstp
movs
sub
pushf
mov
cmp
mov
jge
in
xchg
push
mov
dec
ret
mov
fsubr
ins
nop
xchg
shr
fiadd
call
mov
ss
sbb
jp
sub
sahf
and
mov
xor
inc
scas
push
add
arpl
cmp
mov
mov
mov
adc
nop
adc
mov
loopne
sbb
je
fld
pop
xchg
ja
test
jl
out
cmc
mov
cmc
inc
jns
ds
loop
scas
ins
sar
mov
sub
in
jp
mov
inc
clc
cmps
xchg
xchg
mov
inc
xchg
shl
mov
cdq
mov
sbb
fisub
jl
inc
pop
fdiv
popa
jle
pop
shl
or
push
xor
jnp
icebp
mov
dec
inc
dec
push
jecxz
dec
xchg
lods
jl
jmp
stos
rcr
mov
in
cmp
(bad)
sti
pop
push
sahf
xor
mov
rol
pushf
xor
mov
xor
je
pop
inc
dec
fwait
xchg
inc
bound
loop
xlat
mov
push
jg
cdq
mov
mov
add
in
xlat
or
cmp
inc
adc
cmp
mov
mov
bound
sub
outs
inc
jb
and
xchg
and
sub
pop
adc
cmp
test
lahf
jns
jno
push
inc
loope
push
stc
jp
es
clc
clc
mov
jo
pushf
sbb
iret
push
cwde
fild
or
in
pusha
push
jne
adc
fcom
loope
lods
sub
scas
cmp
lahf
sar
push
and
loopne
push
ds
popf
(bad)
retf
jb
jg
mov
outs
add
pop
into
outs
and
mov
gs
or
out
mov
and
imul
jns
xchg
loopne
jne
jg
js
xchg
push
pop
pop
mov
cmps
repz
es
push
and
lods
jo
jb
jne
loop
push
fsqrt
cmp
scas
lock
cmp
jnp
shl
push
ins
pop
pop
mov
or
push
hlt
std
jle
iret
push
bound
jno
mov
rcl
xchg
jnp
in
xor
xchg
mov
push
jmp
xor
es
mov
cmp
int3
retf
ds
out
in
loop
stos
or
out
xchg
aam
(bad)
push
icebp
jmp
cmp
jb
(bad)
fimul
push
mov
mov
push
fidiv
out
mov
push
push
pushf
sbb
js
retf
ja
cmps
aam
imul
xchg
pop
test
mov
fcomp
aam
adc
jecxz
js
cmp
test
adc
test
stos
pop
push
xor
mov
jbe
fstp
sub
dec
rcr
std
stos
shl
ret
and
in
addr16
adc
in
dec
sub
add
lods
mov
cmp
js
outs
les
or
push
test
lds
in
pop
inc
mov
je
pop
and
test
add
iret
lahf
cmp
pushf
xchg
int3
loop
int
adc
rcr
cs
xor
pushf
jns
sbb
pusha
sbb
mov
inc
ret
outs
icebp
pop
dec
sbb
in
in
sbb
cmp
dec
xor
sbb
pop
jbe
icebp
pop
leave
lea
arpl
ss
sbb
iret
or
pushf
sar
inc
scas
das
cmp
pop
leave
cmp
ins
mov
adc
or
cmps
cmp
ret
xchg
dec
les
js
rol
or
dec
sbb
jbe
mov
imul
pop
and
inc
inc
sbb
mov
imul
retf
inc
cdq
enter
jg
ficom
lods
mov
cwde
mov
inc
pop
pop
mov
data16
mov
pop
mov
mov
dec
mov
inc
out
inc
pop
mov
dec
out
cmp
lahf
dec
mov
mov
mov
cmps
mov
inc
sub
cli
lock
scas
shl
inc
(bad)
in
rol
pop
dec
ins
cmc
fisttp
in
aam
push
loope
jns
(bad)
pop
lods
pop
pop
fiadd
xor
out
jb
adc
int3
and
not
test
shl
or
in
fisubr
mov
jle
push
jg
ins
xchg
xchg
push
in
loope
push
xchg
das
out
xchg
cli
sub
dec
mov
cmp
push
aam
cmp
push
cmps
mov
or
push
xchg
mov
addr16
mov
rcr
outs
adc
push
mov
out
pop
push
ds
pop
jae
dec
jmp
pop
xchg
or
xchg
jae
call
int
bound
sti
daa
test
dec
jmp
jno
xchg
inc
or
mov
test
cmp
js
push
loopne
xor
and
and
xor
shr
popf
mov
adc
push
test
sbb
push
mov
fsubr
popf
xor
lods
adc
mov
aas
mov
mov
movs
jne
outs
xor
das
std
in
add
xchg
push
xor
mov
retf
cmp
pop
jb
mov
or
into
adc
das
scas
inc
imul
and
ret
popf
push
mov
mov
stos
clc
mov
(bad)
mov
imul
push
pop
stos
pop
mov
dec
xor
cmp
test
sub
pop
jge
jne
sbb
inc
nop
jl
dec
imul
in
sbb
push
in
adc
dec
aas
frstor
out
inc
nop
dec
sbb
scas
xor
shld
inc
or
outs
dec
dec
pop
setb
add
sbb
shr
adc
and
jg
std
test
int3
mov
dec
loop
mov
cmp
fcmovnb
loopne
add
and
mov
cmp
mov
jp
jl
sbb
xor
clc
dec
jo
sub
pop
mov
mov
pop
repnz
lahf
div
js
pop
rcl
sbb
cmc
mov
xor
in
clc
cwde
and
cmp
clc
xchg
mov
fwait
mov
jg
fbld
pusha
jle
test
ret
cld
leave
int3
inc
scas
fucomp
dec
sub
sub
xchg
jbe
mov
sahf
pop
pusha
push
bswap
xor
jbe
icebp
adc
ja
add
mov
mov
add
dec
sbb
popa
and
xchg
hlt
jnp
jge
mov
enter
pop
loope
xchg
pop
sbb
div
add
jle
push
xchg
push
jg
xchg
inc
jb
push
cmp
jp
dec
inc
xchg
or
sbb
nop
test
test
(bad)
jmp
mov
aaa
add
adc
mov
xchg
push
sar
cli
repnz
in
cmp
cmp
xchg
dec
arpl
lods
fbstp
stos
(bad)
jmp
jecxz
test
xor
push
push
xchg
icebp
pusha
std
cli
sub
adc
add
and
pop
and
lock
lods
(bad)
call
cmp
or
es
imul
aas
aas
ins
pop
sbb
aam
mov
in
sti
dec
or
in
mov
iret
mov
mov
mov
stc
jle
pop
js
sar
mov
or
mov
out
lods
into
shl
dec
dec
aam
ins
outs
xchg
xchg
retf
sbb
rol
psubd
leave
leave
jge
sbb
xor
out
fnstsw
push
lds
jns
lock
(bad)
repnz
adc
iret
push
mov
jmp
sahf
sub
fmul
lock
mov
mov
ror
cmp
pop
pop
jmp
jmp
jge
je
dec
loop
add
cmp
fnsave
jnp
jl
cmp
xchg
xor
mov
sub
pop
push
pop
sub
jecxz
mov
dec
add
es
adc
cs
aam
xor
movs
icebp
lods
add
loop
sar
in
xchg
cmp
and
pop
test
stos
mov
mov
shl
push
cmp
out
imul
mov
mov
ss
push
pusha
inc
push
jbe
mov
ret
pop
cmp
hlt
push
sub
imul
xor
cmp
xlat
int3
or
imul
fisubr
imul
(bad)
mov
(bad)
xor
mov
repnz
xchg
popa
sub
aad
mov
cdq
sub
xlat
pushf
scas
cmps
es
jb
sbb
sub
cmp
mov
aas
jae
ins
mov
inc
pop
inc
(bad)
mov
ja
call
or
mov
(bad)
test
pop
sub
inc
fimul
add
push
xchg
or
stos
sbb
enter
sub
sub
scas
loop
inc
sub
repz
stc
lea
adc
aad
adc
pusha
pop
data16
mov
sti
xor
leave
call
ja
or
outs
xchg
jl
addr16
pop
cmp
and
jmp
push
xor
data16
xchg
mov
lahf
(bad)
sbb
ds
sbb
or
aaa
inc
movs
sbb
imul
add
ss
mov
or
add
js
jo
inc
aas
push
xchg
jle
mul
repz
in
jns
sbb
std
xchg
push
pushf
movs
sub
jb
sbb
or
repnz
fsubr
jne
retf
sub
ins
mov
lods
inc
mov
jmp
adc
daa
loopne
mov
aas
jnp
sbb
fisub
daa
adc
mov
mov
repz
add
cmp
cmp
jne
jp
mov
lock
(bad)
aas
mov
ss
and
ret
movs
adc
jne
lock
iret
mov
xor
adc
sbb
stos
pop
or
(bad)
mov
inc
ins
rcr
sbb
dec
or
mov
mov
scas
xor
and
stos
mov
jne
dec
pop
mov
cmp
mov
dec
and
jge
jle
aad
fs
int
clc
xchg
leave
pop
dec
nop
mov
cmc
ret
(bad)
pushf
je
cld
cld
mov
mov
mov
mov
not
jne
out
imul
inc
mov
mov
mov
xchg
(bad)
pushf
and
xchg
jmp
sbb
push
or
cli
or
loopne
xor
cmp
inc
sbb
sub
pop
loope
and
pop
cmps
mov
aam
fild
sub
lahf
aas
das
shr
pop
or
jecxz
enter
jp
inc
mov
mov
mov
push
in
clc
sub
out
xchg
xchg
adc
stc
jl
sbb
xlat
data16
repnz
scas
lods
ficomp
cmps
pop
xchg
(bad)
jmp
movs
xor
push
inc
sbb
test
inc
in
mov
in
sbb
adc
sbb
jl
cmp
dec
(bad)
mov
retf
ins
cdq
aas
push
cwde
ins
repz
mov
jecxz
jecxz
mov
es
not
jbe
addr16
scas
ror
sub
xchg
int
xor
hlt
fldcw
adc
das
pop
or
not
daa
jecxz
pushf
jb
sbb
fldl2t
daa
pop
clc
(bad)
lahf
lods
ret
push
cmp
jp
xchg
mov
and
sub
sub
lods
adc
mov
movs
test
into
aad
test
adc
push
(bad)
lea
add
sub
(bad)
fdivr
in
inc
(bad)
jmp
clc
ret
inc
out
xlat
(bad)
std
dec
cdq
int3
push
mov
test
out
fadd
inc
lea
add
test
test
xchg
mov
mov
call
push
dec
xor
sbb
pop
jmp
(bad)
stos
push
or
loope
aam
fs
or
mov
fisttp
mov
mov
cmps
sbb
shl
gs
fld
and
push
test
jg
adc
mov
inc
shl
cmp
aam
je
fistp
mov
ret
in
ds
fidivr
mul
scas
jg
xchg
sbb
push
jns
hlt
xchg
clc
fistp
pop
dec
or
sub
out
pop
movs
mov
loope
push
dec
pop
sbb
and
xor
(bad)
in
jmp
(bad)
ficomp
jne
add
xchg
push
sub
ins
or
mov
sub
mov
push
pop
ror
pop
(bad)
xchg
cmp
xlat
aam
dec
sbb
cli
stos
pop
cli
push
mov
and
loopne
js
jno
xor
sub
mov
xor
imul
jno
mov
es
or
stos
and
adc
and
cmc
jne
or
dec
xchg
xchg
dec
test
in
daa
mov
hlt
inc
ins
xor
in
mov
cmp
cmps
cld
fs
mov
adc
mov
in
dec
shl
test
addr16
sub
aad
cmps
pop
aad
xchg
xchg
int3
outs
fnstsw
push
lea
adc
mov
sahf
imul
pop
mov
cmp
psubb
loopne
pop
add
fstp
repnz
rol
fwait
rcr
or
rcl
pop
mov
push
clc
shr
test
iret
dec
outs
mov
sub
pop
ins
add
out
dec
arpl
pop
int
les
sbb
cmps
(bad)
cmp
fiadd
jl
rcr
loope
outs
call
retf
(bad)
jl
scas
out
mov
test
test
jno
pusha
add
js
adc
mov
and
sti
inc
xor
sbb
or
jae
jmp
jne
icebp
and
pushf
jmp
clc
lods
fcmove
je
gs
test
sub
push
cld
jp
retf
daa
iret
jmp
leave
ret
push
loope
hlt
cdq
and
mov
push
stc
arpl
pop
repz
add
loopne
lods
mov
push
sbb
and
sub
mov
in
xchg
mov
arpl
add
xchg
cmp
aas
cs
fisubr
pop
mov
(bad)
push
hlt
xor
out
arpl
int
jno
cmp
xor
xchg
repz
or
test
inc
loope
adc
push
add
scas
mov
test
xor
sbb
or
js
mov
jge
jmp
push
cmp
std
fstp
(bad)
enter
fucomp
rcl
add
shl
arpl
jmp
jne
mov
sub
stc
cdq
xor
mov
or
pop
inc
mov
sub
pop
push
outs
scas
inc
adc
in
push
jge
jl
mov
mov
adc
push
sti
jge
cmp
lods
iret
fidivr
pop
and
(bad)
in
data16
scas
jmp
push
sbb
pop
mov
add
rcr
repz
or
in
inc
add
push
pop
and
pop
sbb
add
push
cmps
rep
clc
jle
cmp
pop
out
mov
clc
jnp
or
jb
mov
in
cli
(bad)
imul
add
mov
int
loop
in
shl
mov
clc
dec
scas
push
daa
jo
mov
add
pop
sub
or
shr
adc
pop
dec
into
and
cmp
imul
inc
mov
ss
pop
mov
xchg
jno
inc
mov
and
lds
mul
cmp
push
enter
mov
cs
fcom
cmp
rol
aam
fcmovbe
mov
push
mov
add
test
inc
push
(bad)
xor
ds
mov
ss
aam
addr16
sbb
cld
xchg
pop
xchg
arpl
inc
cmc
sbb
mov
call
push
inc
cld
(bad)
outs
cmp
add
adc
push
pop
jno
mov
lods
xchg
push
mov
xor
pop
xor
xlat
popa
mov
jle
in
cdq
lock
mov
fucomip
xor
and
lahf
xor
outs
dec
pop
cld
xor
pusha
rcr
jno
pop
fnstsw
sbb
lock
dec
int
icebp
xchg
adc
adc
cmp
add
int3
xchg
fs
jns
into
or
xor
adc
(bad)
sbb
adc
mov
outs
push
xlat
xor
(bad)
shr
cmp
mov
push
popf
or
bnd
jle
fisub
and
enter
or
dec
sbb
(bad)
adc
add
xchg
or
jge
lahf
inc
lds
test
lea
add
mov
cmc
inc
ins
mov
test
jmp
pop
sub
retf
sub
imul
inc
arpl
movs
add
fs
scas
xchg
inc
sub
cmp
je
xchg
xchg
aas
mov
xor
(bad)
das
jns
inc
cld
push
cmp
in
dec
mov
add
outs
jo
dec
mov
dec
fwait
lds
in
loop
dec
cld
icebp
sub
lds
mov
int
adc
rcr
pop
scas
into
fisttp
out
and
add
push
push
in
stos
dec
cmc
dec
xor
nop
enter
aas
out
lea
xor
xchg
mov
xchg
fs
adc
test
jbe
inc
cmp
retf
xchg
mul
dec
xchg
cmp
dec
icebp
mov
stos
dec
push
sub
or
(bad)
jb
mov
pop
push
mov
cli
mov
xor
and
xor
mov
add
scas
push
cmp
ins
repz
enter
add
lods
and
jno
xchg
add
or
sub
add
outs
mov
adc
ret
test
and
jge
jb
hlt
jge
push
push
push
xor
cmp
repnz
cmp
movs
daa
push
add
adc
cmc
jb
int3
bound
adc
shl
mov
and
cmp
dec
mov
jo
or
mov
inc
pusha
fisttp
xchg
push
sahf
retf
in
adc
(bad)
aad
sti
xchg
adc
or
add
push
jp
loope
cmp
and
mov
dec
inc
out
cdq
cli
jecxz
out
cmp
inc
and
jle
inc
xchg
adc
and
mov
xor
movs
pop
jno
dec
scas
and
(bad)
cmp
punpcklbw
mov
fadd
(bad)
sbb
pushf
les
fmul
mov
sar
movs
adc
lods
test
fwait
and
into
xchg
push
mov
pop
into
retf
loope
ror
inc
xchg
(bad)
call
fidivr
pop
movs
out
retf
pusha
dec
xchg
inc
dec
sub
in
push
xchg
xchg
out
jmp
xchg
fld
call
test
retf
out
clc
add
sbb
fldcw
fdivrp
sbb
aam
popf
lock
or
vpcmpeqw
imul
bound
fdivr
jl
pop
std
in
or
cmp
mov
lds
addr16
jmp
enter
mov
jae
cmp
arpl
leave
xchg
rcl
or
out
(bad)
mov
in
pop
cli
(bad)
fnsave
dec
pop
in
pop
sub
leave
xlat
popa
fcomp
pop
xchg
lea
iret
sub
daa
sub
xchg
movs
icebp
add
das
loope
lock
(bad)
out
repz
sub
test
lds
push
adc
mov
adc
mov
daa
jge
(bad)
fcmovbe
pop
xor
je
mov
icebp
cmp
dec
(bad)
jecxz
out
popf
sbb
cdq
pop
mov
pop
in
test
pop
mov
push
clc
xchg
sub
push
jmp
gs
xchg
(bad)
xlat
sbb
xchg
dec
push
cmps
fadd
pop
aam
pop
xchg
popa
pop
dec
out
addr16
clc
mov
(bad)
mov
out
std
mov
fucomi
adc
jno
hlt
mov
jo
jg
scas
pop
data16
mov
(bad)
adc
(bad)
mov
addr16
or
sar
fcom
fistp
mov
enter
jge
inc
ret
mov
dec
mov
ss
lds
and
aas
adc
mov
std
not
in
mov
lods
and
outs
jmp
xchg
fdiv
pop
xor
std
pop
pop
test
inc
popa
std
loopne
fs
mov
popa
sahf
(bad)
enter
xchg
jecxz
dec
sbb
pop
in
or
into
ds
sar
cmp
cmps
pusha
aas
movs
sub
and
fistp
push
loop
popf
xchg
xchg
lods
int3
and
xchg
mov
repz
fpatan
std
sahf
rcl
scas
(bad)
(bad)
jbe
sahf
shl
cmp
stos
xchg
adc
jae
pop
jg
int
movs
and
or
and
retf
into
popa
in
test
and
mov
pop
out
imul
adc
outs
jg
(bad)
leave
out
ins
test
outs
xlat
shl
adc
jo
jle
fdiv
sub
cli
mov
inc
cmp
mov
sti
outs
fs
mov
rcr
imul
in
dec
dec
shl
ja
xchg
int
and
push
or
popw
pop
fadd
sbb
and
movs
arpl
mov
shl
cmc
or
push
out
into
clc
adc
pop
es
bnd
mov
xchg
lahf
sub
or
adc
inc
cmps
push
retf
inc
in
dec
and
pop
sbb
xchg
mov
mov
shr
ss
mov
arpl
inc
xchg
mov
cli
stos
(bad)
lods
and
js
or
(bad)
sbb
jb
add
cli
cmp
sbb
xor
lahf
pop
js
in
jmp
stos
pop
mov
fst
sub
mov
jno
push
push
shl
xor
or
daa
int3
repz
and
mov
dec
cdq
loopne
adc
xor
sub
push
fldenv
dec
push
pop
xchg
shl
in
mov
stos
lahf
xchg
cwde
lods
or
mov
xlat
xchg
repnz
test
dec
addr16
repz
adc
xchg
xlat
jnp
neg
dec
adc
arpl
nop
jno
mov
jge
(bad)
imul
or
xchg
dec
(bad)
xlat
add
jge
or
mov
iret
push
or
sbb
pop
les
into
and
int3
in
jb
(bad)
dec
ins
and
test
mov
mov
mov
inc
push
cli
sub
xchg
xor
aad
add
test
outs
xor
or
rcr
(bad)
push
jmp
mov
fiadd
retf
loop
lods
inc
aaa
fwait
cmps
mov
xchg
enter
ret
xor
idiv
mov
and
mov
pop
lock
xchg
lods
retf
retf
fld
test
popf
xchg
scas
sub
push
sbb
mov
xor
jo
push
fadd
in
bound
pop
sysenter
js
fdiv
sbb
push
mov
add
add
popf
aad
in
movs
xchg
test
ins
and
jo
sbb
mov
daa
stos
jnp
mov
mov
fisub
hlt
adc
enter
lds
arpl
adc
in
test
mov
mov
imul
sub
fsub
clc
xchg
(bad)
aad
ficomp
inc
pushf
aam
jmp
data16
mov
mov
mov
pop
shl
shl
cwde
dec
mov
or
mov
out
xchg
mov
outs
ins
icebp
xor
xchg
cwde
push
mov
sahf
xchg
cmp
cmps
jne
xchg
aaa
mov
(bad)
movs
cmp
adc
leave
cmp
xchg
dec
mov
in
mov
mov
mov
xor
sbb
xor
inc
sbb
out
mov
mov
inc
add
mov
jo
adc
rcr
pop
ins
mov
mov
pop
jmp
fistp
lods
pop
xchg
xlat
mov
fist
mov
(bad)
call
sbb
mov
lea
and
push
sbb
test
fild
add
lds
adc
jno
ficomp
sahf
jno
cmp
je
inc
jae
stos
popa
dec
xchg
sahf
push
mov
outs
add
stos
loope
pop
and
sbb
lods
fild
fsubr
shl
jge
sahf
pop
ins
sbb
mov
jmp
add
sub
mov
pop
(bad)
push
stos
push
mov
and
pop
ret
ret
or
ror
movs
ss
mov
and
stos
pop
mov
sub
addr16
test
clc
and
adc
and
xchg
jbe
mov
dec
mov
and
sub
in
inc
jns
jp
or
jae
pop
out
lods
inc
fst
and
xchg
inc
jmp
push
fimul
or
mov
sbb
sti
or
sbb
inc
jo
cdq
xchg
inc
das
or
std
out
xchg
test
or
test
xor
jb
mov
popa
cmovbe
dec
xchg
and
mov
inc
nop
nop
mov
retf
and
sbb
icebp
pushf
jp
enter
mov
in
mov
nop
mov
add
sbb
mov
js
aam
add
push
and
push
dec
mov
jle
(bad)
jge
ja
dec
repz
adc
xchg
sti
push
das
jmp
mov
outs
add
imul
jbe
scas
vmptrst
ret
rcl
rcl
sbb
test
fimul
imul
dec
scas
mov
lods
inc
call
adc
dec
sbb
or
jns
fimul
mov
xchg
mov
mov
push
aaa
xchg
cmp
mov
(bad)
jo
xchg
stos
push
movs
sbb
pop
stos
push
push
adc
mov
je
inc
cli
push
mov
xor
cdq
lock
or
int3
scas
jns
mov
mov
cmps
je
popf
je
popa
shr
cmps
and
cmp
sbb
ja
nop
xor
loopne
dec
add
rol
repz
and
mov
in
ret
mov
jp
sub
fst
shr
popa
mov
xchg
stos
xlat
stc
div
mov
data16
xchg
cmp
std
fnstcw
sub
test
jns
dec
(bad)
sbb
(bad)
call
cmp
lods
or
mov
imul
rol
ret
cmp
mov
fcmovnu
(bad)
mov
mov
lods
mov
inc
mov
cmp
jae
sahf
fnstsw
adc
sbb
add
into
cmp
mov
mov
mov
out
xor
int3
rcl
mov
jg
pop
test
sti
jg
sbb
inc
cmp
(bad)
adc
int3
push
adc
dec
shl
mov
iret
xchg
movs
adc
inc
jmp
mov
sub
shl
lds
or
cli
xchg
jle
test
cwde
call
xchg
imul
call
sub
push
test
lds
push
popf
mov
and
neg
jp
fst
add
in
inc
sti
fadd
mov
stos
test
sti
clc
rol
add
inc
sahf
cwde
or
jl
inc
arpl
and
(bad)
enter
dec
ja
sbb
and
jmp
out
fist
pop
xlat
cmp
sub
jb
jle
dec
mov
sbb
cmp
or
ret
daa
repz
fmul
jne
dec
adc
sub
stc
or
pop
pop
pop
lods
and
cli
iret
xchg
rcr
pop
fs
add
pop
or
inc
dec
dec
dec
loope
push
sbb
pop
arpl
mov
pop
mov
xchg
inc
imul
mov
fcom
js
std
mov
xchg
or
push
add
or
sbb
out
leave
in
mov
adc
jle
pop
push
scas
lock
mov
cwde
mov
inc
sub
dec
pop
ds
xlat
add
sub
dec
cmps
and
cmp
mov
and
push
lahf
imul
cmp
sbb
cmp
sub
cmc
mov
ss
pop
inc
movs
arpl
sbb
cmc
or
xchg
push
add
lds
cmp
repz
or
fisubr
enter
or
shl
sbb
xchg
mov
jg
in
inc
and
mov
pop
fmul
mov
push
mov
test
cmp
and
pop
mov
and
(bad)
sub
ins
hlt
cmps
cmp
sbb
shl
cwde
push
dec
in
inc
(bad)
neg
push
fcomi
ins
adc
fisttp
add
jl
adc
fs
adc
lahf
sbb
xor
scas
or
fdiv
mov
dec
inc
cmp
fld
push
xor
add
adc
(bad)
mov
iret
or
pop
addr16
xor
sub
pop
shl
icebp
retf
xor
inc
(bad)
popf
cwde
xor
jmp
sub
repz
cdq
js
les
gs
add
xchg
enter
mov
out
mov
imul
adc
(bad)
sub
push
push
and
lods
(bad)
pop
call
movs
and
aad
xchg
fstp
aas
mov
push
jmp
cld
xor
pop
sti
xor
lods
push
sub
jns
sbb
addr16
jge
enter
aam
push
ucomiss
xor
jnp
cmp
pop
shl
mov
cmp
test
fld
xchg
dec
add
call
popf
cmp
mov
daa
pusha
lods
jns
stc
jo
mov
mov
sar
lds
pop
ja
test
push
pop
inc
dec
adc
sub
and
daa
enter
dec
dec
jg
ja
leave
push
push
push
xor
in
retf
jbe
enter
pop
xchg
cld
mov
xor
sub
mov
imul
mov
cmp
and
inc
sbb
addr16
scas
std
test
out
loope
test
jne
adc
mov
(bad)
outs
std
mov
ror
xor
outs
call
enter
(bad)
scas
scas
stc
retf
pop
ins
sub
in
mov
aas
call
ss
shl
les
jmp
fild
icebp
test
sub
xor
mov
movs
sub
in
jne
ficom
stos
mov
xchg
push
fs
inc
mov
xlat
jle
test
sbb
es
jecxz
sub
and
xchg
dec
mov
das
jo
cmp
xchg
pop
xchg
xor
ror
cld
jmp
or
xchg
in
push
int3
push
inc
out
mov
mov
xchg
pop
shl
dec
sbb
aaa
retf
inc
cwde
mov
cdq
push
in
or
mul
out
push
sti
in
jmp
lahf
scas
jno
clc
cwde
or
mov
mov
push
aad
fldenv
jmp
xchg
(bad)
fsub
repnz
(bad)
ss
loope
clc
fsub
aam
shl
js
lds
sub
leave
cs
mov
dec
retf
or
repnz
fs
repz
fist
scas
sub
mov
mov
pusha
sub
xchg
sub
cmp
sub
cmp
scas
mov
ins
sub
or
inc
inc
rcl
test
mov
sbb
movs
push
mul
mov
cmps
stos
and
out
mov
jle
mov
sub
inc
sar
xlat
pop
mov
test
retf
sub
iret
cwde
clc
or
pop
pop
jmp
mov
in
sbb
fistp
push
test
imul
hlt
mov
or
inc
jbe
std
shr
xor
fninit
fidiv
rol
and
mov
jns
adc
nop
sbb
dec
scas
mov
fisttp
xchg
pop
das
jns
sar
mov
test
add
gs
push
adc
(bad)
int
pop
enter
test
ds
inc
add
push
pop
sub
xor
lea
mov
mov
(bad)
cmp
inc
popf
sar
mov
(bad)
jl
adc
pop
out
in
adc
sub
push
addr16
lods
dec
xor
push
je
add
(bad)
push
sub
jne
or
inc
sub
and
shl
retf
ficomp
sub
ds
leave
cmp
lahf
test
or
leave
xlat
mov
mov
iret
sub
or
stos
sti
mov
cmp
cmps
(bad)
mov
dec
inc
and
arpl
or
movs
jg
mul
push
mov
repnz
pop
out
out
dec
mov
popa
pop
movs
shr
inc
and
cmp
mov
mov
pop
cmp
es
in
and
retf
mov
js
shr
or
das
pop
sbb
nop
xor
outs
out
and
jno
inc
xchg
add
sbb
push
add
gs
inc
push
shl
xchg
jne
cdq
xrelease
pop
repz
cli
pop
sub
iret
inc
mul
mul
repnz
push
ficom
sti
mov
cmps
push
cmp
and
jae
ja
loopne
jmp
loop
clc
fstp
shl
outs
test
xchg
aam
fnstcw
pop
adc
ins
fbstp
mov
pop
shl
lods
ins
adc
mov
nop
jle
mov
sub
sbb
pop
sbb
adc
mov
pop
mov
call
dec
cmp
dec
sbb
les
cld
jl
fisub
call
cmp
jno
fwait
pop
aam
jmp
add
imul
repnz
lahf
add
cmp
rcl
inc
rcl
pop
pop
pop
and
fimul
inc
arpl
cmp
(bad)
push
cmp
mov
dec
cmps
mov
out
clc
retf
jne
popf
test
cmp
and
hlt
push
adc
inc
in
(bad)
pop
push
nop
push
std
push
mov
(bad)
mov
add
ror
out
add
dec
mov
cmps
mov
ja
and
or
xor
pop
xchg
jp
sub
gs
repnz
shl
adc
sbb
repz
xchg
pop
and
aaa
pop
adc
nop
pop
fiadd
and
pop
ds
push
push
pop
out
push
sbb
push
add
call
pop
add
mov
hlt
jge
test
xchg
cmp
and
pop
xor
xlat
adc
(bad)
xchg
adc
dec
rcr
nop
movs
and
jno
cli
(bad)
iret
pop
mov
cwde
scas
fucom
pop
scas
mov
stos
stc
and
mov
add
xchg
outs
sbb
mov
adc
psrad
rol
pop
imul
or
xchg
mov
mov
(bad)
enter
xor
pop
pop
mov
clc
add
sbb
mov
int
pop
rcr
pop
pop
mov
pop
sub
imul
jns
repnz
mov
pop
jle
daa
add
mov
clc
xor
jp
addr16
pusha
add
pusha
and
rcr
test
mov
or
test
dec
or
xor
out
lds
lock
(bad)
cmp
sahf
push
push
lods
pusha
je
sbb
sub
or
lods
loope
ins
arpl
fnsetpm(287
jnp
in
and
cmp
ss
pop
pop
sti
inc
mov
add
loop
icebp
ja
mov
shl
rcr
mov
and
(bad)
mov
dec
lock
jp
push
in
lods
mov
pop
loope
sbb
test
in
pop
(bad)
aas
rcl
inc
push
lods
imul
pop
ror
adc
int
shl
fnop
push
add
xor
cmp
or
pusha
retf
adc
lods
jl
mov
xor
pop
fisubr
sub
cmps
mov
push
dec
shr
je
push
jg
dec
adc
push
cmp
(bad)
lea
pop
outs
repnz
je
jle
adc
push
test
enter
push
lock
pop
ds
pop
jae
out
retf
xor
popa
push
into
jmp
movs
lahf
pop
xchg
int
and
inc
dec
fimul
js
dec
cmp
es
or
jg
repnz
mov
(bad)
int3
xchg
cmp
test
lods
cmps
dec
or
imul
retf
mov
or
mov
test
sub
dec
cmp
scas
sbb
inc
bound
mov
push
adc
cmp
iret
retf
sbb
mov
mov
mov
pop
sub
sbb
dec
xor
fsubr
out
or
and
xor
push
pop
loop
(bad)
mov
call
test
imul
pop
adc
push
sahf
cs
cli
fnstcw
xor
jle
rcl
push
call
xor
adc
fidivr
iret
enter
push
(bad)
push
push
in
pop
mov
leave
push
repnz
mov
pop
jno
mov
cwde
and
lods
fist
adc
xor
je
sahf
sti
pushf
mov
jg
mov
xor
sub
add
mov
adc
sahf
sub
and
rol
inc
pop
out
mov
icebp
jmp
xor
xlat
push
inc
xchg
scas
mov
cmp
dec
fwait
leave
or
mov
jo
js
adc
xor
xor
ffree
mov
movs
mov
mov
(bad)
jno
cmc
mov
std
imul
ret
jp
push
bound
sub
or
mov
push
or
adc
xchg
cmp
sub
cld
xor
stos
lods
dec
and
in
loop
jb
fbld
push
and
dec
or
jnp
inc
or
in
sub
(bad)
int
or
cmps
rcl
push
test
cld
stos
add
cmp
mov
sbb
ds
test
or
fisubr
(bad)
aas
mov
push
and
jb
movs
xor
hlt
xchg
mov
inc
inc
mov
icebp
pop
push
jmp
out
xor
aad
jmp
jl
shr
cld
push
jp
jl
jge
mov
bound
fmul
test
lods
xchg
cmp
sbb
adc
pop
fs
add
jae
dec
out
pusha
sti
cdq
imul
div
jp
enter
or
xor
push
jo
jnp
mov
inc
imul
sub
push
inc
(bad)
adc
and
mov
sub
dec
and
aad
cmp
stos
add
in
dec
mov
mov
in
lahf
cmp
nop
int
push
je
jne
hlt
cmp
add
pop
dec
add
enter
or
xchg
push
xchg
sub
mov
dec
mov
cmps
xchg
cwde
iret
loope
dec
pusha
adc
mov
mov
scas
repz
out
xchg
stos
in
iret
in
stos
or
sahf
jecxz
rcl
mov
addr16
rcr
mov
sahf
adc
jns
sub
or
pop
and
push
ficom
iret
mov
push
cdq
dec
and
imul
retf
mov
mov
fcom
sbb
hlt
add
xchg
ss
push
sbb
retf
inc
mov
sti
mov
jge
shl
xchg
pop
std
cmp
inc
xor
cmp
iret
pop
dec
fnsave
sbb
pop
xor
outs
loope
jl
jle
int
mov
test
sbb
fwait
movs
jbe
js
fcomip
dec
jnp
lods
sahf
or
retf
cmp
outs
mov
pop
add
mov
cmp
jns
and
(bad)
clc
dec
les
dec
sub
xchg
push
test
adc
mov
xchg
int3
inc
xchg
dec
or
jp
test
std
mov
pop
mov
push
dec
and
cmp
adc
mov
push
retf
les
push
ja
loop
fild
aad
mov
mov
lahf
mov
hlt
jp
adc
cmp
xor
jmp
ret
jmp
jg
mov
add
sub
inc
mov
or
das
retf
mov
mov
fstp
push
out
pop
lahf
pushf
test
and
jecxz
xchg
cmc
mov
loopne
xchg
nop
stos
inc
xor
and
dec
in
push
sbb
pop
mov
mov
sbb
pop
es
jmp
sbb
out
sar
lds
lahf
push
outs
jle
out
adc
or
xor
dec
sub
mov
push
add
stos
push
add
bound
adc
jns
cs
in
aad
scas
leave
shl
stc
xchg
dec
aaa
fistp
outs
into
(bad)
mov
push
sbb
lock
jmp
imul
lods
mov
pop
mov
or
mov
xchg
imul
aaa
xor
jne
or
mov
pusha
ja
jmp
mov
popf
mov
sbb
jbe
stc
xor
jecxz
mov
pop
jae
shl
mov
inc
dec
dec
cwde
sar
push
mov
out
mov
scas
leave
fstp
fdiv
jge
test
inc
mov
in
cmps
imul
stos
jge
test
std
or
push
sub
inc
sub
clc
ja
nop
or
add
push
fld
icebp
(bad)
sub
add
pop
jne
jae
add
pop
xchg
stos
and
adc
je
jmp
or
(bad)
not
call
shl
ins
pop
test
(bad)
int
and
inc
les
mov
xchg
or
cmc
leave
mov
cli
pop
data16
imul
sahf
dec
imul
test
mov
mov
cmp
aaa
stos
inc
and
xchg
sahf
icebp
adc
(bad)
sub
hlt
jnp
sub
pop
ffreep
bound
je
push
sub
pop
xor
(bad)
xchg
jmp
rcl
popa
in
test
pop
inc
faddp
or
adc
xchg
lock
enter
mov
fisubr
aam
xor
xlat
and
and
cdq
or
imul
push
iret
inc
into
fxch
mov
cmc
or
imul
xor
push
inc
xor
iret
mov
(bad)
call
outs
mov
ss
dec
sub
adc
dec
push
sbb
sahf
mov
dec
mul
add
icebp
ins
xchg
icebp
or
xchg
xchg
dec
daa
pop
dec
cld
sbb
cdq
les
call
inc
sbb
or
mov
jge
pop
jno
mov
mov
ret
pushf
arpl
pop
mov
lahf
push
xor
sbb
in
pushf
enter
pop
or
mov
xchg
pop
into
inc
pop
push
jg
mov
outs
or
sub
xchg
pop
stos
fadd
sbb
idiv
ins
cmps
out
loop
imul
mov
and
shl
aam
test
or
popf
add
xchg
ja
mov
enter
xor
or
cmps
stc
push
jb
ins
mov
add
aas
push
xor
jle
clc
jae
push
inc
cmps
push
inc
mov
in
jmp
ss
out
xchg
push
daa
pusha
xor
adc
into
stc
hlt
js
and
cdq
xor
jle
imul
je
leave
aam
fld
sbb
inc
ret
imul
stos
mov
pusha
xchg
iret
addr16
xchg
dec
xor
jnp
sbb
add
xchg
sub
add
fdivr
fmul
test
movs
add
xor
rcl
int3
sub
arpl
or
in
or
push
imul
add
outs
iret
xor
xchg
add
mov
inc
sub
adc
sbb
xor
pcmpeqd
lds
test
and
imul
and
inc
xchg
and
sub
inc
outs
xchg
imul
loopne
mov
jne
cmp
imul
cmp
pushf
cmp
and
jns
pop
bound
ret
out
(bad)
lds
dec
xchg
inc
aad
fcomip
icebp
xchg
sub
sahf
jl
add
loopne
out
pop
lock
stc
dec
adc
fldlg2
pop
push
add
les
mov
in
cmp
in
adc
lahf
fldenv
jno
cli
movs
scas
mov
outs
pop
repz
mov
fs
mov
out
jmp
call
hlt
mov
push
mov
jle
cmp
inc
adc
or
mov
(bad)
cmps
idiv
cmp
mov
stos
jmp
push
inc
movs
xchg
rcl
jp
add
int3
icebp
add
scas
adc
jmp
loop
and
shl
add
data16
cmp
jbe
add
movs
cmp
cmc
aam
mov
loopne
kandw
repnz
mov
pop
sbb
jnp
cs
(bad)
jmp
aas
pop
mov
add
adc
inc
addr16
mov
xchg
movs
div
xchg
xchg
sbb
in
mov
ja
cmp
(bad)
clc
mov
adc
cmp
(bad)
xor
cmp
and
mov
mov
push
fadd
es
jmp
in
test
ret
les
leave
jno
push
sub
sub
and
sbb
add
jno
mov
lods
inc
dec
sub
in
add
stos
cmp
retf
cmp
jns
or
out
cmp
icebp
pop
popa
je
aas
jns
sti
pop
rcl
shl
push
and
sbb
fmul
and
cld
cmp
push
inc
xor
and
lds
jp
mov
xor
ret
enter
icebp
xor
or
add
and
and
pusha
mov
dec
test
test
daa
fcomi
aam
push
jns
xor
mov
stos
pop
stos
scas
popf
(bad)
mov
add
xor
mov
push
jmp
fwait
jle
cs
mov
ss
cmp
cmp
mov
jp
movs
and
out
frstor
into
jge
push
pop
jne
sar
rcl
mov
jl
inc
aaa
pop
push
pusha
in
lods
aas
adc
out
mov
inc
dec
mov
jae
ss
xlat
xor
xor
dec
sub
mov
and
sub
push
aas
loop
dec
popf
or
rcl
int
or
in
das
mov
in
adc
dec
test
and
je
mov
and
ja
popa
ret
(bad)
jne
jmp
sbb
mov
mov
out
add
out
pop
nop
fcmove
add
out
mov
or
cwde
out
xchg
jmp
push
xlat
call
dec
mov
outs
jno
push
daa
outs
or
adc
xchg
push
mov
imul
dec
ss
mov
jecxz
in
mov
pop
pop
int
jb
fistp
out
dec
loop
jns
outs
mov
leave
cli
xor
jle
das
mov
xchg
jmp
scas
jnp
mov
push
xor
mov
cmps
fidivr
xchg
add
sbb
mov
js
js
adc
jnp
push
pop
(bad)
test
dec
and
and
stos
lds
add
mov
mov
sbb
popa
in
lods
or
out
pop
lahf
sbb
jmp
or
mov
jg
mov
and
sbb
fst
mov
pusha
mov
outs
jns
cmp
repnz
xor
lds
in
xor
jne
inc
sub
jle
mov
xchg
sub
xchg
out
jle
in
sub
fidiv
xor
mov
add
out
pusha
repnz
push
outs
jne
xor
hlt
add
in
inc
std
mov
or
mov
mov
nop
inc
fmulp
lods
adc
push
nop
adc
push
leave
push
jg
cmps
push
hlt
push
in
xchg
icebp
arpl
retf
test
dec
ret
test
pop
mov
xor
ret
out
imul
jne
push
jno
inc
jp
and
pushf
xchg
fbstp
int
inc
jo
je
xor
(bad)
outs
mov
es
dec
mov
test
daa
inc
aad
sbb
cld
rcl
push
pop
xor
mov
jno
sub
pop
dec
add
cmp
mov
push
and
or
mov
sbb
pop
xchg
sub
movs
sbb
inc
add
mov
(bad)
cli
xchg
jae
movs
sbb
push
push
push
pop
or
clc
outs
popf
test
xor
fmul
adc
lods
(bad)
jb
cmc
adc
lods
fxch
into
xchg
scas
sbb
nop
outs
fcomip
pop
fild
or
pop
mov
inc
jno
pop
sbb
in
jmp
and
xchg
push
ins
xor
inc
inc
sub
sbb
in
out
or
jno
push
aad
fs
pushf
stos
adc
pop
pop
in
into
mov
dec
push
les
cdq
sbb
stc
lock
sbb
mov
or
sahf
sub
mov
mov
mov
or
adc
pusha
nop
jbe
and
jl
lock
push
adc
sub
rcr
in
jb
test
xor
repz
ret
sbb
cwde
pushf
or
mov
fbld
int
callw
pop
mov
xchg
or
pop
jp
xor
cld
mov
jmp
mov
add
imul
dec
outs
(bad)
outs
sahf
xchg
imul
xchg
(bad)
je
repz
dec
jp
or
les
jge
js
push
dec
mov
fldcw
(bad)
out
mov
pop
and
jmp
stc
int3
xchg
outs
nop
pop
and
jnp
push
stc
(bad)
inc
xor
scas
xchg
push
ins
sub
and
jb
out
inc
inc
scas
xor
fbstp
pop
push
xor
push
xchg
enter
cmp
pop
push
aaa
jns
loope
fs
call
mov
int3
jp
addr16
xchg
sbb
lea
call
xchg
jae
adc
add
aam
aam
or
jl
out
mov
cmp
xor
dec
loop
in
pop
imul
xor
or
lock
add
xchg
adc
jge
xchg
repnz
pop
adc
pop
iret
int3
pop
inc
ret
push
jno
or
or
or
mov
lock
cwde
leave
out
xor
rcl
xor
cmp
(bad)
es
mov
mov
sahf
xchg
add
loopne
mov
mov
mov
std
cmp
ss
and
or
adc
rcl
gs
(bad)
xor
mov
fcom
sbb
stos
ja
adc
fxch
lahf
icebp
jno
adc
sbb
jg
ja
pop
and
mov
sub
xchg
xor
shr
mov
ret
(bad)
(bad)
adc
pop
das
std
adc
sbb
and
mov
adc
dec
imul
int3
out
sub
inc
or
pusha
dec
mov
sub
sub
and
add
cs
fcmovne
dec
icebp
dec
push
daa
mov
xchg
and
loope
cmp
aam
or
das
push
cmp
inc
leave
mov
fidiv
call
lods
xor
dec
in
repnz
push
xor
cmp
cmp
addr16
jmp
sbb
mov
fisttp
dec
movs
xchg
add
fimul
push
add
pop
loop
repz
cmp
and
gs
push
jns
clc
inc
ins
mov
pop
pop
call
rcl
pushf
jge
repz
movs
sbb
outs
pop
xor
in
adc
sub
sbb
dec
mov
inc
xor
pop
inc
mov
lock
lds
xchg
out
leave
and
loope
cdq
mov
mov
pop
std
mov
daa
inc
mov
daa
hlt
or
(bad)
and
push
push
and
in
mov
mov
cmp
xor
push
jno
es
dec
ss
or
jle
sub
add
in
add
adc
clc
and
call
xchg
mov
sbb
stos
ja
sub
mov
popa
or
fdivr
pop
mov
dec
repnz
mul
pushf
aam
sahf
jb
mov
mov
test
dec
pop
retf
pusha
cmp
jbe
bound
call
add
pop
adc
shr
fldcw
ds
ror
inc
loopne
lods
sub
sahf
push
stos
mov
pop
push
retf
or
xchg
lock
sbb
inc
jl
addr16
outs
pop
dec
mov
xor
pop
(bad)
sti
mov
jl
mov
mov
out
or
mov
mov
xchg
cdq
es
stc
iret
inc
loopne
sar
jne
sbb
test
pop
test
jl
push
mov
test
ja
adc
inc
mov
or
and
pop
mov
and
sbb
inc
mov
inc
xlat
inc
xor
jle
call
adc
xor
adc
ret
jmp
mov
xor
ds
jbe
sti
stc
ret
and
fwait
int
popa
in
loopne
in
sbb
std
retf
(bad)
xor
(bad)
(bad)
cli
sbb
sbb
mov
sbb
xor
mov
inc
test
in
daa
sahf
nop
adc
aaa
imul
dec
lds
inc
mov
call
sub
xor
xchg
aas
xor
test
and
stos
pushf
mov
es
push
in
or
and
ins
sub
(bad)
sub
jg
bswap
sbb
sbb
and
sti
(bad)
hlt
stos
int
mov
call
lods
pusha
mov
adc
cmp
jecxz
mov
iret
int3
inc
aam
cmp
rcl
pop
mov
push
dec
loop
jg
ret
xchg
cmps
xor
adc
push
jle
stc
test
(bad)
mov
jo
addr16
fistp
lods
add
aas
(bad)
pop
(bad)
ror
mov
mov
fiadd
loopne
rcr
ret
xor
adc
ret
add
arpl
int
je
and
lahf
jmp
push
lods
inc
xor
cmp
dec
imul
pop
out
sbb
push
mov
mov
add
fistp
imul
mov
sub
cli
pop
dec
jecxz
and
and
mov
mov
jge
arpl
out
jnp
pop
cmp
add
pop
std
cld
bound
xchg
inc
in
mov
sub
js
mov
repnz
push
fsincos
vandpd
aaa
into
add
scas
pop
test
add
cmc
inc
xor
or
and
sbb
inc
js
dec
xor
ds
mov
mov
mov
cmp
pop
iret
arpl
cmp
mov
and
push
stc
fisubr
jb
clc
cmps
gs
adc
mov
stos
sbb
push
push
loopne
and
ror
and
cmp
dec
push
ja
stos
mov
adc
fistp
and
(bad)
mov
ins
cmp
or
mov
xchg
adc
icebp
add
and
repz
xor
ret
test
ja
inc
jecxz
outs
push
clc
pop
je
sbb
or
add
fbstp
inc
imul
jl
jne
jmp
xchg
pop
mov
inc
and
iret
cli
out
in
sti
and
jge
nop
bound
retf
es
icebp
(bad)
mov
and
and
cmp
xor
inc
sub
xor
(bad)
jb
rol
nop
stos
or
(bad)
fcom
xor
cwde
movs
jb
dec
xor
and
push
outs
add
test
dec
dec
(bad)
xchg
xor
mov
ds
xor
mov
bnd
js
call
cdq
movs
cmp
hlt
adc
add
sub
xchg
mov
add
into
shl
call
addr16
dec
jnp
jecxz
inc
js
mov
and
frstor
fs
mov
mov
fsubr
cmp
cmp
cmp
jb
xchg
sub
pop
jge
cmp
pop
adc
loop
inc
imul
mov
inc
sub
jmp
mov
mov
adc
jp
push
ret
es
lock
sahf
lahf
je
cmps
popf
push
pop
adc
pushf
iret
(bad)
dec
int
mov
jb
sti
int3
sbb
sub
retf
fwait
ret
add
enter
xchg
pop
add
aas
mov
mov
out
rcl
movs
push
pop
cmp
sar
in
test
pop
jg
cmp
xor
(bad)
xchg
lahf
adc
or
das
xchg
inc
movs
(bad)
xchg
out
loopne
pop
mov
sub
mov
push
adc
dec
adc
fcmovb
enter
cmp
pop
cld
scas
adc
pop
mov
xchg
sub
and
and
adc
aam
jg
dec
mov
jl
and
sbb
dec
dec
mov
adc
sbb
mov
mov
mov
jbe
test
pop
scas
sbb
push
xchg
retf
pop
sub
aaa
add
ss
push
pop
mov
sbb
xchg
test
add
sub
in
adc
les
ja
mov
push
psubusw
outs
repnz
in
rol
xor
dec
sub
add
mov
ret
jnp
daa
or
or
mov
call
mov
push
xor
jg
inc
mov
xchg
das
jge
sub
jmp
bound
cmp
jo
mov
xchg
iret
xchg
dec
sbb
sbb
cmps
cmovo
xchg
enter
sbb
(bad)
cmp
mov
fwait
data16
int
movs
jle
ror
mov
ror
stos
xor
pop
cld
mov
or
mov
xlat
je
pop
inc
aam
sahf
xchg
xor
sbb
test
sbb
jnp
xchg
fsub
pop
loopne
lods
push
int
and
int
out
or
shl
xchg
mov
jbe
out
lahf
ins
xchg
cdq
lods
(bad)
pop
pushf
jbe
lods
jbe
jmp
xchg
scas
repnz
and
sub
xchg
addr16
ss
cli
sub
fldcw
fst
in
enter
pop
xchg
fadd
cmps
fistp
loope
add
ins
(bad)
push
add
gs
inc
xchg
mov
push
or
sub
fstp
xchg
push
cld
bound
mov
aad
xlat
dec
(bad)
inc
dec
mov
add
xor
lods
pop
aas
into
in
popa
push
adc
shl
repnz
add
inc
out
imul
sub
or
lods
pmaxsw
xor
sbb
inc
call
sbb
aam
cmp
in
data16
dec
or
push
pop
dec
jae
out
xchg
test
jno
mov
mov
push
and
cmp
jmp
push
imul
aas
mov
adc
jbe
std
in
and
hlt
push
or
js
repz
(bad)
cmp
mov
shr
cmc
add
cmp
or
xchg
adc
les
fs
test
sub
outs
aam
xchg
dec
add
and
out
ja
shl
int
jo
add
bound
aad
popa
test
inc
mov
sahf
and
add
jl
sub
fsub
pop
addr16
shr
pusha
mov
adc
mov
retf
mov
mov
mov
icebp
mov
push
mov
dec
stos
mov
adc
mov
push
inc
xchg
push
jno
xchg
pop
dec
scas
in
xchg
mov
sti
fwait
out
in
clc
sub
xor
and
scas
mov
xlat
ror
mov
int
mov
pop
call
mov
cld
mov
and
push
sti
sub
int3
xchg
xchg
aad
mov
stos
in
xchg
data16
or
data16
imul
mov
fild
or
ds
out
xlat
mov
loope
xchg
xchg
xchg
inc
xlat
adc
test
rol
xchg
test
or
and
jmp
ins
or
stc
not
hlt
mov
pop
fidivr
lahf
xor
pop
(bad)
lock
mov
sub
lock
cli
arpl
mov
jp
sahf
mov
outs
sahf
xchg
pop
retf
push
adc
in
xlat
xchg
cdq
in
in
and
or
mov
jno
xchg
push
jge
call
test
pop
jl
push
jne
cmovg
pop
push
scas
cmp
pop
sub
mov
push
mov
mov
xchg
es
out
out
mov
js
cld
adc
and
int3
dec
jge
mov
or
fstp
imul
call
adc
mov
fdivr
int
aas
gs
push
shr
xchg
inc
mov
xor
sub
inc
add
stos
sub
loopne
mov
jp
mov
or
test
repnz
and
data16
arpl
adc
fst
cmp
push
jecxz
or
inc
xchg
in
stos
jmp
ins
jo
retf
imul
(bad)
pop
ins
jns
add
shl
int
in
ins
sub
jp
cs
divps
neg
ret
dec
jge
cmp
xchg
jae
push
mov
aas
cmc
shl
jecxz
fidiv
cmp
xor
fdivr
out
test
jnp
lods
mov
fs
pop
push
(bad)
out
inc
add
mov
and
push
sti
mov
outs
js
dec
in
sahf
popf
imul
lods
test
jmp
psubw
xchg
in
aas
push
and
sbb
push
or
dec
mov
or
jl
cmp
push
stos
or
fld
and
adc
or
jb
mov
pop
pop
lods
or
fs
lods
xlat
ss
aam
sbb
retf
stos
mov
sub
cmp
push
sahf
mov
ss
mov
pop
sub
push
sbb
not
enter
fistp
adc
movs
ret
ss
pop
test
push
shl
out
dec
(bad)
adc
jge
dec
add
cwde
retf
mov
sbb
(bad)
hlt
pop
xchg
leave
mov
cmc
loope
es
sub
mov
out
mul
nop
jno
ret
mov
push
sti
(bad)
lods
scas
xor
rcr
mov
cmp
mov
hlt
push
cmp
cmp
cmps
ss
bnd
jmp
mov
repnz
nop
test
xchg
loop
pop
retf
popa
add
dec
sub
in
mov
movs
jo
in
lods
and
leavew
pop
pop
cmp
daa
adc
or
in
pop
mov
mov
fst
mov
out
mov
addr16
cdq
pop
adc
rcr
test
pop
or
scas
adc
mov
aas
sub
xor
movs
and
rol
xchg
jecxz
xchg
pop
sub
jle
ins
jb
or
sub
adc
stos
sbb
mov
retf
pop
(bad)
rcr
outs
xchg
loope
ror
imul
loope
loopne
ins
xor
xor
dec
push
inc
push
push
add
pushf
les
mov
(bad)
nop
mov
xor
jl
dec
ret
repz
int
mov
add
jmp
xchg
hlt
sub
cmc
mov
shr
scas
mov
xor
je
xor
push
cmc
cmp
(bad)
sbb
and
outs
mov
push
mov
cmp
icebp
sub
lods
je
das
xchg
outs
and
lds
push
daa
jmp
in
loopne
fidiv
fdivr
adc
push
mov
dec
xor
mov
push
pop
mov
scas
xchg
push
sahf
shr
retf
mov
or
adc
ret
inc
fwait
jns
mov
mov
ret
and
cmp
dec
pop
adc
enter
dec
out
imul
xor
push
out
cmp
push
push
loop
push
outs
lea
int
ins
je
cmp
jo
bound
adc
inc
sbb
imul
inc
je
mov
jns
mov
ja
xchg
mov
popf
xchg
push
add
les
mov
sar
dec
xchg
aas
icebp
cmp
dec
sbb
dec
push
push
dec
ficomp
jp
dec
dec
mov
xor
pusha
dec
cmp
idiv
out
mov
add
xchg
in
pop
xlat
add
stos
fdiv
test
test
fs
add
std
cmps
stc
shl
fidiv
test
or
sub
aas
movs
add
xor
call
mov
stos
inc
outs
jge
test
push
lock
inc
gs
in
inc
jo
daa
or
mov
jo
out
rcl
fld
pushf
dec
and
mov
push
push
dec
fadd
and
cwde
sub
sub
cmp
movs
das
fs
daa
popf
sbb
popa
pusha
lock
ficom
xor
sahf
pop
xchg
sub
mov
jle
sub
jp
in
mov
inc
add
int
(bad)
aad
mov
lds
xor
outs
inc
add
iret
dec
mov
cmp
sbb
daa
jnp
arpl
xchg
popf
xchg
sbb
repnz
movs
fidivr
mov
scas
sahf
add
xchg
(bad)
sub
(bad)
xchg
sub
dec
dec
adc
dec
movs
call
mov
mov
push
cwd
adc
fild
mov
sub
push
in
fstp
nop
arpl
and
mov
mov
adc
es
add
movs
ds
mov
clc
iret
sub
shl
pushf
add
rcr
leave
cmp
(bad)
pop
xchg
mov
inc
cmp
pop
push
push
stc
push
scas
ret
cmp
push
push
lock
rcr
or
pop
(bad)
int3
add
or
in
sub
scas
inc
cmc
nop
mov
jo
mov
inc
sub
add
or
fnsave
sub
xchg
(bad)
xor
sub
xor
push
fmul
add
add
xchg
mov
mov
or
sub
outs
bound
dec
or
xchg
push
add
jl
out
cli
and
aad
mov
fild
cmps
out
jle
jbe
xchg
scas
icebp
pop
cdq
sub
je
push
jmp
loope
mov
sahf
stc
inc
and
cmps
fist
or
retf
inc
cmp
inc
ins
sub
dec
scas
jp
cmps
loope
mov
scas
mov
xchg
xchg
mov
pop
dec
pop
and
rol
std
call
xor
inc
pop
and
sub
dec
(bad)
sti
pop
mov
xchg
clc
test
and
fs
inc
nop
mov
imul
dec
call
inc
and
(bad)
cmp
cmp
sbb
sbb
in
cdq
pusha
fld
mov
dec
or
inc
add
cli
enter
pop
test
pop
mov
jb
xchg
mov
inc
jb
push
push
mov
pushf
jbe
fistp
ins
mov
inc
mul
sbb
inc
outs
pop
sbb
pop
mov
pop
mov
xor
(bad)
mov
pop
sbb
shl
inc
inc
sub
ss
inc
mov
or
(bad)
into
ins
xchg
cdq
enter
xchg
mov
ins
jl
fsubr
fnstcw
or
sub
adc
mov
pop
lea
icebp
push
sbb
lahf
xchg
push
xor
ret
cmp
fild
in
stos
push
mov
dec
push
shl
mov
sub
mov
aad
jno
stos
dec
(bad)
ror
inc
cmps
fdivr
addr16
pusha
test
ja
sub
jle
mov
fwait
mov
adc
scas
xor
jns
les
xor
pusha
stos
jo
adc
adc
aam
add
das
push
(bad)
xchg
inc
jns
stc
movs
inc
imul
cmps
int3
inc
neg
lds
add
and
mov
cmps
out
sbb
imul
cdq
mov
loope
jmp
dec
movs
cmp
push
popa
xor
fdiv
add
ds
loop
je
popf
mov
fisttp
mov
and
inc
mov
lahf
dec
mov
add
jp
xor
xchg
ins
cdq
jnp
adc
or
dec
sbb
cmc
lahf
pop
xor
and
call
xlat
inc
jmp
daa
bound
ja
pop
fdiv
clc
or
hlt
(bad)
pop
fucomp
scas
xchg
pop
inc
cwde
jp
inc
dec
dec
fadd
xchg
bound
ss
push
mov
push
mov
or
mov
lahf
mov
cmp
mov
xor
mov
xor
jbe
aas
sub
pop
push
retf
cdq
cs
and
sahf
int
je
mov
adc
xor
shl
jb
push
inc
adc
push
xchg
xchg
or
dec
adc
adc
cwde
in
int3
jne
adc
cmp
test
ja
cmp
jmp
imul
jb
dec
ja
ficom
test
sub
ret
or
das
adc
add
push
dec
sub
div
pop
jmp
sar
(bad)
fsubr
jmp
cmp
sahf
and
push
and
sahf
or
xchg
xchg
push
dec
sub
pop
cmp
(bad)
jmp
and
xchg
rcr
aaa
ret
pusha
jnp
push
and
icebp
cmp
in
and
and
dec
fisttp
xchg
lahf
or
pop
cmps
or
cmc
xor
inc
mov
sub
pushf
dec
or
fsub
pop
std
or
outs
mov
sbb
loope
mov
int3
mov
pop
in
(bad)
out
stc
add
pop
jmp
mov
aaa
xor
sub
call
pop
cmc
ja
xchg
add
mov
sub
mov
ja
or
cmp
jl
enter
pop
and
das
sub
icebp
dec
mov
push
(bad)
call
mov
rcl
sbb
out
cmp
outs
sbb
ins
push
or
addr16
mov
test
(bad)
gs
out
xor
in
stos
add
xor
in
aad
ins
scas
add
aas
push
push
out
das
mov
sbb
xchg
cmp
shl
xlat
lock
mov
movs
arpl
sub
(bad)
test
pop
pop
mov
sbb
fcmovbe
idiv
inc
lods
ficom
xor
cmp
cmps
aaa
sbb
mov
mov
enter
shl
mov
sub
jno
(bad)
xchg
adc
loope
sbb
mov
pop
aam
paddusw
jl
and
sahf
test
movs
out
movs
ret
push
aad
inc
pusha
pop
fbstp
adc
in
push
jo
mov
hlt
sbb
(bad)
js
mov
cmp
iret
addr16
and
(bad)
addr16
loopne
test
sub
lahf
daa
movlps
xchg
pop
out
(bad)
idiv
out
pushf
push
xchg
mov
popf
fmul
add
inc
jl
mov
and
ret
push
jno
popa
mov
(bad)
stos
dec
xchg
or
xchg
mov
add
arpl
adc
(bad)
aaa
or
retf
cld
fsub
(bad)
mov
(bad)
xor
cdq
fiadd
pop
lds
repnz
int
inc
inc
ins
push
push
aas
imul
or
xchg
loopne
add
add
jle
test
xchg
push
pop
cmc
leave
hlt
xchg
sti
jmp
lods
sbb
xchg
mov
pop
adc
xor
(bad)
mov
fidivr
gs
dec
mov
cwde
leave
ret
or
jnp
ror
dec
lods
pop
clc
push
adc
int3
push
shl
into
in
add
fstp
les
or
scas
pop
in
dec
pop
ds
clc
inc
ds
sbb
jmp
pop
or
cmp
test
jnp
dec
pop
fisttp
adc
hlt
or
retf
js
mov
jo
loop
int
pop
push
lods
jle
sub
nop
mov
mov
mov
fcmovbe
jo
sbb
or
or
ins
xchg
dec
pop
std
cmp
std
clc
test
jno
pop
xchg
aam
jmp
push
xchg
push
in
loopne
mov
xor
pop
repnz
mov
jne
push
stos
push
repz
cmps
fst
(bad)
or
mov
or
idiv
sbb
(bad)
loop
sub
shr
dec
out
out
sbb
pop
sub
mov
ja
mov
jns
pop
icebp
ror
stc
clc
hlt
loop
fcomp
out
mov
pusha
mov
repnz
inc
cmp
xor
dec
push
pop
fldenv
xor
out
mov
lock
cmp
ret
inc
push
shl
xchg
int
sub
sbb
je
and
cmp
pop
cmp
in
arpl
pop
push
cmp
shr
cmp
push
cs
pop
sbb
addr16
pop
outs
into
inc
add
add
outs
cmp
push
mov
out
aam
(bad)
movs
pop
inc
adc
push
push
stos
jle
out
adc
jne
fmul
jno
imul
mov
imul
push
cmps
pushf
iret
add
inc
mov
push
or
xchg
or
cmp
pop
(bad)
push
mov
pop
push
fisub
sbb
cmc
pusha
int3
jns
dec
and
push
lds
pop
xor
pop
pop
sbb
cmp
ror
xchg
call
add
adc
pop
pop
or
pop
mov
sbb
and
xchg
and
arpl
dec
pushf
sbb
idiv
loopne
fadd
int3
in
dec
sbb
pop
sbb
and
inc
xchg
push
in
in
scas
out
cmp
or
push
outs
pop
or
push
pop
mov
(bad)
stos
test
sbb
stos
fidivr
mov
cmp
xor
cld
mov
test
xor
dec
rcr
mov
fst
rcl
fcmovbe
lock
add
outs
jns
sub
and
lds
or
push
leave
test
jo
mov
das
es
or
add
jb
push
nop
rol
jns
jg
inc
lock
push
mov
stc
mov
ret
jmp
je
stos
inc
push
fidivr
push
stc
xchg
in
aam
es
and
icebp
push
leave
mov
iret
xor
sub
push
xchg
and
pop
stos
sahf
or
test
icebp
adc
mov
data16
push
mov
pop
daa
add
pop
call
jl
jmp
dec
sub
cld
aaa
add
jp
sub
(bad)
mov
mov
stos
xchg
mov
push
test
repnz
sti
mov
xor
adc
mov
adc
dec
into
mov
xor
cdq
inc
sub
bound
xchg
and
push
cmps
clc
inc
icebp
sbb
push
scas
aaa
adc
mov
xor
mov
jmp
xchg
js
and
jno
and
or
stc
cmp
add
pop
xor
push
fnstenv
jle
arpl
pop
push
ds
xchg
sti
les
inc
jmp
repz
mov
xor
hlt
test
ss
fxch
push
pop
fnstcw
push
pcmpgtd
pop
fsubr
test
dec
sub
mov
outs
mov
sbb
wrmsr
inc
mov
stos
paddsb
pop
push
inc
ret
fsubr
scas
xchg
or
pop
cmp
xchg
js
or
lods
mov
mov
mov
gs
mov
out
cmp
inc
push
lods
mov
inc
iret
bound
xchg
pop
jne
xor
test
sbb
test
(bad)
xor
mov
mov
and
call
cmps
imul
stc
cmps
test
mov
sbb
adc
xchg
not
ja
and
or
lock
push
mov
fimul
icebp
aaa
loope
(bad)
in
fbld
jge
pop
nop
test
lods
mov
addr16
sub
mov
or
sbb
ss
xchg
or
std
(bad)
mov
mov
inc
mov
rcr
sub
imul
mov
cmp
xlat
(bad)
push
dec
call
cwde
mov
mov
mov
pop
es
out
fwait
jae
test
imul
push
push
aad
pop
cmp
stc
or
cmps
sbb
ja
shr
mul
std
into
jb
sbb
mov
out
adc
sbb
pop
in
jns
retf
push
fiadd
icebp
dec
mov
push
adc
and
xor
data16
mov
iret
cdq
les
ins
mov
sar
push
pop
cmp
sbb
sub
loopne
sub
lock
mov
rol
bound
shr
test
push
outs
and
pushf
pop
ror
xor
jae
mov
int3
sti
imul
je
sub
js
push
ret
add
dec
jbe
push
dec
or
sub
pop
push
adc
cmps
retf
les
lods
fwait
mov
cs
pushf
push
sti
add
shl
test
or
nop
mov
std
adc
or
int3
jp
sub
push
adc
pop
sub
ss
stc
int
mov
jae
fidiv
xchg
stos
xchg
imul
daa
jecxz
xchg
cld
ss
sbb
cmovp
and
jmp
inc
or
inc
xlat
out
add
pop
or
movs
jbe
neg
in
ins
push
shl
pop
(bad)
mov
mov
sub
popa
rol
jbe
dec
sub
dec
inc
dec
sbb
add
out
(bad)
ds
jge
pop
mov
movs
sub
adc
pop
call
sahf
cmps
sub
adc
loopne
in
inc
adc
movs
std
push
stos
sbb
xchg
xor
xlat
fs
adc
arpl
or
dec
imul
xchg
cmp
push
popa
ins
or
and
out
mov
jae
sbb
in
adc
mov
in
cdq
lds
mov
loopne
leave
iret
push
sub
and
arpl
fnstcw
or
iret
push
ins
push
ret
xchg
pop
cmp
lds
daa
mov
repnz
sbb
mov
mov
add
mov
push
mov
lahf
stos
push
adc
cmp
(bad)
cmp
mov
aaa
jp
xor
adc
imul
push
int3
mov
xchg
and
shr
sub
mov
sahf
inc
(bad)
or
mov
fisub
lds
ins
pop
aad
xor
pop
(bad)
out
jne
ss
outs
push
ins
repz
push
dec
loopne
lock
(bad)
xchg
loopne
ins
aaa
or
loope
xchg
add
(bad)
or
(bad)
icebp
out
repz
jg
sub
sbb
popa
imul
xor
xchg
in
dec
aas
daa
je
rol
or
cdq
out
push
repz
sbb
xchg
push
jbe
bswap
scas
xor
imul
pop
adc
cs
leave
mov
out
out
push
xor
mov
ins
cmps
call
addr16
push
add
sub
sub
mov
scas
mov
mov
mov
fs
pushf
dec
inc
xchg
mov
cmp
lds
sub
dec
or
jo
cmp
scas
sti
test
push
loopne
cmp
sbb
xchg
xchg
jl
into
in
mov
(bad)
rcr
lea
or
test
jecxz
loope
xor
leave
ret
in
in
or
bound
jge
mul
adc
sbb
int
das
cmp
int
inc
push
mov
cld
movs
mov
mov
fdiv
inc
fdiv
in
xchg
ss
add
pop
pop
mov
daa
(bad)
retf
loop
sbb
stos
jecxz
aas
xchg
xor
div
cmp
bound
das
aas
pop
mov
jmp
dec
je
dec
add
call
(bad)
ficomp
xor
push
pop
inc
xchg
pop
or
enter
int3
xlat
push
into
or
int
cmps
xor
into
adc
dec
push
xchg
retf
or
adc
cs
shr
test
jecxz
jne
ins
std
fisttp
xlat
or
sub
data16
and
popa
mov
inc
dec
arpl
push
jne
int3
adc
sbb
add
push
mov
repz
shl
sbb
sub
mov
add
xchg
push
push
and
add
ds
ss
lock
mov
push
cmp
pop
xor
rcr
test
cld
fiadd
jp
aam
inc
call
std
jg
aad
pop
inc
call
and
xor
mov
jb
push
pop
xlat
scas
pop
pop
or
hlt
jmp
shl
add
mov
mov
sar
cdq
pop
lahf
repz
push
push
add
push
in
outs
call
mov
repnz
sbb
fisttp
fucomip
jo
dec
pop
call
hlt
scas
xchg
pop
fdivr
jno
fmul
jmp
push
ds
mov
jne
(bad)
int3
vpsubsw
inc
leave
in
iret
and
aaa
mov
xchg
sahf
imul
adc
pop
pop
icebp
mov
mov
xor
add
jne
cmp
leave
mov
push
cmp
push
sbb
test
inc
mov
call
mov
add
xlat
pop
inc
jl
xor
inc
sbb
shl
mov
fdivr
imul
cmp
popa
mov
mov
push
retfw
aas
pop
fsincos
repnz
cmp
dec
lds
cmovnp
pop
cdq
adc
jp
or
mov
data16
repz
cli
ins
inc
sbb
iret
lods
shl
(bad)
and
push
mov
add
iret
lahf
(bad)
retf
(bad)
fild
add
pop
add
retf
push
nop
popa
sub
or
pop
inc
adc
push
mov
add
mov
mov
sub
dec
rol
push
mov
loope
test
rol
mov
hlt
jge
cmp
scas
scas
ins
repnz
sub
les
pop
je
add
adc
mov
leave
imul
add
jmp
jo
dec
sbb
push
xchg
jnp
adc
jne
std
mov
sub
cmps
(bad)
aaa
xor
stos
push
iret
nop
fcompp
and
dec
neg
iret
sti
mov
mov
pop
sbb
aam
rep
dec
mov
pop
sub
stc
inc
ror
in
dec
in
xchg
push
jle
outs
or
(bad)
xor
(bad)
push
in
push
xchg
mov
push
push
ret
adc
lock
xchg
mov
mov
les
bound
add
dec
(bad)
push
jns
sbb
mov
sbb
mov
sbb
test
rol
push
jnp
adc
xor
hlt
dec
and
xchg
out
(bad)
loop
sbb
adc
sbb
or
and
push
outs
repnz
xchg
les
pop
jnp
mov
mov
jne
(bad)
cli
inc
pop
xchg
out
dec
sahf
xor
ins
cmp
das
mov
lods
arpl
outs
sbb
inc
push
inc
mov
nop
not
dec
adc
das
ficom
fs
cmp
aad
not
je
sub
loopne
cdq
pushf
mov
sub
je
xor
fstp
sbb
gs
popf
dec
push
idiv
xchg
sbb
rol
popf
into
mov
(bad)
cld
jmp
pop
(bad)
push
mov
mov
cwde
mov
stos
mov
js
out
adc
into
xor
jno
div
icebp
fs
sbb
lock
and
dec
das
into
mov
aas
daa
call
mov
mov
and
pop
mov
sub
jp
mov
add
jle
jg
jne
inc
jne
retf
inc
jne
cmps
ins
fcomp
mov
enter
xor
outs
outs
mov
mov
ins
cli
xor
pop
ror
cdq
loope
mov
dec
fild
or
xlat
sub
fild
icebp
movs
popf
xchg
test
xchg
dec
lods
push
ins
mov
mov
retf
adc
clc
test
cmp
adc
test
mov
out
cmp
mov
js
ret
ret
pop
stos
out
add
sti
sti
std
lods
(bad)
leave
mov
mov
jne
(bad)
out
sub
dec
inc
mov
cli
std
dec
and
stc
push
jae
aaa
cmp
mov
repnz
hlt
push
jne
mov
mov
shl
sbb
adc
arpl
clc
je
pop
es
add
(bad)
jle
int3
mov
adc
sbb
pop
pop
xor
mov
cmp
mov
loopne
stos
test
setle
ja
xor
mov
sub
mov
loope
cmc
lock
push
rcr
cli
add
xchg
movs
cmp
in
std
adc
mov
xor
pop
frstor
rcr
cli
movs
dec
mov
daa
jle
cmp
xchg
xlat
imul
fild
sbb
int3
or
rcl
sbb
sub
push
je
xchg
sahf
add
cmp
pop
sahf
dec
cmp
lods
pop
fcomp
popa
shl
cmp
test
mov
ds
fsubr
lods
out
adc
pop
sbb
dec
into
push
mov
js
xchg
ds
push
outs
les
test
inc
mov
sub
adc
jl
out
mov
pop
pop
hlt
out
ss
rcr
jne
xchg
cmp
stos
leave
test
icebp
fwait
dec
fcmovbe
or
sub
or
inc
push
retf
cld
test
out
ds
push
jo
(bad)
imul
or
xchg
mov
das
adc
pop
outs
mov
in
stos
mov
xor
test
jp
je
daa
inc
push
fld
scas
dec
push
cmp
add
repz
stos
lock
ss
mov
cmp
aad
adc
out
js
add
lahf
dec
push
mov
arpl
cmc
aaa
js
xor
push
scas
stos
stos
leave
in
add
push
outs
int
and
arpl
cwde
cmp
rcl
cmp
in
mov
jge
cmp
(bad)
cmc
push
jae
mov
shl
js
pop
push
and
adc
push
lods
sbb
icebp
fs
es
mov
or
jo
repz
inc
inc
xor
sub
je
and
sub
mov
mov
xlat
rcl
iret
std
movs
mov
mov
pusha
sub
xor
aaa
push
aad
aad
xchg
jo
mov
popf
push
les
out
sub
ds
arpl
mov
inc
out
outs
and
cs
pop
outs
loope
cmps
je
popa
sbb
mov
xor
mov
fldenv
(bad)
push
imul
or
inc
movs
add
outs
pop
mov
jge
ja
cli
sub
lahf
add
adc
xchg
push
jg
push
pop
out
(bad)
jnp
out
inc
clc
mov
pop
leave
mov
sbb
sti
sub
and
lods
adc
add
mov
clc
loopne
or
dec
or
jo
sub
daa
mov
sub
xchg
call
pop
cmp
movs
or
pop
addr16
and
aad
cmp
pushf
es
mov
inc
ins
loop
fwait
push
cmp
shl
xchg
adc
or
xor
lahf
xor
lods
icebp
iret
and
xchg
sub
test
dec
adc
push
scas
mov
mov
dec
loope
xchg
or
sahf
xor
sub
cmp
add
sub
dec
ret
sbb
fwait
(bad)
push
adc
(bad)
xor
mov
icebp
data16
adc
je
adc
ja
adc
xor
stc
adc
(bad)
sbb
sahf
push
xchg
(bad)
push
jae
cli
sbb
(bad)
enter
adc
inc
repz
and
jb
push
xlat
or
xor
fimul
xchg
sbb
cmp
iret
imul
hlt
ret
sub
js
mov
sbb
pop
pushf
iret
sbb
cs
test
xchg
mov
xchg
dec
sbb
std
shl
icebp
dec
ret
inc
retf
(bad)
mov
sub
mov
and
push
jb
sbb
in
mov
adc
pop
cs
pop
imul
jns
popf
xor
cmc
into
cwde
xchg
fmul
fdivr
cmc
imul
fldcw
mov
pop
fcmovnbe
sbb
mov
imul
outs
aas
outs
not
fld
add
inc
popf
sbb
out
stc
rcr
jae
push
pop
inc
imul
(bad)
scas
cmp
xor
mov
and
xor
sub
mov
(bad)
inc
(bad)
jo
leave
push
leave
sub
dec
clc
(bad)
in
add
push
pop
pop
sub
int
dec
aam
dec
fld
js
pop
jns
pcmpeqb
sub
push
imul
jns
mov
in
sub
jmp
inc
call
jns
push
inc
jecxz
lds
nop
mov
dec
adc
sub
mov
push
jno
pop
cdq
pop
xchg
xor
sti
or
fidiv
sub
or
jns
test
dec
nop
mov
arpl
sub
sbb
push
outs
add
add
and
scas
outs
retf
mov
jae
xchg
outs
ds
fiadd
sbb
ja
lods
in
movs
ja
and
fs
cmps
lds
test
cmp
out
dec
mov
mov
jmp
push
loop
dec
jno
cmp
adc
mov
or
jl
jp
inc
dec
jns
inc
xchg
fdivr
inc
pushf
mov
xchg
mov
(bad)
or
jp
lods
or
movs
in
movs
test
mov
pop
outs
xchg
jmp
xchg
aam
(bad)
pop
out
ret
iret
add
add
and
xor
(bad)
fiadd
rcr
sub
inc
es
mov
push
mov
pop
jp
sbb
lahf
mov
jnp
dec
test
daa
fild
adc
and
ficom
xchg
mov
pop
mov
aam
sahf
sti
and
cmovae
cmc
movs
ja
xchg
jnp
cmp
jmp
(bad)
mov
dec
or
xchg
lds
lahf
pushf
add
std
rcl
mov
fsub
(bad)
or
push
ret
or
daa
add
enter
mov
xor
cmp
add
in
mov
ret
into
mul
xchg
push
fisttp
xchg
loopne
int3
mov
in
sub
jne
sahf
je
int3
inc
dec
or
out
mov
out
int
xor
stos
or
mov
sub
stc
xor
ins
cmps
stos
mov
lods
sti
mov
int
rol
or
movs
stos
cmc
jle
aam
dec
call
mov
mov
cli
in
sub
xchg
cmp
mov
xlat
lds
jns
arpl
push
lods
ja
mov
sbb
pusha
in
in
mov
bound
or
repz
dec
xchg
cld
mov
popa
mov
dec
jnp
fxch
cmc
mov
dec
not
movs
aaa
or
test
and
(bad)
jg
sar
je
imul
dec
jmp
push
and
sub
imul
mov
rol
in
pop
mov
popf
enter
sbb
add
ficomp
or
mov
daa
shl
nop
adc
or
push
retf
add
mov
or
ins
pusha
push
pop
les
push
jbe
cmp
mov
retf
in
cmp
xor
cmps
push
dec
ss
push
test
movs
mov
xchg
fstp
psrlq
jp
sub
std
loope
repnz
mov
jno
push
mov
icebp
lahf
fnstsw
xchg
in
loopne
das
xor
jecxz
push
mov
push
rol
fcom
jl
xchg
not
loopne
cmp
jns
ins
and
mov
and
inc
xchg
or
shl
dec
mov
mov
lea
adc
sub
adc
sub
xor
pop
mov
cwde
cmp
push
add
test
fistp
ss
sbb
int
add
ret
pop
xor
lea
arpl
push
adc
scas
add
xchg
popa
jge
inc
pop
into
mov
ins
cdq
xor
rcr
sub
sub
mov
pop
imul
cmc
scas
cmps
fld
mov
and
mov
jmp
and
sbb
mov
and
cmps
stos
call
jnp
out
in
push
not
mov
sbb
(bad)
mov
xchg
lods
ins
mov
jo
adc
adc
(bad)
shr
mov
pusha
cdq
call
shl
jns
or
cmp
fucomip
popa
xchg
inc
retf
data16
(bad)
dec
in
jns
pop
shl
dec
stc
ret
mov
sub
outs
jb
jbe
fiadd
cwde
loop
xor
fcmovbe
pop
rol
pusha
pop
in
aaa
jg
shl
lods
data16
in
xor
outs
pop
out
into
lods
iret
sub
sti
out
xor
jo
dec
sbb
xor
mov
retf
daa
(bad)
(bad)
jp
cs
pop
ficomp
enter
and
dec
cmps
and
cmp
dec
fs
retf
pop
xchg
inc
mov
hlt
xchg
mov
adc
call
jle
(bad)
outs
popf
(bad)
or
jmp
cmp
pop
out
jmp
mov
(bad)
sti
sbb
xchg
jecxz
fucomip
sub
add
sub
cli
(bad)
add
mov
into
dec
xchg
jg
jns
adc
je
pop
(bad)
addr16
inc
or
mov
push
in
or
jo
aaa
dec
(bad)
pop
pop
and
sub
sbb
stos
add
mov
lods
mov
add
and
and
inc
jmp
das
dec
arpl
push
data16
push
fist
sar
(bad)
and
and
mov
jmp
sub
out
hlt
inc
iret
retf
test
dec
jp
gs
push
outs
xor
mul
xchg
aam
imul
outs
stos
jne
nop
add
sbb
adc
shl
mov
imul
mov
sbb
push
popf
push
outs
push
hlt
jecxz
dec
pop
adc
out
pop
mov
sub
xchg
add
mov
cmps
and
mov
lods
test
add
mov
icebp
loop
jb
push
test
cmp
fistp
adc
fisubr
adc
imul
shl
jae
es
ins
cs
inc
aad
xchg
xor
(bad)
mov
push
gs
shl
jae
lods
push
sbb
xchg
fwait
cs
test
xor
push
mov
retf
sbb
adc
mov
add
mov
gs
jp
jno
repz
stos
xchg
or
or
mov
outs
mov
mov
adc
and
sbb
aaa
adc
mov
and
add
hlt
nop
call
cmps
sbb
pop
rcl
xchg
stos
mov
fsub
icebp
mov
and
test
call
(bad)
js
hlt
(bad)
dec
shr
push
(bad)
in
outs
push
push
pop
inc
inc
pop
imul
and
aad
or
dec
mov
loope
xor
in
push
leave
(bad)
mov
pop
sbb
out
and
and
test
test
sbb
push
out
repz
dec
iret
adc
inc
jmp
inc
sub
and
gs
pop
cmc
xchg
mov
push
push
dec
cmp
inc
rcr
cmps
push
sub
aaa
sub
xchg
xchg
push
movs
in
mov
sub
or
sub
dec
or
jmp
pop
jmp
iret
jns
mov
cli
ret
ret
idiv
das
dec
or
mov
push
movs
mov
(bad)
out
and
pop
pop
ror
adc
loop
clc
leave
js
push
les
xchg
retf
ror
and
ror
shl
mov
lock
scas
mov
das
cmp
out
sbb
pushf
push
dec
mov
jns
xchg
out
out
pop
mov
dec
ror
push
mov
std
jb
pop
aad
sti
xchg
mov
mov
add
adc
jg
movs
inc
loopne
mov
add
or
(bad)
out
inc
xchg
and
aas
shl
push
add
dec
sub
je
xchg
mov
in
popa
cdq
js
xchg
xor
xchg
pop
push
push
push
mov
js
pop
ss
adc
fadd
das
pop
(bad)
xor
lods
rol
sub
and
stos
out
inc
out
jnp
fwait
bound
pop
stos
pop
test
enter
(bad)
lds
adc
xchg
scas
and
in
shr
inc
pop
aad
jecxz
jbe
mov
pop
adc
cmp
repz
int3
xor
adc
sub
aam
mov
push
mov
sub
push
adc
icebp
mov
retf
and
mov
inc
int3
js
out
and
jnp
pop
mov
aaa
push
cmp
mov
xor
addr16
dec
addr16
sahf
test
sti
pop
fiadd
mov
rcl
call
repz
(bad)
xchg
leave
fimul
nop
outs
movs
scas
add
cmp
mov
adc
cmp
sbb
inc
pop
mov
inc
adc
in
test
xor
push
stc
(bad)
xchg
xlat
lods
adc
clc
mov
stc
jg
fcomp
(bad)
xchg
xchg
jmp
fdivr
jmp
push
jmp
aam
in
xchg
mov
pop
or
or
jge
or
leave
je
outs
xchg
lods
jle
aaa
pushf
mov
int
pop
pop
repnz
aas
ret
inc
movs
dec
sti
jmp
out
push
retf
pop
lds
pop
adc
cwde
jp
clc
cmps
inc
and
inc
(bad)
mov
mov
stc
jp
sbb
aam
add
(bad)
(bad)
sub
nop
cmps
out
add
mov
lods
out
mov
movs
test
fcomi
in
jmp
sbb
hlt
xor
test
sub
je
push
inc
push
cmp
cmp
sbb
sbb
jle
add
rcr
add
mov
in
inc
(bad)
int3
pop
sbb
fldcw
dec
dec
add
xchg
dec
push
in
cdq
dec
push
mov
rol
pop
fsub
cmp
push
pop
sub
movs
shl
dec
xor
mov
mov
xor
rol
push
loopne
aam
loope
loop
sbb
adc
or
add
xrelease
icebp
jle
mov
add
es
imul
sbb
push
gs
sbb
jae
ret
lock
in
adc
loop
mov
loopne
xchg
mov
out
push
ins
inc
(bad)
in
adc
iret
ret
sbb
outs
jle
lock
jmp
jg
div
inc
aas
repz
jge
cdq
and
push
mov
retf
jb
cmp
call
and
iret
mov
scas
or
mov
int
movs
pop
mov
pop
or
cs
push
daa
mov
jne
test
push
ror
fmul
out
iret
push
mov
rcl
dec
outs
adc
sub
pusha
fs
and
mov
pop
xchg
dec
scas
inc
inc
sti
adc
icebp
nop
sub
call
jg
mov
(bad)
xlat
hlt
xor
push
js
loop
std
bound
not
cmp
retf
ins
stos
or
cmp
ror
int3
inc
fldl2t
clc
add
pop
jae
pop
mov
les
fucomi
call
inc
xchg
hlt
dec
pop
test
inc
sub
mov
mov
push
xor
rcr
sar
ins
std
(bad)
scas
add
frstor
xor
xor
and
sub
ret
mov
push
lahf
jl
out
xchg
mov
call
cmps
xchg
push
mov
loopne
adc
out
cdq
nop
mov
and
cmp
add
ins
in
sub
stc
or
xchg
call
ja
lds
lods
pop
xchg
retf
aam
pushf
xor
dec
jbe
jo
xchg
xor
sub
push
mov
pop
popf
data16
mov
(bad)
outs
je
xchg
jo
jae
inc
sbb
dec
pop
enter
xor
in
call
mov
mov
aas
fwait
mov
jge
je
push
int3
sbb
mov
add
je
lea
or
ja
cld
or
ret
cmps
ins
(bad)
out
sub
aas
inc
mov
mov
or
stos
pop
call
cdq
mov
inc
push
dec
push
push
or
pop
inc
je
ret
call
inc
push
adc
fidiv
retf
sbb
add
icebp
test
aas
mov
ficomp
mov
cmp
imul
aam
lds
pmullw
mov
mov
addr16
add
mov
test
mov
xchg
aad
add
paddw
push
rcl
cs
outs
inc
pushf
or
mov
mov
or
push
jno
push
nop
pop
iret
shl
and
and
into
(bad)
push
fucom
fisubr
pop
(bad)
push
sub
push
xchg
and
adc
pusha
imul
sub
adc
mov
stos
cld
cdq
cmp
sub
stc
mov
add
mov
call
ret
xchg
into
and
sub
stos
stos
mov
pop
ja
push
repnz
retf
dec
mov
xchg
adc
xchg
jle
ds
retf
test
punpcklwd
inc
lods
mov
ins
pop
test
mov
ds
dec
ins
xchg
jle
sub
into
loope
xor
fxch
sub
fimul
loopne
shr
in
pop
sub
and
in
add
inc
and
pop
mov
add
and
jnp
adc
cmp
mov
ja
pushf
pop
mov
dec
mov
sbb
mov
push
enter
xchg
mov
retf
es
mov
xchg
or
mov
jb
sub
xor
rcl
sbb
pusha
pop
adc
test
xchg
fs
or
fmul
pop
adc
push
lds
pop
shl
or
xor
push
cmp
lahf
sub
xor
xchg
call
lea
cmps
xlat
rol
add
push
mov
sahf
(bad)
or
pop
jp
movs
pop
arpl
cmc
xor
adc
add
lods
pop
push
dec
and
sbb
aaa
add
mov
retf
or
mov
dec
scas
(bad)
fst
sbb
lea
dec
cs
cmp
push
mov
movs
call
fidiv
ins
inc
retf
(bad)
sbb
clc
jno
out
(bad)
push
xchg
enter
sbb
std
mov
inc
in
sbb
outs
dec
push
popf
and
mov
mov
out
jmp
xchg
popf
retf
or
pop
add
inc
pop
dec
fadd
sbb
mov
cmp
aad
mov
push
jno
aam
data16
imul
popa
push
fidiv
xchg
out
xor
push
in
mov
sub
push
test
xchg
bound
jnp
pop
xor
xor
cwde
mov
cmp
stos
add
jbe
cmp
repz
(bad)
pop
lock
pop
mov
(bad)
dec
jecxz
jno
adc
movs
push
jl
js
sti
adc
cwde
ds
push
mov
mov
jne
imul
adc
xchg
hlt
xor
xchg
mov
popf
gs
pop
add
lods
lock
jno
push
in
add
clc
add
cmp
sbb
call
sub
test
adc
ds
xlat
lds
loop
and
push
cmc
out
imul
imul
mov
cmc
(bad)
sbb
jae
psubb
jo
cld
hlt
pop
adc
cmp
xor
mov
pop
fisubr
jge
or
mov
inc
leave
xchg
cmp
cmps
daa
mov
pop
mov
imul
inc
out
loope
ins
adc
mov
mov
cld
adc
cmp
daa
popf
mov
or
test
jno
ret
jle
or
cmc
out
ins
and
pop
fiadd
add
in
pop
adc
out
xor
aaa
into
and
inc
outs
push
(bad)
fld
cmp
pop
adc
je
jge
into
scas
rcr
adc
xor
lahf
push
mov
mov
mov
mov
add
jbe
mov
jne
(bad)
push
fsubr
aas
sbb
lds
add
pop
and
jg
adc
loope
out
mov
dec
pop
mov
dec
sub
add
pop
jmp
call
sub
(bad)
int
or
inc
mov
test
sbb
adc
frstor
outs
dec
jmp
jp
cmp
xchg
jg
cmp
or
jmp
push
push
test
arpl
sub
sbb
inc
cli
scas
movs
pop
sub
inc
iret
jp
lahf
loop
jge
dec
adc
sbb
mov
mov
rcr
fnstcw
pop
idiv
xchg
outs
fdivr
jnp
mov
xchg
or
test
pop
jl
xchg
gs
inc
adc
mov
(bad)
cld
(bad)
add
ins
inc
add
mov
pop
and
imul
jb
loope
mov
mov
and
pop
adc
and
call
fwait
xor
daa
push
push
jmp
in
retf
xchg
retf
test
lahf
pop
and
je
pop
adc
jne
movs
jno
push
iret
add
div
dec
movs
jmp
xor
cmp
jns
imul
dec
fisttp
ss
icebp
clc
push
fwait
dec
cmc
retf
xchg
outs
push
and
jmp
xor
or
sbb
aam
add
pop
fwait
sbb
dec
fild
xchg
cmps
push
aam
in
mov
out
shl
fnstsw
in
rol
inc
push
ins
cmp
jp
repnz
aas
sbb
sbb
mov
out
adc
dec
js
fcom
or
sar
and
xchg
adc
cmps
and
icebp
out
repnz
add
es
lods
aam
jae
dec
cli
inc
push
ret
and
mov
test
mov
bound
addr16
clc
cmps
sub
add
adc
or
stc
jecxz
lahf
mov
push
stos
pop
mov
push
jle
xor
jno
push
pop
shl
fnsave
sub
(bad)
xchg
popa
bound
ror
mov
sbb
repnz
sar
cmc
mov
xchg
retf
mov
(bad)
repnz
cmps
or
sub
addr16
xor
js
loope
push
rcl
test
ins
repnz
dec
mov
(bad)
and
test
jmp
xchg
je
mov
pop
mov
sbb
fdivr
xchg
fbld
es
cdq
inc
push
lock
inc
inc
cmp
lock
mov
mov
in
lea
mov
jmpw
pop
sti
adc
lods
fnstsw
mov
(bad)
mov
and
sub
stc
cmp
scas
aaa
jmp
imul
inc
lock
arpl
jecxz
or
imul
loope
pusha
add
cld
push
ss
addr16
iret
xor
push
sub
out
jne
loope
jns
mov
mov
shl
sub
pop
leave
mov
outs
repnz
dec
cmp
and
jl
mov
mov
test
das
lahf
mov
movs
bound
mov
or
mov
cmp
jnp
inc
outs
out
ss
clc
cmp
adc
jo
mul
into
lods
or
push
mov
cmp
std
fcomp
inc
jns
sti
jle
cli
outs
cmps
sbb
or
jle
ds
add
stos
inc
pop
cdq
loopne
sbb
ds
int3
cmp
movs
push
or
ins
pop
mov
mov
fwait
pop
cwde
into
push
rol
jb
lahf
iret
ins
aaa
jl
pop
xor
les
lods
pop
push
xor
mov
xor
xor
pop
cmps
mov
push
sahf
jmp
mov
xchg
jb
mov
push
pop
xor
hlt
push
mov
jge
pop
imul
adc
loopne
inc
repz
addr16
fldcw
(bad)
cmp
add
int
cli
outs
inc
and
fcom
cmp
test
push
div
sbb
adc
sahf
and
cld
sub
push
in
mov
out
jle
dec
fdivrp
int3
and
xor
out
push
imul
aam
dec
movs
xchg
popf
ucomiss
pusha
ds
loop
dec
pusha
test
mov
test
and
mov
push
pop
push
mov
cld
sub
imul
jp
in
jp
out
ds
push
cmp
in
sub
push
jno
sbb
cmp
ret
nop
call
push
dec
mov
rcr
nop
sbb
fstp
adc
push
(bad)
push
test
inc
mov
lds
or
bnd
jb
add
mov
movs
lahf
sbb
call
xor
retf
xchg
jmp
repz
cmp
jge
xor
jns
inc
gs
mov
pop
in
mov
rcl
pop
mov
call
les
mov
sti
test
and
jns
(bad)
iret
scas
movs
cmp
inc
and
push
add
adc
cmps
cmp
popa
mov
mov
imul
inc
pop
in
sbb
sbb
or
inc
cmc
cmp
popf
add
mov
inc
xchg
mov
out
xchg
aaa
jmp
jbe
int
sbb
pop
idiv
loop
xor
pop
mov
loop
inc
dec
xchg
cmp
cmps
add
inc
nop
dec
sbb
(bad)
xor
and
mov
in
xor
ss
push
ds
or
mov
mov
in
imul
loope
jmp
(bad)
aas
mov
cmps
call
mov
movs
adc
call
out
adc
in
add
mov
sahf
sbb
jg
stc
dec
outs
stos
push
push
sti
inc
inc
jp
and
or
inc
gs
xchg
loope
pop
gs
(bad)
iret
iret
dec
test
push
cmp
not
push
dec
mov
mov
loop
ret
test
pop
mov
and
arpl
dec
add
push
stc
cmp
shl
or
dec
sub
hlt
aad
(bad)
cdq
cmp
jg
sar
inc
inc
clc
mov
mov
pop
retf
outs
inc
pop
inc
inc
(bad)
popa
cmp
push
jb
das
bound
rcl
stos
das
ss
dec
or
adc
adc
rcr
fs
pusha
fcomip
mov
fadd
test
inc
sub
and
ss
adc
js
mov
dec
mov
call
outs
ret
shl
dec
and
push
(bad)
or
push
add
push
push
xor
push
sub
sbb
inc
fisub
and
jmp
dec
xor
xor
add
call
add
test
imul
sub
dec
mov
shl
xchg
ins
adc
ins
xchg
mov
mov
aaa
dec
hlt
cmp
fs
pop
sbb
loop
jp
mov
dec
(bad)
sbb
or
(bad)
in
mov
and
or
retf
sbb
push
aas
add
xor
mov
xchg
inc
push
out
int3
cmp
loope
jecxz
scas
jae
popa
fwait
mov
sub
wrmsr
mov
xchg
sub
adc
pop
mov
mov
xor
pushf
nop
mov
dec
sbb
fcmove
int3
push
aad
mov
jecxz
inc
jge
jmp
iret
(bad)
shl
aas
sub
xchg
add
inc
push
adc
adc
cmovg
mov
and
sti
mov
jo
jae
jmp
jecxz
pop
(bad)
into
add
imul
ret
or
cwde
scas
dec
sbb
(bad)
pop
dec
mov
rcr
iret
test
and
(bad)
sub
mov
sbb
sbb
cmp
retf
cmp
add
loop
push
or
aam
sub
in
xor
call
call
jmp
push
gs
mov
(bad)
fadd
aaa
shl
(bad)
and
push
les
jmp
xchg
test
jo
cmps
cmp
or
xchg
enter
out
sbb
(bad)
cli
stos
aaa
xlat
mov
fwait
out
mov
cli
xchg
sub
stos
cmp
dec
add
lds
or
in
pop
xchg
dec
in
movs
mov
lods
into
cli
leave
div
pop
jo
xchg
mov
jle
mov
ffreep
lahf
imul
in
or
data16
sbb
jnp
inc
test
mov
mov
adc
pop
push
in
add
xor
pushf
imul
xor
icebp
test
in
dec
imul
rol
pop
pop
mov
and
xchg
mov
jo
(bad)
mov
xchg
imul
scas
cmps
shl
push
test
in
inc
mov
repnz
cmp
enter
out
push
mov
sbb
(bad)
xlat
sar
push
fucom
test
jl
loope
or
cmps
in
repnz
scas
sub
call
rol
scas
fbstp
leave
out
into
mov
pop
movs
mov
lods
add
mov
ss
retf
jle
mov
popa
iret
addr16
and
int3
in
int
add
cmp
dec
push
mov
dec
arpl
sub
dec
loope
inc
jne
push
push
gs
loop
mov
in
out
sub
xor
ins
inc
stos
outs
pshufw
outs
(bad)
cdq
xlat
mov
xor
lods
xchg
and
jbe
cmp
dec
mov
or
mov
sub
push
sar
mov
dec
enter
ret
sbb
sub
and
aaa
into
test
xor
hlt
or
xor
mov
inc
addr16
pop
jbe
shl
sbb
or
mov
jbe
push
shr
adc
rcr
out
out
mov
xor
adc
(bad)
xor
or
lds
repz
pop
xchg
sbb
out
lahf
ja
cwde
imul
mov
fidiv
xor
aas
cmp
dec
xchg
stos
outs
ins
inc
jnp
fcom
dec
inc
data16
popa
adc
jo
inc
xchg
xor
mov
(bad)
clc
dec
loop
sar
and
jb
iret
call
inc
inc
mov
xchg
jl
dec
jmp
in
pop
es
jne
leave
dec
inc
adc
(bad)
fisub
jle
sub
rcl
add
in
cdq
sbb
pop
xor
jp
pop
xchg
sub
pusha
ja
adc
cs
inc
ins
out
jnp
nop
inc
ret
inc
aam
cmc
mov
mov
leave
adc
int
aad
lock
jl
push
dec
rcl
ss
cld
pop
xchg
jbe
push
out
int
sub
jg
inc
cmp
fnsave
test
or
xor
or
les
push
loop
jns
movs
sar
cli
scas
cmp
gs
popa
dec
sbb
cli
scas
mov
fstp
adc
or
xor
int3
data16
das
push
jle
out
or
fs
sub
dec
lea
ja
adc
clc
aaa
stos
or
sub
movs
jbe
out
add
xchg
dec
js
sbb
dec
cs
sahf
ds
mov
in
das
ins
loopne
sbb
xchg
fs
enter
ja
std
jae
mov
addr16
rcr
or
xlat
imul
mov
adc
in
or
mov
inc
(bad)
(bad)
aam
adc
iret
pusha
dec
das
ret
call
jmp
mov
call
fcomp
mov
cld
pop
aas
inc
cmp
cwde
inc
lea
test
add
sub
int
mov
sbb
xchg
or
pop
mov
or
jmp
jnp
inc
das
mov
lds
ror
push
mov
(bad)
test
mov
popa
xor
mov
dec
push
or
(bad)
mov
push
iret
iret
test
popf
add
loop
gs
pop
add
adc
(bad)
lods
jnp
adc
mov
pop
ss
nop
popa
jb
or
mov
neg
mov
pop
arpl
jns
jmp
cmp
sar
cmp
dec
cld
das
mov
adc
pop
hlt
inc
in
pop
ss
retf
lahf
sbb
les
not
out
gs
mov
adc
iret
cmc
pusha
jecxz
xor
or
ins
aam
sub
or
repz
clc
jo
and
int3
wbinvd
mov
or
lahf
mov
cmc
aas
ror
add
arpl
out
ds
or
(bad)
loopne
sub
stc
(bad)
mov
cmp
and
sbb
adc
pop
cmc
cld
rcl
cmp
into
jnp
jp
je
mov
out
mov
cld
mov
jle
scas
int3
pushf
mov
pushf
fistp
push
dec
out
pop
jge
push
lea
mov
xor
test
xor
xchg
call
ins
cwde
inc
mov
xor
stos
dec
cmps
jmp
test
push
pushf
and
jg
dec
outs
or
and
test
and
loopne
movs
out
retf
and
data16
dec
sbb
fisttp
popf
sub
or
shl
and
cli
and
and
xchg
add
inc
fwait
jge
sbb
div
in
lea
enter
or
sar
cli
sahf
into
jle
sub
jg
stos
and
mul
cmp
in
jae
cmp
adc
inc
pushf
mov
xlat
pop
ja
cli
and
fs
jle
mov
inc
xor
add
out
mov
inc
push
dec
sahf
ret
cld
xor
sar
lods
xor
pop
shr
cwde
xchg
iret
jae
lods
adc
sbb
ss
and
sbb
or
shl
cmps
rcr
(bad)
pop
pop
mov
cmp
in
jg
test
dec
push
sbb
ror
shl
(bad)
neg
dec
xchg
leave
imul
shl
pop
(bad)
repnz
add
pop
inc
dec
outs
xor
cmps
sbb
test
mov
mov
(bad)
fs
jecxz
jae
mov
mov
shr
pop
pop
enter
xor
call
scas
mov
js
out
xchg
dec
push
call
mov
add
mov
mov
add
(bad)
jmp
(bad)
cmp
ret
xor
sti
lds
xlat
leave
retf
es
out
pop
sub
mov
scas
adc
dec
sub
mov
add
push
inc
and
mov
mov
cwde
imul
lahf
mov
ret
stos
adc
xchg
add
or
cmp
xor
aad
xor
mov
test
imul
push
xor
ss
jbe
sub
or
lock
fistp
jne
push
sbb
movs
jb
mov
dec
stos
push
loope
ficomp
aam
fistp
mov
ja
push
int3
inc
xlat
sub
das
dec
stc
mov
add
add
push
mov
push
call
data16
mov
jge
add
ret
inc
add
shl
sahf
pop
fmul
push
inc
xchg
xchg
sub
inc
sbb
mov
and
pop
fidiv
jnp
jb
add
loopne
call
cmp
into
sub
mov
dec
mov
popf
jb
inc
pop
aas
lds
dec
call
es
(bad)
sbb
fldcw
and
xor
push
loope
inc
cmp
lock
enter
cdq
mov
adc
and
cdq
xor
loop
add
inc
mov
jg
xchg
pop
aas
cmp
out
pop
leave
sar
jg
push
ins
mov
jns
mov
cmp
not
xchg
mov
jmp
leave
xlat
std
ret
cmp
movs
cvtps2pi
je
cdq
sar
mov
ins
jb
mov
or
jnp
xchg
pop
pop
xor
xor
pop
inc
dec
pop
add
push
mov
aaa
std
xchg
adc
sub
cmc
sub
sahf
mov
mov
out
xchg
movs
mov
sub
jmp
out
mov
push
mov
in
jbe
out
aas
pop
fimul
jmp
ffree
push
push
ret
mov
gs
xchg
mov
xchg
es
push
xchg
sub
or
or
add
lods
mov
ret
sub
xchg
mov
icebp
mov
jle
sbb
jns
push
mov
adc
fistp
jmp
popf
aaa
pushf
enter
jno
add
xchg
ins
aam
jno
and
xchg
scas
pusha
push
enter
jns
sbb
sbb
adc
sbb
fwait
xchg
jmp
xchg
and
and
fist
repnz
cmps
daa
and
in
jne
or
retf
loopne
xlat
scas
fnstcw
cmp
and
add
inc
dec
or
idiv
jbe
sub
xchg
mov
pop
jmp
mov
enter
fisubr
loop
in
sar
pushf
mov
in
(bad)
jmp
mov
ja
sbb
mov
jle
fidivr
mul
bound
loope
mov
jbe
fnstcw
bound
and
repnz
aas
mov
push
lds
out
mov
mov
jns
fwait
bound
xchg
push
mov
and
mov
jns
inc
xchg
jo
or
jmp
dec
dec
xchg
std
aad
pusha
enter
clc
push
jno
rcr
fisttp
cmp
fbstp
inc
scas
test
sbb
add
in
out
ret
mov
shl
cdq
loope
shl
mov
jne
push
fild
jbe
cld
jmp
xchg
outs
jp
xchg
add
cmps
jmp
mov
xor
add
mov
pusha
mov
push
mov
add
adc
fidivr
cmp
cmp
pop
loope
adc
dec
stos
or
loope
pop
(bad)
in
cld
sbb
out
retf
aas
push
mov
mov
mov
ins
jmp
or
cwde
loop
mov
or
mov
enterw
shufps
push
jmp
cmps
jnp
jae
and
mov
pop
not
fs
xor
mov
push
fs
mov
mov
jp
xchg
mov
or
into
pusha
push
jnp
push
sbb
mov
push
mov
clc
fbstp
adc
xchg
xchg
push
stos
cmp
and
pop
ss
fs
stos
mov
repnz
cld
lahf
cs
mov
mov
xor
mov
icebp
mov
into
daa
frstor
or
or
pop
int
cli
dec
jge
add
daa
shl
adc
movntps
imul
test
pop
not
or
fdivr
sub
sbb
push
jmp
jecxz
mov
xor
stc
jb
mov
je
repz
cmp
dec
mov
jbe
and
ret
adc
xchg
sahf
js
sbb
cmp
movs
sub
xor
sbb
(bad)
fldenv
fbld
inc
mov
(bad)
cmps
bound
fimul
sbb
push
mov
repz
mov
bound
dec
inc
iret
mov
clc
fdivr
mov
push
(bad)
es
or
cmp
mov
rcr
rcl
jmp
pop
cmc
jp
fwait
inc
je
push
in
push
dec
adc
pop
mov
inc
sub
jo
(bad)
neg
mov
sbb
cmp
or
mov
and
in
ja
push
mov
sub
adc
or
jecxz
sbb
pop
out
and
(bad)
xor
cmp
add
in
aad
movs
aad
in
imul
dec
test
sbb
out
mov
cwde
(bad)
shl
inc
push
mov
dec
push
jmp
gs
shl
jb
sub
scas
pop
dec
adc
dec
into
mov
push
hlt
push
mov
jecxz
es
cli
iret
dec
jb
ficom
xchg
sbb
lock
push
cmps
dec
pop
addr16
in
mov
add
add
xchg
cdq
xor
mov
jmp
pop
lods
lea
mov
call
in
aam
ins
mov
mov
lods
mov
jle
addr16
cmps
mov
dec
xchg
(bad)
std
sub
fmul
cmp
movs
mov
cs
sbb
out
inc
mov
icebp
pop
cwde
sbb
sbb
push
loopne
jnp
cmc
mov
cmp
xchg
mov
and
mov
dec
or
adc
push
test
add
push
push
add
clc
jo
mov
push
(bad)
in
sub
mov
inc
adc
dec
sbb
daa
idiv
fidiv
out
fsubr
test
xor
mov
daa
pop
adc
xchg
aaa
aas
pop
test
movs
(bad)
jp
out
aam
outs
out
and
pusha
pop
ror
int
fidivr
data16
into
cmps
cld
loope
fs
mov
outs
mov
or
dec
test
in
(bad)
scas
sbb
(bad)
retf
jecxz
cmp
ins
cs
jmp
jo
dec
fisttp
add
sub
push
inc
aas
mov
add
jp
lods
pop
xor
out
dec
push
sbb
add
dec
dec
call
ret
gs
ror
cli
mov
imul
mov
mov
call
push
bound
int
data16
ins
shl
fsubr
and
mov
pop
jp
cmp
fcom
lods
aad
sub
pushf
fwait
sbb
sub
pop
call
mul
int
ins
sti
ficom
dec
ss
das
out
aad
loop
stos
pop
imul
add
adc
cmp
or
cdq
pusha
sti
gs
jle
scas
push
push
iret
pop
lds
xchg
xchg
call
jg
dec
xor
jae
pusha
iret
lock
jl
fstp
in
mov
jge
retf
sub
jle
xchg
add
add
(bad)
sub
stos
call
data16
adc
xor
mov
dec
call
dec
sbb
sbb
retf
loope
sbb
sub
rcr
cli
stos
arpl
cmp
jge
adc
outs
and
stos
cmc
ss
test
out
outs
pop
sub
fs
sbb
adc
xchg
gs
bound
push
pshufw
int3
out
aas
inc
ret
ja
repnz
movs
movs
jb
je
sbb
cli
(bad)
data16
and
jmp
pop
sub
adc
adc
vpshab
fnstcw
jns
push
iret
inc
dec
inc
xchg
test
mov
and
push
inc
mov
aas
or
iret
mov
cmps
rcr
sub
gs
in
push
mov
push
cmp
and
push
xchg
movs
shl
shl
adc
mov
call
ret
icebp
sub
mov
or
or
jmp
or
fmul
test
out
mov
loope
or
stos
fistp
mov
push
mov
inc
mov
ja
rol
fdiv
ins
(bad)
(bad)
and
inc
mov
out
sub
ja
cli
xlat
mov
jge
movs
push
aad
hlt
push
add
sub
jno
mov
jno
das
inc
xchg
outs
je
inc
jmp
fadd
movs
xchg
push
ficom
pushf
push
sub
aas
push
sbb
int3
out
xor
rol
data16
sbb
enter
fisubr
(bad)
imul
rcl
(bad)
out
mov
std
or
and
xchg
sahf
loopne
jle
xor
dec
rcl
mov
out
mov
mov
add
mov
dec
ret
and
fdivr
jmp
cmp
xchg
and
lock
mov
mov
mov
adc
sbb
xor
das
stos
sbb
mov
scas
dec
mov
xor
or
xor
push
in
mov
neg
mov
xchg
arpl
pop
loop
mov
call
mov
les
add
test
xlat
popa
add
into
xor
sub
pop
shr
clc
(bad)
push
lods
sti
xor
add
add
dec
mov
iret
fist
(bad)
(bad)
and
scas
popf
push
sub
and
mov
push
hlt
adc
xchg
cli
xchg
sub
xor
mov
xchg
(bad)
dec
test
xchg
jecxz
ret
ins
and
jl
sbb
pop
push
and
ins
shr
imul
or
cli
and
xchg
or
sbb
jl
xchg
xlat
mov
punpckhbw
xchg
mov
sbb
xor
jmp
sbb
jp
outs
mov
jecxz
mov
sub
imul
mov
aas
dec
adc
int
mov
push
xor
xchg
dec
enter
mov
cmp
call
out
cmps
loopne
pop
cli
cmp
ficom
adc
xchg
nop
xchg
gs
scas
int3
idiv
lods
sbb
(bad)
jecxz
jnp
cdq
and
cmp
retf
(bad)
mov
(bad)
rol
jmp
add
mov
leave
add
mov
jmp
bound
jno
(bad)
data16
dec
ret
or
fwait
adc
sub
lock
mov
mov
ds
cmp
push
psrld
adc
rcr
inc
jg
repnz
adc
jg
push
leave
sar
cmc
loope
pop
repz
mov
out
adc
and
or
jnp
add
outs
dec
cdq
rol
fstp
sahf
mov
popf
sbb
mov
xchg
jb
add
rol
(bad)
jb
cmps
cmps
cli
das
pop
cmp
sbb
(bad)
and
push
xor
push
inc
dec
mov
jnp
das
fidivr
xchg
pop
cmp
fild
inc
out
out
and
int
inc
(bad)
ins
jecxz
jmp
jmp
mov
ret
jp
mov
dec
dec
inc
pusha
cmps
sbb
(bad)
popf
stos
(bad)
push
cmp
push
call
sub
xor
cmp
loopne
(bad)
fsub
mov
jae
fdiv
mov
mov
sub
sbb
adc
retf
pop
dec
pop
out
jmp
sti
inc
dec
or
sub
push
fwait
test
popa
jne
pop
mov
vmovss
adc
movs
mov
mov
fsubr
xor
mov
jno
and
jo
das
jae
popf
push
mov
aas
adc
int
(bad)
adc
out
xchg
(bad)
and
stos
push
or
cli
mov
and
int
xchg
xlat
retf
imul
icebp
loope
cli
xlat
pop
sar
add
stc
mov
popa
ja
out
xchg
mov
xchg
dec
jecxz
mov
mov
push
jo
stc
les
ror
cs
fbld
fcomp
int3
push
sub
jecxz
add
movs
shl
push
jmp
pop
fistp
mov
rcl
movs
push
sub
sub
add
pop
push
sti
(bad)
xchg
retf
lods
dec
addr16
and
mov
data16
inc
jns
lds
xchg
add
fsub
pop
adc
movs
push
xor
sub
scas
mov
and
popa
ret
(bad)
dec
jmp
rcl
lea
div
ret
daa
hlt
mov
inc
aas
dec
mov
pusha
loop
imul
daa
ret
xchg
dec
or
or
imul
mov
mov
add
sub
fsubr
pop
jp
and
mov
jmp
int3
imul
jg
push
mov
or
jns
int
and
mov
mov
xchg
jne
int3
mov
add
pop
std
fucomi
xlat
and
popf
pop
push
(bad)
jge
pusha
and
cmp
push
jecxz
push
push
mul
dec
fnstcw
in
das
fs
in
mov
cmps
cdq
cmp
adc
cmp
pusha
jb
sub
cmp
arpl
lock
sub
mov
or
mov
enter
je
push
lods
mov
push
test
adc
fisubr
pop
lock
jg
jl
mov
add
ins
mov
inc
test
movs
test
jbe
sbb
mov
adc
loope
pop
jle
sub
imul
cmps
inc
ret
mov
mov
loopne
add
int3
xchg
cdq
xchg
mov
add
cmp
jg
fwait
test
enter
rcr
enter
rcr
add
repz
mov
das
push
cmp
mov
jae
jle
adc
sub
movs
adc
mov
imul
adc
mov
inc
inc
mov
ja
pop
ds
xchg
stos
daa
sub
aam
sbb
mov
mov
call
(bad)
sbb
inc
or
mov
loop
inc
and
jmp
outs
cmpxchg
outs
cmp
adc
mov
dec
aad
sbb
inc
cli
lods
adc
add
mov
pop
cmp
fwait
(bad)
popa
cwde
mov
pop
mov
ret
out
iret
mov
popf
out
pop
xor
int
push
mov
cli
lock
mov
xor
into
and
in
int3
(bad)
mov
sub
inc
sbb
cmp
(bad)
jne
push
(bad)
jmp
xchg
fidivr
mov
fs
les
pop
int3
cmp
movs
lds
sbb
add
jmp
xor
je
xchg
jae
mov
fimul
mov
outs
stos
movs
add
or
sbb
xchg
imul
mov
dec
int
gs
fsub
test
dec
cmp
cmp
or
loop
adc
xchg
fnsave
pop
es
mov
dec
shr
jne
movs
add
loop
push
jge
les
sbb
es
into
sub
adc
pop
push
test
loope
xlat
inc
daa
stc
int3
test
lods
adc
xor
add
xchg
loopne
stos
nop
mov
fisttp
retf
pop
gs
or
jbe
cmp
lds
sbb
push
jp
sub
aaa
dec
push
je
add
mov
cmps
and
xor
in
outs
xor
jp
pop
mov
or
or
pop
sub
inc
ja
inc
or
push
sub
and
jae
aam
mov
xor
aas
dec
repnz
into
daa
add
cdq
je
out
xchg
xor
in
and
(bad)
mov
dec
and
cmc
movs
jmp
add
push
lds
jnp
or
mov
pop
jle
and
and
pop
test
lds
add
push
and
(bad)
in
mov
inc
cmp
push
adc
ret
xlat
scas
(bad)
push
and
int
out
in
and
push
iret
int
or
mov
sbb
pop
lea
push
test
push
mov
leave
(bad)
aas
aaa
push
not
mov
adc
jb
or
mov
ret
shl
jnp
mov
fild
pop
adc
mov
mov
xor
cmp
iret
rcr
out
jnp
pop
fdivr
enter
pop
sub
xor
or
out
inc
jge
rol
sahf
lods
lods
or
cmp
bound
pop
cmc
push
mov
push
inc
rol
push
add
xchg
iret
int
aaa
or
dec
push
sub
into
xchg
enter
cmp
mov
jecxz
fsub
loopne
dec
push
call
pop
fbld
jge
pop
fs
push
adc
mov
xor
daa
(bad)
jb
push
sbb
imul
out
mov
sub
fldcw
test
adc
call
inc
push
mov
jae
inc
js
dec
into
xchg
loopne
mov
add
in
mov
pop
sbb
cmp
inc
mov
std
mov
fcomp
ficom
adc
push
inc
mov
xchg
push
aam
xchg
cmps
cmp
test
push
add
shl
cmps
dec
jbe
add
cmps
(bad)
jp
addr16
add
xchg
push
xchg
sahf
xchg
inc
cmps
jg
ins
mov
jo
cmc
cmc
fdivp
xor
jno
jbe
out
sbb
mov
pop
cwde
rol
inc
sub
cmp
sub
sub
xchg
outs
in
mov
in
dec
jle
mov
es
out
adc
into
jle
sbb
pop
or
rol
add
imul
pop
bound
sahf
cmp
int3
mov
xor
mov
cmp
cs
and
test
jl
pusha
test
jecxz
ds
push
lock
sub
ret
push
or
jo
stos
mov
fwait
out
add
(bad)
popa
xchg
int3
clc
sbb
push
fs
int
add
popf
dec
fsubp
movs
imul
popf
pop
ins
add
cmp
iret
lahf
cmp
sahf
xchg
adc
xchg
dec
sahf
mov
es
(bad)
adc
or
mov
mov
aad
cmp
std
push
test
test
jmp
sbb
jmp
pushf
pusha
mov
adc
xor
jne
and
sbb
cmp
ret
iret
add
mov
xchg
mov
loope
adc
xchg
add
ss
xchg
jb
retf
fnstcw
mov
fldenv
sbb
daa
dec
jno
retf
ins
or
dec
adc
into
jge
sub
pop
cmp
clc
int3
sbb
fisubr
jne
jmp
pop
xchg
mov
idiv
sbb
(bad)
retf
cmp
mov
jmp
push
pop
pop
test
xchg
ficomp
jns
or
outs
push
cmp
push
push
call
das
es
jp
push
cmp
(bad)
inc
add
mov
test
jecxz
inc
mov
mov
sar
cdq
pusha
push
mov
xlat
pop
jnp
mov
pop
pop
in
fsub
test
sub
push
(bad)
aas
mov
add
movs
pusha
fidivr
imul
add
punpckhbw
and
std
adc
sbb
jae
and
and
push
cli
aas
mov
add
xchg
aad
jb
pushf
pop
lods
cmp
loop
int
sub
cmps
(bad)
cmp
les
or
pop
lea
inc
out
lods
jo
sbb
mov
in
setp
loope
shr
int
out
add
or
push
jg
and
inc
fcomp
add
jl
icebp
mov
pop
cmp
xor
push
cld
add
repz
inc
gs
pop
mov
cmp
(bad)
(bad)
ss
loopne
adc
sbb
fst
popa
(bad)
not
sub
fld
push
cmp
xchg
lods
into
cmp
cmp
fcmovnbe
into
mov
repnz
mov
test
hlt
inc
sbb
inc
mov
pop
jmp
and
push
add
dec
std
in
sub
inc
bound
inc
xchg
sub
(bad)
popf
mov
pushf
mov
sbb
int
aam
xchg
inc
xchg
test
fisubr
movs
dec
sbb
test
dec
pop
inc
inc
pop
into
in
fstp
mov
pusha
pop
rcl
fdivr
mov
inc
mov
dec
pop
xor
mov
scas
push
xor
xor
dec
add
fxch
add
push
push
(bad)
fstp
dec
mov
scas
daa
push
push
add
outs
dec
push
ret
shl
jmp
stos
mov
dec
cwde
cdq
ret
scas
mov
out
sbb
sub
data16
jno
or
xchg
test
fnstcw
mov
ret
sub
jmp
(bad)
fwait
test
fsub
adc
pop
xchg
jno
mov
cmp
fmul
lahf
pop
jne
adc
add
(bad)
xchg
sub
cmc
fmul
cmp
sahf
pop
jge
push
ss
arpl
fild
or
push
dec
xchg
mov
pop
mov
je
mov
loopne
dec
inc
les
ret
xchg
and
(bad)
mov
jle
inc
dec
imul
mov
pop
jge
iret
mov
mov
outs
mov
dec
retf
test
dec
in
ror
into
xchg
pop
loop
xchg
adc
cmp
popa
jno
dec
jbe
xchg
adc
push
dec
imul
inc
mov
pushf
pushf
iret
add
mov
nop
and
cli
leave
mov
mov
xchg
ins
push
inc
mov
mov
(bad)
adc
add
sar
mov
dec
sar
sti
(bad)
(bad)
popf
push
jae
adc
ins
(bad)
adc
ins
jecxz
mov
loopne
or
xor
mov
dec
ins
fs
pop
outs
and
sub
popa
dec
into
mov
aam
pusha
out
and
popf
or
call
add
mov
mov
dec
call
lods
xlat
ja
xor
loopne
lds
int3
or
sub
stc
shl
retf
pop
movs
pop
mov
sbb
into
rol
jecxz
hlt
std
lea
mov
jp
punpckhwd
lods
js
mov
xor
push
out
mov
retf
mov
cld
adc
dec
xchg
rol
xchg
popf
movs
popfw
xchg
push
xchg
sub
pop
mov
lea
and
sub
mov
pop
mov
movs
ins
push
sbb
push
scas
js
stc
mov
jmp
xor
mov
mov
sub
jmp
mov
push
and
ds
mov
cwde
(bad)
xlat
dec
or
sahf
movs
push
sti
sub
jne
sub
das
ret
imul
dec
imul
test
and
jp
push
sub
push
lods
out
dec
jg
jb
sbb
pop
mov
scas
inc
jmp
add
icebp
popa
push
das
and
xor
jns
cmp
sub
xchg
mov
jmp
sbb
jnp
je
sar
and
cdq
fmul
aaa
cmps
and
push
sbb
mov
xchg
aam
ja
pop
dec
loopne
sub
add
jmp
xchg
stos
xchg
xor
mov
jo
jmp
daa
popa
rcr
sbb
adc
sbb
popa
jnp
pushf
in
dec
es
and
mov
pop
cmps
sbb
pop
ret
cmp
xchg
lea
cmp
mov
movs
sub
cli
lea
cmps
xchg
fisubr
mov
adc
jo
push
call
xor
inc
test
mov
cmp
lock
xchg
sti
ss
in
enter
ret
(bad)
daa
cmp
in
pop
repnz
add
dec
sbb
pop
out
jmp
push
repnz
aas
ja
sub
dec
jns
retf
sub
icebp
dec
ja
retf
mov
or
cmp
in
cmps
popa
sbb
xor
cmc
pop
ror
lds
iret
imul
xor
adc
nop
outs
add
sub
add
inc
aad
pop
pop
(bad)
push
(bad)
call
jmp
inc
mov
jmp
popa
aas
dec
es
mov
(bad)
std
jge
xchg
sub
sub
ss
or
pop
or
pop
(bad)
fisttp
das
jecxz
ret
mov
call
add
sub
daa
adc
inc
jg
jge
cmp
out
ror
cmps
test
(bad)
in
cmps
push
fnstcw
adc
nop
lahf
or
lea
shl
pop
stc
std
mov
xor
mov
cmp
cmp
or
xor
mov
cmp
rol
ins
fucomip
(bad)
retf
js
(bad)
stos
dec
ins
mov
or
xchg
aam
cmps
cmp
mov
xor
test
nop
leave
push
into
lods
add
pop
call
mov
fst
fmul
mov
xchg
icebp
scas
mov
pushf
xchg
jae
aam
sub
or
mov
push
xor
loope
sbb
outs
adc
mov
(bad)
cld
out
fsub
sub
jecxz
sbb
popa
retf
test
(bad)
(bad)
mov
(bad)
ret
outs
bound
jbe
mov
push
xor
mov
jmp
cwde
mov
jne
ret
cmc
call
paddsb
lea
test
test
mov
push
(bad)
sahf
test
dec
div
push
pushf
dec
ret
out
adc
dec
int3
scas
stc
fnstsw
stos
loopne
mov
lock
or
add
dec
(bad)
stos
add
jle
adc
sbb
es
xchg
ss
dec
sbb
pop
inc
add
cmps
jmp
cli
xchg
sbb
xchg
xor
add
out
lock
loope
pop
inc
inc
adc
sahf
xchg
cmp
adc
out
stos
shl
jg
retf
test
pushf
iretw
jnp
daa
scas
std
popa
push
add
cdq
retf
push
sar
lock
dec
cmp
push
fimul
xchg
out
fst
pusha
mov
(bad)
cmp
int3
mov
aaa
jb
cmp
daa
cmp
bound
xchg
ja
jae
gs
std
(bad)
jle
pop
and
mov
lods
loope
inc
das
test
in
jmp
push
xchg
test
cmp
ret
or
ret
ss
or
inc
sbb
push
pop
stos
imul
cmps
pop
std
aaa
ds
ins
sub
or
inc
pusha
sub
ret
sar
cmp
movs
lock
jns
push
jl
cld
jg
add
mov
xor
or
sub
pop
stc
mov
cwde
jb
xor
add
and
jmp
push
and
adc
sbb
jmp
adc
push
fadd
stc
jp
fld
xor
int3
push
cwde
shl
push
xor
in
sahf
fild
add
dec
iret
dec
in
icebp
movs
mov
xlat
mov
sar
jl
xor
mov
imul
stos
lock
ss
lods
cmp
cmp
sbb
and
fsubr
mov
lea
and
add
cmps
sub
fs
test
(bad)
sub
adc
xchg
mov
nop
retf
inc
bound
outs
(bad)
dec
cmp
and
mov
idiv
cld
outs
or
out
inc
(bad)
jno
adc
mov
iret
mov
ror
in
popa
xchg
push
ret
pop
cmp
xchg
mov
sbb
clc
sbb
jl
cmc
retf
scas
mov
cmp
xchg
jae
push
(bad)
push
or
xchg
mov
mov
pop
setp
and
rol
sbb
dec
add
ffree
in
lock
pop
sbb
sub
xor
adc
clc
add
sbb
cmps
sbb
sbb
mov
test
bound
call
jl
push
push
push
pop
in
cmp
(bad)
adc
lahf
push
outs
ror
adc
clc
aad
pop
mov
add
pop
adc
pop
cmp
scas
inc
adc
nop
or
mov
ret
pop
in
inc
lods
or
and
arpl
loope
dec
sub
xor
mov
cmps
test
aad
ret
mov
mov
ds
mov
jp
mov
add
repnz
shl
cmp
pop
hlt
arpl
cmp
xor
add
sbb
cmps
neg
xchg
push
in
fwait
enter
dec
dec
add
push
sahf
rol
cmp
loop
mov
mov
sbb
gs
outs
jecxz
push
clc
mov
ds
imul
enter
jmp
mov
clc
jno
nop
movsx
mov
mov
cli
(bad)
push
rcl
retf
bnd
fdivr
xor
out
mov
sub
(bad)
leave
adc
mov
mov
and
adc
stos
cmc
inc
je
(bad)
movs
xor
push
(bad)
out
fld
retf
sbb
cmp
mov
jno
idiv
push
sbb
rcl
cld
lods
push
(bad)
mov
iret
pop
scas
nop
shl
mov
xor
adc
imul
push
cmp
jbe
mov
fstp
cwde
mov
cwde
xor
xor
jb
jp
dec
retf
das
jle
mov
movs
mov
outs
lock
out
add
jle
mov
mov
dec
pop
sub
push
shl
jle
xor
mov
add
jge
shr
sub
mov
mov
pop
dec
sbb
jle
aaa
jbe
mov
fisttp
ss
cmps
retf
lds
aad
jmp
gs
xor
fdivr
mov
inc
sbb
or
ror
mov
sub
or
jg
cmps
and
inc
fist
mov
test
inc
ds
cmp
jecxz
fisttp
sbb
cmp
mov
inc
and
push
jb
cmpxchg
jae
and
pop
ins
sub
and
fsub
in
jl
push
ins
or
mov
mov
mov
xchg
sbb
fcmovnb
test
lods
and
jl
outs
pop
jb
cmp
xlat
adc
pop
xor
movs
xchg
retf
xchg
test
std
push
daa
push
jns
jp
shl
xchg
xor
repnz
xor
and
les
and
or
add
ins
test
jecxz
mov
jmp
pop
fiadd
loop
mov
repz
sbb
lea
loopne
call
into
imul
and
stos
xchg
adc
lds
and
dec
inc
add
shl
xchg
dec
aad
out
cmps
pop
sub
pop
inc
xor
call
inc
data16
sar
sub
jmp
lods
sub
sub
dec
ja
shr
xchg
jl
or
gs
adc
jge
dec
jo
sub
add
popa
mov
adc
(bad)
push
xor
mov
xchg
xchg
out
fcomp
inc
inc
jo
xor
pop
rcl
sbb
fucom
ret
das
repnz
push
out
dec
movs
cwde
sti
sub
leave
repnz
ins
sahf
test
ds
sti
push
in
sbb
js
(bad)
daa
int3
or
out
fwait
push
push
retf
jp
test
fs
sar
mov
inc
popa
xchg
xor
or
adc
movs
aaa
cs
outs
inc
push
add
jecxz
pop
pop
sub
data16
ins
jnp
(bad)
xor
xor
in
sub
popa
out
pop
pop
mov
xchg
ss
fcomi
mov
bound
xchg
int3
xor
pop
jb
les
xchg
jae
lahf
in
mov
push
add
rol
arpl
add
dec
(bad)
pop
scas
mov
add
add
mov
xor
outs
test
push
cmc
cli
push
in
push
fwait
jg
dec
shl
mov
jo
or
fsub
and
dec
fisttp
cdq
jmp
ret
mov
cmc
push
mul
hlt
sbb
xor
pop
fld
(bad)
fldpi
mov
jmp
clc
adc
jae
outs
adc
jle
imul
xor
jmp
movs
adc
jno
repnz
xlat
inc
ins
nop
dec
dec
imul
cmp
repnz
and
retf
data16
mov
das
and
mov
cmp
jns
inc
jmp
mov
cwde
bound
out
cmp
hlt
int
movs
or
xor
adc
mov
daa
scas
jle
sub
cmp
jo
pop
and
sar
add
mov
fmul
aad
scas
cmps
xor
popf
sbb
cmps
scas
fisubr
push
movs
push
test
inc
mov
jmp
mov
xlat
out
clc
imul
gs
mov
iret
mov
push
dec
adc
and
sti
test
push
xchg
pop
mov
test
mov
sbb
and
cmp
sbb
fldcw
xchg
dec
jp
mov
gs
cli
fcmovnu
(bad)
jecxz
fnstsw
js
(bad)
int
sub
loop
call
jge
ins
jno
mov
sbb
lahf
data16
vshufps
or
push
inc
push
rol
jne
mov
adc
and
add
mov
mov
clc
aad
mov
push
int3
or
fbstp
xor
mov
pop
pushf
movs
cmps
mov
jno
out
loope
or
xor
cmp
fistp
add
outs
cmps
not
lods
pushf
mov
icebp
mov
jno
(bad)
adc
push
cmp
cmp
sbb
loope
(bad)
mov
jge
mov
jp
sbb
iret
das
mov
xchg
push
loopne
cmp
js
cmp
mov
push
inc
mov
dec
movs
ss
cmp
imul
pop
mov
add
jp
movs
ror
(bad)
jmp
enter
scas
xchg
mov
in
retf
xor
repnz
(bad)
push
mov
cmps
ds
mov
jb
xchg
mov
adc
sbb
jns
int3
and
(bad)
ins
inc
mov
and
push
jmp
cmps
cmp
adc
and
jbe
mov
clc
push
push
repnz
daa
or
sbb
sub
sbb
dec
push
daa
xchg
mul
enter
mov
movs
call
push
adc
sbb
popf
mov
dec
cmc
aam
cmp
dec
push
stc
retf
add
sbb
push
sar
rol
jbe
add
sbb
test
add
imul
(bad)
repnz
sbb
cmps
in
mov
(bad)
fs
jae
dec
jbe
adc
jle
add
push
fnstsw
daa
lock
mov
xchg
sub
push
call
popa
sub
push
hlt
(bad)
cmp
das
mov
xchg
fcomp
inc
sbb
rcl
sbb
add
jp
les
fisttp
out
push
dec
into
jmp
jmp
imul
mov
test
sub
push
in
jp
mov
data16
fsubr
test
adc
in
cli
mov
pop
mov
int3
out
cmp
not
pop
and
outs
jle
sbb
xchg
fdiv
mov
jb
dec
xchg
leave
je
mov
adc
mov
test
cmps
jmp
scas
rcl
sar
test
ss
adc
inc
xchg
rcr
push
or
xchg
sbb
mov
dec
sbb
jge
mov
fidiv
mov
cmps
out
and
lods
stc
je
add
setns
neg
mov
pushf
inc
or
xor
daa
mov
cmc
adc
sbb
xchg
sub
retf
in
bound
mov
cmps
(bad)
repnz
pop
mov
addr16
adc
add
(bad)
jle
pop
cld
jle
outs
mov
adc
and
lea
idiv
popa
cli
dec
test
bound
movs
ret
dec
out
retf
mov
popf
adc
mov
call
cs
push
rol
sub
imul
push
xchg
and
and
out
pop
neg
inc
sub
jbe
lods
mov
cmp
jns
adc
loop
popf
push
aam
retf
in
aam
cs
inc
dec
psubusw
sbb
xchg
xchg
jnp
mov
cs
mulps
add
jl
adc
push
sbb
mov
inc
out
and
mov
and
call
retf
es
inc
inc
xlat
(bad)
jb
lods
xchg
(bad)
ret
inc
(bad)
fdivr
mov
in
(bad)
into
ins
pop
xchg
(bad)
sub
popf
aas
or
fst
inc
pushf
add
add
lods
dec
mov
sahf
inc
lock
push
imul
push
pop
mov
push
xor
dec
mov
adc
pop
add
aaa
push
es
in
movs
xchg
(bad)
cmps
push
mov
adc
jmp
shl
dec
out
test
pushf
adc
sub
cmp
jmp
shl
dec
dec
pushf
out
rsqrtps
in
popf
add
outs
arpl
arpl
or
test
pop
sbb
pop
pop
push
push
adc
or
aad
aad
in
fucomip
sub
and
movs
adc
js
or
mov
in
in
aas
push
sbb
cwde
stos
xor
lea
mov
lock
test
addr16
in
jg
ret
stos
jl
adc
retf
fsubr
lods
cli
cmp
test
mov
fsub
sub
jmp
cmps
pop
iret
xchg
(bad)
lock
(bad)
or
in
loopne
sub
outs
mov
or
jle
xchg
test
ins
jge
mov
mov
and
imul
cld
cmc
in
cmp
loop
and
inc
add
xchg
pop
retf
and
inc
mov
repz
sub
enter
and
dec
dec
pop
sti
fisubr
test
or
loop
(bad)
aam
sbb
lods
and
and
inc
add
icebp
or
retf
sub
(bad)
in
not
mov
cmp
stc
arpl
gs
push
into
outs
ss
jbe
lahf
mov
mov
push
xchg
fisub
cmps
pop
pop
out
cmc
cli
mov
fistp
mov
xchg
dec
daa
aas
out
cmps
icebp
ds
clc
push
ins
leave
mov
setae
cmp
push
jbe
xchg
push
pop
sub
pusha
inc
xor
mov
inc
cmp
(bad)
jmp
fbstp
fisttp
repz
nop
stos
push
push
lahf
mov
push
push
sbb
mov
xor
pusha
push
and
adc
mov
xchg
dec
out
dec
mov
cmps
loope
xchg
mov
xor
fist
cmp
mov
popa
xlat
cmp
add
jg
pusha
push
jmp
movs
dec
fwait
sub
lods
adc
pusha
div
xor
sbb
in
inc
jmp
cdq
mov
adc
fs
xor
sbb
xor
and
test
addr16
jecxz
cmp
sbb
xchg
(bad)
mov
enter
adc
test
sub
out
mov
stos
push
jae
scas
xchg
(bad)
retf
test
jno
stos
clc
adc
imul
and
push
loopne
adc
mov
push
ror
push
loop
mov
push
ret
push
jmp
test
pop
dec
gs
dec
push
sub
mov
out
sbb
icebp
dec
inc
shr
std
ror
push
repnz
xchg
lods
adc
pop
inc
sbb
jmp
xchg
push
fs
sbb
adc
adc
mov
js
test
mov
aad
repz
pop
jns
push
adc
ins
or
push
inc
scas
or
xor
(bad)
mov
shl
jle
inc
movs
out
out
dec
movs
xor
ret
sbb
in
sbb
mov
jno
daa
mov
ret
inc
xor
ss
add
push
fldenv
adc
sbb
cdq
pop
mov
cmps
mov
cmp
dec
sbb
js
int3
adc
pop
add
sbb
sub
test
mov
inc
fmulp
retf
xor
jne
push
sub
mov
ror
(bad)
and
xchg
daa
fwait
xchg
ss
pop
mov
mov
test
pop
mov
pop
(bad)
mov
pop
outs
push
daa
je
sub
ret
mov
push
fnstsw
cmp
cmps
dec
fimul
sti
jp
out
into
ret
push
lods
push
neg
ins
shl
das
data16
outs
mov
push
push
out
xchg
sub
add
xchg
cmp
mov
push
sar
cmp
jnp
movs
jno
mov
xchg
or
sahf
push
fcmovnb
aas
xor
fistp
sub
leave
scas
sub
xor
adc
push
outs
and
sub
inc
arpl
pusha
mov
jae
pop
shl
je
push
pop
cmps
lea
push
wbinvd
lods
jbe
and
daa
push
xchg
xchg
(bad)
out
xor
popa
or
adc
sbb
push
imul
pop
cmps
retf
and
shl
jbe
(bad)
cmps
div
mov
and
mov
sub
and
jecxz
and
xor
pop
cwd
inc
jbe
push
add
fs
out
or
or
int
pop
scas
nop
jmp
xchg
push
sub
ficom
or
push
xor
xor
sbb
arpl
jmp
dec
sub
cdq
mov
gs
jmp
mul
sub
ds
mov
dec
sbb
sub
fidiv
fmul
(bad)
cwde
jnp
xchg
and
mov
ds
xchg
lods
sbb
mov
das
jge
cmps
mov
cmovo
mov
mov
and
les
jne
xlat
jne
mov
inc
gs
pop
mov
(bad)
call
(bad)
call
push
mov
loopne
retf
or
xchg
mov
mov
arpl
mov
add
and
cwde
or
jo
popa
sub
mov
or
mov
cmps
push
mov
out
mov
jecxz
xchg
test
retf
adc
jo
sbb
popf
popf
shr
jmp
or
repz
push
cmps
inc
xchg
nop
es
cwde
inc
icebp
fdivr
mov
or
and
es
push
lds
addr16
cmps
jbe
xchg
push
adc
idiv
cmp
popa
ins
push
jmp
bound
outs
mov
adc
push
mov
mov
les
aaa
push
xor
and
cwde
(bad)
fisttp
ds
loopne
loopne
pop
daa
shr
inc
out
jae
and
xor
mov
inc
sub
adc
xchg
push
jb
mov
mov
cmps
pop
ret
mov
cmp
idiv
aas
pop
enter
pushf
add
jne
mov
pushf
cdq
mov
fstp
inc
sbb
stos
inc
enter
cmp
aaa
mov
inc
sbb
mov
cwde
cmp
jb
sahf
and
mov
xor
movs
adc
jae
test
adc
mov
mov
outs
ret
dec
and
cmp
mov
inc
fidiv
aas
push
push
outs
loop
nop
or
and
mov
add
mov
add
in
mov
jae
in
and
arpl
sub
stos
inc
es
loope
inc
pop
mov
mov
mov
push
imul
sti
cmp
push
or
nop
jae
jns
in
mov
sbb
mov
in
adc
rcr
aam
mov
je
scas
add
jb
iret
dec
xchg
mov
mov
jno
or
repz
aaa
inc
stos
les
pop
add
sbb
inc
mov
in
jbe
cmps
fisub
scas
cmp
repnz
sub
out
jbe
mov
mov
sub
inc
pushf
sbb
xlat
mov
push
in
les
rcr
adc
mul
in
mov
push
loope
add
xor
add
(bad)
cmp
inc
ret
inc
lds
bswap
cmp
rol
into
xchg
fwait
xchg
dec
push
ror
inc
cs
inc
mov
xor
jmp
jnp
cs
xor
das
mov
jbe
adc
int
jge
das
mov
aad
sub
sub
fistp
in
in
cmp
jp
cmp
popa
lods
sub
sub
es
push
loope
dec
adc
jmp
add
or
popf
fnstsw
loope
dec
push
sbb
pop
xor
bound
jmp
sbb
dec
fisub
enter
cmp
in
sub
ins
jae
adc
div
fldenv
cs
hlt
sub
mov
push
jle
rcr
or
(bad)
pusha
pop
jmp
pop
push
dec
in
leave
mov
or
lods
sbb
inc
lea
sub
cmp
sub
sub
popa
addr16
retf
scas
movs
inc
out
outs
sahf
xlat
add
mov
push
inc
ret
ins
jns
inc
jg
mov
(bad)
jecxz
mov
(bad)
aas
push
outs
stc
aad
or
test
xor
pop
aam
pop
loope
xchg
push
sbb
leave
adc
xchg
jge
mov
mov
in
rcr
cmp
push
pop
fld
inc
jne
cmp
outs
xchg
dec
or
ror
and
add
cli
pop
stc
mov
repz
sub
xor
jo
stos
adc
addr16
nop
cmc
mov
mov
in
scas
fisttp
js
cmp
dec
jge
jl
push
jne
rcr
xchg
arpl
std
mov
sbb
add
jge
fld
dec
mov
inc
cmp
mov
sub
sbb
aas
mov
push
xor
enter
sub
rcl
jns
in
dec
add
mov
cmp
movs
or
cmp
scas
stc
hlt
cld
ret
and
mov
adc
repnz
add
test
icebp
push
and
sub
pop
pusha
or
xlat
mov
mov
stos
out
ds
lock
pop
mov
sbb
sbb
test
push
mov
sub
bound
xor
stc
cmp
xor
mov
cmp
and
ins
sti
imul
push
xchg
dec
retf
repnz
lahf
or
call
(bad)
push
pop
mov
das
mov
cmps
mov
push
in
leavew
in
pop
cmp
sub
sbb
dec
pop
mov
cmp
inc
push
popf
pusha
jle
sub
cmp
loop
fmul
xor
push
pop
or
jecxz
jno
sub
xchg
push
xchg
ss
addr16
jmp
loopne
enter
or
xchg
aam
adc
cmp
jo
pusha
mov
xor
sbb
hlt
pop
and
xor
lahf
xlat
mov
and
push
test
cmp
enter
xlat
and
mov
pop
or
ss
and
mov
and
imul
aas
imul
push
lahf
icebp
inc
std
xchg
in
push
imul
popf
fisttp
xor
lahf
inc
jno
(bad)
dec
aas
fs
test
dec
ins
dec
pop
mov
xor
pop
sbb
jg
mov
dec
or
jmp
into
cmc
mov
test
es
inc
outs
cdq
rcl
push
dec
aad
mov
(bad)
mov
pop
adc
mov
and
and
retf
loopne
mov
je
test
lods
inc
push
add
fwait
xchg
and
cwde
je
mov
dec
jecxz
fldenv
mov
out
sbb
dec
and
arpl
inc
aaa
pop
sar
lods
cmp
mov
iret
fcom
lea
enter
je
jge
hlt
popf
mov
repnz
leave
pushf
pop
inc
or
push
retf
repz
xor
test
dec
sub
inc
fcomp
inc
imul
(bad)
mov
mov
mov
mov
sahf
mov
sahf
(bad)
ficom
pop
in
xchg
xchg
push
pop
fnstsw
xchg
xor
add
ja
jp
fwait
test
pop
mov
push
ja
lea
leave
mov
and
sbb
sti
int3
stc
dec
shr
shl
jae
mov
and
or
repnz
mov
xchg
adc
fidivr
xor
ds
call
js
(bad)
mov
mov
cmp
cld
xchg
nop
add
sti
xor
rcl
inc
jg
mov
inc
pop
std
sar
lock
rcr
xchg
syscall
leave
pop
push
adc
mov
xchg
data16
imul
or
outs
shl
ret
cld
data16
fsub
xchg
xchg
cmc
jo
push
or
mov
dec
aas
cmp
xor
popf
mov
sbb
out
push
jae
mov
mov
pop
push
push
jo
fs
test
xor
das
lea
lahf
call
add
add
(bad)
and
mov
mov
out
outs
lds
add
add
xchg
scas
dec
mov
sub
mov
daa
shl
das
mov
pop
inc
repz
inc
mov
aam
sub
mov
xchg
push
test
jmp
mov
lods
mov
pop
imul
ja
adc
adc
stc
lods
sbb
cmp
adc
and
xor
mov
pop
sbb
loop
stc
inc
or
mov
inc
mov
or
and
push
and
(bad)
push
data16
mov
adc
xor
mov
xor
lods
lea
(bad)
out
mov
inc
mov
sub
cmp
add
adc
mov
ret
stos
jecxz
pop
and
fwait
inc
cli
les
jnp
cmps
fisub
imul
test
push
out
jmp
cwde
add
jb
aaa
mov
sbb
jnp
pop
(bad)
scas
dec
leave
add
inc
cli
mov
sub
mov
aad
iret
hlt
xchg
push
cmps
sbb
sub
(bad)
mov
stos
jle
inc
push
add
addr16
outs
xor
daa
retf
leave
lea
outs
ins
adc
es
ffree
outs
or
mov
outs
push
mov
jmp
ret
ins
out
dec
sub
fimul
ret
loop
call
in
je
popa
mov
push
dec
sbb
push
jge
pop
and
mov
jecxz
repz
push
repnz
push
pop
(bad)
(bad)
les
sbb
pop
mov
jmp
ins
das
in
int3
movs
mov
(bad)
jg
ins
jb
and
mov
pop
cld
daa
and
out
aaa
pushf
xlat
jle
enter
xchg
push
stos
jg
cmps
and
jg
cmp
cwde
std
aam
and
idiv
fdiv
std
pushf
sbb
cmc
mov
push
add
sbb
cld
and
lds
mov
(bad)
aad
dec
xor
cmp
scas
xchg
ins
push
mov
arpl
lock
mov
jae
pop
jle
ja
mov
pop
jno
je
sti
add
imul
jge
fist
fld
sub
adc
leave
std
jno
je
cld
fdivp
or
xor
mov
es
test
mov
stos
shl
je
js
cmps
inc
enter
push
(bad)
mov
adc
mov
icebp
xor
scas
mov
retf
sbb
mov
clc
sub
cli
rol
test
test
dec
sub
lds
sahf
and
aaa
pop
xchg
lds
inc
fnstcw
pop
jmp
out
mov
xchg
ret
jp
lods
inc
pop
pushf
and
les
mov
dec
or
cmp
test
or
xchg
xchg
inc
pop
push
cmp
ret
inc
aad
out
add
dec
(bad)
xlat
scas
ins
jp
jo
fidivr
sbb
movs
push
jbe
mov
ja
pop
push
push
xchg
and
and
and
mov
dec
mov
lahf
pop
mov
mov
repnz
xor
ds
sbb
xchg
and
cmps
gs
add
ins
mov
push
outs
push
lods
push
mov
test
int3
mov
push
add
ficom
xchg
aas
add
mov
(bad)
hlt
retf
mov
out
mov
bound
mov
rcr
scas
leave
inc
sar
loop
jns
mov
faddp
cmp
jne
mov
call
and
es
daa
push
jmp
or
push
aaa
out
jecxz
les
(bad)
sbb
push
mov
adc
push
push
jmp
aam
sbb
scas
add
popa
push
and
std
mov
or
sub
cwde
jmp
dec
inc
pusha
test
push
in
mov
xlat
mov
inc
xor
xchg
push
push
nop
xor
out
xchg
cmps
jns
xchg
ss
inc
fcomi
rol
cmp
mov
cmp
and
jae
call
pop
push
jmp
in
mov
cmc
mov
mov
loope
fisubr
jmp
cmp
dec
lock
ins
dec
imul
retf
mov
pop
jns
aad
mov
sbb
pop
mov
jbe
push
mov
imul
or
add
add
cmp
xchg
mov
pop
test
mov
mov
add
ds
or
jp
jge
cmps
hlt
dec
retf
xchg
pop
lods
into
inc
retf
jmp
cmp
aam
in
sbb
sub
xchg
jmp
int3
je
dec
cmp
sub
cmp
inc
pop
push
and
mov
cmp
sbb
out
scas
and
test
dec
jg
sub
mov
cmp
pusha
xchg
aas
and
cmp
or
cmp
and
xchg
jnp
sahf
std
mov
outs
and
test
xor
retf
mov
and
ss
aam
daa
or
icebp
mov
(bad)
frstor
daa
dec
mov
pusha
cmp
pushf
push
ret
outs
xchg
xchg
dec
mov
push
(bad)
jmp
out
dec
inc
das
int3
push
retf
jb
mov
pop
pushf
int
or
in
cmp
pop
jnp
jnp
sbb
sti
adc
push
or
xor
fsubr
mov
sub
mov
sti
(bad)
pop
push
mov
mov
and
sub
push
mov
mov
jecxz
iret
call
jnp
test
push
sbb
fcomp
rcr
xchg
mov
repz
sbb
fbstp
nop
arpl
ret
sub
dec
pop
push
sub
adc
cmp
sub
outs
mov
fdiv
out
es
rcr
pop
shl
lds
test
mov
test
add
pop
xor
mov
and
shl
sub
xchg
or
mov
inc
outs
aaa
in
mov
mov
push
jae
jne
or
rcl
push
fst
popf
cmp
dec
jns
addr16
mov
cmps
push
sbb
movs
mov
cmc
or
les
fisttp
add
cmp
(bad)
div
or
mov
xchg
adc
ins
dec
xchg
pop
mov
jecxz
or
xor
mov
adc
and
mov
std
imul
hlt
rol
stos
push
xchg
cmp
test
(bad)
ins
cmps
scas
xchg
add
out
mov
mov
sbb
dec
pusha
scas
rcr
sub
jl
(bad)
mov
arpl
out
push
cdq
cmp
xor
xchg
pop
(bad)
dec
popa
cmp
xor
sub
sbb
cmp
sar
shl
add
pushf
shl
ja
xchg
or
dec
mov
mov
adc
pop
jecxz
xor
cwde
pop
cmp
push
sub
movs
ins
jns
jmp
push
mov
clc
sbb
sbb
in
(bad)
add
mov
lock
(bad)
xor
movs
lods
fisubr
repnz
jg
cdq
ins
jecxz
shl
sub
arpl
into
sbb
pop
add
cli
(bad)
mov
mov
retf
add
cmps
mov
les
stc
jbe
mov
add
fs
sub
scas
into
pop
test
fadd
fnstsw
or
dec
mov
call
mov
mov
or
sbb
fadd
les
fwait
pop
adc
xchg
adc
inc
outs
pop
mov
xchg
fcomp
push
in
mov
out
test
jno
ret
lock
in
mov
push
int
or
(bad)
pop
fiadd
clc
mov
aaa
mov
mov
adc
sbb
sub
and
out
movs
test
retf
pop
stos
sbb
pushf
sbb
ret
in
int
xor
int3
aas
out
mov
add
sbb
jo
fs
mov
mov
icebp
shl
int
adc
dec
cmp
push
mov
and
ror
into
add
xor
mov
xor
les
jb
jae
mov
fcmovne
inc
xchg
push
cld
fsubr
push
mov
sub
sbb
out
jmp
cmc
fs
cdq
(bad)
idiv
fcom
pop
in
mov
fidiv
shr
inc
sbb
in
mov
ja
int
xor
repz
sub
xchg
(bad)
ja
mov
pop
push
xor
outs
dec
shr
xor
imul
dec
and
sahf
div
fs
xchg
jmp
jno
and
mov
and
adc
in
out
or
iret
das
add
lods
arpl
daa
mov
mov
rcr
scas
push
sar
cmp
dec
jae
xor
mov
lds
cmps
repnz
in
int3
inc
xor
cs
jbe
mov
je
sub
stos
ins
push
jmp
mov
cdq
pop
jg
cmps
dec
mov
out
ja
(bad)
fcomp
mov
enter
inc
shl
inc
call
pop
jb
xor
ins
sbb
dec
dec
fmul
mov
stos
inc
adc
mov
call
sar
sbb
addr16
aas
bound
jbe
(bad)
ror
dec
pop
or
pushf
call
rcl
hlt
push
add
push
push
dec
push
sub
sti
cs
ins
lods
jae
xor
cli
call
xchg
jae
sti
adc
cld
gs
and
lock
leave
aas
xlat
hlt
test
nop
data16
xchg
loope
mov
jo
jnp
daa
adc
les
mov
mov
div
xchg
ja
leave
jne
lods
inc
mov
fiadd
push
jl
push
jo
mov
dec
jl
pushf
pop
fild
cmp
mov
cmp
push
cld
inc
addr16
cmp
dec
xchg
retf
and
or
ins
bound
xlat
lahf
ret
xchg
or
ds
ret
mov
lods
push
fs
addr16
jecxz
pop
xchg
jmp
jmp
add
sub
add
add
cmp
addr16
xor
les
pushf
jo
ficomp
add
jnp
cld
int3
xchg
cli
xchg
inc
sub
lea
mov
inc
out
mov
(bad)
inc
sti
outs
pop
xchg
lods
(bad)
aad
mov
test
shr
sub
pop
xlat
mov
mov
jle
mov
mov
jno
inc
sub
and
stos
in
inc
icebp
jecxz
ja
sahf
xlat
out
test
push
dec
popf
punpckldq
fisttp
pop
inc
mov
pushf
mov
dec
sbb
das
pusha
dec
(bad)
sbb
dec
scas
xchg
cmps
(bad)
add
sbb
in
daa
shl
push
sbb
int
adc
popa
rcr
mov
sub
pop
sub
xor
dec
fcom
fsubr
push
sbb
sbb
(bad)
cmp
push
inc
movs
and
pop
add
sbb
loopne
xchg
sub
dec
mov
lock
jg
inc
xchg
fsubr
int3
in
std
dec
pop
pop
fnsave
(bad)
xlat
cdq
jge
sbb
push
and
scas
adc
imul
jae
retf
jns
adc
pop
sub
pop
push
ret
lods
bnd
les
cmp
jnp
jo
std
lock
test
mov
xchg
fbld
jae
fwait
xor
adc
imul
adc
xchg
jmp
mov
push
jg
cmp
aam
adc
mov
xor
sbb
popf
cmp
adc
jne
lods
retf
das
inc
xor
xchg
ss
not
xchg
in
jb
(bad)
mov
and
cmp
outs
je
prefetchw
or
sbb
add
icebp
cmps
mov
gs
rcr
cmc
and
dec
aas
push
addr16
jp
aas
vpshab
dec
cs
cld
mov
ins
dec
bound
push
or
jg
sar
mov
jecxz
dec
test
mov
pop
js
cli
and
lahf
(bad)
in
fsubr
xchg
mov
add
int
mov
sub
loop
add
loop
xor
pop
xchg
push
fsub
retf
lds
add
in
jbe
or
inc
or
out
shl
jne
inc
repnz
adc
cwde
cld
jl
and
pop
lock
not
sub
inc
mov
imul
push
and
sbb
(bad)
in
sti
xlat
in
iret
jge
je
sbb
scas
daa
jl
pop
data16
dec
sub
push
jle
dec
xchg
(bad)
xor
cmp
cmp
and
mov
outs
nop
mov
jge
add
(bad)
aam
xor
or
or
mov
lods
xchg
dec
adc
imul
adc
pusha
jge
jbe
mov
sub
inc
sub
xchg
and
push
xor
pop
(bad)
lods
or
ds
xchg
aad
lahf
in
adc
in
cmps
push
mov
mov
ins
sar
dec
cmp
push
mov
jb
call
movs
or
mov
pop
hlt
hlt
add
mov
scas
pop
retf
push
pop
mov
leave
iret
lahf
popf
repz
add
bound
sub
hlt
cmps
pop
push
sub
add
add
pop
bound
inc
lahf
outs
in
jg
and
fdiv
outs
push
in
in
out
cmp
scas
retf
cmp
aaa
movs
dec
hlt
push
mov
pop
mov
mov
sbb
jae
dec
das
fcom
jge
jp
ret
in
dec
jns
or
cs
dec
les
mov
xchg
or
sub
dec
dec
out
add
or
in
into
mov
test
adc
cmp
lea
push
cmp
mov
daa
mov
sub
ret
or
sti
mov
sub
outs
and
pxor
jge
scas
sbb
xlat
bound
fsubr
cmp
inc
inc
cmp
xor
push
xor
sub
jecxz
mov
fild
int
or
xor
inc
ins
outs
jecxz
(bad)
je
pop
add
addr16
pop
sahf
enter
sbb
inc
cmp
outs
cmp
cmp
repnz
les
in
hlt
movs
dec
dec
mov
std
lods
jae
retf
ret
inc
das
mov
test
pop
sub
add
add
test
inc
and
jle
add
(bad)
cmps
stos
and
xlat
ficomp
pop
pop
mov
sub
call
arpl
loopne
cmpxchg
dec
and
xchg
cwde
aad
push
clc
push
jmp
adc
jmp
es
xor
pop
sbb
push
popf
xor
push
mov
popf
xchg
fs
in
pop
lods
imul
enter
cmp
or
dec
xchg
xlat
jo
(bad)
add
leave
pusha
mov
pop
push
jnp
cmp
sets
movs
pop
cmp
call
outs
call
mov
inc
mov
ror
das
inc
inc
fnstsw
xchg
xor
mov
out
jmp
sbb
and
xor
and
int3
(bad)
outs
inc
call
jae
xor
mov
adc
and
stos
out
push
push
jno
inc
out
scas
pop
ja
nop
cmp
and
aaa
icebp
and
fcmovnbe
adc
retf
icebp
mov
add
ret
lods
aam
sbb
inc
cmps
xlat
fldenv
int
rcl
or
xchg
loope
arpl
or
add
dec
mov
mov
adc
in
mov
das
or
mov
inc
pop
sub
out
jno
pop
mov
jmp
and
dec
mov
mov
pop
cmp
sub
popf
cmp
femms
lock
fsub
cmc
xchg
cmp
jb
mov
in
lea
xchg
inc
mov
jbe
aad
call
jnp
inc
push
repz
sub
inc
std
pushf
rcr
sub
hlt
mov
gs
rcl
test
xor
movs
dec
sub
cmove
fst
add
fadd
mov
mov
call
dec
pop
sti
pop
fs
xchg
xchg
fbstp
mov
xor
or
cdq
sbb
or
fcomp
cmp
leave
jmp
or
mov
inc
push
aaa
adc
ss
xchg
icebp
cli
ss
in
push
dec
dec
loope
push
cld
fmul
movs
jnp
and
int
(bad)
js
or
pop
xor
cmps
dec
cmp
lods
pop
mov
xchg
stos
retf
sub
repnz
and
pop
xchg
das
mov
xchg
inc
mul
popa
push
pop
jecxz
add
out
xchg
or
stos
lock
rcr
pop
out
and
push
retf
xor
(bad)
xchg
cwde
test
imul
push
push
pop
je
cmps
adc
sub
or
fcom
mov
xlat
ja
mov
neg
(bad)
jl
popf
xchg
push
mov
push
movs
or
in
test
mov
into
adc
pop
mov
sub
dec
icebp
jp
sub
das
jb
xor
out
dec
push
cli
loope
sub
rcr
bound
cmp
or
mov
loopne
fmul
inc
jl
cmp
fimul
shl
mov
ins
call
sub
iret
in
jb
inc
fwait
arpl
mov
mov
std
mov
mov
lods
and
or
in
(bad)
loope
fcomp
cmp
bound
adc
push
fs
shr
fist
retf
es
nop
mov
movs
loop
lahf
hlt
outs
pop
push
shl
fwait
shr
repnz
inc
push
xchg
gs
cwde
mov
xchg
mov
push
mov
mov
loop
sub
inc
loopne
aas
add
push
push
or
(bad)
lods
movs
push
push
mov
cmp
and
inc
dec
mov
dec
and
outs
mov
retf
add
adc
fisttp
add
cmp
pop
push
outs
jmp
jg
lahf
inc
popa
and
outs
cmp
cdq
icebp
sbb
dec
daa
pop
jmp
xor
jne
retf
lds
enter
adc
repnz
jmp
add
js
stc
lds
push
imul
pop
xchg
jp
fist
out
cli
push
stos
push
pusha
mov
in
lahf
pop
mov
lahf
gs
not
icebp
xchg
add
dec
jne
(bad)
rcl
fwait
jno
jmp
es
ret
jns
imul
xchg
aad
add
push
push
fwait
mov
adc
push
mov
sbb
sbb
dec
nop
pop
clc
mov
scas
cmp
xchg
das
xor
shr
mov
jecxz
mov
ss
call
jb
push
addr16
dec
arpl
jns
adc
sub
or
aas
in
mov
mov
ins
cli
(bad)
pop
mov
fs
dec
fisub
jp
mov
int
jle
ret
adc
pop
das
mov
pop
add
cmp
cmps
arpl
fbld
lock
int3
dec
in
test
adc
fimul
mov
lods
push
mov
adc
(bad)
(bad)
fwait
mov
aas
aas
inc
rcl
lods
push
popa
shl
fsubr
fsub
or
push
lods
scas
ds
js
enter
cmp
mov
(bad)
sbb
sbb
test
jns
lea
jnp
and
out
xchg
and
(bad)
call
in
mul
fdivp
adc
mov
jo
cmps
shr
aam
pop
push
add
cdq
sbb
rcr
inc
(bad)
popf
push
cmp
xchg
adc
mov
xor
mov
into
mov
and
adc
test
sysret
inc
sub
mov
sub
mov
or
push
sbb
mov
add
or
loope
in
ins
sub
jecxz
loope
ins
sub
ja
(bad)
sbb
and
call
push
fdiv
adc
jne
cmp
mov
stc
(bad)
ds
mov
aas
jge
pop
add
mov
pop
lahf
les
fsubr
jmp
xchg
xchg
xchg
jecxz
ins
xlat
mov
cmp
int
mov
sub
scas
mov
inc
jne
jecxz
ins
sub
sbb
rol
mov
into
or
ficomp
lock
gs
adc
inc
scas
cmp
outs
pop
adc
pop
into
test
stos
je
sub
cdq
fsubrp
sbb
std
xchg
adc
lods
ror
in
fs
nop
add
loope
jb
inc
or
lods
sbb
xor
cmp
mov
or
aas
mov
sbb
push
mov
or
pop
je
test
push
xor
(bad)
in
inc
out
aas
out
movs
and
add
outs
in
xlat
jns
inc
fld
pop
jno
mov
mov
add
cmp
xchg
mov
pop
push
adc
dec
pop
ja
idiv
ds
ja
lods
cmp
bound
shr
jno
fnstcw
cmp
mov
ret
int3
pop
sbb
das
push
mov
xchg
pop
addr16
test
fld
pop
test
cmp
in
xor
xchg
jbe
retf
addr16
es
pop
adc
(bad)
xchg
in
push
out
dec
fmul
jae
jl
pop
inc
and
sub
mov
inc
aaa
lahf
mov
xor
jnp
out
test
(bad)
mov
mov
outs
push
imul
popa
ret
mov
cmp
hlt
mov
push
cmp
fiadd
arpl
add
xchg
dec
mov
pop
fst
mov
jbe
jle
adc
dec
popf
lahf
fdivr
int
adc
cmps
mov
pop
pushf
(bad)
or
lods
ret
ds
pop
lods
mov
jbe
mov
push
adc
in
add
mov
or
xor
out
sbb
mov
f2xm1
outs
leave
icebp
mov
push
sbb
stos
mov
pop
out
(bad)
aam
lods
dec
xor
aam
mov
ja
inc
ins
dec
push
sahf
ficom
cmp
out
(bad)
cmp
sub
push
mov
scas
jl
out
mov
std
xor
cld
cmc
add
xor
ins
add
xchg
push
xor
shr
xchg
cmp
dec
lock
jne
loope
adc
inc
adc
pop
stos
cmp
pop
push
mov
stos
mov
arpl
sub
fdiv
mov
dec
int3
mov
scas
mov
mov
ins
outs
and
dec
in
stos
add
xor
lock
aam
mov
cmps
inc
pop
test
out
add
sub
lock
xchg
outs
mov
adc
loop
(bad)
cmp
shl
js
int3
push
fnstcw
adc
pop
scas
in
mov
lea
sbb
xchg
cli
clc
push
(bad)
xlat
add
call
es
sub
pop
int
inc
cmp
cmp
push
or
pmuludq
xchg
sub
ret
or
into
inc
sbb
mov
pop
lods
icebp
or
push
dec
int
inc
repz
dec
arpl
lea
xchg
sbb
push
shl
rol
addr16
pop
add
sub
out
mov
in
cmp
fst
stos
not
xchg
pusha
or
das
fistp
mov
iret
inc
or
pop
cdq
and
cmp
xchg
ins
xor
cmp
xchg
cmps
pop
xchg
jp
xor
xlat
ss
mov
xchg
sub
fcmovne
stc
inc
dec
cmps
aad
mov
loopne
lds
aaa
out
in
cwde
mov
push
mov
and
retf
and
icebp
push
mov
jmp
pop
jne
mov
sti
mov
leave
inc
or
and
jns
sub
js
push
push
daa
add
mov
and
xor
mov
jae
iret
iret
push
sub
daa
out
lods
scas
call
add
cmp
push
(bad)
mov
mov
call
sub
cdq
and
mov
add
sbb
mov
sar
add
mov
pop
push
ins
xchg
(bad)
in
call
sub
mov
pop
cmc
pop
push
outs
and
js
sbb
movs
cmp
dec
test
or
pop
rcl
cmc
cmp
(bad)
out
gs
sahf
neg
push
test
test
mov
and
(bad)
jmp
jg
inc
push
icebp
bound
inc
jne
iret
xchg
mov
mov
shl
lods
clc
in
lock
cs
mov
daa
inc
jne
jmp
in
shr
cmp
popa
and
(bad)
je
in
add
out
mov
or
test
(bad)
and
cmp
das
repnz
adc
pushf
pop
adc
xor
rcl
pushf
inc
lock
jmp
xor
repz
test
push
mov
xor
xchg
mov
shl
mov
cmp
dec
js
push
ins
jle
int
pop
inc
push
(bad)
fdivrp
ret
pop
mov
test
jmp
mov
push
and
in
dec
cld
xchg
or
cmp
stc
je
push
and
lock
add
mov
arpl
adc
call
jbe
test
cli
lahf
jne
dec
lods
mov
pop
es
lods
outs
test
sub
sbb
ret
std
pop
movs
sub
jns
bound
lds
std
cmp
sahf
xchg
es
mov
stos
mov
mov
mov
shr
xor
adc
adc
fwait
jnp
call
test
cmps
jns
cli
mov
js
enter
out
mov
push
fs
push
jo
gs
xor
jns
(bad)
iret
test
retf
popa
lods
cmc
fsubr
cmp
jp
mov
dec
xor
out
lahf
fild
aad
and
xchg
cdq
lds
cs
push
mov
in
and
sub
scas
cld
fsub
mov
mov
fucomip
inc
fimul
and
es
mov
cdq
pushf
aas
sbb
mov
mov
mov
stos
repz
mov
cs
jecxz
adc
test
jp
fcom
dec
adc
jnp
push
iret
je
or
xchg
in
test
sahf
mov
xor
cmp
popf
cli
dec
(bad)
jl
test
int3
lahf
sub
jb
icebp
or
xor
sahf
std
out
jmp
push
retf
xor
mov
sbb
mov
mov
das
inc
sub
bound
sub
ret
nop
add
mov
or
xor
(bad)
jno
ins
in
xchg
arpl
adc
cmps
(bad)
es
cwde
fisttp
stos
xchg
sahf
retf
xchg
jge
sub
or
sub
sub
jmp
int3
mov
or
jmp
mov
frstor
sub
mov
dec
push
inc
icebp
out
adc
mov
addr16
mov
xchg
pop
xchg
pop
jns
jecxz
cld
in
dec
out
lds
(bad)
sub
cmp
mov
stos
mov
inc
repz
std
adc
loop
cmp
jecxz
sbb
inc
xchg
cmp
mov
fst
sub
aaa
(bad)
sti
in
xor
ficomp
or
pop
int3
cmps
mov
outs
in
xchg
test
std
nop
adc
pop
add
push
test
cwde
fild
fs
and
inc
adc
div
popf
retf
xchg
call
push
and
pop
(bad)
cld
cmp
adc
push
jnp
jmp
pusha
es
outs
xor
inc
ja
sbb
mov
mov
mov
(bad)
scas
add
pop
popf
xor
mov
pop
ss
mov
out
fldenv
(bad)
faddp
pushf
cli
mov
addr16
jl
fwait
or
xor
mov
push
xchg
jecxz
and
jmp
stc
rcl
inc
scas
mov
movs
test
fdiv
js
or
and
fst
inc
lea
lds
and
jmp
jne
jb
xchg
stos
(bad)
jmp
ins
out
outs
push
mov
push
std
adc
sbb
pop
pop
adc
ins
adc
in
sbb
cwde
lods
and
inc
xchg
push
or
cmp
or
mov
push
mov
mov
mov
fwait
pop
xor
mov
dec
les
mov
scas
xchg
inc
ins
add
add
sti
pop
cmp
jbe
cli
and
xchg
pop
sar
(bad)
(bad)
aad
inc
in
dec
jbe
or
lahf
jns
xor
ficomp
pop
std
push
sub
xchg
mov
hlt
cli
adc
cmp
or
push
xchg
adc
jle
add
jle
cmp
movs
cmp
test
adc
xchg
ds
inc
inc
clc
adc
(bad)
add
or
xor
cs
mov
call
call
mov
mov
sub
popf
das
gs
mov
sahf
mov
icebp
(bad)
cmp
mov
div
std
dec
das
or
aaa
jg
icebp
stc
mov
push
pop
add
fldl2t
ins
imul
int3
add
pop
mov
pop
jl
(bad)
cli
movs
xlat
and
adc
repz
and
jns
cld
sti
arpl
sbb
repz
add
retf
je
pop
movs
cmc
cmp
push
fs
nop
nop
xor
fdiv
cld
inc
pop
push
mov
fadd
mov
cmp
repnz
out
jge
in
inc
jns
or
mov
hlt
sub
jmp
or
daa
xchg
inc
bound
mov
fbstp
movs
pop
jae
push
(bad)
in
cmp
lock
pop
mov
ins
dec
push
push
xchg
xor
jns
mov
cli
xlat
push
push
sub
(bad)
pop
pop
or
out
inc
push
nop
jne
loop
call
inc
xor
push
(bad)
jae
and
cld
es
push
aas
mov
fistp
outs
iret
imul
push
xor
scas
and
and
pop
sbb
leave
or
jno
jp
push
pop
sti
lds
and
dec
sub
(bad)
adc
dec
bound
pop
and
push
call
dec
pcmpgtd
sub
pop
cs
data16
fistp
cmp
mov
pop
mov
adc
cld
dec
cdq
xchg
push
stc
mov
jno
adc
pop
out
fistp
clc
out
jmp
aaa
test
mov
aam
mov
push
aam
sar
ins
dec
std
mov
shr
xchg
adc
add
sbb
loopne
adc
das
push
mov
sbb
inc
xor
adc
adc
rol
pop
(bad)
(bad)
arpl
pop
add
cmp
inc
sti
mov
ins
add
fwait
lea
sbb
xor
movs
cmp
stos
mov
mov
nop
(bad)
int
ins
dec
or
es
into
pop
enter
add
adc
dec
or
cmps
mov
aas
aad
stc
dec
data16
push
mov
mov
stos
pop
lea
pop
mov
in
inc
or
mov
jbe
test
cwde
out
(bad)
enter
aad
imul
fs
aas
fimul
outs
jl
movs
not
xor
je
sub
fldcw
jecxz
cmc
icebp
xchg
in
icebp
sbb
ror
into
jo
mov
js
cmp
push
aam
sbb
xor
fiadd
into
jl
stos
outs
in
or
pop
sbb
and
add
je
mov
stc
fcomip
cmc
jl
(bad)
fst
pop
out
pop
mov
(bad)
cmps
repz
(bad)
add
repz
adc
mov
mov
(bad)
fsubr
sbb
add
and
aaa
fmul
dec
fist
adc
jmp
data16
(bad)
or
adc
push
scas
push
in
inc
adc
mov
cli
arpl
sub
scas
mov
cli
or
or
ret
icebp
mov
adc
cmp
jns
and
jecxz
dec
or
movs
jmp
xchg
jo
repnz
push
jg
inc
lahf
dec
fwait
jmp
jo
inc
enter
clc
sahf
leave
pop
retf
jl
cmp
outs
dec
adc
pushf
mov
or
popf
sbb
mov
mov
push
jne
mov
fadd
(bad)
cli
push
addr16
aam
mov
retf
div
inc
dec
push
inc
dec
jae
stc
add
addr16
xchg
ret
or
nop
cld
xor
pop
js
mov
mov
ins
sub
inc
int3
mov
push
push
pop
je
loop
clc
or
dec
sub
sub
mov
push
(bad)
pop
fs
lock
cmps
stc
das
in
cli
divps
pop
data16
sbb
cli
addr16
jbe
mov
xchg
rcl
fwait
(bad)
fild
inc
ficom
push
leave
(bad)
loop
dec
(bad)
pusha
or
push
les
jnp
jge
jg
(bad)
gs
mov
(bad)
and
push
cs
inc
dec
sbb
mov
mov
stos
mov
cmc
ja
or
rcl
call
cld
cmp
popf
jg
fisttp
(bad)
repnz
jno
sbb
hlt
(bad)
(bad)
xchg
jmp
mov
imul
daa
std
mov
stos
xlat
xchg
mov
cld
push
or
mov
push
mov
scas
call
sbb
push
imul
popa
call
mov
dec
je
(bad)
aad
push
shr
es
or
std
test
mov
ret
inc
dec
test
repz
xchg
sbb
adc
call
addr16
ds
xchg
popa
(bad)
sahf
cmps
cmc
mov
mov
lds
cwde
inc
push
cmps
shl
lock
mov
or
or
loop
xor
push
xchg
add
cmp
movs
or
or
mov
xchg
repnz
rcl
fs
jp
mov
int3
or
int
outs
inc
jno
xor
xchg
xor
mov
scas
test
xor
repnz
cli
call
sar
js
jp
js
add
test
adc
(bad)
loope
das
jge
movs
inc
sub
sahf
fs
cmp
inc
lahf
pop
imul
arpl
cmp
imul
js
xchg
ret
rcr
push
ins
sub
mov
setl
jp
ins
push
out
push
hlt
jge
call
or
test
mov
push
inc
cwde
sahf
daa
out
bnd
jae
add
pop
xor
mov
js
jle
rcl
mov
scas
mov
arpl
mov
lea
inc
(bad)
pop
bound
mov
dec
hlt
add
stos
mov
mov
add
pop
jp
add
xor
or
or
fld
sbb
lea
(bad)
mov
test
sub
adc
or
test
xor
iret
not
ja
jle
jbe
xor
fwait
pop
sbb
xchg
jmp
adc
cs
lea
mov
jne
test
ror
ja
out
adc
or
xor
ret
test
fistp
leave
pop
xor
jno
push
mov
lahf
jmp
int3
cs
mov
pop
fistp
push
mov
dec
aad
js
xor
icebp
outs
out
inc
push
push
fwait
cmc
icebp
lock
cmc
xchg
out
inc
sti
sti
call
pushf
and
sbb
(bad)
fnstenv
cmp
xchg
adc
adc
stos
mov
out
sbb
stos
cld
stos
inc
test
xchg
call
or
shl
add
inc
inc
push
pop
pop
inc
xchg
icebp
(bad)
cwde
je
dec
pop
xchg
cmc
imul
retf
cld
jge
int3
fs
push
xor
outs
lea
repz
mov
sub
fisubr
inc
mov
retf
ins
add
out
jmp
pop
add
jle
shl
push
pop
stos
sbb
rol
outs
shl
pop
call
hlt
shl
jne
and
fs
outs
jb
dec
cli
mov
out
sbb
inc
inc
das
fwait
xchg
outs
pop
push
or
or
push
neg
jbe
fucom
movs
pop
dec
imul
ss
test
gs
iret
or
cmp
and
sub
xchg
das
push
loope
and
sbb
cwde
aaa
out
xor
sbb
xor
mov
cmp
cmps
mov
or
in
sar
pop
and
iret
lea
xchg
xor
dec
inc
(bad)
nop
repnz
mov
mov
xor
lds
mov
dec
call
shl
pop
lock
adc
push
test
mov
push
cwde
retf
sahf
jmp
es
(bad)
or
pushf
fs
pop
push
shl
inc
dec
fstp
push
cmp
mov
mov
into
sar
inc
fwait
and
mov
loope
call
sub
jge
dec
movs
in
dec
pop
ins
stos
or
pop
push
lods
(bad)
jmp
test
push
sub
ror
cmp
push
stos
cmp
sbb
add
call
adc
pop
sbb
push
out
mov
pop
sbb
das
inc
sbb
push
mov
mov
jno
sbb
out
aaa
jmp
pop
in
mov
sub
mov
jg
(bad)
xlat
xchg
daa
dec
ins
rol
bound
ret
push
(bad)
in
std
clc
cmps
lock
adc
or
shr
add
pop
add
outs
adc
fld
loope
or
or
retf
push
jg
mov
xchg
int
adc
adc
jae
xor
dec
leave
aad
mov
sub
pop
aad
cdq
push
jle
adc
imul
mov
push
pop
xor
ret
cmps
push
addr16
xchg
xchg
adc
jle
xchg
sbb
and
es
sub
and
shl
inc
mov
mov
add
ret
mov
xor
inc
add
jg
pop
test
shl
fidivr
dec
icebp
and
fidiv
out
adc
or
inc
js
test
or
mov
movs
push
jge
rcr
fistp
and
inc
xchg
mov
jle
out
sub
les
mov
pop
jle
lock
leave
dec
popf
mov
fldenv
mov
jle
adc
xlat
iret
in
in
add
add
xor
ret
not
push
pop
pop
cli
mov
not
daa
mov
mov
mov
data16
inc
pop
mov
mov
es
jne
and
pop
sbb
call
fstp
mov
inc
xchg
icebp
xchg
dec
jg
cmp
mov
sub
int3
sti
out
(bad)
dec
jmp
imul
in
pop
push
or
aas
pushf
dec
retf
jns
dec
sbb
call
fst
sbb
push
data16
fdivp
adc
ds
js
(bad)
stos
out
mov
adc
pop
xor
inc
dec
mov
add
out
bound
cli
mov
ror
cmpxchg
inc
pop
ds
mov
leave
push
adc
nop
loopne
adc
(bad)
std
sbb
fwait
mov
in
jle
in
sub
inc
cmp
mov
jae
pop
or
test
shl
icebp
jmp
call
dec
jmp
(bad)
pop
dec
mov
(bad)
mov
sub
pop
pop
int3
inc
lods
pop
packsswb
iret
mov
scas
stc
add
out
mov
movs
dec
push
aas
std
arpl
sbb
mov
in
dec
test
pop
push
push
push
mov
adc
pop
fdiv
xor
mov
cdq
xchg
test
mov
xlat
fcomp
pop
test
cmps
sbb
cli
jg
mov
loopne
out
ja
mov
pop
mov
pop
pop
adc
fld1
int3
iret
je
inc
in
and
jl
fldcw
mov
jae
cs
jl
std
out
xchg
cmps
xor
in
bound
pushf
dec
fs
hlt
xor
jg
mov
in
adc
cmp
xchg
push
mov
loopne
test
pop
xchg
push
push
xchg
adc
jo
stos
mov
fistp
out
inc
sbb
rol
ret
sub
sbb
cmp
lea
sahf
ins
fwait
loope
sbb
jae
aad
sub
lds
fs
lods
gs
jecxz
pop
dec
mov
out
pop
fidiv
not
pop
xchg
xchg
pop
(bad)
aad
pop
dec
and
or
je
xor
jge
dec
jge
fxch
cmps
inc
cmp
lahf
xor
sbb
dec
dec
mov
das
pop
dec
dec
jnp
jmp
stos
shr
xchg
jno
dec
enter
xchg
jecxz
iret
jnp
shl
popf
cmp
mov
pushf
out
jmp
jmp
int
add
inc
dec
mov
cmps
push
push
sbb
inc
popa
mov
pushf
xor
fdiv
out
sahf
jns
xor
outs
push
push
fxch
daa
pop
shl
ret
mov
mov
mov
xchg
neg
shl
add
mov
(bad)
cdq
rcr
popa
jne
mov
fstp
outs
xchg
adc
mov
jecxz
xchg
lods
fwait
mov
loope
jg
outs
dec
or
lods
xchg
inc
and
sbb
xor
add
mov
add
jmp
sbb
(bad)
jecxz
xchg
pop
out
les
mov
pusha
pop
pop
mov
inc
cs
jmp
ret
imul
xchg
xor
outs
xor
in
cmp
pop
stos
loopne
lds
mov
es
lahf
mov
mov
pop
lahf
stos
sti
xchg
sbb
stc
sahf
mov
xlat
pop
mov
(bad)
out
stos
test
fisubr
inc
sub
repnz
jae
ret
test
js
add
inc
test
aad
rcl
test
and
adc
pop
lock
mov
fist
inc
add
dec
push
cmp
adc
adc
fist
xor
xor
retf
ficom
aam
pop
loopne
dec
jnp
movs
lods
mov
loop
push
or
outs
lahf
test
or
movs
(bad)
fdiv
mov
dec
retf
setne
ret
push
(bad)
lahf
push
add
add
icebp
jns
call
jmp
and
sar
sbb
ins
sub
sbb
jmp
jmp
cmps
xchg
fld
xor
iret
mov
mov
fsubr
icebp
rcr
xchg
scas
das
push
cmps
out
outs
xchg
xchg
repz
fcomi
xchg
out
pusha
(bad)
into
xchg
cmp
repz
pop
(bad)
idiv
sub
xor
(bad)
and
push
mov
pop
cmp
repz
gs
jns
xchg
loopne
shr
pop
imul
rol
xchg
mov
shld
fstp
ret
xor
aaa
sbb
fcom
(bad)
retf
push
xchg
push
xor
jge
bound
mov
dec
js
and
ja
cmps
mov
add
adc
int
idiv
clc
cmovl
repnz
add
mov
xchg
add
mov
repnz
pusha
cmps
arpl
ja
daa
sub
or
mov
mov
fstp
or
xor
push
test
int
or
xchg
popa
imul
push
sub
pop
clc
dec
xchg
mov
sbb
ror
xchg
xor
jb
pop
pop
sbb
mov
lods
dec
lea
aam
pop
in
fs
push
sbb
add
les
jle
push
inc
out
mov
mov
enter
jne
outs
test
push
and
push
mov
arpl
push
test
mov
sub
test
dec
shl
dec
(bad)
es
into
(bad)
neg
imul
les
mov
(bad)
aad
cwde
jmp
adc
inc
mov
and
mov
aaa
mov
cmp
pop
lock
jmp
xchg
add
xor
add
inc
jecxz
fisubr
pop
lds
call
out
(bad)
sbb
pushf
ret
pop
sbb
sub
sub
and
nop
or
sbb
xchg
dec
pop
lea
add
xchg
jo
jecxz
xlat
push
outs
(bad)
into
add
cmp
xor
sbb
in
adc
(bad)
das
mov
stc
je
ja
lods
ins
adc
mov
inc
frstor
add
into
jecxz
retf
(bad)
sbb
dec
xlat
inc
das
sbb
loopne
sbb
sub
xor
loope
pop
aaa
sub
or
xchg
xchg
sbb
addr16
fcomp
sub
cld
test
scas
enter
mov
bound
imul
jle
jmp
inc
sbb
pop
test
rcl
call
add
cdq
xor
mov
add
retf
sar
test
mov
xchg
mov
mov
mov
mov
ja
bound
and
(bad)
gs
jecxz
(bad)
nop
out
retf
into
pushf
in
cmps
outs
pop
add
in
iret
inc
pop
addr16
jecxz
fstp
adc
pushf
mov
movs
sub
das
inc
pop
push
mov
sub
lahf
mov
fld
pop
sbb
out
lods
icebp
fdivr
mov
fs
adc
bound
neg
push
inc
mov
and
or
jle
jb
sbb
fidiv
jae
cdq
push
gs
cwde
(bad)
push
inc
cmp
lods
inc
mov
jle
or
xor
xchg
mov
adc
fbstp
xor
ja
jle
stos
adc
xchg
xor
mov
mov
mov
pop
enter
in
mov
out
daa
scas
ss
gs
and
outs
push
outs
sbb
fcmovnbe
aaa
ds
or
xchg
shl
aad
ins
dec
sub
inc
push
adc
fidiv
arpl
cmp
xor
mov
xor
inc
lahf
outs
retf
cmp
push
mov
push
(bad)
enter
call
popf
cmp
push
out
scas
xor
xchg
ret
mov
test
rcl
ss
(bad)
lods
push
popf
clc
or
jmp
repz
call
jg
ret
cmp
sub
push
push
pop
mov
ret
stos
mov
scas
or
stc
or
adc
sub
mov
packssdw
xchg
(bad)
scas
push
test
cmps
daa
jb
jne
outs
mov
je
adc
mov
xchg
call
mov
jo
(bad)
add
mov
mov
shr
add
push
(bad)
outs
mov
cmps
adc
jno
add
adc
push
mov
sub
push
in
(bad)
sub
sbb
lock
(bad)
pop
cmps
rcr
add
andnps
mov
cdq
iret
and
fwait
and
iret
jo
shl
xlat
ins
daa
cmp
or
xchg
sbb
sbb
inc
push
add
push
je
fwait
inc
or
sub
jmp
lock
jle
mov
push
dec
fld
cmp
xchg
jb
push
popa
stos
mov
gs
lods
out
lods
push
sbb
xor
(bad)
sbb
xlat
pop
or
fs
jg
inc
xchg
sbb
aaa
push
mov
(bad)
ja
pop
adc
jns
pop
(bad)
mov
pop
jmp
push
pushf
aas
or
stos
addr16
loop
push
cs
mov
cli
jns
lea
xor
imul
and
scas
out
aad
sti
(bad)
ins
push
jns
fmul
push
pop
xor
sahf
adc
pop
mov
jmp
cmp
xor
loopne
mov
mov
jge
jmp
xor
shl
push
ficomp
add
fstp
dec
aas
or
add
jne
fmul
fidiv
sbb
movs
test
mov
and
sbb
je
iret
cwde
adc
jle
mov
push
stos
pop
adc
aam
cmc
ins
fimul
pop
out
retf
adc
aad
mul
sbb
and
stc
sbb
fwait
jnp
test
sbb
push
add
mov
mov
mov
loopne
icebp
push
dec
push
or
adc
mov
cmp
pop
mov
mov
addr16
pop
cmp
jmp
(bad)
and
jg
inc
nop
in
sar
cs
xor
loopne
test
push
jmp
cmps
mov
xchg
scas
mov
mov
xchg
(bad)
mov
jge
into
(bad)
mul
add
push
mov
(bad)
jns
cmps
mov
sti
pusha
dec
loopne
jl
xchg
or
aaa
mov
push
stos
les
sbb
inc
push
ds
icebp
jne
dec
cs
mov
jp
stc
fs
shr
inc
in
not
xchg
cmp
and
ins
push
fstp
sti
int
xchg
or
je
fnsave
(bad)
test
add
mov
pop
sub
add
push
inc
rol
push
cmp
xchg
ret
pop
shr
lea
and
xor
xchg
(bad)
mov
pop
xor
(bad)
stc
stos
rcl
add
push
mov
clc
es
and
ss
and
mov
loopne
sbb
les
call
cmp
adc
cmp
aam
jecxz
aaa
inc
dec
loope
data16
push
lods
and
popa
push
scas
add
or
adc
inc
loop
sub
inc
hlt
push
mov
sub
jecxz
int3
mov
clc
push
jge
movs
cli
inc
mov
push
into
xor
test
in
adc
rcl
pusha
mov
xor
and
mov
ja
add
sbb
mov
hlt
loopne
cdq
mov
xchg
xchg
je
fst
fwait
inc
mov
retf
cs
int
or
iret
popa
adc
movs
fld
out
shr
push
sub
(bad)
aad
ins
xor
shl
fcmovne
gs
push
outs
out
inc
xchg
ins
pop
loopne
movs
sub
test
(bad)
mul
outs
jmp
hlt
sar
mov
je
lahf
dec
in
inc
and
xor
in
out
inc
cmc
mov
imul
push
outs
aad
add
(bad)
js
inc
mov
mov
xchg
ja
repnz
mov
(bad)
jno
loop
cmc
sbb
jecxz
xchg
shl
test
cli
call
(bad)
mov
dec
sub
xchg
leave
or
retf
in
pop
push
rcr
cmp
mov
pop
mov
sbb
or
mov
(bad)
cmps
mov
clc
pop
gs
xlat
xchg
add
mov
outs
add
jne
or
jmp
mov
cmc
dec
and
xlat
(bad)
add
fld
(bad)
clc
jge
test
xor
mov
cmp
xor
nop
adc
gs
adc
fdivr
jns
mov
jg
shl
pop
enter
sti
mov
(bad)
imul
pop
dec
inc
clc
jge
retf
test
or
ficom
lahf
inc
mov
add
jno
mov
ret
adc
jmp
and
outs
pop
icebp
mov
lods
xor
mov
outs
mov
enter
imul
cmps
xor
adc
sbb
outs
pushf
fld
and
stc
ret
(bad)
cmp
or
pop
jne
pop
xor
test
pop
ins
cdq
pusha
movs
jns
xor
fild
arpl
dec
mov
(bad)
mov
stos
clc
lea
dec
cmps
jmp
iret
repz
mov
xchg
sub
out
mov
mov
cmp
adc
cs
sub
add
mov
jne
push
aad
es
sbb
pushf
xor
scas
scas
mov
or
push
jle
lahf
xor
push
adc
daa
push
mov
or
jae
inc
push
or
cld
or
xchg
in
mov
imul
push
cmps
push
sbb
jnp
test
bound
sbb
not
xor
sbb
jb
js
outs
mov
jnp
(bad)
jnp
ds
cld
pop
xor
fdiv
jno
sbb
mov
data16
(bad)
cli
push
loop
jnp
test
es
or
jns
dec
inc
mov
adc
out
push
and
adc
fstp
and
imul
je
and
nop
imul
jle
jo
or
or
or
mov
cmp
push
out
lea
pop
inc
dec
jle
jl
mov
loope
hlt
xor
jp
jl
loopne
xchg
push
sub
and
mov
xlat
and
cmc
pop
sub
inc
xor
mov
ret
jne
out
xchg
jne
aaa
xchg
sar
adc
inc
jl
dec
movs
shr
push
sbb
aaa
stc
pop
pop
mov
out
scas
add
jecxz
and
int
mov
mov
out
adc
dec
mov
test
jle
mov
or
imul
mov
repnz
arpl
les
push
jae
mov
(bad)
sub
jge
into
add
sbb
dec
rcl
int
out
mov
fadd
add
inc
das
adc
idiv
mov
jns
xchg
jne
and
push
mov
ret
js
daa
rol
sbb
xchg
sbb
mov
pop
idiv
fild
clc
(bad)
mov
mov
jb
adc
mov
jns
daa
sub
add
xor
xor
mov
in
mov
xor
lahf
aad
mov
in
jmp
(bad)
push
push
pop
xchg
retf
not
adc
cld
test
mov
test
fiadd
and
jp
cmps
fisub
data16
mov
aam
mov
xor
and
retf
cmp
adc
aaa
test
push
sub
cmp
aas
cmp
das
pop
inc
xchg
imul
push
and
pop
mov
movs
xchg
xlat
mov
dec
xlat
sbb
call
cmp
xor
fs
(bad)
and
daa
push
cmps
jge
neg
cdq
scas
mov
fld
mov
lahf
push
div
gs
out
dec
into
push
enter
mov
cmp
es
add
sahf
jnp
xchg
sub
sbb
mov
cwde
jmp
add
sub
sahf
pop
outs
cdq
adc
ss
mov
mov
mov
mov
call
cmp
mov
mov
into
mov
sbb
fsubr
cmps
retf
pop
shr
push
cmp
int3
mov
scas
test
mov
and
jg
call
mov
mov
repz
xchg
jno
add
push
add
jmp
mov
js
jmp
fld
repnz
sahf
mov
sbb
popf
mov
aaa
push
fmul
dec
nop
aam
cli
add
(bad)
stc
imul
jmp
aaa
ja
add
add
add
push
les
cmp
add
cs
mov
mov
jmp
imul
adc
popa
xchg
aas
or
fild
iret
sbb
movs
xchg
movs
(bad)
lods
push
xor
test
cmp
pushf
aam
(bad)
mov
cmp
xchg
adc
(bad)
fmul
cdq
(bad)
mov
mov
mov
xchg
push
fdivr
dec
mov
xor
add
movs
push
js
mov
xor
ror
xor
jns
mov
xchg
(bad)
and
inc
push
scas
sbb
les
es
jbe
imul
pop
xor
std
test
and
aas
popf
je
xlat
jmp
lds
push
push
cmp
mov
add
dec
jl
pop
mov
outs
es
test
sub
out
or
xor
sar
xchg
aad
aaa
jle
hlt
inc
add
sub
sub
in
add
sub
imul
nop
push
xor
icebp
lods
mov
add
mov
sar
repnz
dec
arpl
cmps
mov
addr16
or
js
jo
int3
mov
sahf
xor
mov
movs
daa
or
add
xor
push
push
mov
mov
sbb
push
cli
pop
pop
scas
and
push
jmp
gs
ss
mov
push
xor
out
mov
xor
scas
add
sub
adc
movs
xchg
jnp
xor
pop
clc
push
fld
pop
ds
mov
pop
int
sti
xchg
or
mov
(bad)
mov
leave
xchg
nop
into
dec
iret
jl
js
ret
sub
das
fdivrp
mov
pusha
shl
ins
pop
imul
shl
cld
lods
mov
jle
mov
stos
mov
imul
mov
mov
mov
inc
push
scas
pop
ins
sbb
fld
and
sar
data16
sbb
cdq
ins
leave
adc
push
adc
cmps
adc
(bad)
pop
lahf
cmp
fidiv
dec
out
mov
addr16
ss
sbb
popf
int
adc
mov
in
adc
jne
mov
or
(bad)
pop
mov
add
adc
and
sbb
and
ins
test
push
mov
mov
jbe
mov
adc
sub
call
jns
push
int
add
mov
sar
xor
mov
stos
in
mov
jge
xor
clc
test
fwait
mov
jle
pop
pop
pop
mov
cmp
jl
ins
and
ret
add
fldcw
fmul
sub
aad
xor
cmp
int3
xchg
dec
lods
lock
push
push
(bad)
popa
add
into
xchg
add
leave
xchg
cdq
dec
(bad)
push
jecxz
push
call
cmp
mov
not
test
ss
repnz
xchg
jmp
inc
sbb
dec
aas
mov
jl
xor
add
(bad)
pop
push
pop
stc
xchg
aaa
and
stos
dec
aad
push
or
jo
movs
dec
push
add
nop
jle
mov
outs
das
sub
outs
scas
into
call
push
dec
mov
lea
cli
mov
mov
dec
or
inc
xchg
jmp
sub
retf
push
push
mov
or
add
jmp
das
popf
inc
mov
jge
sub
xchg
cld
pop
(bad)
push
xor
cmc
mov
pop
mov
fcom
dec
in
xchg
and
push
sub
repz
nop
nop
out
mov
int3
clc
jo
ret
movs
call
ins
cmp
aam
test
pop
in
pop
sbb
sbb
inc
ins
enter
inc
data16
stc
cmps
xchg
mov
adc
(bad)
aam
add
xchg
shl
pop
push
adc
adc
in
data16
add
lods
dec
jmp
xchg
push
add
sub
xchg
xchg
jmp
lods
sbb
adc
(bad)
es
pop
sub
inc
retf
mov
cmp
inc
dec
stos
jne
jp
sbb
leave
ins
mov
jnp
pushf
push
ret
cli
fbstp
dec
movs
or
(bad)
arpl
add
(bad)
mov
in
cmp
push
mov
cmp
mov
std
test
or
and
in
pop
pop
jmp
mov
mov
push
(bad)
enter
mov
aad
sub
pop
push
pop
pushf
shl
test
pop
inc
mov
mov
lds
aam
jnp
out
dec
int3
pushf
sbb
pop
mov
stc
std
pop
ins
cwde
(bad)
cmp
xlat
sti
cmp
enter
mov
in
add
mov
ja
call
and
lock
or
mov
test
mov
fsubr
test
push
retf
ins
int
xchg
sub
cmp
out
pop
add
xor
dec
ret
pop
retf
call
mov
pop
shr
xchg
fidiv
fidivr
lods
enter
or
jae
mov
inc
adc
aaa
pushf
js
shl
cli
add
sub
repnz
out
mov
cmp
xor
jl
hlt
mov
jg
mov
int
mov
mov
test
pop
add
jbe
mov
adc
sub
imul
pusha
adc
icebp
fidivr
test
cmp
ins
push
int3
ror
into
mov
cwde
xor
es
pop
fmul
std
pop
xchg
dec
mov
pop
add
push
sub
mov
cmp
push
dec
nop
je
xchg
into
xor
sub
out
jle
fnstsw
add
mov
jecxz
sub
cmp
sub
push
lods
mov
stc
ss
push
rcr
out
mov
imul
in
sub
test
frstor
aad
shr
gs
mov
add
aaa
jl
mov
js
lahf
rol
pop
sub
inc
std
or
(bad)
out
dec
cdq
sbb
jge
in
mov
xchg
das
inc
sub
arpl
fidiv
inc
adc
mov
push
sbb
ds
out
loope
ficom
add
outs
mov
into
sti
xchg
lds
cmp
(bad)
pop
pop
add
ret
push
arpl
out
jp
xor
cmp
je
add
dec
push
inc
js
repz
and
or
cdq
mov
pop
inc
sbb
test
aas
(bad)
or
cld
sub
out
add
inc
cmps
jp
imul
out
push
inc
sbb
pop
or
retf
sbb
retf
mov
loop
jae
fcom
sbb
dec
int3
mov
add
adc
mov
mov
std
scas
inc
test
sub
mov
and
sbb
lea
movs
push
(bad)
jbe
ins
or
jmp
inc
shl
aas
adc
adc
cdq
dec
pushf
jne
stc
js
push
pop
jecxz
mov
pop
dec
mov
sbb
pop
jg
mov
pop
push
sub
adc
inc
fwait
ins
into
sbb
clc
xor
test
push
dec
retf
xchg
enter
xchg
outs
mov
mov
push
xchg
retf
rcr
stos
es
or
imul
dec
test
xchg
or
clc
add
push
shl
ss
ins
enter
pop
aad
xor
mov
sub
inc
lea
bound
mov
xor
and
lods
lea
dec
push
xchg
add
cmps
xor
neg
gs
adc
rcl
xor
popf
aas
pop
pop
popf
push
out
jge
stc
mov
in
mov
enter
mov
sbb
fistp
sbb
sar
popf
iret
retf
pop
push
(bad)
int3
in
jmp
inc
jmp
jg
mov
cmc
sahf
in
(bad)
or
ret
mov
call
push
mov
dec
nop
sub
out
rol
xchg
push
xchg
fs
retf
lods
push
lahf
mov
adc
(bad)
adc
xchg
xor
fld
loopne
ins
iret
mov
adc
es
sub
push
and
pop
push
and
dec
mov
mov
ja
es
(bad)
push
mov
test
push
shr
faddp
inc
sub
push
xchg
(bad)
(bad)
and
sub
mov
mov
pop
call
popf
test
adc
add
add
cli
popa
cmp
dec
sbb
push
das
shr
dec
sbb
rcl
ins
ret
mov
xchg
jmp
test
xchg
jo
ins
sbb
js
cmp
aad
xor
ja
cmp
nop
ins
mov
lods
inc
cli
loop
jo
mov
add
fwait
push
addr16
loop
sub
jmp
fidiv
test
fstp
cmps
jg
sti
or
xchg
cmc
jo
imul
jmp
mov
mov
xor
out
fsubrp
retf
sbb
mov
xchg
mov
jge
sub
mov
iret
xchg
in
mov
pushf
mov
adc
shr
sahf
sub
fild
adc
outs
popf
loope
(bad)
cmp
pop
call
jmp
arpl
mov
retf
call
adc
inc
stc
lods
adc
test
pop
push
cmp
jns
sbb
iret
and
in
rcr
cld
test
rcr
xchg
xchg
cmp
push
pushf
rol
xchg
cli
sbb
xchg
jmp
sub
ins
imul
lahf
mov
inc
mov
jnp
adc
mov
pop
retf
jns
sbb
xchg
arpl
pushf
add
sub
jns
dec
or
(bad)
lods
dec
jmp
pop
retf
icebp
and
mov
dec
gs
call
cwde
mov
call
xchg
mov
div
mov
fnsave
sbb
lods
xchg
mov
(bad)
out
leave
pop
or
add
jns
mov
pushf
jne
mov
mov
popf
lods
in
jbe
adc
sbb
mov
ins
(bad)
and
mov
and
out
fs
dec
pop
xor
inc
mov
inc
jl
mov
push
push
cmps
loopne
fwait
and
pop
dec
ret
xor
inc
(bad)
and
bound
shr
retf
test
fucomip
div
popf
fcom
rcr
pop
pop
jmp
js
imul
push
int
(bad)
les
mov
div
test
add
aaa
xchg
movs
xor
mov
adc
jno
clc
and
repnz
jecxz
add
test
movs
cld
lds
mov
aaa
add
icebp
icebp
ret
lods
icebp
add
fcomp
retf
cli
push
mov
pushw
(bad)
inc
jmp
mov
xor
mov
push
add
fyl2x
stos
mov
jae
stc
adc
dec
dec
out
or
ds
and
femms
add
fst
cmp
cmps
mov
or
inc
mov
jno
cs
pushf
xchg
jbe
add
inc
stos
mov
sub
out
loop
daa
movs
sti
stc
loopne
in
pop
out
push
sbb
mov
lods
lock
ds
aad
data16
inc
sub
cmp
cmc
(bad)
addr16
mov
sbb
xor
aad
(bad)
push
out
ret
or
hlt
inc
loope
fstp
xor
push
sbb
inc
cmp
popf
in
lahf
ret
mov
loopne
sub
dec
into
xchg
mov
inc
or
lea
sbb
loope
enter
lea
imul
pop
in
mov
cmps
das
scas
pop
pop
adc
push
mov
(bad)
adc
mov
add
int3
pop
(bad)
adc
or
push
int3
neg
lods
daa
and
mov
cwde
inc
pop
popf
inc
fwait
mov
pushf
mov
pushf
mov
leave
ins
mov
retf
sbb
push
adc
es
mov
pop
mov
or
dec
pop
mov
cld
xchg
sub
lods
popa
push
xchg
mov
cli
mov
(bad)
cmp
or
add
das
sub
mov
cmp
sbb
inc
push
inc
into
xchg
jo
outs
jbe
push
into
fnstenv
sub
xchg
cld
movs
mov
je
stos
mov
sbb
jo
dec
(bad)
fadd
jg
iret
push
pusha
clc
fwait
mov
jecxz
(bad)
xor
and
test
ins
mov
popf
dec
mov
sbb
mov
fild
mov
out
cld
mov
xor
int
mov
sub
std
out
push
jo
adc
dec
xchg
jmp
popa
icebp
jo
mov
pop
or
aaa
aad
sub
cmp
cpuid
sar
and
daa
test
outs
xchg
jnp
movs
bound
jo
out
jmp
mov
outs
mov
scas
mov
xchg
gs
fst
sub
icebp
int3
aad
mov
mov
(bad)
pop
push
xchg
xchg
mov
jp
hlt
push
ss
mov
xor
mov
test
inc
push
dec
xchg
in
jb
dec
sub
iret
scas
outs
push
sbb
not
push
hlt
ret
loope
mov
sbb
sub
xchg
int3
in
jmp
xor
rol
mov
or
outs
clc
outs
dec
adc
push
pop
das
mov
(bad)
cdq
stos
mov
rcr
mov
das
xchg
shr
ss
dec
adc
leave
mov
cmps
pop
(bad)
in
imul
ror
inc
or
dec
sub
(bad)
cmc
popf
mov
dec
imul
movs
nop
rcl
in
jp
std
call
mov
and
(bad)
ins
aas
(bad)
aam
push
xor
pop
mov
bound
icebp
adc
xor
mov
xchg
and
xor
inc
movs
mov
sbb
les
ror
into
shl
les
pop
jbe
jl
and
jno
jno
mov
lahf
mov
scas
lahf
ret
cmp
rol
in
add
jmp
adc
jnp
ins
adc
cli
js
bound
push
add
loopne
mov
lods
cmp
add
xor
in
pusha
pmuludq
push
loope
mov
dec
push
add
pop
hlt
std
outs
dec
int3
pusha
xlat
mov
jnp
pop
cmc
push
mov
arpl
add
mov
fild
mov
test
sti
mov
mov
movs
or
inc
inc
push
cmp
daa
cmc
mov
out
jo
cmp
fcom
(bad)
xor
(bad)
xor
xchg
cli
xor
retf
inc
enter
pop
xchg
dec
std
pop
or
mov
test
stc
dec
ins
jl
or
xor
shr
in
push
push
push
aaa
xor
cli
sub
pop
loop
xchg
mov
fild
movs
jbe
loop
inc
in
fild
in
call
mov
js
iret
mov
movs
jle
loope
aam
sbb
adc
pop
dec
push
xor
stos
cli
aas
stos
pop
sbb
mov
cmp
push
repz
adc
lea
icebp
out
sbb
mov
dec
aas
fnstsw
adc
or
mov
inc
xchg
lods
mov
rol
in
adc
jecxz
mov
imul
stos
int3
dec
in
or
das
cld
mov
mov
loope
xchg
mov
pop
jae
hlt
inc
mov
out
pop
fst
ja
shl
dec
pusha
pop
sbb
test
(bad)
icebp
mov
retf
mov
mov
sahf
test
stos
push
sub
dec
lods
xor
pop
sar
popa
mov
cli
jmp
in
jecxz
sbb
out
cmp
pop
out
ins
dec
iret
pusha
leave
sub
dec
bound
(bad)
xor
data16
repnz
lea
cmp
cmp
lahf
fld
popf
mov
ret
aas
div
test
or
cmp
retf
stos
mov
sbb
sbb
jp
das
jp
adc
leave
mov
inc
call
aad
iret
xchg
ficom
push
and
sahf
or
push
aas
fild
sbb
xor
add
iret
cmps
or
popf
sbb
pop
xchg
mov
cmp
mov
shl
and
test
loope
and
inc
retf
popf
pop
jo
cmp
jnp
pop
clc
mov
inc
cmp
xchg
sub
add
ins
sub
mov
mov
mov
mov
and
cmps
mov
or
pusha
sub
xchg
jmp
jnp
retf
ss
(bad)
fistp
ins
xchg
xlat
push
inc
repz
push
dec
ds
cmp
push
and
retf
sub
hlt
jnp
std
and
or
icebp
jno
mov
icebp
cwde
mul
in
dec
cmp
xchg
sbb
sub
jmp
ja
mov
add
sbb
dec
dec
retf
fcomi
jae
and
in
leave
cmp
div
push
cmp
rcr
mov
push
rcr
(bad)
loope
aad
mov
aaa
pop
iret
retf
xchg
outs
dec
ret
add
vmovhpd
mov
pop
ror
sbb
shl
call
mov
mov
cdq
ins
fcomi
scas
vpcomb
dec
sar
bound
enter
xor
out
and
dec
popa
cmp
adc
sbb
add
ins
movs
mov
test
daa
jge
mov
mov
and
pop
imul
lahf
loope
int3
jnp
mov
mov
mov
cld
je
repz
and
mov
out
pop
push
or
das
fdiv
das
call
repnz
push
mov
cmp
adc
outs
movs
test
sti
lock
scas
push
stos
hlt
cld
xor
scas
aas
pushw
nop
sbb
inc
push
push
adc
xchg
xchg
in
add
jge
dec
inc
mov
mov
xchg
mov
or
ss
aad
cmp
iret
cmp
loop
lahf
sbb
imul
xchg
push
test
sbb
pop
lods
add
adc
mov
and
add
push
rol
mov
rcl
xchg
pop
add
dec
ret
ret
pusha
and
pushf
fwait
and
lds
test
and
sub
stos
and
or
call
div
fsubp
dec
and
fistp
adc
xlat
hlt
bound
jmp
mov
cwde
or
push
std
mov
fst
in
cld
dec
ror
lock
jecxz
(bad)
or
push
dec
inc
pop
test
adc
mov
leave
jg
jae
outs
add
dec
movs
pop
lock
ja
sub
cld
je
or
or
mov
sbb
loop
inc
add
mov
sub
pop
out
add
jmp
sub
mov
jg
pop
aaa
jb
out
mov
call
jg
arpl
in
test
adc
scas
in
jns
adc
fbstp
ins
mov
jmp
js
vmread
push
jne
aas
lods
sbb
jmp
fistp
add
test
inc
out
or
imul
mov
cmps
mov
lock
pop
movs
sbb
jne
xor
push
xor
adc
in
dec
jne
in
rol
test
add
add
scas
jae
loopne
out
mov
ds
xchg
mov
or
adc
inc
pop
mov
mov
imul
jecxz
retf
lds
cdq
xor
lods
or
inc
dec
dec
ftst
sbb
push
mov
ins
std
addr16
imul
in
cmc
rol
bound
cs
in
neg
sbb
ss
repz
ja
xchg
mov
(bad)
sbb
inc
(bad)
(bad)
data16
in
cdq
fwait
out
movs
or
sahf
push
sar
xor
popf
xor
aam
mov
pop
xchg
sub
push
mov
push
xlat
rcr
jo
stos
inc
dec
push
cmc
xchg
dec
mov
out
jmp
xchg
mov
jo
mov
into
and
or
push
xchg
push
xchg
cli
(bad)
loope
cmp
pop
adc
daa
push
jno
sbb
adc
test
hlt
ins
inc
push
loope
or
(bad)
jp
cmp
adc
jge
mov
jno
test
sar
cmp
jbe
(bad)
fimul
ins
es
mov
iret
xchg
inc
cmp
arpl
jns
aad
je
ds
mov
dec
dec
rcl
int3
enter
xchg
pop
mov
and
push
sub
fsubr
add
sahf
out
hlt
repnz
jmp
rcr
fild
int
je
retf
rcl
mov
xchg
mov
repz
lods
inc
push
mov
xchg
in
add
sbb
mov
stos
(bad)
ja
jns
inc
pop
xor
fnstenv
inc
mov
stos
pop
push
fs
(bad)
cmp
xor
push
mov
xchg
mov
adc
cmps
push
xor
add
std
(bad)
in
mov
test
ds
mov
or
xor
and
test
mov
xchg
mov
pusha
mov
cmp
pop
dec
cmps
scas
mov
shl
sbb
sti
xor
jl
std
pop
test
mov
and
xchg
test
imul
push
cmp
sbb
stc
shl
fistp
or
sub
out
inc
inc
lea
ror
xchg
jmp
into
xchg
daa
jle
sub
loope
shl
out
clc
cwde
fimul
test
lea
lds
data16
in
cmp
popa
or
sub
cmp
jp
or
scas
push
arpl
cmp
call
shl
mov
pushf
mov
ds
int3
shl
adc
xor
push
jns
xchg
(bad)
jns
(bad)
stos
jg
jne
mov
mov
fbld
fist
das
adc
jne
loope
dec
sub
jg
div
mov
test
in
adc
push
push
mov
cld
imul
jns
cld
jmp
icebp
test
mov
lea
aam
lock
jb
(bad)
cmp
cmps
mov
aas
push
(bad)
hlt
cwde
mov
cmp
aas
adc
push
cmp
dec
add
sbb
sub
cmp
mov
add
xor
sub
xor
xchg
push
dec
jg
outs
ror
push
mov
fild
push
lods
mov
push
ficom
cmp
div
xlat
pop
inc
shl
inc
sub
pop
pop
xchg
gs
icebp
jl
cmps
test
xor
push
loope
xor
mov
push
rcl
mov
jne
test
cs
fld
push
(bad)
mov
or
cwde
pushf
in
dec
xchg
movs
push
pop
mov
test
push
xor
xor
shl
das
add
xor
inc
add
sub
xchg
jmp
test
sbb
in
rcr
das
push
cmp
add
pop
aam
sti
pop
push
hlt
aas
cmp
cs
loop
aas
cmp
data16
jmp
adc
jge
xor
cmp
or
imul
pusha
xor
sub
xor
inc
push
add
add
dec
int3
sub
out
inc
mov
(bad)
cmp
ja
dec
sar
aam
pushf
out
cmp
or
lea
call
pop
lock
mov
jns
aas
push
(bad)
xchg
pushf
daa
and
mov
push
out
xor
dec
sub
sub
cmp
jae
push
sub
jb
out
(bad)
xlat
inc
xchg
lods
xchg
mov
xlat
or
pop
js
movs
data16
das
stos
push
(bad)
pop
fdivr
xchg
jmp
int
movs
cmp
mov
cs
repnz
jecxz
stc
jp
jp
jnp
jbe
bound
xor
mov
(bad)
fwait
jl
test
loop
call
add
jmp
cmp
scas
jg
add
ret
test
aam
in
call
or
das
push
ins
mov
mov
push
into
push
xchg
jne
mov
loope
add
adc
or
inc
jns
jl
popa
add
jae
xchg
movs
push
lods
cmp
mov
out
inc
cs
inc
daa
(bad)
fsubr
cdq
add
inc
and
(bad)
iret
jae
push
dec
push
inc
fisttp
jbe
mov
mov
mov
pop
pop
test
rcl
cmps
push
lods
scas
add
icebp
pop
pop
add
sub
movs
mov
inc
sbb
fiadd
stos
out
dec
push
xchg
adc
iret
jl
imul
fimul
cmps
call
inc
iret
dec
mov
inc
data16
push
jmp
ins
xchg
les
jl
push
sbb
mov
sti
pop
adc
nop
mov
int
out
jge
pop
jecxz
push
pop
pusha
retf
out
int
pop
pop
(bad)
ja
pushf
dec
ret
pop
arpl
sbb
daa
mov
xchg
and
loop
aam
in
jns
jne
pop
inc
retf
cmp
dec
push
push
shr
lods
arpl
xor
mov
scas
dec
mov
add
xchg
mov
push
pop
rol
daa
push
push
add
and
ret
jecxz
aaa
mul
cmps
retf
shr
cmc
rcr
jmp
mov
rcl
sub
push
and
bnd
rol
adc
outs
or
xlat
and
mov
fdivr
jb
xor
inc
adc
jg
loop
add
xchg
lahf
inc
(bad)
mov
xor
pop
and
retf
(bad)
ins
dec
adc
xchg
mov
inc
mov
out
mov
sbb
mov
xor
dec
aam
mov
out
fwait
pop
nop
in
pop
loop
xor
push
shr
or
arpl
aas
jmp
out
sti
jnp
fs
xchg
mov
scas
fstp
xor
das
scas
inc
or
add
sub
fstp
imul
sbb
pop
dec
repz
or
in
sbb
xor
cmp
push
mov
and
movs
and
push
movs
jae
pop
push
ja
lahf
cwde
rcl
in
scas
mov
(bad)
jmp
inc
scas
xlat
imul
xor
shl
loope
scas
in
and
repz
inc
or
mov
jl
and
jmp
fsub
js
in
inc
iret
push
(bad)
and
mov
repz
lods
or
ret
out
xor
jnp
imul
xchg
test
pop
fisubr
retf
test
sbb
test
rol
sub
dec
and
movs
mov
and
and
cmc
movs
iret
xor
pushf
pop
cmp
jmp
xlat
hlt
shr
xor
push
xchg
in
dec
push
call
adc
jbe
sbb
adc
adc
ja
outs
pop
test
xor
xchg
push
cmc
aam
fisubr
ins
fst
mov
repz
inc
aad
adc
sti
jnp
int3
mov
push
int
jecxz
cwde
push
add
loope
int3
pop
mov
jns
(bad)
rcr
retf
iret
sti
addr16
mov
add
jbe
fistp
inc
sbb
cmp
and
out
mov
ror
loope
iret
sub
stc
fild
mov
inc
out
call
dec
mov
dec
add
adc
xor
into
and
aas
popa
and
leave
enter
mov
jae
and
jg
jbe
or
mov
and
adc
sar
jge
cmc
lds
adc
mov
mov
or
adc
je
mov
cli
inc
mov
sbb
or
jnp
jno
push
imul
test
pop
in
mov
adc
lds
jno
jle
inc
sub
mov
repnz
push
movs
push
mov
inc
jl
bswap
(bad)
cs
sbb
sub
movs
ins
xchg
loop
int3
pop
inc
loopne
push
(bad)
repnz
nop
dec
push
mov
cld
call
sub
inc
push
cwde
mov
jae
movs
dec
pop
sbb
jle
mov
sbb
jge
pop
fs
sbb
sbb
dec
out
sub
(bad)
scas
or
shr
sbb
shl
movs
pop
mov
dec
(bad)
das
fnstsw
outs
imul
inc
fldenv
add
pop
adc
adc
ss
xchg
sbb
aaa
mov
sbb
test
add
xlat
lock
fld
ds
aad
xchg
push
inc
je
mov
push
call
icebp
icebp
arpl
dec
jno
ins
je
pop
xor
sbb
popf
cwde
dec
lock
add
push
repz
sbb
xchg
xchg
xor
test
stc
add
mov
ret
shl
shl
push
mov
call
loop
sti
push
pop
ins
mov
dec
mov
test
dec
dec
mov
in
xchg
repnz
dec
or
ficom
enter
pop
sbb
stos
mov
jo
sbb
nop
das
or
pop
add
mov
or
or
stos
pop
lods
sbb
in
and
sub
or
cmp
jmp
das
lahf
dec
pushf
sahf
mov
xor
xchg
or
mov
adc
pusha
fist
add
hlt
rcr
add
xacquire
adc
pop
sbb
call
sub
inc
add
popf
mov
sub
or
mov
xchg
inc
mov
movs
add
pop
add
cmc
push
dec
mov
popf
mov
mov
sbb
dec
dec
push
icebp
ja
mov
sub
rol
lock
(bad)
aas
aam
pop
repnz
add
mov
push
icebp
out
jmp
out
sub
mov
inc
xchg
stos
xadd
xchg
enterw
cmps
jae
lds
mov
add
pushf
push
mov
enter
(bad)
repnz
test
xor
lods
vmulps
mov
ja
xor
mov
je
push
inc
out
vmwrite
test
cmp
mov
sbb
mov
stos
(bad)
or
sub
mov
sub
mov
sub
sahf
push
out
in
movs
cmp
push
ins
jle
das
mov
icebp
cld
cmps
scas
arpl
cmp
shl
es
(bad)
add
lea
sub
inc
mov
mov
jbe
iret
sar
mov
sub
xchg
not
jmp
fldcw
add
inc
mov
mov
int3
test
int
test
jg
nop
mov
jnp
mov
(bad)
aad
jne
jae
jnp
dec
and
aad
ds
push
adc
iret
ins
adc
je
jno
jne
jg
xor
les
inc
xor
jns
imul
sbb
fnsave
je
inc
push
stos
ins
das
repz
ret
and
xor
test
js
mov
cld
sub
inc
rol
add
clc
push
pop
addr16
or
repnz
add
cmp
pop
enter
cmps
mov
fcom
xchg
ins
and
push
sahf
or
mov
sbb
(bad)
push
dec
das
dec
xor
mov
adc
xchg
(bad)
sti
dec
inc
clc
mov
shl
or
xchg
loopne
cmp
dec
xchg
aam
ja
push
mov
mov
je
ret
sar
dec
inc
aas
into
inc
(bad)
pop
test
xor
(bad)
fstp
mov
xchg
xchg
test
mov
jns
(bad)
sub
pop
fwait
call
adc
adc
jp
sbb
test
aaa
xchg
sub
ins
sahf
jne
mov
jp
sub
add
test
push
shl
scas
movups
mov
ins
leave
shl
lock
dec
or
ja
dec
and
push
adc
xchg
mov
stos
pop
cmps
jnp
cmp
mov
jl
mov
inc
movs
scas
stc
dec
adc
cld
mov
shr
lds
xor
std
iret
das
mov
es
mov
sub
jl
inc
xor
add
fwait
sti
cmp
data16
mov
shl
xor
and
xchg
xchg
retf
mov
cmps
push
stos
sbb
scas
mov
movs
mov
inc
xor
jecxz
lods
dec
push
test
idiv
adc
adc
jge
jo
mov
pop
xchg
std
cmp
call
ss
imul
sbb
mov
fs
ja
add
dec
fdivr
adc
out
mov
push
outs
mov
push
or
rcl
adc
push
mov
inc
sub
xchg
mov
jmp
retf
add
xchg
push
push
fisttp
jbe
gs
and
fst
outs
stc
and
pop
imul
int
inc
cmps
test
cmc
sub
pop
lock
outs
js
jmp
imul
arpl
scas
dec
hlt
xchg
enter
mov
xor
fidivr
pushf
xlat
fistp
lahf
pop
retf
mov
mov
mov
(bad)
stc
push
cmp
(bad)
xor
rol
addr16
or
and
dec
lods
mov
data16
xor
test
mov
mov
cli
les
cmp
pusha
sub
add
movups
movs
jp
je
xor
cmps
inc
daa
fadd
std
and
pop
int3
dec
ds
inc
adc
out
(bad)
xchg
inc
loope
adc
in
or
xor
(bad)
fcomp
inc
pop
jnp
lods
or
adc
call
jmp
jl
push
fxch
adc
call
imul
ret
mov
ret
push
inc
cld
(bad)
movs
adc
cld
cli
data16
or
xchg
push
sar
lea
inc
mov
shl
xor
loope
mov
ins
(bad)
mov
mov
test
mov
jecxz
xor
addr16
test
gs
add
or
xor
bound
scas
mov
or
rol
xor
sub
call
retf
imul
imul
imul
lahf
cmp
arpl
or
xrstors
sub
je
int
jp
jg
lods
inc
push
and
loopne
lea
xchg
dec
mov
xor
test
inc
je
add
jecxz
lock
dec
push
inc
xor
pusha
pop
mov
dec
jns
push
cdq
jo
jns
adc
shl
ss
outs
cmps
gs
ss
jmp
jo
adc
pusha
iret
xchg
rcr
gs
(bad)
movs
sub
fsub
xlat
js
jle
inc
dec
adc
add
adc
loope
inc
gs
mov
pushf
and
pop
loopne
rcl
fs
xchg
inc
rcl
cwde
add
add
push
lods
cmc
add
cmps
jmp
popa
and
dec
hlt
test
sbb
pop
imul
clc
inc
or
out
ins
dec
in
cmp
cmp
inc
push
xor
repz
cmps
inc
ret
xchg
jno
push
jb
movs
mov
div
stos
loope
inc
push
out
les
sbb
hlt
cmp
into
outs
pop
cdq
pusha
jmp
adc
mov
ret
adc
cmp
dec
jo
ins
int3
push
sbb
imul
or
imul
pop
fs
dec
push
mov
pop
and
push
ds
jmp
push
in
sbb
ins
(bad)
mov
dec
inc
outs
mov
xchg
cmp
rol
dec
cmp
icebp
lahf
in
out
stos
jns
out
and
mov
xor
outs
sbb
sbb
out
dec
scas
stos
sub
pop
js
push
sbb
mov
adc
inc
push
cmps
pop
test
add
aaa
lahf
cmp
(bad)
sti
jmp
out
inc
fsubr
sbb
stc
add
push
sbb
fcomip
lahf
into
add
push
sub
(bad)
outs
(bad)
hlt
pop
daa
jmp
(bad)
and
dec
clc
(bad)
push
inc
(bad)
ror
in
leave
sbb
out
or
mov
popf
mov
ret
or
sets
sti
popf
movs
es
stc
jle
jno
fstp
push
adc
add
and
and
sub
(bad)
js
push
ret
lods
(bad)
cmp
and
xlat
jbe
stos
out
add
push
imul
dec
xchg
std
cmp
(bad)
mov
jp
pusha
add
add
retf
je
mov
aas
jp
sahf
call
cmp
mov
cmp
jl
stos
fidiv
xchg
xor
xchg
xchg
jecxz
jno
ret
sbb
inc
xchg
xchg
(bad)
push
push
push
stos
inc
sub
(bad)
aaa
adc
mov
in
xor
(bad)
shr
adc
sub
rol
lods
lock
into
pusha
dec
packssdw
aaa
jmp
pop
dec
aam
out
adc
fmul
cmovl
or
gs
pop
xor
xor
ffree
lahf
int3
imul
pushf
cdq
xchg
fdivp
adc
movs
jne
jmp
mov
cmps
(bad)
(bad)
mov
out
and
cli
cmp
test
push
ror
push
loop
cmp
stos
fisttp
mov
jnp
ret
pop
repz
loope
cmp
out
aad
cmp
inc
mov
push
xchg
outs
mov
jno
mov
(bad)
mov
outs
push
lds
cli
or
jge
cmp
ins
imul
jns
icebp
mov
sbb
sbb
aaa
movs
sbb
mov
lods
adc
loop
pop
push
jl
ror
fld
in
les
pop
dec
mov
push
dec
mov
sbb
mov
cs
aad
xchg
sbb
add
(bad)
test
iret
mov
jb
stc
mov
(bad)
push
cmps
scas
xchg
cmc
cmp
int
(bad)
mov
and
xor
scas
mov
imul
xlat
ret
or
stc
mov
lods
inc
gs
mov
repz
aas
pop
add
stos
jp
call
push
inc
fiadd
loop
xlat
lock
cmp
xor
int3
jl
mov
push
push
into
(bad)
add
jbe
test
daa
and
sub
adc
or
(bad)
push
fbstp
sti
int
pop
or
adc
xchg
das
stos
call
inc
sub
pop
xor
push
hlt
xor
movs
add
arpl
loope
sub
loope
sub
cmp
cmc
not
sbb
out
out
dec
cmp
or
xchg
aad
ffree
sub
pop
mov
mul
mov
into
xchg
pop
jmp
pop
shl
ss
call
cmp
xchg
out
fidivr
or
loopne
sbb
rol
out
jae
pop
pop
jb
push
fnstcw
jne
sub
cwde
xlat
fld
adc
xor
jb
fdiv
std
jle
les
xchg
mov
gs
sbb
sbb
dec
ins
jb
sub
mov
(bad)
ds
loop
das
inc
bound
stc
sbb
rcl
ret
inc
mov
rcr
int3
or
and
sbb
ficomp
dec
push
imul
add
data16
dec
push
adc
movs
xchg
enter
ja
mov
loopne
leave
(bad)
inc
out
xor
sar
xchg
push
xor
outs
and
loopne
push
mov
loopne
rcr
cwde
push
cmp
ja
or
int
inc
mov
sahf
adc
clc
addr16
or
jecxz
and
fld
ret
mov
add
or
sub
and
push
call
ins
xchg
and
sub
cmp
mov
mov
sbb
or
sti
cmps
sub
pop
cmp
pop
popa
repnz
mov
cdq
or
xchg
test
xchg
sbb
cli
(bad)
adc
fidiv
je
test
push
cs
pop
jmp
stos
cdq
inc
add
pop
xchg
fmul
fist
loopne
and
aas
das
sub
mov
arpl
pop
int3
sub
add
repnz
fistp
jp
adc
push
iret
sub
ficom
es
in
(bad)
or
pop
or
or
das
xlat
(bad)
mov
mov
int3
xor
popf
inc
xlat
sbb
push
(bad)
in
cwde
sub
mov
mov
inc
add
shr
mov
dec
or
mov
ret
repnz
lods
(bad)
out
js
cmps
xor
stc
adc
mov
iret
xchg
iret
cmp
sub
mov
loopne
adc
hlt
pop
out
test
jno
(bad)
or
shl
leave
dec
mov
pop
fisttp
mov
inc
jo
or
sti
popa
push
and
adc
test
repnz
in
push
mov
jecxz
rcr
add
pop
mov
xchg
mov
and
pop
cmps
pop
mov
mov
dec
mov
hlt
xor
outs
inc
aas
das
clc
out
and
push
cmps
mov
retf
or
mov
inc
inc
sub
dec
cli
enter
out
jg
arpl
mov
or
scas
or
out
data16
mov
pop
push
sbb
sub
mov
sti
jnp
jmp
mov
out
sbb
(bad)
fistp
jns
adc
xchg
ds
pop
out
fcomp
cs
lea
xor
pop
sar
mov
and
or
sbb
jnp
cli
(bad)
xor
sahf
inc
(bad)
fiadd
push
lock
or
push
or
sub
add
data16
cmps
xor
repz
ret
in
dec
fst
mov
js
sti
add
pop
sbb
push
xor
fisttp
je
retf
pop
jecxz
or
mov
pop
ret
retf
push
mov
jno
adc
and
xchg
mov
xchg
mov
clc
dec
and
lods
hlt
or
lods
jmp
stos
xlat
test
aad
pushf
test
dec
cmp
and
mov
pop
test
mov
push
js
push
retf
mov
scas
jmp
add
or
jge
in
and
cmp
cs
test
jp
comiss
cwde
addr16
jne
jae
or
popf
clc
and
pop
fcmovne
(bad)
and
scas
adc
add
inc
lahf
sti
ja
adc
repnz
adc
sub
adc
ret
push
cmps
xor
jnp
cli
scas
mov
dec
daa
aam
pop
sahf
mov
retf
sti
push
and
leave
push
or
push
sti
push
(bad)
scas
cs
rcl
clc
add
fnstsw
inc
dec
cmp
ficomp
sbb
call
fnstsw
sub
aad
test
shr
icebp
stos
cdq
jnp
jge
xor
fmul
sub
push
in
daa
cwde
in
push
fist
pop
cli
std
cs
sbb
xchg
push
movs
js
test
scas
xchg
push
nop
lds
push
cmp
inc
(bad)
pop
and
and
mov
std
or
daa
ja
push
out
push
int3
scas
jns
scas
sub
sbb
mov
push
stos
imul
jmp
sub
loop
push
mov
dec
jnp
ins
retf
pop
dec
movs
rol
cmp
xor
(bad)
mov
push
fisub
dec
and
add
jo
imul
pop
inc
mov
add
or
xchg
push
cld
xor
push
add
xchg
add
sbb
(bad)
cmc
and
sti
pop
add
jb
sbb
cs
push
iret
mov
xor
sbb
sar
into
mov
test
test
ja
mov
and
dec
outs
js
jmp
fidiv
call
xchg
cdq
popa
adc
in
ja
imul
push
arpl
adc
dec
loopne
lahf
mov
and
mov
mov
gs
sub
cmc
test
je
lea
dec
pop
or
xchg
cs
not
mov
dec
push
dec
push
mov
mov
sbb
lods
loope
add
(bad)
fnstcw
or
push
cmp
mov
mov
sub
jnp
es
dec
out
gs
arpl
inc
xor
sub
jae
pop
and
aas
dec
cmp
in
out
mov
out
lock
mul
test
lods
fild
enter
adc
popa
lds
xchg
mov
rol
mov
mov
div
dec
jmp
dec
add
(bad)
aas
mov
mov
or
neg
cld
or
add
scas
(bad)
in
push
add
xor
push
sub
call
mov
pop
dec
jmp
jge
aad
call
das
ffree
arpl
repz
loopne
mov
xchg
ds
xchg
dec
and
xchg
rcr
mov
push
dec
push
sub
sub
add
int3
cli
inc
mov
mov
xor
lds
and
dec
pushf
popa
dec
and
add
into
test
jge
aaa
out
imul
push
mov
inc
dec
add
dec
or
adc
(bad)
sti
dec
ins
jl
add
jbe
loope
mov
imul
or
push
sbb
sbb
pop
mov
mov
sbb
sub
jge
ret
inc
(bad)
jmp
inc
push
out
xor
retf
adc
mov
scas
and
loope
pop
dec
mul
outs
clflush
or
cmp
shr
shr
aaa
xor
retf
xchg
arpl
(bad)
pop
xchg
mov
fcomip
aaa
cli
jb
pop
movs
xor
stc
rcl
cli
(bad)
push
je
aad
sub
sbb
inc
cmp
cmps
sbb
dec
popf
cmp
iret
stc
movd
loope
or
ja
fnstenv
out
ins
mov
mov
(bad)
out
pusha
shl
stc
es
push
loope
(bad)
jl
imul
adc
push
std
cs
inc
cmp
(bad)
jns
xchg
nop
shl
pop
xor
fs
inc
mov
add
xor
or
rcr
pusha
cwde
mov
adc
aaa
xchg
inc
lahf
(bad)
out
xchg
and
mov
lods
(bad)
aas
jae
sbb
jle
popf
mov
ins
sbb
xchg
or
ret
sar
jmp
outs
jl
push
mov
xor
cs
cmp
(bad)
out
sub
aad
mov
bound
jne
jecxz
add
das
mov
stos
ins
ss
cmps
cmc
ror
xor
jl
push
test
imul
mov
out
int
mov
push
movs
cmp
sub
or
or
sbb
lods
(bad)
or
mov
sbb
push
push
xchg
icebp
sbb
in
jae
imul
stos
dec
call
popf
in
jmp
jl
mov
sbb
outs
(bad)
add
xor
xor
add
in
lea
mov
bound
mov
and
stos
call
imul
int3
jae
pop
xor
mov
sbb
mov
sbb
pop
lds
xchg
sti
int
call
jns
movs
inc
adc
pop
lea
push
in
add
aas
push
ficom
push
out
xchg
xchg
hlt
push
mov
aas
xchg
push
aas
xor
adc
ret
enter
adc
retf
shl
sti
xor
pop
xlat
movs
inc
aad
or
shl
push
and
les
and
or
inc
aaa
sti
repz
stos
xor
sbb
push
repz
xchg
dec
addr16
in
sbb
imul
adc
sbb
mov
jns
or
sbb
mov
sahf
aad
popf
pushf
hlt
(bad)
cmp
dec
bound
ror
sbb
adc
pop
jmp
add
retf
mov
pop
out
adc
out
mov
bound
xor
or
xchg
clc
(bad)
(bad)
inc
fyl2xp1
retf
pop
inc
adc
mov
xor
push
xchg
or
pop
movzx
sbb
(bad)
sub
(bad)
call
inc
(bad)
fcmove
(bad)
fsubr
push
call
(bad)
lock
mov
xor
aad
pop
ins
cmp
mov
cld
in
fistp
aam
lods
(bad)
mov
not
movs
mov
je
xchg
dec
arpl
push
inc
stos
pop
in
adc
daa
or
xor
push
pop
or
jmp
xchg
dec
mov
outs
cmc
fstp
mov
add
dec
jge
stc
loop
not
xchg
mov
pop
das
cmp
repz
nop
fldenv
into
lock
mov
xchg
push
fisttp
push
xchg
xchg
xchg
stc
aad
ficomp
icebp
mov
sub
add
jno
sbb
imul
or
add
cdq
add
and
xor
jno
xchg
shl
icebp
or
std
xor
enter
outs
or
ret
xchg
add
xor
call
xor
push
or
sbb
jl
jp
mov
lea
daa
sub
jmp
jp
jle
test
push
hlt
jnp
xchg
sar
mul
mov
(bad)
pop
repnz
aas
jae
sbb
fwait
ins
mov
jmp
add
(bad)
mov
mov
scas
adc
cmps
xlat
inc
dec
aas
lods
sub
daa
mov
test
loopne
cmp
sbb
jne
int3
retf
push
aad
or
cmp
inc
adc
xor
dec
inc
shl
repz
push
add
call
jnp
mov
mov
xchg
call
es
stos
ss
pushf
pop
cmp
hlt
jl
add
fistp
adc
xchg
and
pusha
pop
jne
jns
mov
or
ficomp
fs
and
outs
mov
cmp
js
inc
jo
xchg
les
mov
dec
int3
pop
(bad)
test
adc
inc
adc
rol
push
mov
xchg
inc
aas
pusha
pop
(bad)
sub
adc
bnd
xlat
or
repz
call
aaa
fbld
or
inc
push
test
(bad)
ficom
cwde
lods
sbb
bound
adc
push
loopne
jae
in
add
adc
fild
and
mov
sbb
pop
push
(bad)
jbe
cmp
fadd
jecxz
cmp
push
mov
sub
add
cwde
add
mov
and
add
xor
mov
(bad)
lock
and
fsub
sahf
and
jl
sub
inc
div
cmp
call
aas
mov
pushf
xchg
aad
cmp
pusha
xor
test
ret
fistp
jns
repz
test
mov
pop
or
mov
pop
jno
push
retf
retf
imul
xchg
mov
or
test
xor
shl
jg
jae
daa
aad
sbb
fs
adc
in
out
fcom
scas
xor
jmp
imul
add
shl
in
cmp
sub
jo
pop
imul
pushf
jne
push
jbe
xchg
ror
push
bound
sbb
xchg
aam
rol
mov
loopne
mov
repnz
adc
ja
xchg
retf
daa
jbe
fwait
pop
xor
jmp
push
mov
cmps
clc
mov
add
sar
stos
cmp
pusha
ret
xor
push
fs
int3
or
mov
adc
inc
mov
imul
cdq
dec
xchg
stos
fs
gs
fmul
aam
inc
imul
daa
inc
test
jle
mov
aam
in
push
inc
scas
and
mov
test
mov
mov
fnstsw
mov
jg
xchg
dec
mov
movs
dec
ds
icebp
dec
cwde
aaa
xchg
pop
push
sub
or
(bad)
das
push
ucomiss
test
sbb
mov
out
dec
popa
cmps
lds
mov
stos
jp
adc
sub
fsubr
xor
lds
pop
pop
outs
in
ret
jno
pop
inc
lods
mov
pushf
xchg
push
push
dec
jg
and
sbb
leave
xlat
mov
adc
cmp
int
loop
ss
push
(bad)
addr16
xchg
pop
popf
in
jae
cmp
xchg
aaa
test
retf
dec
outs
in
aaa
int3
fistp
mov
por
mov
outs
mov
mov
repz
mov
mov
mov
push
add
mov
das
dec
ret
cld
push
call
adc
sub
lods
addr16
fmul
enter
sbb
push
sbb
mov
inc
adc
pop
push
sti
rcl
jne
stos
jge
xchg
sub
mov
xor
loop
sbb
jns
sub
push
inc
mov
js
(bad)
xchg
inc
adc
push
xlat
nop
jno
adc
mov
out
xchg
xchg
or
clc
int
and
pop
loop
dec
and
test
jns
imul
mov
retf
lds
jmp
sbb
push
stc
pop
cmp
sub
push
xor
push
inc
stos
add
fist
xor
push
and
sti
mov
cmc
inc
popa
into
mov
push
sar
fwait
cmp
xor
mov
adc
fwait
push
fisubr
not
push
(bad)
outs
inc
imul
seto
fidiv
gs
push
(bad)
sti
sar
sbb
fild
call
push
ins
rol
ret
retf
cmps
call
mov
rol
mov
xchg
inc
xchg
fs
ror
and
int
push
fbstp
push
fucomi
cmp
gs
ret
add
aam
inc
fdivr
mov
shl
das
fimul
dec
pop
pop
das
sub
cld
push
xchg
sub
and
add
xchg
inc
loop
fsubr
sbb
rcl
jo
add
xchg
icebp
push
jp
dec
dec
lds
mov
jecxz
test
outs
xor
fs
cmp
push
daa
not
cmp
push
(bad)
lock
mov
repnz
pop
pop
xchg
sbb
push
call
or
es
mov
ins
mov
shr
xor
outs
retf
jo
lea
jg
jmp
xlat
pop
jmp
rcr
scas
ds
retf
sar
dec
dec
or
add
mov
popa
or
or
pop
mov
stos
aad
mov
(bad)
jne
repz
sub
pop
and
int
mov
ins
mov
xchg
pop
(bad)
cmps
sub
ins
or
lock
iret
mov
dec
je
add
lods
pushw
shr
out
pusha
shrd
and
pop
addr16
sbb
jmp
sub
mov
in
iret
inc
dec
xchg
movs
enter
call
and
lds
xor
retf
sti
shr
out
jg
sti
xor
mov
sub
imul
cmp
push
bound
xor
(bad)
lds
fild
(bad)
(bad)
or
pop
frstor
test
int
jmp
dec
das
jmp
jge
adc
add
aas
and
or
push
lea
adc
add
xchg
and
or
je
fnstcw
mov
jmp
ins
cmps
inc
sub
cmps
sbb
sub
enter
mov
xor
shl
cmp
jmp
push
xor
dec
fst
pop
ss
daa
bound
repz
pop
aas
(bad)
retf
push
in
adc
pop
push
or
fwait
nop
cmp
movs
and
stos
mov
cmps
pop
imul
inc
jb
or
mov
inc
jne
sbb
inc
dec
push
jno
test
das
add
mov
or
sbb
popa
mov
sbb
rcl
outs
(bad)
mov
outs
(bad)
push
mov
neg
pop
shr
in
push
call
inc
repz
add
mov
pop
inc
stos
cli
cmp
xor
or
pop
rcl
in
adc
inc
add
mov
lods
sub
or
int3
add
movs
mov
or
dec
dec
jbe
fldcw
shl
das
mov
clc
pop
and
(bad)
cmp
fucomp
xor
out
aam
and
add
push
or
cmp
sub
sbb
mov
adc
sbb
jmp
fisubr
dec
push
test
icebp
inc
mov
adc
call
hlt
xor
dec
jg
cmp
push
pop
loopne
cmp
pop
inc
mov
adc
mov
ins
mov
loope
xchg
mov
mov
mov
in
je
sbb
jb
dec
test
fsubr
popf
shr
dec
fisttp
jo
sbb
fs
int3
cmp
xchg
push
fistp
cmps
cmp
mov
lahf
mov
mov
mov
xchg
jae
sub
xchg
sahf
dec
cdq
mov
cmc
lds
or
cmps
fild
imul
scas
iret
sbb
cmp
into
ins
jbe
inc
movups
push
leave
mov
dec
(bad)
cmp
shl
(bad)
jmp
and
mov
(bad)
inc
pop
sub
mov
inc
pop
push
inc
pop
push
repz
data16
push
add
xor
and
lods
ja
push
xchg
ror
xor
cmp
push
leave
cmp
mov
pop
fbstp
xchg
and
in
fsub
ins
les
bound
bnd
leave
add
(bad)
add
mov
jno
xchg
fsub
xchg
dec
retf
dec
pop
xchg
dec
add
push
nop
loop
fild
add
(bad)
addr16
je
jecxz
or
pusha
inc
test
adc
movs
loop
add
jbe
sbb
pop
loopne
and
cdq
pushf
xchg
ja
in
adc
rcr
fucomp
imul
cmc
add
call
add
shl
sub
jle
lahf
inc
jmp
xchg
out
hlt
imul
das
pop
mov
cwde
movd
mov
or
sbb
icebp
jp
retf
xor
push
adc
xor
push
inc
and
loopne
sbb
pusha
xor
in
nop
cmp
das
pop
pop
stos
test
(bad)
punpckhdq
ret
pop
cmp
dec
add
rcl
push
sbb
fisttp
inc
adc
push
inc
add
sub
test
and
dec
mov
lock
pop
or
mov
lock
xchg
leave
loop
nop
sar
xchg
push
cmp
daa
es
popa
xchg
adc
dec
adc
inc
mov
les
ret
cmps
sbb
push
jecxz
sub
jmp
cmp
or
sahf
adc
xlat
and
clts
inc
adc
(bad)
pop
and
stc
mul
lock
or
mov
sub
cmc
cmps
jb
pop
(bad)
retf
or
jge
push
and
jne
xor
xchg
push
push
fdivr
inc
in
jle
or
inc
adc
mov
retw
push
mov
jmp
push
mov
data16
sub
mov
sub
mov
and
xor
out
loope
cmp
test
and
lds
pop
(bad)
stc
jecxz
rcl
clc
mov
div
jmp
push
and
loope
in
lods
push
aam
out
ret
sub
cmp
test
ret
dec
or
mov
dec
rol
sub
xor
push
jns
pop
lds
xor
(bad)
je
nop
sbb
mov
jg
mov
shl
inc
jmp
and
or
mov
arpl
jns
sahf
xchg
mov
mov
int
inc
(bad)
and
enter
xchg
(bad)
cmp
pop
in
std
xor
aad
sub
ds
add
inc
pop
inc
sbb
arpl
sbb
push
popf
jmp
add
loopne
pusha
fsub
mov
xor
push
mov
not
jp
scas
cmps
sbb
adc
js
or
adc
js
pop
or
addr16
sub
enter
mov
xlat
pop
loopne
mov
dec
and
nop
inc
(bad)
aam
xor
popa
and
shl
call
xchg
jge
sti
movq
jecxz
mov
mov
sbb
test
jns
cmps
cli
out
movs
cmp
fbstp
inc
cmp
and
stc
xchg
in
xchg
pop
cmps
clc
sar
outs
inc
call
or
or
xchg
inc
scas
xchg
adc
pusha
mov
lods
inc
call
aaa
mov
psubd
mov
mov
std
and
cli
mov
aas
ins
das
xchg
xchg
cwde
pop
xchg
int
fnsave
ret
mov
pop
cmp
outs
repnz
jle
int
jbe
push
(bad)
mov
pop
mov
cld
aas
rcl
cmp
push
mov
jb
pop
dec
inc
movs
aas
add
mov
xchg
cmp
stos
inc
outs
dec
pop
lock
sbb
iret
mov
and
dec
sbb
test
xchg
push
xchg
int3
or
sbb
cli
cmp
sbb
mov
mov
stos
add
pop
dec
xor
loop
jb
imul
xchg
shr
jle
and
dec
and
fstp
push
or
aas
mov
out
scas
pavgw
pop
movs
int
rcl
push
xor
dec
or
xchg
int
jp
scas
cs
jno
lock
fld
mov
pop
jnp
retf
push
dec
(bad)
sub
mov
aad
out
jae
xchg
sbb
and
sbb
add
jle
and
sbb
int
xchg
icebp
fiadd
mul
jae
mov
stc
push
in
movs
cmp
ja
outs
sub
push
les
cdq
push
push
repz
mov
dec
popa
mov
mov
aas
stos
ror
iret
jecxz
inc
dec
xor
add
and
inc
popf
mov
jne
xor
nop
pop
stos
push
jmp
jns
rcl
in
gs
js
movs
sub
sub
xchg
lahf
jnp
dec
xchg
data16
das
mov
sub
(bad)
rcl
ja
or
adc
retf
pop
sbb
stos
ss
movs
test
mov
outs
push
cmovge
lods
push
or
imul
jno
inc
scas
pop
mov
nop
fcom
test
cmp
shr
jp
cmp
mov
add
test
shl
in
xchg
or
scas
mov
sbb
scas
inc
cmc
jmp
inc
or
push
sub
adc
mov
push
mov
cmps
fsub
jbe
(bad)
push
in
sahf
pop
inc
push
add
dec
cmp
in
pusha
or
inc
xchg
outs
and
stos
cli
xlat
xchg
xchg
ins
xchg
adc
xchg
and
mov
arpl
(bad)
adc
dec
cmps
adc
addr16
rcl
jmp
test
fsubr
sbb
jg
or
add
add
jmp
subps
int
xchg
xchg
jmp
ds
pop
(bad)
mov
xchg
je
xchg
das
adc
pop
pop
push
in
(bad)
cmp
pop
adc
add
adc
adc
dec
cmp
sbb
jmp
push
(bad)
xchg
clc
or
dec
sub
sti
iret
add
jno
je
xlat
push
cmp
jg
shl
ds
push
add
popa
lods
ins
lods
sbb
test
loopne
jmp
mov
(bad)
cmp
iret
aaa
lods
push
ds
js
lea
sbb
mov
cmps
sub
jae
pusha
out
scas
bound
pop
xor
and
cld
ins
and
push
add
(bad)
pop
inc
nop
imul
fld
in
xor
push
ds
jle
push
pop
int
dec
cmp
pop
sub
sbb
or
sub
xchg
(bad)
in
in
inc
jmp
call
ja
es
retf
ret
ja
sbb
jbe
xchg
inc
in
lahf
jno
into
nop
xchg
xchg
sahf
mov
push
outs
mov
cmp
add
push
mov
inc
sbb
dec
stos
mov
or
and
bound
mov
arpl
mov
jo
jl
repz
std
out
stos
pop
lds
pop
xor
mov
enter
jne
push
pop
mov
cld
arpl
scas
pop
test
add
push
sub
call
(bad)
lds
mov
sti
xor
stc
out
ret
vxorps
add
adc
aam
sub
pop
xchg
xor
outs
sub
lea
movs
aam
fimul
mov
pop
fsub
rcr
adc
enter
dec
stc
arpl
mov
pop
dec
mov
adc
sbb
and
repnz
sbb
mov
pop
icebp
add
jmp
add
enter
lahf
stc
fwait
mov
push
dec
ins
sub
cmp
and
sbb
cmc
xor
(bad)
je
or
daa
jns
fiadd
das
or
ficomp
mov
or
mov
sub
push
mov
fs
repnz
sub
mov
out
outs
enter
imul
lods
xlat
ret
sar
and
pop
xor
xor
push
mov
movs
(bad)
lods
jge
iret
test
fnstenv
icebp
into
mov
xchg
sub
pop
mov
mov
xor
enter
rcl
jmp
ins
bound
retf
adc
pop
mov
and
pop
pop
ret
jmp
mov
ds
imul
sub
lds
popa
ds
test
outs
adc
pop
push
repnz
(bad)
jmp
iret
leave
adc
mov
sub
les
aaa
xchg
popa
sbb
and
add
aad
push
sub
xor
ret
xor
inc
pushf
and
pop
das
add
fcom
pushf
ss
nop
shl
pop
push
dec
sbb
mov
es
sub
xchg
mov
or
jno
bound
retf
push
add
bound
pop
mov
or
jg
das
jmp
push
cmp
pop
pop
in
xor
mov
sbb
cld
jno
cmp
push
imul
inc
push
aam
jle
xlat
pop
sbb
sbb
lds
imul
jo
test
cmp
les
test
inc
jno
in
sar
pop
xor
adc
mov
xchg
sub
mov
movs
stos
jmp
and
imul
mov
inc
inc
loop
imul
popf
xchg
shl
clc
(bad)
out
or
add
sub
jmp
cli
jg
into
mov
mov
mov
fnstenv
mov
dec
(bad)
imul
(bad)
xchg
movs
test
test
aad
jbe
cmp
mov
popa
adc
jo
jle
sbb
ja
xchg
(bad)
nop
shr
pop
cwde
sub
jp
pushf
push
mov
in
sar
ror
sbb
lods
push
jle
dec
xchg
lds
cmp
jmp
(bad)
pop
jbe
clc
inc
add
xchg
std
(bad)
push
xor
aas
test
and
jg
jg
add
(bad)
cld
jb
dec
fwait
mov
mov
and
push
dec
mov
int
sbb
jo
sbb
cmps
cmp
mov
(bad)
push
loopne
aaa
sbb
jg
sbb
push
xchg
test
pop
test
(bad)
cmp
(bad)
sub
push
push
arpl
ins
sub
repnz
dec
test
fwait
adc
lds
not
repnz
or
setbe
inc
pop
adc
loopne
push
(bad)
mov
jg
data16
sbb
dec
mov
jno
mov
lock
je
ficom
fisttp
sbb
pop
out
jl
data16
push
ss
mov
jl
pop
cmp
jge
aad
dec
mov
ror
out
mov
fisttp
shr
test
dec
iret
sbb
sbb
retf
jp
shr
mov
rol
(bad)
jne
and
and
fisttp
scas
dec
pop
pop
out
xor
adc
or
jns
adc
cli
jae
mov
fcomp
adc
cmc
cmp
mov
push
xor
imul
retf
jp
cli
lds
mov
dec
push
mov
and
gs
stos
jge
cld
sar
add
fdivr
icebp
jno
repz
pop
retf
add
xor
push
ins
loopne
iret
sahf
inc
xor
dec
test
jno
xor
cs
and
shr
or
dec
dec
out
(bad)
pop
les
imul
xor
cmp
xlat
push
aam
dec
xchg
xor
fs
fisub
test
or
ret
fist
mov
fisub
and
ret
adc
or
fwait
repnz
sar
imul
pop
xor
cld
aam
xchg
mov
stc
in
jl
pop
and
mov
adc
add
or
iret
cs
fdivr
or
mov
scas
sub
(bad)
mov
xchg
in
js
inc
xlat
fstp
(bad)
push
push
js
cli
mov
mov
imul
cmc
rcl
stc
mov
and
aad
aad
shl
retf
or
mov
enter
lods
and
aaa
jnp
stc
mov
outs
fistp
sti
jle
xor
in
ins
inc
add
mov
adc
or
jb
sar
cmp
xchg
ret
xchg
out
mov
mov
and
sar
mov
jo
sbb
adc
jge
fimul
retf
xchg
(bad)
pop
adc
pop
jp
cli
sub
sti
cmp
loope
call
mov
jl
and
pop
daa
jl
sar
adc
pop
sub
xchg
jecxz
or
fwait
ds
and
jb
out
fild
in
cmps
add
push
cmp
bound
(bad)
aam
stc
rcr
cdq
sub
loope
push
push
or
adc
xor
cdq
idiv
cmps
lds
cmps
push
shl
shl
jae
test
push
rol
mov
pop
or
stc
mov
call
test
and
popa
xchg
sub
pop
jno
mov
scas
jne
sbb
cmp
dec
jle
lods
int
inc
outs
imul
mov
or
mov
sub
mov
loopne
mov
aaa
jo
mov
call
sub
or
movs
adc
pop
mov
jnp
mov
pop
pop
idiv
fs
(bad)
sub
call
cwde
mov
xchg
loope
stos
xchg
xor
mov
sub
imul
call
ins
sub
xchg
xor
mov
add
pop
sbb
add
rol
xchg
retf
test
mov
mov
ins
psllw
arpl
and
push
xchg
inc
ficom
cmp
fwait
jge
mov
mov
pop
fld
push
dec
pop
cwde
in
into
icebp
mov
jnp
fnsave
xchg
sub
imul
xchg
retf
fabs
xchg
ret
pop
push
push
or
jns
mov
icebp
cli
pop
push
aam
fld
inc
mov
push
stos
pop
dec
mov
mov
fisttp
icebp
aam
add
mov
pop
cmc
and
rcl
jmp
mov
xchg
and
shr
sbb
xchg
xor
jns
test
sbb
fwait
adc
mov
sar
cli
jne
out
(bad)
(bad)
lods
call
movs
and
mov
fisub
fdiv
push
jno
popf
(bad)
and
jle
stc
xchg
inc
scas
arpl
into
mov
rcpps
mov
jne
int3
ret
add
retf
sti
or
push
mov
sbb
or
bound
leave
or
pop
leave
in
jae
iret
adc
jmp
cmp
jmp
sbb
(bad)
mov
data16
movs
push
int3
leave
push
mov
pusha
popa
enter
jp
aaa
inc
retf
sbb
push
xchg
push
adc
inc
test
je
test
sub
cmps
inc
add
pop
mov
xchg
nop
xor
in
mov
pusha
pop
fwait
dec
inc
mov
push
xchg
dec
movs
clc
mov
leave
push
mov
cwde
movs
rcr
inc
xchg
lds
or
cld
push
aas
cld
push
push
in
mov
int
shl
pop
in
repz
gs
adc
(bad)
int
ror
js
cmp
sub
sbb
in
sbb
pop
xchg
mov
add
loop
out
pop
cmp
popa
cmp
and
push
stos
repnz
mov
adc
adc
jb
dec
jg
call
lea
cmp
jmp
lahf
add
dec
mov
out
outs
jo
jmp
jecxz
(bad)
sti
jmp
(bad)
mov
add
push
test
lods
loopne
jp
xlat
push
jnp
pop
outs
xchg
mov
rcl
stos
xchg
into
(bad)
popf
out
mov
int
dec
ds
dec
fcomp
mov
fadd
adc
or
cdq
into
ret
cmc
pop
jne
std
jbe
and
rcl
xor
mov
outs
sbb
xchg
or
jmp
ret
and
push
les
adc
mov
fldenv
ss
add
sbb
pusha
jb
test
pop
inc
cld
fidivr
sar
into
pop
aas
dec
adc
xchg
test
cmp
inc
xchg
stos
sub
jno
cmp
jae
sbb
mov
inc
jbe
aas
cmp
pop
sahf
or
xor
inc
les
retf
imul
adc
xchg
popf
mov
sub
or
or
aaa
aam
cmp
call
pop
pop
scas
int3
pop
push
add
cmps
add
int
sub
das
jg
xchg
pop
fsub
loope
jmp
jae
mov
stc
dec
adc
xor
mov
movs
pop
jno
test
adc
cmp
dec
mov
hlt
mov
adc
sub
add
adc
add
fdiv
out
adc
xor
into
les
rcl
bound
mov
mov
xor
mov
pop
and
mov
cmps
lods
lock
fimul
nop
fst
fs
adc
psrld
xchg
jg
xchg
in
push
mov
repnz
adc
cmps
adc
ret
out
xor
sar
and
inc
xor
push
mov
pop
mov
push
lods
enter
into
cs
pop
mov
ds
push
icebp
or
shl
inc
jb
call
mov
das
iret
inc
sbb
fs
(bad)
cdq
popa
inc
or
xor
mov
nop
stos
mov
xlat
pop
xor
sbb
add
pop
shl
cli
sub
stos
dec
cmp
jmp
xor
jbe
jne
mov
out
dec
out
or
mov
mov
pop
mov
mov
loop
sub
jge
jbe
ja
dec
xor
mov
aam
or
das
inc
js
jge
cdq
cmp
test
in
lods
into
enter
sub
pop
pop
enter
mov
arpl
retf
xchg
cli
ins
add
xchg
arpl
add
repz
aam
or
(bad)
fcomi
add
mov
push
adc
inc
mov
mov
cwde
sub
call
pop
xchg
and
mov
jmp
outs
push
adc
and
mov
xchg
arpl
or
pop
cmp
hlt
pop
in
xchg
test
in
cmp
loopne
icebp
scas
stc
iret
test
dec
adc
mov
out
loop
and
mov
push
stos
out
mov
sbb
add
sbb
jecxz
cmp
retf
dec
icebp
repz
out
push
in
sub
inc
jns
std
lea
or
or
mov
mov
imul
adc
sar
es
(bad)
(bad)
cmp
in
adc
cmp
retf
xor
int
inc
mov
inc
mov
loope
push
push
pop
mov
cmc
das
pop
sahf
jmp
not
in
rcr
out
mov
pop
repnz
adc
repz
pop
mov
pop
and
arpl
mov
aad
aaa
stos
imul
popf
push
cmps
fsub
js
dec
outs
(bad)
and
popa
mov
mov
push
lds
and
dec
repz
xor
mov
repnz
pop
xor
cmc
and
mov
jae
push
inc
or
cs
retf
dec
mov
pop
in
aas
push
mov
aam
sbb
sbb
in
aas
mov
and
int3
xchg
mov
retf
nop
xor
out
push
bound
inc
retf
adc
movzx
call
mov
inc
pop
div
(bad)
and
scas
adc
test
aas
sbb
add
sbb
loope
sti
fadd
out
addr16
sub
mov
mov
cmps
cld
xchg
mov
bound
ror
sub
sub
cld
mov
out
jo
sub
inc
inc
bnd
add
stos
ds
dec
add
mov
adc
jbe
mov
adc
adc
inc
or
cmps
xchg
xlat
or
enter
cmps
inc
push
mov
popa
push
int3
inc
sbb
les
cs
sub
push
add
enter
sbb
xor
inc
jae
sbb
jns
idiv
push
adc
das
mov
fidivr
add
(bad)
inc
aad
lods
cmp
mov
pop
xor
add
xchg
sub
ds
outs
xor
cmp
leave
jecxz
or
loop
inc
xor
cmc
dec
jno
ret
cs
sub
add
mov
pop
and
sar
ret
loopne
aas
adc
icebp
pop
cmp
sbb
test
xchg
addr16
push
inc
mov
dec
fdivr
dec
js
adc
inc
pop
aad
hlt
test
out
mov
cmc
mul
nop
pop
lods
jno
rcl
lock
aaa
adc
out
add
ret
sub
cmp
sub
in
ss
into
inc
(bad)
aad
scas
ins
sub
jno
mov
movs
lahf
xchg
xchg
dec
sar
pop
add
ja
sub
add
dec
cld
in
fimul
mov
sbb
jnp
or
xchg
mov
xor
mov
jp
cld
shr
jecxz
xchg
(bad)
out
(bad)
and
sahf
cdq
push
add
cmc
mov
and
pop
es
fnstenv
add
mov
ds
xor
add
repz
mov
pop
scas
dec
xor
jg
ins
movs
push
pop
test
or
inc
ret
dec
lea
cmp
unpckhps
push
arpl
jge
les
jnp
add
stc
mov
mov
js
popf
mov
xor
sub
ins
ror
les
xor
jmp
lock
(bad)
lods
pop
outs
shl
xchg
inc
into
xor
out
mov
jnp
add
cmps
test
jo
es
xchg
(bad)
ret
call
aam
cdq
fild
push
adc
xor
and
or
sub
or
shl
pop
loop
aad
jmp
js
mov
ins
cmp
(bad)
cmp
js
fwait
push
ror
pushf
into
xchg
or
pop
pop
pminsw
fnstsw
(bad)
jne
inc
movs
ds
dec
fcmovnb
sbb
outs
add
add
jns
(bad)
es
fwait
xchg
mov
sub
push
mov
lahf
test
stos
imul
in
test
ficomp
sub
inc
sub
les
loopne
jne
stos
sar
xchg
sbb
jnp
out
cwde
jne
jae
jne
fnstcw
mov
cmp
cli
mov
fild
iret
outs
mov
ss
fmul
repnz
push
pop
test
sub
inc
mov
xchg
pop
sub
fld
jecxz
sub
(bad)
cmp
or
mov
in
cmp
mov
mov
sbb
fldpi
int3
jl
call
test
sub
pop
xor
mov
aas
mov
or
std
lea
not
push
and
jae
out
pushf
sbb
dec
mov
xchg
pop
push
shr
jecxz
(bad)
in
shl
sti
std
test
fcom
test
aaa
cmc
jmp
fisttp
mov
out
adc
cmp
retf
jmp
push
nop
rol
jle
inc
dec
repz
mov
lods
adc
mov
push
rcr
jno
add
push
mov
cmps
push
lods
out
sub
bnd
cdq
rol
dec
xchg
mov
mov
imul
ja
jbe
test
mov
retf
loop
clc
mov
enter
fbstp
jmp
xchg
mov
dec
int3
and
jbe
retf
rcr
nop
mov
jb
add
js
push
sub
iret
(bad)
cmp
ss
movs
cmp
xor
retf
repnz
and
outs
add
or
cmc
xchg
cmp
sbb
add
repz
xor
daa
and
xor
pop
out
fld
push
in
xchg
or
ds
mov
cli
push
int
pop
mov
pop
sbb
push
push
xchg
lock
inc
lods
pop
aaa
jmp
mov
stos
ds
sbb
sub
scas
or
cmp
and
xchg
sbb
sub
sub
and
stos
push
pop
retf
jbe
cmp
test
mov
sub
lds
add
push
dec
sbb
jecxz
les
jbe
stos
mov
pushf
iret
aaa
pop
or
xchg
jbe
mov
sub
sub
dec
sbb
inc
and
fild
inc
xor
ins
ja
nop
das
call
loope
add
pop
pop
cmp
sbb
xor
pop
jl
jmp
vmovntpd
jle
jmp
push
cmc
add
and
sbb
sub
aad
outs
fiadd
out
imul
jns
fmul
int
(bad)
out
pop
xchg
push
push
clc
cmp
(bad)
push
stc
jp
cli
rep
jbe
ds
jmp
out
jne
xor
xchg
and
sahf
jns
ret
leave
pop
mov
and
and
mov
cmp
and
or
loope
xchg
sbb
jg
adc
popf
(bad)
hlt
clc
enter
test
and
popa
in
rol
and
cmp
test
sub
mov
in
das
cdq
jecxz
jecxz
stc
(bad)
shl
push
cmp
jmp
out
adc
fincstp
daa
int3
sbb
push
xchg
dec
and
mov
retf
xor
add
scas
in
sbb
mov
aas
stc
and
pop
xor
pop
(bad)
shr
fs
movs
(bad)
jmp
mov
clc
lahf
jg
adc
and
jnp
push
sub
fmul
retf
pop
nop
loopne
jns
push
xor
ss
pop
call
jo
xchg
iret
jl
push
fistp
mov
mov
dec
pop
xor
sar
and
mov
push
fnop
inc
mov
xchg
cmp
mov
call
xor
jno
jo
fsubr
xor
pusha
gs
in
movs
jl
jle
imul
mov
mov
idiv
cmc
inc
mov
ins
idiv
ret
sub
sub
call
cdq
push
mov
movs
mov
fild
jbe
outs
aas
and
(bad)
cmp
les
cld
je
jecxz
into
(bad)
cli
mov
pusha
push
mov
jmp
inc
lds
xchg
mov
push
test
(bad)
rcl
push
lahf
je
jbe
push
xchg
mov
daa
add
adc
and
aaa
fldcw
pop
aaa
pop
loopne
(bad)
add
cmp
loopne
mov
fld
mov
jle
out
push
jmp
jo
xor
mov
sahf
xchg
xchg
sbb
xchg
(bad)
adc
imul
(bad)
fxch
mov
aam
cmp
cmp
(bad)
not
mul
test
mov
idiv
imul
push
jbe
dec
pusha
lods
nop
retf
xchg
test
mov
dec
add
xchg
(bad)
ficom
call
inc
mov
sub
ror
fsubr
xlat
inc
ja
adc
fsub
out
call
test
ret
xchg
sub
jbe
inc
add
add
or
sar
aam
push
ret
dec
aad
push
out
pop
xor
je
mov
sub
retf
ror
cdq
mov
retf
push
cmp
inc
adc
pop
add
movs
cmps
jge
(bad)
pop
and
js
outs
fadd
mov
xchg
jae
retf
sbb
dec
jae
pusha
test
inc
stos
xchg
call
inc
cmp
fistp
ins
jno
or
jns
push
jmp
jnp
or
lock
and
ins
mov
or
repnz
cli
or
push
mov
inc
mov
int
pusha
pop
sub
xchg
ins
shr
xchg
lods
jle
es
inc
and
sar
aas
sbb
pop
jno
shl
test
mov
cli
mov
dec
sbb
and
pushf
ror
sub
popa
fld
repz
sbb
movs
sub
jb
icebp
and
popf
push
inc
dec
test
loope
cdq
mov
xchg
in
rol
(bad)
mov
jno
cs
dec
into
jnp
mov
jnp
loopne
stos
fild
into
int
and
sub
add
xchg
dec
adc
mov
ins
sar
and
cmp
sub
xor
inc
mov
cmp
(bad)
icebp
popf
in
dec
xor
cwde
popf
and
cmp
lock
cmp
lods
pop
das
iret
dec
xchg
mov
(bad)
jmp
push
test
jmp
jecxz
retf
inc
bound
jmp
pop
cwde
pusha
or
hlt
test
inc
lods
pop
(bad)
sub
dec
push
ror
(bad)
pop
dec
shl
mov
push
and
push
movs
bound
ret
inc
popa
mov
mov
inc
cmps
adc
fwait
jns
push
sahf
cmps
and
in
lods
fist
push
push
inc
push
xor
sahf
les
push
cmp
jp
dec
xor
push
scas
xchg
inc
fnstenv
adc
repz
cs
lods
push
xchg
jmp
push
push
ins
into
xchg
ss
or
cld
pop
inc
gs
jne
mov
cmp
fst
add
xchg
cmc
xor
adc
test
push
daa
mov
inc
jecxz
add
add
sbb
push
pop
out
stos
mov
dec
sub
icebp
mov
sub
push
cdq
adc
out
dec
dec
call
push
outs
sbb
mov
(bad)
push
arpl
inc
and
mov
xchg
cmp
push
mov
xor
xor
mov
sub
xor
pop
out
cmp
add
js
xor
sbb
rcl
xchg
sbb
data16
rol
jp
test
call
add
inc
rcl
mov
mov
xlat
popf
mov
xchg
adc
sub
sbb
nop
xchg
or
or
dec
push
mov
lahf
sub
ins
mov
and
mov
sar
popf
add
xor
fisttp
inc
and
mov
loop
imul
push
scas
mov
xchg
fs
push
fdiv
jno
cmp
fdiv
not
jmp
jp
fild
sti
aad
div
jmp
test
movs
pop
(bad)
mov
iret
sub
adc
push
lock
repnz
test
xor
stc
sbb
mov
lea
out
retf
cmp
push
dec
shl
adc
xor
or
xor
sbb
popa
gs
adc
shl
add
mov
je
push
jmp
and
adc
popa
(bad)
adc
out
xchg
mov
cmp
push
cld
xchg
sub
cmps
sti
sti
xchg
mov
mov
xchg
adc
popf
cwde
push
out
push
cmp
add
cmp
leave
and
rcl
dec
test
int
mov
pop
loope
rcr
and
or
stos
push
imul
xor
out
sub
cmp
scas
imul
cmp
adc
cli
adc
fist
cmps
hlt
(bad)
jbe
cmpps
das
pop
pop
into
pushf
aas
gs
ins
popf
adc
leave
add
xor
loop
pop
inc
bnd
add
inc
cmc
push
and
rcr
xchg
ins
cmps
nop
xchg
xor
inc
movs
aas
jge
lea
repnz
sub
mov
xchg
mov
inc
popf
xchg
in
adc
xchg
(bad)
push
test
mov
push
in
js
or
call
push
jns
fstp
mov
inc
call
pop
outs
dec
mov
dec
inc
mov
inc
or
out
test
retf
std
adc
std
mov
push
outs
out
adc
jge
gs
xor
fstp
lods
sar
inc
mov
sub
add
idiv
mov
rol
add
(bad)
mov
sbb
ficomp
cmc
imul
fisub
int
daa
cmp
leave
fs
(bad)
adc
cmp
(bad)
in
mov
aam
mov
adc
ins
shl
add
ins
fisub
retw
xchg
lock
popa
inc
inc
movs
xchg
pop
push
mov
les
and
mov
out
xor
test
les
fimul
adc
outs
mov
jmp
into
retf
pop
fild
or
jecxz
adc
mov
mov
es
(bad)
cwde
outs
pop
jp
adc
ins
mov
push
xor
jo
nop
pop
mov
jmp
sub
inc
fucomp
mov
mov
stos
cmp
jle
test
ins
call
or
les
ins
aas
mov
arpl
ins
pop
repz
fwait
aam
push
dec
lods
adc
movs
test
aad
lea
mov
fidiv
fs
fiadd
or
inc
gs
fistp
movs
xor
aas
scas
adc
test
in
in
sub
leave
loopne
mov
jne
push
addr16
imul
add
cvtps2pi
leave
mov
xchg
jle
std
pop
dec
not
fild
xchg
stos
add
pop
jp
xchg
mov
xor
fcmovbe
aaa
cwde
fdiv
mov
inc
sbb
sbb
xor
jge
rcr
jge
aad
ds
ret
loopne
sub
bound
jle
aas
ror
jo
add
fcmovbe
popa
pushf
in
pop
in
ret
mov
lock
mov
je
ret
test
das
pop
xchg
or
fcomp
(bad)
cmps
mov
adc
push
and
aad
(bad)
xor
mov
lock
retf
mov
pop
iret
(bad)
addr16
bound
ss
repz
fs
stos
add
sahf
les
out
jg
push
gs
arpl
mov
and
ds
sub
je
or
stc
aas
arpl
arpl
mov
push
dec
push
and
fwait
push
pop
aad
xchg
xor
lea
(bad)
lods
inc
add
(bad)
push
sub
xchg
or
(bad)
shl
icebp
aam
cwde
loopne
pop
jmp
push
dec
bound
xor
jbe
jmp
loopne
adc
(bad)
and
jns
sbb
xlat
cs
arpl
sub
mov
mov
lahf
int
mov
fbstp
ins
(bad)
mov
xor
jmp
inc
sbb
ins
mov
hlt
jae
push
sbb
mov
xchg
jl
and
cld
pop
lods
je
xchg
in
aad
mov
mov
jge
and
outs
or
cdq
push
and
push
sahf
into
dec
mov
cld
addr16
lahf
dec
xchg
fdiv
dec
hlt
mov
fldenv
ret
retf
mov
movs
and
(bad)
pop
sar
int3
jl
dec
mov
ins
jmp
lock
jmp
pushf
ret
pop
shr
pop
inc
sub
mov
fdivr
aas
sbb
sub
push
jmp
pop
sub
std
outs
mov
push
int
jl
popa
movs
cmc
out
stc
xlat
fcmovb
pop
mov
cmps
adc
lods
mov
stc
sub
jae
mov
dec
repz
xor
mov
pop
xchg
dec
mov
mov
jmp
pop
push
in
movs
push
add
xor
ss
jb
(bad)
sti
ss
popf
fnstcw
xchg
dec
jno
test
xlat
jbe
pusha
mov
gs
or
xchg
push
push
sub
jae
daa
adc
pop
jbe
aaa
lahf
mov
add
push
movs
pop
pusha
sbb
sub
sbb
test
jl
cdq
leave
inc
pop
mov
jg
std
fnclex
sbb
dec
adc
mov
dec
test
sub
mov
les
stos
and
xchg
and
ins
data16
jbe
cwde
or
adc
xor
pop
xchg
cld
cmp
jmp
popa
pop
in
inc
int3
pop
adc
out
mov
jl
pop
popf
add
fst
sub
xor
lea
inc
cmp
add
stos
sub
xor
mov
inc
mov
imul
ret
imul
dec
xor
or
rol
loope
cmp
push
push
dec
shl
jns
push
and
push
pushf
xchg
push
mov
push
push
cld
test
add
mov
cmps
inc
pushf
push
jp
lds
loopne
sar
out
adc
retf
jmp
repz
cmp
adc
push
outs
inc
imul
scas
sub
xchg
clc
leave
inc
or
nop
cs
das
push
push
and
pop
mov
dec
popa
push
adc
cld
loop
add
arpl
(bad)
rol
push
jne
js
(bad)
adc
cwde
mov
pop
xchg
nop
movs
call
add
mov
sub
mov
adc
mov
adc
in
sahf
fwait
popa
dec
mov
mov
outs
(bad)
in
mov
add
mov
bound
out
cmp
cld
stos
cmp
cmp
pop
cdq
jp
sub
add
lock
retf
xchg
mov
mov
or
inc
jno
nop
mov
xchg
push
into
je
fisub
or
sbb
jmp
in
mov
fcomp
outs
call
mov
cmp
ret
(bad)
push
stos
sbb
movs
(bad)
xor
xchg
ins
outs
cli
mov
aas
iret
push
xor
push
fiadd
jge
fcomip
es
xor
xchg
dec
mov
test
jo
pusha
repnz
and
xchg
push
inc
pop
add
test
adc
popf
jmp
mov
cmp
inc
mov
xor
sar
push
data16
test
or
(bad)
push
push
jbe
xor
inc
fs
test
and
push
pop
loopne
out
inc
inc
pop
js
in
out
mov
shl
push
icebp
add
lahf
mov
je
cwde
jle
sub
in
fbld
mov
push
hlt
inc
sahf
dec
dec
sti
pop
mov
mov
push
test
mov
xor
ins
(bad)
or
out
cwde
push
add
mov
dec
out
mov
add
cmp
es
dec
aas
sub
sar
repz
fs
mov
outs
adc
add
pop
and
inc
hlt
dec
stos
cmp
xor
outs
ja
ins
aas
ss
dec
inc
lods
push
mov
add
and
xchg
jo
fdivp
sldt
add
xchg
cmp
inc
or
ins
int
fisub
je
mov
movs
test
mov
sub
ins
loopne
out
es
xor
push
hlt
pop
and
pop
repnz
into
xchg
mov
xchg
cmp
loop
stos
or
sahf
cmp
mov
dec
jmp
xor
in
call
push
loope
pop
(bad)
into
(bad)
mov
jmp
sar
lock
add
push
sar
arpl
cmp
fs
and
sahf
int3
push
je
mov
fnstcw
std
lods
sar
fistp
pop
xchg
dec
addr16
stos
jmp
outs
or
jecxz
pop
sub
popa
mov
dec
xchg
pop
pop
call
int3
cld
ret
dec
inc
fisubr
gs
lea
xor
or
sbb
rdmsr
inc
xor
lock
jno
inc
push
push
mov
xchg
icebp
pop
xchg
rol
mov
iret
adc
arpl
push
imul
mov
inc
inc
(bad)
not
or
jae
mov
movs
ss
fnstsw
jnp
xchg
inc
dec
and
push
scas
fnstsw
ds
mul
mov
aam
sub
adc
mov
fidivr
call
shl
mov
mov
pushf
cmps
outs
mov
clc
in
loop
cmp
out
data16
add
scas
mov
cdq
inc
cmps
jb
adc
aam
loop
and
clc
push
or
xchg
loopne
stos
loope
ins
popf
outs
or
cli
shl
adc
sbb
cmp
inc
or
pop
sub
xor
inc
sub
dec
cmps
stos
add
sub
fmul
iret
fwait
stos
movs
dec
pop
jle
(bad)
lahf
or
xlat
sbb
sub
push
sbb
sub
aas
push
cdq
cmps
push
mov
sbb
fisubr
sbb
lods
jbe
test
repnz
xor
xchg
add
mov
repnz
iret
add
and
movd
or
dec
inc
mov
push
into
xchg
mov
nop
outs
jl
jl
mov
stos
push
sub
inc
out
mov
mov
jno
es
pop
push
push
sub
ins
aad
push
xor
mov
sti
push
das
mov
out
int3
and
cmps
dec
das
data16
ja
mov
push
test
cmp
int
stc
(bad)
pop
bound
push
ins
sbb
jl
addr16
fldcw
ins
jge
xacquire
adc
sbb
push
add
add
push
scas
je
mov
scas
xchg
std
mov
mov
xchg
pop
and
sbb
and
bnd
pop
jmp
pop
js
adc
sub
inc
imul
xchg
lods
setae
and
push
xchg
retf
sub
inc
ds
pop
mov
(bad)
sahf
jmp
in
data16
cmps
rol
loopne
mov
fldenv
in
push
loope
xlat
sbb
out
inc
sbb
jbe
xlat
pushf
dec
je
sbb
mov
in
add
iret
xor
call
daa
sti
loop
ret
lods
inc
pop
inc
ss
cmps
lahf
xor
shl
pop
mov
and
movs
(bad)
cdq
add
adc
mov
inc
pop
dec
jge
jnp
xchg
cmp
popa
rol
inc
cmp
aas
or
js
lods
xor
cmp
leave
dec
add
and
add
cmp
push
imul
movs
daa
loope
mov
retf
xchg
mov
push
push
sbb
mov
adc
inc
(bad)
pop
arpl
lahf
sar
jg
lods
jp
movs
sbb
fcomp
xor
loope
jb
repz
loope
or
jl
and
movs
sahf
leave
out
inc
dec
push
loope
movs
pop
lds
jmp
aam
test
or
inc
mov
je
dec
gs
cld
outs
pop
add
mov
retf
jmp
sbb
cmp
data16
push
dec
inc
jp
and
cld
in
adc
pop
push
push
and
sar
push
and
adc
cmp
int
mov
xor
pop
retf
retf
icebp
sub
mov
push
ret
fsubr
adc
(bad)
mov
test
arpl
out
and
mov
push
sbb
std
or
push
jo
popa
sahf
and
add
test
fild
mov
ins
ja
jle
dec
(bad)
sbb
jns
inc
jbe
push
cld
pop
xchg
pop
je
lods
mov
jp
jnp
lds
fsub
sbb
pop
mov
out
dec
jle
jno
mov
mov
in
or
push
test
sbb
jae
inc
xor
xchg
aad
mov
mov
(bad)
xchg
xor
mov
adc
pop
dec
mov
jnp
xor
mov
cmps
push
in
fidiv
mov
push
or
xchg
(bad)
sub
das
repnz
lods
jg
rcr
or
test
repnz
cld
dec
dec
xor
ret
movs
outs
mov
pop
xor
nop
loopne
in
push
or
lods
push
mov
push
mov
loop
inc
pop
mov
inc
pop
cmp
outs
out
dec
dec
inc
inc
lods
pop
or
xor
xchg
xlat
add
add
xchg
ror
repz
cmp
pushf
das
mov
xchg
mov
retf
paddq
mov
mov
fwait
sbb
imul
mov
add
iret
enter
hlt
out
and
fmul
icebp
sub
xchg
rol
int
pop
push
out
pop
cmp
add
stos
shl
xchg
mov
add
std
cld
push
lock
push
xlat
(bad)
jmp
lock
je
imul
stos
repz
pop
add
shl
ret
retf
pop
out
or
jmp
jecxz
add
pusha
push
or
bound
adc
out
cmp
outs
aam
outs
popf
(bad)
es
push
and
xchg
aad
icebp
imul
xchg
cwde
pop
daa
push
push
popf
test
fisub
jnp
mov
jp
mov
inc
sub
aas
dec
and
pusha
test
fisttp
pushf
mov
cdq
js
inc
adc
outs
mov
sub
ja
add
sub
pop
test
cdq
mov
fcmovnb
mov
fmul
dec
dec
or
push
shl
sbb
jle
fmul
mov
dec
sub
add
sub
dec
test
rdtsc
aam
mov
push
(bad)
iret
add
mov
xchg
fsubr
adc
dec
cmps
push
mov
aam
pop
push
mov
jnp
arpl
arpl
movs
sbb
int
mov
push
iret
push
lods
push
sub
stc
test
xchg
fdivr
sub
popf
sbb
outs
and
sbb
popf
push
not
or
popf
(bad)
loopne
lds
jmp
rol
rcl
dec
xchg
xlat
pop
xor
jge
int3
aam
or
inc
mov
inc
xor
cdq
hlt
jnp
mov
rol
sub
inc
adc
jne
adc
xchg
mov
cmps
xor
mov
jnp
leave
loope
pop
dec
push
bound
inc
dec
inc
test
lds
stos
ins
call
fwait
scas
dec
mov
inc
adc
gs
push
mov
push
inc
sub
jmp
mov
sbb
jns
movs
iret
add
jge
xchg
cmp
inc
xchg
and
repnz
test
add
fmul
sbb
ret
mov
sahf
or
test
mov
or
xchg
pop
mov
out
(bad)
in
fwait
call
and
ds
push
cmps
test
fisub
repz
mov
rcl
sar
lahf
add
xchg
or
push
push
or
xlat
xor
arpl
cmp
sti
js
fidiv
push
ffree
xchg
enter
sahf
fistp
daa
and
add
cmp
stc
pop
cmc
xchg
repnz
ds
fdivr
push
imul
fst
inc
sbb
mov
and
fimul
in
stos
mov
mov
cmp
push
inc
inc
fist
lock
push
aam
mov
es
aam
adc
inc
push
test
push
outs
jbe
add
cdq
mov
jo
adc
xor
cmps
or
mov
inc
ins
mov
movs
clc
dec
dec
pop
jp
cld
adc
cdq
inc
jno
aaa
push
xchg
or
xor
(bad)
data16
mov
mov
xor
into
xchg
in
or
pop
daa
push
push
sub
std
into
inc
mov
lea
hlt
imul
sti
inc
stos
pop
add
repz
adc
add
sbb
(bad)
jg
push
mov
int3
jg
movs
jb
push
jns
xchg
xchg
js
out
das
or
sbb
test
push
and
int3
add
mov
or
jmp
dec
dec
push
movs
shl
mov
pop
neg
inc
loop
push
jge
pop
sub
push
out
and
xor
cmc
inc
mov
adc
jmp
retf
xchg
(bad)
enter
dec
fimul
data16
mov
add
fisub
add
mov
or
and
lahf
out
inc
nop
jmp
cmp
fst
int3
mov
or
jecxz
push
pop
sbb
test
aad
rcl
out
push
mov
inc
nop
mov
es
adc
jp
int3
inc
push
mov
jmp
mov
lods
jl
xchg
dec
gs
in
and
xchg
dec
nop
jecxz
movs
mov
sbb
lahf
(bad)
movs
fimul
(bad)
ds
test
cs
loop
xchg
js
jb
cmc
add
xchg
and
fwait
lods
xor
xor
jle
xchg
sahf
and
enter
ins
movs
add
test
pop
inc
cld
add
inc
adc
inc
fcom
movs
call
and
dec
sahf
dec
dec
pop
push
mov
mov
scas
add
mov
add
dec
and
pop
(bad)
shl
icebp
and
aam
cmp
in
retf
es
ds
(bad)
fldenv
leave
out
sub
mov
and
outs
jp
push
out
fisub
retf
push
jmp
jmp
push
or
xchg
adc
(bad)
xor
mov
shl
xchg
jnp
js
or
icebp
sbb
mov
jb
jno
outs
add
inc
in
jae
(bad)
cdq
jg
dec
and
push
jle
mov
mov
mov
imul
(bad)
mov
adc
fptan
xor
pusha
in
loope
inc
add
push
mov
out
fwait
icebp
dec
dec
mov
or
lods
xor
inc
and
mov
hlt
outs
mov
dec
sahf
xor
das
mov
push
mov
out
aam
mov
mov
adc
push
and
test
sub
mov
inc
xchg
push
lock
mov
bound
pop
xchg
gs
scas
rcl
sub
repz
pop
stos
test
adc
out
stos
je
mov
(bad)
jmp
jns
jne
push
xor
das
pushf
xchg
loopne
or
mov
retf
(bad)
in
jae
push
test
adc
(bad)
in
dec
mov
fcom
test
pusha
outs
popf
adc
jnp
loope
aas
sbb
pop
cdq
cmps
ja
xchg
add
jnp
jmp
test
jmp
xchg
aaa
gs
sub
mov
sti
inc
addr16
cwde
rol
iret
mov
xchg
mov
mov
mov
inc
(bad)
lea
dec
aad
imul
and
sub
cmc
movnti
mov
in
mov
pushf
sub
out
sets
dec
mov
fwait
(bad)
sub
xchg
push
push
or
stc
mov
inc
call
cmp
pop
add
mov
dec
call
fild
mov
adc
call
dec
inc
stos
cli
cdq
shl
xor
ret
(bad)
cmp
(bad)
xchg
and
lds
and
dec
mov
fs
test
and
daa
in
retf
in
adc
jno
xchg
test
int
jae
push
dec
leave
ret
(bad)
cmp
add
mov
xchg
jb
add
aaa
fiadd
mov
mov
rcr
fdiv
jecxz
and
xchg
fcom
shr
push
push
fisttp
adc
daa
rcr
or
pushf
xor
jecxz
dec
test
xor
cwde
mov
dec
jge
lds
sbb
adc
shr
lahf
push
push
sar
xchg
xlat
xchg
ret
xor
dec
mov
add
xchg
bound
dec
and
xchg
jmp
jns
xor
les
hlt
repz
push
mov
sub
fstp
push
push
jne
xchg
or
imul
lods
fiadd
xor
mov
bound
push
add
jmp
(bad)
cmc
scas
push
dec
sbb
je
jl
or
pushf
mov
inc
ja
adc
xor
ss
and
lss
push
cmp
call
loopne
dec
mov
test
xchg
xchg
arpl
pop
(bad)
jle
lock
(bad)
fyl2x
(bad)
mov
mov
clc
popa
mov
lea
jo
gs
(bad)
(bad)
sub
sbb
in
mov
sbb
adc
inc
test
adc
pop
movs
loopne
pushf
stc
push
cmps
xchg
stc
or
and
inc
mov
jl
jg
ins
sbb
int
popa
outs
and
sbb
aaa
shl
inc
xchg
sti
add
pop
gs
jne
cmp
jne
cmp
call
jecxz
mov
mov
pop
adc
fsubr
push
int3
retf
addr16
mov
aad
mov
mov
call
xor
xchg
and
enter
sub
dec
add
add
or
inc
gs
mov
daa
popa
add
push
add
pop
pop
mov
in
mov
clc
sbb
and
xor
js
mov
fdiv
imul
aas
sbb
or
(bad)
fcomi
sub
dec
test
bound
mov
sub
push
imul
bound
sub
fbstp
or
cli
(bad)
test
ins
dec
mov
jmp
cmp
fsub
sbb
pop
mov
xor
in
or
sahf
push
mov
(bad)
mov
push
repz
out
stos
or
pop
jmp
ret
sub
js
call
pop
(bad)
popf
inc
pop
not
xor
jne
test
jb
sub
shl
or
imul
push
dec
or
mov
mov
pusha
(bad)
(bad)
xor
or
jne
inc
jle
xor
sub
inc
push
mov
lahf
pop
callw
pop
iret
jmp
test
xchg
sub
inc
or
mov
or
sub
popa
ja
stos
repnz
push
xchg
cmc
mov
bndldx
das
jmp
cmp
test
call
ds
and
xor
sti
xor
sub
popa
call
mov
dec
popf
xchg
lock
mov
or
xchg
mov
fdiv
fiadd
jecxz
(bad)
aaa
xor
mov
scas
cmc
test
mov
iret
and
push
sti
xchg
sbb
push
mov
std
xchg
push
rcr
lods
outs
shl
jmp
iret
xchg
push
inc
daa
inc
dec
idiv
vmwrite
mov
mov
jg
cmp
sub
xor
cmps
addr16
popf
(bad)
cmp
(bad)
sbb
push
(bad)
mov
fst
push
(bad)
sti
out
mov
lods
add
pop
ja
cmc
pusha
loopne
mov
adc
(bad)
jmp
cmp
(bad)
xchg
or
aaa
push
aas
cmp
ins
xchg
arpl
push
dec
shr
aas
xor
ja
int
push
xchg
push
jp
sbb
and
pop
xlat
push
lock
add
lods
and
rcr
dec
cmp
test
es
scas
jmp
xchg
mov
cmps
and
and
mov
pusha
mov
push
sub
lahf
call
mov
cmc
and
mov
xchg
addr16
mov
jnp
adc
scas
xor
sbb
data16
lods
inc
movs
cmc
and
pop
ins
pop
lock
adc
cmps
cmps
mov
int
movq
xlat
lods
add
mov
lock
mov
mov
cmps
mov
iret
aad
xlat
pop
addr16
xlat
cld
out
sub
xchg
loop
ret
dec
mov
fidiv
fcmove
popf
lahf
fwait
jbe
popa
jbe
jae
xor
xlat
(bad)
sub
push
jge
addr16
cmps
cli
sub
aad
pop
mov
push
pop
mov
popa
push
jge
and
int3
lods
sahf
mov
lock
lahf
pop
xchg
fwait
mov
cmc
xchg
aam
cdq
int
push
or
cmp
clc
les
inc
sbb
jbe
adc
add
int3
bndldx
mov
loopne
adc
jmp
mov
push
mov
mov
xchg
jne
daa
jne
add
ja
rcl
fsub
sbb
mov
aaa
bound
(bad)
mov
leave
fwait
mov
fistp
and
pop
sub
jp
jo
xchg
in
inc
mov
call
data16
mov
or
and
fild
jmp
bound
jns
mov
in
add
sub
xchg
mov
fcom
aam
mov
mov
cmp
inc
imul
arpl
test
stos
push
lods
jp
push
pcmpeqb
aad
add
shl
jno
sahf
mov
jnp
hlt
ret
sar
mov
test
adc
adc
adc
jecxz
add
fnstenv
lahf
mov
ds
lods
js
sub
lds
add
les
push
int3
mov
cdq
inc
ror
call
jl
push
add
cmps
sar
adc
sbb
cdq
outs
jp
stos
xor
test
mov
hlt
cdq
call
cmp
imul
jecxz
mov
jecxz
sub
dec
cmp
xchg
addr16
and
inc
and
popf
mov
cmps
push
mov
adc
ins
rol
push
push
loopne
sbb
xor
xchg
loop
lds
lods
sub
or
mov
neg
xchg
sbb
movs
in
call
cmps
sbb
sub
or
fs
fisttp
mov
sub
push
inc
xlat
mov
push
mov
pop
in
or
or
push
in
push
mov
data16
pop
or
mov
inc
fmul
in
das
or
and
jns
pop
and
test
ins
fidiv
cmp
pusha
sub
sub
push
ds
fbstp
push
or
xor
cmp
xor
mov
ror
sub
mov
int
shl
iret
xchg
and
mov
cwde
in
sub
cmp
xor
push
jbe
and
mov
nop
(bad)
sbb
fstp
xor
pusha
jle
test
rcl
rol
les
stc
std
pop
mov
fwait
jle
lds
jno
inc
xor
mov
push
(bad)
inc
mov
fs
sbb
clc
mov
push
mov
dec
test
stos
(bad)
mov
stos
sti
sbb
stc
fsubp
or
cdq
jg
aas
pop
shr
(bad)
out
loope
dec
jno
and
les
mov
jmp
mov
jle
ins
jb
xchg
mov
and
xbegin
test
(bad)
jbe
mov
inc
mov
je
mov
mov
add
pop
mov
mov
cmps
movs
mov
das
lds
mov
sbb
mov
inc
push
call
ret
sub
int3
mov
jmp
and
fcom
add
lock
sar
cmps
jo
fdivr
div
push
lea
add
cmp
xlat
(bad)
ficomp
out
inc
cmp
push
mov
xchg
push
mov
lds
mul
add
push
test
lahf
into
pop
arpl
in
or
or
xchg
mov
adc
enter
xchg
jecxz
push
push
jbe
push
clc
rol
mov
sub
ja
out
inc
mov
push
(bad)
cmp
or
iret
ret
imul
add
pop
cli
adc
loope
mov
mov
ret
mov
sti
fcomip
jmp
xchg
inc
ret
jmp
out
pop
movs
cdq
jns
sahf
push
dec
scas
push
jl
pop
test
cli
bound
cmps
pop
test
inc
xchg
scas
mov
jle
sub
add
shl
aam
es
stc
mov
pop
pop
bound
cmp
fdiv
push
adc
or
jbe
and
imul
(bad)
sbb
in
leave
push
mov
aad
into
out
imul
jle
mov
nop
in
jb
jmp
cmp
call
add
push
retf
scas
mov
cmp
mov
(bad)
cld
mov
adc
pop
imul
ret
out
cld
lea
or
pusha
mov
lds
sahf
cmc
push
cwde
push
sbb
test
jl
push
xchg
or
rcl
retf
mov
push
jne
jo
jmp
jo
lea
or
mov
and
movs
fimul
loope
pop
pop
jbe
scas
cmp
jp
cmp
loop
fs
(bad)
ficomp
xor
outs
aaa
aad
push
and
in
lods
jmp
imul
stos
bound
xchg
(bad)
int
retf
in
adc
aas
xchg
in
dec
mov
mov
bound
fistp
jns
push
sahf
push
int3
(bad)
bound
int
pop
iret
enter
add
fadd
mov
adc
stos
aad
daa
sbb
jmp
inc
mov
je
(bad)
jne
pop
sbb
or
into
jg
loopne
repz
je
and
div
mov
nop
leave
in
int
dec
aam
pop
sahf
std
in
pop
leave
jae
pop
pop
add
iret
mov
test
sbb
mov
outs
dec
fld
xor
push
sub
mov
lock
call
ss
adc
push
test
test
out
xchg
pop
and
fdiv
out
int3
arpl
sti
xor
jmp
inc
adc
cld
dec
jecxz
and
and
fimul
push
arpl
add
push
cmp
out
jns
adc
mov
movs
sahf
bound
inc
mov
jmp
jo
sar
fcmove
ret
mov
add
out
mov
mov
sbb
pop
mov
fxch
mov
mov
pop
lahf
adc
test
jle
inc
mov
(bad)
sti
or
test
(bad)
dec
sbb
mov
popa
in
pop
ins
outs
retf
mov
iret
aam
shr
mov
pop
mov
sbb
push
ret
cld
(bad)
div
adc
cmps
ror
call
mov
mov
ja
adc
ret
add
push
jmp
mov
test
das
push
out
pop
lea
shl
(bad)
sbb
arpl
sbb
or
mov
push
mov
cwde
pop
ret
cmc
(bad)
xchg
data16
lea
push
js
shl
mov
or
xor
mov
adc
lock
aas
pop
jge
dec
imul
sub
repz
inc
adc
cwde
mov
(bad)
arpl
inc
cmp
rcr
shl
mov
es
mov
(bad)
push
ret
ret
add
and
mov
(bad)
(bad)
jle
sar
dec
lds
and
mov
and
jle
and
imul
pop
std
push
or
mov
repz
push
sbb
dec
mov
push
ins
mov
dec
adc
mov
jno
pop
ret
xor
dec
or
in
jb
leave
ror
cmp
jb
xchg
pop
je
or
cmp
and
add
test
cs
xchg
jmp
inc
xchg
adc
(bad)
mov
and
shl
jl
mov
fist
adc
push
push
inc
mov
icebp
xchg
adc
movs
nop
iret
aad
ret
rol
pop
adc
pop
outs
(bad)
hlt
mov
push
popf
call
xor
or
fyl2x
mov
fst
xor
outs
xchg
call
cmc
inc
dec
test
enter
dec
mov
mov
adc
jg
cmp
mov
arpl
(bad)
fstp
mov
xlat
mov
fisub
mov
fbld
pop
mov
jp
leave
je
fcmove
(bad)
popf
shr
sbb
in
and
push
fld
(bad)
stos
pop
cmp
pop
inc
xor
mov
movs
test
cmps
and
and
lahf
push
daa
pushf
xchg
inc
jbe
popf
pop
(bad)
mov
int
push
jle
or
inc
xchg
in
pusha
add
scas
es
jno
xchg
pop
jg
sub
call
lahf
or
cmp
lods
in
xor
aas
mov
mov
sub
inc
jecxz
(bad)
hlt
sbb
iret
lods
push
out
out
lods
fs
std
shr
pop
cmp
add
cmps
sub
dec
jg
scas
mov
jecxz
mov
and
scas
lds
dec
fwait
std
adc
dec
push
mov
mov
mov
(bad)
or
scas
xor
jmp
inc
call
daa
pop
xor
pop
cdq
int3
sbb
push
xor
xlat
inc
inc
movs
mov
js
sub
fisub
call
in
adc
and
inc
xchg
or
xor
std
mov
adc
adc
mov
test
call
call
jne
test
inc
fcomp
std
rep
mov
loope
mov
cmps
adc
pop
daa
enter
cmovae
pop
cmp
adc
mov
pop
jecxz
mov
push
pushf
jmp
push
jmp
aaa
push
push
jp
lods
lods
pop
sbb
ret
jge
or
cld
add
nop
pushf
xchg
loop
cs
addr16
cmp
push
adc
sub
jno
inc
and
or
pop
jecxz
mov
test
call
int
push
xor
adc
adc
gs
cdq
or
inc
pop
test
dec
ror
mov
fbld
xor
retf
inc
adc
ret
push
fwait
inc
stos
aaa
jo
bound
jl
pushw
out
jl
int
sub
push
imul
mov
cmp
jg
ds
inc
and
jns
pop
por
inc
icebp
xchg
inc
push
and
jbe
(bad)
or
adc
cmc
or
mov
xor
arpl
cmp
iret
mov
pop
mov
cmp
data16
mov
push
mov
or
dec
and
adc
sbb
inc
xor
fistp
mov
jae
loop
mov
jbe
push
mov
pusha
sub
scas
hlt
lods
dec
push
sub
and
jbe
jae
or
adc
mov
xchg
or
cld
adc
test
jo
adc
sbb
and
inc
sub
xchg
(bad)
jge
and
push
jecxz
add
sub
mov
cmp
mov
mov
push
or
sar
fistp
aam
add
or
xor
fdivr
add
shr
jae
mov
into
lods
pop
ror
js
fwait
sub
inc
mov
in
or
lea
xor
sub
sub
push
xor
cmp
dec
in
in
xlat
aam
sub
mov
dec
jmp
add
in
ror
mov
mov
lods
adc
(bad)
adc
cmp
out
or
and
inc
neg
jl
mov
pop
sbb
out
mov
pop
data16
inc
clc
or
scas
push
dec
or
mov
cmps
and
push
mov
sub
pop
adc
arpl
xor
call
mov
xor
adc
sar
inc
mov
push
(bad)
cwd
in
dec
in
iret
div
(bad)
icebp
into
push
dec
fs
nop
mov
in
arpl
sbb
std
(bad)
cmp
cdq
dec
test
cmps
inc
sbb
cmc
add
pop
fiadd
out
aam
out
push
repz
mov
push
(bad)
call
mov
sahf
sub
push
test
aad
inc
mov
enter
fsubr
or
cmp
fdivr
xchg
imul
dec
push
inc
inc
clc
pop
cmp
xchg
pop
sub
cmc
arpl
gs
retf
outs
jo
push
in
and
mov
popf
les
(bad)
and
xchg
sbb
stos
pop
mov
scas
mov
xor
addr16
daa
xor
cs
mov
mov
loop
pop
mov
ret
pop
xchg
pop
xchg
popf
or
inc
cli
mov
test
sbb
and
scas
shr
inc
rcr
jle
jge
scas
add
jno
mov
jle
(bad)
dec
xor
jae
aaa
lahf
inc
lahf
mov
movs
out
dec
sub
adc
jmp
or
and
pop
push
not
jbe
jp
sti
mov
lock
adc
mov
mov
pop
pop
xchg
xchg
(bad)
mov
mov
cwde
fwait
jle
mov
cmp
cmc
jle
dec
pop
or
xor
ds
dec
jle
jle
(bad)
and
pushf
mov
jp
mov
push
stos
xlat
(bad)
int3
inc
rcl
jp
es
das
xchg
out
aad
mul
sub
push
test
cmps
leave
std
jmp
ror
stos
xchg
mov
mov
push
push
out
enter
test
dec
and
xchg
jo
in
jae
mov
push
sub
xor
addr16
div
add
inc
fdivr
add
popf
mov
dec
lahf
mov
inc
mov
sub
outs
inc
pop
mov
push
clc
pop
mov
jmp
(bad)
mov
mov
dec
je
ror
aas
sub
jnp
aam
gs
fistp
xchg
jne
xor
lock
cmc
data16
repz
sti
(bad)
or
add
pop
push
lods
jp
aaa
dec
add
adc
test
ret
dec
or
adc
scas
jbe
push
push
xor
cwde
daa
and
sti
retf
cmp
sub
xchg
fisub
mov
sub
les
xlat
lahf
popa
outs
xchg
test
xor
imul
std
movs
inc
add
push
xchg
lea
sub
pop
or
or
(bad)
mov
cmp
(bad)
xor
sbb
arpl
cmps
xor
pop
pushf
dec
mov
loopne
push
scas
icebp
aam
cmc
(bad)
sub
inc
fild
xor
hlt
sub
or
mov
xchg
mov
and
in
fwait
jp
or
jo
pop
inc
sar
xor
fwait
mov
mov
(bad)
cmp
es
xchg
loope
pop
into
adc
or
mov
pop
push
jno
outs
pop
push
push
jno
fchs
jmp
xor
mul
int
xor
fadd
scas
sbb
dec
call
pop
(bad)
lods
dec
mov
cmp
adc
les
pop
push
dec
(bad)
sub
call
mov
dec
js
aas
mov
xor
sub
adc
loopne
icebp
sbb
xchg
ins
xor
mov
inc
bnd
jb
push
sahf
pusha
pop
pop
xor
sbb
cmp
sbb
adc
inc
and
adc
pop
cmc
aad
add
jae
adc
adc
adc
inc
lock
adc
ds
push
pop
xchg
mov
stos
jbe
xchg
movs
mov
int3
clc
loope
retf
rol
adc
addr16
ins
je
shl
sar
dec
add
and
bound
mov
fsubr
data16
lods
pop
outs
ret
popa
push
inc
inc
out
add
fwait
xlat
mov
sub
jle
aam
popf
ins
pop
inc
nop
cmp
jp
aad
sti
fbld
push
loope
ret
mov
mov
cmp
popf
xchg
fist
dec
add
shr
jb
cld
jb
jl
adc
inc
(bad)
mov
dec
xchg
(bad)
mov
mov
es
push
sub
sar
xor
out
adc
xchg
add
xchg
pop
xor
mov
rcl
mov
xor
arpl
adc
xlat
push
mov
in
add
add
imul
jo
gs
jne
inc
inc
lea
movs
adc
jl
adc
cmp
test
push
mov
jp
sub
cwde
push
je
xor
inc
ret
loope
outs
hlt
dec
bnd
xor
stos
jb
xchg
ds
jmp
repnz
stc
fisttp
retf
add
jb
ins
jl
xchg
sbb
push
jae
xor
pop
les
push
mov
pop
ret
xor
xchg
pop
mov
fs
add
scas
cmp
fcom
jp
outs
xchg
sbb
inc
out
in
mov
pop
sub
sub
ret
or
xchg
leave
or
ins
ds
pop
loopne
inc
and
pop
dec
inc
pushf
push
xlat
xor
sub
jo
add
inc
idiv
das
pop
(bad)
jge
lods
mov
push
inc
das
outs
mov
out
arpl
(bad)
jmp
cmps
jge
test
(bad)
dec
fiadd
jno
clc
cdq
sbb
(bad)
cmp
ficom
popa
cwde
movs
jo
iret
ja
inc
cmc
cwde
inc
int
pop
arpl
cwde
or
aaa
inc
std
xchg
inc
xor
lds
stos
popf
inc
scas
dec
popa
cli
jl
fdivr
fcomp
in
add
jo
lods
push
fisubr
or
mov
mov
inc
inc
mov
sub
pop
dec
jns
cmp
(bad)
loope
movs
and
xchg
or
adc
leave
sub
adc
ret
pop
jge
jmp
inc
push
sbb
push
std
and
fldcw
cmp
daa
xor
dec
mov
es
daa
lods
xchg
adc
(bad)
pushf
int3
retf
sub
sub
dec
outs
add
inc
(bad)
outs
mov
mov
push
(bad)
sub
pop
ret
(bad)
pop
in
mov
stos
int3
neg
push
cmp
test
pop
pop
mov
idiv
sub
fdiv
lock
pop
mov
dec
mov
add
add
adc
cdq
int
das
xchg
push
outs
mov
fisttp
ficom
mov
ffreep
push
mov
xor
nop
aas
xchg
hlt
pop
gs
add
adc
or
inc
push
xchg
pushf
cmps
jmp
push
mov
jge
jne
xlat
test
mov
out
xor
dec
push
push
xchg
(bad)
fild
rcr
in
push
sub
dec
jecxz
movs
(bad)
pop
inc
or
cmps
jbe
mov
mov
clc
setno
ss
repz
fist
and
or
lock
out
push
xor
mov
pop
pop
cmp
(bad)
push
(bad)
movs
les
mul
cmp
jae
adc
dec
shl
inc
ret
mov
add
jle
retf
loop
jle
push
jge
subps
sbb
cwde
cmps
xchg
mov
pop
mov
mul
test
clc
dec
xchg
icebp
cmp
sar
(bad)
sub
repz
xlat
adc
aam
fldcw
ja
cs
mov
call
jle
out
shr
dec
retf
das
jl
mov
mov
inc
push
xor
xor
sbb
push
sub
add
add
cld
cld
push
jle
add
xor
std
es
loopne
push
add
cmp
push
mov
sub
jecxz
dec
rcl
stos
aas
outs
retf
dec
inc
imul
or
and
setg
dec
test
in
ss
dec
mov
aam
bound
imul
pop
or
and
cs
jp
ror
jne
mov
and
pop
test
inc
mov
fxch
add
adc
shl
or
adc
and
xlat
idiv
stos
aad
jns
cmps
jg
retf
ret
jmp
stos
inc
out
pop
fwait
das
nop
cli
lods
data16
push
(bad)
in
loop
cmc
neg
push
(bad)
lea
aas
inc
mov
test
cld
sub
push
jl
stc
mov
add
out
push
jg
push
push
jo
cmc
ss
rol
and
mov
repz
dec
xor
popf
or
repz
mov
movs
loop
shl
pop
mov
lods
adc
dec
repnz
dec
(bad)
mov
dec
pop
jle
sbb
test
popa
lods
sti
dec
and
arpl
pop
sbb
les
jae
mov
and
in
jl
mov
call
jg
into
jg
aam
mov
or
dec
inc
inc
in
xor
sbb
out
push
aad
jle
inc
mov
in
xor
adc
pop
inc
test
jmp
imul
or
pand
je
cmp
jns
and
outs
mov
push
adc
loop
inc
add
adc
les
movs
lahf
cdq
clc
jl
stos
adc
jb
add
(bad)
xlat
sub
xchg
in
loope
enter
les
mov
rol
adc
add
out
cmp
bnd
int3
dec
cmp
or
retf
jle
sub
cs
test
lea
xchg
aad
mov
loop
adc
mov
inc
or
mov
loop
and
aam
(bad)
inc
outs
jp
push
popf
cld
dec
fmul
sbb
jb
push
fwait
call
mov
inc
ret
jmp
mov
nop
xchg
xchg
pusha
(bad)
cld
mov
or
mov
and
mov
mov
int
sbb
or
push
cmps
nop
fwait
rcr
leave
and
adc
pop
cmp
lea
leave
sar
xchg
xor
into
pop
lahf
xchg
adc
jg
pop
scas
inc
inc
iret
scas
in
outs
out
rcl
dec
stos
xchg
mov
inc
or
fucomip
arpl
ss
sti
fldcw
gs
(bad)
loope
cmp
ds
mov
fstp
repz
pop
ds
mov
xor
fnstsw
cmp
ja
pop
mov
and
daa
jmp
xchg
pop
cmp
shr
sub
and
shr
inc
inc
(bad)
sbb
add
cdq
ret
and
and
loop
data16
out
sbb
mov
mov
cmp
lods
jno
pop
stc
and
dec
push
sti
mov
pop
(bad)
push
push
cmp
sub
mov
xor
std
out
call
cmc
xchg
sbb
push
jb
xchg
adc
pusha
or
mov
sbb
scas
cmp
pushf
mov
fild
clc
cmps
into
(bad)
test
xor
loop
js
(bad)
mov
ss
pushf
sub
test
ror
adc
xlat
loopne
cmps
jno
sub
fs
mov
lock
mov
dec
imul
pop
outs
daa
or
adc
stos
cli
call
jno
add
sbb
mov
inc
jnp
dec
mov
int3
sub
das
retf
lahf
adc
jno
stos
mov
leave
(bad)
call
dec
in
fcom
sti
sub
(bad)
and
xchg
adc
idiv
push
(bad)
lahf
and
jp
aaa
or
inc
les
jo
js
xchg
cmp
mov
mov
push
xor
xchg
ret
lock
dec
(bad)
outs
(bad)
mov
dec
pop
add
imul
dec
jmp
mov
xchg
jne
test
cmps
cmps
add
ret
test
and
test
push
(bad)
dec
clc
pop
jp
pop
inc
popf
std
call
cmp
xor
xor
pusha
stos
cli
inc
stos
pop
ins
and
cmp
test
aas
xchg
nop
in
rol
aaa
xor
cmp
jno
mov
mov
mov
xchg
rcr
xchg
gs
(bad)
lods
adc
sub
push
fs
mov
mov
xchg
imul
xchg
stos
(bad)
xlat
push
adc
nop
sub
sahf
mov
sti
mov
out
or
(bad)
out
cwde
aaa
and
inc
or
xor
mov
and
sub
mov
mov
movs
cmp
fst
jnp
enter
pop
dec
mov
aas
pop
xlat
push
cmps
dec
stc
das
leave
clc
xor
div
mov
inc
or
sub
and
and
add
inc
pop
lods
mov
mov
jge
ss
xchg
fs
adc
clts
sub
daa
in
push
lods
mov
inc
and
ret
in
lock
stc
nop
jmp
push
pop
mov
das
stos
jmp
sub
mov
imul
mov
popf
popf
sbb
jecxz
outs
pop
enter
retf
mov
jne
retf
ins
inc
sbb
fs
add
jnp
cmps
inc
in
add
mov
xchg
in
sahf
fcomp
push
vphadddq
call
int3
pop
repz
and
in
dec
mov
pop
out
push
and
sbb
test
push
in
dec
test
leave
dec
mov
stos
jb
out
sub
enter
sbb
push
dec
fidiv
mov
push
arpl
fiadd
je
push
cmps
jge
mov
mov
rcr
cdq
lock
scas
scas
sbb
std
sbb
js
dec
xor
arpl
pop
loope
pop
cmp
and
xchg
rcr
out
adc
and
mov
sti
ret
scas
or
bswap
and
sbb
sar
(bad)
and
adc
jnp
test
sub
add
mov
jb
(bad)
jbe
add
mov
loopne
fiadd
mov
sbb
xor
int
int
adc
mov
lods
push
cmc
push
cs
leave
add
cmp
push
movs
pop
inc
cwde
jbe
push
mov
mov
retf
pop
jp
push
add
mov
scas
popf
movs
mov
jbe
add
pop
dec
sub
push
or
push
imul
inc
dec
(bad)
shl
push
add
scas
and
and
les
and
mov
pop
aaa
repz
pop
cmc
arpl
frstor
push
shl
icebp
xor
mov
and
xchg
mov
mov
pop
fs
cwde
sbb
fwait
dec
pop
aaa
push
int
push
ja
nop
mov
popf
and
fld
xor
int3
sub
aas
loopne
ins
call
cld
or
jmp
lahf
in
arpl
aaa
into
movs
in
daa
cmp
jg
pop
pop
mov
fsubr
xlat
rcr
mov
int3
das
inc
repnz
mov
leave
dec
movs
ror
xchg
jo
sub
test
arpl
test
mov
and
cli
pushf
shl
pop
jmp
retf
adc
paddw
out
cmp
mov
xchg
push
xchg
cs
mov
mov
mov
repz
ss
test
ja
in
mov
inc
mov
retw
sbb
dec
inc
outs
jge
sub
adc
not
jae
loope
into
cmps
cld
xor
sbb
jmp
in
push
and
sub
inc
in
xchg
inc
mov
mov
dec
sub
inc
cmp
ja
cmp
jb
sti
in
adc
push
mov
xlat
int3
int
and
jmp
and
mov
mov
mov
cs
add
test
mov
mov
stos
fdiv
or
call
inc
aam
shl
mov
ins
adc
xor
xor
fcomip
pop
and
mov
ret
idiv
arpl
jecxz
(bad)
push
jae
stc
cmps
cs
int
inc
cmp
inc
and
mov
cmp
loopne
cmp
and
aad
in
push
push
xchg
cmps
sar
or
push
mov
ss
mov
cmp
clc
jle
push
ins
sub
outs
imul
fmul
daa
xor
mov
icebp
ss
push
cwde
das
leave
mov
(bad)
pop
stos
imul
das
inc
or
mov
out
xchg
fdiv
or
pop
fild
xchg
sahf
gs
pop
adc
scas
sahf
(bad)
jmp
and
in
mov
cmps
inc
or
call
push
and
stc
movs
not
mov
sahf
lock
pop
outs
or
xchg
fwait
cmc
nop
iret
mov
fcomp
dec
test
dec
pushf
pop
push
xchg
jbe
popf
pop
mov
pop
mov
cli
push
(bad)
pop
ins
ins
inc
mov
and
hlt
pop
ret
jo
test
inc
jae
xchg
and
iret
mov
test
mul
xor
lea
inc
loope
xchg
movs
mov
cmp
jle
cmp
pop
aad
scas
mov
pop
mov
test
dec
iret
adc
in
dec
mov
pop
xchg
xor
mov
dec
std
fadd
dec
jbe
push
add
mov
mov
out
mov
push
and
daa
stc
fstp
push
mov
cdq
mov
test
sbb
in
imul
int3
jnp
int
jb
sub
test
mov
movs
and
ficom
and
push
(bad)
cs
sub
ins
jl
js
loopne
mov
add
jbe
xchg
sar
fst
cwde
imul
pusha
loope
adc
repz
rcl
dec
mov
pop
push
and
mov
cwde
pop
push
inc
jo
into
out
ffreep
mov
in
push
cmp
(bad)
mov
(bad)
ins
xchg
jl
dec
(bad)
add
ins
jbe
jmp
jno
mov
fdivr
xor
jl
xor
mov
jae
mov
mov
out
dec
cmc
icebp
fsubr
adc
sbb
mov
nop
imul
movs
or
mov
mov
rcr
cmps
in
retf
sub
retf
sub
jg
pusha
dec
inc
pushf
loopne
ret
out
clc
je
xor
stc
push
and
mov
cmp
mov
popa
shl
mov
or
xchg
std
mov
in
outs
(bad)
and
add
push
ss
repnz
out
add
mov
xchg
nop
cmp
in
sbb
inc
pushf
or
les
test
in
das
(bad)
xchg
xlat
jmp
pop
es
xor
mov
fsubr
dec
out
add
xchg
addr16
(bad)
xor
daa
cmp
mov
stos
cmc
retf
jmp
cmovnp
lea
mov
repz
adc
push
or
call
cs
daa
mov
loopne
mov
inc
xor
retf
dec
inc
outs
xlat
lahf
and
popa
add
call
fyl2xp1
fcmovnu
dec
mov
test
nop
das
pop
in
push
jmp
mov
push
int
inc
jmp
adc
sbb
and
inc
jne
cld
ret
leave
ror
dec
dec
push
stos
popf
cmp
jnp
add
and
lea
fwait
jmp
or
jg
mov
cmp
jmp
push
dec
jb
in
pop
push
push
xor
jg
jle
or
cmp
jo
sbb
jmp
jl
mov
sub
and
stos
in
mov
mov
sahf
or
sub
lea
sbb
enter
scas
loop
aad
out
cmp
mov
and
ret
mov
sbb
mov
push
add
mov
cmp
dec
mov
add
adc
xchg
mov
rol
mov
in
nop
mov
sub
xor
rcl
sbb
fpatan
add
jecxz
and
call
mov
fsub
push
lock
xchg
and
ins
lods
inc
add
sub
outs
retf
mov
adc
cdq
sbb
movs
push
pop
lods
mov
or
dec
inc
inc
mov
fist
pop
push
push
add
(bad)
cmc
test
jp
in
cmc
xchg
(bad)
out
push
enter
mov
jp
loopne
popf
icebp
jo
cmp
inc
data16
pop
enter
xor
or
xchg
popa
mov
sub
and
js
push
(bad)
lahf
push
repz
mov
out
or
ins
fdiv
dec
popf
std
xlat
sti
int
mov
(bad)
repnz
js
push
stos
in
std
loopne
ror
sbb
fstp
lods
scas
fld
in
test
mov
out
pushf
mov
cwde
(bad)
xchg
jp
clc
jmp
and
add
xor
test
stc
adc
cmp
call
push
mov
and
sbb
sahf
adc
es
cld
and
sbb
test
push
je
push
xchg
(bad)
es
pop
push
inc
cmc
jb
leave
mov
mov
adc
fist
mov
mov
xchg
call
js
adc
add
imul
sbb
inc
mov
add
aad
jmp
std
fmul
(bad)
fdivr
pop
sbb
add
repz
mov
out
outs
movs
add
inc
add
dec
push
sbb
push
ins
clc
icebp
test
inc
jl
xchg
arpl
jb
pop
arpl
in
ds
loop
mov
call
pusha
test
pushw
pop
mov
inc
pop
adc
icebp
aad
cmp
cmp
frstor
adc
test
retf
xor
out
test
inc
mov
adc
xchg
retf
fs
push
and
ins
js
dec
outs
outs
mov
js
shr
cmp
adc
loop
jo
outs
(bad)
push
rol
mov
retf
or
sbb
ror
jae
xchg
mov
xchg
movs
nop
mov
sbb
dec
pop
shr
sub
dec
dec
rol
adc
jg
bnd
jne
mov
rol
push
dec
arpl
std
mov
std
add
sbb
js
cmps
imul
inc
xchg
xchg
jl
cmp
inc
popa
mov
push
dec
add
inc
movs
cli
pop
data16
adc
bound
jmp
addr16
aad
or
adc
inc
push
xchg
mov
popf
leave
out
lods
btr
add
dec
pop
fcmove
stos
ds
stos
inc
mov
inc
push
mov
jnp
out
cli
dec
cmp
adc
and
pop
pop
aaa
add
mov
xchg
arpl
(bad)
dec
xor
daa
sub
mov
adc
pop
cmps
cmp
addss
sahf
xlat
lahf
ficomp
xor
xor
jns
xor
push
fs
fild
shl
cli
outs
ins
leave
jae
fcomp
jle
cmp
pop
or
inc
gs
dec
pop
xchg
aam
add
movs
push
dec
mov
(bad)
hlt
shl
adc
mov
push
push
arpl
ret
aaa
cmps
pop
int3
cwde
or
mov
jne
sub
imul
cmp
mov
test
cmp
repz
cmp
dec
pop
pop
out
sub
push
fistp
inc
(bad)
xor
mov
xor
out
sti
psubd
repnz
arpl
mov
push
push
sbb
js
pop
or
mov
push
dec
popf
pop
arpl
cwde
jp
inc
push
movs
xor
cmc
repnz
or
xor
les
pop
adc
out
cmp
add
mov
jo
gs
jmp
cld
mov
fidivr
icebp
or
mov
jmp
pop
(bad)
and
mov
and
xlat
sbb
mov
imul
mov
or
sbb
fild
dec
arpl
cmp
mov
mov
lods
mov
(bad)
hlt
jmp
jge
dec
adc
jnp
mov
call
or
cmp
and
xchg
aaa
loopne
frstor
mov
and
std
cmp
movs
fxam
and
sbb
pop
cmp
sbb
arpl
pop
out
cdq
mov
xor
jmp
or
fstp
pop
mov
xor
ficom
ds
mov
mov
mov
int3
lds
jae
(bad)
or
sbb
sbb
std
mov
inc
enter
movs
retf
rol
pop
adc
and
dec
loop
and
sbb
push
fist
cld
cmovnp
pushf
jae
dec
dec
push
dec
movs
loope
pop
dec
inc
scas
fld
aad
loope
dec
and
cmps
sbb
or
and
fiadd
inc
shr
clc
jne
add
clc
mov
pop
mov
cmp
mul
mov
and
sti
or
jg
mov
das
enter
int
js
cwde
pop
test
scas
push
imul
test
cli
(bad)
outs
or
jne
test
dec
and
lahf
lea
mov
iret
out
fyl2xp1
mov
icebp
ds
in
out
push
in
inc
aad
ror
dec
inc
fisubr
pop
dec
ret
jmp
retf
xor
inc
and
test
mov
rcl
pop
cmc
ins
sahf
cdq
rcr
in
cmps
aas
and
rcl
test
pop
push
in
stc
cmp
sub
and
cmp
jnp
(bad)
sbb
jp
sbb
sub
retf
push
fwait
mul
adc
jge
fnsave
lahf
call
stos
test
adc
pop
sbb
call
aaa
cmp
and
push
jmp
jb
xor
pop
jge
movs
scas
imul
and
pop
fsubr
dec
stos
or
cmp
or
mov
xor
or
imul
popf
pop
pop
call
or
repz
xchg
fwait
add
adc
mov
mov
jmp
cs
add
fistp
aad
call
je
addr16
fld
add
jge
pop
int3
push
mov
hlt
and
cmps
and
ins
cmp
xor
push
xchg
add
lods
jecxz
add
and
or
jns
retf
inc
push
sbb
ror
or
(bad)
jns
cmp
cwde
imul
stc
es
stc
retf
(bad)
fsub
ror
stos
mov
out
(bad)
imul
and
les
and
xchg
stc
das
inc
mov
cmc
mov
inc
adc
hlt
or
sub
dec
mov
sub
dec
test
jbe
(bad)
out
ret
out
jnp
jge
or
out
and
aaa
int3
cld
jle
ss
push
mov
sub
(bad)
mov
dec
hlt
dec
inc
ret
out
outs
pop
retf
fbstp
inc
movs
add
jae
xor
jecxz
dec
sbb
adc
mov
retf
jp
jecxz
dec
les
sbb
inc
fcom
int3
xchg
xor
in
sti
into
push
cmp
adc
cwde
test
push
pop
jne
adc
mov
xchg
jmp
adc
or
mov
jl
push
add
fbstp
arpl
jmp
popa
cwde
adc
xchg
add
pushf
(bad)
sbb
jg
cmp
ret
sub
adc
add
xlat
adc
or
push
das
and
dec
int3
jle
mov
mov
pop
mov
sbb
and
pushf
push
cld
ret
push
adc
inc
scas
xchg
int
stos
ret
xor
daa
adc
push
or
(bad)
sbb
pop
sub
fmulp
mov
iret
xor
adc
in
retf
fstp
mov
xchg
mov
pop
dec
hlt
pop
dec
push
out
xchg
adc
pop
scas
xchg
xor
or
fwait
sbb
(bad)
(bad)
fcmovnbe
xchg
mov
cmps
ret
pop
jmp
aad
jne
dec
(bad)
mov
call
lds
xlat
mov
stos
dec
dec
shr
adc
adc
fwait
mov
movaps
mov
xchg
jl
icebp
scas
hlt
cli
sahf
adc
gs
jmp
xchg
je
pop
js
mov
jne
push
cld
dec
stos
mov
xlat
mov
push
rol
dec
xor
(bad)
lods
jmp
aam
push
repnz
push
add
xchg
push
lds
fild
jnp
imul
dec
push
stos
cmps
adc
adc
push
stos
pop
mov
xor
(bad)
lea
add
sub
icebp
mov
push
add
and
imul
pop
js
sub
pusha
(bad)
data16
pushf
into
in
jle
push
enter
scas
cli
arpl
cmps
shl
retf
outs
cld
push
das
ret
ss
in
mov
scas
and
xchg
cmp
repnz
mov
mov
add
fistp
mov
inc
dec
xor
imul
pop
or
pop
add
(bad)
pop
out
mov
ficom
bound
xor
pop
pop
aaa
(bad)
push
gs
sbb
xor
cmp
loope
hlt
inc
test
mov
bound
mov
add
lock
ins
or
sysexit
call
or
data16
loop
out
rcl
adc
mul
shr
aad
(bad)
ja
pop
sbb
sub
cmp
xor
add
adc
mov
xor
ds
aaa
dec
add
fiadd
pop
and
imul
nop
mov
or
repz
push
idiv
(bad)
mov
fnsave
push
into
btr
call
scas
aas
retf
cmc
jmp
cmp
call
ret
jmp
icebp
fsub
je
mov
lock
nop
stos
or
(bad)
loop
imul
push
push
adc
jmp
adc
cmps
icebp
cmps
jo
ret
adc
and
and
sahf
ret
sub
movs
ja
imul
icebp
loopne
sti
or
daa
std
and
test
cld
sub
sub
add
ds
xchg
call
sub
mov
cmp
add
out
dec
xchg
imul
xor
test
adc
inc
scas
fmul
or
cdq
ficom
adc
xor
data16
popf
in
sbb
cwde
dec
mov
nop
sub
ret
ds
mov
fiadd
(bad)
sbb
dec
stos
into
or
loop
pop
daa
test
or
inc
in
mov
mov
repz
popf
xchg
and
xchg
jg
lds
mov
pop
xlat
add
inc
push
mov
lahf
iret
nop
add
pmulhuw
outs
cmp
push
nop
ja
push
push
dec
sub
add
idiv
and
adc
cmp
xor
in
call
shl
or
sbb
adc
xor
in
jle
test
ja
idiv
pop
cmp
popf
loopne
mov
mov
push
mov
in
loopne
sbb
adc
call
push
ins
cld
sar
ficomp
retf
and
cmp
add
arpl
sub
mov
jmp
lods
cmp
popf
pop
call
xor
cmps
cwde
in
cmc
fdiv
adc
mov
bound
repz
adc
sbb
lock
iret
mov
aad
imul
add
xchg
jg
and
xor
mov
mov
inc
add
adc
bnd
repz
add
mov
cli
mov
pop
and
xchg
push
pop
xchg
push
mov
jge
mov
(bad)
push
xchg
mov
push
push
aaa
mov
es
dec
xor
arpl
pop
mov
mov
add
loopne
daa
fdiv
or
lods
mov
mov
loop
and
aam
iret
cwde
pop
and
or
jne
mov
ja
sbb
bnd
loopne
ja
jnp
hlt
out
lea
adc
cmp
pop
rcl
loope
sub
push
loop
xchg
rcr
inc
or
inc
pop
push
in
or
ins
jno
imul
inc
cs
sbb
repnz
in
push
mov
cwde
add
ss
pop
popa
mov
add
scas
dec
push
aam
mov
in
push
out
pop
mov
ds
adc
mov
or
inc
test
adc
(bad)
xor
jle
fldenv
pop
icebp
cld
fild
push
mov
sbb
mov
dec
gs
test
sbb
jecxz
fucomi
rol
and
push
test
pusha
enter
sahf
sub
jle
gs
add
xchg
stos
adc
mov
ss
push
mov
mov
fwait
xchg
or
outs
and
daa
mov
iret
xor
jg
dec
data16
fbld
in
inc
cmps
fisub
mov
and
push
jle
push
cmp
pop
shl
in
pop
xchg
int3
das
cli
push
jb
ins
pop
jne
pop
adc
xchg
or
imul
int
fcom
clc
xchg
sbb
sbb
daa
inc
inc
xchg
add
in
inc
pop
ja
push
movs
push
add
adc
mov
cmps
cdq
shl
movs
gs
jmp
fnsave
mov
into
sbb
mov
xor
stc
ror
loop
mov
mov
push
sbb
cld
inc
add
xor
jns
push
xchg
pushf
sbb
jmp
gs
and
mov
shr
xchg
cmps
or
adc
daa
xchg
pop
mov
mov
movs
and
sbb
scas
fwait
ss
(bad)
mov
add
push
inc
hlt
imul
jmp
sbb
lds
pop
xchg
push
movs
outs
and
mov
inc
ret
pushf
jb
or
js
xchg
in
and
cmc
mov
adc
push
cmp
and
jno
fst
xor
lods
popf
cmp
mov
jno
stos
cmps
jmp
mov
in
(bad)
into
xor
ret
iret
jg
xchg
(bad)
jl
mov
ret
repnz
mov
xchg
push
mov
(bad)
cli
jl
fld
mov
lods
ins
fisttp
into
clc
cmc
mov
mov
ins
out
push
push
rol
inc
xlat
mov
ja
pop
pop
into
leave
sub
loope
sub
lods
es
icebp
test
mov
(bad)
dec
retf
push
lds
fincstp
call
jl
(bad)
(bad)
ss
ret
pop
push
xchg
addr16
push
int
es
js
sbb
ins
mov
add
mov
sub
int3
mov
(bad)
les
ret
or
mov
inc
repnz
daa
pusha
mov
arpl
shl
push
fwait
aaa
cmc
in
(bad)
jmp
jmp
nop
into
fst
mov
(bad)
fistp
or
mov
or
mov
jl
cmps
sub
jge
inc
xor
xchg
std
out
test
adc
xchg
inc
cmp
sbb
stos
dec
iret
and
ret
pop
xchg
xchg
sbb
jl
xchg
cld
jnp
iret
add
sti
sbb
(bad)
in
inc
adc
push
jmp
popf
add
dec
mov
add
xor
adc
cdq
aam
cmps
test
cdq
leave
and
les
mov
data16
xor
xor
pop
adc
es
mov
jecxz
jmp
jnp
xchg
add
pop
push
mov
repnz
fcmovnb
jge
lods
sbb
and
iret
or
out
(bad)
mov
pop
test
dec
mov
call
or
mov
xor
popf
clc
mov
sbb
mov
xchg
and
xchg
iret
shl
gs
fcom
jg
and
mov
iret
in
repz
inc
mov
jmp
push
fcomp
mov
cmc
xchg
add
cdq
sar
jbe
or
jb
push
fsub
(bad)
stos
mov
jge
mov
lods
in
dec
mov
jle
call
inc
cli
adc
xor
pop
(bad)
addr16
push
adc
xchg
mov
sbb
in
mov
mov
popf
sbb
in
inc
stos
retf
xchg
mov
mov
jl
mov
mov
adc
pop
sbb
cmc
fmul
fcom
outs
sti
fcom
and
dec
mov
iret
add
rcl
xchg
ret
push
mov
int
adc
sub
xchg
push
mov
add
jbe
mov
in
bound
repnz
mov
xchg
dec
jo
jnp
sub
pop
jmp
repnz
std
leave
fisttp
mov
xchg
xchg
int
cmp
les
add
pop
pop
ret
mov
add
data16
rcr
mov
sub
sbb
inc
adc
xor
xor
bound
xchg
and
sub
sub
test
and
jecxz
xor
bound
fistp
aam
or
retf
mov
adc
(bad)
mov
shr
mov
mov
xor
(bad)
popa
in
mov
pop
xor
cmp
(bad)
sti
ds
add
mov
pop
mov
inc
lods
ss
xchg
mul
(bad)
cmc
ret
adc
sub
adc
xchg
adc
cmp
push
adc
(bad)
pop
mov
xchg
mov
data16
scas
lds
retf
rcr
inc
dec
mov
pop
jl
push
retf
scas
jl
sbb
nop
fiadd
and
push
mov
jle
sub
add
jo
ficom
cmc
jnp
nop
push
inc
enter
jno
sbb
out
(bad)
xchg
or
popf
adc
icebp
clc
loop
push
cmp
sub
cdq
clc
pusha
js
or
cmp
xor
fbld
aas
xchg
leave
out
outs
mov
cdq
setnp
pop
sub
sub
pop
push
mov
or
jae
in
push
ret
sbb
push
dec
adc
inc
mov
sub
frstor
outs
mov
inc
add
mov
gs
je
jl
int
mov
gs
xchg
xchg
test
and
mov
adc
mov
cld
adc
jo
sahf
fst
pop
int3
push
xchg
shl
into
sahf
int
inc
jne
sbb
push
div
shr
mov
xor
ins
jae
bound
loop
and
dec
out
loop
push
fucomp
adc
mov
adc
xchg
or
xor
xchg
inc
sbb
jo
or
idiv
ret
jp
jl
(bad)
mov
xchg
inc
lock
imul
lock
imul
mov
push
inc
bound
mov
push
xchg
leave
pop
fild
jge
add
mov
sti
shr
inc
mov
scas
cmc
fld
cmp
xchg
xor
or
pop
push
arpl
lods
movs
lods
push
xchg
stos
cwde
arpl
add
retf
call
test
pop
mov
shl
test
pop
clc
push
or
hlt
sbb
inc
xor
dec
cmp
clc
cmp
repnz
mov
out
xor
not
pop
xchg
pushf
mov
fistp
dec
test
bound
fwait
dec
dec
jns
cs
repz
inc
dec
retf
out
mov
jo
pop
cmp
fisubr
in
mov
fld
lds
cli
cmp
fcom
sbb
pop
fstp
cmp
fs
and
dec
pop
mov
jg
adc
push
pop
repz
in
mov
cmp
and
cwde
xchg
cli
mov
mov
and
jmp
mov
adc
xchg
into
sbb
das
mov
xchg
inc
test
retf
loop
sbb
pop
cmp
adc
sbb
cmp
ds
aaa
push
cwde
xor
cmp
sbb
fcomp
ret
push
mov
mov
jb
lods
data16
and
jp
icebp
jne
dec
sahf
ret
cmps
adc
rol
or
clc
cmps
xor
pop
jg
sub
out
adc
xlat
fnstenv
push
(bad)
lods
jp
sub
inc
xchg
rcr
cmp
sbb
imul
lea
in
sub
mov
mov
loopne
cmp
lea
mov
mul
(bad)
push
xchg
retf
cmp
test
xchg
inc
sbb
inc
retf
cmp
xchg
cmp
repnz
add
push
jb
lods
add
out
pusha
sahf
int3
pop
dec
std
jb
inc
cs
sar
(bad)
call
aas
bound
xor
lahf
pushf
push
int
add
mov
mov
xor
aas
sbb
jo
adc
cmp
jo
dec
loop
out
mov
or
cs
(bad)
stos
shl
fadd
pop
dec
mov
xchg
sub
lods
xor
test
stos
pop
into
adc
jnp
xor
jo
push
xor
rol
dec
mov
scas
or
loop
inc
xchg
dec
xchg
mov
cdq
and
iret
xchg
mov
popa
aas
xchg
add
bnd
ins
cmp
inc
add
xor
stos
pop
lock
jbe
aad
push
add
cmp
ja
jbe
jecxz
jno
rol
push
pop
ss
inc
mov
sar
(bad)
cli
inc
ret
cmps
ins
icebp
aaa
clc
pop
dec
sbb
dec
and
jae
imul
call
mov
pop
arpl
push
inc
jge
mov
cmc
dec
(bad)
fwait
dec
(bad)
and
add
xchg
es
sbb
jle
or
push
sub
jns
mov
xor
mov
sbb
or
dec
pop
loope
ss
push
adc
sar
sub
aad
xchg
(bad)
out
nop
fld
mov
xchg
je
fcmovbe
or
outs
pop
movs
mov
mov
ss
fs
mov
adc
or
mov
js
and
cmp
xchg
dec
ja
aad
hlt
push
pop
ins
pop
cmp
fld
xor
dec
je
jg
cli
popa
(bad)
mov
popf
xchg
outs
out
dec
ja
dec
xchg
xchg
mov
sub
sbb
shl
clc
xchg
jne
xchg
int
or
mov
pop
inc
fscale
xchg
push
push
push
gs
sub
inc
mov
add
mov
mov
(bad)
fistp
not
test
cmps
cmps
or
dec
xchg
mov
(bad)
icebp
mov
jb
push
cmp
push
xchg
xor
mov
ror
dec
xlat
mov
jp
es
or
lahf
xchg
jmp
jmp
outs
(bad)
es
cmp
sub
jbe
pushf
cli
dec
cdq
jmp
xchg
pop
lahf
fs
or
cld
add
pop
int3
adc
push
in
cli
cdq
imul
(bad)
xchg
lods
inc
push
ins
pop
lahf
test
sbb
aad
stos
test
jmp
fs
dec
mov
jb
adc
mov
mov
inc
and
mov
cmp
pop
ss
lds
ins
push
mov
mul
sub
clc
leave
arpl
es
or
daa
jno
xor
pop
pop
leave
add
ret
adc
mov
das
(bad)
push
adc
jg
shl
imul
cli
xlat
sbb
xor
lock
push
push
or
(bad)
ins
out
fisubr
(bad)
out
push
add
jns
lods
call
sti
icebp
xchg
dec
xor
add
push
(bad)
lods
loop
sahf
popf
or
imul
retf
xchg
fistp
(bad)
repz
mov
cmp
loopne
push
cmp
ds
out
mov
cmp
adc
cmp
in
adc
mov
and
sub
and
adc
ins
nop
in
call
mov
add
mov
xor
or
xchg
sahf
in
dec
leave
pop
out
gs
push
mov
push
lods
lods
mov
dec
stc
xchg
xchg
mov
pop
dec
cmp
xor
addr16
sub
adc
stc
jno
(bad)
sbb
inc
pop
xchg
xor
je
or
mov
push
lods
inc
adc
mov
(bad)
cmc
popa
add
(bad)
and
dec
and
call
fs
or
xchg
icebp
dec
and
adc
pop
in
cld
mov
jg
out
mov
cmps
sbb
lahf
push
sub
gs
xchg
xchg
cmps
dec
push
jmp
mov
fbld
popa
(bad)
lods
arpl
add
cld
sbb
lock
add
jo
repnz
pusha
pop
loope
icebp
pushf
fdiv
or
push
jae
jl
data16
call
sbb
int3
shl
xor
or
jle
leave
lods
dec
and
(bad)
add
inc
call
lahf
xor
or
xchg
test
cli
xchg
pop
sbb
mov
pushf
hlt
jge
push
push
and
test
(bad)
inc
jbe
push
dec
pop
loop
test
mov
icebp
inc
xchg
leave
sti
mov
and
sub
test
mov
mov
or
outs
(bad)
(bad)
test
cwde
push
repnz
daa
pusha
sbb
jle
and
call
cmp
adc
cmp
jnp
push
sub
int
jo
sbb
xor
or
in
mov
push
mov
(bad)
adc
and
push
scas
inc
popa
jl
jmp
push
pop
or
and
jnp
ins
cwde
(bad)
mov
outs
test
and
mov
push
dec
cmc
jno
mov
lods
or
fiadd
xor
jmp
inc
aad
sar
push
mov
clc
addr16
sub
sub
mov
lods
pop
mov
jo
xor
shl
lds
scas
data16
adc
sbb
fld
aaa
cmc
sbb
outs
sbb
mov
push
sub
mov
push
jge
inc
out
les
in
scas
and
cmp
nop
(bad)
dec
adc
sub
std
jl
jnp
mov
push
dec
dec
fsub
push
xchg
fcmovne
mov
sub
(bad)
loop
push
xchg
cmps
push
in
(bad)
(bad)
aad
mov
xchg
cmp
fisub
fmul
sub
jae
mov
pop
shl
lods
mov
aas
jecxz
repnz
xor
mov
fadd
pusha
mov
push
add
pop
addr16
(bad)
dec
outs
jge
adc
cmp
sbb
lods
xchg
inc
test
aas
fs
dec
pop
xchg
and
imul
push
push
fs
push
add
ss
push
(bad)
dec
mov
and
or
cmp
arpl
xchg
shl
(bad)
and
cmp
pop
pop
sbb
sbb
int3
cmp
(bad)
les
jno
fistp
add
xor
scas
inc
dec
sub
int
push
jp
(bad)
imul
or
leave
ret
mov
inc
test
mov
imul
iret
push
xlat
adc
lods
data16
test
and
inc
mov
xor
lods
aad
fs
fwait
push
(bad)
xchg
ss
push
out
jo
imul
aas
jecxz
(bad)
push
idiv
inc
mov
(bad)
mov
(bad)
sti
adc
(bad)
int
mov
aaa
push
xchg
jge
popa
push
jno
cmp
lods
cmp
jns
pop
es
and
ja
lods
in
mov
hlt
pop
addr16
js
cld
adc
cmc
and
je
xor
add
adc
cmp
sbb
shr
aam
scas
clc
bound
test
or
retf
sub
inc
loopne
or
xchg
sti
mov
das
cwde
sbb
jl
mov
pop
das
dec
xchg
pusha
push
leave
cli
pop
fabs
and
mul
cs
xchg
gs
xchg
mov
movs
sbb
loop
xor
or
loop
daa
push
dec
jb
dec
ins
or
jge
jmp
xor
pop
mov
cmc
sub
adc
cmp
mov
push
rol
jmp
(bad)
fstp
cmp
leave
(bad)
jp
inc
jge
stos
xor
loop
inc
inc
or
push
pop
stos
out
call
add
xchg
cmc
es
sbb
scas
push
mov
adc
push
xchg
(bad)
cdq
mov
jo
xor
cld
push
push
jo
inc
mov
into
ret
add
xchg
repnz
pop
sahf
sub
ficom
loopne
pop
xor
adc
jae
push
cmp
stos
call
mov
add
retf
pushf
rcr
inc
jmp
cmp
xchg
movs
loope
imul
mov
dec
push
lds
mov
add
pop
arpl
jmp
cmp
int3
push
(bad)
rcl
lods
iret
(bad)
stos
aad
inc
and
scas
pop
add
xchg
popa
jno
inc
fcom
adc
call
sub
fsubr
adc
dec
enter
lods
bound
sbb
retf
daa
xlat
and
out
repnz
jmp
hlt
int
std
sbb
std
movs
cli
mov
call
push
mov
mov
mov
and
lahf
ss
addr16
dec
ins
std
cmp
dec
dec
adc
hlt
psrad
jae
jl
in
in
mov
pop
mov
mov
sbb
bound
add
scas
inc
fld
adc
sub
int3
in
movs
sbb
sbb
jp
and
outs
in
imul
out
dec
lods
cmp
cs
push
out
cmp
dec
jb
ins
loope
mov
clc
mov
ds
or
mov
push
mov
sub
out
rol
fdiv
je
add
mov
(bad)
int
push
xchg
ins
jae
aam
push
js
(bad)
or
inc
xor
jg
bound
(bad)
inc
cmps
bound
xchg
push
gs
mov
pop
cmps
and
shr
inc
ins
mov
aad
enter
jmp
test
sti
int
cvtps2pi
fwait
inc
fmul
lock
or
in
call
dec
movs
sub
enter
popa
cmp
lods
mov
mov
push
imul
and
xchg
mov
xlat
into
test
cmp
or
push
add
or
xor
mov
jmp
fimul
xchg
adc
iret
fadd
scas
call
xchg
add
popf
icebp
mov
cli
sub
xchg
jg
mov
shl
jmp
imul
nop
fnsave
xor
mov
push
push
idiv
sbb
jns
fst
lods
(bad)
push
xor
not
cld
pop
mov
pop
cmp
mov
lock
xchg
mov
in
inc
cs
mov
or
(bad)
cwde
xor
fsubp
clc
adc
movs
mov
xor
inc
pop
pop
out
push
stos
mov
mov
push
rcl
aaa
jae
xor
inc
test
mov
or
mov
hlt
daa
xor
jmp
sbb
adc
add
cmp
cs
(bad)
cmp
mov
push
je
repnz
outs
pop
daa
rol
cmp
push
fwait
xor
std
sbb
xor
inc
xchg
fs
test
aam
push
(bad)
outs
sub
and
cmp
das
jle
mov
cmps
cwde
pop
imul
push
cwde
push
fisub
push
outs
jno
xor
popf
sub
int3
nop
mov
mov
pop
(bad)
pop
js
sbb
lods
cmps
and
std
jmp
gs
mov
arpl
sub
loop
sahf
test
push
call
scas
lgs
inc
xor
scas
sahf
push
enter
es
fst
dec
inc
jl
mov
or
je
rcr
mov
stc
sub
xor
dec
lods
stc
xor
ja
xor
aaa
pop
mov
xchg
sub
cmc
sub
(bad)
and
sub
push
mov
pop
pop
outs
lock
in
mov
push
push
test
lea
and
cmp
std
cwde
pop
add
rcr
stc
push
ret
fcomp
repz
xchg
fadd
pop
jle
int
sub
pop
iret
jb
data16
pop
pop
dec
sbb
xchg
mov
daa
ins
das
or
dec
out
jnp
in
mov
cmp
das
fdiv
scas
mov
scas
in
add
ss
aam
pop
int
mov
das
or
ret
dec
cmp
dec
retf
or
or
loopne
add
mov
jl
leave
adc
mov
jg
xchg
pop
jle
shl
shl
sbb
pop
mov
fmul
cld
aad
add
call
adc
cs
dec
inc
xchg
push
inc
test
in
mov
xchg
sub
mov
sub
inc
ret
cdq
outs
cli
leave
and
or
push
sti
shl
dec
stos
add
push
add
(bad)
(bad)
loope
les
ins
lea
jns
in
enter
pop
jle
leave
mov
jo
pop
sahf
jp
inc
mov
adc
sub
mov
adc
push
mov
retf
ds
jne
mov
rcl
and
dec
adc
pop
or
sub
mov
movs
and
cmp
pop
retf
rcl
push
and
das
fldenv
mov
lods
test
(bad)
aam
popf
xchg
arpl
pushf
cmc
loopne
jecxz
ss
rcr
cli
xlat
pop
scas
or
imul
outs
cwde
daa
push
add
pop
or
loope
cmp
in
out
pop
push
call
xchg
jmp
ficomp
cs
mov
or
jecxz
jle
add
stc
xchg
enter
push
fnstsw
add
mov
ret
mov
jmp
int3
add
add
lock
adc
mov
sahf
pusha
or
xor
aam
sub
(bad)
sbb
pop
sub
lods
push
or
scas
cmps
es
cmc
test
dec
pop
adc
(bad)
(bad)
bound
push
add
dec
addr16
aas
adc
aam
and
add
mov
cwde
pop
fisttp
lea
xchg
cwde
add
lea
pop
icebp
cmp
and
jmp
and
movs
aas
daa
test
xchg
cmp
jb
jmp
pop
jns
shl
mov
scas
jmp
arpl
pop
push
adc
mov
cmps
into
jb
jge
inc
jp
cdq
inc
adc
pop
int
ja
dec
sub
push
adc
and
add
fsubr
mov
sub
arpl
shr
fdivr
inc
out
mov
movs
push
jns
shl
xchg
(bad)
sub
repnz
dec
mov
popa
dec
addr16
jmp
mov
in
shr
cmc
repnz
cs
aad
pop
ins
cmp
jmp
push
or
xlat
jns
shr
popf
sub
jo
iret
jl
les
mov
rcl
sti
iret
xor
fldenv
aad
js
jb
js
push
pusha
pushf
popf
cmp
(bad)
in
out
and
inc
pop
mov
aaa
pop
arpl
out
test
add
lods
sti
cdq
add
jecxz
popa
not
je
mov
adc
test
leave
jo
fisttp
mov
stos
stos
mov
ja
fdiv
fld
xor
in
mov
jp
jmp
and
rcl
ins
or
mov
lods
test
pop
clc
call
dec
push
stos
cmp
lea
(bad)
icebp
xchg
neg
aas
shl
out
out
xor
push
xchg
or
imul
adc
mov
ror
push
mov
adc
in
mov
das
cld
push
xchg
aas
scas
inc
imul
sbb
add
jno
clc
pop
jbe
sbb
and
and
movs
rcr
xchg
sbb
xchg
rol
(bad)
(bad)
int
sub
loopne
iret
loopne
int3
ret
xchg
xor
xchg
int
and
cmps
and
ins
ret
jp
push
fsub
test
push
add
fbld
lea
push
test
mov
sub
pushf
add
rcl
adc
lods
daa
mov
fs
or
icebp
adc
aam
imul
int
jnp
or
mov
outs
cld
retf
dec
mov
fidiv
xor
xor
imul
push
out
movs
push
loope
icebp
sbb
repnz
mov
aad
pop
cmps
jae
shl
jnp
add
(bad)
mov
adc
jge
xor
cmp
sub
sub
push
jp
stc
(bad)
push
out
xchg
fisub
inc
push
cmp
loope
sar
jle
movs
cwde
sub
adc
ror
push
cld
mov
jbe
cld
and
rol
or
test
jge
shl
shr
sbb
jns
push
push
jns
gs
out
ins
(bad)
jns
mov
push
push
mov
jge
or
retf
icebp
in
push
adc
and
xchg
imul
or
inc
inc
jp
xchg
std
cmp
adc
inc
adc
mov
lds
add
cmp
(bad)
pop
sub
pop
imul
jp
cld
mov
cmc
pop
xor
inc
mov
mov
into
sbb
sar
add
shl
stos
lods
mov
in
mov
and
ret
xor
popa
push
mov
cmps
(bad)
int3
mov
push
jno
and
sbb
repnz
es
jp
sbb
mov
xchg
xor
sar
int
pop
inc
out
xor
jo
push
std
dec
pop
mov
dec
test
jno
(bad)
fisttp
and
mov
pop
adc
into
in
add
xor
loope
aam
xor
cmp
xor
popa
test
xor
mov
movs
mov
xor
(bad)
call
lds
lods
cmp
fs
mov
ror
adc
pop
or
(bad)
in
sub
leave
loopne
jmp
pop
xor
jae
hlt
call
jbe
aaa
inc
inc
inc
cli
out
fld
mov
push
adc
sbb
mov
ret
add
pop
pop
push
or
(bad)
or
cmp
pop
cmps
ret
pop
sub
and
and
mov
ins
sub
aaa
repz
outs
pop
and
add
xchg
ins
test
cs
data16
test
push
int
mov
in
and
shr
iret
pop
aad
dec
fsubr
jns
mov
xchg
bnd
(bad)
fild
jg
fs
dec
dec
scas
and
jle
sahf
inc
pop
retf
or
outs
repnz
cmp
ins
mov
call
retf
xor
mov
fld
shl
rcr
xchg
ss
sbb
fwait
imul
cdq
sbb
out
sbb
aam
push
xchg
rcl
ins
imul
mov
xor
sbb
mov
rcl
retf
nop
dec
(bad)
popf
ficom
rcr
pmaxsw
dec
push
push
dec
stos
mov
cmp
push
popa
and
sti
mov
jp
sti
add
push
mov
imul
jp
jb
adc
sub
sar
dec
cld
mov
(bad)
es
pop
sbb
jmp
mov
cmc
mov
mov
or
xchg
dec
and
or
adc
enter
aam
xor
mov
cmp
xor
inc
cmps
stos
(bad)
loopne
and
imul
xchg
jg
or
adc
bnd
sahf
sbb
and
add
fbstp
mov
(bad)
fst
dec
(bad)
push
and
cmp
sub
add
or
mov
xor
pop
dec
jb
cmp
ret
arpl
(bad)
test
sbb
or
jp
lock
or
sub
dec
das
xor
sbb
push
pop
(bad)
mov
pand
bnd
mov
or
sbb
jns
lds
mov
xor
mov
mov
imul
into
xchg
pop
sbb
mov
cmps
ds
fldenv
adc
test
jmp
mov
js
cmps
jp
mov
add
cmp
lods
xchg
pop
xchg
xor
retf
adc
cmps
(bad)
or
mov
jle
or
pop
inc
int
mov
scas
je
push
je
data16
sub
js
sahf
dec
mov
xchg
lea
mov
mov
xor
pop
int3
dec
into
lahf
jmp
push
imul
push
(bad)
int
pop
test
mov
lods
dec
jmp
jmp
fsub
pushf
cmp
daa
sbb
pop
inc
movs
jp
sbb
push
push
mov
sti
add
and
std
and
aad
stc
dec
test
dec
aad
shr
jecxz
imul
jo
sub
sahf
in
loopne
loope
jge
scas
push
mov
pop
dec
test
or
adc
mov
push
mov
iret
(bad)
adc
mov
xchg
xor
rcl
mov
xchg
xor
jg
ja
popf
push
test
sbb
ja
push
mov
sbb
in
sub
pop
or
add
push
push
mov
pop
jo
mov
inc
jl
(bad)
push
push
fmulp
dec
iret
fild
clc
lods
add
mov
add
jl
sub
test
add
push
movs
sub
mov
movs
jne
ror
jmp
jbe
dec
jl
(bad)
stos
pop
lock
cdq
and
pop
lods
addr16
fldenv
sbb
in
xor
inc
or
adc
xchg
enter
push
fs
or
cmp
or
in
mov
and
jne
xor
or
pop
push
pop
les
mov
or
inc
lock
mov
dec
enter
leave
test
mov
cmp
popf
test
adc
dec
cmp
pop
popa
dec
sub
clc
mov
dec
aaa
dec
das
xor
fld
sbb
out
add
xchg
pop
push
call
fisttp
xchg
fist
bound
bnd
push
sub
adc
sar
fst
mov
mov
mov
add
cmp
ja
sub
inc
xchg
out
lods
(bad)
fadd
aad
lock
jmp
xchg
and
lea
nop
xchg
mov
loope
dec
mov
jnp
cmc
(bad)
cli
ret
mov
adc
fnsave
test
inc
sti
bt
(bad)
(bad)
sbb
in
add
add
(bad)
iret
inc
inc
or
dec
clc
lods
sub
stos
dec
call
out
mov
lds
or
jecxz
hlt
jl
or
ret
cmps
js
pop
pop
xlat
lahf
sbb
out
sub
or
cmp
mov
stos
inc
pop
fistp
jmp
cdq
adc
div
out
and
dec
fisttp
sub
daa
ds
push
repz
sbb
pushf
mov
in
cs
push
jne
sar
ja
rep
adc
or
mov
mov
aaa
xor
cmps
add
pop
sub
add
loope
or
repnz
jo
in
cdq
in
shl
pop
add
dec
rcr
push
and
sub
retf
outs
mov
and
pusha
nop
fnsave
mov
aad
mov
jp
cmp
and
test
mov
mov
or
addr16
jnp
dec
fwait
xchg
loope
cmp
test
outs
int
xchg
iret
rcr
das
pop
popa
pop
enter
mov
mov
call
cmp
pop
loope
pusha
xor
lods
inc
mov
imul
pop
(bad)
aas
sti
ins
or
dec
sub
lock
mov
add
pop
jmp
mov
mov
movs
shr
and
int3
and
xor
scas
test
lock
sar
cwde
(bad)
(bad)
mov
push
jo
imul
aam
dec
and
loop
ror
mov
xchg
mov
(bad)
mov
(bad)
adc
adc
add
adc
push
jmp
fdiv
test
push
idiv
sbb
mov
clc
repz
data16
dec
ds
cmp
outs
inc
lods
(bad)
or
pop
and
std
imul
pop
sub
inc
aam
les
sbb
arpl
sbb
cwde
cld
jle
out
sti
pop
test
repnz
not
(bad)
stos
push
and
jg
enter
adc
cdq
lahf
in
retf
mov
ror
pop
xlat
mov
cmp
(bad)
dec
mov
loopne
mov
mov
push
mov
popa
sub
jl
into
inc
ret
and
mov
inc
or
dec
popf
sub
in
or
fnsave
cdq
dec
aad
jge
(bad)
inc
in
dec
aaa
adc
test
xlat
mov
js
or
mov
and
push
pop
fstp
mov
inc
sbb
sti
pop
repz
mov
test
mov
jecxz
fdiv
dec
rcl
ins
shl
jp
sahf
stos
jo
movs
ficomp
and
les
stos
xor
dec
push
pop
lods
xor
in
or
xchg
add
sub
jecxz
(bad)
pop
aas
push
jae
retf
and
addr16
inc
jae
outs
dec
repz
add
dec
stc
adc
jmp
retf
dec
mov
ins
push
dec
sub
xchg
pushf
mov
pop
mov
pop
dec
xchg
mov
into
cmp
dec
inc
dec
retf
out
dec
test
shr
or
push
dec
pop
pop
cdq
pop
stos
fidivr
jmp
mov
ret
mov
pop
dec
outs
inc
sub
(bad)
retf
fmul
mov
mov
jg
jns
pop
test
inc
ret
mov
fdivr
shr
sahf
pop
sahf
rcr
sub
ja
out
mov
jmp
sbb
pushf
pop
jne
ret
jg
pop
mov
popf
aas
(bad)
cdq
cmp
fiadd
ins
xchg
mov
dec
loop
sti
mov
or
or
int3
push
jle
rcl
sbb
std
add
push
pop
fucom
iret
mov
xor
pushf
lods
scas
adc
jae
retf
dec
sti
mov
xor
mov
jl
xchg
mov
popf
push
aad
sub
mov
movs
dec
in
mov
push
lock
mov
jle
push
in
sahf
inc
jmp
or
das
push
and
inc
xchg
and
(bad)
mov
neg
dec
repz
icebp
inc
call
xor
(bad)
call
enter
sbb
jmp
out
mov
es
add
sub
les
shl
add
cmp
daa
jno
sbb
mov
xor
outs
mov
xchg
dec
mov
repz
imul
or
cld
test
fwait
nop
ins
jmp
popf
icebp
pop
shl
scas
test
and
pop
mov
aam
push
xchg
mov
inc
mul
mov
dec
inc
sub
(bad)
imul
jle
ror
fwait
es
lock
(bad)
pop
idiv
popa
dec
cmp
jge
mov
xor
sub
test
jnp
arpl
retf
ss
(bad)
jne
(bad)
xchg
jno
xchg
push
jl
mov
test
aaa
sbb
add
js
gs
daa
or
enter
cdq
push
pop
sahf
push
xchg
push
and
cmc
xchg
into
stos
xor
xor
pushf
pop
montmul
cmps
mov
pop
jle
jne
cwde
add
scas
dec
push
xor
cmp
loope
aaa
and
daa
std
pop
out
sbb
pop
cmp
ror
fcmovnbe
sub
mov
ret
test
mov
cld
(bad)
(bad)
clc
sub
enter
addr16
mov
pop
sub
iret
xor
mov
sub
pop
test
stc
pop
fcomp
test
(bad)
mov
(bad)
in
xor
inc
jns
callw
pop
mov
or
sysret
cmps
xor
push
loop
out
(bad)
jo
retf
adc
or
aad
sbb
push
push
push
js
int3
adc
push
adc
mov
pop
jnp
mov
in
jp
les
call
push
mov
aas
gs
and
and
loopne
cs
shl
jmp
test
pop
movs
xor
ficom
rcr
ds
push
imul
sbb
inc
sub
cmp
dec
outs
dec
mov
xor
cmc
cmc
push
or
xchg
mov
inc
cmc
add
pusha
fld
jge
jp
mov
imul
mov
inc
xor
push
inc
pop
inc
push
pop
xor
or
dec
mov
push
dec
xor
cwde
or
cmc
mov
test
pusha
xchg
sub
test
lds
popf
pop
cmp
add
dec
sbb
std
(bad)
push
xor
ja
add
cmc
repz
test
push
in
sbb
imul
out
jb
mov
fst
adc
mov
push
out
fmul
stos
jns
push
rcr
lods
mov
and
mov
shl
repz
lods
fisubr
es
aam
ret
dec
inc
push
test
dec
gs
sbb
push
push
enter
stos
test
jmp
dec
xor
inc
loop
push
and
fisttp
inc
jae
es
dec
(bad)
cld
(bad)
sub
data16
imul
xchg
push
xor
mov
push
mov
or
dec
mov
push
add
jnp
(bad)
inc
sti
(bad)
imul
(bad)
sti
and
int
jle
in
aad
cmp
cld
int
retf
call
or
test
aas
adc
jnp
push
lods
aas
mov
mov
inc
push
mov
and
or
xor
mov
mov
out
jmp
lock
add
jo
or
add
and
es
xor
sbb
xor
imul
std
jb
stos
ins
push
lahf
mov
xlat
pop
jp
leave
mov
ret
mov
lahf
ret
sub
out
js
sahf
jmp
jmp
mov
in
(bad)
cld
int3
test
iret
and
fistp
shufps
pusha
ret
sbb
jg
xchg
lock
adc
shl
cmp
mov
mul
cmp
cmp
jno
push
fwait
(bad)
cli
movs
shr
and
xlat
xchg
jns
pop
mov
and
xchg
xor
jg
aas
lods
mov
rol
pop
dec
cld
int
jae
sub
int
sahf
inc
xor
pop
(bad)
mov
pop
cs
loop
(bad)
push
fnstcw
iret
xor
ret
repnz
mov
push
cmp
pop
adc
sahf
mov
mov
push
or
jo
cmp
ret
fist
lods
sbb
outs
cmp
leave
popa
test
mov
outs
addr16
call
push
mov
jnp
inc
cmp
jo
loopne
imul
xchg
repz
out
arpl
data16
push
and
call
xchg
aas
and
inc
inc
sbb
in
loopne
int3
into
sbb
xchg
mov
outs
addr16
js
mov
ret
les
lahf
dec
arpl
mov
ins
cmp
adc
gs
push
or
or
mov
mov
xchg
lahf
imul
lahf
push
addr16
lods
rol
cmp
gs
sub
mov
cmp
pop
mov
mov
xchg
mov
enter
mov
movs
inc
loopne
or
bound
pop
sub
or
das
mov
enter
mov
cwde
push
mov
retf
fstp
push
icebp
add
xchg
retf
in
inc
repz
dec
jne
adc
cmp
jmp
dec
adc
je
xchg
loope
test
mov
push
dec
pop
pop
xchg
dec
fnstcw
lahf
cmp
pop
mov
test
imul
and
jg
call
jne
and
add
mov
inc
inc
sti
pop
movaps
pop
push
mov
or
xlat
or
jmp
movs
xchg
xchg
ror
stc
lea
retf
mov
jo
in
xchg
mov
fnstenv
jne
out
(bad)
inc
dec
jg
je
out
test
push
scas
rcr
adc
xchg
jne
or
cdq
aaa
stos
iret
lock
cwde
cli
dec
sub
loopne
mov
mov
cmp
inc
movs
mov
scas
rcl
fisubr
jl
adc
xchg
fistp
push
leave
mov
jae
pop
and
sbb
movs
sub
dec
int3
imul
sti
cmps
adc
leave
xchg
mov
cld
adc
mov
push
call
dec
js
xlat
jno
xlat
out
push
ret
pop
xchg
std
popa
inc
(bad)
retf
dec
pop
sub
or
mov
sub
mov
push
pop
sub
nop
mov
inc
cli
aam
xchg
sbb
and
repnz
pop
out
fs
loop
dec
jno
add
inc
std
push
xchg
mov
jb
into
xor
fwait
push
push
cld
fcomp
jnp
cmps
pop
xchg
sub
xor
ins
nop
xchg
hlt
mov
ins
ja
cmp
lock
push
hlt
test
pusha
xchg
push
fs
out
fdivp
test
je
mov
dec
fistp
nop
out
and
sbb
and
mov
leave
test
cmp
call
mov
scas
push
and
mov
dec
out
adc
xchg
arpl
xchg
sbb
mov
and
imul
jmp
call
sub
add
xor
clc
pop
sub
mov
fadd
inc
dec
xor
cmp
fucom
arpl
mov
adc
retf
push
retf
cmp
add
cmp
xchg
out
loop
scas
psubusw
jmp
loopne
in
stos
xchg
(bad)
mov
mov
movs
jns
stc
lea
adc
arpl
mov
(bad)
cld
sbb
and
add
dec
mov
ret
hlt
retf
pop
adc
jno
cmp
inc
aam
sub
xchg
test
mov
(bad)
add
psrld
sti
mov
lods
das
movs
mov
sub
sbb
test
sbb
gs
pop
pop
inc
cmc
(bad)
repnz
push
repnz
out
test
les
pop
in
dec
js
ficomp
les
mov
f2xm1
push
mov
dec
push
push
push
push
out
jmp
out
jmp
inc
mov
(bad)
mov
loopne
in
and
jne
pop
push
sbb
outs
jecxz
lods
neg
jnp
xlat
mov
fbstp
inc
inc
movs
scas
jmp
inc
inc
test
jge
sub
fstp
aaa
adc
add
jmp
push
ret
es
dec
or
sub
inc
xchg
sbb
call
cmp
stc
push
out
out
mov
ins
adc
repnz
or
fisubr
cs
fwait
push
fcom
fld
arpl
pop
les
aad
xchg
add
jb
mov
mov
mov
pop
cmp
cmps
enter
(bad)
push
fsubr
push
and
mov
pop
pop
cmp
stos
(bad)
imul
sub
sub
fcom
and
mov
and
cs
xor
push
cmp
pop
jmp
aam
(bad)
shr
jmp
pop
fwait
inc
stos
mov
pop
loope
jo
jo
es
popf
adc
push
and
es
test
xchg
cmc
xlat
mov
ja
and
or
mov
mov
fsubr
mov
push
int
(bad)
push
in
cdq
fwait
dec
dec
mov
push
mov
mov
mov
push
mov
jmp
es
mov
push
push
cmp
js
mov
scas
movs
add
and
pop
cmp
sub
xchg
xchg
daa
fwait
stos
and
mov
cs
out
cld
pop
pop
imul
inc
add
call
and
sub
fist
rcr
fiadd
(bad)
xchg
cmp
daa
pushf
ja
adc
not
ret
mov
mov
loope
popa
xchg
jle
jecxz
fadd
mov
outs
sbb
fwait
pusha
test
jns
retf
sbb
mov
rol
pop
xchg
dec
push
push
mov
cdq
aaa
sub
pop
call
repz
int3
cmp
(bad)
mov
cwde
sar
scas
ficom
dec
push
mov
cmp
cmp
cmps
out
pop
int3
or
test
shl
push
sahf
xor
mov
sub
mov
mov
movs
inc
adc
pop
add
push
stos
ror
dec
out
stos
jo
stc
(bad)
dec
mov
cmc
xchg
imul
call
(bad)
xchg
ret
mov
xchg
cmp
cs
cs
xchg
outs
xor
mov
add
add
mov
imul
dec
loopne
lahf
dec
ret
pusha
pop
sti
ins
dec
xchg
adc
inc
xor
nop
idiv
loop
jmp
inc
sbb
loopne
xchg
(bad)
pop
(bad)
xchg
jbe
fnstsw
cli
and
loope
or
mov
daa
pop
call
je
jae
adc
lods
and
mov
mov
pop
jg
push
test
dec
out
mov
stos
hlt
call
fdivr
dec
sahf
ins
pusha
sbb
sub
fdiv
jl
pop
inc
xlat
daa
mov
cmp
push
ins
dec
cmp
mov
mov
(bad)
in
(bad)
repz
mov
cmps
(bad)
pop
out
mov
repnz
and
jg
lds
mov
call
add
es
js
or
xchg
sub
dec
(bad)
(bad)
cmp
adc
pop
bound
fidivr
ins
es
ss
cmp
imul
jo
lods
shr
and
pop
test
sub
inc
rol
add
or
cmp
stc
mov
and
shr
xchg
lock
sbb
pop
nop
scas
movs
(bad)
hlt
or
sub
inc
cmp
lods
mov
sub
loope
adc
mov
cmc
sbb
jb
inc
nop
call
(bad)
fwait
cmp
sbb
mov
pop
cmps
xchg
sbb
xchg
sbb
mov
pusha
(bad)
adc
push
fstp
sub
or
enter
in
in
fcom
jge
mov
loope
push
dec
loopne
dec
mov
mov
fld
adc
cmp
mov
inc
jns
(bad)
not
es
mov
int
xor
xor
add
adc
jg
scas
xor
out
mov
cmp
fdiv
lahf
mov
xchg
sti
(bad)
shl
mov
jmp
test
out
sub
in
add
sub
repnz
fstp
adc
lds
jmp
popf
jo
fiadd
or
scas
fsubr
cmp
mov
and
add
jnp
loopne
pusha
sub
cmp
xor
xor
arpl
inc
aad
les
sbb
gs
or
call
test
in
add
repnz
jns
mov
mov
es
and
test
(bad)
xchg
inc
bound
mov
xchg
sbb
jmp
fsub
es
outs
sub
imul
sti
mov
cmp
sub
jp
lahf
pusha
nop
(bad)
xor
mov
(bad)
pop
lea
rcl
in
push
pop
repnz
or
dec
push
mov
loopne
push
dec
dec
mul
adc
(bad)
sbb
dec
and
retf
shl
out
pushf
repnz
pop
sbb
(bad)
cmp
int
inc
iret
xchg
push
les
push
cmp
loop
jp
pop
test
and
push
adc
mov
sar
jmp
clc
add
add
rcr
outs
dec
iret
mov
out
push
jl
lods
sbb
pop
cwde
fcmovbe
push
inc
cmc
xchg
in
or
mov
into
and
clc
dec
add
and
mov
outs
push
mov
xor
xor
inc
mov
test
jg
pop
stos
adc
adc
inc
rol
sbb
and
mov
pop
ds
aaa
adc
mov
(bad)
in
or
inc
mov
jb
cwde
retf
or
and
mov
imul
in
cwde
push
or
cmp
fwait
xchg
bound
add
mov
(bad)
shr
js
(bad)
fcmovbe
test
repz
(bad)
push
mov
add
cmps
into
in
fcomp
jnp
cmp
scas
and
pop
sbb
fmul
lods
adc
sub
fwait
call
add
or
jmp
icebp
cs
stos
push
idiv
push
pop
cmp
(bad)
fbstp
inc
push
xchg
sbb
jl
add
mov
aas
daa
mov
fs
in
xchg
jecxz
movs
lea
cmp
jge
popf
and
fwait
inc
push
in
mov
sbb
jno
popa
int
inc
cwde
mov
ret
cmps
pop
lahf
and
pop
fwait
pop
adc
fisttp
daa
lock
std
adc
inc
jecxz
out
push
addr16
sbb
push
out
push
or
cld
mov
sbb
retf
push
dec
inc
movs
gs
loop
inc
push
mov
jmp
aam
mov
pop
adc
jmp
inc
mov
mov
fsubrp
fimul
movs
xor
jne
xchg
sub
dec
pop
jmp
pop
popf
inc
mov
gs
dec
sbb
pop
sar
push
dec
scas
or
jmp
test
sbb
dec
inc
leavew
(bad)
mov
xlat
in
les
adc
call
(bad)
scas
inc
jnp
hlt
ret
jno
add
and
inc
leave
imul
inc
xor
bound
lahf
mov
repnz
push
fidiv
mov
sar
call
fisttp
cmp
sbb
in
jbe
movs
dec
out
inc
and
xchg
jl
mov
mov
shl
push
xchg
xchg
fcomp
stc
repnz
push
rcr
cmp
pusha
int3
mov
rcl
outs
dec
out
loope
pop
int
xchg
jp
mov
ja
jae
ds
aam
xchg
mov
mov
inc
dec
and
je
cmps
aaa
aaa
cmp
fcomp
and
dec
jl
xchg
cmp
nop
inc
fnstenv
push
popa
(bad)
sub
push
inc
inc
fnstsw
dec
xor
fstp
and
pop
arpl
pop
add
jge
in
push
mov
sbb
(bad)
jb
nop
mov
loope
pusha
push
sub
jecxz
push
push
jmp
push
jge
ds
fcmovnu
imul
adc
ins
push
loop
jmp
dec
cs
xchg
ins
mov
push
(bad)
out
cmps
das
sub
mov
push
jp
xchg
jge
mov
mov
popf
int
inc
aam
push
bound
jmp
out
jbe
mov
jns
stos
add
and
mov
arpl
aam
cli
jg
add
out
leave
out
outs
xchg
loope
jecxz
and
xchg
push
sar
rol
imul
shl
repnz
jae
out
nop
movs
sub
and
pusha
cmp
dec
pop
ret
mov
loop
dec
push
cmp
fs
int3
xchg
xchg
lea
shl
mul
jp
lods
test
and
add
fucomip
out
repz
and
xchg
jp
cmp
loopne
lock
pop
mov
add
jmp
sub
aas
cmp
lea
add
data16
data16
outs
test
jle
addr16
dec
add
bnd
jae
pop
sbb
inc
es
imul
nop
xchg
ret
add
push
xchg
shl
xlat
cmps
inc
pop
add
out
out
in
shl
mov
stos
pop
fbstp
in
mov
mov
jg
dec
fdiv
inc
scas
retf
aad
dec
jmp
jnp
call
or
push
pop
pop
loop
(bad)
mov
das
push
loope
or
ficom
dec
adc
sbb
dec
inc
pop
jns
add
sbb
cli
xor
cli
push
pop
iret
call
mov
mov
pop
inc
jbe
(bad)
sub
xchg
idiv
mov
push
les
xchg
imul
add
dec
rcl
sbb
push
inc
leave
in
std
fnsave
push
inc
or
sub
sub
pop
loop
in
cld
inc
mov
adc
lods
js
(bad)
clc
and
cmp
(bad)
pop
sbb
cdq
scas
dec
xor
push
mov
dec
pop
or
pop
stos
xchg
dec
test
jecxz
jge
dec
test
movs
add
scas
hlt
cmc
dec
outs
xlat
das
fadd
(bad)
ins
inc
xchg
sbb
test
repz
push
cli
movs
cld
push
sahf
lds
loope
stos
mov
je
sub
xor
mov
mov
es
clc
jmp
js
daa
xchg
xor
fadd
fdiv
cld
sub
xchg
stos
retf
cmps
std
out
jns
dec
push
sbb
push
push
leave
daa
inc
push
and
sub
adc
test
lock
inc
add
push
dec
mov
arpl
(bad)
scas
jo
rcr
push
xchg
shl
cmps
bound
nop
ds
(bad)
out
in
lahf
cmp
inc
mov
(bad)
adc
std
into
sbb
(bad)
mov
js
lea
jnp
inc
or
popf
xor
jg
and
inc
scas
mov
fnstcw
popf
fcmovu
inc
mov
xchg
inc
std
bswap
leave
sti
or
and
test
sub
stos
adc
mov
adc
pop
push
out
test
movs
add
mov
add
(bad)
pop
or
mov
fldcw
sbb
sbb
outs
lock
mov
mov
sub
dec
xchg
pop
dec
xchg
mov
leave
fisub
mov
mov
shl
jecxz
xchg
test
mov
inc
and
popf
adc
or
cmp
retf
test
out
test
cmp
stos
adc
aaa
shl
mov
xchg
stos
dec
pop
ret
mov
xchg
mov
inc
or
mov
lea
push
(bad)
out
mov
and
call
adc
(bad)
and
out
jl
push
inc
jbe
mov
stos
hlt
add
fcmovnu
fimul
es
outs
ins
in
cmp
sub
ja
sti
push
in
jecxz
push
dec
enter
ds
call
cld
int3
ss
xor
inc
push
pop
mov
or
dec
fcom
test
xchg
int3
push
xor
inc
cmp
adc
cmp
cmp
sbb
or
in
movs
add
or
dec
push
fwait
pop
pop
sbb
call
(bad)
pop
cwde
ficomp
add
sub
aaa
xchg
xor
icebp
add
loop
add
bound
setl
nop
(bad)
mov
xor
sub
dec
add
cmp
popf
pop
retf
ss
ret
push
pop
jle
ret
sub
inc
addr16
out
test
cli
push
imul
sub
mov
(bad)
jl
cmps
sbb
dec
mov
inc
jno
imul
sub
popa
dec
bound
jge
xchg
sub
xchg
dec
hlt
clc
(bad)
popa
jl
xor
aas
test
adc
cmp
xlat
out
out
nop
mov
dec
dec
mov
int
and
rol
inc
rol
mov
push
add
mov
lods
scas
mov
cwde
push
xchg
sub
jae
(bad)
outs
dec
sub
or
sbb
inc
push
sub
xchg
fimul
sub
dec
(bad)
sti
pop
or
cmps
cli
pop
(bad)
iret
push
jo
cmp
inc
push
inc
xor
out
fldl2t
(bad)
jle
sar
add
mov
adc
cs
dec
in
lds
xor
add
daa
jge
dec
push
aam
fisttp
add
imul
outs
jl
out
(bad)
cmp
loopne
lock
jg
sub
jp
mov
dec
xor
sbb
mov
(bad)
fisttp
push
xchg
inc
mov
xchg
push
mov
inc
(bad)
into
int3
sub
movs
call
in
and
lea
mov
pop
and
adc
imul
loope
and
pop
xor
outs
cmp
pop
in
pusha
cmp
mov
js
cmp
add
inc
mov
aas
cmp
pop
pop
mov
sbb
fcom
mov
and
dec
adc
int
pop
int3
pop
fcmovb
into
dec
add
pop
or
out
fsubr
mov
dec
and
cmc
cli
and
push
mov
pop
push
(bad)
xchg
in
xor
popa
(bad)
cwde
mov
mov
jmp
mov
in
jns
mov
push
call
lds
push
(bad)
popa
or
push
xor
xchg
mov
mov
sbb
imul
dec
popa
cmc
sub
and
fdivr
inc
fsub
and
movs
and
xlat
enter
jbe
cmp
adc
jns
shl
xor
ret
sbb
jp
inc
sub
pop
rol
mov
int3
stos
imul
sub
sahf
into
mov
std
jle
xchg
gs
stc
popa
sub
in
or
mov
mov
je
bound
mov
or
mov
jl
dec
mov
xor
call
js
leave
jg
jmp
xchg
xor
(bad)
xor
jmp
cs
pop
loope
fnstenv
mov
mov
int
xchg
sub
dec
mov
mov
in
or
inc
add
pop
movs
or
inc
push
js
ja
xor
mov
popf
test
ins
jb
jp
icebp
mov
xchg
enter
adc
jl
xor
cmps
mov
cmps
dec
rol
into
popa
cmp
cmp
inc
(bad)
clc
and
jl
pop
push
repz
mov
and
test
shl
jae
sti
(bad)
mov
cs
jmp
push
push
ds
xor
shl
js
sbb
(bad)
jmp
dec
push
movs
fmul
adc
lea
aad
fldcw
clc
icebp
push
cs
adc
out
cmp
jo
outs
(bad)
xrelease
xor
jo
jmp
cli
pop
xor
popa
fmul
xor
icebp
jbe
or
mov
mov
or
clc
and
mov
shl
stc
cli
ror
pop
int3
ss
push
sub
ror
push
cmp
sub
inc
dec
cmp
mov
bound
or
test
pop
mov
add
aam
rep
dec
ret
test
data16
mov
test
sub
mov
retf
mov
and
add
js
push
add
mov
mov
push
fild
jge
jge
cmp
(bad)
jmp
dec
xchg
movs
push
call
adc
adc
push
sar
ror
mov
cmp
mov
outs
xor
ret
int
jne
add
inc
adc
icebp
cdq
xor
lahf
mov
inc
cmp
mov
mov
retf
xchg
loope
inc
movs
add
or
lea
or
in
xchg
jno
push
mov
aad
lock
push
aas
pop
xchg
int3
loope
cdq
out
mov
pop
pop
scas
sahf
mov
(bad)
(bad)
dec
movs
sub
mov
mov
push
fldcw
cld
into
inc
push
retf
adc
repz
push
sub
popa
push
ror
das
cli
mov
inc
(bad)
mov
cmc
cmc
pop
mov
iret
imul
xor
add
fidiv
outs
ins
iret
cmp
push
out
xchg
sbb
ret
pop
sbb
fwait
daa
add
ret
push
shl
div
test
hlt
adc
cmp
cmp
dec
pop
fs
mov
popf
test
test
test
inc
sbb
cs
push
inc
add
dec
call
ret
fdiv
scas
mov
lea
sbb
pop
jg
in
xchg
xor
(bad)
pop
shl
cmp
lahf
leave
test
loop
jo
push
add
pop
dec
imul
sbb
mov
cmp
cs
mov
frstor
push
jmp
mov
xchg
mov
les
scas
dec
ret
pop
(bad)
xchg
push
imul
push
retf
popf
push
mov
sbb
jmp
dec
ror
push
mov
dec
xchg
inc
jp
imul
dec
call
fwait
adc
hlt
xchg
gs
sbb
xor
add
cdq
mov
sub
int
push
(bad)
sub
jns
or
xor
push
xor
pop
push
loop
cmp
shr
dec
rcl
mov
and
jle
cmps
imul
mov
sar
xor
(bad)
xchg
xor
lahf
sbb
sbb
retf
ret
add
punpckhbw
push
push
fst
dec
outs
sub
adc
in
jae
loope
jbe
mov
leave
mov
frstor
push
mov
pusha
out
(bad)
jg
cld
ror
popf
jmp
fcom
scas
jp
xor
sbb
in
cmps
mov
ficom
or
jle
add
je
push
xchg
add
das
ja
sbb
pop
in
aad
xor
fimul
add
imul
adc
out
call
xor
ficom
mov
je
cmp
or
imul
lds
xor
sbb
(bad)
dec
mov
or
(bad)
push
int
cwde
adc
xchg
int3
and
xchg
pop
call
pop
mov
lods
xor
(bad)
(bad)
xlat
int
popa
sbb
jae
jae
adc
adc
add
pop
push
mov
xor
fadd
or
cdq
repz
(bad)
scas
es
add
mov
imul
mov
push
rcr
out
inc
mov
inc
sti
aam
arpl
add
scas
jae
ret
add
icebp
pop
push
fcom
jae
mov
jge
or
aaa
js
pusha
xor
cmc
push
ficom
loopne
dec
and
cwde
adc
dec
add
pop
imul
lahf
jbe
push
inc
mov
daa
das
xor
jae
in
sbb
mov
sub
adc
inc
scas
test
sbb
stos
cmp
add
test
dec
pop
sar
(bad)
in
cmc
movs
push
push
or
scas
loope
mov
push
pusha
add
shl
or
mov
mov
add
xor
jnp
inc
push
dec
sub
imul
dec
push
dec
xchg
(bad)
movs
daa
aaa
push
iret
inc
or
les
or
mov
and
jl
push
inc
mov
(bad)
mov
arpl
ret
adc
test
shl
mov
or
test
jae
out
sub
cmp
cwde
sbb
push
jg
pusha
cmps
in
pop
imul
sub
pop
icebp
lds
cdq
loop
dec
mov
enter
xchg
mov
lds
mov
inc
cwde
shl
push
jg
and
pop
jae
pop
jae
dec
lock
das
fsubr
int3
imul
and
mov
sar
lea
cmp
(bad)
cld
test
fucom
mov
ret
rcl
push
shr
aad
add
jp
mov
pop
lea
sub
mov
out
(bad)
sahf
inc
rol
or
popf
push
dec
push
dec
push
mov
dec
sub
jge
sbb
push
or
dec
pop
enter
pop
adc
imul
pop
clc
jb
cmp
lock
es
fild
and
mov
icebp
jne
and
addr16
jae
sbb
or
push
fisub
add
test
fwait
and
pop
(bad)
retf
inc
scas
in
loope
popf
cmps
pop
add
(bad)
in
mov
mov
ja
add
mov
push
jo
pop
push
retf
test
xor
std
sar
rcl
inc
enter
jns
xor
adc
mov
and
(bad)
lods
in
retf
or
cmp
jge
rcr
pushf
or
xchg
inc
js
sbb
in
jo
popf
(bad)
(bad)
das
mov
cmp
jg
xor
retf
fcomp
test
sub
sti
lahf
and
scas
mov
cwde
mov
mov
jmp
push
inc
movs
iret
jp
outs
sbb
out
adc
out
and
in
inc
mov
push
arpl
mov
pop
mul
(bad)
movs
mov
imul
imul
dec
or
sar
es
add
cmc
call
out
push
and
xor
xor
and
jo
fwait
(bad)
stc
sar
std
push
outs
loope
or
xchg
iret
rol
mov
mov
mov
sbb
ins
xor
or
(bad)
push
push
inc
nop
push
out
dec
xlat
and
mov
aas
iret
lds
loop
mov
cdq
adc
call
jo
adc
xchg
xchg
mov
xlat
inc
adc
cwde
sbb
add
sbb
je
fsub
push
jo
fwait
mov
jns
push
pop
(bad)
mov
cli
shl
xchg
sub
out
or
push
xchg
arpl
adc
sti
pop
into
sti
add
leave
sahf
push
hlt
stos
xor
(bad)
xchg
jmpw
jle
lea
sub
xor
jmp
in
test
push
fwait
cdq
aad
cmc
inc
jle
ins
(bad)
sbb
bound
sar
xchg
mov
dec
sbb
fwait
add
jbe
push
push
cmp
xchg
(bad)
mov
test
sbb
adc
mov
bsr
enter
mov
mov
pop
stos
sahf
xchg
ret
stos
pop
xor
jl
sub
pop
test
push
lahf
arpl
cld
xor
sti
fidiv
aas
dec
push
(bad)
mov
pop
sub
out
sar
pushf
add
push
jmp
enter
sar
(bad)
test
and
push
aad
jmp
push
xchg
add
and
popa
cmc
push
pop
mov
mov
mov
adc
cmc
jnp
xor
jns
movs
sbb
test
test
and
jmp
cmp
adc
mov
mov
cmps
ins
out
movs
jae
jns
add
xchg
in
cdq
(bad)
call
mov
jle
cmps
jmp
inc
xchg
add
push
and
stos
push
arpl
cmp
push
jp
ds
rcr
jns
xor
dec
pop
retf
stos
and
or
icebp
into
adc
jns
daa
das
fistp
clc
pop
xor
sub
loopne
lahf
push
ins
sub
push
xchg
repz
cwde
and
mov
sbb
mov
clc
xor
daa
jmp
sti
(bad)
sbb
icebp
adc
xor
sbb
dec
dec
add
push
xor
or
jl
arpl
xchg
push
pop
mov
sti
pop
(bad)
shl
retf
(bad)
ficomp
(bad)
imul
jmp
and
xchg
sub
mov
fnsave
aad
add
int
mov
fwait
or
fxch
ret
jbe
lea
fst
pop
scas
dec
pop
in
dec
jbe
scas
iret
pop
and
dec
pop
shr
cmp
fisub
dec
or
rcl
push
push
mov
or
scas
adc
or
in
or
les
in
ret
pop
inc
xlat
lahf
(bad)
(bad)
xchg
not
or
jmp
pop
aam
test
jb
inc
cmp
adc
or
dec
jne
gs
mov
stos
mov
pop
(bad)
shl
test
nop
inc
fsubr
push
lahf
pop
inc
ins
aad
aaa
mov
aam
outs
(bad)
xlat
(bad)
push
push
outs
int
mov
lds
cs
lock
sbb
sub
hlt
and
or
xor
in
gs
sub
sar
js
xlat
lods
mov
loope
fstp
movs
dec
out
loope
adc
fild
pop
fist
in
test
sub
jno
jae
sub
mov
lahf
div
push
imul
in
dec
xor
inc
jno
cld
cwde
push
adc
test
sub
cmp
mov
mov
iret
mov
sub
mov
xchg
stos
popf
test
or
or
in
or
cli
ret
test
ja
push
adc
les
push
or
sbb
(bad)
lahf
or
xchg
xlat
dec
mul
mov
scas
je
mov
inc
hlt
mov
or
mov
adc
pushf
les
or
adc
ins
je
fwait
iret
adc
mov
sti
add
jo
xchg
mov
dec
movs
jge
rcr
jl
loop
jo
jb
retf
sub
cmp
add
out
inc
adc
les
repnz
aaa
(bad)
aas
scas
sbb
neg
xor
cmp
(bad)
data16
pop
mov
lock
sbb
repnz
push
in
ins
out
jo
movs
popf
push
mov
adc
inc
sar
cdq
dec
inc
outs
mov
xchg
out
jae
or
stos
test
pop
xchg
loope
sar
jne
fs
jl
inc
lock
rcr
enter
xchg
addr16
sub
mov
mov
lods
lods
sbb
xchg
or
inc
add
xlat
dec
jg
cli
push
xor
aaa
repz
ror
mov
mov
call
fwait
mov
pop
push
stos
mov
jae
mov
mov
fwait
jp
dec
leave
push
clc
fisub
pop
dec
call
mov
gs
sahf
leavew
pop
adc
retf
or
adc
push
test
push
(bad)
lea
pop
xlat
mov
divps
scas
sub
lahf
jne
out
arpl
mov
cwde
adc
inc
adc
push
or
xchg
popa
pop
pop
xor
scas
imul
cdq
retf
mov
les
mov
in
jmp
retf
out
pop
(bad)
sbb
test
mov
pop
and
ins
rol
scas
leave
xlat
fwait
retf
in
push
mov
mov
neg
add
stc
retf
cld
cmc
and
xchg
and
bound
jp
pop
mov
imul
aas
or
in
push
hlt
mov
arpl
pop
inc
jmp
mov
xchg
xchg
cmp
cmp
(bad)
iret
and
cs
leave
cmp
jmp
pop
call
sbb
sub
push
and
sbb
jp
scas
jmp
iret
hlt
test
push
outs
mov
test
cwde
in
stc
or
test
push
mov
sbb
mov
adc
aas
mov
mov
(bad)
mov
jecxz
add
pop
mov
inc
xor
pop
sbb
mov
loope
xchg
inc
not
ds
loopne
lods
ins
ret
pop
call
sbb
sbb
(bad)
std
int3
sub
or
push
mov
leave
lea
enter
ret
and
jae
mov
out
jbe
fist
lahf
leave
iret
pushf
js
xchg
mov
(bad)
pop
xor
shr
fdiv
push
push
popf
fst
dec
jne
frstor
push
add
lahf
iret
in
sub
movs
jge
movs
push
mov
xchg
(bad)
stc
shl
pop
hlt
sbb
xor
pop
cli
(bad)
pushf
and
jmp
scas
out
sar
push
mov
cmc
jns
dec
movs
stc
lahf
mov
mov
xor
mov
movs
adc
test
inc
shl
fcomp
(bad)
(bad)
shr
pusha
and
mov
sahf
push
mov
fistp
(bad)
jg
push
nop
fld
neg
sbb
sub
push
dec
add
pop
add
pop
sub
mov
adc
retf
cld
add
mov
aam
(bad)
retf
movs
jae
xor
mov
sub
jbe
xor
sbb
inc
pop
sbb
fsub
pusha
(bad)
push
xchg
push
stos
loopne
sbb
rcl
add
cmp
pusha
arpl
pop
add
mov
imul
jne
sub
out
inc
daa
xor
dec
test
mov
mov
mov
shl
add
sub
lahf
(bad)
mov
adc
and
gs
retf
dec
dec
lea
in
inc
leave
push
sub
out
sub
(bad)
push
or
or
sub
outs
in
and
cmp
ret
inc
inc
jge
je
ret
clc
push
jnp
inc
xlat
ja
outs
and
setle
mov
ja
fadd
movs
mov
mov
push
aam
jge
call
fiadd
inc
mov
push
push
int3
push
lds
mov
sbb
imul
add
mov
es
dec
inc
aas
jns
stc
lock
push
jnp
(bad)
in
scas
lahf
inc
cmp
lods
xchg
cwde
rcl
jae
xlat
mov
iret
cmp
ins
pop
mov
out
lock
dec
sub
mov
ret
mov
aaa
push
inc
cdq
std
sub
push
cmp
arpl
lods
sbb
jne
add
inc
jbe
nop
and
dec
push
jl
bound
sub
sbb
adc
into
sub
and
or
xchg
push
mov
mov
mov
xlat
inc
mov
mov
fidivr
scas
push
mov
daa
rcl
jo
sbb
jl
sti
mov
mov
fs
inc
mov
clc
mov
fs
ds
mov
rol
and
and
xor
and
pop
add
ins
inc
xchg
nop
ins
adc
dec
(bad)
movs
int
or
pop
fnstsw
loopne
xor
xchg
stos
jae
repz
inc
mov
and
sbb
dec
fsub
gs
jl
mov
test
in
sub
jbe
rol
cmc
add
cwde
inc
cs
sub
adc
loopne
inc
jnp
clc
gs
jo
pop
jmp
mov
add
adc
push
sahf
pop
adc
inc
cmc
cmps
leave
mov
jnp
push
ret
and
push
pop
mov
popa
push
dec
ins
jne
add
sbb
push
dec
push
shr
fsub
(bad)
cwde
add
enter
add
rcl
out
and
sbb
xchg
in
push
shr
std
sub
jne
jne
add
push
rcr
push
in
jns
imul
sahf
icebp
lods
les
test
push
leave
xchg
bound
imul
pop
fidivr
or
push
shl
aad
test
mov
mov
jmp
xchg
and
out
das
push
fwait
cmps
mov
and
sbb
pop
ret
sbb
pop
sbb
call
lea
jno
and
or
cmc
call
rep
pop
(bad)
cmps
push
mov
sub
push
in
adc
enter
dec
shr
leave
nop
iret
pop
(bad)
fsub
outs
mov
retf
push
and
daa
push
aaa
ss
dec
int
icebp
mov
pop
js
(bad)
test
pop
mov
fimul
js
dec
pop
call
dec
lods
loopne
sbb
adc
lds
cdq
add
nop
dec
mov
outs
xchg
mov
aam
nop
mov
out
and
jge
lahf
dec
dec
add
js
shl
push
les
or
mov
jg
aam
push
retf
mov
push
mov
mov
inc
shl
loop
ret
test
jne
call
bnd
add
call
and
pop
dec
out
inc
fsub
sar
jmp
add
cdq
mov
add
mov
rol
sbb
sbb
imul
pop
xchg
movs
jne
test
adc
inc
sub
mov
cmp
frstor
sub
outs
sbb
inc
pop
adc
jmp
retf
xor
mov
mov
cld
out
outs
jno
enter
and
movs
repnz
fldenv
(bad)
clc
hlt
lds
sub
enter
mov
clc
mov
push
(bad)
xor
sub
stos
cmp
enter
(bad)
ds
pushf
cmc
rcr
inc
outs
stos
idiv
sar
push
(bad)
jae
jno
test
mov
xor
cmc
bnd
ror
push
fmul
lods
jb
pushf
loope
adc
jmp
jg
lds
inc
xchg
xor
push
add
iret
jns
lds
xor
aad
das
enter
(bad)
or
sbb
jle
js
mov
imul
cmp
push
xor
cs
in
aaa
dec
jb
adc
pop
cmp
dec
add
lds
rcr
cli
mov
and
fcom
push
movs
(bad)
ror
pop
pop
or
out
add
clc
sub
dec
cmp
xchg
mov
xor
xchg
xchg
sbb
cdq
es
xchg
and
mov
cmp
call
mul
out
ds
out
call
sub
out
test
adc
push
sub
cmovb
ret
mov
popf
fisttp
shl
jle
inc
and
push
loop
repnz
and
inc
div
jge
icebp
mov
sbb
ds
les
inc
adc
sub
pop
push
cmp
or
jbe
xor
mov
sub
call
dec
xchg
push
adc
shl
out
inc
scas
xchg
dec
daa
adc
out
push
ffreep
or
(bad)
fsub
sbb
out
sbb
mov
fnsave
xchg
sub
or
mov
jle
es
loope
mov
pop
test
popa
add
push
not
imul
movs
mov
scas
(bad)
outs
add
add
xchg
in
jbe
popa
addr16
shl
mul
mov
ss
jecxz
or
imul
sub
pop
and
into
inc
iret
pop
cs
push
fcomp
in
push
sub
pop
repnz
div
mov
dec
ficom
sbb
mov
push
das
test
(bad)
pop
jne
xor
test
cwde
xchg
repz
sub
cmp
jg
pop
cli
xor
xchg
out
test
test
sti
nop
ins
cmps
inc
dec
stos
jecxz
xor
or
xor
test
dec
mov
mov
inc
mov
cmp
fsubr
stos
mov
and
les
loopne
mov
fsubr
out
xor
sub
push
test
rcr
xchg
push
lea
xchg
dec
jo
xor
cld
push
dec
out
inc
rcr
adc
mov
test
xor
sub
add
cdq
test
outs
mov
sbb
lahf
lds
ins
and
lea
aad
in
pop
xor
test
stos
dec
mov
adc
jns
sti
xor
test
ret
xor
scas
fwait
mov
adc
mov
cmp
lea
mov
into
lods
fisttp
sets
sub
sub
and
adc
xchg
cmp
jb
clc
data16
aaa
into
sub
loop
ja
aaa
movs
jne
mov
sbb
mov
test
test
sub
iret
mov
aam
je
mov
jmp
in
enter
movs
jmp
test
outs
and
es
mov
aaa
xor
add
mov
or
or
xor
fnsave
hlt
(bad)
cmp
fadd
dec
and
int3
cld
popf
imul
out
mov
loop
pop
adc
jo
xchg
lods
jmp
popf
test
ret
sbb
iret
cmp
sbb
jmp
in
leave
mov
push
sbb
neg
fcomip
in
loop
dec
shl
pushf
scas
jb
mov
lods
inc
int3
xchg
bound
scas
inc
call
cld
pop
or
sub
jle
sbb
outs
enter
sbb
xchg
mov
jmp
fs
and
fst
sub
imul
cmp
dec
mov
repz
in
dec
mov
repz
or
lods
inc
sahf
xor
imul
in
inc
call
(bad)
ds
sub
daa
bound
in
icebp
or
xor
and
arpl
in
cmp
dec
sub
ror
(bad)
in
xchg
enter
sub
or
jae
mov
jae
clc
stc
jp
xchg
mov
(bad)
pop
iret
rcl
inc
aad
call
pushf
retf
mov
xchg
push
pop
call
shr
in
(bad)
scas
daa
sub
mov
(bad)
xor
stos
add
inc
fild
mov
mov
push
lods
cdq
sbb
bound
loopne
xchg
jle
add
jnp
test
cmps
jmp
sti
repz
mov
ja
jae
imul
(bad)
adc
dec
imul
test
outs
pop
mov
iret
retf
inc
pop
push
test
cmc
sbb
and
push
movs
loop
or
mov
mov
mov
mov
jge
out
sbb
int3
sub
gs
sub
add
inc
jo
shl
std
xchg
popf
cmps
adc
pop
imul
pop
(bad)
cli
fwait
mov
sar
stc
xchg
mov
push
jae
not
or
cmps
pop
mov
sub
sbb
mov
or
dec
stos
cmps
stos
sti
and
das
scas
aam
outs
dec
xor
not
jp
pop
js
dec
push
(bad)
cmp
pop
shl
(bad)
and
dec
xor
adc
icebp
rcl
std
ret
jmp
xchg
mov
and
push
inc
inc
mov
scas
packsswb
cmp
mov
popf
popf
(bad)
mov
jle
fcomp
push
inc
mov
fcom
add
pop
shl
xchg
arpl
stos
jge
sub
jnp
push
sbb
adc
je
jbe
and
jbe
imul
scas
hlt
rcl
aaa
mov
fisubr
arpl
cmp
cmp
in
sbb
in
push
sahf
add
adc
shl
(bad)
pop
inc
imul
dec
popf
fdivr
fwait
sbb
mov
sbb
cld
sub
pusha
cmp
sbb
cs
int
sbb
pop
in
and
ins
bound
mov
cwde
shl
jge
out
add
xor
jbe
add
ret
enter
js
cs
repnz
outs
xlat
mov
pop
ds
shl
jae
jne
fucomi
add
mov
push
pop
or
pop
jb
mov
pop
mov
mov
(bad)
xchg
aad
dec
rcr
add
push
mov
jle
push
ret
ror
retf
das
inc
adc
call
inc
cmp
ficom
enter
test
push
fucom
dec
sub
out
pop
mov
fild
dec
xlat
stos
jo
stos
inc
movs
add
cmps
jne
pop
adc
nop
pop
out
jns
fnstsw
inc
(bad)
out
pop
xchg
out
pop
add
mov
ds
cmp
push
js
jns
leave
popa
imul
jnp
sub
in
loope
sub
inc
ja
jmp
sub
mov
xchg
sub
adc
aas
add
xchg
jmp
div
fistp
hlt
es
fistp
loope
aas
xchg
mov
mov
xchg
xor
dec
jnp
cld
xchg
mov
adc
popf
cdq
mov
mov
mov
jns
ret
sub
ja
xor
pop
jge
sbb
add
sub
out
push
pushf
push
jl
adc
daa
cmp
out
or
xchg
push
jmp
and
dec
jb
loop
dec
mov
mov
aaa
mov
aad
div
dec
lds
mov
(bad)
fdivr
pop
sbb
shl
mov
cli
sub
aam
pop
frstor
aaa
loopne
jl
popa
loope
hlt
fcomp
adc
popa
(bad)
cmps
xchg
ds
mov
mov
jns
jns
and
mov
ret
ror
and
repnz
inc
xchg
fld
js
mov
push
stc
sbb
push
xor
call
and
adc
mov
add
dec
jg
(bad)
pushf
ja
xor
jmp
int
lods
jmp
adc
mov
xor
ret
xor
push
xor
sub
std
pop
inc
mov
out
mov
sub
ins
sbb
dec
add
mov
mov
jae
mov
aam
xor
popa
sbb
stc
out
ds
inc
test
mov
sub
jae
xor
jecxz
push
pushf
test
inc
cmps
mov
arpl
aad
jge
out
fst
cli
inc
pop
lock
addr16
fcmovnbe
stc
inc
and
test
and
hlt
dec
and
fisubr
cmps
inc
in
mov
jno
mov
dec
sub
adc
mov
ins
xchg
shl
shl
sbb
sub
int3
fcmovnu
mov
popa
in
xor
fldenv
je
mov
xchg
dec
in
ror
mov
and
fs
clc
js
loope
push
xchg
cmp
shl
test
test
ins
pop
jmp
shl
add
xchg
imul
adc
out
test
not
xchg
mov
jle
xor
xchg
jmp
mov
hlt
repz
or
out
and
xor
outs
adc
pop
cmps
xlat
xchg
pushf
sbb
dec
lds
mov
pop
lods
(bad)
lods
repnz
pop
dec
xchg
mov
adc
or
ficomp
imul
iret
mov
das
(bad)
retf
(bad)
aam
das
mov
ja
push
sub
add
mov
mov
cmp
fcmovnbe
push
in
mov
or
push
and
(bad)
sbb
mov
jl
xchg
adc
push
push
shl
jae
js
dec
jae
sub
pop
lods
shl
mov
cwde
lods
in
rcr
pop
stos
mov
cld
cdq
mov
push
xchg
adc
sahf
int3
sub
fcom
push
xchg
cdq
push
adc
nop
test
jnp
fisubr
mov
mov
(bad)
fmul
fild
fcom
in
iret
xor
icebp
lods
mov
imul
jge
pop
adc
sbb
jl
xchg
push
ins
push
ret
retf
xor
jmp
fwait
cmp
mov
(bad)
jno
and
push
jge
(bad)
mov
enterw
sub
sbb
inc
imul
hlt
xchg
cmp
mov
cmc
ret
mov
pusha
mov
outs
aad
stos
fwait
jle
push
xchg
jnp
mov
push
sbb
jmp
loopne
and
retf
adc
pop
ret
push
test
jb
sbb
mov
or
loop
sbb
fnstsw
mov
mov
mov
test
push
lods
stos
out
jno
dec
pop
cmps
(bad)
or
mov
or
or
shr
cmp
(bad)
jns
push
dec
jmp
mov
lds
pop
jnp
out
movs
retf
sub
das
in
test
(bad)
ror
sbb
retf
add
push
stc
pop
pop
test
dec
ret
dec
cmp
cmp
mov
dec
stc
(bad)
lods
fmul
or
repnz
out
js
sub
pushf
repnz
movs
test
dec
call
inc
mov
or
xchg
std
sbb
add
xor
or
mov
mov
mov
lahf
repnz
rol
repnz
add
sub
adc
les
xor
daa
sub
shl
retf
dec
rcl
clc
imul
pop
dec
dec
cmp
cmp
mov
inc
scas
add
xchg
outs
sahf
popa
aas
sar
inc
inc
ja
test
and
fmul
imul
jnp
sar
inc
shl
or
not
and
shl
push
test
mov
call
fisttp
xchg
sar
mov
daa
cmp
addr16
adc
ffree
je
out
fldl2t
in
cs
jno
repz
sbb
daa
add
push
sub
jg
fiadd
sub
push
jbe
enter
sbb
js
es
mov
xchg
mov
or
dec
xchg
fwait
lock
and
call
call
push
hlt
in
setne
pop
fcmovnu
jmp
inc
sub
fcmovnbe
or
dec
xlat
repnz
push
mov
repz
fdiv
das
arpl
mov
sub
lea
xor
xor
add
and
sub
(bad)
cmps
jp
call
inc
nop
xchg
adc
xchg
push
push
in
lods
ret
jbe
lds
xchg
mov
out
sub
loop
pop
push
(bad)
sar
mov
popa
mov
mov
daa
sub
mov
xchg
mov
xor
adc
les
cmp
sti
mov
test
sti
jmp
cmp
ss
xor
cmc
in
out
fsub
xor
xchg
add
out
jmp
pop
ret
mov
shr
loope
rol
shl
aam
outs
jmp
(bad)
adc
xchg
push
jmp
cli
xchg
fs
sar
mov
adc
and
imul
int
mov
icebp
aam
fldcw
mov
mov
jp
aas
jge
sahf
popa
loope
or
pop
mov
sbb
adc
mov
jno
xchg
pop
daa
loope
retf
fstp
std
ja
fisttp
in
imul
(bad)
hlt
in
add
cli
sbb
and
jl
dec
jno
mov
mov
dec
aam
sti
aas
imul
ds
aas
int
ja
sub
mov
pusha
push
sbb
jecxz
scas
mov
mov
xchg
mov
or
int3
xchg
push
dec
repnz
imul
(bad)
fucomip
test
dec
arpl
mov
push
stos
or
mov
ja
not
add
fsub
fstp
and
and
sub
jno
or
push
or
xchg
sbb
sub
inc
cmp
retf
jo
jp
repz
jle
add
inc
sub
dec
outs
clc
xchg
push
pop
ret
pop
jmp
and
cmps
mov
jp
loope
stos
jmp
sahf
and
push
stos
xchg
xor
sub
and
(bad)
lds
in
icebp
out
ss
sahf
pop
jne
sar
and
jl
mov
pop
lahf
mov
(bad)
sbb
shr
xchg
rcr
fist
sub
jne
fist
inc
daa
test
out
dec
cmp
in
ror
push
in
repz
call
leave
test
stos
lahf
dec
cmps
push
nop
sahf
inc
jne
outs
inc
mov
mov
xchg
ret
mov
retf
dec
(bad)
retf
push
cmps
aam
ins
jo
mov
loope
fcomp
pop
addr16
inc
xchg
jb
leave
movs
es
ins
sub
mov
mov
add
sar
lahf
jmp
movs
mov
mov
dec
cwde
pushf
add
and
cmps
and
bound
ss
mov
dec
push
cmp
ja
aam
jns
fwait
stos
mov
out
cli
mov
jl
fnstcw
or
mov
(bad)
sub
mov
leave
aam
xor
mov
sub
cmps
xchg
mov
push
aaa
int
adc
popa
in
mov
lods
ret
and
shr
add
test
fsubr
call
jno
dec
dec
aas
pop
mov
fadd
add
out
sub
data16
cli
mov
fisttp
jo
add
jecxz
sbb
idiv
inc
call
sub
or
dec
imul
mov
stos
scas
fst
sbb
inc
(bad)
fcmovnbe
cld
mov
cmps
sbb
call
cmp
xor
xchg
or
ins
jecxz
push
push
dec
mov
test
js
mov
sti
adc
(bad)
loopne
ss
lock
fisubr
xchg
jecxz
pop
inc
lahf
stc
mov
pop
out
cmc
jmp
sbb
xchg
push
setbe
inc
mov
fisttp
rcl
clc
dec
(bad)
into
sub
std
fbld
jmp
push
mov
sbb
jno
and
hlt
scas
inc
ins
retf
hlt
inc
(bad)
sar
aas
mov
test
out
cmp
jo
outs
mov
or
scas
inc
imul
jno
stos
xchg
leave
out
mov
clc
fld
mov
sub
push
jae
xchg
stos
retf
into
mov
sahf
mov
lods
mov
clc
leave
cmp
inc
fistp
mov
cmps
xchg
pop
pushf
or
cwde
dec
daa
mov
je
and
mov
(bad)
aam
lock
sbb
adc
cmps
mov
cmp
test
test
push
bound
es
(bad)
outs
xor
push
jmp
mov
mov
ret
jbe
mov
push
cmp
sub
xor
cmps
call
fcom
loope
movs
inc
nop
push
dec
popa
dec
fsubr
mov
je
xor
pop
iret
xor
mov
jg
cmp
xchg
loop
test
mov
lea
add
sbb
sub
fld
mov
pop
aam
xchg
das
dec
xor
retf
xor
mov
stos
mov
fwait
(bad)
push
mov
imul
jmp
push
and
cmps
and
xor
and
push
ja
inc
push
retf
jno
repz
mov
stos
mov
dec
out
sbb
adc
xor
cs
xor
push
iret
out
(bad)
out
stos
jo
and
pop
lds
xchg
dec
xor
lea
push
scas
test
loope
inc
add
xor
aaa
ds
mov
or
stc
jns
jl
push
push
int
pop
fild
inc
in
jl
sbb
int3
mov
idiv
mov
jo
cmc
loop
cs
push
jge
jp
das
sahf
push
mov
xlat
mov
mov
or
sbb
popf
xchg
icebp
pop
push
jns
call
jp
cld
int
dec
cmp
ficomp
sbb
and
cli
adc
popf
lahf
jae
xchg
cmp
sub
pop
jno
cmp
mov
push
xor
sub
imul
sbb
fsubr
jno
test
or
push
cmp
and
fst
aad
in
dec
iret
add
and
fwait
retf
popf
daa
ss
cld
jmp
out
(bad)
(bad)
fs
mov
sbb
mov
adc
shl
punpckhwd
test
sti
mov
sub
add
sub
pusha
mov
shl
lea
xor
and
retf
shl
mov
in
mov
sbb
push
mov
js
(bad)
(bad)
xchg
inc
sub
lea
inc
fmul
mov
mov
mov
adc
push
shl
ficom
inc
enter
fstp
into
leave
cdq
mov
loop
xor
rcr
idiv
adc
jo
add
pop
xor
mov
sbb
jmp
mov
and
push
pop
or
pop
fnstenv
or
shr
mov
mov
imul
call
in
fdiv
jecxz
cdq
inc
and
in
cld
std
sbb
dec
enter
push
or
clc
hlt
cmp
div
outs
out
jmp
in
add
mov
xlat
(bad)
push
ret
jnp
sahf
push
lods
call
pop
sub
imul
inc
les
pop
mov
ret
adc
pop
retf
aam
jg
(bad)
mov
lock
sti
stc
popf
pop
test
inc
call
outs
sub
push
jo
pop
mov
add
mov
mov
mul
cmps
int
loopne
xor
cmc
rcl
mov
sbb
idiv
push
mov
dec
aas
jbe
add
movsx
sub
inc
jmp
inc
xor
(bad)
sbb
inc
fadd
push
or
ror
icebp
ja
add
mov
test
jne
sti
outs
vhsubps
fsubrp
jmp
test
lods
xchg
sub
dec
sbb
pop
xor
xchg
or
pushf
cmps
cld
jmp
mov
sbb
repnz
sub
dec
mov
popf
shl
cmp
jg
mov
scas
movs
loopne
jge
cld
adc
mov
fidiv
sti
cmp
je
cs
int3
xor
ss
xor
mov
in
fdivr
adc
sbb
imul
outs
or
sbb
cwde
fistp
or
sbb
shl
lods
scas
xchg
movs
adc
push
adc
inc
repnz
xor
std
das
push
inc
cmc
push
stos
mov
sbb
push
loopne
cmc
out
cmp
mov
cmp
scas
adc
(bad)
ja
aam
sbb
aas
pop
or
outs
sti
pop
aas
mov
push
and
retf
into
into
xor
pusha
push
mul
retf
test
loopne
mov
add
push
cmps
nop
jecxz
icebp
jmp
ins
and
(bad)
pusha
and
dec
add
pop
nop
(bad)
cs
pop
test
jo
mov
ret
pop
aad
fild
leave
inc
imul
enter
xchg
mov
pop
loop
xchg
sub
iret
inc
cmp
adc
fimul
mov
jb
dec
js
push
dec
fst
div
not
cmp
dec
std
fisub
inc
push
aas
(bad)
mov
adc
mov
adc
scas
loopne
jo
jmp
sti
xor
xchg
sbb
sbb
leave
in
jmp
cmc
aas
les
adc
imul
rcl
adc
pop
jge
sahf
push
xchg
fldpi
int
mov
jno
sbb
mov
dec
mov
cmps
mov
out
mov
xor
and
sub
(bad)
or
lock
fs
shl
leave
push
mov
xor
mov
test
shl
dec
push
push
in
mov
push
sub
out
std
xchg
int
inc
cmp
jo
loope
xor
sti
push
(bad)
push
arpl
fidivr
cmp
mov
ret
jecxz
pop
xchg
stos
lock
mov
inc
mov
dec
and
aam
cmp
fsub
cmp
cs
fs
mov
push
jecxz
hlt
daa
loope
or
lahf
or
mov
jae
aaa
dec
push
xchg
out
(bad)
arpl
add
mov
jns
and
jmp
mov
lock
into
cmps
pushf
test
retf
xchg
or
sub
sbb
shr
leave
dec
hlt
in
das
gs
dec
jg
aas
gs
movs
aam
scas
cmp
cs
sbb
fdivr
push
xchg
and
jmp
ja
jge
jecxz
out
add
mov
cli
pop
mov
or
sti
pminub
retf
iret
mov
imul
into
jns
adc
fidivr
pop
fcomp
repnz
(bad)
popf
push
xchg
lock
inc
add
inc
fstp
cmp
push
add
and
rol
in
sub
aam
sub
test
push
popa
and
test
test
inc
add
mov
movs
pop
or
sbb
fisubr
jl
pop
cmp
push
out
mov
mov
popf
push
(bad)
leave
jmp
sub
or
cdq
popf
cli
xchg
jp
push
jmp
sti
inc
sti
mov
mov
inc
or
mov
jo
jmp
push
jmp
mov
sbb
pop
popf
and
dec
mov
pop
and
std
repz
ficom
sub
movs
iret
es
adc
push
mov
adc
aad
mov
mov
add
ror
dec
pop
shl
dec
add
jmp
cmp
sahf
leave
jmp
(bad)
push
xchg
mov
mov
add
adc
sbb
sbb
sar
test
adc
hlt
mov
sub
lods
sub
rcl
mov
pusha
xchg
xor
dec
or
jge
ds
dec
xchg
and
sub
in
add
std
or
pop
jae
out
xchg
fsub
push
add
loop
inc
stos
add
add
(bad)
mov
push
out
sbb
jae
retf
sub
cmp
ret
mov
adc
jns
sub
pop
mov
scas
xchg
cmp
gs
cwde
sbb
daa
imul
jnp
cmps
mov
jo
repnz
mov
sub
in
je
iret
inc
stos
fwait
inc
movs
or
fsubr
and
mov
jge
movs
fnstcw
stos
dec
or
sahf
xchg
inc
cmps
stos
sub
mov
or
cmp
add
inc
sub
adc
xchg
xchg
or
or
out
cmp
xchg
je
jmp
xchg
mov
dec
push
popf
sar
in
call
push
sbb
(bad)
mov
and
sar
mov
sti
mov
sbb
pusha
sbb
das
and
fcom
pop
mov
rcl
in
movs
rol
jae
jmp
nop
sbb
iret
repnz
js
mov
ds
test
sbb
imul
pop
maxps
fwait
ins
in
fwait
loope
fnstenv
mov
inc
or
loop
call
out
mov
sti
aaa
das
xchg
add
loope
gs
cmc
push
popf
call
iret
loope
lea
jne
into
loopne
js
and
pop
mov
dec
mov
sub
xor
mov
add
test
cld
fs
jmp
imul
stos
mov
and
adc
arpl
test
push
xchg
jl
push
cmc
mov
cmps
clc
push
add
out
pop
mov
ret
xchg
pop
bnd
push
retf
and
mov
pushf
test
retf
fist
jne
jp
pop
mov
add
inc
pop
lock
xlat
add
and
push
sahf
pusha
sub
outs
and
jnp
in
sbb
xor
adc
jmp
div
pop
push
xchg
loopne
jns
setp
cmc
daa
xchg
jmp
jns
dec
popf
add
dec
push
sub
push
sbb
and
daa
scas
xchg
add
in
aad
lahf
data16
pop
adc
sbb
sub
cmc
les
scas
push
jns
mov
int3
cmp
ins
(bad)
out
cmp
pop
push
cdq
mov
lds
scas
scas
shl
jb
jg
nop
add
and
mov
xchg
outs
inc
repz
and
jmp
(bad)
mov
jp
iret
call
adc
clc
(bad)
fldenv
(bad)
loop
retf
rol
and
or
daa
pusha
mov
inc
lea
push
sti
icebp
dec
fldenv
adc
movs
out
sbb
jae
mov
mov
cld
repnz
mov
jno
pop
adc
fwait
cmps
add
sub
xchg
push
dec
es
neg
jp
sub
cs
and
dec
popa
ss
cld
mov
sbb
dec
loope
cmp
fcom
mov
test
fbstp
cli
test
in
mov
cwde
dec
or
outs
int3
fiadd
scas
inc
retf
loop
jb
add
repz
cwde
retf
xchg
sub
fsub
mov
pop
sub
xchg
cmp
push
jb
cli
cli
shl
pop
sbb
pop
sbb
mov
ins
movs
lea
push
dec
or
retf
shl
call
and
inc
pop
(bad)
adc
add
add
adc
adc
fisub
push
cmp
push
rol
test
push
(bad)
jne
jecxz
cmps
xchg
retf
jb
ss
jp
lea
icebp
lahf
stos
jnp
popf
xchg
pusha
adc
fsub
push
adc
lds
pop
adc
xor
jae
mov
xchg
pop
stos
loopne
test
xor
mov
mov
(bad)
xor
sub
xchg
add
(bad)
xchg
sahf
jmp
ret
adc
movs
mov
fstp
sbb
popf
call
jnp
pop
push
test
sub
push
push
mov
retf
cli
loop
cmc
stos
add
dec
xor
push
sbb
ret
fwait
adc
(bad)
or
test
xchg
adc
and
lods
outs
pmaxub
repnz
scas
pop
mov
adc
sbb
fneni(8087
repz
mov
push
pushf
mov
fucom
test
daa
inc
and
sbb
jmp
add
pushf
and
js
dec
cmps
loope
mov
push
arpl
(bad)
div
sub
push
mov
mov
mov
inc
add
cdq
sti
xchg
push
loop
pop
jbe
lds
pop
in
and
dec
pop
pop
dec
(bad)
cmps
mov
icebp
lods
sti
lds
mov
mov
add
jae
mov
add
mov
pop
pop
(bad)
xor
sub
jg
inc
lods
cli
sub
int
pop
lock
add
data16
inc
push
pushf
sar
sbb
push
xchg
sbb
and
jl
add
mov
xor
adc
ret
cmps
ret
lock
int
aas
mov
or
lahf
xor
xor
ret
push
loope
or
xchg
das
ins
das
sbb
call
add
add
fucomi
xor
in
dec
mov
sahf
cmc
imul
mov
retf
call
stos
push
sub
cld
dec
gs
push
imul
movs
mov
test
mov
cmp
in
push
adc
pop
lds
xor
(bad)
in
div
test
mov
xchg
(bad)
inc
leave
cmp
push
xchg
loop
push
xor
jae
ds
xor
mov
scas
mov
mov
add
or
xor
and
(bad)
fist
push
cmps
icebp
lds
sbb
sub
adc
mov
cmps
pop
xor
ins
cli
push
arpl
cmps
frstor
push
pop
push
dec
scas
mov
sub
sub
addr16
cmp
cmp
push
sbb
ret
or
dec
xchg
loopne
jb
jmp
mov
pop
(bad)
mov
push
in
sbb
test
out
jb
out
fs
mov
pop
and
pop
xchg
push
mov
sub
(bad)
mov
in
arpl
imul
xor
jle
stos
cmp
pop
out
dec
neg
(bad)
cmc
push
mov
xchg
or
push
cmps
pop
sub
imul
mov
sbb
sti
jbe
clc
jne
mov
mov
mov
xor
fadd
push
jge
sub
(bad)
out
popa
leave
fdiv
push
sub
out
push
jno
ins
sti
outs
test
jno
je
jg
pushf
sbb
out
pop
cmp
xor
sbb
stos
adc
inc
lea
adc
ss
dec
mov
mov
clc
sub
outs
mov
add
push
fs
mov
mov
xchg
je
les
jle
dec
xchg
call
out
sbb
add
idiv
and
mov
inc
mov
enter
cs
xchg
inc
mov
adc
push
mov
adc
scas
test
jl
movs
call
push
je
mov
push
outs
push
cmp
in
int3
mov
mov
add
dec
idiv
mov
fcom
cld
sahf
fisttp
inc
in
mov
fs
xor
scas
dec
cmps
cmp
cmc
pop
cli
push
push
sahf
lahf
std
sbb
sbb
int
add
ins
lds
es
jl
hlt
xchg
lock
sahf
inc
push
nop
lea
sub
jle
sub
into
test
jmp
mov
daa
retf
mov
pop
lock
push
add
push
sub
sbb
jo
mov
ror
add
pop
add
gs
icebp
dec
call
dec
ins
stos
xchg
sbb
test
bound
(bad)
pop
adc
int
mov
sar
arpl
fs
(bad)
ja
fs
out
mov
or
and
rol
test
pop
scas
daa
movs
lahf
jmp
test
je
iret
cmp
retf
sbb
pushf
out
jo
(bad)
pushf
xor
pop
sti
imul
pop
mov
cmp
test
sahf
mov
push
outs
loopne
or
xchg
sub
and
lock
mov
cmp
lods
out
fcomp
retf
gs
cmp
jo
in
ret
jl
jp
fs
adc
ror
retf
mov
push
jmp
sub
mov
das
lea
test
inc
nop
or
call
sti
sti
movs
call
pop
jecxz
ja
shl
sbb
xor
xlat
pop
xor
pusha
test
mov
stos
hlt
rol
jnp
gs
cmp
leave
mov
jp
adc
jb
pop
sbb
jno
(bad)
je
scas
retf
retf
(bad)
mov
add
test
sbb
or
daa
inc
dec
inc
jbe
into
xor
js
jmp
std
push
ins
into
(bad)
sub
movs
hlt
out
aaa
test
mov
mov
fisubr
ret
in
loope
sub
xchg
or
outs
or
cmp
aad
push
pop
ins
sub
or
shr
inc
add
or
xor
push
jg
dec
scas
hlt
sbb
push
test
jo
in
push
scas
pop
push
cmp
div
push
das
push
jb
adc
or
pop
fnstenv
mov
int3
lds
pushf
sar
out
xlat
dec
cmp
inc
(bad)
pop
stos
xchg
pop
mov
out
fst
inc
adc
inc
daa
retf
es
xchg
mov
cmp
and
test
cmps
test
adc
mov
inc
dec
or
push
cmp
ins
inc
sub
jp
fistp
xchg
cli
mov
pop
jno
add
clc
jge
bound
cwde
sbb
xor
push
bound
iret
je
ds
jne
pop
mov
stos
retf
je
pop
push
stos
xchg
ror
movs
push
xchg
inc
inc
sub
lock
ja
mov
out
dec
outs
enter
sbb
gs
or
mov
jnp
sub
fisttp
call
test
jmp
push
js
cli
call
jbe
mov
push
arpl
push
int3
aam
jle
jne
rcl
test
lods
ret
sbb
push
mov
cmp
jl
mov
xor
sbb
mov
jno
mov
xchg
ins
retf
(bad)
jno
stos
mov
inc
js
out
icebp
inc
mov
(bad)
pop
jg
jne
movs
mov
cli
ret
les
mov
xor
pusha
(bad)
jmp
push
nop
ds
lahf
pop
dec
scas
cmp
or
dec
repz
inc
dec
cdq
mov
bound
mov
nop
and
add
mov
and
fwait
aam
jne
sbb
or
pop
loope
inc
(bad)
sbb
sbb
pop
add
sar
xchg
sbb
add
pop
in
pop
xchg
adc
call
dec
leave
mov
mov
xor
fs
es
and
sub
mov
mov
stc
enter
int
jae
cmps
pop
jb
adc
leave
xchg
adc
pop
push
icebp
out
push
cld
cli
shl
mov
ss
bound
xor
pop
(bad)
es
in
lea
int3
stos
imul
and
push
fs
call
xor
xchg
push
retf
js
cmp
out
sub
ret
cdq
jno
movs
stos
hlt
xchg
xor
sahf
mov
leave
shr
(bad)
xchg
sti
cdq
icebp
les
loop
mov
mov
popa
push
sub
scas
add
add
jecxz
cmps
xlat
xchg
in
je
das
cmp
and
cmps
das
inc
repnz
popa
add
mov
sub
inc
sbb
pusha
sbb
xor
xor
test
xor
cmp
inc
dec
stos
movs
pop
test
xchg
retf
mov
inc
in
(bad)
add
(bad)
push
mov
aam
jle
loope
rep
mov
adc
dec
lahf
dec
cmp
xchg
inc
das
pop
xchg
test
ja
lahf
movs
jns
pop
sub
bswap
cwde
push
and
push
xor
test
push
jp
fimul
inc
pusha
repnz
stos
dec
fdivr
add
jbe
dec
push
and
leave
mov
test
gs
(bad)
pop
and
ret
mov
cdq
push
shl
in
push
mov
out
pop
adc
mov
(bad)
lock
ret
call
test
ror
add
lock
mov
and
xor
mov
sub
out
mov
xlat
fwait
pop
xchg
push
cmp
mov
fnstenv
cs
call
mov
cmps
jae
ss
dec
sbb
add
pusha
ja
data16
mov
mov
test
test
adc
jle
mov
in
movs
retf
fild
mov
pop
inc
mov
in
imul
call
dec
movhps
(bad)
pop
pop
sbb
jb
xchg
popa
bound
jmp
popa
xor
add
adc
in
push
adc
jb
mov
and
push
or
or
out
jo
dec
sub
leave
pop
pusha
push
fstp
rcl
pop
(bad)
lods
arpl
sub
pop
(bad)
bound
jle
inc
inc
pcmpeqb
sbb
das
sbb
je
jmp
add
test
push
mov
and
sub
(bad)
xchg
or
call
fild
mov
mov
and
lods
push
cmp
repnz
cdq
xchg
outs
pop
(bad)
xlat
lea
pop
test
sub
outs
mov
loopne
retf
fsubr
into
mov
mov
adc
outs
fimul
sub
xchg
and
fld
sbb
push
in
cmp
repz
xchg
adc
test
sub
pop
bound
in
repnz
push
scas
arpl
movs
mov
cmp
lea
les
and
test
sbb
ror
mov
pop
neg
out
jle
sahf
ret
bound
inc
inc
loopne
ds
push
int
inc
rcl
into
pop
mov
in
(bad)
jbe
pop
pop
or
ins
clc
aad
adc
cmp
and
jae
dec
ins
pop
(bad)
adc
aas
mov
add
jmp
movs
pop
aaa
or
dec
add
xor
(bad)
rol
test
add
xchg
mov
or
jmp
jmp
jg
xor
or
iret
mov
pop
loope
inc
mov
arpl
imul
push
sbb
loopne
push
inc
xchg
je
add
jnp
push
daa
xchg
dec
call
push
out
jmp
les
xchg
sbb
or
cmp
daa
mov
sub
in
aaa
daa
dec
lahf
arpl
scas
out
outs
popa
inc
xor
les
in
push
lock
cmps
jne
aas
int
(bad)
add
dec
push
mov
jnp
sub
mov
stos
or
into
adc
ja
repnz
mov
push
in
fcomp
and
aas
mov
add
sbb
loope
idiv
inc
loopne
clc
gs
and
sub
imul
mov
xor
push
dec
lock
mov
and
pop
lock
ss
test
pop
into
fisub
repz
mov
pusha
std
fdiv
je
xchg
shl
into
in
cmc
jae
push
mov
retf
dec
(bad)
and
sbb
retf
jb
sub
pop
jne
bound
cmp
test
scas
loop
dec
arpl
adc
jp
lods
cwde
loopne
sbb
sbb
xchg
cld
or
inc
or
out
mov
inc
jo
aad
sbb
add
mov
jg
sbb
cwde
mov
addr16
mov
adc
push
inc
bound
ret
jle
adc
mov
adc
pop
mov
mov
repnz
movs
sub
xor
(bad)
push
adc
jne
shr
pop
xchg
inc
dec
mov
(bad)
hlt
sub
mov
outs
xchg
out
sbb
std
ss
xchg
out
xchg
cmps
ins
mov
add
iret
popa
pop
jmp
inc
dec
mov
pushf
sub
fdiv
ss
neg
pop
jno
loope
push
sbb
sub
aas
pop
in
or
(bad)
out
dec
or
add
jne
int
hlt
stos
sahf
test
cmp
retf
add
retf
sar
pop
sub
lahf
shl
pop
cmps
mov
hlt
adc
mov
and
mov
inc
dec
mov
cli
xor
sub
xchg
mul
sti
xchg
xchg
lds
call
xchg
xor
sbb
xchg
xor
jg
mov
mov
mov
loope
mov
sub
cmp
mov
mov
add
jno
in
jg
ret
outs
aaa
es
(bad)
xlat
(bad)
jnp
and
loopne
adc
outs
shl
mov
mov
cmc
(bad)
pop
popf
push
push
int
pop
shl
aad
lds
retf
popa
aaa
test
pushf
gs
aaa
push
call
inc
test
mov
and
mov
(bad)
pop
test
cmp
movs
fucomp
xor
jns
cmps
or
jle
ins
inc
adc
push
popf
outs
mov
stc
call
std
sahf
and
mov
dec
(bad)
clc
and
sbb
inc
shl
xor
cs
and
jnp
sub
mov
mov
and
mov
lds
outs
sbb
sbb
shr
dec
in
jecxz
pop
adc
dec
push
mov
retf
push
and
aaa
enter
add
out
call
mov
push
aaa
scas
daa
das
lahf
sbb
int
adc
js
(bad)
je
push
dec
popa
push
sbb
(bad)
movs
sbb
loop
daa
cld
sbb
push
mov
jg
fistp
(bad)
ja
gs
mov
cmps
dec
add
cmp
sar
jne
and
std
xor
ror
mov
mov
dec
push
xlat
fwait
(bad)
sub
mov
int3
add
and
imul
retf
(bad)
jle
aaa
inc
aas
mov
std
cmp
emms
lods
dec
sub
push
out
xor
sub
adc
fwait
ds
fsub
xchg
jno
in
ficomp
sbb
and
inc
int
dec
jg
xchg
dec
retf
inc
or
lods
inc
adc
rcl
pop
dec
imul
mov
(bad)
jmp
movs
lds
cmp
dec
xchg
jbe
hlt
repnz
sahf
mov
ins
ret
sub
outs
mov
jae
stos
push
stos
mov
jle
jnp
outs
jecxz
fwait
jbe
dec
pop
xor
add
scas
cmp
mov
jmp
movs
(bad)
cmp
dec
adc
dec
sbb
fcom
sub
add
fisttp
pop
enter
arpl
movs
maskmovq
int3
ins
dec
in
sub
cmc
iret
imul
add
mov
ret
into
add
stos
and
(bad)
hlt
or
popa
and
pushf
js
or
ins
jle
cmp
je
std
push
xchg
sub
sub
adc
add
xor
push
add
sti
clc
into
ja
jb
shl
and
les
jp
cli
leave
jl
into
scas
je
inc
add
repnz
bound
add
xor
jl
sub
ds
cmp
adc
pop
xor
mov
punpcklbw
mov
pop
cmp
leave
lock
cmp
(bad)
(bad)
and
jbe
mov
mov
enter
sbb
into
mov
mov
rcr
aaa
(bad)
mov
pop
adc
push
jmp
(bad)
jb
shl
(bad)
sbb
xchg
and
hlt
cmps
mov
pop
ja
or
test
sbb
stos
pop
lods
mov
add
push
das
mov
in
inc
lods
xor
ins
(bad)
je
and
sub
or
retf
xchg
xor
out
test
pop
sub
adc
lods
push
xor
mov
sbb
xchg
sub
xor
fwait
out
push
jno
div
cmp
popa
shl
aas
push
iret
gs
dec
push
adc
js
and
mov
cmp
cdq
fisub
(bad)
cmp
inc
repz
add
inc
lods
jmp
push
push
stos
stc
test
pop
push
mov
jns
(bad)
hlt
aam
push
push
pop
cmp
or
rol
pop
out
lods
xor
sar
jne
into
retf
jmp
sub
mov
lahf
pop
out
adc
xchg
test
sbb
mov
outs
push
sbb
push
test
fwait
pushf
dec
sbb
dec
xor
jne
push
jns
push
adc
xor
dec
and
cmp
fisub
jae
cld
pop
enter
lea
and
jb
mov
cwde
mov
or
cmp
add
idiv
cli
rol
je
fistp
sbb
push
jecxz
in
outs
int
xor
lea
arpl
bound
stc
shl
inc
movs
inc
daa
mov
or
nop
push
mov
cmps
jmp
(bad)
movs
xchg
pushf
pop
sbb
popf
cs
aaa
lock
mov
lds
xchg
test
push
ja
inc
shl
cs
adc
aad
fcom
fdiv
fidivr
push
mov
inc
or
retf
mov
mul
loope
adc
movs
jnp
shr
sbb
adc
jl
nop
push
test
pop
mov
mov
xor
and
adc
inc
xchg
dec
add
inc
mov
push
cmp
cmp
aam
das
fdivr
rcl
in
add
icebp
call
inc
sahf
dec
iret
imul
xor
lds
stos
cmp
in
in
push
jg
into
js
call
and
sbb
cdq
popf
mov
inc
call
aaa
or
mov
sti
jecxz
xchg
xor
push
push
inc
jnp
rol
ror
and
movs
xor
out
clc
inc
mov
mov
adc
sar
inc
add
mov
out
std
(bad)
clc
sbb
test
int
daa
iret
cs
out
es
or
je
or
fs
sbb
jnp
clc
xor
popf
mov
push
jle
xchg
jl
data16
es
dec
aam
adc
lds
jp
mov
jmp
retf
push
xchg
arpl
pop
jne
sub
pop
add
rol
pop
jg
mov
dec
push
imul
mov
scas
movs
lock
repnz
iret
inc
loopne
pop
push
inc
push
enter
cmp
and
fidivr
in
stc
ins
sahf
sub
mov
pusha
xchg
xor
xchg
mov
sub
cmp
dec
test
std
imul
push
add
xor
xlat
data16
cs
call
or
jne
jl
or
mov
push
mov
sub
(bad)
test
(bad)
iret
scas
sbb
inc
cmc
add
sbb
mov
out
inc
and
mov
and
mov
push
jmp
xchg
fstp
push
jmp
push
mov
(bad)
and
int
jge
jge
cmp
jg
jge
pushw
jg
mov
cmp
cmp
div
or
imul
or
push
adc
in
shr
mov
(bad)
call
cmp
mov
(bad)
cmc
je
std
daa
mov
out
and
jnp
dec
jle
aaa
mov
int
pop
cmp
sahf
adc
hlt
or
fist
add
aaa
mov
retf
dec
ins
stc
(bad)
xlat
test
mov
ficom
sbb
outs
outs
into
inc
xor
enter
pop
(bad)
lahf
shr
(bad)
add
mov
stos
adc
add
push
movs
inc
jne
inc
clc
sbb
leave
inc
cmp
lea
test
xchg
mov
xchg
dec
jae
sub
fwait
outs
inc
inc
nop
pop
aad
push
jmp
lock
mov
imul
jns
mov
xchg
ror
div
retf
mov
leave
fimul
cmp
xchg
hlt
xor
pop
xchg
cmp
or
jmp
cmps
sar
inc
call
sbb
inc
jns
pop
sbb
adc
hlt
fisub
mov
cmp
cdq
add
mov
cmp
aaa
xor
or
rcr
jmp
and
dec
push
dec
je
mov
or
or
aaa
lods
add
pop
adc
sar
xchg
movs
mov
ins
dec
xor
fnstenv
mov
popa
ret
inc
lahf
xchg
test
sbb
and
int
test
or
cmp
mov
daa
test
mov
not
je
jb
dec
pop
sub
cmp
xchg
mov
jns
rol
hlt
pusha
pop
sub
test
push
inc
mov
xchg
jbe
add
mov
in
gs
push
jge
add
shl
stc
push
stc
xlat
push
cmps
stos
push
imul
jge
addr16
ds
push
push
das
and
sub
cmps
loop
outs
fimul
repz
cmp
in
push
xor
sub
or
inc
inc
hlt
xchg
dec
lods
mov
int3
push
les
xor
imul
pushf
xor
fmul
movs
cmp
cwde
fiadd
add
inc
jnp
les
loopne
xchg
adc
retf
fist
or
outs
ins
dec
mov
fsubr
les
sbb
dec
push
test
sbb
push
jmp
inc
sub
fmulp
in
inc
and
pop
add
sahf
dec
repnz
or
outs
mov
mov
push
inc
jns
out
popf
pusha
scas
dec
stos
mov
xor
fstp
pop
add
int
(bad)
cmp
add
into
scas
inc
cli
rcl
loope
fstp
dec
add
inc
sahf
inc
pop
jmp
inc
cld
fs
bound
push
adc
or
popf
in
test
adc
adc
adc
repnz
arpl
and
dec
cli
pop
sahf
add
std
nop
lea
frstor
in
dec
loop
and
(bad)
sbb
pop
xor
(bad)
fdiv
xchg
jp
jmp
retf
xor
jge
ja
rol
and
mov
fstp
adc
in
xor
mov
inc
add
ja
loop
jg
jle
ja
stos
jb
mov
adc
loopne
mov
jmp
inc
outs
clc
jno
(bad)
pop
xchg
daa
xchg
xlat
pushf
jne
and
mov
mov
xchg
shr
and
ret
mov
inc
xor
add
pop
add
inc
push
jecxz
pop
rol
xor
inc
call
add
cli
jne
pushf
out
dec
mov
add
arpl
xor
sbb
push
int
int
icebp
je
iret
dec
imul
or
mov
jb
bound
dec
stos
cs
or
aas
cmps
sub
nop
es
push
xchg
fs
stc
adc
mov
lods
das
inc
xchg
cmc
cmps
adc
shl
inc
sbb
sbb
mov
je
lods
loopne
fbld
dec
(bad)
in
mov
pop
repz
sbb
jno
and
in
and
and
sti
je
jl
xor
fidivr
mov
mov
ret
mov
sar
dec
(bad)
mov
adc
clc
jecxz
jae
pop
jecxz
es
in
sub
sub
or
fst
or
xor
hlt
and
sbb
popa
sbb
xchg
out
cmps
loop
adc
rcr
int
xor
imul
out
bound
mov
bound
adc
retf
xchg
neg
(bad)
dec
pop
mov
pop
pop
idiv
test
sub
push
icebp
cmp
pop
add
and
mov
push
pop
aaa
add
es
gs
cmc
cdq
arpl
mov
mov
and
jae
data16
dec
(bad)
cs
jae
movs
mov
pusha
push
stos
sbb
adc
ret
cdq
pop
movs
and
xchg
pop
xor
ds
push
sub
adc
dec
test
xchg
out
mov
mov
xchg
mov
je
retf
add
jbe
sbb
dec
pop
or
pop
in
fs
mov
outs
popf
cmp
xor
lahf
movs
imul
jnp
add
imul
test
jns
cmp
out
out
lods
repz
arpl
cld
mov
sub
inc
jecxz
add
adc
cmc
fiadd
sub
in
icebp
sub
cmp
push
push
cld
sub
leave
outs
dec
pop
push
jns
xor
retf
xchg
push
sbb
sar
xchg
mov
in
pop
sbb
jmp
mov
sbb
mov
loopne
retf
test
mov
xor
les
jbe
lea
shr
imul
mov
mov
xchg
aad
out
popf
(bad)
lahf
in
fbstp
push
mov
stos
xchg
pop
and
or
mov
std
cs
pusha
int3
repnz
in
sbb
push
mov
cmp
dec
mov
test
push
das
mov
pop
xlat
jne
outs
std
mov
inc
out
sub
stc
repnz
repnz
inc
push
xchg
xor
jmp
add
shl
xor
in
pop
in
cmps
std
cmps
test
cmp
mov
or
stos
cli
pop
xchg
adc
cld
rcl
ror
repnz
loopne
icebp
call
fisubr
retf
lds
out
push
and
lds
repz
push
data16
inc
fucom
adc
mov
aas
mov
and
pushf
jge
(bad)
sbb
in
cmp
bsr
jns
das
push
mov
xchg
std
xor
mov
jno
adc
test
and
or
mov
xchg
scas
mov
inc
cmp
call
mov
inc
or
jbe
pop
push
(bad)
jle
mov
cmp
outs
into
pop
add
movs
xlat
jmp
mov
sbb
pop
inc
test
shl
xchg
out
adc
mov
pop
mov
mov
cli
xor
pushf
lock
fsub
loope
inc
adc
mov
imul
repz
push
mov
inc
fistp
fistp
xor
mov
mov
sub
or
xchg
jmp
je
fs
add
aaa
mov
push
retf
push
adc
outs
dec
ins
imul
f2xm1
test
mov
jl
fsub
shl
push
loop
push
loop
cwde
adc
push
ja
ins
fwait
ja
fistp
push
jnp
and
sbb
into
adc
jne
das
mov
repnz
(bad)
pusha
xor
sbb
adc
fs
adc
mov
gs
rcl
loop
push
sar
xchg
data16
pop
call
rcr
mov
ins
xor
sbb
test
repnz
fiadd
inc
mov
aas
add
pusha
jnp
ins
ins
ss
cmp
mov
mov
jl
lahf
out
enter
mov
stc
lods
sbb
cmp
sbb
into
icebp
lods
cmova
inc
pusha
fiadd
lds
adc
test
adc
inc
sub
or
pop
cwde
push
dec
ror
cmps
cdq
out
xchg
fdiv
test
inc
stc
jns
sbb
ficom
mov
mov
clc
test
or
dec
(bad)
loopne
fcomi
cmp
(bad)
cmps
call
mov
cmps
stos
inc
mov
or
aas
mov
sbb
adc
das
cmps
addr16
jbe
shl
imul
inc
pop
mov
adc
sub
adc
leave
sti
fnstenv
or
test
push
push
icebp
out
je
xchg
pmaxub
imul
pop
loop
inc
in
jae
mov
pushf
xor
push
and
aaa
dec
cdq
sbb
popa
test
rcr
xchg
pop
xchg
pop
push
mov
jp
xchg
sahf
es
lods
mov
xor
add
inc
xor
pop
loopne
mov
cmp
jl
call
cmp
sub
fcom
and
cmp
fstp
mov
out
and
cmp
lea
(bad)
adc
daa
int
lahf
je
clc
xor
pusha
daa
push
mov
pop
ds
pop
mov
cli
mov
dec
xchg
mov
and
push
fbstp
lahf
(bad)
loopne
loopne
in
or
sysenter
mov
fcomp
adc
push
cmp
push
imul
ret
jno
push
mov
dec
jnp
sub
scas
imul
sbb
outs
fisub
ror
push
ja
sub
into
arpl
dec
bound
inc
test
add
pop
jg
add
xor
jge
inc
jmp
call
fild
xchg
push
or
xchg
repz
fstp
ret
or
stos
lds
or
popf
xor
or
pop
cmp
test
or
mov
loope
inc
cmc
sub
mov
jae
pop
jae
sbb
cwde
cmp
fistp
xchg
add
cmp
sti
leave
xor
aaa
hlt
aam
je
ja
retf
movs
cs
ret
pushf
xchg
cmp
inc
mov
inc
mov
mov
out
jmp
call
call
call
scas
das
rol
ja
lods
xlat
pop
imul
add
and
cmc
fist
loopne
jb
nop
mov
or
je
or
mov
dec
cmp
jmp
test
add
cmp
cli
inc
retf
popa
(bad)
xor
pop
inc
ins
inc
(bad)
sbb
dec
not
pop
ret
xor
arpl
xor
mov
inc
mov
xor
enter
or
inc
loop
jge
add
aam
and
push
fidivr
retf
pop
sub
inc
(bad)
xor
mov
dec
add
pop
std
and
(bad)
idiv
mov
pop
mov
or
int3
adc
out
cmp
xchg
test
shr
leave
ror
push
xor
pop
int
leave
in
out
popf
pop
jb
pushf
repnz
xor
mov
ds
scas
mov
into
sbb
push
inc
mov
cmc
sub
and
int3
adc
lea
cmp
aaa
arpl
cmp
inc
push
xor
pop
push
rcr
jbe
add
adc
icebp
mov
jbe
out
and
push
jbe
dec
js
out
cmp
xor
sub
gs
fidiv
sub
ins
cmc
cmps
pusha
call
adc
fwait
dec
imul
div
enter
mov
and
into
push
dec
and
in
mov
je
inc
in
push
scas
pop
aad
nop
lods
repz
cmp
call
retf
mov
aaa
mov
out
(bad)
into
mov
mov
ret
xor
cmp
idiv
push
loope
repz
mov
push
test
xchg
jmp
cwde
ja
jnp
push
div
std
sbb
xor
push
jge
or
dec
in
fsub
xchg
add
mov
cmp
mov
(bad)
mov
mov
mov
int
les
test
cs
dec
sbb
out
sub
lock
popa
jle
jmp
add
sub
fstp
and
or
jnp
add
leave
clc
mov
mov
pop
xchg
je
add
mov
add
jmp
xchg
ins
and
popf
repz
les
cmp
lods
push
mov
jl
xchg
pop
scas
push
scas
imul
xor
mov
add
call
(bad)
mov
call
push
sbb
sar
ins
fmul
pushf
fdivr
loope
in
xor
cli
cmp
das
cmps
imul
and
int
iret
or
std
call
int
ja
into
sub
sbb
lea
retf
mov
shl
mov
into
jp
mov
je
xchg
jo
mov
lods
mov
lea
push
pop
mov
mov
cmp
imul
adc
push
ins
aas
xor
mov
add
cs
fdiv
das
sbb
xor
aam
jle
jmp
pop
aad
scas
pop
cmp
mov
repnz
fs
mov
mov
cs
jp
les
js
imul
mov
push
stos
jmp
adc
dec
and
iret
int
cwde
in
xor
test
mov
pusha
cs
dec
inc
lock
xchg
(bad)
aas
stc
add
outs
push
mov
add
jb
pop
and
icebp
pxor
push
add
jbe
push
data16
pop
in
ins
aaa
add
xchg
shr
dec
outs
shl
inc
lds
mov
dec
mov
mov
dec
in
rcr
icebp
mov
idiv
inc
cli
ret
addr16
xchg
cmps
ror
imul
sub
std
jg
movs
test
cmp
push
scas
mov
call
pop
les
out
jo
adc
sub
mov
add
jae
in
test
mov
adc
mov
mov
imul
jg
jns
xor
ss
stc
sahf
push
mov
arpl
ds
adc
dec
and
adc
cld
test
outs
push
repnz
popa
dec
ja
xlat
loop
sub
sti
adc
pop
sub
rol
jno
leave
call
jle
fnsave
test
out
retf
popa
jge
xchg
mov
imul
and
ret
repz
dec
dec
call
out
xlat
fistp
xchg
inc
ret
sub
not
sbb
mul
pop
mov
(bad)
out
inc
bts
mov
data16
imul
inc
popf
outs
jecxz
xchg
imul
xchg
and
inc
loope
les
xor
add
sub
xchg
test
stc
xchg
push
dec
xchg
aam
outs
jmp
cwde
ja
jp
test
dec
shr
xchg
sub
std
(bad)
aaa
test
mov
(bad)
cmp
and
and
ret
neg
leave
lods
js
dec
mov
pop
ror
cs
popf
mov
bound
dec
xor
jge
jmp
in
xor
jno
pop
dec
inc
les
scas
pusha
xor
outs
out
pop
jp
add
(bad)
ffreep
fwait
movs
sbb
retf
daa
cmc
stos
push
xchg
mov
ror
jno
jo
mov
xchg
mov
dec
test
xor
sbb
pusha
ins
test
jg
(bad)
cwde
test
(bad)
cli
fst
(bad)
mov
clc
add
(bad)
push
jge
dec
leave
(bad)
aad
dec
fcomp
adc
sbb
inc
neg
sbb
mov
push
or
add
and
out
push
loop
imul
adc
call
sub
int3
mov
sub
sbb
sbb
dec
push
xchg
jae
lods
cld
cmp
sbb
mov
push
daa
repnz
ins
dec
(bad)
or
cmp
lods
outs
popa
stos
or
xor
or
jmp
and
cli
int
(bad)
iret
mov
push
leave
or
mov
sub
cmp
cmc
ror
sahf
or
and
mov
rol
push
sub
shr
outs
pop
xchg
xlat
dec
add
cdq
jne
mov
mov
sub
(bad)
xlat
(bad)
pop
mov
adc
test
gs
pop
in
shl
adc
mov
scas
out
sbb
aad
leave
es
sub
cmps
fidivr
mov
inc
popa
mov
inc
cmp
push
outs
aaa
mov
sub
jae
mov
mov
js
push
xor
cs
sar
out
test
rol
shl
xchg
mov
pop
push
cs
in
clc
jmp
dec
ss
(bad)
jae
cmc
xchg
sbb
mov
lods
or
shl
outs
in
pop
xor
(bad)
scas
mov
mov
xchg
sub
aaa
addr16
iret
shl
jne
in
les
jmp
call
ss
repnz
and
test
cwde
xor
fsubr
pop
pop
and
push
cmp
enter
aam
mov
and
dec
out
sbb
gs
div
cld
or
jge
lods
and
or
or
jae
ss
add
stos
inc
loope
js
add
mov
push
mov
daa
xchg
cmp
pop
and
hlt
cli
jmp
push
outs
stos
push
test
adc
push
or
add
jl
loop
test
push
in
dec
data16
adc
cmp
jae
jns
cmps
mov
cmp
nop
rcr
push
mov
fs
not
jp
movs
adc
(bad)
or
neg
ins
dec
sbb
jno
into
pop
sbb
lea
push
out
push
cwde
cmp
xchg
cli
outs
daa
icebp
xchg
movs
jge
jne
mov
mov
xchg
movs
scas
cmps
loope
mov
pusha
inc
scas
les
stos
repnz
jecxz
arpl
push
push
xlat
cwde
cwde
(bad)
push
adc
mov
rol
xchg
pop
mov
inc
adc
mov
sar
int
imul
bnd
gs
dec
mov
mov
pop
xchg
fld
sub
cmp
pusha
adc
add
hlt
push
mov
push
adc
adc
jmp
rcl
cmp
sub
data16
lods
and
popf
push
scas
ja
sar
pop
jg
jmp
in
lds
gs
jne
in
in
(bad)
aam
sub
scas
push
add
sbb
and
jp
push
hlt
xchg
shl
pop
mov
sbb
into
xor
rol
inc
in
inc
out
fsubr
and
push
pop
retf
mov
pushf
jbe
inc
mov
(bad)
sbb
dec
jae
inc
jae
xchg
xchg
add
sbb
xor
sub
fld
mov
xchg
cmovs
cmc
pop
add
or
pop
sbb
jnp
test
mov
cli
(bad)
push
in
clc
cli
push
cmp
push
xlat
lods
(bad)
jns
pusha
jae
aaa
mov
ret
jg
int
or
pop
or
xchg
xlat
test
jmp
fidivr
mov
mov
inc
cmp
mov
add
mov
or
adc
lahf
fldcw
push
out
push
popw
aaa
adc
outs
lahf
in
jb
inc
xor
and
or
sbb
add
gs
and
movs
add
pushf
gs
jg
cmp
cld
pop
sbb
sub
dec
sbb
outs
cmp
pop
inc
push
add
(bad)
hlt
outs
jo
cmps
mov
xchg
jg
ret
fbld
movs
test
or
lock
test
scas
ds
cld
aas
fadd
xlat
cs
mov
push
(bad)
cmp
sub
push
paddsw
adc
pop
and
jne
sbb
bnd
inc
ins
jle
xor
aam
into
and
xor
cli
or
cli
cdq
call
jmp
jg
aam
loope
cmps
rol
mov
ja
mov
xor
dec
add
dec
mov
sbb
imul
pop
jo
test
sub
jp
mov
push
punpckhwd
mov
je
xor
adc
lock
adc
fs
rol
add
jp
xchg
and
sbb
bound
sbb
adc
aaa
lahf
cs
ds
fcomp
dec
vmread
adc
cmp
loop
xlat
cli
ds
jo
test
lock
mov
push
cmp
sub
cmp
test
sbb
xchg
sub
aam
aaa
add
mov
mov
add
mov
test
int
fisub
aam
mov
push
xor
fisub
cmp
push
and
in
dec
inc
push
test
icebp
enter
clc
imul
cmp
(bad)
jp
pop
cmp
mov
xchg
es
adc
out
data16
and
push
repnz
mov
mov
mov
gs
cmp
lahf
retf
adc
hlt
mov
inc
dec
pop
add
fst
movs
pushf
ja
sub
xchg
test
mov
jbe
and
and
add
push
out
fisttp
mov
push
ds
int
pop
dec
xor
mov
fistp
jecxz
ror
stc
add
and
fs
cli
enter
add
push
dec
dec
add
jecxz
scas
push
and
fsub
ret
gs
jae
jns
lea
nop
adc
cmp
add
adc
cli
jo
add
sti
jno
fcmovb
and
jns
fs
in
mov
stc
cwde
cmp
jge
inc
stc
outs
adc
jmp
mov
jg
mov
or
mov
out
sbb
inc
es
adc
mov
inc
sbb
mulps
pop
xchg
sbb
sbb
clc
or
cmps
das
not
hlt
cmp
(bad)
pop
jg
das
push
not
dec
cmp
sub
jl
enter
or
leave
cwde
sbb
dec
jno
pop
(bad)
pop
jnp
mov
lods
call
pop
and
mov
enter
out
scas
jo
lods
sar
and
add
aas
shl
add
cdq
outs
je
jp
(bad)
pop
imul
aad
das
or
cdq
mov
pop
and
pop
xchg
push
les
mov
jnp
adc
sbb
repz
aad
mov
cmp
std
js
fcomp
and
ret
xor
xchg
and
pop
dec
jbe
mov
sbb
inc
retw
and
clc
cld
mov
(bad)
dec
pushf
dec
aaa
outs
push
dec
and
mov
push
adc
movs
retf
addr16
dec
xor
std
sbb
dec
int3
sahf
inc
aam
add
jae
ins
dec
jmp
xor
dec
mov
mov
in
mov
mov
pushf
lahf
xchg
int
repz
rcl
mov
push
mov
mov
xchg
cmps
mov
and
cmp
ins
push
push
jecxz
ret
es
or
fidiv
jb
ret
push
xor
retf
cmps
stos
fsubr
cmps
stos
out
mov
neg
ja
div
jge
jmp
imul
or
pop
mul
cmp
dec
movs
dec
not
jbe
mov
mov
fstp
dec
xlat
movs
sub
xchg
in
mov
loopne
or
xor
add
cmps
add
test
add
lea
stos
xchg
inc
inc
ror
enter
ret
dec
hlt
(bad)
jmp
inc
sub
cmp
pop
mov
xchg
jge
mov
pop
xchg
add
call
push
outs
fsubr
sbb
lds
fwait
or
sbb
dec
push
xor
or
adc
jle
dec
int3
(bad)
mov
mov
sbb
xor
push
fwait
jb
js
fdivr
cdq
pop
test
jns
add
adc
test
imul
or
aas
xor
dec
mov
or
aaa
popf
ja
bound
shl
cdq
sub
adc
pop
dec
fstp
or
stc
enter
and
fprem1
inc
imul
add
inc
jbe
xchg
pushf
xor
add
(bad)
es
push
sub
cld
ins
loope
dec
imul
aam
mov
in
movs
dec
jne
retf
rcl
arpl
rol
and
rcl
cmps
ucomiss
mul
mov
retf
inc
sahf
mov
adc
or
imul
movs
xor
inc
jecxz
mov
mov
jmp
pop
jge
and
xor
push
out
cmps
pop
dec
or
stc
fidiv
lods
xchg
movs
push
cmp
jae
loopne
ins
das
mov
sbb
adc
inc
movs
push
ins
pop
out
add
aad
push
cmp
stc
and
ins
cmp
or
push
mov
repnz
inc
cmps
cdq
ds
popa
lock
adc
mov
add
call
dec
cmp
pop
addr16
xchg
cmp
mov
scas
aad
pop
mov
adc
gs
out
xchg
lods
ficomp
jne
mov
(bad)
fadd
mov
pop
add
or
and
mov
cld
adc
xor
stos
sbb
pushf
arpl
jno
or
call
mov
(bad)
das
push
lods
jmp
sub
cld
add
cmp
xchg
push
add
jecxz
nop
retf
(bad)
imul
push
pop
hlt
mul
or
sub
cwde
add
pop
stos
fnsave
push
sbb
arpl
test
push
inc
xor
jb
fwait
xor
jl
mov
add
jge
push
sub
in
sbb
bound
adc
xchg
inc
and
and
sub
in
mov
ret
add
fwait
jb
scas
jbe
fwait
sahf
mov
loope
push
mov
push
jo
cmps
mov
iret
call
inc
push
sub
sbb
mov
dec
hlt
jmp
sub
ja
or
sahf
and
pop
xor
mov
mov
dec
(bad)
loop
sbb
movs
add
mov
movs
inc
push
(bad)
pop
cmp
and
outs
jae
mov
(bad)
sbb
pop
(bad)
cli
pop
pop
push
sub
mov
fsub
jmp
xlat
repz
je
call
out
cmp
adc
test
sub
and
jbe
outs
fnstsw
idiv
adc
cmc
or
adc
inc
fst
jl
xchg
or
mov
jb
popa
inc
or
(bad)
clc
jecxz
xchg
sbb
sub
xchg
mov
cli
repnz
dec
out
ds
js
mov
cmp
out
clc
(bad)
xchg
inc
xor
push
adc
arpl
sub
xchg
and
cmps
and
mov
or
clc
pop
and
arpl
bound
sbb
int3
xor
bnd
pop
jns
test
and
push
shl
pusha
mov
mov
fdivrp
mov
pop
add
in
retf
iret
fdivr
xchg
push
xchg
jp
je
aad
lahf
cld
call
cld
test
pushf
push
ret
je
push
bound
cmp
xchg
mov
sub
jl
cwde
xor
lods
fs
jg
pop
push
push
adc
adc
cs
xchg
jne
mov
jae
ret
clc
jmp
xor
mov
loope
xchg
cmp
inc
fsub
cli
inc
xchg
into
xchg
call
fwait
neg
out
pusha
cmp
cmps
lds
out
iret
mov
mov
mov
fiadd
xchg
mov
cwde
mov
fld
popf
stos
loop
or
das
add
movs
outs
in
je
sbb
les
push
xchg
mov
and
cmps
adc
scas
je
adc
loopne
hlt
clc
or
dec
mov
shl
xor
js
inc
fwait
push
cmp
xor
fisub
mov
mov
pop
imul
test
add
pop
icebp
adc
imul
xchg
adc
lea
pop
test
jne
and
mov
arpl
fidivr
and
sbb
sbb
xchg
jge
(bad)
fisub
inc
into
or
cmp
out
in
repz
sbb
mov
retf
fmul
xor
add
dec
fisttp
iret
xchg
push
add
push
jno
or
outs
aaa
jo
aaa
cmps
sbb
mov
shl
sub
inc
lahf
xchg
or
cwde
ret
xor
pop
and
xchg
add
add
adc
push
or
add
jecxz
mov
dec
jbe
jg
repz
mov
xchg
dec
inc
mov
in
jp
test
adc
or
pop
imul
mov
mov
dec
mov
outs
(bad)
jp
xchg
jmp
or
inc
shl
test
inc
push
retf
push
and
loop
xchg
xchg
xchg
je
div
jne
push
xchg
mov
popa
mov
movs
and
scas
add
push
call
daa
cmc
sub
add
mov
stos
fisubr
xchg
adc
mov
sub
push
mov
stc
jmp
jmp
xor
sub
retf
push
pop
daa
fidivr
out
push
push
das
int
call
(bad)
jmp
in
imul
inc
adc
jae
ror
mov
or
aas
push
outs
repz
inc
cmp
int
nop
enter
outs
push
out
jmp
ret
jle
iret
pop
adc
in
sahf
arpl
inc
test
dec
iret
dec
imul
test
xchg
ins
add
inc
fld
mov
add
inc
inc
je
js
rcr
mul
frstor
scas
mov
or
adc
aam
int3
mov
pop
xchg
sbb
mov
in
popf
sbb
mov
mov
in
sub
mov
(bad)
scas
cli
push
loope
outs
mov
xor
push
jbe
mov
mov
jnp
sub
call
popf
rcr
lock
pop
mov
inc
mov
dec
pushf
xchg
fiadd
pop
adc
aam
cmps
pop
les
dec
js
out
mov
(bad)
lods
das
movs
inc
add
mov
cdq
push
(bad)
cmp
inc
mov
pop
xchg
cmp
push
test
fild
jg
add
in
fs
xchg
jae
loope
xchg
jo
jmp
fst
xor
xor
icebp
push
xchg
push
dec
rcr
addr16
(bad)
shr
mov
into
mov
xor
mov
mov
pop
ficomp
adc
test
cmp
scas
aaa
pop
lea
mov
sti
xchg
or
icebp
arpl
xor
jb
arpl
shl
mov
lock
dec
dec
or
stos
inc
lea
ja
xor
add
push
in
lods
xor
dec
ret
adc
mov
movs
in
aad
shl
jmp
jae
mov
mov
nop
ja
mov
aad
mov
cmp
in
xor
inc
jmp
adc
test
cmp
(bad)
xchg
add
xor
cdq
and
jne
cmc
stos
popf
fstp
dec
std
mov
pop
xchg
jle
inc
and
push
ret
push
ss
hlt
xchg
sub
jnp
lahf
imul
mov
fidiv
test
push
mov
and
repz
mov
(bad)
push
add
(bad)
imul
inc
and
or
sub
movs
pop
mov
out
ror
jno
mov
sbb
jne
call
stc
pop
div
repz
adc
xor
js
cmc
xchg
mov
inc
in
adc
push
fisubr
(bad)
mov
pushf
xchg
dec
lea
mov
and
mov
push
and
repnz
xor
jge
add
and
test
jns
jnp
rcr
mov
scas
xor
mov
jbe
or
fs
inc
mov
daa
jnp
mov
std
mov
mov
js
div
lods
push
ds
add
lahf
les
fld
sti
popf
ret
std
inc
aam
cwde
arpl
fadd
and
inc
(bad)
xor
push
push
and
gs
xor
ds
ret
test
lock
lods
cmp
xchg
lahf
inc
sbb
fbstp
adc
adc
adc
(bad)
lods
ss
jge
or
cmp
cwde
fstp
or
lods
push
iret
in
mov
ror
(bad)
sar
shr
dec
push
icebp
addr16
xor
inc
pop
call
sbb
ror
test
stos
cld
jne
mov
ror
scas
cmp
int
or
sub
mov
jg
nop
sahf
cdq
addr16
cmc
mov
aad
js
mov
mov
mov
in
pop
push
sub
mov
repnz
call
ret
xchg
daa
mov
pop
dec
gs
xor
mov
push
pop
dec
pushf
test
push
je
rcr
aam
shr
mov
icebp
pop
popf
call
xchg
pop
repnz
push
lds
cs
jae
lea
into
mov
fisttp
cmc
std
and
dec
repnz
inc
or
sbb
push
repz
das
ins
cwde
or
push
test
jo
mov
out
js
mov
mov
xchg
mov
sti
dec
arpl
pusha
push
lock
(bad)
adc
js
sub
shr
push
sub
out
sbb
sub
jnp
cmp
dec
mov
adc
hlt
ins
cmc
sub
sti
push
test
cmps
or
ds
add
inc
outs
and
jg
aas
rol
xchg
pusha
jmp
clc
fist
inc
jge
add
push
iret
aad
arpl
cwde
xor
ror
and
ret
jge
retf
and
xchg
ss
les
adc
stos
out
sub
cdq
cmp
in
and
jnp
bound
loop
test
repnz
mov
hlt
xchg
jp
push
lods
scas
inc
sti
repnz
mov
in
mov
sub
out
js
xor
pop
(bad)
mov
xchg
xchg
mov
sbb
or
dec
xor
push
and
fbld
gs
call
xor
loopne
cmps
pop
cmp
aam
cmp
call
cmps
ins
lahf
ins
dec
mov
leave
mov
retf
lock
sub
int
(bad)
in
ret
cmp
out
rcr
xor
jnp
sub
xchg
add
or
and
adc
and
dec
add
std
xor
and
addr16
or
adc
int3
popa
mov
sub
push
mov
lods
mov
out
fidiv
call
or
fdivp
add
mov
lock
sub
push
loopne
push
jg
dec
ror
jnp
xchg
add
push
jb
jle
dec
pop
or
jne
mov
xchg
mov
fimul
pop
out
pop
mov
ret
pop
inc
ror
arpl
adc
mov
push
adc
ins
fwait
mov
rcr
not
fild
mov
push
xor
in
mov
mov
ret
popa
mov
mov
xchg
mov
jns
rol
add
sbb
cmp
inc
std
fmul
jne
jbe
sub
add
mov
push
xchg
dec
or
gs
fist
jns
add
and
xor
std
cmp
cmp
stos
adc
lock
sbb
sub
cmp
aaa
into
and
scas
shl
int3
and
jno
mov
(bad)
popa
test
or
data16
xchg
sub
mov
test
xor
aam
aam
jg
or
adc
test
pop
dec
push
mov
lods
retf
sahf
in
sahf
loope
jbe
gs
mov
lds
cmps
movs
ror
lahf
stos
or
push
mov
sub
pop
adc
clc
sub
int
sub
adc
xchg
clc
ja
lock
fwait
xchg
cmp
inc
mov
dec
xchg
or
ret
adc
movs
pop
lea
dec
xor
ins
add
mov
inc
cli
mov
add
xor
in
ins
jbe
sub
movs
jg
shr
arpl
cs
jmp
fisubr
imul
ficom
mov
jo
loop
fnstcw
mov
xchg
stc
push
(bad)
jmp
iret
mov
sbb
xchg
(bad)
nop
fs
mov
mov
mov
and
push
mov
jle
frstor
push
fwait
or
fbld
cmps
ss
das
retf
cmp
pop
ret
jnp
sahf
cmp
nop
add
fcmovu
mov
xor
lock
cli
out
ins
test
out
es
mov
mov
js
push
xchg
sti
cmp
out
cwde
dec
data16
mov
lds
stos
movs
scas
pop
jb
(bad)
mov
pop
pop
test
movs
(bad)
mov
mov
mov
cmp
xchg
mov
pop
xchg
mov
pushf
mov
push
mov
cdq
(bad)
idiv
adc
sub
(bad)
sahf
or
sbb
sbb
aad
mov
aam
out
ins
mov
ins
shr
xchg
pop
inc
aaa
enter
enter
clc
sahf
cmp
lods
mov
(bad)
adc
ficomp
jne
jbe
sti
das
xor
ret
sub
cmp
pop
movs
jle
rol
leave
shr
fs
jecxz
push
out
mov
iret
sbb
in
and
dec
loop
inc
sahf
or
les
lock
dec
sahf
mov
inc
adc
test
call
mov
or
ficom
pop
mov
sbb
test
ret
push
fwait
xor
loopne
int
mov
std
dec
xor
repnz
xchg
jmp
sbb
push
sbb
xchg
test
xchg
xor
sbb
sub
test
cmp
or
mov
inc
sahf
sub
and
or
loopne
stos
cmps
les
and
nop
adc
jle
push
mov
mov
and
cmc
jbe
imul
cs
push
and
fistp
mov
int
inc
inc
mov
data16
mov
daa
jecxz
inc
fwait
pop
fiadd
lea
stc
sbb
mov
mov
and
xchg
jl
ins
je
call
outs
pop
cmp
(bad)
sub
adc
cmp
int3
mov
inc
(bad)
sub
and
ret
xchg
push
cli
sbb
inc
cmp
retf
out
xor
inc
cs
xchg
cli
cmp
mov
std
lods
mov
jp
and
mov
hlt
shl
cli
mov
xor
xchg
adc
ud1
jp
cld
sbb
sbb
cmp
lock
add
aaa
cmp
dec
in
mov
cmp
jns
js
outs
test
js
jnp
mov
and
repz
cdq
xchg
push
retf
jbe
lds
mov
xor
push
fadd
and
and
je
(bad)
pop
cmp
xlat
outs
pop
das
mov
mov
jmp
mov
out
idiv
int
shl
dec
push
jae
jle
xchg
(bad)
pop
sbb
stos
mov
in
sub
adc
adc
and
or
bound
push
dec
fldenv
clc
lods
jl
sbb
jg
or
fst
mov
int
add
mov
push
mov
add
lods
inc
or
push
out
and
and
pop
mov
add
dec
xor
inc
sub
mov
mov
jecxz
rol
test
xchg
cmp
mov
add
sub
mov
dec
add
pushf
dec
xchg
xor
das
cmp
fist
ins
xchg
jmp
loope
adc
jmp
jp
xor
inc
pop
in
xor
lods
call
jae
mov
xor
into
(bad)
add
pop
outs
xchg
push
into
adc
ins
or
xor
mov
rcr
dec
jne
mov
cmc
imul
mov
test
jae
push
push
pop
jmp
mov
mov
pop
xor
(bad)
jecxz
pop
(bad)
out
bnd
dec
call
lds
or
fidivr
mov
test
nop
push
in
adc
loopne
shl
les
inc
xor
arpl
or
push
stos
ss
cmp
clc
(bad)
jns
xor
push
loop
pop
mov
dec
stos
hlt
bound
lock
fbstp
dec
nop
jecxz
shl
mov
hlt
inc
mov
inc
pop
dec
bound
popa
mov
js
out
push
push
add
movs
or
adc
push
sbb
mov
push
loop
shr
ret
daa
mov
mov
jb
mul
and
ret
hlt
std
out
pusha
cmp
fistp
fs
xchg
call
stos
mov
mov
daa
add
popf
sar
jl
aad
cwde
adc
inc
enter
bound
mov
call
xchg
aam
add
ret
adc
jo
pop
sar
iret
outs
or
push
ret
jnp
push
fcomi
sub
repnz
inc
mov
repnz
lea
cli
mov
pusha
fldcw
xchg
retf
add
xor
mov
pop
jns
and
mov
mov
or
jl
call
sahf
nop
inc
enter
cli
std
lea
icebp
cmp
ins
out
jo
mov
or
xor
mov
inc
jne
push
ret
and
je
mov
fidivr
push
sbb
sbb
jg
dec
and
push
pop
or
in
shl
mov
jbe
inc
cmc
(bad)
std
les
sbb
test
sub
xor
mov
push
and
sbb
ret
ss
repz
jl
mov
dec
dec
(bad)
or
mov
vandps
xor
jae
and
loop
xchg
dec
in
in
neg
jo
or
push
pushf
div
or
push
xchg
push
fsub
inc
sub
dec
das
cwde
ret
adc
rcr
(bad)
stc
mov
mov
and
rol
add
(bad)
dec
sti
or
shl
lods
gs
pop
adc
cmp
(bad)
sbb
add
sub
in
movs
in
sbb
xor
test
aaa
cmp
je
lods
lods
mov
mov
push
pop
int
pshufw
fistp
shr
imul
mov
in
hlt
ja
push
jecxz
inc
sahf
outs
pop
push
enter
push
(bad)
out
mov
push
jge
lods
sub
hlt
jb
xor
sti
mov
(bad)
adc
call
mov
pop
mov
das
stos
sub
jnp
push
sti
pop
mov
fwait
(bad)
xlat
stos
pop
arpl
pop
(bad)
enter
inc
xchg
add
and
jns
div
and
and
sbb
mov
cmp
add
gs
sbb
in
mov
popa
inc
sar
aaa
das
xchg
mov
or
hlt
cli
add
cmc
mov
imul
push
js
(bad)
lock
loop
es
push
mov
cmps
stos
enter
jnp
jl
sahf
ret
pop
(bad)
lock
loop
sbb
sub
jl
pop
inc
dec
add
adc
js
in
bound
pop
out
or
push
pavgw
daa
or
mov
in
and
cmp
xor
and
fmul
clc
dec
xchg
adc
call
(bad)
call
xor
or
xor
enter
xor
(bad)
push
push
mov
add
movs
sub
int3
sub
inc
or
icebp
cmp
imul
dec
in
sub
not
leave
div
das
jno
sub
ror
pop
jge
setge
mov
outs
repz
aas
mov
lods
cwde
leave
scas
cdq
test
ret
cld
sbb
inc
push
sbb
cs
push
sbb
push
mov
aad
jno
iret
sbb
dec
add
push
or
or
rcr
mov
cwde
mov
ficom
add
(bad)
(bad)
hlt
fsubr
sahf
test
jns
imul
test
sbb
cli
push
add
sbb
mov
pop
jg
push
test
mov
sub
pop
imul
pop
jg
mov
pop
pop
dec
or
mov
sti
out
and
inc
mov
mov
outs
pop
xor
xor
(bad)
sub
pushf
out
jge
mov
push
xlat
(bad)
sub
push
icebp
push
cmp
ins
push
std
test
mov
call
pop
cmp
out
hlt
and
pop
mov
and
in
mov
dec
mov
jmp
jo
sahf
out
push
lock
sti
or
push
or
nop
fstp
jae
adc
sbb
popf
in
mov
mov
stos
mov
cmp
test
cli
out
add
sbb
push
ret
jae
or
xchg
stos
mov
push
or
mov
ds
out
pop
cwde
int
clc
and
iret
clc
retf
xor
add
lahf
hlt
add
dec
xor
sbb
data16
xor
(bad)
cmp
cmc
cs
sbb
mov
scas
das
xchg
mov
xchg
xor
ror
adc
les
scas
dec
popa
inc
vunpckhpd
or
jl
inc
jg
and
movs
mov
mov
popa
stos
inc
ss
mov
dec
mov
dec
push
xchg
cmp
cmp
cmp
sti
repnz
mov
inc
es
ds
gs
daa
dec
add
je
call
push
retf
sub
or
mov
push
mov
or
std
xor
fidivr
inc
outs
sub
(bad)
das
xchg
push
cs
mov
jge
inc
clc
adc
clc
call
mov
lods
sub
mov
and
mul
mov
jmp
rcr
(bad)
xchg
pop
add
dec
movs
sti
inc
jle
mov
dec
fisubr
sbb
repz
jne
popf
jp
pop
mov
out
pusha
mov
sub
adc
push
adc
adc
shr
sbb
and
inc
push
and
push
inc
mov
xor
sbb
mov
jmp
sbb
jge
movs
mov
push
test
xchg
call
or
dec
imul
call
mov
ja
and
sbb
sub
cmp
shl
mov
call
adc
retf
leave
retf
cmp
sub
ins
xchg
shl
(bad)
lahf
add
neg
lahf
fisttp
jl
dec
hlt
xchg
jle
mov
fcomip
lock
mov
stos
inc
pop
sbb
rcr
mov
ret
nop
ret
mov
mov
sub
je
mov
test
daa
pop
and
in
sti
adc
jge
fstp
ss
cdq
scas
xchg
rcr
shl
outs
imul
mov
inc
xchg
fstp
mov
cmp
dec
cs
nop
imul
add
jecxz
sbb
jp
fs
add
mov
fadd
mov
and
mov
mov
mov
add
daa
icebp
pop
adc
lahf
add
repnz
es
sbb
lahf
and
push
and
and
push
sbb
push
aad
stos
lock
xchg
cmp
daa
and
inc
fs
(bad)
ins
mov
(bad)
data16
jbe
and
mov
jmp
or
sahf
adc
div
or
out
adc
cmc
scas
mov
add
cmp
(bad)
jg
scas
xchg
ret
xchg
add
stc
mov
add
sub
inc
sar
xchg
in
es
adc
fstp
jno
clc
xchg
imul
push
mov
mov
cli
call
adc
stos
add
pop
mov
int3
sahf
stos
movs
inc
cld
in
or
fs
and
inc
rcl
movs
push
ret
xor
movs
movs
add
sti
scas
sub
(bad)
xor
jge
cmc
pop
push
in
stos
mov
daa
daa
adc
jnp
add
scas
stos
cli
call
test
jge
outs
sahf
aas
mov
adc
(bad)
test
js
mov
outs
repz
lds
popf
adc
rcl
stc
push
push
iret
cli
movs
push
cmps
test
add
ins
repz
iret
add
cmp
es
(bad)
jmp
xor
shl
imul
cmp
pusha
(bad)
mov
xchg
pop
mov
(bad)
cmc
out
mov
data16
mov
test
dec
lock
loope
(bad)
call
loope
out
dec
lds
or
clc
retf
icebp
or
mov
and
sti
adc
arpl
lea
mov
shl
sar
(bad)
mov
jmp
jmp
mov
je
xchg
mov
das
xor
test
jmp
xchg
mul
ds
and
and
mov
jp
in
mov
ins
mov
ds
pop
leave
inc
fldenv
sar
shl
push
out
mov
inc
push
push
push
test
xor
loop
loope
stos
push
cmc
cmp
mov
pop
inc
test
int3
hlt
dec
popa
sbb
dec
mov
and
sbb
aas
lods
add
iret
cmp
jnp
cwde
mul
mov
mov
in
rol
fild
dec
retf
dec
cs
into
xor
outs
adc
and
mov
test
and
imul
and
dec
loopne
mov
sbb
test
cs
sub
(bad)
out
int3
fucom
add
push
test
mov
cmp
mov
(bad)
in
enter
(bad)
jmp
dec
push
je
mov
dec
push
scas
mov
push
sub
mov
popf
in
maskmovq
stc
lods
mov
lods
adc
mov
fcom
pop
(bad)
pop
dec
cwde
inc
adc
inc
pop
xchg
pop
into
sbb
(bad)
fidivr
cmp
or
xchg
imul
push
add
es
sbb
popf
scas
sbb
mov
xchg
cmp
addr16
mov
ins
push
and
add
inc
xchg
pop
xor
cmp
xchg
add
ficom
dec
push
les
xor
cmps
push
inc
enter
dec
sbb
inc
add
push
(bad)
rcr
pop
push
push
test
sub
cmp
and
mov
fwait
xor
mov
xchg
or
arpl
mov
mov
sub
outs
adc
scas
lods
mov
mov
rcl
push
aad
ins
stos
xchg
xchg
cmp
loopne
ss
rcr
dec
setb
pop
int3
fwait
sub
mov
shr
xlat
out
pop
in
lods
pop
mov
sbb
inc
nop
dec
jae
arpl
add
test
nop
adc
pop
mov
jb
gs
cwde
xchg
lods
ins
jb
jae
xor
loope
aam
iret
xor
inc
outs
cwde
iret
pop
daa
es
mov
outs
pop
pop
sub
out
push
xlat
dec
lock
sub
lea
cmp
xchg
int3
scas
adc
mov
pop
sahf
cdq
in
daa
scas
xor
enter
lds
in
fwait
dec
stos
rol
jns
cmps
and
js
cmc
xchg
call
and
pop
pushf
ds
shl
mov
pop
adc
push
daa
outs
cld
(bad)
mov
movs
gs
das
xchg
test
sub
xor
push
adc
jp
ja
or
cmp
into
iret
mov
mov
xchg
movs
leave
test
mov
nop
movs
cmp
add
sub
sub
fld
adc
add
das
popf
jg
addr16
mov
jecxz
cmp
push
sub
sbb
pop
jns
inc
xor
sub
sbb
and
cmp
std
(bad)
retf
ror
ss
cmp
inc
mov
inc
xor
fimul
dec
sub
mov
push
and
scas
std
int
cdq
lds
mov
inc
mov
or
loope
pause
in
lock
bound
adc
xchg
jb
sbb
es
add
push
in
push
lods
xor
cmp
jne
icebp
push
lds
mov
sbb
scas
sbb
push
cwde
xchg
mov
pop
fiadd
cdq
pop
hlt
mov
mov
movs
mov
rcl
adc
jg
das
xchg
mov
mov
push
dec
leave
movs
(bad)
and
pop
lock
add
inc
js
sub
xchg
test
scas
cli
push
mov
movs
mov
jno
push
dec
add
xchg
xchg
mov
repnz
adc
enter
dec
or
test
popa
xor
inc
lods
xchg
ja
or
mov
mov
loop
adc
jae
rcl
je
test
jg
jp
mov
pop
pop
sbb
pusha
cs
retf
mov
and
outs
adc
repz
sbb
in
pop
or
mov
jp
jo
out
inc
jmp
sub
dec
stos
in
push
in
int
mov
jle
fwait
xchg
jg
iret
test
inc
or
sub
(bad)
in
repnz
lahf
sub
scas
xor
cmp
inc
cmp
leave
nop
ss
test
cmp
test
sti
call
sub
out
repz
lahf
mov
sub
xor
out
cmps
ins
push
pop
add
stc
push
xlat
ins
lds
popa
or
arpl
inc
dec
xchg
mov
sbb
leave
ds
push
dec
loopne
pop
pop
xchg
cmps
push
mov
mov
ja
add
bound
ret
mov
scas
(bad)
push
cdq
add
in
and
(bad)
movs
test
int
mov
xor
push
cld
fld
sub
push
outs
js
inc
retf
les
mov
in
xchg
cs
ret
cmp
rcr
inc
xor
adc
les
movs
cmp
div
fnstsw
outs
pop
jmp
add
outs
cwde
or
jge
jle
iret
jl
fsub
sub
jge
repz
repz
xchg
cmp
or
outs
iret
adc
push
lods
sbb
in
mov
dec
cmp
adc
test
out
dec
or
adc
adc
test
adc
hlt
iret
mov
adc
leave
sbb
and
out
pop
shl
inc
inc
add
(bad)
jmp
mov
sub
xchg
rcl
(bad)
scas
jge
shl
(bad)
jecxz
stc
dec
mov
neg
xchg
icebp
stos
out
inc
and
or
jge
dec
into
lods
dec
xchg
in
and
or
cmp
cmp
jo
(bad)
jge
les
sbb
js
lea
pop
sbb
jmp
dec
push
pusha
mov
pop
inc
retf
jmp
xor
ins
adc
pop
pusha
aaa
cmp
cmp
mov
loopne
dec
and
or
ss
jb
add
jmp
data16
repz
mov
jmp
mov
call
xchg
les
mov
cs
xlat
dec
or
fsubr
mov
xchg
(bad)
jmp
cwde
pushf
mov
sbb
cmp
mov
xchg
add
and
or
icebp
pop
repz
or
xchg
cmps
mov
mov
in
sub
sub
and
jmp
pop
sub
jmp
inc
push
iret
or
push
sbb
inc
daa
xchg
sahf
mov
aam
mov
push
(bad)
or
xchg
or
rcr
outs
adc
push
mov
in
movs
adc
ret
push
push
jb
sahf
enter
sub
jno
pop
mov
sbb
mov
push
add
xchg
sbb
lea
sub
arpl
aad
or
inc
xchg
hlt
pop
bound
lds
jae
fsub
test
fldenv
lods
cmps
dec
loopne
cwde
mov
jl
xchg
jbe
jg
aas
push
out
ins
add
xchg
jbe
rcl
mov
mov
jmp
loopne
add
adc
pop
fld
add
(bad)
fst
inc
or
sahf
nop
dec
xor
mov
add
pop
add
ds
xchg
call
jle
add
cmp
out
mov
and
jnp
dec
xor
js
fwait
xchg
movs
or
push
xor
pop
dec
push
shl
fidiv
int3
sbb
mov
pushf
push
xlat
shl
iret
fldenv
adc
pop
jae
fimul
movs
inc
ins
leave
cdq
ud0
xchg
jp
hlt
mov
cmp
and
ficom
inc
jmp
sbb
xlat
fucomi
cmps
add
icebp
sub
fdiv
into
fidiv
test
or
in
jae
push
push
and
hlt
(bad)
sti
test
adc
adc
cs
retf
imul
jbe
mov
fidiv
and
pop
test
xchg
xor
pop
sub
mov
cld
loop
cmps
xchg
xchg
imul
cmp
mov
or
mov
jecxz
lds
retfw
sbb
push
or
push
jns
dec
push
in
mov
or
mov
or
aad
test
cmc
and
sbb
clc
jb
inc
jae
adc
push
pop
dec
xlat
int
pop
mov
mov
sub
fnstcw
inc
ins
xchg
and
mov
sti
hlt
stc
and
js
dec
pop
adc
mov
bound
add
mov
sti
mov
pop
pop
sub
mov
xchg
adc
ret
and
pop
mov
call
js
xor
pop
movs
adc
popf
cmp
je
mov
loopne
xor
xchg
mov
sbb
pop
adc
outs
xor
sub
cmp
mov
sub
movs
inc
mov
mov
aaa
adc
loopne
mov
cmc
mov
mov
(bad)
aam
dec
pop
in
enter
or
mov
jae
push
mov
dec
sub
lahf
(bad)
jl
std
inc
xchg
icebp
mov
add
arpl
test
dec
lods
movs
cmp
mov
out
ret
ja
add
cmp
jns
jno
pop
mov
call
pop
retf
hlt
(bad)
mov
mov
sub
scas
(bad)
pusha
inc
retf
gs
dec
jnp
cmps
or
add
and
pop
mov
lahf
and
out
mov
bound
cwde
cli
div
add
dec
inc
xchg
dec
loop
jmp
jl
aas
mov
mov
add
les
sub
out
nop
pop
call
movs
jmp
xchg
ficomp
push
shr
xchg
push
or
mov
nop
pop
push
lods
test
inc
lods
push
in
in
push
jae
call
inc
jge
ins
lods
call
fist
adc
lahf
pop
retf
jl
mov
(bad)
ins
and
js
xchg
xchg
inc
out
sub
retf
loope
adc
sti
bound
mov
or
daa
fild
test
push
push
lahf
shl
sbb
ja
add
adc
xchg
pop
ret
rol
cmps
nop
lods
pusha
inc
sbb
mov
inc
sbb
mov
lds
adc
loop
cmc
jo
sti
sub
inc
movs
dec
movs
daa
add
sub
leave
nop
jmp
xchg
cmps
retf
or
and
add
out
xchg
sar
inc
(bad)
movs
mov
sub
lea
int3
mov
xor
cwde
or
in
push
push
or
mov
iret
fstp
nop
push
push
adc
jmp
pop
repnz
mov
adc
mov
retf
cmp
fld
cmps
stos
es
jb
sub
pop
fmul
jge
pop
icebp
adc
adc
inc
test
push
xchg
push
sub
xor
push
mov
ins
push
daa
xchg
enter
out
nop
test
mov
fdivr
int3
in
aaa
shl
pop
(bad)
lahf
adc
pop
aad
gs
fild
inc
push
or
sbb
and
push
dec
xor
lea
or
mov
mov
lods
movs
mov
repnz
sub
out
jmp
test
int3
movs
mov
or
retf
(bad)
cmps
inc
rcr
pop
sub
pop
cmp
popa
xchg
fwait
mov
jmp
(bad)
ja
mov
xor
cmp
xchg
sbb
(bad)
test
imul
inc
inc
mov
jnp
rcl
sbb
adc
dec
xchg
jns
xchg
xor
hlt
dec
xchg
outs
xchg
(bad)
in
mov
sub
push
repz
mov
jno
mov
fnstsw
inc
stos
xchg
fimul
mov
arpl
dec
sbb
test
pop
rol
mov
mov
jmp
jg
jecxz
dec
and
shl
test
mov
call
cld
fucom
aad
popf
sbb
stc
mov
mov
(bad)
ret
ja
dec
and
xchg
fs
ficom
(bad)
fs
pop
pop
jmp
inc
jge
imul
in
sar
ins
jecxz
mov
sub
ret
xchg
out
into
pop
sbb
mov
add
out
sbb
sbb
mov
aad
ss
adc
add
inc
ret
ret
mov
cwde
adc
jbe
in
cmps
sbb
jb
push
xchg
jo
xchg
int
pop
div
enter
(bad)
inc
dec
push
jb
inc
mov
cmp
xchg
loop
rcr
add
lock
mov
cmp
sbb
xchg
mulps
mul
adc
lods
sbb
cmc
mov
repz
cdq
ins
arpl
lea
fwait
pop
in
or
(bad)
push
pop
call
jmp
xchg
std
nop
inc
cdq
dec
push
pop
mov
(bad)
or
fisub
rcr
and
adc
lea
ins
jae
cmp
shl
ins
out
jmp
scas
test
mov
mov
out
inc
pop
ud1
imul
push
aad
mov
in
xchg
shr
dec
sti
arpl
int
cmp
xchg
data16
in
sub
repnz
call
out
gs
(bad)
cs
inc
pand
sbb
push
push
pop
addr16
xor
test
je
mov
and
mov
mov
stos
sti
mov
fsubr
jecxz
aaa
xor
pop
mov
pop
jno
xor
pop
pop
sbb
cmp
xor
cmps
push
in
dec
mov
pop
out
xchg
jno
and
adc
jge
adc
aad
cmps
mov
shl
lds
outs
sahf
arpl
dec
sbb
sbb
push
inc
(bad)
fisttp
daa
xchg
rcl
(bad)
cmp
push
mov
lds
inc
sti
lea
add
sbb
jp
dec
push
pop
sub
popf
xchg
xor
push
hlt
aas
mov
lds
sti
jmp
adc
jmp
ins
(bad)
sar
(bad)
ret
mov
stos
pop
or
push
test
sub
cmp
add
arpl
call
enter
pusha
or
test
or
jecxz
aas
xor
inc
add
fcmovb
iret
jb
jno
ret
nop
fld
test
xchg
dec
xlat
or
pop
pusha
(bad)
and
aam
shl
imul
fsubrp
stos
mov
and
push
jecxz
inc
bound
inc
xor
dec
inc
repz
cmp
and
xchg
inc
test
pushf
aad
and
and
sub
adc
js
cmp
push
ret
mov
mov
(bad)
aam
jo
sub
sti
mov
(bad)
imul
cld
data16
in
sbb
adc
pop
pusha
mov
and
cmp
outs
nop
dec
dec
xor
mov
jp
cdq
lods
lahf
fldcw
push
mov
push
int
bound
fdiv
jle
jmp
mov
push
dec
js
enter
add
cs
test
mov
(bad)
shl
ins
dec
mov
jp
and
cmps
mov
ins
lds
or
jb
fidiv
mov
mov
ret
mov
jne
mov
mov
xlat
push
stos
mov
pop
(bad)
adc
add
sub
test
js
or
ret
or
push
add
addr16
cmp
sbb
in
and
mov
stos
rcl
rol
(bad)
rol
add
ret
jp
adc
pop
ss
xor
xchg
xchg
out
or
dec
mov
sub
test
ret
sub
test
push
ficom
adc
xchg
mov
push
jb
sbb
sub
jno
into
or
jmp
(bad)
push
mov
mov
adc
mov
pop
pop
jge
pop
dec
xchg
add
cld
jno
(bad)
movs
ds
rcl
test
dec
push
cmp
dec
lods
es
mov
std
fbstp
xchg
or
outs
imul
cwde
mov
(bad)
adc
xchg
dec
outs
lds
jecxz
daa
out
test
cmp
int
sbb
add
stos
pop
ins
shr
(bad)
sahf
(bad)
fld
imul
or
xchg
fcom
add
pusha
mov
sub
jo
push
sbb
popf
push
pop
cmps
cmps
bound
xchg
jno
mov
add
sub
sub
jnp
scas
push
pop
out
or
xor
aas
sbb
(bad)
ins
out
call
pop
dec
popf
mov
(bad)
stos
sub
js
ds
cmp
fisub
push
or
in
pop
inc
cmps
mov
mov
loop
mov
dec
adc
pop
(bad)
out
(bad)
fisttp
adc
or
dec
imul
cmps
fmul
pop
sub
and
adc
xchg
cdq
sub
mov
(bad)
jg
push
xchg
aam
stos
adc
fldcw
les
les
mov
jb
repnz
mov
loopne
icebp
lods
jmp
xchg
aam
or
push
in
outs
push
push
add
inc
mov
lock
mov
icebp
pusha
ins
js
add
sti
xor
cmp
push
sbb
pop
push
mov
mov
push
adc
stc
test
imul
xchg
in
rcr
mov
(bad)
and
jge
lds
or
add
popa
sbb
out
jge
loope
dec
pop
adc
in
test
xchg
adc
fadd
pusha
fmul
lahf
dec
scas
into
adc
mov
lea
inc
nop
test
mov
push
dec
mov
inc
out
jbe
jae
cmps
les
sahf
mov
repz
stos
ror
xchg
cs
dec
jmp
add
jp
push
add
fwait
sbb
std
or
es
mov
mov
fimul
retf
mov
push
cmp
sbb
mov
cld
xchg
mov
iret
popa
sbb
mov
aam
dec
fcmovb
push
data16
dec
retf
push
push
xlat
cmps
pop
dec
mov
ror
test
movs
mov
cld
dec
hlt
in
daa
push
hlt
ja
cmps
mov
pop
in
retf
mov
dec
xchg
mov
pop
jl
adc
xor
loop
jmp
fiadd
cmp
imul
cdq
es
mov
outs
xor
imul
adc
in
outs
rcr
cdq
mov
xor
push
sbb
cmps
push
dec
cvtps2pi
xchg
push
mov
out
inc
jg
sub
mov
(bad)
(bad)
adc
mov
mov
sub
sti
(bad)
ret
out
mov
out
into
inc
xchg
xchg
add
or
(bad)
ror
rcr
enter
or
inc
aas
inc
jl
or
rcl
sbb
es
adc
push
aad
push
or
cmps
cs
adc
lods
pop
sti
dec
adc
repz
or
pop
sbb
movs
jo
ss
aad
ds
std
arpl
mov
and
or
je
movs
and
mov
xlat
shl
hlt
mul
rcl
(bad)
les
push
jl
icebp
int3
movs
jns
inc
add
je
inc
or
inc
pop
pop
cli
outs
adc
cwde
jne
pop
adc
popf
leave
out
jge
dec
push
stc
add
and
xchg
dec
xor
ja
mov
mov
push
adc
retf
add
cwde
popa
mov
mov
shl
xchg
clc
mov
push
sub
inc
std
pop
or
and
mov
pop
call
lahf
jbe
cmc
hlt
nop
xor
aas
dec
xor
mov
inc
xor
mov
add
shl
cdq
xor
mov
int3
bound
fsubr
data16
cmp
fcom
push
pop
or
jmp
ror
adc
dec
or
fs
idiv
jns
gs
test
addr16
in
jecxz
sub
cli
shr
stos
sub
rep
lds
jecxz
mov
mov
xchg
jns
ins
cld
or
jmp
xor
sbb
xchg
mov
ficom
jo
xchg
rcl
out
push
loope
mov
cmp
push
cli
bound
mov
xor
or
and
mov
xchg
xchg
into
daa
sbb
call
and
xchg
sbb
fld
push
mov
das
das
pushf
xchg
xchg
(bad)
fild
or
mov
or
repz
dec
mov
adc
adc
jmp
or
nop
push
xchg
popa
jae
sti
sub
lahf
iret
test
mov
push
pop
add
(bad)
or
xor
mov
inc
icebp
fimul
mov
sbb
bnd
mov
ss
jb
aam
sub
dec
cwde
jp
aaa
arpl
push
pop
push
sbb
push
addr16
fcmovb
scas
inc
cmc
adc
pop
jb
test
lock
loope
gs
pop
fwait
dec
mov
jb
dec
cmps
xchg
mov
(bad)
repnz
jle
gs
outs
mov
push
dec
cmps
bound
add
and
out
push
test
mov
mov
push
or
inc
push
test
(bad)
pop
xor
push
ret
stos
push
into
push
retf
cmp
dec
iret
je
jae
or
pop
(bad)
xchg
cs
jae
rcr
mov
test
je
(bad)
sti
(bad)
shl
(bad)
mov
test
hlt
(bad)
jbe
pop
mov
jns
add
leave
dec
call
mov
aas
xchg
js
je
aad
jmp
dec
aaa
sar
jmp
data16
lock
mov
pop
dec
scas
icebp
inc
retf
push
enter
leave
in
jae
popf
jle
call
lahf
in
enter
jecxz
clc
addr16
iret
mov
inc
loop
push
in
xlat
das
jne
movs
inc
movs
fidivr
ret
sbb
retf
cmps
or
leave
and
pop
shl
test
jbe
inc
xor
push
sbb
mov
add
pushf
add
push
pop
mov
xor
fs
std
jae
daa
cld
mov
hlt
sub
cmp
mov
(bad)
test
sbb
inc
stos
gs
rcr
mov
into
fsubr
and
js
lahf
jg
adc
(bad)
push
mov
mov
into
popa
inc
stos
pop
in
push
push
jmp
xor
in
sub
or
daa
es
mov
and
hlt
sar
retf
and
pop
jae
icebp
call
not
dec
xchg
adc
xor
stc
mov
xor
mov
mov
outs
adc
fstp
out
jl
jecxz
adc
xchg
add
sub
sbb
mov
in
jecxz
cmps
mov
mov
mov
hlt
sbb
leave
inc
in
outs
ret
sbb
or
and
jb
mov
inc
fsubp
arpl
in
xor
test
or
push
shl
mov
je
jb
push
out
test
jge
jmp
repnz
adc
(bad)
mov
sbb
cmp
stos
setl
nop
retf
add
mov
nop
(bad)
pop
emms
loop
sbb
pusha
in
dec
ss
mov
adc
in
sahf
adc
out
cmc
in
popf
mov
(bad)
rcl
sbb
cmovbe
lods
and
mov
mul
leave
aas
mov
mov
and
cmp
iret
(bad)
adc
push
mov
lock
mov
lahf
jecxz
mov
pusha
jae
out
call
sub
ins
scas
aam
fs
loope
pop
aas
stos
mov
push
mov
xor
pushf
neg
inc
rol
cmp
ds
pop
inc
jmp
retf
dec
bound
ss
or
adc
jb
sub
xchg
sbb
test
int3
sbb
mov
out
mov
mov
inc
mov
and
dec
jo
mov
add
lock
es
mov
call
inc
inc
movq
int3
(bad)
pop
jae
cmp
ss
push
in
or
xlat
adc
push
mov
sar
fimul
push
sbb
pushf
jp
and
fs
pop
enter
je
mov
les
loopne
(bad)
test
out
pop
sar
push
jno
push
std
shl
xchg
add
mov
stos
call
sub
fdivrp
sub
mov
xchg
out
movs
mov
arpl
xchg
std
imul
sar
xchg
xsaveopt
out
xor
retf
popf
arpl
jg
daa
aaa
pop
aaa
add
pop
or
(bad)
(bad)
lds
dec
adc
sub
xchg
pop
shr
fwait
mov
jge
mov
cld
and
sahf
pop
adc
ja
shl
in
retf
in
or
cmp
call
mov
cwde
daa
xor
xchg
jne
repnz
lods
dec
cli
sub
push
xlat
jmp
movs
call
sub
push
dec
jae
jecxz
mov
movs
pop
ror
cli
xor
xor
aas
inc
cmp
icebp
add
repz
call
add
or
or
pop
movs
inc
call
mov
shl
jnp
inc
sbb
call
add
mov
xlat
jg
outs
loop
jns
cmp
movs
lahf
ffree
push
dec
les
pop
idiv
cmps
pop
aas
sub
outs
mov
int3
cmp
cld
mov
int3
fisubr
xor
fsubr
lds
jmp
test
cmp
loop
inc
adc
xlat
fwait
int
jle
or
icebp
lods
sar
mov
sti
sub
mov
pop
les
cmps
xor
adc
jmp
jns
(bad)
lods
das
cs
ret
mov
repz
aam
adc
(bad)
mov
fstp
cld
pop
rcl
pop
(bad)
pop
data16
mov
push
arpl
add
xchg
mov
and
mov
jbe
in
(bad)
and
sub
fwait
call
sub
icebp
aam
int
xor
sub
mov
jl
mov
addr16
add
and
stc
mov
cli
scas
leave
mov
lods
and
mov
dec
mov
int3
loop
pop
push
retf
pop
cmp
jno
mov
pop
add
mov
jecxz
jecxz
xor
inc
jbe
(bad)
pop
lahf
pusha
outs
cmp
div
xchg
mov
loop
jmp
push
pop
sub
push
test
add
or
stos
jns
jne
cli
push
dec
out
fld
adc
in
mov
scas
jne
cdq
in
gs
outs
push
cli
popf
ret
cmp
mov
test
mov
repnz
dec
stc
dec
or
jmp
xchg
cld
mov
push
mov
add
fs
dec
xchg
jne
shl
pop
xchg
pop
call
sub
pop
jo
ins
icebp
pop
js
jno
add
push
xor
mov
sbb
pop
dec
in
fldcw
xor
mov
mov
jl
nop
add
aad
push
inc
mov
xchg
ja
into
sbb
shr
dec
pop
add
jnp
mov
sbb
es
arpl
jns
and
ss
dec
(bad)
xchg
sar
adc
sbb
push
inc
rcl
fdivr
jb
cs
xchg
sub
iret
inc
add
jae
stos
dec
out
rol
not
inc
fucomip
cmp
call
lahf
enter
adc
or
vpmacssww
cmp
lods
ret
mov
lds
ret
enter
fnstcw
ror
hlt
or
leave
sub
lods
out
in
(bad)
sbb
sti
out
mov
jmp
pop
mov
jecxz
lahf
movs
sbb
cs
test
sub
in
call
(bad)
xchg
ficom
out
fist
mov
out
rcr
int3
lds
gs
clc
mov
mov
sub
inc
inc
(bad)
pushf
ja
in
outs
sub
push
mov
adc
stos
int
inc
mov
mov
lods
xchg
sub
icebp
arpl
xlat
cdq
lds
adc
push
push
xchg
pop
mov
cmp
jb
dec
and
xchg
sbb
es
jle
sbb
out
es
cmps
call
popf
mov
js
cld
sar
lods
lds
ins
call
xor
mov
sar
pop
sbb
or
adc
mov
mov
xor
ficom
sub
push
aas
cmp
test
dec
inc
js
add
adc
fst
adc
dec
sbb
pop
lods
retf
xchg
and
mov
retf
or
sti
retf
jmp
lock
mov
pop
jnp
sub
ss
dec
push
xor
jmp
sbb
ja
int
call
mov
test
jb
fs
pop
je
and
fdivr
cmp
gs
xor
clc
retf
iret
push
movsx
div
xor
push
call
daa
loope
jmp
pop
add
inc
add
pop
icebp
inc
aas
mov
pushf
adc
mov
out
fild
mov
rcl
adc
call
cwde
hlt
dec
or
(bad)
xchg
nop
retf
and
sub
fstp
dec
mov
fisttp
and
int3
lods
rcr
loope
outs
ror
(bad)
xchg
mov
mov
jno
addr16
cdq
test
mov
sbb
or
add
push
lea
popa
addr16
pop
pop
cmps
test
add
inc
pusha
popa
retf
push
dec
test
out
push
adc
jbe
dec
imul
div
leave
repnz
stc
pop
xchg
pop
test
out
mov
pushf
test
pop
fistp
dec
jae
mov
push
retf
push
xor
mov
lea
fistp
dec
retf
scas
ins
add
cmp
shl
imul
sbb
retf
or
leave
or
pop
scas
jno
push
aad
addr16
cmp
sbb
cmp
adc
jg
mov
mov
pop
adc
and
push
hlt
pcmpeqw
mov
fidivr
lea
xor
add
retf
adc
add
les
retf
and
adc
cs
gs
lock
xchg
lahf
ja
iret
mov
jp
or
inc
mov
inc
xor
adc
sbb
cli
stos
retf
retf
clc
sub
iret
mov
(bad)
pop
mov
mov
call
(bad)
fist
dec
outs
adc
lods
xor
push
(bad)
jns
sbb
jg
pop
jg
inc
data16
adc
mov
rcl
pop
jnp
inc
add
(bad)
sar
pop
or
out
ds
mov
in
sbb
xor
dec
lods
fmul
add
(bad)
xchg
outs
pop
push
movs
cmp
ds
xchg
inc
or
js
jmp
mov
and
in
mov
mov
push
adc
xor
pop
jo
pop
retf
xor
push
test
lods
loop
aaa
mov
(bad)
push
ret
fucompp
(bad)
cwde
ficom
push
cmp
xlat
push
in
movs
aas
or
fisub
dec
test
sub
jae
mov
movs
or
stos
retf
cmc
cmc
iret
adc
daa
ins
mov
jp
(bad)
xchg
or
dec
and
mov
mov
fmul
inc
xchg
adc
mov
push
rcr
hlt
inc
mov
gs
sub
(bad)
mov
cli
out
nop
mov
int3
pop
scas
stc
mov
adc
(bad)
fmul
xchg
xor
fmul
dec
adc
or
sbb
mov
cmp
add
pusha
pop
xchg
out
retf
fadd
xchg
ins
cdq
add
mov
push
fidiv
or
mov
pop
enter
dec
inc
pop
fst
out
les
fdiv
ds
or
pop
mov
stc
or
imul
and
test
out
and
popa
popa
jo
cmp
cmp
xchg
ss
lea
cmp
outs
or
mov
ror
es
and
sub
imul
pop
call
jno
rol
fcmove
add
shr
push
outs
add
inc
sbb
retf
dec
push
cmps
dec
lock
iret
jae
pop
jmp
adc
pop
jp
(bad)
arpl
push
xchg
sbb
cmp
ins
pop
or
push
jae
xchg
ret
mov
outs
cdq
out
lods
sub
mov
aad
add
dec
xlat
scas
sbb
out
jae
inc
cwde
jle
pop
mov
repz
and
mov
int
pop
dec
and
out
loop
xor
or
xchg
cmp
popa
pop
sbb
jns
das
xor
test
js
or
mov
fsub
aas
pusha
sbb
out
cmp
jg
mov
fist
mov
fwait
test
push
and
fnsave
loop
cmp
inc
in
cmp
lods
jecxz
adc
xlat
ror
loope
call
stos
adc
sar
push
stc
cmp
stc
inc
(bad)
scas
adc
pop
xchg
sub
xor
gs
mov
dec
shr
jae
sub
mov
aas
retf
int3
inc
push
mov
push
lods
gs
imul
(bad)
stc
cmp
pop
pop
les
sub
mov
or
cmc
ret
mov
sub
rcr
sar
mov
movs
push
push
sbb
dec
pop
bound
(bad)
jno
test
add
ja
mov
dec
test
sub
jno
lea
(bad)
sub
jae
mul
fmul
mov
jnp
xchg
sub
retf
stos
in
jae
(bad)
out
inc
mov
ret
popa
pop
paddw
aam
dec
dec
mov
mov
pusha
or
push
mov
pop
push
or
imul
push
rol
pop
push
div
shr
mov
pop
or
pop
xchg
xor
data16
(bad)
fdivr
push
in
addr16
mov
jo
repnz
cmp
shl
movs
dec
stos
sbb
cmps
popf
push
(bad)
xchg
add
adc
int3
pushf
imul
adc
jno
je
sbb
imul
inc
lahf
jns
inc
fcomp
adc
xor
xchg
and
fdivr
jae
jle
(bad)
sub
pop
jmp
out
(bad)
mov
ja
push
inc
into
xchg
and
sbb
ror
pusha
add
pop
(bad)
out
pop
bound
aad
inc
int
push
or
gs
lahf
rcl
sbb
fcom
and
mov
adc
scas
int3
ret
pop
dec
les
inc
mov
icebp
inc
movs
ss
pop
push
out
cdq
(bad)
xor
inc
ds
cmp
enter
cmps
shr
(bad)
es
(bad)
mov
inc
jno
in
push
sbb
loop
test
add
or
pop
rcr
sbb
push
adc
sub
xchg
jb
daa
fld
in
jae
outs
popa
sahf
dec
jmp
pop
and
pop
pop
je
xchg
jne
bound
xor
mov
push
stos
jmp
push
stos
cmps
into
sbb
pop
call
pusha
mov
call
icebp
stc
fidiv
sub
or
and
les
int3
mov
sbb
jnp
lea
ds
mov
inc
mov
movs
sub
xchg
jmp
pop
ins
cld
push
mov
aam
sahf
xchg
out
mov
retf
es
and
adc
sub
or
push
push
je
mov
fwait
and
pop
(bad)
retf
mov
je
mov
jnp
fwait
sbb
push
(bad)
std
push
xchg
in
sub
pop
test
iret
test
daa
int
push
int
jo
push
cmp
retf
pop
xor
xor
pop
and
cmc
dec
std
mov
repz
xchg
xlat
stc
mov
je
(bad)
shl
repz
jge
inc
cwde
les
arpl
and
arpl
push
aaa
out
sbb
inc
les
cs
jae
cmp
and
push
hlt
mov
push
repnz
inc
push
retf
jnp
inc
cld
rcl
leave
push
sbb
(bad)
neg
sub
cwde
lock
test
icebp
sar
cmp
lock
std
stos
xchg
loope
pop
imul
add
pop
popf
hlt
int
stos
aaa
dec
neg
rol
add
sub
mov
cmp
ins
arpl
pop
popa
into
ja
cmc
mov
adc
ja
cmp
shl
gs
(bad)
sar
into
mov
hlt
xchg
fucomip
into
dec
repz
mov
aam
loope
adc
(bad)
stc
mov
leave
xchg
mov
or
push
das
cmp
jg
cmps
mov
stos
mov
aaa
mov
mov
mov
sbb
fist
inc
(bad)
cli
dec
xchg
sub
movs
sbb
fstp
sub
sbb
imul
inc
cld
inc
jp
cmps
cmp
pop
xor
aam
pop
fdivr
mov
pop
pushf
push
jmp
lea
cld
sbb
mov
add
sub
in
(bad)
test
aam
jo
inc
or
mov
dec
inc
stos
dec
and
xor
mov
jmp
xchg
dec
pop
sbb
mov
iret
cmps
mov
iret
cld
xor
outs
sub
je
mov
push
stos
push
inc
int
pop
adc
push
(bad)
ins
mov
stos
cmc
push
test
jmp
retf
test
fcom
cli
jns
addr16
jge
imul
lea
jb
sbb
out
fbstp
cld
xor
dec
mov
mov
jno
in
(bad)
dec
sbb
sbb
cmp
adc
and
pop
xor
fcomp
arpl
adc
mov
aam
pop
and
sbb
pop
mov
xor
mov
outs
and
mov
dec
pop
nop
test
or
and
jns
scas
xchg
lea
mov
push
jmp
sbb
pop
cs
imul
cmc
mov
outs
(bad)
jge
dec
dec
js
add
and
movs
jnp
loop
mov
fisub
inc
addr16
pop
mov
adc
scas
fwait
push
cmps
inc
aad
call
or
add
nop
hlt
and
ins
xchg
(bad)
out
mov
int
ins
sub
mov
push
dec
jg
repnz
cld
pop
sbb
pop
sbb
sti
aaa
aad
or
scas
rcr
mov
jno
dec
push
das
cmp
ror
jl
mov
retf
fistp
adc
lock
mov
rcr
mov
and
xchg
cmps
xchg
ftst
lock
mov
imul
jl
in
repnz
lods
scas
movs
mov
aad
in
sub
mov
test
adc
out
loopne
or
ins
dec
leave
sub
mov
lods
xor
sub
sbb
mov
sbb
xor
mov
in
stos
add
neg
rol
add
test
jl
into
jns
das
fcom
add
push
or
mov
jo
pop
outs
dec
xchg
and
outs
inc
out
mov
jne
cmp
jge
mov
sub
sub
lock
dec
call
retf
mov
mov
je
jmp
sbb
jmp
inc
je
xchg
fld
mov
mov
loop
push
sub
test
stc
or
jae
jle
pop
std
pusha
adc
mov
jmp
loop
nop
adc
dec
mov
cmp
cdq
lock
pop
and
cmp
dec
push
shl
mov
adc
lds
mov
adc
dec
arpl
or
sub
cdq
mov
shl
dec
sahf
pop
imul
and
ins
jle
dec
inc
jge
ret
mov
and
les
fxch
push
test
xchg
vprotq
and
fiadd
jae
and
push
adc
mov
lods
xor
std
mov
jns
sahf
loopne
div
jecxz
sub
pushf
imul
pusha
in
cmp
mov
call
pop
add
stc
fcmove
pop
cmp
out
push
mov
mov
cmp
cwde
push
cmps
or
and
icebp
pop
jl
icebp
or
int
mov
add
fnstcw
call
nop
repnz
pop
in
shr
pop
mov
sbb
cmc
mov
push
out
repz
add
cmc
leave
jge
cmp
push
or
lahf
xchg
and
mov
and
pop
sbb
je
sahf
pop
nop
adc
mov
jno
pop
jae
repnz
pushf
and
jb
push
add
inc
int
nop
fisub
rcl
inc
sbb
test
inc
lahf
addr16
repnz
add
shr
(bad)
out
aaa
cmc
pop
scas
in
pop
lea
mov
inc
pop
inc
and
sub
lock
cmc
jg
inc
mov
test
mov
dec
iret
jns
es
jne
adc
aad
lods
sub
jecxz
cmp
push
push
xchg
mov
rcr
mov
(bad)
and
sub
std
xchg
js
call
loopne
dec
add
les
mov
inc
push
test
loope
add
fnsave
in
outs
test
mov
dec
and
cld
push
outs
les
aas
lds
add
mov
sbb
xchg
inc
mov
cmps
mov
pop
repz
jmp
push
std
and
(bad)
xchg
dec
icebp
sbb
xchg
mov
jns
push
lds
lods
loope
and
jecxz
add
sti
or
rol
xor
popa
int3
xchg
cld
push
inc
cmp
loopne
and
and
push
outs
sub
sbb
ret
ins
mov
fs
sub
les
push
rol
xor
pop
mov
sbb
and
gs
jle
in
ret
(bad)
lock
mov
sbb
jle
cmc
mov
in
jmp
xchg
mov
dec
and
ret
ret
add
and
and
xor
mov
jmp
push
pop
mov
mov
lods
and
or
dec
arpl
push
xor
inc
cmc
stos
aas
jmp
rcl
lock
or
add
cli
out
imul
xchg
push
or
xor
cmp
aam
push
or
(bad)
push
in
ret
jnp
or
xchg
js
loopne
sbb
pop
push
jnp
repnz
cld
jae
retf
cmp
outs
(bad)
push
mov
inc
or
sub
lea
inc
jno
xor
xor
jo
sbb
test
dec
addr16
ja
int
bound
dec
jg
nop
add
scas
sar
scas
stos
jmp
mov
in
popf
dec
push
mov
sbb
lods
mov
sbb
push
retf
mov
inc
push
and
or
test
scas
and
mov
push
jbe
add
sbb
mov
cmp
mov
and
gs
or
js
or
jno
(bad)
sbb
popf
pusha
arpl
loop
push
xor
xor
mov
rcl
repnz
inc
imul
popf
or
jecxz
mov
dec
call
jp
stc
or
sbb
aad
jge
outs
sub
add
rol
xchg
or
cmp
inc
mov
in
inc
push
cmp
ja
loop
loope
rcl
and
add
cs
sub
jg
xor
cdq
stos
shr
cmp
sbb
inc
iret
adc
fmul
dec
loopne
push
loop
xchg
mov
lods
xchg
sbb
xchg
(bad)
mov
xor
sbb
(bad)
mov
sub
or
cmp
cmc
sbb
stos
jnp
jle
aaa
fisubr
jb
and
push
inc
icebp
test
sub
mov
xchg
div
push
xor
sub
cmps
sbb
icebp
dec
push
(bad)
jae
aam
je
pop
or
into
pop
push
push
or
loope
ret
mov
sar
jno
test
shl
xor
shr
inc
out
add
add
and
push
and
adc
xchg
pop
inc
and
stos
lock
shl
mov
push
sti
imul
or
jle
add
push
shl
add
rol
popf
in
or
sub
mov
or
es
dec
sub
sti
push
in
inc
arpl
aas
loop
mov
cmps
and
pop
mov
inc
mov
push
dec
shl
adc
cmp
movs
mov
xchg
push
imul
push
xor
push
adc
cmp
dec
loopne
adc
retf
loope
sbb
pop
mov
test
std
aam
outs
outs
add
mov
xchg
xchg
mov
lock
fist
adc
outs
clc
or
fincstp
cld
imul
add
fdiv
sub
xor
(bad)
fadd
jb
push
inc
cmp
push
xchg
xor
lds
mov
stos
data16
mov
in
and
daa
stos
shr
in
das
mov
es
ret
fcomp
mov
fnstenv
cli
xor
jecxz
rcr
add
(bad)
(bad)
iret
push
add
cmp
mov
push
jp
popf
mov
jmp
int3
cmp
lahf
data16
std
push
jo
pop
ror
and
cmp
retf
cmp
xor
mov
mov
out
shl
lods
push
mov
ins
in
fld
cmps
fdivp
inc
aad
dec
in
call
es
mov
mov
or
pushf
xor
cli
jae
dec
cmc
(bad)
test
cmp
ss
pop
push
lds
cs
sub
leave
rcl
and
mov
push
rcl
push
mov
or
rcl
cmc
push
movs
icebp
imul
js
es
ss
pop
push
push
fbld
mov
shl
jnp
xchg
or
les
scas
rcl
add
or
push
outs
test
retf
jne
adc
out
js
xchg
aaa
sbb
cdq
push
mov
ret
arpl
sub
mov
sahf
cmp
ds
mov
data16
retf
add
ret
std
xor
pop
and
test
pop
cmp
out
sbb
scas
imul
adc
loopne
pop
sub
xchg
iret
mov
cli
outs
inc
inc
mov
stos
add
pusha
in
outs
aaa
mov
push
mov
push
xchg
clc
bound
jge
pop
std
mov
aaa
sub
mov
shr
popf
dec
inc
push
dec
mov
sysret
xor
adc
pop
or
mov
push
push
jge
shr
xchg
mov
sbb
push
dec
imul
ret
sub
lock
pop
ficom
dec
push
push
ret
mov
xchg
cmps
outs
mov
mov
cmp
jae
cmp
pop
sbb
imul
mov
pop
rol
enter
sbb
popa
js
and
push
dec
pop
loope
hlt
loop
xchg
int
adc
jno
sbb
and
xchg
dec
das
inc
pop
ja
mov
(bad)
daa
cmps
and
mov
xchg
xor
jle
adc
mov
rol
aad
mov
mov
xchg
fs
mov
ret
push
idiv
in
popf
ja
lods
sub
pusha
mov
push
(bad)
sbb
jg
dec
into
ins
inc
add
movs
aam
or
push
xor
stos
pushf
repz
loop
cmp
mov
pusha
push
ins
sahf
lds
dec
sbb
jae
ret
jb
mov
lea
iret
repnz
pop
mov
push
cmp
dec
push
and
adc
pop
ss
out
xchg
pop
fwait
jae
xor
push
mov
enter
pop
out
or
jae
and
push
pop
test
cmps
retf
cli
dec
pop
jne
mov
jae
pop
add
push
xchg
mov
jne
push
out
repz
push
ficom
stos
cmps
aaa
add
xchg
pushf
lahf
dec
push
mov
addr16
sbb
loope
(bad)
in
pusha
sbb
aaa
cwde
jne
clc
xor
clc
sbb
test
mov
push
(bad)
je
pop
cld
jno
loopne
ds
jmp
mov
mov
cwde
fcomp
or
mov
mov
outs
jmp
cmc
xchg
call
pop
sbb
outs
inc
mov
push
cmp
call
add
jle
out
pushf
dec
adc
cld
adc
xchg
or
and
out
or
pop
pop
pusha
mov
mov
ins
movs
rol
push
xchg
add
sub
or
retf
shl
mov
xor
jns
out
rcr
and
mov
call
adc
add
mov
imul
pop
mov
push
loope
(bad)
fstp
fdiv
or
mov
movs
mov
inc
mov
aad
pop
cmc
jl
xchg
jb
clc
aam
pop
jle
inc
shl
rcr
or
leave
(bad)
pushf
out
(bad)
push
xor
ins
pop
fldln2
fcmovne
inc
jno
iret
in
and
nop
jg
sbb
and
into
mov
rcl
pushf
iret
push
fmul
cmps
pop
mov
mov
ja
push
cmp
pop
ja
jl
mov
adc
adc
int
call
pop
das
or
mov
rol
mov
mov
ss
leave
sub
xor
xlat
sub
movs
popa
and
xchg
ins
shl
ins
retf
sbb
dec
jnp
aaa
cmp
popa
int
(bad)
retf
add
pop
cmp
mov
mov
xchg
movs
adc
imul
out
es
bound
call
mov
mov
int
shl
rcl
cdq
jo
sbb
in
lods
xor
outs
add
and
(bad)
fucomi
or
mov
mov
push
loope
jle
mov
adc
push
push
retf
pop
cmp
dec
ss
in
stos
cs
xor
and
push
repz
sahf
mov
sub
(bad)
out
dec
test
adc
ret
dec
dec
and
shr
bswap
scas
mov
xchg
fild
pop
cmps
je
aaa
push
pop
adc
xchg
mov
ins
(bad)
fidiv
test
dec
repnz
mov
mov
sub
push
push
test
xchg
xor
xor
fs
or
adc
cdq
pop
mov
mov
add
cmc
bound
movs
mov
fsub
push
jae
inc
dec
enter
mov
adc
mov
pop
jb
aaa
nop
lods
mov
or
and
clc
inc
pop
mov
std
scas
popa
imul
icebp
mov
jmp
out
cmp
test
mov
neg
mov
out
(bad)
jmp
jae
or
js
jns
fidiv
xchg
fwait
in
fnstenv
adc
mov
cs
xchg
or
das
mov
ret
xchg
cmp
or
or
fwait
dec
stos
mov
xchg
xor
outs
in
mov
cmp
mov
test
sbb
pop
lods
lea
ds
(bad)
pop
aad
and
(bad)
sub
scas
mov
js
in
mov
stos
lods
mov
push
test
pop
les
jp
add
sub
push
xchg
adc
cld
pushf
and
pop
cld
adc
xor
mov
adc
outs
add
data16
lahf
jg
mov
rcl
(bad)
cmp
jl
imul
jbe
jb
inc
sbb
lea
cmp
xor
dec
int
inc
test
inc
dec
push
out
mov
pop
jp
clc
retf
js
mov
jno
mov
cmc
shr
pop
(bad)
fnsave
xor
rcr
or
xlat
push
sbb
inc
fwait
adc
(bad)
push
jbe
pop
mov
push
stos
or
dec
in
xchg
lea
sub
movs
xchg
or
push
sbb
jns
jo
mov
fimul
push
or
cs
push
xchg
(bad)
mov
icebp
test
pop
out
cmp
jl
fst
sub
cwde
push
add
ins
jbe
scas
fwait
pop
jbe
dec
pop
mov
push
sub
clc
jle
xchg
push
aaa
mov
or
scas
adc
mov
sbb
sbb
push
adc
clc
(bad)
sbb
fidivr
sub
loop
cld
test
xchg
aaa
dec
stc
loope
sar
dec
inc
pop
cwde
sub
fs
add
ins
or
cmps
js
in
cwde
xchg
sti
lahf
addr16
pop
dec
das
and
dec
pop
inc
les
mov
mov
mov
nop
push
hlt
aam
fisttp
in
jo
cwde
cmp
icebp
mov
out
jno
jne
popa
jmp
mov
ins
test
and
sub
call
retf
dec
jnp
jmp
bswap
xchg
movs
ret
stos
add
leave
in
pop
pop
arpl
dec
inc
popa
fdivr
stos
int3
sub
inc
repz
movs
xchg
cmps
arpl
inc
clc
lahf
fstp
int3
sbb
xor
push
add
std
cmp
push
mov
icebp
scas
push
dec
stos
rcl
adc
fwait
movs
push
outs
fs
jne
mov
xchg
mov
mov
xchg
out
dec
mov
pushf
jl
adc
push
pop
lahf
pusha
pusha
mov
fistp
and
pop
and
mov
and
push
inc
mov
sub
or
fldcw
or
stos
out
(bad)
jge
or
and
jno
mov
jno
push
pop
ds
in
pop
lods
push
xchg
add
pop
jo
mov
rol
push
(bad)
dec
lea
aaa
fadd
ins
lea
jl
hlt
jo
sbb
xchg
leave
pop
cmp
adc
rol
push
div
test
and
(bad)
(bad)
cs
mov
sahf
pop
jne
sub
es
lods
cmp
fld
pop
sub
xchg
xchg
cmp
cmps
mov
dec
mov
mov
int3
adc
(bad)
mov
xor
rcl
in
bound
push
test
shl
cmps
mov
in
pop
ror
lds
(bad)
inc
push
gs
and
out
idiv
ror
jle
movs
in
retf
pop
lods
retf
rol
cli
adc
aad
sbb
xor
hlt
and
jns
cmp
inc
push
dec
(bad)
pusha
push
lahf
loopne
pushf
or
les
ret
div
add
ss
mov
jg
int
and
retf
cmps
add
sub
jg
inc
pusha
imul
jne
in
mov
cwde
inc
sbb
dec
cwde
mov
pop
es
xbegin
add
sbb
in
retf
sbb
jne
lahf
jmp
data16
xchg
mov
retf
ss
mov
into
inc
cmp
sbb
cmc
fisubr
inc
popa
sbb
in
jbe
pop
add
rcr
stc
sbb
fwait
add
push
test
cs
add
shl
sbb
push
popa
xchg
lahf
test
jge
inc
ss
xor
popa
xlat
add
add
dec
push
sub
test
jns
and
jne
adc
pop
rcr
ins
pushf
dec
cmp
jb
in
cmp
adc
fsub
fisub
add
xor
ins
mov
std
pop
ret
mov
push
dec
das
aam
push
pop
pop
sahf
add
popa
sbb
push
push
cli
dec
xlat
and
mov
pushf
cmps
adc
je
adc
mov
ja
fsub
sub
or
dec
(bad)
cli
xchg
jae
pop
iret
cwde
popf
mov
inc
loop
xor
out
aas
lock
(bad)
sbb
std
and
(bad)
imul
int3
push
mov
scas
inc
adc
(bad)
repz
bound
(bad)
mov
movq
ins
mov
in
pop
sub
out
not
ret
sbb
lock
inc
ins
ins
push
cmp
ror
(bad)
push
mov
daa
ret
ret
movs
adc
std
mov
call
cwde
xchg
pop
cmp
dec
iret
push
sub
inc
dec
mov
push
jge
push
pusha
sbb
xchg
xor
cmp
out
mov
xchg
sahf
cmps
cmp
retf
fcmovu
jb
lahf
inc
call
(bad)
nop
out
jne
mov
and
jp
push
pop
cld
push
(bad)
jmp
mov
jle
pop
rcpps
cdq
fstp
cmps
push
pop
loope
push
dec
mov
ficom
clc
fiadd
pop
xchg
mov
movs
pop
(bad)
movd
lods
adc
push
pop
daa
nop
push
jge
add
cmp
cmps
fsubr
or
sub
in
outs
mov
sub
cwde
test
mov
push
ds
fcmovnu
test
out
inc
mov
xchg
xchg
sbb
(bad)
loop
adc
clc
jnp
or
cli
jge
xor
dec
pop
mov
lods
rol
mov
leave
dec
xchg
shr
push
(bad)
or
lods
inc
movs
gs
xchg
nop
sub
scas
enter
ins
adc
inc
mov
cmps
es
and
(bad)
repz
cmp
outs
imul
neg
jmp
xchg
clc
rcl
adc
mov
pcmpgtd
jbe
cmp
xchg
or
lock
stos
popa
out
dec
sub
sbb
mov
fadd
inc
cmp
sahf
push
movs
pop
sub
cs
sub
in
xlat
shrd
movs
adc
sbb
mov
popf
ret
sbb
mov
pop
jno
push
mov
cmc
ins
mov
mov
std
push
jno
mov
xor
mov
pop
push
mov
or
sub
rep
jnp
rol
or
jnp
loop
out
jnp
dec
je
xchg
push
fsub
out
mov
dec
lea
xchg
xor
push
mov
jg
inc
mov
(bad)
sti
sbb
and
mov
mov
daa
test
(bad)
aam
clc
lahf
mov
inc
cmc
mov
or
dec
mov
pop
and
sub
popa
sahf
adc
push
push
jno
or
je
repz
call
adc
stos
cwde
cmp
mov
add
jmp
ins
in
mov
mov
fsubr
aaa
mov
jo
rol
dec
pop
mov
push
pusha
int
mov
fld
inc
adc
mov
arpl
add
rdpmc
jns
adc
or
sbb
outs
mov
jp
xor
jns
ins
jle
mov
pop
push
cdq
sahf
mov
cwde
mov
cmp
fwait
or
out
neg
repz
xchg
js
ss
bswap
mov
sti
mov
adc
mov
pop
sbb
cld
mov
js
add
pop
in
iret
mov
lahf
je
mov
xchg
push
push
cld
ja
xchg
push
clc
fsub
mov
sub
inc
and
mov
push
int3
lods
test
sub
jb
cmp
(bad)
jo
dec
mov
xchg
idiv
inc
pop
(bad)
faddp
cmp
and
bound
lds
mov
mov
cmps
mov
xchg
mov
push
mov
dec
sahf
mov
dec
fxch
add
int3
push
jnp
or
scas
add
push
retf
mov
xchg
retf
jae
dec
inc
push
aaa
and
sbb
(bad)
dec
dec
push
jno
retf
into
clc
pop
pop
cmp
and
sub
lods
inc
inc
mov
gs
mov
jmp
push
test
dec
nop
cmp
popf
sub
addr16
aam
jmp
aad
imul
les
push
shr
pop
push
inc
mov
or
test
ror
shl
push
std
cmp
aam
sbb
xchg
ins
mov
lods
(bad)
mov
mov
xor
dec
jno
xchg
and
cs
std
jbe
ds
dec
sbb
rep
movs
push
lds
dec
int3
and
cmp
popf
sbb
xchg
fistp
in
and
pop
xlat
add
cmp
add
sbb
mov
hlt
mov
dec
scas
sbb
adc
cmps
and
adc
test
mov
mov
adc
rol
fcmove
mov
jns
je
mul
imul
push
test
inc
movs
or
and
cs
lea
pop
pusha
sub
mov
inc
fmulp
xchg
jo
sar
mov
es
lea
sbb
ret
inc
aad
mov
push
ret
push
ret
test
mov
xor
and
mov
mov
out
rol
mov
imul
xchg
push
adc
aam
out
test
ret
xor
dec
pop
outs
jl
jnp
popa
push
adc
mov
int
pop
push
sbb
jno
pop
je
xor
dec
push
jns
jo
push
std
rol
sbb
sbb
add
(bad)
mov
mov
into
outs
inc
adc
push
fadd
retf
pop
rcl
fs
int3
(bad)
fucom
sbb
std
iret
out
or
pop
cmp
nop
sub
xchg
cld
push
ins
shr
xor
stos
or
jne
lahf
cli
xor
inc
test
mov
loopne
pop
or
fild
imul
mov
in
cmp
xor
inc
stos
pop
mov
enter
and
shl
cs
sub
aaa
lds
call
cli
mov
ja
jne
cmp
dec
dec
dec
fs
mov
inc
hlt
imul
rol
mov
mov
pop
ret
mov
cdq
push
sbb
leave
scas
mov
xor
ror
jb
or
mov
xchg
push
inc
scas
mov
mov
sbb
add
(bad)
call
jae
cmp
fistp
ds
mov
jno
cmc
jo
mov
mov
sub
mov
jmp
fsubr
mov
cmp
push
ins
(bad)
cs
lds
lea
mov
mov
adc
and
test
dec
jmp
popa
not
sub
popa
ret
xor
movs
add
mov
xor
sahf
fdiv
fiadd
jbe
inc
jnp
jecxz
or
idiv
mov
jle
clc
push
dec
daa
out
leave
cld
pop
adc
dec
cmps
mov
pop
outs
repz
lds
addr16
lock
adc
jb
or
adc
ja
loopne
xor
and
pop
mov
or
jnp
aad
js
loopne
adc
nop
sqrtps
arpl
adc
and
scas
outs
mov
rcl
sub
xor
in
retf
rcr
call
movs
mov
pop
(bad)
test
dec
cli
leave
lods
jmp
enter
jmp
sub
loopne
in
outs
dec
dec
in
pop
lahf
dec
jmp
xchg
aam
sbb
fisttp
pop
adc
aas
(bad)
aam
mov
pop
addr16
xchg
fstp
repz
test
sub
ins
ficomp
pop
xor
jecxz
mov
mov
movs
or
fnsave
mov
popf
lea
aas
inc
int3
in
test
mov
lea
out
popa
inc
scas
mov
push
test
xchg
pinsrw
mov
retf
add
sahf
sub
mov
fucomi
sti
mov
sub
cmps
fs
cmp
pop
int3
pop
repz
test
inc
jae
or
xchg
sub
out
retf
lods
(bad)
popf
cmps
and
out
xchg
sub
cmc
test
mov
test
aad
push
sub
pusha
inc
xchg
stos
pop
(bad)
loopne
push
in
adc
mov
jl
cmp
mov
sub
jge
fsubr
(bad)
cmps
xor
dec
call
jge
mov
push
frstor
cmps
daa
loop
cmp
retf
push
mov
out
sub
int3
stos
sub
ins
icebp
jg
xor
mov
add
push
fwait
jg
outs
das
cmps
adc
nop
addr16
and
cs
fild
stc
cwde
mov
fistp
outs
jl
(bad)
ja
bound
scas
scas
ret
push
pusha
fadd
in
(bad)
shr
xchg
jns
mov
lock
mov
lahf
sub
ss
dec
fidiv
sahf
sub
imul
cmp
push
sbb
mov
jne
sbb
lea
xchg
daa
add
add
cwde
stos
cmp
lods
cli
cmp
cmp
jo
pop
ret
pop
popf
xchg
sub
xor
pushf
loop
sbb
stos
pop
test
dec
(bad)
call
jae
fadd
adc
sub
jb
adc
mov
fwait
sahf
loop
adc
sub
inc
mov
fisub
fdiv
test
fdecstp
mov
je
inc
pop
outs
push
dec
lahf
xchg
movs
fimul
and
es
adc
or
js
jae
addr16
mov
call
add
out
mov
sub
mov
fdiv
mov
cmp
scas
lds
hlt
adc
shr
shl
outs
into
fld
ins
pusha
ret
daa
or
ret
jle
lahf
outs
fwait
aaa
inc
jg
ins
mov
jnp
fnstcw
adc
push
pop
clc
ins
mov
mov
mov
mov
inc
and
dec
(bad)
inc
push
dec
pop
aad
or
xchg
push
or
cmp
push
aaa
mov
xor
call
xchg
mov
ds
mov
rol
dec
std
xor
sub
cmp
pop
mov
jnp
pop
push
inc
outs
mov
push
fisttp
sbb
clc
ds
in
xchg
cmp
inc
xor
lock
sub
stos
retf
mul
pop
cdq
inc
jmp
mov
xlat
cmp
outs
mov
jbe
push
cmc
sahf
(bad)
pop
push
cmp
out
popa
mov
clc
pop
adc
mov
xor
pop
clc
sub
ret
sbb
jo
mov
cmps
mov
or
xchg
jg
and
retf
test
push
test
in
rol
mov
mov
inc
mov
int
cdq
xchg
fst
dec
ins
enter
into
ja
test
cli
or
jo
cwde
(bad)
cmp
jmp
ins
inc
arpl
push
in
sti
out
into
leave
call
mov
adc
rol
out
sbb
jl
inc
in
test
sub
hlt
jmp
(bad)
into
add
in
ins
mov
sbb
fcom
daa
outs
imul
icebp
mov
mov
mov
aas
sbb
icebp
mov
js
adc
sti
ret
movs
rol
out
jle
outs
neg
adc
movs
xor
test
sbb
cmp
cmc
xchg
push
scas
(bad)
mov
repz
cwde
mov
sub
sahf
lock
push
xlat
push
push
stos
(bad)
outs
out
loop
push
xchg
jp
xor
jns
adc
dec
sub
or
out
icebp
and
in
cmp
inc
call
mov
jp
jns
dec
pop
jl
into
adc
sub
mov
inc
inc
cmp
(bad)
call
push
cmps
add
ror
and
ud1
mov
in
movs
or
ja
dec
cwde
adc
mov
pop
test
and
mov
(bad)
cmp
(bad)
je
xor
ins
leave
retf
adc
xchg
sbb
movs
jle
jp
cwde
push
add
hlt
lds
mov
inc
mov
out
jge
lods
fbld
jecxz
bound
imul
jne
cld
cmp
sbb
shr
xchg
dec
jge
fimul
lahf
scas
sahf
idiv
js
popa
or
sbb
nop
add
sub
xor
stos
mov
repnz
sub
push
add
push
into
ins
pop
ret
cmps
les
stos
cmp
hlt
xlat
or
mov
lahf
leave
popa
adc
test
movs
adc
lods
xor
mov
xor
dec
mov
sbb
push
adc
stc
mov
retf
push
(bad)
push
in
mov
lds
xor
fadd
pop
mov
cmp
and
cmp
int
jecxz
push
lea
xor
repz
or
iret
dec
lods
xchg
call
mov
ja
jge
mov
lds
test
inc
or
sbb
rcr
addr16
icebp
dec
int
mov
mov
aaa
shl
mov
cmp
dec
mov
aaa
xchg
sbb
in
inc
add
(bad)
pop
mov
(bad)
call
pusha
scas
test
jno
mov
clc
adc
jo
push
ins
xchg
cld
cs
retf
pop
cmps
or
xchg
pop
arpl
push
pop
xor
jmp
mov
shr
dec
sbb
xor
and
adc
or
leave
dec
mov
test
fcomp
adc
push
mov
sub
test
test
dec
test
and
and
mov
adc
mov
scas
adc
test
adc
popa
mov
jns
dec
push
das
hlt
(bad)
rcl
adc
movs
iret
and
loopne
call
mov
adc
jmp
gs
cmp
pop
mov
ja
jo
imul
jns
pop
push
xor
xor
test
adc
and
mov
sar
outs
push
or
pop
cmp
out
in
and
xor
out
pop
push
xchg
pusha
test
popf
add
cmp
test
mov
(bad)
ss
pop
loopne
push
xlat
mov
int3
jno
mov
push
shl
aaa
bound
jmp
shr
jmp
jecxz
test
push
cli
and
push
mov
popf
sub
sbb
mov
fstp
fsub
test
xchg
push
loop
and
in
arpl
dec
cmps
in
popf
movs
cli
jae
pop
or
ss
fmul
add
aas
stos
pushf
int3
test
or
movs
das
aas
ror
(bad)
jno
inc
jl
jp
movs
xchg
or
and
mov
push
sbb
dec
cmps
aas
xor
mov
xor
dec
mov
push
xchg
or
sub
and
jecxz
jmp
mov
ret
xchg
adc
cmp
outs
or
call
sbb
or
ds
stos
(bad)
lods
mov
mov
mov
dec
push
sub
push
or
xchg
mov
or
stos
inc
cmc
and
sub
neg
jg
ret
pop
or
fcmovu
ror
add
jno
jbe
enter
pop
push
call
fnsave
loopne
add
shl
mov
push
in
mov
push
mov
(bad)
outs
pop
or
sub
test
cmp
add
mov
jmp
fisttp
mov
lock
mov
(bad)
add
xchg
pop
sbb
aad
ins
lea
test
push
test
outs
adc
ror
rcl
cmps
mov
cld
aad
and
in
ret
movs
mov
sbb
addr16
sbb
out
cmp
call
pop
lods
add
pop
sub
add
jmp
scas
jbe
push
sbb
std
and
js
sub
pop
lock
or
out
into
addr16
in
add
jae
aaa
adc
scas
cmp
cli
dec
push
lods
vpsrld
cmp
pop
test
jmp
inc
(bad)
and
lea
fcom
imul
rcr
int
sbb
push
cmps
in
pop
dec
sub
shl
sub
scas
pop
adc
or
ins
ins
sbb
mov
aad
mov
in
pop
movs
(bad)
ret
inc
push
push
fadd
dec
mov
idiv
sub
push
or
popa
push
sbb
(bad)
test
iret
cmp
retf
psubd
inc
adc
stos
add
div
shl
in
cmps
push
into
lods
and
pop
add
ret
adc
(bad)
push
(bad)
cmp
jns
mov
and
stos
sub
(bad)
std
scas
sub
dec
push
call
test
mov
aad
fldcw
add
stos
int
xor
mov
daa
shr
int3
(bad)
jp
cmp
movs
mov
push
in
fs
(bad)
add
xchg
out
sub
cld
dec
adc
out
nop
push
cmps
fist
mov
cld
and
push
mov
mov
xor
and
out
addr16
loopne
or
leave
mov
nop
rcr
test
aam
cld
dec
mov
cmp
mov
cld
and
clc
icebp
xor
loop
or
xchg
dec
lahf
test
push
mov
jbe
inc
scas
mov
fs
inc
fstp
cmp
ror
sar
inc
jnp
add
(bad)
div
test
jbe
xor
fimul
xor
adc
cwde
fimul
mov
jns
es
(bad)
mov
bound
mov
jg
pop
int3
aas
mov
jmp
push
aas
ja
mov
mov
mov
jle
lds
jno
daa
rol
std
and
jg
mov
dec
(bad)
mov
icebp
mov
mov
sub
repz
ror
cmp
pop
jmp
cmp
lahf
rcl
nop
pop
pop
daa
call
dec
arpl
fcmovnbe
test
out
xchg
(bad)
js
xor
and
sub
push
shr
ja
addr16
push
test
pusha
pusha
adc
outs
mov
scas
adc
mov
jecxz
pop
xchg
xlat
push
and
pushf
ror
lods
popf
aaa
out
inc
inc
(bad)
in
ret
mov
in
push
aas
pop
rcl
les
or
sbb
xchg
mov
jbe
mov
cli
cmc
adc
mov
(bad)
mov
mov
mov
push
mov
shl
rcl
shl
lods
sbb
cmp
int
sbb
mov
stos
push
popf
xor
xchg
jmp
retf
xor
out
pop
and
adc
outs
mov
loop
mov
fcomp
pop
stos
js
dec
or
(bad)
mov
in
cs
gs
and
sbb
lahf
adc
out
pop
test
mov
push
imul
cmp
in
inc
addr16
sbb
inc
sbb
adc
push
(bad)
movs
test
les
bound
test
ret
push
nop
dec
mov
test
and
and
xchg
mov
adc
loopne
cmp
jmp
adc
jno
stos
sbb
inc
or
xor
jae
or
nop
(bad)
imul
sbb
inc
xchg
cwde
imul
ja
cmp
fmul
dec
dec
clc
xor
stos
ficomp
adc
add
adc
sbb
sti
jae
xchg
(bad)
jmp
fdivr
(bad)
js
mov
out
scas
push
pop
jnp
and
xchg
shl
es
xor
inc
sbb
out
fbld
loop
loopne
out
sbb
push
ins
xchg
(bad)
cs
mov
jg
lock
xchg
dec
mov
iret
mov
mov
dec
jne
push
loope
pop
dec
pushf
mov
cdq
aaa
adc
lea
icebp
arpl
add
dec
and
xchg
in
pop
pop
mov
(bad)
mov
jne
fisub
rcl
or
dec
jb
adc
cmp
cmps
jg
push
dec
pop
and
push
mov
jmp
out
clc
ja
fs
mov
push
adc
in
or
mov
call
xor
scas
xor
mov
cmp
and
mov
and
cmps
push
iret
rcr
movs
test
fcom
push
or
and
inc
sbb
cld
cli
imul
bound
jb
mov
sub
leave
sub
and
dec
pop
popa
loopne
ds
call
push
sbb
fst
fwait
test
xchg
and
add
cld
shl
cmp
xor
jns
mov
dec
mov
pop
lock
cdq
or
imul
test
cmp
leave
fucom
retf
call
fiadd
cmp
call
mov
aad
dec
pop
js
arpl
mov
xchg
mov
retf
stc
mov
cmc
(bad)
jb
imul
mov
and
lods
loop
addr16
adc
xchg
mov
jl
jnp
test
inc
fdivp
jne
xor
pop
inc
xor
mov
sub
ja
pop
xor
scas
adc
jmp
in
imul
xor
sub
popa
add
sub
leave
sbb
or
add
add
inc
(bad)
ss
or
sbb
sahf
add
or
pop
add
push
or
(bad)
jge
call
dec
pop
mov
lds
mov
add
fiadd
cmp
or
adc
add
fsubr
(bad)
xchg
adc
neg
add
cdq
rol
cld
lahf
call
add
cs
cld
adc
dec
movs
adc
mov
jo
inc
stc
iret
lahf
jne
xor
or
adc
gs
clc
adc
inc
xor
xor
popa
mov
and
pop
push
xor
hlt
mov
inc
out
rol
rcr
imul
push
ins
loope
cmp
push
out
and
ins
fmul
fisttp
std
iret
jmp
jo
cwde
push
jb
xor
push
sub
mov
jo
or
nop
lds
cmp
outs
mov
pop
xchg
dec
repz
jp
test
ss
outs
dec
xchg
add
test
mov
mov
jl
icebp
or
pop
dec
cli
pop
cmp
sub
data16
sub
lea
or
sub
push
jns
retf
mov
fnstenv
lods
(bad)
sbb
jo
movs
sar
aam
cmp
add
int
xchg
push
cmp
mov
dec
mov
pop
mov
cmp
ret
inc
inc
popf
xor
push
mov
push
in
xlat
pop
std
aas
inc
(bad)
inc
xor
dec
sbb
mov
dec
mov
inc
into
push
pop
arpl
add
sahf
and
outs
dec
xor
mov
fcom
jp
adc
imul
xchg
xchg
pop
xchg
stos
sbb
or
out
stos
sub
leave
call
dec
ss
or
mov
mov
ss
mov
add
ficomp
jo
js
xor
ror
add
mov
dec
jmp
mov
aam
rcl
cld
call
ret
xlat
xchg
loope
ror
add
stos
xchg
sub
push
dec
push
xchg
xchg
in
or
adc
add
push
(bad)
hlt
pop
mov
xor
addr16
mov
test
aam
mov
mov
sbb
addr16
jl
cmp
pop
ret
jae
sub
xor
cmp
cmp
pop
mov
fisub
lods
and
mov
imul
loop
fidiv
mov
std
scas
mov
push
(bad)
mov
ja
pusha
cld
dec
cmp
push
call
xor
lods
adc
ds
mov
and
repnz
sub
xchg
addr16
call
inc
mov
dec
dec
push
xchg
dec
ins
inc
dec
imul
cmc
mov
cmp
stc
ds
stos
adc
shl
fnsave
mov
xor
sbb
shl
fs
loope
dec
call
mov
dec
je
dec
cwde
xchg
or
xchg
jnp
sub
int3
es
adc
imul
push
mov
fcom
imul
movs
call
(bad)
cdq
sub
(bad)
mov
sub
popf
out
mov
push
lock
out
test
ds
retf
(bad)
inc
xor
sub
fwait
cmp
jo
dec
sbb
(bad)
sbb
adc
popa
jl
stc
or
push
or
adc
sti
dec
cld
test
lods
push
add
int3
xor
jmp
(bad)
pop
push
inc
push
xchg
sti
jo
lea
sub
and
dec
into
ror
sub
icebp
cmps
add
pop
cmp
bound
pop
fild
cmc
cmp
cdq
fadd
in
xor
and
ror
je
xor
js
dec
or
sbb
shl
mov
mov
xchg
xchg
cmp
push
loopne
call
cli
repz
(bad)
dec
test
mov
inc
es
xor
xor
pop
adc
mov
addr16
arpl
mov
daa
xlat
(bad)
sbb
pop
sub
les
adc
fcomp
mov
inc
leave
jbe
test
addr16
jmp
and
inc
(bad)
mov
ja
int3
std
pusha
out
sti
lods
jle
jle
pop
arpl
aam
add
das
aaa
in
test
push
imul
inc
xchg
mov
scas
xchg
in
jne
out
mov
xor
pop
out
call
cmp
or
add
cmc
mov
shl
scas
jns
aad
scas
pop
mov
mov
fnsave
or
and
fwait
jbe
cmovno
xor
jbe
mov
imul
jmp
sahf
xor
aad
test
cmc
dec
dec
test
in
les
fs
add
mov
xor
mov
outs
stos
mov
push
cmp
in
dec
jge
fnstsw
imul
nop
ins
inc
sub
shr
mov
xor
sub
fmul
xor
not
lock
mov
fdivr
sub
out
retf
lods
sbb
inc
mov
mov
pop
dec
inc
xor
jmp
jne
push
in
pop
sti
fdiv
sar
out
mov
dec
xor
and
sub
dec
pop
and
pop
(bad)
vorps
in
mov
cmp
jp
in
imul
push
pop
pop
lds
lahf
mov
div
ja
shl
fst
xchg
shr
outs
xor
loop
leave
jl
xchg
dec
cmp
add
add
add
lea
sub
ins
cmps
loop
jmp
or
push
sub
mov
xchg
fwait
add
jb
jecxz
or
pop
mov
and
dec
shl
mov
(bad)
pop
cdq
mov
add
imul
lods
push
xchg
pop
push
mov
enter
mov
fcomip
pop
int
jne
es
mov
push
sahf
inc
add
push
add
xchg
call
mov
and
cli
mov
or
mov
or
int
mov
ss
sbb
xchg
test
push
or
sub
fistp
ins
rcr
mov
jmp
adc
dec
int
fist
(bad)
movs
hlt
xchg
jno
or
mov
pop
out
es
aam
(bad)
jmp
cli
inc
push
sbb
test
lods
push
fimul
pop
pop
inc
xchg
into
add
inc
int
dec
retf
adc
sub
imul
sbb
ss
sub
sar
inc
adc
sbb
xor
scas
inc
mov
pop
cmp
fwait
xor
out
(bad)
repz
sub
pop
adc
aaa
test
and
push
pop
cmp
lock
pop
fimul
inc
xor
jg
push
xor
(bad)
into
stc
imul
pusha
loop
(bad)
call
retf
jmp
sbb
je
jp
sahf
sub
retf
test
int
mov
rcr
inc
pushf
(bad)
repz
mov
cwde
fisttp
jae
or
mov
pushf
or
clc
dec
mov
cmp
imul
adc
cdq
pop
int3
mov
outs
dec
cmp
or
sbb
and
add
test
cmp
fcomp
xchg
push
jb
push
cdq
mov
fadd
xlat
cmp
cdq
fwait
pop
sub
adc
xor
mov
adc
xor
mov
mov
js
jo
in
xor
xchg
mov
(bad)
xor
push
and
adc
inc
mov
out
loope
push
shl
sub
bound
mov
iret
inc
mov
icebp
dec
outs
mov
and
neg
scas
out
jle
sub
scas
clc
jecxz
scas
shr
je
js
mov
out
out
mov
adc
mov
(bad)
test
movs
popa
imul
push
pop
aad
and
add
(bad)
mov
sub
inc
inc
jl
inc
out
sub
sahf
cmps
add
jl
sub
fld
popf
sti
and
outs
dec
stos
xchg
xchg
or
mov
jae
mov
or
es
movs
shl
mov
pextrw
(bad)
mov
stc
push
or
push
out
data16
in
sub
test
mov
xor
and
jmp
sub
movs
dec
add
lock
add
mov
inc
and
cmp
jl
sub
jnp
xor
data16
jmp
push
pop
aas
shr
pop
lea
retf
and
mov
shl
in
loope
cmp
in
or
(bad)
xlat
das
aad
mov
and
in
mul
daa
xlat
rep
aad
mov
(bad)
add
adc
outs
xchg
cmp
gs
ins
icebp
dec
push
stos
test
inc
(bad)
fistp
pop
sub
inc
xlat
pop
shl
xlat
xchg
jae
out
adc
push
mov
lods
sti
mov
jno
rcpps
test
(bad)
leave
mov
cmove
hlt
mov
inc
in
or
daa
mov
in
lods
mov
cwde
mov
push
mov
jge
imul
jge
adc
pop
jp
pop
movs
lea
adc
push
jmp
xchg
adc
aas
shl
loop
lods
push
mov
icebp
(bad)
inc
xchg
mov
pop
xadd
sbb
sbb
addr16
es
dec
mov
loopne
dec
aad
fimul
imul
(bad)
xchg
ret
outs
in
push
pop
and
mov
fistp
xor
xor
int3
in
ins
sub
adc
rdmsr
push
cmp
nop
adc
bound
cmp
dec
add
addr16
pusha
dec
mov
lods
xor
cmps
(bad)
lods
or
out
sbb
sbb
shr
cld
retf
loope
cwde
pop
lock
push
ins
mov
hlt
cmp
test
into
mov
rol
fcomp
adc
xchg
add
mov
outs
test
or
cli
mov
xchg
jno
mov
jnp
push
mov
pop
mov
retf
rcr
(bad)
fwait
test
retf
rcl
nop
out
mov
or
ins
or
xor
mov
out
mov
test
aaa
das
(bad)
xchg
mov
sbb
or
jmp
mov
adc
push
cmp
into
mul
xor
sbb
adc
xchg
dec
shr
mov
jle
push
and
sbb
adc
leave
js
mov
or
and
ins
test
adc
and
inc
shl
in
dec
call
jnp
in
xor
imul
pop
or
loope
jae
in
test
jmp
jno
pop
xchg
ja
out
push
lods
in
adc
clc
add
test
loop
mov
add
xor
and
push
cmp
jb
sub
jnp
cmp
mov
xchg
inc
imul
fidivr
sbb
int3
sub
dec
push
or
jnp
pushf
xrelease
xchg
pop
sahf
mov
sbb
or
stc
jl
(bad)
sbb
in
scas
aas
pop
icebp
das
in
bound
sub
adc
jmp
call
pop
xchg
stc
mov
xchg
lods
pop
add
addr16
hlt
mov
sub
daa
cld
mov
adc
xor
fsubr
rol
rcr
dec
fwait
int3
pop
lds
retf
out
xor
into
aam
mov
retf
pusha
or
dec
jbe
and
or
mov
pushf
scas
dec
adc
jne
(bad)
fisubr
fsubr
ret
mov
cmp
inc
retf
cmp
and
data16
adc
je
aad
inc
adc
adc
add
loopne
xchg
shr
push
mov
bnd
cmp
sbb
push
mov
aas
and
pop
xchg
cmovp
push
xchg
aam
aas
test
cmps
jb
leave
mov
(bad)
lock
leave
cmp
cdq
mov
(bad)
xlat
fsub
pop
mov
rol
inc
mov
mov
push
arpl
mov
mov
sub
jb
mov
jmp
jbe
sbb
cwde
or
pop
inc
sbb
mov
(bad)
mov
movs
lods
in
scas
push
push
popf
ja
dec
adc
fcomp
inc
jl
jbe
push
push
pop
pop
jns
xor
jmp
mov
in
fcmovb
imul
ror
repz
cmc
iret
(bad)
push
xchg
(bad)
call
xlat
out
sub
push
test
test
xchg
jo
inc
fdiv
test
sbb
adc
rcr
icebp
dec
push
mov
sbb
shr
jne
mov
adc
jne
dec
dec
in
(bad)
(bad)
iret
ins
push
mov
fidiv
jle
lods
cdq
ss
pop
push
push
icebp
jge
in
stos
add
js
dec
(bad)
push
xchg
mov
rcr
push
cmp
in
inc
mul
sbb
movs
lock
(bad)
lods
fisttp
outs
(bad)
popf
(bad)
in
out
cvtdq2ps
cli
pop
adc
out
out
hlt
xchg
pushf
outs
js
push
cdq
retf
pop
aaa
adc
out
sub
movs
cmp
mov
idiv
pop
push
lods
inc
ror
cld
fwait
jp
ja
adc
shr
and
push
movs
arpl
ds
imul
pop
dec
dec
push
cli
jae
pop
in
and
in
push
and
xor
fdivr
ja
and
add
shl
cmps
test
sbb
iret
xor
rol
add
(bad)
in
je
adc
mov
repnz
jg
mov
retf
mov
inc
mov
or
out
lock
das
cmp
pop
es
jne
mov
lahf
jge
fadd
sub
xchg
add
jnp
(bad)
mov
jne
hlt
inc
lods
jp
add
push
das
(bad)
mov
ins
lea
cmp
hlt
inc
gs
int
aad
jmp
mov
je
jns
rol
mov
dec
std
mov
xor
hlt
xor
cmp
jno
sbb
jmp
or
or
adc
pop
mov
mov
lahf
mov
mov
add
inc
cwde
add
std
cli
inc
jmp
setb
push
fisubr
stc
loop
adc
push
push
xor
addr16
xor
ret
aam
loop
push
test
xchg
mov
pop
ror
mov
cdq
cs
ficom
test
sti
(bad)
mov
mov
outs
cmc
xor
fcomp
(bad)
out
push
(bad)
sbb
gs
mov
aad
pop
mov
sub
mov
mov
cmp
dec
add
cld
sbb
or
ror
or
movs
and
pop
and
retf
(bad)
cmp
mov
std
lods
and
retf
xchg
push
and
pop
int3
test
cmp
call
sbb
xor
inc
mov
fisttp
daa
test
cmc
and
cmps
and
cmp
pop
mov
mov
js
xchg
mov
dec
and
adc
cmps
out
je
daa
and
sub
in
adc
gs
sbb
and
mov
sbb
dec
cmp
and
sub
fdiv
rol
cmps
inc
dec
imul
dec
sub
sbb
pop
add
aaa
test
call
cmp
das
dec
mov
xchg
stos
dec
sub
push
cs
popf
int
loop
mov
jb
nop
(bad)
out
fucomip
push
movs
out
mov
jp
and
enter
popf
fs
sahf
cmp
popa
test
sti
(bad)
div
fdivr
mov
sti
mov
push
loope
dec
cmp
or
xchg
jmp
push
lahf
scas
xchg
add
pop
je
push
xchg
sar
add
mov
add
rol
stos
ret
xlat
leave
adc
xor
mov
mov
inc
inc
sbb
push
pop
fsub
sti
les
dec
add
sub
outs
cmp
(bad)
scas
fidiv
aam
push
xor
test
mov
lds
add
cld
xchg
jnp
into
iret
test
stc
xor
repnz
adc
sub
stos
sbb
jecxz
into
pop
xor
mov
mov
xchg
ret
(bad)
(bad)
hlt
sbb
pop
adc
push
sbb
fxtract
cmps
cmp
stc
cli
or
shr
jb
mov
fidivr
bswap
mov
pop
scas
sbb
icebp
sbb
cmp
dec
add
xlat
out
(bad)
(bad)
jge
icebp
dec
mov
or
lahf
sub
inc
mov
mov
adc
mov
lods
fcom
pop
inc
rcl
mov
test
xchg
mov
gs
and
xor
std
inc
sbb
xchg
add
adc
lds
add
rol
dec
scas
cmp
cwde
mov
xchg
push
test
sbb
jo
or
push
cs
or
xor
bound
out
imul
ins
lods
and
mov
lea
mov
dec
inc
ins
int3
cmp
sbb
and
jge
dec
scas
dec
lock
cdq
test
iret
mov
push
cmp
xor
or
fisttp
outs
pop
(bad)
jp
jns
or
mov
xchg
nop
xchg
and
aaa
sbb
in
mov
cmp
clc
loopne
xor
xchg
adc
xchg
xor
xchg
jbe
in
rcl
mov
adc
jns
push
ret
pop
sub
mov
pop
shr
lock
leave
dec
ds
ret
pop
pop
cmc
out
jo
sbb
popa
xchg
out
clc
jne
pop
mov
aad
push
or
pop
xchg
jns
mov
inc
pop
ds
and
cmc
jmp
fimul
jmp
icebp
add
jecxz
push
mov
pop
xchg
cmp
ud0
loop
(bad)
clc
pop
sub
mov
inc
jmp
mov
aaa
and
mov
adc
loop
cld
adc
inc
call
sti
mov
push
xor
xlat
pop
or
pop
fnstenv
arpl
scas
stc
stos
mov
jae
dec
retf
xor
dec
mov
mov
cdq
mov
sar
add
push
imul
aaa
in
(bad)
retf
jne
xor
jmp
xor
inc
(bad)
and
add
test
push
out
sbb
mov
adc
repnz
push
(bad)
mov
adc
or
jmp
out
scas
mov
mov
rcl
repz
push
loopne
gs
imul
inc
mov
rol
adc
inc
ins
push
xchg
jbe
pop
add
add
and
mov
xchg
jmp
aad
mov
es
fsubp
inc
into
pop
add
xchg
inc
dec
es
or
xchg
pop
push
js
dec
mov
stos
fs
mov
inc
pop
and
test
sbb
sbb
pop
mov
dec
cli
inc
xbegin
dec
jno
push
cmp
mov
pop
mov
or
pusha
xor
inc
push
test
sbb
fsubr
ins
jmp
push
jg
pusha
retf
xor
push
retf
in
(bad)
loope
pop
movs
stc
aam
jg
or
stc
jne
pop
dec
ins
mov
cmp
mov
and
push
mov
ror
mov
push
pop
stc
mov
push
cmp
sti
adc
or
pop
int
lods
dec
mov
xor
icebp
mov
out
imul
test
repnz
dec
cmc
mov
idiv
stos
loope
or
sbb
inc
out
in
retf
mov
mov
aas
iret
xor
pop
int3
and
popa
shl
push
xor
jo
in
mov
cmp
push
adc
inc
daa
dec
sar
aam
std
mov
add
jns
jb
loop
sub
cld
adc
adc
pop
int
cmp
shl
and
jge
push
nop
add
ds
push
popf
push
ret
xchg
lahf
jae
sahf
jl
test
in
cmps
call
rcr
sub
push
add
outs
fsub
test
int3
mov
call
call
pop
jae
hlt
sahf
jle
iret
sbb
pop
es
push
popf
add
(bad)
les
in
loop
mov
xchg
dec
jmp
sbb
add
mov
or
jno
daa
int3
int3
jle
movs
outs
arpl
test
cmp
pop
inc
sub
pop
cmc
ret
dec
(bad)
popa
rcr
inc
mov
rol
xor
lods
ds
inc
nop
mov
outs
sub
(bad)
sbb
sub
jo
call
jmp
jo
sub
jg
or
mov
jnp
popf
mov
cmp
cmp
inc
dec
test
pusha
lods
sbb
cld
jns
ins
add
loopne
adc
(bad)
xchg
adc
fiadd
ins
lods
sub
scas
xchg
loope
loope
out
push
cmp
outs
repnz
cmp
call
int3
stos
jnp
cmp
in
outs
pop
push
movs
imul
test
sub
cmps
sub
push
aas
xor
out
xchg
adc
xlat
scas
sbb
(bad)
aad
inc
xor
push
lods
adc
imul
test
adc
push
outs
sub
push
out
jg
jbe
sub
push
into
mov
sbb
mov
push
mov
dec
pusha
in
outs
lock
test
ins
pop
icebp
push
sbb
sbb
cmp
scas
js
adc
in
or
cmp
hlt
add
fwait
outs
out
fwait
jecxz
fistp
push
dec
sbb
mov
shl
push
sub
ins
ins
jl
aam
dec
adc
xchg
jno
mov
adc
nop
(bad)
ror
sar
add
and
(bad)
add
imul
inc
dec
mov
jge
addr16
sbb
pop
xor
xchg
adc
pop
cmp
shl
xchg
pop
dec
cwde
inc
stos
and
addr16
ret
ins
(bad)
push
int
pop
inc
cmps
xor
add
test
popa
adc
xchg
in
mov
push
xchg
sbb
into
xchg
cmp
daa
sbb
jns
imul
or
and
push
rcl
stos
shl
loopne
push
repnz
xlat
and
fisub
pop
int3
mov
stos
pop
aaa
adc
cmp
xor
fwait
push
mov
jmp
ins
and
shl
fwait
js
aaa
inc
adc
adc
fs
push
out
out
dec
cmp
or
inc
por
jb
rcr
stc
bound
pop
mov
adc
xor
mov
fistp
popf
push
xchg
or
pusha
mov
inc
mov
popf
repnz
adc
enter
inc
push
aad
cmp
xlat
jg
jl
scas
adc
inc
and
cwde
jne
ins
and
push
jmp
dec
shl
dec
jb
xchg
xlat
ins
fst
mov
xchg
arpl
mov
aas
jmp
adc
aad
sahf
call
inc
mov
xchg
clc
and
jmp
xor
jmp
xor
add
es
xchg
or
in
xor
ss
adc
iret
pop
imul
pop
fwait
in
outs
add
adc
cmps
loope
or
scas
test
in
sub
cmp
ficomp
or
sub
mov
sub
bound
or
jmp
dec
pusha
push
imul
dec
mov
jmp
or
jmp
push
xor
daa
and
inc
mov
push
ins
adc
mov
popf
hlt
bound
shl
mov
jns
test
xchg
fcomp
std
jmp
rcr
push
aad
inc
ficom
push
inc
pop
arpl
adc
ds
sub
fwait
stos
jnp
dec
das
ficomp
add
adc
outs
or
pop
pop
fisttp
rcr
cmc
outs
cmc
fwait
mov
push
retf
psrld
loope
mov
test
bound
push
adc
mov
call
xchg
add
mov
sub
scas
jbe
dec
add
and
shr
mov
sbb
push
mov
gs
fimul
inc
mov
sbb
and
loope
test
fnsave
retf
scas
repnz
cmps
jae
cmp
sbb
adc
addr16
mov
xchg
adc
in
stos
ror
pop
jecxz
push
xchg
mov
dec
mov
xchg
or
outs
pop
or
add
sub
cli
dec
sub
jb
or
sub
mov
jp
pop
imul
(bad)
in
rcr
mov
xlat
(bad)
mov
adc
jg
and
pop
and
jecxz
shl
xchg
es
mov
pop
retf
jbe
loope
mov
call
mov
(bad)
sub
repnz
test
xor
pop
cmps
mov
jg
pop
fiadd
arpl
repnz
imul
imul
xchg
or
loop
gs
xchg
adc
mov
push
add
shl
xor
ins
jnp
cmp
stos
push
mov
mov
imul
aad
pop
sbb
les
cdq
rol
dec
aas
clc
ret
test
call
das
xchg
and
xchg
ret
out
out
mul
test
or
xlat
push
mov
mov
call
test
mov
xor
push
daa
dec
pop
mov
popf
pop
cwde
push
js
sbb
in
movs
icebp
shr
fs
stos
test
add
push
enter
fucomip
mov
movs
into
sahf
pop
pusha
repnz
pop
bound
mov
movs
push
sub
in
call
mov
push
and
mov
adc
xchg
xchg
dec
dec
xchg
xchg
jmp
jb
loope
sar
sbb
cmp
push
es
hlt
clc
scas
cli
cmc
add
adc
out
shl
inc
pop
pusha
push
ins
xchg
dec
sub
out
fiadd
aam
ffree
in
inc
adc
mov
dec
xor
mov
adc
mov
clc
div
pop
fdivr
mov
movs
jbe
mov
std
les
test
or
push
mov
cld
xchg
test
and
pushf
cmps
(bad)
into
jmp
mov
jmp
adc
fisubr
test
sbb
xchg
cmp
outs
add
sub
mov
fld
in
jnp
sub
das
sub
mov
movs
outs
pop
ds
push
ins
inc
call
(bad)
and
ret
ret
les
add
shl
nop
sub
scas
pop
cmp
lods
xchg
fsubr
aas
pop
sbb
int
inc
mov
rcl
or
mov
rol
shl
cmc
bswap
(bad)
shl
cdq
and
rcr
push
push
js
loopne
sub
les
adc
stc
or
jmp
clc
icebp
lds
or
mov
fisub
adc
popf
imul
jb
sbb
xor
(bad)
lds
scas
or
adc
jno
cmp
outs
fadd
inc
sbb
std
iret
adc
lods
pop
fisubr
popa
lods
jle
rol
fcomp
and
ss
fisubr
push
setp
leave
inc
and
cmp
add
mov
and
xchg
imul
int
je
sub
inc
call
loopne
sbb
aaa
push
adc
rcl
je
cmps
mov
mov
xor
xor
loopne
inc
or
push
push
xor
popa
and
fwait
mov
(bad)
jno
pop
or
popf
push
jmp
jle
mov
jp
fs
aam
dec
cli
sbb
(bad)
jmp
push
pop
inc
inc
fidiv
mov
mov
leave
pop
or
out
sahf
dec
mov
sar
sbb
push
mov
dec
bound
mov
push
push
retf
movs
cs
jp
(bad)
mov
push
test
in
push
dec
jno
arpl
iret
jnp
cmps
shr
sbb
in
in
jae
pop
mov
sti
xor
sub
pop
and
cwde
or
inc
inc
xor
popa
push
and
cli
imul
scas
stos
push
mov
push
xor
adc
into
xor
inc
mov
lds
scas
and
cmp
jmp
push
loope
ret
push
mov
pop
mov
cmp
xchg
pop
fbstp
xchg
popa
fs
add
imul
xchg
mov
lea
jb
std
inc
mov
lods
sub
or
inc
ret
dec
in
(bad)
push
mov
jmp
inc
push
(bad)
jl
xchg
clc
xchg
pop
mov
scas
fidiv
outs
jmp
sbb
inc
sbb
or
aad
cdq
dec
in
mov
inc
popa
(bad)
imul
jg
scas
dec
xchg
adc
dec
and
in
out
mov
mov
push
test
test
dec
scas
cdq
pop
dec
movs
data16
int3
jae
fidiv
jl
sub
cs
xor
xor
adc
cmp
outs
jo
mov
hlt
adc
cmp
(bad)
cmp
sub
ds
popf
stos
movs
push
sbb
mov
inc
adc
int
mov
xor
loope
xchg
cli
in
clc
stos
nop
push
mov
mov
lods
rol
cld
aaa
dec
data16
dec
push
jmp
sub
and
sub
into
pop
cmp
(bad)
sub
dec
jnp
add
sbb
cmps
push
mov
xchg
aas
jae
cmc
mov
mov
jb
ja
xor
mov
xlat
jnp
mov
dec
mov
das
dec
mov
sti
rcl
pushf
arpl
adc
(bad)
popf
push
data16
rol
cmps
mov
jbe
mov
shl
sub
mov
dec
fmul
xchg
pop
sahf
push
add
aas
push
or
jle
add
fwait
movs
jp
jae
jp
cmp
push
call
add
int
ficomp
test
loop
dec
jnp
push
dec
mov
(bad)
inc
push
mov
mov
repnz
add
jmp
rcr
test
sub
fnsave
je
mov
aas
inc
jmp
popf
js
cmp
or
retf
cmp
adc
mov
test
sbb
cmps
(bad)
cmp
jbe
nop
dec
mul
and
or
scas
cs
sub
out
mov
fild
mov
adc
jecxz
xchg
push
jmp
push
iret
sub
or
push
mov
popa
xchg
idiv
push
(bad)
mov
cwde
dec
out
mov
lahf
inc
pop
xchg
push
in
xchg
push
xchg
sbb
dec
sti
cmps
cmp
add
jmp
pcmpgtw
and
retf
mov
lods
cmp
cmp
xchg
shl
and
cmp
jp
fadd
into
and
div
or
or
loopne
push
jle
lds
nop
jge
scas
dec
sub
out
jp
xchg
dec
mov
cmp
fdiv
mov
pushf
retfw
xor
out
push
sbb
inc
add
jo
jns
mov
in
mov
les
xchg
pop
retf
mov
sbb
jg
push
mov
mov
sar
les
sub
xchg
adc
mov
jp
fst
mov
lods
pusha
add
movs
sbb
pop
cmp
call
cs
push
lahf
(bad)
and
xchg
(bad)
mov
js
sbb
jae
je
sti
mov
mov
push
lods
jbe
jmp
daa
movs
mov
xlat
scas
retf
push
xchg
lock
aam
int
shl
jns
add
xchg
cmp
adc
je
int
cmps
sbb
jp
inc
int3
out
enter
adc
loope
xchg
cmp
mov
sets
or
ins
inc
das
test
xor
xchg
push
(bad)
sar
sbb
inc
pop
retf
cmc
or
daa
loope
xor
shl
(bad)
jp
dec
push
jbe
in
dec
pop
cmps
cmp
inc
or
pop
mov
stos
sub
lahf
lods
pop
(bad)
and
pusha
rcr
dec
cmp
in
pushf
add
sub
shr
popa
jnp
or
cmp
and
repz
int
xchg
cmp
xchg
clts
int3
call
pop
daa
push
or
and
add
mov
jbe
in
mov
mov
(bad)
adc
xor
fstp
cmp
and
xor
push
ja
inc
test
(bad)
movs
mov
mul
jmp
sbb
cmp
mov
pushf
jns
inc
jp
aam
lds
jns
mov
enter
ds
nop
sub
jns
xor
add
or
bswap
cmp
mov
jl
popf
(bad)
jno
sub
xor
or
mov
jbe
retf
cdq
xor
adc
jnp
push
sub
shr
clc
outs
dec
push
out
neg
push
add
add
or
xor
and
lahf
sbb
jbe
adc
out
(bad)
cs
pop
xor
pop
inc
or
and
cmps
push
or
lahf
pop
inc
mov
mov
pusha
sbb
jns
cmps
push
movs
pop
xor
jmp
adc
rol
inc
and
lock
push
xchg
xchg
mov
or
cmp
pop
std
cmp
pop
neg
les
push
sub
popa
dec
int
lea
sub
cmp
addr16
jl
dec
pop
xor
lods
pop
mov
shl
xchg
clc
xchg
xchg
or
inc
shl
and
jmp
(bad)
cmp
pop
enter
das
jl
sub
pop
sbb
jb
(bad)
pushf
jo
fst
mov
(bad)
mov
mov
repnz
lea
jge
push
inc
int
dec
leave
test
lds
sub
inc
fwait
ret
push
out
div
and
in
or
or
adc
out
mov
push
(bad)
stos
mov
lods
adc
xchg
sub
and
test
and
sub
jle
push
lods
xor
outs
test
jo
sti
shl
iret
gs
cmp
fdiv
mov
jg
int3
jmp
aas
and
sub
jmp
call
sbb
aas
shr
push
mov
out
add
rol
in
pop
call
lods
add
add
jbe
pushf
pop
stos
pop
jo
outs
(bad)
cld
mov
fistp
jl
push
dec
int3
inc
aas
ins
mov
mov
sub
or
daa
xchg
mov
xchg
jno
xchg
cmp
pop
inc
adc
loope
sbb
dec
popa
sub
dec
xor
and
das
mov
aad
stos
lahf
iret
push
inc
ret
not
fist
imul
cmp
xor
int
push
inc
cmp
adc
mov
mov
ja
stc
xchg
mov
jbe
mov
pop
dec
or
cmp
push
dec
add
data16
sbb
sbb
push
inc
call
adc
inc
mov
stos
dec
mov
xchg
and
test
lods
stc
add
mov
push
and
push
jge
push
sbb
mov
jle
sbb
sbb
push
push
mov
mov
mov
xchg
and
push
and
jmp
ins
addr16
sub
mov
pop
push
xchg
pop
mov
scas
cmp
nop
push
inc
mov
leave
adc
add
adc
xchg
aas
dec
imul
hlt
push
mov
fs
push
scas
rdpmc
mov
lahf
arpl
(bad)
mov
sbb
or
int3
dec
out
scas
xchg
idiv
fld
jae
xor
xor
mov
push
imul
gs
das
xor
mov
dec
das
xchg
ffree
dec
packssdw
xor
stos
cmp
cs
jo
shl
sahf
loop
inc
push
sbb
sub
jae
push
sbb
ins
xchg
ins
loope
mov
jle
je
inc
push
lea
xchg
mov
push
dec
adc
aas
ficomp
call
in
test
jmp
in
sbb
sbb
mov
xchg
daa
imul
push
bound
xchg
ror
ins
lahf
cmps
xor
push
js
(bad)
xchg
loopne
cdq
je
hlt
imul
inc
test
mov
sbb
jp
into
js
add
and
mov
add
je
gs
sbb
cli
scas
ret
xor
mov
aam
push
adc
aaa
out
dec
inc
cmp
fidivr
test
xchg
sbb
js
pop
mov
cmp
inc
mov
in
xor
das
nop
sub
jnp
jbe
cmp
sahf
mov
inc
sub
xchg
jns
lahf
add
sbb
inc
and
jge
sbb
fsubr
sub
inc
lods
rcl
in
(bad)
mov
and
mov
push
test
jae
mov
add
mov
mul
mov
pop
in
sbb
inc
xchg
lea
sbb
icebp
jmp
repnz
xchg
ins
cmp
jo
loop
add
fadd
cdq
ffree
or
xor
mov
sbb
repz
cli
out
lds
(bad)
cli
imul
lea
add
dec
or
ja
pop
xor
push
dec
loop
into
outs
jno
adc
jns
jns
cs
ficomp
mov
jmp
imul
movs
test
mov
scas
pop
loop
sar
shl
cmp
mov
ds
mov
jecxz
movs
sahf
xor
push
add
mov
scas
cmp
add
mov
popa
mov
std
adc
in
popf
pop
xchg
fldcw
or
js
ret
ror
cmp
jecxz
adc
or
ret
jbe
add
xchg
es
pop
push
inc
imul
or
aaa
jnp
sbb
addr16
and
sbb
rcr
sbb
sbb
scas
push
jne
cwde
mov
fwait
pushf
inc
jne
mov
cld
dec
or
fstp
pop
ins
lock
pop
lahf
jp
in
test
xchg
cs
leave
aaa
pushf
xor
mov
push
(bad)
xchg
and
test
mov
in
fs
jl
mov
shl
pop
fisttp
dec
fsubrp
daa
dec
cli
mov
fdivrp
cdq
xchg
dec
repnz
test
ja
ins
jb
pop
hlt
mov
dec
ret
mov
jb
add
adc
daa
jbe
call
or
rcr
stc
popf
mov
test
(bad)
xor
pop
cwde
xlat
xor
dec
idiv
pop
pop
cmps
pop
sub
int
jp
cs
xchg
dec
fcomp
pushf
retf
(bad)
cmps
jno
sub
push
mov
cmps
out
jb
jle
xor
push
sub
and
test
(bad)
fs
(bad)
cmc
jnp
sub
bound
dec
lods
jecxz
sbb
neg
pop
dec
fbstp
adc
cmp
jecxz
aam
jne
mov
adc
push
push
or
and
pushf
lock
test
aad
enter
cmp
(bad)
mov
(bad)
cmp
push
retf
mov
retf
xchg
popa
add
ret
iret
imul
mov
push
mov
daa
(bad)
sbb
adc
pop
mov
xchg
sbb
sbb
mov
or
call
and
fisttp
mov
push
or
mov
or
stos
aaa
iret
jno
fld
xchg
jo
clc
(bad)
adc
cmp
lahf
mov
fdivr
movs
stos
sub
dec
sub
dec
sbb
dec
cmp
je
fadd
jecxz
into
push
sbb
(bad)
rcr
push
jns
int
mov
mov
in
jmp
xor
add
ficom
or
inc
mov
dec
stc
fnsave
adc
sbb
inc
pop
aam
ds
(bad)
fimul
scas
popf
add
cwde
nop
aam
adc
rcl
mov
arpl
pusha
test
xchg
add
cs
rcl
shl
scas
xchg
(bad)
loopne
cs
out
push
inc
sbb
test
fmul
xchg
push
pop
int3
fwait
in
jmp
test
ss
test
mov
add
xchg
pop
dec
or
mov
inc
add
and
push
mov
mov
pop
stos
fidiv
ins
stos
or
jbe
jo
mov
out
push
(bad)
repnz
into
ficom
(bad)
fldenv
sub
inc
add
jl
push
mov
jns
lods
les
cmc
imul
aas
pop
sti
and
pop
shl
mov
adc
int
div
lea
adc
inc
mov
mov
or
mov
pop
xor
mov
scas
cdq
dec
dec
cdq
mov
or
into
jno
stos
popf
inc
shr
xor
bound
out
nop
leave
rol
adc
iret
mov
sub
jle
cmp
pop
mov
fdiv
addr16
adc
and
jl
mov
test
pop
jns
(bad)
mov
stos
dec
cdq
call
bound
ret
add
adc
daa
das
stc
jnp
arpl
in
pop
xchg
in
fiadd
sbb
dec
sahf
mov
xor
inc
and
xchg
retf
xor
fs
(bad)
jbe
dec
add
addr16
inc
add
cmp
inc
(bad)
xor
out
sub
call
bound
lds
repnz
or
jge
mov
mov
lds
stc
jle
rcl
sub
pop
mov
mov
out
lods
into
leave
add
addr16
cmc
addr16
mov
ret
enter
dec
lods
mov
retf
add
data16
sbb
sub
in
cld
rcr
call
arpl
add
outs
clc
retf
aam
ror
fs
cdq
mov
mov
mov
out
sar
fild
and
and
(bad)
cmp
xchg
es
imul
adc
stos
adc
cmps
and
leave
ret
lds
and
popf
rol
pop
dec
push
out
push
rcl
shl
out
(bad)
and
rcr
and
cli
mov
jb
and
hlt
loop
ja
xor
inc
adc
mov
inc
cmc
mov
mov
imul
int3
loope
in
or
cmp
outs
loop
(bad)
mov
cmp
sar
push
call
ins
test
dec
(bad)
xor
jge
ja
jne
mov
adc
push
mov
cli
xor
enter
jmp
sbb
push
lods
pushf
in
enter
inc
out
imul
add
clc
cwde
xchg
mov
movs
je
ins
in
pop
test
mov
cmp
and
cmp
fbld
pop
add
mov
mov
retf
dec
xlat
push
iret
and
sti
neg
stc
mov
bound
jp
in
mov
or
dec
mov
cmp
loop
movs
les
mov
adc
enter
(bad)
aaa
add
mov
fwait
pop
clc
movs
jo
sbb
ja
adc
ss
and
mov
nop
in
dec
in
retf
aas
adc
jo
cmc
call
aam
push
fcom
cmp
das
neg
shl
iret
sbb
scas
mov
and
pop
loope
loope
push
movs
xchg
arpl
sti
lahf
(bad)
mov
adc
fs
arpl
bound
int
jns
inc
jbe
jle
mov
cs
xchg
cmps
fwait
jmp
addr16
xchg
xchg
cli
mov
daa
cmc
adc
fmul
aam
adc
pop
cmp
in
xchg
add
jbe
(bad)
outs
sbb
fistp
sti
and
arpl
in
jmp
jnp
cdq
neg
jb
popf
xchg
out
(bad)
cmp
in
push
es
es
pop
es
mov
jae
cmp
sub
push
dec
cmps
jns
hlt
test
cmp
mov
ds
(bad)
fstp
sbb
pop
and
add
pop
or
sub
cli
inc
mov
or
sahf
dec
mov
test
push
ins
aas
cmps
test
dec
sub
div
sbb
xor
and
fdiv
xor
mov
shr
addr16
das
mov
inc
je
aad
loopne
imul
ret
lods
jge
pop
aas
mov
or
push
or
dec
adc
sub
shl
int3
ret
loope
and
jnp
lock
adc
xchg
(bad)
retf
inc
mov
test
mov
pusha
loopne
in
icebp
add
std
shld
out
aad
and
inc
pusha
lods
push
pop
pop
pop
fdivr
ret
sub
frstor
scas
xchg
jmp
hlt
dec
cld
pmulhuw
mov
movs
sar
mov
jmp
jnp
jecxz
jbe
jge
mov
sbb
xchg
xchg
int3
imul
push
jle
jmp
cmc
mov
mov
push
das
loopne
xchg
int3
div
clc
cmp
pop
cwde
dec
cmp
sbb
into
in
cli
push
xchg
loopne
cmp
in
adc
js
inc
cmp
adc
shl
sub
fld1
cmp
dec
adc
dec
jl
sub
cmp
push
or
push
scas
outs
stos
repnz
and
mov
add
pop
fcom
cmp
fwait
dec
outs
mov
push
outs
cmp
sahf
mov
nop
ins
xor
xlat
sub
sbb
mov
lds
lods
or
loop
aaa
cld
cmp
imul
inc
cwde
lds
loop
push
arpl
dec
pop
fld
ins
fldenv
inc
push
imul
out
pop
arpl
cmps
add
lods
pop
lahf
push
add
movs
popa
imul
dec
push
inc
or
jns
and
pop
pop
nop
(bad)
cmp
fst
sbb
in
and
sbb
in
dec
fadd
enter
and
sbb
test
mov
adc
inc
lds
and
xchg
in
imul
imul
jb
pop
loopne
adc
stc
adc
fld
xchg
pop
cmps
ds
in
mov
adc
scas
sbb
mov
sbb
push
add
push
jecxz
mov
ror
pushf
or
sub
fstp
sub
icebp
push
mov
out
push
data16
xlat
arpl
sbb
pop
movs
fnstcw
aam
mov
aas
pop
lea
cmp
jb
icebp
stos
adc
xor
and
fcmovne
xchg
outs
ret
pop
jae
(bad)
fs
mov
mov
ffree
add
push
sbb
cmp
mov
or
loope
aad
(bad)
jne
je
dec
cs
mov
or
cmp
jnp
aad
push
and
pop
mov
mov
jmp
pop
out
out
push
(bad)
out
fsubr
xor
lea
adc
push
xor
(bad)
in
jbe
rcl
and
fisub
sahf
clc
cmp
push
ins
dec
dec
add
neg
sub
jbe
push
repz
imul
leave
xchg
or
(bad)
cwde
mov
and
cmps
addr16
add
ret
add
out
call
shl
lods
mov
jge
mov
add
les
out
lea
in
add
ror
(bad)
xor
pop
pop
ret
mov
sub
clc
adc
mov
xor
test
sahf
js
push
aam
(bad)
(bad)
mov
imul
arpl
xor
(bad)
out
aam
sub
and
sbb
mov
lock
push
in
cmp
pop
ret
aaa
adc
xor
pop
ins
test
jmp
dec
movs
sub
in
out
cmp
lds
xchg
or
(bad)
pop
je
mov
fcom
mov
cmp
nop
xchg
dec
mov
outs
fwait
push
or
dec
and
jae
push
daa
(bad)
stc
fldcw
cdq
das
inc
pop
pusha
in
xchg
xchg
jl
leave
push
mov
jle
je
pop
mov
rol
and
mov
push
(bad)
aas
mov
std
xchg
jge
cmps
pop
loop
cmp
jb
mov
cmps
pop
pop
dec
(bad)
mov
pop
int
ffreep
int3
mov
xchg
imul
adc
fisttp
call
mov
pop
sub
inc
scas
gs
shr
test
outs
fmul
outs
add
loope
ror
sub
cmp
loope
(bad)
pop
and
ret
push
jmp
dec
(bad)
mov
mov
retf
fcom
je
cmps
xlat
stos
scas
jmp
sahf
pop
sub
lds
pcmpgtw
xor
pushf
lea
jno
sub
adc
jns
mov
xor
leave
out
mov
mov
loop
out
cmp
inc
inc
scas
mov
mov
bound
out
mov
mov
lods
mov
mov
fwait
movs
xor
jmp
jmp
mov
mov
add
iret
xchg
dec
dec
test
ret
fiadd
aaa
dec
jns
and
ss
ins
cmps
and
dec
test
lods
cli
scas
cmp
add
adc
mov
stos
and
pop
push
retf
or
cmp
or
xor
or
pop
sbb
int3
arpl
or
movs
into
jmp
push
les
movs
pop
cmp
int
cli
and
mov
cs
pop
rep
fst
clc
movs
loopne
push
call
sub
xchg
or
cmp
xchg
or
in
stos
jle
sbb
jecxz
ret
retf
or
scas
aad
scas
es
mov
in
dec
dec
cmp
movs
inc
out
adc
icebp
ins
sub
xchg
jle
std
aas
(bad)
xor
xchg
xchg
mov
xor
jno
fldz
xor
push
and
pop
cli
pop
sbb
cmps
and
cwde
or
mov
and
pop
cmp
int3
daa
dec
out
jg
rcr
in
dec
push
cs
(bad)
sbb
fisub
das
hlt
add
xchg
push
adc
popf
or
adc
dec
lock
fisub
les
loop
mov
clc
rol
pop
xor
cli
rcl
out
mov
out
cs
stc
dec
xchg
fcmovnb
int3
xor
sbb
fdiv
sub
pop
rcl
nop
das
les
jno
inc
cmps
sbb
push
aas
enter
pop
lods
dec
pop
inc
(bad)
std
and
aam
test
mov
pand
bound
movs
arpl
pop
aam
addr16
jmp
loope
cmps
cmp
leave
lahf
mov
mov
or
imul
cmp
or
data16
sbb
rol
pop
mov
push
push
push
push
fs
mov
hlt
pop
cli
or
xchg
in
ror
lods
push
dec
and
and
retf
das
ja
inc
fwait
out
jp
xchg
xchg
mov
xchg
add
adc
das
inc
aam
ficom
cmp
dec
sub
test
jmp
mov
mov
rcl
cmp
mov
ss
sub
and
(bad)
in
adc
leave
push
cmp
jle
lock
xor
es
es
jecxz
inc
daa
xchg
pop
mov
ds
lea
fwait
in
mov
out
mov
fs
add
push
pop
sub
push
fnstenv
in
(bad)
scas
rcl
jne
sub
popf
mov
inc
mov
pop
out
call
jno
inc
adc
xchg
dec
pusha
ret
aam
xlat
stc
mov
pop
popa
adc
mov
ret
dec
mov
les
cdq
out
arpl
sub
scas
std
in
pushf
adc
scas
jmp
outs
push
mov
or
or
icebp
movs
lods
jg
test
mov
pushf
jns
xchg
(bad)
sub
je
jecxz
(bad)
cmps
jne
cmp
dec
ficom
imul
mov
mov
pop
ret
pop
not
push
cmp
in
ins
mov
pop
dec
ja
test
and
fsub
xlat
daa
int
jmp
daa
dec
sbb
dec
lods
dec
jb
cmps
xchg
aad
mov
and
call
or
jae
add
mov
jmp
lea
mov
cmp
inc
sub
loop
dec
xor
xchg
xor
test
mov
or
inc
xchg
je
cmc
ins
sub
call
and
adc
hlt
mov
xchg
out
mov
clc
dec
pop
call
es
ret
fsub
stos
ffree
out
xchg
mov
fwait
cmp
std
lods
dec
popa
push
retf
add
sub
xchg
fxch
and
pop
add
in
call
jb
fistp
mov
retf
add
add
popf
mov
dec
cmp
movs
shr
or
retf
lahf
lds
retf
xor
retf
adc
dec
iret
inc
out
enter
inc
jae
and
cmp
or
sub
xchg
cld
cmp
movs
add
sbb
push
ins
push
loop
mov
adc
jg
sbb
fst
inc
xchg
cmc
retf
fisttp
mov
add
add
push
inc
sbb
call
mov
inc
adc
out
retf
cmp
cld
inc
jno
mov
fs
mov
loope
mov
popf
jae
jmp
cmp
retf
mov
jno
mov
loopne
mov
aas
addr16
or
mov
ins
ss
es
adc
jnp
mov
loopne
inc
mov
and
ins
call
es
jnp
or
not
nop
(bad)
mov
enter
shl
jg
repnz
and
cmp
jecxz
lods
retf
ret
call
js
clc
pop
inc
and
mov
in
inc
popf
adc
cmp
mov
imul
arpl
lods
std
rcr
jnp
inc
mov
xor
add
lds
mov
jbe
stos
pop
ins
test
ret
aas
mov
scas
fld
pop
push
mov
jecxz
cmp
inc
les
shl
sub
cmp
cmp
clc
push
and
jmp
into
cmp
test
aas
test
xchg
pusha
mov
sbb
adc
mov
mov
push
cs
ins
retf
into
sbb
cmp
scas
or
dec
inc
cmp
sub
mov
in
call
jno
mov
jne
ja
inc
cld
jge
mov
sti
jl
jb
cmc
xchg
sub
lods
sahf
xchg
cmp
sbb
mov
int
retf
bnd
push
sbb
adc
xchg
icebp
int
xor
xchg
fnstcw
cmp
movs
cld
mov
je
cmp
ret
(bad)
mov
pop
enter
iret
mov
mov
lods
test
push
dec
pop
mov
inc
push
(bad)
out
xchg
movs
or
cmps
loopne
inc
and
sub
dec
and
adc
push
jmp
jbe
mov
inc
pushf
xor
sub
cmp
inc
fwait
icebp
xor
jnp
fcomp
aam
xlat
pusha
lock
inc
inc
fdivp
dec
and
xchg
push
pop
push
fnstcw
jb
iret
(bad)
cld
jg
bound
jo
pop
dec
fmul
out
inc
push
fwait
sbb
je
pop
xchg
int3
hlt
push
sbb
data16
sbb
in
or
in
icebp
das
shr
dec
mov
pop
repz
js
ret
cmp
ds
dec
adc
sahf
push
add
stos
mov
imul
inc
in
or
pop
ja
pop
aas
xor
xchg
cmp
outs
mov
mov
push
sub
xor
jg
push
sub
push
(bad)
jo
stc
daa
mov
sbb
mov
push
(bad)
retf
xor
cmp
aam
popf
lods
cmp
aam
cmp
cmps
mov
aad
(bad)
adc
lods
mov
cdq
(bad)
sbb
je
jp
mov
fistp
out
pop
jl
arpl
enter
jbe
pop
mov
add
test
popa
cs
push
pop
test
jmp
loopne
mov
push
hlt
mov
sub
ins
xchg
sbb
repnz
xor
adc
xchg
nop
test
pop
xchg
neg
lods
add
dec
inc
fsubr
push
cwde
mov
imul
xchg
inc
addr16
fimul
mov
xchg
int
test
sub
sbb
push
or
mov
mov
pusha
cmps
adc
cs
add
mov
arpl
mov
mov
push
xor
lods
lea
cmp
xor
pop
fisub
sbb
pop
jl
outs
pop
scas
leave
sahf
jmp
outs
pop
aaa
mov
pop
sub
call
ret
cmps
cmp
pop
sub
sub
scas
mov
mov
mov
not
std
sbb
xor
push
mov
xor
loop
aam
dec
ret
dec
and
or
and
cmc
jl
shld
and
les
add
push
or
je
imul
or
xchg
leave
dec
inc
sub
enter
fmul
dec
cmp
test
not
pop
jne
and
outs
adc
in
and
aas
add
inc
outs
(bad)
adc
adc
jno
jecxz
mov
adc
jne
add
popf
push
jo
shl
fisttp
in
loop
pop
inc
adc
repz
ss
push
adc
jecxz
mov
outs
stos
xchg
push
inc
outs
nop
jecxz
xor
push
stc
hlt
adc
sbb
mov
stos
and
adc
fwait
lds
push
and
cmp
sub
(bad)
out
sbb
inc
mov
repz
xchg
dec
lahf
jnp
test
push
lods
pop
inc
test
dec
mov
rsqrtps
das
test
cmp
leave
jno
cmp
test
ins
cmp
lock
outs
cmp
aaa
add
aas
sub
aaa
push
jmp
mov
es
mov
sbb
pop
push
loop
xlat
ss
popf
mov
enter
cmp
mov
bnd
adc
mov
adc
lahf
mov
(bad)
mov
add
test
cwde
adc
push
daa
pop
adc
sti
pop
imul
aam
push
pop
mov
xchg
mov
popf
xchg
sbb
mov
popf
pop
test
(bad)
jae
test
(bad)
retf
push
inc
iret
movs
shr
add
or
in
aam
inc
(bad)
ss
mov
mov
push
dec
and
sbb
pusha
ja
sbb
xor
mov
icebp
lock
fisub
out
iret
retf
adc
add
sub
andps
stos
and
mov
mov
sub
push
mov
and
xchg
push
ret
inc
sti
pop
movs
(bad)
push
xor
sbb
clc
sar
and
adc
push
xchg
inc
adc
mov
jle
out
mov
jne
(bad)
fstp
sub
mov
mov
inc
ins
cmp
in
sub
in
push
mov
xchg
xor
sbb
cmp
(bad)
and
bswap
dec
mov
cmp
je
adc
mov
retf
aas
xor
sbb
adc
add
shr
stc
dec
addr16
jb
(bad)
and
loop
addr16
or
mov
xchg
cmps
aas
jo
cld
add
adc
ret
(bad)
mov
jnp
movs
sbb
cwde
(bad)
cmc
sub
cs
mov
aaa
add
shr
sub
cdq
mov
retf
in
mov
idiv
in
jae
out
ins
fwait
jmp
cwde
iret
shl
jg
xchg
enter
sti
sbb
popf
clc
stos
(bad)
add
cmp
aad
and
mov
sbb
mov
pop
inc
push
fcomp
rdmsr
cmp
inc
stos
neg
mov
ins
daa
mov
push
outs
mov
jg
add
lods
pop
aad
inc
mov
cmp
shl
xor
fwait
sub
ins
dec
push
test
dec
xchg
scas
xor
inc
mov
sbb
inc
jne
aam
mov
sub
mov
or
leave
cmp
push
loopne
test
sti
(bad)
sub
xor
jns
movs
mov
pop
cmp
popa
ret
in
push
cmc
cmp
fdivr
xchg
mov
sar
pop
movs
cwde
xchg
hlt
inc
fs
xchg
sahf
call
mov
loopne
cdq
jecxz
imul
das
mov
xchg
stc
xor
xor
int
stos
loope
ins
and
test
orps
pushf
jg
cdq
shl
add
cmp
data16
cmc
mov
(bad)
mov
ret
aam
push
(bad)
cmp
ins
inc
sub
push
rcr
add
add
pop
sub
mov
test
sub
into
ror
mov
mov
jle
ds
jg
(bad)
cmp
mov
mov
jge
loop
outs
or
sub
adc
out
push
push
cmp
xor
stos
inc
mov
inc
into
jle
ins
and
xchg
sbb
xor
lock
aaa
imul
test
outs
inc
fstp
jg
shl
mov
cdq
fwait
call
repz
push
pop
inc
add
js
or
mov
and
out
out
adc
aas
out
push
sub
push
lahf
aaa
jnp
sbb
les
push
test
test
mov
or
je
mov
loope
(bad)
xlat
cmc
push
ins
push
fist
es
nop
pusha
add
jg
jno
movs
xor
ja
pop
jecxz
lds
imul
and
(bad)
dec
(bad)
sar
push
xchg
nop
push
and
scas
loopne
bsr
retf
fwait
push
and
not
xor
xchg
popa
mov
mov
out
(bad)
mov
sbb
xchg
mov
addr16
rcr
scas
mov
sbb
pop
out
fs
mov
and
lds
jb
and
fs
xchg
mov
cmp
dec
xadd
jne
mov
into
push
push
push
sbb
push
inc
aas
bound
jmp
pop
lock
xchg
dec
jp
mov
sub
in
dec
jl
mul
xchg
mov
push
dec
adc
retf
iret
xor
in
adc
inc
repz
call
fstp
mov
sbb
imul
aaa
add
stos
or
or
jb
mov
pop
sub
shl
call
scas
adc
test
xchg
push
push
push
xchg
bnd
loope
fist
sbb
retf
push
jmp
movs
adc
fbstp
jmp
movs
inc
sbb
lea
mov
ss
cmp
jmp
cmp
jae
test
retf
lods
pop
out
dec
jl
xchg
(bad)
mov
shl
xchg
out
ss
out
cdq
je
imul
cli
enter
icebp
mov
add
sub
sub
mov
push
int
sbb
and
xchg
dec
js
out
fisubr
aam
test
adc
sti
inc
ds
nop
shr
repnz
pop
aad
adc
loope
pop
and
mov
hlt
loop
dec
jns
push
lea
or
repnz
in
aad
or
or
jb
cs
push
xor
pop
mov
push
cmps
pop
repnz
iret
xor
ds
les
loope
es
inc
mov
loope
mov
pop
arpl
imul
out
ins
xchg
jnp
pop
cli
retf
bound
test
fbstp
mov
mov
pop
jne
frstor
int
aaa
test
mov
test
mov
fs
mov
xchg
lods
push
jbe
jg
mov
push
inc
shl
pop
push
sub
cmp
cmc
movs
xchg
daa
mov
inc
loopne
adc
push
sar
dec
mov
outs
sub
sub
clc
fsub
push
sub
sar
xor
leave
push
leave
je
loop
sbb
mov
cmp
xor
call
and
leave
les
shl
cmp
jmp
arpl
(bad)
out
mov
push
mov
xor
movs
js
push
adc
xor
dec
jnp
xor
loopne
test
pop
pop
(bad)
stos
in
pop
add
nop
icebp
sub
div
mov
outs
fdivr
add
and
mov
sub
add
mov
ds
mov
push
(bad)
xchg
not
cmc
mov
push
rol
jns
shl
call
pop
mov
jge
jno
mov
dec
repz
clc
jge
xchg
std
lds
repnz
popf
cld
or
fmul
test
jb
inc
(bad)
repz
lea
iret
out
gs
call
ins
inc
cmp
jecxz
sbb
push
out
retf
jl
mov
xor
loop
xchg
(bad)
nop
push
xor
call
imul
jno
adc
stos
shl
(bad)
cmp
jb
xor
and
mov
sbb
das
cli
call
mov
repnz
dec
and
or
lds
in
jp
cmp
lods
inc
fist
dec
pop
dec
sar
(bad)
(bad)
popa
outs
pop
in
leave
lods
arpl
mov
cli
push
cld
add
test
fisttp
call
pop
pop
xchg
imul
arpl
sbb
cmps
pop
(bad)
push
dec
clc
adc
mov
loopne
jne
idiv
aam
jecxz
pop
add
push
push
retf
mov
xchg
daa
cmp
(bad)
jmp
test
and
wbinvd
jle
push
inc
mov
(bad)
bound
inc
push
pop
fyl2xp1
cwde
icebp
sbb
aas
jg
icebp
mov
xor
sub
dec
mov
cs
jmp
dec
sub
add
aad
mov
ret
sti
sub
scas
or
call
inc
arpl
push
cmp
stos
loopne
or
dec
inc
movs
imul
mov
sub
cdq
loop
cmp
enter
popf
es
imul
jecxz
imul
xchg
and
into
jns
out
mov
jmp
enter
adc
cs
and
adc
(bad)
leave
pop
retf
mov
push
std
cwde
call
mov
and
xchg
push
mov
cmp
mov
mov
xchg
imul
hlt
mov
ret
retf
add
push
push
xor
pop
sub
div
cmp
ins
fdivr
xchg
repnz
sbb
mov
(bad)
push
pop
mov
adc
or
push
xor
test
fwait
mov
ins
rcr
inc
mov
call
addsubps
test
xor
and
test
cmp
test
xor
dec
xchg
xchg
daa
mov
adc
pop
out
outs
cwde
push
and
outs
loop
dec
call
adc
aaa
inc
ins
cwde
mov
add
xchg
cmp
gs
jno
lahf
push
cs
add
outs
and
fwait
or
mov
out
mov
xchg
int
add
or
pop
dec
outs
cli
jp
mov
sbb
out
add
pop
dec
outs
and
scas
(bad)
(bad)
fimul
mov
pop
test
test
mov
dec
mov
add
test
mov
je
stos
and
js
int3
icebp
imul
in
and
sbb
xchg
je
out
repnz
mov
push
sub
in
popf
test
aaa
dec
cmp
clc
xor
inc
pop
lahf
pop
jb
or
repnz
int3
push
or
mov
jp
(bad)
adc
in
call
mov
cmc
daa
jl
int
adc
mov
ins
add
adc
ins
(bad)
pop
add
sbb
fwait
xor
repnz
stos
jae
push
int3
inc
or
mov
fcomp
shl
jnp
inc
mov
mov
push
scas
int3
pop
push
mov
xchg
movs
cmp
sar
test
inc
aam
push
int3
cmc
dec
out
jge
int
or
sti
lods
aas
pop
push
arpl
push
inc
into
addr16
sahf
fldenv
ret
les
dec
scas
scas
pop
test
pop
jl
jmp
mov
aas
cmp
sub
mov
(bad)
into
dec
enter
leave
sahf
pop
pop
ja
mov
dec
adc
cld
mov
mov
stos
mov
outs
mov
js
icebp
cmp
repz
pop
sbb
ja
popa
jecxz
loope
and
mov
mov
xchg
stos
lds
imul
and
retf
cmp
adc
fmul
pop
call
mov
jmp
mov
enter
imul
mov
adc
push
sub
xor
popa
mov
xchg
dec
lods
sub
ins
hlt
aam
int3
jecxz
mov
jae
mov
jmp
(bad)
adc
pusha
stos
jmp
mov
fimul
fcmovnu
fisub
add
dec
dec
sub
repnz
sub
cmp
leave
adc
call
xchg
loop
xchg
leave
dec
push
add
cmp
push
fdivr
lods
ror
repnz
aad
call
call
mov
mov
sbb
dec
in
stc
mov
inc
les
jecxz
sub
sbb
out
inc
cs
mov
dec
fs
in
(bad)
mov
jnp
xor
mov
cld
mov
enter
xchg
mov
dec
or
pop
fcom
fst
mov
dec
mov
mov
push
xlat
sbb
mov
ins
jo
cli
mov
sbb
rcr
rol
and
ss
ja
mov
inc
je
jle
jl
pop
jbe
adc
jb
pop
icebp
les
push
imul
push
mov
inc
lds
stos
add
sbb
bnd
adc
xchg
call
jno
jp
mov
lea
mov
fcomp
imul
imul
jae
xor
sbb
dec
ficomp
ror
outs
sub
sbb
shl
movs
mov
push
lea
or
jae
sbb
std
jg
(bad)
enter
cmc
imul
int3
rol
and
(bad)
mov
gs
fnsave
jb
cmp
cli
inc
sub
mov
xor
scas
dec
shl
adc
push
out
jae
pop
mov
je
clc
sub
jecxz
(bad)
pop
in
jnp
icebp
or
call
rcr
shl
or
push
push
(bad)
cmc
jae
dec
sar
arpl
or
mov
fs
add
add
inc
clc
mov
sbb
push
in
sub
xor
sbb
in
sbb
popa
or
pusha
jnp
cmp
cmc
mov
push
mov
mov
aas
out
rol
pop
das
xchg
mov
jmp
jmp
push
into
enter
or
call
cmp
xor
jle
sbb
inc
daa
jmp
fmulp
enter
(bad)
push
or
push
sahf
pop
cmp
pop
mov
scas
add
test
xchg
call
jecxz
add
mov
xlat
fstp
mov
pop
lea
(bad)
pop
mov
push
sub
cmp
pop
xchg
or
sub
fs
ins
stos
mov
sub
jecxz
loop
jle
dec
and
fwait
mov
mov
movs
mov
daa
ffreep
pop
lea
mov
dec
iret
loop
call
add
add
addr16
pop
pop
popa
inc
in
fild
dec
leave
(bad)
clc
(bad)
lahf
in
cmp
sub
ret
popf
add
pop
sbb
rol
pushf
pop
test
xchg
cmc
aas
loop
push
jno
sub
cli
push
sahf
cmp
mov
sbb
stos
dec
xor
out
(bad)
sti
test
std
rol
cdq
cmps
call
mov
lds
mov
(bad)
add
mov
sub
jnp
add
in
or
into
jle
xor
pop
dec
sub
lds
cdq
je
adc
shl
fstp
lods
and
ss
test
lods
inc
cwde
les
and
movs
jp
stos
cmp
movs
xor
and
cmps
sbb
mov
outs
xchg
add
pop
ret
cmps
add
push
(bad)
push
loop
xor
jmp
call
dec
call
jnp
cmps
fimul
cli
(bad)
imul
adc
rcl
push
xchg
into
dec
(bad)
and
push
or
jmp
dec
xor
fisub
std
leave
or
data16
js
inc
call
pop
and
adc
clc
cmps
lock
mov
xor
add
xor
repz
xchg
imul
fs
mov
xchg
xchg
xchg
aas
adc
out
(bad)
mov
mov
shl
mov
push
cdq
bound
mov
test
pop
pop
(bad)
test
and
loope
jl
pop
shl
dec
mov
adc
(bad)
repz
stos
adc
push
xchg
or
nop
sti
add
sbb
mov
or
sti
sub
mov
inc
jb
rcr
mov
sub
je
cdq
ficomp
aad
inc
fucomi
push
mov
aad
push
pushf
loop
or
xchg
and
pop
sub
mov
daa
xrelease
fidivr
(bad)
adc
add
adc
ror
jne
jne
in
xchg
cmp
xor
cwde
sub
mov
movs
retf
push
dec
add
push
xchg
stos
xor
sbb
popf
or
inc
xchg
adc
dec
mov
inc
repnz
jecxz
bsr
in
loope
ror
test
jp
add
and
retf
gs
out
shl
fcomp
jge
inc
repnz
shl
mov
sahf
jle
pushf
into
ret
lods
mov
xor
push
or
inc
cmp
mov
cmp
xchg
pop
dec
fcom
imul
push
retf
(bad)
fadd
std
stc
mov
mov
in
popa
(bad)
std
shr
in
enter
test
arpl
int3
test
pop
repnz
sub
pop
stos
adc
ins
dec
inc
inc
add
sbb
push
xchg
or
cwde
out
push
and
sti
(bad)
(bad)
xchg
adc
ret
pop
outs
test
loope
dec
test
mov
std
mov
cmp
mov
fidivr
sti
lock
fisubr
mov
movs
popf
jle
mov
pop
and
push
mov
std
mov
arpl
je
loope
fmul
mov
push
mov
cmp
shl
ss
ins
int3
xchg
mov
nop
dec
ins
cmp
pop
gs
in
jge
retf
xchg
lea
sbb
push
not
or
hlt
cli
mov
push
aas
mov
xor
rol
sub
js
call
sbb
imul
scas
mov
xor
jl
packuswb
out
retf
pop
push
jmp
jb
cli
fstp
xor
not
scas
test
sbb
push
add
mov
cs
dec
mov
and
push
cld
in
call
mov
out
jae
test
cli
movs
push
mov
fsubr
(bad)
int3
cld
cmp
and
movs
fs
xchg
and
sar
mov
jmp
xchg
hlt
out
mov
shl
adc
dec
lods
pop
sti
test
sub
push
inc
jnp
push
xor
inc
mov
mov
jne
mov
out
shl
and
add
test
and
(bad)
aas
jge
inc
jecxz
xor
retf
arpl
(bad)
popa
stos
xlat
add
xor
or
rcr
fsubr
sub
xor
mov
sbb
ds
xlat
jecxz
shr
les
xor
sbb
je
xchg
mov
pop
xchg
mov
mov
sbb
stos
or
inc
pop
adc
pop
movs
inc
ret
call
pop
mov
jne
inc
adc
xchg
popf
inc
add
loopne
jl
or
push
repz
mov
(bad)
mov
or
lock
hlt
jno
dec
or
xchg
iret
(bad)
cli
bound
mov
cmp
push
lahf
jmp
jmp
dec
(bad)
div
adc
push
stc
cmp
outs
test
(bad)
ror
jle
test
xor
neg
cmp
add
push
mov
adc
(bad)
add
xchg
jne
push
xor
test
and
in
leave
(bad)
push
dec
shr
fnstcw
pusha
out
xor
test
push
cmp
mov
pop
rcl
mov
arpl
fdiv
ja
cdq
sub
xor
ret
std
das
mov
sub
mov
cmc
push
jae
out
lods
out
xchg
sub
jmp
sbb
push
inc
ja
xchg
inc
xor
imul
ret
les
dec
outs
je
lods
mov
mov
outs
xor
int
aad
sub
push
or
sti
fld
xor
push
or
mov
xor
imul
add
dec
xor
mov
ds
scas
or
iret
jge
dec
lock
mov
mov
cwde
jmp
add
psllq
lea
sti
call
mov
ja
cwde
popa
fadd
push
xchg
mov
add
and
push
cdq
jo
pop
stos
repz
push
enter
out
pop
mov
xchg
rcl
fisub
lods
test
lahf
mov
nop
ror
pop
or
inc
jno
das
outs
cmp
fst
icebp
aaa
cmps
clc
icebp
push
sub
fs
js
stc
bound
pop
(bad)
cmc
dec
ins
pop
dec
rcr
loop
inc
in
push
retf
(bad)
jbe
push
jbe
mov
cmp
mov
imul
mov
test
fidivr
(bad)
loopne
iret
test
ror
int
je
hlt
iret
cmp
dec
mov
(bad)
lods
push
je
xchg
call
xchg
sbb
mov
xor
rol
pop
fwait
icebp
bound
movaps
test
xchg
xor
retf
mov
sbb
rcr
inc
sahf
mov
cwde
nop
(bad)
pop
sub
in
cmp
and
or
jl
pop
retf
mov
adc
sbb
pop
lds
inc
sbb
push
into
inc
push
call
push
out
push
push
jno
cdq
pop
loop
xor
cmps
movs
jl
mov
mov
ins
ret
clc
push
loop
es
sbb
dec
mov
mov
imul
mov
jae
mov
in
mov
cmp
add
cmp
or
dec
retf
or
outs
cdq
mov
clc
or
mov
xchg
arpl
inc
inc
mov
lahf
fldcw
mov
stc
jns
pop
dec
sti
push
dec
xchg
dec
pop
in
mov
cmp
and
imul
in
daa
movs
idiv
in
addr16
sbb
jle
dec
and
es
or
xchg
stos
pop
ret
pop
cmp
pop
cmp
(bad)
jmp
movs
call
dec
cmps
cmc
xor
jbe
mov
ins
pop
into
aam
loopne
push
rol
mov
xor
or
adc
mov
movs
js
xor
mov
mov
xchg
gs
jmp
push
call
push
add
inc
je
bound
pop
scas
scas
pop
sbb
push
xchg
jbe
pop
mov
jmp
inc
cmps
aaa
ficomp
xor
bnd
push
call
dec
cmp
mov
pop
mov
mov
xlat
(bad)
ins
retf
and
push
mov
loop
sub
mov
adc
cmp
xlat
pop
add
add
push
aam
sahf
test
scas
sub
dec
jo
daa
mov
rcl
push
in
inc
pop
cld
push
push
xchg
enter
xor
dec
adc
hlt
jle
or
aas
stos
shl
jle
add
jge
pop
mov
mov
repnz
jmp
pop
popa
popa
push
pop
lock
mov
jle
xchg
add
jp
and
add
popa
jo
push
xchg
mov
daa
add
movs
test
push
movs
shl
out
push
ds
sti
mov
pop
ja
pop
add
fcmovu
clc
inc
mov
shr
retf
ret
int
cmp
xor
jl
sub
addr16
in
add
cmp
ret
std
in
jecxz
or
(bad)
stc
cmps
shl
inc
xchg
mov
mov
dec
ds
mov
mov
adc
stos
bound
int3
adc
fcomp
in
ja
es
pop
out
retf
cmp
or
std
cli
dec
mov
(bad)
mov
aad
adc
jmp
cld
in
xchg
scas
rcr
push
jno
movs
mov
bound
sbb
addr16
adc
aaa
sahf
inc
push
sub
int3
pop
pop
fsubr
iret
push
adc
mov
jns
fnstenv
js
call
shl
jecxz
xchg
xor
inc
mov
loop
inc
pop
les
ret
xchg
loope
push
ins
ss
in
adc
pop
ins
mov
or
pop
stos
jg
pop
jle
je
nop
xchg
imul
daa
loopne
jl
scas
in
cwde
cmp
loop
push
push
adc
or
in
gs
daa
pop
loope
dec
daa
and
dec
rcr
mov
mov
jo
sub
pusha
adc
int3
push
dec
inc
cmp
mov
(bad)
push
mov
xchg
call
out
fmul
jo
mov
and
mov
shr
popa
ror
sub
sbb
stos
es
mov
xor
rcr
fistp
mov
das
and
(bad)
retf
mov
aas
mov
les
nop
aam
stc
js
repz
push
and
add
ins
inc
jge
lds
mov
enter
mov
xor
nop
aad
mov
dec
ret
mov
ret
out
enter
dec
call
test
in
mov
lds
cmc
xchg
adc
xlat
enter
xchg
sahf
test
dec
sbb
shld
jge
dec
adc
hlt
jle
xor
rcr
das
daa
or
cmp
pop
in
mov
push
adc
adc
add
adc
mov
retf
aas
xor
stos
sbb
not
(bad)
es
xor
inc
into
aas
mov
dec
inc
test
aad
sar
adc
xor
mov
hlt
xor
loope
popf
dec
mov
and
lock
add
inc
inc
push
sbb
(bad)
and
int
mov
and
ret
xor
cmp
sbb
jmp
push
retf
repz
inc
and
in
push
cwde
xchg
in
mov
int
scas
jge
lock
cmp
fs
call
adc
mov
cmp
daa
aam
pop
stos
inc
sub
(bad)
sub
push
pop
scas
cmp
inc
dec
repnz
jmp
add
pop
push
in
jp
stc
push
dec
stos
aad
inc
pop
imul
xor
dec
shr
sbb
mov
push
push
dec
fs
icebp
jl
xchg
jmp
cmps
pop
loopne
ins
mov
inc
push
fmul
mov
cdq
push
mov
loop
lods
mov
xchg
sbb
cmp
loope
out
sbb
push
adc
cmp
push
pop
ins
mov
mov
dec
mov
mov
or
mov
jg
stos
xor
enter
adc
retf
dec
dec
stos
pop
movs
inc
out
fisub
inc
mov
push
xchg
xchg
ja
add
jo
into
popf
push
jo
int
test
and
jmp
inc
int
or
xor
xchg
dec
and
push
(bad)
stos
and
inc
rcl
mov
cld
cmp
rcl
xor
push
dec
cmp
dec
loop
or
or
cmp
das
inc
xor
aas
das
pop
lods
mov
iret
enter
rcr
and
aas
jo
add
aad
fnstsw
sbb
cmps
imul
jl
pop
sbb
ds
(bad)
fadd
xchg
pop
repz
ds
cmp
pop
cld
aas
out
mov
les
cmp
pop
sbb
jp
pop
push
mov
cmp
lahf
int3
add
push
jmp
adc
loope
hlt
inc
ror
ficom
pop
test
xchg
inc
mul
add
mov
call
and
or
push
mov
push
je
lahf
pop
inc
mov
scas
mov
sub
into
sbb
bound
jno
inc
add
sbb
aad
xchg
xchg
sbb
mov
sub
push
xorps
ja
int3
jp
jecxz
fwait
fwait
mov
xchg
cmp
pop
mov
push
clc
outs
jae
scas
ret
fs
mov
outs
lods
mov
push
cs
jl
lds
adc
scas
dec
stc
inc
ja
pop
xor
pop
xchg
fwait
loop
call
adc
adc
dec
aam
leave
pop
or
sub
cwde
retf
mov
retf
add
or
icebp
add
mov
mov
inc
xchg
hlt
cdq
lahf
adc
and
and
test
rol
add
lahf
jmp
js
div
scas
add
into
neg
cmp
xchg
pop
dec
aad
mov
stc
rsqrtps
jno
xor
jae
push
clc
sbb
icebp
jmp
outs
inc
jnp
xlat
dec
xor
fdivp
add
clc
loop
push
(bad)
push
xchg
rcr
pushf
sub
out
ins
fadd
pop
mov
retf
jae
xor
repnz
sub
xchg
inc
movs
enter
xchg
call
test
aad
cmp
fdivr
fcom
into
xchg
not
hlt
out
push
push
and
out
out
jne
(bad)
jge
mov
fsubr
add
ror
test
add
push
jns
js
sbb
pop
(bad)
retf
jg
stc
loopne
or
fldcw
sub
(bad)
jae
(bad)
mov
out
lea
jns
bound
popf
leave
fnstsw
mov
das
xlat
popf
mov
sbb
(bad)
loopne
mov
lea
pop
inc
lahf
xchg
inc
stc
inc
and
or
and
adc
xor
add
shr
test
push
push
inc
push
jo
and
fincstp
sbb
xchg
jno
(bad)
or
push
cmp
sub
mov
jae
mov
push
ss
dec
cmp
xchg
jmp
inc
out
stc
add
xchg
push
cld
out
pop
xchg
dec
out
xor
ds
addr16
(bad)
js
je
cmps
or
jbe
retf
push
xchg
pushf
xchg
sub
or
cmp
sahf
inc
test
ins
mov
clc
nop
int
ss
shr
ret
pop
(bad)
cmp
stos
aam
or
repz
sti
out
stos
xchg
push
into
lods
(bad)
xlat
stc
push
call
xlat
mov
adc
mov
cmp
out
ins
cmp
retf
mov
shr
pop
mov
inc
daa
out
les
fisubr
push
sar
je
push
or
shl
imul
out
aaa
jmp
dec
cmp
mov
dec
outs
pop
add
adc
or
sbb
jmp
lods
dec
mov
shl
jae
cmps
sub
cdq
add
pop
or
push
mov
sbb
adc
and
icebp
pop
aas
dec
dec
xchg
mov
retf
push
push
dec
adc
mov
adc
in
mov
div
pop
jge
cwde
stos
jno
xor
in
inc
in
or
(bad)
fsubr
mov
repnz
xlat
movs
dec
retf
lock
inc
repnz
or
push
fwait
movs
outs
(bad)
test
adc
lds
sti
test
inc
adc
jmp
movs
(bad)
pushf
fs
jae
jp
addr16
mov
mov
push
out
jg
pop
mov
ds
mov
lods
ret
dec
xor
stos
scas
test
fadd
cli
scas
add
cld
lahf
cmp
retf
fisub
cld
sub
adc
sub
mov
mov
inc
pop
scas
mov
(bad)
out
icebp
cmp
cmp
es
push
(bad)
popf
in
mov
femms
iret
fstp
or
mov
push
call
xchg
pop
stos
(bad)
int
jmp
mov
popa
repnz
push
sbb
mov
cmp
mov
fsub
sti
pop
jnp
ins
pop
mov
or
push
pop
mov
call
in
movs
jmp
xor
enter
outs
shl
sbb
outs
scas
adc
cdq
push
test
push
scas
adc
jne
loop
fs
ror
in
imul
mov
ret
cmp
test
mov
add
mov
test
xor
aaa
mov
push
ss
ret
push
das
shr
lock
adc
lods
mov
mov
shl
dec
rcl
gs
jmp
icebp
stos
push
fmul
jnp
and
push
pop
cmp
sub
cwde
je
inc
or
mov
mov
xor
mov
push
aas
sahf
inc
jb
push
(bad)
retf
loope
pop
mov
ins
inc
pop
xchg
mov
out
ins
and
test
addr16
mul
jp
jo
test
jge
and
mov
into
aas
xor
jb
xor
pop
ficomp
in
and
or
inc
imul
mov
shl
test
inc
imul
adc
into
aaa
(bad)
pop
jmp
inc
push
or
sar
aad
lods
and
add
xchg
leave
out
aaa
jg
adc
jl
jnp
test
(bad)
aam
(bad)
xor
fiadd
xor
inc
pop
or
pop
out
cmc
arpl
rcr
inc
xchg
pop
dec
push
lods
xor
jnp
sbb
cmp
mov
mov
dec
cmp
daa
push
das
inc
sub
pop
call
pop
xchg
aad
dec
pushf
jmp
add
push
call
push
cdq
or
stos
outs
movs
jno
icebp
in
jl
xor
lods
xlat
push
aam
cmp
imul
(bad)
lahf
sahf
es
cwde
jle
sbb
jo
inc
dec
and
inc
mov
sbb
retf
push
push
mov
jbe
xchg
sbb
inc
sbb
js
mov
sub
jmp
adc
or
out
in
ror
shl
jae
es
xor
and
retf
pushf
repnz
fs
or
lahf
sti
push
sbb
pusha
dec
enter
into
sub
mov
fld
xor
cld
xchg
jl
jmp
sbb
mov
push
jns
outs
enter
add
mov
mov
icebp
scas
stos
sbb
sbb
pop
xor
inc
jne
or
push
clc
popa
imul
lea
pop
addr16
jmp
movs
jecxz
adc
test
sub
popf
xchg
push
out
sahf
cmp
hlt
adc
pop
lods
mov
jb
rol
(bad)
xchg
push
mov
mov
mov
leave
push
sbb
mov
xlat
in
mov
adc
leave
in
xchg
dec
cmps
sbb
in
add
and
test
test
xor
fistp
pop
jae
movs
add
sub
xchg
fcomp
and
movs
retf
ret
adc
jmp
mov
call
(bad)
in
jp
mov
push
out
fs
mov
xchg
jle
sbb
movs
jg
mov
sbb
mov
mov
pushf
shl
iret
sets
out
jge
lods
popf
fist
add
outs
mov
mov
in
fdivr
xor
add
out
daa
fcmove
sub
cs
int
push
fisubr
das
jp
push
or
dec
add
cs
jbe
mov
pop
outs
mov
and
mov
sub
retf
ficomp
dec
movs
mov
data16
jmp
fwait
cmp
hlt
adc
or
inc
and
scas
nop
push
cmp
je
jp
sub
add
movs
shl
fist
dec
into
cld
jg
aas
adc
xor
scas
lea
pop
sar
sti
lds
sti
int
iret
or
or
je
(bad)
test
jbe
fsubr
mov
push
and
jl
daa
inc
push
xchg
fstp
xchg
sub
fnsave
pop
or
cdq
test
push
sub
data16
push
(bad)
pop
rcl
jne
add
out
mov
cmp
jmp
mov
aaa
es
std
pop
(bad)
mov
loopne
mov
sbb
inc
push
in
pop
fadd
imul
mov
cld
pop
arpl
dec
mov
pop
(bad)
out
sbb
and
sahf
leave
dec
call
imul
rcr
das
(bad)
or
les
or
jle
sbb
daa
cwde
adc
pop
dec
hlt
int3
jge
enter
ret
es
test
mov
sar
pop
push
pop
and
loopne
aam
repz
fild
sar
inc
(bad)
jp
pop
das
(bad)
call
aaa
sbb
call
xchg
pop
cmp
popa
iret
xchg
sbb
add
out
hlt
dec
(bad)
pop
mov
xor
icebp
ret
jbe
out
jle
xor
sbb
dec
sub
jnp
mov
mov
ja
in
push
dec
xchg
stc
ret
xchg
bound
sbb
repz
push
rcl
or
xchg
in
ret
pop
push
and
dec
fstp
or
enter
retf
int3
push
mov
mov
inc
sbb
inc
je
mov
imul
mov
shr
push
dec
ror
int3
scas
(bad)
fsub
leave
daa
or
mov
cwde
and
aaa
sbb
push
imul
lds
cmp
mov
fimul
cmp
mov
ror
xchg
int
pop
inc
jmp
add
pop
cli
jo
fild
nop
mov
out
test
rcr
dec
idiv
fmul
(bad)
pop
das
test
arpl
(bad)
stc
push
push
or
jmp
aam
lahf
push
pop
adc
push
inc
sbb
lea
adc
je
cmp
sub
jmp
adc
fnstenv
lock
dec
xchg
or
mov
adc
sub
sub
inc
mov
sbb
pop
cmps
adc
and
push
setp
mov
and
cmp
pop
dec
mov
push
or
xchg
hlt
and
jb
push
nop
jno
lea
jmp
cmp
mov
aad
pop
(bad)
in
dec
adc
push
inc
mov
xchg
lahf
(bad)
mov
pop
test
inc
scas
push
xchg
in
push
pandn
jp
scas
test
dec
and
jecxz
(bad)
add
and
in
jge
or
mov
mov
mov
dec
dec
mov
pop
inc
dec
neg
xchg
add
xor
ins
fisubr
xor
dec
push
loop
pop
out
scas
adc
fdiv
xor
xchg
dec
mov
push
push
xor
ret
retf
jb
mov
push
cld
cld
ins
jecxz
inc
retf
rcr
fs
jle
lock
sub
mov
(bad)
aam
mov
jns
sahf
clc
fld
fwait
mov
test
sub
add
(bad)
pop
test
cmc
xchg
(bad)
xor
add
jge
inc
push
adc
ja
mov
mov
xor
sbb
cld
aam
iret
bound
jbe
int3
jecxz
mov
jl
mov
fdivr
aad
fist
stc
loope
(bad)
lahf
add
push
push
arpl
clc
(bad)
call
add
test
cwde
lods
pop
mov
test
mov
out
push
into
in
pop
repz
hlt
jnp
(bad)
stos
out
in
into
mov
ds
mov
in
pop
add
jne
lods
imul
jo
push
push
inc
popf
cwde
and
fwait
adc
pop
lds
sub
out
xchg
out
cmp
je
stos
dec
push
mov
push
pusha
sar
clc
aad
imul
push
ja
jnp
arpl
add
mov
lock
call
inc
jmp
popf
push
mov
out
into
fsubr
retf
add
stos
cmp
mov
dec
xchg
jae
dec
into
sbb
out
pop
fsub
mov
xchg
push
jl
sbb
rcr
dec
and
or
cdq
xchg
cli
pop
sub
and
xchg
jb
div
xchg
jl
lods
xor
dec
imul
test
punpckhbw
out
repz
outs
xor
xchg
ficomp
push
(bad)
addr16
out
mov
or
loop
(bad)
in
push
push
in
inc
add
mov
mov
jp
jne
push
sub
jno
js
ror
mov
enter
mov
shr
sbb
mov
mov
cs
inc
fcmovnu
int3
(bad)
dec
aas
nop
je
or
adc
sahf
xor
popa
pop
and
inc
data16
xor
clc
aam
bound
les
pushf
mov
cmp
jbe
mov
dec
sbb
xchg
loopne
push
and
(bad)
adc
mov
mov
fdivp
pop
sub
mov
mov
inc
ins
sub
cdq
cmp
adc
and
scas
loope
loopne
fxch
lods
inc
cld
shl
pop
adc
leave
pop
into
and
dec
scas
lds
sub
vmread
(bad)
out
or
mov
(bad)
dec
jge
or
lock
outs
or
sub
jp
sbb
push
loopne
sbb
xchg
dec
mov
pop
scas
pop
mov
cmp
mov
aaa
sub
push
push
xchg
stos
pushf
adc
sbb
inc
aas
out
into
mov
mov
jne
mov
sub
cwde
mov
ds
out
sahf
mov
inc
cld
std
xor
and
(bad)
(bad)
push
ficomp
inc
(bad)
rcr
sbb
js
adc
hlt
pop
mov
cmp
(bad)
cmc
mov
add
fnstsw
dec
outs
(bad)
mov
adc
hlt
xor
push
pushf
xor
dec
inc
test
jne
jns
fcom
mov
mov
mov
fisubr
sub
or
xor
dec
push
ja
push
mov
shr
leave
frstor
jmp
jne
mov
out
ficom
scas
adc
jnp
in
in
cli
jno
inc
push
xchg
jnp
pop
mov
test
aas
into
xchg
push
and
sub
xchg
inc
or
jmp
movs
push
mov
xor
mov
ror
out
cmp
or
jns
idiv
jnp
jecxz
rcr
mov
jl
jo
pop
mov
dec
add
outs
sub
sbb
sbb
dec
ror
xor
inc
sbb
das
outs
cwde
sub
stc
int
int
ret
push
popa
pushf
lock
or
or
sbb
inc
jne
(bad)
cwde
test
push
mov
adc
call
stos
mov
rol
movs
pop
loopne
inc
push
hlt
nop
cs
sti
dec
add
std
cmp
shl
adc
cmp
and
add
or
mov
mov
cmp
cdq
push
(bad)
call
mov
mov
xchg
pushf
sbb
cmp
cmp
mov
mov
cmp
dec
cld
inc
dec
iret
ins
pop
and
clc
adc
push
cmp
jmp
push
pop
popf
imul
adc
aam
(bad)
mov
ror
sti
jge
mov
pop
dec
test
jne
inc
sbb
and
sub
sahf
adc
and
in
ror
mov
ins
test
cmp
adc
xchg
loope
cmp
inc
push
jns
jp
adc
retf
xchg
inc
std
pop
fcomi
jno
push
movs
cmps
mov
xchg
mov
and
lods
popa
ret
stos
retf
je
loope
mov
mov
push
cmp
int
or
mov
push
cmp
rcl
fisub
add
pop
out
out
std
jle
mov
imul
push
sub
cmp
pop
add
jecxz
shl
mov
jmp
dec
sbb
dec
rcl
jnp
xor
mov
loope
jno
retf
mov
or
mov
or
adc
push
int
add
jmp
mov
cs
and
ins
outs
nop
loopne
scas
push
jp
arpl
xchg
lods
mov
and
std
pop
(bad)
push
cli
xchg
and
push
dec
std
shl
test
mov
(bad)
std
stos
mov
xchg
sti
push
cwde
and
push
sub
push
jmp
das
sub
nop
repnz
stc
jg
dec
push
outs
call
aas
mov
mov
or
xchg
imul
(bad)
(bad)
ds
xchg
pop
arpl
xor
std
sub
or
out
sub
ret
loope
xchg
mov
mov
into
mov
xchg
dec
mov
popa
dec
sub
lods
stc
scas
nop
outs
fild
movs
mov
inc
adc
clc
push
adc
cmp
jmp
cmp
call
es
push
cs
out
fwait
inc
xor
cmp
add
sbb
(bad)
fst
cmps
xor
leave
mov
ins
idiv
inc
ins
xor
push
(bad)
scas
std
mov
nop
mov
in
push
jge
outs
(bad)
aam
fisttp
or
or
outs
les
ja
pop
jmp
aad
and
xchg
test
sahf
repz
clc
pop
and
lahf
pop
xor
mov
push
cwde
add
push
mov
and
cmp
(bad)
mov
pop
add
ja
iret
mov
scas
dec
fwait
add
mov
popf
and
cmp
adc
pop
xor
cmp
and
int
ins
pop
vpsubusw
fnstenv
retf
stos
and
(bad)
in
pusha
or
mov
addr16
xchg
das
mov
mov
xchg
inc
out
sub
push
pop
enter
jnp
jmp
daa
dec
lods
mov
leave
or
xchg
pop
sbb
push
xor
jg
adc
dec
adc
add
adc
mov
xor
repz
and
sti
shr
xchg
jo
test
pop
or
mov
push
out
mov
xchg
imul
push
mov
push
leave
or
popa
hlt
xcrypt-ecb
cmps
or
inc
mov
or
inc
sti
test
jp
cmp
inc
xor
jge
into
inc
and
dec
push
neg
mov
sub
pop
mov
imul
dec
push
ins
add
call
fimul
mov
adc
ins
adc
div
pop
in
fnstcw
mov
loopne
fs
lods
dec
push
jbe
or
in
adc
test
enter
repz
stos
(bad)
test
push
dec
mov
mov
sub
jnp
mov
int3
loope
xlat
mov
jno
and
cmp
mov
adc
mov
and
dec
test
inc
(bad)
call
(bad)
leave
lods
mov
add
add
xchg
xor
stos
sub
cmp
xor
cwde
xor
scas
pop
cdq
ret
aaa
arpl
loop
stos
cmps
mov
loop
movs
fisub
(bad)
dec
mov
loop
inc
sub
push
mov
inc
and
fidivr
aas
pushf
clc
mov
test
popf
or
popf
fwait
xchg
leave
scas
je
jb
int
fild
sub
and
popf
gs
add
mov
jg
and
rcr
xchg
cmp
mov
test
aam
out
adc
pop
outs
cmc
jno
popa
xor
lds
iret
dec
neg
imul
sbb
hlt
repz
pushf
sub
inc
cmps
mov
xor
dec
and
sub
cmp
mov
mov
dec
cmp
xchg
das
xor
inc
imul
(bad)
add
pop
lds
outs
adc
jmp
nop
xchg
retf
adc
jo
sahf
out
call
xchg
ins
pop
sub
xchg
lods
es
inc
xchg
xlat
or
mov
icebp
jmp
inc
cdq
mov
cmp
cmp
fs
inc
sbb
sbb
int
or
add
lahf
jp
mov
sbb
mov
(bad)
(bad)
jmp
dec
in
loop
rol
ss
push
loope
or
enter
jns
xchg
mov
pop
fstp
xchg
ins
leave
push
jno
leave
jnp
and
dec
jmp
jmp
sub
push
dec
aam
dec
dec
push
ins
jmp
lods
mov
cmps
mov
adc
add
xadd
xor
pop
push
xor
sbb
or
call
std
push
fmul
pushf
or
and
scas
stc
nop
pushf
push
xchg
mov
(bad)
push
adc
cmps
jb
push
ja
inc
and
rcl
jbe
adc
cmp
xor
jle
mov
lds
xor
arpl
js
loopne
jns
sub
call
xchg
mov
es
or
aas
nop
imul
mov
bt
aam
xchg
imul
push
lock
jmp
jae
ror
loopne
repnz
sahf
fild
dec
scas
jmp
dec
sub
sub
dec
cmp
cmps
repz
dec
xchg
stos
test
scas
push
push
std
into
ror
mov
aaa
mov
push
fisttp
push
cmp
or
aas
dec
stos
cmp
mov
sbb
push
mov
shl
xchg
and
inc
out
dec
aaa
test
mul
mov
push
ja
xchg
add
jg
stos
cmp
pop
ja
outs
cld
dec
pop
and
outs
push
sti
sub
push
mov
and
stos
sbb
lock
fadd
cmp
ror
mov
adc
dec
movs
movs
in
cdq
call
mov
mov
test
push
inc
movs
mov
jne
xchg
loope
mov
mov
stos
push
shr
cmps
lahf
mov
imul
icebp
sub
jno
push
pop
adc
pop
lahf
retf
push
int
jo
inc
je
or
pusha
cmp
mov
popa
test
call
fiadd
jl
cmps
(bad)
aaa
std
cmp
xchg
call
repnz
repnz
retf
sub
stos
scas
or
in
xor
shr
mov
xor
std
mov
xor
mov
push
adc
jno
movs
xor
mul
sub
mov
add
test
lea
adc
pop
lea
pop
ret
data16
cmp
enter
aas
pushf
mov
sbb
loopne
adc
outs
popa
mov
sub
xor
push
mov
mov
pop
add
jle
add
jbe
ror
inc
push
sar
push
cmp
xor
mov
cmp
sbb
clc
inc
movs
dec
and
int3
mov
mov
pushf
mov
lea
out
dec
call
jne
fidiv
inc
fidiv
mov
fs
(bad)
xchg
push
and
cmp
push
pop
je
mov
cmp
(bad)
push
push
sti
inc
cwde
adc
or
repz
repz
(bad)
push
stos
pop
cli
mov
out
call
adc
xchg
(bad)
xor
fnstcw
fst
dec
mov
(bad)
or
and
sub
enter
pop
push
idiv
scas
cmps
pop
repz
cwde
inc
jmp
mov
and
inc
fistp
movs
add
jmp
or
pop
push
and
in
xchg
pusha
or
mov
mov
mov
push
and
jae
mov
scas
pop
mov
leave
aas
adc
cmp
jecxz
cmp
sub
and
ret
pop
mov
loope
imul
jns
pop
int
inc
or
cmps
rep
daa
dec
xchg
test
jae
and
call
xchg
mov
test
mov
push
mov
(bad)
mov
cmps
outs
push
out
mov
xor
enter
hlt
rol
pop
push
scas
rcl
cs
push
adc
push
jg
jle
adc
mov
aad
outs
add
dec
jae
jns
mov
sti
shl
cdq
clc
fidiv
mov
sbb
pop
stos
out
mov
ins
scas
pusha
cmp
test
outs
mov
ja
mov
mov
aad
nop
push
lds
test
cmps
pop
mov
sbb
ds
mov
inc
lea
out
retf
lods
sbb
lahf
push
ror
mov
adc
xor
mov
mov
retf
in
sbb
xchg
cdq
add
pusha
sbb
xor
mov
repnz
es
loop
aad
adc
(bad)
dec
inc
xchg
dec
rcr
mov
cli
push
lahf
stos
dec
std
jle
cmps
daa
sti
sub
xor
mov
dec
imul
mov
xor
add
cs
iret
ficom
stos
sbb
xlat
mov
out
pop
loopne
(bad)
jl
inc
xor
push
and
out
mov
mov
and
dec
test
sbb
inc
or
les
lock
stc
and
jecxz
jo
pop
cmp
mov
mov
pushf
rcr
push
shl
retf
sbb
cld
jle
pop
inc
push
jmp
or
cmc
or
mov
lahf
push
repnz
cmps
idiv
or
das
add
outs
int
ss
adc
daa
out
sahf
imul
gs
and
std
nop
push
ins
pop
xchg
adc
pop
stos
pop
es
add
test
lds
loop
push
jmp
mov
ja
ins
mov
dec
dec
data16
sub
pop
in
xor
xor
daa
adc
jmp
popf
jne
mov
mov
shl
sti
stos
pop
inc
shl
(bad)
mov
addr16
mov
adc
mov
xchg
or
rcr
dec
call
sub
lods
pop
div
repnz
into
retf
in
out
push
enter
int
lock
inc
mov
repnz
pop
repz
xor
sbb
movs
test
add
pop
retf
fmul
(bad)
rol
lods
pop
(bad)
inc
punpckhwd
or
xor
cmp
lea
(bad)
sti
(bad)
test
shl
pushf
cmp
loop
ret
pop
adc
cs
push
cmp
data16
xchg
idiv
int
(bad)
mov
rol
call
push
bnd
imul
sbb
rcl
retf
sub
call
xchg
inc
xor
add
clc
int
mov
or
ds
(bad)
les
mov
push
pop
inc
mov
xchg
dec
nop
ror
add
popa
inc
leavew
(bad)
push
xchg
shl
popa
xchg
(bad)
in
mul
add
fwait
xchg
sub
mov
xor
xchg
push
leave
mov
jnp
add
sub
out
cld
jle
adc
out
push
cmp
cwde
cld
cmp
xor
mov
dec
jo
fisttp
gs
push
sbb
clc
mov
mov
cdq
xchg
pop
mov
xor
adc
jl
adc
sbb
dec
lds
repnz
mov
jle
mov
mov
xor
mov
and
mov
dec
pop
lahf
or
mov
sbb
xor
xchg
ror
(bad)
(bad)
shr
jecxz
or
mov
cmp
lds
xchg
ss
cmp
dec
or
pop
inc
adc
outs
xchg
rcl
int
sbb
cmp
inc
loop
int3
sti
scas
lds
mov
clc
jl
and
jmp
movs
in
push
sub
test
or
xor
shl
mov
or
push
arpl
icebp
push
push
xchg
pop
inc
mov
add
push
les
xchg
adc
(bad)
into
cmp
jmp
gs
out
fstp
imul
jmp
out
or
sub
retf
out
fstp
fisttp
clc
int
pop
lahf
push
mov
xchg
xchg
add
pop
mov
mov
movs
sbb
std
sbb
pushf
sbb
sbb
in
aad
stos
cmps
adc
stos
repnz
stos
pop
or
call
xchg
pop
sbb
arpl
int3
test
mov
pop
fmul
sti
aad
cmps
mov
sbb
outs
and
inc
push
stos
movs
gs
rol
stc
shr
call
adc
inc
xchg
cmp
add
ret
(bad)
arpl
fidiv
xor
xchg
ret
cmps
sub
loopne
cwde
adc
sbb
js
aad
pop
push
mov
sub
xor
sub
std
push
xor
stc
loop
xor
repnz
push
sub
mov
(bad)
or
in
xchg
repnz
push
mov
adc
nop
cmp
pusha
push
dec
test
scas
adc
dec
adc
push
sub
push
int3
push
test
push
stos
in
jmp
repnz
dec
mov
(bad)
(bad)
pop
mov
mov
shl
enter
lods
(bad)
gs
ja
xor
iret
cli
cdq
cmp
sub
jle
add
in
or
lahf
jno
cdq
stos
imul
jecxz
sbb
cwde
out
jno
xchg
inc
mov
rcr
(bad)
xor
ins
add
jle
outs
mov
lods
dec
sub
gs
jl
out
xor
cmp
mov
ins
dec
xor
mov
add
cmp
pop
xor
popf
loop
and
cwde
(bad)
xchg
or
sbb
dec
cmps
jecxz
in
xchg
add
test
sub
inc
fsubr
lods
stos
xor
test
mov
clc
repz
lock
dec
pop
dec
jmp
xchg
(bad)
fsub
dec
popf
push
sub
loope
push
and
inc
jl
jg
nop
mov
inc
in
jmp
rol
mov
cmp
jne
xchg
inc
pusha
lods
add
adc
push
or
(bad)
cdq
lea
dec
jne
cld
jmp
aam
das
push
xchg
aaa
or
movs
inc
repnz
dec
and
popa
and
retf
push
rcl
and
out
ins
mov
stos
movs
int
sub
cmp
cmps
jb
(bad)
in
jb
pusha
inc
push
scas
mov
xor
fstp
and
lock
nop
pop
les
dec
dec
mov
dec
xor
mov
ret
xchg
push
add
push
fs
push
inc
pop
dec
fs
cdq
mov
lock
pop
iret
mov
jge
neg
and
or
cmc
cmp
push
or
in
test
leave
sbb
jecxz
jbe
add
xor
dec
enter
or
xor
retf
sar
jns
arpl
pop
add
mov
imul
pop
cld
mov
sbb
mov
xchg
imul
pop
ds
imul
fsub
pop
mov
cmp
jp
rcr
cs
jno
or
int3
add
adc
ins
int3
push
add
ret
and
adc
retf
or
mov
fdiv
adc
mov
mov
or
adc
mov
ror
in
(bad)
out
mov
in
(bad)
sar
push
sti
arpl
imul
mov
pop
xor
fnstenv
test
and
test
int
pop
int
popa
mov
xlat
in
jb
mov
add
jnp
fnstcw
cdq
push
lods
dec
lahf
in
sbb
push
lahf
shr
loop
push
add
mov
cmp
arpl
daa
lock
idiv
mov
and
cmc
data16
aaa
outs
mov
pushf
push
jl
add
cmp
pop
jo
aam
mov
shr
sbb
add
pop
xor
dec
add
push
popa
jb
bound
and
xchg
lods
fcompp
stos
xlat
mov
mov
inc
push
push
add
das
mov
dec
sti
xor
jmp
inc
jl
mov
xor
xchg
jae
ret
sub
mov
rol
inc
mov
push
xchg
sbb
sbb
sub
idiv
or
cmp
sub
stos
sub
and
adc
popa
aas
ret
aas
push
ss
mov
fnsetpm(287
cmc
pop
sbb
lock
mov
and
and
push
add
add
sub
repz
cmc
push
xchg
sub
shr
clc
push
aad
pushf
call
xor
(bad)
in
call
repz
push
nop
jge
push
lds
adc
(bad)
push
cmps
sub
push
jnp
js
mov
scas
xchg
ins
retf
das
jns
cmp
int3
fild
call
pusha
cs
cmp
lahf
jo
ins
and
cmp
repnz
cmp
stos
icebp
cmp
push
loop
ret
xor
inc
out
dec
mov
jl
dec
mov
mov
jb
ja
enter
test
or
test
(bad)
cmp
add
xor
aas
pop
aam
ror
out
or
sbb
ins
cmp
mov
out
retf
jno
scas
jne
call
stc
retf
xchg
arpl
lea
sub
fimul
cmp
sub
cmp
jge
cmp
into
mov
cmp
push
das
mov
jecxz
ret
push
fstp
cmp
mov
mov
cmp
retf
jnp
xor
pop
and
popa
ror
pop
cmp
xchg
and
ficom
jle
dec
push
jp
dec
pop
aaa
xchg
(bad)
xchg
cs
jg
cmp
ss
cmp
cmp
or
or
inc
lods
pop
adc
shl
dec
cmp
sbb
ss
mov
stos
jge
int
ja
add
and
cmp
xchg
imul
mov
rol
or
popa
fs
(bad)
xchg
push
push
js
sub
scas
push
cmp
dec
xlat
adc
repz
mov
push
mov
cmp
jo
push
mov
push
xchg
cdq
pop
je
test
std
cdq
mov
inc
and
popf
and
push
jmp
jns
int3
aaa
shr
mov
(bad)
xchg
push
jbe
iret
(bad)
pop
inc
pop
call
pop
imul
push
pop
clc
pop
inc
mov
sub
mov
jbe
sbb
xor
std
mov
std
pop
lods
jge
rcr
sub
mov
dec
cdq
xlat
inc
cmp
inc
or
outs
leave
loope
mov
retf
(bad)
in
xchg
rol
add
ficom
sbb
inc
in
cli
pop
sub
cmp
mov
aam
jb
(bad)
jns
lahf
cmp
mov
lock
bound
pop
sbb
ss
dec
push
sbb
mov
popa
cdq
jge
or
nop
mov
popa
jle
out
pop
retf
imul
and
cmp
icebp
es
(bad)
arpl
lea
push
clc
jl
jnp
mov
std
xor
or
cmc
loope
je
and
fucomi
and
lock
aam
enter
xchg
ss
dec
mov
pop
out
xchg
retf
xchg
jns
xor
mov
adc
xor
enter
sti
fwait
jbe
call
mov
jecxz
cmp
mov
mov
dec
xchg
push
add
add
rcr
xchg
ror
dec
(bad)
outs
mov
(bad)
jnp
rep
ret
into
aad
sbb
mov
jge
pop
mov
fcomp
sbb
adc
mov
cmc
mov
pop
in
push
call
dec
loope
mov
sbb
rcr
(bad)
les
ret
lock
retf
and
lock
push
int3
ins
sub
push
inc
jp
add
aaa
aas
pop
imul
mov
mov
popf
ss
lock
popf
stos
sub
sub
mov
cld
mov
fdiv
pop
cmp
jnp
pop
push
(bad)
xor
sub
pop
cmp
pop
cmps
lods
and
xor
test
repz
add
in
mov
and
sub
imul
jle
outs
dec
push
add
lea
stos
inc
scas
fidiv
push
pushf
or
push
mov
dec
inc
inc
push
in
jne
mov
in
leave
add
mov
or
pop
pusha
(bad)
popa
push
(bad)
movs
add
sub
rol
add
ret
int3
or
jmp
adc
cmp
rcr
fild
hlt
movs
pop
push
movs
sbb
(bad)
mov
idiv
repnz
xchg
pop
loop
mov
inc
or
clc
mov
cmp
bound
mov
mov
bound
mov
fstp
ds
jo
lock
pusha
adc
std
cmp
xchg
loopne
outs
xor
mov
dec
fiadd
aad
stos
sbb
and
and
or
les
inc
outs
adc
dec
push
add
jns
mov
cmp
sub
sbb
mov
add
dec
adc
cs
mov
iret
push
mov
xchg
popa
stos
dec
bound
inc
or
inc
out
mov
sub
mov
stc
shr
into
ins
xor
cmc
lods
enter
add
popa
in
ja
xchg
cmp
ins
push
out
xor
nop
mov
out
stos
(bad)
pop
jmp
mov
lods
xor
es
dec
mov
enter
sbb
pop
cmp
je
xor
inc
jg
scas
lods
mov
imul
pop
mov
adc
mov
cld
in
adc
pusha
cs
inc
push
xchg
(bad)
fldcw
ret
xor
hlt
mov
push
test
and
and
fdivrp
test
push
out
not
cmp
test
sahf
shl
pushf
(bad)
fistp
arpl
popf
add
or
in
lds
pop
aaa
push
push
repz
ror
pop
inc
fdiv
inc
scas
add
lea
push
xchg
mov
adc
les
adc
cdq
mov
xchg
aas
nop
mov
cmc
inc
cmps
bnd
add
or
pushf
push
pop
mov
jle
retf
adc
test
jmp
je
inc
xchg
imul
jb
ins
adc
pop
popf
ja
ror
imul
sti
jne
imul
arpl
push
push
adc
popf
dec
movs
out
stos
sbb
repz
ret
cmp
mov
inc
cdq
les
es
sbb
adc
fs
neg
push
mov
xchg
xchg
arpl
mov
pop
dec
mov
ins
dec
icebp
or
call
xchg
outs
imul
xchg
dec
mov
and
scas
(bad)
imul
mov
pop
shr
or
add
call
stos
in
das
pop
cs
ret
repnz
dec
sub
pop
arpl
outs
sub
mov
jg
div
mov
mov
jecxz
add
and
fbld
push
sbb
jp
repnz
mov
out
fwait
stos
test
mov
out
xor
xchg
fdivr
or
jp
mov
mov
jno
retf
int
stos
cs
and
mov
iret
fbld
xor
repnz
jbe
test
sahf
lds
call
loope
or
repz
inc
dec
lock
aad
mov
jmp
push
pop
pop
loopne
ret
mov
retf
push
jnp
enterw
cmp
cmc
and
mov
fistp
lods
retfw
out
pop
sub
pusha
lock
xchg
sar
adc
in
and
dec
inc
leave
cs
dec
cmps
int3
jmp
call
imul
sbb
push
inc
retf
push
mov
jno
retf
push
sub
je
test
mov
cmp
das
mov
mov
jne
fs
inc
add
sub
div
xchg
cmp
retf
add
test
shl
mov
and
aaa
ja
fcomp
sub
push
arpl
mov
push
test
aaa
jno
aaa
fwait
xor
imul
sub
inc
xchg
ret
jg
call
in
stos
sub
pop
sub
rcr
mov
shr
fdivr
les
test
mov
loope
sbb
xlat
loope
in
dec
lods
sbb
sti
mov
xchg
add
lds
mov
inc
js
dec
xchg
les
add
ja
xor
ret
repnz
js
(bad)
lods
cwde
jle
(bad)
ins
add
sbb
sub
mov
pop
and
jae
adc
rcl
mov
pop
inc
adc
fild
sbb
jmp
div
sub
mov
push
pop
sub
xchg
mov
add
adc
sub
xor
pop
fnstcw
push
pushf
adc
daa
mov
sbb
out
cwde
xor
jle
neg
mov
jmp
xlat
iret
movs
mov
call
dec
mov
stos
inc
enter
pop
mov
fst
je
sbb
xlat
fisubr
popa
sub
sub
js
mov
je
scas
inc
pop
xchg
dec
shl
popa
mov
jae
ror
xchg
repnz
fmul
pop
lods
mov
sub
test
leave
mov
lds
mov
sbb
add
arpl
mov
inc
lods
int3
inc
mov
mov
mov
popa
sub
mov
push
and
cdq
or
mov
or
dec
xchg
(bad)
adc
push
mov
test
fbstp
push
push
ins
pop
les
inc
inc
call
dec
dec
data16
mov
dec
pop
or
sub
test
pusha
or
outs
xchg
jbe
in
dec
xorps
sbb
or
adc
or
sub
or
or
push
cmp
lods
repnz
js
adc
cld
adc
jmp
mov
dec
sub
dec
dec
cmc
jb
mov
add
or
mov
rcl
jo
mov
in
jecxz
lods
sbb
call
fisubr
ror
mov
clc
jmp
sub
ins
popa
inc
pop
push
cld
pop
xchg
xchg
(bad)
adc
outs
xor
loope
fist
call
repnz
and
shr
xchg
adc
xlat
nop
rcr
stos
lods
out
push
cmp
adc
arpl
ins
add
repz
mov
lods
js
nop
sbb
and
sub
clc
aas
sar
mov
inc
frstor
jge
sbb
(bad)
fst
iret
sbb
xchg
and
xor
mov
sbb
mov
ja
or
lods
inc
lds
dec
sbb
pop
fdivr
pop
xchg
mov
jmp
jmp
test
cld
stos
xor
cli
loop
add
push
out
cwde
or
sub
mov
pop
icebp
add
or
cwde
cmp
mov
jno
or
push
push
jmp
xlat
mov
retf
movs
test
or
int3
test
(bad)
xor
into
wbinvd
test
ins
lahf
fisub
out
cmps
xchg
das
icebp
mov
(bad)
das
or
cmc
push
repnz
ret
int
mov
xor
and
std
push
pop
xlat
scas
jle
pop
daa
lahf
cmp
(bad)
cmp
xchg
cmp
in
and
(bad)
(bad)
ds
push
pop
cmp
hlt
inc
add
shl
enter
mov
retf
push
outs
push
mov
lock
sub
xchg
pushf
(bad)
jb
inc
mov
scas
sahf
fwait
fs
dec
jae
outs
pop
repz
ss
fisttp
in
xor
in
mov
int3
das
jae
(bad)
lods
mov
push
pushf
sub
iret
aaa
ror
clc
pop
push
mov
jmp
scas
inc
mov
aam
push
(bad)
mov
push
cmps
inc
xchg
lods
(bad)
cmps
inc
mov
mov
enter
push
addr16
mov
not
inc
or
int3
dec
cmp
repnz
sub
je
or
and
daa
lea
fld
and
fldenv
jbe
dec
jne
xchg
pop
test
js
jno
xchg
(bad)
mov
aam
mov
int
inc
cdq
stos
mov
call
adc
stc
dec
xor
mov
nop
sub
int3
dec
adc
sub
stos
(bad)
jmp
imul
push
and
shl
cs
mov
mov
mov
imul
(bad)
movs
mov
mov
scas
xchg
adc
cmp
pop
call
cmc
push
push
sbb
ja
and
inc
lods
dec
fld
retf
nop
jns
fisubr
push
inc
adc
pop
dec
xor
or
cmps
pop
fisub
cmp
lahf
shl
sbb
inc
ja
pop
rol
shr
push
arpl
fbstp
xchg
jge
and
pop
cmp
idiv
xchg
and
pop
imul
mov
cmp
jle
std
or
shl
rcr
jmp
cwde
lahf
call
xchg
sub
xchg
fs
push
inc
adc
jl
xchg
mov
xor
pop
add
mov
loopne
mov
sbb
arpl
mov
sub
push
aam
push
(bad)
das
or
push
sbb
pusha
inc
scas
lahf
addr16
jge
lods
daa
sub
ins
ins
les
bound
cmp
push
inc
adc
fdivr
pushf
sbb
dec
fisttp
int
cs
xlat
js
xor
cdq
jmp
inc
pop
add
mov
imul
xor
push
mov
jp
adc
popf
in
xchg
fsubr
xchg
retf
and
outs
mov
leave
test
cld
jge
jp
in
inc
jbe
pop
cs
int3
daa
lock
xchg
push
fstp
stos
sbb
inc
in
xchg
dec
(bad)
mov
jg
cld
in
adc
mov
add
inc
inc
cwde
push
jnp
ret
sahf
sbb
pop
adc
clc
fwait
sbb
inc
push
xor
ret
test
and
dec
lods
sti
and
adc
adc
sbb
mov
lahf
rcl
mov
retf
adc
rcr
movs
rcl
mov
mov
jns
shl
inc
cmc
push
scas
xchg
sub
hlt
inc
add
jnp
fsubr
mov
add
xchg
xchg
ret
popf
lods
fsub
fcmovbe
dec
inc
cmp
xor
mov
jmp
stos
add
jecxz
sbb
ds
js
pop
inc
aaa
into
mov
and
pop
icebp
loopne
add
mov
sbb
ror
jne
(bad)
and
gs
std
lods
les
stos
mov
dec
cs
jl
int
pop
lock
setnp
stc
jmp
push
dec
push
daa
dec
add
enter
cli
push
xchg
fwait
call
fmul
and
sub
retf
inc
jg
adc
jp
mov
pop
pop
pop
dec
mov
ds
movs
je
out
jmp
cdq
lock
ficom
xor
cmp
and
test
call
cli
add
cmp
or
adc
cs
pushf
ror
cmp
jecxz
inc
test
(bad)
and
out
inc
pop
ret
push
or
mov
mov
sub
sbb
xchg
push
fst
mov
push
inc
repnz
mov
xchg
fsub
rol
mov
not
cmps
push
mov
add
and
out
inc
xchg
xor
xor
adc
test
jno
jle
push
out
push
add
shl
mov
call
mov
call
push
outs
mov
mov
xchg
sub
adc
jp
popf
mov
mov
fs
inc
mov
adc
shl
addr16
les
stos
arpl
xor
pop
ret
or
xchg
cmc
pusha
xor
pop
inc
adc
inc
jmp
hlt
daa
cmc
or
ficomp
xlat
mov
mov
imul
call
je
jns
hlt
adc
loopne
shr
xchg
pop
push
(bad)
in
mov
xor
cdq
cld
mov
mov
sub
mov
loope
call
inc
or
not
ins
xor
dec
rcl
or
cdq
std
repnz
sbb
xor
push
stos
outs
mov
pop
mov
sbb
mov
ret
les
loop
inc
inc
sahf
lahf
adc
std
imul
retf
xchg
loopne
neg
and
das
out
dec
rcl
jo
push
xchg
lods
rcpps
imul
inc
pop
jl
xchg
xor
jb
inc
jno
es
adc
imul
cmps
loopne
pop
adc
jg
cmp
in
dec
(bad)
jo
dec
xchg
jge
adc
or
mov
js
jnp
pop
inc
xchg
test
std
or
leave
push
imul
retf
mov
inc
mov
xor
pushf
mov
jmp
xor
leave
arpl
mov
frstor
inc
mov
mov
xor
fcmovu
int3
sub
stc
xor
outs
call
pop
push
and
(bad)
mov
dec
outs
pop
or
sbb
jbe
dec
cwde
and
push
in
jmp
ret
cmp
push
stos
(bad)
dec
loope
into
cli
test
jg
(bad)
push
out
mov
inc
jp
dec
mov
fistp
sub
mov
dec
dec
mov
nop
frstor
outs
pop
adc
push
jle
jnp
mov
add
xor
dec
adc
(bad)
fadd
div
mov
mov
jne
pop
scas
add
clc
adc
add
inc
cmp
mov
iret
inc
cmp
sub
ret
mov
xor
jns
call
mov
inc
cs
inc
outs
jae
cmp
aaa
push
dec
pop
test
stc
test
jge
retf
pop
mov
add
push
loope
pop
xor
add
stc
out
movs
sub
jo
cmp
pop
push
and
fsub
loop
movs
sahf
loopne
pop
repnz
in
mov
bound
outs
sub
std
in
in
imul
outs
add
or
xor
sub
mov
les
jne
inc
inc
(bad)
es
add
cli
les
jnp
xchg
(bad)
jecxz
(bad)
sub
pushf
es
add
pop
dec
es
ror
loope
(bad)
movs
rol
es
hlt
jo
pop
push
mov
ret
mov
call
mov
jmp
leave
aam
movs
add
imul
sub
aaa
leave
cmps
shl
jnp
jae
es
mov
mov
push
lods
mov
popf
xchg
outs
fcom
imul
cdq
cmps
test
cli
dec
and
lock
sub
scas
push
jno
dec
clc
pop
mov
cmp
sahf
faddp
cs
mov
xor
inc
sub
aad
imul
jp
push
xor
or
xor
call
push
(bad)
and
rcl
inc
add
mov
sbb
add
ins
dec
icebp
in
data16
and
in
xor
inc
ficom
dec
push
xlat
jle
icebp
add
out
movs
dec
sbb
arpl
jecxz
out
add
jp
dec
retf
test
add
or
push
push
rdtsc
scas
inc
cmps
aad
shl
xlat
pop
mov
sbb
stc
mov
int3
nop
clc
mov
xchg
popa
pop
ror
mov
mov
jg
stos
xor
test
out
lea
stc
in
mov
or
movs
out
cwde
daa
stos
dec
xchg
mov
fsub
xor
push
imul
fdivr
add
sub
adc
retf
xchg
test
sbb
xchg
mov
mov
sbb
jbe
pop
into
and
pop
mov
pop
ret
aas
outs
mov
sar
imul
repnz
hlt
leave
mov
ret
xchg
add
movs
pop
neg
stos
aaa
mov
enter
cmp
sbb
xor
mov
stc
in
in
mov
ss
xchg
sub
popf
cdq
mov
jns
adc
dec
add
rep
test
mov
das
xchg
xchg
jmp
inc
js
dec
xchg
pusha
in
loope
leave
mov
jne
scas
call
rol
leave
aaa
and
mov
push
mov
dec
movs
in
jmp
jmp
fdivp
jne
out
adc
shl
movs
sbb
add
imul
xchg
xchg
inc
std
call
ds
or
xchg
or
xor
xchg
dec
dec
inc
jmp
scas
mov
into
xor
clc
movs
les
mov
xor
movs
xor
push
xor
dec
loop
adc
in
outs
or
pop
into
daa
shl
outs
in
add
movs
or
jnp
fwait
xor
jo
xor
inc
retf
shl
mov
ds
adc
or
jne
mov
xor
jo
sub
cdq
and
adc
sub
sbb
adc
adc
lock
xchg
aas
mov
in
sub
pop
inc
push
jb
shl
aad
dec
cmp
mov
scas
push
neg
stos
pusha
out
sti
jge
mov
repnz
pusha
mov
(bad)
mov
aad
enter
jp
sahf
mov
jno
sub
or
mov
mov
add
gs
movs
adc
push
pop
and
jbe
xchg
or
clc
jl
cmp
push
stc
imul
adc
fld
jo
sbb
push
ret
and
sti
pop
push
out
sub
aam
xchg
dec
iret
xor
push
mov
inc
shl
xchg
test
adc
stos
cmps
mov
imul
cmp
hlt
cli
jmp
cdq
add
xor
mov
je
xor
jecxz
mov
inc
xchg
int
fstp
xor
shl
adc
cs
dec
popf
hlt
push
and
(bad)
pop
push
mul
sub
dec
push
mov
cdq
rcr
jmp
xor
sub
mov
test
mov
pop
rol
(bad)
pop
rol
mov
pop
addr16
or
jl
test
xor
ret
div
pop
mov
mov
mov
lds
push
lea
add
dec
or
retf
out
lods
add
and
fist
aaa
mov
inc
xchg
outs
stc
inc
je
and
popf
push
mov
jbe
inc
sub
mov
ins
enter
mov
lock
pop
sbb
cdq
jae
add
mov
int
mov
jge
jge
dec
xor
sub
add
add
xor
outs
sub
jae
jge
je
into
hlt
mov
xor
cmp
xchg
js
push
mov
sub
scas
aad
cmps
fdiv
std
mov
fldcw
(bad)
pop
pop
cmp
mov
mov
xchg
in
push
sub
nop
adc
inc
hlt
or
cmp
jg
mov
mov
xchg
xor
ds
jl
jne
xor
sub
fistp
mov
and
sar
and
hlt
scas
pop
frstor
daa
push
or
jl
arpl
scas
cmc
jno
mov
fisub
jmp
mov
dec
push
fwait
mov
hlt
lods
xor
inc
cld
ret
pop
add
gs
dec
cmp
jmp
jnp
ins
push
fdivr
fdiv
adc
jns
mov
sub
dec
cmps
cdq
pop
sub
xchg
jae
fldcw
and
or
inc
(bad)
inc
jmp
stc
cmps
cs
mov
daa
dec
enter
jl
inc
daa
cwde
rcr
and
adc
leave
mov
xchg
outs
or
iret
in
sub
push
fnsave
cmp
stos
inc
pop
and
ror
pop
mov
mov
ret
inc
sbb
and
lods
cs
inc
call
push
mov
jbe
jnp
add
jl
add
jmp
lock
fidiv
or
lods
ds
test
push
xchg
pop
pop
out
sti
xchg
lahf
ins
push
pop
xlat
call
push
ja
sub
sar
fsubr
and
push
fcom
mov
icebp
xor
xor
movs
fld
scas
call
outs
int3
xchg
pop
xchg
call
ret
out
push
xlat
retf
and
mov
jl
push
sub
fcomp
addr16
mov
or
xor
jb
and
into
adc
mov
mov
in
dec
inc
in
add
xor
jns
(bad)
mov
retf
push
jne
test
adc
cmc
or
stos
rcl
scas
inc
rcr
cmp
addr16
retf
test
hlt
sub
in
or
pop
loope
clc
or
js
imul
shl
aas
pop
call
sbb
and
and
mov
pop
sar
cmp
test
aas
xor
out
cli
mov
jmp
sbb
cmps
push
rol
sbb
add
dec
out
dec
mov
and
test
xchg
mov
inc
add
jmp
(bad)
adc
push
inc
js
xchg
cwde
iret
mov
cmp
mov
jne
sbb
mov
xor
ja
lea
inc
in
sub
mov
leave
ror
add
mov
popa
and
pushf
pop
pusha
fisub
mov
call
ret
mov
ret
dec
jl
cmps
pop
int
loopne
and
push
out
imul
pusha
enter
mov
sub
int
iret
call
out
pop
pusha
cmps
sbb
mov
cli
adc
dec
popa
fimul
cli
mov
lods
mov
out
xchg
lods
mov
fimul
icebp
or
mul
cdq
jno
mul
add
shl
ins
outs
addr16
(bad)
adc
xor
sbb
xchg
mov
push
jmp
dec
call
xchg
test
in
test
popf
cmp
or
xchg
push
dec
(bad)
test
or
loop
ret
sub
dec
jne
or
pop
fwait
mov
and
jno
stos
(bad)
xlat
jl
push
pop
jns
pop
cwde
fcomi
xor
sub
mov
fs
les
push
sub
xor
test
les
mov
gs
sbb
pop
popa
retf
xor
mul
mov
iret
jmp
xor
xor
or
push
sub
pusha
push
adc
loopne
or
xor
dec
sub
int
xchg
call
jmp
scas
push
scas
push
or
repnz
pop
xor
std
dec
les
pop
lds
in
pop
add
inc
add
loop
(bad)
ds
popa
gs
sahf
dec
fucomi
sub
je
test
movs
loope
sub
aad
add
int3
std
and
sbb
shl
inc
sti
mov
sbb
mov
aam
lea
retf
mov
dec
xor
mov
bound
fcomp
retf
call
leave
cmps
test
or
fcom
out
pop
push
dec
inc
jge
jnp
(bad)
scas
mov
jp
xor
movs
retf
cmp
retf
sbb
ins
cwde
jmp
xchg
jne
jle
fistp
mov
sub
shl
dec
mov
dec
mov
sub
sub
clc
shr
inc
add
test
out
loop
add
mov
inc
lock
dec
pop
sub
inc
jnp
movs
sbb
fwait
cli
mov
stos
push
into
es
jmp
pop
call
in
test
inc
adc
add
mov
imul
inc
retf
xor
aaa
mov
mov
dec
fld
pslld
pop
jmp
inc
in
mov
(bad)
imul
scas
and
add
adc
out
daa
jecxz
or
test
xor
fdiv
out
ret
and
shr
and
dec
ret
or
in
sbb
xchg
fnstsw
pop
ins
daa
in
sbb
mov
icebp
jge
pop
and
xor
mov
xor
arpl
lahf
bound
jno
lods
cmc
in
scas
lahf
arpl
mov
inc
inc
xchg
xor
adc
sub
dec
push
ss
push
out
sti
push
out
cmc
dec
xchg
aam
sbb
jns
add
mov
jmp
or
push
hlt
jmp
xor
call
inc
(bad)
ret
daa
adc
sbb
daa
xor
inc
xchg
dec
cwde
mov
lds
pushf
pop
nop
cmp
(bad)
outs
sbb
repz
dec
mov
pusha
and
sub
adc
sbb
inc
daa
lods
(bad)
mov
xor
pusha
repnz
push
test
data16
fwait
jmp
xor
dec
scas
fchs
sbb
and
jno
data16
scas
imul
mov
cmps
retf
inc
into
xor
cdq
sbb
dec
xlat
xchg
hlt
test
jo
aaa
mov
nop
jne
jle
sar
psubq
cmp
mov
and
mov
add
cmp
icebp
jge
pop
mov
xchg
xchg
or
ficom
(bad)
sub
mov
popf
fs
sbb
xchg
xor
repz
loopne
cmp
dec
retf
sub
mov
pop
mov
add
add
test
sub
or
ja
pop
push
sub
xchg
clc
cmp
(bad)
or
pop
push
pop
jmp
inc
outs
or
ss
jecxz
mov
mov
fisub
aas
sub
and
jne
jae
fdiv
in
dec
mul
jb
call
dec
(bad)
sti
fsubr
push
and
jmp
push
sbb
xchg
jnp
pop
inc
and
adc
inc
rol
lahf
addr16
aas
adc
inc
cli
das
mov
loop
not
jae
lods
xchg
push
mov
mov
cmp
and
in
iret
imul
inc
pusha
sbb
outs
dec
sbb
jnp
lods
push
xor
or
sar
push
xchg
cmc
daa
mov
loope
xor
xchg
push
xchg
pop
fdivr
gs
loope
loope
icebp
popa
outs
xor
ficomp
adc
dec
in
sub
adc
sbb
(bad)
fisttp
scas
xchg
jecxz
or
aad
iret
iret
(bad)
cmps
push
jae
mov
mov
mov
cmp
js
mov
out
lds
mov
xchg
jnp
xor
adc
sti
jle
cmp
push
mov
mov
js
jae
popa
sub
fwait
and
outs
pop
xchg
ds
cmps
scas
(bad)
lock
out
cmp
mov
adc
push
xor
sbb
sub
inc
pop
test
fbstp
xor
retf
mov
daa
or
sbb
add
(bad)
mov
shl
sub
cmp
dec
rol
fmul
sbb
inc
fwait
std
ss
frstor
xchg
push
call
call
and
dec
dec
push
(bad)
push
arpl
mov
xchg
mov
je
ins
add
sar
mov
out
inc
push
sub
ret
and
add
xlat
pop
movs
ss
add
mov
and
mov
lods
push
imul
ss
sub
shl
idiv
jbe
sub
outs
sub
in
or
push
test
popf
mov
fwait
stc
fld
cmp
sti
xchg
push
mov
stos
lea
cmp
aam
fs
ja
mov
add
int
and
sub
jg
mov
test
cli
or
cwde
data16
outs
mov
loop
clc
jno
das
ja
mov
or
pop
pusha
adc
retf
pop
pop
pop
dec
or
or
jp
cmp
fmul
pop
or
lods
push
outs
pushf
adc
dec
push
shr
mov
(bad)
pop
or
ror
push
out
stos
push
dec
and
(bad)
pop
jg
repnz
shl
fwait
pop
dec
repz
fisttp
push
fdivr
retf
mov
push
movsx
data16
xchg
add
ins
sbb
add
mov
into
or
imul
and
push
cmps
inc
cmps
jle
push
xchg
daa
aad
leave
xchg
retf
push
not
dec
mov
push
pop
push
scas
out
bound
je
push
or
(bad)
fmul
stos
ins
popf
mov
mov
dec
sbb
mov
cmp
and
dec
mov
ror
mov
call
inc
bound
sbb
inc
adc
inc
in
and
and
lahf
push
fisub
rcr
sti
scas
fld
pop
xor
mov
mov
add
ds
xchg
adc
movs
bts
add
js
jmp
jmp
out
adc
int
cwde
dec
add
sar
shl
and
adc
stos
mov
xor
cmp
shr
push
mov
xor
ins
gs
enter
vorps
add
or
cmp
xor
cs
sti
fbstp
fsubr
imul
xchg
out
out
lods
cmp
pusha
push
sbb
lods
repnz
inc
jno
cld
inc
mov
pop
cmps
leave
pop
add
mov
outs
jecxz
cmps
jno
fs
int3
dec
lock
or
inc
loope
mov
(bad)
mov
in
mov
ds
mov
xchg
add
inc
xor
rcr
retf
sbb
addr16
sbb
fstp
and
adc
cs
test
mov
(bad)
loop
test
mov
jb
or
push
push
push
stos
movs
dec
div
push
ret
(bad)
jne
xchg
pusha
push
not
out
sahf
cmp
push
xchg
std
push
jge
xlat
xchg
sub
imul
lock
add
xchg
stc
mov
mov
push
xor
shr
cld
add
sar
scas
cwde
push
ins
or
inc
pop
jmp
(bad)
popf
add
or
sti
(bad)
xlat
cmovne
add
ret
call
cmp
scas
and
js
les
pop
test
sahf
add
aam
fcomi
adc
sar
add
inc
add
mov
ror
ins
jmp
pop
and
jns
ds
repnz
ins
out
push
popa
push
int
ja
(bad)
and
ret
daa
cdq
xchg
and
hlt
xor
repz
addr16
mov
pop
xchg
sar
mov
adc
mov
xor
les
je
add
cmp
cmp
imul
ret
mov
xchg
jne
in
inc
adc
lods
(bad)
inc
dec
or
jne
pop
mov
sbb
adc
(bad)
and
adc
inc
adc
call
(bad)
fsub
ins
cli
inc
push
loopne
fst
lock
aas
out
inc
or
pushf
mov
or
jl
(bad)
(bad)
mov
pop
jo
pushf
and
xor
outs
pop
loopne
add
sub
adc
loopne
inc
(bad)
dec
mov
lods
adc
pop
jmp
sub
out
(bad)
adc
lods
and
fs
cmps
jle
xchg
xchg
push
mov
mov
nop
sbb
jnp
cmp
pop
cmp
inc
neg
pop
jnp
bound
fsubr
ja
mov
cmp
pop
dec
or
pop
fwait
dec
inc
cmp
mov
leave
inc
mov
xor
sbb
mov
sub
jmp
and
adc
test
xchg
add
adc
add
hlt
ins
pop
in
jg
jmp
pop
dec
mov
jbe
mov
nop
repnz
add
and
dec
mov
xor
fwait
push
ins
ds
and
sbb
push
sub
jle
cmc
adc
(bad)
mov
fisttp
hlt
data16
mov
test
clc
ins
and
cmp
ins
icebp
mov
pop
inc
adc
into
or
jmp
dec
or
outs
push
sbb
mov
ss
js
push
sbb
xchg
arpl
mov
mov
xchg
fdivr
xor
(bad)
out
icebp
xchg
or
rcl
je
mov
jae
jg
dec
jb
jmp
inc
es
loope
sahf
xchg
xchg
daa
push
repnz
add
dec
cmp
sub
sbb
cli
in
sub
push
push
dec
pop
xchg
pop
push
ins
lods
dec
dec
cwde
sub
rol
outs
xchg
pop
mov
pop
inc
movs
cld
adc
push
push
mov
fwait
mov
sti
and
test
loop
in
inc
cmp
iret
jg
imul
sub
in
aas
movs
ja
aas
fwait
push
(bad)
jmp
mov
ss
outs
mov
shr
mov
xor
enter
scas
test
or
(bad)
jmp
mov
mov
inc
ja
mov
addr16
inc
ja
stos
test
push
test
loopne
jmp
mov
sub
shl
pop
stc
repz
pop
es
out
mov
loop
fisub
sub
fcmovnb
mov
lahf
xchg
sbb
(bad)
aaa
jno
out
out
sbb
xor
nop
mov
mov
das
jl
mov
retf
mov
rep
sub
pusha
push
mov
shl
mov
sub
sbb
cmps
stos
inc
or
fs
pop
sub
arpl
sub
mul
cmp
(bad)
xchg
out
jno
das
adc
into
sub
sahf
push
(bad)
push
sub
js
ja
scas
xchg
outs
test
jae
xchg
jecxz
cld
cdq
lods
adc
bound
jp
add
(bad)
out
add
cmp
dec
pop
xchg
add
pop
fsubr
jo
sub
add
dec
xchg
fiadd
dec
pop
inc
jle
sub
aaa
or
das
test
test
neg
test
arpl
scas
push
sbb
mov
adc
push
ror
test
movs
sahf
or
ins
(bad)
and
fiadd
dec
mov
nop
outs
outs
movs
pop
mov
mov
xchg
mov
cli
retf
not
imul
test
je
and
and
sub
imul
pop
stc
add
cmps
aad
mov
mov
ret
jecxz
aaa
sahf
pop
lock
(bad)
xchg
pop
shl
adc
mov
fmul
fwait
xor
push
cmp
jo
mov
cmps
lods
fstp
call
rcl
in
dec
pop
mov
mov
jle
into
dec
inc
ret
xchg
or
ss
ror
fimul
dec
enter
out
xchg
add
mov
(bad)
cwde
je
inc
sub
mov
xchg
fs
or
push
add
ds
add
and
xor
inc
dec
sbb
jmp
sbb
imul
cli
push
ficom
ja
push
scas
loop
clc
call
jns
cmp
mov
sbb
cmp
cli
in
inc
mov
dec
xchg
xor
jp
and
push
push
jmp
(bad)
out
dec
std
and
fmul
adc
pop
cmp
or
icebp
push
fcmovb
add
std
jne
adc
jae
pop
xchg
lahf
sbb
dec
arpl
retf
test
jae
sbb
(bad)
imul
jp
addr16
xor
imul
dec
sub
leave
out
jmp
int
mov
dec
jle
lea
into
mov
shl
ins
jbe
int3
xchg
movs
mov
(bad)
mov
imul
jl
mov
inc
daa
loop
sbb
inc
loopne
pop
ror
and
or
retf
pop
mov
or
jae
push
rcr
addr16
sub
arpl
sub
jmp
jmp
retf
cmps
clc
or
mov
and
addr16
jae
xchg
dec
sahf
ins
fmul
push
inc
jb
sbb
jmp
push
dec
push
aas
(bad)
icebp
fwait
sbb
adc
scas
call
xchg
push
shl
add
fwait
mov
(bad)
push
imul
stc
mov
inc
sub
cli
adc
pop
mov
leave
inc
and
mov
add
dec
lock
pop
mov
rcr
inc
into
aad
pop
mov
mov
fsub
or
xor
or
xchg
(bad)
scas
cmp
mov
ret
cs
push
data16
pop
cmp
inc
mov
jge
dec
(bad)
adc
jnp
in
jle
mov
call
inc
jo
sbb
sti
and
xor
aas
fwait
mov
imul
fsub
(bad)
pop
fcomip
mov
adc
mov
int3
xchg
ss
dec
(bad)
in
sti
ret
cdq
inc
int
rcl
pop
mov
mov
inc
adc
scas
std
xchg
jbe
jo
xor
aad
adc
add
mov
cmps
fidivr
mov
aas
in
popa
ja
mov
mov
movs
adc
pop
pushf
pop
retf
mov
lods
pop
test
aam
stos
call
shl
inc
leave
loop
pop
aad
xor
fcomip
sbb
nop
clc
mov
rcl
lods
add
das
inc
push
cld
mov
push
add
mov
jnp
(bad)
fild
aad
add
fwait
or
sbb
dec
jne
retf
outs
pop
rol
or
mov
and
aaa
dec
inc
xchg
inc
inc
test
inc
pop
test
mov
loopne
push
add
sahf
mov
aaa
jnp
mov
inc
mov
pusha
mov
push
mov
in
inc
sbb
jmp
mov
inc
dec
sbb
mul
sbb
fsubr
push
inc
inc
xor
inc
dec
push
(bad)
bswap
sub
sbb
pop
ins
inc
nop
xor
mov
sbb
rol
pop
dec
and
push
enter
aaa
fnstenv
xlat
test
frstor
lahf
js
lods
mov
jb
mul
cmp
in
jno
outs
push
mov
lods
pop
jge
adc
sbb
inc
mov
lock
pop
cmp
or
push
sbb
fist
je
imul
jo
fmulp
push
inc
arpl
xchg
in
and
add
enter
(bad)
aam
mov
adc
xchg
lock
jge
adc
inc
stc
sub
mov
shl
pop
jo
call
add
jle
pop
cwde
mov
pop
mov
xor
fwait
ins
clc
ins
test
sbb
daa
fsub
movs
mov
(bad)
and
inc
shl
in
dec
jne
into
ror
dec
in
or
jb
test
mov
(bad)
jmp
cmps
fmul
into
pop
cmps
inc
pop
adc
(bad)
sbb
add
sub
ret
nop
iret
daa
test
push
test
loopne
jg
aam
dec
hlt
pop
mov
imul
test
jecxz
sub
mov
mov
scas
shl
call
jnp
movs
jno
sbb
(bad)
ins
inc
push
mov
sub
ja
inc
sub
cs
ins
pusha
fucomip
popf
mov
inc
jb
and
jo
dec
hlt
or
jo
in
dec
adc
mov
pushf
xchg
ret
jo
xchg
icebp
retf
push
lahf
idiv
test
adc
push
mov
retf
mov
jmp
rcl
push
rcl
sbb
pop
jo
xchg
enter
cdq
mov
add
test
xchg
stos
(bad)
jmp
aas
enter
jl
imul
stos
sub
adc
repz
hlt
push
xor
add
iret
lock
int3
dec
adc
(bad)
(bad)
inc
jne
dec
pop
pop
repnz
mov
int
sar
(bad)
xor
add
ins
xor
xor
inc
xor
inc
pushf
test
jnp
jp
push
imul
mov
into
and
mov
out
aam
in
or
fnstenv
into
sub
pop
(bad)
push
and
ror
(bad)
mov
clc
xchg
xor
pusha
jno
lods
gs
xor
adc
into
or
sub
add
cld
or
adc
dec
inc
and
dec
sub
fild
xor
(bad)
shr
rol
mov
mov
lock
pop
sti
xlat
pop
xor
push
popa
ret
cmp
push
push
and
sar
jns
pop
unpcklps
arpl
add
lds
add
cmp
ficom
and
or
inc
fbld
rol
cdq
lods
push
dec
xchg
xor
retf
movs
cmp
loop
das
and
push
mov
jge
cwde
lahf
pop
jns
sub
jnp
addr16
inc
pop
push
popa
popa
mov
jg
pop
call
mov
int3
rol
jns
data16
jp
ss
mov
ret
push
ins
mov
jp
cmp
es
push
cmp
mov
cwde
call
jg
cdq
sub
jp
fwait
xor
adc
or
arpl
(bad)
cmp
push
mov
out
cmp
scas
sbb
push
addr16
(bad)
call
push
xor
aad
(bad)
ins
stos
and
jmp
mov
ret
js
xor
mov
dec
cmp
fist
push
fistp
mov
cli
loopne
dec
push
test
adc
adc
adc
(bad)
out
aaa
dec
fbld
mov
xor
mov
retf
in
in
xchg
jp
dec
pop
popf
fimul
sub
int
mov
mov
jle
movs
mov
inc
add
xlat
mov
les
mov
(bad)
lods
aaa
and
jp
outs
sub
pop
mov
sub
sub
clc
pop
dec
push
and
jo
or
sub
push
in
(bad)
cmp
jmp
xor
sbb
pop
push
xchg
ja
add
cmc
jp
scas
adc
or
nop
xor
add
cmp
popf
call
icebp
out
xchg
adc
push
je
mov
in
and
adc
lock
stc
enter
jl
fsubp
inc
sbb
jg
pop
mov
sbb
mov
mov
dec
test
inc
mov
movs
rcl
hlt
cmp
sahf
cwde
push
aad
push
pop
stc
jle
dec
mov
mov
(bad)
hlt
ror
fdiv
xchg
add
mov
mov
leave
jle
arpl
std
jl
pop
loope
inc
inc
add
loope
jnp
lahf
sbb
sub
xchg
add
test
mov
mov
sub
xor
stos
in
ficom
sti
enter
jne
adc
ja
jae
pop
mov
dec
mov
or
(bad)
mov
test
fcmovb
xor
fistp
mov
xlat
cmp
cvttps2pi
call
or
xchg
jmp
xor
mov
mov
cmc
jns
cmps
cmp
fadd
hlt
ret
das
fucomi
retf
xor
push
arpl
mov
test
es
ds
dec
mov
sub
sbb
jae
daa
sbb
xchg
jge
jae
je
pop
aad
test
add
std
dec
(bad)
fist
xchg
xor
in
popa
mov
fwait
lock
dec
movs
dec
ins
push
ror
or
adc
test
loopne
lahf
int3
and
mov
mov
outs
push
mov
mov
xchg
inc
fstp
int
outs
mov
test
pushf
sar
and
loope
sub
sub
leave
cmc
mov
cmp
xchg
jp
je
mov
sub
pop
in
pop
aaa
lods
pop
adc
pop
add
pop
stc
pop
test
ror
cli
pop
mov
(bad)
push
div
pop
fdivr
inc
mov
test
push
in
mov
cmp
and
adc
das
mov
arpl
and
out
mov
stos
mov
mov
cmps
mov
pop
adc
sbb
fnsave
xchg
leave
aas
in
sub
cmc
enter
sub
jmp
test
xlat
add
ins
inc
mov
int
ficom
aam
jnp
das
and
pop
inc
loop
cdq
arpl
add
ins
scas
mov
pop
ss
xchg
xchg
loopne
adc
xchg
jle
int
dec
mov
pusha
cmp
fsub
add
dec
(bad)
jmp
push
cmp
arpl
and
out
rcl
pop
imul
jp
push
pop
(bad)
mov
and
test
cmps
nop
ds
inc
add
mov
or
adc
sub
jmp
push
xchg
int3
mov
mov
and
imul
shrd
xor
dec
mov
jecxz
ret
xor
aam
xchg
aam
arpl
mov
je
imul
and
enter
icebp
stc
in
pop
push
cmp
xlat
fld
add
push
das
xchg
dec
jno
rcl
adc
sbb
add
enter
out
push
cdq
dec
retf
pop
mov
xchg
dec
sbb
outs
inc
mov
mov
pop
mov
push
pop
add
fiadd
xchg
dec
or
cmc
adc
cmp
inc
mov
xor
mov
sub
out
sahf
sub
adc
retf
xchg
cwde
push
xor
in
mov
mov
in
push
shl
mov
inc
mov
shl
push
mov
xor
loope
mov
mov
loopne
inc
repz
xchg
xchg
imul
mov
sub
mov
(bad)
or
es
inc
push
cli
and
jb
ds
cli
adc
xor
sbb
sbb
not
mov
jmp
(bad)
inc
add
les
mov
or
fiadd
xor
or
lahf
jae
ret
lds
loope
jmp
inc
mov
je
mov
or
pop
lahf
ficomp
jmp
mov
sti
jnp
std
(bad)
ror
xor
bound
aas
sar
das
inc
stc
repnz
lahf
test
test
cmp
nop
dec
call
fdiv
repnz
mov
imul
ins
movs
sbb
mov
ins
or
jo
outs
mov
sub
scas
xchg
popa
mov
mul
cmp
sbb
mov
push
sub
jae
jg
aas
mov
add
jbe
imul
ins
xchg
or
cmp
lock
rcr
addr16
sbb
xlat
jg
adc
movups
in
scas
or
outs
clc
popf
jge
jnp
les
and
xor
loopne
es
test
(bad)
fild
pop
mov
ficom
int3
hlt
fistp
xchg
movs
add
pushf
jmp
mov
movs
sbb
test
cmp
sbb
push
and
sub
dec
mov
push
scas
or
ds
mov
jo
dec
sbb
sbb
sar
add
inc
inc
mov
clc
xchg
adc
hlt
popf
sub
push
sub
(bad)
icebp
daa
repnz
mov
xchg
mov
dec
movaps
and
movs
dec
pop
sahf
aas
dec
jl
(bad)
aad
xor
sbb
mov
and
mov
xchg
xchg
pop
jbe
imul
sub
out
cmp
xor
inc
call
mov
push
inc
dec
cdq
mov
jecxz
in
push
or
or
es
mov
outs
int3
mov
or
shl
xor
mov
ins
cmp
mov
add
out
mov
inc
inc
xchg
inc
mov
push
mov
mov
cmps
mov
mov
mov
outs
mov
lods
xlat
mov
std
adc
int
xor
add
xchg
or
pusha
sub
pop
lds
push
(bad)
xchg
pusha
sahf
mov
xor
adc
mov
cmp
dec
mov
sbb
jl
cdq
out
jae
out
lahf
stos
cmp
or
hlt
int3
sbb
pop
pop
outs
fld
out
push
mov
jnp
inc
jl
push
int3
push
retf
dec
xchg
ror
ins
xor
adc
bound
sbb
enter
add
(bad)
addr16
jp
arpl
pusha
or
adc
sub
div
push
sahf
fadd
mov
mov
hlt
loopne
lea
mov
jno
(bad)
pop
inc
lahf
pop
test
cmp
inc
cmc
sbb
test
mov
(bad)
aaa
pop
enter
mov
outs
sub
cmc
(bad)
mov
sti
clc
fild
int
sbb
xor
ss
dec
repnz
adc
int
or
lods
pop
push
aad
ret
xchg
mov
pop
sbb
retf
add
dec
out
jge
stos
xor
das
mov
fmul
mov
add
rol
pushf
mov
fld
loopne
mov
femms
in
mov
mov
dec
push
mov
or
dec
xor
cmp
gs
adc
ja
outs
fs
push
clc
xchg
xor
popa
popf
stos
sahf
jp
mov
push
jns
push
push
cmp
or
and
cmc
les
sub
sar
out
out
xor
fdiv
(bad)
xchg
mov
mov
xor
aam
adc
cmp
aas
mov
daa
mov
in
pop
inc
div
sbb
pop
outs
cmp
xchg
mov
sahf
js
inc
aas
enter
mov
sub
mov
and
jp
ret
jb
inc
pop
les
jp
movs
repz
aad
push
std
jne
das
adc
mov
jle
mov
dec
lock
push
pop
fwait
xor
cmp
sbb
sbb
ds
adc
clc
inc
fcompp
jbe
mov
not
adc
lock
jl
push
mov
jb
xor
js
div
call
push
mov
mov
dec
pop
adc
push
into
in
test
adc
xchg
leave
icebp
or
aaa
test
xor
or
pop
call
(bad)
or
pop
dec
out
sub
mov
hlt
push
cwde
mov
jl
xor
and
imul
xor
gs
int
pop
das
jnp
jbe
ss
xchg
pushf
fnstcw
or
loopne
lods
xchg
cld
jge
jmp
mov
push
xchg
and
test
test
sub
xchg
jl
fsub
inc
push
shl
xchg
push
scas
f2xm1
movs
pop
adc
or
out
jb
inc
pop
lock
sub
fwait
push
mov
jae
xchg
test
jle
dec
int3
ret
repnz
out
inc
xor
push
push
data16
out
pop
(bad)
inc
xor
push
and
xchg
fmul
movs
shl
and
push
std
xchg
sub
pop
imul
test
and
xor
rcr
(bad)
nop
or
xor
loopne
push
mov
test
mov
add
push
test
mov
jns
in
push
in
cmp
fstp
mov
fsubr
rol
push
inc
int3
pusha
add
into
mov
pusha
das
mul
adc
aaa
xchg
pop
neg
push
jl
jp
ror
and
inc
cs
add
inc
int
push
or
into
sbb
xor
adc
(bad)
xlat
aad
ror
jnp
inc
sar
jecxz
jb
call
sub
inc
adc
jno
mov
loope
rol
xchg
mov
sbb
mov
jle
or
stos
aam
inc
(bad)
push
aas
(bad)
shl
pop
call
cmp
push
push
ror
cmp
push
fstp
mov
jae
jmp
clc
xlat
repnz
leave
xor
push
and
out
mov
mov
adc
xor
(bad)
sti
popa
ret
std
and
mov
push
outs
nop
mov
pop
mov
inc
std
(bad)
in
jns
xor
mov
ret
les
pop
shl
jmp
jmp
xor
int3
clc
push
adc
adc
repnz
ins
cdq
jecxz
push
dec
sbb
or
jmp
call
pop
xor
jbe
dec
jmp
cli
jnp
aaa
mov
xchg
cmps
mov
fwait
stos
push
mov
or
jmp
fwait
out
out
shl
push
jmp
push
jne
dec
push
mov
mov
outs
pop
iret
cmp
cmp
mov
mov
ins
pop
pop
neg
and
je
mov
sar
lods
sbb
mov
rol
mov
xor
rcl
shl
mov
cmp
rcl
mov
dec
xor
xchg
nop
(bad)
in
pop
xor
mov
add
aas
cmp
(bad)
push
loopne
test
pop
xchg
pop
add
adc
lock
sbb
pmulhuw
retf
loope
movs
xor
cmp
(bad)
cmp
mov
jl
push
in
lods
ds
ins
add
rol
mov
adc
jbe
sbb
in
jmp
push
sub
fimul
add
popa
sbb
dec
jae
jp
je
mov
dec
mov
lods
jle
cmc
push
and
and
popa
jb
pop
call
sub
test
sub
call
hlt
xchg
mov
es
in
test
stc
in
ins
add
(bad)
cli
retf
mov
outs
pop
fucomip
enter
and
pop
test
fcom
mov
inc
sub
and
hlt
loope
inc
paddw
push
call
out
push
push
cmp
adc
push
xor
scas
add
mov
push
imul
sub
movs
sbb
jbe
jae
xchg
push
dec
fisttp
out
addr16
push
cld
cmp
sub
push
scas
addr16
repnz
push
push
cmp
es
xchg
or
in
dec
stc
pop
mov
enter
cmp
mov
mov
or
std
xchg
jmp
push
xchg
(bad)
out
cld
xchg
inc
cmp
xlat
mov
test
rol
and
sbb
xor
iret
or
(bad)
fsub
loopne
fs
dec
inc
scas
je
and
sahf
jmp
retf
jno
out
dec
fild
add
in
ins
push
sbb
mov
out
out
loope
jle
bound
dec
adc
ins
stos
aas
retf
mov
jb
and
minps
cmp
(bad)
daa
add
or
stos
cmp
popf
push
xchg
xor
dec
mov
xor
jo
xchg
adc
mov
(bad)
ss
xchg
pop
and
out
inc
xchg
sub
enter
ja
mov
mov
ja
push
cmc
nop
call
(bad)
xor
xor
jbe
leave
jbe
sub
sbb
dec
lods
add
enter
out
outs
ret
sahf
mov
jbe
cmp
adc
stc
jb
js
push
add
dec
cmps
pop
mov
(bad)
loop
out
out
dec
sbb
fidivr
mov
or
rcl
xor
pop
mov
jne
lock
and
jae
je
lods
cmc
test
inc
dec
out
dec
in
cs
pop
lods
cdq
sub
lea
mov
loop
scas
scas
push
xor
and
sub
mov
xchg
imul
sub
cwde
xchg
addr16
in
push
aas
push
imul
jmp
repz
cmp
jae
imul
push
jp
add
or
jns
pop
test
shl
sub
sub
fimul
stc
cmp
add
sub
jb
aaa
xchg
ret
jle
mov
dec
jns
movs
(bad)
sub
leave
pop
cmp
mov
movs
repz
scas
pop
or
cmp
or
jl
(bad)
rcr
adc
pop
cli
or
rcl
sahf
adc
sub
or
fsub
int
nop
and
nop
(bad)
in
nop
or
fwait
add
imul
movs
jge
xor
jg
sti
and
mov
popf
hlt
arpl
ins
test
fs
shl
dec
addr16
movs
sar
xchg
inc
loopne
outs
enter
mov
pop
jecxz
xchg
scas
mov
outs
fstp
jns
inc
imul
sbb
xor
inc
push
jbe
or
fisubr
mov
(bad)
mov
fwait
movs
or
es
mov
aas
dec
push
imul
nop
loop
test
xchg
in
cmp
xor
push
lods
jmp
loop
ins
fisubr
jbe
mov
cs
movs
iret
mov
xchg
out
int
cmps
dec
int
pop
call
repnz
popf
and
outs
sti
adc
jb
xchg
add
loop
rcl
fdivr
lea
xor
jo
mov
sub
inc
push
lods
leave
jb
ret
jbe
das
push
cs
jo
adc
daa
outs
sbb
dec
repnz
sbb
ror
ror
or
mov
xchg
mov
pop
call
stos
push
pop
shl
mov
pusha
arpl
repnz
test
xchg
push
mov
and
jae
in
mov
pop
add
mov
adc
mov
aad
pop
test
dec
xchg
dec
add
adc
test
ja
fadd
or
sub
jp
pop
pop
retf
xchg
inc
arpl
imul
mov
data16
inc
enter
fstp
sub
rcr
cwde
cmp
into
sub
stos
xor
ret
jle
sar
and
mov
and
or
test
aad
sub
push
jecxz
xor
das
mov
js
mov
cdq
xchg
cs
and
rcl
cdq
repz
out
shl
adc
add
cmp
pop
push
cdq
loop
dec
jecxz
mov
ret
gs
retf
inc
sahf
dec
cli
stos
(bad)
pop
dec
jmp
cmp
push
sbb
pop
in
xchg
push
mov
xchg
push
arpl
ss
js
cdq
sub
inc
into
sub
mov
ret
or
xor
push
shr
mov
dec
pusha
push
xchg
(bad)
sub
iret
mov
sub
lods
iret
pop
sub
and
div
and
stc
jmp
cmp
ss
loopne
jge
or
xor
lahf
les
imul
xchg
ss
pop
lahf
popa
in
add
xchg
stos
into
mov
bound
cs
sub
je
inc
imul
sti
and
mov
mov
and
pop
pop
ror
dec
and
inc
mov
dec
adc
mov
adc
push
out
pop
sub
clc
mov
or
adc
lods
call
add
inc
gs
dec
fcom
jg
mov
test
push
ror
mov
add
jnp
pop
dec
out
inc
push
jbe
imul
shr
out
cmp
jecxz
cmp
popf
ins
(bad)
cmps
pop
out
dec
cld
jmp
rcr
cmp
(bad)
push
xor
sub
arpl
movs
jbe
mov
mov
imul
retf
push
xlat
or
adc
inc
and
ret
ins
adc
pop
dec
int3
pusha
pop
out
inc
test
lea
xchg
inc
inc
fcomp
or
imul
leave
out
in
push
pushf
std
loopne
hlt
sub
mov
stc
lahf
jns
es
inc
dec
sub
loope
or
pop
and
mov
push
mov
cdq
bound
sub
xor
mov
(bad)
retf
clc
je
adc
mov
in
dec
mov
jns
xchg
xchg
and
jno
pop
call
xor
jo
sahf
xchg
test
xchg
dec
dec
adc
loop
cwde
or
mov
xchg
pop
jmp
xchg
and
or
add
lds
test
lahf
push
and
sbb
repz
pop
mov
inc
adc
bound
xor
clc
imul
(bad)
shl
(bad)
xlat
fadd
call
aaa
pop
or
xor
cdq
xlat
je
mov
rcl
xor
or
clc
data16
add
push
pop
scas
rol
dec
ds
dec
jo
fcomp
inc
mov
inc
cmp
mov
jo
add
hlt
ss
inc
cli
cmp
add
or
std
jns
in
and
xchg
add
mov
out
mov
jmp
je
jg
mov
dec
mov
sbb
sti
dec
jae
xchg
sub
rcl
aas
not
iret
jns
ds
jne
xchg
xor
cli
test
jmp
pop
out
dec
movs
retfw
fwait
out
dec
and
in
sbb
outs
sub
nop
push
paddsb
and
adc
lea
test
push
stos
mov
in
and
xor
gs
xchg
xchg
push
dec
test
(bad)
cmp
lar
xchg
sub
ss
push
add
into
sbb
or
nop
mov
jns
jne
adc
push
and
inc
xlat
pop
dec
push
out
int3
cld
xchg
cs
or
ds
int3
sub
xchg
mov
cmps
sub
inc
and
sbb
jmp
or
and
inc
stc
mov
daa
prefetchwt1
jg
or
add
mov
in
adc
mov
push
int
mov
add
xchg
xchg
test
scas
jl
add
loopne
test
jnp
jb
in
pusha
cmps
pop
je
xchg
jmp
(bad)
jl
test
mov
sub
sbb
fistp
lahf
pop
and
jle
and
push
adc
ins
xchg
xor
push
and
jge
and
(bad)
sbb
out
fisttp
xor
inc
jb
dec
adc
xor
movs
std
xchg
dec
xchg
sbb
aas
mov
das
cmps
jmp
sub
xchg
stos
jbe
push
push
les
call
stos
dec
rcl
inc
mov
into
test
jno
add
or
ja
cmp
into
mov
inc
jl
pop
sbb
(bad)
jg
inc
stc
xchg
push
xchg
jp
xor
fnsave
cmp
pop
stc
rcr
scas
es
sti
cmps
call
adc
clc
push
movs
test
stc
add
adc
movs
movs
inc
sub
jne
adc
loop
rcr
out
mov
push
sbb
sub
aam
repnz
adc
mov
or
push
movs
shl
je
and
and
out
push
stc
sbb
push
test
adc
call
(bad)
les
sti
push
xor
call
inc
dec
cs
dec
add
bound
xchg
pslld
mov
leave
ror
adc
pop
retf
jecxz
mov
xor
das
dec
and
sub
shl
cld
cmps
hlt
imul
add
and
cli
dec
pop
fdiv
add
dec
jmp
pop
repz
imul
loope
repnz
ror
pop
push
sahf
out
not
push
outs
aas
mov
push
push
cmp
or
inc
je
mov
fnclex
dec
cmovle
cdq
ficomp
sbb
je
and
out
(bad)
jle
inc
jno
add
retf
outs
sbb
push
imul
and
inc
sbb
pop
jge
add
cs
push
inc
dec
mov
cmp
xor
ret
(bad)
mov
xlat
and
mov
dec
out
jmp
test
mov
cmp
ret
xchg
lods
jmp
mov
adc
out
pop
enter
and
shl
lea
xor
jne
cmp
lock
sti
jne
or
aad
cli
fistp
sub
loope
lods
stos
and
inc
xchg
mov
shl
pop
mov
mov
cmps
mov
mov
dec
ds
dec
test
jae
push
xchg
inc
arpl
pop
pushf
jecxz
xchg
pop
lock
xchg
lahf
mov
push
jne
xlat
aad
mov
mov
jle
pusha
xchg
js
test
sbb
jecxz
imul
sbb
lea
hlt
push
jl
or
add
mov
sbb
dec
jl
das
sub
retf
jbe
rol
jne
retf
cmps
lods
pushf
movs
add
adc
jge
mov
dec
mov
sahf
test
(bad)
int
inc
pop
jae
mov
cdq
fst
aaa
jne
mov
and
test
mov
jge
mov
xor
and
rcr
je
mov
test
enter
pop
dec
and
add
push
mov
fwait
xor
cmp
adc
cmp
mov
add
adc
aam
xor
xchg
ror
mul
fld
ds
icebp
mov
xor
in
ss
loopne
mov
cmps
vxorps
sub
shl
out
fmul
loopne
cmps
dec
imul
aam
and
and
xlat
mov
scas
cmp
xchg
push
adc
ins
bound
mov
push
pop
xor
test
pop
pop
nop
sub
pusha
jmp
mov
loope
jo
pop
sub
cmp
jnp
test
in
cmp
jno
push
mov
inc
call
mov
xchg
fiadd
imul
adc
and
in
mov
mov
dec
add
es
inc
xchg
mov
les
data16
xchg
je
out
in
push
(bad)
imul
mov
call
test
and
mov
ja
jb
jo
push
in
data16
pop
dec
mov
clc
jns
adc
sub
xor
add
cs
retf
jmp
sub
stos
xor
(bad)
retf
mov
outs
add
xor
xchg
add
(bad)
jmp
shl
sub
inc
icebp
ret
(bad)
rcl
bound
out
add
out
inc
mov
test
sti
xor
mov
and
gs
push
(bad)
sbb
inc
shl
inc
lock
and
or
outs
out
fs
stos
mov
mov
adc
adc
in
fisttp
(bad)
iret
sbb
repz
adc
mov
jne
and
adc
dec
rcl
mov
shl
or
cs
add
mov
pop
mov
jmp
shl
shl
inc
fsub
retfw
popa
cmp
imul
push
and
jle
lds
jmp
mov
push
xor
add
jae
and
dec
or
test
xchg
lea
jle
jg
pop
dec
pop
hlt
mov
sbb
ds
jnp
jge
and
sub
(bad)
cwde
sahf
mov
call
aad
cmp
and
fwait
mov
cmp
ins
stos
loope
fidivr
fmul
xchg
mov
ins
ins
add
stc
inc
add
mov
sub
mov
jb
aas
dec
(bad)
inc
and
data16
cmp
xchg
cmc
dec
in
jbe
movs
xchg
sbb
out
shl
mov
mov
out
cmc
and
and
out
js
add
inc
sbb
add
dec
inc
jne
ss
loope
(bad)
xlat
test
and
adc
xchg
xor
(bad)
push
push
mov
xchg
mov
popa
mov
js
mov
mov
ss
inc
jp
dec
jns
mov
inc
push
fstp
jbe
outs
div
loopne
inc
mov
inc
jbe
cs
pop
mov
sahf
add
xor
dec
sub
jb
and
and
je
mov
test
pop
xchg
push
xchg
add
stos
mov
fucomp
retf
fdivr
les
test
cmp
push
push
cmps
div
fadd
jecxz
xchg
mov
mov
xor
movs
hlt
xchg
rcl
in
jbe
xor
fsubr
jno
into
adc
dec
mov
jecxz
sbb
mov
xor
mov
cmp
sub
adc
or
push
adc
sub
(bad)
repnz
vminpd
cmps
push
push
mov
mov
sub
dec
call
xor
pop
jae
or
icebp
into
out
dec
sbb
rcl
jnp
xchg
loopne
cs
(bad)
fld
add
scas
cs
sar
shr
ins
mov
pop
mov
sbb
xchg
jmp
(bad)
lock
or
aaa
jo
pop
sub
pop
mov
adc
add
imul
test
and
push
mov
ror
xlat
jne
push
in
pop
push
fbstp
mov
xchg
sub
cmp
push
or
jle
rcr
xchg
sbb
and
adc
fabs
mov
mov
mov
outs
xchg
mov
ficom
mov
in
inc
cld
dec
sbb
stos
adc
ret
push
mov
fnstcw
push
loopne
push
pop
and
mov
movs
pusha
xchg
lds
cmp
cld
outs
shl
push
(bad)
stc
je
inc
(bad)
sub
ficom
out
fadd
push
outs
stos
jnp
jmp
pop
mov
adc
das
xor
jge
mov
loopne
cmp
nop
pop
dec
sub
into
xchg
add
mov
fsub
pop
adc
xchg
and
jnp
mov
call
pop
inc
or
daa
fisubr
adc
and
mov
dec
push
mov
loopne
push
or
out
push
jne
stc
or
adc
repz
test
test
out
lea
or
ficomp
es
cmps
retf
cmp
jns
and
ret
xchg
cld
mov
fstp
cdq
cdq
sbb
pusha
mov
inc
cmp
mov
mov
and
outs
test
mov
push
or
retf
repnz
rol
shl
pop
cmp
jecxz
(bad)
jno
xchg
sbb
out
fidivr
cmp
aaa
std
jmp
mov
jge
int3
mov
(bad)
cdq
enter
inc
hlt
sub
dec
adc
jl
add
ins
push
test
sub
fs
dec
jae
imul
mov
xchg
cmp
data16
or
test
jp
or
data16
(bad)
movs
sbb
fdivp
clc
shl
mov
xor
or
push
or
xchg
popf
jbe
jge
mov
pop
out
vshufps
dec
add
cld
movs
das
pop
adc
mov
push
stos
xor
outs
pop
jns
push
lahf
xchg
push
push
loopne
push
mov
push
mov
jns
mov
cld
repnz
call
fmul
nop
inc
das
xor
nop
in
xchg
inc
jae
dec
xor
movs
arpl
mov
cwde
sahf
jno
sbb
cs
fwait
mov
pop
mov
and
mov
xor
(bad)
test
ja
push
mov
imul
and
nop
dec
rcl
mov
fstp
std
inc
iret
xchg
imul
mov
movs
outs
cmp
and
add
pop
fs
cmc
mov
aam
or
push
call
or
jne
jp
or
ja
nop
lods
das
mov
(bad)
les
dec
popf
sbb
jnp
or
or
sub
into
loopne
in
(bad)
cmc
loop
sub
aam
dec
or
lahf
mov
sub
sub
or
sub
pushf
jp
in
(bad)
cmp
pushf
or
dec
fimul
sub
jmp
add
mov
mov
loop
or
add
ds
xor
jmp
mov
or
dec
jp
cmp
inc
cli
das
nop
mov
inc
std
sub
popa
jbe
pop
push
sbb
xlat
xor
add
jae
mov
lods
retf
out
sub
push
sbb
repnz
adc
jmp
inc
ret
(bad)
fld
add
test
cmp
sbb
test
cmp
std
cmp
jne
jmp
inc
inc
jne
stos
jg
pop
scas
xor
pop
out
cmp
push
xor
addr16
jmp
call
aaa
and
cmc
pop
adc
sub
data16
stos
bsf
push
mov
fisttp
icebp
jmp
out
movs
pushf
jmp
pop
push
pop
pop
dec
aas
and
movs
mov
jbe
jp
ret
ret
xor
adc
xlat
add
test
jp
push
xchg
pop
outs
mov
adc
sbb
push
(bad)
int
xchg
fnstenv
retf
sahf
cmp
repz
fsubp
stc
jge
pop
leave
sbb
fwait
inc
and
adc
(bad)
sti
jl
fs
xor
rcl
cmps
pop
pop
ja
pop
sti
addr16
cmp
mov
jo
scas
sub
out
aaa
mov
jno
mov
(bad)
movs
div
push
hlt
fnstenv
inc
in
xchg
rol
popf
cmps
xor
stos
nop
outs
sbb
inc
mov
psrld
sub
pop
mov
cmp
mov
mov
cmps
pop
hlt
(bad)
out
pop
repz
(bad)
sbb
mov
mov
jae
fimul
mov
and
sub
xor
and
adc
(bad)
xor
xor
rol
push
sbb
dec
in
cmp
xchg
cmc
add
cmp
popa
xchg
fcmovnbe
cmp
aam
jmp
xor
and
nop
dec
cmp
in
mov
retfw
xchg
push
in
push
push
call
ret
and
outs
inc
add
and
pop
sahf
dec
mov
ret
ror
gs
and
not
mov
mov
inc
shl
ret
(bad)
hlt
ret
mov
dec
mov
and
jne
push
mov
mov
sbb
mov
push
stc
mov
or
imul
add
cmp
cmp
adc
imul
(bad)
add
push
mov
loope
sti
xor
jb
repnz
cdq
imul
pop
sub
int3
mov
gs
std
ror
and
sub
jle
xchg
inc
or
scas
sbb
es
or
enter
jecxz
ja
clc
sub
cdq
repz
mov
bound
cli
mov
xor
xchg
jmp
push
sub
push
or
xlat
jmp
outs
mov
add
xchg
jp
mov
jecxz
aam
sti
aam
call
hlt
aad
add
xchg
jo
imul
shl
jbe
ja
sahf
mov
dec
cwde
je
xor
push
sbb
mov
cmp
mov
inc
test
sub
dec
int
sbb
mov
lds
cmps
push
ror
jns
es
pop
mov
lock
mov
sub
mov
push
xchg
sbb
xchg
loopne
push
stc
xlat
aaa
xchg
test
sub
ds
add
jno
(bad)
mov
push
xchg
popf
ret
lahf
adc
sbb
ret
test
ret
cdq
in
mov
out
adc
(bad)
and
sahf
ja
imul
test
daa
test
aad
mov
cdq
cmps
mov
sub
xchg
push
in
jo
shl
call
sbb
jb
mov
or
aas
nop
pop
sbb
cwde
push
shl
pop
add
(bad)
cmp
popf
inc
xchg
js
xor
nop
pusha
ins
mov
xchg
push
push
mov
clflush
sbb
pusha
pop
adc
loopne
and
lods
inc
or
inc
cmp
xor
je
add
xlat
and
ds
and
sub
enter
cmp
rcl
je
sbb
or
ins
mov
push
push
adc
arpl
retf
add
xchg
jno
jbe
inc
sub
rcl
out
push
dec
test
shl
cmps
adc
ins
dec
inc
push
sbb
lds
(bad)
and
pop
sub
xor
scas
stos
and
icebp
jmp
xchg
test
push
ins
dec
in
sbb
outs
cmp
dec
pop
jmp
push
mov
mov
push
push
aas
ins
mov
sbb
cdq
xchg
or
sbb
std
push
xchg
lods
push
fimul
xor
es
rol
(bad)
xchg
hlt
sti
repz
pop
add
dec
imul
jbe
aas
and
ret
cmps
fwait
jbe
sbb
fadd
call
jecxz
adc
mov
(bad)
pop
sub
xchg
mov
sar
adc
ror
cmp
and
lods
pop
xor
mov
inc
mov
adc
push
mov
mov
popa
pop
scas
fnstsw
mov
fs
adc
jge
pusha
xchg
dec
rcr
outs
out
js
rcl
xor
lds
leave
outs
mov
les
scas
loope
mov
out
out
jecxz
lods
inc
int
lds
xor
sbb
je
dec
push
mov
sbb
call
sub
adc
mov
sbb
xor
jle
imul
sbb
and
shr
pop
cmp
dec
aaa
inc
popf
lock
ret
stos
in
ss
pop
jl
push
out
mov
loope
mov
xchg
out
cwde
or
hlt
mov
clc
xchg
pop
inc
test
popa
cmp
mov
icebp
loop
aas
shl
push
movs
pop
mov
addr16
xlat
xchg
push
outs
add
cli
rep
and
xchg
cs
retf
mov
lds
loopne
pop
and
jbe
je
dec
stos
add
hlt
retf
inc
enter
dec
mov
cmc
xchg
popf
and
xchg
inc
addr16
call
(bad)
jns
pop
mov
sub
outs
cmc
mov
ja
clc
or
push
add
ret
test
scas
daa
ins
lods
mov
leave
add
or
stos
jo
clc
pop
outs
push
inc
hlt
fdivp
in
ins
test
cmp
popa
or
or
in
inc
or
pusha
push
add
cmc
aad
jge
fisttp
aas
test
mov
and
ja
mov
add
fwait
leave
and
clc
loop
mov
xchg
in
in
je
dec
dec
and
ins
inc
cld
stos
leave
mov
sbb
in
push
mov
ds
lds
cmps
daa
retf
in
pop
and
jne
loop
cmps
inc
sbb
dec
xchg
cmp
sub
jae
sub
and
lahf
and
cli
movs
xor
pop
retf
scas
lods
ds
test
cmps
mov
pop
xchg
test
hlt
pop
jae
jge
xor
retf
push
mov
mov
int
jne
inc
sub
enter
lock
retf
or
xchg
jnp
inc
jo
push
cmp
mov
movs
xor
cmc
fdiv
loope
sysret
inc
pusha
dec
mov
jle
push
inc
mov
call
cmps
fisubr
mov
bswap
aas
inc
adc
jp
js
pop
xchg
push
call
loope
jg
ret
(bad)
ror
movs
cmp
inc
inc
mov
(bad)
imul
inc
push
inc
push
xchg
ret
pop
dec
or
jns
clc
xchg
sub
jbe
and
xor
ins
rcl
or
cli
clc
(bad)
retf
or
mov
sbb
mov
push
adc
mov
test
mov
sub
stos
mov
xchg
mov
push
jne
xor
dec
shr
jle
fild
adc
out
sub
adc
jmp
jmp
outs
dec
test
jns
push
mov
out
and
repz
aam
lahf
adc
adc
out
mov
cmp
ror
push
stos
lock
test
add
scas
push
or
jg
jp
cmp
sub
div
out
out
xchg
popf
es
loopne
xchg
test
mov
mov
mov
scas
das
sub
pop
sbb
cmp
adc
mov
repz
(bad)
xor
iret
push
ss
mov
test
out
nop
dec
xchg
scas
js
das
stc
cmp
lods
in
int3
adc
push
jns
cmp
or
mov
div
and
cmp
pop
sbb
cmp
push
sahf
mov
popf
mov
(bad)
push
retf
mov
(bad)
xchg
mov
ins
cld
outs
jmp
out
js
xor
stos
ficom
loop
cld
sbb
adc
fnstenv
hlt
xlat
adc
rol
scas
jnp
xchg
call
mov
xchg
xchg
xor
pusha
and
es
adc
mov
es
pop
iret
retf
(bad)
pop
ds
scas
les
mov
(bad)
bound
inc
jnp
xchg
movs
push
push
fnstenv
dec
pushf
lock
stos
test
add
fnstcw
push
adc
mov
xchg
push
fbstp
out
daa
adc
jp
mov
movs
outs
in
add
lahf
enter
xor
pushf
nop
frstor
ins
leave
cmp
outs
lods
retf
xor
cmp
das
push
test
xor
retf
fbld
out
xor
lahf
int
call
call
mov
repz
aaa
out
mov
xor
sbb
call
jmp
lods
fld
adc
mov
mov
xor
cmp
jmp
cli
xlat
sbb
imul
inc
ja
sub
xor
adc
and
outs
mov
mov
adc
mov
mov
pop
dec
jb
mov
pop
jge
test
pop
jge
push
and
mul
pop
mov
add
hlt
jb
shl
data16
(bad)
push
cmp
jbe
ret
in
aam
add
sbb
pop
mov
adc
hlt
push
or
pop
sbb
gs
jns
aad
push
fistp
pushf
mov
hlt
clc
add
je
stos
sti
push
dec
stos
mul
mov
mov
test
ret
sub
push
out
adc
mov
xchg
and
(bad)
daa
lock
cmp
dec
repnz
jo
xchg
loopne
daa
imul
iret
mul
rcr
mov
cli
sub
adc
retf
inc
pop
ja
fcmovu
xchg
clc
int3
ja
mov
pop
fwait
jno
sbb
loopne
add
or
dec
push
dec
dec
icebp
(bad)
xor
mov
inc
and
imul
xchg
push
mov
jb
inc
mov
std
loop
aam
cmp
push
in
cmp
xchg
mov
add
cmp
aam
mov
dec
or
inc
or
or
pusha
std
sbb
aam
dec
pop
hlt
call
or
mov
(bad)
jg
xor
adc
add
and
push
call
stc
pop
repnz
dec
mov
and
xchg
dec
pop
inc
add
jb
fidivr
iret
ds
jle
inc
rcl
scas
into
inc
gs
adc
in
and
jmp
jbe
mov
bound
mov
(bad)
pushf
jle
jno
inc
out
inc
cmp
mov
fdiv
cld
sbb
movs
pop
jmp
push
ja
fsub
xchg
xchg
rcl
div
fstp
inc
pop
cmp
(bad)
sbb
cmp
pusha
push
pusha
cmp
fnstcw
lods
cli
loope
mov
test
add
cmp
inc
mov
clc
jmp
adc
pushf
mov
inc
pop
aas
fcom
sub
daa
cmc
xor
pop
pop
ss
enter
mov
test
or
cld
lods
out
and
hlt
or
int3
das
call
rcr
(bad)
clc
fwait
and
in
inc
inc
cmp
loope
test
jno
pop
add
rol
xchg
(bad)
in
sub
imul
stos
idiv
js
push
push
cdq
js
add
fnstsw
mov
fsubr
adc
movs
aad
mov
xor
sbb
jecxz
jp
xchg
movs
retf
lods
xor
popa
test
xor
cwde
adc
imul
(bad)
add
push
(bad)
fstp
pusha
fiadd
push
cwde
xchg
jle
sbb
pusha
mov
lods
popf
test
mov
ins
jecxz
fbld
sar
jmp
and
idiv
inc
push
adc
imul
fstp
setp
sub
ret
sbb
arpl
stos
repz
push
shl
mov
cmp
(bad)
call
(bad)
call
push
xchg
dec
repz
out
mov
hlt
pop
rep
adc
out
icebp
push
cdq
pop
cmp
fcmovbe
xchg
lods
inc
pop
xor
lahf
mov
push
into
cmp
mov
pop
arpl
loopne
mov
xor
arpl
xchg
(bad)
(bad)
out
inc
xchg
mov
cld
(bad)
int3
adc
pop
add
mov
pop
mov
adc
push
xchg
pop
aam
or
(bad)
and
xor
out
out
es
cmp
fmul
xchg
mov
xchg
mov
push
mov
aam
pop
(bad)
neg
add
xor
ss
ret
jb
pop
push
movs
gs
icebp
add
fldenv
xlat
and
push
lea
add
add
mov
cmp
add
out
xor
and
xor
aad
cli
sub
daa
xchg
rcl
and
aam
jns
mov
mov
out
in
fadd
sbb
dec
cmp
scas
rcpps
jecxz
mov
pop
push
inc
neg
add
fcom
stos
pushf
jg
int
mov
mov
mov
mov
push
pop
movs
dec
dec
and
mov
add
and
in
cmp
mov
dec
fild
jmp
push
fwait
(bad)
pop
mov
xchg
pushf
mov
mov
js
call
mov
dec
mov
or
popa
xchg
mov
sub
imul
sub
or
sub
outs
ror
cli
cmp
in
push
fbld
aas
sbb
pop
mov
pop
xor
sti
clc
data16
mov
lock
movs
inc
sub
jmp
sbb
cld
mov
cli
shl
sysenter
scas
in
sub
push
ret
sbb
(bad)
and
xlat
(bad)
sub
xchg
xchg
adc
stos
pop
push
jg
mov
xor
mov
fcom
add
pop
in
xchg
loope
or
pop
sti
js
inc
sub
xor
stc
sub
and
sub
push
mov
jae
addr16
xchg
xor
ficomp
pop
jns
pop
mov
mov
push
imul
int3
sbb
mov
cmps
jno
outs
movs
pop
or
retf
mov
stos
push
mov
push
add
inc
out
aad
sub
xchg
(bad)
sub
sub
dec
and
jecxz
(bad)
or
stc
icebp
inc
retf
sub
push
mov
mov
inc
sbb
cmp
cmp
lahf
or
loope
jmp
sbb
in
push
not
fimul
dec
stos
xrelease
addr16
es
mov
out
add
mov
je
jbe
test
and
ja
push
ret
loopne
ret
xchg
cmps
ja
mov
mov
shr
cld
push
mov
ret
pop
popf
pop
stc
add
sbb
stos
sub
arpl
hlt
and
sbb
mov
fnsave
and
xor
popf
xor
pop
add
inc
loopne
inc
pop
out
adc
inc
adc
hlt
aas
or
xchg
mov
cmp
movs
sbb
nop
or
xchg
mov
pop
fild
push
out
ins
(bad)
pop
call
shr
mov
xor
xchg
out
jp
fwait
scas
jp
rcl
and
push
or
pop
or
loopne
xor
in
fcom
retf
sub
gs
sti
adc
jbe
lds
add
(bad)
retf
cmp
ret
jo
dec
(bad)
sub
aam
out
mov
inc
into
ss
pop
sahf
dec
adc
add
dec
inc
bound
jge
outs
mov
xchg
xlat
mov
popa
push
mov
scas
cs
clc
or
mov
js
cs
sub
nop
ins
xchg
imul
dec
mov
jo
mov
mov
bound
clc
or
jnp
shl
retf
sar
ins
xchg
lea
stos
fdivr
lock
iret
mov
or
clc
cmps
pop
or
cwde
loopne
mov
adc
repnz
stc
pusha
push
pop
js
jmp
adc
sbb
mov
xchg
test
fmul
stos
xor
and
add
es
mov
sub
test
pop
test
int3
dec
xchg
and
iret
sub
js
das
mov
pop
repz
fistp
dec
les
jb
lock
mov
mov
(bad)
aam
and
xchg
dec
retf
adc
mov
out
add
cli
out
cmc
pop
shl
lds
pop
aam
int3
mov
cmp
xchg
adc
arpl
(bad)
inc
pop
data16
mov
xor
int3
xchg
scas
jl
fs
adc
sub
aad
out
xchg
test
out
sub
sub
(bad)
cmc
add
dec
loope
gs
sub
xor
pop
pop
call
ins
dec
jb
dec
jg
jge
and
push
mov
pop
mov
push
fadd
ret
jg
int
(bad)
aad
jp
cld
mul
cmp
ret
xchg
dec
out
cmc
inc
xchg
dec
cmps
gs
gs
in
out
xor
fsubr
cmp
pop
jno
pop
cmp
add
lock
pop
push
lea
xor
call
mov
xchg
dec
in
repnz
jle
lahf
and
(bad)
std
dec
(bad)
cmp
xchg
mov
xor
pushf
hlt
add
lock
xor
jo
pop
cmp
mov
jno
repz
test
or
mov
call
aad
test
(bad)
rol
xor
mov
or
inc
scas
push
pop
jg
mov
or
out
xchg
jns
enter
arpl
ret
call
xchg
cmc
gs
xchg
cmps
imul
(bad)
mov
movs
add
xchg
loop
mov
pop
lea
jecxz
xchg
adc
mov
or
jle
ror
daa
xor
ins
xor
jp
cdq
rol
adc
and
sub
mov
int3
jmp
jecxz
cmp
scas
and
and
sbb
jb
push
daa
sub
bound
fsubrp
dec
adc
in
mov
or
into
sahf
pop
shl
mov
mov
mov
(bad)
inc
test
shr
imul
push
repz
ret
in
pop
stos
sbb
sbb
jne
int
out
ret
inc
inc
push
shl
aam
cli
cmps
sub
popa
lds
push
xlat
inc
ret
adc
cmps
push
jne
sar
inc
arpl
add
inc
(bad)
mov
and
jge
lea
xor
mov
mov
push
sub
sub
sti
daa
in
or
sub
dec
ins
test
add
cmp
mov
xchg
fnstcw
shl
sub
shr
xor
int3
aad
mov
jb
jb
mov
xor
in
enter
or
xor
cwde
xchg
out
pop
jae
out
jns
test
retf
fs
out
nop
xchg
adc
outs
pop
fidiv
sub
je
es
mov
jge
sub
push
daa
push
fimul
int
inc
jg
and
sub
std
mov
aam
xor
aas
inc
mov
(bad)
dec
mov
dec
add
cmp
add
stos
repz
pop
fimul
dec
fst
add
repz
jmp
movs
in
ror
or
call
push
inc
cmp
call
stos
sbb
jnp
pop
sub
jmp
jns
mov
xchg
pushf
xchg
dec
pushf
loopne
xchg
movs
outs
jae
pop
dec
dec
leave
push
stos
mov
ret
cmc
loope
fcomp
test
push
repz
test
repz
in
fld
repnz
(bad)
mov
adc
mov
ds
mov
mov
push
push
outs
sbb
les
sbb
adc
jae
pop
pop
cmps
loope
movs
mov
or
xchg
jnp
mov
icebp
shl
lods
mov
push
loopne
aam
pop
cli
jns
(bad)
inc
sub
xchg
xchg
rcr
add
sbb
jmp
jmp
ss
pop
mov
pusha
xchg
bound
ins
pop
and
jp
mov
push
sbb
xchg
ja
xlat
pause
ins
sub
imul
pop
hlt
inc
dec
not
shl
ss
mov
inc
in
test
in
enter
xor
nop
mov
rcr
test
pop
aas
add
add
cwde
out
cmp
mov
jne
push
and
int3
mov
xchg
mov
arpl
jae
push
lds
xor
frstor
jne
loope
xor
push
xor
cmps
mov
repz
jb
bnd
nop
jge
movs
cmps
addr16
pop
les
fistp
add
fs
outs
in
(bad)
dec
cmps
pop
in
mov
xor
in
scas
ficom
jno
movs
push
les
sub
call
or
inc
ret
mov
or
jg
xchg
add
mov
movs
dec
stc
ja
stc
mov
retf
cmps
xchg
test
retf
repnz
jg
mov
call
mov
inc
and
test
(bad)
jl
adc
and
adc
in
inc
in
lahf
sub
mov
arpl
xchg
lds
int3
mov
pop
arpl
movs
or
mov
mov
inc
sub
hlt
sub
movs
push
ficom
outs
icebp
mov
or
pop
imul
push
movs
jmp
dec
ficom
hlt
sub
into
outs
enter
mov
pushf
mov
loope
adc
xchg
lahf
inc
lods
xchg
adc
cmp
cmp
jmp
add
inc
pop
test
cmp
pop
mov
sbb
fld
ret
inc
les
popa
outs
(bad)
aam
or
fistp
sub
ins
repz
xor
data16
retf
ret
jmp
sub
shl
pop
mov
or
mul
pushf
lahf
pop
loopne
jecxz
pop
jnp
rcr
inc
aas
ret
cmp
aam
cwde
pop
lods
dec
ins
xor
int
int3
stos
out
or
lds
xchg
sub
mov
and
fnstenv
fcomi
inc
or
or
xchg
enter
pop
mov
scas
std
push
in
xchg
or
adc
push
jp
mov
stc
push
push
mov
loopne
dec
mov
and
int3
lods
into
fdivrp
cwde
mov
leave
mov
sub
dec
cmps
enter
aam
push
out
cmp
mov
pop
push
xor
push
jmp
xchg
push
jno
cmps
adc
inc
mov
mov
jo
jmp
add
ja
test
(bad)
mov
xor
pop
fucomi
pushf
dec
xor
test
jg
inc
nop
add
adc
push
mov
in
das
mov
fdivr
add
cmp
psrlq
leave
rcr
mov
lock
or
xor
call
pop
mov
fwait
ins
daa
fistp
add
mov
pop
sbb
ror
or
cld
mov
pop
ins
pusha
sahf
out
mov
sahf
in
outs
add
jge
add
push
or
out
(bad)
imul
pop
lods
call
aas
std
mov
mov
std
out
in
int
jno
dec
es
mov
push
fwait
cs
sahf
ins
scas
icebp
popf
cmps
mov
push
dec
fidivr
add
push
or
mov
rol
fiadd
sbb
in
enter
xor
xchg
mov
test
mov
mov
cmp
dec
jp
adc
scas
outs
mov
ret
push
(bad)
cmps
retf
fcomp
xor
cmp
jmp
in
test
mov
jns
call
xchg
mov
pop
jb
and
mov
sbb
pusha
gs
adc
lahf
mov
push
adc
xor
ins
lods
ret
mov
pop
fnsave
int3
cdq
leave
and
aas
push
cmc
add
scas
ja
data16
mov
sub
out
in
dec
dec
mov
rol
inc
in
fwait
mov
push
push
adc
xor
and
inc
cmp
jne
bound
mov
je
inc
out
int3
test
adc
and
add
xchg
xor
inc
mov
cwde
mov
leave
je
cmps
repz
pusha
jno
ret
in
lods
stos
xchg
mov
adc
add
out
pop
lods
sub
pushf
test
push
mov
inc
shl
and
loopne
lock
ja
mov
stc
pop
cmp
adc
jle
imul
mov
jmp
jb
(bad)
mov
cmps
aaa
(bad)
cld
sar
mov
loopne
mov
mov
pop
cmp
jp
inc
popa
add
xchg
sub
in
jo
pop
xchg
in
shr
movs
adc
ficomp
daa
pop
jge
fidiv
ror
adc
jns
add
adc
clc
push
ds
cld
cmps
jmp
mov
jno
jbe
cmc
test
les
ror
push
out
xchg
xor
mov
push
adc
inc
sub
in
shl
pop
jge
pop
popa
ins
jg
fsubr
dec
adc
call
out
inc
cmps
cmp
sbb
in
mov
bound
sbb
js
(bad)
jmp
cmp
(bad)
(bad)
aas
icebp
popf
pushf
mov
jg
adc
arpl
fmul
push
and
cmp
fstp
cli
popa
pushf
jae
xchg
and
xchg
add
shr
inc
xchg
jo
cmps
jmp
xchg
or
xchg
stc
cmps
stos
ds
je
mov
imul
test
cli
loopne
ret
jne
xchg
retf
idiv
dec
adc
int3
jmp
test
jp
ins
push
sbb
sti
inc
mov
(bad)
fldcw
xchg
cli
pushf
xor
xchg
inc
xor
mov
mov
xchg
shl
adc
pop
mov
and
pop
test
dec
xor
and
call
jmp
repnz
shl
cmps
mov
outs
fild
out
retf
sub
mov
test
loop
sbb
std
mov
cmp
jae
push
pusha
add
(bad)
lds
add
lods
mov
push
sub
jle
dec
icebp
int
cmc
es
stos
jmp
push
push
push
(bad)
aad
sar
iret
inc
adc
loopne
pop
dec
(bad)
ds
jne
test
dec
shl
js
lea
ins
ss
pop
xlat
sub
movs
addr16
iret
in
mov
xchg
ss
es
cmp
shl
jnp
mov
call
cmp
adc
pop
or
sub
in
rcr
fstp
in
push
mov
jmp
movs
inc
cmps
in
jb
cmp
out
enter
nop
not
adc
adc
fnstsw
dec
(bad)
daa
dec
and
mov
adc
movs
into
push
dec
xchg
(bad)
loope
ins
out
xchg
cmps
fldenv
test
jg
add
inc
iret
test
inc
clc
fs
mov
add
ret
add
pop
mov
pop
sub
jmp
and
sub
stc
push
ret
dec
pop
shl
test
pop
cwde
sti
scas
jmp
xchg
aas
xchg
inc
adc
popa
ins
daa
push
jnp
mov
or
sti
test
imul
or
jg
and
mov
pop
push
out
(bad)
sti
add
mov
pushf
sbb
loope
mov
adc
xchg
fwait
add
sbb
cmps
rcr
push
pushf
cmps
lods
jno
outs
and
aaa
xor
push
mov
mov
mov
sbb
imul
int
popf
cs
mov
icebp
sbb
test
adc
jno
jno
xchg
in
clc
out
in
mov
lea
out
leave
mov
adc
mov
mov
adc
xchg
mov
repz
pop
dec
repz
outs
shl
sahf
outs
sub
mov
cmp
sub
daa
push
cmp
jmp
add
jbe
cmps
sub
mov
mov
in
push
pushf
(bad)
or
retf
mov
add
adc
arpl
jb
adc
jmp
(bad)
mov
inc
mov
shl
mov
(bad)
sbb
les
sub
or
cmps
outs
inc
mov
fld
fs
jl
popf
xchg
outs
scas
inc
hlt
pop
xor
adc
adc
loopne
test
xchg
or
int
adc
push
or
test
hlt
lea
xchg
aaa
mov
xchg
sub
sahf
sahf
test
in
sub
iret
sbb
loope
jp
sbb
jnp
leave
icebp
icebp
outs
dec
outs
sbb
mov
xor
push
jmp
rcl
aam
sbb
test
fwait
loop
jns
mul
sub
dec
cs
xor
xchg
ss
xchg
lahf
jns
dec
jecxz
push
stos
fidiv
and
mov
jecxz
and
test
fld
sbb
xchg
(bad)
fistp
add
mov
stos
mov
mov
pop
push
leave
shl
add
lods
test
xchg
mov
imul
xchg
bound
mov
enter
fucomi
dec
dec
mov
mov
cwde
push
and
inc
push
aas
gs
sbb
dec
pop
pop
adc
and
xchg
jge
test
jg
cmp
dec
enter
mov
mov
push
jle
pushf
fwait
push
cli
and
inc
xchg
cmp
mov
push
dec
std
or
ret
push
inc
mov
sub
mov
cmp
in
and
mov
leave
xchg
pop
rcr
inc
outs
pop
scas
test
jae
aam
pop
jmp
xchg
call
enter
xor
ins
fldln2
dec
sbb
cmps
ror
call
inc
outs
push
adc
rol
das
fsub
pop
fisubr
fld
cmc
mov
mov
cmp
pop
fwait
into
in
mov
or
les
cmpxchg
outs
xchg
lods
add
retf
imul
(bad)
retf
cs
shl
push
mov
push
push
push
jnp
das
pop
pop
xor
clc
stos
push
sahf
add
sub
cmp
call
sbb
dec
sbb
xchg
mov
dec
sbb
inc
out
nop
fcmovu
push
ret
and
and
cmp
cmp
xlat
push
inc
mov
mov
shr
mov
dec
pop
push
bound
(bad)
(bad)
(bad)
enter
cmp
inc
dec
test
sub
stc
ins
jl
add
call
bswap
jmp
(bad)
stc
sub
sbb
add
cmp
cdq
call
xor
movs
icebp
inc
sbb
into
std
enter
rol
es
inc
jne
sub
stos
lods
test
and
int
and
sbb
sub
mov
cmp
cmp
out
daa
sbb
adc
scas
mov
pop
inc
lods
test
xchg
xchg
sub
cmp
jne
mov
mov
les
cmp
clc
inc
lea
loope
push
hlt
test
ja
and
imul
jmp
inc
jo
pushf
jecxz
cmp
rol
cmp
xchg
lods
fiadd
push
sub
or
dec
cli
imul
mov
dec
data16
xchg
mov
push
inc
sti
xor
adc
cld
jecxz
adc
cmp
mov
movntps
iretw
jnp
and
sahf
out
into
lock
sub
nop
lods
ins
push
stos
jns
mov
sbb
inc
fcom
dec
mov
cmps
fmulp
xchg
das
es
pop
sbb
or
cmp
or
adc
dec
scas
sub
cmp
outs
sub
popf
pop
inc
fcmovb
jno
pop
ja
lea
lods
xor
les
xor
cwde
pop
dec
cmp
scas
or
sub
in
jmp
js
in
mov
dec
add
jnp
xchg
and
out
sub
les
ja
mov
fcomp
sbb
imul
clc
out
cmp
clc
neg
call
cmps
mov
xor
les
cdq
and
mov
xlat
pop
mov
popa
std
or
(bad)
add
fs
lahf
bound
cdq
sahf
or
cs
dec
mov
mov
clc
cmps
or
in
rcl
xor
xchg
inc
outs
clc
sub
ins
adc
sub
repnz
icebp
inc
clc
lahf
fist
sahf
not
pop
retf
pusha
adc
(bad)
cmp
xstore-rng
cmps
or
cwde
daa
rol
addr16
neg
sbb
test
push
popa
addr16
or
dec
inc
sub
dec
fcmovbe
pushf
jecxz
pop
jge
cwde
or
lods
fwait
adc
shl
xchg
mov
inc
xchg
adc
mov
fcmove
pop
jmp
push
push
jmp
jmp
mov
cmp
or
pop
ret
sub
std
mov
addr16
mov
cmp
jne
call
mov
pop
or
(bad)
cmp
push
inc
fmulp
mov
gs
mov
in
bound
mov
or
lods
ret
cli
or
movs
mov
sub
xchg
sub
mov
push
inc
dec
sub
sub
pop
pop
jnp
xor
dec
call
add
pop
inc
mov
mov
jbe
xor
cmp
sbb
bound
lea
std
frstor
or
test
xor
push
mov
mov
and
jne
dec
pop
sbb
pop
adc
pop
daa
pop
test
icebp
outs
push
clc
pop
stc
lds
aad
push
push
or
adc
out
hlt
mul
mov
sti
ds
xchg
daa
clc
cmps
xchg
xchg
mov
into
in
int3
and
arpl
retf
lods
out
cli
(bad)
mov
mov
inc
ret
jmp
or
dec
jecxz
xchg
dec
adc
sub
dec
or
in
fst
ins
push
and
ins
lahf
lods
movs
mov
sub
add
lea
pop
cli
jnp
sub
pusha
jne
nop
ss
out
inc
clc
call
pop
mov
shl
mov
and
sbb
pop
js
loope
(bad)
data16
prefetch
or
inc
jnp
push
(bad)
pop
cdq
scas
jmp
cwde
cli
lock
cmp
dec
cmp
add
push
xor
call
mov
adc
add
mov
sub
stos
imul
cwde
enter
(bad)
pushf
xchg
sub
test
imul
add
les
gs
jno
or
and
repz
out
movs
mov
or
lods
dec
fidivr
gs
dec
lds
xor
push
aam
xor
adc
cdq
inc
outs
inc
push
mov
in
push
mov
mov
ret
xchg
xchg
dec
out
xchg
push
(bad)
ror
in
cmp
mov
pop
mov
mov
in
repnz
xor
sbb
imul
sbb
test
sbb
rcl
mov
cmp
sub
jle
inc
mov
lods
loop
mov
nop
stc
loope
retf
mov
fnstenv
inc
iret
push
mov
std
inc
inc
and
mov
call
mov
jmp
ins
(bad)
stc
jno
push
mov
mov
aam
(bad)
jmp
sub
mov
push
into
cmp
ret
ror
push
fnstcw
inc
mov
sbb
sti
popf
adc
pushf
imul
xor
cmps
jns
inc
xchg
lock
mov
out
dec
cwde
sub
jns
mov
jecxz
cdq
add
inc
jl
stos
sbb
pop
add
fsubr
pusha
dec
push
call
jnp
imul
(bad)
cmp
cmps
shl
cld
int
mov
mov
add
(bad)
lods
xor
sub
jmp
ds
xchg
aaa
mov
call
in
and
push
dec
bound
inc
sahf
out
lods
xchg
cmc
mov
push
in
mov
test
xchg
jno
mov
cmp
mov
xor
sar
mov
in
jp
enter
push
dec
test
cmp
xchg
cmp
cmp
ss
scas
sahf
sbb
cli
adc
icebp
mov
dec
popa
or
and
jno
and
mov
ins
pmullw
or
mov
or
addr16
pop
jmp
retf
mov
es
mov
test
lods
loopne
outs
mov
cmp
mov
das
sbb
neg
add
push
ss
sbb
jb
mov
stc
shr
shr
jp
push
push
xlat
pop
mov
cmps
ret
cmc
pop
movs
ficomp
jns
or
gs
in
scas
(bad)
sahf
push
adc
idiv
test
dec
pop
jne
dec
fmul
in
ds
aad
sub
mov
mov
enter
movs
sbb
pop
fwait
mov
call
shl
clc
shl
fnsave
(bad)
push
movs
push
mov
jl
stos
enter
mov
imul
jecxz
sti
sbb
mov
and
adc
fsub
xor
fwait
lds
addr16
mov
jns
mov
les
mov
push
push
call
push
add
add
test
or
sub
fcomp
jns
cld
push
dec
cmc
test
jo
movs
pop
(bad)
ja
clc
pop
push
xchg
mov
jo
mov
xchg
mov
jg
and
mov
xchg
int
jmp
in
aad
in
test
pop
loopne
outs
lds
push
sahf
(bad)
rcr
jge
daa
hlt
sub
pop
pop
push
jbe
jno
pop
in
push
jb
mov
shr
ja
add
sub
add
popa
push
adc
movs
jge
fadd
adc
mov
sbb
xchg
and
lods
cmps
in
jo
ins
outs
and
or
push
stc
int3
gs
shl
pop
fisubr
mov
xor
lods
adc
jge
lahf
in
cmp
xor
sub
js
mov
scas
add
popaw
dec
adc
arpl
inc
mov
repz
stos
int3
fcmovnbe
jo
push
adc
jbe
xchg
sub
push
cli
and
nop
popa
mov
xor
mov
ins
mov
mov
push
inc
mov
push
mov
outs
xchg
lock
fist
pop
inc
lods
add
bound
push
(bad)
icebp
daa
popa
stos
cmp
dec
pop
cld
ds
retf
mov
sbb
xchg
stos
or
mov
mov
fbstp
sub
pop
shr
mov
jmp
bnd
xchg
scas
sbb
imul
rcl
mov
push
ret
mov
fs
(bad)
mov
aad
inc
mov
xor
or
retf
or
ds
rol
adc
or
fisttp
scas
inc
jno
in
fucomi
(bad)
push
std
jecxz
adc
call
add
and
cs
jmp
cmc
es
int3
xor
ins
jo
popf
cmp
push
pop
pop
fiadd
mov
stc
aas
repz
cmp
sbb
aad
iret
jno
push
pop
mov
mov
cmp
enter
dec
push
popf
jmp
aam
xor
dec
jb
or
mov
jmp
int3
jo
mul
les
sbb
cmps
(bad)
xchg
pop
lods
mov
shr
mov
repnz
and
sub
retf
sub
pop
cmp
outs
add
xlat
loopne
les
sahf
xor
popf
sahf
das
jnp
cdq
retf
repnz
lock
add
push
jmp
jecxz
in
jp
cld
stos
mov
into
add
mov
xor
call
sbb
add
adc
or
in
push
pop
xchg
in
pop
call
cli
mov
cs
push
jb
sbb
push
push
inc
daa
dec
mov
pushf
int
pop
call
cmp
xchg
mov
lds
mov
lea
or
cmp
or
dec
push
pop
js
xchg
iret
xchg
or
je
mul
cmps
cmp
add
push
adc
sar
adc
or
mov
pop
adc
int
out
cli
sub
sahf
out
add
or
leave
jnp
jnp
ret
or
das
enter
nop
stos
dec
mov
ins
addr16
cld
das
mov
dec
(bad)
into
push
leave
mov
inc
pop
xor
mov
and
adc
jno
cmps
(bad)
sbb
not
test
or
and
pop
xchg
dec
jle
push
and
cld
push
fild
dec
xchg
in
mov
xor
lds
dec
outs
and
int
mov
mov
retf
adc
push
mov
popa
cmp
and
shl
push
stos
adc
stc
or
mov
sbb
sub
clc
out
sub
das
ficomp
push
(bad)
test
(bad)
fst
adc
push
fsubr
push
sub
neg
mov
je
shl
jae
pusha
(bad)
and
(bad)
push
(bad)
popf
int
icebp
inc
bound
mov
adc
dec
scas
push
(bad)
(bad)
retf
xor
cmp
mov
pop
mov
(bad)
stos
dec
jge
add
and
(bad)
xor
jno
std
jp
fisubr
push
mov
dec
mov
mov
add
xor
je
xor
or
xchg
popf
(bad)
hlt
push
dec
push
sbb
pusha
jo
sbb
push
in
sub
add
aaa
rcl
icebp
or
add
sub
push
(bad)
nop
in
sti
inc
iret
aad
push
(bad)
in
popa
fs
cmp
adc
xor
xchg
cld
or
ret
push
in
inc
mov
dec
es
mov
psadbw
lods
xor
xchg
mov
cmp
dec
jle
sar
jecxz
dec
push
pop
lahf
dec
scas
adc
dec
mov
pusha
ret
sbb
push
sub
xchg
fs
xor
mov
inc
shr
es
repz
inc
xchg
test
and
(bad)
push
lods
lds
xchg
push
adc
and
gs
push
cmp
aam
sbb
out
ja
adc
scas
add
pop
sbb
inc
(bad)
xor
lods
(bad)
adc
add
call
(bad)
cwde
nop
imul
add
stc
psubq
aam
mov
cmp
nop
adc
mov
mov
lds
jle
push
mov
test
in
sbb
iret
xchg
pop
cmp
and
mov
mov
mov
mov
dec
adc
aad
pop
cdq
pop
ins
das
mov
fistp
mov
dec
lock
dec
call
iret
lahf
push
cdq
lds
sbb
mov
es
inc
or
mov
mov
sub
add
xrelease
imul
inc
add
(bad)
xchg
xor
add
sbb
test
scas
fmul
stos
mov
out
lock
cmps
and
fisubr
add
scas
sub
xchg
xchg
out
(bad)
sub
cwde
outs
add
dec
test
mov
add
ds
hlt
cwde
push
lods
adc
sar
jle
inc
adc
or
push
test
out
adc
or
fist
mov
movs
(bad)
mov
xor
inc
retf
inc
fimul
push
add
xchg
or
adc
dec
mov
cmp
sub
sti
cdq
and
pop
jp
jns
or
and
cwde
mov
pop
push
mov
ret
pop
stos
jbe
scas
push
(bad)
fs
xlat
cmps
adc
outs
push
shr
adc
xchg
outs
fsub
(bad)
pusha
repz
fwait
in
xchg
jp
sahf
jns
mov
jp
mov
retf
iret
aam
and
mov
(bad)
mov
mov
lods
cvttps2pi
fnsave
inc
test
in
in
cmps
xor
loopne
dec
movs
cdq
cli
movs
div
pop
sar
jae
ss
(bad)
shl
add
jnp
test
in
nop
lock
loope
adc
(bad)
sbb
and
pop
add
sub
retf
mov
push
xlat
jmp
(bad)
cmp
pushf
pop
mov
out
lds
mov
push
mov
shl
retf
out
setne
popf
jg
add
mov
out
mov
dec
mov
mov
test
mov
mov
mov
adc
pop
xor
jns
fistp
cmps
mov
cmp
mov
mov
xchg
ja
mov
cmp
call
clc
and
jle
ins
jmp
jae
jg
ins
mov
ins
adc
out
pop
ins
and
inc
(bad)
pop
mov
stos
inc
in
xchg
out
xor
inc
mov
xchg
inc
popf
ror
push
pop
fbstp
add
cmp
out
(bad)
pop
mov
mov
pop
add
adc
pop
aas
xor
pop
xor
shl
or
hlt
aad
cli
jnp
adc
cmp
movs
and
scas
mov
xor
mov
test
loope
lods
ja
lahf
mov
inc
into
(bad)
ins
cld
fld
test
lock
and
(bad)
stos
and
in
mov
call
lods
mov
inc
xor
sti
fst
mov
jmp
sbb
or
mov
fimul
push
add
mov
outs
adc
add
or
sub
in
adc
pushf
cmp
mov
xchg
pop
icebp
ds
pusha
outs
cmp
stos
dec
fnstcw
and
and
xchg
das
adc
sbb
mov
(bad)
sbb
int3
outs
inc
ins
nop
sub
in
out
fnsave
xchg
jae
cmp
mov
or
icebp
stc
(bad)
std
cdq
mov
jecxz
enter
fiadd
mov
std
inc
stos
rcr
scas
(bad)
xor
jg
adc
mov
int3
frstor
je
add
push
pushf
add
cwde
test
mov
xor
and
(bad)
aam
pop
push
loop
test
cmp
mov
add
ins
mov
and
outs
push
test
and
movs
je
mov
aam
push
xor
mov
and
sti
jnp
out
jmp
mov
icebp
ror
mov
pop
push
les
sahf
shr
jnp
lahf
mov
loopne
xchg
mov
xchg
pop
add
fs
inc
out
sti
scas
movs
loopne
mov
xchg
pop
mov
push
mov
push
dec
mov
stos
sbb
test
ss
xor
call
jbe
test
xchg
cs
jecxz
mov
jg
mov
dec
dec
mov
in
int3
xchg
sbb
mov
rcr
jge
jns
test
ja
or
xor
test
bound
xor
retf
(bad)
mov
mov
push
outs
pop
sub
loop
mov
add
bound
(bad)
mov
or
lahf
scas
push
push
dec
sub
in
fisub
or
adc
dec
mov
xor
in
cmp
xchg
mov
xchg
(bad)
dec
jae
dec
pop
push
(bad)
and
sub
lock
xor
xor
mov
sahf
je
cdq
or
mov
cmps
jg
push
inc
xchg
mov
jp
inc
sub
scas
ja
aaa
cs
jge
int3
push
dec
mov
ss
mov
repnz
fcmovbe
test
dec
add
inc
mov
xchg
or
js
in
add
xor
ja
xor
fisub
out
jg
imul
mov
stos
(bad)
sub
xchg
(bad)
movs
add
cmp
add
addr16
out
ja
add
(bad)
mov
jb
inc
inc
(bad)
adc
scas
sbb
shl
or
sbb
add
popf
inc
jecxz
int
stc
(bad)
fsub
mov
and
dec
(bad)
jbe
inc
fs
jnp
jbe
mov
or
lock
lds
stos
dec
xchg
push
sub
pushf
push
adc
dec
jb
fiadd
cmps
jmp
arpl
sub
sahf
or
xchg
sti
and
add
ficom
test
daa
adc
es
mov
push
xchg
shl
xchg
push
mov
fadd
add
movs
xchg
xor
xlat
fs
xchg
(bad)
xchg
fld
push
stos
or
icebp
jae
pop
stos
inc
fst
dec
mov
retf
out
repz
and
iret
mov
int
cmp
test
adc
(bad)
rol
outs
push
xlat
cli
stos
pop
cmps
add
cmps
pop
or
(bad)
xor
xchg
(bad)
sahf
and
push
inc
jbe
pop
(bad)
fisub
mov
pop
cvtdq2ps
aaa
(bad)
xchg
stos
into
test
push
outs
inc
rcl
pop
loope
and
add
arpl
cmc
ss
pop
test
cmp
repnz
icebp
stc
adc
js
out
jb
aam
sub
or
xchg
mov
mov
dec
and
ins
dec
in
or
pop
in
std
setns
in
push
push
scas
xchg
clc
ss
sbb
fs
push
and
jp
dec
mov
xchg
add
js
out
cmc
mov
lahf
mov
call
scas
(bad)
aaa
dec
imul
mov
push
scas
in
call
ret
jl
xlat
jmp
outs
mov
rol
packssdw
and
pop
ds
xchg
ja
cmp
add
pop
movs
sbb
inc
add
jecxz
loop
cmp
dec
sbb
aaa
mov
and
(bad)
cmp
fistp
ins
sub
mov
test
sub
push
in
cmp
retf
fabs
xor
add
ds
fisttp
ficom
icebp
pop
ss
xor
iret
(bad)
sbb
adc
repnz
sbb
cmp
xor
ja
xor
mov
mov
sbb
cmp
jp
mov
xchg
mov
hlt
in
out
(bad)
adc
(bad)
pmuludq
(bad)
cwde
stos
mov
xor
(bad)
or
mov
sub
aaa
push
fwait
xchg
test
fwait
add
in
movs
sbb
movs
outs
int
sbb
(bad)
loop
pushf
aas
pop
mov
clc
mov
popf
mov
xchg
rcl
jnp
mov
cmp
cli
jmp
imul
push
dec
cld
mov
js
sbb
push
aad
mov
push
inc
push
xchg
arpl
cmp
cs
jb
fnstenv
or
sub
pop
leave
jns
mov
scas
inc
pop
test
dec
mov
mov
lods
aaa
cmp
sbb
jne
mov
add
repnz
inc
ins
pop
pop
ret
inc
and
imul
adc
cmps
int
out
arpl
mov
das
jecxz
jnp
sub
mov
hlt
aaa
(bad)
xor
mov
sub
xor
pop
mov
cli
stos
jmp
sbb
sub
cld
loope
ins
popa
sub
cli
dec
aam
jmp
push
mov
push
jne
inc
in
adc
jnp
add
inc
add
loope
push
inc
add
adc
leave
and
aaa
mov
leave
pop
dec
rcr
aam
fs
xor
sub
out
jmp
push
pop
pushf
pop
daa
leave
jns
adc
jo
test
sbb
ja
and
(bad)
nop
lahf
or
or
icebp
add
xchg
daa
out
ret
push
or
mov
inc
(bad)
mov
pusha
xchg
test
in
mov
adc
sbb
ror
adc
mov
jecxz
fisub
xchg
cmp
out
pop
in
jg
(bad)
sbb
pop
xchg
and
xchg
and
and
jp
mov
fcmove
sti
bound
sti
ja
aad
cmp
(bad)
fs
and
(bad)
(bad)
call
leave
imul
es
bound
pop
push
cmp
cmps
sbb
ror
das
sti
in
stos
adc
int3
push
sub
sahf
sbb
push
adc
sub
loope
jg
xor
jg
cmp
jnp
lea
lds
cmps
enter
lods
das
mov
(bad)
sub
rcl
jmp
jmp
lahf
pop
mov
(bad)
aaa
scas
mov
es
mov
shr
in
test
in
stc
loopne
out
loop
imul
mov
call
(bad)
mov
jnp
cli
fist
icebp
adc
mov
adc
xor
add
mov
add
and
jnp
or
jle
in
shl
scas
test
mov
adc
mov
inc
arpl
repz
sbb
inc
dec
retf
push
and
and
retf
fbld
xchg
adc
lock
dec
into
imul
pusha
xchg
sbb
lds
ss
push
rol
sbb
lds
iret
cdq
stc
pop
cmps
push
(bad)
mov
mov
iret
or
and
dec
sub
pusha
xlat
mov
jp
rcr
jl
into
xchg
inc
ret
push
das
fwait
add
clc
call
add
mov
jb
add
in
ror
pop
adc
repnz
lahf
ins
xchg
mov
cs
ss
arpl
jb
xchg
push
pop
loop
sub
addr16
fidivr
mov
jno
adc
int3
and
(bad)
loopne
jbe
mov
fimul
or
loope
enter
hlt
mov
and
gs
pop
ret
lods
dec
push
mov
and
cmps
push
outs
pop
cs
or
rcr
fild
icebp
jae
ins
lahf
mov
dec
dec
push
lods
test
push
inc
adc
bound
inc
push
xor
dec
jp
sub
or
adc
cli
mov
mov
adc
mov
lea
sbb
mov
shl
mov
sahf
mov
add
sbb
jne
sub
sbb
or
sbb
shl
or
sub
adc
fstp
push
fistp
fst
xchg
xor
rcl
retf
jns
dec
ror
ss
gs
add
mov
ja
adc
cmp
cli
add
idiv
xor
icebp
jo
mov
push
lds
ds
out
jb
sbb
ret
std
mov
sub
ins
lahf
pop
clc
mov
repnz
lods
nop
movs
mov
mov
or
xchg
pop
xor
jnp
jno
out
mov
dec
pop
pop
and
pop
movs
outs
sti
retf
js
xor
jno
scas
enter
lds
sar
outs
cmps
sub
pop
sbb
pushf
arpl
daa
(bad)
lea
mov
push
inc
adc
inc
outs
push
lods
jne
ret
sub
xchg
mov
push
xchg
fcomp
jp
jge
cmp
and
or
movs
push
inc
adc
pop
xor
hlt
sbb
mov
add
ds
js
fwait
sti
fldcw
jge
cmps
mov
js
mov
jo
sub
jle
fcomp
ss
push
push
mov
call
jne
push
add
cmp
cmps
jno
popa
mov
fsubr
lea
bound
or
adc
mov
xchg
pop
iret
je
shl
lods
call
jae
into
sbb
jg
inc
mov
repz
sub
jl
push
mov
pop
inc
xchg
jmp
xchg
leave
cli
mov
mov
out
or
jmp
mov
fs
(bad)
fimul
sub
out
xchg
xor
(bad)
or
push
cmps
mov
inc
into
fadd
retf
loopne
adc
xchg
sbb
push
lock
lods
cmc
enter
stos
add
pop
js
ins
call
sar
pop
(bad)
jno
mov
mov
fwait
push
dec
and
xchg
xchg
je
xchg
mov
loopne
imul
sub
retf
xchg
fdivr
push
movs
mov
mov
es
sbb
cmp
xchg
sbb
mov
push
dec
cwde
pop
aas
push
push
mov
add
popa
and
addr16
std
mov
shl
sbb
push
adc
or
sub
and
fstp
mov
out
or
shl
adc
inc
hlt
xchg
xchg
retf
cdq
mov
imul
push
ret
loope
stc
pop
sbb
shl
das
cld
int3
in
(bad)
ins
xchg
lock
xchg
jmp
in
and
jo
ds
push
movs
adc
cmps
xchg
pop
scas
pop
sub
adc
jg
enter
dec
ins
xor
cmp
stc
cmp
or
pusha
cdq
fisttp
jae
div
dec
mov
jecxz
push
or
inc
lods
dec
push
push
dec
or
push
repnz
adc
fwait
jle
fdivr
cmps
(bad)
stc
push
adc
pop
rcr
xor
jns
inc
pop
js
cld
repz
adc
out
mov
mov
sti
mov
mov
retf
call
test
mov
dec
mov
mov
outs
sahf
add
rcl
xchg
and
mov
dec
add
dec
push
mov
fucomp
cmps
sbb
add
inc
fs
loop
pop
add
cmp
leave
ins
jo
mov
mov
cmp
xor
dec
cmp
sahf
cmp
cmc
xchg
jmp
xchg
pusha
loope
jmp
dec
sub
rol
cmp
cmp
mov
sub
dec
xchg
mov
fcmovbe
loopne
push
jp
mov
adc
(bad)
out
std
fdivr
add
daa
or
xchg
addr16
jmp
or
jbe
lahf
pushf
(bad)
hlt
lahf
jno
push
(bad)
pop
ja
sub
jbe
jnp
icebp
adc
mov
lds
in
cmps
popa
cs
sub
inc
es
mov
cld
jecxz
dec
cmp
fisttp
cmp
(bad)
mov
fistp
pop
in
data16
icebp
jle
mov
das
cwde
adc
in
mov
cmp
mov
cdq
mov
sub
xor
(bad)
stc
cmp
or
pop
stos
ins
add
bound
add
cmp
das
repz
outs
sbb
mov
movs
dec
in
sub
and
outs
in
int
dec
call
push
sub
lock
mov
xor
push
push
adc
jl
retf
ficomp
push
or
add
and
sub
outs
sbb
fmul
outs
ficom
mov
or
mov
jo
and
sbb
xor
cmp
dec
mov
enter
and
mov
ins
leave
mov
mov
add
sti
cmp
mov
outs
ins
(bad)
mov
jo
adc
or
addr16
mov
iret
push
sub
jmp
repnz
push
jmp
fidiv
mov
cmps
push
add
lock
dec
movs
jbe
iret
jmp
lock
mov
int
rol
jmp
sub
cli
add
retf
pop
mov
push
and
pop
sub
loop
xor
push
push
in
addr16
cmp
mov
push
test
inc
jne
fnsave
sbb
movs
sub
and
repz
push
pop
mov
pop
loop
xor
xlat
jg
xor
push
push
ror
(bad)
jne
dec
pop
lock
mov
dec
in
push
xor
in
dec
lock
push
pop
mov
fstp
call
mov
rcl
test
add
dec
and
pop
scas
call
imul
mov
in
call
(bad)
loopne
shl
xchg
inc
add
add
push
stc
xchg
inc
pop
push
or
jmp
inc
cmp
fwait
jmp
dec
xor
lods
or
daa
mov
aad
es
mov
push
je
cmp
lea
movs
les
div
aam
jle
and
inc
push
or
cmp
sti
cwde
bound
add
xor
js
sbb
dec
add
jl
stc
stos
(bad)
jbe
ret
fcom
jne
scas
pop
mov
mov
xor
xchg
repnz
mov
cld
and
sub
cmp
jl
pushf
pop
mov
mov
or
les
retf
add
sbb
repnz
add
mov
iret
sub
in
xor
fisub
outs
pop
sti
mov
push
push
pop
mov
xchg
add
cld
outs
movs
pop
and
movs
jo
adc
jb
aam
xchg
mov
add
push
out
push
mov
push
fdivr
jp
pusha
test
jl
clc
dec
pop
not
pop
and
jp
cmp
mov
bound
and
sti
push
adc
loopne
jmp
movs
xchg
jmp
adc
sub
or
mov
iret
leave
(bad)
pop
inc
xor
push
inc
xchg
push
adc
jmp
adc
sti
dec
cmps
push
int
adc
mov
sar
sahf
pop
xor
sub
js
dec
push
lock
out
adc
sub
inc
loope
jg
fldenv
daa
or
mov
inc
sub
inc
add
dec
add
loopne
pop
dec
sub
jns
xlat
xchg
lea
dec
sbb
addr16
in
push
or
add
add
loop
jns
push
add
retf
jmp
bound
call
jns
xchg
mov
and
mov
not
inc
push
int3
imul
fcom
loope
xor
pop
adc
add
mov
jne
jl
pushw
(bad)
cmp
push
test
pop
popf
mov
adc
nop
in
les
sahf
mov
dec
movs
dec
mov
or
sub
sbb
pcmpeqw
fidiv
jae
adc
cwde
mov
or
mov
xchg
push
xchg
cmp
xor
dec
sub
mov
sti
ficom
push
outs
test
cdq
sub
xor
xor
push
repnz
adc
mov
shl
es
int
retf
loopne
pop
loope
mov
and
mov
mov
in
mov
and
lods
mov
test
les
das
fsub
cmps
test
data16
movs
sub
out
cmps
mov
das
push
enter
cmp
pop
sbb
jle
mov
test
xchg
dec
inc
jmp
dec
int
sbb
dec
add
stc
scas
push
jecxz
cdq
or
adc
inc
outs
jne
fistp
xchg
jecxz
and
or
(bad)
out
sahf
jge
js
sub
lods
cmps
sahf
ja
ds
mov
adc
dec
cmp
inc
sub
(bad)
sub
cmps
jnp
pop
dec
push
mov
out
sub
adc
ret
jg
ja
add
cwde
push
outs
jmp
mov
shl
or
and
scas
inc
pop
inc
jmp
mov
or
retf
(bad)
aad
mov
leave
xor
adc
(bad)
or
sub
mov
repz
or
into
mov
fcmovnu
fdivr
ja
or
(bad)
sub
fldcw
dec
adc
mov
push
pusha
pusha
cwde
push
mov
movs
xor
movs
js
shl
and
fidiv
js
cmp
repz
xor
dec
cmc
mov
div
aas
mov
movs
mov
in
cmps
pop
mov
xor
loop
movs
mov
xchg
pop
adc
xor
xchg
fild
fidivr
or
jg
pushf
sbb
repnz
stos
jo
cwde
pop
cmp
mov
cld
xor
mov
outs
ds
mov
daa
pop
push
cli
push
cmps
xlat
pop
and
push
sti
std
jg
sar
jl
xchg
sbb
mov
jmp
mov
mov
fdiv
rcr
adc
es
sub
loope
fcomp
test
fucomip
jg
adc
inc
adc
aad
cmp
mov
inc
fwait
test
(bad)
rol
cmp
pop
daa
lods
test
xchg
je
lods
or
push
jb
pusha
cmp
and
icebp
inc
mov
xchg
dec
mov
mov
mov
jle
stos
add
sar
xor
and
loop
jl
and
pop
or
jmp
mov
push
and
pop
neg
sub
je
cs
mov
jo
mov
xchg
sbb
mov
xor
mov
outs
imul
scas
mov
pusha
adc
mov
dec
aam
imul
sbb
(bad)
(bad)
sub
lahf
sub
sbb
xchg
pusha
push
jne
add
(bad)
mov
repz
sub
ror
push
rcr
dec
sbb
push
add
enter
into
xchg
inc
repnz
(bad)
iret
push
jle
call
mov
test
mov
movs
mov
jecxz
cld
lods
push
and
xor
xor
sbb
pop
sub
loop
jo
rcl
(bad)
push
sbb
and
pop
cli
addr16
test
idiv
pop
xor
dec
test
pop
ss
and
mov
fsub
test
push
ret
pop
in
and
and
cmp
cmc
mov
xchg
retf
ret
stc
pop
inc
push
popa
dec
fs
in
jne
js
jle
sbb
inc
sub
inc
sbb
mov
jns
push
cmp
jns
xor
jle
repz
(bad)
sbb
sbb
mov
push
xor
or
inc
iret
call
arpl
lahf
daa
jmp
fimul
push
sub
shr
mov
fmulp
aad
sbb
pop
xor
ins
hlt
(bad)
pop
push
ss
out
add
inc
aam
fdivr
and
scas
jg
into
shl
adc
rcr
add
pop
sub
xchg
mov
and
pop
cmp
mov
call
cs
jb
inc
fld
imul
pop
arpl
xor
ret
jo
shl
or
inc
add
fcom
or
jecxz
or
inc
ret
nop
out
mov
mov
adc
push
jnp
mov
div
adc
ins
(bad)
dec
pop
test
call
mov
cmc
call
cs
mov
xchg
xor
ss
call
call
mov
into
jb
push
int
mov
jo
lock
cli
xchg
loope
pop
xchg
or
mov
fs
iret
(bad)
and
scas
adc
sbb
mov
into
(bad)
jb
fcmovnbe
pop
dec
xor
xor
xchg
jae
neg
mov
fldcw
repz
jno
stos
push
imul
xchg
push
inc
cmp
cmp
pop
xchg
adc
inc
cwde
sar
jo
pop
xchg
sub
das
jb
push
clc
jg
aas
add
call
fwait
out
push
mov
adc
cmps
sti
and
repz
mov
or
add
imul
xchg
sub
test
sbb
mov
test
sub
adc
lods
cmps
push
push
xor
retf
mov
fcom
pop
sub
adc
cmp
push
cmp
jo
neg
fistp
push
push
int3
and
jmp
imul
push
cdq
loopne
(bad)
or
dec
sbb
and
or
mov
rcl
adc
nop
push
mov
xor
xchg
and
hlt
ss
arpl
inc
dec
(bad)
pop
enter
out
inc
and
xor
jno
mov
unpcklps
(bad)
addr16
and
jne
adc
dec
das
(bad)
(bad)
xchg
addr16
cwde
retf
lds
xor
stc
rcr
mov
outs
icebp
je
or
xchg
jge
or
jecxz
ret
rol
dec
sti
sti
fdivr
inc
dec
in
popf
icebp
lea
outs
lods
mov
out
dec
ret
xor
mov
(bad)
sub
mov
nop
pusha
push
inc
call
outs
cmps
xchg
scas
add
cmp
je
push
pop
dec
push
mov
push
xchg
xor
out
sub
into
dec
mov
movzx
scas
gs
dec
jno
push
jns
scas
adc
pop
mov
mov
mov
lock
jae
int
gs
sbb
xchg
loop
test
or
sbb
cmp
add
sub
(bad)
mov
dec
aam
fadd
jp
mov
push
and
xor
jns
pop
outs
test
dec
ret
ret
outs
jge
jae
lods
and
les
into
iret
dec
push
gs
mov
jo
(bad)
cmp
ret
popa
aaa
int
push
mov
fldenv
sbb
mov
jmp
lock
repz
dec
and
lea
mov
call
cmps
(bad)
or
ins
push
js
(bad)
push
aas
nop
sbb
adc
push
xor
mov
out
xor
scas
sbb
jl
je
pop
or
jmp
sbb
cld
mov
repnz
push
cwde
test
fbstp
(bad)
push
push
adc
pop
loop
popf
out
push
dec
sub
dec
loop
dec
stc
mov
test
mov
into
retf
mov
or
pop
repnz
gs
or
clc
jge
or
inc
push
cli
call
mov
leave
jle
jno
js
pushf
stc
shr
movs
sbb
xchg
xor
or
lea
lahf
mov
outs
push
add
enter
das
call
xchg
les
mov
adc
daa
dec
pop
aad
cdq
push
fs
loopne
or
cmp
add
jge
push
or
mov
cmp
jns
cs
jne
pop
fistp
adc
dec
daa
movs
repz
lahf
rcr
fadd
and
mov
mov
sub
adc
xor
push
adc
xor
cmp
shr
or
xchg
clc
lahf
retf
repz
into
inc
pop
movs
inc
ins
into
loope
lea
clc
mov
cli
mov
sbb
data16
addr16
dec
jecxz
pusha
icebp
out
movs
ret
inc
(bad)
ficom
xchg
std
popf
in
jmp
xchg
inc
mov
dec
adc
mov
movs
sub
add
push
in
call
stos
hlt
jl
mov
cmp
les
sub
pop
call
aam
push
push
arpl
push
sub
jb
mov
pop
lods
bound
outs
dec
ins
push
nop
mov
mov
xchg
popa
pop
outs
jne
mov
cmp
lods
das
jmp
std
push
(bad)
in
mov
jge
lods
xor
rcr
add
adc
pop
in
mov
jmp
mov
(bad)
adc
out
lock
and
add
xor
or
cld
add
sub
iret
sub
or
push
jg
call
out
xchg
ds
mov
mov
retf
cmp
mov
mov
retf
fcomi
or
jne
inc
imul
pusha
inc
repz
mov
pop
xor
repz
addr16
(bad)
ficomp
fdivr
push
dec
add
(bad)
xchg
adc
jae
fcomp
cmps
in
cmps
mov
xchg
ret
cmp
cmp
sub
fidivr
cmp
pop
sbb
test
xor
sub
xor
xchg
arpl
popa
fsub
(bad)
ja
stos
gs
and
xchg
(bad)
or
into
xchg
mov
push
sahf
or
mov
adc
sbb
mov
pop
inc
cmp
jmp
mov
imul
iret
loop
pop
mov
push
pusha
mov
mov
sub
mov
inc
daa
jl
dec
and
inc
imul
push
shr
(bad)
dec
aaa
sti
int
jmp
sub
jbe
mov
sub
cmp
popf
xor
jae
pusha
arpl
loopne
mov
outs
repnz
jp
add
lea
sbb
pop
ja
loop
cmp
int
mov
cdq
dec
lds
jmp
add
imul
fld
in
push
sbb
jp
pop
ja
push
push
enter
ficom
xchg
jne
pop
mov
jae
dec
shr
fwait
scas
nop
mov
fs
aas
std
dec
mov
mov
push
jl
xchg
xor
mov
jb
xchg
sahf
push
jmp
jb
stos
gs
and
xor
push
lds
movs
add
dec
add
or
jle
(bad)
cmp
dec
retf
fidiv
and
adc
xor
push
and
(bad)
sbb
mov
sub
adc
and
pop
jmp
sbb
sbb
adc
and
sub
sub
(bad)
js
and
xor
mov
and
dec
sbb
push
(bad)
mov
sbb
mov
push
push
mov
ret
mov
nop
and
cmp
and
mov
shl
inc
or
push
and
cmc
dec
mov
in
call
cmp
test
xor
cmp
or
ja
stos
inc
push
in
into
fs
(bad)
pusha
mov
inc
xchg
in
int
fild
in
xor
dec
popf
pop
mov
add
mov
cmp
dec
arpl
inc
and
hlt
sbb
push
inc
fsub
jmp
jns
push
mov
mov
xchg
arpl
test
sub
cmp
push
fs
test
xchg
add
jge
xor
pop
and
in
sub
ds
sbb
rol
mov
cwde
cld
push
cmp
(bad)
in
dec
inc
test
retf
fcomp
ins
(bad)
fstp
ja
dec
adc
(bad)
push
ror
call
add
dec
mov
add
(bad)
(bad)
icebp
test
lds
std
shr
movs
inc
arpl
sbb
push
push
loop
push
jbe
pop
push
fild
adc
cld
retf
aaa
fisubr
inc
xchg
jp
(bad)
push
push
cmp
sbb
push
adc
sbb
mov
add
inc
(bad)
ins
icebp
mov
fldz
int3
mov
add
mov
test
aad
test
repz
stos
mov
adc
test
rol
sub
cmp
lods
push
out
mov
xor
push
(bad)
ins
ins
sub
(bad)
int
inc
or
xchg
push
dec
adc
das
and
xchg
in
mov
in
push
lds
enter
add
ins
dec
pop
out
cs
das
and
mov
dec
into
fnsave
or
aas
imul
daa
mov
push
xchg
inc
dec
les
shl
pop
xchg
mov
call
push
imul
popa
aaa
adc
pop
adc
mov
outs
jns
cmp
and
or
aaa
xchg
ret
cmp
mov
into
mov
call
push
(bad)
mov
popf
cmp
sub
cmp
jecxz
jmp
loopne
repz
and
add
push
inc
or
icebp
xchg
cmps
fwait
movs
call
add
push
xchg
mov
lock
loope
mov
push
mov
sti
scas
push
jle
not
pop
in
xchg
sbb
sbb
or
push
mov
call
push
sbb
pop
aaa
mov
js
fisttp
pop
push
add
pusha
push
sub
or
xor
adc
and
add
(bad)
enter
xchg
ss
je
cmp
ins
mov
push
dec
jmp
enter
dec
sub
inc
aas
pop
push
mov
cmp
rcl
scas
pushf
cmp
pop
push
ins
sbb
push
dec
push
pop
pop
fisub
sahf
xor
cmc
cmp
retf
fs
test
jg
pop
mov
pop
fadd
(bad)
mov
shl
and
retf
pop
(bad)
inc
push
icebp
mov
addr16
xor
aam
mov
add
cwde
jg
leave
clc
xchg
stos
out
lahf
jbe
sbb
sti
aam
mov
xchg
mov
sar
mov
and
mov
mov
mov
outs
nop
pop
or
pusha
jg
lods
mov
inc
dec
mov
sti
push
mov
or
cli
imul
sbb
adc
push
ret
je
push
cmp
mov
sbb
not
(bad)
ffree
pushf
hlt
imul
jge
xchg
adc
jb
mov
shl
(bad)
push
pop
call
(bad)
or
jle
xchg
test
outs
(bad)
sub
mov
inc
pop
nop
lods
mov
(bad)
rcr
icebp
call
das
mov
test
and
dec
jmp
ror
(bad)
mov
xor
mov
inc
pusha
jle
mov
in
scas
or
in
or
push
mov
pusha
pop
sbb
jg
outs
and
iret
loop
push
push
enter
inc
shr
xchg
xor
or
loopne
out
call
push
push
inc
dec
mov
dec
dec
xchg
cli
js
push
or
xlat
mov
mov
ins
cdq
ja
mov
iret
out
xor
push
cmps
cmp
mov
mov
sbb
xchg
pop
out
push
fs
ins
hlt
jecxz
aam
movs
int3
out
push
aad
shr
repnz
loop
out
add
daa
pop
and
in
push
xlat
sbb
mov
sub
jp
pop
sbb
(bad)
mov
rcr
or
(bad)
push
xchg
sbb
lods
daa
pop
add
mov
mov
jmp
mov
adc
rcl
fsub
mov
jmp
xor
ja
test
test
outs
fbstp
or
push
ins
aas
sub
sbb
or
popa
nop
call
js
lods
push
add
test
int3
cmp
imul
mov
adc
mov
xlat
pop
(bad)
jbe
cmp
aam
dec
sub
or
sub
jg
mov
dec
mov
in
pop
(bad)
dec
inc
adc
or
fmul
push
test
sar
push
inc
pop
jo
mov
test
mov
stos
lods
jae
cmp
leave
xor
inc
adc
cmps
mov
aaa
cdq
inc
sub
repnz
lahf
(bad)
jne
loope
mov
ins
adc
inc
rol
jnp
xor
(bad)
aam
ins
mov
ret
mov
sub
xchg
movq
push
bound
add
adc
cmc
sti
adc
inc
jle
rol
test
loopne
stc
repnz
and
adc
(bad)
rep
fstp
sbb
data16
iret
xor
js
cmp
inc
mov
into
loope
es
sub
add
ffreep
les
jns
iretw
das
sbb
(bad)
int3
cmps
or
jae
mov
mov
sub
adc
xchg
jns
add
push
and
sahf
sbb
mov
(bad)
cmp
jb
ret
popa
aam
es
pop
adc
inc
lock
add
inc
xchg
fcmovbe
test
push
inc
jae
pop
mov
ja
bound
in
(bad)
mov
jmp
scas
sub
xlat
inc
sbb
ja
jmp
sbb
dec
in
bnd
int
shr
imul
addr16
inc
js
adc
mov
rol
add
hlt
jl
push
retf
(bad)
push
and
add
push
mov
sub
sti
xor
inc
jmp
inc
adc
mov
jno
xchg
dec
xor
jp
sbb
jns
int
jmp
js
inc
mov
repz
sub
iret
les
call
jmp
js
cmp
xchg
fs
clc
fstp
repz
repz
push
(bad)
js
jns
add
adc
inc
stos
xchg
clc
sub
push
popa
mov
xor
ins
ds
cmp
outs
xlat
jmp
pushf
mov
scas
ins
repnz
xchg
sub
and
sbb
adc
or
push
sbb
push
mov
mov
cmp
sti
mov
jmp
mov
aam
fldcw
push
inc
add
cld
or
mov
rep
push
cmps
ret
js
add
cmp
fdivp
sbb
cmps
bound
inc
jbe
ds
xchg
jl
pop
or
mov
ja
sahf
xchg
bound
cmc
rcr
aas
mov
cwde
jg
sbb
or
push
aam
cmp
cmps
arpl
xchg
in
mov
sti
sti
sbb
push
arpl
mov
xor
rcr
(bad)
mov
cmps
push
nop
mov
mov
int
xor
or
dec
fs
outs
imul
arpl
out
and
cmp
add
push
jle
(bad)
imul
mov
xchg
dec
xor
in
(bad)
ja
and
or
cmpxchg
fwait
sub
lods
cmp
cmp
rol
imul
jae
test
loop
js
xlat
pusha
int
jp
and
add
pop
sahf
imul
retf
xchg
cmp
outs
ins
or
jbe
mov
and
gs
stc
clc
pop
jmp
dec
or
and
xchg
out
push
xor
add
lods
cli
js
mov
push
adc
data16
addr16
stc
jmp
bound
pop
icebp
mov
dec
call
xchg
mov
dec
add
sti
dec
repz
pop
lds
pop
or
inc
repz
pusha
jmp
mov
fstp
retf
test
adc
inc
push
ror
adc
and
jmp
ret
lea
call
gs
leave
sbb
aam
(bad)
mov
jbe
or
lea
lahf
hlt
sbb
xor
dec
sbb
mov
lods
rol
shl
call
leave
adc
ss
pop
inc
sub
mov
mov
sbb
lds
sbb
hlt
jnp
and
add
js
es
outs
imul
test
test
cmps
dec
stc
inc
clc
call
cmp
dec
ss
movs
add
sbb
sbb
jbe
push
dec
xchg
shl
sbb
pop
repz
cmp
push
aad
stos
mov
icebp
out
sar
out
mov
das
ins
jb
div
call
cwde
outs
mov
jo
xor
cwde
movs
adc
jmp
jo
fwait
xchg
inc
mov
das
xchg
xchg
cld
xor
jmp
adc
cmp
or
mov
jno
les
sti
fiadd
imul
cmp
xchg
add
cmp
aaa
xchg
push
inc
pop
and
ret
jno
or
and
pop
jb
adc
icebp
cs
shr
fistp
mov
test
jecxz
iret
(bad)
sbb
int3
fstp
out
adc
jmp
pop
xchg
call
mov
retf
lock
loopne
mov
out
int
jmp
cmp
(bad)
das
fiadd
aaa
mov
out
inc
adc
mov
cmp
adc
lahf
(bad)
rcl
jg
popa
icebp
inc
cld
imul
jo
test
pushf
push
xor
xor
test
(bad)
adc
or
adc
lock
pop
hlt
mov
push
int3
sbb
and
xchg
out
bound
leave
or
add
jmp
and
mov
(bad)
div
cmp
jnp
ret
imul
sar
pop
sub
pop
js
or
out
add
dec
mov
int
stos
fstp
push
add
rcl
in
mov
retf
cmp
push
xor
jb
sub
pop
mov
int
in
xor
int
ret
mov
push
fld
xor
mov
cmp
aad
mov
pop
inc
inc
(bad)
enter
test
test
loope
mov
adc
repnz
pop
test
mov
adc
add
arpl
std
dec
or
xor
pop
fsubp
pushf
adc
xchg
sahf
movs
mov
pop
mov
xchg
loop
imul
jecxz
xchg
push
mov
imul
mov
cdq
scas
pop
(bad)
sbb
and
mov
push
xchg
js
ret
mov
and
cdq
shr
stos
inc
ss
bound
cmps
inc
inc
mov
int3
jno
and
cmc
dec
sbb
sahf
sub
push
retf
test
fs
mov
aam
call
push
in
addr16
jbe
and
lods
aam
or
outs
push
shr
mov
ins
loopne
jge
xchg
ret
int3
(bad)
cli
sub
dec
xchg
add
imul
imul
ja
sti
hlt
mov
sub
adc
adc
sbb
(bad)
cli
mov
aas
add
adc
push
push
es
retf
dec
fsubr
fisttp
mov
pop
stc
or
xchg
shl
popa
pop
and
xlat
inc
sahf
sub
rcl
sti
imul
xor
cli
adc
(bad)
cmp
push
fcom
cdq
lea
jnp
(bad)
sbb
jl
inc
jno
cdq
dec
add
or
push
cld
add
jno
icebp
sbb
sub
cmp
xor
inc
xor
push
push
movs
rol
loopne
xchg
cmp
xor
jno
ds
retf
retf
and
movs
dec
and
inc
ja
push
(bad)
mov
scas
xchg
jl
call
ror
sbb
inc
and
rcl
cmp
pop
scas
xor
cmp
call
mov
inc
or
test
lds
arpl
stos
popa
inc
add
adc
scas
mov
stos
fild
cmps
inc
sub
ins
dec
fs
xchg
jecxz
add
mov
ja
fs
fistp
iret
out
ins
shr
mov
ficomp
xor
or
jle
ins
icebp
pop
or
cld
inc
jbe
or
or
bound
shl
xchg
pop
std
leave
cli
mov
retf
xchg
in
mov
lods
aad
mov
int3
das
or
loop
out
repz
out
mov
cmp
pop
inc
mov
lahf
movs
out
mov
mov
int
dec
std
imul
jmp
call
shl
(bad)
cmp
inc
adc
repnz
mov
mov
add
xor
pop
ret
stos
pop
mov
cdq
push
mov
sub
imul
inc
jne
js
call
sbb
jecxz
push
(bad)
mov
inc
and
push
in
or
push
popf
movs
add
inc
arpl
pop
jmp
dec
outs
pop
dec
or
push
pop
das
popa
sti
pop
dec
movs
(bad)
in
sub
mov
and
out
push
popf
or
cmp
retf
fiadd
int
hlt
mov
sub
dec
in
clc
cmc
mov
cwde
xchg
or
and
outs
cmp
fdiv
mov
gs
daa
ja
or
jle
ficom
jge
and
stc
(bad)
pop
xchg
out
dec
cmps
int3
mov
and
out
mov
mov
(bad)
icebp
sbb
cmps
jns
push
dec
cmp
dec
neg
ror
ret
cli
push
sub
adc
add
jbe
iret
cmp
(bad)
mov
xor
lods
in
shl
mov
xor
jl
jecxz
into
sbb
and
add
push
out
xchg
cmps
jge
dec
mov
ficom
inc
ins
mov
(bad)
or
cli
aaa
sub
sbb
stc
data16
adc
adc
(bad)
aam
nop
inc
dec
jge
movs
cmps
ret
mov
(bad)
jge
pop
clc
and
push
xchg
sbb
jns
data16
or
sub
(bad)
inc
or
iret
pop
dec
ret
ja
sub
xchg
test
jns
pusha
adc
call
inc
sti
pop
sbb
mov
sbb
fldcw
je
ret
std
bswap
fst
sbb
push
xchg
or
sub
and
mov
jmp
jg
lds
cs
push
popf
sti
test
sbb
sub
stc
mov
iret
popa
dec
mov
xchg
push
ss
loop
js
(bad)
cmc
pop
and
push
jecxz
lea
xchg
(bad)
lahf
sahf
xor
cmp
jecxz
mov
mov
cmp
js
adc
sub
ja
int3
leave
sbb
mov
sahf
or
scas
jl
mov
jp
ret
mov
into
mov
icebp
jbe
mov
in
(bad)
mov
xor
(bad)
les
jmp
mov
inc
(bad)
in
mov
fwait
popf
scas
scas
retf
adc
push
ds
xor
push
lock
jb
addr16
ins
mov
int3
dec
jmp
int
aad
out
pushf
jmp
popf
inc
pop
mov
mov
dec
jl
add
imul
sti
in
test
push
jmp
adc
addr16
outs
pop
ret
jne
dec
push
rcr
mov
bound
push
cli
push
ins
adc
jne
mov
jge
ins
int3
cld
add
inc
loope
or
in
retf
and
pushf
xchg
mov
xchg
mov
stc
xor
or
mov
xchg
cs
xchg
mov
scas
dec
dec
or
test
fidiv
xchg
shr
dec
inc
ds
dec
jecxz
das
retf
inc
pop
aad
xor
stos
push
mov
int
rcr
ret
stos
xchg
cld
adc
stos
rol
call
fstp
pop
in
dec
jo
inc
out
popa
jp
jge
int
cld
xor
jae
sbb
and
aam
pop
clc
push
pmullw
retf
iret
loopne
fwait
call
add
bound
shl
xor
fadd
icebp
jmp
mov
xchg
add
push
test
into
xchg
or
int
fs
fld
mov
mov
push
int3
pusha
or
jmp
inc
mov
pop
daa
push
inc
enter
ffreep
shl
jbe
pop
mov
xchg
mov
pop
cmp
in
std
les
pop
test
sub
cdq
inc
push
cmps
loope
mov
ins
shl
jnp
inc
mov
loopne
jmp
fwait
test
mov
jno
outs
inc
push
add
push
inc
fst
lods
shl
mov
icebp
add
rcr
daa
jmp
ficom
cld
adc
cdq
sub
mov
cmps
inc
jae
sub
xchg
bnd
in
mov
loope
nop
retf
push
mov
in
outs
pop
adc
sub
cld
lds
mov
mov
cmps
adc
pop
popa
push
retf
adc
mov
cmp
pop
(bad)
and
jns
mov
dec
or
out
jbe
push
pop
retf
xor
add
add
mov
fs
jl
and
leave
mov
enter
mov
retf
jge
sub
or
mov
dec
not
ja
jecxz
aaa
pushf
push
ds
xor
aas
pop
add
mov
dec
cdq
lods
lods
imul
adc
test
repnz
inc
mul
sbb
mov
sbb
mov
dec
aam
lods
xor
push
ret
inc
pop
adc
popf
xchg
(bad)
sub
ror
stc
add
bound
dec
xchg
jecxz
inc
pusha
inc
jecxz
inc
pop
adc
mov
push
imul
adc
sub
ins
mov
fisttp
daa
popa
lock
movs
(bad)
or
sbb
sbb
xlat
scas
mov
push
lods
add
pop
xor
jnp
mov
sbb
aas
jl
inc
inc
(bad)
xchg
cmp
inc
test
xor
into
sbb
enter
dec
cdq
mov
xchg
test
add
dec
into
fild
cmp
mov
ins
xchg
ds
cld
push
in
push
adc
sbb
jnp
inc
iret
test
sbb
call
xor
cwde
or
jl
call
ror
jl
std
jnp
add
sbb
call
dec
scas
xor
int3
outs
mov
add
or
mov
and
mov
std
cmps
mov
mov
jecxz
ss
mov
(bad)
repnz
mov
data16
outs
fcom
fdiv
add
ins
mov
push
cmps
call
mov
les
sbb
push
bound
clc
(bad)
adc
int3
ins
push
push
mov
xchg
jae
std
fwait
cmps
adc
sub
shl
(bad)
jle
add
cwde
clc
xor
lahf
(bad)
cwde
fld
stos
sub
mov
dec
unpcklps
rol
cmps
or
lahf
adc
movs
add
xchg
pop
icebp
sbb
mov
fcomi
bound
ss
adc
sub
cld
push
push
ins
shl
or
and
movs
retf
(bad)
cdq
aas
inc
test
jno
imul
into
adc
mov
push
jp
adc
sub
inc
push
xchg
or
(bad)
mov
test
ss
xchg
data16
cli
cvtpi2ps
mov
push
push
xchg
(bad)
sbb
dec
(bad)
xchg
mov
or
xor
in
jmp
lods
mov
jbe
mov
stos
mov
or
add
cmp
movs
inc
cmp
jmp
add
and
sahf
sahf
fadd
push
repz
xchg
retf
mov
out
mov
jae
imul
mov
push
aad
pop
add
dec
outs
pop
xor
pop
jne
jmp
sbb
add
shl
movs
mov
cs
pop
outs
dec
ret
xchg
adc
mov
gs
dec
cmp
cmp
fsin
loop
pop
mov
pop
nop
jne
jmp
mov
dec
jg
lea
inc
xchg
inc
(bad)
test
mov
push
shr
fcom
pushf
lods
lods
sub
adc
lahf
ret
mov
push
add
or
in
cmp
in
jl
add
(bad)
mov
jp
jmp
cmc
pop
bound
add
cdq
mov
inc
mov
dec
pop
scas
push
ins
mov
fs
add
adc
rol
int3
mov
inc
push
mov
pop
stos
(bad)
xchg
or
push
retf
and
test
jle
fld
cmp
std
in
outs
jecxz
jmp
jne
lahf
sub
jmp
jb
movs
dec
repnz
ins
sub
mov
or
test
inc
mov
mov
out
inc
cli
lea
push
jo
out
cmc
or
adc
mov
retf
iret
adc
sbb
enter
cld
test
jg
or
pop
pop
jl
cmp
jnp
cdq
movs
stos
push
cld
xor
aad
clc
stc
mov
sub
sbb
mov
adc
sahf
in
fdivrp
pop
iret
lds
jle
test
and
xor
lods
jecxz
or
dec
jle
adc
test
xor
(bad)
fisub
popf
lahf
jmp
(bad)
je
mov
popa
and
popf
out
js
push
repz
es
iret
adc
lahf
jo
dec
icebp
inc
les
scas
shr
xor
pop
(bad)
leave
mov
push
cmp
push
mov
into
fst
cld
mov
xchg
cmp
aad
mov
fsubp
push
mov
push
retw
fild
mov
mov
in
and
cmp
inc
nop
nop
(bad)
mov
mov
repz
pop
mov
rcl
mov
fidivr
mul
movs
fmul
xchg
or
dec
js
sahf
or
jp
sbb
scas
enter
call
dec
fistp
outs
add
cmp
inc
(bad)
outs
and
fadd
std
fst
fidiv
sbb
cmp
jmp
jmp
test
cs
dec
mov
icebp
jae
mov
clc
aaa
out
pushf
leave
repz
adc
test
sub
push
pop
sbb
clc
outs
enter
in
jmp
mov
scas
sbb
pop
sub
repnz
ins
ficomp
inc
cmp
xor
dec
jno
adc
adc
leave
push
iret
scas
ret
mov
into
push
fdiv
retf
xchg
xchg
pop
inc
icebp
jecxz
mov
mov
arpl
push
push
xor
std
mov
push
jo
push
add
mov
xor
aaa
push
jmp
pusha
cmps
adc
and
ins
inc
and
loop
and
pop
lock
or
test
and
sbb
jb
xlat
retf
sbb
rcr
sub
add
in
push
call
mov
jmp
or
or
test
adc
cli
pop
or
sti
in
scas
mov
add
or
ja
xchg
sub
inc
push
aam
daa
sub
aas
ins
cmp
sbb
mov
fsub
sbb
jne
es
int
ds
fld
mov
sbb
jl
loope
lods
test
push
(bad)
in
out
cmp
enter
out
adc
cld
push
xchg
jb
sub
imul
xchg
cld
push
jge
cmps
push
mov
inc
xor
rol
nop
out
pop
fsub
push
lahf
sbb
inc
and
jns
sbb
jle
loop
add
and
loopne
push
test
lods
jne
cmp
dec
xchg
xor
test
xor
add
test
mov
imul
ins
mov
xor
nop
xchg
cwde
xchg
jecxz
and
mov
mov
jge
shr
rcr
jns
xchg
sbb
das
mov
mov
mov
fisub
pop
adc
das
das
mov
jmp
arpl
pop
ins
mov
sbb
sub
sub
aas
aam
fimul
ror
clc
xchg
push
xchg
mov
pop
cmp
scas
sahf
xor
in
dec
dec
jge
adc
sti
lods
mov
cmp
adc
lds
sbb
pushf
pop
cmps
fcmovbe
inc
fwait
pop
popf
repz
mov
ins
inc
mov
adc
and
jg
loopne
jae
xchg
inc
pop
or
enter
shl
mov
enter
mov
adc
adc
sti
push
or
xchg
icebp
jge
push
push
int
mov
test
mov
cmp
std
add
cdq
pop
adc
movs
cmc
lods
fidiv
and
xchg
push
movs
push
xchg
dec
xor
dec
aad
sahf
fadd
rcr
cmp
inc
ins
xor
push
outs
aam
inc
sub
(bad)
loope
mov
sbb
test
aaa
sub
icebp
push
iret
cwde
leave
jno
(bad)
sub
pop
bnd
fdiv
call
xchg
inc
hlt
push
push
push
out
sbb
data16
cmps
ss
test
fnstenv
add
jl
sub
cmp
xor
or
ja
call
sti
outs
out
pop
das
xor
outs
(bad)
int3
stos
adc
xchg
outs
push
jp
sbb
dec
cs
test
pop
js
xor
sbb
pop
dec
or
adc
(bad)
jne
jno
inc
xchg
sbb
xor
pushf
leave
cmp
pushf
mov
ror
mov
dec
sahf
stc
mov
clc
retf
xlat
mov
and
mov
aad
dec
xlat
jbe
xlat
in
push
ror
xor
imul
add
outs
mov
stos
call
cmp
sahf
and
push
loop
cld
test
and
push
nop
mov
std
sbb
call
jg
or
inc
jp
daa
test
dec
nop
inc
sbb
add
mov
les
dec
adc
xchg
jle
das
lods
shl
scas
mov
mov
push
and
(bad)
sar
cld
jecxz
lds
test
cmp
xchg
mov
push
cwde
xchg
arpl
ins
mov
icebp
xor
pushf
gs
and
leave
cmp
in
fisttp
jp
call
stc
adc
movs
sbb
std
daa
add
mov
cmps
je
xor
nop
int
lods
out
xchg
sahf
mov
test
or
inc
xor
or
jbe
out
xlat
mov
aad
fwait
les
pop
pop
das
push
(bad)
movs
cmc
inc
push
(bad)
pop
movs
mov
adc
inc
lds
lock
rcl
int3
or
or
mov
repnz
and
jecxz
out
and
xchg
push
les
test
icebp
(bad)
mov
sub
xchg
fadd
mov
ins
and
fcomp
mov
aad
ret
mov
test
push
aas
xchg
jmp
or
dec
clc
loop
jo
mov
push
movs
cmp
dec
shl
aaa
fwait
pushf
mov
mov
jmp
jb
movs
cmp
mov
lea
repnz
fs
es
in
jns
out
fimul
dec
adc
xchg
pusha
ds
aad
or
aaa
and
jp
jno
or
aad
mov
data16
mov
addr16
movs
mov
inc
popf
shl
jle
adc
sbb
out
test
mov
stc
inc
retf
sbb
cmps
add
lea
jmp
in
or
inc
addr16
add
icebp
in
or
jae
stos
cmc
pop
pop
sub
cs
ror
xlat
es
pop
jb
sub
or
iret
and
dec
mov
dec
int
loopne
sub
mov
ds
hlt
inc
inc
in
mov
cdq
dec
jle
or
gs
jle
aaa
movs
push
or
and
add
dec
push
nop
inc
pop
mov
push
push
lods
mov
jns
and
cli
mov
mov
fsubr
mov
jae
outs
add
jp
lods
mov
(bad)
add
test
push
inc
xchg
push
fistp
xchg
cmps
scas
pop
mov
pop
fstp
mov
add
shr
test
cmc
cmps
ins
cmp
rcr
sbb
pushf
movs
xchg
mov
mov
inc
mov
pop
pop
cli
aas
or
push
mov
jb
push
ror
mov
stos
mov
xchg
xchg
and
stos
idiv
xchg
imul
aam
pop
xor
mov
and
cmp
or
xor
jle
jae
ret
xor
mov
lds
add
cmp
inc
xor
cs
fisttp
pop
cmc
dec
push
dec
add
or
xor
push
pandn
and
popa
or
sahf
sub
pop
pop
sbb
adc
cmp
sahf
mov
lods
jbe
outs
out
rol
and
hlt
sbb
push
aam
mov
dec
and
dec
leave
sar
mov
(bad)
inc
into
dec
mov
inc
or
movs
sub
jns
inc
and
pop
fiadd
jno
adc
dec
xchg
lidtd
sub
cmp
dec
jle
xor
movs
ins
jmp
stos
dec
sub
fisubr
enter
sbb
ds
or
int3
or
xor
and
xchg
push
add
push
in
aad
mov
jge
test
aam
fsub
mov
mov
jg
or
add
in
push
cmps
(bad)
mov
dec
inc
mov
jle
jno
inc
jno
and
ins
clc
jg
movs
sub
xchg
xchg
cmc
jo
je
inc
sub
push
xlat
lea
cli
pop
adc
cmps
adc
popa
in
and
lods
fsubr
int
aas
fisub
shl
xchg
in
pop
ds
push
fwait
out
pop
iret
gs
leave
daa
xchg
pop
je
fdivr
in
sbb
bound
outs
add
pop
jnp
popa
xor
ret
adc
cmps
test
test
or
inc
xchg
cmp
dec
jmp
push
popf
fbstp
loopne
xor
jmp
sbb
push
push
xchg
call
push
sub
mov
cmp
xchg
add
pop
add
mov
movs
and
pop
outs
sbb
icebp
scas
stos
scas
xchg
and
adc
imul
lds
mov
loopne
fstp
popa
jnp
shl
scas
in
add
movs
pop
mov
jmp
sbb
push
add
call
xchg
iret
mov
or
repnz
push
test
cmc
mov
jmp
popa
jbe
icebp
or
cwde
and
cmps
or
pop
jno
ret
xchg
xor
repz
mov
repnz
punpcklwd
ror
push
sbb
mov
cmp
stos
pop
arpl
(bad)
sbb
mov
or
je
inc
fwait
(bad)
adc
call
mov
mov
xchg
stos
cwde
dec
sub
pop
pop
jl
mov
pop
xchg
cmps
adc
iret
ja
add
xchg
out
movs
xchg
movs
dec
xchg
xchg
xchg
sub
mov
mov
sahf
mov
scas
call
mov
imul
out
jns
pop
ret
ficom
add
or
adc
mov
dec
(bad)
arpl
stc
in
daa
sbb
add
sbb
mov
outs
sbb
push
ror
fisttp
push
out
adc
mov
mov
xchg
mov
retf
daa
lds
pop
lea
push
jp
enter
rol
push
stc
inc
add
jl
movs
fadd
cdq
sub
sbb
jb
push
or
xchg
and
push
rcl
pop
enter
clc
enter
pop
fstp
push
adc
mov
xor
sbb
push
aas
out
push
jbe
mov
jb
xor
scas
inc
bound
hlt
xor
push
jp
movs
imul
cmp
sub
push
das
popa
iret
mov
out
mov
xchg
push
not
hlt
sbb
js
dec
fisttp
jae
lods
pop
cdq
xchg
inc
fst
dec
inc
inc
cmp
test
stos
(bad)
dec
(bad)
rol
jmp
lods
rdtsc
xor
sbb
pop
js
xor
mov
mov
and
mov
xchg
out
push
and
mov
add
scas
ins
and
push
push
ret
(bad)
and
mov
aas
adc
adc
fwait
nop
loope
popa
pop
(bad)
xor
sti
inc
call
or
sub
push
sbb
pusha
inc
out
jge
js
es
lods
daa
inc
mov
xchg
pop
loope
mov
in
jg
pop
sti
push
jns
fidiv
loope
cmp
lock
mov
retf
ja
add
dec
and
inc
out
int
xchg
mov
or
fisttp
jl
std
jl
cmp
jle
push
push
outs
dec
pop
sub
scas
ret
pop
mov
jnp
push
jl
dec
and
lds
(bad)
cmc
adc
mov
pop
pop
xchg
sub
mov
fwait
popf
and
adc
inc
iret
add
scas
mov
or
or
or
or
imul
cmp
mov
mov
cmp
data16
xor
xor
and
stos
mov
scas
ins
inc
gs
int3
jo
mov
mov
mov
inc
je
hlt
fdivr
jg
jns
neg
ins
ret
aas
mov
lea
dec
jp
(bad)
in
push
mov
push
jns
inc
(bad)
scas
or
mov
lods
lds
rcr
push
xor
sub
xor
es
xchg
xlat
sub
add
jge
dec
dec
stos
cdq
mov
and
mov
(bad)
enter
(bad)
xchg
lock
and
pop
jle
xchg
shl
pop
jge
adc
shl
sbb
push
mov
test
add
xor
mov
mov
xchg
jmp
in
cmp
add
xchg
shr
inc
les
mov
pop
pop
jp
or
cmp
fbld
and
add
pop
cdq
jmp
xchg
popa
jl
stc
leave
loopne
dec
xchg
pop
outs
mov
adc
sub
push
mov
dec
jne
fst
ret
mov
les
push
repnz
dec
out
ror
mov
js
xchg
lods
rol
push
aam
jg
inc
(bad)
mov
push
pop
push
ss
clc
dec
sub
jecxz
adc
dec
repz
xor
lds
xchg
jnp
jns
cmp
pop
pop
aaa
gs
push
hlt
dec
mov
inc
dec
sub
jno
cmps
jnp
repz
fs
ins
arpl
mov
inc
xor
ror
mov
add
jp
or
xor
(bad)
pop
or
arpl
add
ret
adc
adc
mov
jo
(bad)
cmps
or
(bad)
or
push
sub
add
mov
(bad)
shr
jmp
lock
mov
div
mov
call
pop
jg
lods
outs
popf
in
lods
xor
xchg
nop
mov
call
xchg
add
mov
pop
stos
cdq
jnp
adc
and
inc
jge
aad
inc
mov
lea
mov
jp
dec
mov
in
adc
mov
es
xlat
retf
rep
(bad)
xchg
sbb
sbb
jnp
sahf
sub
sub
sti
cdq
fstp
test
mov
push
xor
nop
jne
add
leave
xor
jb
adc
cs
adc
push
adc
dec
cli
sbb
pushf
mov
icebp
clc
imul
pop
outs
adc
push
aad
ins
loop
test
aaa
adc
xor
lds
pusha
add
xor
push
inc
pushf
aaa
aam
ret
add
mov
imul
inc
fiadd
movs
shl
fisttp
loop
add
pop
mov
adc
cmp
lahf
frstor
sub
push
out
in
jg
out
or
mov
adc
add
aaa
nop
xchg
in
xchg
(bad)
pop
fisttp
add
cmp
sti
stc
lock
(bad)
int
cmp
call
push
(bad)
iret
and
add
int3
and
push
repnz
fcmovnb
mov
fisubr
lahf
xor
std
pop
fistp
(bad)
jl
je
xlat
(bad)
adc
in
repz
add
xor
push
mov
cmp
and
jnp
inc
(bad)
mov
mov
sbb
jecxz
and
gs
movs
in
dec
dec
sbb
adc
push
outs
ins
mov
or
test
int3
cmp
jp
mov
ins
sbb
jg
clc
jmp
nop
pop
mov
push
xchg
out
pop
pop
bound
outs
repz
pop
add
fdivr
call
jae
and
enter
scas
xchg
repnz
inc
cmp
inc
mov
cdq
mov
sbb
not
pushf
je
mov
outs
mov
jne
cdq
dec
shl
inc
dec
sub
or
repz
adc
and
js
jne
or
jmp
ret
movs
xchg
pop
pop
outs
dec
mov
or
test
and
jnp
inc
loope
xchg
push
sbb
pop
sbb
dec
xchg
adc
ja
xchg
push
xor
or
inc
ds
aam
push
test
add
cmp
jp
cmp
dec
test
out
jp
inc
in
xor
push
push
ror
pop
sbb
push
int3
cmp
push
cmc
mov
xor
add
es
(bad)
retf
scas
rol
and
sbb
in
mov
push
(bad)
in
ins
shr
movs
out
retf
fucomi
fadd
leave
popf
add
test
imul
jmp
lock
mov
retf
cmp
pusha
imul
or
mov
sub
mov
push
ret
aas
mov
jle
cmp
pop
pop
dec
or
and
je
loope
ja
cmp
xor
adc
fdiv
in
jecxz
or
cmp
test
mov
jo
int3
xor
loop
mov
xchg
push
sbb
not
xchg
jmp
or
int3
ds
dec
and
pop
cmc
jbe
mov
int3
adc
sub
jg
mov
rdmsr
hlt
rcl
stos
mov
pop
mov
mov
std
mov
mov
test
push
cmp
adc
inc
ret
rcl
jecxz
lea
repz
jp
cmp
jmp
mov
mov
int
cdq
add
mov
nop
sub
or
inc
jb
ss
or
pop
cmp
xor
fdiv
cmp
push
nop
addr16
mov
shl
loope
mov
outs
(bad)
push
outs
push
(bad)
sbb
imul
bound
push
cwde
cmp
cwde
sub
sbb
xor
fsubr
mov
pop
cmps
pop
arpl
repz
mov
xchg
in
or
lea
pop
sub
push
dec
frstor
push
int
cmps
mov
arpl
add
sbb
test
psrld
mov
gs
jmpw
rcr
movs
jnp
aam
pop
inc
inc
jb
dec
hlt
xchg
adc
sub
mov
xchg
adc
pop
adc
movs
or
shl
jp
xor
and
into
adc
add
int3
mov
lods
imul
cli
push
cwde
mov
jecxz
sbb
cmp
xchg
push
mov
or
sbb
dec
lods
xor
ins
xchg
ins
movs
lods
mov
bound
pop
shl
cmps
sbb
retf
std
repz
and
out
ins
jecxz
xchg
or
or
addr16
xchg
out
mov
or
jae
jne
inc
and
xchg
jge
lahf
ja
idiv
mov
jne
fidiv
lods
aas
ins
stos
rcl
addr16
movs
ror
and
mov
int3
add
mov
and
mov
pusha
push
pop
dec
ss
push
xchg
xor
popa
cmp
imul
std
daa
into
jno
mov
imul
aam
mov
mov
jmp
jmp
into
jo
mov
sub
add
jmp
add
adc
sti
je
jl
stos
mov
je
mov
enter
test
loopne
mov
mov
sub
sbb
enter
jne
dec
leave
push
rcl
and
pop
or
adc
sbb
icebp
fcmovnb
mov
xor
addr16
mov
das
call
int3
mov
push
daa
stos
lds
add
cmp
lock
dec
fstp
scas
or
or
jae
xchg
cmp
std
push
jns
shl
adc
jae
mov
sbb
mov
mov
lock
sbb
mov
jmp
mov
or
idiv
mov
push
xchg
or
fnstcw
or
call
jle
or
pop
and
ffreep
mov
test
xchg
push
pop
hlt
lock
xor
int3
sub
js
xor
mov
jae
sahf
pop
and
cwde
(bad)
and
xor
rcr
pop
aaa
cmps
test
push
cmc
cmp
shl
outs
cmp
mov
jmp
mov
mov
shl
in
imul
cdq
push
nop
jo
push
mov
cmp
ds
and
ja
jbe
int3
and
sahf
mov
xchg
sbb
push
or
test
rol
cmp
ret
ret
xor
lahf
push
gs
cmc
push
out
imul
loope
dec
gs
pxor
nop
mov
mov
sbb
xchg
stos
cwde
or
or
rcr
or
ret
icebp
aas
mov
(bad)
gs
xor
outs
test
rcl
dec
push
jg
test
add
test
fidiv
sbb
imul
push
fdivr
ret
pop
xchg
xchg
scas
xor
push
icebp
popa
shl
movs
movs
pop
xchg
pop
fisub
adc
xor
cmp
jne
add
js
add
xor
arpl
sub
aaa
fsub
and
sub
fmul
fs
std
jmp
sub
inc
jns
inc
pop
mov
cmps
mov
xor
push
add
pushfw
call
add
retf
adc
adc
seto
mov
push
pop
inc
mov
xchg
dec
xchg
pop
std
js
sub
push
mov
sti
jnp
ret
rol
xchg
jo
inc
dec
shr
sub
push
adc
add
sbb
sbb
fcmovu
pop
in
(bad)
and
test
shl
jg
mov
adc
cmovp
hlt
or
dec
add
fisubr
sbb
rol
cmp
cwde
das
xchg
dec
or
push
sbb
mov
sahf
outs
push
or
imul
add
and
(bad)
iret
(bad)
push
sbb
sub
ds
xor
xor
mov
addr16
or
movs
pop
sbb
(bad)
lahf
pop
call
add
jns
push
frstor
dec
scas
add
cli
adc
push
cmp
mov
popf
pop
and
popa
outs
fld
sti
or
and
aam
adc
inc
pop
mov
mov
popf
dec
mov
(bad)
aam
outs
jno
les
push
or
push
jmp
sbb
pop
jb
test
jb
add
adc
ficom
jne
pop
bound
cdq
mov
lea
jbe
mov
or
mov
jmp
pop
scas
sbb
cwde
idiv
ror
push
and
ror
push
cs
lods
retf
pop
ret
inc
cwde
mov
inc
jnp
xchg
pop
cli
mov
addr16
sbb
outs
mov
and
into
dec
cwde
test
adc
and
jnp
dec
adc
push
aad
push
cmps
inc
or
adc
aas
fiadd
or
or
aad
sub
sbb
idiv
cs
mov
fmul
call
in
mov
cdq
ficom
xchg
daa
mov
add
sbb
pop
dec
mov
aam
addr16
cmps
push
push
lock
cdq
movs
sbb
lahf
or
cmc
sub
mov
push
shr
fisttp
xchg
movs
mov
cmp
sti
inc
xchg
add
mov
loopne
add
pop
cli
fucomp
gs
clc
retf
jno
sub
adc
push
std
in
pop
sub
lock
enter
mov
mul
stc
pop
mov
dec
lock
mov
push
ret
test
push
sub
and
push
and
imul
jbe
retf
mov
sub
push
mov
pushf
xor
sbb
mov
in
retf
jge
stos
ja
stos
or
push
mov
xor
sbb
repz
dec
ss
sub
pop
mov
retf
push
pop
adc
imul
dec
arpl
pextrw
dec
dec
or
or
and
jnp
ds
fstp
mov
ins
dec
mov
aad
jl
retf
sub
arpl
pop
aad
mov
cmp
jmp
mov
mov
cmp
push
aad
repz
sbb
or
xchg
loop
pusha
sub
into
adc
stos
fnsave
mov
push
test
push
sub
popw
jnp
iret
jnp
sub
adc
nop
loopne
mov
and
or
mov
ss
(bad)
dec
mov
cmp
shl
sub
inc
cmps
outs
and
int
sbb
adc
jne
jnp
sbb
outs
js
hlt
push
push
jmp
call
mov
cmp
adc
bound
fimul
mov
icebp
jmp
xchg
in
cmp
mov
fstp
push
cmp
push
mov
inc
and
push
dec
jb
xchg
ins
xor
ds
sbb
add
xor
icebp
jne
test
inc
retf
cmps
sbb
mov
rol
xchg
fucom
jns
icebp
out
add
cwde
xor
stos
xchg
(bad)
adc
call
pop
pop
mov
bound
aam
jmp
stc
inc
sbb
int3
mov
int
and
or
stos
out
fidiv
neg
sti
call
mov
bound
add
sbb
mov
mov
outs
sbb
sti
call
outs
pop
pop
jnp
or
fs
stc
add
pop
(bad)
in
int3
push
inc
inc
jb
shl
sub
daa
jne
popf
push
fs
inc
xlat
adc
xchg
push
cld
pop
enter
cmp
nop
mov
jno
in
or
dec
push
mov
mov
ds
mov
jg
sbb
jge
cwde
mov
enter
inc
inc
dec
sub
in
movs
clc
test
jg
mov
push
shl
sub
(bad)
xor
scas
xor
adc
fwait
imul
sub
daa
das
sbb
retf
out
pop
in
sbb
les
pop
push
std
push
push
fdivr
inc
mov
loope
rcl
xchg
in
push
mov
mov
nop
and
add
xchg
lea
cs
es
sbb
push
push
xchg
inc
jmp
push
ja
test
nop
out
push
out
cwde
add
xchg
stos
and
mov
nop
sti
push
lahf
loope
rcr
sub
sub
inc
add
popa
sbb
fcom
xchg
lods
fst
rol
(bad)
mov
mov
xlat
jne
mov
mov
(bad)
out
test
adc
xor
mov
push
(bad)
cdq
fldcw
sbb
arpl
rcpps
jecxz
xchg
es
xor
cmps
add
sub
aas
jmp
mov
and
rcl
adc
rcl
add
(bad)
push
add
mov
std
cwde
shr
inc
mov
in
push
or
mov
mov
call
daa
mov
iret
pop
mov
push
test
test
push
add
icebp
in
jne
pop
dec
sahf
in
sbb
xor
cld
jmp
lods
fst
add
sub
adc
vminpd
mov
dec
sub
mov
icebp
cmp
dec
sub
jns
call
outs
cmp
js
mov
sbb
push
daa
fisttp
dec
aaa
mov
es
into
mov
push
or
dec
loop
sbb
lock
inc
imul
outs
push
mov
rcr
(bad)
mov
mov
push
pop
sbb
push
out
pop
dec
pop
fs
and
and
in
test
pop
iret
inc
mov
push
cmp
ss
test
test
(bad)
adc
out
xchg
xchg
adc
popa
pop
push
and
mov
dec
movs
sbb
(bad)
adc
cs
jge
shl
mov
scas
shr
sub
pop
leave
rcr
mov
cmp
bnd
pushf
fmul
adc
xchg
int
jmp
mov
xchg
adc
sub
mov
and
jae
aam
inc
xor
or
jo
test
pop
test
movs
ret
xchg
push
cmp
dec
(bad)
cld
idiv
push
pushf
push
pop
jb
pop
(bad)
pop
out
popa
mov
jmp
cmp
add
pop
push
cmp
pop
sub
add
movs
xchg
retf
mov
jne
js
or
ss
and
xchg
iret
outs
xchg
mov
lahf
enter
or
cld
call
sub
int3
clc
mov
jmp
clc
push
retf
mov
push
sbb
enter
mov
adc
sbb
js
sub
mov
cdq
sar
ror
mov
push
pop
scas
stc
nop
repz
sub
jge
cmp
fwait
jns
mov
xor
jne
call
test
in
clc
sub
mov
test
mov
out
mov
mov
stos
sahf
xchg
stos
(bad)
or
pusha
fs
ffree
clc
mov
loope
fisub
aas
mov
or
out
mov
mov
pop
call
cwde
push
sub
push
sub
sub
sbb
dec
push
and
sub
ds
enter
add
lahf
xor
xor
pop
pop
xchg
adc
push
hlt
cmc
ss
mov
adc
cld
dec
movs
add
pop
(bad)
cmp
dec
ss
ds
aad
cmps
inc
je
add
jle
push
or
scas
mov
add
push
loope
es
mov
fimul
ins
inc
push
stc
fld
ins
dec
mov
mov
jp
div
push
(bad)
sub
xlat
clc
jns
jge
out
push
add
dec
repnz
inc
iret
pop
xchg
bound
dec
std
fnstcw
ds
adc
addr16
inc
lea
out
int
(bad)
and
xor
mov
dec
cmps
aaa
pop
or
push
inc
aas
stos
cmp
cdq
mov
mov
inc
cmp
mov
jecxz
inc
imul
mov
rcl
outs
jae
aad
clc
mov
sbb
ret
mov
rol
cli
jae
popa
push
repnz
jbe
add
in
xor
das
(bad)
sbb
jmp
es
out
out
cli
bound
outs
imul
sub
xchg
scas
test
xchg
sub
rcl
lahf
fcmovbe
mov
ss
adc
mov
ror
(bad)
loopne
xor
and
sbb
dec
mov
imul
mov
mov
cmps
mov
dec
je
push
movs
xor
daa
jl
aaa
jae
mov
adc
push
lods
ds
lock
aad
inc
icebp
stc
mov
fidivr
push
lds
cmps
mov
idiv
retf
cdq
sub
xchg
mov
add
rcr
dec
jecxz
lods
std
cmc
dec
pop
hlt
out
cmps
aad
fisttp
lock
in
ins
shl
inc
shr
mov
adc
push
mov
leave
ja
(bad)
popf
daa
or
pop
xchg
mov
sahf
in
pusha
jbe
mov
sbb
sbb
sub
scas
mov
lods
sti
ret
jnp
retf
inc
fldpi
adc
ret
cmp
stos
inc
repz
adc
inc
rcl
daa
or
test
cld
xlat
leave
jle
scas
xlat
loope
fimul
xchg
scas
(bad)
gs
shl
jbe
hlt
jmp
fst
xor
bound
mov
stos
cmp
jmp
sub
inc
stos
aaa
dec
test
pop
aam
xchg
call
cli
or
add
retf
push
(bad)
movs
mov
xor
pop
shr
je
mov
adc
sub
push
cmps
push
or
jmp
pop
or
mov
mov
ins
(bad)
out
(bad)
pushf
ficom
jp
cmps
out
add
or
adc
push
jne
rcr
mov
xor
popf
xor
out
test
ror
pop
lahf
(bad)
rcl
jns
inc
adc
ret
jbe
fsub
sbb
adc
lock
fisttp
loopne
mov
jno
jmp
sub
sahf
xchg
test
out
sub
idiv
daa
imul
in
mov
dec
clc
push
rcr
enter
jp
mov
or
dec
xor
cmps
mov
and
in
jnp
push
int3
repnz
ror
in
xor
adc
jbe
adc
push
jns
mov
cdq
sbb
pop
dec
into
cmp
xchg
xor
lea
lea
clc
mov
push
push
mov
mov
add
pop
xchg
xchg
mov
sbb
xchg
test
stos
mov
adc
add
ds
shr
push
es
popf
and
inc
add
(bad)
loope
inc
xor
cmp
popf
nop
out
call
mov
cwde
xchg
dec
inc
push
and
pop
out
sbb
jo
xor
cld
fst
xchg
ss
sbb
sbb
push
std
pushf
mov
sti
das
fild
ja
jle
sti
sub
gs
lahf
jg
sub
push
xor
sub
shl
call
dec
mov
pop
and
test
pop
push
ds
sbb
mov
push
sub
inc
jbe
js
add
sbb
jg
ds
inc
mov
sbb
mov
cmp
xchg
xor
cmp
(bad)
xor
mov
sub
stc
xor
clc
cli
push
jo
push
mov
in
sbb
jbe
in
jmp
sbb
pop
pop
inc
scas
or
jns
xchg
add
dec
inc
xchg
js
inc
mov
sti
fstp
pop
pop
out
ins
dec
pusha
xor
xchg
std
mov
sub
or
xor
inc
inc
and
xchg
and
pop
or
sti
sbb
out
cmp
out
lds
out
test
fdiv
enter
sti
cs
pop
es
mov
adc
sbb
mov
and
push
sub
imul
sahf
(bad)
mov
jae
test
inc
push
popf
ret
lds
or
lds
add
ror
push
(bad)
fmul
add
push
jmp
std
add
dec
sahf
das
lahf
mov
(bad)
xor
push
test
inc
pop
sbb
jle
aaa
imul
and
sbb
ss
xor
inc
xor
or
test
fstp
sbb
and
mov
repz
fmul
bound
clc
and
pop
shl
mov
push
mov
inc
jmp
ror
inc
ins
inc
mov
sub
add
pushf
cld
std
sub
mov
mov
push
inc
cmps
enter
mov
lock
pop
psrld
or
out
js
ret
jbe
jle
arpl
add
inc
sub
test
mov
dec
xor
std
jne
fcom
jno
jnp
call
ret
push
sar
scas
jg
xchg
icebp
mov
pop
sbb
cwde
sbb
dec
aam
mov
push
sbb
jne
jb
stos
imul
lahf
mov
push
push
inc
mov
aam
push
jle
int
mov
dec
mov
sti
push
jl
retf
adc
sbb
mov
mov
dec
add
retf
test
add
les
lods
lahf
aas
clc
sub
cmp
push
aam
mov
xchg
mov
fstp
ins
jo
add
cwde
mov
mov
ror
lea
daa
adc
bnd
not
(bad)
(bad)
lock
jmp
mov
xor
push
add
and
xchg
or
push
jl
add
mov
dec
inc
lds
shl
aaa
test
retf
xor
pop
and
sbb
and
push
sub
int3
sub
lods
mov
(bad)
xor
mov
add
pop
repnz
loop
hlt
xlat
je
(bad)
cli
jp
cmp
ss
mov
xor
jnp
arpl
xchg
dec
call
in
mov
sub
sahf
shl
je
pop
pop
pop
loop
jmp
loop
or
cmps
not
dec
outs
or
vmovaps
pop
sahf
inc
int3
gs
aaa
or
sar
push
fcmove
movs
pop
sub
xchg
jb
xchg
mov
sahf
adc
in
test
addr16
xor
mov
jmp
xlat
push
stc
dec
xchg
dec
in
stos
(bad)
mov
jo
ins
fwait
mov
push
lock
fbstp
ffreep
sub
scas
mov
mov
adc
int
stos
mov
pop
cmps
xor
mov
push
xor
test
push
iret
test
xor
fucomp
jb
lahf
js
and
clc
push
test
xchg
mov
inc
sub
iret
and
jmp
aad
mov
add
jbe
xchg
jmp
mov
xchg
(bad)
xor
add
int
inc
dec
push
cmp
call
pop
out
add
imul
push
outs
cld
out
push
cmp
(bad)
stos
cdq
adc
repnz
imul
js
cmps
dec
fist
mov
pop
push
xor
jnp
dec
jg
mov
sub
xchg
mov
lods
jb
push
repnz
mov
xor
jg
sti
or
xor
mov
cmp
dec
sbb
iret
(bad)
sbb
(bad)
loope
push
xchg
fs
aad
sbb
in
mov
pop
xor
dec
cdq
jg
repz
mov
gs
dec
mov
fistp
cmp
push
movs
imul
push
ror
cmp
ins
pop
pop
call
pop
inc
sub
cld
and
(bad)
(bad)
push
inc
pushf
cmps
loop
adc
mov
out
fisttp
pop
leave
test
sub
lods
and
or
pusha
(bad)
rcl
imul
xchg
cmp
fnsetpm(287
fcom
dec
jno
mov
cmp
mov
lods
jne
aam
ins
sub
jmp
sbb
movs
mov
adc
push
add
xchg
xor
rol
cld
(bad)
js
xor
ins
jb
xor
test
jb
and
sti
push
jmp
stc
add
gs
aas
pop
das
sti
mov
mov
dec
push
out
test
imul
sti
shl
loope
push
js
repnz
mov
aas
fnstsw
das
in
inc
jmp
or
mov
adc
mov
ret
pop
mov
mov
mov
mov
adc
test
mov
sub
cli
xchg
pop
adc
mov
fdiv
mov
retf
xchg
loop
jp
mov
pusha
add
mov
lahf
and
sub
mov
mov
xor
lahf
loopne
test
daa
mov
out
cdq
cmp
jo
cmp
xchg
inc
add
sub
lds
iret
jb
jnp
mov
dec
cmp
repnz
push
cld
pop
pop
jo
in
popa
mov
test
and
ret
jge
jmp
loop
xor
scas
in
vpdpbusd
mov
inc
inc
xchg
xor
enter
and
imul
fstp
js
mov
and
(bad)
jns
xor
mov
hlt
or
inc
add
sti
xor
mov
rcl
sbb
fpatan
pop
aaa
push
adc
scas
inc
push
add
dec
in
out
xchg
nop
dec
daa
in
push
and
push
cli
les
inc
jge
and
inc
pop
in
(bad)
push
std
adc
inc
sar
jo
mov
push
dec
cmp
pop
sub
push
jge
sahf
xchg
mov
push
fnstsw
enter
cld
cmp
cwde
push
js
jl
cmp
(bad)
add
gs
cmp
adc
adc
arpl
xor
out
aas
cmp
jge
(bad)
call
xchg
pop
rcl
repnz
sub
shl
popf
xor
jmp
or
pop
cld
jle
jge
sub
pop
les
push
sbb
cmps
mov
jo
sbb
mov
call
jbe
mov
mov
sar
and
(bad)
fwait
inc
jnp
daa
fmul
fidiv
sbb
fisubr
push
iret
pop
loope
or
cdq
sub
pop
movs
(bad)
rcr
pop
scas
jg
(bad)
sbb
std
icebp
je
sbb
call
dec
mov
and
icebp
sub
repnz
or
(bad)
daa
fwait
pop
imul
(bad)
jbe
inc
hlt
pop
add
push
(bad)
ror
mov
lods
not
push
pop
push
cmp
lahf
mov
or
in
inc
adc
jo
pop
fwait
jb
movs
jmp
inc
xchg
popf
sbb
xor
out
cmp
pusha
jp
enter
lahf
cmps
and
push
out
xchg
mov
movs
push
test
cmp
mov
sahf
cdq
je
mov
lock
call
add
jge
mov
adc
mov
dec
mov
add
fwait
sub
dec
push
arpl
mov
ja
lods
call
sbb
ins
imul
adc
dec
sub
mov
mov
sbb
iret
mov
or
xchg
and
mul
mov
mov
aad
aaa
arpl
or
dec
dec
ret
aam
dec
cld
ror
stos
cmp
cmp
cld
mov
sub
mov
sahf
push
jle
xor
xchg
clc
pop
cdq
leave
sbb
sbb
pusha
cdq
inc
push
in
mov
or
push
inc
xor
sub
push
mov
and
fdiv
jne
or
(bad)
das
add
repz
push
outs
mov
push
inc
aaa
shr
repz
add
mov
and
out
lea
ds
mov
(bad)
adc
push
and
xor
bound
jbe
pusha
jbe
cs
inc
pop
mov
pop
aas
popf
aas
inc
movs
adc
dec
jg
jge
daa
stc
popa
cmp
sar
mov
rcr
and
push
mov
and
pusha
cmovnp
xlat
repnz
fst
pop
repz
mov
test
add
div
cmc
jns
sub
es
stc
mov
jb
pop
jp
pop
lds
aam
push
add
(bad)
sub
mov
ds
sar
sub
jecxz
mov
out
mov
movs
xchg
jb
pop
add
xor
jmp
sub
fldcw
mov
inc
in
adc
lods
loopne
jg
test
inc
fdivr
mov
je
(bad)
fwait
and
xchg
mov
dec
movs
ret
mov
hlt
cmp
dec
add
cmps
fild
pop
inc
adc
in
sbb
inc
or
jl
mov
sub
add
or
call
fidiv
sub
aas
jle
(bad)
mov
int3
rol
iret
add
jle
arpl
jmp
or
jge
(bad)
cmp
sub
pushf
fisub
and
jge
dec
out
adc
adc
out
or
jnp
bound
adc
and
data16
xor
aam
punpckhwd
mov
shl
and
adc
cwde
xor
ins
dec
add
cdq
fs
xor
xchg
popf
in
jmp
and
xchg
cmp
mov
aaa
adc
cmp
jbe
sub
retf
and
scas
loopne
sbb
in
add
es
sub
mov
jl
inc
inc
test
cmps
gs
call
or
cmp
call
adc
(bad)
ja
fsub
sbb
popf
(bad)
and
xor
cmp
je
es
push
jle
out
xor
cmp
das
sub
pop
sar
dec
popa
and
adc
int3
mov
aad
mov
push
loop
inc
and
mov
lods
les
sbb
dec
sbb
repnz
sub
cmp
ins
sub
xchg
push
xchg
in
cwde
loop
leave
test
dec
retf
xchg
in
cmps
add
inc
push
stos
dec
outs
loop
bound
adc
xor
mov
fmul
lds
(bad)
sbb
inc
out
mov
in
stc
clc
inc
test
adc
les
mov
jecxz
mov
test
pop
cld
cs
or
call
and
imul
add
in
in
jb
adc
(bad)
adc
jp
dec
dec
jmp
sar
retf
xor
xchg
pushf
jge
xchg
push
cmp
stc
test
or
sbb
xchg
ja
sti
mov
fwait
aas
cld
fiadd
xchg
out
pusha
jecxz
xor
jmp
pop
jb
cmp
clc
jns
lahf
(bad)
ror
jge
cmp
add
sbb
push
xchg
push
push
cs
xor
mov
jnp
in
inc
pop
jae
fild
out
cmp
lock
and
(bad)
ss
mov
popa
and
adc
aam
pop
enter
fld
sbb
cmp
retf
cmp
inc
inc
mov
mov
xchg
test
push
jecxz
mov
iret
cmps
or
mov
add
mov
ret
std
mov
mov
xchg
ret
cdq
add
jns
jns
neg
test
or
adc
retf
nop
(bad)
jg
add
dec
push
dec
inc
mov
add
int
test
seto
ret
xchg
ds
mov
jo
sbb
xchg
es
int3
cmp
inc
xchg
xor
arpl
sbb
in
mov
pop
xor
loope
mov
gs
pop
outs
jo
out
mov
arpl
mov
add
sub
arpl
xchg
aaa
ret
rol
xchg
mov
(bad)
mov
fcom
mov
or
fild
mov
shl
mov
les
icebp
or
hlt
mov
leave
mov
sub
sbb
call
cmp
push
or
sar
mov
jbe
loope
adc
mov
(bad)
jp
aas
jbe
cdq
data16
sbb
fisubr
es
jmp
xchg
dec
push
jecxz
lods
fisub
stos
pushf
dec
pop
cli
mov
(bad)
retf
repz
xchg
mov
enter
adc
fbld
repz
sbb
rcr
pop
mov
sbb
and
sahf
ja
sub
popa
inc
popa
in
push
pop
(bad)
addr16
sub
xchg
mov
and
xlat
sahf
inc
leave
aad
out
push
les
cmc
mov
lods
push
xchg
sub
in
sub
stos
sbb
inc
imul
add
test
je
push
in
in
pop
sbb
aad
out
or
call
mov
push
inc
aam
fwait
adc
daa
dec
add
xchg
mov
sbb
mov
jmp
enter
cmp
add
test
add
mov
cmp
pushf
add
scas
jo
xlat
cmps
or
data16
std
cmp
mov
shl
scas
and
sub
xchg
pop
inc
or
mov
in
ins
je
mov
mov
movs
add
aam
mov
mov
repz
pushf
adc
xor
loope
adc
call
dec
mov
sub
xchg
lods
sub
or
jmp
mov
in
pop
jg
xchg
inc
ds
sub
xor
pop
std
aad
out
mov
ja
int
mov
mov
jmp
inc
mov
clc
mov
js
and
lahf
das
js
lods
(bad)
sub
outs
mov
stos
sub
and
sbb
pop
jl
pushf
jno
sub
shr
nop
pop
rcl
mov
jnp
mov
sub
xor
inc
mov
add
icebp
(bad)
pop
fidiv
cdq
mov
add
mov
add
jns
daa
sbb
lahf
inc
dec
icebp
or
mov
fwait
sbb
in
(bad)
lods
jo
sbb
test
clc
popf
jnp
pop
dec
pop
jo
pop
aad
jb
push
inc
in
add
sbb
pop
jbe
fdivp
jp
push
sbb
mov
lods
xchg
mov
loop
bound
loope
inc
fldcw
pop
xor
add
mov
adc
mov
jmp
add
push
sti
dec
push
mov
sbb
enter
cs
xchg
xchg
adc
mov
jg
push
aad
jb
loopne
push
fwait
sbb
loope
xor
mov
push
jmp
mov
int
xchg
mov
cmp
cmc
jle
ds
adc
dec
mov
dec
(bad)
jg
push
jnp
add
sub
mov
lock
in
loop
xlat
dec
dec
cwde
mov
dec
pop
pop
mov
sbb
mov
dec
popf
enter
pop
xor
dec
stos
inc
repnz
or
test
rol
add
nop
pop
fdivrp
(bad)
scas
jmp
mov
inc
dec
add
add
xchg
lock
ds
pop
lea
(bad)
push
pop
or
ret
loopne
push
bound
scas
outs
fisttp
mov
jbe
retf
out
or
sbb
in
jbe
mov
xchg
jns
jns
(bad)
inc
push
cwde
lock
mov
xchg
jecxz
pop
mov
(bad)
sbb
mov
inc
inc
call
repz
inc
scas
adc
leave
clc
xlat
cld
jecxz
rcr
fisubr
ja
xchg
repz
xchg
fdiv
leave
das
ss
stos
mov
mov
in
fwait
cmp
test
enter
xor
mov
fs
mov
rol
sbb
xor
cmp
cs
out
cld
xor
pop
cmps
mov
arpl
sahf
jg
lods
outs
xchg
mov
imul
jne
mov
pop
mov
push
adc
(bad)
add
retf
jne
gs
sub
xchg
mov
into
mov
lods
fimul
(bad)
fcmovb
pop
fwait
popf
sub
int3
and
ja
popf
add
mov
pop
outs
imul
dec
ins
dec
mov
jp
loop
jo
jmp
or
jb
into
inc
jno
jo
mov
repnz
movs
mov
(bad)
in
(bad)
imul
push
mov
xchg
jns
sub
sbb
sub
lods
cmp
dec
and
jne
mov
mov
sbb
sub
ror
mov
dec
(bad)
fistp
cmp
ret
mov
enter
das
stos
icebp
nop
xchg
imul
iret
cmp
xor
cs
jo
(bad)
addr16
shr
stos
test
test
mov
int3
jl
test
fisttp
sub
(bad)
aas
pop
adc
inc
nop
sbb
mov
dec
or
or
into
addr16
aad
cli
sar
jmp
frstor
mov
loope
fmul
loope
push
mov
iret
jae
(bad)
mov
shl
and
ss
aam
add
shl
jl
daa
aad
or
inc
sbb
pop
push
popf
or
arpl
mov
sbb
lods
fisttp
shr
mov
and
xor
mov
jecxz
mov
or
test
in
cmp
movs
pop
sub
movs
or
stos
(bad)
retf
jnp
and
aas
out
sbb
pop
test
icebp
leave
add
adc
idiv
ja
int
pop
cs
nop
add
push
dec
das
(bad)
stc
mov
imul
cmp
add
je
cmc
inc
pop
mov
inc
call
in
iret
aad
repnz
rcl
sub
and
mov
or
ror
shl
cli
fld
enter
test
cmp
loop
xchg
adc
aad
xchg
shl
loop
or
bound
loope
xchg
lock
pop
clc
daa
pop
call
mov
sub
sub
inc
lea
mov
jno
pop
or
aaa
in
jmp
repnz
scas
and
into
outs
inc
jbe
jg
cmps
inc
inc
jle
push
mov
test
lods
jae
stos
repz
dec
shr
jbe
leave
clc
shl
push
shl
aas
test
xchg
add
scas
jge
push
neg
cmc
mov
sub
inc
push
pusha
xor
jl
adc
inc
jmp
adc
inc
je
rcl
xlat
cli
(bad)
icebp
es
in
inc
and
test
dec
test
repz
jp
sbb
das
jl
icebp
fdivr
iretw
retf
dec
ins
cmp
sub
inc
sub
xchg
scas
ja
sbb
mov
push
push
mov
daa
adc
outs
cli
fld
fcomi
mov
fcmovbe
loop
movs
cmp
add
std
jns
fisttp
mov
jne
pusha
imul
push
pop
xchg
retf
sahf
and
push
fild
mov
inc
fdiv
sub
pushf
scas
pop
jns
dec
adc
repz
sar
xor
adc
test
push
xchg
ins
in
jns
sub
(bad)
or
or
jnp
add
call
aam
mov
lock
mov
push
test
jmp
xchg
pop
outs
and
loop
fbstp
iret
push
xor
push
push
push
repz
adc
pop
in
mov
ins
pop
dec
cmp
mov
icebp
cmp
fistp
jne
mov
sahf
fisttp
sahf
in
lea
movs
sub
xchg
bound
test
clc
test
in
cmp
cwde
out
xchg
xor
sub
mov
mov
dec
clc
iret
rol
sbb
ror
es
nop
pop
xchg
shl
aad
jae
test
jecxz
push
mov
mov
iret
add
pop
mov
dec
repnz
jmp
mov
mov
out
adc
cmc
xchg
dec
mov
and
dec
call
retf
sbb
dec
xchg
sub
arpl
and
jl
aad
outs
rcr
pusha
xchg
loop
fidiv
enter
dec
add
adc
arpl
push
xlat
pop
pusha
call
and
push
movs
pop
popf
inc
xchg
adc
fild
mov
sub
jns
pop
sbb
jbe
clc
mov
lea
push
dec
ds
call
popa
arpl
fiadd
into
jne
stos
mov
in
arpl
inc
or
int3
sub
pushf
lods
adc
sti
outs
sub
pop
xchg
ss
test
cdq
pushf
dec
aaa
(bad)
imul
add
and
sahf
mov
sbb
sub
xchg
pop
add
ss
stos
jb
xlat
pop
inc
aad
sahf
fnstenv
or
iret
daa
xchg
ins
xchg
fisttp
fsubr
add
dec
pop
xor
mov
dec
xlat
rcl
mov
push
push
mov
mov
into
fwait
add
fdiv
inc
test
or
enter
or
out
lock
cdq
(bad)
mov
scas
fisubr
fstp
dec
push
pop
fmul
sbb
pop
pop
inc
jnp
cmp
int
gs
loopne
data16
movs
pop
movs
push
mov
je
fsubr
inc
inc
sub
out
pop
jge
pop
adc
mov
pop
sub
test
rcl
xor
mov
jge
aad
or
mov
pop
pop
xchg
push
mov
jmp
add
lea
mov
push
sbb
sub
addr16
loop
cmps
mov
dec
(bad)
call
xor
pusha
in
adc
in
cmp
stos
neg
lahf
icebp
stos
jmp
pop
push
mov
mov
bound
mov
in
xlat
mov
addr16
iret
jo
std
shl
push
or
ror
xor
fldenv
push
outs
mov
sbb
jg
or
inc
out
cmp
adc
push
js
mov
in
or
fsubr
sbb
dec
movs
in
bound
or
sbb
pop
pop
cmp
inc
xor
add
mov
es
aam
adc
xor
push
add
jo
(bad)
(bad)
retf
push
aaa
mov
(bad)
mov
mov
leave
and
fisttp
xor
outs
push
(bad)
shr
xchg
pop
outs
cmp
adc
push
gs
xchg
(bad)
sbb
cmp
inc
jle
cmp
data16
(bad)
xor
push
sub
push
jp
mov
mov
movs
or
popa
and
inc
xor
and
inc
jg
sub
pop
pop
loop
cmc
inc
cld
pop
mov
lods
adc
mov
and
sbb
(bad)
sbb
pop
pusha
xchg
mov
fst
dec
inc
mov
test
outs
ds
mov
(bad)
cmp
mov
pop
mov
inc
pop
sbb
mov
into
rcl
popf
xor
xor
and
adc
dec
pop
loope
cmp
retf
ds
ror
(bad)
loope
es
pop
and
mov
jae
fidivr
lods
fwait
pop
lea
mov
enter
daa
lea
int
xchg
fs
dec
dec
in
shl
xor
sbb
adc
test
data16
add
xchg
shl
mov
mov
add
and
inc
cmps
mov
dec
in
rol
mov
jmp
or
(bad)
mov
add
out
xor
(bad)
fmulp
outs
add
pop
sub
aaa
jmp
cdq
loope
adc
pop
cmps
mov
imul
xor
pop
es
sahf
mov
push
popa
inc
adc
in
cmp
inc
div
cmps
fistp
fidiv
into
cmp
call
cs
xor
sbb
sbb
mov
dec
pop
jl
dec
and
xchg
pop
ret
fbstp
mov
das
sub
(bad)
and
iret
add
cmp
ret
cmp
ss
adc
push
push
movs
das
fwait
dec
dec
and
dec
sub
cli
jp
adc
ss
(bad)
pop
lods
push
repz
push
cmp
out
push
sub
sbb
mov
xchg
or
in
outs
or
pop
sub
cmps
push
mov
test
(bad)
jns
mov
fdivr
fwait
mov
mov
repnz
mov
mov
sub
mov
jbe
call
add
mov
jno
retf
mov
ret
mov
mov
mov
push
sar
or
mov
iret
cmp
(bad)
test
adc
out
sbb
adc
icebp
cmp
or
pop
xchg
xchg
test
sar
popf
mov
dec
jbe
jo
mov
jne
mov
aas
stos
xchg
leave
call
sbb
in
sub
xor
loopne
frstor
in
fdivr
adc
rcr
loope
mov
fyl2x
jne
sub
push
and
test
clc
mov
test
lahf
mov
jnp
cli
int3
xor
cld
sbb
fwait
lea
pop
add
and
mov
pop
adc
xchg
jo
test
add
jno
xchg
pop
push
outs
clc
cmc
and
xchg
dec
mov
(bad)
ret
scas
cmp
enter
js
mov
or
xor
rcr
shr
jge
int3
lahf
add
gs
jecxz
in
shl
call
pushf
push
jnp
pop
xor
jl
retf
push
ins
call
(bad)
je
xchg
lahf
das
add
jmp
jl
(bad)
sbb
dec
stc
adc
mov
iret
inc
ror
add
(bad)
in
mov
sbb
pop
dec
(bad)
adc
dec
mov
cmp
jmp
push
loop
dec
sahf
cmp
mov
retf
fstp
mov
pop
cld
cmp
xor
push
js
rcr
call
and
in
xchg
dec
push
ss
jmp
cmp
jns
shr
jo
xchg
dec
adc
lods
inc
pop
ins
jle
pop
inc
xlat
mov
pusha
mov
adc
cmp
mov
repnz
outs
imul
jno
ins
push
icebp
jb
dec
js
scas
and
push
or
cmp
cli
add
xchg
mov
cmps
xchg
(bad)
cs
add
jo
adc
sub
fist
inc
rol
shl
inc
jns
mov
pushf
(bad)
scas
sub
(bad)
cmps
mov
sub
jmp
lods
and
push
fsub
mov
pop
dec
aas
mov
in
jae
call
and
push
hlt
and
out
ror
std
mov
push
sbb
adc
xor
mov
cmp
ins
ret
push
mov
mov
xor
pop
inc
push
or
mov
loopne
fiadd
rcr
cmp
push
repnz
mov
outs
dec
lods
mov
dec
leave
adc
push
push
lea
popa
ret
xchg
or
pop
jns
push
add
push
cmc
mov
mov
movs
fadd
push
retf
push
add
cmp
lahf
cdq
shl
test
mov
pop
js
(bad)
jg
mov
xor
push
adc
rol
ds
jp
sub
xchg
xor
(bad)
and
ds
fneni(8087
cld
int3
in
ins
mov
mov
ja
out
adc
ins
aas
ror
jae
test
pop
xchg
js
inc
ss
rcl
fwait
in
dec
arpl
(bad)
add
test
or
push
mov
dec
mov
and
push
sbb
sti
adc
xchg
jno
sub
or
jno
sbb
dec
push
pop
(bad)
xor
daa
dec
ss
jmp
cmc
test
in
in
scas
(bad)
sbb
mov
daa
aaa
inc
add
sbb
loope
(bad)
and
sub
xor
cdq
cmc
inc
stos
push
push
out
adc
mov
xchg
in
cwde
mov
push
daa
and
add
call
and
ror
add
mov
lahf
adc
test
sbb
or
fisttp
pop
jb
pop
das
lods
nop
int3
pop
outs
sbb
leave
std
mov
fild
dec
js
and
js
loopne
mov
jae
dec
sub
shl
sti
mov
(bad)
(bad)
mov
pusha
dec
icebp
mov
jo
jno
mov
ret
adc
mov
popf
xchg
push
sub
lods
int
aas
push
loope
pop
pop
push
or
js
jle
jmp
cmps
push
int
movs
ins
jo
int3
sub
(bad)
cld
mov
and
cld
mov
hlt
xor
nop
jmp
test
cld
dec
mov
cmp
sbb
test
adc
push
cwde
aaa
xchg
push
push
in
sti
pop
js
leave
imul
mov
add
sub
pop
sti
dec
inc
sbb
inc
fcomi
arpl
xchg
add
jmp
jg
or
(bad)
push
sbb
push
push
jb
scas
cmp
pushf
jge
repnz
mov
movs
(bad)
nop
push
jecxz
dec
pop
lods
icebp
inc
adc
out
lods
test
mov
xor
add
icebp
push
push
jge
cwde
pop
pop
out
jo
addr16
mov
adc
xchg
test
leave
jmp
mov
les
add
(bad)
mov
loopne
pushf
pop
shl
mov
xor
push
cdq
movs
jmp
jbe
rcr
aam
scas
cmp
pushf
cmp
int3
int3
xchg
out
(bad)
mov
sbb
rcr
iret
sbb
sub
hlt
sti
loop
pop
aad
pop
mov
outs
mov
xor
fistp
jb
pop
jo
lea
mov
pop
lods
jb
dec
sbb
lock
enter
lds
sbb
inc
pop
adc
jmp
add
outs
push
sbb
dec
push
add
jecxz
jg
mov
aad
in
jp
imul
jbe
ins
rol
xchg
jg
retf
stos
loopne
mov
nop
push
loop
in
fisttp
lea
push
lock
xchg
pop
inc
dec
pop
push
and
ins
into
je
sbb
call
retf
sbb
movs
xor
clc
adc
cld
jecxz
repnz
fild
cmp
and
aaa
pop
hlt
xchg
pusha
adc
adc
dec
or
outs
dec
(bad)
clc
dec
jb
push
mov
pop
xchg
adc
mov
inc
jle
xor
test
cwde
inc
sbb
mov
or
out
mov
hlt
cdq
and
dec
xchg
sahf
mov
or
ffreep
jle
(bad)
and
ret
lds
sahf
inc
xlat
in
ins
pop
xchg
xor
mov
or
mov
repz
fisub
outs
mov
aas
fst
gs
shl
pop
xchg
or
sbb
lahf
daa
add
cs
xchg
inc
inc
stos
inc
mov
xor
xchg
retf
xchg
out
inc
cmp
push
pop
int
inc
dec
pushf
adc
leave
mov
aas
mov
fsubr
pop
pop
out
outs
je
fidiv
inc
jnp
add
and
cmp
add
retf
icebp
(bad)
fwait
and
fidiv
in
mov
xchg
in
push
mov
mov
ror
inc
es
movs
in
pop
movs
popa
mov
cmc
mul
cmp
sbb
jns
push
xor
mov
mov
stos
cmp
mov
push
popw
popf
dec
aad
dec
cmp
pop
cmps
add
(bad)
sbb
movs
rol
jecxz
pop
dec
lds
int
in
mov
sti
pop
mov
jmp
retf
sar
inc
push
daa
int3
imul
cmps
sub
cli
jb
xor
dec
fwait
rcl
mov
sub
(bad)
sub
mov
in
(bad)
jl
and
xor
push
xor
mov
cmps
ficomp
fnstsw
int
sahf
jne
cmp
lds
imul
scas
mov
push
inc
fisubr
ds
and
mov
push
mov
or
ins
inc
pop
sar
in
mov
xchg
adc
adc
inc
rcl
mov
xor
std
dec
out
jns
stos
adc
fsub
leave
out
call
imul
mov
xchg
ret
adc
(bad)
movs
out
std
scas
sub
sub
stos
dec
and
push
gs
xchg
and
je
jg
add
mov
outs
or
les
pusha
dec
and
loopne
(bad)
ds
fstp
push
mov
les
lahf
out
fiadd
jbe
fs
push
push
add
out
adc
sahf
adc
or
cmp
sahf
adc
cmp
sahf
xor
jbe
fwait
popf
jmp
fs
pop
and
xor
fcomi
xchg
push
xor
rcr
mul
add
das
lahf
(bad)
jl
add
jmp
xchg
dec
dec
test
movs
pop
pop
xchg
push
stos
sub
(bad)
lods
cli
xor
mov
pop
clc
jnp
pop
add
jle
cmp
and
dec
stos
lahf
es
out
push
icebp
sub
int3
ja
lods
inc
push
add
jmp
jp
jmp
dec
add
jg
cmp
sti
add
jl
adc
shl
clc
imul
jae
jno
inc
nop
push
xor
mov
jmp
scas
leave
jmp
test
sahf
adc
xor
jno
push
xchg
lods
lock
in
and
ins
pusha
or
jle
hlt
dec
cmp
(bad)
sub
jne
xchg
xor
not
into
xchg
rcr
repz
push
sub
popf
(bad)
ins
adc
outs
popf
add
mov
leave
jle
mov
xchg
repz
mov
mov
push
retf
xor
sbb
jae
adc
call
pop
stos
ret
repz
ja
(bad)
int
push
push
pop
mov
cwde
xor
int3
popa
sbb
sub
rep
pusha
xor
xchg
clc
jecxz
and
inc
fnstsw
jmp
sbb
(bad)
xor
sbb
pop
ins
(bad)
xor
sub
ss
xchg
xchg
in
inc
xor
mov
xchg
(bad)
add
add
cvtps2pi
fild
test
(bad)
mov
mov
aas
push
inc
adc
stos
mov
call
fisttp
mov
jnp
aaa
sbb
mov
pop
repnz
(bad)
imul
into
mov
xchg
xor
cwde
push
mov
movs
pop
iret
in
xchg
mov
add
or
paddusw
push
retf
mov
and
gs
ins
clc
push
shr
push
pop
mov
sbb
(bad)
sbb
frstor
repz
cmp
dec
xor
push
icebp
push
and
push
jb
mov
sahf
xchg
jmp
fs
mov
jp
sub
retf
(bad)
stc
mov
ins
or
jae
jnp
mov
lods
mov
mov
scas
div
add
scas
xor
cmps
pop
(bad)
cmp
xchg
in
cmp
inc
cmc
push
mov
fistp
out
test
cmp
xor
fst
popf
sbb
out
cmp
pusha
popa
dec
imul
xchg
inc
sbb
xchg
stos
stos
loop
adc
xchg
adc
in
fstp
and
adc
fist
or
fcmove
pop
enter
movs
dec
xor
addr16
adc
jno
add
popa
or
xchg
mov
std
imul
mov
add
fdivr
ds
sti
mov
and
sbb
push
daa
gs
jmp
shl
int3
inc
xor
movs
movs
inc
adc
sbb
sbb
sbb
mov
adc
ds
mov
mov
js
pusha
div
dec
mov
pop
mov
std
(bad)
das
mov
mov
jb
xchg
call
fsubr
sub
mov
add
cmp
repnz
fs
movs
fstp
jecxz
mov
adc
pop
jnp
stos
icebp
sahf
test
xchg
xor
aad
mov
(bad)
ins
xor
dec
jne
mov
out
jnp
sub
rcl
mov
jmp
cmp
xor
jb
and
or
std
pop
pop
xchg
pop
cmp
mov
ja
dec
call
mov
pop
ret
jmp
hlt
rcr
dec
cmp
test
dec
xor
mov
pop
out
mov
mov
shl
scas
ret
ror
mov
mov
lock
jge
jns
sbb
push
and
or
xchg
pop
jp
mov
jmp
fnstenv
stc
sbb
lods
xor
sbb
call
sti
arpl
mov
ffreep
je
outs
js
fcmovne
adc
pop
std
add
mov
dec
sahf
and
and
sbb
mov
mov
add
(bad)
push
inc
sbb
dec
dec
cli
xor
add
cmp
cmp
dec
inc
mov
mov
stc
mov
jp
push
retf
out
and
push
cmp
mov
cmc
add
fisub
cmp
aaa
shl
jae
rcl
fs
stc
mov
ins
mov
or
xor
enter
inc
jbe
cdq
aaa
scas
jns
arpl
repz
cmp
(bad)
dec
stc
pop
ja
or
sti
cwde
rcr
es
fwait
mov
sub
sub
loop
call
mov
cwde
mov
push
push
ja
gs
jmp
std
cmp
cld
es
fisub
jecxz
inc
mov
int
pop
sub
cmps
clc
in
and
inc
mov
mov
sbb
jns
and
out
imul
inc
and
out
inc
in
inc
xchg
pop
shl
stos
faddp
test
xor
jae
retf
bound
imul
pop
mov
mov
imul
(bad)
movs
(bad)
sub
cmp
inc
(bad)
call
sub
movs
ins
pusha
mov
rcr
les
xor
push
pop
jmp
clc
mov
stos
sahf
out
xchg
jmp
mov
inc
js
(bad)
xchg
add
xacquire
fmul
jle
pusha
mov
inc
cmc
push
xor
xor
pop
mov
add
xor
xchg
sub
enter
inc
ds
lods
call
jg
test
jg
sub
shl
mov
je
ja
test
ror
pusha
adc
inc
sar
xchg
mov
mov
push
test
lods
adc
push
loop
jg
lods
repz
add
mov
push
ret
sar
jp
jl
fnstcw
daa
add
sahf
sub
test
rcr
jl
mov
sbb
rol
lock
cld
cmp
mov
push
cmp
add
hlt
cmc
adc
cli
push
out
jne
mov
not
aam
push
ja
xchg
jbe
inc
mov
xchg
jle
cmp
or
in
enter
sti
inc
xchg
imul
not
cli
fs
mov
in
sbb
fcom
dec
jb
xor
call
stos
pop
jmp
or
sahf
jge
imul
out
shl
pop
shl
aas
mov
into
cdq
addr16
lods
into
in
js
iret
test
popa
mov
hlt
dec
add
jmp
add
sbb
sub
mov
mov
jnp
add
(bad)
jo
adc
je
pop
or
lock
das
pop
retf
frstor
push
cmps
stc
or
aas
xchg
mov
nop
adc
add
lds
jle
xchg
jge
jle
popf
push
or
push
or
mov
and
inc
std
jb
and
inc
in
or
and
push
fnstcw
jmp
call
pop
popa
mov
sub
sub
xor
sti
jp
in
es
sub
inc
in
fbld
out
dec
mov
(bad)
xchg
xor
js
xor
imul
cmp
std
rcl
(bad)
retf
pop
cs
pop
push
push
inc
ins
sahf
ror
xor
into
retf
push
mov
js
add
call
push
sti
div
and
mov
(bad)
in
jns
leave
add
inc
push
mov
or
adc
mov
test
mov
and
icebp
dec
push
adc
or
sbb
pop
or
sub
mov
xor
rol
es
cmps
hlt
inc
sub
shr
leave
mov
ds
dec
arpl
in
shr
cmp
xlat
test
rcl
jp
outs
mov
gs
adc
das
mov
arpl
and
int
loope
xchg
cmp
push
mov
jecxz
sub
jne
mov
jge
xchg
dec
inc
cwde
fwait
mov
cwde
scas
retf
dec
mov
pop
pusha
iret
pop
test
sub
and
fdiv
xchg
in
test
lock
push
push
aam
and
jecxz
sti
inc
in
mov
mov
aad
xchg
dec
jno
xchg
pop
scas
xor
ja
cmps
xchg
mov
cmc
loopne
dec
int3
mov
test
push
mov
lock
pop
xchg
adc
outs
push
sub
xor
(bad)
jbe
jnp
sub
js
inc
add
mov
or
mov
jo
and
lock
add
push
mov
mov
hlt
jg
mov
stc
stc
ins
ret
sahf
fs
rcr
fdiv
sti
pop
out
sub
jns
xchg
mov
pop
pop
push
ins
je
pop
test
int3
pop
lods
int3
(bad)
push
cwde
cmp
cmp
or
add
stc
mov
fwait
std
xor
pop
add
or
sbb
das
xchg
mov
rcr
fldcw
neg
mov
mov
jl
push
push
out
or
hlt
push
js
inc
or
and
aad
ror
mov
or
aam
ins
pop
pop
test
jne
add
nop
loope
mov
aaa
dec
and
dec
call
pop
nop
fnstsw
icebp
mov
xor
jne
xchg
(bad)
jmp
mov
add
test
dec
mov
sar
rol
cmc
int3
iret
xchg
inc
inc
pop
test
mov
adc
mov
sbb
je
mov
xchg
pushf
jb
cli
jle
lods
pusha
inc
mov
ret
loopne
add
pop
retf
ret
pop
inc
xor
icebp
jno
inc
or
lock
mov
rcr
push
adc
inc
mov
int3
xchg
mov
adc
mov
or
shr
adc
push
xor
xor
test
mov
scas
sub
popf
push
imul
jo
aaa
pusha
fld
sbb
test
mov
and
xchg
aaa
sub
xchg
ins
ror
pop
and
dec
test
pop
sbb
jb
dec
data16
add
outs
ret
mov
iret
scas
(bad)
call
push
sti
mov
scas
sar
inc
(bad)
imul
cld
sar
es
stos
dec
xchg
aas
pushf
and
mov
pop
xchg
jo
(bad)
jg
jae
imul
mov
ins
push
adc
and
enter
scas
push
and
push
dec
mov
jno
ss
in
sub
or
dec
jg
cmps
addr16
or
cmp
ror
into
pop
mov
(bad)
out
mov
or
sbb
adc
cs
(bad)
sbb
scas
dec
daa
xchg
cmp
lods
clc
adc
jne
xlat
enter
mov
(bad)
pop
sbb
in
sbb
mov
(bad)
fbstp
mov
sar
mov
cmp
xor
or
dec
loope
or
push
fild
adc
xor
xchg
(bad)
mov
loope
sub
std
aam
out
imul
jp
cwde
adc
movs
adc
rcl
(bad)
(bad)
in
push
mov
cmp
mov
aaa
push
xchg
dec
sub
ins
fucomi
aad
cld
mov
mov
push
cmp
adc
push
mov
and
cmp
xchg
jge
jbe
sub
jno
lock
lahf
jbe
inc
mov
sub
add
push
icebp
bound
xchg
cmc
in
(bad)
pop
dec
aaa
mov
cdq
push
mov
iret
js
div
dec
and
jae
push
call
push
fild
mov
mov
mov
lds
push
push
cmp
dec
mov
dec
mov
stos
lods
retf
jl
xchg
add
push
inc
or
lahf
cmc
mov
imul
mov
xchg
mov
xlat
and
adc
sahf
or
loopne
push
pop
fnstsw
shr
sbb
sbb
test
push
jo
mov
test
xchg
pop
mov
pushf
cld
push
enter
mov
xchg
push
hlt
mov
lahf
sub
cdq
shrd
mov
das
sbb
daa
test
and
jns
sbb
and
add
and
push
nop
inc
(bad)
jbe
cld
xor
mov
sub
push
(bad)
and
jmp
push
jb
test
adc
outs
rol
aas
push
and
addr16
imul
jg
mov
pop
std
div
pop
adc
movs
jae
in
sub
sub
out
in
aaa
adc
or
jne
pop
jae
adc
lea
cmp
xor
mov
adc
and
popf
and
das
push
fld
leave
jb
mov
call
(bad)
dec
js
push
pop
mov
cmc
outs
jae
dec
pop
mov
stc
jmp
inc
ja
xchg
jge
add
cmps
popa
stos
pop
movs
enter
mov
int
out
xor
sbb
add
add
ret
xor
pop
lahf
popf
push
jno
pop
fnsave
jne
add
jg
int3
dec
adc
dec
and
and
jnp
mov
inc
in
sbb
movs
xchg
push
mov
push
hlt
ins
push
xchg
lea
dec
test
fisub
int
add
dec
mov
in
fld
mov
lods
retf
mov
xchg
cmp
add
xchg
shl
sub
cmp
and
int
stc
test
loop
aaa
add
jne
mov
mov
cmp
and
push
aaa
jae
and
scas
mov
xchg
sbb
es
xchg
xchg
les
and
outs
jns
and
sbb
xlat
dec
out
jl
imul
lds
outs
nop
mov
leave
clc
pop
retf
aas
(bad)
jb
test
retf
popf
dec
int3
inc
jmp
pop
dec
xor
fstp
pop
retf
add
push
adc
mov
adc
nop
loope
xchg
mov
stos
adc
aad
and
xchg
push
ins
pushf
stos
ret
in
scas
jge
mov
leave
enter
lods
mov
lods
jle
rol
or
outs
adc
mov
sub
std
dec
pop
mov
mov
mov
inc
push
ja
ja
mov
hlt
sti
push
in
imul
clc
mul
jbe
aam
push
cmp
mov
push
and
mov
adc
std
pop
sbb
not
and
jne
or
xor
rcr
dec
inc
sbb
in
int3
push
nop
movs
dec
mov
or
std
cli
sub
push
aam
xor
repnz
sub
stc
smsw
xchg
repnz
push
cmc
psrad
cwde
cmc
fisub
sbb
jle
mov
ins
ins
test
push
and
mov
jo
rcr
in
add
xchg
add
or
fwait
test
loope
jmp
mov
scas
add
push
leave
jne
ficomp
cmp
mov
or
add
inc
dec
les
push
pop
fadd
push
mov
adc
mov
(bad)
fwait
xor
pop
test
pop
pop
xchg
push
in
or
dec
push
inc
std
sahf
or
call
cdq
jb
ret
add
sahf
cmc
mov
call
add
push
jge
xor
and
jge
ja
push
pop
mov
cmp
xchg
push
push
call
and
mov
dec
inc
jge
push
mov
test
and
or
cwde
mov
push
loop
mov
(bad)
sar
scas
or
push
pop
sbb
sub
stos
or
test
xchg
jmp
dec
dec
mov
arpl
xchg
inc
pop
jb
cs
dec
stos
or
jmp
mov
mov
movs
push
xchg
push
and
push
mov
iret
jge
call
dec
adc
scas
loopne
clc
ds
xchg
and
(bad)
outs
add
adc
jno
cmps
das
xor
lds
pop
enter
jae
mov
push
and
sub
add
jns
and
dec
cmc
jae
and
cmp
inc
push
adc
movs
mov
test
sbb
retf
sbb
lock
xor
je
lea
dec
inc
or
fnstcw
pop
adc
inc
pop
and
push
popf
movs
push
rep
pop
add
jae
sub
jns
mov
sbb
push
loop
push
inc
add
std
and
xchg
fsubr
inc
rol
xchg
or
and
loope
test
sbb
repz
jle
pop
iret
add
or
mov
lock
inc
push
and
pop
xor
test
or
xor
lds
sbb
fistp
xchg
ins
aad
imul
push
rcr
sub
mov
mov
jb
leave
repz
call
pop
stos
dec
mov
clc
aaa
out
dec
inc
je
inc
sbb
pushf
out
fcomip
rol
jae
xor
retf
in
or
inc
enter
push
adc
mov
retf
xor
mov
mul
and
cmp
or
sub
inc
adc
dec
sahf
in
xlat
sti
sub
xor
popa
jnp
hlt
in
xchg
clc
pop
cmp
mov
mov
cwde
out
cmp
les
or
test
fsub
fmul
lds
fwait
out
xchg
test
xor
es
in
dec
into
das
push
jne
add
fcmovnu
aas
mov
inc
les
pop
test
sar
pop
pop
add
in
jne
inc
je
push
adc
std
sub
mov
call
in
(bad)
movs
bound
ds
sub
leave
jb
cmp
iret
(bad)
leave
les
fisub
mov
les
clc
mov
jne
mov
pop
popa
inc
cmp
movs
ret
xor
mov
shl
xor
inc
sbb
loopne
dec
add
sti
cld
ret
cld
or
mov
imul
push
and
push
mov
mov
sub
aaa
cld
imul
cmp
movs
mov
push
(bad)
inc
xchg
push
popf
out
mov
jle
cvtsd2ss
pop
xchg
das
sbb
pop
mov
mov
stos
xor
add
dec
mov
sub
cmp
mov
mov
into
pop
pop
pop
push
push
pop
ffreep
daa
jle
int3
cmp
sub
dec
retf
sbb
and
jbe
test
stos
sub
daa
inc
jg
pop
test
loope
iret
push
cmps
fucomi
int3
mov
jg
adc
adc
inc
mov
sub
pop
and
xor
shl
sbb
dec
arpl
jb
gs
xchg
mov
sbb
mov
pushf
in
js
lock
or
mov
push
xchg
jle
mov
test
stos
xor
mov
lea
adc
dec
sbb
xchg
or
(bad)
xlat
xchg
aas
mov
call
test
sbb
or
push
fcom
sub
aad
sub
(bad)
mov
fcomp
cld
test
inc
retf
popf
sbb
ins
xchg
dec
out
sbb
daa
rcl
fist
cmovge
mov
rcl
movs
sahf
adc
rcl
nop
mov
rcl
inc
fnstcw
(bad)
sti
repnz
mov
mov
xor
push
inc
rol
outs
jo
pop
imul
cmp
pop
cmp
imul
xor
mov
jg
outs
cmc
ins
shl
out
mov
pop
push
inc
sub
pop
test
push
inc
mov
movs
sub
(bad)
fst
fldz
mov
fstp
(bad)
mov
ret
pop
clc
add
arpl
aas
dec
jecxz
dec
fdivrp
in
push
xchg
int3
xor
add
push
jge
mov
imul
loope
icebp
call
(bad)
(bad)
addr16
clc
jmp
je
and
dec
push
out
imul
popa
sub
or
adc
mov
cmp
outs
mov
call
(bad)
xor
dec
jno
pop
mov
sbb
jmp
jl
jb
sub
not
jbe
pop
into
xchg
lds
push
loop
fisub
not
arpl
or
mov
cmp
cmp
rol
rol
ins
in
push
push
loope
push
sbb
sub
xchg
int
call
dec
mov
mov
scas
std
aaa
jmp
outs
scas
xchg
add
and
push
push
mov
icebp
jne
cmps
inc
(bad)
inc
out
call
movs
pushf
bound
xchg
jmp
dec
in
sub
jae
sub
add
inc
add
xchg
mov
inc
push
in
(bad)
sub
sub
les
cmp
push
in
mov
dec
xor
ss
daa
pusha
cmps
repnz
pop
sub
cwde
fisttp
push
les
out
aas
dec
or
shl
dec
cmp
addr16
adc
cmp
dec
or
add
inc
popa
int
shl
cmp
and
pop
stos
addr16
or
retf
(bad)
test
int3
inc
(bad)
sbb
pop
ret
aas
cmps
lds
or
inc
in
mov
mov
sub
cmp
into
pop
scas
ret
xor
push
les
leave
setl
sub
neg
mov
mov
or
cs
mov
test
dec
scas
add
add
jae
mov
sub
pop
pop
mov
aad
jo
xchg
out
lahf
cwde
adc
ret
jmp
out
sub
outs
xchg
xchg
cmp
sbb
and
popa
shl
and
shl
shl
loopne
fisub
das
les
jae
enter
pushf
loopne
in
fnstsw
inc
test
mov
call
into
mov
mov
movs
adc
push
push
xor
adc
out
sbb
xor
or
ins
stos
and
sbb
loope
add
jp
lods
jno
icebp
in
shrd
adc
hlt
bnd
cmp
inc
(bad)
sti
sub
inc
test
mov
sub
jp
out
mov
or
push
or
push
adc
(bad)
xor
mov
shufps
arpl
int3
in
dec
xchg
jl
ja
aad
jl
add
inc
fwait
and
or
movs
mov
mov
jnp
retf
(bad)
jg
dec
cmps
or
fidivr
xor
div
jae
in
pop
dec
mov
rcl
cmps
addr16
mov
add
loopne
and
not
js
push
push
(bad)
outs
xchg
pop
jmp
mov
push
nop
mov
ror
cmp
mov
jae
lods
cmp
xchg
clc
clc
cmp
(bad)
js
ret
xchg
std
mov
dec
and
shl
stos
ret
pop
adc
sub
xor
and
cmp
xor
fwait
and
mov
nop
mov
(bad)
out
mov
adc
add
lods
sti
fld
mov
sub
pop
pop
sbb
xchg
adc
clc
sbb
mov
mov
enter
inc
loope
sub
jecxz
push
mov
gs
adc
lock
or
dec
ins
and
arpl
and
add
push
popa
push
scas
movs
fstp
(bad)
sbb
dec
outs
push
push
inc
jnp
scas
popa
xlat
mov
aam
movs
or
jnp
rcl
leave
(bad)
rcr
xor
ja
push
jns
(bad)
fdiv
(bad)
movs
fdivr
xor
lock
(bad)
cmp
mov
jmp
dec
test
xor
cmp
mov
in
or
mov
mov
jmp
es
imul
mov
pop
out
ins
mov
push
cmps
loop
mov
xchg
stc
jb
push
jae
mov
cmp
stos
mov
push
jno
gs
adc
xchg
rol
(bad)
es
lock
lods
pop
inc
sbb
sar
pusha
inc
out
jnp
mov
movs
aad
push
inc
add
daa
adc
es
cli
stos
test
jmp
pop
cmc
push
shr
jne
jl
loopne
jb
mov
add
xchg
popf
and
add
inc
int
std
nop
in
or
popf
mov
cli
xchg
xor
mov
js
inc
nop
pop
sbb
add
xchg
ds
cmc
int
out
test
adc
pop
scas
stos
mov
jmp
add
jae
or
scas
retf
inc
xchg
bound
int3
imul
dec
cmp
xor
movs
sub
call
fcom
xchg
je
cmps
mov
or
push
out
lock
int3
pop
fadd
iret
aad
mov
fdiv
and
mov
sbb
adc
jbe
js
shl
sbb
mov
(bad)
in
cmp
mov
and
or
push
mov
inc
scas
popf
movs
inc
js
xchg
out
mov
and
imul
cmp
retf
pop
(bad)
fxch
call
loop
cld
mov
mov
mov
cld
mov
loope
sub
cmp
mov
hlt
or
pop
xchg
fstp
fst
je
jp
das
dec
add
jo
xchg
ret
test
cmp
bnd
mov
pushf
add
test
ins
pop
mov
aam
rol
cmc
dec
pop
sbb
test
rol
cmp
imul
or
xchg
xchg
inc
dec
cmp
fidivr
rol
rcl
out
jmp
pop
inc
call
inc
std
ins
or
adc
dec
push
mov
jecxz
mov
(bad)
das
sti
cli
cld
popa
sub
jae
and
push
inc
mov
and
push
mov
sbb
in
out
ja
push
fdivr
mov
ss
add
xchg
push
or
mov
inc
sub
jle
jge
out
mov
shr
dec
jmp
jmp
into
gs
(bad)
inc
jnp
shl
jl
sti
neg
lock
pop
(bad)
ja
repnz
ror
aaa
push
dec
sbb
and
ds
sbb
mov
call
lea
fs
ss
dec
sub
mov
adc
xchg
(bad)
(bad)
nop
ror
and
test
jg
(bad)
jns
je
jae
(bad)
push
das
push
mov
(bad)
cmp
jmp
jnp
in
mov
xlat
add
mov
xchg
and
addr16
push
movs
lods
sbb
(bad)
test
rep
dec
adc
dec
pop
test
mov
xor
cli
gs
jle
mov
mov
fimul
fcomp
and
add
scas
retf
sbb
pop
xchg
push
cmp
mul
xchg
shr
sub
fsubr
sbb
scas
rcl
das
ins
pop
xor
les
sub
cmp
retf
adc
adc
popa
cli
and
sub
mov
out
cmp
pushf
loop
jbe
or
add
cmp
mov
inc
or
jae
cmp
push
cmps
stc
and
jbe
stos
imul
ins
into
push
shr
ficom
(bad)
sub
adc
mov
mov
clc
pop
(bad)
adc
dec
repnz
jecxz
push
outs
jecxz
test
test
mov
or
lock
rcr
xchg
pop
sub
push
push
cmp
jle
icebp
imul
int3
sbb
vpmacsdql
cmps
shr
aaa
add
cli
int3
push
add
dec
mov
loop
xor
das
addr16
ins
push
cld
xchg
sbb
adc
xor
or
pop
aad
mov
xor
xor
fdivr
(bad)
mov
xor
jb
repnz
and
imul
sbb
mov
ds
cdq
mov
jmp
jne
or
cld
imul
and
xlat
inc
je
into
mov
fwait
call
mov
nop
push
inc
repz
scas
xor
div
push
jno
loopne
dec
push
scas
add
cmps
mov
aad
sbb
cmp
sub
cmp
mov
in
icebp
mov
cmps
dec
mov
and
in
inc
std
std
daa
retf
push
mov
pop
push
add
cmp
aam
test
push
(bad)
in
out
jne
push
xchg
imul
and
xchg
mov
push
sahf
jmp
bound
aad
icebp
shr
dec
pop
stos
mov
pop
or
stos
push
xchg
(bad)
pop
add
mov
(bad)
cli
imul
or
adc
sub
stc
jnp
call
out
retf
pop
push
(bad)
jp
or
mov
sbb
pop
loope
jmp
xchg
std
mov
jecxz
xchg
add
int3
cmps
xor
mov
mov
lock
push
xchg
mov
adc
push
jle
fild
add
lahf
cmc
push
inc
xor
dec
push
push
sbb
int
adc
xor
fild
pop
sub
rol
cmp
stos
call
shl
jbe
pushf
sbb
xor
jle
add
packsswb
push
loop
fisttp
inc
push
jg
lods
daa
mov
sub
jns
cmp
push
inc
ss
pop
xor
cmc
or
movs
enter
adc
fidivr
fst
cmp
push
xor
fnstcw
ret
pop
cdq
test
sbb
lds
adc
cmps
sbb
pop
(bad)
jbe
aas
mov
xor
data16
(bad)
mov
or
xor
push
aam
arpl
xchg
mov
mov
jae
mov
jge
dec
sub
push
loop
push
pop
mov
push
push
pand
(bad)
int
loop
jno
pop
clc
inc
xchg
xor
cmps
mov
sub
sar
and
pop
inc
mov
int3
dec
(bad)
or
test
adc
out
aad
mov
neg
and
add
mov
shr
mov
lods
jmp
push
jne
add
mov
retf
and
ret
(bad)
push
jae
cmc
movs
(bad)
and
cwde
or
shr
jge
push
inc
mov
jnp
(bad)
push
push
outs
scas
mov
pop
push
push
fild
inc
rcr
mov
and
mov
cmp
cmps
cmps
and
out
cmp
push
push
adc
mov
push
fsubr
rep
das
xchg
mov
nop
shr
comiss
(bad)
arpl
add
dec
sar
mov
sub
pushf
(bad)
outs
loop
shl
rol
jne
xor
xor
nop
jl
mov
jmp
sbb
fidiv
mov
mov
adc
mov
jmp
jmp
jb
(bad)
inc
xchg
scas
and
ret
test
outs
push
sar
add
mov
in
jge
and
iret
and
sbb
jmp
dec
out
rol
(bad)
(bad)
mov
ins
ds
ja
fwait
pop
pop
mov
lahf
cmp
ja
sub
push
push
inc
cmp
loope
cmp
jb
adc
sbb
sbb
mov
popa
fst
mov
dec
push
iret
jb
mov
mov
inc
mov
je
nop
mov
push
in
adc
push
xor
iret
sub
add
inc
(bad)
fbld
(bad)
stc
mov
mov
popa
adc
mov
mov
sub
mov
inc
cmp
xchg
dec
ins
data16
sahf
adc
mov
cmp
int3
cmp
repz
lock
or
add
dec
(bad)
int
mov
and
add
xchg
jb
pushf
cld
adc
inc
mov
in
cwde
jno
jbe
sub
lahf
es
or
cwde
and
pop
xchg
mov
jb
sbb
lods
mov
dec
imul
sbb
cmp
inc
les
push
aas
aad
xlat
mov
mov
cmp
mov
dec
add
xor
push
jns
jo
mov
test
adc
xor
imul
pop
xor
addr16
or
push
jno
enter
imul
js
mov
idiv
xchg
push
jecxz
(bad)
jno
pop
retf
imul
stc
jmp
and
aam
push
(bad)
push
inc
repnz
jg
add
push
sbb
inc
rol
movs
inc
sti
sub
setns
push
inc
dec
jl
aaa
popa
mov
dec
dec
pushf
xor
add
pop
adc
aaa
bound
mov
push
fcomp
inc
test
shr
retf
ss
mov
stos
pop
outs
or
(bad)
out
mov
(bad)
push
jne
sub
or
mov
iret
jb
or
mov
push
jae
dec
fild
ins
xor
dec
test
addr16
push
xor
retf
cwde
jne
sub
push
(bad)
fisttp
xchg
ja
push
sbb
and
loopne
jb
ins
std
fsub
cwde
fucomp
stos
push
ret
mov
stos
jo
inc
je
push
inc
inc
sub
clc
cmp
hlt
movs
rcl
setae
popa
xchg
mov
into
mov
cmp
mov
out
jg
or
clc
mov
xchg
ret
pushf
fwait
xchg
push
jno
stos
pusha
mov
enter
(bad)
lods
push
test
ins
sar
movs
cmps
adc
test
mov
push
dec
sbb
into
popf
ja
ins
jb
sbb
adc
xlat
aam
icebp
(bad)
mov
mov
dec
push
xchg
je
xchg
(bad)
mov
rcl
jnp
ret
sbb
das
lock
cmc
test
adc
cmp
cmp
cmp
add
sti
push
jno
push
add
dec
cmp
sbb
mov
(bad)
arpl
add
xchg
fcmovbe
sbb
cmp
in
pop
rcl
push
mov
xchg
jl
pop
rol
xor
dec
xchg
mov
shl
mov
adc
jle
aam
adc
ja
mov
rol
adc
jno
mov
mov
cli
or
sub
repnz
out
jno
and
pop
sbb
jnp
push
add
sub
xor
push
or
dec
repz
int3
cmps
imul
cmp
and
xor
mov
mov
pop
mov
fsubr
cmp
cmp
arpl
pop
aas
pop
sub
adc
mov
ror
fnstsw
mov
and
dec
adc
fnstenv
stc
inc
push
xchg
mov
stos
push
push
fs
and
xor
dec
rol
ret
mov
or
shl
inc
mov
cld
push
xor
idiv
fcom
mov
sub
fldenv
xchg
mov
movs
jmp
pop
mov
in
neg
xor
retf
loopne
pop
fsub
pop
xchg
loopne
out
sub
push
jmp
fcmovne
sub
lahf
int3
jo
sbb
mov
je
add
add
in
pop
ins
stos
ds
(bad)
cmps
mov
xchg
nop
in
xor
mov
retf
push
and
pop
ret
jmp
sub
lea
test
ret
cmp
leave
and
xor
popa
neg
and
in
outs
xchg
popa
std
call
vpaddusw
cdq
pop
(bad)
ret
push
stos
push
jbe
adc
xchg
add
int3
lahf
jo
add
fidiv
mov
mov
test
xchg
mov
inc
push
int3
aad
rcl
dec
das
xlat
add
sahf
in
and
xor
push
pop
mov
xchg
mov
xchg
mov
leave
push
push
repz
popa
mov
pop
in
rol
outs
xchg
mov
pop
adc
cs
mov
pop
cmp
ror
loope
jbe
lock
mov
cmps
xor
not
xchg
adc
fisttp
cmp
popf
dec
cmps
cmp
xchg
in
push
or
xor
sub
add
adc
jg
mov
jl
loope
push
loopne
push
mov
xchg
dec
icebp
mov
adc
out
dec
add
lock
dec
cmc
shl
mov
fldenv
das
and
xor
mov
mov
mov
cmp
cmp
(bad)
test
sbb
or
into
inc
jb
mov
icebp
daa
sahf
fs
inc
inc
in
mov
sub
add
xor
xchg
dec
jp
je
dec
cmp
loope
push
fs
fisubr
mov
xor
mov
std
gs
pop
lods
jle
adc
les
cwde
dec
jge
sbb
mov
cmp
cmps
cmp
and
stc
mov
or
fsub
pop
inc
mov
jle
mov
pop
test
mov
jns
call
mov
loopne
push
clc
(bad)
cwde
(bad)
cmps
fdivr
cdq
cmp
mov
cmc
int3
cmp
imul
ins
pop
sbb
aaa
dec
mov
rcl
cmps
pop
shr
retf
sub
cmp
push
ins
jb
out
cmp
(bad)
aas
dec
dec
fscale
pop
mov
pop
nop
xchg
add
adc
popa
inc
mov
adc
into
dec
pop
imul
loope
mov
push
loopne
in
jo
and
or
and
add
imul
xchg
rol
push
xchg
cmp
inc
mov
jecxz
push
xchg
push
xchg
(bad)
loope
pop
push
cli
daa
fucom
imul
lock
adc
push
aas
sbb
add
jecxz
cmp
mov
lods
pushf
repnz
shl
fist
xchg
xor
mov
cmc
add
loope
dec
pushf
clc
push
in
cmp
mov
cs
adc
push
aam
mov
clc
add
out
jmp
iret
mov
(bad)
aad
cmp
call
sar
fld
sar
das
jae
aas
adc
or
or
or
arpl
ret
mov
(bad)
cs
xchg
pop
dec
sbb
sub
call
ret
cmps
inc
jg
jo
pop
imul
jnp
loop
xchg
mov
and
xor
stos
inc
out
ffree
and
out
lods
xor
lods
mov
fiadd
jae
rcr
sbb
mov
test
movs
mov
mov
shr
jle
push
dec
popa
es
std
pop
dec
neg
sahf
int3
xchg
loop
inc
ja
add
adc
pop
xchg
fwait
call
jp
jl
and
call
fidivr
push
pop
fst
les
and
inc
pop
mov
adc
xor
pop
rcl
xlat
cs
xor
cld
cmp
jno
sub
aam
movs
jne
sub
loopne
mov
mov
(bad)
in
aas
jmp
in
sub
push
xchg
dec
scas
push
xor
das
cmc
loop
and
ins
push
int3
mov
imul
test
shl
push
loope
sti
and
call
add
mov
mov
(bad)
fwait
jae
jmp
mov
push
mov
jle
aas
dec
sti
inc
cmp
rcr
push
inc
xchg
in
jp
fwait
sbb
sub
stos
fmul
addr16
inc
push
jmp
aas
shr
cmc
aad
in
jg
addr16
ja
(bad)
pminsw
les
xchg
pop
test
lock
aam
mov
out
(bad)
(bad)
cdq
stos
idiv
mov
popa
adc
push
test
and
and
sbb
aad
adc
dec
adc
mov
mov
daa
pop
rcr
mov
scas
sbb
scas
js
jp
ret
pop
mov
and
or
leave
xchg
pop
lock
mov
push
arpl
aad
popf
inc
inc
aam
mov
sub
pusha
jecxz
inc
cmps
cdq
xor
mov
sahf
pop
out
retf
out
pop
mov
ds
sbb
ret
xor
mov
mov
xor
ret
call
fdivr
lds
pop
loope
rcr
loop
icebp
leave
or
in
push
pop
cwde
and
jp
sbb
jle
cli
jmp
sbb
inc
mov
int3
mov
xchg
jge
std
inc
or
mov
test
cs
pop
jecxz
ins
mov
cmp
mov
cs
movs
aas
aam
out
inc
xlat
dec
ror
scas
int
add
sub
sbb
retf
es
add
inc
cwde
inc
pop
call
inc
mul
clc
jg
nop
pop
mov
mov
iret
and
sub
aas
mov
das
ss
sub
jo
loopne
test
xchg
xchg
cli
sbb
push
test
mov
or
dec
icebp
push
(bad)
jno
inc
inc
jmp
pop
push
push
or
jp
mov
cmc
xor
jle
and
std
and
and
adc
aas
shl
xor
jo
and
fwait
jb
inc
pop
push
adc
arpl
dec
aas
bound
fstp
dec
in
sbb
shl
shr
adc
jle
call
retf
std
push
je
ror
outs
sub
mov
or
ret
iret
xchg
loop
ja
aam
mov
inc
mov
add
push
pop
test
push
jae
fbstp
rol
aam
sub
mov
jo
jge
cld
outs
inc
sbb
mov
es
add
fcomi
dec
adc
jbe
stos
jl
in
sbb
fwait
sub
adc
adc
cli
xlat
addr16
mov
xchg
(bad)
mov
mov
push
movs
or
outs
pushf
dec
popf
cmc
mov
cmp
retf
sti
fidiv
mov
cmp
or
sbb
add
aad
cwde
ror
inc
ror
adc
dec
sub
xor
test
ja
leave
mov
and
and
cmc
mov
mov
enter
and
lods
imul
stos
cmc
mov
sbb
aam
mov
pop
mov
rcl
sbb
xor
dec
push
nop
arpl
shl
stc
mov
pushf
push
hlt
jmp
icebp
inc
iret
pop
and
mov
add
retf
push
sub
jb
daa
mov
test
xchg
int
cmps
mov
ret
push
lea
jecxz
cmp
in
pop
gs
rcr
movs
jl
mov
add
mov
repz
or
xor
js
push
dec
push
xchg
outs
push
sbb
xchg
lahf
inc
out
rcr
popa
ret
cmp
mov
in
push
adc
cmp
and
pop
out
cld
pop
dec
mov
addr16
repz
push
mov
sub
mov
loop
retf
js
test
mov
push
mov
sub
jb
test
and
xchg
inc
adc
mov
and
mov
rcr
add
jle
mov
(bad)
jbe
in
js
jmp
mov
scas
xor
fstp
dec
out
fidivr
fnstsw
in
leave
dec
call
es
jmp
fcomp
mov
jno
push
jmp
xchg
imul
mov
inc
jbe
nop
repnz
nop
jne
fwait
cs
call
inc
sbb
js
sub
lock
push
stos
add
retf
dec
mov
jnp
mov
xor
adc
in
into
inc
xchg
xchg
add
fstp
test
or
ins
jo
out
not
test
cmp
lock
popf
div
aaa
mov
mov
ja
and
add
pop
aas
cmp
inc
add
test
mov
mov
sbb
dec
and
mov
arpl
lahf
(bad)
pop
or
mov
add
mov
js
mov
call
aas
ds
mov
call
push
repnz
fcom
sub
mov
dec
cli
sti
retf
lods
jae
lods
movs
xor
pop
aam
dec
inc
aas
fwait
or
data16
push
sub
mov
push
pop
ror
mov
pop
and
sbb
sar
scas
pop
or
add
push
in
and
cld
mov
xchg
aas
mov
mov
push
fdiv
dec
xor
mov
and
xor
repz
cmp
xchg
mov
lea
inc
jle
test
push
or
add
push
xor
cmp
psubusb
js
movs
pop
jne
lea
popf
and
cdq
xor
clc
stos
out
test
mov
imul
cmp
scas
aam
xor
mov
jg
pop
je
loop
add
je
mov
lock
or
inc
aad
imul
jle
js
ficom
add
push
and
(bad)
repnz
pop
mov
les
cdq
mov
ds
fnsave
and
aas
popf
xchg
pop
test
adc
and
mov
movs
sub
push
jg
int3
or
sahf
std
mov
es
sub
imul
mov
rcr
out
into
push
inc
bound
sahf
or
shl
cs
jge
add
sti
xchg
jmp
arpl
adc
jge
cmps
jp
cwde
ja
cmp
or
or
ret
mov
xchg
pop
ins
push
fisttp
gs
(bad)
je
int
aas
mov
adc
in
sbb
xchg
lods
mov
xor
xchg
pop
loopne
pop
sbb
mov
xchg
scas
out
ins
ret
shl
jb
pop
int
cmps
xchg
xchg
xchg
add
clc
sbb
(bad)
sub
in
pop
out
jg
jmp
mov
cmp
jl
repnz
int3
push
push
add
xlat
jp
add
adc
icebp
mov
clc
imul
lds
out
gs
in
dec
cs
loope
mov
cld
mov
dec
or
stc
mov
cdq
jge
sub
sbb
and
sub
dec
into
xor
push
fcomp
push
mov
outs
fild
push
push
shr
mov
push
(bad)
fidiv
xchg
jmp
out
add
adc
dec
(bad)
enter
pop
dec
jnp
adc
or
out
pop
mov
and
inc
xor
ret
sub
outs
retf
sar
cwde
(bad)
lock
add
mov
jl
int
and
xchg
out
adc
dec
cwde
cli
push
pop
adc
cmp
mov
mov
or
jae
pop
movs
mov
mov
pop
std
pop
push
push
ins
fbstp
mov
mov
int
mov
dec
mov
and
inc
xor
cmp
ficom
sub
imul
int
shr
inc
leave
xor
fdiv
pause
add
lahf
and
mov
jno
and
loope
pop
cmps
push
add
aas
out
jno
jns
jno
cmp
mov
mov
outs
retf
add
stc
call
jae
mov
iret
sub
fist
mov
mov
gs
xlat
or
(bad)
mov
mov
out
add
stos
(bad)
mov
and
mov
ror
rcr
cmp
cmp
mov
dec
xchg
repz
ret
jecxz
adc
xchg
mov
jno
xor
push
fisttp
sahf
dec
iret
and
mov
xchg
movs
imul
xor
sahf
out
inc
adc
js
adc
xchg
sub
cmp
inc
out
clc
ja
sbb
xchg
cmp
jns
pop
in
pop
addr16
ror
adc
loop
lods
ret
sub
fldenv
test
retf
inc
jo
xchg
idiv
or
mov
iret
test
jl
test
mov
xor
test
mov
lods
xchg
add
mov
imul
push
jmp
xor
sbb
retf
out
stos
jge
addr16
lods
jnp
imul
or
es
icebp
aas
dec
addr16
mov
daa
inc
and
ucomiss
rcr
mov
push
add
and
fwait
push
aas
jae
cli
scas
sbb
lds
mov
xchg
and
lock
fnstsw
movs
jb
or
mov
mov
dec
xchg
scas
frstor
cmp
pusha
mov
rcl
fnstsw
add
inc
dec
test
scas
addr16
jbe
aam
jg
das
movs
(bad)
data16
ins
enter
adc
scas
adc
xor
test
or
lahf
ins
int
xor
and
mov
sti
mov
cmp
mov
mov
test
ds
pop
sbb
dec
xor
lahf
test
in
sar
cli
leave
out
cmps
clc
popf
fdivr
inc
inc
inc
addr16
inc
jmp
adc
push
fcomip
call
pop
xor
fild
cmps
and
inc
mov
ss
std
push
mov
dec
scas
leave
fdiv
rcr
adc
jnp
mov
loopne
inc
lods
push
(bad)
rcr
sub
xchg
pop
stc
jmp
add
xchg
ss
aas
xchg
mov
sahf
inc
shl
pop
rol
into
aad
arpl
les
and
movs
(bad)
into
jl
or
sub
js
or
sub
xor
mov
clc
cmp
repz
jae
push
mov
dec
push
cmp
aad
outs
aas
inc
loopne
mov
mov
fs
inc
imul
test
cmps
and
pop
cmp
fistp
lods
mov
fmulp
dec
cmp
fistp
leave
outs
movs
mov
aaa
or
add
test
sahf
(bad)
adc
out
sbb
lods
into
push
pop
retf
push
add
add
out
or
aaa
inc
call
jns
or
push
push
adc
cwde
ret
ret
push
sbb
rol
mov
mov
mov
ins
rol
pop
shl
cmp
fstp
xchg
bnd
jns
and
jb
dec
cmp
mov
adc
or
push
sub
test
adc
lock
or
pop
jbe
das
mov
sub
inc
iret
sub
jno
sub
in
or
or
scas
xchg
daa
add
adc
mov
rcl
dec
imul
mov
inc
jg
xchg
fucomp
dec
jp
jo
and
icebp
mov
pop
adc
or
inc
nop
inc
div
(bad)
retf
inc
jl
in
mov
mov
xchg
adc
aam
push
out
movs
jbe
mov
dec
mov
fisttp
aas
mov
mov
sti
gs
in
cmp
xor
repnz
xlat
jle
addr16
gs
gs
and
inc
adc
jmp
stc
pop
sbb
imul
(bad)
add
es
popa
xlat
xor
add
xchg
popf
jne
repz
xor
add
test
sbb
jmp
xlat
cmp
pop
mov
stos
lahf
repz
scas
mov
mov
pop
daa
lods
jge
inc
dec
inc
xchg
xlat
nop
inc
sahf
mov
mov
pop
sbb
not
ror
xchg
cmp
push
xor
les
sub
jecxz
add
shl
sub
rcl
clc
les
cmps
mov
out
enter
iret
push
or
call
sub
inc
push
jb
int3
xor
mov
push
mov
mov
fcmovnbe
shr
cmp
dec
mov
test
pop
fmul
mov
dec
or
test
add
adc
imul
sbb
mov
test
mov
mov
add
fcmovnu
xchg
xchg
arpl
xor
mov
(bad)
and
add
add
push
sar
in
movs
jno
ror
pop
and
push
inc
xor
imul
or
scas
and
cmp
cli
(bad)
rcr
int
sbb
and
fild
das
mov
imul
test
mov
xchg
xor
add
jp
or
jo
sti
dec
inc
push
or
mov
push
inc
fisub
retf
sbb
test
xchg
adc
xchg
test
or
movs
mov
xor
xor
push
dec
inc
in
shr
and
mov
pop
push
call
mov
ja
out
push
sbb
xor
fisttp
ss
mov
rcl
inc
add
mov
or
data16
cmp
scas
call
rcl
pusha
scas
call
and
gs
and
mov
std
adc
xchg
gs
sbb
xchg
adc
fild
mov
mov
mov
mov
sbb
sub
inc
mov
pop
inc
or
sub
test
fsubr
pop
test
or
fidiv
imul
lock
xor
in
jae
dec
mov
sbb
(bad)
sub
ret
add
push
mov
sar
xchg
ja
lea
cdq
push
pop
ins
jnp
add
mov
xchg
sbb
pminsw
dec
jno
scas
fwait
jno
repnz
scas
push
loopne
sub
repz
push
cmps
outs
cmp
adc
push
mov
outs
shl
dec
add
xor
fwait
inc
xchg
and
xor
dec
push
lea
js
std
mov
and
pushf
inc
fwait
ret
cdq
push
ficom
ins
pop
push
push
hlt
or
lahf
ficom
xlat
pushf
jl
nop
loop
loop
adc
sub
xor
and
sbb
jmp
je
(bad)
xlat
sbb
adc
mov
dec
push
jo
dec
push
add
lea
sub
inc
jnp
imul
imul
mov
jmp
test
push
xchg
and
arpl
lahf
mov
cmps
test
cli
jnp
cmp
addr16
cmps
mov
std
xchg
mov
pop
mov
push
scas
cmp
jb
loop
call
bound
and
push
je
xchg
jbe
xlat
mov
dec
out
movs
test
je
jecxz
ja
and
fcomp
les
mov
clc
add
and
in
and
pop
shl
mov
popf
mov
outs
fistp
cmp
in
out
mov
in
(bad)
icebp
push
sub
mov
adc
cs
scas
xchg
cmps
adc
in
mov
pop
push
mov
xchg
test
or
in
(bad)
fisubr
add
adc
stos
in
mov
inc
xor
retf
sub
pop
shr
inc
lea
aam
cmp
pop
dec
fucom
popf
shr
lock
lds
sub
cmp
enter
push
pop
mov
cdq
fimul
mov
sub
jns
mov
push
xor
pop
mov
and
sub
jo
js
sbb
sub
icebp
push
and
arpl
leave
sbb
iret
dec
adc
call
lds
sbb
pop
and
es
stos
xchg
mov
jge
dec
pop
xor
shl
mov
movs
ja
in
add
loop
retf
add
lds
push
(bad)
mov
jecxz
adc
movs
and
pop
xchg
sbb
xor
pop
out
lea
jg
push
and
ror
cmps
xor
int3
dec
push
xchg
xchg
pop
retf
fmulp
dec
dec
sub
ja
outs
lea
or
les
ins
div
test
movs
enter
pop
push
mov
jb
mov
jp
dec
out
add
sub
retf
ja
xor
xor
div
adc
adc
add
clc
enter
lock
dec
rcl
mov
fs
or
mov
ds
scas
arpl
add
(bad)
ins
jmp
pop
or
bound
mov
cmps
dec
ret
jnp
xor
mov
call
repnz
call
push
icebp
cmc
pushf
dec
add
jl
adc
xchg
xlat
xlat
pop
jecxz
ss
xor
aaa
sahf
jbe
in
mov
aad
das
movs
call
push
icebp
loope
jp
shr
sub
bound
jl
fcom
xchg
lods
mov
(bad)
dec
adc
outs
imul
adc
and
mov
sar
popf
pop
sar
xchg
aad
outs
(bad)
test
rol
and
scas
shl
enter
jns
adc
test
mov
out
xchg
iret
pop
and
lds
popf
call
pop
jmp
dec
mov
inc
push
pop
mov
xchg
pushf
or
dec
mov
pop
xor
cmp
sbb
jnp
dec
mov
and
cmp
sub
test
cmp
and
(bad)
and
lock
mov
cmp
cmp
cmp
or
mov
cmp
lds
mov
shl
xlat
out
push
jg
jno
sbb
rcl
xor
fadd
ss
adc
push
add
(bad)
cmp
push
nop
ficomp
jecxz
xor
(bad)
sub
hlt
pop
pop
mov
mov
inc
push
(bad)
call
or
inc
adc
cmp
fcom
mov
cs
bound
cmps
cmp
cmp
sub
xor
in
(bad)
mov
cmp
mov
sbb
aad
adc
addr16
dec
and
add
sub
stos
inc
dec
loope
fiadd
mov
cmp
cmp
and
in
xor
je
mov
aaa
mov
call
enter
pop
mov
add
adc
daa
inc
mov
daa
jae
dec
mov
inc
mov
push
dec
mov
or
jg
lahf
xchg
cmp
xchg
ins
pop
push
ins
mov
mov
pop
cmp
addr16
push
leave
inc
mov
mov
mov
or
pop
dec
dec
mov
into
lds
gs
movs
mov
pop
jecxz
pop
fld
mov
sbb
xchg
pop
mov
mov
xchg
mov
not
fwait
movs
icebp
movs
popf
mov
or
cmp
mov
jl
lds
or
mov
aaa
iret
(bad)
pop
pop
jle
out
push
jmp
and
les
sub
jp
sbb
lods
pop
sbb
and
movs
or
in
rcl
retf
push
aam
dec
push
adc
rcr
rcl
jle
nop
(bad)
jge
inc
data16
pop
push
call
adc
dec
gs
xchg
leave
add
mov
adc
in
in
inc
loopne
or
sub
jle
rcr
push
cmps
fisttp
inc
repnz
stc
ins
pop
ss
std
aam
xchg
rcr
jl
xor
sti
clc
sbb
out
sub
ror
out
stos
scas
and
inc
mov
sub
bnd
addr16
xor
arpl
dec
xor
lock
xor
push
cmp
mov
sahf
dec
push
inc
and
mov
adc
(bad)
mov
aaa
pop
mov
xchg
movs
cmp
fcom
xchg
add
iret
loopne
xor
mov
cwde
js
mov
stos
scas
jmp
je
xchg
mov
jle
cmp
mov
dec
retf
dec
add
retf
in
pop
cdq
das
mov
dec
(bad)
jmp
shr
xor
cmp
test
dec
xor
in
mov
mov
mov
(bad)
ins
cmp
sbb
rcr
push
add
cmps
and
sahf
sub
pop
xchg
xchg
xchg
sub
repz
outs
adc
out
aad
ror
add
cmp
dec
add
xor
sbb
out
jge
ret
and
daa
movs
xchg
mov
pop
mov
icebp
sahf
stc
or
mov
call
cld
add
das
xor
movs
push
or
and
sub
fbld
rdpmc
mov
add
into
jl
stc
lahf
cmp
or
dec
fmul
or
push
jmp
mov
inc
dec
dec
mov
icebp
mov
lods
add
xlat
jae
lea
mov
or
sbb
dec
and
sub
cmp
dec
sbb
mov
stos
cmp
add
cmc
ja
cwde
pop
fimul
ss
sti
stos
test
lahf
mov
adc
(bad)
push
xor
pop
jno
fld
sub
out
adc
cld
inc
out
fisub
and
add
pop
mov
icebp
popa
ret
mov
retf
or
out
xchg
xor
xchg
or
and
mov
sbb
xchg
arpl
int
pusha
inc
es
pop
pop
xchg
push
daa
popa
push
xchg
push
inc
or
and
dec
enter
call
xchg
mov
movs
fiadd
xchg
inc
push
xor
lahf
enter
cwde
and
or
cdq
(bad)
test
out
repnz
cld
push
out
push
ret
ret
mov
mov
imul
inc
push
xor
mov
ret
sahf
les
stc
ins
pop
test
push
imul
lea
js
dec
imul
add
inc
mov
or
sahf
aas
add
mov
mov
pop
or
dec
retf
pop
test
js
in
xchg
aas
pop
lahf
iret
(bad)
cmps
push
movs
outs
mov
mov
dec
inc
fist
fs
jae
ret
mov
xlat
in
xlat
mov
(bad)
sub
cmps
pop
jge
pop
nop
scas
and
or
fidivr
fstp
pop
push
jmp
imul
lahf
push
xchg
fiadd
jno
cmp
pop
or
sbb
cmc
and
cmp
arpl
cs
outs
fst
mov
das
mov
mov
mov
mov
mov
mov
dec
cmp
cmp
sar
int3
fstp
lods
popa
pop
jb
into
call
inc
inc
mov
xor
mov
cmp
jne
ins
je
xor
mov
inc
sbb
jmp
sub
mov
mov
std
fisttp
push
sub
cmp
xor
das
cmp
int
pop
setb
pusha
out
mov
jl
pop
loope
loopne
fcomp
mov
inc
outs
cdq
lahf
jns
jmp
or
xchg
and
inc
sbb
pusha
in
mov
push
push
stc
daa
mov
inc
mov
xor
adc
or
inc
sub
mov
mov
sub
mov
adc
xchg
add
jb
ss
call
mov
jns
sub
jl
shl
mov
loopne
ja
mov
xchg
mov
jmp
push
jbe
xor
push
out
sub
mov
test
(bad)
and
sbb
emms
imul
call
repnz
mov
int
sub
xchg
or
out
sub
enter
sbb
mov
mov
mov
push
xor
pop
pop
inc
dec
jmp
mov
mov
xor
xchg
stos
je
ffreep
xor
mov
pop
sub
scas
pop
clc
cdq
movs
je
jl
scas
test
fmul
jge
xchg
mov
sub
mov
test
mov
into
popf
leave
jo
test
mov
popa
mov
pop
sub
rcl
addr16
add
aaa
test
and
(bad)
adc
mov
pop
loope
aam
lahf
sbb
int3
inc
mov
lahf
imul
sub
xor
push
in
sub
mov
jecxz
xor
dec
push
dec
popa
fldz
pop
xor
adc
xlat
adc
mov
push
call
cwde
hlt
pop
mov
mov
fdivr
mov
cmp
and
or
inc
rcr
lods
ss
sti
std
sbb
loopne
js
(bad)
cmc
adc
and
cmp
test
jl
or
ret
out
loopne
push
frstor
push
push
movs
pusha
out
or
loope
loopne
push
imul
cmc
cmp
loop
adc
retf
inc
mov
sbb
iret
or
call
mov
inc
sbb
jecxz
push
xchg
je
sahf
fistp
out
pop
call
sub
pop
ds
xchg
pop
pop
cdq
ja
(bad)
and
inc
test
and
outs
movs
ret
out
pop
fisub
pop
loop
jns
adc
mov
mov
jns
movs
lods
adc
cmc
xor
loopne
mov
test
add
fisttp
xchg
xor
dec
and
cmps
(bad)
or
out
iret
push
fdiv
je
cmps
sub
call
and
gs
adc
out
movs
ret
pop
mov
mov
mov
out
dec
and
xor
jg
mov
mov
mov
and
jo
xor
pop
mov
inc
pop
ror
pop
dec
add
pop
adc
dec
sahf
or
pusha
push
inc
ret
nop
iret
pop
(bad)
bound
sub
fild
rcl
in
retf
cmps
loope
jle
pop
test
adc
mov
es
pop
cmps
xchg
outs
inc
mov
cld
mov
int3
aad
jmp
test
sub
loope
enter
xor
sub
out
push
ret
lock
mov
sbb
cmp
xor
add
bound
mov
cmps
xor
xor
popf
sbb
fwait
or
cmc
mov
nop
jmp
xchg
add
sub
push
daa
cmps
or
fld
xchg
fcomp
jle
jbe
dec
mov
int
xor
mov
into
jp
ja
ja
sbb
and
aad
movs
fsub
mov
inc
push
test
stos
mov
jne
sbb
cdq
jae
mov
jae
inc
call
xchg
mov
(bad)
cmp
and
or
ds
das
test
push
ret
cdq
adc
xor
push
fcomp
jnp
pop
mov
adc
jmp
test
aaa
rol
fs
jmp
pop
dec
or
inc
jb
or
pop
aas
fcmovnb
loope
xchg
mov
xor
jmp
cmps
sub
lea
ds
push
test
mov
or
fdiv
pushf
mov
xor
and
inc
jmp
and
sbb
jo
inc
cmps
sti
out
ins
cmp
mov
je
pop
xchg
ficom
je
ficom
cmp
fisubr
ror
movs
dec
shl
and
loope
adc
inc
adc
jb
pop
or
in
retf
add
pop
repnz
jbe
test
dec
add
les
mov
or
and
adc
mov
retf
hlt
push
jp
cmp
cmp
test
lds
scas
dec
mov
outs
test
add
scas
lahf
aad
iret
mov
arpl
test
adc
mov
mov
fisub
sub
movs
in
adc
fadd
(bad)
adc
retf
(bad)
fwait
sub
xor
pop
fwait
jnp
xor
cmp
mov
sar
dec
mov
xchg
fadd
and
lock
add
adc
jo
sbb
sub
cmps
cdq
pop
loop
sub
pop
aad
int3
(bad)
push
test
fcmovne
test
sbb
pop
in
and
stos
out
jp
inc
mov
adc
jp
xchg
repz
std
fwait
pop
aam
fadd
daa
sbb
jmp
mov
mov
inc
inc
mov
out
inc
fldcw
out
mov
call
mov
and
mov
(bad)
jmp
xor
or
cmp
pop
xor
push
dec
mov
push
sti
and
pop
movs
pusha
mov
inc
adc
or
mov
xchg
popf
jle
mov
retf
inc
push
frstor
movs
shr
rcl
cmp
push
xchg
mov
stos
mov
adc
fwait
bound
rol
xor
daa
enter
inc
or
je
out
std
push
xlat
out
jo
xchg
or
xchg
fcomp
add
jle
clc
repnz
call
(bad)
stos
dec
mov
or
mov
mov
leave
aas
sbb
jae
dec
mov
test
jg
loop
pop
xor
test
inc
cmps
add
cs
xchg
pop
mov
loope
xor
retf
xchg
nop
movs
fdivr
dec
ins
popf
lea
mov
xor
bound
pop
dec
sbb
loope
inc
mov
pop
mov
test
(bad)
mov
dec
xor
mov
shr
(bad)
and
pop
adc
dec
fiadd
mov
aam
dec
ss
pop
in
cmp
aaa
ret
mov
xor
ds
cld
mov
jns
cmp
xor
arpl
jne
and
inc
adc
sahf
in
jns
bnd
addr16
xor
xchg
or
adc
jo
or
or
cmps
cli
jge
cmp
sbb
dec
inc
inc
add
push
dec
jne
sar
push
mov
cmp
jmp
xchg
mov
sub
out
mov
dec
mov
jmp
dec
gs
(bad)
mov
cmp
dec
sahf
jmp
xchg
in
jle
or
imul
adc
lahf
inc
call
iret
inc
or
jnp
xchg
jl
inc
hlt
pop
ins
jg
fld
cmp
push
push
inc
or
shr
jg
mov
lods
pop
out
inc
ins
inc
mov
outs
(bad)
cmp
mov
out
popa
das
adc
addr16
dec
jb
daa
sbb
sti
cmc
pop
adc
or
push
or
and
xchg
xchg
js
paddsw
inc
stos
(bad)
ret
ffreep
mov
mov
or
mov
cli
scas
fsubrp
push
movaps
push
dec
jmp
xor
pop
and
xchg
mov
sahf
fcomi
into
dec
sahf
ror
push
xor
arpl
and
push
retf
dec
pop
fs
retf
icebp
loopne
mov
ss
sbb
iret
jns
xor
mov
repz
fst
xlat
push
stc
xchg
stc
ins
add
repnz
or
ret
outs
xchg
and
test
dec
daa
lods
xor
inc
jg
out
add
repz
mov
fcmovne
loop
in
add
jle
inc
pop
std
(bad)
out
in
xor
fsubp
loope
dec
xchg
mov
pop
jo
inc
cmps
jp
(bad)
pmulhuw
scas
leave
adc
adc
sahf
out
arpl
cs
mov
inc
call
ss
mov
xor
and
jecxz
add
aaa
adc
test
xor
sub
out
mov
scas
mov
in
jecxz
mul
xchg
xor
movs
jnp
jge
cmp
gs
xor
add
adc
add
sub
cld
gs
ins
ror
mov
cli
cld
xchg
dec
not
(bad)
jb
jb
dec
push
cmps
mov
jge
cmc
in
out
mov
jmp
in
xchg
out
push
mov
mov
mov
cmp
mov
mov
push
pushf
test
test
add
jge
sub
dec
jg
mov
cmp
call
mov
mov
pop
stc
cmp
inc
jecxz
(bad)
cld
call
push
sub
mov
xchg
mov
ins
mov
test
into
je
cmc
test
fwait
in
stos
pop
mov
mov
xor
loop
pop
xchg
sub
and
push
pop
adc
ror
sub
test
scas
retf
inc
dec
and
int
test
fwait
lea
pusha
cdq
pop
add
sbb
jg
sub
jl
or
xor
and
js
xchg
push
or
mov
ror
push
inc
sbb
xchg
xor
into
test
out
sub
stos
mov
ja
jge
(bad)
je
je
mov
shufps
pop
ds
aad
sub
cdq
popf
adc
call
(bad)
cmc
in
fwait
pop
jl
icebp
hlt
fs
ds
mov
test
add
inc
into
sub
jb
inc
or
loopne
gs
fdiv
jl
sbb
sub
xchg
jno
push
xor
mov
je
xchg
fist
lods
aaa
enter
retf
iret
loopne
out
and
jnp
bound
sbb
icebp
fcomip
sti
inc
jns
mov
das
sbb
sub
lods
(bad)
div
imul
inc
push
cmp
push
pop
mov
xor
fs
adc
sub
dec
js
(bad)
or
mov
mov
jle
mov
mov
fsub
retf
jmp
ins
xor
cmp
pop
adc
xchg
sub
mov
into
les
mov
pop
fbstp
push
std
mov
inc
add
ficom
adc
fwait
or
inc
and
out
sub
scas
cmps
es
(bad)
mov
loope
mov
scas
out
dec
jmp
pop
sub
mov
push
lea
out
cs
inc
mov
jmp
(bad)
xchg
mov
add
cmp
inc
mov
mov
adc
ins
stos
xchg
ins
mov
cmp
aam
repnz
daa
ss
jbe
stos
cdq
out
sti
adc
fcomp
pop
pop
out
test
xchg
or
cmp
(bad)
pop
ja
jg
add
lea
in
and
xlat
xchg
ja
dec
out
pop
mov
mov
adc
mov
test
loope
sbb
retf
jbe
je
pop
add
fsub
or
je
sub
rcr
loop
inc
gs
mov
pop
push
addr16
cmp
inc
xchg
(bad)
enter
cwde
outs
dec
pop
mov
fwait
jp
cmp
mov
mov
pop
mov
adc
pushf
pop
push
test
jb
inc
fisubr
or
sbb
push
push
or
cmp
das
inc
inc
sub
jp
mov
jo
or
xchg
cwde
test
stos
or
fld
das
cmps
cmp
and
mov
push
out
xchg
xlat
(bad)
xor
mov
adc
test
fs
xchg
mov
push
cdq
fnstenv
call
jl
cmp
out
sbb
sub
pop
lahf
comiss
mov
jle
push
and
pushf
cmp
cmps
mov
mov
pop
xchg
mov
cmps
pop
ret
ret
aam
adc
xchg
add
pop
(bad)
jmp
xor
out
sbb
add
jo
imul
sar
jns
push
push
dec
lea
shr
retf
pop
pushf
loope
xchg
lds
jno
iret
(bad)
mov
repnz
and
aas
mov
fimul
inc
mov
inc
retf
sbb
data16
jbe
inc
and
jl
mov
cmp
adc
(bad)
mov
cmp
and
lea
add
mov
daa
mov
test
(bad)
out
imul
icebp
mov
push
dec
iret
xor
cmps
or
adc
jl
sar
mov
adc
xchg
and
das
frstor
and
test
in
scas
int
test
repnz
push
sub
add
adc
ds
ss
sti
bnd
mov
add
add
push
gs
ja
fdiv
jae
das
and
sub
sub
pop
std
mov
outs
and
pushf
into
cmp
dec
mov
add
std
rcl
sub
(bad)
sti
(bad)
xlat
call
pop
movs
push
sub
sahf
pop
pop
mov
addr16
int
fwait
mov
sahf
adc
retf
stc
push
jge
loopne
sub
jge
pop
push
mov
out
scas
popf
pop
mov
adc
fdiv
(bad)
movs
xchg
popf
in
arpl
(bad)
sbb
lock
movs
cmc
shl
and
stc
sub
xchg
(bad)
gs
call
arpl
(bad)
mov
int3
mov
movs
int3
push
jae
sub
dec
xor
add
and
xchg
ins
jecxz
fwait
aas
(bad)
mov
and
sub
mov
inc
hlt
jle
int3
out
call
imul
sti
push
out
and
stos
cmp
shr
je
test
nop
add
and
retf
fiadd
cld
mov
xchg
outs
jns
out
mov
nop
out
mov
dec
adc
scas
xor
mov
retf
cmp
dec
les
retf
sub
cdq
das
jp
dec
sbb
sbb
pop
jae
out
imul
adc
xor
repnz
push
rcr
sub
test
(bad)
adc
jne
cmp
out
push
xor
loop
retf
xchg
inc
sub
ret
test
xchg
pop
add
std
jmp
ret
jecxz
das
inc
inc
mov
mov
adc
mov
aaa
(bad)
adc
outs
adc
lds
push
int
rol
int
and
jle
xchg
xor
jmp
cmp
in
mov
pop
into
and
sti
push
repnz
(bad)
cmp
ficom
cmp
ins
jg
push
xchg
adc
mov
jle
add
xchg
ins
cmp
lds
push
addr16
shr
bound
fs
cli
ins
out
fdivr
sahf
or
mov
mov
inc
jmp
push
rcr
enter
mov
test
inc
je
dec
xor
fcomp
and
ret
call
loop
daa
inc
std
xchg
clc
sar
dec
xor
sar
gs
icebp
jmp
sahf
xor
or
aam
stc
lods
push
jle
jns
stos
outs
push
cmp
inc
cmp
cmp
or
jno
sbb
loopne
es
pop
xlat
outs
xor
push
cli
dec
fwait
fs
mov
push
adc
mov
push
hlt
push
sar
movs
pop
xor
sbb
add
call
and
inc
xchg
mov
fiadd
test
adc
pusha
aam
(bad)
shl
sub
and
sbb
mov
dec
ret
fnstcw
int
cli
lods
scas
(bad)
sub
in
ss
repz
hlt
fdiv
bound
and
repz
scas
add
mov
mov
movs
ins
jmp
in
retf
je
push
dec
arpl
aas
in
jmp
mov
mov
sbb
lds
mov
nop
xchg
stos
mov
xor
fadd
inc
sbb
dec
loopne
add
mov
jae
and
jmp
icebp
mov
mov
pop
mov
pop
(bad)
or
jb
mov
imul
lock
inc
and
stc
or
pop
scas
push
test
inc
lods
mov
jbe
ja
inc
add
pop
in
sbb
imul
or
adc
xchg
push
(bad)
cld
xor
cmps
cdq
enter
stos
out
and
jmp
mov
cdq
push
xchg
xor
cmps
jns
jnp
jmp
je
outs
nop
or
sbb
push
jmp
lods
dec
jmp
or
inc
xchg
jbe
cmp
xchg
aad
lea
sbb
test
dec
cdq
lods
cmp
jl
adc
(bad)
imul
xor
nop
test
pusha
rcr
iret
mov
mov
dec
adc
addr16
jne
test
add
je
test
bound
dec
adc
in
jo
ins
dec
mov
lock
fwait
leave
mov
cld
enter
leave
pushf
xor
cmps
sbb
leave
and
sbb
xchg
jl
ret
push
cmp
iret
fld
fisub
xchg
cs
jno
mov
test
jp
inc
sahf
fs
mov
das
repnz
cmp
inc
dec
cmp
mov
jl
mov
inc
popf
es
imul
clc
daa
mov
push
jg
mov
xor
lds
fbld
inc
sub
xchg
cs
and
ret
rcr
push
or
mov
xchg
int
xor
test
add
hlt
sub
add
mov
jp
cs
dec
push
sub
outs
out
mov
pop
jmp
dec
imul
jecxz
sti
push
repz
xor
push
iret
scas
arpl
mov
pusha
and
out
xchg
loopne
mov
pop
(bad)
ja
inc
ret
mov
sub
adc
inc
fcom
pop
xchg
lahf
retf
fnclex
jecxz
jne
pop
xchg
imul
lock
cmp
and
(bad)
into
int
push
pop
pushf
adc
cld
or
imul
lock
arpl
ret
sbb
(bad)
inc
pop
lods
xor
push
cli
inc
and
bound
adc
repz
jg
adc
jmp
adc
pop
mov
fidivr
dec
dec
adc
aas
popf
mov
ja
fwait
stos
or
mov
hlt
fisub
dec
cwde
imul
pop
inc
popf
ins
inc
loop
xor
xor
cmp
xor
into
jp
jl
cmp
jne
xchg
icebp
(bad)
lock
mov
dec
push
stos
icebp
fld
cdq
adc
or
xchg
sub
mov
jge
call
test
and
mov
aam
outs
inc
push
adc
push
jns
enter
ins
cdq
sbb
jmp
mov
scas
xchg
mov
jl
movs
or
adc
jmp
clc
outs
pop
push
cmc
lds
fbld
gs
adc
mov
add
add
and
sub
fwait
pop
jmp
sti
test
ds
aaa
cmp
dec
push
xor
and
pop
mov
jne
std
mov
and
fst
(bad)
(bad)
je
xchg
icebp
or
(bad)
mov
dec
inc
mov
jg
repnz
iret
loope
test
jo
inc
mov
hlt
mov
ret
push
shl
ret
pop
out
and
leave
adc
dec
inc
mov
pop
cdq
sub
sahf
pop
pop
addr16
movs
stos
jae
aaa
(bad)
fld
gs
popf
ins
sub
pop
and
and
jmp
fcomp
cli
les
pop
rol
add
lahf
in
cmp
fstp
test
inc
xchg
je
in
aam
es
icebp
xor
test
test
ret
ret
aaa
adc
or
pop
add
xchg
fnstcw
fisttp
aas
pop
mov
mov
pop
test
adc
xchg
mov
lods
out
adc
sub
add
cmp
lahf
xor
(bad)
movs
les
jne
es
aad
push
push
xchg
push
mov
shr
jp
push
jmp
sub
test
push
adc
fst
fstp
sahf
mov
push
xor
mov
movs
lods
jae
mov
lock
mov
xor
pop
out
jg
xchg
mov
xchg
cmp
adc
jno
lock
push
dec
clc
sub
xlat
jo
outs
xchg
inc
mov
cmps
lea
inc
add
jl
jbe
jbe
cmp
out
(bad)
(bad)
loopne
push
fwait
cmp
push
cdq
(bad)
imul
pop
push
loopne
loope
(bad)
es
xor
mov
imul
inc
add
inc
test
or
mov
addr16
fist
ret
sahf
xchg
pop
aas
pop
push
inc
imul
add
sbb
loopne
jne
jbe
pop
nop
js
inc
ins
push
xor
jne
and
and
js
rcl
cs
scas
mov
mov
loope
or
jae
add
jg
rcl
call
loopne
and
jmp
mov
mov
or
and
sub
(bad)
mov
jo
rcr
pop
jmp
fcmove
mov
sub
xchg
repnz
sbb
mov
cmp
sub
jl
cmp
fidiv
scas
in
sbb
add
mov
cmp
or
and
push
daa
imul
or
dec
(bad)
jge
cmp
(bad)
dec
cdq
pop
xchg
leave
pop
dec
stos
pop
(bad)
sbb
mov
or
dec
rcl
neg
sub
mov
pop
in
rcl
fistp
mov
push
mul
dec
sub
sar
movs
mov
popa
push
inc
dec
or
scas
push
pop
mov
gs
pop
sahf
test
loope
cmp
jge
movs
mov
sbb
and
(bad)
ror
ins
adc
jmp
ins
pop
jmp
jl
mov
out
repnz
add
aaa
xchg
cmps
stc
sub
neg
and
mov
push
pushf
adc
push
mov
inc
or
push
popa
push
push
xor
jmp
js
push
jbe
movs
jae
arpl
rcr
dec
shl
xor
int3
imul
aas
cmp
jmp
push
adc
movs
loope
xchg
pop
jge
mov
mov
mov
xchg
jnp
(bad)
imul
scas
leave
and
inc
pop
or
jle
jno
mov
fldenv
push
jo
mov
pop
idiv
or
mov
inc
mov
(bad)
or
or
stos
lahf
add
push
imul
in
mov
inc
fidiv
fbld
sub
inc
jns
pop
xchg
fisubr
in
int3
mov
(bad)
xor
push
and
add
scas
aad
sub
inc
dec
sbb
xchg
sub
(bad)
jo
in
sub
xor
dec
jmp
cmps
jle
mov
in
xchg
loopne
cmp
je
push
movs
ret
call
shr
loope
sti
repnz
std
dec
out
push
adc
add
inc
in
dec
pushf
imul
push
sub
es
(bad)
repz
imul
xchg
call
(bad)
jno
das
test
xor
test
xor
movs
adc
cmove
push
stc
sub
add
das
cwde
xor
pushf
fidivr
pop
shr
movs
in
out
add
xchg
add
rcl
inc
mov
fsub
jle
pop
dec
stc
mov
mul
into
mov
jecxz
rol
pop
(bad)
mov
lea
jecxz
push
inc
sbb
jmp
call
push
in
sbb
mov
call
inc
je
and
call
pop
inc
mov
fidiv
mov
nop
dec
mov
push
je
test
jno
cwde
in
add
sbb
jo
jg
dec
sbb
sub
ins
sbb
or
fild
ficomp
xor
sub
mov
sbb
lahf
xchg
pop
fcmovnb
mov
inc
(bad)
fidiv
jmp
pop
pop
test
or
daa
jnp
sti
and
(bad)
jne
in
fdivr
fucompp
push
push
push
fwait
jns
dec
mov
(bad)
pop
push
cmp
jp
pop
icebp
adc
mov
mov
popf
or
and
lock
imul
test
mov
js
xchg
movs
dec
sub
out
xchg
sar
stos
mov
mov
sub
int
scas
enter
cwde
aas
jbe
dec
mov
mov
cdq
test
sti
test
add
mov
inc
push
outs
xor
xor
lahf
mov
fldenv
lahf
cmp
adc
rcl
mov
dec
imul
jle
fsub
and
push
int
add
adc
rcr
lea
cdq
push
sub
and
popa
push
jno
neg
nop
add
lods
cmp
or
lahf
push
loope
sar
xchg
imul
daa
jg
ror
scas
dec
lds
xor
inc
cmp
mov
cmp
loopne
sub
and
shl
xor
icebp
fwait
dec
jne
mov
adc
mov
iret
out
sbb
mov
out
stc
dec
aaa
mov
or
retf
pop
add
cld
test
lahf
mov
push
xlat
loope
xor
into
and
cmp
loope
jg
adc
cld
bound
std
dec
lahf
bound
push
movs
adc
movs
popa
data16
lea
outs
jmp
(bad)
pop
sbb
leave
fucomip
inc
cdq
movs
mov
pushf
xor
cli
fsubr
out
fcmovbe
cmp
mov
cwde
adc
pmulhuw
in
out
xor
imul
push
jns
adc
psubd
scas
in
sub
scas
fcomip
push
mov
push
add
push
scas
cwde
into
(bad)
retf
adc
dec
and
jge
shl
(bad)
js
xlat
and
fld
push
(bad)
xor
stos
push
mov
adc
inc
lds
movs
xor
idiv
ins
xchg
mov
and
xchg
adc
rol
in
push
cld
jp
xor
fisttp
out
pop
int
mov
mov
call
push
mov
pusha
sub
xchg
mov
xchg
retf
sar
sub
push
out
lahf
cwde
icebp
dec
arpl
push
or
xchg
sbb
jno
daa
clc
mov
fisubr
push
mov
or
mov
pop
mov
imul
add
fadd
add
test
out
lea
sub
test
and
xchg
xchg
mov
retf
sbb
cmps
sar
mov
xlat
pop
lock
cmps
ret
mov
jno
pop
in
and
jp
adc
pop
inc
add
xchg
sbb
push
or
push
or
ret
outs
stc
iret
out
cmp
ror
push
aaa
adc
in
pushf
or
pop
aad
adc
retf
fcom
dec
mov
mov
or
mov
in
aam
sar
rol
es
fs
lods
xor
loope
dec
dec
sbb
sub
jne
mov
add
cs
lods
mov
or
pop
icebp
sbb
in
mov
movs
mov
jnp
sbb
int
ins
mov
arpl
pop
push
movs
retf
or
pop
fldenv
rcl
push
inc
push
xor
jo
jae
sbb
pop
test
hlt
pop
pop
xor
ss
lods
jne
in
and
or
mov
adc
pop
js
pop
add
popa
jl
aam
dec
mov
add
out
sbb
arpl
leave
jg
(bad)
jl
in
fsub
retf
lods
mov
push
movs
mov
sub
cmp
mul
jmp
fwait
lods
pop
jg
outs
iret
xlat
test
lods
das
push
add
movs
inc
lods
pop
adc
pusha
imul
mov
sahf
ja
fstp
xor
cs
in
jae
xchg
enter
pop
dec
jmp
aaa
icebp
fs
into
mov
sar
mov
pop
in
icebp
aas
mov
mov
dec
xor
(bad)
es
icebp
cwde
or
movs
ins
xor
std
mov
popf
stos
or
pop
ds
outs
es
ja
inc
outs
jmp
sbb
jno
push
jns
ja
inc
repz
inc
shr
xlat
push
imul
mov
or
mov
jae
outs
lods
mov
mov
mov
iret
je
adc
cli
inc
cmps
daa
or
jae
sub
or
xchg
out
les
jecxz
xor
add
sub
mov
jle
repz
cmp
out
dec
cmp
cwde
int3
push
rol
jae
and
xor
mov
loop
popa
fs
mov
ins
sbb
js
push
adc
lock
or
cs
loope
xchg
mov
ss
clc
or
lods
jb
sub
or
loope
loop
mov
fs
adc
lea
adc
sub
pushf
mov
aas
and
lahf
cmc
xor
dec
(bad)
in
(bad)
adc
jo
add
loopne
jb
jp
stc
dec
in
ss
(bad)
addr16
inc
pop
into
dec
xchg
sar
pop
cmp
xchg
dec
cmp
mov
imul
out
ret
jmp
and
in
sbb
fistp
cmps
cli
mov
iret
arpl
xor
jns
pop
sub
cmp
mov
mov
adc
pushf
add
and
fsubr
mov
mov
mov
retf
lds
in
les
movs
rol
sub
sub
clc
mul
push
ds
out
and
mov
mov
push
jo
mov
adc
mov
shr
les
jns
stc
push
jno
data16
lea
push
out
xor
or
rcr
mov
les
or
hlt
pop
sub
pop
cmps
jle
test
jo
push
bound
sbb
and
or
cs
push
push
dec
mov
push
sar
sbb
sbb
mov
outs
pop
ja
imul
or
xchg
adc
retf
push
jl
add
xor
mov
gs
dec
retf
push
movs
sub
stos
cmp
(bad)
in
leave
xchg
loopne
jno
mov
push
clc
dec
mov
in
dec
imul
pop
out
rol
xchg
js
lock
cmp
fsub
mov
rol
push
push
imul
rol
movd
enter
inc
enter
shr
cli
dec
mov
xor
xchg
imul
dec
xor
in
retf
or
bound
xchg
outs
add
sub
je
sbb
mov
es
sub
test
std
xchg
sar
jg
pop
(bad)
out
mov
repz
or
xor
fdivp
mov
dec
int3
stc
ret
pop
inc
sbb
adc
jl
repnz
pushf
aad
test
cli
ss
fdivr
mov
loope
or
inc
and
fcomp
mov
in
xor
jmp
sbb
pushf
arpl
xor
out
sahf
cli
rol
das
std
retf
nop
mov
adc
je
mov
mov
cld
(bad)
or
jle
test
repz
iret
int
sbb
mov
jp
sahf
cwde
inc
mov
popf
stos
or
(bad)
inc
mov
ret
ss
imul
xlat
iret
pop
repz
test
cmp
cmp
mov
mov
int
or
inc
xchg
out
enter
movs
call
pop
(bad)
ins
cld
adc
rcl
in
ds
in
mov
mov
or
shr
pop
bound
cmp
stc
jnp
cdq
sbb
shl
movs
loope
xor
retf
mov
cdq
xor
rcr
adc
sub
dec
sub
rcl
ja
dec
rcl
or
popf
iret
mov
jecxz
test
and
test
sahf
cmp
sbb
cmps
mov
xor
cmps
mov
arpl
shl
push
adc
std
inc
xchg
inc
cmp
mov
pop
sbb
call
jle
jno
es
(bad)
xor
xor
add
or
fwait
adc
ins
inc
or
pushf
pop
xchg
dec
fwait
xor
test
mov
in
pop
mov
ins
sub
mov
lahf
lods
push
hlt
aad
inc
mov
sbb
sbb
shl
xor
push
fbld
inc
int
inc
pop
or
fmul
xchg
or
push
mov
mov
fisttp
out
int
sub
pop
js
dec
xchg
add
out
shl
or
ins
lds
xlat
shl
jmp
addr16
dec
ss
sar
xchg
dec
and
movs
inc
dec
loope
test
cli
addr16
popa
fwait
enter
lods
in
outs
push
xchg
add
std
jle
lahf
inc
int3
gs
mov
fisub
sahf
int
mov
mov
jp
js
repz
sbb
sti
inc
dec
(bad)
or
mov
ins
mov
sub
lock
sbb
les
xor
xchg
fxch
popa
(bad)
sub
sar
not
cmps
dec
fist
(bad)
inc
imul
pop
mov
mov
ret
mov
cmp
jb
jl
in
adc
out
mov
retf
and
xchg
lds
xchg
fsub
(bad)
adc
xchg
dec
jmp
retf
test
mov
(bad)
jmp
or
sbb
jmp
out
push
and
adc
in
sub
scas
pop
gs
pusha
fisub
mov
sub
sbb
jge
aad
dec
shl
mov
shr
stos
outs
sbb
cwde
bndldx
push
mov
fcomp
sbb
xchg
stos
xchg
fdivr
mov
adc
jne
lods
std
jne
cmc
in
cwde
mov
out
xchg
int3
sub
cmc
shl
and
sub
cmp
test
(bad)
jns
ss
nop
imul
pop
stc
cwde
mov
enter
mov
scas
mov
xor
jp
dec
mov
push
adc
in
pop
pop
sub
ja
pushf
jne
adc
xor
leave
jp
mov
fst
movs
ins
cmp
jmp
fcomp
test
and
mov
pop
mov
mov
scas
pop
loope
bound
pop
mov
pop
mov
jmp
jb
pop
dec
cwde
cwde
retf
aas
fbld
leave
aad
add
in
pop
xchg
push
in
push
xchg
push
test
add
pusha
jmp
popf
mov
adc
mov
dec
inc
fld
ror
jg
push
bound
pop
inc
retf
or
inc
mov
mov
push
mov
cs
js
pop
mov
pusha
mov
xor
sbb
push
frstor
push
add
sub
ja
cdq
out
daa
(bad)
jmp
mov
dec
mov
stos
jbe
iret
and
mov
push
sub
popf
sbb
popa
xchg
xchg
neg
sub
cli
sbb
mov
fdivr
loopne
loope
ja
aad
mov
cmp
xchg
fisttp
ds
sub
and
inc
icebp
push
cmps
test
adc
sbb
mov
cmc
ja
cmp
(bad)
mov
jbe
call
jnp
les
rcl
xchg
push
out
or
out
sub
pop
movs
daa
ficom
stos
pop
or
sbb
arpl
xchg
test
ja
aaa
pop
shr
pop
jecxz
aas
pop
ret
aad
mov
sub
mov
jo
dec
mov
add
push
(bad)
std
xchg
fdivr
jo
into
cdq
and
bound
push
cmp
or
je
dec
jecxz
cmp
sti
pop
xor
add
push
lods
inc
outs
jne
retf
pop
ins
xor
ja
cmp
adc
push
popf
lds
iret
fidivr
sbb
dec
sbb
not
fxch
adc
fnsave
sub
ret
xchg
fwait
cmp
mov
scas
sub
xchg
retf
xchg
arpl
inc
sbb
mov
(bad)
fild
test
or
jmp
push
cmp
mul
rol
sahf
add
add
outs
mov
out
stos
pop
rol
out
lods
pop
sub
lea
and
push
mov
jnp
jle
add
rol
add
sbb
sbb
and
enter
mov
arpl
adc
and
xchg
ret
inc
sub
scas
adc
mov
fsub
pusha
adc
sbb
cld
loopne
addr16
xlat
inc
inc
sub
dec
pop
adc
cmp
in
inc
stc
jp
jmp
mov
or
test
mov
inc
(bad)
jl
mov
cmp
jge
cmp
scas
sub
sub
int
popf
and
jo
aas
into
jecxz
dec
sti
push
pop
lds
inc
add
add
scas
test
xchg
jle
ret
jmp
scas
shl
ret
out
mov
lods
cmp
gs
ins
lods
clc
je
sbb
add
xchg
fdivr
inc
js
jge
inc
mov
fsub
mov
lods
and
sub
cmp
aam
sbb
test
and
adc
in
sbb
jo
mov
shl
fnstsw
(bad)
and
inc
dec
pop
popa
fs
aad
call
jmp
fucomp
sub
pop
cmp
shl
pusha
pusha
mov
dec
adc
in
or
xchg
cmp
out
sar
and
or
shl
fistp
fmulp
mov
movs
idiv
inc
mov
xchg
int
mov
xchg
pop
fst
addr16
xchg
xchg
iret
add
int
out
xchg
mov
xchg
pop
shl
pop
cmp
pop
xor
sub
add
popf
xor
ds
addr16
(bad)
and
jle
push
xchg
addr16
mov
cmp
adc
jae
inc
cmp
mov
iret
push
xor
mov
sbb
lahf
inc
mov
pop
retf
push
loopne
xor
sub
mov
cmps
fidiv
outs
call
jo
cmc
push
or
ins
scas
ret
lock
into
ss
jge
fidiv
repz
sub
(bad)
enter
and
rol
and
dec
out
cdq
fwait
repnz
lock
jecxz
xlat
popa
outs
iret
inc
mov
shl
lds
shl
scas
stos
xchg
fs
inc
xchg
in
and
mov
pop
cld
adc
push
in
xor
dec
icebp
scas
shr
sahf
jnp
inc
daa
cmp
fild
mov
inc
loopne
shl
or
and
mov
mov
xor
add
mov
and
popa
adc
sahf
or
fild
mov
add
sub
adc
jp
test
pop
mov
pop
xchg
jnp
mov
call
add
int
stc
xacquire
loope
sub
mov
into
xchg
add
adc
jecxz
sti
jl
clc
inc
add
adc
inc
clc
(bad)
xchg
jmp
or
or
xor
push
xchg
cmp
mov
pop
dec
inc
and
dec
fisub
jbe
in
idiv
in
mov
(bad)
pushf
mov
int
and
jg
xor
call
mov
adc
rcr
out
dec
mov
clc
stc
fnsave
sti
aaa
cmps
scas
and
add
cli
sub
into
and
scas
mov
add
adc
fdivr
aad
cmp
jg
fucomi
pop
cmps
xchg
inc
xchg
dec
add
or
test
cmp
fstp
adc
xor
sub
sbb
popa
data16
push
jns
clc
jle
les
dec
inc
pop
ss
aam
sub
test
mov
push
fcmovb
and
inc
clc
retf
xchg
push
jle
dec
loop
push
xor
dec
stc
sbb
sub
xchg
sub
inc
jae
push
pcmpeqb
(bad)
dec
enter
push
jmp
mov
jno
cdq
sbb
clc
ins
pop
nop
rcr
fcomip
push
pop
sub
cmp
pop
lods
in
mov
mov
out
ins
frstor
addr16
xchg
inc
loopne
dec
mov
adc
dec
retf
ret
lea
or
ss
sub
xchg
jle
mov
leave
in
or
cmp
jle
mov
arpl
stc
push
adc
in
inc
cdq
aad
mov
pushf
fadd
push
cmp
push
fwait
push
push
ret
(bad)
fcmovne
(bad)
pop
repz
(bad)
xchg
test
sar
and
dec
(bad)
xchg
int
enter
fcomp
adc
movs
in
mov
pusha
adc
nop
loope
and
test
xor
cwde
adc
inc
fldenv
sbb
adc
cmp
push
in
dec
pop
pop
mov
jbe
iret
add
or
into
sub
xor
push
xor
dec
lea
outs
leave
mov
das
rol
fmul
pop
fnstsw
mov
push
xor
cmps
mov
cmp
ins
jne
sub
mov
jbe
pusha
mov
in
pusha
sub
out
shl
cld
mov
adc
(bad)
nop
push
movs
(bad)
cmp
adc
cmp
inc
adc
add
mov
jb
ins
aaa
push
aad
aad
dec
js
and
outs
mov
idiv
lods
cmp
js
and
out
imul
cmp
loope
sti
cdq
imul
dec
cmp
adc
iret
push
cmc
cld
xlat
outs
inc
push
mov
xchg
adc
retf
enter
mov
gs
stos
das
dec
pop
outs
pop
pop
mov
stos
mov
in
mov
lock
scas
push
ficomp
push
xchg
add
xchg
lock
in
xlat
mov
inc
dec
sub
retf
repnz
sbb
mov
shr
cmp
dec
dec
das
add
pop
fwait
mov
movs
ja
push
mov
rol
cmp
shr
push
enter
or
adc
fwait
retf
stos
add
pop
cld
test
mov
add
mov
cld
xor
inc
(bad)
push
adc
cmp
pusha
sti
push
push
mov
sbb
aad
rol
dec
stos
outs
push
and
scas
pop
unpcklps
xchg
and
retf
sub
lock
(bad)
aam
jecxz
xchg
stos
push
sbb
(bad)
clc
icebp
pop
and
imul
add
rcl
jp
and
es
mov
dec
xchg
enter
adc
fistp
lods
and
jo
cmp
push
aaa
aad
fnstenv
call
ficom
jbe
(bad)
aas
push
mov
ds
rcr
in
xchg
test
cwde
sbb
xchg
mov
sbb
and
pushf
test
pop
mov
cmps
das
xchg
shl
out
in
iret
call
xor
cmp
mov
add
jbe
mov
jp
pop
adc
sub
mov
(bad)
rcl
(bad)
loope
pop
loopne
inc
rcr
repz
mov
and
outs
adc
pop
mov
outs
pusha
cmps
je
or
in
and
push
ins
test
dec
fbld
push
adc
inc
cdq
xor
jo
sbb
mov
and
in
xchg
out
sub
and
in
add
aaa
adc
enter
leave
outs
cmp
cmps
mov
ss
or
inc
fidivr
inc
es
mov
inc
popf
in
fsubr
jnp
mov
cmp
arpl
fnsave
out
cmp
je
dec
scas
inc
adc
(bad)
mov
pop
xchg
into
movs
sar
in
loope
and
cwde
shr
jg
jmp
lods
icebp
pop
xchg
push
add
fcomip
js
inc
cmp
cdq
xchg
rcl
sub
cld
sbb
movs
shl
inc
push
add
inc
fld
fimul
outs
retf
cwde
xchg
add
pop
ja
popa
or
cmps
cmp
jg
imul
xlat
pop
cmps
cmp
mov
add
push
add
dec
leave
sub
xchg
int
js
dec
or
jns
jnp
loop
sub
aad
sar
and
shl
push
into
mov
movs
add
adc
dec
outs
imul
rcr
push
xor
mov
cmp
dec
rcl
daa
add
cli
add
cmp
pop
imul
in
push
stc
sbb
je
aam
add
dec
mov
and
gs
pop
out
push
dec
add
shr
(bad)
or
pop
and
add
fdivr
mov
and
aas
(bad)
xchg
sub
push
nop
std
dec
and
out
xchg
jg
adc
mov
nop
push
les
pop
xchg
inc
adc
cmp
(bad)
into
cmp
jb
enter
(bad)
stos
inc
in
xor
pop
or
inc
sti
and
stos
mov
or
jne
(bad)
cmp
mov
ret
pop
ds
js
jae
sbb
cld
inc
(bad)
xor
pop
lods
adc
cmc
pop
fimul
sbb
xor
add
sahf
sub
sub
and
cmp
ins
pusha
fdivr
mov
mov
fld
or
fmul
loopne
or
out
je
retf
push
repnz
dec
pop
fs
adc
cmp
dec
xlat
push
rcr
jp
ret
clc
inc
mov
dec
mov
jne
inc
sahf
mov
jp
leave
ficom
sbb
and
mov
push
or
cmp
jne
(bad)
nop
xchg
or
or
mov
push
(bad)
stos
aad
add
dec
pop
mov
adc
cmc
nop
aam
test
hlt
or
ja
or
(bad)
sbb
adc
fiadd
and
pop
into
xor
(bad)
ja
add
test
mov
push
out
sbb
ss
mov
clc
inc
jb
mov
fadd
stos
lds
cmps
imul
(bad)
cwde
cmp
loop
inc
jge
cmp
jo
pop
sub
xlat
push
and
push
cwde
dec
pop
out
std
cmps
ds
dec
sub
push
adc
mov
nop
adc
xor
cmps
shl
jo
ins
push
aas
imul
sub
imul
jmp
jecxz
inc
and
mov
sub
xchg
and
ret
sub
mov
mov
mov
fdivr
sub
push
popa
sti
fsub
adc
js
movs
xor
pop
in
jae
lods
dec
xchg
mov
stc
arpl
and
test
push
adc
enter
lds
ret
fwait
inc
leave
mov
shl
or
js
push
mov
jmp
aaa
mov
ret
jae
add
cwde
jnp
pop
out
clc
sbb
push
imul
call
dec
into
push
inc
mov
adc
rcr
mov
es
mov
cmps
push
push
inc
aaa
dec
inc
or
push
mov
retf
inc
sahf
clc
adc
jbe
das
xchg
hlt
jne
cmp
sti
movs
dec
jo
repz
cdq
xor
mov
bound
das
ror
arpl
add
imul
mul
sub
enter
jge
outs
in
jb
xchg
jne
dec
lods
mov
fisub
sbb
push
inc
jo
xchg
xchg
fnsave
lahf
pop
ins
xchg
jbe
pop
mov
mov
cld
and
lea
rol
add
jge
test
pushf
rcr
aaa
xchg
fild
push
mov
sti
and
loop
mov
test
sbb
mov
mov
jecxz
mov
mov
and
jae
jmp
mov
or
sti
dec
dec
adc
mov
call
out
stos
mov
mov
mov
push
or
cld
sbb
lods
cwde
stos
dec
inc
and
adc
jnp
jp
or
jecxz
imul
push
imul
dec
cmps
gs
and
stos
and
mov
ds
mov
inc
loop
sbb
adc
sub
scas
mov
stos
inc
les
or
(bad)
dec
cmp
dec
mov
xor
xor
outs
cli
jp
pusha
imul
stc
push
(bad)
or
sub
lods
outs
mov
ja
out
ins
fnstenv
cmp
mov
arpl
xchg
fnstsw
push
cmp
outs
dec
scas
add
out
inc
dec
mov
mov
stos
xchg
dec
test
fisttp
in
rcr
and
fisubr
adc
xor
cwde
outs
cmp
inc
dec
inc
jle
rcl
ret
pop
mov
mov
cld
push
jle
pop
movs
jle
stos
adc
add
enter
and
cmp
repnz
fwait
mov
ss
aaa
add
(bad)
adc
xchg
daa
jmp
cmp
jge
fidivr
retf
out
scas
retf
stc
ins
outs
fcomp
jae
xchg
and
cwde
(bad)
outs
adc
(bad)
int
dec
aad
lods
jmp
mov
push
jb
mov
loope
dec
push
cmp
out
push
inc
add
bound
imul
bound
outs
add
jmp
xchg
or
idiv
cdq
pop
xchg
inc
sti
cmp
imul
cld
arpl
jle
jo
mov
jo
adc
loope
out
adc
and
push
in
mov
push
inc
mov
adc
mov
repz
call
push
and
sub
sbb
xchg
push
sub
pop
mov
ins
push
jbe
and
xchg
cmp
daa
test
ret
sbb
mov
jecxz
popf
push
jo
mov
mov
mov
cmp
popa
stos
aaa
outs
hlt
push
mov
mov
xor
inc
outs
sub
pop
fsub
cld
hlt
cwde
ror
cs
in
test
ja
ins
addr16
lea
mov
leave
add
stos
cmps
cmp
shl
scas
(bad)
xor
mov
iret
scas
shl
sbb
jecxz
push
push
push
fistp
jecxz
sub
pop
xor
mov
adc
mov
xchg
inc
push
inc
jb
pop
cmp
add
imul
inc
out
xor
sub
mov
aam
fs
scas
mov
pop
cmp
scas
jo
repz
sbb
imul
or
loopne
sub
in
lods
adc
dec
push
std
cmps
sahf
sub
dec
ds
(bad)
sub
xchg
addr16
int3
and
pop
pop
data16
and
in
dec
add
scas
or
repz
aas
mov
in
mov
out
sbb
cld
clc
dec
dec
enter
test
(bad)
or
int
fsubr
movs
inc
xor
xor
retf
mov
iret
test
loopne
enter
in
sbb
iret
and
dec
scas
mov
adc
(bad)
lods
adc
pop
retf
sub
sub
addr16
mov
(bad)
xchg
and
addr16
mov
sub
imul
gs
jp
xchg
mov
sbb
int3
movs
inc
jnp
into
mov
mov
arpl
xlat
leave
adc
ror
adc
in
pushf
(bad)
sbb
cmc
movs
fwait
xchg
test
test
sub
add
mov
cmp
jno
inc
pusha
gs
fcmovu
dec
or
lods
mov
imul
xchg
imul
push
movs
cmc
or
pop
sub
xor
sbb
inc
sbb
out
in
sub
(bad)
dec
mov
imul
jmp
pop
mov
(bad)
xor
(bad)
out
loope
shr
bound
pmulhuw
mov
(bad)
push
push
outs
imul
mov
(bad)
and
fwait
cmps
inc
fidiv
sbb
rdtsc
and
xor
sbb
sbb
xor
hlt
jmp
stos
shl
out
xchg
mov
cmp
shl
pop
bound
jmp
loope
shr
pop
sub
loopne
lods
adc
int
mov
gs
xchg
popa
sub
(bad)
cmp
in
dec
(bad)
and
xchg
lds
mov
mov
mov
aaa
push
sahf
and
(bad)
into
cmp
xor
(bad)
outs
imul
arpl
adc
gs
mov
and
mov
pop
js
js
in
je
in
inc
gs
in
push
sbb
or
(bad)
int
in
adc
int3
xor
std
or
dec
adc
movs
xor
mov
mov
das
cmp
out
jge
dec
or
data16
push
xchg
and
shl
mov
fbld
pop
xor
clc
and
push
out
cmp
pop
loope
jno
or
xchg
(bad)
jnp
sbb
mov
cs
sub
jo
or
in
sub
into
cdq
repnz
or
push
cmp
stc
iret
test
dec
add
pop
cmp
sbb
adc
ret
xchg
call
xor
fsubr
cld
mov
sub
or
push
popa
in
xor
mov
sub
out
dec
jmp
lods
loope
and
test
jp
mov
std
adc
in
or
jmp
mov
pop
xor
fdivrp
ficom
lea
mov
ja
out
xchg
out
push
mov
xor
mov
add
std
xchg
sub
outs
jl
pop
pop
je
loopne
inc
into
(bad)
mov
pushf
xchg
and
mov
sbb
frstor
cmp
pop
xor
les
dec
popf
mov
and
adc
call
and
pop
lods
adc
cld
adc
push
dec
shl
repz
call
jmp
mov
fcmove
jbe
jmp
outs
fst
and
xchg
pop
ret
ja
push
loopne
gs
adc
(bad)
loopne
add
pop
nop
retf
addr16
popa
pop
rcl
iret
jae
int
ds
and
adc
sub
mov
jno
xchg
dec
dec
jmp
adc
fs
mov
fmul
movs
mov
in
pop
fldcw
pop
movs
popf
push
adc
jae
inc
jbe
sbb
lds
fld
mov
xor
iret
xchg
(bad)
scas
std
xor
imul
pop
in
imul
pop
mov
add
daa
adc
lods
into
hlt
mov
cmp
nop
pop
cli
div
int
std
mov
in
and
mov
test
pop
mov
call
js
cmp
and
gs
push
lods
out
(bad)
inc
push
cmp
add
or
add
outs
pop
cmps
pop
jl
(bad)
jl
push
dec
ret
bound
xchg
dec
push
popa
hlt
cmps
pusha
lock
in
imul
scas
dec
outs
aam
ds
cdq
lods
or
dec
mov
and
scas
push
xchg
and
jle
loope
mov
mov
or
daa
add
xchg
jmp
xchg
add
mov
(bad)
inc
out
jecxz
mov
imul
fs
rol
loopne
retw
lock
dec
pop
mov
fld
or
aam
mov
xchg
aad
xchg
xchg
out
rol
loopne
lock
test
pop
mov
cmp
repnz
add
ds
int3
ror
cmc
scas
adc
outs
(bad)
sbb
sub
iret
dec
adc
push
dec
sbb
add
or
sbb
push
repz
sub
ds
repnz
push
adc
retf
aad
jo
test
push
mov
jo
call
arpl
stc
mov
cld
mov
out
add
push
jle
xchg
mov
cmp
add
fstp
ror
sub
sub
pop
aaa
add
add
xor
add
rol
sub
and
sbb
(bad)
dec
or
adc
clc
mov
adc
cmp
cmp
movs
add
(bad)
loopne
js
shl
lock
sar
shl
in
in
mov
xchg
add
cmps
hlt
or
lock
mov
lea
mov
pop
jp
mov
cwde
(bad)
push
lds
cmp
lahf
dec
xlat
cmc
test
push
int3
sbb
and
cmp
call
and
pop
jmp
(bad)
mov
jns
lock
xchg
dec
inc
jge
ins
icebp
retf
call
stos
pop
es
push
pop
mov
fwait
test
dec
inc
jecxz
pushf
pop
ror
jmp
mov
repnz
lods
es
xor
pushf
out
jmp
add
mov
loope
cmp
mov
cli
and
retf
aam
fiadd
adc
cli
jb
fist
add
pop
and
push
pop
sbb
sbb
in
or
int3
push
cmps
pop
adc
shl
jns
(bad)
adc
mov
sbb
dec
lock
push
cli
outs
push
mov
(bad)
fdivr
push
fidiv
mov
sti
xchg
mov
inc
add
shl
pop
fs
jmp
adc
scas
dec
mov
mov
adc
inc
int3
mov
ins
jae
cli
sbb
not
sbb
sub
scas
jmp
mov
aaa
sub
repnz
dec
aad
sbb
(bad)
js
sar
(bad)
push
in
adc
cwde
mov
push
sti
mov
adc
ins
xor
mov
repnz
sub
shr
repnz
mov
aas
mov
mov
add
fwait
mov
js
jle
mov
adc
aaa
mov
outs
sbb
rol
fwait
jmp
mov
(bad)
xor
repnz
(bad)
sbb
std
jnp
xor
lea
(bad)
push
xor
leave
or
sbb
jbe
aam
inc
push
js
cwde
loope
mov
ret
inc
mov
imul
outs
retf
in
cmp
mov
imul
mov
dec
mov
out
icebp
cwde
stos
loope
call
iret
adc
mov
inc
sbb
aaa
mov
shr
pop
jge
outs
repz
(bad)
in
mov
push
iret
inc
cs
xchg
(bad)
mov
outs
add
cmps
add
adc
aad
pop
mov
mov
cli
nop
std
scas
lea
data16
outs
push
inc
jns
in
jecxz
mov
repnz
test
test
fs
mov
or
push
xchg
cmp
enter
sub
add
push
sahf
mov
pop
mov
push
shr
cmps
leave
and
call
out
loop
ins
mov
(bad)
cmp
mov
loop
imul
jmp
xchg
xchg
outs
mov
cli
pushf
sbb
in
mov
sbb
jle
test
retf
pop
(bad)
rcl
int
pop
or
and
mov
jmp
js
mov
or
mov
push
push
jp
pop
xor
fwait
xchg
jp
dec
add
and
dec
lea
dec
adc
dec
scas
out
out
cmp
inc
repnz
sub
and
inc
lea
sti
sar
stos
mov
mov
idiv
add
mov
sub
clc
jne
int3
ds
ins
lods
mov
or
sub
sub
arpl
loope
aam
sbb
outs
lods
lea
lea
in
retf
in
clc
aaa
xchg
push
js
addr16
jecxz
les
lea
imul
inc
inc
sahf
jnp
or
out
lea
dec
out
enter
(bad)
adc
mov
iret
test
jbe
xor
pop
nop
xchg
xchg
pop
lahf
sbb
dec
xor
fcmovu
adc
adc
rcr
ret
jno
test
shr
inc
xor
cmp
inc
dec
pop
add
lods
shr
xchg
mov
jg
add
and
jl
xor
xchg
jmp
push
adc
in
cmp
outs
call
repz
repz
or
xor
scas
or
lea
sub
pop
aad
pop
push
ja
and
jle
inc
pusha
in
jp
shl
sub
sbb
int3
out
and
adc
sub
mul
std
lahf
jo
mov
pop
dec
inc
stos
outs
les
xchg
call
and
fimul
xor
xor
pop
cmp
push
outs
(bad)
or
xchg
aad
inc
sub
dec
cmps
jmp
fisubr
(bad)
icebp
jno
jnp
xor
pop
bnd
pop
mov
pop
push
aam
xchg
popf
sub
sub
bound
push
sahf
lods
aad
inc
inc
mov
sbb
outs
lods
fnstcw
in
sub
iret
sbb
add
xchg
addr16
call
inc
push
and
or
es
ja
sti
fbld
ds
in
neg
adc
ror
xor
call
scas
retf
push
arpl
cmc
call
jne
add
sbb
call
cmp
fidivr
jmp
mov
sbb
lods
adc
mov
mov
retf
stc
xchg
and
stc
jno
dec
push
xchg
sets
and
mov
js
les
add
loop
push
lock
scas
lds
sbb
adc
sahf
jo
(bad)
jmp
dec
popf
fidivr
add
sub
imul
ficom
jp
sbb
or
in
loopne
mov
inc
dec
lods
mov
inc
fdivr
lahf
rol
movs
cdq
out
daa
daa
inc
sbb
xchg
out
adc
(bad)
cmp
or
loopne
pop
test
rol
and
outs
dec
pop
in
mov
mov
scas
rol
and
dec
dec
xchg
sar
sti
pop
std
lods
js
cwde
jge
or
cs
jne
mov
sbb
xchg
xchg
cld
lock
call
sub
popa
cmc
push
mov
in
xchg
and
in
sti
shl
movs
retf
packuswb
out
call
mov
sub
sbb
xchg
xchg
sbb
xor
add
mov
and
xchg
jp
je
sar
mov
ds
or
movs
call
sub
mov
std
add
and
movs
jp
inc
lea
and
movs
fucomip
rcl
cld
(bad)
lahf
imul
mov
imul
nop
daa
dec
retf
sar
adc
repnz
movs
push
cmp
std
mov
add
mov
xor
ss
sub
adc
mov
fldcw
inc
and
jp
sbb
xchg
xor
cs
hlt
mov
lea
xchg
iret
mov
inc
push
jnp
or
add
int3
sbb
inc
sub
cmp
pop
add
pop
fimul
rcl
inc
jmp
loopne
rol
aaa
mov
jg
sbb
mov
fcom
das
mov
call
xchg
cwde
nop
ret
lock
loope
outs
rcl
cmp
pop
jmp
(bad)
ins
push
inc
push
(bad)
sbb
push
lahf
and
mov
arpl
arpl
repnz
in
fwait
or
clc
push
inc
or
mov
cmp
mov
mov
xchg
(bad)
mov
or
mov
push
pop
adc
xlat
jnp
adc
(bad)
cld
xor
dec
out
jecxz
scas
cmp
sub
dec
iret
iret
cs
in
out
sub
icebp
jmp
push
lods
inc
(bad)
mov
sub
cli
xchg
xor
loope
mov
pop
ss
les
mul
sbb
lock
mov
call
push
jmp
cli
mov
in
sub
stos
mov
jns
sub
inc
cmps
imul
and
jbe
out
lods
mov
jmp
lea
fcom
sub
(bad)
xlat
xor
cmp
push
mov
scas
lods
(bad)
push
jmp
pushf
mov
add
cmps
or
aam
ins
jp
push
inc
int3
sub
mov
or
dec
scas
repnz
or
in
sbb
xchg
jno
mov
jno
mov
push
add
repz
dec
inc
mov
mov
ins
out
cmc
repnz
shl
cmp
(bad)
popa
shl
sbb
xor
pushf
outs
or
add
mov
rol
sbb
inc
mov
mov
adc
mov
dec
ud1
push
dec
cmps
dec
mov
xchg
pop
popa
inc
xor
jo
pop
aam
pop
sar
inc
loop
cmp
dec
iret
mov
dec
xor
cld
add
push
xchg
adc
dec
out
fld
aam
xor
pusha
hlt
out
cmps
jae
xor
les
or
sbb
or
push
arpl
cmovge
mov
shl
cwde
(bad)
lock
sbb
les
sahf
fsubr
mov
and
(bad)
adc
loop
add
push
sub
and
pop
push
sub
pop
xor
rcr
push
repnz
inc
xchg
jno
and
leave
cmp
jmp
or
xchg
mov
cmp
and
enter
inc
pusha
pop
and
inc
pop
adc
outs
test
fild
dec
pop
inc
ret
bound
ja
bound
pop
cmp
jle
test
sbb
mov
rcl
cmps
rcl
add
sub
mov
pop
out
imul
pop
xor
or
(bad)
cmc
jp
bnd
push
fistp
mov
ror
jge
lods
pop
imul
mov
xchg
stos
mov
fild
out
mov
cli
(bad)
dec
rol
std
cmc
pusha
(bad)
movs
sub
(bad)
mov
mov
inc
in
mov
sbb
scas
xor
jmp
sub
js
or
or
or
cmp
jae
jmp
in
dec
push
test
mov
adc
out
pop
mov
jl
push
dec
push
mov
add
xor
fwait
jp
xchg
addr16
call
rcl
jbe
popf
cmc
xor
in
sub
pop
cmp
dec
dec
inc
xchg
fs
out
pop
fs
shl
ret
xchg
push
push
aad
mov
and
inc
icebp
aad
mov
call
je
push
aam
pop
je
xor
loope
mov
cmps
sub
into
fadd
jbe
fnstenv
iret
enter
mov
test
mov
dec
inc
xchg
xor
cmp
jg
push
add
loope
es
data16
hlt
mov
call
test
inc
mov
push
ret
and
fnsave
ret
push
(bad)
outs
outs
fisttp
and
push
fidivr
jmp
ins
addr16
cmp
dec
cmp
xor
std
inc
movs
jne
jno
pop
pop
lods
mov
je
ds
scas
nop
mov
neg
inc
push
mov
(bad)
xor
or
mov
mov
push
push
push
out
and
clc
mov
leave
icebp
mov
xchg
popf
xor
into
pop
xchg
or
or
(bad)
or
pop
or
clc
cmp
cli
scas
lods
ret
sub
pop
rcl
sub
push
in
cmp
push
add
fcmove
sub
mov
add
int3
jb
repz
push
test
mov
push
bound
fild
dec
adc
repnz
sbb
outs
inc
mov
daa
push
sub
xchg
mov
fdivrp
xchg
arpl
mov
daa
std
cmp
and
aaa
dec
pop
and
sub
push
pop
push
jns
scas
xchg
adc
inc
repz
je
push
out
pop
test
jno
fimul
aam
xchg
sub
xchg
(bad)
repz
outs
jnp
(bad)
push
sbb
adc
inc
mov
xchg
shl
sbb
sub
sbb
ret
or
cmps
(bad)
imul
inc
adc
into
and
dec
push
ja
dec
sub
jo
pop
lahf
xor
push
pop
mov
xchg
test
outs
adc
stos
mov
inc
stos
fadd
push
gs
jp
jb
add
or
and
fiadd
outs
call
(bad)
imul
nop
adc
sub
jecxz
push
dec
out
stos
repnz
(bad)
movs
enter
sub
sbb
mov
dec
fcom
mov
mov
loope
ins
aaa
pusha
cmpps
xchg
lea
inc
int
jno
das
inc
cmp
fistp
jb
outs
add
fcmovu
(bad)
sub
sub
or
in
mov
shl
jb
mov
adc
call
xchg
mov
rcl
stos
inc
fsubr
jp
ror
cdq
sub
adc
les
jp
push
push
inc
mov
rol
pop
fdivr
ja
pusha
fcom
dec
not
xchg
addr16
mov
scas
mov
xchg
loope
mov
ss
mov
mov
jbe
pop
movs
les
or
stos
fiadd
jl
pusha
test
out
scas
add
fldz
cmp
das
xchg
pop
rol
in
popa
mov
add
jp
xchg
and
ss
dec
call
sub
cmps
ret
jge
jo
dec
adc
in
lds
add
lahf
(bad)
outs
push
mov
arpl
or
add
push
dec
inc
jns
jb
out
or
aas
les
rol
test
stos
or
or
cld
pop
pusha
add
inc
mov
mov
fisub
xchg
xchg
es
ins
mul
xchg
call
and
fnstsw
mov
div
add
push
jbe
inc
or
jns
aas
mov
popf
in
adc
out
cmp
pop
mov
(bad)
mov
inc
cmp
es
or
inc
cmp
cmp
les
jg
cmp
scas
bound
cmp
mov
out
pop
or
cmps
xor
outs
mov
inc
cmp
aad
xor
mov
and
xor
inc
pop
retf
adc
call
and
inc
(bad)
sub
xor
sub
imul
or
test
jne
loopne
dec
adc
test
(bad)
iret
and
stos
and
mov
push
aas
ins
fstp
mov
int3
adc
sbb
in
loop
mov
pop
xchg
xchg
sahf
pusha
ret
jmp
aaa
xchg
mov
xchg
call
mov
jp
shl
mov
or
outs
(bad)
fisub
popf
(bad)
mov
mov
cli
rcl
push
dec
push
ret
(bad)
icebp
lahf
cli
sub
push
inc
frstor
mov
cmp
ror
aas
sbb
inc
enter
dec
push
mov
ss
push
cli
xor
pop
lea
inc
(bad)
rcl
cld
or
and
mov
arpl
out
push
loop
or
mov
aam
adc
imul
dec
xor
test
sbb
cli
call
add
out
not
pop
(bad)
outs
xor
imul
call
daa
sbb
jge
cli
mov
not
mov
out
cmp
inc
fistp
jo
add
cmp
fldenv
stc
xchg
mov
and
pop
fcmovb
inc
or
adc
xchg
not
jle
xor
test
dec
ins
sbb
test
test
sbb
cmps
jns
loope
ret
leave
pusha
pop
adc
push
jns
mov
call
es
add
nop
mov
jbe
jno
add
fild
aaa
(bad)
sub
call
mov
aaa
add
pop
out
adc
jle
sub
xor
pop
test
ret
and
push
aad
mov
push
cmps
out
jg
outs
pop
jl
xor
push
push
mov
sbb
lock
adc
jecxz
test
mov
icebp
sbb
mov
push
jb
dec
mov
aaa
and
xchg
(bad)
es
fdiv
sub
xlat
nop
or
retf
lea
cmp
mov
loope
in
jl
mov
shr
adc
out
mov
je
call
adc
add
ror
stos
xor
outs
fcom
inc
push
loop
add
mov
pop
or
jne
add
(bad)
aas
inc
adc
lock
dec
in
fsub
dec
addr16
cmps
jne
sub
rcr
fistp
in
mov
int3
in
jbe
call
pop
push
and
or
movs
add
adc
and
add
xlat
fistp
arpl
xor
fnsave
lahf
cmc
ins
inc
fadd
xchg
mov
xor
addr16
add
fcom
pop
add
cmp
jns
sbb
inc
repnz
and
popf
loope
int
mov
mov
xchg
fwait
sub
mov
fisub
pop
or
mov
lock
(bad)
inc
inc
jnp
jmp
xor
fs
ret
lock
(bad)
movs
retf
lods
dec
leave
dec
or
jnp
dec
retf
jnp
inc
(bad)
cmp
dec
test
sbb
scas
aam
and
push
loop
call
shl
dec
pop
sbb
aaa
lahf
xor
pusha
fiadd
gs
fadd
jmp
inc
push
ins
sbb
sti
xchg
push
cmp
fcomip
ins
pushw
lods
(bad)
pop
ret
xchg
sti
test
(bad)
or
cld
and
sub
jg
fidivr
aas
and
xlat
sbb
xchg
cmp
js
sar
xor
or
call
adc
ja
xchg
jno
test
mov
sbb
pop
and
popf
cdq
cmc
xchg
sar
adc
jecxz
xchg
jmp
adc
push
jno
fstp
mov
mov
mov
addr16
bound
xchg
jl
pop
cmp
inc
pop
push
pop
sar
add
fiadd
jmp
pusha
fwait
inc
fscale
movs
cmp
daa
sahf
jae
jmp
jge
mov
cwde
iret
sub
sub
clc
mov
pop
or
ret
mov
scas
add
pop
out
mov
mov
in
(bad)
adc
pop
std
inc
and
in
pop
cmps
or
push
test
xchg
cmps
jle
imul
adc
push
xor
pushf
xchg
pop
and
jmp
mov
lahf
inc
jecxz
inc
mov
push
in
test
sub
sti
sub
sbb
push
inc
lea
js
mov
out
aas
ins
loope
cld
push
and
cmp
jmp
push
fsubr
jmp
sub
jl
adc
pop
sub
popa
shl
je
stc
push
std
jbe
(bad)
out
xor
addr16
fisttp
rcr
cwde
dec
adc
jmp
mov
scas
test
lds
push
xchg
adc
sub
add
ja
dec
ror
fs
leave
jo
ins
push
int
lods
inc
and
enter
cmp
or
rol
mov
in
xchg
jecxz
in
nop
(bad)
mov
fmul
stos
jmp
aas
dec
fist
ja
inc
jns
cmp
cmp
mov
xor
mov
mov
in
std
repnz
jl
aad
dec
psubsw
jne
jg
jo
push
push
ror
dec
sub
xchg
xor
or
stos
or
jb
push
or
pushf
push
loopne
pop
fadd
sub
inc
jge
lods
lds
push
add
mov
mov
pop
jp
sbb
dec
jg
dec
neg
adc
xor
sahf
pop
mov
int
in
call
ja
arpl
sbb
lahf
test
pop
lahf
shl
inc
mov
iret
dec
sbb
and
jmp
retf
test
in
lods
sub
dec
add
mov
jmp
or
mov
mov
call
dec
les
or
xor
in
cwde
jmp
retf
repz
cmp
int3
jns
pop
(bad)
fnsave
xchg
out
dec
fnstenv
(bad)
aaa
lahf
lea
retf
cmp
and
call
xchg
mov
push
inc
test
dec
dec
nop
sub
dec
jp
jecxz
push
sub
xchg
cmp
(bad)
inc
imul
push
adc
cdq
out
cmc
cmp
xor
add
mov
jmp
inc
xchg
adc
fisttp
iret
loopne
cmps
sbb
sbb
inc
inc
xor
cmp
inc
pop
sub
fnstsw
fcomp
cmp
cdq
hlt
jge
inc
lahf
int3
jne
mov
inc
xchg
add
mov
ror
imul
push
arpl
jmp
pop
sbb
call
pop
ret
data16
neg
shl
sbb
sti
jb
mov
es
push
(bad)
pop
dec
sub
sbb
pusha
dec
test
aam
daa
sbb
test
cmp
pop
aad
repnz
adc
mov
clc
mov
adc
aaa
mov
cli
cmp
mov
loopne
pop
jp
xchg
jo
ds
jge
cmp
jle
out
xchg
mov
imul
mov
push
cld
out
sbb
xchg
ficomp
add
ret
mov
imul
push
xchg
jno
in
cmp
stos
and
repnz
(bad)
repz
adc
push
repnz
sbb
sbb
push
es
fldenv
mov
jmp
xchg
cdq
and
cli
scas
call
(bad)
jmp
ins
outs
pslld
jo
push
push
xchg
rcl
jg
mov
pop
cmp
xchg
in
inc
sahf
adc
idiv
inc
je
loope
ins
out
(bad)
out
test
fisttp
es
mov
mov
xlat
push
stc
or
iret
sbb
xor
cli
adc
aad
mov
inc
daa
adc
faddp
ja
dec
clc
fs
cmc
fmul
cs
outs
(bad)
lock
loope
jp
inc
pop
in
arpl
pop
lods
(bad)
cmps
cmp
je
or
inc
mov
je
icebp
xlat
std
mov
add
xchg
scas
lods
jmp
and
clc
mov
rcl
push
cs
lds
shr
enter
jo
dec
and
imul
mov
xchg
cmp
push
rol
cmp
neg
adc
xchg
add
pop
xchg
add
rol
stos
pop
lds
ret
jle
push
test
stos
fwait
push
lds
aam
sub
retf
adc
mov
(bad)
adc
and
and
inc
das
dec
fs
sub
push
cmc
test
sahf
push
add
dec
pop
frstor
push
repz
xor
or
fst
xor
stos
xchg
ret
mov
sbb
cmp
push
push
mov
popf
lods
xchg
xchg
xchg
sub
add
ret
xchg
scas
retf
loopne
sub
sar
call
and
hlt
mov
jge
xchg
inc
dec
call
jmp
cmp
pop
ret
out
xchg
fcomp
jmp
jmp
adc
sar
jmp
and
leave
loop
cld
sar
dec
loope
mov
inc
mov
inc
jne
iret
test
and
(bad)
popa
or
jbe
lahf
cmp
arpl
pop
frstor
xchg
sub
imul
sti
cdq
dec
test
or
jnp
pusha
repnz
inc
mov
cwde
sub
mov
pop
inc
out
mov
arpl
xchg
lods
mov
outs
add
push
scas
jb
add
and
stos
jne
jecxz
pop
daa
rdpmc
loop
not
xadd
pop
stos
je
rcr
dec
test
pop
push
pop
nop
inc
(bad)
fcomp
shl
jb
stos
cmc
(bad)
outs
(bad)
mov
cmps
int
sub
sbb
xchg
xor
adc
lods
adc
(bad)
sahf
dec
sbb
add
mov
inc
and
pop
cmp
or
pop
in
adc
sbb
popf
xadd
pop
lock
cmp
xchg
cmp
test
mov
scas
(bad)
add
jns
mov
js
dec
sub
pop
retf
inc
pop
inc
mov
cld
dec
not
mov
jp
jecxz
arpl
and
dec
fsubr
ja
or
(bad)
or
rcl
jp
push
inc
cmp
xor
add
fwait
push
dec
xchg
mov
jecxz
mov
cli
pusha
mov
push
pushfw
leave
or
jmp
mov
inc
or
jnp
mov
out
rcl
mov
cld
push
adc
xchg
mov
add
es
int3
movs
mov
adc
and
mov
mov
mov
aam
out
outs
inc
cmp
cli
loopne
dec
dec
push
dec
push
(bad)
jns
dec
mov
les
adc
adc
push
hlt
aaa
fs
test
mov
nop
js
sbb
mov
jnp
icebp
rol
and
add
sub
mov
jmp
dec
push
fucom
push
std
pop
aam
or
add
pop
or
xchg
shl
dec
fild
push
inc
add
sbb
es
int3
push
push
cmp
and
dec
pop
sbb
repnz
iret
ja
rcr
int3
fst
push
bt
inc
sub
xor
and
shl
or
ror
ss
push
in
mov
(bad)
or
ret
in
and
push
test
mov
sub
lods
push
neg
daa
ins
pop
and
jp
retf
movs
push
and
loop
cmp
xlat
and
xor
mov
sbb
out
cmp
lea
dec
pop
jg
pop
mov
push
mov
pop
sbb
outs
push
mov
xlat
js
inc
ror
sbb
imul
mov
pop
xchg
pop
push
ja
loope
jns
and
dec
or
(bad)
xor
xor
cmp
div
mov
iret
pop
jns
jp
sub
and
lock
mov
jle
mov
ror
daa
lods
mov
test
aam
mov
fcom
and
test
fadd
jbe
dec
(bad)
imul
adc
pop
inc
inc
test
rcr
dec
out
sub
in
cmp
pop
lea
push
fnstsw
xor
(bad)
cmc
xlat
cdq
sbb
add
pushf
mov
dec
loop
(bad)
mov
stos
and
sbb
cmp
in
adc
daa
cmp
rol
mov
sbb
cmp
lea
push
mov
sub
jmp
cmp
(bad)
out
movs
dec
or
sbb
in
fwait
arpl
inc
jae
push
cmp
xor
mov
push
imul
push
call
jmp
mov
(bad)
push
mov
loop
cmp
test
stos
aaa
icebp
lods
mov
jg
xchg
xchg
call
pmaddwd
cmc
neg
pop
addr16
out
hlt
in
inc
push
push
adc
mov
push
sub
mov
cmp
idiv
fs
pop
jl
sbb
dec
pop
nop
sbb
mov
adc
jge
test
add
test
jmp
push
push
xor
jecxz
or
jne
add
ja
mov
xor
inc
gs
jl
mov
ins
dec
push
pop
add
movs
dec
cmp
add
repnz
xchg
inc
and
ins
mov
push
sahf
cmps
sub
jns
in
or
push
inc
ficom
push
call
loope
imul
iret
dec
aas
fcmove
push
call
jae
sub
push
xchg
push
dec
jge
mov
idiv
outs
xchg
jb
cmps
jbe
xlat
inc
lock
adc
jno
mov
xchg
or
jp
mov
and
adc
jb
and
jne
arpl
iret
mov
pop
(bad)
in
call
adc
nop
inc
mov
push
dec
aaa
pop
xor
pop
call
imul
add
(bad)
es
dec
(bad)
dec
push
icebp
xchg
push
xor
out
push
sbb
dec
(bad)
dec
aad
lods
test
es
mov
fcom
pop
shl
js
and
sub
mov
int3
retf
jnp
lods
in
xor
jb
mov
sub
stc
les
stc
add
xchg
adc
arpl
lahf
push
inc
or
icebp
into
push
sbb
xchg
clc
pop
jo
jl
push
fs
jle
cmp
xor
inc
idiv
in
mov
js
lods
mov
sbb
mov
aas
mov
ja
sub
daa
fdiv
js
add
into
xor
xchg
push
add
mov
dec
in
test
xchg
pop
inc
ins
int3
aam
(bad)
out
int
pop
and
scas
pusha
jg
loope
lods
retf
retf
jo
xchg
cmp
cmps
jo
test
mov
dec
movs
xchg
jg
inc
aad
xor
sbb
xlat
cmp
nop
test
and
daa
xchg
pop
xchg
ins
xchg
add
pop
sbb
lods
enter
cmp
pop
pop
mov
sub
pusha
or
cmp
rol
jns
cmps
retf
mov
xor
xor
xchg
pushf
mov
xchg
pop
popf
inc
push
dec
fs
in
xor
bound
lods
inc
inc
or
mov
mov
sub
jp
dec
in
jne
clc
pop
xor
xchg
sub
or
bound
inc
jns
movs
jecxz
push
cld
loope
clc
(bad)
pop
ja
push
adc
sub
retw
lock
dec
inc
adc
or
(bad)
out
jg
movs
mov
cwde
push
sbb
mov
jmp
sub
inc
shl
pop
xor
jmp
sar
xor
outs
fadd
pusha
imul
(bad)
sbb
ror
jecxz
scas
mov
retf
push
in
pushf
aad
or
cmc
xchg
das
lock
nop
sbb
fiadd
stos
pop
cdq
lea
push
pop
into
xchg
xchg
pushf
(bad)
js
xchg
movs
sti
int3
sbb
push
dec
xchg
imul
jbe
jne
jno
fistp
xor
xor
sub
dec
xchg
cmp
test
xchg
xor
cs
loopne
out
std
cs
or
and
outs
add
test
shr
inc
xchg
fist
sub
pop
ins
mov
lods
mov
fwait
lock
cs
int3
push
inc
repz
int
mov
ror
clc
mov
call
push
dec
mov
mov
inc
xchg
das
mov
push
(bad)
and
adc
pop
sbb
in
int3
nop
neg
xchg
cmc
sub
xchg
mov
lods
addr16
sub
fxch
pop
pop
sbb
js
and
inc
faddp
mov
xor
add
icebp
addr16
sbb
mov
dec
pop
add
cli
xor
nop
movntps
sti
jle
adc
test
jge
aaa
or
pop
push
adc
push
lea
enter
push
xor
add
xchg
std
ins
mov
pop
aad
fild
fisttp
dec
dec
sub
lods
in
rol
imul
sub
mov
or
(bad)
addr16
out
and
popf
les
cmps
or
add
cld
(bad)
loopne
push
(bad)
sub
pop
nop
cmp
std
pop
pop
or
dec
xchg
mov
cmp
test
sbb
mov
faddp
lea
dec
cmc
inc
int
jge
mov
xchg
leave
(bad)
xlat
pop
ss
adc
push
mov
test
aad
fld
xchg
idiv
inc
mov
cli
sbb
push
mov
mov
or
in
ror
cmp
pushf
cs
mov
xchg
dec
cmp
push
push
dec
clc
loop
into
in
aaa
mov
and
inc
leave
cs
out
push
pop
jno
push
inc
jg
push
arpl
xor
or
ins
mov
jmp
jmp
mov
repnz
mov
sub
scas
and
push
cwde
jmp
repnz
pop
mov
adc
xchg
fbstp
sbb
(bad)
mov
dec
loope
jmp
xchg
mov
mov
mov
outs
and
das
cwde
popf
sub
add
push
mov
add
sub
clc
cmp
(bad)
pop
jbe
mov
iret
daa
stos
jnp
sahf
mov
push
pusha
bnd
jb
data16
lea
(bad)
in
jl
push
arpl
xchg
and
sub
cmp
adc
test
dec
jecxz
push
mov
inc
xchg
retf
inc
lods
sub
and
pop
and
scas
test
outs
(bad)
fild
int
jle
call
cs
out
bound
jbe
popa
out
jno
aad
call
int3
loopne
fsubr
idiv
out
repnz
xor
out
xchg
cli
test
sbb
jnp
dec
fld
int
inc
jb
push
pop
pop
cmp
mov
lock
push
out
jno
popa
or
jbe
pop
mov
ins
cdq
xchg
jns
xor
das
mov
add
bound
add
cdq
dec
fxch
out
mov
clc
inc
or
cmp
dec
mov
repz
rol
mov
xchg
(bad)
fst
mov
mov
mov
stc
and
aad
mov
push
popf
fs
fldenv
or
outs
or
jp
inc
push
jp
sbb
jp
jge
sub
stos
cwde
inc
jae
xor
sub
cmp
adc
adc
lods
push
neg
movs
jp
jp
test
lahf
dec
in
(bad)
cwde
ret
shl
or
cdq
push
mov
retf
bound
cmp
rcl
stc
lods
push
and
dec
xchg
cmp
int3
push
xchg
pusha
pop
ins
xor
enter
push
pop
ret
mov
and
pop
int3
pop
icebp
mov
pop
or
cs
adc
call
stc
jmp
aaa
or
leave
shr
int3
js
mov
xchg
xor
mov
cli
arpl
(bad)
into
loop
jg
push
xchg
jmp
dec
enter
add
das
ret
dec
jecxz
adc
movs
pop
int
jp
test
int
or
mov
add
jge
call
adc
scas
add
sbb
popa
pop
push
sub
and
out
test
pop
jmp
mov
sbb
sbb
and
xor
dec
and
cdq
sub
adc
adc
sbb
xchg
mov
in
add
popa
xchg
pop
fbld
sbb
aas
cmp
or
mov
sbb
loopne
or
sbb
iret
stos
in
and
fimul
push
cmps
push
pop
pop
xchg
cmp
sbb
fdivr
imul
cdq
dec
push
into
shl
inc
push
add
stos
mov
inc
sbb
xchg
sar
fadd
xlat
test
stc
cmp
dec
xlat
fisub
pusha
js
jp
test
iret
xor
enter
les
inc
std
cmp
cmps
stos
cmp
or
call
xchg
js
test
push
mov
jecxz
jbe
dec
jcxz
aaa
std
and
sbb
stc
loopne
repz
fwait
xchg
imul
push
icebp
sbb
rcr
daa
ja
fadd
sbb
call
mov
(bad)
adc
pop
mov
ins
(bad)
fst
xor
dec
mov
adc
std
sub
dec
je
mov
cmp
xor
psllw
setnp
add
push
test
in
nop
gs
into
inc
xchg
arpl
mov
shl
jmp
js
and
inc
adc
xchg
imul
jo
rcr
pop
mov
test
xor
into
(bad)
cmp
outs
mov
movs
inc
and
repnz
jbe
cmp
test
gs
aaa
mov
add
movs
mov
scas
xchg
stc
cdq
stos
dec
imul
cmp
and
int3
adc
pop
mov
mov
cmp
es
imul
xchg
(bad)
xor
scas
mov
cmc
daa
cmp
xchg
or
rcl
out
mov
pop
ficom
hlt
out
push
fimul
imul
ins
inc
adc
mov
pop
pushf
ror
mov
jns
dec
fdivr
adc
inc
mov
imul
retf
in
js
es
fbstp
(bad)
xchg
in
inc
push
mov
push
(bad)
cmp
rol
jae
test
jg
shr
add
ret
(bad)
ds
pop
bound
jno
arpl
mov
clc
stc
aaa
xchg
or
inc
adc
js
and
and
cmp
xchg
jl
cmp
mov
pop
adc
aas
ja
sbb
ins
add
pop
or
cmp
fisttp
xor
inc
fmul
repnz
and
loope
push
test
lds
sbb
imul
push
mov
sub
ret
dec
push
ret
aas
push
dec
loope
inc
adc
loopne
movs
aam
(bad)
aam
stos
xor
mov
lods
adc
pop
jle
jp
xchg
sub
push
or
mov
mov
test
call
cwde
nop
test
out
leave
pop
or
fisubr
jle
(bad)
ds
nop
adc
dec
sub
cdq
lea
xor
push
push
xchg
lahf
cwde
and
(bad)
push
push
fiadd
dec
loop
xchg
popf
push
cmp
(bad)
xor
bound
shl
aad
dec
inc
cmp
sub
mov
lahf
push
loope
cld
mov
add
stos
push
ins
cmp
push
movs
inc
dec
icebp
(bad)
pop
mov
jmp
fadd
data16
mov
xor
adc
(bad)
rol
stos
xchg
fild
jo
ror
fcomi
mov
push
jb
mov
nop
adc
in
call
adc
mov
dec
mov
sub
in
mov
push
adc
mov
scas
outs
or
not
dec
push
xchg
cmc
lea
sub
pop
xchg
jl
push
or
dec
push
mov
sub
cwde
leave
(bad)
retf
add
mov
cmc
sbb
mov
adc
mov
xchg
(bad)
fisub
jg
jnp
sub
int3
inc
and
aad
push
fld
enter
test
jl
stc
xchg
push
push
test
(bad)
mov
hlt
xchg
push
in
pusha
jecxz
popf
(bad)
push
adc
mov
inc
jmp
pop
push
push
jmp
jb
and
ja
push
fwait
fs
cmp
(bad)
movs
cli
mov
int3
cdq
sbb
movs
xchg
sbb
add
js
mov
adc
and
inc
movs
ror
dec
ficom
mov
out
xchg
cmp
inc
and
outs
xchg
loopne
dec
call
and
mov
jl
pop
clc
jecxz
mov
fwait
pop
inc
je
mov
enter
mov
lods
imul
aad
mov
xor
jns
ror
xor
inc
jns
call
push
repnz
cmp
push
lods
jno
pop
pop
pop
and
mov
mov
inc
stos
das
in
(bad)
ds
push
test
lahf
inc
bound
fcom
ret
not
jle
stos
cwde
dec
aam
repnz
jp
stos
lahf
add
les
call
mov
or
(bad)
stc
(bad)
and
cmp
mov
jae
lds
icebp
aas
sub
call
in
(bad)
cmp
adc
and
jb
or
in
lods
ja
psubusw
fwait
adc
pop
cli
out
jp
cs
xor
push
lods
sub
pusha
dec
scas
pop
ss
outs
sahf
mov
hlt
cmp
not
imul
push
outs
mov
sbb
xchg
and
mov
stc
adc
cmp
enter
sub
mov
(bad)
xchg
leave
(bad)
retf
jnp
outs
imul
inc
mov
inc
jg
fiadd
push
gs
dec
sbb
int3
jno
hlt
sub
(bad)
jp
loop
cdq
stc
gs
mov
push
je
sub
test
cmps
adc
jecxz
sub
dec
adc
aad
sbb
add
sub
in
push
adc
mov
dec
sub
mov
out
dec
or
sub
sub
inc
mov
inc
mov
add
loope
jmp
xchg
int3
repnz
cmp
cvtpi2ps
dec
xor
mov
sub
cmp
xor
dec
mov
sbb
leave
sbb
jl
mov
push
pop
or
dec
fld
loop
ficomp
out
jno
nop
cli
(bad)
data16
lods
pop
sbb
das
repnz
push
call
jae
mov
sub
popa
subps
mov
sti
sub
loopne
inc
fcmovbe
or
out
or
sub
jge
adc
mov
jle
pop
adc
and
pop
cmp
sub
jmp
mov
scas
in
lahf
xchg
sbb
push
dec
mov
leave
dec
lods
adc
inc
dec
int
dec
ret
cmp
and
add
xchg
or
pushf
inc
(bad)
xchg
or
xor
into
aaa
pop
mov
call
xchg
outs
movs
or
(bad)
retf
xor
adc
pop
sbb
repnz
mov
ins
and
repnz
pop
loop
push
pop
sub
mov
pop
sub
xchg
or
cs
data16
pop
shl
add
sbb
jp
arpl
or
cmp
inc
jb
aas
int
stos
jge
push
inc
ds
mov
aam
add
jnp
lods
dec
sahf
test
data16
xchg
mov
inc
push
sbb
mov
inc
fsubr
mov
push
pop
mov
jo
mov
push
ds
dec
inc
loopne
cmps
or
(bad)
mov
shl
mov
ins
mov
ror
sub
or
inc
ss
js
(bad)
mov
rcr
fdiv
adc
repz
push
fstp
stc
jbe
cmp
dec
test
aaa
(bad)
jno
aas
mov
cli
add
mov
mov
out
int
cmp
aas
or
pop
mov
movs
mov
cmp
mov
sub
cmp
jns
add
dec
xor
sbb
cmp
imul
mov
shl
call
sahf
or
jg
out
pop
dec
xor
jne
or
jmp
daa
mov
cwde
mov
xor
ret
or
popa
adc
ret
out
push
(bad)
xchg
cmp
test
add
cdq
pop
mov
sbb
sar
pop
jle
sbb
popa
pop
or
xchg
nop
push
aam
scas
rcl
mov
fcomp
inc
xor
jns
int
jo
ficomp
xchg
pop
adc
push
loop
js
jle
jno
loope
out
push
sub
pop
mov
bound
sbb
aam
ins
aas
neg
pop
mov
je
ret
test
or
mov
addr16
push
stc
aam
xchg
or
(bad)
jl
mov
xlat
mov
scas
cmp
ins
pop
rcl
lods
push
repz
scas
mov
pop
adc
call
sbb
inc
push
add
and
out
es
sbb
jge
fdivp
dec
jg
shr
stos
sbb
jl
xchg
push
test
pop
mov
ror
mov
sar
xchg
test
je
or
mov
int
or
outs
xor
outs
xor
jo
pop
mov
fs
(bad)
sub
dec
push
sub
(bad)
ja
jbe
mov
pop
push
jb
or
scas
mov
test
cdq
xchg
push
jne
popf
shl
and
mov
xor
lds
ds
push
out
jbe
neg
dec
pop
mov
iret
leave
dec
push
(bad)
mov
cmp
mov
jns
cmps
pop
fucomi
call
retf
push
xor
stc
daa
sbb
xchg
scas
or
sbb
add
push
test
sbb
cmp
out
cmp
mov
cmp
adc
aam
ror
mov
or
xor
jge
mov
or
add
jae
jne
cmps
mov
aam
pop
fisubr
or
or
movs
mov
bt
dec
cmp
imul
cmp
mov
les
out
sub
mov
fnstsw
mov
lea
outs
call
adc
cmp
xor
jno
mov
imul
push
mov
push
popa
push
icebp
mov
jge
and
push
sub
mov
idiv
push
mov
jne
push
dec
(bad)
mov
es
xchg
loopne
mov
sbb
fwait
loopne
or
in
popa
jnp
aas
iret
jbe
test
dec
jge
nop
add
inc
mov
xchg
mov
xor
retf
xor
inc
jno
nop
aas
daa
xchg
enterw
and
movs
nop
ins
dec
nop
std
retf
dec
cli
pop
pop
and
nop
and
dec
jle
stos
jbe
into
jmp
jae
sub
push
and
mov
jle
push
mov
cmovle
movs
push
mov
push
sub
popa
xor
rcr
call
jae
test
cli
das
scas
adc
pop
pop
jg
mov
pusha
jecxz
cmp
dec
add
and
dec
jge
and
ja
jecxz
cdq
scas
out
pop
das
in
imul
push
pop
cmp
jge
movs
cmps
shr
outs
stos
sub
movs
test
inc
lods
lock
hlt
inc
xchg
adc
(bad)
pop
mov
jp
lock
dec
adc
int
leave
daa
inc
mov
fnstenv
loope
cmp
popa
cs
cmp
ror
jne
dec
out
icebp
aaa
cmp
xchg
adc
mov
bound
add
or
fisttp
or
test
add
js
dec
mov
jb
mov
mov
jnp
push
jp
or
in
xchg
cmp
clc
loopne
sub
sub
inc
or
iret
push
fcmovu
in
(bad)
stos
mov
add
mov
psllw
mov
mov
dec
pop
mov
dec
dec
cmp
push
rcr
sub
shr
dec
sub
xchg
popa
shl
dec
call
dec
fs
iret
cmp
xchg
cmp
mov
into
ffree
pusha
clc
or
add
xchg
data16
call
add
pop
and
enter
and
shl
test
out
mov
shr
ret
or
mov
sub
ficom
popf
xchg
sar
jmp
movs
and
cli
push
clc
sbb
setno
test
ret
sti
in
xchg
mov
sbb
mov
push
frstor
div
mov
inc
test
es
hlt
in
dec
mov
sahf
call
call
ja
push
adc
cmps
sub
ds
mov
jg
adc
sub
cmp
cli
sub
sub
inc
jg
cmp
mov
(bad)
fsubp
and
mov
and
aam
(bad)
in
or
mov
inc
dec
retf
fbld
dec
cmp
push
mul
xor
mov
enter
outs
mov
in
sbb
pop
mov
cmps
pop
dec
call
fwait
scas
lahf
push
xor
dec
into
fs
adc
das
push
ror
ror
ds
scas
jae
jge
mov
or
dec
dec
xor
dec
sbb
out
lods
sub
inc
loopne
inc
ret
xchg
mov
mov
shl
rcr
imul
in
or
nop
scas
push
retf
sbb
cmp
scas
test
xchg
(bad)
leave
inc
push
pushf
inc
push
inc
jne
enter
lods
ret
fimul
fistp
shl
jg
ret
(bad)
sub
loope
sub
je
iret
mov
inc
lea
sbb
mov
pusha
lock
lods
stos
xchg
imul
dec
out
es
cmps
push
sub
and
add
and
gs
cli
push
cli
push
cmp
mov
fst
stc
dec
mov
jbe
(bad)
xchg
mov
pop
push
movs
into
(bad)
inc
addr16
jmp
out
mov
cmps
fisubr
jecxz
xchg
call
cmp
test
(bad)
and
cwde
out
mov
imul
scas
adc
sub
sub
(bad)
inc
or
(bad)
popf
aad
retf
mov
mov
repz
or
test
(bad)
jne
movs
pop
pop
outs
ret
or
mov
lock
and
mov
mov
lock
test
out
test
inc
adc
pop
mov
outs
out
jne
sar
jbe
cmp
sbb
jnp
into
inc
push
frstpm(287
jno
nop
mov
call
daa
cmp
rol
xchg
daa
cwde
sti
add
rcl
int
mov
aas
mov
outs
inc
sub
bound
mov
addr16
cmp
dec
jmp
stos
data16
mov
dec
add
dec
jge
(bad)
pop
jae
mov
dec
push
in
add
mov
adc
cmp
stos
int
push
inc
leave
cdq
jle
in
icebp
test
sbb
mov
mov
sbb
jecxz
stos
repnz
ds
or
sub
add
inc
int3
push
imul
xlat
sbb
xor
cmp
mov
data16
pop
or
or
loop
xor
pop
jle
push
jmp
dec
xchg
ret
add
stos
repz
mov
sub
enter
pop
scas
nop
stos
inc
imul
in
sub
aad
jmp
mov
or
dec
push
adc
xchg
ror
cmp
adc
cmp
jg
fild
cdq
lahf
loope
xchg
adc
and
out
(bad)
jnp
out
cmps
xchg
mov
aam
add
in
inc
mov
aam
test
shr
pop
push
sub
cmp
in
mov
sub
sbb
and
ffreep
adc
mov
cmp
call
mov
pop
or
cmp
push
jmp
icebp
es
push
and
and
scas
cs
sar
pop
and
mov
pop
loop
cs
xor
inc
out
std
or
sub
scas
in
cmc
test
jns
shl
xchg
imul
cmps
push
jmp
xor
add
repnz
in
mov
retf
cld
out
mov
test
pop
outs
daa
xor
and
in
stos
pop
adc
xor
push
inc
cmp
lods
out
jne
dec
sub
sub
adc
cmp
popa
push
in
loope
and
jno
mov
xor
jnp
push
jp
movsx
movs
adc
mov
sbb
adc
mov
retf
ins
push
add
or
es
and
jbe
js
clc
xchg
dec
dec
xor
not
cmp
mov
cmp
dec
imul
mov
mov
lahf
xor
cmp
xor
icebp
ja
ret
loope
in
xor
ret
shl
imul
mov
mov
xlat
mov
mov
and
outs
popa
call
sbb
or
pop
test
xlat
jle
clc
nop
rcr
pop
mov
mov
xor
cld
jmp
pop
dec
out
aad
dec
out
into
and
dec
or
jno
or
push
push
clc
xchg
or
jg
mov
movs
in
lea
or
scas
jmp
or
inc
(bad)
jmp
jmp
cli
test
and
fisubr
mov
pop
arpl
and
int3
pushf
hlt
jp
cld
cmp
cmp
ja
push
or
aaa
push
stc
xchg
jmp
ss
js
jge
dec
loop
sub
das
loopne
xchg
add
jmp
adc
jbe
pop
call
pop
xor
mov
cmp
out
dec
nop
sbb
adc
add
test
stos
adc
(bad)
outs
cs
shl
retf
sub
sbb
mov
jg
idiv
xchg
in
pop
adc
outs
stos
pusha
bound
adc
je
in
sbb
loope
(bad)
jmp
aas
sbb
mov
lock
or
sub
pop
fwait
push
pusha
dec
call
inc
push
and
or
(bad)
dec
test
add
out
mov
int3
ds
aas
lahf
jmp
mov
add
bound
push
(bad)
shr
ror
push
xchg
sbb
(bad)
cmps
sub
pop
aaa
jne
xor
push
push
mov
or
es
sub
xchg
cmp
inc
pushf
and
imul
pop
xor
repnz
or
cmps
fscale
dec
in
retf
push
dec
mov
stos
out
xchg
inc
movs
xor
movs
mov
(bad)
cmp
test
bound
fiadd
xor
mov
dec
add
rol
(bad)
push
das
sub
into
pop
and
mov
mov
cli
jge
(bad)
jp
outs
adc
inc
lds
dec
inc
out
fsub
bound
call
call
push
hlt
fwait
xchg
jmp
mov
xor
and
cmps
push
xchg
rcr
fwait
shl
out
ins
in
test
(bad)
jnp
cmp
cmc
out
xchg
ret
cmps
stos
sub
push
addr16
ror
cmp
xchg
lahf
jg
xchg
ss
push
xchg
sbb
or
mov
jno
int3
int
inc
rcr
and
cs
dec
call
sbb
pop
shl
and
push
and
loop
cmp
popf
in
mov
pop
cld
push
xchg
sahf
ja
pop
jl
add
ret
adc
shr
push
mov
sbb
mov
dec
sub
iret
in
mov
jb
sbb
fidiv
jg
mov
arpl
adc
pop
or
push
mov
lods
in
push
or
sbb
arpl
adc
push
push
mov
repnz
pusha
inc
pop
jmp
lock
sbb
jg
mov
inc
loopne
pop
cmps
aaa
out
mov
jmp
sahf
adc
repnz
gs
es
jmp
rcl
jno
outs
xchg
imul
jp
push
aam
jne
jl
shr
or
inc
pop
or
repz
jnp
inc
cmps
mov
xchg
mov
jge
dec
and
retf
pusha
xor
dec
cmp
(bad)
addr16
aam
adc
out
and
test
std
adc
stos
and
and
pop
call
fidiv
xor
sbb
push
xor
sub
push
(bad)
sti
xor
sub
out
inc
cmc
das
jmp
sti
push
pop
arpl
push
ror
test
mov
jmp
mov
sbb
xor
pop
(bad)
lods
jno
push
or
mov
(bad)
jmp
fsub
dec
xor
mov
pop
popf
lods
mov
stos
jl
jle
repnz
xchg
(bad)
stc
xor
rol
and
mov
iret
dec
jbe
adc
mov
inc
sbb
push
ret
mov
in
mov
loope
xchg
jge
xor
stos
pop
xor
mov
ins
adc
stc
push
test
or
cs
mov
push
mov
or
sbb
xor
inc
out
pop
dec
pop
stc
arpl
pop
cmc
inc
adc
ret
call
xor
jp
test
ror
fisubr
dec
cli
pop
pop
test
jmp
bound
xlat
mov
or
add
or
std
xor
mov
add
stc
pop
jb
cdq
nop
adc
mov
sub
sbb
rol
jmp
xchg
fidiv
mov
jmp
dec
mov
xchg
mov
stos
movs
add
jmp
or
lods
mov
fs
aad
fstp
outs
fidiv
pop
mov
or
(bad)
(bad)
push
in
sub
push
test
pop
pop
push
xchg
lods
push
ret
sub
xchg
or
mov
jle
mov
jge
lds
and
jl
adc
or
inc
dec
mov
dec
cld
fdiv
ins
(bad)
cmp
ret
sbb
data16
or
inc
nop
adc
push
aaa
pop
not
(bad)
add
addr16
cmps
test
ret
cmp
popa
mov
stos
pop
je
loop
pop
mov
xchg
add
fsub
adc
mov
sub
xchg
sbb
mov
out
aam
and
dec
xor
loope
cmps
sub
mov
mov
jbe
xor
push
fs
rcr
sub
mov
jmp
mov
enter
icebp
in
inc
cmp
ja
jo
aad
xchg
(bad)
ss
jmpw
test
mov
mov
jecxz
popf
mov
stos
dec
aam
nop
hlt
inc
lods
add
adc
(bad)
in
icebp
push
and
adc
mov
sub
enter
dec
ficom
(bad)
cmp
nop
dec
les
jb
inc
inc
scas
jne
cmp
dec
sbb
push
(bad)
pop
push
mov
fbld
int
dec
fcom
jle
movs
outs
sub
mov
pushf
cli
lock
mov
push
mov
movs
jg
clc
sbb
sub
cmp
mov
add
xor
imul
ins
fwait
stos
retf
pop
or
pushf
pop
push
loop
push
push
rcr
lock
arpl
sub
int
loope
mov
movs
lods
xor
adc
fadd
cmps
inc
push
bound
mov
mov
jo
xor
ficomp
enter
in
xor
mov
sub
and
popa
cwde
outs
sar
mov
inc
cmp
cmp
jge
pop
jo
xchg
sbb
aam
add
jb
ret
and
mov
out
daa
js
push
mov
jge
je
adc
stc
sbb
xor
xchg
lods
sar
into
cmp
jg
fsubr
mov
movs
push
cwde
aaa
mov
sti
call
mov
sub
mov
push
in
jp
sti
push
and
pushf
jnp
les
sti
cmp
dec
ins
add
lahf
cmps
(bad)
sbb
xchg
test
mov
call
mov
ds
js
jae
mov
aas
xchg
cmp
cmp
pop
idiv
fstp
fld
pop
inc
mov
cdq
in
xchg
inc
dec
push
or
ins
dec
inc
daa
sub
ja
pushw
jb
jg
or
pop
sbb
fs
fs
jmp
scas
mov
jbe
inc
mov
cdq
in
ins
cwde
jbe
cdq
sahf
cmps
add
sbb
mov
scas
push
xor
mov
(bad)
dec
fsub
cmp
and
jnp
xchg
adc
push
dec
add
fbld
(bad)
inc
mov
mov
cmp
inc
je
leave
jns
lods
adc
mov
xlat
std
adc
xchg
xor
jg
test
push
or
movs
or
sbb
scas
jbe
enter
(bad)
mov
lock
pop
stos
xor
in
xchg
mov
mov
scas
cli
enter
xchg
int3
js
dec
daa
loope
mov
loop
cmp
lods
test
(bad)
fild
jmp
pop
lahf
imul
repnz
pusha
fmul
jno
ja
mov
inc
jne
xchg
adc
jb
push
pop
jecxz
cmps
and
jmp
leave
stos
mov
(bad)
mov
in
dec
fisub
ds
(bad)
push
outs
inc
leave
in
loopne
ror
cmps
cmp
pop
mov
sahf
sbb
dec
push
add
aad
call
out
repnz
(bad)
xor
sub
adc
pop
aam
aad
mov
mov
iret
ss
test
fs
repnz
outs
mov
xor
sbb
jle
jno
mov
jnp
js
push
mov
adc
pushf
data16
(bad)
repnz
pop
or
scas
push
push
add
cmp
dec
mov
cdq
sbb
xchg
icebp
retf
lds
out
out
(bad)
outs
rcl
or
push
sbb
ins
lds
xor
retf
push
xchg
imul
das
push
fnsave
mov
pop
dec
cli
mov
adc
mov
loopne
das
fmul
stc
data16
adc
lock
hlt
push
cmp
xlat
sub
mov
mov
rcr
jge
leave
jo
push
sbb
jmp
mov
fwait
jo
out
adc
neg
jne
in
(bad)
xchg
movs
pop
(bad)
movs
pop
or
sbb
pop
mov
mov
imul
push
cmp
push
cmp
pusha
je
mov
loopne
fst
push
jne
mov
sar
not
retf
xor
push
test
xor
aas
cs
pop
dec
(bad)
test
push
cld
std
inc
sbb
dec
mov
pop
inc
xchg
and
gs
add
push
jle
push
(bad)
xor
xchg
lock
fcomp
sub
or
rol
ins
repz
(bad)
mov
xor
scas
push
addr16
nop
push
sbb
fwait
and
lea
and
adc
imul
in
loop
jg
xchg
scas
cmps
shl
pop
cmps
test
lods
imul
jbe
jne
nop
dec
loopne
lods
enter
push
arpl
mov
inc
jp
call
shl
sbb
pop
sbb
add
aam
mov
mov
cmp
lods
gs
stos
inc
add
je
outs
sbb
fisubr
scas
movs
or
cli
and
stos
pop
add
std
pop
les
sbb
xor
mov
jmp
popf
xchg
lods
scas
shl
loope
fcomip
xlat
jl
mov
add
mov
dec
adc
loop
mov
push
adc
mov
aas
call
psraw
cmp
scas
dec
push
adc
aaa
lea
fwait
(bad)
xor
inc
or
sub
adc
push
mov
dec
(bad)
xlat
pop
daa
cmc
fdiv
adc
inc
push
mov
enter
cmp
pop
inc
xor
sbb
mov
jmp
pop
jno
jle
ins
out
int
test
outs
adc
and
test
sahf
xor
pushf
inc
stos
jecxz
sbb
(bad)
in
sbb
(bad)
movs
jmp
clc
or
loope
rcr
xchg
aaa
je
dec
mov
or
mov
cmps
std
inc
cmp
clc
nop
inc
pop
dec
push
stc
rol
popa
lods
outs
xchg
xor
sbb
dec
out
pop
push
dec
add
cli
adc
add
xlat
push
and
add
repnz
jo
sub
jecxz
add
shl
popf
ret
xchg
push
xor
mov
rol
inc
or
outs
add
add
gs
stos
mov
xchg
inc
xor
mov
rol
add
(bad)
cmps
mov
pop
add
cld
adc
popa
inc
pop
and
xchg
jmp
cmp
cmp
jbe
mov
gs
push
cmp
mov
sub
mov
(bad)
stc
cld
dec
(bad)
mov
ja
js
dec
mov
sbb
mov
mov
test
mov
push
sub
mov
sahf
out
js
or
js
leave
ret
and
sbb
loop
or
pop
fsub
(bad)
sub
mov
arpl
sbb
pop
shr
fbld
mov
call
cld
ss
jnp
test
ds
and
jg
ret
aaa
sbb
cdq
pushf
jmp
jp
ins
sub
mov
aam
adc
ficom
ds
rcr
adc
es
lahf
adc
nop
sar
mov
dec
jnp
mov
ins
pop
inc
(bad)
fucomip
mov
in
jae
bound
push
lods
ins
out
or
sub
sub
loopne
fwait
cli
je
mov
inc
and
scas
mov
aas
sbb
or
dec
push
pop
loope
in
out
ins
mov
sbb
adc
jns
jecxz
cli
mov
clc
mov
fcomp
aad
jg
sbb
and
sub
loopne
and
push
jbe
push
and
mov
movs
inc
pop
push
jl
sbb
pop
aaa
mov
call
test
outs
mov
pop
and
mov
(bad)
push
xor
lods
and
fisubr
pop
icebp
nop
popf
jb
push
loop
arpl
push
add
lds
fisub
mov
stos
cmps
jl
in
push
pop
shl
aam
sub
rcr
xor
shl
pop
cs
xchg
lods
mov
cmp
loopne
lods
pushf
pop
jmp
jp
and
pop
pop
leave
xchg
push
sahf
jmp
ins
idiv
mov
test
shl
inc
das
or
pop
jecxz
cwde
aaa
daa
cmp
push
loopne
int3
cs
add
mov
jge
loop
aad
stc
jecxz
shr
xchg
cdq
mov
daa
lahf
ds
pop
bound
fsub
daa
jge
scas
add
lods
sbb
test
mov
xor
jg
add
inc
addr16
inc
mov
and
adc
das
pop
lock
jmp
(bad)
iret
inc
jb
pop
inc
mov
mov
and
(bad)
push
push
and
cmps
push
push
fwait
mov
lods
cmp
cld
in
aam
shl
or
adc
scas
in
add
je
cmp
ret
test
mov
mov
dec
mov
int
popf
jge
bound
push
and
add
in
mov
repnz
jb
mov
or
hlt
cmp
ins
pop
call
mov
mov
dec
inc
xchg
aas
into
arpl
adc
add
enter
jne
mov
pop
(bad)
int3
add
retf
inc
jo
int3
sub
xchg
jecxz
and
loop
mov
retf
jo
cmp
retf
mov
xchg
mov
test
stos
xchg
bound
cmps
cmp
and
ins
inc
dec
out
and
test
mov
into
dec
out
xchg
pop
sub
retf
sbb
repz
cwde
mov
pushf
cmp
xor
in
mov
push
inc
lods
and
jle
sbb
jae
(bad)
add
lea
mov
aas
stc
add
dec
jp
test
jge
inc
mov
fstp
je
jg
aas
int
repz
inc
xor
jg
push
sbb
mov
mov
in
pop
dec
lock
mov
xchg
pop
retf
jno
js
mov
mov
fistp
xchg
mov
xchg
jbe
pop
popa
ficom
aas
pop
dec
hlt
mov
adc
adc
mov
test
(bad)
jo
data16
sub
nop
mov
cmp
inc
fimul
and
pushf
inc
mov
push
xchg
(bad)
fs
mov
adc
dec
mov
xchg
inc
jae
xchg
loopne
mov
shr
pusha
jo
popa
inc
sbb
xchg
and
push
mov
mov
push
js
aaa
idiv
call
mov
les
dec
repnz
lods
lahf
vphadddq
jb
pushf
xchg
mov
cdq
push
js
retf
in
arpl
mov
lods
nop
in
sub
and
inc
sahf
sbb
int3
push
fnstcw
sbb
mov
stos
gs
fxch
xchg
lds
sar
int3
nop
aaa
enter
je
xor
mov
inc
ret
mov
mov
out
ins
sub
mov
in
mov
or
dec
lods
les
leave
movs
mov
sahf
jmp
sub
inc
cmp
xor
aas
add
shl
jge
shr
adc
jo
dec
jmp
out
jmp
loopne
jge
shr
xor
por
aaa
cmp
retf
daa
sub
xor
mov
inc
fs
dec
div
cmc
add
cld
addr16
jg
ds
imul
fwait
push
mov
cmps
xor
out
inc
and
in
xchg
ret
push
loope
cli
je
mov
cmp
mov
xchg
or
or
lea
popf
stc
lods
or
das
in
mov
repz
sub
xor
fiadd
mov
xchg
mov
scas
jnp
xor
and
outs
out
inc
mov
test
fcom
in
stos
and
jnp
cmp
and
mov
in
ss
adc
dec
xchg
mov
push
loope
jo
adc
adc
lahf
push
sub
dec
adc
mov
in
mov
xchg
mov
daa
ret
sub
cmp
aam
arpl
movs
xchg
lds
xor
sti
and
sub
mov
sub
retf
outs
jmp
mov
inc
mov
add
pop
pop
add
daa
shl
hlt
pop
rcl
or
ins
xchg
rcr
xchg
mov
cmp
jbe
and
or
(bad)
xchg
cli
or
xchg
cwde
sub
mov
wrmsr
fsubr
pop
ins
call
(bad)
ss
sbb
mov
jl
xor
ret
test
ins
push
inc
mov
bound
inc
pop
sub
es
push
inc
pop
scas
push
cwde
sub
inc
xor
mov
push
ins
sub
and
or
and
mov
leave
lock
aaa
sub
inc
shl
(bad)
jecxz
sub
cmp
jae
lods
icebp
call
std
sub
imul
es
lds
dec
sub
cmc
add
jno
xchg
shl
cmp
test
xchg
cmp
ja
out
(bad)
std
cmp
or
lock
prefetch
or
sub
fucomip
dec
mov
adc
stos
test
pop
iret
mov
cmc
xchg
sub
cmp
xchg
ins
scas
outs
cld
ror
iret
jnp
jmp
(bad)
outs
fisttp
and
dec
rol
xchg
pusha
add
out
(bad)
fisub
or
mov
and
call
cli
adc
cmp
cmp
repz
mov
je
in
mov
push
idiv
arpl
mov
inc
sbb
cmp
or
popa
addr16
sbb
mov
ds
ror
xchg
mov
sub
and
cmp
or
mov
retf
icebp
jne
ret
pusha
scas
fcmove
jbe
and
pop
test
rcr
xor
dec
fcomp
das
inc
(bad)
ds
popa
mov
adc
adc
fstp
aas
jecxz
pop
mov
push
dec
adc
das
add
jmp
jo
fs
inc
enter
jg
mov
cmc
scas
pop
jo
pop
xchg
idiv
mov
dec
pop
mov
mov
mov
call
jmp
add
fdivrp
pop
jmp
push
in
mov
inc
repnz
pop
push
xchg
stc
jns
aad
xor
cmp
xchg
jnp
inc
add
in
xor
push
lds
inc
or
stos
dec
scas
jecxz
ss
sbb
sti
std
data16
xor
mov
aaa
sub
das
jno
inc
xchg
xchg
test
sub
mov
or
push
idiv
enter
adc
xor
inc
adc
push
outs
jnp
xchg
nop
mov
and
jp
xchg
dec
shr
sbb
cmc
inc
test
test
sub
sbb
inc
dec
aaa
adc
iret
sbb
push
sbb
iret
jnp
jecxz
jg
mov
cmp
add
jnp
js
rcr
neg
dec
mov
inc
add
clc
add
mov
imul
dec
cmp
sub
loop
and
cmp
cmp
adc
jp
pop
xchg
inc
fs
cmp
cld
jl
frstor
pop
or
inc
inc
dec
ins
mov
test
fistp
xor
xchg
retf
jmp
dec
in
sub
inc
dec
test
rcl
cmp
shl
mov
test
in
fidivr
xchg
push
outs
pop
pusha
out
int3
sbb
xchg
movs
jb
cdq
(bad)
inc
sub
test
sbb
cmp
pop
sbb
sub
dec
push
shl
shr
xlat
mov
leave
xchg
xor
push
sub
lds
fistp
sbb
out
and
rcl
test
push
rol
inc
(bad)
out
xchg
xlat
adc
sub
mov
(bad)
ins
or
outs
gs
dec
out
sbb
test
and
jge
jg
jp
pop
push
dec
int
mov
fstp
sub
lods
sar
sbb
dec
fs
xor
inc
adc
push
les
cmp
mov
dec
sub
loopne
(bad)
mov
ins
es
icebp
mov
sub
fld
push
or
in
retf
sub
test
jns
cmp
xchg
cmp
idiv
cmps
outs
fst
adc
sub
push
in
jne
jecxz
xchg
pop
jnp
push
int
adc
add
ficom
int
cli
and
push
jecxz
div
hlt
gs
and
mov
sub
jl
ins
inc
ins
repz
ret
pop
mov
addr16
mov
push
out
je
push
xchg
and
cmp
rol
inc
xchg
mov
adc
(bad)
(bad)
sbb
mov
into
sbb
mov
outs
out
out
arpl
mov
and
es
test
mov
push
mov
sbb
sbb
nop
jb
mov
lds
jnp
push
shl
fist
lea
repnz
dec
iret
aaa
inc
xor
cmps
cmp
or
sub
pop
dec
xor
in
and
pop
fist
cmp
jo
fs
xlat
sub
mov
cdq
pop
clc
dec
jae
pop
mov
leave
pop
mov
ret
repnz
xchg
pop
arpl
mov
popf
das
push
daa
dec
pop
aad
jge
xchg
popa
in
loop
call
(bad)
and
shl
mov
mov
(bad)
daa
into
dec
push
jne
out
xchg
cmp
pop
lahf
sbb
sub
(bad)
push
loopne
xor
out
jb
add
jp
les
aas
lods
pop
adc
jmp
ret
xor
sub
sti
sahf
push
cmp
push
push
jge
and
test
push
pusha
fwait
jb
shr
add
jbe
cmc
jmp
rcr
pop
sub
out
pop
xor
dec
or
xor
add
(bad)
(bad)
push
inc
and
bswap
or
cmps
pop
mov
mov
(bad)
dec
out
and
jmp
int3
and
das
add
ds
and
dec
dec
out
ds
iret
je
stos
and
push
xchg
sbb
pop
imul
mov
in
mov
sub
aaa
fisub
adc
add
fcmovb
test
pop
scas
sbb
cmp
mov
or
jecxz
test
cli
pop
int
ins
retf
fisttp
or
dec
sub
xor
dec
mov
loope
call
test
jl
sbb
pushf
pop
xchg
dec
cld
xlat
shr
adc
xchg
retf
in
arpl
movs
rcl
adc
aam
add
mov
push
arpl
cmp
nop
sbb
loopne
add
add
popf
aaa
outs
fst
mov
fldcw
(bad)
mov
and
and
jns
xor
jnp
cdq
or
jp
or
icebp
pushf
clc
mov
sahf
jbe
not
(bad)
pop
mov
and
mov
popa
xor
cwde
push
stc
popf
shl
inc
movs
nop
(bad)
adc
xor
mov
push
cmps
push
sbb
jg
icebp
jne
add
cwde
push
jmp
cdq
and
in
adc
iret
adc
or
fsubr
xchg
push
les
call
pop
movs
xor
lods
dec
in
jns
xor
aaa
push
xor
cli
pop
push
adc
in
dec
fisub
push
sbb
add
stc
rcl
lods
push
mov
fdiv
cmc
bswap
pop
mov
scas
das
and
mov
aaa
ss
repnz
sub
lds
sub
shr
pop
jb
adc
in
fwait
jae
(bad)
loopne
dec
xchg
add
add
push
push
lods
loope
lea
adc
test
test
outs
sbb
pop
lds
clc
neg
aas
ins
pop
imul
add
hlt
push
(bad)
or
mov
sbb
dec
sbb
daa
rcl
add
ins
push
push
(bad)
adc
sbb
xchg
aad
stos
and
rcl
pop
sbb
push
mov
mov
sbb
in
dec
(bad)
pop
sbb
rol
xchg
enter
pop
enter
sub
mov
lds
in
scas
add
test
jae
jbe
push
movs
add
(bad)
cmc
xchg
xchg
test
pop
inc
or
(bad)
jb
shr
and
cwde
das
retf
and
mov
sbb
push
frstor
ror
push
fbstp
and
add
dec
std
and
or
xchg
(bad)
retf
popa
(bad)
in
aas
xlat
xor
sub
mov
mov
or
out
sbb
and
jmp
stos
fcmovu
shr
jmp
aad
data16
jb
sub
out
mov
jo
ds
inc
(bad)
jmp
rcr
ja
arpl
cmp
stos
enter
xlat
ret
mov
xor
mov
ret
mov
push
in
cmp
adc
out
xor
repnz
mov
loop
jmp
(bad)
nop
dec
cld
enter
push
push
int
mov
and
pop
icebp
in
mov
jno
aaa
mov
or
mov
pop
mov
jnp
sti
and
arpl
xor
test
loop
fcmovnb
xchg
in
add
bound
jge
pop
sbb
sub
std
mov
xor
xor
mov
cmp
popf
xchg
fwait
loopne
xor
sbb
(bad)
mov
inc
jl
arpl
jle
scas
hlt
mul
and
cmp
out
das
stos
mov
into
shr
xor
mov
add
bound
sbb
in
ror
and
fcomp
push
cmp
mov
das
out
sub
sbb
cmps
xchg
bound
enter
enter
sbb
std
push
(bad)
jmp
inc
mov
(bad)
repz
or
mov
test
xor
push
xchg
jge
nop
nop
push
push
test
mov
loop
in
(bad)
(bad)
fwait
test
fsubr
sti
cmps
addr16
je
shl
mov
daa
fisub
or
and
mov
and
ret
inc
pop
inc
int3
leave
pop
jmp
dec
je
movs
ins
jnp
xlat
div
mov
mov
ss
mov
mul
(bad)
cmp
rcr
sub
xlat
mov
mov
fsubr
push
mov
cmc
xchg
pop
outs
hlt
xchg
jmp
int3
mov
lods
add
and
and
(bad)
fst
push
jle
jmp
sbb
push
rol
out
xor
das
out
xchg
outs
or
test
shr
inc
ds
xor
out
cmp
lock
hlt
inc
or
jne
lds
mov
bound
mov
pushf
out
movs
call
push
shl
ins
fild
sbb
in
or
and
jbe
pop
fstp
in
adc
mov
in
push
xor
rcl
fstp
push
sub
xor
mov
pop
hlt
dec
ror
add
sbb
retf
pop
aam
jmp
pop
dec
sbb
ins
(bad)
inc
fdecstp
add
aad
xor
cli
jae
xor
inc
or
add
int3
and
jo
clc
add
lahf
cld
out
and
xchg
sbb
cli
into
xor
add
jb
mov
mov
out
inc
imul
scas
fdivrp
clc
jns
rol
out
jmp
push
retf
mov
mov
sti
jle
xchg
xchg
mov
fidiv
lods
xchg
into
clc
mov
popf
fimul
cmps
movs
les
outs
adc
add
clc
inc
sub
loop
call
into
movzx
(bad)
stc
jl
jmp
add
imul
pop
push
sub
outs
inc
call
add
inc
in
les
xchg
xchg
mov
mov
int3
clc
(bad)
mov
mov
je
add
nop
jle
fldenv
pushf
add
repnz
stos
cmc
xlat
je
mov
mov
inc
or
hlt
xchg
or
les
cli
shl
pop
push
retf
inc
and
outs
stos
xor
jge
xor
xor
sbb
in
mov
jmp
(bad)
push
mov
inc
jbe
mov
xor
xor
in
dec
bound
xor
lods
pop
aaa
xchg
inc
lods
test
std
not
aam
sbb
out
xchg
je
xor
mov
xchg
mov
pusha
jp
pop
mov
aad
sbb
shr
pusha
pop
gs
outs
nop
dec
ds
pop
push
popa
jmp
or
arpl
dec
xor
mov
repnz
inc
aad
or
test
mov
pop
call
xchg
cmps
mov
arpl
push
adc
aas
out
jl
xchg
mov
lods
jnp
jg
mov
jbe
clc
fwait
imul
retf
bound
sub
or
call
and
sub
mov
rcl
xchg
and
sbb
or
pop
js
pushf
sub
hlt
xchg
mov
test
frstor
js
loop
xlat
loop
imul
pop
inc
fwait
dec
pop
and
adc
jne
rcl
add
aas
jmp
loope
stos
dec
xor
pop
jb
ret
shr
push
arpl
hlt
or
in
lahf
add
shl
aad
popf
jmp
sub
cwde
jmp
jae
cmp
mov
push
inc
xchg
jb
pop
mov
fist
les
das
fmul
(bad)
pushf
and
jb
xor
cmp
int3
pusha
mov
lock
adc
js
push
punpcklwd
xchg
out
dec
shl
fisubr
pop
mov
dec
adc
nop
(bad)
out
das
lods
adc
jae
jae
mov
xchg
lock
jo
sub
sar
inc
mov
movs
push
xchg
shr
push
cmp
shr
mov
xchg
mov
dec
mov
add
mov
jle
or
pop
shl
xchg
or
sub
add
pusha
sbb
cmp
sbb
xor
inc
pop
inc
stos
ret
inc
sbb
dec
xor
push
cmp
xor
dec
retf
ss
mov
pop
pop
inc
shl
and
mov
ja
jbe
xor
sub
mov
das
test
ins
inc
cmp
mov
sar
leave
xchg
movs
es
pop
adc
mov
fstp
loope
mov
sub
jae
or
aas
ficomp
xor
mov
pop
sub
jb
xchg
push
loop
or
ja
fisubr
xchg
mov
scas
les
in
push
pop
sub
ret
cmp
mov
adc
and
push
xor
mov
mov
mov
mov
push
(bad)
fild
out
aaa
in
scas
or
adc
enter
adc
enter
and
push
jnp
xor
jge
cdq
xchg
je
out
add
(bad)
shl
cdq
es
sbb
push
scas
ss
or
(bad)
(bad)
inc
ss
scas
clc
(bad)
mov
(bad)
shr
inc
sbb
or
mov
add
mov
es
mov
adc
mov
cmovs
inc
and
and
popf
std
repz
(bad)
xor
enter
sub
xchg
pop
(bad)
int
push
mov
pop
in
ins
push
mov
call
sub
stos
xor
sub
daa
jmp
inc
fbstp
cwde
popa
dec
out
ins
mov
lods
sbb
scas
inc
and
xlat
xchg
sub
repz
xchg
out
movs
out
mov
mov
inc
push
dec
pushf
mov
loop
xor
call
sbb
fdiv
pop
leave
iret
or
pop
push
mov
imul
cmp
enter
push
test
movs
cmp
enter
xchg
es
push
dec
push
jl
ret
pop
push
outs
cmp
mov
imul
xchg
rcr
jecxz
out
and
ret
mov
xchg
test
mov
inc
lahf
sti
jl
arpl
nop
mov
xlat
xlat
pop
scas
pop
(bad)
clc
inc
jge
sub
xchg
jge
scas
outs
into
jmp
jge
mov
fwait
loope
or
add
mov
fmulp
or
push
popa
in
mul
ins
xchg
popa
mov
icebp
aas
in
and
movs
rol
adc
imul
lahf
rol
jl
pop
push
mov
fisub
pop
outs
cwde
cwde
stos
push
int3
mov
loop
sub
push
bound
jl
rcl
adc
neg
sub
cmp
sub
or
fnstenv
icebp
call
icebp
gs
mov
mov
ret
dec
inc
push
or
out
iret
jo
loopne
out
add
sti
test
jp
aad
outs
movs
movs
std
mov
mov
mov
or
shl
ret
call
mov
mov
and
mov
scas
aas
push
push
mov
or
ins
sub
mov
add
adc
xchg
dec
lods
jle
push
lods
xor
outs
xor
cmp
or
sbb
dec
in
add
aas
dec
push
cmp
call
sbb
xchg
or
loop
cmps
push
sbb
shl
or
mov
mov
test
mov
or
test
cmovno
es
or
inc
add
in
rcl
sbb
adc
cs
enter
xchg
sti
lahf
aam
cmp
iret
ficom
push
arpl
adc
add
in
cmp
ficom
dec
jo
je
mov
test
push
and
push
sbb
in
mov
mov
push
push
imul
test
push
jno
add
fwait
and
retf
nop
push
cdq
mov
out
out
dec
dec
fadd
gs
sub
xlat
loopne
jmp
stos
and
or
sub
inc
xor
sbb
sub
fnstenv
mov
das
inc
leave
push
push
imul
cld
sbb
pop
pop
xor
loop
mov
lods
fs
daa
cmp
outs
movs
mov
jno
mov
clc
mov
pop
cmp
addr16
pop
arpl
dec
nop
shl
jnp
xchg
cmp
cdq
test
sub
repnz
pop
jae
add
cmc
or
mov
adc
aaa
stos
inc
push
cdq
mov
pop
sbb
sub
loop
mov
cmp
in
inc
xchg
mov
xor
mov
xor
std
pushf
add
cmps
pop
das
je
sub
mov
push
add
xor
inc
nop
cmps
mov
test
fstp
sahf
std
mov
aas
push
dec
lea
push
fild
adc
imul
mov
push
hlt
sbb
arpl
jg
loop
retf
dec
sbb
jle
repnz
xor
cli
dec
gs
out
jge
jecxz
mov
push
les
movs
push
cmp
inc
ja
mov
sbb
xchg
fbld
adc
dec
shl
mov
popa
mov
repnz
sbb
call
aam
push
or
les
pop
and
(bad)
xor
jl
ss
or
lahf
imul
xchg
fbld
sbb
js
aad
xor
or
ror
and
scas
fmul
mov
sub
out
mov
test
aad
lods
ret
xchg
ja
into
dec
sti
xchg
stc
icebp
jbe
pop
jl
xor
shr
cmps
mov
mov
test
add
mov
sbb
cmp
adc
call
push
jbe
leave
xchg
sbb
stos
aas
cdq
push
arpl
cmp
mov
loopne
daa
xchg
jno
push
cmp
bound
lods
adc
inc
inc
xor
(bad)
fsubr
(bad)
mov
(bad)
jb
jge
jne
stc
sbb
cmp
mov
pop
dec
or
mov
div
xchg
adc
jle
addr16
adc
mov
mov
jbe
jge
jmp
lock
fisubr
data16
int3
loope
sbb
pmulhw
dec
inc
fdivp
rcl
pusha
test
sub
and
(bad)
dec
and
mov
movs
fs
ss
sbb
test
inc
pushf
adc
sbb
dec
or
popa
inc
inc
(bad)
xchg
sbb
inc
loope
sbb
es
arpl
xor
(bad)
out
sub
pop
cli
push
mov
imul
lock
pop
mov
in
ret
lock
cmp
lea
sbb
sub
not
aas
inc
push
push
add
ins
js
xlat
popa
dec
ret
outs
out
aaa
pushf
test
jmp
ja
mov
inc
or
clc
retf
jnp
retf
adc
sbb
cmps
lahf
out
sbb
int3
dec
repz
sbb
(bad)
fsubr
fcom
xchg
nop
ins
sub
arpl
js
mov
retf
sub
inc
jmp
push
pop
xor
nop
out
push
movs
shl
popf
sbb
jmp
es
or
in
dec
lea
aas
mov
xchg
or
dec
(bad)
adc
inc
sub
js
imul
jle
cs
mov
les
sub
and
xchg
pop
fdivp
call
fwait
inc
mul
and
arpl
ins
in
test
mov
daa
sub
sbb
aaa
xchg
js
clc
fld
bswap
les
adc
pop
stc
or
or
fadd
fcomp
into
or
movs
or
out
xchg
dec
add
mov
dec
and
ja
push
or
dec
fwait
ret
data16
adc
or
mov
or
or
and
test
call
ss
mov
sbb
test
mov
and
out
adc
push
aam
pop
and
lock
shl
imul
call
loop
loope
push
mov
jl
bound
adc
jno
adc
stos
out
inc
fsubr
jae
pop
ss
mov
aaa
dec
cwde
ss
mov
in
xor
adc
scas
in
fidivr
push
das
cmp
popa
sahf
stos
dec
ss
add
lock
adc
ret
aam
fs
or
push
outs
icebp
pop
std
xchg
int3
(bad)
in
cmps
test
cmp
lahf
sbb
in
xchg
jp
jnp
mov
daa
adc
pop
fild
mov
push
xor
fist
pop
jle
pop
leave
add
shl
sbb
inc
jl
inc
popa
adc
push
push
inc
pop
mov
or
mov
test
jnp
nop
pop
push
cmp
jp
add
ss
cmp
mov
cwde
push
lods
sub
imul
in
xor
iretw
les
arpl
test
sub
adc
jmp
mov
shl
sbb
inc
push
ja
jb
add
(bad)
xor
retf
xor
sahf
cli
dec
mov
fldcw
inc
jl
(bad)
rcl
push
lea
xchg
loope
pop
mov
xchg
scas
(bad)
mov
xchg
push
test
adc
jecxz
ja
ja
pop
mov
add
fisub
and
inc
sbb
(bad)
bound
imul
aad
in
aad
push
ret
pop
cs
inc
scas
enter
int3
call
push
popa
pop
dec
lds
inc
mov
inc
xchg
inc
imul
pop
sub
dec
xor
push
pop
jmp
jb
push
xor
retf
mov
lea
js
les
mov
mov
push
sar
adc
je
in
adc
push
xchg
jl
push
sbb
dec
or
int
inc
mov
or
sahf
imul
inc
rol
sub
pop
lds
les
sbb
outs
out
jmp
movs
repz
(bad)
or
xchg
jnp
or
sahf
ds
int
or
dec
and
ins
test
or
and
push
pop
adc
and
shl
test
push
inc
div
dec
fld
call
stos
inc
movs
jl
cmps
push
aaa
sub
ja
pop
sbb
push
mov
xchg
leave
aas
mov
push
outs
cli
(bad)
mov
xchg
enter
cmc
dec
adc
movs
repz
xlat
fs
add
cld
and
adc
and
mov
outs
cli
inc
push
lods
rol
or
lea
push
clc
cli
fimul
mov
jne
leave
sub
jle
push
mov
jbe
adc
bound
sbb
mov
and
mov
adc
addr16
sub
in
loope
fbstp
and
and
test
mov
mov
xchg
push
(bad)
movs
clc
in
and
pop
cs
or
mov
xor
test
push
or
pusha
iret
mov
repz
scas
mov
push
cs
leave
fs
pop
push
inc
in
ds
mov
pop
fdivr
mov
cmp
cmp
push
inc
popa
push
mov
push
add
rcl
test
pop
cmp
jmp
jbe
ins
mov
mov
cmp
lahf
cmp
push
pop
dec
(bad)
sbb
xchg
or
mov
sbb
std
cmc
dec
out
fcom
dec
ja
adc
sti
imul
js
and
jg
outs
lds
mov
daa
add
daa
call
sub
ds
repz
push
jno
in
sbb
mov
pop
jbe
aad
fmul
push
or
ss
aaa
movs
adc
jg
clc
dec
imul
dec
adc
ss
mov
and
pop
dec
inc
xchg
das
dec
inc
mov
cs
scas
inc
ds
dec
sub
(bad)
hlt
jle
inc
aas
push
into
mov
pop
add
pop
ss
pop
out
les
aaa
push
imul
mov
or
dec
test
daa
inc
jno
or
adc
or
fistp
shl
push
cld
leave
mov
dec
or
hlt
jbe
and
dec
xor
mov
xchg
jecxz
push
lock
cmp
mov
xchg
ss
rcl
and
in
sbb
(bad)
shl
mov
push
sahf
inc
scas
or
push
cwde
ss
inc
xchg
sbb
dec
add
fidiv
jns
in
xchg
sub
pop
outs
(bad)
mov
sti
push
pop
cmp
fst
jp
popf
add
loope
xor
add
cmps
movs
sti
hlt
hlt
test
sti
movs
mul
sub
mov
loopne
or
(bad)
mov
leave
mov
xor
lods
cmp
(bad)
in
xchg
cmp
leave
jl
(bad)
sub
adc
clc
(bad)
pop
mov
shl
sti
sbb
or
add
mov
push
xchg
xchg
xlat
stos
push
mov
outs
inc
lods
es
xor
mov
dec
fs
jg
call
gs
scas
fmul
or
ficomp
ja
cmovs
mov
adc
sub
loope
fidiv
outs
int
xchg
and
test
add
imul
sbb
(bad)
test
adc
pusha
fmul
sub
dec
aam
push
jge
movs
outs
adc
cmp
lahf
jle
fldcw
mov
data16
cmp
mov
sub
hlt
das
cmps
dec
test
sub
sahf
jle
aaa
and
xor
movs
pop
or
fucomip
adc
fmul
jbe
mov
sbb
cmps
sub
dec
mov
out
or
mov
out
into
sbb
mov
pop
mov
test
call
int3
inc
jo
mov
xchg
fbld
fs
jg
sbb
pop
dec
(bad)
imul
es
not
sub
jnp
retf
popa
dec
mov
or
das
repz
dec
push
lods
loope
or
mov
inc
ror
sub
jo
cdq
or
cs
enter
idiv
mov
add
mov
ds
shl
adc
adc
int
fisttp
cs
pop
cdq
ss
sbb
push
fsub
sbb
test
fistp
push
add
popf
sub
aaa
in
push
mov
push
xor
cmp
add
pop
and
jae
fld
jne
pop
mov
dec
and
mul
call
inc
push
fisub
fsubp
bnd
inc
scas
xor
xor
inc
(bad)
mul
or
call
cmp
jns
sbb
test
jns
in
stos
les
out
and
fisubr
fs
fsub
jns
push
iret
cmc
inc
xchg
sbb
push
jae
or
cwde
popf
add
fidivr
lea
mov
xor
in
sbb
add
add
mov
cld
(bad)
sub
dec
inc
adc
stos
jbe
cli
dec
lods
inc
ins
and
mov
mov
cmp
retf
sub
(bad)
xor
sbb
mov
sub
rcr
repnz
clc
add
lock
daa
push
and
neg
pop
int3
pop
pop
leave
pusha
cdq
imul
loop
and
mov
data16
jo
(bad)
dec
fstp
pop
dec
(bad)
jo
test
mov
mov
popa
lock
iret
xchg
shl
mov
mov
repnz
lahf
frstor
mov
adc
add
dec
js
pop
sbb
jp
pushf
leave
rcl
add
jb
push
popf
das
int3
and
or
dec
sti
jge
mov
mov
aad
and
push
dec
fld
pop
push
inc
lods
(bad)
xchg
in
bound
call
push
dec
out
xor
xchg
jns
ret
test
and
ret
cmp
sub
fnstcw
pushf
retf
ret
mov
or
int3
shr
pop
mov
add
add
mov
add
push
sub
(bad)
sub
adc
rcl
(bad)
std
repz
jne
adc
ja
mov
dec
cli
push
mov
jae
mov
div
sub
mov
xor
pop
aad
(bad)
les
or
mov
jnp
cmc
mov
retf
dec
sub
mov
sbb
popa
cmp
cwde
cli
retf
xchg
sbb
add
mov
dec
scas
dec
popa
fiadd
leave
inc
inc
mov
jae
dec
mov
in
in
sti
pop
jmp
repz
cmp
mov
jecxz
and
movs
sub
cwde
les
push
mov
sbb
outs
adc
cmp
mov
jmp
inc
dec
rcr
popa
dec
push
jl
jmp
in
mov
lahf
(bad)
test
cdq
push
pop
aam
cmp
ficomp
sub
push
add
(bad)
out
sub
pop
pop
adc
mov
fadd
mov
outs
adc
bound
call
mov
les
and
lds
dec
popa
dec
xchg
loop
pop
stos
ja
retf
dec
and
xchg
daa
enter
jle
dec
ins
mov
lahf
dec
add
call
arpl
ja
jns
push
ins
dec
xor
mov
rcr
mov
arpl
fstp
or
jmp
and
mov
pop
mov
push
jae
popa
dec
sti
jno
add
out
out
mov
das
sbb
in
push
sbb
(bad)
sbb
xor
ror
int3
push
mov
repz
xchg
pop
mov
or
rol
cmp
(bad)
es
loop
ret
push
add
loopne
in
and
daa
jnp
push
and
(bad)
mov
loope
push
in
sub
or
cld
sti
push
sbb
or
sbb
push
pop
mov
cmps
enter
in
pop
xchg
cmps
and
dec
mov
js
cmp
dec
xchg
pop
cld
mov
or
sub
jl
outs
lea
sub
fwait
ret
lods
jg
mov
jp
jl
add
or
js
jp
je
pop
loope
daa
std
mov
cmp
xor
scas
pop
(bad)
jmp
out
sub
into
imul
jecxz
push
es
push
jbe
dec
adc
jb
call
cmp
or
push
(bad)
jp
or
int3
add
push
std
mov
push
je
aad
sub
pop
out
jge
ror
xlat
and
(bad)
je
cs
outs
clc
repz
jp
add
out
lahf
jp
leave
mov
pop
dec
nop
sub
test
pop
cmp
movs
sbb
fwait
out
xchg
add
rcr
dec
mov
xor
aad
push
test
mov
mov
or
out
test
or
pop
jbe
adc
cmp
lea
call
loope
iret
add
jge
ror
movs
div
mov
pop
in
aas
xchg
fistp
rcr
jns
inc
mov
call
das
jne
cmps
pop
stc
xor
dec
inc
sub
add
aad
in
into
xor
clc
cli
in
das
mov
test
cmp
(bad)
nop
or
push
xor
xor
nop
and
jg
mov
into
dec
dec
cmps
dec
dec
lahf
mov
mov
mov
pop
push
inc
mov
mov
push
fwait
in
mov
adc
and
sub
sbb
cmp
dec
sahf
add
lahf
dec
push
pop
sub
lods
jecxz
and
and
xlat
cmp
inc
adc
cli
xchg
retf
sbb
jae
and
repz
jl
aas
xchg
dec
push
adc
rcr
inc
ins
popf
push
dec
sub
jo
arpl
in
into
sbb
or
dec
(bad)
fcmovnu
fistp
sub
push
xchg
or
cmp
test
push
fdivr
xchg
loop
sbb
dec
psrad
ficomp
test
lods
push
pop
adc
ret
cld
sub
neg
dec
out
sbb
and
push
sub
adc
sub
sbb
push
loope
push
sahf
and
dec
bound
mov
call
popa
jns
pop
retf
fst
test
dec
or
shl
xor
mov
es
xchg
xchg
leave
xor
je
fst
adc
mov
xor
sub
push
in
aad
xchg
xchg
loopne
and
dec
adc
aam
mov
cmp
imul
rcl
or
mov
pusha
imul
shr
mov
je
pop
retf
and
cmp
stos
retf
aas
push
rol
jp
sahf
es
mov
adc
retf
ds
cmp
gs
test
mov
mov
cdq
mov
out
outs
push
rcl
sti
popf
jle
push
jne
mov
cs
mov
adc
mov
es
lahf
into
inc
imul
clc
fwait
pop
sub
mov
movs
push
stc
mov
jns
xchg
xchg
jns
cwde
pop
add
add
lds
sbb
clc
or
xlat
xor
mov
push
jns
out
pop
ss
lods
ret
adc
cmp
jp
popa
test
push
cmp
mov
aas
test
push
not
ss
shl
ja
in
cmp
sar
setns
add
pop
shr
ret
mov
int
repnz
dec
ds
outs
ins
mov
mov
jge
retf
popf
cmp
stos
adc
jle
jo
fsub
scas
test
loop
enter
idiv
cmp
adc
dec
repnz
push
(bad)
test
mov
out
retf
gs
cmp
imul
fwait
repz
out
cld
xchg
dec
mov
add
or
imul
push
test
outs
jae
shl
rcl
xchg
and
push
push
mov
inc
sti
inc
aaa
cld
pop
add
adc
mov
dec
gs
clc
or
mov
mov
dec
ss
mov
add
les
repnz
jo
fsub
aas
rcr
xchg
pusha
jecxz
mov
out
loopne
mov
sbb
xchg
cld
dec
fnsetpm(287
mov
adc
lock
scas
jb
pop
shr
xchg
ret
inc
mov
xor
and
add
lods
icebp
xchg
test
fstp
bnd
fs
xchg
aad
fiadd
jno
jae
xor
push
mov
push
inc
adc
mov
xchg
aaa
and
mov
pop
fxch
push
mul
sub
dec
(bad)
push
mov
rcl
push
test
stos
xchg
mov
mov
pushf
and
sub
in
dec
fdivr
push
mov
sub
jno
in
div
dec
imul
data16
addr16
push
add
test
dec
ret
aas
cmp
retf
popf
outs
or
cmp
or
aas
jnp
icebp
push
std
and
add
inc
adc
cwde
mov
mov
std
mov
xchg
nop
ret
repnz
push
sbb
icebp
mov
mov
adc
xchg
(bad)
ins
jle
xor
repnz
test
cmps
lds
cdq
lds
scas
aas
les
mov
mov
or
sub
push
jb
mov
cs
push
dec
sbb
xchg
xchg
sbb
adc
aaa
data16
sbb
int
repnz
movs
jnp
das
add
stos
jecxz
add
retf
pop
ja
scas
sbb
mov
cs
jne
push
test
lea
jp
or
lods
mov
aad
dec
and
call
xor
xor
xchg
and
jmp
xor
mov
mov
push
(bad)
xchg
adc
sub
les
or
push
and
stc
inc
push
mov
sub
xchg
jmp
dec
mov
xchg
cmp
and
sahf
ret
mov
cli
dec
xchg
pop
jmp
scas
(bad)
arpl
push
mov
aad
inc
aam
test
(bad)
imul
xor
xlat
minps
sti
mov
ja
jl
outs
pop
mov
xchg
imul
add
mov
dec
xor
call
pop
icebp
mov
pop
into
or
xchg
jecxz
add
mov
bound
pop
jno
push
imul
sub
mov
hlt
or
fs
inc
or
adc
loope
stc
push
loope
sbb
scas
es
repz
mov
and
ss
or
stos
daa
dec
movs
mov
push
adc
jb
pushf
call
inc
js
jae
push
and
scas
pop
retf
jge
mov
mov
xor
mov
aad
fisubr
sub
sbb
call
pop
mov
cmp
in
or
stc
jo
inc
xchg
aaa
mov
sub
or
jo
idiv
scas
in
push
dec
lods
push
aam
call
jbe
xchg
push
popa
pop
ins
adc
jg
popf
outs
outs
stos
pop
xchg
loope
dec
out
pop
push
and
mov
mov
push
push
test
and
lea
fwait
jno
mov
popa
lahf
mov
sbb
je
shr
xlat
cwde
sub
sbb
pop
jae
dec
test
aaa
push
arpl
rol
adc
mov
jle
mov
retf
mov
jmp
inc
cmc
mov
cli
lods
mov
lea
(bad)
adc
xor
mov
add
xchg
or
addr16
std
std
and
mov
imul
gs
cmp
cmp
fist
gs
imul
sbb
cld
iret
icebp
imul
jg
sahf
stos
mov
or
xchg
leave
dec
xor
push
addr16
retf
sbb
cmc
sbb
cs
and
pop
repz
repnz
aam
xchg
in
jge
sti
dec
into
sbb
sbb
call
cmp
and
or
mov
xchg
out
out
xor
call
lahf
push
test
outs
enter
dec
cmps
mov
loopne
push
repnz
dec
test
ins
movs
sar
movs
cmp
js
enter
jae
pop
(bad)
dec
je
loopne
ja
adc
pop
add
fwait
cmp
xchg
cdq
mov
jge
pop
shl
(bad)
shl
mov
cmps
or
sbb
lods
sub
push
and
xchg
add
btr
(bad)
out
mov
pop
cmp
add
or
add
xchg
cs
and
fisubr
xchg
push
cli
loop
pop
popa
xor
lahf
pop
mov
jnp
js
pop
lods
fs
inc
cwde
sqrtps
jge
fsub
call
cmp
pop
push
mov
iret
dec
cmps
std
(bad)
jo
and
or
aam
inc
lods
imul
dec
push
movs
inc
ins
push
mov
and
cli
adc
mov
loopne
jmp
and
loop
mov
jecxz
lock
dec
jmp
in
stos
sub
inc
ror
sar
push
mov
pushf
inc
inc
adc
jge
jmp
in
ins
fld
nop
fprem
push
sub
xchg
addr16
xchg
and
aad
push
ror
int
cmps
jae
int
inc
lea
cmp
push
dec
shl
sub
sahf
sbb
inc
sahf
inc
in
iret
jns
mov
and
mov
sub
and
clc
or
push
mov
paddsb
xchg
icebp
adc
das
and
push
pop
cmp
pop
inc
sub
jne
mov
xor
fidiv
inc
lods
aaa
lahf
fstp
adc
in
in
movs
lock
inc
ja
test
mov
xchg
push
ins
outs
test
add
xchg
sar
ds
pop
lss
xor
sub
jns
lock
and
xor
xchg
add
retf
call
js
xor
jno
(bad)
fnsave
(bad)
ins
jmp
les
aad
stc
movs
(bad)
pop
cs
cmp
sbb
xchg
pop
icebp
inc
or
cmps
icebp
sahf
cmp
add
inc
dec
mov
mov
mov
(bad)
aam
enter
scas
or
xor
sub
mov
cli
lds
cmp
add
jno
push
xor
pop
or
(bad)
ss
cmp
adc
inc
in
fsubp
fild
inc
repz
or
push
sub
adc
cwde
sar
xchg
jnp
jmp
jae
mov
mov
inc
in
nop
dec
xor
fstp
cmc
lock
arpl
repz
push
enter
and
push
pop
xchg
out
xor
call
addr16
sub
mov
mov
ror
test
fcmovu
cmps
mov
sbb
or
xor
js
pop
(bad)
fdivr
int
xor
into
fstp
cmp
and
and
ja
and
dec
rcl
xor
dec
mov
shl
loop
call
push
push
div
push
je
cmp
push
cld
aas
mov
push
out
cmp
rcr
cld
jbe
mov
mov
das
dec
or
pop
popa
imul
dec
and
mov
push
fnsave
in
push
icebp
dec
sar
or
and
sub
out
jno
addr16
lock
imul
stos
lds
or
popf
pop
das
ficomp
jp
dec
cmps
adc
xchg
inc
das
or
push
mov
(bad)
ins
fnstcw
stos
dec
add
inc
js
stc
gs
cs
inc
xor
cli
or
sbb
fnstenv
pop
imul
or
xchg
mov
mov
mov
stos
retf
ins
lds
and
mov
push
es
and
repz
dec
sub
adc
mov
cmp
mov
mov
jb
xlat
mov
stos
stos
sub
pop
test
loope
sub
(bad)
pop
sub
inc
dec
pop
mov
xor
xor
in
imul
or
repz
cmp
fsubr
inc
push
inc
push
jo
xchg
sbb
push
mov
ds
jae
outs
int3
cmp
or
dec
rol
pop
push
mov
outs
or
fldenv
in
mov
movs
or
xor
(bad)
and
iret
icebp
lea
shl
mov
or
add
data16
arpl
cmp
mov
or
dec
jns
sbb
lods
cld
out
jge
in
add
imul
jne
inc
adc
mov
test
test
je
or
push
mov
(bad)
fwait
inc
fidiv
ficom
mov
(bad)
cmp
mov
jnp
jl
jb
out
push
data16
sbb
repnz
dec
and
fild
aad
and
cs
add
add
mov
pop
lods
mov
lods
sbb
and
dec
adc
dec
dec
mov
dec
or
vandnps
push
iret
jb
adc
ret
pop
lods
test
dec
push
or
out
pop
jecxz
ficom
and
adc
lahf
adc
mov
aam
stos
push
sub
fs
and
shr
xchg
push
jns
mov
push
pop
mov
xchg
popf
mov
add
sbb
ins
(bad)
sbb
jl
push
(bad)
mov
les
fwait
adc
inc
xchg
push
cmp
loop
sub
push
pop
loop
ds
mov
fdiv
int
rcr
gs
xchg
loop
push
test
pop
mov
jb
outs
gs
popf
xchg
dec
retf
fcomp
xchg
push
dec
imul
sbb
repz
xor
mov
and
ror
(bad)
adc
lock
jmp
pusha
mov
arpl
(bad)
vpcomud
aaa
mov
xchg
cmovl
xchg
adc
shl
loope
push
jne
out
dec
sub
mov
jmp
inc
push
mov
shl
cld
xchg
adc
xor
cmp
xor
add
mov
mov
cld
inc
xor
push
cs
movs
rol
pop
cmp
pop
jb
enter
and
addr16
gs
ins
dec
jae
aam
or
or
jp
(bad)
fistp
jmp
out
xor
inc
xor
pop
cwde
sub
test
and
out
or
aaa
add
lock
aas
jno
and
dec
in
push
dec
ins
aad
test
movs
or
jge
add
or
adc
bound
fwait
mov
cdq
inc
out
dec
loopne
inc
xor
mov
xchg
ds
push
test
dec
sar
or
xchg
stc
in
pushf
sar
and
and
ss
frstor
call
mov
outs
jmp
or
repnz
push
fnstsw
retf
mov
mov
add
mov
out
arpl
and
jg
sub
sbb
mov
cmps
ss
retf
(bad)
push
cmps
mov
loope
das
lock
inc
test
pop
cmp
mov
rol
adc
outs
mov
in
test
stc
jns
sbb
mov
popf
dec
sbb
inc
in
cmp
lock
xor
mov
nop
sar
and
push
cmp
aas
and
(bad)
or
call
int
jle
sub
cmp
in
add
(bad)
xor
cdq
pusha
lods
and
and
shl
in
stos
(bad)
lock
or
ins
xchg
std
fwait
jno
sub
stos
cdq
ret
push
cmps
mov
or
inc
into
pop
push
jne
and
dec
mov
sbb
adc
mov
mov
ret
test
ins
je
dec
sbb
or
pop
mov
mov
pusha
dec
rol
fcmovb
in
enter
retf
jecxz
jo
cli
aam
mov
mov
push
inc
dec
xlat
enter
pop
(bad)
sti
ud2
mov
mov
clc
(bad)
clc
popf
pop
dec
(bad)
jbe
and
or
rol
test
test
mov
cld
sbb
push
mov
push
in
pop
adc
add
sub
mov
xor
in
mov
cmc
mov
sub
ins
scas
inc
int
sub
dec
enter
scas
dec
mov
dec
inc
retf
or
pop
in
dec
int3
fdiv
das
and
enter
xchg
stc
icebp
pusha
adc
add
loop
or
jo
rcl
xor
push
or
cld
retf
fadd
dec
dec
sub
in
mov
bound
out
mov
mov
ror
pop
mov
in
fstp
cmp
lahf
rcl
addr16
scas
test
call
add
mov
cmp
mov
sub
repnz
lods
sub
jae
mov
mov
test
or
xlat
fld
das
adc
cli
cmp
popf
xchg
or
mov
jle
push
dec
or
xor
inc
js
push
inc
jne
xor
call
inc
jno
aas
(bad)
das
(bad)
jne
outs
sbb
fild
lds
aad
(bad)
loope
(bad)
cli
addr16
inc
or
cmp
fnsave
lock
or
or
aaa
sbb
inc
xor
xchg
nop
(bad)
push
inc
repz
sbb
mov
movs
inc
adc
lods
mov
cmps
out
cmp
xor
shl
outs
xchg
inc
pop
xchg
push
into
mov
dec
(bad)
xlat
sbb
jbe
dec
inc
into
movs
pop
fs
add
scas
enter
sub
gs
sbb
pop
dec
or
cmp
pop
das
pop
fisttp
push
popf
jmp
cwde
sahf
and
hlt
shl
pop
xchg
pop
dec
xor
sbb
rcl
aaa
bswap
add
sbb
pop
ins
jmp
aas
in
(bad)
sti
cmps
jle
mov
push
movs
push
ror
cli
cs
pop
add
test
adc
xor
fs
xchg
pop
mov
add
mov
push
repz
sbb
adc
aaa
pop
nop
sub
pusha
lods
xchg
inc
jle
mov
pop
into
add
xchg
arpl
mov
sbb
sbb
pop
rol
(bad)
add
rcl
sbb
hlt
adc
sub
mov
pop
outs
pop
fsubr
fisubr
into
arpl
push
inc
xor
and
or
dec
sub
sti
pop
pop
scas
sub
adc
mov
inc
push
push
call
pop
mov
popa
inc
cmp
lahf
dec
mov
sbb
data16
ret
mov
jae
test
sub
xor
sar
repz
jb
xor
push
aad
jecxz
fdiv
iret
xchg
mov
test
loop
movs
(bad)
out
cs
fsubr
mov
jno
es
rcl
loope
in
or
mov
aad
xchg
adc
add
addr16
cmps
rdmsr
addr16
rcl
mov
inc
mov
scas
in
js
inc
out
cmps
in
aas
bound
mov
scas
lock
adc
lods
inc
retf
or
fnstsw
ins
cmp
jo
pop
mov
pop
dec
mul
mov
xor
pusha
aam
jb
jl
push
mov
sbb
bound
loop
aas
mov
push
arpl
clc
xor
mov
lahf
inc
jb
cli
mov
mov
sar
js
sub
cmp
cwde
mov
hlt
adc
and
sar
xlat
fsubr
pop
pop
std
push
and
jecxz
xor
cmc
icebp
mov
out
in
repnz
sub
pop
lgs
aam
sahf
inc
movs
stos
xchg
add
cwde
dec
mov
out
jne
sbb
sahf
and
int
mov
scas
(bad)
out
cmp
mov
push
test
cdq
inc
in
fmul
pop
hlt
outs
imul
mov
mov
stos
mov
sub
test
dec
dec
sub
mov
lock
lods
loop
xor
aad
xchg
or
idiv
pop
imul
mov
lods
cmps
mul
rcr
div
pop
push
push
mov
inc
sbb
leave
dec
mov
hlt
xchg
xchg
inc
(bad)
cmp
loop
addr16
popa
mov
imul
mov
mov
lahf
jmp
js
and
(bad)
cmp
pop
sbb
ins
fxch
mov
es
loope
jle
push
and
and
nop
jno
xchg
jbe
mov
jp
jb
xor
xchg
pop
jmp
(bad)
mov
test
fmul
mov
push
test
hlt
mov
pop
jp
jnp
cmps
push
fidiv
sbb
leave
ja
mov
call
jg
sbb
inc
mov
loop
lahf
test
xor
(bad)
imul
fadd
add
jne
xchg
add
sub
push
xor
and
push
xchg
inc
adc
xchg
scas
test
sub
adc
pop
loopne
or
inc
ins
dec
push
cmc
repz
mov
aas
std
loopne
dec
xor
sti
out
fsubp
mov
nop
adc
(bad)
mov
arpl
xor
cmp
pop
mov
mov
sub
mov
shr
cmp
fbld
jo
addr16
ret
push
lods
mul
or
jle
call
inc
mov
dec
shr
popf
outs
jge
ss
cmps
mov
sub
loope
sub
push
cli
ins
jg
cs
out
addr16
mov
(bad)
not
sub
sbb
cwde
in
arpl
call
call
neg
and
mov
fld1
lea
mov
pop
push
mov
in
mov
add
test
test
pop
dec
test
mov
push
mov
cmp
mov
(bad)
add
scas
out
ret
js
pop
push
repz
add
gs
mov
in
or
lock
das
ret
adc
mov
mov
lods
xchg
push
mov
into
pushf
xchg
neg
mov
(bad)
pushf
xor
pop
mov
lea
cmp
loope
test
xchg
mov
cli
sbb
jg
xlat
enter
(bad)
and
loop
mov
adc
jmp
push
ror
pop
inc
inc
mov
inc
push
cld
fbld
jnp
and
fs
aaa
dec
ss
sti
bound
sahf
mov
mov
mov
pop
movs
jo
and
inc
jg
popa
sub
fwait
and
bound
and
out
cmps
and
mov
dec
sbb
sbb
dec
sub
sbb
lahf
xchg
add
(bad)
push
int
stc
xchg
mov
inc
in
lock
int
das
lahf
(bad)
jbe
adc
imul
bsr
cmp
pop
(bad)
xchg
sbb
cdq
pop
(bad)
xchg
inc
xor
loope
clc
push
add
cmc
xchg
mov
das
push
jnp
jno
mov
inc
shr
test
mov
scas
mov
div
test
xchg
jmp
sbb
test
or
jge
sti
dec
cmp
mov
inc
ds
xor
push
adc
pop
ins
test
xchg
inc
sbb
adc
inc
mov
rcl
mov
pop
inc
sti
sub
and
xor
jle
push
xor
pop
das
add
pop
sbb
sbb
enter
push
pop
jle
mov
jl
shr
pop
and
mov
clc
data16
test
int
xlat
js
jnp
xchg
jne
add
ss
fwait
sub
rol
and
cwde
scas
aas
pop
icebp
push
mov
shl
jp
adc
jmp
rcr
ds
sub
pusha
arpl
fldenv
dec
adc
or
and
sub
push
jl
mov
pop
sbb
rol
test
call
mov
fsubp
sar
cmp
lea
jae
pop
scas
cmp
dec
lods
mov
pop
xor
jmp
test
lahf
cmc
mov
stos
pop
push
test
scas
or
and
cmp
adc
push
mov
movs
adc
cmps
jg
out
pop
cmps
js
push
outs
popa
ja
cmp
xchg
xor
pop
enter
mov
jno
jmp
outs
pop
test
bound
and
xor
or
bound
pushf
pop
mov
push
sbb
xor
shr
push
jae
mov
in
add
cmp
call
out
adc
inc
aaa
xor
sub
mov
jb
ja
pop
icebp
pop
cmovnp
into
sar
pop
xchg
div
push
(bad)
mov
out
xor
shr
sahf
sbb
mov
push
stos
mov
push
mov
aas
in
jp
jmp
xlat
mov
lods
jne
jne
test
jmp
shl
dec
outs
mov
jmp
test
into
and
call
mov
xchg
pop
inc
jge
sub
adc
fnstenv
mov
test
sub
jmp
fisubr
push
sbb
xchg
or
mov
clc
lods
cmp
jmp
xchg
cmp
fadd
pop
into
adc
push
push
les
sub
cmp
fwait
sbb
add
mov
inc
nop
xor
cmp
sahf
push
mov
dec
or
movs
js
fiadd
retf
pop
out
add
int3
add
call
shl
lea
ins
dec
sub
inc
xchg
jo
push
pop
gs
aas
or
icebp
mov
adc
inc
dec
(bad)
pop
les
daa
fisubr
mov
int
loope
aaa
or
daa
mov
xchg
retf
outs
ss
xchg
mov
lods
pop
fcmovnu
inc
lock
lods
and
mov
cld
outs
daa
push
add
loopne
lock
mov
xor
fwait
mov
cmp
mov
dec
sub
xchg
pop
icebp
pop
cmp
stos
outs
sub
call
into
mov
add
imul
hlt
jb
mov
in
mov
hlt
add
rcl
adc
rol
addr16
out
sbb
popa
pop
ds
(bad)
shr
es
jns
jle
stc
mov
ror
or
jmp
cmc
xchg
or
pop
inc
add
pop
(bad)
lds
gs
pop
ficom
ficom
es
sub
mov
outs
scas
call
push
dec
aam
mov
push
nop
and
(bad)
push
popf
mov
push
push
sbb
add
mov
stos
mov
mov
test
pop
add
xlat
in
inc
dec
dec
stc
mov
retf
test
xlat
xor
inc
jns
out
stos
rcl
dec
sub
inc
std
fisub
repnz
sub
inc
jl
ror
retf
jo
inc
or
cs
xchg
in
ret
lods
loop
cdq
jl
push
(bad)
hlt
cmp
adc
xor
imul
pop
call
cdq
adc
and
jp
inc
jle
mov
mov
sbb
ins
sub
jno
in
lods
gs
mov
lods
shr
test
mov
loopne
inc
mov
adc
(bad)
std
(bad)
les
jnp
inc
cmp
mov
test
and
ins
jne
push
out
push
dec
ins
sub
popf
jge
pop
push
outs
repz
mov
imul
pop
push
sbb
es
inc
sub
pop
leave
sub
cmp
sbb
test
cld
(bad)
or
cdq
dec
adc
loope
mov
push
or
not
dec
sub
cdq
inc
push
jmp
test
sbb
mov
push
inc
xchg
stc
adc
mov
stos
inc
dec
popa
and
mov
inc
cli
outs
movs
dec
mov
push
mov
das
pop
cmp
ins
xor
pop
jmp
movs
imul
xchg
addr16
in
mov
xchg
cmp
cmp
xor
mov
mov
jge
pop
fidivr
xchg
cmps
pop
or
mov
std
icebp
aad
push
clc
pop
mov
data16
retf
mov
add
jno
test
jecxz
jo
push
dec
sub
cld
sbb
sub
inc
out
xor
sub
pop
sbb
mov
(bad)
bound
div
jg
jb
xchg
fcom
lods
out
outs
xor
mov
movs
iret
test
cmp
jbe
cmp
jmp
das
push
test
ins
enter
fild
cdq
mov
stc
jmp
mov
(bad)
cmp
je
mov
hlt
retf
mov
push
addr16
pop
test
ja
mov
dec
pop
inc
or
adc
mov
xor
pusha
or
loop
imul
xor
or
mov
pop
stc
dec
mov
push
push
add
xchg
inc
jmp
pop
and
and
xchg
mov
cmp
dec
fstp
fwait
shl
pushf
sub
clc
sbb
test
or
adc
adc
imul
push
mov
fsub
fadd
dec
sbb
(bad)
std
cmps
test
jne
xchg
jle
movs
stos
lds
dec
push
inc
push
or
stos
cmp
inc
nop
cmc
sbb
sbb
je
xchg
aam
jecxz
test
scas
adc
ss
(bad)
mov
fistp
cmp
push
ja
mov
mov
push
dec
stc
mov
jo
das
sahf
sbb
scas
jmp
and
mov
pop
in
into
test
fs
jne
ds
retf
fcomp
inc
cli
jmp
adc
or
mov
shr
cmps
aas
mov
mov
fbstp
add
(bad)
mov
mov
icebp
mov
mov
cmps
cs
pop
enter
xchg
jnp
xchg
(bad)
push
out
cmp
icebp
ds
fnstcw
pop
add
repnz
fdivr
jb
or
pop
cmp
push
call
jae
and
mov
xor
fyl2x
vmwrite
dec
or
aas
sbb
xchg
jno
dec
stos
lods
or
jo
cmp
fstp
mov
inc
push
dec
jb
out
pop
enter
(bad)
mov
mov
mov
in
aaa
aas
(bad)
push
(bad)
sbb
clc
dec
test
add
cmp
xor
jnp
mov
dec
xchg
push
int3
les
dec
add
sbb
push
ror
add
dec
div
jnp
sbb
sub
es
mov
add
fiadd
inc
dec
sti
adc
call
add
push
jne
pop
(bad)
(bad)
jnp
mov
stos
jno
ja
leave
repnz
fcom
cmps
mov
jno
mov
sbb
ret
fist
inc
jnp
std
pushf
mov
scas
(bad)
mov
enter
out
xchg
sub
aad
xchg
jmp
dec
add
adc
mov
in
adc
scas
fisttp
push
adc
repz
test
or
add
inc
sbb
std
ret
inc
sbb
outs
add
add
repnz
addr16
jmp
add
(bad)
dec
in
int
pop
imul
imul
shl
mov
mov
(bad)
(bad)
retf
test
pop
clts
xchg
pop
stos
pop
xchg
add
pop
jl
jo
xor
sub
jge
cmovns
iret
push
pusha
adc
push
pop
repnz
sbb
jp
cmp
cs
add
fld
mov
shr
adc
mov
in
cmps
int3
push
dec
jge
dec
ss
xchg
xlat
push
mov
mov
(bad)
mov
pop
mov
aam
dec
mov
dec
daa
add
mov
cwde
push
daa
and
mov
mov
popf
ss
fs
mov
in
inc
and
pop
out
add
cmp
cmp
push
pop
(bad)
jge
dec
movs
adc
aaa
xchg
sub
aad
int3
les
call
stc
adc
inc
jecxz
cmp
mov
cmp
fld
push
dec
test
ins
inc
inc
adc
(bad)
xor
mov
mov
mov
ins
xchg
repnz
or
int3
sub
(bad)
ror
movs
cmp
mov
adc
and
mov
repnz
cmp
pop
jnp
sub
mov
ja
leave
leave
(bad)
rcr
stc
cwde
dec
mov
cs
xor
mov
call
bound
sub
not
cmp
out
pop
icebp
dec
jo
popa
jne
into
stos
mov
xor
or
imul
and
xor
dec
gs
and
call
xlat
mov
jle
mov
cmps
repnz
push
fmul
xchg
popa
push
sub
enter
or
pop
aaa
pop
fwait
cmp
cdq
mov
(bad)
clc
adc
mov
fdivp
arpl
cmp
adc
push
adc
aas
cmp
pop
leave
push
(bad)
jmp
out
push
xor
and
jmp
lahf
inc
jle
pop
xchg
jge
and
mov
xor
sbb
popa
neg
pop
and
push
iret
(bad)
push
ja
mov
cli
sbb
stos
sbb
lahf
movs
mov
stos
mov
or
xchg
(bad)
fisub
inc
mov
xor
adc
sahf
je
lahf
cmp
test
jge
cmp
dec
cmc
imul
es
or
mov
shl
fs
jecxz
arpl
dec
lahf
xchg
shl
cmps
cmp
inc
cmp
add
sbb
mov
mov
cmp
in
pop
repnz
mov
nop
aad
cmp
pop
add
jae
fisttp
data16
sub
call
or
xor
push
adc
xor
std
ins
and
retf
pop
xchg
xchg
popa
adc
inc
scas
call
mov
add
(bad)
outs
(bad)
xchg
inc
scas
mov
push
jge
push
adc
and
jae
add
clc
and
cmp
pop
rcr
loop
jno
(bad)
(bad)
jp
mov
aaa
test
inc
push
sub
push
mov
ds
mov
je
mov
stc
js
loop
pushf
or
jnp
jae
mov
out
cld
in
dec
push
cwde
mov
retf
pop
fsubr
shl
adc
mov
sub
jmp
push
mov
lds
fcom
or
pop
jl
data16
mov
out
push
stos
mov
dec
iret
sbb
add
mov
loopne
aaa
push
cld
cmp
or
in
fdivp
sub
xor
out
cmp
std
sbb
lods
cmps
rcr
ds
pusha
pop
cmp
mov
xor
in
movs
dec
stos
sbb
xor
jp
mov
sub
retf
jno
add
add
xchg
xor
lods
daa
xor
outs
ss
lahf
inc
push
and
fwait
pop
(bad)
and
repz
das
aas
retf
(bad)
sub
mov
pusha
sbb
mov
or
repnz
cdq
pop
(bad)
gs
pop
xor
xor
add
dec
pcmpgtd
fmulp
pop
mov
iret
mov
bound
lods
(bad)
cli
shr
cmps
sub
arpl
jns
rol
cmp
ins
in
sub
or
fidivr
push
arpl
push
test
jle
loope
xchg
jno
mov
and
leave
pop
xor
mov
imul
xchg
test
repnz
cmp
sar
xlat
xchg
sti
push
sbb
pop
push
pop
xchg
jno
or
icebp
mov
rol
dec
adc
mov
dec
jecxz
mov
push
xchg
sbb
das
ret
push
(bad)
pop
push
inc
dec
call
mov
add
movs
cdq
inc
sar
jecxz
dec
push
test
push
rcl
or
xlat
in
(bad)
adc
daa
mov
outs
and
(bad)
mov
es
(bad)
movs
or
push
fiadd
or
fwait
dec
sbb
sub
push
fmul
cmp
retf
cmp
fsub
pop
mov
clc
jp
xchg
aad
mov
inc
out
std
(bad)
mov
outs
mov
or
mov
mov
pop
or
popa
pop
adc
ja
nop
aam
jl
rcl
jl
out
push
inc
and
mov
jb
mov
mov
sub
ja
rcr
or
sti
test
scas
push
push
sbb
(bad)
js
fistp
imul
neg
dec
mov
imul
mov
clc
add
fimul
es
jno
aas
sbb
dec
mul
cld
push
outs
in
in
jg
lock
mov
pop
cwde
dec
in
xchg
stc
dec
ror
aas
fcmovb
pop
mov
inc
pusha
test
das
(bad)
stc
mov
shr
sti
out
lods
and
and
call
pushf
int
or
xchg
int3
push
sahf
adc
fstp
aaa
and
(bad)
xchg
fwait
push
add
push
scas
sub
xor
sub
and
movs
mov
cs
ins
popa
je
cmp
add
jl
xchg
xchg
mov
sbb
js
in
loop
retf
retf
das
cs
int
xchg
arpl
push
push
push
mov
jne
or
(bad)
mov
jmp
fwait
loopne
xchg
jno
xchg
dec
push
mov
or
xor
sbb
icebp
out
repnz
xchg
inc
scas
dec
in
(bad)
(bad)
stos
repz
lea
outs
push
dec
pop
ret
inc
adc
repz
out
inc
dec
jnp
ins
jecxz
push
loopne
inc
fsub
dec
xor
call
clc
(bad)
(bad)
cmp
aam
addr16
rcr
repz
test
or
std
push
shl
sbb
(bad)
jae
in
sbb
aaa
or
rol
mov
out
and
inc
pop
mov
xchg
xchg
jl
pop
inc
inc
adc
ins
xchg
adc
movs
xchg
shr
js
cmps
mov
adc
xchg
push
sbb
mov
cmps
jmp
or
in
and
dec
sahf
and
sub
or
push
retf
push
rcl
repz
inc
xor
mov
jbe
xchg
adc
rcr
xchg
sub
fmul
pop
and
fldenv
(bad)
test
fcomp
outs
push
paddd
pop
cmc
xor
mov
addr16
fistp
pop
mov
loop
daa
adc
jl
inc
adc
ret
gs
cmc
loopne
rol
and
pop
lea
ja
addr16
in
(bad)
or
bound
sub
pop
loope
add
and
pop
movs
add
add
xlat
loope
call
(bad)
push
out
mov
pop
fadd
outs
push
sbb
lahf
sti
clc
or
mov
(bad)
sbb
or
je
sub
stos
out
call
sahf
mov
das
(bad)
adc
sbb
in
or
fsubp
mov
jl
jo
dec
cmp
mov
pop
test
movs
mov
test
adc
in
iret
jmp
outs
cmps
(bad)
sub
fild
ja
cdq
mov
cdq
pop
aam
movs
popa
mov
mov
mov
cld
mov
push
fidiv
ror
mov
push
stos
push
push
mov
pop
cli
ins
pop
push
jo
jmp
fidiv
mov
sub
aam
cld
pop
(bad)
fwait
adc
std
es
pop
scas
dec
jns
sbb
jne
js
scas
test
jb
adc
lock
jmp
int3
push
mov
inc
fnstcw
je
aad
fcmovnu
sub
pop
mov
xor
and
pop
sbb
pop
ins
mov
(bad)
out
jbe
add
sbb
mov
imul
adc
jmp
or
xchg
in
pop
push
dec
xchg
add
ss
stc
mov
mov
xchg
and
add
add
cmp
outs
rcl
clc
ds
stos
daa
inc
pushf
call
aas
data16
or
inc
les
into
clc
pop
xor
jns
cmc
xor
adc
pop
adc
xchg
nop
pop
or
cli
sar
sub
stos
xchg
enter
test
mov
adc
and
cmp
lds
adc
ss
jne
inc
push
add
xchg
mov
test
cld
add
xchg
jo
in
xchg
cmp
xor
aad
dec
push
fisub
mov
out
adc
test
test
mov
dec
loopne
or
and
cmp
iret
add
xor
loopne
sti
scas
inc
and
fld
int
mov
(bad)
or
repnz
jbe
mov
std
lock
xchg
push
shl
or
icebp
fld
int
pop
pushf
xchg
je
xchg
mov
mov
call
push
xchg
mov
sub
jge
or
test
fidivr
(bad)
std
retf
mov
xchg
ins
(bad)
sbb
aas
mov
movs
mov
push
pop
jne
dec
cmp
xor
jecxz
xor
or
xchg
mov
cs
int3
or
add
repnz
neg
test
mov
daa
cmp
pop
aad
pop
push
jbe
jb
(bad)
loopne
mov
call
push
rcr
popa
adc
adc
add
xchg
mov
mov
push
dec
cli
dec
add
rcl
sbb
rol
mov
add
jbe
outs
aad
dec
mov
in
fiadd
mov
icebp
jnp
and
xchg
xor
outs
cmp
nop
xor
out
gs
cmps
dec
inc
cmp
retf
ja
les
ret
cmp
fdivr
cmps
sub
loope
jmp
mov
dec
jns
in
(bad)
push
nop
mov
sbb
outs
gs
inc
mov
shl
jmp
shl
cmp
nop
add
sbb
cmp
push
push
cmp
not
inc
fmul
pop
xchg
inc
(bad)
call
adc
scas
mov
sbb
and
arpl
ds
fadd
or
fs
push
pop
mov
pusha
cmp
pusha
fidiv
lds
xor
out
call
jmp
cs
mov
bound
outs
cwde
or
cs
(bad)
xlat
jmp
add
mov
inc
(bad)
sub
push
add
mov
aam
mov
jae
ds
and
imul
dec
mov
sbb
pop
in
scas
test
icebp
retf
push
pop
xor
jbe
fistp
out
in
ins
leave
inc
ins
adc
hlt
mov
popf
add
cs
pop
jb
dec
loope
je
scas
jle
lock
xor
popa
xchg
sub
xor
clc
aad
jecxz
lods
in
inc
mov
in
jp
icebp
fst
xor
mov
aam
sub
pop
cmc
shr
sbb
inc
in
ja
cmp
stc
mov
cmp
sub
add
lds
xor
dec
outs
sub
popf
stos
xor
xchg
fsubr
mov
dec
push
stos
xchg
sti
mov
inc
add
sbb
jnp
or
stos
and
push
adc
addr16
fst
sub
aaa
sti
xor
xchg
and
scas
sub
and
dec
fs
mov
aad
mov
mov
jge
xchg
sub
pop
bound
xchg
jb
xchg
push
mov
movs
lods
call
std
fs
xor
in
mov
imul
jo
mov
fstp
daa
and
mov
daa
jg
call
xlat
sbb
(bad)
mov
in
test
outs
xchg
hlt
mov
dec
sub
(bad)
fistp
mov
jmp
pop
jae
xchg
dec
push
test
push
xchg
loop
dec
lds
pop
test
div
loope
sbb
adc
outs
(bad)
fucomi
cmp
push
mov
push
lods
out
dec
les
cmpxchg
out
fisub
test
or
mov
shl
mov
retf
mov
dec
repnz
call
xor
loope
mov
sbb
cmps
daa
arpl
(bad)
mov
outs
daa
push
fwait
push
cmp
movs
mov
mov
xor
lahf
call
xchg
mov
or
add
dec
cmps
aaa
xchg
pushf
pop
shr
nop
push
mov
loope
scas
cmp
sahf
push
push
push
les
dec
sbb
push
mov
xor
ins
int3
scas
dec
add
das
jecxz
cmps
mov
pop
call
sbb
jbe
ret
xlat
jae
aas
nop
es
cwde
rcr
pop
out
fcom
pop
mov
aad
or
mul
jle
lds
fcmove
cwde
adc
lods
stos
push
ror
aas
lock
jae
in
aad
jge
fs
and
inc
xor
pop
iret
mov
call
push
les
xchg
(bad)
out
push
test
aas
inc
enter
call
ins
or
test
push
adc
fmulp
push
pop
jne
data16
mov
loop
and
dec
push
lods
or
add
rol
outs
pop
test
lock
jp
ins
and
jecxz
lods
popa
cdq
jle
sbb
jmp
dec
pop
ss
mov
jl
pop
push
daa
repz
outs
add
fwait
mov
dec
out
ret
or
jmp
dec
cmp
loope
ret
cmp
rcl
loopne
jb
addr16
sbb
in
repnz
enter
dec
dec
faddp
scas
jbe
xchg
sub
add
xchg
fsubp
js
fs
movs
push
(bad)
movs
in
addr16
push
pop
mov
in
pop
add
push
sti
(bad)
iret
push
cwde
fadd
cmps
jo
dec
pop
ja
call
retf
pop
xor
enter
cmp
and
cmc
jg
or
stos
adc
rcl
jp
inc
mov
jge
stos
adc
rcl
jp
ds
bound
pop
in
pop
add
lods
cld
sti
push
sub
pop
and
fst
clc
sub
jp
sbb
xor
cmp
shl
mov
mov
and
adc
cmp
mov
pushf
aaa
test
lods
and
adc
dec
ret
in
mov
pop
jae
push
les
add
les
outs
not
pop
scas
mov
stos
pop
loope
push
pop
cmp
sbb
xor
scas
add
nop
push
cmps
adc
inc
mov
inc
inc
add
cmc
sub
xor
cdq
cli
out
cmps
test
in
xchg
retf
cmp
xchg
mov
cmc
(bad)
das
pop
or
aaa
or
pop
xchg
enter
int3
aaa
movs
test
retf
cmps
cdq
cmp
cmp
cmp
stos
lock
repz
mov
cmps
jne
mov
add
pop
inc
push
out
loop
mov
mov
hlt
lods
mov
push
scas
or
outs
push
push
add
xchg
ror
jne
(bad)
pushf
push
pop
add
test
and
push
sub
pusha
sub
push
shl
dec
cwde
add
xor
dec
cdq
push
(bad)
loopne
pop
imul
jl
adc
push
and
test
add
and
arpl
xchg
push
test
std
aad
inc
sub
inc
out
cmps
outs
imul
call
nop
pop
xchg
popa
adc
call
(bad)
test
leave
mov
xchg
outs
cli
xchg
or
lds
xor
stc
xchg
ret
mov
mov
lods
mov
sub
test
xchg
jno
adc
call
out
icebp
push
inc
test
xor
hlt
lea
mov
adc
dec
inc
push
dec
dec
add
pop
js
inc
(bad)
(bad)
setnp
jmp
cmp
mov
fmul
push
movs
pop
jb
pop
or
inc
adc
popf
cmp
bound
bound
imul
and
dec
loop
cmp
rcr
outs
clc
push
cmp
dec
adc
pop
push
add
pop
adc
mov
fnstsw
sbb
int3
add
sub
sub
out
cmc
cli
and
pusha
rol
clc
jl
jle
xchg
push
mov
jecxz
mov
ja
rol
add
and
in
xor
call
mov
retf
je
jo
push
jno
mov
stos
dec
cmp
pop
mov
dec
mov
mov
fwait
or
dec
repnz
jo
xchg
pop
jmp
stos
rol
and
jle
mov
jno
icebp
mov
xchg
fadd
std
stos
adc
cmp
inc
cmp
cdq
jg
adc
or
test
fdiv
add
xchg
loope
inc
adc
jb
xchg
sub
cli
outs
mov
mov
pop
bound
je
inc
or
dec
mov
loopne
mov
add
sbb
(bad)
(bad)
jmp
ins
popf
inc
cmp
mov
nop
(bad)
xor
movs
movs
sbb
jmp
push
outs
jno
ja
and
cmp
(bad)
mov
mov
jnp
ss
(bad)
aad
pop
mov
and
aas
xchg
(bad)
cmp
push
in
and
or
std
cmps
cld
mov
inc
xchg
xchg
neg
adc
push
dec
gs
push
arpl
jne
jle
jns
out
test
outs
pop
sub
repnz
outs
xchg
mov
lods
addr16
dec
iret
(bad)
dec
repz
in
int
sbb
popa
test
pop
mov
mov
enter
call
xlat
std
sub
cmc
or
xor
sub
cmc
sub
adc
cld
outs
ret
enter
or
test
cmp
mov
push
stos
inc
sub
fs
xor
std
shl
push
mov
dec
mov
test
adc
mov
aaa
dec
push
xor
sub
push
fldln2
icebp
sbb
popa
std
mov
addr16
dec
rcr
cdq
arpl
add
aaa
out
pop
repz
and
cs
scas
adc
push
aad
inc
popa
push
or
je
sbb
rcl
ror
cmps
ret
sub
mov
rcr
sbb
mov
sbb
push
jg
adc
push
jns
int
cmp
and
sti
call
pop
(bad)
jmp
pop
jle
sub
xchg
loop
js
iret
lds
iret
je
or
into
add
add
sub
cmp
adc
aaa
mov
js
scas
xchg
inc
cmp
test
jne
or
push
fidiv
divps
inc
aas
scas
mov
aaa
out
ins
mov
xor
mov
lods
inc
les
cmp
mov
push
sbb
bound
(bad)
(bad)
fidiv
fwait
into
sbb
ds
push
dec
les
adc
arpl
enter
into
add
and
push
jg
xlat
fsubr
stos
inc
jecxz
loope
pop
mul
xor
push
imul
jne
xor
(bad)
cdq
xor
jl
and
ins
or
cmc
retf
aad
outs
adc
mov
neg
pop
and
int
sub
inc
xor
lods
mov
in
neg
fild
mov
push
pop
mov
mov
js
xor
je
and
sub
pop
(bad)
fs
(bad)
stos
lods
cs
xchg
xlat
js
sbb
in
scas
mov
xor
(bad)
jmp
pop
fisttp
jmp
cli
inc
mov
lds
adc
pop
pop
cmps
sbb
push
jbe
cmp
loopne
or
out
retf
pop
xchg
or
push
pop
loop
movs
sbb
mov
mov
or
iret
mov
outs
mov
scas
div
mov
sbb
(bad)
int
imul
mov
(bad)
fsubp
inc
sub
add
push
xchg
mov
lods
loope
add
mov
adc
scas
jecxz
aaa
ss
imul
push
adc
and
ja
xchg
pop
push
dec
stc
dec
fadd
aam
xor
idiv
stos
or
xchg
sbb
in
xchg
add
sub
bound
aad
(bad)
nop
xchg
stc
inc
dec
mov
lods
lea
js
sar
or
pop
xchg
add
mov
test
jl
sub
adc
and
push
ins
xlat
sub
icebp
jp
dec
dec
mov
sar
rcl
leave
ins
sbb
sbb
mov
xchg
arpl
shl
mov
out
xor
(bad)
fldenv
jp
inc
inc
out
add
ret
sbb
dec
jle
mov
data16
jnp
and
cmp
hlt
fdiv
cs
enter
out
sub
lock
scas
in
xchg
adc
pop
and
push
loopne
jmp
mov
ret
inc
fscale
mov
cmp
in
popf
js
add
fidivr
pushf
pop
push
jp
mov
or
shr
ins
enter
dec
test
mov
and
add
inc
stos
je
push
inc
push
mov
fmulp
mov
xor
mov
xchg
cmc
pop
lahf
and
pushf
adc
xchg
push
fs
adc
lods
loop
cmp
or
adc
arpl
ins
xchg
sbb
mov
adc
into
int
lea
inc
sbb
jne
and
and
psrlq
inc
fcmovnb
int
mov
retf
pop
imul
adc
xor
loop
dec
daa
cmp
mov
push
xor
cmp
pop
mov
xor
mov
repz
dec
sbb
retf
xor
mov
add
xchg
mov
ret
stos
push
es
push
add
ins
or
xchg
xchg
loopne
add
into
int3
mov
daa
(bad)
mov
loop
dec
retf
test
add
jmp
jo
jp
and
movs
cmp
inc
and
cli
test
or
mov
add
mov
mov
mov
push
ins
or
fucomp
rcr
fwait
sbb
and
in
dec
pop
fsubr
nop
adc
push
adc
gs
test
and
aam
(bad)
push
mov
fmul
jo
push
xchg
test
out
mov
ss
inc
lock
and
retf
test
adc
int3
iret
inc
mov
loopne
add
xor
xchg
mov
inc
fistp
in
or
cdq
mov
jg
shl
mov
(bad)
push
xchg
retf
nop
scas
or
and
ins
dec
and
jle
or
ins
dec
sub
rcl
cmp
fs
pop
xor
mov
xchg
cmps
jnp
pop
dec
out
ficomp
cmps
xchg
xchg
jg
and
jmp
scas
mul
cmp
pop
test
stc
xchg
sbb
enter
ja
sub
push
add
sti
pop
int3
ins
jl
pop
js
leave
mov
adc
stos
pushf
imul
xchg
sti
xchg
lods
loop
das
push
pop
out
add
outs
pop
mov
inc
ret
rcr
daa
ds
pop
and
xchg
cmp
lahf
cmp
xchg
and
stos
lods
mov
mov
xchg
lock
div
xchg
lock
sbb
movs
xchg
xchg
push
aas
xchg
aaa
(bad)
mov
jb
xchg
je
dec
sbb
xor
(bad)
adc
jb
push
hlt
ret
mov
rcr
lea
push
sbb
xor
call
sub
mov
test
clc
ins
in
dec
cmp
ret
and
test
ret
mov
into
push
adc
or
mov
(bad)
sub
xchg
jecxz
ja
retf
jle
push
ja
nop
xchg
mov
inc
push
xchg
dec
cmc
mov
push
and
arpl
mov
mov
imul
xchg
fcomp
lods
leave
fdivr
mov
adc
popa
push
sub
cld
xchg
mov
xor
and
ja
inc
scas
loop
jbe
xor
imul
rcl
mov
ins
or
add
iret
test
call
sbb
inc
ins
adc
scas
sub
sub
mov
mov
or
pop
push
loop
cmps
arpl
or
sbb
push
cwde
cwde
push
das
jge
add
inc
xchg
fwait
push
jbe
fcmovbe
or
adc
rol
enter
test
adc
(bad)
mov
(bad)
mov
sbb
and
jl
fldenv
cmp
jp
test
mov
or
jecxz
mov
mov
test
xchg
scas
sub
mov
test
and
dec
(bad)
test
jmp
adc
repz
xchg
mov
or
mov
fwait
cmps
pop
ja
in
push
lock
mov
dec
pop
sub
mov
mov
sahf
je
push
cmp
pop
mov
pop
cli
xchg
sub
or
mov
std
into
in
daa
enter
sahf
dec
in
ins
(bad)
sbb
icebp
fldenv
clc
lahf
push
push
rcl
out
push
pushf
cmp
cdq
xchg
mov
(bad)
leave
mov
sbb
aad
lea
in
scas
daa
xlat
sti
aam
and
or
sbb
cdq
fwait
add
mov
ss
pop
es
mov
lds
and
lock
dec
xchg
or
jge
mov
push
xlat
loopne
mov
jnp
inc
in
adc
jns
lods
sub
xor
loop
repz
leave
jmp
inc
addr16
mov
cli
mov
add
adc
dec
stc
mov
dec
test
jmp
sbb
fs
lods
pop
inc
cmp
cld
cdq
scas
push
or
adc
push
cdq
sbb
ins
mov
push
mov
es
adc
les
mov
mov
out
jmp
push
repnz
bound
jnp
fcmovnbe
ss
inc
fidiv
jmp
mov
cmp
pop
into
and
cs
(bad)
pop
pop
outs
clc
das
jle
pop
test
sub
sbb
aam
test
int
shr
sbb
and
pop
mov
cmovnp
ss
jae
pop
rol
sbb
gs
cwde
clc
jg
imul
cld
push
add
aam
stc
push
sub
mov
add
jbe
sub
xor
mov
pop
mov
jg
leave
ret
ds
sbb
pop
lods
xor
mov
out
mov
in
mov
movs
jg
sbb
push
dec
ds
xchg
aas
and
xchg
enter
cmps
ret
mov
mov
sub
mov
out
call
hlt
jb
mov
fwait
arpl
repz
in
xchg
dec
mov
ss
xchg
adc
push
sub
push
ret
pop
jl
xchg
leave
dec
inc
out
(bad)
inc
out
xor
xchg
or
xchg
sahf
rol
add
in
sbb
fmul
call
push
push
jb
sub
sahf
adc
mov
into
sub
(bad)
mov
push
mov
fs
stos
daa
xchg
fcomp
das
lds
not
fistp
push
sub
mov
push
mov
dec
or
jge
ins
jnp
mov
stos
lods
out
mov
pop
out
in
mov
jne
in
pusha
mov
xlat
cmps
xchg
mov
adc
addr16
rcl
adc
sub
das
adc
fwait
enter
inc
pop
add
push
cmp
mov
dec
mov
cwde
mov
ins
sbb
add
mov
bound
test
jmp
mov
pop
lds
pop
pop
and
in
mov
fbstp
or
adc
sbb
mov
aam
cmp
push
(bad)
xlat
cmps
add
mov
cmp
xor
sub
push
pushf
lds
fistp
jp
clc
mov
push
push
ja
fstp
pop
ret
pushf
idiv
lea
lock
mov
jns
jmp
or
mov
dec
push
jo
jns
shl
adc
push
loop
jne
cld
call
call
ins
ret
mov
jg
inc
ins
pop
(bad)
jne
adc
cmc
aad
push
mov
xor
fs
push
mov
xchg
fcom
(bad)
mov
xlat
mov
rcr
ficom
clc
enter
lods
fdivr
test
(bad)
shl
sub
imul
ss
xor
push
xchg
add
jbe
in
cli
jecxz
iret
scas
rcl
fild
retf
sar
jae
push
or
adc
sub
push
(bad)
add
add
jb
add
mov
inc
gs
nop
jmp
(bad)
add
sub
inc
push
jns
cmp
dec
mov
js
fstp
aaa
xor
mov
aad
push
adc
dec
mov
sub
test
sar
cmp
mov
or
sti
adc
push
add
add
sbb
jmp
int3
scas
popf
jmp
inc
and
push
lods
xchg
and
pop
adc
inc
lods
mov
sub
cwde
adc
adc
inc
push
adc
add
cwde
push
mov
jae
push
retf
jo
je
test
pop
jg
daa
dec
xchg
loope
mov
in
movs
scas
and
iret
(bad)
push
fs
movs
push
xor
cmps
iret
sub
xchg
mov
fsubr
push
(bad)
pop
push
mov
pop
mov
pop
mov
mov
cmps
fmul
mov
mov
mov
mov
add
outs
test
sbb
mov
int3
scas
lea
mov
and
and
jmp
shr
adc
or
inc
mov
mov
stos
sbb
jbe
jb
xchg
mov
dec
pop
cmp
add
jmp
push
(bad)
cwde
adc
jnp
mov
sbb
and
(bad)
aas
pop
jmp
enter
out
in
out
lock
test
sub
int
inc
inc
mov
in
out
inc
xchg
(bad)
pop
pop
ins
add
jnp
jmp
stc
sub
sbb
xor
out
and
addr16
xchg
or
fisubr
push
and
sub
mov
stos
fistp
into
retf
inc
aaa
fnsave
push
out
les
xchg
mov
push
mov
add
(bad)
cmp
repnz
or
or
(bad)
rcr
pop
lods
imul
or
pop
push
fs
cdq
sub
in
cli
add
sub
lea
test
or
jge
jb
cmps
push
cmp
loopne
xor
stc
pop
fisubr
mov
adc
stos
dec
cld
sbb
(bad)
stos
inc
or
jb
push
or
repz
cmc
inc
stos
stos
sub
mov
cli
div
mov
call
inc
stos
ins
push
out
sar
and
lahf
mul
xor
repz
add
popf
jecxz
into
std
adc
push
mov
cmps
pop
dec
adc
sahf
pop
jp
ins
inc
xchg
sub
xchg
jmp
cwde
cmc
mov
jnp
out
dec
mov
cld
cmps
mov
lods
(bad)
gs
pop
repz
pop
or
or
shl
mov
jle
loope
out
xor
mov
and
in
pop
inc
and
jge
mov
dec
jmp
mov
sbb
fadd
das
cmp
leave
(bad)
pop
test
addr16
fist
into
sbb
outs
pushf
mov
scas
aaa
sbb
sahf
cmp
ret
xchg
lds
cwde
and
xor
test
mov
push
repz
add
jp
or
or
dec
int3
clc
imul
jbe
iret
push
sub
inc
pop
loopne
fcomp
inc
push
mov
in
imul
inc
xor
iret
adc
call
push
sbb
and
rol
rcl
push
mov
(bad)
inc
push
pop
mov
hlt
lds
out
retf
pop
ficom
mov
mov
cvtdq2ps
test
loope
mov
mov
sti
call
mov
or
loop
popf
cmps
fnsave
mov
fisubr
shl
mov
pop
ja
xchg
mul
add
xchg
neg
int
in
jle
cli
jae
add
daa
inc
retf
icebp
cli
add
mov
dec
add
mov
pop
cmps
test
push
xchg
lods
stos
adc
and
dec
mov
sar
dec
addr16
sub
test
mov
xchg
outs
ja
adc
(bad)
sbb
adc
or
lahf
adc
test
pop
sbb
pop
pop
(bad)
in
test
jbe
mov
cwde
sub
cmps
adc
mov
add
fcmovne
mov
push
cmp
adc
mov
inc
stc
retf
lods
sub
sbb
dec
push
loope
push
(bad)
dec
stos
rcl
pop
fisub
(bad)
cmp
cld
gs
xchg
lods
sti
lahf
jno
out
pop
adc
sbb
cmp
dec
dec
and
hlt
or
push
fs
scas
pop
cmps
push
jp
inc
mov
pop
add
sbb
mov
repnz
cmc
mov
cmp
mov
fisttp
movs
cmp
sbb
sub
ret
inc
mov
inc
std
ss
ds
dec
push
jmp
xchg
aaa
rcl
push
mov
jne
pop
pushf
sub
inc
stc
jmp
pop
jecxz
stc
movs
call
inc
pushf
outs
call
mov
cld
aam
frstor
xchg
out
or
in
mov
in
call
ss
cwde
loopne
retfw
les
push
xchg
mov
stos
test
cmp
adc
adc
stos
adc
jo
(bad)
(bad)
out
in
adc
inc
pop
mov
mov
movs
xchg
cmp
pop
mov
fstp
xchg
rol
in
mov
jns
push
or
mov
fadd
mov
jae
push
int
pop
imul
sbb
mov
add
jns
mov
sub
into
nop
cwde
or
push
sub
std
into
fwait
lods
(bad)
loopne
pop
inc
adc
ins
push
enter
imul
add
mov
sub
pop
jne
gs
cwde
mov
push
push
cdq
daa
mov
pop
push
mov
outs
inc
cmps
sbb
push
xlat
cmps
jb
or
xor
fnsave
mov
jnp
pop
inc
imul
cmc
(bad)
and
out
loop
add
or
jmp
mov
cmp
fld
xchg
repz
vcvttsd2si
in
xor
and
xlat
add
mov
rcl
lods
fs
sbb
pop
es
ret
jmp
mov
es
movs
cmps
pop
aad
pop
xchg
jl
enter
jp
call
xchg
in
push
stc
aam
dec
dec
and
shl
dec
jno
mov
mov
push
pop
cmp
shl
or
or
or
push
stos
mov
lods
movs
and
inc
std
mov
xchg
push
and
mov
sti
mov
jae
mov
lods
mov
loope
mov
addr16
sub
out
cli
scas
mov
fiadd
out
inc
fwait
retf
sbb
inc
xchg
mov
call
int3
mov
jnp
sub
pop
mov
push
push
(bad)
inc
or
dec
sub
jp
retf
rcr
fsubr
xor
and
or
xchg
and
sub
outs
adc
(bad)
call
imul
push
mov
xor
xchg
dec
aas
aam
sbb
mov
jne
add
arpl
scas
retf
fld
and
cmp
jo
cmp
je
cdq
bound
sbb
xor
fadd
or
pop
ds
iret
pop
add
imul
dec
jns
jle
mov
mov
fadd
lods
jno
xor
mov
mov
iret
cwde
cmps
cld
pop
or
out
jb
outs
xor
push
daa
into
jbe
xchg
xchg
imul
jle
dec
pop
inc
int
cli
pop
xchg
xchg
lds
(bad)
icebp
and
jecxz
ficomp
pop
mov
(bad)
adc
inc
cmp
pop
cmp
cld
fwait
mov
mul
fucomip
test
hlt
push
int3
fld1
mov
daa
mov
xor
clc
dec
in
mov
dec
sahf
mov
and
in
rol
sub
dec
xchg
repnz
pop
sbb
mov
imul
scas
pop
bnd
or
sbb
ret
and
adc
xchg
jne
lds
ins
fcmovne
add
in
sti
arpl
aam
pop
dec
adc
dec
lods
cmp
std
cmps
pop
jne
lods
jecxz
shl
das
mov
sahf
lahf
xchg
cdq
ins
cdq
int3
mov
int
loope
push
das
arpl
and
loop
and
(bad)
fimul
in
sbb
in
test
sbb
and
aad
add
cwde
jno
popf
repz
cmp
jnp
test
shr
movs
jl
aad
imul
sub
and
test
shl
pop
push
(bad)
or
pop
xlat
jle
call
shl
or
or
loope
fidivr
out
jns
mov
lea
fst
cmp
cmp
mov
fidivr
in
push
cmp
mov
add
pop
in
bound
dec
or
sbb
rol
jno
icebp
sub
jp
mov
push
mov
fsubr
movs
jne
xchg
mov
mov
mov
inc
fdivr
fwait
js
aas
in
shl
xor
(bad)
movs
jg
xor
mov
call
jmp
jb
test
cmp
addr16
xchg
dec
loopne
iret
enter
push
aad
and
xchg
stc
dec
bound
bound
test
in
xor
push
out
inc
jp
sub
push
imul
fst
cs
loope
inc
lea
sbb
es
pop
lods
in
xchg
pop
push
push
call
dec
jmp
seto
popf
sub
fxtract
sub
repnz
push
iret
dec
(bad)
add
inc
or
call
das
push
repnz
inc
ret
pop
in
push
inc
aam
and
das
dec
jecxz
lea
sub
call
gs
mov
ja
out
rcl
inc
hlt
pop
pusha
jne
inc
xor
data16
sub
repnz
je
xor
ret
bound
mov
mov
jne
and
jg
push
jne
and
pop
addr16
inc
arpl
mov
repz
test
cwde
stc
aaa
and
addr16
mov
xchg
and
adc
imul
jae
popa
mov
dec
lods
and
mov
xchg
jg
adc
aaa
dec
xchg
jmp
adc
mov
bound
mov
in
mov
mov
cmp
popa
push
(bad)
int
in
xchg
mov
xor
stos
test
sub
lea
sbb
loope
push
test
xchg
xor
add
pop
dec
sbb
test
clc
or
ins
jp
push
jmp
out
jl
inc
add
(bad)
mov
rcr
fucomp
push
push
mov
xor
jecxz
pop
mov
ror
adc
xlat
push
ja
jmp
lea
les
add
aas
xor
div
arpl
mov
cwde
pop
inc
xchg
ins
pop
not
jp
jge
mov
pop
(bad)
xor
or
cmp
jl
mov
aaa
jecxz
loopne
mov
xor
inc
sub
cwde
mov
pop
jg
dec
int3
push
add
pop
test
fidivr
js
xor
add
mov
and
xor
dec
pop
inc
iret
test
repnz
sbb
add
adc
je
nop
jecxz
mov
das
or
pop
fwait
ret
inc
mov
in
fwait
je
and
in
enter
repz
aaa
xor
iret
xor
outs
aad
and
pusha
push
xchg
add
in
pusha
fld
hlt
stos
rcr
and
dec
pop
rcl
int
mov
mul
out
jns
fucomp
imul
jno
scas
fistp
or
xlat
jmp
scas
ins
mov
adc
jg
ins
push
sbb
jmp
das
cmp
ss
sub
xchg
call
push
mov
xchg
mov
mov
cli
mov
mov
sub
sub
cmc
jmp
mov
mov
clc
cmps
ins
and
cld
movs
mov
icebp
cld
adc
fld
jno
jne
sbb
pop
fdivr
lods
inc
(bad)
pusha
mov
mov
dec
pushf
test
imul
or
hlt
add
jle
and
adc
xchg
out
cmp
stos
retf
pop
retf
dec
movs
hlt
int
xchg
add
mov
jmp
jmp
sbb
hlt
into
xchg
(bad)
cmc
cmp
push
loop
mov
add
xchg
fidivr
mov
mov
mov
cmps
ret
(bad)
mov
(bad)
mov
jo
ret
xchg
(bad)
sahf
jecxz
pop
cmp
enter
retf
adc
push
pushf
cmp
ret
lods
test
fmul
push
dec
and
inc
inc
jmp
mov
retf
lods
retf
xchg
cdq
ret
xchg
and
cld
mov
data16
daa
or
scas
(bad)
pop
cmp
mov
test
in
fistp
jg
jb
paddb
add
add
lock
scas
daa
cmp
ror
cmp
in
push
retf
movs
ins
inc
cwde
inc
ins
mov
data16
inc
cmp
popf
pushf
icebp
mov
adc
mov
lahf
and
fmul
ret
dec
pushw
fs
pop
ins
(bad)
pop
mov
daa
dec
jecxz
cdq
aas
or
mov
rol
sub
mov
ficom
push
jp
(bad)
jmp
std
enter
inc
mov
sbb
out
rcl
cmps
pop
ja
mov
sub
std
aad
and
mov
ins
pop
imul
ret
repnz
repnz
xchg
fsubp
push
mov
in
or
cmc
jecxz
mov
sti
stos
(bad)
xchg
nop
addr16
jp
pop
pop
sar
int3
mov
in
mov
es
adc
outs
mov
push
sub
loopne
(bad)
or
test
jbe
addr16
ja
xchg
lods
(bad)
test
es
(bad)
movs
stos
(bad)
inc
add
xchg
sbb
push
add
cmps
outs
cmp
inc
pop
jl
popa
sbb
hlt
je
lahf
jge
ss
and
fs
sbb
xor
mov
pop
pop
jae
push
adc
scas
xor
sub
mov
ficom
loop
inc
dec
popf
loopne
cmp
int3
addr16
dec
jmp
push
pop
sub
add
mov
ss
pop
fcom
cmps
push
xchg
test
das
mov
retf
mov
pop
repnz
inc
add
outs
shr
jo
xor
in
pushf
mov
jb
daa
in
adc
and
dec
iret
sub
leave
or
jbe
sbb
xor
popf
cmp
std
inc
test
xchg
dec
std
sbb
lds
movs
xor
cmps
bound
in
pop
mov
bound
or
pusha
pushw
(bad)
sub
test
sbb
adc
pop
aad
sbb
jne
movs
push
scas
fiadd
ret
jae
dec
fcomp
mov
push
and
xchg
enter
gs
mov
arpl
jo
in
lods
ins
jg
sbb
sub
out
adc
push
shr
adc
imul
inc
add
adc
sub
xor
lods
pop
das
data16
or
jmp
mov
jmp
dec
push
icebp
cdq
add
icebp
mov
sub
mov
mov
xchg
aaa
cmp
inc
push
cmp
dec
enter
mov
jae
add
outs
and
loope
arpl
outs
jno
sub
inc
ins
clc
shl
fnsetpm(287
xor
sahf
cmps
bound
not
pusha
adc
xor
inc
xchg
mov
add
enter
inc
sar
xlat
in
jne
xor
cmp
(bad)
xchg
and
sbb
pushf
outs
adc
mov
mov
pop
out
test
gs
mov
push
nop
jno
xor
pop
mov
pop
fiadd
or
int
push
bound
enter
cld
mov
mov
cmp
pop
jae
jb
fisubr
popa
ficom
outs
inc
nop
add
dec
pop
ret
mov
push
aas
dec
nop
pop
out
mov
xchg
cmps
xchg
and
inc
xchg
into
mov
shl
scas
shl
lds
dec
mov
test
xor
jmp
pusha
or
mov
xchg
sbb
aaa
xchg
dec
cwde
xchg
fiadd
mov
repnz
jecxz
dec
cmp
cld
inc
dec
ror
xor
sbb
cld
push
sbb
dec
adc
cmps
push
into
cmp
mov
das
mov
dec
cmp
mov
mov
ins
xor
arpl
sbb
stos
cmps
dec
jmp
pop
and
ftst
add
inc
sbb
mov
mul
pop
mov
movs
jo
xchg
shr
push
fbld
cli
(bad)
in
xor
cli
sub
push
repz
cmp
sbb
pushf
add
sub
retf
sub
pop
dec
pop
pushf
push
or
loop
xor
push
div
movs
repz
loopne
sbb
lahf
mov
xor
dec
xor
mov
xchg
popa
sbb
push
pop
dec
lahf
rcl
int
mov
xor
sbb
jns
jno
pusha
sub
pop
mov
jecxz
popf
push
xor
mov
imul
(bad)
mov
sti
push
xor
jno
mov
stos
icebp
push
mov
push
xlat
push
xor
(bad)
lea
sbb
sub
stos
fwait
int3
mov
push
mov
movs
sti
test
sahf
xor
sbb
in
pop
cmp
xor
neg
rol
cmc
sbb
jmp
push
and
inc
sbb
xlat
loopne
cld
(bad)
sahf
fimul
fbstp
test
sub
mov
repnz
enter
mov
aad
jmp
test
sub
jmp
xlat
and
popf
jle
retf
push
push
pop
mov
mov
jmp
mul
sub
push
shr
jne
dec
sub
bound
sub
push
push
pop
js
fidivr
inc
mov
pop
mov
retf
adc
sti
aam
daa
xchg
pop
lock
aad
je
out
stc
(bad)
mov
jp
or
popa
cmp
mov
ret
xor
mov
add
xlat
jg
ins
mov
push
and
call
pop
clc
sbb
mov
movs
(bad)
arpl
xor
xchg
mov
rcl
or
(bad)
fcom
not
dec
jns
dec
mov
push
sub
xor
jns
cmp
test
sbb
movs
ret
dec
div
in
mov
scas
sahf
pop
xor
(bad)
cmps
push
sub
es
jmp
dec
pop
(bad)
push
stc
xor
fsub
add
repz
add
lahf
push
mov
arpl
mov
jecxz
mov
stos
sbb
push
mov
sbb
mov
sti
in
test
jle
nop
push
cs
(bad)
push
in
aad
add
fadd
jns
pushfw
(bad)
cli
cmp
cmp
js
inc
out
sub
int
pop
add
mov
paddsb
cmp
aad
icebp
aad
push
sbb
jb
loop
test
push
scas
out
retf
dec
sub
mov
xchg
popf
adc
test
dec
push
repz
(bad)
push
sub
aad
hlt
clc
xor
push
out
jp
jnp
mov
pusha
mul
sar
adc
into
sar
retf
sub
sbb
xor
xor
adc
arpl
subps
mov
jnp
jmp
fcom
pushf
push
jp
sahf
or
jg
scas
and
cmc
mov
clc
sbb
and
mov
mov
hlt
xor
xchg
cmps
icebp
gs
push
outs
loope
gs
cmps
stos
jb
iret
push
ret
dec
clc
addr16
outs
and
aas
jp
pop
out
movs
xchg
xchg
dec
inc
inc
mov
mov
fidivr
loopne
fimul
dec
test
sub
cmp
adc
sub
push
sar
movs
xchg
ins
push
sti
fistp
in
bound
clc
lahf
push
ds
arpl
mov
out
pop
xor
inc
xor
call
jecxz
in
sub
jl
ds
jmp
ret
daa
clc
adc
ins
cmp
pop
pusha
or
adc
inc
push
inc
cmc
data16
sub
fisubr
out
addr16
div
push
fist
or
dec
mov
mov
dec
sbb
jg
lods
xor
ins
jo
out
or
outs
xchg
neg
into
xor
call
mov
mov
or
in
ins
push
jb
xor
push
cdq
scas
add
aam
jbe
jecxz
cld
xor
mov
sbb
(bad)
icebp
xchg
stc
out
ret
sbb
enter
xor
ror
les
jg
mov
mov
dec
(bad)
dec
mov
ins
pushf
iret
imul
mov
lea
sub
pop
jnp
outs
cmp
es
and
cs
int3
ins
stos
in
dec
dec
or
cmps
(bad)
fisub
jae
adc
ret
mov
jmp
inc
enter
add
gs
xlat
gs
mov
adc
ds
sbb
popa
rcl
or
cmc
ins
arpl
push
xchg
aas
mov
push
xchg
(bad)
xchg
daa
js
mov
popa
imul
fcom
cmps
and
rol
fiadd
stos
sbb
(bad)
xlat
stc
in
outs
out
mov
sti
sahf
stos
ss
mov
out
cmps
popa
mov
pop
repz
xor
and
mov
es
mov
stc
push
dec
call
sub
push
iret
es
out
mov
push
push
(bad)
jecxz
dec
or
imul
(bad)
fsub
sbb
adc
nop
dec
push
and
adc
daa
mov
ins
add
pop
pop
outs
out
dec
(bad)
mov
xor
xlat
sbb
dec
and
inc
arpl
arpl
sub
adc
cmp
fs
sub
push
lods
(bad)
out
call
repnz
mov
mov
lahf
aam
ds
cwde
sbb
or
mov
pop
mov
add
xchg
loope
shl
and
add
call
addr16
std
xor
xchg
sbb
xor
push
sbb
jae
push
adc
jmp
mov
xchg
out
mov
xlat
mov
sbb
cmp
sub
ret
cs
add
jnp
xchg
rcl
mov
inc
and
mov
jl
xchg
bound
mov
sub
daa
les
jecxz
stos
jmp
jl
mov
sub
xor
ins
adc
mov
push
add
jg
dec
cmc
pushf
push
lods
pop
fcomp
and
cmp
jne
push
lods
mov
adc
or
rcl
ds
xor
fsubr
movs
push
dec
dec
test
and
cmps
rol
out
mov
inc
add
andps
sub
xchg
push
sbb
mov
sar
out
adc
movs
int
or
mov
int3
in
jnp
adc
sbb
fimul
cmp
fidiv
pop
inc
iret
sub
imul
sub
enter
xor
mov
aaa
outs
int3
jno
fldcw
push
sti
or
rcr
cmp
xor
imul
and
scas
mov
cwd
sbb
inc
call
pusha
jmp
in
jo
cmp
stos
xor
test
sbb
fnstcw
ret
test
scas
gs
mov
cmps
popf
or
mov
and
bnd
xchg
jge
(bad)
jmp
nop
sub
mov
sar
jb
aam
(bad)
jo
xchg
lods
pop
adc
jno
add
cmp
popa
scas
cs
addr16
mov
icebp
push
(bad)
cmp
outs
mov
mov
mov
xlat
or
jecxz
push
cs
sar
push
iret
ins
jo
(bad)
aad
xchg
cwde
push
(bad)
loop
or
icebp
fnsave
push
stos
fidivr
es
sub
jne
cmp
xchg
jmp
cwde
div
jmp
or
in
mov
out
sbb
aad
add
mov
dec
cli
mov
and
or
fsub
and
mov
mov
fadd
int3
mov
(bad)
inc
cmc
push
adc
mov
push
(bad)
xchg
pop
aas
push
iret
pop
das
pop
mov
test
adc
jge
fmul
jbe
fidiv
sar
jo
pusha
dec
inc
iret
cs
and
icebp
(bad)
rol
ret
sbb
fucomip
stc
xchg
mov
sub
xor
add
aaa
push
jno
ret
gs
ja
add
pop
xchg
js
lea
or
sub
pop
sar
xchg
dec
cmp
cmp
jmp
dec
mov
inc
push
mov
jge
rol
add
lahf
dec
sub
inc
bound
pop
pcmpgtw
and
movs
sahf
push
fmul
lods
iret
popa
xlat
call
add
inc
dec
sbb
xor
xor
mov
push
sahf
xchg
inc
mov
and
mov
fdivr
add
aam
sbb
popa
in
push
inc
jge
shl
cld
push
mov
cmp
ss
push
mov
mov
cmp
or
push
xchg
push
cmp
push
out
fstp
sbb
mov
adc
mov
cwde
jmp
push
sub
push
stos
in
xchg
and
fld
add
arpl
leave
ins
pop
xor
cmps
je
xchg
in
daa
mov
mov
jmp
popa
loop
sbb
add
ins
test
lods
test
aaa
fwait
xchg
loope
mov
imul
mov
mov
mov
adc
sub
sbb
test
sub
mov
loop
inc
div
in
ret
mov
mov
xchg
cmps
fdivr
mov
js
cld
shr
lock
xchg
das
or
jns
adc
leave
daa
mov
jmp
sub
int
hlt
sbb
jp
mov
shr
mov
xchg
movs
mov
std
jmp
icebp
lods
push
rol
fs
adc
xor
sbb
inc
cmp
or
pop
cmp
not
pop
adc
cmc
mov
mov
xchg
retf
xbegin
leave
jl
inc
jl
icebp
sbb
daa
sub
cwde
adc
adc
retf
fsub
data16
push
ret
lock
jmp
xchg
pop
loop
sub
sub
adc
daa
je
pop
and
in
pop
fwait
ss
add
mov
mov
fwait
ret
dec
cmp
dec
repz
mov
dec
mov
jmp
test
inc
and
jl
cdq
je
arpl
cwde
arpl
dec
in
jns
inc
cdq
inc
adc
dec
fst
addr16
mov
push
xor
adc
fs
mov
push
jb
in
das
mov
fdivr
je
jnp
push
mov
sbb
mov
loop
popf
cmp
in
call
sub
call
jl
retf
and
mov
mov
imul
shr
push
je
js
(bad)
mov
mov
test
inc
(bad)
mov
repnz
nop
and
xor
leave
addr16
push
xchg
mov
in
inc
xchg
cwde
outs
ins
cmp
inc
add
xchg
adc
push
adc
aam
in
test
ds
add
and
repz
repnz
iret
mov
jg
mov
rcr
in
and
xchg
dec
arpl
loop
movs
mov
push
inc
push
jmp
push
mov
sbb
(bad)
ins
sti
jge
cmp
adc
not
mov
fcomip
shl
loop
xor
clc
loop
loopne
bound
jne
out
or
sub
data16
dec
sub
daa
sbb
mov
movs
scas
stc
and
es
dec
pop
push
jge
out
adc
(bad)
into
push
(bad)
out
mov
test
mov
push
xor
mov
stos
sbb
sbb
cld
in
mov
addr16
push
adc
aam
jno
add
je
mov
movs
inc
icebp
pop
and
jmp
push
movs
daa
pop
push
jmp
inc
sbb
push
mov
pop
adc
scas
(bad)
outs
jmp
pop
shl
dec
mov
xchg
or
mov
fdiv
push
mov
ror
mul
sub
mov
mul
push
mov
push
shr
sub
sub
jge
movs
add
(bad)
sbb
dec
jge
retf
fnstsw
inc
jecxz
jl
xor
shr
rcr
fcmovnb
mov
fwait
sbb
xor
dec
xchg
ss
push
pusha
xor
add
in
and
inc
loop
push
enter
out
imul
mov
xchg
or
push
test
jp
and
inc
pop
inc
mul
iret
pusha
fs
loopne
sbb
es
cli
pushf
inc
pop
fld
addr16
inc
add
out
dec
pop
jne
pop
pop
xchg
repnz
mov
out
enter
je
lods
jl
sub
xchg
lods
mov
sbb
pushf
xchg
ins
test
xor
adc
or
dec
add
stc
sub
(bad)
push
aam
cmp
pusha
dec
call
(bad)
and
leave
add
imul
in
inc
sbb
sbb
add
cmp
and
fcomip
lods
mov
push
lds
hlt
or
dec
iret
sahf
cmp
ficom
cld
pop
xlat
aam
mov
rol
add
or
leave
daa
mov
jmp
xor
pop
cs
mov
dec
ret
clc
clc
imul
into
ficom
sub
and
jmp
dec
mov
cmp
and
retf
(bad)
sbb
and
ins
cdq
addr16
(bad)
xor
add
jb
adc
adc
mov
jl
aas
in
pop
xor
scas
push
mov
out
cs
fnsave
aaa
ins
retf
scas
stc
repnz
jo
sub
ds
add
push
dec
lds
clts
mov
adc
(bad)
jo
repnz
jge
pop
sub
jae
pushw
dec
mov
lods
or
sbb
jle
sbb
bound
loop
and
push
fptan
push
scas
jecxz
sbb
mov
je
pop
add
lea
outs
cmps
ss
ror
test
dec
xor
iret
daa
or
cld
mov
imul
mov
xchg
adc
(bad)
sti
pop
ins
mov
mov
pop
jmp
enter
emms
or
push
jne
test
or
and
pop
loop
aam
xor
stos
mov
fst
sub
into
xor
xrelease
mov
push
mov
ss
xor
imul
sbb
cmp
ret
jg
repnz
hlt
test
xchg
pushf
js
inc
jnp
scas
loop
shl
cs
fsub
push
xchg
mov
cmps
push
test
fisub
lods
jecxz
sti
ficom
out
xor
mov
cmp
jmp
fucomip
jge
ins
clc
fnstenv
cmp
rcr
mov
or
sbb
push
dec
xchg
cmp
popf
mov
out
mov
mov
xchg
ins
ret
stc
inc
adc
push
out
js
test
in
fs
(bad)
out
cmc
add
ja
mov
pusha
jmp
jle
cmc
icebp
enter
mov
popf
jnp
mov
iret
cli
dec
adc
add
cwde
cld
stos
pop
cdq
mov
jl
push
and
add
jnp
jmp
inc
sub
mov
jb
add
mov
cs
inc
stos
xchg
(bad)
jg
std
movaps
fcomi
mov
fimul
push
ins
inc
mov
mov
dec
loopne
inc
cmps
mov
cld
or
pop
jnp
fdivr
sub
fsubr
jo
mov
(bad)
push
aad
push
jmp
data16
mov
ss
vmovddup
pop
dec
dec
out
pop
call
fsubr
int3
jae
test
inc
imul
cmp
fst
lods
mov
outs
scas
in
(bad)
dec
das
fsubr
jne
add
inc
xchg
mov
sub
dec
jge
add
xchg
or
inc
sub
xchg
dec
inc
push
xor
cwde
push
cmp
mov
inc
mov
imul
push
push
dec
add
push
call
sub
fsub
jns
fwait
aaa
movs
ds
push
sbb
dec
lods
push
iret
jmp
sar
and
nop
loop
dec
pop
mov
jne
add
xchg
xchg
fcom
pop
xlat
xchg
lea
nop
cmp
push
sub
lds
ret
ins
cdq
jae
hlt
lods
push
push
jno
cmp
repnz
sub
push
push
ficomp
call
shl
punpckhwd
push
aam
sbb
imul
cmc
push
sub
mov
sub
inc
xchg
mul
retf
fsub
rol
std
test
and
lods
add
inc
xor
and
in
iret
inc
(bad)
out
inc
aam
std
sub
jmp
or
add
mov
pusha
ds
fcomip
lahf
rcr
adc
xor
ja
popf
push
xchg
and
sahf
dec
fbstp
jae
inc
in
dec
mov
in
pop
out
xor
hlt
movs
in
es
ror
sbb
inc
popa
mov
rcr
aaa
sub
jl
bound
and
fisttp
lock
(bad)
mov
or
lods
push
bound
pop
or
imul
pop
xchg
popa
lods
cmp
dec
mov
cmps
add
call
pop
idiv
(bad)
outs
bound
dec
mov
pop
add
hlt
pop
out
mov
cmp
imul
add
icebp
pusha
(bad)
popf
pop
inc
stos
sti
fdiv
lahf
les
fmul
aas
imul
jp
call
retf
inc
and
mov
mov
retf
cmc
and
mov
jae
xor
hlt
leave
push
add
xor
loop
jp
pop
fmul
cmc
ds
mov
mov
mov
ja
and
adc
dec
jp
adc
cmp
stc
or
xor
lods
jae
jg
seto
dec
addr16
mov
lods
sbb
shl
sbb
aas
cmc
stos
or
dec
jmp
or
mov
lock
stos
fst
push
push
xchg
pushf
imul
push
push
cmp
mov
push
std
sub
pop
outs
sahf
cdq
sub
imul
ds
in
aaa
pop
mov
push
dec
aam
lahf
and
push
jno
lods
not
fwait
leave
repz
(bad)
mov
(bad)
ins
pop
(bad)
fprem1
das
inc
mov
inc
fs
into
jne
cmps
mov
retf
pop
(bad)
nop
mov
inc
aam
addr16
pop
push
inc
push
leave
in
sahf
mov
fadd
mov
sub
(bad)
repz
jbe
mov
jae
add
mov
ret
and
movs
add
or
mov
arpl
dec
mov
fisubr
out
int3
lock
dec
adc
(bad)
jb
jmp
inc
ficomp
je
or
aaa
push
shl
(bad)
out
mov
sar
cdq
and
xor
shl
xchg
xchg
out
test
adc
jmp
icebp
dec
stos
or
lods
mov
mov
mov
mov
mov
push
xor
les
xchg
mov
jecxz
je
jg
iret
and
xor
fld
mov
loop
push
es
mov
push
sub
in
sti
out
es
jmp
add
mov
in
inc
fild
movs
xor
out
xor
repnz
mov
movs
sbb
jecxz
fiadd
xor
scas
cs
push
dec
xlat
mov
adc
pop
dec
ds
sahf
inc
inc
adc
jecxz
xchg
sub
jnp
add
pop
std
mov
les
push
mov
jb
scas
je
imul
xor
dec
mov
push
xor
xchg
and
push
call
sahf
repz
sbb
scas
cmc
adc
cmp
or
inc
inc
xchg
jns
mov
jo
out
ret
push
push
dec
js
and
cmp
or
push
sub
push
mov
push
push
or
test
scas
fsubrp
jb
pop
mov
fsqrt
int
inc
popa
mov
sub
loope
mov
and
call
ins
push
sar
ficomp
ret
ins
ret
movs
lahf
into
mov
cmp
aas
outs
xor
out
xchg
popfw
cmp
bswap
int
and
adc
add
mov
imul
jecxz
cmps
loopne
aaa
jb
sar
and
int
imul
xchg
stos
test
dec
mov
in
jp
push
xchg
stos
(bad)
in
fcom
retf
jne
and
fisttp
add
dec
repz
scas
jno
inc
ja
outs
test
push
push
or
fpatan
retf
mov
std
push
test
pop
xor
sahf
mov
movs
cmp
je
jo
sub
cmp
xchg
retf
cdq
pop
call
cmp
pushf
(bad)
out
xchg
or
gs
xor
movs
jp
mov
add
les
push
pshufw
loopne
xchg
fs
call
add
mov
mov
adc
sar
call
mov
or
mov
jmp
in
cmps
xchg
fdivr
pop
iret
push
cmp
lock
into
cmp
lock
adc
mov
mov
mov
mov
or
(bad)
mov
imul
test
push
int
sbb
inc
and
jbe
mov
jb
xor
mov
imul
cmp
ja
jo
mov
inc
jno
xor
pusha
leave
out
(bad)
std
xchg
ins
xchg
ja
inc
pop
or
adc
imul
jo
and
pop
add
test
xchg
sub
leave
stos
sbb
popa
add
loop
xor
sub
dec
lds
pop
inc
pop
jne
mov
jb
push
pop
inc
add
dec
push
retf
pop
cmc
mov
cmps
and
iret
push
and
add
xor
jmp
mov
inc
(bad)
ins
cwde
ret
(bad)
or
or
mov
les
mov
jge
xchg
fcmovb
push
ficom
xor
retf
pop
mov
mov
sar
sahf
mov
dec
imul
rol
pop
dec
or
(bad)
imul
mov
mov
mov
fidivr
cmps
shl
lar
mov
fld
nop
aas
cmp
cmp
fist
sbb
and
adc
and
mov
into
inc
pushf
cwde
inc
lds
mov
aaa
mov
fnsave
out
push
adc
test
inc
push
sub
shl
or
sub
mov
cmp
(bad)
jo
mov
inc
push
jmp
mov
mov
and
adc
or
pop
cdq
loop
push
ret
jnp
retf
jo
cmps
sar
and
sub
xor
mov
into
test
jmp
rol
pop
imul
inc
repnz
sub
mov
hlt
or
cmc
jmp
mov
inc
shl
add
stos
dec
xor
iret
mov
push
or
leave
cmc
movs
(bad)
cmp
rol
dec
cmp
std
sbb
xchg
cmp
xor
pop
(bad)
jno
inc
xor
mov
and
inc
push
adc
stc
stc
inc
enter
xchg
cmp
xor
jmp
xchg
leave
cmp
sub
push
mov
push
and
sbb
rol
das
test
popa
mul
sti
and
addr16
mov
cdq
mov
push
cmp
mov
push
dec
(bad)
div
in
cs
xor
call
jbe
xchg
jge
mov
push
cmc
add
jns
jnp
sbb
or
jbe
sub
in
xchg
or
in
add
jno
sbb
pop
push
(bad)
in
mov
pop
adc
cld
add
jne
movs
push
push
mov
mov
mov
cli
or
idiv
enter
cmp
or
mov
out
xchg
retf
mov
repnz
int
fld
les
(bad)
add
sbb
xchg
cmp
je
cdq
dec
and
or
jl
movs
stc
mov
fst
fs
jmp
add
or
clc
mov
mov
loopne
out
or
mov
inc
xor
es
pop
cmp
and
dec
out
xchg
test
imul
jmp
icebp
nop
(bad)
mov
je
jne
mov
fsubr
not
ret
cld
jl
lods
mov
cmc
(bad)
out
rcl
pop
dec
sahf
clc
scas
hlt
xchg
call
stc
xlat
mov
sub
scas
sbb
retf
mov
in
or
aam
cmp
shr
mov
pop
das
popa
call
mov
enter
dec
popa
aam
daa
cmc
lds
or
retf
arpl
call
pop
push
mov
push
xchg
sub
cmp
and
in
clc
sbb
push
inc
dec
data16
push
imul
imul
test
xlat
and
mov
out
test
sbb
mov
adc
mov
pop
lock
mov
out
jle
icebp
sbb
mov
pop
in
or
das
xor
sbb
mov
mov
ja
fnstsw
mov
jmp
les
jge
fst
pusha
pop
add
push
sub
xor
mov
pop
xor
push
mov
stos
das
add
push
add
mov
sub
cmps
dec
stc
dec
ret
push
add
imul
xor
scas
jl
cmp
popf
mov
jl
ins
xchg
out
push
sub
frstor
test
ins
(bad)
push
mov
xchg
mov
repnz
mov
sub
(bad)
retf
cmc
mov
in
loopne
push
outs
mov
pop
movs
push
jno
pushf
ins
pop
xor
pop
xor
sti
(bad)
ja
push
jecxz
je
dec
les
icebp
scas
mov
jge
cmp
call
xchg
fdivp
stos
aas
or
ror
ret
add
lahf
stos
mov
push
dec
aaa
xchg
mov
dec
popa
push
in
and
loopne
mov
dec
outs
popa
push
mov
sub
inc
inc
imul
add
dec
fucomi
pushf
mov
push
into
jl
and
xor
sbb
lods
enter
sti
cmc
inc
cld
out
je
sbb
sbb
cli
retf
jle
adc
inc
xchg
mov
aas
xchg
jbe
ds
sbb
mov
cmp
jecxz
sub
pop
out
ret
call
loope
arpl
stos
ss
jbe
inc
sti
adc
sub
loope
in
retf
push
inc
loopne
push
pop
cmp
mov
mov
mov
ja
push
jbe
push
(bad)
jge
fdiv
out
pop
pop
sti
pop
mov
cs
ins
enter
mov
int
ror
add
bnd
fs
add
movs
outs
lds
jne
and
sahf
mov
add
out
and
shl
sbb
stc
xor
jg
es
jmp
sub
adc
ret
movs
pop
pop
(bad)
imul
cld
clc
jbe
(bad)
stos
xor
stos
test
popa
adc
jbe
mov
lods
and
mov
cmps
retf
inc
shl
shr
push
sub
aaa
pop
outs
rol
outs
sub
and
popa
popa
loopne
or
test
lds
pop
push
ss
pop
cmc
test
push
nop
pushf
aad
sbb
out
bound
movs
sbb
in
jo
add
pop
retf
call
inc
mov
push
mov
addr16
xor
xor
push
out
cmp
stc
aaa
and
int3
xor
addr16
call
in
loope
xchg
jbe
xchg
aam
int
mov
xor
dec
push
pop
jmp
dec
xchg
cli
fnstcw
fisub
fscale
mov
pop
pop
mov
jmp
cmc
imul
add
sub
add
pop
mov
add
xchg
imul
add
cwde
sub
xchg
pop
jmp
ror
add
aas
int
ins
mov
cmovg
mov
nop
into
aaa
enter
mov
icebp
addr16
dec
mov
dec
and
in
and
cmc
add
iretw
add
imul
jl
jmp
pop
push
fistp
das
js
cli
add
leave
out
cli
xor
ficom
out
pop
jo
loope
outs
pop
mov
dec
sbb
aaa
pop
test
ds
ret
cdq
in
push
scas
lods
jmp
fdivr
adc
cmc
hlt
rol
int3
dec
mov
je
adc
neg
(bad)
xor
and
lds
mov
test
xchg
mov
movd
cmp
sub
mov
call
inc
dec
hlt
js
in
stos
dec
jp
sub
dec
xor
inc
push
out
data16
cmp
ret
xchg
fldlg2
repnz
mov
loop
lods
int3
xlat
jg
inc
stos
dec
jo
(bad)
fmul
hlt
iret
es
dec
gs
cmp
scas
aam
mov
inc
xor
add
mov
dec
cli
adc
jmp
out
sub
pusha
and
cmps
mov
mov
fnstenv
cmc
sar
sub
sub
push
add
jge
lock
mov
adc
adc
repz
sub
push
(bad)
test
push
mov
sbb
jne
push
aaa
fld
pop
add
jmp
shl
add
xchg
daa
mov
out
push
and
pop
mov
retf
scas
adc
cmp
push
cmp
xchg
loopne
leave
retf
or
adc
push
xor
pushf
mov
jle
xor
ja
not
sub
inc
jns
inc
cmps
lods
inc
gs
sbb
mov
and
outs
mov
and
add
mov
adc
jmp
dec
adc
loopne
pop
out
loopne
xor
aad
xchg
(bad)
xchg
out
mov
sub
daa
inc
xchg
es
fiadd
mov
sub
jle
clc
mov
xchg
jp
jge
push
xchg
mov
xchg
stos
dec
es
fsubr
mov
adc
mov
pop
cmp
xchg
mov
in
or
mov
pop
retf
cmp
mov
aam
xor
dec
or
xor
mov
jp
lahf
adc
push
aaa
cmp
jnp
rcl
js
nop
call
push
mov
bound
or
inc
inc
add
inc
retf
pop
jae
and
test
xlat
inc
mov
cmp
or
call
pop
nop
pop
test
adc
sbb
ins
adc
push
pop
leave
retf
xor
lea
xchg
addr16
lock
int
jns
push
dec
imul
adc
sbb
mov
xor
jbe
das
xor
sub
stos
xchg
retf
lds
sub
ja
ins
movs
push
movs
add
pop
cdq
outs
pop
aam
cmp
hlt
xchg
dec
dec
cmp
sbb
fcomp
lock
std
inc
neg
xor
stos
repnz
lahf
out
jp
cmp
push
xlat
jb
(bad)
test
or
pop
arpl
rcl
mov
stos
out
push
cmp
mov
pop
and
inc
ins
xchg
push
leave
gs
pop
cdq
(bad)
mov
pop
jno
into
push
and
fwait
xlat
fadd
add
mov
into
add
adc
in
js
(bad)
retf
cmp
into
adc
fwait
xor
pop
or
adc
test
cmps
sbb
jnp
lea
iret
outs
aas
sahf
out
sub
xlat
aam
sbb
mov
mov
inc
pop
push
push
push
outs
loop
out
ss
sti
mov
(bad)
aad
idiv
mov
lds
push
pop
loopne
test
nop
mov
inc
fstp
loope
into
add
jo
pop
mov
sbb
mov
pop
sub
outs
fldpi
aaa
inc
push
lahf
inc
mov
jle
call
add
fidiv
jbe
in
test
sbb
mov
xchg
shr
sbb
gs
mov
mov
xchg
aaa
push
stc
mov
adc
xor
stos
dec
inc
icebp
pop
cmp
movs
int3
(bad)
add
inc
jmp
je
test
xor
addr16
mov
jg
cld
arpl
out
shl
(bad)
js
push
adc
mov
clc
sar
ins
dec
xor
(bad)
fnstcw
gs
jbe
setne
jno
and
mov
sub
out
and
jg
(bad)
jbe
in
pop
loopne
outs
or
adc
fcompp
cdq
inc
shl
fidiv
mov
push
jb
pop
imul
bound
jl
clc
jp
inc
sti
sub
inc
call
lods
jl
test
clc
pop
add
nop
out
fistp
adc
cmp
xor
cdq
jg
pusha
cmp
mov
xchg
sub
lods
arpl
mov
imul
lods
outs
cmps
fstp
push
add
les
pop
clc
mov
inc
push
mov
xor
aaa
mov
shl
inc
jmp
sbb
jns
add
pop
add
dec
movs
loop
adc
in
xchg
mov
cmp
call
lods
lahf
ds
movs
rcl
fdivrp
js
call
popf
add
and
out
sahf
sbb
mov
adc
push
sub
pop
mov
punpckhwd
push
popa
not
jno
fs
rcr
xor
daa
sub
pop
push
inc
imul
mov
cmp
icebp
push
pop
fistp
add
imul
xlat
cmp
jmp
imul
jae
mov
nop
jne
mov
jae
mov
and
int
pcmpgtb
jae
retf
nop
pushf
mov
jae
aaa
add
dec
pushf
shl
inc
sub
mov
add
aad
out
mov
(bad)
ds
jae
mov
pusha
stos
dec
xchg
jg
cld
xor
mov
(bad)
iret
xchg
add
and
stos
retf
dec
mov
jle
xor
test
lock
push
jl
adc
out
xor
call
and
movs
daa
sahf
xor
mov
push
aam
push
pop
lds
popa
cmp
(bad)
cmps
(bad)
cmp
mov
div
fisub
fst
push
xchg
jecxz
jmp
sbb
mov
in
xchg
dec
loopne
mov
mov
out
and
ret
inc
stc
ficom
inc
inc
jmp
sahf
inc
mov
cld
lods
lock
adc
pop
add
mov
popa
xor
icebp
stos
xchg
push
test
aas
iret
loopne
test
cmps
and
lock
mov
jbe
in
int3
sub
lds
sub
fs
iret
xor
push
cmps
fwait
leave
xchg
cmp
xor
mov
cli
xchg
jg
pop
cmps
dec
iret
(bad)
clc
pop
cmp
cmc
adc
call
cmp
jmp
add
ds
mov
or
sub
cmp
sub
adc
sub
fs
ror
int3
mov
adc
xor
and
mov
add
(bad)
int
mov
dec
mov
shr
div
iret
(bad)
loope
outs
mov
push
jmp
sub
cmp
mov
movs
arpl
aad
sub
push
stos
mov
adc
jbe
mov
movs
mov
jmp
dec
mov
xor
xchg
adc
fild
adc
aaa
out
push
popa
push
fild
cmc
xor
mov
add
fwait
adc
jmp
std
aaa
inc
das
fild
cmp
imul
sbb
lea
data16
movs
mov
retf
adc
mov
not
pop
movs
or
jmp
cmp
or
cmps
cdq
hlt
sub
aad
jne
mov
mov
xor
sub
cmp
push
(bad)
xlat
(bad)
mov
dec
mov
cmp
dec
adc
rol
and
adc
aad
sbb
arpl
sti
inc
sub
mov
cld
mov
or
xchg
add
add
test
cwde
in
xchg
or
aas
add
ret
repnz
adc
mov
mov
inc
and
pop
pop
movs
jb
push
mov
(bad)
sub
pop
mov
hlt
pop
xchg
jecxz
arpl
sub
dec
xchg
mov
add
pop
cmp
shl
movs
inc
icebp
test
or
out
aam
imul
inc
stos
(bad)
lods
fsub
test
sbb
xchg
pop
dec
jle
push
jne
and
retf
loop
adc
stos
jmp
cdq
inc
jg
and
sub
test
dec
add
ss
jecxz
int
retf
dec
mov
js
mov
lahf
es
xchg
(bad)
ja
and
push
popf
clc
daa
ret
push
movs
scas
xchg
push
into
cmp
pop
in
fmul
mov
and
cmp
adc
mov
pop
ret
data16
xchg
push
jbe
pop
fist
xchg
imul
or
lahf
je
jmp
mov
stos
test
sbb
push
test
sub
popa
add
xor
and
pop
fs
cli
hlt
fimul
jmp
xchg
cdq
jmp
mov
sub
out
int
aad
xchg
sbb
and
icebp
rcr
xor
or
push
push
pop
(bad)
pop
cmps
xchg
mov
aaa
je
xchg
cmp
dec
mov
jle
pop
ror
adc
mov
mov
(bad)
enter
repz
sahf
and
mov
cmp
xchg
enter
push
inc
out
adc
jg
add
add
push
popa
mov
jb
dec
ficom
push
imul
mov
cmps
je
mov
bound
retf
dec
push
cli
push
xor
add
mov
mov
mov
loopne
das
cmp
cli
mov
shl
iret
mov
xchg
loop
ja
pop
out
adc
test
and
mov
mov
rcl
or
fstp
pushf
adc
sbb
jg
and
inc
push
adc
mov
inc
out
rol
dec
add
aad
outs
mov
mov
movs
out
cwde
mov
push
mov
jmp
neg
int3
xor
jns
popf
leave
test
loopne
mov
or
pop
aad
(bad)
mov
sbb
and
sbb
int3
jne
ret
stc
lods
cmp
fcom
and
inc
xchg
in
adc
in
mov
xchg
xchg
cmp
mov
leave
push
mov
adc
mov
jae
push
(bad)
xor
mov
stos
xor
and
sub
push
(bad)
movs
jl
cmps
xchg
mov
das
mov
push
pop
xchg
popa
or
pusha
inc
jp
idiv
aam
sar
push
jmp
push
lea
pop
test
leave
daa
cs
mov
cmp
div
and
sbb
sbb
rol
enter
inc
xor
imul
mov
mov
jmp
jbe
xor
add
cmp
(bad)
test
inc
inc
test
xor
(bad)
lock
fild
xor
jno
loope
push
dec
aas
(bad)
cld
pop
shl
lods
push
cmp
in
rol
sbb
add
mov
mov
jne
cmc
test
jmp
and
xchg
sbb
push
dec
inc
adc
push
mov
xchg
cmc
cmp
pop
aas
xchg
pop
add
push
mov
inc
(bad)
imul
sub
jns
pop
inc
dec
loope
mov
or
jmp
add
imul
movs
aaa
xor
inc
fadd
add
les
lock
test
or
pop
cmp
adc
inc
loopne
jae
test
pop
jge
loope
xchg
scas
sahf
jl
sbb
pop
inc
cmp
mov
cmc
lahf
xchg
jle
movs
jbe
ins
xor
gs
adc
sbb
cmps
sar
mov
(bad)
pop
popf
mov
(bad)
mov
ins
lahf
rcr
inc
mov
push
icebp
scas
push
adc
dec
jb
mov
mov
cmp
dec
jb
push
inc
jg
xchg
aas
xchg
mov
or
idiv
mov
in
lods
aas
inc
inc
ss
scas
xchg
sub
out
int
icebp
fdiv
ret
lds
pop
outs
sti
es
scas
push
add
mov
push
inc
and
mov
jno
inc
xor
or
and
clc
ja
(bad)
in
inc
inc
pop
sub
cmc
sbb
call
mov
into
push
lods
mov
sbb
ret
repz
test
daa
mov
mov
dec
dec
jb
inc
mov
mov
sbb
inc
aam
lods
push
or
cmp
adc
add
mov
fst
fild
cmp
cwde
pop
ds
adc
xchg
jmp
(bad)
push
test
sub
jmp
or
imul
inc
add
push
jl
popa
ror
mov
movs
mov
jns
pop
and
mov
outs
mov
jb
jmp
jae
jbe
jmp
aam
popf
(bad)
and
xchg
(bad)
in
in
sbb
js
push
fiadd
icebp
aaa
lahf
cmp
jle
rcr
cmp
xchg
mov
out
das
mov
je
hlt
inc
adc
sbb
dec
loope
mov
imul
std
ja
sbb
push
popa
call
or
mov
xor
jb
aas
adc
mov
repz
test
pop
push
fldl2t
sub
pop
stos
lds
sbb
cmp
outs
xchg
mov
out
(bad)
lock
jmp
add
leave
mov
(bad)
(bad)
loope
lds
iret
movs
test
jmp
ja
or
into
xor
inc
lds
das
loopne
retf
xor
ret
xor
adc
rcl
aam
sub
mov
cmp
outs
cmps
rcr
test
or
(bad)
mov
ins
xchg
pop
xor
add
icebp
aaa
je
fild
int
aas
aas
int3
es
arpl
cmp
and
(bad)
dec
(bad)
mov
adc
xor
inc
push
hlt
adc
mov
jp
mov
adc
fs
adc
push
arpl
bound
push
dec
cs
pop
leave
pop
popa
cld
and
popa
jo
popa
sub
repnz
(bad)
in
cmp
iret
push
and
and
ror
test
daa
xchg
(bad)
inc
mov
sub
and
sbb
push
out
imul
sti
cmp
nop
inc
jo
arpl
aad
sub
jmp
pop
mov
std
mov
and
xchg
popf
int3
and
dec
hlt
and
addr16
cmp
sub
outs
sub
mov
add
push
push
mov
int3
jo
lds
dec
push
je
add
and
mov
adc
icebp
jae
std
push
test
out
lods
push
cdq
pop
push
cli
shl
add
mov
add
xor
popf
(bad)
js
movs
push
loopne
push
test
and
cld
sar
repnz
jmp
sbb
rol
pop
push
std
ins
retf
lock
scas
in
cli
sbb
stc
js
dec
rol
mov
ret
or
add
push
xchg
mov
or
push
ja
not
test
mov
pop
or
add
fwait
ret
imul
das
pop
cmp
xor
fisubr
(bad)
cmps
aas
aas
xlat
cld
add
xchg
cmp
add
repz
adc
push
(bad)
or
pop
adc
cmp
add
lahf
adc
sub
jmp
(bad)
sti
mov
fs
mov
cmps
dec
dec
sub
out
mov
(bad)
cld
push
fs
or
dec
sub
pop
retf
(bad)
psrlq
arpl
loopne
pop
mov
call
repz
inc
retf
mov
sub
jns
jb
inc
clc
sub
adc
xor
dec
sub
inc
sbb
inc
cmp
(bad)
mov
pop
call
mov
rol
loope
nop
pop
cmp
mov
mov
push
bound
push
lea
mov
cli
and
inc
xor
fwait
pop
jecxz
shr
outs
retf
neg
rcpps
mov
push
jp
sbb
xor
rcl
xchg
sti
test
inc
in
test
cs
out
mov
shl
mov
cmps
cmc
mov
imul
out
aam
ins
pop
neg
pusha
int
mov
cmps
inc
and
pop
aaa
dec
das
dec
push
pop
leave
cdq
cmp
push
rcl
inc
jbe
push
arpl
mov
cmp
(bad)
shl
fistp
jmp
push
jne
ds
jp
mov
sub
xor
adc
test
mov
add
sbb
pop
ss
xor
adc
cmp
xor
fld
pop
int3
rol
adc
out
inc
dec
daa
imul
mov
sub
jbe
in
cs
int
or
and
int3
pop
loop
cmp
stos
sbb
dec
sub
push
int3
movs
or
adc
pop
stos
in
mov
cld
hlt
lods
jno
jge
mov
fadd
jmp
inc
jns
cmps
paddusw
sbb
ins
into
push
mov
xor
dec
clc
sbb
push
xchg
dec
mov
jmp
hlt
and
scas
mov
mov
mov
movs
mov
outs
cmp
push
xchg
stos
cmps
outs
sub
mov
mov
xor
xchg
cs
shl
xor
cmp
lock
std
jle
push
(bad)
add
in
iret
mov
repz
cmps
clc
sbb
and
ret
or
push
mov
call
hlt
adc
int3
xchg
int3
pop
push
retf
pop
sub
rcl
(bad)
outs
sub
add
xchg
shl
adc
sub
xlat
push
arpl
sbb
add
xchg
pop
cwde
push
iret
xor
mov
lds
mov
pushf
mov
dec
xlat
retf
fld
xor
js
(bad)
mov
adc
in
cmp
jno
fldcw
or
cmps
ss
fst
in
pop
push
pop
jmp
popf
popa
inc
xchg
test
call
push
movs
sti
adc
mov
cdq
add
xchg
xor
nop
loop
and
mov
into
or
repz
mov
das
push
sbb
xor
cwde
lods
loope
std
ret
pop
(bad)
sbb
pop
jmp
add
mov
pop
cmp
mov
enter
mov
lods
in
aam
rcl
popf
or
retf
mov
push
fmul
jecxz
push
cmp
push
xchg
stos
add
(bad)
les
adc
fcmovnb
push
pusha
inc
retf
ins
sub
shl
xor
out
ins
int3
mov
sub
or
xor
sti
loop
cmp
mov
mov
loop
fwait
jbe
push
jp
cmp
mov
hlt
repnz
jle
fld
ficomp
mov
call
lea
dec
xor
mov
push
pop
sti
jmp
add
cwde
(bad)
pusha
xchg
ja
shl
inc
ret
mov
hlt
loope
fidivr
lods
sbb
daa
mov
adc
xor
(bad)
fidivr
inc
sbb
jle
lods
dec
hlt
test
mov
adc
stos
mov
cld
push
xor
and
add
xor
les
cli
cmps
sub
nop
pusha
xor
je
pop
xchg
mov
mov
loop
adc
daa
jb
jge
sbb
fcmovb
cmp
xchg
pop
int
jp
aam
inc
adc
pop
pop
mov
dec
jecxz
or
lock
mov
ficomp
lock
sbb
into
jp
sub
and
clc
lods
mov
sbb
imul
je
xor
loopne
jmp
xchg
loopne
xchg
push
sbb
or
mov
retf
stc
adc
retf
mov
fidivr
ficom
inc
sub
jo
inc
shr
aam
jle
repnz
adc
mov
(bad)
ds
jl
pop
jp
js
inc
cmps
xchg
mov
mov
or
je
sbb
outs
pop
cwde
mov
sbb
mov
inc
repz
inc
push
mov
les
outs
add
sbb
push
jp
int
sub
scas
lahf
sub
addr16
jb
cmp
mov
repnz
addr16
mov
mov
jae
xor
sbb
mov
sub
test
jnp
adc
adc
out
pushf
sub
cmp
ins
sbb
and
sbb
inc
xor
hlt
ins
mov
aam
(bad)
fmul
sti
adc
push
ss
cmc
lea
fwait
mov
mov
dec
jnp
xchg
fidiv
and
(bad)
mov
pop
lahf
pushf
in
and
xchg
push
dec
cld
aaa
mov
and
shr
mov
mov
push
pop
test
ss
mov
mov
dec
or
cwde
sbb
add
push
push
push
inc
and
gs
lods
dec
rcl
add
adc
ror
shl
jge
cli
jg
inc
sbb
repnz
jb
add
fyl2x
cli
test
popf
jge
mov
adc
sbb
dec
movs
inc
movs
fcmovu
xor
adc
(bad)
and
mov
cmp
cmp
sub
and
jne
cmc
sbb
xchg
jecxz
(bad)
mov
pop
xchg
sub
test
mov
iret
mov
(bad)
stos
push
push
mov
sbb
adc
xchg
imul
enter
ja
sbb
cmp
lahf
retf
sar
movs
rol
and
sbb
fldcw
out
fmul
pushf
fistp
adc
int3
mov
std
jns
test
gs
dec
nop
mov
mov
jmp
outs
add
in
push
inc
repz
adc
mov
add
call
movs
mov
sbb
pop
gs
and
outs
mov
xchg
and
jns
sbb
adc
mov
dec
adc
lock
push
mov
fs
push
fst
jmp
and
in
(bad)
movs
pop
jno
sub
(bad)
jbe
add
xor
mov
loopne
daa
aaa
mov
cmps
adc
mov
cmp
push
xor
inc
inc
mov
pop
cmps
ja
push
mov
adc
inc
adc
fisttp
shl
or
test
cdq
dec
sub
push
sub
enter
jl
pusha
sahf
add
outs
aas
mov
sub
ds
xlat
(bad)
mov
xor
scas
adc
mov
sbb
cmp
pop
aas
dec
dec
adc
leave
test
dec
mov
aam
xor
pop
push
push
out
(bad)
icebp
fistp
adc
in
mov
enter
(bad)
pushf
jo
or
mov
push
mov
fistp
mov
out
ins
xor
mov
and
rcr
sub
(bad)
cmp
mov
lock
cmps
adc
sub
xchg
adc
(bad)
in
jbe
cld
pushf
aaa
jl
sub
sbb
sub
stos
mov
idiv
sbb
jmp
and
retf
sub
clc
add
mov
sub
push
(bad)
pop
push
mov
push
pop
jnp
add
mov
icebp
inc
popa
ret
(bad)
xlat
popf
dec
bnd
cmp
or
mov
inc
inc
sar
ja
cdq
jno
in
aas
mov
xor
sbb
hlt
pushf
and
cwde
mov
popf
inc
out
fucomip
popf
and
add
test
shr
mov
jns
xor
sahf
and
aaa
mov
mov
ret
ret
movs
iret
adc
xchg
xchg
out
jmp
(bad)
out
sbb
sbb
push
or
sbb
mov
mov
(bad)
data16
mov
bound
fdivr
lahf
pop
jmp
call
lock
cmc
add
loop
sbb
lods
cwde
mov
loope
js
mov
fstp
in
loope
cmps
stos
loop
sahf
stos
and
mov
ret
mov
int3
cmp
in
stc
sub
mov
sub
leave
pop
les
cmp
retf
jae
or
test
inc
jne
mov
psubb
and
imul
jae
loopne
or
enter
push
mov
and
leave
mov
repz
mov
out
inc
push
mov
mov
mov
and
sbb
int
add
push
mov
pusha
cmps
call
jne
addr16
lods
test
sti
dec
cmp
mov
xchg
cwde
in
or
shr
imul
outs
mov
push
jmp
addr16
movs
dec
mov
inc
sbb
test
popa
aas
cdq
sar
mov
dec
cmp
or
fsub
adc
dec
inc
fisub
imul
mov
cmp
(bad)
mov
loop
pop
pop
jnp
push
pop
cmc
hlt
ins
shl
aad
cmc
or
dec
add
sahf
or
fcom
pop
or
ja
adc
push
xchg
jb
sub
sti
aam
aam
ret
and
pop
cmps
mov
imul
xor
cmp
fwait
js
int
sti
shl
jmp
lods
out
pop
and
jge
mov
xchg
xchg
call
(bad)
sbb
adc
mov
ficomp
leave
loopne
in
or
push
cmp
push
push
fsubr
sbb
jns
retf
and
sub
stos
inc
jb
in
pop
loop
fsubr
loope
cmps
stos
or
and
adc
dec
inc
(bad)
mov
aas
out
bound
outs
das
dec
mov
fimul
pusha
mov
repz
sub
stc
push
mov
out
jo
dec
call
mov
and
xor
iret
lahf
div
and
fwait
lods
mov
sbb
or
push
ret
pcmpgtd
sbb
xchg
jp
lods
jbe
or
pop
push
imul
dec
or
neg
lock
lds
iret
add
sar
retf
lock
sub
dec
pop
lods
ss
inc
or
lds
(bad)
(bad)
jno
hlt
cmp
xor
xchg
jmp
(bad)
fimul
sub
xchg
cmps
outs
nop
mov
fnstenv
add
add
imul
in
sti
xchg
pop
add
dec
ror
in
cmp
gs
out
add
sbb
adc
or
xor
and
data16
inc
xor
pop
jp
(bad)
mov
out
cmp
hlt
aad
inc
sbb
mov
(bad)
das
push
ret
push
fucom
fs
or
call
mov
adc
out
jae
pop
iret
imul
and
(bad)
mov
push
ficomp
jmp
or
pop
and
push
xchg
mov
scas
dec
outs
icebp
push
call
mov
sbb
push
test
xchg
call
push
and
pop
pop
xchg
std
in
rcr
sbb
call
jne
das
jbe
sar
push
(bad)
loope
xchg
push
mov
xchg
scas
es
cdq
imul
lea
ds
aad
sbb
leave
and
xor
sub
inc
arpl
mul
test
mov
ins
test
scas
test
(bad)
lds
jbe
in
out
cdq
mov
jnp
fistp
fsubrp
push
mov
fistp
fbstp
aam
fs
sbb
and
jl
ss
fiadd
lods
fcmove
leave
pandn
jnp
sub
xchg
pusha
mov
mov
xchg
sti
cmps
(bad)
xchg
mov
push
push
rcr
sbb
fsubr
dec
sub
pop
imul
cmp
and
inc
jbe
les
push
iret
dec
sbb
arpl
xor
pop
jb
pop
sbb
loope
pop
or
rcl
icebp
cmp
xchg
and
jno
jge
cwde
mov
jbe
fild
(bad)
loopne
pop
xor
test
lea
pop
jecxz
mov
add
xchg
imul
jae
ds
lahf
loope
mov
out
arpl
int
in
(bad)
add
mov
pop
fsubr
xor
(bad)
retf
add
push
adc
sbb
repz
inc
inc
mov
shl
and
(bad)
lods
mov
jl
shr
not
jno
outs
das
xchg
and
scas
call
cmp
adc
scas
shl
push
mov
mov
outs
cwde
cld
xchg
mov
lds
xchg
jmp
retf
ret
pop
inc
xchg
xor
sar
lds
addr16
mov
or
and
dec
cmc
lock
out
dec
mov
ss
mov
inc
inc
pop
jmp
mov
dec
test
(bad)
test
pop
jb
movs
add
jp
lock
cmove
stos
out
stos
sbb
inc
div
sbb
pop
sbb
xchg
aam
fistp
xlat
int
sub
nop
jmp
lods
(bad)
mov
sub
dec
sub
gs
adc
fcomip
icebp
xor
or
jl
mov
jecxz
push
jle
inc
aad
mov
cmp
cmp
fcomp
pop
outs
into
push
xchg
pop
push
jmp
les
push
pop
xor
std
lock
jge
hlt
pop
inc
rcr
inc
fdiv
dec
mov
(bad)
scas
sti
jge
outs
ror
loop
sbb
popf
fprem1
(bad)
mov
popa
fsub
jns
push
aas
xor
lahf
nop
and
mov
sbb
xchg
data16
lds
test
push
jb
xchg
imul
rcl
sub
xor
push
push
mov
mov
repnz
(bad)
aad
pop
xlat
cld
shl
xchg
sti
ins
xchg
xlat
(bad)
jmp
lahf
mov
fsubr
nop
xor
cmc
pop
cmp
dec
push
int
lahf
ror
xchg
or
cmp
cs
les
aam
fsubr
or
mov
xor
test
cmp
fdiv
pop
arpl
sub
bnd
movs
sbb
and
dec
and
pushf
pop
movs
mov
jp
bound
in
xchg
in
shl
cmps
dec
es
cmp
cmp
push
add
fisub
cdq
fsub
pop
pushf
sbb
cmc
jp
ins
or
leave
push
mov
xor
mov
mul
dec
mov
(bad)
mov
shl
push
aam
cli
adc
and
push
sub
pop
movs
cmps
adc
mov
jb
and
cdq
outs
adc
ins
and
push
sbb
loopne
outs
pop
imul
iret
inc
xlat
pop
out
pop
mov
jne
sub
shr
mov
(bad)
or
int
jnp
xchg
aaa
sub
sub
jno
cmp
js
mov
inc
out
div
adc
inc
hlt
outs
pop
sbb
les
cmp
popf
adc
cdq
popf
fidivr
and
adc
ror
stos
push
xchg
data16
mov
imul
push
mov
dec
mov
adc
push
movs
retf
call
push
mov
xor
jmp
jge
jns
out
dec
mov
mov
mov
hlt
adc
ins
cld
push
mov
in
pushf
mov
mov
jl
xchg
dec
dec
jae
adc
xor
out
aad
pushf
add
mov
and
pop
mov
dec
xchg
sub
movs
std
outs
rcl
rcl
ins
add
sub
pushf
xor
mov
int3
in
dec
xor
int3
cmps
pop
adc
push
sub
les
outs
or
(bad)
adc
or
retf
cmps
push
std
adc
xor
lock
loope
add
fs
mov
inc
pop
iret
test
test
retf
pop
loope
push
lea
in
add
xchg
fdivrp
xor
cmps
loope
frstor
rcl
fsubr
aaa
push
cmp
cmp
xchg
xchg
ins
aad
aas
jmp
xchg
jmp
sti
(bad)
nop
mov
mov
arpl
addr16
mov
ret
sub
jb
ss
rol
adc
sbb
es
enter
in
fld
push
cld
enter
lahf
ss
jl
(bad)
fwait
xchg
int3
(bad)
push
inc
dec
ins
repnz
add
mov
push
cmps
sbb
adc
jmp
cmps
test
cmp
aas
fs
sub
jae
rcl
inc
pop
in
xor
xchg
mov
jb
xchg
add
and
jo
pop
sub
inc
pop
mov
mov
lock
adc
lods
mov
inc
xor
icebp
and
xor
push
xchg
cld
mov
imul
pop
xlat
push
push
mov
inc
ja
cwde
pop
neg
aaa
aad
loopne
dec
xchg
or
into
xchg
jae
fstp
fist
cmp
es
cs
movs
sub
(bad)
into
push
mov
std
dec
popf
sub
pop
pop
jne
mov
(bad)
repnz
movs
mov
cmp
jg
push
mov
fst
or
xor
mov
clc
fs
push
sbb
out
or
xchg
sbb
ret
cmp
in
ret
cmp
int
popf
sar
xor
cli
ret
or
stos
push
dec
ja
call
sbb
mov
cmc
dec
add
or
or
maskmovq
neg
cmp
js
adc
imul
mov
call
fistp
(bad)
jo
pop
popf
cmp
mov
pop
add
sti
mul
and
jne
dec
sub
neg
pop
inc
mov
inc
in
pop
and
out
hlt
rcr
push
sbb
jo
dec
add
sbb
xchg
xor
pop
dec
or
pushf
add
cmp
shl
sub
xor
aam
xchg
ja
xor
into
dec
or
out
xchg
jb
shl
mov
adc
jge
scas
mov
xchg
cmp
sub
aas
lods
pop
xchg
clc
test
push
add
repz
das
outs
jl
and
adc
inc
loope
neg
fwait
aaa
or
mov
push
sti
mov
fst
dec
mov
mov
mov
loopne
mov
add
or
retf
jge
jnp
inc
mov
pop
shl
data16
cwde
pop
push
les
mov
mov
sti
stos
(bad)
adc
ins
sub
inc
cmp
or
inc
mov
shl
enter
fmul
aaa
dec
pusha
arpl
in
test
fnstsw
jmp
pop
aad
mov
lea
imul
pop
stc
lock
imul
fcomp
dec
bound
in
push
push
mov
mov
add
or
mov
adc
icebp
adc
pop
cdq
stos
inc
cmp
jmp
inc
dec
jge
add
jl
jbe
mov
ds
lods
rcl
jns
lea
aam
or
shl
rol
xchg
pop
(bad)
das
cld
mov
sub
pop
popa
int
jl
fiadd
cmp
jne
dec
nop
and
cmps
xchg
and
xor
test
mov
shl
out
fcomp
icebp
repnz
into
shl
xlat
icebp
int
xchg
inc
ror
and
and
test
icebp
jl
mov
out
test
mov
shl
mov
jb
mov
jbe
jo
push
add
out
pop
loop
and
jae
dec
or
sub
dec
call
test
or
and
add
ss
or
loopne
push
mov
bound
imul
push
sbb
cmp
xchg
inc
aaa
hlt
mov
push
imul
or
cld
or
test
sbb
push
adc
inc
enter
sbb
xlat
jecxz
jge
and
mov
inc
sbb
push
rol
xchg
xor
cmps
jnp
jmp
fwait
xor
popa
add
(bad)
jns
or
or
xchg
mov
and
xchg
jmp
(bad)
pop
fucomi
dec
cli
jmp
(bad)
xchg
sahf
xchg
adc
imul
scas
adc
icebp
mov
cwde
xchg
sub
std
sbb
ins
es
mov
pop
and
push
push
out
pop
dec
cwde
(bad)
jns
mov
mov
mul
fdiv
icebp
dec
sbb
dec
xchg
int
xor
jle
idiv
mov
sub
cmp
cdq
xchg
cli
xlat
mov
ficomp
not
sub
ret
cmp
xlat
add
pop
mov
and
dec
aas
and
mov
cmovs
loop
daa
inc
pop
jecxz
push
xor
pushf
adc
iret
jg
repz
xchg
push
and
out
scas
retf
pop
fxch
inc
lock
dec
cli
and
pop
test
lods
clc
mov
gs
add
inc
pop
sbb
push
fwait
out
pop
movs
ss
shl
push
jae
sub
cmc
icebp
cmps
jp
shl
aas
cmp
mov
jmp
xchg
aaa
shl
fwait
inc
lahf
sbb
cmps
test
je
ss
pop
lods
cwde
add
inc
leave
out
outs
lock
mov
sub
jno
mov
xor
cmc
rcr
test
(bad)
outs
out
mov
cmp
stos
mov
and
js
mov
iret
add
xchg
push
pop
mov
clc
push
fiadd
or
xchg
js
push
and
mov
movs
scas
fdiv
rol
push
sbb
jmp
shl
push
stos
or
mov
xchg
jmp
push
ret
leave
cmps
loop
jge
sahf
or
sub
pushf
sub
in
sub
mov
sar
pushf
jp
pop
mov
pop
fnstenv
push
cmc
out
or
idiv
into
stos
mov
or
dec
mov
inc
sbb
xchg
push
in
icebp
mul
sbb
pusha
jmp
into
jecxz
inc
les
and
mov
frstor
sbb
in
dec
call
and
adc
fadd
push
pop
dec
mov
push
cdq
xor
and
xor
scas
inc
cmp
push
daa
or
pmaddwd
outs
jmp
aam
dec
out
je
aam
mov
mov
add
popf
push
adc
push
xor
cwde
and
jns
adc
ficom
add
iret
outs
mov
cdq
adc
push
or
sbb
test
outs
sub
inc
out
pop
(bad)
cmps
push
push
daa
xchg
loope
dec
fsub
push
dec
add
jl
out
mov
or
mov
jmp
lahf
fidivr
adc
push
mov
mov
rol
(bad)
jg
mov
xchg
mov
and
adc
fwait
iret
pop
xor
push
aad
push
inc
cdq
xor
jmp
jo
cwde
push
or
aam
inc
jae
cdq
test
out
inc
sti
lea
mov
add
call
daa
ret
jno
not
inc
dec
add
sbb
sbb
enter
dec
addr16
js
scas
adc
adc
sub
sub
in
imul
dec
dec
fwait
in
sub
sbb
push
cmp
addr16
mov
sbb
push
(bad)
icebp
mov
jb
xchg
(bad)
cmp
(bad)
jno
pop
outs
cmp
mov
dec
or
sbb
popf
pop
mov
aam
inc
jmp
pusha
xor
cmp
xchg
shl
data16
sbb
lock
jae
les
aad
(bad)
test
test
es
in
xor
lock
(bad)
sub
and
es
pop
and
or
pop
pusha
push
ss
aaa
shr
or
std
int
add
inc
enter
sbb
xor
clc
adc
xchg
xchg
pop
imul
call
push
pop
sub
mov
push
dec
inc
int
movs
add
retf
xlat
xor
(bad)
repnz
rcr
cmps
mov
lahf
ins
mov
cmps
enter
pop
and
jl
adc
repz
je
cdq
(bad)
imul
sahf
repnz
enter
xchg
adc
push
fsub
cli
cmc
or
push
mov
xor
mov
cmp
hlt
mov
cmps
leave
mov
call
cmp
adc
add
int3
xchg
sbb
pushf
data16
lods
div
sbb
jg
cld
push
mov
out
mov
xor
cmc
(bad)
scas
data16
push
lods
sbb
adc
push
or
sub
and
dec
mov
cmp
pop
std
ret
pop
xor
daa
repnz
clc
mov
pop
movs
ror
jg
loop
lods
cmp
call
push
(bad)
imul
sub
das
loopne
iret
dec
mov
mov
sub
pop
rcr
cs
jge
inc
jg
inc
retf
mov
adc
scas
clc
adc
popf
test
repz
test
sub
and
lock
add
adc
mov
lea
sub
addr16
mov
adc
sub
inc
pop
xchg
adc
sbb
cmc
nop
push
fdiv
repz
imul
adc
push
pop
sub
sub
ss
daa
inc
xor
test
sbb
in
out
cmp
pop
push
movs
mov
jae
fild
inc
dec
pop
movs
imul
mov
cmc
xchg
ret
add
sub
or
jp
push
daa
pusha
icebp
outs
sbb
repnz
dec
xlat
call
sub
(bad)
pop
outs
fwait
and
mov
fdivr
jo
in
fnstenv
lahf
sub
xor
cmp
mov
mov
inc
cmps
int
mov
inc
leave
fs
xor
fidiv
ds
push
jbe
retf
xchg
out
dec
sti
xchg
xchg
es
adc
mov
xchg
or
mov
jge
xor
cdq
or
int3
push
jecxz
cli
sub
dec
inc
mov
cs
in
dec
mov
mov
retf
push
mov
into
(bad)
shl
adc
retf
adc
fwait
mov
outs
icebp
movs
pop
mov
pop
in
sbb
cwde
xor
call
call
ja
mov
fadd
(bad)
and
int
or
or
bound
sti
das
ffree
jmp
and
mov
out
mov
je
in
dec
xor
imul
(bad)
mov
jecxz
add
pop
aad
sub
and
push
data16
sbb
pop
mov
mov
mov
(bad)
(bad)
data16
dec
jecxz
lds
mov
sahf
mov
test
jnp
std
cmp
dec
jp
cwde
and
mov
dec
jb
xchg
pushf
push
sub
inc
adc
lock
or
and
outs
jle
out
enter
test
and
xor
pop
sbb
add
add
xchg
and
std
add
mov
push
adc
jmp
in
jb
xchg
mov
fst
xchg
rcr
xchg
mov
xlat
icebp
ins
(bad)
(bad)
outs
mov
or
mov
dec
lds
loop
mov
and
ret
retf
jmp
inc
rol
jl
fwait
pop
push
loop
loop
adc
stos
lock
fstp
ficom
icebp
loop
jmp
sub
not
push
mov
icebp
in
xchg
(bad)
mov
ins
jno
xchg
mov
(bad)
in
out
lods
mov
sub
push
dec
not
in
mov
test
push
xor
or
pop
or
out
push
xor
push
lds
push
fdiv
add
xchg
add
(bad)
mov
into
(bad)
daa
inc
mov
jmp
ror
popa
icebp
popa
gs
(bad)
dec
mov
xor
pop
cmp
adc
call
lahf
daa
cli
out
add
icebp
clc
push
add
sbb
and
pop
push
adc
in
pop
aam
psubsw
daa
popf
push
out
xchg
or
and
sub
unpckhps
and
inc
clc
cmp
jno
and
test
pop
adc
clc
mov
sub
mov
xchg
add
(bad)
push
movs
imul
inc
cmp
jecxz
inc
xor
mov
outs
add
jnp
dec
mov
inc
pop
mov
rcl
mov
mov
mov
enter
xor
movs
add
outs
stos
or
jo
pop
cli
push
add
jle
sub
xor
sar
into
ret
mov
sbb
and
hlt
and
cmp
mov
(bad)
jle
push
das
rcr
adc
pop
pop
push
jmp
inc
add
jl
nop
jp
sub
sbb
sub
mov
mov
adc
out
or
sub
test
push
sub
stc
sar
stc
call
mov
sbb
mov
ins
loop
push
shl
mov
loope
rol
mov
xchg
(bad)
mov
pop
inc
and
hlt
sub
dec
adc
jg
mul
or
pop
adc
pushf
mov
jmp
inc
movs
or
sbb
retf
jecxz
(bad)
pop
push
add
or
cli
rcr
imul
je
icebp
arpl
fisttp
daa
jle
xchg
clc
add
pusha
fistp
sub
sub
or
cmc
jecxz
div
shl
nop
mov
shl
test
dec
push
adc
or
inc
repnz
mov
test
sub
xchg
pusha
sub
xchg
push
cdq
test
xor
lock
sub
icebp
and
scas
jns
sbb
cmps
mov
cmps
out
outs
in
pop
xchg
mov
ja
imul
add
rol
into
dec
push
test
mov
pushf
adc
and
ja
jmp
or
and
scas
jl
addr16
xor
in
mov
and
fimul
outs
dec
xchg
xor
das
fisubr
jnp
mov
mov
arpl
test
inc
mov
or
pop
adc
mov
mov
push
jecxz
mov
jmp
ret
rol
push
popa
inc
sbb
popa
fxch
fadd
sbb
mov
xchg
stc
dec
sub
and
dec
and
and
mov
fsub
ins
and
jae
shr
sub
push
sub
or
bound
shl
(bad)
ins
xchg
mov
inc
in
xlat
dec
pop
mov
sub
mov
jge
or
(bad)
loopne
pusha
cmp
cmps
mov
std
sbb
cmps
sbb
push
and
inc
pop
mov
sbb
xor
xlat
mov
or
xchg
daa
ja
lock
outs
pop
(bad)
or
scas
cmp
stos
fcomip
(bad)
dec
or
xchg
jmp
(bad)
call
popa
in
in
jecxz
std
mov
dec
pop
jmp
pusha
movs
mov
jae
dec
(bad)
add
mov
mov
cmp
dec
movhps
mov
xor
popa
sub
inc
shl
call
mov
jbe
lock
adc
jne
and
daa
popf
call
out
ds
cmp
cmps
outs
and
imul
lahf
inc
dec
and
mov
pop
dec
pop
ja
out
and
and
add
xor
dec
ret
test
pop
mov
add
sub
xlat
int
cmp
jmp
pop
cli
mov
lods
loopne
mov
inc
sti
fwait
mov
xchg
push
je
call
push
imul
fnsave
inc
test
and
sbb
lods
jl
mov
push
inc
add
movs
cmc
mov
add
outs
or
leave
pop
jmp
outs
inc
ret
push
(bad)
jl
fwait
sub
repnz
mov
sub
mov
retf
aad
pop
mov
adc
jge
adc
sbb
icebp
jg
cld
cmc
popa
mov
add
xchg
mul
test
jle
sub
add
pushf
pop
pop
push
mov
(bad)
sar
mov
aas
loop
sub
lods
popa
imul
cmp
mov
inc
pop
xchg
mov
sbb
nop
cli
push
push
mov
mov
int3
mov
jae
jge
cmp
pop
test
test
dec
jbe
imul
xchg
push
(bad)
or
js
push
xchg
and
jge
mov
hlt
cmp
add
jmp
out
int3
xor
mov
and
neg
lock
push
cwde
ret
xor
or
(bad)
retf
cld
fsubr
mov
clc
aam
push
jge
adc
mov
daa
mov
lahf
stos
(bad)
mov
jmp
mov
sti
hlt
and
xchg
mov
jle
mov
lds
sbb
jecxz
mov
jno
inc
jg
push
or
sub
inc
shr
lods
adc
dec
sub
bound
ror
shl
inc
pop
or
push
add
and
or
ss
loop
test
pop
outs
adc
jmp
mov
mov
(bad)
mov
or
inc
inc
test
inc
cmp
jo
cmp
sbb
xchg
lahf
fbstp
sbb
xor
int3
jno
scas
xchg
(bad)
or
loope
xchg
mul
aas
xchg
xchg
adc
sti
add
add
jp
fist
gs
movs
sbb
(bad)
out
cmps
or
pop
shl
dec
das
ficom
lods
mov
or
jmp
xchg
in
xchg
div
xor
aad
mov
mov
scas
mov
add
jo
pop
or
dec
ret
not
jle
sbb
fiadd
pop
push
pop
repnz
ins
(bad)
and
rol
push
outs
mov
popa
cld
inc
daa
add
iret
(bad)
data16
add
fistp
mov
daa
jp
sub
int3
add
int3
adc
and
not
icebp
xor
push
pushf
lock
add
pushf
mov
sbb
or
cmp
mov
xchg
mov
jle
retf
mov
sahf
jo
cmc
lock
add
test
mov
loopne
inc
pop
dec
clc
sub
test
ret
push
mov
jne
jmp
jg
or
out
js
push
mov
jnp
jbe
mov
pop
sub
xchg
ror
aas
mov
inc
pusha
jbe
mov
sbb
push
pop
retf
cmps
lods
xor
out
add
jecxz
or
sahf
popa
xor
push
mov
sti
pusha
ret
(bad)
and
sub
pop
sub
adc
clc
jno
ja
enter
rol
mov
add
inc
cli
mov
fistp
mov
js
sti
loop
imul
in
(bad)
adc
fist
pop
mov
cmp
mov
pusha
dec
data16
xchg
xchg
push
lods
shl
jbe
leave
int
enter
inc
mov
movs
popf
lods
mov
sbb
retf
lods
retf
xchg
xor
inc
add
loope
mov
sub
cmc
and
inc
hlt
call
push
outs
push
add
loopne
aas
bound
test
icebp
into
stos
cld
jl
cdq
(bad)
movs
leave
add
mov
leave
mov
(bad)
jle
cmp
int
sub
cmp
fisub
std
arpl
xchg
lahf
push
jmp
out
hlt
mov
movs
ficomp
iret
adc
mov
nop
out
push
mov
dec
add
sbb
pop
out
adc
cmp
pop
push
and
and
rcl
into
sub
call
in
jle
(bad)
int3
cld
mov
cmp
dec
cmp
dec
clc
(bad)
loope
pop
in
les
or
push
outs
call
adc
mov
lahf
sbb
sti
push
cmp
(bad)
lods
lea
daa
pop
push
cmp
cli
cmp
cmp
push
lahf
adc
push
push
mov
stos
xor
dec
push
loopne
jnp
stc
stos
sbb
and
clc
xchg
shl
push
sbb
or
and
es
lods
push
addr16
adc
pushf
int
push
scas
in
inc
dec
mov
stos
pop
mov
pop
adc
inc
mov
inc
inc
outs
hlt
mov
add
jmp
mov
arpl
mov
push
sub
add
pop
movs
lods
fdivr
push
dec
jl
xor
push
hlt
mov
ret
ficom
sbb
push
test
add
push
cs
out
push
enter
shl
out
push
sub
data16
pop
loopne
mov
loopne
mov
enter
sub
rcr
jle
adc
mov
test
aas
stos
not
imul
fidiv
adc
add
push
cmc
cmp
arpl
and
test
sbb
xor
add
sbb
xchg
pop
mov
scas
push
test
xchg
rcr
pushf
lods
xor
bound
mov
pop
push
push
xchg
dec
sub
push
call
inc
aam
mov
clc
xor
mov
mov
inc
inc
sub
(bad)
jnp
mov
test
sbb
fisub
jae
mov
sub
jnp
jl
pusha
mov
je
add
(bad)
push
lds
stos
cdq
cmps
pusha
sbb
inc
out
xchg
mov
call
inc
(bad)
loop
xor
sbb
jge
xor
jp
mov
mov
push
cmp
mov
cmp
out
pop
cmp
(bad)
pop
pop
mov
pop
inc
jbe
stos
dec
inc
xchg
lods
mov
rcl
mov
adc
loope
xor
push
pop
xchg
and
mov
addr16
mov
pushf
sahf
call
push
repnz
data16
shl
into
lods
pop
inc
movs
outs
xchg
sbb
lahf
add
gs
mov
mov
mov
shl
xor
pop
stc
lahf
mov
inc
pop
or
or
fs
inc
ret
pop
push
out
xor
push
imul
ja
xor
sub
pop
or
add
lock
xor
adc
add
inc
mov
add
ret
sti
adc
or
mov
adc
mov
mov
fs
lahf
enter
mov
inc
push
and
in
sbb
(bad)
push
mov
fimul
mov
test
jmp
sbb
mov
and
ins
lahf
scas
mov
cmp
imul
mov
rep
scas
ins
test
adc
fmul
popf
dec
push
(bad)
and
(bad)
(bad)
cdq
(bad)
mov
adc
outs
push
jle
push
cmps
adc
jl
dec
jg
push
pop
jge
inc
cdq
loop
adc
movs
mov
add
or
jl
or
mov
mov
lock
loope
mov
loope
or
or
fiadd
push
inc
fs
adc
add
cmps
push
jne
gs
mov
jecxz
ins
jbe
pusha
cmp
ins
enter
jp
mov
clc
push
test
loope
aad
(bad)
mov
mov
loope
jge
add
xlat
test
dec
push
mov
dec
lods
daa
adc
(bad)
push
movs
mov
iret
mov
jmp
sub
or
sub
sub
movs
mov
es
rol
(bad)
imul
dec
jmp
jae
mov
jb
out
popa
add
dec
add
or
add
imul
inc
scas
popf
into
mov
das
mov
inc
inc
mov
adc
xchg
je
ror
inc
or
and
idiv
push
aaa
aaa
jle
dec
cmps
add
mov
cmp
and
adc
mov
(bad)
in
pop
cmp
clc
stos
sbb
test
cmp
imul
adc
pop
bound
sub
mov
jmp
ja
mov
or
ins
add
xor
nop
push
sahf
push
push
into
sub
adc
in
retf
not
add
dec
sub
mov
idiv
sub
mov
(bad)
(bad)
push
push
mov
(bad)
mov
inc
inc
mov
xchg
mov
add
cmp
(bad)
or
repz
push
sub
ror
loop
daa
xchg
(bad)
dec
or
mov
mov
push
js
jl
and
rcl
mov
cmps
push
cli
clc
iret
and
and
cmp
rol
push
and
les
jg
push
mov
pop
jbe
rcl
cmp
mov
addr16
mov
add
or
cmp
inc
sbb
sub
inc
pop
xchg
arpl
int
and
dec
outs
fild
sbb
or
or
fiadd
add
mov
idiv
cdq
lock
cmc
sbb
ror
je
ja
ins
ins
icebp
inc
cmps
addr16
movs
jae
(bad)
xor
cmp
std
xchg
mov
mov
daa
out
pop
int3
out
mov
cwde
pusha
arpl
add
test
data16
push
fscale
sub
pop
pop
stos
sbb
sub
and
mov
mov
out
mov
mov
sbb
cs
mov
or
and
cld
pop
pop
pop
call
enter
dec
or
or
xchg
push
xor
test
sub
sti
mov
cld
test
mov
xor
fbld
test
xor
add
xchg
cmp
pop
add
je
xor
out
cli
dec
push
pop
les
inc
retf
jo
dec
ror
xor
out
daa
xlat
add
nop
jno
jg
mov
sti
add
or
fidivr
ret
mov
mov
in
fnstcw
push
(bad)
ror
mov
loope
fisubr
jo
in
lds
push
push
rol
add
mov
sub
gs
jge
int3
dec
dec
mov
aad
sbb
cli
dec
jmp
mov
in
cli
in
ins
sbb
imul
ins
iret
int3
jb
jb
ss
xor
sub
pushf
xlat
outs
cmp
out
or
adc
xor
ss
mov
inc
es
enter
sub
or
mov
jp
inc
(bad)
pop
mov
lds
int3
cdq
adc
or
cdq
movs
ds
shr
jp
out
jns
fwait
retf
cmps
fsub
xor
xor
mov
sar
faddp
scas
mov
cmp
or
pushf
push
jb
ja
cwde
idiv
jl
mov
pop
nop
dec
xlat
(bad)
(bad)
pop
into
dec
cmps
pop
mov
mov
mov
fsub
test
or
lea
jno
sub
test
idiv
dec
push
mov
sub
jbe
(bad)
loop
or
repnz
mov
arpl
pop
(bad)
sar
inc
xchg
xchg
jmp
xchg
mov
jmp
test
js
mov
or
js
scas
stos
sub
neg
mov
arpl
aas
aaa
into
cmc
mov
or
loop
arpl
xor
cmp
push
movs
and
jl
sub
fldenv
jbe
loope
jecxz
cmc
dec
pop
cmp
pop
sbb
mov
or
bswap
out
je
std
pop
inc
pop
push
je
xchg
enter
jnp
add
mov
mov
jbe
dec
and
jmp
jmp
or
and
cdq
js
test
sar
in
outs
jne
(bad)
fsubr
cmp
sahf
pop
and
out
mov
push
mov
ret
push
mov
mov
mov
dec
mov
sbb
pusha
pop
enter
bound
pop
mov
and
sti
mov
int3
adc
mov
push
loop
aam
jmp
inc
fimul
sbb
ss
inc
add
cmp
(bad)
nop
mov
or
retf
mov
and
mov
xor
lahf
das
fdiv
dec
jo
lds
sub
or
add
out
pop
shr
xor
iret
and
or
mov
shl
xchg
retf
fs
jns
mov
mov
call
ins
add
hlt
jno
mov
(bad)
mov
xchg
(bad)
fs
pop
scas
push
mov
mov
mov
inc
retf
mov
pop
fwait
sub
das
jnp
stc
xor
mov
jg
jbe
jbe
push
loop
test
and
mov
shl
out
xchg
sub
fisub
push
test
push
cwde
mov
scas
cmp
cdq
div
sar
jb
xor
xor
nop
sbb
imul
pop
out
or
ss
add
mov
mov
(bad)
outs
das
pushf
or
lds
pop
in
xchg
clc
repnz
aam
clc
jno
adc
cli
and
into
test
push
mov
sbb
jg
aas
call
(bad)
ds
or
inc
gs
pop
test
xchg
aas
xchg
pop
inc
leave
and
repz
aam
pop
jg
dec
aaa
xchg
iret
sub
scas
inc
popf
aas
cmp
fs
push
fbld
cld
iret
sub
(bad)
mov
jle
mov
jg
cwde
and
fprem
aaa
mov
dec
clc
add
sub
test
xor
lods
inc
retf
mov
pop
push
xor
pop
jmp
jl
js
ret
(bad)
pop
dec
pop
pop
xor
mov
jle
cwde
out
movs
retf
mov
cs
jno
sub
or
das
xchg
sub
test
mov
ja
jns
iret
cli
dec
mov
mov
xor
out
push
(bad)
jg
or
aas
fwait
pop
pop
mov
dec
psllq
pop
sbb
xchg
xor
and
and
aas
inc
pop
mov
dec
int3
mov
cld
or
inc
fidivr
int
xchg
add
mov
push
mov
adc
addr16
dec
(bad)
cmp
fcmovbe
jb
mov
in
inc
aas
ins
loopne
pop
sbb
mov
test
pop
dec
mov
(bad)
int3
scas
sbb
inc
xchg
fcomi
add
(bad)
fld
fst
xor
int3
mov
jle
or
(bad)
fsub
(bad)
leave
and
add
sbb
sub
sub
lods
adc
in
repz
stos
test
sar
cmp
iret
stos
pop
ins
and
sub
jns
lahf
adc
jl
dec
fidiv
je
bound
push
jnp
fld
cmc
out
aad
bound
sub
pop
cmp
mov
sub
call
dec
inc
das
push
or
dec
cwde
xchg
jo
add
imul
or
fidiv
push
mov
pop
mov
fistp
mov
(bad)
mov
cmc
jae
imul
or
jns
gs
mov
aas
pop
sbb
daa
movs
add
mov
sahf
or
push
cmp
mov
ss
fst
push
ss
mov
mov
dec
cdq
adc
xchg
fistp
ds
cmp
push
jecxz
sti
call
mov
push
stos
dec
ins
adc
jne
xor
pop
sbb
int3
mov
mov
addr16
jp
shl
loope
add
iret
inc
xchg
test
push
xchg
mov
mov
into
push
sbb
or
int3
dec
jl
cmps
mov
or
repnz
xor
jmp
push
xlat
push
push
push
cdq
mov
in
inc
mov
adc
cli
test
push
mov
in
arpl
jmp
push
fiadd
cli
sub
scas
cwde
(bad)
mov
inc
jno
and
sbb
in
call
xchg
loopne
mov
mov
pop
pop
lods
in
push
cli
xchg
ret
dec
fs
in
lea
lock
pop
test
shl
or
push
cmc
sbb
inc
stos
xchg
(bad)
in
dec
mov
jno
mov
or
cmp
popa
or
jno
das
into
mov
ins
pop
movs
or
fwait
xor
pop
popf
jae
dec
nop
(bad)
mov
stc
test
jmp
fnstenv
sysexit
ins
xchg
iret
and
gs
stc
cmps
mov
mov
dec
jns
jbe
call
nop
iret
pop
aas
sbb
mov
inc
repnz
mov
ins
jbe
xchg
cmps
sub
push
into
cmps
cmc
mov
(bad)
sbb
(bad)
jp
or
push
leave
inc
jmp
inc
jmp
push
dec
adc
push
sti
mov
jae
outs
xchg
push
pop
add
cs
pop
add
scas
out
daa
scas
in
or
call
adc
aaa
xlat
cmps
es
test
cmp
dec
xchg
movs
mov
mov
je
pop
in
jle
adc
inc
cmps
ror
dec
cwde
mov
stos
shl
iret
push
test
clc
mov
and
push
arpl
dec
cmp
xlat
add
movs
stos
sub
shl
or
pop
pop
pusha
ds
popa
pop
or
bound
cmp
pop
push
dec
in
idiv
aas
pop
das
xchg
pop
loopne
mov
daa
pop
or
fiadd
inc
xchg
in
mov
fmul
pop
pushf
cli
dec
repz
inc
out
mov
cmc
popa
or
cwde
sub
jb
out
cmp
cli
inc
jecxz
jmp
lods
outs
ret
pop
mov
aaa
(bad)
mov
(bad)
popa
pop
fstp
cli
xchg
or
xchg
cmp
pop
inc
cmp
xor
fwait
in
(bad)
mov
cmp
daa
sbb
cmc
outs
xor
pop
iret
inc
(bad)
sbb
scas
adc
dec
xor
jne
dec
xlat
mov
test
les
xchg
les
and
mov
test
out
or
jns
hlt
sahf
push
dec
adc
fsubp
(bad)
fsubr
push
and
mov
sbb
inc
sub
cs
and
(bad)
xchg
cmp
fwait
mov
xchg
mov
xor
test
fdivr
clc
outs
out
sub
scas
sbb
push
xlat
xchg
icebp
test
inc
push
or
adc
push
sar
into
lea
cld
pop
push
and
fisubr
sar
and
and
iret
mov
pop
mov
mov
ret
dec
pop
pop
inc
and
adc
mov
and
inc
jne
mov
mov
xchg
cmp
lahf
push
push
xor
push
pop
pushf
mov
inc
sti
or
popf
retf
inc
dec
adc
imul
push
pop
in
xchg
xchg
es
mov
aam
dec
mov
adc
dec
(bad)
mov
mov
ret
in
dec
push
das
ins
fbld
cmp
cwde
push
jae
mov
jbe
idiv
pop
es
mov
int3
adc
rol
jbe
sar
mov
int3
pop
loope
cmc
stos
out
test
lock
mov
(bad)
loope
imul
dec
xchg
dec
mov
in
push
(bad)
jmp
mov
call
out
inc
stos
loope
dec
sbb
mov
push
addr16
(bad)
test
jb
mov
loope
out
dec
cs
fisttp
sahf
lods
les
in
das
sub
mov
fwait
ret
or
adc
fadd
adc
xor
push
mov
scas
out
push
mov
xchg
inc
add
ficomp
je
jbe
push
cmp
in
cmp
pop
xor
dec
mov
dec
jp
in
nop
shl
and
iret
adc
xchg
(bad)
pop
inc
adc
or
push
cmp
clc
sub
adc
mov
cmp
sbb
movs
out
ja
mov
(bad)
out
xlat
out
adc
loope
iret
jmp
dec
lahf
inc
cli
imul
cld
sti
cdq
or
xlat
xchg
adc
inc
cli
add
or
xchg
stc
jle
xchg
pop
scas
outs
sub
movs
test
lahf
mov
test
sub
sti
xor
dec
and
jne
xchg
push
cdq
aas
or
mov
adc
pop
mov
in
push
xchg
cmp
push
inc
mov
jle
jbe
inc
icebp
push
sub
inc
xchg
dec
inc
and
xor
ficomp
mov
call
movs
mov
push
sbb
retf
jae
jbe
inc
mov
pop
xor
cmp
adc
push
fmul
popf
sbb
loope
dec
(bad)
mov
(bad)
fs
cli
mov
cdq
pop
sub
out
dec
xchg
mov
(bad)
mov
rep
cmp
mov
and
adc
sub
bound
ds
jnp
cmp
pop
xchg
adc
add
repz
inc
ja
shr
and
clc
cmps
inc
and
inc
xlat
adc
in
cmp
xor
pop
mov
inc
js
push
push
push
js
dec
sbb
or
retf
sbb
lods
ret
mov
scas
cmp
or
cmc
inc
jnp
out
rcr
sbb
push
cli
lods
jmp
pop
dec
adc
pop
jno
sar
xchg
inc
or
push
imul
xchg
repz
add
fwait
xchg
pop
sub
mov
retf
sub
jae
mov
sub
inc
popf
sub
push
ins
(bad)
mul
cmp
ins
xor
inc
shr
test
popa
sub
xchg
sbb
xchg
xlat
mov
in
sub
enter
nop
(bad)
in
pop
popf
fmul
cmp
fistp
cmp
or
sub
in
mov
dec
pop
xchg
mov
mov
mov
xchg
or
out
rol
in
xchg
data16
div
inc
fist
jp
mov
stos
sbb
aad
retf
dec
pop
in
addr16
popa
loope
xchg
mov
mov
sbb
fisubr
mov
test
cmps
adc
sbb
push
jne
cmp
and
int
push
fidiv
out
stos
adc
add
arpl
imul
and
lahf
nop
mov
xchg
pop
add
out
push
jg
or
arpl
out
test
dec
or
or
jno
mov
jmp
fs
imul
cmp
fisubr
adc
mov
adc
mov
fdecstp
iret
jmp
mov
in
or
cmp
jl
int
cmp
xchg
leave
xor
or
mov
jg
fsub
ret
leave
enter
mov
xor
mov
shl
cwde
cli
(bad)
mov
fsubr
mov
sbb
sbb
dec
fmul
mov
mov
dec
pop
or
add
dec
push
ins
cli
repnz
pop
pusha
sub
adc
iret
pop
cmp
ret
sbb
ins
test
imul
movs
add
cmps
dec
pushf
cmps
imul
or
push
xor
lea
adc
push
push
push
push
mov
cmp
jb
data16
cmps
mov
push
clc
fldcw
jb
fxch
mov
fsubp
out
push
cmps
inc
scas
sahf
in
cld
stc
dec
in
mov
and
xor
test
das
popf
leave
or
(bad)
jns
cmp
mov
dec
adc
imul
mov
pop
lea
test
fwait
or
fnstsw
dec
jge
aad
and
inc
call
pop
push
repnz
out
add
test
mov
and
cmp
dec
push
ret
and
arpl
mov
sbb
pop
mov
(bad)
idiv
jns
scas
outs
xor
mov
pop
jp
mov
stc
clc
add
pop
fisubr
ret
sub
push
or
and
mov
xor
dec
mov
pop
es
xchg
pop
popf
test
sbb
and
hlt
xor
aas
pop
fdivr
sbb
adc
pop
add
nop
sbb
movs
fs
pop
adc
scas
jmp
lds
or
icebp
jmp
ss
pop
imul
or
or
inc
cs
jae
push
sub
pop
jg
fdiv
and
iret
repnz
test
jne
xchg
cmp
xor
jl
mov
ror
in
cli
bound
(bad)
pushf
and
(bad)
pop
sbb
popf
imul
push
loope
mov
repz
jg
(bad)
xlat
xchg
mov
xor
cmp
xchg
add
stos
rcr
pop
mov
lods
movs
ficomp
out
shl
dec
cs
jns
fisttp
dec
jmp
mov
scas
push
sub
in
mov
not
and
fimul
mov
lea
leave
xor
jmp
dec
lods
cmc
push
fist
sub
push
stos
mov
outs
inc
sub
bound
mov
mov
cmps
add
out
and
sbb
mov
in
adc
sub
out
pop
mov
xlat
inc
or
adc
mov
sub
pusha
add
push
jae
pop
pop
inc
mov
push
jo
jbe
test
test
inc
les
inc
pop
sbb
mov
adc
ret
loop
clc
arpl
(bad)
cli
mov
sbb
inc
sub
(bad)
daa
int3
imul
cmp
sbb
fnstcw
mov
sti
rol
jl
(bad)
xrelease
xlat
pushf
mov
push
call
inc
(bad)
das
xchg
inc
inc
imul
ja
dec
cmp
fstp
test
mov
or
mov
(bad)
push
fisubr
adc
push
inc
repnz
mov
add
fadd
xor
cmp
je
mov
jle
xchg
mov
pop
sub
popf
pop
retf
fld
in
fcomp
lods
rol
stos
sub
sbb
cmp
dec
cmp
mov
mov
inc
mov
icebp
iret
cld
xor
ficom
pushf
bound
push
lods
and
adc
sahf
xor
aas
mov
push
cmps
sub
daa
jl
mov
out
jl
retf
mov
(bad)
leave
pop
mov
sar
mov
inc
adc
push
xor
shr
cs
xlat
movs
dec
lods
xchg
cwde
addr16
adc
data16
mov
cs
sub
icebp
adc
and
jge
cmp
cdq
add
push
shr
jmp
inc
outs
adc
fld
push
mov
in
sar
inc
scas
xchg
jns
cmps
jb
in
sub
push
pop
sbb
stc
push
rcr
lock
cwde
(bad)
stc
xchg
dec
hlt
mov
mov
push
pushf
xchg
out
data16
mov
add
add
push
mov
xchg
mov
aas
pop
pop
mov
dec
in
nop
fisubr
inc
and
add
xchg
and
cdq
adc
jge
jae
jnp
arpl
cmp
inc
jmp
sbb
or
or
leave
mov
ins
and
xor
xlat
sahf
pop
(bad)
adc
(bad)
(bad)
mov
lds
push
shr
movs
repnz
xchg
test
xchg
mov
test
(bad)
sub
mov
sti
cmps
xlat
into
sbb
pop
outs
jl
cmp
fsubr
in
sbb
scas
out
jns
in
fwait
ins
int3
cli
cs
add
add
mov
add
jmp
jp
inc
inc
push
je
sbb
mov
sub
cmp
stos
and
push
cmp
cwde
ficom
lahf
iret
fadd
sub
pop
mov
sar
fisubr
ins
adc
inc
(bad)
pop
mov
xor
cli
movs
push
jmp
in
lods
scas
dec
jmp
out
shr
adc
das
cmp
rcr
inc
cli
lods
test
adc
es
out
lock
pushf
push
bound
jmp
jecxz
hlt
sub
mov
pop
dec
jo
adc
jl
(bad)
out
or
mov
and
adc
push
sub
call
and
ror
fld
js
or
cld
outs
and
fcomp
test
mov
inc
stos
(bad)
sahf
test
sbb
das
(bad)
imul
xor
adc
in
adc
adc
int
push
out
and
outs
cmp
pop
mov
push
fs
fdivr
sbb
in
cmp
test
cmps
xchg
xor
and
gs
retf
lods
mov
loop
stos
aad
inc
arpl
dec
mov
popa
pop
(bad)
outs
push
mov
scas
inc
fcomp
jns
mov
mov
xchg
dec
mov
aam
call
fisubr
popf
retf
into
xor
out
mul
cdq
pop
push
std
xchg
jae
push
fwait
mov
mov
fwait
lea
mov
or
popf
loop
(bad)
mov
jle
or
(bad)
(bad)
lock
pop
stos
jg
sbb
cmps
bound
xchg
fs
pop
xchg
lea
imul
pop
cwde
(bad)
sbb
jo
fwait
and
push
out
inc
push
xchg
call
add
aad
push
adc
mov
ret
xchg
nop
std
mov
(bad)
push
jmp
mov
xor
shr
xchg
int
pushf
lds
arpl
mov
(bad)
call
sub
push
test
pop
out
je
dec
repz
lahf
fwait
shl
sub
pop
cmp
pop
cli
iret
fmul
fwait
pop
sub
sbb
push
cli
mov
mov
inc
xchg
mov
test
sub
(bad)
cmp
std
jmp
xor
push
jae
xchg
or
sub
jnp
adc
sub
popf
fmul
in
add
sub
and
lods
add
sub
xchg
pop
sti
out
in
adc
scas
mov
and
ss
pushf
mov
pop
mov
mov
test
mov
repnz
jo
sub
mov
xor
pop
push
jmp
cmps
nop
inc
sbb
inc
sti
call
fidivr
clc
dec
xor
xor
inc
fsub
dec
mov
adc
fild
gs
xchg
cmp
mov
pusha
xchg
cmp
pop
das
popf
cmp
sub
mov
scas
push
test
aas
in
mov
ss
mov
repnz
xor
mov
data16
ja
mov
fisttp
or
cmps
cli
(bad)
lods
mov
jmp
inc
mov
jb
inc
or
int3
sar
shl
je
rcr
(bad)
dec
dec
sbb
cmps
mov
scas
pusha
call
cwde
jle
mov
adc
test
mov
xchg
and
aas
(bad)
mov
adc
pusha
gs
or
xor
scas
(bad)
aam
add
mov
(bad)
repnz
clc
and
leave
dec
cmp
call
mov
sub
or
dec
mov
int
push
inc
ds
dec
dec
(bad)
jg
and
mov
add
cmp
pop
scas
inc
and
cdq
les
jns
sbb
ss
in
movs
inc
test
push
mov
cmp
mov
mov
push
and
lock
sub
ins
fsubr
xchg
mov
add
xor
rcr
pop
mov
mov
fwait
add
test
mov
stos
xchg
cmp
sahf
pop
arpl
lods
or
inc
push
loopne
xor
repnz
fnstsw
sub
push
movs
dec
sub
cwde
xor
pop
xor
nop
std
adc
mov
test
cld
ja
mov
push
dec
arpl
dec
push
xor
pop
out
inc
xchg
sub
mov
ss
dec
mul
push
and
adc
pop
pop
mov
ja
lods
sbb
cli
fmul
adc
loopne
jmp
js
jns
or
push
movs
push
pusha
inc
and
mov
stos
add
arpl
push
sahf
pop
jge
nop
lea
push
daa
dec
lods
sub
push
movs
push
dec
imul
int
pop
pop
(bad)
jns
out
into
adc
retf
jno
add
or
imul
xor
or
stos
retf
push
add
inc
cmp
xlat
inc
inc
xchg
pop
cmps
mov
xchg
jo
xchg
cmp
sbb
imul
xchg
or
(bad)
pop
xchg
rcl
adc
(bad)
gs
mov
sub
es
rcl
mov
cwde
sar
cld
mov
sub
pop
mov
cwde
scas
ret
test
mov
mov
(bad)
push
mov
adc
mov
scas
fisttp
or
imul
or
mov
xchg
in
outs
addr16
xor
cmp
cmp
add
inc
lods
in
loope
dec
out
xor
xor
xchg
(bad)
add
outs
mov
inc
mov
add
mov
sbb
ins
push
sub
xchg
jnp
add
(bad)
in
xor
add
mov
jnp
or
and
ret
fcomp
loope
jns
pop
cmp
dec
cmp
cmp
mov
push
push
outs
dec
fdiv
out
mov
and
pop
inc
or
xchg
dec
pop
(bad)
jns
mov
popa
ins
aas
(bad)
outs
mov
push
adc
adc
imul
in
mov
fisttp
into
push
lahf
or
out
mov
aam
clc
adc
sbb
jmp
or
xchg
jmp
rcl
push
push
movs
fiadd
pop
call
mov
pushf
jae
and
add
imul
mov
sahf
and
inc
cld
push
lods
jne
or
ret
fstp
call
nop
(bad)
dec
out
retf
sar
xchg
xchg
int
and
sti
xor
fsubrp
push
int
xchg
bound
or
inc
adc
fsubrp
idiv
scas
pop
fisttp
mov
mov
dec
jecxz
adc
(bad)
jns
fidiv
dec
inc
call
jmp
jmp
or
or
cmp
cmp
fild
push
jmp
out
or
sub
lock
test
push
fisubr
jne
inc
mov
pop
or
sti
neg
xchg
ret
xor
and
data16
push
cmps
int3
in
pop
push
or
mov
retf
xchg
cmp
jno
test
call
in
xor
xchg
inc
jo
js
jecxz
pop
js
mul
je
ret
jecxz
das
sbb
jp
mov
rcl
add
or
push
(bad)
mov
daa
jecxz
nop
scas
ds
mov
fs
or
sahf
repnz
sub
sub
scas
popa
jge
adc
cmp
or
retf
add
mov
mov
data16
(bad)
mov
aaa
jmp
inc
aad
adc
or
cwde
or
(bad)
(bad)
or
cmp
or
ins
mov
sbb
fisttp
jl
fdiv
jo
xor
leave
stos
je
loopne
xor
xor
pop
push
push
and
iret
mov
cmp
in
ja
enter
push
mov
(bad)
pusha
icebp
data16
rcr
mov
outs
sbb
int
cmp
adc
(bad)
or
test
mov
xchg
test
call
test
cdq
fld
in
in
retf
jg
sbb
lods
fwait
clc
repnz
sahf
cli
ret
cmps
push
push
xchg
mov
fcomp
(bad)
sbb
mov
int3
adc
dec
dec
mov
cmp
(bad)
push
mov
ins
aad
aam
adc
loope
je
and
movs
lfs
push
cwde
sbb
mov
push
jl
ds
out
nop
add
sub
outs
retf
aaa
shl
into
add
cmc
jp
xor
xor
sbb
fst
xor
lods
pop
iret
xor
(bad)
scas
retf
sbb
ins
mov
dec
cmps
sbb
jo
nop
bound
cmp
push
dec
icebp
adc
add
fld
push
fidiv
or
dec
loope
mov
or
std
pop
or
fldenv
mov
sbb
gs
and
pop
mov
imul
nop
xor
jnp
mov
sbb
rcr
mov
loopne
scas
mov
push
sbb
mov
inc
push
mov
or
xchg
les
ja
(bad)
sub
sahf
mov
inc
dec
test
mov
mov
ins
je
push
mov
or
push
(bad)
dec
mov
in
ficomp
outs
fmul
ror
bound
pushf
frstor
es
std
ins
pusha
xlat
push
and
and
adc
adc
imul
mov
(bad)
aaa
push
iret
(bad)
xor
rcl
test
movs
xchg
js
fisttp
sbb
jge
mov
or
jl
pop
repnz
jl
outs
movs
int
aaa
jo
fsub
daa
lods
(bad)
out
add
push
int
rcr
mov
mov
push
and
movs
and
mov
adc
inc
pop
es
sti
outs
fimul
push
loopne
mov
ret
out
or
sub
cmp
neg
xchg
mov
in
aam
inc
mov
or
jb
xor
pop
and
xor
jg
lock
pop
popf
mov
ss
or
add
sub
in
bswap
hlt
mov
and
push
ret
(bad)
iret
ficom
ins
nop
cmp
mov
popa
sub
pop
xchg
adc
retf
je
jbe
xchg
add
dec
std
(bad)
popf
pop
cs
jecxz
mov
lahf
sub
push
jno
cli
mov
and
mov
and
xchg
cmps
mov
out
inc
lods
iret
sbb
push
ss
xor
das
xor
mov
or
pusha
ja
pop
outs
fwait
sbb
jmp
or
pop
fsubrp
shl
stos
dec
jo
or
sub
add
loopne
jo
mov
pop
aam
call
cmc
ds
push
pop
stos
xor
adc
mov
xchg
adc
mov
scas
xor
cmps
and
pop
mov
mov
sub
outs
inc
sub
dec
(bad)
adc
cwde
retf
shl
mov
test
dec
inc
and
xchg
pop
xchg
call
mov
ret
jnp
mov
pusha
dec
and
cmp
mov
rol
cmp
or
xor
dec
jnp
jae
push
mov
repz
mov
cmp
addr16
fdiv
lods
into
cmp
cld
sbb
sub
xor
or
cwde
call
jge
stos
add
dec
loope
sbb
lock
mov
dec
xchg
sub
dec
cs
into
mov
(bad)
and
fiadd
les
scas
jle
add
scas
jae
xchg
repnz
(bad)
jecxz
fmul
pop
loopne
mov
sbb
adc
mov
xchg
sbb
mov
(bad)
fld
arpl
pop
rcl
pop
jae
ret
je
fnstsw
sbb
popf
int
sbb
push
out
fild
jne
add
mul
ret
fwait
add
ja
push
inc
stos
(bad)
call
icebp
jg
into
das
outs
xor
jo
push
call
jo
test
or
imul
mov
xor
or
lea
xor
jecxz
imul
fwait
sahf
sub
ficomp
mov
add
ss
fdivp
pop
jmp
dec
ror
or
mov
cwde
ror
les
in
push
adc
(bad)
mov
pop
jmp
call
shl
adc
(bad)
gs
pop
or
ret
popf
cmc
jne
dec
lahf
xor
add
mov
addr16
pop
xchg
mov
ds
and
jno
jmp
movs
test
or
fs
bound
mov
push
pushf
cmp
add
and
jns
cmp
push
sbb
ins
imul
mov
mov
push
stos
sub
mov
add
gs
mov
push
(bad)
push
push
add
jle
mov
jl
ror
push
pop
inc
xchg
push
mov
mov
ss
pop
rcl
retf
or
mov
mov
call
out
fld
push
xor
popa
(bad)
movs
(bad)
data16
pavgb
mov
ret
mov
test
lahf
xlat
mov
repz
daa
mov
les
loop
and
push
lods
ds
(bad)
call
hlt
adc
dec
xor
adc
loop
xchg
mov
aad
js
scas
push
jns
imul
push
mov
loop
cli
movs
mov
mov
pop
push
iret
adc
xor
cs
cld
jl
dec
lds
push
(bad)
in
or
or
or
jg
fs
xchg
dec
add
push
neg
xlat
and
scas
and
(bad)
or
loope
fild
in
enter
cwde
pop
mov
loopne
adc
dec
push
cmp
or
neg
imul
push
dec
ret
ret
or
pop
repz
outs
inc
jbe
loop
lds
ja
icebp
push
imul
inc
xchg
out
sbb
jp
into
mov
popf
es
test
push
div
jle
cdq
sub
xor
and
lods
xchg
push
jge
sub
mov
adc
or
aas
in
int
push
mov
clc
clc
stos
mov
fnstsw
(bad)
pop
adc
mov
lahf
test
add
xchg
and
adc
adc
add
and
dec
xor
cmp
data16
cmp
movs
push
push
lds
ffree
and
clc
mov
mul
test
mov
adc
xchg
inc
cmp
sahf
cmp
add
xor
or
cmp
jne
sub
sub
xor
inc
repnz
arpl
xor
mov
jmp
jo
stos
in
(bad)
cmc
loopne
push
pop
loope
dec
xor
sub
test
sub
outs
or
enter
outs
loop
sub
mov
cmps
pop
stos
je
jae
mov
pop
dec
shl
inc
mov
retf
lea
enter
inc
mov
shr
nop
adc
xchg
jmp
jl
mov
aaa
inc
cmp
enter
retf
and
and
dec
cmps
cmp
xor
add
stos
xlat
and
enter
fild
in
inc
cwde
fnstsw
xchg
or
test
jl
jo
add
dec
jmp
push
lea
xor
and
mov
rol
fld
pop
cmp
pop
push
mov
cld
cdq
sbb
xor
js
pop
push
test
clc
inc
daa
(bad)
shr
shr
stos
and
test
arpl
imul
das
(bad)
fcmovnbe
push
xchg
inc
fist
movs
jno
jno
adc
iret
daa
mov
(bad)
repnz
(bad)
ds
and
repz
and
in
cmp
cmp
retf
jg
inc
into
jno
shr
ds
popa
ds
das
mov
push
xchg
sub
push
push
outs
clc
dec
test
dec
jo
cs
fild
sbb
(bad)
loope
mov
push
loop
loop
fcmovb
jb
adc
not
adc
sub
(bad)
sar
xchg
pushf
dec
clc
pop
or
in
sbb
adc
rcr
cmps
xchg
push
fidivr
push
outs
cli
mov
fistp
jl
fisttp
add
test
adc
mov
sub
jae
adc
in
stc
inc
push
and
or
in
daa
inc
lahf
push
or
jl
push
sbb
xchg
nop
jo
hlt
pop
mov
rcr
int
ror
push
les
fs
sub
shl
pop
into
(bad)
ret
aam
lds
xchg
stos
mov
mov
stos
popa
push
adc
jecxz
xlat
sbb
das
xchg
mul
mov
xchg
repz
mov
sbb
cdq
and
mov
xchg
pop
sbb
(bad)
xlat
jle
xor
loope
push
(bad)
dec
or
sbb
enter
and
mov
push
scas
jae
test
dec
repnz
pushf
(bad)
imul
popf
out
into
ret
mov
fistp
jno
push
adc
or
cmp
mov
cs
inc
jle
cmp
mov
add
ins
add
outs
push
daa
rcl
pop
push
add
dec
push
enter
push
pushf
loope
sub
jae
fcomp
cdq
sub
les
jg
out
xchg
inc
bound
ret
and
je
scas
mov
ret
in
push
sub
dec
jmp
inc
add
sub
int3
fcom
jmp
sub
sub
sbb
iret
xchg
sbb
pusha
data16
and
xchg
rcr
pop
inc
ja
adc
and
inc
lods
out
mov
sbb
dec
cmp
or
ins
jl
mov
mov
stos
test
jecxz
pop
adc
cld
int3
imul
sub
cdq
popa
mov
clc
test
stc
cmp
jne
pop
cdq
cmp
sbb
punpckhwd
cmc
sub
pop
jnp
xlat
push
aam
mov
mov
sub
sbb
fisttp
pushf
fnstsw
or
push
and
test
(bad)
loop
jg
arpl
push
pop
sub
leave
sbb
jp
adc
push
pop
sub
or
clc
(bad)
jbe
cwde
repz
daa
mov
ins
popf
shr
or
cdq
aaa
add
jmp
ret
jae
pop
out
retf
sti
or
in
dec
movs
(bad)
std
mov
ins
gs
jns
sbb
push
mov
mov
push
repnz
sbb
inc
in
jnp
mov
mov
stos
aaa
adc
retf
push
pop
aaa
xchg
iret
mov
imul
fwait
enter
dec
inc
repnz
mov
push
fprem
call
and
hlt
add
(bad)
int3
fsubr
cli
ret
mov
movs
push
mov
aad
pop
sbb
fst
push
pop
xchg
adc
push
ds
loope
iret
dec
push
arpl
repnz
mov
push
push
out
ror
pop
sub
test
out
push
add
mul
mov
jnp
arpl
popf
cwde
icebp
cmp
mov
aas
push
dec
sub
movs
lock
aas
inc
cli
pushf
add
inc
push
std
pop
scas
scas
loopne
stos
pop
jo
scas
add
mov
sbb
sbb
and
pop
jmp
pop
jge
nop
or
(bad)
jg
scas
hlt
iret
xchg
mov
mov
push
fst
movs
aad
push
sti
sub
pop
xor
xor
add
sub
test
jg
sub
out
scas
sbb
movs
rcl
sub
out
xchg
mov
mov
push
jecxz
mov
or
scas
std
xlat
push
iret
ret
adc
repnz
dec
mov
dec
xor
mov
ret
adc
mov
sbb
(bad)
aas
mov
xchg
inc
jo
ins
rcl
jg
jmp
inc
add
jnp
mov
mov
and
lods
dec
cmp
ja
sahf
sti
adc
jp
fs
mov
inc
or
add
xchg
sbb
push
cmp
sub
dec
popfw
shr
pop
and
sub
push
shl
ss
cmp
inc
imul
cmps
or
movs
or
imul
loopne
cmp
jbe
push
sub
jge
sub
out
mov
mov
scas
ret
mov
call
mov
mov
jne
fsub
inc
inc
movs
cld
pop
dec
inc
std
repnz
inc
pop
jae
xor
jae
push
jecxz
fild
rcr
fst
les
adc
retf
add
dec
test
adc
or
fwait
mov
adc
fwait
sub
dec
push
mov
js
(bad)
data16
cmp
and
rcl
sub
push
out
inc
aas
mov
mov
jle
pop
mov
pop
mov
ret
mov
call
jmp
outs
mov
idiv
or
add
mov
cwde
adc
xor
mov
push
and
pop
jnp
fwait
pop
push
sar
jp
fsubr
out
and
int3
mov
test
adc
push
nop
or
imul
imul
cmp
jle
lods
in
sub
int3
xchg
es
jecxz
fdivr
icebp
and
ds
jno
or
inc
jp
adc
ss
es
repz
xchg
pop
mov
das
imul
rcr
sbb
out
scas
push
loopne
push
and
jno
mov
repnz
dec
pop
leave
lods
mul
popf
movs
mov
punpckhwd
jg
bswap
and
push
lahf
or
daa
jno
mov
cmps
out
icebp
int3
cwde
mov
cmc
aaa
cmp
cmp
sti
out
daa
jmp
mov
xor
sub
retf
mov
jmp
sbb
xchg
fisttp
push
mov
shr
xor
inc
ja
in
push
mov
aam
push
mul
or
mov
sub
sbb
mov
in
push
ror
dec
pop
adc
lea
xchg
ret
mov
pop
or
retf
test
push
sbb
mov
dec
xor
sbb
(bad)
(bad)
xor
popf
mov
mov
ds
xlat
pop
ins
imul
add
outs
dec
mov
xor
icebp
mov
mov
das
aaa
pop
or
fild
js
not
mov
jnp
int3
inc
cs
push
fistp
or
mov
push
lods
mov
jo
jmp
inc
mov
mov
retf
sbb
sbb
mov
jge
dec
stos
mov
pop
sbb
jo
je
or
ret
pushf
ja
or
push
lahf
loope
sbb
fdiv
cmp
cli
pop
sbb
das
sbb
fcom
ret
repnz
cmp
(bad)
cld
test
add
in
mov
adc
sub
push
mov
mov
push
clc
pop
loop
fist
sub
popf
div
xor
mov
pop
jns
in
xchg
mov
mov
sahf
sub
jmp
imul
out
pop
dec
ins
ds
jp
mov
std
mov
lea
loopne
mov
nop
dec
popf
mov
adc
(bad)
out
adc
xchg
add
and
nop
retf
test
push
jo
sbb
out
mov
int3
sub
gs
(bad)
in
out
mov
fidivr
enter
and
in
mov
retf
test
mov
or
push
sub
sbb
jle
cli
pop
out
jo
dec
pop
mov
test
in
mov
or
(bad)
lods
pusha
cmp
loope
popa
lods
std
mov
xor
(bad)
js
and
jg
push
lods
push
test
test
enter
xlat
xor
sub
repnz
inc
jo
and
ds
ror
xor
jo
inc
ror
and
and
pop
push
fwait
dec
aad
jmp
fist
lock
test
push
xor
in
mov
outs
fadd
outs
xchg
iret
popf
add
mov
fimul
or
repnz
jo
fsub
ror
movs
retf
hlt
sbb
(bad)
(bad)
retf
(bad)
clc
not
mov
mov
dec
inc
test
fadd
dec
cmp
inc
mov
ficom
push
ffreep
mov
popa
fsubr
xor
ja
lods
jne
loop
(bad)
push
or
dec
hlt
stos
adc
scas
popa
xchg
jmp
test
inc
mov
mov
sbb
jb
stos
mul
fst
pusha
push
cmps
rcl
ins
inc
in
cwde
and
mov
je
sbb
mov
dec
(bad)
and
jmp
lahf
cmp
mov
les
in
sub
retf
lea
pusha
adc
in
cmps
cdq
inc
sbb
loopne
clc
retf
jg
pop
add
lea
test
in
je
stos
outs
nop
add
or
add
mov
adc
jp
mov
cmps
xchg
cmp
mov
sub
cmp
pop
icebp
add
and
mov
jae
or
sub
mov
adc
mov
mov
call
aad
jp
pop
and
mov
and
test
movs
ret
call
icebp
stc
pop
push
and
add
repz
test
outs
out
or
sub
add
out
cmp
dec
xchg
mov
sub
or
push
inc
movs
pop
shl
ins
cmp
ins
cmps
out
add
pushf
xchg
sbb
test
test
push
fstp
sbb
leave
cli
mov
sbb
inc
cmps
fsubrp
push
inc
scas
es
cmp
aaa
scas
mov
dec
mov
dec
push
pop
js
lods
cmps
mov
xor
inc
mov
sbb
mov
xchg
ficomp
xor
push
hlt
fdivr
fild
and
movs
push
mov
repz
mov
stc
pop
icebp
mov
aaa
push
pop
(bad)
cld
out
sbb
out
out
and
data16
adc
xor
out
add
dec
sub
int3
ins
sub
(bad)
cmp
xchg
push
add
retf
lds
mov
mov
jp
xchg
sub
or
pop
inc
cmps
mov
mov
popf
jg
sbb
mov
xchg
jbe
push
ins
jg
je
xor
div
cmc
push
cmps
inc
call
fsub
shl
popa
sub
add
ficomp
enter
pop
sub
sbb
pop
out
mov
fstp
lds
(bad)
adc
(bad)
mov
mov
dec
lods
int3
and
mov
mov
adc
jbe
lock
je
popa
cld
dec
jae
popf
in
ins
out
xchg
add
jecxz
mov
pop
jmp
dec
mov
pop
sub
cmp
aaa
fisttp
js
adc
ret
test
pop
pushf
ffreep
xchg
sub
test
and
lahf
mov
push
xchg
mov
push
das
mov
gs
mov
stos
cmp
pop
push
pushf
retf
imul
xor
xchg
adc
test
and
mov
js
sbb
loope
xchg
call
outs
cmps
xor
inc
popa
cli
xor
push
push
arpl
inc
in
repnz
pop
outs
mov
(bad)
mov
xchg
loop
das
cmp
enter
sbb
jno
scas
je
jnp
(bad)
sti
adc
icebp
fcomp
popf
and
inc
inc
jnp
movs
gs
retf
cmp
fistp
mov
inc
pop
push
xor
repz
jbe
mov
pop
clc
xor
add
add
rcl
add
xchg
test
lea
out
mov
pop
loop
imul
jp
sbb
mov
dec
cmps
mov
adc
cld
mov
repnz
ret
mov
dec
aaa
cmc
ret
and
inc
inc
mov
add
pop
push
and
stos
push
jmp
out
mov
lds
shl
inc
ss
jge
dec
and
std
pop
mov
lds
loopne
sub
push
(bad)
lock
cmp
push
xor
xchg
push
adc
mov
jge
push
jg
mov
arpl
adc
cld
rol
pop
xor
fnsave
jb
(bad)
hlt
mov
sbb
sti
ja
ds
sbb
inc
xchg
pxor
pop
sbb
jmp
hlt
xor
xchg
xor
mov
push
or
loop
mov
loop
mov
sub
xchg
pop
iret
or
jl
and
rcl
out
mov
aaa
icebp
sub
sub
and
ja
or
aam
jmp
int
xor
les
imul
cmp
jb
or
ds
jmp
repnz
sahf
mov
sub
test
loopne
fdivr
cwde
or
leave
mov
mov
jl
into
pop
shr
cmp
sti
inc
push
rcr
popa
stc
mov
adc
sbb
pop
popf
loopne
pop
push
pop
pop
xchg
pop
arpl
aaa
or
rcl
or
or
mov
jg
pop
mov
adc
mov
mov
rcr
and
daa
inc
mov
sub
ror
adc
or
xchg
jo
aad
adc
push
sbb
mov
test
leave
je
imul
cmps
fucomp
jg
sub
(bad)
mov
jne
lods
(bad)
mov
aaa
dec
mov
or
mov
push
sub
dec
test
or
les
leave
cmp
adc
inc
daa
dec
mov
inc
inc
int
sub
rol
xchg
sub
mov
outs
stos
lods
out
div
data16
(bad)
sub
bound
and
xor
push
mov
loopne
or
bound
push
cmp
dec
aad
xchg
dec
dec
sbb
test
fstp
shl
call
push
jl
sbb
idiv
pop
dec
scas
sub
repz
(bad)
mov
test
xchg
push
ds
shl
mov
(bad)
je
les
int
jmp
outs
test
adc
mov
rcr
retf
pop
cs
jo
mov
out
cmp
push
into
cmp
cmp
jns
inc
(bad)
jmp
add
sub
push
das
add
mov
pop
and
push
add
sbb
js
mov
xor
cmp
push
sbb
ja
add
in
imul
add
or
cmps
mov
sbb
sahf
pop
push
mov
sbb
mov
sub
ror
aad
outs
mov
retf
movs
fst
je
retf
sbb
jmp
adc
pop
aaa
fcmovb
arpl
inc
hlt
sbb
jb
bound
sbb
jle
mov
inc
pop
mov
sar
jmp
push
test
mov
aas
cwde
or
ss
cmp
stos
(bad)
lock
je
enter
(bad)
xor
add
in
mov
sub
dec
and
mov
fsubp
(bad)
fs
xchg
xor
clc
enter
sub
sbb
gs
fild
gs
in
dec
or
mov
add
loope
jae
adc
xchg
xchg
in
or
or
pop
sbb
mov
push
sbb
mov
addr16
movs
push
sub
mov
test
push
pop
push
cmp
daa
mov
jbe
aaa
dec
cdq
jne
imul
mov
call
or
xchg
jne
in
stc
xchg
retf
inc
sbb
cmps
popa
ret
push
xor
mov
mov
dec
ss
pop
xlat
(bad)
mov
adc
jl
repz
test
es
xchg
mov
add
pushf
movs
xor
inc
pop
sub
dec
dec
stos
sbb
add
jp
lea
loope
imul
fsub
aam
gs
dec
repz
mov
icebp
mov
push
mov
add
cli
inc
pop
pop
sub
add
sub
cmp
mov
mov
mov
pop
push
adc
rcl
dec
mov
mov
ins
sahf
mov
xchg
fdivr
cmp
push
es
dec
stos
xchg
cwde
add
sub
inc
sub
mov
lahf
icebp
mov
gs
dec
ins
jecxz
xlat
dec
js
lea
mov
sti
(bad)
jge
and
adc
mov
xchg
push
sbb
jmp
adc
test
push
clc
fdiv
xlat
mov
add
or
leave
addr16
stos
into
shl
mov
dec
outs
lahf
sbb
jae
cld
test
jmp
push
call
mov
bound
aaa
bound
inc
or
pop
jp
enter
adc
dec
retf
mov
xchg
dec
inc
xchg
fldcw
push
push
fistp
mov
mov
pop
data16
or
sub
not
xor
sub
adc
pop
mov
dec
mov
and
xor
cmp
mov
int3
js
fs
ins
adc
sub
dec
jns
and
cli
push
ret
pop
sar
popf
pop
push
push
movs
clc
lds
clc
xchg
mov
push
add
xchg
mov
push
or
xchg
and
xchg
push
in
dec
jecxz
mov
mov
xchg
mov
xchg
pop
lds
dec
and
nop
adc
push
pop
jnp
imul
dec
lods
cmp
clc
adc
add
ins
and
and
fdivp
std
sbb
xor
hlt
cmps
mov
sub
dec
(bad)
mov
movs
sub
push
jmp
mov
int3
ds
xor
add
sar
loope
lds
scas
mov
mov
jb
js
inc
(bad)
call
stc
mov
mov
enter
movs
in
cmp
xor
xchg
cwde
scas
xor
pop
mov
xchg
or
xor
sub
ins
icebp
or
pusha
sub
and
sbb
inc
mov
push
dec
xchg
lods
adc
test
mov
add
sub
aad
smsw
not
pop
mov
cli
or
dec
adc
add
jp
push
and
mov
cmc
test
repz
(bad)
movs
sti
in
std
push
shl
mov
cmp
pusha
mov
xor
jg
ret
adc
call
mov
fisub
adc
call
pusha
sbb
pop
lahf
mov
inc
jb
dec
cmps
icebp
nop
and
pop
jmp
xlat
in
inc
adc
in
test
je
mov
sub
mov
(bad)
pop
xor
mov
xor
scas
cmp
lock
inc
daa
dec
retf
repnz
inc
inc
out
call
sti
fmul
mov
cmp
(bad)
inc
xchg
pushw
mov
(bad)
mov
pop
push
pop
aas
pop
mov
adc
out
jo
fstp
mov
int
pop
adc
cs
das
dec
mov
xchg
sahf
jnp
jb
dec
in
mov
mov
(bad)
mov
jle
cmp
(bad)
das
leave
or
dec
data16
mov
push
bound
mov
push
loop
fstp
dec
cs
pop
(bad)
lock
es
sti
mov
push
add
mov
xchg
jns
add
leave
repz
pop
out
jl
pop
jmp
push
push
mov
daa
add
mov
sbb
jae
and
sub
call
ja
aad
out
cdq
(bad)
cmc
shl
dec
in
xchg
test
adc
xchg
push
pop
or
nop
dec
cmp
les
add
in
pop
lahf
fidivr
addr16
out
jae
mov
sahf
(bad)
cmps
inc
add
and
inc
sub
test
xchg
inc
push
outs
ret
(bad)
adc
in
add
push
mov
cmps
aaa
mov
imul
out
inc
ficomp
rcr
jecxz
or
call
out
xor
inc
dec
mov
ror
adc
mov
xor
jnp
ret
ret
mov
xor
data16
add
aad
jg
add
loope
xor
sti
repnz
inc
rcl
icebp
mov
cmp
sbb
loope
std
cdq
mov
xchg
jae
inc
ins
add
xchg
mov
(bad)
and
iret
imul
xchg
retf
and
movs
push
pop
pusha
movs
ja
movs
sbb
lahf
push
(bad)
fs
jne
addr16
sub
xor
bound
popf
scas
fadd
inc
lds
rol
jne
enter
sbb
daa
add
sbb
xchg
mov
dec
lds
push
fisub
pop
ret
test
retf
inc
fidivr
xor
bound
adc
rcr
bound
push
mov
push
out
push
loop
mov
xor
add
push
sub
out
and
fiadd
movs
mov
retf
imul
push
adc
pop
cs
jnp
xchg
pop
push
mov
sub
fwait
cwde
mov
adc
pop
adc
nop
dec
inc
jge
mov
cmp
fisttp
mov
xchg
mov
xchg
(bad)
bound
mov
xor
retf
adc
xlat
and
mov
fld
mov
les
(bad)
pop
iret
xchg
cmp
fst
jg
test
push
arpl
cmp
aam
aam
add
adc
nop
xchg
repz
xchg
in
call
test
sub
sahf
ror
inc
pop
or
cwde
int
jae
repnz
mov
cmp
retf
mov
out
retf
rcr
sub
mov
shl
jle
push
repz
ins
cdq
call
pushf
lea
sub
not
cmps
pop
test
pop
int3
push
scas
retf
cli
or
aam
into
sbb
push
xor
pop
push
inc
adc
push
cmps
and
inc
aad
repz
or
out
nop
outs
imul
jb
pop
repnz
gs
xchg
inc
or
push
das
in
xor
cmp
sbb
sub
rcr
pusha
(bad)
in
add
dec
aas
ins
cwde
mov
push
jns
mov
push
daa
inc
repnz
push
icebp
mov
mov
inc
fmul
iret
dec
cmp
enter
cwde
sub
push
cmp
sbb
call
push
lods
xchg
aas
pop
das
retf
idiv
retf
push
test
shl
xor
mov
nop
out
xchg
and
sub
pop
out
stos
dec
add
sub
or
add
push
clc
adc
out
call
pop
js
mov
ins
cs
mov
cmp
pop
cld
xchg
ficom
ss
ficom
jno
jg
lea
or
xchg
enter
dec
mov
nop
push
in
jno
(bad)
and
pop
in
sahf
mov
fs
add
sbb
outs
pop
ss
hlt
mov
or
imul
push
call
xor
push
push
sbb
fs
into
sbb
ins
adc
movs
pop
sbb
push
mov
and
jecxz
fst
mov
into
adc
mov
hlt
iret
lods
and
add
pop
cdq
(bad)
fbstp
push
fs
(bad)
fmul
push
(bad)
fdiv
icebp
pop
jns
fs
(bad)
sub
div
fcomi
jbe
btc
sub
pop
jle
iret
int
jge
loop
clc
mov
push
and
jecxz
sbb
shl
call
into
mov
pop
aad
mov
lds
fwait
sbb
arpl
mov
jo
ins
jno
inc
inc
cmp
xchg
inc
cmps
fsubr
(bad)
clc
mov
adc
icebp
jno
jns
mov
jge
cwde
daa
js
sbb
mov
xchg
shr
xchg
push
add
push
getsec
aaa
ffreep
add
loope
fdivp
lahf
sbb
out
xchg
jp
fwait
repz
xor
and
push
xor
xchg
cmp
mov
jno
inc
popf
jp
adc
fild
jnp
retf
cmps
js
jmp
pop
inc
test
jb
mov
mov
mov
icebp
cli
and
dec
push
pop
jo
in
(bad)
mov
mov
iret
mov
popa
xchg
int
mov
xchg
and
mov
or
push
test
sub
sbb
mov
daa
ror
xor
sar
ds
mov
shl
xchg
in
or
movs
out
out
jnp
cwde
lods
pop
jmp
mov
push
xchg
aad
fcomp
in
div
add
cmc
add
les
dec
rol
sub
cmps
mov
ret
pushf
bound
ja
inc
add
xor
mov
test
xchg
cwde
xchg
or
jnp
mov
test
mov
mov
jge
jmp
mov
adc
jmp
xor
add
dec
xchg
shl
jo
or
and
and
loopne
xchg
cmps
xor
and
jmp
mov
(bad)
dec
cld
test
movs
mov
xchg
add
fdiv
stc
xor
sar
les
lahf
stos
xchg
pushf
dec
jnp
enter
idiv
out
sbb
cmp
imul
fld
mov
xor
shr
or
xchg
sub
pop
lea
les
call
jle
push
movs
jns
push
pop
shl
stos
inc
inc
push
pop
xchg
xchg
dec
pop
into
fistp
hlt
mov
and
cli
jl
lods
sub
add
pushf
push
jmp
into
cdq
add
sub
dec
fist
inc
ficom
ins
test
jae
jns
inc
test
(bad)
ins
ins
xchg
in
call
adc
les
retf
push
std
sub
(bad)
stos
adc
mov
enter
nop
aas
(bad)
sbb
das
repnz
test
sub
mov
push
push
(bad)
mov
out
mov
scas
dec
bound
pushf
mov
dec
mov
lods
jmp
icebp
mov
clc
stc
push
cli
sub
arpl
or
scas
xchg
je
scas
xor
dec
mov
out
xchg
and
or
sbb
inc
shr
inc
fdiv
nop
pop
popf
mov
mov
jno
xchg
daa
sub
idiv
stos
pop
push
jle
idiv
in
rcl
(bad)
inc
mov
sub
fidiv
mov
pop
xchg
xchg
stc
ja
sti
and
dec
cdq
add
ss
lods
mov
stos
sub
sub
cdq
and
dec
call
fadd
jbe
movs
and
lds
jl
cmc
mov
xor
pop
lods
scas
dec
cmp
dec
pusha
out
aam
idiv
icebp
(bad)
pop
inc
movs
js
jle
xor
jle
jge
stos
ret
mov
inc
jg
fucomip
pushf
ins
ret
cdq
sbb
or
cwde
and
and
mov
daa
cmp
icebp
sub
pop
cdq
mov
fs
dec
sub
arpl
pop
sti
push
ins
or
ror
cmp
push
jle
mov
ds
repnz
icebp
mov
mov
jae
sbb
dec
xlat
repnz
mov
sti
cdq
push
int3
adc
adc
imul
xor
dec
jl
pop
xor
shl
jbe
jp
out
cwde
clc
mov
fxch
push
dec
push
mov
in
xchg
pop
pop
dec
cmp
xor
inc
pop
push
push
xor
mov
in
into
mov
ds
addr16
mov
test
stc
stc
daa
cwde
pop
movs
sub
jmp
rcl
mov
xlat
into
and
out
ret
(bad)
inc
dec
mov
call
mov
pusha
aad
repz
inc
inc
(bad)
inc
add
jae
fwait
dec
xor
or
push
push
lea
or
sbb
mov
movs
data16
or
ret
sub
dec
push
fwait
sar
ins
in
call
jo
xlat
retf
cmp
std
aam
sbb
pop
hlt
inc
dec
add
shl
rcl
jmp
pop
cmp
leave
mov
xchg
ins
enter
sub
pop
jge
cmp
mov
(bad)
jnp
dec
lea
pop
(bad)
aam
stos
and
stos
sub
test
stos
dec
pop
lea
sub
fnstsw
stos
lahf
or
pop
aaa
std
mov
adc
stc
sbb
les
add
pusha
adc
mov
mov
mov
add
adc
lahf
mov
(bad)
cmc
jmp
jmp
xlat
and
sbb
stc
mov
sub
mov
and
adc
lds
push
pushf
sbb
arpl
fmul
adc
jg
add
adc
sub
and
push
mov
add
ins
xor
and
sub
sub
aad
dec
lea
enter
add
enter
call
mov
icebp
mov
sbb
add
rol
mov
(bad)
call
push
push
inc
sub
daa
adc
jle
aaa
idiv
push
loopne
mov
mov
test
pop
inc
inc
shr
jle
sub
mov
ins
add
aad
test
or
sbb
jp
enter
loope
lea
lock
mov
xchg
xchg
dec
sti
pushf
fidivr
icebp
call
sub
jmp
xchg
std
stc
(bad)
fsubr
sub
mov
push
js
out
cmp
cld
les
mov
repz
dec
jns
scas
mov
mov
fnsave
cli
cmp
jecxz
icebp
pop
repz
mov
inc
push
and
mov
dec
sti
and
jne
pop
mov
jmp
aaa
stc
inc
nop
jge
sbb
sbb
retf
aad
mov
pop
pop
cli
(bad)
xor
(bad)
fldenv
xchg
jnp
cmp
push
mov
mov
cmps
xchg
les
in
jmp
(bad)
jmp
add
ret
mov
mov
mov
sbb
leave
pop
jmp
imul
into
ins
rcr
bound
shl
dec
daa
push
(bad)
sub
pop
or
jmp
ins
ins
and
dec
push
push
sti
icebp
pop
fwait
push
mov
inc
pop
or
outs
mov
push
lods
out
mov
and
add
mov
test
xchg
jecxz
inc
ror
idiv
test
add
push
adc
sub
add
je
xor
and
mov
cmp
xor
(bad)
cmp
mov
js
bound
leave
and
hlt
jb
inc
sub
sub
dec
movs
in
test
fisttp
out
pop
mov
mul
or
xor
add
cwde
ror
xchg
sbb
(bad)
xor
stos
inc
push
inc
(bad)
push
clc
aad
int3
mov
sub
stos
out
xor
repnz
and
fst
jne
aad
cmp
fcomp
add
xchg
and
push
cli
xchg
sub
mov
fiadd
fstp
popf
sbb
pop
imul
sbb
sbb
aas
pushf
clc
pop
imul
leave
mov
das
push
out
push
inc
rcl
and
inc
(bad)
push
jle
push
push
xor
push
push
pop
int3
(bad)
inc
pop
xor
mov
adc
or
(bad)
push
(bad)
cmc
pop
test
cmps
jp
push
adc
add
pop
mov
and
cmp
retf
sub
jge
add
xlat
ret
imul
push
popf
and
mov
fdiv
xchg
sub
(bad)
add
xor
dec
jp
retf
jle
pop
and
cmp
pusha
es
cmc
add
jmp
cdq
jno
pop
jmp
fdiv
jno
or
jp
ret
pop
jl
out
test
jecxz
(bad)
dec
arpl
enter
adc
and
(bad)
outs
sbb
mov
mov
mov
jbe
mov
and
ja
jno
mov
mov
imul
(bad)
lea
push
adc
add
out
idiv
rcl
(bad)
push
test
leave
adc
cmp
in
and
jne
sub
add
push
(bad)
mov
test
adc
mov
ds
mov
xchg
pushf
daa
mov
push
push
dec
jno
inc
mov
and
xchg
(bad)
std
cwde
rol
jmp
int3
sub
lahf
xchg
lods
sbb
xor
bound
dec
xchg
fisub
in
push
cmp
mov
addr16
pop
mov
aam
push
jmp
mov
adc
push
jne
clc
stos
sar
call
shl
addr16
cmp
leave
out
repz
and
nop
stos
adc
in
popa
test
pop
add
and
cmps
dec
and
jg
rol
mov
cmp
xchg
out
stc
mov
int3
pop
test
xor
ds
xlat
sub
push
xchg
(bad)
ins
jno
jg
shl
je
pop
adc
push
sti
(bad)
mov
pop
mov
adc
pop
cli
inc
adc
push
cmp
inc
inc
sbb
cmc
test
popa
(bad)
cmc
fild
sbb
hlt
scas
out
aaa
imul
adc
call
and
repnz
cmp
or
pop
test
dec
pop
mov
xchg
jmp
cli
popa
imul
sub
lods
je
sbb
movs
mov
push
adc
pop
js
outs
call
fcom
int
aaa
dec
int3
pushf
mov
cwde
out
dec
les
sbb
loopne
pop
std
outs
xchg
jmp
sti
adc
pop
int3
pop
popa
adc
pop
mov
add
sbb
cmp
xor
loope
int
aas
mov
or
cs
jno
adc
jl
movs
fiadd
aam
popa
push
push
inc
push
inc
sbb
mov
xor
xor
sbb
js
fcom
add
cmp
sbb
loop
lds
xor
in
add
sub
int
dec
movs
out
aas
pop
xlat
dec
pop
test
xlat
inc
and
and
arpl
mov
adc
outs
mov
pop
movs
mov
jmp
cmp
mov
or
movs
out
pop
out
int
pop
rcl
mov
inc
fadd
pusha
sbb
imul
(bad)
jge
out
sbb
mov
and
in
xor
pop
pusha
clc
dec
sbb
sbb
mov
sub
jnp
cmp
retf
mov
js
mov
test
jnp
call
mov
adc
mov
aas
ror
or
pop
iret
cli
fdecstp
xor
jno
iret
adc
call
nop
aaa
js
gs
in
ret
xchg
and
push
pop
jle
in
push
ret
cmp
popa
lods
dec
mov
sub
adc
xchg
out
jbe
sbb
out
test
imul
pop
push
or
jnp
js
mov
lods
out
bound
xchg
adc
pop
sub
addr16
icebp
(bad)
xchg
mov
daa
jge
xchg
and
push
call
in
sbb
out
(bad)
lock
fdivr
and
bound
adc
mov
mov
jbe
dec
xchg
cmp
cmps
or
mov
xchg
xcrypt-cfb
cmps
loope
imul
sbb
jp
shl
fmul
sub
mov
inc
cld
mov
fbstp
fwait
and
arpl
pushf
lea
(bad)
mov
int3
dec
push
pop
mov
pop
xor
or
lea
inc
js
mov
mov
cdq
xlat
sti
dec
push
jb
add
pop
cmp
xchg
js
pop
xchg
(bad)
push
adc
scas
ins
inc
mov
adc
adc
fisttp
outs
pusha
cmps
jno
out
sti
cmp
xor
push
adc
sar
ja
cld
mov
popf
fsub
mov
(bad)
push
xor
jbe
sub
xchg
popa
(bad)
mov
xchg
je
push
and
vhaddps
mov
jae
sbb
sub
lahf
xor
pop
xlat
arpl
inc
push
inc
xchg
dec
aam
out
sub
out
call
or
jmp
or
ja
idiv
pop
and
fidivr
js
into
test
lds
outs
repz
inc
add
or
std
sti
mov
mov
cmp
cmp
xor
xor
cmps
cmp
dec
cdq
push
xchg
cmp
into
push
push
mov
(bad)
(bad)
push
pop
mov
mov
and
cmc
fldenv
lock
push
pop
xor
adc
lahf
scas
bound
sbb
and
fdivp
arpl
xor
mov
mov
xor
xchg
movs
stos
lahf
add
lods
ret
add
jle
(bad)
fisubr
retf
cld
scas
xor
loop
push
mov
mov
call
sub
xor
das
and
and
and
push
sub
xchg
adc
hlt
and
mov
lods
mov
std
nop
(bad)
jmp
mov
mov
mov
cwde
movs
adc
ret
mov
mov
ins
xchg
scas
push
xchg
or
lods
imul
sub
shr
sbb
cwde
(bad)
sub
fild
loopne
mov
fisub
cli
and
and
xor
push
jne
xchg
mov
xchg
mov
adc
jne
sub
mov
cs
xor
stos
test
xchg
pop
test
and
push
xchg
(bad)
sub
dec
shr
imul
pop
in
mov
les
and
movs
ret
lea
cmp
ds
retf
daa
ret
or
add
dec
dec
mov
sahf
mov
xor
fnstcw
pop
outs
(bad)
mov
stos
(bad)
mov
(bad)
stos
or
xchg
xor
adc
fwait
cmp
and
sbb
ja
adc
mov
repnz
xchg
pop
cmp
xchg
or
add
cdq
fisttp
push
mov
aas
mov
xchg
fwait
rcr
test
cli
enter
cmp
jge
lds
es
imul
inc
lds
add
jb
cmp
lds
fiadd
mov
add
push
shr
sub
lea
jns
and
popf
cli
and
into
and
dec
int3
push
cwde
es
mov
mov
mov
dec
ret
fwait
call
retf
into
js
or
lods
pop
push
les
hlt
xchg
(bad)
out
daa
inc
jno
sti
adc
imul
jae
sti
jle
imul
or
dec
popa
gs
pop
push
sbb
xchg
test
lock
xchg
std
(bad)
frstor
jecxz
test
xchg
inc
pop
mov
or
mov
sub
fmul
fidiv
bound
sbb
mov
icebp
mov
fstp
pop
(bad)
dec
xor
add
leave
test
clc
xchg
ror
push
lock
pop
repz
xchg
mov
into
lock
mov
pop
das
stc
hlt
mov
push
enter
iret
mov
mov
jp
lods
xchg
xor
sbb
scas
jmp
or
and
inc
inc
ds
into
or
cwde
sbb
scas
push
ja
xchg
cli
lods
mov
and
test
daa
test
jb
adc
hlt
dec
xor
adc
sbb
outs
sbb
jnp
lods
pop
stos
xor
imul
jl
movs
outs
cwde
aas
stos
pop
mov
cmp
arpl
(bad)
sbb
xchg
hlt
retf
in
outs
into
mov
push
das
movs
sub
pop
nop
add
xchg
push
jle
push
push
xchg
jl
or
add
pop
sub
int
inc
xor
pop
dec
sub
add
mov
xor
fs
push
pop
call
push
jle
jbe
shr
mov
(bad)
leave
or
sahf
fmul
push
sub
jmp
rol
adc
fs
aaa
aas
adc
out
sbb
ja
cmps
or
fnstenv
mov
pop
mov
std
dec
cld
inc
cli
pop
dec
and
push
xor
pop
js
cmp
add
hlt
dec
jmp
pusha
xchg
mov
ja
jecxz
popa
xlat
inc
adc
daa
jo
xchg
imul
jmp
inc
pop
xor
sub
push
pop
fist
or
aas
imul
jg
test
pusha
cwde
inc
gs
test
pop
add
rcl
fucomip
repnz
sub
retf
cmp
hlt
out
mov
inc
inc
enter
pop
mov
jg
mov
mov
pop
fcmovu
ss
adc
jecxz
and
push
inc
das
aam
xor
mov
daa
pop
lods
sub
in
inc
jecxz
jbe
test
adc
sbb
stos
mov
mov
data16
out
or
aaa
aaa
addr16
or
xor
stos
js
dec
addr16
pop
ret
pop
cmps
push
cmp
pop
push
push
stc
outs
outs
sbb
es
mov
dec
es
in
enter
je
dec
push
jle
jne
test
ds
enter
ja
lea
push
cli
test
test
and
outs
sbb
xchg
ret
das
mov
leave
jg
int3
repz
dec
nop
(bad)
jae
push
add
cmp
adc
push
std
and
adc
jmp
cmp
dec
jne
aas
add
mov
shl
fisubr
sub
ja
cmc
mov
mov
mov
sbb
xor
xor
sub
or
nop
cmc
mov
jp
xchg
out
lea
inc
dec
cmp
adc
dec
cwde
in
arpl
pop
ret
adc
cwde
jl
inc
daa
jbe
and
sub
fdiv
mov
shr
ins
pop
inc
push
mov
xchg
std
xor
hlt
out
pop
adc
jne
in
clc
adc
nop
adc
sub
addr16
es
or
scas
sbb
stos
int
add
pop
xor
cmps
mov
sahf
out
lods
loopne
push
push
pop
loop
and
jnp
mov
ds
(bad)
addr16
test
add
mov
cmps
add
dec
add
outs
inc
cmp
jmp
sub
out
push
sahf
pusha
dec
mov
jbe
xor
sub
cwde
movs
retf
ret
mov
sahf
or
inc
rcr
imul
sub
(bad)
jle
push
sbb
push
jmp
pop
aam
jb
std
cld
sub
and
sbb
mov
inc
cmp
js
fistp
jnp
and
rcl
add
outs
repz
and
mov
stc
pop
aaa
sub
cmp
pop
mov
out
xchg
push
mov
add
push
aaa
mov
adc
cmp
cmc
cmps
daa
pop
lods
dec
call
mov
je
xchg
push
sbb
add
ins
test
jmp
or
lock
push
cmps
repz
aaa
cmc
in
sbb
rol
les
sahf
sbb
jmp
adc
cmps
push
mov
and
cmp
pop
adc
jle
xchg
leave
and
scas
(bad)
mov
aaa
les
jbe
sub
xchg
dec
push
mov
xor
cs
jne
aad
ret
sbb
xchg
mov
mov
xor
xchg
test
xor
xor
xlat
cmp
dec
sbb
xor
movhlps
mov
push
and
(bad)
mov
cmp
ss
call
shl
into
mov
ret
sbb
mov
xor
jle
rcl
fs
pop
pop
or
mov
dec
sub
std
(bad)
leave
fisttp
hlt
clc
or
fild
dec
(bad)
jns
pop
or
fwait
xchg
pop
hlt
ss
dec
adc
sub
mov
adc
inc
mov
inc
neg
pop
push
cmps
mov
xchg
pop
aas
je
xchg
dec
out
aam
pop
sub
jp
je
sub
fistp
cmp
add
les
fisttp
cs
ds
jg
push
jo
mov
(bad)
push
sbb
inc
mov
pop
mov
cwde
inc
nop
es
lea
xchg
ror
ins
push
and
call
cmp
test
adc
xor
in
shrd
out
jg
rcl
push
pusha
pop
mov
fmul
xchg
mov
pushf
jb
sbb
dec
inc
retf
inc
dec
fld
pop
xchg
imul
call
stos
cmp
in
or
mov
dec
popa
stc
mov
mov
sar
or
adc
repz
pop
pop
adc
push
add
inc
cli
or
ret
out
dec
mov
nop
repnz
mov
push
loop
mov
sar
das
(bad)
mov
adc
sub
sbb
push
pop
adc
pushf
(bad)
in
jae
rcl
int
movs
scas
loopne
pushf
jp
stos
mov
dec
mov
dec
push
push
outs
lahf
shl
inc
mov
ss
shl
mov
test
movs
ror
dec
imul
push
xchg
sbb
cmp
stos
cmp
(bad)
out
sbb
jb
push
ds
adc
mov
inc
sub
je
xchg
loope
hlt
xor
ja
push
pop
or
push
xchg
mov
imul
jo
cdq
or
pop
inc
movs
mul
mov
and
jecxz
dec
(bad)
and
in
push
mov
adc
mov
fadd
clc
jl
xor
mov
pop
imul
test
je
adc
push
and
mov
adc
mov
(bad)
loope
jo
loop
mov
mov
cmp
add
cdq
dec
sbb
mov
xor
xchg
sahf
mov
out
movs
cmc
cld
or
xchg
jbe
repnz
int
cmp
stos
cmp
push
push
lea
adc
(bad)
daa
mov
lds
push
sub
daa
(bad)
push
(bad)
xlat
(bad)
adc
jl
sub
inc
or
add
push
pop
ficom
ds
mov
out
into
fisubr
arpl
and
push
mov
mov
jecxz
fwait
jo
cmp
jnp
stos
inc
test
mov
into
xlat
jns
inc
xchg
cs
cmps
sbb
xchg
scas
pop
push
and
sub
leave
fidiv
out
fldenv
pop
les
repz
mov
pop
out
xchg
cmp
push
gs
(bad)
outs
sti
inc
shl
push
pusha
cs
stos
mov
xor
inc
(bad)
cmps
and
pop
ret
scas
cld
adc
jl
daa
out
jge
outs
mov
push
aas
aam
xchg
mov
xchg
mov
or
lods
jecxz
jecxz
lods
jb
adc
retf
arpl
and
jp
cdq
lods
out
rcr
xor
in
mov
mov
pop
pop
daa
dec
push
mov
sbb
clc
imul
xchg
jmp
sbb
jmp
les
gs
mov
inc
fwait
cld
outs
mov
xor
out
movs
mov
out
cwde
scas
nop
lods
jmp
in
loope
in
lods
(bad)
jecxz
xor
in
jae
xchg
fnstenv
aas
adc
mov
push
sbb
inc
mov
loope
or
(bad)
loope
cs
dec
gs
push
mov
fcomip
push
fs
jmp
loopne
imul
(bad)
loop
mov
mov
ins
movs
xchg
inc
adc
mov
mov
or
lods
add
cld
daa
adc
aam
ins
clc
retf
addr16
inc
sub
sub
mov
pop
mov
mov
xchg
jmp
call
or
(bad)
mov
test
(bad)
sub
xchg
stc
lock
and
stos
push
aad
hlt
shl
inc
cs
xor
leave
or
ror
cmp
xor
out
adc
fwait
xchg
shl
push
mov
mov
sbb
out
ja
sahf
add
sar
cmps
push
sub
dec
mov
sub
ret
cs
push
mov
inc
dec
aas
clc
mov
movs
mov
daa
mov
xchg
xor
(bad)
mov
pop
jo
sub
adc
jmp
inc
gs
sbb
and
jnp
adc
sub
mov
add
loope
cmps
xchg
(bad)
hlt
and
leave
scas
fiadd
mov
and
mov
movs
cmc
push
loope
jns
test
jnp
cmp
xor
sub
in
nop
cmp
int
sbb
xchg
mov
rol
push
std
loop
fisttp
mov
jp
pop
xchg
pop
xchg
dec
sbb
(bad)
pop
fbstp
or
sub
cmp
push
ret
xor
fwait
scas
mov
jl
pop
inc
mov
loopne
xor
push
or
xchg
mov
mov
ficom
mov
push
mov
in
push
cmp
es
pop
mov
mov
mov
fidivr
pop
retf
call
and
jne
and
popf
xchg
cld
xor
leave
mov
and
fadd
data16
repz
and
mov
sbb
out
popf
fild
sti
loope
mov
jno
pop
mov
mov
imul
mov
push
not
add
inc
pop
and
ins
out
dec
mov
add
vpunpcklqdq
inc
push
and
sbb
aam
test
fdivr
in
cmp
lock
mov
fild
cwde
rol
cmp
enter
inc
(bad)
pop
and
out
popf
(bad)
push
shr
sub
les
ret
dec
xchg
gs
gs
mov
inc
and
pop
nop
icebp
clc
outs
xlat
jmp
cmps
mov
xor
in
jno
sub
jg
in
pushf
int3
js
sbb
cmps
aaa
sbb
dec
or
leave
(bad)
es
xchg
add
loope
ret
dec
dec
int3
push
or
fnsave
mov
sar
out
dec
popa
ds
(bad)
retf
sar
test
and
or
jle
lods
mov
pushf
xchg
dec
mov
xchg
fiadd
in
daa
xchg
mov
mov
fisttp
out
scas
cmps
jle
mov
push
ins
fwait
inc
lods
movs
inc
bound
inc
jle
cmp
jb
jmp
mov
mov
mov
inc
out
mov
xchg
pusha
add
xchg
rcl
sub
fwait
xlat
inc
sbb
jge
loopne
or
stos
imul
mov
cmpps
cmp
imul
mov
out
xor
scas
xlat
pop
pop
jle
icebp
add
(bad)
aad
xor
sub
arpl
jno
out
cmp
mov
call
loope
mov
mov
call
enter
mov
add
inc
fisttp
cwde
adc
cmps
xchg
push
fimul
lock
push
push
cwde
test
sbb
sub
push
aaa
(bad)
dec
dec
cmp
adc
or
jp
fwait
sbb
popf
inc
out
movs
mov
xchg
cmp
cmp
dec
fcom
int
sub
ss
xchg
or
test
sahf
fldcw
fyl2x
ins
shr
and
fs
jne
test
push
daa
or
xchg
pop
aaa
mov
int3
(bad)
mov
icebp
cwde
aas
test
test
test
mov
sbb
adc
sti
sti
mov
mov
aad
jns
scas
mov
jbe
mov
in
sub
mov
addr16
icebp
inc
ja
ret
push
data16
xchg
adc
test
das
xor
mov
ror
jnp
rcr
sub
adc
pop
(bad)
jp
add
stos
fwait
test
xchg
and
lods
pop
push
cmp
sub
js
dec
jne
call
ins
rep
retf
dec
out
sbb
inc
fsubr
ins
push
jmp
(bad)
jle
jnp
(bad)
test
push
pop
cmps
mov
(bad)
sub
and
pusha
leave
add
hlt
fstp
mov
jl
ret
inc
mov
dec
in
add
sar
cs
and
pop
shl
aad
adc
xor
inc
lods
fsub
loopne
pop
mov
push
xchg
xchg
add
push
dec
ror
hlt
inc
mov
in
loopne
in
xor
jnp
add
fld
mul
xchg
xor
aam
mov
jne
cmp
xchg
sahf
cli
inc
fdivrp
and
fsubr
scas
sar
add
mov
jb
cmps
shr
add
outs
xor
ja
mov
jno
adc
pop
xor
mov
scas
in
ss
sbb
xor
loop
std
iret
test
stos
in
into
shld
mov
mov
icebp
lahf
cmp
mov
push
pusha
shl
shl
fcomp
sbb
add
(bad)
cmp
(bad)
pop
xlat
jo
stos
fidiv
dec
xchg
pop
sub
shr
sysenter
jle
hlt
mov
mov
aaa
xor
sub
sub
rcr
cmp
cwde
mov
jnp
iret
popa
cmc
ja
popa
jne
call
call
add
shr
sbb
sbb
adc
push
es
adc
sbb
sub
dec
cs
call
mov
daa
jae
xlat
je
fs
lods
adc
cmp
add
xor
lea
nop
adc
movs
lods
mov
int3
and
nop
fisttp
aaa
xchg
jle
mov
pop
mov
mov
inc
pop
or
(bad)
dec
cs
pop
fscale
repnz
fabs
sbb
aam
pop
gs
pop
out
or
fdiv
push
mov
cmp
ins
xchg
pusha
mov
adc
jb
dec
les
stos
leave
stos
lahf
loopne
ins
cs
pop
mov
or
nop
jmp
(bad)
mov
ins
test
mov
push
and
xchg
mov
sti
call
sbb
mov
pop
hlt
add
jl
cmp
imul
repnz
mov
mov
sar
xchg
mov
and
cmp
sub
movs
cmps
cwde
pop
add
mov
mov
hlt
imul
and
dec
pop
mov
shl
mov
div
xor
xchg
and
sbb
jno
mov
cmps
mov
mov
ja
xor
push
imul
jae
sub
shl
faddp
inc
and
sahf
sbb
xchg
jb
push
mov
jl
push
dec
xchg
mov
addr16
mov
or
pop
cmp
add
adc
mov
call
arpl
daa
mov
test
xor
addr16
pop
cs
call
inc
call
jmp
xchg
icebp
pop
out
or
adc
xor
mov
dec
test
clc
inc
xor
cmps
lock
mov
ret
mov
ror
pop
fistp
icebp
add
nop
fist
or
lahf
dec
sahf
xchg
mov
das
mov
leave
test
pop
hlt
gs
inc
dec
xor
es
mov
mov
jmp
mov
add
push
fldcw
jle
call
push
xchg
push
lods
call
ret
aam
loopne
ror
cmps
pop
dec
(bad)
fsubr
bound
dec
fnsave
xor
gs
sbb
pop
pop
sahf
and
and
and
(bad)
cmp
pusha
lock
call
sbb
movs
cmp
ss
pushf
pop
cld
enter
and
scas
idiv
stos
es
cmp
mov
push
mov
push
in
mov
xlat
or
cmp
aad
lods
mov
mov
mov
inc
call
jbe
adc
cmc
js
xchg
cmp
fnstsw
jmp
cmc
fsubrp
mov
mov
add
sbb
scas
(bad)
mov
inc
sahf
or
sub
and
pop
xor
movs
js
cmc
(bad)
push
dec
mov
add
dec
jp
xor
pushf
popf
inc
jge
retf
mov
and
jge
(bad)
pushf
aaa
int
shl
cmp
adc
push
test
mov
mov
add
pop
lea
mov
ss
adc
sub
cli
fwait
loopne
shr
jnp
test
inc
fmul
or
or
ror
jbe
pushf
jo
sbb
retf
push
nop
out
div
xchg
xor
pop
inc
and
and
pop
movs
int3
out
test
adc
dec
lea
in
dec
xchg
cwde
ds
mov
add
jbe
pop
inc
pop
xchg
inc
into
push
shr
hlt
cmp
cvtdq2ps
push
mov
jnp
aaa
jb
retf
movs
xor
rcl
lods
mov
(bad)
test
cmp
mov
jae
cmc
les
mov
jg
push
xchg
jno
mov
push
dec
sub
ficom
scas
mov
pushf
push
ror
xchg
adc
mov
(bad)
push
fld
inc
dec
pop
cwde
call
mov
add
adc
ror
daa
ret
psrlw
mov
pop
jle
pop
ins
cwde
mov
and
call
mov
push
das
xchg
data16
test
sbb
iret
cmp
sub
jmp
and
arpl
mov
(bad)
mov
adc
test
hlt
jmp
add
or
inc
xchg
mov
xchg
mul
xchg
mov
(bad)
out
fdivr
inc
sar
call
push
aas
aad
out
and
mov
cmc
stos
adc
pop
pushf
(bad)
push
cmp
iret
mov
inc
call
mov
js
leave
pop
adc
pop
cbw
lea
add
mov
mov
xlat
out
int3
shrd
push
ficomp
repz
(bad)
pop
cmp
sbb
loope
cld
pop
push
test
dec
aad
mov
out
xchg
imul
sub
(bad)
xor
mov
iret
das
mov
popa
in
imul
fstp
mov
adc
cwde
lahf
ss
pop
pop
mov
mov
pop
push
inc
and
mov
xchg
add
pusha
in
add
mov
in
mov
lock
push
js
fstp
lods
in
mov
xchg
mov
sti
aam
add
les
mov
adc
cmp
xchg
push
inc
sub
aaa
lds
jnp
cmp
pusha
leave
cli
pop
mov
repz
cmp
(bad)
cld
sub
scas
div
inc
xchg
es
pop
hlt
xor
inc
ja
jmp
xchg
xchg
xchg
sbb
or
pop
test
lds
dec
mov
pop
bound
cmc
loope
ret
inc
cli
jmp
lsl
inc
clc
cmp
pop
adc
loop
push
mov
push
push
sbb
fdiv
push
pop
xchg
loop
sub
dec
push
les
cmp
repnz
and
sub
aaa
pusha
and
inc
xchg
loope
movs
pop
cmp
shl
in
shr
add
push
sbb
mov
mov
repnz
mov
inc
jge
scas
and
loop
push
jg
sub
push
xchg
mov
xchg
jl
inc
nop
(bad)
and
cmp
test
jnp
stc
mov
pop
xchg
cmp
xchg
sub
mov
repz
pop
repnz
cs
lahf
or
and
cmp
or
jns
ins
ficomp
stos
adc
jecxz
fisttp
and
lods
and
ror
adc
pop
jmp
ja
add
mov
pop
stos
pop
push
clc
xchg
inc
into
inc
mov
sub
sub
add
daa
cld
inc
hlt
add
sbb
xor
jae
add
test
sub
lock
gs
mov
enter
data16
adc
cmp
enter
gs
jge
cvttps2pi
mov
les
xor
pusha
loope
jbe
xchg
dec
jecxz
sbb
xchg
fs
int
jl
mov
or
daa
lea
mov
dec
xor
cmp
jmp
push
adc
jl
dec
xchg
ins
ss
sar
fwait
imul
dec
xor
rcl
imul
mov
popa
inc
(bad)
cdq
(bad)
int
sub
outs
push
pop
movlps
inc
inc
push
sbb
movs
lahf
aas
xchg
pop
xor
icebp
sbb
sub
jp
jp
(bad)
xchg
sti
stos
xchg
mov
jmp
int3
push
sbb
mov
inc
fs
jb
ins
sbb
mov
(bad)
pop
mov
mov
adc
int3
pop
ror
leave
add
test
jno
dec
ret
push
in
(bad)
std
stos
pop
into
jnp
ret
inc
or
mov
out
cmp
inc
in
dec
or
push
dec
sub
pop
mov
popa
mov
ins
fild
sahf
and
push
jmp
lods
inc
push
xor
xchg
mov
pop
pop
xor
sub
addr16
push
sbb
out
xlat
ss
ins
das
and
jmp
jns
cmp
jae
aaa
push
test
xor
sub
stc
push
ret
add
sub
pop
xchg
sub
stc
pop
mov
rol
call
lds
sti
fstp
jmp
ret
mov
aad
cmp
shl
imul
popf
add
pop
adc
jmp
stc
push
mov
jnp
and
ja
aas
or
push
stos
ret
mov
cs
add
push
push
mov
call
inc
call
pop
push
mov
and
ret
push
cmp
mov
adc
das
mov
jae
loopne
push
sub
iret
mov
lock
pop
fild
jmp
shr
(bad)
push
clc
gs
jp
mov
dec
mov
xchg
jmp
push
pop
lahf
not
ret
sets
lock
es
jae
pop
push
sbb
loopne
inc
stc
and
dec
mov
ss
addr16
push
inc
cld
xchg
push
add
or
cmps
inc
int
xlat
pop
clc
stos
pop
mov
scas
iret
push
lods
(bad)
add
pop
add
jl
test
xor
lock
jne
les
aad
scas
(bad)
jbe
fs
int3
or
js
sub
aad
mov
out
mov
repnz
jg
neg
jg
ret
mov
ja
lods
mov
test
daa
mov
arpl
cmp
in
xchg
pop
lods
ret
sar
cmp
(bad)
ret
lea
inc
div
jecxz
int3
sar
cld
and
mov
test
sub
or
int3
push
test
aam
retf
mov
cli
test
sti
std
hlt
mov
adc
push
jne
fwait
jge
jb
push
shr
lea
out
sub
xor
jecxz
pop
cli
jmp
jns
cmps
fistp
shl
push
stos
retf
cdq
jo
and
mov
inc
fsub
push
dec
sbb
and
das
stos
xchg
outs
test
jmp
jg
dec
add
clc
cmps
xchg
es
in
lods
cli
push
fidivr
call
sti
dec
scas
jbe
cli
and
inc
sbb
(bad)
and
xchg
into
pop
ss
xchg
and
cmps
ret
(bad)
scas
jecxz
cmp
push
js
or
ss
pop
add
xor
arpl
iret
adc
xor
dec
inc
movs
mov
imul
mov
out
sub
sbb
or
aam
lds
add
(bad)
test
mov
call
lahf
push
xor
leave
and
sbb
sbb
mov
shl
stos
dec
push
add
shl
out
stos
gs
and
addr16
out
mov
js
std
push
cmp
sbb
dec
retf
add
loopne
xchg
rdpmc
fld
pop
ret
sub
mov
(bad)
pop
xor
cmp
popf
add
fcmovnu
lds
(bad)
mov
xor
jns
add
call
lods
pusha
jno
cld
jmp
(bad)
iret
cmp
jne
push
pop
add
clc
jl
popa
sbb
sbb
xchg
ret
mov
sub
in
fbstp
scas
push
loopne
xchg
imul
ins
lods
cmps
fistp
xchg
sub
sub
cmp
add
cdq
inc
jecxz
fsubrp
pop
cwde
mov
inc
push
lahf
dec
dec
adc
icebp
push
mov
and
cmps
cmps
cdq
movs
out
mov
mov
jne
sbb
push
cmp
call
xor
jg
mov
mov
pop
xchg
pcmpgtw
jmp
scas
sbb
pop
in
enter
add
cmp
add
loop
in
aaa
mov
inc
inc
sti
xchg
jns
pop
jge
lahf
pushf
std
mov
xor
sub
jb
xchg
push
rol
leave
ds
(bad)
in
xchg
mov
xor
and
out
sbb
imul
mov
or
ret
clc
shr
ss
mov
call
mov
dec
or
lds
sbb
ins
mov
(bad)
pop
cmps
mov
ficomp
cwde
or
adc
jecxz
adc
call
cmps
mov
ds
add
bound
cmp
ins
sub
add
div
and
adc
and
rcl
das
jle
les
fidivr
outs
sub
ficom
xor
cmp
in
mov
add
xchg
mov
dec
pop
lock
adc
ds
sub
(bad)
ror
and
pop
push
ret
ins
fucomp
cdq
pop
inc
adc
out
aaa
rcl
fild
(bad)
sub
xor
push
and
out
push
sub
test
lods
push
enter
pop
add
push
popf
and
fwait
and
call
iret
add
mov
inc
adc
test
cld
mov
xor
and
loope
gs
outs
xor
push
out
out
ins
pushf
ror
and
lea
jmp
lds
test
out
imul
cmp
xchg
sub
aam
sub
xor
aad
addr16
inc
adc
jecxz
sbb
mov
inc
xchg
mov
mov
xor
leave
or
inc
mov
fidiv
(bad)
and
retf
cld
mov
sbb
aad
mov
push
ror
sbb
shl
cli
in
push
retf
cmp
add
jns
in
cdq
xchg
popf
jmp
sar
mov
and
lock
ja
sub
or
pop
push
xchg
fs
mov
jle
pop
pop
xor
retf
lock
retf
mov
ss
push
daa
aam
cmp
jmp
sbb
mov
(bad)
jmp
cs
mov
sar
xchg
adc
and
mov
mov
pop
mov
jns
sub
test
das
jg
mov
mov
in
mov
dec
jne
xchg
inc
loope
mov
(bad)
or
mov
pop
and
mov
or
out
addr16
call
arpl
pop
imul
dec
sbb
sar
jg
xchg
and
aaa
inc
out
std
sub
inc
mov
adc
dec
lock
inc
push
test
pop
jae
lods
jmp
cmp
retf
jmp
repnz
stos
aaa
retf
jb
jecxz
rcr
mov
loopne
in
fs
mov
jle
idiv
inc
dec
idiv
pop
inc
dec
inc
ds
mov
out
mov
xor
dec
and
add
pminsw
jne
pop
call
cmp
outs
push
jp
and
sti
jp
mov
mov
sbb
push
mov
lods
jns
jo
jbe
das
jmp
cmps
cdq
repnz
pop
pop
sbb
mov
fsubr
and
dec
add
popf
clc
mov
jnp
push
inc
xor
pop
jb
int3
mov
pop
outs
into
cmp
int3
pop
xor
inc
aad
jmp
or
adc
cld
js
sbb
sub
ja
or
dec
xchg
adc
cmp
inc
jne
call
ins
adc
xor
int
inc
dec
scas
mov
adc
add
adc
movs
cmp
pop
es
in
push
out
or
add
cmps
jmp
xchg
sbb
fdivrp
jp
push
cwde
ret
mov
bound
stos
xlat
jecxz
xor
fimul
adc
pop
mov
sub
sub
adc
test
xor
add
jp
in
addr16
cdq
sahf
pusha
shl
sti
outs
call
mov
sbb
xchg
mov
dec
jp
popa
dec
adc
shl
inc
mov
lds
dec
outs
es
xchg
inc
add
int
inc
dec
sub
sub
test
addr16
sbb
pop
cmp
cld
jne
sbb
imul
(bad)
jle
push
sub
ds
into
jle
cmp
pop
jne
xor
adc
fcomp
xchg
aas
test
jl
pop
xor
fisubr
mov
or
jge
mov
inc
aaa
cmp
mov
cmp
cs
inc
sbb
scas
lahf
in
xchg
lds
xor
dec
rcr
pop
xor
mov
add
mov
ins
and
or
call
lea
dec
repz
or
add
test
stos
rcr
push
dec
test
pusha
imul
cli
or
test
fbstp
fild
jae
(bad)
xchg
add
add
or
mov
outs
jl
mov
icebp
cmps
stos
push
popa
xor
and
cld
(bad)
jp
adc
(bad)
fsubr
add
pop
fmul
scas
xor
inc
out
or
adc
lock
push
mov
inc
dec
stc
jge
setne
add
popf
inc
inc
xchg
shr
push
mov
sub
ds
cmps
loope
pop
push
add
(bad)
out
mov
not
xor
sbb
xor
in
sar
inc
fdiv
mov
pushf
sub
mov
lea
mov
ds
add
add
mov
test
dec
ja
popa
(bad)
fild
or
xor
xor
mov
push
cwde
sar
dec
das
or
mov
cmps
les
stos
add
js
pop
das
pop
xchg
mov
jge
xchg
xchg
adc
mov
pop
jno
iret
sbb
ins
cmp
cmp
sub
sbb
cwde
mov
push
imul
lods
aam
dec
ja
cmp
aad
gs
iret
hlt
sub
push
aad
rcr
adc
jae
fcomip
popf
jnp
fs
(bad)
fistp
push
ret
out
ror
xor
(bad)
push
push
dec
leave
add
scas
ins
push
dec
mov
int3
sub
inc
xor
dec
test
shl
fimul
or
mov
push
fcmovbe
int
lods
push
xor
sbb
jbe
jne
inc
aaa
test
fldenv
mov
pop
mov
lods
jnp
aam
test
outs
mov
rcr
pushf
adc
call
mov
add
push
call
jmp
test
mov
es
xchg
mov
int
std
mov
jbe
push
xchg
jp
xchg
pop
mov
mov
ret
mov
(bad)
push
ins
clc
inc
bound
lea
ret
loope
(bad)
mov
call
cmps
or
xchg
jnp
adc
mov
mov
cwde
fild
shr
push
out
scas
ret
jb
inc
js
fidiv
jg
add
inc
lods
outs
imul
hlt
push
loope
pop
lahf
mov
repnz
fst
test
cmp
dec
(bad)
ja
mov
and
mov
or
sub
rol
rcr
jae
mov
movs
nop
je
inc
aas
jg
shl
inc
js
aam
jmp
mov
or
mov
push
or
inc
sbb
in
xchg
cwde
scas
cmp
lahf
dec
stc
pusha
inc
mov
pop
push
sahf
test
aad
scas
inc
frstor
fist
mov
(bad)
xor
push
or
pusha
clc
fldcw
and
imul
mov
in
pop
daa
cwde
mov
enter
std
outs
es
jmp
aas
pop
push
jbe
lds
or
out
rcr
pop
mov
mov
mov
mov
xchg
fbld
and
push
call
and
das
stos
mov
repz
retf
add
call
jge
mov
stos
cmp
loop
xchg
adc
add
pop
push
aam
bound
and
add
cli
xchg
mov
clc
lods
push
xor
inc
jmp
fadd
push
mov
scas
arpl
jle
jmp
add
mov
push
sbb
cdq
add
in
nop
sub
xchg
mov
mov
jmp
cli
cmc
cs
cli
pop
and
inc
mov
sar
sbb
rcr
mov
sti
add
call
fwait
jo
jae
stos
into
popa
add
lods
xchg
je
sub
pop
push
ss
mov
dec
push
ror
mov
(bad)
mov
stos
jae
pop
gs
loope
cdq
daa
pop
vunpcklps
ret
mov
retf
fldenv
mov
and
or
sbb
les
or
callw
pop
popa
mov
sub
or
dec
jns
retf
lods
out
inc
popf
jo
sbb
cmc
test
push
mov
and
lds
ds
xor
inc
repz
and
xor
cmp
call
xchg
jno
shl
mov
pushf
cmp
les
ds
(bad)
enter
jmp
cmp
adc
dec
popf
mov
adc
jae
xor
or
xchg
gs
sbb
pop
cmp
fs
inc
fst
fcom
loopne
cmp
das
sub
push
clc
add
ror
sahf
push
sbb
jmp
push
jmp
jne
daa
xor
call
jmp
imul
ins
jnp
cli
sbb
fs
add
and
or
fs
push
icebp
sub
and
cld
mov
inc
nop
mov
add
push
test
mov
mov
adc
pop
xchg
pop
lods
mov
sti
mov
outs
inc
inc
jbe
not
fadd
xor
ret
inc
mov
sar
in
jns
pop
jb
push
(bad)
sbb
enter
nop
(bad)
fimul
outs
sbb
(bad)
xchg
mov
push
lds
or
lock
out
pop
sbb
xchg
scas
dec
mov
stc
mov
test
fidiv
jge
fiadd
jno
sbb
or
mov
cmp
xchg
mov
popa
mov
daa
add
jl
adc
push
adc
ret
fimul
in
jnp
jl
cmps
cmp
push
mov
mov
inc
into
loope
sub
rol
aaa
in
push
lea
pop
js
adc
pop
inc
in
jp
mov
dec
push
test
pop
jmp
fistp
mov
adc
jns
xchg
mov
cmps
pop
cmps
clc
rcl
call
push
enter
xor
push
sahf
push
fisub
fnstsw
scas
push
pop
jp
mov
dec
rcl
jg
nop
mov
pop
mov
rol
cmp
cmp
jecxz
call
mov
repnz
add
push
addr16
stos
fbld
loope
adc
jg
retf
mov
mov
jl
clc
ja
loop
ror
sahf
jae
std
xor
push
mov
cmps
cmp
inc
mov
xor
std
ret
adc
mov
or
movs
xor
or
push
call
movs
sbb
cmp
movs
push
mov
mov
mov
xor
lfs
(bad)
push
cmp
cs
add
adc
jo
movs
test
push
xor
inc
lds
dec
data16
jae
(bad)
fcom
adc
test
xlat
stc
aam
mov
cwde
sbb
adc
ja
jg
int3
hlt
out
push
loop
test
fld
pop
mov
xchg
into
(bad)
fnsave
retf
jne
xlat
shl
cmps
pop
js
push
popa
jl
neg
popf
push
cmp
out
jo
inc
popa
outs
pop
fcmovu
push
stos
xchg
data16
test
aam
cli
push
pushf
cmp
mov
div
es
pop
inc
push
aaa
adc
cmp
cli
call
fistp
xchg
adc
daa
out
and
es
mov
(bad)
call
fdivp
push
sbb
fwait
mov
aam
shl
movs
das
outs
xor
pop
add
arpl
mov
cmc
sbb
mov
in
jp
add
lea
cwde
mov
ret
jmp
dec
xor
sub
inc
cmp
mov
xor
sbb
jne
fldcw
bound
imul
inc
jp
fsubr
int3
cmp
xchg
out
pop
pop
std
dec
jno
mov
xor
mov
movs
aaa
jle
test
push
in
repnz
jp
xchg
cli
shl
cmp
popa
outs
dec
stos
push
mov
in
rep
aas
out
mov
cmp
inc
sub
or
jle
jns
hlt
jnp
pop
mov
inc
sub
or
fndisi(8087
shl
aad
bound
movs
xor
seta
xchg
sbb
cmc
push
sub
xchg
stos
mov
pop
fucomi
pop
scas
scas
mov
cmp
scas
jle
ret
lods
div
sbb
push
jne
jbe
aam
pop
rol
out
mov
xchg
and
xchg
out
jo
add
cmp
daa
in
pusha
xchg
gs
scas
leave
dec
push
mov
inc
iret
iret
pusha
cmp
aas
xchg
fs
push
jmp
xor
dec
nop
sbb
(bad)
cmp
retf
push
retf
rcr
pop
cmp
dec
pop
test
sbb
cmp
mov
inc
jbe
clc
sahf
daa
push
and
popa
xchg
ss
push
(bad)
out
stc
aad
iret
adc
ins
(bad)
or
add
jg
data16
cmp
mov
adc
mov
popa
es
int3
fst
outs
fistp
jl
lea
push
dec
xchg
jae
mov
iret
(bad)
xchg
scas
or
call
xor
sub
add
inc
xchg
call
add
or
scas
imul
xor
adc
sub
test
or
rcl
(bad)
out
shl
pushf
fs
cmp
sub
sbb
cli
fcom
pop
push
out
jg
int3
iret
data16
dec
and
cwde
fstp
fs
shl
icebp
mov
int
sub
stc
lods
or
out
clc
outs
into
adc
jne
push
jbe
or
ret
scas
jne
imul
xchg
in
shl
dec
inc
mov
shr
std
idiv
dec
ror
sti
(bad)
loope
nop
pop
cdq
repz
xchg
sti
movs
sub
pop
mov
push
xchg
imul
sbb
lds
add
inc
jb
mov
repz
sbb
sub
rol
jle
out
sar
cmp
dec
rcr
push
jb
mov
cdq
lods
inc
icebp
loopne
jne
pop
adc
jmp
or
dec
adc
test
loope
adc
or
xchg
clc
push
xchg
je
js
sub
lea
push
and
cmc
scas
into
shl
add
and
mov
js
cdq
mov
dec
or
xlat
inc
in
xor
sahf
xor
jl
arpl
std
pop
stc
dec
xchg
popf
xor
mov
cdq
aad
popf
std
imul
adc
push
add
(bad)
fnsave
xchg
cs
or
inc
adc
jmp
test
adc
sub
jb
jno
sub
pop
loop
lods
fimul
sbb
neg
push
pop
mov
add
fsubr
retf
xchg
inc
clc
int3
popa
and
xchg
and
or
data16
inc
mov
in
cmc
pop
ds
add
lea
es
rol
add
cmp
movs
pop
or
cmp
pop
xchg
pop
lods
js
mov
call
rcl
cdq
cmps
sub
xchg
inc
enter
adc
push
test
mov
pop
pop
imul
das
add
out
out
push
xor
stos
push
test
mov
add
inc
dec
scas
pop
outs
cmc
inc
jb
std
gs
sahf
inc
xchg
fdivp
cmp
cmp
adc
test
test
pop
sbb
mov
cmc
js
mov
inc
aas
iret
xor
loope
(bad)
gs
out
test
sbb
dec
addr16
fs
push
mov
mov
jbe
dec
fiadd
cmp
scas
xchg
mov
icebp
push
jne
fwait
or
dec
pop
or
inc
jns
or
jl
or
stos
out
imul
mov
jmp
sbb
mov
out
xchg
leave
pop
test
inc
pinsrw
aas
push
add
push
jo
xor
and
push
movs
retf
add
ins
push
loopne
(bad)
jmp
dec
cmp
cli
pop
dec
pushf
xchg
out
xchg
mov
jg
int
mov
cmp
iret
jmp
or
sub
rcr
arpl
mov
aas
(bad)
mov
pop
cwde
loop
inc
(bad)
cmps
sub
out
repnz
mov
arpl
sbb
xchg
push
jb
jae
adc
pusha
(bad)
outs
xlat
sbb
fwait
inc
jnp
inc
pop
enter
xchg
lods
test
mov
sub
adc
or
mov
mov
cdq
and
jns
arpl
scas
fbld
ja
pop
or
jecxz
mov
fmul
inc
repz
inc
iret
jl
inc
(bad)
mov
inc
push
inc
push
add
jbe
movs
cmp
add
stos
pop
mov
outs
push
ds
(bad)
movs
sti
mov
cmp
std
test
mov
adc
data16
dec
fimul
mov
movs
push
jbe
jecxz
or
in
adc
inc
dec
addr16
int
lahf
xchg
mov
sub
mov
cmc
ficomp
call
leave
xor
mov
stos
fndisi(8087
test
mov
mov
xchg
and
sbb
idiv
loop
xchg
push
mov
sbb
add
ret
stos
cdq
test
pop
xchg
scas
test
(bad)
fnstenv
or
std
popa
imul
popf
cwde
dec
into
push
dec
push
dec
or
push
pop
sub
shr
ja
cmp
inc
in
pcmpeqw
pop
cmp
sbb
ret
jbe
aaa
cmps
test
sbb
pusha
dec
mov
mov
push
div
aam
fs
or
or
in
xlat
mov
xor
mov
aaa
stos
inc
jl
into
es
push
inc
fmul
jns
adc
mov
retf
out
mov
sub
xlat
rcl
imul
aam
jo
mov
shl
test
ss
pop
adc
lods
cmps
dec
mov
add
leave
mov
(bad)
jmp
lock
or
mov
mov
es
or
and
cli
retf
cmp
cdq
mov
or
inc
into
(bad)
fidivr
sbb
loopne
fadd
std
popa
mov
lahf
mov
jp
jge
jge
mov
xor
out
ds
dec
ror
jmp
cmp
inc
add
dec
inc
sti
add
adc
ret
push
pop
jmp
cdq
pextrw
add
in
jecxz
mov
dec
test
or
sbb
aas
inc
add
movs
das
les
mov
dec
add
mov
dec
and
sbb
and
cmp
in
mov
xchg
into
pusha
mov
stos
out
sub
mov
pop
clc
cwde
xchg
mov
jg
lods
jmp
popa
xchg
push
xor
inc
sub
lds
cld
inc
jg
lods
gs
xchg
mov
push
mov
(bad)
jnp
pop
sub
push
ficomp
imul
push
lea
imul
aaa
out
mov
mov
lods
in
inc
jmp
mov
xchg
ds
cmp
dec
outs
call
sbb
dec
test
movs
xchg
shr
xlat
in
mov
pop
ret
ss
xchg
test
pushf
enter
cld
sub
test
lods
in
mov
ja
mov
cwde
dec
daa
loopne
cli
out
lods
sbb
cwde
push
cmps
ret
push
pop
shl
jbe
sub
xor
pop
xor
cs
pop
adc
je
ja
or
stos
int
cmp
ja
push
stos
in
in
jmp
xchg
imul
cmps
inc
retf
pop
add
dec
xchg
push
stos
xchg
test
xor
adc
push
push
lods
test
test
add
jne
shl
dec
addr16
push
inc
dec
test
dec
or
cli
inc
lods
cmp
sar
mov
adc
dec
and
jmp
in
mov
xor
mov
xchg
mov
outs
xchg
xor
push
pop
ror
cs
lahf
fisubr
sub
or
mov
cmps
and
adc
cmps
cs
ins
stc
jg
jns
xchg
add
jmp
push
cmp
pop
dec
push
inc
rol
fld
push
fst
mov
cmc
sub
rcr
cdq
cmps
ds
xor
pop
or
pop
sub
call
pop
pop
or
add
mov
or
cmps
jecxz
pop
shl
jmp
sub
xor
iret
fldl2t
mul
dec
clc
mov
or
jmp
mov
push
dec
lahf
or
cmc
add
push
mov
jne
pop
or
xchg
mov
jns
mov
outs
movs
out
pushf
mov
sbb
pop
call
or
dec
neg
cmps
cmps
xchg
add
mov
xchg
out
enter
dec
mov
and
loop
mul
xor
loop
add
(bad)
or
nop
loope
in
pop
ds
and
pop
fadd
addr16
mov
cmp
mov
pusha
in
inc
mov
jb
inc
jbe
fisttp
paddusb
mov
in
test
sahf
fwait
mov
clc
adc
popf
das
dec
pop
out
test
jns
jb
pop
daa
dec
cmps
and
mov
sbb
sub
fdivr
ss
retf
ds
je
mov
xchg
cmp
xchg
jp
jge
fdivr
push
scas
push
mov
and
stos
adc
cdq
in
and
shl
mov
push
cmps
les
jbe
xor
mov
mov
fcom
and
jle
xchg
adc
das
or
xchg
js
mov
mov
cmp
in
ror
sahf
and
pop
enter
dec
jmp
movs
cmc
mov
xor
imul
adc
adc
int3
push
aam
retf
and
(bad)
fsubr
lods
pop
or
push
sbb
call
dec
jmp
mov
movs
pop
scas
add
push
cwde
retf
mov
xchg
pop
movs
lods
pop
push
(bad)
shl
fldcw
jle
mov
mov
inc
int
rol
js
out
outs
loop
or
aam
nop
mov
(bad)
leave
hlt
push
jo
(bad)
fsubr
pop
mov
int
xchg
push
out
mov
outs
and
jg
mov
call
test
jno
leave
dec
imul
pop
dec
mov
push
push
je
jb
test
and
mov
push
add
jg
push
fmul
cmp
jae
fisubr
cmps
out
mov
mov
and
fnstsw
ds
push
inc
pop
mov
adc
adc
stos
leave
(bad)
push
sbb
mov
sar
xor
add
cmp
mov
lock
cmp
in
mov
dec
jns
stos
mul
mov
mov
cmp
scas
out
cld
(bad)
ja
cmp
dec
xchg
mov
fninit
or
mov
retf
je
in
adc
dec
mov
pop
pop
ins
or
pop
ds
test
movs
icebp
mov
(bad)
mov
or
sahf
cmps
jnp
push
mov
xchg
repnz
movs
(bad)
cld
fistp
lock
mov
call
int
sub
add
dec
dec
inc
icebp
adc
(bad)
inc
in
ds
sahf
mov
(bad)
jns
cmp
jp
or
mov
retf
sar
pop
jmp
jg
inc
add
pop
jnp
cmp
outs
outs
mov
aad
cwde
das
jg
dec
sahf
xor
mov
mov
ins
imul
xor
in
mov
jae
xchg
pop
cli
imul
popa
in
dec
ins
adc
sub
lea
add
sub
js
dec
jns
push
dec
enter
push
sbb
add
push
dec
lds
jbe
movs
iret
jbe
sysenter
loopne
lds
adc
aad
push
call
jnp
iret
adc
iret
data16
push
(bad)
mov
cwde
ret
cmp
fsub
inc
popa
xor
idiv
jno
mov
aad
mov
(bad)
movs
mov
or
sbb
push
inc
xchg
sbb
ret
add
jns
adc
stos
popf
cld
xor
test
loopne
imul
and
imul
xchg
test
sbb
shr
or
dec
jmp
fs
pusha
fnstenv
xchg
scas
inc
xor
xor
mov
and
neg
dec
dec
push
aas
sar
push
cmp
fdivr
mov
loope
out
ds
fisubr
pop
add
in
scas
jg
les
add
adc
stc
lea
sub
loope
jnp
push
and
push
bnd
out
(bad)
ret
sbb
xchg
mov
stos
mov
or
and
arpl
push
push
add
push
xchg
jmp
adc
sar
xchg
icebp
push
fs
push
test
(bad)
sbb
(bad)
adc
neg
stos
fdivr
mov
int3
push
shl
cld
cmp
xchg
outs
test
sub
(bad)
imul
data16
sbb
dec
mov
repnz
mov
idiv
das
popf
shl
mov
outs
xchg
jmp
arpl
pop
nop
pop
inc
nop
js
cmps
cs
push
or
xchg
and
mov
jne
lock
mov
cli
mov
pop
xlat
adc
imul
mov
mov
push
mov
push
lock
adc
(bad)
cmp
ret
mov
cmc
cli
push
mov
jae
pop
movs
fisttp
push
sbb
sbb
test
mov
push
lea
nop
lea
into
je
xchg
push
adc
rol
mov
mov
bound
or
popf
mov
fs
sub
fidivr
test
in
pusha
mov
and
stc
mov
and
sbb
fs
adc
xor
mov
jle
cmp
mov
jne
cmp
dec
jl
mov
jns
jg
ret
mov
fwait
pop
test
mul
and
mov
jbe
inc
jl
(bad)
mov
sbb
sbb
std
fs
dec
das
call
add
test
imul
lods
enter
add
push
adc
pop
push
out
imul
lods
push
mov
ja
add
sbb
neg
jle
sub
outs
dec
push
mov
test
or
int
xor
push
aam
retf
jle
xor
mov
mov
sbb
sbb
cs
enter
sub
add
dec
add
add
inc
push
jg
cmp
xor
not
cmps
pop
sbb
popa
ret
mov
push
lea
add
mov
loope
sbb
clc
inc
loop
pop
xchg
xchg
aad
mov
ins
cmps
inc
xchg
cdq
popa
xor
pop
shl
(bad)
push
push
jle
sub
xchg
rol
pop
faddp
aam
stos
mov
int3
iret
jne
dec
push
das
out
adc
in
in
mov
push
jmp
pop
pop
jnp
or
scas
add
hlt
sar
scas
inc
int3
ficomp
pop
push
sar
pop
push
test
push
ss
outs
mov
jae
add
and
outs
(bad)
test
nop
mov
lock
add
inc
das
pop
test
pop
cmp
or
xchg
xchg
xchg
aas
xor
jecxz
cmc
jbe
popa
inc
enter
int3
inc
pop
mov
inc
xor
sub
idiv
or
push
fs
sub
xchg
(bad)
stc
lock
clc
adc
mov
arpl
scas
cmp
(bad)
loopne
jo
std
xchg
xor
dec
adc
jg
mov
xor
cmp
jb
mov
test
xchg
mov
jle
clc
lock
test
sar
cmp
jb
cmps
in
jae
lds
mov
xchg
sub
loope
rcl
cmp
add
fstp
xor
pop
ins
ss
loopne
mov
mov
mov
mul
movs
inc
cld
xchg
in
repnz
mov
inc
fisubr
sbb
retf
ret
jmp
sub
sti
inc
mov
frstor
or
mov
xchg
pop
(bad)
sub
push
test
pop
stos
dec
mov
mov
xor
test
mov
scas
push
xchg
(bad)
jno
xor
out
in
shl
fwait
sbb
xor
inc
push
out
imul
dec
addr16
nop
lds
fldcw
sahf
aam
out
retf
sbb
pop
jns
xor
cld
test
das
mov
cs
imul
mov
inc
call
adc
cli
lahf
xor
dec
add
cs
cmp
xchg
mov
cmc
push
pop
and
cmp
jb
call
popa
sahf
test
add
enter
retf
loopne
not
aad
out
sub
movd
push
mov
arpl
ja
sar
sub
call
mov
and
lods
icebp
scas
or
jmp
aam
pop
mov
xchg
inc
mov
mov
jg
dec
add
aaa
test
jl
leave
ins
in
fisttp
cdq
mov
jecxz
add
in
jo
lods
aaa
sbb
mov
inc
cmp
and
jge
outs
out
ret
lods
pop
xor
xor
or
lods
add
out
call
add
inc
test
jmp
cmps
pop
pusha
fiadd
call
mov
pop
adc
stc
call
add
lock
mov
cli
(bad)
dec
lods
cmp
pop
pop
mov
call
retf
movs
imul
inc
jbe
and
movs
aad
ret
call
call
mov
ds
cmp
xchg
dec
pop
jg
and
out
sub
adc
(bad)
fcom
mov
fidiv
std
pop
test
mov
ret
push
sar
push
int
jmp
aaa
mov
aad
or
bound
adc
das
sub
mov
ret
ins
push
scas
in
or
das
iret
ficom
stc
ficomp
retf
sbb
mov
lahf
inc
push
cwde
dec
mov
xchg
sbb
xchg
push
icebp
ja
fdivr
cdq
lahf
jo
movs
dec
push
cs
scas
out
mov
movs
and
cmp
pushf
dec
jb
lock
or
cmps
xor
or
xchg
cs
xchg
into
jmp
push
call
test
repnz
pop
adc
pop
fist
and
popa
xchg
(bad)
inc
cmp
lock
sub
sti
cdq
not
fwait
pusha
not
sti
xchg
pusha
mov
cmc
pop
stc
cmp
sub
sub
mov
or
jmp
mov
stos
std
stos
xchg
test
push
dec
sbb
in
jno
outs
sahf
hlt
mov
jae
or
sbb
pop
out
vpextrw
sbb
fld
loope
inc
data16
pop
pop
stc
cmp
xchg
fld
mov
icebp
(bad)
lods
adc
scas
scas
mov
sti
pop
push
mov
sub
sbb
jmp
out
xor
mov
lds
add
lock
test
mov
inc
in
xor
jecxz
push
mov
mov
(bad)
fild
pop
lock
inc
loop
jge
inc
xor
enter
mov
neg
sbb
test
retf
loopne
ja
popf
mov
hlt
or
dec
mov
(bad)
push
popf
imul
mov
cwde
loopne
and
cmp
add
xlat
loop
adc
lahf
adc
shl
es
jns
jg
pop
add
and
mov
lods
push
mov
inc
sub
jmp
add
js
cmp
jge
fisubr
rol
sbb
stos
aaa
push
sbb
fwait
jnp
nop
fisubr
mov
pusha
loopne
retf
sbb
adc
int3
mov
xor
ss
sub
mov
cmp
adc
push
into
inc
mov
inc
add
ins
in
scas
jns
mov
xor
mov
clc
dec
pushf
jbe
or
fst
das
and
mov
push
jo
xor
inc
fild
jno
bound
dec
sbb
mov
test
mov
sub
movs
push
cmps
(bad)
pop
scas
pusha
xchg
dec
sbb
cmps
sbb
and
imul
movs
sbb
pop
rol
clc
sub
fcomp
rol
xlat
mov
xchg
fs
dec
sbb
cmp
sbb
mov
dec
sbb
repz
enter
idiv
es
xchg
dec
push
mov
sub
gs
call
xlat
not
lea
and
mov
add
lds
and
dec
(bad)
cmp
pusha
sub
mov
mov
idiv
ficom
inc
xchg
cmps
aad
out
repnz
lea
mov
push
iret
jmp
add
in
nop
cdq
idiv
aaa
ficom
test
pop
icebp
loop
xor
nop
in
dec
or
jmp
and
jno
int3
fist
test
jne
adc
jecxz
xor
clc
mov
and
inc
xor
pop
movs
rol
sti
je
inc
shr
sbb
outs
add
stc
mov
fadd
xchg
bound
stc
call
dec
fild
cmp
mov
mov
jg
and
mov
jecxz
(bad)
jecxz
scas
or
push
jge
std
stos
xor
dec
out
aas
xchg
push
xor
sahf
(bad)
push
add
push
jno
push
popa
shr
out
push
nop
push
aad
pop
loop
(bad)
div
loopne
push
adc
jo
out
jns
or
dec
shl
es
pusha
lea
movs
adc
enter
adc
pusha
icebp
xchg
and
pop
xor
push
scas
adc
xchg
adc
ins
daa
fld
fcmovnbe
mov
mov
ins
ins
inc
js
dec
loop
cmp
dec
and
dec
and
pop
and
jg
aas
cmp
das
das
leave
mov
add
sub
js
sbb
jmp
mov
mov
dec
imul
mov
mov
push
or
pop
lods
and
movs
jmp
or
test
sub
sahf
loopne
fadd
aas
sub
sar
pop
xor
inc
addr16
pop
mov
push
adc
pop
loopne
push
inc
lahf
mov
mov
call
or
test
push
outs
dec
inc
fstp
lahf
mov
out
aad
(bad)
xor
add
int
sub
retf
retf
ds
xor
retf
cli
iret
and
mov
and
in
ror
call
mov
out
pop
ss
jo
in
clc
lods
push
add
scas
mov
add
jmp
pop
icebp
loop
repz
mov
sub
xchg
inc
fnstcw
or
mov
aas
push
sub
mov
test
add
clc
retf
mov
ret
addr16
fstp
cmp
sub
(bad)
in
mov
jge
clc
int
fwait
loopne
jo
loop
push
pushf
in
enter
mov
into
dec
mov
in
scas
idiv
jle
out
std
jmp
cmp
sbb
popf
sub
add
out
sar
pop
mov
mov
fdiv
movs
push
sbb
or
jp
call
add
sub
scas
loop
aad
gs
leave
mov
xlat
pop
leave
sub
sub
cdq
lea
in
test
and
pop
jmp
pop
lahf
and
sti
jl
cld
xor
test
mov
int
loop
sbb
(bad)
(bad)
data16
mov
or
ror
nop
das
popa
cmp
and
jno
mov
imul
push
push
sbb
mov
mov
je
dec
cli
add
push
std
xchg
add
mov
xor
ins
or
cmp
jbe
cli
cmp
cdq
popa
mov
scas
mov
dec
mov
out
pop
outs
xchg
jge
imul
fldpi
inc
sahf
rol
sub
push
mov
inc
popa
xchg
js
shr
push
mov
cwde
push
dec
pop
jge
dec
mov
ja
aam
inc
push
xchg
inc
in
jnp
or
dec
lahf
xchg
jno
cmps
(bad)
call
repnz
aaa
hlt
sbb
rcl
or
imul
xchg
shr
xchg
sbb
or
sub
aad
fistp
mov
repnz
(bad)
xor
xchg
and
sbb
leave
aaa
ficomp
mov
push
pop
test
loopne
jle
enter
push
jae
or
xchg
pusha
mov
add
icebp
in
sub
jns
and
out
cmp
cmp
or
mov
dec
mov
mov
ss
in
call
pop
inc
subps
out
and
cmp
aaa
xchg
(bad)
jb
hlt
jae
xchg
cmps
icebp
cld
retf
and
fprem1
xchg
pusha
push
std
icebp
inc
xchg
sub
add
sbb
loopne
mov
int3
adc
jnp
push
mov
xor
shr
xor
mov
ror
call
jnp
out
or
adc
sbb
adc
jns
cmp
cmp
aas
pop
inc
hlt
add
cmp
jge
int
sar
and
ret
inc
in
xlat
scas
or
scas
sbb
sub
sub
movs
add
mov
pushf
rcr
jl
ins
adc
aas
ror
(bad)
mov
mov
xor
(bad)
loope
mov
fnstsw
push
mov
push
scas
out
push
test
mov
(bad)
loop
mov
ret
out
cmp
pop
pushf
adc
sub
addr16
neg
iret
pop
outs
mov
inc
sub
add
jp
movs
pushf
ficomp
pop
pop
add
jnp
xor
pushf
and
xor
pop
jg
push
call
add
out
xor
loop
sub
or
fwait
pushf
pop
sbb
jnp
and
sti
push
pop
inc
ds
jae
pop
mov
adc
ins
cdq
arpl
aaa
aas
push
mov
pop
(bad)
fisttp
xchg
mov
cmp
(bad)
shr
ds
lea
sbb
dec
das
dec
idiv
lods
push
jge
and
pop
iret
js
into
sbb
push
mov
std
inc
sbb
xor
out
scas
test
add
shl
mov
push
js
fbstp
jns
adc
(bad)
in
jno
outs
inc
cmp
xor
into
push
mov
jp
fwait
mov
scas
jp
int3
in
pop
repz
cli
aaa
fwait
test
dec
mov
ds
push
(bad)
mov
(bad)
xchg
loop
xor
mov
push
mov
and
fadd
retf
adc
jno
std
das
jno
popa
ficomp
adc
fwait
ins
arpl
xchg
imul
aaa
sbb
fiadd
pusha
jl
dec
inc
push
fnsave
popa
mov
imul
sbb
ja
dec
add
sahf
fwait
and
and
ret
pop
cmc
ins
and
data16
cmps
pop
lods
loop
inc
fnstenv
push
pop
add
or
(bad)
int
inc
cmps
mov
sbb
outs
mov
sub
(bad)
in
jbe
jl
and
(bad)
mov
ret
jecxz
jb
sub
enter
lea
mov
mov
and
inc
mov
std
sub
and
or
push
ror
ss
sub
(bad)
stos
jl
daa
(bad)
shr
pusha
pop
stos
push
inc
ret
jbe
nop
fild
jecxz
fnsave
mov
pop
les
js
jb
out
cmc
ins
or
sar
mov
push
stc
push
cmp
xchg
jl
popa
mov
sub
cmps
daa
adc
(bad)
jne
inc
push
jge
mov
mov
in
mov
xor
std
out
loopne
mov
not
or
xchg
je
or
jp
cli
dec
add
and
jbe
mov
das
call
inc
jmp
push
push
inc
sar
push
push
xor
jns
aad
pop
pop
inc
xor
or
or
out
fcomip
push
or
sub
mov
mov
push
fnstenv
repnz
push
ret
mov
inc
dec
sbb
mov
xor
sbb
(bad)
mov
retf
push
jnp
fdivp
push
mov
jmp
mov
repnz
arpl
push
gs
mov
icebp
xchg
movs
dec
(bad)
ror
movs
push
rol
je
neg
aas
out
popa
sub
out
js
xchg
xor
mov
fstp
lea
push
(bad)
mov
lods
push
ds
push
pop
adc
sbb
gs
or
mov
jmp
mov
fs
mov
popf
movs
out
mov
addr16
add
add
mov
data16
push
or
pop
mov
(bad)
xor
ins
inc
les
(bad)
out
sbb
retf
icebp
pop
ret
xchg
adc
jmp
add
out
fs
mov
lods
in
add
(bad)
pop
pop
inc
ret
out
mov
push
jp
mov
adc
add
std
iret
mov
imul
or
adc
js
lods
retf
out
imul
and
in
mov
lods
(bad)
mov
mov
and
scas
retf
cmp
cmps
cmp
add
out
imul
out
push
pushf
add
loopne
dec
shl
ja
jno
xchg
mov
adc
pop
pop
cmp
test
and
dec
sbb
outs
mov
js
cmp
xor
mov
mov
movs
ds
mov
sti
aaa
lds
gs
popf
movs
push
pushf
and
cmps
pushf
mov
pop
and
pusha
jo
fstp
mov
xchg
(bad)
xchg
inc
push
mov
add
jns
xchg
(bad)
cwde
jl
dec
cmp
rol
xchg
xchg
in
(bad)
jl
scas
dec
arpl
neg
sub
sub
fs
sbb
push
sub
cmp
mul
popa
jecxz
out
arpl
loopne
sub
xor
pop
je
mov
sbb
call
popa
mov
into
xor
(bad)
into
and
cmp
mov
dec
dec
xor
xchg
mov
cmp
or
jmp
fsub
add
jecxz
jo
pushf
mov
in
lods
xchg
jns
cli
sbb
jnp
data16
xchg
(bad)
les
mov
jecxz
dec
xor
retf
out
repz
cli
and
xchg
xor
mov
imul
mul
jae
sbb
xchg
mov
cmc
sub
pusha
call
inc
xlat
inc
pop
call
sbb
(bad)
xor
jle
cmp
bnd
dec
push
push
daa
xchg
ins
or
repz
adc
xchg
stos
jge
pop
cli
pushf
mov
fwait
and
pop
mov
imul
(bad)
push
popa
and
add
je
sbb
jecxz
jns
movs
xchg
pop
adc
inc
mov
lods
adc
dec
daa
mov
bound
inc
dec
rcl
call
inc
jle
rol
int3
jb
or
stc
mov
jmp
adc
sar
outs
push
out
dec
test
in
enter
adc
add
adc
cld
mov
sbb
or
adc
add
xchg
cmps
add
dec
out
jle
in
sbb
push
sti
test
pop
rcr
add
sbb
xchg
inc
aam
xor
out
push
mov
mov
push
imul
and
dec
cmps
sbb
aad
aas
div
sahf
or
add
dec
mov
push
or
and
jne
cmps
std
pop
in
cmp
push
sti
out
add
adc
loope
push
cld
lods
int
fst
pop
jo
or
jno
xchg
jge
pop
sbb
xor
aaa
(bad)
in
jecxz
lea
gs
mov
in
cli
dec
mov
out
pushf
out
pop
jbe
and
neg
ins
(bad)
push
mov
ins
and
mov
out
icebp
inc
or
dec
or
mov
xor
pop
push
cmp
test
rol
loope
adc
push
jle
dec
in
pop
pop
test
sbb
jne
jbe
mov
stc
ror
xor
sets
jb
ds
mov
sub
xor
shl
and
stos
(bad)
mov
shl
fcmovbe
xor
jns
pop
xor
jbe
add
jo
fwait
in
lds
hlt
fidiv
bnd
pop
jne
(bad)
push
ror
sahf
and
cmc
pop
jnp
cmps
mov
mov
xor
sbb
pusha
repz
or
(bad)
enter
dec
or
fiadd
push
jne
and
dec
popf
push
and
push
leave
and
mov
lods
fimul
xor
imul
or
outs
add
lods
pop
outs
xor
push
and
xlat
nop
xor
fsubr
inc
and
pop
test
lods
adc
mov
ja
mov
push
xchg
xor
std
js
inc
fwait
and
imul
lock
rol
or
out
and
test
pop
dec
sub
dec
fwait
int3
leave
adc
xlat
in
xor
push
sub
ins
mov
mov
mov
imul
push
mov
push
in
add
outs
ja
sbb
outs
leave
shl
sbb
pop
xchg
dec
ja
dec
push
cmps
daa
shr
sub
fs
out
hlt
add
and
and
aas
sub
or
shl
xchg
xor
out
jge
pop
gs
and
xchg
pop
es
add
xor
jl
add
inc
push
xchg
cmps
ins
test
(bad)
cmp
nop
rcl
fsub
pop
shl
xor
mov
fbld
ret
cdq
data16
add
movs
xchg
int
arpl
add
in
sub
call
or
mov
cdq
cli
nop
add
(bad)
stos
jne
aas
mov
xor
mov
jno
and
jnp
ja
jae
lahf
mov
lea
mov
in
mov
mov
jecxz
mov
pop
jmp
jnp
fld
(bad)
call
mov
and
mov
(bad)
sub
pop
jmp
lods
dec
or
fs
jle
mov
fcom
fisub
sub
in
in
lahf
xchg
call
inc
int
push
loope
inc
int
mov
popf
xchg
stc
pop
sar
lea
stos
push
sbb
sub
sbb
xor
in
fld
(bad)
or
inc
ror
movs
adc
sub
movs
ds
xor
arpl
cmp
or
ja
add
shl
stc
sub
pop
out
fld
test
(bad)
mov
add
xchg
dec
test
es
push
dec
jns
int
mov
cli
ins
xchg
sbb
mov
mov
sti
loopne
popf
mov
cmc
adc
rol
xchg
and
mov
lea
xor
pop
mov
sbb
pop
push
aam
cdq
pop
in
cmps
and
add
add
jo
outs
hlt
mov
and
das
push
inc
add
mov
cdq
xchg
sub
xchg
leave
sbb
lock
in
enter
cmps
pop
ss
adc
repnz
mov
jge
aaa
shr
cmp
push
retf
push
mov
cmp
mov
cmps
add
push
cmps
inc
into
repz
dec
dec
pop
int3
imul
or
sub
cmp
gs
cmp
jnp
scas
xchg
sahf
dec
adc
cmp
out
adc
inc
enter
dec
inc
pusha
cmp
dec
(bad)
std
sar
call
fild
mov
and
and
int3
sub
jmp
jne
pop
not
xchg
xor
adc
pusha
xchg
out
mov
popf
mov
adc
pop
outs
out
addr16
cmp
rcr
sbb
cmp
push
enter
jge
xchg
test
arpl
(bad)
or
(bad)
movs
call
fsub
sub
(bad)
ret
jns
fsubr
ret
sub
fist
mov
sub
mov
mov
cmp
add
jmp
nop
pop
test
(bad)
dec
not
sub
sub
es
lea
pop
js
inc
daa
sbb
adc
mov
jp
movs
out
xor
mov
inc
popa
pop
sbb
cmp
bnd
pop
adc
inc
scas
hlt
xor
lods
pop
and
stos
adc
(bad)
into
push
jbe
bound
stos
(bad)
in
sub
repnz
mov
cdq
mov
and
retf
sub
and
push
mov
retf
ds
pop
sbb
rcl
ret
jmp
jno
sbb
pop
fidivr
arpl
stc
std
mov
pop
xlat
and
fbstp
imul
inc
mov
add
call
cdq
in
repnz
addr16
pop
outs
push
add
scas
inc
pop
xchg
mul
pop
dec
fldenv
mov
xlat
add
sbb
dec
daa
jo
and
retf
cmc
cmps
add
ret
fcomp
ret
xchg
sbb
jnp
sub
ret
xor
mov
sub
cdq
test
shl
mov
fnstsw
sub
inc
sbb
xor
cli
ds
mov
dec
imul
push
leave
jmp
mov
mov
push
es
or
nop
adc
aam
pop
mov
mov
movs
cmp
push
mov
xchg
mov
arpl
or
imul
repnz
sbb
push
inc
ins
scas
cmc
rcl
dec
ror
cdq
pop
mov
rol
push
push
jmp
mov
jg
push
ds
jl
loop
jno
mov
sbb
sbb
mov
cmc
push
(bad)
xlat
hlt
arpl
mov
inc
ror
mov
cmp
dec
xor
test
jns
pop
fstp
jge
sub
add
ficom
(bad)
cld
pop
mov
mov
fadd
or
mov
pop
mov
out
aas
stos
jp
push
mov
xchg
adc
pop
push
int
or
shl
cli
adc
add
sbb
mov
in
mov
push
xchg
mov
(bad)
enter
xchg
or
sar
fadd
add
call
jae
ds
pop
or
sub
mov
inc
ja
movs
(bad)
and
cmps
aaa
mov
jb
cld
test
mov
cwde
jo
std
jmp
or
mov
sbb
aad
adc
push
call
xchg
mov
out
lea
test
les
mov
adc
out
sbb
(bad)
add
or
pop
cmp
xor
push
sbb
or
xchg
or
mov
xlat
repnz
dec
cmp
(bad)
pop
movs
dec
inc
hlt
push
push
xor
arpl
rcr
jbe
int3
test
ins
iret
pop
or
ins
aaa
jae
shl
call
ficomp
mov
fldcw
mov
stc
sbb
and
add
mov
push
add
sti
and
call
out
pusha
mov
adc
jle
out
in
push
adc
fs
add
xchg
aad
mov
popa
mov
add
jl
out
lahf
jmp
fst
gs
lock
xchg
push
cdq
adc
pop
jnp
sahf
(bad)
cmp
(bad)
or
push
dec
outs
fisub
mov
cmp
into
dec
cmp
outs
pop
push
sbb
sub
addr16
cmps
push
loopne
pop
pusha
imul
std
mov
out
icebp
jnp
push
rcr
leave
sbb
cld
dec
jbe
sub
int
stc
xor
cmp
mov
jns
(bad)
jge
mov
je
leave
add
mov
rol
pop
popf
rol
icebp
inc
lea
add
stc
fst
es
sbb
jp
jns
dec
arpl
dec
sbb
ja
cmp
push
test
sti
sbb
iret
add
sbb
dec
push
shr
loop
mov
movs
stos
mov
ret
cmp
(bad)
dec
imul
jae
and
and
jo
cmp
xchg
(bad)
ror
fisubr
clc
popf
repz
mov
jle
scas
adc
pop
cmp
pop
xchg
jo
cli
and
jl
test
push
dec
cmp
(bad)
fs
xor
push
push
ret
xchg
push
cmp
mov
stos
shl
mov
mov
adc
jge
and
out
inc
loop
les
cmp
push
(bad)
enter
icebp
popa
std
test
add
nop
pushf
out
icebp
adc
jno
or
(bad)
xor
mov
aam
ja
mov
leave
sti
(bad)
stc
mul
mov
jmp
xor
jle
xchg
inc
dec
pop
mov
fst
inc
dec
or
daa
sti
test
js
cmp
imul
adc
outs
cmc
lods
movs
bound
or
in
xor
aad
sbb
dec
(bad)
in
lahf
js
ins
(bad)
mov
dec
adc
ror
xor
jne
adc
push
jmp
cs
inc
mov
fisttp
mov
mov
cld
cmp
jp
add
imul
adc
adc
jnp
xor
pop
pop
movs
fcomp
adc
ins
cwde
(bad)
iret
cmp
push
cmp
lods
jb
mov
fs
test
in
lods
mov
adc
jo
std
mov
cmp
inc
xor
ins
add
push
in
sbb
push
fsubr
dec
and
add
sets
jno
xchg
inc
xchg
shr
out
pop
xchg
repz
mov
pop
aaa
push
hlt
push
es
push
adc
js
outs
push
and
jmp
sub
xchg
fdivr
mov
xchg
scas
mov
inc
add
idiv
call
pop
loopne
inc
pop
push
int3
adc
inc
enter
ficomp
push
or
mov
rol
fst
sub
or
xchg
les
repz
in
ror
xlat
xchg
out
sti
js
lods
jne
push
into
popa
cwde
pop
mov
movs
or
and
pop
into
jge
rcl
pop
xchg
xor
mov
push
clc
leave
int3
int
cmps
sti
jle
aaa
nop
aam
jae
mov
stos
addr16
xor
jl
stc
jb
das
push
add
imul
cmp
jp
jp
sub
fcom
pop
scas
push
dec
out
and
popa
add
jns
out
jns
ins
retf
ins
call
loope
mov
mov
adc
xor
loope
scas
les
enter
push
push
std
in
jl
jb
mov
xchg
mov
and
cmp
out
mov
sbb
dec
xor
sti
sub
into
lds
push
(bad)
mov
add
sbb
jae
dec
jae
aas
jge
xchg
add
shl
add
call
rcr
leave
fst
xchg
or
sub
neg
xchg
test
add
movs
sbb
xor
push
jle
and
inc
jne
push
sbb
lahf
xlat
sti
popf
popa
stos
xlat
mov
mov
ret
lods
and
and
(bad)
pop
inc
xchg
sbb
add
xchg
inc
out
clc
int
cmp
jbe
int
and
xchg
ret
jbe
ds
out
popf
pop
push
and
ins
dec
mov
xor
dec
pop
jmp
mov
shl
lea
stos
fisubr
fcmovnb
cmps
outs
popf
test
pop
call
lods
lock
sub
rcl
fnstenv
jp
or
rol
loope
loop
stos
mov
fisubr
scas
clc
lods
lods
mov
mov
mov
(bad)
int
movs
add
fwait
scas
and
shl
rol
popf
sar
lahf
adc
in
mov
(bad)
movs
xchg
das
js
cmps
mov
push
adc
mov
pop
mov
adc
ret
add
cmp
pusha
xchg
adc
(bad)
push
daa
xchg
nop
xor
cmps
mov
push
imul
push
push
sti
cmp
fldcw
(bad)
clc
lock
out
ins
xchg
inc
cld
div
pop
test
lds
push
push
mul
fldcw
cmp
adc
xchg
mov
imul
pop
ins
popf
fs
ror
xor
or
inc
ret
pmaddwd
shl
mov
lods
outs
ret
or
mov
cmps
jae
jmp
leave
popa
add
arpl
push
pop
movs
popf
std
dec
mov
jbe
push
arpl
sub
push
(bad)
cmp
out
pop
movs
push
sub
mov
aam
sub
pop
inc
js
loop
scas
and
into
or
jl
mov
test
and
cwde
movs
dec
cld
xor
mov
cdq
shr
xor
dec
loope
scas
jbe
xchg
fimul
sbb
push
add
push
xchg
fcom
lea
lods
and
xcrypt-cfb
cmps
loop
mov
retf
es
out
popf
mov
sbb
pop
dec
xchg
jecxz
call
scas
and
icebp
inc
ret
mov
xor
(bad)
dec
lahf
leave
xor
sbb
mov
addr16
shr
dec
inc
adc
stos
imul
xchg
jbe
jg
out
xlat
in
int
bound
mov
sub
je
ja
and
popf
sub
cli
jbe
iret
rcl
adc
loop
jmp
and
sbb
mov
dec
xlat
imul
fs
xor
xchg
pop
pop
adc
dec
ss
mov
sbb
sbb
out
mov
inc
add
movs
dec
retf
mov
add
xchg
xchg
repz
(bad)
out
inc
sub
lds
cmp
mov
sahf
add
into
mov
arpl
mov
xchg
(bad)
pop
xchg
xchg
push
sub
out
mov
pop
add
add
or
add
leave
push
and
loop
and
call
in
inc
enter
cmp
into
dec
adc
fisttp
adc
xchg
cmc
stos
sub
out
mov
cmp
push
sbb
fidiv
outs
movs
outs
ja
mov
mov
aam
daa
cmp
popf
rcr
push
dec
add
mov
sub
mov
xchg
stos
mov
pop
adc
lea
lds
inc
mov
push
dec
or
cmp
in
mov
adc
pop
(bad)
cli
fcmovnbe
leave
xor
pop
div
stos
ficom
fdivr
fisttp
data16
pop
dec
sbb
push
lods
inc
fiadd
xor
dec
retf
aaa
pop
pop
mov
sub
mov
pop
iret
hlt
idiv
inc
fisub
inc
daa
out
loope
(bad)
inc
lahf
and
jb
jle
fs
mov
test
cmp
xchg
cmp
lea
xchg
test
shl
mov
mov
adc
sbb
mul
lods
cmp
pop
mov
cmp
pop
inc
unpcklps
ss
aas
pop
fisttp
loopne
aam
movs
js
adc
mov
sbb
into
mov
cmps
lods
inc
lods
sub
xlat
and
int3
xchg
pop
cmp
dec
stc
mov
xchg
aaa
cmp
mov
push
mov
popf
cs
sub
cmp
mov
test
fwait
ror
rcr
xchg
mov
mov
fs
aaa
mov
pop
enter
test
sahf
dec
push
mov
add
cmp
mov
push
repnz
icebp
imul
sub
push
xor
inc
pushf
cmp
sbb
inc
and
ret
inc
test
int
pop
mov
dec
pop
loop
or
daa
xlat
dec
(bad)
es
stos
fs
adc
test
out
outs
je
pop
loop
jb
jo
mov
push
inc
daa
jbe
inc
stc
mov
loopne
xchg
inc
xlat
jmp
pop
push
jae
ror
mov
in
push
mov
js
jecxz
sub
jg
mov
cs
sahf
lods
js
popf
cmp
out
adc
mov
(bad)
shl
sbb
mov
jne
fcomp
repz
pusha
push
sub
inc
aaa
xor
and
adc
addr16
mov
rcl
aad
and
push
sbb
jp
jmp
imul
scas
sbb
hlt
in
call
(bad)
lock
mov
aad
dec
aad
push
fwait
imul
outs
gs
jo
test
pop
jmp
fisubr
data16
add
xor
push
stos
mov
adc
xor
dec
repnz
xor
sub
pop
inc
mov
imul
sbb
jge
cwde
stos
cmps
retf
jbe
sbb
dec
cmp
(bad)
leave
mov
push
iret
mov
xchg
mov
out
xchg
inc
mov
fstp
fdivr
rcl
or
in
push
call
fild
jno
rcr
and
cmp
cs
in
fstp
and
xor
mov
dec
jge
pop
sahf
mov
(bad)
lods
fistp
ret
push
xchg
pop
lods
or
lock
or
push
sbb
loop
jne
lea
push
lahf
loopne
pop
push
cmc
nop
iret
sbb
mov
test
adc
sti
out
mov
out
push
inc
sbb
add
dec
push
xchg
and
popa
dec
xchg
sahf
fst
sbb
(bad)
shr
daa
mov
(bad)
es
sbb
or
dec
and
jg
pop
out
pusha
mov
jecxz
xor
pusha
call
in
stos
inc
lods
adc
or
mov
retf
mov
mov
leave
lods
mov
cmps
popa
jb
adc
mov
xchg
test
loope
fcomp
xchg
add
je
aas
push
cdq
in
(bad)
js
adc
cwde
sbb
sbb
shr
sub
jno
and
mov
div
mov
jge
jmp
imul
xchg
jge
dec
dec
pop
sub
outs
add
push
rcl
shr
mov
movs
das
cli
xor
mov
or
bound
xchg
cmps
mov
add
ins
and
mov
in
pop
pusha
ss
push
cmp
or
stos
mov
or
ins
xchg
pop
daa
cmp
loopne
outs
xchg
pop
mov
sbb
mov
out
inc
ret
std
mov
cmp
leave
inc
xchg
xor
imul
shr
mov
cli
mov
xor
fisttp
ds
add
mov
outs
js
mov
pushf
sbb
mov
ret
pop
cmps
ret
retf
mov
jb
or
adc
push
xchg
mov
sub
xor
mov
xchg
sbb
mov
xchg
pushf
imul
pop
push
ret
add
aas
pop
mov
pop
mov
or
sub
cmps
in
add
fisttp
add
in
and
or
test
mov
mul
pop
push
jl
test
xchg
fistp
sbb
adc
mov
pop
fucompp
lahf
cld
das
fdivr
jne
sbb
cmp
ficom
(bad)
inc
dec
nop
leave
add
leave
xchg
push
cdq
icebp
sti
jmp
xchg
lods
mov
jle
or
sbb
dec
adc
cwde
or
and
or
inc
mov
jae
sahf
push
loopne
fiadd
in
mov
stc
sbb
retf
xchg
inc
add
movs
js
mov
popa
not
push
inc
aam
inc
retf
and
stc
mov
mov
test
ret
add
jg
in
loope
sub
in
mov
aad
fisubr
sub
leave
jmp
mov
(bad)
fsubp
lock
mov
rcl
ds
push
jns
mov
lock
pop
xchg
loop
retf
(bad)
adc
mov
pop
sbb
imul
mov
push
arpl
aas
cmp
or
dec
inc
int
dec
(bad)
popa
stos
or
jl
fidiv
inc
push
mov
mov
and
dec
add
es
mov
xor
jmp
inc
imul
test
cli
dec
push
leave
into
sahf
jnp
mov
and
rcr
xor
out
dec
mov
cmps
mov
out
and
imul
nop
add
in
sbb
fld
mov
cdq
lock
ret
aam
add
rcr
(bad)
popf
inc
test
int3
push
shr
int3
cmp
cmp
pop
out
mov
mov
cmps
outs
dec
add
push
mov
test
dec
push
dec
jne
mov
in
ja
adc
cmp
push
sar
(bad)
ja
ret
push
add
sub
pushf
mov
call
ss
inc
mov
sbb
sub
mov
stos
mov
mov
cs
popa
xchg
adc
mov
bound
(bad)
(bad)
mov
neg
(bad)
out
mov
or
sub
push
into
sub
or
cmp
movs
les
(bad)
ficom
dec
mov
xchg
cmps
pop
sahf
xchg
sbb
cmp
adc
jbe
aaa
pop
sub
in
cdq
jnp
ror
call
rol
retf
test
idiv
fld
mov
push
push
push
add
adc
les
test
mov
clc
sbb
adc
adc
push
push
jae
clc
mov
js
fnstsw
adc
cli
fidivr
nop
push
sahf
add
push
push
ficom
push
or
xchg
movs
xchg
popa
inc
mov
retf
jl
retf
enter
and
test
in
push
lds
outs
add
aam
jne
sub
ds
mov
fadd
fwait
shl
out
or
lea
stos
jmp
test
cli
and
cli
shl
push
int3
adc
out
mov
mov
call
gs
or
pop
call
push
adc
data16
jmp
jl
jmp
mov
lea
ret
pop
jg
xchg
test
loopne
jge
xor
pop
xor
mov
add
mov
pop
lock
call
test
push
push
xor
scas
jg
fisttp
fxch
repnz
or
ret
jmp
mov
mov
in
and
leave
inc
hlt
mov
pop
lahf
push
pop
hlt
add
pop
cld
mov
jae
into
mov
push
sbb
test
daa
pop
sbb
add
xor
dec
push
push
and
hlt
push
push
mov
pop
lea
jo
or
adc
pop
pop
sub
xor
adc
push
push
mov
(bad)
cmp
and
in
(bad)
dec
mov
sbb
out
adc
sbb
xor
loop
mov
mov
stc
push
push
iret
add
xchg
pop
cmc
(bad)
fiadd
mov
jnp
rcr
(bad)
adc
xchg
cmp
test
imul
xor
sbb
mov
sahf
ss
ffreep
std
cmps
out
iret
mov
jge
mov
imul
hlt
push
fsub
fs
mov
xor
mov
pushf
and
leave
pop
jmp
frstor
push
push
inc
xor
dec
in
lods
in
and
daa
jns
lahf
frstor
jns
inc
mov
push
aas
sub
mov
or
ret
cmp
xor
in
sbb
or
mov
inc
lsl
lods
fwait
and
jmp
movs
test
test
imul
xchg
pushf
push
fldcw
int3
rcr
xchg
and
(bad)
test
add
(bad)
mov
pop
mov
fidiv
ret
sar
xchg
push
sti
adc
cmps
inc
xchg
outs
sub
ins
fcmovne
jl
shl
pop
ja
jecxz
in
add
jp
loope
mov
out
setno
adc
shr
leave
arpl
mov
ins
shr
cmp
out
imul
inc
inc
movs
sar
dec
xchg
enter
not
scas
ja
lods
in
cmp
xor
xor
push
jmp
es
jle
xchg
and
xor
bound
cld
push
test
sub
aaa
call
(bad)
push
in
pop
and
data16
jae
int
bnd
outs
jl
pop
imul
pop
push
adc
push
lods
push
out
xlat
loope
and
sub
and
arpl
addr16
xchg
das
xchg
out
mov
ror
lds
shl
jge
pop
out
(bad)
movs
ds
push
loope
in
ret
out
and
adc
jae
xor
out
lea
cmps
js
sub
sub
and
test
inc
das
call
fsubr
inc
or
inc
popa
xor
dec
inc
pop
mov
pusha
fmul
in
xchg
in
xchg
ins
repnz
mov
or
jmp
test
and
mov
movs
hlt
aas
ins
or
jno
in
cwde
pop
xor
int
and
jmp
inc
sub
dec
mov
ret
or
xchg
push
stc
push
sbb
shl
add
outs
(bad)
fdiv
xor
daa
ins
add
imul
sar
xor
lahf
cli
push
test
jp
adc
mov
dec
outs
jne
jbe
movs
dec
pushf
mov
jle
adc
or
loope
mov
repnz
push
iret
cdq
popf
repz
adc
or
xchg
fmul
lods
pushf
movs
ins
xchg
jmp
lahf
sbb
arpl
outs
scas
mov
push
adc
mov
or
jne
rol
sub
div
dec
sahf
fstp
jb
inc
xchg
ffreep
int
call
inc
push
adc
imul
sub
std
mov
mov
jecxz
cmp
jmp
mov
iret
push
call
mov
mov
icebp
inc
addr16
mov
sbb
xor
push
dec
sub
call
cwde
inc
or
je
cmp
inc
sti
jp
retf
ret
sub
xchg
rcr
sub
jp
xchg
dec
push
jno
xor
sub
and
iret
mov
into
and
outs
enter
ror
pop
mov
dec
jbe
sbb
pop
in
fistp
test
movs
loopne
mov
lds
sti
xchg
scas
retf
push
sahf
add
movs
or
mov
or
adc
aaa
fnstcw
js
xor
stc
adc
cmp
in
mov
sbb
shr
cmps
fisttp
imul
inc
out
pop
pushf
push
mov
lds
rol
int3
ja
cmps
aam
dec
xchg
mov
pop
and
mov
add
mov
mov
xor
xchg
xor
call
mov
test
mov
pop
gs
std
in
pop
cwde
mov
mov
xor
inc
xchg
scas
mov
sbb
(bad)
out
ror
adc
add
dec
sub
push
adc
pop
retf
imul
xor
movs
add
push
cmp
int
push
lahf
add
lods
dec
xor
adc
fs
jbe
jne
xchg
fst
cmp
mov
mov
adc
es
xor
adc
add
xchg
sub
outs
enter
pop
daa
rol
xchg
mov
rcr
xchg
mov
dec
sti
js
dec
rcr
push
inc
(bad)
scas
clc
inc
sbb
sub
jge
outs
ins
pop
jle
mov
push
es
mov
jle
jl
lock
push
arpl
mov
cwde
cs
cmps
mov
push
xor
mov
xor
jmp
stos
in
pop
xor
add
ss
inc
jg
imul
pop
jl
je
out
dec
in
cmp
mov
das
or
retf
lods
sbb
cmp
adc
popf
aam
mov
aam
jmp
idiv
test
dec
out
and
mov
pop
bnd
enter
leave
in
adc
psubd
ret
push
and
and
push
adc
aam
push
nop
or
inc
jge
pop
loopne
add
pop
or
daa
scas
mov
sub
iret
mov
out
pop
(bad)
clc
fmul
add
call
add
adc
pop
pop
bound
jecxz
test
aaa
sub
pop
adc
in
mov
mov
jge
adc
jg
les
or
mov
inc
repz
adc
and
pop
daa
dec
pop
dec
jmp
xor
stc
inc
scas
scas
jl
stc
push
retf
cdq
inc
in
cli
enter
lock
lods
std
imul
out
in
jecxz
mov
ret
sub
ja
das
shl
mov
out
sbb
fs
mov
pop
in
imul
cmp
aam
arpl
aad
inc
xchg
dec
sbb
and
sbb
adc
outs
mov
or
or
test
shl
repz
fidiv
xchg
jecxz
push
nop
or
sub
cmp
jmp
add
xor
je
fisub
or
dec
clc
mov
xchg
mov
sub
outs
jl
into
jnp
push
lea
and
jmp
adc
aaa
and
dec
jae
scas
test
jmp
inc
or
and
aam
xchg
stc
in
dec
lea
adc
int3
bound
mov
push
lds
pop
and
fdiv
and
add
inc
je
push
adc
bound
cmps
in
js
les
xchg
out
fisubr
or
xor
fild
sbb
nop
push
fst
aad
mov
mov
(bad)
fcomi
dec
mov
cwde
arpl
ins
jbe
into
mov
out
retf
jg
js
xchg
push
adc
jne
mov
jg
xchg
mov
mov
test
add
sbb
push
fsubr
pop
xlat
stc
sbb
cmp
lds
or
mov
xor
shl
pushf
add
mov
stos
inc
add
mov
into
jae
hlt
mov
and
mov
xchg
mov
add
mov
ss
add
xchg
push
stc
popa
push
xor
xchg
pop
hlt
jmp
push
xlat
(bad)
pushf
jnp
pushf
aas
cs
sub
popf
mov
jbe
loopne
lea
pop
push
pop
rcr
push
inc
js
jo
and
and
sbb
jnp
loop
jge
es
(bad)
outs
pusha
and
rol
and
adc
jmp
dec
mov
sub
loope
push
or
mov
loopne
dec
aaa
xchg
jne
or
or
iret
add
ret
fisubr
cli
call
mov
add
int3
rcl
mov
push
das
xchg
cmps
icebp
ret
jae
inc
mov
retf
test
stc
dec
(bad)
ins
retf
add
rcr
push
cld
cmps
ins
and
jbe
rcr
mov
push
ja
mov
inc
pop
sub
and
sar
jbe
rol
pop
jns
test
or
or
(bad)
dec
fdiv
cmps
out
loop
mov
(bad)
(bad)
aam
xchg
cmps
xor
fdiv
or
pop
add
sbb
jns
repnz
push
sub
add
aas
and
adc
adc
outs
xor
xor
adc
cmps
shl
neg
mov
scas
test
inc
mov
leave
mov
xor
or
push
fs
pop
cmp
and
sbb
push
(bad)
xor
dec
retf
aam
mov
repnz
mov
scas
les
mov
xchg
nop
fidiv
add
push
imul
sub
and
outs
xchg
push
out
sub
xbegin
push
arpl
int
xchg
xchg
scas
test
push
jmp
xor
dec
dec
lods
sbb
mov
adc
sub
lods
and
fadd
cmp
pop
clc
and
add
dec
inc
sbb
jle
ret
add
pop
add
jecxz
push
mov
jbe
rcl
sbb
in
push
jno
jo
aad
sar
fcomi
jne
retf
cmp
dec
stc
in
inc
xchg
jnp
jo
int3
add
(bad)
sub
xchg
jmp
xchg
shl
jae
mov
add
cmp
sti
add
loopne
imul
jno
popa
test
in
xor
out
add
xchg
popa
push
popf
sti
rep
jecxz
fnstsw
(bad)
lods
das
out
xchg
iret
or
lds
inc
cmp
pusha
popa
xchg
xchg
inc
sub
adc
inc
sar
outs
push
or
mov
mov
mov
mov
xlat
sbb
sbb
sbb
and
ins
sbb
xchg
retf
sar
mov
adc
cmp
cmp
xchg
repz
stos
and
data16
dec
push
adc
jnp
out
aaa
inc
test
scas
mov
cmp
push
pop
mov
gs
jp
shr
jp
push
push
cdq
ins
cmp
imul
(bad)
jmp
dec
rcl
xor
add
pop
std
std
sbb
jmp
or
sub
jp
add
out
cmp
imul
jmp
dec
pop
int
adc
add
xor
fcomp
iret
add
arpl
jno
push
pop
adc
dec
sub
fwait
add
jne
ja
repnz
test
xchg
mov
(bad)
and
mov
dec
ffreep
sbb
mov
jmp
jle
les
cmps
push
aas
or
inc
sub
dec
ret
xchg
std
inc
clc
cmp
clc
pop
push
xor
(bad)
ins
pop
fcmovnu
adc
stc
fnstenv
push
push
mov
jp
pop
rol
mov
xchg
push
mov
push
push
sbb
cmps
ins
dec
push
loopne
xchg
cmp
mov
(bad)
call
mov
add
inc
inc
mov
imul
bound
in
ret
xchg
dec
into
xchg
movs
xchg
inc
add
in
out
inc
push
fist
pop
dec
movs
mov
xchg
or
scas
mov
sub
fmul
sub
iret
adc
lock
lods
and
adc
outs
cli
int3
ret
inc
adc
call
sbb
lods
jmp
lods
sub
stos
jnp
shl
fdecstp
xchg
pop
jmp
mov
iret
sbb
fiadd
cmps
cmc
scas
leave
or
imul
hlt
xlat
mov
je
(bad)
sub
add
mov
pop
(bad)
adc
dec
adc
inc
and
iret
inc
cmc
adc
cwde
jo
arpl
sahf
xchg
dec
cmp
jno
lds
cmp
jb
xchg
jns
lea
shl
sub
in
call
jle
jmp
int
push
std
data16
scas
int3
xchg
adc
and
inc
movs
jbe
out
dec
push
fidivr
mov
sub
push
ror
add
out
shl
out
jns
leave
aam
add
(bad)
xor
pop
rcr
xchg
icebp
cmps
dec
idiv
ds
cs
xchg
ja
repz
test
and
cmc
mov
call
xor
sub
icebp
push
push
push
push
icebp
int
arpl
mov
mov
lock
add
test
int3
stos
dec
hlt
arpl
rcl
fs
jnp
mov
mov
push
inc
test
jg
ret
xlat
add
dec
cmp
adc
or
arpl
sub
cmp
or
sbb
sub
sbb
pushf
setae
outs
xchg
aas
cld
push
mov
inc
xor
mov
jae
aam
retf
cwde
jno
lea
nop
int
(bad)
outs
std
adc
mov
leave
jge
popf
movzx
xchg
pop
mov
sub
dec
sub
add
stos
pop
(bad)
push
out
ins
push
cdq
xchg
sahf
(bad)
enter
xchg
and
sub
adc
or
movs
scas
ins
jnp
imul
push
or
(bad)
pmullw
xchg
cmp
(bad)
xor
repz
xchg
into
cmps
das
or
xor
out
sbb
cmps
scas
and
mov
jb
cmp
(bad)
rcl
xlat
mov
cwd
jne
cmps
not
adc
inc
pop
cmp
xchg
sbb
clc
add
shl
jne
sub
sbb
sub
test
aaa
hlt
test
lods
cmp
cmp
or
scas
add
test
cmps
push
(bad)
ss
stos
sbb
push
jae
call
pop
or
call
jae
pusha
add
out
pop
ret
(bad)
push
push
nop
addr16
jno
jae
add
(bad)
jge
jp
out
sub
mov
or
call
push
and
das
outs
and
xchg
pop
lods
jmp
sub
xchg
jmp
inc
fimul
les
sbb
ror
ror
inc
pop
pop
inc
and
mov
out
inc
shr
or
movs
scas
gs
jne
frstor
add
or
pop
push
add
push
push
or
jmp
fcomp
ja
fiadd
icebp
lods
outs
dec
xor
retf
and
push
push
ret
or
inc
sahf
repnz
xlat
sub
mov
iret
cld
and
mov
sbb
cmp
test
or
idiv
shr
mov
(bad)
aad
addr16
dec
cmp
scas
cdq
jmp
scas
je
repz
mov
cs
push
adc
jo
inc
mov
mov
fldenv
call
arpl
adc
stos
dec
push
push
mov
cmp
mov
push
add
cmp
xchg
push
pop
pop
sub
loopne
je
push
push
push
adc
outs
dec
push
xchg
ins
jne
test
dec
ret
pop
(bad)
int3
clc
loop
jge
mov
das
inc
or
and
cmp
push
pop
loopne
or
adc
sub
bound
hlt
push
adc
adc
mov
(bad)
enter
pop
jne
iret
mov
push
sub
push
xor
cmp
jno
sub
cmp
inc
inc
inc
ins
mov
mov
pop
in
jno
retf
sbb
cmp
icebp
in
or
fldenv
pushf
outs
xor
or
sbb
repz
mov
sbb
lds
cmp
jmp
push
leave
int3
call
cmps
je
adc
inc
jl
dec
in
test
outs
xchg
dec
shl
or
cwde
push
mov
dec
mov
dec
pushf
or
jp
imul
adc
add
jge
jg
jo
das
or
mov
dec
sub
into
outs
adc
ret
shr
add
mov
jmp
inc
or
xlat
or
sbb
mov
imul
add
push
sbb
jae
retf
sbb
mov
aas
call
fist
inc
adc
lock
imul
dec
mov
xchg
sbb
add
lahf
sbb
das
mov
cmps
sub
(bad)
test
add
pop
daa
or
movs
stos
outs
sbb
mov
dec
aam
adc
dec
pop
mov
mov
(bad)
dec
ins
std
rcr
inc
ins
cmp
inc
sub
xlat
imul
jbe
xor
dec
pushf
cmc
clc
jns
clc
adc
aad
mov
das
jae
mov
inc
add
push
sbb
out
icebp
stc
dec
add
repnz
nop
add
icebp
inc
sub
sbb
rol
mov
call
dec
dec
out
rcr
cmp
stos
xlat
stos
xor
pop
pop
inc
xchg
sub
lods
addr16
pushf
fnsave
out
or
add
sub
mov
pushf
lds
(bad)
adc
push
jae
inc
rcr
rol
add
pop
or
adc
sub
push
out
idiv
mov
xchg
rol
xlat
jle
mov
xchg
aaa
rcr
test
pop
push
lock
aad
adc
add
je
das
arpl
fisttp
add
rcr
test
adc
cmps
imul
scas
sbb
(bad)
test
scas
data16
and
in
ins
fstp
in
pushf
fwait
jle
and
in
mov
bound
or
fild
nop
sar
jbe
pop
mov
xor
std
xchg
retf
cmp
and
sub
scas
jl
pop
(bad)
imul
fiadd
(bad)
ficom
js
push
adc
hlt
mov
data16
mov
ror
sbb
mov
mov
or
dec
(bad)
xchg
sbb
imul
test
sbb
inc
fs
scas
xchg
xor
dec
xor
or
(bad)
push
add
sub
and
inc
pop
add
lea
es
inc
ficomp
and
imul
adc
jp
js
jg
and
or
xchg
repz
lock
pop
retf
sahf
call
jl
gs
adc
std
hlt
sub
rcr
xchg
ja
inc
push
xchg
imul
inc
jnp
cmp
dec
stos
dec
xlat
cmp
add
cmp
sub
fld
int
pop
xchg
xor
daa
inc
xor
(bad)
outs
test
jmp
mov
sub
push
jg
and
jmp
xchg
call
and
add
mov
pop
jno
mov
aam
(bad)
bound
(bad)
popa
mov
inc
inc
dec
sub
pushf
xlat
push
pushf
pusha
stos
push
hlt
shr
pop
inc
out
jbe
cmps
add
adc
mov
sub
and
pushf
scas
jl
and
je
jno
and
sub
sahf
xor
xchg
adc
xor
fiadd
cmp
inc
shl
or
in
mov
fdivp
popa
enter
cmp
sub
retf
icebp
ds
stc
dec
call
cmps
cwde
out
rol
jmp
inc
cmc
inc
sbb
cmc
retf
test
sahf
jl
mov
into
call
add
fisttp
xchg
mov
or
es
pusha
or
addr16
jecxz
mov
push
mov
mov
jo
xor
dec
div
cmps
cmp
aaa
sbb
pop
jb
pop
mov
xor
imul
out
mov
dec
xlat
push
aaa
lock
cmp
addr16
cwde
cs
adc
mov
and
rcr
mov
or
fnstenv
sub
dec
pop
push
pusha
mov
icebp
or
or
xor
or
adc
push
mov
out
or
pop
mov
sahf
loopne
cdq
and
cdq
dec
movs
int
mov
repnz
cmp
imul
add
xchg
ins
out
push
push
clc
cwde
les
jbe
mov
loope
cmp
xchg
aad
xor
cmp
(bad)
fsub
mov
xchg
loope
cmp
movs
es
sahf
loopne
pusha
imul
data16
imul
(bad)
mov
addr16
push
add
and
adc
nop
dec
mov
cmp
repz
mov
sahf
mov
ret
dec
lock
mov
xchg
dec
sub
xor
add
jnp
and
test
push
jae
jnp
xchg
fidivr
arpl
ins
(bad)
lods
push
gs
and
fwait
sub
inc
and
sar
imul
push
lea
(bad)
or
pop
cdq
cdq
xchg
sbb
(bad)
mov
call
movs
mov
bound
rcr
(bad)
adc
mov
je
cmp
push
cmp
movs
dec
and
call
and
sbb
add
or
mov
jecxz
leave
cmps
arpl
jne
xchg
fidiv
inc
mov
int3
cmp
jne
dec
jle
sub
mov
aaa
push
hlt
sar
xor
sub
push
out
std
pop
pop
pop
daa
jnp
sbb
xor
jg
push
dec
pop
sbb
xor
in
jmp
sub
scas
loopne
test
cmp
push
inc
pop
out
adc
pop
ins
sar
inc
sbb
fisttp
and
mov
(bad)
fidivr
out
lock
sub
(bad)
jecxz
ffreep
cmp
or
pop
daa
cmp
mov
inc
movs
inc
loope
fs
xchg
mov
iret
ja
push
add
jnp
gs
test
lods
in
popf
fbstp
pop
shl
adc
popf
dec
leave
sti
pop
mov
sar
sti
into
mov
(bad)
iret
enter
xor
mov
push
dec
(bad)
(bad)
pop
lods
imul
outs
cld
push
cmp
mov
add
adc
push
fs
cmp
mov
jno
or
and
jnp
or
lods
pop
popf
(bad)
mov
mov
mov
arpl
xor
(bad)
sbb
dec
push
(bad)
xlat
cld
xor
je
(bad)
push
fcom
cmps
add
cmps
cmp
push
push
pop
pop
jb
adc
stc
stos
adc
jle
sub
jmp
mov
ret
adc
adc
mul
movs
add
dec
(bad)
ds
out
(bad)
test
jecxz
pusha
sahf
inc
pop
push
arpl
push
or
add
mov
dec
or
mov
aaa
shl
fisub
xchg
pop
push
cdq
add
out
xchg
add
inc
lds
sub
jmp
stos
loope
or
sar
mov
cmp
jp
je
lahf
xchg
int
jp
addr16
out
add
jp
stc
call
mov
outs
loop
push
sti
es
lods
shl
inc
ficomp
popa
movs
mov
inc
mov
mov
sub
ja
shl
pop
imul
sub
rol
out
int3
xchg
out
inc
pushf
dec
das
mov
or
xchg
lods
mov
jge
aad
xchg
dec
dec
fstp
cmp
pop
test
repnz
jmp
push
cs
loop
fs
adc
ret
sub
sbb
fild
dec
lahf
pop
inc
jbe
sub
adc
push
xchg
nop
(bad)
sub
(bad)
pop
add
mov
(bad)
jno
or
sub
inc
jo
mov
push
int3
test
mov
cmp
cmps
test
loopne
adc
in
inc
sub
xchg
cwde
aas
mov
std
aam
mov
out
mov
sar
xor
imul
sub
aad
je
loopne
test
mov
add
push
(bad)
test
imul
cmp
cmps
dec
adc
dec
test
cmc
push
sbb
test
std
dec
sub
stc
xchg
xor
fadd
xchg
xor
xchg
cmc
pop
gs
data16
cli
addr16
cmp
mov
sbb
lahf
out
jb
dec
lahf
push
clc
xor
cmp
cmp
add
outs
mov
xor
xchg
cli
push
add
inc
sbb
jns
jne
repnz
push
jmp
push
out
sbb
cwde
ins
outs
xchg
mov
jecxz
lock
jg
ror
mov
inc
lahf
mov
adc
les
sub
jo
cmps
bound
xor
fisttp
pushf
dec
push
sbb
cmp
add
mov
out
mov
xchg
std
jge
dec
and
inc
ins
ftst
sbb
hlt
add
push
cmps
push
cld
mov
ins
pop
pop
popf
sub
and
sbb
cmp
std
ins
repz
fsubr
and
sub
xor
jle
imul
imul
push
jae
shl
dec
mov
lods
sub
jmp
mov
mov
xor
lahf
(bad)
outs
pop
fwait
mov
jbe
or
test
gs
sar
loope
jecxz
jb
cmp
mov
sti
jp
je
cmps
stc
add
pushf
std
lods
and
jp
pop
out
xor
add
mov
in
sar
test
sbb
sbb
jp
and
pop
xchg
imul
cmp
pop
loope
int
push
xor
jae
sub
cmp
xor
or
mov
jp
xchg
test
rcr
arpl
mov
add
inc
push
or
pop
push
jge
pop
ss
into
(bad)
out
addr16
push
mov
(bad)
ins
(bad)
fisubr
adc
inc
jo
sbb
sub
(bad)
cli
sar
and
out
fistp
inc
add
jmp
sbb
clc
xchg
sbb
push
dec
and
fsub
mov
jmp
inc
mov
bnd
pop
sub
mov
or
add
into
and
cmp
inc
adc
test
retf
ds
pushf
out
mov
adc
sbb
pushf
imul
dec
sti
add
mov
imul
mov
bnd
jp
add
pop
sbb
push
xchg
ret
in
fiadd
outs
sub
add
pop
push
push
jo
aas
loop
mov
sar
adc
cdq
and
aad
data16
add
fs
les
or
mov
imul
sub
sbb
lahf
or
cdq
mov
inc
loop
mov
sub
jge
mov
pop
pusha
xor
ret
retf
inc
dec
sub
arpl
jno
outs
scas
iret
push
or
pop
jl
retf
and
sub
cli
stc
pop
pop
pop
dec
loope
gs
outs
adc
aam
dec
inc
jne
sub
or
add
sbb
test
jbe
push
call
dec
lahf
cli
mov
jle
sub
push
pop
cli
fwait
xor
jmp
adc
ins
das
push
dec
imul
das
mov
cmp
pop
push
in
jb
xor
test
dec
inc
cmps
je
or
shl
fbld
and
and
sub
push
cli
(bad)
lahf
ret
loopne
test
ss
xchg
pop
cmp
mov
sub
mov
or
clc
(bad)
push
cmp
sbb
cmps
adc
xor
sar
call
test
xor
idiv
sub
int
out
loop
in
adc
xor
rdtsc
out
mov
repnz
cwde
pop
mov
jbe
jmp
test
outs
sbb
mov
repz
rol
mov
aam
pop
sub
pop
ss
aaa
push
std
aam
gs
jmp
push
movs
rol
mov
inc
ins
mov
loop
addr16
sub
scas
(bad)
loope
movs
push
jecxz
xchg
(bad)
cs
cwde
test
(bad)
aad
ss
arpl
cmp
adc
or
sub
in
cmp
cmc
loop
repz
mov
movs
cmp
xor
push
pop
jl
(bad)
dec
mov
into
fsub
push
push
fisub
push
stos
test
pop
mov
aam
pop
aam
dec
(bad)
fisttp
and
(bad)
jae
arpl
pop
pusha
ror
leave
repnz
pop
out
adc
pop
lods
cld
mov
dec
mov
adc
or
cld
arpl
clc
ins
lods
xlat
lods
mov
sub
icebp
leave
or
test
sbb
in
push
stos
mov
in
pop
mov
pop
jo
add
fcmove
(bad)
bound
push
mov
mov
xor
out
or
fstp
pop
cmps
inc
jle
idiv
call
adc
sbb
test
or
sahf
xor
jae
pop
stos
imul
movs
jbe
das
loope
mov
jne
fiadd
scas
xrelease
adc
push
pop
and
add
or
adc
rcr
dec
dec
into
pushf
(bad)
shl
cld
push
cmps
mov
xor
scas
ds
ret
fcomip
jg
jge
in
cmps
sbb
jge
in
mov
stos
mov
dec
mov
mov
jecxz
dec
ja
call
fucomp
and
and
(bad)
aam
(bad)
cmc
data16
pop
in
push
sbb
sbb
jl
shl
jg
jbe
ss
fnclex
ret
sbb
lods
inc
(bad)
xchg
mov
(bad)
xlat
ret
scas
push
push
jbe
inc
and
sbb
cmp
jmp
mov
cmp
mov
mov
jmp
sbb
cmps
jno
aaa
pop
(bad)
lods
das
sbb
or
or
std
call
sbb
push
aaa
je
pop
or
mov
repnz
daa
gs
scas
out
cmc
sbb
inc
shl
jle
jb
cmp
leave
xor
mov
mov
ret
inc
inc
mov
inc
sahf
repnz
jmp
fiadd
cli
mov
jmp
rcl
pop
sub
cmovo
cmp
inc
sbb
imul
xchg
adc
dec
jae
mov
cmp
out
add
pop
popf
loope
fild
or
pop
xor
fs
mul
adc
aas
pop
sub
repnz
cwde
aad
stc
xor
push
stos
mov
pop
es
mov
xor
int
push
rol
jmp
pop
fistp
mov
sti
cs
mov
mov
jmp
mov
fldcw
dec
push
sub
push
mov
mov
loopne
xor
mov
fwait
adc
push
mov
sub
push
pop
daa
popa
add
out
lea
push
jo
jne
dec
ficom
dec
popa
add
(bad)
mov
cmp
(bad)
call
ja
inc
dec
xor
stos
xchg
dec
mov
jmp
out
jl
and
retf
and
lods
cmps
std
and
out
cmp
mov
inc
cs
push
adc
clc
mov
out
pop
test
push
mov
jo
pop
adc
sbb
movs
in
hlt
setns
sbb
cmc
xor
dec
adc
int
cmp
inc
mov
pop
int
ja
mov
mov
pop
call
leave
jle
and
sbb
pop
popa
sbb
xchg
adc
mov
cmps
call
mov
add
stos
stos
scas
jmp
or
or
pop
loopne
stos
pop
inc
sbb
icebp
push
jp
rcl
popf
aaa
outs
and
adc
fild
pop
jg
pop
push
pop
ret
hlt
inc
imul
xor
aad
in
ror
push
les
(bad)
cmp
jecxz
mov
push
add
adc
or
scas
xchg
hlt
sub
inc
sbb
clc
xor
ficomp
and
test
cmpxchg
push
jmp
pop
add
jmp
dec
cmp
enter
push
xchg
mov
jecxz
scas
mov
xor
call
lock
repz
repnz
mov
jecxz
aaa
pop
pop
cmc
in
int3
sar
test
fsubp
jmp
xchg
outs
repnz
ss
movs
jbe
out
jns
cdq
xlat
outs
xor
scas
dec
mov
xlat
inc
and
cmp
lea
aad
or
adc
loope
xchg
sbb
xchg
(bad)
add
xor
aaa
adc
push
cmp
xchg
mov
cdq
mov
mov
(bad)
ficomp
retf
xchg
pop
call
not
fstp
stos
aad
icebp
in
or
ja
xchg
aad
pop
adc
inc
adc
test
mov
movs
pop
cmp
cmps
xor
data16
cmps
aas
push
es
adc
test
movs
repnz
retf
call
jne
mov
aaa
adc
mov
nop
and
sahf
hlt
dec
test
push
ror
call
push
pop
mov
lods
aaa
xchg
add
sub
retf
mov
xor
inc
xchg
(bad)
call
les
or
jo
in
imul
or
xor
ss
push
out
lds
xor
add
sub
aad
sysret
mov
dec
dec
jecxz
xchg
clc
cli
push
cmc
lods
cld
jmp
mov
(bad)
pop
push
add
add
test
jle
jmp
retf
pop
jno
into
mov
mov
mov
in
ror
fisttp
and
test
rcr
jmp
in
inc
and
cmps
adc
adc
out
jbe
fnstenv
hlt
mov
in
push
sbb
not
ror
test
stos
xor
cli
mov
je
(bad)
(bad)
mov
xchg
sti
xchg
adc
pop
(bad)
mov
int3
stos
mov
adc
clc
lds
inc
test
cmp
xchg
and
push
lds
xchg
imul
dec
mov
mov
jmp
fistp
leave
jo
xlat
xchg
gs
(bad)
repnz
dec
ret
push
push
clc
leave
pop
mov
outs
arpl
test
pop
push
call
aad
fstp
xor
sbb
push
lahf
movs
xor
add
jp
and
cmp
test
fdivr
retf
inc
and
sub
sub
push
or
xor
movs
mov
mov
scas
adc
lea
jmp
jp
push
push
mov
pop
ja
mov
jbe
scas
sbb
push
add
dec
aad
in
xor
std
pop
sahf
out
or
adc
push
in
add
pop
mov
into
fs
xor
pop
jge
popf
js
fsubr
sub
or
cmps
shr
sub
aam
aad
and
popf
push
mov
sub
sub
mov
rol
sbb
sbb
int
imul
test
mov
dec
push
loop
xchg
inc
hlt
(bad)
cld
xor
movs
cmp
ds
test
jb
sbb
sbb
adc
dec
arpl
out
(bad)
mov
(bad)
and
(bad)
jae
sbb
adc
sbb
mov
add
jno
xor
jnp
enter
mov
(bad)
out
fistp
bswap
sbb
inc
in
pop
push
mov
push
stos
cmp
bound
ja
lods
jbe
iret
retf
adc
inc
sub
(bad)
sub
pop
stc
lock
test
(bad)
(bad)
outs
inc
sbb
mov
stc
jne
in
aam
jl
inc
call
ret
cwde
mov
xor
xchg
sub
(bad)
(bad)
arpl
sbb
pop
into
mov
push
je
popa
push
sbb
add
inc
mov
out
call
pop
adc
jl
pop
or
rcr
and
add
dec
adc
sub
mov
push
xor
test
inc
and
popa
xchg
jmp
or
mov
loope
or
iret
dec
sub
xchg
fwait
and
movs
fcmove
loop
jne
add
lahf
jno
cmp
dec
icebp
loope
dec
enter
cld
ror
add
adc
pop
imul
xchg
and
xlat
and
pop
jmp
mov
push
rcr
(bad)
ja
out
fbld
adc
or
lahf
push
xchg
pushf
xchg
pop
outs
mov
push
(bad)
pop
in
out
daa
cli
in
int3
fisttp
out
mov
pop
jns
stos
and
fwait
iret
mov
imul
test
loop
jo
loopne
mov
add
pop
xchg
mov
sti
(bad)
(bad)
xchg
sub
adc
fdiv
scas
mov
pop
mov
jle
sbb
dec
sbb
fwait
ret
fcmovb
sbb
retf
into
(bad)
inc
ins
push
adc
das
push
out
cmp
sbb
loope
push
mov
mov
sub
mov
pop
cmp
retf
mov
fisttp
(bad)
mov
loopne
icebp
mov
stc
push
fcmovu
call
jbe
or
jecxz
and
ja
outs
jne
lods
mov
sub
hlt
stos
cdq
or
je
push
xor
pop
cdq
fs
(bad)
mov
xchg
scas
or
adc
push
dec
pop
jg
lock
inc
dec
repz
inc
dec
test
pop
sub
mov
adc
push
shl
jmp
inc
jmp
mov
popa
xchg
les
retf
inc
push
jl
jg
jmp
fcomp
mov
inc
jle
div
dec
sti
jbe
pop
push
or
test
fnstcw
mov
xchg
ja
push
pop
mov
pop
jnp
xchg
push
push
lods
xor
sti
stos
dec
and
inc
sbb
(bad)
xor
mov
aad
xor
pop
in
ror
out
(bad)
mov
mov
and
(bad)
popf
rol
jmp
push
sub
mov
jb
(bad)
(bad)
movs
ins
mov
pop
mov
mov
sahf
fidiv
and
inc
sub
cmp
dec
adc
fidiv
stc
jae
ret
mov
adc
push
dec
dec
mov
fmul
pop
push
dec
and
loopne
(bad)
jge
mov
fs
sbb
cmovne
adc
repnz
xchg
enter
out
or
sti
into
nop
enter
std
pop
out
push
aad
sti
outs
loopne
imul
fwait
push
xchg
push
jo
push
stc
and
rcr
lods
sahf
shl
aaa
mov
pop
cli
imul
cwde
sahf
mov
mov
mov
ja
push
push
arpl
pop
inc
sbb
and
mul
arpl
mov
fbstp
sbb
adc
movs
ret
loope
imul
push
aaa
pop
add
pop
mov
int3
sbb
jns
jo
cmps
push
pop
stos
mov
pop
or
sub
sub
xchg
popa
call
retf
mov
mov
or
sub
push
js
pop
aaa
pop
inc
ror
daa
lea
je
gs
jae
ins
and
push
pop
pop
loope
retf
and
outs
test
ss
es
cmp
inc
test
outs
sar
rcl
or
mov
les
call
or
mov
rcr
mov
ror
pop
bound
dec
test
mov
add
jmp
adc
mov
gs
xor
jp
pop
loope
jae
aad
sub
icebp
dec
pusha
push
aam
jle
adc
push
pop
push
and
sbb
mov
lock
push
xchg
loopne
and
push
mov
add
pop
jbe
(bad)
call
daa
mov
aaa
(bad)
enter
cli
call
mov
sbb
cmps
xchg
mov
mov
es
fdiv
cdq
jl
push
cmc
std
rol
dec
xchg
dec
sbb
je
fstp
ror
ins
mov
out
push
xchg
aam
das
(bad)
cwde
mov
dec
xchg
loope
pop
fstp
xor
cmc
push
scas
xchg
or
cli
mov
dec
add
jle
mov
sbb
outs
and
sar
xchg
repz
mov
data16
mov
mov
mov
and
loop
xchg
sahf
retf
and
out
daa
les
sbb
cmp
ss
cmps
arpl
xchg
or
jae
or
test
push
xor
sbb
lds
mov
shr
dec
fstp
jo
in
outs
lahf
icebp
loope
xchg
or
inc
imul
cmp
sub
dec
test
jmp
mov
and
in
push
mov
fdivr
shl
arpl
stos
call
pop
push
ret
cdq
sahf
retf
xor
lock
xlat
shl
mov
cwde
les
cmp
hlt
movs
xchg
pop
mov
mov
lea
outs
push
cdq
leave
mov
mov
dec
xor
mov
and
mov
push
jecxz
repnz
jne
movs
mov
cmp
cmps
(bad)
scas
(bad)
leave
cmp
mov
lods
daa
jb
cmp
outs
stc
mov
pop
test
pop
popf
scas
push
and
pop
push
retf
push
xor
test
adc
add
sti
inc
std
push
dec
and
cmp
lds
jno
lock
sbb
adc
adc
(bad)
call
xor
mov
shr
jp
dec
fmul
cmp
jbe
rol
push
shl
fild
cmp
repz
or
and
mov
xchg
pushf
sbb
dec
lods
and
sbb
cmp
aas
scas
sbb
out
pushf
jle
mov
mov
aam
ss
sar
stc
or
mov
call
inc
sbb
js
add
nop
sti
or
push
addr16
and
loopne
mov
inc
sub
aam
das
int
fisubr
out
je
cmc
arpl
xchg
stc
(bad)
loope
loope
aam
or
xor
sbb
in
adc
pop
jg
pusha
jne
jp
test
out
popf
mov
inc
push
sbb
or
mov
or
push
jno
ja
xor
movs
inc
data16
inc
cli
push
popa
ins
jl
imul
aaa
push
sub
xchg
pop
in
inc
or
inc
jo
pop
leave
test
in
mov
mov
cmp
idiv
xchg
push
fwait
dec
cmps
outs
leave
push
enter
aaa
in
inc
test
es
adc
sbb
jl
iret
xchg
(bad)
ins
in
mov
xlat
inc
lods
mov
add
adc
mov
xor
test
cmp
add
and
mov
inc
inc
(bad)
lahf
and
fst
aas
or
mov
mov
xor
out
int
out
adc
sbb
retf
xchg
(bad)
(bad)
sub
xchg
mov
cmp
imul
and
fwait
jle
test
jge
and
add
inc
push
xchg
jbe
xor
pop
mov
adc
inc
add
sbb
jmp
push
push
dec
dec
push
mov
popa
out
out
xchg
cld
call
fcmovbe
or
enter
push
dec
mov
mov
jo
sbb
or
mov
imul
shl
xchg
fbstp
inc
or
cwde
mov
jo
add
jmp
xchg
jp
xchg
es
leave
daa
cmp
jo
mov
mov
hlt
cli
retf
sbb
cmp
ret
push
cmps
xlat
jb
out
push
cmp
xchg
xchg
ds
cmps
adc
jbe
pop
(bad)
aam
sbb
lods
sbb
inc
add
cdq
lods
pop
aas
test
push
sbb
inc
fidiv
test
daa
cmp
sbb
js
data16
clc
or
push
loopne
pop
shr
pop
out
jge
outs
mov
clc
and
mov
xchg
mov
clc
cmp
out
(bad)
lods
gs
mov
mov
pop
mov
mov
imul
jb
inc
out
dec
xchg
inc
int3
fsubr
pushf
in
outs
mov
push
jno
aaa
out
aam
mov
sbb
ins
push
nop
mov
push
(bad)
clc
sar
cmp
ja
sub
mov
test
shr
or
or
cmc
mov
ds
pop
mov
xchg
shl
int
test
add
sbb
(bad)
xor
out
fadd
retf
test
out
adc
and
sub
cmp
xor
ds
dec
push
mov
pop
(bad)
(bad)
cmp
push
lock
adc
test
push
mov
mov
outs
clc
sub
pop
xor
mov
mov
pop
arpl
std
adc
out
das
xlat
(bad)
pop
cmp
xchg
sub
aaa
jle
mov
out
dec
mov
cmp
push
and
pop
xor
repz
int3
scas
scas
or
and
jno
pop
rcl
mov
ins
out
mov
(bad)
inc
arpl
mov
cmp
or
arpl
xchg
(bad)
mov
fistp
pop
lods
fdivp
sub
loope
popa
out
aad
mov
mov
enter
or
sbb
test
ins
xchg
ror
mov
out
hlt
and
dec
cmp
inc
std
icebp
clc
ds
pop
ins
fst
stos
mov
int
xlat
xchg
and
fcmovbe
cdq
mov
push
push
cwde
arpl
xchg
in
in
mov
xchg
mov
test
mov
add
(bad)
outs
(bad)
out
mov
(bad)
scas
in
ds
inc
fs
sbb
mul
call
mov
stc
xchg
push
mov
mov
test
and
bound
cmp
and
adc
bnd
sbb
(bad)
push
pop
pushf
jnp
add
mov
add
dec
cmp
cmp
es
jmp
(bad)
shr
in
pushf
adc
imul
jno
cmp
pop
cmp
imul
(bad)
lods
jo
aam
repz
dec
jl
add
sbb
enter
ja
mov
ins
cmp
pop
mov
sbb
movs
xor
push
mov
cmp
mov
retf
fsub
and
and
cmc
inc
dec
and
nop
mov
fs
add
dec
fwait
pop
test
pop
out
in
adc
mov
push
mov
rol
push
mov
cmp
push
add
nop
jno
sti
pop
jnp
(bad)
call
adc
dec
ins
scas
jae
pop
mov
aam
cmp
cs
mov
int
inc
jo
rep
mov
xchg
js
aaa
mov
popf
cmps
mov
inc
inc
and
imul
cmps
xor
jmp
es
mov
retf
mov
retf
jae
inc
out
pop
pop
std
inc
sub
mov
mov
js
aam
es
pop
mov
mov
adc
aam
jmp
test
lods
(bad)
outs
xchg
sub
jmp
js
fstp
imul
push
add
cmc
cmp
mov
mov
inc
cdq
add
stos
pop
mov
mov
sahf
loopne
in
jns
mov
pushf
mov
or
xor
pusha
sub
or
cwde
and
or
fdivr
mov
adc
cmp
fs
shl
fild
fnstcw
mov
jo
ja
das
(bad)
jbe
dec
sahf
add
ins
push
jmp
jecxz
pop
and
outs
clc
call
sub
fs
pop
jmp
popa
stos
cmp
sub
cmp
inc
and
pop
sbb
push
jp
jmp
hlt
or
(bad)
or
sub
inc
test
jnp
fild
out
scas
or
cmp
stc
out
stos
add
icebp
mov
sbb
int3
js
add
pusha
imul
dec
popf
mov
xchg
push
and
dec
jmp
ficomp
jecxz
adc
mov
imul
push
lods
xchg
cdq
in
inc
jno
xchg
or
out
stos
jecxz
lea
test
add
aam
xchg
xchg
cmp
mov
and
sub
mov
add
dec
pop
mov
cmc
movs
je
fcmovb
dec
out
out
xchg
cmp
in
imul
sub
sti
xchg
cmp
lahf
xchg
pop
push
hlt
mov
gs
xchg
ds
mov
jge
into
rol
ret
cmps
test
int3
aaa
sub
add
sbb
add
dec
arpl
xor
fisttp
(bad)
in
dec
stos
loope
and
not
mov
aam
popf
out
js
(bad)
pop
daa
lds
xor
xchg
imul
loope
cld
aam
mov
cmps
xor
push
sub
rol
adc
mov
dec
ss
mov
cmps
push
enter
cmp
int
jne
cmp
aas
dec
fisttp
lds
dec
neg
fldcw
cmps
gs
xchg
push
test
rcr
fdivr
fdecstp
aad
loope
ja
push
dec
pop
sbb
icebp
(bad)
xchg
sub
dec
into
jbe
sub
mov
imul
cmc
lods
pusha
mov
out
inc
sbb
and
les
repnz
jmp
imul
cmp
pop
push
adc
div
aad
daa
jae
test
mov
fmul
pop
int3
push
imul
outs
and
shl
rcr
icebp
add
pop
pop
popf
loope
pop
or
out
or
jg
jo
sbb
ins
add
imul
lods
lea
push
and
pop
cmp
test
push
sub
dec
cmp
jae
mov
popa
retf
pop
mov
push
jae
jl
daa
add
xor
pushf
mov
in
enter
jb
cmp
and
cmp
outs
sub
mov
iret
mov
das
ins
jle
jo
adc
test
leave
cld
jl
add
js
stc
cmp
or
loopne
inc
(bad)
movq
test
and
idiv
out
sub
and
aaa
retf
stos
adc
test
movs
stos
pop
push
adc
jmp
jo
mov
imul
jnp
jmp
stos
into
rol
ds
ds
push
inc
mov
and
push
jb
pop
inc
test
and
fcomp
jmp
pop
(bad)
push
test
mov
mov
out
and
arpl
out
and
push
daa
or
call
popf
jle
jge
adc
and
neg
xor
push
sbb
mov
push
sub
jecxz
aam
cs
rcr
outs
sbb
int3
daa
mov
in
stos
(bad)
push
cld
jecxz
movs
jg
retf
outs
xchg
mov
pop
sub
mov
inc
push
jl
bound
aas
pop
push
or
push
push
mov
movs
xlat
sub
outs
test
mov
stos
in
xchg
iret
ds
xchg
pusha
push
fisubr
movs
ss
xor
push
in
push
(bad)
out
inc
push
adc
retf
out
movs
xchg
loop
arpl
into
xor
or
jae
xor
dec
jmp
jo
pop
mov
mov
or
dec
loop
mov
call
and
dec
pushf
or
push
icebp
(bad)
pop
jae
jne
and
mov
push
iret
scas
clc
sub
push
aam
or
les
pop
pop
and
jmp
in
in
int
push
mov
jb
sub
sbb
fidivr
fistp
leave
dec
cdq
call
or
vcvtss2sd
loope
fsubr
stc
inc
sub
dec
adc
inc
xlat
popf
outs
cmp
push
mov
les
ret
outs
setbe
clc
pop
sub
clc
(bad)
xchg
jecxz
sub
hlt
call
push
(bad)
sub
(bad)
sub
ret
pop
test
cmps
out
iret
mov
pop
xchg
retf
stos
inc
(bad)
cmp
mov
pop
and
(bad)
retf
mov
dec
xchg
sti
retf
loope
or
pop
in
push
cmps
dec
loopne
adc
jo
pop
and
adc
scas
xor
ret
mov
(bad)
jae
and
fldcw
out
dec
sbb
stc
into
adc
mov
mov
or
and
mov
inc
das
jmp
in
push
fwait
jno
and
sbb
fild
or
retf
and
add
pop
dec
mov
inc
mov
imul
cmp
fisttp
test
mov
xor
not
xchg
xor
int3
loopne
sub
rol
icebp
enter
test
in
or
ins
out
(bad)
cmp
out
mov
cmp
add
jle
xchg
fstp
xlat
aad
les
jae
movs
(bad)
mov
jp
or
fwait
loope
or
sub
(bad)
jle
mov
mov
sub
and
pop
sub
xor
sbb
nop
jns
in
add
mov
xchg
leave
ret
pop
std
imul
mov
int
dec
pop
xchg
push
push
and
jecxz
mov
and
neg
inc
enter
movs
inc
imul
mov
dec
pop
fwait
xchg
aad
mov
cmp
ret
cmp
cli
sti
loopne
jne
repz
ins
fst
xor
ds
jmp
or
popf
push
sbb
aad
pop
ror
adc
aas
xchg
mov
pop
sbb
xchg
test
xchg
xchg
and
xchg
pop
xor
add
and
and
cmp
push
and
and
fwait
cmp
push
in
sub
imul
mov
xor
push
or
icebp
sub
add
in
movs
push
pop
imul
push
lahf
sbb
(bad)
jle
test
addr16
cwde
push
(bad)
fbstp
enter
pop
ins
pop
pop
jl
imul
mov
mov
imul
sub
cmc
icebp
add
in
ins
aas
ret
push
sub
xor
int
mov
hlt
mov
add
pop
push
rcl
or
dec
lea
out
cmp
add
fst
xor
lds
aam
dec
adc
mov
das
stos
mov
push
pop
shr
push
pop
pop
(bad)
jp
out
enter
js
pop
outs
jnp
retf
mov
mov
xchg
addr16
into
xchg
sub
ins
sbb
jge
lea
sbb
fidiv
imul
pop
pop
pop
or
dec
mov
or
sub
mov
dec
mov
sbb
ja
add
mov
pop
mov
and
test
add
and
cmp
aad
xor
pop
push
pop
imul
dec
adc
test
icebp
add
(bad)
jb
mov
ins
dec
pop
add
inc
dec
sahf
in
mov
sbb
mov
pop
pop
imul
sub
jne
pop
mov
gs
in
mov
mov
inc
dec
stc
push
dec
mov
loop
mov
(bad)
cli
adc
add
sbb
push
xchg
inc
cmp
movs
movs
push
xor
mov
sbb
ret
mov
hlt
mov
pop
sub
jae
jbe
push
ret
sub
mov
pop
test
loop
rcr
arpl
dec
pushf
mov
inc
mov
mov
cmp
jbe
(bad)
vcvtps2dq
sbb
bound
test
int
cmp
fwait
push
cmps
dec
sbb
mov
lea
cmp
jns
adc
call
enter
sahf
popf
pop
bound
sete
bound
dec
mov
out
les
jge
mov
ret
clc
popa
add
push
rcl
pop
dec
loop
inc
push
loopne
add
movs
pop
inc
jl
dec
jne
push
mov
hlt
mov
jl
stos
movs
mov
call
adc
or
aaa
scas
pushf
push
mov
push
out
pop
jns
and
xchg
sub
push
ret
int3
cmc
xor
mov
sbb
mov
retf
outs
jnp
pop
popa
jmp
fcom
andnps
dec
mov
xchg
scas
mov
test
pop
shl
es
(bad)
push
fdiv
mov
jle
clc
adc
imul
pop
cdq
jb
mov
sar
(bad)
jmp
ds
cmp
or
pop
imul
(bad)
xlat
lods
rcl
jnp
scas
jb
hlt
cmp
ins
add
cmps
pop
daa
and
cmps
int3
adc
lods
jle
jbe
ins
loopne
out
dec
popa
cmps
mov
icebp
inc
(bad)
jmp
retf
xchg
jmp
xchg
mov
sub
test
sbb
scas
daa
dec
in
data16
sbb
pop
imul
lods
rol
lods
sub
sbb
xchg
inc
imul
add
lods
fistp
cmp
dec
xchg
jno
mov
pop
mov
jmp
aas
adc
mov
jno
jecxz
jmp
in
outs
xchg
out
xchg
xchg
ret
jno
loop
imul
cwde
adc
out
xor
xchg
add
jae
cmps
loop
mov
xchg
ds
es
fidiv
scas
xchg
in
and
mov
jmp
and
aad
fst
int3
fs
or
xchg
mov
pushw
pop
adc
xchg
pop
(bad)
inc
(bad)
out
(bad)
repz
shl
push
sbb
aad
repz
les
aam
push
shr
xor
ret
mov
sbb
mov
outs
jmp
mov
sub
mov
(bad)
stc
mov
inc
adc
popa
cdq
imul
fld
scas
add
sbb
sar
sbb
lahf
gs
retf
lods
pop
icebp
cmp
mov
add
xchg
(bad)
ins
add
jecxz
xor
inc
xchg
inc
and
aad
js
ds
cmp
ins
xor
mov
mov
sar
in
aas
and
xchg
sti
dec
sub
xchg
inc
(bad)
shl
ficom
test
adc
int3
sti
cmp
inc
lahf
add
aam
pusha
mov
ins
cli
xchg
loop
pop
je
mov
jp
jnp
inc
xchg
push
lods
cwde
xchg
ror
jns
cmp
mov
fist
xchg
add
add
aam
cmp
imul
xchg
push
cmp
(bad)
retf
cld
out
(bad)
fld
mov
pop
push
nop
xor
inc
mov
mov
aaa
outs
inc
(bad)
clc
stc
jno
cmp
les
mov
push
cld
call
sub
inc
rcr
sbb
lock
ficom
mov
das
xchg
loopne
test
shl
addr16
lds
or
xchg
jmp
push
jno
mov
sub
and
mov
sbb
inc
pop
cmp
das
call
cs
push
mov
pop
mov
icebp
fiadd
punpckldq
sti
mov
and
retf
(bad)
aam
jg
arpl
lock
jno
mov
push
sbb
or
inc
mov
cmp
xlat
push
inc
add
pop
in
xchg
cli
stc
xchg
sbb
out
sbb
jnp
push
pop
dec
(bad)
mov
(bad)
mov
push
push
in
pop
pop
aam
cdq
xchg
push
out
adc
pop
xor
mov
xchg
aad
inc
mov
lods
jne
sbb
out
daa
or
aas
imul
cs
pop
mov
cmc
pop
pusha
ret
loopne
dec
push
pop
add
and
repnz
mov
in
xlat
js
inc
push
cmps
push
stos
xor
inc
sub
repz
mov
test
dec
xchg
out
dec
ficomp
push
jo
add
inc
int
sbb
ss
sti
aad
cmp
cmp
and
loope
out
pop
out
xor
pop
xchg
in
mov
adc
leave
xor
sub
imul
pop
movs
adc
std
xchg
loop
movs
inc
push
rcl
xchg
mov
push
add
or
repnz
sub
cli
xor
mov
cwde
stos
jbe
inc
pusha
dec
sbb
fcmovnb
add
dec
mov
pop
sbb
xor
cld
sub
(bad)
push
pushf
or
rcl
out
movs
aas
xor
mov
mov
cmp
lock
inc
movs
xchg
lock
xchg
mov
pop
xchg
(bad)
cmp
inc
sub
and
xlat
in
xchg
les
inc
scas
pop
out
inc
ins
ja
mov
pop
mov
retf
push
mov
sahf
daa
cmc
add
mov
loope
lahf
nop
adc
stos
jge
imul
jecxz
and
rol
stc
mov
stos
pop
iret
jg
out
xchg
pop
ins
pop
pop
sub
out
xor
fsub
ins
js
pop
xchg
mov
sti
mov
outs
call
sar
sbb
push
cmp
pop
cmps
aaa
mov
pop
rcl
pop
bound
pop
push
sar
into
pushf
and
push
mov
sbb
test
popf
sar
or
jl
ret
not
xchg
popa
lds
cmp
mov
test
pop
imul
or
test
movs
sbb
call
mov
retf
fmul
out
outs
mov
or
pop
jae
movs
jne
jg
ins
cmp
jno
ins
cmp
push
mov
sub
mov
jecxz
inc
sub
aaa
aam
adc
and
mul
dec
mov
jle
mov
mov
jno
(bad)
(bad)
jl
call
iret
add
pop
call
mov
leave
jmp
jae
outs
or
and
repnz
frstor
fist
cwde
das
mov
cmp
push
out
or
ja
dec
js
sar
aaa
add
les
push
shl
mov
cwde
dec
xchg
(bad)
pop
repz
and
call
sub
jg
je
adc
idiv
mov
fwait
addr16
popf
xor
mov
sub
xor
mov
out
inc
push
lods
mov
and
dec
iret
sbb
inc
mov
lods
cmps
adc
test
out
sub
sbb
push
cmp
test
call
xchg
gs
or
cli
(bad)
fadd
or
sub
lods
es
adc
call
test
xchg
sub
scas
push
es
push
jno
add
ds
addr16
sub
fdiv
lds
mov
mov
loop
dec
popf
mov
sub
divps
fdivr
sar
adc
lock
pop
sti
inc
xor
rcl
outs
add
retf
lods
aam
xlat
cmp
mul
mov
jae
jnp
or
iret
mov
lods
push
xchg
push
cmps
addr16
xchg
pop
mov
(bad)
int
sti
div
(bad)
mov
mov
int3
mov
(bad)
push
dec
mov
ins
sbb
out
lods
scas
dec
test
daa
add
sbb
leave
jb
sbb
ret
xor
daa
adc
xchg
pop
sbb
ins
cmp
out
pusha
jbe
sbb
scas
inc
fiadd
jo
aam
outs
shl
sub
or
ret
jg
sahf
in
pushf
call
out
adc
(bad)
xlat
outs
(bad)
js
inc
or
cmp
je
test
mov
jnp
mov
dec
iret
movs
mov
ss
sbb
sti
outs
in
idiv
xchg
mov
ss
or
clc
pushf
jae
fisubr
jge
mov
stos
out
loope
and
sbb
repz
fdecstp
ins
hlt
xchg
jnp
aas
adc
jmp
cmp
adc
test
pop
xchg
fimul
sti
inc
xor
pushf
xchg
cmp
fs
ins
mov
xchg
mov
push
xchg
cmp
hlt
scas
jb
push
xor
push
(bad)
cmps
enter
inc
test
mov
or
sbb
popf
jmp
xor
adc
cmps
popf
movs
and
leave
jmp
imul
lods
sub
repz
push
js
xchg
jo
xchg
pop
or
and
jmp
aas
pop
cmp
sar
jo
mov
cmp
mov
call
pop
(bad)
xchg
pop
aaa
ins
or
pop
mov
mov
bound
mov
cmp
mov
jmp
imul
dec
cmc
loop
scas
inc
add
inc
mov
jns
mov
loop
add
fxch
mov
jle
xchg
scas
adc
rcr
jecxz
jnp
adc
sub
push
daa
cmp
pushf
retf
fld
add
and
imul
sbb
and
fild
(bad)
add
add
and
loop
fcom
outs
nop
cmp
pop
jle
mov
dec
push
sub
sub
or
sub
push
cmps
nop
scas
(bad)
sbb
into
scas
ds
out
and
inc
cmp
scas
add
cld
add
push
mov
loop
mov
adc
mov
pop
ins
jp
fsubp
bound
cmc
sub
repnz
lock
or
fcomp
in
sub
cmp
dec
xlat
int3
(bad)
movs
dec
(bad)
jl
les
pop
int
and
nop
sbb
pop
or
out
rcr
rol
sub
ficomp
dec
sub
popa
es
mov
(bad)
cmp
push
push
jns
aam
(bad)
mov
movs
mov
mov
dec
mov
aam
mov
shl
rcl
loop
mov
bound
nop
adc
(bad)
or
push
push
cdq
cmp
in
and
mov
lods
ins
sub
pop
loop
aam
add
cmps
dec
push
fidivr
push
ins
push
mov
bound
int
call
outs
jno
test
daa
inc
loope
xchg
out
xor
ins
pop
xchg
inc
daa
popf
iret
fxch
out
jmp
xchg
sub
data16
mov
jnp
arpl
and
(bad)
mov
mov
pop
out
adc
dec
pop
mov
sbb
int
cmp
lods
loope
jo
dec
movs
js
dec
stos
data16
jmp
les
imul
pushf
cmps
in
ficomp
lahf
cwde
jl
out
(bad)
or
mov
aaa
dec
stos
or
fnstcw
mov
int
xchg
setno
shr
leave
dec
cmp
dec
xor
pop
inc
(bad)
ror
mov
pop
(bad)
or
push
movs
cmp
cwde
lods
aaa
mov
pop
enter
inc
int3
pop
popf
or
js
call
out
scas
or
adc
xchg
loop
cdq
sbb
dec
movs
sbb
and
push
sbb
sbb
jg
xchg
mul
outs
jne
pop
pop
cmc
push
fadd
push
mov
sub
push
push
sub
(bad)
jbe
push
jae
into
in
jle
rcr
je
mov
imul
cs
jbe
or
or
jmp
xchg
fadd
mov
mov
mov
jmp
and
pop
and
ss
fstp
and
mov
hlt
aaa
jb
adc
test
ret
pushf
mov
jno
or
cs
jecxz
lea
das
inc
or
lock
xlat
cs
out
pop
xchg
fwait
cmp
add
cs
shl
ss
(bad)
jle
add
dec
sub
inc
sub
sub
jbe
push
sbb
or
push
mov
mov
das
icebp
shl
call
jmp
shr
mov
ins
in
(bad)
sbb
jbe
or
sar
ds
push
jnp
out
out
xchg
aam
repnz
jecxz
loopne
sbb
test
inc
not
ins
dec
push
fld
cwde
mov
push
xchg
(bad)
pop
sbb
add
ja
dec
loopne
fcmovbe
sbb
mov
(bad)
enter
je
neg
test
xchg
or
mov
fisubr
inc
add
(bad)
loop
jae
(bad)
into
dec
or
pop
jno
shr
mov
lock
(bad)
mov
repz
cld
push
call
stos
push
lock
push
push
scas
int
cmp
inc
sbb
dec
fisub
mov
and
or
cdq
cli
and
cdq
sub
(bad)
mov
mov
cmp
sbb
mov
imul
push
sbb
cmc
stos
and
aad
mov
shr
push
aad
sbb
popa
stc
fwait
fwait
cli
shl
int
add
lds
jno
pop
jnp
sbb
xchg
xchg
fwait
or
mov
jo
adc
pop
rcr
sub
lea
mov
sub
and
xor
mov
pop
cwde
push
add
and
sub
dec
dec
pop
jecxz
sub
shr
sbb
mov
or
dec
xchg
fwait
lahf
out
popa
in
popf
mov
repnz
fs
movs
popa
and
xchg
cmp
push
pop
ror
jmp
pop
lahf
xor
push
inc
pop
shl
jg
mov
mov
popf
inc
fwait
jbe
arpl
ficomp
mov
sbb
cmp
jbe
jecxz
jecxz
out
enter
adc
rol
scas
ins
adc
adc
scas
loope
cmp
addr16
pop
je
and
mov
cmc
pop
mov
sub
imul
mov
push
jno
imul
jl
xchg
repnz
add
xchg
ror
nop
xor
movs
xchg
test
mov
xchg
adc
inc
pop
push
(bad)
push
push
push
jbe
mov
and
sub
shl
mov
or
dec
pop
pop
stos
adc
pop
mov
pandn
dec
clc
pop
iret
lock
addr16
pop
popa
mov
adc
movq
ficom
mov
sub
jle
mov
sbb
pop
push
sahf
xchg
mov
(bad)
mov
lea
call
mov
mov
dec
outs
js
or
iret
test
arpl
mov
retf
cs
out
in
fadd
cmps
cmp
cmp
push
in
fst
stos
(bad)
or
sub
pushf
repz
mov
xchg
inc
pop
pushf
push
dec
rcl
fs
push
xchg
pushf
push
in
add
jmp
push
jmp
lock
mov
mov
pushf
retf
std
ret
das
out
ja
jmp
stos
(bad)
pop
lods
imul
pop
retf
cmp
cdq
push
(bad)
xor
repnz
rol
or
das
xchg
jge
in
add
in
mov
push
fdiv
mov
(bad)
movs
dec
jp
mov
sbb
jle
retf
(bad)
cmp
sbb
mov
sbb
(bad)
dec
