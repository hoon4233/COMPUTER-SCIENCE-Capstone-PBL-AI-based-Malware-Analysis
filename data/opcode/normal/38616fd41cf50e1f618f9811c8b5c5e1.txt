mov
adc
add
inc
outs
outs
ins
gs
outs
add
or
add
(bad)
jmp
add
jb
gs
push
jns
je
ins
add
xor
or
jae
jge
(bad)
inc
push
push
xor
push
or
out
in
das
add
push
push
outs
out
inc
(bad)
je
cmp
(bad)
jg
aaa
ins
popa
ins
ins
std
stos
int3
mov
cmp
mov
gs
xor
fisub
cmp
das
add
jns
iret
(bad)
fidiv
shr
push
int3
fs
call
test
jb
pop
cld
out
inc
popa
push
sub
add
adc
add
ss
icebp
add
cmp
push
inc
jns
pop
add
dec
xchg
mov
sti
popa
je
jbe
dec
jae
je
lock
out
xor
ss
scas
mov
sbb
push
mov
sti
cmp
fs
mov
inc
outs
jne
mov
(bad)
out
ins
jo
aas
aam
stc
outs
jmp
jne
jb
arpl
daa
call
out
(bad)
call
jb
fdivr
es
push
xchg
retf
popa
xor
adc
das
push
imul
sub
or
mov
push
pop
enter
pop
dec
outs
outs
addr16
jne
aas
inc
mov
push
jae
mov
lock
or
or
or
xlat
and
gs
xchg
les
or
push
popa
push
xor
push
(bad)
popa
jl
pop
or
and
outs
call
ins
popa
jae
pusha
sbb
jecxz
adc
push
dec
push
adc
mov
push
add
inc
adc
(bad)
adc
inc
xor
sbb
popf
jge
inc
push
xor
dec
or
xor
sar
(bad)
push
or
outs
jo
inc
jno
test
iret
je
je
ret
add
adc
add
gs
push
mov
push
imul
in
popa
add
mov
add
dec
imul
inc
cli
cmp
xor
(bad)
jge
in
ja
jb
popa
arpl
adc
adc
add
add
sti
or
andps
sbb
adc
dec
fisttp
add
(bad)
in
sbb
movs
cmp
hlt
push
push
push
popa
or
pushf
adc
mov
pop
push
dec
data16
and
adc
enter
or
jo
inc
mov
or
pop
nop
not
jle
les
imul
ror
in
jne
push
dec
jnp
fisubr
pop
imul
sub
dec
cld
hlt
fs
in
cmp
jb
add
add
mov
popa
jge
je
add
idiv
push
push
lods
imul
push
push
cld
push
sbb
stc
cmp
and
and
jo
mov
push
ja
add
mov
inc
aam
ins
in
push
inc
adc
inc
punpckhdq
sahf
pushf
cmp
xlat
add
sub
dec
dec
push
xchg
into
or
repnz
and
inc
(bad)
xchg
out
jns
sbb
test
call
add
xchg
pop
mov
jp
jmp
stc
stc
repnz
(bad)
cmp
jmp
jmp
iret
je
dec
add
dec
dec
pop
icebp
mov
bound
arpl
test
inc
inc
jb
popa
or
add
popa
mov
push
gs
data16
and
fmul
inc
inc
xor
sahf
cmps
ds
or
pushw
inc
ja
movs
or
inc
or
push
icebp
add
dec
test
ja
das
add
cmovae
jne
xor
sub
out
mov
push
jns
push
in
inc
xor
rcl
jl
(bad)
dec
popa
ins
and
adc
adc
repnz
add
or
mov
add
add
call
sub
fs
push
popa
push
je
shl
jno
hlt
push
inc
seto
push
adc
movs
std
xchg
imul
repnz
loopne
push
pusha
inc
jae
outs
ins
jae
in
push
ja
push
inc
add
dec
push
or
ins
inc
fs
in
in
pop
repnz
in
jne
push
stos
mov
lods
mov
add
adc
popa
add
cs
cmp
data16
jl
inc
fstp
add
add
inc
or
fwait
out
dec
sub
pop
add
test
inc
ins
sub
add
push
add
sbb
pop
adc
or
ror
mov
xchg
add
push
mov
xchg
pop
pop
pop
xchg
ins
adc
repnz
xchg
push
mov
adc
popa
cmc
jge
add
mov
fisub
push
arpl
addr16
or
stos
push
imul
sbb
adc
or
xchg
dec
lock
mov
ds
mov
push
outs
cdq
and
and
ins
(bad)
out
mov
push
popa
gs
pusha
inc
js
jo
imul
outs
push
clc
aaa
ins
rol
mov
dec
retf
or
sub
(bad)
not
data16
jne
mov
sub
and
popf
xor
gs
cmp
or
js
inc
imul
dec
ffreep
mov
dec
test
inc
aas
icebp
popa
xchg
push
(bad)
xor
scas
outs
fs
jge
jo
pop
sbb
dec
gs
ret
or
out
ds
pop
rep
jns
jl
les
pop
lds
icebp
cmps
lahf
sbb
pop
dec
or
fs
xor
cmps
(bad)
fmul
shl
rcr
in
cmp
jne
push
imul
or
int3
add
add
int3
cmp
mov
inc
and
clc
jmp
adc
cdq
or
and
imul
fsubrp
es
inc
cs
int3
push
push
es
sti
and
pop
call
inc
sbb
lds
scas
test
or
push
repnz
add
(bad)
push
loop
pushf
popf
or
push
dec
ins
sbb
dec
dec
pop
pushf
push
sub
adc
inc
ror
fs
xor
and
das
in
pop
mov
popa
push
and
cmp
ins
xlat
pop
(bad)
mov
pcmpeqb
sbb
push
jecxz
or
and
or
add
mov
cmp
or
lods
rol
dec
movs
(bad)
das
cmp
das
push
push
push
(bad)
arpl
jle
fidiv
mov
ins
adc
push
inc
loop
inc
jb
and
mov
loopne
jg
jno
or
add
and
sub
sub
daa
les
push
inc
popa
inc
aas
xchg
outs
jbe
imul
push
jne
icebp
sahf
add
out
(bad)
fsub
cmp
sbb
ins
pop
test
ja
mov
jl
sub
or
cmp
mov
call
xchg
ins
sbb
jo
push
or
xchg
sbb
add
ins
sbb
add
cwde
jae
or
cdq
pusha
mov
ins
or
dec
jb
ins
arpl
movs
or
and
out
pusha
test
call
and
push
push
push
gs
sbb
push
cmp
in
mov
dec
nop
and
xchg
or
adc
sbb
push
inc
scas
or
jae
jbe
movs
loopne
inc
mov
xor
xor
adc
cmp
push
aas
mov
pop
push
mov
and
xchg
test
fistp
add
shl
sahf
jo
adc
xchg
xchg
add
cmp
pop
xchg
cmp
cwde
outs
dec
inc
fistp
sub
push
outs
ins
push
(bad)
imul
fs
push
ficomp
push
push
mov
fisub
int3
movs
fst
sbb
ins
lods
adc
or
dec
push
pusha
dec
lock
imul
and
add
jmp
or
mov
adc
mov
jne
cdq
push
jae
jbe
int3
and
cdq
and
mov
fbld
pop
push
popa
ja
xor
cmp
xchg
push
aas
push
cld
jp
pop
xchg
data16
cmp
push
mov
push
ja
das
adc
popa
pop
mov
cmp
adc
push
adc
push
push
rcr
fsub
sbb
out
aad
pushf
mov
jg
frndint
femms
nop
and
dec
outs
fs
and
test
inc
das
sbb
mov
fs
mov
push
dec
xchg
into
add
jo
pop
es
or
das
or
dec
adc
das
adc
or
lock
sub
test
dec
cmp
call
push
or
in
add
vmread
push
or
add
xchg
lahf
dec
fistp
jne
in
mov
les
xchg
fistp
(bad)
adc
stos
jne
mov
xchg
aaa
push
lods
jge
in
xchg
or
movs
shl
add
or
cmpxchg
adc
loopne
adc
dec
jne
bound
ja
imul
adc
or
popa
mov
retf
mov
push
sbb
lahf
nop
mov
mov
lock
add
js
icebp
in
ret
nop
xchg
adc
mov
in
mov
aam
dec
mov
cmp
int
push
mov
mov
push
mov
dec
outs
daa
mov
lods
test
dec
dec
dec
dec
mov
dec
dec
dec
nop
mov
dec
cmp
dec
dec
dec
jo
add
dec
dec
dec
fs
pop
pop
dec
dec
dec
dec
push
push
dec
dec
dec
dec
dec
dec
inc
inc
cmp
daa
and
xor
cld
xor
fmul
daa
lock
dec
sub
cmp
and
pushf
mov
cld
(bad)
sbb
mov
push
call
pop
xchg
pop
jl
and
ret
mov
ins
sbb
addr16
sbb
mov
add
inc
stc
(bad)
push
sbb
test
je
movzx
mov
add
pop
ret
adc
(bad)
or
or
jne
test
add
mov
push
mov
or
and
outs
arpl
jb
mov
imul
xor
sub
mov
cmp
and
imul
xchg
inc
inc
repnz
push
aam
cmp
call
dec
lahf
lock
and
and
arpl
fs
popa
pusha
(bad)
cmps
push
pusha
pop
jae
and
pop
retf
sahf
adc
or
jl
jae
jle
popa
dec
pop
xor
fmulp
cmp
pop
outs
and
div
test
and
cwde
or
mov
add
inc
in
mov
mov
cs
push
fwait
jle
adc
mov
mov
dec
add
rcr
daa
and
sub
ds
xor
push
adc
adc
adc
dec
sti
dec
sbb
sub
push
xor
cs
fistp
add
sub
aas
push
call
sub
dec
shl
xor
push
pop
xor
mov
bound
xor
cmp
imul
jmp
retf
jns
fistp
ins
add
jl
int3
neg
fild
cmp
add
js
and
mov
inc
fcmovnu
mov
pop
add
dec
or
mov
add
dec
push
mov
cmp
int
push
inc
mov
popa
add
and
push
mov
mov
rcl
test
je
push
sub
call
iret
add
dec
jne
pop
pop
dec
lahf
in
xchg
out
cmp
xchg
and
push
rcr
pop
fild
aas
adc
ror
push
sub
jg
mov
shr
movzx
mov
and
sar
pop
mov
and
jmp
test
or
inc
sbb
and
add
mov
mov
cmp
mov
add
ror
retf
or
sbb
loopne
cmp
jg
outs
mov
cld
add
or
adc
mov
add
clc
cmp
xor
lock
and
sub
mov
mov
mov
test
push
or
add
xor
dec
inc
imul
adc
cmps
add
mov
enter
push
mov
mov
ins
mov
mov
adc
jecxz
loopne
in
(bad)
sti
push
sub
mov
mov
rol
or
jle
mov
pop
and
sub
ret
in
(bad)
dec
(bad)
push
mov
adc
iret
mov
adc
add
and
pop
push
pushf
push
xchg
mov
(bad)
pop
lock
or
pushf
push
lock
cld
sbb
mov
sbb
add
imul
push
out
ret
pop
faddp
add
mov
sub
jae
pop
mov
mov
mov
push
and
or
test
cmps
inc
pop
jmp
loop
jns
hlt
in
(bad)
add
(bad)
jmp
or
cmp
in
push
push
lea
in
test
pop
push
jne
push
into
hlt
(bad)
jg
mov
cmp
jbe
sub
add
jmp
test
jne
in
(bad)
loopne
push
rcr
mov
add
fisubr
dec
mov
add
nop
inc
loopne
repnz
mov
cwde
in
sub
pusha
(bad)
fadd
pop
hlt
jbe
loope
pop
shl
add
cmp
jbe
jmp
out
mov
xor
and
add
call
push
mov
aas
cmp
lods
jne
and
mov
cmp
jae
mov
push
aas
dec
and
std
fidivr
ret
jae
fdiv
movs
je
popa
loopne
rcl
add
pop
push
xchg
jo
clc
int
js
add
push
or
lds
and
or
jbe
ret
push
fnstenv
inc
adc
xchg
dec
sbb
and
mov
lock
adc
shr
cmp
jb
add
das
ins
xchg
cmps
sub
and
movs
sti
jle
mov
xor
push
add
cmp
mov
ror
int3
test
jl
adc
add
sbb
mov
xchg
inc
ss
jge
xchg
cmp
movs
add
and
fld
jne
(bad)
(bad)
je
(bad)
sub
add
(bad)
mov
dec
add
sar
adc
jbe
mov
cmp
lods
sub
pop
or
or
mov
push
jl
test
je
add
cwde
scas
cmp
pause
xor
je
cmp
jnp
lods
inc
jmp
inc
and
ds
and
out
jl
ins
inc
or
mov
icebp
out
sub
mov
add
sbb
lea
lea
ja
outs
inc
pop
push
add
cmp
jne
mov
add
xchg
test
btr
mov
int
jmp
add
dec
jnp
sub
lea
add
aaa
(bad)
mov
jbe
movs
aaa
cmp
jb
mov
aas
es
lea
mov
sub
sub
mov
jmp
ds
push
mov
out
or
fs
cld
test
xor
das
mov
mov
mov
mov
and
pop
push
adc
imul
iret
mov
adc
rcl
addr16
out
dec
sub
or
sub
loop
jge
mov
movs
or
fadd
pop
into
mov
lea
pop
hlt
call
or
test
loope
rol
or
jmp
mov
mov
sub
ror
jl
mov
push
bsf
mov
shl
xor
push
js
jb
sbb
fdivr
xchg
mov
jmp
mov
dec
cmp
scas
mov
aaa
int
xchg
inc
inc
cmp
mov
xchg
adc
test
push
pop
xor
xor
mov
setno
(bad)
shl
in
pushf
test
pop
es
ret
jns
or
out
push
shl
sub
add
ds
fisttp
push
jmp
icebp
ror
pop
data16
cmps
pop
das
mov
mov
daa
push
xor
stos
fimul
aad
inc
or
cmp
jne
push
push
or
ins
push
mov
iret
adc
es
cmps
push
cmp
push
push
mov
pop
leave
outs
mov
dec
fidiv
or
aam
inc
inc
xchg
ror
(bad)
out
loop
fmul
mov
test
jne
or
daa
cld
lahf
adc
inc
cld
or
cmp
inc
js
jo
fiadd
xor
xchg
mov
xlat
mov
adc
pop
and
ror
fbstp
retf
cmp
je
(bad)
ficomp
clc
sub
sub
sub
push
lahf
add
mov
test
loope
jnp
ins
out
clc
add
retf
add
inc
xor
test
mov
loopne
add
xchg
add
ret
mov
xor
fisubr
rol
in
or
in
fidiv
lods
or
cmp
jb
sbb
sub
pop
pop
cmp
jb
jns
jb
dec
or
mov
ret
jle
inc
retf
mov
test
lea
pop
(bad)
(bad)
in
push
mov
loop
rol
add
hlt
mov
jbe
clc
iret
mov
sub
xchg
xor
lahf
jne
mov
mov
add
xchg
stos
call
jecxz
cmp
push
xchg
cvttps2pi
cmp
jb
in
push
fs
and
jmp
out
pop
fs
and
repnz
xor
pop
xor
cmp
fdiv
ja
pop
inc
or
sub
pop
cld
or
mov
push
mov
ss
aas
mov
jne
or
adc
pop
data16
jle
aad
mov
rol
xlat
sub
clc
cmp
(bad)
cmp
sahf
sub
rcl
lea
mov
push
push
out
lock
inc
lds
loope
mov
test
mov
sbb
rol
dec
fistp
cmps
or
or
xor
cwde
sub
ret
jle
sbb
iret
ja
cwde
loopne
je
xchg
(bad)
pop
mov
pop
mov
shr
add
xor
sub
adc
fiadd
add
lea
ja
and
inc
add
adc
jle
outs
push
jp
jl
mov
push
pop
add
add
or
mov
rcl
mov
pop
rcl
dec
(bad)
clc
lock
iret
push
gs
loop
cmp
or
jge
xor
push
clc
xor
and
sbb
jge
mov
lea
jecxz
(bad)
(bad)
lea
or
fist
sti
cdq
jae
neg
fldz
fst
add
js
or
rcr
xor
test
aas
imul
add
mov
sbb
test
jne
xor
pop
std
aaa
sub
fbstp
adc
fild
jb
dec
mov
shr
sbb
jg
sub
stos
push
mov
sub
jle
cmp
jne
mov
fdivr
mov
push
pop
adc
sbb
jmp
sbb
sbb
inc
add
fmul
mov
push
mov
mov
test
test
shl
div
nop
push
add
push
sub
inc
mov
sub
jmp
xor
adc
test
jne
mov
xor
cmp
rcl
xchg
jnp
adc
push
icebp
mov
mov
test
iret
xor
sub
repnz
rcr
mov
scas
adc
sub
mov
push
ds
arpl
sbb
nop
push
mov
push
add
adc
out
jbe
dec
jmp
push
mov
shl
mov
add
jecxz
jg
jo
jae
xor
leave
mov
push
adc
mov
inc
sbb
add
push
adc
std
test
adc
add
emms
push
std
jmp
mov
pop
pop
inc
or
sub
iret
mov
xchg
and
call
push
push
ins
mov
cmp
test
xchg
pop
es
ja
mov
and
xor
sti
fimul
les
dec
mov
idiv
lea
mov
and
or
stc
push
ret
sbb
pop
push
(bad)
pushf
xor
pop
inc
in
sbb
mov
push
sbb
sbb
sbb
in
xchg
fwait
adc
cli
or
jne
add
leave
add
mov
pop
loope
mov
pop
sub
movs
sub
aas
fimul
sbb
add
inc
icebp
and
xor
out
xchg
cmps
mov
mov
push
rol
or
fwait
mov
jl
sub
es
pop
mov
cmp
jne
add
push
mov
jbe
fist
and
mov
add
dec
jne
mov
sbb
fdivr
add
push
add
call
cmp
add
lea
pop
clc
scas
jmp
dec
fmul
loopne
in
sub
mov
sbb
pop
imul
jne
sbb
sbb
sub
fld
dec
mov
sub
mov
test
jle
(bad)
mov
clc
add
ins
mov
inc
hlt
adc
inc
add
sbb
lock
add
loopne
(bad)
adc
pop
mov
jbe
add
cdq
test
inc
test
add
dec
aas
ror
and
jle
adc
cmp
stos
imul
and
cmp
jae
add
sub
fdiv
cmp
test
push
bound
jb
jb
call
and
call
and
mov
pop
add
das
mov
popa
sub
je
or
inc
xor
jg
mov
cmp
inc
fiadd
adc
add
xchg
(bad)
jbe
mov
pop
mov
push
dec
jne
data16
mul
mov
push
in
idiv
ds
pop
inc
add
mov
mov
dec
mov
test
push
mov
rep
mov
sub
call
add
rcr
je
mov
push
lock
shr
lea
enter
jge
and
add
mov
and
xchg
hlt
sub
(bad)
mov
mov
cmp
ret
jecxz
adc
mov
clc
jb
ficom
ds
aaa
inc
adc
fld
mov
aad
in
fcom
idiv
add
dec
jl
cmp
mov
call
mov
fadd
pop
sbb
mov
loopne
xor
cld
dec
out
in
sbb
adc
add
in
imul
idiv
lock
scas
cmp
ja
adc
lock
out
push
add
pop
rcl
dec
sbb
add
nop
(bad)
push
mov
inc
push
or
ja
mov
clc
and
pop
push
mov
xor
push
push
in
imul
or
push
cld
call
out
add
je
dec
je
jmp
in
in
outs
or
inc
mov
in
mov
or
inc
cld
xor
enter
pusha
js
rcl
inc
xchg
dec
mov
cmp
(bad)
lock
push
cmp
fist
pcmpeqw
xchg
sbb
sub
jecxz
or
xchg
jbe
pop
adc
aaa
pushf
sbb
out
adc
sbb
pusha
imul
mov
pop
jb
inc
xor
mov
cmps
dec
inc
shl
je
xlat
add
jmp
aaa
add
(bad)
inc
push
div
mov
adc
mov
sub
push
ror
mov
sbb
pop
lock
pop
(bad)
cmps
sub
and
push
loopne
fsub
out
add
fdivrp
or
add
or
or
sub
mov
cmp
ret
sub
(bad)
push
mov
aaa
mov
pop
mov
adc
add
add
repz
aam
aad
imul
xor
add
add
into
mov
ins
sbb
in
add
outs
push
sbb
add
push
sub
adc
jmp
cmp
sub
add
sbb
int3
outs
push
test
pop
cmp
sub
jle
add
es
sbb
mov
add
mov
rol
and
not
sbb
jo
push
fisttp
outs
add
or
dec
sub
or
mov
add
fild
pop
jo
sbb
cwde
scas
adc
ja
sub
les
xor
mov
sbb
add
out
shr
mov
sti
add
cmp
jbe
mov
cmc
ds
dec
inc
add
cmp
jne
test
(bad)
add
push
mov
scas
out
mov
inc
lock
repnz
clc
mov
in
out
xchg
inc
stos
jno
add
add
jbe
add
cmp
jbe
pop
mov
jmp
shl
mov
shl
add
mov
bound
out
(bad)
xor
loope
lea
add
dec
mov
jo
mov
sahf
out
push
adc
call
retf
imul
mov
or
mov
mov
adc
shl
mov
mov
ficom
ret
fsub
sbb
test
or
repz
out
adc
xchg
add
mov
mov
adc
sub
push
mov
cmp
jne
fild
mov
or
mov
sub
dec
adc
stos
mov
mov
movs
mov
jmp
hlt
mov
in
adc
jae
and
cmp
mov
jecxz
hlt
sbb
cmp
mov
scas
push
sbb
sbb
jns
in
sar
or
lahf
xchg
(bad)
push
test
dec
pop
jmp
adc
add
ret
mov
sbb
cmp
cs
pop
xor
and
addr16
jne
mov
lahf
idiv
or
shl
mov
inc
fs
or
mov
inc
mov
xor
jmp
mov
adc
frstor
inc
mov
xor
clc
mov
mov
mov
fucomip
cs
bound
adc
mov
add
sub
adc
adc
jne
mov
pop
mov
pop
mov
ins
adc
add
adc
clc
dec
cmp
call
in
outs
bndstx
mov
mov
and
inc
sbb
(bad)
sbb
jo
cmp
jo
(bad)
adc
call
add
in
add
hlt
ds
jecxz
js
mov
mov
jge
mov
jo
dec
jp
cwde
push
stos
cmp
out
mov
sbb
movzx
add
je
adc
cmp
scas
inc
mov
mov
mov
into
ins
push
add
or
call
add
pop
pop
jne
xchg
inc
popa
or
cdq
outs
test
sub
xchg
loope
lods
ror
pop
ins
mov
mov
rcl
and
ins
mov
repz
jl
cmp
je
cmp
inc
mov
mov
jg
jmp
adc
in
pop
sub
or
push
push
adc
inc
or
pop
adc
pop
xchg
or
mov
iret
repz
fwait
test
mov
mov
inc
add
lea
adc
fld
adc
or
jl
pushf
sbb
ret
jle
clc
test
retf
adc
jbe
adc
in
shl
add
clc
sub
pop
inc
cmc
pop
call
pusha
(bad)
or
or
jmp
mov
adc
addr16
dec
xlat
and
add
pop
cmp
xor
add
mov
pop
jnp
add
jns
add
cli
and
or
and
js
or
dec
pop
test
nop
jmp
and
cmp
xlat
and
pop
jmp
inc
imul
xlat
aam
cmp
pop
mov
call
xor
test
pop
jmp
push
test
adc
in
jb
inc
xchg
jmp
fnstsw
ins
call
cmps
push
cli
push
push
push
mov
xor
sub
push
leave
mov
aam
fstp
mov
cmp
add
jmp
pop
pop
pop
pop
mov
mov
jo
aad
cwde
ret
cli
push
push
inc
out
in
jmp
mov
mov
std
ins
out
ret
pop
js
jg
test
jne
push
or
and
les
xlat
imul
std
js
std
cmp
clc
(bad)
mov
lock
jmp
icebp
inc
push
mov
add
push
push
scas
push
(bad)
je
or
mov
rol
xchg
sbb
mov
sub
fnclex
fldcw
cmp
pop
push
sbb
add
add
ud0
and
fld
in
add
fnstcw
fwait
mov
or
cld
fldcw
jmp
pop
mov
push
fld
pop
fisubr
call
fucomp
imul
fsubr
(bad)
lock
faddp
fldcw
out
std
fstp
movs
aas
call
pop
in
pop
in
outs
icebp
daa
cli
pop
sbb
ins
push
push
or
fwait
pop
lock
or
or
add
pop
inc
jle
loopne
or
inc
adc
mov
mov
jbe
(bad)
jb
add
jmp
dec
test
aad
icebp
jmp
call
sbb
xor
jmp
cmp
les
xchg
cmp
and
arpl
cmc
jge
in
mov
sbb
mov
sbb
mov
cmp
mov
ja
mov
mov
adc
jne
xor
retf
push
adc
scas
sub
lahf
jmp
cmp
rol
inc
jg
push
pop
test
loope
(bad)
in
dec
add
add
add
pop
push
(bad)
fld
fst
fst
shr
sbb
outs
call
cmp
shl
fisubr
hlt
jle
or
stos
mov
mov
cmp
cmps
push
add
sahf
imul
push
sbb
push
out
sahf
out
adc
push
or
pusha
rcr
or
sbb
push
clc
test
out
cli
xor
mov
push
add
cmp
je
mov
stc
stc
stc
std
push
sub
je
and
je
je
xchg
outs
sti
stc
pop
je
xor
arpl
push
push
mov
xchg
or
sub
mov
or
cmp
ja
mov
fisttp
dec
aaa
pop
loopne
int
or
jmp
and
push
dec
cmp
push
fdivr
js
pop
sub
jmp
inc
dec
jmp
mov
mov
addr16
sahf
popa
jb
mov
mov
mov
ja
ret
or
mov
ret
add
jne
mov
out
mov
icebp
add
mov
mov
fild
cld
or
sub
inc
mov
rol
pusha
cmp
jae
or
cmp
dec
mov
and
outs
ror
inc
push
cmp
cmp
jne
dec
jne
ret
(bad)
outs
mov
mov
cmp
repz
sbb
jbe
out
jg
sub
sub
leave
jne
pop
or
aad
xor
int3
jecxz
out
mov
retf
(bad)
hlt
inc
pop
fld
add
mov
icebp
push
push
inc
pusha
lock
rcl
inc
jl
push
call
clc
fimul
adc
nop
pop
xchg
ret
in
outs
je
sub
je
das
(bad)
call
popa
in
clc
and
jmp
jge
movs
xor
test
xchg
push
sbb
jmp
fstp
fld
lods
pop
jmp
adc
out
pop
jae
mov
pushf
pop
mov
push
hlt
(bad)
mov
adc
enter
inc
mov
mov
sub
add
jle
mov
pusha
mov
mov
shr
sub
pop
mov
jecxz
gs
mov
mov
ds
div
(bad)
repnz
pop
mov
cmps
cmp
sbb
push
lea
cli
ret
mov
fs
push
jecxz
jae
push
and
and
mov
cld
pop
jmp
xor
clc
add
xchg
ret
loope
push
sbb
retf
mov
loopne
jnp
inc
sbb
inc
pushf
aaa
push
cld
pop
cmp
pop
aaa
inc
cmp
rol
test
(bad)
les
dec
ja
dec
pop
push
movups
sub
scas
cs
dec
add
jle
test
fwait
mov
mov
or
push
cld
es
lds
dec
int3
push
test
dec
repz
fcomp
mov
mov
mov
ror
add
pop
shl
out
add
(bad)
jmp
cmp
je
pop
mov
aas
rcl
sbb
mov
mov
push
sbb
pop
clc
inc
retf
jecxz
lods
rcl
(bad)
mov
mov
mov
sub
jbe
or
jmp
sub
sbb
xchg
cmp
shr
(bad)
(bad)
jb
movsx
stos
jmp
jmp
cwde
adc
ret
mov
add
mov
lods
cmp
cmp
mov
pop
add
ficom
mov
xor
mov
ins
jno
clc
mov
mov
cmp
outs
xchg
add
and
xchg
xor
add
mov
pop
sub
push
inc
inc
add
or
in
sub
dec
mov
xchg
mov
aad
jmp
test
mov
sahf
js
pop
jne
je
push
js
leave
inc
push
clc
arpl
test
scas
and
and
lods
lock
mov
das
cmp
cmp
jne
cmp
jne
push
or
inc
rcr
or
or
ss
sub
imul
test
inc
lock
test
dec
rol
movzx
add
lea
cmp
adc
push
ret
scas
je
jmp
push
scas
xchg
add
data16
mov
xchg
pop
fist
jno
jl
push
mov
mov
and
outs
pop
sar
mov
sbb
cmp
sbb
mov
cmps
xor
push
xor
cwde
out
dec
repz
pop
inc
sbb
push
pop
mov
push
or
outs
lods
ret
mov
sbb
jb
inc
not
push
cmp
pop
pop
jmp
jmp
mov
fmul
pop
dec
push
add
repnz
aam
push
pushf
jbe
outs
jo
and
pop
add
sub
fwait
jne
push
push
xchg
add
js
adc
pop
rol
mov
out
sahf
cmp
scas
mov
add
or
jne
movs
rol
cmps
mov
jbe
or
out
add
xlat
pop
push
dec
sbb
mov
cmp
push
or
pop
jo
mov
jb
pop
mov
popa
lock
push
xchg
jg
mov
stos
lea
loope
call
cmp
call
hlt
dec
cmp
inc
add
mov
push
cmp
pop
pop
stc
shl
jo
sub
je
mov
loope
jo
test
ds
xchg
inc
pop
jmp
and
add
dec
jne
sbb
cld
jnp
jmp
pop
jmp
push
lea
inc
dec
xor
dec
xchg
je
jmp
mov
mov
test
jne
xor
nop
jecxz
jne
pusha
out
add
mov
mov
pop
ja
sbb
xor
mov
les
movs
jno
ficom
iret
xor
fmul
push
push
push
push
pop
xor
adc
push
dec
rcl
add
add
(bad)
push
(bad)
shr
(bad)
cli
and
rol
out
jo
dec
adc
sbb
push
inc
or
xor
jmp
fldpi
cmp
jmp
repz
sbb
daa
inc
out
jecxz
iret
push
pop
add
pop
iret
inc
mov
outs
push
test
jl
in
hlt
xor
lea
mov
mov
mov
mov
test
in
aad
cmps
or
xchg
push
cmp
sub
or
push
call
push
jb
cdq
or
mov
call
aaa
push
fstp
rcl
jecxz
push
and
inc
in
shl
xor
movs
mov
push
sub
or
jge
push
pop
inc
mov
sub
pop
inc
sbb
or
mov
les
jg
cmp
sbb
xchg
pop
pusha
test
push
ret
and
adc
xor
gs
sub
sub
add
sbb
je
scas
pop
push
enter
dec
sar
les
fisttp
cmps
(bad)
(bad)
push
xor
pop
push
dec
adc
imul
fcom
sbb
fistp
cli
xor
ret
pusha
ret
sti
add
pause
dec
push
jg
fwait
inc
data16
xchg
pop
inc
stos
mov
mov
pop
xchg
inc
int3
rcl
mov
pusha
xchg
sbb
jge
jnp
mov
jno
xor
in
push
cmp
shl
mov
adc
push
loopne
gs
add
nop
pop
or
mov
das
rcr
sub
dec
test
mov
cmp
mov
dec
pop
mov
jp
outs
imul
arpl
sbb
jb
aaa
dec
out
outs
dec
imul
add
outs
or
add
ret
add
adc
jecxz
clc
js
xor
pop
mov
out
or
sbb
hlt
loopne
mov
adc
sbb
movs
xor
or
mov
in
adc
ret
adc
mov
mov
dec
ja
bnd
adc
pop
inc
inc
add
and
push
add
mov
xchg
dec
int3
push
fcomp
clc
das
dec
mov
imul
mov
push
call
and
retf
(bad)
cmp
mov
mov
jne
xor
sub
test
adc
add
fst
mov
mov
das
hlt
mov
inc
or
cmp
and
test
jg
aaa
aad
outs
or
stc
sbb
dec
pusha
xor
jle
fdiv
sub
mov
cmp
push
sbb
sti
stos
cmp
push
mov
push
sahf
fcomi
lds
push
mov
inc
add
push
pop
cs
xor
jg
and
pusha
(bad)
jbe
clc
push
ret
sub
(bad)
leave
jmp
inc
lea
xchg
loope
adc
dec
adc
or
inc
mov
cmp
push
adc
push
rcr
xchg
mov
and
pop
pushw
fnsave
push
fcomp
fdivr
test
xor
add
mov
add
push
inc
cmp
in
cmp
push
mov
add
mov
les
dec
in
adc
mov
cld
loopne
dec
add
jle
xor
push
mov
xor
cmp
xor
(bad)
pop
loopne
sbb
or
mov
jbe
dec
fsub
pop
or
dec
(bad)
mov
iret
ja
adc
jmp
pop
call
xchg
and
and
inc
pop
loopne
inc
sbb
cmp
sbb
pop
mov
jmp
mov
and
clc
adc
xor
mov
lods
lock
and
dec
clc
(bad)
sahf
js
test
stc
rol
js
rol
iret
(bad)
aam
hlt
push
cmp
iret
dec
les
mov
sub
movs
pop
pop
fnstsw
enter
mov
jmp
xor
cmp
sub
gs
int3
ret
lds
ja
js
call
xor
ss
and
add
push
cmp
jne
(bad)
jbe
adc
or
ins
dec
cld
cmp
jne
nop
xlat
shl
sbb
rcl
adc
inc
push
rol
add
cdq
xor
push
push
mov
or
inc
xor
rol
cmp
and
sbb
dec
xor
fldenv
call
mov
imul
sbb
pusha
mov
jl
push
call
in
fwait
mov
mov
cwde
add
fdivrp
ins
jno
pop
movs
jo
push
shl
into
std
ret
in
or
add
pop
out
mov
cmovo
sub
mov
sbb
add
push
xlat
pause
not
clc
xor
xor
add
int3
cmp
call
jns
push
push
bound
push
cmp
cmps
sbb
inc
and
in
loopne
scas
or
jae
div
pop
push
push
and
pop
pop
dec
pop
mov
je
or
push
das
add
jne
movsx
inc
inc
faddp
add
pop
add
addr16
jecxz
rol
adc
and
and
jno
sbb
(bad)
jecxz
pop
mov
lock
cmp
inc
add
inc
shl
and
cmp
cmp
hlt
jne
ret
ret
sub
pop
test
int3
pop
sahf
push
aam
push
shl
out
push
in
out
mov
cmp
cli
out
push
je
xchg
jb
jbe
test
mov
sti
ja
lea
sbb
aad
stos
fprem1
push
push
repnz
ins
jmp
adc
adc
xor
push
test
fdivrp
add
je
or
xchg
mov
push
inc
das
cmp
cmp
sub
cmovo
jl
arpl
mov
(bad)
jg
or
add
push
add
pop
mov
adc
push
xchg
outs
mov
mov
out
inc
or
aam
push
xchg
popa
js
outs
je
dec
adc
pop
retf
push
add
dec
in
add
push
or
(bad)
pop
call
pop
add
lds
out
sbb
clc
add
cmp
call
inc
enter
xor
mov
cmp
jne
inc
inc
sar
in
mov
shl
jne
add
dec
jne
jp
xor
inc
jmp
mov
sbb
push
inc
push
in
adc
adc
adc
adc
jno
or
nop
sub
adc
sub
inc
or
dec
push
inc
sub
icebp
mov
arpl
outs
(bad)
push
push
and
sbb
jo
xor
popa
shl
sub
push
add
dec
add
push
push
rcl
sar
fsub
cmp
or
jmp
push
pop
add
dec
in
push
(bad)
or
dec
test
in
loopne
(bad)
xor
mov
or
stos
pop
loopne
fmul
dec
push
push
push
push
mov
mov
add
push
(bad)
rcl
and
jo
add
adc
cdq
fnsave
add
xor
pusha
fcmovnu
dec
aas
xchg
mov
pop
ror
cmp
add
jmp
add
inc
mov
rcr
mov
add
xlat
sbb
jbe
sbb
enter
inc
and
cmp
adc
adc
or
mov
pop
int3
and
sahf
or
lea
cmp
ret
xor
nop
or
xor
sbb
inc
add
out
aaa
or
sar
in
jl
je
cmp
push
sub
mov
(bad)
(bad)
jg
dec
je
jmp
add
sub
jb
je
jmp
cmp
cmp
xchg
xchg
cs
adc
jmp
sub
(bad)
sti
(bad)
(bad)
cmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
push
sbb
into
inc
xor
(bad)
jmp
mov
jmp
mov
jmp
mov
ret
pusha
lds
dec
mov
push
or
xor
vcmppd
mov
pop
mov
jl
je
push
leave
dec
add
pop
or
addr16
scas
sbb
pop
mov
adc
loopne
je
in
add
pop
jmp
push
mov
mov
or
sbb
jmp
aam
call
inc
lock
or
pop
sbb
cmps
fmulp
jl
mov
pop
shr
or
stos
cmc
sbb
enter
inc
mov
cmp
cmp
jne
push
inc
loope
mov
pcmpgtd
adc
push
mov
clc
test
jmp
mov
test
jle
dec
mov
je
add
add
push
xchg
pop
mov
out
push
jp
xchg
jmp
popf
or
pusha
(bad)
xchg
push
jg
mov
xor
inc
mov
icebp
inc
mov
sti
jle
mov
fsub
(bad)
cmp
jg
int
mov
push
mov
cmp
mov
sbb
movs
mov
cmp
mov
or
pop
enter
add
je
jle
inc
add
imul
sbb
popa
jecxz
imul
pop
pop
push
ins
mov
mov
nop
xlat
mov
sbb
cmp
(bad)
clc
mov
shl
mov
push
add
mov
mov
dec
je
add
jle
push
pop
jl
or
shr
add
or
jne
pop
pop
out
mov
push
mov
inc
or
mov
enter
mov
xor
ret
pop
sub
adc
fld
in
and
and
(bad)
dec
hlt
fdiv
cmps
push
add
aas
(bad)
dec
and
(bad)
repnz
pop
mov
arpl
fisub
test
push
int3
ret
add
mov
mov
idiv
fld
sbb
inc
leave
mov
push
dec
pop
cld
in
mov
xor
cmp
cmp
inc
jbe
mov
and
or
sbb
in
push
stos
cmc
mov
add
sti
add
push
ret
sbb
xchg
xor
bnd
push
dec
test
aas
cmp
xchg
add
test
add
adc
cli
xor
ficomp
xor
daa
xor
xchg
and
in
mov
sbb
adc
xchg
jno
pop
add
jle
xor
mov
mov
push
mov
call
sbb
icebp
xor
jne
pop
sbb
or
add
stos
aam
mov
out
mov
adc
fisubr
es
in
mov
ret
in
mov
(bad)
js
or
in
shr
movs
push
push
inc
lods
sbb
push
jbe
jne
call
sub
sub
jae
sub
jne
mov
adc
mov
fdiv
test
lock
in
(bad)
push
inc
cmp
push
or
add
hlt
pop
cmps
sub
push
xor
push
rcl
inc
stc
or
jmp
call
xor
mov
data16
xor
rcl
out
xor
mov
jp
xchg
jo
push
sbb
mov
cmp
jnp
mov
call
scas
nop
bound
cmc
in
adc
sbb
mov
cmp
cs
mov
adc
aaa
mov
icebp
scas
(bad)
pop
push
cmp
shl
jo
jmp
dec
js
sub
mov
in
and
sub
or
add
add
data16
and
mov
push
jg
push
ja
and
push
push
xor
inc
add
push
test
adc
cld
js
xor
hlt
xchg
mov
adc
push
xlat
call
push
in
aas
loopne
je
mov
mov
retf
dec
jl
lock
hlt
out
jb
adc
push
imul
sbb
cmp
push
add
add
push
aaa
adc
or
sbb
jno
aaa
cmp
inc
call
push
mov
inc
jle
jne
push
ja
dec
popf
xchg
and
lock
adc
ret
loopne
ret
jno
mov
js
mov
pop
pushf
pop
sbb
adc
imul
test
les
push
mov
mov
push
mov
mov
add
pop
aam
or
shl
xchg
ret
add
pop
mov
jmp
push
sti
pop
jg
mov
pop
and
fdiv
mov
ret
pop
imul
outs
lods
movzx
sub
jo
xchg
rcl
jl
cld
inc
pop
jmp
jmp
fisttp
lea
cmp
push
inc
scas
dec
push
gs
out
pop
cs
pop
in
in
adc
test
lea
sbb
fimul
lock
jne
ins
and
in
inc
int3
addr16
inc
lds
jl
mov
xchg
mov
xchg
sbb
xor
imul
aam
add
push
clc
pavgb
clc
cmp
push
icebp
sub
inc
mov
(bad)
ins
pop
dec
xor
adc
push
aam
push
jmp
xor
jne
(bad)
repnz
pop
lock
jmp
mov
mov
jp
mov
ja
sbb
scas
or
aas
cmp
inc
inc
jg
jmp
mov
pop
push
dec
cld
lods
pop
pop
jmp
cmps
push
aas
mov
xchg
fwait
push
in
popf
dec
inc
ror
and
adc
or
dec
into
hlt
jp
mov
adc
sti
inc
push
mov
lods
test
sub
add
xchg
inc
inc
push
hlt
aas
cmp
adc
adc
jecxz
add
mov
aas
sbb
jmp
inc
cmp
jne
mov
daa
or
add
in
cmp
clc
ja
mov
shl
push
pushf
lea
test
in
inc
in
mov
shr
xchg
xor
fidiv
es
stc
sub
arpl
loope
ja
xor
std
call
mov
mov
inc
inc
sub
ja
add
push
fidivr
push
mov
cmp
jne
dec
je
mov
jl
aaa
ficom
(bad)
jle
jmp
adc
repz
jmp
pop
and
je
mov
cmp
jne
dec
je
mov
cmp
jne
mov
add
jne
add
jmp
pop
cmp
cmp
jne
shr
int3
sti
jmp
sbb
pop
push
mov
out
into
shr
or
pop
out
sbb
ins
loope
jns
stos
stc
ret
and
aas
xor
dec
shl
cmps
dec
and
add
pop
jecxz
outs
or
movzx
inc
xchg
arpl
sbb
cmp
jbe
and
add
inc
leave
xor
js
ret
cmp
push
je
(bad)
call
mov
jg
inc
inc
test
jl
cmp
jg
add
mov
inc
rep
jmp
jo
cmp
mov
in
mov
fsubr
mov
mov
nop
push
mov
push
mov
aaa
cmp
popa
aam
ret
push
mov
mov
je
xchg
je
or
je
add
pushf
inc
add
mov
pop
sti
shl
cmp
or
or
imul
push
push
outs
or
in
add
imul
mov
inc
mov
(bad)
push
push
push
adc
scas
mov
std
pop
add
pop
pop
pop
cmp
cwde
pop
xor
sub
add
rcr
cmp
ret
ror
cmps
jmp
inc
das
rol
jns
push
cld
add
jl
inc
(bad)
push
je
test
hlt
push
mov
int3
jecxz
jae
xor
lea
sub
jle
add
cmp
sti
cmp
cmp
clc
(bad)
cmps
ficomp
(bad)
hlt
hlt
inc
data16
add
push
push
fcmovne
jo
call
cmps
push
xchg
push
hlt
(bad)
mov
mov
mov
push
das
xchg
jmp
jle
dec
fldcw
pop
(bad)
retf
mov
pop
push
mov
push
push
loopne
xor
cli
mov
sbb
ins
dec
test
mov
push
je
pop
sbb
pop
pop
into
mov
dec
jmp
mov
lahf
mov
push
jo
add
xor
xor
lock
or
and
ja
hlt
dec
or
out
jl
pop
mov
fld
(bad)
and
sbb
rcl
push
add
jb
jmp
or
inc
or
push
pushf
dec
cmp
call
pop
stos
pop
pop
lea
jmp
xchg
cmp
(bad)
out
mov
jle
cld
jne
push
lea
lea
add
(bad)
cmp
loop
mov
adc
sub
lock
int3
int3
cmp
ret
cmp
adc
push
(bad)
inc
sbb
pusha
push
mov
movs
push
xor
ret
mov
into
(bad)
pop
add
daa
cli
add
xor
jmp
dec
cmp
jge
shr
sbb
pop
repz
cmp
and
mov
es
adc
add
dec
inc
xor
js
pushf
sbb
dec
mov
ret
daa
inc
push
(bad)
nop
pop
loop
sar
int
ficom
cs
inc
xlat
js
mov
jo
or
add
loope
mov
xor
cmp
and
cmps
(bad)
sub
push
jbe
jmp
xchg
es
adc
cmp
icebp
ss
gs
sahf
into
rcl
sbb
sbb
loope
cmps
loopne
pop
dec
popa
les
arpl
call
adc
mov
cmp
xor
ds
das
adc
pop
push
mov
retf
xchg
adc
arpl
or
fmul
loope
add
sbb
or
leave
sbb
mov
ja
retf
and
pop
xor
dec
sbb
mov
xchg
xchg
push
push
test
cld
push
jb
push
lahf
inc
xor
dec
sub
pop
inc
and
ja
and
jmp
cmps
or
pop
das
or
add
add
mov
xor
add
loope
sbb
pop
shr
popa
dec
or
inc
scas
mov
mov
xchg
sub
daa
mov
xlat
aam
xor
fld
xor
dec
fdivr
add
adc
(bad)
cld
(bad)
pop
ret
adc
push
jmp
out
(bad)
fldenv
lock
add
or
dec
mov
sbb
and
fdivr
sbb
test
in
fsub
cld
or
or
out
or
xor
xchg
and
mov
inc
mov
pop
das
scas
xor
lods
or
nop
adc
lahf
push
lods
or
add
and
xchg
movs
jg
jne
push
out
retf
push
ret
or
mov
out
add
add
inc
cdq
aaa
xchg
retf
add
fs
aas
add
jo
inc
push
jo
push
mov
sbb
jo
or
(bad)
div
jp
adc
(bad)
addr16
adc
jne
mov
inc
pop
mov
add
dec
fcmovnbe
out
popf
aaa
push
test
mov
pop
loope
fisub
pop
aaa
adc
int3
cli
inc
cld
add
test
mov
mov
mov
loop
xchg
xchg
dec
push
jmp
pop
and
push
sar
stos
jmp
adc
mov
dec
push
iret
mov
cmp
or
inc
add
mov
ret
and
fnstcw
test
add
or
mov
cmp
jne
mov
repz
cdq
mov
(bad)
dec
in
mov
xchg
add
mov
push
ja
mov
sbb
cwde
jl
cmp
jl
mov
scas
or
sub
sub
mov
push
clc
sbb
in
push
lea
mov
movs
sbb
sbb
adc
and
xchg
jbe
xor
mov
shl
mov
out
js
call
push
shr
push
cmp
fadd
cmp
repz
or
mov
xchg
ds
sbb
push
add
mov
ins
dec
add
xchg
inc
les
adc
scas
inc
xor
inc
push
push
inc
push
fistp
xchg
sub
jo
int
and
pop
inc
and
lds
cmova
add
inc
dec
js
mov
inc
nop
jle
inc
fldcw
inc
shl
cmps
pop
clc
sub
in
pop
pop
jmp
pop
mov
sub
sahf
inc
adc
(bad)
mov
push
fmul
sbb
sub
iret
adc
jmp
xchg
shr
push
mov
cwde
dec
test
mov
pop
(bad)
das
aam
(bad)
jl
fdivr
add
add
sub
adc
fmul
neg
loop
sbb
cdq
sahf
out
add
rcl
cmps
inc
dec
adc
add
mov
dec
jb
or
jb
shl
dec
jnp
cmps
fisub
add
jp
xchg
in
sbb
push
xchg
repnz
fnstenv
inc
ja
xor
movs
inc
push
cmps
loopne
xor
sar
fbld
daa
and
xor
mov
xor
pop
xor
jne
sub
jl
jmp
movs
pop
inc
neg
jne
push
icebp
arpl
in
sbb
pop
adc
test
dec
mov
and
pop
mov
aas
lock
js
lock
mov
jmp
test
sub
xchg
sub
into
lock
mov
push
sub
jmp
add
push
lock
cmp
mov
push
inc
in
mov
rol
loope
sbb
cmp
sub
dec
fs
retf
dec
push
or
mov
ins
push
repz
aas
dec
sbb
bound
mov
jmp
(bad)
mov
enter
jno
clc
mov
xlat
pushf
push
test
mov
sub
jae
push
loop
mov
jnp
jo
push
and
cmps
rcl
mov
xchg
pop
mov
push
and
xchg
or
or
jle
cmp
sbb
or
push
enter
lock
sub
je
jp
adc
pop
bound
movs
mov
jne
pop
fmul
out
out
cmp
inc
mov
push
add
(bad)
out
push
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
xor
mov
mov
ffree
mov
inc
mov
mov
add
or
adc
jmp
push
mov
add
cld
pop
mov
or
mov
out
in
fimul
pop
cmp
pop
jmp
cmp
mov
sub
dec
cdq
xor
jmp
push
scas
jbe
adc
pop
mov
(bad)
fnstsw
adc
mov
cmc
or
mov
cmps
push
jmp
jo
adc
sub
loopne
xor
jb
pop
retf
push
call
test
xchg
add
jg
dec
and
mov
push
pop
sub
loopne
add
ja
xor
pop
ret
pop
sub
cdq
inc
pop
dec
and
jp
jmp
jbe
inc
lea
test
jmp
test
xor
pushf
adc
and
mov
inc
movs
loope
rcl
les
add
sbb
pop
pop
icebp
ja
ror
or
cld
sbb
ret
clc
or
pop
jecxz
rol
cmp
lock
inc
inc
add
xchg
pop
mov
cmp
cmp
or
aaa
aaa
aaa
adc
je
or
fidivr
test
setne
cmp
or
inc
pop
pop
ror
push
rol
dec
mov
stos
pop
jmp
and
inc
in
inc
ins
lea
mov
adc
add
nop
idiv
inc
dec
xchg
or
int3
pop
jmp
aas
cs
cmp
add
sar
xor
mov
cmp
retf
popa
adc
and
data16
inc
fmul
imul
jp
mov
pop
push
or
adc
mov
adc
pop
push
sub
ins
push
sbb
push
jl
stos
mov
adc
and
push
stc
scas
shl
and
sub
(bad)
cdq
inc
push
int3
pop
jmp
movs
imul
adc
adc
add
cmp
cmp
or
cmp
pop
add
inc
call
ret
stc
xor
add
dec
fisubr
cmp
add
in
sub
cwde
cmp
cwde
loope
adc
popa
push
sub
rcr
ret
xchg
jne
imul
add
bound
jo
push
adc
pop
aas
enter
pop
push
pxor
or
push
lahf
xor
shr
and
fisttp
shr
pop
mov
cmps
push
push
shl
bound
mov
xor
sti
adc
gs
push
fcom
mul
cmp
fs
rcl
loopne
inc
adc
pop
pop
xor
pop
dec
inc
adc
(bad)
mov
pop
xor
xor
sub
sbb
sar
(bad)
xor
xor
sub
sbb
jne
cmp
jb
scas
mov
or
mov
into
xor
enter
add
jecxz
sar
jmp
ror
fisttp
mov
add
shl
(bad)
push
mov
imul
in
(bad)
cli
sub
fnstcw
xchg
sbb
sbb
cwde
ss
xchg
or
sub
or
pop
xchg
scas
aaa
sub
or
je
int
test
mov
fwait
mov
rcl
(bad)
rcl
cmp
jb
lods
xor
sar
fidiv
sub
sbb
inc
loop
loop
mov
mov
mov
repz
pusha
fwait
pop
sub
jns
neg
test
xor
xor
neg
neg
sbb
int
iret
mov
test
cmp
repnz
das
mov
lahf
and
jle
jl
sub
mov
(bad)
shl
sbb
movs
push
loopne
(bad)
das
push
shr
ret
icebp
ret
or
mov
arpl
(bad)
data16
or
xchg
add
in
mov
jecxz
pop
enter
cmp
je
(bad)
outs
or
sbb
sub
ficomp
add
pop
sbb
jne
mov
aaa
and
add
add
or
ins
rcr
sbb
sbb
loop
add
pop
shufps
rcl
xor
jg
int
(bad)
imul
mov
jmp
outs
push
or
imul
mov
and
cmps
jbe
xchg
or
dec
sbb
xchg
add
loopne
jb
mul
push
jb
out
jmp
inc
and
out
xor
push
getsec
jmp
push
int3
jle
add
bound
jb
iret
push
rcr
mov
inc
and
add
push
cdq
(bad)
jmp
jg
mov
cdq
xchg
adc
movs
pop
lods
sbb
and
add
ds
rcr
mov
or
xor
push
mov
jp
push
sahf
adc
lods
loop
mov
jle
push
pop
lock
leave
mov
cmp
and
dec
jns
and
inc
inc
jne
adc
mov
sub
jg
sub
adc
test
out
je
dec
add
cmp
sub
pop
pop
cdq
mov
je
sbb
call
xchg
shr
setl
cmp
je
dec
das
jle
lea
or
push
loopne
push
adc
inc
pop
add
inc
cli
adc
dec
iret
and
pop
loopne
repnz
push
clc
fisttp
(bad)
jg
xchg
in
mov
pop
mov
jae
(bad)
jge
sbb
dec
adc
or
lock
add
(bad)
and
data16
mov
push
push
lods
aaa
jl
mov
imul
mov
adc
in
idiv
cmp
je
sbb
fadd
int
cmp
mov
cmp
jge
push
je
xlat
cli
rcr
pusha
scas
add
mov
sub
adc
pop
mov
mov
jmp
(bad)
enter
or
cmps
sar
data16
xchg
jge
mov
mov
push
in
std
pop
in
test
pop
inc
mov
(bad)
jns
call
push
dec
rol
rcl
inc
xchg
push
hlt
adc
mov
add
test
or
fimul
push
cmp
xlat
sub
test
fwait
or
add
mov
add
cli
or
add
mov
mov
mov
mov
retf
(bad)
int
(bad)
jg
push
dec
jne
ret
mov
sbb
cs
fcomp
pop
inc
cli
mov
leave
adc
rcl
div
stc
rol
test
imul
lock
pusha
fistp
fcomp
ds
(bad)
mov
clc
js
cmp
jle
fidivr
lea
aad
mov
mov
add
ret
lods
repz
movs
in
add
pop
xchg
xchg
pop
test
push
sub
xor
hlt
add
mov
je
xor
xchg
push
(bad)
pop
push
test
imul
cmp
shr
mov
movs
dec
sbb
xor
jg
hlt
movs
dec
xor
clc
hlt
and
push
adc
xchg
push
adc
or
push
addr16
push
lea
mov
popa
and
sbb
out
es
clc
stos
or
inc
rcr
xchg
pop
aaa
and
aad
inc
xchg
push
inc
jge
lds
leave
jb
adc
ins
add
(bad)
mov
sbb
mov
jl
clc
mov
lds
retf
jle
mov
lods
fisttp
stos
dec
add
leave
adc
jp
fsubr
inc
pop
cli
lahf
fisub
js
cmp
je
ror
test
fwait
xchg
push
ds
nop
dec
xchg
outs
mov
fs
mov
add
gs
call
pop
push
cmc
in
test
push
push
push
jmp
inc
dec
xchg
sbb
push
lock
sub
(bad)
push
push
mov
int3
cs
cmps
or
mov
xchg
adc
lea
mov
fstp
dec
bound
jnp
cmp
pop
add
mov
xchg
adc
jle
fsubrp
sbb
inc
sbb
xor
push
pop
gs
jnp
inc
mov
or
push
push
cld
mov
call
add
xchg
call
mov
rcl
add
add
ss
scas
sbb
cmp
inc
push
cmp
or
je
or
xor
fadd
fbld
les
es
inc
sbb
push
push
sub
inc
idiv
jae
inc
push
pop
je
popa
outs
das
push
cmp
outs
bound
add
mov
sub
(bad)
jb
push
sub
sub
ja
outs
iret
push
ins
or
dec
sub
push
push
xchg
int
imul
push
push
and
ss
es
sub
outs
xchg
pop
out
(bad)
pop
popa
sub
popa
addr16
dec
lods
pop
push
pushf
jae
outs
outs
jae
clc
rcr
fist
fs
xor
cs
inc
inc
sub
sub
push
ss
inc
add
aaa
dec
mov
test
jg
je
ins
sbb
lock
(bad)
sub
jb
dec
inc
and
fdivr
push
inc
into
ficomp
jl
ins
push
or
xchg
jb
test
in
inc
pop
push
inc
mov
mov
mov
aaa
in
mov
fcomi
aaa
outs
aaa
cmps
aaa
out
test
jae
push
aaa
outs
das
mov
outs
outs
cmps
aaa
dec
dec
inc
jmp
imul
sbb
pop
adc
mov
popf
lods
jg
clc
push
setae
dec
push
aam
inc
hlt
xchg
mov
sti
cmp
xchg
xor
(bad)
sbb
out
dec
mov
data16
push
dec
mov
inc
test
jne
jae
sub
push
ja
adc
lea
scas
mov
test
adc
xchg
sub
mov
out
jl
(bad)
add
jle
(bad)
sub
jmp
jl
push
add
jne
xor
stos
mov
aad
pop
rcr
test
enter
aad
cwde
into
cmp
arpl
ins
mov
cmp
add
fst
mov
aad
dec
(bad)
(bad)
sub
fs
dec
jne
mov
ins
add
ret
pop
inc
dec
pop
push
and
sbb
test
push
cmp
cmp
push
xchg
test
cmp
mov
jecxz
xchg
inc
cmps
xchg
cwde
lock
mov
jl
clc
jecxz
adc
(bad)
lods
add
and
(bad)
imul
pushf
jo
xor
or
call
cmp
push
adc
dec
rol
ja
mov
inc
mov
add
shr
cmp
fst
push
jmp
and
fisttp
mov
jmp
jbe
les
test
cld
add
(bad)
in
xor
nop
and
mov
pop
ficom
add
movs
(bad)
pop
and
sbb
mov
push
and
push
pusha
push
movs
(bad)
sbb
cwde
sub
test
add
(bad)
(bad)
imul
add
pop
sub
stos
daa
out
add
push
and
sbb
dec
inc
movs
rol
fmul
(bad)
movs
or
in
mov
xchg
push
shl
jmp
add
adc
test
inc
add
pop
and
arpl
in
mov
inc
and
je
inc
mov
outs
sub
mov
(bad)
div
xor
adc
retf
mov
jmp
jmp
add
call
fisub
inc
in
or
push
pushf
cld
in
mov
sbb
push
sar
cli
and
add
jl
sub
add
sub
(bad)
cmp
leave
xchg
out
sar
in
add
xor
pop
push
mov
outs
mov
dec
jo
or
push
(bad)
into
cmp
adc
push
jnp
fwait
inc
push
xchg
scas
ror
(bad)
pushf
fwait
sahf
syscall
adc
sbb
(bad)
mov
push
jmp
cdq
test
cmp
ret
je
imul
adc
and
sub
xor
sbb
jns
mov
sub
mov
sbb
push
shl
sub
enter
fsubr
movs
push
fsub
pushf
xor
xchg
pop
mov
jb
pop
loopne
jl
stc
jmp
mov
sti
imul
push
xor
push
push
fisttp
jge
das
imul
ror
jbe
push
(bad)
sub
lock
mov
adc
pop
ins
cmp
inc
int
jae
add
mov
cs
cmp
scas
push
and
inc
add
adc
push
mov
mov
jg
mov
cld
sar
jns
adc
sbb
in
mov
sbb
sub
sar
pop
rol
add
inc
cmp
imul
inc
xor
push
lods
inc
adc
or
ret
pushf
jbe
cmps
mov
rsm
xchg
scas
mov
xor
jle
jge
xor
int3
std
movs
lea
jle
jnp
mov
jg
xor
and
ret
dec
push
push
(bad)
or
loope
pop
jl
hlt
inc
add
div
test
mov
lods
sbb
movs
adc
test
dec
sahf
push
popa
je
in
daa
clc
xchg
out
test
in
or
xor
push
and
ins
fst
jmp
pusha
or
lock
cmp
bound
test
pop
int
lea
iret
pop
sahf
sub
xor
and
xor
je
jg
stc
xchg
or
cmp
push
fs
ja
mov
and
aam
and
rcr
iret
pusha
mov
lods
add
cs
xor
push
cwde
or
(bad)
xor
fwait
pop
push
push
push
ins
mov
shr
adc
outs
or
push
xlat
push
pop
or
push
or
xlat
inc
jns
mov
mov
rcl
add
test
inc
add
bound
mov
or
cs
or
ins
outs
cmp
aam
mov
imul
xlat
into
inc
adc
jbe
adc
je
addr16
inc
jo
jo
adc
cmps
cli
cwde
into
mov
or
shr
lock
adc
adc
in
adc
cmps
mov
popf
je
mov
jae
mov
push
and
dec
push
xlat
stos
mov
sahf
lods
push
hlt
mov
ja
sbb
and
das
rol
(bad)
(bad)
xchg
sbb
sti
xor
test
hlt
hlt
enter
shr
(bad)
stc
repz
sub
dec
mov
jmp
inc
push
arpl
or
push
jecxz
push
pop
(bad)
sub
call
sub
mov
jp
or
call
fst
ja
pusha
jnp
test
adc
add
mov
push
movs
dec
in
add
sbb
movs
push
hlt
add
adc
pop
out
lock
hlt
mov
adc
ret
dec
add
ror
inc
pop
in
in
scas
loopne
or
retf
adc
(bad)
or
movs
lea
jecxz
outs
add
xor
adc
(bad)
sbb
ja
dec
or
mov
test
loope
add
outs
mov
jmp
push
xlat
push
(bad)
je
lock
xor
push
jne
in
push
xchg
jbe
mov
mov
xchg
and
pushf
adc
dec
sbb
dec
enter
clc
xchg
(bad)
lock
add
movs
es
mov
in
inc
mov
jl
pop
push
push
jl
std
jo
std
xchg
cmp
dec
cmps
cmps
test
adc
repnz
ret
hlt
mov
in
sbb
sbb
dec
mov
add
scas
pop
inc
int3
aas
sbb
xchg
in
jbe
imul
loopne
addr16
dec
adc
push
(bad)
adc
lock
out
adc
adc
sub
cmp
imul
cmp
retf
ror
cmp
adc
je
xor
stos
imul
inc
pop
adc
push
mov
mov
jmp
dec
push
dec
fldcw
out
mov
jnp
dec
cmp
fld
rcr
add
mov
sahf
or
push
nop
(bad)
jno
test
ja
dec
dec
mov
ja
and
pop
pop
sbb
aaa
out
sbb
xchg
dec
scas
and
sar
sbb
jno
or
mov
pop
mov
or
fs
mov
fs
jne
jmp
jmp
push
mov
xchg
ja
(bad)
add
add
or
jmp
fwait
mov
sbb
cs
aam
test
xlat
mov
mov
jp
pop
popf
sar
sti
pop
sbb
mov
in
pop
pop
ret
sbb
cmc
cmp
(bad)
fiadd
xchg
into
mov
pop
inc
ins
inc
push
lsl
push
mov
mov
hlt
mov
mov
inc
(bad)
pop
dec
xchg
mov
or
mov
lea
add
jp
xor
dec
push
xchg
and
je
in
xrelease
pop
lahf
add
data16
arpl
push
cmp
into
movs
es
inc
mov
fsubr
jbe
cmp
ja
mov
stos
les
jne
jmp
fild
es
stos
clc
sti
in
pop
test
adc
mov
push
loop
cmp
fild
add
inc
(bad)
sub
les
ret
pop
aas
push
pop
jge
mov
add
push
or
push
jbe
jge
mov
add
cld
jae
or
lock
xor
fs
inc
(bad)
fs
and
push
add
or
add
push
mov
add
pop
test
sbb
or
hlt
ret
mov
in
stos
scas
mov
out
sub
jmp
adc
sbb
mov
dec
or
fwait
mov
cmp
ss
push
pop
fdivr
sub
les
xor
fld
jns
or
jmp
out
fucomp
mul
and
pop
or
and
pusha
mov
stos
pop
pop
cwde
or
sbb
dec
(bad)
fwait
mov
push
inc
enter
(bad)
add
ror
pop
daa
clc
test
and
fldenv
jb
mov
into
pop
mov
pop
or
daa
mov
pop
(bad)
enter
stc
push
lea
or
push
out
loopne
out
int3
inc
push
jns
lds
lods
loopne
push
nop
inc
push
lds
and
ins
mov
sbb
outs
adc
pop
int3
cwde
jns
adc
push
lods
rcl
cmp
mov
pusha
lock
pop
dec
add
mov
and
mov
jg
rcr
cmps
std
mov
add
and
or
inc
add
push
jae
ss
loope
(bad)
push
jmp
or
cdq
adc
cmp
sahf
xchg
add
push
or
adc
icebp
xor
sbb
sbb
push
cmp
ror
dec
aas
hlt
or
sub
loopne
fsubr
xchg
rcr
and
sbb
add
ret
and
mov
std
cli
xchg
jne
push
or
add
outs
jg
adc
push
lods
idiv
or
mov
cmp
or
dec
inc
or
inc
bound
and
mov
scas
inc
mov
scas
xor
or
adc
jne
add
adc
das
or
cld
mov
clc
jmp
adc
mov
(bad)
clc
dec
inc
mov
lock
fcom
clc
out
and
pushf
pushf
pushf
pushf
fcom
ror
pushf
pushf
pushf
pushf
enter
and
push
add
das
test
dec
scas
push
and
push
lock
mov
test
es
shl
mov
nop
shl
push
ins
or
jmp
push
mov
or
mov
xlat
inc
pop
push
shl
mov
outs
ret
push
movs
push
pop
jbe
mov
into
lock
fcmovnb
mov
cmps
jnp
mov
aaa
lahf
inc
mov
mov
sub
and
add
in
or
mov
jg
sub
mov
int3
mov
pop
dec
ficom
cmp
inc
(bad)
(bad)
or
inc
and
and
pop
sbb
mov
push
inc
aam
inc
or
out
mov
push
fmul
fsub
sar
adc
loopne
pusha
hlt
imul
test
push
call
sub
mov
ins
lods
mov
mov
imul
push
stos
add
mov
(bad)
out
fs
dec
push
add
add
mov
push
data16
sub
push
mov
lahf
add
sar
add
shl
jge
test
sahf
and
cs
mov
jo
pop
push
mov
push
je
add
add
or
js
loope
retf
inc
repnz
pop
ret
fadd
push
pop
sub
xor
leave
gs
add
jb
mov
mov
dec
adc
jo
bound
sub
add
mov
jns
cmp
or
push
fstp
ja
mov
ficom
sub
in
adc
sbb
adc
cmps
mov
lock
sbb
xor
add
adc
mov
push
lahf
cmp
test
adc
int
lods
adc
adc
jbe
sbb
cmp
ret
cmp
push
mov
add
push
fs
retf
movs
test
outs
jo
mov
pop
test
cmp
loop
adc
js
push
int
popf
inc
std
cmp
fwait
dec
add
and
movs
mov
(bad)
ffree
sub
cmp
retf
cmp
or
mov
jg
(bad)
jne
inc
sub
nop
add
and
mov
push
cmc
sbb
cmp
outs
sbb
and
sub
(bad)
fs
add
xchg
test
and
and
jge
mov
(bad)
clc
(bad)
jno
data16
jl
dec
add
jns
xor
mov
mov
in
xor
sub
scas
dec
sbb
or
rol
in
shl
pop
cs
jbe
in
sbb
push
jae
add
push
pop
ret
push
push
jo
stc
push
push
(bad)
mov
adc
sub
jae
mov
or
nop
add
out
or
les
add
mov
loopne
push
mov
js
jmp
push
pop
lock
and
daa
call
adc
popf
(bad)
imul
loope
pop
test
ret
je
jne
addr16
mov
or
loopne
cmp
push
push
xchg
mov
fwait
mov
cld
outs
xor
pop
js
shl
add
add
das
pop
push
loopne
push
dec
ret
inc
cs
sub
and
jno
dec
cmps
or
test
push
inc
inc
dec
je
mov
cmp
je
movzx
ins
test
outs
push
push
mov
adc
jmp
sahf
inc
pop
mul
ins
pop
aad
pop
jg
jmp
mov
mov
push
call
mov
fldcw
fisttp
jo
add
retf
cmp
loopne
mov
inc
jo
pusha
push
pop
outs
(bad)
xor
movs
sub
pusha
mov
adc
push
add
aam
pop
inc
jns
sub
jle
icebp
pushf
adc
or
je
and
mov
and
adc
jne
arpl
sbb
cmps
cdq
xchg
add
add
pop
adc
mov
mov
out
add
cwde
xchg
add
jo
inc
cmp
les
xchg
pop
adc
mov
xchg
inc
pushf
cdq
jns
dec
push
mov
mov
xchg
pusha
cwde
mov
push
scas
or
push
jne
call
retf
add
dec
add
ins
loope
jno
mov
mov
and
inc
loope
push
fs
add
inc
push
dec
jae
xor
imul
jle
mov
or
add
mov
add
mov
pop
mov
cmp
xchg
int3
dec
adc
mov
pop
mov
stos
aad
aad
pop
mov
ds
aad
push
or
addr16
add
outs
push
jno
inc
aad
adc
mov
dec
mov
push
push
and
inc
xor
adc
and
jns
mov
nop
adc
ret
mov
push
jg
jg
sub
sub
add
sub
cmp
arpl
popa
cmc
add
push
push
jne
popa
js
sub
dec
mov
adc
inc
mov
dec
xor
mov
push
xchg
push
mov
mov
add
lods
movs
fst
xchg
push
(bad)
aad
mov
cmp
sub
pcmpgtd
push
lock
je
add
adc
loop
(bad)
and
pop
adc
jb
pop
mov
mov
inc
clc
lods
into
or
inc
outs
je
outs
ins
push
or
imul
inc
mov
mov
outs
push
mov
xchg
or
add
sbb
je
mov
repz
stos
int3
and
stc
add
adc
mov
cmp
dec
sar
push
jnp
jb
dec
inc
inc
cmp
in
add
add
int3
je
sbb
dec
lds
(bad)
fiadd
pop
nop
sub
scas
sbb
sub
or
add
test
dec
inc
add
mov
sub
push
pop
cmps
and
push
push
mov
gs
adc
popa
dec
jne
pop
xor
call
xchg
push
xlat
or
push
movs
add
pop
arpl
inc
and
lods
stos
sbb
stos
jo
into
jae
aaa
ins
or
ins
jge
mov
les
sbb
jae
nop
retf
inc
dec
or
fld
push
adc
sub
add
add
dec
and
sbb
jmp
aad
inc
cdq
movs
mov
data16
ror
push
add
cmp
dec
push
adc
and
or
lds
inc
icebp
mov
fmul
dec
push
sub
fsub
adc
sub
pop
push
in
lock
ins
imul
add
sub
push
push
mov
mov
stos
add
inc
and
pushf
pop
ret
mov
dec
dec
add
add
adc
add
and
pushf
xor
or
fucomp
fs
sbb
adc
adc
test
(bad)
iret
adc
addr16
mov
pop
or
sbb
pop
push
push
jnp
fs
movs
add
je
(bad)
fcom
call
push
and
sub
jmp
cld
or
adc
jmp
jbe
or
or
cmp
add
imul
mov
pop
scas
es
(bad)
mov
je
mov
neg
add
ret
fmul
cmp
rcr
push
cld
ror
add
cdq
jae
add
pop
lods
push
sbb
inc
repz
or
mov
movs
aaa
xchg
pop
(bad)
fild
ja
push
lods
fnstsw
imul
sub
std
mov
push
mov
adc
inc
sar
sti
add
sar
xor
push
dec
sti
ins
pop
ret
xor
pop
sub
lea
stc
shl
mov
lods
sub
aas
or
movups
pop
xchg
fiadd
inc
loop
add
inc
inc
and
pop
ja
aam
rol
push
loop
loop
sbb
xchg
call
pop
repz
(bad)
or
or
jge
dec
dec
add
fidiv
jb
rcl
movs
test
push
push
scas
jo
in
loop
jle
add
or
jge
and
push
push
inc
adc
xor
movs
dec
xor
push
inc
adc
mov
dec
push
(bad)
enter
dec
mov
sub
pop
jge
add
pop
jns
jge
or
or
add
and
aam
fmul
dec
push
inc
mov
jle
push
clts
xchg
sub
add
cld
add
mov
dec
add
xor
out
jo
push
push
add
out
fdivr
cmp
js
mov
mov
dec
sbb
(bad)
and
pop
add
ja
xor
jl
cld
add
push
dec
jo
clc
imul
adc
push
call
dec
outs
ins
jns
adc
jbe
ja
data16
mov
pop
push
and
xchg
dec
hlt
inc
or
mov
inc
imul
jp
dec
gs
jo
xor
push
popf
pusha
mov
sub
sbb
ins
xor
push
add
push
pusha
cmp
and
gs
mov
cli
jb
fcmovu
pop
test
dec
jae
cmp
in
or
push
inc
imul
in
or
popa
and
test
mov
sub
outs
lods
fwait
cmp
and
jno
and
pop
(bad)
clc
outs
jb
inc
jne
outs
or
mov
cmp
adc
sar
push
je
ins
jp
addr16
inc
cmp
arpl
imul
ret
cmps
retf
ins
jne
inc
adc
fld
sub
sub
adc
test
dec
addr16
xchg
push
pusha
test
shl
inc
out
adc
xor
inc
imul
dec
das
pop
jno
scas
sbb
ss
or
add
sub
xor
or
sub
xor
int
pop
loopne
sbb
popa
enter
mov
mov
jmp
jae
cmp
fs
arpl
mov
nop
xor
imul
inc
dec
enter
adc
push
out
stc
out
lock
loopne
cmp
scas
or
ret
in
ss
mov
icebp
jmp
dec
icebp
aaa
or
ja
ror
fwait
sbb
jmp
fisttp
push
push
pusha
leave
push
dec
fimul
xchg
inc
popa
jae
pop
mov
arpl
push
jo
inc
push
dec
outs
ja
rcl
test
or
sub
scas
cmp
pop
aam
or
push
in
arpl
adc
(bad)
loope
or
mov
dec
xor
inc
push
pop
cmp
fs
js
and
xchg
lahf
out
sbb
push
sbb
leave
std
dec
sub
adc
(bad)
(bad)
pop
(bad)
sub
adc
dec
push
adc
call
or
jb
adc
cld
add
add
fs
adc
jecxz
sub
data16
xor
or
je
arpl
mov
push
mov
sub
hlt
imul
inc
retf
jl
jl
sbb
retf
adc
sub
addr16
push
sub
add
dec
push
das
jl
inc
ret
fneni(8087
xchg
cmovb
(bad)
pusha
retf
jg
xchg
pop
sar
lods
scas
mov
popa
dec
gs
sbb
out
or
xor
cmps
mov
mov
dec
outs
jne
fst
jae
lods
lahf
ins
(bad)
ficom
ins
jnp
bound
push
dec
ret
call
push
das
jbe
ds
xchg
add
hlt
retf
ins
popa
lods
dec
sbb
inc
adc
ss
mov
or
jle
adc
aas
ret
(bad)
jo
scas
add
push
add
xor
adc
fs
hlt
ins
out
ret
mov
int3
addr16
shl
jne
pop
or
popa
sbb
ins
daa
mov
inc
jne
pop
mov
fcomip
xchg
mov
outs
mov
fs
mov
(bad)
in
or
dec
gs
jbe
or
adc
adc
test
dec
jbe
repnz
imul
jnp
ja
movs
xor
(bad)
pop
dec
or
lods
(bad)
add
popf
add
xchg
mov
or
cmp
pop
shr
lahf
jne
cmp
cwde
mov
call
fidiv
pop
ss
ins
inc
jnp
xor
or
or
loopne
add
adc
stc
sub
push
popa
adc
adc
nop
stos
pop
adc
jbe
aam
imul
push
inc
arpl
adc
adc
fs
jo
mov
pop
enter
mov
push
fadd
data16
sub
mov
pop
ds
jo
cmp
xchg
cmp
mov
rcl
push
leave
aam
xchg
(bad)
jg
out
pop
dec
dec
push
push
pop
inc
dec
push
push
pop
or
adc
mov
enter
add
add
mov
shr
mov
jbe
inc
push
mov
jmp
je
cmp
leave
cmp
sbb
iret
scas
sti
bound
pop
iret
dec
pop
inc
push
sbb
inc
push
push
mov
out
dec
inc
inc
adc
inc
dec
dec
pop
inc
inc
inc
push
inc
and
pop
jb
inc
pop
pop
pop
pop
xor
dec
or
push
xchg
clc
inc
loopne
loopne
inc
test
cmp
iret
setno
adc
and
test
sub
jae
psubusw
adc
mov
es
xor
mov
inc
push
jo
and
sbb
fmul
scas
xor
pop
dec
jl
js
imul
add
push
push
inc
add
rcl
xchg
dec
dec
or
mov
lods
add
xchg
ror
cli
out
jo
push
xor
sub
jg
outs
hlt
add
push
dec
inc
cdq
cs
rol
dec
xor
pop
dec
dec
ja
add
inc
push
xor
push
push
xlat
fimul
popa
push
das
add
inc
sub
sbb
dec
dec
push
sub
enter
xor
cwde
dec
inc
dec
push
js
xchg
add
inc
push
push
inc
cwde
cdq
outs
and
aaa
add
das
rol
cld
dec
xchg
cmp
adc
out
push
std
sub
fadd
or
jl
call
or
adc
sub
int
in
pop
inc
or
cmp
mov
xchg
adc
or
add
sub
sbb
gs
imul
jae
ret
pop
push
jo
test
enter
adc
pop
sar
int
test
xchg
inc
dec
out
dec
sub
(bad)
call
xor
jmp
adc
dec
dec
xor
mov
sub
in
pop
pushf
inc
push
push
add
mov
jle
mov
push
pop
data16
pop
mov
fimul
xor
arpl
xor
aaa
push
mov
pop
sbb
outs
xlat
push
pushw
inc
pushf
ins
xor
or
cwde
or
cmp
test
xchg
int
sub
shl
sub
or
clc
mov
scas
inc
or
adc
ins
out
outs
cmp
ror
inc
cmp
and
div
and
add
cmps
pop
sbb
bound
mov
dec
adc
and
xor
jbe
xchg
and
es
retf
mov
sbb
(bad)
leave
adc
sbb
or
push
ins
sbb
ins
and
sbb
enter
loop
push
push
inc
inc
add
add
fidiv
jle
bound
and
sub
and
add
add
stc
pop
js
add
cmps
mov
jg
cwde
aas
sub
push
ror
hlt
inc
push
setnp
mov
sub
inc
mov
imul
es
push
daa
or
xor
cld
mov
sub
pushf
dec
add
or
dec
ins
mov
data16
pop
push
inc
es
aad
jae
dec
mov
sbb
and
retf
push
mov
fimul
sub
xchg
and
add
sub
bound
add
and
fs
int
pop
sbb
aad
push
pop
imul
adc
test
dec
sub
cmp
sub
dec
sub
test
clts
dec
xchg
adc
push
lock
push
pop
hlt
jg
ins
loop
call
sahf
data16
push
or
loope
push
mov
add
lods
inc
mov
repz
js
push
or
dec
dec
inc
push
ja
or
cmp
push
ins
in
add
jno
out
imul
inc
xor
(bad)
scas
add
cmp
cmp
and
inc
(bad)
xchg
inc
stos
dec
or
add
cmps
sub
push
xor
adc
xor
push
outs
arpl
std
iret
dec
sub
outs
push
unpcklps
fdiv
ds
pop
add
mov
lods
or
loopne
sbb
push
(bad)
outs
rcl
inc
outs
js
push
enter
cs
loop
xlat
test
xor
add
inc
add
(bad)
fdivr
inc
pop
lock
mov
push
push
push
push
inc
mov
fwait
add
or
ja
inc
push
push
push
das
and
pop
push
and
mov
daa
mov
add
push
pushf
cwde
and
mov
push
pusha
ds
xchg
fisttp
or
js
xchg
xchg
xchg
je
ins
push
fs
pop
pop
xchg
xchg
xchg
xchg
push
push
dec
dec
xchg
xchg
xchg
xchg
inc
inc
cmp
xchg
xchg
xchg
xchg
xor
sub
xchg
xchg
xchg
xchg
and
sbb
xchg
xchg
xchg
xchg
adc
or
leave
enter
add
add
enter
hlt
lock
call
in
(bad)
js
mov
aam
pop
or
iret
xchg
mov
cmp
fstp
or
cmp
rol
and
frstor
ror
gs
push
xchg
ret
test
inc
fild
adc
mov
scas
push
pop
leave
pop
sbb
dec
dec
outs
xadd
and
(bad)
cs
push
outs
lods
in
jb
lods
movs
mov
in
cwde
xchg
nop
mov
in
in
test
in
je
ins
in
in
push
in
in
push
push
dec
in
in
dec
inc
inc
cmp
in
in
xor
sub
in
in
and
sbb
in
in
adc
or
in
in
add
cld
add
in
xor
hlt
pop
lock
in
in
call
in
in
aam
enter
in
and
mov
in
mov
lods
test
in
in
mov
in
xchg
nop
mov
test
in
je
ins
push
fs
pop
pop
cs
in
push
dec
dec
dec
dec
dec
dec
inc
inc
cmp
dec
dec
dec
dec
xor
sub
dec
dec
dec
dec
and
sbb
dec
dec
dec
dec
adc
or
and
dec
add
cld
add
daa
daa
daa
daa
hlt
lock
call
in
fdiv
jb
fsub
aam
jb
jb
int3
enter
jb
jb
mov
jb
lods
test
mov
pushf
cwde
xchg
nop
jb
jb
mov
jb
jl
je
jb
jb
ins
push
jb
pop
pop
push
push
jb
jb
dec
dec
inc
inc
jb
jb
cmp
xor
jb
jb
sub
adc
xchg
nop
push
js
add
push
inc
(bad)
cld
add
leave
in
fs
hlt
pop
lock
leave
leave
leave
leave
call
leave
leave
leave
fcom
ror
leave
leave
leave
leave
enter
leave
leave
leave
leave
mov
leave
leave
leave
test
mov
enter
nop
mov
cmp
cmp
xchg
or
js
jo
xchg
xchg
xchg
ins
push
xchg
xchg
pop
pop
push
push
xchg
xchg
xchg
xchg
dec
dec
inc
inc
xchg
xchg
xchg
xchg
cmp
xor
xchg
xchg
xchg
xchg
sub
and
xchg
xchg
xchg
xchg
sbb
adc
xchg
xchg
xchg
xchg
or
add
leave
leave
leave
in
jmp
lock
leave
leave
leave
in
call
leave
leave
(bad)
aam
xchg
fcmovne
leave
int3
enter
xchg
xchg
xchg
xchg
mov
xchg
xchg
xchg
lods
test
mov
pushf
cwde
xchg
nop
xchg
xchg
xchg
xchg
mov
nop
xchg
jl
je
xchg
jbe
mov
lods
ret
cs
punpckhbw
and
fs
pop
pop
jb
jb
push
push
dec
daa
daa
daa
daa
dec
inc
cmp
daa
daa
daa
daa
cmp
sub
daa
daa
daa
sub
sbb
daa
daa
daa
sbb
or
daa
daa
daa
or
cld
daa
mov
xchg
(bad)
clc
hlt
pop
lock
daa
daa
daa
daa
call
jbe
daa
fcom
(bad)
dec
cs
int3
enter
dec
dec
dec
mov
pop
dec
dec
lods
test
movs
mov
sbb
dec
mov
jb
cwde
das
xchg
(bad)
jb
jb
mov
jb
jl
je
jb
jb
ins
push
jb
pop
pop
push
jb
jb
push
dec
dec
inc
jb
jb
inc
cmp
xor
jb
jb
sub
leave
leave
leave
leave
and
sbb
leave
leave
leave
leave
adc
or
jmp
add
das
and
jb
and
loop
mov
cld
std
pop
dec
add
lahf
xor
adc
sahf
out
sahf
adc
sbb
and
enter
pop
or
(bad)
adc
outs
daa
cmp
add
cmp
aam
test
add
into
sub
mov
ja
ret
push
jge
push
mov
mov
push
push
lods
and
sbb
mov
push
push
gs
mov
sub
or
aas
inc
cwde
cmp
add
sbb
push
adc
push
out
dec
mul
ds
dec
and
and
push
add
dec
push
push
mov
mov
out
daa
neg
add
pop
pop
inc
pop
add
dec
push
dec
mov
mov
das
inc
aas
cmp
push
push
mov
imul
dec
push
push
xor
mov
inc
(bad)
pop
push
dec
add
push
fsub
pop
adc
(bad)
push
fs
in
std
das
mov
sub
pushf
das
pushf
cwde
retf
cli
jb
cwde
add
xchg
js
add
les
mov
ins
or
add
mov
mov
mov
push
pop
xor
shl
mov
das
push
test
lea
outs
adc
mov
aam
jo
or
sti
inc
leave
call
mov
sbb
sbb
das
and
jmp
and
je
clc
pop
or
gs
ins
outs
jo
push
leave
cmp
adc
inc
lahf
aam
cmp
adc
or
adc
xchg
cli
rcl
je
pop
fistp
cs
jg
and
dec
xor
pop
inc
dec
cmp
jb
and
xor
mov
aaa
and
ffreep
add
sub
mov
inc
push
inc
je
fiadd
movs
cmc
and
jmp
mov
and
fs
data16
test
pop
movq
push
dec
add
movq
jo
xor
adc
push
jmp
cmps
call
jmp
and
add
mov
mul
shr
pop
sar
push
mov
and
cs
data16
ret
or
mov
in
or
push
sbb
inc
sbb
wbinvd
shl
jg
lea
dec
aaa
sbb
push
nop
retf
add
add
in
sbb
dec
and
dec
add
js
ins
xor
inc
add
call
xor
frstor
mov
mov
test
aaa
cmp
je
adc
je
outs
and
inc
adc
push
jne
cwde
jge
aad
sub
jg
sub
aam
(bad)
xchg
inc
fst
fst
test
dec
arpl
mov
push
inc
add
and
jns
xor
cmp
xor
icebp
daa
and
sub
cdq
fcomp
xor
repnz
xchg
pushf
nop
popf
cmp
rcr
popf
inc
popf
nop
sub
popf
leave
pop
test
popf
(bad)
mov
or
popf
loopne
int
xchg
ins
pop
pop
and
and
sbb
cmp
jg
pop
jl
mov
int
pushf
pop
in
(bad)
add
jne
in
gs
lahf
adc
and
xor
push
mov
in
lahf
mov
xchg
int
int
repnz
and
cmp
mov
int
mov
xor
xor
loopne
push
push
sbb
out
arpl
pushf
jecxz
add
add
xchg
mov
cmps
or
in
push
dec
xchg
adc
mov
push
mov
ins
xor
cmp
dec
data16
push
jmp
mov
int
xor
xchg
add
daa
cmp
inc
popf
rcr
popf
cmp
ins
push
(bad)
loope
loopne
dec
jns
cmp
pop
cmp
enter
xor
loopne
xor
xor
(bad)
push
out
pop
dec
xchg
lahf
add
sub
or
cmp
inc
repnz
popf
inc
popf
cmp
xor
xor
cmp
jb
jns
xor
xchg
mov
loopne
js
push
in
popf
scas
jne
not
jmp
nop
sub
push
jg
jo
xchg
cmp
popf
pop
sbb
xchg
sub
or
xlat
ror
xor
ins
fnstenv
and
xchg
aas
dec
popa
sub
and
jno
popa
bound
int3
es
sbb
mov
xor
gs
test
sbb
and
popf
xor
xor
jp
jecxz
jns
lods
pushf
fmul
fsub
loopne
pop
repnz
(bad)
add
xchg
cmp
add
push
sbb
enter
push
mov
test
bound
inc
sbb
or
sbb
push
cdq
push
(bad)
retf
jl
xor
repnz
(bad)
or
xchg
jno
(bad)
loopne
inc
repnz
mov
popf
xor
jecxz
in
sbb
pop
retf
mul
loopne
mov
retf
nop
mov
and
jmp
fcmovnbe
mov
and
mov
add
push
frstor
(bad)
push
xor
mov
push
mov
and
in
pop
ss
and
leave
popa
and
ins
mov
arpl
dec
or
(bad)
into
ja
push
or
lahf
mov
or
adc
xor
jo
or
add
jl
add
cld
pushf
cld
push
gs
outs
arpl
or
pop
mov
std
push
inc
arpl
mov
loopne
or
xor
or
jbe
loope
pop
xor
inc
adc
mov
add
enter
cmp
into
jle
scas
adc
inc
je
sar
mov
push
sbb
adc
pop
cmp
fwait
lock
pop
add
add
jno
and
jp
retf
popf
sub
or
xor
shr
or
adc
mov
test
dec
adc
shl
add
mov
scas
push
add
xor
mov
test
addr16
loop
loop
sti
mov
jno
stos
and
add
jbe
jge
adc
lea
sbb
mov
push
mov
push
lock
test
fcom
and
inc
rol
mov
mov
adc
in
ret
and
shr
and
mov
pop
jg
fcomp
push
xchg
cmp
sti
int
mov
push
(bad)
call
cmp
push
sbb
sahf
iret
pop
shr
les
sub
mov
in
ins
rcr
or
daa
sub
loopne
sbb
fsubr
bound
sub
dec
add
dec
js
add
je
or
dec
retfw
add
mov
cmp
sti
cmp
jl
dec
dec
mov
(bad)
add
shr
cmp
jae
add
inc
mov
imul
xlat
(bad)
adc
dec
adc
dec
lock
push
add
mov
pop
gs
fimul
fist
push
push
popf
and
adc
xor
retf
mov
leave
xor
bound
jle
mov
clc
dec
or
dec
jnp
call
add
add
shl
cs
hlt
mov
call
gs
mov
cmp
lods
out
fdivp
int3
cmp
pop
icebp
jmp
(bad)
mov
out
and
push
mov
cmp
and
dec
push
push
push
stos
cmp
test
mov
bound
sub
add
jnp
sub
push
add
enter
lahf
nop
push
or
cmp
xor
jmp
jb
cmp
and
xor
jmp
jg
mov
ins
or
repnz
push
lods
inc
shl
xchg
jmp
and
push
sub
jo
test
jp
nop
xchg
sub
in
dec
(bad)
(bad)
cmp
sub
sbb
outs
fist
mov
test
(bad)
and
retf
sbb
xchg
pop
ds
sbb
cmp
lock
pop
or
xchg
or
push
std
or
jbe
dec
adc
cmp
sub
sbb
jg
inc
jecxz
in
cdq
fbstp
aam
or
iret
push
sub
or
pushf
test
mov
cmp
jmp
aas
pop
pop
(bad)
mov
jb
or
jmp
cmp
xchg
mov
sub
fbld
(bad)
push
xchg
fmul
std
(bad)
mov
mov
add
ss
jmp
adc
les
movntps
pushf
add
xchg
in
imul
int3
fild
(bad)
fild
lds
push
cmp
out
push
cmp
fstp
enter
dec
xchg
outs
sub
aas
fstp
add
sahf
call
sub
xor
shr
stc
lods
pop
sar
xor
jmp
pop
xchg
pop
sub
pop
jmp
pop
dec
sbb
mov
and
por
sbb
movs
or
sbb
adc
jl
fadd
mov
and
pop
outs
jns
(bad)
mov
jle
das
shl
je
out
bt
bound
(bad)
mov
lds
popf
out
js
push
jo
pop
push
inc
inc
fidivr
xchg
mov
xor
cmp
sub
pop
retf
(bad)
and
mov
into
imul
and
inc
inc
mov
inc
or
jmp
and
gs
push
inc
pslld
and
lods
fstp
mov
aas
and
and
sub
or
or
add
iret
sub
xchg
add
add
mov
gs
push
outs
int3
(bad)
out
fldcw
into
cmps
test
and
or
adc
and
ins
xor
inc
mov
aam
out
popf
jmp
inc
jne
jo
sbb
dec
and
dec
ss
mov
dec
pop
inc
mov
or
xchg
jnp
and
xor
mov
sub
cmps
adc
pusha
jmp
sub
pop
loopne
jecxz
sub
mov
rol
in
xor
loope
pop
and
sub
nop
int
push
and
xchg
and
cwde
in
rcr
popf
inc
popf
cmp
and
nop
popf
int
push
add
adc
fild
mov
cmp
inc
dec
or
push
cs
adc
ins
mov
cmps
mov
mov
aas
sbb
jl
mov
movs
or
hlt
inc
dec
loopne
add
xchg
loopne
push
data16
push
xchg
mov
sbb
int
mov
fiadd
outs
test
or
daa
dec
adc
call
jmp
mov
or
gs
sub
ins
sub
sti
fsub
je
sub
fidivr
daa
mov
fiadd
call
test
sub
sub
jne
aad
push
push
xchg
imul
test
dec
xor
xchg
pop
nop
cmp
xchg
in
retf
fs
repz
call
movs
shl
outs
xlat
jb
jb
daa
fcmovnu
outs
push
daa
js
fs
stc
ins
add
mov
test
in
popa
sbb
inc
popa
outs
fadd
retf
dec
ins
sub
and
jg
es
or
mov
sti
inc
jo
push
repz
push
push
push
mov
repz
or
push
ja
gs
dec
add
es
pusha
lock
pop
push
(bad)
cmp
ja
out
dec
sbb
test
dec
add
push
gs
jb
mov
ins
imul
sub
rcl
or
(bad)
add
mov
rol
xchg
mov
outs
ror
in
jno
jp
adc
loopne
ror
inc
jo
xor
fiadd
dec
mov
retf
mov
xor
ins
dec
dec
push
test
cld
mov
mov
sub
push
sub
lock
sbb
push
out
add
pop
push
es
cli
add
shl
inc
add
adc
adc
push
hlt
lea
add
clc
dec
sub
fwait
sub
movs
add
add
loop
(bad)
add
test
sar
jmp
ins
lock
cmp
test
cmp
push
stos
mov
mov
sbb
cmp
jne
cwde
xor
in
adc
and
iret
rcr
call
add
in
inc
pop
stc
push
mov
cld
jl
add
or
add
dec
js
ds
mov
mov
in
mov
push
test
into
or
xor
clc
fcomi
or
je
xor
pushf
push
je
mov
mov
add
mov
jmp
pop
mov
aam
sbb
fdivr
idiv
(bad)
jo
test
in
pushf
(bad)
adc
les
or
cmovno
js
sbb
pushf
(bad)
mov
xchg
jl
mov
inc
nop
je
push
or
enter
inc
fiadd
xor
adc
cmp
cwde
cmovno
inc
lods
or
xchg
movs
repnz
add
sub
in
inc
dec
mov
xor
scas
aad
imul
mov
daa
push
dec
imul
pop
jg
or
cmp
or
pop
and
mov
popa
jg
daa
jg
test
out
adc
sbb
aas
push
dec
dec
gs
or
out
dec
mov
dec
pop
push
imul
dec
loopne
jge
add
push
outs
or
ret
adc
xor
or
push
sub
or
push
pop
lods
ror
loopne
aam
iret
cdq
pop
add
and
pop
lds
movs
int
rcr
fmul
mov
xchg
rcr
or
popa
xor
cwde
jge
or
ja
inc
sub
rol
jle
imul
or
and
mov
out
jo
add
or
add
psllw
dec
dec
repnz
cmc
dec
dec
dec
dec
div
clc
stc
dec
dec
dec
dec
cli
sti
cld
std
dec
dec
dec
dec
(bad)
jmp
loope
dec
dec
dec
loop
in
dec
dec
dec
dec
out
call
dec
jmp
dec
out
out
rcl
dec
dec
dec
dec
rcl
aam
dec
dec
dec
dec
(bad)
xlat
fcomp
dec
dec
dec
dec
fcmovu
(bad)
dec
dec
dec
dec
(bad)
rol
dec
dec
dec
ret
lds
dec
dec
mov
leave
dec
dec
dec
dec
retf
int
dec
dec
dec
into
iret
mov
dec
dec
dec
dec
mov
mov
dec
dec
dec
dec
mov
mov
dec
mov
dec
dec
dec
mov
dec
dec
dec
mov
dec
dec
dec
cmps
cmps
test
dec
dec
dec
dec
stos
stos
lods
lods
dec
dec
dec
dec
scas
scas
nop
xchg
dec
dec
dec
dec
xchg
xchg
xchg
xchg
adc
dec
xchg
xchg
push
mov
js
mov
mov
push
mov
dec
dec
mov
sub
jae
add
push
stc
retf
adc
test
or
and
xor
xor
xchg
sbb
and
and
mov
inc
mov
and
push
mov
sbb
sub
sub
cmp
inc
add
test
xchg
cmp
dec
in
cmp
jb
add
pop
pusha
or
(bad)
mov
shl
les
mov
push
push
or
xor
test
or
add
dec
arpl
bound
aaa
dec
fisub
inc
cmp
inc
adc
test
mov
ins
dec
push
div
imul
lods
inc
cmps
fisub
mov
ret
jnp
jmp
outs
push
inc
and
scas
sbb
push
aas
imul
adc
out
add
aas
loope
idiv
ins
jp
mov
mov
push
adc
cs
inc
popa
cli
xor
pusha
pop
lahf
xchg
(bad)
jo
(bad)
jbe
cmps
push
jb
jbe
add
and
jmp
pop
test
pop
inc
inc
mov
pop
test
imul
imul
jno
push
arpl
lahf
test
dec
sub
mov
shr
test
adc
arpl
dec
dec
outs
setp
dec
dec
sahf
lahf
add
add
xchg
dec
mov
dec
dec
mov
dec
dec
jb
je
dec
dec
dec
dec
jbe
js
dec
dec
dec
dec
jp
jl
dec
dec
dec
dec
jle
pusha
popa
dec
dec
dec
dec
bound
gs
dec
dec
dec
addr16
dec
dec
dec
push
ins
ins
dec
dec
dec
dec
outs
outs
push
push
dec
dec
dec
dec
push
push
push
push
dec
dec
dec
dec
push
push
pop
pop
dec
dec
dec
dec
pop
pop
pop
pop
dec
dec
dec
dec
pop
pop
inc
inc
dec
dec
dec
dec
inc
inc
inc
inc
out
or
jg
sti
sub
jae
in
pop
inc
cwde
or
add
repz
aaa
ret
push
mov
clc
cmp
ja
iret
dec
outs
add
cmp
jl
add
ret
mov
mov
mov
push
out
rcr
call
and
jo
xor
mov
push
in
cwde
into
cmps
push
adc
fiadd
jo
push
add
ret
(bad)
retf
and
push
or
adc
inc
pop
add
mov
cmp
inc
shl
pusha
dec
push
or
not
sbb
push
aam
cmp
push
jo
fwait
jo
dec
cmp
mov
retf
mov
mov
lock
add
ret
(bad)
fistp
sahf
add
add
add
push
add
jo
add
add
inc
jl
add
add
jle
mov
and
xor
inc
add
pusha
add
sbb
add
xchg
inc
add
add
add
les
jp
and
lds
add
add
cmp
add
dec
add
pusha
cs
pop
rol
add
add
mov
mov
sar
stc
das
or
add
add
dec
adc
add
add
out
std
jg
add
add
add
add
add
add
add
push
loopne
lock
inc
cmp
das
add
inc
mov
jl
inc
xor
pusha
add
add
jne
rol
pop
add
add
sbb
or
add
(bad)
push
add
add
push
and
loop
push
cmp
add
xor
pushf
inc
test
inc
or
xor
out
sub
adc
rol
pcmpgtd
jne
daa
mov
inc
loope
out
ss
add
sub
dec
dec
add
cmp
data16
into
fnstsw
sub
push
jo
cmps
loopne
stos
inc
add
outs
aas
dec
mov
adc
and
cwde
sbb
xor
inc
add
adc
lods
fst
bound
jo
outs
push
fadd
jbe
push
loopne
das
add
arpl
cmp
out
mov
and
or
add
mov
sbb
mov
rol
xchg
mov
fsubrp
inc
push
push
push
pusha
push
test
jo
add
push
mov
out
scas
std
pop
loopne
lock
mov
xor
inc
xor
cld
push
pop
pusha
pop
jo
push
add
pop
mov
div
dec
sub
add
dec
or
or
sbb
and
xor
inc
or
jo
or
out
mov
or
or
or
aas
jnp
or
dec
test
and
xor
inc
or
pusha
or
scas
(bad)
jo
xor
mov
or
xor
pop
mov
mov
or
adc
lock
fwait
sub
ret
bound
or
or
sub
nop
inc
push
or
mov
nop
retf
outs
jg
push
mov
or
es
or
or
lahf
outs
stc
ficom
or
out
add
loopne
push
or
jo
push
sub
sahf
or
movs
fisttp
mov
pop
rcl
or
fwait
or
or
adc
or
or
inc
(bad)
mov
lock
or
mov
jecxz
scas
push
jle
or
or
or
jae
or
es
jmp
or
add
or
or
gs
pop
adc
rcr
pop
jbe
or
or
mov
jo
or
ror
or
test
and
xor
inc
push
push
push
pusha
push
jo
or
nop
push
mov
push
mov
ror
push
loopne
lock
jle
pop
cld
(bad)
push
lar
wrmsr
cmovo
out
push
punpcklbw
jo
or
out
sbb
dec
mov
pusha
jg
imul
bswap
xchg
push
push
cmp
hlt
pop
adc
(bad)
aad
sbb
add
dec
cmps
ins
mov
mov
and
(bad)
mov
jo
adc
mov
je
mov
mov
lahf
je
jbe
loopne
lock
add
push
adc
dec
and
mov
aas
push
repz
mov
push
neg
aaa
push
adc
jno
frstor
xor
add
add
ficomp
add
mov
sub
or
dec
adc
inc
add
ret
stos
adc
push
xchg
sbb
adc
adc
cmps
and
imul
cmp
cmp
outs
mov
add
add
jo
inc
in
push
pop
aaa
adc
or
xchg
fmul
add
jmp
divps
cmp
adc
movhlps
adc
lahf
adc
sar
adc
adc
adc
cmp
xchg
adc
adc
adc
adc
jg
nop
adc
sub
or
add
adc
fnstsw
adc
adc
adc
fnstsw
jg
adc
adc
adc
adc
push
aas
pusha
mov
mov
pop
ret
ja
add
dec
push
leave
inc
cmp
pop
cmp
scas
in
in
retf
push
or
call
lock
adc
push
fstp
xlat
pop
cmp
and
xor
xor
adc
jo
out
ret
adc
mov
(bad)
fcom
adc
rol
scas
adc
adc
mov
jnp
xchg
lock
jmp
adc
inc
push
or
adc
mov
add
femms
(bad)
jo
push
xor
mov
add
add
retf
dec
mov
add
push
and
sub
push
jg
sti
(bad)
icebp
add
jp
adc
pop
es
xor
jg
in
imul
sub
add
or
fimul
inc
lds
ret
and
sub
scas
aaa
pop
das
add
fild
pop
or
aas
outs
fisttp
jo
cmp
mov
add
adc
pop
mov
pop
or
sar
mov
lods
and
cli
lock
push
sti
sub
das
hlt
adc
and
xor
inc
sbb
and
xor
(bad)
ds
sbb
or
sbb
mov
add
ror
loopne
(bad)
in
stc
sbb
sbb
sbb
ss
sbb
sbb
pop
adc
cld
in
imul
enter
xor
add
mov
mov
add
push
sbb
jo
sbb
sbb
dec
in
std
sub
imul
sub
sbb
push
xchg
and
iret
fcom
add
add
sti
mov
out
loopne
add
or
mov
ds
jge
jnp
sbb
add
fidivr
push
adc
or
adc
adc
fs
(bad)
push
sbb
sbb
sbb
add
sbb
mov
fisttp
pcmpgtd
adc
adc
mov
mov
sbb
or
fld
and
adc
sbb
movs
sbb
retf
add
or
iret
add
xchg
imul
add
fidivr
sbb
add
push
add
or
mov
push
add
push
ficom
ficomp
or
sub
inc
dec
outs
add
lods
out
sub
xlat
aaa
sbb
jbe
mov
or
xchg
sub
add
add
add
popa
fld
adc
add
mov
dec
aas
call
jmp
dec
mov
dec
and
jg
in
pop
in
outs
dec
pop
add
adc
jne
or
push
push
shl
pusha
xor
movs
jg
sbb
add
fcmovb
call
mov
add
not
xor
ficom
ins
xor
or
mov
fnsavew
sub
or
test
scas
cmp
push
(bad)
test
sub
lea
call
mov
pop
sbb
adc
jnp
jmp
pop
fadd
pop
sar
psubusw
ins
add
in
mov
pop
or
daa
inc
mov
mov
imul
lods
bound
sbb
loopne
inc
or
add
in
sbb
fild
pop
or
or
pop
call
add
sbb
imul
xor
js
outs
mov
enter
xchg
add
mov
adc
test
pop
lahf
jo
fisttp
aas
lahf
add
and
dec
xor
sub
mov
pusha
jnp
sbb
cmp
jne
in
mov
mov
(bad)
push
sbb
sbb
shr
add
int
push
(bad)
adc
add
call
sbb
xlat
bound
mov
inc
mov
add
phaddsw
adc
pop
loopne
sub
push
mov
cmp
push
js
fstp
add
fadd
or
pop
(bad)
jns
inc
push
movs
push
dec
pop
and
mov
(bad)
(bad)
xor
lahf
push
sub
test
fdivr
adc
and
xchg
fsubr
add
adc
add
sub
imul
add
pop
inc
xchg
bound
sbb
cmp
imul
popa
pop
adc
add
pop
add
add
mov
jmp
mov
pop
aas
adc
push
mov
sbb
mov
adc
mov
adc
add
pop
add
or
add
sbb
sub
and
ins
add
mov
push
mov
sub
pop
out
or
sbb
ret
mov
cmp
and
ins
test
mov
lods
loope
daa
and
lds
ja
sbb
rol
adc
xchg
cmp
mov
xor
aaa
dec
adc
lods
cmp
ror
lea
add
adc
gs
mov
fbld
add
cmp
mov
aas
or
sub
out
imul
sbb
cmps
mov
push
mov
sub
imul
adc
mov
jo
adc
cmp
sbb
inc
or
adc
xchg
sub
sbb
inc
cwde
mov
data16
and
cmps
mov
in
xchg
cmps
adc
jg
scas
rcr
or
daa
lahf
mov
add
popf
jnp
inc
ret
add
xlat
jecxz
out
add
gs
add
jnp
sbb
dec
sbb
and
push
add
in
jb
cmp
pop
pop
stos
mov
sbb
push
inc
sbb
add
pop
and
mov
addr16
(bad)
mov
ss
sbb
daa
rcl
pop
cmp
mov
add
pop
or
push
pusha
mov
out
and
add
arpl
pop
pusha
or
aas
sbb
movs
mov
xchg
sbb
out
push
mov
and
dec
mov
mov
(bad)
adc
pop
and
daa
add
add
out
retf
mul
xor
test
adc
push
mov
(bad)
(bad)
mov
sub
sbb
adc
xor
adc
cdq
xchg
cmps
adc
ret
mov
sbb
cs
sub
push
inc
sub
daa
sbb
and
push
jecxz
sub
add
sub
mov
cmp
mov
xor
lods
mov
mov
sub
push
daa
jbe
adc
or
fnstcw
sbb
mov
or
mov
jmp
fld
mov
jae
outs
xor
movs
loope
rcr
mov
jno
dec
add
iret
mov
jbe
sbb
jnp
xor
or
fwait
test
aaa
rcr
xchg
sbb
bound
pop
cmp
add
adc
mov
add
push
jnp
push
or
ins
jnp
xchg
or
rcl
adc
dec
adc
mov
pushf
adc
jge
adc
adc
jecxz
inc
add
pop
or
xor
dec
xchg
adc
sysret
dec
mov
sbb
xchg
pop
xor
adc
pop
dec
mov
mov
sbb
xor
push
aaa
push
push
(bad)
xchg
adc
inc
inc
and
sub
std
pop
jecxz
push
xchg
icebp
add
int
sar
mov
xchg
pop
jmp
add
iret
or
mov
add
ret
ss
popf
adc
cmp
aam
and
or
jae
mov
dec
push
add
inc
sub
mov
mov
mov
dec
int
fcmovnu
scas
sub
cmps
inc
inc
xor
(bad)
push
pop
sbb
adc
aam
sbb
sbb
loop
rcr
retf
pop
enter
neg
and
sub
pop
push
fild
mov
push
mov
bound
pop
jb
add
add
mul
ins
ds
add
or
xor
and
ins
fcomip
and
adc
jo
jnp
les
inc
cwde
inc
inc
rol
add
fadd
arpl
or
push
push
jle
or
mov
adc
mov
into
ja
add
add
and
into
push
push
add
add
add
and
sbb
or
xor
jb
mov
push
ins
add
pop
sub
cs
push
or
fiadd
rcr
add
pop
mov
sar
scas
or
sbb
verr
test
pop
inc
mov
fadd
rcr
inc
inc
pop
inc
add
call
xchg
jp
ja
sub
shl
jp
push
pusha
cmp
loopne
pop
lock
cwde
push
fcmovnb
inc
adc
lock
stos
loopne
xor
mov
das
rol
mov
sub
and
sbb
dec
lock
add
add
mov
mov
fwait
jo
mov
lds
xor
mov
aad
(bad)
adc
invd
adc
xchg
xchg
xchg
sbb
and
adc
add
jg
xchg
or
das
shl
xorps
adc
daa
ror
lahf
shl
pop
and
(bad)
xor
(bad)
stos
in
pop
inc
(bad)
jg
les
add
mov
outs
or
inc
fisubr
aas
add
dec
dec
dec
or
push
sbb
and
and
xchg
xchg
(bad)
xor
inc
leave
leave
xchg
xchg
dec
dec
adc
nop
adc
push
lahf
mov
or
mov
xor
pop
shl
cmp
aas
pop
adc
push
call
cdq
cmp
(bad)
call
dec
ret
sar
aas
lds
aas
call
imul
push
aad
pop
push
jbe
or
das
leave
ud0
in
sti
fnstcw
xor
jecxz
jmp
and
lds
mov
leave
ins
loop
stos
jmp
mov
aas
sbb
mov
jg
(bad)
mov
adc
mov
adc
(bad)
clc
inc
lahf
call
cvttps2pi
pop
mov
adc
jg
or
sbb
adc
cs
lahf
mov
add
iret
push
add
add
inc
sub
scas
pop
and
adc
jg
xor
daa
daa
daa
daa
cmp
cmp
pop
enter
aas
pop
inc
ficomp
inc
ud0
das
inc
inc
pop
inc
xchg
xchg
xchg
xchg
inc
inc
inc
inc
xchg
xchg
xchg
xchg
inc
inc
inc
inc
mov
test
stos
inc
fisttp
and
nop
xor
jg
inc
xor
mov
jb
das
and
loop
sub
test
xor
lahf
dec
jo
in
cmp
scas
jo
(bad)
pop
mov
mov
pop
dec
fnstsw
adc
jecxz
xchg
fwait
cs
aas
and
cmp
pop
icebp
repz
stc
cmc
jo
mov
jb
adc
dec
jg
loopne
mov
xchg
pop
dec
and
ins
sub
out
call
pop
push
(bad)
dec
dec
xchg
dec
pop
mov
pop
jmp
(bad)
pcmpeqb
aas
loopne
cmp
das
pop
xchg
loop
inc
add
add
mov
outs
scas
push
in
imul
add
xor
and
fild
push
sub
mov
jg
and
or
test
mov
add
lahf
ins
push
xor
(bad)
mov
adc
pop
mov
aad
(bad)
aas
les
inc
fistp
mov
les
prefetcht2
scas
unpckhps
sub
aas
pop
xchg
inc
outs
aas
mov
or
pop
add
xor
inc
aas
mov
pop
das
adc
push
and
mov
and
and
(bad)
nop
fidivr
mov
inc
dec
out
fild
adc
sbb
add
js
xor
int
jl
adc
loope
rol
mov
push
inc
push
inc
or
test
adc
adc
and
xor
inc
scas
inc
sbb
jno
push
push
aam
cdq
adc
or
inc
imul
inc
add
push
push
mov
and
inc
iret
test
test
sbb
popf
mov
dec
pop
ins
sbb
gs
stc
push
test
cmps
pop
or
inc
je
gs
and
aaa
mov
mov
mov
jb
ins
test
or
adc
arpl
xor
outs
addr16
daa
(bad)
inc
popa
js
lock
and
adc
mov
cmp
(bad)
add
iret
icebp
imul
mov
or
imul
sub
push
jne
push
mov
mov
mov
ins
jo
neg
out
shl
jns
add
push
push
sbb
push
ins
push
mov
out
or
push
pop
push
loopne
into
add
or
xchg
add
push
inc
daa
add
and
add
sbb
popa
fs
bound
adc
push
jo
leave
xor
in
imul
jl
and
push
add
in
stc
mov
inc
movs
popf
mov
xor
inc
sub
outs
out
in
lock
sbb
fs
sahf
pop
ja
mov
add
mov
jns
clc
repz
sub
xchg
iret
leave
cmp
fsubr
in
stc
dec
fsubr
test
adc
jns
out
enter
push
rcl
xchg
out
in
lds
aad
and
mov
lods
sbb
mov
test
shl
shl
stc
mov
jbe
into
xchg
ror
enter
nop
int3
pop
mov
int3
sub
test
pop
and
repnz
js
and
(bad)
fnstsw
aam
pusha
mov
mov
sbb
jecxz
mov
xor
in
jbe
jbe
adc
mov
jo
call
jl
mov
lahf
push
gs
jb
push
call
rcr
dec
rol
fbld
aas
adc
push
add
pop
jmp
iret
or
dec
jo
sbb
enter
and
add
shr
and
aaa
or
mov
adc
or
cmp
inc
jns
data16
inc
loop
retf
cmp
adc
pop
bound
test
invd
or
test
sbb
cmp
iret
sahf
or
inc
dec
inc
mov
pop
inc
dec
pop
or
cmp
jp
inc
scas
vmovdqu
jae
mov
pop
fs
out
test
das
leave
push
or
push
and
fisttp
sbb
inc
pop
sti
adc
sbb
(bad)
and
or
jo
add
icebp
push
aam
add
and
and
cli
push
out
mov
cld
and
(bad)
daa
and
add
sbb
daa
daa
out
mov
retf
xor
inc
xchg
push
leave
add
or
mov
add
call
fadd
fwait
add
jbe
or
add
dec
and
mov
or
inc
ss
pop
inc
fld
mov
sar
leave
aaa
push
add
adc
shl
cs
pop
inc
jne
inc
ud2
inc
ins
inc
inc
mov
mov
add
mov
jbe
push
sub
cmp
dec
and
lea
xor
sbb
sub
mov
push
retf
mov
aaa
scas
xchg
loopne
popa
jae
or
outs
add
mov
ins
pop
mov
cmp
repz
(bad)
add
mov
cmp
or
repz
jno
and
or
sub
inc
inc
call
add
mov
mov
les
scas
mov
inc
add
xor
jmp
pop
test
or
push
add
and
add
ror
fmul
mov
sbb
pop
inc
add
xor
or
xchg
nop
daa
adc
mov
push
push
inc
inc
arpl
imul
mov
daa
mov
paddb
jae
xchg
xchg
xchg
xchg
leave
enter
mov
lock
push
dec
or
mov
sub
ins
out
inc
lea
add
pop
arpl
mov
loopne
jle
sub
and
or
sbb
cwde
or
je
mov
es
pop
aam
aad
pushf
inc
mov
retf
sbb
pop
es
jne
add
jge
in
or
in
sbb
and
fs
dec
add
pop
inc
sahf
call
sbb
add
sub
dec
scas
and
fcomp
cmp
sbb
popa
add
pop
mov
aaa
mov
sbb
pop
adc
sub
leave
adc
ins
dec
out
adc
sub
or
dec
mov
movs
dec
adc
and
sbb
cli
push
popa
imul
add
pop
inc
push
push
sbb
sysret
(bad)
rol
sub
xchg
pop
push
add
sbb
fadd
inc
mov
adc
inc
add
arpl
fadd
dec
fiadd
xor
fwait
cmp
call
sbb
add
(bad)
fld
jbe
or
push
pusha
xchg
and
inc
and
aad
or
jbe
push
loopne
mov
str
das
lock
mov
movs
and
addr16
push
stos
fld
xlat
pop
xor
pop
int
call
outs
inc
rcr
push
dec
mov
rol
sbb
test
inc
sbb
data16
xor
out
out
inc
dec
mov
inc
sar
sar
jb
enter
shl
jne
or
sbb
mov
idiv
adc
add
adc
pop
inc
dec
xchg
jge
adc
or
shl
out
xor
enter
rol
mov
or
mov
cmp
(bad)
pop
ret
mov
push
jge
mov
and
xchg
mov
inc
fs
call
ds
xor
and
and
mov
jo
sub
pusha
leave
adc
enter
or
fwait
outs
pop
xor
ret
(bad)
js
shld
retw
inc
ret
cmps
and
inc
cmp
shl
pop
and
add
push
or
and
(bad)
lods
and
dec
add
aaa
mov
fiadd
mov
pop
and
or
xchg
in
pop
add
int3
out
cmc
adc
sbb
or
mov
jnp
add
test
adc
pop
xor
call
push
call
or
pop
xor
daa
or
(bad)
outs
pusha
mov
and
(bad)
push
(bad)
mov
(bad)
arpl
sub
xor
mov
and
or
lock
xchg
daa
in
lds
inc
out
fisubr
and
enter
xchg
nop
(bad)
mov
leave
xchg
pop
dec
cwde
(bad)
sahf
(bad)
mov
add
mov
or
xchg
adc
cmp
dec
pop
enter
shr
in
dec
and
jo
xor
push
loopne
cmp
enter
inc
cli
imul
pop
xchg
out
dec
mov
ins
push
mov
inc
lock
push
inc
mov
dec
cmp
fcmovne
test
setbe
dec
mov
or
nop
sub
(bad)
adc
mov
pop
and
cmp
dec
xor
push
retf
xor
sbb
retf
sbb
pop
mov
sbb
push
fmul
in
in
loopne
jne
xor
daa
adc
cmps
sbb
retf
sbb
jb
pushf
retf
test
mov
mov
adc
pop
and
and
and
xchg
dec
int3
sub
stos
xchg
xchg
int3
xor
movups
iret
pop
mov
sbb
aam
hlt
fadd
lods
push
loop
aaa
adc
mov
pop
and
or
(bad)
js
pop
dec
int
jp
and
inc
push
and
cmp
pop
and
or
sub
sbb
jbe
dec
pop
xor
ss
(bad)
dec
sbb
stos
adc
iret
sbb
sbb
pop
sub
push
or
add
in
into
out
mov
cwde
test
mov
rcr
dec
or
and
movs
iret
mov
mov
push
add
dec
sbb
or
pop
sub
sub
ror
pop
add
ds
dec
jmp
or
and
add
sub
jb
psrad
scas
jmp
sub
mov
adc
outs
xchg
or
mov
or
pusha
mov
push
or
pop
sub
sbb
shl
js
pushf
push
ror
rcr
int3
movs
add
sar
fsub
pop
push
xchg
iret
pop
sub
push
pop
(bad)
rol
add
popa
add
add
sub
out
cdq
nop
ror
cwde
push
mov
mov
dec
pop
clc
pusha
lods
jnp
or
push
sub
pop
sbb
loopne
shl
dec
aam
and
das
pcmpeqb
push
aam
aam
mov
or
pop
xor
add
outs
and
or
push
leave
xchg
aad
aad
sbb
adc
dec
mov
or
and
mov
aam
sbb
xlat
add
xor
and
adc
(bad)
ja
(bad)
push
(bad)
outs
(bad)
sbb
pop
mov
bound
pop
inc
xchg
mov
inc
sbb
xlat
pop
xor
ss
(bad)
stos
mov
inc
push
mov
iret
pop
sub
sbb
xchg
xor
and
imul
mov
cmp
rcl
inc
inc
inc
ins
gs
add
and
or
in
nop
push
jb
push
xor
fmul
test
xor
dec
in
jae
pop
xor
push
andnps
shr
or
dec
dec
outs
movups
sbb
add
rol
mov
push
lock
out
push
sbb
test
sbb
push
dec
xlat
ror
cdq
dec
xor
imul
xor
xor
xor
daa
sbb
test
dec
mov
dec
rcl
movs
gs
mov
or
jg
sub
pusha
psubq
add
cmp
or
dec
and
sbb
pusha
xchg
jbe
leave
cmp
and
(bad)
mov
xor
mov
xchg
mov
fcmovnu
imul
pop
pushf
or
or
das
xchg
mov
adc
imul
div
int3
mov
sbb
addr16
xor
clc
xchg
push
pop
jns
mov
pusha
add
addr16
mov
aas
or
je
sub
xor
cmps
pusha
push
xchg
jp
fnstsw
or
out
add
pop
lods
dec
add
sbb
cs
add
ss
repnz
call
aaa
push
and
add
push
mov
jle
push
dec
adc
pop
xchg
rcr
sub
adc
sbb
push
loopne
sbb
rcr
xor
int
ja
ret
and
xor
or
add
xchg
push
sub
adc
adc
adc
mov
sub
retf
rol
push
scas
adc
sti
inc
dec
lahf
clc
fcomp
inc
daa
push
(bad)
adc
outs
cmp
dec
ja
lock
mov
jge
inc
or
xchg
xor
mov
(bad)
ja
xor
mov
xor
mov
(bad)
cs
in
daa
mov
or
or
cmp
add
add
sahf
ds
lds
dec
imul
ss
mov
inc
je
cmp
mov
xor
pop
or
adc
cwde
iret
pop
sar
mov
das
ret
add
jmp
in
add
(bad)
adc
pushf
das
push
nop
inc
mov
iret
repz
jne
jg
mov
and
arpl
xchg
cs
fist
cmp
in
fild
mov
add
out
fistp
loopne
xor
je
sbb
or
xchg
ins
mov
int3
les
inc
cmps
inc
sbb
inc
icebp
push
mov
xchg
adc
mov
das
scas
cs
movs
(bad)
sbb
repz
push
jbe
unpcklps
outs
xchg
add
and
jae
jns
jb
sub
jo
fucom
adc
jbe
jnp
push
dec
inc
aas
adc
outs
loopne
call
loopne
(bad)
adc
add
xchg
and
imul
mov
or
inc
pop
jp
es
cmp
xor
cmp
mov
or
push
add
out
jae
outs
in
lahf
sbb
in
dec
sub
sbb
or
in
(bad)
add
add
mov
cmp
and
(bad)
repz
jecxz
sbb
imul
add
sub
je
ret
aam
sbb
jo
cmovl
loop
inc
inc
push
push
push
sbb
js
es
iret
pop
push
mov
fbstp
pop
nop
out
sbb
inc
enter
idiv
in
add
aas
aas
and
enter
inc
pop
dec
mov
pusha
das
fistp
and
or
mov
xor
inc
lea
jo
pop
cmp
inc
dec
daa
mov
neg
push
inc
mov
xchg
inc
jmp
out
sub
xchg
xchg
aam
repnz
leave
leave
leave
leave
adc
xor
iret
leave
leave
push
arpl
mov
aam
bound
out
or
pop
mov
mov
pop
jp
or
(bad)
or
push
mov
in
cmps
outs
bound
xchg
or
dec
loope
es
or
stos
push
aaa
es
pop
adc
sbb
fs
or
test
repnz
add
sbb
fadd
push
mov
mov
sub
aad
mov
std
and
inc
ret
mov
and
xor
add
test
ins
or
add
or
xchg
in
rcl
pusha
sbb
mov
and
jbe
dec
or
fmul
pop
sub
jecxz
mov
in
and
lea
and
xchg
sbb
inc
sub
or
add
retf
and
in
in
pop
int
cmp
lds
push
mov
sub
add
mov
rcl
test
ins
adc
ins
mov
push
push
(bad)
or
add
imul
add
mov
pop
sbb
add
rcr
cmc
or
push
add
or
adc
ret
push
xor
inc
xchg
lods
jbe
push
in
dec
inc
mov
paddd
xor
fadd
call
outs
and
cs
dec
popa
jmp
mov
dec
rcl
cmps
stc
push
or
and
lods
es
repz
test
and
bound
add
xor
and
fwait
aaa
mov
dec
inc
push
outs
push
das
movs
or
stos
xor
adc
cmp
mov
outs
jmp
ud2
add
mov
sysret
add
retf
xchg
pushf
or
fimul
movs
add
xor
push
lods
es
or
lock
dec
add
stc
bound
adc
add
jo
sub
push
and
fisttp
pop
add
add
push
pop
inc
or
jmp
lock
sub
lea
pop
daa
jl
les
xor
repnz
ja
in
mov
(bad)
mov
inc
hlt
inc
call
cmp
and
cli
inc
xchg
(bad)
call
dec
je
jmp
push
in
add
in
jne
xchg
(bad)
clc
invd
icebp
push
push
inc
aaa
call
push
mov
adc
mov
cmps
xchg
push
mov
adc
mov
xchg
lds
pop
enter
mov
enter
in
sub
clc
cmp
cmp
movs
inc
xchg
mov
add
in
xchg
dec
jb
enter
out
xchg
jns
daa
mov
pushf
out
test
cmps
xchg
pop
leave
cwde
pushf
out
mov
adc
pop
xchg
nop
xchg
aaa
pop
in
inc
(bad)
jge
(bad)
outs
and
in
out
jl
pop
das
xchg
(bad)
and
sbb
push
mov
push
push
mov
call
sub
xchg
and
mov
out
mov
pusha
in
and
lock
push
leave
test
sub
push
repnz
pop
js
pop
xchg
sub
mov
js
or
dec
and
push
mov
adc
or
jg
xor
enter
dec
icebp
mov
out
lahf
(bad)
(bad)
in
xchg
fmul
xchg
and
adc
cli
mov
mov
xchg
push
inc
imul
scas
stos
pop
jb
frstor
pop
add
mov
push
hlt
pop
cmp
neg
push
cmps
outs
add
daa
add
add
or
and
repnz
loop
add
sbb
daa
xchg
outs
aas
inc
push
sub
ret
add
shr
div
jb
mov
add
mov
pushf
add
sahf
jl
scas
xor
push
add
mov
je
int3
pop
ret
out
sbb
dec
(bad)
sti
fdivr
and
(bad)
mov
call
retf
rol
nop
push
mov
fs
xor
pop
stc
sahf
in
inc
pop
fdivr
push
push
int3
test
pusha
retf
push
sub
push
push
mov
jb
jle
mov
stos
or
inc
pushf
fmul
push
mov
cli
sub
mov
aam
mov
sbb
pop
out
sbb
mov
inc
push
and
mov
dec
adc
cmp
fdivr
cmp
iret
clc
cvtdq2ps
out
mov
cld
mov
jbe
mov
nop
push
or
je
mov
add
dec
pushf
and
daa
sbb
inc
and
ror
jmp
adc
inc
loopne
xor
cmp
add
add
push
arpl
aaa
push
bound
sub
cs
les
popf
adc
enter
pop
ror
fcom
fs
das
pop
or
imul
pop
or
mov
int3
jo
dec
pop
in
add
sar
jmp
in
sub
cwde
push
imul
pop
push
or
push
mov
test
ss
packuswb
fisttp
cmps
out
call
sti
bound
jns
push
adc
push
out
in
sahf
lds
sub
fiadd
push
add
hlt
data16
push
cmp
pop
mov
test
add
lock
ins
call
pushf
call
add
pop
cmp
xor
add
int3
or
sar
imul
push
fmul
sub
pop
mov
leave
inc
pop
fmul
jne
mov
sbb
ret
enter
scas
imul
cwde
and
add
(bad)
cld
nop
add
std
push
lods
fst
pop
fcomp
inc
xchg
dec
inc
mov
popf
out
pop
fwait
add
nop
and
and
mov
imul
jno
les
ins
test
je
sub
push
lea
mov
stos
arpl
jo
test
fldpi
push
pop
mov
not
cmps
mov
in
cmp
shl
sub
(bad)
mov
ror
or
add
cmp
mov
lea
out
xchg
mov
fcom
movs
(bad)
ret
int
call
out
mov
adc
dec
sub
add
or
les
cld
pop
bound
fsub
movzx
sub
and
loop
cmp
pusha
push
and
and
pop
add
pop
pop
std
mov
pop
pop
fisubr
cmovbe
imul
jge
add
xchg
jnp
pop
sub
and
push
ror
mov
mov
(bad)
push
mov
(bad)
mov
fs
mov
inc
cmp
jne
arpl
mov
sub
jge
mov
pop
inc
xchg
mov
push
int
inc
or
jne
sub
add
ret
mov
mov
ins
ja
mov
add
aam
mov
jmp
aam
out
or
cdq
fcom
rcr
or
cmc
mov
je
adc
mov
mov
(bad)
outs
mov
in
test
xchg
ror
call
sub
and
dec
fcmovnb
adc
aaa
rol
push
sub
xchg
adc
add
mov
out
sbb
lock
rol
sbb
aam
loopne
lahf
mov
enter
inc
mov
pop
or
or
push
in
jmp
inc
sar
adc
xor
sub
push
adc
and
sub
cs
push
xor
call
or
bsf
shr
add
add
jns
je
jl
adc
adc
rcr
pop
dec
inc
add
lahf
sub
dec
and
sub
and
inc
fidivr
add
or
idiv
sti
mov
lea
movs
and
sub
jg
sub
mov
cmp
push
or
sub
and
rol
aaa
sub
stc
push
jg
push
and
sbb
cdq
rcr
stc
pop
jg
push
pop
pop
cmp
jne
sub
and
nop
adc
inc
push
push
lock
fadd
pop
add
push
push
call
cld
sub
mov
mov
lea
jbe
mov
jbe
(bad)
fimul
fdiv
or
and
pop
and
or
jbe
mov
stos
cmp
sti
jnp
mov
jmp
sub
jne
outs
and
(bad)
cmp
jp
jle
femms
pop
adc
cmp
pop
pop
mov
mov
add
loopne
xor
jmp
je
nop
je
outs
daa
adc
jne
pop
jl
push
gs
ins
or
out
sbb
pop
dec
shl
push
shl
or
imul
lods
cmc
cdq
add
pushf
mov
sub
in
fadd
add
add
mov
int
call
adc
push
(bad)
ficom
pop
sti
push
dec
pusha
sbb
pop
(bad)
and
push
jl
ins
iret
ja
in
xlat
(bad)
jmp
inc
cmp
add
jbe
adc
repz
jge
ss
sbb
div
sbb
jecxz
outs
dec
pop
pusha
add
add
hlt
add
mov
aam
stc
hlt
push
cli
outs
jb
rol
test
cmp
(bad)
xchg
jbe
data16
adc
mov
jne
iret
or
popf
adc
push
imul
data16
push
add
and
mov
rcl
jle
fcom
out
push
out
push
push
add
int
loop
xchg
es
cli
cmp
sbb
lock
mov
sbb
or
pop
rcl
repz
repz
sbb
xor
add
inc
cdq
std
nop
inc
outs
push
jns
inc
lock
push
xchg
mov
mov
inc
xlat
mov
sbb
jne
add
add
cmp
inc
in
outs
lods
mov
adc
inc
xor
mov
mov
iret
dec
adc
or
xor
mov
jo
push
inc
mov
ret
(bad)
shr
aad
push
inc
aad
adc
cmp
push
call
dec
add
imul
lock
add
cmp
loopne
mov
sbb
and
(bad)
push
cmp
sub
inc
ror
xor
mov
popf
(bad)
push
cmp
xor
(bad)
or
jo
stc
cmps
jle
sbb
pop
jne
arpl
or
popf
sar
ret
xor
and
test
ret
ds
inc
push
cmp
imul
jmp
ficomp
and
inc
inc
dec
jne
jmp
xchg
jnp
les
jle
pop
cld
call
mov
cmp
adc
test
push
inc
inc
ucomiss
loope
add
loope
retf
setae
call
dec
and
aaa
dec
repnz
mov
mov
clc
fs
das
inc
test
or
xor
inc
mov
cld
adc
enter
sub
dec
adc
xchg
add
test
add
jno
shr
sub
rcr
bound
dec
adc
ja
mov
pop
jg
or
imul
movs
or
push
scas
(bad)
push
fcomp
add
inc
in
push
fwait
mov
mov
in
jle
jbe
sub
add
ja
push
aaa
or
cs
inc
or
sub
add
mov
mov
pushf
(bad)
out
lods
movs
out
jb
repz
add
adc
in
lahf
cld
and
xchg
add
outs
jb
mov
loopne
test
and
(bad)
mov
mov
mov
mov
xchg
mov
adc
add
cld
jle
add
jmp
mov
lea
add
das
por
jle
pop
or
add
movs
aam
sbb
sbb
addr16
pop
mov
jmp
add
in
xchg
addr16
lea
pop
inc
call
add
pusha
push
sbb
jo
adc
rcl
mov
lock
push
adc
push
lock
jne
push
xor
mov
ins
xchg
iret
in
mul
sbb
popa
inc
adc
xor
dec
or
cmps
mov
inc
sub
mov
cmp
pop
inc
daa
cld
inc
pop
mov
shl
pop
movs
pop
sbb
outs
jnp
out
cdq
rol
and
aas
call
in
scas
sub
sbb
pop
pop
push
loopne
mov
mov
mov
fcomi
fsubr
(bad)
enter
dec
pop
je
imul
mov
mov
cmps
fsubr
ror
mov
shl
push
push
scas
dec
call
(bad)
pop
mov
xchg
dec
fadd
jae
movs
jge
ins
pusha
ja
or
xor
fs
push
leave
push
xor
mov
pusha
add
outs
jge
sub
fdiv
mov
dec
into
gs
pop
call
add
add
pop
(bad)
jge
not
out
outs
fdivr
(bad)
mov
mov
repnz
btc
ss
and
rcr
push
pusha
cdq
xlat
scas
pop
mov
mov
xor
loope
lods
rol
push
or
mov
adc
xlat
sub
fbstp
ja
cmp
jge
ror
cld
sub
dec
add
and
cmp
push
cmps
(bad)
pop
fs
inc
push
outs
arpl
cs
jne
sub
push
pop
add
fsubrp
adc
or
push
or
inc
adc
lods
call
pop
adc
or
ins
xor
jo
mov
call
mov
inc
fiadd
mov
adc
lea
jle
popa
sub
mov
popa
add
neg
addr16
fs
(bad)
inc
aaa
xor
mov
imul
hlt
jb
das
daa
or
and
cmp
push
sbb
sbb
mov
or
lea
addr16
dec
clc
and
or
push
xor
pop
push
jnp
imul
imul
cmps
mov
mov
out
pop
fld
in
cmp
or
je
ja
add
fiadd
dec
or
or
mov
dec
int3
push
les
mov
xchg
scas
and
add
pop
fbld
fistp
inc
inc
add
mov
and
mov
mov
add
sub
inc
mov
sbb
jb
xor
adc
das
add
mov
xor
loope
iret
js
adc
or
repnz
jl
inc
repz
sahf
inc
in
cld
int
rol
nop
inc
lds
push
leave
je
jo
xchg
push
outs
jmp
pop
enter
dec
repz
sbb
outs
push
lea
lock
and
hlt
(bad)
fld
fcomp
fnstsw
sahf
setne
jmp
(bad)
sti
int
loope
push
shl
pop
add
xor
imul
add
and
mov
mov
std
mov
popa
xor
xor
cmp
hlt
outs
outs
sub
icebp
js
cmp
adc
mov
push
jne
and
and
mov
cwde
cli
popa
pop
lahf
jle
enter
mov
mov
ds
cli
inc
ja
fidiv
fdivr
cmps
in
lods
mov
dec
imul
(bad)
fist
imul
sahf
xchg
add
shl
fidiv
enter
out
add
out
fdivr
add
xchg
(bad)
stc
mov
or
clc
jmp
adc
sbb
pop
(bad)
sub
sbb
sbb
in
xchg
test
jnp
int3
add
lock
scas
test
das
iret
mov
jmp
clc
daa
aas
inc
shl
arpl
aam
mov
push
add
add
jns
add
mov
fist
es
dec
je
add
dec
jne
sub
jmp
or
xor
jmp
hlt
ins
call
add
inc
shl
fnsave
push
pop
fwait
xchg
inc
fdivr
add
pop
and
sbb
push
jnp
jmp
pop
bound
inc
push
fistp
(bad)
push
int
xchg
push
pop
and
clc
cld
lock
adc
retf
in
sbb
add
and
jo
push
add
add
ss
pop
pop
sbb
mov
leave
enter
cmp
cmp
rcl
aad
sbb
inc
sbb
and
xor
jo
imul
add
leave
jo
dec
add
out
aaa
push
cmp
ja
and
cs
daa
sub
adc
jnp
fist
arpl
fucomi
dec
or
and
pop
xchg
pop
inc
int
call
das
pusha
(bad)
dec
test
inc
pop
ret
xchg
xchg
mov
jo
shr
shr
push
inc
push
mov
cmp
jmp
adc
sbb
or
lods
ror
jl
pop
test
add
inc
jae
or
add
and
or
xchg
repnz
cmovb
or
xor
push
add
inc
je
retf
ins
add
bound
(bad)
sbb
cwde
push
mov
xor
dec
js
in
inc
lock
dec
lock
(bad)
mov
jle
push
xor
dec
popa
push
inc
lock
(bad)
cmovb
ret
jno
adc
xchg
cli
idiv
aam
jmp
lea
inc
sbb
jbe
in
mov
ror
jmp
xor
inc
sbb
inc
sti
mov
inc
xor
cmp
push
mov
cmp
inc
cmps
or
inc
cmp
rcr
or
cmps
xchg
or
inc
add
or
jbe
mov
adc
push
dec
mov
popa
cmps
dec
(bad)
pop
xlat
xor
not
and
pusha
sbb
(bad)
daa
cld
cmp
je
and
aas
xchg
(bad)
fsub
push
push
ret
jns
jl
mov
mov
hlt
lahf
mov
mov
jae
pop
or
ds
xchg
lea
(bad)
sbb
and
leave
imul
fstp
mov
push
push
push
sbb
adc
jnp
mov
jmp
push
sbb
add
dec
jge
jne
sar
aaa
dec
adc
rcr
and
cmp
sbb
fbstp
js
pusha
sar
(bad)
(bad)
into
add
inc
aas
add
pusha
dec
sub
jmp
movs
sbb
pop
(bad)
test
mov
lods
add
rol
in
jg
xchg
movs
inc
lods
pop
ja
aas
mov
je
mov
xchg
mov
add
push
pop
or
cwde
leave
retf
dec
psllw
rol
jnp
xchg
inc
mov
adc
pop
pop
test
neg
stc
add
daa
sar
pop
cmp
and
aad
lea
jae
push
jns
movs
add
call
inc
js
add
mov
fadd
jmp
or
lods
adc
test
add
jnp
inc
xor
leave
jmp
xor
out
fild
push
inc
cmp
jge
inc
lahf
sbb
frstor
jge
and
dec
aaa
mov
and
loopne
ja
lods
adc
sbb
test
fcomip
bound
inc
pop
bnd
add
sbb
js
pop
mov
xchg
rcr
cmps
xchg
aas
mov
lock
or
stos
push
cmc
sar
push
mov
cmp
jnp
mov
inc
sbb
or
mov
imul
mov
sub
sti
xor
cmp
jle
outs
add
ss
adc
mov
xchg
sub
call
xor
ret
shl
repnz
dec
sahf
sub
pusha
aam
inc
inc
add
nop
inc
push
outs
and
or
pop
dec
movs
out
and
imul
or
sar
jae
cmp
cmp
imul
(bad)
hlt
mov
aas
test
mov
mov
and
xchg
and
lock
mov
test
add
or
dec
ret
ret
add
jl
into
dec
mov
test
cmp
aas
push
jbe
fsub
loope
push
pop
cs
add
adc
or
lahf
mov
sbb
adc
mov
mov
stc
pop
ja
pop
ret
inc
or
das
pop
mov
push
das
(bad)
cmp
je
ja
sbb
add
ss
test
mov
jnp
pop
push
add
addr16
xchg
(bad)
retf
imul
cmp
cmp
iret
mov
nop
dec
xor
lock
push
pusha
cmp
test
stc
add
test
or
add
sbb
push
out
push
shl
push
call
jae
jo
xor
div
fldenv
loopne
push
shr
ret
adc
aad
mov
test
mov
add
ffree
gs
cli
add
mov
xor
adc
push
push
bound
mov
push
or
sub
add
outs
movs
shr
ins
das
cs
das
in
call
dec
rcl
mov
cld
or
jmp
cmp
inc
inc
push
pop
cmp
enter
pusha
cs
push
jmp
shl
in
shl
adc
lock
pop
loope
xor
adc
add
xor
lods
inc
cmp
cmp
cs
icebp
adc
sub
or
dec
or
inc
scas
pop
push
xchg
inc
not
cmps
xor
fbld
sub
add
sti
(bad)
push
lea
mov
lods
and
mov
push
mov
add
add
mov
jne
lea
(bad)
push
pop
pop
aaa
jne
mov
pusha
adc
ret
xor
cmp
and
and
dec
push
jno
sub
push
or
je
add
ficomp
dec
jne
shl
push
adc
fcmovnu
jp
or
lds
ret
ins
jge
xchg
idiv
push
(bad)
xchg
add
sbb
mov
jo
pop
stc
pop
scas
mov
into
add
aam
push
adc
cmps
mov
pop
jbe
mov
and
jnp
mov
dec
mov
cs
cmps
ja
(bad)
mov
pop
les
mov
mov
xchg
dec
add
inc
addr16
or
mov
mov
scas
fbld
cmp
cmp
sub
mov
fist
pop
imul
inc
and
cs
mov
cmc
or
stos
test
mov
inc
add
and
mov
out
fisub
(bad)
or
xlat
xor
or
inc
adc
rol
jg
mov
(bad)
sub
xor
add
idiv
ds
xchg
xchg
or
pop
cmp
call
and
test
mov
sti
imul
inc
or
pusha
fwait
mov
jbe
lds
dec
add
jmp
les
push
adc
cs
jmp
pusha
push
sbb
or
adc
push
mov
fadd
aam
xchg
jle
xor
xchg
pop
push
hlt
fimul
outs
sbb
dec
hlt
out
jle
and
sub
cld
jge
push
clc
cli
push
je
sar
and
je
adc
add
push
adc
add
aas
hlt
push
add
add
dec
lock
mov
jmp
lods
push
je
and
or
add
cs
adc
aas
lock
mov
mov
adc
push
or
rol
dec
or
pop
pop
hlt
inc
loopne
mov
mul
mov
add
and
add
sbb
data16
adc
dec
push
xor
xchg
jmp
sbb
push
lds
loop
cld
pop
push
fstp
inc
push
stc
shr
fxch
mov
inc
mov
in
or
out
call
inc
shl
je
adc
jo
inc
or
add
push
sar
xchg
idiv
mov
xchg
sbb
jge
mov
inc
fcomip
jl
setb
cmp
jmp
retf
das
je
push
inc
mov
xor
push
sub
xchg
test
scas
or
pop
inc
ret
xchg
(bad)
(bad)
clc
movs
add
sbb
jmp
sbb
cmp
jo
daa
and
(bad)
xor
mov
es
xlat
int
mov
lds
mov
adc
inc
shl
je
push
in
adc
sub
mov
inc
shr
loopne
cmc
dec
pop
pop
out
cwde
add
pusha
inc
fs
push
mov
fadd
push
mov
add
adc
jne
add
rol
jbe
inc
xor
adc
push
xchg
into
sbb
call
mov
or
xor
mov
movzx
mov
pop
adc
ins
cmp
mov
mov
mov
jno
sbb
nop
shl
mov
or
jne
or
cs
jb
rcr
bound
leave
add
jle
sbb
fcom
ins
sbb
popf
dec
sbb
sub
pop
and
repz
adc
push
jne
xlat
pop
shl
push
rcr
or
into
(bad)
jg
jo
aaa
adc
mov
sbb
add
aas
sub
movs
cmp
jne
inc
add
push
je
jnp
in
or
hlt
jns
mov
adc
or
cld
push
inc
push
or
or
or
adc
sub
push
jp
xchg
or
int3
rol
push
jnp
push
(bad)
jae
adc
adc
jge
jne
cmp
jl
mov
lock
jae
cmp
(bad)
(bad)
adc
xchg
xor
gs
xchg
sbb
mov
neg
inc
jmp
enter
call
in
cld
movs
pop
adc
sbb
mov
mov
jmp
adc
xchg
jmp
cmp
cs
data16
dec
and
and
xlat
sahf
data16
push
data16
cdq
push
retf
fistp
das
imul
clc
mov
test
adc
mov
add
in
cld
jo
into
out
mov
inc
je
or
je
push
push
mov
sub
sub
pop
jnp
cmc
rcr
sub
sbb
dec
in
or
and
sbb
cs
xchg
inc
pop
out
imul
cli
push
jne
cmp
lea
and
jmp
inc
add
jmp
lock
xor
ja
add
add
add
or
dec
neg
adc
push
push
cmp
ja
push
sbb
or
sbb
add
mov
loope
mov
in
shr
or
(bad)
repz
push
sub
add
mov
ja
shl
bound
movs
xor
adc
push
dec
popf
push
jecxz
jmp
cld
adc
jns
inc
push
push
xor
ret
mov
mov
add
test
hlt
inc
push
pop
jnp
cmps
sub
add
add
sbb
lea
sub
pop
(bad)
mov
push
xor
mov
add
mov
xchg
or
mov
push
pop
sbb
push
push
popa
aas
and
(bad)
xor
ins
push
outs
outs
movs
sub
sub
scas
push
mov
push
xchg
add
cld
push
inc
add
add
mov
inc
shl
add
mov
add
and
xor
inc
xchg
pop
pop
inc
sbb
xor
and
fldenv
test
lods
sbb
or
aas
test
xlat
fsubr
and
loop
pushf
adc
pushf
sbb
pop
sbb
pushf
pushf
pushf
mov
test
scas
push
daa
nop
loopne
sub
sar
aad
loop
fcmovbe
jb
aam
dec
push
adc
outs
ret
cs
sbb
and
sub
cmp
loop
jmp
imul
push
enter
stos
or
loop
or
jge
mov
neg
jmp
or
shl
jg
mov
inc
xchg
push
push
mov
outs
enter
push
dec
div
ret
mov
inc
dec
or
push
dec
mov
inc
fimul
shl
pop
pop
iret
xchg
inc
xchg
pop
cs
sbb
aam
fidivr
adc
cmp
hlt
clc
mov
into
enter
lock
fs
adc
xor
test
sub
out
mov
add
fldcw
add
jge
repz
jle
inc
pop
mov
(bad)
dec
jge
scas
hlt
push
or
jbe
cmp
add
(bad)
sub
(bad)
je
sbb
rcl
lea
jne
mov
call
fldcw
movs
lock
add
or
mov
sar
popf
call
sbb
call
mov
sub
push
pop
int3
sbb
jmp
mov
push
jg
cld
or
push
inc
lods
or
xor
ret
cmp
mov
call
sbb
cmp
jg
cmp
jl
loopne
xchg
repnz
xor
sbb
test
adc
fldenv
repz
and
movs
je
sahf
pop
ja
ins
and
cmc
adc
push
stos
xor
jmp
addr16
adc
add
fisttp
mov
scas
xchg
adc
div
inc
(bad)
jbe
xor
mov
mov
mov
cmp
dec
loope
and
and
cmp
jb
mov
div
or
(bad)
fbld
fisttp
je
mov
dec
mov
div
mov
inc
mov
je
mov
mov
dec
jne
loop
cmp
and
in
and
add
or
cmps
sub
cs
inc
cmp
out
dec
shl
ret
ja
sbb
mov
dec
imul
jmp
pushf
fwait
pop
sub
jg
bound
je
push
push
cmp
adc
adc
push
ja
sahf
sbb
add
pop
inc
loop
ret
pop
adc
hlt
pop
mov
cld
(bad)
scas
and
inc
add
and
and
mov
sub
sub
sub
xor
addr16
jl
sub
sbb
and
sub
pop
sub
or
aad
cmp
sub
sub
sub
imul
retf
and
enter
movs
lods
fs
fistp
or
add
dec
add
jmp
xor
and
movzx
push
neg
je
or
repz
call
jmp
cmp
cmp
add
inc
cli
aam
cmp
mov
xchg
or
adc
jne
adc
jle
jno
push
sbb
mov
ins
sbb
push
retf
idiv
in
cmp
shl
dec
sbb
or
lods
cmps
push
je
or
lods
add
sub
push
adc
jmp
loop
add
pop
push
cvtps2pd
add
ret
mov
xor
mov
bound
pop
xor
(bad)
shl
mov
add
(bad)
and
xor
cmp
xor
cmp
idiv
cmp
inc
outs
cmps
inc
ror
jl
je
mov
rol
jmp
inc
jmp
cmp
mov
stos
mov
mov
push
(bad)
stos
sub
iret
add
mov
ja
push
fmul
icebp
pop
jmp
out
(bad)
xor
mov
adc
and
mov
(bad)
clc
neg
test
enter
jmp
xlat
add
pop
fdivr
pop
push
repz
adc
adc
aam
adc
add
push
aam
jb
shr
test
xor
call
fdiv
jne
icebp
cmp
jb
pop
xor
out
sbb
xor
push
cmp
xor
lds
add
jmp
or
sub
jmp
push
stos
sub
ins
inc
inc
cmp
pusha
push
pop
mov
xlat
sbb
(bad)
xor
pop
jmp
ja
xchg
sbb
repnz
fdivrp
dec
mov
cli
jmp
inc
inc
call
dec
mov
outs
add
dec
daa
bound
or
push
daa
ins
ror
cli
and
or
sbb
mov
clc
add
leave
xchg
add
call
sub
cmp
fdiv
mov
cli
inc
add
sbb
and
pop
mov
hlt
and
shl
or
push
sub
loopne
adc
aas
add
sbb
inc
push
inc
xor
and
sub
(bad)
aas
sub
adc
mov
pop
mov
jmp
pop
jmp
movs
pop
frndint
xchg
(bad)
in
outs
ret
(bad)
fstp
mov
test
je
fidiv
or
jne
lea
mov
(bad)
js
mov
mov
shr
and
and
popf
push
loope
sub
sbb
add
fmulp
icebp
jge
jns
mov
nop
cmp
cli
imul
push
or
cmp
jb
mov
js
dec
ja
inc
ja
cmp
push
pusha
xor
jmp
mov
cmp
inc
call
push
or
add
mov
lods
fsubrp
or
aad
movs
jg
jmp
test
or
push
pop
and
or
mov
in
lock
pop
mov
fiadd
jae
dec
add
inc
sti
sub
sbb
xchg
fidiv
(bad)
and
sbb
sub
mov
and
jne
dec
jne
cmp
enter
aas
and
inc
jmp
dec
adc
inc
pop
into
cmp
mov
xor
mov
arpl
iret
pop
dec
es
push
lock
les
xchg
adc
hlt
fwait
push
add
add
fldz
js
ss
adc
xor
jle
add
ds
xor
scas
cmp
aaa
mov
pop
cmp
je
sub
sub
push
aaa
push
add
imul
xchg
lahf
fnstenv
mov
inc
add
add
clc
ret
add
loopne
and
dec
mov
add
aas
push
test
retf
(bad)
retf
adc
mov
aas
ins
dec
jmp
xor
pop
lods
mov
and
adc
ret
repz
jae
push
ret
fimul
inc
jmp
inc
enter
mov
mov
adc
imul
pop
add
add
xchg
add
xor
lea
adc
leave
arpl
xor
push
and
pop
enter
mov
or
and
adc
movs
cmp
or
or
pop
(bad)
cld
(bad)
dec
push
scas
adc
cmp
and
or
or
push
daa
test
sbb
xchg
js
sbb
push
or
ror
popa
test
(bad)
mov
jge
fs
and
call
push
ret
dec
ins
mov
sub
sub
fst
cmp
sti
push
ja
and
loopne
daa
sbb
sub
pop
fwait
mov
mov
jae
fstp
(bad)
mov
or
pop
inc
out
das
sbb
rcr
push
std
data16
leave
(bad)
jle
pop
and
mov
and
dec
test
inc
nop
mov
and
pusha
ins
enter
imul
jo
inc
outs
mov
mov
(bad)
adc
mov
push
(bad)
je
and
xchg
call
mov
xor
push
adc
adc
shl
pop
dec
shr
push
push
dec
std
rol
clc
jl
retf
cmp
pop
jl
imul
pop
lods
popf
retf
mov
lods
adc
inc
imul
mov
jae
push
rol
adc
scas
and
cdq
adc
add
fcomi
stos
xchg
jge
rol
outs
and
add
stos
or
jbe
mov
add
outs
les
das
push
popf
movs
bound
sbb
outs
call
push
stc
dec
cmp
jae
aad
jl
jo
rol
ret
fs
rcl
sub
(bad)
or
add
cmp
sbb
mov
sbb
lahf
clc
mov
hlt
push
pushf
inc
sti
iret
mov
add
es
ins
dec
push
fld
jg
and
pop
cmp
test
jge
add
pusha
jmp
ret
push
cmp
cs
or
cld
call
pop
xchg
lock
pop
enter
add
and
fld
xor
and
jno
pop
adc
mov
push
adc
push
add
or
push
hlt
std
add
sub
and
xchg
xchg
xchg
cmp
xchg
lods
hlt
popa
or
sub
sbb
dec
or
dec
jb
or
jb
add
rcl
sti
ins
je
sbb
inc
(bad)
ja
adc
push
adc
jg
jge
add
inc
dec
jne
sub
dec
loope
xchg
and
icebp
ins
push
test
add
cli
add
repnz
popa
ds
add
loope
pop
ret
or
fld
or
std
(bad)
scas
xchg
inc
xor
clc
rcl
je
nop
inc
nop
push
ins
cmp
adc
adc
call
dec
in
test
jg
ret
dec
mov
push
clc
hlt
or
xchg
add
cmps
pop
ja
cmp
pushf
cmp
sar
add
adc
data16
adc
jge
shl
xchg
lods
inc
mov
mov
xor
jnp
ins
sub
imul
fcom
movzx
out
ins
pop
mov
pop
sbb
push
pop
sbb
xchg
xchg
sub
enter
lock
xchg
shr
loop
push
stos
cmps
cmp
dec
outs
imul
cmp
(bad)
dec
cmp
jb
adc
jmp
jp
sbb
fucomip
ss
cmp
inc
adc
sub
lahf
xchg
daa
jbe
ret
add
sub
mov
push
pop
iret
cmp
data16
mov
inc
pop
scas
and
dec
loopne
retf
and
mov
push
and
sub
cli
push
test
push
cmp
adc
stc
es
inc
fisttp
retf
jbe
inc
and
fs
xchg
and
and
jg
(bad)
pop
cmp
push
mov
shl
jno
pusha
jno
cmp
sub
int
popa
cdq
retf
lahf
sti
std
inc
shl
mov
xor
(bad)
xor
or
mov
mov
jp
sub
mov
sti
cmp
mov
jne
gs
imul
retf
ins
add
or
out
mov
jns
lock
sbb
pop
ins
or
xchg
out
aas
inc
mov
xchg
aaa
jge
adc
movs
xor
sub
push
shl
or
and
sub
push
add
aam
fsub
xor
rol
fcom
adc
mov
test
lahf
pusha
push
fiadd
mov
dec
test
add
or
or
inc
loopne
mov
dec
jmp
loope
mov
or
outs
adc
jp
ja
xor
fild
and
mov
dec
ret
push
js
cli
or
cmps
imul
dec
mov
loop
pop
cs
leave
push
ins
jge
idiv
add
loop
cwde
jo
sbb
in
inc
ret
dec
(bad)
cmp
mov
in
js
in
adc
lods
in
adc
ds
dec
or
test
in
mov
and
(bad)
mov
pop
lea
push
pop
adc
mov
push
cmp
or
and
add
mov
mov
pop
enter
cmp
pusha
add
sub
aas
pusha
mov
mov
jne
mov
popa
clc
cmp
inc
xchg
add
shr
in
pop
add
call
fist
mov
sbb
enter
inc
in
pop
imul
push
in
jmp
mov
xchg
add
in
dec
pop
psubsb
idiv
push
xlat
push
sub
leave
adc
jmp
sub
pusha
js
mov
das
pop
(bad)
jo
in
xor
mov
xor
dec
sbb
jns
or
cmp
and
mov
add
and
xchg
push
fcom
movs
add
push
dec
sub
push
dec
test
push
lea
jg
xchg
fild
pop
inc
jp
aad
add
aaa
ret
test
xchg
jge
jmp
cmp
cmp
dec
ins
adc
loopne
cdq
and
push
stos
in
adc
cmps
pop
sub
mov
xor
jmp
ret
mov
(bad)
loopne
jne
mov
fs
fidiv
ja
sbb
cli
push
add
mov
push
iret
or
add
add
push
scas
in
ds
or
or
or
ds
cmp
test
imul
into
inc
jae
cmp
repz
test
push
je
fdivr
sub
pop
or
in
and
inc
cmp
mov
ret
ss
inc
mov
push
iret
pop
add
jl
cmp
je
push
movs
sub
aam
fdiv
mov
sbb
in
cmovl
test
and
aas
push
loope
push
(bad)
popa
rcl
je
dec
je
dec
inc
inc
movs
in
loopne
ja
cli
cli
and
mov
dec
outs
sub
rcl
push
push
inc
cs
pop
pushf
cmp
inc
mov
xor
sub
push
shr
inc
fsubp
mov
in
xor
inc
cs
or
xchg
add
rol
mov
add
dec
jg
je
or
je
or
push
jmp
or
je
sub
call
push
cmp
dec
mov
jle
mov
pop
xor
sub
push
stc
inc
adc
shl
sbb
pop
and
xor
inc
pop
mov
dec
and
xchg
inc
jp
cs
fidivr
(bad)
push
sbb
test
or
xchg
xchg
cmp
or
popa
imul
jle
fs
push
add
push
and
sbb
xchg
dec
jb
out
add
push
mov
adc
fdivr
jne
dec
clc
repnz
push
jae
ja
and
sahf
inc
or
xchg
arpl
adc
add
add
cld
scas
mov
(bad)
cmps
dec
je
mov
cdq
in
lods
push
mov
add
jns
dec
nop
push
data16
rol
cmp
lds
push
mov
inc
jnp
adc
inc
sub
arpl
lahf
out
test
add
fisub
daa
imul
mov
adc
leave
push
pop
add
xchg
addr16
dec
leave
xor
xchg
or
mov
stc
scas
js
jmp
mov
cmp
adc
dec
adc
add
push
or
xor
fiadd
jne
mov
mov
jle
in
pop
std
push
ret
outs
sbb
adc
xor
out
call
inc
aam
add
inc
sub
out
gs
out
das
add
push
adc
and
pop
enter
pop
jmp
xchg
les
pop
in
adc
jp
call
hlt
jmp
mov
add
add
push
popf
test
ja
cs
mov
sub
inc
mov
cmp
popf
adc
jl
inc
xor
mov
ret
add
loopne
add
sbb
(bad)
mov
dec
jne
sbb
and
icebp
out
dec
popa
push
or
cmc
xor
pop
xchg
call
(bad)
into
enter
add
int
ficomp
aad
retf
pop
aaa
pop
and
add
pop
js
or
add
jne
jmp
je
mov
pop
hlt
inc
das
sub
pop
(bad)
in
add
sub
(bad)
adc
(bad)
and
dec
push
xchg
pusha
xchg
(bad)
mov
sahf
xor
ret
(bad)
push
or
pop
inc
pusha
imul
ja
das
lods
sbb
or
cmp
rcr
dec
inc
xor
xor
dec
inc
add
imul
xor
jo
add
or
xlat
xchg
dec
repz
add
sub
mov
xor
in
(bad)
jne
cmp
js
mov
jl
and
add
hlt
std
movs
mov
dec
lahf
test
pop
repnz
add
jg
jmp
lock
jne
call
lods
mov
loopne
or
jle
ret
inc
stc
sbb
dec
(bad)
(bad)
out
daa
or
je
cmp
sbb
adc
push
add
lock
adc
inc
mov
jle
pop
push
lods
push
das
out
test
sub
ss
aaa
aam
dec
inc
or
jbe
pop
or
inc
psubd
ret
pop
call
loopne
mov
adc
outs
inc
mov
sbb
jge
dec
sar
push
xor
mov
sahf
test
add
pop
add
lock
xor
(bad)
jmp
mov
call
shl
cmps
mov
push
cmp
add
adc
cmp
jg
and
push
jmp
gs
cdq
xor
sub
add
out
fs
inc
(bad)
push
imul
add
xchg
add
lahf
mov
loop
dec
jmp
gs
outs
data16
inc
dec
cmp
add
fcomp
mov
dec
in
and
call
out
retf
repz
adc
cld
mov
mov
push
cwde
addr16
push
add
cmp
in
or
cmc
xor
and
lds
lods
dec
jo
add
sar
push
in
sbb
or
mov
lahf
xlat
(bad)
fistp
push
enter
push
sahf
jbe
outs
sub
test
add
inc
or
inc
sahf
jecxz
shr
clc
shl
repnz
jb
daa
mov
inc
jmp
push
in
jmp
(bad)
loop
lock
inc
ins
xchg
xchg
test
adc
adc
inc
in
ja
mov
push
sbb
and
pop
push
jmp
sbb
mov
ja
in
add
test
mov
rcl
loopne
in
test
add
mov
xor
mov
lock
in
sub
jnp
cwde
repnz
add
inc
and
popa
xor
push
test
cmp
push
xor
add
mov
xchg
xor
inc
sbb
aaa
pfrcpit1
mov
or
not
dec
loopne
and
mov
cwde
dec
fcom
adc
rcr
test
sub
sar
xor
aam
aam
add
loopne
jge
xchg
cmp
test
push
call
add
dec
dec
add
and
pop
clc
imul
rcr
add
mov
adc
xchg
clc
fdivp
dec
adc
imul
mov
mov
add
mov
cld
and
pop
xor
sub
js
sbb
add
mov
dec
sub
mov
clc
pop
xchg
cmp
out
in
pop
test
repnz
dec
or
dec
mov
je
jnp
dec
xor
push
jb
and
iret
mov
adc
repnz
and
lock
xor
ja
jne
mov
clc
add
addr16
hlt
sbb
pusha
inc
hlt
div
sub
jb
cli
lock
sbb
adc
add
and
and
push
je
loope
loopne
push
cmp
adc
js
cmp
mov
jg
jl
(bad)
shr
cwde
fadd
mov
(bad)
mov
xlat
adc
mul
push
and
push
add
push
xor
ja
or
or
xchg
add
or
push
or
jne
xor
mov
dec
loope
pop
retf
shr
das
stos
jle
fstp
dec
jge
call
sbb
dec
adc
mul
sahf
or
ds
nop
jbe
mov
sub
sbb
add
push
repz
out
stos
sti
jnp
aaa
jmp
(bad)
or
mov
and
jecxz
out
mov
push
sub
ins
mov
ins
and
pop
je
jo
icebp
adc
mov
mov
cs
push
or
into
adc
adc
jmp
and
or
ffree
fcomp
sbb
adc
fcomp
jl
add
pop
fs
and
push
add
or
fldcw
mov
jl
sbb
dec
or
das
add
pop
outs
add
retf
adc
sahf
cld
inc
cmp
push
jmp
das
les
scas
jle
inc
jmp
pop
jno
add
jmp
mov
xchg
pop
add
inc
pop
or
icebp
add
or
nop
and
sbb
fimul
into
test
inc
adc
rol
enter
adc
sbb
popf
or
pop
inc
in
push
add
or
movs
pop
mov
out
loopne
mov
jne
jmp
push
push
push
pop
loop
or
retf
mov
add
call
adc
inc
mov
add
mov
movs
pop
sahf
sbb
loop
clc
mov
inc
call
sbb
add
in
add
mov
cmovne
imul
in
popf
mov
dec
shl
mov
jnp
push
jo
sub
loopne
int
cdq
dec
mov
lea
fwait
dec
rcr
add
inc
and
sub
push
inc
or
ins
or
xor
lock
sub
xchg
jecxz
xchg
data16
cmp
or
ret
or
pop
outs
xchg
dec
or
nop
pop
movs
sbb
or
and
aas
ret
and
hlt
mov
cmp
rol
add
push
mov
mov
sar
pop
and
and
or
mov
mov
bnd
pop
enter
mov
push
ins
fs
and
aas
out
ins
add
inc
sub
pop
nop
mov
inc
daa
jo
mov
mov
push
lea
stos
pop
and
das
cwde
sbb
sub
fistp
add
push
cmp
sbb
out
es
mov
inc
push
and
clc
push
cmp
test
dec
mov
inc
pop
xchg
retf
mov
xor
clc
xlat
mov
ja
pop
or
jne
fdiv
xor
nop
inc
push
xchg
out
pop
add
adc
out
inc
push
lea
pop
call
pop
pop
shl
test
lods
sbb
or
popa
scas
out
mov
add
in
adc
cs
push
loopne
jge
std
into
dec
lea
aaa
dec
inc
mov
sahf
adc
hlt
push
sbb
inc
xchg
lock
inc
inc
jae
cmc
inc
dec
jne
sbb
inc
enter
jo
sbb
xchg
imul
cmps
shr
cld
mov
push
jb
xchg
clc
push
inc
dec
mov
clc
inc
or
sbb
dec
xor
jne
inc
pop
hlt
cwde
or
add
fdiv
xchg
hlt
loopne
out
add
scas
push
imul
sub
xchg
inc
(bad)
cmp
xchg
jg
sbb
outs
xor
movs
jne
repnz
test
mov
cmps
or
push
mov
xor
aad
pop
or
mov
imul
mov
add
or
repz
sbb
adc
dec
cmp
dec
xor
sub
ds
enter
and
pop
retf
and
push
call
lods
(bad)
cld
leave
dec
pusha
add
clc
sbb
call
ds
push
test
jle
fs
mov
js
out
ins
inc
lods
das
in
les
test
cdq
mov
fs
pusha
xchg
xor
ss
iret
dec
jo
daa
movs
adc
sub
cmp
movs
mov
add
mov
cmp
add
push
xchg
jb
punpckhbw
push
jle
mov
ret
pushf
stos
inc
jl
cld
push
nop
bound
jge
or
cmp
jle
sub
cld
sub
or
add
div
pop
add
and
mov
mov
mov
add
adc
ror
xor
push
inc
cmps
mov
pop
je
inc
cmp
add
pop
push
adc
sub
add
mov
in
inc
xchg
sub
jmp
adc
add
push
and
inc
mov
jmp
and
fild
out
in
retf
mov
sahf
outs
add
or
mov
fcom
ret
jae
push
push
fld
in
lods
pop
cmp
mov
(bad)
mov
test
inc
cmp
or
ins
push
push
mov
xchg
rcr
ret
cmps
push
aam
push
sbb
mov
dec
pushf
stc
sbb
mov
xchg
cmp
test
fcomp
mov
jae
xor
cmp
sti
cs
add
jp
mov
aaa
test
retf
add
xor
int
in
or
popf
add
cmp
mov
mov
xchg
gs
mov
out
std
(bad)
mov
mov
mov
add
cmp
and
sbb
inc
add
mov
jl
sub
(bad)
jge
mov
add
pop
lods
ins
mov
add
pop
test
sti
and
movs
adc
and
sbb
fidivr
movs
push
mov
add
sub
scas
mov
mov
loopne
lea
or
pushf
test
addr16
xor
popa
add
or
fwait
mov
shl
add
xor
add
(bad)
js
outs
adc
fiadd
es
inc
inc
daa
gs
dec
sub
test
sub
aas
push
mov
or
dec
loopne
adc
repz
pop
xor
je
xchg
popa
lea
gs
adc
aaa
push
fld
cs
xlat
je
inc
sub
xor
jle
mov
or
test
out
cmc
dec
jecxz
jl
pusha
jns
jg
arpl
sub
jmp
adc
addr16
pusha
shr
and
pusha
or
pusha
or
inc
add
push
mov
xchg
popa
mov
xchg
sub
scas
add
out
repnz
test
add
dec
cmp
inc
mov
cmp
hlt
(bad)
stc
arpl
add
dec
inc
ja
xchg
push
adc
inc
pop
adc
jbe
pop
test
adc
(bad)
xor
dec
fwait
popf
add
sbb
repnz
or
dec
mov
inc
cmp
call
(bad)
inc
call
jbe
adc
cld
and
inc
les
pop
adc
push
bound
rcl
test
fiadd
sbb
pop
dec
pushf
push
imul
test
pop
cwde
push
or
shl
clc
out
xor
xor
cmp
in
pop
arpl
mov
or
pushf
ins
cmps
mov
push
adc
ror
cs
sbb
push
shr
pop
jbe
mov
test
cmp
mov
sbb
dec
lock
jae
mov
mov
(bad)
cmp
inc
cmp
jg
out
aad
les
mov
sbb
test
jmp
mov
push
test
fsub
ja
cmp
pop
pop
out
call
mov
adc
jmp
cmp
add
lock
imul
lock
mov
adc
dec
fst
xlat
test
jecxz
cmp
push
push
and
scas
ret
fs
or
adc
ds
and
xchg
inc
cwde
in
push
(bad)
cmps
mov
loopne
in
adc
or
dec
out
int
clc
cld
mov
ja
mov
hlt
mov
rcl
loopne
pushf
push
adc
inc
mov
or
stos
push
add
add
add
dec
ret
fimul
push
adc
push
cmp
add
jb
mov
cmp
je
jmp
mov
je
jmp
xor
pop
push
jmp
and
add
add
push
pop
or
or
aaa
popf
push
sbb
mov
push
mov
pop
cmp
ins
adc
mov
lods
or
sbb
cmc
xchg
push
or
xor
popf
sbb
ins
mov
sbb
or
les
mul
push
rol
ret
call
adc
in
das
ins
ja
and
ror
mov
pop
addr16
nop
(bad)
sub
ja
jo
jnp
jae
adc
scas
pop
call
int3
lods
rol
push
push
outs
(bad)
mov
or
xor
pop
inc
mov
int
pop
sub
xchg
out
nop
jge
mov
pushf
int
in
mov
sbb
and
cmp
xchg
push
dec
sahf
push
test
add
aad
mov
push
les
xchg
push
cmp
lock
cld
add
cmp
stos
outs
sub
sub
or
fcmovnu
adc
fcomp
cmps
je
jle
lods
mov
clc
hlt
add
mov
leave
xor
xor
or
cmp
ret
push
ins
inc
sbb
jl
rcl
adc
inc
and
sbb
imul
(bad)
adc
cmp
pop
mov
jmp
sbb
sbb
ret
pop
add
int3
retf
dec
add
add
retf
inc
adc
lods
imul
ja
pop
mov
inc
mov
xchg
and
push
push
mov
mov
imul
mov
push
cmp
dec
out
rcr
pop
pop
ret
inc
sbb
adc
dec
cmp
or
inc
add
adc
mov
pop
pop
sub
adc
hlt
gs
repnz
and
imul
xchg
mov
add
sub
dec
or
out
out
les
cmp
add
cmp
add
pop
sbb
dec
push
mov
movs
xlat
test
dec
clc
sbb
fsubr
imul
je
mov
test
adc
pushf
shl
cmp
or
cmp
repnz
mov
add
sub
mov
dec
jne
add
lds
ins
cmp
out
movs
add
sub
and
add
xor
xchg
(bad)
pop
mov
mov
loope
lds
movs
xchg
inc
loope
in
and
cmp
dec
sbb
(bad)
or
pop
dec
imul
add
push
add
or
sub
mov
jmp
loopne
loopne
mov
jbe
mov
jbe
test
or
scas
xchg
cmc
fcom
push
mov
add
jecxz
jmp
sbb
push
and
(bad)
push
mov
ins
fadd
add
sbb
in
pop
add
jbe
loope
mov
inc
in
push
xchg
jbe
xchg
test
add
pop
push
and
mov
and
pushf
fdivr
ffreep
sbb
push
pop
pop
test
popf
and
and
sbb
jo
push
push
popf
and
cwde
hlt
pushf
adc
mov
xor
add
dec
jae
(bad)
push
adc
pop
adc
mov
mov
push
lods
int3
mov
jl
wbinvd
cmp
xor
inc
cmps
sub
pusha
and
and
and
stos
jo
lea
adc
sbb
imul
int
push
jae
add
add
jo
lea
and
clc
imul
lock
lock
scas
push
lods
hlt
xor
mov
sub
and
pop
and
inc
inc
mov
mov
add
pop
push
les
add
imul
cmp
and
sub
cmp
fidivr
jae
fist
pop
dec
clc
out
dec
jmp
mov
jl
xor
or
hlt
test
sub
and
fs
dec
or
inc
xor
push
test
dec
test
call
nop
push
dec
inc
ret
jb
into
test
enter
clc
push
xor
cmp
setge
mov
test
sub
call
neg
cmp
and
or
cli
add
jle
push
cwde
pop
fsub
addr16
hlt
or
out
mov
je
(bad)
and
sbb
push
push
sahf
cmps
pushf
or
adc
cmp
pop
cmp
lds
fdivp
mov
fs
mov
pop
jmp
jg
cs
mov
add
xor
cmp
jl
sub
mov
dec
pop
adc
mov
adc
dec
jge
ror
mov
ja
cmp
and
clc
pop
(bad)
or
inc
lods
repz
cmp
out
aas
xor
jge
dec
dec
mov
jne
jl
or
sbb
ret
and
or
or
ficom
ret
adc
aas
xchg
(bad)
ret
xor
ret
cmp
jle
ret
movs
bound
(bad)
pop
adc
adc
mov
push
dec
and
push
sub
or
ss
jg
clc
pop
jmp
dec
xchg
dec
mov
pop
jge
sbb
mov
std
ret
repz
shl
adc
in
pusha
and
jno
mov
out
push
or
dec
push
or
fdiv
(bad)
cmp
push
push
dec
ret
mov
jo
inc
pop
sbb
sbb
test
add
popa
movs
inc
ja
mov
xor
jae
pop
adc
push
adc
adc
inc
or
xchg
scas
and
xchg
push
test
nop
xchg
das
and
cmp
cmove
call
inc
push
sub
sub
shr
popa
xor
sub
sub
call
mov
mov
push
or
xchg
cmp
ja
loopne
(bad)
adc
ret
pop
xchg
test
push
mov
popa
out
lds
and
or
in
outs
dec
mov
push
cdq
mov
xchg
pop
pop
cli
test
jb
add
lea
adc
retf
js
sbb
adc
sub
jb
adc
inc
stos
inc
dec
add
popf
repnz
mov
or
pop
fadd
into
nop
inc
inc
lahf
pop
test
ret
int
xor
or
jne
push
adc
inc
inc
(bad)
or
xchg
fdivr
dec
out
and
and
push
test
fmul
(bad)
retf
sub
icebp
or
test
sub
inc
ror
rcr
lock
mov
dec
jne
push
mov
jg
dec
pop
jne
push
sbb
out
in
mov
cmps
add
int3
mov
or
and
mov
add
xor
mov
int3
xchg
pop
jo
jo
call
ja
sub
pop
cmp
mov
inc
or
xor
data16
movs
inc
(bad)
ins
daa
xor
mov
stc
enter
inc
jne
ret
mov
daa
stos
xchg
in
test
xor
sbb
outs
dec
test
mov
jnp
idiv
mov
pusha
adc
scas
push
fisubr
push
inc
test
pop
in
push
xor
out
loopne
scas
mov
out
mov
dec
mov
in
enter
mov
push
rcr
test
inc
fnstsw
mov
cmp
dec
(bad)
mov
popa
stc
(bad)
xor
mov
sbb
fsub
dec
idiv
xor
mov
jb
nop
mov
imul
pop
adc
loope
ss
inc
jbe
inc
dec
adc
out
in
adc
in
mov
mov
mov
aaa
and
test
les
cwde
leave
mov
les
not
adc
aam
outs
adc
fmul
or
push
add
pusha
gs
lahf
mov
jo
test
nop
aas
(bad)
push
pop
or
push
stos
xor
add
mov
stos
test
pop
adc
jae
cmps
add
cdq
xchg
mov
jo
mov
movs
mov
add
sbb
cld
dec
dec
jmp
adc
adc
les
pop
adc
neg
xchg
pop
mov
push
push
pushf
and
nop
push
icebp
lods
dec
les
fdivr
rcr
add
jb
jbe
and
imul
pop
mov
ret
mov
jae
xor
loope
push
ds
loopne
inc
mov
ds
pop
jnp
push
test
dec
jecxz
jnp
add
or
or
add
add
add
mov
mov
cmp
mov
ret
adc
sbb
es
daa
adc
sbb
add
xchg
mov
int
je
sub
or
movs
and
mov
xor
adc
shr
and
pop
jle
mov
sbb
inc
shl
shr
or
mov
cld
(bad)
or
xor
stos
jmp
xchg
and
jno
and
pop
mov
sub
or
rol
mov
sbb
or
rol
out
jl
pop
jg
xor
inc
jmp
pop
mov
ret
pop
push
fsubr
(bad)
adc
rcr
lods
fsubr
or
jle
je
scas
enter
push
sbb
jne
mov
mov
sbb
fadd
sbb
cmp
adc
jmp
adc
adc
add
ret
inc
repz
mov
and
sbb
int
int3
xchg
adc
adc
mov
jmp
cmp
shl
push
inc
ret
add
xor
push
not
sbb
pop
cmp
or
mov
cmp
ret
popf
sub
dec
add
mov
rcr
adc
jecxz
call
inc
push
pop
imul
clc
sahf
test
inc
pusha
xchg
sub
dec
push
sahf
fidiv
push
ret
ins
bound
daa
stc
or
jle
mov
inc
push
ds
jg
sbb
mov
outs
or
ror
(bad)
add
push
sub
retf
sbb
mov
outs
dec
in
adc
mov
pop
add
sbb
or
mov
imul
rcr
pop
ss
add
test
add
mov
adc
adc
mov
jmp
inc
call
cmp
push
cmc
add
sbb
ins
mov
push
adc
rol
dec
cmp
or
xchg
imul
adc
or
push
jmp
push
lods
clc
push
xor
mov
mov
std
pop
ins
stos
in
sbb
in
icebp
inc
cmp
jne
movzx
rcl
add
sub
inc
test
cmp
clc
sub
and
out
xlat
ret
out
leave
sub
mov
push
jo
push
push
ror
xchg
mov
add
push
and
mov
test
inc
test
mov
jl
inc
mov
sbb
inc
movs
and
ja
sub
mov
adc
dec
shl
ror
in
sbb
fidivr
mov
adc
shl
enter
inc
movs
pop
sbb
push
addr16
rcr
lods
mov
inc
or
dec
jmp
push
imul
sbb
sub
fdiv
ja
add
iret
(bad)
out
pop
stos
add
mov
or
movs
enter
and
jb
retf
inc
adc
ret
out
pop
push
cmps
pop
fcom
outs
push
dec
push
push
aaa
int
pop
test
rcl
mov
jnp
test
cmp
imul
push
sbb
xlat
rcr
dec
ret
mov
mov
jle
and
sbb
inc
loopne
addr16
or
pop
(bad)
mov
int3
mov
mov
cmp
(bad)
or
sub
ss
call
sbb
test
push
mov
and
repnz
and
fnstenv
or
push
or
jns
dec
pop
fild
clc
inc
leave
loop
or
pop
or
add
ret
xor
inc
call
cmp
jno
jmp
inc
dec
adc
out
iret
mov
jp
xor
push
dec
sbb
adc
outs
sbb
dec
or
dec
mov
cdq
and
rcr
cmp
or
es
adc
inc
sub
fst
ds
add
jo
addr16
pop
ret
add
inc
sbb
iret
aaa
(bad)
and
sbb
sub
gs
dec
mov
jne
add
pusha
or
jae
push
jne
cmp
mov
fbstp
test
adc
inc
inc
mov
dec
ror
and
cli
push
sbb
xlat
leave
xchg
or
in
and
pop
jb
inc
pop
gs
pop
sub
jne
daa
add
mov
sahf
add
adc
mov
aam
sub
adc
and
(bad)
cs
adc
sbb
in
mov
sbb
scas
pop
lahf
mov
lods
mov
test
ret
and
dec
jl
add
pop
cmp
jne
sbb
jns
lods
inc
cmp
sbb
or
adc
jae
out
jp
add
test
mov
mov
mov
xchg
sub
push
add
aam
pop
enter
jbe
push
adc
sar
cmps
imul
mov
jo
mov
lea
cmp
mov
sahf
xchg
call
push
dec
and
sub
adc
in
or
pop
out
mov
movs
hlt
test
test
sbb
adc
setns
push
add
add
inc
inc
mov
add
ja
or
lods
push
add
lock
lds
push
and
shr
mov
ret
adc
into
jmp
nop
adc
das
dec
clc
jb
dec
jbe
ins
inc
jae
cmp
into
in
jbe
mov
daa
pop
aaa
ss
retf
adc
(bad)
nop
out
inc
fnstcw
and
stos
add
cmp
add
and
xchg
out
sbb
mov
aam
lea
bound
cli
sbb
adc
sbb
sar
mov
push
cmp
dec
aam
jg
loopne
add
out
mov
or
pushf
sahf
mov
adc
mov
mov
enter
xchg
inc
dec
push
(bad)
(bad)
shl
nop
shr
mov
xor
inc
call
and
mov
push
imul
cs
add
shl
mov
xchg
and
jns
sub
rcr
mov
or
ss
jne
ja
adc
sub
mov
mov
dec
pop
(bad)
cmp
xor
ins
push
or
jmp
pop
push
jbe
pop
(bad)
js
jno
dec
clc
and
mov
cmc
mov
pop
add
je
or
and
loope
pusha
daa
push
jns
mov
xor
stos
dec
inc
jg
lock
cmp
jg
sub
push
inc
in
(bad)
out
pushf
in
jns
pop
jo
dec
push
js
cmp
sbb
and
cld
xchg
jbe
adc
or
dec
inc
jns
stos
sti
mov
or
add
and
in
and
or
test
dec
enter
cmps
fist
mov
mov
call
xchg
hlt
inc
or
daa
adc
and
sub
push
loope
push
repnz
inc
jne
add
in
ins
sub
inc
cmp
jle
shl
add
lea
mov
push
or
adc
cmps
pop
pop
mov
call
push
cmp
mov
rol
jl
xor
shl
mov
pop
adc
mov
mov
add
and
cmp
and
jge
dec
lock
(bad)
inc
mov
dec
pop
(bad)
js
add
mov
or
pusha
pop
repnz
adc
outs
jne
adc
lock
(bad)
pop
test
adc
(bad)
cmp
jle
js
jns
or
retf
inc
addr16
or
clc
cs
js
xor
xor
add
mov
loope
add
sub
(bad)
mov
mov
mov
dec
jge
lea
or
rcl
xchg
or
adc
and
(bad)
stos
lods
or
pop
dec
mov
jne
dec
xchg
xor
loope
test
dec
loopne
dec
pop
pop
xchg
popa
xor
addr16
add
test
sub
add
lock
inc
or
cld
jle
xlat
mov
pop
je
jno
cmp
push
popf
les
enter
out
(bad)
les
lock
test
retf
adc
int3
int3
and
cmp
and
int3
and
push
call
or
jg
popa
push
loop
mov
adc
mov
xor
mov
inc
push
pop
dec
or
loopne
push
aam
call
mov
call
pushf
rcl
fmul
sub
aas
fadd
rcl
mov
test
or
clc
cmp
pop
pop
enter
push
sub
pop
and
dec
adc
or
pop
iret
lahf
icebp
inc
xor
adc
adc
stos
adc
xor
xor
pop
cs
adc
xchg
ret
pop
push
add
push
cmp
(bad)
adc
les
retf
dec
pop
push
loopne
add
push
pop
inc
mov
cmps
test
xor
daa
cwde
push
pop
sbb
and
jmp
inc
imul
sub
dec
push
pop
jg
repnz
shl
push
clc
loope
mov
push
sub
jge
mov
mov
sub
push
push
iret
sub
out
mov
mov
or
inc
imul
imul
clc
clc
dec
mov
xor
hlt
mov
push
mov
out
or
mov
hlt
pop
mov
ret
jns
loope
add
add
push
xor
arpl
mov
add
call
add
daa
loope
sub
mov
and
lea
cmp
addr16
or
imul
call
mov
add
ret
pop
pop
dec
and
loope
(bad)
xor
cld
push
cmp
xchg
daa
mov
add
sbb
pop
js
mov
add
xor
rol
(bad)
(bad)
ret
jbe
and
pop
test
lahf
mov
fsubr
adc
dec
sbb
out
mov
add
mov
xor
in
jns
and
cli
movs
fadd
fcmovnbe
rcr
ret
pop
inc
ret
jb
and
leave
push
and
fst
jae
inc
lock
or
or
cmp
shr
mov
sbb
or
jecxz
adc
jne
nop
es
jo
pop
cmp
push
fiadd
call
add
shl
data16
mov
mov
push
or
sub
inc
lods
mov
and
sbb
fiadd
cmp
and
jo
mov
fs
popa
push
repnz
sbb
icebp
xchg
(bad)
and
mov
clc
xchg
and
fsubr
jl
movups
dec
pop
inc
mov
popa
add
push
pushf
shl
repnz
xor
nop
push
retf
in
fs
imul
or
in
jl
push
or
enter
cmp
fwait
daa
test
int3
imul
sbb
inc
pushf
xchg
fs
jns
and
mov
nop
push
adc
out
cmps
xlat
test
sbb
leave
mov
js
pop
je
daa
out
in
mov
jbe
data16
stc
mov
fs
sahf
xchg
out
pusha
pop
xchg
push
aaa
ja
cs
push
cmps
mov
fmulp
cmp
dec
mov
ja
cs
cmp
repnz
sahf
xchg
imul
xor
xor
mov
in
repnz
sbb
and
gs
cmp
pop
sbb
in
or
push
nop
ins
loopne
xchg
xor
ficomp
sbb
mov
enter
je
push
idiv
in
push
or
das
test
aas
pop
or
mov
popf
mov
ins
mov
xchg
mov
enter
adc
sbb
mov
jb
enter
shl
ds
mov
in
sub
add
js
push
xchg
fist
cld
pop
or
or
dec
xor
nop
add
in
mov
in
inc
cld
loopne
sbb
adc
call
repnz
xor
push
or
das
cdq
add
leave
pop
sub
xor
pop
xchg
fs
mov
push
inc
push
push
inc
dec
xchg
jno
xor
adc
call
ja
jae
xor
and
cmps
fcomi
and
movs
rcl
add
sbb
xchg
retf
and
popa
lods
sub
cmps
adc
pop
addr16
xor
dec
adc
push
enter
adc
mov
xor
fs
inc
or
rol
mov
jb
xchg
pop
das
pusha
popf
outs
adc
fadd
cmp
gs
jg
sar
gs
ins
xor
jae
sbb
into
adc
retf
in
ja
add
fld
dec
jae
sbb
or
dec
adc
jb
fcom
or
into
inc
push
push
inc
je
out
fisttp
sub
clc
popf
inc
clc
call
inc
inc
push
inc
inc
push
dec
inc
inc
inc
lods
inc
pop
call
mov
and
jb
xchg
outs
adc
xchg
mov
adc
daa
inc
cmp
jae
inc
js
rol
inc
ins
cmp
aas
jae
mov
repz
or
dec
push
dec
inc
push
inc
adc
sbb
sbb
pop
sub
jo
in
pop
and
mov
daa
fld
jecxz
popa
shl
je
ins
shl
sub
add
jl
sub
bnd
lahf
es
inc
inc
dec
push
dec
or
or
in
and
sti
sbb
in
jecxz
push
arpl
cmps
in
or
mov
and
cs
neg
dec
gs
ficom
cld
lea
dec
aaa
or
mov
ds
push
ins
jo
jp
les
mov
sbb
cmp
pop
pop
cli
loope
and
xor
add
push
and
ja
inc
fs
push
loopne
pushf
dec
mov
aam
adc
cmps
xchg
adc
daa
lahf
aaa
cli
inc
cld
and
adc
inc
dec
inc
mov
popf
popa
pushf
mov
inc
or
daa
pop
cmp
push
je
dec
and
inc
popa
dec
add
pop
jo
stc
ret
inc
pushf
je
or
sbb
ja
outs
fs
fs
jno
test
or
sbb
lock
push
inc
(bad)
fld
pand
ss
sbb
xor
addr16
retf
add
xchg
cmps
adc
(bad)
ja
jo
fiadd
sub
(bad)
pop
adc
outs
inc
adc
rol
sbb
loop
mov
dec
and
inc
es
and
push
add
fwait
and
int3
push
dec
jg
jmp
sub
loop
xor
pop
cs
or
jno
and
sub
add
daa
daa
daa
daa
hlt
lock
call
in
(bad)
daa
daa
daa
daa
aam
int3
enter
daa
sar
add
xchg
sub
mov
loop
add
adc
push
test
add
icebp
inc
push
xchg
mov
adc
mov
or
jne
mov
dec
imul
mov
fs
seta
movs
lock
and
xor
ins
je
adc
pop
mov
mov
(bad)
lea
test
ror
jb
es
xor
push
and
jecxz
pop
and
nop
fild
mov
loopne
movs
pop
test
mov
cld
jb
in
mov
cmps
leave
sub
adc
test
(bad)
adc
jmp
sub
jl
clc
lea
stc
sar
rol
cmc
sbb
push
mov
stc
movs
fidivr
inc
jb
jg
lock
push
sbb
ss
inc
cld
adc
sbb
test
xchg
jmp
and
mov
pop
pop
xor
xor
cmps
nop
pop
adc
cdq
inc
dec
cmp
mov
nop
add
adc
test
add
sub
or
adc
adc
call
out
test
loop
jmp
ror
jb
mov
mov
xchg
xchg
xchg
sbb
or
aas
ret
inc
push
dec
or
lock
imul
mov
ret
sub
push
xchg
nop
jge
mov
jmp
adc
mov
loopne
xchg
dec
push
enter
and
retf
or
fmul
xchg
dec
xor
adc
xchg
dec
xor
adc
sbb
push
cmp
and
add
dec
or
gs
dec
sub
sub
gs
retf
xor
xchg
retf
sub
cmp
retf
loopne
cmp
gs
out
movs
pop
inc
rcl
xor
gs
mov
scas
dec
mov
cmps
cwde
push
sub
push
outs
xchg
repnz
mov
or
shl
push
gs
std
inc
inc
js
mov
(bad)
stc
repnz
je
fs
jne
dec
jne
xchg
pop
mov
adc
sbb
retf
and
pop
outs
dec
jb
pop
outs
jb
xor
repnz
ins
jo
retf
pop
sub
pop
push
pop
cmp
sub
and
and
jns
sbb
inc
movs
pop
inc
jns
loopne
jae
(bad)
pop
outs
xchg
push
les
and
adc
ds
adc
xlat
pop
or
dec
rcl
popa
add
pop
adc
fdiv
inc
push
mov
sub
xchg
ss
pop
mov
and
pop
arpl
cmc
call
adc
and
(bad)
sbb
adc
lods
inc
cmp
dec
dec
lods
inc
adc
pop
sar
in
push
lods
push
sbb
mov
and
inc
ss
push
test
repz
cmps
fdivr
sar
dec
dec
fsub
jnp
lock
jo
mov
js
jns
fwait
popf
es
jl
mov
ret
lsl
sbb
aam
clts
add
pop
add
ins
cmp
inc
imul
add
in
push
mov
or
pop
or
adc
cmps
adc
sbb
add
xor
or
fsub
inc
dec
add
inc
inc
call
push
popa
arpl
lds
(bad)
fs
mov
push
inc
int
or
inc
js
xchg
dec
leave
addr16
adc
pop
pop
inc
sbb
arpl
fdiv
stos
add
fwait
sbb
or
in
pop
mov
adc
push
jg
adc
mov
mov
inc
loope
and
pop
push
and
xor
or
ins
mov
add
dec
outs
inc
cmps
adc
or
jbe
jo
xchg
add
inc
dec
sbb
push
fisub
mov
jns
jo
xchg
jl
scas
dec
gs
int
shl
lods
jp
ins
aas
mov
inc
pop
push
stos
and
sbb
pop
add
xor
in
inc
adc
sbb
scas
jmp
add
mov
cmp
inc
push
jae
imul
daa
pop
adc
movs
sbb
movs
xor
sub
jl
sbb
pop
add
or
push
popf
fisub
adc
leave
or
jno
jns
mov
cmp
adc
push
scas
dec
pop
fld
push
mov
pusha
shr
fild
cmp
aaa
lock
inc
stos
jg
dec
movs
enter
pop
lds
inc
adc
push
or
and
enter
mov
enter
mov
mov
mov
push
xor
fld
or
sbb
sub
and
ins
mov
inc
mov
mov
mov
or
xor
adc
jbe
fild
cmp
add
mov
nop
and
mov
mov
add
inc
jg
pop
jb
jo
cmp
leave
repz
call
enter
jb
adc
inc
ja
mov
nop
push
sbb
mov
lock
test
test
mov
add
and
gs
fild
cmp
cmp
jb
jg
mov
mov
mov
and
pusha
xor
fild
cmp
mov
add
add
xchg
mov
pop
inc
imul
pop
in
pop
xor
cmp
ret
movs
inc
xor
lahf
adc
dec
ja
cmp
cmp
mov
daa
mov
mov
mov
scas
fild
cmp
cmp
mov
fistp
cmovb
xor
cmp
xlat
pop
xor
rcl
mov
clc
(bad)
mov
inc
pop
push
inc
pop
and
inc
and
stc
loopne
int
pop
inc
lock
xor
or
mov
and
data16
cwde
mov
cmp
cmc
xchg
xchg
idiv
stc
push
imul
add
xor
dec
add
mov
sbb
imul
nop
ret
xchg
faddp
mov
add
inc
xchg
repz
lods
or
dec
mov
movs
push
push
jg
repnz
in
mov
pop
leave
add
inc
push
mov
push
add
add
leave
jb
imul
sub
or
daa
call
and
mov
inc
sbb
cmps
call
sbb
in
adc
and
mov
and
nop
mov
mov
xor
mov
xchg
mov
push
and
imul
cs
cmp
fbld
nop
pop
test
jle
aad
rol
loopne
inc
cmp
inc
je
sbb
add
add
loopne
outs
loop
(bad)
mov
push
sub
or
je
sbb
sub
call
jbe
add
stos
cld
adc
pop
nop
pop
test
dec
pop
lods
in
in
mov
xor
retf
clc
mov
arpl
and
mov
mov
xchg
iret
lock
in
mov
xchg
iret
in
movs
mov
mov
xchg
iret
call
outs
jb
jae
loopne
ins
gs
iret
and
sbb
push
mov
or
int3
adc
adc
xchg
les
xchg
inc
into
je
adc
mov
scas
mov
ror
xchg
inc
cli
shl
or
ss
inc
pop
inc
mov
icebp
xchg
les
pop
pop
lock
outs
lahf
sar
add
in
lods
push
jmp
adc
cmps
mov
cmovs
jb
mov
(bad)
adc
icebp
mov
mov
dec
repnz
dec
or
inc
xchg
in
jmp
inc
and
add
push
pushf
cmp
mov
cmp
jmp
paddusb
add
ja
jo
adc
inc
mov
push
or
push
jb
or
push
cmp
fs
mov
inc
inc
nop
int
aas
dec
fisttp
and
nop
dec
movzx
aaa
aas
rcr
(bad)
jne
test
movs
push
add
les
or
pop
cmp
outs
or
test
xor
inc
sbb
jge
mov
sub
add
mov
xchg
sbb
ss
inc
add
and
rol
adc
(bad)
xchg
dec
fmul
loope
sbb
and
std
call
sti
das
dec
in
(bad)
adc
or
sub
jne
push
mov
rcr
adc
repz
jno
lock
data16
sub
mov
rcl
jmp
das
imul
loop
test
or
or
retf
ins
pop
jbe
mov
les
lock
push
mov
mov
sub
cli
mov
push
test
xlat
aaa
xor
mov
ins
mov
out
addr16
push
std
test
sub
mov
pop
fucomip
dec
and
push
in
les
add
fwait
ret
add
mov
add
dec
loopne
loop
xchg
pusha
add
cmp
cmp
cmp
adc
pop
dec
(bad)
pop
mov
ret
arpl
sub
mov
and
cmp
jecxz
xor
aaa
mov
push
dec
jne
cmp
fsub
push
push
hlt
sbb
mov
in
lods
fstp
xor
outs
cmp
dec
test
ds
dec
mov
rol
or
pop
js
movs
jp
arpl
test
daa
(bad)
out
ja
or
mov
push
inc
cld
mov
xchg
pusha
out
pop
sahf
mov
aaa
cwde
or
(bad)
fnstsw
mov
cmp
ja
in
inc
jp
xor
scas
add
or
or
add
das
mov
adc
adc
add
mov
stos
fcmovb
pushf
fild
xlat
(bad)
cmp
out
add
adc
cmp
repz
inc
push
pop
jno
xchg
call
add
adc
pop
out
dec
xchg
mov
push
push
sbb
adc
and
push
rcl
or
movs
(bad)
push
dec
cmp
mov
mov
ror
stos
add
bound
fs
sbb
mov
out
mov
inc
je
or
ins
loope
mov
pop
add
push
adc
les
add
es
pop
add
xor
push
jbe
mov
xchg
je
cmp
dec
add
mov
pop
ss
xchg
test
sbb
or
mov
pushf
add
cmp
or
je
adc
imul
mov
xor
dec
or
adc
add
dec
in
push
sbb
sub
xor
lock
or
lock
les
add
pop
xchg
sub
adc
dec
test
pop
mov
jecxz
mov
mov
inc
jmp
pop
add
in
jne
pushf
xchg
fiadd
or
jns
jmp
push
mov
fcom
push
dec
jle
dec
pop
push
mov
xchg
sbb
mov
shl
mov
in
add
or
nop
mov
dec
imul
mov
or
adc
mov
push
test
imul
movs
push
loopne
sub
inc
cmps
or
dec
test
pop
test
aaa
adc
inc
sub
pop
mov
inc
in
imul
je
ins
lock
xor
cmp
pusha
xchg
adc
inc
adc
or
adc
cld
imul
and
ins
lahf
add
pop
(bad)
repz
dec
sahf
add
gs
cmp
pop
call
push
in
push
xor
pop
ss
call
jne
retf
xchg
not
cld
xchg
jl
jne
outs
push
cmps
loopne
pop
popa
mov
mov
sahf
pop
jnp
adc
adc
fnstsw
cmp
stos
inc
daa
cmp
cmp
and
add
sahf
pop
add
ja
push
clc
in
xchg
inc
into
or
inc
fcmovnbe
and
jle
cmp
jmp
and
adc
int3
push
inc
test
je
inc
sbb
push
clc
mov
(bad)
popf
test
add
mov
pop
aam
add
and
repz
(bad)
call
adc
xor
retf
cmp
xor
add
ins
cmp
rol
scas
jmp
hlt
(bad)
cmp
dec
rcl
(bad)
sbb
mov
dec
lds
push
pop
packssdw
int
(bad)
pushf
movzx
mov
std
repz
and
cmp
pop
xchg
int3
into
repz
test
pop
jnp
int
inc
lods
sbb
sahf
pop
pop
out
sahf
cmps
xor
push
pushf
mov
or
mov
in
sti
pop
mov
shl
mov
sbb
mov
and
mov
and
sub
push
mov
cld
xor
dec
fcomip
adc
sbb
push
and
xchg
xor
imul
pusha
ss
ins
jge
pop
pop
xor
mov
jmp
or
pop
in
jmp
rcr
mov
sub
and
jno
sbb
int3
retf
popa
sub
sub
mov
dec
div
int
loopne
stos
jg
test
jne
adc
shr
cmp
aas
adc
jp
dec
(bad)
jecxz
mov
add
outs
cld
mov
jne
mov
mov
aam
into
shl
xor
push
(bad)
test
mov
mov
stos
fs
fsub
cld
dec
in
daa
and
into
mov
es
movq
or
xlat
push
mov
movs
cmp
and
nop
daa
in
mov
add
inc
es
adc
(bad)
or
fsubr
cwde
and
rol
lods
sub
pop
mov
es
int
jb
sbb
mov
inc
jge
addr16
push
mov
lods
(bad)
shl
int
fsubr
sti
xor
ins
and
jae
pop
push
push
ret
dec
mov
pop
inc
push
add
add
pop
mov
std
add
jmp
inc
push
lock
lds
push
call
call
push
aaa
push
sbb
arpl
xor
jmp
mov
sub
add
nop
cmp
aad
mov
cmp
or
adc
jg
pop
aas
in
ret
push
lock
popa
ror
push
iret
sar
lock
jge
idiv
and
push
xor
fwait
(bad)
pop
daa
movs
mov
cmp
cs
mov
aas
cmp
cmp
and
push
adc
mov
sub
mov
ret
fs
ror
imul
sub
sub
xchg
sbb
mov
ins
cmps
add
(bad)
pop
in
xor
mov
fld
push
adc
ins
nop
iret
jmp
fistp
addr16
rcr
add
mov
dec
dec
xlat
aam
imul
mov
scas
pusha
hlt
mov
cld
push
in
fdiv
jbe
shr
stc
loopne
lock
mov
push
add
mov
loopne
cmps
(bad)
adc
xor
sbb
inc
pslld
dec
mov
jmp
ret
pop
mov
sbb
pop
es
add
adc
test
pusha
sbb
rol
fisub
and
cwde
ins
sbb
add
sub
movs
lock
sti
(bad)
std
jg
sub
xor
pop
out
je
lods
ins
ins
mov
xchg
hlt
es
jmp
push
cmp
and
sbb
pop
mov
inc
inc
sub
mov
pop
inc
sub
stos
fisub
push
adc
adc
add
mov
xor
and
jo
sbb
and
mov
in
push
xchg
cmp
in
and
popf
and
push
push
mov
je
ss
cmp
pop
(bad)
mov
in
lods
and
xchg
(bad)
and
outs
das
or
dec
or
shl
sbb
cs
or
fst
mov
sbb
in
jmp
hlt
out
pop
jae
aad
push
popf
mov
sahf
(bad)
sbb
inc
fs
in
call
daa
cmp
repz
adc
aad
daa
jecxz
jo
jb
inc
gs
or
fimul
inc
or
ret
movs
cmp
pop
cmp
pop
dec
scas
ins
gs
inc
mov
test
js
xor
push
mov
jo
ins
ins
and
rol
mov
xor
lds
rcr
mov
or
dec
test
daa
les
(bad)
lods
cmp
dec
je
or
jmp
mov
sub
stos
pop
les
test
sbb
push
xor
clc
movs
enter
dec
fld
jns
dec
jae
xlat
test
outs
(bad)
jbe
fadd
push
aas
ds
jnp
daa
mov
add
mov
shr
push
jno
mov
mov
fxch
ds
and
sub
push
test
rcl
mov
xor
or
adc
dec
push
aaa
jae
daa
mov
lock
sbb
pop
push
pop
sti
push
dec
or
inc
mov
dec
icebp
push
cmc
retf
sub
mov
rcr
imul
aaa
add
out
call
test
aas
mov
pushf
adc
xchg
add
adc
sub
jg
(bad)
je
jb
xor
pop
mov
leave
daa
add
adc
cmp
or
jnp
pop
fadd
pop
and
xchg
add
add
adc
pusha
sbb
ret
pop
dec
dec
or
jbe
push
cmp
pusha
and
sbb
pop
add
adc
adc
dec
adc
add
fild
imul
xchg
movs
cld
out
add
iret
repz
xchg
loope
retf
hlt
mov
sbb
add
mov
adc
jns
or
aas
mov
inc
push
fstp
add
or
add
movsx
adc
out
fdiv
fdiv
add
sub
stc
add
xchg
iret
repz
jne
inc
cmps
in
not
mov
in
(bad)
mov
xchg
mov
fnstsw
nop
fld
ja
xor
cmp
repz
outs
(bad)
enter
imul
mov
pop
mov
fiadd
fstp
and
xlat
test
mov
xlat
stos
inc
or
adc
push
les
mov
push
add
xor
cdq
addr16
bound
sub
push
adc
cld
test
fist
mov
pop
movs
sub
sub
add
sbb
cwde
and
push
fadd
bound
adc
fdivr
fmul
mov
add
sbb
cdq
in
mov
mov
dec
loopne
imul
xor
fs
sbb
inc
lock
popf
inc
or
cmp
fdivr
ret
sbb
test
call
call
sub
fs
xor
(bad)
push
(bad)
shr
sub
sbb
aaa
sub
or
fs
push
inc
popa
mov
out
inc
push
xor
in
iret
repz
pop
loopne
push
retf
sahf
out
call
es
jl
loop
mov
adc
jns
neg
daa
pushf
scas
push
ret
xlat
jmp
push
aam
bound
mov
cmp
aas
and
arpl
fnsave
mov
arpl
cwde
fadd
add
jo
xchg
cdq
xchg
ss
mov
push
xor
mov
and
push
or
lock
jns
sbb
je
arpl
les
sbb
and
nop
and
jb
popf
adc
rcr
adc
in
add
pop
sub
jns
jecxz
test
mov
jnp
in
or
sbb
aaa
mov
cmps
mov
mov
pop
and
inc
das
fst
mov
imul
sub
add
sub
cdq
js
je
dec
cmps
and
sbb
xchg
inc
cmp
sub
daa
jmp
dec
jmp
fmul
adc
cmp
retf
adc
loopne
int3
add
xor
mov
pushf
inc
imul
fwait
ds
les
(bad)
mov
push
lods
jge
aad
adc
cmp
cmc
call
push
pop
out
mov
push
(bad)
adc
mov
ja
mov
jne
push
daa
mov
push
lods
mov
cwde
xchg
jb
jle
in
loop
mov
xchg
jmp
pop
or
inc
leave
(bad)
out
push
sbb
add
pop
mov
push
push
jl
dec
dec
outs
pop
fisttp
add
test
les
cmp
fucom
in
(bad)
add
xchg
inc
sub
cbw
test
push
push
imul
test
mov
mov
pusha
das
sub
test
and
xchg
and
or
push
sbb
lahf
cdq
ret
and
pop
scas
and
call
sahf
out
or
int
in
jmp
jmp
pop
add
push
sub
adc
iret
cmp
mov
xchg
jl
(bad)
cmp
mov
pop
xchg
sbb
sbb
inc
or
sbb
sub
mov
or
fild
popf
(bad)
and
sbb
add
in
out
enter
ror
dec
sysexit
popa
in
and
in
lea
add
arpl
add
rcr
pop
dec
and
inc
jmp
iret
rcr
je
xchg
aaa
in
rep
mov
ss
cmp
push
cmc
add
push
pop
(bad)
loopne
and
sbb
push
sbb
fisubr
bound
lods
sbb
cmp
pop
jno
sbb
fcom
pop
in
and
cmp
push
jno
movs
jmp
lahf
(bad)
inc
mov
aam
xlat
mov
xchg
push
fidiv
jno
pop
cmp
jne
inc
gs
sub
or
sub
add
cmp
lock
mov
ds
lea
loope
adc
out
clc
out
repnz
addr16
fld
fstp
fwait
jmp
add
add
add
fadd
mov
neg
mov
adc
adc
push
inc
inc
pop
hlt
and
in
push
mov
pop
clc
fwait
rcl
fisttp
mov
xor
xchg
jecxz
mov
in
mov
jns
iret
cli
push
out
adc
xchg
div
dec
or
sbb
stc
out
call
lods
xor
sahf
(bad)
rol
xchg
push
loope
add
inc
fist
jl
fcmovnu
mov
or
aam
sub
loopne
ds
xor
fstp
enter
mov
sub
mov
cmp
pop
fild
pop
fwait
adc
inc
dec
and
adc
jg
sbb
add
inc
pop
mov
ret
push
lods
sub
leave
fmul
nop
pop
sub
int
fcom
movs
xchg
push
pop
fsubr
out
imul
inc
out
xchg
mov
gs
out
sahf
xchg
cmps
ror
pusha
pop
rcl
xchg
add
inc
pop
sbb
out
mov
dec
jno
or
rol
jnp
adc
or
push
adc
push
adc
jmp
out
jmp
jmp
jmp
jns
clc
pop
adc
sub
pop
dec
call
push
iret
not
cmp
fld
push
mov
jns
and
into
push
fadd
pop
repnz
ret
iret
repz
jbe
daa
cmp
push
data16
sbb
cmp
xchg
bnd
add
jb
sbb
cwde
add
sbb
fisttp
xor
inc
sub
mov
ja
arpl
ins
in
xor
aad
jmp
xor
jo
mov
repz
dec
xchg
jl
mul
pop
inc
push
out
add
loopne
daa
aaa
int
nop
pop
enter
ret
inc
mov
pop
mov
or
dec
and
dec
data16
ins
sbb
icebp
xor
inc
jl
dec
and
mov
sub
pop
jecxz
ret
cmc
leave
push
push
pop
or
test
pop
hlt
stc
inc
test
jecxz
inc
call
out
adc
nop
mov
xor
fadd
mov
jo
sbb
pop
mov
es
jecxz
inc
sub
pop
pop
pmulhuw
adc
pop
ficomp
cmc
adc
and
imul
mov
loopne
out
adc
push
dec
in
repnz
push
dec
idiv
pop
push
sbb
daa
jno
cs
out
fwait
mov
in
inc
pop
enter
cmp
jmp
cmp
fcmovnbe
xchg
mov
pop
pop
inc
dec
pop
sbb
jecxz
pop
sub
add
mov
test
sbb
mov
les
imul
call
inc
pop
dec
aas
add
pop
in
pop
xchg
or
aas
mov
xchg
xor
mov
pop
clc
test
jns
ds
inc
dec
push
or
xor
push
lea
fprem
aas
jmp
test
sub
add
mov
aaa
jmp
test
or
sub
in
sbb
xchg
mov
ins
in
cmp
nop
and
outs
sub
push
call
xchg
daa
cmp
inc
ins
imul
enter
dec
enter
cli
push
or
cmp
ins
jle
dec
push
xchg
stos
push
push
push
enter
ins
push
push
sbb
push
and
sub
sti
in
jg
pusha
fiadd
fistp
sti
and
and
imul
adc
mov
in
repnz
cld
iret
jae
xor
cmp
ins
xchg
out
imul
push
push
std
cmp
xchg
mov
int
or
and
pop
out
mov
popa
outs
push
and
mov
or
dec
mov
or
cmp
pop
inc
sbb
jmp
outs
ins
mov
or
pop
call
push
lods
popf
jmp
mov
and
movs
sbb
nop
pop
ins
or
retf
test
sar
cmp
(bad)
pop
dec
aaa
in
repz
outs
adc
cmp
mov
pop
ds
(bad)
cmp
jnp
push
(bad)
test
add
dec
pop
push
mov
mov
inc
push
add
inc
rol
out
in
inc
and
out
rol
jb
out
and
mov
jmp
add
(bad)
arpl
sub
ret
scas
mov
lea
rol
push
sub
test
inc
outs
lods
push
pop
das
push
stc
loop
hlt
add
push
mov
or
xchg
or
add
push
sbb
je
and
or
jmp
dec
add
jmp
fucomi
es
lock
test
adc
(bad)
leave
push
sbb
outs
push
sti
add
mov
stos
pop
xlat
mov
add
outs
adc
sbb
inc
or
add
inc
adc
adc
and
push
fstp
sub
cmp
sub
pop
daa
bswap
inc
loope
add
ins
jl
and
(bad)
xchg
xchg
inc
pusha
mov
inc
pop
or
in
dec
dec
mov
in
dec
push
add
mov
inc
fdiv
in
inc
pop
mov
add
sub
or
xor
mov
sbb
in
sbb
pop
in
es
out
or
in
stos
loop
cmp
push
inc
jae
ds
ds
mov
sbb
push
pop
jle
outs
xchg
out
imul
iret
jnp
push
out
add
rol
(bad)
mov
dec
stc
add
sub
scas
cwde
cmp
ja
adc
ficomp
lods
bnd
lods
mov
(bad)
aas
test
cmp
test
into
jge
or
imul
movs
loopne
mov
retf
call
fmul
cmp
sar
clc
lahf
mov
test
jae
add
and
add
inc
mov
lock
fiadd
nop
push
pushf
xchg
(bad)
lods
jo
cwde
jbe
cmp
cwde
xchg
sbb
xchg
and
sub
out
nop
pop
aas
nop
push
and
mov
mov
or
ret
inc
call
mov
test
nop
out
inc
or
inc
xor
pop
mov
stc
das
xchg
jl
sbb
cmp
pop
scas
sbb
sub
mul
add
imul
js
js
jnp
ins
gs
add
adc
or
inc
xchg
jb
or
fstp
std
test
movs
push
repz
cmps
int
sub
pop
mov
aaa
in
mov
inc
enter
jg
xor
inc
pop
call
dec
or
leave
pop
imul
adc
inc
adc
sbb
sub
pop
add
dec
xchg
je
imul
or
dec
jo
xchg
es
and
enter
dec
rol
hlt
hlt
imul
mov
push
xor
lock
cmps
rcr
ins
adc
sbb
push
push
add
xchg
les
cmp
fisub
test
or
rcl
in
pop
dec
mov
add
outs
ins
pop
out
dec
pop
out
adc
pop
sub
rcl
pop
call
xor
inc
jl
lods
movs
dec
imul
aas
jmp
bound
add
dec
dec
mov
add
test
jnp
push
inc
test
test
cmp
jg
add
xchg
push
ficomp
ds
js
inc
add
jl
lahf
cwde
(bad)
fidiv
test
mov
xchg
call
cmc
mov
sbb
or
add
and
fs
sub
test
cli
and
add
or
mov
mov
std
push
and
push
or
leave
inc
dec
cld
add
or
mov
dec
xchg
loopne
daa
push
and
outs
adc
and
or
cmp
shl
in
jno
xor
jno
mov
or
je
ss
fcom
and
loopne
sti
mov
cmp
lods
mov
repz
fs
or
cdq
push
movs
int
sahf
out
add
es
jl
push
sahf
mov
je
cmp
neg
daa
retf
out
add
sbb
dec
dec
loopne
lahf
add
add
or
adc
les
mov
test
xor
xchg
xchg
pop
(bad)
repnz
inc
mov
(bad)
int3
xor
pop
push
cmp
lea
pushf
cmp
sti
cwde
(bad)
mov
xchg
aas
xchg
xor
nop
mov
mov
mov
mov
dec
and
cmp
test
shr
pop
and
push
and
add
jnp
scas
cmp
sbb
mov
fs
movs
mov
mov
(bad)
dec
stos
mov
sbb
mov
call
adc
cmp
adc
test
pop
jnp
mov
sbb
add
add
cs
sub
mov
je
adc
dec
je
fldcw
iret
inc
les
lds
inc
sub
jo
subps
mov
mov
and
mov
push
addr16
mov
sbb
pop
test
fisub
pop
mov
adc
aad
adc
sbb
bound
not
lock
xchg
inc
xor
call
pop
jns
loope
cmp
dec
(bad)
fnstsw
out
inc
mov
loopne
sub
pop
mov
cmps
pop
dec
sbb
cmp
add
in
xchg
push
push
je
jg
ins
scas
mov
jae
push
test
test
inc
push
js
adc
add
aam
in
cmp
adc
nop
sub
push
ror
fs
adc
loopne
xor
or
mov
cmc
xor
xchg
test
mov
out
adc
push
jbe
mov
repz
push
mov
mov
push
push
daa
test
les
(bad)
sbb
xor
scas
mov
pop
dec
or
stos
ret
add
ins
test
or
pop
mov
ret
je
(bad)
aam
stos
mov
mov
dec
sysexit
(bad)
mov
mov
adc
sti
xor
push
xor
(bad)
cmp
cmp
scas
in
sub
clc
mov
or
inc
fiadd
sbb
and
mov
das
mov
mov
ds
jae
push
(bad)
sbb
push
mov
sbb
or
in
lahf
inc
mov
test
test
stos
inc
push
and
push
fcomp
pop
mov
adc
lea
or
test
shr
outs
or
sub
push
imul
xchg
mov
aam
inc
inc
lods
movs
or
cmp
dec
xor
adc
mov
loope
leave
ins
in
add
addr16
push
shl
cwde
add
nop
fs
xchg
or
pop
inc
dec
enter
test
inc
dec
adc
push
add
mov
adc
xchg
adc
mov
sub
sbb
jns
jo
or
nop
inc
test
imul
retf
pop
mov
call
jg
je
xchg
pop
sar
push
or
bound
or
or
cli
ss
mov
cwde
and
js
or
xor
adc
(bad)
jmp
add
mov
xor
mov
push
push
sbb
jno
scas
jp
sbb
retf
scas
aas
or
retf
ret
add
out
push
pop
in
add
push
data16
fs
sbb
dec
inc
add
mov
add
add
addr16
pop
push
imul
mov
aam
stos
mov
inc
fs
sub
pop
add
dec
sar
(bad)
call
popa
aad
inc
add
stc
outs
xchg
(bad)
dec
or
adc
mov
test
mov
and
cmps
lods
pushf
test
or
and
(bad)
cs
or
mov
push
xchg
add
cmp
or
push
add
fistp
mov
or
popf
add
les
in
dec
and
jge
add
inc
scas
and
pop
or
and
pop
fistp
ins
xchg
and
fistp
add
push
xor
add
sub
out
mov
or
dec
or
mov
movs
(bad)
fs
mov
mov
mov
push
ret
or
add
lock
sub
dec
inc
adc
or
sbb
pop
mov
mov
cs
jmp
fs
xchg
movs
mov
sbb
or
rol
shr
in
mov
ja
sbb
push
in
pop
push
pop
xor
mul
rcl
sbb
lock
sub
ror
mov
lods
or
and
icebp
or
sidtd
sbb
or
sub
jne
pop
test
cmp
and
or
or
cmps
and
leave
inc
and
je
dec
fcomp
shl
dec
bnd
adc
xor
xchg
fidivr
jns
stos
dec
dec
repz
jmp
add
fcom
sub
jmp
and
rcr
clc
(bad)
jb
and
adc
add
aas
and
popa
stc
mov
das
add
sub
clc
pop
repnz
push
lock
fsub
lock
mov
xor
lea
in
cmp
in
nop
loopne
sub
clc
cmp
call
jno
and
popa
jb
leave
mov
jp
push
clc
dec
mov
lds
ret
inc
sbb
loopne
je
mov
xchg
and
and
adc
mov
pushf
dec
cmp
jbe
mov
add
or
push
xor
mov
repnz
pop
ins
mov
or
add
fs
inc
push
xchg
js
stc
loope
mov
add
fadd
(bad)
dec
inc
inc
xchg
(bad)
aad
(bad)
push
loopne
adc
cmp
add
je
add
shr
je
add
jmp
je
dec
in
mov
pop
dec
test
retf
div
adc
inc
jmp
cmp
inc
pop
add
push
add
por
sbb
fs
adc
les
ret
cmps
loopne
dec
add
hlt
xlat
push
clc
or
xchg
repz
adc
jp
pushf
mov
mov
(bad)
into
inc
(bad)
mov
int
ror
nop
xchg
inc
data16
mov
sub
adc
and
mov
jnp
xor
cmp
xor
sbb
shl
and
ins
sbb
push
or
xor
or
jecxz
jnp
adc
jmp
pop
in
lock
xchg
cdq
add
pop
imul
imul
int
int
jo
arpl
pop
and
sub
repz
pusha
js
movs
aaa
mov
daa
cwde
sbb
sbb
dec
je
cdq
(bad)
rcl
adc
movs
cdq
popf
imul
sub
sub
pop
xchg
dec
dec
(bad)
jmp
or
movs
sbb
sub
sbb
inc
adc
push
pop
ja
add
in
fstp
fst
or
or
aaa
jnp
xchg
(bad)
call
inc
inc
cs
inc
and
int3
push
imul
sbb
mov
xor
sbb
movs
retf
sub
mov
push
fadd
int3
sub
rol
or
xchg
jo
adc
mov
dec
mov
or
adc
loop
adc
nop
add
mov
mov
sub
xor
xor
and
loop
cmp
pop
jo
pushf
mov
nop
inc
test
repz
mov
sub
xor
mov
aaa
or
adc
hlt
out
adc
pop
jmp
or
shl
stos
shl
push
add
and
imul
sub
push
jne
xor
mov
dec
int3
mov
enter
and
call
xlat
aam
not
inc
sub
nop
mov
or
jb
jmp
add
inc
mov
fsubr
ror
inc
clc
nop
(bad)
and
xchg
ror
fwait
dec
sub
hlt
sub
rol
je
cmp
jg
aaa
ret
scas
jmp
fistp
adc
lock
or
mov
test
or
push
cmp
jne
popa
leave
fdiv
fsubr
or
outs
lods
push
sbb
pop
popa
adc
jbe
fmul
push
jmp
jno
adc
pop
or
retf
and
sbb
cmp
cmp
or
add
xchg
dec
in
push
pop
aad
cld
packsswb
xchg
sub
ins
mov
inc
fdiv
sub
loopne
div
push
ror
outs
and
xchg
ror
inc
xor
fdiv
cmp
repz
jge
lea
iret
out
and
inc
aad
xor
gs
and
das
pop
sti
cmp
mov
jns
add
dec
adc
push
add
test
add
adc
imul
xor
sbb
iret
adc
daa
call
dec
or
push
jmp
dec
je
add
pop
adc
(bad)
or
sbb
jbe
ret
sub
repnz
dec
jne
cmps
xor
sar
(bad)
and
jb
je
das
jmp
popa
adc
outs
pop
cmp
jne
mov
push
jno
push
push
jmp
or
lds
aad
push
xor
in
pop
sbb
xor
test
cwde
neg
adc
adc
ins
pop
or
sbb
test
sbb
sbb
pop
and
push
sbb
shl
icebp
mov
stos
lahf
jmp
pop
cmp
inc
scas
shl
mov
inc
add
or
xchg
cwde
data16
cld
pop
fadd
and
rol
sub
xor
out
arpl
sub
je
dec
shr
cmps
shl
ds
fistp
sub
mov
push
jmp
fidiv
scas
outs
push
das
add
or
cli
add
jmp
pop
push
pop
mov
mov
cwde
push
je
dec
je
dec
adc
adc
(bad)
fild
or
adc
sub
clc
into
not
inc
sbb
push
(bad)
and
pop
cwde
add
sbb
int3
jbe
cwde
xchg
or
jle
cmp
(bad)
xchg
jmp
mov
(bad)
outs
and
or
xor
cmp
iret
jnp
dec
loop
sbb
call
or
cld
xor
cmp
mov
or
pop
fisttp
shl
cmp
push
or
es
mov
or
xor
sbb
jbe
pusha
popa
jnp
outs
pop
es
sub
ja
outs
push
daa
jbe
aam
shl
fcomp
call
pop
push
fild
ins
pusha
das
mov
cmp
and
repnz
sbb
push
xor
mov
and
rcl
clc
mov
xchg
mov
mov
and
pop
test
and
test
inc
in
and
sub
or
out
pop
in
add
or
sbb
xchg
es
aaa
push
add
pop
mov
add
xor
add
lods
and
pop
dec
and
leave
or
add
pop
out
xor
daa
stc
mov
add
aam
add
cmp
imul
jo
fist
dec
pushf
jmp
xor
rol
sbb
daa
ret
enter
and
jmp
loopne
cmp
pop
mov
into
xchg
popf
inc
dec
jmp
jmp
and
adc
inc
aas
push
push
mov
xchg
icebp
cmp
adc
sub
test
js
adc
jo
cdq
or
mov
xor
nop
retf
loop
je
add
mov
push
inc
mov
test
adc
dec
in
shl
pop
sub
dec
fdivp
je
sub
aaa
(bad)
mov
dec
gs
add
clc
nop
mov
xchg
xor
mov
push
(bad)
std
cmp
xor
add
xor
sbb
sub
adc
or
pusha
dec
add
ret
les
pusha
daa
repz
sbb
xchg
test
push
repnz
mov
clc
mov
xor
lods
aad
xor
stc
or
in
or
mov
in
scas
js
test
cmp
je
ret
push
dec
clc
shl
xor
jp
jo
and
jae
sbb
dec
cmp
and
mov
mov
adc
scas
cmp
dec
mov
test
test
xchg
cmps
cmp
bound
pop
in
es
adc
jmp
or
mov
xchg
dec
xchg
sbb
jns
adc
xor
mov
or
es
add
fimul
cmp
jb
mov
mov
xor
or
outs
out
dec
add
xchg
dec
add
iret
mov
xlat
pop
or
shr
loope
div
sub
sub
out
fnsave
jb
push
data16
sahf
mov
and
mov
out
xor
gs
scas
movs
push
inc
out
jbe
out
jnp
aam
dec
fwait
push
ss
push
test
xor
mov
das
jecxz
imul
inc
es
mov
aaa
push
es
imul
bound
push
imul
ja
pusha
cs
popa
scas
arpl
push
ror
iret
add
and
push
in
popa
pop
inc
add
inc
ret
xlat
das
push
imul
jl
pop
ins
cs
add
dec
or
xor
xor
mov
mov
cmps
scas
mov
xlat
pushf
inc
adc
aad
push
ins
push
scas
xchg
and
in
dec
jl
add
add
(bad)
sub
push
lea
inc
pop
and
icebp
sub
enter
(bad)
aad
aam
sbb
mov
popf
xchg
cli
das
leave
call
int
or
sub
repnz
inc
bound
inc
cmp
lea
mov
out
mov
aas
inc
es
scas
inc
ja
cs
sahf
push
mov
aaa
jmp
call
sub
xor
sub
stos
imul
enter
inc
jecxz
pop
add
call
mov
or
jmp
cmp
(bad)
pop
or
and
rol
or
add
sar
and
fst
push
dec
dec
pop
xchg
or
xchg
call
retw
pop
xor
movs
mov
add
enter
add
(bad)
ret
aam
fstp
inc
je
xchg
cmc
scas
inc
inc
shr
in
lods
xor
mov
xor
in
stos
dec
inc
inc
sahf
imul
pop
dec
add
mov
sbb
push
and
adc
sahf
scas
imul
sub
sub
sbb
rol
nop
fiadd
pop
or
jbe
cmps
jmp
fsub
xchg
pop
out
adc
xor
repnz
mov
jmp
mov
jne
adc
jge
inc
nop
retf
sbb
outs
sbb
leave
xor
fisubr
or
or
mov
test
push
adc
dec
add
or
fcomp
adc
or
test
test
clc
jo
(bad)
ds
pop
and
sbb
cli
sbb
pushf
pop
aas
(bad)
inc
inc
test
adc
dec
jo
pushf
inc
inc
std
or
mov
mov
mov
adc
sub
inc
mov
mov
xchg
lea
dec
inc
mov
pop
ja
test
ret
jo
aad
in
sub
push
test
jecxz
jno
pop
mov
or
push
int3
ja
and
out
lods
faddp
enter
dec
jo
push
xor
ror
bound
sbb
pop
loope
mov
push
push
dec
xor
xchg
pop
inc
fcomp
add
mov
sbb
ret
xchg
cmp
mov
mov
lock
pop
ret
pop
test
add
ds
jo
ds
mov
push
pop
cmp
mov
jle
mov
jae
add
sub
xor
cmp
add
push
mov
ret
pop
jl
and
push
adc
mov
cmps
dec
jl
(bad)
stos
enter
jl
push
lea
(bad)
adc
add
mov
or
add
inc
pop
mov
inc
sbb
jb
mov
fild
adc
cmp
jl
inc
sub
sub
dec
in
fst
in
icebp
cmp
xor
dec
icebp
test
dec
push
stos
inc
scas
push
inc
cld
call
retf
inc
jle
push
dec
jns
push
pavgw
fs
or
aas
dec
sub
cdq
fdivr
call
mov
out
loopne
fbld
scas
cmp
xor
movs
sbb
btc
jge
mov
lar
sub
inc
dec
push
es
call
enter
or
cmp
mov
cmp
cmovle
add
lsl
pop
or
sub
mov
test
jmp
and
clc
push
(bad)
jl
add
sti
jbe
lock
push
lea
mov
pusha
nop
ret
dec
sub
and
mov
sub
ret
iret
jl
mov
cli
cdq
dec
sbb
push
std
test
mov
rol
pop
mov
adc
arpl
adc
pushf
adc
cmp
test
pop
sti
pop
imul
es
(bad)
dec
xor
outs
dec
mov
mov
xor
or
div
xchg
adc
dec
das
or
push
dec
pop
push
and
xchg
inc
lock
lds
sar
movs
jb
push
inc
inc
and
ja
inc
pop
js
cwde
inc
push
(bad)
gs
dec
test
mov
mov
mov
mov
inc
mov
push
push
or
cmp
loop
add
jmp
int
xchg
stos
xchg
dec
push
mov
dec
(bad)
mov
pop
or
je
pcmpeqb
adc
adc
jecxz
cmp
ret
jle
xchg
mov
xchg
loope
movs
movs
pop
xor
pop
mov
dec
movs
add
dec
clc
xor
push
jge
ins
add
pusha
js
jb
icebp
or
ds
adc
jne
mov
jne
jne
hlt
add
nop
dec
jle
push
sbb
lods
hlt
dec
sub
dec
aam
xchg
cld
sbb
(bad)
or
ret
loopne
sub
stos
fdivr
loopne
ret
mov
je
dec
popa
(bad)
mov
lods
mov
cld
push
xchg
xor
inc
cmps
cmps
add
test
scas
stos
mov
lss
inc
aad
in
(bad)
jo
call
xor
jae
push
push
adc
sar
ins
das
mov
ds
mov
dec
ds
rcr
stc
or
sahf
out
pop
es
call
jnp
sahf
(bad)
cmps
mov
stc
add
cld
add
imul
add
cmp
ss
sbb
jns
(bad)
and
push
dec
mov
mov
xor
cmp
mov
cld
enter
fld
and
push
mov
dec
fild
cmp
cdq
pusha
adc
jmp
js
xchg
and
fadd
sub
sbb
sahf
lods
jmp
arpl
sbb
xor
pop
lahf
leave
cwde
int
xchg
push
fild
inc
pop
inc
jo
ss
add
sub
les
push
jmp
rcr
adc
jno
adc
cmp
das
loope
int3
add
xchg
imul
adc
lock
mov
sbb
cmp
mov
fimul
test
push
ds
or
push
rcr
push
adc
mov
xor
dec
pop
add
adc
dec
mov
add
push
mov
pop
dec
inc
das
cmp
xor
cmp
adc
or
or
and
xchg
sub
cwde
dec
add
add
xor
(bad)
nop
mov
pop
aam
mov
shr
rol
push
xor
je
rcr
adc
test
jne
mov
push
sbb
scas
out
rcl
pop
clc
hlt
out
in
clc
lock
adc
lods
pop
adc
or
jne
pop
lock
loopne
xor
pop
in
lock
fdivr
pop
pop
test
das
or
or
fwait
and
in
pop
into
dec
fidivr
iret
repz
std
or
pop
lahf
out
dec
pop
dec
or
or
in
repnz
and
xchg
xchg
add
loopne
or
adc
push
fcmovnb
add
cmp
leave
sar
xor
sbb
pop
inc
or
aas
inc
adc
sub
inc
xchg
sbb
push
fnop
sub
jo
les
adc
mov
add
add
gs
mov
pop
rol
pop
ror
inc
mov
xor
push
add
jmp
sbb
fiadd
mov
or
lahf
mov
mov
scas
push
push
enter
adc
fsubr
aaa
and
mov
push
outs
outs
sar
xor
lahf
test
xor
xor
adc
test
pop
mov
or
js
cld
sti
jae
cwde
push
inc
dec
cmp
jl
sbb
push
jmp
push
js
xchg
cli
ds
aam
push
add
dec
popf
pop
jmp
bts
push
inc
enter
imul
jb
push
adc
or
lock
into
mov
push
ins
ror
in
call
add
pop
sbb
mov
inc
add
pop
mov
cli
push
call
or
push
mov
out
push
sbb
cmp
add
pop
pop
fiadd
sbb
call
add
lods
hlt
cli
adc
xor
pop
addr16
inc
jl
imul
mov
jns
push
add
add
adc
sbb
and
sti
movs
or
fdivr
and
jg
les
movs
jno
dec
test
aaa
or
aaa
dec
inc
aad
dec
mov
pop
or
or
jns
mov
add
addr16
cmp
mov
addr16
mov
mov
adc
pop
iret
enter
pop
cs
xor
push
xchg
jl
or
pop
gs
dec
imul
xor
dec
cmps
repz
mov
xchg
mov
and
xor
jg
jbe
cmp
mov
dec
xchg
add
or
xor
cli
push
rcl
rol
aaa
in
dec
mov
hlt
mov
movs
gs
push
xor
push
mov
je
stos
dec
cmp
fiadd
das
fs
movs
icebp
jmp
(bad)
retf
add
movs
aaa
xchg
pop
dec
jl
mov
js
jmp
xchg
pop
jmp
add
or
mov
fmul
xchg
fucomip
push
enter
pop
or
arpl
adc
adc
lock
jo
sahf
es
push
and
adc
or
and
adc
shl
cmps
rcl
jne
inc
aas
sbb
mov
sbb
fisttp
shl
xchg
dec
inc
popa
pushf
and
enter
or
rcr
add
cwde
sub
retf
daa
fwait
popa
or
or
adc
push
ret
push
or
adc
cdq
pusha
test
in
data16
inc
ins
outs
adc
push
ins
add
mov
je
test
in
mov
push
adc
xchg
cs
sbb
mov
imul
ins
adc
imul
ins
in
push
or
ins
data16
loop
push
test
sub
add
and
js
push
inc
out
push
jne
ja
cmp
push
leave
das
or
dec
mov
mov
mov
cmp
add
and
sbb
loope
xchg
fnstsw
movs
scas
inc
push
and
mov
das
sbb
popf
push
xchg
hlt
inc
pusha
sbb
sbb
xor
sub
or
inc
nop
dec
adc
aas
mov
sbb
mov
and
shl
dec
mov
sbb
push
jbe
mov
jo
jbe
pop
aad
inc
sti
mov
je
iret
pop
sub
pop
pop
fs
inc
xlat
mov
pop
mov
and
and
pop
rcl
adc
xor
sub
xchg
lods
add
dec
pop
lea
mov
nop
push
dec
jb
and
push
inc
popf
push
adc
pop
mov
xchg
mov
adc
call
sbb
pavgb
push
nop
lods
pop
sbb
mov
gs
mov
inc
sub
mov
and
push
ins
clc
sar
aam
jae
enter
sbb
cmp
or
xchg
popa
mov
pop
inc
or
popa
xor
cmp
dec
cld
hlt
shl
pop
dec
outs
add
imul
mov
and
inc
or
(bad)
cdq
jge
in
xchg
dec
pop
inc
or
cdq
pop
pop
mov
mov
repz
pop
xchg
pop
daa
imul
arpl
shl
mov
loope
cmc
cld
sub
add
mov
mov
inc
mov
pop
mov
cmp
cmps
inc
cmp
in
xchg
mov
inc
or
cmp
cld
jne
lahf
inc
mov
int
mov
rcr
xor
rcr
hlt
fstp
dec
jns
gs
aad
xor
cwde
sahf
adc
movs
nop
lock
shl
call
imul
bound
jmp
mov
pop
adc
jb
shl
pushf
daa
jne
sbb
cmp
loopne
jmp
inc
fadd
(bad)
retf
dec
and
inc
loopne
push
mov
xor
rcr
pop
fsubr
sub
bound
cmp
les
add
jns
or
xchg
int3
sbb
adc
and
jg
scas
dec
loop
jecxz
push
adc
adc
and
dec
adc
daa
mov
mov
xor
xor
pop
lahf
(bad)
lock
fnstenv
fstp
inc
cmp
imul
xchg
mov
je
or
mov
dec
push
mov
push
xchg
add
pop
imul
or
jne
sub
add
test
push
(bad)
mov
jmp
cmp
pop
xchg
clc
sub
add
(bad)
das
xor
(bad)
daa
(bad)
or
jo
aad
pop
add
pop
lds
and
lock
fsubp
inc
or
rcr
and
imul
dec
push
xchg
gs
sub
aaa
sub
popa
daa
sahf
cs
pop
pushf
cmps
(bad)
in
add
stc
rcl
dec
jo
add
mov
mov
sbb
pop
xchg
push
push
cmp
and
movs
inc
not
fdivr
arpl
mov
es
jbe
movs
sbb
shr
mov
adc
pop
loopne
or
cmp
xchg
add
retf
shr
test
adc
add
aaa
sub
ins
inc
sbb
lock
dec
fidivr
mov
bnd
loopne
push
jno
sbb
mov
aaa
popa
add
jb
(bad)
pushf
hlt
call
xchg
mov
dec
in
fs
and
fisub
clc
addr16
je
push
or
xor
add
mov
popa
loopne
jmp
psubsb
jecxz
ret
cmp
push
add
int3
inc
lock
in
jns
popa
add
mov
add
or
inc
out
add
push
je
adc
push
or
aad
or
repnz
sti
loopne
sbb
jmp
daa
cld
mov
cmp
dec
push
or
xchg
ror
sbb
xchg
inc
push
adc
jmp
pop
sbb
stos
mov
mov
push
inc
pop
pop
and
(bad)
pop
(bad)
pop
adc
sub
inc
pop
push
add
pop
xor
(bad)
ret
mov
aas
pusha
xor
dec
(bad)
std
es
ret
sub
adc
cmp
frstor
cld
into
add
mov
rcl
dec
rol
aas
xchg
and
mov
js
mov
test
std
mov
stos
das
mov
lea
in
push
push
add
rcr
xchg
xchg
push
retf
mov
outs
ret
shr
les
cmps
js
cs
mov
lea
es
jl
jb
push
aas
sub
not
cli
and
adc
sbb
movups
inc
neg
or
jne
dec
jne
jmp
mov
jbe
mov
mov
add
add
clc
jle
mov
mov
mov
mov
or
gs
cmp
into
push
pop
stos
(bad)
or
lea
shl
mov
rcr
loop
outs
movs
xchg
lock
or
dec
hlt
lock
lock
in
sub
cmp
retf
(bad)
jmp
outs
jmp
loopne
mov
push
out
inc
dec
retf
gs
push
cmp
(bad)
(bad)
xlat
dec
pop
sub
daa
icebp
mov
or
fmul
cmc
push
bound
je
add
scas
pop
jl
or
inc
push
in
out
mov
pop
sbb
(bad)
push
test
dec
xor
(bad)
adc
fstp
fistp
retf
je
mov
dec
push
sbb
jne
(bad)
pop
mov
jmp
movs
and
cmps
sbb
loop
jno
mov
jmp
xor
adc
lds
dec
jne
jmp
mov
inc
loop
ror
pop
je
jb
nop
rol
ja
lea
rol
ret
lea
sub
mov
and
dec
repz
push
or
stos
mov
push
dec
inc
inc
popa
aaa
call
fwait
xor
mov
cmp
mov
bndstx
inc
pop
test
bound
dec
push
cmp
div
ds
jbe
fisttp
push
std
and
or
add
out
mov
add
push
pop
jae
inc
jmp
xchg
outs
(bad)
jg
adc
sar
mov
mov
mov
xor
inc
dec
popa
sbb
jbe
lock
cmp
sahf
std
pop
shl
cld
mov
mov
jmp
push
push
sbb
sbb
mov
add
push
je
inc
cmp
jbe
push
sub
push
clc
inc
jmp
add
ss
inc
inc
call
xor
pop
push
mov
pusha
call
and
pop
add
mov
jl
imul
jns
inc
push
mov
das
inc
xor
call
clc
ficom
fimul
inc
or
and
jmp
jl
bt
jae
mov
fimul
push
add
sub
sub
jns
movs
sub
cmps
in
xor
ins
dec
push
xchg
test
shr
movsx
push
sub
dec
mov
pop
cmp
or
icebp
push
cwde
pop
dec
or
sar
add
push
jp
dec
pop
inc
jecxz
ja
push
adc
call
ret
cmp
or
mov
adc
mov
mov
cmp
je
movs
mov
jo
pop
lar
arpl
or
jmp
jl
sbb
or
sbb
mov
mov
es
push
add
add
adc
fwait
jo
pop
in
dec
dec
xor
push
pop
sub
add
sub
sbb
out
in
fisttp
add
data16
mov
mov
cmp
ja
jb
add
retf
repz
add
call
(bad)
out
mov
mov
or
or
push
fcom
dec
sar
in
push
add
(bad)
pop
loop
cdq
adc
push
out
(bad)
mov
jo
mov
mov
hlt
push
add
push
pop
push
lds
arpl
and
and
scas
lods
(bad)
iret
adc
sbb
aaa
adc
jmp
pop
es
inc
aaa
lods
push
inc
inc
xchg
jmp
mov
cs
stos
pop
xlat
inc
push
pusha
mov
push
sub
test
pop
inc
dec
pop
mov
pop
hlt
(bad)
xor
and
xchg
stos
pop
les
call
xchg
fimul
sub
xlat
imul
mov
pop
xchg
mov
mov
dec
(bad)
and
push
daa
xor
adc
(bad)
div
push
mov
mov
sub
cwde
xor
mov
pop
movs
add
(bad)
jae
push
ins
inc
test
addr16
add
push
mov
(bad)
or
inc
outs
sbb
pop
call
jo
inc
addr16
and
mov
sub
pop
pop
ror
add
pop
push
jmp
add
sub
aam
mov
adc
je
mov
xor
cmp
je
stos
add
dec
repz
neg
in
je
mov
pop
or
jnp
cmp
mov
test
add
rcl
outs
push
or
jnp
mov
jmp
lea
jl
and
cmp
pop
pop
enter
adc
or
mov
jbe
lock
bound
push
stos
ficom
push
repnz
stos
ins
fwait
push
movs
inc
cmps
out
or
in
pop
jo
mov
fld
cmova
inc
test
mul
sbb
jno
jns
ror
mov
mov
adc
and
repnz
xor
stc
adc
push
jle
cmp
jb
sbb
add
call
push
ret
call
or
xor
daa
mov
lods
cmp
sbb
dec
jb
mov
stos
mov
rep
dec
cs
inc
neg
push
rol
add
inc
mov
ss
aam
arpl
pop
mul
fmul
sbb
adc
adc
cmc
mov
fsubr
rcl
(bad)
(bad)
jle
dec
shl
clc
inc
jge
sbb
sbb
outs
test
addr16
mov
daa
jbe
sbb
fsubr
mov
jne
cmps
sub
and
fwait
(bad)
lods
add
jns
jo
or
in
jo
fcom
nop
mov
xchg
dec
loopne
fs
lods
imul
cmp
pop
(bad)
add
xor
adc
(bad)
adc
mov
or
push
stc
fldenv
test
bound
call
sbb
jmp
adc
retf
je
adc
pop
jmp
(bad)
shr
pop
inc
or
stos
push
push
mov
ins
bound
or
jb
sub
push
sbb
sahf
jo
repnz
inc
in
or
in
add
lock
pop
(bad)
fsubr
inc
out
sub
sbb
mov
(bad)
in
cmp
ja
add
adc
cmp
adc
xchg
dec
mov
test
daa
cmp
(bad)
jmp
aam
clc
xorps
and
dec
(bad)
pushf
cmp
xchg
nop
(bad)
jge
sbb
or
or
push
ds
xor
jb
xchg
je
jns
and
mov
mov
retf
test
fild
nop
sub
push
in
in
inc
sub
int
in
icebp
retf
mov
cmp
add
push
test
xor
mov
mov
fcom
rcl
fadd
idiv
sub
ins
push
jns
test
into
or
mov
push
popa
push
mov
movs
jmp
pop
jb
pop
xchg
je
add
dec
jmp
dec
jne
les
adc
sti
push
loopne
rep
cwde
lea
movs
sar
iret
sbb
call
sub
mov
cmp
lea
jmp
mov
test
push
jne
pop
daa
jne
inc
in
lahf
and
or
mov
jno
in
add
ja
cdq
out
cmp
repz
lods
rcl
loope
xadd
js
jns
ins
jmp
daa
in
pop
pop
inc
cs
push
jge
inc
mov
sar
sub
mov
jns
cmp
xor
push
push
js
or
data16
inc
or
sbb
and
xchg
add
jnp
out
inc
mov
jae
test
mov
in
push
mov
or
add
mov
ins
xor
pop
mov
in
and
icebp
lods
aam
cmp
adc
push
mov
fmul
jle
pop
sub
xchg
adc
leave
out
and
jb
lea
callw
inc
mov
jle
ja
ja
cmp
js
out
push
or
movs
and
(bad)
mov
pushf
and
xchg
aam
push
push
sbb
shr
inc
movs
jge
in
push
add
dec
out
je
add
adc
or
sub
daa
add
popf
cmovo
jl
add
push
mov
ficomp
movs
inc
rcl
sbb
add
ret
sub
pop
jns
cmp
loope
inc
dec
das
outs
jns
xchg
inc
mov
or
popa
sbb
and
mov
sbb
and
push
test
popf
js
mov
test
jp
or
and
out
(bad)
jp
mov
mov
sbb
ds
add
mov
xchg
jae
add
or
add
mov
mov
push
and
pusha
xor
xchg
xlat
cmp
adc
ret
sbb
xlat
jle
sbb
push
mov
inc
outs
jne
mov
mov
and
jb
mov
mov
sar
adc
test
xlat
test
loope
inc
cwde
test
mov
mov
jle
add
xchg
sbb
or
xchg
inc
mov
mov
xor
dec
xor
push
ins
jecxz
jg
ficomp
das
cs
inc
dec
rcr
inc
jg
jg
(bad)
leave
adc
cmp
je
shr
in
(bad)
rcl
or
pop
cmp
daa
sbb
add
fisubr
xchg
sub
inc
sti
add
ret
es
(bad)
mov
dec
adc
adc
or
jmp
pop
add
jle
fild
sahf
clc
outs
add
ret
call
or
pop
push
dec
adc
mov
pop
or
pop
neg
cmp
out
pop
fist
push
push
sub
cmp
xchg
sbb
leave
sbb
ja
jb
add
std
into
dec
(bad)
mov
ja
pop
vpcmpeqb
(bad)
call
pop
xchg
bound
pop
push
mul
adc
push
mov
and
add
shl
xor
call
dec
and
dec
movs
and
push
or
and
aaa
dec
pop
dec
test
push
or
mov
pusha
dec
pop
daa
push
add
adc
adc
add
mov
dec
push
imul
sbb
pop
sbb
jne
mov
xchg
add
sub
(bad)
xor
xchg
mov
(bad)
and
mov
(bad)
jnp
rcr
xor
mov
dec
enter
pop
dec
repnz
inc
inc
lds
push
test
or
cmc
test
push
test
sbb
jno
pushf
mov
dec
mov
and
or
pop
push
pop
movs
mov
out
dec
xchg
inc
jns
popa
ins
imul
ja
in
jno
cmps
test
xchg
test
xchg
xchg
inc
mov
repnz
pop
pop
cs
test
add
add
pop
jb
inc
pop
aad
inc
stos
test
or
outs
pop
mov
mov
mov
ret
or
or
hlt
add
add
ds
cmp
jp
jmp
jmp
jo
and
mov
loop
xor
mov
arpl
cmp
pop
test
call
jmp
xor
adc
and
and
mov
push
xor
mov
inc
sub
pop
jl
sbb
inc
in
add
jmp
dec
into
pop
sbb
rcr
add
add
imul
vzeroupper
and
ret
jb
mov
test
mov
repz
cmp
jge
push
sbb
inc
push
push
mov
pop
fld
and
pusha
xchg
cld
push
or
sub
jne
ror
in
imul
or
or
rol
(bad)
or
pop
inc
ret
xor
das
call
xchg
sbb
shl
ss
and
daa
inc
push
nop
retf
or
and
in
cmp
or
or
cmp
or
cmp
add
adc
and
push
aaa
data16
loopne
in
inc
or
push
adc
and
push
push
dec
push
test
add
xor
test
sbb
pop
adc
repnz
or
push
xor
gs
sbb
cmp
pop
shr
jecxz
xor
jae
jbe
cmp
adc
sti
dec
in
je
adc
inc
sbb
nop
out
mov
xchg
or
mov
dec
xchg
test
sbb
les
dec
jne
ror
dec
nop
sbb
enter
fsubr
cmp
cmps
add
inc
lds
adc
rcr
inc
imul
xchg
iret
or
xchg
sbb
cmp
sub
dec
outs
mov
loope
add
rol
push
sub
test
sbb
test
add
or
jle
sahf
jo
adc
jecxz
sbb
mov
jl
data16
es
or
xchg
(bad)
fdiv
push
push
je
or
mov
dec
fdiv
or
jae
ja
fdiv
jae
adc
push
loopne
stc
push
outs
jne
push
add
jo
jecxz
mov
lds
jmp
inc
adc
stos
mov
add
lds
pop
mov
xor
test
sbb
fmul
and
jnp
pop
imul
or
push
dec
jne
faddp
sub
lock
ret
iret
xor
push
inc
jbe
and
pop
mov
or
push
shl
fcomp
sub
sbb
int
inc
and
mov
outs
pop
nop
setbe
stos
and
addr16
cmp
pop
cmp
or
xchg
and
xchg
jb
enter
xchg
cmp
cmp
xchg
inc
xor
xchg
adc
ss
push
inc
dec
and
fcom
push
test
aas
adc
add
sub
jg
int
popa
shl
movs
or
xchg
adc
xchg
pop
xchg
inc
xchg
pop
push
into
enter
or
or
les
clc
jns
dec
adc
dec
add
xor
ss
out
pop
or
add
in
pusha
pop
mov
movs
push
xchg
xchg
xchg
or
xchg
xchg
dec
xor
add
dec
test
sub
imul
adc
xchg
push
xchg
(bad)
jb
ds
dec
xchg
or
jge
push
mov
inc
and
sbb
dec
xchg
dec
pushf
pushf
pop
dec
fdivr
loopne
xor
xchg
lahf
push
rol
pop
and
adc
dec
movs
cwde
mov
add
xchg
cwde
mov
push
add
add
pop
test
push
mov
test
pop
cmp
ds
push
or
add
push
xor
mov
inc
add
push
and
imul
lea
imul
pop
mov
call
jle
xchg
adc
jge
pop
and
test
fwait
dec
pop
xor
ss
dec
sbb
dec
jne
cmp
arpl
push
mov
jb
adc
loopne
mov
push
add
inc
retf
popf
and
outs
pop
iret
pop
test
shr
or
scas
mov
mov
in
sbb
push
cdq
repnz
jae
pop
sub
sbb
cmp
mov
inc
popf
ins
add
adc
in
inc
cmp
push
xchg
popf
scas
inc
bound
scas
inc
jne
jmp
nop
or
outs
daa
sbb
cld
adc
inc
xor
out
jo
or
jnp
loopne
in
jle
adc
ja
jbe
(bad)
popa
stc
sahf
gs
iret
sub
outs
adc
fld
inc
addr16
xor
pop
push
sbb
sbb
jnp
xor
sbb
jmp
lock
jl
unpcklps
outs
shr
add
cwde
add
iret
pop
add
adc
jnp
push
pop
nop
add
or
jb
pop
outs
jb
nop
pop
nop
mov
xchg
cmp
enter
lahf
aaa
xor
daa
jg
popf
push
adc
dec
sbb
xchg
push
inc
pop
fs
add
xchg
sub
mov
out
inc
or
dec
andps
mov
cmp
mov
pop
outs
imul
adc
(bad)
jno
xchg
adc
or
add
(bad)
xlat
add
mov
cmp
and
dec
pop
aaa
jno
pop
inc
inc
test
add
sbb
clc
jo
push
and
and
add
add
adc
cmp
je
xchg
cmp
frstor
pop
mov
jne
sbb
out
loope
dec
push
lock
call
adc
add
shr
push
fs
jb
(bad)
and
popf
inc
mov
and
sub
rol
pop
cmps
mov
stc
pusha
add
sbb
outs
loope
icebp
fcmovnu
xchg
mov
jl
jmp
mov
pop
and
daa
iret
jnp
ret
mov
xchg
xchg
xchg
xchg
movs
inc
(bad)
mov
leave
enter
movs
bound
leave
adc
in
mov
and
iret
and
sbb
xchg
ja
jno
jmp
shl
movs
rol
test
gs
(bad)
leave
inc
jecxz
sbb
rol
out
and
in
adc
test
cmp
inc
mov
or
add
imul
mov
mov
and
aam
dec
add
or
fild
cmp
xor
add
(bad)
fadd
call
mov
xor
dec
ret
xlat
rol
js
stc
out
fist
imul
and
add
(bad)
and
jae
dec
sub
sub
movs
xor
xchg
mov
movs
pop
push
or
fisub
nop
xchg
adc
cdq
test
cmp
aad
mov
jne
dec
popa
add
mov
sub
inc
fild
push
shl
cmp
pushf
or
addr16
sbb
push
push
repnz
jno
ret
xchg
pop
dec
sahf
data16
aam
stos
mov
xchg
add
sar
jmp
out
mov
inc
xchg
cmp
dec
js
leave
and
adc
or
cmp
push
add
or
ins
sbb
repnz
mov
sahf
inc
xor
inc
or
xor
outs
and
add
add
add
push
jne
ror
or
pop
adc
inc
test
sub
add
add
test
mov
sub
jge
pop
add
push
and
inc
pop
iret
jo
adc
pop
dec
xchg
dec
push
add
hlt
ret
jbe
add
test
test
nop
nop
inc
xor
cmps
and
retf
es
cmp
js
xor
inc
and
stc
and
test
xchg
fxch
aam
add
xor
xchg
xchg
xchg
cmps
xor
mov
out
xor
jns
xchg
cld
stos
inc
daa
and
cld
stos
or
cmp
jl
add
inc
jb
jge
jl
ret
xchg
ret
repz
fmul
xor
fimul
cmp
add
into
ins
outs
add
fcom
push
outs
ins
push
stos
clc
xor
mov
adc
xor
xchg
outs
sub
pop
outs
mov
xchg
mov
dec
call
cmp
jmp
enter
stos
cmps
add
dec
mov
jb
jle
cmp
inc
js
sub
jo
mov
mov
gs
dec
xchg
ss
test
lods
(bad)
mov
lods
inc
daa
push
rol
in
pop
ror
imul
lods
mov
pushf
jmp
lods
sbb
repnz
mov
jge
cmp
imul
in
nop
or
add
jge
ror
rol
sbb
lds
inc
add
lahf
pop
jne
jo
pop
jno
sub
dec
and
or
es
enter
psrad
in
and
mov
jb
jae
outs
xor
in
jbe
(bad)
pushf
outs
or
push
(bad)
(bad)
outs
xchg
xchg
fld
lahf
xchg
push
jb
add
lock
das
xor
scas
sar
repz
dec
lods
lods
mov
(bad)
iret
repz
fucom
in
out
ds
cmc
std
add
loope
sahf
sbb
add
push
ss
pusha
mov
cmp
mov
bound
scas
mov
into
push
in
mov
pop
scas
sti
push
sbb
inc
pop
ss
cld
jae
aam
bound
or
retf
pop
call
dec
xor
push
mov
cmpxchg
pop
xchg
xchg
xchg
xchg
mov
test
leave
leave
leave
enter
jae
out
in
repnz
mov
imul
push
mov
add
add
aad
fisttp
cld
jge
cld
cli
inc
mov
mov
and
adc
inc
mov
or
and
push
ins
jle
inc
lock
adc
popa
xchg
rcl
inc
jne
jmp
pop
jns
jmp
arpl
push
and
xlat
(bad)
enter
sub
daa
lods
and
jne
and
push
je
pop
cmp
and
pop
test
mov
adc
inc
out
sub
mov
ds
add
sbb
ret
sbb
sbb
mov
mov
clc
or
in
add
test
dec
mov
inc
add
inc
dec
pop
out
cmp
lock
inc
leave
sub
push
enter
add
hlt
cmp
inc
xlat
pop
jecxz
inc
pop
sub
pop
inc
sub
mov
and
pushf
jg
add
xor
xor
cmp
aam
fidivr
inc
daa
(bad)
das
and
xchg
jl
and
adc
jle
fistp
test
cmp
mov
ja
add
push
mov
push
add
pop
push
daa
mov
out
lea
mov
dec
test
mov
dec
dec
shl
js
xor
dec
add
pop
and
add
mov
inc
(bad)
jmp
repz
xor
mov
mov
test
mov
or
add
pop
sbb
jecxz
test
jo
int
ins
icebp
mov
mov
mov
mov
jo
mov
xchg
adc
jno
enter
lock
cmp
pop
loopne
mov
dec
push
push
jp
aas
ins
cmp
xchg
or
and
call
xchg
fiadd
mov
leave
dec
enter
dec
add
fs
inc
jmp
or
xchg
and
pop
daa
and
mov
mov
adc
aas
pop
dec
(bad)
rol
sub
push
mov
leave
fiadd
pusha
or
out
jge
and
aam
aad
jecxz
in
jl
push
cmp
mov
or
mov
in
dec
xlat
push
jo
push
mov
push
sub
push
push
push
je
push
cmovo
xchg
jmp
cmovbe
rol
add
sub
(bad)
cmp
inc
sbb
dec
dec
add
popf
int
jne
jns
add
adc
or
pop
xor
in
adc
lds
inc
pop
lods
aas
cwde
pop
aaa
outs
xchg
pop
jo
mov
dec
adc
mov
inc
jecxz
cmps
and
inc
daa
(bad)
(bad)
rcr
das
pop
mov
sub
and
dec
push
into
add
test
or
ds
psubusb
addr16
mov
repnz
mov
push
push
loop
add
retf
xchg
adc
mov
in
inc
repz
inc
pop
push
add
bound
jmp
lahf
pop
test
lods
pop
test
ret
inc
inc
ror
fidiv
pop
cdq
cmps
sub
movs
push
mov
outs
and
adc
mov
(bad)
mov
and
push
dec
cmps
cmps
and
push
cmp
sti
push
inc
mov
je
fsub
sbb
or
mov
inc
aas
inc
inc
popf
push
out
inc
push
cmp
and
fimul
add
or
imul
ror
push
xchg
mov
out
push
cmp
jge
mov
pop
and
or
add
pop
leave
adc
jne
inc
enter
mov
mov
xlat
pop
pop
and
add
dec
mov
xor
mov
push
pop
(bad)
(bad)
sub
sbb
add
sub
adc
fwait
mov
mov
aas
or
iret
xchg
shr
lock
mov
mov
sbb
xchg
and
mov
daa
inc
mov
fwait
mov
add
xlat
(bad)
mov
mov
push
mov
adc
cmp
add
mov
mov
inc
xor
nop
cmp
and
mov
or
ja
push
cwde
mov
cmp
cwde
hlt
adc
ficom
xor
push
sub
test
pop
rol
sbb
and
loop
pop
mov
pop
xchg
jl
out
push
(bad)
enter
lea
mov
xor
in
aam
inc
popa
sbb
or
lahf
and
fwait
push
sub
or
push
jo
or
pop
fdivr
imul
inc
xlat
in
cmp
inc
mov
or
add
xchg
stmxcsr
inc
mov
psadbw
adc
push
cld
(bad)
and
jmp
add
dec
and
adc
cmp
daa
iret
mov
fimul
sar
mov
lock
cld
(bad)
sti
(bad)
sub
mov
push
cmp
stc
cmp
xchg
push
and
pop
in
(bad)
and
pop
mov
mov
mov
ds
xor
add
dec
and
test
mov
arpl
cmp
and
test
or
test
cmc
mov
push
test
ss
inc
dec
pop
sub
or
add
ss
mov
in
shl
scas
sbb
xchg
jl
add
cmps
cmp
in
lds
mov
dec
jo
and
shl
pop
in
xchg
nop
jecxz
in
xor
push
aam
pop
cdq
xor
xor
in
sbb
enter
xlat
es
push
dec
xchg
scas
inc
and
js
jle
cld
fs
les
push
test
dec
dec
inc
add
inc
fdiv
adc
mov
lds
jno
aas
push
pusha
push
jp
add
outs
test
cli
adc
and
pop
sbb
sti
cs
mov
mov
shl
push
adc
test
mov
leave
in
lds
enter
ror
cmc
arpl
jo
(bad)
push
cmovns
jae
ds
bound
aas
xor
pushf
jae
push
rcl
sahf
cmps
push
scas
cmp
mov
aam
jle
add
xor
stos
rol
inc
add
(bad)
fs
dec
or
rcr
pushf
in
rol
fwait
mov
adc
std
int
jge
test
inc
or
mov
add
pusha
data16
andps
adc
sti
jp
add
inc
enter
mov
cwde
(bad)
dec
push
je
cmp
mov
and
stos
(bad)
jecxz
sbb
mov
jne
scas
inc
seto
inc
enter
mov
xchg
nop
inc
add
enter
test
xor
ds
ja
pop
fwait
mov
or
or
cmp
shl
mov
ss
mov
out
(bad)
cmps
push
mov
das
bswap
push
xor
pop
lock
xchg
xchg
dec
xchg
push
pushf
in
or
nop
cwde
ltr
push
ins
mov
movs
out
rcr
call
dec
xchg
pop
jge
repz
sub
mov
lahf
lahf
ja
fwait
aaa
mov
mov
mov
push
mov
movs
mov
mov
pop
and
loope
or
or
out
add
mov
cmp
fadd
iret
add
mov
add
inc
pop
cmps
jo
ret
and
xor
sub
outs
mov
inc
sub
push
stos
cmp
mov
cmc
out
sbb
push
rol
mov
test
scas
ror
mov
sub
sbb
ds
jne
int3
gs
mov
loope
and
inc
or
pop
adc
inc
int
loope
inc
jg
retf
das
es
fnstsw
push
retf
add
add
fidivr
adc
cs
pop
pop
iret
jo
repnz
unpckhps
mov
add
pop
mov
ror
sbb
ret
mov
bndstx
push
sbb
mov
retf
add
rcr
add
add
and
in
and
cmp
mov
push
add
pandn
xor
out
aam
add
add
mov
(bad)
aad
icebp
push
lock
shr
sbb
repz
es
xchg
add
sbb
mov
(bad)
bound
sub
aaa
xchg
sar
inc
mov
lea
mov
outs
inc
jo
inc
popa
cmp
pop
inc
jo
outs
fs
or
jmp
sbb
jne
enter
jne
sbb
dec
ficom
test
push
and
in
dec
pusha
jecxz
test
and
cmp
loopne
and
lds
mov
and
(bad)
mov
ins
mov
inc
test
and
mov
ror
repz
popa
and
in
imul
push
add
jbe
movs
dec
xor
xchg
cmp
xor
ret
pop
test
imul
or
lods
mov
push
popa
cmp
pushf
xor
push
mov
add
ins
pop
daa
sbb
stc
repnz
popf
mov
pop
test
popa
stos
sahf
nop
and
dec
ffreep
ror
or
or
enter
push
movs
and
sahf
push
push
lock
dec
mov
sbb
pop
add
mov
cmp
popa
fsubr
or
mov
xchg
adc
dec
iret
ja
enter
cmp
or
fwait
and
bound
les
mov
pop
adc
mov
jmp
cmp
mov
jbe
ja
jne
sub
mov
outs
push
jg
test
push
lahf
mov
sub
data16
cmp
add
xor
push
jne
xor
xchg
inc
inc
popf
add
test
movs
add
add
xchg
push
dec
cmps
adc
or
test
sbb
dec
shr
gs
cmp
mov
dec
xchg
push
and
loopne
cmps
xor
push
mov
inc
stos
sub
push
cmp
sub
add
sbb
aas
or
xchg
sub
retf
sbb
inc
fs
cld
rcl
fstp
adc
and
add
mov
je
aad
add
out
ins
sbb
jecxz
mov
push
add
xor
xor
pop
sbb
fisubr
inc
mov
cwde
ins
nop
pop
sub
retf
inc
pop
cmp
and
jnp
sub
shr
inc
emms
xor
out
in
inc
dec
sbb
ins
and
cdq
inc
xchg
test
xor
or
fs
jnp
outs
add
retf
xchg
pusha
fadd
inc
and
jns
lods
popa
inc
inc
mov
inc
hlt
stos
adc
jge
mov
pop
lods
inc
cdq
rcr
sub
cmp
frstor
jmp
movs
xchg
push
xchg
push
sbb
fs
xchg
(bad)
sub
push
or
add
(bad)
scas
mov
push
imul
cwde
iret
add
and
dec
sahf
jl
shrd
sub
cmp
out
inc
ror
xchg
and
mov
xchg
dec
(bad)
fxch
add
xor
(bad)
push
pop
mov
or
loop
jae
cs
push
loope
mov
fadd
movs
enter
or
lods
cwde
lods
push
xor
mov
pop
pushf
sub
idiv
cmps
test
(bad)
mov
cmp
pop
dec
mov
sahf
and
push
dec
xchg
or
in
jge
cld
test
(bad)
adc
jnp
or
aam
lock
mov
scas
sbb
fdivrp
sahf
hlt
fiadd
mov
push
sub
and
xor
jp
pop
sub
push
sub
imul
jns
cmp
jae
lock
sub
pop
lods
xchg
inc
mov
outs
fcomip
mov
fld
dec
mov
ror
push
sub
jp
in
ins
imul
bswap
fsubr
mov
and
(bad)
in
das
jg
adc
rcl
not
add
ficom
dec
stc
jb
add
scas
into
out
fimul
pop
out
pop
inc
fisttp
sub
imul
dec
pop
jb
movs
movs
fistp
dec
add
aam
dec
test
xor
fbld
movs
fbstp
movs
fbstp
lods
adc
mov
movs
fistp
scas
movs
fisttp
dec
dec
jp
pop
movs
fistp
add
mov
add
push
lods
in
repz
dec
inc
fild
inc
and
fbld
(bad)
cmc
pop
adc
inc
icebp
ds
mov
push
add
add
add
pop
les
push
pop
loopne
sbb
inc
outs
xchg
xor
add
cmp
sbb
nop
xchg
xchg
pop
add
mov
mov
cmp
inc
pop
ds
mov
mov
popf
aam
add
nop
xchg
and
fistp
leave
cmp
dec
push
pusha
push
jo
daa
xor
mov
repnz
loope
loope
sbb
cmp
loopne
call
mov
push
outs
add
mov
lods
and
pmulhw
out
add
test
or
loop
ss
and
in
mov
xor
in
das
in
in
and
mov
out
pop
arpl
sbb
inc
push
and
pusha
out
jne
or
xor
xor
inc
in
cmp
xchg
cmp
cmp
push
retf
or
aad
mov
sub
int3
aad
xchg
adc
fdiv
xchg
add
dec
into
mov
sbb
push
pop
sub
in
loope
mov
sub
and
mov
sbb
adc
xor
add
mov
mov
movs
pop
bound
xchg
aas
aas
xchg
sub
pop
or
jge
xor
and
rol
push
add
jg
xor
jnp
jg
scas
push
mov
inc
arpl
nop
pop
daa
add
sub
dec
jmp
imul
add
inc
sbb
dec
addr16
(bad)
pusha
mov
movs
dec
or
add
test
or
movs
xchg
adc
dec
cmp
scas
sbb
pop
and
and
jo
outs
imul
mov
lods
daa
lods
add
mov
mov
or
and
jo
sub
pushf
add
out
out
mov
(bad)
fsubr
inc
adc
(bad)
cmp
int3
sbb
inc
pop
in
pop
(bad)
mov
pop
mov
outs
(bad)
mov
sbb
mov
jne
sbb
(bad)
sbb
xchg
call
(bad)
es
das
aad
or
xchg
xchg
loopne
or
add
ds
xchg
loopne
(bad)
jo
ins
or
xor
cmp
jecxz
sbb
fxam
out
xchg
jecxz
(bad)
add
outs
dec
pop
jmp
add
mov
jecxz
cmp
ins
or
shl
lock
push
sub
ja
mov
rol
mov
lahf
out
mov
mov
outs
pop
das
or
inc
push
sub
mov
fstp
mov
push
popf
pushf
push
push
fmul
(bad)
shl
jmp
lahf
inc
test
add
push
leave
push
and
inc
inc
jecxz
and
or
adc
and
stc
inc
jg
fst
jmp
jns
jmp
scas
inc
pushf
mov
fsubr
fcmovnb
pop
sbb
shl
imul
xchg
mov
jo
xchg
or
clc
push
pop
leave
sub
lds
scas
inc
lock
adc
and
scas
add
pop
pushf
and
(bad)
loope
adc
jmp
adc
and
jmp
jmp
in
adc
dec
sub
scas
inc
mov
push
js
mov
jne
sub
pop
adc
ins
or
and
push
xchg
mov
in
imul
add
push
jmp
pop
(bad)
sti
mov
inc
mov
inc
sub
add
sub
pusha
cli
mov
push
xchg
in
cmp
dec
and
mov
sbb
push
pusha
mov
out
jbe
sub
pop
add
test
ds
push
cmp
pop
push
sbb
sahf
dec
aam
mov
arpl
mov
xchg
jae
or
adc
out
pop
nop
loope
ins
mov
dec
mov
repz
or
pop
sbb
add
or
dec
cmp
stos
add
mov
sub
les
dec
test
enter
push
cmp
pop
adc
inc
jb
inc
popa
mov
popf
(bad)
rol
xchg
in
rcl
inc
mov
pop
xchg
cld
add
xchg
and
mov
mov
push
mov
pop
mov
xor
and
cmp
scas
jae
mov
call
lock
or
inc
dec
sbb
rol
dec
ds
rol
xor
or
mov
rcl
das
pop
dec
adc
shr
cmp
lock
cmp
jno
sbb
vmwrite
jmp
icebp
stos
shl
or
jae
xchg
push
pop
ds
add
in
iret
pop
xor
jmp
xchg
or
and
ja
dec
pop
add
mov
lds
not
dec
inc
mov
fidivr
bound
fstp
sub
mov
adc
xchg
fild
outs
sub
repnz
and
ja
mov
or
sbb
enter
push
dec
lea
in
push
in
daa
or
or
inc
push
in
adc
in
push
in
and
pop
inc
push
sub
push
sbb
push
in
in
out
push
push
inc
or
push
adc
repnz
out
sahf
lock
(bad)
popf
inc
lahf
out
stos
mov
outs
inc
ds
or
xchg
mov
aad
sbb
clc
push
cld
sub
aam
fwait
hlt
pop
ds
std
push
inc
inc
add
fadd
cmp
shr
push
pusha
ins
js
xor
or
ins
adc
dec
mov
inc
icebp
sbb
aad
and
sbb
mov
jg
xor
add
mov
int
mov
mov
repz
mov
sbb
jbe
or
aad
dec
push
jle
add
clc
or
push
add
dec
mov
xor
es
in
lea
rol
imul
xchg
dec
dec
xchg
add
xchg
cmp
jge
or
or
jo
(bad)
adc
add
mov
and
cmp
pop
jo
jnp
push
sub
push
jge
mov
ret
push
push
leave
neg
or
fstp
ret
add
ja
aaa
mov
inc
jno
in
test
aaa
dec
mov
jnp
aas
add
and
pusha
lds
jge
bound
lods
pop
jmp
jae
add
or
jb
push
mov
and
push
fiadd
or
sbb
cmp
movs
ret
das
xor
push
test
pop
dec
movs
cmps
and
lea
pop
jnp
shl
pop
pop
or
push
addr16
and
push
outs
xor
icebp
and
add
xchg
dec
scas
scas
cmp
(bad)
pop
or
dec
lds
xchg
push
add
mov
sub
or
xor
pop
jae
push
emms
cmp
ins
pop
and
push
lds
sub
bound
sbb
xlat
or
repnz
xchg
bound
add
add
push
pop
lods
sbb
mov
adc
pop
ficomp
push
adc
xor
out
xor
jecxz
jg
adc
adc
mov
stc
sti
and
mov
and
mov
fsubrp
jnp
(bad)
cli
inc
daa
mov
fisttp
adc
daa
and
mov
or
jo
mov
inc
or
cmp
retf
mov
(bad)
arpl
setg
pop
or
push
fcomp
cmp
inc
pop
push
push
lods
cli
lea
add
rol
fcmovnu
sbb
sub
add
sub
and
sbb
fisubr
fs
repnz
fdivr
or
fcmovnb
ret
imul
add
and
sub
das
pop
sub
sbb
dec
jns
enter
sti
mov
gs
ins
cmp
mov
ja
mov
cmp
push
jbe
dec
das
call
ror
dec
outs
je
pop
xor
or
addr16
xor
int
out
sbb
jae
movs
jnp
push
dec
je
ja
movs
dec
fnstenv
push
adc
scas
pop
lea
xor
dec
imul
xchg
xor
mov
mov
iret
and
jb
loopne
cmp
jo
scas
sub
lock
jo
pop
cmp
ficom
or
adc
xchg
or
xor
ins
mov
xchg
outs
and
add
mov
xor
pop
adc
sub
push
adc
(bad)
pushf
mov
or
dec
fiadd
(bad)
push
xchg
enter
sbb
sub
and
fwait
or
dec
xchg
xchg
xchg
fwait
jo
cmp
and
jne
stc
pusha
std
jle
cdq
xchg
inc
pusha
scas
gs
call
add
pop
sbb
inc
(bad)
int
dec
add
xchg
cmp
xchg
add
jnp
and
das
xor
shr
jecxz
scas
ja
push
sub
mov
mov
push
out
and
add
fdiv
jnp
aad
pop
retf
and
repz
jnp
dec
or
adc
outs
fs
adc
jmp
test
outs
je
sbb
dec
and
pop
out
sub
inc
rcr
xor
or
mov
cmp
xor
add
in
push
retf
pcmpeqb
ds
dec
add
je
mov
loopne
push
enter
pop
ins
and
mov
dec
cmps
jb
iret
ss
mov
add
sub
dec
nop
adc
hlt
inc
sar
outs
jae
sub
and
and
mov
js
xchg
in
pushf
mov
sbb
sbb
sub
xchg
stos
sub
xor
sub
pop
sbb
add
shl
xchg
mov
push
(bad)
lock
bound
add
retf
mov
or
out
xor
inc
dec
and
inc
inc
repnz
inc
and
and
sub
adc
push
std
cld
mov
fwait
adc
sub
adc
xchg
das
add
add
test
dec
add
adc
and
cli
int
jnp
mov
dec
(bad)
outs
cmp
(bad)
sub
fistp
sahf
imul
mov
mov
or
push
sbb
add
or
or
add
loope
add
and
push
lock
add
jae
xor
dec
popf
and
xor
rcr
adc
and
and
lsl
and
adc
push
or
shr
lods
arpl
arpl
push
adc
or
mov
push
inc
sbb
xchg
test
stc
mov
div
ss
sbb
jae
and
pop
mov
repnz
add
test
arpl
sub
mov
sbb
lahf
cmp
fild
sti
cdq
repz
xchg
out
add
dec
or
sbb
lea
loop
add
cmp
aad
push
and
add
vandps
ja
mov
adc
and
popa
push
sbb
add
mov
(bad)
fwait
push
push
imul
into
pusha
push
rol
xlat
mov
pop
data16
and
adc
inc
and
fcom
test
imul
pop
cmps
add
and
dec
sbb
mov
test
xor
mov
pop
cmp
adc
inc
and
dec
add
popa
out
imul
push
cmp
je
inc
gs
jge
in
das
adc
cld
xchg
inc
and
test
inc
adc
ins
data16
jl
adc
and
jl
fs
ins
lahf
mov
repz
fimul
daa
das
push
inc
mov
add
shl
sub
mov
(bad)
push
push
es
mov
and
xor
push
add
ror
dec
xor
adc
dec
cmp
inc
dec
or
cmp
adc
enter
in
(bad)
adc
push
add
push
cmps
pusha
or
es
or
add
stos
repz
sbb
push
sub
js
leave
and
hlt
ret
and
xchg
rcl
adc
add
xchg
push
or
and
inc
push
cmp
in
loopne
pop
ins
sbb
fst
das
mov
aas
add
leave
ins
in
inc
or
in
in
jmp
push
ins
lods
jb
xor
or
xor
sbb
jb
fisttp
adc
sar
cmp
mov
pop
pop
adc
inc
(bad)
movs
daa
and
ficom
adc
sbb
add
jno
fwait
aam
and
je
cmps
jecxz
movs
jae
cmp
ins
sbb
stos
or
push
bound
adc
add
push
add
pop
iret
jb
add
aam
inc
pop
and
adc
inc
aam
pop
jbe
mov
push
jo
add
mov
div
ins
adc
jne
pop
jmp
pusha
xor
push
retf
ins
mov
mov
or
stos
(bad)
fdivr
in
mov
adc
xor
push
push
xchg
dec
dec
adc
repz
add
xlat
xor
pop
outs
push
cmp
cmps
and
cmps
xchg
push
fnstsw
movs
movs
mov
add
xlat
dec
aam
push
mov
popa
adc
jb
xor
or
or
pop
ret
daa
xchg
or
mov
adc
mov
and
dec
jns
sub
nop
and
lods
js
push
mov
aam
nop
adc
rcl
mov
stos
mov
xor
enter
fsub
test
aam
inc
mov
pop
sub
lock
(bad)
xor
pushf
add
pop
ficom
test
mov
add
push
out
bound
or
cmp
adc
test
js
xchg
int
add
or
sub
pop
jg
out
adc
loopne
add
sub
test
shl
sbb
repnz
int3
pop
pop
je
sub
punpckhwd
in
rcr
imul
stos
in
pop
mov
cwde
lds
out
mov
or
push
fld
and
or
aad
or
push
ror
add
and
shr
imul
mov
ret
rcr
cmc
aam
stos
lea
xchg
lahf
cmp
adc
xchg
cs
inc
inc
mov
inc
inc
inc
inc
push
sub
or
shl
and
push
cmp
inc
sbb
cwde
out
cmc
dec
fidiv
inc
and
jecxz
inc
jnp
cmp
sbb
icebp
xchg
sub
jecxz
stos
mov
xor
jno
sbb
psllw
sahf
xchg
jmp
pop
adc
sbb
jo
call
or
scas
xor
push
sbb
pop
cmp
movs
inc
inc
(bad)
adc
add
adc
add
sub
add
pop
scas
test
inc
or
pop
xchg
push
jg
jl
mov
push
pop
sar
cmps
sub
add
dec
dec
jne
pop
sub
push
xchg
add
push
xchg
adc
fld
test
pop
adc
adc
inc
mov
jno
movs
or
movs
push
movs
xchg
sbb
xchg
mov
or
inc
push
sbb
pop
push
daa
inc
inc
sbb
add
cmp
cdq
test
jbe
inc
(bad)
and
not
inc
pop
jne
icebp
popa
jge
push
push
jnp
hlt
push
or
sbb
cmps
sbb
xor
or
lock
(bad)
cmp
dec
push
cmp
por
push
or
xor
mov
jb
sub
mov
sbb
sbb
in
inc
cmps
sbb
sbb
dec
sbb
fsubr
mov
mov
and
dec
jge
or
daa
daa
daa
daa
jl
repnz
arpl
enter
je
in
in
loop
pop
push
mov
inc
hlt
in
push
add
out
adc
stos
add
or
enter
sub
or
pop
sub
adc
inc
inc
or
push
or
test
push
dec
add
inc
cli
or
or
rol
cmp
add
je
and
add
call
cld
ja
or
das
cmp
sub
test
jno
inc
dec
cmp
outs
or
inc
ja
adc
jb
add
jnp
outs
adc
xchg
dec
xlat
add
jl
or
sbb
call
adc
mov
add
push
sub
daa
inc
jb
adc
xchg
outs
cmp
adc
cmp
les
ins
ja
cmp
call
out
out
and
jle
inc
or
out
cmps
adc
sahf
inc
icebp
add
inc
scas
adc
inc
test
leave
pushf
je
add
adc
sub
cs
shrd
push
gs
call
add
pop
cmp
or
fsub
xchg
mov
test
lods
call
movhps
sbb
inc
push
pop
aaa
enter
repnz
or
lods
adc
push
inc
pop
shl
sbb
in
jae
pop
scas
add
jnp
mov
jb
lods
push
and
shl
and
addr16
or
mov
stc
add
jl
mov
test
fidiv
clc
or
mov
stc
test
push
loope
inc
xchg
(bad)
mov
std
add
sbb
jl
adc
mov
mov
cwde
pop
test
mov
inc
mov
mov
pop
push
push
daa
enter
shl
aas
imul
sbb
xchg
stos
sbb
add
jp
clc
mov
cmp
je
dec
add
jnp
pop
or
je
ss
pop
adc
inc
mov
xchg
adc
and
adc
mov
ss
rol
dec
movs
out
push
sbb
push
ins
movs
push
push
mov
cmp
pop
lahf
sbb
dec
in
push
mov
push
inc
and
xchg
gs
iret
dec
push
and
adc
inc
fldenv
shl
daa
pushf
push
xor
mov
es
and
movs
and
inc
pop
fsub
aaa
cmp
cwde
es
lods
push
cwde
mov
(bad)
iret
mov
outs
enter
sub
add
bound
fist
dec
or
jo
cwde
ja
in
or
int
mov
cmp
sub
push
repz
pushf
gs
xor
push
popa
test
aam
pop
adc
jns
add
mov
outs
push
imul
cmp
xor
dec
add
outs
out
cmp
sbb
fild
sbb
lods
hlt
call
wbinvd
mov
fwait
cmp
inc
mov
pmuludq
mov
jmp
xchg
xchg
daa
push
daa
aas
inc
cmp
cmp
mov
xor
mov
xor
inc
js
loop
sub
daa
and
add
rol
or
inc
aas
es
dec
xor
(bad)
pop
(bad)
shr
cmp
and
jle
adc
inc
outs
push
jns
outs
mov
movs
retf
jecxz
pop
push
xchg
jmp
leave
pop
or
fsub
(bad)
xlat
popa
add
add
add
in
mov
inc
fimul
jo
mov
sbb
repz
add
or
lahf
inc
or
adc
dec
pusha
test
add
and
adc
int3
jmp
gs
or
push
jl
mov
imul
pop
aam
push
sbb
add
or
xchg
inc
ins
push
jnp
inc
cmp
(bad)
jge
jecxz
div
mov
jno
push
adc
aam
or
bound
xor
adc
rol
js
inc
mov
or
sub
out
fsubr
add
xchg
add
jnp
shl
add
rcl
xchg
xchg
push
popf
push
mov
movs
lea
(bad)
fimul
pop
cmp
xchg
cld
clc
inc
mov
sti
push
push
fs
dec
or
cmp
shr
sub
gs
pop
or
lds
pop
stos
dec
fadd
pop
add
xor
add
or
sub
or
inc
inc
inc
int
adc
aaa
or
inc
add
inc
ret
inc
sbb
xor
dec
sbb
je
or
mov
mov
adc
loopne
fcomp
inc
xchg
or
xchg
cmps
inc
or
mov
inc
mov
sbb
pop
sub
inc
sub
into
pop
adc
movs
push
push
xlat
mov
adc
movs
jo
xor
retf
push
push
inc
jg
or
arpl
mov
hlt
adc
cmp
test
fcmovnu
mov
jg
jns
or
mov
inc
or
add
rol
dec
adc
xchg
call
sub
or
rcl
cs
sub
cmc
sbb
or
or
ins
test
add
adc
pop
push
pusha
add
jg
xor
iret
or
jae
jnp
enter
push
rcl
sub
aad
or
push
or
adc
sub
and
sbb
or
(bad)
xchg
test
dec
popa
aas
(bad)
fst
lea
cwde
mov
xor
push
inc
movs
xchg
das
dec
inc
or
mov
das
ss
neg
adc
or
cmps
sub
add
push
add
sub
jo
(bad)
and
movs
jbe
retf
mov
push
std
add
cmp
hlt
fnsave
lahf
jl
xor
retf
repz
adc
(bad)
das
inc
fcmovbe
gs
daa
loopne
adc
popa
sub
fcom
clc
cs
push
inc
or
inc
mov
movs
sub
call
rcl
stos
mov
outs
mov
cmp
jle
dec
dec
bound
call
push
xor
mov
jecxz
fwait
xchg
in
rcl
in
add
cmp
mov
cld
mov
(bad)
dec
pop
cmp
stos
push
adc
sub
add
mov
adc
dec
inc
das
xchg
push
add
mov
mov
pop
jl
dec
fwait
add
fmul
and
or
mov
rol
leave
or
mov
fld
dec
xor
adc
inc
fs
popf
ret
cmps
sahf
in
cmps
xor
shr
xor
daa
out
jmp
push
dec
sti
mov
repnz
fcom
in
pop
pop
push
jl
sbb
and
call
or
dec
pop
sahf
or
adc
test
and
add
imul
and
add
or
and
xor
xor
add
xor
ret
psubsw
aam
les
mov
imul
adc
pop
(bad)
xor
push
js
pop
adc
cmp
dec
xor
mov
cs
dec
ss
(bad)
inc
and
adc
ins
or
imul
mov
ins
icebp
lea
(bad)
adc
dec
dec
mov
push
xchg
aaa
or
xchg
std
or
and
cmps
dec
int
jb
jae
and
add
inc
adc
mov
mov
cmp
xor
scas
dec
xchg
adc
xor
xchg
xchg
mov
xchg
inc
xchg
inc
pop
stos
jne
dec
pop
lds
fisttp
sub
and
(bad)
mov
icebp
pusha
mov
repz
fwait
xor
out
cmp
neg
cmovb
sub
iret
jmp
jmp
pop
xor
xchg
sar
mov
push
shl
push
movs
cmp
cs
int3
int3
fisubr
inc
int3
int3
add
ja
out
xchg
mov
mov
xor
mov
ss
clc
jecxz
lahf
std
inc
fistp
int
aaa
fdiv
aas
push
out
aaa
repnz
cmp
cmp
xchg
retf
ds
pop
das
inc
or
fnstcw
xor
push
test
push
add
movs
dec
mov
cmp
cmp
mov
adc
push
mov
shr
inc
mov
jo
mov
inc
or
inc
mov
fst
add
adc
adc
xor
adc
add
dec
cmp
test
mov
clc
cs
sbb
mov
add
push
inc
dec
cmp
add
add
xchg
sub
adc
mov
sub
adc
hlt
adc
pop
cs
add
and
cmp
in
clc
ret
ins
cmp
call
ins
in
clc
push
push
add
push
ja
in
leave
jmp
pop
pop
cmp
dec
repnz
inc
icebp
(bad)
jmp
push
movs
jae
jp
ds
adc
push
mov
pop
test
fadd
adc
push
dec
stc
jmp
push
push
push
mov
fcmove
ret
lods
push
mov
cmp
repz
fsub
adc
sub
push
rol
je
mov
ss
(bad)
aam
jns
aas
popa
xor
mov
dec
or
inc
imul
lahf
inc
pop
das
inc
popa
mov
ins
out
xor
out
sub
clc
or
push
cmp
aam
ret
cmp
(bad)
inc
jg
out
fwait
xchg
dec
std
mov
xor
fidivr
inc
mov
and
adc
xlat
add
push
mov
dec
(bad)
mov
fsub
jo
pop
add
sti
mov
pop
xor
adc
push
or
sbb
and
in
inc
fwait
adc
inc
enter
sub
push
test
xor
sbb
and
aam
pop
test
adc
cwde
cmp
scas
pop
test
push
dec
mov
push
xchg
add
ins
ds
sbb
cmp
adc
inc
cmp
je
emms
or
xor
or
jae
std
fadd
dec
data16
mov
dec
movs
pushf
(bad)
in
push
aaa
test
and
jns
sbb
inc
cmp
outs
stos
shl
stos
inc
sub
cwde
or
rol
mov
mov
aad
pop
inc
or
movs
sub
movs
pop
imul
add
add
movs
add
or
fist
add
inc
test
sub
add
aas
pop
mov
inc
adc
inc
adc
jbe
dec
mov
in
or
test
lds
pop
cmp
dec
and
aas
fisttp
push
push
js
retf
jmp
in
mov
outs
popf
or
mov
call
lods
or
push
mov
in
push
das
fiadd
pop
mov
and
push
xchg
or
loopne
jmp
es
or
sbb
lods
adc
pop
aas
push
out
sahf
out
mov
shl
add
movs
clc
add
or
sub
dec
stos
sahf
std
das
imul
ds
add
jns
inc
mov
xor
ret
pop
test
arpl
aaa
call
pop
fadd
cld
or
ins
imul
movs
dec
push
mov
mov
mov
or
pop
pop
lods
dec
push
push
inc
sub
popf
pusha
add
sahf
or
inc
dec
jae
cmps
or
fidiv
and
push
rol
sbb
fmul
fs
inc
aaa
inc
repnz
push
or
jns
add
js
mov
jno
imul
add
cmp
cmp
sub
xchg
cmps
hlt
repnz
clc
jge
or
repz
sub
or
push
push
inc
into
lea
adc
leave
cld
sbb
pop
adc
mov
and
stos
cmp
jecxz
fst
ret
mov
sbb
inc
and
xchg
adc
ins
mov
mov
pop
jae
shl
daa
fs
mov
push
dec
cmc
xchg
cmp
in
inc
ja
add
mov
jns
aad
xor
cmp
mov
dec
icebp
and
xchg
in
sbb
pop
(bad)
sar
push
jp
push
outs
jg
cwde
lods
pop
in
add
dec
push
fdiv
push
cmp
mov
pop
sbb
fld
push
mov
mov
(bad)
fsubr
sar
cmp
pop
out
inc
jmp
or
loopne
lods
in
and
data16
(bad)
pop
xchg
fimul
mov
out
dec
test
mov
jns
je
dec
dec
fs
outs
in
xlat
inc
dec
dec
test
xchg
jl
scas
dec
les
mov
stos
lds
sub
leave
or
dec
xchg
dec
std
xor
sbb
arpl
mov
gs
test
out
jne
fcomip
cli
dec
inc
xor
adc
js
movs
scas
test
lahf
dec
cmps
ror
cdq
aam
lahf
push
add
mov
pusha
fs
fisub
or
mov
test
loope
jns
dec
dec
add
imul
les
pop
aas
and
jno
add
les
scas
jns
dec
dec
mov
and
test
dec
popa
and
shl
popa
mov
jmp
jmp
mov
mov
add
lods
push
adc
jo
js
repnz
dec
imul
aaa
add
add
or
inc
adc
daa
or
dec
sbb
inc
sbb
xlat
mov
sub
je
add
push
xor
mov
xor
add
rcr
fadd
adc
cmps
jno
popa
jo
adc
adc
cmp
in
or
cdq
loopne
adc
je
outs
mov
xchg
xor
out
xor
fcmovnu
sub
inc
cmp
mov
xlat
jbe
sub
push
add
outs
push
or
push
push
shl
aad
adc
mov
inc
or
lds
lahf
add
dec
imul
mov
dec
es
push
push
fs
mov
and
das
stc
mov
sbb
cmps
in
or
repnz
and
push
es
outs
ja
push
mov
adc
xchg
and
ins
popa
adc
mov
inc
les
xchg
adc
stos
mov
pop
or
aam
(bad)
jmp
repnz
(bad)
fmul
test
das
jmp
push
xchg
clc
xchg
xor
pusha
imul
sbb
adc
in
leave
add
stos
aam
dec
add
fadd
adc
aad
sbb
dec
neg
das
ss
jl
add
pop
add
enter
ret
fwait
pminsw
push
pop
in
leave
xchg
sub
pop
add
sbb
and
pop
or
dec
xor
outs
ror
out
cld
mov
mov
mov
push
mov
retf
sub
push
outs
jb
jmp
push
loopne
and
sahf
ins
lahf
out
sub
fistp
push
ds
xchg
adc
les
in
fisubr
xchg
add
scas
dec
enter
xor
xchg
mov
inc
jb
dec
pop
add
hlt
lods
jmp
add
inc
repnz
jecxz
push
add
stos
outs
inc
and
fwait
add
test
mov
je
aaa
mov
dec
inc
stos
leave
pop
test
daa
pusha
and
cmp
xchg
push
daa
cmp
jne
shl
test
jg
cmp
pop
sar
and
add
add
cmp
popf
fiadd
xchg
je
push
and
add
fsub
xchg
cmp
xor
es
xor
ror
dec
test
sub
dec
enter
inc
daa
push
push
or
test
pop
mov
or
inc
addr16
icebp
add
inc
ins
imul
or
loope
imul
mov
rcl
push
leave
repz
neg
push
inc
scas
in
in
jmp
repnz
and
les
js
adc
add
dec
inc
dec
push
scas
xchg
sub
inc
mov
mov
ins
dec
pop
add
or
ins
pushf
mov
mov
rol
add
jb
xor
or
ficomp
sahf
add
in
outs
dec
add
add
pop
test
inc
shr
or
jl
xor
sub
push
rcl
add
adc
adc
(bad)
sbb
add
dec
pop
and
mov
adc
pop
add
sahf
mov
mov
xchg
movs
cmp
lock
jge
fmul
nop
enter
mov
xchg
and
call
adc
les
inc
jmp
add
pop
push
arpl
les
push
iret
js
daa
mov
add
lahf
mov
add
adc
or
pushf
stos
or
pop
jne
pop
daa
mov
lea
inc
cdq
paddusw
xchg
xchg
xchg
xchg
pop
push
mov
fild
pop
aas
jle
pop
dec
sub
and
inc
je
mov
xor
imul
imul
popf
mov
je
add
inc
mov
fcom
inc
add
in
cld
dec
pop
add
add
xor
pop
dec
adc
jne
and
je
bound
loopne
mov
inc
adc
jno
adc
lods
and
dec
inc
and
pop
je
enter
arpl
das
rcl
lock
xchg
mov
shl
dec
push
adc
dec
push
cmp
jmp
push
test
xor
inc
xchg
add
pop
daa
repnz
fld
jno
mov
test
cmp
jo
ja
cmp
fidivr
xlat
bound
fdivr
xchg
sbb
dec
mul
sbb
pop
in
(bad)
aad
pop
rcl
lahf
and
mov
mov
mov
xchg
lock
mov
out
xchg
jbe
test
call
imul
push
mov
fbld
cli
jne
jae
iret
mov
jmp
xor
sbb
outs
or
outs
jmp
push
(bad)
(bad)
add
or
fild
stc
or
cmps
mov
adc
xchg
ret
fsubp
outs
pop
js
out
pop
lods
add
and
adc
addr16
paddq
or
test
lods
xchg
add
dec
dec
pop
mov
fcmovu
xor
sbb
and
or
add
cmp
jge
int3
xchg
into
out
call
hlt
add
jae
sub
call
xor
adc
fist
cmp
dec
into
inc
gs
push
inc
js
leave
pop
inc
add
xor
outs
pop
stos
icebp
sbb
add
or
push
inc
test
dec
nop
sbb
dec
rol
inc
xor
add
cmp
add
hlt
or
cs
and
lock
dec
inc
sub
(bad)
fld
pushf
sub
test
inc
push
xchg
jmp
or
sbb
xchg
pusha
in
fiadd
test
and
popa
jmp
ret
inc
add
xchg
xor
cmps
add
or
popa
and
sbb
cli
popf
shl
add
push
dec
inc
js
jmp
imul
movs
call
cmp
push
cmp
jne
cmp
jecxz
leave
loope
sub
rcr
ins
je
xor
sbb
aad
and
push
sub
jge
push
xor
aas
gs
test
jne
or
jne
or
pushw
pop
cmc
test
adc
dec
loope
add
xor
sar
dec
mov
mov
pop
push
or
or
jb
jmp
scas
jle
mov
add
add
nop
popa
sub
or
scas
je
js
call
and
or
push
sub
aad
pop
xor
cmc
pop
or
mov
inc
fsub
les
jmp
shl
sbb
(bad)
mov
inc
fdivr
cwde
push
inc
dec
lods
and
cmp
(bad)
shufps
jo
movs
or
xchg
movs
inc
push
xchg
add
arpl
and
out
sbb
nop
and
push
push
jmp
mov
pop
call
pusha
addr16
inc
movs
cli
push
js
leave
sbb
shl
mov
fisub
xchg
movs
cmps
jp
mov
inc
js
xchg
and
mov
outs
addr16
inc
xchg
aas
imul
push
gs
lods
les
hlt
or
or
out
push
test
add
xchg
pushf
adc
dec
mov
mov
lods
xor
add
inc
cmp
test
jbe
xor
test
sti
rol
and
dec
test
add
xor
ins
das
add
cmp
cmp
xchg
cmp
pop
loopne
push
pop
test
loope
mov
sbb
xor
lds
adc
push
mov
movs
dec
push
dec
cmp
nop
jne
push
in
jne
sti
js
jecxz
pop
shl
pop
adc
push
pop
cmps
mov
sbb
jmp
xor
dec
add
out
push
mov
out
sub
and
jge
sbb
mov
std
sar
ja
(bad)
push
das
lahf
inc
xor
dec
shl
pop
push
pop
adc
in
push
dec
add
pop
pop
retf
aas
out
mov
aad
jbe
push
iret
xchg
or
loop
bound
push
gs
inc
and
ret
inc
dec
out
add
inc
mov
(bad)
fdivr
and
sbb
paddusb
cmp
push
rol
mov
xchg
sub
in
je
jnp
sbb
test
xlat
pop
gs
fisttp
jmp
ss
rol
push
inc
sbb
cmp
xchg
add
push
sub
leave
rcl
clc
clc
dec
dec
dec
and
inc
adc
and
push
mov
lods
or
nop
jo
stc
or
movs
mov
and
loopne
hlt
sub
stos
sbb
int3
adc
dec
out
push
sar
shrd
or
add
pop
pop
shr
sub
jecxz
lods
leave
sub
xor
sar
in
lahf
jbe
add
push
dec
cmp
(bad)
shl
data16
pusha
shr
xchg
out
je
ret
and
dec
clc
pop
sbb
dec
push
jns
mov
fwait
enter
adc
xchg
push
and
fs
jg
cmp
fsub
aas
cmp
loopne
push
hlt
or
add
sbb
adc
shl
cdq
fcmovbe
movs
mov
add
nop
je
cmp
add
sbb
imul
push
pop
aas
fdivr
add
push
adc
inc
daa
retf
das
(bad)
adc
or
(bad)
dec
movs
xor
movs
push
sbb
xchg
fmul
push
or
cdq
mov
adc
adc
popa
imul
mov
not
out
inc
ss
leave
push
and
push
xchg
cmp
push
or
sti
add
sbb
or
movs
or
daa
pop
out
lds
inc
call
add
shl
or
inc
dec
or
sbb
scas
sub
dec
ror
ins
mov
jl
or
fdivr
cmp
imul
daa
sbb
or
push
mov
shl
or
and
loope
popa
push
js
fiadd
lods
jecxz
dec
popa
xchg
test
or
dec
stos
in
xchg
and
pop
inc
jle
test
jne
ins
or
pop
inc
jp
cmp
xchg
int3
adc
(bad)
sub
dec
lds
mov
sbb
nop
inc
push
call
daa
dec
dec
jne
es
es
jnp
xchg
dec
mov
xlat
mov
ror
add
enter
jae
inc
sahf
sti
jle
mov
dec
jne
sub
or
adc
dec
mov
mov
lea
dec
adc
pop
shr
pop
or
je
rcr
loopne
(bad)
cmp
sub
sbb
pop
in
test
inc
call
les
in
jmp
popa
inc
cwde
pop
dec
call
xor
nop
mov
xchg
pop
iret
imul
inc
sbb
or
mov
lock
fsubr
xchg
dec
push
xor
mov
arpl
in
inc
scas
jo
aad
outs
mov
add
ins
ret
adc
cli
push
ror
cmp
sbb
xchg
xchg
outs
fdivr
mov
in
loope
popa
adc
jge
pop
mov
aas
xchg
arpl
inc
dec
adc
push
ins
push
or
out
sbb
mov
push
pop
adc
mov
jb
leave
mov
add
cld
movs
push
or
pop
push
push
push
jp
jne
fwait
arpl
iret
das
adc
push
xor
loope
inc
vmovntps
nop
call
pop
js
pop
movs
inc
ja
lea
or
pusha
sub
cld
pop
movs
xchg
dec
leave
popa
aam
fdivr
sub
inc
sub
(bad)
cmp
(bad)
fisubr
add
cmp
sbb
and
dec
xchg
test
clc
or
cmp
push
div
inc
dec
mov
sbb
rcl
aam
rcl
push
lds
movs
imul
cmp
sub
lock
mov
out
push
mov
push
inc
rol
xchg
(bad)
les
inc
mov
das
xor
pop
sbb
jb
inc
inc
lods
jo
jmp
mov
pop
xor
mov
das
push
push
mov
and
pop
sbb
ins
cmp
pop
das
rcr
and
push
ds
rcl
push
in
jno
cs
retf
pop
pusha
dec
push
hlt
movs
mov
hlt
push
bound
out
jle
adc
and
push
dec
and
jle
test
push
loopne
sub
mov
push
add
push
dec
add
jo
add
stos
(bad)
mov
lods
in
ins
cmp
clc
jnp
inc
xchg
fisttp
add
leave
cmp
mov
or
mov
jae
rol
push
add
inc
pop
in
jo
pop
lods
cmp
adc
jne
(bad)
mov
adc
pop
jl
fdivr
jecxz
add
xlat
mov
jnp
xchg
push
clc
mov
mov
enter
sbb
lea
or
sub
pop
aam
imul
or
inc
aam
pop
adc
add
mov
rol
imul
mov
mov
imul
jg
inc
repnz
jae
pop
jns
add
sub
pop
jnp
dec
dec
es
test
mov
mov
mov
imul
jle
inc
movs
or
test
shl
jg
jecxz
cmps
mov
inc
jle
aam
not
inc
add
stc
add
adc
dec
rol
push
(bad)
fadd
pop
adc
retf
mov
lods
dec
xchg
stc
cmps
in
mov
or
or
mov
cmc
lea
jb
add
adc
add
mov
dec
cdq
cld
push
jns
add
movs
push
cmps
and
pop
dec
add
jle
sbb
(bad)
and
jne
push
or
outs
or
sar
stos
inc
pop
pop
mov
jmp
inc
imul
inc
inc
lods
lods
mov
test
popa
jmp
add
mov
sub
stos
jecxz
mov
daa
push
js
sub
call
dec
mov
pop
ret
push
add
sbb
test
mov
ins
sub
into
add
sti
pop
push
or
js
push
sub
daa
lock
data16
pop
or
scas
pop
test
xor
sbb
mov
cs
push
xchg
xor
cmp
jb
jb
sub
push
dec
mov
inc
sbb
fidiv
inc
or
mov
jl
mov
lock
jge
and
sbb
enter
hlt
out
popf
push
pop
dec
pusha
test
pcmpgtb
aam
or
push
mov
outs
pop
jle
add
adc
je
xor
inc
push
aam
xchg
pop
jmp
scas
xor
fistp
dec
ins
sub
jg
dec
jae
(bad)
dec
mul
nop
in
and
push
add
or
inc
outs
dec
mov
(bad)
fmul
xchg
imul
or
pop
cmp
jne
shl
push
add
retf
add
pop
mov
cwde
dec
jnp
into
fdiv
or
jmp
mov
jmp
push
je
cmp
inc
lahf
push
xor
mov
push
cdq
fadd
lahf
add
fild
cmp
cmp
jle
mov
test
push
dec
cmp
jl
or
inc
or
cmps
ins
fcomp
popa
and
loop
cmp
test
jle
push
dec
sub
mov
pop
push
add
mov
fnstcw
and
retf
xchg
and
fdivr
and
add
imul
mov
jns
adc
push
jg
pop
dec
cli
add
dec
and
sbb
rcr
out
es
push
xchg
jecxz
cmc
add
jns
pop
sbb
mov
jbe
pusha
sti
inc
jne
sub
fsubr
enter
enter
add
imul
pusha
repz
adc
popa
jp
adc
add
xor
inc
mov
leave
adc
rol
and
je
test
pop
inc
pop
push
jno
push
add
jo
lods
out
into
arpl
leave
sub
mov
push
xor
sbb
sbb
shr
aas
jae
add
(bad)
idiv
inc
or
es
push
fadd
xchg
punpcklbw
inc
push
dec
test
add
inc
or
nop
pop
test
out
xor
push
cs
out
out
dec
push
pop
inc
and
jns
into
adc
cmc
sub
inc
lock
in
lods
mov
fucompp
and
xchg
pop
test
add
shl
mov
(bad)
jmp
dec
ins
add
cmp
es
retf
pop
jl
adc
aas
bts
jecxz
pop
leave
mov
aad
sub
ret
xchg
mov
pop
dec
sar
movs
mov
push
jecxz
(bad)
das
inc
jge
out
mov
jmp
jge
js
jo
aam
adc
test
xor
mov
lods
adc
sub
sbb
inc
push
or
and
adc
test
imul
(bad)
adc
or
add
mov
or
retf
pop
add
jle
add
or
shl
(bad)
xchg
adc
nop
frstor
test
cmp
loope
add
ss
ja
xlat
jno
cmps
leave
mov
cmp
jg
sub
and
push
pop
stc
cmc
mov
and
push
in
add
rcl
call
jg
jns
les
in
loopne
enter
sub
xchg
inc
stos
enter
outs
cmps
xor
or
or
data16
(bad)
stos
in
pop
fbstp
xlat
xchg
sbb
push
ret
jecxz
mov
push
mov
lods
inc
xor
loop
repnz
sbb
mov
les
shr
mov
mov
sbb
sub
mov
fisttp
loope
test
fs
fdiv
inc
es
mov
nop
xor
push
pop
ja
call
cs
push
xor
push
ror
out
add
pop
adc
mov
test
inc
clc
arpl
jb
(bad)
and
out
adc
or
xor
jmp
std
jle
mov
xchg
adc
(bad)
out
adc
xchg
inc
sub
cmp
mov
inc
adc
les
pop
cmps
xchg
mov
cdq
psllw
sbb
jmp
xchg
cmp
mov
add
cs
(bad)
dec
cmp
shrd
add
pusha
or
sub
test
test
aas
mov
call
push
add
push
add
cmp
mov
enter
mov
iret
bound
sar
inc
inc
push
sbb
call
out
je
fild
icebp
push
test
lea
xchg
adc
adc
adc
adc
push
adc
adc
test
mov
xchg
or
or
or
(bad)
or
je
stos
adc
btr
cmp
ret
inc
xor
hlt
push
push
inc
pop
test
ficom
mov
std
fld
mov
mov
jns
les
jbe
inc
cli
idiv
aam
clc
xchg
rol
mov
xor
nop
gs
sbb
rcl
cli
pop
mov
push
outs
call
dec
in
shl
movs
jg
ret
fld
adc
jmp
inc
cmp
jne
inc
fdivr
and
fnsave
(bad)
iret
xchg
mov
mov
xchg
xor
xchg
shr
inc
inc
jbe
(bad)
push
les
psubsb
loopne
cmp
(bad)
leave
adc
push
das
mov
add
hlt
mov
add
int3
add
call
inc
or
push
pop
pop
sub
imul
inc
jmp
jg
es
mov
ins
push
xchg
mov
addr16
xchg
pop
or
adc
ret
mov
test
xor
push
dec
adc
push
inc
mov
sahf
fisub
push
cmp
loope
mov
dec
xchg
push
or
ss
and
sbb
xor
and
jmp
dec
add
jo
add
shr
dec
int
jne
mov
push
add
ds
xor
pop
out
aas
or
adc
out
loopne
adc
adc
inc
popa
add
jne
rol
adc
fcom
pop
retf
inc
test
je
addr16
push
push
and
sub
cmc
xchg
sub
adc
dec
js
or
and
inc
inc
xor
rol
mov
sub
or
adc
pop
inc
lea
stos
adc
inc
pop
adc
test
xchg
mov
mov
mov
jnp
jns
mov
je
nop
pop
stos
pop
rcr
outs
push
lds
and
jns
push
adc
xchg
stc
rol
je
shl
jo
xchg
inc
mov
dec
and
push
adc
mov
lock
pop
popa
pop
inc
adc
in
jne
mov
pop
addr16
les
cmp
out
jmp
add
pop
ds
pop
test
mov
or
xchg
ficom
xlat
imul
in
fwait
imul
adc
sub
push
push
pop
imul
loop
fs
jp
add
jmp
out
adc
pop
xor
mov
in
xlat
dec
push
xor
push
pop
or
xchg
sbb
mov
adc
stos
sub
jp
pop
dec
mov
jp
cmp
outs
pop
rcl
cmp
push
sub
mov
pushf
rcr
je
cmp
cmp
lahf
cmps
mov
adc
mov
mov
lea
mov
stos
js
(bad)
push
add
and
adc
call
or
pop
or
xchg
ror
sbb
scas
add
or
pop
mov
cmps
lahf
push
cmp
scas
(bad)
movs
test
inc
jns
fldenv
xor
lea
jmp
fnsave
lock
inc
mov
jbe
or
out
sbb
dec
dec
cmp
inc
or
loop
iret
aad
movs
pop
(bad)
xor
sub
add
xchg
push
inc
xor
push
mov
adc
mov
pop
fdivr
addr16
rcr
mov
not
dec
js
cmp
sti
inc
mov
bound
les
ret
xchg
or
push
mov
cmp
xchg
fld
and
out
mov
jnp
sahf
dec
(bad)
adc
xchg
push
cmovns
rcl
iret
add
dec
push
or
or
or
xchg
jg
rcl
mov
push
push
xor
inc
sub
push
sbb
push
les
mov
clc
addr16
or
out
jne
mov
(bad)
and
int3
dec
in
int3
and
fld
inc
add
adc
adc
pop
xchg
dec
or
hlt
pop
jge
in
inc
pop
call
pop
pop
dec
fs
mov
dec
hlt
cmps
jo
xchg
adc
lods
fst
sub
lods
enter
xor
fsub
or
add
mov
mov
pop
nop
inc
inc
push
add
fisttp
adc
retf
inc
or
mov
adc
mov
adc
cmps
adc
rcl
inc
pop
or
or
pop
jo
sub
fwait
sbb
rcr
and
xor
add
out
iret
push
loopne
push
inc
push
mov
sub
xor
in
and
push
inc
call
imul
ins
mov
inc
adc
lahf
cmps
movs
ins
lahf
cmps
sbb
sub
icebp
pop
jecxz
push
sbb
aam
sbb
sub
jb
sti
aam
stos
pop
or
inc
scas
push
xor
pop
iret
inc
inc
loope
mov
fcomp
or
ret
daa
mov
add
mov
adc
push
xchg
push
test
mov
inc
jno
ja
inc
xchg
lock
dec
push
fadd
push
inc
stc
sub
xor
add
xchg
rcl
in
and
loope
mov
imul
pusha
mov
inc
stc
xor
loope
xchg
(bad)
ja
add
and
cmp
push
hlt
hlt
repz
mov
test
sub
clc
repz
sub
xor
scas
cmps
push
sbb
enter
cmp
js
mov
test
cli
cmp
push
push
nop
shl
enter
cmp
imul
xchg
ja
pop
sbb
(bad)
cli
inc
mov
sbb
call
inc
or
add
mov
mov
and
adc
sbb
js
cmp
adc
mov
adc
cmp
add
or
(bad)
inc
loope
xchg
mov
jg
ror
(bad)
jnp
add
loope
push
test
and
(bad)
hlt
adc
(bad)
jo
daa
mov
jae
add
je
popf
inc
clc
(bad)
mov
in
fs
mov
adc
sbb
jo
add
ret
xor
es
mov
test
jle
adc
scas
or
loope
nop
xchg
ins
cmp
pusha
bound
call
cmp
loopne
mov
xchg
js
shl
dec
xchg
inc
mov
push
inc
mov
mov
xchg
retf
lock
lock
out
sbb
dec
in
push
in
add
jne
shl
rcl
lods
dec
add
xor
add
test
movs
xchg
inc
stos
imul
clc
rcr
push
dec
call
bndldx
adc
push
mov
push
repz
and
les
xchg
call
enter
and
clc
xchg
add
in
xchg
stos
cld
lods
test
mov
xor
ret
dec
adc
cmc
icebp
push
loope
pusha
and
dec
xor
fistp
and
and
scas
cmp
in
orps
jns
or
mov
xchg
movs
inc
ret
xor
mov
hlt
cmp
(bad)
ror
adc
xor
adc
fiadd
mov
mov
dec
lahf
push
and
add
cmps
inc
ret
(bad)
cli
scas
aas
fst
adc
adc
sub
fldenv
neg
jae
cdq
or
or
mov
sub
(bad)
push
clc
push
adc
fistp
in
sti
mov
psubusb
and
push
shl
enter
in
xor
div
movs
psubw
pop
pushf
pusha
dec
xor
cmp
in
dec
in
aaa
cdq
call
mov
jb
push
les
imul
clc
std
test
pusha
aam
jge
aas
js
jge
pop
jne
mov
inc
inc
add
inc
push
pop
imul
push
test
test
and
std
dec
movs
push
jl
(bad)
fidiv
popa
adc
dec
mov
fs
cmp
add
int
lahf
inc
inc
lock
lahf
stc
out
push
and
dec
cmp
lock
enter
pop
jmp
inc
shl
xchg
mov
inc
pop
jle
int
mov
outs
aam
jl
in
clc
mov
std
pusha
icebp
int3
dec
inc
test
push
push
adc
jmp
jne
movs
lock
or
inc
hlt
xchg
bound
xchg
ins
push
fs
push
jo
push
fwait
inc
jl
adc
xor
ret
inc
mov
(bad)
cmps
inc
sbb
push
in
clc
sub
icebp
mov
sbb
xor
mov
cli
lock
mov
(bad)
push
lods
test
clc
test
mov
repnz
pushf
arpl
add
jo
mov
stos
xchg
cmp
pushf
mov
fcomp
stos
mov
daa
shl
cmp
fidiv
in
jmp
fadd
and
pop
mov
dec
sbb
dec
xchg
aas
lea
stc
hlt
xchg
stos
inc
cwde
adc
lds
jmp
add
sub
ins
add
pop
mov
jb
add
outs
loopne
ins
cld
(bad)
push
fiadd
push
pusha
inc
adc
jmp
aam
mov
xchg
inc
clc
dec
clc
adc
or
jmp
arpl
mov
or
cld
dec
sbb
jg
dec
mov
cs
lea
popa
ss
repz
retf
or
push
cmp
adc
and
inc
mov
mov
adc
jnp
test
dec
sub
hlt
inc
(bad)
mov
jb
enter
dec
fadd
mov
or
sbb
aas
jl
add
in
out
ja
pusha
push
mov
mov
pop
pop
ret
mov
pushf
sbb
in
in
loopne
pop
add
sbb
inc
dec
xchg
popf
(bad)
mov
cld
or
loopne
aad
test
les
retf
jle
les
pop
sbb
add
pop
(bad)
push
es
dec
xchg
adc
call
dec
out
js
add
mov
stos
pusha
push
or
rcl
aaa
and
mov
js
xchg
fidiv
mov
stos
inc
inc
cmps
jecxz
cdq
xor
test
mov
jb
scas
push
daa
icebp
lods
(bad)
test
dec
daa
aaa
je
sub
cmp
rcr
xor
push
es
mov
movs
xchg
push
adc
mov
dec
xor
fcom
mov
inc
cmp
push
adc
or
inc
jp
lds
xchg
xor
jge
mov
xchg
sbb
mov
je
cdq
add
lock
dec
jne
sub
and
mov
push
loop
dec
nop
(bad)
rol
dec
stc
add
xchg
mov
je
or
pop
mov
pop
or
or
xor
jmp
or
data16
fs
inc
mov
mov
sub
jmp
ss
adc
pop
xlat
xchg
(bad)
movs
and
mov
inc
mov
imul
inc
pop
mov
cmp
jp
mov
and
pusha
xchg
xchg
ret
scas
mov
in
inc
dec
mov
or
test
cmps
sub
push
rol
xchg
cmp
mov
fisttp
stos
push
loope
xchg
mov
cmp
adc
dec
and
mov
add
adc
sbb
es
scas
adc
popf
push
adc
push
in
push
(bad)
cld
iret
mov
leave
jae
movs
hlt
push
pusha
inc
es
add
scas
mov
out
sbb
cwde
nop
and
out
push
outs
(bad)
sub
adc
sti
mov
dec
and
pop
cmp
out
popa
xor
dec
pop
pop
push
test
sbb
jge
adc
in
push
add
cmps
clc
or
js
jnp
pop
cmp
inc
push
push
adc
test
pop
gs
pop
lds
daa
data16
or
jne
push
push
les
xsave
outs
jns
xor
jne
adc
dec
pop
mov
pop
xchg
call
es
mov
in
mov
ret
pop
repnz
mov
inc
in
inc
fidivr
test
mov
adc
sti
jne
sbb
xor
or
mov
in
loopne
fmul
push
sar
call
fild
test
xchg
and
call
leave
cmp
test
mov
xchg
mov
jge
test
cmp
cmpxchg
push
lock
add
hlt
aas
ret
ret
push
xlat
jge
jmp
add
adc
sbb
mov
or
pop
(bad)
in
aam
jns
test
fdivr
sbb
(bad)
cmp
in
popf
pop
add
sbb
imul
lea
jg
pop
shl
jle
xor
push
sub
mov
sbb
fwait
mov
jmp
in
add
add
dec
inc
mov
in
repz
out
push
and
call
loopne
(bad)
mov
cld
(bad)
sbb
xor
scas
or
xor
and
and
jp
imul
adc
ins
cmps
add
or
adc
or
dec
popf
aaa
(bad)
into
ds
sub
jne
pusha
pop
cmp
mov
inc
or
loop
pop
jb
or
cmp
(bad)
test
mov
hlt
and
push
adc
cmp
(bad)
push
shl
int3
adc
add
cmp
adc
or
in
xor
add
adc
popa
sbb
pop
daa
mov
pop
sbb
test
test
jge
xor
inc
loopne
nop
bound
inc
mov
daa
cmp
lods
std
mov
or
jb
leave
mov
inc
iret
add
sbb
and
add
add
dec
rcl
cmp
push
or
in
inc
out
sbb
add
and
(bad)
cmp
adc
jle
cmp
ss
or
sbb
sbb
ret
test
out
add
fild
sbb
or
out
sbb
add
mov
add
aaa
popa
mov
lods
shl
addr16
lods
xchg
inc
inc
add
fwait
scas
add
cmovs
push
cmps
dec
add
or
mov
iret
xor
sub
xchg
add
push
jge
ret
out
(bad)
mov
push
daa
sub
and
sar
pop
mov
call
or
and
mov
lods
add
inc
push
mov
loopne
cmp
pop
hlt
nop
cmp
jmp
mov
xor
das
add
add
xchg
pushf
les
inc
pop
add
test
es
push
or
mov
ret
xchg
cld
mov
fistp
cmps
enter
xor
(bad)
jge
inc
pop
and
or
or
fimul
inc
cmp
xor
adc
inc
sub
mov
(bad)
lock
inc
je
aaa
dec
popf
movs
rcr
dec
scas
cmp
aad
xor
test
xchg
adc
and
add
mov
adc
jns
(bad)
call
dec
xchg
cmps
nop
retf
clc
jns
adc
icebp
add
aaa
fsubr
mov
mov
xor
ror
jl
gs
outs
pop
adc
add
hlt
sub
ja
dec
fldenv
add
or
or
retf
adc
mov
jb
push
push
xor
xor
jnp
and
(bad)
stc
xor
adc
inc
pop
arpl
pop
ins
mov
and
lahf
mov
(bad)
pop
sub
mov
enter
inc
mov
add
fidivr
dec
inc
pop
add
add
push
cmps
xchg
xchg
pop
inc
pop
scas
neg
inc
and
dec
cmp
mov
jle
dec
mov
add
jmp
adc
xor
rcl
shl
lea
fucomp
cmp
jne
xchg
add
cmp
mov
xchg
jle
push
int3
dec
push
cmp
xor
pop
dec
cs
nop
pop
xor
lock
(bad)
jmp
das
mov
jb
fadd
imul
mov
mov
repnz
mov
(bad)
js
xchg
retf
mov
pop
jp
push
jne
push
scas
push
mov
and
mov
mov
sbb
mov
lahf
or
dec
push
fs
mov
mov
dec
shr
out
jle
fwait
push
(bad)
mov
xor
add
inc
xor
jg
fadd
push
fs
js
push
repnz
mov
pop
(bad)
shl
push
xor
xchg
jo
xor
jmp
loope
inc
push
outs
cdq
mov
cwde
mov
test
mov
test
sbb
mov
mov
adc
iret
ins
or
xor
cmp
dec
(bad)
ins
hlt
stos
pusha
dec
lock
dec
into
dec
ins
jnp
cmc
lahf
js
add
cmp
addr16
sbb
sbb
mov
mov
and
dec
scas
xor
imul
scas
cmp
cmp
sbb
loopne
into
sub
test
call
outs
pop
xchg
inc
cmps
mov
adc
or
sub
jnp
mov
mov
movs
pop
add
in
(bad)
adc
shl
jle
jmp
or
idiv
or
fmul
cmp
mov
lock
push
cmps
mov
(bad)
pop
xor
and
dec
in
xchg
pop
adc
push
cmp
retf
adc
outs
xor
shl
xchg
adc
retf
mov
ror
retf
pop
pop
(bad)
dec
retf
test
mul
pop
ins
stc
ss
cli
dec
add
jmp
js
rcl
lea
pop
(bad)
(bad)
and
popa
push
xchg
int3
cld
cmp
cmps
jb
fwait
inc
adc
push
adc
fmul
aas
or
and
pop
jl
or
sub
jnp
mov
pop
test
mov
inc
ins
mov
add
jl
push
mov
jne
jmp
mov
shl
jmp
out
lods
hlt
daa
mov
lea
ins
shr
in
es
cs
scas
fs
or
cmp
hlt
jne
sbb
movs
mov
cdq
add
jae
add
test
push
ret
int3
out
ror
je
sar
sbb
movs
push
shl
cdq
ins
dec
dec
push
dec
mov
shl
jmp
fs
sti
jle
push
sub
das
add
pop
ror
test
cld
ins
mov
lock
or
ins
or
add
ins
jg
sub
adc
repnz
cmp
jbe
xchg
mov
xor
xor
rcl
or
(bad)
popa
adc
add
jbe
cmp
into
ror
sbb
cmp
pop
test
add
(bad)
sub
sbb
or
add
sbb
js
ror
retf
mov
out
mov
or
pop
sti
ret
cdq
sub
push
mov
adc
lds
jo
lahf
in
xor
cmc
mov
aaa
inc
nop
jae
lahf
fcom
fnsave
clc
adc
mov
cmp
xlat
mov
mov
movs
in
addr16
(bad)
ror
movs
inc
scas
sar
add
sbb
icebp
push
mov
test
dec
and
mov
jnp
dec
aam
mov
daa
cwde
into
fadd
sar
push
adc
out
enter
add
movs
mov
ds
cdq
push
outs
int3
int3
adc
pop
mov
pop
loope
mov
loope
xchg
xor
test
cmp
push
in
push
push
or
icebp
mov
inc
jbe
fdivr
mov
loop
(bad)
cmp
xor
ds
imul
xlat
mov
add
fmul
inc
mov
or
lods
and
ins
add
and
hlt
loopne
nop
and
sbb
and
les
lahf
ins
fistp
xchg
jmp
(bad)
sar
cmp
enter
nop
xchg
or
fdiv
add
fistp
xor
jecxz
and
adc
add
jb
jecxz
push
adc
inc
psubb
adc
mov
or
adc
or
and
sbb
sub
popa
test
fs
aas
scas
mov
das
add
add
push
add
das
inc
lods
push
in
and
sbb
inc
dec
adc
add
sub
add
shl
and
inc
inc
and
not
retf
pusha
stos
cmps
xchg
stos
or
lods
cld
xchg
movs
push
dec
lea
dec
jo
inc
ja
or
or
jo
rol
add
hlt
push
add
lea
(bad)
xchg
adc
pop
test
cmp
xchg
dec
or
mov
in
pop
(bad)
cmp
std
jl
test
or
adc
push
cmps
xchg
xchg
fcom
cmp
adc
sbb
and
nop
push
cmps
xor
test
cli
adc
pop
or
adc
mov
packsswb
loopne
jo
fmul
mov
or
test
sbb
ds
push
enter
adc
dec
test
into
mov
cmp
or
mov
fidiv
sub
jle
or
jle
popa
or
ficom
push
cmc
and
add
mov
xchg
mov
xor
cs
cmp
pop
scas
int3
arpl
cmp
add
enter
add
lock
cmp
and
icebp
dec
add
addr16
xchg
sub
add
and
ins
in
nop
add
inc
mov
push
adc
mov
popa
xchg
dec
pop
push
xchg
mov
jnp
cmp
lock
and
clc
and
scas
sbb
ja
xchg
lahf
push
xor
push
adc
jl
cmp
test
fadd
jno
lock
outs
daa
sbb
lods
imul
sbb
jo
stos
(bad)
cmp
add
mov
inc
sbb
or
jmp
add
nop
scas
ret
inc
shl
push
hlt
ret
push
iret
das
in
push
push
add
sbb
ror
adc
dec
xchg
cmps
inc
inc
add
or
pop
(bad)
fadd
lods
movs
popf
ret
cmp
pop
or
rcl
and
and
jl
int
sar
add
sbb
push
or
pop
jo
add
add
or
ret
add
inc
push
ficomp
adc
pop
popa
add
xchg
adc
push
or
jo
xchg
mov
and
mov
push
add
lods
jge
mov
gs
add
or
pop
mov
call
add
cmps
hlt
pop
ret
pop
ucomiss
mov
ret
ja
in
sbb
daa
or
ret
ja
rol
adc
sub
pop
xchg
shl
sub
cmp
loopne
ret
mov
adc
lods
push
mov
pusha
lahf
push
out
pop
add
sub
or
mov
je
lea
adc
xchg
pop
call
cmp
clc
int3
adc
mov
out
scas
push
push
loopne
lds
push
mov
repz
add
fucomp
int
(bad)
mov
imul
ret
push
mov
retf
(bad)
jo
adc
or
push
lds
test
dec
sub
loope
push
rol
mov
pop
shr
sub
push
ret
or
jb
sbb
xor
mov
add
jae
test
mov
xchg
cmp
add
push
test
mov
cmp
sub
shl
outs
scas
dec
retf
sub
cmps
xchg
leave
xlat
pop
add
mov
mov
sar
hlt
rol
mov
jmp
jmp
stc
push
mov
and
adc
shl
test
fadd
in
movs
dec
jo
retf
adc
jle
imul
mov
in
push
and
inc
mov
adc
dec
outs
xor
hlt
dec
cmps
pop
fist
jne
and
sar
and
bound
adc
outs
ror
xor
mov
dec
dec
xor
cmps
add
test
inc
out
enter
cmp
lods
xchg
lods
sbb
xor
cmp
inc
lods
sbb
push
imul
out
adc
pop
cmp
neg
mov
mov
mov
test
test
pop
mov
das
add
sub
sbb
sub
dec
sbb
shl
add
mov
push
imul
daa
sbb
shl
jmp
and
mov
push
cmp
jo
shr
adc
xor
adc
sub
push
aaa
mov
and
pop
(bad)
dec
push
xchg
imul
out
loope
leave
and
jmp
test
mov
lock
xor
retf
data16
pop
xchg
cmc
leave
inc
jmp
xchg
jl
push
adc
int
lds
(bad)
pusha
jne
inc
adc
adc
mov
popa
aad
adc
add
or
sbb
test
or
push
sbb
aaa
fsubr
sub
pop
xchg
xchg
inc
call
sub
mov
and
inc
push
mov
sub
cmp
dec
movs
imul
cmps
inc
daa
lahf
cs
fcom
inc
sub
or
loop
div
sub
push
adc
nop
or
and
xchg
in
dec
aas
mov
mov
xchg
cmp
xor
adc
fistp
add
add
xchg
xchg
arpl
cmp
dec
adc
xor
call
xchg
sbb
dec
test
or
adc
mov
in
jae
and
jl
hlt
pop
pop
int
sub
js
bound
inc
repz
pop
(bad)
hlt
test
out
xlat
inc
inc
sbb
and
mov
mov
xor
mul
in
mov
xchg
sti
test
inc
dec
in
aaa
push
push
sbb
scas
sbb
push
push
add
enter
add
xchg
and
sbb
test
dec
push
and
mov
push
inc
retf
rcl
in
inc
push
lea
sbb
jnp
cs
mov
fcmovb
push
jbe
push
jmp
push
lea
dec
push
xchg
ror
repz
jp
xchg
cmp
adc
cmps
sub
sbb
shr
add
jne
daa
or
xor
scas
cli
cmp
shl
ret
cmp
and
cmp
xchg
dec
and
mov
jne
sti
ror
not
xchg
pop
sub
add
push
push
mov
or
push
std
cmp
shl
into
nop
lods
shl
call
aaa
popa
shr
add
call
repz
int3
dec
and
leave
mov
inc
vcvttps2dq
xor
pushf
or
mov
test
daa
sbb
push
xor
add
jge
scas
dec
(bad)
dec
sbb
test
stos
stos
aas
mov
imul
sub
rcr
pusha
popa
xor
dec
sub
push
inc
xor
dec
lds
rcl
push
leave
rol
cmp
inc
ja
adc
cli
stos
jnp
pop
sbb
adc
adc
cmp
adc
call
mov
push
xor
(bad)
jae
shr
lea
xor
xor
mov
fstp
dec
mov
push
xchg
mov
cmp
in
jo
or
xor
loopne
and
xchg
add
nop
cmp
lea
sbb
xchg
sbb
into
addr16
push
shr
mov
jg
jmp
sub
sub
iret
and
movs
pop
out
ja
sub
sub
(bad)
in
xlat
loope
dec
jbe
adc
mov
jg
sbb
fst
push
adc
fst
retf
add
cmp
mov
(bad)
je
cld
rep
mov
sub
xor
(bad)
movs
pop
or
jne
pop
or
sub
aam
test
mov
or
sbb
or
xor
push
mov
ret
jmp
inc
pop
mov
ins
pop
addr16
jne
pop
shl
adc
imul
push
call
sbb
pop
sar
xchg
fld
jb
push
adc
shl
dec
mov
push
jae
(bad)
jne
inc
ret
dec
aam
pop
jge
lods
sub
(bad)
sub
xor
push
push
aas
sbb
in
lds
xchg
mov
or
xchg
imul
or
push
push
movq
inc
inc
sbb
cmp
push
push
inc
dec
xor
push
jmp
mov
sub
or
adc
xor
scas
adc
adc
pop
inc
xor
dec
add
add
adc
shl
add
and
fidiv
inc
push
arpl
push
adc
ds
pop
mov
adc
cmps
daa
sbb
les
mov
push
pop
es
pop
add
cmp
xchg
dec
jo
test
cs
or
pop
push
jmp
and
shl
or
loopne
cmp
ror
mov
adc
dec
jle
adc
call
or
pop
neg
rol
xor
add
out
xchg
rcr
push
aaa
mov
xor
xchg
addr16
addr16
push
or
(bad)
sbb
daa
rcl
(bad)
pop
in
in
das
and
stc
jp
call
jb
(bad)
retf
fimul
lea
imul
loop
shl
je
into
dec
nop
xor
push
sbb
iret
add
test
ss
fistp
adc
aad
fld
dec
pop
dec
sub
loope
inc
add
cmp
and
pop
das
mov
push
xchg
sti
mov
enter
addr16
iret
cmp
jp
pop
pop
mov
(bad)
adc
clc
dec
nop
pop
dec
imul
test
xor
adc
adc
leave
inc
and
cmp
cmp
in
and
xlat
mov
dec
enter
add
xor
adc
mov
add
add
sub
aas
cmp
in
in
push
mov
rol
icebp
cmp
ja
fcmovne
adc
fcmovbe
jbe
cmp
je
adc
fcom
adc
push
mov
pop
jecxz
inc
push
div
pop
shl
lock
jmp
scas
pop
cmps
je
inc
pop
and
std
or
xchg
ret
in
shr
mov
dec
add
xchg
pop
mov
pop
lahf
jne
(bad)
push
cmp
add
leave
mov
sbb
adc
sbb
add
jg
add
mov
inc
pusha
sbb
adc
jecxz
adc
es
dec
stc
fnsave
in
inc
sbb
fld
xor
imul
test
aaa
or
xor
xchg
mov
or
adc
pop
int
ror
jae
push
pushf
fdivr
out
ret
adc
jno
je
inc
fiadd
pop
shl
add
je
and
test
dec
pop
push
dec
daa
into
pop
enter
inc
movsx
imul
push
inc
(bad)
pop
das
xchg
mov
pop
out
pop
popa
fsubr
or
iret
adc
cmp
pop
bound
and
dec
inc
xor
adc
addr16
sub
fistp
mov
imul
jge
popa
sub
xor
(bad)
nop
sub
(bad)
and
imul
adc
xchg
xchg
adc
sub
stos
and
lahf
hlt
pop
retf
dec
repz
cs
mov
or
jno
sbb
pop
out
fild
adc
jns
nop
retf
(bad)
add
adc
rcl
inc
cmovg
inc
jb
and
or
sbb
shl
cmp
scas
add
adc
xchg
(bad)
push
and
test
inc
or
push
xchg
jo
xchg
ja
mov
mov
add
xchg
sti
add
jo
sub
push
xor
ds
in
repz
das
push
dec
repz
stc
push
jae
in
shl
int
dec
xor
add
pushf
and
frstor
sbb
adc
mov
cdq
sbb
mov
in
adc
or
mov
add
mov
or
div
or
add
mov
add
and
ss
and
cld
xchg
scas
xor
mov
xchg
mov
inc
test
inc
shl
cmp
(bad)
in
jge
cwde
sbb
psllw
mov
adc
repz
ds
pop
mov
in
cld
mov
sti
mov
mov
jne
ret
and
test
mov
jnp
mov
pop
mov
stc
xchg
dec
push
aaa
fdiv
or
out
adc
and
push
pop
dec
in
xor
loope
jne
add
cld
cmp
in
xchg
sub
in
call
lock
pop
adc
test
dec
adc
jae
das
mov
lahf
cmc
mov
mov
push
mov
out
jge
push
push
and
pop
fsubr
push
jmp
(bad)
and
jmp
ja
pop
shl
or
enter
mov
or
add
mov
dec
jl
inc
adc
mov
repnz
push
cmps
xor
add
and
arpl
add
pop
and
pop
imul
dec
psadbw
or
(bad)
xor
cmc
adc
cmp
into
outs
sub
cld
adc
inc
jle
inc
mov
ds
and
pop
in
call
aam
cmp
popa
add
jg
sub
fs
into
in
pop
rcl
test
dec
cmp
out
pusha
stc
ds
inc
imul
repnz
(bad)
sub
clc
mov
xchg
cmp
pop
jmp
sbb
(bad)
call
mov
aaa
inc
or
mov
sbb
ins
cdq
mov
inc
outs
mov
mov
scas
and
xor
sub
xor
imul
and
pop
pop
in
rcl
les
dec
and
movhlps
inc
test
and
movs
(bad)
mov
imul
mov
popf
or
fimul
shl
aad
xchg
xchg
mov
inc
mov
repnz
jp
fs
ret
xchg
cmp
add
popa
loop
in
mov
nop
push
adc
push
stos
test
xor
pop
xlat
dec
inc
lds
pushf
push
or
sub
sbb
lods
and
in
pop
or
jmp
dec
or
jnp
inc
sub
fidiv
clc
push
cs
mov
sti
fcomp
adc
lods
(bad)
addr16
ja
fild
cli
push
jecxz
retf
ss
sub
dec
push
mov
scas
push
mov
mov
inc
(bad)
std
sbb
jp
cmps
enter
push
add
xor
push
xchg
sbb
adc
push
movs
add
lds
add
adc
adc
data16
adc
sahf
aam
push
xchg
xchg
outs
sub
dec
fs
fdiv
in
mov
dec
fadd
or
adc
aam
fadd
data16
aam
lea
popa
inc
mov
(bad)
das
mov
or
pop
sbb
(bad)
pop
int
vxorps
push
adc
ret
push
cmp
pop
cmp
and
js
sub
jge
sbb
jle
(bad)
movs
jno
jmp
sbb
enter
cmc
mov
lea
loop
aaa
shr
mov
iret
mov
cwde
and
jns
aas
shl
mov
dec
out
pop
xchg
push
enter
or
fcomp
loopne
xchg
adc
(bad)
lahf
ret
fs
and
neg
pop
dec
inc
shl
inc
cld
jge
jne
push
add
das
lods
out
cmp
outs
pop
jo
sbb
add
imul
push
dec
rcr
shl
fs
jb
lods
cmc
fsubr
fld
adc
lea
jns
mov
ja
push
movs
jb
cld
xor
push
add
mov
call
lods
mov
pop
dec
clc
rcl
dec
dec
sti
or
cmp
jne
mov
(bad)
or
sub
lar
rcr
aam
pop
mov
aam
sbb
les
jno
stc
inc
xchg
and
sbb
movs
adc
ror
lods
dec
sbb
call
mov
stc
jmp
hlt
inc
xor
adc
sbb
dec
pop
leave
das
mov
inc
mov
inc
mov
push
mov
cmp
test
inc
div
inc
jo
sub
(bad)
xor
add
xchg
outs
loopne
or
cs
fistp
adc
cmp
xchg
loope
jns
fdiv
cmps
sub
or
dec
cld
mov
add
test
int
data16
mov
add
jmp
fucomip
sar
push
hlt
ja
ret
inc
lea
jmp
xchg
push
mov
sbb
loop
add
or
punpckldq
cmp
mov
xchg
sbb
bts
jmp
aad
stos
loopne
movs
mov
popf
jmp
dec
pop
lea
push
push
cmp
adc
inc
add
loopne
add
add
sar
retf
pop
scas
in
pusha
and
dec
in
and
adc
add
cmc
push
push
adc
ins
sar
sti
call
xor
push
mov
or
or
stos
hlt
or
xchg
aam
ror
je
sub
jne
inc
shr
adc
and
or
lods
jae
add
jge
pop
push
je
push
adc
dec
xchg
adc
clc
or
test
xchg
inc
and
xor
dec
mov
loopne
rcl
sqrtps
inc
jb
shl
push
jne
sbb
in
fcomp
jmp
push
push
int
or
pop
daa
inc
loopne
pop
add
stos
rcr
ins
mov
jg
dec
fiadd
lock
arpl
inc
push
dec
push
xchg
dec
call
or
xchg
jge
das
sub
xor
add
rol
add
loope
mov
hlt
out
cmp
stos
and
dec
lods
es
rol
jp
pop
add
pop
pop
ret
xchg
add
enter
out
adc
loopne
dec
popa
mov
in
sbb
scas
shl
mov
mov
mov
fcmovnbe
rol
outs
std
loope
xor
cdq
add
sub
push
or
pop
repnz
gs
scas
jnp
xor
xor
out
inc
sahf
out
pop
dec
dec
push
lock
pusha
jb
xchg
out
aaa
jns
ds
mov
mov
jmp
jns
and
dec
push
pusha
mov
pop
pop
jno
sbb
in
(bad)
and
add
xor
leave
or
add
mov
fldcw
pop
div
push
adc
retf
test
pop
jmp
mov
mov
fidivr
xchg
sub
sbb
ret
movs
ror
cmp
adc
outs
in
sub
lods
icebp
or
inc
jno
icebp
iret
into
push
add
or
je
fisub
test
dec
(bad)
hlt
enter
adc
out
shl
enter
jmp
and
inc
fs
dec
push
pop
repnz
and
mov
std
or
mov
jae
call
cmp
mov
cwde
outs
loope
cli
pop
test
inc
or
pop
inc
pop
call
cmp
mov
jl
scas
cwde
lods
adc
sar
adc
lods
xchg
out
jge
test
push
pusha
retf
cmp
dec
push
call
imul
dec
push
into
lea
cmc
mov
jae
inc
add
call
adc
jnp
inc
sbb
inc
sbb
xor
xchg
retf
push
scas
rcl
push
push
mov
cli
stc
or
add
and
dec
adc
das
cmp
add
les
pop
or
mov
sbb
push
test
dec
retf
and
or
inc
and
in
cmc
adc
adc
mov
pushf
pop
or
sub
push
pop
or
movs
cmp
inc
lods
mov
shl
in
xchg
ja
fstp
rol
mov
cmp
fcomp
ret
lock
test
mov
mov
ret
xchg
dec
into
sbb
mov
sar
xor
out
inc
movs
pop
jl
aad
push
mov
xchg
jle
cs
repnz
mov
popf
xor
call
enter
outs
xor
(bad)
inc
pop
sub
mov
gs
aas
sbb
xor
sbb
jmp
out
mov
test
mov
xchg
push
mov
xchg
out
jns
int3
in
dec
div
mov
out
fsubr
cs
push
and
or
in
pop
mov
mov
fadd
inc
adc
out
shr
test
movsx
aad
and
cs
adc
push
mov
xchg
mov
ret
xchg
cld
int3
and
add
sub
scas
clc
(bad)
push
add
popf
ins
or
div
iret
sub
ret
jmp
push
lea
fwait
push
inc
sbb
sub
and
test
jg
add
add
stc
mul
test
call
mov
adc
sub
unpcklps
sbb
fcom
add
dec
js
movs
cmp
inc
jge
add
stos
xor
xor
dec
sbb
push
imul
xor
adc
or
sbb
test
mov
or
inc
icebp
wrmsr
and
dec
cmp
push
punpckhbw
add
or
fmul
add
adc
inc
jo
sbb
cli
mov
rcl
lds
(bad)
jg
push
add
cmp
cmp
sbb
aam
mov
mov
push
aad
mov
sub
pop
idiv
dec
or
dec
clc
xchg
(bad)
dec
retf
push
mov
add
add
mov
and
mov
push
pop
xchg
fcomp
xchg
xchg
cld
pop
add
lds
xchg
(bad)
push
ret
cmps
clc
cmpxchg
inc
mov
je
clc
xchg
ret
push
cli
mov
xor
add
adc
movs
mov
std
sub
mov
in
mov
jb
add
dec
jmp
inc
movs
sub
test
add
mov
jns
or
lahf
ror
in
mov
inc
push
fisub
jne
test
clc
adc
push
push
jns
sbb
push
mov
loopne
scas
jle
push
outs
xor
(bad)
ins
ins
fmul
cmc
xor
in
pop
xchg
and
jbe
and
rol
push
add
cld
inc
mov
or
xor
pop
or
dec
adc
inc
(bad)
popf
sti
mov
cld
sbb
popa
and
(bad)
mov
hlt
mov
movs
rcr
leave
xchg
loop
xor
daa
icebp
rcr
adc
nop
les
(bad)
cdq
je
cmc
inc
add
cdq
jmp
pop
icebp
enter
and
dec
cmp
mov
or
adc
or
sub
sbb
test
test
sahf
mov
rcl
fild
sbb
sti
ja
ja
out
in
sbb
jecxz
xchg
sbb
lock
shr
rcr
rol
aam
adc
test
add
aam
adc
loope
sti
sub
and
shr
je
test
jmp
loop
or
sub
mov
add
popa
psubsb
jl
cmp
mov
scas
stc
jo
popa
daa
sti
and
and
mov
sbb
int3
pop
push
or
adc
outs
pop
lds
push
or
xchg
cmp
sahf
xor
add
pusha
fmul
test
es
sbb
xor
lds
cmp
add
sub
pop
inc
repz
js
inc
(bad)
mov
and
inc
mov
xor
push
push
sub
inc
adc
dec
movs
cmp
pop
jmp
fld
movs
push
push
or
inc
and
lock
stos
and
(bad)
and
push
adc
push
mov
repz
das
jns
adc
xchg
cmps
dec
call
loopne
enter
mov
outs
pop
dec
xor
xor
sbb
loopne
movs
adc
mov
cmps
and
lds
xor
shl
cmp
and
hlt
xchg
sahf
push
inc
pop
adc
mov
std
and
cld
sbb
cld
push
add
repz
pop
stc
push
test
in
adc
aas
iret
pop
xor
pop
test
adc
sti
(bad)
loopne
cwde
in
sbb
in
mov
loopne
clc
je
xchg
push
cmp
mov
sbb
cmc
test
sub
gs
iret
xor
aam
pusha
add
imul
das
mov
sub
sbb
jl
in
cmp
adc
add
mov
jns
xchg
jl
mov
xchg
sbb
add
or
sbb
or
scas
inc
add
push
push
test
les
mov
mov
ins
mov
or
mov
mov
fsubr
sbb
ds
call
mov
call
pop
test
mov
pavgb
mov
in
in
loopne
mov
mov
adc
ret
test
scas
pusha
xor
retf
mov
nop
mov
push
test
xchg
adc
ja
out
in
clc
ja
jl
or
sbb
in
dec
push
outs
inc
cmp
add
xchg
dec
sti
add
push
add
adc
xor
pop
mov
mov
test
lods
in
xor
adc
push
inc
shr
sahf
inc
jns
adc
sbb
dec
sbb
mov
mov
mov
inc
or
mov
adc
sub
aam
ret
ret
div
mov
ss
cmps
add
add
scas
test
fld
adc
out
adc
movs
add
call
sub
les
clc
sbb
mov
loop
lock
retf
mov
cli
popa
push
retf
mov
push
hlt
inc
dec
cdq
sbb
cmps
xchg
out
mov
les
adc
mov
mov
(bad)
jmp
fiadd
or
leave
pushf
or
cmp
sbb
adc
push
fcomp
sub
cmp
push
lock
inc
cmp
sbb
dec
add
cmp
cmp
mov
pop
(bad)
sub
lock
je
add
or
and
movs
pop
enter
jb
or
fld
inc
add
add
fld
jg
add
inc
in
add
push
mov
popa
daa
xchg
aad
xchg
leave
and
jno
sbb
iret
cmp
imul
ret
xchg
sbb
xchg
stos
pop
inc
and
dec
dec
jmp
(bad)
push
or
and
mov
push
mov
aaa
call
inc
dec
push
dec
enter
jge
adc
sub
or
push
or
loopne
mov
pop
jl
loope
xor
lock
sahf
mov
push
in
xor
dec
and
cmp
imul
sub
pop
bound
add
jo
add
sbb
ja
mov
mov
shl
or
jg
in
cmp
inc
stos
xchg
fwait
or
push
jmp
jb
sbb
cld
bound
(bad)
mov
test
inc
inc
adc
sbb
rol
xchg
push
xchg
loope
inc
and
or
push
pop
icebp
mov
sub
out
sbb
or
inc
sbb
sbb
hlt
ror
jne
cdq
ins
and
lock
loopne
cmp
cwde
and
dec
cmc
cmp
cmp
ret
sar
(bad)
test
outs
test
stos
and
push
pusha
sbb
clc
clc
or
add
mov
and
ss
jge
add
call
or
adc
jae
push
ret
iret
jo
add
sub
inc
es
ins
das
(bad)
or
sub
lock
jno
add
pop
test
adc
cli
cmp
je
mov
jno
add
xor
sbb
das
lea
fcomp
xchg
adc
(bad)
bound
inc
mov
pop
or
lock
and
loopne
pop
pop
cs
jmp
and
add
mov
dec
xchg
sbb
popa
mov
mov
pop
adc
sub
lock
loopne
mov
push
xor
movs
inc
xchg
lods
xchg
xor
mov
pop
dec
lock
or
add
cli
adc
mov
dec
mov
mov
loope
xchg
sub
ret
cmp
int
xchg
scas
test
jge
cmp
inc
dec
stc
or
jp
add
add
add
repnz
add
leave
sub
push
jle
cmp
xrelease
push
iret
rcl
adc
dec
adc
test
clc
mov
dec
movs
sub
xor
aam
adc
mov
pop
enter
add
or
adc
xchg
pop
push
inc
in
or
xchg
mov
and
es
adc
add
inc
adc
inc
add
jno
mov
or
push
and
arpl
and
add
sub
sub
mov
pop
pop
bound
cmovne
fcomp
or
sbb
add
add
(bad)
movs
in
dec
mov
daa
unpckhps
psubq
std
rcr
mov
mov
push
movs
rol
sub
mov
movs
(bad)
into
mov
imul
gs
inc
leave
das
push
test
js
nop
adc
xlat
cmp
pusha
imul
rcl
pop
mov
iret
inc
pop
xchg
pop
js
cmp
jo
imul
mov
ds
mov
fisttp
sti
imul
xchg
dec
jbe
mov
adc
hlt
inc
repnz
push
out
rcl
test
lock
and
xlat
cmp
(bad)
push
or
mov
pop
mov
push
pop
sbb
dec
xchg
or
test
popf
mov
adc
add
mov
push
lahf
movs
mov
mov
add
cmp
mov
adc
rol
pop
ss
popf
and
(bad)
cmc
fimul
mov
mov
lock
push
cmp
icebp
or
int
add
pop
mov
pusha
das
jnp
cmps
mov
je
cmp
jp
or
push
sbb
add
mov
ret
and
adc
mov
lock
cwde
or
push
mov
add
add
cmp
and
adc
xchg
pop
jo
outs
dec
push
mov
pop
pop
push
push
add
dec
adc
or
push
sbb
cmp
pop
add
xor
in
daa
fsubp
ja
sub
inc
jo
hlt
les
std
aaa
xchg
clc
push
xor
sbb
xchg
add
js
shl
jbe
iret
and
ret
adc
push
pop
sbb
bound
ds
inc
das
movs
aas
dec
out
inc
sbb
pop
loope
fild
sub
push
xor
add
push
xchg
adc
mov
cmovae
mov
xor
adc
add
movs
dec
(bad)
mov
xor
aad
jmp
and
adc
add
pop
lods
inc
or
movs
nop
adc
das
nop
sbb
dec
leave
adc
xor
lds
add
xor
in
xchg
cmps
push
xor
mov
xor
hlt
xchg
repnz
ss
hlt
mov
and
and
pop
fs
shl
sbb
inc
xchg
adc
mov
call
in
lock
dec
repnz
data16
inc
ss
and
int
or
dec
mov
inc
aaa
shl
add
pop
cmp
cld
sbb
loopne
imul
(bad)
lock
add
leave
loop
cmp
pop
int
jb
in
mov
and
rcl
mov
dec
dec
clc
xor
rcl
movs
ret
out
jecxz
mov
sub
pop
sbb
repz
push
inc
sbb
or
sbb
repz
and
ss
push
sub
int3
pop
jmp
adc
inc
imul
and
add
pop
imul
and
sbb
push
outs
mov
rcr
imul
aam
push
mov
mov
jg
push
popf
or
push
sub
and
dec
add
xor
sti
push
ja
sbb
and
out
data16
mov
push
push
and
adc
add
add
cdq
mov
lahf
imul
jb
jl
or
fimul
je
cmp
scas
rol
jg
shl
rcr
sbb
addr16
in
popa
cmp
rcl
or
push
lahf
push
mov
icebp
pushf
pop
push
cwde
int3
xor
in
mov
shl
xchg
in
mov
mov
pop
xor
sbb
out
inc
ret
jne
fsubr
daa
dec
sbb
mov
inc
sbb
jecxz
adc
dec
pop
pop
pop
or
pop
inc
push
imul
push
cwde
fcomp
mov
push
or
test
bound
sbb
or
movs
loope
or
in
hlt
mov
sbb
pop
mov
adc
mov
call
test
and
dec
sbb
ffree
sub
lock
mov
mov
mov
enter
in
inc
dec
out
or
pop
xchg
and
xchg
fwait
add
xor
pop
add
push
jmp
stos
jmp
jb
sub
dec
sbb
sub
cmp
pop
mov
inc
add
mov
add
and
add
inc
add
into
cdq
sar
jle
adc
aam
add
shr
mov
or
and
call
in
mov
jle
call
cmp
shr
rol
jmp
dec
jne
pop
or
jo
or
lock
pop
mov
leave
mov
and
add
pop
add
push
and
push
jne
inc
inc
mov
or
xchg
aaa
adc
and
sar
aas
or
jmp
mov
das
(bad)
mov
pop
adc
mov
shl
rcl
push
push
add
adc
shl
(bad)
arpl
pop
jno
push
cmp
dec
mov
jmp
or
scas
inc
rcr
xchg
loop
pushf
sahf
push
sbb
popa
add
ret
push
mov
or
test
jbe
mov
scas
xor
lods
and
add
(bad)
pop
inc
je
mov
pop
xchg
cpuid
pop
dec
mov
inc
dec
and
and
mov
andps
or
pop
inc
and
dec
push
add
jns
sub
sub
adc
inc
cmp
add
and
adc
jg
mov
dec
dec
pop
mov
push
mov
pop
and
mov
sti
sub
adc
inc
adc
mul
cmp
(bad)
(bad)
mov
sub
xor
shl
ret
cmp
jne
push
cmps
mov
and
and
xor
mov
mov
outs
push
xor
cmp
mov
int3
mov
lods
(bad)
pop
int
out
add
dec
cmp
(bad)
xor
add
xor
or
(bad)
adc
push
lods
popa
inc
stos
std
adc
sbb
cmp
push
mov
or
enter
cld
imul
outs
sub
jmp
ret
lea
call
ins
clc
or
mov
xchg
daa
and
out
push
and
fld
sbb
or
jg
cmp
jge
xor
ins
jne
pushf
xor
pusha
sbb
mov
dec
and
and
arpl
sbb
inc
inc
jle
popa
cmp
loope
into
jmp
sbb
add
in
inc
adc
sbb
movs
add
jg
les
adc
mov
add
rcr
mov
(bad)
or
jmp
add
and
pop
sub
xor
popa
add
jae
jg
out
fstp
test
adc
sub
inc
out
jge
xor
mov
inc
ret
sub
mov
inc
or
xlat
and
sub
je
or
push
mov
xor
loop
sub
(bad)
sbb
or
add
push
retf
mov
rol
fs
sbb
dec
add
jl
push
fscale
adc
or
pushf
inc
jnp
cmp
or
push
cwd
mov
addr16
push
ins
cmp
add
lds
lock
inc
add
mov
lock
and
popa
jmp
imul
(bad)
or
sbb
add
(bad)
outs
(bad)
pop
mov
adc
sbb
jne
or
mov
shl
push
sbb
jecxz
jnp
push
add
cld
xor
mov
sar
jnp
imul
cmp
test
mov
mov
adc
cmp
iret
dec
or
mov
add
xchg
test
xlat
js
xchg
cld
adc
cmp
popa
pop
js
inc
adc
add
addr16
mov
gs
push
packsswb
dec
mov
sub
add
sbb
mov
jge
or
test
iret
or
or
pop
cld
movs
pop
loop
dec
adc
mov
adc
mov
sub
jmp
push
push
(bad)
out
loopne
gs
mov
fld
adc
push
daa
out
adc
daa
or
mov
jnp
aas
or
sbb
push
je
push
inc
mov
inc
jns
pop
inc
es
push
and
shr
and
sbb
outs
inc
or
ja
std
retf
xchg
sbb
inc
adc
cs
push
push
loop
mov
out
inc
enter
xchg
mov
fisub
jle
sbb
push
pop
(bad)
int
sbb
inc
xor
mov
dec
lock
sbb
jns
push
scas
add
pop
(bad)
sub
sbb
dec
pop
dec
aas
sbb
or
mov
sbb
mov
shl
mov
push
xchg
jle
or
or
fcom
inc
push
push
push
out
test
push
adc
lods
repnz
mov
loopne
jge
dec
or
sbb
fisub
sub
adc
cmp
pop
xlat
xor
inc
shl
dec
pop
pop
sti
out
xlat
les
mov
adc
mov
xor
fld
imul
sub
sbb
dec
sub
xor
cmp
into
xchg
daa
pop
addr16
ficom
daa
pop
or
dec
mov
inc
outs
mov
xor
call
loopne
inc
or
ss
mov
test
sub
inc
imul
cmp
pop
sub
dec
xchg
lds
adc
rcl
loope
clc
arpl
and
sub
sub
adc
retf
push
retf
xor
push
xchg
add
jne
add
mov
dec
cmps
sub
sti
enter
cmp
and
inc
jb
sbb
shr
and
add
sub
sbb
and
loopne
fs
xor
push
xor
mov
add
jbe
jbe
xor
cmp
xchg
adc
inc
mov
ss
sub
add
fidiv
push
cmp
add
std
inc
jl
mov
pop
add
shr
cwde
dec
mov
and
and
je
icebp
pusha
lds
mov
add
jno
arpl
je
pop
pop
cmp
je
inc
pop
or
xor
mov
outs
test
cli
lahf
adc
inc
rcl
pop
xchg
inc
dec
lahf
fiadd
push
and
ins
dec
and
ret
sbb
and
sbb
pop
inc
cmps
push
iret
push
lock
add
(bad)
aaa
dec
jne
add
lock
mov
gs
adc
das
cmc
pop
sbb
mov
sub
movs
mov
jno
mov
jge
or
pop
movs
mov
inc
frstor
sbb
aad
push
dec
and
inc
xlat
and
add
mov
cmps
mov
gs
mov
call
je
pop
and
jmp
push
movs
pop
push
imul
mov
push
sub
adc
call
int3
jl
retf
adc
pop
(bad)
sahf
or
sti
dec
pop
out
retf
je
test
push
adc
jnp
xchg
mov
test
mul
sbb
push
or
pop
mov
mov
sub
sbb
push
or
outs
cmps
arpl
hlt
or
pop
sbb
ja
sbb
addr16
push
adc
push
dec
lds
xor
or
dec
aad
or
loopne
int
lahf
js
cmps
je
xchg
jg
pop
or
ja
sbb
les
cwde
je
inc
mov
mov
inc
adc
test
pop
adc
movs
retf
cld
adc
fsubr
(bad)
imul
jbe
daa
sbb
xchg
inc
cmps
push
sbb
push
adc
fst
repz
push
mov
mov
add
pop
imul
movs
shl
lds
icebp
pop
adc
shl
jg
adc
adc
arpl
xor
sbb
add
xchg
dec
mov
ja
jb
xchg
verw
xor
inc
or
dec
cmp
adc
mov
add
js
fistp
pop
mov
lahf
imul
inc
cwde
dec
and
rcl
sub
je
fdiv
sub
sbb
inc
jmp
inc
sub
push
cmc
test
pop
loopne
xor
movs
pop
or
and
adc
cmp
adc
js
add
jle
push
aam
pop
lods
ins
(bad)
enter
movzx
(bad)
jle
dec
and
test
push
or
fadd
push
add
test
adc
mov
add
ja
daa
mov
xor
push
or
xor
pop
(bad)
pushf
ss
repnz
xor
(bad)
(bad)
into
cmps
xor
pop
mov
add
hlt
mov
sub
adc
loope
rcl
fldcw
push
(bad)
xlat
adc
cmp
pop
push
push
and
fwait
les
lahf
cmps
or
mov
lea
cmp
push
push
xor
push
xor
data16
popa
jg
xchg
sar
inc
adc
xchg
retf
xor
inc
sbb
pop
xchg
and
pop
add
pop
out
sub
outs
add
inc
sub
aas
not
lods
adc
xchg
outs
jnp
int3
jge
aaa
add
aaa
inc
inc
ja
adc
scas
out
arpl
mov
retf
dec
xchg
leave
shl
dec
cmps
and
adc
inc
mov
push
lock
sub
pop
jno
xchg
(bad)
loop
add
and
mov
es
je
xchg
xchg
das
popf
sub
inc
inc
xor
movs
sub
adc
sub
jo
inc
add
sbb
dec
or
mov
ins
push
shl
hlt
retf
push
dec
fistp
push
pop
xor
das
ds
cmp
add
cmp
test
retf
adc
xor
inc
add
or
hlt
hlt
hlt
mov
sahf
div
xchg
push
popf
cmp
cs
sub
ss
ja
scas
push
mov
sysenter
fld
iret
cmp
je
cmp
mov
adc
shl
cmps
out
push
add
test
scas
(bad)
popf
and
stos
push
or
pop
xchg
scas
and
mov
add
or
jmp
fnstcw
je
add
jne
jne
jno
or
sbb
sbb
es
sbb
pop
or
(bad)
pop
xchg
cli
cdq
xor
or
adc
dec
fsub
sub
rol
inc
add
xchg
inc
pop
cwde
aaa
call
outs
aas
lock
xor
sub
mov
outs
xor
(bad)
jl
lea
shr
and
stos
adc
fdivr
adc
or
or
es
push
test
pop
test
mov
dec
test
(bad)
int3
jo
icebp
add
imul
pop
add
stos
xchg
pop
xchg
or
les
das
fadd
cmp
add
pop
les
push
pop
fisttp
push
ja
jmp
arpl
cmp
sbb
push
cwde
or
xor
sbb
push
inc
and
(bad)
sbb
js
push
dec
or
pop
mov
xor
pop
dec
adc
js
pop
adc
adc
or
adc
pop
sub
mov
or
in
fs
aas
mov
and
push
xor
inc
inc
adc
jge
fnstsw
jg
push
dec
cmp
adc
jo
mov
jnp
dec
mov
sar
and
and
add
add
xor
sbb
test
aaa
add
stos
push
sub
sub
add
ja
and
popf
cmps
mov
pop
frstor
mov
adc
les
adc
push
jo
aam
add
fmulp
mov
mov
sbb
cmp
push
add
mov
sbb
movs
pop
pop
push
or
xor
movs
dec
or
push
and
jp
push
sbb
pop
dec
add
inc
mov
push
sub
jmp
fcom
push
pop
cmp
xchg
xor
int3
mov
sub
jo
(bad)
(bad)
pop
in
sub
inc
es
or
and
rcl
sub
cmps
or
lea
xchg
sti
push
inc
push
fidivr
adc
add
je
sbb
cdq
daa
fbstp
dec
jge
adc
mov
mov
and
loop
mov
pop
ds
das
adc
sbb
add
add
sbb
pop
dec
xchg
les
sbb
test
dec
mov
adc
add
and
and
mov
xchg
dec
hlt
hlt
dec
ds
dec
add
pop
les
adc
xor
or
imul
stos
pop
(bad)
imul
and
sub
adc
cmp
and
cmp
or
mov
mov
jge
add
inc
or
push
add
ror
adc
sub
or
sbb
sbb
add
pusha
adc
fdiv
aas
sub
mov
mov
mov
xchg
xchg
mov
xchg
xchg
lock
push
aaa
ins
xor
push
sub
jecxz
jo
mov
xor
mov
jno
lock
aas
retf
xlat
ins
loop
xchg
int
jbe
adc
std
sar
mov
xchg
inc
inc
jecxz
mov
ret
lahf
cmp
mov
mov
xchg
push
dec
lods
addr16
call
cmp
xlat
dec
cmp
pop
je
jnp
xor
add
or
icebp
out
inc
pop
fdiv
dec
push
pop
xchg
pop
lods
ins
mov
cmp
test
int3
adc
xor
mov
push
mov
adc
fs
ficomp
cmp
jne
push
or
je
cdq
cdq
push
sbb
xchg
ror
sub
xchg
pop
out
dec
jecxz
shr
es
mov
push
cmp
push
test
lds
xlat
shl
fwait
hlt
sbb
(bad)
adc
and
into
dec
(bad)
leave
jo
iret
das
cmp
cmp
push
movs
or
inc
mov
push
mov
inc
and
push
and
leave
add
aad
enter
stc
test
and
xchg
fcmovbe
inc
inc
mov
or
add
xor
dec
adc
ficomp
mov
or
mov
add
sbb
cmp
cmp
aas
inc
adc
jle
add
add
out
pop
adc
sbb
gs
and
or
or
sahf
out
retf
ss
movs
sti
xor
push
or
pushf
dec
pushf
mov
cwde
hlt
add
pusha
dec
xchg
pop
xlat
pop
sti
addr16
and
pop
scas
mov
fcmovu
pop
push
adc
or
jo
inc
push
add
repnz
inc
loopne
add
sub
loope
sbb
pop
(bad)
mov
sub
sub
in
jo
rcr
retf
test
nop
pop
or
add
adc
add
adc
stos
inc
jmp
jbe
sti
inc
je
lahf
jg
hlt
mov
and
or
rol
movs
mov
sub
or
lock
pop
ins
sub
add
cs
add
or
push
push
xchg
inc
pop
ror
das
mov
xor
adc
pop
push
and
js
and
xor
jne
fdiv
pop
loopne
or
cmp
push
jb
shr
cmp
lock
das
adc
sar
aas
or
pop
(bad)
push
jp
or
ja
jo
adc
adc
add
sbb
test
loopne
xchg
je
call
mov
ds
ret
mov
out
inc
or
push
rol
sbb
pop
addr16
fucomip
hlt
mov
add
sbb
cmc
sub
or
not
xchg
jl
xchg
fild
mov
gs
jmp
add
retf
movs
push
jmp
sbb
in
cmp
bound
imul
aaa
or
xchg
pop
and
cmp
aaa
mov
and
fs
inc
mov
imul
mov
outs
sbb
add
adc
cwde
test
cwde
pushf
dec
mov
mov
imul
or
cmp
cmp
sub
test
lods
adc
inc
(bad)
pop
mov
dec
pop
in
dec
and
xor
inc
jb
sub
mov
rol
sub
dec
inc
xchg
cmp
shl
cmp
pop
jne
loop
cmps
(bad)
jle
dec
dec
adc
retf
inc
adc
jl
ror
test
sbb
sbb
inc
adc
push
add
add
fcmovnb
hlt
or
add
jnp
pop
ins
test
loope
mov
pop
or
xchg
iret
dec
jne
mov
and
jp
sbb
push
dec
and
shl
xor
mov
(bad)
mov
sbb
rcr
test
pop
pop
inc
mov
push
pop
and
cld
out
or
lock
sbb
ins
and
lea
push
mov
dec
movs
inc
add
dec
int3
push
daa
jmp
sub
inc
bound
popf
cmp
add
inc
shr
adc
enter
iret
dec
pop
inc
data16
inc
sub
or
nop
stos
pusha
leave
inc
pop
cmp
mov
call
jne
cmovnp
inc
nop
shl
mov
and
pop
mov
pop
cmp
dec
xchg
inc
mov
mov
mov
dec
jl
mov
add
push
adc
push
sbb
test
bound
(bad)
ficom
add
xor
(bad)
aaa
adc
outs
ja
push
inc
loopne
mov
mov
ss
push
mov
hlt
mov
gs
arpl
mov
dec
fs
mov
fist
cmp
jne
adc
das
dec
lods
ret
inc
ds
test
inc
mov
test
(bad)
sbb
dec
dec
clc
jne
outs
push
movs
(bad)
adc
stos
imul
scas
cs
call
cld
xor
mov
mov
sub
inc
xor
in
cmp
mov
ficom
inc
inc
dec
pop
dec
cs
xor
xchg
das
jmp
add
adc
and
cmp
ret
fistp
push
cmps
ins
mov
inc
or
lock
adc
push
lea
je
mov
cwde
xor
or
ins
lea
cmp
pop
or
lods
jmp
dec
leave
and
ss
or
mov
add
jp
jnp
aas
es
jl
mov
mov
xor
mov
or
adc
aam
cmp
add
and
sbb
mov
sub
jmp
fs
enter
pop
xor
pop
or
pushf
sub
add
jl
dec
jne
pop
xchg
(bad)
ss
aas
ret
or
cmp
jne
mov
mov
es
add
mov
dec
sbb
mov
mov
out
ss
cmp
cmp
ret
jecxz
movs
loopne
and
mov
cmp
add
mov
daa
lods
mov
hlt
call
mov
ins
mov
(bad)
popf
sub
loope
dec
ins
cmps
cdq
mov
cld
(bad)
call
daa
add
or
cld
shl
pop
cld
jmp
push
fdiv
adc
popf
jle
fist
pushf
push
jns
retf
(bad)
inc
adc
ja
mov
addr16
mov
or
call
test
xchg
ss
int
mov
lods
and
test
jo
sar
sub
fs
cmp
xlat
pushf
cwde
jp
xchg
mov
push
add
enter
xchg
sbb
(bad)
add
fidivr
rol
mov
or
xor
daa
lea
(bad)
push
lahf
adc
mov
fadd
mov
mov
push
push
adc
fwait
cmp
or
or
and
addr16
cdq
mov
fadd
js
sub
mov
push
mov
xlat
call
xor
pop
mov
push
sub
fcom
cmp
fst
cmp
lds
test
pop
rol
ret
sub
outs
das
and
inc
adc
fidivr
mov
int3
test
(bad)
inc
inc
sbb
push
lock
call
or
jecxz
lods
lds
jbe
mov
mov
dec
jmp
std
vmwrite
mov
pop
sub
add
mov
inc
inc
sbb
sub
shl
(bad)
sub
scas
ins
jbe
or
sub
shl
jno
lds
fild
jp
mov
inc
ret
adc
sbb
add
push
repnz
ret
push
inc
mov
sub
ja
xchg
cmp
mov
xor
inc
add
push
add
jecxz
cmps
ss
nop
iret
push
jnp
call
mov
and
test
add
push
push
mov
adc
je
je
mov
fs
test
dec
adc
lahf
int3
pop
and
xchg
jmp
and
push
cmp
push
mov
out
adc
jbe
pop
mov
add
cmp
jecxz
push
add
adc
mov
add
test
add
(bad)
and
sub
sbb
bound
pop
mov
lahf
push
test
pop
pusha
pop
dec
mov
dec
add
add
test
xor
and
pop
ins
lods
pop
ret
mov
xor
mov
jb
clc
nop
push
mov
int3
popf
shl
xor
cmp
sbb
test
mov
fwait
fwait
jp
xchg
adc
sbb
scas
jp
dec
push
mov
cmp
scas
add
sbb
loopne
stc
sbb
push
push
mov
fs
cmp
or
arpl
jo
cmp
leave
retf
or
movs
mov
inc
fwait
mov
cdq
fisub
sbb
movs
cmp
test
int3
out
xchg
mov
shl
cs
(bad)
inc
mov
jns
fild
nop
addr16
xor
sub
pop
inc
cmp
mov
xor
pop
into
xchg
push
xchg
inc
or
clc
and
cld
pop
sbb
jecxz
les
push
stc
repz
call
in
or
call
in
jne
xor
jne
mov
push
gs
mov
icebp
pop
jb
inc
xchg
inc
cwde
lock
and
rol
sahf
iret
push
push
ret
add
inc
cld
rcl
pop
inc
dec
rol
cwde
(bad)
jo
sar
pop
and
lock
fdivr
out
pop
pop
adc
(bad)
ret
loopne
movs
jmp
cmp
pop
repz
in
(bad)
nop
or
in
cmp
pop
pop
dec
call
call
popa
leave
sbb
imul
mov
jb
jns
pop
call
enter
daa
bound
(bad)
lock
pop
call
jns
movs
popf
fs
push
dec
popf
add
add
inc
or
mov
(bad)
mov
pop
cmp
jo
jno
add
cmp
cmp
cdq
dec
sbb
fsub
adc
rcr
adc
inc
inc
loopne
jge
ror
sbb
popa
cdq
ja
arpl
les
inc
pop
sahf
mov
in
adc
ja
outs
inc
fdivr
pop
pop
repnz
jecxz
jns
imul
sbb
push
mov
add
xor
leave
add
scas
or
lods
popa
or
rol
pop
lods
call
jns
cmp
pop
rcl
(bad)
(bad)
jmp
sbb
or
inc
cli
fucomi
sahf
dec
mov
loopne
leave
inc
pop
idiv
ret
loopne
pop
inc
xchg
movs
int3
and
nop
cmp
aaa
or
aam
gs
push
xchg
mov
paddusb
mov
popa
movs
mov
mov
pop
xchg
mov
add
mov
push
pop
jo
es
leave
clc
jp
sbb
loop
adc
push
dec
inc
cmps
inc
es
sbb
jmp
test
dec
mov
inc
sti
xchg
pmaddwd
jecxz
or
fisub
xor
add
or
pop
dec
mov
cmps
jp
add
test
fistp
mov
dec
xor
nop
jo
popa
pusha
outs
(bad)
clc
xor
jge
imul
or
xor
inc
rcr
or
inc
sbb
mov
fidiv
xor
jb
jg
or
outs
cmps
cld
xchg
test
cmps
ds
jmp
ret
ins
push
jmp
iret
pushf
push
retf
(bad)
sbb
aad
fdivr
xchg
test
(bad)
cmps
sub
mov
into
xor
mov
mov
jne
push
aam
jge
mov
sub
pop
inc
mov
sbb
cli
leave
sub
ret
mov
inc
inc
test
pop
cmp
shl
add
shl
out
push
push
jle
shl
fcmovne
xlat
xor
in
or
dec
xchg
inc
adc
inc
xchg
call
sub
cld
jecxz
pusha
pop
cmp
loopne
cli
into
cwde
xor
or
inc
sub
outs
cld
xor
mov
int3
or
jne
push
inc
mov
cdq
test
out
push
adc
cmp
(bad)
pop
xor
push
xchg
ss
jecxz
xchg
xchg
mov
retf
call
adc
shl
add
xchg
(bad)
and
lods
pop
push
(bad)
jns
out
add
ftst
cld
fwait
sahf
je
fxtract
fxch
fistp
fld1
(bad)
sbb
fscale
ss
pop
fstp
fwait
or
cmc
and
inc
sar
dec
inc
fstp
adc
sbb
mov
call
shr
sbb
popa
mov
nop
enter
adc
enter
add
jno
mov
sub
int3
repnz
push
fld
cmp
dec
push
sbb
add
popa
sbb
fcom
mov
sub
rcr
ins
push
add
fmul
fisubr
aaa
out
jae
fcom
(bad)
outs
ror
sub
add
cmp
in
push
fld
pop
fild
fmulp
jno
inc
push
push
sbb
sub
les
cwde
or
mov
xor
cmp
inc
fiadd
imul
arpl
lock
(bad)
cmps
mov
loope
cmps
jge
rol
ficom
nop
push
inc
movs
jecxz
ret
movs
arpl
mov
jo
loope
les
mov
push
adc
aas
pushf
inc
shl
sar
mov
mov
adc
or
adc
xor
sbb
push
aas
fs
xor
ret
xchg
or
sub
and
fcomp
dec
adc
in
xor
rcl
mov
iret
enter
adc
add
adc
and
inc
add
add
sub
inc
mov
lods
movnti
add
ins
inc
int
push
les
add
inc
movs
xor
jne
fisttp
adc
push
inc
ds
dec
mov
and
push
sbb
dec
inc
inc
out
sbb
add
add
xor
jne
sbb
push
gs
jg
xchg
and
push
and
mov
add
cmp
ins
imul
das
mov
add
dec
daa
dec
inc
pop
ins
pop
dec
sub
and
gs
aam
sub
cdq
or
fadd
popa
jb
ins
xor
and
dec
inc
mov
mov
mov
ror
(bad)
mov
mov
adc
xchg
or
pop
inc
dec
adc
repz
dec
pop
xor
jbe
push
add
xchg
ss
xlat
pop
test
ins
push
aas
movs
fsubr
aas
xor
push
stos
call
icebp
add
fs
stos
xchg
lods
sbb
aam
outs
pop
lods
iret
adc
cmp
ins
fist
push
xchg
(bad)
aad
stos
xchg
movs
xchg
inc
imul
push
dec
jb
in
jbe
jnp
mov
adc
mov
sub
xlat
out
mov
push
mov
fs
sub
sub
push
mov
mov
inc
js
ja
nop
pop
lods
push
loop
jmp
cs
inc
mov
test
mov
cmps
cmc
or
adc
xchg
arpl
xor
or
pop
inc
push
dec
dec
or
cmp
jo
iret
inc
aam
movs
push
outs
arpl
ins
sub
push
frstpm(287
ins
ins
je
call
and
sub
xor
idiv
ror
add
mul
(bad)
das
fiadd
pop
(bad)
cli
pop
pop
daa
test
dec
add
test
retf
dec
sub
dec
add
adc
inc
fisub
dec
add
dec
fadd
popf
cmp
outs
ret
and
nop
pop
movs
(bad)
inc
sub
cmps
xchg
(bad)
stc
movs
outs
adc
add
outs
pop
and
outs
inc
mov
cmp
lahf
cmps
ja
outs
clc
cs
mov
mov
adc
repnz
push
lahf
js
inc
das
sub
sbb
pop
add
sub
inc
popa
loop
add
xlat
sub
or
cmp
xor
inc
dec
dec
lahf
or
push
imul
inc
outs
das
pop
outs
inc
mov
shl
cmp
shr
outs
inc
adc
nop
or
sbb
sub
add
jne
es
pop
enter
cwde
and
xor
sbb
jbe
pop
adc
jae
jns
mov
add
ins
ins
test
shl
out
add
jb
push
mov
push
mov
mov
pop
lea
pop
inc
inc
xchg
or
pop
dec
(bad)
xchg
xor
cmp
pushf
add
pop
dec
dec
hlt
ss
push
jo
loopne
fadd
add
or
mov
sti
add
push
je
clc
pop
or
out
movs
jne
sub
jne
rcr
inc
jmp
lds
popa
adc
adc
add
pop
cmp
add
xchg
or
or
sub
movs
ja
jno
xor
loopne
xor
ins
pusha
(bad)
pop
lock
push
xchg
xchg
aaa
pop
dec
outs
cli
loop
push
sub
out
out
data16
jae
jno
jno
jb
int
nop
and
ins
push
js
pop
rol
push
(bad)
ja
cmp
or
xchg
rol
adc
and
xchg
pop
add
jb
jb
dec
icebp
repnz
out
jb
jb
jmp
jae
adc
cwde
cmp
or
cmp
mov
sbb
and
pop
and
test
stos
jge
jge
and
ins
dec
cwde
dec
dec
loop
inc
inc
mov
pop
inc
sbb
js
loop
sub
push
and
unpckhps
inc
movs
add
inc
pop
ds
fld
adc
sub
loope
iret
hlt
rol
lods
xchg
(bad)
sub
jno
hlt
ins
ret
cmps
add
adc
jl
scas
pusha
cwde
ficom
add
xor
rcl
push
push
adc
push
push
cli
pop
rcl
inc
xchg
in
ficom
shr
leave
cli
aam
mov
lahf
pop
popa
loope
mov
aaa
enter
or
repnz
mov
retf
gs
add
inc
fild
popa
ret
js
xor
fild
shl
and
adc
sub
mov
sbb
push
mov
push
hlt
aad
lea
sahf
inc
sbb
push
push
jmp
test
mov
int
xlat
mov
rol
mov
jle
jl
fcomp
rcr
cmp
dec
add
or
hlt
out
pop
xchg
ins
adc
sbb
add
sub
shl
jb
add
or
sub
enter
adc
push
add
fs
jne
mov
sub
adc
ds
outs
pxor
or
push
mov
out
test
mov
outs
xor
jo
dec
cmp
or
add
pop
jae
aad
push
push
gs
ror
les
mov
out
das
add
xchg
(bad)
dec
adc
sbb
mov
xor
xchg
pop
mov
jmp
fnstsw
pop
adc
lock
push
pop
or
mov
sbb
mov
outs
add
cvtps2pi
(bad)
(bad)
jg
or
push
mov
pop
ja
inc
push
pop
dec
mov
(bad)
xchg
dec
js
xor
pusha
pop
push
ja
push
mov
data16
sbb
adc
jnp
or
call
adc
inc
sub
or
push
test
outs
(bad)
pop
mov
add
mov
adc
push
adc
ror
cmps
add
push
adc
iret
or
enter
test
lahf
inc
call
fcom
mov
pop
cmp
xor
dec
rol
xchg
add
cwde
jbe
mov
(bad)
int3
inc
test
mov
pop
enter
sub
cmp
push
ja
jne
nop
pop
hlt
ins
in
gs
imul
or
mov
and
and
or
lods
aas
test
add
cmp
xor
sbb
xor
jecxz
test
stos
inc
clc
mov
lahf
cmp
pop
mov
popf
inc
dec
mov
je
inc
test
mov
pop
mov
inc
xchg
mov
push
cs
pop
push
ja
xor
xor
out
pause
dec
or
add
inc
sbb
frstor
and
retf
jp
push
dec
pop
inc
pop
mov
cmp
sub
or
sbb
mul
iret
rcr
movs
repz
loopne
sbb
jmp
imul
push
lods
inc
or
adc
or
gs
inc
stos
jnp
aas
in
or
jmp
push
mov
pop
push
jmp
and
pusha
dec
clc
sub
es
dec
push
xor
mov
sti
or
pop
xchg
es
sub
mov
(bad)
loopne
sbb
xor
and
mov
inc
dec
neg
adc
mov
inc
aas
push
dec
ret
enter
jmp
pop
sub
ja
popa
jmp
adc
call
and
cmp
retf
push
mov
inc
sub
inc
hlt
push
imul
mov
repnz
push
addr16
mov
es
inc
nop
sub
xor
bound
jge
cmps
nop
(bad)
icebp
jne
cmp
jl
mov
xchg
cmp
jns
dec
sbb
mov
push
sub
jl
loopne
sub
add
adc
jns
iret
in
movs
in
ret
aaa
jbe
and
test
push
pop
in
and
xchg
movs
test
add
gs
pushf
mov
dec
das
test
ret
mov
lods
xchg
and
imul
jnp
inc
jmp
mov
adc
jo
inc
pop
retf
je
mov
mov
and
dec
test
dec
inc
or
movs
fcom
or
sub
sbb
adc
xchg
mov
adc
add
movzx
int3
add
xchg
in
out
inc
fbld
jg
xchg
cmc
push
mov
push
mul
push
mov
cmp
add
adc
and
and
add
imul
es
push
sub
dec
mov
and
xchg
addr16
popa
ins
adc
outs
cmp
or
inc
pop
add
shl
dec
sbb
int3
add
aas
mov
add
add
add
mov
push
sbb
add
inc
imul
fiadd
sti
addr16
jg
inc
ds
pop
sub
xchg
mov
scas
adc
xchg
mov
shl
cmp
pop
ret
add
adc
add
mov
mov
adc
push
cwde
adc
sub
dec
mov
add
sub
test
add
test
loope
mov
mov
aas
inc
xor
pusha
xor
pop
fistp
retf
or
cmps
les
mov
pop
enter
cmp
push
mov
and
add
cmp
add
or
ror
jge
leave
mov
mov
mov
dec
jae
add
mov
mov
mov
jb
es
jbe
cmps
test
bound
sub
mov
or
and
sub
ss
ds
mov
mov
push
mov
adc
xchg
xchg
cmps
add
push
sub
or
lock
popa
dec
inc
hlt
nop
movs
bound
cmp
inc
push
dec
(bad)
dec
push
rcr
push
das
pop
add
les
pop
and
inc
xchg
sub
dec
shr
shr
sub
push
sbb
sar
or
jmp
or
or
dec
mov
and
inc
or
mov
adc
and
or
or
popa
daa
or
ret
retf
xlat
into
adc
and
or
sbb
fisttp
sbb
loope
ds
(bad)
add
inc
sar
das
xchg
pop
retf
sbb
imul
and
pop
or
mov
adc
and
or
add
pusha
pop
jbe
or
test
jae
sbb
adc
addr16
dec
cmp
cdq
in
push
test
adc
push
dec
adc
ins
aaa
push
and
jae
ins
lds
adc
(bad)
out
imul
ds
out
int
test
imul
xchg
mov
imul
in
int3
add
add
movs
mov
and
xchg
aad
mov
and
add
leave
jle
mov
add
sub
out
and
in
rcl
in
xchg
xchg
ror
data16
jne
pop
cld
rcr
push
pushf
sub
add
ret
or
cli
push
jmp
and
cwde
movs
or
mov
lock
and
aaa
gs
ss
hlt
adc
daa
mov
ret
sbb
xchg
pop
mov
lods
sti
outs
and
xor
fincstp
sub
mov
dec
push
jle
ss
(bad)
xchg
xchg
movs
fiadd
in
lahf
xor
xchg
jl
test
sti
cmp
ror
call
leave
neg
(bad)
retf
shl
lods
and
aas
push
cmp
out
das
dec
mov
rol
cdq
sub
jo
push
mov
adc
inc
jb
mov
mov
rep
fadd
mov
sub
lea
add
or
cmp
push
and
pop
cs
sbb
aaa
sbb
add
jl
and
sub
xchg
add
mov
jbe
add
xchg
lea
xor
lahf
pushw
cs
cmp
enter
xchg
sub
inc
cdq
and
in
addr16
adc
movs
and
shl
iret
fidiv
clc
inc
cmp
push
(bad)
push
jg
shr
lods
sbb
and
daa
cwde
js
jmp
xchg
scas
repnz
add
adc
jbe
rcr
out
mov
mov
pop
push
adc
add
push
add
xor
sbb
fld
xchg
add
mov
mov
xchg
xchg
adc
add
adc
xor
ss
dec
pop
enter
lea
jbe
test
add
and
adc
inc
out
sbb
adc
push
clc
movups
inc
fdivr
pop
xor
add
imul
push
xor
repnz
stos
dec
push
inc
scas
mov
push
aam
mov
fucomi
sub
shl
push
mov
jo
cmp
sti
mov
dec
les
dec
std
xchg
lock
sbb
or
push
xor
gs
xchg
ret
and
pop
pop
gs
and
aam
xchg
das
xchg
imul
popa
dec
rcpps
jp
xor
das
arpl
cmp
jp
imul
loopne
arpl
jp
or
xchg
movs
mov
add
aam
jns
int3
xlat
inc
mov
ret
fsubr
sbb
movs
imul
or
addr16
push
jmp
leave
cmp
lock
inc
jb
and
push
xor
mov
add
aam
cmp
push
or
fdiv
imul
cwde
inc
pushf
and
sahf
add
lahf
aaa
test
inc
fld
xor
mov
pusha
in
mov
ror
sub
ret
mov
sti
dec
sub
inc
xchg
xlat
call
sbb
out
sub
adc
fwait
cmp
sub
daa
xor
xor
fdivr
adc
push
scas
cmovs
push
stos
cmp
and
lea
repnz
jge
mov
add
fiadd
jne
xor
xor
or
fiadd
jne
bound
mov
xchg
sti
sub
add
or
or
pop
stos
dec
popa
ins
xor
xor
shl
pop
(bad)
or
and
fdiv
xor
inc
call
fcomp
push
fdivr
aam
xor
add
imul
out
ss
sbb
int3
xor
xor
ror
adc
adc
cmps
imul
adc
rcl
or
dec
cs
shl
cmp
adc
or
adc
ins
and
call
lahf
out
cld
push
xchg
sbb
repz
dec
push
das
sub
cmp
xor
adc
enter
jb
and
(bad)
call
mov
adc
xchg
adc
pusha
xor
dec
xchg
pusha
add
ror
cdq
dec
push
ficom
inc
(bad)
dec
pop
(bad)
aaa
jmp
add
push
dec
dec
idiv
imul
pop
add
fst
xor
adc
pop
add
and
xor
or
leave
or
leave
mov
out
shl
leave
movs
cdq
test
test
movs
xchg
dec
xor
mov
inc
call
test
xchg
xchg
nop
nop
or
cs
mov
mov
xchg
push
cwde
(bad)
ja
sar
cmp
sar
xchg
sub
adc
jns
cmps
stc
(bad)
xchg
repnz
rcr
push
shl
lds
dec
xor
loop
xchg
pop
or
ja
dec
xor
or
pop
pop
popf
xchg
retf
push
adc
pop
inc
pop
add
arpl
and
loopne
xor
stos
adc
mov
shr
or
fdivr
xor
sub
mov
or
mov
fstp
or
xor
sub
xor
adc
je
je
sub
adc
pop
mov
ins
adc
or
push
push
pop
call
pop
cs
jb
pop
pop
push
mov
pop
jmp
pop
pop
call
push
or
cmp
push
adc
pop
add
mov
xchg
ss
dec
jl
mov
and
push
ret
pop
arpl
imul
dec
xor
adc
cmp
sbb
fwait
fwait
(bad)
inc
gs
jae
mov
jae
(bad)
jge
xchg
add
inc
dec
shl
inc
inc
rcl
lods
jns
jnp
adc
or
xlat
in
call
retf
rcr
inc
jmp
adc
dec
(bad)
adc
lds
sub
cs
shr
pop
add
push
das
or
ror
jl
add
pop
or
popa
xor
pextrw
add
fs
hlt
add
pop
push
js
icebp
stc
xchg
or
(bad)
(bad)
lods
dec
or
adc
add
hlt
in
lock
inc
ret
inc
mov
std
sahf
sub
adc
dec
or
xor
fidiv
cmp
and
and
repnz
mov
mov
xchg
push
pop
or
inc
lods
xchg
or
sub
test
sub
and
stos
xchg
fld
dec
mov
retf
sub
sahf
or
sub
inc
add
lock
fstp
fsubr
adc
mov
and
jl
pop
pop
in
inc
(bad)
repnz
ss
sbb
call
or
xor
test
(bad)
pop
mov
inc
mov
add
sbb
push
jmp
shl
xchg
add
in
daa
inc
jmp
mov
pop
cmp
inc
xchg
in
ins
loope
adc
loopne
or
loope
or
dec
sbb
adc
rcr
sub
xor
xor
sbb
adc
add
ins
mov
mov
or
inc
icebp
and
cmp
push
add
leave
xor
sub
(bad)
outs
xor
dec
jecxz
mov
ret
adc
mov
jb
or
xor
xor
xchg
(bad)
push
jmp
jbe
push
add
and
add
hlt
imul
es
int
inc
or
aaa
and
xchg
push
das
rol
dec
push
xor
xchg
cld
jecxz
xor
imul
aam
ins
(bad)
jnp
push
jb
xor
pusha
or
xchg
cmp
jo
jecxz
xchg
add
ins
sub
loop
int3
add
mov
cld
les
and
sub
sbb
and
xchg
mov
cmp
ja
adc
or
and
or
push
stc
fsub
fwait
adc
jne
mov
sub
adc
or
mov
call
mov
movs
xchg
in
dec
out
fwait
inc
enter
xchg
pop
xor
(bad)
pushfw
adc
out
sub
mov
inc
or
ins
pushf
(bad)
out
mov
sbb
rcr
pop
fmul
ficomp
inc
add
inc
add
retf
or
or
jmp
aaa
xlat
pop
xor
add
adc
cmp
xchg
outs
cs
jo
mov
cmps
sbb
push
xor
add
and
sbb
shl
or
ins
and
daa
xor
or
push
mov
pop
or
sub
arpl
loope
or
jmp
mov
sub
mov
xchg
cmps
outs
ins
pop
sub
dec
jl
sub
lds
add
push
add
cld
mov
jb
and
or
push
adc
sbb
fwait
pop
inc
fild
fisttp
or
sub
add
(bad)
and
pop
fld
add
stc
cdq
icebp
fcom
aam
sub
mov
mov
pop
sub
js
scas
inc
outs
adc
push
sbb
mov
add
pop
xor
call
or
sub
dec
add
jp
popa
add
or
vmovlps
mov
pop
retf
clc
or
fnsave
mov
icebp
test
add
mov
mov
mov
lsl
cmp
and
pop
pushf
aad
movs
daa
daa
daa
and
scas
cmc
xchg
xchg
xchg
daa
dec
movs
xchg
ror
leave
leave
enter
sahf
aam
in
in
cmps
inc
jle
jb
repnz
aaa
test
in
cmp
jns
test
pushf
mov
stos
dec
dec
dec
inc
popa
test
cmp
ror
mov
add
jb
lods
aaa
fcomp
ins
rcl
lods
mov
inc
scas
jge
js
jnp
cwde
scas
cmp
adc
push
and
mov
xor
sub
sbb
dec
xor
in
sub
inc
jae
fiadd
or
out
or
push
mov
enter
rol
out
add
xchg
or
xor
mov
inc
or
adc
idiv
mov
and
cdq
scas
cwde
add
outs
aam
jnp
jnp
mov
sbb
adc
cmp
jo
or
ret
or
scas
mov
mov
in
jno
jae
push
add
sub
inc
in
popf
or
popf
jnp
push
inc
retf
sub
rol
push
inc
add
shr
xor
inc
sub
push
add
add
dec
adc
rcl
cmc
pop
add
dec
add
mov
jno
pop
add
mov
mov
mov
cmp
fwait
popaw
outs
(bad)
movs
mov
mov
wbinvd
sbb
mov
xchg
cmp
xor
mov
addr16
and
or
push
lods
adc
fisttp
loopne
or
ja
adc
lods
sub
push
ins
imul
jae
jo
and
or
jae
mov
push
test
imul
add
mov
inc
gs
inc
rcl
and
or
test
stos
inc
pop
outs
push
sub
push
dec
inc
jg
or
xor
shl
(bad)
mov
mov
or
jmp
dec
inc
cmc
jmp
not
mov
push
jo
ror
add
fwait
gs
pop
shl
add
aaa
xchg
js
outs
(bad)
loope
js
cmp
mov
fldenv
retf
add
arpl
pusha
pop
iret
fbstp
xlat
ins
scas
pop
xchg
por
push
in
stos
inc
inc
mov
mov
pop
test
addr16
leave
add
rol
and
mov
mov
xchg
inc
inc
xchg
add
xchg
cmc
mov
mov
sub
cld
mov
loopne
jb
aas
pushf
dec
add
mov
sub
pop
inc
xor
and
xchg
popa
addr16
mov
xlat
push
jecxz
mov
push
pop
jnp
das
jmp
jmp
cmp
xchg
pop
bound
xchg
retf
xchg
neg
scas
aas
add
cdq
pop
push
lea
xor
sub
push
dec
push
inc
stc
or
adc
xchg
sbb
fs
fld
mov
add
fist
xchg
test
mov
pop
inc
xchg
cwde
mov
mov
and
inc
or
mov
push
jb
push
je
daa
jo
jp
or
or
or
pop
aas
jnp
add
mov
adc
sbb
fistp
mov
push
jne
cdq
idiv
add
ret
pop
and
adc
add
jmp
add
adc
imul
shl
mov
test
and
pusha
mov
push
arpl
sbb
push
fsub
test
pop
daa
mov
and
and
add
addr16
mov
sbb
push
mov
retf
jp
sbb
dec
retf
ins
sub
stc
scas
dec
clc
cmc
mov
or
rol
xor
es
add
and
sahf
mov
jge
or
mov
or
sti
movs
push
rcl
pop
add
xchg
gs
mov
sbb
es
cmp
inc
in
fidivr
jae
and
ss
gs
sub
xchg
xchg
jp
rol
push
rcr
leave
loope
push
and
mov
rcr
cli
jns
push
inc
mov
jle
and
push
inc
pop
(bad)
or
std
popa
add
fnstcw
or
dec
pop
or
and
inc
enter
mov
adc
in
and
sub
ss
cdq
dec
sub
add
nop
inc
retf
or
retf
add
add
pop
inc
pop
sbb
and
or
adc
pop
adc
(bad)
pop
fst
and
pop
jb
jle
je
xchg
add
add
ficom
mov
inc
push
sbb
pop
jb
imul
jae
pop
adc
fidivr
inc
ret
dec
push
inc
ss
jbe
dec
pop
jb
add
cmps
push
out
cmp
inc
inc
mov
js
cmps
inc
cs
push
push
push
fisub
cdq
cmp
dec
add
es
addr16
inc
or
daa
fiadd
movs
xor
add
adc
inc
adc
stc
bound
pop
icebp
jne
movs
leave
xchg
add
fbld
or
fnsave
rol
mov
shl
js
mov
sub
int3
rol
add
int3
das
call
sbb
inc
xchg
jmp
or
out
jl
mov
push
aad
cmps
cmp
mov
pushf
ins
imul
xchg
retf
add
test
push
test
jnp
stos
pop
xchg
or
adc
mov
sbb
fwait
xchg
(bad)
or
ins
lods
xlat
xchg
add
lds
and
mov
fcom
and
fisubr
test
push
xor
inc
aaa
nop
(bad)
fadd
test
sub
nop
ret
inc
pop
pop
mov
retf
push
fstp
inc
dec
inc
mov
nop
sbb
cmp
or
cmp
push
mov
loopne
adc
pop
add
add
adc
call
or
(bad)
fnstenv
add
jns
ins
sub
push
hlt
add
cmps
rol
mov
std
cmp
adc
arpl
cmp
mov
and
mov
inc
icebp
(bad)
out
repnz
test
sbb
arpl
or
xchg
popa
(bad)
aam
jno
pop
aas
inc
scas
(bad)
sar
xor
lods
movs
stos
aam
jb
outs
ins
cdq
mov
push
pop
lock
ficom
push
daa
cmp
les
xchg
mov
in
push
aas
or
and
movs
pop
jp
dec
cs
inc
out
ja
xor
jb
jmp
out
sbb
jo
mov
push
out
jb
mov
and
push
or
or
aad
add
push
retf
sub
add
pusha
jns
or
je
jb
add
ja
xor
aaa
xchg
push
mov
repz
push
rol
out
mov
aas
mov
jg
pop
xchg
lea
pop
aam
call
or
adc
cs
jmp
ret
(bad)
aad
inc
xor
inc
aam
aaa
imul
jbe
xor
push
xchg
cmps
stos
jge
retf
add
pop
or
ins
aaa
pop
popa
scas
push
mul
jb
add
push
xor
outs
ins
dec
das
cmps
jbe
cmps
pop
scas
ins
sub
(bad)
and
or
xor
jae
scas
not
jno
mov
dec
push
stos
addr16
xor
popa
mov
cmp
push
imul
push
inc
(bad)
addr16
push
das
ja
push
mov
push
mov
ja
or
mov
sti
cmp
fcmovbe
out
xorps
jo
imul
inc
or
test
xor
test
je
inc
xchg
out
xchg
push
data16
dec
das
ins
sbb
aas
or
ret
shr
push
lea
js
or
aas
pop
dec
pop
xor
test
pop
pop
sbb
movs
fiadd
je
push
pop
mov
sbb
push
push
in
mov
jg
pmullw
mov
aaa
inc
pop
lds
popa
dec
out
cs
aas
mov
(bad)
aaa
adc
stos
adc
dec
add
ja
adc
inc
inc
or
aas
lahf
push
daa
mov
push
mov
jne
bound
lahf
daa
jb
aas
sub
mov
add
out
adc
mov
push
or
outs
pop
dec
ins
je
or
mov
pop
sub
dec
jecxz
sbb
scas
not
xchg
cmp
aas
or
xor
ins
cmps
dec
mov
and
outs
adc
mov
mov
add
jp
push
adc
xchg
and
xor
mov
rol
add
sbb
movs
xchg
push
mov
scas
cmp
pop
pop
aam
test
or
in
jmp
adc
sub
inc
add
cmp
das
mov
addr16
js
push
pop
pop
cmps
bound
cmovg
jno
cmps
push
jl
ja
pop
push
rcl
adc
xchg
aaa
ins
xchg
add
stos
xchg
adc
jp
cmps
popa
push
lds
push
cmps
outs
dec
mov
fidivr
cmp
mov
mov
loopne
outs
sti
mov
ins
aaa
out
mov
aaa
jbe
arpl
mov
daa
lock
adc
ja
push
aas
rcr
out
and
jns
fisub
adc
je
pop
retf
ja
mov
push
add
push
outs
sbb
adc
je
inc
push
add
sbb
out
adc
dec
pop
jb
mov
inc
jb
bound
pop
pop
jae
imul
mov
mov
push
pushf
inc
clc
jo
inc
pop
mov
cmova
adc
lock
addr16
sti
outs
push
inc
sbb
mov
addr16
dec
mov
xchg
inc
xchg
pop
pop
leave
push
gs
and
imul
xchg
push
or
mov
lahf
sub
popa
push
outs
mov
pop
pop
sbb
adc
mov
mov
div
into
xchg
jns
push
sbb
add
sbb
sahf
(bad)
ficom
push
pop
iret
les
ficomp
pop
lock
sbb
je
or
dec
xchg
daa
cmp
push
pop
scas
in
xor
lock
ror
push
inc
jae
mov
jb
(bad)
push
shl
sub
pop
pop
lahf
push
scas
addr16
lock
arpl
add
xlat
push
dec
ins
jae
fmul
stos
imul
sahf
je
pusha
push
sub
pusha
add
inc
add
mov
out
pop
scas
mov
pushf
jmp
fcom
aaa
sub
(bad)
aad
cmp
sub
jns
iret
gs
movs
test
xlat
sbb
cmp
ja
fwait
lea
xchg
mov
ss
or
add
inc
js
ds
jns
dec
jne
stos
add
sbb
fwait
cs
(bad)
pop
inc
test
push
mov
pop
loopne
mov
gs
add
repz
dec
outs
cs
shl
mov
ja
push
mov
mov
pop
(bad)
push
shr
stos
mov
inc
jae
sub
xchg
gs
pop
sbb
push
dec
or
ret
pop
push
adc
pop
add
sub
push
adc
pusha
stos
adc
xchg
pop
das
in
pop
mov
shl
mov
pop
jb
outs
pop
jmp
out
leave
mov
add
aas
adc
(bad)
jne
xlat
xor
addr16
stos
adc
cmovg
lods
add
bound
pop
adc
push
outs
push
jmp
or
pop
sbb
add
dec
mov
mov
xlat
and
push
test
adc
adc
sti
add
jno
fist
arpl
push
jae
fisub
or
arpl
stos
imul
cmp
sbb
pop
in
pop
push
jns
dec
adc
pop
mov
arpl
stos
sub
or
jnp
push
push
mov
mov
add
inc
adc
push
ja
adc
ret
mov
inc
or
neg
arpl
rcl
and
push
jns
jo
or
xchg
fdivr
dec
fidiv
dec
mov
sub
aaa
hlt
pop
adc
ins
inc
fbld
or
or
mov
nop
add
jb
sahf
xchg
pop
push
cmp
outs
push
test
dec
push
cmp
pop
stos
push
push
or
cmps
fcom
mov
or
cmp
xchg
inc
or
push
outs
inc
adc
mov
or
inc
sbb
adc
inc
or
push
(bad)
and
lods
inc
addr16
in
xchg
adc
dec
cs
outs
xchg
jmp
xchg
mov
adc
push
ficom
mov
xchg
push
jae
mov
cmp
outs
inc
cmps
or
(bad)
push
ffree
inc
mov
push
pop
iret
add
cmp
bound
pop
or
push
jae
imul
adc
dec
aas
xchg
aas
aas
pop
or
inc
inc
mov
sub
mov
fcom
enter
mov
pop
or
js
or
aad
(bad)
adc
ins
fsubr
add
scas
mov
(bad)
sub
sbb
mov
ds
add
cmp
xlat
movs
fld
popf
ret
jge
xor
add
add
daa
cmps
inc
ret
fisubr
add
or
cmp
xchg
or
retf
xchg
mov
fiadd
add
add
dec
mov
ficomp
cmp
repnz
sbb
xor
or
js
and
enter
adc
adc
add
cmp
adc
cld
mov
sub
add
add
or
jae
adc
popa
mov
inc
jmp
fldcw
and
push
push
nop
pop
rcr
xchg
sub
iret
and
mov
inc
leave
repz
fidivr
xor
or
(bad)
jb
cdq
in
push
pushf
push
inc
dec
inc
dec
jb
jb
dec
dec
dec
dec
jb
jb
dec
dec
dec
xor
jb
xor
xor
jb
jb
ss
cmp
jb
cmp
cmp
jb
jb
ds
and
jb
and
and
jb
jb
es
sub
jb
sub
sub
jb
jb
cs
adc
jb
adc
adc
jb
jb
push
pop
sbb
jb
sbb
sbb
jb
jb
push
pop
add
jb
add
add
jb
jb
push
pop
or
jb
or
or
jb
jb
push
(bad)
(bad)
cmp
cmp
icebp
repnz
cmp
cmp
cmc
div
clc
cmp
cmp
stc
cli
sti
cld
cmp
cmp
std
(bad)
jmp
cmp
cmp
loope
jecxz
cmp
cmp
in
out
cmp
cmp
jmp
cmp
cmp
out
out
sar
cmp
cmp
rcl
aam
cmp
cmp
(bad)
xlat
fdivr
cmp
cmp
fcmovu
fdivr
cmp
cmp
(bad)
sar
cmp
rol
les
cmp
cmp
mov
cmp
cmp
leave
retf
cmp
cmp
int
iret
mov
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
pop
add
nop
loop
dec
stos
xchg
xchg
loop
loop
retf
popa
xor
ins
div
imul
pop
sti
sub
push
sbb
sub
adc
cmps
sbb
push
inc
jecxz
inc
mov
jecxz
jecxz
and
sbb
cmp
cdq
pusha
inc
jns
test
or
xchg
xchg
xchg
add
adc
push
fwait
addr16
aas
imul
ror
add
jns
jl
aam
or
mov
push
sub
leave
int
mov
jmp
jae
inc
data16
retf
or
outs
mov
push
mov
cmp
daa
test
pop
repz
inc
mov
or
imul
shl
push
fcom
nop
cs
jo
push
outs
jp
jo
jae
add
sbb
mov
sbb
or
push
cwde
pop
cmovs
or
cmp
sbb
cmp
mov
shl
cdq
jmp
ins
or
hlt
or
pop
inc
int
or
ins
inc
out
(bad)
in
adc
pop
js
push
dec
outs
jo
call
inc
jns
sbb
or
fcmovnb
addr16
and
inc
imul
ins
ja
xor
pop
xor
or
adc
mov
loopne
or
adc
das
add
jns
imul
adc
jge
and
shr
cmp
or
cmps
out
or
xchg
inc
jb
jmp
adc
bound
push
mov
dec
mov
jp
loopne
outs
pop
add
inc
imul
pop
inc
outs
jb
jae
rcl
and
cmp
inc
in
or
add
xchg
inc
xor
adc
pusha
adc
aad
cmp
mov
aaa
test
sbb
inc
out
push
dec
sbb
xchg
imul
movs
or
scas
mov
ss
test
mov
and
or
cmps
add
or
add
xor
mov
pop
or
mov
retf
push
lock
xor
cwde
adc
lods
add
fdiv
jnp
mov
push
push
pushf
das
cs
cmp
inc
push
call
rol
add
sub
clc
adc
loope
cmp
ret
push
inc
push
aam
call
and
lods
sbb
mov
ins
adc
adc
fldenv
xchg
xchg
lock
push
pusha
inc
into
inc
push
(bad)
jmp
add
pop
dec
and
add
add
outs
and
xor
retf
push
sbb
cdq
inc
loope
mov
and
push
rcl
cmp
adc
or
in
sub
push
cmp
sub
stc
or
in
out
ror
dec
adc
rcr
loop
ret
retf
xor
push
inc
xchg
retf
add
add
mov
lock
inc
xlat
cmp
pop
dec
jmp
or
loope
fsub
pusha
dec
inc
sub
push
add
pop
jo
pop
sub
cdq
dec
cmps
enter
pop
sub
inc
xchg
in
and
mov
or
sub
mov
push
fld
mov
es
push
dec
fisttp
or
outs
jno
dec
ss
dec
jbe
pop
bound
(bad)
jns
retf
inc
dec
call
add
shr
daa
jle
push
sub
jo
cmp
sub
leave
ins
mov
jne
repz
add
dec
rcl
or
or
js
pop
add
add
mov
sbb
daa
or
iret
in
mov
inc
cs
into
or
jmp
mov
inc
inc
scas
into
hlt
adc
sub
inc
xor
cmp
push
dec
add
or
adc
sbb
test
mov
push
or
in
enter
pop
out
(bad)
test
shr
mov
mov
in
cmps
push
inc
add
icebp
or
in
xchg
xor
in
or
xor
aad
pop
sbb
es
push
and
in
out
mov
push
repnz
lock
push
or
pop
sbb
cmp
mov
cwde
cmp
ds
push
cmp
add
cmps
push
sub
sub
add
add
out
adc
adc
cmp
shr
loop
xchg
ins
add
add
push
xor
popf
mov
or
jno
jmp
mov
lods
mov
push
lock
mov
daa
mov
dec
pop
jo
movs
push
hlt
or
in
loope
pop
lock
pop
leave
mov
clc
sub
lock
repnz
jo
lock
das
movs
push
fs
mov
aaa
int
cmp
push
in
dec
or
xchg
push
(bad)
(bad)
(bad)
jl
es
ins
pop
add
pop
jl
shr
into
fimul
outs
mov
test
es
outs
out
dec
mov
cmp
pop
enter
(bad)
fdiv
xchg
push
adc
adc
inc
fs
mov
or
pop
mov
push
out
in
call
fdiv
add
jl
sti
add
xlat
add
sub
lea
pop
inc
sbb
mov
es
mov
arpl
repnz
xchg
dec
nop
or
mov
xor
out
fs
push
xor
test
or
xor
cmp
adc
mov
pop
imul
mul
shl
cmp
adc
xchg
or
lea
sti
rcr
sub
inc
inc
push
push
or
pop
cwde
out
add
pop
or
adc
or
sbb
out
in
(bad)
nop
push
or
mov
dec
adc
adc
(bad)
cs
in
push
arpl
cld
call
(bad)
push
sahf
or
add
popf
pop
clc
not
jle
je
ret
or
or
cmp
int3
je
mov
jle
or
pop
xchg
xlat
sbb
inc
fldcw
sub
sbb
ins
inc
pushf
sbb
sub
mov
adc
rol
add
dec
add
push
and
push
or
shl
cmp
cdq
mov
jge
dec
push
sbb
dec
sbb
popa
or
gs
ret
int3
and
and
xchg
(bad)
sbb
aaa
cmp
mov
sub
jbe
inc
inc
cmp
aas
in
cmps
jo
inc
(bad)
add
scas
push
lea
std
adc
xchg
mov
mov
or
sbb
add
mul
shl
adc
test
or
xchg
pop
mov
sub
pop
push
ss
or
stos
xor
cmp
adc
xchg
test
sbb
ret
dec
xor
push
rcr
jg
push
nop
and
test
prefetch
adc
stc
push
add
add
xchg
sub
adc
sbb
adc
(bad)
jle
add
adc
push
add
or
push
out
cld
dec
adc
retf
xchg
mov
bndldx
rcr
add
ja
repnz
add
sbb
(bad)
jg
add
mov
pop
and
leave
das
and
cmp
faddp
ja
mov
and
ror
and
inc
das
jg
js
lods
retf
(bad)
add
daa
mov
das
add
aas
or
iret
pusha
pop
out
stos
add
add
jo
les
add
mov
jb
fcomp
leave
(bad)
frstor
add
or
pop
xor
add
in
rcr
xor
jns
sahf
xchg
xor
adc
jbe
in
or
or
add
add
mov
adc
add
sbb
mov
pop
or
push
push
inc
stc
or
inc
mov
mov
out
mov
daa
or
(bad)
bnd
gs
pushw
jmp
cmovae
pop
inc
fmul
add
movs
lea
stos
adc
cmp
inc
inc
mov
scas
or
rcr
rcl
sbb
dec
add
jno
dec
fdivr
push
pop
jmp
or
lods
pop
(bad)
and
test
nop
and
mov
rcl
dec
jmp
mov
sub
bound
mov
inc
push
push
xor
jle
gs
in
xchg
dec
or
lods
xor
pop
push
adc
inc
test
sbb
inc
jle
bound
ficom
retf
std
mov
(bad)
add
sub
cmp
in
mov
sub
mov
lods
xchg
sbb
xlat
(bad)
push
jae
dec
outs
jbe
iret
adc
shl
(bad)
adc
inc
push
lock
sub
fmul
sbb
ins
pusha
adc
or
jp
adc
or
adc
dec
in
sub
add
mov
clc
mov
cwde
add
mov
and
push
shl
push
push
fdiv
jo
adc
jb
and
mov
mov
dec
xchg
imul
cmp
ret
cmps
dec
jne
test
not
and
sbb
sbb
je
movs
in
fsubr
nop
cwde
mov
xchg
ret
cdq
push
nop
push
inc
outs
mov
push
test
adc
test
(bad)
pop
sub
xchg
or
sub
and
sbb
dec
xor
or
pop
mov
or
or
xchg
mov
pop
mov
addr16
add
add
inc
mov
pop
pop
inc
inc
shl
add
dec
add
cmps
and
push
jge
jnp
mov
mov
inc
stos
add
mov
jo
add
ja
sbb
(bad)
int
jo
or
xchg
add
test
out
leave
push
push
cmp
test
and
pusha
cdq
or
add
mov
mov
je
(bad)
mov
(bad)
sbb
mov
test
jmp
or
dec
dec
repz
sub
adc
sub
jbe
mov
nop
es
add
jno
ins
cmc
inc
dec
pop
inc
imul
cmp
jl
test
cmps
stc
xor
hlt
imul
pop
cld
push
pop
pushf
sar
pusha
pusha
inc
popa
in
mov
repz
sbb
pushw
test
sbb
dec
out
out
mov
push
nop
ds
jnp
fsub
xor
jl
push
cwde
xchg
push
push
addr16
push
lods
push
mov
xor
xchg
push
mov
scas
add
rcl
inc
xchg
lods
mov
sub
jle
mov
push
dec
sbb
movs
out
add
inc
mov
inc
sbb
pop
inc
cmp
or
mov
push
jnp
inc
xchg
mov
dec
mov
add
in
and
sldt
xchg
nop
dec
push
sub
push
dec
cli
lods
movlps
or
adc
sti
in
xchg
inc
adc
call
or
jecxz
mov
xchg
pop
(bad)
movsx
sbb
(bad)
sbb
xchg
sbb
mov
xchg
das
pop
sbb
rcr
add
and
push
and
les
add
push
and
push
add
xchg
das
and
pushf
and
push
jo
mov
push
test
repnz
out
cmovbe
cs
pop
dec
adc
push
cmova
cld
pop
inc
or
test
push
unpckhps
sub
sub
punpcklbw
jo
inc
or
pusha
push
xor
pop
nop
push
ror
pop
repnz
xchg
aam
popa
inc
push
das
in
xchg
paddsb
push
movups
add
mov
and
inc
push
psrld
add
repnz
addps
sahf
add
add
test
inc
push
push
adc
mov
sub
leave
in
sub
leave
arpl
ja
sbb
add
xor
lods
xor
push
cmp
repnz
sbb
push
push
inc
nop
gs
xchg
xchg
stos
and
or
inc
sahf
nop
push
push
pavgb
adc
test
cmovp
push
cmovo
and
jl
inc
push
paddq
add
push
sete
push
repnz
leave
push
sete
push
icebp
sbb
jp
sbb
nop/reserved
dec
sbb
fild
jmp
push
adc
push
or
arpl
les
xlat
xchg
add
dec
cmp
test
cmp
or
(bad)
pop
adc
prefetchwt1
sbb
mov
or
fwait
(bad)
add
and
mov
addr16
cmp
jo
inc
retf
pop
add
call
or
adc
xchg
(bad)
xor
mov
sbb
mov
ins
retf
add
inc
pop
xchg
add
cmps
pop
or
outs
ja
ins
jmp
xor
add
and
dec
mov
push
outs
add
mov
or
and
xchg
outs
mov
adc
push
adc
pop
inc
pop
bt
mov
add
imul
xchg
mov
ficomp
fcom
mov
pusha
nop
add
out
mov
fadd
fwait
inc
test
adc
or
nop
and
out
jecxz
pop
into
push
adc
es
(bad)
adc
adc
mov
sub
sub
nop
pop
mov
dec
push
ja
inc
dec
inc
add
adc
cwde
sbb
test
test
mov
jle
push
sub
nop
add
mov
adc
sbb
mov
sbb
test
mov
mov
jo
shr
and
jno
push
sub
dec
das
and
js
test
adc
or
dec
pop
ret
jle
adc
cmc
push
adc
adc
das
jg
ror
lods
prefetchnta
jmp
test
push
adc
ins
ror
std
push
xor
es
push
in
mov
adc
add
aas
dec
lock
movs
enter
add
inc
or
and
outs
cmp
imul
inc
xchg
ja
add
mov
test
pop
les
pop
(bad)
lahf
or
bound
jb
sub
mov
and
dec
add
rcl
mov
rcr
clc
mov
inc
xor
mov
add
inc
push
xor
add
fiadd
or
add
mov
fcom
push
fisttp
add
mov
sbb
ins
mov
lods
repnz
ja
xchg
or
in
std
daa
pop
dec
ins
sbb
enter
add
add
dec
int
and
push
mov
jmp
xchg
pusha
jne
dec
xor
imul
xchg
(bad)
mov
imul
pop
push
xlat
push
sub
inc
in
xlat
jne
pop
pushf
dec
xor
inc
mov
mov
adc
iret
arpl
sbb
jnp
sbb
and
add
adc
dec
pushf
sbb
cmp
imul
adc
pop
fidivr
enter
rol
test
pusha
cli
fsubr
or
sbb
js
push
add
ds
xor
adc
imul
dec
pop
fidivr
sub
int3
push
push
push
fwait
in
xor
dec
push
je
push
out
sbb
clc
shl
scas
mov
adc
in
xchg
ds
inc
lea
es
and
sub
pop
and
add
ror
mov
xchg
hlt
test
rep
scas
cmc
repnz
sbb
sbb
push
jge
neg
inc
movs
int3
fisubr
mov
pop
dec
sbb
lods
or
popf
pushf
repz
and
sbb
add
or
das
es
sub
and
or
add
cmp
xor
add
push
jb
mov
jo
push
jb
jns
inc
jo
movs
push
stos
aaa
xor
pop
daa
rcl
pusha
xchg
add
shr
stc
dec
test
jl
jo
sub
jo
inc
dec
fsubr
and
js
ret
icebp
punpcklwd
add
daa
cs
dec
sub
test
cmc
ss
add
fsub
mov
push
repnz
ins
pusha
loopne
movs
mov
and
popf
push
retf
cwde
mov
inc
das
sub
push
mov
xor
xchg
adc
fnstsw
add
sbb
add
pop
outs
adc
fild
adc
or
sbb
lods
or
retf
enter
stos
retf
out
add
pop
sbb
or
shr
inc
or
push
in
sub
push
sbb
pop
jo
test
test
stos
popa
adc
push
pop
xlat
test
jo
adc
and
sahf
cmp
test
mov
lds
ror
and
test
xchg
push
jo
pushf
add
mov
das
fwait
push
pop
or
call
outs
and
xor
pusha
sti
shr
sub
fs
daa
xchg
mov
rcr
shl
or
jae
loopne
xor
aaa
pop
and
in
fisttp
es
and
jno
jg
xchg
pop
dec
xor
cwde
das
dec
xor
lds
add
rol
dec
imul
cld
or
jb
iret
pop
lods
sub
jo
push
cmp
mov
and
inc
ficom
mov
jo
fadd
inc
pop
jns
popa
loope
(bad)
push
rcr
mov
add
mov
leave
and
clc
adc
inc
push
add
cwde
inc
and
inc
jns
inc
push
mov
push
inc
call
cwde
xor
mov
imul
movs
out
(bad)
mov
cwde
adc
cmps
jle
es
lock
sbb
xchg
cdq
je
fdiv
cmp
cmp
aas
loop
addr16
daa
dec
or
shl
stc
and
and
xor
pcmpeqb
xchg
test
out
and
xchg
and
and
(bad)
xor
and
mov
sbb
mov
dec
xor
mov
stos
and
les
xor
gs
inc
test
xchg
and
xchg
test
call
push
test
test
dec
dec
leave
and
test
mov
inc
mov
sub
and
jecxz
jo
and
cmps
test
scas
adc
inc
lods
and
popa
add
mov
je
push
mov
test
and
mov
sar
jns
lods
adc
les
add
fdiv
inc
mov
cld
mov
std
rol
mov
das
dec
dec
dec
inc
mov
cmp
jno
inc
js
dec
sahf
test
add
inc
cmp
adc
sub
js
jnp
push
push
pop
adc
out
je
loope
sub
pop
push
inc
adc
mov
and
out
push
mov
pop
repnz
fisubr
lods
daa
imul
outs
push
push
push
sar
add
std
or
or
adc
sbb
jnp
ror
push
xor
and
sahf
lock
cmp
or
dec
dec
sub
or
and
jno
repnz
add
adc
xchg
pusha
mov
or
ins
(bad)
or
out
cs
sar
xchg
adc
xchg
lods
jnp
inc
mov
adc
adc
xor
ins
xor
or
cmp
sub
(bad)
xor
xor
ror
cmp
data16
pop
das
out
sub
xor
inc
dec
and
pop
add
ins
pushf
and
popa
stos
ins
fst
pushf
jp
sahf
test
add
test
aaa
adc
mov
je
or
or
loop
aad
nop
inc
sahf
and
dec
(bad)
mov
es
inc
mov
int3
mov
pop
clc
or
mov
sar
jg
sbb
les
push
imul
call
mov
add
mov
cmps
out
rcr
enter
shl
fidivr
jmp
aam
fsubrp
sbb
xlat
pop
sub
rol
mov
mov
das
icebp
add
retf
xor
in
mov
mov
or
rol
sbb
pusha
mov
pop
das
sbb
dec
test
pop
ss
add
xor
lea
pop
pop
dec
sub
sub
sub
in
repnz
fsincos
adc
loop
sub
scas
sub
ss
bndldx
dec
jns
pop
sar
sbb
das
cmp
xor
mov
aas
mov
pop
sbb
es
in
pushf
inc
xor
mov
dec
mov
mov
xchg
xor
mov
mov
in
sbb
mov
sub
jl
cwde
retf
dec
and
xor
cld
retf
inc
xor
lods
sbb
push
push
int3
push
addr16
adc
js
fild
stos
loope
(bad)
and
ins
test
popa
push
dec
cs
cs
in
aad
rcr
fmul
inc
xor
cmp
(bad)
cmp
xchg
clc
mov
aad
xchg
lods
inc
js
fadd
mov
sbb
adc
pop
pop
inc
jmp
sub
pop
add
fcom
add
dec
inc
test
inc
add
sahf
add
or
inc
inc
dec
adc
xor
jmp
push
outs
ja
ss
mov
inc
mov
in
mov
(bad)
xor
or
or
sub
xchg
xchg
lahf
(bad)
xor
cmp
adc
adc
push
js
adc
mov
adc
fs
dec
jo
dec
in
in
push
js
js
xchg
cmp
inc
xor
sub
fbld
je
aad
(bad)
mov
xor
ins
dec
outs
cwde
adc
test
xchg
out
mov
(bad)
or
in
fld
in
(bad)
dec
and
rcr
inc
dec
test
mov
jne
je
cdq
(bad)
loopne
in
mov
inc
and
cmc
mov
adc
mov
es
neg
xor
push
sbb
cwde
mov
xchg
test
vprotd
sub
popa
out
mov
popa
in
add
or
call
outs
cmp
xor
push
(bad)
push
adc
sbb
imul
xor
mov
fisubr
mov
cwde
adc
sbb
xor
push
loop
das
mov
enter
loopne
push
(bad)
xchg
loopne
ja
jns
loopne
loope
push
pop
in
aaa
scas
mov
inc
movs
in
fmul
loopne
sbb
push
scas
loopne
loop
cli
into
jnp
in
in
mov
or
and
jmp
and
in
fwait
pop
bound
xor
out
(bad)
imul
das
or
jns
and
ds
xor
xchg
repnz
loope
sbb
mov
add
in
mov
cmp
leave
or
adc
xchg
loopne
sbb
adc
cmp
fild
imul
adc
adc
adc
and
scas
xchg
in
cmp
or
nop
loop
cmp
sub
cmp
jbe
add
in
cmp
dec
xchg
clc
in
cmp
xchg
jl
add
stc
and
in
popa
adc
inc
pop
outs
adc
add
adc
pop
pop
stos
add
mov
xchg
mov
les
dec
pop
mov
es
inc
push
push
mov
dec
pop
inc
into
test
lahf
ja
imul
imul
outs
addr16
dec
jo
stc
retf
addr16
imul
push
sbb
outs
or
fmul
push
fld
push
cmp
lahf
push
aam
data16
movs
push
push
mov
movs
out
add
out
in
out
nop
xchg
push
inc
scas
jl
scas
int3
jmp
not
add
sub
mov
jmp
in
push
pushf
test
arpl
or
pop
inc
bound
inc
sbb
icebp
xor
pushf
xor
pop
bound
sahf
pop
mov
nop
arpl
adc
fstp
adc
cmp
add
shl
inc
xchg
dec
xor
jl
xor
repnz
add
cmp
cmp
cs
add
sbb
stos
sbb
loope
into
adc
adc
shr
cmp
in
mov
dec
in
pop
and
adc
js
jmp
rol
jl
repnz
xchg
sbb
jl
repnz
push
lods
in
jl
push
icebp
sub
pop
mov
je
add
jbe
or
jmp
cli
xor
fwait
pop
push
dec
push
mov
cmp
fld
inc
xchg
nop
inc
cmp
push
jl
into
je
push
inc
inc
push
sub
js
inc
call
jmp
xor
mov
adc
xchg
cwde
inc
ds
scas
adc
push
add
add
add
add
ror
int3
icebp
inc
mov
xor
fidiv
push
inc
jecxz
cmp
sbb
aas
js
cmc
jmp
mov
jmp
inc
shr
or
and
adc
pop
inc
jns
jl
ins
mov
or
int
and
fist
mov
mov
fs
loope
add
movs
inc
dec
add
push
imul
xchg
jg
or
add
and
mov
add
call
jb
lods
in
mov
test
sbb
adc
adc
js
pop
dec
jg
fbld
mov
lods
inc
jmp
pop
mov
mov
dec
cmovb
jl
mov
ret
adc
xor
xor
test
imul
shl
add
jne
hlt
add
das
mov
lea
xor
sbb
punpcklwd
dec
jp
mov
fld
add
inc
push
ja
push
sub
xor
int
nop
je
fild
xchg
(bad)
dec
les
inc
icebp
add
jge
or
xchg
fistp
sbb
js
jne
push
cmp
jne
ret
mov
or
ins
std
je
pop
jne
cmp
or
jp
ror
movs
jns
adc
or
or
xor
xchg
mov
lea
and
inc
adc
call
pusha
xor
jmp
inc
loopne
repz
lock
inc
adc
add
clc
das
es
xor
movs
pop
mov
in
in
mov
jp
inc
inc
mov
dec
lds
add
fldcw
cmp
ds
fnstenv
in
fist
fist
cmp
jne
leave
and
and
inc
mov
call
add
add
xrelease
les
pop
or
mov
lea
imul
xchg
add
pop
jge
imul
push
ret
(bad)
sub
xor
mov
adc
lea
sbb
mov
nop
pop
rol
ret
adc
add
pop
hlt
repz
add
sbb
fs
adc
dec
add
das
rcr
inc
hlt
hlt
unpcklps
adc
loopne
xchg
push
adc
push
mov
inc
cmc
adc
mov
loopne
push
retf
je
mov
jge
push
xor
jmp
adc
or
mov
or
or
and
push
cmps
mov
gs
jnp
jl
adc
cmp
mov
dec
adc
mov
pop
cld
mov
push
mov
or
xchg
dec
(bad)
sbb
and
mov
xor
add
cmp
mov
dec
mov
or
stos
cmp
int
nop
or
mov
add
test
push
push
inc
xchg
dec
or
scas
movs
mov
sbb
mov
mov
sub
stos
push
jecxz
push
out
push
pop
or
pop
lods
test
shr
or
fdiv
pop
cmp
(bad)
dec
push
push
xor
push
aaa
dec
add
clc
fidivr
dec
cmp
(bad)
mov
xor
xor
call
add
outs
dec
jp
xorps
jns
inc
cs
dec
dec
syscall
pop
pop
cmp
push
xor
dec
addr16
pop
dec
sti
scas
push
addr16
loope
push
xor
dec
push
sbb
(bad)
or
punpcklbw
jno
cs
xor
sub
ss
jl
out
mov
cs
pop
dec
sbb
iret
dec
pop
pop
sbb
sub
jle
mov
xchg
or
nop
xchg
dec
mov
xor
inc
es
sub
ins
mov
dec
jns
cmps
std
test
xchg
popf
movs
push
push
jl
xor
and
iret
es
popf
push
cmp
dec
or
cwde
mov
mov
add
or
mov
outs
mov
cmp
xchg
movs
or
fwait
inc
adc
jl
gs
pop
push
xor
and
mov
mov
lahf
fmul
add
add
mov
push
mov
loopne
ins
imul
add
loop
mov
mov
js
jmp
pop
add
mov
es
iret
ss
add
pop
lea
xchg
add
xor
jmp
xor
loopne
sahf
and
cmps
test
std
sub
iret
sbb
or
lahf
(bad)
add
fwait
in
or
inc
ret
das
scas
push
rcl
dec
push
xor
in
fisttp
add
cmp
adc
aas
int3
fcmovb
jge
cmps
adc
xchg
loop
adc
repnz
cld
imul
dec
jg
inc
adc
fdivr
xlat
test
inc
sub
or
jo
inc
dec
retf
jae
jmp
test
dec
dec
rcr
fcomp
push
sbb
cs
pop
cwde
or
add
or
mov
mov
setno
sub
add
mov
mov
mov
dec
inc
inc
add
test
jno
sti
dec
pusha
dec
test
(bad)
es
push
sbb
pop
mov
xchg
sbb
add
and
add
mov
jmp
adc
xor
lock
xchg
retf
dec
push
sbb
imul
and
adc
lods
sbb
xchg
or
icebp
cmp
inc
aad
scas
mov
sbb
lods
dec
or
dec
or
jne
mov
and
mov
add
xchg
xchg
mov
inc
clc
clc
clc
inc
inc
dec
fild
sbb
loope
cmp
movs
push
or
xlat
pop
lock
rcl
inc
pop
mov
movs
push
push
stos
inc
push
es
lods
xchg
lods
lods
mov
add
test
out
repz
cld
inc
stos
add
cmp
or
dec
stos
cmp
test
les
sbb
imul
adc
push
popa
mov
test
lahf
sbb
push
jo
pusha
lahf
test
cmp
ss
push
mov
push
pop
popa
inc
lds
mov
pop
push
pop
imul
sub
shl
or
fsub
add
in
dec
inc
paddd
inc
add
push
cmp
rol
(bad)
push
or
mov
dec
push
pop
inc
mov
sbb
out
das
or
push
push
or
or
cmc
fisub
push
xor
neg
test
call
and
push
ins
pop
sbb
cmp
xor
and
sbb
je
cmc
xor
sbb
imul
sbb
in
pop
xchg
inc
and
and
les
cmp
pop
and
mov
rol
stos
fcomp
add
and
pop
sbb
jbe
inc
out
and
neg
pop
add
ja
out
mov
sbb
inc
sbb
lock
movs
xchg
dec
or
jmp
loopne
xor
sub
stos
aam
dec
mov
or
push
(bad)
push
pop
(bad)
adc
push
adc
pushf
int3
jo
shl
lock
inc
push
stos
or
movs
sub
aam
jnp
pop
inc
arpl
jl
jle
mov
and
push
or
push
inc
push
and
hlt
sar
popa
ins
and
mov
push
or
gs
inc
mov
or
inc
and
xor
add
add
xor
mov
push
aam
sbb
out
xor
ds
pop
adc
sbb
adc
jl
mov
in
seto
xor
popa
xor
jl
and
sbb
dec
dec
mov
mov
nop
push
adc
push
push
enter
or
sbb
push
mov
movs
inc
mov
addr16
adc
sub
test
and
enter
cmp
out
or
imul
dec
add
(bad)
inc
mov
in
cmps
fistp
int
xchg
mov
or
test
jmp
sbb
cmp
add
ja
inc
sub
adc
xchg
xchg
inc
inc
fsub
xchg
scas
dec
sub
(bad)
retf
sub
popa
cli
push
in
jns
fs
push
push
std
(bad)
xor
sub
(bad)
xlat
mov
jmp
nop
pop
xchg
push
xor
xchg
and
dec
nop
aam
mov
in
inc
push
push
in
and
inc
jmp
or
rol
xchg
add
das
stos
push
inc
jecxz
or
sub
jp
or
js
add
mov
push
jns
inc
add
outs
inc
repnz
push
test
ins
mov
dec
inc
xor
daa
lods
push
xor
out
stc
loope
sti
das
mov
jmp
push
mov
sub
inc
cmps
(bad)
add
jb
ret
cwde
fs
adc
jns
and
inc
dec
sti
adc
(bad)
or
add
les
pop
call
test
pop
push
std
dec
pop
jl
mov
mov
dec
hlt
push
das
adc
mov
inc
or
jbe
push
push
jp
mov
out
sub
ficomp
adc
jmp
daa
and
repz
push
call
ror
dec
pop
mov
ds
loop
cmp
add
js
les
nop
dec
popa
fwait
dec
ret
and
lods
pop
sbb
repnz
mov
inc
or
les
(bad)
outs
clc
adc
push
in
push
inc
ins
movs
dec
and
pop
(bad)
jns
pop
mov
pop
fisttp
inc
pop
inc
and
add
shl
inc
scas
xchg
push
sahf
sbb
fild
sbb
lea
add
or
or
mov
js
das
loopne
xchg
sub
xor
loop
sub
push
int
dec
inc
nop
das
fld
or
xchg
pop
inc
xchg
icebp
add
xor
push
sub
sub
popa
rol
push
add
mov
mov
leave
dec
push
xor
scas
jmp
inc
xor
add
inc
stos
ja
mov
dec
inc
daa
fcom
inc
ins
add
sbb
ret
inc
inc
pusha
mov
and
push
enter
or
inc
xor
repz
sbb
outs
push
setg
arpl
outs
xchg
das
pop
dec
mov
ss
inc
mov
(bad)
lea
add
out
sub
or
add
add
in
aad
test
cmp
les
cmp
nop
adc
ja
push
pop
xchg
sub
add
sub
xchg
mov
xchg
or
(bad)
cld
or
xchg
add
xchg
pusha
loope
mov
lock
sub
mov
je
pop
mov
leave
and
push
xor
or
push
dec
lea
push
jle
and
fstp
jnp
sub
inc
hlt
jae
and
sbb
and
mov
add
(bad)
adc
in
dec
call
ror
mov
(bad)
or
mov
mov
mov
cwde
ucomiss
mov
in
mov
stos
pop
shl
imul
dec
rcl
dec
inc
inc
and
in
push
pop
fwait
push
movs
mov
push
pop
hlt
pop
or
mov
xchg
push
pushf
outs
shl
cmp
dec
ret
fimul
jmp
push
inc
add
lock
xor
push
ja
in
sbb
in
jle
sbb
pop
loop
add
test
pop
lods
push
call
add
pop
pusha
inc
fcomp
cmps
sbb
enter
outs
and
adc
fs
mov
sub
pop
daa
and
dec
mov
movs
lock
(bad)
push
and
fadd
pop
and
cmps
and
cmp
mov
popa
push
push
push
mov
push
add
mov
adc
cmp
dec
shl
push
add
sub
push
push
mov
popa
push
ds
xor
or
sbb
cwde
(bad)
(bad)
in
outs
push
sbb
push
jo
or
jns
call
mov
sbb
rcr
sub
cdq
cwde
mov
cmp
xor
sub
mov
push
cli
push
mov
xor
pushf
adc
sub
add
lahf
add
mov
pushf
bound
or
cmps
popa
add
dec
enter
cmps
pusha
lea
cmp
shl
or
(bad)
cmp
sbb
mov
pop
into
jl
or
lock
arpl
mov
push
adc
xchg
and
les
sbb
and
movs
dec
rcr
sbb
pop
loopne
nop
add
sbb
fsubr
iret
mov
or
pusha
inc
ret
mov
dec
les
pushf
fs
xor
dec
jb
inc
jns
mov
adc
rol
sbb
iret
in
in
cmp
mov
inc
dec
adc
and
in
icebp
and
das
sub
sbb
adc
and
mov
push
and
pop
adc
add
xor
cmp
xchg
add
or
push
fstp
and
popa
jg
pushf
or
inc
add
hlt
sub
push
and
fadd
push
loopne
xor
jecxz
mov
sub
ret
rol
inc
sbb
jno
retf
xchg
add
cmps
or
fdiv
push
in
call
imul
jb
or
xchg
or
push
nop
pop
not
jb
lods
mov
jge
mov
add
jl
push
push
jnp
loopne
inc
inc
daa
je
sub
test
bound
sbb
xor
and
cmp
push
das
lea
and
push
leave
call
cld
or
inc
or
dec
cwde
pop
mov
mov
aam
sbb
addr16
inc
shl
int3
or
test
xor
iret
pop
call
jge
sub
add
ror
add
add
push
lods
data16
jo
or
daa
or
xchg
out
nop
imul
mov
sbb
popa
add
push
dec
mov
cmp
push
and
ins
(bad)
add
out
(bad)
imul
pushf
mov
inc
inc
outs
inc
sbb
adc
adc
nop
lods
sbb
into
in
add
dec
add
jg
sub
add
jb
in
movs
fs
mov
movs
push
inc
dec
mov
push
or
and
rol
mov
aam
cmp
xchg
add
push
inc
lahf
dec
jae
bound
test
fisttp
add
inc
adc
xor
cmp
cmp
outs
jae
loopne
cmp
iret
sbb
sub
or
push
mov
(bad)
mov
xchg
aas
cwde
pusha
cmp
mov
daa
adc
add
push
push
pop
mov
arpl
sub
or
cdq
sbb
or
sbb
push
lods
in
cmp
and
ins
ins
cmp
je
test
add
imul
jle
retf
(bad)
aam
cmp
pop
leave
fs
add
pop
ins
push
add
xor
or
or
mov
loope
add
call
xor
cmp
dec
bound
or
out
inc
inc
inc
pushf
pushf
fwait
repnz
je
pop
mov
mov
daa
hlt
sbb
imul
jle
repnz
push
adc
push
test
cs
add
push
push
xchg
cmp
adc
mov
aas
add
retf
add
or
mov
add
shl
add
mov
das
adc
call
add
clc
pop
push
es
mov
push
nop
xchg
cmp
outs
inc
js
xor
inc
outs
inc
out
adc
fild
test
rol
push
pop
ror
push
push
inc
rcr
dec
pushf
mov
adc
les
lea
je
mov
add
lock
inc
inc
mov
sub
xor
cs
jbe
pop
inc
es
int3
gs
add
fxch
in
jo
or
dec
jo
or
add
dec
xor
sbb
rcl
mov
push
fild
test
test
cmp
push
fs
nop
cmc
fwait
mov
push
fidiv
into
add
lock
inc
mov
bound
(bad)
adc
sbb
inc
mov
je
sbb
jne
test
int
jmp
sbb
or
push
sub
ins
out
pop
push
in
mov
mov
push
(bad)
dec
out
jo
adc
inc
sbb
adc
push
shl
dec
sbb
mov
add
or
mov
enter
cs
mov
dec
sbb
shl
fnstcw
mov
sar
pop
fsubr
test
cli
ror
js
test
sub
popf
sbb
xchg
sbb
test
xchg
in
cmp
mov
dec
adc
adc
push
arpl
stos
int3
and
adc
dec
test
sub
xor
stc
pusha
xchg
and
mov
pusha
sub
je
dec
(bad)
cwde
(bad)
pop
les
push
sub
lock
cmps
fnstcw
pop
adc
jmp
mov
fnsave
jns
pop
mov
dec
add
aas
in
rcl
inc
in
sub
inc
push
push
les
mov
cmp
push
jmp
loopne
mov
mov
xchg
nop
pop
add
xchg
jmp
pop
push
inc
or
dec
add
or
push
adc
fidiv
fmul
(bad)
mov
sbb
push
add
dec
pop
sub
call
add
or
mov
add
mov
mov
adc
adc
or
in
cmp
movs
jle
mov
int
mov
lea
pop
pop
pop
fadd
sbb
push
inc
dec
jne
out
add
cmp
mov
and
pop
daa
js
mov
adc
add
xchg
and
sbb
(bad)
mov
push
rol
sub
or
push
mov
sbb
das
mov
jle
fs
bswap
shr
mov
dec
jns
jmp
adc
and
(bad)
mov
fcom
or
jmp
cmp
sti
mov
aam
nop
mov
push
add
popf
add
(bad)
xor
into
cld
scas
ret
(bad)
jl
mov
or
mov
rol
jne
ds
ds
jnp
fcom
call
std
lea
call
cmp
arpl
imul
add
fsub
data16
or
push
cmp
cld
(bad)
icebp
jno
rol
sub
sbb
xchg
shl
jnp
movs
ret
in
jne
clc
sahf
nop
push
or
das
or
or
inc
or
mov
dec
or
and
loopne
jmp
inc
fisttp
adc
mov
pop
pop
cld
xchg
sub
sbb
cmp
movs
push
pop
clc
test
inc
adc
pop
sub
out
ss
and
dec
mov
outs
sbb
repnz
int
xor
sub
adc
inc
mov
mov
mov
arpl
xor
or
push
sub
mov
psubb
ss
push
mov
sub
mov
inc
pushf
fidiv
push
outs
cdq
sbb
or
mov
push
pop
out
pop
in
arpl
call
jge
push
out
sbb
jl
test
sbb
int3
cmp
push
das
loopne
adc
adc
cmp
js
scas
sub
dec
or
(bad)
add
jb
cs
pop
add
shr
inc
hlt
sbb
or
sbb
cmp
test
ror
dec
mov
adc
pop
xor
or
enter
and
xchg
out
dec
rcl
and
xadd
repnz
push
push
addr16
popa
call
add
add
js
je
mov
mov
pop
test
mov
or
push
push
movs
aam
adc
push
in
jnp
pop
sub
jmp
xor
cmc
and
sub
pop
adc
or
jmp
shr
add
dec
push
add
test
mov
xor
jae
imul
jbe
mov
dec
push
rol
inc
jo
or
rcl
mov
lahf
xchg
or
(bad)
adc
cmp
ins
call
add
or
cdq
adc
enter
jg
xor
inc
in
or
lea
xchg
sbb
movs
cmps
and
nop
mov
hlt
sub
push
adc
rol
sahf
jl
lock
mov
add
pusha
mov
pusha
dec
mov
dec
lds
push
pop
cs
or
adc
mov
push
add
fcomp
xor
sub
dec
and
scas
cmp
or
call
in
or
cmp
xchg
xchg
cmp
and
jp
xchg
lock
mov
mov
add
hlt
or
add
sub
sti
cmps
mov
jb
inc
ret
cmp
jg
or
js
loopne
es
inc
lea
pushf
adc
dec
add
add
mov
push
push
not
addr16
sub
mov
push
push
xor
adc
adc
(bad)
(bad)
daa
cld
mov
shl
inc
add
or
push
addr16
jl
or
cmps
sub
aam
jle
ss
fstp
sub
iret
cmps
mov
mov
mov
pop
scas
pop
adc
sub
dec
enter
imul
data16
mov
sbb
int3
xchg
inc
inc
mov
jmp
mov
ins
mov
push
add
or
adc
dec
in
inc
dec
xor
pop
scas
mov
add
push
mov
sahf
dec
push
mov
sbb
in
sbb
je
je
inc
mov
jge
mov
sbb
aad
jmp
pushf
iret
jmp
imul
call
sti
jo
add
inc
pop
mov
movs
add
xlat
cmp
dec
mov
xor
adc
rol
push
pushf
out
sahf
push
or
or
cmps
into
push
or
adc
dec
mov
and
jmp
add
push
retf
jo
popf
ds
pop
adc
jmp
mov
dec
les
adc
lea
mov
fidivr
sub
stos
test
or
and
lods
jge
sbb
or
jle
gs
mov
jmp
xor
ret
ins
and
jmp
lss
and
jmp
pop
adc
xor
ins
and
or
or
or
add
jae
and
(bad)
ret
(bad)
and
push
sub
mov
sar
enter
mov
fadd
pusha
xchg
pop
retf
sbb
mov
mov
and
lock
add
mov
hlt
add
jmp
inc
shr
sbb
push
js
(bad)
or
sbb
add
push
ins
enter
(bad)
ins
sbb
out
push
(bad)
out
stos
leave
pop
fdivr
fnstcw
adc
aaa
push
sbb
pop
or
cmp
adc
mov
inc
inc
loopne
clc
clc
hlt
hlt
js
adc
outs
xchg
or
outs
cmp
jg
jecxz
jl
outs
add
lods
icebp
add
dec
or
push
sbb
adc
call
shl
sahf
add
inc
pusha
nop
add
push
mov
push
in
hlt
pop
ins
add
repz
sbb
or
dec
sbb
ror
add
call
dec
jae
hlt
loopne
pop
adc
mov
rol
iret
fucom
shl
loopne
rcr
int3
mov
or
lock
add
js
rcr
xchg
mov
fcom
fwait
jns
fidiv
mov
rol
stc
add
call
lods
or
lods
ret
popa
not
scas
mov
mov
mov
in
jb
lods
mov
cli
mov
push
add
ret
dec
adc
fsubr
in
pop
mov
mov
adc
scas
movs
test
loopne
imul
call
inc
popa
mov
sbb
push
xchg
inc
pop
dec
inc
les
mov
(bad)
push
add
clc
out
scas
xchg
xor
xor
adc
adc
or
addr16
rcr
and
mov
jb
das
dec
xor
outs
inc
jo
(bad)
popa
mov
adc
inc
clc
mov
pusha
add
lock
or
jg
fcom
inc
pop
sub
aaa
push
movntps
imul
jo
ja
or
dec
dec
jb
aad
pusha
mov
enter
imul
pop
add
jl
add
in
aam
add
xor
cmp
mov
pop
jl
cmp
aaa
add
inc
pusha
movs
and
cs
rcl
and
ins
movs
or
sub
sbb
rol
mov
mov
xor
nop
cld
pop
ja
call
cmp
or
cs
xor
shl
xchg
psadbw
pop
push
xchg
inc
mov
pusha
lfs
enter
xchg
or
push
dec
mov
(bad)
fsubr
arpl
push
inc
arpl
aaa
or
lods
jmp
addr16
inc
pushf
test
adc
test
adc
pop
inc
or
cmp
pop
add
dec
shl
stos
or
jl
ss
fwait
push
mov
and
xchg
enter
loopne
inc
jge
inc
repnz
mov
cmp
wrmsr
sbb
div
xchg
(bad)
push
retf
stos
cmps
data16
shr
sub
and
mov
xchg
mov
add
es
rol
rol
sbb
sbb
dec
push
sbb
dec
and
mov
lods
not
add
mov
add
add
mov
pusha
mov
and
sbb
add
sar
adc
icebp
pop
ret
push
(bad)
jo
inc
jne
fs
cdq
add
pusha
mov
push
test
dec
(bad)
lds
push
xor
add
mov
das
pop
cmps
mov
xlat
pop
mov
adc
lea
in
cmps
push
ror
aam
adc
lods
xor
xor
and
xchg
cmp
push
push
cwde
int3
mov
ins
push
inc
push
jp
clc
mov
cmp
mov
dec
hlt
mov
mov
in
lock
rcr
mov
call
and
call
nop
sub
inc
mov
jg
inc
or
mov
(bad)
int
ja
ins
jp
dec
sbb
cmp
mov
je
mov
and
push
cmps
dec
dec
jp
bound
jmp
inc
inc
xchg
outs
or
js
loopne
inc
int
add
mov
add
outs
stos
inc
dec
jne
dec
popa
jecxz
push
xchg
loopne
and
sbb
mov
jnp
in
fisubr
push
fucomi
fs
outs
mov
add
sbb
push
xlat
add
dec
adc
push
js
lock
bound
push
mov
and
cmp
inc
inc
add
mov
mov
sbb
add
mov
pop
and
test
add
mov
jmp
push
adc
in
and
add
mov
dec
xor
xor
or
pop
mov
pop
and
fdiv
test
test
mov
mov
add
mov
int
sub
push
pop
in
dec
test
int3
in
mov
in
inc
daa
movs
das
ror
stc
and
pop
aaa
mov
(bad)
and
inc
xor
out
and
addr16
add
mov
jno
test
jb
xchg
mov
and
mov
sub
mov
mov
popa
aam
cdq
inc
add
cmps
mov
add
dec
out
sbb
add
add
inc
test
jle
lds
(bad)
loop
(bad)
dec
loopne
addr16
test
add
mov
mov
les
mov
test
stos
movs
or
or
cmp
push
mov
sub
xor
add
xor
dec
xor
leave
mov
mov
sbb
imul
mov
mov
jnp
ror
call
add
and
or
repnz
mov
sti
xchg
je
ins
ja
or
push
mov
dec
adc
test
mov
ror
cmp
mov
pusha
test
js
mov
xchg
pop
push
sar
inc
sbb
jle
mov
push
sub
(bad)
mov
or
lahf
inc
or
mov
cmc
(bad)
sbb
mov
mov
call
inc
aad
enter
or
dec
adc
lock
pop
aas
jae
xor
out
jne
mov
movs
sub
test
call
pushf
(bad)
(bad)
cmps
fisttp
add
or
imul
sub
dec
cmp
addr16
das
test
or
add
pop
das
push
xor
push
fs
sysenter
imul
jmp
cmp
jno
mov
add
adc
cs
rcl
cs
and
test
sbb
add
mov
push
inc
add
ret
jne
popf
das
and
dec
cmps
pop
mov
cmp
sub
xchg
add
mov
push
icebp
and
js
jle
and
fwait
push
push
nop
xchg
pop
push
xor
in
ins
dec
pop
pop
les
nop
sub
clc
push
(bad)
and
fist
inc
push
imul
mov
clc
aas
jne
pop
xchg
pop
or
sbb
push
xchg
cmovg
mov
cmp
daa
adc
ret
xchg
das
mov
and
or
iret
jo
(bad)
and
sub
inc
and
jle
mov
test
push
push
(bad)
fisubr
and
push
in
add
dec
not
push
push
dec
push
jmp
scas
push
and
push
xlat
test
mov
push
push
int3
lds
arpl
(bad)
fsub
fidiv
outs
jmp
pop
inc
push
dec
inc
adc
adc
lock
outs
sbb
dec
test
mov
fdivr
jge
shl
lds
inc
xor
xor
or
mov
sbb
jmp
or
call
rcl
cmps
idiv
into
dec
js
in
xchg
repz
pop
data16
add
clc
repz
push
in
xchg
inc
pop
cld
mov
pop
setnp
rcr
inc
std
hlt
out
sub
es
dec
(bad)
push
inc
mov
xlat
push
add
sub
push
sub
add
add
mov
xchg
sbb
aaa
sub
lea
popf
jnp
or
or
push
in
lds
imul
stc
js
pusha
mov
xchg
and
mov
jno
gs
cmp
dec
mov
mov
mov
test
pop
mov
je
sbb
sbb
js
or
lea
xchg
add
sbb
inc
jl
ficom
enter
stc
add
je
cwde
pop
sbb
add
pop
or
rcl
pusha
loopne
das
add
popf
push
cmp
xchg
push
sub
xor
pushf
loopne
jmp
daa
mov
push
and
and
add
jle
or
xor
mov
adc
and
dec
(bad)
xchg
imul
adc
fdivr
mov
icebp
fisttp
sub
mov
jmp
mov
mov
inc
pop
(bad)
es
add
dec
sub
(bad)
clc
adc
ret
dec
xor
adc
dec
jge
xchg
outs
mov
and
in
push
sub
ss
push
and
or
add
ret
inc
pop
cmp
xchg
or
loopne
cmp
test
dec
adc
adc
jnp
and
mov
iret
in
or
int
push
adc
sbb
or
or
popf
push
inc
sub
push
dec
push
fidiv
mov
push
pop
push
sub
mov
shr
(bad)
(bad)
leave
movs
xor
ret
mov
dec
dec
mov
add
ss
pop
add
cwde
rcr
add
ror
pusha
xchg
nop
aam
push
or
bound
dec
call
and
pop
sub
sbb
push
or
xchg
mov
jmp
push
push
ret
xchg
push
sti
adc
les
shl
adc
adc
in
xchg
pushw
jmp
mov
mov
mov
jmp
retf
push
loope
dec
mov
jg
pop
das
or
and
or
fsub
jne
add
arpl
sbb
jo
js
je
les
jle
and
loopne
inc
xchg
test
(bad)
data16
imul
mov
adc
int
es
add
pop
dec
or
mov
push
xchg
and
loope
pop
push
sbb
or
and
enter
outs
aaa
mov
sar
cmp
stos
jbe
mov
xchg
stos
and
scas
test
and
dec
loopne
iret
daa
add
or
mov
or
mov
push
dec
mov
cmc
mov
or
push
mov
adc
das
cmp
je
push
rcr
ror
loopne
cmp
sahf
jl
and
lea
cmps
dec
shl
sti
adc
ret
xchg
imul
inc
mov
mov
jae
pop
inc
sbb
adc
push
xor
lods
das
sahf
inc
loopne
inc
xchg
loope
inc
stos
adc
mov
xor
mov
repz
fidivr
inc
aam
scas
(bad)
int
call
call
push
adc
daa
ucomiss
test
hlt
jmp
mov
adc
pop
sub
cmps
add
cld
in
add
dec
test
pusha
add
adc
jecxz
shl
in
ret
ins
nop
int
cmp
out
mov
dec
out
int3
or
push
jmp
cmp
add
imul
mov
inc
ins
pop
fist
popf
or
xchg
pop
adc
test
xchg
cld
add
mov
fdivr
movs
jb
and
lock
add
mov
jne
mov
sub
das
inc
(bad)
cwde
lods
and
and
data16
aam
in
cdq
js
mov
inc
lock
add
sbb
cmp
loopne
add
cmp
add
mov
shr
sub
sar
fcmovbe
js
xchg
mov
sbb
xlat
push
mov
(bad)
push
adc
cli
push
cmp
push
adc
repnz
sbb
push
xchg
jo
xchg
push
test
sub
mov
or
and
push
pop
push
(bad)
cli
xchg
xor
and
daa
pop
xor
inc
js
retf
ror
cmp
and
aas
pop
push
mov
rol
ds
fs
mov
enter
aaa
inc
aaa
in
test
cmp
mov
je
add
mov
inc
sbb
je
dec
pop
xchg
push
je
out
and
ja
or
or
lock
jg
sbb
xchg
retf
push
jo
mov
jmp
icebp
xchg
or
jmp
les
or
inc
or
aas
xor
test
push
loopne
arpl
mov
sub
mov
jmp
xchg
add
movs
dec
sbb
inc
arpl
ror
jae
push
js
sti
adc
or
dec
adc
dec
sbb
sbb
and
dec
add
sbb
mov
or
add
pop
pop
jo
sub
jno
shr
xor
cmps
xor
jle
dec
pushf
outs
call
dec
add
or
sub
lahf
or
int
xchg
xor
clc
inc
dec
bound
push
mov
add
jns
push
loopne
mov
or
sub
sub
or
xchg
(bad)
in
cmovb
movs
push
clc
mov
test
test
loope
ret
push
add
mov
inc
adc
jo
imul
lock
test
inc
test
push
inc
sub
lahf
adc
push
adc
xchg
push
push
sub
repnz
lea
push
cmps
push
sub
je
fsub
fstp
in
lock
jae
sub
mov
cmp
add
outs
cld
nop
inc
push
push
xchg
popfw
aad
ret
push
inc
rcr
mov
inc
mov
jae
test
sbb
imul
in
inc
loopne
mov
imul
loope
jg
enter
scas
and
add
add
movs
pop
outs
mov
retf
out
pop
iret
and
push
out
aad
or
imul
push
adc
xor
xor
pop
mov
and
seto
push
pop
push
add
rol
inc
loope
sbb
push
rol
inc
loopne
loop
test
mov
lods
sbb
or
mov
test
and
or
cmps
bound
add
test
cmc
or
mov
stos
mov
push
mov
add
in
or
and
add
dec
mov
or
and
jle
stos
or
lock
in
pop
dec
sub
mov
cld
cmp
sub
fwait
push
fnsave
enter
hlt
call
pop
imul
pop
add
sbb
mov
inc
add
test
adc
or
stos
add
pop
pusha
mov
push
or
push
scas
inc
pusha
add
add
enter
dec
mov
add
or
cmovl
or
and
sbb
push
dec
inc
and
cmp
inc
and
ins
out
jmp
and
lahf
out
stos
lahf
dec
sub
xor
mov
push
pop
cmp
mov
pop
pop
ins
popf
xchg
inc
dec
sbb
or
lods
and
cmps
rol
jge
das
jns
lods
inc
pop
or
arpl
or
call
mov
xor
sbb
push
mov
adc
cmp
(bad)
pop
dec
cs
jae
pop
aam
push
pusha
sub
sbb
pop
or
pusha
push
jmp
fld
lods
or
adc
jno
fs
loope
dec
call
dec
mov
adc
mov
lahf
xlat
call
add
dec
lds
fisub
fs
lods
dec
add
pusha
ins
jno
test
(bad)
and
movs
(bad)
mov
fsub
shl
or
rol
adc
and
bound
or
scas
mov
pop
dec
sub
mov
xchg
test
test
mov
jp
or
and
pop
xor
sub
inc
dec
call
add
adc
imul
int3
sbb
or
xchg
cmp
or
jbe
cdq
in
loop
push
in
dec
mov
add
push
or
xlat
enter
in
or
loopne
add
and
div
sbb
loopne
call
popa
sub
mov
test
in
lods
out
aad
cmp
jne
and
fwait
aad
jle
and
mov
in
dec
sbb
pop
xor
or
pop
(bad)
mov
pop
das
mov
cmp
pop
cmp
or
or
(bad)
in
cs
lods
push
ficom
mov
test
(bad)
adc
popa
add
scas
and
xchg
mov
mov
dec
sub
cmp
mov
mov
call
cmps
das
fucomi
push
add
pop
movs
mov
ins
aas
sbb
leave
retf
gs
sti
iret
jnp
ret
sahf
sbb
fs
xchg
mov
pop
aaa
data16
jp
xor
(bad)
cmp
imul
and
movs
push
and
jo
jl
xor
jnp
adc
bound
dec
ret
inc
xor
lods
xchg
data16
adc
mov
fiadd
or
loopne
dec
lods
lods
cld
pop
inc
jmp
cmp
jne
add
add
sbb
dec
mov
lahf
out
xchg
or
pop
inc
scas
mov
into
je
adc
and
xor
and
inc
jne
aaa
enter
add
sbb
add
imul
sbb
jmp
push
test
adc
fcmovbe
out
int3
mov
test
pop
ret
in
jns
jns
shl
push
inc
aas
adc
sbb
inc
adc
es
or
pop
cli
push
adc
mov
movs
fdivr
inc
(bad)
sub
add
mov
xchg
outs
arpl
add
mov
lds
div
js
sub
and
lahf
cld
dec
or
cli
sbb
test
ret
adc
cmp
push
or
ss
fistp
int3
sub
inc
add
loopne
xor
add
adc
js
add
xor
push
mov
cmp
int3
adc
cmps
retf
mov
jb
cmp
pusha
cmps
add
xor
mov
mov
retf
pop
scas
inc
adc
cmc
in
inc
cmp
fdivp
adc
aaa
ins
inc
sbb
into
aam
mov
popf
loopne
mov
outs
cmp
xchg
pmaxsw
adc
push
adc
mov
add
sbb
inc
mov
sub
add
out
inc
inc
mov
or
ds
mov
ret
jne
inc
mov
inc
xor
jbe
xchg
test
retf
mov
or
adc
ret
adc
loopne
test
mov
movs
pop
sbb
mov
jb
mov
sbb
nop
outs
mov
push
adc
cmp
pop
jmp
mov
sti
shr
dec
dec
(bad)
or
movs
xchg
jp
mov
rcl
push
mov
das
or
pop
adc
int
les
cmp
cmp
add
or
sub
and
mov
shl
cmp
aam
repz
ret
cmp
pushf
pop
mov
sbb
or
cmp
fcom
xor
loopne
out
xor
mov
add
(bad)
int
add
cmp
sbb
sti
push
inc
dec
in
inc
sub
(bad)
or
lds
push
jecxz
jns
sbb
call
scas
sbb
fwait
sub
loopne
aaa
fld
in
call
pusha
jo
(bad)
lock
iret
and
add
scas
movs
pop
fisubr
pop
stos
and
sub
mov
daa
add
add
pushf
and
xchg
(bad)
inc
pusha
int
xchg
add
or
nop
and
les
adc
push
test
clc
inc
ret
sub
push
arpl
sysret
ret
iret
mov
jo
mov
daa
daa
aas
mov
add
in
in
in
mov
push
addr16
pop
or
add
hlt
mov
shl
je
mov
test
or
mov
push
mov
mul
cmp
call
mov
xchg
addr16
mov
inc
(bad)
lock
xor
lock
call
inc
cmp
mov
ret
cmp
push
and
push
mov
ret
movs
js
in
popa
dec
or
cmc
jecxz
or
lea
lea
aaa
repnz
adc
mov
call
mov
and
inc
cmp
js
push
mov
cld
sbb
nop
ret
jno
push
xchg
sar
lods
adc
push
inc
mov
mov
stos
sub
and
adc
call
aaa
cmp
scas
push
mov
adc
mov
sbb
jmp
adc
movs
xor
xor
cmp
addr16
pop
cs
xor
cmp
and
pop
xchg
push
test
push
sar
mov
jmp
add
and
dec
inc
pop
imul
jne
lahf
movs
mov
repnz
mov
jmp
aad
retf
test
xchg
xor
shr
cmp
mov
in
jo
rcr
outs
sub
push
sbb
fld
pop
shl
cmp
shl
shl
cld
ins
mov
dec
mov
sub
int
mov
rcr
mov
xor
nop
dec
sbb
push
test
push
std
and
push
jnp
cmp
jb
mov
js
rol
mov
push
fadd
push
xchg
loopne
or
push
jns
jne
rcl
add
add
ret
adc
in
pop
inc
cmp
cmp
or
adc
sub
sbb
push
imul
dec
jg
mov
and
push
sub
dec
sub
mov
and
cmp
int3
push
ret
mov
mul
das
ins
xor
and
scas
push
adc
pop
fs
xchg
xchg
daa
shr
and
pop
leave
jl
(bad)
sar
ror
dec
or
js
or
cmp
arpl
xor
js
sub
and
sub
xor
fsub
retf
fs
and
pop
dec
xchg
add
push
cwde
(bad)
iret
add
jae
xor
mov
adc
sbb
rcl
dec
dec
sbb
add
loope
or
loop
jecxz
test
inc
sbb
inc
xlat
jo
rcr
test
and
sti
loopne
jmp
xor
or
and
inc
add
mov
or
loopne
mov
call
sub
cmp
ret
jb
in
hlt
ret
add
push
inc
mov
or
and
dec
dec
fs
push
cmp
add
mov
ja
ret
adc
ret
pop
shl
sub
ret
dec
jmp
mov
aad
mov
sbb
push
pushf
sub
ss
add
and
dec
push
adc
adc
iret
cld
xor
sub
sub
inc
dec
sbb
add
clc
sub
test
ss
sbb
cld
cld
ins
sbb
cmps
push
call
sub
mov
js
dec
sbb
mov
or
mov
clc
or
or
add
xor
sbb
pop
(bad)
and
add
outs
in
sub
das
mov
lahf
or
rcr
jo
push
dec
mov
adc
inc
lods
pop
fsub
pop
lahf
loope
es
mov
mov
cmp
or
pop
fldenv
lea
lea
dec
sbb
adc
jmp
daa
dec
je
sub
je
sub
inc
or
je
mov
xor
cmp
xor
xor
mov
lods
fdivr
mov
fadd
jmp
mov
sbb
add
shr
or
sbb
mov
(bad)
pusha
mov
imul
mov
je
dec
clc
cmp
jge
jl
mov
aaa
xor
cdq
je
mov
jle
sub
and
adc
sub
loope
clc
imul
add
stos
ret
data16
or
xchg
push
sub
or
or
or
mov
mov
push
adc
pop
sub
das
sbb
in
push
cmp
lods
mov
push
push
add
mov
das
outs
mov
daa
push
ds
push
daa
js
mov
sub
mov
push
sub
inc
cmp
ja
jg
movs
xor
or
adc
test
or
jmp
jns
rol
outs
(bad)
push
sub
rcr
sbb
test
sbb
idiv
xchg
nop
movs
mov
jb
loopne
je
cs
inc
adc
push
cmp
or
shl
sbb
(bad)
mov
sub
or
xor
pcmpeqb
sub
sub
sub
or
pop
ror
dec
cli
or
xor
pop
lods
jns
xor
add
addr16
jne
call
xchg
sub
cli
fisub
pop
xchg
push
push
mul
sub
mov
inc
or
rcl
add
or
(bad)
dec
jp
add
fmul
add
sbb
dec
adc
fimul
ja
jae
and
xor
test
sub
inc
push
daa
sub
ret
pusha
and
cdq
add
mov
addr16
outs
imul
push
std
inc
push
xchg
xchg
push
add
jg
pop
data16
mov
ss
dec
ins
out
push
add
adc
xchg
dec
add
push
add
jmp
aad
loope
mov
ror
loopne
and
sti
(bad)
fistp
jae
adc
dec
add
push
sub
add
sti
pop
cmp
inc
cwde
arpl
add
inc
scas
inc
das
das
inc
imul
repnz
xor
dec
outs
or
retf
inc
add
push
adc
add
mov
push
xor
sbb
cmp
stos
sbb
movs
mov
xchg
arpl
jbe
imul
add
lods
or
push
jne
sub
sub
sbb
ins
xchg
adc
add
pop
movs
jge
daa
add
adc
add
sar
pop
sbb
rol
mov
inc
sub
inc
lods
or
pusha
pop
dec
pop
jge
mov
fwait
pop
inc
pusha
inc
or
jl
jmp
mov
xor
(bad)
adc
shr
test
mov
sub
and
loop
call
inc
and
mov
fwait
not
add
cdq
mov
dec
pushf
jge
fwait
fwait
mov
pop
rcl
dec
imul
test
daa
in
stos
popf
(bad)
in
push
sub
add
repnz
fsubr
pop
ret
push
inc
mov
pop
push
xchg
dec
dec
or
push
shl
(bad)
xchg
ds
xchg
sub
es
adc
mov
dec
into
movs
data16
adc
test
cli
daa
ins
leave
sbb
int
stc
aam
aaa
aam
cwde
cmp
enter
int
add
adc
sbb
or
mov
inc
out
add
xor
sub
push
pop
addr16
loopne
or
push
cmps
mov
push
add
push
dec
add
scas
add
jge
mov
dec
pop
pop
pop
mov
mov
lds
ins
adc
push
mov
push
or
or
pushw
or
or
sub
push
mov
cmp
push
call
add
loopne
add
lahf
inc
popa
test
jge
push
push
add
mov
xor
push
data16
and
retf
pushf
and
push
sub
push
fiadd
pop
pop
add
adc
daa
daa
(bad)
jecxz
xchg
xchg
mov
pop
ret
neg
add
inc
ja
push
dec
pmaxub
cmp
cmps
fmul
add
sub
mov
push
sub
jp
les
mov
pop
sbb
lea
push
jo
or
inc
jle
mov
cmp
adc
fcom
push
xchg
and
xchg
sub
imul
cs
imul
sbb
push
imul
cmp
jbe
lock
in
sub
hlt
idiv
add
fsub
xchg
mov
stos
(bad)
mov
jno
adc
movs
and
add
fld
outs
daa
and
sub
sbb
imul
xchg
or
jbe
bswap
add
loopne
add
shl
int3
std
cmc
rcr
sbb
or
or
jne
add
into
sbb
adc
pop
retf
push
add
and
sar
int3
fist
pop
loope
push
dec
push
adc
mov
loopne
(bad)
loope
mov
dec
unpcklps
sub
cmp
dec
inc
enter
test
in
cmp
shr
hlt
pusha
rcr
in
inc
jbe
or
jbe
adc
aad
fadd
pop
dec
and
push
mov
dec
fs
and
fmul
je
les
and
mov
add
and
rcl
nop
call
or
je
sar
or
jno
jne
ja
adc
cmp
jne
adc
(bad)
dec
xchg
push
adc
ja
nop
test
inc
push
je
and
nop
adc
push
dec
xchg
sbb
xchg
stos
adc
inc
mov
cmp
data16
shl
into
or
pop
es
data16
iret
(bad)
fs
movs
test
cmp
cdq
push
or
stc
aaa
nop
adc
loopne
adc
jle
mov
adc
jmp
sbb
pushf
adc
pop
in
or
push
sub
shr
sbb
xchg
xchg
mov
pop
cld
sbb
lods
adc
cmps
lock
mov
enter
dec
add
cmp
cmp
xor
pop
adc
cmp
push
shl
push
mov
inc
cmp
out
or
inc
add
sbb
cmp
je
loop
push
mov
lea
outs
adc
(bad)
ja
adc
push
jno
cwde
int
aaa
mov
xor
xchg
mov
ror
add
adc
jne
xchg
lea
add
pop
daa
sbb
pushf
cmp
adc
in
jg
or
inc
adc
(bad)
cmp
add
addr16
mov
jmp
push
pop
push
push
jbe
add
cld
inc
jp
sbb
retf
xchg
test
add
(bad)
or
or
retf
ret
stos
sub
inc
xor
call
dec
out
push
and
mov
fstp
pop
inc
push
and
adc
adc
push
adc
dec
adc
add
sbb
xlat
adc
fwait
mov
inc
aas
inc
js
(bad)
mov
lea
add
add
sbb
clc
sbb
jmp
mov
imul
(bad)
mov
iret
jno
mov
xor
dec
mov
push
push
mov
xlat
mov
add
movs
adc
mov
inc
mov
mov
ja
adc
push
mov
inc
js
enter
push
mov
mov
add
or
mov
add
cmps
xor
dec
push
movs
sbb
fcom
les
mov
add
dec
(bad)
and
push
ror
add
xor
sbb
mov
inc
or
sbb
add
fmul
push
shr
scas
enter
outs
pop
clc
or
(bad)
rcr
jo
sbb
push
xor
jo
mov
xor
and
cmp
jb
pop
psubusb
clc
movs
pop
or
and
call
lock
je
cmp
cmp
or
mov
test
test
mov
(bad)
cmp
maskmovq
imul
mov
jmp
int
fild
shl
pop
scas
and
push
div
stos
shl
or
cmp
outs
popf
mov
pop
pop
sub
into
cmp
ins
ret
outs
sub
(bad)
add
push
rol
push
ins
xadd
in
cdq
jmp
pop
retf
sub
sahf
jle
push
call
pop
jmp
push
push
add
cmp
or
and
sub
aam
push
jo
xor
lahf
push
ds
aas
and
add
adc
adc
cdq
js
sbb
outs
pop
cmc
xor
or
nop
(bad)
inc
sub
ins
pop
icebp
fisubr
xchg
sub
inc
pcmpeqd
aaa
into
aaa
retf
jmp
push
mov
push
mov
cmp
mov
sti
adc
add
xor
mov
(bad)
icebp
jne
push
call
(bad)
sub
adc
jbe
adc
sbb
lds
add
adc
adc
inc
mov
inc
je
or
icebp
out
dec
stc
loopne
daa
and
or
add
fmul
push
sub
and
add
jns
and
aad
repnz
add
or
xchg
sub
out
add
sub
mov
cld
cmps
fldcw
and
clc
or
jle
xor
test
adc
ss
jns
jno
cmp
and
ins
sbb
dec
inc
sbb
mov
push
rcr
add
add
dec
sub
rol
pop
sbb
out
fmul
and
enter
or
push
sbb
or
add
iret
jne
jl
jb
inc
add
mov
in
aad
fcom
cmp
js
js
test
arpl
add
aam
add
(bad)
jg
sub
clc
sbb
jne
cmp
je
xchg
rol
jo
jmp
out
pop
mov
push
sbb
push
and
ret
inc
iret
test
js
ret
shl
iret
in
push
inc
or
adc
sub
mov
dec
mov
cmps
xor
adc
neg
push
mov
or
mov
ss
outs
adc
sub
mov
loop
lea
mov
cmc
out
jb
(bad)
push
ins
push
cmp
sti
adc
ins
mov
adc
or
mov
enter
dec
icebp
cs
out
inc
call
test
aaa
addr16
das
push
icebp
adc
ror
sbb
ds
rcl
adc
inc
mov
les
addr16
mov
stos
idiv
cmp
and
imul
jbe
and
sbb
fcomip
or
push
aaa
daa
mov
test
xchg
mov
xchg
cld
push
outs
(bad)
sti
push
lock
cmp
xchg
xchg
add
aad
cld
pop
pusha
int
mov
pop
add
ror
inc
mov
xor
fild
fsub
sbb
pop
or
ret
xchg
and
clc
ficom
jne
mov
xor
sub
xchg
test
or
adc
retf
pusha
inc
xchg
test
dec
jne
ret
clc
pusha
ficom
dec
and
lock
rol
leave
fucomip
in
dec
cwde
or
jb
clc
mov
or
xchg
push
push
ret
addr16
add
lahf
enter
pusha
inc
xor
sub
retf
ja
fsub
es
dec
cmp
push
xor
popa
imul
out
mov
xchg
das
pop
push
jmp
xchg
nop
outs
sub
rcr
and
loope
js
popa
mov
add
popa
cmps
ja
loope
cmp
add
cmp
leave
sub
mov
inc
scas
mov
dec
mov
sbb
jne
cmp
inc
dec
inc
mov
leave
add
xor
push
or
or
add
js
sbb
test
aaa
pop
mov
adc
sbb
mov
xchg
fcom
sub
call
scas
sub
and
scas
push
adc
inc
sub
inc
lods
sub
inc
clc
cmp
imul
mov
mov
mov
push
int3
and
pop
test
inc
mov
mov
sub
enter
mov
or
ins
sti
adc
(bad)
xor
aam
test
push
mov
(bad)
jmp
leave
stos
and
and
xor
jp
out
add
(bad)
stos
pusha
cmp
pop
retf
push
ins
clc
enter
je
ret
adc
sub
sub
mov
add
add
mul
jo
or
cmp
jns
push
xor
or
shl
daa
out
push
cli
jo
aam
js
in
sbb
push
inc
addr16
push
aam
es
or
adc
sub
loope
xchg
in
mov
dec
ror
sub
test
ret
jp
adc
sti
or
lods
mov
xor
push
jb
mov
test
mov
shr
add
test
sahf
call
imul
push
adc
adc
in
inc
repz
in
retf
add
mov
inc
loopne
jno
inc
xor
adc
push
inc
addr16
repnz
push
xor
adc
push
icebp
and
xor
pop
mov
dec
and
cmp
inc
push
repnz
inc
cmp
cmp
dec
or
push
adc
test
and
xor
pop
(bad)
mov
push
in
not
enter
adc
icebp
dec
jmp
mov
mov
stos
rcl
adc
cmp
ficomp
mov
push
inc
mov
das
pop
fild
mov
fistp
cmp
dec
mov
mov
mov
mov
daa
add
sub
push
lea
nop
adc
jl
(bad)
mov
and
dec
add
dec
inc
sub
ja
adc
cs
test
and
and
dec
movs
or
xlat
push
mov
retf
or
add
mov
mov
in
and
pop
mov
jno
jb
inc
pop
mov
or
adc
and
sub
js
mov
mov
fs
loope
lods
ds
(bad)
and
add
dec
xor
cld
out
inc
stos
or
sbb
addr16
push
int3
dec
cdq
sub
(bad)
xchg
jb
xchg
inc
cld
or
and
out
sar
mov
out
xor
rol
inc
pop
pop
or
xchg
imul
sti
push
push
xor
and
inc
inc
dec
add
int
fmul
xor
push
or
mov
mov
(bad)
cmp
pop
inc
movs
xlat
push
xor
add
or
in
and
jb
jmp
and
lock
adc
xor
push
shl
das
pop
jmp
xor
test
and
inc
jb
push
scas
ins
mov
cli
adc
push
repz
inc
dec
mov
lods
loope
out
addr16
add
xor
and
int3
dec
push
and
xchg
aam
clc
push
sub
add
pop
add
and
bound
or
shl
sub
add
gs
add
arpl
cmps
sub
mov
fst
inc
lea
push
in
inc
cmp
sbb
sbb
mov
pmaxub
cli
call
lea
cmp
ret
and
push
pushf
cmp
outs
dec
xchg
add
sub
dec
sbb
in
jnp
pop
adc
xor
sbb
or
in
aas
popa
jnp
sub
in
jge
sbb
jbe
inc
mov
shl
cmp
xchg
xor
cmps
test
das
adc
mov
xor
fisttp
adc
loopne
inc
mov
and
aas
or
or
or
or
hlt
or
test
cdq
pop
lods
pop
ret
pop
add
div
ret
mov
fsub
nop
dec
dec
fbld
mov
and
push
dec
aam
push
clc
add
xchg
sub
lea
jle
int3
or
je
cmp
jmp
mov
shr
add
pop
mov
jmp
mov
jg
add
xor
sbb
and
sub
push
mov
cmp
not
dec
inc
mov
bound
cmp
bound
call
leave
sar
push
(bad)
cld
or
push
test
gs
js
push
and
inc
mov
xor
inc
push
mov
and
int
paddsb
dec
dec
or
sbb
scas
xor
push
stos
les
mov
push
loope
in
test
dec
and
jb
enter
inc
xchg
(bad)
adc
pop
mov
jmp
sub
sub
out
add
sbb
ret
sub
jmp
clc
movs
out
pop
outs
mov
add
pop
fld
in
sub
lods
push
sbb
enter
or
mov
xchg
int3
jecxz
rcl
add
dec
pop
(bad)
and
sbb
leave
adc
sbb
or
popf
jge
add
enter
jge
sub
cmp
mov
adc
adc
push
xor
sbb
test
loop
nop
pop
sub
pop
inc
ret
mov
xchg
icebp
mov
jl
push
adc
fs
sub
ins
push
cmp
dec
les
push
sub
jmp
adc
inc
mov
cmp
ret
push
lock
loopne
ror
jne
ds
ins
push
nop
mov
push
or
mov
adc
fadd
neg
xchg
sahf
inc
imul
sti
repnz
xchg
cmc
icebp
add
adc
xlat
fldenv
mov
jo
in
push
daa
movs
jl
je
sbb
mov
dec
sbb
pop
and
inc
sbb
adc
nop
aad
repz
add
es
stos
inc
dec
push
add
js
push
pop
lahf
cmps
sub
push
out
xchg
mov
jae
pop
and
lods
shl
sbb
fwait
pop
pop
je
call
jnp
jnp
stos
outs
das
push
dec
bound
adc
inc
mov
mov
jmp
sbb
xor
hlt
xchg
push
xchg
outs
sahf
adc
push
sahf
es
sbb
es
or
sbb
call
cs
sar
add
inc
add
add
retf
clc
or
sbb
cdq
or
sub
addr16
enter
clc
hlt
jl
inc
add
int
daa
and
das
push
push
and
xchg
pop
mul
sbb
dec
add
add
push
add
cld
dec
mov
cmc
inc
fcomi
add
dec
pusha
jb
das
cs
enter
inc
jmp
mov
ss
xor
cmc
jl
ins
test
or
mov
cmp
lods
mul
js
in
or
lds
aam
(bad)
mov
cmp
fdiv
inc
mov
sbb
dec
push
mov
dec
mov
push
test
push
rcr
not
xor
pop
dec
shr
leave
and
mov
dec
add
out
adc
and
push
ds
adc
ss
pop
adc
sub
push
jmp
pop
dec
add
xchg
sub
bound
pop
xchg
mov
rol
mov
sub
dec
(bad)
adc
add
test
add
add
sbb
imul
cmp
(bad)
adc
pop
or
push
ja
sbb
in
(bad)
mov
stc
push
push
xchg
fcmovnbe
inc
loope
and
inc
test
push
pop
into
adc
leave
mov
leave
push
add
push
or
clc
clc
pop
push
jnp
rcl
mov
adc
mov
sbb
pusha
movs
sub
or
add
stc
hlt
inc
loopne
mov
test
in
int3
(bad)
hlt
(bad)
aas
add
push
mov
loop
pusha
ds
dec
add
shl
xor
and
push
push
push
cs
push
or
cwde
scas
enter
shl
and
add
xor
and
jne
mov
pushf
xor
jne
adc
jnp
push
and
or
mov
sar
popf
jmp
mov
and
mov
and
or
add
add
mov
lahf
xchg
cmps
inc
add
push
or
sbb
mov
mov
inc
add
or
add
imul
stc
cs
add
or
jae
add
add
cdq
lea
dec
and
and
(bad)
mov
ss
and
jmp
adc
add
outs
or
add
or
push
cmp
and
adc
cmp
or
adc
pop
pop
inc
add
jbe
ja
cmp
stc
je
cld
inc
xor
xchg
nop
popa
pop
jmp
sti
inc
push
adc
cmp
pop
xor
cdq
mov
js
nop
inc
mov
jl
sub
fs
add
ret
mov
inc
fsubr
adc
mov
or
adc
inc
test
add
inc
add
and
jb
test
sar
inc
mov
inc
and
or
xchg
addr16
jle
inc
movs
pavgb
bnd
adc
dec
xchg
cmp
jns
int3
sbb
push
mov
add
inc
outs
movd
and
jb
test
xchg
mov
outs
jnp
test
xor
adc
add
or
xor
push
sub
fnstenv
add
mov
or
sub
or
jno
ss
add
aaa
test
xor
ins
jne
dec
jne
pop
ror
or
cmp
or
push
outs
or
pusha
xor
push
cs
bound
adc
or
add
les
daa
js
mov
push
cs
ret
adc
inc
xor
ins
xor
es
push
xchg
sbb
jae
xchg
scas
fadd
xor
fstp
sub
push
adc
jmp
retf
fsubr
cmps
dec
pop
imul
orps
mov
(bad)
in
or
sbb
add
loopne
or
mul
stc
das
aaa
add
out
leave
rol
push
inc
xchg
push
jo
xchg
je
xlat
add
call
rcr
repz
in
les
inc
mov
pop
ror
mov
push
push
push
in
push
lds
sbb
add
add
icebp
xchg
inc
jo
in
sbb
test
push
xchg
mov
add
add
jmp
in
inc
leave
bound
mov
cmp
and
arpl
pop
pop
(bad)
push
test
ret
mov
mov
imul
push
sub
repnz
ret
adc
fwait
es
add
clts
add
cmovb
movs
push
inc
mov
push
xor
jo
int
rol
sbb
xor
xchg
xchg
xchg
adc
movs
ret
inc
leave
pushf
add
add
sahf
xchg
sbb
add
daa
add
push
gs
jae
inc
add
(bad)
push
adc
mov
add
inc
lock
rol
sbb
cmp
add
nop
les
inc
sbb
icebp
xchg
lods
dec
repz
add
sub
(bad)
ror
mov
jo
aas
ficomp
mov
test
sub
adc
push
adc
inc
sub
js
or
sbb
mov
sbb
loop
(bad)
add
test
pop
inc
jg
(bad)
loope
out
mov
adc
cli
dec
dec
push
in
mov
test
add
add
add
in
fidivr
xor
in
jnp
inc
xor
add
jp
add
(bad)
call
push
inc
push
dec
inc
dec
inc
dec
dec
inc
pop
inc
push
push
or
adc
lea
outs
inc
push
aas
ret
in
dec
inc
lds
sub
or
push
add
inc
fsub
inc
enter
scas
inc
and
mov
pop
add
loop
push
cmps
xor
das
ins
pop
out
stc
je
push
xor
dec
push
nop
jg
adc
jnp
or
imul
inc
jmp
stos
inc
or
ds
movs
ins
inc
ins
aad
idiv
xor
or
adc
retf
or
jb
jb
mov
jb
jb
test
mov
pushf
cwde
xchg
nop
jb
jb
mov
jb
jl
je
jb
jb
ins
push
add
pop
popa
adc
add
cli
push
push
jo
inc
lea
mov
aad
dec
xor
push
add
sti
in
push
jmp
push
pop
xchg
inc
jo
or
iret
nop
and
les
dec
push
out
sbb
xlat
mov
jo
lock
loope
inc
shl
ret
push
int3
push
push
pop
cwde
push
add
push
mov
mov
int3
mov
fdiv
sub
or
ret
popf
mov
jbe
jecxz
fwait
push
pop
pop
pmulhuw
in
push
push
dec
dec
pusha
xor
push
dec
shr
xchg
cmc
in
cmp
cmp
call
xor
mov
or
mov
cli
mov
ss
outs
ud2
cmp
xchg
lods
cmps
pop
cmp
or
push
jo
inc
std
or
jle
dec
push
cli
add
pop
ficomp
cmp
xchg
or
ins
pusha
das
or
xchg
pop
add
retf
ror
jmp
inc
add
mov
retf
ror
das
int3
sbb
and
jb
add
enter
xchg
xor
adc
bound
push
push
inc
or
pop
adc
or
ficomp
jecxz
push
adc
mov
cmps
or
xchg
retf
cwde
loop
mov
xchg
test
mov
xchg
xchg
xchg
xchg
mov
xchg
xchg
xchg
enter
xchg
xchg
xchg
xchg
fcomp
loopne
xchg
xchg
xchg
xchg
call
retf
xchg
xchg
clc
cld
add
add
xchg
xchg
xchg
or
adc
xchg
xchg
xchg
sbb
and
xchg
xchg
xchg
sub
xor
xchg
xchg
xchg
cmp
inc
adc
xchg
xchg
dec
dec
push
shl
dec
push
add
test
pop
add
jo
inc
ds
jns
jl
add
mov
adc
add
lahf
je
add
adc
xchg
adc
adc
push
cwde
and
pushf
inc
push
push
movs
xor
nop
retf
shr
mov
adc
and
and
pushf
ror
and
add
int3
sub
xor
xchg
sar
xchg
retf
push
fdiv
aam
lock
xchg
dec
jbe
or
nop
retf
lock
gs
sub
hlt
mov
add
enter
iret
add
clc
add
push
xchg
add
pusha
push
movs
xor
adc
lods
sbb
sub
push
sbb
and
pop
sbb
sub
add
sub
test
test
xor
xchg
add
lock
test
inc
dec
movs
xor
xchg
inc
jo
lods
rol
push
xlat
add
push
jge
inc
call
and
pop
test
adc
inc
clc
cmp
add
push
aaa
mov
inc
inc
pusha
cmp
cmp
xor
mov
sub
stos
dec
mov
sub
xor
ins
cmp
fisub
out
push
jbe
jne
popa
arpl
jae
addr16
and
and
cmova
push
rcr
xchg
and
dec
das
repz
dec
stos
sbb
or
dec
inc
xor
mov
cmp
pop
or
rcl
jae
mov
outs
ins
mov
ja
fnstsw
pop
out
outs
jb
aaa
sub
pop
mov
getsec
xchg
add
dec
push
add
xlat
outs
mov
aaa
dec
pop
mul
dec
dec
out
push
xchg
jne
adc
sbb
sub
mov
aad
and
mov
pop
jbe
pop
inc
add
dec
push
lods
cs
inc
aaa
sub
push
push
dec
inc
lahf
fild
adc
push
(bad)
ja
or
(bad)
js
int3
pop
cmp
push
into
jae
cmps
fisub
adc
push
jnp
lods
sbb
push
ins
lds
jg
xor
fild
fimul
add
aaa
ja
adc
inc
cmps
add
mov
mov
mov
or
syscall
add
rcl
mov
pop
pop
imul
push
scas
jbe
dec
add
jae
imul
(bad)
inc
shl
add
or
pop
mov
shl
mov
je
call
lock
rol
test
stc
add
(bad)
add
xor
dec
clc
cld
push
sbb
repz
fadd
xchg
xchg
pop
scas
loopne
xor
sbb
dec
dec
dec
dec
push
dec
push
dec
sbb
daa
mov
loopne
psubusb
shl
rcl
pusha
adc
or
add
in
in
nop
inc
push
in
loopne
in
push
cmp
fcomp
adc
sbb
idiv
aaa
or
push
int3
sbb
push
sbb
sbb
xrelease
pop
out
inc
push
dec
push
fdiv
sub
inc
sbb
aas
pusha
add
and
push
mov
inc
addr16
and
xor
add
mov
mov
jecxz
inc
add
repnz
xor
xchg
das
icebp
call
lahf
ss
or
xor
aam
cmp
enter
push
add
int
or
enter
adc
dec
sub
js
xor
dec
jecxz
bound
mov
add
push
inc
adc
add
sub
and
mov
sub
inc
push
mov
dec
rol
mov
sbb
jno
les
add
js
add
call
sar
add
mov
sar
fld
fcomi
jp
sub
and
pushf
mov
dec
add
fdiv
scas
add
push
inc
xchg
sti
daa
add
sub
mov
or
or
cmp
pop
je
mov
repz
inc
sahf
push
adc
inc
ud2
dec
lds
sub
and
inc
ret
pop
hlt
dec
jl
cmp
mov
shr
dec
and
ret
ja
push
pop
(bad)
cs
or
fadd
or
cmps
add
and
sbb
outs
rcr
mov
(bad)
mov
sbb
and
mov
jne
add
mov
fdivr
add
ins
push
cmps
mov
jg
add
pushf
pop
inc
add
popa
ss
popa
adc
pop
lock
cmp
mov
and
shl
icebp
cmp
imul
je
inc
add
pop
hlt
ss
fild
enter
inc
mov
cmp
add
pop
loopne
dec
cmp
or
adc
je
dec
shr
push
adc
mov
sar
ss
and
or
jae
dec
mov
and
sub
inc
add
pop
jmp
fldenv
fsubrp
loop
or
sar
mov
jae
(bad)
jl
inc
inc
inc
std
and
and
repz
fisttp
std
jmp
adc
mov
outs
push
push
dec
popa
push
test
fwait
mov
stc
jmp
xchg
aaa
les
inc
es
out
stos
push
adc
dec
sbb
(bad)
cmps
hlt
ss
or
and
lahf
push
les
inc
int3
and
inc
or
test
fsubr
sbb
xchg
mov
or
aad
xchg
das
cmp
arpl
div
push
loopne
or
sbb
or
or
or
mov
mov
sahf
xchg
cmp
aad
add
or
fcmovnbe
jbe
test
adc
outs
push
daa
add
bound
or
add
xchg
mov
aaa
aad
in
ins
xchg
inc
and
and
pop
push
arpl
movs
jmp
rcr
inc
or
sbb
sub
aam
push
sbb
aam
and
mov
inc
mov
add
xor
aad
and
dec
js
pusha
pcmpgtd
repnz
pop
inc
mov
add
pop
and
nop
xor
add
xchg
inc
or
add
add
adc
ins
sub
jae
push
fadd
wbinvd
inc
or
pop
enter
sub
sub
(bad)
jmp
fild
and
inc
or
es
sbb
sub
cmpps
repnz
fiadd
inc
inc
inc
mov
popf
rol
pop
fisub
inc
inc
or
aas
sub
inc
mov
cmp
push
mov
stos
pop
nop
or
jae
xchg
inc
jmp
out
or
rcr
popa
cmp
jns
add
jmp
mov
pop
jge
test
add
push
push
lods
jns
jmp
aad
xor
les
adc
add
cmp
test
xchg
fs
push
push
dec
sbb
fisttp
mov
jae
mov
inc
call
cmp
data16
push
push
sub
stc
cmc
lods
(bad)
pop
sbb
cmp
movs
dec
cmp
xchg
pushf
inc
inc
in
inc
repnz
mov
push
push
ss
ds
inc
scas
add
add
in
test
dec
cmps
sub
adc
xor
cmps
cdq
dec
or
movs
add
retf
outs
pop
addr16
jno
ja
not
mov
and
sub
je
adc
test
ins
jl
and
adc
jecxz
pop
(bad)
pop
stos
fsub
sub
loope
sahf
popa
fnop
mov
pop
mov
imul
nop
loop
movs
push
cwde
pop
xchg
push
add
or
push
sub
xor
fisttp
xchg
cmp
popa
sub
adc
scas
inc
cmp
jecxz
lock
mov
loope
movs
inc
add
rol
sub
mov
sub
dec
or
data16
call
test
ss
ins
and
cmp
mov
fisub
push
arpl
imul
fild
fistp
adc
add
sub
je
pop
mov
cmp
dec
sub
xchg
jae
xchg
mov
mov
push
ja
mov
das
push
mov
add
xchg
xor
nop
div
(bad)
mov
jmp
stos
mov
dec
inc
repnz
pop
popf
inc
push
cmc
or
adc
xchg
jl
popf
jb
aas
add
or
js
aad
das
jmp
push
xor
sbb
or
push
and
stos
cmp
jmp
dec
test
jns
push
inc
add
cdq
cmp
push
test
or
jl
fadd
imul
push
pushf
ror
jl
movs
stos
adc
ja
scas
xchg
dec
inc
inc
inc
scas
inc
or
imul
(bad)
pop
nop
cld
xor
cmc
sbb
nop
inc
lock
xor
jo
retf
pop
push
lahf
sub
xor
xor
pop
test
cmp
xchg
cmp
call
sub
add
add
pusha
dec
push
add
add
add
sub
add
add
sbb
or
or
in
repnz
or
mov
pop
int3
test
pop
adc
adc
nop
add
adc
jge
xchg
aas
outs
fst
add
mov
inc
inc
cs
or
sub
ja
inc
inc
inc
popf
rcr
xor
inc
cs
push
jbe
inc
pop
pop
inc
mov
sbb
ss
xor
cvtpi2ps
cmp
inc
test
out
stos
cmp
shl
clc
or
cmp
repz
xor
pop
jo
cmp
repz
jl
test
repz
mov
daa
jns
cmp
xchg
fadd
and
xchg
add
clc
in
sbb
pop
sub
add
xor
sbb
cmp
fisub
xor
adc
xor
or
mov
sbb
jle
lea
cmps
and
mov
add
fwait
and
clc
pop
inc
dec
cmp
inc
popa
pop
and
sar
sub
in
leave
pop
xor
cmp
cmp
xchg
mov
push
pusha
xor
xchg
mov
lea
inc
add
pop
mov
sub
jmp
ja
sub
adc
push
(bad)
sbb
xor
add
adc
(bad)
movs
jnp
or
ds
repz
jmp
jno
xchg
call
and
loopne
adc
mov
inc
dec
je
inc
inc
pop
inc
cmps
xor
fs
sbb
xor
xchg
in
mov
push
aas
sub
lds
stos
pop
daa
rcr
and
inc
cmp
nop
mov
push
cmp
pop
xchg
add
mov
test
push
add
mov
and
dec
or
lea
loope
jge
cmp
jmp
push
dec
loope
inc
cmp
dec
cmp
sub
pop
clc
mov
pop
and
cmp
ds
mov
lods
rcl
shl
ret
out
adc
loop
dec
adc
pop
sbb
push
cwde
xlat
loope
fistp
outs
xchg
ror
mov
inc
inc
push
cmp
adc
daa
pop
xor
pushf
jge
and
and
cmp
jne
and
adc
icebp
add
xor
push
inc
mov
jmp
and
xor
pop
sbb
fdiv
sub
pop
xchg
inc
cmp
int
and
fcomi
aas
cmp
hlt
push
inc
and
xor
in
xchg
test
or
mov
adc
or
push
and
jp
inc
(bad)
mov
and
add
pusha
daa
push
sbb
mov
sbb
or
mov
or
or
xchg
gs
sar
xor
add
dec
dec
adc
xor
push
inc
inc
cs
shl
bound
sbb
cmp
push
sbb
es
mov
cmp
cwde
cli
std
aad
rcr
or
fs
js
mov
fidivr
add
push
mov
xchg
scas
movzx
(bad)
and
je
pop
int3
jge
sbb
mov
addr16
xchg
pop
inc
and
pop
pop
fmul
inc
sub
pop
pusha
cmp
fnstsw
add
imul
ja
or
call
ja
cmp
pop
and
aas
in
out
sub
sbb
imul
push
jmp
inc
sbb
adc
jb
inc
sahf
popa
jb
lock
inc
mov
test
test
mov
lds
mov
(bad)
scas
adc
mov
inc
les
pop
pusha
add
jb
mov
pop
and
loope
xchg
cs
mov
ja
push
nop
movs
sbb
adc
add
pop
and
dec
xchg
add
mov
sub
xchg
popf
xchg
(bad)
fs
sub
ins
push
ins
adc
sbb
add
pop
repz
and
jl
xor
inc
xchg
pop
das
sbb
push
js
test
or
adc
ins
xchg
icebp
pop
xor
or
ret
push
mov
xor
mov
dec
add
int
aam
pop
inc
mov
push
xchg
cmps
xor
push
push
or
imul
mov
jbe
enter
ret
push
cmc
es
pop
adc
xor
ss
cs
sbb
xor
xor
add
outs
xchg
lock
xchg
rcl
fist
test
bound
sahf
xlat
xchg
retf
push
pop
cmc
into
add
leave
sub
outs
mov
not
addr16
xchg
fmul
rcl
mov
ds
pop
cmp
mov
jo
and
adc
sub
pop
jno
xor
add
lock
sub
adc
pop
leave
push
fiadd
das
je
jle
out
mov
jnp
push
xor
mov
jl
sbb
(bad)
cld
je
or
push
mov
je
ror
stos
je
js
fst
rol
adc
and
mov
inc
addr16
adc
cmp
dec
pop
js
mov
jle
mov
mul
or
mov
dec
sbb
add
inc
cmps
or
outs
or
push
fisttp
or
cmp
leave
rcr
xor
xor
pop
sub
sub
xchg
popf
mov
sub
push
dec
xchg
fs
adc
(bad)
push
inc
xlat
aaa
jl
retf
inc
or
pop
fwait
jb
movs
xchg
mov
adc
push
fisubr
jge
iret
cmp
mov
scas
sbb
ja
mov
dec
or
inc
and
rol
ret
adc
inc
icebp
je
xor
cmp
outs
mov
es
addr16
sbb
fnsave
sub
cmps
inc
pop
xchg
ret
ds
ret
test
mov
test
add
xchg
nop
sub
sbb
in
adc
pusha
mov
push
mov
(bad)
jnp
sub
sbb
inc
xor
movs
or
cmp
adc
mov
cwde
rcl
sbb
sub
cmps
xor
ja
movs
es
enter
ins
mov
inc
or
pop
mov
or
mov
icebp
sbb
mov
in
call
or
dec
dec
add
and
ss
icebp
adc
in
enter
pop
shl
and
mov
and
add
mov
xchg
xchg
mov
sbb
pop
or
cwde
xor
xor
or
dec
xchg
cmp
push
push
stc
cwde
das
xor
hlt
lock
lock
dec
jmp
iret
and
jl
push
shl
jne
les
dec
xchg
call
sbb
daa
pop
pop
push
jg
test
xor
xor
or
push
adc
or
push
jl
icebp
cmp
je
cwde
ror
xor
mov
dec
push
or
jle
mov
imul
add
add
pop
or
jge
cmp
mov
test
dec
sbb
sub
add
xchg
xchg
xor
dec
rcl
dec
sub
and
and
pop
mov
inc
or
lods
xchg
lock
mov
cmp
jle
jmp
jle
push
sbb
jl
or
jg
adc
jne
inc
or
imul
dec
jg
mov
jl
or
or
sbb
lods
mov
jle
push
mov
add
xchg
les
repnz
call
add
xor
test
push
push
sbb
or
jmp
sbb
loop
sub
push
xor
jecxz
je
inc
repnz
push
dec
push
fwait
xor
lea
dec
fcmovb
add
div
ss
jb
sub
loope
ret
jbe
and
mov
push
push
and
inc
inc
dec
push
mov
push
push
inc
cld
or
stos
test
inc
dec
push
or
lahf
add
push
sbb
push
jnp
xchg
sub
loop
mov
sub
or
inc
xchg
mov
sbb
dec
cli
cwde
mov
push
fadd
or
in
sbb
inc
adc
ins
cli
les
dec
add
adc
xchg
cmp
dec
sbb
mov
sbb
push
das
inc
or
cli
shl
push
mov
push
dec
rcr
inc
adc
dec
dec
cld
push
fmul
add
je
cmp
inc
lea
push
adc
dec
xor
les
jl
popf
pushf
fild
cmp
(bad)
xor
inc
mov
lock
mov
sub
add
push
popa
dec
cmp
add
inc
xchg
lock
jbe
add
push
outs
adc
mov
push
pop
xchg
push
ja
xor
xor
and
clc
aas
sub
outs
cmps
push
xor
add
xor
and
sahf
pop
inc
dec
mov
or
and
shl
mov
dec
cld
retf
ins
and
aaa
mov
or
fistp
add
ret
pop
or
adc
sahf
in
xchg
pop
imul
lods
setle
fldenv
adc
or
adc
ss
int
inc
adc
sub
inc
clc
jge
loop
out
mov
aaa
pop
mov
inc
inc
mov
add
or
hlt
ret
push
fsubr
push
pop
jne
xor
std
jp
in
push
and
pop
or
pusha
pop
pop
lock
(bad)
cwde
xor
sbb
add
cmp
push
pop
pop
push
test
retf
ror
inc
push
fisubr
jge
xor
mov
inc
xchg
mov
aaa
cmp
data16
add
and
data16
push
push
xor
pop
xchg
adc
and
jg
and
mov
jo
push
gs
jmp
sbb
or
mov
add
enter
inc
push
or
dec
inc
daa
ins
mov
push
jne
sub
loopne
add
je
aaa
or
xor
in
cmp
aam
sahf
jns
ds
mov
pop
enter
mov
ret
mov
pop
das
ja
add
dec
fild
mov
inc
or
jge
add
xchg
pop
mov
adc
shl
adc
repnz
mov
aas
clc
dec
dec
cmp
pop
pop
lea
ret
sbb
shr
add
add
add
(bad)
mov
out
mov
cmp
add
ror
shl
adc
dec
shl
ins
data16
add
mov
push
jle
sub
adc
adc
imul
or
cmp
clc
inc
dec
mov
mov
and
sub
shr
push
add
mov
jne
jle
outs
clc
push
pcmpeqb
test
shr
add
sub
shr
add
adc
in
push
out
add
ja
mov
inc
push
dec
popa
jnp
arpl
push
outs
mov
sub
nop
mov
loop
pop
add
or
ins
or
loope
cmp
repnz
cdq
scas
jbe
aaa
sub
pop
push
repz
add
push
sbb
inc
adc
outs
or
push
sub
je
aam
cmp
mov
sbb
or
wbinvd
rol
add
leave
inc
ja
or
ins
or
je
test
add
loop
add
cmp
mov
and
mov
fisttp
shl
add
cdq
ss
push
sub
dec
or
cld
jnp
sub
repnz
jne
aad
fwait
adc
stos
add
inc
ds
pop
je
dec
adc
movs
ss
xor
sbb
and
repnz
adc
add
inc
sub
or
or
push
jl
jnp
int
jge
xor
sub
shl
xor
inc
jnp
or
add
aas
call
paddusb
mov
daa
add
sahf
inc
xchg
in
and
scas
add
ret
xchg
pop
jns
and
and
aas
loopne
adc
inc
mov
in
pushaw
aas
jle
mov
imul
mov
mov
das
adc
or
xor
sbb
sbb
(bad)
loopne
cmc
shr
pop
xor
mov
mov
and
add
ret
pop
push
pop
push
cmp
mov
cwde
xor
rcl
lds
jns
inc
xor
adc
xchg
or
dec
test
mov
inc
xor
push
add
dec
shl
push
or
xchg
sub
leave
and
movs
fs
pop
mov
mov
adc
sbb
mov
fcomp
arpl
fstp
sub
scas
fs
push
cmp
xor
inc
data16
xlat
sbb
and
dec
stc
sbb
bound
cmp
jne
cmp
pop
xor
je
sti
adc
cmp
cmp
pop
mov
jo
and
mov
dec
mov
in
daa
clc
fisubr
xor
and
xlat
dec
clc
mov
jge
jne
ror
mov
sub
adc
dec
dec
(bad)
shr
aad
mov
loopne
rcr
dec
hlt
ret
cwde
addr16
dec
hlt
inc
popa
retf
push
or
cmp
dec
nop
push
mov
aad
or
push
ss
or
fisttp
push
loop
xchg
hlt
hlt
hlt
adc
pop
addr16
dec
vcvtdq2ps
shl
pop
xor
mov
leave
enter
in
in
out
mov
adc
xor
inc
and
call
or
lahf
in
in
in
or
in
adc
test
sbb
jne
divps
fcmovb
fs
jbe
lods
xor
push
inc
mov
repnz
inc
mov
mov
aaa
jbe
or
and
mov
mov
xchg
out
std
sub
pop
scas
dec
mov
inc
out
add
jge
mov
loopne
push
in
mov
das
sbb
mov
iret
xor
dec
inc
adc
ins
xor
icebp
jge
or
fldenv
push
jne
lock
sub
inc
(bad)
mov
push
pusha
pop
push
sbb
jmp
pop
pop
xchg
sbb
push
or
mov
mov
pop
mov
out
scas
adc
lds
sbb
xchg
popa
je
jae
cld
adc
and
dec
js
cmp
add
xor
and
xor
ins
mov
mov
push
push
sbb
repz
pop
pop
cmp
into
icebp
jg
inc
cmp
add
pushf
inc
mov
cmps
add
add
mov
daa
adc
xchg
sub
cdq
or
push
xor
or
inc
stos
push
or
sti
jno
xor
lea
add
fstp
push
jecxz
(bad)
out
(bad)
jnp
push
xchg
inc
inc
in
int
in
bound
sub
inc
je
dec
je
pop
popa
icebp
int
je
addr16
jno
jno
fnstsw
inc
and
mov
mov
sbb
inc
xchg
add
inc
cmp
cdq
nop
xor
psubb
jne
std
add
test
cmps
ret
adc
mov
aad
popf
js
inc
fmul
push
xchg
inc
fadd
xchg
mov
std
mov
mov
je
inc
dec
dec
inc
push
mov
add
mov
pusha
cld
pusha
or
adc
and
add
data16
xchg
loopne
push
sub
inc
leave
jae
in
dec
inc
inc
and
or
jp
std
cmp
sub
push
or
sbb
sub
pop
inc
shr
rol
push
xchg
add
stc
jle
aas
push
mov
jl
push
mov
or
ror
adc
icebp
cmp
jae
and
push
sub
push
adc
pop
pop
rcr
xor
sub
push
mov
sub
rcr
icebp
add
jae
call
xor
xchg
dec
mov
mov
les
lock
cs
mov
adc
mov
cmp
add
lea
mov
dec
dec
jl
ins
aaa
pop
pop
imul
pop
sbb
js
pusha
and
pop
mov
dec
dec
lea
aam
jo
sub
adc
js
ins
idiv
in
sub
out
push
test
js
dec
clc
popa
add
dec
dec
popf
ins
pushf
jbe
sub
push
inc
or
lock
xor
ret
cmp
dec
ins
or
call
dec
out
or
or
inc
js
mov
cdq
mov
cld
es
push
mov
je
dec
or
sbb
cmp
xchg
cmps
std
and
sbb
nop
sbb
jnp
cmp
adc
jle
fdivr
sbb
cmp
jne
sysexit
sub
and
xchg
popa
popf
add
or
retf
arpl
mov
xchg
jle
add
jge
mov
cmp
dec
add
push
jge
xchg
jge
and
jl
push
mov
cmp
mov
cmp
jbe
add
dec
inc
inc
xor
cmp
je
into
cmp
into
mov
mov
mov
(bad)
xchg
mov
sbb
sar
inc
je
ins
js
or
ja
and
add
bound
(bad)
fwait
or
add
or
xchg
out
push
jmp
jno
hlt
lods
nop
sub
add
push
xlat
sub
fimul
sub
ss
jo
or
or
jge
xchg
inc
or
ja
data16
sub
imul
dec
dec
(bad)
dec
test
inc
xor
dec
cmp
push
jo
mov
dec
sub
add
or
inc
add
xchg
mov
cmp
addr16
dec
inc
push
ins
movzx
and
sub
and
test
lock
jp
xor
rcr
ret
mov
stc
sub
cmp
out
jbe
mov
(bad)
dec
dec
out
inc
sub
dec
dec
push
mov
shl
push
je
push
sub
cli
dec
arpl
es
or
add
mov
scas
push
or
push
pushf
adc
inc
popa
push
loope
enter
push
jmp
es
add
sbb
scas
xor
push
add
dec
sub
add
pop
(bad)
xlat
ret
mov
or
cmp
mov
dec
pop
push
test
add
cmp
int3
cmp
pop
icebp
push
sub
add
cmp
or
jne
add
in
inc
jg
fsubr
pop
add
cs
lds
imul
push
lods
push
pop
movs
xor
ss
imul
xchg
test
add
push
fiadd
sahf
inc
rcl
ins
call
jnp
call
push
mov
and
xor
pop
pop
sbb
push
cmp
push
jl
add
mov
jmp
shl
rol
in
mov
jo
out
add
xor
dec
xor
inc
outs
sub
add
loop
xor
jnp
shl
or
push
adc
ins
lock
setns
cmp
ja
push
or
fimul
inc
pusha
aam
add
pusha
cmps
ds
xchg
neg
aad
push
push
inc
dec
mov
adc
jae
div
jmp
or
sbb
rcl
or
mov
and
in
add
call
cli
pop
add
mov
mov
ss
rol
pop
mov
mul
ret
and
dec
cmp
(bad)
fsubr
xor
clc
sub
sti
popa
ja
jmp
inc
ror
ret
dec
mov
sub
adc
dec
sub
mov
out
mov
dec
(bad)
shl
push
sbb
enter
shl
ret
add
dec
pop
jo
or
adc
repnz
xchg
add
jb
inc
mov
xor
mov
xlat
xchg
add
fisub
sbb
sbb
aad
int
in
pop
xchg
std
dec
movs
push
adc
pop
pop
fisttp
push
es
fs
mov
xchg
out
push
inc
js
lea
hlt
nop
or
add
loop
sbb
imul
fld
jo
or
pop
lods
mov
in
sub
add
or
and
push
cs
adc
imul
rol
mov
je
xchg
js
dec
mov
push
add
inc
jnp
sbb
test
push
mov
inc
inc
pop
push
add
mov
inc
adc
xor
imul
push
dec
add
or
retf
adc
ss
push
sub
push
je
jns
mov
jo
and
ret
push
fild
rcl
nop
mov
add
push
push
leave
add
out
sub
xor
pop
pop
mov
jo
jnp
add
xchg
ins
dec
mov
inc
push
pusha
pop
inc
in
mov
xor
push
sbb
and
dec
outs
pop
xor
dec
xor
(bad)
jne
sysenter
sub
dec
dec
dec
and
adc
sbb
dec
add
mov
sub
sub
inc
and
jb
add
adc
int3
call
mov
pop
imul
cwde
mov
out
add
xor
or
mov
(bad)
stos
in
std
and
jl
inc
push
leave
bound
outs
lods
sbb
push
pop
pop
pop
jae
inc
add
push
sbb
sbb
mov
cmp
cmp
jnp
shl
retf
cmp
inc
cmp
adc
adc
jg
add
mov
pop
xor
out
sbb
nop
or
inc
dec
or
loopne
call
outs
mov
sbb
inc
xchg
pop
outs
sub
push
and
dec
lahf
lods
and
daa
cmp
jae
jle
cmp
ins
add
popf
imul
rcr
adc
inc
mov
js
nop
and
jg
int
xor
ja
arpl
dec
scas
jmp
ss
cli
add
cmp
into
jge
pop
adc
push
shufps
mov
movs
sbb
jle
mov
cld
or
shl
mov
dec
out
push
mov
or
and
cs
xor
(bad)
cli
cmps
ror
sbb
ss
jp
loopne
(bad)
adc
outs
scas
and
cld
movs
mov
inc
dec
sub
addr16
push
mov
push
sub
xor
imul
push
clc
mov
pop
cmp
pop
adc
and
into
sbb
pop
add
sub
loop
pop
test
pop
inc
and
loope
pop
adc
(bad)
(bad)
cdq
inc
mov
jge
inc
mov
inc
das
in
jg
mov
mov
retf
and
sbb
mov
and
cmp
jecxz
pop
cmp
push
pusha
call
daa
inc
ror
or
(bad)
inc
push
outs
sbb
pop
pop
add
lahf
or
push
xor
or
enter
dec
sub
call
sbb
xor
sbb
scas
mov
ret
xchg
pop
nop
arpl
mov
sub
sbb
jle
sub
pop
mul
pusha
cmp
jb
mov
test
push
xor
and
inc
jle
sub
mov
sub
cmp
je
cmp
cwde
mov
arpl
xchg
call
cmp
(bad)
and
add
push
xor
inc
xchg
dec
bound
mov
dec
sbb
nop
repnz
clc
jne
pop
stos
stc
iret
aas
cs
dec
sub
sub
add
lds
shr
jnp
push
cmps
and
enter
inc
mov
retf
adc
add
jmp
jb
or
nop
rol
xchg
lahf
adc
cmp
popf
and
adc
cld
inc
jns
mov
xchg
jge
leave
ficom
fbstp
aam
stc
pop
out
cli
imul
es
xor
stc
xor
in
outs
loop
jo
jno
jl
dec
mov
jb
pop
jae
repz
iret
ret
repnz
arpl
mov
push
push
mov
mov
mov
repz
jge
jle
dec
repz
xchg
add
xor
sub
test
aam
adc
jae
pop
js
pop
mov
adc
jp
dec
mov
icebp
mov
loop
push
lock
fs
mov
bound
push
inc
mov
pop
push
xor
les
aas
inc
sbb
push
ror
mov
shr
mov
mov
clc
in
and
xlat
add
mov
xor
add
pop
pop
aas
lock
faddp
loopne
add
imul
pop
sbb
sahf
sbb
jl
loope
out
aas
inc
jmp
ins
lock
adc
dec
loop
or
and
retf
and
retf
shl
mov
aaa
inc
sbb
add
call
inc
icebp
rcl
jmp
pop
mov
out
fnsave
loopne
or
xor
and
sbb
repnz
mov
adc
xor
xchg
or
push
sbb
sbb
nop
test
(bad)
push
mov
pop
inc
mov
popf
cmps
imul
ds
sbb
leave
dec
inc
mov
add
mov
cmp
jecxz
stc
xchg
mov
jno
fnstenv
data16
sbb
ror
aaa
mov
shr
in
push
mov
sbb
rcl
daa
push
enter
adc
xchg
push
mov
(bad)
and
add
test
es
cli
std
add
leave
mov
outs
imul
ss
inc
adc
cld
lock
dec
shl
push
or
ror
pushaw
fdivr
pop
les
in
dec
ins
call
or
jno
xor
jp
dec
mov
inc
aaa
movs
clc
aas
repnz
shr
jmp
dec
sbb
int3
add
or
sub
add
push
pop
aad
mov
inc
ror
xor
dec
sar
sub
in
sbb
sbb
pop
push
dec
in
push
adc
jle
mov
mov
xchg
ins
mov
stc
inc
inc
sbb
adc
and
jbe
mov
jne
in
add
fdiv
pop
lock
shl
adc
arpl
into
shl
mov
sub
cld
inc
aam
cmp
pop
in
pusha
in
je
in
or
and
sbb
enter
sub
mov
xchg
add
xchg
shl
dec
fwait
cmp
je
adc
ja
lds
or
je
dec
or
sub
mov
adc
add
jmp
sbb
and
loope
ins
inc
sub
push
sub
xchg
mov
nop
cmp
and
mov
sub
jne
outs
shr
scas
loopne
dec
lahf
jmp
pop
sub
loopne
sub
cmp
(bad)
add
add
fidiv
movs
loope
dec
xor
or
or
mov
dec
pop
jbe
movs
inc
jle
rcr
fmul
and
test
or
pop
shl
sub
mov
mov
or
inc
jnp
es
and
shl
fild
(bad)
icebp
neg
add
retf
adc
or
movs
xchg
(bad)
dec
add
mov
enter
(bad)
xchg
xchg
adc
pop
push
inc
cmps
or
sub
aam
jo
and
push
jne
sub
push
cdq
push
add
sbb
jns
dec
adc
in
test
mov
adc
shl
sub
cmp
or
rcr
cmc
jmp
bnd
jge
add
push
aaa
pushf
ret
pop
mov
aam
ja
push
outs
mov
adc
cmp
mov
add
aaa
bound
sub
pop
repnz
mov
int3
mov
jns
push
(bad)
jb
and
stc
push
add
or
cli
leave
adc
pop
add
pop
pop
xchg
pop
add
mov
add
repz
jae
mov
jnp
push
push
or
push
jbe
sub
xor
dec
ret
cmp
sar
sti
push
clc
outs
xchg
movs
lds
xchg
hlt
push
jo
add
push
push
scas
jmp
dec
inc
inc
mov
xor
lea
call
dec
push
cdq
sbb
cs
in
mov
out
fist
pop
push
push
icebp
jp
sbb
je
push
inc
(bad)
and
adc
push
dec
and
fmul
test
test
push
inc
loope
lock
xlat
ror
rol
jmp
loopne
or
pop
ins
add
dec
jmp
push
xchg
inc
ja
inc
mov
fisubr
mov
loopne
data16
rcl
data16
inc
and
inc
fdivrp
adc
inc
fucomp
mov
mov
xlat
inc
enter
repnz
jmp
daa
fsub
push
inc
outs
cmp
sub
and
outs
inc
ret
and
xchg
pop
add
pop
mov
pop
and
push
cmps
outs
pop
push
int
jae
or
pop
mov
jb
push
les
xor
retf
test
sub
test
jnp
cmovbe
adc
pop
jmp
push
sbb
xor
cmc
rol
call
pop
mov
add
lock
jo
movs
mov
add
addr16
sbb
scas
mov
mov
nop
pop
pop
push
mov
inc
add
sub
fs
push
rol
(bad)
inc
inc
aam
add
dec
loopne
lods
rol
add
adc
sbb
dec
inc
imul
jp
clc
mov
push
or
in
inc
mov
sub
jne
push
mov
cmp
inc
hlt
xor
push
push
push
or
call
lods
pop
test
and
fst
push
lea
and
nop
lods
loopne
and
add
mov
test
jne
mov
outs
lods
int3
leave
jb
fdivr
enter
mov
jmp
int
sbb
mov
add
loopne
stc
dec
rol
loopne
inc
cmps
dec
clc
int3
hlt
xchg
add
mov
(bad)
sbb
inc
ja
xor
pop
cmp
in
cmp
add
xchg
nop
sbb
test
pop
repz
nop
loope
xor
dec
div
loopne
data16
popa
dec
hlt
dec
mov
add
iret
adc
jo
and
and
inc
or
dec
sbb
in
arpl
enter
sub
sbb
jmp
dec
push
mov
add
adc
cmps
nop
push
add
add
xchg
rcl
repnz
push
pop
lods
add
mov
dec
cmps
and
mov
ret
ror
dec
jbe
fisubr
loopne
xor
jbe
and
push
xor
sbb
imul
push
sub
jb
fisubr
mov
shl
push
rsm
cmp
mov
mov
xchg
jnp
cwde
popf
rcr
in
stc
sbb
jecxz
int3
sub
mov
mov
inc
mov
pop
jmp
pop
aaa
cwde
and
sbb
mov
pop
hlt
inc
jnp
call
stos
push
inc
shl
call
adc
or
shr
(bad)
mov
dec
je
sbb
clc
sub
aam
adc
jmp
xor
mov
and
inc
je
jmp
xor
add
cmp
outs
mov
(bad)
ins
cmc
and
imul
(bad)
loope
cmp
sbb
inc
inc
sbb
mov
jg
out
bound
add
loopne
repz
retf
mov
sub
call
sbb
sbb
and
(bad)
push
xchg
lahf
sbb
js
mov
dec
xchg
pusha
jo
and
daa
add
pop
imul
lock
adc
cmps
pushf
or
and
pop
xchg
cmps
ror
xchg
push
push
push
sub
add
adc
in
xchg
jg
pop
sub
sub
add
loop
push
sub
adc
push
pop
je
add
loop
xchg
inc
sbb
push
cmc
js
push
pop
dec
mov
sbb
add
inc
sub
and
jg
add
jne
mov
rol
add
sub
pop
xchg
(bad)
add
rcr
sub
mov
rcl
js
push
cmc
or
adc
adc
adc
or
jnp
push
imul
or
dec
sub
in
or
adc
scas
adc
fadd
pop
jb
mov
jne
or
jne
fild
push
sbb
dec
sbb
lds
xchg
stos
fadd
outs
or
xchg
adc
push
add
mov
ins
mov
sbb
sar
movs
(bad)
outs
dec
push
add
sub
sub
jo
repz
pusha
sbb
lods
test
adc
arpl
jle
loopne
xchg
into
hlt
test
sbb
sub
inc
into
xor
dec
sar
dec
cs
push
mov
adc
pop
pop
or
inc
cmp
js
jmp
jb
das
rol
and
hlt
movs
jle
jno
enter
pop
fdivr
or
push
cmp
pop
pop
dec
pop
mov
movs
inc
stc
cmp
arpl
es
data16
adc
pop
sub
mul
stos
das
sub
jp
shr
add
jl
jmp
in
push
mov
jb
inc
outs
aad
dec
rol
and
push
(bad)
sub
add
add
push
pop
and
push
adc
xor
push
fiadd
mov
loop
xchg
leave
fs
or
shr
mov
pop
push
bound
nop
and
loope
lods
aaa
je
xor
inc
inc
cld
push
repnz
cmp
add
dec
sbb
popf
jmp
inc
cmps
jg
cmp
fisttp
popf
jno
push
push
sbb
jmp
push
adc
inc
lea
ja
sub
or
mov
adc
loopne
add
cmp
scas
test
mov
enter
push
add
dec
ins
xor
pusha
cli
jb
mov
push
xor
sbb
popf
rol
aaa
xchg
cli
add
leave
neg
mov
out
(bad)
aad
ja
add
or
nop
xor
cmp
movs
ss
pushf
dec
out
sbb
mov
push
aaa
icebp
and
out
loop
ror
sbb
add
std
add
and
dec
shl
or
dec
or
dec
inc
xchg
lock
pop
fsubr
fld
clc
fsub
push
xor
jl
sub
movs
stc
dec
cmp
sub
xor
dec
jae
cs
cmp
out
pop
call
or
mov
mov
les
js
ret
sub
dec
jg
jg
and
add
sub
add
xchg
and
rcl
or
or
(bad)
mov
pop
ror
pop
aam
sar
aas
add
mov
mov
mov
outs
test
push
add
ret
adc
xor
pop
jbe
ror
(bad)
mov
fsub
mov
push
push
(bad)
int3
shl
xor
and
das
pop
mov
mov
pop
mov
nop
rol
sar
mov
fiadd
ror
lock
cs
lods
sub
add
popa
sbb
fmul
inc
push
mov
push
jb
jae
lods
mov
mov
dec
jne
in
or
shr
(bad)
jmp
sub
jbe
inc
test
mov
in
push
dec
xchg
mov
shr
jge
mov
xchg
loopne
sbb
add
inc
inc
fstp
or
aaa
ja
or
jno
add
xchg
fmul
xchg
mov
cdq
mov
pop
icebp
inc
jne
xor
inc
ret
xchg
and
fadd
xchg
xchg
jmp
jmp
jge
test
jbe
jmp
dec
and
aaa
add
add
inc
jmp
cmp
sub
stos
xchg
enter
cmp
push
les
cmp
fs
push
mov
frstor
add
sub
aam
and
inc
mov
pop
push
(bad)
repz
pop
xchg
repz
add
jmp
and
pop
inc
cmp
mov
add
jae
scas
cmp
ret
or
inc
jmp
mov
dec
mov
retf
lahf
test
mov
aam
cmp
pop
add
test
(bad)
mov
shl
fadd
add
pcmpeqd
xchg
sbb
and
in
pop
imul
inc
pop
movs
push
ja
sub
push
pop
dec
or
adc
repz
cld
paddusw
xor
or
js
fadd
push
push
and
jae
fs
(bad)
and
ds
inc
fadd
fld
outs
and
mov
add
int
add
sbb
add
aad
shl
cmp
pushf
sbb
push
jae
cmps
aad
rcl
dec
(bad)
call
les
das
jb
icebp
clc
jae
sub
aaa
add
cmps
add
xchg
sbb
js
cs
enter
sbb
adc
push
mov
push
mov
xchg
or
and
cld
or
add
mov
xchg
adc
jecxz
jle
pop
sbb
mov
pop
pop
mov
lods
cld
leave
adc
dec
test
sbb
shr
xchg
dec
inc
jno
aad
cld
xchg
les
jmp
inc
(bad)
arpl
pusha
int3
add
lock
adc
or
(bad)
shl
jmp
int3
xor
jnp
ins
test
adc
loopne
cmp
pop
adc
pop
and
adc
ss
dec
loopne
shl
loopne
inc
or
dec
popa
pop
je
xchg
adc
cmp
jg
jae
sbb
jne
jle
jb
mov
call
lods
pop
sub
dec
(bad)
mov
or
fist
int
sahf
(bad)
and
mov
dec
fmul
jge
jo
inc
dec
pusha
mov
mov
mov
push
arpl
or
sub
push
jp
xchg
retf
add
cdq
cli
fistp
cld
dec
jno
add
call
jecxz
(bad)
cwde
cs
mov
out
cli
push
cld
dec
xlat
jecxz
in
rcr
js
shl
les
jp
jge
add
cmps
fstp
pop
cli
pop
(bad)
and
push
loopne
pusha
pop
mov
add
loopne
add
jp
movs
xor
push
inc
cwde
xchg
sbb
inc
in
call
(bad)
push
dec
add
ins
ins
call
lods
sbb
sbb
and
loopne
mov
push
fimul
lock
mov
mov
mov
jbe
jae
xor
inc
inc
or
push
or
mov
cmp
fst
ss
retf
xchg
leave
or
jmp
ret
push
ja
shr
les
sbb
enter
mov
out
shl
out
sbb
shl
call
movs
lea
ss
xchg
and
or
retf
or
pop
sub
sahf
cmps
mov
mov
mov
cmp
push
addr16
adc
xor
xchg
dec
cmp
fmul
leave
(bad)
sbb
push
cmps
mov
xchg
loopne
sbb
pop
adc
cmp
sti
dec
jbe
mov
cmp
jl
sub
jno
pop
adc
adc
lods
fmul
test
sub
addr16
mov
add
adc
sbb
pop
cld
and
ror
and
das
fcmove
pop
hlt
lea
adc
je
ins
cmp
out
sbb
dec
mov
jle
dec
mov
inc
cmp
jb
das
jne
xchg
ja
ins
mov
ja
inc
cmp
jne
repnz
inc
push
and
mov
add
mov
imul
and
inc
mov
cmp
push
sub
cld
mov
xchg
cmc
or
test
loopne
xchg
lods
stos
push
or
fdiv
add
(bad)
lock
icebp
shl
call
add
movd
push
int
jle
fcom
inc
add
cmp
test
adc
cmp
push
outs
in
imul
mov
je
jmp
inc
es
mov
pop
sub
pop
sub
inc
jmp
mov
mov
ficomp
xor
and
or
pusha
jne
xchg
add
js
or
lock
loope
cmp
xchg
or
inc
sbb
dec
mov
pop
sub
call
add
sbb
add
sub
mov
loopne
shl
sbb
inc
std
jmp
cmp
idiv
fidiv
sub
out
xor
ds
pop
cmp
dec
push
sub
jg
dec
adc
or
adc
pusha
mov
or
mov
lea
inc
pop
les
jbe
mov
inc
cld
mov
lock
adc
xchg
fiadd
cs
dec
dec
mov
ret
ds
(bad)
aad
cmp
mov
fwait
add
loop
mov
add
add
push
xchg
jb
inc
inc
push
push
jno
inc
out
add
cmps
mov
jg
retf
lods
or
push
pop
inc
jne
push
or
xchg
jb
(bad)
mov
dec
jecxz
push
jle
mov
cmp
mov
inc
scas
dec
inc
clc
movs
jp
scas
(bad)
push
or
pop
push
retf
xor
inc
push
adc
(bad)
adc
push
or
jne
inc
dec
mov
inc
and
movs
call
loop
(bad)
push
jmp
jl
xchg
add
cld
cmp
jl
jmp
xor
fdivr
jge
pop
lahf
pop
into
or
jae
adc
jno
shr
in
clc
sbb
mov
mov
jo
jge
add
mov
cmps
mov
mov
(bad)
add
mov
adc
push
xchg
jecxz
hlt
mov
adc
sahf
cmp
mov
cmc
or
add
dec
sar
lock
mov
outs
push
sub
cmps
mov
xchg
pop
and
fs
mov
les
pop
pop
(bad)
jp
push
mov
mov
or
jle
jmp
xor
xchg
fistp
mov
and
cmc
inc
and
add
adc
js
cmp
or
movs
ins
fwait
fs
push
ret
sub
push
xchg
cmp
push
dec
and
pusha
mov
inc
inc
dec
xor
push
inc
mov
adc
mov
(bad)
or
mov
push
dec
xchg
mov
or
rol
sub
dec
mov
(bad)
lods
jge
add
fnstcw
mov
hlt
shl
pop
test
jmp
idiv
push
add
jmp
dec
loopne
sbb
or
ins
sub
cmp
jg
and
pop
ror
les
mov
xor
jmp
fsub
sbb
test
push
or
mov
sbb
add
xor
mov
aam
xchg
hlt
adc
sub
idiv
lahf
je
push
fdivr
xor
dec
or
push
sti
cld
aaa
fsub
mov
retf
jle
cmp
jne
mov
mov
xchg
add
jle
mov
imul
sbb
out
jge
xor
bound
jmp
or
sub
call
mov
std
repnz
fistp
rdtsc
movzx
stc
or
ss
xor
(bad)
mov
out
and
xchg
inc
jmp
sti
jmp
jg
mov
mov
jne
aas
cmp
scas
sub
test
(bad)
loopne
sub
mov
jns
in
xchg
sub
loopne
pushf
mov
xor
(bad)
fadd
and
xchg
add
and
add
in
daa
pop
fdiv
ret
std
gs
xchg
and
push
cwde
mov
pop
sub
mov
push
and
mov
pop
cmp
dec
xchg
xchg
retf
ret
mov
ret
push
and
in
rcl
enter
rcl
rcr
add
scas
inc
mov
int3
int3
dec
cs
(bad)
enter
xchg
dec
(bad)
(bad)
les
enter
enter
sbb
enter
nop
out
shl
xchg
(bad)
cmc
mov
push
lea
xor
mov
movs
and
mov
mov
pmullw
dec
mov
les
aam
inc
push
push
xor
adc
pop
stos
stc
mov
push
inc
push
sub
lea
repz
int
pushf
or
(bad)
hlt
push
fsub
(bad)
mov
lods
add
dec
cs
lea
sbb
add
push
cmps
pop
jo
cmp
cmp
jmp
js
sub
imul
stc
mov
in
jnp
xor
and
clc
mov
movs
loope
xchg
sub
add
lock
out
je
mov
push
jae
sub
sbb
dec
dec
adc
xchg
and
or
pop
add
cld
dec
icebp
and
fs
xor
mov
call
adc
lea
js
mov
call
ds
ins
cld
mov
sub
and
xchg
xchg
mov
or
imul
inc
inc
inc
jge
inc
loopne
xor
jns
sbb
adc
sub
push
ds
adc
xchg
add
mov
cmp
scas
vsubsd
fidiv
dec
xor
nop
nop
push
add
fst
jecxz
cs
adc
or
jge
stos
rol
push
xor
pop
add
out
inc
je
sbb
in
outs
stc
push
or
mov
ja
cmp
and
dec
sub
mov
clc
mov
push
or
inc
dec
pushf
mov
ds
ins
add
mov
ret
icebp
rcl
push
add
mov
pop
fbstp
mov
pop
add
add
jle
fidivr
fwait
jo
cwde
lods
mov
ret
sbb
cs
lea
test
pushf
rcl
dec
add
add
mov
shr
rcr
scas
add
sbb
(bad)
data16
jb
out
loope
dec
adc
ins
sti
mov
adc
xchg
clc
and
or
sbb
test
jo
push
add
add
aad
loopne
fist
sbb
(bad)
data16
xor
mov
and
xchg
xchg
test
outs
and
mov
pop
mov
js
push
add
add
push
test
lea
dec
push
jl
push
cli
xchg
add
int
ret
push
and
rcl
inc
cmp
ins
lods
mov
fild
mov
retf
aam
push
mov
enter
mov
dec
movzx
in
mov
or
or
adc
xor
dec
xchg
dec
rcr
mov
nop
push
mov
ffree
xor
sbb
out
pop
cmp
into
xor
data16
aaa
xor
mov
lahf
add
clc
sbb
movs
push
test
cli
mov
sbb
mov
xor
(bad)
ja
xor
sbb
cdq
not
(bad)
mov
mov
mov
test
mov
mov
pop
cmp
mov
push
add
ret
push
mov
add
lock
cli
add
pusha
or
(bad)
lock
fisub
xor
sbb
push
xchg
cmp
inc
ror
popa
push
stos
sbb
inc
dec
adc
(bad)
imul
shr
dec
inc
sub
push
mov
push
add
xchg
add
cli
dec
jge
or
mov
ins
fidiv
and
mov
inc
pop
movs
es
stos
xor
test
xor
sub
and
mov
or
cmps
sbb
mov
xchg
add
je
mov
xchg
mov
nop
and
imul
pop
xchg
dec
mov
xor
sub
mov
sbb
rol
sbb
mov
adc
shr
imul
ss
in
mov
lods
cmp
mov
xor
pusha
test
lods
fstp
xor
adc
jmp
ror
loop
jmp
popa
cs
adc
shr
inc
mov
xchg
adc
mov
cmovge
push
dec
or
jle
add
sub
sub
sti
or
cmp
or
aaa
cmp
jl
jecxz
(bad)
pop
or
test
fdivr
pop
test
scas
inc
jmp
imul
adc
inc
mov
or
mov
mov
out
imul
lea
push
xchg
jp
mov
retf
jnp
call
xlat
sar
pop
mov
pop
not
pop
pop
xor
add
test
test
mov
mov
jmp
xor
add
mov
sbb
mov
sti
sub
mov
out
or
adc
pop
cmp
sbb
lsl
cmp
loopne
or
pop
mov
add
pusha
scas
ret
adc
jmp
add
add
inc
jo
push
mov
adc
fnstcw
xor
add
int3
xchg
idiv
ins
sbb
fdiv
cmp
add
adc
push
add
add
add
fs
or
push
sbb
or
push
packsswb
es
dec
push
push
shl
ret
shr
xchg
xor
je
push
gs
dec
mov
push
(bad)
scas
fsub
cmp
add
push
scas
fsub
or
or
or
sub
sub
adc
pusha
xchg
pop
xchg
push
add
movs
push
shl
dec
or
push
fidiv
in
jge
adc
mov
fisttp
in
mov
je
or
sub
mul
or
sbb
dec
add
(bad)
fnstenv
lock
ja
pop
sub
(bad)
loop
add
push
sbb
movd
out
arpl
push
mov
and
mov
pusha
sub
lock
movs
mov
(bad)
fdiv
sub
push
pop
mov
cmps
add
jb
outs
mov
movs
clc
add
pop
and
dec
cmp
sub
loope
xor
inc
xor
pop
sbb
pusha
inc
ror
sub
sub
ret
xchg
sbb
dec
dec
add
shr
outs
pop
adc
shl
pop
xor
inc
and
ja
mov
dec
jp
inc
adc
bound
loopne
sbb
and
pop
or
add
or
add
mov
sahf
mov
add
mov
push
inc
mov
sti
adc
fwait
sbb
add
xor
mov
inc
add
mov
not
xor
push
xchg
adc
add
jae
dec
inc
inc
pop
aam
or
inc
pop
inc
retf
ja
dec
jne
not
jg
adc
push
out
cdq
popf
fstp
jbe
add
xor
add
out
sbb
cli
pop
fisttp
call
xor
inc
cmps
adc
or
(bad)
in
sub
mov
adc
sbb
add
in
sbb
sbb
aaa
lea
xor
je
sub
cmps
shl
add
mov
cs
or
loop
sub
ins
sbb
rol
pusha
dec
pop
gs
cli
xchg
xor
je
pop
mov
clc
xor
shr
loop
icebp
mov
into
sub
xor
(bad)
(bad)
pop
add
xchg
sbb
test
(bad)
and
inc
and
call
lahf
sbb
jg
popa
jl
imul
and
sub
inc
jge
add
xor
ror
jl
push
xchg
push
shr
pop
add
inc
adc
lea
push
xor
inc
cwde
mov
inc
shr
inc
rcl
mov
xor
jge
ficom
push
mov
jne
xor
mov
cmp
and
test
test
cli
inc
or
call
fs
sbb
or
je
jmp
jmp
inc
adc
push
sbb
add
jmp
add
or
or
or
sbb
xchg
pop
jb
movs
and
pop
push
jmp
mov
jne
fmul
mov
add
sub
adc
push
adc
mov
cwde
sub
jp
loopne
les
scas
gs
or
mov
popa
xor
sub
ret
pop
push
cmps
push
js
lahf
adc
test
aas
scas
test
push
nop
push
adc
in
xor
inc
in
and
dec
xor
push
cmp
or
ins
or
not
inc
push
inc
dec
sbb
adc
pop
aam
push
cmps
dec
and
push
inc
push
mov
sbb
pop
not
sbb
or
and
out
scas
test
xchg
pop
push
les
mov
call
adc
pop
ret
adc
inc
mov
ins
adc
sub
inc
bound
add
xlat
and
mov
je
out
mov
in
xlat
inc
adc
mov
popa
iret
inc
dec
pop
ins
add
and
lods
data16
cmps
in
or
or
dec
adc
aaa
add
mov
inc
pop
cmps
out
dec
or
dec
ins
xchg
dec
das
ret
jmp
adc
adc
pop
or
mov
jne
(bad)
or
jle
and
mov
and
adc
adc
push
and
jg
ins
int3
test
test
iret
jae
mov
mov
pop
mov
rol
inc
xor
inc
mov
or
test
xchg
mov
sbb
mov
cmp
jg
ret
inc
cmps
mov
sub
pop
or
inc
dec
ins
inc
xor
dec
imul
shr
pop
daa
or
nop
mov
dec
(bad)
rol
test
add
cmps
dec
adc
xor
adc
adc
shl
nop
nop
sub
push
not
inc
pop
test
lahf
adc
inc
lahf
pop
inc
add
dec
dec
jmp
sbb
nop
or
(bad)
fld
inc
ins
adc
adc
or
pop
aaa
push
fadd
push
mov
dec
rol
imul
lock
or
adc
dec
lahf
push
fisttp
xchg
ja
(bad)
pop
stos
inc
push
dec
ja
and
nop
daa
sub
inc
xchg
inc
push
iret
push
sbb
fcom
lea
push
rol
or
pop
dec
xor
adc
mov
(bad)
mov
adc
inc
or
xor
fld
dec
pop
push
push
add
sub
add
repz
cmps
inc
stos
inc
fucomp
ins
mov
xor
imul
scas
pop
and
ret
test
mov
in
sub
inc
mov
bound
je
push
(bad)
popa
aad
cmp
and
aam
ins
idiv
test
sbb
mov
inc
mov
stos
adc
inc
mov
aas
adc
mov
adc
cmps
cmps
addr16
(bad)
shl
cwde
movzx
stos
popa
inc
xor
das
aas
test
es
call
and
cmp
jg
dec
xor
mov
inc
ret
add
push
inc
outs
pop
rcl
adc
or
push
inc
call
inc
xchg
push
nop
inc
inc
stos
sbb
aas
lahf
inc
pop
mov
mov
push
outs
(bad)
and
rol
and
adc
or
add
push
inc
ret
call
push
dec
retf
push
pop
mov
aaa
mov
out
push
dec
inc
not
and
and
pop
addr16
mov
adc
test
cmps
js
js
(bad)
rcl
pop
push
mov
repz
inc
outs
add
push
jae
ins
xchg
push
mov
fs
push
jo
imul
es
xor
fsub
or
add
or
xor
outs
inc
clc
xor
popa
je
or
cmp
test
inc
jae
inc
xchg
fbld
cmovae
mov
jne
sbb
xchg
xor
and
clc
and
xchg
sar
fimul
mov
inc
jo
mov
push
adc
cmp
xlat
out
lods
inc
retf
mov
jmp
sbb
push
cli
dec
fidivr
sar
(bad)
pop
(bad)
pop
push
fild
fstp
fwait
aaa
jl
pop
imul
ds
inc
enter
popf
fld
enter
aad
fadd
js
mov
xchg
sub
pusha
adc
aam
cdq
mov
xchg
inc
push
cs
or
mov
sbb
outs
xchg
outs
ja
lds
xor
rcr
sbb
stc
fsub
fwait
jmp
dec
fld
or
pop
daa
addr16
push
imul
mov
and
mov
pusha
(bad)
pusha
sysret
and
pop
arpl
sub
adc
test
sbb
push
bnd
ret
pop
inc
ret
dec
(bad)
jbe
or
jne
xchg
ins
sbb
repnz
jmp
cwde
or
inc
adc
call
es
sbb
leave
in
jl
and
ja
das
in
or
mov
adc
push
stos
xor
add
and
push
ins
xchg
jo
push
jg
repz
push
and
les
mov
iret
and
or
or
or
aaa
jl
and
sub
adc
fmul
test
imul
fcomp
cwde
clc
sub
scas
pop
pop
mov
mov
nop
jmp
xchg
mov
clc
mov
or
rol
fcomp
leave
mov
ins
adc
or
or
sub
cmps
(bad)
fild
lock
aaa
pop
(bad)
mov
retf
sub
cmp
outs
xchg
int3
icebp
mov
push
ss
push
and
rcl
fstp
push
sbb
inc
jb
mov
push
sbb
daa
adc
(bad)
gs
aam
daa
shr
push
js
and
clc
mov
shl
scas
rol
dec
cmp
add
fldcw
loop
sub
inc
mov
nop
out
pop
ret
xor
add
add
lahf
retf
xchg
shr
fiadd
lods
rcr
popa
cmp
cmp
mov
imul
mov
inc
inc
or
push
and
dec
or
cwde
adc
pop
(bad)
fld
bound
jnp
mov
sbb
and
dec
sub
or
inc
loope
sub
add
movs
popa
fidivr
sub
or
stc
cwde
inc
sbb
int3
inc
adc
sahf
push
out
mov
fld
inc
sub
push
xor
lea
add
shl
or
retf
xchg
dec
rcr
adc
fst
or
movs
shr
cwde
sub
(bad)
jmp
loopne
jg
cmp
jae
hlt
push
aam
mov
and
rol
cmp
xor
ret
js
adc
leave
or
shr
or
xchg
mov
fmul
and
sbb
sub
sbb
xor
leave
xchg
add
(bad)
into
jl
loopne
jne
mov
mov
cmp
add
sub
add
xor
add
enter
cmp
int3
icebp
mov
add
retf
dec
or
pop
adc
jmp
push
inc
add
sub
jmp
lock
xor
out
push
lock
or
jbe
lock
add
jne
fiadd
push
add
dec
cld
retf
mov
retf
lock
ret
shl
ja
dec
pop
add
sar
add
sub
pop
add
call
sub
loop
dec
(bad)
out
ja
sub
sbb
dec
or
dec
hlt
or
(bad)
xor
jbe
mov
ja
movs
imul
push
jo
cld
mov
jmp
fs
ins
jmp
sub
jne
sub
xor
pop
sub
dec
outs
fld
jmp
ss
sar
call
in
sbb
aaa
in
and
out
jo
or
loope
adc
pop
test
hlt
xchg
add
jmp
jo
cmps
mov
test
push
add
push
xor
pop
mov
lods
push
retfw
call
mov
sub
sub
clc
inc
jnp
and
clc
add
mov
fdivr
pop
cmp
(bad)
and
mov
and
pop
fs
inc
in
icebp
inc
dec
xchg
push
sbb
les
loopne
fild
inc
xchg
ds
mov
retf
ins
je
add
retf
inc
fisub
cli
sub
movs
loopne
mov
repnz
pushf
xor
outs
loope
shr
les
mov
xchg
cmps
or
cmp
lock
in
movs
mov
fsubr
imul
in
rcr
js
jl
mov
imul
push
mov
ret
retf
jo
cdq
or
shr
mov
rol
daa
retf
sar
dec
push
shl
xor
sub
mov
cmc
sbb
jmp
retf
es
mov
xchg
call
adc
mov
and
imul
mov
mov
xor
xchg
out
cmp
inc
pushf
imul
dec
xchg
dec
pop
call
nop
push
sbb
sub
add
jo
lds
mov
inc
pop
pop
in
ja
inc
cmps
push
pusha
dec
push
and
adc
mov
mov
popa
pop
xor
fcom
sbb
dec
jmp
adc
dec
imul
push
in
or
jb
pop
push
add
in
mov
ds
lahf
adc
repnz
or
lahf
test
aas
ss
call
lods
cmps
fstp
or
aam
add
pop
fistp
jmp
loopne
mov
nop
inc
fs
inc
add
jmp
shl
xor
pop
mov
dec
arpl
clc
xchg
gs
mov
in
dec
pop
addr16
cdq
jne
pop
or
pop
pop
push
popa
add
adc
(bad)
fidiv
nop
shr
or
loope
push
sbb
cdq
sti
push
repnz
dec
ins
add
out
add
adc
dec
push
outs
ins
add
fadd
or
push
push
or
mov
(bad)
pop
push
out
sub
popa
jo
cmp
pushf
loopne
inc
push
sbb
mov
adc
push
push
push
push
sbb
or
and
sbb
add
xchg
push
int
mov
xchg
or
stc
or
sbb
sbb
je
adc
push
add
mov
mov
adc
mov
pushf
loop
xor
inc
push
sbb
aaa
les
push
clc
repz
dec
push
add
je
push
stc
jge
aaa
dec
push
js
test
push
icebp
cmp
in
cmp
dec
mov
pop
push
icebp
mov
sub
and
xor
push
outs
mov
inc
jo
imul
mov
or
xchg
or
add
sub
mov
stos
sub
scas
xor
dec
jae
fmul
mov
imul
mov
shl
cmp
ds
mov
sbb
sub
push
bound
in
popa
ins
dec
fst
sub
out
dec
test
push
inc
mov
xchg
add
mov
sbb
es
in
sub
inc
sub
xor
ja
sahf
les
sbb
jmp
ss
ss
dec
push
sbb
xchg
pushf
hlt
sub
dec
repz
xor
cmp
xchg
xchg
mov
(bad)
or
into
pop
fwait
shl
xor
call
ins
ins
mov
rcl
mov
ret
ficom
adc
inc
arpl
mov
out
fcmovnu
push
sbb
popa
sbb
mul
and
cmps
fadd
adc
or
fsubr
add
pop
inc
adc
xor
in
dec
lock
sbb
imul
pop
cmp
add
das
pop
push
add
pop
add
or
and
dec
sub
jb
call
dec
mov
js
mov
xchg
test
inc
out
ins
dec
pop
pop
xor
and
ins
mov
sub
inc
xchg
sub
mov
das
dec
test
(bad)
push
mov
out
push
mov
add
inc
les
push
stos
popf
popa
inc
inc
sbb
mov
pop
shl
add
pop
push
or
scas
pop
mov
lar
add
retf
push
and
add
sub
sub
add
shl
cmp
cmps
or
adc
dec
inc
bnd
add
and
or
push
dec
or
add
fwait
ja
mov
push
cs
mov
imul
and
call
out
or
pop
ficom
mov
xchg
jo
scas
lds
jmp
mov
je
inc
add
in
mov
jmp
and
xchg
in
jmp
lea
mov
dec
cmp
push
sbb
and
pop
xor
and
nop
les
lahf
push
sar
fwait
loopne
push
clc
rol
fld
cmps
add
ror
pop
out
or
jp
sub
imul
sbb
jecxz
sbb
pushf
lods
cmp
mov
push
mov
cmp
rol
pop
adc
scas
icebp
pop
xchg
or
loope
sub
arpl
mov
mov
sub
pop
mov
mov
adc
lahf
int3
lahf
js
xchg
adc
lahf
cld
lahf
and
cmp
leave
in
inc
test
push
adc
mov
push
xchg
adc
push
and
add
lahf
push
jnp
push
out
pop
in
adc
mov
inc
mov
in
out
in
and
in
and
es
add
outs
xchg
ins
xchg
xchg
adc
and
xor
pop
xchg
inc
jne
sbb
jp
int
mov
pusha
lock
rcr
out
inc
add
daa
fldcw
mov
mov
cmp
fs
loopne
hlt
test
imul
push
pop
stc
stos
and
push
mov
arpl
sbb
sbb
mov
cmps
pusha
sub
dec
lods
jle
add
inc
jb
sub
shrd
test
into
mov
(bad)
out
repz
out
ret
inc
sub
and
cmp
test
and
sbb
pop
leave
pop
lock
jae
lods
lea
jno
and
push
jb
mov
add
add
cmps
enter
or
xchg
icebp
das
push
jg
test
ins
jno
shl
cmps
cmp
loop
(bad)
dec
cmp
dec
pop
push
xchg
lods
movs
xor
mov
bound
fnstsw
fs
jle
xor
jecxz
cmovg
(bad)
jecxz
adc
sub
dec
leave
rol
mov
repnz
pop
repz
dec
repnz
pop
mov
call
jo
and
push
lods
repnz
repnz
and
loopne
in
xchg
sub
mov
adc
jo
inc
adc
inc
push
hlt
pop
or
cdq
(bad)
sahf
jge
inc
jns
inc
push
ins
mov
cwde
mov
and
and
mov
sub
mov
inc
pop
fld
ins
das
xchg
mov
xor
mov
cmps
mov
fstp
ins
jbe
pop
nop
mov
cmc
sub
push
cdq
mov
gs
loope
(bad)
repz
add
sbb
or
pop
daa
push
pushf
sbb
add
outs
cwde
pop
jmp
sbb
shl
mov
push
push
sub
stc
int3
outs
pop
jne
sub
test
es
xor
mov
push
xchg
dec
and
mov
nop
dec
dec
inc
fcomp
jns
imul
daa
inc
jbe
push
nop
js
jno
mov
mov
fdivp
out
xchg
daa
add
enter
jl
sti
cs
push
mov
push
add
cmps
add
dec
int3
hlt
test
sbb
aad
stos
jne
pop
das
outs
cmp
adc
outs
push
xchg
jo
xor
adc
ror
loope
xor
push
mov
sbb
(bad)
or
jecxz
pop
ror
and
sbb
jbe
or
sbb
dec
gs
jae
add
add
and
inc
xchg
jnp
mov
xor
jo
enter
xchg
push
fiadd
pop
out
ficom
push
(bad)
fcomp
inc
or
adc
mov
inc
movs
mov
call
jb
pop
push
add
lock
or
in
sbb
cmp
idiv
xor
or
repz
fsub
jae
inc
push
rcr
popa
add
push
add
test
mov
add
jne
fs
pop
movs
gs
or
lea
add
femms
mov
add
aaa
enter
mul
or
lea
jb
fld
add
jae
pop
data16
mov
(bad)
pop
jns
jns
sbb
lea
add
pop
mov
mov
add
imul
adc
and
and
call
jae
xchg
mov
mov
add
imul
xor
jb
push
(bad)
dec
outs
cmp
sbb
pushf
jns
loopne
pushf
adc
push
in
popa
mov
lods
stc
(bad)
xor
add
outs
add
in
sbb
mov
je
mov
test
or
ror
sub
cmp
push
(bad)
jle
(bad)
inc
imul
addr16
test
jbe
inc
xchg
cli
cmps
sti
adc
xchg
int
cli
das
sti
cmp
rcr
in
jl
in
das
push
add
push
ror
or
fcom
pushf
or
sub
add
push
adc
jb
inc
imul
add
sbb
jo
lods
dec
lods
dec
push
add
xchg
jae
push
jecxz
dec
aad
mov
pop
sbb
xchg
pop
lahf
mov
jo
jne
mov
or
add
loopne
mov
lea
add
add
outs
pop
dec
push
or
(bad)
leave
out
xchg
adc
add
loope
pop
xor
add
dec
arpl
cld
or
repnz
mov
and
cdq
jle
cwde
pop
add
push
jecxz
out
jno
pop
or
inc
inc
es
repnz
outs
das
sar
fadd
dec
jecxz
fistp
and
push
cwde
lds
xor
xchg
cs
loopne
not
pop
adc
add
mov
outs
es
adc
xor
pop
and
dec
pop
jno
add
outs
pop
icebp
popf
std
hlt
add
or
dec
pop
test
xchg
push
(bad)
push
idiv
or
(bad)
lods
int3
adc
cmp
mov
or
aam
nop
daa
sbb
and
or
outs
adc
or
sti
daa
in
dec
add
adc
cmps
dec
xchg
mov
adc
add
or
inc
pop
ja
movs
loop
pusha
inc
push
test
push
push
adc
in
cld
push
les
add
mov
or
mov
push
cmp
add
aas
adc
shl
or
push
call
cmp
xor
cld
xor
push
jp
arpl
inc
sub
sbb
mov
pop
ficomp
das
pop
retf
dec
mov
in
add
fmul
cwde
sbb
add
dec
mov
and
or
pop
popf
add
and
xor
or
aaa
push
jmp
dec
cmp
dec
push
and
jb
cmp
adc
loop
clc
push
pop
xor
add
adc
sbb
dec
outs
fbstp
neg
popa
fs
out
sbb
and
cdq
add
pop
inc
cs
add
inc
dec
xchg
xchg
fldenv
mov
popf
lock
or
and
imul
and
ins
ss
adc
fwait
push
pop
cs
adc
fidiv
in
out
or
cmp
and
mov
aam
add
ret
loope
mov
mov
ror
xor
jp
mov
mov
adc
retf
push
mov
shr
ror
adc
lds
pop
add
or
dec
mov
inc
mov
jnp
add
fisttp
sbb
add
iret
fwait
dec
loope
je
or
jl
add
or
sar
sti
push
or
sbb
add
out
fiadd
inc
pop
pop
mov
mov
ins
daa
dec
inc
ss
dec
push
dec
outs
pop
lods
leave
iret
xchg
adc
data16
ja
jbe
or
or
inc
sbb
ret
addr16
push
push
ins
add
jg
adc
outs
rcr
inc
add
iret
xor
add
pusha
add
or
xor
addr16
adc
xor
pop
popf
pushf
adc
jno
sbb
sub
ja
jmp
adc
iret
mov
mov
outs
adc
mov
mov
gs
pop
and
rol
or
das
imul
push
psubw
inc
jae
test
inc
and
pop
xchg
mov
iret
repnz
adc
jns
shl
and
ss
push
inc
jl
push
psubw
pop
inc
jl
mov
bound
push
pop
cli
inc
sub
inc
in
sbb
pop
inc
repz
mov
mov
adc
sbb
pop
test
sbb
cwde
arpl
fdiv
out
imul
ds
dec
or
jecxz
xor
and
es
aas
xchg
cmp
mov
cmp
xor
push
add
add
cmc
dec
fcmovbe
push
add
or
jno
out
cmp
push
fnsave
stc
or
mov
add
inc
in
icebp
pusha
or
fmul
fmul
mov
ret
push
inc
sub
xchg
xchg
mov
adc
cmc
adc
jle
jb
add
add
or
add
xchg
das
sbb
mov
add
cmc
jl
sbb
fsubr
adc
ja
add
(bad)
mov
lds
mov
sub
loope
aas
add
int3
fmul
dec
js
dec
inc
lods
popf
into
xchg
sbb
mov
jge
pop
test
jo
mov
gs
mov
push
jg
jae
pusha
leave
int
jmp
movs
push
dec
mov
cmp
inc
punpckhbw
shl
push
imul
dec
mov
mov
xchg
fisttp
xchg
push
fsub
inc
cmp
imul
ss
movs
jecxz
xor
sbb
sub
repz
(bad)
retf
xchg
sub
push
(bad)
xchg
adc
es
fwait
add
add
sub
mov
dec
(bad)
stc
scas
xchg
stos
push
xchg
adc
and
mov
push
push
xor
leave
pop
add
push
mov
and
out
lahf
adc
adc
add
add
aam
je
jne
movs
add
xchg
outs
or
int
push
mov
iret
add
imul
daa
inc
sbb
int3
sub
sbb
(bad)
or
or
add
aad
sbb
nop
sbb
sbb
out
cmp
jae
shr
jno
cmp
jg
push
das
adc
push
lahf
arpl
fisttp
or
movs
repz
and
mov
push
add
sub
scas
ret
daa
and
std
dec
xchg
sub
addr16
add
jnp
xchg
(bad)
mov
pop
or
ss
jb
adc
xchg
les
inc
jo
jne
xchg
(bad)
pop
xchg
push
repnz
nop
inc
je
adc
add
or
push
or
test
add
mov
add
xchg
outs
test
adc
sub
mov
mov
xlat
or
xchg
ret
add
mov
jge
add
xlat
(bad)
retf
add
(bad)
shl
adc
sahf
out
test
ds
loop
sbb
les
dec
dec
mov
xor
sbb
lea
ins
inc
stos
add
mov
pushf
inc
add
push
cmp
ja
dec
cdq
jge
adc
push
inc
sbb
pop
mov
cmp
or
sub
ins
mov
lock
mov
dec
push
and
dec
lahf
jp
sub
mov
sub
pop
aad
aas
stos
lock
test
jns
lea
shr
jge
add
ins
sbb
inc
int
sbb
test
push
lea
std
shl
mov
sub
test
xchg
push
cmp
cs
inc
jmp
and
adc
dec
jmp
sub
ins
gs
inc
loop
xchg
imul
or
ja
dec
inc
ins
push
ins
ja
scas
arpl
imul
fst
je
aam
pop
sbb
push
adc
cld
xlat
imul
jne
cwde
dec
inc
pop
inc
rol
or
mov
cmp
arpl
push
retf
mov
and
dec
xchg
xchg
(bad)
add
jle
pop
jg
adc
mov
dec
inc
push
call
scas
pop
and
push
pop
loop
sbb
add
inc
sahf
pushf
dec
push
push
add
xchg
push
and
add
add
or
mov
add
movs
lea
fimul
fidiv
addr16
leave
sbb
mov
and
or
lock
or
shr
sbb
dec
cmc
dec
push
pop
popa
dec
pop
dec
xchg
adc
jge
sbb
je
xchg
inc
rcl
jge
xor
cwde
jmp
jecxz
push
pop
or
aad
pop
adc
loopne
cmovbe
mov
or
push
inc
sbb
nop
dec
add
and
shl
or
pop
inc
and
or
pop
div
mov
and
sbb
ins
mov
push
and
sbb
add
jo
lea
and
sub
mov
fsubr
adc
sbb
out
add
ss
stc
pusha
xor
in
sbb
aaa
inc
add
push
sahf
ins
adc
and
add
add
cmp
dec
cs
fild
dec
mov
push
mov
mov
and
mov
and
pop
int
ins
loopne
fistp
push
lds
push
mov
pop
inc
es
or
mov
repz
outs
dec
or
jmp
es
mov
sub
jnp
pop
daa
inc
scas
imul
das
or
sqrtps
(bad)
or
or
cmp
loop
push
int
aas
jg
sub
add
push
add
add
sbb
jae
into
push
loop
aad
stos
sbb
pop
xchg
mov
sahf
dec
outs
arpl
inc
mov
lock
mov
pop
dec
pop
pop
xor
dec
mov
jmp
enter
pop
cmp
lahf
push
xor
xchg
pop
nop
and
mov
outs
jns
dec
aaa
adc
dec
shr
mov
ror
ficomp
add
inc
mov
push
adc
out
(bad)
and
in
repz
ins
lods
jmp
and
ins
xchg
inc
dec
xor
lahf
pop
lock
or
shl
sub
or
or
or
(bad)
inc
sar
add
pop
or
or
push
sub
sub
into
adc
xchg
adc
rcr
add
dec
and
test
sbb
pushf
pop
call
popa
test
jo
and
and
rcl
add
push
nop
jecxz
adc
push
xchg
retf
cmp
and
inc
or
mov
leave
pop
lds
js
ins
shr
pop
xchg
or
pop
mov
push
repnz
imul
adc
popa
js
and
test
sub
jnp
(bad)
and
inc
out
push
icebp
cmp
(bad)
push
and
lahf
leave
dec
sub
jo
ins
loope
rcr
push
or
inc
popa
adc
pushf
mov
fsub
dec
sahf
arpl
add
mov
out
pavgw
push
jo
inc
xor
(bad)
and
cmps
and
mov
in
adc
sub
jne
test
dec
inc
push
adc
les
mov
push
cmp
aaa
xor
sti
xlat
and
cmp
outs
dec
outs
cmp
and
iret
fs
add
(bad)
iret
fcom
cld
cmp
repnz
inc
das
test
xor
add
in
dec
add
data16
hlt
jne
inc
(bad)
jmp
add
pop
or
(bad)
ror
int3
out
push
push
xchg
dec
and
dec
mov
fwait
dec
jnp
loope
ins
neg
push
mov
dec
enter
ss
test
scas
je
sti
push
js
sti
sahf
jnp
mov
into
inc
int
rcr
mov
rcr
es
ret
add
push
daa
mov
or
test
adc
dec
cmovl
mov
pop
call
dec
(bad)
and
movs
cwde
(bad)
xchg
xchg
fs
daa
dec
scas
or
int
xor
neg
(bad)
and
xor
in
rcl
pushf
push
inc
cmps
nop
cmp
mov
inc
mov
out
(bad)
ret
lods
sub
stc
cmps
gs
ror
mov
inc
or
adc
sub
test
addr16
cmp
add
mov
imul
std
push
xor
mov
mov
add
nop
mov
call
push
push
sub
in
or
dec
xchg
in
js
movs
cs
scas
mov
retf
jne
pop
cmp
jp
sbb
jmp
jecxz
sar
test
ror
mov
jmp
add
fadd
cli
(bad)
nop
dec
mov
xchg
dec
cmp
ja
push
xchg
imul
xor
jne
push
add
xchg
ins
inc
jmp
je
test
add
sbb
push
ret
add
pushf
inc
test
and
mov
mov
sar
xchg
inc
test
mov
cs
ins
popa
test
push
inc
lods
call
shl
add
xchg
push
aaa
idiv
test
jne
and
test
test
mov
inc
dec
xchg
xor
jns
das
cs
and
adc
xor
call
enter
push
cmp
pop
aaa
dec
sub
into
sar
push
jo
pop
sbb
outs
xchg
(bad)
sub
sbb
retf
inc
mov
lock
add
clc
sub
ins
push
add
(bad)
mov
pop
sub
outs
add
mov
out
pop
adc
or
repz
movs
sub
or
pop
or
daa
and
aaa
dec
sub
or
sub
inc
aam
call
add
frstor
or
ins
xor
sahf
xor
jmp
mov
xor
and
mov
cmp
shl
add
iret
xchg
ss
add
pop
dec
dec
lahf
and
add
adc
call
adc
scas
cmp
or
ficom
jecxz
mov
mov
sub
push
fidivr
mov
dec
xor
jb
lahf
xchg
adc
je
test
scas
jle
add
ja
xor
sahf
pop
das
movs
push
int3
sbb
scas
stos
test
sgdtd
lock
xor
and
rcl
pusha
in
xor
xor
xor
fcmovne
in
xor
pop
add
sahf
jl
stc
add
dec
jb
inc
add
(bad)
out
sahf
int3
cmove
aas
retf
pslld
fbld
or
aas
sub
fdiv
(bad)
mov
aas
leave
inc
pushf
mov
call
cmp
add
pop
ror
cmp
mov
mov
enter
out
push
cmp
clc
jle
aas
xchg
cmp
in
leave
fild
mov
sub
aas
pop
cmp
jbe
call
cmp
dec
ja
in
sub
add
sub
pop
add
add
add
xor
(bad)
out
push
inc
add
mov
push
mov
mov
mov
mov
(bad)
(bad)
push
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
jb
sti
pop
cld
mov
mov
(bad)
out
(bad)
in
(bad)
in
(bad)
jmp
jmp
(bad)
jmp
in
jecxz
loop
loope
loopne
(bad)
fdivrp
(bad)
fdivr
(bad)
(bad)
fcos
fcomp
xlat
call
call
call
call
call
call
call
dec
dec
dec
dec
dec
or
mov
dec
sub
repnz
and
push
push
test
cmps
jge
rcr
mov
mov
out
push
push
ins
lock
iret
repz
mov
lods
ror
neg
mov
push
lock
push
push
adc
loopne
jnp
cmp
scas
push
xor
sub
fistp
jns
rol
cs
jle
cmp
mov
jnp
(bad)
cs
jmp
xor
(bad)
cmp
fscale
mov
(bad)
repz
movs
fdiv
in
hlt
mov
mov
jl
loopne
js
aam
scas
xor
sti
fidivr
pop
mov
shr
pushf
js
in
dec
vshufps
fst
push
add
into
sbb
mov
and
inc
xchg
and
sub
dec
ins
push
xor
ins
xor
or
loopne
lahf
cmp
add
nop
mov
or
or
in
movs
pop
pop
fwait
lods
mov
int3
ins
sub
add
inc
mov
inc
jb
cmc
push
push
(bad)
rcr
push
stc
pop
mov
ret
pop
mov
daa
or
call
pop
push
sbb
arpl
std
(bad)
nop
cmp
cmp
or
add
push
popaw
jns
(bad)
scas
mov
dec
add
pop
xor
inc
(bad)
or
rcr
xlat
stos
and
cmp
inc
and
or
out
xchg
nop
ret
mov
dec
shl
sti
call
push
rcl
push
mov
adc
push
enter
xchg
stos
loopne
pop
jns
mov
pop
hlt
sbb
xlat
mov
add
inc
add
aam
xor
adc
out
inc
outs
and
inc
push
cmp
lea
dec
pop
or
jmp
push
push
and
and
dec
(bad)
aad
cmp
ror
les
pop
mov
cwde
dec
imul
test
inc
and
mov
and
(bad)
xchg
adc
mov
sahf
cwde
or
sub
loope
mov
mov
fnsave
pusha
sub
sub
in
xchg
dec
sub
lea
popa
xchg
(bad)
aam
jge
xchg
out
mov
add
loopne
shr
pop
dec
mul
xchg
dec
sub
sub
cmp
jp
loop
and
mov
add
int3
je
xchg
mov
jo
pop
imul
adc
in
or
dec
imul
add
sbb
xchg
fs
test
xchg
inc
outs
adc
jns
xor
adc
popf
rcr
add
and
add
sbb
jae
add
push
lock
adc
(bad)
nop
pop
aad
mov
and
lods
xchg
cmp
retf
jns
jl
inc
jno
cmp
mov
or
in
add
jmp
or
sbb
sub
push
je
mov
adc
push
xchg
adc
mov
in
dec
in
or
adc
push
dec
add
mov
pop
add
iret
imul
mov
loope
and
mov
adc
sbb
test
out
loop
push
and
jne
pop
test
adc
pop
xor
mov
inc
inc
sub
outs
popf
nop
pop
and
adc
in
xchg
mov
xor
push
mov
cmp
cmp
dec
xor
scas
cmp
daa
pop
stc
sub
and
in
and
cs
mov
sub
xor
cvttps2pi
cmp
xor
cmp
rol
mov
or
sbb
add
cmp
push
dec
push
pop
imul
pop
mov
pop
rol
pop
jae
ror
inc
inc
cld
test
xchg
mov
jae
and
add
loopne
dec
or
dec
inc
pusha
imul
addr16
nop
mul
add
dec
call
inc
lahf
pop
pop
(bad)
pop
popf
cld
inc
data16
test
es
jno
dec
test
jmp
test
pop
cmp
xchg
pop
or
inc
mov
or
xchg
xchg
xchg
retf
pop
inc
arpl
scas
(bad)
std
daa
inc
xchg
xchg
xchg
xchg
dec
je
lds
sbb
gs
xchg
xchg
xchg
mov
xchg
retf
sbb
arpl
pop
cmp
xchg
xchg
xchg
cmps
enter
xchg
xchg
xchg
xchg
sub
cdq
dec
jae
(bad)
mov
fcomp
popf
xchg
push
jb
add
out
mov
add
inc
and
inc
pusha
mov
lds
adc
loop
or
fidivr
pop
inc
ins
adc
push
std
wrmsr
rcl
mov
pop
jnp
mov
out
mov
pop
out
pop
pop
adc
sbb
pusha
dec
or
enter
nop
ins
loopne
or
mov
push
or
push
and
or
inc
das
ja
iret
adc
dec
pop
dec
adc
neg
and
dec
xchg
movq
mov
xchg
shr
or
dec
lods
jbe
dec
xchg
movs
dec
mov
aad
xchg
test
adc
inc
ins
or
aaa
add
inc
mov
adc
in
pop
and
add
sbb
or
xchg
scas
test
or
add
add
je
push
and
push
icebp
je
mov
pop
sar
ins
mov
dec
movs
in
mov
in
push
or
jl
sub
popa
push
outs
loopne
out
xchg
mov
pop
or
or
xchg
cmp
dec
mov
loopne
aaa
inc
mov
stos
faddp
pusha
sbb
inc
ja
push
xchg
ss
out
test
das
mov
sub
push
inc
and
dec
sub
in
add
add
leave
jmp
or
cmc
sub
aaa
xor
imul
cli
or
dec
ins
gs
add
or
cmps
pop
ret
test
pop
push
push
pop
out
push
inc
or
nop
inc
mov
cmp
push
rcpps
adc
sbb
or
xchg
inc
push
and
addr16
ins
sub
sbb
rol
adc
cmc
cmps
mov
push
dec
jl
scas
movs
cmp
add
inc
mov
(bad)
mov
cli
xor
stos
out
in
sub
dec
xor
pop
cmps
rcr
scas
inc
xchg
das
and
shl
sub
test
or
outs
sub
cs
fs
shl
jp
or
adc
adc
adc
push
jo
loope
movs
repnz
sahf
xchg
or
gs
popa
pop
mov
gs
add
or
push
lods
cmp
add
cdq
loopne
or
jae
mov
(bad)
mov
imul
imul
ins
push
outs
data16
inc
xchg
pop
sbb
popa
sar
or
cld
ss
dec
jae
mov
mov
add
in
pusha
fimul
jo
mov
jl
outs
cwde
jbe
pop
iret
test
add
and
(bad)
or
inc
xor
mov
outs
cmp
and
sub
mov
out
fsub
xor
sub
movs
enter
sbb
pop
daa
add
int
xchg
cmp
sub
push
adc
stos
and
xchg
pop
jge
push
inc
mov
sbb
call
mov
aad
xor
iret
add
xor
cmp
pop
mov
ja
jae
mov
stos
and
inc
or
xor
(bad)
addr16
dec
into
ja
fwait
out
sbb
push
dec
push
jl
push
push
push
sub
mov
fs
(bad)
pop
in
das
dec
add
dec
add
imul
push
dec
(bad)
aam
dec
add
dec
push
add
arpl
pushf
neg
mov
mov
pop
es
push
loopne
dec
addr16
in
jns
inc
dec
mov
dec
cmps
cmp
mov
pop
push
push
sub
ins
mov
jl
fmul
sbb
sbb
repz
int
sbb
and
mov
dec
push
je
js
(bad)
xor
jp
fdivr
fwait
and
pop
(bad)
loopne
xorps
call
shl
pushf
call
or
das
arpl
xchg
adc
adc
pop
ja
add
fadd
in
jmp
inc
mov
ret
mov
leave
mov
mov
or
mov
mov
push
sub
add
and
les
das
ins
mov
pusha
leave
enter
jnp
add
add
das
dec
jae
test
ins
cwde
or
add
into
xchg
mov
(bad)
add
les
test
loope
pop
call
xchg
daa
in
push
rol
sub
pop
arpl
push
add
shr
and
dec
add
ins
push
lock
mov
jo
sbb
je
xor
push
dec
sub
adc
retf
dec
cmp
popf
je
icebp
outs
sub
xor
xchg
xor
aaa
cmc
add
imul
adc
push
movs
mov
mul
movs
aam
inc
leave
dec
or
ss
fisttp
leave
out
movs
add
gs
push
mov
je
or
js
pusha
pushf
xlat
je
mov
cmps
stc
rcl
xor
or
popf
sbb
fisubr
in
mov
cwde
mov
xor
dec
fist
sub
mov
cmp
call
dec
inc
pop
sub
jns
inc
ds
jmp
adc
rol
dec
push
push
fcmovnbe
add
popa
jb
push
push
xor
sbb
pop
pushf
add
imul
mov
pop
add
push
(bad)
(bad)
lods
xchg
add
neg
push
cld
or
sbb
pop
lds
test
push
inc
push
add
aas
pop
repnz
dec
cmp
lds
leave
ins
add
pusha
push
jns
movs
pop
sbb
inc
lock
dec
push
xchg
jns
xchg
dec
mov
scas
push
out
push
imul
cmp
push
dec
(bad)
push
mov
and
dec
pop
(bad)
out
fimul
xchg
push
das
mov
ror
mov
cli
std
inc
test
pop
mov
xor
paddsw
push
pop
pop
sbb
retf
pop
outs
scas
call
iret
btc
outs
pop
test
loop
pop
pop
ja
das
aas
sub
into
pop
or
xor
cvtpi2ps
pop
pop
dec
lea
add
(bad)
loope
jmp
xadd
dec
push
or
adc
add
xchg
sub
sub
mov
inc
call
add
add
add
add
adc
lahf
sub
adc
test
adc
sbb
stos
ja
lods
push
bound
push
add
call
inc
sbb
int3
add
mov
mov
mov
mov
or
mov
push
adc
sbb
sbb
(bad)
(bad)
mov
mov
mov
mov
mov
add
push
mov
clc
jmp
dec
mov
mov
add
pop
mov
mov
mov
mov
sub
call
inc
inc
inc
inc
inc
inc
aaa
or
mov
mov
mov
sub
push
mov
sub
bound
outs
push
sub
inc
sub
pop
(bad)
(bad)
mov
aas
dec
sub
or
int
imul
or
sub
iret
repz
ins
nop
mov
cmp
jl
out
ds
jo
les
pop
stc
xor
out
dec
ror
in
xchg
dec
jns
data16
dec
adc
test
fstp
ins
dec
push
and
ins
lahf
cmps
stc
sahf
mov
call
jnp
ja
push
mov
out
cmps
pusha
jbe
out
ins
ss
push
dec
push
js
jns
iret
pause
call
idiv
push
xchg
sar
cmp
dec
not
shr
push
push
mov
repz
enter
cld
cmp
sbb
addr16
ja
rcr
div
jnp
jno
fmul
les
inc
and
inc
shr
push
mov
pop
push
clc
push
mov
call
aam
push
pusha
jl
out
mov
ss
adc
int3
outs
(bad)
sahf
cmps
xor
mov
mov
dec
cmps
dec
ss
movs
ds
pop
push
pushw
jge
jbe
pop
(bad)
cs
popa
out
push
xor
loope
imul
(bad)
pop
inc
adc
adc
loope
pop
xor
and
loope
push
push
push
xchg
adc
adc
pop
mov
and
movs
dec
xchg
add
xchg
sbb
(bad)
int
cmp
xchg
pop
dec
inc
popa
arpl
stos
loopne
popa
iret
adc
xchg
popf
ret
add
jle
add
inc
pop
xor
iret
xor
adc
mov
or
retf
or
js
push
xor
xchg
add
or
jmp
sub
or
sub
xor
or
jae
xor
or
and
dec
mov
add
inc
adc
fdivr
mov
dec
add
mov
mov
cmp
dec
pop
inc
push
popf
ret
xchg
push
stos
std
repnz
icebp
cmp
adc
and
leave
retf
dec
imul
aas
mov
push
iret
pop
scas
cs
daa
xor
xchg
scas
xchg
dec
push
inc
ja
pop
adc
xor
add
xor
test
or
mov
(bad)
repnz
mov
inc
and
lods
movs
nop
dec
jns
inc
pop
or
retf
shr
push
xchg
lods
js
or
mov
add
mov
rol
stc
sub
rcl
dec
pushf
xor
add
push
outs
push
mov
add
les
inc
inc
dec
popa
sar
cmps
dec
cmc
xchg
lds
or
test
sub
ss
xlat
stos
xchg
or
aad
popa
test
adc
(bad)
jae
cwde
push
sub
push
or
xor
dec
cmp
daa
js
mov
cmp
fsub
jns
xor
and
js
sub
mov
inc
in
dec
sar
ds
cmp
xchg
adc
in
inc
adc
dec
adc
add
or
jmp
adc
sbb
dec
lds
stc
xor
dec
and
cmp
cmc
mov
fadd
push
push
add
pop
ja
pop
frstor
pop
in
mov
adc
cmps
xlat
pop
imul
jbe
retf
fnstcw
pop
push
or
xchg
xchg
inc
push
mov
jmp
pop
xor
xchg
xchg
xchg
jne
retf
in
jae
fst
pusha
popa
or
mov
xor
or
rol
sbb
test
test
dec
and
inc
pop
mov
popf
sbb
jno
aaa
inc
dec
lahf
mul
cld
jo
loopne
adc
add
fst
aaa
or
cmps
scas
mov
fimul
pop
xor
ins
xlat
fs
push
in
stos
in
and
cmp
jmp
mov
inc
sub
sub
pop
inc
outs
(bad)
(bad)
xor
loopne
dec
cmp
cdq
(bad)
call
and
ins
lahf
pop
lea
test
push
inc
dec
std
rcr
inc
push
adc
inc
sub
es
xchg
inc
or
push
inc
(bad)
sti
rcl
pop
das
pop
jne
dec
xchg
cmc
inc
repz
add
cmp
je
adc
out
bound
push
push
jg
popf
popa
or
inc
and
inc
seto
xor
cmp
jge
test
in
sub
and
pop
mov
push
lods
popa
popa
jecxz
adc
push
repnz
xor
push
inc
dec
and
in
jge
or
nop
jge
push
sbb
and
aad
inc
push
mov
mov
inc
fs
out
pop
xchg
arpl
scas
(bad)
push
sub
dec
ins
mov
icebp
add
mov
mov
and
arpl
fs
pop
xchg
aas
clc
lock
dec
xchg
push
repnz
mov
dec
ins
and
add
mov
push
xlat
pop
out
jnp
loop
mov
mov
add
adc
push
xchg
cld
js
push
push
pop
inc
bound
xchg
adc
cmp
jg
cld
test
fst
ins
mov
add
pop
retf
sti
add
sub
add
add
xor
xchg
add
lods
push
dec
jmp
inc
add
addr16
add
xchg
inc
add
femms
mov
sub
mov
add
push
sub
sbb
sub
and
mov
push
retf
or
adc
add
popa
out
setge
arpl
jae
enter
stos
dec
push
cs
fs
push
add
fs
push
dec
adc
test
pop
pop
adc
xor
or
sbb
add
cmc
(bad)
and
or
inc
xchg
fbstp
imul
(bad)
mov
or
enter
iret
lods
add
push
xchg
pop
int
pop
xor
ins
sbb
enter
or
bound
cwde
pop
aas
frstor
(bad)
loopne
shr
mov
movs
popfw
xor
mov
or
inc
add
or
int
retf
jno
mov
out
add
pop
sbb
pushf
pop
add
data16
adc
es
das
int
xchg
xchg
adc
cs
cld
inc
add
mov
push
fcom
inc
pop
push
dec
push
mov
jbe
mov
xchg
in
xchg
pop
sub
xchg
mov
adc
dec
lods
addr16
fiadd
jb
sub
je
jns
fdiv
push
lea
clc
xor
loope
sbb
jge
fisttp
add
push
imul
mov
int
jp
adc
ins
pop
jo
iret
pushf
push
inc
cmp
jl
inc
dec
adc
mov
iret
cld
fs
push
addr16
mov
adc
test
add
dec
les
popa
(bad)
pop
ficomp
pop
into
movs
cmps
adc
cmp
pop
mov
pop
and
xchg
cld
jp
scas
mov
sbb
jg
sbb
int
pop
pushf
hlt
jno
inc
xchg
jecxz
add
add
ret
mov
mov
add
xchg
imul
push
xchg
or
or
icebp
or
xchg
xor
adc
mov
retf
push
mov
pop
addr16
sbb
lock
jmp
int3
cli
pop
outs
imul
dec
jbe
out
cmps
xor
mov
inc
push
call
push
fcmovnb
cmc
adc
outs
fistp
add
mov
pcmpgtd
inc
imul
or
sbb
xor
sbb
or
add
add
sbb
mov
dec
call
dec
add
adc
xchg
mov
bound
test
pop
(bad)
lods
lods
fiadd
fs
inc
inc
push
js
sub
aam
fisttp
inc
pushf
mov
mov
or
adc
js
jne
push
lods
mov
dec
js
add
pop
and
ror
outs
pop
adc
adc
cmp
inc
dec
mov
dec
adc
dec
imul
cmp
inc
mov
mov
cmp
shr
add
in
outs
xor
xor
push
jae
popa
cmp
xor
mov
add
jae
daa
sahf
jno
in
adc
jp
sub
adc
inc
add
inc
enter
or
ror
xor
xchg
mov
sub
inc
add
jbe
inc
mov
das
rol
(bad)
xchg
pop
adc
daa
stc
in
(bad)
lea
push
jb
jbe
jns
xchg
aad
loope
iret
and
xchg
pushf
sub
sbb
sub
and
inc
int3
and
sete
jmp
inc
and
aad
test
mov
ins
jae
xor
pusha
pop
pusha
push
inc
or
or
fcom
test
fmul
xor
add
jl
sub
add
inc
bound
add
pop
cwde
xchg
pop
pop
push
xor
sbb
sbb
sub
lea
jae
xor
mov
das
add
pop
out
adc
jae
and
(bad)
xor
sub
dec
iret
pop
dec
add
dec
xor
jae
and
fisttp
or
and
and
mov
mov
xor
stos
fcomp
push
inc
imul
cmps
push
leave
(bad)
xor
or
leave
mov
xchg
rcr
add
and
mov
nop
into
adc
int
dec
cld
pusha
jae
push
or
iret
in
inc
stos
adc
sbb
jnp
pop
inc
nop
xchg
add
aaa
push
shr
pop
jmp
div
les
pop
shl
adc
jg
mov
ins
mov
cmp
test
lods
or
nop
popa
inc
call
add
(bad)
aaa
sbb
enter
ret
test
mov
(bad)
enter
repnz
cld
ins
out
sahf
out
jge
xchg
lahf
pushf
out
sahf
lods
mov
inc
popa
sbb
test
xchg
xor
cli
add
jns
add
bound
test
adc
push
in
fldcw
xchg
or
xor
in
mov
cmp
inc
pop
cmps
cs
ds
lods
movs
cmp
es
and
test
fsub
das
adc
mov
xor
xchg
das
cs
pusha
xchg
fstp
mov
sbb
bound
xchg
sbb
out
sbb
jae
outs
ror
cmp
stos
mov
in
xchg
xlat
retf
wrmsr
or
pop
mov
xchg
hlt
dec
out
out
adc
adc
sar
ja
pop
std
pop
xor
xchg
cmp
inc
jbe
dec
push
daa
ins
push
fiadd
or
call
pop
sub
leave
mov
pusha
sub
ss
test
fs
loop
loope
push
rcl
es
pop
jo
aam
pop
ins
inc
loop
gs
jo
je
jp
inc
xchg
je
enter
rcr
dec
adc
repz
cld
js
add
pop
push
or
sbb
inc
loopne
mov
push
movs
in
jns
push
adc
cmp
mov
and
or
sub
je
ficomp
test
push
ret
pop
adc
push
popf
add
jl
fstp
pop
sub
inc
enter
jnp
jnp
inc
(bad)
lds
adc
inc
loope
jno
mov
and
mov
cwde
inc
and
mov
lock
pop
xchg
lock
data16
cmovo
es
jo
add
in
fldcw
xor
xchg
fucom
fs
sub
push
add
aad
mov
add
aad
and
sub
lods
out
add
mov
test
and
and
outs
paddsb
inc
aam
jge
cmp
dec
daa
dec
jle
cmp
aaa
fidiv
xor
push
mov
push
lds
add
fadd
add
xor
mov
addr16
or
xchg
dec
add
int
ds
test
xlat
lahf
ret
mov
pusha
or
pop
adc
push
retf
repz
ds
ja
imul
mov
add
and
adc
mov
and
das
jno
and
jl
lods
inc
jns
fisubr
sub
inc
loope
add
jns
xor
lahf
push
sub
sbb
addps
push
es
add
or
jg
aad
fwait
push
dec
dec
xchg
xor
xchg
cmp
(bad)
fild
jg
cmp
fild
pop
retf
xor
sub
pop
push
jnp
or
mov
xchg
push
cdq
push
inc
mov
(bad)
sbb
or
mov
in
cmp
add
inc
and
and
ror
xchg
inc
jl
(bad)
or
pop
pop
add
add
movs
pop
add
shr
mov
dec
mov
sub
(bad)
loopne
and
or
push
dec
or
shl
movs
lahf
mov
(bad)
fst
jecxz
sub
adc
add
adc
or
xchg
nop
cld
add
push
pop
or
dec
xor
xchg
mov
ret
inc
lock
or
outs
jno
jmp
push
retf
jmp
add
test
inc
retf
lahf
pop
mov
pop
inc
add
inc
add
dec
add
sbb
or
xlat
fdiv
or
retf
push
xor
pop
add
inc
mov
xor
adc
push
push
and
inc
adc
xchg
dec
es
sub
mov
pop
inc
or
push
pop
stos
sbb
mov
cwde
fmul
inc
fidiv
and
push
mov
rol
jo
pop
lods
mov
test
mov
or
inc
add
dec
and
pop
adc
push
push
adc
scas
xor
inc
shl
push
xchg
les
xchg
jno
jl
xchg
das
dec
imul
pop
xor
shl
ins
inc
xlat
push
sbb
pop
lods
pop
addr16
inc
mov
mov
das
mov
loop
adc
add
add
mov
fld
cmp
(bad)
rol
sub
or
dec
nop
pop
or
out
test
dec
push
dec
or
or
jae
fisubr
les
pop
mov
lods
push
add
mov
mov
jb
cmp
pushf
out
(bad)
dec
pop
push
push
enter
push
shr
enter
and
mov
or
pop
push
lock
inc
scas
cmp
inc
bound
mov
(bad)
adc
jnp
aam
mov
pop
add
daa
jno
add
xchg
mov
retf
mov
movd
fs
mov
dec
jnp
pushf
sbb
mov
test
lds
fs
mov
js
sub
push
push
or
and
outs
add
aad
cwde
lods
sub
ret
adc
adc
push
pop
mov
jno
fisubr
adc
shl
inc
cmps
pop
pop
sub
in
mov
inc
inc
mov
jnp
mov
out
cmp
inc
icebp
xchg
mov
sbb
inc
cmp
jae
jl
push
xchg
xchg
(bad)
jmp
inc
adc
cmp
int
mov
sbb
js
int3
mov
mov
push
pop
sbb
mov
(bad)
ror
rol
shr
xchg
push
pop
loopne
inc
mov
add
add
lea
cmps
mov
add
dec
cmp
and
dec
clc
in
xchg
dec
add
in
add
add
jno
pop
sbb
popf
leave
fwait
mov
(bad)
fisubr
icebp
and
popf
pop
xchg
pop
inc
(bad)
mov
push
mov
add
popf
shl
mov
or
xchg
mov
xchg
mov
sbb
and
(bad)
mov
lods
mov
clc
rcl
sbb
mov
add
daa
out
sub
bound
xlat
dec
fnstcw
inc
sub
mov
das
sbb
xchg
adc
(bad)
pusha
div
push
test
(bad)
push
and
add
nop
jmp
xchg
dec
add
or
dec
les
mov
or
dec
lock
sub
push
test
(bad)
cmp
cmp
add
outs
or
cmps
add
leave
cmp
je
dec
jns
add
ds
add
or
hlt
dec
cmps
jnp
ret
sub
dec
inc
inc
outs
mov
cmp
mov
xchg
loop
repnz
sub
xchg
test
inc
mov
les
push
je
or
movs
icebp
pop
push
popf
pusha
mov
add
sub
fcmovne
cdq
ds
xchg
mov
leave
leave
enter
xchg
push
jg
call
xlat
jno
lock
inc
xchg
pop
or
push
sub
in
pop
retf
ins
les
test
xor
ror
stos
or
ja
bound
arpl
ret
push
into
imul
push
shl
mov
dec
fwait
aas
adc
mov
adc
dec
rcl
jp
mov
mov
xchg
mov
je
stos
inc
test
or
jge
scas
dec
pop
add
aas
aas
or
(bad)
cli
adc
pop
aaa
add
pop
(bad)
inc
lsl
xchg
push
mov
push
mov
jno
hlt
retf
xor
test
in
gs
push
inc
ds
stos
sub
mov
cmp
and
adc
or
das
and
mov
and
xchg
xchg
shl
adc
dec
add
or
xchg
bound
push
xor
add
retf
adc
cmp
ror
adc
rcl
sbb
push
push
inc
add
lahf
cmps
push
dec
sbb
cs
inc
loope
dec
mov
add
sub
(bad)
ror
pusha
xor
fcom
aaa
mov
pop
push
push
nop
push
xor
mov
pop
js
rcr
mov
add
clc
inc
mov
in
je
(bad)
aaa
lock
shl
xor
nop
jne
and
dec
jg
pop
mov
je
mov
mov
push
push
and
mov
inc
mov
adc
sahf
inc
mov
pop
lahf
xor
lods
out
jmp
pushf
pusha
and
retf
sbb
xchg
pop
push
pop
pop
ret
je
xchg
imul
ds
xchg
cmp
mov
lods
and
jno
adc
adc
add
imul
sbb
xchg
pop
ja
xchg
push
pop
es
ins
add
cmp
xchg
adc
pop
sub
shr
rcl
push
ss
call
pop
xor
or
add
and
test
shl
xchg
scas
movs
seta
jmp
sbb
add
sbb
adc
cmp
dec
pop
xor
or
lea
sti
xchg
or
(bad)
std
and
xchg
push
mov
inc
dec
push
cmovs
add
jle
rcr
ds
in
inc
outs
pop
ja
cmp
shl
dec
inc
or
mov
aaa
fst
sub
in
jnp
add
inc
push
call
in
inc
jge
pop
je
push
push
inc
ret
adc
push
addr16
mov
push
cmp
xor
outs
push
rcl
adc
nop
xchg
adc
hlt
div
int3
dec
ss
inc
add
ret
into
jne
mov
or
rcl
sub
add
dec
pop
pop
dec
bts
mov
jno
pop
cmp
mov
popf
adc
pop
fcomp
mov
fmul
xor
push
call
jno
cld
fwait
dec
leave
in
and
add
call
and
mov
inc
rcl
js
or
loopne
loopne
jnp
or
call
inc
or
dec
(bad)
and
sub
or
shr
das
repnz
jo
rcl
adc
iret
mov
dec
xchg
push
pop
mov
push
(bad)
and
cli
pop
stos
and
or
fstp
sub
pop
xor
sar
or
inc
mov
cmp
jl
mov
mov
(bad)
xlat
bound
retf
sub
and
cld
and
and
ret
xchg
xor
lods
add
cmp
test
cmp
(bad)
and
dec
xchg
sbb
add
rcl
jecxz
mov
scas
aam
push
nop
xor
fcmovnu
retf
push
fs
mov
push
inc
add
or
ret
cmps
jecxz
sub
xchg
test
fnstenv
fdivp
test
dec
dec
jne
jo
jl
sbb
cmp
cmp
xor
lods
push
es
push
push
call
stos
pop
push
or
push
pop
hlt
jo
enter
rcl
mov
retf
cmp
dec
adc
cmps
imul
cmps
imul
cmps
imul
pop
in
cmp
add
and
popf
xchg
in
lahf
out
jmp
or
inc
inc
lds
xchg
jl
and
dec
add
pop
push
jg
je
sub
mov
and
pop
out
adc
in
scas
arpl
mov
dec
je
and
es
mov
add
pop
cmp
clc
push
mov
adc
sar
cwde
adc
outs
hlt
adc
cwde
jmp
mov
pop
xor
fcom
inc
add
adc
mov
fwait
test
add
and
cmc
les
adc
push
mov
xchg
add
retf
sub
pusha
ror
sbb
aam
gs
stos
xlat
push
les
fs
outs
loopne
mov
cmps
push
mov
icebp
adc
cmp
neg
xchg
mov
mov
hlt
adc
xchg
icebp
or
dec
xchg
push
xchg
imul
inc
sbb
fsub
push
pop
sbb
mov
inc
sbb
pop
mov
nop
mov
cmp
fcmovb
mov
mov
push
scas
test
mov
mov
cs
fistp
fwait
sub
inc
and
rcl
stos
inc
test
xor
sub
add
sbb
ss
inc
sub
push
mov
ins
lea
jg
lods
inc
into
sbb
arpl
push
in
adc
and
aaa
les
mov
mov
jae
pop
cmps
push
jmp
or
add
and
(bad)
push
js
sub
inc
push
cwde
cmp
mov
push
les
pop
sub
push
dec
lea
xor
fadd
push
fs
pop
mov
push
pop
xchg
iret
sub
xchg
cmps
rol
out
movs
jo
fstp
enter
pop
sub
adc
scas
mov
and
xchg
ret
or
(bad)
or
lock
or
xchg
mov
jle
adc
shr
mov
inc
cmps
push
jno
dec
fild
or
adc
pop
sar
rol
jl
add
lea
cmp
jl
cmp
push
test
gs
data16
daa
fsub
stos
sbb
push
lods
push
jmp
inc
push
xchg
dec
pop
or
ins
xchg
rol
push
inc
adc
imul
test
mov
adc
cmp
ds
jmp
cmp
jne
push
cmp
add
cmps
shl
les
pop
xor
stc
xchg
mov
cmp
popf
shl
cwde
dec
aam
adc
push
into
cmp
daa
pop
dec
lods
or
shl
and
dec
and
shr
movs
imul
and
mov
cmp
add
lock
lahf
push
stos
(bad)
mul
jmp
dec
rol
js
cmp
sub
gs
clc
adc
hlt
jno
lock
mov
inc
push
push
(bad)
shl
dec
ret
push
xchg
mov
jno
bound
xchg
add
jo
(bad)
mov
sub
mov
adc
mov
aas
cmp
je
mov
je
je
sbb
add
(bad)
aad
in
movs
or
pop
icebp
inc
stc
js
add
sub
(bad)
jecxz
fcom
lock
loopne
push
push
xor
cmp
in
sbb
adc
test
add
(bad)
iret
xor
push
sub
mov
std
stos
jl
pop
and
loop
or
(bad)
lock
in
mov
mov
test
mov
push
xchg
imul
or
xchg
sbb
inc
das
push
shr
into
mov
pop
inc
xor
and
in
loop
push
fadd
xor
mov
xor
pop
jp
je
cmp
push
imul
sub
mov
xchg
popa
jo
xchg
or
test
and
xlat
sbb
dec
dec
dec
jnp
pop
sbb
and
sub
inc
jne
and
or
pop
cmp
jmp
and
xor
fistp
cmp
test
push
es
aam
aam
pop
add
inc
hlt
gs
cmp
test
jp
mov
test
mov
jle
sub
mov
sub
add
cmp
push
inc
arpl
in
cmp
fs
mov
imul
ret
inc
push
cmps
icebp
push
dec
sbb
jp
add
push
rol
jmp
xchg
lock
pop
bound
jle
jmp
out
lock
leave
sub
ror
push
stos
outs
cmps
mov
dec
mov
daa
add
jge
xchg
mov
cmp
and
test
mov
call
mov
lea
pop
ret
jb
push
mov
(bad)
and
and
retf
outs
repz
sbb
mov
mov
jo
cmp
loope
fistp
or
les
jo
call
aas
in
mov
dec
std
ins
push
out
ds
mov
jmp
popf
push
add
fdivr
jmp
cs
cli
add
repz
cmp
fcmovnbe
sub
add
dec
test
mov
mov
push
fiadd
sub
add
sahf
or
rcl
daa
mov
mov
ror
dec
cmp
push
out
or
xchg
add
mov
(bad)
mov
adc
scas
popf
mov
popf
cmp
xchg
cmp
sahf
stc
int3
xchg
xchg
or
cmp
adc
punpckhbw
dec
push
add
mov
mov
add
or
lods
mov
sahf
dec
fist
sbb
in
mov
or
shl
loopne
ret
(bad)
mov
or
adc
inc
pop
lds
cmp
or
cmp
adc
sub
mov
mov
or
int
imul
movs
adc
fild
idiv
jmp
pop
jns
movsx
adc
push
or
pushf
sub
cmp
jmp
jmp
push
inc
xchg
bnd
add
movs
je
scas
js
or
pop
(bad)
hlt
daa
pop
and
dec
ficom
inc
pop
sub
sbb
enter
cmp
scas
pop
xchg
pop
(bad)
dec
add
mov
and
push
fs
push
pop
push
adc
jb
aad
cmp
or
or
xor
xor
jno
(bad)
cld
js
inc
addps
daa
mov
popf
ins
loopne
xor
loope
push
inc
or
fsubr
cs
add
movs
adc
sub
test
or
out
push
xchg
shl
addr16
inc
daa
rcl
lea
test
stc
add
test
or
mov
(bad)
push
or
cwde
cwde
pop
sub
xchg
(bad)
adc
adc
cmp
retf
adc
and
adc
cli
imul
shl
push
push
ins
pop
xor
mov
mov
xor
adc
cmps
mov
inc
jmp
pop
mov
jmp
or
test
(bad)
popa
or
mov
dec
mov
push
push
pusha
or
leave
rol
push
dec
xchg
inc
idiv
pop
or
movaps
sbb
in
mov
add
jo
xchg
and
rcr
cmp
inc
mov
pop
in
jge
push
cmp
inc
popf
add
in
sub
(bad)
hlt
icebp
jl
xchg
in
and
jo
cmp
and
add
mov
inc
(bad)
sbb
sbb
imul
dec
sbb
lock
jmp
cmp
in
jbe
repnz
fcomp
sbb
movs
scas
sub
data16
push
adc
in
inc
push
in
dec
shr
cmc
mov
movs
das
adc
cwde
call
sub
adc
movs
jns
adc
and
cld
add
pop
pop
push
loopne
dec
jae
stos
push
sbb
ja
aas
cdq
lock
outs
call
xor
mov
scas
loope
adc
push
push
fistp
or
into
push
xor
add
rcr
cmp
das
imul
mov
xchg
fimul
or
mov
add
test
sub
jbe
add
or
es
or
sbb
sbb
adc
lahf
cmp
sahf
and
jle
cwde
push
imul
popa
adc
loope
dec
mul
push
xor
movs
pop
outs
je
inc
shr
jl
sbb
push
pop
int
cwde
inc
add
fist
xchg
mov
int
add
(bad)
cmp
pop
mov
and
or
or
cmp
pusha
add
xor
sahf
and
ja
and
lahf
add
outs
lock
add
jne
mov
imul
add
pop
sbb
or
sub
add
sub
mov
jns
xchg
sub
ret
retf
or
rcl
stos
rol
fdivr
or
sbb
out
add
push
inc
mov
dec
jb
rol
xchg
mov
in
icebp
mov
push
fld
fild
and
push
mov
mov
add
imul
jl
adc
icebp
je
add
cmp
aam
aas
daa
xchg
pop
stos
aas
stc
scas
push
cmp
imul
sbb
test
ror
and
out
(bad)
xlat
call
xor
and
cmc
inc
outs
test
lds
or
push
pop
and
rcl
push
inc
mov
movs
movs
mov
or
outs
cmp
jle
out
dec
mov
fistp
or
dec
push
adc
jle
add
add
and
fnstenv
add
push
or
(bad)
cmp
dec
jg
mov
dec
jmp
ins
xor
(bad)
repnz
stc
lock
aas
pushf
mov
xor
movs
push
icebp
jmp
pop
nop
dec
inc
mov
imul
cwde
lahf
dec
mov
and
xchg
inc
jecxz
dec
xchg
sub
and
adc
mov
dec
pop
adc
or
movs
push
pop
cmp
push
cmp
cwde
jmp
fs
adc
sub
mov
push
cmp
push
jo
inc
dec
mov
pusha
mov
lock
cmps
and
and
loopne
and
push
pop
add
pop
pushf
divps
and
inc
test
mov
loop
dec
inc
mov
cmp
xor
xchg
aam
pop
iret
pop
popa
pop
pop
mov
mov
ror
sub
(bad)
mov
sbb
dec
aam
sysret
and
stos
and
add
add
ret
cs
and
xor
xor
push
adc
or
or
mov
rcl
push
cs
mov
jnp
leave
retf
out
sub
fwait
jmp
inc
add
jmp
cmp
adc
int
push
and
or
adc
pushf
(bad)
jge
movs
xor
fdivr
or
push
or
adc
or
xchg
pop
je
mov
jmp
cmp
cmp
mov
xchg
mov
or
push
adc
or
mov
jnp
bound
mov
movs
mov
inc
jbe
loopne
pusha
pop
hlt
mov
inc
rcl
and
movs
out
xlat
pusha
cmp
or
lea
add
pop
mov
mov
dec
cmp
rcl
leave
inc
sub
stos
add
mov
adc
xchg
xchg
or
jbe
mov
inc
sbb
scas
or
sub
push
sti
inc
outs
(bad)
or
dec
in
(bad)
xchg
mov
inc
adc
movaps
out
mov
fdivr
pushf
gs
inc
sbb
xor
mov
add
or
pop
movs
fwait
or
adc
loopne
dec
int3
xchg
cmp
xchg
in
popa
ror
lahf
mov
add
retf
cmp
jmp
mov
ja
stos
repnz
sbb
and
xchg
stos
mov
cmps
or
jb
popa
cmp
mov
test
pop
push
adc
add
cmp
pop
nop
pop
add
add
inc
dec
xchg
or
push
in
out
and
dec
(bad)
mov
push
pop
shl
imul
sbb
and
pop
jnp
xchg
cmp
xchg
add
sbb
inc
fist
xor
xlat
xchg
adc
movs
jnp
or
movs
rcr
cmp
add
(bad)
jo
lock
or
ins
add
imul
js
add
pop
xor
sbb
aas
fcom
dec
or
loope
mov
jg
fs
jbe
test
inc
add
mov
xor
fidivr
mov
pop
add
cmp
mov
push
fiadd
imul
cs
mov
loopne
js
jle
cmps
sbb
test
cmp
pop
aaa
inc
sub
mov
xchg
inc
popa
add
bound
adc
inc
or
push
push
les
jmp
(bad)
xchg
mov
inc
push
retf
adc
je
sub
push
xchg
dec
stos
cmp
adc
adc
or
or
mov
push
js
test
movs
add
push
xor
daa
push
or
lock
push
neg
ror
mov
and
and
add
adc
aad
fld
loop
aam
int3
sbb
cmps
jno
add
jmp
pop
lea
in
pop
and
fwait
or
xor
fadd
imul
or
cmp
mov
neg
push
out
push
cmps
xchg
adc
xlat
cmp
sub
cs
sub
(bad)
cmp
mov
popa
retf
ins
inc
sbb
(bad)
dec
loopne
cmp
jmp
push
mov
ret
add
rcl
mov
dec
out
into
mov
(bad)
cmp
jecxz
sbb
rcl
jo
rcr
movnti
inc
imul
or
mov
ja
ret
inc
jne
enter
dec
inc
mov
pop
adc
xchg
test
movs
jne
and
dec
jne
sub
jne
test
je
push
and
mov
xchg
jle
xchg
test
pop
mov
daa
gs
mov
add
and
and
arpl
dec
jmp
or
cmc
cmp
ret
mov
mov
mov
push
mov
xor
mov
nop
inc
or
jp
vminps
cmp
sti
movs
or
jno
pop
gs
push
sub
add
(bad)
fcomp
dec
adc
ror
xor
jmp
jmp
mov
cmp
adc
cmps
sbb
push
sar
mov
mov
or
bound
cmp
shl
in
cwde
loop
pop
add
pop
push
dec
or
xchg
enter
aad
ret
aam
shl
cmp
clc
in
dec
in
add
and
bnd
imul
pop
push
jmp
ror
test
das
in
inc
adc
or
inc
jo
jl
ja
int
xor
pop
or
xor
cmp
add
lahf
add
and
add
nop
lds
jmp
imul
jmp
push
cwde
nop
in
repnz
or
xchg
and
push
mov
bound
iret
data16
loopne
js
in
movs
lea
lahf
jecxz
adc
addr16
gs
sbb
push
fs
push
test
inc
fld
popa
jnp
adc
mov
push
adc
daa
xor
cmp
cmp
add
rcl
cmp
jne
xchg
sub
loope
sbb
sub
inc
mov
push
sbb
push
dec
dec
mov
adc
mov
loopne
cmp
loop
xchg
(bad)
xchg
pop
cmp
mov
fsubp
sub
je
add
out
add
push
pop
cmc
sbb
fucom
dec
cmp
adc
dec
push
out
mov
inc
shr
and
pop
fs
mov
mov
push
popa
push
cmp
dec
mov
mov
push
cdq
addr16
mov
or
adc
xlat
inc
add
cwde
bound
jae
adc
(bad)
shr
cmp
or
push
xchg
and
and
in
sbb
xchg
mov
outs
aas
lock
ins
out
or
adc
in
push
ds
inc
jl
dec
and
or
ret
mov
sub
mov
inc
cmp
add
mov
sbb
xchg
xor
ret
xchg
les
popf
out
sets
mov
adc
sub
push
mov
rcl
add
sub
nop
cmps
mov
or
add
mov
sub
aaa
adc
fdiv
fmul
inc
xchg
data16
mov
inc
test
movs
inc
xchg
cmp
sub
call
dec
out
or
add
add
push
mov
(bad)
addr16
or
imul
mov
addr16
leave
arpl
rol
addr16
push
test
popa
jns
push
in
mov
push
cmp
test
imul
or
test
and
jne
add
pop
enter
dec
sahf
cmp
mov
sub
cdq
push
aaa
stc
jne
(bad)
addr16
es
jae
cld
xchg
out
pop
add
dec
xor
sub
das
arpl
fiadd
dec
(bad)
vzeroall
add
das
xor
repnz
lea
pusha
mov
cmp
pop
fsub
inc
arpl
xor
aaa
ror
push
push
popa
xchg
mov
xlat
adc
fsubr
or
and
push
leave
ret
scas
test
(bad)
sbb
inc
adc
dec
jbe
mov
or
xor
pop
or
movs
xchg
(bad)
mov
cmove
cs
dec
int3
xor
add
add
shr
push
xor
push
icebp
dec
pop
and
sub
ror
jp
sub
adc
ror
ins
cli
push
cmp
shl
jbe
add
mov
jno
pusha
je
pop
or
mov
mov
fs
pusha
aas
jg
push
les
mov
daa
leave
enter
jecxz
les
inc
add
les
push
pop
lods
push
mov
adc
loopne
mov
pop
cmp
push
or
add
mov
stc
xchg
push
mov
mov
add
rcl
add
call
jg
push
pop
js
imul
or
adc
in
jbe
push
push
push
retf
enter
pop
popa
xlat
cmps
cmp
inc
push
in
adc
jns
jns
or
sti
ins
or
jecxz
cmps
pop
jl
mov
mov
add
push
add
and
cmp
cmp
sub
test
add
push
sbb
push
clc
adc
fs
xor
xor
aaa
lock
or
add
jne
mov
lahf
pop
mov
retf
retf
mov
push
popa
movs
adc
dec
repz
nop
(bad)
adc
push
adc
pop
pop
ds
shl
jo
and
nop
add
mov
ins
adc
cwde
lock
jmp
pop
call
aam
dec
repnz
dec
dec
jo
dec
xchg
jb
adc
cmp
xor
sbb
and
sub
jb
lods
and
sbb
or
xchg
jne
fstp
inc
call
(bad)
adc
gs
push
adc
xlat
scas
ss
pop
test
or
and
aad
push
movs
adc
add
movs
outs
repz
(bad)
push
pop
mov
jb
je
test
pop
inc
cs
cmp
and
outs
dec
sub
int
ror
bound
add
sbb
jg
nop
pop
or
push
cmp
je
mov
jo
push
adc
retf
pop
ret
xchg
daa
sbb
pop
int
push
ret
test
je
jle
xor
add
inc
or
push
adc
or
and
or
ror
jne
or
or
xor
in
sub
jle
pop
call
jns
inc
push
das
ds
lock
add
sbb
dec
dec
adc
inc
pop
adc
stc
loop
shl
cmp
das
add
adc
push
or
xchg
leave
sbb
movs
adc
add
hlt
aaa
jb
hlt
cmp
mov
push
mov
push
push
cs
(bad)
or
in
adc
je
mov
dec
pop
repnz
ror
pop
push
add
or
cdq
push
mov
xor
push
mov
push
lods
mov
movs
es
and
sub
adc
test
rcr
fwait
pop
pop
sub
ror
dec
fs
aaa
add
jp
fwait
rcl
int3
imul
lea
inc
pop
sub
xor
push
jp
fmul
shr
mov
je
adc
imul
lahf
xchg
mov
mov
inc
popf
sbb
(bad)
lds
aad
dec
push
adc
add
cwde
iret
test
je
mov
inc
dec
ds
inc
aam
cmp
and
add
ins
xor
push
sub
push
pop
mov
mov
(bad)
out
and
js
or
js
pop
lock
xor
adc
nop
arpl
mov
je
and
shl
nop
xchg
pop
or
mov
(bad)
mov
dec
and
push
and
ret
pop
nop
icebp
push
mov
add
sar
push
je
inc
mov
hlt
adc
xor
or
stc
pusha
leave
xor
or
scas
fs
test
push
xchg
cmp
jbe
mov
ja
sbb
adc
ins
push
push
dec
mov
je
lahf
add
cmp
inc
cmc
popa
push
mov
adc
ficom
outs
mov
jns
or
mov
test
ret
jp
daa
shl
xchg
jno
mov
mov
jg
xor
push
dec
adc
inc
cmp
pop
mov
inc
call
jo
mov
cmp
mov
js
or
mov
sbb
sub
push
or
mov
mov
adc
ret
das
pop
sbb
daa
cmps
mov
jle
js
push
inc
inc
cmp
or
aaa
fcomp
mov
int3
lods
inc
push
daa
xchg
movs
jmp
les
push
push
dec
int3
mov
sbb
rcl
dec
adc
cmp
inc
addr16
inc
aam
inc
mov
rcl
in
xchg
pusha
loopne
jl
mov
mov
mov
sbb
hlt
sbb
and
inc
gs
in
scas
push
mov
lahf
jle
(bad)
popf
fwait
add
jb
pop
or
nop
pusha
cdq
fsub
push
push
adc
sub
mov
fisttp
add
sub
fidivr
push
les
push
dec
es
dec
aaa
inc
test
mov
int3
daa
aad
add
pop
adc
lods
xor
pop
mov
push
and
adc
mov
mov
cs
add
mov
or
push
retf
stc
pop
in
xor
xor
push
daa
xor
dec
adc
sub
xor
test
ret
pop
mov
lock
sub
jge
cmp
je
popa
leave
stos
scas
fwait
in
push
xor
add
inc
dec
clc
push
push
mov
xchg
mov
aam
test
push
jae
out
(bad)
in
cmp
dec
pop
call
pop
(bad)
sbb
ret
inc
jmp
add
and
iret
scas
fcom
sbb
test
inc
pop
jmp
xor
pop
test
or
and
(bad)
nop
es
gs
jns
and
xchg
cld
add
push
mov
sbb
xchg
mov
adc
jg
and
stos
adc
push
imul
popa
pop
lods
inc
adc
cmp
mov
jo
cmps
jp
add
imul
mov
add
xchg
xchg
adc
push
fs
adc
pop
mov
ds
or
lock
cmp
lods
rol
mov
lods
mov
fist
jbe
or
inc
cli
push
xchg
test
push
xchg
or
not
mov
inc
pop
cmp
sahf
les
or
imul
ins
cmp
ret
icebp
inc
mov
cmp
jle
pushf
shr
cli
into
mov
enter
cmp
add
add
push
repz
add
xor
jb
cmp
and
shr
add
dec
mov
repnz
das
push
dec
or
xor
loopne
push
in
pop
push
or
adc
mov
add
add
adc
cwde
mov
mov
leave
outs
xchg
outs
push
xlat
adc
or
dec
adc
adc
sub
fiadd
sbb
pop
cs
adc
mov
ins
push
inc
inc
jns
adc
arpl
(bad)
fmul
ret
push
dec
cli
fild
fsubp
mov
jge
jmp
jae
nop
add
lds
pop
push
(bad)
adc
inc
ds
outs
or
js
or
sub
inc
add
push
clc
adc
je
cwde
rcr
int3
pop
push
aam
loopne
outs
push
mov
sbb
xchg
jecxz
fisub
mov
add
mov
scas
in
add
das
add
add
mov
xchg
das
int3
xchg
aam
jbe
xchg
jmp
clc
fiadd
in
add
dec
outs
aas
or
pusha
pusha
mov
sub
loopne
and
cli
push
push
lock
or
pusha
shl
jg
jb
xor
push
cmps
cdq
enter
sbb
ficomp
mov
dec
sbb
add
push
enter
fsubr
xchg
dec
add
fucomi
cmp
jmp
bound
div
std
and
call
mov
inc
xchg
adc
fs
and
push
mov
jecxz
jmp
ins
enter
loop
clc
js
or
shr
inc
scas
daa
aas
xor
clc
fld
push
pop
(bad)
push
or
retf
neg
mov
cmp
push
pop
dec
adc
pop
push
add
push
add
push
inc
inc
sub
push
mov
lea
cmp
clc
or
int
push
inc
adc
in
mov
xchg
ret
mov
push
sub
sub
mov
ret
cmp
push
test
dec
iret
aam
sti
mov
add
sub
cmp
(bad)
aaa
call
out
inc
mov
inc
loopne
in
or
movs
nop
(bad)
popf
inc
in
push
xor
xchg
fcmovu
mov
sar
clc
test
(bad)
les
cmp
push
mov
pop
hlt
sbb
add
mov
cwde
sub
ret
fcomp
sbb
and
push
or
jb
popf
push
jo
mov
add
pop
cmp
call
dec
cmp
fnstcw
dec
call
(bad)
fwait
or
adc
in
inc
mov
mov
cmp
mov
(bad)
add
sbb
pop
pusha
daa
sbb
pusha
xor
dec
imul
pop
les
pushf
dec
push
push
xor
add
xlat
cmp
cmp
sbb
dec
inc
xchg
hlt
and
push
jg
(bad)
or
lahf
ins
jmp
xor
xchg
mov
or
mov
push
inc
sbb
lods
push
jbe
sbb
adc
cmovs
and
mov
add
jp
xchg
fsubr
nop
shr
iret
cmc
popa
push
jae
adc
mov
stos
jl
dec
jecxz
add
out
ret
in
xor
push
repnz
jno
sbb
or
shr
dec
(bad)
and
adc
add
mov
hlt
jbe
xchg
dec
add
sahf
hlt
push
lea
nop
push
push
add
fcomp
inc
into
jo
test
cmps
pop
add
fstp
in
cmp
xchg
pop
cmp
sar
lock
mov
(bad)
adc
loope
xor
stc
fisttp
xchg
add
hlt
rol
shl
movs
iret
jp
movs
mov
sub
push
push
or
call
pop
movs
retf
xchg
sbb
les
cmp
add
sbb
xchg
sbb
adc
lahf
mov
int
jg
mov
scas
mov
lods
ret
popa
cmp
nop
pop
mov
fwait
add
push
rcr
or
or
and
lock
cmps
push
sar
or
add
pushf
test
mov
mov
sbb
mov
adc
loope
sbb
and
fsincos
cdq
add
and
aaa
rcl
ret
push
sub
push
pop
and
into
in
cdq
(bad)
rcr
dec
in
inc
push
test
mov
ins
int3
out
test
sub
sbb
call
add
cmps
rcl
xor
push
add
xchg
add
mov
mov
(bad)
js
and
fdivrp
test
jbe
ins
cmps
ror
pop
hlt
jl
adc
out
push
sub
sub
or
adc
es
or
int
adc
ret
fst
dec
test
jle
add
or
sub
cwde
dec
jae
add
ret
push
jns
or
or
imul
push
jmp
sub
push
ins
and
jl
jge
or
inc
inc
aaa
fidivr
add
mov
jmp
mov
nop
icebp
cli
aam
ficom
dec
pcmpeqw
nop
pop
cmp
pop
dec
test
rcr
xchg
and
and
inc
push
call
push
mov
int
inc
cmp
jns
or
mov
or
inc
jmp
in
daa
jns
je
add
inc
or
mov
add
inc
ins
pop
adc
es
push
sub
push
or
retf
shl
push
push
add
dec
jg
test
pop
int
cmp
and
cmps
xchg
inc
jnp
push
add
jno
loop
mov
mov
pusha
jne
add
jb
cmp
nop
mul
push
inc
popa
hlt
xor
dec
out
loopne
jns
(bad)
(bad)
mov
cmp
xor
xor
sub
add
mov
les
add
aam
xor
push
push
push
in
dec
or
in
call
ss
adc
js
add
pop
or
add
jne
xchg
hlt
dec
and
loopne
sbb
mov
push
sub
ja
and
je
xchg
mov
mov
je
lods
sbb
inc
retf
pop
fcmovnbe
stc
add
sbb
inc
xor
mov
in
sbb
pop
out
sub
add
xor
pop
nop
xlat
ror
dec
aam
fld
mov
jecxz
xor
jle
add
mov
dec
pop
add
jmp
addr16
inc
adc
jb
sbb
addr16
adc
fnstcw
inc
sbb
pop
lea
jmp
jmp
xor
push
loope
xchg
jp
data16
push
push
movs
push
xor
fdivr
aaa
jne
add
and
add
mov
sar
fs
jno
or
in
test
xchg
(bad)
icebp
adc
pusha
ficom
dec
stos
and
sub
mov
dec
add
les
call
rol
push
cmp
add
aaa
xor
xchg
mov
xor
dec
loop
inc
xchg
mov
js
push
aas
adc
(bad)
loopne
xor
rcr
inc
push
ror
jmp
shl
jl
xchg
dec
repnz
adc
das
int
ss
(bad)
sbb
imul
sti
push
jae
dec
fs
mov
in
jle
les
pop
jne
enter
aas
jne
mov
mov
sbb
imul
(bad)
jmp
in
enter
inc
out
call
mov
imul
or
or
mov
xchg
mov
dec
in
dec
rcl
xchg
pop
enter
in
add
adc
test
cs
aam
test
dec
ret
jne
loope
or
xchg
push
push
add
pop
cld
sbb
push
push
ret
mov
or
nop
out
push
dec
aas
add
dec
xchg
add
sbb
out
in
add
call
or
addr16
mov
call
mov
dec
sbb
mov
dec
mov
leave
sbb
add
mov
push
sub
adc
jae
inc
sbb
sub
jo
imul
or
push
xor
xchg
or
ins
dec
push
add
mov
std
inc
das
ins
pop
mov
pop
je
mov
push
pop
adc
sbb
popa
dec
xor
or
mov
repz
adc
jecxz
adc
sbb
ret
sbb
sbb
mov
add
sub
and
and
stos
retf
add
enter
add
hlt
popf
cli
ret
pop
in
xor
push
sub
or
push
jle
cmps
fcom
pop
fwait
shl
std
aam
pop
js
or
test
in
or
aad
(bad)
(bad)
jp
movsx
or
add
rcl
ror
xor
add
xor
lock
add
mov
rol
sub
cli
add
push
fadd
xchg
enter
das
rcl
mov
and
(bad)
cdq
(bad)
mov
test
add
(bad)
and
dec
lds
enter
jmp
gs
jecxz
les
jle
cmp
es
rcl
inc
xor
inc
mov
int3
(bad)
sbb
cmp
dec
fwait
jne
arpl
or
add
push
mov
jmp
add
jp
out
mov
add
xor
and
add
scas
add
gs
pop
xor
(bad)
push
cdq
add
rcr
push
dec
xchg
xchg
rol
mov
mov
xchg
rol
mov
xchg
push
mul
or
xchg
dec
lds
adc
cmp
pop
push
pop
dec
sbb
or
aad
stos
push
movsx
add
fimul
fmul
xchg
and
inc
pusha
pop
xchg
add
enter
sbb
mov
rcr
mov
fidivr
lods
xor
popa
dec
idiv
xchg
data16
or
repnz
in
push
xchg
mov
adc
test
mov
xchg
pop
inc
and
or
add
addr16
push
shl
and
int3
pop
jbe
mov
inc
(bad)
adc
or
and
and
or
(bad)
idiv
pop
and
and
mov
push
xchg
adc
(bad)
cwde
and
jbe
or
repnz
mov
cmp
pop
and
(bad)
push
or
fisubr
ret
adc
or
jmp
es
in
bnd
jle
adc
or
imul
and
or
es
hlt
dec
jecxz
mov
sub
push
xchg
inc
jne
adc
push
addr16
and
xor
push
fmul
pop
inc
dec
test
inc
cmp
pushf
pop
fnstenv
xchg
ror
adc
mov
sub
loope
mov
rol
mov
or
sub
jge
adc
loop
scas
xchg
popa
inc
mov
add
inc
push
fisttp
repz
sub
nop
imul
sub
lods
clc
push
or
push
add
loope
jp
in
or
xchg
ja
and
push
ins
push
lea
mov
jne
(bad)
mov
popa
pusha
sbb
test
ret
mov
mov
xchg
imul
mov
(bad)
int3
xor
cmp
xor
ss
adc
xor
sbb
out
mov
adc
jl
loop
loope
icebp
repz
popa
jns
jle
jne
xor
inc
mov
lahf
xchg
xchg
sahf
push
cmp
inc
adc
sbb
inc
mov
xchg
lods
xchg
aaa
xchg
call
mov
arpl
and
or
idiv
adc
sbb
(bad)
mov
pusha
cmps
arpl
pushf
cwde
jg
nop
(bad)
dec
dec
mov
mov
or
jno
jno
push
sub
sub
or
shl
in
inc
sub
push
inc
imul
iret
mov
cmp
adc
sti
cs
ss
xchg
sbb
rol
adc
cmp
pop
cmp
jl
(bad)
xor
(bad)
outs
xchg
xchg
dec
pop
xchg
and
retf
test
pop
pop
add
femms
mov
cmc
add
jo
push
adc
mov
or
push
or
out
pusha
mov
jbe
or
(bad)
lods
shr
sbb
sbb
sbb
add
xchg
ins
push
xchg
pinsrw
mov
repz
sahf
shl
fcomi
or
mov
dec
(bad)
in
mov
or
dec
sub
mov
clc
and
dec
jnp
dec
dec
dec
dec
cmp
push
push
fst
adc
add
mov
outs
add
sub
mov
dec
fsubr
mov
sub
pop
ficom
xor
pop
push
inc
paddb
fwait
test
push
mov
ds
out
xor
sub
push
mov
sub
pop
inc
xor
imul
pop
or
repz
dec
push
cmp
(bad)
adc
test
mov
jl
(bad)
jmp
fwait
mov
push
clc
fst
mov
pop
mov
ins
sub
mov
push
pop
inc
push
jmp
dec
jmp
add
mov
lea
jge
fist
xchg
inc
(bad)
add
mov
and
sbb
push
inc
dec
ror
sbb
dec
sbb
xchg
dec
adc
add
shl
add
or
mov
enter
arpl
mov
ret
cmp
pop
and
leave
sub
xor
inc
jb
inc
or
aam
pop
or
loop
push
rol
and
icebp
test
push
cli
inc
(bad)
and
and
sbb
das
and
xchg
(bad)
adc
and
inc
and
popa
loop
test
and
xchg
sub
mov
adc
jg
cli
popf
push
xchg
sub
jp
jbe
mov
push
push
pusha
fld
cmp
sbb
pop
outs
repz
movs
push
fiadd
dec
add
push
enter
push
outs
xor
push
daa
jg
cmp
pop
mov
fsubrp
cmp
mov
test
add
ins
cmp
push
add
leave
push
jmp
mov
fwait
mov
lock
sbb
xor
xor
out
jns
jl
xor
and
loopne
mov
jmp
or
sub
push
push
jmp
in
in
mov
retf
inc
fcomp
xor
sub
and
sub
test
jmp
and
push
push
xchg
nop
inc
loope
outs
daa
or
test
loope
mov
jecxz
jmp
loop
sub
retf
add
jecxz
jp
loopne
mov
out
mov
mov
xchg
pop
imul
fistp
jo
xchg
push
cmp
(bad)
and
sub
out
sar
or
test
add
mov
les
test
in
jb
jge
out
imul
sbb
sbb
rcr
sbb
les
movs
dec
aas
mov
jmp
cld
lea
mov
sub
rcr
repz
arpl
pusha
dec
ret
call
es
and
sub
pop
dec
cmp
add
repnz
push
loope
mov
cmp
cdq
and
sbb
inc
xor
shl
fdiv
inc
jno
pop
mov
aad
push
mov
sub
mov
or
sub
popf
add
daa
sbb
cmp
in
fstp
mov
dec
dec
xchg
out
adc
cmp
or
add
jmp
daa
ret
cdq
pop
in
das
pop
pop
push
scas
fld
ret
inc
add
cmova
inc
and
jmp
adc
mov
jo
in
jl
dec
add
enter
sub
mov
and
call
cmp
inc
int3
icebp
outs
jnp
cs
shr
jle
retf
pushf
sbb
movs
pop
and
jbe
xchg
jl
mov
and
jbe
push
loopne
mov
sbb
(bad)
dec
pop
add
adc
out
inc
das
es
xchg
mov
cmp
pop
sbb
and
mov
cs
dec
mov
nop
retf
dec
test
aaa
nop
or
push
jne
test
sbb
add
or
dec
movs
sbb
sbb
jb
lahf
cmps
add
inc
push
add
mov
mov
push
addr16
add
imul
mov
xor
leave
cld
add
add
add
je
call
push
add
cmp
pop
add
aam
pop
sub
push
and
ss
or
inc
jmp
inc
and
mov
mov
mov
add
jmp
mov
iret
retf
dec
mov
mov
xor
add
test
xor
pop
fcom
inc
add
jnp
dec
idiv
push
sbb
mov
push
xchg
pop
add
mov
xchg
and
bound
loop
inc
add
leave
cmp
nop
or
iret
mov
lea
cmc
jmp
int
xchg
or
adc
xchg
test
xchg
repnz
add
pop
dec
add
pop
pop
inc
xor
das
mov
sbb
pop
fst
mov
xor
pop
jo
fcmovbe
lods
shl
pop
xor
test
jp
adc
(bad)
jge
push
jne
or
jns
shl
add
movs
inc
les
inc
sub
sub
push
fsubr
mov
test
ins
cmp
add
push
(bad)
pop
pusha
add
es
mov
stos
hlt
xchg
pop
hlt
add
adc
inc
call
adc
push
add
outs
scas
inc
add
push
sbb
dec
rol
mov
jl
cmp
push
lods
mov
pop
enter
sub
outs
sub
les
hlt
loope
xchg
or
inc
out
dec
push
outs
add
add
adc
xchg
lahf
movs
hlt
or
dec
cmp
jbe
arpl
or
pop
push
lahf
lea
je
dec
repz
adc
adc
cld
arpl
loop
rcl
dec
mov
mov
dec
or
or
ds
ret
adc
pop
adc
dec
or
sbb
jmp
and
or
adc
test
ret
xlat
sbb
sbb
cmp
movs
sbb
inc
call
pop
pmulhuw
jns
mov
in
div
adc
fs
imul
fnsave
xchg
iret
sub
mov
ret
inc
das
clc
jmp
imul
pop
fadd
test
aas
xor
mov
pop
pop
or
mov
popa
jb
pop
inc
movs
cwde
mov
xor
jmp
outs
jne
(bad)
cwde
and
fmul
aam
aas
jnp
mov
or
jbe
cwde
or
and
pop
mov
sub
leave
pushf
add
xor
cmp
add
in
(bad)
dec
test
ins
xlat
and
nop
and
jl
pop
mov
lock
sub
mov
dec
rol
stos
pop
in
or
dec
push
add
jo
fcomp
dec
pop
mov
jp
daa
pop
sbb
repz
pop
pusha
daa
outs
into
fisub
imul
(bad)
aam
pop
sbb
push
jmp
or
or
mov
add
nop
xor
mov
pop
or
adc
movnti
push
jae
ins
jne
(bad)
cmp
mov
mov
jns
or
add
push
or
push
sbb
xor
popa
adc
add
sub
outs
sub
add
jmp
add
fsubr
sub
jmp
sub
mov
xor
movs
xchg
push
pop
cmp
(bad)
mov
or
pusha
popf
test
and
das
fwait
xchg
mov
mov
dec
ins
in
stos
loop
jno
out
pop
cs
push
(bad)
jmp
cld
adc
add
les
jne
ror
adc
daa
inc
in
adc
or
cli
push
or
xchg
or
jns
ins
push
push
or
hlt
adc
daa
dec
ss
add
call
inc
pushf
and
(bad)
cli
push
pop
out
lea
xchg
dec
inc
rol
loopne
cmp
ss
fsubr
xlat
ds
jnp
imul
(bad)
nop
pop
add
dec
cwde
and
and
call
cmp
pop
fwait
pop
lods
out
out
lock
aam
xchg
(bad)
push
hlt
ja
adc
inc
popa
sbb
hlt
mov
mov
das
lock
sbb
add
clc
fst
mov
lock
cmp
jne
add
xor
mov
pop
fdivp
rcr
mov
pop
jmp
inc
xor
jbe
xchg
test
test
inc
or
and
movs
dec
dec
jb
push
or
ins
cmp
xor
neg
movs
call
xchg
je
sub
jge
add
cmp
stc
cmp
dec
call
xchg
movs
push
leave
xchg
shld
pop
adc
adc
aam
(bad)
dec
mov
int
pushf
xor
or
cmps
jne
push
push
aaa
sub
pop
add
test
and
pop
cmp
xchg
pop
jmp
sbb
fistp
hlt
xchg
or
imul
mov
and
mov
xor
sahf
add
sbb
add
dec
xchg
push
pop
daa
mov
nop
dec
(bad)
fisttp
imul
mov
dec
cmp
daa
push
add
xchg
dec
iret
add
fisub
add
mov
and
stos
fs
push
dec
push
push
jbe
cmp
nop
or
lea
test
mov
xchg
fst
cmp
push
nop
outs
(bad)
add
or
stc
jbe
xlat
or
add
adc
and
mov
or
pop
push
pushf
mov
mov
and
jo
push
lods
in
jle
cmp
xchg
sbb
add
in
daa
leave
ins
cmp
and
dec
mov
loopne
rcl
adc
das
cmp
pop
pop
or
or
jne
and
xchg
arpl
out
ret
loope
inc
push
or
mov
addr16
adc
dec
push
add
sbb
sub
sar
test
jmp
lods
(bad)
and
jmp
test
mov
cmp
push
cmp
not
mov
push
enter
adc
hlt
mov
cmp
push
pop
push
imul
aad
adc
(bad)
aam
add
xor
xchg
xor
jmp
or
dec
jecxz
movs
lds
jo
jge
(bad)
sub
mov
xchg
push
iret
mov
and
adc
lods
mov
in
xchg
(bad)
cmc
and
cld
adc
inc
jmp
(bad)
in
mov
pusha
adc
cmps
aam
lods
scas
push
adc
cli
mov
adc
inc
push
sbb
add
push
xor
mov
pop
sub
dec
je
retf
xchg
pop
daa
dec
div
call
jle
cld
xchg
pop
mov
inc
mov
loopne
jae
out
mov
sub
jmp
and
dec
mov
cmps
bound
call
ret
je
mov
adc
test
scas
inc
or
jmp
ret
adc
jo
dec
iret
xchg
outs
movs
sub
or
scas
push
addr16
pop
lea
out
jne
xor
repz
ffree
cdq
loopne
movs
push
mov
jne
and
inc
les
sub
mov
xchg
mov
stos
bound
push
aas
test
inc
das
inc
mov
pop
aam
pop
xor
and
add
xchg
cmp
sub
sub
xor
ss
imul
inc
or
repnz
push
in
dec
adc
mov
xchg
out
push
add
push
xor
cmp
retf
xlat
mov
lea
imul
pop
adc
add
sub
clc
add
jo
add
cmc
cmp
add
es
mov
pop
mov
jl
gs
adc
push
and
xchg
jo
add
aam
test
rcr
fiadd
inc
ins
xor
and
pop
shl
adc
pop
jne
push
inc
add
xor
ja
pop
add
inc
mov
(bad)
adc
xor
test
jmpw
lea
push
sbb
dec
cmp
jmp
sbb
cmp
sbb
lahf
add
jl
jl
dec
bound
jl
or
mov
test
xor
adc
push
adc
inc
inc
std
mov
xchg
fisttp
fnsave
mov
mov
mov
push
push
loopne
add
or
add
jns
jl
inc
add
inc
adc
xor
fist
jmp
adc
xor
add
ret
arpl
cwde
xchg
ss
nop
mov
inc
aas
adc
popf
adc
pop
in
in
adc
pop
or
loopne
aas
es
add
mov
shl
cmp
retf
add
jmp
dec
add
mov
mov
enter
(bad)
and
aam
or
xor
push
out
outs
stos
ret
pusha
mov
in
inc
cmp
jle
push
and
rol
xchg
jmp
out
mov
pop
and
mov
lods
adc
sbb
adc
pop
sub
and
daa
jo
mov
inc
adc
push
inc
leave
or
loop
mov
add
aaa
lock
inc
jecxz
cmp
jge
sbb
push
ret
into
jbe
call
jne
es
stc
xchg
or
nop
dec
dec
mov
pop
push
cli
push
push
xchg
inc
or
mov
daa
lock
sub
or
push
cmps
pop
push
imul
mov
and
or
inc
call
inc
outs
cmp
rol
mov
sbb
imul
sub
xchg
push
ret
push
add
pop
cwde
cld
shr
dec
addr16
mov
jmp
inc
lea
inc
add
mov
or
fld
or
es
inc
loope
scas
lds
iret
push
fs
xchg
pop
rcr
add
or
xor
adc
push
sbb
mov
sbb
or
inc
jo
(bad)
fcom
into
xor
jg
mov
sub
sahf
outs
push
xor
shl
inc
sub
test
in
push
and
je
push
sbb
xchg
cmps
stc
add
xchg
cwde
bound
rol
sub
(bad)
xor
add
test
inc
outs
pop
mov
es
je
pop
jbe
sbb
setg
add
ss
or
sbb
out
movs
push
sti
xor
sub
fmul
enter
pop
jbe
cmps
sub
push
pop
or
nop
xchg
jl
adc
cmp
das
dec
arpl
add
dec
and
test
and
aad
data16
mov
or
mov
sbb
sub
fld
add
sub
shr
add
and
rcr
dec
es
adc
lock
pop
add
cmp
mov
adc
push
movs
sub
or
pop
movs
dec
ins
aas
xchg
and
mov
inc
ss
mul
imul
data16
sahf
adc
sbb
movs
push
add
or
jg
sbb
mov
sahf
xchg
push
adc
jae
out
fldcw
jo
test
jns
push
add
mov
cmps
jne
xor
jno
dec
xchg
mov
xchg
xchg
test
hlt
adc
jo
inc
cwde
imul
stos
movs
es
and
push
stos
mov
fld
mov
das
(bad)
xchg
(bad)
ss
cs
xor
jns
inc
push
les
cmc
retf
dec
in
or
imul
test
enter
call
or
imul
adc
test
aam
aam
ins
sbb
test
enter
dec
or
sbb
sub
xchg
rcr
sub
out
jo
jbe
jl
xchg
jne
inc
sbb
je
push
shl
adc
adc
sti
stc
inc
sub
inc
add
mov
sbb
(bad)
xor
mov
or
call
sub
sub
cmp
leave
outs
cwde
and
pop
es
push
pop
and
leave
inc
or
sub
dec
std
jmp
push
push
or
inc
ja
aad
(bad)
movs
inc
pop
push
ins
push
sbb
inc
mov
push
inc
in
iret
push
adc
rol
xor
xlat
adc
inc
arpl
fsubr
or
pop
pop
cmp
xor
test
cmp
(bad)
xlat
and
mov
dec
sub
addr16
add
dec
xor
push
psrld
add
xchg
lock
mov
icebp
daa
push
ret
inc
add
push
mov
mov
dec
pop
xlat
sbb
addr16
test
ss
push
je
rcl
mov
arpl
push
jne
inc
inc
add
inc
mov
cmp
adc
shl
lods
je
je
pop
stos
add
and
repz
dec
movs
adc
pop
add
and
out
test
setne
mov
push
loop
push
push
push
movs
inc
int3
adc
aam
pop
xlat
cmps
and
stos
inc
pop
inc
pop
cli
mov
sbb
push
out
sti
push
ror
add
mov
or
ret
dec
xchg
sbb
sbb
mov
(bad)
and
add
xchg
xchg
sbb
in
sub
and
jmp
pop
and
pusha
int
gs
pop
mov
mov
in
dec
jmp
mov
inc
jno
and
inc
xchg
mov
std
loope
in
sub
jo
call
or
mov
push
push
cmp
mov
std
xchg
mov
sub
jnp
pop
repnz
and
and
das
movs
xchg
xor
(bad)
nop
mov
inc
imul
or
jg
loopne
dec
fs
pop
test
or
daa
dec
and
jmp
mov
movs
push
out
fiadd
mov
arpl
call
test
add
inc
lock
jae
and
inc
jmp
sbb
mov
loope
gs
adc
fadd
push
ins
jge
loope
pop
cmp
xchg
jl
test
and
sub
scas
add
sbb
and
mov
pop
pop
icebp
dec
dec
inc
xchg
ja
push
mov
aam
or
add
push
mov
xchg
jo
bound
mov
ins
and
sbb
cmps
mov
dec
or
jl
xchg
je
leave
imul
cmp
sub
push
xor
test
mov
mov
ins
xor
cmp
xor
(bad)
ss
rol
dec
xchg
pminsw
add
ffree
and
clc
ins
inc
fadd
std
inc
in
pop
add
inc
push
pop
sbb
adc
mov
or
dec
push
pop
or
cmp
dec
ja
jne
push
xchg
(bad)
jns
ret
icebp
out
lock
sbb
dec
mov
mov
add
xor
dec
sbb
add
push
push
shl
or
cmp
(bad)
adc
pop
adc
dec
or
popf
lods
push
test
mov
rcr
adc
sti
xchg
push
mov
jne
xor
in
fwait
adc
push
ins
push
add
enter
(bad)
cmp
adc
ret
xor
ja
push
adc
mov
adc
shr
dec
movs
cmp
add
adc
adc
rol
or
ret
addr16
cmps
stos
rol
adc
or
int
jnp
xor
adc
mov
out
mov
clc
push
inc
popf
fdivr
mov
cld
sbb
sbb
add
pusha
xchg
ins
mov
jp
fdiv
mov
mov
inc
adc
(bad)
sub
mov
adc
pop
sbb
mov
dec
sbb
imul
cmp
sub
out
sbb
sar
cmp
add
xor
xor
bound
jg
outs
cmp
push
sbb
or
push
mov
fwait
sbb
add
adc
or
aam
cmp
out
pop
adc
sbb
call
mov
mov
and
or
ret
mov
add
(bad)
fild
or
jno
aad
icebp
movs
xchg
aas
loope
mov
jne
pop
add
test
jne
push
stos
shl
add
push
push
stc
jge
cmp
jg
add
aam
adc
les
in
clc
dec
push
dec
add
xor
ret
aam
icebp
sub
repnz
push
or
or
and
inc
cs
or
nop
jg
cmc
jge
jae
inc
cmpxchg8b
movs
mov
add
inc
add
push
pop
test
mov
arpl
jo
and
xadd
pop
and
or
sub
(bad)
mov
mov
icebp
push
push
push
add
mov
sahf
cmp
jae
ret
dec
add
cld
adc
sbb
loop
dec
xchg
clc
push
mov
ins
mov
add
sub
inc
add
std
and
jno
icebp
pop
or
pop
and
and
mov
dec
and
pop
data16
pusha
fiadd
or
pop
push
dec
es
or
out
xchg
inc
jmp
xor
fidiv
les
push
push
pushf
jnp
outs
les
leave
pop
adc
add
(bad)
jmp
xchg
jl
cmps
adc
iret
(bad)
or
pop
jge
cmps
loope
push
sub
dec
mov
or
ror
sub
or
lock
push
loopne
imul
fmul
mov
add
add
mov
outs
or
call
sub
out
push
add
xor
jnp
push
or
adc
cmp
sub
sub
dec
mov
sbb
inc
xchg
test
add
and
daa
test
idiv
movs
enter
sbb
sub
and
cmp
jne
imul
xchg
ja
aam
fimul
and
push
or
adc
or
jecxz
or
cli
pop
cdq
or
lds
inc
(bad)
sub
jno
test
mov
retf
test
pop
mov
sbb
ror
jge
lds
in
sbb
pop
sar
(bad)
nop
mov
add
shr
fdiv
mov
sub
mov
outs
stos
mov
sar
mov
les
dec
nop
xchg
and
mov
xchg
dec
jnp
push
jp
inc
and
xor
mov
sti
imul
add
rcl
pop
pushf
lods
xchg
arpl
xchg
push
clc
iret
add
jmp
(bad)
jnp
and
adc
int
cmp
ins
add
or
ret
mov
or
pop
inc
adc
jle
popf
ret
push
xchg
add
mov
retf
pop
ins
nop
ins
and
add
sar
xor
inc
adc
lods
pop
jg
cmp
xor
pop
cmp
and
cdq
rcr
pop
mov
or
xchg
adc
(bad)
loopne
sbb
(bad)
mov
sbb
rol
ret
frstor
movs
div
addr16
je
mov
adc
adc
adc
in
jo
sbb
xor
adc
call
inc
pushf
call
and
lods
cmp
hlt
jle
jb
sar
enter
pop
or
sbb
adc
aaa
dec
push
inc
out
xor
sub
mov
and
fbstp
retf
push
push
push
push
add
mov
sub
and
pop
je
dec
je
push
xor
push
outs
sub
fisubr
jnp
arpl
jmp
add
push
xchg
sbb
sar
xchg
or
cs
dec
cmps
rol
rcr
loope
inc
dec
imul
add
fst
xchg
jmp
push
sub
adc
jecxz
ret
ret
inc
js
aam
sbb
adc
push
lock
mov
pop
ficomp
and
pop
dec
or
jb
xor
bound
and
add
int
sbb
(bad)
test
rol
inc
push
sbb
push
add
sahf
retf
push
movs
test
jge
cmp
scas
in
rcl
adc
pop
scas
push
xchg
or
in
(bad)
mov
test
arpl
or
or
dec
int3
sbb
out
or
or
cmps
mov
mov
in
icebp
mov
ret
add
les
jnp
ret
sbb
xchg
test
mov
cmp
sbb
and
icebp
inc
mov
adc
mov
stos
push
push
sub
cmps
ret
fisttp
xor
xor
xchg
xor
inc
xlat
fsub
adc
dec
dec
xchg
into
dec
dec
les
iret
rcr
mov
mov
inc
mov
pop
inc
mov
add
and
jmp
call
pop
push
fnstsw
ror
stos
fxch
add
adc
out
mov
xor
xor
add
or
(bad)
sbb
jnp
out
ficom
xor
xchg
clc
mov
loope
jae
xor
stos
shr
sub
repnz
xor
sbb
cld
retf
inc
push
inc
or
lahf
mov
add
arpl
paddd
and
add
test
add
push
sti
or
std
ja
sub
adc
adc
lock
cmps
test
dec
inc
cmps
adc
rcl
mov
and
xor
or
sti
or
jmp
push
pop
or
scas
pop
jnp
pop
cmp
shl
shl
ins
dec
lock
and
pusha
add
shr
lock
sub
sub
in
and
sbb
mov
adc
sbb
fs
cmps
lds
and
mov
dec
xor
or
adc
mov
push
in
in
je
and
out
aaa
test
push
xlat
imul
fsub
arpl
adc
jmp
and
xor
add
ret
jno
setle
mov
push
int
sub
js
push
jne
pop
sbb
mov
(bad)
lods
mov
es
mov
xor
das
adc
push
mov
mov
push
scas
outs
push
mov
xchg
add
cmp
jno
cmp
mov
mov
sahf
nop
pop
dec
push
adc
dec
in
adc
cmp
outs
cmp
out
sub
add
out
repnz
mov
add
jmp
sub
mov
retf
xchg
ds
mov
push
pop
and
fdiv
lods
cmp
into
imul
mov
or
jmp
daa
sub
movs
mov
in
dec
or
push
adc
xchg
in
retf
inc
ror
enter
dec
or
adc
xor
leave
or
or
pop
(bad)
pop
inc
or
in
movs
aad
pop
inc
aas
mov
inc
dec
loopne
mov
sbb
imul
and
pusha
push
es
pop
push
ror
daa
addr16
shl
inc
inc
nop
inc
or
or
push
adc
pop
call
retf
sub
jge
into
dec
adc
nop
mov
add
mov
sbb
inc
xchg
mov
inc
pop
add
in
jp
inc
dec
dec
mov
mov
push
test
xlat
mov
push
pop
and
leave
sub
or
mov
push
inc
sbb
rol
and
ret
inc
test
lods
sub
xchg
jbe
clc
cmp
jbe
pop
adc
sub
lahf
or
sbb
jno
mov
fcom
js
push
and
(bad)
inc
enter
cmp
push
jo
or
jbe
ins
sbb
mov
inc
cmps
xchg
(bad)
sbb
jns
test
aad
loope
push
pop
jne
adc
pop
shl
call
dec
inc
inc
push
sar
sbb
adc
or
dec
push
loopne
pusha
fld
or
add
ja
pop
sbb
(bad)
pop
int3
inc
push
inc
fwait
pop
sbb
ret
into
shl
bound
cmps
xchg
sub
inc
pop
push
fcom
dec
mov
(bad)
jge
push
xor
mov
scas
test
mov
pusha
fucom
inc
add
clc
dec
shr
(bad)
mov
adc
cs
push
dec
clc
cmp
dec
pop
push
inc
sub
ret
xor
push
dec
not
pop
loop
test
mov
out
popa
dec
inc
mov
xor
inc
mov
inc
add
rsqrtps
adc
jle
add
pop
sbb
sub
mov
jge
add
add
cmp
pop
ret
outs
dec
movs
stos
xchg
pop
int3
lock
xor
das
mov
xchg
xchg
xchg
daa
and
xor
mov
cmp
add
scas
adc
rcl
sbb
xor
push
outs
pusha
pop
pop
adc
xchg
shl
and
aas
or
pop
jnp
mov
dec
mov
cmp
adc
adc
ja
lea
cwde
adc
ja
dec
mov
out
inc
lahf
sbb
mov
ret
loopne
int3
and
mov
mov
and
dec
ret
inc
in
mov
or
jo
bound
or
je
cdq
jo
push
aam
nop
fadd
sub
dec
xchg
test
xchg
shl
adc
cmp
xor
inc
xchg
add
mov
xchg
xchg
push
scas
loopne
imul
add
addr16
(bad)
inc
xor
xor
adc
lock
sub
loopne
cmp
inc
cmp
sub
mov
pop
daa
or
sub
or
adc
add
xchg
inc
pop
cmp
lock
retf
mov
mov
cmps
icebp
shl
dec
mov
(bad)
dec
inc
mov
add
pop
pop
stos
outs
in
add
adc
or
imul
xor
fstp
sub
cmp
dec
fadd
ret
pop
or
xor
adc
push
push
mov
jecxz
xchg
jne
out
out
adc
or
jb
cmp
xor
js
cmps
pop
add
adc
mov
pop
and
and
outs
and
or
(bad)
dec
or
sbb
and
sub
add
cdq
sbb
jge
jmp
imul
xor
xchg
pop
lds
daa
ret
daa
addr16
push
dec
addr16
and
pop
dec
lods
jne
dec
mov
out
push
popf
dec
or
pop
fisub
jp
daa
adc
push
rol
jmp
inc
inc
jb
sbb
mov
cmp
sub
cwde
xchg
jne
adc
cs
jne
cmp
inc
loope
jo
xlat
xor
xchg
fsubr
sbb
push
rcl
outs
ficomp
cmp
cdq
dec
in
inc
cmp
push
mov
jmp
cmp
into
mov
ret
sub
mov
and
inc
mov
xchg
test
dec
sbb
cmp
repz
cwde
and
cmp
and
nop
pop
add
cmp
not
jg
add
dec
call
add
or
and
popf
leave
sub
adc
aad
jnp
inc
pop
leave
je
adc
loope
mov
pop
push
pusha
push
ss
pop
push
inc
dec
adc
add
rcr
leave
and
sub
cwde
sbb
rol
lods
std
ret
mov
mov
lea
iret
sbb
addr16
adc
push
shr
or
xchg
clc
inc
sub
dec
inc
adc
adc
popa
hlt
fwait
inc
or
test
movs
dec
dec
adc
lods
inc
pop
or
clc
or
mov
and
sub
pop
jo
mov
aaa
or
sbb
add
pop
xor
dec
repz
pop
or
gs
push
cmp
mov
dec
cmp
aaa
test
push
xchg
dec
je
jge
xor
aam
push
pop
imul
inc
pop
push
cmp
pushf
sbb
sub
sbb
xrelease
lods
dec
add
add
add
shl
lds
mov
arpl
xor
je
movs
or
mov
pop
jmp
lea
jo
or
adc
in
and
xor
jb
cmp
adc
or
push
push
mov
aas
dec
sbb
sub
jle
ins
pushf
sub
and
inc
sbb
cmp
fs
lock
and
inc
push
imul
xchg
xchg
dec
and
xchg
pop
cmp
(bad)
imul
pop
sbb
or
xor
out
sbb
fistp
aaa
inc
mov
adc
xchg
jbe
sti
dec
cld
push
adc
cmp
cmp
ret
push
out
dec
popa
mov
push
fsub
sub
mov
cs
add
cmp
adc
or
je
adc
xor
aam
test
xor
cmp
je
fadd
adc
sar
add
push
pop
dec
cwde
add
sub
or
arpl
dec
xchg
test
int
xor
outs
(bad)
outs
push
or
retf
rcr
(bad)
jno
push
in
xchg
xchg
dec
test
mov
sub
clc
inc
or
pop
cdq
ret
xchg
ret
xchg
std
add
cli
mov
xchg
test
push
sbb
xor
aam
rcr
iret
(bad)
into
and
mov
jge
psrad
jb
std
faddp
mov
std
and
and
mov
or
or
jmp
dec
adc
pop
cmps
add
push
pop
or
test
pop
inc
cmps
pusha
rol
mov
rol
and
jl
cmp
lods
push
in
mov
or
xor
and
inc
push
ror
sub
adc
dec
push
sbb
mov
cwde
push
in
inc
add
sahf
and
push
cmp
lock
sub
mov
dec
jmp
imul
xor
inc
daa
clc
inc
es
jb
inc
sar
or
es
cmp
xor
mov
or
aaa
pop
sub
xchg
cs
and
mov
mov
daa
jo
inc
popa
pop
rcpps
sbb
inc
jno
inc
call
mov
xchg
in
je
adc
add
jno
jp
push
rol
jecxz
push
fadd
push
cmps
cmp
outs
lea
ret
xor
jne
push
in
adc
sbb
pop
pop
out
mov
loop
push
adc
dec
or
cmp
dec
pushf
mov
call
push
(bad)
and
push
jnp
cmps
xchg
jmp
push
or
and
cmp
xor
inc
dec
pop
add
mov
pop
les
daa
daa
idiv
mov
sub
xor
je
cmp
jge
jmp
jge
(bad)
nop
pop
inc
adc
jle
or
adc
cmc
add
lar
sbb
rol
add
adc
outs
and
push
cmp
aaa
dec
and
aad
push
and
xchg
shr
(bad)
pop
pop
dec
aad
cmp
js
add
add
jo
push
xchg
adc
cmp
push
inc
jne
sub
mov
pop
and
mov
add
sub
(bad)
mov
dec
bound
lock
call
mov
(bad)
adc
adc
and
dec
adc
fcom
push
das
lahf
adc
add
inc
dec
adc
aad
jo
push
cmp
inc
sbb
mov
dec
repz
loope
mov
add
push
jnp
or
rep
sbb
jmp
rol
pushf
mov
add
jp
add
cs
dec
movs
in
xor
xor
sbb
je
or
inc
push
nop
sub
jg
mov
ficomp
jmp
add
adc
arpl
(bad)
les
jmp
mov
add
out
outs
add
dec
icebp
rcr
ins
or
add
pop
pop
or
dec
jo
mov
popf
das
imul
xor
jle
inc
dec
push
out
dec
movs
sbb
jmp
add
dec
push
iret
adc
mov
push
nop
inc
rol
push
ins
test
stos
loope
xor
out
mov
add
loope
data16
out
das
push
fild
(bad)
dec
push
sub
dec
ficom
dec
es
repz
push
lds
push
les
xor
adc
in
inc
sub
xchg
sub
mov
movs
mov
call
adc
shl
cmps
jl
dec
adc
mov
adc
inc
xlat
or
and
pop
push
pop
je
ss
dec
mov
mov
xchg
les
dec
cmp
shl
and
pop
mov
add
jae
add
push
scas
mov
inc
sub
push
mov
pop
aad
push
mov
adc
and
push
and
and
out
jb
sbb
inc
pop
jnp
mov
leave
jo
popa
lea
pop
inc
cwde
dec
pop
hlt
dec
add
ret
add
xor
cwde
sti
sbb
sub
mov
js
rcl
jo
test
dec
adc
xor
fst
xor
or
lock
loopne
test
xor
jne
fs
jl
pusha
and
sub
or
dec
sbb
int3
xchg
xchg
and
popf
stos
(bad)
lahf
dec
xor
lahf
cmp
or
push
mov
jp
nop
inc
dec
dec
test
inc
adc
cmp
inc
xor
and
test
inc
xchg
ss
jo
stc
call
ins
pop
mov
sbb
dec
test
lods
sbb
lock
daa
mov
lea
mov
push
dec
xlat
movs
jmp
sub
and
push
inc
jecxz
adc
addr16
cli
sub
stos
xchg
lds
pop
lods
add
cmp
popa
sub
jne
add
or
push
mov
fdivr
or
fcom
inc
mov
adc
pusha
sub
sub
jmp
sbb
cmp
xchg
movs
xor
outs
pop
dec
inc
xor
mov
and
add
dec
push
cmp
sub
push
mov
xor
dec
adc
movs
adc
lock
xor
xchg
push
pop
ins
add
add
sbb
les
inc
aam
daa
cmps
lock
sbb
pop
add
sbb
add
push
pop
push
jns
sbb
xlat
movs
arpl
addr16
adc
and
les
add
cmp
mov
inc
loopne
jb
push
mov
frstor
enter
push
xchg
push
daa
add
nop
cs
push
adc
jae
add
sub
xor
mov
pop
stc
adc
rcr
imul
or
ja
or
inc
xchg
arpl
push
cmp
xchg
push
rol
aaa
stc
lahf
mov
sub
mov
lea
mov
mov
and
push
mov
mov
cwde
inc
dec
jge
push
dec
lahf
inc
cs
xor
enter
cdq
mov
or
mul
cmp
add
adc
dec
mov
push
mov
call
jg
dec
fsubrp
cmp
jle
aas
(bad)
in
int
mov
ss
or
and
xchg
sub
push
fimul
gs
(bad)
cmps
inc
lods
test
adc
push
cmps
arpl
pmaddwd
jg
jne
sbb
out
(bad)
(bad)
and
mov
adc
repz
xchg
add
add
nop
cdq
jns
dec
adc
ins
mov
jle
add
imul
sbb
test
cmc
cmc
repnz
movs
shr
xchg
aad
(bad)
imul
icebp
scas
imul
xor
adc
sahf
ds
arpl
fadd
rdmsr
adc
adc
cmp
pop
data16
and
adc
sbb
loopne
addr16
push
dec
in
je
pop
cmp
cmc
cdq
in
ret
enter
lock
lock
push
mov
int
push
(bad)
(bad)
mov
cmp
mov
mov
xlat
add
push
pop
dec
xlat
imul
lea
mov
dec
fwait
jge
daa
jo
pusha
rcl
loopne
wbinvd
or
inc
ds
adc
mov
xchg
imul
sbb
mov
push
ror
(bad)
test
jmp
fld
test
in
cmps
(bad)
(bad)
mov
clc
inc
add
nop
loope
push
or
cmp
dec
push
mov
rcl
fsub
sti
and
(bad)
sub
dec
mov
adc
adc
xlat
mov
inc
dec
sub
push
ins
sub
ss
js
jg
inc
mov
lock
xor
mov
pop
mov
sub
sub
cmp
mov
mov
adc
inc
push
outs
cmp
inc
pop
pop
mov
or
jb
out
dec
jne
jnp
xor
inc
(bad)
sti
imul
mov
loop
mov
lea
mov
mov
sbb
loopne
xchg
mov
pop
or
pop
or
mov
std
dec
mov
or
cmp
push
ucomiss
loopne
push
nop
stos
push
ds
xor
fiadd
mov
and
or
pop
(bad)
aam
mov
jp
stos
inc
(bad)
fldenv
add
pop
pushf
imul
or
sqrtps
mov
jbe
inc
arpl
sbb
rol
xor
xlat
xor
das
or
les
jb
mov
pop
int3
and
fld
in
ror
inc
fwait
and
inc
inc
inc
pop
xchg
jo
cmps
push
pop
mov
scas
dec
and
outs
daa
dec
cmp
cmp
repz
mov
dec
add
cmp
fdiv
xor
js
pop
sub
jmp
push
movs
cdq
jbe
adc
mov
sbb
dec
ror
imul
xor
dec
retf
pop
fcom
cmp
hlt
data16
pop
imul
adc
inc
jle
sti
ficom
shl
add
or
add
repnz
cmp
mov
dec
add
adc
inc
mov
popa
rcr
inc
jmp
fs
push
xchg
push
sti
lods
mov
lods
arpl
sbb
push
and
fwait
push
or
push
test
pop
xor
cmp
aas
add
lock
in
cli
fwait
cmps
jo
imul
shr
jmp
rcr
pop
clc
lock
retf
xchg
in
or
call
push
xor
ror
fcom
sbb
xchg
enter
dec
push
cmp
adc
(bad)
cmps
adc
leave
das
add
fdiv
jno
xor
icebp
push
cld
ret
or
add
jge
lods
or
mov
dec
adc
test
or
jmp
cmp
fdiv
dec
imul
loope
jle
outs
xor
fsub
or
inc
mov
daa
add
sub
mov
js
sbb
add
xor
dec
rol
or
mov
dec
mov
test
or
mov
dec
movs
push
or
cld
adc
jmp
mov
mov
sar
sub
mov
loopne
add
mov
cs
jle
out
or
out
iret
push
and
jle
adc
pop
push
sbb
ficomp
int3
add
sub
mov
imul
mov
mov
push
sub
or
icebp
bound
(bad)
dec
adc
inc
stos
loopne
xor
xor
loopne
push
cwde
mov
jle
sbb
rcl
xor
cmp
dec
sti
mov
xchg
cmp
clc
leave
movs
(bad)
sbb
imul
sbb
cmp
repz
add
add
fadd
movs
mov
lahf
out
in
sub
rcl
imul
loopne
outs
out
mov
pop
aas
mov
fisttp
jle
jl
mov
ror
test
lahf
pop
inc
push
dec
xchg
jge
add
add
pop
addr16
pop
sar
sbb
dec
pop
xchg
ins
sub
pop
bound
sbb
mov
add
inc
inc
add
pop
scas
adc
xor
loop
imul
lods
and
fwait
mov
aas
or
aam
mov
aas
dec
dec
or
das
dec
cmps
out
push
or
mov
jge
jmp
jmp
mov
and
jle
retf
push
push
cmp
xlat
fisttp
add
mov
push
loop
ret
pop
or
out
and
ins
inc
in
fs
rol
jp
push
cmp
adc
sahf
adc
jle
cmp
jne
stos
es
pop
test
adc
int
dec
call
sub
push
test
lds
sub
add
pop
cmp
mov
pusha
xor
adc
or
imul
add
sbb
dec
or
mov
call
xchg
cmp
sub
adc
xor
sub
sub
imul
cmp
call
add
add
sub
in
ss
add
adc
or
mov
sbb
or
int3
shl
add
sub
adc
ror
aaa
adc
ins
inc
xchg
push
sbb
xchg
jle
cld
pop
in
cmp
into
imul
aam
xchg
aad
mov
out
inc
mov
dec
scas
scas
push
cli
aas
sbb
lea
mov
lds
popa
outs
rcl
mov
pop
cmp
aam
or
mov
out
add
lods
add
cld
popf
or
adc
dec
sub
or
xchg
data16
add
pop
adc
ret
adc
add
mov
cvtps2pi
test
(bad)
into
sbb
fadd
sbb
sub
int
fnstsw
xchg
sti
pop
xor
xchg
pop
or
and
or
outs
jb
cmp
cmp
popa
scas
add
loopne
arpl
add
scas
push
or
test
adc
mov
out
push
push
adc
in
enter
fdiv
xchg
cwde
push
cmp
movs
movs
(bad)
(bad)
adc
arpl
or
adc
lea
in
dec
in
dec
dec
xor
and
mov
enter
cmp
fwait
push
jo
push
or
shl
js
push
(bad)
mov
mov
cdq
adc
in
or
pop
and
dec
adc
in
add
rcr
inc
and
inc
test
pop
ds
dec
js
or
adc
movs
sub
adc
ins
pop
inc
adc
in
pop
clc
int3
xchg
sbb
push
fs
mov
inc
shr
fucomip
cmp
sub
(bad)
cmp
cli
std
sti
sub
je
or
ret
in
adc
and
or
jbe
add
fwait
and
and
add
addr16
or
jno
clc
arpl
sub
sahf
ins
sbb
pop
data16
mov
or
adc
and
inc
jb
scas
cwde
ss
scas
call
jmp
sbb
cli
test
push
mov
jns
and
mov
mov
xlat
je
das
xor
inc
or
gs
and
popf
cmp
js
pop
dec
jge
fsubr
adc
xor
stc
fwait
div
jne
add
movntq
add
nop
jle
test
mov
add
jle
add
xchg
into
rcl
add
adc
mov
pusha
fistp
push
adc
mov
inc
stos
stos
xlat
shl
adc
pop
mov
cmps
ja
add
dec
(bad)
mov
pushf
pop
cmp
call
dec
adc
fcmovnb
std
inc
lea
jo
push
retf
cmc
mov
fs
add
adc
mov
mov
mov
add
or
je
or
push
shr
push
out
inc
mov
add
xchg
sub
(bad)
mov
stos
arpl
cmp
je
or
jge
mov
imul
lods
inc
add
dec
adc
sti
add
loop
dec
ret
add
loopne
fsub
ret
jns
add
adc
inc
and
add
or
hlt
rcr
dec
jne
jmp
sub
icebp
and
xor
cmp
shl
push
lock
cs
jmp
push
test
fdiv
or
and
out
sub
sbb
mov
pop
test
fwait
lds
cmp
adc
les
lea
int3
push
and
and
mov
inc
hlt
or
je
(bad)
fistp
jmp
push
inc
cmp
hlt
cmp
jne
nop
test
(bad)
add
(bad)
push
(bad)
jg
dec
inc
test
leave
push
ds
push
mov
add
inc
push
push
adc
ret
leave
fmul
push
mov
enter
dec
add
jmp
push
sbb
nop
dec
aas
popf
loopne
in
sbb
dec
fcomp
(bad)
imul
ins
sub
mov
loop
arpl
xchg
dec
add
fwait
popa
enter
adc
adc
or
adc
push
ins
aaa
rol
push
fimul
popa
mov
int3
mov
sbb
mov
mov
mov
cld
pop
inc
push
pusha
in
out
in
push
jmp
call
out
push
inc
and
cmp
sbb
inc
in
mov
ret
sub
adc
inc
sbb
dec
out
out
cs
fsubp
xlat
add
inc
jne
jb
movs
cmp
mov
fdiv
jne
rcl
or
dec
cmp
jo
in
dec
arpl
and
in
cdq
adc
mov
and
xchg
inc
inc
push
push
or
adc
nop
add
add
add
sbb
fisub
retf
daa
rol
xchg
add
mov
inc
adc
and
add
xor
mov
sbb
jae
and
push
or
das
or
inc
sub
pop
ss
cmp
jae
cmp
mov
dec
xor
jbe
mov
or
sbb
inc
cmp
or
pop
and
call
push
dec
ret
pop
je
push
mov
sbb
sbb
push
test
inc
or
sbb
add
test
mov
dec
int
cmc
(bad)
sti
emms
or
mov
jno
mov
not
and
and
pop
js
arpl
fwait
retf
and
xchg
add
sub
test
or
mov
sbb
icebp
sahf
mul
sbb
ret
ds
xchg
sahf
xchg
sbb
dec
cmp
dec
mov
fwait
in
cmp
jno
mov
xchg
jno
xor
xor
jge
lahf
sbb
push
push
or
push
xor
and
pop
and
cmp
xlat
addr16
fnstenv
xor
dec
sub
xor
sbb
cmps
cmps
add
push
test
ror
call
outs
sbb
sbb
push
cs
adc
add
fadd
sbb
cmps
ins
and
push
push
jo
mov
mov
dec
inc
jnp
inc
push
dec
mov
add
add
xchg
int
inc
push
adc
jge
xor
and
mov
jecxz
jge
hlt
and
ret
pop
push
das
jge
or
pop
pop
jae
test
stos
and
sbb
inc
lock
jae
dec
xor
xor
jp
(bad)
cmp
dec
stc
pop
(bad)
adc
and
inc
add
push
push
dec
pop
jo
outs
jmp
scas
out
sub
push
fiadd
jle
scas
lods
add
add
pop
pushf
cmp
fcomp
and
popf
(bad)
jmp
pusha
inc
jg
pop
push
push
scas
sub
mov
or
xor
sbb
mov
jle
xchg
lahf
pop
or
cmp
push
pop
pop
jg
add
cmp
movs
add
adc
push
or
aaa
xchg
fild
xor
push
ins
jl
cmp
std
lea
pop
add
lods
inc
or
sub
call
dec
clc
cmp
cmps
jg
out
jmp
jg
add
nop
clc
(bad)
cmp
inc
loop
call
or
fadd
pop
xchg
add
lock
dec
call
mov
jp
lea
inc
leave
add
cmp
adc
mov
mov
mov
and
adc
enter
adc
add
scas
add
add
or
pop
not
daa
mov
mov
pop
fidiv
push
mov
in
or
cmc
jle
jb
ret
fist
rcr
adc
movs
adc
dec
mov
sbb
(bad)
dec
jno
lock
push
add
mov
jmp
xor
imul
imul
fsub
pusha
sub
push
fadd
cmp
sbb
sbb
mov
iret
call
sbb
adc
jmp
or
ret
push
add
inc
add
or
jg
or
rcl
shl
add
push
add
sub
cmp
sub
add
jb
adc
jge
jbe
push
push
or
mov
sub
std
es
mov
xchg
cmps
or
jg
ja
cmp
jo
mov
adc
xor
add
dec
gs
repnz
daa
and
pop
repnz
mov
popf
or
dec
jecxz
sbb
test
mov
pop
or
sub
xor
clc
mov
and
add
jnp
mov
sar
jb
or
dec
aam
and
xor
clc
jge
or
scas
ret
sbb
dec
clc
cmp
daa
cmp
push
loopne
out
mov
jb
loopne
mov
add
shl
int
in
fs
pop
fwait
xor
lods
iret
loope
cmp
adc
or
and
dec
movsx
or
pushf
hlt
sub
scas
cmp
test
in
mov
push
jns
inc
add
pop
xchg
sub
push
aad
push
sbb
inc
addr16
pop
lahf
pop
dec
popa
and
das
sbb
sbb
push
jle
add
nop
and
test
in
add
dec
or
xchg
dec
test
mov
xchg
push
inc
jmp
add
retf
mov
movs
add
retf
aas
test
shr
iret
sub
call
clc
pop
test
aas
daa
pop
mov
or
push
push
fidivr
jmp
lea
inc
or
push
or
cmps
inc
enter
test
rol
rol
dec
push
sbb
scas
cdq
sbb
adc
jnp
sub
lods
pop
sbb
xor
sbb
mov
xchg
mov
out
mov
inc
mov
xchg
push
mov
xchg
adc
addr16
mov
ret
rol
(bad)
cmps
mov
cdq
and
push
lea
popf
out
icebp
pop
push
movs
mov
xor
jmp
fs
ret
and
in
xchg
ret
jne
mov
pop
adc
inc
jecxz
dec
dec
iret
ja
pop
xchg
xor
das
mov
enter
add
dec
xor
clc
test
adc
or
jp
add
push
js
xchg
jp
pop
or
shr
arpl
mov
imul
call
bound
dec
stos
push
sbb
mov
call
addps
repz
(bad)
xor
add
lea
clc
push
movs
jp
fcomp
js
mul
inc
push
popa
mov
mov
add
js
adc
sbb
mov
in
and
add
cmp
ja
mov
jl
fimul
aaa
hlt
in
movs
pop
mov
stos
inc
jl
mov
pop
lds
imul
mov
fst
cmp
push
ins
pusha
adc
adc
xchg
push
out
mov
jge
jae
lds
add
xchg
add
iret
pop
call
das
add
fistp
je
cdq
(bad)
shl
cdq
mov
inc
cs
(bad)
fwait
xchg
mov
pop
adc
mov
push
(bad)
outs
lock
pop
add
sbb
mov
push
repnz
push
sub
xor
arpl
cmp
jecxz
jnp
js
mov
and
fstp
mov
cmp
jo
xchg
pop
jnp
sbb
leave
clc
call
jbe
dec
jnp
or
add
sub
or
jnp
outs
mov
mov
sbb
mov
sbb
inc
fs
adc
and
sbb
or
pop
or
or
push
pop
rol
inc
inc
int
rcr
jo
ficomp
dec
inc
nop
repnz
pop
ins
mov
and
fimul
sub
inc
xchg
jbe
mov
sbb
test
push
xchg
(bad)
mov
dec
adc
fs
mov
mov
ret
push
add
mov
leave
pop
mov
and
cs
pop
les
ins
ss
out
or
loop
cld
cmp
mov
les
push
jnp
inc
jmp
lahf
sbb
fisttp
imul
mov
and
xor
(bad)
adc
push
jne
push
in
push
scas
jnp
adc
add
(bad)
in
(bad)
lea
jle
pop
fadd
je
test
adc
inc
jge
push
add
jne
mov
mov
or
repz
cmp
imul
sbb
cmc
add
push
adc
sub
int
loop
mov
dec
mov
or
push
mov
call
jmp
adc
jmp
stos
push
cmp
add
cmp
xor
popa
lds
test
les
ret
rcr
outs
mov
sbb
lds
sub
jmp
inc
(bad)
push
fwait
mov
pop
ret
les
push
call
mov
sahf
sbb
inc
inc
std
aaa
jns
mov
daa
sub
mov
cli
ins
cmp
add
daa
or
ins
sbb
leave
mov
dec
sub
movs
daa
es
push
sub
sbb
cmps
fwait
inc
sub
ja
loop
push
pop
sbb
movs
mov
xor
dec
mov
cmp
bound
inc
lods
cmp
fst
sub
jl
and
repz
add
inc
add
dec
loope
xor
xchg
test
xor
outs
xor
dec
fist
push
pop
fld
cmp
fld
leave
dec
adc
mov
popa
adc
mov
test
pop
xor
jle
push
test
dec
loop
inc
pushf
push
adc
bound
js
fdivr
sub
sbb
jg
add
or
sbb
pop
mov
data16
or
adc
retf
pop
push
jne
push
cmc
mov
lods
push
retf
mov
add
dec
adc
nop
outs
(bad)
out
push
push
div
lea
fild
fs
fs
call
loope
dec
push
mov
xchg
mov
mov
sbb
mov
pop
mov
adc
add
lds
sti
mov
jbe
(bad)
fnstenv
or
jne
loopne
and
mov
jle
mov
add
cmp
and
repnz
inc
test
jle
hlt
or
add
adc
retf
and
pop
mov
dec
push
retf
(bad)
out
jl
daa
(bad)
ss
jg
clc
jle
adc
sbb
push
xchg
dec
push
jg
test
ret
mov
or
dec
psubw
xchg
xchg
and
dec
xor
xor
push
movs
add
movs
out
xchg
es
and
adc
sbb
popf
shl
add
js
lods
jmp
push
cwde
je
into
push
pop
call
xor
adc
mov
js
sub
inc
mov
xchg
inc
push
push
fmul
mov
adc
rcr
fs
in
mov
lahf
scas
mov
das
sub
adc
rcr
adc
add
dec
imul
and
(bad)
mov
inc
mov
adc
xchg
mov
push
out
retf
gs
push
push
xlat
mov
add
add
inc
add
push
inc
pop
mov
inc
es
add
jg
ins
jmp
push
inc
xchg
adc
pusha
jmp
xor
xchg
jnp
retf
adc
xor
pop
call
mov
or
adc
push
push
mov
(bad)
jmp
ins
jecxz
sub
aam
push
mov
pop
mov
and
mov
lods
or
add
rcl
xchg
jmp
add
cmps
rol
sub
in
das
xchg
and
(bad)
sbb
dec
inc
pop
push
ret
popa
add
adc
aaa
ins
cmps
inc
(bad)
and
ja
rcr
inc
call
add
ret
or
lea
es
mov
jp
ins
adc
imul
cmp
pop
mov
jl
add
shl
pop
or
pusha
and
adc
push
fadd
lahf
and
jge
loopne
sub
loopne
pop
push
jge
ret
fld
add
push
inc
cmp
push
ror
sub
jne
add
lds
or
adc
cmp
sbb
cwde
mov
loopne
dec
jne
sub
adc
inc
lods
add
pop
push
push
sub
dec
sub
and
std
inc
push
add
adc
popf
mov
dec
mov
jb
adc
ins
add
adc
add
sbb
add
lahf
push
retf
xor
push
push
cmp
jbe
xor
dec
add
stos
pop
xchg
lock
jmp
xor
fadd
popa
lea
ins
fmul
out
xlat
ret
push
push
fnstsw
inc
mov
dec
xchg
sbb
and
loopne
pop
xor
hlt
inc
mov
pop
sbb
pop
cmps
ja
data16
in
pop
mov
push
les
or
mov
adc
and
nop
in
inc
dec
inc
in
fmul
inc
test
sbb
push
sbb
and
ret
icebp
ja
(bad)
imul
fidivr
adc
sbb
lods
mov
or
cmp
cmp
or
pop
adc
cmp
cmc
push
mov
jo
bound
js
imul
xor
or
mov
xor
sub
das
fld
jae
movs
or
mov
or
js
add
and
or
dec
jo
pop
ss
inc
call
mov
sub
sbb
sub
or
pop
sbb
adc
adc
sbb
xor
inc
or
imul
retf
mov
mov
and
and
sub
jp
cmp
and
rol
add
shl
cmp
sub
cwde
clc
aas
dec
push
in
adc
jmp
and
jnp
add
add
add
push
push
xchg
jl
or
sbb
push
idiv
jg
idiv
push
add
and
or
sub
nop
out
mov
ret
cmp
inc
xchg
adc
adc
outs
push
je
(bad)
pop
mov
inc
cmps
jae
cmp
test
dec
sbb
push
xor
stos
add
or
cmovnp
sbb
xor
adc
aaa
mov
adc
jo
loope
adc
fcom
or
test
jb
add
cmp
in
add
add
push
in
xor
and
pop
dec
ja
and
fxch
je
mov
jmp
test
or
inc
es
cwde
pop
and
add
int
jno
mov
or
mov
loop
sub
sub
add
cdq
push
and
sub
mov
fcom
push
call
or
push
daa
ins
add
push
lock
call
mov
cs
xcrypt-ecb
cmps
or
inc
es
clc
jle
and
cmps
popa
fld
nop
mov
bound
shl
dec
hlt
imul
rol
jno
nop
cmp
inc
mov
div
sbb
cmp
and
adc
xor
sub
loope
dec
or
movs
xchg
jnp
(bad)
outs
enter
mov
jo
and
(bad)
mov
icebp
addr16
pop
jmp
jnp
inc
fs
cld
jl
sub
adc
or
dec
int3
rol
les
and
call
sub
rcr
cld
sub
inc
imul
stos
lea
mov
sbb
movs
into
lock
aaa
ds
dec
cmp
hlt
lock
add
lock
in
shl
jne
test
inc
push
dec
fdivrp
jle
rcr
test
inc
addr16
cmps
pop
jle
push
lds
cmp
cvtpi2ps
dec
adc
pop
lea
pusha
daa
xchg
xchg
std
sbb
xor
push
adc
cs
xchg
mov
add
(bad)
or
mov
cmp
mov
jns
sbb
push
cmp
push
daa
adc
sub
fdivr
jbe
mov
push
(bad)
or
jae
inc
mov
dec
pop
jge
and
sub
sbb
jle
pop
loopne
push
or
sbb
cli
loopne
sbb
xchg
movs
out
and
ins
fisttp
push
or
cmp
inc
sbb
and
sbb
sbb
clc
mov
adc
jp
shl
mov
mov
or
imul
(bad)
in
add
in
mov
sub
in
jo
ret
jo
sub
loopne
daa
popf
sub
add
pushw
nop
in
xchg
sub
lock
pop
sbb
and
add
sub
add
push
leave
or
jae
js
mov
retf
xlat
fadd
sbb
sbb
mov
and
inc
(bad)
inc
retf
dec
and
fbld
fdiv
or
dec
or
pop
ret
push
or
rol
pop
and
inc
mov
xsavec
in
vmread
xor
inc
mov
inc
inc
cmp
mov
std
sub
add
mov
adc
push
inc
or
jmp
dec
sbb
inc
mov
fs
fs
ss
aas
mov
push
push
inc
push
dec
push
sbb
add
movs
rol
mov
pop
inc
ja
inc
call
inc
sbb
scas
add
xchg
or
lahf
push
fmul
sub
adc
mov
das
mov
rcr
aaa
add
xchg
cmp
repnz
add
xor
lods
fwait
lahf
addr16
add
and
or
cs
test
test
xor
inc
jns
inc
dec
shr
push
inc
xchg
xlat
popf
retf
xchg
mov
das
adc
mov
inc
fnstcw
xor
retf
cmp
inc
adc
push
add
(bad)
mov
lea
xor
inc
adc
or
and
out
cmp
nop
xchg
cmp
adc
cmp
mov
nop
inc
rcl
fs
mov
lea
jecxz
pop
sbb
adc
nop
xchg
jle
mov
mov
repz
push
push
arpl
xchg
cmps
pusha
mov
adc
xor
push
fmul
xor
mov
or
and
sub
xchg
or
rol
xor
shr
push
in
addr16
movzx
push
bound
(bad)
jns
adc
dec
ins
test
push
in
push
xchg
adc
sub
(bad)
in
or
jne
add
hlt
add
add
pusha
test
daa
nop
cld
sti
lea
add
imul
mov
pop
movs
xchg
dec
xchg
enter
(bad)
jae
jbe
mov
cmp
outs
cmps
fcmovnb
sbb
pusha
or
in
repnz
sbb
push
or
sbb
fild
push
mov
pop
imul
mov
push
pavgw
pop
std
jmp
rol
and
mov
add
cs
cld
cmp
mov
inc
jp
xor
sbb
add
and
sbb
inc
push
stc
xor
in
mov
jmp
cwde
hlt
ins
ret
lods
fild
imul
pop
mov
cdq
or
lea
mov
clc
aaa
jmp
js
shl
dec
(bad)
xor
addr16
jecxz
mov
clc
pop
nop
jae
imul
sahf
mov
jo
pusha
jb
shr
aam
xchg
sub
mov
test
cwde
mov
adc
aam
adc
fidivr
jecxz
test
sub
push
xor
mov
mov
inc
xchg
fcom
and
or
cmp
sub
fist
jns
sub
enter
jp
push
adc
loopne
lods
ds
or
ss
jecxz
pop
aaa
mov
sbb
dec
xor
sbb
popa
or
scas
sar
outs
inc
mov
push
ja
cmp
mov
inc
xor
adc
in
jle
mov
or
loopne
(bad)
adc
push
push
mov
popf
jno
mov
jmp
mov
mov
jle
adc
inc
jmp
ss
push
lock
(bad)
and
push
or
adc
sbb
sub
adc
push
jp
push
mov
add
jb
mov
sub
(bad)
adc
xor
inc
ins
xchg
sbb
popa
adc
xlat
adc
xor
sub
es
cmp
xchg
ss
hlt
sti
lods
je
mov
fmul
and
inc
lods
inc
outs
pop
cmp
dec
lea
xchg
(bad)
sub
mov
loop
sub
(bad)
arpl
mov
or
rol
mov
clc
xchg
pop
mov
adc
imul
xor
aam
xor
and
pop
lods
xchg
rol
ror
aad
or
rcr
imul
hlt
or
(bad)
pop
and
push
enter
sbb
add
sub
mov
inc
mov
mov
inc
and
xchg
push
or
xlat
or
lock
stc
push
into
enter
push
inc
sub
out
or
adc
imul
mov
push
jo
sbb
sbb
in
sub
pop
stos
dec
mov
pop
add
inc
nop
mul
adc
inc
or
fwait
out
mov
dec
adc
push
enter
xor
frstor
dec
push
adc
jmp
cmp
rcr
or
hlt
shl
xor
pop
in
scas
es
div
shl
stos
arpl
in
(bad)
jmp
lods
sub
bnd
dec
cmp
push
neg
clc
fisttp
aam
clc
call
push
adc
lock
popf
mov
add
sub
(bad)
leave
scas
dec
sub
sub
push
mov
jg
xor
test
adc
cmp
mov
popa
and
add
adc
or
daa
add
jno
inc
cmps
jge
sbb
jo
and
push
inc
and
mov
lods
ret
out
sbb
cmp
lea
push
je
(bad)
mov
add
js
sub
adc
push
lods
xchg
(bad)
cmp
mov
ss
push
lods
push
daa
cs
push
ss
push
cdq
adc
push
icebp
inc
pop
scas
les
add
pop
cmp
adc
mov
cmp
jecxz
adc
mov
pusha
and
jne
ror
xor
mov
daa
push
push
ficomp
mov
push
pop
mov
and
xor
pusha
aaa
in
push
cmp
loopne
pop
minps
or
push
out
add
sbb
and
ror
mov
cmp
mov
adc
fcmovnb
pusha
inc
sar
add
adc
and
fmul
jl
xor
jne
or
sub
sbb
addr16
add
push
push
adc
fbstp
pop
jp
mov
xlat
cdq
rol
(bad)
loope
jge
inc
fbstp
ss
js
ins
retf
xor
int
cmc
dec
iret
aam
arpl
sbb
movups
je
jg
add
inc
retf
xor
jo
and
sub
pop
(bad)
ins
stos
or
cli
dec
push
ja
xchg
jl
push
adc
clc
das
and
push
mov
mov
push
ja
fld
in
mov
sub
pop
pop
mov
adc
imul
clc
adc
leave
push
add
jp
clc
xchg
mov
pusha
retf
xor
lds
sbb
jg
add
test
mov
sub
je
jbe
ss
fistp
ss
es
adc
popa
test
scas
fsub
adc
jbe
leave
adc
sbb
inc
and
loop
popa
out
sbb
rcl
mov
cmp
jl
adc
xchg
jmp
shr
add
xchg
(bad)
cwde
les
fisttp
mov
jno
cmps
jo
xchg
inc
mov
cmp
xchg
in
ja
sbb
loope
movs
push
mov
pop
push
mov
push
jbe
pop
les
add
pop
adc
pop
inc
push
lea
push
adc
cmp
scas
sub
fmul
es
(bad)
fistp
addr16
retf
jo
adc
sub
test
dec
jg
adc
sbb
sahf
add
sub
mov
movs
pop
rcl
cmp
outs
jmp
daa
loope
loop
cmp
data16
dec
mov
cld
sbb
scas
adc
cwde
inc
iret
test
rcr
retf
mov
outs
jmp
sbb
inc
cmp
cmp
les
cmp
or
mov
jle
sub
and
sub
nop
je
push
inc
jb
push
pop
sbb
mov
add
scas
and
add
xchg
lea
and
sbb
mov
test
lea
or
push
inc
and
xchg
dec
js
mov
jae
mov
scas
icebp
das
sbb
or
pushf
add
pop
adc
add
add
lods
lahf
xor
sbb
inc
icebp
adc
or
loop
xor
mov
sub
inc
mov
jne
sbb
in
aas
jne
pop
adc
test
jne
gs
inc
xor
adc
lods
xor
and
add
inc
xor
push
xor
push
cmp
sbb
cmp
es
xor
cmp
into
jg
or
sbb
mov
dec
lods
inc
lahf
scas
sub
fdiv
mov
leave
push
xchg
ins
test
sbb
pop
pop
jbe
mov
les
mov
add
adc
sbb
and
mov
pop
inc
sub
add
sub
inc
add
dec
adc
ins
jbe
adc
sub
pop
push
sub
js
mov
and
ss
pushw
mov
add
or
iret
sbb
and
dec
sub
add
inc
pop
jge
ficom
xchg
inc
or
mov
lock
fimul
adc
jge
retf
pop
sbb
mov
push
pop
iret
inc
js
retf
in
xor
call
(bad)
push
loopne
neg
lahf
adc
outs
leave
outs
sbb
jne
mov
xchg
movs
xchg
js
jae
sar
sbb
mov
add
pop
int
lahf
or
enter
sti
mov
popa
(bad)
cmp
ds
adc
movs
mov
pushf
mov
ror
jo
push
sbb
fmul
call
lods
pop
mov
mov
xor
xor
inc
es
jmp
push
push
push
das
inc
fimul
jg
push
shr
pop
cmps
fnstenv
test
in
enter
xchg
adc
std
xchg
jnp
loope
mov
fcom
call
pop
pop
dec
dec
adc
in
pop
cli
div
test
cmp
cmps
ficom
bound
ja
push
gs
or
sub
cmc
cmc
or
pop
cmp
les
sahf
adc
scas
leave
fcmovbe
loop
add
adc
cs
fsubr
loope
xchg
cmp
(bad)
mov
inc
and
adc
rcr
inc
mov
and
or
sbb
stos
push
aad
into
lods
xchg
xor
mov
mov
pop
fiadd
call
mov
retf
ret
adc
and
pop
push
inc
jne
fs
ret
or
mov
xchg
les
or
dec
and
jge
daa
add
lods
jl
pop
jg
adc
push
jge
icebp
fisub
inc
or
xor
mov
test
add
xchg
push
sbb
push
mov
aam
nop
jg
sub
shl
mov
das
add
or
out
ficom
xor
xor
call
ins
dec
inc
out
je
push
je
jecxz
ins
cld
push
xchg
jne
xchg
dec
push
test
(bad)
fild
ins
lods
(bad)
mov
sbb
fild
pop
and
and
push
dec
ret
outs
idiv
and
pop
lea
ds
and
lea
lea
cmps
fsub
mov
mov
adc
and
jmp
sub
test
adc
retf
(bad)
inc
inc
or
pop
cmp
pop
ss
js
pop
add
sub
enter
(bad)
je
jmp
shl
sub
das
push
push
or
cmp
add
pop
sub
adc
inc
jmp
iret
ror
cwde
(bad)
adc
test
inc
push
fild
mov
or
or
dec
xchg
mov
and
dec
mov
fcmove
js
loopne
loopne
push
fadd
ins
dec
mov
inc
xchg
retf
scas
clc
or
ins
push
mov
mov
xchg
cmps
dec
lods
ret
ss
push
jmp
iret
pop
sbb
push
cmp
pusha
int
mov
adc
add
or
mov
or
push
scas
aad
scas
add
es
sbb
enter
pop
or
add
xor
lds
daa
push
mov
in
jmp
push
adc
ins
loopne
hlt
aad
in
adc
dec
mov
mov
lock
inc
mov
push
sub
mov
and
mov
jle
lock
ja
les
cs
xchg
jno
xor
retf
mov
fwait
jecxz
mov
inc
es
add
mov
lea
cwde
and
cmp
rcr
inc
pusha
(bad)
(bad)
dec
jbe
adc
push
ds
mov
shr
pop
retf
hlt
mov
sahf
dec
pop
xchg
cs
sbb
push
or
jmp
cmp
js
lock
mov
sub
add
mov
jecxz
mov
mov
loope
adc
test
stos
xchg
test
push
shl
add
mov
popf
and
aas
pop
retf
out
sbb
clc
imul
sub
inc
fild
pop
adc
add
and
dec
sbb
adc
js
das
in
mov
mov
mov
dec
loope
push
sar
mov
ret
mov
mov
mov
add
mov
adc
movs
mov
jae
addr16
xlat
jge
push
dec
add
outs
and
nop
movs
nop
sbb
inc
xchg
inc
mov
cmp
ret
dec
sub
adc
xlat
adc
lahf
add
add
or
sbb
jae
loopne
mov
cmp
popa
sub
xor
pop
add
or
xchg
or
mov
pop
and
call
outs
and
cld
xor
sub
imul
xchg
or
dec
outs
popf
test
inc
or
gs
or
or
cmp
sbb
daa
dec
je
jmp
cmp
inc
imul
add
jmp
or
pushf
ja
mov
(bad)
sar
sub
arpl
add
add
lds
add
shl
aas
sbb
push
adc
dec
mov
pushf
or
xor
int
or
fsub
sub
pushf
add
out
mov
pop
inc
(bad)
es
xor
push
rol
mov
or
mov
(bad)
(bad)
push
enter
push
(bad)
jge
cli
nop
je
jnp
popa
lahf
mov
(bad)
push
(bad)
es
out
call
mov
inc
jo
out
adc
test
sub
mov
adc
call
dec
imul
push
sahf
push
add
push
xor
inc
jb
push
or
mov
mov
push
sbb
jl
fcomp
xchg
or
jmp
movs
test
movs
push
jmp
sbb
cs
sub
push
nop
retf
mov
cmp
xlat
dec
jecxz
jae
imul
shl
and
test
jne
xchg
mov
and
mov
popf
sbb
in
push
sub
ret
mov
adc
fnstcw
push
jnp
adc
outs
popa
loopne
rcl
js
ret
xchg
dec
retf
sub
push
dec
mov
std
inc
das
outs
inc
pop
inc
mov
mulps
sub
lock
iret
cmp
jne
dec
push
test
pushf
dec
adc
xor
sub
push
jmp
jl
dec
cmp
stos
mov
pop
mov
mov
ret
ins
movs
loopne
dec
sub
test
leave
jge
leave
pop
xor
or
or
pop
adc
fsubr
add
movs
add
and
ss
pop
and
mov
shl
adc
(bad)
xor
inc
adc
lock
cmp
mov
inc
sub
(bad)
jne
sub
mov
lds
cmp
adc
clc
hlt
xor
fnstcw
cmp
and
add
add
push
adc
jns
add
pop
outs
adc
push
jno
mov
ret
inc
inc
cmp
aad
(bad)
xchg
(bad)
push
pushf
mov
inc
pop
mov
ret
inc
(bad)
ror
hlt
pusha
mov
in
xchg
push
push
add
or
and
(bad)
cmp
movs
jae
repz
(bad)
mov
pusha
and
push
add
jne
(bad)
xor
push
inc
ins
adc
mov
sub
xor
or
mov
fucomip
movs
or
push
std
movs
das
push
movs
fbstp
add
mov
and
lock
das
fcmovnbe
popa
adc
loop
and
into
pop
cdq
xor
imul
and
and
repz
lods
mov
mov
push
add
aam
add
shl
or
push
mov
add
imul
rol
mov
xor
mov
pushf
movs
sub
in
pop
add
mov
cmp
mov
and
(bad)
ins
jne
sbb
xchg
cs
ret
enter
test
push
add
in
add
mov
pop
jg
idiv
out
les
rol
mov
xlat
ss
(bad)
pusha
frstor
xchg
push
iret
jge
xchg
push
push
push
in
mov
or
cmp
jmp
call
mov
push
cmp
push
in
call
adc
pop
sub
sub
pop
jb
bound
ret
fidiv
movs
sub
pop
das
inc
and
inc
fdivr
jmp
and
push
ret
sub
jecxz
shl
push
adc
sbb
ja
or
push
mov
push
mov
push
jnp
mov
push
sahf
sub
xchg
dec
retf
rcr
push
dec
sbb
dec
xchg
jge
xchg
movs
jo
dec
sub
scas
ins
or
mov
sub
pshufw
inc
pop
bound
sahf
cmp
adc
ins
enter
mov
loopne
sub
mov
add
das
xchg
dec
push
xchg
adc
outs
call
cwde
cdq
sub
ret
add
arpl
xchg
inc
mov
mov
pusha
pop
adc
inc
sub
cmps
sub
mov
adc
pusha
push
fxam
xchg
cli
and
inc
sahf
cs
ror
sub
sub
mov
adc
push
push
aam
ret
push
and
dec
les
(bad)
aam
adc
jg
imul
inc
mov
ret
mov
sbb
arpl
xchg
xchg
mov
jb
and
sub
(bad)
add
and
ins
mov
ins
xchg
xor
daa
xchg
inc
add
mov
push
jp
adc
inc
out
add
inc
pop
add
mov
pop
out
retf
aad
or
add
(bad)
(bad)
sbb
sbb
js
int
iret
and
lds
xchg
xor
jl
sbb
cld
(bad)
data16
mov
or
mov
sbb
add
lock
and
xchg
mov
pop
xor
sbb
sub
xor
or
dec
ret
push
pop
or
adc
repnz
call
jo
test
xchg
cli
push
adc
mov
inc
push
pop
fisub
and
add
dec
js
push
in
or
adc
sub
dec
shl
dec
(bad)
sbb
(bad)
addr16
push
movs
jge
adc
lds
mov
xchg
fsub
inc
mov
xchg
add
dec
xchg
or
adc
jno
scas
mov
sub
xchg
cmp
jbe
dec
add
adc
clc
enter
dec
push
je
or
jb
lock
inc
in
in
loope
dec
inc
pop
cmp
jne
std
cmp
in
add
fs
je
inc
loopne
fdiv
loope
cmc
pop
add
out
lock
and
loopne
aam
gs
loop
fbld
repz
inc
lods
frstor
adc
xchg
test
sbb
(bad)
in
adc
fistp
test
cmp
mov
push
jnp
and
sub
add
mov
je
sub
pop
push
mov
add
pop
pop
test
or
iret
mov
je
leave
lods
mov
xor
and
jmp
dec
inc
fcmovb
jo
cmp
jae
aam
push
or
les
leave
mov
add
inc
sbb
mov
inc
fild
sbb
push
cmp
pop
xlat
sub
inc
dec
fnstcw
les
les
loope
in
inc
scas
push
call
int3
inc
cmp
aas
or
sbb
adc
fdivp
pop
xor
out
or
retf
inc
xlat
ror
sub
dec
scas
in
add
mov
loopne
dec
pop
inc
inc
dec
and
outs
test
adc
fsub
ds
outs
add
push
cmps
iret
mov
push
sub
mov
push
sub
sbb
loopne
and
adc
sub
cmp
adc
rol
cmp
add
and
mov
in
and
mov
and
imul
inc
inc
mov
mov
pop
pop
test
mov
sub
nop
callw
ror
add
hlt
xchg
sub
add
popa
loopne
popf
sbb
inc
sbb
push
pop
push
jp
outs
add
and
mov
aas
cmp
and
sahf
scas
lock
pop
aad
add
scas
int3
inc
cmp
mov
xor
cmp
mov
mov
push
push
and
or
out
xor
dec
sub
xchg
dec
loope
push
fs
cdq
(bad)
outs
sar
jbe
add
mov
jbe
cmp
mov
ss
push
mov
into
and
nop
lea
push
outs
js
sti
outs
lds
jns
fmul
pop
cdq
xor
or
inc
je
jb
js
jnp
fucomp
cmp
and
ss
sub
out
fcomp
dec
sub
inc
add
or
and
in
loopne
rcl
push
and
sub
lldt
add
add
retf
mov
push
adc
adc
jns
and
repz
iret
xchg
add
xor
pop
adc
rol
iret
and
cmp
adc
pop
add
add
adc
xchg
pop
push
dec
inc
sub
jmp
or
int
add
pop
loope
add
pusha
loopne
jne
jno
push
and
nop
inc
push
xchg
add
and
pop
inc
adc
sbb
repnz
sbb
pop
in
in
nop
not
repnz
(bad)
mov
add
fnsetpm(287
inc
mov
push
fs
push
fld
and
or
pop
pop
or
nop
dec
and
add
add
and
or
je
cmc
arpl
sar
or
dec
xchg
sbb
rol
movs
fwait
push
dec
adc
fiadd
jge
pusha
repnz
and
add
add
loopne
and
or
or
outs
inc
sub
adc
push
add
lds
pop
sub
rol
jae
mov
push
xchg
inc
pop
repz
sub
or
or
mov
xchg
cs
add
cmps
xchg
and
cs
and
jl
sbb
pop
daa
mov
retf
shr
dec
xor
adc
jae
push
retf
test
fs
add
xor
movs
cmp
xor
sbb
dec
daa
push
sbb
mov
enter
dec
inc
adc
mov
xchg
add
or
in
or
xchg
test
adc
mov
aaa
add
jmp
popa
cmp
inc
fiadd
add
adc
cmp
or
or
xchg
xor
rol
cmp
jecxz
push
popa
pusha
imul
sub
cmp
lea
sahf
inc
jns
xor
cmp
or
cmp
add
out
cdq
fsub
rcl
ds
call
or
es
in
adc
ret
xchg
clc
test
or
and
vaddsd
fadd
dec
inc
test
js
sub
add
pop
adc
dec
add
sahf
cs
inc
inc
shl
fild
inc
inc
inc
inc
dec
ins
xchg
mov
fld
loopne
inc
inc
inc
inc
inc
arpl
cs
add
xor
inc
inc
inc
inc
movs
(bad)
jmp
sub
jl
cs
inc
inc
enter
cmp
inc
inc
pusha
test
inc
repnz
xor
inc
sub
inc
imul
out
add
dec
inc
out
dec
popa
jns
test
cmp
xor
xchg
imul
add
adc
jbe
inc
imul
xlat
or
cld
inc
and
add
gs
or
xlat
ins
dec
fisttp
xchg
sbb
shr
pop
pop
ins
add
ss
cdq
and
push
add
push
adc
pop
or
sbb
jno
sbb
or
and
mov
cli
adc
sar
mov
cmp
fwait
cmp
mov
inc
mov
movs
mov
arpl
and
outs
mov
hlt
imul
(bad)
fsubr
lahf
sbb
es
data16
call
leave
xchg
xchg
dec
add
xchg
dec
inc
leave
add
inc
mov
cmp
add
dec
cwde
nop
data16
daa
pop
sbb
add
jmp
fbld
lock
add
ret
push
mov
test
inc
sub
(bad)
cld
mov
xchg
in
push
retf
pop
inc
ins
outs
ja
movs
and
int3
jae
arpl
leave
push
mov
or
mov
sub
scas
lock
or
inc
jp
bndstx
xor
psrlw
gs
lahf
mov
out
push
sbb
out
jmp
mov
push
(bad)
mov
push
mov
jmp
push
dec
sbb
ss
sbb
pop
jmp
dec
iret
pop
xchg
clc
mov
mov
icebp
test
pop
rol
pop
ins
or
dec
aaa
cs
enter
add
push
dec
xchg
dec
sbb
sbb
out
xchg
addr16
pop
ror
(bad)
in
inc
mov
xor
loope
fst
pop
sbb
xchg
sbb
push
sub
adc
loop
push
int3
xchg
adc
mov
cdq
adc
outs
add
mov
pusha
adc
sub
adc
dec
adc
push
pop
inc
leave
push
jb
sbb
nop
xchg
movs
shl
sbb
xor
pusha
push
pop
aaa
pop
cmp
or
shl
movs
stos
sbb
adc
add
jmp
nop
stos
and
and
fs
loopne
mov
or
or
jnp
xchg
es
jl
iret
in
and
add
lock
call
and
pop
jmp
sub
test
sbb
add
sub
xchg
or
xchg
pop
sub
sbb
das
xor
xor
and
xor
xor
enter
xor
shl
sbb
inc
sub
cmp
add
xor
xor
dec
imul
shl
sbb
xor
xor
popa
test
xor
pop
out
cmp
xor
xor
xor
and
inc
data16
xor
xor
xor
xor
bound
xor
hlt
sbb
inc
xor
xor
push
shl
repz
cmp
jg
paddusb
daa
daa
daa
loopne
call
daa
lock
hlt
sub
ins
mov
and
movs
sti
push
push
test
ins
add
shl
lods
push
cmp
lahf
mov
mov
xchg
xchg
pushf
jbe
mov
push
xchg
leave
pop
xchg
add
movs
dec
lahf
out
inc
push
call
ins
push
add
mov
push
hlt
push
popf
cmp
add
add
daa
sub
add
js
mov
jl
pop
mov
add
add
rcr
ja
dec
pop
add
movs
sbb
dec
imul
sub
fld
mov
shl
addr16
add
or
popa
dec
and
in
dec
inc
dec
sub
mov
mov
mov
pop
nop
jbe
dec
xchg
rcl
push
shl
popf
test
and
seto
pushf
add
xor
leave
xor
arpl
pushf
or
adc
jbe
iret
mov
mov
mov
fidiv
push
add
clc
bound
das
psubw
pushf
push
push
sbb
leave
xchg
mov
leave
ins
not
fs
mov
adc
outs
add
in
sbb
adc
cwde
push
pushf
adc
adc
mov
add
(bad)
mov
sahf
repz
mov
adc
lock
cmps
es
cmp
sub
push
add
cmps
or
out
mov
and
test
inc
mov
je
pop
das
(bad)
movs
bndldx
inc
fwait
add
lea
dec
pop
pop
add
xor
push
popa
and
cmps
mov
or
ins
or
jmp
test
dec
sbb
add
jns
inc
or
mov
sub
add
inc
pop
push
cmp
and
aaa
cwde
dec
repz
add
cwde
add
rcl
add
ret
xor
ror
inc
ret
add
cmovge
mov
fild
test
gs
and
inc
aam
pop
scas
rol
mov
pop
xchg
mov
popfw
mov
cmp
in
or
inc
inc
(bad)
call
(bad)
inc
dec
std
arpl
sti
imul
aam
sub
and
mov
mov
inc
pop
retf
inc
enter
and
dec
mov
test
mov
cdq
inc
aas
xchg
or
ret
add
pop
add
adc
jno
push
xlat
arpl
cmp
pop
pusha
dec
pop
adc
add
sub
mov
push
fist
std
push
hlt
(bad)
in
cld
adc
jmp
movs
cs
inc
adc
fild
adc
jo
push
sbb
leave
adc
adc
xor
sbb
or
push
sub
mov
dec
fwait
xlat
es
adc
xor
push
out
or
jle
adc
dec
mov
sub
push
dec
xchg
out
ss
xchg
mov
shr
push
xchg
mov
adc
xchg
(bad)
outs
dec
mov
dec
jne
or
es
sbb
mov
loope
sar
fisttp
cmps
dec
movs
adc
in
and
pop
nop
dec
xchg
or
add
es
pop
add
or
jb
and
xchg
dec
and
cmp
sbb
or
js
add
sbb
aam
cmp
push
xor
push
mov
mov
xchg
test
sbb
mov
cwde
ret
or
xchg
mov
push
cs
mov
fld
or
sub
or
xor
xor
jmp
add
test
jnp
adc
push
test
xor
inc
leave
add
sbb
pop
push
sub
mov
add
push
add
outs
inc
pop
cmp
lods
and
cmp
add
sub
aas
inc
leave
push
jb
cmc
inc
inc
xchg
or
push
inc
inc
sub
dec
jb
in
or
test
pusha
pusha
pop
wbinvd
add
pop
rol
inc
out
in
fild
xor
jo
dec
inc
sbb
or
sbb
dec
dec
add
xchg
or
dec
dec
pop
add
add
xchg
xchg
pop
movs
mov
xor
pop
jp
xchg
xchg
xchg
lahf
ret
add
enter
push
jp
enter
ret
out
add
enter
jne
mov
loopne
add
dec
enter
imul
enter
dec
jno
enter
vunpckhps
enter
pop
jg
enter
(bad)
es
dec
imul
fild
push
and
enter
aam
enter
sbb
enter
mov
add
and
dec
cs
pop
jl
or
test
dec
or
push
cwde
xchg
jae
xlat
sub
mov
push
mov
and
dec
je
ins
iret
add
add
test
dec
mov
add
pushf
cmps
test
mov
mov
or
dec
movs
xor
xor
jbe
lds
shl
xor
pop
push
or
sbb
hlt
jae
gs
add
mov
push
jg
pop
lods
aaa
and
enter
(bad)
std
imul
or
or
push
int3
es
dec
push
inc
repz
pop
or
push
fs
sub
pop
stos
dec
mov
movs
stc
pop
rol
cmp
pop
mov
dec
mov
outs
xchg
add
inc
or
movs
(bad)
xlat
adc
or
ss
lahf
xor
push
push
add
sbb
dec
jnp
(bad)
in
sbb
mov
adc
or
jecxz
add
iret
jo
inc
xchg
imul
aad
lock
jecxz
in
pop
movhps
add
inc
xor
stos
mov
lea
retf
js
jae
sbb
lock
adc
das
pop
jmp
mov
in
imul
mov
loopne
ss
clts
in
adc
cwde
in
mov
sub
sub
pop
add
pop
inc
push
and
mov
inc
push
nop
dec
mov
dec
pop
mov
xor
cmp
test
ror
movs
sar
sahf
cs
jbe
or
(bad)
mov
mov
pop
pop
loopne
and
out
int
fmul
ds
xchg
push
adc
sub
or
push
(bad)
xor
test
mov
mov
jge
shr
cwde
xchg
sub
or
sub
and
mov
fnstcw
mov
push
push
dec
jae
jae
add
sar
hlt
push
sub
cwde
shl
rol
int
add
in
les
inc
mov
das
enter
jae
das
add
mov
cmp
xor
mov
jns
xor
pushf
sar
jmp
mov
or
adc
push
retf
fcom
xor
repnz
cld
jbe
adc
add
adc
adc
cld
mov
dec
cmovno
ins
inc
add
pop
xor
out
adc
inc
pop
movd
inc
mov
scas
mov
and
fld
lods
jmp
mov
rcr
lock
and
int
repz
xor
mov
xor
push
xor
rcl
movs
icebp
xchg
jl
cmp
adc
sub
mov
mov
ret
test
scas
dec
jo
les
aad
xchg
jne
adc
jno
inc
pop
dec
push
jo
mov
inc
enter
dec
movs
ror
ret
(bad)
icebp
add
outs
dec
sub
pop
stos
mov
add
leave
pop
(bad)
scas
push
and
sbb
xlat
enter
push
pop
fistp
adc
enter
(bad)
enter
adc
ins
dec
sbb
stos
enter
or
mov
cs
sub
clc
pop
adc
rol
mov
push
add
movs
inc
pusha
jnp
in
rol
and
or
add
mov
pop
fwait
xor
inc
rcl
mov
pop
call
add
or
imul
daa
and
sbb
inc
adc
pop
adc
and
sub
fcom
dec
jns
imul
sbb
push
and
push
and
inc
jb
and
and
sub
add
dec
enter
pushf
ret
inc
mov
add
jl
cmp
enter
ror
cmp
out
(bad)
js
dec
test
xor
jnp
shl
and
push
rcr
cmp
sub
add
xchg
mov
sar
or
mov
jae
inc
popa
in
mov
adc
cmp
cmc
add
mov
in
add
mov
out
inc
add
mov
(bad)
and
and
push
rcl
cmp
mov
jb
sbb
or
add
dec
or
or
out
mov
clc
cs
pusha
adc
in
test
pop
jle
xchg
push
nop
sbb
sbb
lock
test
mov
mov
push
sub
psrad
jns
mov
mov
or
inc
rol
mov
fisubr
or
or
aad
xchg
adc
lock
ins
rcr
or
outs
pop
jmp
mov
push
inc
add
push
sbb
mov
sbb
add
or
ret
adc
out
imul
loopne
or
fcom
outs
adc
cdq
inc
xchg
dec
sahf
loope
add
aas
jmp
or
pop
push
mov
adc
pop
push
(bad)
mov
sbb
sbb
outs
sub
inc
cwde
push
in
mov
leave
and
push
or
cmps
sbb
and
and
add
and
jae
inc
or
adc
mov
adc
dec
pop
cmp
pop
ror
call
bound
xchg
pop
sbb
test
sbb
adc
mov
sbb
cs
es
push
pop
and
sub
cs
or
das
adc
or
sub
test
push
push
xor
push
inc
xor
faddp
push
(bad)
inc
or
adc
pop
inc
push
in
or
test
sub
add
add
cs
and
xor
daa
xchg
dec
jl
xchg
inc
ret
xor
push
sub
and
js
cmp
sbb
or
and
leave
push
xor
and
mov
or
or
imul
fmul
inc
dec
inc
inc
fidiv
mov
inc
leave
call
inc
pop
leave
push
xor
inc
xor
xor
enter
inc
xchg
pop
or
daa
scas
dec
mov
mov
jb
dec
cwde
cwde
dec
lods
add
popa
test
or
push
add
cdq
push
sbb
sbb
sbb
push
sub
sbb
mov
sbb
pop
and
sbb
sbb
mov
mov
xchg
sbb
sbb
sbb
sbb
sbb
and
dec
sbb
sbb
jo
mov
sbb
and
pop
inc
sbb
sbb
ret
xchg
xchg
retf
xchg
in
adc
pop
xchg
xchg
xchg
xchg
and
retf
(bad)
xor
xchg
xchg
xchg
popf
mov
xchg
xchg
xchg
xor
push
mov
les
iret
addr16
dec
mov
cmps
pop
lods
xor
pop
sub
dec
and
and
jl
dec
jg
enter
dec
clc
sub
sub
dec
cmp
test
or
das
ins
int3
inc
dec
adc
push
sub
loopne
iret
jnp
push
push
mov
inc
sahf
mov
movups
or
dec
lock
inc
leave
add
(bad)
into
in
into
or
js
add
fst
sub
lock
mov
or
xchg
add
mov
xor
inc
push
fadd
push
ret
adc
fwait
jo
in
test
mov
adc
das
cmp
sub
and
stos
dec
shr
sbb
push
add
sub
xor
push
imul
jbe
imul
aam
div
fdiv
test
xchg
es
add
iret
addr16
pop
pop
and
xchg
dec
shr
xor
mov
popa
leave
daa
retf
das
add
mov
and
xor
adc
cmp
aas
imul
add
rol
mov
leave
shl
sub
nop
pop
pop
xchg
pusha
mov
add
add
ret
dec
jmp
cmp
dec
or
add
push
xor
xor
add
push
shr
or
(bad)
sub
dec
adc
cs
add
pop
mov
mov
not
sub
fimul
or
add
adc
add
daa
je
inc
rcl
out
or
jbe
sbb
jbe
stos
data16
jmp
add
stc
int
loopne
or
jae
bound
rcr
inc
gs
push
jnp
inc
cmps
loop
xchg
mov
sahf
data16
dec
xor
mov
xor
and
push
pop
clc
sub
or
in
in
cmp
jns
xor
xchg
das
cvtpi2ps
call
fmul
or
in
iret
test
pop
repnz
add
and
sbb
imul
inc
cdq
cs
popa
mov
sbb
xor
test
and
dec
or
or
xchg
scas
mov
xchg
fldenv
aas
mov
jp
push
jo
or
pop
leave
sub
leave
inc
adc
cmpxchg
cmps
gs
adc
outs
sbb
and
mov
call
push
inc
cmp
mov
imul
jnp
sar
and
popf
loope
stc
popa
les
adc
push
mov
in
in
xor
push
push
add
inc
(bad)
(bad)
js
aam
adc
add
adc
test
mov
ds
mov
cmp
call
sbb
rcr
test
out
je
sbb
dec
pop
xlat
or
inc
jb
pop
clc
xor
or
xor
loopne
sbb
dec
aaa
movs
cmp
loope
or
mov
pop
xchg
inc
sbb
add
xchg
out
xor
jb
repz
fs
mov
fs
push
jns
pop
jbe
fs
and
mov
and
shr
scas
dec
xor
adc
aad
mov
rcr
inc
ficom
retf
push
stos
cmc
out
inc
mov
ficom
cli
add
adc
lock
or
jmp
sbb
repnz
dec
push
or
loope
daa
sbb
int3
loop
inc
bnd
mov
call
sti
dec
pop
ret
test
sbb
fwait
jmp
ficom
fadd
or
pop
pop
add
or
(bad)
mov
imul
push
mov
dec
adc
scas
pop
jl
inc
bnd
fsub
adc
and
sub
pop
icebp
push
loop
or
lahf
mov
cmp
(bad)
cmp
ret
lea
nop
xor
int
adc
(bad)
add
test
and
inc
ret
cmp
or
adc
fs
cmp
pop
adc
xchg
xor
adc
sbb
sub
and
adc
rol
pop
add
sub
sbb
pop
sbb
sbb
push
jb
sbb
pop
push
pusha
jg
add
and
push
add
pop
xchg
nop
pop
sbb
and
adc
das
sub
and
sbb
pop
jo
and
xchg
inc
add
daa
in
dec
push
inc
scas
sub
and
add
or
xchg
sub
ror
pop
inc
sbb
fld
pusha
and
add
xor
pop
adc
dec
xor
inc
inc
and
xor
cmp
pop
aam
inc
mov
and
in
cmp
leave
push
jb
arpl
cmp
cmp
sbb
sbb
xchg
aas
inc
inc
sbb
sbb
inc
inc
cmp
cmp
inc
inc
pusha
sub
add
push
add
dec
cmp
or
test
cmp
enter
lods
enter
iret
stc
pop
cmp
enter
xchg
mov
in
cmp
push
ja
enter
mov
enter
push
jp
enter
shl
and
inc
enter
jo
shl
enter
aas
xor
in
enter
jecxz
inc
enter
sub
in
enter
inc
sub
enter
ja
(bad)
retf
enter
adc
pop
jmp
push
mov
arpl
add
add
or
dec
cld
cmp
arpl
ret
iret
mov
outs
sub
push
enter
in
fs
inc
push
push
mov
inc
sub
lea
add
sbb
xchg
inc
(bad)
ds
dec
pop
sub
inc
repnz
popa
clc
inc
js
lock
fsubr
scas
xchg
es
sbb
fsubr
add
mov
lods
sub
mov
adc
mov
aam
aam
gs
cmps
cmp
mov
mov
lods
les
int3
sbb
icebp
sub
out
repnz
jmp
dec
xor
fadd
rol
xchg
inc
xchg
scas
pop
add
push
int3
aam
ret
mov
push
inc
nop
inc
mov
dec
xchg
setp
movs
add
jb
inc
pop
xchg
mov
mov
sbb
cmc
fild
pop
leave
adc
adc
fnstenv
push
mov
sub
adc
mov
and
lods
pop
add
dec
cs
and
push
aad
stos
sub
int3
push
add
nop
and
outs
sbb
jns
push
inc
sbb
mov
repz
mov
adc
xchg
pop
push
(bad)
and
add
add
and
inc
enter
dec
and
xchg
xchg
pop
xchg
mov
lock
push
and
push
jmp
or
sub
adc
and
push
fld
mov
xor
push
xor
ja
xor
xor
ss
cmp
and
cmp
nop
add
and
xchg
add
push
inc
cmps
ds
fst
int3
dec
or
or
retf
xchg
xchg
xchg
pushf
mov
xchg
xchg
xchg
es
outs
xchg
retf
xchg
xchg
xchg
mov
cld
sbb
xchg
xchg
xchg
inc
push
mov
in
dec
xor
xchg
xchg
je
mov
xchg
(bad)
and
outs
xchg
xchg
xchg
xchg
xchg
mov
std
xchg
xchg
xchg
retf
push
dec
inc
mov
xchg
mov
add
adc
xchg
add
je
push
push
or
add
mov
dec
inc
inc
xchg
pop
xchg
push
(bad)
repz
je
add
cmc
mov
hlt
movs
mov
cs
add
push
push
sbb
or
pop
push
pushf
dec
(bad)
cmp
movs
push
sub
adc
or
(bad)
and
shr
adc
sub
in
repz
push
xchg
and
xchg
js
test
mov
sub
sbb
ror
test
sidtd
adc
and
bound
pop
adc
rcl
add
xor
sub
loop
mov
inc
sub
mov
xor
xor
mov
add
aaa
cmp
in
cmp
test
cmp
nop
add
jge
or
push
aad
mov
loopne
push
and
sbb
scas
iret
sbb
push
inc
arpl
sbb
sbb
sbb
ins
xchg
mov
fld
push
and
sbb
sbb
mov
sbb
sbb
cld
and
sbb
sbb
imul
pop
inc
sbb
sbb
mov
bound
add
out
clc
(bad)
cld
lfs
rcr
mov
ins
out
inc
popa
cmp
pop
rol
cmp
in
push
pop
dec
lods
mov
lods
mov
dec
dec
inc
mov
dec
cwde
cwde
ja
mov
push
jnp
jecxz
call
adc
shufps
add
add
retf
imul
pushf
neg
lgs
adc
add
movs
inc
and
pop
and
fist
popa
js
mov
adc
sbb
mov
popa
or
or
mov
nop
xchg
sub
mov
dec
add
test
sub
fsub
imul
ret
push
xor
dec
mov
adc
dec
jnp
mov
lahf
out
std
cmp
sti
jl
stos
(bad)
mov
ss
xor
inc
mov
je
or
fsubr
jno
mov
outs
xchg
xchg
add
add
add
pop
cmp
mov
(bad)
cmp
add
add
in
and
push
pop
dec
cmp
cmp
push
sub
clc
sbb
(bad)
jge
and
shl
xchg
sbb
cmp
outs
mov
sti
mov
add
loopne
sbb
cs
add
or
inc
cmp
mov
cli
cs
cmps
or
mov
in
(bad)
dec
addr16
sbb
add
xchg
or
pushf
nop
cmps
inc
fstp
and
test
jmp
sahf
push
inc
sub
out
sti
scas
dec
jae
pop
add
inc
lea
inc
sub
sub
test
sub
sub
and
mov
cmps
xchg
test
in
sbb
xor
xchg
test
sbb
xor
and
xor
rol
mov
cs
xor
cmp
or
cs
inc
or
add
and
inc
inc
inc
dec
jb
mov
(bad)
pop
popa
cmp
pop
jle
int
cs
inc
cld
and
inc
inc
inc
(bad)
mov
cli
inc
inc
cs
sbb
inc
push
inc
mov
cli
sbb
inc
inc
inc
cs
inc
inc
inc
iret
neg
gs
cmc
dec
add
dec
enter
(bad)
inc
sub
pop
rcl
sbb
push
xchg
inc
pop
jae
movs
out
and
or
add
mov
adc
jne
imul
addr16
call
outs
push
iret
repz
pop
or
sahf
or
dec
test
sbb
adc
std
pop
dec
pop
dec
ds
dec
mov
xchg
push
push
adc
sub
add
lds
jp
xchg
test
jl
nop
jo
movs
mov
xchg
push
in
push
sub
add
dec
loope
mov
call
or
and
aam
or
pop
popf
dec
xor
lods
pop
adc
push
lods
or
cmp
lss
in
dec
movs
mov
add
cmps
pop
and
cmp
stos
leave
pop
pushf
retf
sub
jns
mov
adc
adc
push
xchg
push
pop
xor
cmp
sbb
push
xor
sbb
pop
rcr
sbb
jb
sub
jb
push
pop
mov
and
jns
jl
fadd
dec
aaa
and
add
mov
push
add
push
leave
inc
es
repnz
pop
sub
dec
pop
dec
sub
dec
sub
dec
sub
test
cwde
movs
sbb
arpl
push
fst
sbb
or
pop
inc
push
xor
jb
pop
xor
and
xor
ss
and
jno
outs
jl
pop
jmp
mov
mov
loope
ins
sub
mov
mov
dec
ins
mov
add
mov
pop
mov
xor
fwait
mov
out
jo
push
mov
jmp
mov
jno
pop
test
mov
mov
sub
jae
jne
je
(bad)
aam
sahf
jmp
or
test
cmp
aaa
adc
(bad)
add
dec
dec
xchg
add
cmp
lods
pusha
js
add
pop
adc
das
jne
lea
mov
cmp
inc
fmul
daa
ror
test
jne
pop
mov
je
pop
(bad)
(bad)
add
jne
in
or
add
add
inc
inc
jl
sbb
xchg
or
retf
mov
inc
or
in
jnp
lods
mov
jbe
add
adc
push
push
dec
repz
cmp
push
mov
add
or
sti
sar
enter
mov
lods
or
adc
push
ret
test
hlt
fs
(bad)
dec
xabort
push
bound
test
xor
pusha
sahf
sub
dec
mov
dec
xor
mov
dec
retf
scas
movs
pop
inc
(bad)
ja
push
add
js
add
mov
push
sub
cmp
sbb
adc
sti
ror
pop
push
adc
data16
xor
add
sbb
add
hlt
sbb
or
and
cmp
sahf
out
mov
dec
inc
xchg
(bad)
popf
dec
add
pop
pop
cmc
push
dec
pop
pop
daa
outs
sbb
add
cmc
or
push
push
jae
popf
imul
lock
add
sbb
and
and
push
xlat
and
mov
or
cld
mov
dec
add
xor
cmp
or
mov
jge
push
add
jns
xor
pop
popf
out
push
and
mov
inc
xor
jl
fs
ins
call
and
push
lea
fwait
es
xchg
daa
sub
xchg
ds
dec
lock
adc
shl
push
jge
inc
add
je
adc
xor
out
and
or
mov
mov
cmp
xchg
fwait
jecxz
mov
jo
push
adc
xor
dec
dec
sub
inc
pop
jge
aad
dec
movs
add
dec
dec
and
xchg
sub
push
xchg
cs
lahf
mov
cmp
mov
lock
enter
push
add
mov
pop
popf
pop
ins
and
aaa
mov
xor
cmp
inc
pusha
ins
adc
adc
fs
inc
je
mov
xor
call
ss
nop
out
adc
in
fisub
add
(bad)
cmp
mov
sub
push
mov
push
fsub
push
adc
pusha
adc
mov
and
xchg
mov
lods
and
add
pushf
push
fiadd
popf
test
movs
jle
iret
jnp
fs
sbb
and
repnz
cmp
push
les
xchg
ins
mov
push
pop
add
dec
aad
jno
mov
movs
push
inc
pop
jae
es
mov
or
push
adc
in
data16
popa
xchg
lea
cmp
shl
hlt
adc
imul
pop
sbb
push
mov
cmc
mov
test
push
push
push
adc
jns
cmps
pop
test
dec
mov
and
test
repnz
jg
and
cmp
test
push
(bad)
xchg
mov
shr
adc
dec
push
xor
xchg
jnp
mov
pop
aas
add
fnstenv
push
push
addr16
test
loopne
movs
(bad)
mov
push
cwde
js
cmp
adc
sbb
and
test
pop
adc
aad
xchg
xor
cmp
sub
pop
int3
das
fiadd
(bad)
fdivr
test
call
and
(bad)
lock
popa
or
or
xchg
push
bnd
and
sbb
loope
ror
sbb
enter
cs
loope
dec
bound
popa
hlt
push
inc
and
loop
dec
push
xchg
js
cmp
push
adc
push
mov
das
or
pop
in
pop
xor
and
pop
pushf
add
adc
rol
les
das
adc
data16
arpl
adc
dec
pop
sbb
pushf
arpl
sbb
pop
and
xor
push
jmp
lods
gs
mov
daa
jne
adc
sbb
adc
into
scas
add
jp
push
and
das
loopne
dec
in
dec
test
lods
dec
mov
dec
inc
mov
push
and
prefetcht1
sbb
or
add
add
inc
adc
popa
sub
pop
or
xor
push
popf
movs
jnp
inc
push
mov
outs
daa
jl
mov
xor
mov
push
gs
adc
or
sbb
nop
sbb
push
inc
mov
inc
movs
jns
dec
xor
test
movs
lods
lods
jg
or
mov
nop
dec
and
rol
sahf
push
jo
jg
cmps
mov
fild
(bad)
or
inc
cmp
mov
lods
loope
sar
dec
out
mov
scas
cwde
push
sbb
xor
or
mov
jae
or
jno
in
push
data16
mov
pop
xchg
inc
in
dec
cmp
and
dec
test
cmp
pop
jecxz
mov
and
movs
jmp
popf
xchg
je
rcl
sub
into
dec
imul
sub
mov
inc
shl
aaa
push
xor
lods
pop
movs
retf
xchg
push
and
push
test
test
movs
cs
and
lods
(bad)
adc
mov
push
pop
mov
xlat
lea
je
mov
jno
xor
sbb
adc
push
adc
movs
rcl
je
mov
repz
add
loop
mov
pusha
jle
push
stos
and
(bad)
jns
mov
xchg
jecxz
xchg
loopne
push
rcr
push
mov
call
jo
js
sub
jo
aam
mov
aas
call
pop
out
sub
test
pusha
sar
mov
mov
inc
push
ins
pop
fcomp
sbb
push
inc
popa
cs
das
dec
inc
imul
sbb
xchg
and
sbb
out
iret
cmp
sub
add
jnp
lea
call
ror
(bad)
jecxz
jmp
pushf
pop
in
bswap
lea
push
push
nop
outs
inc
inc
in
mov
popf
add
rcl
mov
inc
call
hlt
pop
sbb
(bad)
and
shr
in
hlt
inc
test
push
xlat
push
call
jecxz
push
and
adc
pop
xchg
and
call
lahf
or
mov
add
xor
xlat
jae
inc
loopne
mov
jne
mov
pop
movs
pop
sub
mov
pop
aam
icebp
and
xchg
add
sub
mov
cmp
push
or
pop
push
xchg
add
das
pop
in
xchg
enter
adc
scas
sahf
sub
rcr
xor
pop
dec
sbb
or
aas
daa
inc
adc
xchg
movs
pop
mov
add
dec
sar
mov
mov
mov
popf
loopne
pop
and
or
push
or
inc
push
jo
pop
int3
out
sub
adc
push
lock
adc
mov
mov
stos
nop
mov
mov
adc
mov
cmp
std
adc
sub
adc
push
push
fiadd
(bad)
psubb
call
xchg
add
loopne
inc
jge
pusha
iret
hlt
pop
adc
dec
pop
aas
icebp
cmp
mov
mov
add
cli
gs
test
cmp
or
shl
dec
rol
in
dec
dec
in
das
ret
mov
imul
rol
and
mov
adc
and
popa
add
ss
es
les
adc
lea
rcr
lods
dec
xchg
lock
shl
stos
xor
sub
loopne
test
stc
add
sar
sub
mov
sub
ret
and
rcl
out
xchg
test
xor
int3
add
lahf
dec
ins
aaa
in
xor
shl
movs
rcl
mov
mul
retf
mov
mov
data16
je
in
mov
pusha
pushf
(bad)
push
xor
rol
ror
add
jge
sub
push
and
pop
iret
hlt
adc
popa
clc
xlat
pop
adc
js
setg
sub
dec
ja
ret
xor
push
arpl
xchg
aad
dec
arpl
(bad)
rol
jp
dec
push
xchg
mov
and
pop
xchg
fwait
call
jle
jge
adc
xchg
xor
rcl
rcl
nop
mov
adc
stos
mov
sbb
(bad)
cmp
mov
aad
sbb
adc
lods
adc
in
(bad)
push
add
mov
or
mov
inc
call
add
popf
add
cmp
xchg
movs
iret
push
ins
sbb
cwde
add
dec
jg
call
mov
sbb
neg
rcl
jne
in
lock
mov
xor
add
push
inc
push
retf
(bad)
push
outs
jne
pop
(bad)
sbb
add
pop
(bad)
or
or
pushf
daa
push
inc
loop
lahf
mov
inc
push
or
test
push
in
xor
lods
int3
pop
mov
sbb
pop
mov
retf
rcr
add
mov
retf
sbb
pusha
cmp
nop
mov
fcmove
xchg
pop
adc
xchg
xchg
scas
js
(bad)
pusha
xchg
test
daa
inc
ret
add
add
fadd
pop
or
push
xchg
lods
inc
adc
jns
loope
or
pop
sbb
sbb
fwait
push
mov
sbb
ins
xchg
dec
pop
pop
dec
mov
jmp
movs
adc
mul
push
xchg
sbb
test
xchg
push
push
mov
fsub
push
or
mov
lahf
retf
repnz
test
push
mov
shl
mov
mov
xchg
push
cmp
push
inc
xchg
or
sti
in
cmc
pop
(bad)
mov
mov
dec
(bad)
push
xchg
pop
dec
(bad)
dec
loopne
into
das
into
xor
or
or
sub
sbb
or
mov
int3
mov
and
int3
fdivr
xchg
int
jmp
pop
aas
jge
lds
clc
mov
jmp
outs
or
shl
add
adc
push
pop
daa
cdq
pushf
and
jb
xchg
pusha
(bad)
push
mov
out
mov
(bad)
sbb
xchg
sub
test
mov
push
loope
inc
inc
shl
test
mov
in
cdq
ret
hlt
sar
dec
xchg
(bad)
into
or
adc
cmp
sbb
jo
and
scas
adc
push
jbe
or
loop
pusha
xchg
std
jmp
mov
or
nop
dec
sbb
ss
mov
or
pusha
call
test
int3
inc
xchg
and
xchg
dec
adc
push
lea
and
mov
add
jecxz
push
push
(bad)
push
push
jne
jno
xor
dec
movs
(bad)
stc
adc
shl
pop
pop
push
push
mov
adc
iret
adc
push
mov
add
dec
pop
ret
test
pushf
add
cmp
leave
int
mov
xchg
mov
mov
enter
in
adc
and
cmp
fst
mov
adc
xchg
mov
nop
xchg
pop
lods
(bad)
sbb
fs
inc
push
clc
sbb
ins
and
sbb
push
or
cwde
or
fwait
cdq
test
sub
add
xor
cmp
pushf
cli
fwait
test
leave
inc
dec
outs
cwde
dec
inc
push
jo
add
dec
pushf
xchg
(bad)
xchg
adc
ins
addr16
mov
pop
call
je
xchg
mov
mov
rol
cmp
imul
xor
xchg
mov
cmp
jmp
arpl
inc
aam
and
sbb
cmp
add
adc
(bad)
inc
inc
fcomp
inc
mov
jg
aaa
xor
(bad)
sub
xor
aaa
clc
mov
nop
div
inc
rcl
cmp
dec
ins
cmp
daa
iret
jmp
cmp
rcr
sbb
pcmpgtw
outs
retf
sbb
xor
dec
pop
in
sub
push
out
push
arpl
lods
lds
mov
scas
arpl
hlt
in
mov
mov
mov
jg
pop
mov
dec
cmps
mov
xchg
fadd
dec
mov
add
push
jnp
icebp
cmp
sti
lea
sub
(bad)
jnp
iret
sbb
fwait
dec
jmp
push
(bad)
in
pusha
xlat
sbb
mov
mov
in
add
or
xor
dec
xor
pop
int
jo
retf
clc
pop
add
fadd
scas
imul
push
lock
xchg
fs
pushf
lock
push
lock
pop
aaa
clc
jl
sbb
mov
add
iret
nop
cmp
fwait
push
cmp
fstp
xor
xchg
mov
pop
popa
rol
popa
add
inc
cdq
and
pop
shl
sub
cld
cld
inc
lea
add
movs
jb
push
and
popf
xor
push
or
dec
sar
xor
cmc
aaa
mov
add
cmp
je
or
xchg
stos
ja
je
dec
mov
(bad)
nop
dec
sub
and
sbb
nop
cmp
addr16
sub
out
popf
adc
mov
iret
(bad)
nop
in
dec
push
jge
lahf
cmps
lea
fcmovu
cmp
and
cmp
and
ret
add
aam
shl
into
or
pop
xchg
mov
nop
fidivr
es
je
or
xchg
mov
daa
adc
jle
sti
sub
mov
dec
or
test
enter
lock
test
ficom
and
call
test
leave
cdq
push
lahf
call
add
icebp
jge
adc
push
sub
and
xor
cmp
sub
push
pop
ret
inc
sub
jb
pop
or
adc
into
repz
aad
ds
jne
loopne
adc
fs
mov
push
lock
add
push
sbb
xor
sti
dec
inc
jo
add
cmps
test
add
pop
push
ins
push
or
cmc
or
or
test
pop
add
push
pop
fidiv
test
dec
adc
dec
add
adc
push
and
movs
push
sbb
jle
and
push
dec
fwait
dec
arpl
push
icebp
jmp
mov
(bad)
outs
fnstcw
rol
es
dec
icebp
rcl
sbb
rcl
nop
sbb
(bad)
xchg
push
adc
mov
mov
ret
dec
rol
fisttp
cld
mov
pusha
cwde
mov
sahf
cwde
mov
cwde
or
jecxz
xchg
adc
xor
mov
push
add
retf
ret
mov
and
mov
sub
pop
add
outs
xchg
xchg
mov
inc
sbb
test
mov
imul
mov
add
jge
adc
add
xor
or
imul
iret
cmp
out
and
adc
je
test
aaa
adc
xor
lock
aam
or
scas
and
cmp
fisttp
cmps
fld
mov
pop
inc
ror
into
test
mov
mov
adc
inc
mov
rcr
pop
add
mov
xchg
test
test
sub
movs
push
hlt
mov
je
(bad)
sti
xor
sbb
in
je
pop
push
mov
xchg
sbb
jmp
xchg
add
or
mov
(bad)
inc
(bad)
dec
or
ins
shl
and
and
or
sbb
push
sbb
pop
fnsave
push
ins
out
test
sbb
jmp
mov
jbe
dec
test
push
daa
dec
sub
cmps
inc
loope
je
test
add
add
retf
(bad)
imul
jne
add
sbb
movs
imul
or
inc
and
inc
pop
add
push
das
and
inc
jge
scas
fcomp
fs
cmp
jle
loopne
dec
mov
fucomi
ret
add
sti
push
cmc
pop
xor
push
add
pop
sbb
mov
ror
add
sbb
add
push
(bad)
movs
or
push
enter
or
test
repz
xor
and
mov
les
pop
mov
push
scas
push
hlt
add
dec
or
mov
xchg
mov
rol
int3
jmp
dec
(bad)
cmc
push
mul
ss
inc
pop
dec
mov
leave
mov
xchg
xlat
jno
push
and
sub
jne
hlt
cmps
adc
sar
mov
sub
push
push
shl
xchg
push
fbstp
lahf
push
inc
push
mov
mov
inc
dec
dec
add
fldenv
add
jnp
fimul
jno
mov
push
popa
lahf
jecxz
sub
cmp
test
add
cmp
xchg
scas
iret
rcl
xacquire
pop
xor
mov
xor
ds
out
xchg
add
nop
outs
jb
test
rol
test
mov
mov
or
ret
sub
or
and
jns
scas
jo
cmp
test
loope
nop
mov
and
(bad)
inc
mov
popa
add
jmp
sub
add
out
(bad)
mov
or
stc
pusha
add
leave
aam
jne
pop
sub
xor
mov
or
or
int3
inc
or
sub
sub
mov
jo
ins
and
test
or
rcl
mov
aas
mov
xor
add
sbb
fs
sub
push
test
adc
jmp
inc
fbld
stos
dec
arpl
in
sahf
push
arpl
xchg
add
add
add
idiv
cmp
jle
pushf
mov
sub
add
aaa
dec
push
xchg
or
pop
sbb
pop
dec
pop
add
push
adc
inc
dec
push
push
fnop
sub
cmp
dec
jp
xchg
sub
dec
pop
in
popa
pop
lahf
dec
sbb
jl
add
lods
cmp
push
in
imul
jg
cmps
arpl
int
mov
sbb
inc
cmp
mov
pop
add
cmp
inc
xor
(bad)
jmp
sbb
test
out
xchg
mov
mov
xabort
rcr
adc
fcom
add
xchg
or
push
push
(bad)
jmp
or
or
jl
dec
fisubr
test
or
inc
cli
or
jp
jmp
push
mov
sbb
and
xor
push
xchg
inc
arpl
mov
loopne
data16
sub
hlt
inc
ins
push
ja
out
push
adc
adc
mov
adc
jb
xlat
xor
mov
sbb
mov
push
outs
pop
ret
sub
cmc
mov
ja
mov
cmp
and
or
ret
and
sbb
push
push
sbb
push
rol
and
sub
push
mov
jae
pop
aam
push
cmp
mov
fcomp
push
adc
in
inc
mov
xchg
call
add
loopne
mov
xchg
jnp
fwait
add
xchg
fst
push
add
cmp
mov
mov
inc
cs
shr
sub
sar
jg
mov
pop
lods
mov
loop
cmp
mov
mov
inc
push
or
cmp
add
add
cmps
add
push
mov
add
jo
jo
(bad)
pusha
add
mov
jnp
stos
and
mov
cmps
mov
ud0
jmp
cmp
das
lea
sbb
push
mov
add
ins
adc
aaa
ins
add
mov
inc
pop
mov
adc
mov
into
ds
nop
push
inc
push
adc
push
push
pusha
aam
imul
nop
cmp
stc
inc
add
das
jge
outs
dec
pusha
mov
mov
les
mov
xor
pusha
dec
dec
aas
jle
xor
or
mov
or
adc
shl
adc
sahf
daa
pop
dec
push
jns
not
adc
adc
mov
dec
or
out
xor
imul
cmp
mov
mov
das
xchg
pushf
in
(bad)
mov
mov
adc
add
in
add
cld
cld
mov
mov
pop
arpl
repnz
push
jo
lahf
push
and
mov
mov
or
inc
xchg
mov
aaa
xchg
pop
dec
inc
pop
mov
xchg
mov
adc
ret
lods
xor
or
xchg
enter
lea
push
and
jae
call
pushf
iret
mov
push
push
test
in
pop
inc
jl
fbstp
cmp
inc
add
ret
imul
adc
adc
mov
cmps
jl
push
dec
add
dec
mov
dec
test
stc
movs
push
xchg
ss
jns
adc
outs
jo
popf
ret
mov
movs
inc
call
clc
add
inc
jnp
jmp
jecxz
add
adc
and
gs
scas
inc
xor
nop
add
std
adc
addr16
push
xchg
out
push
add
adc
or
js
xadd
dec
add
dec
inc
or
dec
pop
fiadd
scas
lea
jmp
xchg
test
jns
pop
imul
ins
mov
test
pop
and
adc
out
mov
push
push
or
sub
push
enter
(bad)
in
xlat
in
and
xor
inc
or
inc
repz
inc
jge
add
ficom
sub
mov
lods
xchg
cmp
in
stc
popa
add
cmp
add
lods
sbb
add
add
jns
stos
outs
sub
add
(bad)
add
jo
stos
sub
sub
add
add
mov
dec
ja
add
mov
mov
pop
popa
sub
inc
std
xor
mov
ins
pop
popa
add
(bad)
mov
jp
int
aad
cmp
xor
xchg
jo
dec
dec
cmp
dec
div
adc
or
sbb
ret
loope
nop
sti
aas
xchg
push
in
push
mov
call
cmp
xlat
add
rcl
cmp
adc
push
and
sub
in
(bad)
pop
adc
or
add
inc
push
or
add
lock
clc
add
xchg
(bad)
repnz
or
push
pop
xchg
ins
icebp
jge
push
inc
add
es
cmp
sbb
jmp
cmps
arpl
add
dec
add
icebp
outs
stos
inc
adc
mov
add
sub
adc
jp
pop
daa
shr
test
add
aam
sub
jge
jne
adc
rcr
test
fwait
pop
mov
mov
ucomiss
jne
pop
cmp
jmp
xor
jns
jmp
lods
ins
retf
test
jge
add
das
cmp
xor
test
add
lock
fnsetpm(287
mov
inc
push
pushf
xchg
and
or
pop
add
rol
pushf
fiadd
push
rol
std
cmps
jl
push
mov
mov
push
or
jne
xor
inc
jecxz
xchg
(bad)
js
cmp
mov
mov
mov
hlt
jnp
xor
iret
sbb
sub
lahf
mov
stos
lock
dec
jb
fidiv
jnp
loop
or
pop
push
aam
into
mov
in
hlt
push
mov
push
outs
mov
(bad)
pop
scas
out
dec
loop
mov
mov
xlat
jnp
mov
add
mov
xor
xchg
ss
test
xor
jne
outs
dec
inc
fidiv
popf
sbb
rol
cs
mov
in
daa
fst
cmp
stos
sub
es
add
adc
sub
pop
sbb
mov
or
mov
or
das
jno
in
sbb
jnp
mov
fistp
js
and
fadd
addr16
out
cld
mov
clc
jmp
add
ds
adc
xlat
pusha
dec
movs
shl
jmp
xchg
nop
xlat
(bad)
adc
test
retf
adc
mov
xchg
mov
shufps
adc
cld
inc
clc
lea
add
sub
adc
fs
mov
pop
push
and
mov
unpckhps
test
movs
(bad)
leave
gs
sbb
stos
lods
test
xchg
retf
mov
pushf
cwde
add
cmp
or
into
jl
shr
sbb
les
fstp
xchg
add
div
test
and
pop
add
mov
cmp
test
and
add
test
mov
push
or
and
imul
retf
adc
inc
scas
rol
xchg
xchg
inc
and
(bad)
pusha
mov
imul
imul
cld
xchg
and
lock
xchg
sub
aas
imul
mov
add
mov
jmp
cmp
mov
nop
ret
sbb
lods
gs
xor
xor
mov
stos
frstor
sahf
rcl
pop
sub
pop
sbb
or
dec
cmp
arpl
stos
mov
mov
scas
dec
gs
ror
xchg
cmp
jmp
leave
cmp
sbb
sar
ret
inc
and
leavew
pcmpeqb
sub
cdq
ror
fstp
daa
data16
xor
fdivr
in
loopne
pop
dec
jmp
dec
cmp
jb
adc
mov
leave
f2xm1
mov
mov
iret
ret
jecxz
cmp
sub
test
sbb
mov
loope
gs
inc
(bad)
ret
sbb
les
popa
or
scas
cmp
movs
jo
push
rol
out
mov
fnstsw
out
jmp
enter
(bad)
jmp
sbb
push
add
daa
push
iret
shr
sbb
hlt
push
mov
add
movs
sub
add
je
or
mov
popa
or
cld
xchg
dec
in
add
(bad)
inc
add
inc
add
fxam
repnz
out
cmp
sbb
xchg
pop
in
dec
fsub
push
cmp
add
xchg
ret
pop
fistp
(bad)
sub
xchg
mov
scas
inc
dec
mov
fist
shr
sbb
dec
scas
in
sbb
fwait
xchg
jge
and
pop
aam
push
mov
mov
scas
mov
pop
inc
dec
xchg
push
ret
add
sub
adc
jmp
pop
sbb
enter
fmul
xor
cmp
movs
fist
es
sahf
xchg
sbb
sbb
lock
fadd
jb
imul
and
xor
aaa
stos
mov
js
push
stos
add
ffree
sub
jno
add
sbb
cmps
mul
dec
popa
or
pop
mov
icebp
dec
adc
push
xlat
mov
pop
jmp
aas
xor
pop
fist
sbb
lods
pop
mov
push
mov
pop
aaa
dec
xor
lock
or
ror
or
xchg
xor
dec
aad
enter
inc
jg
das
movs
and
pop
call
cmp
popa
push
(bad)
and
or
test
inc
cmps
aaa
hlt
hlt
lock
data16
enter
test
pop
xchg
mov
xor
cwde
ret
mov
adc
mov
mov
outs
leave
ret
(bad)
inc
mov
into
sub
ret
wrmsr
call
ret
dec
iret
out
xchg
or
fistp
fdiv
xor
repz
push
ror
ja
fs
or
push
aas
jbe
pop
test
sub
pop
mov
(bad)
adc
loope
test
cmp
jb
aas
push
sti
xor
adc
ret
xor
out
cmp
je
dec
scas
mov
sub
jae
cmp
imul
push
sbb
outs
cs
jmp
dec
rol
add
scas
fucom
lods
jl
arpl
add
add
adc
sbb
xchg
add
add
mov
in
scas
loopne
pop
scas
jb
dec
xor
ret
or
dec
mov
cli
and
pcmpgtd
cmps
pop
or
dec
sbb
add
add
and
retf
xchg
fimul
mov
sbb
mov
pop
inc
mov
or
push
add
adc
fild
xchg
dec
pop
hlt
jne
xchg
and
imul
jmp
icebp
dec
pop
ret
mov
test
inc
dec
sete
or
inc
jb
inc
loope
ficom
(bad)
dec
les
dec
push
(bad)
cmp
fbstp
test
cmp
bound
leave
pop
xchg
lock
dec
scas
fist
mov
fsubr
inc
pop
mov
add
and
js
pop
mov
fist
push
movs
retf
xchg
push
imul
mov
fcom
xchg
and
fiadd
in
cmp
loopne
jge
mov
dec
imul
jmp
push
add
adc
cmps
cmp
push
pushf
pop
inc
or
mov
in
inc
popf
jmp
outs
cwde
movs
cwde
sbb
rcr
dec
arpl
pushw
jbe
loopne
sub
ins
adc
xor
movs
sub
gs
cli
pop
xchg
and
or
mov
rcl
xchg
hlt
xchg
inc
mov
add
xor
retf
adc
or
adc
pop
add
lock
clc
je
sbb
scas
mov
sub
dec
inc
jmp
fwait
adc
movs
rcl
test
test
sub
or
mov
sub
ror
dec
ret
pop
cli
movs
xchg
aam
rcl
mov
aad
jne
out
dec
in
rol
xchg
xadd
clc
or
xchg
js
cs
stc
sub
xor
xor
cmp
push
sar
and
je
mov
push
outs
aam
pop
das
add
imul
dec
nop
mov
mov
xor
push
add
daa
ja
cld
call
pop
ja
in
aaa
jp
or
push
in
lods
xchg
mov
mov
test
add
push
jne
or
sbb
xchg
lods
sbb
or
repz
dec
add
or
daa
jns
xor
lahf
or
jbe
and
ja
mov
add
jmp
jae
adc
add
cmp
xor
inc
arpl
inc
or
xlat
hlt
adc
jns
adc
cwde
pop
lods
test
outs
mov
mov
int3
jg
push
ds
(bad)
adc
call
push
inc
or
jge
cmp
fdivr
cmp
dec
cli
and
popa
nop
xchg
cmps
lock
lock
dec
or
cmps
call
out
(bad)
shl
mov
stos
pusha
mov
inc
inc
and
jge
push
rcr
and
fnsave
inc
sbb
xchg
mov
int
push
ins
pop
add
xor
iret
pop
pusha
arpl
xchg
dec
hlt
fdivr
ror
dec
es
pop
(bad)
loopne
add
cmp
and
in
hlt
lahf
(bad)
jl
test
mov
or
sar
adc
out
adc
sbb
in
sub
push
lea
push
or
dec
add
inc
rcl
std
mov
mov
test
ds
les
adc
mov
(bad)
jle
aaa
stos
adc
or
and
cmp
lods
ss
jne
jmp
sub
jmp
sbb
movs
xchg
mov
sbb
pop
in
imul
and
dec
inc
xchg
push
adc
cli
stos
not
cmp
pop
(bad)
mov
adc
xlat
imul
xchg
(bad)
xabort
and
adc
add
je
dec
mov
mov
test
cmp
cld
add
cmps
rol
call
ret
lds
jmp
lea
mov
cmp
fidiv
cmp
push
and
push
add
sub
sbb
sbb
add
adc
leave
inc
pop
loop
rol
sbb
mov
ret
mov
xor
adc
pop
push
cld
int
cmps
sub
test
push
sub
xlat
rol
and
push
jne
cmps
jnp
je
leave
sbb
dec
test
add
fcomp
lods
das
fstp
cmp
mov
fbstp
repnz
lahf
jecxz
mov
and
cdq
or
push
xchg
fs
mov
je
(bad)
mov
aas
rcr
or
fidiv
add
shl
hlt
and
arpl
push
lea
adc
pop
xor
test
inc
repnz
xlat
dec
(bad)
repnz
outs
lock
sub
push
dec
jne
out
mov
clc
and
mov
jbe
test
mov
iret
in
push
loope
(bad)
cmp
hlt
and
int3
push
add
shr
sbb
sbb
push
std
jo
pop
mov
or
cmps
or
adc
nop
xor
and
je
pop
push
sub
cs
pop
mov
push
jno
mov
pop
inc
add
clc
pop
xor
fbld
test
cmp
loopne
push
adc
or
jmp
jl
lods
and
dec
rol
xor
fsubr
dec
daa
add
adc
ret
push
les
jne
ret
mov
repnz
clc
inc
add
scas
push
adc
adc
inc
adc
sbb
mov
mov
test
add
add
lahf
out
add
or
add
add
or
add
inc
or
jns
jns
arpl
pop
mov
dec
or
outs
inc
push
aam
and
mov
fld
mov
inc
mov
scas
mov
jno
dec
je
add
aaa
cmp
je
mov
cmp
jae
jg
sbb
and
add
push
lea
rol
je
or
mov
xor
movs
add
cmp
pop
(bad)
cmp
inc
rcl
mov
jecxz
pop
pop
test
adc
fmul
dec
adc
test
sbb
(bad)
sub
out
cmp
fstp
loopne
and
add
xchg
pusha
test
(bad)
mov
add
or
and
dec
inc
mov
add
shl
mov
ins
inc
or
pop
sbb
cli
sub
mov
xchg
loope
sahf
pop
loopne
loopne
das
or
mov
sbb
cmps
jp
inc
adc
dec
jmp
or
ret
cmp
outs
arpl
pop
lods
mov
add
adc
in
add
inc
adc
mov
cmp
int
dec
adc
pop
mov
sub
cmp
mov
pop
ds
and
mov
sbb
dec
push
dec
inc
shl
adc
enter
xor
(bad)
in
and
popf
mov
mov
add
adc
adc
cmp
sbb
clc
ja
lods
xchg
push
mov
mov
push
adc
sbb
(bad)
shl
and
mov
or
add
push
test
mov
mov
push
xchg
mov
mov
arpl
ret
push
xchg
and
push
mov
mov
aaa
lods
pop
shl
pop
outs
inc
(bad)
and
cmps
dec
inc
or
xor
cs
pop
push
jmp
and
test
jmp
pop
lods
push
add
xchg
retf
cmps
mov
dec
add
xchg
fwait
add
hlt
xor
adc
fnstsw
mov
mov
adc
(bad)
xor
mov
dec
and
call
adc
mov
mov
xchg
scas
je
mov
push
mov
jle
mov
mov
mov
nop
nop
pop
adc
push
pop
cmps
xchg
cmp
mov
adc
shr
mov
adc
pusha
jo
ja
sub
pop
adc
test
cmc
sbb
ror
in
inc
sbb
retf
push
push
pushf
sub
inc
mov
lods
sub
cmps
add
mov
ret
xchg
mov
imul
es
mov
jmp
sbb
aam
fadd
cmp
sub
int3
packssdw
dec
sbb
or
fist
sub
mov
sbb
push
mov
jg
mov
inc
adc
je
sbb
ins
pop
sub
loope
les
inc
imul
call
test
or
mov
das
lods
xor
sub
je
push
mov
jecxz
push
mov
arpl
xchg
xchg
pop
mov
xchg
mov
movs
pop
mov
sub
xchg
and
aaa
mov
push
add
xor
cwde
xor
aam
mov
rol
jmp
cmp
cmp
sub
push
test
push
adc
or
or
loop
repnz
fwait
or
pop
loop
lahf
stos
add
mov
outs
mov
gs
pop
or
fdiv
or
adc
retf
in
mov
sub
inc
add
pop
mov
sbb
jle
cmp
out
cmp
js
scas
jge
mov
or
aas
jg
hlt
outs
popa
add
xor
dec
es
(bad)
push
pop
mov
mov
push
dec
mov
popa
xchg
pushf
mov
leave
lahf
cs
or
clc
mov
jo
fisttp
adc
sbb
mov
xor
leave
mov
and
add
xor
repz
push
fcomp
je
out
adc
xchg
test
xor
and
sub
xchg
xchg
xor
or
ret
aaa
sub
ss
push
xchg
mov
test
cmc
adc
(bad)
mov
in
sbb
out
test
pusha
sbb
cmp
sahf
leave
bound
stos
ror
push
xchg
sub
jns
out
daa
pop
sbb
push
aaa
sbb
add
test
test
add
cmp
xor
inc
repnz
(bad)
push
or
sar
add
xor
xchg
push
lods
adc
mov
(bad)
xchg
aam
dec
mov
or
mov
in
pop
push
rcr
ss
or
xor
adc
sbb
and
sub
dec
add
shr
xor
dec
push
push
or
ret
pop
mov
sub
je
push
adc
xlat
enter
in
call
test
inc
cmp
data16
inc
jecxz
ficom
add
adc
jns
inc
stos
test
sub
or
mov
mov
jle
adc
cdq
push
clc
or
jmp
sub
add
dec
add
adc
test
add
imul
in
dec
push
fisub
push
nop
addr16
jle
add
mov
push
xor
cmp
outs
sti
cmp
retf
xor
xchg
jae
sub
cmp
hlt
lea
adc
adc
jle
sbb
sub
mov
xor
sbb
xchg
xchg
push
pushf
aas
add
popa
cmps
in
add
adc
sub
mov
gs
or
iret
sar
int
rol
wbinvd
(bad)
dec
dec
dec
add
and
outs
sub
cmp
and
add
sar
sbb
gs
or
sub
movs
mov
cwde
pop
jne
addr16
shr
xor
adc
lahf
in
shr
in
cmp
call
mov
dec
or
xchg
in
cmp
repz
jge
xchg
ja
add
push
mov
sbb
jl
dec
in
and
xchg
jl
dec
in
fadd
add
stos
popa
dec
(bad)
sbb
je
repnz
rcl
in
out
fsubr
dec
out
leave
and
inc
mov
cs
out
sbb
xor
mov
pop
and
add
(bad)
dec
mov
shl
mov
and
scas
adc
pop
and
jl
inc
push
ret
int3
imul
add
out
sub
jmp
loope
lock
aas
or
add
loopne
jmp
inc
pop
and
jbe
fisubr
or
jae
inc
or
inc
lock
cmp
call
call
call
push
pop
pop
xchg
and
nop
xor
rcr
sahf
or
enter
and
scas
(bad)
jl
add
add
push
call
add
mov
mov
add
and
jnp
sbb
mov
(bad)
out
adc
cmc
xor
(bad)
cmps
push
movs
xchg
loope
or
lea
outs
xchg
push
inc
push
addr16
nop
pop
mov
outs
xor
or
adc
scas
pop
repnz
and
xor
sub
or
xor
or
adc
repnz
dec
pop
jo
or
stos
mov
jp
mov
daa
les
jl
ror
icebp
ret
clc
add
mov
imul
adc
imul
xlat
popf
inc
pusha
movs
pop
gs
add
push
mov
pop
clc
add
cmps
xchg
xor
pop
mov
sbb
dec
dec
in
bound
(bad)
(bad)
pop
xor
push
test
call
sub
ds
mov
mov
xor
ss
push
push
dec
jne
loope
or
adc
fistp
je
adc
or
add
jae
sahf
push
jmp
fild
jae
inc
and
mov
rol
push
imul
call
push
sbb
cmc
pop
cmps
fs
add
or
nop
mov
and
push
addr16
adc
and
test
data16
push
jb
add
mov
push
inc
push
mov
inc
ret
and
inc
add
push
xchg
pop
fnstsw
mov
pop
add
inc
push
or
dec
xor
imul
cdq
xchg
lods
or
adc
push
js
inc
or
and
mov
xor
or
cli
inc
jne
and
sbb
or
js
sbb
add
push
mov
pop
mov
ja
pop
and
mov
es
fs
and
sbb
pop
shl
test
add
pop
push
xchg
inc
popf
cmp
nop
push
or
mov
lds
push
fst
sahf
sbb
mov
xor
add
aas
fs
jmp
mov
xchg
sub
dec
xlat
cmc
scas
adc
inc
punpckhbw
lea
add
bound
imul
xchg
imul
adc
fldenv
dec
mov
loopne
cmp
adc
nop
push
inc
enter
xchg
or
cmp
jge
(bad)
out
add
sbb
mov
sub
jne
and
mov
mov
xchg
push
push
or
inc
hlt
add
jge
xchg
dec
pop
sub
mov
dec
pop
adc
lods
pop
xchg
and
push
pushf
mov
inc
leave
iret
xor
ret
pushf
add
test
cli
dec
push
push
out
in
aad
sbb
sub
pop
mov
jbe
push
adc
daa
push
and
cmp
inc
inc
ret
push
jg
mov
and
or
pop
(bad)
sbb
push
retf
rcl
pop
mov
xchg
jnp
nop
mov
pop
or
dec
bound
call
aaa
adc
cmp
xlat
cli
sub
shl
or
add
repnz
xlat
in
loopne
hlt
add
test
movzx
xchg
jp
sub
in
jo
add
jmp
rcl
and
jo
shl
dec
out
push
or
push
dec
jmp
add
jne
add
outs
jb
pop
sti
push
push
daa
mov
sahf
shl
dec
push
jle
cmp
int3
cmps
lods
jmp
mov
jo
ret
push
inc
scas
mov
jmp
popa
pop
add
inc
retf
scas
pop
push
mov
adc
pop
push
adc
bound
ss
outs
mov
add
sub
nop
dec
stc
sub
dec
inc
xor
and
sub
and
xchg
(bad)
adc
add
xor
sbb
dec
popf
jge
add
pop
or
add
push
cs
retf
jg
bound
add
vmovmskps
dec
push
jl
add
jb
in
add
inc
or
rcr
stos
add
and
lahf
movs
xchg
add
addr16
loopne
cwde
sub
in
pop
add
pop
add
call
or
push
push
dec
mov
add
jns
and
push
or
popf
inc
push
mov
pop
push
push
xor
leave
cwde
ret
pop
loopne
push
lock
jge
enter
mov
add
push
(bad)
stos
mov
sti
xchg
shr
add
ror
hlt
mov
scas
arpl
mov
sub
(bad)
or
sar
bound
mov
dec
and
pmaxsw
jnp
jp
jp
cmp
pop
dec
movs
sub
and
dec
cld
inc
icebp
mov
sbb
xchg
das
add
mov
cmp
stos
xor
icebp
mov
or
xchg
mov
sub
call
dec
adc
cmp
test
movs
je
test
add
jg
mov
ss
pop
and
addps
sub
xchg
or
mov
adc
and
adc
pop
dec
sub
mov
or
pop
fnop
rcl
jl
or
add
xor
jp
adc
mov
dec
fnstsw
mov
add
add
mov
xor
xor
fiadd
dec
dec
pop
push
sbb
ret
mov
les
sbb
dec
dec
ror
movs
fbld
fmul
in
adc
outs
pop
jae
bound
iret
jnp
add
cmps
add
sbb
push
inc
imul
or
pop
jno
adc
data16
test
jb
push
sub
int
push
das
push
xor
xor
mov
aam
retf
cmps
jge
inc
daa
adc
fimul
addps
jl
stc
or
arpl
mov
cwde
stos
mov
je
add
(bad)
xchg
imul
lods
les
outs
jo
and
sub
shl
or
jmp
stos
dec
dec
pop
and
stos
lock
daa
adc
scas
xor
repz
pop
sbb
pop
fwait
mov
jge
dec
pusha
repz
sub
out
retf
dec
dec
les
add
mov
xlat
push
pop
rol
lods
fcomp
push
jae
or
mov
lock
test
mov
dec
mov
mov
retf
adc
pop
sar
out
fist
inc
xor
adc
int
pop
inc
cmp
lods
adc
dec
loopne
test
iret
sub
jmp
and
adc
cmp
add
(bad)
(bad)
sti
nop
xor
test
and
mov
fist
stos
icebp
xchg
(bad)
pop
and
daa
xor
cmp
pusha
rol
adc
fist
inc
and
or
lea
fs
mov
jo
mov
(bad)
push
test
cmps
jmp
xor
jo
test
setae
sbb
or
add
pop
inc
jl
cs
add
jo
daa
push
sub
fisttp
add
stc
arpl
dec
push
ret
xchg
add
sbb
stc
les
sub
sub
dec
ins
push
adc
in
leave
cmp
jbe
xchg
cmp
rcl
in
in
or
sub
cmp
lock
mov
and
or
hlt
int
mov
idiv
cmp
jge
daa
dec
pop
sbb
cs
xchg
and
or
out
pop
push
mov
mov
mov
or
sub
cwde
cmp
mov
shr
sub
xor
push
mov
xchg
inc
dec
sub
enter
gs
dec
and
and
fs
push
scas
add
mov
retf
pusha
or
shl
fmul
sub
call
push
adc
or
xor
pop
ret
and
xchg
fdivr
das
jmp
sbb
jns
cmc
mov
and
call
fsub
xchg
fisub
ficomp
in
xor
or
out
lahf
lock
add
call
push
add
repnz
xchg
adc
call
and
push
enter
and
(bad)
scas
jmp
cdq
ficom
fsubr
(bad)
cmp
enter
fadd
add
fidivr
mov
leave
and
dec
dec
dec
shl
mov
ror
add
ins
or
mov
daa
dec
shr
out
push
or
add
dec
add
add
int3
or
xchg
jl
nop
cmps
shl
aaa
add
and
enter
int3
or
and
or
and
or
add
adc
xor
shrd
test
clc
mov
xchg
lock
cdq
sub
add
ficom
xor
test
pop
jl
pusha
fs
cmps
add
jb
call
ret
jbe
movs
pushf
sti
adc
push
cmp
shl
test
mov
cmps
mov
dec
repz
lods
mov
repz
jg
pop
mov
push
in
adc
int3
mov
mov
push
mov
add
push
ins
xchg
dec
pop
leave
mov
jg
in
adc
inc
test
xor
dec
sub
dec
call
and
pop
inc
mov
and
movs
loope
cs
and
(bad)
mov
sbb
inc
sbb
dec
inc
imul
add
pop
xor
ins
ja
ficomp
loop
cdq
mov
fwait
pop
xor
mov
push
sub
in
or
xchg
iret
and
mov
daa
mov
and
xchg
dec
or
push
adc
or
push
arpl
inc
test
das
retf
xor
sub
sub
push
jb
add
out
mov
pop
push
cmp
enter
or
and
jecxz
mov
inc
test
push
out
in
es
hlt
retf
inc
push
cdq
mov
in
hlt
pop
cli
ins
and
and
(bad)
fs
hlt
js
inc
jo
test
loope
fwait
xchg
fisub
mov
test
lea
and
push
fdiv
adc
in
hlt
xchg
rol
outs
mov
inc
inc
fcmovnu
dec
inc
div
scas
and
and
das
ins
pop
push
rol
scas
pop
adc
jmp
sub
or
fisub
cmp
push
sbb
mov
hlt
rcl
hlt
loopne
adc
xchg
jne
adc
cld
ret
imul
pusha
mov
nop
pop
and
jbe
inc
or
mov
sub
jno
adc
push
test
or
imul
xor
fdiv
xor
neg
or
dec
popa
sti
push
in
cmp
or
(bad)
sub
in
inc
push
and
jo
pusha
xor
ficom
sub
mov
push
xor
sub
pusha
mov
cwde
push
pop
or
sbb
mov
mov
cmp
test
out
sbb
add
sbb
jmp
leave
sub
js
add
mov
push
sub
or
jecxz
sub
sbb
and
cs
cld
jne
dec
ret
mov
test
pop
das
push
mov
xchg
xchg
ins
jb
or
jo
or
int3
and
xor
cmp
xor
inc
adc
xor
xchg
test
mov
or
imul
push
inc
push
xor
syscall
or
pop
adc
js
js
push
cmp
pop
mov
jne
movs
sbb
sub
jne
sbb
addr16
and
and
cld
dec
das
push
gs
push
out
pop
test
das
push
xor
xor
cs
cs
(bad)
dec
push
sti
push
out
push
cmp
cli
mov
retf
add
in
nop
mov
add
inc
es
mov
inc
pop
push
push
xor
xor
pop
dec
sub
push
pusha
inc
cmp
xor
rcl
pop
out
cmps
pusha
retf
push
add
push
and
add
mov
mov
lock
xchg
add
test
mov
retf
adc
jne
xor
dec
xchg
sub
adc
jne
mov
adc
lahf
mov
sbb
or
or
adc
push
ret
sbb
push
dec
dec
xchg
rol
test
cs
sbb
dec
loopne
xor
push
pop
sbb
push
push
je
test
mov
punpcklbw
mov
cmp
adc
add
add
jmp
or
xchg
out
sbb
inc
ret
in
mov
mov
or
add
int3
shr
inc
dec
in
inc
cmp
jnp
inc
cs
bound
or
jo
(bad)
push
mov
and
iret
push
mul
push
je
add
or
adc
push
cmc
xor
mov
sub
add
inc
test
shl
cmp
mov
add
lock
add
arpl
aam
fsubr
pop
(bad)
scas
xlat
imul
adc
retf
sub
dec
pop
pushf
scas
add
sub
dec
mov
push
or
fld
and
add
dec
nop
dec
dec
push
jns
push
jmp
gs
xchg
and
mul
xchg
adc
mov
ss
pop
sub
jo
add
xor
push
xchg
adc
jo
add
or
or
pop
xchg
inc
addr16
ret
mov
add
mov
inc
jge
adc
inc
xor
sub
add
rcl
sbb
xchg
push
add
pop
xor
xor
ror
jg
inc
pusha
sub
aad
ja
ret
or
enter
mov
xor
push
cmp
pusha
leave
add
inc
and
cmp
popa
push
fild
push
mov
fwait
and
push
stc
(bad)
cmps
fidivr
mov
push
add
or
ins
pop
inc
outs
in
addr16
(bad)
int3
(bad)
rol
sbb
cmp
jne
pop
cmp
and
xchg
sub
inc
add
dec
shl
push
inc
mov
aas
ja
adc
xchg
test
dec
out
cwde
jg
popa
adc
daa
imul
add
and
adc
xor
lods
cmp
cwde
or
gs
jmp
ds
or
or
xchg
mov
or
imul
repnz
sbb
(bad)
and
mov
adc
test
gs
dec
jge
adc
fiadd
cmp
push
int
or
cmp
mov
and
add
and
outs
push
sub
jbe
repz
pop
aaa
pop
pop
js
push
sbb
sub
inc
inc
fdivr
pusha
adc
repnz
icebp
push
call
xor
lock
and
push
adc
sti
movs
jge
test
cmp
xchg
push
mov
inc
mov
mov
push
or
cwde
sbb
in
std
add
fidiv
rcr
rol
in
test
cmp
mov
push
mov
push
xchg
sub
jo
mov
or
repnz
sti
ins
mov
int3
enter
or
mov
push
dec
inc
addr16
es
add
cmp
lock
add
and
cmp
cs
fild
inc
adc
add
shr
pop
mov
cdq
sbb
movs
js
aas
cmp
sub
adc
mov
xchg
dec
push
xlat
sub
pop
mov
call
jne
inc
and
dec
pusha
add
fs
cmp
loop
push
and
test
rol
sbb
ret
inc
push
or
push
retf
adc
push
daa
or
test
adc
jb
add
xchg
or
sub
mov
pushf
dec
les
lods
dec
pop
pop
push
or
jmp
std
jne
cmp
dec
dec
pusha
cmp
(bad)
iret
xor
sbb
leave
xor
inc
dec
int
mov
fimul
movs
inc
outs
xchg
enter
mov
int
lds
mov
dec
add
add
pop
je
unpcklps
jecxz
adc
cmp
imul
or
je
dec
mov
ja
lods
pop
sbb
inc
add
add
add
add
test
jecxz
adc
adc
add
adc
adc
or
sub
xchg
cmp
xor
loop
jne
fwait
push
lahf
rcr
fild
jmp
dec
ins
add
jns
mov
add
or
sbb
loopne
scas
lock
jns
fsub
xchg
nop
dec
scas
jmp
daa
cmp
cmp
inc
sub
mov
or
add
movs
out
vpshuflw
cmc
dec
daa
and
loope
jb
daa
dec
sub
jmp
or
out
nop
mov
adc
pusha
mov
cmp
not
psubw
jge
xlat
clc
or
or
je
dec
cmp
push
lods
push
or
out
cmp
push
jg
jne
xor
push
aaa
fist
xchg
es
inc
push
cmp
test
xlat
inc
pop
js
ins
or
lods
push
in
add
pop
push
out
push
ret
sub
repz
pop
rcl
call
loopne
loopne
add
add
push
mov
popfw
xchg
sub
adc
or
sub
fistp
(bad)
(bad)
dec
fwait
mov
fwait
xchg
ret
or
adc
jmp
inc
and
or
lahf
movq
or
fwait
aas
outs
sbb
push
xor
stos
dec
repnz
add
rcl
and
sbb
xor
(bad)
pop
sbb
sbb
pop
push
add
sbb
add
aaa
sbb
cmp
in
and
fisttp
test
pop
mov
fisubr
sahf
inc
fild
jl
dec
fwait
jns
out
out
cmp
fild
mov
icebp
adc
add
add
inc
add
(bad)
in
push
imul
adc
and
or
jbe
fist
push
xchg
push
add
cmps
into
mov
sbb
mov
aam
sub
(bad)
rcl
sub
mov
jmp
inc
in
pop
mov
add
jg
movs
adc
adc
and
add
shl
cmp
add
scas
fist
add
add
or
call
pusha
xor
inc
cmp
or
lds
int
jl
dec
add
mov
inc
dec
pop
pop
push
add
mov
das
sti
loopne
push
(bad)
and
dec
mov
popf
or
sbb
lock
add
push
scas
xchg
adc
adc
xor
ret
or
push
stos
dec
cmp
ja
inc
stos
pop
or
movs
xor
push
stc
sbb
repz
clc
mov
cmp
(bad)
ret
rcl
cdq
push
(bad)
add
dec
sbb
xlat
push
fcmovu
add
sar
mov
xchg
nop
retf
inc
cmp
out
xchg
cmp
into
and
out
test
pop
pop
gs
sbb
enter
scas
ins
movs
fld
push
fadd
dec
call
aam
xchg
fwait
mov
aam
mov
sbb
(bad)
out
adc
nop
sub
dec
and
and
sbb
dec
inc
xchg
dec
push
sbb
add
xor
std
stc
shr
xchg
mov
cmp
inc
or
inc
mov
mov
adc
and
lock
aaa
mov
sbb
sbb
rcl
rcr
or
xchg
pop
sar
xlat
cmp
jg
push
aam
fsubr
sub
jmp
adc
ins
or
loopne
and
fnstcw
lock
fcom
test
and
xchg
pop
in
add
test
cmp
arpl
movs
fadd
aam
inc
mov
xor
xor
pop
and
jae
ss
push
out
xor
push
in
or
xor
push
clc
clc
movs
mov
sbb
(bad)
push
and
push
sar
mov
adc
cmp
or
(bad)
ja
dec
loopne
or
call
and
and
add
add
mov
aaa
push
mov
adc
int3
adc
ror
ins
cmp
jmp
xchg
call
jmp
fistp
inc
dec
cmp
jo
inc
and
fadd
dec
push
loopne
leave
adc
xchg
inc
sub
cmp
cmp
jae
fcomp
in
sar
jmp
aad
sub
or
push
lock
fwait
loopne
mov
jb
push
jb
mov
adc
in
into
mov
jb
sbb
adc
nop
js
or
mov
ss
retf
or
sar
xlat
or
add
in
and
xchg
test
add
pop
sbb
mov
adc
xor
stc
daa
add
fidiv
xchg
xor
push
in
test
sti
add
daa
or
xchg
lock
pushf
sub
imul
in
cmp
bound
sub
add
retf
or
mov
adc
mov
or
sbb
sub
xor
sbb
call
nop
add
inc
mov
or
mov
pop
inc
adc
imul
sub
cmp
jbe
dec
cbw
mov
mov
mov
add
je
rol
div
outs
sbb
ja
sub
rol
cmps
cdq
loopne
in
push
and
jb
hlt
mov
enter
nop
nop
add
or
cmps
mov
daa
outs
cmps
and
ror
sti
add
push
inc
push
inc
push
(bad)
in
repz
idiv
ror
ins
sub
ja
ror
cld
sub
xchg
mov
out
test
imul
add
or
jmp
sar
arpl
aad
mov
add
push
aad
xchg
outs
jge
xlat
push
enter
cdq
mov
add
enter
ror
enter
push
jge
cmp
or
fsub
pop
and
xor
loop
or
add
dec
adc
jb
add
inc
enter
test
je
sub
add
mov
sub
adc
and
shl
sbb
xor
add
dec
or
dec
lahf
jo
push
cmc
movs
and
hlt
pusha
pop
sbb
jo
sbb
adc
cmp
add
in
and
mov
mov
inc
sbb
push
add
add
mov
add
imul
xor
dec
sbb
lds
add
dec
push
je
sub
in
dec
add
add
inc
(bad)
dec
cmp
push
push
inc
lahf
cli
or
xor
sbb
test
push
clc
outs
jo
mov
sbb
(bad)
mov
hlt
daa
mov
frstor
mov
or
enter
mov
push
sub
mov
out
xor
mov
or
aam
fdivrp
push
fild
out
shl
sti
test
push
or
inc
add
add
cmp
xor
sbb
cwde
mov
aam
dec
jne
xchg
and
idiv
xchg
hlt
sub
fmul
je
in
xor
and
bound
inc
gs
or
jb
dec
or
dec
xor
call
and
or
jg
cdq
or
xchg
movs
js
mov
sbb
scas
scas
addr16
sbb
xor
cmp
cmp
jne
sbb
inc
lds
and
dec
test
jge
add
sbb
jne
jmp
aad
xchg
fbld
dec
pop
cmp
gs
jmp
loop
xor
adc
push
je
jmp
sbb
inc
imul
and
inc
retf
movs
adc
or
xchg
dec
ror
add
jo
cmp
repz
sbb
cmp
add
sbb
adc
xchg
and
add
inc
in
pushf
sbb
dec
pop
sbb
test
jecxz
dec
jne
mov
movs
shr
aam
or
arpl
psubq
and
sbb
bound
pop
sub
loopne
ja
pusha
push
cld
or
stos
icebp
fwait
stos
or
or
leave
mul
xchg
out
push
add
inc
or
mov
lahf
ss
add
push
rol
jne
es
repnz
push
mov
mov
add
mov
shr
in
rcl
dec
cmps
in
xor
in
or
hlt
inc
out
cmp
cwde
mov
sub
inc
pop
adc
jb
in
mov
mov
into
pop
movs
pop
cmp
jbe
or
xchg
inc
jg
scas
mov
test
cli
add
gs
out
mov
push
xchg
inc
cmps
mov
fnstcw
push
dec
aaa
dec
jo
repnz
adc
cmp
push
pop
and
inc
push
push
aad
or
sbb
and
jb
push
fcmovne
inc
add
push
xor
enter
mov
retf
inc
and
sbb
xor
mov
push
jbe
inc
sbb
mov
call
xor
or
or
stc
nop
arpl
out
push
fadd
jb
sti
xor
(bad)
icebp
nop
inc
push
ret
inc
ret
aad
or
jno
inc
and
fisub
or
adc
inc
jle
sahf
mov
pop
aad
or
sahf
push
add
dec
dec
sbb
repnz
push
pop
pusha
pop
repnz
sbb
add
and
and
ret
jb
imul
fadd
sub
xchg
cmp
inc
test
popf
mov
xchg
xchg
and
imul
sar
test
push
js
cmps
mov
pop
js
or
jb
ret
inc
pop
aas
repz
fwait
mov
addr16
ds
inc
push
dec
mov
xor
cmp
sub
sub
fcmovbe
arpl
imul
mov
stos
dec
sub
xor
and
fiadd
sar
pop
rol
push
stc
int3
or
dec
add
mov
ja
dec
xchg
movs
in
into
push
sbb
and
add
and
sub
xor
cmp
xor
and
push
or
iret
jecxz
sub
jnp
jmp
fldcw
xor
mov
out
xchg
pop
addr16
cmp
ins
pop
inc
inc
xchg
and
xchg
jno
mov
jns
iret
pop
sbb
inc
pop
out
push
or
or
sbb
sbb
mov
jne
xor
or
out
inc
mov
and
push
adc
or
out
add
pop
pushf
inc
ds
add
pushf
pop
adc
push
push
dec
xlat
xor
inc
pushf
push
call
push
push
adc
add
test
jmp
xchg
xchg
add
xor
dec
push
xor
das
stc
enter
sub
in
mov
mov
mov
aad
retf
enter
fmul
or
jno
rol
push
lahf
pop
xchg
sub
lods
jge
ja
fidiv
adc
push
call
push
ret
push
inc
pop
mov
pop
and
fmul
(bad)
call
mov
pop
rol
mov
push
mov
add
ins
mov
xor
mov
femms
add
adc
into
scas
pop
or
and
pop
in
pusha
jle
inc
adc
gs
pop
inc
inc
or
add
mov
or
and
sbb
bound
int3
cmp
dec
outs
bound
leave
fidivr
and
(bad)
int
xchg
les
jo
push
push
add
fadd
outs
and
pop
pop
or
cmp
dec
popa
rol
push
pop
fisubr
jae
sub
or
add
mov
shl
sub
mov
jb
call
test
adc
or
inc
xor
movs
and
sub
xor
inc
adc
and
xchg
or
xchg
or
mov
int
mov
or
dec
stos
or
ins
(bad)
js
mov
push
test
inc
cwde
push
cdq
mov
fwait
sub
mov
push
pop
pop
std
adc
adc
fisttp
adc
pop
mov
setl
popa
lea
adc
sbb
arpl
les
scas
(bad)
jno
xchg
push
add
retf
addr16
adc
xchg
jmp
retf
and
adc
daa
or
popf
pop
adc
imul
add
sub
inc
jno
cmp
mov
adc
adc
leave
add
push
in
sbb
lea
xchg
mov
mov
xor
test
out
and
repnz
and
outs
add
(bad)
pop
jmp
xchg
adc
enter
inc
je
nop
xchg
mov
push
adc
stos
jecxz
lahf
sbb
int
sbb
or
push
add
dec
mov
or
mov
cmp
and
or
loopne
test
mov
mov
xchg
inc
in
cmps
imul
and
mov
sub
dec
rol
inc
inc
(bad)
call
test
fiadd
add
add
cdq
xor
mov
pop
cld
or
xor
mov
pop
and
inc
inc
test
and
out
aaa
rol
retf
mov
js
sub
rol
sbb
mov
ret
pusha
bound
jg
add
add
and
inc
sub
pop
jp
xchg
ret
sbb
and
inc
fs
mov
leave
and
fs
popa
gs
pusha
add
ins
cmc
sub
ret
and
jecxz
ret
gs
pop
(bad)
mov
sar
int3
jmp
xchg
lods
sbb
aas
fmul
dec
xchg
xor
adc
test
test
ret
push
lock
push
xchg
inc
mov
outs
sbb
cmp
push
fist
(bad)
or
inc
mov
pusha
das
shl
dec
in
ins
mov
fwait
adc
clc
(bad)
enter
fs
add
mov
mov
pop
mov
les
in
adc
push
out
int3
out
jp
mov
lods
and
mov
je
aas
xchg
xor
lods
sbb
pop
xor
jmp
push
jmp
mov
jmp
mov
jmp
mov
jmp
int
jmp
fdivr
cmovs
push
jmp
mov
jmp
inc
es
add
and
sbb
call
enter
mov
push
movs
add
xchg
xchg
jb
dec
enter
test
xor
test
sub
lods
and
and
loope
in
xchg
enter
ret
pop
sub
cmp
(bad)
in
add
xor
add
in
dec
out
mov
cmp
out
pop
js
mov
jnp
test
inc
les
(bad)
sub
dec
mov
sbb
pop
aas
movs
lahf
inc
call
mov
sbb
test
ret
retf
sar
sub
mov
or
pop
jo
pusha
bound
mov
jnp
movs
sub
cmp
pushf
xchg
dec
ret
cmps
lea
sub
adc
pop
add
jmp
push
cmp
pop
stos
mov
popa
cmp
ret
shr
xor
mov
dec
pop
es
pusha
xor
hlt
int3
fldenv
adc
add
dec
xor
dec
xchg
adc
dec
pop
aam
enter
cwde
xchg
xor
inc
shl
inc
out
or
inc
loope
lock
mov
dec
jge
inc
lods
in
pop
dec
xlat
js
sub
adc
pop
in
mov
(bad)
add
add
sub
lahf
xchg
fimul
test
jbe
and
cmps
jg
loop
test
or
add
xchg
dec
and
sbb
call
or
push
mov
jmp
mov
sbb
xor
or
xor
sub
sbb
sbb
test
inc
xchg
lock
push
dec
sub
pushf
add
cs
sbb
cmp
imul
clc
clc
call
push
or
or
inc
js
xchg
inc
cs
lock
int
add
mov
scas
call
(bad)
pusha
dec
mov
xchg
or
inc
push
and
ror
push
xchg
popa
loope
push
cmps
enter
arpl
dec
or
xor
push
pop
les
xchg
pop
xor
or
mov
(bad)
shl
push
pushf
fsub
test
retf
xchg
sbb
cs
lds
jae
lock
and
rcr
cs
sbb
daa
cmp
or
mov
retf
inc
es
mov
mov
movs
test
das
or
fwait
xchg
(bad)
or
mov
test
les
mov
sbb
mov
cmc
or
dec
lods
sbb
stos
dec
out
and
inc
cmc
push
inc
mov
xchg
add
or
lds
in
clc
push
arpl
lea
cmp
push
xor
xchg
aam
pop
xchg
movs
xchg
xchg
xchg
mov
push
pop
pop
les
inc
add
push
jb
pop
fbstp
cmp
imul
adc
in
fsubr
push
sbb
and
(bad)
xchg
(bad)
(bad)
mov
cmp
inc
sbb
jmp
repz
sbb
inc
or
shl
aad
or
test
mov
lods
retf
xchg
popa
push
sub
mov
xchg
mov
call
cwde
hlt
or
outs
test
ret
inc
imul
sub
pop
xor
jmp
mov
push
sub
sbb
sbb
cmp
cmp
ror
fdiv
popf
and
loope
lock
xor
arpl
add
cmp
cmc
sbb
add
dec
pusha
test
(bad)
pusha
movs
dec
enter
dec
or
add
dec
xchg
clc
pop
and
dec
data16
jle
sub
ins
pop
adc
push
dec
jmp
ss
xchg
test
sub
dec
pusha
mov
push
adc
dec
push
dec
inc
pop
imul
mov
jns
xor
xchg
add
lock
loop
or
clc
sbb
add
mov
ins
push
add
inc
popa
mov
ins
add
or
out
mov
cld
jae
push
imul
adc
and
movs
or
cwde
sbb
and
and
push
and
or
inc
sub
mov
xor
fist
iret
movs
imul
lahf
adc
sub
jne
jne
test
daa
or
aaa
hlt
nop
rol
dec
loope
and
ja
and
imul
sub
dec
mov
(bad)
cld
add
daa
hlt
das
pop
mov
bound
pusha
dec
push
pop
dec
bound
aaa
ins
das
out
adc
adc
cmps
cmp
pushf
xchg
jle
cmp
imul
mov
clc
push
adc
ins
pop
pop
imul
mov
pop
push
add
ret
mov
add
pop
mov
mov
pop
push
fiadd
ror
push
dec
jg
lods
add
cmp
add
out
xor
ret
or
or
pop
add
dec
dec
ds
and
pop
push
lods
jmp
retf
scas
or
or
arpl
aaa
jo
pop
loope
adc
adc
pop
add
fs
cmp
stc
nop
xchg
repz
imul
ins
clc
push
or
imul
imul
shr
pusha
imul
lods
shl
fld
add
pop
inc
push
js
test
or
cmps
pop
dec
aas
jb
(bad)
or
add
add
sub
ins
adc
je
mov
adc
xchg
pop
sub
cmp
mov
pop
push
xchg
fisttp
or
inc
and
fdiv
je
sbb
imul
inc
ins
dec
jae
addr16
loope
fstp
aas
add
sub
jmp
sahf
xor
dec
fmul
push
jne
div
aam
pop
pop
add
aam
mov
mov
rol
push
inc
cmp
jle
arpl
mov
xor
pop
xlat
ret
add
or
inc
pusha
pusha
lahf
cld
sbb
retf
aas
add
cld
and
cmp
xor
add
add
jmp
dec
jb
cwde
and
jbe
or
ss
in
in
push
in
test
inc
adc
sub
cmps
dec
pusha
test
sti
nop
ret
mov
lea
adc
or
or
push
cmp
ficomp
lea
and
sbb
jmp
dec
adc
push
jmp
add
adc
or
cmp
push
shr
pusha
push
cmc
push
push
iret
push
rcr
ins
loopne
or
dec
in
jo
cmp
add
movs
push
xchg
nop
mov
mov
dec
fbstp
popa
push
ss
ja
add
sbb
sub
lahf
std
push
mov
add
xor
and
push
or
jae
pop
nop
sub
add
aam
jg
cmp
add
xchg
sbb
push
pop
dec
pop
xchg
unpcklps
jno
cmp
jmp
pop
(bad)
xchg
add
mov
mov
dec
in
hlt
and
sbb
sbb
sti
add
mov
jne
sub
ins
sub
fucom
(bad)
aas
push
call
or
xchg
jl
imul
push
adc
dec
movs
inc
popa
repnz
sub
leave
xchg
inc
lock
fist
cmps
lods
mov
les
test
or
adc
pop
movs
js
repz
dec
fcom
adc
jge
or
inc
inc
in
xor
xor
pusha
mov
retf
xchg
mov
ins
and
pop
stos
sub
mov
movzx
out
xlat
outs
ror
jbe
jno
dec
data16
stc
fnstsw
or
inc
add
xchg
enter
sbb
adc
shl
inc
xchg
lock
and
dec
mov
sub
mov
ins
leave
add
mov
pop
std
sub
jg
jns
push
movs
jg
adc
adc
cmc
add
push
add
ret
leave
aam
mov
das
push
push
retf
jnp
push
cdq
mov
or
adc
push
sub
xchg
movq
mov
enter
cmp
(bad)
add
push
adc
mov
adc
mov
inc
jns
out
ret
or
jne
sar
mov
lds
jbe
cmp
xchg
and
mov
xabort
les
iret
cmps
mov
add
cmp
test
imul
push
sub
xchg
in
mov
cmp
mov
mov
xchg
add
inc
dec
ss
push
stc
test
mov
dec
pop
in
jge
add
or
jp
and
sub
mov
adc
cs
addr16
loop
js
lea
sub
push
hlt
adc
dec
repz
add
in
mov
inc
add
mov
ins
jmp
jne
movs
jo
mov
cmp
jmp
add
push
fcomp
and
push
rcl
cld
add
in
pop
sbb
bound
sbb
and
or
push
(bad)
fsubr
popa
test
inc
test
inc
jbe
ret
pop
bound
addr16
push
in
inc
clc
cmp
dec
fst
mov
sbb
pushf
jmp
add
aad
and
dec
add
lea
or
addr16
arpl
and
jo
push
lea
loopne
push
fwait
aas
popa
enter
mov
xlat
sub
in
jbe
cmp
rol
dec
lods
repz
add
jle
mov
clc
jb
mov
or
ins
xor
pop
shr
adc
sub
inc
push
sbb
add
pop
stos
and
jl
inc
les
popa
add
sbb
jbe
daa
ror
shl
and
outs
jnp
mov
adc
dec
adc
add
push
adc
test
mov
out
dec
add
cmps
cmp
sbb
popa
jns
jb
jle
out
sahf
mov
inc
xor
sub
dec
daa
into
mov
push
in
cli
or
pusha
add
ror
int3
imul
adc
imul
mov
fmul
mov
popa
sbb
call
lods
jne
lods
add
in
or
cwde
adc
ja
(bad)
shl
xor
add
fwait
in
js
push
loope
jmp
in
neg
ss
inc
call
out
mov
pop
or
out
xor
or
in
xchg
sahf
sub
(bad)
dec
sti
or
adc
push
jmp
movsx
dec
movzx
mov
bnd
lea
pop
lods
mov
add
inc
mov
test
adc
cwde
dec
gs
xor
cmp
adc
in
imul
sbb
je
adc
add
mov
jb
xor
jle
loop
cmp
cmp
test
fmul
push
sub
adc
add
xor
adc
jb
dec
or
jge
pop
sbb
dec
inc
or
mov
pop
ret
imul
cdq
loopne
xchg
push
stos
loopne
retf
add
aad
mov
and
rcr
mov
sbb
adc
inc
xchg
mov
mov
push
test
sbb
inc
inc
stc
or
add
sbb
jnp
inc
and
jnp
inc
stos
add
sahf
(bad)
mov
sbb
call
add
rcr
ins
add
out
inc
mov
push
mov
dec
push
push
push
ja
jnp
jecxz
sub
inc
in
mov
jnp
add
pxor
(bad)
dec
mov
mov
pop
outs
inc
mov
cli
test
pop
mov
pop
pushf
xchg
inc
aas
pusha
add
daa
push
inc
sbb
adc
sbb
jge
enter
ja
(bad)
(bad)
sub
mov
jo
dec
mov
outs
retf
mov
pop
sbb
add
div
sub
inc
pop
push
add
adc
inc
hlt
or
je
pop
sub
push
inc
jle
push
add
ins
sub
push
int
mov
jl
jg
jle
sbb
je
or
cwde
outs
ss
leave
test
(bad)
clc
inc
jle
pushf
inc
test
in
pop
adc
pop
imul
ffree
ja
dec
xor
iret
dec
bound
mov
adc
jnp
je
cdq
add
sub
sub
cmp
and
lahf
inc
pop
mov
add
xchg
inc
cld
inc
das
sbb
pop
jge
fcomp
fimul
push
dec
fsubr
add
add
sbb
push
pop
je
inc
dec
mov
pop
add
pop
or
rcr
add
or
fist
or
mov
push
imul
and
push
adc
cmp
push
mov
cmps
not
mov
aaa
xor
sbb
xchg
test
retf
lea
or
jge
daa
push
and
push
(bad)
or
jl
sub
fld
test
scas
sub
xor
lock
sbb
int3
and
pop
scas
dec
mov
cmc
iret
cmp
and
sub
movs
inc
imul
cmp
push
adc
imul
sub
inc
push
loopne
shl
cmp
ror
dec
push
adc
adc
push
cld
dec
test
fs
and
in
jb
dec
pop
cmp
cmp
test
enter
pop
or
pop
nop
aaa
aam
dec
movs
mov
and
xchg
shl
fst
xor
gs
test
push
fcmovbe
inc
dec
jg
xor
in
in
mov
bound
jae
mov
cmp
add
add
sbb
gs
ret
xor
bound
popa
ret
adc
lds
jbe
pop
fadd
nop
sbb
add
and
and
test
sbb
cmps
pop
pop
sbb
ficomp
xor
push
cmp
jns
add
or
in
pop
inc
scas
and
sbb
movs
and
lahf
xlat
push
ficomp
es
push
hlt
adc
in
dec
test
mov
(bad)
test
cmp
sbb
inc
shl
push
or
sbb
loopne
xchg
and
call
cdq
stc
sysret
mov
dec
adc
je
and
and
and
cwde
add
fsubr
out
sbb
repnz
dec
out
test
les
sub
sbb
sbb
arpl
ins
pop
push
je
outs
std
sbb
xor
xchg
popf
or
and
sub
jmp
rcl
inc
inc
outs
outs
xchg
adc
out
push
xchg
xchg
fcomp
cmc
sahf
out
push
lods
jb
push
outs
psubw
pop
test
push
add
adc
push
jo
push
xor
push
add
push
pop
out
in
lods
mov
sub
dec
mov
cld
pop
repnz
dec
rcr
push
loopne
mov
hlt
mov
loopne
push
or
xlat
div
mov
mov
outs
in
mov
cmc
jge
(bad)
fsub
push
lock
call
repnz
push
add
push
ss
mov
cdq
outs
popf
push
in
pushf
mov
inc
cmps
shl
push
push
ins
jo
in
ins
std
push
call
add
cmps
nop
ror
(bad)
xor
jmp
mov
sbb
sar
arpl
ret
inc
fs
dec
xor
add
mov
sub
js
popa
ds
add
fwait
pop
loope
dec
inc
dec
fld
add
push
push
pop
or
and
movs
mov
push
leave
push
xchg
pop
xchg
cwde
call
cmp
popa
or
or
push
cmps
loopne
loopne
loope
enter
pop
or
movs
jno
dec
or
rcl
mov
mov
mov
gs
sub
mov
mov
jno
push
out
mov
sbb
outs
pop
xor
iret
dec
add
neg
rcl
xor
mov
imul
dec
in
sub
push
not
push
xor
jmp
jns
ret
jecxz
dec
ret
scas
in
xchg
push
xor
dec
sbb
ret
sub
or
(bad)
adc
inc
xor
sub
fwait
dec
sbb
add
jp
adc
dec
test
xchg
js
xor
popa
ins
pop
js
xchg
or
xlat
fcomip
and
dec
clc
in
mov
add
add
sbb
inc
add
pop
lods
adc
mov
and
iret
add
inc
jge
dec
mov
cmp
stos
dec
ret
call
jns
or
int
stc
call
or
mov
shl
in
rcl
fucom
pop
mov
sub
jle
add
xchg
inc
test
jno
xchg
clc
jb
push
push
dec
inc
or
sbb
adc
ret
js
or
jae
add
daa
loopne
jmp
inc
pop
sub
add
jnp
sub
fdivrp
dec
sub
popf
in
xor
cmp
mov
dec
dec
lock
aam
push
pop
mov
lea
test
and
add
lock
cwde
add
adc
jl
dec
sbb
inc
mov
loopne
mov
je
adc
test
sbb
xchg
ret
mov
popa
retf
ja
cmp
mov
test
js
lods
movs
push
cmp
sub
sbb
push
add
dec
movs
cmp
cs
add
inc
loop
xor
add
sbb
jbe
adc
pushf
(bad)
xchg
hlt
ret
jge
xor
mov
sbb
(bad)
xchg
sub
lahf
call
dec
les
inc
push
sbb
in
enter
scas
mov
dec
xchg
sub
push
sbb
cmp
add
inc
arpl
adc
inc
bound
aad
out
fidivr
sub
sbb
pop
add
xor
(bad)
cmp
sbb
sub
lock
cmps
mov
inc
jl
jecxz
jmp
add
lds
mov
xchg
addr16
cmp
or
fbld
test
push
div
stc
rcr
sbb
and
rol
iret
cmp
fldcw
test
push
pop
test
adc
ret
inc
adc
push
sti
mov
push
adc
mov
cmp
(bad)
movs
cld
or
cmp
shl
sub
mov
xor
xchg
fst
cmovo
(bad)
xor
imul
adc
clc
add
ss
and
or
dec
lods
pop
aaa
dec
adc
aas
add
or
aam
sbb
pop
or
mov
pusha
shl
xor
or
je
cmps
or
adc
add
add
int3
out
xchg
sub
pushf
mov
add
test
rcl
int3
test
ins
xor
xchg
dec
nop
pushf
jg
pusha
jmp
mov
js
div
out
popf
or
push
outs
mov
jge
mov
jg
push
mov
push
mov
out
das
add
adc
scas
in
test
dec
shr
test
lock
or
sbb
or
pop
adc
push
imul
test
dec
xchg
add
add
push
add
add
mov
ret
and
push
mov
mov
inc
cwde
push
push
mov
add
cmp
dec
cmp
rol
repnz
cmp
or
mov
popa
inc
cmovnp
or
je
mov
pinsrw
adc
nop
popa
jno
xlat
sub
rcl
xchg
xchg
sbb
add
repnz
es
xchg
or
imul
scas
inc
xchg
push
jo
jo
xor
or
fnstsw
je
imul
xchg
add
lahf
pop
or
test
fs
ss
ins
jmp
daa
xor
and
cmp
or
xchg
int3
inc
ret
jne
xor
jge
loope
icebp
int
pop
adc
and
xchg
dec
jns
pop
add
retf
sbb
pop
inc
push
adc
jbe
sbb
imul
or
in
push
xchg
fdiv
das
(bad)
push
sub
inc
sub
les
add
jl
mov
mov
or
sbb
inc
loop
mov
leave
jmp
sub
mov
pavgw
add
push
retf
pop
cmp
leave
xor
inc
push
lods
push
mov
or
call
inc
jne
and
mov
mov
enter
mov
lods
dec
cmp
xchg
dec
pusha
stos
dec
dec
enter
xchg
dec
inc
xchg
dec
jno
(bad)
jmp
mov
loop
fs
pop
adc
fcom
pop
jmp
gs
lds
xchg
add
or
or
outs
adc
js
adc
les
push
or
pop
mov
adc
and
rol
test
fst
mov
add
(bad)
push
test
xchg
add
nop
xor
pusha
sub
xchg
xor
dec
xor
call
pop
and
mov
pop
imul
test
(bad)
out
pop
outs
push
jns
cmp
and
inc
cs
xchg
js
sub
iret
mov
push
cli
pop
sub
inc
xlat
shr
inc
xor
mov
dec
xchg
rol
mov
dec
pop
out
ror
test
fadd
test
jb
add
add
popf
and
mov
dec
test
mov
or
pop
mov
stc
movs
mov
jo
ror
cmp
jo
xor
enter
mov
cmpxchg
mul
test
cmp
repz
jmp
sbb
inc
ss
aas
rol
jb
call
dec
js
mov
lods
outs
fild
stos
jns
xchg
sub
sbb
inc
sbb
adc
int
imul
inc
popf
push
inc
pop
mov
daa
add
(bad)
call
and
ins
ss
inc
add
add
mov
or
rol
pop
sbb
cmp
fs
push
mov
fwait
dec
lock
add
je
lods
xor
push
enter
add
fistp
fsub
inc
pop
adc
iret
out
mov
jl
jmp
pcmpgtb
lock
les
(bad)
xchg
cdq
loope
(bad)
pop
js
jnp
ins
pushf
test
inc
es
das
inc
and
loopne
in
pusha
xchg
dec
int
add
mov
push
fsubr
shr
dec
xchg
pop
out
push
push
and
inc
dec
loop
scas
mov
je
mov
cmp
xchg
out
inc
or
ins
in
addr16
inc
icebp
add
das
xchg
pop
je
jp
add
adc
popf
add
repnz
sahf
dec
ret
push
stos
xor
adc
push
pop
push
in
add
xchg
add
add
stos
push
or
or
dec
xlat
adc
or
pop
iret
(bad)
jmp
push
pop
or
adc
dec
jb
sub
imul
iret
or
enter
and
ins
jb
popa
push
std
adc
ret
jecxz
add
mov
mov
aam
mov
sbb
cdq
add
mov
add
rol
or
outs
lods
inc
sub
lahf
add
push
pusha
mov
scas
fnsave
lahf
pop
adc
pop
test
inc
push
imul
mov
dec
add
dec
test
xor
add
iret
inc
movs
mov
imul
inc
imul
or
mov
addr16
sub
and
jmp
add
test
mov
or
adc
dec
pop
out
or
adc
adc
jns
cld
rcr
sbb
loope
mov
mov
xchg
jnp
out
sbb
cmp
sbb
adc
pop
dec
nop
push
repnz
mov
movs
and
adc
bound
sbb
ins
add
pop
cmc
bound
push
ss
stos
xchg
jb
mov
fisub
pop
dec
cmp
nop
loopne
xchg
sbb
mov
xchg
fwait
nop
movs
in
enter
xor
and
mov
shl
push
cmps
pop
sub
push
lea
popf
loop
inc
leave
cmovnp
dec
mov
add
or
and
mov
inc
rol
adc
xor
rol
dec
xor
xor
mov
cmp
cmps
and
and
xor
xchg
mov
adc
arpl
das
mov
test
mov
imul
inc
dec
pusha
mov
mov
push
movs
push
xor
dec
mov
adc
xchg
pop
jle
in
(bad)
pop
xchg
sub
push
adc
ror
dec
(bad)
dec
cld
ins
sub
in
cmc
pop
mov
push
imul
jae
adc
sub
pop
ror
and
retf
ror
jmp
xchg
inc
sub
scas
cmp
add
fmul
sub
jns
pop
sub
(bad)
add
ins
jl
pop
and
mov
out
cwde
xchg
call
adc
adc
sbb
xlat
inc
call
pop
pushf
lods
push
cmps
or
rol
scas
js
xchg
rol
iret
add
movs
xor
dec
cmp
cmp
test
(bad)
cs
cmp
popf
dec
cmp
push
dec
mov
inc
retf
ss
(bad)
inc
imul
aaa
ret
add
cdq
push
adc
in
jg
std
add
lock
sbb
mov
sbb
les
push
ins
xor
cmp
ins
sub
iret
dec
shl
in
aaa
out
xor
adc
jae
adc
push
adc
mov
xor
and
es
mov
adc
and
jmp
arpl
icebp
sbb
sub
cwde
mov
add
sub
add
in
push
sbb
or
mov
gs
or
or
inc
and
clc
pop
stc
mov
cmp
ins
jmp
add
stc
rcl
test
inc
and
add
push
scas
and
mov
shl
fwait
sbb
xor
xchg
sub
pop
test
xchg
sub
push
ja
jne
xor
(bad)
mov
bound
xor
jns
jnp
in
or
(bad)
dec
jb
add
jns
or
dec
mov
push
or
mov
pop
inc
add
xchg
pop
jl
les
daa
das
dec
or
dec
movs
lods
push
inc
adc
dec
fisubr
add
mov
fstp
pop
mov
pop
les
aam
shl
fcmovne
xchg
jmp
pushf
adc
fadd
shl
inc
ins
xchg
gs
stc
cmp
mov
push
int
jo
or
sar
cmp
je
cwde
fsubr
add
mov
jo
jg
sub
jo
outs
dec
push
adc
push
or
push
pop
imul
lods
push
je
mov
xor
add
aad
mov
(bad)
iret
inc
pop
ror
loope
mov
retf
shr
xor
mov
push
xor
std
xor
mov
mov
mov
retf
dec
loop
fdivr
add
inc
pop
push
sbb
xchg
call
ins
add
stos
push
adc
fimul
movs
push
lea
xchg
inc
cmp
outs
iret
cmp
mov
rcl
and
xor
mov
mov
inc
xchg
jge
add
mov
jns
(bad)
mov
call
or
clc
mov
or
ss
loope
mov
mov
enter
gs
ins
sbb
out
mov
sbb
in
push
sub
push
fiadd
xchg
inc
and
sbb
cmp
or
inc
fstp
jl
cmp
stos
sbb
cld
push
mov
jmp
xchg
cmp
in
nop
movs
add
pop
sbb
push
xor
sbb
(bad)
mov
aaa
in
dec
jne
and
mov
jl
fisttp
push
mov
loope
add
sub
jmp
daa
shr
lea
test
pop
or
jne
adc
arpl
pop
(bad)
ss
and
mov
xor
xchg
sar
jns
mov
or
adc
add
inc
shl
mov
gs
mov
xchg
mov
(bad)
adc
sub
gs
mov
sub
xchg
jno
(bad)
bound
(bad)
cdq
jmp
adc
push
sbb
or
push
jno
push
sub
pushf
gs
fadd
and
xchg
and
lea
mov
sbb
sub
inc
je
test
adc
clc
xchg
adc
and
mov
out
aad
adc
xor
xor
mov
add
data16
inc
in
mov
shl
loopne
jmp
out
cmp
jns
and
fisttp
adc
or
aaa
frstor
arpl
mov
sbb
xor
test
and
ins
lods
enter
out
push
mov
mov
xchg
pop
shr
jb
inc
pushf
add
add
or
fcomp
leave
mov
sbb
(bad)
icebp
push
dec
push
inc
adc
or
xor
mov
iret
lock
mov
rol
leave
push
xor
cmp
cld
movs
xor
mov
in
bound
sub
pop
mov
test
bound
xor
xor
jnp
stc
movs
pop
sbb
scas
jo
and
sub
jmp
gs
popf
push
(bad)
jl
ret
fdivr
dec
mov
cld
xlat
mov
or
add
lods
int
or
int3
add
dec
inc
scas
xchg
mov
leave
loope
xor
sub
adc
lods
(bad)
cmp
xchg
cmc
dec
(bad)
cs
xchg
xchg
(bad)
jae
jne
xchg
xchg
xchg
jbe
js
js
add
mov
sahf
add
das
pop
mov
cs
jne
sub
pusha
lds
and
dec
nop
(bad)
fidivr
push
test
hlt
nop
pop
aaa
add
inc
jbe
popf
and
ins
icebp
adc
sahf
mov
sub
and
pop
push
sbb
and
cs
xor
and
out
and
pop
pop
(bad)
mov
cmps
mov
add
jmp
sub
xchg
into
cdq
mov
pop
xor
cmp
add
and
inc
fst
add
jne
xchg
cmp
leave
sub
dec
jl
les
clc
mov
sub
dec
in
jae
or
imul
call
fwait
test
mov
add
or
add
jl
cmps
jne
jne
add
push
inc
jl
mov
and
sbb
clc
adc
sub
push
rol
push
sub
dec
lods
mov
pop
xor
inc
ret
cmp
mov
mov
xchg
leave
and
ins
dec
mov
adc
adc
dec
jae
int3
pop
mov
push
(bad)
outs
ss
fiadd
das
sub
outs
cwde
shl
mov
fdivr
pop
out
in
imul
pop
xor
popf
rcl
std
fdiv
gs
pusha
add
push
mov
repnz
mov
jo
and
inc
jmp
mov
pop
xor
add
mov
enter
push
sbb
mov
and
jbe
jbe
dec
adc
add
mov
pop
jb
or
and
or
mov
adc
shl
or
add
inc
and
or
imul
xor
pop
mov
loope
ins
cwde
sbb
lods
cmp
bound
dec
lea
add
gs
ins
dec
aas
sar
jbe
inc
add
mov
in
aas
sbb
pop
movs
xchg
inc
stc
ror
inc
xor
fwait
add
ret
mov
test
ror
addr16
inc
aaa
mov
popa
int3
sbb
xchg
loope
sbb
fisub
dec
imul
sub
cmps
(bad)
xchg
js
inc
nop
xchg
gs
call
jno
dec
pop
inc
aas
adc
jno
mov
fadd
sub
pop
(bad)
fld
pop
mov
icebp
push
int3
shl
mov
push
rol
inc
xor
dec
inc
adc
xchg
sub
mov
pop
or
push
pop
ror
add
das
rol
push
dec
and
mov
lods
loope
loopne
add
test
repz
in
aaa
inc
ret
mov
cmps
lods
mov
jnp
lahf
movs
mov
mov
imul
into
call
clc
push
xchg
icebp
mov
or
mov
pop
inc
dec
(bad)
jne
and
data16
mov
dec
or
lods
xchg
sub
or
mov
fld
mov
inc
mov
adc
push
iret
mov
shl
push
jb
pop
xor
sbb
pop
mov
and
test
fs
shr
xchg
pop
add
gs
or
dec
jbe
cmp
ins
and
and
in
dec
int
imul
or
mov
sub
aam
dec
addr16
ret
jmp
mov
dec
repz
leave
and
sbb
xor
inc
pop
add
mov
test
fistp
test
jp
inc
sahf
or
pop
fadd
in
pop
in
pop
adc
dec
daa
mov
adc
lds
add
pop
sub
xchg
or
cld
pusha
adc
mov
adc
pop
fidiv
mov
cli
mov
adc
inc
sub
fld
(bad)
pop
inc
pop
dec
addr16
ror
enter
(bad)
dec
mov
das
pop
rol
and
faddp
and
and
or
jmp
and
faddp
out
fs
jnp
loope
(bad)
enter
das
inc
leave
xchg
push
mov
je
or
repnz
ror
shl
add
mov
(bad)
xchg
shl
enter
int3
and
sbb
sti
cmp
add
lds
adc
or
pop
lods
pop
rol
enter
inc
cmp
xchg
xchg
sbb
push
stos
mov
dec
ja
sbb
or
and
and
stc
enter
cwde
inc
inc
mov
add
leave
scas
js
sbb
xchg
retf
leave
pop
or
dec
cmp
ror
mov
leave
stos
cmp
scas
xchg
es
aad
or
xor
retf
pop
or
or
xchg
pop
adc
(bad)
shl
add
inc
mov
retf
jbe
and
push
and
ins
sbb
dec
in
pop
popa
jae
popa
fs
xor
pop
(bad)
retf
pop
pop
add
enter
push
int3
lahf
and
mov
in
int3
cmp
inc
xchg
inc
dec
fmul
adc
fs
jp
leave
sub
nop
pusha
pop
daa
pop
mov
in
jo
popa
mov
mov
cmp
into
es
leave
and
adc
dec
push
mov
push
js
pop
pop
inc
ret
and
lods
jo
in
mov
or
scas
aam
jo
and
add
iret
jo
xchg
inc
pop
xchg
iret
adc
shr
push
push
ror
pop
pop
pop
inc
xchg
lods
outs
popa
pusha
in
rol
shl
verr
(bad)
shl
in
pop
xor
cmps
and
push
jmp
dec
pop
pop
movs
mov
xor
pop
lahf
or
add
or
pop
ret
inc
sub
ret
jg
adc
cmp
aam
dec
js
lea
sub
or
jne
add
inc
mov
sub
or
ret
test
dec
fs
xchg
jbe
test
add
mov
cmp
enter
test
xchg
inc
or
pop
xor
nop
add
mov
adc
mov
adc
icebp
mov
fs
adc
loopne
out
push
xchg
retf
inc
inc
cld
sub
and
hlt
pop
push
add
pop
and
dec
pop
fwait
ja
ins
push
add
mov
add
aaa
sbb
pop
loope
repnz
mov
daa
and
mov
sahf
imul
push
push
jno
aam
aad
dec
mov
jmp
push
dec
sub
pushf
mov
cmp
ror
mov
sbb
fisttp
in
pop
push
mov
ins
outs
ja
dec
or
popa
aad
push
mov
pop
out
or
in
arpl
or
imul
or
jo
add
sbb
pop
or
lock
or
inc
push
cmp
fidivr
outs
ins
mov
inc
push
or
add
xor
pop
push
rcl
xor
add
dec
ja
inc
imul
aas
push
mov
pusha
jns
sbb
out
add
sbb
mov
je
ror
mov
add
push
fs
or
or
cs
or
jae
adc
sbb
or
sbb
ja
int3
xor
outs
and
sbb
pop
push
and
adc
scas
mov
bnd
data16
outs
and
dec
int3
cmp
iret
xor
sub
mov
and
fs
(bad)
pop
popa
xor
aaa
sbb
dec
push
dec
enter
inc
add
lds
ins
movlps
fadd
pop
fisub
add
rcr
jns
sbb
dec
inc
mov
dec
sub
dec
leave
xchg
pop
jns
ret
dec
fdiv
cli
imul
mov
dec
add
lahf
pop
dec
inc
or
jnp
xchg
dec
rcr
fwait
and
xor
mov
outs
test
in
movs
rcl
pop
mov
xchg
and
call
push
push
scas
xor
push
xchg
mov
mov
xor
xchg
jp
add
inc
sbb
jo
js
lock
fst
fisttp
inc
sbb
cwde
add
jnp
sub
out
or
sub
mov
mov
out
sbb
movs
es
cmp
xchg
inc
or
(bad)
mov
jg
aam
add
add
jbe
inc
outs
rcr
push
cwde
mov
jb
cmp
sub
aam
int3
clc
(bad)
fstp
push
fisttp
paddusw
mov
fadd
or
or
and
mov
mov
add
sub
push
fs
int
jns
mov
ror
rcr
mov
sbb
repnz
jb
and
add
xchg
mov
nop
and
call
push
je
mov
cdq
pusha
sbb
sub
imul
mov
ret
push
inc
add
and
add
bound
add
mov
dec
rol
ss
xlat
sbb
dec
xchg
mov
imul
pop
xor
es
xlat
pop
cmp
and
test
fs
xor
jns
in
stos
mov
push
scas
fwait
aad
jo
fld
mov
dec
repz
pushf
add
add
dec
lds
sbb
pop
loopne
push
adc
sub
cmp
repnz
(bad)
dec
xchg
lds
dec
repnz
dec
pop
cmp
fsubr
clc
jl
add
in
mov
rol
pop
xor
sub
and
or
add
sbb
fldenv
leave
int
dec
push
loop
nop
adc
leave
mov
cmp
and
adc
test
repz
enter
xchg
retf
mov
fwait
push
dec
pop
leave
loopne
mov
xor
xchg
ins
add
pop
test
fisttp
loopne
pop
shl
dec
jmp
pop
dec
add
aam
nop
inc
(bad)
cmp
adc
mov
jb
dec
add
adc
adc
pop
mov
jmp
pop
jb
mov
jmp
jmp
and
jmp
test
adc
push
sub
or
xlat
ds
or
sbb
inc
and
push
jb
jb
sbb
add
adc
add
sub
inc
dec
scas
and
xchg
pop
xor
rcr
xor
rol
push
and
mov
jb
add
jne
lds
jo
and
fs
and
sub
dec
cs
mov
bnd
mov
push
es
or
add
add
add
or
or
inc
sbb
xchg
lock
pop
push
retf
xor
out
outs
or
add
out
in
and
xchg
or
enter
adc
cmp
enter
mov
enter
dec
jb
enter
(bad)
out
adc
ss
pop
jns
mov
fild
sub
enter
xchg
mov
enter
cli
and
dec
jno
enter
mov
test
icebp
ret
movs
sbb
jmp
test
movs
cdq
cmps
jge
push
(bad)
out
mov
call
xor
hlt
outs
add
dec
nop
pop
jb
(bad)
retf
fs
pop
inc
enter
cld
ror
in
js
fmul
push
add
nop
shl
mov
inc
es
in
out
push
xchg
cmp
daa
iret
das
rcl
mov
push
cdq
test
or
push
test
call
cmps
call
les
jmp
jmp
loop
fsubp
dec
jmp
jmp
sbb
inc
mov
inc
call
jbe
and
or
inc
inc
stc
jmp
mov
aam
cmp
stc
mov
mov
fsub
mov
(bad)
mov
mov
enter
imul
or
dec
ss
push
and
jmp
ins
sbb
add
gs
(bad)
lock
(bad)
test
test
cld
fdiv
movs
pop
inc
outs
dec
dec
adc
cwde
ja
and
or
cld
imul
dec
pop
cmp
jmp
pusha
inc
push
shl
adc
imul
movs
rol
popa
ins
dec
ret
or
inc
shr
inc
inc
pop
pop
pop
cwde
jno
scas
arpl
dec
jge
inc
sub
cmp
pusha
xchg
mov
mov
pop
pushf
rcl
dec
cs
or
adc
in
pop
sbb
push
aaa
and
sbb
mov
pop
dec
in
xchg
sbb
mov
inc
mov
sub
xchg
and
inc
mov
push
imul
adc
sub
sub
adc
(bad)
and
and
xchg
adc
in
add
nop
neg
xchg
xor
dec
sti
push
sub
shl
adc
xor
and
push
fadd
test
xchg
push
add
test
pop
inc
stos
ror
test
sub
sub
test
pushf
sbb
sub
and
pop
cs
inc
call
add
inc
adc
sub
add
xor
sub
and
or
ss
dec
aaa
and
pop
push
rol
add
sub
cmp
mov
push
push
shl
xor
inc
(bad)
inc
sbb
es
mov
add
xor
jb
inc
inc
sub
enter
inc
cs
inc
inc
adc
scas
add
cmc
(bad)
or
sbb
sbb
dec
outs
xchg
mov
mov
in
sub
sbb
sbb
scas
rcr
mov
in
cmp
sbb
xchg
mov
sbb
mov
mov
fiadd
out
daa
sbb
sbb
dec
ins
mov
shl
pop
lock
sbb
sbb
imul
icebp
inc
bound
sbb
xchg
sbb
mov
add
sbb
shl
repz
repz
popf
shr
and
mov
loop
das
lsl
push
xchg
dec
mov
mov
adc
adc
sub
cmp
push
jo
loope
mov
or
add
movs
(bad)
mov
pop
mov
adc
jo
jo
inc
sahf
push
ficomp
fcom
inc
xchg
clc
fidivr
es
test
cmps
mov
cwde
xor
push
dec
imul
jbe
rol
dec
add
dec
shl
and
pop
or
sbb
or
test
fist
test
adc
xchg
pop
xchg
adc
cdq
ret
pop
adc
dec
mov
sbb
and
pop
fistp
add
in
mov
aas
mov
add
imul
cwde
int3
ds
sub
maxps
mov
test
clc
pushf
inc
repnz
sub
cmp
xor
adc
mov
stc
pop
push
int3
in
fimul
mov
ins
(bad)
aam
mov
adc
add
inc
sub
mov
outs
pop
push
lock
jb
imul
outs
leave
cmp
push
das
inc
ja
mov
jmp
push
out
or
sub
inc
inc
mov
inc
scas
sbb
add
push
bound
fld
sbb
sbb
mov
add
add
push
movs
pop
cmps
xchg
retf
pop
fs
mov
mov
or
mov
cmp
mov
mov
sub
adc
dec
scas
les
call
push
xchg
mov
cli
in
repnz
jb
dec
sahf
out
add
and
(bad)
or
cli
jae
add
pusha
add
add
inc
lock
imul
lods
pop
ins
xchg
dec
add
nop
shl
(bad)
inc
mov
retf
ins
test
pop
xchg
scas
test
cld
fisttp
and
mov
jnp
popa
mov
push
pop
leave
inc
aad
push
popf
and
enter
add
add
push
and
or
xchg
fisub
push
or
inc
and
add
mov
xor
cdq
pop
data16
inc
call
mov
mov
adc
cmp
sbb
inc
sub
mov
adc
push
add
push
cmps
xor
cmc
push
xor
imul
stc
aas
mov
ret
in
pop
aas
int
cmp
or
cmp
mov
jns
xchg
ja
or
dec
adc
jg
pop
xchg
pop
xchg
pop
dec
sbb
dec
nop
jl
sbb
fstp
rcr
clc
int
sbb
push
push
fisub
lahf
sbb
ds
pop
jno
xlat
xor
xor
ins
leave
and
imul
inc
mov
das
aaa
or
add
and
add
add
jns
sub
add
xchg
ins
pusha
test
inc
nop
cdq
inc
mov
jp
push
fdiv
fs
jmp
sub
jmp
cwde
cmp
arpl
push
add
mov
inc
sub
test
shr
dec
add
dec
fs
out
inc
btr
jg
dec
inc
fadd
add
or
xor
cmp
push
sub
scas
call
shr
mov
clc
(bad)
out
sbb
push
adc
call
jmp
out
out
jns
hlt
cs
ss
jo
or
sbb
repnz
test
cmp
cld
fsub
shr
ins
idiv
cmp
dec
call
xchg
test
mov
popa
xchg
test
push
ja
dec
call
loope
push
mov
das
ja
loope
add
pop
pusha
and
scas
ror
dec
xor
or
add
in
enter
out
adc
retf
enter
pop
mov
jl
add
jle
and
das
xchg
push
push
test
or
jno
int3
fbstp
stos
and
xchg
pop
dec
mov
loop
push
inc
xchg
aad
jl
out
addr16
adc
and
push
mov
lods
jmp
or
inc
or
hlt
test
xor
or
push
rol
add
sbb
shl
or
jbe
enter
cmp
dec
push
or
jl
not
out
scas
shl
mov
push
jge
aas
fistp
movs
mov
inc
add
add
and
in
adc
and
add
lea
xor
xchg
pop
sldt
push
inc
popa
xchg
pop
push
int3
inc
sbb
xor
mov
sbb
add
sbb
jns
add
or
imul
sub
dec
and
or
and
daa
mov
leave
stos
in
and
loopne
add
mov
sbb
das
sub
and
or
pusha
push
pop
daa
mov
sub
sbb
cs
mov
xor
inc
xor
xor
sub
xor
sub
add
fcom
bound
mov
add
mov
or
push
sub
adc
rol
xor
push
dec
pop
or
xor
mov
jb
sbb
cmp
xor
stos
leave
out
adc
xor
xor
pop
mov
fadd
or
dec
xor
xor
outs
xchg
mov
xor
xor
sbb
xor
xor
xor
xor
dec
outs
cdq
jb
xor
mov
xor
xor
push
jge
(bad)
movs
push
inc
pop
dec
push
dec
loopne
inc
xor
dec
loop
mov
cmp
arpl
sahf
mov
outs
push
pop
sub
shr
and
mov
and
out
or
movs
and
push
push
push
out
mov
in
mov
inc
adc
scas
adc
jne
adc
jnp
lock
repz
dec
adc
cmp
loopne
add
popf
dec
pusha
mov
add
into
jae
jb
mov
sbb
push
and
lock
jo
add
pushf
fwait
ror
pop
xchg
nop
ds
inc
repnz
lea
mov
fmul
sub
in
pop
xor
or
aad
sub
dec
sbb
popf
adc
sub
sub
push
sub
dec
neg
mov
and
je
or
sbb
les
xchg
xor
in
or
daa
in
loopne
jo
dec
leave
or
fisub
and
or
sbb
adc
aaa
cmp
cmp
sahf
jo
add
jo
stos
lods
jo
add
ins
add
or
sbb
inc
js
cmp
mov
push
pop
adc
rcl
std
mov
pop
xchg
jmp
sub
dec
cmp
outs
mov
dec
cwde
in
dec
inc
dec
jl
adc
jmp
jnp
(bad)
mov
rol
leave
jp
adc
and
int
and
lea
or
or
and
or
cdq
add
xor
nop
or
add
and
int3
add
cwde
stc
pop
inc
mov
popa
push
dec
ret
loope
xor
sub
pop
push
jno
dec
add
sub
mov
outs
add
add
push
cmp
add
ja
dec
mov
(bad)
mov
icebp
sub
push
loopne
fmul
pop
(bad)
cmc
or
fstp
bound
sub
add
inc
nop
test
scas
pop
imul
or
add
sbb
inc
pop
adc
pusha
and
call
dec
adc
pop
and
adc
push
pop
xchg
add
sbb
fs
pushf
adc
xor
iret
sbb
or
or
sbb
cmp
dec
in
popf
xchg
xor
in
cmp
sar
pop
adc
sbb
pop
add
adc
jo
xor
je
jb
adc
sub
push
es
cwde
push
dec
adc
jmp
bt
loopne
and
and
ret
mov
outs
and
or
sub
sub
jmp
fs
xor
sbb
(bad)
stc
push
arpl
and
sti
movs
test
adc
fwait
add
cwde
sbb
sub
and
jl
fldcw
xchg
les
fisubr
inc
sti
outs
or
and
das
xor
pop
xchg
xor
mov
xor
pop
or
lods
aaa
push
jb
or
cmp
sar
cmp
jb
cmp
fs
cmp
pushf
adc
or
jb
adc
fs
mov
fs
inc
pop
test
jb
fs
fiadd
pop
es
outs
xchg
mov
jecxz
sbb
dec
fs
mov
fs
add
and
data16
fs
mov
cld
popa
xchg
xchg
pop
in
sbb
xchg
xchg
stos
iret
hlt
push
sbb
cmp
mov
or
and
adc
bound
repnz
or
out
mov
and
dec
xchg
sbb
adc
mov
sbb
popa
jne
or
addr16
xchg
or
and
push
mov
hlt
and
clc
es
dec
push
push
mov
aaa
movs
repnz
xor
adc
nop
inc
cmp
pop
sub
js
mov
xor
fdivr
inc
dec
dec
mov
rol
arpl
cs
cld
xor
push
adc
nop
aaa
pushf
nop
sbb
iret
sbb
ins
dec
dec
js
xchg
and
outs
inc
sub
xchg
or
jbe
add
cmp
adc
and
pushf
sbb
lods
cmp
mov
test
aaa
inc
movs
arpl
loopne
das
loopne
and
(bad)
jg
xchg
and
add
(bad)
scas
movs
hlt
adc
leave
sub
and
aad
cmp
xchg
outs
sub
jns
cmps
aad
lods
loope
aaa
pushf
push
rol
mov
add
pop
and
mov
pop
and
enter
sub
aaa
pop
sbb
jns
jno
shr
cmp
push
mov
sbb
cmp
nop
stos
imul
cmp
enter
fcomp
inc
push
adc
aad
call
inc
mov
and
jmp
(bad)
or
add
mov
sub
dec
jmp
and
inc
mov
xchg
and
cmovg
or
dec
cmp
dec
das
stos
push
mov
lds
fadd
add
and
inc
xor
inc
push
sub
dec
cmps
xchg
stos
das
xor
xor
push
xor
add
add
add
cmp
sbb
cmp
aas
and
jo
cmp
add
sbb
mov
sub
pop
and
mov
mov
loopne
and
pop
mov
jmp
aaa
pop
jle
mov
and
es
jno
pop
mov
and
inc
push
mov
loope
daa
cs
(bad)
and
mov
inc
inc
sub
aam
dec
punpckhdq
and
movaps
mov
or
pusha
push
mov
inc
(bad)
jne
pushf
push
push
mov
mov
mov
jbe
add
movs
fldenv
outs
jge
cmp
test
adc
mov
ins
fisttp
sbb
fist
das
jbe
lods
nop
xchg
xor
sbb
cmp
fsubr
pop
adc
sbb
dec
inc
adc
aaa
and
inc
ret
rcr
add
dec
setne
ja
push
xchg
inc
cmp
mov
aas
mov
push
push
sbb
mov
mov
push
and
enter
pushf
sub
and
adc
or
dec
popa
jo
push
rcl
pop
or
push
or
bound
sbb
mov
xchg
pop
jne
jae
gs
sahf
gs
clc
add
pop
outs
dec
sub
cmps
pop
enter
fsubr
fnstcw
add
push
mov
inc
iret
adc
dec
adc
cmps
lods
mov
add
dec
add
mov
dec
add
dec
in
mov
ins
mov
loopne
and
or
adc
ja
ja
inc
ror
fs
inc
xor
and
shl
lea
inc
sbb
arpl
sbb
das
cmp
int
mov
je
and
adc
mov
adc
adc
lods
jmp
sbb
icebp
and
sub
clc
mov
cmp
cmp
and
inc
jb
push
add
dec
xchg
dec
nop
pop
enter
or
ja
ss
je
dec
cmps
dec
mov
inc
sbb
mov
call
inc
inc
mov
(bad)
fist
sub
out
mov
ds
push
push
or
mov
aas
sub
es
lods
and
add
inc
cmp
inc
cmp
push
hlt
pop
in
ret
inc
rcl
or
add
inc
mov
mov
inc
inc
mov
gs
lahf
adc
or
shr
xor
or
and
or
das
in
push
jae
add
out
jns
dec
push
inc
ins
xchg
add
ds
xchg
enter
or
jae
push
pop
xchg
cs
imul
sar
sub
add
lods
ret
dec
fild
call
xchg
sbb
ins
std
aad
or
mov
jo
pop
sbb
fdiv
add
push
mov
loope
repnz
push
mov
dec
push
fdiv
imul
jg
movs
xor
push
xor
pop
fisubr
das
cld
push
xor
pop
mov
cmp
std
dec
cmp
push
mov
push
sub
mov
add
ds
or
or
or
adc
jl
frstor
movs
adc
sub
mov
add
mov
cmp
push
int3
sbb
shl
pop
mov
and
jo
push
jp
leave
push
mov
sub
mov
xchg
imul
xchg
xor
imul
sub
iret
xchg
cmps
xchg
inc
mov
cmps
in
pushf
mov
xor
push
and
xor
push
add
inc
lahf
shl
dec
adc
xchg
inc
push
push
and
lods
nop
mov
jne
and
add
out
arpl
popf
adc
xchg
outs
fdiv
add
inc
sbb
movs
add
mov
shr
push
dec
in
push
dec
mov
popf
in
inc
stc
ds
pop
or
add
xor
out
sbb
mov
pop
jnp
ins
sbb
sahf
mov
retf
shr
leave
nop
sbb
mov
cmp
loop
adc
cmp
push
sbb
ss
lods
add
pop
and
mov
fnstenv
test
or
fld
add
in
enter
xor
aaa
or
daa
movs
add
aaa
sbb
outs
leave
nop
add
mov
imul
cwde
bound
add
mov
sahf
mov
adc
add
inc
add
pusha
xor
fs
pusha
iret
add
push
adc
or
nop
jne
xchg
push
push
and
jns
je
out
adc
add
retf
les
jnp
xchg
inc
push
sub
cmp
enter
push
cmp
imul
dec
les
dec
pop
sbb
mov
xor
(bad)
and
inc
or
sbb
fcom
mov
adc
or
(bad)
cmp
sub
sbb
imul
mov
xchg
mov
test
ja
and
arpl
gs
jne
rcl
enter
out
es
das
adc
test
sub
cs
aas
ret
adc
add
cmp
jl
aaa
inc
jmp
or
xchg
xchg
cmp
jno
cmp
enter
cmp
add
jecxz
cwde
add
inc
xchg
in
mov
clc
inc
inc
adc
cs
icebp
mov
nop
cmp
adc
cmp
movs
stos
sub
in
xchg
mov
pop
push
mov
or
cmp
xchg
xlat
in
dec
or
push
inc
sbb
and
daa
mov
sbb
jmp
adc
cs
fwait
pop
les
xlat
es
dec
ds
push
push
and
inc
jmp
push
inc
cmps
push
add
dec
inc
cld
cmovge
fcom
in
(bad)
pop
add
adc
loope
test
loope
dec
shl
inc
push
loope
dec
rep
idiv
add
setnp
ins
push
jg
retf
aaa
and
push
or
rcl
jnp
cmp
push
inc
enter
rol
std
test
ins
adc
mov
cmp
cld
sbb
arpl
xor
xor
xor
push
aas
cs
jo
xor
xor
and
and
add
sbb
mov
sub
dec
inc
push
cmps
test
mov
and
nop
adc
add
ins
push
dec
loop
ret
add
test
inc
xchg
and
mov
dec
add
and
xlat
int
pop
(bad)
and
test
ret
nop
lahf
add
call
or
xchg
pop
adc
cwde
sub
(bad)
adc
aaa
nop
popf
loop
adc
rol
adc
add
add
and
inc
mov
lods
xor
or
fisub
ret
and
inc
ret
sbb
sbb
or
mov
sti
into
mov
adc
shr
add
xlat
xchg
pop
shl
sbb
sbb
adc
push
stos
nop
call
dec
sahf
mov
(bad)
xor
add
mov
outs
das
or
iret
and
lahf
icebp
test
xchg
hlt
inc
adc
mov
xchg
inc
or
adc
cmp
ins
dec
pop
lods
inc
popa
dec
or
aam
push
mov
inc
fst
add
(bad)
outs
add
fwait
out
push
mov
leave
dec
in
push
mov
lods
jg
inc
jno
adc
push
faddp
cld
mov
es
pop
push
les
sbb
gs
push
sbb
dec
push
add
or
or
outs
lds
cmp
popf
cmp
(bad)
cmp
mov
inc
mov
(bad)
cmp
inc
popa
jbe
mov
jns
xchg
inc
jl
mov
mov
sub
adc
clc
inc
movs
pop
lods
lods
xor
ins
jnp
fisub
repnz
push
dec
jo
xor
and
push
mov
sbb
sbb
test
push
imul
xor
clc
pop
dec
dec
pop
leave
push
mov
dec
clc
inc
dec
outs
and
dec
outs
test
sub
outs
loope
adc
add
test
or
cmp
mov
pop
mov
inc
mov
push
sub
scas
pop
xchg
out
adc
add
(bad)
cmp
ins
push
mov
and
mov
arpl
pushf
push
dec
xor
add
inc
aaa
and
pop
dec
mov
outs
scas
push
ss
jns
xchg
push
sub
test
dec
enter
hlt
push
fs
lods
sub
fcom
rol
adc
add
cmp
xor
inc
test
mov
dec
push
xor
outs
add
cmp
xchg
push
sub
xor
inc
sbb
js
mov
out
dec
jns
push
and
das
pop
and
xchg
ins
clc
mov
repnz
nop
dec
scas
dec
mov
ror
sub
mov
mul
ret
jg
dec
pop
push
das
add
dec
loopne
dec
das
loopne
inc
nop
cs
push
add
sbb
psraw
dec
mov
in
fisttp
dec
jae
pop
pop
mov
push
dec
xchg
push
ins
mov
outs
adc
mov
push
pusha
aad
xor
add
xor
test
imul
popf
fisub
das
addr16
xor
call
dec
aaa
dec
or
sub
push
pop
pop
and
or
cmp
ret
sub
push
mov
push
mov
mov
push
dec
dec
sub
es
das
in
add
js
adc
xchg
xchg
add
or
(bad)
stos
cmp
lods
loopne
and
or
rcl
fdiv
dec
xor
cmp
movs
jmp
and
dec
(bad)
test
xchg
push
bound
and
nop
add
xor
sar
add
dec
or
ret
push
or
add
xor
out
dec
or
daa
xchg
in
pop
mov
or
popa
mov
pop
push
sbb
sbb
arpl
or
sbb
in
in
jbe
adc
inc
push
outs
cmp
je
pusha
popa
and
clc
sbb
xor
jbe
sbb
xor
or
ss
or
or
or
add
xor
cmp
int3
inc
xor
or
and
and
imul
enter
test
sbb
movs
imul
addr16
or
jae
leave
xor
cs
mov
test
mov
in
popf
xchg
jmp
cmp
jmp
std
sub
shr
je
imul
fwait
dec
out
mov
push
leave
int3
mov
or
sub
nop
les
dec
lahf
out
pusha
nop
test
add
shl
push
stc
sbb
push
add
in
rcl
mov
dec
mov
inc
shl
and
pop
sub
call
movhps
test
sysenter
fs
pop
and
adc
mov
lods
or
push
es
and
arpl
loope
ret
out
mov
cmp
jbe
add
adc
iret
add
iret
push
mov
inc
jo
lods
imul
cmc
xchg
std
add
out
add
push
movs
stos
pusha
shl
icebp
add
or
nop
out
adc
push
add
ins
aas
push
and
(bad)
(bad)
adc
push
add
jge
adc
sbb
inc
adc
add
adc
test
xor
dec
add
and
add
addr16
cmp
ins
push
jbe
mov
xchg
ds
xchg
nop
inc
jmp
mov
ins
mov
aas
ja
jbe
test
add
pop
sbb
lea
or
lds
adc
test
(bad)
push
mov
shl
push
icebp
and
adc
push
test
or
pop
lahf
and
loopne
xchg
pop
push
repz
retf
push
xor
xor
mov
dec
popa
out
aad
inc
push
and
test
and
ins
loop
cmps
adc
adc
stos
pop
add
xor
push
adc
push
cmp
add
dec
stc
cmp
jb
adc
push
xor
and
pop
int
or
pop
(bad)
aad
loop
cs
aaa
rcr
push
push
dec
cmp
pop
add
lds
pop
push
pop
fstp
dec
xor
adc
adc
cmp
adc
loope
outs
or
xor
cmp
cmc
fwait
sbb
pusha
sub
pop
xor
add
mov
sbb
jle
mov
pop
rcl
cmps
push
xchg
sbb
popf
add
fisubr
mov
inc
(bad)
bound
int
nop
add
sahf
add
sbb
jbe
call
mov
xchg
test
arpl
add
pop
push
xchg
sub
and
add
fstp
sub
shl
pop
lahf
lock
adc
mov
and
add
push
hlt
sbb
mov
inc
test
or
cmp
inc
adc
das
loop
adc
in
pop
add
adc
adc
inc
fisttp
outs
and
push
enter
jecxz
pop
xchg
inc
call
lea
mov
pusha
test
fmul
sub
adc
(bad)
or
lods
mov
xchg
xlat
dec
in
add
or
(bad)
cli
or
call
nop
add
js
mov
adc
lods
stos
xchg
sub
test
frstor
push
jb
mov
ins
(bad)
and
cwde
pop
add
xchg
frstor
add
or
pop
cli
pop
mov
add
lahf
add
cmp
sbb
dec
pop
ins
add
cs
or
xchg
fcom
xor
cmp
jbe
sbb
add
add
and
jbe
neg
xor
lods
sub
lods
add
mov
pop
call
pop
stos
mov
leave
in
pop
out
pop
xor
pop
mov
xchg
pop
and
inc
pusha
sahf
or
js
pop
test
add
jg
inc
pop
and
add
or
icebp
sub
cmps
aam
sbb
add
or
dec
shl
adc
int
lea
jbe
test
fwait
in
jnp
bound
push
test
push
jbe
es
jo
clc
xor
dec
imul
sub
push
movs
push
enter
outs
lods
sub
inc
leave
add
dec
test
dec
add
and
sub
push
clc
xor
imul
push
test
cmp
jne
pop
ror
jbe
jbe
cld
push
jge
int
push
inc
dec
cmp
inc
ins
shr
ds
fisubr
mov
fdivr
mov
cld
lods
ins
inc
inc
sub
scas
sbb
xchg
mov
leave
adc
and
add
popa
add
adc
mov
sbb
pop
enter
sbb
and
mov
push
mov
test
imul
das
xchg
mov
das
cwde
fadd
in
pop
mov
shl
adc
mov
mov
dec
sub
scas
pop
mov
jns
mov
xchg
sbb
sti
jae
or
test
pushf
xchg
dec
mov
test
sub
lods
jmp
out
add
sub
inc
sub
dec
popa
bound
mov
cmp
js
mov
int3
dec
cmp
mov
stos
sub
fbstp
das
dec
xchg
out
leave
enter
add
sbb
cmp
ret
shr
rcr
mov
dec
mov
imul
fadd
xchg
or
or
bound
fiadd
in
xchg
ret
bound
cdq
in
xor
sub
outs
xor
dec
add
sub
js
inc
loopne
add
js
push
pop
lods
call
pusha
sub
jmp
mov
mov
mov
cmps
in
pusha
pop
cmp
clc
jp
and
cmp
stos
adc
aaa
hlt
ja
leave
ret
shl
clc
pushf
adc
fisubr
jb
mov
jge
push
or
xor
and
push
loopne
mov
pop
push
loope
mov
ins
jo
add
jnp
xor
mov
push
or
xor
test
xchg
loope
and
sbb
pusha
and
outs
jno
sub
jns
and
cmp
sbb
or
dec
out
sbb
(bad)
sbb
cmp
add
xchg
push
mov
mov
sub
test
pop
adc
ret
add
pop
xor
and
dec
jnp
pop
dec
cmp
push
lods
inc
xlat
push
inc
add
lods
push
dec
add
push
imul
jge
ss
xor
and
dec
popa
test
adc
test
cmp
push
jnp
add
push
sub
and
dec
jo
stc
hlt
xor
mov
rcl
fisubr
movs
pop
mov
dec
adc
call
pop
cwde
xor
sbb
sub
pop
mov
adc
push
sub
hlt
popf
movs
push
xchg
imul
out
add
add
dec
sahf
ror
inc
pop
pop
push
push
enterw
jno
xchg
sbb
mov
mov
das
cmp
fcomp
add
loopne
lahf
cmp
call
out
in
cmp
and
pop
je
idiv
jp
xchg
mov
jecxz
or
or
mov
pop
xchg
mov
add
in
jp
xor
fnstenv
stc
or
addr16
adc
sbb
mov
add
stc
adc
pushf
cmps
jbe
ins
dec
xchg
dec
(bad)
add
cdq
cmc
scas
outs
getsec
retf
pop
xchg
pop
outs
dec
mov
int3
outs
dec
enter
cli
dec
jp
(bad)
outs
das
inc
add
jo
xchg
xchg
fist
jecxz
jno
sbb
leave
jle
dec
sub
xchg
and
push
jb
jb
add
mov
(bad)
(bad)
out
push
inc
daa
mov
das
cmovae
outs
rcr
cmp
add
js
inc
adc
add
push
les
in
xchg
or
adc
jmp
cmp
dec
fld
aas
mov
es
out
ins
ss
inc
xor
cld
ja
imul
mov
mov
cwde
adc
push
div
iret
pusha
xchg
push
xor
push
mov
cmps
fcom
or
cmp
and
ss
mov
mov
lods
and
call
push
mov
test
dec
xchg
sbb
mov
and
sbb
es
bound
or
add
popa
cmp
push
arpl
xchg
das
mov
mov
cs
pop
inc
ficomp
and
mov
push
jae
ss
sahf
dec
dec
jbe
fisttp
lods
push
pop
ins
ror
xchg
inc
add
arpl
add
add
addr16
fcom
sbb
pop
fimul
in
sub
xchg
in
ins
imul
adc
add
inc
sbb
sub
xlat
leave
push
fst
in
push
jae
pop
icebp
push
hlt
jnp
rol
jge
jge
add
leave
xchg
and
push
xor
popf
fwait
mov
mov
loopne
js
or
fisub
stos
stos
or
dec
mov
sub
add
movs
ret
imul
mov
mov
ret
cdq
jo
jb
jae
dec
or
dec
inc
sub
inc
or
xor
mov
jno
outs
dec
icebp
movs
imul
inc
repz
pop
jnp
in
push
and
push
inc
inc
cmp
rcr
ret
adc
fsubr
mov
mov
sbb
enter
inc
add
out
add
sub
push
or
mov
or
push
retf
push
xchg
pop
sti
dec
fild
mov
and
xchg
out
in
adc
outs
sub
test
push
pop
add
mov
pop
pop
ins
xchg
cmps
inc
int
add
adc
sbb
sbb
push
jnp
(bad)
sbb
jne
pop
sbb
sbb
jge
(bad)
out
sbb
pop
jg
pop
adc
add
pop
pop
and
pop
in
cmp
or
inc
xor
or
pushf
cmp
cmc
sbb
out
or
inc
out
leave
repz
call
dec
pop
inc
pop
xchg
push
push
and
mov
fdiv
or
pushf
push
cdq
or
add
add
adc
sahf
adc
push
mov
ins
push
dec
or
jge
lock
or
mov
fs
or
xor
push
fcom
test
addr16
or
setns
jnp
jbe
add
push
ins
sbb
or
inc
jmp
mov
icebp
hlt
fucomi
inc
dec
daa
int3
ja
lods
setb
ins
pushf
mov
xchg
test
repnz
push
or
dec
cld
mov
add
cmp
push
lods
daa
xchg
jmp
daa
pop
xor
jne
test
xor
push
jns
fwait
xchg
mov
in
jp
call
cmp
inc
dec
(bad)
mov
jns
enter
dec
sbb
dec
or
pusha
js
or
xor
xor
mov
add
add
mov
cs
imul
mov
lods
(bad)
xor
push
seta
jne
adc
mov
shl
in
dec
imul
inc
arpl
arpl
push
push
push
mov
dec
arpl
out
push
and
aad
shl
inc
pop
pop
sbb
inc
es
xchg
xchg
sub
sub
add
fnstsw
xor
imul
fiadd
pop
nop
sub
push
jp
mov
jp
jp
jl
adc
or
loopne
and
push
inc
outs
inc
mov
cmp
push
mov
xchg
add
inc
(bad)
jne
mov
push
xchg
dec
inc
arpl
sbb
jo
mov
(bad)
js
sub
pop
enter
mov
(bad)
mov
outs
mov
cmp
outs
or
call
jl
jge
push
and
sub
inc
out
test
pop
repnz
pop
inc
pusha
mov
ds
cmovno
jb
sub
push
xor
push
cwde
dec
pop
fisubr
adc
inc
repnz
inc
cmp
inc
push
xor
cmps
dec
faddp
xchg
sbb
clc
sbb
dec
jmp
test
or
or
sti
dec
enter
sub
jge
enter
lds
xchg
pop
or
dec
sbb
jo
cmp
aad
xor
cs
or
bound
dec
fidivr
into
dec
ins
mov
push
jge
fs
idiv
xor
jb
fs
mov
fs
push
jns
in
fs
jge
dec
add
stos
push
cld
xchg
rol
xchg
jnp
loopne
cmp
push
in
hlt
dec
inc
dec
cmp
dec
loopne
push
and
jle
xor
xor
sub
bound
jo
add
dec
lds
mov
cmc
sbb
popa
mov
call
ror
dec
ss
pop
jg
das
das
pop
mov
jg
jg
jg
sbb
rcl
or
push
out
xchg
or
jns
cmps
xchg
ss
les
add
das
popf
scas
cmp
ror
and
add
jp
or
push
call
mov
push
imul
cmp
xchg
mov
dec
jnp
les
iret
or
not
into
movs
add
sbb
nop
adc
xchg
lea
not
fs
pop
or
add
pop
cmp
push
mov
xor
add
(bad)
call
push
mov
rol
test
mov
dec
outs
cli
push
enter
pushf
sbb
dec
enter
fbld
dec
leave
inc
cmp
dec
js
dec
jb
retf
or
dec
pusha
or
repnz
and
ret
jl
and
dec
clc
daa
mov
and
mov
and
cdq
mov
nop
xor
adc
xor
mov
nop
adc
dec
dec
ds
mov
repnz
in
add
les
rcr
(bad)
adc
enter
or
cvtps2pi
cmps
mov
jl
lods
add
push
push
inc
out
jg
stos
jo
test
add
inc
aas
fs
pop
adc
lock
aam
mov
dec
mov
fnstenv
mov
cmp
mov
ror
add
ss
cmps
stc
adc
je
jo
inc
cdq
cmp
shr
int3
in
pusha
mov
ins
(bad)
pushf
test
add
mov
aaa
jb
xchg
icebp
mov
add
out
xor
push
loop
jmp
outs
test
int
add
iret
pop
sub
imul
in
push
jo
inc
out
add
adc
or
out
push
add
adc
cmp
div
inc
push
in
mov
je
test
out
sub
or
es
adc
inc
push
jb
xor
add
mov
repnz
push
add
mov
and
xor
inc
and
and
lahf
or
test
and
inc
bound
add
jb
dec
or
pushf
push
xchg
xchg
test
sgdtd
daa
enter
add
sub
pop
lahf
call
mov
cmps
push
push
leave
gs
sub
jns
and
pop
mov
inc
es
movs
push
ins
test
pop
dec
das
add
pusha
aam
mov
mov
or
inc
xor
pushf
and
pop
and
mov
fwait
xchg
or
or
cmp
cmp
cmp
xor
add
add
inc
xor
jb
inc
inc
and
push
inc
inc
and
and
inc
inc
dec
sbb
int3
cmp
sahf
pop
mov
sub
xchg
mov
loop
xchg
dec
mov
fmul
and
mov
add
pop
sub
mov
sbb
inc
mov
mov
mov
fisttp
sub
mov
inc
pop
adc
mov
mov
mov
cld
aas
test
jl
inc
popf
dec
push
sahf
xor
jnp
jo
test
cwde
cs
push
and
test
xor
add
and
or
and
jge
jle
xchg
(bad)
mov
arpl
inc
js
push
jo
inc
sub
or
pop
xchg
xchg
and
pop
aam
pushf
jmp
push
sub
inc
sbb
nop
sub
adc
sub
sbb
add
adc
lock
(bad)
sbb
jle
xchg
nop
dec
nop
call
inc
iret
enter
dec
nop
add
cmps
fs
dec
mov
or
lods
push
aam
fisttp
and
xchg
fwait
jae
test
xchg
dec
add
and
add
push
sub
mov
sub
sahf
dec
sbb
pop
pop
ins
lea
aad
add
add
retf
mov
adc
aaa
adc
mov
stos
push
xor
imul
enter
lahf
dec
lea
daa
mov
xchg
xchg
inc
jae
mov
and
or
xchg
(bad)
call
mov
std
aam
and
rcr
cmp
inc
cwde
mov
(bad)
das
mov
daa
icebp
pop
xchg
mov
nop
daa
bound
mov
out
and
push
inc
push
repnz
fs
lock
and
mov
mov
push
dec
xchg
push
mov
mov
push
add
leave
sahf
mov
dec
adc
or
push
test
mov
mov
outs
xchg
mov
mov
retf
push
inc
mov
cs
call
xchg
jg
adc
add
adc
cmp
add
add
mov
push
xchg
xchg
das
jg
pop
dec
unpckhps
jnp
add
add
push
mov
sub
cwde
movs
inc
mov
mov
or
cwde
dec
sub
pop
repnz
mov
push
push
mov
cwde
dec
or
enter
in
popa
cmp
movs
sub
jg
xchg
sbb
or
in
sti
mov
enter
mov
cwde
dec
call
pop
cmp
cwde
dec
add
pop
mov
test
lods
or
inc
mov
push
sub
mov
push
mov
loope
rcl
xor
lea
sbb
sub
push
and
dec
cmp
pop
mov
mov
adc
pop
push
leave
push
pop
push
(bad)
fld
inc
fisub
movs
inc
mov
cwde
push
adc
mov
les
clts
repnz
add
loope
stos
movs
cmp
cmp
arpl
mov
sbb
jne
scas
xor
das
dec
imul
or
test
add
outs
test
out
adc
dec
ins
dec
pop
mov
mov
or
and
mov
pop
inc
mov
add
sbb
push
je
aam
das
dec
add
fiadd
inc
aam
pop
outs
mov
mov
call
fcom
or
scas
inc
fld
adc
stc
popf
cmp
aaa
push
push
fsub
adc
sbb
sub
outs
jle
inc
leave
adc
jnp
call
pop
jl
in
test
xchg
xor
adc
int
pushf
mov
and
adc
xlat
push
mov
push
lahf
mov
and
pusha
mov
dec
scas
cmp
sub
pop
or
scas
dec
or
dec
add
scas
dec
stos
test
pop
add
dec
push
ss
xlat
add
and
push
pushf
adc
adc
adc
mov
std
test
mov
outs
pusha
adc
in
cmp
rol
mov
push
in
and
xor
test
sbb
arpl
loope
jns
adc
add
scas
inc
ret
or
stc
mov
fcomi
mov
test
or
rol
fmulp
retf
adc
jbe
fwait
cmps
in
sub
sahf
push
les
push
sahf
jnp
sar
pop
dec
push
or
dec
icebp
mov
add
cmp
pop
cmps
push
xor
push
icebp
imul
xchg
cmps
popa
movs
mov
push
sahf
pop
pop
leave
mov
dec
test
fist
bound
inc
cmp
adc
mov
add
lahf
inc
or
inc
nop
mov
hlt
mov
inc
push
mov
in
push
cld
lock
adc
pop
call
jmp
nop
and
(bad)
clc
loop
add
lods
movs
dec
sub
mov
sub
loop
add
xlat
and
mov
icebp
jp
xor
(bad)
call
add
sbb
inc
mov
cmp
inc
mov
pop
dec
sbb
or
xchg
les
dec
mov
or
push
mov
mov
ds
sub
adc
and
lods
sub
les
sbb
iret
sar
push
and
iret
jo
dec
outs
stc
(bad)
and
clc
ror
adc
movs
jo
daa
les
jmp
int3
scas
jo
retf
aaa
or
cmp
add
push
cmps
xchg
(bad)
call
inc
lea
pop
rcl
iret
sub
aaa
xor
paddusw
aaa
cmp
xor
add
cmp
pusha
and
test
out
cmp
jnp
(bad)
cs
dec
xchg
outs
pop
jb
cmp
inc
add
mov
mov
fcmovb
in
pop
movups
int
or
add
aad
mov
sti
push
nop
rcl
call
es
sbb
adc
dec
stc
and
dec
pushf
movs
dec
jo
dec
pop
jb
sub
fcom
pop
lea
jnp
rol
inc
pushf
movs
dec
inc
out
adc
pop
aad
xchg
pushf
movs
and
add
pusha
xor
xor
rcr
add
xchg
xor
add
callw
dec
movs
pop
shl
jnp
and
cmp
pop
fs
lock
cmc
and
inc
call
nop
dec
fwait
dec
fiadd
ins
outs
js
pop
sub
fisub
es
pusha
jl
sub
push
mov
fidivr
fst
sub
add
leave
dec
ret
mov
sub
rcl
push
pop
ret
push
pop
pop
lahf
pop
cmp
dec
sub
ins
cmps
(bad)
pusha
in
lea
adc
adc
pop
or
fadd
cld
xchg
icebp
adc
je
mov
adc
pop
leave
sub
imul
xchg
cmp
call
jnp
add
sub
shl
pop
cmps
jns
xchg
sbb
push
mov
jg
jecxz
cwde
ret
scas
sbb
test
mov
xor
cwde
es
jnp
(bad)
xor
mov
adc
or
cwde
ret
xchg
pop
and
in
in
cmps
test
xor
(bad)
cmp
and
pop
jp
fs
sbb
repz
hlt
adc
sub
int
int
jmp
call
push
xchg
add
fucomip
test
and
mov
mov
test
jmp
test
add
add
sahf
test
push
adc
bound
xor
aad
sub
test
pop
or
mov
adc
stos
pop
sbb
es
daa
fnstenv
adc
lock
stos
adc
sbb
sub
push
test
pop
inc
ret
and
movs
call
loopne
stos
mov
sub
test
jnp
cmp
dec
stos
daa
fdivr
and
push
xor
es
ds
xor
pop
stos
and
dec
neg
mov
aas
mov
not
cwde
stos
mov
nop
adc
test
in
es
test
jl
sbb
dec
xchg
std
dec
adc
or
push
enter
aas
add
dec
cmp
dec
and
dec
mov
dec
or
push
(bad)
rep
push
imul
jo
adc
inc
fmul
outs
je
fidivr
xchg
xchg
inc
cmp
jbe
lods
push
lods
adc
pop
inc
sbb
test
dec
(bad)
(bad)
sar
inc
push
fcom
ds
std
sub
std
jno
push
in
mov
inc
pop
cmc
fwait
stos
loop
adc
fstp
mov
add
pop
dec
and
cmps
adc
inc
xchg
or
fild
cld
mov
add
cmc
push
mov
mov
hlt
or
loopne
jae
imul
scas
dec
out
out
cmp
cmps
(bad)
fs
dec
xor
loop
or
and
inc
push
rcr
ja
xlat
aaa
adc
inc
or
in
das
dec
xlat
and
jmp
or
inc
mov
xchg
add
mov
sub
shld
mov
das
stc
push
out
add
inc
xchg
xchg
inc
hlt
mov
pslld
clc
mov
add
dec
mov
dec
add
pop
mov
push
jbe
repnz
pop
xor
dec
add
and
arpl
gs
stc
sbb
push
cmp
mov
xor
ja
nop/reserved
xor
dec
sahf
nop
pop
mov
rol
repnz
inc
push
test
mov
adc
pop
ja
push
mov
xchg
sub
test
popa
cdq
push
pop
shl
sbb
pop
dec
mov
aam
adc
or
inc
adc
sub
xor
loope
mov
sub
or
rcr
mov
daa
sbb
add
scas
sbb
push
push
inc
or
sub
mov
std
clc
pop
jo
sbb
push
lock
inc
and
inc
xchg
pop
jbe
pop
inc
xlat
cmp
hlt
fild
or
inc
das
repnz
call
ins
inc
sub
add
inc
inc
jb
and
pop
in
inc
add
dec
xlat
adc
ret
push
(bad)
or
pop
or
out
outs
or
test
mov
fadd
pop
add
out
in
or
jmp
(bad)
xor
mov
add
sbb
jns
mov
pop
and
pop
sub
fild
jbe
in
xor
loopne
pop
movs
mov
nop
pop
adc
in
add
loopne
mov
xchg
inc
sahf
fcom
loopne
cld
jg
xchg
push
push
stos
mov
and
adc
aaa
int3
cmp
xchg
push
add
bound
mov
dec
dec
stc
test
rol
outs
or
mov
mov
cmp
lock
cs
adc
pop
inc
mov
pop
pop
inc
and
jb
lea
cmp
mov
jmp
push
add
xchg
(bad)
mov
sub
dec
inc
mov
jb
xor
jge
xchg
push
or
pop
jle
mov
(bad)
(bad)
xor
and
dec
push
adc
add
fbstp
add
pop
mov
lods
dec
leave
shl
and
aam
mov
les
pop
and
xor
xlat
add
xchg
in
adc
movs
add
xor
rol
js
rol
cmps
jbe
and
mov
je
cmps
call
add
shl
sub
retf
xor
mov
mov
je
push
movs
sub
(bad)
adc
mov
dec
adc
sub
ret
adc
dec
mov
cmp
ret
cld
or
mov
mov
dec
in
add
sbb
mov
jl
inc
pop
add
clc
sahf
pop
mov
or
jp
stos
fs
mov
xchg
imul
sbb
pop
inc
and
add
cmps
cld
mov
(bad)
and
and
scas
mov
(bad)
(bad)
iret
js
xchg
sti
mov
and
test
and
or
scas
jmp
nop
xchg
add
add
cmp
fimul
jne
adc
out
and
cmp
pushf
mov
mov
lock
sub
xchg
imul
retf
adc
nop
nop
xor
iret
xor
xchg
enter
pop
rol
push
and
cmp
and
cmp
jle
sbb
test
add
pop
ds
in
rcl
ja
cmp
add
test
(bad)
or
fwait
popa
pusha
and
adc
dec
pop
mov
movs
shr
jl
pop
popf
xor
push
in
push
push
test
or
pushf
or
and
lahf
xchg
add
and
adc
aad
pushf
(bad)
pop
retf
push
icebp
or
sbb
and
add
ret
cmps
xchg
pop
lock
mov
cmp
push
mov
xchg
cmp
daa
push
adc
cmp
mov
or
mov
imul
sbb
push
xor
mov
push
dec
sbb
xchg
leave
aam
outs
xchg
out
xor
mov
es
sahf
jl
xchg
mov
movs
not
popa
frstor
sub
rol
call
cmp
out
push
in
cld
pop
sete
xor
cmp
cmp
ret
mov
adc
leave
push
pop
or
mov
gs
fimul
dec
xchg
add
fdiv
cs
mov
adc
sbb
mov
mov
das
pop
rcl
enter
imul
scas
or
loop
xchg
aaa
movsx
xchg
xchg
push
test
mov
scas
nop
mov
lods
jecxz
adc
cli
jmp
or
inc
test
lock
mov
mov
fbstp
xchg
mov
xchg
sbb
dec
jp
dec
movs
fs
mov
pop
jmp
mov
daa
add
xor
inc
push
loop
xchg
push
pop
ins
or
pop
push
lea
push
add
nop
mov
rcl
shr
sub
inc
sbb
aas
shl
mov
add
popa
les
push
les
sar
add
dec
mov
adc
loop
mov
push
pushf
sub
add
pop
repnz
retf
int3
cld
and
sti
nop
test
call
cld
sub
xchg
xchg
sahf
mov
daa
fcom
sahf
cld
jne
rcr
es
les
jp
xchg
fcom
cwde
sub
pop
fisttp
or
clc
mov
inc
sbb
pop
sbb
ror
and
sbb
inc
ficom
or
sub
and
test
push
adc
sar
lea
lahf
pop
cmps
leave
xlat
add
icebp
xor
dec
or
movs
adc
dec
mov
mov
shl
push
cli
jo
dec
pop
in
cmp
test
nop
cwde
js
and
and
dec
dec
lahf
xchg
xchg
ficomp
pop
push
push
cmps
xor
jg
jnp
or
mov
jno
(bad)
sub
add
add
inc
and
dec
push
jnp
dec
adc
xor
pop
inc
mov
adc
dec
dec
mov
xchg
ds
ror
jg
sub
push
mov
jne
adc
xchg
in
sbb
jmp
xchg
and
cs
in
jno
nop
pop
clc
(bad)
dec
dec
xchg
ins
xor
mov
les
push
ds
nop
bound
scas
pop
inc
dec
add
(bad)
aas
sub
or
mov
leave
popf
adc
clc
jne
fwait
nop
pusha
push
and
and
cwde
nop
scas
les
push
dec
rcl
ret
dec
cmps
or
inc
call
rcl
leave
push
adc
imul
add
cmp
and
mov
or
push
or
(bad)
in
cwde
or
push
dec
and
imul
outs
push
jmp
pop
retf
push
daa
out
lea
pop
and
movs
les
cmp
add
push
xor
push
sbb
bound
ret
pop
test
jo
call
inc
xchg
mov
pusha
rol
xchg
lahf
or
push
inc
lss
leave
mov
inc
lds
xor
mov
mov
add
arpl
xchg
aaa
jl
(bad)
mov
clc
sbb
fcom
adc
ss
mov
or
nop
mov
mov
aas
xchg
xchg
nop
fadd
adc
or
push
sub
cmp
femms
in
cmp
xor
or
mov
mov
xchg
push
and
ror
cmp
and
sti
dec
jb
adc
add
fistp
dec
push
jbe
dec
sbb
mov
hlt
add
jns
add
cmp
fistp
dec
ror
ret
sub
mov
sub
cmp
movs
and
mov
inc
add
jge
or
mov
outs
js
dec
cmp
xchg
bound
pop
and
jl
jle
imul
mov
dec
jne
call
jo
pop
into
mov
push
(bad)
test
mov
pop
cwde
addr16
cmp
rol
imul
out
push
imul
dec
sub
sbb
cmp
mov
cmp
movs
mov
or
and
xchg
jne
xchg
and
add
or
pop
fwait
and
cmp
add
adc
aam
mov
inc
adc
inc
pop
pop
popf
lods
pop
inc
sub
and
inc
test
ret
sub
sub
scas
and
popa
or
loope
or
leave
test
mov
sub
js
fisubr
ror
neg
mov
push
pop
push
enter
ins
sahf
imul
leave
add
fadd
add
inc
shl
add
jnp
rol
enter
loopne
retf
test
mov
int3
nop
loop
ds
pop
xchg
or
and
jno
add
xchg
xchg
ss
imul
test
adc
or
retf
or
dec
add
pop
add
mov
dec
dec
mov
(bad)
clc
test
movs
adc
adc
pop
push
xchg
ds
mov
or
mov
sbb
neg
cmps
fiadd
js
cmp
fwait
mov
test
push
call
adc
mov
xchg
sbb
push
push
add
and
adc
adc
js
jecxz
sub
cld
sub
or
pop
mov
mov
add
rcl
fmul
push
sti
arpl
sub
sub
jl
inc
nop
test
push
xor
sbb
jne
xor
or
sbb
pop
or
mov
test
and
or
pop
add
or
pop
mov
cmp
pop
daa
jle
mov
imul
mov
dec
leave
push
mov
and
cld
(bad)
mov
push
je
add
and
cmp
cmc
cmps
mov
add
add
sub
mov
pop
popa
inc
mov
xchg
sbb
or
mov
mov
mov
je
dec
push
sub
xor
das
or
mov
push
movs
jmp
shr
mov
cmp
inc
leave
or
aad
mov
adc
iret
push
jecxz
and
lds
ja
fs
ja
in
mov
clc
and
pop
loop
push
or
push
(bad)
test
jbe
adc
cld
pop
xchg
ret
(bad)
mov
adc
mov
and
nop
test
mov
mov
cmp
rcl
fs
(bad)
push
inc
inc
aam
sub
jno
sbb
xchg
inc
jne
push
sbb
and
push
mov
add
cmp
in
adc
(bad)
dec
sbb
(bad)
test
add
(bad)
mov
jne
mov
xchg
push
ss
loope
sub
or
adc
sub
retf
mov
ficom
xchg
(bad)
es
pusha
mov
out
cmp
jne
add
shl
mov
lods
cmps
movs
inc
xchg
(bad)
aaa
fld
xchg
inc
in
add
fcomp
mov
data16
inc
cmps
add
clc
jmp
xor
out
icebp
cs
or
sbb
test
xor
inc
cmp
inc
cmp
je
fstp
add
outs
cmp
or
push
loope
xlat
jne
mov
(bad)
mov
mov
jne
cmp
inc
dec
loopne
fs
and
xchg
push
mov
scas
pop
inc
or
adc
sbb
psadbw
xor
das
jo
add
dec
cmp
xor
push
cmp
iret
inc
(bad)
xor
bound
in
mov
mov
iret
sbb
mov
(bad)
jg
popf
add
dec
xor
pop
cmp
cmps
sbb
push
add
mov
dec
cmps
adc
xlat
mov
sar
into
and
icebp
cmp
pop
mov
mov
clc
call
pop
(bad)
stc
xchg
cdq
dec
mov
lahf
and
add
add
jmp
push
jl
sbb
cmps
xor
push
call
dec
dec
loop
dec
inc
loopne
mov
cmp
adc
sbb
cwde
shl
(bad)
jmp
cmps
lods
fisttp
inc
je
fnsave
mov
fild
adc
arpl
lahf
out
in
je
mov
or
xor
adc
out
(bad)
xor
push
dec
mov
adc
nop
inc
jno
outs
and
mov
ins
add
cs
out
adc
lea
add
push
das
xchg
adc
ja
mov
into
sub
std
ds
adc
std
or
imul
adc
retf
retf
sti
dec
cmp
and
out
mov
dec
pop
jg
xchg
adc
adc
mov
shl
lds
ret
cs
pop
push
pop
setge
mov
dec
mov
sub
inc
fcmovnbe
in
fcomp
(bad)
jp
shr
inc
nop
adc
mov
and
mov
sar
ret
cmps
and
ror
sub
(bad)
adc
leave
lods
retf
mov
das
repnz
adc
out
jbe
adc
mov
inc
movs
aad
and
pop
xor
mov
inc
dec
lea
pop
shl
movs
or
or
aaa
sub
and
js
int
stos
cmps
mov
cmps
rcr
adc
nop
es
sub
sub
leave
push
out
sbb
push
adc
xor
inc
mov
xor
jp
pop
lock
cwde
adc
repz
jne
int
xor
sub
maxps
dec
inc
ss
pusha
push
or
cmp
jmp
fwait
dec
jno
dec
pop
idiv
push
push
dec
lock
in
push
cmp
dec
retf
push
cwde
fdivr
rcr
jo
cmp
or
pop
leave
mov
sub
lea
dec
in
retf
xlat
mov
sbb
rol
or
push
sub
mov
push
scas
add
pop
or
cmc
rol
pop
pop
int3
cmp
lock
int3
push
aam
or
pop
cmp
pop
xlat
mov
loopne
repz
in
adc
jmp
or
inc
xchg
push
adc
iret
pop
mov
jl
inc
jne
xor
or
and
ins
cmps
mov
lods
leave
out
add
xchg
int
mov
fcomp
lods
movs
xchg
cmp
pop
cmp
test
adc
mov
mov
push
lods
pop
mov
jne
or
clc
or
je
jne
adc
(bad)
cmp
mov
push
pop
pop
xchg
and
push
xchg
rol
dec
sub
inc
sub
mov
sbb
sub
mov
hlt
sti
lahf
pushf
adc
(bad)
dec
cmp
add
ss
cwde
xchg
and
push
rcl
sbb
adc
cmp
mov
push
adc
jl
enter
push
adc
and
xor
or
and
mov
xor
js
inc
pop
add
add
inc
dec
out
pop
pop
mov
pop
inc
lahf
dec
dec
fadd
dec
je
dec
and
inc
loope
ss
inc
dec
add
fcom
pop
or
or
in
pop
data16
gs
xchg
sbb
imul
test
outs
push
adc
sbb
pop
adc
push
mov
mov
sub
cmps
adc
or
outs
jge
fs
xchg
dec
icebp
dec
mov
jl
arpl
aad
inc
or
and
mov
bswap
or
sbb
xchg
cmps
das
movs
and
call
rol
inc
sbb
pop
scas
sub
iret
mov
mov
lea
or
and
adc
add
mov
or
out
cld
js
in
mov
mov
or
jg
in
shl
sbb
xor
add
ror
and
sub
popa
mov
or
mov
xchg
out
and
test
(bad)
movs
fld
xchg
lds
mov
sub
dec
or
mov
mov
fstp
and
or
sahf
mov
iret
jnp
push
adc
jne
bound
pusha
sbb
mov
cmp
fmul
mov
inc
je
ret
pop
or
inc
or
outs
mov
clc
cmp
xchg
dec
mov
add
and
pop
push
mov
sbb
mov
xchg
adc
sbb
nop
fsub
inc
psubusw
or
nop
pop
ret
nop
xchg
push
nop
jl
test
or
jg
add
jo
in
test
pop
jmp
retf
dec
or
or
dec
into
xor
push
jl
add
pop
xor
fisttp
and
fs
mov
or
add
cmps
cld
pop
push
les
imul
pop
lds
xor
inc
mov
xchg
push
and
das
daa
pop
aaa
fndisi(8087
jp
lahf
ja
adc
sbb
repz
push
or
cmp
dec
dec
pop
and
mov
test
push
add
and
ja
xlat
cmps
mov
sbb
test
pop
out
or
cmps
imul
dec
test
mov
add
mov
arpl
shl
mov
jle
sub
shl
hlt
add
fsub
and
cdq
sbb
fisubr
shl
pop
sub
lock
stc
dec
xchg
xor
(bad)
loope
sub
push
sub
pop
in
pusha
rcl
push
rcl
mov
sub
push
or
(bad)
dec
lahf
clc
push
popf
pop
xchg
(bad)
sub
xor
movs
and
sahf
adc
lods
ret
push
sub
imul
imul
test
mov
cmp
outs
or
mov
imul
adc
push
(bad)
adc
fisttp
ret
mov
xor
enter
into
jno
(bad)
sbb
push
add
aaa
mov
jg
cmp
inc
sbb
dec
mov
or
push
inc
pop
dec
loope
pop
jmp
sbb
mov
adc
jae
inc
fldenv
add
imul
or
adc
leave
iret
add
ret
push
scas
cld
push
mov
dec
call
cs
and
adc
xlat
cmp
mov
mov
xor
cmp
push
xlat
inc
iret
jecxz
and
pop
and
outs
les
and
jmp
add
test
sub
mov
cs
cmp
push
xor
adc
sti
dec
or
jns
loopne
scas
(bad)
jge
add
add
mov
jmp
adc
aad
push
pop
sub
adc
or
cli
stos
int
inc
add
lds
fimul
(bad)
cmp
test
and
cmp
and
push
pop
repnz
xchg
out
inc
mov
sub
movs
add
enter
clc
sub
addr16
jns
push
repnz
xor
sub
jl
mov
outs
mov
mov
pop
imul
push
bound
jns
or
and
test
pop
add
jne
inc
or
lds
inc
push
pop
fwait
and
xor
or
xlat
push
adc
(bad)
push
jmp
stc
jne
xchg
xor
adc
out
and
sahf
xchg
and
dec
daa
or
add
in
cld
les
add
or
jno
xor
lds
ds
cmp
inc
arpl
and
mov
pop
adc
cmp
adc
sahf
shl
xchg
pop
sub
jl
pop
rol
pop
ss
or
jecxz
fnstcw
ds
and
sbb
mov
inc
hlt
inc
add
push
dec
(bad)
jge
adc
inc
dec
mov
mov
addr16
rcr
push
cs
push
(bad)
sub
xchg
mov
sub
push
test
(bad)
imul
add
mov
mov
fild
dec
pop
pop
cmp
jne
aam
je
sbb
pop
cmp
lahf
xchg
add
fs
jne
xor
or
arpl
fmul
dec
mov
mov
add
fidiv
mov
enter
mov
(bad)
in
inc
xchg
scas
cmp
dec
sub
inc
dec
inc
or
push
or
mov
adc
lods
fs
ins
xlat
sub
int3
push
pop
mov
inc
and
out
jmp
iret
cld
add
jbe
xchg
out
imul
jp
mov
or
and
dec
ret
xor
pop
idiv
jmp
sbb
jecxz
xor
and
sub
fmul
adc
dec
lahf
rcr
add
js
add
jmp
pop
pop
mov
sbb
or
rcr
int
nop
jae
sbb
push
inc
xor
or
fcmovne
adc
mov
push
test
xor
imul
sbb
add
jg
push
cmp
adc
add
das
cdq
pusha
cmps
sar
add
hlt
stos
mov
xor
leave
adc
leave
leave
nop
or
loope
pusha
and
rol
add
xor
sub
nop
mov
and
pop
cmps
pushf
xchg
loope
call
mov
dec
dec
in
dec
(bad)
or
test
add
inc
mov
and
adc
jnp
sbb
dec
inc
das
int
sub
test
cmp
jl
xchg
or
dec
call
and
popa
add
aad
add
lock
mov
and
xor
push
out
xchg
lock
mov
stc
push
adc
nop
pusha
aaa
bnd
mov
cmps
jmp
mov
push
xchg
cmp
xchg
cs
mov
nop
test
ja
and
fimul
jno
jne
cvtdq2ps
mov
push
xchg
push
test
or
shl
loope
add
outs
mov
movs
xlat
sub
cli
or
fucomp
(bad)
daa
loope
pop
push
adc
cs
lock
push
fnsave
pop
mov
jl
push
sub
pop
addr16
xchg
xadd
sti
lods
sub
lock
(bad)
stc
push
adc
push
pop
or
jl
or
leave
test
or
and
pushf
adc
(bad)
popa
mov
and
movs
arpl
test
sbb
push
and
out
imul
cmp
and
movs
mov
jecxz
jmp
or
jo
mov
ret
mov
or
jmp
sbb
adc
dec
mov
sbb
add
mov
mov
daa
lods
ret
movs
movs
sub
mov
sbb
fs
int3
scas
adc
rol
sub
mov
(bad)
hlt
jne
sub
add
inc
xor
ret
pop
and
and
dec
add
popw
mov
popa
(bad)
and
or
fldcw
add
add
ins
cmps
lahf
sbb
add
mov
pop
(bad)
ror
sbb
cmp
and
sbb
cmp
cmp
adc
sub
xchg
sub
jmp
pop
sub
(bad)
test
adc
adc
or
cmp
mov
mov
data16
pop
shl
xchg
sti
out
sub
xchg
je
loope
xor
dec
js
xor
dec
inc
test
(bad)
lock
mov
aas
and
cdq
sub
or
mov
adc
leave
movs
pop
jecxz
int
hlt
sbb
push
aad
cmps
or
add
push
jp
push
xor
daa
mov
push
jp
xchg
jmp
adc
inc
adc
mov
adc
push
mov
and
and
xchg
dec
xchg
add
retf
ins
mov
fst
nop
ret
add
jp
pusha
add
add
xor
ins
push
sbb
jecxz
or
inc
jno
xchg
and
adc
adc
push
rcl
jo
sbb
ja
div
dec
jne
mov
add
clc
push
add
cs
cmc
jmp
or
sub
sbb
jnp
les
adc
fcomp
pushf
jmp
mov
push
xchg
movs
sbb
(bad)
xchg
sbb
push
dec
cmp
cmp
sub
ins
sub
jb
nop
js
jmp
ret
sbb
pop
or
add
scas
out
adc
inc
cmps
sub
push
sbb
div
add
cdq
(bad)
iret
sub
outs
add
add
sbb
adc
jno
nop
repnz
pop
mov
stc
xchg
mov
imul
and
jg
jmp
pop
jle
or
push
jmp
adc
stos
adc
inc
inc
add
push
push
leave
and
xlat
fstp
mov
jns
test
gs
add
enter
stc
pop
and
popa
pop
test
in
nop
test
imul
jbe
mov
inc
xor
adc
out
adc
mov
loope
mov
and
xchg
and
cmp
mov
mov
sub
scas
ss
xchg
cwde
nop
pop
nop
xchg
daa
or
mov
add
and
aas
cwde
inc
inc
fisttp
mov
lea
stc
out
adc
mov
popa
xchg
dec
sbb
mov
sbb
rol
jne
mov
add
push
or
(bad)
mov
add
mov
or
dec
add
inc
loop
jo
or
sbb
daa
or
jle
or
push
cld
adc
push
movs
ins
cmp
icebp
cmp
mov
dec
push
dec
ins
add
std
and
push
std
ret
pop
cmps
add
dec
pop
sti
inc
ins
stos
pop
jbe
inc
sub
ret
dec
in
sub
push
inc
and
inc
or
sub
and
add
inc
mov
and
fcomp
push
mov
jmp
pop
xor
sub
cdq
fdivrp
outs
inc
rcl
push
push
push
adc
call
mov
(bad)
mov
sbb
iret
mov
imul
add
clc
mov
imul
fdivr
aam
sbb
dec
and
rcl
mov
or
mov
nop
call
std
aas
cmp
setle
mov
sub
fnsave
cmps
or
dec
or
mov
daa
mov
or
inc
ret
ds
call
imul
dec
push
xchg
sbb
add
enter
and
cmps
scas
ss
inc
xchg
adc
repz
test
push
inc
or
fs
jmp
sub
imul
cmp
rcr
cwde
iret
retf
mov
mov
sbb
xor
add
pop
retf
dec
jns
push
bound
jne
dec
js
dec
push
add
or
rcl
add
test
adc
add
xor
imul
sbb
(bad)
mul
push
ins
std
cmp
add
sub
push
xchg
ret
ret
ss
jo
loopne
or
push
or
pop
outs
adc
adc
and
stc
sbb
dec
add
jo
out
aaa
fst
add
cmp
inc
mov
adc
daa
sbb
and
sub
sub
inc
je
dec
test
fsubr
nop
call
adc
call
jmp
adc
and
xchg
fmul
xchg
jnp
inc
sti
enter
icebp
jb
fadd
dec
loopne
dec
xchg
ret
jecxz
mov
pop
pmullw
mov
lea
stos
cmp
inc
cmp
aaa
cmp
push
mov
fsubr
ja
dec
(bad)
loopne
jbe
mov
or
cmc
cmps
mov
or
popa
and
xor
rol
mov
sbb
test
jle
cmp
jge
mov
les
je
scas
pop
or
clc
and
inc
or
pop
mov
sub
push
in
sbb
aad
sbb
sub
fist
push
or
jnp
pop
inc
jb
pop
shufps
pop
imul
xor
nop
cmp
xchg
mov
fdivr
and
test
xlat
xor
adc
or
sbb
out
and
daa
adc
nop
stc
call
rol
xchg
or
pop
sub
or
adc
or
inc
inc
cmps
push
sub
daa
das
sbb
test
push
or
outs
cmp
sbb
sub
enter
or
push
add
inc
inc
add
dec
adc
xchg
out
add
imul
jl
xor
mov
pop
movs
mov
popa
ins
push
das
xlat
xlat
sti
adc
add
add
jecxz
not
rcr
mov
or
test
clc
adc
jns
les
mov
fcmovnu
leave
sbb
jne
aaa
cmp
gs
rcl
in
add
push
mov
and
lds
pusha
sub
inc
(bad)
sbb
sbb
mov
push
scas
sbb
sub
add
popf
or
mov
xchg
cmp
add
mov
adc
push
mov
(bad)
push
sbb
inc
movs
test
adc
and
sbb
inc
cld
add
xor
or
dec
lahf
es
retf
push
call
rcl
push
xchg
inc
shl
pop
and
mov
sbb
out
jo
dec
xlat
outs
mov
pop
or
sbb
push
dec
or
cdq
push
mov
in
in
or
or
add
mov
pushf
jbe
or
jnp
add
mov
or
add
pop
inc
push
jp
pop
adc
and
or
adc
or
mov
jb
(bad)
dec
add
dec
(bad)
(bad)
jae
jbe
repnz
cwde
adc
int
xchg
or
cs
test
jo
mov
ss
or
push
jne
mov
in
jl
imul
push
pop
stos
sbb
daa
leave
and
in
or
jns
pop
xchg
or
or
push
jl
dec
cmp
stc
dec
xchg
or
mov
fmul
pop
mul
sub
cmp
ja
add
sar
pop
call
cmp
loop
or
add
test
pop
fidivr
repnz
mov
repz
or
(bad)
ja
fidivr
arpl
das
push
dec
push
add
mov
sub
or
test
sbb
clc
pop
fcomp
sub
inc
xor
shr
xor
inc
mov
inc
call
sahf
or
pop
add
sar
add
ins
jae
mov
pop
inc
xor
loopne
cmp
push
adc
mov
xchg
mov
loopne
arpl
cmp
pop
scas
(bad)
jo
daa
sti
mov
push
test
jmp
jnp
imul
jl
inc
popa
cld
aam
add
fsub
sub
dec
or
nop
into
sbb
and
or
add
cmp
xchg
mov
dec
jb
pop
gs
add
dec
ror
repz
and
mov
call
shl
inc
and
ret
inc
jge
jo
cmp
rcr
or
ret
in
outs
ins
pop
jnp
pop
dec
sar
rol
add
xor
cmp
adc
jns
imul
cmc
jbe
or
retf
add
sub
outs
mov
xchg
add
lods
jo
inc
lea
(bad)
and
pop
leave
adc
pop
push
add
adc
loop
mov
inc
gs
test
add
mov
sub
or
add
or
test
inc
cmps
sub
ss
cmps
loopne
adc
mov
xor
pop
es
jo
mov
and
pop
dec
mov
xor
int
fadd
(bad)
je
ffreep
test
cmp
mov
add
call
xchg
pop
xor
jp
mov
inc
inc
arpl
rol
in
dec
push
pop
mov
sbb
add
aam
mov
inc
dec
mov
addr16
push
or
mov
sbb
btc
addr16
sbb
push
outs
dec
ret
mov
lock
sbb
push
bound
inc
push
pop
and
pop
adc
hlt
lea
cmovae
inc
sbb
cmps
push
leave
fnsave
dec
jne
dec
lar
push
and
jecxz
dec
out
xchg
jg
daa
or
push
mov
adc
adc
push
sub
or
pusha
push
movs
test
add
xchg
ret
ins
ins
dec
inc
or
sbb
push
pop
sub
hlt
mov
or
mov
add
mov
jno
(bad)
pop
or
mov
dec
fsubr
mov
jns
ret
retf
mov
mov
xor
dec
inc
jno
push
cmove
xchg
repnz
or
add
test
imul
sti
inc
mov
cmp
sbb
add
lods
in
mov
mov
ror
fisub
mov
sbb
mov
movs
cmp
adc
daa
int
mov
xchg
test
(bad)
mov
sub
dec
sbb
jg
xchg
xor
sbb
inc
ja
fsub
mov
xchg
sar
xchg
data16
lea
xchg
or
mov
sbb
aad
mov
sbb
pop
sbb
xor
push
xchg
in
xlat
les
les
push
cmp
xchg
lock
adc
push
pop
test
mov
psllw
aaa
mov
fiadd
aam
jle
sub
shl
or
push
and
shl
in
or
cmp
cmp
cmp
and
xor
mov
loopne
or
or
or
push
in
(bad)
aam
sub
jmp
scas
scas
adc
ds
popa
or
cmp
and
or
xchg
and
mov
xchg
lods
or
mov
or
inc
adc
xchg
and
dec
invd
pop
mov
jge
and
or
push
add
push
inc
movs
xor
outs
or
mov
es
test
div
sbb
jge
jne
in
push
xor
inc
cmp
inc
ret
cdq
inc
rcl
outs
or
or
nop
in
ret
shl
cmp
mov
push
fs
and
cmp
ret
xchg
jecxz
loopne
mov
mov
add
inc
loope
xchg
fild
(bad)
push
scas
pop
mov
lahf
rol
sbb
rol
sub
inc
sbb
int
ss
mov
push
adc
call
xor
pop
and
dec
rcl
push
xchg
push
mov
jo
push
push
xchg
popf
arpl
loopne
rcl
inc
or
out
jmp
add
pop
mov
cmc
je
loope
stos
daa
fmul
ins
out
xor
jmp
dec
add
mov
dec
add
or
enter
dec
mov
lock
dec
call
mov
into
(bad)
js
push
rcl
sbb
dec
je
dec
movs
inc
cmp
adc
loopne
xor
loope
(bad)
sbb
cdq
or
inc
outs
xchg
dec
inc
arpl
pop
call
jae
gs
shl
mov
push
enter
add
xor
ror
push
aaa
xor
mov
inc
push
jge
stc
inc
in
(bad)
dec
adc
ror
cli
int3
retf
cld
imul
sub
stos
vphaddubq
and
(bad)
out
ficom
lock
or
xchg
enter
push
cmp
inc
aam
cmp
es
ins
rcr
add
(bad)
push
xchg
pop
icebp
stc
je
or
icebp
jmp
dec
add
add
dec
dec
xor
add
xor
mov
cs
aaa
lods
fidivr
dec
jmp
cli
ins
arpl
push
and
cld
push
inc
push
pop
imul
loope
add
mov
loop
aaa
push
push
sbb
stos
or
mov
cs
mov
or
sub
sbb
push
jge
fadd
fld
cmp
cmp
in
xor
shl
cmp
(bad)
leave
(bad)
sbb
add
js
pop
mov
inc
sub
fs
shr
push
xchg
mov
sbb
push
pushf
adc
fld
jge
sbb
adc
shl
dec
or
scas
mov
dec
sahf
popa
and
das
or
(bad)
fwait
add
ins
aas
xchg
ss
ret
push
dec
test
bound
fsub
add
pop
test
xchg
sbb
xor
loopne
lea
xor
js
int3
rol
scas
add
test
in
pop
mov
xor
xor
cmp
or
test
cmp
adc
jo
and
cld
cld
or
pop
cmc
and
add
in
pop
mov
add
cmp
or
ret
imul
jmp
push
test
add
push
push
ins
mov
adc
push
xor
adc
adc
pusha
add
cmps
in
inc
add
(bad)
(bad)
sub
cmp
lods
mov
mov
call
adc
ret
(bad)
fdiv
sub
add
ins
hlt
xor
jo
adc
adc
mov
int3
jecxz
cmps
pop
shl
rol
out
aas
cwd
test
mov
xchg
aam
mov
pop
and
test
cmp
adc
add
(bad)
fs
xadd
mov
inc
enter
sar
pop
bndldx
jge
out
enter
adc
jmp
in
outs
xchg
aas
cmp
xor
loopne
mov
push
inc
and
xor
mov
and
ret
mov
lock
out
pop
inc
sub
jo
pop
inc
daa
jle
rcl
shl
pop
jmp
pop
retf
xchg
ins
or
jmp
aaa
and
int3
push
(bad)
call
add
loopne
and
dec
sbb
mov
nop
add
mov
xor
out
cmp
add
adc
sbb
sub
fld
es
popf
push
and
(bad)
sti
in
adc
jne
out
sar
pop
ja
push
test
add
call
fmul
fcom
dec
out
xchg
fcomp
xchg
imul
sbb
jmp
cld
pop
or
cmp
add
mov
(bad)
push
sbb
ror
push
(bad)
aam
add
mov
add
sbb
push
pop
add
xchg
into
jne
push
enter
and
je
and
cmp
fcom
xchg
mov
sbb
mov
int
or
fwait
and
jbe
test
push
into
int
or
pop
cdq
jne
dec
dec
inc
cmp
lea
sti
jbe
int3
add
enter
fs
call
fistp
pushf
mov
mov
inc
inc
mov
xor
lea
sar
mov
add
mov
mov
dec
jmp
adc
push
bound
and
or
inc
sahf
cmp
and
inc
loopne
and
cmp
push
jae
cmovb
test
lock
xor
cmp
cs
into
adc
daa
push
cmp
inc
imul
aad
sbb
mov
iret
inc
add
xchg
call
dec
sbb
aaa
nop
movs
pushf
fwait
sub
adc
xor
cmp
div
sub
mov
add
add
add
ret
mov
cwde
shl
and
dec
inc
or
loope
push
pop
inc
push
loope
jb
push
imul
pop
test
add
add
or
mov
imul
mov
(bad)
mov
dec
jae
ret
xlat
sbb
(bad)
xchg
and
fwait
cld
inc
push
cli
bound
adc
clc
xlat
sbb
inc
retf
push
mov
sbb
mov
pop
(bad)
xlat
mov
xor
scas
jge
cld
das
rcl
ins
fmul
fcom
push
clc
movs
and
push
(bad)
sbb
xchg
call
push
sbb
test
stos
mov
xchg
addr16
lds
(bad)
(bad)
cmp
adc
sti
push
daa
dec
sub
pop
xchg
sub
xlat
pop
dec
sbb
and
push
push
adc
push
and
and
movs
cmp
inc
sub
inc
and
fisub
adc
pop
in
push
add
xchg
or
push
jbe
sub
push
sbb
adc
add
out
inc
sub
in
pop
ror
(bad)
xor
or
movs
ror
adc
or
je
adc
pop
push
xchg
imul
push
(bad)
xor
call
adc
jbe
(bad)
std
dec
call
and
push
sbb
imul
and
push
xor
pop
test
aaa
hlt
loopne
dec
adc
add
mov
out
cmp
sub
jns
pop
push
push
or
or
add
sub
sub
jno
adc
aam
sbb
or
fsub
call
dec
mov
daa
cmp
or
xor
nop
ins
push
movs
add
pop
into
into
sahf
rol
or
adc
push
cmp
mov
xor
dec
ja
add
cwde
push
in
cmp
lock
sub
in
push
mov
mov
inc
imul
dec
or
ins
loopne
mov
xor
mov
lock
dec
cmp
dec
push
xchg
clc
hlt
cld
push
or
out
xor
addr16
add
or
ret
add
fwait
lds
movs
lods
adc
mov
mov
or
pop
xchg
int3
dec
or
cdq
ss
lock
hlt
adc
or
inc
xchg
xchg
inc
jb
ins
(bad)
push
add
dec
push
or
shr
pop
test
mov
ret
sbb
sti
dec
or
xchg
sbb
sbb
fsubr
fcmovne
jnp
or
inc
or
lock
or
adc
add
or
dec
inc
cdq
movs
push
mov
mov
mov
dec
or
inc
es
jl
sub
jg
push
add
rcl
ja
pop
add
(bad)
imul
cmp
jno
jge
sub
mov
sub
fiadd
dec
mov
test
sub
cmp
adc
push
ja
test
imul
je
sub
add
jo
jb
mov
in
popa
cmp
mov
popa
test
xor
sub
aad
jl
push
mov
adc
cs
pop
sbb
in
push
ret
add
inc
adc
add
dec
pop
cmp
stc
push
pop
mov
sub
cmc
and
xlat
das
pop
retf
shl
xchg
cmp
mov
xchg
lea
test
cmovge
movhps
add
sbb
xchg
sub
or
xor
pop
sbb
sbb
sub
out
inc
push
push
push
mov
mov
add
xchg
xchg
iret
fidivr
and
sub
push
in
imul
jb
cwde
add
pop
movs
or
add
dec
fs
pop
xchg
hlt
lahf
mov
dec
xchg
push
dec
sbb
movs
adc
shl
mov
test
in
nop
adc
sub
sub
sbb
(bad)
sub
mov
pop
mov
popf
push
jbe
adc
adc
ror
rcl
xor
arpl
adc
neg
fwait
test
push
ss
add
loop
cmp
pop
jno
add
or
jp
dec
xchg
pop
sbb
pop
push
jmp
sub
adc
das
sub
lds
enter
repnz
adc
(bad)
jne
mov
daa
mov
inc
xchg
es
pop
inc
inc
mov
adc
addr16
cmp
and
movs
cmp
cmp
xor
int3
xchg
or
inc
xor
imul
stc
push
jno
out
shl
or
repnz
inc
push
sbb
mov
in
(bad)
fldenv
xor
mov
lock
add
fs
and
xlat
sbb
adc
sbb
pop
or
or
movs
xchg
add
shl
or
and
xor
jecxz
push
nop
inc
push
dec
xor
dec
mov
cwde
dec
jns
add
xor
rcl
cld
sti
dec
push
fsub
xor
imul
enter
cmp
movs
test
cwde
shl
sub
adc
(bad)
and
sub
add
mov
add
shl
cmps
movs
test
es
cmc
and
xor
pusha
push
test
inc
xchg
inc
xor
adc
push
dec
test
mov
xchg
adc
nop
movs
push
xor
mov
ja
daa
push
shl
xlat
jle
(bad)
ja
jnp
adc
aam
outs
sbb
adc
push
sbb
push
jo
xchg
mov
push
xor
push
int3
and
pop
leave
ins
add
fcmovnb
popa
ret
leave
in
jmp
mov
lods
out
jmp
fwait
inc
adc
push
dec
dec
mov
xchg
sub
jecxz
mul
ins
adc
push
push
xor
aaa
pop
inc
inc
movs
imul
addr16
fidivr
sub
daa
loope
ror
movs
inc
repz
sub
sub
test
adc
stos
inc
and
xor
jp
xor
sbb
fsubr
pop
xchg
inc
mov
cmps
sub
pop
adc
push
adc
or
add
and
les
adc
xor
in
test
inc
stos
push
mov
inc
fisubr
repnz
add
imul
test
pusha
add
cmp
jae
enter
add
test
add
jmp
lods
pop
out
mov
mov
(bad)
and
sbb
fdiv
enter
jne
sbb
int3
adc
mov
adc
loopne
adc
xchg
cmp
fbstp
ins
int3
inc
add
pop
push
and
je
lods
sub
cmps
mov
mov
das
add
and
mov
test
les
jbe
adc
sub
les
stc
and
lock
cs
test
and
mov
push
sub
inc
add
pop
sub
movs
inc
scas
enter
xor
(bad)
sbb
je
mov
sbb
dec
fsubr
test
jmp
and
pop
enter
mov
icebp
cmp
arpl
aas
cld
cli
and
loope
sub
cdq
push
daa
sub
or
movs
dec
call
stc
pop
outs
jmp
aaa
add
pushf
mov
es
(bad)
jmp
stc
fimul
lahf
jmp
daa
in
out
leave
mov
test
and
in
mov
xchg
clc
sbb
add
movs
mov
aaa
xor
loop
int
lock
mov
mov
shr
push
xchg
xlat
sub
and
push
test
and
fnstenv
push
es
push
nop
das
xchg
add
and
sub
xor
stos
add
xor
outs
popf
push
jnp
je
pushf
and
push
iret
mov
add
inc
sbb
das
lock
push
aas
xlat
sub
cmps
adc
push
psraw
add
push
cmc
das
inc
sub
adc
out
or
je
sub
mov
call
push
das
mov
test
cld
adc
into
mov
mov
adc
pop
add
sbb
push
or
mov
pop
adc
cmp
sub
or
out
sbb
stos
and
adc
push
or
(bad)
fnstenv
xchg
mov
xor
or
sbb
js
mov
and
leave
inc
sbb
xchg
push
adc
and
and
mov
mov
div
test
loope
leave
mov
xchg
scas
sub
les
mov
push
ret
int3
and
mov
cmc
jl
adc
push
dec
fs
or
mov
in
rcr
inc
aam
add
jb
or
push
or
push
add
sbb
inc
pop
fdiv
push
int3
dec
loopne
and
aas
mov
fbld
dec
movs
and
jp
inc
jb
mov
ins
lahf
cmp
(bad)
pop
jmp
dec
shl
lea
jecxz
and
in
pop
cwde
inc
mov
mov
sbb
cmp
rcr
mov
mov
aad
lock
xchg
test
xor
imul
sub
sub
sub
xor
pop
dec
mov
adc
xor
sub
out
jbe
inc
sub
rol
aas
fdiv
xor
mov
and
mov
into
or
push
mov
push
and
xor
xor
pop
(bad)
(bad)
mov
mov
mov
lahf
add
inc
adc
(bad)
cmp
je
fs
sub
dec
jp
adc
or
cld
xchg
jnp
mov
fwait
nop
in
dec
adc
in
in
in
pop
push
jmp
push
mov
push
mov
sbb
pop
add
dec
inc
cld
or
popa
retf
add
add
add
(bad)
mov
js
call
lock
jl
les
add
mov
ins
and
adc
dec
jae
pushf
add
or
es
adc
push
or
mov
mov
shl
mov
aas
rcr
jmp
and
push
fadd
xor
rcl
pop
or
add
and
xor
les
push
clc
and
jp
adc
add
sub
inc
sub
idiv
add
retf
and
je
data16
inc
adc
add
push
mov
jmp
push
and
pop
xor
mov
adc
out
rol
dec
xchg
push
inc
fs
sub
pop
jmp
movups
pop
outs
loopne
push
shl
inc
pop
js
xor
add
test
adc
and
test
push
adc
jg
add
or
movs
cmp
and
add
dec
es
or
add
cdq
movs
mov
adc
mov
cmp
dec
xchg
adc
push
dec
add
ss
cld
stos
or
(bad)
nop
ja
or
sti
data16
sbb
or
pop
clc
or
mov
and
xchg
leave
mov
in
(bad)
mov
dec
jp
dec
sub
or
lods
jnp
push
and
mov
mov
or
or
fwait
sbb
jne
mov
jle
call
ins
and
test
push
jb
dec
mov
fcom
inc
dec
daa
dec
hlt
or
xchg
inc
scas
fwait
sub
push
mov
das
ss
sti
cmp
jp
sub
or
sub
pushf
xchg
or
mov
mov
or
test
and
or
mov
mov
mov
adc
sub
or
pop
adc
and
xchg
dec
not
cld
movs
sub
pop
test
mov
rcl
jl
(bad)
cmp
dec
sbb
sti
test
pop
clc
into
lods
sar
cmp
aas
inc
inc
or
xor
mov
popa
dec
pop
imul
inc
mov
sub
ss
leave
xor
dec
enter
sub
sbb
es
call
cmp
sub
aas
push
add
mov
inc
jne
mov
and
cwde
jae
mov
cmp
add
sti
dec
or
mov
xor
add
or
pop
mov
pop
add
popa
lds
stc
popa
and
sub
xor
add
jb
mov
add
add
sub
loop
shl
or
sub
stos
fidivr
adc
dec
mov
and
jp
cmp
add
cmp
dec
push
rcl
mov
in
clc
push
inc
sub
bound
movs
mov
xor
cs
push
loopne
stos
sub
xor
push
movs
in
push
out
jmp
jge
adc
and
push
lods
cwde
pop
ret
ret
add
imul
fisubr
add
and
and
daa
dec
mov
push
sub
push
push
push
aam
inc
xor
inc
adc
xor
and
imul
pop
jg
loopne
push
out
das
push
pop
clc
jge
push
push
sub
out
pop
mov
pop
pop
push
loope
mov
pop
inc
rcr
fcmovnu
add
lods
test
aas
jb
je
mov
cmp
and
loop
push
dec
push
stos
adc
scas
nop
push
sub
push
add
fs
lods
jns
jb
inc
sbb
add
jb
movs
add
add
pop
mov
call
mov
push
ret
pushf
xchg
out
cmp
and
adc
sbb
push
je
ja
and
aad
or
xchg
add
adc
fucomi
lds
(bad)
add
push
stos
push
and
add
arpl
retf
rcl
push
fwait
imul
push
and
pop
in
or
enter
stos
adc
shr
outs
mov
arpl
and
mov
mov
imul
jmp
js
xor
xor
mov
and
rcr
test
add
pop
sub
dec
push
test
sbb
dec
cld
inc
add
aaa
test
ss
shl
xchg
and
or
xchg
mov
add
pusha
mov
dec
xor
sbb
jnp
loop
cmp
inc
shl
hlt
adc
or
inc
or
es
hlt
pop
jo
mov
(bad)
dec
mov
lds
mov
or
in
(bad)
ret
mov
hlt
inc
sbb
adc
add
xor
inc
jecxz
sub
daa
or
dec
add
out
jbe
adc
dec
inc
fimul
jns
sbb
push
or
div
and
add
dec
xchg
sub
test
jg
and
push
mov
jmp
into
adc
inc
fnstenv
jmp
es
inc
and
les
push
fnsave
adc
push
test
and
mov
jmp
add
push
sub
mov
push
test
push
pop
pop
addr16
stos
cld
into
sub
daa
dec
pop
inc
or
pop
in
mov
adc
and
lea
and
lods
and
inc
add
adc
cmps
movs
mov
jb
daa
sbb
shr
shl
nop
inc
jg
add
xchg
jl
enter
jge
mov
adc
pop
clc
lea
xor
adc
dec
pop
inc
test
cmp
in
push
cmp
arpl
aam
xchg
mov
dec
or
repnz
sbb
scas
lods
shl
inc
fldenv
fistp
cs
clc
mov
lods
push
sahf
jmp
ins
inc
adc
xor
push
or
clc
rol
xchg
xchg
fst
xchg
imul
and
sbb
fmul
jbe
les
sahf
add
stos
mov
jo
add
xchg
into
or
repnz
adc
and
cmp
test
mov
xor
lock
ret
es
fidivr
jne
jecxz
pop
mov
cmovb
inc
data16
ficom
test
cmp
(bad)
test
inc
das
sbb
jmp
rol
mov
and
mov
inc
je
sub
clc
(bad)
in
push
push
aaa
fadd
dec
dec
xor
in
add
xor
test
sbb
hlt
icebp
ja
repnz
push
add
popf
punpckhwd
nop
popf
and
mov
add
out
fs
pusha
enter
(bad)
loop
bound
xchg
xchg
fild
push
dec
and
repz
icebp
and
ret
lahf
or
add
in
pop
pop
dec
je
add
sub
push
les
push
push
inc
lock
push
and
dec
add
mov
dec
add
ds
add
cmps
sbb
(bad)
inc
out
inc
out
test
cmp
sub
mov
stos
lock
cmc
call
inc
and
or
lds
inc
cmps
adc
pop
inc
xchg
pop
push
ror
cmp
jge
mov
dec
inc
sub
xchg
xchg
(bad)
mov
adc
lods
mov
out
jo
and
sub
and
xchg
in
pop
pop
mov
sbb
add
dec
mov
cmp
xchg
sub
mov
cs
and
mov
inc
pop
mov
mov
add
mov
pop
and
ror
jecxz
mov
and
mov
xchg
mov
lahf
push
adc
jne
fld
fiadd
sub
mov
cmp
mov
ficom
xor
mov
jp
or
dec
xor
add
mov
inc
neg
dec
sub
fdiv
push
das
xor
push
sub
pop
add
lea
icebp
inc
add
add
fstp
and
mov
cld
int
fcomp
loopne
fbstp
fs
mov
bound
inc
or
mov
push
jae
add
call
pop
outs
and
mov
or
fwait
mov
pop
adc
and
in
xor
ror
jmp
dec
adc
clc
xor
inc
dec
fbld
jno
lahf
shl
popa
xlat
push
dec
xchg
inc
(bad)
lock
inc
and
jle
jns
(bad)
retf
cmp
or
shl
jo
les
dec
add
scas
jbe
test
dec
fwait
dec
adc
sti
adc
ins
in
dec
out
and
xchg
test
ffree
add
(bad)
retf
popa
dec
jmp
ins
add
stos
dec
mov
in
stc
loope
push
sub
or
dec
ins
pop
ucomiss
fldenv
and
clc
jl
inc
mov
dec
mov
or
xor
xchg
cmp
(bad)
pop
(bad)
movs
mov
rcr
xor
cmp
push
das
dec
fadd
add
mov
ins
ins
push
imul
int3
pop
mov
push
jnp
xchg
xchg
jo
pop
pop
and
mov
scas
nop
jmp
dec
sbb
cmps
ror
and
(bad)
sar
dec
addr16
cmovnp
cdq
push
clc
mov
sub
or
jae
or
(bad)
add
sbb
sbb
dec
dec
outs
imul
push
test
cmp
xor
xor
mov
sbb
mov
xchg
daa
rol
dec
add
and
(bad)
mov
and
cwde
xchg
out
pop
clc
xor
or
pop
cwde
xchg
mov
push
xchg
les
bound
add
xor
mov
xor
mov
(bad)
outs
icebp
or
enter
nop
fist
or
hlt
nop
pop
push
cdq
dec
nop
add
or
sbb
cld
xchg
add
(bad)
outs
sbb
xchg
xchg
add
and
mov
push
adc
sbb
pop
mov
dec
push
mov
push
push
ret
adc
fs
pop
pop
movs
adc
in
ffree
push
clc
dec
jl
inc
jae
cmp
cld
(bad)
push
add
inc
pop
and
leave
xchg
jns
cmp
jbe
jecxz
jo
jne
outs
iret
out
add
pop
inc
pop
loopne
xchg
sub
sbb
add
das
adc
pusha
fidiv
addr16
and
imul
dec
sar
xchg
shr
lock
add
add
iret
dec
push
retf
xor
test
test
pop
(bad)
imul
in
adc
or
sbb
and
jns
out
dec
mov
mov
test
inc
sahf
retf
call
or
xchg
push
imul
jmp
mov
fwait
push
test
mov
or
add
daa
or
stos
add
lods
or
add
add
stos
dec
adc
push
sbb
push
fldcw
and
test
lock
aad
seta
retf
call
push
jb
mov
xchg
adc
sbb
xchg
jmp
in
inc
movs
cmps
popa
inc
cmp
dec
mov
xchg
mov
mov
inc
inc
(bad)
dec
cmp
fdivr
xor
cmp
or
pop
daa
jne
jo
bound
or
mov
aas
sub
adc
fild
jmp
pop
popa
dec
push
xor
out
ja
and
in
fs
cmp
jl
or
js
or
je
repnz
std
ins
and
add
add
leave
mov
pusha
pop
sbb
pop
dec
in
sar
push
and
dec
and
jb
imul
and
leave
dec
jae
hlt
hlt
sbb
pop
enter
inc
mov
clc
(bad)
xor
call
int3
test
add
popa
shl
mov
inc
xor
retf
sub
cmp
add
pop
pop
mov
test
dec
mov
(bad)
movs
push
adc
repz
inc
add
gs
or
ret
add
fs
(bad)
dec
stos
sub
adc
ins
push
repz
mov
sbb
cmps
ret
adc
popa
inc
das
inc
adc
push
push
repnz
jo
and
(bad)
dec
add
(bad)
retf
popa
mov
cmp
jne
cmp
mov
adc
pop
mov
imul
sbb
or
jne
adc
out
sbb
or
outs
xor
fs
add
pop
xchg
dec
icebp
push
fs
das
adc
xchg
add
and
inc
lock
sub
sub
jle
cmp
dec
xchg
push
adc
pop
mov
outs
mov
repnz
pop
sub
sbb
pop
imul
movs
or
outs
add
pop
sbb
push
test
dec
sbb
test
or
adc
jle
nop
addr16
add
sub
(bad)
adc
pusha
cmp
or
xlat
outs
mov
add
adc
clc
pusha
xchg
add
push
repnz
pop
int3
mov
(bad)
nop
(bad)
cmc
cmp
mov
sbb
inc
iret
cmp
jbe
bound
cmp
dec
adc
adc
aad
push
push
inc
pusha
dec
test
push
sbb
loopne
xchg
push
push
or
aas
push
je
lods
mov
and
cmp
or
add
es
and
push
pop
sub
pusha
sub
mov
xor
pop
inc
sub
mov
inc
xor
ins
pop
ret
daa
test
pop
loope
dec
and
pushf
mov
xor
add
mov
mov
retf
and
rcr
adc
call
test
mov
xchg
dec
mov
push
test
push
test
lods
jns
hlt
jne
or
aas
sub
jne
fld
retf
push
lods
pop
mov
and
lds
mov
sub
ret
dec
pop
pushf
jge
aam
adc
xchg
mov
inc
nop
or
and
(bad)
xlat
lods
mov
sbb
imul
cmp
mov
xor
rcr
ret
retf
jmp
pop
test
dec
and
ja
push
xor
enter
push
cmp
xor
xor
sbb
cmp
and
push
in
adc
lahf
test
aam
imul
arpl
add
sub
call
retf
cwde
dec
or
sub
imul
das
mov
and
push
stc
in
jmp
idiv
dec
ins
pslld
sbb
clc
push
shl
rcr
add
push
fyl2xp1
add
and
cwde
mov
dec
xlat
loope
ror
frstor
inc
loopne
mov
cmp
sub
push
pop
and
enter
inc
mov
pop
and
pop
or
mov
inc
xor
and
mov
mov
sbb
adc
dec
inc
adc
xchg
mov
mov
or
dec
lock
rcl
cmp
mov
sbb
dec
mov
mov
inc
cmps
in
add
outs
push
rcr
adc
push
sbb
xchg
sbb
xlat
and
adc
mov
inc
sub
les
in
scas
add
or
pop
arpl
ret
test
xchg
mov
xchg
daa
test
sbb
adc
fstp
xchg
cmp
or
sahf
or
push
in
repnz
(bad)
cs
cs
sub
and
jb
and
push
mov
in
fdiv
imul
or
sbb
enter
xor
mov
cmc
int
add
test
(bad)
xchg
(bad)
mov
jbe
movs
das
sbb
iret
ja
pop
lock
cmp
mov
je
xchg
aas
add
add
dec
lods
fwait
(bad)
mov
cli
push
mov
add
jp
pop
and
xlat
repnz
jl
xor
popa
retf
ja
push
dec
xor
xor
imul
imul
pushf
sbb
enter
in
or
test
nop
outs
in
cmp
hlt
not
and
mov
or
daa
int
and
mov
out
mov
mov
sub
les
jno
pop
xchg
add
lods
inc
(bad)
inc
lds
sub
sub
out
fstp
aam
add
xor
push
pop
xchg
mov
xchg
sub
xor
shl
mov
add
mov
loopne
inc
adc
adc
add
cdq
cmp
xor
xor
add
fdiv
fistp
adc
lock
mov
dec
mov
adc
and
adc
pop
or
pop
test
lea
jl
or
dec
add
mov
adc
retf
sbb
xchg
jge
push
cmp
shl
and
cmps
or
cmc
cmp
sub
add
mov
jmp
dec
pushf
jmp
mov
dec
div
jae
mov
mov
call
add
or
sub
rcl
or
xor
je
mov
mov
add
sbb
adc
or
add
mov
xchg
in
in
xchg
jle
mov
loop
lea
push
inc
cmp
cmp
rcr
or
push
xchg
fcomp
inc
adc
in
sub
jb
imul
push
dec
jmp
pop
sub
loopne
and
adc
push
call
stos
xchg
xchg
sbb
nop
ja
fwait
xchg
push
into
jmp
push
cmp
cmp
mov
pusha
dec
or
or
cmp
inc
inc
xchg
jnp
je
add
jecxz
xlat
(bad)
ds
out
imul
in
or
jne
lds
addr16
push
mov
and
arpl
inc
popa
pop
pop
mov
adc
inc
pop
(bad)
sar
aam
push
push
mov
and
std
and
shl
mov
sub
fldcw
push
movzx
and
fucomip
mov
ja
mov
addr16
inc
sbb
(bad)
dec
popa
inc
pop
mov
loope
push
cmp
pusha
add
push
sub
push
xor
add
inc
cmp
sbb
icebp
sub
sbb
add
rcr
nop
or
mov
xor
add
dec
adc
sbb
fs
test
mov
adc
dec
movs
mov
inc
rol
in
dec
test
and
scas
or
adc
cmp
out
sbb
jne
movs
push
push
aaa
cs
dec
and
jns
mov
(bad)
pop
add
call
cs
adc
pop
cmp
pop
xchg
push
loope
cld
sub
fsub
push
cmp
enter
mov
cdq
dec
pop
(bad)
jmp
(bad)
mov
repnz
(bad)
fild
add
hlt
inc
mov
mov
or
movs
jbe
push
dec
and
and
dec
push
test
cs
lock
nop
sbb
jmp
scas
sbb
xor
dec
sbb
xchg
cdq
inc
jns
add
pop
in
sub
outs
enter
sbb
pop
(bad)
jmp
mov
clc
cdq
and
add
cmp
add
adc
psadbw
shl
sbb
cmp
fcmovne
sbb
sub
push
sub
mov
xchg
test
adc
ds
rol
mov
sbb
mov
cld
add
fisttp
popf
mov
push
xor
add
ja
adc
lock
and
rcr
loopne
leave
(bad)
nop
xchg
mov
xchg
dec
addr16
shl
adc
add
pusha
leave
dec
inc
stc
in
mov
enter
add
sub
nop
test
gs
pop
add
push
repz
in
jbe
rcl
sub
in
sahf
and
pop
pop
inc
push
retf
out
int3
adc
dec
sbb
hlt
sub
popf
cmp
out
add
sub
adc
movs
les
fadd
mov
push
cmp
push
dec
loopne
dec
mov
imul
pop
or
sub
xor
inc
stc
shl
je
cmp
xchg
and
adc
imul
push
pop
sub
mov
xor
es
sub
sbb
pop
pop
push
repnz
jecxz
enter
push
fcomp
sbb
inc
xor
inc
in
xchg
data16
test
xor
jae
pop
shr
or
adc
mov
cmp
and
or
push
je
fidivr
mov
dec
or
jmp
sbb
dec
inc
call
add
cmp
sbb
and
outs
xor
adc
or
mov
test
push
pop
pusha
or
sbb
add
sub
push
ja
sbb
fdivr
and
push
and
sub
add
add
ds
popa
jmp
int3
or
fnstcw
fsubr
adc
inc
(bad)
js
mov
test
inc
fisttp
rol
xchg
and
pop
xor
push
xor
mov
sub
outs
sub
cmp
dec
sub
sbb
mov
pusha
jb
adc
cld
or
dec
movs
out
cmp
add
rcl
js
xchg
call
inc
push
int
ja
pop
sub
push
inc
cmps
cwde
push
test
scas
and
loop
sub
mov
nop
xchg
dec
or
sbb
and
add
adc
adc
or
test
test
out
push
add
jmp
add
aas
push
dec
add
and
add
dec
adc
inc
cmp
shr
nop
push
test
jecxz
xor
(bad)
ins
mov
xchg
std
or
pusha
mov
rcr
lods
push
sbb
ins
movs
scas
add
inc
xor
repz
adc
mov
inc
cs
xlat
retf
or
mov
adc
add
cwde
popa
aaa
inc
or
add
or
jne
sbb
imul
addr16
sbb
jl
dec
sbb
iret
or
dec
or
aas
push
sub
sbb
clc
sub
adc
fcom
ret
xchg
es
ds
xor
nop
jnp
ins
sbb
sub
sti
movs
cmps
pushf
sbb
dec
mov
in
mov
mov
sbb
inc
mov
fstp
push
sub
and
mov
lods
frstor
dec
call
jno
mov
adc
das
sbb
pop
add
cmp
add
enter
or
stc
pop
add
xor
sbb
je
ja
adc
sbb
push
and
ds
sbb
lea
cmp
inc
cmp
fidivr
rcl
pshufw
je
sub
pop
fwait
ret
jmp
cld
pop
ds
rcr
out
dec
push
jmp
push
cdq
mov
stc
push
sub
jp
cmp
mov
jg
add
mov
aas
inc
or
mov
cwde
push
mov
mov
or
inc
xor
pusha
ret
or
ror
jmp
shl
mov
mov
dec
dec
dec
xor
cmp
ins
jno
and
stos
mov
cmp
aaa
int3
add
aaa
cmp
pusha
mov
shrd
rcr
inc
gs
add
aas
adc
shl
movs
add
gs
sbb
jp
pop
(bad)
iret
push
adc
sub
call
push
fisttp
cmc
pop
js
push
cmp
loopne
jmp
adc
shl
test
adc
add
adc
nop
cmps
adc
or
sub
daa
test
push
push
test
leave
xor
dec
ror
add
xchg
popa
mov
int3
out
and
xchg
cmp
jl
xchg
xor
adc
out
das
push
addps
outs
inc
imul
call
sbb
sbb
mov
inc
mov
add
dec
nop
cmp
fs
sbb
pusha
call
data16
call
stos
mov
dec
in
sub
arpl
call
xchg
adc
jl
dec
out
inc
cmp
sub
sar
sbb
inc
push
mov
in
cmp
adc
cmp
ins
jne
push
sbb
mov
sar
push
retf
sbb
xchg
or
adc
jge
push
or
loope
mov
add
dec
inc
push
push
dec
loop
sbb
inc
dec
lea
ja
sbb
or
sbb
imul
push
mov
adc
pop
aam
mov
outs
pop
les
test
test
test
loope
and
cmp
in
dec
fnsave
call
push
sbb
mov
clc
adc
fcomip
and
xor
cmp
adc
dec
mov
or
ret
mov
popa
xchg
adc
lea
sbb
sub
pushf
mov
sub
pop
add
retf
es
adc
das
add
adc
test
add
aas
push
add
rol
sbb
xchg
inc
gs
sub
jns
add
and
push
ja
call
pop
(bad)
mov
adc
or
or
js
xchg
mov
loopne
arpl
dec
das
adc
addr16
push
jecxz
in
inc
dec
jne
inc
lock
test
iret
inc
in
push
mov
data16
test
mov
(bad)
push
mov
xor
or
cmps
dec
pushf
in
into
inc
js
adc
neg
movs
xor
cvtps2pi
cmp
jno
xlat
add
dec
or
mov
cwde
cmp
mov
test
lds
lock
add
jg
or
addr16
adc
aam
out
enter
cmp
mov
xchg
stos
popa
jae
pop
mov
loopne
pop
or
adc
fs
inc
inc
aas
push
ret
mov
push
mov
mov
dec
xchg
test
and
sub
jmp
push
ret
inc
and
(bad)
sti
movs
mov
push
sbb
adc
movs
sbb
add
jns
sbb
add
jl
jmp
adc
mov
fiadd
xchg
lods
jb
mov
push
inc
sub
mov
sar
pop
sbb
cwde
test
je
daa
jl
mov
imul
int3
sbb
test
mov
jg
hlt
inc
je
jnp
add
lea
in
cmps
gs
jnp
push
mov
fsub
adc
call
add
sbb
js
add
adc
jb
push
imul
cmps
mov
pop
xchg
call
add
dec
add
aam
xchg
mov
shr
jo
call
(bad)
pop
sub
test
sub
popa
adc
popa
or
xchg
push
jg
enter
pop
inc
add
push
outs
fadd
pop
xor
dec
sub
js
and
jns
imul
(bad)
xor
push
jecxz
jo
pop
ret
test
dec
mov
jmp
cld
pop
add
scas
adc
ret
or
push
pusha
in
jmp
loope
je
jp
push
test
mov
lods
cmp
test
add
sar
or
add
sub
jl
cmc
xor
shl
mov
pop
sub
inc
xor
sbb
dec
inc
imul
clc
inc
sub
push
psrlq
rol
jnp
and
aas
xchg
pop
je
enter
add
icebp
or
in
and
xchg
add
scas
xor
mov
push
or
inc
jmp
push
inc
sar
mov
out
in
movs
push
mov
movs
xor
je
sahf
(bad)
mov
inc
rol
out
enter
sbb
gs
xchg
out
(bad)
pop
sbb
(bad)
fadd
imul
add
inc
mov
fmul
sar
cld
and
ins
mov
pop
sub
push
push
addr16
inc
and
cmps
cdq
or
xor
jno
mov
xor
pop
popa
pop
add
(bad)
xchg
clc
nop
pop
(bad)
movs
dec
mov
outs
idiv
leave
add
lods
jecxz
push
cdq
cs
or
inc
jbe
mov
push
retf
mov
outs
jmp
sub
es
or
jmp
int3
les
jmp
bound
or
dec
dec
popf
xchg
fimul
xchg
retf
ret
xchg
lea
inc
sub
push
dec
xchg
xchg
xor
xchg
sbb
test
pop
jg
movs
pop
dec
and
xchg
and
push
aaa
cwde
inc
push
jle
fld
bound
jle
aad
adc
inc
outs
sub
jp
lock
aam
push
test
cmp
and
xchg
inc
or
jg
or
mov
lds
ror
or
sub
mov
das
or
loope
sub
les
in
inc
js
cmps
cs
aad
jmp
ja
dec
in
pushw
inc
xlat
add
arpl
adc
in
adc
or
in
pop
jb
pushf
dec
in
mov
and
je
iret
les
push
or
nop
xchg
(bad)
repnz
in
call
or
adc
call
sbb
xor
push
mov
shl
xor
shl
push
jns
push
jnp
call
hlt
and
test
pusha
clc
xchg
push
push
or
bound
jp
fisttp
inc
pop
call
inc
lock
cmp
or
pop
test
push
fdiv
jbe
sbb
outs
add
fadd
ret
les
push
or
xchg
sub
cdq
jmp
or
or
cmp
aaa
in
jbe
dec
loope
jne
movs
or
push
inc
pop
out
scas
mov
dec
or
sbb
add
ret
or
mov
fcom
ins
sub
ds
stc
in
adc
xor
movs
xchg
imul
jmp
inc
pop
js
call
ja
sbb
in
je
mov
or
add
pop
or
mov
cmp
and
sub
add
aas
mov
xchg
push
fmul
pop
sub
cmp
xchg
mov
aaa
jl
cmp
push
add
push
jecxz
push
mov
push
or
inc
mov
xchg
mov
jae
ss
add
pop
pop
sbb
imul
mov
adc
nop
icebp
xchg
inc
cmp
adc
sbb
xchg
xchg
das
fst
adc
cmp
xor
pop
outs
lea
das
xchg
les
dec
dec
popa
add
xor
mov
adc
push
leave
xchg
pop
jg
test
add
and
aad
imul
push
inc
test
cmp
jl
gs
scas
pop
inc
jg
ds
sub
pop
adc
ds
mov
push
jl
rol
adc
push
lock
repz
add
sbb
add
mov
push
lods
sub
xchg
(bad)
sub
out
dec
add
pop
clc
sbb
jmp
mov
jmp
pop
enter
je
stc
cmp
in
xchg
neg
(bad)
cmp
add
add
aaa
in
add
nop
gs
jp
push
lahf
or
adc
dec
adc
mov
cwde
cld
mov
ret
xor
jmp
test
pop
mov
gs
in
mov
retf
sub
stos
dec
mov
and
adc
add
stc
mov
push
mov
push
nop
fcomp
adc
xor
jmp
jns
add
movs
pop
mov
inc
or
sub
or
sti
and
out
xchg
adc
mov
add
inc
mov
pop
add
sub
inc
daa
push
or
mov
push
pop
mov
mov
ja
test
js
les
dec
lods
cwde
lahf
fs
adc
mov
and
aaa
jecxz
cmc
inc
or
repnz
sbb
push
inc
jl
sbb
fwait
mov
sub
pushf
fwait
jne
sbb
inc
hlt
sub
dec
push
aaa
push
cmp
fstp
cmc
ja
fcmovbe
(bad)
pop
mov
ins
adc
xor
inc
inc
ror
bound
pop
aaa
jl
std
(bad)
(bad)
movs
fsubr
adc
leave
sub
inc
cmp
or
xor
test
xor
(bad)
mov
fwait
and
inc
retf
sbb
sub
add
sbb
adc
dec
test
outs
dec
or
and
pop
wrmsr
cs
jmp
mov
xor
xor
xchg
lock
jae
mov
jmp
push
add
addr16
mov
jmp
jns
push
imul
xchg
jae
ins
lock
out
sub
mov
mov
xor
out
push
adc
test
mov
xor
cwde
mov
add
loop
and
js
movs
cmps
and
xchg
ds
jl
jbe
xchg
xchg
adc
call
mov
adc
add
ins
push
push
adc
inc
sbb
lahf
dec
or
pop
addr16
or
sahf
inc
repnz
icebp
xor
xchg
mov
pop
in
fisubr
adc
and
sahf
or
and
aaa
out
test
mov
mov
mov
mov
adc
adc
adc
push
movs
sbb
adc
mov
push
or
(bad)
push
jne
shr
ret
push
lods
call
out
pop
call
cdq
xor
push
inc
jecxz
inc
repz
and
fbstp
or
enter
or
and
nop
cmp
add
div
cmp
mov
in
fimul
push
imul
pop
and
xchg
sbb
or
jns
xor
pop
or
xchg
in
sbb
fcmovnb
(bad)
adc
aaa
sti
ret
test
cdq
lds
test
push
sti
xor
jle
and
jmp
fidiv
pop
iret
out
arpl
and
sub
in
sbb
ja
jo
sbb
or
ds
adc
in
cmps
mov
test
test
add
cmp
or
cmp
dec
add
push
cmc
mov
es
cmp
add
pushf
inc
cs
mov
add
mov
loope
fnstcw
iret
bound
inc
mov
jl
aam
aaa
cdq
adc
movs
aam
mov
and
or
dec
dec
lea
dec
mov
mov
fild
cmps
pop
lahf
mov
add
aad
pop
mov
(bad)
f2xm1
mov
inc
out
retf
xor
xchg
movs
(bad)
push
push
and
iret
fbld
repnz
sub
enter
xchg
ins
push
sbb
pop
mov
or
or
jmp
sub
and
scas
mov
pop
inc
xor
aad
repz
or
test
pushf
nop
pop
add
push
mov
add
inc
xchg
inc
loopne
xlat
inc
out
hlt
in
hlt
inc
adc
adc
inc
adc
xor
push
or
fistp
and
or
sub
scas
add
or
adc
xchg
retf
fistp
xor
pop
sbb
dec
mov
(bad)
pop
adc
inc
ror
rcl
sbb
inc
cdq
(bad)
or
add
or
data16
test
xchg
stos
mov
js
fadd
rcr
pop
xchg
sahf
and
and
jecxz
call
push
mov
clc
hlt
and
sub
fsubr
mov
lods
xor
repz
sub
pop
pop
or
mov
xchg
shr
lods
lods
gs
aad
repz
mov
or
xchg
sbb
in
xlat
cmps
(bad)
loop
test
clc
imul
sub
out
mov
xchg
sub
dec
sbb
dec
sbb
(bad)
lea
push
or
loop
fcmovnbe
dec
ins
inc
jae
lds
or
jecxz
mov
or
jbe
outs
sub
shr
outs
or
and
or
cmp
cmps
popa
fs
sub
je
or
xor
shl
xchg
or
add
inc
jmp
xor
push
ds
adc
mov
test
add
pop
das
pop
and
add
add
push
ja
retf
out
add
clc
and
scas
dec
(bad)
aam
xchg
mov
push
addr16
and
inc
dec
in
or
push
mov
cmp
jo
jo
cmp
gs
ficomp
shl
or
inc
aam
sbb
stc
pop
loop
in
dec
mov
xor
popa
je
pop
mov
mov
sbb
mov
mov
mov
cwde
ins
add
arpl
stos
and
lods
sar
xor
adc
push
mov
or
and
inc
dec
scas
inc
dec
in
call
lock
add
popf
mov
int3
jl
mov
jecxz
in
sub
push
gs
bsf
leave
lea
pop
mov
and
mov
mov
les
cmp
popa
pop
add
aas
jnp
(bad)
sbb
inc
loope
fwait
jmp
fbstp
stos
add
shl
add
mov
pop
and
out
sub
sub
mov
mov
push
(bad)
repnz
push
inc
clc
enter
xor
in
push
sbb
nop
adc
bts
push
mov
aaa
call
jg
nop
or
call
pusha
sub
ins
inc
xor
lods
dec
add
test
loope
imul
(bad)
adc
jl
(bad)
test
cwde
adc
and
pop
add
inc
sub
loopne
nop
cwde
or
fs
jns
and
cmp
push
repnz
xor
ret
push
bsf
lods
dec
or
dec
and
nop
sub
push
or
mov
add
jae
icebp
imul
(bad)
mov
rol
les
daa
sub
add
ds
add
cmp
jne
push
rol
pop
repz
pop
and
enter
sbb
add
clc
mov
test
or
pop
retf
(bad)
fsubr
mov
scas
dec
adc
or
push
adc
jae
adc
popa
test
sbb
icebp
xchg
sbb
stos
daa
pslld
pop
or
mov
inc
ret
test
xchg
adc
test
jl
dec
push
sahf
or
or
cmc
or
add
inc
or
xor
stc
xchg
imul
and
retf
retf
(bad)
shl
mov
pop
sbb
les
daa
push
sub
cmps
sbb
movs
jne
or
sub
in
sub
lahf
sahf
push
inc
jb
(bad)
jmp
(bad)
jge
imul
out
pop
add
add
and
adc
lods
mov
and
push
or
sbb
cmp
(bad)
call
ror
xchg
aaa
adc
cs
rcl
mov
inc
dec
pop
movs
dec
jb
pop
in
push
xchg
lea
add
add
movs
mov
push
and
xlat
dec
xchg
dec
add
add
popf
xor
(bad)
std
adc
xchg
adc
mov
sbb
sbb
dec
xlat
popa
test
or
or
xor
adc
cmp
inc
mov
sbb
cmps
in
sub
jno
dec
call
cmp
adc
cmp
sub
inc
xor
add
or
or
or
cmp
out
clc
add
sbb
pop
movs
add
and
xor
in
rcr
in
cmp
popa
or
and
sbb
clc
and
in
jg
sbb
inc
mov
and
sub
(bad)
dec
push
adc
or
loope
outs
sbb
loope
cmp
faddp
inc
pop
shl
push
pop
and
cmps
outs
sub
push
cmp
sbb
and
push
aad
shl
aad
jno
push
adc
ss
in
dec
(bad)
in
cmps
fst
sub
sub
pop
ret
ja
adc
sub
lahf
aas
mov
push
dec
adc
mov
sub
push
dec
or
inc
or
push
or
xchg
inc
mov
enter
dec
inc
sub
(bad)
xchg
clc
push
enter
repz
add
mov
je
js
sbb
mov
inc
(bad)
dec
xchg
adc
xchg
test
xor
movs
inc
mov
and
mov
mov
push
or
xchg
into
mov
cmps
mov
mov
repnz
mov
adc
retf
adc
add
aas
xchg
cs
push
adc
inc
(bad)
pop
dec
cmp
push
fidiv
sbb
adc
cmps
rcl
and
or
and
popa
pop
xor
(bad)
dec
mov
mov
test
loop
sbb
cmp
or
xchg
and
jle
inc
add
push
add
test
test
xchg
jmp
call
les
cvtpi2ps
sbb
push
cmp
sbb
idiv
xor
outs
inc
adc
sbb
adc
adc
sbb
imul
imul
pop
ins
push
add
or
inc
ins
adc
ins
push
fucomp
add
jbe
and
xor
sub
ds
add
dec
ja
mov
mov
daa
mov
test
data16
inc
mov
sub
fs
loopne
sar
xor
mov
xor
inc
inc
pop
ret
(bad)
mov
and
push
push
sbb
push
cmps
xchg
and
in
ror
fistp
push
imul
mov
adc
push
leave
cmp
mov
cmp
sub
adc
or
fidiv
and
xor
xor
and
inc
push
sub
jg
fst
or
jl
fmul
lea
mov
pop
fisttp
cld
cmp
in
fs
pop
in
ss
mov
push
adc
pop
wrmsr
dec
pusha
mov
pop
stc
dec
or
aam
adc
push
or
mov
inc
in
sbb
xor
aaa
sbb
add
sbb
xor
das
int3
pop
movs
test
push
cmp
push
push
dec
mov
das
loopne
pusha
pop
popa
push
and
or
jo
cmp
mov
inc
out
mov
popa
push
sahf
mov
pushf
pop
sub
mov
xor
xchg
mov
pop
mov
pop
or
mov
jle
adc
or
push
loope
sub
clc
js
shl
popa
push
inc
test
test
and
and
add
and
add
sub
inc
inc
add
add
cmp
add
or
loope
inc
push
je
adc
xchg
inc
sub
lahf
in
(bad)
neg
je
mov
push
dec
sbb
cwde
push
dec
sbb
mov
test
and
sbb
xchg
inc
push
mov
cmps
scas
push
mov
aaa
popa
leave
push
dec
outs
sub
dec
dec
xor
mov
sub
mov
xor
lahf
jl
test
sub
retf
shr
xchg
ret
mov
sbb
pop
inc
mov
add
ror
or
ins
call
add
cmp
and
sub
cmps
je
or
add
les
pop
sub
add
imul
push
test
out
inc
cs
mov
dec
ficom
push
sub
iret
adc
popa
push
inc
push
arpl
dec
push
push
stc
lea
aam
xor
jo
stos
test
mov
adc
pop
sahf
pop
adc
sbb
rol
mov
sub
iret
ret
adc
lock
ret
into
inc
pop
cwde
fmul
cmc
jle
push
add
(bad)
push
jmp
cmp
dec
loope
xor
jmp
loope
add
push
das
arpl
dec
mov
ret
add
jns
inc
and
push
je
add
jns
dec
xor
movs
aaa
fs
js
nop
sub
fstp
add
in
dec
mov
mov
imul
mov
xor
loope
inc
ja
xchg
xchg
pop
sbb
dec
dec
jne
inc
js
adc
push
and
pop
or
xor
push
cmp
ds
or
xchg
sub
mov
jnp
xor
lds
mov
and
add
jne
repz
mov
pusha
sub
mov
sbb
rol
pop
sbb
pushf
int3
sahf
xchg
dec
imul
jo
and
adc
xchg
jl
dec
and
rcl
xor
or
jle
adc
cmp
mov
call
xor
xor
outs
(bad)
fst
outs
jae
ja
xchg
ret
outs
add
cmps
sbb
test
dec
xchg
sbb
adc
dec
fimul
mov
mov
mov
or
add
jmp
xchg
shl
or
cmp
push
aad
inc
adc
aad
inc
or
fistp
jnp
shl
cwde
xor
dec
add
(bad)
loopne
sbb
inc
cmp
shl
xor
cmp
(bad)
dec
fcomp
test
and
ja
sub
dec
call
shr
and
add
mov
fcom
and
jno
push
mov
ds
ret
xor
or
shl
ins
std
int3
pop
fs
inc
stc
movs
rcr
cmp
int3
call
dec
sahf
dec
aas
femms
repnz
dec
adc
inc
aaa
add
inc
mov
test
or
cmp
psadbw
test
aaa
dec
push
adc
xor
ret
cmp
mov
sahf
xor
dec
adc
mov
or
cmp
les
mov
cdq
push
test
lock
or
lock
add
outs
int
in
ss
push
in
pop
and
pop
loopne
adc
outs
(bad)
fcomp
xor
out
fild
or
sub
fisttp
add
add
mov
sbb
aaa
scas
sub
xor
stos
mov
pop
in
out
stos
or
js
or
mov
ins
add
cmps
in
in
int3
fmul
mov
aam
push
sub
neg
mov
xor
les
push
(bad)
mov
nop
aam
ret
in
cwde
or
shl
in
aas
xor
or
cmp
test
popa
je
pop
popf
xor
rcl
pop
not
xor
sub
push
bound
stos
add
cs
sahf
cld
test
sbb
inc
jle
or
cdq
push
sahf
ret
sub
retf
cld
xchg
ret
test
pop
jg
adc
or
pop
push
add
jle
jg
adc
push
sub
cmps
mov
inc
adc
xor
push
stc
mov
adc
cmp
sub
outs
int
adc
dec
or
pop
sub
and
xor
fbld
adc
and
retf
push
inc
or
xchg
push
cmps
xchg
test
jb
rcl
add
lds
xlat
clc
xchg
and
add
fs
outs
adc
xchg
hlt
nop
jno
and
xchg
je
hlt
add
fild
mov
nop
xchg
cwde
pushf
mov
movs
mov
or
jns
jg
or
sbb
and
pop
cmp
cmp
int
sbb
push
lock
and
mov
dec
aam
push
xor
pop
xor
jp
jl
mov
xchg
sbb
clc
mov
sbb
mov
adc
add
add
add
mov
push
add
icebp
pop
xchg
xor
mov
adc
mov
icebp
mov
cmp
pop
add
cmp
jne
pop
pop
pop
mov
jmp
or
jbe
sub
fsubr
gs
or
push
pop
jmp
in
or
jmp
adc
sub
jmp
js
nop
daa
push
jmp
or
xor
pop
xor
jmp
test
adc
stos
and
xor
mov
add
mov
push
jge
xchg
je
push
loope
sbb
lea
mov
popa
mov
mov
(bad)
xchg
icebp
sub
add
add
sub
add
mov
ins
inc
hlt
jb
inc
sbb
cmp
nop
pop
sbb
lods
mov
and
mov
cmp
into
cmp
push
dec
push
ja
sbb
and
sub
sub
or
imul
jno
mov
enter
dec
dec
sub
lds
ret
push
jns
push
cmp
and
add
imul
out
sbb
les
std
dec
imul
dec
shl
movs
lds
inc
test
daa
and
jne
rcl
enter
dec
fiadd
mov
nop
fcom
enter
mov
cmp
mov
test
adc
lods
and
cmp
mov
ret
sbb
cwde
movs
stc
push
jb
add
mov
xchg
add
test
pop
jb
nop
nop
cmps
(bad)
(bad)
call
dec
ret
mov
add
inc
xlat
pusha
adc
add
xchg
mov
mov
mov
imul
inc
out
xor
shr
int3
inc
stos
xchg
nop
xor
xor
(bad)
sbb
xor
div
ret
adc
inc
std
pusha
dec
add
inc
mov
pusha
mov
into
rcl
xchg
rcr
and
push
mov
dec
das
adc
fwait
ret
and
push
jae
xor
scas
stc
add
cmp
push
dec
xchg
inc
pushf
mov
out
jne
loope
stc
sub
sub
cmp
ja
aaa
push
adc
pop
push
stc
movs
xchg
cmp
shr
movs
inc
or
fadd
(bad)
lods
jle
pop
pop
aad
adc
outs
xchg
add
out
jecxz
sbb
js
sub
lods
pop
pop
jbe
xor
les
lods
test
pop
ror
mov
inc
mov
(bad)
pop
fs
dec
xor
mov
dec
mov
push
sub
push
sub
or
cli
jge
mov
adc
or
jnp
(bad)
out
dec
rol
push
mov
bound
jecxz
pop
xor
addr16
add
jecxz
xchg
sbb
fwait
xor
push
lea
lock
and
jne
inc
push
cmp
jl
sub
test
in
dec
ret
jg
shr
sub
xchg
push
pop
add
add
dec
or
and
and
sbb
and
mov
or
inc
out
test
dec
pusha
inc
sar
xor
fadd
dec
inc
repnz
stc
stos
and
or
or
inc
mov
push
or
inc
mov
jmp
adc
repnz
ss
and
or
add
inc
and
xchg
push
js
mov
cli
push
add
dec
mov
daa
ret
mov
mov
mov
pop
jb
and
or
std
imul
imul
add
test
xchg
rcr
sahf
adc
pushf
xchg
push
add
dec
adc
test
mov
mov
sub
add
add
add
(bad)
(bad)
and
mov
ror
test
xor
pop
mov
cmc
sbb
inc
mov
enter
push
adc
in
jmp
mov
cmp
sub
dec
push
mov
and
or
push
mov
push
xor
les
(bad)
cmovs
jno
xor
xor
add
aas
sub
jno
rol
outs
sub
mov
(bad)
cs
cmp
int
call
shl
cmp
inc
or
test
inc
mov
test
test
push
push
cwde
repz
xchg
sub
into
inc
pop
cmc
movs
mul
mov
test
jmp
aaa
sar
jno
jmp
cmp
fcom
bnd
je
sub
and
cli
sar
inc
jae
call
push
push
jmp
mov
or
xor
adc
fwait
les
cmps
jmp
je
test
cmp
xor
fisttp
cmp
jg
enter
inc
std
inc
std
push
fiadd
popf
clc
push
inc
imul
dec
cmp
repnz
xor
cmp
test
mov
arpl
push
sbb
inc
push
mov
loope
fld
dec
fcom
xchg
cmp
mov
test
test
xchg
(bad)
adc
sub
add
dec
and
cdq
dec
bound
pop
xchg
push
dec
xchg
pop
in
ror
sbb
jmp
ja
ss
pop
(bad)
fisubr
pop
mov
call
push
ja
inc
stc
mov
jno
aad
pop
pop
je
add
kmovw
ret
test
cmp
xchg
adc
fwait
mov
fcmovnu
bound
cmp
mov
cmp
mov
or
cmp
mov
add
(bad)
aad
or
xlat
mov
(bad)
xchg
and
mov
ins
mov
dec
out
push
xchg
sbb
adc
xchg
fiadd
push
pop
test
retf
sbb
call
pop
dec
lods
lods
add
sbb
inc
add
dec
dec
mov
xchg
jp
jge
test
dec
mov
xor
fcom
xchg
mov
loope
adc
push
and
inc
xchg
retf
inc
lea
inc
adc
pop
repnz
inc
ja
mov
cmp
or
pop
mov
push
adc
pusha
fs
pushf
test
jbe
push
or
fsubr
push
adc
xor
xchg
adc
clc
cmp
dec
cld
jle
lock
add
adc
inc
cmp
mov
add
push
pusha
loope
push
pop
pop
mov
pusha
sub
les
jl
leave
pop
add
push
add
pop
ins
inc
fdivp
in
push
data16
sub
fmulp
fadd
fstp
fwait
mov
jns
daa
rcr
xchg
and
(bad)
js
out
cs
sbb
add
push
sbb
add
push
not
lock
xor
loope
sbb
js
xchg
cmps
cmp
sbb
or
ss
fidiv
inc
xor
and
sbb
icebp
into
popa
xchg
push
test
mov
aas
je
mov
ret
cmp
mov
adc
fsubrp
xor
sbb
xor
inc
enterw
xchg
xchg
mov
pop
or
arpl
mov
cmp
std
cmp
jmp
add
loope
cdq
jb
cmp
cmp
push
adc
push
jle
cdq
push
or
cmp
inc
ret
mov
mov
mov
fcmovbe
sbb
xor
scas
add
pop
nop
retf
dec
imul
fcomp
jbe
sbb
pop
sbb
xchg
sbb
sbb
pop
pop
sbb
sub
loope
add
outs
adc
sbb
sbb
add
loope
add
addr16
or
in
loop
call
int
push
adc
std
aaa
or
(bad)
pop
jne
sub
push
aas
dec
push
sahf
fild
cmp
sbb
jns
xchg
out
cmp
or
or
cmp
jns
fs
sub
dec
cmp
add
daa
pop
dec
add
or
inc
push
dec
xor
clc
test
and
and
aas
aas
push
inc
test
daa
push
mov
xor
xor
(bad)
cld
adc
mov
xlat
dec
fwait
cli
aas
dec
mov
fdivr
cmp
jg
cmp
push
js
je
ret
xchg
push
pusha
bound
jmp
sbb
loope
mov
and
out
mov
mov
in
or
or
adc
push
and
aam
dec
jg
xchg
mov
push
pusha
dec
in
out
mov
je
push
fwait
aam
mov
sbb
adc
dec
sub
mov
adc
inc
adc
pop
retf
shr
inc
xor
je
inc
cli
jmp
or
cmc
shl
or
xor
ret
sbb
jno
retf
int
leave
fidiv
dec
sub
push
sbb
sbb
or
nop
xchg
jbe
(bad)
or
shr
cmp
xor
test
fiadd
sbb
xlat
jbe
sub
sub
(bad)
cli
mov
pop
pop
add
add
movs
aaa
add
jecxz
stos
pmaddwd
jne
push
inc
outs
ret
nop
xchg
mov
popa
xlat
or
lods
call
and
enter
and
int3
mov
call
outs
mov
add
push
es
cs
add
adc
or
out
cmp
sti
mov
and
lahf
sub
and
pop
icebp
pop
jno
dec
mov
aam
ja
dec
jns
ds
sbb
add
pop
pop
add
shl
into
sbb
pusha
add
ret
aad
xor
xor
popf
aas
sub
xchg
lock
jmp
jmp
push
and
push
ins
repnz
xor
iret
sub
cmp
sub
nop
imul
repnz
xor
es
or
test
inc
call
cmp
ret
or
inc
inc
adc
sbb
out
shl
jl
fcomp
sbb
loopne
sbb
je
adc
and
(bad)
sbb
jnp
xchg
mov
pusha
mov
push
adc
sub
xor
mov
pusha
fadd
adc
lock
push
jmp
push
into
push
ret
mov
xchg
ins
add
push
add
lock
adc
aaa
adc
mov
pop
loopne
add
adc
and
mov
jne
test
cli
mov
fdivrp
jae
or
jb
cli
pop
adc
jne
xchg
push
sub
xchg
mov
jo
(bad)
xor
jo
int3
pusha
jmp
arpl
sbb
ins
push
xchg
jmp
pop
xor
adc
add
test
mov
ret
adc
jne
aas
fst
adc
jo
cmc
fbstp
sub
mov
fld
and
in
pop
xchg
jecxz
cmp
pusha
push
pop
and
in
das
cmp
je
push
and
xchg
sbb
or
in
or
pop
sbb
add
nop
out
adc
daa
cmp
lea
or
fisub
push
pop
pop
sbb
imul
jmp
adc
pop
aad
mov
add
inc
jae
jmp
enter
or
cmp
mov
jmp
add
adc
lods
stos
push
sub
adc
mov
push
push
pop
or
add
loopne
ins
xchg
mov
fstp
loopne
les
inc
inc
test
inc
dec
sub
mov
jae
push
or
add
js
push
sbb
xchg
or
mov
inc
pushf
ins
push
dec
push
in
mov
push
test
dec
xadd
cmp
and
repnz
cld
std
or
pop
mov
add
jp
mov
loopne
push
fsub
push
mov
aam
loope
pop
mov
pop
or
xor
lods
les
dec
(bad)
mul
add
or
imul
adc
adc
mov
outs
sbb
sub
movs
or
add
lahf
mov
leave
push
hlt
(bad)
adc
xor
dec
in
arpl
aad
test
dec
lahf
aas
push
fmul
jmp
mov
push
pop
jp
js
in
adc
add
pop
in
mov
dec
mov
sbb
jne
or
inc
adc
add
mov
dec
test
adc
mov
pop
jae
jmp
mov
ja
push
in
xor
in
jg
adc
or
loope
in
mov
cmp
push
movs
sub
jp
loopne
loop
test
jne
repz
push
mov
jnp
rol
cmps
sub
sbb
in
lock
pop
lahf
pushf
or
movs
cmc
shl
enter
ins
popf
frstor
cmps
out
jecxz
icebp
call
sub
mov
bound
push
mov
js
pcmpeqd
cmp
or
jo
mov
jmp
scas
mov
xor
(bad)
adc
dec
js
mov
inc
or
push
sub
stos
xlat
sbb
dec
inc
push
push
cmps
jecxz
or
movs
cdq
int
test
es
add
lea
sbb
pushf
push
adc
dec
stos
mov
add
xor
mov
popa
mov
dec
sbb
test
ret
sbb
(bad)
bound
push
cmp
jnp
add
dec
pop
or
pushf
adc
jecxz
imul
or
cmps
adc
inc
sbb
(bad)
inc
xchg
adc
dec
(bad)
enter
aad
xor
into
sub
shl
push
cmps
or
jae
daa
movs
loop
inc
lds
mov
or
lock
sbb
push
in
fs
sub
add
aam
imul
fadd
push
xchg
(bad)
xchg
test
push
or
outs
pop
add
adc
scas
shl
adc
inc
pop
xlat
xchg
mov
or
mov
test
stos
mov
push
add
inc
bound
inc
mov
push
mov
pop
sub
and
loop
pop
fwait
mov
cmps
mov
out
(bad)
dec
pop
fcomp
pop
test
adc
xor
and
sub
into
test
and
loopne
fdiv
mov
ins
adc
and
dec
in
call
out
pop
mov
sub
xchg
fs
push
mov
cmp
movs
std
push
adc
push
mov
inc
call
int3
adc
inc
cmp
cmc
add
inc
repz
cmp
add
jmp
push
xchg
cmps
lods
ror
mov
inc
jne
sbb
scas
dec
xor
mov
adc
xchg
imul
xchg
mov
fwait
add
pop
lock
push
inc
out
mov
xchg
outs
fdivr
hlt
mov
das
loop
jge
push
pop
lea
stos
mov
inc
cmp
adc
jo
cld
imul
xchg
cld
and
jge
sbb
add
mov
mov
mov
xchg
cmp
jo
inc
test
jb
mov
inc
adc
cmp
sub
sbb
pop
xlat
adc
push
adc
arpl
ins
add
pushf
mov
mov
dec
cli
inc
xor
fdivp
movs
add
dec
sbb
mov
es
adc
es
or
icebp
mov
mov
adc
add
sbb
(bad)
push
sbb
push
push
adc
inc
jo
je
pop
adc
dec
repnz
ins
je
gs
cmp
adc
mov
cmp
mov
in
mov
add
fwait
mov
cmovl
adc
mov
and
xor
dec
adc
mov
sub
add
dec
idiv
sub
dec
add
dec
or
or
inc
adc
inc
xor
cmp
pop
in
or
sahf
shl
int
inc
add
shl
cmp
mov
mov
(bad)
loopne
pop
cmp
xor
dec
pop
test
ffreep
sbb
inc
and
jae
dec
aaa
imul
aaa
imul
dec
push
out
cmp
pop
ret
aaa
push
aas
mov
(bad)
mov
sub
push
sti
pop
scas
int3
mov
sbb
sbb
cmp
loopne
xchg
add
inc
clc
lods
mov
cld
xlat
push
bound
loop
push
add
and
sbb
add
ja
sub
arpl
ret
jmp
pop
cmp
ret
add
pop
int3
mov
xchg
and
jg
fisub
(bad)
sbb
add
push
iret
push
jo
dec
mov
or
inc
push
or
in
add
or
pop
push
inc
int3
adc
mov
rol
daa
add
fld
cmp
sbb
or
or
sub
jb
movs
aam
repnz
dec
cmc
lahf
push
mov
movs
cmp
sbb
pop
cmp
pop
gs
dec
pop
adc
aas
retf
fwait
push
adc
push
push
or
inc
cmps
or
dec
cmc
out
inc
inc
dec
jecxz
das
ret
hlt
jmp
out
jecxz
icebp
ins
pop
sub
add
cld
pop
ins
jns
icebp
pop
add
pop
fadd
pop
and
jne
outs
and
and
movs
pushf
mov
pusha
sti
pop
push
add
dec
or
dec
and
inc
test
ja
or
nop
or
dec
mov
adc
cmp
xchg
add
cld
nop
inc
aam
loopne
sub
neg
inc
es
or
mov
lods
mov
fisttp
dec
mov
mov
mov
(bad)
lea
out
pop
or
cwde
jb
dec
daa
and
inc
cld
jl
ins
(bad)
fdivr
jnp
add
lods
sbb
cmp
aam
inc
adc
or
nop
cld
xor
std
out
mov
cwde
cmc
movs
or
cmps
movs
jns
adc
push
xchg
sub
out
push
xchg
push
mov
or
hlt
mov
test
push
lock
mov
cmp
xchg
mov
nop
(bad)
sub
gs
jo
fs
fst
dec
imul
ins
cmp
ss
add
push
cmp
pop
dec
test
mov
imul
jb
jl
popa
aam
std
cmp
ret
or
cdq
mov
mov
lahf
dec
mov
lea
or
scas
fst
pop
inc
push
aas
loopne
or
push
retf
dec
or
xchg
sbb
fdiv
or
sbb
popa
mov
mov
ins
ficomp
pop
adc
xchg
pop
sub
(bad)
les
cmp
mov
test
push
jle
add
std
retf
shl
cmp
aad
mov
xchg
or
add
and
xchg
add
fdiv
add
push
push
dec
adc
push
xchg
test
cmps
and
sbb
ins
xor
mov
nop
aam
adc
mov
ins
jns
icebp
not
lock
imul
mov
adc
cmp
enter
lods
cmp
mov
ins
pop
stos
push
sub
aas
dec
inc
dec
or
pop
fistp
lar
je
sub
leave
enter
(bad)
sbb
cdq
vmread
dec
dec
dec
cmp
xchg
xor
inc
aam
xchg
pop
pop
fsubr
adc
jbe
mov
or
push
dec
push
jg
dec
fistp
inc
add
jmp
mov
ror
jbe
aam
mov
data16
ja
cmp
xor
add
lods
shl
int
pop
pop
sbb
iret
xor
add
sbb
mov
cmp
xor
xchg
pop
xchg
cld
mov
pop
rcl
mov
js
lods
cmp
dec
push
inc
(bad)
jnp
test
inc
jnp
xchg
mov
push
dec
pop
push
or
or
sub
dec
loop
push
inc
mov
mov
adc
add
push
xor
push
pop
call
xlat
popf
rol
mov
adc
xor
and
sbb
dec
push
mov
or
xor
loopne
jg
fisttp
or
dec
inc
cdq
(bad)
icebp
sbb
xchg
cmp
outs
add
add
pop
mov
ins
loope
movzx
pop
dec
ret
mov
pop
aaa
or
xlat
pop
xor
sub
jno
aas
lds
add
or
adc
ins
add
dec
add
mov
(bad)
aas
mov
stc
dec
and
pop
and
inc
arpl
cmps
mov
fistp
enter
push
cmps
or
enter
dec
mov
addr16
fcom
unpckhps
in
enter
in
or
sbb
jb
mov
ins
adc
pop
push
cmp
fcomp
xor
ss
or
jnp
dec
ins
inc
ja
adc
gs
push
cmp
repz
iret
repz
jecxz
mov
stc
cmp
adc
je
jo
loope
cs
ror
pop
in
and
shl
ss
aaa
inc
pusha
mov
std
cmp
test
sub
jp
or
xchg
cmps
push
dec
or
nop
push
xchg
inc
and
mov
pmullw
(bad)
cmps
pop
and
rcl
dec
out
or
add
xor
inc
rol
add
imul
and
cmp
jns
inc
bound
mov
cmp
aaa
and
xchg
loopne
push
mov
add
push
stc
mov
aam
or
dec
das
push
in
add
das
bswap
jb
xor
adc
out
cmp
sbb
adc
sahf
pushf
mov
adc
ret
push
jne
ja
add
sbb
mov
stos
xor
sti
or
sar
dec
mov
xchg
add
add
int3
jp
outs
inc
dec
push
adc
mov
push
add
push
rcr
mov
cdq
sub
lds
sub
pop
repnz
(bad)
adc
inc
mov
sub
mov
dec
inc
mov
xor
jo
adc
fisttp
adc
je
dec
sub
bound
mov
aaa
push
lock
jo
arpl
add
repz
and
xor
jge
cmc
lods
add
or
dec
xchg
adc
dec
xchg
and
add
push
sub
pop
sbb
out
add
xor
mov
jb
adc
push
mov
adc
inc
jae
in
mov
and
or
cmps
sub
and
and
and
jmp
sub
add
mov
adc
cmp
je
sbb
je
push
idiv
fisttp
fisub
test
push
dec
fldcw
add
sub
inc
inc
add
push
or
dec
inc
mov
das
in
test
dec
xchg
rol
jo
mov
dec
or
iret
adc
adc
das
push
bound
adc
and
sbb
frstor
add
push
push
push
add
fcmovnu
das
call
les
cmpleps
and
popa
adc
int
lock
jnp
cli
inc
xor
cmp
outs
ins
sbb
hlt
xor
outs
sbb
neg
and
pusha
sbb
cmc
jbe
or
movs
dec
sub
mov
cmps
dec
pop
sbb
adc
pusha
jne
push
push
mul
push
pop
push
test
cmps
cmps
push
clc
cmp
test
mov
fadd
sbb
push
push
fist
push
mov
mov
adc
xor
xlat
adc
sbb
sub
loop
xor
jmp
adc
sub
sub
jmp
nop
add
dec
jne
cmp
or
add
mov
cmp
push
mov
cmp
sbb
inc
loop
mov
cli
inc
sbb
popa
loope
dec
lock
push
or
add
jl
mov
ja
adc
jp
cwde
xor
(bad)
gs
sbb
add
sbb
data16
(bad)
(bad)
xlat
adc
add
popf
xchg
jne
cmps
mov
push
sbb
loopne
shl
mov
pop
mov
retf
rcr
repnz
mov
cwde
(bad)
ja
les
test
and
sbb
(bad)
add
dec
sub
dec
or
loope
aaa
clc
add
add
pop
sbb
into
and
inc
mov
call
(bad)
dec
and
sbb
cmps
sub
fadd
shl
inc
inc
push
ret
daa
test
mov
leave
push
dec
fwait
pop
(bad)
jmp
sbb
(bad)
cmp
clc
div
(bad)
and
adc
fst
mov
pop
daa
and
call
add
lds
loopne
sbb
adc
test
and
cmp
lods
mov
jmp
adc
dec
cli
pop
xchg
inc
mov
in
fistp
fdiv
push
mov
sub
add
or
or
jbe
leave
or
or
je
mov
inc
xchg
in
shl
cmps
and
sbb
sub
jmp
xor
jg
dec
add
cmp
movs
dec
mov
aaa
in
inc
dec
xchg
xor
and
rcr
sbb
pop
sbb
sbb
test
fild
repnz
mov
test
sub
inc
(bad)
dec
cld
inc
jg
loopne
ret
stos
sti
dec
lahf
add
shr
cwde
jo
in
add
xchg
mov
loope
and
dec
xor
cmp
icebp
fstp
sbb
enter
loopne
retf
push
adc
and
cwde
mov
(bad)
aad
push
pop
sbb
popa
cmp
das
dec
mov
data16
ror
cmps
imul
or
adc
dec
cmp
xchg
ja
les
int3
and
push
or
pop
aaa
xor
and
pushf
mov
(bad)
sahf
adc
ins
pop
xor
cmp
adc
dec
loopne
ds
cmp
outs
dec
cmps
(bad)
fdiv
mov
xchg
aam
icebp
in
lahf
cmp
push
add
lods
lods
lea
daa
sub
or
ins
loop
repnz
pop
cli
sbb
mov
or
sbb
dec
mov
test
dec
arpl
aam
fild
inc
fistp
lahf
sub
shl
(bad)
mov
fadd
or
sbb
je
sub
shr
sbb
pop
call
push
jo
sub
pop
sub
fld
inc
(bad)
aad
xor
les
jmp
pop
fild
and
sbb
call
enter
ss
sub
dec
fwait
ret
hlt
push
sub
stos
sar
ret
sbb
push
xchg
mov
outs
and
hlt
cmp
adc
adc
jle
inc
inc
xchg
push
cmps
adc
adc
adc
ins
xor
dec
imul
xchg
xor
repnz
or
sub
dec
hlt
fxtract
inc
ret
sbb
pop
dec
add
or
fadd
or
lods
lahf
xor
inc
cmp
mov
cmp
or
and
fist
ds
movs
xor
pusha
jb
pop
dec
and
mov
cmc
popa
mov
sbb
xor
mov
mov
test
sub
dec
fwait
(bad)
inc
pop
jp
mov
shl
sub
and
ror
sub
xchg
or
cmp
mov
(bad)
das
dec
and
or
jmp
jecxz
jbe
inc
(bad)
aaa
mov
add
and
inc
lahf
xchg
movs
inc
sbb
adc
sbb
xor
pop
sti
hlt
jae
int3
and
fbld
dec
cmp
repz
retf
inc
add
adc
es
add
les
mov
jns
pop
xchg
or
add
out
jno
mov
ins
mov
les
add
and
rol
or
sub
pop
dec
pop
cdq
dec
sahf
adc
and
cmp
and
nop
adc
mov
lock
and
xor
in
dec
pop
ins
pop
fld
xor
xchg
dec
call
retf
lock
imul
les
mov
fmul
call
add
outs
jns
inc
fstp
in
lods
cmps
adc
mov
mov
and
outs
es
xchg
mov
in
xchg
add
retf
fsub
ss
mov
and
lock
pop
or
loope
sub
or
inc
inc
cmp
xor
int
into
sbb
nop
push
adc
daa
mov
adc
dec
and
jmp
out
cmp
pop
inc
dec
jne
lahf
call
and
pop
jnp
sub
pop
pop
gs
movs
lods
and
cmc
sub
dec
pop
je
pop
shl
fsubr
or
add
je
test
sub
jg
and
sbb
retf
dec
xchg
test
xchg
xchg
test
shr
adc
mov
addr16
inc
or
pop
sar
jmp
dec
and
mov
mov
les
(bad)
outs
cmps
cmp
dec
and
push
xchg
ret
aad
inc
or
shl
sbb
add
push
fistp
mov
add
sub
(bad)
cmp
adc
aam
push
pusha
mov
(bad)
push
stc
sub
pop
sahf
test
pop
push
retf
and
and
and
mov
xchg
add
inc
out
push
mov
sub
and
push
adc
je
or
dec
cmp
fisubr
imul
push
(bad)
fsub
xor
mov
stc
inc
adc
sbb
or
pop
cmp
inc
push
sub
inc
jle
sar
shl
ja
push
add
and
and
pop
pop
ss
lods
mov
add
or
dec
dec
lds
adc
xchg
mov
push
rcr
and
rcl
or
retf
rol
mov
dec
ja
add
push
dec
mov
dec
jmp
push
daa
and
in
push
bound
add
faddp
adc
mov
adc
sub
cmp
pop
lds
xchg
jl
jle
ins
dec
mov
and
popa
pusha
mov
sub
mov
inc
repnz
lock
sub
mov
cmp
inc
add
or
add
call
ds
in
ds
daa
mov
add
and
jecxz
xchg
inc
pop
pop
mov
sar
pop
cs
push
sub
lea
and
inc
lods
(bad)
cmc
cmp
jmp
sbb
or
inc
push
push
cmp
data16
or
ret
outs
or
sub
dec
enter
dec
sub
mov
xor
mov
je
inc
add
push
rcr
pop
jge
inc
jno
cmp
pop
aas
jo
data16
imul
fs
dec
add
ins
push
and
add
jmp
add
or
pop
dec
imul
outs
xchg
dec
mov
repz
mov
outs
sub
cmp
mov
dec
add
imul
push
xor
xor
and
aam
nop
sub
and
test
push
jl
mov
xchg
pop
inc
xchg
fcom
dec
out
cmp
mov
nop
mov
adc
pop
adc
add
adc
pusha
je
mov
mov
jmp
icebp
jge
fsub
cmp
cmp
rcl
push
mov
push
fisttp
shl
lea
(bad)
inc
mov
xchg
xchg
shl
xchg
cwde
imul
add
or
add
(bad)
adc
sbb
vmwrite
jbe
das
xor
add
xor
or
rol
push
mov
mov
sub
jg
enter
je
or
ret
xor
dec
xchg
daa
push
xchg
jg
add
add
aas
jo
and
xor
adc
dec
adc
fs
sti
into
sub
dec
ins
les
dec
mov
clc
mov
xor
ins
scas
inc
xchg
dec
sbb
ds
push
add
pushf
adc
xchg
sbb
and
xor
or
cwde
xchg
xchg
or
mov
imul
js
sbb
imul
mov
lea
pop
jnp
loopne
or
cmp
jnp
mov
xor
push
jl
adc
add
xchg
xor
fwait
nop
enter
and
push
icebp
inc
mov
jno
xor
addr16
nop
mov
and
sub
lods
loope
imul
jae
adc
xor
leave
je
out
and
movs
lods
adc
inc
les
call
in
loop
inc
xor
in
enter
cmc
pop
xor
enter
pop
sub
cld
add
shr
call
pop
mov
push
sub
jge
inc
pop
sbb
lods
dec
and
or
(bad)
les
pusha
outs
adc
in
mov
xlat
pushf
das
ins
mov
stos
loopne
(bad)
ss
mov
popa
jbe
cmp
xchg
pushf
stos
icebp
adc
jp
add
out
pop
xchg
xor
int3
les
mov
and
aaa
sub
aaa
xor
add
inc
inc
rol
nop
adc
lea
adc
and
inc
adc
or
jle
cmps
fwait
cs
outs
jns
jecxz
cmps
in
mov
add
inc
jnp
mov
cmp
retf
das
dec
les
outs
inc
cwde
or
add
clc
and
dec
xchg
push
sbb
jo
mov
pop
mov
clc
rcl
sub
cmp
cmp
push
repnz
jb
jbe
jmp
in
inc
cwde
nop
cmp
stc
nop
cmp
add
test
push
mov
pop
mov
lock
pop
ss
fnstsw
add
loope
(bad)
push
daa
or
add
add
add
and
or
ins
xor
sar
in
in
cmp
cmp
cmp
add
inc
push
bound
fwait
js
stos
dec
mov
dec
add
pop
cmp
cmp
retf
stos
xchg
add
add
dec
adc
add
iret
cmp
sub
outs
adc
add
and
ins
jae
jae
movs
add
je
popa
cmp
sbb
jae
inc
cmp
pop
push
pop
dec
xor
sti
cdq
adc
outs
sub
xor
lea
add
rcr
mov
call
add
rcr
jmp
inc
outs
add
popf
cmps
mov
daa
mov
lods
dec
imul
in
adc
popf
pop
push
shr
sub
add
nop
inc
adc
add
and
(bad)
jo
xchg
test
cmc
ss
cdq
ret
imul
dec
aaa
in
outs
push
adc
add
mov
ja
outs
es
push
sbb
push
or
or
pop
mov
and
jne
std
pusha
mov
dec
push
lea
sbb
rcr
or
(bad)
(bad)
or
stos
fmul
in
xchg
xchg
inc
push
ds
xchg
test
or
shl
test
test
sti
xlat
movs
sub
mov
inc
sbb
add
mov
xlat
rcr
mov
popf
loop
ret
aas
pop
mov
mov
and
sub
inc
or
xlat
mov
inc
push
push
aam
jmp
add
push
pop
adc
dec
(bad)
mov
ds
and
xchg
or
xor
iret
fwait
sbb
adc
xchg
rcr
xor
add
(bad)
shl
sub
jl
nop
or
adc
add
inc
or
add
ret
pop
and
pop
inc
dec
sbb
jne
mov
dec
out
in
sub
mov
xchg
daa
fstp
inc
dec
push
sbb
sbb
sbb
xor
add
repnz
rol
mov
adc
inc
xor
imul
pxor
push
nop
outs
push
mov
cmp
rcl
jbe
mov
inc
adc
jmp
(bad)
jmp
stc
sbb
orps
mov
xor
sub
mov
push
lods
pushf
dec
jne
es
nop
aam
mov
inc
xor
pop
inc
jl
and
dec
enter
mov
mov
popf
dec
test
loopne
shl
sbb
imul
add
lods
adc
pop
fld
popf
shl
pop
call
ins
inc
lahf
mov
fadd
sahf
mov
ja
mov
inc
repnz
or
in
ret
push
pop
add
rcl
rcl
jbe
push
sbb
pop
nop
dec
adc
lods
test
add
fnstcw
add
mov
loop
fild
mov
daa
mov
add
inc
jg
dec
dec
bnd
inc
lock
xor
ss
paddb
jae
scas
mov
enter
inc
jmp
scas
mov
(bad)
xor
mov
cld
xor
sub
out
cmp
ret
add
js
adc
rol
adc
cmp
pop
jl
je
call
inc
rol
or
in
inc
xor
sbb
cmp
inc
in
and
mov
dec
push
enter
pop
mov
sbb
dec
fsub
cmp
dec
je
enter
out
and
bound
fbld
adc
fs
push
add
sub
mov
and
push
push
iret
mov
cs
adc
mov
mov
sbb
xor
aas
push
fs
jp
cmp
jnp
das
je
sbb
or
es
and
cmp
sub
adc
scas
adc
stc
push
cmp
add
add
or
out
dec
pop
gs
add
sub
arpl
lods
movs
sbb
clc
adc
ret
ret
dec
pusha
enter
xor
cmp
xor
adc
sub
loopne
xor
mov
sub
xchg
int3
or
je
and
je
js
enter
rol
mov
pop
adc
rol
and
cmp
nop
xor
mov
je
out
mov
or
rcr
jne
popa
inc
aas
movs
test
pusha
jo
mov
sub
cmps
dec
jne
xlat
mov
xchg
dec
add
sub
loop
add
jle
push
lods
jns
iret
repz
clc
sbb
mov
dec
lods
ss
push
cwde
stos
aam
stos
add
lock
ret
adc
fs
dec
mov
push
jb
movs
fs
js
xchg
jl
xchg
dec
cmp
enter
into
add
das
pop
test
cmp
sbb
and
mov
mov
fisub
and
dec
ins
and
and
xchg
mov
and
lea
fld
push
sub
push
jg
mov
or
movs
mov
add
or
push
adc
sbb
mov
pop
lahf
or
dec
inc
add
test
idiv
lods
xchg
test
dec
pop
add
loopne
lods
inc
popa
aad
addr16
and
loopne
mov
enter
call
inc
or
sbb
xor
xor
or
and
or
leave
jae
pusha
dec
inc
dec
push
rcr
loopne
aad
push
mov
push
retf
jnp
or
mov
add
mov
push
mov
add
lods
and
pusha
or
add
push
jb
pop
ss
sub
rol
or
push
or
inc
adc
test
inc
and
push
dec
(bad)
clc
fisubr
jl
add
push
das
nop
aas
mov
mov
add
fiadd
loop
shr
adc
inc
in
xor
sbb
xor
lock
add
push
xor
mov
push
pop
test
push
push
jo
inc
mov
push
andps
ins
add
sub
test
adc
add
add
inc
push
add
int
add
add
add
sub
lea
add
add
add
add
ret
pushf
dec
push
adc
pushf
add
xchg
push
add
add
dec
pop
adc
dec
sbb
add
pop
add
pop
mov
out
sbb
mov
mov
dec
push
mov
push
cld
mov
add
push
xor
(bad)
push
leave
scas
pop
aam
nop
mov
je
inc
popa
or
add
xor
xor
add
pop
push
in
rcr
pop
or
add
mov
pop
pop
sub
add
pusha
adc
leave
mov
adc
or
rol
pop
xor
repnz
jno
jb
xor
mov
xor
xor
pop
jp
mov
out
pop
cmp
xlat
xor
mov
add
xchg
push
xor
sidtd
call
je
mov
jp
dec
test
femms
and
jae
dec
imul
mov
dec
popa
and
sbb
sub
and
data16
mov
xor
push
dec
adc
inc
sti
cmps
pop
and
dec
xchg
adc
enter
movs
mov
mov
push
adc
repnz
add
jo
or
imul
sbb
pop
xor
xchg
push
nop
imul
or
lock
and
push
outs
aad
or
nop
mov
push
cmc
pop
movs
inc
nop
push
wbinvd
add
cmp
cmp
and
inc
in
shl
test
adc
fld
rcr
ins
daa
add
pop
cmp
mov
adc
call
pushf
push
or
sbb
fmul
dec
outs
or
or
add
sbb
jb
adc
out
add
push
sbb
rcr
adc
dec
add
shl
mov
sub
xor
inc
test
and
adc
mov
mov
push
and
test
add
loop
sbb
and
retf
xor
jmp
add
sbb
mov
adc
lock
or
pop
or
mov
pop
(bad)
sbb
xchg
aaa
in
sub
mov
sub
xchg
aaa
icebp
adc
add
mov
sbb
push
jne
or
pop
es
add
mov
add
push
add
add
pop
add
sub
dec
mov
daa
scas
add
mov
out
loope
dec
test
fwait
les
mov
and
mov
and
popa
mov
je
sub
or
icebp
add
xor
mov
fidivr
ret
pop
jl
out
push
sub
mov
add
das
push
push
and
pushf
mov
enter
push
in
mov
sbb
aas
push
mov
nop
adc
mov
jnp
cmps
xchg
nop
inc
dec
adc
xor
js
movs
aad
sbb
das
mov
outs
bound
cmp
inc
dec
hlt
push
dec
adc
inc
adc
aas
or
push
jb
cmp
enter
sub
je
mov
ret
xchg
fs
das
ret
push
fwait
cld
and
push
sub
cmp
scas
add
sub
xor
jl
imul
cmp
adc
mov
in
pop
popa
inc
cpuid
packsswb
arpl
add
arpl
push
shl
iret
rcl
pop
icebp
jmp
mov
test
or
jbe
add
scas
aaa
sti
push
adc
es
sub
xor
cmp
pop
pop
mov
ret
nop
push
push
pop
shl
add
and
mov
cmp
ret
jbe
scas
sub
inc
mov
shr
jns
test
add
and
rol
push
inc
and
call
xor
pop
mov
push
and
cmp
inc
lea
add
(bad)
add
pop
xor
push
add
jbe
out
addr16
das
or
and
sbb
mov
mov
mov
lahf
ja
xlat
icebp
mov
xchg
mov
mov
mul
pop
mov
outs
or
add
movs
jle
(bad)
ror
out
fs
mov
push
cmp
mov
cmp
daa
imul
add
movs
push
fild
imul
push
xchg
mov
xor
jo
fdivr
arpl
in
fcom
fimul
xchg
mov
sbb
ret
inc
in
jnp
adc
and
mov
faddp
call
xor
test
retf
mov
xor
shl
push
xchg
and
add
inc
push
mov
lods
mul
iret
daa
xchg
mov
and
push
cs
or
and
pop
clc
bound
push
daa
daa
mov
or
xchg
(bad)
in
loope
push
add
push
imul
test
sub
xor
out
and
stc
jo
dec
and
dec
pop
mov
xchg
xor
cmp
dec
enter
push
xchg
outs
push
mov
inc
sub
inc
imul
lea
pop
push
sbb
imul
inc
mov
pop
jmp
mov
dec
cmp
inc
mov
jg
inc
push
adc
push
iret
sub
arpl
jle
push
add
fwait
(bad)
cmp
push
mov
call
or
add
sbb
adc
jne
and
movs
push
mov
dec
inc
scas
fs
push
mov
add
add
push
mov
cmp
sbb
add
lar
xor
shl
or
div
movs
jae
(bad)
outs
inc
jb
iret
pushf
mov
mov
pop
test
push
call
push
sub
cdq
inc
out
push
seto
add
and
cmp
arpl
popa
lea
and
in
int
pop
mov
inc
movs
push
xchg
out
push
adc
inc
add
leave
jae
jmp
test
lods
mov
inc
mov
dec
iret
adc
adc
inc
jbe
xor
pop
ds
push
(bad)
sbb
cmps
and
fldenv
add
nop
movs
push
shl
mov
pop
retf
pop
movs
add
movs
jo
xchg
shl
xchg
xchg
js
call
pusha
cmp
mov
adc
cmp
das
jae
in
pop
xor
movs
xchg
pop
xchg
(bad)
fld
in
xchg
nop
cdq
pop
and
retf
out
bound
sub
and
cmp
aas
popa
enter
aaa
mov
lods
xchg
(bad)
adc
popf
sar
lods
sub
and
push
imul
out
adc
and
cmc
pop
fdiv
mov
das
imul
jb
jae
cwde
adc
jmp
inc
add
enter
or
sahf
out
jns
jo
shl
adc
leave
cmp
inc
nop
(bad)
jne
inc
in
sar
leave
sub
in
mov
xchg
cld
or
loopne
mov
pop
sbb
xor
xchg
mov
pop
and
add
je
or
and
and
movs
int3
and
jbe
and
and
mov
xchg
and
ja
mov
and
and
and
xchg
js
arpl
and
or
push
or
mov
movs
dec
inc
mov
in
add
(bad)
push
pop
mov
and
inc
push
es
inc
or
or
in
out
and
or
dec
aam
push
add
push
and
jmp
sbb
pop
or
imul
inc
pusha
sbb
xchg
sbb
and
enter
push
cmp
dec
fiadd
stos
ds
or
dec
mov
adc
add
in
ins
inc
dec
ficom
inc
sbb
fcom
push
push
(bad)
hlt
out
and
dec
jl
loopne
dec
test
or
jo
push
add
lods
or
lods
lds
mov
jmp
dec
pop
xor
cmp
lds
pop
add
sub
dec
add
and
(bad)
test
jle
pop
adc
xchg
push
adc
adc
test
sbb
and
lea
add
push
pop
mov
test
ret
adc
mov
hlt
enter
leave
ror
rcl
test
push
sbb
repz
push
in
cmps
es
sub
into
fild
jnp
sbb
push
or
xor
imul
cwde
dec
in
dec
sbb
add
ret
fmul
aaa
pop
lock
cmp
adc
sbb
test
pop
aas
add
xchg
(bad)
adc
push
out
ret
adc
push
push
xchg
add
pusha
xor
retf
xor
xor
jp
xchg
clc
push
cmp
and
mov
sub
xchg
mov
inc
fistp
xor
push
push
mov
and
inc
sbb
and
lods
pop
mov
sbb
shr
inc
pusha
fst
test
mov
neg
test
pop
mov
adc
xor
pushf
ja
scas
call
push
push
shl
out
or
jl
repnz
pop
and
into
shl
push
pusha
push
es
or
pop
cmp
mov
sub
add
and
(bad)
loop
sbb
das
pop
sub
jge
or
shr
sub
movaps
push
push
js
loope
sbb
shl
das
mov
cmp
cmp
cmp
sub
sbb
jmp
neg
push
daa
cmp
jne
dec
jl
mov
fisubr
mov
setg
dec
dec
adc
inc
inc
sahf
push
push
inc
xor
add
mov
mov
inc
aad
inc
lods
movs
jb
out
inc
ss
mov
mov
in
xchg
int
pop
mov
and
pop
lods
or
js
mov
or
lock
std
adc
cmp
lods
pop
cmps
mov
jg
sub
inc
int3
adc
and
rol
ds
push
stos
sub
pusha
pop
imul
ins
pop
sub
dec
inc
fstp
inc
inc
push
in
xchg
das
inc
test
dec
mov
(bad)
pop
cmp
inc
pop
rcr
xchg
clc
outs
push
mov
movs
ja
loopne
adc
jo
inc
in
int
or
jo
sbb
mov
call
pop
hlt
dec
and
pop
sbb
dec
jge
movs
lods
out
xor
je
or
mov
and
or
(bad)
xlat
or
dec
jae
mov
pop
pop
pop
or
mov
or
inc
(bad)
and
das
pusha
sbb
ins
sbb
xchg
dec
add
test
lods
mov
shr
sbb
retf
jae
lods
xor
jmp
pop
scas
cmc
dec
inc
push
jge
mov
jo
(bad)
call
push
test
xchg
cld
mov
sub
mov
mov
inc
fisub
mov
mov
mov
stc
in
inc
xchg
lock
add
sbb
das
cli
sub
enter
or
jmp
push
mov
shl
xlat
pop
cmp
aam
push
test
outs
xchg
and
shr
enter
sub
cmp
outs
mov
or
or
xor
outs
inc
dec
adc
or
sub
stos
lahf
in
inc
(bad)
sub
and
cmps
test
in
pop
rcl
inc
add
fsub
loope
mov
rol
mov
pop
ret
les
cmp
imul
lea
or
out
sub
pop
rcl
call
and
adc
sbb
sbb
push
sti
pop
hlt
inc
clc
adc
rol
inc
call
ss
mov
jmp
div
nop
nop
adc
in
imul
dec
pop
aaa
div
lock
dec
cs
cs
sar
in
in
in
in
mov
or
jne
inc
into
shl
mov
mov
push
scas
push
inc
inc
out
xor
ret
xor
jmp
sar
fist
je
out
pop
mov
or
not
xor
sti
push
jne
dec
push
ss
shl
test
push
js
mov
test
or
into
in
mov
mov
jno
cmp
cld
xchg
mov
xor
cmp
cld
or
out
in
mov
mov
ret
inc
aaa
ins
je
and
pop
pop
nop
popa
fcom
dec
ins
cmp
jmp
add
xchg
cmp
mov
fcom
stos
mov
test
and
mov
cmp
mov
inc
jne
mov
cmp
test
into
xchg
popf
cmp
jbe
imul
fisttp
js
jp
dec
jge
push
test
add
jno
mov
inc
or
dec
adc
(bad)
scas
jno
push
daa
pop
push
add
frstpm(287
adc
mov
dec
int
test
dec
in
hlt
ror
(bad)
sti
sti
fisttp
aaa
movs
xchg
cli
(bad)
mov
pusha
push
push
ret
adc
mov
inc
ss
jae
jle
out
inc
push
mov
jns
mov
inc
jae
shr
add
dec
pop
and
mov
push
sar
dec
adc
xchg
movs
mov
add
add
jae
or
add
xchg
jecxz
fist
inc
leave
das
mov
enter
(bad)
jmp
mov
push
mov
add
dec
pop
mov
jo
mov
ficomp
cmp
das
dec
add
mov
fcomp
dec
and
mov
daa
sbb
jns
ss
adc
rol
sub
inc
sbb
js
daa
sbb
cmp
and
in
ficom
adc
in
cmp
mov
pop
xchg
pop
adc
adc
or
ins
inc
push
fld
dec
ds
test
and
inc
jne
sti
cmp
sub
jo
mov
out
pop
inc
dec
push
push
jmp
cmp
jne
dec
and
cmps
adc
push
inc
mov
clc
lea
add
and
push
ins
in
mov
mov
add
je
pop
rcr
or
add
xchg
jg
add
ss
pop
push
pop
nop
sbb
mov
pop
push
outs
xor
and
hlt
sub
pop
jmp
loopne
add
aaa
pop
jg
shr
pop
cmp
cli
or
inc
jbe
jns
clc
dec
add
adc
push
push
push
push
or
stc
iret
imul
out
and
xor
add
push
lods
push
into
repz
cmp
lahf
xchg
test
sbb
cmp
lds
cmp
xchg
pop
and
sub
dec
ss
nop
or
sub
pop
sbb
push
xchg
lods
cmp
fstp
retf
mov
jmp
enter
cmp
dec
leave
enter
sbb
outs
(bad)
cmp
or
aam
das
outs
jo
mov
adc
pusha
add
jmp
sbb
xor
xchg
lods
test
adc
js
sbb
idiv
pop
repnz
ffreep
mov
dec
cs
add
dec
add
dec
or
pop
push
cs
inc
jmp
inc
xor
jnp
jns
movlps
xor
les
mov
push
jne
push
in
jo
xor
jmp
jno
and
and
enter
pop
push
bound
jl
nop
dec
pop
leave
int3
jle
cmp
pop
cmp
clc
add
sub
sbb
cmp
imul
inc
adc
xchg
xlat
add
or
mov
jmp
nop
sub
dec
jg
inc
ret
or
js
cmp
add
push
dec
cmp
inc
mov
adc
cdq
pop
dec
and
jnp
dec
pop
and
and
out
(bad)
pop
adc
dec
xchg
dec
jae
cmp
(bad)
outs
je
sub
imul
adc
cmp
and
call
sub
pop
pusha
sub
jbe
mul
sub
sub
lods
add
inc
inc
arpl
sbb
mov
push
cmp
lahf
pop
push
es
loopne
out
test
push
push
rcr
pop
ror
lea
jmp
scas
xchg
push
cmp
mov
iret
add
mov
test
push
js
jmp
gs
dec
dec
inc
add
add
push
cld
mov
ins
les
pop
and
stos
and
add
add
mov
int3
add
call
add
test
jo
clc
xlat
aas
rcl
test
sbb
out
add
push
mov
ret
movs
xchg
cmps
dec
sub
lea
ins
fs
push
push
sbb
cli
(bad)
mov
test
mov
dec
lea
int3
nop
cmc
add
loope
xor
(bad)
mov
cmc
sub
cmps
into
jae
adc
ja
fst
(bad)
ret
mov
jmp
dec
and
mov
jmp
inc
pop
je
call
mov
cmp
jne
rcr
outs
add
dec
rol
(bad)
mov
ret
sub
scas
xchg
dec
jl
imul
lea
inc
test
ss
(bad)
jne
adc
or
pop
imul
jbe
or
or
inc
inc
adc
fs
mov
imul
adc
nop
fsub
mov
xchg
adc
cmp
stc
mov
xchg
test
pop
repnz
or
in
cmp
je
add
jl
jne
into
ds
jl
mov
ss
xchg
inc
js
test
and
data16
sbb
mov
lods
out
jmp
xor
sti
adc
adc
test
xor
mov
mov
ficomp
rol
mov
test
xchg
push
inc
pop
mov
adc
adc
out
idiv
call
or
inc
enter
sbb
inc
inc
push
aaa
push
je
add
rol
das
inc
cmp
jne
push
cmp
jmp
jne
movs
add
xor
repnz
enter
call
fucom
rcr
ins
inc
mov
xchg
test
or
and
ret
hlt
inc
jno
sbb
loope
or
cld
and
sbb
add
dec
adc
cs
mov
sahf
(bad)
add
add
sbb
mov
sub
in
cmp
(bad)
mov
js
stc
stos
cmp
sub
adc
js
dec
in
lods
jp
or
xor
adc
adc
je
add
xor
popf
ss
jecxz
push
cmp
rol
adc
cmp
je
adc
add
cmp
(bad)
fdiv
mov
sbb
push
int
cmp
es
ret
and
fadd
cwde
mov
inc
inc
aaa
sbb
in
cmovo
sbb
push
sub
imul
std
setns
fadd
lea
cmp
jge
sub
dec
popa
shl
test
or
sar
xchg
add
nop
dec
mov
pusha
js
jbe
fwait
repnz
cmp
push
cdq
in
mov
imul
and
sub
or
mov
and
hlt
hlt
pusha
(bad)
loopne
or
xchg
jbe
jle
cwde
imul
retf
enter
push
mov
or
and
adc
adc
adc
xchg
loope
jb
mov
test
dec
pop
pop
fiadd
dec
cdq
sub
sbb
pop
jo
pop
addr16
mov
out
movs
inc
test
xor
mov
ss
movs
push
jecxz
je
fnstcw
or
ret
xlat
push
add
and
sub
cmps
mov
stos
out
inc
cs
mov
es
cdq
stos
ret
pop
mov
inc
in
ja
cwde
daa
out
mov
test
sbb
fcom
push
in
push
fbld
push
mov
mov
outs
nop
sbb
js
in
dec
xchg
or
xor
mov
popa
pop
or
mov
sbb
or
fnstsw
xor
loopne
ffreep
mov
inc
pop
inc
and
rol
xor
sbb
sub
sbb
add
adc
inc
scas
in
add
dec
mov
(bad)
inc
cmp
dec
sub
xchg
xchg
sbb
sub
inc
mov
movs
movups
dec
push
inc
jl
mov
xor
push
lea
mov
sub
adc
inc
fisub
rcr
adc
xor
call
aam
xor
dec
stos
sti
add
mov
add
(bad)
jg
out
jl
mov
or
inc
movs
xor
scas
sub
mov
adc
in
xchg
and
cmp
add
stc
mov
push
inc
in
popf
test
sahf
or
xor
pop
(bad)
mov
mov
jns
in
clc
push
jl
add
push
and
or
(bad)
or
sub
add
arpl
test
adc
mov
dec
inc
sahf
cmp
dec
mov
and
mov
pop
dec
in
inc
shr
cmp
in
mov
imul
dec
and
popa
popa
mov
add
push
inc
imul
push
mov
add
das
inc
sub
sub
cs
popa
jns
mov
mov
sbb
xchg
jmp
lahf
add
adc
dec
rol
add
mov
or
(bad)
int
add
and
lea
adc
(bad)
mov
adc
test
inc
mov
jmp
pop
pop
add
push
dec
push
sub
inc
or
and
add
fcmovbe
jo
sbb
daa
cmp
add
or
xchg
pop
fs
cmp
push
mov
jmp
inc
push
adc
test
pop
pop
stos
and
mov
mov
ja
gs
push
mov
or
lahf
mov
jae
test
mov
fs
adc
pop
push
push
dec
push
das
andps
sub
ror
cs
ss
inc
dec
jl
pop
mov
loopne
loop
mov
inc
adc
test
inc
pop
hlt
inc
dec
lea
mov
inc
jo
add
inc
aaa
mul
pop
cmovs
leave
fisub
jl
push
ds
out
add
add
jg
dec
mov
sub
mov
dec
retf
inc
and
inc
xlat
jg
dec
adc
xchg
test
adc
xor
lods
push
jno
sbb
sti
fmul
jmp
sbb
addr16
sbb
xchg
xor
mov
jge
lea
ret
or
ss
xchg
adc
ins
or
cmps
movs
shr
addr16
mov
jge
js
je
and
add
test
dec
push
push
fcomp
call
mov
push
nop
call
jl
aaa
pusha
inc
cmp
je
cmp
and
sbb
repz
cs
arpl
dec
mov
xchg
retf
test
inc
dec
cs
mov
and
xchg
retf
lods
lods
xchg
retf
in
dec
je
je
jae
nop
test
inc
push
lds
mov
xor
inc
sar
or
xor
ror
sub
xor
pop
repnz
fwait
and
pop
mov
fcom
adc
pop
jne
push
test
xchg
(bad)
ds
mov
popa
pop
sub
jb
inc
bound
dec
(bad)
daa
mov
les
enter
and
or
pushf
xchg
pop
loopne
push
lds
(bad)
retf
ret
adc
std
iret
push
mov
xor
daa
mov
xlat
xlat
test
push
inc
jecxz
add
sub
sbb
or
and
in
ss
movs
leave
mov
or
sahf
or
loopne
ja
pop
fs
adc
sub
and
xor
cmp
ret
sbb
xor
mov
data16
jmp
test
in
(bad)
push
nop
push
jne
pop
xchg
out
sub
jno
aam
mov
mov
fcomp
int3
jg
mov
je
rcr
xor
jnp
xor
xor
xor
sub
xor
inc
jnp
mov
xor
pop
push
js
mov
ss
and
push
mov
adc
or
jo
xor
inc
movs
movs
call
jb
data16
(bad)
pop
push
(bad)
or
dec
xchg
mov
push
ret
jmp
or
lea
mov
sbb
xor
ds
js
(bad)
xchg
add
mov
stc
test
dec
out
mov
mov
iret
popf
add
fwait
ret
in
adc
outs
test
or
pop
xchg
mov
push
dec
xlat
inc
cmp
xchg
and
push
in
nop
jae
mov
jbe
pop
dec
je
adc
cmp
or
mov
cmp
ins
or
dec
fstp
scas
lea
(bad)
fscale
enter
cwde
rcr
jno
ss
ficom
xchg
adc
in
mov
movsx
sub
xchg
dec
dec
xor
add
(bad)
movs
in
lods
pop
xor
les
cmp
dec
push
mov
pop
jmp
lods
loope
or
jne
jmp
cmp
and
mov
ins
xlat
xor
movnti
adc
imul
mov
iret
pop
mov
scas
adc
jno
or
scas
shl
and
pop
adc
xchg
cmp
pop
sub
sub
lods
dec
add
add
imul
push
xchg
and
dec
jnp
cs
outs
cmp
adc
adc
gs
xchg
dec
icebp
add
or
shl
pop
cdq
or
mov
fiadd
push
pop
adc
lahf
scas
loopne
hlt
shl
ins
sbb
pusha
in
adc
fld
and
push
inc
adc
gs
dec
jmp
mov
xchg
jnp
test
ret
sbb
inc
scas
lock
push
pop
xchg
out
(bad)
adc
inc
scas
lock
pop
cmp
ret
jb
xor
inc
push
mov
test
dec
push
(bad)
fdiv
in
mov
dec
adc
pop
cmps
and
sbb
fnstcw
and
dec
shl
or
pop
mov
xchg
push
nop
dec
adc
push
inc
ror
mov
inc
add
mov
xor
adc
sbb
adc
push
lea
jecxz
mov
xchg
xor
mov
shl
shr
xor
cmp
call
aad
sahf
test
dec
cmp
ret
enter
aam
mov
add
das
add
fdivr
dec
lea
aas
dec
xor
and
into
mov
leave
mov
dec
pop
daa
dec
push
repnz
add
push
jb
push
mov
mov
pop
sbb
sbb
jmp
add
iret
fisub
xchg
imul
cld
xor
in
sbb
outs
mov
int
call
pushf
mov
out
add
inc
inc
repnz
add
ficom
cmps
xor
and
and
sub
daa
inc
or
inc
adc
xor
outs
xor
sbb
inc
outs
jmp
mov
inc
push
pop
fidiv
cld
jo
loope
lea
mov
pop
scas
pop
(bad)
cwde
jl
ds
call
cmp
jl
lods
aam
mov
add
pusha
daa
push
sub
repnz
jg
mov
pop
xor
cmp
cwde
adc
mov
sbb
sbb
jne
adc
push
test
and
nop
inc
out
in
addr16
lds
push
push
cmp
faddp
lds
xchg
sub
out
mov
inc
and
inc
adc
mov
fbstp
cmp
xor
push
inc
sbb
xor
and
adc
adc
adc
push
mov
or
add
pusha
loope
mov
cmp
je
or
ss
adc
mov
or
and
mov
inc
rol
xchg
ins
dec
push
push
cs
imul
inc
or
xchg
or
mov
jle
add
clc
sbb
mov
sub
xchg
push
inc
cli
xor
or
(bad)
mov
jb
test
cmp
inc
sub
push
mov
das
daa
mov
push
xchg
call
rcr
fnstsw
hlt
mov
push
push
pop
out
xor
shr
jmp
or
and
push
xor
pop
pop
out
dec
loopne
xor
cld
neg
sbb
mov
addr16
cmp
imul
cmp
xor
dec
push
dec
loope
push
aas
pop
lahf
nop
xor
mov
jbe
sub
pop
call
inc
pusha
mov
rol
push
dec
add
nop
pop
push
je
jl
mov
dec
adc
fs
sbb
add
scas
sbb
inc
stos
inc
jge
cli
sbb
xchg
adc
in
dec
pop
arpl
push
imul
test
cmp
or
mov
shr
sbb
test
mov
or
xchg
add
mov
addr16
out
ret
and
shl
movs
and
push
pop
dec
mov
push
cmps
cmp
scas
xor
mov
pop
outs
adc
sti
add
data16
mov
repnz
or
in
in
pushf
inc
nop
mov
xchg
or
std
add
mov
push
add
gs
pop
pop
add
in
mov
push
in
cmp
pop
out
movs
or
fdiv
pusha
adc
adc
inc
or
jl
dec
push
or
cmps
and
add
jmp
and
stos
or
push
stos
dec
(bad)
pop
inc
cmp
xchg
pop
adc
popa
lahf
xor
xchg
cmp
outs
cwde
test
inc
jb
scas
and
das
adc
mov
lock
sbb
pop
jmp
addr16
inc
cs
pusha
and
aas
sub
sbb
add
and
js
inc
repnz
and
inc
fist
add
pusha
and
into
or
pop
and
pop
jmp
js
lods
clc
dec
adc
das
inc
sbb
(bad)
(bad)
and
iret
or
pusha
sub
loopne
cs
in
mov
es
mov
mov
inc
cld
pushf
adc
inc
jl
pop
push
sbb
lods
mov
lahf
bound
aas
mov
jb
add
into
mov
pushaw
mov
pop
push
bound
out
xor
rcl
sbb
add
sub
push
data16
mov
ins
mov
stc
mov
pop
push
movs
xor
data16
test
or
dec
cmp
dec
ficomp
adc
mov
sbb
dec
pop
loop
sar
stc
or
xchg
out
imul
dec
rol
pop
push
sar
repz
pop
jmp
xchg
imul
adc
and
icebp
mov
popa
sub
sub
sub
in
mov
mov
sbb
inc
call
mov
mov
movs
cmp
(bad)
int
sbb
push
inc
outs
call
daa
frstor
xor
or
pushf
inc
test
pop
ss
add
sbb
add
das
stos
jmp
stc
ds
add
dec
leave
popa
jmp
sar
push
push
or
movs
add
pop
rol
and
and
add
cs
retf
movs
or
push
mov
repnz
pop
jne
enter
fwait
icebp
dec
inc
icebp
fld
mov
xor
push
ficom
lea
fcomi
sub
retf
push
adc
ss
stc
xor
push
jecxz
ja
rcr
pop
or
dec
sahf
out
sahf
jnp
jne
push
adc
js
ins
or
das
out
xor
push
jne
popf
or
pop
pop
or
ret
xor
ss
and
jo
dec
xor
mov
xchg
fisttp
in
sbb
ins
push
inc
inc
ins
pop
gs
jle
test
mov
add
mov
sahf
lods
nop
push
or
or
rcr
pop
retf
adc
push
sub
sub
push
push
jb
jns
dec
dec
fs
rcr
adc
xor
cmp
frstpm(287
shl
pop
pusha
pop
inc
pusha
dec
cs
inc
push
pop
push
pop
sti
xchg
hlt
dec
dec
mov
jg
add
inc
and
mov
popa
cmp
xor
push
mov
add
into
mov
fs
xchg
or
xor
push
ret
popa
inc
jne
pop
jmp
imul
movhps
pop
js
test
mov
xor
cdq
sbb
hlt
call
xchg
xchg
std
sub
cli
xchg
xor
in
mov
xor
or
stc
xchg
push
aad
in
and
push
(bad)
pop
mul
xchg
or
dec
pop
or
jae
add
leave
enter
inc
popa
push
into
jo
test
push
dec
mov
frstor
inc
sbb
gs
xlat
pop
aad
pop
jb
aas
jmp
push
pop
mov
xchg
test
pop
mov
dec
sub
sub
or
add
add
es
pop
adc
mov
jo
adc
aas
cmp
fisttp
pop
sbb
jmp
sub
push
xor
add
ror
retf
push
test
lahf
rol
hlt
sub
stos
aam
fist
rcr
add
fsub
loop
fwait
inc
xchg
push
outs
arpl
clc
popf
clc
inc
or
pop
push
or
sbb
jnp
mov
inc
pop
data16
dec
dec
sbb
aaa
xor
test
(bad)
jmp
sub
dec
cmp
sub
popa
retf
(bad)
daa
dec
cmps
lods
in
subps
popa
sub
inc
imul
jle
shl
mov
push
xlat
lock
aas
test
mov
jp
push
cmp
aam
add
xchg
cmp
pop
fcmovnbe
add
sbb
movs
enter
sub
mov
fs
adc
fist
adc
mul
movs
dec
inc
push
je
xor
xor
push
dec
add
je
mov
adc
loopne
outs
cld
daa
pusha
sbb
jbe
or
nop
jg
imul
inc
dec
or
push
mov
sub
jge
mov
cmp
and
mov
sub
in
add
retf
or
js
xor
jmp
jmp
pop
add
mov
pop
ins
or
cs
mov
mul
loope
or
xor
dec
xor
xor
cmp
rol
rol
test
cmp
inc
xor
or
inc
je
inc
or
inc
inc
clc
sbb
sub
cmp
cmp
mov
jl
xor
mov
adc
stos
dec
retf
mov
mov
sbb
sahf
iret
cmp
(bad)
pop
popf
pushf
jl
mov
jbe
daa
and
sub
jmp
in
rcl
int
mov
xchg
retf
adc
and
ins
or
adc
xor
icebp
lods
lods
arpl
repz
int3
dec
jg
ss
fild
mov
add
or
adc
mov
shl
xchg
push
or
cs
and
cmp
inc
inc
es
mov
int
or
inc
cld
int
shr
ds
jne
mov
nop
push
jno
mov
and
adc
dec
sub
rcr
sbb
movntps
iret
shl
es
lods
xor
stc
test
sub
iret
jne
mov
in
ret
xor
leave
sbb
xor
mov
push
je
mov
xchg
fmul
or
jge
or
mov
pop
(bad)
loopne
xchg
sbb
stos
push
jae
xor
test
test
and
xchg
cmp
mov
dec
xchg
ret
lock
fdiv
psrlw
fwait
lahf
mov
mov
add
bound
mov
cmc
mov
movs
mov
stos
push
jg
add
cmp
add
and
adc
pop
xchg
mov
dec
sti
popa
int
es
shr
shl
mov
mov
add
mov
loop
push
or
cmps
out
gs
lea
imul
mov
inc
cwde
adc
sahf
and
outs
shr
dec
pushf
mov
push
movs
test
push
popf
adc
lods
mov
test
xchg
cmps
mov
mov
rol
adc
mov
test
inc
aas
jmp
rcr
mov
push
dec
mov
add
gs
lock
adc
adc
bound
inc
push
add
and
add
adc
inc
popa
aad
cmps
and
pop
sbb
pop
sub
sub
add
push
push
ins
dec
push
xchg
inc
or
bound
add
popf
das
ss
xchg
dec
add
test
arpl
jbe
pop
push
fild
inc
push
push
aaa
rcr
or
pop
dec
mov
inc
sbb
push
syscall
bsr
mov
out
aad
iret
and
add
mov
mov
call
test
jp
xchg
push
adc
mov
hlt
retf
ret
inc
jnp
xlat
push
or
adc
les
mov
or
daa
mov
cmp
mov
adc
push
push
std
mov
das
mov
cmp
and
and
adc
push
mov
nop
shl
push
fiadd
adc
pop
in
cmp
loopne
daa
xchg
xchg
or
xor
(bad)
mov
jo
bound
sar
cmc
push
(bad)
ret
cmp
loopne
cmc
jae
and
pop
mov
xor
mov
pop
add
shr
clc
push
aaa
push
(bad)
les
xchg
push
push
mov
inc
sub
stos
jne
mov
fistp
adc
out
fistp
movs
mov
ret
push
jle
add
jle
inc
test
push
movs
out
out
and
jnp
aam
loopne
imul
retf
rcl
test
popa
in
data16
add
shl
call
inc
inc
pop
ret
lods
mov
add
adc
cmps
xchg
cmp
mov
mov
mov
xchg
add
loopne
dec
push
aam
jge
les
jge
les
xchg
jmp
aaa
mov
jne
push
imul
ror
mov
shl
dec
dec
mov
pushf
enter
push
scas
add
mov
clts
shl
add
add
fisttp
inc
aam
shr
xor
idiv
cmovg
cmp
jb
and
rcl
movs
cmp
push
test
and
cmp
push
ss
mov
(bad)
jmp
test
cmp
mov
xor
ret
inc
add
sti
xchg
test
or
or
and
and
call
mov
(bad)
jmp
or
pop
ror
inc
fadd
lahf
or
mov
pop
sbb
xchg
cli
adc
bsf
movs
pop
adc
push
sub
dec
enter
aaa
leave
aaa
sub
xchg
pusha
retf
cmp
sub
dec
dec
shl
inc
retf
aas
mov
xor
add
adc
add
sahf
dec
pop
or
xchg
retf
or
add
and
popf
movs
es
xor
cmp
or
jo
daa
repz
in
push
push
rol
mov
mov
push
xor
mov
es
test
mov
sbb
add
sahf
cmp
call
rcl
mov
mov
jne
sub
adc
ror
call
add
push
sar
add
add
fcom
add
sub
or
cmps
stc
add
sahf
sbb
js
push
sub
mov
dec
rol
retf
repz
shl
pop
mov
xchg
adc
pop
dec
sbb
movs
test
test
xor
or
add
push
or
rol
xchg
inc
add
pop
pop
stc
inc
jne
pop
or
jo
rcl
inc
adc
dec
mov
and
sub
fisub
iret
je
test
adc
fidiv
jge
ds
mov
fiadd
fwait
and
push
inc
leave
push
xchg
shl
ja
dec
inc
dec
fwait
dec
retf
and
adc
mov
adc
adc
or
and
add
and
sbb
push
xor
pop
pusha
dec
cmp
push
ror
sub
or
in
rcl
fmulp
mov
rcl
jb
mov
inc
inc
jp
fcomip
inc
jb
leave
test
mov
pop
mov
cwde
xor
add
hlt
push
jo
cld
xchg
cmp
add
fcmovu
cmp
inc
add
and
fadd
inc
fisttp
pushf
mov
(bad)
adc
dec
add
(bad)
in
jnp
retf
inc
and
and
xchg
push
(bad)
add
popa
fstp
inc
or
jl
and
push
add
push
(bad)
inc
nop
repnz
push
dec
fld
dec
sbb
mov
jo
in
jmp
add
scas
pop
movs
clc
xchg
mov
jge
aaa
push
add
dec
fs
dec
xor
adc
push
call
loope
lock
inc
dec
adc
cmp
ret
sbb
enter
loopne
mov
add
mov
add
scas
js
fmul
xor
retf
xchg
xchg
pop
push
les
pop
sbb
pop
ins
sub
push
and
sub
sub
aam
sbb
xor
push
sub
or
mov
xor
mov
add
cmps
xlat
adc
aam
adc
dec
int
fimul
push
ins
loopne
add
mov
push
rol
sbb
sub
call
outs
push
lods
out
(bad)
dec
mov
add
push
cmp
add
add
cmp
(bad)
(bad)
test
sbb
push
lods
imul
mov
pushf
mov
dec
neg
xor
dec
mov
xor
fisubr
imul
es
mov
cmp
adc
xchg
add
call
mov
xor
push
(bad)
adc
mov
adc
inc
inc
cmp
les
fs
mov
sbb
inc
xchg
pusha
xor
push
gs
(bad)
fcomp
fadd
fist
jbe
push
inc
mov
push
cmp
adc
aas
leave
fstp
or
adc
or
into
push
sar
aaa
adc
xor
loopne
call
in
xchg
test
push
mov
fst
push
jb
or
ss
xor
adc
sbb
and
out
es
dec
push
cmp
and
mov
or
popa
sbb
xchg
inc
rol
scas
aaa
or
jmp
or
or
add
xchg
add
adc
fs
into
dec
test
add
loopne
repz
js
loop
push
cs
loop
and
or
loop
jl
inc
(bad)
shl
dec
pop
add
iret
ins
jae
push
add
and
inc
frstor
or
test
mov
popa
fiadd
pandn
lock
leave
or
or
iret
pushf
loop
push
sub
movs
sub
mov
rol
(bad)
lock
mov
or
shl
dec
test
scas
movs
addr16
fbstp
xchg
inc
add
aaa
dec
sbb
push
pop
mov
je
jp
dec
or
das
xchg
push
stos
lods
cmp
pusha
inc
cmp
lahf
adc
and
(bad)
lea
cs
inc
sub
adc
dec
sbb
push
jo
adc
and
and
xor
and
mov
add
test
sub
xor
inc
push
imul
ds
jnp
jmp
cmc
fld
add
mov
sbb
add
in
mov
sahf
out
sbb
daa
fild
cmp
jns
scas
repnz
or
cmp
push
dec
dec
or
mov
push
sub
mov
add
lock
pop
aaa
mov
cmps
dec
jecxz
imul
setb
inc
stc
sbb
mov
mov
mov
pop
mov
mov
cld
add
inc
aas
test
lock
push
jo
arpl
dec
add
sbb
js
retf
push
aad
ror
adc
loope
inc
lock
jge
mov
outs
dec
es
rcr
and
mov
jmp
adc
add
stos
mov
xchg
ins
test
dec
jg
rol
adc
rol
push
xor
cmps
xchg
shr
add
cmp
inc
imul
sub
xor
mov
jo
movs
cmps
jo
rcr
enter
and
sbb
js
add
and
pop
inc
xor
out
sbb
adc
dec
pop
pop
enter
jae
jecxz
ror
xchg
xor
(bad)
shl
gs
shl
in
xchg
clc
lahf
and
push
inc
outs
jl
dec
or
and
xor
dec
test
enter
ins
adc
add
mov
inc
cmp
sbb
mov
out
dec
pop
adc
inc
cwde
add
lock
push
pushf
add
cwde
loopne
push
imul
inc
lea
sub
xor
pop
jnp
in
xchg
daa
add
xor
lock
daa
lock
arpl
add
sbb
arpl
jb
loopne
add
jbe
add
adc
adc
rol
mov
xchg
push
cmp
(bad)
mov
clc
lods
shl
out
dec
or
cmp
mov
and
mov
adc
retf
mov
push
adc
lods
loopne
dec
loopne
or
ins
sub
cmps
fs
(bad)
loope
std
jle
dec
jle
mov
dec
sar
and
add
(bad)
jmp
push
sar
push
sub
pop
mov
cmc
add
sub
pop
sbb
mov
inc
dec
push
xchg
fs
push
cmp
push
retf
sbb
add
mov
popf
xor
pop
rol
ins
mov
(bad)
fidiv
inc
and
je
xchg
and
mov
lock
xchg
adc
dec
or
ret
adc
fisub
jp
sbb
mov
push
in
push
(bad)
inc
mov
add
sub
sti
in
dec
sar
mov
mov
push
movs
pop
mov
lock
mov
sbb
ret
add
pop
sub
dec
xor
cmp
ss
imul
cmp
jo
sti
sub
fmul
rcr
cli
lea
pop
in
cmp
mov
add
push
adc
ja
in
dec
fidivr
ds
cmp
les
and
in
or
mov
sub
shl
jmp
mov
sub
adc
loope
cmps
das
xchg
push
and
dec
pop
in
dec
dec
ss
je
dec
loop
ret
les
xor
dec
mov
mov
and
fld
popf
inc
adc
mov
mov
pop
repz
push
ja
(bad)
outs
pop
mov
push
fwait
add
out
sub
inc
ucomiss
outs
inc
and
and
xor
and
xor
adc
jns
cmp
out
lea
das
cwde
out
jns
jl
adc
and
pop
es
inc
mov
out
push
out
pop
pop
loop
inc
xchg
push
pusha
sbb
mov
push
sbb
and
xor
int3
mov
imul
or
test
inc
aam
ficomp
adc
loopne
clc
jb
xor
jnp
mov
cmps
and
mov
icebp
dec
or
and
int3
out
dec
clc
rcl
sar
adc
adc
sbb
aaa
loop
inc
push
mov
test
jle
call
push
cmps
or
and
add
xchg
or
xchg
xor
imul
inc
icebp
and
rdpmc
push
sub
ficom
jl
(bad)
fisub
cmp
repnz
mov
mov
icebp
dec
mov
das
add
dec
sub
xchg
aad
mov
pop
scas
push
leave
repz
dec
icebp
xor
xor
addr16
out
xchg
push
rcr
addr16
icebp
inc
push
cmp
dec
jecxz
repnz
add
repnz
repnz
enter
test
imul
jno
xor
ja
sbb
add
shl
hlt
and
and
add
add
xor
pop
in
in
das
in
repnz
jne
call
in
jns
dec
lock
mov
add
loopne
add
pop
ja
xor
xor
push
push
add
lahf
movs
inc
rcl
pusha
nop
fdiv
sbb
test
mov
in
sar
cmp
sti
call
ret
xlat
imul
js
fs
pop
ret
cmp
ret
out
dec
mov
loope
sub
or
call
mov
popf
es
adc
(bad)
je
mov
push
loopne
hlt
cs
imul
pushf
in
inc
fsubr
mov
in
movs
push
push
push
fmul
fsub
iret
fisttp
aam
rcr
stc
mov
ins
mov
gs
dec
fimul
lods
inc
adc
pop
xlat
xchg
cmpxchg
aas
push
push
mov
or
add
lock
loopne
fadd
xchg
and
cmp
dec
test
push
xor
adc
push
cmp
xor
adc
sub
or
sbb
push
add
mov
(bad)
push
add
mov
fcomip
out
iret
sar
hlt
es
push
enter
les
xchg
pop
inc
dec
(bad)
pop
inc
dec
repnz
and
inc
dec
sbb
sub
cmovo
ret
sbb
adc
add
rol
push
jmp
xchg
mov
daa
leave
call
iret
in
lods
and
scas
lods
xor
cs
ins
lods
cmp
popa
and
retf
add
add
add
mov
xchg
mov
adc
outs
jb
or
xchg
repnz
(bad)
adc
sub
fcos
(bad)
dec
sub
push
push
pop
ss
adc
cmp
pop
dec
sahf
dec
pop
inc
dec
ins
repnz
cmp
jg
aad
add
dec
sub
mov
je
mov
mov
pop
enter
adc
add
jno
stos
and
and
xchg
inc
and
les
adc
sbb
test
in
mov
sbb
shr
pop
sbb
movlps
int
lock
pop
in
ror
enter
or
push
push
shl
out
stos
adc
sbb
fcom
inc
leave
and
jno
xor
and
xchg
xchg
and
xchg
es
and
sub
push
adc
sub
inc
push
sbb
and
and
sub
and
and
cs
sbb
int
or
pusha
xor
das
add
adc
xor
or
fs
add
inc
and
or
fs
out
cli
xor
fs
js
(bad)
fs
fs
ss
fs
jb
cld
sub
jp
fs
(bad)
call
fs
pop
and
hlt
sbb
cmp
arpl
dec
push
sbb
dec
add
add
xor
push
outs
sub
stos
ror
ret
sub
sar
(bad)
stc
add
or
mov
clc
sub
adc
dec
mov
mov
ret
loope
xchg
and
push
dec
inc
or
add
loop
cwde
les
mov
dec
push
loop
ss
inc
repnz
jecxz
add
dec
fild
iret
pop
ror
pop
les
dec
adc
dec
cs
or
inc
and
out
and
and
fstp
dec
push
push
add
or
sub
out
mov
sbb
add
call
nop
(bad)
loopne
mov
mov
pop
dec
or
dec
inc
inc
repnz
push
dec
int3
pop
dec
dec
dec
stos
sbb
mov
pop
or
inc
and
repz
add
and
add
dec
push
and
push
cmp
fwait
(bad)
into
enter
inc
das
mov
imul
shl
test
fcomp
bound
sbb
jbe
xor
and
test
cmps
add
movs
dec
fstp
push
bound
jmp
xor
mov
sahf
ja
and
cld
retf
mov
repz
add
pop
nop
mov
push
scas
pusha
ja
mov
xor
xchg
test
test
cwde
push
add
std
aad
shl
jmp
pop
adc
dec
add
pop
add
cmp
sbb
jmp
loopne
pop
and
ss
psrld
inc
aam
dec
pop
push
sbb
aas
adc
push
fisttp
rcr
movs
mov
push
mov
dec
push
dec
add
pop
dec
data16
pop
jb
inc
sbb
add
aaa
dec
sub
jb
jl
pop
dec
fiadd
test
(bad)
push
jb
mov
sbb
push
dec
ins
mov
shr
pop
sbb
mov
dec
rcr
add
ret
sbb
pop
sbb
add
shl
loope
inc
leave
add
and
stos
dec
pop
and
inc
mov
and
pusha
lea
push
out
enter
daa
mov
and
jo
xchg
adc
xchg
mov
in
sub
or
scas
sub
mov
nop
int3
in
add
jecxz
inc
inc
sbb
xor
xor
ss
sub
adc
add
subps
xchg
push
arpl
xor
xor
inc
xor
inc
mov
push
add
test
dec
pusha
pusha
xor
cmp
movs
mov
add
sub
and
adc
mov
jmp
sub
sbb
inc
inc
cmps
stos
and
add
es
dec
lods
and
push
xor
inc
and
fucomip
leave
add
add
and
or
or
push
inc
enter
add
icebp
adc
pop
or
enter
scas
aam
enter
sbb
enter
mov
repz
sbb
cmp
in
enter
neg
or
enter
popa
and
in
pop
or
arpl
enter
sub
in
enter
fiadd
or
cs
jle
enter
into
neg
inc
enter
mov
enter
cmp
enter
mov
dec
enter
adc
xchg
add
call
dec
mov
jo
repz
inc
aas
les
push
jp
add
and
jl
pop
dec
mov
rol
jecxz
pop
(bad)
xchg
mov
push
test
add
inc
ss
add
push
rcl
nop
sub
test
push
nop
or
or
gs
jne
inc
rol
add
in
fdiv
adc
and
in
push
adc
or
test
imul
adc
enter
mov
add
test
int
scas
add
les
push
and
inc
jb
cmps
out
pushf
scas
pusha
dec
leave
test
mov
push
adc
xchg
jl
mov
fsub
sub
nop
rol
(bad)
rol
sbb
cld
mov
imul
dec
or
mov
test
sub
push
and
and
pop
das
aas
add
nop
sbb
out
std
mov
sbb
mov
push
or
bound
push
add
push
jb
pusha
ins
cmp
cld
enter
dec
add
dec
or
pop
cmp
imul
sub
jl
sub
arpl
popa
sbb
mov
add
fisub
inc
pop
push
ret
adc
jne
adc
in
xchg
sbb
xchg
sbb
push
repnz
and
cmp
fwait
inc
mov
outs
retf
pop
mov
and
mov
xchg
scas
mov
add
add
pop
test
fs
test
leave
add
xor
test
inc
daa
xor
and
xchg
and
or
mov
xchg
pop
xor
or
xor
sub
imul
aaa
jmp
cmp
inc
pop
sub
push
je
mov
mov
scas
iret
mov
clc
sbb
mov
mov
pop
mov
xlat
sti
push
sbb
mov
pop
mov
cmp
cmps
leave
mov
jmp
mov
mov
inc
add
(bad)
or
and
and
mov
cmp
xchg
and
loopne
add
inc
aam
adc
dec
je
mov
mov
test
and
dec
es
push
ins
dec
outs
pop
pop
sub
test
or
mov
ret
les
popa
arpl
popa
xchg
daa
enter
jns
adc
add
sub
dec
and
(bad)
stc
sti
mov
mov
std
call
jge
push
out
call
lods
adc
ss
ins
ds
push
cmp
push
push
push
jne
es
xlat
jb
(bad)
loop
jle
adc
lods
in
adc
ins
and
push
pop
adc
lods
push
inc
and
nop
ins
adc
mov
mov
or
push
push
dec
aam
shl
mov
sub
je
xchg
add
(bad)
in
add
xchg
xchg
fsubr
fsubr
js
cmps
jp
sbb
pmaxub
lea
nop
dec
mov
push
sar
and
stc
and
stos
add
(bad)
sub
in
imul
or
mov
sbb
mov
jb
dec
push
mov
rcl
inc
sub
out
sbb
(bad)
xchg
mov
les
cwde
dec
jmp
mov
and
pop
and
mov
adc
pop
and
and
and
and
and
es
add
push
rcr
imul
or
and
inc
xchg
xor
sbb
aaa
sub
add
es
ss
fs
fs
jo
mov
jb
fs
sbb
ds
mov
jb
sub
pop
jg
fs
fs
dec
outs
xchg
pop
jbe
fs
or
dec
ins
nop
mov
repz
das
or
es
inc
adc
jns
add
arpl
mov
jae
cdq
mov
je
and
inc
pop
sbb
or
cmp
dec
cmp
dec
mov
(bad)
sbb
addr16
xchg
aam
icebp
xchg
or
adc
pusha
mov
xor
orps
push
add
ficom
out
mov
or
pop
add
lahf
ja
pusha
pop
pusha
or
shr
les
dec
in
sbb
dec
fadd
movs
ret
shr
sub
push
scas
aas
add
dec
add
push
lock
push
(bad)
xor
push
jno
dec
and
dec
cmp
cwde
je
or
adc
je
inc
ja
(bad)
(bad)
pop
sbb
or
cmps
dec
or
test
outs
adc
jns
push
xor
adc
fld
push
fbstp
mov
pop
bound
ins
out
cmp
div
or
and
inc
xor
and
fwait
sub
int3
ins
sub
inc
cdq
inc
rol
jle
in
xor
cmp
push
mov
cmp
shl
jecxz
call
jbe
mov
or
daa
mov
out
dec
dec
les
aaa
and
push
pop
add
pop
add
xor
inc
fst
mov
inc
cdq
push
and
les
dec
out
rcr
add
cmp
mov
add
fs
pop
or
or
push
ret
sbb
sub
or
out
mov
pop
mov
or
adc
hlt
cs
jnp
stos
call
call
inc
adc
xchg
cmp
push
and
push
jg
and
adc
jno
movs
js
and
(bad)
adc
xor
lar
jg
cs
adc
push
or
mov
imul
movs
jae
push
mov
aas
cwde
inc
imul
adc
inc
adc
adc
adc
stos
and
and
adc
cdq
push
cmp
sbb
xchg
pop
sbb
test
imul
inc
dec
mov
adc
pop
and
add
imul
enter
and
push
pusha
shl
es
xchg
pop
xor
sub
leave
push
xor
sub
rol
mov
jmp
inc
imul
adc
leave
add
add
sub
xor
cmp
leave
push
cmp
sub
cmp
leave
add
xchg
pop
and
adc
xor
add
inc
inc
inc
add
adc
fs
stc
add
call
das
push
fs
jb
ss
fs
fs
push
jge
in
fs
fs
xchg
stc
sbb
aas
popa
fs
xor
fs
enter
fs
push
jns
in
fs
cmp
jae
jne
push
jnp
aas
sub
(bad)
push
cwde
inc
or
mov
jecxz
or
ret
and
sbb
sub
gs
mov
aas
mov
dec
or
inc
outs
push
lods
(bad)
in
inc
jg
jle
test
lods
jl
xchg
xchg
jo
fild
int3
or
les
and
outs
push
ret
and
fcom
mov
sub
mov
inc
sahf
pop
das
inc
or
pop
lahf
inc
xor
rol
mov
in
jne
and
xchg
lea
sbb
and
and
ja
and
sub
or
xchg
sub
pop
xchg
leave
(bad)
xchg
or
imul
xchg
cmp
add
enter
dec
repz
sbb
or
sub
popf
and
cmps
arpl
add
push
inc
add
cdq
nop
cwde
or
psubq
addr16
das
jg
push
inc
test
push
int3
fwait
mov
inc
mov
or
mov
cmc
xor
jmp
in
mov
mov
test
rcr
inc
jno
mov
daa
xor
je
pop
das
int
bound
jb
inc
pop
adc
mov
rcl
adc
add
inc
or
sbb
stc
or
mov
icebp
adc
sbb
sbb
ret
fs
sbb
popa
or
fs
cmp
xor
gs
vhsubpd
cmc
test
cmp
inc
call
movs
xor
pop
leave
int
xor
les
cmp
cmp
test
(bad)
jl
dec
inc
in
or
xlat
sahf
aaa
add
add
data16
in
dec
jmp
jae
inc
pop
pop
imul
jno
pop
cmp
add
stos
or
imul
jae
adc
lods
ror
dec
repz
xor
sbb
inc
es
mov
cdq
(bad)
jae
les
imul
sbb
sub
and
jmp
pop
sbb
in
ror
dec
inc
sbb
aaa
outs
les
sub
cmp
pop
dec
sbb
adc
mov
add
sub
pop
push
cmp
push
add
inc
add
sub
sbb
leave
push
loopne
test
push
mov
fild
nop
sbb
dec
addr16
xor
lahf
ret
int3
imul
repnz
fadd
call
hlt
push
xchg
pop
cmps
xor
arpl
inc
mov
sti
cld
dec
or
adc
xor
sub
int
clc
mov
mov
rcl
push
push
das
adc
inc
pop
cmps
mov
dec
je
jg
mov
add
dec
inc
pop
and
popf
cmp
dec
(bad)
and
xor
pop
adc
pcmpeqw
add
or
or
push
repnz
lahf
or
bound
dec
mov
add
mov
sub
jl
test
pop
pop
call
mov
and
xor
xchg
or
lods
repz
enter
(bad)
jne
and
mov
or
mov
aaa
je
push
jle
test
jle
mov
leave
and
sbb
call
mov
sub
je
adc
out
sbb
lea
mov
push
add
push
xor
sub
push
xchg
pop
and
pop
or
mov
mov
js
call
and
mov
mov
icebp
adc
dec
lds
or
xor
imul
adc
out
aaa
mov
mov
mov
dec
dec
in
dec
and
inc
pushf
sbb
loop
and
adc
xchg
les
leave
push
add
pop
xchg
mov
inc
pop
imul
es
adc
push
test
mov
lods
xchg
xor
pop
xor
loop
add
or
xor
jmp
dec
dec
xor
stc
(bad)
pop
add
daa
sbb
sub
arpl
loopne
xor
fcomp
sub
xor
adc
std
mov
adc
popa
push
pop
sub
fcom
pusha
pop
push
(bad)
xchg
sbb
mov
stos
sub
push
cmp
cmps
jne
adc
lahf
sub
jle
push
imul
movs
push
jne
and
pop
sahf
lds
ret
mov
jo
mov
loopne
adc
lsl
push
push
jne
push
xchg
lsl
and
dec
mov
mov
aaa
inc
lods
mov
or
int3
mov
inc
(bad)
push
push
and
sub
pop
xchg
or
inc
retw
sbb
sub
or
cmps
pop
iret
sbb
mov
rcl
sub
and
push
mov
mov
sbb
mov
mov
clc
sbb
push
fstp
(bad)
repz
dec
dec
or
call
out
push
sar
ret
test
and
or
mov
retf
lods
pop
dec
hlt
cmp
daa
out
jnp
sahf
xchg
in
inc
add
fiadd
dec
enter
or
in
int
test
dec
and
aad
dec
dec
push
mov
in
xchg
inc
pop
dec
cmp
call
add
inc
xchg
sbb
jnp
cmp
cmps
dec
inc
xchg
fild
sub
mov
push
jne
and
inc
loope
arpl
cli
xchg
cmp
inc
and
sub
sub
inc
ror
hlt
sbb
adc
out
push
push
jl
mov
loop
or
dec
and
sub
and
xchg
ret
pop
dec
inc
fcom
inc
jg
pop
or
jne
ret
inc
std
in
aam
fadd
xor
or
or
dec
loopne
ja
pop
test
or
xchg
add
push
in
sbb
in
dec
inc
mov
imul
and
fmul
arpl
or
ror
push
pop
dec
add
inc
cmp
push
push
pop
add
(bad)
jle
pop
or
adc
push
je
sub
test
retf
movs
push
xor
xchg
out
xor
and
dec
fwait
dec
push
dec
adc
and
dec
rcr
pop
cmp
and
movs
(bad)
loope
push
pop
ss
push
mov
pusha
jp
or
inc
mov
sbb
fs
(bad)
fidiv
fs
inc
xlat
repnz
mov
clc
and
fst
enter
loop
push
dec
es
mov
xlat
cmp
mov
in
push
and
iret
push
inc
or
sbb
sub
push
cmps
test
jo
loop
xor
dec
add
mov
push
scas
cmp
jl
dec
sbb
mov
sub
pop
lods
xor
xchg
or
mov
rol
sbb
xchg
mov
mov
dec
pop
push
mov
xor
or
adc
ss
inc
and
and
pop
ret
or
stos
(bad)
inc
test
dec
es
mov
lds
test
call
movs
nop
mov
inc
loope
repz
(bad)
call
cmps
cs
cld
push
dec
sahf
lea
mov
mov
mov
gs
mov
or
xchg
jbe
or
and
std
cdq
add
and
and
call
popf
xor
pop
sub
dec
lds
sub
xor
int3
push
adc
lock
xchg
inc
lods
in
pop
cmp
and
push
add
mov
sub
jnp
xor
jmp
lock
std
enter
adc
pop
cmps
mov
mov
push
adc
xor
inc
out
je
cld
mov
or
adc
mov
aas
imul
and
int3
mov
sbb
jno
jb
fucom
arpl
add
or
add
repz
out
xor
cmp
sbb
pop
cmps
push
scas
dec
cmp
shl
stos
adc
and
imul
push
pop
in
in
rcl
jmp
xor
sbb
loopne
jno
mov
adc
fst
jecxz
jge
add
call
jnp
push
mov
jns
mov
mov
fimul
xor
jmp
enter
aam
mov
mov
sbb
mov
pusha
test
cmp
push
push
add
push
fnstcw
push
ins
inc
pop
call
jge
mov
sub
test
(bad)
cmp
in
nop
and
inc
inc
jo
leave
gs
or
nop
pop
mov
rol
das
sbb
and
and
and
ins
pusha
and
and
lock
push
inc
nop
dec
push
sub
add
lea
cmps
mul
add
in
xchg
add
mov
cmp
cmps
retf
mov
fmul
js
and
or
leave
daa
in
xchg
add
mov
out
push
shl
push
jne
pusha
add
pop
cli
and
pop
mov
inc
and
jnp
jne
xor
push
adc
cmp
push
xlat
sbb
sub
cdq
jmp
imul
hlt
in
dec
jmp
mov
imul
in
jns
add
sub
rcl
mov
sbb
and
sbb
sub
lea
and
into
mov
jne
fwait
sbb
or
add
mov
add
dec
sbb
or
(bad)
mov
add
jmp
and
inc
ss
js
movs
pop
shl
data16
fs
das
popw
repnz
int
xchg
and
rol
pusha
push
xchg
add
test
je
dec
js
dec
adc
lods
push
xchg
adc
add
add
je
dec
xor
mov
push
dec
mov
mov
jbe
dec
dec
jb
jge
sbb
or
fld
sbb
pop
into
cdq
and
push
fstp
dec
ret
mov
sub
or
or
rcl
pop
add
les
dec
and
in
lods
pop
dec
pop
dec
fnsave
jno
add
pop
and
mov
dec
cmp
pop
dec
fild
xchg
xor
or
and
cmp
sub
sub
dec
mov
sub
xchg
mov
xor
xchg
rol
or
mov
cmps
xor
fcom
or
lahf
aas
and
cmp
fwait
inc
bound
iret
add
xchg
daa
clc
sub
(bad)
or
jo
ja
and
not
in
push
dec
add
(bad)
jge
rsqrtps
push
jge
bound
xor
outs
scas
dec
xor
jp
add
adc
test
dec
sub
dec
mov
rol
mov
dec
lods
stc
addr16
inc
adc
xlat
adc
adc
dec
sub
popa
imul
pop
enter
add
in
mov
push
(bad)
dec
and
cmp
or
leave
and
sub
mov
nop
and
add
mov
fmul
sub
pop
xchg
inc
out
adc
mov
inc
adc
add
out
adc
in
jo
dec
add
add
or
xchg
mov
adc
xor
or
inc
pusha
add
xchg
jo
repnz
inc
push
inc
inc
cdq
xchg
mov
push
pop
push
retf
or
inc
addr16
mov
sbb
les
mov
mov
popa
adc
cmc
inc
cwde
ds
jnp
mov
enter
add
jl
pusha
dec
sub
adc
jne
mov
es
test
dec
out
push
cwde
mov
inc
daa
sahf
pusha
dec
add
movs
push
push
inc
jno
xchg
les
test
pop
push
mov
(bad)
jmp
lods
jno
or
lods
outs
xchg
sbb
push
das
or
push
arpl
inc
cmps
ds
cmp
enter
mov
mov
sbb
and
mov
lods
ret
mov
push
js
adc
fld
jg
mov
mov
xchg
and
dec
adc
add
xor
inc
aam
xchg
fisttp
xchg
lea
cmp
inc
imul
in
popf
mov
push
pop
cmp
add
and
sbb
mov
lahf
jge
mov
adc
inc
(bad)
inc
add
stc
call
cmps
scas
(bad)
fmul
adc
add
fcom
aad
in
mov
cmp
(bad)
lahf
add
add
adc
pop
or
xchg
xchg
push
mov
pop
fwait
sbb
dec
xchg
mov
pop
and
mov
mov
fs
fsubr
add
fstp
pop
shr
cmp
cmp
je
dec
push
ins
pop
push
add
loop
jbe
jno
pcmpgtw
push
push
out
inc
mov
fstp
adc
xor
add
xor
loope
jmp
push
leave
mov
loope
js
es
or
xchg
cmp
in
mov
cmc
adc
dec
aas
mov
jno
arpl
push
mov
sub
cmp
sub
inc
lahf
out
push
jle
addr16
sar
xchg
mov
lods
xchg
sub
cmps
jecxz
and
and
fld
push
cmps
ret
and
dec
and
mov
mov
in
jae
and
xchg
xor
add
add
or
inc
pop
popa
loope
cmp
arpl
inc
dec
cmp
jg
sbb
inc
cmp
inc
add
cmp
dec
dec
mov
jne
cs
jne
lods
les
shr
dec
movs
mov
fisubr
or
sbb
mov
pop
mov
repz
jne
mov
and
jge
pop
test
jno
popa
clc
mov
mov
xor
adc
mov
sbb
sbb
xor
inc
jmp
cdq
out
or
rol
cmp
test
adc
inc
adc
fist
iret
test
popa
mov
or
adc
ror
dec
pop
push
test
mov
or
clc
cmp
sub
and
xor
cld
lock
ret
hlt
ja
add
inc
bound
xchg
adc
ror
fisub
dec
xor
int3
xor
push
jmp
jne
fwait
gs
clc
inc
adc
xchg
ins
clc
ins
rcr
std
clc
fcmove
inc
or
in
clc
cmp
adc
(bad)
das
jno
rcl
inc
add
push
mov
inc
xlat
pop
in
or
call
xchg
(bad)
int
clc
cmp
pop
ror
mov
(bad)
cmps
or
fs
jg
inc
lods
test
pop
outs
imul
jg
and
and
pop
in
scas
movups
fstp
lahf
mov
sbb
and
or
ret
xor
retf
pushf
arpl
push
ret
jg
ret
outs
xchg
(bad)
mov
jmp
and
jne
in
adc
mov
daa
in
adc
pop
mov
inc
lods
push
sbb
ret
inc
or
sbb
iret
sahf
jge
pop
sbb
std
stos
fist
lock
mov
mov
fmul
inc
push
outs
sub
inc
mov
jno
cmp
mov
pop
lea
mov
fadd
inc
sbb
lahf
adc
cmp
out
fxch
pop
ret
retf
aad
mov
ins
out
les
mov
fbld
xor
cld
clc
in
mov
mov
pop
and
rcl
xchg
sub
or
mov
mov
adc
pop
add
aad
push
aaa
push
lds
jnp
ins
or
pop
lahf
inc
mov
sbb
aas
in
inc
push
xor
mov
pop
ret
push
(bad)
pop
push
mov
ficomp
pop
shl
jnp
xor
push
xchg
call
cwde
ds
add
into
jg
les
add
dec
fstp
sti
pushf
ins
repz
jno
jns
dec
(bad)
je
sub
and
cdq
test
out
mov
push
inc
jno
retf
jnp
out
mov
pushw
in
jno
sahf
push
add
add
cwde
xchg
or
nop
dec
sbb
call
sub
adc
jmp
cmp
or
jnp
repz
sub
xor
ret
add
mov
mov
dec
test
jle
pop
xchg
dec
sub
popa
scas
mov
adc
lock
xchg
adc
fadd
sahf
sub
xchg
out
dec
pop
imul
lods
add
fiadd
jns
out
cmps
retf
jo
xor
xchg
sub
mov
cmp
xor
nop
push
sub
into
adc
add
cmp
inc
or
repnz
dec
loop
sub
mov
or
je
pushf
inc
ins
shr
push
inc
int3
and
mov
or
loopne
inc
jb
xchg
push
rcl
and
dec
cwde
gs
retf
and
and
pop
enter
ins
mov
and
test
and
test
pop
repnz
push
ss
aam
jl
inc
or
dec
cwde
pop
cmp
push
je
and
in
sbb
or
data16
sahf
jmp
sbb
imul
jl
push
and
sbb
push
jns
jmp
mov
cmp
push
push
push
imul
xchg
mov
shl
pop
mov
outs
cli
adc
sub
or
jbe
stos
aad
and
add
cmp
sub
mov
or
or
push
movs
addr16
xchg
inc
inc
xchg
cmp
jg
add
cmps
minps
call
xchg
or
cs
cld
ins
or
dec
lods
mov
inc
mov
movs
scas
mov
cld
adc
dec
retf
xchg
lea
sub
fs
ror
sbb
jae
xor
mov
lahf
cs
and
sbb
and
cmp
rol
mov
xor
movs
mov
test
mov
xchg
daa
pushf
test
cwde
retf
ja
mov
je
mov
add
sbb
jo
cmp
add
pushf
test
jmp
es
jo
mov
(bad)
fcom
or
imul
xchg
ss
jg
mov
in
add
and
mov
fwait
inc
mov
pop
sbb
jne
lea
jo
add
sub
movs
enter
or
dec
shl
push
ret
inc
sbb
push
inc
and
jle
xchg
sbb
jmp
sub
or
and
fmul
dec
or
dec
les
bound
pop
(bad)
fist
cmps
xchg
je
rcl
dec
mov
lock
inc
call
rol
in
sbb
pop
in
lods
inc
sar
jbe
aam
add
sbb
mov
pop
add
xchg
mov
jmp
mov
dec
inc
pop
mov
mov
sbb
pop
daa
pop
in
and
pushf
pop
repnz
adc
or
imul
xor
cwde
jne
sub
pop
push
inc
aam
imul
add
xchg
pop
(bad)
addr16
mov
or
test
and
add
pushf
hlt
pop
js
enter
or
cmp
cmp
lock
jo
ss
and
mov
dec
jne
ret
xor
imul
push
mov
and
mov
sub
pop
or
ret
cmp
inc
push
test
addr16
inc
push
or
lods
push
ds
xor
mov
sub
jg
dec
mov
pop
dec
inc
jne
sub
push
adc
add
push
scas
jbe
cwde
pop
adc
sbb
mov
jp
xchg
xor
inc
and
xchg
sbb
mov
jno
(bad)
out
or
adc
xor
adc
arpl
icebp
retf
ret
inc
pop
sti
ss
inc
push
adc
fwait
cwde
icebp
or
fcomp
dec
mov
pop
rcr
aad
push
jb
imul
das
adc
cwde
xchg
mov
add
sbb
rol
dec
movs
and
lea
ins
pop
xchg
call
adc
mov
dec
add
(bad)
xor
mov
add
xor
mov
and
xchg
adc
je
xor
jne
ret
pop
jmp
dec
mov
push
sbb
shr
dec
dec
addr16
cmp
and
cmp
mov
loopne
shl
mov
sbb
add
cmp
push
pop
ror
pop
pop
test
cmp
jbe
push
in
lods
push
and
and
ror
stos
fbld
or
mov
and
fstp
cmps
es
cmp
and
inc
ins
in
mov
inc
aaa
test
aaa
mov
xor
enter
and
jne
mov
jmp
bswap
les
inc
fs
sbb
icebp
push
adc
je
xor
sbb
add
pop
adc
mov
sbb
inc
(bad)
jb
sbb
pop
sbb
hlt
jl
inc
push
add
jl
mov
xchg
and
mov
ja
pusha
add
rcr
hlt
test
sub
cld
pop
and
cmps
lock
sbb
xor
and
aam
mov
inc
add
dec
push
inc
add
shl
jne
and
sbb
dec
dec
dec
cmp
out
aas
jl
int3
mov
clc
sahf
ret
shl
inc
adc
jmp
add
dec
push
and
and
push
jbe
xchg
add
add
loopne
sbb
or
mov
sbb
aas
nop
mov
inc
add
shl
or
clc
lea
mov
loope
sbb
sub
push
sbb
int3
xor
mov
ins
ret
adc
add
sbb
pop
jle
fwait
ret
das
je
and
pop
add
dec
push
or
mov
lods
pop
pop
pop
mov
(bad)
je
inc
dec
enter
or
or
add
push
leave
dec
sbb
xchg
test
pop
dec
fwait
mov
ds
cmp
or
loopne
fild
gs
or
pop
in
inc
xor
pop
cmp
data16
jl
add
outs
add
sub
sbb
test
add
rcl
int
xchg
cmp
jb
mov
xchg
mov
push
mov
repnz
gs
loopne
or
dec
push
push
not
cmp
jmp
ret
pop
ret
inc
aaa
dec
or
je
mov
adc
movs
mov
pop
mov
ins
mov
pusha
jmp
fisttp
or
and
ss
loopne
add
test
inc
dec
mov
ins
push
pusha
and
ror
sub
dec
jo
adc
add
jne
add
sbb
push
dec
fisub
inc
cli
inc
mov
mov
enter
jno
aas
jge
jl
aaa
adc
add
pop
add
adc
pop
push
retf
jo
sbb
adc
rcr
sbb
jae
cmp
jecxz
mov
es
ret
dec
pop
clc
mov
cdq
cmp
retf
add
inc
add
or
push
enter
daa
and
push
sar
cmp
add
fcmovnb
mov
fimul
sbb
out
add
ds
popf
lea
and
add
mov
cmp
loop
xor
ss
and
mov
ins
add
das
imul
push
inc
pop
les
dec
and
add
outs
cmp
sbb
add
test
sub
call
pushf
cmp
pushf
add
mov
add
xchg
or
ss
rcl
in
or
cmp
pop
cmps
(bad)
mov
aaa
adc
add
push
inc
imul
pop
push
cmp
or
test
lahf
add
adc
add
outs
xchg
fs
cmps
pusha
add
dec
jae
out
jmp
dec
jb
je
cmp
clc
cmp
cmp
ret
mov
in
jno
hlt
dec
inc
fwait
(bad)
push
int3
or
cmp
jno
cmc
mov
push
jo
xlat
out
push
push
pusha
fld
xchg
retf
fs
fs
push
cmp
cmp
(bad)
(bad)
xchg
pop
and
sbb
add
xchg
mov
inc
fs
adc
out
loopne
add
stos
pop
scas
adc
lahf
pop
or
inc
cmp
clc
or
add
cmp
xchg
cmp
inc
mov
add
push
iret
or
inc
loop
adc
mov
bound
ret
pop
mov
cmps
cmp
jne
cmp
push
mov
push
push
sub
add
into
(bad)
lock
adc
xchg
movs
pop
sub
push
popa
pop
pop
fcomip
mov
and
aas
xchg
sub
add
movs
xchg
xor
dec
outs
cmps
lock
push
push
jmp
cmp
je
or
add
xchg
int3
or
sbb
xor
dec
jmp
fsubr
xchg
cdq
test
addr16
les
test
and
(bad)
pop
mov
push
mov
or
rcl
mov
(bad)
stc
imul
dec
jo
arpl
xor
sub
gs
into
or
ret
pop
les
xchg
loopne
jmp
adc
loop
nop
cmp
test
fnsave
and
mov
frstor
add
add
jl
or
mov
jns
xor
and
pusha
lahf
sub
adc
pushw
mov
or
shl
cmp
xchg
aam
cld
das
mov
retf
(bad)
adc
gs
fndisi(8087
popa
adc
push
ret
pop
mov
or
xchg
rol
push
or
or
mov
retf
movs
es
fimul
xor
bound
adc
ins
adc
add
cmp
sbb
sbb
add
pop
mov
ins
pusha
and
mov
add
adc
push
sub
popf
adc
and
test
cmp
mov
fs
nop
pusha
adc
add
xor
adc
sbb
push
pop
xor
pop
in
push
fistp
xlat
sbb
(bad)
mov
not
sbb
and
push
iret
pop
mov
adc
(bad)
sbb
adc
sub
imul
pop
in
mov
and
adc
scas
sbb
mov
xor
test
(bad)
adc
push
mov
fidiv
(bad)
sub
retf
dec
xor
adc
sbb
out
xor
inc
cwde
or
test
lods
leave
mov
shl
daa
adc
and
xchg
or
and
pop
sub
call
aas
inc
ins
jns
not
xor
sub
xor
adc
xor
repnz
xchg
lock
sbb
xor
sub
push
fld
dec
fsub
aas
mov
push
xor
cmp
add
(bad)
fst
and
mov
xor
add
sbb
adc
pop
repz
xchg
push
leave
ss
fsubr
mov
jbe
nop
pop
xor
cmp
xor
sbb
push
sbb
jl
sbb
dec
ss
mov
movs
jo
arpl
cmp
jo
sub
mov
fmul
and
pop
push
and
lods
in
or
jl
daa
lea
jmp
sub
in
test
push
pop
xor
mov
add
stos
pusha
add
mov
cmp
inc
dec
inc
xor
in
test
stos
test
leave
(bad)
cmp
adc
cmp
ins
mov
adc
outs
sar
push
test
lds
and
push
fwait
xchg
ret
daa
sbb
daa
shl
and
push
lahf
in
pop
adc
and
stos
mov
push
inc
xlat
pusha
mov
sub
and
inc
or
jecxz
xor
rcr
pop
xchg
or
into
sti
pushf
pmullw
pop
mov
fnsave
in
sub
or
mov
ret
or
dec
sub
in
sub
sbb
int3
out
fisttp
cmp
mov
fstp
push
and
icebp
push
in
rol
add
adc
mov
sub
sbb
sbb
xor
sub
pop
xor
retf
push
aas
dec
or
or
mov
or
add
jb
mov
nop
fild
aaa
movs
sub
and
mov
push
cmp
popf
sbb
fsubr
fidiv
cmp
xchg
push
push
xor
test
or
je
add
lods
or
mov
ins
in
mov
sbb
push
movs
xchg
xchg
iret
stos
jno
outs
or
xchg
fs
ss
mov
xor
inc
fist
and
mov
movs
imul
daa
push
mov
sbb
mov
daa
call
adc
pusha
(bad)
adc
sbb
sbb
in
shl
cmp
pusha
dec
ror
into
or
pop
push
call
sbb
push
push
mov
fs
adc
fimul
mov
and
ins
dec
mov
shr
loopne
les
and
add
mov
and
cmp
fsub
not
shr
mov
mov
imul
push
push
sbb
xlat
mov
inc
and
xor
adc
cmp
aad
ret
mov
push
mov
sbb
and
cmp
aad
xor
sub
and
or
push
or
cmp
push
or
dec
push
dec
push
pop
or
or
push
iret
je
adc
movs
pop
icebp
frstor
jo
sbb
aaa
in
adc
std
sbb
std
push
xor
fld
mov
lea
sub
mov
jns
push
imul
sub
mov
sbb
and
das
lods
ret
sub
dec
inc
ss
or
lods
pop
ins
sbb
inc
mov
xor
sub
outs
or
mov
fistp
loopne
push
inc
sti
aam
lods
mov
xor
and
push
add
xor
mov
sbb
and
xor
ja
test
pusha
aaa
mov
popa
mov
(bad)
js
aaa
rcr
fwait
and
leave
mov
lods
shl
add
and
sbb
push
and
jns
nop
(bad)
ret
ins
xor
xor
pop
(bad)
fisub
or
add
sub
pop
daa
fadd
addr16
jb
gs
popa
mov
adc
lds
scas
cmp
je
and
das
add
repz
and
daa
lock
addr16
gs
test
sbb
sbb
lds
dec
mov
pop
pop
sub
stos
xor
adc
pop
pop
pop
pop
ror
and
or
outs
or
push
sub
sbb
sub
mov
add
push
aas
jns
push
mov
push
xor
sub
add
jne
arpl
and
sbb
mov
push
cmp
adc
sbb
popf
mov
push
adc
sbb
aas
addr16
addr16
pop
leave
addr16
mov
dec
popf
mov
mov
out
fisub
mov
mov
gs
sbb
(bad)
enter
and
(bad)
mov
adc
cmp
push
cmp
adc
aas
inc
push
stc
cmp
adc
mov
ins
sub
sbb
lea
nop
daa
push
inc
cmp
push
adc
lds
test
pop
shr
adc
push
mov
mov
sub
movs
add
adc
push
jo
inc
pusha
mov
xor
jge
sub
sub
bound
call
fsubr
push
sub
popf
sbb
mov
in
xor
inc
(bad)
imul
mov
pop
add
pushf
mov
push
adc
pop
sbb
mov
movs
sar
into
repz
mov
cmps
ret
and
jmp
and
ins
or
push
lods
test
or
popf
cmp
test
or
cmp
sbb
mov
push
mov
ins
cmp
jmp
adc
ss
test
sub
and
in
pop
or
es
xchg
pop
mov
leave
pop
mov
cmp
aas
test
pop
push
arpl
and
inc
dec
add
aaa
jo
cdq
push
shr
and
inc
mov
out
mov
sub
inc
fwait
mov
and
jl
shl
sub
call
xchg
mov
xchg
push
in
fadd
push
and
and
sub
sub
inc
inc
or
push
jns
fcom
dec
cwde
adc
push
clc
xchg
std
sub
push
or
test
fimul
ins
pusha
jg
sub
gs
xor
dec
add
fst
add
lea
add
jbe
mov
sbb
fist
pop
sbb
idiv
inc
or
lock
rcr
in
ins
daa
mov
cs
adc
rol
inc
add
and
adc
data16
lock
adc
aas
or
or
mov
xchg
sbb
dec
sti
aad
pop
dec
fistp
xor
lds
mov
ins
add
push
and
sbb
adc
ret
pushw
pusha
push
sub
add
add
cmp
and
jg
dec
jae
sbb
cmovns
inc
ins
jne
sbb
or
jnp
sti
in
sub
(bad)
jge
sbb
lea
xchg
cmp
loopne
jg
mov
rcl
xor
xor
daa
push
adc
adc
jne
pop
inc
bound
push
sub
fwait
bound
daa
ror
(bad)
push
sti
sub
xor
pop
imul
dec
jmp
mov
enter
pop
xchg
cmp
xor
and
sbb
xor
daa
(bad)
(bad)
mov
dec
adc
push
mov
sub
and
ins
sub
aam
jae
fnsave
arpl
in
stc
xchg
(bad)
ds
and
or
daa
stc
push
sbb
in
stos
mov
scas
cmps
cmp
cs
xcrypt-cfb
cmps
and
scas
arpl
xchg
fcomp
cmps
daa
inc
fst
enter
sbb
adc
pushf
imul
mov
inc
cmp
inc
fimul
sbb
(bad)
shr
cmp
ins
popa
nop
mov
push
fdiv
sbb
push
mov
mov
cmp
and
sti
push
daa
rcr
mov
adc
mov
fidiv
pop
or
push
jo
outs
aaa
sbb
imul
je
adc
push
cmps
ja
mov
cmp
aaa
mov
inc
mov
cld
dec
xchg
aaa
xchg
xor
cmp
mov
and
ins
in
cdq
pop
xchg
xchg
popa
pop
(bad)
and
or
lahf
hlt
mov
(bad)
xor
arpl
out
(bad)
xchg
outs
xor
lahf
js
push
pusha
sub
outs
test
mov
stos
mov
shl
retf
jb
shl
adc
jnp
inc
mov
and
push
mov
inc
xor
and
or
leave
ret
inc
mov
adc
xor
inc
or
outs
bound
pop
sbb
xchg
or
xor
pop
lea
test
xor
and
jg
jg
sub
sbb
ss
retf
push
dec
or
sti
mov
adc
in
sub
popa
jae
ja
in
lods
mov
and
ins
shl
lea
mov
inc
add
ins
(bad)
and
js
sub
outs
sbb
pop
xchg
jb
js
call
push
nop
adc
outs
push
outs
push
outs
add
ja
fild
ja
mov
dec
xchg
mov
mov
add
stos
mov
xchg
ins
jns
cli
imul
pop
imul
ins
add
das
push
xor
mov
shr
pusha
sub
xor
aam
xbegin
(bad)
adc
mov
daa
jbe
outs
add
sbb
imul
dec
and
sti
pop
and
fmul
xchg
iret
or
mov
jle
enter
sbb
jb
ins
pop
pop
cmp
push
pop
pop
cmp
xchg
xchg
jbe
sar
jg
sbb
add
(bad)
push
and
xchg
and
cld
mov
sub
push
or
sub
(bad)
je
cmp
jae
sub
xor
fcom
and
sub
pop
leave
xor
pop
adc
sbb
popa
iret
push
sub
and
adc
in
mov
sbb
loope
pop
call
pusha
ins
add
and
sub
cwde
outs
pop
lock
inc
push
daa
push
popf
retf
dec
add
clc
or
sub
add
jbe
sbb
cmp
ins
lods
dec
pop
adc
push
aad
and
stos
test
imul
cmps
and
cwde
test
sub
cmp
jmp
gs
xchg
mov
jecxz
mov
pop
or
lods
inc
dec
or
sub
int
neg
mov
test
pop
add
pusha
push
adc
and
mov
mov
gs
jecxz
movs
xor
dec
imul
out
push
ins
jne
daa
sbb
mov
out
and
(bad)
outs
arpl
pushf
fs
or
mov
add
adc
shl
add
aad
fld
xchg
or
dec
(bad)
or
lea
xlat
pop
daa
adc
add
adc
call
and
xchg
fcom
sub
pop
xchg
mov
adc
pop
in
and
and
popa
addr16
sub
stc
daa
mov
mov
sub
into
(bad)
fldcw
frstor
mov
sub
and
add
cmc
sub
sub
movs
mov
cmps
and
push
lds
shl
adc
les
lds
push
mov
call
jecxz
ficomp
in
sub
daa
jecxz
shr
jecxz
jecxz
and
test
mov
lea
(bad)
or
(bad)
jecxz
lods
not
das
jecxz
imul
movs
sbb
push
sbb
mov
ins
ins
mov
stc
daa
lds
inc
push
mov
sub
mov
mov
lock
pop
adc
adc
repnz
and
push
dec
push
adc
sbb
pop
or
fisubr
ins
and
fcmovb
xlat
sbb
sbb
ret
mov
movs
test
daa
neg
in
jae
jae
in
dec
jae
jae
cmp
es
jae
jae
inc
cs
jae
inc
mov
ret
sbb
xchg
out
es
imul
jo
mov
sub
and
fmul
jmp
popa
dec
addr16
ins
jae
pop
lods
mov
push
ja
xor
aad
mov
mov
and
das
rcl
ror
mov
sbb
dec
or
sub
adc
jb
imul
jne
rol
inc
sbb
sti
jne
sub
sbb
int3
inc
xor
mov
xor
sub
xor
fidiv
or
dec
push
inc
mov
dec
(bad)
bound
std
jnp
pop
test
sub
sbb
pop
nop
fidivr
mov
loope
mov
and
shl
ret
outs
and
lods
mov
loopne
xchg
cs
ja
fsub
add
cmp
loopne
cmc
sbb
xlat
repnz
and
push
push
add
and
shr
push
les
aaa
add
sub
jmp
and
xchg
test
repnz
push
inc
test
fidivr
arpl
shr
dec
xchg
aaa
in
and
or
repz
cmp
(bad)
or
movs
test
in
mov
daa
and
xchg
add
and
pop
inc
or
mov
dec
pop
sub
or
ins
shr
shl
pop
push
repz
fiadd
imul
ret
dec
loope
stc
mov
xor
icebp
inc
outs
je
das
push
shl
icebp
sub
rcr
sub
xor
xor
adc
inc
loope
clc
(bad)
(bad)
ret
adc
aad
stos
adc
mov
outs
rcr
pop
xor
lea
add
cmp
push
push
sbb
adc
orps
adc
sub
cmp
sub
xor
or
cmp
mov
push
sub
scas
push
je
dec
rol
push
and
cmp
jp
and
sub
add
or
mul
jo
rcr
mov
pop
push
and
or
fldenv
mov
xchg
lods
xchg
es
loopne
jg
div
fcmovnu
fsub
dec
pop
ficomp
(bad)
push
xor
gs
sbb
jecxz
sbb
add
jo
jo
jb
and
push
shl
xchg
cmp
in
xor
cmp
daa
in
bound
bound
and
xchg
xor
lahf
imul
fnstcw
and
mov
and
cmp
mov
xchg
sbb
and
ss
lods
cmp
movs
push
push
add
cmp
cmp
jp
push
push
test
add
fidiv
or
test
xor
pop
cmp
shr
out
pop
inc
dec
out
adc
scas
push
sub
movs
sbb
and
mov
imul
or
fcom
sbb
ins
sub
fisubr
shr
sub
out
(bad)
fild
xchg
add
inc
inc
or
outs
inc
pop
mov
pop
or
cmps
add
push
add
xchg
bound
pusha
xchg
dec
fnsave
into
dec
test
loopne
or
ins
xor
lods
rol
adc
push
mov
add
iret
inc
cs
iret
mov
jae
adc
rcl
jmp
push
pop
pushf
imul
sbb
imul
or
xchg
xor
or
dec
xchg
mov
push
adc
fcom
icebp
xchg
or
cmp
adc
jg
sub
mov
shl
leave
addr16
pop
outs
outs
ins
cmp
sub
add
and
mov
and
ret
sbb
and
in
adc
(bad)
sbb
fwait
push
mov
and
lea
inc
inc
repnz
mov
add
sub
les
dec
sub
mov
push
sub
xchg
pusha
xchg
adc
fisub
xchg
leave
sub
in
push
inc
leave
sub
pop
inc
sbb
mov
ins
sbb
pop
in
and
sbb
dec
mov
retf
cmp
adc
sbb
or
jns
ss
not
and
add
sbb
mov
adc
or
movs
xchg
xchg
je
cmps
inc
adc
add
mov
pusha
mov
or
sub
(bad)
lods
shl
add
(bad)
cmp
and
das
mov
test
mov
adc
leave
xor
push
pop
(bad)
mov
mov
jne
push
cmp
adc
div
lods
out
test
(bad)
push
push
imul
or
je
push
or
adc
and
push
movs
adc
ficom
pop
fiadd
pop
dec
sub
ins
or
xor
or
ficom
mov
or
shl
jg
daa
inc
sub
or
sbb
push
pop
pop
adc
push
and
sbb
imul
and
sbb
inc
xchg
and
or
add
push
test
or
adc
jbe
sbb
mov
xchg
dec
pop
and
fdiv
jp
dec
push
addr16
or
ret
pop
or
adc
sbb
rcr
mov
bsr
sub
mov
pop
inc
inc
cmp
and
ins
sub
and
sub
push
sub
test
in
jmp
outs
sub
jbe
dec
(bad)
mov
or
pop
mov
daa
imul
mov
mov
mov
and
adc
adc
and
and
sub
(bad)
ret
sub
or
sar
imul
dec
xchg
jg
ficom
sbb
rcr
lea
ds
outs
xor
dec
sub
outs
fcmove
jb
jns
scas
and
xchg
inc
push
ja
fld
test
stos
push
dec
cmp
das
and
inc
or
mov
mov
mov
ja
jge
fcmovbe
popa
or
jo
ret
xchg
inc
cld
movs
pop
mov
dec
push
and
sbb
push
mov
(bad)
imul
ja
(bad)
retf
(bad)
xor
in
movs
mov
test
fimul
and
ja
fadd
sub
ins
pop
jnp
das
sbb
adc
jge
sbb
cmps
sbb
in
mov
mov
adc
or
(bad)
popa
js
js
in
jb
js
js
pop
out
xchg
adc
mov
adc
jo
daa
aas
pop
and
ins
ja
push
adc
push
inc
stc
sbb
shr
adc
xchg
and
xor
jo
mov
and
inc
mov
adc
push
dec
inc
dec
bound
sub
rcr
sub
inc
jo
and
and
push
mov
cdq
inc
xor
pop
sub
cdq
mov
xor
popa
js
js
mov
cmp
js
lea
pop
sbb
xlat
jmp
ins
add
daa
mov
sti
cmps
mov
cs
xor
pop
cmp
pop
shl
mov
mov
mov
push
cmp
mov
mov
sub
push
scas
pop
sub
fidiv
xor
pop
sub
sub
lods
add
fs
and
int
mov
bound
retf
sub
push
or
inc
dec
push
movs
push
cmc
sbb
add
outs
inc
arpl
inc
and
cmps
sbb
adc
and
imul
jbe
inc
and
and
and
fiadd
and
pop
add
lea
xor
loopne
or
mov
cmp
dec
pop
push
sbb
lods
add
cmp
(bad)
cmps
jae
aas
mov
ja
cmp
and
jns
xchg
jg
scas
sub
dec
add
mov
inc
add
in
es
mov
inc
ins
push
inc
xchg
test
mov
xor
outs
add
addr16
dec
mov
adc
and
into
dec
sub
inc
and
mov
adc
arpl
adc
sub
(bad)
pop
xor
xor
xor
or
or
cmp
pop
adc
loope
mov
mov
popf
add
and
movs
xor
dec
or
ficom
xlat
ins
pop
and
fstp
adc
fadd
sbb
das
daa
lods
add
fs
pop
enter
pop
inc
dec
out
or
repz
cmc
pop
inc
out
pop
sbb
sbb
sbb
xchg
outs
fistp
aaa
dec
jne
sbb
or
xor
or
mov
mov
in
sbb
dec
sbb
iret
inc
(bad)
push
or
sbb
add
adc
cmp
pop
mov
mov
test
inc
or
in
cmp
or
pop
xor
sub
push
cdq
adc
pop
jns
sub
sbb
add
and
je
loope
pop
in
push
push
outs
jo
xchg
sti
push
ror
test
adc
fnstenv
es
adc
mov
and
add
loope
add
sti
jae
popf
out
arpl
sbb
or
jo
add
jno
xlat
ins
jmp
mov
nop
sub
mov
jne
and
dec
sub
add
daa
adc
out
add
pop
sbb
xor
xor
cmp
push
neg
jge
jo
jo
or
push
push
(bad)
fistp
(bad)
lahf
adc
lahf
pop
ss
adc
mov
cmp
and
jge
add
adc
sub
or
ret
pop
pop
sub
stos
sub
or
and
call
loope
jmp
adc
add
fwait
jae
xor
cmp
dec
cmp
push
adc
ds
iret
add
xchg
dec
icebp
adc
xor
repnz
shr
sub
ja
push
sub
dec
jnp
in
add
push
dec
jnp
jge
arpl
jns
test
sbb
sbb
or
adc
sub
mov
bound
sub
pop
dec
xor
push
mov
adc
and
rcr
sbb
mov
cmp
shl
or
xchg
adc
pop
inc
xor
or
xor
jbe
jp
jg
daa
outs
xor
inc
sub
and
dec
adc
dec
or
nop
cmp
mov
sbb
cmovne
push
mov
adc
sub
xchg
jmp
mov
repnz
loop
mov
call
pushf
xchg
and
jb
jbe
cmps
cmp
or
and
or
ins
xlat
pop
mov
sub
push
sbb
es
push
sbb
adc
sub
jge
xor
das
sbb
pop
mov
mov
xor
leave
sbb
sub
movs
les
stos
adc
pop
sub
in
call
mov
ins
mov
or
adc
pusha
mov
ins
and
cmps
add
mov
cmps
stos
cmps
adc
stos
add
push
sub
and
lahf
pusha
xchg
cmps
and
loope
and
dec
sub
mov
ins
sub
push
lock
xchg
sub
jge
lds
popa
push
aaa
leave
ins
mov
mov
cdq
sbb
pop
test
mov
cmp
gs
imul
sub
frstor
bound
fimul
push
and
sub
pop
sub
sub
(bad)
call
aaa
bound
cdq
outs
loope
nop
sbb
push
xchg
int
xor
aad
or
xchg
pop
push
test
fst
jno
fnsave
retf
inc
cmp
xor
movs
add
or
pop
xchg
das
outs
and
in
xor
pop
xor
sub
inc
adc
ins
adc
fbld
call
xor
mov
mov
sbb
jnp
je
mov
and
sub
imul
mov
movs
arpl
rcl
sub
push
and
mov
pop
rol
push
imul
or
xchg
xor
pop
or
push
push
inc
ret
adc
ins
repnz
adc
inc
dec
inc
movs
xor
cmp
sbb
mov
addr16
and
mov
mov
push
das
mov
push
inc
ret
clc
dec
jg
stos
push
add
xchg
dec
retf
xchg
mov
pop
add
jl
repnz
inc
cli
sbb
xchg
sbb
fstp
sub
repnz
xchg
sub
rcr
or
mov
add
add
std
and
mov
and
xchg
pop
mov
sub
mov
sub
repnz
add
add
retf
out
pop
cmps
push
push
add
mov
sbb
xor
xor
mov
add
repnz
das
xor
dec
add
loope
pop
scas
cld
aaa
add
cmp
lds
add
repnz
adc
add
add
aas
push
jle
add
aas
add
pop
pop
retf
pop
ret
inc
xor
cmovb
pop
and
imul
push
push
es
aad
lds
dec
fild
adc
test
mov
mov
dec
dec
add
push
mov
xchg
add
add
mov
adc
cmps
cmp
cdq
add
call
and
nop
push
sbb
jb
jo
mov
inc
and
cwde
mov
in
mov
push
sub
dec
dec
add
lods
fsubr
lock
adc
cmps
shl
pushf
add
mov
nop
mov
inc
dec
dec
shl
cmp
add
adc
jo
and
retf
pushf
add
adc
int3
pushf
into
or
inc
dec
add
ror
cmp
rcr
adc
cmps
add
adc
in
fsub
test
sbb
sbb
sbb
push
add
(bad)
aas
push
jnp
add
mov
dec
inc
sbb
rol
add
add
xor
outs
or
mov
add
div
mov
scas
pop
sbb
push
pop
add
adc
clc
(bad)
cmps
jbe
pop
daa
or
push
sbb
mov
cwde
aam
std
fbstp
(bad)
xchg
inc
sbb
sahf
push
and
add
out
fimul
push
loop
sbb
adc
fsubr
dec
xlat
ss
cmp
shr
hlt
in
push
je
push
cs
out
add
jo
jl
or
xchg
xor
add
push
jb
mov
mov
jns
or
inc
sahf
pushf
jmp
or
xchg
daa
and
outs
psubsw
adc
pop
adc
xor
adc
fs
icebp
ins
adc
call
and
jne
sbb
push
pop
jmp
mov
push
pop
cmovs
pop
aas
jns
cmp
jno
sahf
inc
fisubr
sbb
mov
test
push
dec
push
std
es
and
cmc
xchg
xor
sub
sub
adc
fcomp
add
or
inc
adc
push
pop
sbb
dec
cmp
adc
in
xchg
gs
pop
fist
in
adc
imul
cwde
addr16
inc
lods
mov
jnp
add
and
mov
add
fwait
shl
adc
ja
push
int3
push
push
dec
pusha
sbb
rcl
fnstsw
neg
xchg
in
add
jg
sahf
int3
out
cld
call
dec
pop
ds
or
mov
fisttp
xchg
xchg
mov
into
in
cmp
enter
jmp
sub
inc
jmp
ret
adc
push
adc
pop
inc
les
push
call
cmp
nop
and
adc
test
bound
push
aas
push
shl
lods
adc
push
adc
dec
data16
push
adc
nop
mov
das
add
cmp
sub
xchg
cmp
aas
adc
add
adc
jmp
push
ss
aad
jbe
lock
repnz
enter
sbb
adc
xchg
dec
les
(bad)
cmps
jmp
adc
js
push
add
cmc
jge
mov
aam
lahf
add
add
add
push
cmps
add
and
and
add
fldln2
aad
outs
(bad)
leave
add
or
push
dec
sbb
mov
retf
adc
inc
rol
mov
movs
lahf
sbb
pop
or
xchg
add
or
out
sbb
adc
fild
and
loope
and
adc
add
xor
lea
in
add
loopne
pop
xchg
imul
imul
add
outs
add
xor
push
cmp
fidiv
cwde
mov
and
jl
pushf
inc
repnz
nop
daa
into
repz
fmul
pop
pop
cmc
fmul
sar
add
in
sub
pop
mov
or
dec
in
cmp
shr
pushf
dec
mov
or
mov
fdiv
add
jmp
mov
xchg
cmc
mov
or
adc
xor
scas
inc
sub
and
adc
sub
add
and
shl
ret
push
repnz
push
retf
pop
push
movs
mov
push
jb
push
movaps
sbb
adc
aad
cmps
mov
sbb
jns
or
lock
sbb
dec
push
in
sub
and
ins
je
mov
mov
jbe
test
or
xchg
add
je
add
or
mov
(bad)
icebp
shl
or
inc
add
xor
cmps
dec
add
pop
mov
jb
mov
in
pop
mov
jp
or
enter
jg
mov
adc
jnp
mov
or
je
cmp
adc
fsubr
icebp
adc
adc
stos
sbb
pop
or
gs
fisub
add
sub
dec
rol
pop
inc
sbb
add
xchg
sbb
mov
mov
fst
pop
les
repnz
leave
sbb
or
sbb
test
push
push
int3
jl
dec
rep
icebp
in
repnz
int3
hlt
ds
fld
dec
test
test
push
mov
push
add
ins
fistp
and
add
push
push
test
push
fs
sahf
cmps
fld
pop
aam
cmp
adc
cmps
fnstcw
hlt
push
add
mov
push
out
jns
fld
push
or
scas
idiv
in
cmp
or
dec
ins
or
sti
sahf
mov
push
pop
adc
sbb
push
fisub
mov
cmps
inc
mov
neg
push
adc
scas
sar
xor
in
cld
in
repnz
fld
data16
pop
mov
call
bound
movs
mov
pop
sbb
mov
call
xchg
mov
or
pop
cmp
ds
add
sbb
int
cmp
and
int3
das
add
jnp
dec
les
repz
in
aas
inc
fwait
movhps
cmp
sbb
xchg
cld
repnz
rcr
add
pop
sbb
push
add
sbb
add
add
and
out
add
and
add
add
jb
xchg
retf
push
and
scas
xchg
sub
sub
inc
and
add
retf
add
sub
sub
add
add
retf
xchg
sub
das
add
add
xor
repnz
ds
mov
(bad)
in
xchg
pop
xor
add
add
cmp
push
sub
add
add
in
das
cmp
sub
into
sahf
aas
stos
loope
push
sub
push
mov
or
js
pop
scas
sbb
mov
push
rol
push
jb
push
dec
dec
inc
nop
push
add
sbb
sub
dec
and
xchg
in
mov
sbb
sbb
in
xchg
bound
add
and
dec
push
enter
cmp
push
call
dec
push
cmp
add
test
push
mov
sbb
push
or
dec
push
mov
add
mov
pushf
and
daa
cwde
mov
test
hlt
xchg
mov
push
test
lock
pop
bound
dec
xor
push
and
or
dec
xor
mov
dec
dec
sar
dec
push
test
mov
inc
add
or
add
sar
(bad)
xchg
adc
add
pusha
mov
and
jbe
xchg
push
jo
je
dec
and
xchg
add
fadd
sub
push
xchg
add
dec
(bad)
movs
push
inc
or
sbb
add
fadd
(bad)
pushf
fs
inc
sbb
inc
int3
cmp
add
and
add
iret
and
adc
adc
and
adc
adc
and
adc
adc
fadd
sbb
bound
xor
sbb
jo
sbb
mul
stc
mov
push
loopne
dec
sbb
jae
cmp
mov
push
je
aam
cmp
sbb
add
ret
pop
pop
hlt
pop
adc
push
in
test
fldenv
shr
sub
or
ret
sbb
or
adc
shl
mov
shr
cmp
mov
sbb
sub
jmp
pop
pop
add
xchg
add
and
outs
jle
add
aad
scas
pusha
push
(bad)
add
sbb
mov
pop
add
xor
cmp
gs
jne
push
adc
leave
or
and
or
xor
add
and
sub
push
jl
pop
in
push
loope
xor
ds
jl
or
and
(bad)
push
add
push
mov
(bad)
fwait
adc
rol
js
mov
adc
mov
pop
xchg
call
sub
test
ffreep
dec
test
jno
or
xor
sbb
xchg
stos
xchg
add
add
or
xor
or
or
jo
pop
cli
test
push
mov
xlat
adc
adc
pop
adc
and
aam
sbb
mov
mov
or
psadbw
ss
das
xor
jb
fild
loop
xor
lahf
bswap
leave
leave
leave
enter
xchg
out
repnz
in
xor
sbb
in
and
xchg
pushf
pushf
mov
xor
in
sahf
and
add
add
sub
xor
shl
pop
push
js
push
mov
push
xor
push
and
adc
push
xchg
mov
bound
add
sbb
and
adc
mov
add
lea
pop
retf
scas
outs
and
add
lods
cmps
cmps
xor
repnz
push
cmp
cwde
mov
sbb
test
cli
cmp
cmps
das
pop
adc
sub
xor
add
adc
popf
sub
mov
xchg
jb
or
int
add
rcl
add
test
pusha
sub
ds
mov
cmp
retf
mov
adc
outs
sbb
push
jb
dec
daa
or
or
into
in
xor
pop
jne
jbe
mov
inc
dec
adc
in
jne
lock
mov
mov
pop
scas
dec
adc
push
shl
lods
test
add
(bad)
adc
sbb
xchg
xchg
push
jmp
xchg
cld
mov
add
pop
cmp
(bad)
test
push
ins
lahf
lock
hlt
jmp
or
hlt
xchg
and
adc
jns
fistp
adc
stc
pop
push
push
clc
je
ja
cmp
dec
pop
(bad)
aaa
xor
repz
jae
push
dec
push
test
repz
nop
pushf
test
shl
repz
or
fisttp
cmp
mul
out
in
sti
cmp
add
mov
mov
xor
push
add
pop
add
or
add
xchg
in
or
cdq
cmp
pop
aaa
and
xor
push
adc
nop
adc
mov
push
sbb
aam
iret
jmp
sbb
cmps
cmp
mov
enter
adc
bound
in
es
jno
sbb
stc
cwde
sbb
inc
sbb
clc
stos
call
sbb
jns
xchg
or
mov
add
js
adc
stos
xchg
lods
sbb
or
inc
dec
inc
(bad)
adc
xchg
sbb
inc
loop
sub
push
clc
push
or
adc
nop
outs
arpl
xchg
sbb
jno
leave
inc
xchg
pop
les
mov
and
mov
sbb
cmp
iret
add
dec
xor
(bad)
iret
or
dec
add
nop
pop
pop
ins
scas
mov
mov
retf
retf
or
hlt
aas
mov
retf
into
ds
push
lods
inc
push
sub
pop
sbb
sbb
ds
lock
push
xor
lods
fst
mov
add
inc
add
mov
jb
icebp
push
inc
leave
xchg
xchg
adc
inc
fiadd
jb
adc
inc
xor
inc
inc
and
movs
inc
add
add
clc
out
lock
invd
jno
and
push
and
xchg
pushf
mov
mov
adc
sub
push
adc
dec
inc
mov
movs
inc
xor
jne
xor
pop
lods
adc
imul
inc
cld
inc
or
and
pop
dec
add
fld
dec
push
stos
dec
xor
adc
mov
popa
push
lock
aas
pop
inc
mov
adc
inc
fild
jb
enter
inc
jp
sbb
sbb
adc
jmp
lods
or
sbb
inc
sahf
cmp
cmp
mov
dec
cmps
dec
mov
inc
cli
inc
int3
xchg
jo
add
in
sbb
inc
pop
dec
pushf
fs
xchg
adc
or
sbb
aaa
je
add
push
pushf
adc
lods
dec
gs
cmc
sbb
out
cmp
in
or
fs
jb
pushf
inc
dec
add
xchg
or
or
out
js
jo
adc
xor
lds
stos
in
les
dec
fmul
(bad)
nop
mov
dec
mov
xchg
adc
cmp
push
leave
add
dec
(bad)
and
shr
les
pushf
nop
mov
dec
sub
fwait
das
ror
mov
movs
dec
jmp
cmp
push
aad
jl
aaa
pop
es
add
mov
add
int3
push
jae
in
sub
push
dec
pushf
or
adc
inc
sub
out
add
ins
dec
push
add
dec
cwde
cmp
pop
sbb
or
fcomp
ret
inc
add
adc
and
or
fldcw
(bad)
dec
pop
pop
cmc
jl
cmps
push
dec
mov
push
imul
push
xchg
push
repz
sub
add
add
dec
or
push
ds
push
add
xchg
lahf
jmp
or
movs
cs
push
mov
stc
stc
or
add
xor
push
xchg
sbb
and
or
jno
adc
mov
jb
adc
push
aam
stos
push
adc
cmp
inc
imul
inc
ss
fldcw
jle
pop
push
jno
daa
out
sbb
sbb
dec
outs
cmps
(bad)
lahf
or
ins
movs
dec
xor
push
movs
cmp
pop
test
dec
fdivr
adc
add
xor
pusha
ja
push
ficom
or
or
fwait
int
push
mov
add
push
adc
cmp
pop
or
stc
dec
sahf
mov
push
aam
push
ja
sub
inc
push
push
jno
jne
pushf
sbb
bsf
and
out
xchg
pop
pusha
pop
shr
nop
cmps
jb
adc
or
inc
iret
xchg
xchg
mov
jne
mov
imul
dec
mov
sub
or
lock
pop
inc
stos
adc
out
test
mov
lahf
ins
push
jle
fcom
lods
xchg
nop
lock
and
add
test
sub
ss
add
inc
xor
mov
or
push
jp
aam
ins
add
ror
hlt
ins
out
fild
sub
jg
mov
(bad)
or
pushf
cmp
das
enter
fiadd
rol
outs
add
stos
and
jl
add
dec
add
cmp
push
inc
and
imul
add
es
mov
push
sbb
dec
pop
leave
cmps
movs
hlt
push
and
mov
cmp
pop
jno
mov
adc
out
add
cs
(bad)
jno
jle
and
leave
pop
inc
cs
mov
in
paddusb
lock
xchg
pop
push
fadd
pop
inc
ins
pop
or
or
jmp
pop
or
loope
or
fild
mov
pop
push
loope
or
pop
or
into
mov
xchg
pop
xor
push
movs
or
cwde
or
cmp
(bad)
popf
inc
dec
or
inc
pop
xchg
pop
dec
pop
shr
xchg
and
fcomp
sbb
jp
dec
push
out
and
gs
mov
adc
nop
jmp
nop
pop
mov
pop
inc
sub
xchg
dec
pusha
push
add
or
sub
add
pop
pop
ds
add
dec
pop
into
inc
cmp
adc
push
jge
dec
adc
push
mov
pop
pop
xor
shr
mov
in
nop
and
sub
pusha
and
dec
js
add
inc
sbb
je
jl
xor
add
movs
mov
mov
mov
fld
fadd
stos
ret
inc
in
fild
sbb
add
out
ins
out
inc
push
scas
cmps
ins
dec
call
mov
outs
sbb
mov
es
leave
push
push
test
rcl
(bad)
test
mov
pop
mov
push
push
int3
xor
imul
inc
sub
push
stos
arpl
gs
sbb
push
pop
inc
cmps
popa
mov
push
enter
ficom
arpl
add
pop
pop
adc
aad
test
mov
add
nop
add
(bad)
pop
inc
push
sbb
pop
push
mov
retf
sbb
cmp
pusha
es
inc
loope
push
div
in
dec
icebp
sub
dec
pop
jns
push
or
in
xchg
jbe
xor
or
stc
inc
cmc
or
sub
adc
arpl
dec
or
pop
adc
jne
cmovnp
arpl
fimul
in
sub
pushf
pushf
mov
mov
dec
inc
push
mov
or
daa
daa
daa
and
shl
xchg
xchg
xchg
daa
sbb
leave
enter
out
xor
leave
leave
imul
cs
xchg
push
add
lds
inc
sbb
loope
add
sbb
movs
sub
xor
add
inc
xchg
mov
push
add
and
ss
mov
or
inc
mov
xchg
xchg
push
jne
mov
push
add
inc
adc
xor
cmc
mov
sub
pop
mov
push
or
mov
les
bound
stc
imul
add
mov
cmp
add
mov
push
movs
push
sbb
movs
shr
push
mov
call
mov
mov
add
pop
repnz
inc
and
imul
mov
addr16
pop
cwde
sub
addr16
mov
add
xor
xchg
ret
push
inc
mov
dec
push
outs
adc
aaa
add
mov
aam
lea
sbb
pop
cwde
repnz
mov
jae
push
mov
push
adc
fwait
sub
repnz
push
or
inc
cmp
cwde
les
xchg
mov
imul
adc
pop
xchg
repnz
add
dec
or
das
pop
sub
push
add
movs
inc
sahf
dec
pop
push
add
adc
mov
add
ficom
je
push
push
xchg
int
pop
push
adc
inc
call
add
and
dec
popf
mov
or
add
mov
mov
push
in
ins
and
and
mov
inc
sahf
rcr
pop
adc
inc
add
jge
clc
dec
push
add
or
cmps
inc
inc
jo
lock
xchg
je
pop
imul
shl
scas
fldcw
test
dec
inc
xor
inc
or
popa
adc
xchg
xchg
pop
xor
xchg
sbb
hlt
addr16
mov
xchg
mov
xchg
imul
jmp
mov
mov
add
out
xor
out
add
leave
or
push
adc
inc
pop
imul
leave
retf
retf
inc
ins
pusha
imul
in
in
arpl
imul
push
add
lods
jno
push
and
lods
enter
xchg
adc
stos
inc
ins
shl
push
inc
ins
lods
push
add
pop
add
sub
and
or
bound
pushf
dec
dec
add
jb
movhps
inc
and
adc
sub
mov
xor
add
popf
cli
push
outs
sahf
and
fadd
ret
cmp
xor
(bad)
jmp
and
rol
push
lods
jl
mov
in
inc
add
mov
test
adc
outs
push
push
inc
pop
cmps
add
test
in
dec
and
push
jmp
loopne
sub
push
and
jne
push
repnz
ss
push
mov
push
repnz
jmp
cmp
dec
test
push
mov
imul
mov
out
jno
cmps
in
pop
adc
imul
enter
xor
das
(bad)
jb
imul
dec
jb
rcr
leave
push
or
cmp
jno
jb
pop
jl
inc
imul
jns
dec
pop
jl
sub
jb
cmp
push
loope
and
xchg
je
mov
cmp
pop
das
movs
stc
pop
and
inc
pusha
jo
ins
push
add
adc
jns
add
(bad)
je
inc
adc
addr16
add
dec
jo
ins
dec
push
aad
push
xchg
add
add
inc
rcr
ins
jns
push
jo
add
pop
mov
sar
loop
adc
pusha
inc
jo
icebp
fwait
int
jecxz
jne
test
fs
jne
jl
and
test
dec
add
add
mov
dec
lds
cmp
inc
jbe
jno
pop
inc
cmp
push
gs
or
sub
dec
ins
pop
enter
je
jbe
ins
and
inc
shl
pop
pop
nop
push
mov
stc
fsub
dec
inc
inc
or
ja
adc
aas
add
or
adc
push
js
xchg
js
test
in
js
js
js
sub
je
loope
jns
in
sbb
push
mov
add
int
add
sbb
sub
aaa
and
das
(bad)
jp
jns
jns
stos
xchg
inc
movs
ins
fdivr
add
or
and
ins
nop
js
in
sbb
jp
ins
push
and
jp
ja
sbb
adc
jp
pushf
int3
push
and
mov
fistp
pushf
sbb
and
cmp
cmovb
shl
jns
inc
repnz
add
outs
mov
lea
cmp
pushf
xchg
push
add
jl
add
cmp
jns
adc
cmp
mov
mov
inc
ja
push
jne
nop
jl
adc
lds
cmp
arpl
in
mov
jbe
jns
mov
outs
mov
push
das
es
push
jle
jns
sbb
push
leave
sub
mov
jl
jle
outs
lds
cmp
push
shl
pop
pop
and
mov
push
and
pusha
outs
movs
jg
inc
ss
adc
sub
mov
outs
mov
enter
pop
adc
push
add
outs
rol
jns
sbb
add
pop
mov
ret
dec
pop
adc
and
or
loopne
das
addr16
or
mov
adc
dec
ins
cmp
mov
push
in
or
mov
ret
sub
xor
nop
xchg
inc
sub
jns
adc
test
inc
jecxz
jmp
ficom
mov
xor
movs
jns
jbe
cmp
gs
mov
sbb
inc
cmps
fist
add
cmp
cmp
sbb
test
and
sub
and
outs
cpuid
in
xchg
(bad)
cld
xchg
xchg
test
add
push
ret
in
mov
cmps
(bad)
add
addr16
mov
or
es
xchg
cmps
fs
push
xor
and
outs
xchg
cmp
add
xchg
or
pusha
add
adc
add
dec
jae
test
or
push
mov
adc
es
nop
mov
add
push
add
add
push
ins
cmp
mov
jge
inc
inc
pop
add
repz
hlt
mov
xchg
push
imul
not
add
mov
aas
pop
aas
pop
xchg
or
pop
pop
xor
xchg
test
ret
or
mov
mov
adc
add
cwde
fcom
add
enter
inc
push
mov
dec
test
push
test
sbb
xor
jmp
lods
cmp
push
loopne
xchg
xchg
add
adc
jp
pop
push
mov
and
jb
stc
add
in
or
rol
daa
mov
lods
xchg
push
pop
pop
aas
cmps
pop
push
aas
add
rol
sbb
mov
cmp
ins
lods
push
push
dec
mov
lods
cmps
dec
and
or
leave
and
add
shr
retf
sub
xchg
(bad)
test
aas
or
repnz
and
adc
add
out
dec
and
inc
and
push
imul
jl
cmps
jl
pop
push
enter
in
mov
(bad)
mov
and
or
push
sub
jb
jl
or
and
scas
pop
std
pop
xor
nop
jl
or
jl
test
lea
pop
push
and
mov
pop
lds
bound
xchg
aam
sub
pushf
nop
xchg
mov
jno
dec
repnz
xchg
mov
mov
pop
ins
cld
cmp
mov
loopne
push
inc
adc
stos
add
out
push
test
aad
shr
shr
js
adc
jp
add
adc
xchg
push
sub
mov
adc
fld
rcr
lahf
enter
mov
(bad)
mov
cmp
pusha
push
sub
test
xor
xchg
adc
dec
sbb
add
cs
xchg
jo
jns
shr
xor
pop
nop
xchg
cmp
enter
ret
and
cmp
sub
mov
sbb
inc
pop
xchg
cmps
xchg
pop
jo
out
loope
cmp
inc
leave
mov
pop
xchg
clc
xchg
push
xchg
mov
xchg
enter
pop
pop
xchg
xchg
ret
xchg
adc
ja
xchg
mov
test
mov
xchg
push
xchg
std
push
xor
add
pushf
xchg
jg
outs
scas
cmp
jmp
leave
aas
or
out
fcom
pusha
jns
cmp
cmp
cmp
pushf
dec
jecxz
mov
pop
mov
jmp
pop
cmps
lods
jns
inc
repnz
xchg
movs
xchg
pop
mov
jae
cdq
sbb
sub
sub
mov
push
fcom
push
or
dec
test
push
add
sar
nop
inc
push
add
dec
into
hlt
repnz
xchg
xchg
xchg
sti
cmp
cli
enter
sbb
and
mov
add
test
aam
or
fild
loope
mov
mov
stos
pop
xchg
mov
cli
add
adc
mov
pop
adc
mov
xor
dec
push
jo
xor
stos
push
inc
jnp
cmp
imul
pop
cwde
cwde
outs
pop
mov
cwde
jmp
jns
cdq
shr
cdq
jns
jns
inc
xor
mov
cmp
test
cdq
imul
cdq
xor
add
jns
cwde
cwde
xor
jns
adc
push
add
xor
sub
inc
ja
call
and
fwait
push
inc
pop
jle
aas
fwait
rcl
cmp
bound
das
scas
bound
push
test
inc
and
jo
jnp
hlt
fwait
cmp
jns
jl
add
sub
xchg
pop
jae
enter
iret
cmc
jg
fwait
push
aaa
cld
pop
popa
mov
sahf
fs
push
and
jg
popf
cdq
pop
add
jnp
xor
aad
xchg
popf
int
inc
cli
popf
pop
adc
add
jb
sub
nop
jnp
in
test
sahf
mov
and
push
mov
fistp
loopne
mov
loop
test
in
data16
mov
jg
div
jb
mov
sub
mov
dec
enter
in
jl
xor
pusha
add
add
loope
xchg
pop
jae
xor
jmp
scas
mov
cmp
jno
mov
mul
in
pushf
jecxz
mov
sub
shl
jg
test
add
jbe
fs
je
je
clc
mov
mov
clc
mov
add
inc
push
pop
nop
and
nop
pop
aam
sub
cmp
cmp
jne
cld
and
cmp
dec
movs
scas
outs
movs
sbb
mov
movs
dec
mov
cmp
add
sahf
ja
scas
test
mov
adc
dec
or
pop
cmps
and
cmps
clc
mov
push
jns
je
xchg
xchg
inc
xor
jge
cmps
inc
ins
add
push
lea
xchg
mov
or
cmp
scas
pop
cmps
adc
popa
repnz
in
cmps
mov
shr
dec
pop
mov
sbb
cmp
push
and
dec
ret
shl
add
cmps
test
adc
pop
xor
xor
shl
lea
jae
shl
out
stos
les
leave
xchg
jbe
cmps
xor
dec
ds
jbe
aaa
es
(bad)
int
cld
inc
xchg
inc
adc
bound
xchg
test
into
pop
xor
and
inc
js
pop
inc
cs
jns
cmps
or
test
pop
add
inc
sub
pop
adc
lock
jbe
add
stos
in
pop
nop
mov
mov
ss
cmps
bound
xchg
adc
push
mov
adc
shr
loopne
repnz
in
test
stos
and
jb
xchg
push
push
loop
cmp
test
loopne
aad
add
sub
and
sub
mov
aam
jmp
jge
stos
shr
cmp
pusha
cmp
in
(bad)
fsubr
fs
lods
test
lods
test
or
sub
stos
sub
nop
xor
jne
xlat
int
push
imul
and
add
lock
(bad)
inc
mov
inc
and
lods
ficom
sub
inc
imul
inc
push
inc
adc
sub
jecxz
cmp
daa
int
jmp
pushf
stc
sar
es
das
(bad)
leave
aas
or
push
add
adc
pop
scas
push
scas
inc
adc
enter
inc
cmp
cmp
jmp
scas
inc
push
add
mov
scas
or
icebp
ja
div
cmp
xchg
into
call
das
push
mov
je
fisubr
movs
and
jg
pusha
add
ja
stos
js
push
repnz
clc
stos
js
in
fsubr
seto
div
xchg
sahf
aad
jne
mov
mov
in
in
cmp
jb
repnz
sbb
mov
popf
in
pushf
mov
dec
inc
sahf
pushf
call
dec
fimul
mov
mov
test
or
dec
mov
in
mov
cwde
jg
mov
adc
repnz
inc
and
scas
in
movs
adc
aam
mov
rcr
push
lods
mov
lahf
nop
mov
adc
sub
in
lods
fwait
inc
sbb
or
xor
and
push
test
imul
or
mov
push
aas
mov
mov
sub
mov
push
xchg
sbb
mov
dec
xchg
popf
add
das
mov
ins
cmps
retf
pop
arpl
mov
pop
ss
dec
imul
imul
xchg
push
mov
nop
mov
jge
adc
sub
or
cmp
dec
loope
imul
mov
pusha
cmp
dec
pop
nop
mov
mov
dec
push
mov
push
sar
push
sbb
pop
push
mov
stos
shl
sub
mov
add
pop
sbb
pop
js
sub
ds
mov
jle
add
scas
xchg
pop
enter
lods
mov
scas
sub
daa
mov
mov
shl
dec
mov
shr
sub
jns
mov
adc
jnp
mov
sub
test
daa
in
mov
mov
push
mov
rol
repnz
mov
jns
or
sti
mov
sub
in
xor
and
mov
pop
lods
add
inc
test
mov
and
push
mov
mul
rcr
ror
aam
lods
movs
sub
test
je
cmp
add
mov
xlat
jb
cmp
rcl
mov
fist
dec
ins
comiss
xor
mov
cmp
sar
daa
sar
mov
push
add
mov
rol
cmp
and
shl
add
popa
add
das
scas
sbb
jb
push
pop
cmp
ss
shl
cmp
enter
loop
cmp
push
dec
das
aas
(bad)
dec
ret
sub
lods
xchg
add
das
scas
(bad)
xchg
mov
nop
push
repnz
mov
cs
sahf
(bad)
adc
leave
in
repnz
vmwrite
leave
mov
xor
in
xchg
jecxz
(bad)
dec
sbb
jb
into
push
(bad)
pop
cmp
cmp
and
pushf
mov
jae
mov
aas
cmc
ds
pinsrw
retf
retf
(bad)
(bad)
test
retf
sub
sub
jbe
test
retf
and
or
mov
xchg
retf
or
xor
mov
jns
mov
shr
or
mov
inc
mov
xchg
fwait
mov
ja
stos
add
pop
dec
pop
and
adc
sbb
imul
retf
dec
push
mov
retf
sbb
inc
xor
mov
mov
pop
xor
xor
test
mov
repnz
les
push
xor
dec
xor
mov
inc
mov
retf
add
push
dec
push
aam
hlt
test
pop
sbb
add
sbb
or
aam
stos
push
pop
or
pop
retf
(bad)
adc
retf
push
test
sbb
movs
test
push
dec
repz
push
aas
add
push
pop
in
sbb
enter
int3
int3
int3
test
int3
sub
push
add
cld
fmul
int3
addr16
mov
(bad)
shl
cmc
mov
int3
sbb
adc
add
sub
test
mov
int
mov
int
xchg
pushf
mov
dec
push
(bad)
stc
mov
das
in
pop
sub
sub
mov
dec
add
or
fcomp
pop
and
push
mov
ficom
test
inc
out
push
inc
push
test
sbb
dec
mov
sub
add
iret
sbb
test
aaa
loope
pop
jo
sbb
sbb
dec
inc
add
jns
mov
adc
ror
sub
pusha
ja
test
aam
add
rcl
jg
xor
sbb
push
add
jb
mov
push
rcr
add
imul
mov
cmp
popa
bound
jns
mov
push
stos
or
in
add
cmp
mov
pop
out
loopne
dec
out
push
jl
mov
jl
shl
test
fistp
sub
add
pushf
nop
xchg
push
mov
into
clc
into
mov
enter
clc
into
pop
iret
dec
outs
xchg
pop
push
aam
cmpxchg
aam
jbe
push
mov
aad
rsqrtps
repnz
mov
push
(bad)
and
jb
outs
mov
cmp
sbb
out
aaa
fcomp
movs
fmul
inc
sahf
adc
dec
jae
mov
aas
pop
fimul
popf
(bad)
in
inc
mov
(bad)
fidiv
fisttp
xor
mov
mov
or
and
adc
dec
dec
js
clc
into
cmp
sub
sub
fistp
or
add
jns
add
sub
inc
test
mov
mov
ds
pop
js
or
shl
sbb
into
dec
push
mov
mov
setb
test
add
pop
and
or
mov
inc
and
fild
retf
mov
fstp
test
inc
mov
fild
mov
ror
mov
push
repnz
(bad)
fstp
push
adc
sbb
mov
add
mov
in
call
js
adc
pop
and
dec
in
mov
xchg
test
and
mov
movs
jmp
push
dec
adc
fdiv
fadd
pop
inc
in
push
add
mov
test
pop
iret
fsubr
mov
pop
mov
add
je
or
jne
mov
mov
in
jo
arpl
addr16
frstor
cmp
fnsave
pop
aaa
adc
xlat
pop
xor
sub
sbb
cmp
and
sub
fst
and
or
mov
xchg
or
fild
cmp
cmp
xchg
dec
or
adc
outs
sub
inc
retf
jb
test
rcl
es
xchg
test
imul
dec
adc
xchg
add
add
ja
dec
cmp
ss
push
arpl
push
jmp
or
iret
pop
js
idiv
xchg
dec
repz
and
shr
xor
jg
es
jne
retf
ret
xchg
xor
dec
adc
xlat
pusha
imul
jp
dec
jnp
pop
mov
outs
mov
pop
xor
daa
mov
xchg
mov
and
mov
push
outs
sub
dec
sbb
xlat
aaa
fmul
imul
and
stos
outs
neg
neg
mov
add
bound
and
fmul
ja
jb
fs
idiv
push
imul
fcom
fbstp
fcom
arpl
jns
outs
pusha
js
jge
pushw
das
cmps
gs
adc
arpl
addr16
jns
cmp
(bad)
loop
mov
push
add
rcl
xchg
jb
fiadd
push
(bad)
out
jbe
cmp
imul
jg
and
int
inc
cwde
inc
push
mov
add
xor
cld
mov
push
ins
fsubr
and
mov
mov
jl
pop
sbb
test
imul
xor
repz
rcl
loope
ins
adc
cmps
add
pop
dec
fst
xor
je
lock
fcomp
daa
add
or
sub
aam
add
jecxz
add
add
sbb
add
cmc
push
sbb
adc
xor
sub
xchg
out
adc
push
rol
or
cmp
push
cs
xchg
adc
adc
clc
lock
inc
jae
in
cld
lock
jge
sbb
in
ficomp
in
and
jnp
sub
scas
xor
shl
test
push
(bad)
sbb
jnp
ds
ins
adc
and
xchg
fdiv
adc
ins
and
and
ret
movs
add
jecxz
sub
fwait
jo
bound
or
push
movs
add
gs
dec
hlt
clc
clc
cld
pop
cs
add
clc
cld
in
push
or
adc
dec
push
repnz
xchg
mov
adc
aaa
or
cmp
sbb
mov
or
mov
mov
push
mov
xchg
pop
and
mov
dec
enter
inc
or
or
call
adc
or
inc
jns
fsubr
and
inc
sahf
add
sbb
test
mov
mov
sbb
enter
jb
rol
fsub
pop
sub
and
retf
and
or
xchg
test
sub
cmps
pop
(bad)
adc
and
pop
outs
ret
in
push
sbb
inc
mov
mov
sbb
add
or
pop
shl
pop
inc
or
or
test
inc
enter
add
add
dec
int3
or
pop
mov
add
inc
jae
and
(bad)
mov
push
sbb
xchg
sub
push
xor
cld
inc
mov
push
ja
mov
inc
enter
retf
mov
push
add
shr
push
or
or
adc
and
inc
dec
add
sub
push
jmp
test
pusha
lock
push
jl
xor
push
push
pop
in
add
adc
sbb
out
pushf
xor
retf
fcom
call
cmp
fist
lods
rol
int
pushf
jle
pop
call
add
rol
dec
mov
jge
and
jbe
cmp
sub
or
mov
sbb
jnp
scas
scas
sbb
jo
push
psubb
inc
sbb
call
adc
stos
scas
or
into
push
xchg
dec
mov
mov
enter
ror
mov
lds
dec
push
add
fs
add
fistp
ret
inc
sbb
cmp
enter
pop
rol
xor
pop
pop
jle
adc
out
sub
nop
push
pop
hlt
movs
add
sbb
fcom
mov
hlt
mov
ins
mov
dec
nop
addr16
or
mov
jecxz
pop
mov
stos
and
or
add
cmp
xor
adc
mov
inc
mov
adc
sbb
adc
add
fild
jp
rcr
lock
loop
dec
jmp
ret
mov
or
adc
adc
xor
push
dec
pop
enter
pop
adc
cmps
mov
movs
popa
repnz
aam
push
mov
repnz
fadd
and
(bad)
ret
sbb
stos
cmp
add
sbb
inc
and
leave
add
ror
dec
push
push
dec
(bad)
cmp
push
dec
add
dec
leave
inc
add
sub
test
loop
arpl
aad
fisttp
cmps
dec
sub
pushf
xchg
into
wrmsr
xor
cld
in
add
mov
ret
pop
movs
mov
not
cmp
test
and
push
cmps
clc
stos
push
inc
and
mov
nop
or
stc
mov
push
cmp
mov
mov
pop
lock
sbb
je
dec
or
or
inc
or
inc
in
(bad)
and
push
xor
retf
call
xchg
movs
mov
push
cmp
adc
dec
sbb
jns
jmp
adc
xchg
inc
imul
or
cmp
call
mov
shl
cmp
xor
mov
mov
sub
(bad)
lock
push
jmp
add
clc
mov
and
in
loopne
fsubr
rcr
into
mov
mov
add
add
and
int3
and
out
push
pop
inc
sub
enter
xchg
jnp
push
add
sub
sub
sub
jg
xor
fnstenv
xor
je
mov
inc
adc
js
sbb
retf
mov
loopne
sub
movs
test
test
xor
add
fdivrp
adc
xchg
movs
out
sub
dec
lock
cmp
mov
xchg
ror
pusha
in
mov
(bad)
call
cmp
loope
add
ss
push
retf
stos
(bad)
stc
pop
cmp
xor
sub
or
jecxz
jg
pop
mov
push
mov
shl
inc
loopne
push
cmp
pop
in
ret
add
sub
jae
fadd
fwait
sub
xchg
inc
pop
in
xlat
mov
or
daa
ss
mov
clc
or
pop
sbb
loopne
out
xchg
mov
and
inc
test
aas
and
and
jp
cmc
push
es
push
or
and
shl
jmp
adc
(bad)
retf
hlt
imul
and
xchg
push
or
add
(bad)
mov
mov
mov
lea
lods
and
mov
or
dec
mov
call
scas
inc
fsub
sbb
sub
es
rol
lock
or
sub
rol
enter
inc
loop
stos
or
adc
mov
daa
sub
movs
mov
add
xor
sbb
loope
enter
mov
jne
es
xchg
cmp
fwait
nop
adc
cmp
jae
aam
test
cwde
xor
arpl
mov
inc
scas
mov
mov
sbb
add
js
shr
rcl
inc
mov
push
inc
cmp
push
mov
adc
cld
push
push
lock
mov
add
and
inc
inc
inc
ins
enter
hlt
test
mov
arpl
outs
and
xor
jnp
jb
xchg
sub
mov
loopne
xor
jge
ret
xchg
mov
adc
addr16
rol
out
push
popf
xor
aaa
aam
(bad)
jmp
cmp
vpsrld
in
mov
fild
jl
jo
scas
ret
jmp
mov
pushf
jb
add
ret
add
push
or
neg
push
leave
push
enter
xchg
sub
call
adc
push
push
jle
cmp
ja
mov
push
fucom
out
cmp
jmp
clc
sahf
out
sahf
pop
or
jns
out
sub
cmp
sahf
out
dec
push
pop
popa
sahf
out
sahf
ins
jae
jg
mov
push
add
mov
rol
cmp
lock
or
test
sbb
inc
or
ja
mov
ret
test
lods
rcl
cli
xchg
sbb
fidiv
loopne
cmp
pop
out
jg
adc
out
sbb
push
pop
jg
repz
mov
sub
iret
repz
dec
push
pop
data16
repz
mov
hlt
idiv
out
cld
ss
js
cld
daa
iret
repz
into
fsub
sahf
cmps
stc
cmp
or
xor
out
call
cmp
repz
jb
mov
out
dec
cmp
out
sahf
and
repz
addr16
dec
outs
push
xchg
popf
cmps
mov
repnz
out
adc
push
sbb
daa
xor
pop
cmp
out
adc
push
push
jecxz
iret
repz
push
mov
add
jle
add
nop
pop
sbb
add
ins
sub
and
add
repz
arpl
movs
adc
mov
push
adc
sbb
or
inc
mov
inc
adc
inc
xchg
xchg
scas
jl
add
push
inc
add
or
dec
xchg
add
jb
ret
mul
and
mov
push
add
push
leave
push
add
cwde
cmp
or
sub
in
stos
packuswb
inc
or
and
in
loopne
inc
sbb
sbb
or
pop
or
push
jb
inc
or
enter
push
popa
cld
add
add
leave
push
shl
enter
inc
popf
adc
sbb
in
jmp
sbb
test
scas
xchg
call
mov
jbe
add
adc
cdq
push
add
adc
add
jmp
xchg
test
movs
and
mov
hlt
clc
mov
in
push
cmp
and
sub
rcl
ror
sbb
clc
hlt
cmp
push
jno
and
jbe
sbb
ret
dec
push
fnstsw
push
sbb
jmp
sub
shl
mov
add
mov
adc
mov
inc
adc
sbb
jb
adc
sub
pop
mov
mov
inc
add
sbb
xor
xchg
sub
or
add
pop
xor
mov
or
sti
ins
ins
out
sahf
out
jge
cdq
cmps
mov
out
sahf
ret
rcr
in
mov
sbb
sbb
(bad)
test
add
jmp
sbb
or
or
xchg
retf
or
or
retf
cmp
sbb
or
cmp
sub
or
adc
or
sub
pop
xchg
push
or
ds
adc
push
ret
call
push
movs
mov
mov
adc
fwait
jbe
jb
add
add
sahf
idiv
cwde
add
push
cwde
cmps
jbe
out
mov
rcr
in
test
add
sbb
xor
dec
gs
xor
call
in
cld
cdq
in
repz
sti
pop
pop
ret
repnz
out
cmc
push
pop
pop
sub
add
ins
enter
jge
cdq
jb
repnz
cmps
mov
rol
jb
fucomip
stos
test
add
push
mov
add
pop
push
or
or
or
adc
xchg
retf
adc
push
imul
mov
push
stos
jmp
adc
test
and
and
adc
adc
cli
jge
inc
or
jb
push
adc
sbb
lods
jmp
movs
mov
imul
mov
lods
add
or
dec
mov
out
push
fsubr
clc
push
or
ds
repz
ds
or
xchg
cmp
pop
add
add
add
mov
ret
xor
or
push
jmp
mov
or
or
popa
add
xchg
add
or
adc
jmp
(bad)
sbb
pop
add
aad
push
or
ja
sahf
fld
cs
or
adc
jns
out
xor
push
popa
outs
cmp
out
mov
mov
cli
(bad)
jb
pop
inc
and
pop
imul
ret
jno
dec
mov
rol
(bad)
and
and
ret
xor
push
outs
sbb
iret
push
(bad)
sbb
sub
cmp
or
add
jp
rcl
add
popa
add
add
cmp
mov
or
jb
adc
xor
add
fcom
cmp
add
mov
jb
jmp
pop
enter
or
and
enter
daa
sub
add
sub
sub
imul
out
add
cdq
loopne
cmp
repz
call
(bad)
rol
add
pop
dec
xor
add
(bad)
push
or
sbb
out
or
test
das
add
pusha
or
nop
add
test
unpcklps
aaa
jno
xchg
or
lea
test
or
push
dec
(bad)
push
xlat
push
call
stc
pop
push
adc
jmp
addr16
jp
and
or
inc
pop
sub
in
push
adc
inc
sbb
xchg
push
in
and
jns
fstp
add
xchg
xor
add
or
jnp
jge
jo
push
repnz
push
push
push
sbb
mov
inc
push
bound
add
pop
cs
add
jo
add
dec
inc
sbb
adc
sbb
or
and
adc
mov
int
sbb
psubsb
out
jns
add
adc
sbb
sahf
cs
add
cmp
add
nop
or
push
fist
scas
cmovbe
jb
sub
pop
mov
xor
(bad)
in
dec
imul
enter
add
sbb
test
or
sbb
jl
out
in
fistp
jge
pop
mov
pop
sbb
cmp
adc
idiv
push
push
enter
jg
shl
cmp
sub
jns
or
add
enter
push
adc
sbb
and
(bad)
sbb
int3
imul
push
mov
push
stc
mov
daa
adc
ds
(bad)
iret
repz
out
std
or
sbb
adc
sbb
ins
add
push
pop
rol
push
es
push
or
add
unpckhps
mov
ret
sbb
or
aaa
jmp
es
or
push
cmp
enter
push
je
pop
jb
sub
mov
jno
dec
pop
das
imul
push
add
adc
add
xor
repz
repz
movups
adc
repz
adc
iret
repz
sbb
sbb
push
pop
sahf
push
test
and
and
and
es
nop
adc
sahf
out
cmp
ins
jle
jns
out
mov
sar
cmc
push
push
pop
sub
cmp
repz
pop
ins
jge
repz
repz
mov
shl
out
call
sub
lock
cmp
fs
adc
or
xchg
retf
or
mov
push
adc
cs
push
or
xchg
push
sbb
sbb
sbb
push
movs
jb
in
and
and
pop
push
mov
sub
adc
and
adc
dec
in
cmp
inc
push
pop
push
mov
sbb
sbb
and
sbb
in
retf
sbb
jne
xchg
popa
pop
bound
push
and
arpl
sbb
and
test
addr16
push
les
es
and
nop
or
mov
and
(bad)
and
fmul
sbb
push
or
sar
mov
or
or
pusha
or
xchg
sbb
(bad)
lods
jb
add
sub
loope
add
add
out
movzx
cs
sahf
cmp
pop
data16
fs
mov
scas
push
pop
and
or
fwait
xchg
int
adc
retf
add
repnz
pop
inc
sbb
jns
cmp
repz
leave
repz
fcomip
dec
mov
sub
sbb
mov
sbb
sub
ins
and
dec
in
and
add
or
or
xchg
push
cs
and
or
sub
in
adc
daa
iret
imul
pop
pop
dec
daa
add
pushf
sbb
xor
(bad)
cmp
adc
aam
adc
push
icebp
(bad)
adc
adc
push
or
arpl
or
mov
sbb
or
mov
xor
and
jnp
into
sbb
(bad)
mov
adc
(bad)
cmp
xchg
jb
in
sbb
and
xor
and
add
and
sub
xor
cmp
push
adc
adc
fist
mov
rcl
rcr
xor
add
sbb
call
inc
nop
out
sahf
push
arpl
sahf
out
movs
mov
into
fadd
out
jmp
test
add
sub
xchg
retf
push
pop
pop
or
or
test
or
or
xchg
push
cs
or
cmp
data16
cmp
iret
leave
adc
leave
jae
pushf
adc
adc
pop
and
iret
adc
adc
inc
aas
sub
xchg
add
jb
xchg
je
add
out
inc
repz
mov
pusha
mov
shl
out
ds
out
cld
or
sbb
ins
nop
inc
lds
scas
adc
and
and
or
or
push
sbb
or
and
or
sub
ins
pop
sahf
dec
pop
push
add
and
cmp
rcr
rcr
imul
or
push
sbb
add
or
add
or
or
push
enter
xor
scas
mov
sbb
pop
sub
jae
cmp
add
cmp
and
pop
push
sti
and
mov
int3
push
dec
mov
push
mov
xor
and
mov
loope
or
cmp
inc
dec
pop
cmp
jecxz
fs
inc
and
fiadd
pop
imul
jns
fst
data16
inc
dec
xchg
scas
lods
sahf
mov
cmps
rol
fisub
movs
addr16
fadd
lods
or
sub
mov
(bad)
stos
ins
mov
mov
inc
jecxz
ret
mov
lea
adc
leave
xchg
stos
xor
xchg
push
inc
fsub
jne
ret
pop
mov
or
sbb
xor
push
sub
outs
repnz
dec
cmp
mov
mov
add
pop
rcl
outs
das
fimul
aaa
bound
and
and
mov
sub
rcl
push
dec
sub
popf
mov
inc
and
mov
add
dec
mov
and
stc
sar
ja
add
aas
push
ins
and
inc
jg
ins
gs
and
add
fmul
jns
mov
fwait
nop
out
and
inc
sub
add
pop
or
cmp
pop
and
push
add
cmp
mov
push
mov
adc
or
nop
push
cmps
mov
sbb
mov
or
push
and
imul
add
jns
mov
xor
push
inc
mov
add
(bad)
call
sbb
fcomp
or
aaa
stc
or
(bad)
dec
push
pop
jo
push
cmp
pop
or
mov
push
jo
cmp
je
push
test
adc
dec
sahf
xchg
add
aam
push
or
daa
in
xor
xchg
ins
inc
xor
add
pop
pop
or
pop
cmps
pop
arpl
cmp
scas
xor
and
xor
mov
push
mov
sti
push
pushf
(bad)
push
sub
das
inc
sub
sbb
cmp
mov
lock
bound
xchg
xchg
int3
nop
das
hlt
xchg
pmulhuw
and
hlt
and
xchg
push
mov
push
cmp
push
or
test
rol
sbb
in
ss
divps
repnz
sbb
std
xor
jge
pushf
pushf
mov
das
dec
jle
dec
inc
sahf
pushf
ror
xor
jns
fmul
mov
xor
bsf
retf
cld
pop
sub
push
push
sbb
loop
push
in
mov
repnz
mov
push
pop
xchg
dec
add
adc
or
rcl
pop
jno
aad
loopne
pop
lock
test
scas
mov
push
and
inc
jg
in
add
pop
xchg
push
movs
inc
sahf
in
xor
daa
push
rol
mov
pop
mov
push
xchg
cmp
adc
mov
pop
fwait
mov
pop
pop
jns
adc
inc
mov
push
repnz
mov
push
or
pusha
inc
aas
mov
and
push
dec
inc
in
xchg
(bad)
mov
push
mov
push
scas
or
mov
push
jo
pop
and
sub
add
pop
mov
or
add
nop
push
mov
push
adc
inc
jge
adc
sbb
add
sub
xchg
dec
aaa
pop
or
pop
mov
push
repnz
pop
mov
mov
sbb
dec
add
xchg
xor
mov
sub
pop
sbb
pop
or
or
adc
es
pop
in
add
out
inc
push
xchg
pop
dec
pushf
and
lahf
inc
or
add
(bad)
push
add
fmul
and
mov
mov
mov
and
aam
out
out
push
ret
adc
test
gs
movs
sub
and
mov
ins
mov
mov
ffreep
lods
or
sub
xchg
xchg
sbb
add
and
cdq
nop
jbe
dec
or
pop
adc
sbb
dec
jp
pop
xchg
sbb
mov
add
adc
or
ret
inc
inc
pop
call
aad
mov
sub
enter
mov
outs
xchg
mov
stc
in
sar
mov
push
sbb
jne
mov
js
mov
or
and
cmps
loopne
push
stc
sar
ficom
lea
out
nop
jge
inc
jne
sbb
add
mov
mov
dec
(bad)
mov
jno
jb
jae
fst
rcr
frstor
xchg
pop
push
fsubr
ss
dec
leave
sbb
std
sbb
aaa
push
pushf
sub
xor
ror
aaa
xchg
ss
push
pop
sub
ins
push
cmp
sub
sar
adc
push
lock
add
lock
or
ret
in
enter
sbb
adc
mov
in
xor
iret
dec
pop
and
xchg
retf
in
in
int3
loope
fs
int3
and
mov
mov
pop
jno
lds
or
ins
ret
mov
xchg
pop
adc
inc
lea
addr16
push
sub
push
ins
or
das
vpshad
test
cmp
adc
jb
ins
xor
cdq
in
xor
lock
inc
add
add
mov
sub
sub
iret
imul
push
pop
add
jmp
dec
mov
jmp
mov
xchg
dec
pop
or
pop
cld
mov
push
xchg
test
inc
inc
and
xchg
lea
xor
mov
aam
mov
popa
icebp
fwait
jmp
or
and
pop
loopne
jmp
pop
jmp
and
or
mov
in
xchg
cwde
fs
or
mov
jl
sbb
and
sub
ss
ins
jmp
jns
das
add
sbb
pop
ins
push
add
or
push
mov
jmp
pop
mov
add
adc
sbb
sbb
movs
or
jb
cdq
and
add
test
jmp
pop
adc
push
add
call
loopne
add
adc
push
(bad)
jecxz
push
or
xchg
dec
sbb
mov
cli
sbb
push
pusha
out
xchg
nop
adc
ds
clc
cmp
pushf
or
and
and
xor
lds
lea
jns
xor
test
dec
jmp
adc
add
mul
jge
mov
sbb
icebp
popa
repnz
jmp
cwde
xchg
ss
xlat
push
hlt
mov
nop
arpl
adc
mov
jne
xor
dec
jle
inc
inc
arpl
outs
and
clc
dec
dec
mov
retf
(bad)
mov
jae
add
pop
lods
outs
push
xor
adc
retf
add
adc
mov
or
xor
push
fwait
lods
pop
rol
mov
arpl
adc
pop
scas
pusha
rcl
push
sbb
and
cdq
fiadd
sub
adc
outs
add
lea
or
and
jge
mov
popa
push
pusha
xor
adc
arpl
sub
mov
mov
adc
lds
dec
xor
in
push
or
dec
sar
push
aam
mov
push
rcl
or
das
add
dec
ss
push
test
push
clc
mov
adc
stc
and
lock
adc
push
sub
mov
add
mov
dec
mov
mov
sub
adc
js
pushf
mov
add
or
sbb
sbb
das
add
and
adc
xchg
and
aam
call
xor
ret
jnp
add
out
inc
push
or
dec
clc
xchg
dec
(bad)
jmp
mov
fst
dec
mov
ret
xor
jne
lock
mov
(bad)
inc
mov
fidiv
mov
sub
cdq
push
adc
xor
push
addr16
sub
inc
mov
dec
or
add
dec
push
add
cmps
add
and
or
in
loopne
dec
and
sbb
lods
pop
xchg
bound
and
ds
retf
cmp
mov
cmps
fidivr
cmps
popa
or
push
sti
xchg
and
lock
sbb
in
loopne
ins
shl
cmp
test
inc
jl
jl
push
mov
add
lock
push
mov
sub
push
loop
sbb
or
jmp
aad
cmp
adc
or
sbb
or
mov
sub
ficomp
mov
ja
dec
inc
int
imul
(bad)
or
cmp
dec
mov
pusha
aaa
pop
xchg
cmc
xchg
dec
cmp
cmp
xor
daa
push
iret
rol
mov
sbb
add
push
sbb
jmp
cdq
or
leave
add
push
aas
cdq
jbe
xor
inc
or
in
inc
inc
mov
pop
adc
in
mov
inc
dec
add
mov
inc
repz
imul
push
inc
push
cmp
(bad)
push
sbb
ds
adc
dec
add
adc
mov
enter
dec
adc
dec
push
call
nop
push
add
nop
daa
enter
sbb
sub
in
cwde
jl
cld
inc
inc
sbb
test
test
inc
jmp
pop
xchg
test
daa
jge
pusha
bound
hlt
or
cmp
push
push
outs
pushf
or
jmp
not
jo
jne
inc
enter
add
add
inc
push
imul
inc
pop
sbb
adc
es
jb
or
push
inc
mov
mov
cmp
sub
inc
xchg
aaa
mov
jnp
sub
retf
push
inc
inc
pop
sysenter
or
add
mov
and
mov
mov
dec
pop
out
sahf
addr16
dec
dec
push
fld
push
pushf
pop
pop
and
jne
adc
mov
sub
push
mov
cmp
mov
or
or
jmp
or
adc
ret
repz
or
test
push
lods
push
jae
(bad)
adc
add
in
in
jbe
push
add
cwde
js
push
lahf
xor
bound
out
mov
rcl
scas
lods
dec
(bad)
jl
iret
je
fild
sbb
sbb
dec
adc
jno
and
sbb
sahf
and
popa
mov
push
bound
sbb
and
jnp
jecxz
jmp
popf
jno
jno
stos
sub
xchg
cli
out
imul
fidivr
and
adc
daa
sbb
cmp
adc
adc
test
push
cmp
cmp
jecxz
iret
inc
out
outs
push
push
aam
xchg
je
push
shl
fs
sbb
sub
xchg
mov
or
jbe
xlat
sub
test
and
movs
sbb
push
clc
dec
pop
invd
jne
or
ret
ins
jg
sub
dec
nop
jbe
ret
lea
or
add
jb
sub
or
cmp
add
add
mov
cmp
das
and
pop
adc
xor
lods
rcl
dec
pop
(bad)
jmp
les
ss
jo
ror
mov
sub
jo
pop
push
add
sub
js
add
sbb
leave
adc
or
xor
daa
mov
or
or
and
push
cmp
dec
lds
sldt
adc
in
pushf
adc
push
push
jns
daa
iret
add
adc
sbb
leave
jae
sbb
sbb
or
es
xchg
xchg
dec
inc
adc
and
sahf
daa
and
add
inc
inc
in
push
inc
dec
in
pop
or
xchg
icebp
loopne
daa
xor
push
xor
lods
mov
(bad)
mov
leave
xchg
sub
or
dec
jnp
or
lock
push
dec
push
adc
repz
cmp
sub
push
call
jl
test
lods
leave
push
xchg
cmp
idiv
test
pushf
or
jne
popa
add
xor
(bad)
aas
test
or
repz
cmc
dec
xor
dec
loope
lock
out
ins
sub
aad
adc
out
mov
jns
out
push
pop
push
sbb
out
adc
faddp
lds
add
ret
add
mov
es
adc
adc
call
sub
pop
or
lods
mov
inc
push
inc
add
inc
loope
aaa
jae
add
ret
add
inc
adc
xchg
gs
push
jae
rcl
inc
in
ss
xor
or
pusha
loop
adc
xor
mov
mov
or
mov
clc
arpl
and
ins
outs
imul
pop
xlat
xor
adc
xchg
push
cmp
clc
mov
pcmpeqb
add
sbb
jb
adc
mov
jae
or
add
adc
arpl
ret
sub
or
mov
dec
push
push
push
rol
xor
dec
cmp
mov
or
mov
daa
or
shl
outs
add
ja
xlat
jge
lds
push
cmp
mov
movs
and
xchg
ret
push
cmps
adc
adc
mov
mov
mov
popf
add
in
push
push
inc
push
mov
ja
mov
mov
xchg
daa
outs
test
pop
mov
mov
and
pop
test
push
test
sbb
mov
fs
or
mov
or
inc
push
pop
inc
fcomp
push
imul
jne
xor
mov
and
ja
add
or
or
enter
push
cmps
test
sbb
clc
sbb
movs
xor
inc
es
into
imul
xchg
adc
aam
xchg
or
or
sbb
pop
dec
add
gs
test
clc
pop
push
inc
in
push
push
xchg
adc
lea
ret
sti
dec
xchg
clc
mov
ret
or
arpl
mov
retf
adc
xchg
aad
push
dec
rol
fcmovnu
push
rcl
scas
and
mov
lock
mov
sub
push
rol
outs
sub
or
xchg
push
ror
mov
clc
mov
xchg
cdq
push
mov
icebp
mov
mov
adc
aaa
push
push
aaa
adc
in
movs
mov
nop
add
btc
nop
movs
push
mov
jne
jl
movs
jae
pop
add
add
shl
cmp
and
or
sbb
inc
xor
jae
popf
sub
(bad)
dec
pop
jne
ficomp
and
syscall
sbb
rcr
add
or
sub
push
inc
cs
lahf
xchg
cmp
adc
inc
dec
js
add
jbe
adc
fistp
ret
add
inc
lss
push
and
sub
ins
sbb
dec
or
stc
pop
mov
push
repnz
(bad)
adc
inc
rol
loope
iret
cmp
mov
xor
xchg
sbb
retf
pop
add
mov
or
jle
and
out
mov
adc
sbb
xor
pusha
mov
jge
push
aad
fisub
lea
or
outs
nop
adc
add
adc
neg
or
push
lods
add
pushf
xchg
out
addr16
sbb
(bad)
mov
pop
sahf
inc
(bad)
pop
xchg
adc
pop
loop
push
or
pop
inc
or
cwde
mov
push
add
stc
cmp
pop
dec
loopne
stc
pop
jo
pop
cmp
jo
out
aas
pop
push
push
fs
hlt
test
cmp
lahf
test
test
cmp
retf
push
mov
cmp
loop
daa
ficomp
dec
sar
or
xchg
push
test
pop
cmp
call
test
push
adc
sbb
jbe
pop
gs
adc
sub
inc
dec
loopne
jbe
fadd
and
xacquire
xor
mov
shl
xchg
mov
enter
jnp
fadd
rol
add
jmp
mov
loopne
mov
rol
mul
je
pop
mov
push
sub
pusha
xor
dec
push
es
pop
fsub
or
mov
fmul
popa
adc
xor
sbb
call
adc
and
or
int
fistp
pop
push
fmul
test
and
mov
xlat
mov
dec
push
push
imul
pop
push
fmul
pop
pushf
adc
call
cmp
jb
add
mov
sbb
cli
arpl
pop
push
and
aas
and
dec
mov
pop
ret
es
xchg
iret
pop
cmps
arpl
aas
mov
int3
xchg
inc
nop
cmps
sub
push
mov
push
push
imul
add
or
(bad)
mov
daa
push
loopne
xchg
dec
sub
mov
xlat
mov
inc
cmp
jne
push
xchg
fs
add
ror
jg
adc
fs
xor
pop
fchs
sahf
sbb
or
inc
inc
mov
xor
mov
inc
push
daa
push
inc
xor
or
or
dec
cmp
shl
ret
movs
pop
sti
xor
or
xchg
add
add
dec
test
xor
add
or
jo
inc
xor
pushf
push
adc
jns
mov
es
ret
mov
pop
and
push
adc
addr16
dec
rcr
adc
pop
push
or
mov
fbstp
pusha
push
push
mov
pop
or
and
dec
pop
sbb
sbb
cs
ret
cmp
pop
pop
add
add
in
sub
sbb
in
push
xor
sub
aam
std
jl
scas
or
jmp
push
xor
call
xor
ret
imul
fmul
fdivr
(bad)
sub
aas
mov
xchg
test
inc
dec
sbb
add
xchg
(bad)
pop
pop
(bad)
cli
mov
outs
push
or
ds
jg
push
test
sub
bound
cmc
mov
mov
clc
push
rol
dec
aad
xor
cwde
mov
add
es
ins
scas
jle
add
fld
mov
xchg
sub
sub
add
aaa
dec
jl
xchg
dec
cmp
sbb
and
mov
pop
adc
pop
leave
sbb
and
and
aaa
inc
cmc
and
mov
jns
fwait
push
bound
dec
add
cmp
test
movs
and
dec
shl
or
inc
or
es
sbb
loop
pop
or
stos
and
inc
push
cmp
adc
pop
pusha
push
jge
mov
dec
sbb
les
add
jmp
pop
cs
adc
scas
sub
enter
aam
mov
repz
or
stos
xor
adc
int
shr
pop
retf
ins
dec
cmp
test
inc
add
mov
lods
push
jno
(bad)
out
arpl
add
out
push
pusha
imul
add
out
push
test
push
sbb
pop
shl
and
out
in
mov
push
cmp
jb
xchg
fs
in
shl
lods
push
fs
adc
sbb
jb
out
test
pop
fs
push
test
and
shr
or
clc
or
rol
dec
cmp
jle
outs
or
popa
arpl
shr
xchg
pop
fisub
inc
rol
ror
adc
jo
ins
cmp
(bad)
and
ins
xchg
add
retf
sub
sbb
pop
lock
cmp
pop
push
cs
xchg
rcr
shl
sub
ficomp
ret
cld
xchg
jns
dec
xor
cmp
(bad)
and
jl
or
cmove
lahf
fdiv
cmp
(bad)
iret
add
inc
int3
xor
push
jnp
xchg
add
fsub
jns
push
pop
adc
lds
inc
test
fmul
dec
jmp
and
cwde
adc
or
adc
add
shr
xor
jl
jne
xchg
adc
jbe
dec
jp
dec
and
adc
es
push
dec
ret
adc
jmp
test
js
pop
or
xor
or
sbb
push
adc
xor
xchg
and
or
out
clc
mov
push
stos
mov
ror
pusha
jnp
jne
mov
adc
xchg
mov
in
dec
nop
or
aas
jne
in
or
imul
adc
pop
add
xor
lock
test
ret
push
arpl
and
mov
add
push
sub
xchg
stos
xchg
hlt
loope
je
inc
movs
hlt
jns
loop
dec
dec
xchg
pop
adc
jbe
je
xchg
xchg
mov
sbb
pushf
inc
jg
mov
sbb
leave
pop
dec
pushf
sub
inc
sub
mov
movs
pop
and
push
adc
je
test
iret
stos
push
push
repnz
cmp
into
mov
rol
push
xor
popa
jl
aas
mov
adc
lds
call
mov
cmc
dec
(bad)
add
(bad)
mov
dec
adc
cmp
xlat
popa
es
fbld
(bad)
xchg
sub
(bad)
and
loope
inc
adc
pop
sbb
rol
dec
out
adc
xchg
and
into
js
mov
cld
stos
sub
mov
out
pusha
push
lods
loopne
mov
push
out
add
aas
sub
jl
shl
pop
ins
sub
test
ins
test
in
imul
jo
xor
sbb
pushf
in
imul
cmc
lock
(bad)
call
adc
loop
and
inc
xor
das
stc
cmp
mov
mov
jb
sbb
pop
xor
imul
in
lea
(bad)
imul
test
inc
inc
mov
jecxz
cmp
(bad)
int3
jb
ret
daa
cmp
push
pop
test
mov
mov
lea
repz
ja
dec
xor
paddq
and
and
mov
cmc
jp
pushf
push
add
out
sbb
dec
pop
xor
jno
ret
(bad)
cmp
(bad)
ja
xchg
add
cwde
sbb
in
ins
xor
nop
call
dec
outs
pop
cwde
and
pmulhuw
sub
outs
sub
jns
add
pop
test
jp
hlt
daa
push
jb
pop
or
pop
arpl
xchg
rcr
(bad)
pop
or
mov
add
mov
or
dec
sbb
add
inc
inc
inc
mov
mov
in
dec
xchg
xchg
jns
inc
dec
lock
or
jns
xor
lock
xchg
shl
or
fimul
pop
push
or
fistp
xchg
and
or
test
stc
sub
shr
jo
sbb
push
xor
sbb
jmp
xchg
mov
sub
lods
das
leave
call
xchg
retf
adc
and
adc
add
fistp
dec
in
jno
call
arpl
in
pop
mov
adc
sbb
xlat
out
pop
enter
bound
inc
push
nop
adc
rol
cmp
je
dec
or
adc
and
ins
add
leave
out
je
mov
aaa
outs
mov
and
retf
test
add
cmp
arpl
int
jb
and
je
or
push
nop
fist
daa
(bad)
in
loopne
xor
mov
loop
shl
int
aam
and
imul
and
arpl
add
and
nop
jae
adc
push
dec
clc
add
or
cmps
add
dec
and
callw
add
or
(bad)
xchg
sbb
dec
and
enter
push
pop
jne
rcl
pop
jns
sbb
jne
stos
sbb
nop
mov
enter
mov
xchg
nop
bound
enter
pop
sub
loop
adc
int3
ins
daa
(bad)
in
add
and
in
lea
push
dec
and
push
push
adc
inc
mov
xor
inc
cmp
popf
mov
ins
clc
inc
dec
aad
or
loop
mov
cmp
or
fadd
aam
cwde
outs
inc
jecxz
jb
out
lods
fstp
mov
mov
adc
push
jbe
lock
mov
sbb
ret
push
cmp
cdq
lock
js
add
lock
dec
pushf
js
push
sar
lods
fbld
mov
add
ins
and
lea
and
daa
scas
imul
inc
xchg
imul
dec
add
cmp
lods
and
stc
adc
sub
test
adc
xchg
cmp
pop
ret
push
add
adc
and
ins
jp
xchg
add
cmp
in
out
add
pusha
cs
js
pop
xchg
and
jnp
pushf
imul
or
and
scas
sub
in
cwde
call
imul
pop
hlt
push
or
or
pop
add
sbb
push
packssdw
push
jg
xchg
jmp
pushf
dec
ret
or
or
sub
push
ins
add
lahf
data16
in
lock
call
je
pop
or
ins
cmp
loop
in
enter
adc
fwait
add
mov
jmp
push
in
in
jbe
cmp
or
adc
ror
fwait
inc
leave
add
outs
jl
sbb
cmp
stos
outs
inc
outs
(bad)
sbb
ror
scas
(bad)
pop
pop
loope
mov
rol
adc
(bad)
ja
and
and
outs
dec
test
adc
mov
adc
push
pop
das
cmp
and
or
in
lahf
push
movs
sbb
or
jg
xchg
add
test
cmp
xchg
outs
dec
push
nop
mov
and
and
mov
adc
out
pop
ret
jg
adc
xchg
mov
mov
or
cmp
add
add
ds
inc
hlt
adc
jl
enter
jo
jg
mov
xchg
lock
adc
pop
ret
xchg
cs
jle
ret
mov
sub
inc
ret
xchg
jmp
xor
dec
inc
xchg
inc
sub
ret
mov
add
or
cs
ins
(bad)
jnp
xor
xchg
sub
or
out
adc
loopne
mov
fisub
int
adc
bound
jmp
cmps
push
test
nop
xchg
push
enter
fdiv
push
test
test
and
pop
je
xchg
mov
je
je
ja
rol
sbb
nop
sub
sbb
cmps
in
loopne
hlt
test
int3
mov
jns
cmp
adc
test
xchg
and
mov
je
jne
mov
xor
xchg
adc
cmp
xchg
adc
test
je
pushf
mov
test
js
jo
or
inc
into
xor
mov
bnd
cmp
fmul
adc
nop
pushf
in
jp
mov
push
leave
dec
push
jns
jns
jl
pop
leave
add
jp
nop
mov
jo
repnz
retf
dec
rcl
pop
jnp
leave
add
push
or
test
mov
inc
push
xchg
mov
dec
inc
enter
mov
mov
dec
repnz
scas
mov
outs
jp
pushf
fs
jl
jle
jp
scas
and
jle
jle
in
(bad)
or
popf
cmp
div
bound
sbb
imul
(bad)
sahf
in
mov
and
inc
jg
jg
push
and
fnstcw
es
or
mov
mov
data16
sbb
xchg
jg
sbb
sub
enter
mov
in
and
aas
xchg
retf
xchg
push
pusha
add
cmp
cmp
xchg
jg
adc
inc
pop
adc
dec
xlat
lea
jmp
dec
and
jp
sbb
sbb
stos
ins
xchg
cwde
dec
cmps
push
pop
xor
push
xor
xchg
aam
mov
je
sbb
or
test
cmp
shl
dec
adc
or
sub
ja
into
inc
add
adc
std
add
jne
shr
xchg
mov
fnsave
stc
mov
mov
into
add
push
hlt
loop
adc
push
add
xor
stos
nop
mov
mov
in
inc
test
nop
and
adc
into
test
stos
test
retf
shl
ret
adc
loope
mov
adc
sbb
inc
pop
xchg
xchg
fs
arpl
or
jg
adc
outs
xchg
push
pusha
mov
xor
push
rol
push
push
and
or
test
imul
lods
xchg
pushf
xchg
iret
daa
push
test
sub
adc
test
pop
cwde
(bad)
cmps
push
mov
push
cmps
mov
and
xchg
jle
loopne
push
sbb
dec
pop
ret
ja
leave
dec
push
xchg
mov
test
test
mov
in
cwde
in
leave
sub
ud1
xchg
sbb
in
xchg
pop
cwde
cmps
push
lods
pusha
daa
ja
cwde
sub
rol
and
or
in
cmp
sbb
add
aas
lods
push
and
leave
sub
je
mov
adc
mov
(bad)
in
inc
add
stos
nop
cmps
das
js
push
mov
push
enter
add
mov
mov
lods
(bad)
imul
xchg
and
nop
retf
ins
sbb
mov
add
or
daa
and
mov
inc
and
mov
(bad)
sahf
push
adc
or
into
jmp
sub
inc
pop
adc
push
das
lahf
xchg
jl
dec
mov
add
jns
in
add
(bad)
nop
push
repnz
mov
mov
jb
(bad)
mov
leave
add
and
pop
cmp
fcom
cmp
mov
add
pushf
sub
mov
dec
push
nop
pushf
jg
scas
and
adc
xchg
adc
push
add
add
fs
nop
cmp
call
pop
add
jns
loop
xchg
push
xchg
je
inc
sbb
repz
inc
cmp
aas
xchg
je
pop
leave
mov
add
jl
and
cmp
cld
xchg
xor
cmps
add
cmps
daa
and
scas
cmps
retf
adc
push
fdivr
out
pop
sub
dec
(bad)
nop
sub
jo
test
int
or
and
or
aad
fisttp
sub
inc
outs
jg
add
add
push
imul
add
stc
sbb
xor
add
add
imul
and
popa
cmp
and
nop
test
and
push
xor
mov
pop
arpl
add
daa
and
pop
add
leave
retf
sbb
cdq
ins
xchg
hlt
and
dec
cdq
cmp
xchg
and
(bad)
icebp
cdq
lock
cld
pushf
mov
mov
push
ins
adc
jb
dec
movs
pop
cmps
cdq
cld
and
in
call
pop
xchg
stos
dec
and
nop
sbb
mov
stos
or
and
push
jmp
lods
mov
or
cld
call
xlat
mov
cmp
lods
and
adc
ins
daa
test
ins
daa
shr
dec
inc
ds
jbe
push
add
clc
call
retf
dec
pop
push
scas
push
cmp
mov
sahf
xchg
lods
repnz
and
jl
bound
addr16
add
lahf
pop
xchg
dec
dec
jb
lahf
sbb
sub
inc
repnz
jns
inc
lahf
fsub
add
and
jns
cmp
fdivr
inc
dec
mov
and
push
mov
sub
adc
add
push
pop
mov
sub
push
test
mov
sub
inc
sub
je
lahf
test
ret
add
mov
sbb
cld
pop
leave
retf
hlt
sub
movs
add
sbb
and
xchg
inc
mov
adc
(bad)
aas
stc
sbb
or
jl
push
jo
and
cmp
cs
scas
and
movs
imul
add
cld
xchg
push
test
pusha
mov
gs
out
push
fild
in
lods
leave
mov
or
jae
xchg
dec
jl
push
add
add
out
and
push
(bad)
push
push
jno
pop
fistp
jle
xchg
loopne
ins
mov
push
pusha
lods
stos
add
sbb
sar
das
add
cmps
push
or
dec
sub
retf
or
sbb
and
addr16
push
icebp
loope
pusha
inc
or
add
mov
ficomp
sbb
sbb
or
hlt
sbb
lahf
pop
aad
mov
sub
cmps
scas
dec
push
and
daa
xor
jnp
dec
mov
aaa
lods
aas
aaa
movs
adc
clc
sbb
addr16
mov
or
ror
add
dec
xchg
mov
xor
push
adc
push
sub
add
add
addr16
push
fild
test
push
xchg
lods
dec
aas
jb
push
pop
mov
mov
pop
call
jmp
adc
popa
dec
pop
call
or
jns
xchg
outs
or
and
and
cmp
popa
bound
jns
call
mov
add
mov
dec
inc
call
ficomp
push
pop
xor
push
mov
sahf
mov
lods
sbb
sub
jbe
ret
xchg
push
cdq
movs
xchg
cmp
das
scas
mov
mov
nop
push
repnz
mov
cs
sub
bound
mov
shl
add
xchg
xchg
xchg
rol
leave
leave
enter
ret
in
in
fsub
ret
lods
jb
repnz
and
push
js
jns
jb
in
lds
cmp
cmp
jmp
mov
(bad)
mov
in
or
inc
lods
mov
and
pop
(bad)
cwde
xchg
adc
dec
dec
pop
(bad)
hlt
mov
jo
repnz
push
or
pop
(bad)
xor
xchg
adc
add
add
dec
add
loopne
dec
inc
movs
adc
dec
pop
(bad)
sub
add
push
dec
inc
dec
fwait
mov
dec
pop
or
dec
mov
in
(bad)
push
cwde
cwde
pop
add
push
imul
xchg
add
pop
(bad)
push
pop
(bad)
push
push
sub
adc
dec
lea
mov
mov
add
lods
add
mov
add
dec
or
fidiv
dec
push
and
mov
bound
add
xchg
mov
les
dec
dec
lahf
fs
cdq
cmp
xor
xchg
ficom
and
mov
dec
push
mov
lea
mov
mov
loope
es
jge
and
mov
cmps
pop
pop
add
adc
xor
pop
push
enter
add
xchg
xchg
cmp
push
sbb
mov
jl
push
xor
popf
in
inc
cmp
mov
add
add
prefetcht0
out
or
add
xchg
xchg
sbb
mov
push
int3
imul
inc
add
ja
push
aas
cmp
outs
dec
lahf
out
xor
and
repnz
retf
adc
or
pop
jb
push
push
lahf
mov
xor
les
inc
xchg
lahf
ins
popa
push
xor
add
pop
pop
pop
jo
ror
leave
retf
lahf
scas
fs
out
nop
retf
jo
cmp
adc
(bad)
test
mov
inc
(bad)
loopne
popf
pop
rcr
sahf
jbe
test
aam
dec
leave
mov
enter
mov
int
punpckhdq
pop
cmp
push
inc
std
(bad)
cmp
jns
into
dec
test
pushf
mov
fisubr
iret
jbe
dec
inc
sahf
pushf
loopne
shl
daa
and
icebp
push
sar
pop
xchg
daa
daa
daa
xchg
int3
push
shl
push
mov
aas
pop
pop
jle
shr
mov
mov
dec
pop
in
rcl
or
and
xor
enter
lods
pushf
xor
aam
cmp
dec
enter
popf
xor
jo
call
or
xchg
add
xor
sub
inc
test
sbb
dec
shl
mov
inc
mov
xchg
fwait
mov
cvtdq2ps
and
ror
aam
popf
adc
mov
adc
mov
xor
or
test
or
sub
mov
sub
push
repnz
imul
int
jns
mov
xor
shr
sub
push
jns
rol
int
js
or
int
xchg
mov
sahf
mov
push
repnz
push
int
lahf
nop
mov
inc
inc
mov
jae
fwait
adc
jae
adc
rol
cs
adc
pop
test
add
aam
aam
xor
jb
adc
fwait
push
cmp
test
aad
push
and
or
aaa
nop
adc
data16
pop
dec
adc
push
mov
push
add
cmp
pop
mov
mov
out
neg
add
das
stc
push
mov
clc
mov
jle
xlat
js
inc
(bad)
cmp
outs
xlat
aas
mov
adc
jns
cwde
xlat
js
dec
movs
ror
pop
inc
add
and
leave
pop
xor
mov
mov
cwde
push
jl
aas
call
or
dec
push
fisubr
jns
movs
inc
and
mov
mov
mov
jns
pushf
nop
aad
aad
aad
pop
enter
push
fidivr
inc
dec
outs
cmpxchg
fimul
fistp
push
(bad)
dec
inc
sahf
pushf
retf
paddusb
outs
and
dec
mov
xchg
daa
daa
daa
test
cmp
xchg
xchg
xchg
xchg
pop
and
je
mov
aas
sbb
setle
popf
mov
loopne
loopne
loope
adc
mov
mov
js
mov
js
adc
loope
pop
nop
xchg
cmp
mov
js
sub
sub
popf
pop
mov
aad
loopne
push
sar
js
or
shl
sbb
lea
mov
pusha
ror
add
mov
shl
imul
les
je
dec
xchg
xchg
inc
stos
lea
lea
push
repnz
stos
inc
mov
sbb
push
lea
push
loope
adc
jns
push
xor
lea
dec
lea
nop
mov
js
push
lea
mov
xor
mov
xlat
push
(bad)
lock
shl
hlt
adc
jp
retf
lds
loop
or
and
mov
push
pop
enter
rcr
(bad)
xchg
outs
ins
loop
ins
xor
pop
xchg
jno
add
loop
imul
daa
jno
push
dec
repz
push
push
inc
sub
and
adc
lods
and
mov
xadd
mov
in
pop
and
jl
push
movs
in
dec
pop
add
add
xchg
out
fstp
das
mov
add
shr
fcomip
cmp
push
xchg
or
dec
dec
leave
jo
je
mov
cwde
fmul
mov
ins
add
ja
mov
mov
push
out
cmp
out
fisub
scas
and
push
mov
cmps
push
cld
das
adc
out
movs
cmp
int3
ret
and
and
pop
pop
push
loop
cmps
in
cld
loop
jecxz
mov
test
mov
in
out
jmp
xchg
fwait
xlat
sbb
sub
jnp
(bad)
xor
xor
in
jle
pop
in
dec
jns
jb
jg
ror
out
cmp
cmp
inc
jp
lds
hlt
ss
cld
inc
out
bswap
out
xchg
xchg
xchg
(bad)
out
out
sub
imul
xchg
add
movs
leave
or
and
adc
dec
dec
mov
cld
loop
cmp
cmps
inc
dec
enter
cld
cmps
dec
mov
pop
cmp
pop
mov
das
mov
adc
and
push
mov
lds
mov
pop
pop
leave
or
mov
lock
cmps
mov
add
mov
lods
push
dec
cmps
lock
push
and
lahf
jle
mov
mov
dec
pop
mov
or
pop
pop
sub
and
nop
xchg
push
sub
lock
add
shl
and
add
dec
inc
cmps
test
lock
mov
dec
push
sub
pop
mov
mov
movs
mov
mov
add
sub
sub
out
pop
inc
or
mov
lea
push
icebp
je
xchg
icebp
and
push
add
test
and
and
mov
bound
xor
and
xor
and
xor
and
ins
repnz
pop
test
and
pop
rol
mov
push
aaa
das
dec
push
stos
icebp
sub
iret
mov
leave
imul
or
xchg
repz
pop
xor
mov
add
ins
add
pop
pop
pusha
and
sbb
ss
pop
daa
hlt
mov
pushf
movs
hlt
mov
movs
nop
retf
das
aas
call
test
mov
inc
dec
lods
jle
push
in
lods
sub
das
mov
leave
mov
repnz
(bad)
jb
cmp
dec
div
stos
mov
(bad)
in
inc
or
cmp
daa
daa
mov
or
xchg
xchg
xchg
xchg
sbb
jmp
leave
leave
enter
lods
hlt
in
fs
cli
ins
fwait
shl
in
sub
bnd
mov
aas
xor
pmulhw
inc
loop
cld
jg
cld
pop
std
mov
in
std
leave
or
and
mov
leave
mov
repnz
dec
enter
lods
mov
pop
repnz
mov
and
push
add
mov
mov
mov
fstp
mov
add
enter
mov
cmp
push
mov
dec
mov
or
inc
add
mov
fstp
jne
xchg
adc
add
fldcw
pop
adc
fnstenv
jns
mov
adc
std
jge
or
jns
or
add
push
sbb
in
lods
add
push
fldcw
mov
xchg
fadd
xor
sub
sbb
or
rol
(bad)
xchg
jno
sub
pop
or
sub
lock
hlt
push
stos
adc
add
push
xor
jge
je
adc
lea
jge
push
inc
fst
cs
shr
cmp
sub
(bad)
das
xlat
push
or
push
add
dec
push
call
xor
mov
shl
std
fsubp
xchg
mov
in
out
test
das
dec
push
(bad)
rcl
mov
loopne
push
mov
test
push
mov
add
jae
mov
xchg
cmp
in
push
loopne
push
xor
add
adc
dec
pop
aaa
call
lods
push
add
scas
nop
xchg
mov
mov
in
test
add
bound
push
pop
adc
lea
repnz
mov
mov
(bad)
in
dec
leave
mov
inc
nop
mov
add
paddsw
mov
ds
add
push
dec
add
or
pop
add
pushf
pop
stos
stc
cs
dec
dec
dec
inc
arpl
daa
daa
and
fiadd
xchg
xchg
xchg
xchg
or
jo
leave
enter
cmc
sub
jne
or
sar
push
sub
jns
pop
push
add
dec
shl
fs
in
inc
sahf
loopne
push
fmul
or
adc
rcr
test
call
jne
imul
test
dec
jbe
shr
mov
push
inc
movs
test
jns
or
add
mov
mov
adc
add
test
call
fdiv
xor
aas
mov
loop
imul
rol
push
xchg
or
test
fisubr
inc
jg
pop
je
push
lods
test
je
sbb
or
ins
lds
mov
shl
sbb
add
push
or
fwait
add
add
mov
xchg
jl
loopne
push
ficom
and
test
sbb
ror
lods
pop
shr
adc
add
add
xor
call
xchg
fild
push
and
pop
scas
ja
cmp
add
add
(bad)
iret
add
mov
cmps
mov
dec
sub
push
add
jns
popa
inc
div
cs
fst
fdivr
pusha
clc
push
jl
and
pop
test
shl
not
jle
inc
jo
bswap
idiv
push
nop
mov
xchg
sub
push
and
mov
sbb
xchg
enter
lods
adc
or
cmp
pop
enter
adc
sub
mov
mov
inc
test
cdq
and
rdpmc
adc
hlt
sub
outs
das
cmps
adc
lods
repz
lahf
xlat
mov
push
lea
jae
adc
invd
mov
and
test
cmp
sub
and
dec
mov
je
cmps
fidivr
enter
adc
jo
ds
and
or
or
and
cmp
or
and
add
cmp
in
cwde
push
mov
adc
fstp
rol
enter
sub
inc
mov
sub
xor
push
mov
jge
dec
lahf
ja
xchg
xchg
jno
pop
pushf
leave
data16
adc
into
sub
lods
adc
adc
nop
and
jne
cmps
adc
adc
jne
sbb
push
dec
pusha
clc
into
clc
into
jb
cmp
dec
scas
xchg
push
clc
into
adc
cmps
mov
or
add
pop
frstor
mov
xchg
mov
xchg
or
rdpmc
add
sub
and
and
imul
adc
push
xchg
adc
and
pop
(bad)
cwde
adc
jb
inc
leave
ss
push
push
xchg
or
push
push
pop
push
add
pop
mov
mov
mov
push
loopne
rcl
add
push
test
or
mov
or
sahf
leave
adc
push
push
adc
add
mov
and
mov
call
daa
cwde
ds
push
lea
pop
cwde
sbb
mov
xchg
sbb
jb
sbb
sbb
nop
and
scas
sbb
sbb
sbb
call
cdq
add
dec
mov
hlt
mov
hlt
mov
xchg
pop
pop
push
mov
sbb
push
daa
pop
pop
and
add
bound
xchg
sbb
sbb
xor
xchg
sbb
mov
sub
cmp
cmp
enter
xchg
xchg
ins
dec
sbb
sbb
mov
sbb
sbb
jns
sbb
xor
aam
aam
sub
and
enter
pusha
shr
inc
sar
sbb
sbb
mov
add
push
push
daa
push
test
xor
cmp
cmps
add
mov
dec
adc
repz
std
fstp
lahf
or
and
int
adc
pop
sbb
sub
jb
mov
cwde
pop
mov
and
pushf
out
pop
and
push
jmp
push
dec
loopne
aad
aad
add
nop
adc
push
push
jne
push
push
icebp
lods
and
jns
dec
adc
adc
inc
mov
pop
fwait
jp
cmps
adc
dec
push
mov
xor
mov
bound
inc
sub
hlt
jns
sub
xor
cmp
ss
cmp
cld
loop
and
in
xchg
xchg
or
and
and
jb
inc
and
shl
test
or
xchg
xchg
lods
inc
sub
mov
loop
jns
mov
cmp
push
leave
nop
and
loop
and
pop
xchg
xchg
jl
sbb
or
mov
xor
popf
aaa
xor
dec
xor
sbb
mov
adc
and
add
and
(bad)
mov
daa
sub
adc
sbb
retf
xchg
fldenv
dec
les
dec
xor
dec
in
jb
mov
sub
scas
sbb
pop
repnz
mov
and
mov
loop
jo
mov
xor
and
ror
(bad)
xor
das
jge
adc
xor
adc
in
jb
and
sub
add
lock
sub
sub
dec
loop
inc
mov
push
dec
shl
mov
nop
sbb
in
in
xchg
push
jb
enter
and
cmps
cld
sub
cmp
push
out
shr
add
sub
in
in
test
sbb
xlat
data16
xor
mov
daa
pop
push
outs
jbe
xchg
xor
in
inc
popa
cmps
outs
adc
dec
inc
daa
jge
add
mov
jnp
cld
push
sub
test
out
cmp
or
ja
add
out
cmp
add
les
add
dec
fstp
add
fild
mov
or
dec
ins
jcxz
pop
or
sub
or
push
and
std
inc
add
test
mov
push
imul
add
push
mov
sahf
push
pop
sbb
in
sub
or
cwde
add
lds
mov
fbld
adc
scas
outs
ja
dec
xor
test
imul
inc
bound
ja
sbb
iret
jae
call
or
adc
icebp
add
dec
jae
pop
jne
xor
and
xchg
(bad)
and
(bad)
dec
sub
mov
ss
push
ins
jb
push
add
or
sub
mov
out
sbb
dec
xor
inc
dec
sub
sbb
sub
and
inc
push
xor
fadd
jae
icebp
(bad)
cwde
inc
retf
popa
outs
es
xor
rcr
inc
and
xor
pop
lock
imul
xor
arpl
pusha
jno
rcl
dec
into
int
push
in
sbb
and
or
pop
xor
into
xchg
mov
rdmsr
xor
xor
enter
sahf
sbb
push
inc
cmp
mov
fnstenv
loope
inc
xchg
cmp
jbe
inc
push
inc
push
in
push
dec
adc
xchg
inc
xchg
cdq
cmp
cmp
add
xor
sub
das
and
inc
pusha
or
adc
adc
fsubr
inc
cmp
push
xor
lods
dec
popa
rcl
sub
inc
dec
add
popf
mov
daa
push
or
sub
ins
sub
lock
icebp
mov
pop
jnp
ss
sub
xor
fs
add
push
or
out
xchg
or
sub
repnz
ins
jns
out
bnd
call
in
not
xor
inc
mov
jb
xor
sysenter
cmp
mov
jb
xchg
xor
inc
sahf
pushf
cmc
dec
aaa
xchg
aaa
call
retf
daa
daa
mov
aaa
cmp
sub
pop
cmp
jnp
fs
leave
stos
cld
inc
cmp
jmp
cmp
sbb
cmp
mov
adc
mov
sbb
ds
or
out
repnz
sub
enter
mov
data16
movs
ret
add
dec
es
sbb
mov
mov
daa
pusha
loope
adc
mov
xchg
and
int
add
fs
xor
add
bound
dec
push
ins
nop
shr
dec
jle
add
in
cld
xchg
add
push
lds
sbb
add
fisubr
push
mov
jae
push
mov
bound
jae
xlat
stos
and
pop
add
jb
inc
addr16
xchg
inc
mov
push
cdq
push
stc
aaa
mov
or
dec
and
sbb
pusha
or
jmp
jns
ds
xchg
xor
and
fst
lea
add
aam
mov
mov
push
fisubr
xchg
add
push
cdq
or
inc
sbb
or
or
es
push
loopne
stos
ror
sub
push
or
sub
sbb
sbb
sub
add
adc
sub
adc
sbb
xchg
dec
test
or
push
jb
adc
out
xor
or
and
enter
jne
xor
pusha
cmc
les
test
add
sub
add
push
movs
xlat
pop
inc
add
jo
pop
aas
imul
inc
in
xor
pop
cmps
lahf
xor
aam
enter
inc
(bad)
imul
loope
adc
enter
jo
mov
add
mov
xchg
sub
and
xor
mov
or
jbe
(bad)
xchg
jmp
dec
ret
jg
adc
imul
rcl
inc
cwde
sub
push
or
jecxz
jae
sub
cmp
push
jbe
(bad)
mov
mov
lods
or
jge
add
mov
push
xchg
adc
add
clc
adc
enter
jp
inc
push
stos
mov
push
popf
ss
push
shr
inc
inc
fs
inc
pop
and
xlat
or
mov
or
mov
adc
sbb
add
ffreep
rol
or
aad
and
das
dec
add
or
or
pop
push
pop
mov
pop
sti
pop
inc
adc
call
mov
push
out
or
sbb
add
add
pop
sub
call
lods
sub
or
dec
nop
or
xor
aaa
movs
add
stc
push
push
sbb
sahf
adc
mov
pop
xlat
jmp
das
test
xchg
add
and
stc
je
ins
add
or
retf
xchg
xchg
pop
pushf
or
xchg
xchg
xchg
xchg
es
outs
xchg
adc
add
push
enter
mov
inc
mov
inc
inc
hlt
inc
ds
inc
dec
fisttp
(bad)
inc
xchg
pop
mov
cmp
inc
in
movs
mov
cmc
(bad)
call
(bad)
jmp
mov
test
das
or
nop
out
pop
(bad)
push
mov
or
dec
pop
add
es
or
mov
lea
inc
and
call
or
mov
xor
adc
jns
add
leave
cmps
(bad)
mov
icebp
lods
add
cmp
popf
push
stos
dec
mov
xchg
lea
shl
sub
dec
pop
mov
mov
lods
mov
mov
das
xor
call
retfw
xchg
aaa
inc
ins
inc
stos
push
sbb
fadd
and
push
cmp
or
test
jge
pusha
hlt
adc
nop
mov
rcl
mov
ret
sbb
cs
sbb
loop
test
bnd
shl
xor
and
push
nop
lea
in
ret
pcmpeqw
sbb
fld
xor
add
imul
sub
clc
push
ret
inc
or
scas
xchg
imul
xor
inc
sub
into
adc
xor
add
lods
std
ins
and
sar
cmp
cmps
test
mov
lods
and
dec
cmp
cmps
sub
cmp
cmp
add
or
push
cmp
loop
xchg
retf
cmp
add
stos
lods
cmp
jp
pop
adc
(bad)
jnp
mov
or
xchg
xchg
cmp
push
mov
push
mov
or
out
and
aas
(bad)
inc
mov
xor
sbb
and
(bad)
jo
sbb
push
fadd
mov
sub
bound
pop
push
cli
iret
mov
push
jo
add
iret
mov
sbb
pop
xor
mov
shr
jo
nop
pop
and
inc
push
pop
in
(bad)
mov
mov
das
xchg
push
mov
and
mov
repz
dec
mov
sub
inc
mov
jno
sub
push
inc
repz
push
push
sub
dec
and
loopne
test
push
dec
pusha
inc
cs
(bad)
push
mov
mov
or
leave
add
rol
fs
cmp
and
adc
pop
or
inc
fwait
or
push
imul
sbb
inc
cmp
cmps
lock
repnz
gs
mov
and
icebp
outs
xor
pushf
mov
rcl
inc
fld
pop
inc
and
fld
test
push
(bad)
mov
dec
arpl
test
push
nop
or
xchg
sub
or
sub
dec
pop
pop
adc
(bad)
jmp
push
lock
rol
in
inc
lds
jno
nop
lock
push
enter
inc
hlt
xor
jae
in
adc
aam
inc
sar
dec
leave
test
xor
push
inc
xchg
psrlw
ss
mov
jmp
pop
pop
fs
and
jmp
or
lock
push
pop
adc
in
and
jg
cmps
push
nop
mov
adc
test
xchg
jmp
ins
adc
sbb
inc
xchg
cmp
inc
push
inc
xor
loop
inc
ins
sar
jge
aam
dec
call
dec
or
scas
and
xor
xor
jae
jp
arpl
leave
sbb
and
cwde
(bad)
fld
or
das
add
sar
and
call
dec
cmp
dec
mov
xor
lds
sub
je
std
pop
mov
es
movs
push
sbb
call
mov
jne
inc
arpl
cmp
mov
jb
clc
fwait
push
mov
test
mov
or
sub
dec
enter
sbb
mov
or
sbb
sub
xchg
jb
inc
jbe
dec
or
mov
out
ret
cmp
sub
sbb
(bad)
scas
stos
inc
lds
mov
push
fs
push
xor
or
sbb
outs
dec
jo
adc
loop
mov
hlt
adc
cmp
pushf
inc
dec
xchg
pusha
cmp
dec
(bad)
cdq
inc
mov
push
loop
jl
hlt
call
and
iret
cwde
and
push
push
adc
ja
xor
dec
aaa
jno
push
xor
jl
stc
push
push
inc
outs
cmc
add
push
int
jmp
stos
add
xchg
or
or
pop
inc
push
in
gs
ret
ret
pop
js
inc
or
and
mov
lock
pusha
test
mov
pusha
and
adc
dec
add
push
psrlw
sbb
cs
fsub
pop
ss
pop
adc
sbb
pusha
add
mov
jg
retf
adc
cmp
je
sub
jmp
ins
cwde
dec
ror
outs
or
mov
sbb
jno
std
les
dec
jne
shl
add
add
out
push
mov
das
and
rol
push
test
or
sbb
or
xor
sbb
jmp
jp
jo
cs
gs
mov
sub
adc
test
cmp
pop
ret
mov
xchg
sub
jmp
xchg
fs
arpl
cmp
idiv
dec
add
cmp
add
cs
stos
scas
pusha
jne
aaa
cwde
scas
outs
mov
or
xor
inc
push
lock
aaa
xor
int3
subps
stc
shl
in
les
rol
inc
in
add
pop
mov
adc
pop
test
popf
cmps
pop
or
sub
mov
jno
inc
cmp
xchg
imul
and
mov
out
fadd
xlat
outs
hlt
mov
test
dec
dec
xor
and
repz
push
fidiv
stos
cmp
and
sbb
jae
pusha
mov
in
scas
push
sbb
in
cmp
or
sbb
or
cld
fisub
jne
pop
and
push
fisttp
retf
dec
mov
or
mov
hlt
add
xchg
mov
test
cmp
or
lock
push
lahf
dec
jo
push
mov
cli
(bad)
mov
cmc
pop
int
mov
fdivr
clc
and
test
lock
jmp
loopne
jmp
out
mov
lock
dec
adc
test
mov
inc
arpl
mov
push
cmp
shr
mov
pop
and
lahf
inc
jl
hlt
sub
sbb
sub
les
xchg
push
das
mov
(bad)
arpl
ret
push
(bad)
hlt
addr16
aas
in
movs
cmc
push
mov
push
or
xor
add
sbb
clc
mov
in
in
sahf
add
cmp
jecxz
jl
adc
movs
lods
adc
mov
fisttp
push
sbb
xchg
pop
push
mov
or
pop
jbe
add
xlat
rcr
ret
cmp
jge
or
or
jl
inc
add
(bad)
in
inc
mov
adc
aaa
aaa
(bad)
nop
jmp
pop
jle
lea
jg
dec
call
shl
inc
inc
imul
pop
sub
mov
and
(bad)
inc
inc
jmp
aam
or
aaa
or
(bad)
adc
mov
pop
inc
dec
inc
ss
inc
ss
(bad)
retf
push
dec
int
mov
ret
push
push
mov
dec
cli
and
(bad)
loop
adc
dec
add
push
mov
jns
shr
pop
xor
pop
and
dec
enter
push
and
add
add
sbb
leave
inc
xor
(bad)
dec
and
inc
cmp
xor
and
iret
push
mov
and
dec
int3
and
push
stos
inc
lock
clc
iret
add
add
leave
aam
fwait
outs
and
xchg
mov
inc
lods
dec
jmp
cmp
fmul
shl
jnp
arpl
and
pop
adc
dec
jl
imul
xchg
and
test
ins
sar
add
push
lods
pop
mov
add
jmp
fprem1
test
les
je
imul
adc
cmp
adc
add
pop
cmp
clc
aam
clc
movs
jb
dec
dec
hlt
mov
cwde
pop
mov
mov
mov
mov
dec
mov
pop
arpl
and
pop
jo
push
dec
xor
inc
call
adc
std
shr
cmp
mov
push
adc
xchg
bnd
dec
in
pop
push
and
or
xchg
sahf
fisubr
add
ja
or
(bad)
in
popa
imul
in
sahf
sbb
adc
mov
inc
movs
mov
pop
sub
mov
inc
call
cmps
dec
adc
jge
lock
loop
cmp
mov
daa
lods
adc
dec
mov
jg
pop
inc
mov
pop
and
fwait
xor
add
cmps
sbb
xchg
call
adc
call
jbe
push
xor
repnz
(bad)
push
movs
sahf
pusha
jb
add
xlat
popa
add
add
adc
jnp
test
adc
retf
hlt
lea
pop
push
mov
daa
push
xor
lock
cmp
xor
mov
pop
inc
cmp
fistp
(bad)
dec
pop
(bad)
les
outs
inc
sub
jo
loopne
adc
call
xor
mov
inc
dec
clc
mov
cmp
cmps
inc
add
loopne
mov
sub
rcr
mov
(bad)
adc
mov
clc
out
sbb
sub
adc
sub
out
mov
or
leave
sti
pop
test
jne
dec
cmp
pop
pop
xor
daa
xchg
out
or
xchg
add
inc
mov
dec
shl
js
or
lock
push
scas
pop
mov
and
and
sar
lock
push
add
inc
movs
imul
(bad)
xor
aas
pop
montmul
cmps
test
push
mov
dec
std
ficom
push
iret
pop
cwde
sbb
or
inc
pop
xchg
(bad)
imul
sbb
jg
sbb
mov
dec
ss
dec
xor
rol
jmp
adc
pop
and
inc
inc
pop
xlat
sbb
xor
ins
test
cmp
ja
cmp
sub
xor
fdiv
xchg
clc
nop
push
pop
fild
cmp
or
cmps
pusha
enter
dec
in
sbb
fisub
cmp
dec
into
scas
inc
adc
ins
cmp
mov
xchg
(bad)
outs
fucomi
push
mov
add
pop
out
pop
add
aam
rcr
iret
xchg
xchg
test
lea
cld
daa
or
js
push
push
jle
dec
test
or
push
sub
add
dec
pop
fnstcw
leave
add
in
je
fld
in
das
repnz
mov
dec
outs
jne
pop
mov
pop
in
outs
or
or
or
sbb
cmp
and
sti
sub
push
cdq
movs
and
or
rcr
div
or
popa
jb
xchg
push
je
sbb
mov
cmps
or
pop
loop
xchg
enter
into
xor
or
into
scas
ss
xchg
pop
inc
popf
sbb
outs
xchg
xchg
and
xchg
arpl
adc
or
fmul
and
inc
or
movups
(bad)
dec
cdq
rol
jo
xor
lock
jno
inc
add
popa
outs
and
and
mov
repz
jo
(bad)
arpl
dec
push
mov
ja
and
popa
daa
add
fdiv
repnz
je
ficom
cmp
adc
ja
and
arpl
and
inc
sbb
add
sub
mov
gs
adc
pop
and
mov
or
add
mov
add
sbb
sub
or
pop
add
gs
jns
mov
lods
data16
(bad)
pop
xchg
lds
cmp
pusha
or
nop
push
pop
dec
test
nop
xchg
push
sar
cld
push
imul
pushf
dec
out
fisub
push
hlt
and
jo
mov
outs
nop
aas
dec
xchg
lock
push
or
xor
push
jo
cmps
dec
leave
ret
gs
dec
jb
pop
add
mov
getsec
mov
out
pop
das
cmp
xor
sbb
add
xor
ja
ja
sahf
and
push
daa
arpl
or
mul
adc
dec
jg
addr16
into
push
inc
add
adc
jo
cmps
cmp
jmp
cmp
push
nop
(bad)
and
fdivr
xor
add
mov
pop
jmp
shl
inc
nop
fnstsw
adc
test
loopne
cmc
push
xchg
xor
in
jnp
push
jg
dec
push
adc
and
ds
xchg
ins
jnp
ja
xchg
mov
xchg
test
cdq
push
enter
cmp
enter
iret
test
popf
ret
push
movs
retf
push
leave
adc
mov
(bad)
retf
sbb
pop
and
cmp
dec
dec
mov
cmp
arpl
add
jae
or
and
inc
icebp
and
jae
jl
jae
inc
adc
inc
shl
arpl
inc
rcr
xor
or
and
and
and
jo
sbb
xchg
inc
sti
push
imul
fiadd
int3
cli
push
les
sbb
enter
pop
pop
xchg
dec
sbb
mov
push
mov
push
mov
fs
sub
call
mov
adc
and
loop
mov
outs
xor
lahf
pop
js
or
repnz
ss
add
movs
adc
aam
and
hlt
xor
mov
and
cwde
xor
nop
and
loop
inc
rcr
sbb
mov
mov
in
add
mov
test
daa
jno
es
test
mov
xor
sbb
es
sbb
sbb
ins
std
sub
jbe
std
mov
hlt
movaps
jbe
movs
int3
jae
test
in
add
push
outs
mul
ins
dec
outs
das
js
movs
bnd
pop
mov
jo
jmp
push
jae
lds
jno
inc
out
sahf
pushf
pushf
jne
iret
jno
clc
call
jb
xchg
loopne
push
and
into
mov
(bad)
std
fisttp
adc
mov
mov
cmps
jge
sub
push
push
div
in
or
cs
jb
push
inc
sub
dec
xchg
daa
pop
(bad)
fisubr
push
leave
push
pop
pop
or
fsub
pop
push
dec
pop
sbb
fwait
push
xchg
push
outs
add
xchg
xchg
retf
adc
and
inc
std
dec
ins
cmp
xchg
fs
mov
dec
ss
cmp
sbb
inc
sub
or
lds
lods
jno
add
out
cmp
cmp
dec
pop
pop
add
and
loopne
daa
or
out
or
mov
and
enter
push
test
inc
in
arpl
sahf
das
sub
jno
sub
sub
bound
adc
add
add
pushf
sbb
inc
adc
in
scas
pop
inc
adc
fs
test
adc
mov
adc
ror
xor
push
push
mov
je
or
popa
xor
jl
add
pop
ss
aad
rcr
push
je
pop
xor
add
dec
fist
pop
or
push
mov
add
push
add
push
cmp
sbb
add
call
add
cmp
mov
push
add
popa
cmp
sub
cmp
iret
rol
add
sub
retf
and
push
xlat
sbb
push
in
add
daa
in
movs
aas
dec
inc
fild
mov
pop
push
inc
int3
test
push
adc
popf
aas
mov
cmp
push
add
fninit
ds
iret
push
push
fs
ror
cmp
cmp
repz
mov
add
xchg
ins
pop
clc
and
sbb
jo
adc
cs
ds
sbb
cmp
inc
rcl
push
or
and
inc
jl
pop
ss
or
mov
push
push
rcr
mov
pavgb
gs
inc
movs
mov
out
xor
cmp
mov
push
sbb
int
ret
xor
adc
or
or
sbb
test
adc
pop
jecxz
(bad)
mov
and
or
adc
ins
ins
fld
sub
add
cmp
enter
adc
mov
addr16
push
mov
adc
or
repnz
pop
test
ins
call
jbe
xchg
pop
pop
jae
or
retf
xchg
loopne
ins
jb
mov
xchg
retf
xchg
fadd
and
xchg
mov
xchg
retf
xchg
cmc
sbb
xchg
xchg
xchg
xchg
test
xchg
retf
pcmpeqw
sbb
or
sbb
pop
adc
stc
cmp
adc
lods
call
fadd
aas
pop
enter
inc
enter
or
js
pop
mov
dec
mov
addps
or
outs
xchg
nop
push
not
ss
add
or
xor
push
cmp
mov
pop
add
int
or
push
push
js
inc
jns
push
shr
iret
fld
stc
and
xchg
push
test
push
mov
mov
clc
mov
adc
nop
(bad)
adc
or
repz
and
scas
in
dec
mov
xor
xchg
inc
mov
xor
(bad)
jnp
sbb
push
mov
dec
rcr
inc
lea
push
push
out
sub
popf
repnz
mov
jp
jno
jp
sbb
jnp
std
das
dec
jnp
jnp
push
pop
jmp
fst
add
mov
xchg
fmul
jecxz
push
fsubr
jecxz
daa
leave
test
xor
xchg
push
imul
jnp
mov
dec
inc
(bad)
xchg
and
movs
fidivr
pop
push
lods
and
xor
dec
adc
mov
or
or
inc
adc
mov
dec
int3
inc
or
mov
add
or
das
or
pop
xor
mov
enter
cld
fisttp
mov
nop
sub
shl
ss
rol
push
test
push
movups
ror
or
push
mov
xchg
in
push
lea
(bad)
fbld
imul
rcr
les
adc
cmp
sub
(bad)
and
mov
add
pop
jl
or
add
cmp
cs
lods
sub
mov
xchg
xor
jge
sbb
inc
ins
nop
inc
cmp
xor
xchg
retf
xchg
jl
dec
inc
rcl
pop
or
movs
sar
in
je
je
iret
rol
mov
in
jle
shr
mov
in
imul
adc
in
(bad)
inc
add
mov
inc
mov
std
ror
(bad)
cwde
aam
or
add
stos
mov
jle
(bad)
fist
sbb
mov
jg
inc
pop
jl
push
mov
js
out
sub
aas
pop
add
dec
js
(bad)
or
in
mov
clc
sbb
aaa
jg
push
lahf
push
daa
daa
daa
mov
adc
lahf
xor
pushf
mov
neg
cmp
stc
sbb
std
imul
ins
xchg
sub
ins
and
adc
popf
push
xchg
jb
and
and
and
lea
push
mov
xchg
ret
pop
cmp
fdiv
add
gs
add
std
mov
cmp
fs
dec
nop
inc
add
mov
test
lea
add
dec
xchg
mov
add
add
mov
xor
add
imul
sub
push
or
gs
add
adc
and
and
mov
neg
xchg
gs
add
mov
or
dec
(bad)
inc
loope
test
push
jo
fsub
dec
fmul
push
and
daa
dec
push
aas
xchg
or
in
push
or
popf
or
or
je
xor
adc
sbb
ins
and
mov
cmp
sub
ins
popa
sbb
cmps
int3
test
mov
and
push
sbb
fstp
lods
push
push
add
adc
jae
cmp
aaa
adc
xor
shl
es
aaa
inc
test
hlt
out
or
jns
hlt
ds
push
cs
add
lahf
xor
adc
fcomp
add
sub
xchg
mov
lock
shl
add
cmp
xchg
stc
aas
arpl
test
stc
sbb
test
push
arpl
sub
or
retf
jns
add
lock
jb
xor
(bad)
test
jae
ret
adc
push
cmp
add
sub
rcr
cmc
ja
movs
and
icebp
adc
dec
push
ins
cmp
inc
push
inc
add
jae
imul
pusha
inc
cmp
sar
int3
push
xor
test
xor
in
jne
xchg
push
mov
repnz
jno
mov
or
or
or
rol
or
call
inc
or
mov
lds
(bad)
stc
imul
add
xor
xor
sub
sbb
xor
xchg
push
fld
cdq
sub
movs
fsubr
dec
mov
jno
ja
loopne
xchg
add
mov
in
push
adc
mov
das
jne
inc
test
dec
loope
ins
out
lahf
adc
imul
or
add
inc
and
xor
(bad)
lahf
adc
sbb
lods
push
popf
aaa
repz
dec
xchg
call
ud0
out
ds
inc
mov
mov
jne
mov
shr
add
pop
mov
sar
adc
sbb
mov
in
daa
or
(bad)
sub
sar
idiv
dec
xor
or
clc
mov
sbb
pop
popf
lahf
adc
xchg
sbb
popf
out
xor
xchg
xchg
mov
fcmove
xor
add
inc
je
push
push
jecxz
mov
hlt
movs
or
xchg
fist
push
push
jmp
pop
pop
add
fadd
dec
xchg
or
(bad)
add
pop
test
sub
pop
adc
push
mov
test
aas
mov
or
add
pop
push
imul
jmp
leave
push
ror
xor
or
add
inc
and
inc
add
lods
ret
aaa
jg
mov
xchg
adc
fs
adc
adc
sub
test
ins
arpl
inc
sub
sub
and
mov
sbb
cmp
xchg
add
sub
clc
sbb
or
je
adc
jp
mov
fsubr
or
or
jl
push
inc
jge
shr
mov
or
mov
and
fwait
jns
mov
nop
cmps
push
sbb
xchg
rcl
jmp
adc
xchg
aas
and
push
add
jg
push
jmp
sub
mov
xchg
mov
ins
movs
sbb
loope
and
dec
or
xor
sbb
popa
and
lock
retf
clc
inc
mov
loope
aas
or
adc
mov
mov
jnp
sbb
and
daa
inc
movs
pop
fs
sub
test
std
push
dec
rcr
dec
imul
ja
push
retf
or
xchg
cmp
test
movs
inc
xchg
cmp
jg
pop
out
lods
mov
imul
jmp
into
pop
inc
js
sahf
movs
sub
mov
inc
xor
inc
out
shl
or
ret
ret
out
mov
daa
out
outs
adc
pop
ss
dec
cli
and
shr
push
das
inc
jmp
popa
xchg
dec
or
movs
xor
push
sub
pop
sub
xchg
push
mov
push
sti
sbb
sti
or
jmp
inc
(bad)
sti
push
add
pop
pop
inc
or
ror
test
pop
pop
nop
enter
bound
mov
push
add
add
(bad)
ret
xor
dec
movs
add
mov
inc
inc
pop
add
and
mov
sbb
add
mov
lock
xor
push
add
call
or
cmp
jg
or
sbb
xlat
rcr
callw
jno
sti
push
or
jae
pop
and
push
frstor
gs
fisttp
out
pop
(bad)
sub
jmp
fistp
pop
dec
fdivr
dec
imul
xor
jle
fsubr
mov
lahf
sub
jmp
test
push
lea
cmp
out
fsubr
jg
pop
xor
jmp
cmp
push
hlt
adc
fldcw
add
pop
rcr
mov
scas
sti
xchg
jle
cmp
fist
mov
add
push
fs
jbe
pop
ret
jbe
adc
(bad)
repnz
and
sub
add
adc
(bad)
frstor
test
pop
mov
or
popf
add
popa
cmps
movs
or
push
ins
pop
or
adc
xor
in
test
stos
cmovo
dec
lea
test
cmp
mov
push
jmp
stc
jns
out
ins
dec
inc
sub
adc
jno
and
loopne
sbb
and
loop
inc
mov
pop
ret
push
mov
adc
and
loope
dec
inc
xchg
neg
cmp
fs
mov
(bad)
pop
mov
nop
add
adc
inc
scas
pop
js
add
inc
or
test
cmp
adc
cmps
lods
mov
mov
dec
push
mov
aaa
cmp
add
aas
inc
cmp
push
cmp
sub
inc
or
leave
pop
mov
adc
leave
xchg
add
jg
mov
mov
push
mov
fwait
dec
cmp
push
call
pusha
out
xchg
fdiv
(bad)
pop
cs
add
inc
sub
aas
push
or
dec
in
movs
fldcw
mov
push
sbb
js
push
jmp
xor
inc
pop
(bad)
dec
loopne
dec
jg
cmp
push
jb
mov
or
mov
shl
lea
arpl
mov
jl
add
data16
movups
and
push
outs
and
(bad)
xor
mov
jne
or
out
cmp
jl
mov
push
cmp
cwde
push
jle
mov
test
adc
ds
data16
rol
jbe
push
daa
or
test
sar
push
xor
pusha
adc
je
cwde
mov
fs
mov
pushf
sub
jle
mov
retf
mov
mov
jns
(bad)
sub
movs
inc
jle
shl
into
mov
sub
les
sbb
ds
scas
lock
mov
or
cli
fadd
push
cmp
mov
or
int3
rol
loop
adc
or
je
mov
push
loope
mov
addr16
lods
shr
mov
mov
push
les
(bad)
cmp
push
dec
cdq
cld
std
add
jne
push
inc
xchg
adc
pop
dec
rcl
div
rep
inc
push
rcl
or
rol
push
xchg
enter
xchg
outs
test
in
adc
int3
test
sbb
movs
push
sub
or
popa
or
in
pop
xor
pop
test
mov
mov
loopne
sbb
enter
std
cmp
rcl
sub
outs
fiadd
pop
icebp
and
rol
or
push
in
jmp
pusha
or
push
aaa
repz
push
shr
xchg
push
fwait
add
dec
mov
aas
pop
sub
in
pop
dec
sti
cmp
or
hlt
test
mov
out
xlat
pop
je
push
(bad)
stc
pusha
and
sahf
jg
lds
adc
cmp
mov
pop
mov
lods
inc
or
popa
mov
cmc
gs
and
mov
repnz
push
ret
xchg
add
(bad)
jge
inc
loopne
or
(bad)
out
stc
cwde
add
or
xlat
push
test
ror
pop
popf
dec
and
xchg
mov
(bad)
mov
and
or
dec
inc
adc
je
mov
ds
jg
fcomp
mov
inc
and
cmc
aad
and
test
dec
mov
dec
mov
add
fnstenv
pop
and
and
push
neg
mov
fmul
test
xor
test
dec
push
inc
aam
fsubr
sub
scas
scas
and
sub
and
es
gs
cmp
je
daa
add
jne
sti
jle
ja
push
sbb
xor
pop
push
inc
xchg
fldcw
jmp
inc
xor
cmp
xchg
pushf
jl
jge
fld
(bad)
cmp
jae
mov
mov
xor
out
jbe
sbb
pusha
push
cmp
cmp
imul
outs
xor
aas
or
lods
test
js
xchg
hlt
adc
aas
pop
enter
ja
cwde
push
cmp
push
mov
add
aad
or
adc
dec
and
sbb
xchg
add
hlt
outs
iret
jle
das
daa
movs
sbb
es
cld
xor
mov
inc
add
adc
es
add
pop
jge
pop
call
add
cmps
out
and
adc
pop
adc
push
adc
ja
sti
retf
pushf
out
sbb
xor
push
push
or
sahf
call
add
test
call
jno
(bad)
cmp
das
fidiv
and
or
pop
loopne
lods
dec
mov
or
dec
inc
adc
clc
mov
xor
jne
(bad)
sbb
inc
lock
mov
icebp
or
push
std
pop
xor
mov
sub
clc
mov
xchg
popa
push
sbb
arpl
xor
add
adc
jmp
pop
shl
leave
adc
push
or
add
loopne
repnz
adc
or
push
xor
and
nop
xchg
mov
xor
sbb
and
mov
pop
sar
add
xchg
in
cld
xchg
xchg
call
inc
ss
add
pop
hlt
in
shl
or
sbb
sbb
imul
enter
jp
fimul
add
mov
enter
push
lahf
push
sub
lods
jno
clc
arpl
inc
enter
ret
(bad)
dec
sub
mov
push
popa
popa
jmp
push
pop
rol
push
xchg
adc
call
in
in
pop
mov
jo
add
lahf
inc
mov
pop
sbb
sub
jmp
sub
ret
stos
push
dec
xchg
adc
inc
movs
push
aas
or
sbb
and
inc
xchg
add
in
xor
mov
daa
add
and
jae
iret
adc
shr
mov
dec
or
push
ret
and
lea
lods
jge
add
ret
int
cmps
mov
push
(bad)
idiv
nop
int
js
mov
lea
xor
shr
adc
inc
sub
enter
jno
repz
jb
push
or
into
or
pop
aas
mov
nop
enter
dec
aam
add
lea
cmovne
aam
push
fs
popf
test
call
xor
sbb
dec
clc
in
aad
scas
(bad)
sub
int3
sub
add
xor
adc
jne
cli
jbe
js
stos
js
je
pop
aam
and
test
in
or
ret
inc
in
das
cmp
daa
inc
aam
sbb
call
inc
call
loopne
in
sub
icebp
push
sbb
lahf
or
sub
add
lods
gs
xor
jge
mov
mov
mov
xchg
nop
mov
inc
shl
sbb
mov
fcom
mov
stc
div
add
fmul
jmp
and
sub
ins
loopne
lods
fmul
shr
loopne
ins
xchg
cdq
fwait
xchg
cmps
(bad)
pop
cld
dec
rol
push
mov
xchg
push
mov
loopne
shl
sub
icebp
int3
xor
mov
mov
pop
retf
into
jle
fld
adc
sub
ins
pop
mov
mov
and
inc
xchg
test
xchg
sub
(bad)
sub
sbb
mov
push
mov
mov
imul
movs
int
int
mov
mov
pop
cs
mov
test
push
mov
pop
in
mov
jge
jecxz
daa
cmp
ss
and
in
jae
ds
and
sub
add
jg
sub
add
push
mov
add
push
mov
ins
out
inc
sbb
enter
cmp
add
mov
adc
add
mov
test
mov
jns
and
xchg
xor
jb
xor
inc
out
shl
fwait
mov
adc
(bad)
jmp
pop
popf
cmp
mov
es
int3
outs
push
aad
mov
add
aas
fsub
mov
cmp
and
call
daa
leave
call
data16
jno
aaa
js
xchg
andps
in
sbb
mov
outs
test
ret
push
ror
adc
mov
jmp
add
add
nop
xor
or
lock
adc
xor
push
and
or
sub
rcl
call
pop
pop
push
jo
daa
sub
push
push
push
jbe
or
aad
dec
or
ss
fidivr
mov
add
mov
(bad)
leave
test
fwait
iret
and
pop
ja
xor
and
add
rol
leave
dec
jae
jg
ror
add
cmp
sub
add
pop
mov
add
std
push
and
push
cwde
jl
pusha
jo
lea
outs
xchg
or
into
push
mov
push
adc
aam
lods
pop
jmp
lock
fidiv
outs
cmc
pusha
stc
pop
les
shl
cs
aaa
cld
hlt
imul
fsubr
ror
dec
cmc
clc
mov
push
out
mov
cmp
push
dec
das
mov
lds
sbb
pop
pop
dec
dec
std
test
jne
clc
sub
rcl
sub
call
add
push
mov
ficom
pop
or
sub
pop
gs
test
inc
jmp
in
mov
or
aad
mov
lea
pop
in
jmp
data16
cmp
je
ret
addr16
inc
and
xor
ds
adc
ficom
adc
iret
and
es
jge
push
jbe
inc
or
adc
daa
sbb
es
ror
sub
or
adc
stc
cmps
push
loopne
hlt
scas
shr
mov
das
outs
inc
and
push
mov
mov
data16
or
sti
sbb
jl
jl
sbb
push
add
or
call
test
add
mov
adc
push
sbb
pop
fisub
sub
call
enter
push
push
pusha
pop
pusha
inc
adc
in
lds
ins
movs
gs
loop
int3
outs
in
sbb
sbb
in
fild
add
add
sbb
inc
cmp
or
rcr
add
loop
jecxz
retf
and
paddsb
dec
dec
fwait
mov
xchg
clc
sbb
or
or
arpl
loope
loope
cmp
push
dec
inc
scas
jmp
push
jnp
loopne
aam
fdivr
add
lods
push
fnstenv
mov
mov
pop
clc
dec
aaa
or
loope
or
ret
nop
inc
mov
nop
adc
or
and
mov
adc
cmp
popf
in
retf
xor
pop
loopne
rcl
inc
loope
adc
mov
mov
xchg
mov
push
cmp
sahf
inc
(bad)
(bad)
sbb
cmp
jge
pop
mov
lds
daa
mov
fcmove
shr
pop
add
pop
mov
jne
or
in
iret
dec
ins
mov
in
pop
into
in
shl
cmp
neg
stc
mov
dec
out
add
mov
dec
pop
ins
xor
add
push
inc
sti
push
loopne
xor
leave
loopne
or
out
in
jb
or
pop
mov
cs
ds
pop
mov
adc
adc
sbb
sub
aad
lock
lea
adc
ja
scas
ror
push
add
ins
out
pop
les
shl
push
bound
inc
lock
inc
enter
sbb
add
ror
xchg
jne
inc
outs
leave
leave
jae
ret
or
ds
sbb
mov
sbb
ss
les
pop
pusha
push
(bad)
mov
les
mov
pop
dec
dec
and
inc
(bad)
push
adc
push
add
mov
ja
adc
ja
or
sub
push
test
push
sub
in
jbe
jno
sub
sbb
push
adc
adc
retf
pop
jo
jne
lods
and
xchg
push
xchg
mov
mov
popa
dec
leave
inc
scas
jo
sbb
stc
jae
add
in
mov
sub
xor
les
add
xlat
clc
dec
call
inc
mov
ret
add
mov
xor
cs
add
test
call
loopne
dec
loopne
cmp
and
dec
push
and
jb
repnz
dec
fwait
jmp
call
add
add
add
js
sbb
iret
push
jns
enter
clc
les
inc
inc
ret
daa
add
pusha
iret
cmp
mov
test
in
or
scas
add
adc
jns
inc
movs
inc
pop
pop
xchg
lock
mov
jmp
xor
lods
xchg
and
push
stc
bound
adc
jmp
push
dec
push
pop
lods
into
dec
ror
dec
stc
scas
and
and
cmp
iret
and
jle
add
add
mov
push
jmp
mov
cwde
jle
or
inc
jns
inc
rol
jle
sbb
pop
test
and
arpl
add
jo
and
cmp
xor
pop
movs
or
sbb
jecxz
mov
pop
pop
icebp
jmp
jns
lods
or
mov
repz
pushf
pop
das
dec
and
or
fistp
push
pop
jmp
aas
adc
or
call
or
xor
icebp
dec
sbb
push
push
rcl
cmp
dec
mov
popa
push
arpl
aaa
add
push
ret
mov
adc
cmps
movsx
rcl
(bad)
xor
call
and
push
call
sub
cmp
jo
xchg
fdivr
scas
scas
adc
dec
mov
add
inc
into
adc
in
mov
jne
adc
add
movs
dec
ret
xor
gs
test
in
or
movs
cmp
lock
xchg
cdq
cmp
jecxz
lock
xchg
push
xor
movs
verr
and
adc
cmp
or
fadd
and
pop
test
bound
lahf
loopne
push
ret
call
mov
add
loopne
in
pop
and
mov
out
xor
clc
inc
loopne
hlt
and
pop
(bad)
fldcw
dec
sbb
cmp
mov
ret
ins
mov
sbb
mov
ret
inc
mov
mov
inc
les
gs
adc
je
aaa
lods
jne
lea
fsubr
fcmovnu
(bad)
add
ins
add
xor
xchg
mov
dec
mov
ret
inc
sub
push
cmp
aam
or
arpl
sbb
lock
repnz
push
mov
pushf
out
ror
pop
sub
xchg
dec
sbb
daa
jo
xor
pop
mov
xchg
dec
aam
or
rcl
ret
clc
or
inc
daa
mov
(bad)
and
inc
or
mov
lock
add
mov
add
mov
shl
push
(bad)
adc
les
jb
or
fisttp
and
scas
and
add
push
or
adc
test
pop
or
aas
or
(bad)
mov
pop
mov
ins
ret
and
daa
adc
or
sub
inc
adc
adc
(bad)
xlat
xor
dec
das
pop
addr16
xchg
xchg
mov
jecxz
mov
aam
and
xor
jmp
mov
cmp
daa
jne
lods
(bad)
cmp
push
gs
pusha
or
stc
in
neg
push
sub
movs
push
xor
add
lock
xor
scas
test
sbb
or
rol
jle
mov
fucomi
(bad)
sbb
int3
xor
push
out
mov
jmp
adc
add
sub
out
jbe
(bad)
mov
inc
push
and
dec
leave
sahf
jl
add
ins
jno
or
rcl
inc
xor
rol
dec
mov
outs
movhps
pusha
ins
and
add
into
xchg
pop
xchg
mov
mov
aam
mov
dec
out
hlt
je
lods
mov
dec
dec
ret
dec
pop
(bad)
pop
dec
cmps
cmp
das
leave
and
dec
xor
or
push
in
das
icebp
cwde
mov
push
sub
push
xlat
loop
aas
xchg
or
cmp
ss
dec
add
cmp
fsubr
push
(bad)
cmp
inc
mov
mov
adc
sub
(bad)
and
int3
xchg
mov
push
xor
jecxz
aas
or
shr
cmp
inc
jnp
(bad)
scas
pusha
cmps
cmp
adc
clc
or
rcl
cmp
pop
push
inc
mov
(bad)
jmp
add
add
outs
dec
test
xor
inc
fs
call
dec
mov
mov
sbb
test
in
adc
dec
mov
dec
mov
push
mov
daa
inc
or
pusha
adc
cs
adc
and
or
or
or
mov
inc
inc
(bad)
movs
pop
inc
push
inc
inc
sbb
inc
arpl
dec
je
outs
(bad)
adc
out
push
mov
div
pop
inc
cmp
daa
add
push
shr
fstp
ret
pusha
js
add
dec
scas
mov
(bad)
in
push
sbb
leave
xor
iret
jmp
nop
adc
pop
in
pushf
es
(bad)
ds
and
add
pop
les
cmp
int
inc
retf
push
sti
push
pop
mov
fadd
fimul
pop
movs
(bad)
mov
test
cmps
jae
xchg
or
gs
mov
and
xor
sub
xchg
mov
inc
sub
inc
shr
inc
jbe
and
shl
inc
ret
xchg
data16
adc
mov
mov
in
xchg
retf
push
cmc
inc
push
xor
dec
aaa
cmp
popa
cmp
xor
add
jo
mov
inc
push
cmp
in
or
ins
repz
inc
es
dec
cmp
(bad)
cmp
sbb
push
pop
mov
xor
mov
fmulp
push
sbb
mov
nop
cmp
les
xor
inc
das
dec
dec
cmp
ss
push
arpl
pop
cmp
sbb
jmp
pop
enter
xchg
push
xchg
add
jp
dec
into
adc
lds
jne
pop
(bad)
loopne
les
mov
sub
mov
out
push
ja
leave
sbb
adc
fisubr
sbb
adc
js
push
cwde
dec
das
mov
mov
loope
cmp
aad
push
push
pop
shl
or
mov
jmp
loopne
ins
adc
add
pop
loope
mov
xchg
add
mov
dec
(bad)
push
fbld
cld
or
jnp
dec
movs
and
sbb
dec
dec
dec
or
push
nop
loope
xchg
ja
fwait
ss
push
xor
push
sub
jle
fdivr
adc
pop
loope
int3
out
js
jg
iret
push
add
je
sbb
pop
mov
mov
aaa
enter
cmp
or
std
cmp
add
es
mov
ret
imul
nop
pusha
mov
mov
inc
je
mov
inc
dec
push
sub
adc
and
out
jns
add
jge
add
mov
ds
call
adc
xor
adc
dec
(bad)
jne
and
lods
sub
add
jnp
xor
inc
jl
pop
pop
pop
mov
sub
adc
add
xchg
fxch
inc
je
js
repz
sub
xchg
fs
les
mov
or
pop
enter
adc
repnz
add
cwde
add
push
jp
fcom
xchg
jo
iret
pop
dec
cmp
adc
dec
in
mov
dec
cs
mov
xor
inc
inc
dec
cs
inc
or
scas
push
push
pop
and
pop
mov
push
pop
daa
xor
and
js
lahf
sbb
inc
xchg
add
and
inc
aaa
movs
or
pop
jmp
cmp
jmp
ret
push
cmp
jne
jmp
pop
xchg
adc
mov
daa
or
xchg
adc
and
vprotb
test
(bad)
sti
rol
cmp
shr
(bad)
push
or
jmp
jecxz
inc
test
inc
or
movs
enter
mov
test
ret
adc
inc
xor
add
pop
adc
sbb
pop
mov
jp
imul
sub
mov
add
xchg
rcl
movs
push
push
(bad)
lds
sub
loop
inc
cmp
push
mov
jo
imul
or
jb
loope
mov
adc
add
nop
and
adc
cdq
jno
and
dec
xor
in
data16
sub
add
mov
pop
loope
in
sbb
pop
std
shl
call
dec
outs
mov
pop
imul
adc
dec
loopne
aas
inc
mov
adc
jge
and
(bad)
ins
jge
or
daa
push
inc
add
ret
xor
loope
and
fsub
push
dec
mov
and
fs
ins
nop
add
mov
test
mov
ja
and
jge
xchg
add
call
outs
div
or
clc
push
loopne
xchg
and
push
push
cld
jne
xchg
call
dec
dec
nop
add
mov
dec
into
jno
and
enter
(bad)
pop
mov
pop
lods
cmp
mov
leave
xchg
into
test
das
mov
mov
popa
mov
jmp
fcmovb
fist
add
(bad)
retf
xchg
pushf
adc
push
mov
jbe
retf
hlt
aad
out
cmps
fcmovnbe
scas
push
xor
cdq
pop
and
cwde
nop
or
clc
outs
je
xor
sbb
sbb
dec
mov
xchg
lods
fnstenv
les
and
lahf
mov
xor
push
inc
shl
lea
ror
and
pop
dec
ret
popf
movs
cmp
aam
fs
sbb
or
xchg
pop
cmc
fisubr
mov
dec
in
imul
(bad)
out
int
dec
push
push
pop
push
xlat
pusha
add
mov
xchg
push
push
addr16
aad
add
mov
imul
out
jle
jp
aaa
xor
ror
or
add
daa
(bad)
xor
mov
adc
pop
dec
cli
xchg
(bad)
(bad)
fbstp
inc
jmp
dec
not
ret
shl
in
pusha
or
sar
dec
add
out
sahf
mov
mov
jmp
fdiv
rcr
pop
test
xor
(bad)
and
jmp
mov
popf
adc
loopne
xor
lods
pop
mov
sub
mov
or
(bad)
and
pop
fxtract
dec
pop
fsub
lahf
adc
xor
rol
add
sbb
push
dec
into
sti
leave
jl
mov
rol
lahf
(bad)
mov
xor
xchg
push
cwde
imul
pop
outs
or
stos
add
clc
pop
retf
lea
imul
sub
inc
movs
popa
push
push
pop
hlt
mov
call
leave
lods
test
sub
cmp
jns
clc
mov
out
scas
ja
js
pop
sub
fld
shl
dec
pop
or
imul
mov
fsub
fst
fiadd
xchg
enter
mov
aaa
or
or
enter
imul
ret
out
mov
xchg
aas
add
nop
and
mov
sub
in
inc
add
les
ret
cmps
hlt
sbb
or
aas
inc
sbb
push
cdq
sbb
int3
arpl
leave
lock
inc
jmp
(bad)
mov
ret
inc
arpl
rcl
pop
push
cmps
add
jmp
mov
jmp
add
pop
in
sub
xor
fsub
or
cmp
aaa
dec
and
dec
inc
jne
or
xor
cmp
inc
adc
in
addr16
jmp
jne
add
sub
push
or
pop
(bad)
adc
xchg
into
pop
mov
inc
sub
or
les
mov
sbb
xor
cmp
or
dec
shl
cdq
pop
je
dec
test
js
push
movs
mov
push
loope
cmc
dec
lock
or
pop
fcom
xlat
mov
dec
pop
add
ret
nop
sub
sub
addr16
test
dec
xchg
or
ins
jmp
enter
es
inc
adc
xchg
loopne
xor
ins
out
xchg
mov
adc
adc
jl
movs
call
mov
inc
sub
int
and
mov
pop
add
fs
adc
pop
hlt
pushf
in
xor
sbb
lock
inc
push
scas
push
test
cdq
rol
sar
fistp
ficom
sbb
cmp
mov
mov
push
xchg
pop
sub
inc
hlt
xchg
dec
shl
push
ss
mov
pop
xlat
push
inc
or
xor
out
push
and
sub
mov
mov
and
ds
enter
cli
pop
mov
jns
daa
popa
aaa
inc
jmp
sub
pop
inc
or
push
out
ins
sbb
stos
popa
mov
adc
ret
dec
sbb
ins
add
iret
xchg
addr16
dec
shl
adc
adc
sub
cmp
icebp
std
xor
mov
scas
sub
das
(bad)
push
imul
jecxz
inc
retf
add
mov
and
mov
pusha
xor
adc
dec
xchg
call
push
dec
xor
or
frstor
sbb
or
shl
push
sbb
aam
dec
rol
jae
ja
inc
sbb
aam
(bad)
xchg
add
mov
movs
mov
xchg
icebp
inc
push
mov
loope
push
push
(bad)
xlat
cmps
aam
mov
or
out
pushf
xor
(bad)
jno
inc
add
sbb
hlt
call
mov
mov
push
fcom
mov
fcom
cmp
mov
jecxz
cmp
ds
movs
jl
call
ja
ja
fisttp
loopne
aam
add
ret
clc
push
sub
xchg
neg
in
iret
pop
mov
and
stos
out
sub
or
pop
retf
sete
cmp
and
adc
xchg
dec
or
stos
sbb
gs
cmp
fcomp
popa
or
push
or
ret
xor
shl
dec
js
mov
sub
dec
cs
adc
dec
popa
es
stos
neg
adc
pop
lahf
cmp
bound
and
(bad)
test
inc
push
out
aad
push
jge
fwait
and
mov
sbb
setbe
int3
mov
rcr
mov
ds
div
cmp
rol
push
adc
daa
sub
and
and
outs
inc
les
and
cmp
js
test
jle
push
mov
xchg
imul
cs
pop
adc
push
je
rcl
cmp
inc
fisubr
pop
add
push
cmp
out
jmp
adc
ficomp
push
bound
inc
cli
daa
push
push
cli
jge
xlat
pop
aaa
mov
idiv
cld
fidiv
rcr
sbb
fidiv
in
cmp
verw
ret
cmp
add
pop
les
popa
sub
mov
es
jecxz
push
loopne
shl
inc
cmps
add
fstp
push
pop
sub
mov
adc
pop
rol
or
jecxz
add
dec
add
addr16
xor
movs
(bad)
fld
or
xchg
push
pop
shl
mov
lahf
pop
and
in
sub
adc
mov
sahf
mov
bound
enter
lods
dec
push
xchg
imul
je
mov
arpl
xor
inc
or
inc
data16
adc
outs
sbb
lds
je
push
(bad)
mov
bound
pop
lods
add
dec
and
and
inc
xor
scas
je
jae
fadd
or
shr
inc
jl
(bad)
inc
cwde
aam
mov
lods
aas
jle
mov
rcl
sub
in
adc
mov
sbb
aam
dec
xchg
jb
xor
add
xor
in
push
out
loop
pusha
cli
cli
sar
jne
cmps
xchg
or
push
inc
fld
xchg
pop
shl
xor
mov
sub
add
adc
sbb
loopne
imul
call
inc
xchg
(bad)
mov
pop
les
jne
inc
inc
push
mov
ss
(bad)
cmps
push
ror
loop
and
push
inc
sbb
popf
test
aam
fist
inc
pop
inc
push
mov
adc
push
ins
dec
inc
inc
xchg
and
mov
push
ds
inc
and
sbb
inc
xor
cs
cmp
add
add
dec
sti
push
dec
loope
mov
(bad)
mov
hlt
push
dec
and
shl
aad
pop
cmp
std
add
jmp
sar
pop
sbb
push
rcr
add
stc
dec
inc
bound
push
or
or
adc
or
jecxz
iret
je
cmps
fist
push
adc
mov
sub
dec
cmp
out
or
xchg
sub
inc
ins
sbb
mov
retf
mov
xor
dec
mov
xor
jg
xchg
(bad)
mov
(bad)
xchg
lods
cli
inc
test
jle
xlat
add
fsubr
(bad)
pop
adc
xchg
push
or
cmps
ins
sbb
aad
pop
ret
(bad)
xor
call
daa
je
push
mov
fcomp
lock
add
dec
jne
mov
test
popa
inc
dec
dec
sbb
inc
mov
jno
pop
jmp
les
dec
jne
adc
cdq
or
fadd
mov
mov
adc
mov
mov
push
cld
mov
xchg
pop
lock
xor
les
dec
pop
adc
cmp
leave
daa
xor
test
sub
rsqrtps
push
cmp
xchg
aad
mov
and
in
aaa
jmp
(bad)
out
push
fsubr
sub
test
es
push
add
jge
sbb
dec
and
jmp
mov
add
pop
jmp
movs
cmp
and
pop
mov
sbb
xchg
adc
outs
adc
dec
mov
daa
ds
clc
cmps
call
mov
pop
add
test
lock
push
inc
in
fimul
out
or
pop
sbb
push
inc
xor
mov
inc
or
in
adc
xor
neg
add
mov
add
mov
sbb
scas
push
and
ins
sar
mov
adc
lods
call
cmp
dec
jb
ja
mov
ins
movs
xor
or
jmp
and
push
mov
jl
mov
jmp
push
ret
ficom
into
imul
lods
cdq
test
outs
pop
add
jb
idiv
mov
or
sub
jb
hlt
rcl
movs
scas
dec
cdq
call
and
adc
lock
and
sbb
mov
and
push
test
pop
jp
xchg
and
dec
test
ss
pop
cmp
or
inc
add
aam
mov
inc
and
pop
test
cmova
movs
movs
and
rol
pop
sbb
mov
xlat
push
sbb
sub
test
add
pop
into
es
push
jmp
jmp
ss
inc
or
xor
mov
or
push
mov
frstor
mov
bound
cmps
test
xor
pop
fadd
(bad)
cmp
arpl
inc
inc
jmp
sbb
mov
cmps
jae
adc
add
dec
adc
adc
loopne
cmp
cmp
sub
lods
std
int
nop
ss
cmp
jne
xor
xchg
push
or
and
js
mov
pop
out
push
pusha
sbb
das
and
int3
hlt
ret
enter
out
dec
out
push
adc
adc
or
jbe
mov
push
cmp
xchg
jg
je
sub
je
idiv
or
add
daa
lock
jmp
pop
adc
out
pop
xchg
xor
inc
jno
das
out
movs
inc
or
xor
loop
es
mov
add
les
mov
lods
xchg
loope
jo
imul
loop
fsub
jmp
add
add
push
(bad)
bound
jne
loopne
fstp
out
push
mov
out
push
clc
mov
and
dec
or
dec
test
daa
inc
ins
jmp
and
pop
js
cwde
push
(bad)
enter
dec
mov
xor
cdq
and
sub
sub
jg
pop
mov
add
jno
dec
sbb
mov
sub
clc
hlt
repnz
pop
sub
inc
inc
or
push
push
ins
and
mov
call
pop
pop
sub
pop
mov
jo
test
push
sbb
pop
cmps
pop
ror
ret
xor
push
mov
gs
dec
cmps
loopne
in
aam
add
aam
fwait
bound
and
add
fld1
in
jecxz
icebp
aam
fst
call
and
sbb
int3
or
sub
inc
xchg
ror
outs
adc
es
and
fld
fucomi
pushf
inc
mov
jne
ins
out
cmc
sbb
push
popf
repz
xor
mov
pop
adc
std
sbb
dec
sub
or
mov
out
rol
push
in
rol
pop
pop
sbb
add
inc
add
aaa
dec
xor
xor
fdiv
out
bnd
enter
ja
or
je
scas
push
outs
cmp
adc
call
add
cmps
js
ds
sub
push
mov
sub
ja
mov
jmp
sbb
mov
push
jbe
inc
push
or
jecxz
inc
enter
mov
pop
enter
add
push
push
add
adc
dec
add
push
pop
push
inc
pop
enter
loop
sti
icebp
(bad)
adc
hlt
mov
add
loopne
pop
push
jbe
add
jo
and
inc
inc
mov
add
add
add
rol
(bad)
mov
call
add
int3
mov
das
xor
mov
inc
jbe
push
push
das
sbb
push
into
in
aas
mov
push
add
sub
jmp
popa
pop
pop
movs
fld
dec
les
push
inc
fnsave
movs
cwde
sub
ror
(bad)
cmp
gs
rol
sbb
rcr
or
jg
mov
test
mov
adc
in
mov
dec
or
cmp
adc
sub
or
sub
jae
push
push
sub
mov
push
cld
ud0
inc
bound
mov
sbb
shl
or
push
leave
jbe
dec
push
retf
xchg
push
movs
adc
inc
inc
inc
xlat
jl
adc
sub
mov
lods
sub
xchg
inc
pop
fsub
fs
ja
ins
inc
mov
mov
mov
sub
or
inc
imul
outs
mov
nop
dec
adc
pop
call
and
mov
bnd
lods
ja
sub
ret
and
mov
push
out
loope
mov
rcr
rcr
dec
es
aaa
pop
dec
rol
mov
call
sar
cdq
or
add
pop
ret
fnstsw
(bad)
dec
push
mov
iret
cmps
jnp
push
inc
dec
pop
and
lock
pop
aas
aaa
adc
jnp
std
add
punpckhwd
inc
push
and
jb
(bad)
adc
lods
sbb
lds
mov
or
or
dec
je
sbb
or
cs
xchg
sub
or
in
cmp
or
or
aad
mov
xor
push
sbb
syscall
sti
in
cs
inc
xchg
pop
call
jle
adc
outs
jle
sbb
push
sub
psubsb
inc
(bad)
shl
nop
and
hlt
inc
xchg
sub
dec
js
inc
ss
mov
inc
jle
shl
xchg
addr16
mov
fst
adc
push
and
mov
xor
inc
retf
mov
sar
push
movs
push
push
mov
or
dec
imul
push
add
mov
mov
ins
test
and
inc
jl
js
pop
jae
dec
fidiv
jo
ins
repnz
fmulp
mov
out
sub
sub
xchg
cli
push
ret
sbb
jne
out
div
rcl
mov
sub
mov
pop
or
fwait
cli
rcl
add
mov
add
pop
ss
outs
adc
push
mov
mov
ins
retf
dec
sbb
and
pop
les
adc
in
fidiv
inc
hlt
cld
add
cld
and
add
iret
xchg
in
in
in
movs
push
sbb
add
add
sub
or
or
out
xchg
inc
push
movs
enter
sbb
inc
sub
adc
out
and
sbb
je
adc
cwde
cwde
xor
inc
jmp
xchg
push
cmps
mov
push
dec
pop
jb
xor
pop
adc
in
psrlq
push
mov
inc
(bad)
jecxz
stos
sbb
pop
popa
push
loop
addr16
pop
or
test
push
jae
stos
or
push
or
mov
xchg
push
(bad)
wrmsr
inc
push
fsubr
add
adc
inc
rol
cmp
or
in
lods
and
jae
inc
stc
and
in
jb
test
arpl
ja
sub
movs
iret
jno
pop
pop
(bad)
fwait
dec
inc
jp
cmp
std
inc
addr16
ss
adc
je
je
or
fld
pusha
bound
sbb
pop
aaa
dec
jl
dec
shl
lea
push
pop
push
jno
xor
(bad)
cwde
sub
test
sahf
fld
or
xchg
pusha
pusha
in
sbb
retf
movs
in
add
mov
mov
ins
mov
in
dec
popa
push
sbb
add
sbb
dec
adc
dec
pop
xor
sbb
jmp
add
push
ja
add
pusha
leave
or
add
ret
and
rol
push
inc
lods
push
sub
and
inc
xor
xor
in
and
std
cmp
xchg
ss
inc
or
pop
daa
inc
xchg
xor
stc
dec
imul
inc
add
mov
pop
ss
and
xor
push
stos
xchg
lea
pop
and
enter
push
xor
movs
push
mov
movs
push
enter
mov
mov
in
mov
(bad)
jne
push
sti
mov
ss
add
add
xchg
bound
dec
enter
xchg
push
or
jg
je
or
sar
cmps
out
inc
xor
or
or
or
mov
sbb
cmp
mov
and
pop
or
imul
adc
xchg
xchg
push
rcl
sbb
xchg
adc
pop
mov
xor
xchg
test
movs
fwait
sub
ror
cmp
sbb
inc
arpl
repnz
sbb
or
inc
or
sbb
ror
cmp
or
add
add
xor
jb
push
jp
jb
xor
shl
add
inc
mov
add
ss
aad
in
mov
inc
push
dec
int
cmp
push
add
push
add
sahf
cmps
fnstenv
ins
fadd
fcomp
fcomp
dec
cmp
(bad)
call
shl
(bad)
js
push
push
out
sub
sub
pop
xchg
add
xchg
and
cmp
cmps
retf
add
cmp
out
pop
fidiv
das
pop
xchg
adc
test
jl
push
(bad)
frstor
cmps
adc
stc
test
imul
add
sub
lods
mov
ret
aas
and
dec
push
jo
jae
jmp
es
fdivr
fisttp
mov
(bad)
mov
lahf
lods
mov
or
sar
push
mov
dec
bound
xchg
mov
mov
(bad)
call
fcomp
pop
ins
inc
in
mov
or
pop
jae
fsub
pop
mov
mov
add
stos
dec
outs
ficom
inc
pusha
and
cmps
adc
xor
stos
add
dec
inc
cmp
xchg
adc
(bad)
fcom
dec
or
nop
cmps
nop
call
add
add
sbb
inc
or
jo
add
push
rol
div
fwait
add
dec
loope
cdq
or
ja
dec
xchg
or
mov
pushf
test
xor
adc
or
xor
or
or
mov
xlat
add
and
pop
mov
dec
and
sbb
call
jmp
inc
std
das
mov
imul
mov
mov
leave
mov
or
int
loope
outs
sub
push
or
cli
sub
push
add
add
loope
dec
aaa
loope
dec
pop
inc
sbb
xchg
push
add
push
popa
iret
push
rcr
or
push
or
or
ja
or
xor
data16
fwait
inc
repz
fdivr
or
mov
mov
mov
cmps
xchg
lods
movs
dec
outs
clc
xor
sahf
or
arpl
sub
adc
pop
push
jne
mov
rol
bound
xchg
inc
sub
sahf
or
xor
and
jmp
dec
and
ins
imul
jbe
std
mov
add
fs
dec
and
mov
adc
or
jno
adc
or
push
mov
mov
or
repz
or
or
add
jo
mov
sbb
fld
cmp
je
sahf
or
(bad)
or
inc
adc
pushf
dec
or
and
retf
popa
in
adc
or
sti
jns
dec
push
jae
inc
pusha
or
test
hlt
or
cs
mov
je
repz
sbb
std
dec
cld
(bad)
xchg
sbb
inc
add
or
mov
outs
test
jns
or
(bad)
lea
jl
xchg
dec
test
push
cld
ins
pop
xor
or
cmps
cmp
or
add
dec
fwait
sub
add
sub
sub
adc
es
dec
mov
add
adc
or
popa
xchg
push
daa
mov
ret
in
push
idiv
iret
pop
push
sbb
cld
fisttp
neg
adc
and
push
daa
stos
popa
push
adc
in
fldenv
adc
cmp
adc
ins
(bad)
mov
or
test
outs
enter
add
jecxz
xor
dec
cmps
lods
mov
xchg
cmc
xor
add
mov
(bad)
jnp
push
push
add
sub
das
adc
dec
loope
ss
jo
mov
sub
push
ins
or
adc
push
or
sbb
mov
addr16
adc
push
adc
es
adc
gs
mov
and
push
inc
sbb
or
add
or
ret
dec
test
mov
dec
or
sub
test
sub
xchg
es
sub
inc
in
daa
lods
jl
adc
adc
adc
adc
pop
outs
enter
push
cmps
dec
xchg
les
cmc
adc
adc
mov
sub
dec
adc
xor
cmp
out
pop
out
(bad)
(bad)
movs
dec
jns
inc
add
and
adc
mov
call
xlat
es
push
push
dec
enter
ret
push
jbe
push
mov
cmps
xor
(bad)
inc
fild
xchg
cmp
and
enter
xchg
outs
mov
sbb
push
ret
dec
pop
faddp
xlat
cli
xchg
mov
or
pop
mov
adc
fcmovnbe
jae
or
popa
outs
repnz
mov
(bad)
and
ror
mov
push
rcr
ds
push
push
(bad)
sbb
or
pop
inc
enter
add
ja
dec
leave
std
push
in
iret
repz
mov
cmp
sbb
cwde
ret
popa
mov
mov
lar
in
enter
dec
or
add
pop
fisubr
pop
mov
dec
add
and
or
movs
sub
mov
sub
sub
cvtdq2ps
adc
and
test
mov
or
test
jecxz
stos
scas
and
stos
sub
xor
add
movs
jne
rol
inc
dec
mov
adc
push
add
dec
(bad)
cmp
(bad)
sar
and
adc
xor
enter
push
repnz
xchg
call
and
and
mov
fcomp
sub
das
push
test
iret
fmul
or
and
sub
iret
mov
in
inc
push
mov
push
push
arpl
hlt
adc
mov
neg
jmp
cmp
lods
dec
add
ret
aad
xchg
out
inc
ror
mov
mov
test
popf
xchg
mov
in
or
xor
pop
push
ins
shl
adc
pop
leave
push
and
and
push
call
mov
or
in
and
cmc
cmp
inc
add
xchg
and
test
add
adc
sbb
je
(bad)
daa
xchg
dec
add
mov
movs
adc
mov
mov
repnz
(bad)
pop
add
ss
pop
je
xchg
jge
(bad)
mov
jmp
xchg
pusha
adc
repnz
pop
pop
cs
(bad)
dec
pop
ins
sub
and
jo
and
dec
sahf
mov
adc
push
xor
jge
aad
loope
push
dec
mov
loope
mov
aam
in
(bad)
ins
push
add
push
stc
test
jne
imul
popf
mov
pop
gs
jnp
or
int3
mov
jg
pop
push
sbb
mov
add
jl
fs
sti
mov
push
das
inc
push
push
mov
mov
pop
enter
pop
in
outs
and
maxps
mov
fcomi
retf
fmul
call
and
fst
cmp
pop
scas
pushf
jne
and
jl
dec
add
fist
jmp
cli
call
jo
ja
push
add
test
lods
jmp
adc
pop
test
pop
add
add
add
fidiv
add
sbb
sub
add
outs
outs
pop
les
sbb
or
add
add
cdq
add
push
mov
mov
mov
mov
mov
push
sub
dec
mov
mov
mov
mov
mov
lods
dec
adc
cmps
jmp
xor
out
into
call
mov
pusha
ss
call
xlat
add
mov
xor
es
data16
test
jmp
sar
rcl
pop
int3
sti
mov
push
add
push
test
rcr
addr16
add
xor
data16
push
jl
cmps
jge
test
mov
dec
int3
ss
out
xchg
fdivr
fs
aam
out
fucom
imul
pop
pop
push
jo
fistp
mov
mov
add
in
jecxz
loope
sub
xor
jecxz
lahf
cmps
fld
mov
ins
mov
mov
pop
pop
loopne
or
inc
out
mov
add
mov
ret
mov
rol
xor
pop
mov
inc
repnz
ins
mov
and
repnz
push
movs
push
int3
and
mov
cmp
cmps
push
mov
lahf
add
enter
xchg
(bad)
cmp
push
push
aas
mov
mov
mov
int3
and
or
push
fisub
in
retf
jge
adc
(bad)
lds
leave
inc
nop
daa
dec
ret
and
pop
push
mov
sub
add
add
sbb
jo
push
and
xchg
and
mov
adc
fs
fs
cmp
nop
cmp
adc
push
inc
outs
rol
lahf
push
test
add
jns
adc
je
push
jmp
pop
sbb
ret
and
dec
adc
xor
cmp
js
mov
jae
inc
cmp
xor
sub
xchg
inc
mov
mov
add
inc
lea
rol
xlat
xor
aad
inc
or
mov
push
retf
sub
jmp
inc
pop
adc
cdq
stos
mov
mov
ret
retf
retf
xor
sub
or
pop
in
rol
pusha
or
and
add
in
sbb
cmp
fsub
sub
sbb
sbb
aam
dec
cmp
sub
lods
hlt
popa
sbb
das
push
test
popa
cmp
fadd
ds
sub
cdq
movs
mov
mov
jae
ret
inc
pop
cmp
push
mov
addr16
mov
(bad)
or
out
adc
js
outs
inc
ins
sbb
and
xchg
xchg
xchg
dec
imul
inc
xchg
xchg
xchg
xchg
test
xchg
lock
xchg
xchg
xchg
jl
enter
xchg
retf
adc
cmp
repz
pop
inc
ret
mov
xchg
scas
popa
jbe
add
hlt
mov
mov
call
cld
(bad)
push
inc
or
rcr
xchg
call
mov
shl
jbe
out
ret
inc
dec
test
test
dec
hlt
lds
and
xor
(bad)
push
movs
jne
push
fwait
movs
and
or
add
push
fisubr
mov
adc
or
mov
(bad)
sub
mov
dec
jecxz
push
push
shl
push
jmp
dec
and
movs
dec
call
and
xor
rol
lds
and
sbb
pop
aas
pop
inc
sbb
mov
or
sub
adc
jo
dec
mov
push
dec
int3
pop
inc
or
mov
jecxz
mov
int
popf
mov
push
ret
add
cmp
pop
lods
test
lods
rcl
rcr
add
sub
push
sub
inc
enter
adc
or
icebp
dec
(bad)
xchg
xchg
xchg
outs
xchg
mov
push
out
adc
sub
dec
mov
and
shl
loope
push
cdq
das
push
pop
inc
sub
add
dec
mov
in
mov
or
jnp
aam
je
fadd
rol
es
pop
adc
add
pop
sbb
jnp
add
rol
ror
adc
push
bound
pop
ror
jmp
adc
pop
(bad)
arpl
test
pop
sbb
jmp
pushf
and
adc
movs
xor
sbb
mov
sbb
and
or
inc
hlt
mov
inc
loope
sub
daa
sbb
imul
adc
pop
add
enter
scas
inc
and
pop
dec
enter
es
and
test
cwde
nop
retf
and
lea
jns
mov
sbb
mov
rol
adc
adc
and
mov
aad
daa
ret
or
push
sar
add
mov
inc
leave
sub
sub
sub
jb
sbb
sub
aaa
cs
pop
adc
das
add
xchg
mov
and
les
add
jns
xor
push
or
popa
and
mov
leave
scas
push
adc
nop
add
inc
and
or
imul
leave
or
xor
inc
or
xor
out
add
xchg
adc
inc
adc
xor
and
jmp
mov
sub
cmp
mov
or
add
dec
cmp
adc
jecxz
adc
nop
pop
xchg
dec
xchg
cmp
xchg
mov
add
and
retf
or
ret
out
test
push
icebp
leave
xor
int
(bad)
jmp
or
imul
jae
push
dec
jp
dec
sbb
aad
mov
add
inc
stc
popf
jo
test
imul
mov
enter
sub
or
push
aaa
sub
or
xor
add
push
or
inc
add
enter
in
inc
test
pushw
(bad)
dec
jns
pop
dec
sbb
pusha
push
dec
fwait
sub
add
adc
dec
or
inc
inc
adc
xlat
inc
cmp
xchg
jne
add
push
or
icebp
inc
mov
dec
mov
shl
test
mov
cli
cmp
sbb
test
and
and
mul
inc
inc
push
add
xchg
test
xchg
or
and
and
adc
jmp
push
push
daa
and
ins
loope
loope
xor
add
push
popf
sbb
and
fs
push
sbb
xchg
mov
or
add
sub
clc
xchg
or
push
pop
inc
push
xor
jne
push
sbb
nop
push
inc
pop
ins
ror
push
dec
sub
sub
pop
jmp
push
cmp
inc
pop
std
inc
imul
add
lea
push
mov
dec
movs
or
or
xchg
or
xchg
sub
add
scas
cmp
dec
pop
stos
imul
addr16
push
dec
pushf
and
and
or
movs
je
lods
inc
adc
or
inc
ror
in
pop
pusha
jno
ret
push
shr
inc
sahf
outs
shl
xor
dec
sub
lea
xor
or
fstp
add
cmp
push
or
xchg
popf
lds
cmp
xchg
xchg
xchg
xchg
retf
pop
sub
sbb
xchg
xchg
test
hlt
push
sub
inc
inc
inc
or
scas
fiadd
cs
add
and
jbe
inc
inc
inc
cdq
ret
cs
inc
inc
sub
xchg
inc
inc
inc
inc
mov
sti
and
inc
inc
inc
cs
mov
inc
inc
sar
and
dec
inc
inc
inc
inc
outs
xchg
mov
inc
add
and
inc
inc
inc
inc
(bad)
scas
xlat
stc
inc
inc
cs
sbb
aas
mov
inc
inc
inc
mov
pop
xor
inc
inc
inc
inc
dec
jb
leave
inc
cs
inc
in
adc
inc
and
cmp
inc
inc
inc
inc
mov
inc
inc
inc
cs
pop
test
shl
sbb
inc
inc
inc
inc
inc
jo
mov
aaa
add
sti
and
dec
add
add
add
and
push
push
push
xchg
pop
mov
xchg
or
sub
pop
bound
inc
mov
or
sub
or
add
out
test
add
repnz
clc
cmp
scas
cmp
wrmsr
push
push
sbb
or
pop
add
push
mov
clc
out
sub
sub
cmp
add
test
rol
mov
idiv
adc
or
adc
and
push
icebp
test
mov
mov
nop
cmp
std
hlt
cmp
test
and
adc
div
adc
add
ds
in
stos
mov
fs
or
(bad)
call
scas
dec
repz
mov
dec
mov
aas
outs
fisttp
fistp
daa
bound
push
push
mul
inc
mov
inc
inc
add
int
jne
fwait
bound
sub
sbb
test
mov
ret
icebp
push
(bad)
fnstsw
ja
inc
inc
cs
add
in
add
dec
push
or
nop
add
or
test
xor
push
push
inc
sub
cmp
adc
mov
pop
cmp
xor
aas
and
dec
stos
dec
enter
sbb
mov
pushf
dec
in
dec
pop
ds
inc
add
push
fnsave
or
std
sub
xchg
mov
mov
adc
and
add
add
rcr
outs
push
jmp
add
femms
or
cmp
and
push
jl
ins
fs
ret
push
adc
and
sub
inc
fistp
push
cmp
push
jb
ds
das
mov
mov
cmp
adc
lods
adc
test
aad
lods
repz
sub
cmp
sub
fnstsw
xor
and
movs
add
mov
out
cs
rol
dec
bound
sbb
xor
les
inc
or
dec
dec
fwait
aas
xor
mov
mov
ins
das
pop
(bad)
ss
enter
pop
xchg
add
dec
dec
fs
push
xor
leave
cmp
ins
pop
rol
ins
or
fwait
pop
xchg
les
pop
stos
sub
cmp
je
js
(bad)
das
jno
enter
adc
mov
push
aaa
jge
push
cmp
mov
test
inc
xlat
ret
mov
(bad)
sub
mov
nop
add
or
pop
(bad)
ss
xchg
dec
mov
pop
retf
mov
int
adc
cmp
xchg
mov
pop
or
push
in
jge
and
and
mov
pusha
les
addr16
stos
cli
inc
sbb
xchg
fisttp
js
and
ds
leave
leave
jge
into
add
dec
dec
dec
dec
inc
inc
(bad)
leave
add
push
and
je
mov
push
add
fcmovne
mov
mov
adc
fs
pop
dec
ins
mov
les
push
push
sub
int3
mov
aad
or
push
push
cli
sub
mov
scas
cmp
pop
sahf
fwait
xchg
xchg
pop
je
push
add
pusha
cdq
jecxz
pusha
sar
xchg
jae
push
ins
and
and
fist
pop
add
add
xor
xor
in
push
push
adc
push
sbb
stc
mov
sbb
push
mov
sub
mov
dec
cwde
fsub
adc
sbb
jns
jo
dec
sahf
pop
mov
dec
add
das
shl
or
xchg
xchg
dec
mov
out
cmp
or
pop
jp
dec
inc
mov
pop
mov
or
add
dec
dec
dec
cmp
in
adc
xor
adc
retf
pop
in
test
add
dec
xchg
xchg
xchg
xchg
daa
push
ja
xchg
retf
xchg
xchg
ret
dec
cmp
xchg
xchg
stc
and
jo
xchg
xchg
xchg
xchg
mov
xchg
xchg
xchg
daa
dec
jae
retf
xchg
xchg
xchg
mov
sti
and
xchg
inc
outs
xchg
mov
mov
mov
or
or
les
dec
lds
(bad)
sbb
pop
push
add
or
mov
dec
mov
adc
push
mov
pop
or
setae
sbb
inc
sub
in
adc
ret
pop
dec
mov
mov
push
push
loope
sbb
xchg
aam
inc
add
stos
dec
test
call
int
les
add
in
das
and
scas
movs
daa
or
lods
cdq
mov
jecxz
inc
cwde
adc
outs
aad
dec
or
test
or
mov
gs
and
int3
daa
dec
mov
adc
mov
ja
and
sub
or
sub
mov
fnstenv
pop
mov
or
test
inc
mov
sahf
outs
and
(bad)
push
loop
or
push
repnz
mov
inc
pop
(bad)
retf
fwait
jecxz
rol
or
ins
ror
retf
xchg
dec
or
push
(bad)
lea
push
dec
and
xchg
les
sbb
inc
add
nop
dec
fcmovb
sub
and
adc
mov
sbb
enter
iret
into
add
imul
add
add
jp
jmp
cmp
mov
mov
pop
es
mov
xor
jno
push
xchg
jno
dec
and
xchg
test
adc
and
or
push
pop
hlt
repz
or
lods
pop
vsqrtss
inc
lds
sub
movs
test
push
syscall
fs
pushf
(bad)
xor
test
cwde
sbb
sar
aas
push
inc
or
mov
or
fwait
scas
sar
inc
pushf
lods
lahf
cmp
mov
adc
outs
nop
cmp
stos
daa
push
imul
adc
ja
mov
pop
rol
xchg
dec
mov
push
adc
cmc
clc
loop
xchg
jno
inc
add
out
mov
push
loope
jg
push
inc
sbb
add
mov
pop
xor
jmp
mov
cmp
adc
mov
xchg
and
mov
hlt
and
add
push
adc
xchg
imul
adc
(bad)
ins
shr
and
mov
inc
mov
push
mov
jne
call
test
mov
adc
push
inc
aad
and
mov
mov
sbb
jo
cmc
mov
cmp
push
cli
push
es
cmp
stc
aas
lahf
test
add
push
xchg
test
or
mov
test
xor
lock
dec
pop
nop
sbb
and
fdiv
and
and
dec
push
cmp
fidiv
(bad)
mov
jp
call
jae
(bad)
push
mov
jmp
dec
ret
add
dec
add
mov
mov
and
leave
xor
pop
(bad)
pusha
lds
fisttp
add
adc
test
inc
jbe
pop
jb
adc
inc
or
(bad)
cmp
mov
pop
test
mov
mov
adc
cmp
bswap
pusha
jns
imul
sbb
aas
xor
movs
ins
in
jl
sub
outs
adc
pop
sbb
test
inc
fdiv
xor
aas
popa
test
daa
mov
test
test
(bad)
in
inc
add
sub
pop
test
loop
(bad)
mov
pushf
xchg
push
or
sbb
cs
movs
pushf
mov
sbb
and
aaa
movs
add
popa
imul
sbb
fiadd
sub
cmc
lods
or
outs
push
mov
dec
dec
sbb
pop
adc
xchg
inc
and
aaa
sbb
or
mov
sahf
cmc
(bad)
ins
bound
add
(bad)
jno
dec
adc
xor
sbb
retf
enter
aas
ss
sub
xlat
adc
or
inc
ins
sbb
xchg
leave
sub
aad
cmp
repnz
bound
jae
popa
pop
push
xor
xchg
fs
adc
out
fmul
push
ud2
lock
mov
dec
inc
inc
imul
loopne
adc
mov
es
popa
out
stos
sbb
xor
lock
mov
and
push
jg
push
mov
movs
bound
adc
rcl
or
test
xor
aas
fcom
or
and
std
dec
inc
jmp
inc
nop
out
or
sub
xor
loope
push
dec
cmp
push
inc
push
inc
add
adc
jmp
push
sub
sub
retf
imul
es
nop
dec
push
sub
fistp
sahf
div
push
sub
adc
cmp
add
pop
leave
and
adc
mov
popf
call
push
outs
add
inc
jmp
xchg
xchg
pop
into
sub
xchg
pop
(bad)
pop
out
pop
sub
pop
(bad)
cdq
fiadd
xchg
xchg
xchg
pop
pop
test
repnz
test
mov
leave
in
popa
(bad)
jg
daa
or
jp
xchg
xchg
xchg
movs
sar
and
leave
push
xchg
in
fs
jg
jb
repnz
add
js
jns
jb
jmp
push
inc
sub
adc
xchg
pushf
xchg
push
cwde
test
mov
je
sub
sbb
cdq
fcomp
(bad)
adc
lds
jecxz
mov
or
add
shr
and
hlt
push
addr16
or
movs
mov
adc
push
push
inc
add
das
int3
cmps
loope
inc
movs
test
ja
push
inc
mov
mov
push
dec
mov
test
dec
or
movs
mov
and
movs
test
test
xor
jnp
adc
cmps
or
dec
lds
dec
popa
adc
add
bound
and
mov
aam
popf
and
jge
sbb
sti
mov
clc
cmps
xor
loope
gs
adc
sahf
inc
call
adc
mov
mov
pop
or
rcl
and
xor
mov
xchg
dec
mov
aam
adc
mov
jno
imul
jo
(bad)
out
fwait
push
pop
dec
ins
sub
test
push
xchg
imul
outs
fcomp
out
cld
bound
push
add
dec
inc
lds
dec
adc
cmp
xchg
push
das
fsubr
push
xor
or
adc
or
sbb
push
fiadd
dec
ror
sbb
push
xchg
(bad)
cwde
push
jb
jo
sub
xor
stos
pop
mov
push
mov
xor
pushf
inc
inc
sub
mov
or
dec
js
pop
fldcw
add
push
or
sbb
dec
stos
stc
xor
adc
adc
xor
mov
lds
or
popa
sub
(bad)
das
add
pop
or
ins
lds
lock
addr16
shr
add
add
sar
add
popa
mov
push
ror
and
adc
push
stc
sub
ins
dec
mov
mov
xor
or
xchg
dec
push
mov
cmp
xchg
add
call
sub
jp
push
xchg
adc
mov
and
xor
dec
mov
push
xor
push
es
mov
div
mov
mov
pop
add
dec
xor
adc
dec
pop
mov
sub
and
rcl
pushf
adc
popa
sbb
ret
stc
xor
shr
sahf
enter
leave
lock
enter
imul
xor
in
enter
jmp
enter
jge
enter
into
neg
ins
inc
enter
imul
enter
pop
and
enter
neg
enter
mov
fiadd
outs
daa
dec
mov
enter
loope
lea
jo
add
mov
aaa
inc
popa
loopne
push
xchg
outs
bound
popa
push
xchg
xor
xchg
mov
push
test
fwait
rcl
ror
fs
loop
loope
inc
lods
aad
add
pusha
das
jns
push
retf
lahf
sub
inc
mov
inc
gs
out
xor
push
mov
(bad)
(bad)
or
mov
or
pop
add
adc
push
aaa
inc
movs
clc
pop
and
inc
mov
imul
enter
js
pop
adc
push
imul
lods
jbe
jl
xchg
inc
outs
lods
in
fist
scas
mov
dec
test
inc
dec
sbb
lods
in
inc
movs
inc
push
push
jmp
mov
and
aam
jl
xlat
aam
adc
cmp
cmc
jg
cmp
mov
and
aam
pop
inc
or
mov
sub
das
and
mov
or
jo
dec
mov
inc
inc
vmread
adc
in
push
jo
dec
faddp
sbb
pop
xchg
pusha
sbb
test
add
xor
popf
push
mov
in
push
xlat
pop
pop
adc
(bad)
sbb
pop
or
xchg
xchg
pop
addr16
mov
lock
push
dec
fisttp
imul
cwde
mov
imul
adc
push
(bad)
dec
lea
lods
adc
sub
dec
adc
mov
in
in
pop
cmp
cvtps2pd
mov
jnp
sub
iret
pop
(bad)
popf
xchg
inc
xor
mov
inc
adc
mov
inc
or
lods
in
xchg
add
mov
dec
sub
mov
xchg
das
sub
pop
leave
sub
out
pop
nop
push
pop
(bad)
lods
add
jge
dec
fdivr
xchg
jo
lahf
(bad)
xchg
add
cdq
jb
test
dec
pop
pop
jg
mov
push
int3
add
pop
jb
dec
imul
std
or
and
mov
shr
push
xor
in
adc
fs
es
js
leave
add
push
addr16
and
cwde
imul
fild
sub
push
and
in
mov
pop
jb
pop
mov
dec
(bad)
repnz
jb
loope
mov
jb
xor
dec
add
jae
in
mov
js
sti
es
push
imul
push
adc
les
inc
pop
popa
(bad)
push
mov
push
ins
int3
inc
and
or
lods
sub
sti
push
sub
test
test
pop
xor
adc
in
test
xor
or
jo
inc
xchg
ror
aaa
dec
int
dec
enter
xor
sbb
jns
imul
jp
xor
ret
mov
in
cs
mov
lea
test
xor
(bad)
rol
ss
dec
cmp
lds
leave
ret
jne
add
push
adc
call
test
addr16
dec
or
adc
lock
add
sahf
test
std
adc
mov
sub
mov
jl
test
add
int
test
jl
mov
out
cmp
mov
outs
je
call
inc
mov
fsub
and
pushf
add
mov
adc
test
mov
cmp
(bad)
push
xor
jne
pop
fadd
sbb
add
sbb
(bad)
mov
add
inc
das
jne
xor
dec
pop
add
or
pop
and
imul
cmp
inc
sbb
mov
push
ja
pop
enter
in
imul
push
push
jp
mov
daa
loop
nop
mov
sbb
add
ss
jno
in
mov
dec
retf
inc
and
sub
dec
dec
push
adc
jg
test
cmps
adc
stos
jmp
and
cmp
mov
inc
xor
xchg
sub
lock
outs
inc
sub
pusha
dec
add
dec
xor
add
stc
mov
sbb
mov
xor
mov
mov
sbb
arpl
test
pop
imul
daa
inc
inc
test
test
push
add
dec
loope
outs
and
mov
add
add
fmul
or
ret
cmp
jo
aaa
mov
frstor
test
dec
(bad)
adc
fild
adc
jo
iret
or
add
inc
xor
adc
mov
movmskps
movs
xchg
pop
movs
pusha
test
stos
jl
sub
or
scas
or
or
lock
and
fild
jb
xor
cmp
jns
jl
cmps
in
pushf
mov
jge
mov
sbb
sub
enter
jge
inc
call
mov
xor
inc
clc
sub
popa
xor
pop
add
fcmove
in
int3
in
and
inc
cmps
inc
mov
inc
xchg
cwde
and
jle
and
pop
fwait
ins
cmp
xchg
jae
es
int
(bad)
and
rcl
dec
or
lds
fadd
retf
add
inc
test
(bad)
ins
dec
mov
mov
test
shl
add
jl
dec
jge
(bad)
and
adc
pop
mov
jg
xor
inc
xor
inc
inc
sub
fs
(bad)
lock
mov
daa
push
cmp
lods
dec
mov
or
push
scas
ins
add
rcl
pop
adc
ins
sbb
nop
xlat
dec
jle
fs
or
fs
sbb
ja
or
stos
dec
inc
or
dec
mov
inc
aad
or
dec
sbb
adc
xchg
addr16
mov
sbb
and
adc
dec
repz
addps
sbb
xchg
mov
adc
or
add
mov
jge
cmp
movs
jo
mov
push
into
loop
sub
pusha
push
in
aas
lds
and
mov
shl
loop
mov
mov
mov
push
push
enter
out
out
in
push
nop
hlt
es
inc
jae
add
pop
sub
retf
mov
cmp
sub
adc
xchg
cmp
les
pop
xchg
cmp
push
mov
inc
imul
sbb
test
sub
pop
push
call
mov
nop
(bad)
pop
rep
jo
adc
je
inc
mov
fldenv
js
in
mov
bound
popf
test
mov
ret
add
xchg
jne
inc
sbb
ins
fstp
adc
mov
add
sub
pop
and
mov
imul
(bad)
xchg
mov
jl
stos
mov
dec
and
sbb
dec
fmul
cmp
ss
arpl
mov
test
or
rol
mov
les
add
in
inc
cmp
inc
shr
fdiv
loopne
xchg
xchg
mov
and
jecxz
push
shl
lea
popf
cmps
test
(bad)
pop
into
push
pop
adc
add
add
sub
mov
mov
data16
movs
in
aaa
call
add
sahf
xchg
into
imul
pusha
rol
int3
pusha
ror
rcr
loope
int
cmp
and
xor
push
and
cld
int
sar
push
in
out
ds
ds
inc
jmp
pushf
iret
pop
adc
rcr
sub
fisubr
sub
lods
mov
stc
pop
pushf
mov
js
pop
cmp
xchg
push
inc
dec
adc
inc
mov
or
inc
fs
cmp
push
dec
adc
mov
xor
push
sub
mov
imul
pop
xor
mov
call
out
cs
add
or
je
fmul
xlat
mov
and
xchg
aam
sar
xor
pusha
mov
adc
cli
pop
(bad)
mov
test
xchg
pop
js
mov
and
cmp
fnsave
cmp
inc
and
pop
aad
or
xchg
sbb
or
pop
movs
fnstenv
cwde
out
push
dec
mov
fnstcw
xchg
or
int
das
dec
(bad)
enter
sti
jmp
sbb
and
adc
mov
popa
xchg
and
adc
(bad)
cmp
pop
pop
inc
adc
les
test
stc
jbe
ins
adc
icebp
push
sbb
mov
mov
xchg
pusha
jmp
loope
pop
mov
adc
xchg
mov
mov
inc
leave
mov
(bad)
fcom
push
hlt
mov
jl
ret
lock
sbb
xor
mov
ja
pusha
and
mov
loop
cld
shr
xchg
dec
fs
adc
adc
in
(bad)
enter
pop
add
push
adc
add
sub
pusha
loope
xchg
outs
dec
or
call
fistp
sub
xchg
(bad)
push
sub
cmp
nop
inc
cmp
jl
dec
inc
aam
test
jne
jbe
imul
and
cmp
rol
shr
mov
je
mov
dec
cmps
pop
and
sbb
bound
push
push
push
or
mov
inc
and
mov
cmp
mov
ret
shl
les
push
ins
stc
arpl
sahf
xchg
cmp
jne
and
imul
inc
pop
mov
xchg
in
fsubr
lahf
shr
cmp
sbb
mov
jo
cmp
mov
xchg
movs
jb
and
pushf
call
cmp
xor
test
sub
add
push
add
ja
xchg
mov
fs
outs
inc
fidiv
jl
aas
pop
xor
or
push
loopne
(bad)
xchg
and
cmp
aaa
aas
nop
dec
adc
cmovo
pusha
add
mov
ret
add
call
add
or
out
add
adc
or
inc
dec
mov
inc
mov
sub
push
mov
adc
and
aas
das
cwde
daa
cmp
inc
adc
mov
adc
add
int
add
add
add
movs
adc
add
push
cmc
movs
mov
leave
jle
xchg
fcomp
shr
sbb
or
sub
mov
imul
add
in
fdecstp
in
fs
mov
inc
inc
dec
mov
sub
pop
shl
inc
sbb
jne
js
pop
cmps
loop
je
lahf
int3
adc
xor
push
push
rcr
ds
and
xor
jb
test
push
fwait
dec
movs
mov
popa
test
mov
aas
add
fldenv
pop
sbb
mov
movs
or
push
(bad)
pusha
cmp
test
add
inc
and
or
mov
test
pop
ds
push
inc
add
push
and
je
pop
xlat
in
pop
mov
enter
mov
inc
push
sbb
adc
jo
adc
test
or
movs
mov
mov
push
push
sbb
push
dec
lahf
aaa
xchg
and
mov
and
fiadd
xor
fwait
push
jg
fcom
(bad)
push
adc
pop
mov
rol
dec
movs
add
dec
mov
jae
inc
jmp
xchg
in
mov
je
push
sub
jns
mov
fild
add
add
cmp
jl
test
inc
add
pop
inc
in
or
add
enter
jb
rol
xchg
cwde
jb
int
dec
push
push
push
push
sub
fild
js
movs
inc
inc
outs
fild
mov
inc
shr
mov
cmp
fstp
cmp
js
push
push
cmp
repz
pop
jmp
sub
mov
leave
ds
add
ja
add
in
add
adc
dec
enter
push
out
dec
loop
retf
xchg
mov
mov
test
or
mov
pop
mov
inc
(bad)
jne
cmp
jne
mov
(bad)
xor
mov
add
xor
jl
adc
xchg
mov
xor
pop
hlt
neg
jmp
pop
jne
fs
in
je
fsubr
mov
ins
xchg
inc
pop
dec
mov
and
retf
ror
cmpxchg
sub
push
in
dec
xchg
loopne
int
fistp
mov
in
jo
xor
pop
jmp
push
in
retf
inc
mov
js
fs
iret
lock
mov
sub
fist
sub
mov
adc
push
sub
inc
in
pop
jno
call
dec
sbb
jo
mov
xor
not
xor
pusha
sub
daa
cmps
sbb
push
jecxz
cmp
cmps
xlat
push
rcl
add
and
xchg
and
cdq
mov
and
sub
mov
add
and
pop
or
dec
retf
inc
mov
xor
or
into
sbb
mov
cmp
dec
inc
push
or
jmp
rcl
dec
test
mov
repz
add
popf
and
(bad)
push
icebp
scas
adc
dec
mov
push
pop
sub
mov
mov
jbe
ins
cs
and
lds
adc
cmc
dec
inc
(bad)
pop
jmp
loopne
dec
pusha
mov
or
je
ss
jmp
xlat
or
add
in
ror
and
repz
sub
dec
xchg
fcom
xchg
sbb
lods
sub
rcl
aaa
add
adc
adc
and
xor
inc
pop
sub
mov
push
xor
js
js
pop
inc
sub
push
dec
aam
dec
ds
add
fs
xchg
mov
sub
mov
sub
xchg
and
(bad)
mov
gs
adc
mov
cmp
sbb
cmps
xchg
repnz
retf
mov
lock
adc
and
and
hlt
dec
xor
das
pop
sub
jle
je
mov
push
adc
inc
mov
sub
sub
or
or
cmc
jo
fcomp
fidivr
inc
les
icebp
inc
dec
add
sar
(bad)
xchg
sub
xchg
cmps
sbb
mov
or
fnsave
das
adc
ret
mov
xchg
mov
sub
sbb
jmp
xor
xchg
lods
or
(bad)
push
xchg
mov
in
adc
pop
or
xor
jl
xchg
pop
xor
xor
xor
scas
jg
je
mov
push
fwait
or
lods
mov
mov
mov
jge
test
xor
out
pop
mov
nop
les
sub
pop
cmp
stos
jbe
sbb
inc
add
sbb
ret
mov
jl
xor
inc
in
push
sbb
lea
and
test
test
shl
sub
popa
push
sbb
mov
in
movs
xor
inc
push
in
test
push
or
in
pop
lods
pop
mov
inc
out
add
or
dec
mov
adc
add
pop
or
push
cmp
mov
clc
pop
gs
aad
mov
xchg
ss
mov
or
adc
jno
add
or
jo
lahf
inc
aam
or
in
add
ja
dec
mov
pop
adc
pop
push
push
or
xchg
je
stos
add
cdq
loope
cli
rcl
dec
push
cmps
fadd
xor
adc
mov
mov
mov
inc
or
nop
xchg
push
or
stc
or
rcr
mov
movs
dec
scas
mov
jne
add
nop
add
jno
mov
push
aam
push
fcomp
or
mov
retf
jb
mov
mov
sub
and
pop
and
and
or
mov
mov
icebp
or
imul
addr16
adc
ret
sub
je
jbe
add
jae
lock
mov
fld
add
xor
sbb
loope
mov
xor
jmp
icebp
aaa
inc
and
aad
inc
add
scas
cli
int3
ss
and
int3
fld
sub
js
aad
in
push
pop
xlat
or
popf
dec
test
push
push
(bad)
call
cmp
dec
mov
popa
inc
inc
add
lea
inc
rol
add
ja
mov
dec
add
mov
sub
fldcw
xor
mov
pusha
add
add
or
test
push
cmp
add
je
push
add
xchg
sti
imul
inc
lds
adc
jle
push
enter
pop
mov
pop
pmaxub
pop
movs
jnp
pop
push
outs
mov
loopne
mov
nop
xchg
add
or
sub
mov
popf
mov
jbe
loope
mov
jns
in
test
jg
and
xchg
or
sti
and
pop
dec
outs
nop
mov
xchg
dec
cmp
mov
sub
mov
xor
scas
xchg
stos
shl
inc
cwde
ret
pop
cli
push
mov
or
or
lea
xchg
cmp
vmread
nop
dec
add
inc
jle
stos
jl
loopne
call
or
xor
jg
clc
sub
add
(bad)
sbb
inc
add
pop
sbb
pop
ret
xchg
or
adc
pop
or
out
push
in
into
push
push
lea
push
mov
inc
call
mov
(bad)
pop
inc
pop
mov
sti
or
lds
sbb
out
sbb
pop
mov
mov
push
jle
dec
(bad)
gs
data16
add
nop
inc
in
fistp
sbb
add
add
mov
or
xchg
sub
xchg
mov
add
adc
scas
jmp
adc
mov
sbb
lods
add
sbb
jns
inc
xchg
jb
mov
je
dec
stos
(bad)
inc
xchg
xchg
je
dec
ins
cmp
mov
rcl
add
adc
pop
iret
inc
call
xchg
pop
mov
shl
mov
or
xchg
and
xchg
popa
mov
push
add
jmp
mov
jo
add
imul
adc
mov
setne
cmps
mov
jmp
mov
les
jo
push
or
mov
push
jne
mov
(bad)
jmp
popa
jns
or
xor
in
sub
inc
nop
nop
outs
retf
xchg
ret
and
mov
fcomp
xchg
xor
push
xchg
adc
test
imul
clc
inc
pop
xor
push
(bad)
push
inc
int
cmp
fisub
inc
adc
into
out
inc
adc
test
lea
mov
(bad)
and
sar
lahf
pop
mov
hlt
popa
(bad)
leave
push
test
pop
shl
push
mov
jne
clc
ret
mov
jb
cmpps
pop
and
push
adc
add
shr
or
cmps
cmp
out
push
nop
mov
mov
push
ffree
adc
loope
and
aam
in
xlat
pop
cmp
js
sbb
(bad)
das
add
movs
xchg
test
dec
movs
mov
pop
icebp
fldcw
sub
test
add
mov
mov
inc
or
movs
ss
jmp
mov
inc
jae
add
ins
add
push
jo
xchg
sbb
outs
inc
mov
push
gs
and
xchg
sub
xchg
adc
out
ins
movs
or
or
push
sub
daa
and
mov
xchg
cmp
(bad)
daa
fisttp
imul
dec
movs
adc
rol
popf
stc
cmp
je
inc
ret
or
lock
add
inc
add
xor
dec
fcmovne
xchg
xor
es
adc
adc
cmps
add
pop
int3
adc
out
adc
jge
pushf
inc
push
movs
push
mov
imul
add
popa
imul
xchg
lahf
(bad)
stos
xor
push
adc
int3
jl
hlt
pop
and
xor
idiv
inc
and
or
test
cwde
jo
sti
dec
ret
mov
cs
sbb
mov
xchg
ficom
shl
movs
mov
cwde
(bad)
dec
mov
outs
push
pop
mov
sahf
mov
pop
pop
call
and
pushw
dec
add
stc
and
aaa
movs
xor
ret
mov
test
mov
jnp
outs
sbb
add
xchg
add
popa
xchg
inc
stos
adc
xor
pop
or
lea
add
adc
sub
push
fmul
sub
or
lahf
shl
imul
mov
cs
or
sub
add
sub
adc
mov
lds
cmps
mov
cmp
add
idiv
push
sti
dec
xchg
dec
pop
adc
ret
dec
scas
push
leave
movs
jmp
test
mov
aad
movs
mov
retf
dec
test
test
add
inc
inc
pop
call
or
aaa
mov
aam
inc
gs
xor
push
out
jbe
dec
mov
popf
punpcklbw
imul
sbb
movs
inc
loop
jb
ins
adc
not
xor
push
ins
adc
and
adc
bound
cdq
mov
xor
scas
mov
cmp
push
cmp
fst
dec
pop
js
jge
hlt
xor
shl
sar
xchg
int
and
add
adc
es
mov
sub
adc
daa
inc
and
inc
pop
push
pop
pop
xchg
adc
xchg
int3
pusha
add
enter
adc
call
add
inc
(bad)
xchg
inc
enter
inc
adc
inc
leave
sub
mov
int3
fadd
sub
fcom
sub
adc
jae
adc
xor
or
dec
addr16
mov
fcomi
jmp
hlt
add
bound
ins
adc
xlat
cmps
xor
arpl
lods
not
aam
pop
adc
inc
add
cmp
fiadd
xchg
cmp
icebp
cmp
outs
adc
xor
jl
ja
or
fidivr
adc
fbld
inc
sub
out
mov
push
push
xor
pop
or
and
fsub
je
and
nop
ins
sbb
sub
add
sti
cmps
hlt
inc
mov
sbb
mov
mov
mov
pop
push
and
sbb
and
mov
jno
daa
inc
movs
(bad)
popa
or
adc
push
dec
push
inc
mov
mov
cmp
or
add
xchg
lods
pop
mov
xor
adc
cwde
nop
rcr
adc
icebp
popa
enter
mov
lahf
jg
inc
adc
lods
adc
nop
(bad)
push
nop
mov
dec
mov
push
add
inc
mov
add
cmp
dec
adc
jg
rol
adc
or
pop
aaa
mov
sbb
jbe
ins
adc
test
and
aas
cmp
cmp
nop
aas
adc
rep
ins
xor
(bad)
cmp
mov
mov
mov
movs
push
pusha
out
xor
dec
imul
or
lahf
adc
mov
xchg
xor
in
dec
mov
mov
push
xor
lds
pusha
mov
sbb
add
clc
cs
cmp
les
aam
shl
ins
mov
add
enter
xor
pop
lahf
aam
leave
mov
xlat
sbb
mov
jl
nop
mov
mov
mov
mov
movs
fs
dec
mov
xchg
push
sub
add
fdivr
mov
or
cli
cld
add
aas
sbb
mov
cmps
scas
sbb
sbb
xor
fdiv
xor
ffreep
arpl
jno
fild
adc
dec
jge
cs
les
clc
daa
pop
shl
adc
rol
jo
ror
and
dec
adc
push
mov
sar
(bad)
iret
or
or
and
or
dec
add
pop
pusha
push
cmp
add
pop
fs
leave
mov
adc
rol
or
das
iret
ins
adc
dec
call
sbb
test
adc
jo
jo
add
xchg
nop
cwde
fmul
es
clc
and
jbe
fwait
shr
pop
and
fs
int3
pop
push
sbb
dec
cmp
jecxz
push
push
xor
sub
nop
les
jae
outs
xchg
sub
pop
or
xchg
add
add
(bad)
test
push
addr16
nop
xchg
fdivr
mov
dec
sbb
mov
add
mov
cdq
push
fstp
mov
and
aas
xor
icebp
mov
pop
icebp
mov
push
fbstp
jne
sub
in
addr16
stos
fs
inc
movs
mov
aas
lahf
or
mov
inc
loop
mov
adc
pop
stc
add
mov
inc
pop
mov
or
fs
mov
and
ins
mov
or
adc
and
cmps
mov
out
inc
loopne
inc
xor
add
adc
in
popf
cmp
inc
mov
xchg
cli
push
jge
cmp
jg
mov
sbb
push
inc
and
jle
mov
inc
test
sub
jmp
dec
sub
fild
dec
xor
clc
ret
add
(bad)
add
cli
lods
xchg
add
inc
mov
mov
sub
add
ja
push
xor
mov
int3
out
mov
sbb
dec
add
cdq
jl
sbb
data16
sub
inc
pop
cmc
or
(bad)
cdq
inc
out
call
dec
shr
pop
push
movs
cmps
mov
cmp
int3
add
fcmove
mov
sbb
sub
aad
sbb
mov
cmp
adc
imul
push
shr
retf
imul
pop
jp
jo
or
xor
cmps
fld
sbb
fs
ins
sar
cmps
fstp
daa
cmp
inc
adc
sti
cmp
xor
xchg
sub
rol
push
and
mov
jne
sbb
mov
mov
inc
nop
nop
cmp
sahf
or
ror
push
or
push
cmp
or
ds
inc
mov
fs
cmc
cmp
push
cmp
mov
add
inc
in
dec
js
test
pop
ds
mov
sub
fwait
dec
sbb
idiv
cmps
cmp
imul
or
cmp
or
mov
cmp
add
hlt
je
or
loop
push
call
pop
lea
sbb
add
gs
add
or
loopne
push
xor
mov
cmp
hlt
inc
lock
rol
or
sbb
jnp
adc
sbb
int3
xor
inc
and
and
sbb
aas
test
xchg
cmp
adc
mov
or
mov
xchg
xchg
add
call
mov
jmp
mov
push
sbb
test
xor
pop
jmp
cmp
dec
in
ja
and
fs
xor
or
mov
adc
mov
stos
push
adc
adc
jo
stos
sbb
out
and
test
and
inc
inc
adc
inc
add
ret
(bad)
sub
and
popa
call
(bad)
add
ror
inc
dec
mov
xor
inc
scas
inc
cld
sub
cmps
add
movs
sbb
jno
call
xchg
lods
ja
add
daa
stos
and
addr16
cmp
fldcw
dec
movs
fiadd
adc
inc
adc
inc
lea
push
mov
push
out
test
push
cmp
push
inc
fsub
mov
nop
push
and
dec
or
jns
es
and
pop
cwde
adc
add
ins
mov
pop
inc
adc
sub
ret
lods
or
and
adc
imul
test
xchg
std
popa
aam
neg
in
mov
pop
jnp
retf
inc
repnz
rol
adc
sti
add
rcl
loopne
movhps
and
inc
and
pop
sub
jle
inc
push
sub
push
push
push
push
pop
and
dec
mul
pop
icebp
popa
or
jne
les
gs
(bad)
push
in
sub
or
pop
pusha
lahf
fld
ins
das
dec
lock
add
mov
xor
in
cld
xor
adc
stc
inc
and
fst
jae
(bad)
out
push
or
adc
mov
xchg
pop
add
xor
mov
sub
xchg
push
das
adc
xor
fadd
mov
cmp
mov
mov
js
aam
ss
cmp
push
loope
shl
push
cmp
cmp
imul
sbb
imul
mov
pop
test
mov
xor
inc
inc
enter
pop
and
lea
mov
or
push
inc
adc
adc
or
cdq
sar
jmp
mov
sbb
or
aas
inc
gs
loop
or
mov
and
xlat
and
push
sbb
ds
dec
add
mov
mov
shl
xchg
inc
arpl
ins
sub
adc
add
sahf
mov
cs
and
mov
jno
pusha
outs
int3
inc
jecxz
and
call
in
mov
inc
fsubr
or
lock
pop
call
push
bound
push
mov
sbb
add
or
hlt
cmps
dec
mov
sub
add
or
dec
test
pop
mov
adc
add
push
cmp
cmc
push
adc
push
mov
stos
sub
or
xchg
mov
test
xor
pop
sub
lea
and
test
int
stc
mov
das
or
sbb
and
(bad)
push
sbb
pop
sbb
test
jg
adc
or
jle
out
and
xlat
fwait
add
and
ss
sub
mov
mov
cmp
adc
adc
rol
and
jns
cmp
fsubrp
lock
in
jge
or
jne
rol
ins
inc
adc
les
jae
ins
lahf
push
je
aaa
into
or
dec
pop
mov
leave
add
outs
(bad)
pop
jg
mov
mov
inc
add
loope
xor
dec
cli
adc
push
retf
and
dec
jns
fdiv
add
loopne
shrd
sub
aam
pop
inc
idiv
xchg
xchg
clc
cmp
mov
push
ds
popa
lds
out
out
aaa
hlt
mov
lods
cmp
xchg
inc
inc
push
add
add
xchg
jl
(bad)
fsubr
inc
inc
cs
push
(bad)
out
mov
xchg
mov
cwde
mov
jl
je
xchg
jg
or
push
shr
jo
(bad)
data16
push
ror
out
les
or
fnstsw
push
in
mov
(bad)
imul
call
aam
pop
add
pop
sbb
push
iret
cmps
push
fs
xor
xchg
lock
add
daa
pusha
sti
adc
shl
cmp
je
adc
cmp
sbb
pusha
dec
daa
pop
stc
clc
inc
adc
sub
es
sbb
mov
mov
xchg
cmp
rol
mov
ins
sbb
add
jmp
mov
(bad)
(bad)
aad
sub
shr
icebp
test
pop
mov
icebp
pop
xor
dec
pop
add
push
mov
xchg
enter
cmp
and
(bad)
or
add
mov
nop
xlat
adc
and
pop
mov
ds
xchg
or
or
pop
repnz
push
xor
add
pop
imul
dec
clc
xlat
rol
cwde
repnz
sub
lods
xor
and
mov
add
jb
add
popa
and
hlt
test
inc
push
lock
lds
pop
aas
or
push
push
mov
pop
sbb
xlat
inc
adc
cmp
mov
push
daa
mov
fdivr
add
add
jne
and
jns
adc
pop
mov
sbb
test
adc
xchg
cmp
aaa
dec
jno
mov
fadd
jne
and
xchg
push
cmps
gs
xor
mov
sbb
(bad)
sub
push
mov
fsub
mov
mov
clc
cmp
adc
mov
js
sar
or
push
and
push
(bad)
lea
pop
jo
mov
sbb
es
dec
call
nop
adc
inc
cmp
xchg
ret
push
push
push
inc
add
and
mov
mov
mov
inc
add
inc
es
jmp
and
lods
mov
xchg
nop
push
adc
add
outs
xor
jmp
popa
inc
int3
mov
or
fld
jmp
inc
daa
fdiv
sbb
inc
fld
adc
gs
or
movs
rol
out
rcr
fsubrp
or
inc
or
sbb
enter
iret
xor
mov
mov
xor
sbb
cmp
pop
adc
in
mov
fmul
popa
mov
push
jno
sbb
and
dec
or
push
dec
push
jl
fcmovnbe
les
and
aas
inc
sbb
(bad)
je
sub
sub
push
and
and
addr16
loope
sbb
or
cmp
xor
push
mov
add
(bad)
mov
retf
and
dec
bound
inc
xchg
cmp
faddp
shr
adc
add
pop
dec
pop
pop
mov
and
pop
scas
leave
les
xchg
mov
mov
outs
dec
and
adc
pop
in
int3
rol
pop
cmps
int3
cmp
bound
and
push
add
movaps
fwait
mov
mov
xchg
xor
ret
mov
mov
shr
mov
and
push
xchg
dec
mov
ss
not
mov
push
and
dec
cmps
xchg
xchg
jnp
setb
cmp
inc
pop
and
lds
adc
ss
sbb
push
je
mov
add
jnp
lock
adc
push
stos
mov
sbb
jno
sub
inc
je
daa
(bad)
xchg
pop
jne
cmp
dec
cmp
xor
daa
push
int3
lods
loopne
mov
addr16
mov
pop
imul
mov
jp
adc
cmp
ror
sub
sbb
push
pop
test
les
fnstcw
das
loop
cld
aas
cmp
inc
adc
std
jnp
xchg
sbb
jns
add
xor
mov
jo
sub
loopne
add
js
fstp
adc
inc
inc
sbb
into
cmps
outs
pusha
les
pop
add
add
adc
lods
pop
inc
lds
xchg
push
pop
shl
xchg
jbe
jge
sbb
or
mov
loopne
jno
pop
mov
or
push
mov
adc
add
or
push
push
inc
push
div
push
sub
mov
and
sub
and
shr
push
push
mov
pop
pop
inc
int
mov
data16
mov
in
mov
imul
fs
and
and
mov
cmp
mov
and
mov
clc
pop
test
repz
les
leave
ins
or
push
loopne
adc
xor
sar
stos
loopne
add
imul
add
or
loope
dec
popa
aas
or
pop
fsubr
and
add
sub
mov
ret
outs
mov
aad
in
dec
xchg
aad
ret
pushf
jmp
rol
adc
inc
push
jnp
push
pop
pop
mov
mov
dec
sbb
mov
xor
pop
ret
jb
and
jbe
jp
ret
xor
and
fcomp
sub
sbb
lods
mov
mov
out
mov
and
sub
mov
dec
mov
stc
repz
push
mov
aaa
lock
mov
inc
ret
jb
pushf
sub
test
icebp
or
add
pop
adc
inc
ja
and
in
jmp
gs
lods
cld
mov
add
add
(bad)
or
mov
std
mov
jmp
clc
xchg
cli
es
(bad)
pop
dec
dec
jnp
fscale
sbb
mov
mov
je
mov
fcomp
test
push
push
imul
cmp
sar
xchg
adc
bound
dec
repz
adc
pusha
movs
jmp
lock
pop
imul
pop
pushf
je
xor
jmp
jae
adc
jae
mov
into
sub
sub
push
push
ficomp
jbe
mov
add
out
and
and
xchg
jne
mov
shl
sub
inc
pop
push
pop
cmp
lahf
xchg
xor
push
push
clc
inc
scas
and
pop
push
lods
mov
stos
loop
nop
add
ret
call
dec
pop
scas
ret
mov
sbb
lds
xor
in
enter
pusha
dec
add
cmc
inc
loope
test
test
retf
in
lds
movs
dec
scas
jnp
dec
sahf
(bad)
adc
fwait
mov
cmps
lock
ror
add
sbb
inc
add
mov
mov
test
enter
pop
mov
jmp
mov
jmp
sbb
mov
or
jle
(bad)
mov
mov
mov
dec
retf
(bad)
shr
push
ins
bound
pop
sbb
sbb
or
lea
push
lea
lea
cmps
pop
call
test
jmp
sbb
(bad)
out
mov
add
jne
adc
or
je
inc
dec
jecxz
call
adc
je
lea
ror
outs
std
test
jmp
test
add
inc
test
sbb
pop
stos
adc
xadd
and
jmp
mov
pop
mov
mov
loope
or
dec
jmp
or
not
adc
or
sbb
mov
adc
and
fst
mov
mov
and
push
aas
sahf
sub
test
sub
lods
and
jle
adc
mov
iret
sub
sbb
dec
adc
ror
add
pop
pop
ins
and
sub
retf
xor
sbb
sbb
(bad)
in
or
xchg
inc
das
sbb
push
sti
es
and
loopne
xor
cmp
sbb
fst
mov
jbe
xchg
mov
(bad)
jle
push
lods
repz
and
fild
cmp
and
ja
sbb
xchg
mov
sub
sub
pusha
sub
jmp
dec
pop
xor
jmp
mov
xor
popa
fisttp
inc
fs
push
dec
sbb
inc
lock
les
jmp
inc
or
push
cs
xor
or
xchg
sbb
iret
or
out
adc
sub
push
dec
jne
in
and
adc
mov
retf
mov
test
xchg
and
push
andnps
lea
add
pop
mov
or
fwait
les
or
xor
call
sbb
test
fcomp
stos
or
aam
in
mov
jl
mov
fild
and
adc
repnz
aaa
sar
sbb
rcl
outs
rcl
shr
push
imul
pop
fist
adc
movs
or
push
cmp
and
ret
push
dec
adc
pop
or
out
add
pop
dec
add
add
inc
loope
mov
pop
inc
nop
aad
fcmovbe
cs
add
ficomp
push
mov
push
clc
imul
dec
fmul
ror
sub
add
jo
fmul
scas
push
xlat
mov
xchg
addr16
ffreep
dec
aam
aam
loop
cmc
inc
xchg
adc
fndisi(8087
or
adc
lock
mov
cdq
sbb
cmp
popa
popa
add
dec
lahf
pop
mov
sub
inc
inc
cmp
jne
dec
push
adc
jmp
add
mov
cmp
pop
pop
bound
add
or
push
cmp
js
test
cmp
je
inc
scas
dec
popf
jnp
cmp
jne
int
in
and
xchg
add
imul
ja
test
adc
mov
outs
pmaxub
push
ds
cmp
xor
cmp
and
(bad)
pop
inc
aam
out
daa
cmps
(bad)
stos
movs
enter
dec
or
sub
ds
adc
call
push
pop
imul
cmp
jo
xchg
mov
mov
mul
lods
mov
adc
lahf
hlt
dec
loope
and
and
sub
add
iret
jnp
sbb
jge
(bad)
fiadd
jmp
or
fldcw
adc
and
add
xlat
and
les
lock
pop
xor
mov
jne
push
push
les
cmc
push
jmp
and
add
jle
pop
sbb
loopne
jns
pop
arpl
xchg
js
sbb
push
push
(bad)
pop
fwait
js
mov
fwait
inc
add
or
ins
ret
add
js
dec
add
movs
popa
mov
dec
push
pushf
push
mov
or
clc
test
or
xchg
jge
xor
lock
jbe
hlt
sbb
pop
mov
pusha
sub
ss
(bad)
add
pop
cmp
lahf
inc
jne
mov
add
sub
es
jne
fldcw
popa
das
sub
and
iret
add
or
inc
xchg
fs
leave
dec
inc
cmp
nop
adc
pop
data16
and
xor
add
stc
inc
mov
das
cs
push
push
mov
or
or
dec
and
loope
lahf
lea
cmp
mov
dec
je
js
nop
dec
or
adc
loop
xor
mov
jge
pop
popa
(bad)
and
retf
fs
add
jno
push
scas
xlat
mov
cmovb
(bad)
pop
sub
cmp
fild
cwde
call
adc
mov
or
cs
shl
ins
mov
xchg
and
sbb
sub
test
out
rcl
cmp
fbld
and
arpl
add
inc
imul
or
add
or
stos
jns
out
pop
jnp
pop
mov
cmp
mov
dec
je
xor
std
push
cmp
mov
cmp
pop
mov
adc
mov
fnstsw
xor
test
adc
dec
stc
mov
inc
ss
ficom
xor
fmul
mov
ds
cmp
sub
mov
fist
cmp
cmc
mov
cmp
add
repnz
imul
fistp
push
or
or
pusha
push
mov
and
sbb
shl
aaa
push
shr
pop
in
sbb
dec
lods
pop
js
les
adc
imul
enter
(bad)
in
pop
adc
cwde
sub
neg
mov
push
mov
ret
jnp
lock
sub
imul
xchg
push
in
adc
pop
fs
xchg
or
jmp
jl
xor
jnp
ret
jne
push
fstp
xchg
pop
rcl
(bad)
in
aam
jmp
sub
sub
inc
pusha
jne
adc
pop
rcr
dec
sbb
dec
ror
and
pop
ror
ja
ja
sub
dec
enter
mov
cmp
leave
sti
nop
rcr
cmp
or
call
test
add
jg
ret
jmp
jmp
inc
or
dec
mov
cmp
or
ficom
mov
inc
out
mov
dec
bound
mov
pop
out
sti
add
dec
jne
gs
xchg
ror
or
inc
in
test
and
and
(bad)
jne
mov
lods
mul
daa
mov
pop
adc
sub
xor
retf
arpl
mul
leave
shl
rcr
pop
mov
pop
pop
add
ret
or
sub
es
inc
movs
stos
daa
xchg
xor
jmp
mov
pop
push
push
sar
popa
or
or
mov
sub
mov
nop
dec
or
stc
inc
pop
mov
pop
and
push
cmp
add
mov
pop
fwait
add
adc
add
xor
imul
sbb
imul
sub
dec
xor
mov
or
or
shl
xor
and
sub
inc
add
fisttp
nop
div
in
sbb
add
call
dec
and
inc
add
je
cs
adc
gs
add
pusha
mov
movs
pop
mov
aad
inc
fadd
xchg
test
add
add
or
push
xchg
inc
pop
imul
ds
jmp
sub
or
sub
add
sbb
push
xor
sub
cmp
adc
jmp
cmps
lods
mov
inc
invd
jl
fimul
jmp
xor
xlat
(bad)
lds
es
inc
mov
jge
les
pop
inc
jmp
enter
mov
add
xchg
add
dec
(bad)
pop
mov
retf
mov
sub
test
sub
mov
sbb
inc
rcr
fdivr
cmp
pusha
test
add
aas
xchg
inc
shl
rep
jmp
(bad)
xor
jo
leave
push
dec
rol
les
xlat
fistp
inc
aad
or
or
stc
fcmovbe
mov
and
adc
ret
in
push
mov
xor
mov
(bad)
and
dec
cli
test
inc
add
inc
inc
or
add
mov
inc
cmp
(bad)
retf
ins
xchg
mov
clc
fnstsw
xor
sub
push
lds
inc
dec
arpl
cdq
or
sbb
and
jnp
ror
and
in
mov
push
pop
add
test
loop
faddp
fstp
stos
or
dec
pop
mov
jmp
lds
sub
xchg
fld
push
sub
cmps
add
inc
enter
lods
push
cs
mov
push
or
jno
jle
push
pop
adc
in
mov
outs
push
inc
ret
pusha
or
pushf
push
les
mov
dec
and
(bad)
shl
ja
xchg
or
xor
lock
or
push
xchg
es
sub
dec
adc
ret
in
mov
mov
or
movs
sub
sub
or
xor
out
add
mov
shr
imul
pop
adc
adc
ss
cmp
test
outs
jg
inc
xor
cmc
mov
sub
or
sbb
xchg
daa
repz
in
or
inc
cmp
and
jno
adc
mov
das
mov
pop
xchg
cmp
retf
add
cmc
inc
adc
xor
(bad)
xchg
es
cdq
cmc
push
xchg
add
lds
retf
pop
add
xlat
add
loope
pop
cs
imul
in
xchg
movs
aad
xor
leave
pop
push
inc
cwde
addr16
xchg
rol
mov
push
adc
or
pop
rcl
(bad)
pop
outs
xchg
add
jne
outs
adc
(bad)
xchg
sub
pop
sbb
xchg
xchg
cmovle
sub
vmwrite
mov
and
or
adc
rol
out
add
fidivr
cld
pop
fcomp
repz
adc
mov
cmps
loope
sub
popa
pop
sub
inc
mov
adc
cli
mov
add
dec
mov
fcomp
fsubr
mov
xchg
inc
add
pusha
sub
sub
in
inc
push
aam
rcl
loope
push
cmp
and
enter
and
and
cmp
xchg
sub
movs
stc
stc
inc
int3
jmp
add
clc
cmp
inc
dec
call
inc
pop
and
sbb
in
xor
test
push
sbb
clc
mov
cdq
jbe
mov
adc
add
inc
call
dec
push
neg
jne
ins
(bad)
push
lods
or
hlt
stos
inc
call
adc
adc
xor
sub
mov
adc
movs
test
and
cmp
fild
fs
adc
mov
in
sbb
enterw
sahf
inc
add
sub
push
or
pop
rcl
pop
adc
test
push
aam
mov
lea
test
mov
sbb
rcl
inc
and
mov
and
and
ins
int3
mov
sub
mov
cmps
jb
push
shl
adc
in
sub
mov
fiadd
movs
shr
jp
push
adc
push
xor
fiadd
movs
dec
and
les
ds
loopne
sbb
sub
inc
cmp
inc
adc
adc
cmp
dec
inc
ret
js
clc
std
push
test
and
cmp
add
fldenv
push
rol
pop
xchg
or
in
sbb
jle
lods
push
cli
(bad)
retf
jmp
xchg
cmps
stc
jge
fsub
pop
xor
loope
js
add
aas
or
push
xchg
xor
or
cli
ret
outs
add
pop
pop
pop
retf
sub
js
mov
mov
(bad)
adc
fld
gs
and
jecxz
aad
lods
mov
inc
lods
inc
cmps
aad
or
mov
hlt
jl
mov
stos
or
jb
jmp
push
inc
sub
adc
pop
jl
loopne
push
adc
push
mov
sub
jg
loope
and
movs
push
cli
daa
je
imul
add
test
dec
sbb
rcl
or
nop
or
scas
(bad)
sti
sub
enter
add
and
loopne
mov
mov
imul
or
xchg
and
fs
sbb
inc
pop
mov
xchg
or
mov
cmp
dec
and
push
shl
sar
mov
pop
jp
ss
cmp
inc
push
clc
or
sub
lods
xchg
pop
retf
mov
mov
push
loopne
test
xor
jmp
pop
inc
pop
in
jnp
imul
imul
mov
sbb
xor
cs
lahf
(bad)
sub
leave
xchg
stos
jmp
push
rcl
pop
das
(bad)
shl
es
add
cmp
inc
pop
jne
mov
loope
(bad)
add
push
push
or
adc
ret
inc
jae
inc
inc
push
sbb
ret
cmc
fdiv
fs
shl
push
push
pushf
dec
jmp
ret
adc
test
xchg
stos
movs
jecxz
add
sbb
sbb
push
dec
inc
imul
xor
nop
rep
lock
or
pop
push
lock
cmps
mov
ins
dec
and
ss
in
add
sbb
iret
jmp
test
mov
lar
arpl
(bad)
shl
pop
dec
jno
sahf
inc
in
das
(bad)
mov
xchg
jmp
in
add
jnp
jnp
stos
dec
pusha
bound
ins
mov
mov
adc
push
ins
sub
sbb
sub
inc
pop
mov
fld
adc
xor
push
inc
ror
and
jp
js
and
ret
mov
and
add
xlat
sbb
or
and
pop
add
add
jb
sti
sti
xchg
xchg
int
or
push
pop
call
add
sahf
mov
imul
inc
fsubr
cmp
es
xor
inc
mov
push
(bad)
je
pop
dec
dec
mov
ins
frstor
or
and
xor
mov
in
sub
or
fwait
add
xchg
outs
sub
mov
popa
or
retf
pop
ss
mov
or
mov
jns
adc
sub
jge
pop
cmp
jmp
ss
data16
mov
fs
sbb
jne
imul
adc
inc
pop
sbb
fbstp
mov
jno
xor
sbb
aam
and
das
ret
cwde
fadd
inc
xor
mov
int
xor
xor
adc
mov
sbb
cmp
sub
jmp
imul
cdq
jmp
test
sbb
inc
cdq
popa
add
test
inc
fnstcw
sbb
in
pop
jmp
and
xchg
push
add
dec
loopne
(bad)
sbb
pop
(bad)
xor
and
stos
push
clc
icebp
cmp
adc
add
daa
mov
ins
addr16
or
or
lea
sub
imul
cmps
(bad)
loopne
mov
push
or
add
je
mov
xchg
add
loopne
and
jb
xor
loopne
xor
imul
sbb
inc
or
lods
add
pop
add
add
cmp
xchg
xchg
or
add
sbb
add
xor
sbb
lea
outs
cmp
jbe
add
or
int
lds
(bad)
cmps
mov
ja
xor
or
mov
pusha
pop
inc
and
inc
out
cmp
mov
cmp
gs
in
xchg
inc
inc
sbb
xor
ins
(bad)
add
pop
cld
mov
push
int
sub
add
cmp
sub
test
mov
sar
fwait
pop
in
int3
inc
mov
mov
ins
fld
fs
jae
fcomp
je
gs
xchg
pop
jge
inc
xor
or
ret
imul
dec
cmp
sbb
or
add
ins
inc
and
or
sub
cmp
ret
pop
repnz
pop
leave
aaa
xor
mov
cmp
loope
nop
lods
push
retf
adc
fdivp
pushf
test
cmp
je
fdiv
cmp
push
add
mov
pop
ins
cwde
and
pop
pop
inc
xchg
test
(bad)
mov
pop
xor
movs
dec
add
in
and
sub
adc
xchg
ror
fs
clc
mov
repnz
pop
push
or
push
and
add
push
jbe
imul
dec
test
test
cmp
dec
mov
mov
loopne
jmp
add
loope
out
cmps
retf
call
jmp
out
add
sub
mov
add
shr
xchg
push
(bad)
jmp
mov
or
mov
jo
mov
ret
pop
xor
mov
ja
rol
dec
adc
jne
adc
dec
lods
lock
push
repz
pop
mov
leave
push
and
not
adc
hlt
sbb
lods
sub
mov
js
pop
cmps
push
ror
stos
pop
xchg
jae
xor
push
mov
or
imul
ins
cmps
push
adc
imul
jo
dec
outs
xchg
add
or
shl
push
or
jg
pop
das
jns
xor
cmc
sub
push
or
push
test
push
sbb
ret
inc
push
lock
outs
rol
sbb
sbb
sbb
div
inc
mov
mov
pop
imul
xor
sti
xor
jl
sbb
lea
sub
std
dec
inc
xor
dec
mov
xchg
js
xchg
daa
mov
in
shr
push
icebp
mov
mov
icebp
or
mov
push
mov
jge
mov
push
and
dec
and
lock
or
adc
or
les
inc
pop
add
mov
(bad)
(bad)
shl
outs
mov
aad
xor
inc
xor
adc
mov
xlat
es
mov
jo
pusha
call
or
call
mov
shr
xor
jae
cld
enter
jl
lods
add
idiv
dec
add
je
jno
or
cmp
xor
test
mov
test
sbb
jbe
pushf
mov
(bad)
addr16
es
dec
xchg
mov
je
(bad)
or
cmps
cmp
das
mov
fld
jae
mov
es
pop
push
pop
cmp
scas
pusha
(bad)
or
add
dec
or
add
or
popa
lahf
xchg
cdq
retf
sbb
pop
jmp
mov
retf
in
scas
ja
sub
or
idiv
loop
jge
les
ja
sub
xor
sub
inc
fcom
push
xchg
push
or
sbb
rol
daa
mov
sbb
pop
sub
xchg
inc
cmp
addr16
jl
mov
jmp
add
sbb
mov
push
cmps
add
das
ds
pop
jb
pusha
cmps
or
jmp
fwait
jg
push
arpl
scas
pop
iret
dec
gs
and
ret
mov
adc
sbb
mov
mov
pusha
pushf
xor
dec
cld
daa
daa
sub
mov
retf
or
hlt
mov
mov
and
cmp
dec
nop
jg
lds
lock
xor
jl
add
jg
or
cwde
mov
hlt
movs
adc
xchg
mov
jne
mov
(bad)
stc
sbb
pop
and
loop
push
mov
dec
lods
int
sar
or
bound
push
pop
out
jg
clc
clc
adc
jae
adc
repnz
jge
je
je
pop
push
sub
adc
or
test
outs
retf
inc
inc
xchg
clc
mul
add
push
adc
xor
adc
and
out
repnz
push
test
sbb
or
mov
popf
clc
ret
gs
or
inc
test
ret
sbb
add
sub
dec
pop
dec
inc
mov
pop
jae
push
mov
lock
fdivp
add
or
and
rol
adc
xchg
ret
mov
(bad)
ror
jne
add
dec
jne
pop
out
sbb
sub
shr
inc
cmp
call
ficomp
push
jecxz
movs
cmp
xor
sbb
lods
test
lea
dec
sar
adc
cmps
and
push
aad
into
rcr
mov
pusha
dec
fisttp
jno
scas
xor
fsubr
xor
les
dec
adc
pop
cmc
or
test
mov
push
(bad)
push
mov
jl
jae
add
fadd
mov
inc
pop
cmp
sbb
fwait
mov
retf
sub
(bad)
ret
cdq
ss
fcomp
shr
cmp
ret
cwde
sub
add
adc
xchg
and
sets
pop
aaa
or
(bad)
push
inc
mov
fwait
or
and
ja
cmp
dec
clc
jge
adc
xchg
adc
jmp
ds
sub
jmp
add
into
test
jl
aaa
mov
add
into
xchg
pushf
mov
mov
lods
mov
test
push
ins
test
aam
sar
mov
daa
adc
or
add
sbb
mov
or
pop
call
cld
cwde
mov
ins
add
aam
outs
rcl
push
mov
or
lahf
outs
cmp
aam
fimul
inc
sub
dec
mov
add
or
jo
jb
push
and
xchg
mov
enter
adc
jmp
sbb
ins
cwde
or
retf
and
xor
sub
aaa
cmp
jno
xchg
je
add
loope
or
and
ja
retf
jo
sbb
test
sub
jbe
stos
sub
add
push
jb
xor
ret
sbb
mov
or
pop
loop
cmc
sbb
or
and
test
dec
mov
(bad)
es
push
je
xor
push
mov
loope
pop
aad
push
push
add
in
es
mov
mov
xchg
test
dec
in
push
mul
enter
inc
popf
xchg
jg
push
repnz
add
call
and
mov
inc
pop
pop
pop
and
jb
push
cmp
add
jb
jl
push
fwait
nop
es
fst
rcl
xor
pusha
lds
pop
call
mov
mov
inc
mov
pop
or
rcl
nop
push
and
leave
leave
dec
dec
dec
dec
dec
stos
mov
test
adc
push
sbb
dec
dec
xor
adc
push
push
inc
push
xor
call
xor
pop
adc
mov
stos
push
imul
jo
push
pop
iret
or
cmc
or
mov
imul
(bad)
cs
dec
pop
push
retf
ret
inc
shl
dec
sbb
xchg
sub
dec
ins
sbb
push
out
inc
pop
shl
push
xchg
leave
les
add
pop
adc
mov
mov
out
jl
dec
call
cmp
inc
jmp
aas
xchg
mov
or
(bad)
mov
rcr
scas
mov
je
xor
add
or
jle
jmp
call
mov
in
cmp
pop
xor
jb
call
mov
rol
pop
(bad)
loopne
xor
xor
aas
(bad)
sahf
inc
cmp
jne
adc
mov
lock
push
pusha
in
pop
xchg
adc
fild
add
(bad)
shl
mov
jp
sar
adc
dec
or
jo
(bad)
movzx
or
fcomp
and
loopne
scas
pop
push
push
and
mov
lds
jo
mov
cmp
(bad)
fbld
xor
out
leave
enter
arpl
(bad)
push
pop
fbstp
jno
xchg
and
jae
or
add
jbe
sub
lock
jle
xchg
scas
fadd
jmp
imul
fs
test
cmp
imul
push
mov
sar
gs
sub
mov
movs
pop
pop
add
sub
jo
loope
xchg
rol
xor
add
call
inc
in
cld
adc
jno
inc
loope
gs
push
mov
inc
jne
out
jno
inc
sub
rcl
pop
mov
and
mov
inc
adc
lea
stc
mov
xchg
push
and
and
and
(bad)
adc
dec
test
mov
add
jne
add
and
dec
push
and
ror
pop
seta
data16
fild
xor
lods
test
lea
cmp
ds
sbb
in
gs
pop
lods
cmps
out
pop
jmp
enter
push
(bad)
aas
add
push
cmc
adc
mov
ds
add
dec
mov
inc
bound
push
dec
xchg
mov
push
sub
push
enter
mov
mov
mov
inc
nop
inc
sub
jno
sub
sub
stos
movzx
or
shl
and
push
movsx
rol
push
mov
inc
dec
dec
leave
shl
sar
rol
mov
clc
sbb
pop
mov
movs
ja
inc
or
scas
fwait
cmps
add
push
test
mov
daa
mov
pop
addr16
lahf
test
btr
xor
push
sub
push
dec
or
adc
fnstcw
sbb
xchg
rcr
adc
test
and
sbb
sub
test
jmp
js
movs
add
sub
fisub
inc
add
mov
fwait
nop
pop
add
pop
nop
arpl
(bad)
mov
pushf
in
mov
add
leave
mov
std
nop
cmp
dec
and
dec
scas
shr
sub
pop
scas
daa
loopne
mov
mov
mov
dec
test
pop
jo
fnstenv
mov
pop
mov
ror
xor
imul
push
es
xchg
add
jg
pop
xchg
add
inc
push
pop
outs
iret
add
mov
lahf
out
popa
adc
and
dec
jmp
push
fwait
mov
dec
(bad)
adc
add
add
push
inc
add
cmp
addr16
fstp
sbb
inc
data16
add
pop
or
lea
daa
lods
sub
fsub
sub
fcom
movs
hlt
rcl
sub
push
int
ret
sub
xchg
xchg
jnp
cdq
jl
dec
cmp
xor
dec
sub
inc
mov
sub
pop
add
pop
dec
sbb
jmp
cmp
dec
push
push
jo
scas
and
ss
aas
lds
mov
cmc
sbb
cs
inc
in
inc
or
inc
movs
add
cmp
xchg
popa
arpl
ja
daa
xor
jge
pop
sbb
xor
cmp
jo
pop
or
(bad)
cmp
adc
or
jne
hlt
sub
or
inc
call
push
cmp
mov
jae
test
inc
sub
push
mov
and
clc
push
add
push
fcmovne
rcr
mov
inc
and
inc
or
xor
lock
sub
bound
xchg
add
sbb
je
shl
rol
xor
clc
inc
dec
imul
ret
inc
fbstp
pop
stos
das
ins
xchg
jne
mov
dec
mov
lods
out
sbb
ja
adc
fwait
clc
push
or
fistp
cmp
cmp
arpl
push
sbb
push
mov
(bad)
push
pop
hlt
je
sub
clc
push
adc
or
jg
(bad)
cmp
push
test
xor
sbb
push
lock
fisubr
inc
sub
push
mov
inc
ins
xor
xchg
push
int3
shl
js
outs
fisubr
les
(bad)
mov
cmp
scas
mov
ds
adc
or
pop
nop
les
cmp
dec
lock
addr16
rcl
adc
movs
std
xchg
lahf
clc
push
and
xor
add
add
leave
inc
or
mov
sub
mov
push
aas
push
jo
pop
adc
cmp
add
int
shl
inc
sbb
(bad)
jl
xor
imul
xchg
lds
xchg
mov
dec
dec
mov
addr16
push
stos
xchg
dec
xchg
add
or
and
cmp
pop
inc
jne
jns
sbb
inc
xor
push
dec
push
pushf
mov
and
pop
gs
and
add
(bad)
fld
mov
xchg
rcl
fistp
add
add
sub
mov
mov
or
push
call
or
sar
test
pop
and
xor
adc
call
pop
(bad)
mov
adc
sub
cmp
rol
mov
jo
or
enter
dec
dec
push
mov
add
or
xor
les
nop
daa
pop
or
jbe
cmp
or
inc
cli
scas
pop
xor
jae
xor
(bad)
das
mov
cmp
xor
adc
push
inc
fwait
pop
(bad)
ds
dec
call
cmp
pop
mov
push
xor
or
je
idiv
test
dec
and
(bad)
push
iret
je
call
xlat
xchg
scas
mov
pop
gs
mov
or
sbb
je
jmp
lds
loop
cmp
call
scas
mov
gs
cdq
or
fld
fld
and
add
bnd
dec
loopne
sbb
push
push
loope
jmp
mov
mov
and
mov
test
nop
mov
dec
jne
mov
mov
inc
pop
xchg
pop
mov
mov
adc
cmp
ja
mov
xor
xor
(bad)
aas
add
cwde
push
adc
cs
jmp
mov
pop
cld
ss
push
mov
(bad)
pop
push
mov
mov
jg
dec
inc
inc
dec
leave
cld
or
pop
and
adc
in
mov
loopne
or
cmps
or
dec
ins
push
push
dec
sbb
inc
push
movs
mov
shl
dec
outs
test
pusha
sti
cli
mov
mov
pop
cs
xor
add
jp
mov
aad
ret
mov
push
ret
ins
dec
dec
and
add
push
push
cld
add
adc
daa
outs
rol
or
add
sahf
xor
sar
cdq
daa
daa
fnstenv
pop
push
push
dec
xor
mov
xchg
inc
call
xor
lods
lods
and
xchg
cmp
mov
call
inc
pusha
sbb
jl
cmp
and
cmp
fst
add
or
mov
inc
inc
imul
clc
mov
pop
push
adc
fst
add
test
(bad)
adc
in
pushf
jns
enter
popf
inc
mov
fdivr
lea
out
in
retf
sub
push
add
ror
inc
mov
inc
lea
cs
xchg
jle
jne
push
push
pushf
mov
or
sub
retf
sbb
ret
dec
ret
cmps
push
pop
pop
add
stos
aad
and
aaa
loopne
jno
sbb
shr
add
xor
imul
mov
mov
pop
mov
xchg
sub
mov
or
jg
jne
pop
retf
jno
adc
ss
xchg
cmp
inc
sbb
(bad)
and
jge
and
inc
call
test
stos
mov
cmp
dec
shr
adc
push
pop
aaa
mov
js
xchg
shl
adc
and
cmp
je
loope
cmps
or
stc
mov
cld
push
push
jne
enter
add
loopne
adc
sar
int3
xor
push
pop
clc
mov
dec
jl
pop
dec
pop
popa
adc
adc
ins
stc
test
or
and
dec
add
add
and
enter
xchg
inc
and
das
push
xchg
stos
imul
shr
mov
lock
test
jne
sbb
pusha
outs
jae
jl
add
mov
xor
ins
cmp
or
test
leave
and
aam
movs
gs
and
fs
test
pop
mov
sbb
das
xor
xor
imul
jbe
call
mov
push
ins
pop
cwde
(bad)
adc
or
sbb
sti
outs
mov
pushf
add
push
jl
adc
push
adc
pushf
arpl
fs
or
mov
adc
lods
dec
or
inc
inc
ins
ror
nop
adc
retf
sbb
push
aam
mov
adc
push
dec
sub
mov
adc
dec
mov
fs
add
push
mov
mov
inc
js
je
inc
cwde
daa
or
add
push
in
xor
add
and
or
mov
pop
fmul
repz
dec
sbb
xchg
push
cmp
fwait
test
mov
or
inc
test
test
mov
mov
fst
stos
sbb
dec
test
add
mov
mov
xlat
sub
xchg
test
jmp
in
adc
xor
test
lahf
sub
and
pop
dec
aam
push
pop
add
or
mov
pop
add
mov
ret
jo
mov
add
sbb
push
stc
lahf
aad
and
neg
inc
pop
xchg
or
mov
and
sbb
pop
add
mov
xor
add
aaa
and
ret
jne
inc
cmps
push
push
ss
test
add
inc
mov
sub
xchg
popf
add
mov
pop
in
jmp
mov
sub
shr
pop
xor
lock
sub
sbb
sbb
enter
inc
fcomp
mov
push
mov
les
les
or
and
ja
and
jg
mov
adc
imul
mov
shr
add
jne
cmp
je
push
push
dec
jge
idiv
fsub
add
dec
fchs
push
pop
fwait
es
iret
cmp
xchg
add
dec
mov
dec
mov
xchg
dec
loope
ret
test
jle
xchg
inc
cmp
push
jle
inc
and
aad
xchg
xchg
pusha
or
out
hlt
dec
rcr
mov
push
daa
mov
lea
adc
pop
jmp
loop
and
das
push
cmp
push
or
pop
loopne
xchg
pop
ret
jle
dec
inc
mov
arpl
sbb
pop
adc
jl
and
mov
enter
cmp
inc
mov
(bad)
call
sbb
pusha
cmp
std
xor
add
sub
sub
or
div
addr16
daa
adc
cmp
lahf
xchg
mov
mov
stos
fcomp
sbb
mov
dec
sahf
repnz
in
inc
push
ss
jb
popf
pushf
shl
out
nop
(bad)
ins
in
inc
inc
dec
movmskps
test
mov
mov
jmp
and
and
or
imul
xchg
int3
mov
push
mov
adc
(bad)
pop
sbb
aas
xor
push
and
jo
pushf
cmp
nop
mov
sbb
or
fcomp
xor
or
or
xor
add
call
add
cmp
adc
sbb
into
pusha
imul
pusha
neg
push
cmp
or
stos
xor
rcl
or
adc
adc
xor
xchg
inc
loop
xchg
aaa
(bad)
imul
push
cmp
xchg
cmp
dec
xor
sti
push
inc
cmp
jg
hlt
add
add
sub
mov
jo
imul
std
movs
dec
ss
push
imul
repz
or
jnp
cmp
push
fstp
adc
imul
outs
or
xor
pop
mov
sbb
add
dec
mov
pop
test
add
inc
inc
fmul
inc
xchg
add
dec
arpl
and
push
inc
shl
dec
retf
pop
test
add
sti
jmp
sub
xor
adc
push
add
fsub
cmps
dec
dec
mov
in
ja
mov
cdq
or
pushf
pop
mov
sbb
scas
sub
inc
pop
int3
and
mov
lahf
retf
ins
pop
movs
or
pop
and
jge
add
or
fadd
adc
inc
sbb
or
adc
push
repnz
dec
stos
add
and
inc
enter
dec
add
ret
ud2
enter
pop
fcom
jb
and
and
inc
rcl
aaa
push
daa
mov
fdivr
inc
iret
xchg
cdq
pop
not
int
adc
pushf
inc
(bad)
or
jne
add
imul
mov
test
aas
xor
lds
pop
shl
and
sbb
lods
mov
iret
inc
pop
sbb
lea
in
std
rcr
jl
add
sbb
pop
add
push
mov
rdpmc
xor
and
outs
xchg
in
in
(bad)
cmp
mov
or
popa
sub
sbb
dec
or
mov
fiadd
lods
shl
push
cmp
dec
add
mov
push
mov
cmp
and
test
sub
gs
mov
aaa
inc
or
js
sbb
adc
loopne
inc
xor
std
cmc
and
mov
jo
repz
inc
out
xor
into
inc
ins
loopne
add
pop
sbb
or
and
in
(bad)
push
add
mov
xlat
sub
stc
push
add
ds
leave
rol
xchg
mov
add
push
das
out
add
mov
jne
aas
mov
inc
imul
or
mov
cmp
mov
ins
pop
or
mov
fldcw
push
js
nop
add
hlt
adc
inc
inc
push
xor
rcr
inc
int3
sbb
xor
push
mov
sbb
and
out
pop
lock
adc
adc
test
cmp
inc
mov
mov
lahf
in
stc
mul
xor
push
mul
cmps
dec
aaa
test
in
sbb
inc
and
add
pop
lea
xchg
repz
das
mov
or
cmp
aaa
jo
or
jmp
mov
sub
jns
sha256msg1
xor
sbb
add
jnp
push
mov
push
test
out
movs
test
jmp
push
push
mov
ret
push
or
or
rol
icebp
inc
jo
sub
in
adc
sbb
jmp
lds
and
sub
popa
icebp
cmp
add
sbb
mov
rcr
push
adc
dec
daa
addps
lds
sar
ret
mov
push
xchg
rol
test
and
cwde
mov
sbb
push
icebp
pusha
pop
inc
rcr
test
loop
jno
or
mov
inc
xlat
jmp
sbb
and
and
test
inc
cdq
adc
push
arpl
fild
call
mov
cmovge
movs
enter
adc
mov
mov
rcr
retf
lock
sbb
adc
push
xchg
pop
add
xchg
add
push
cmp
or
push
sub
cmps
mov
cmp
loop
mov
daa
jo
enter
push
dec
or
fst
or
push
mov
retf
xlat
sbb
cmp
movs
push
mov
bound
rcr
rol
inc
or
jmp
xor
pop
sub
sub
scas
sub
push
out
iret
and
push
test
xor
call
push
jb
add
mov
cs
js
add
ds
lea
mov
xor
and
test
mov
xlat
test
cmovg
cvtps2pi
shl
cmp
fistp
fisttp
inc
jg
out
dec
mov
jne
fld1
jmp
or
mov
push
(bad)
jnp
ds
xchg
pusha
jmp
and
fstp
sbb
push
xor
std
add
je
pop
mov
popa
js
cmp
jns
ds
push
mov
out
jo
xchg
cdq
pusha
jg
adc
call
call
pop
inc
or
mov
inc
lds
and
adc
sub
aad
and
fwait
or
test
adc
les
or
dec
leave
aaa
cmp
jg
dec
mov
pop
and
xchg
sub
pop
(bad)
sub
mov
and
cmp
jecxz
push
xchg
mov
addr16
xchg
cmp
fidivr
mov
sub
adc
sub
sbb
adc
push
test
adc
sbb
icebp
mov
arpl
xor
mov
sub
xchg
addr16
loope
leave
mov
mov
add
jnp
fs
ret
les
nop
mov
shl
les
repz
push
jbe
sub
add
and
adc
push
push
or
xchg
mov
sahf
rcr
cmp
pop
sbb
push
or
push
jns
sbb
adc
mov
pop
or
rcl
(bad)
(bad)
(bad)
shr
data16
mov
test
add
ins
push
or
inc
in
add
pusha
dec
ja
sbb
mov
adc
and
pop
push
pop
les
lods
and
xor
retf
aad
add
adc
nop
add
mov
es
movs
inc
fwait
addr16
and
jne
inc
pop
sbb
dec
dec
arpl
push
sbb
loopne
pusha
push
movs
or
rcr
and
jmp
popf
cmps
add
test
aad
inc
call
inc
and
ins
call
cld
rcl
iret
dec
dec
cld
ins
inc
mov
push
retf
inc
mov
es
mov
mov
(bad)
push
push
xor
in
inc
sub
shl
pop
test
fcmovb
sub
xchg
addr16
dec
push
mov
cmp
cmp
clc
adc
shr
adc
and
and
or
(bad)
push
ret
test
inc
sub
mov
fnstsw
pop
mov
dec
mov
jmp
push
(bad)
mov
xor
jbe
adc
or
and
cmps
push
sbb
clc
shl
jmp
pop
push
inc
cmp
cmp
push
(bad)
addr16
adc
gs
adc
popa
xchg
add
inc
sbb
cmp
sub
pop
pop
and
test
leave
in
push
jae
dec
push
mov
or
imul
ss
sbb
sub
repnz
mov
ficom
jge
enter
jmp
dec
mov
and
jb
and
push
inc
mov
sbb
gs
nop
sbb
or
and
test
push
dec
lea
cmp
inc
adc
mov
cmp
mov
and
jne
sbb
ds
cli
and
(bad)
aam
or
inc
add
jecxz
nop
nop
cmp
rcr
jns
call
mov
jne
inc
mov
sub
xor
cwde
ficomp
pushf
test
add
xchg
fwait
daa
call
movs
je
and
or
xor
jl
mov
and
sbb
xor
arpl
lea
mov
retf
add
mov
mov
call
inc
sub
loopne
add
es
jmp
outs
jmp
and
test
push
lock
xchg
pop
call
and
mov
loopne
push
mov
dec
pushf
or
pop
jns
add
aad
and
sbb
pop
inc
mov
push
push
add
push
clc
test
and
pop
and
popa
scas
cmps
bound
mov
jmp
pop
pop
push
and
pop
aas
jo
icebp
test
fdiv
pop
js
mov
dec
mov
mov
(bad)
and
or
dec
loopne
mov
push
cmp
dec
adc
jno
js
fistp
daa
in
fnstcw
dec
add
mov
pushf
cmc
shl
repnz
push
nop
inc
push
and
fsubr
add
mov
jne
ss
push
rcl
mov
inc
xchg
(bad)
and
sbb
push
add
test
outs
iret
bound
adc
shld
mul
out
jns
and
add
ins
(bad)
aam
je
mov
pop
xor
(bad)
sub
sub
aas
imul
xchg
sub
push
sbb
mov
mov
pop
adc
jmp
mov
cmps
dec
repnz
mov
inc
mov
add
sub
mov
rcl
jb
neg
push
push
xchg
xlat
ret
adc
rol
or
clc
add
inc
mov
inc
push
enter
iret
adc
add
fidivr
nop
das
vucomisd
outs
dec
sbb
add
mov
aas
and
and
mov
out
cmp
jecxz
scas
jne
adc
pop
dec
cmp
mov
add
jmp
pop
fld
fiadd
jns
mov
pusha
xor
ins
add
rcl
push
xchg
or
xor
fisub
adc
jo
adc
add
dec
movs
adc
jno
jecxz
push
push
xor
add
je
(bad)
or
jg
lahf
imul
ret
les
in
xchg
push
mov
add
(bad)
sub
in
push
mov
inc
sbb
arpl
and
sub
dec
fwait
sbb
retf
leave
adc
adc
int3
addr16
xchg
mov
push
(bad)
aaa
mov
cmp
inc
adc
add
out
popa
add
jg
ret
pop
pop
loopne
jmp
cmp
in
cmp
cmp
pusha
or
add
or
(bad)
outs
push
mov
inc
xor
ret
jae
cdq
fisttp
push
inc
jns
or
sbb
or
lods
cmps
inc
add
test
push
push
mov
nop
lock
adc
lods
xchg
and
pop
or
ret
push
add
adc
and
push
push
js
or
cmp
dec
sbb
and
(bad)
pop
dec
arpl
pop
cmp
xor
xor
adc
lea
mov
or
push
aaa
div
mov
push
push
inc
or
and
and
lods
cmp
push
xchg
loopne
(bad)
ret
inc
cld
push
xor
add
xchg
in
dec
cmp
push
test
aas
cmp
shr
shr
retf
in
push
push
and
or
mov
mov
add
add
ss
mov
ins
cmps
or
imul
adc
or
adc
push
inc
and
fidivr
loope
or
mov
jmp
sbb
add
mov
mov
inc
push
or
adc
bound
repnz
inc
push
shl
daa
hlt
arpl
sub
das
sar
je
mov
data16
out
adc
adc
sbb
dec
cmps
pop
dec
mov
adc
or
gs
xor
mov
and
nop
inc
pop
push
mov
xor
cld
adc
pop
iret
or
das
add
lahf
mov
cmp
repnz
outs
or
sbb
nop
xchg
cmps
sbb
sbb
sbb
add
add
popa
push
call
nop
mov
pop
inc
jl
cli
and
push
inc
add
(bad)
rcl
in
add
mov
mul
cs
nop
pop
adc
pop
retf
sbb
add
fld
add
inc
push
das
retf
pop
ret
sub
in
loopne
inc
adc
aam
psubusw
stos
or
mov
or
push
jg
add
scas
cdq
inc
sub
or
mov
mov
xor
and
xor
or
cmps
pop
and
lea
call
test
pop
dec
mov
push
mov
call
mov
mov
pop
repz
mov
mov
or
sub
scas
pop
pop
or
sub
dec
and
je
mov
mov
pop
xchg
ret
das
clc
test
mov
sub
popf
push
mov
sub
popf
dec
test
arpl
jns
push
mov
add
jne
mov
or
and
aaa
sub
pop
pop
pop
sar
add
lods
clc
cs
mov
sub
add
ds
inc
xlat
mov
pusha
ja
sbb
dec
icebp
call
push
sub
push
adc
scas
xlat
inc
sub
jmp
inc
jp
xor
push
sub
dec
jmp
ja
and
cmp
sub
call
and
mov
and
cwde
push
or
add
adc
xlat
pop
call
add
pop
pop
sub
pop
loop
(bad)
adc
or
ins
mov
out
retf
out
jge
jne
and
imul
jmp
clc
dec
push
add
and
je
xchg
inc
sbb
xchg
daa
and
add
xchg
or
xchg
test
sbb
pop
je
mov
int
add
loopne
sahf
pop
jo
pop
add
daa
dec
cmp
cmp
mov
lea
adc
mov
add
inc
call
mov
add
push
out
rcl
add
pop
(bad)
sub
pop
mov
mov
sub
aas
adc
inc
fs
pop
add
add
lods
mov
data16
imul
les
push
and
sub
push
adc
pop
xchg
mov
add
inc
dec
dec
(bad)
jmp
push
movs
or
jmp
and
movs
xchg
aas
jmp
cdq
xor
add
fistp
sbb
xor
mov
dec
mov
xchg
xor
mov
loop
mov
sub
adc
loop
add
inc
in
test
sahf
cmp
pop
sub
adc
sbb
push
or
sar
push
pop
push
push
or
or
adc
mov
sub
push
sub
mov
ins
sub
ror
adc
or
clc
push
add
mov
and
inc
jo
out
adc
adc
mov
push
push
cmc
jno
test
mov
mov
jmp
dec
les
jle
xor
hlt
dec
xor
shr
add
paddusw
ret
cmps
aam
adc
ficom
adc
fdiv
or
sbb
xor
stc
or
xchg
arpl
push
nop
rol
inc
inc
mov
add
test
ror
mov
sbb
inc
push
lods
test
jne
add
mov
xlat
mov
jbe
out
pop
test
jmp
mov
cmp
cmp
out
add
adc
inc
shl
cmp
cmp
dec
dec
sbb
sbb
les
neg
sbb
mov
push
inc
adc
sbb
es
and
push
push
not
add
or
mov
pop
and
mov
leave
mov
retf
ror
mul
lea
ret
dec
mov
or
or
push
mov
mov
test
or
mov
sahf
add
push
bound
pop
or
push
(bad)
movs
dec
xor
add
adc
rcr
or
mov
xchg
shr
leave
mov
or
ins
rcl
adc
or
loopne
popa
pop
(bad)
jno
in
cdq
adc
pop
test
test
cmp
je
pusha
xor
adc
jnp
(bad)
into
cmp
jne
mov
imul
add
sbb
or
and
and
add
mov
cmp
mov
jmp
call
xor
hlt
lock
stos
add
push
int
test
rcr
out
xchg
push
xchg
adc
bound
mov
jg
mov
mov
sub
test
and
and
pop
jo
mov
mov
sbb
ret
test
out
dec
js
out
dec
mov
mov
dec
or
ret
mov
sbb
mov
dec
(bad)
cmp
or
pop
xor
inc
outs
cmps
sbb
push
test
jmp
cmp
je
mov
inc
inc
adc
add
push
(bad)
push
or
sub
add
aam
inc
xchg
or
cmp
push
xor
mov
rol
jl
push
(bad)
or
(bad)
dec
push
inc
xchg
sbb
call
ret
adc
jno
loop
pop
push
dec
dec
dec
popa
imul
dec
das
ins
imul
leave
pop
pop
xor
pop
mov
lahf
push
push
stc
mov
fsubr
add
xchg
out
cmp
xchg
push
movs
push
stc
(bad)
stc
fisub
jae
push
sub
push
out
ins
sahf
and
scas
mov
pop
enter
sub
push
pusha
test
(bad)
dec
mov
inc
sub
adc
inc
add
push
out
add
or
or
adc
cmc
mov
rcr
push
push
and
xchg
push
dec
retf
sbb
out
mov
jne
dec
(bad)
mov
mov
add
pop
lea
mov
nop
push
push
jg
and
sub
adc
dec
ficomp
cmp
push
xor
(bad)
sub
dec
mov
push
sbb
or
push
adc
pop
sbb
jo
sbb
dec
popa
test
sar
enter
movs
shl
les
ins
pop
sub
stos
sub
mov
pop
pop
js
loope
aas
dec
sub
in
mov
xchg
pop
fadd
popf
and
sbb
rol
sub
outs
add
and
add
sub
lock
push
mov
mov
or
test
cmp
mov
loopne
popa
xchg
addr16
repnz
pop
sbb
add
clc
shl
pusha
mov
dec
cmp
or
call
xor
adc
es
rcr
pop
and
sbb
nop/reserved
add
fcmovnb
(bad)
mov
mov
sbb
or
adc
xor
adc
sbb
inc
push
ret
ja
adc
or
push
jp
and
nop
das
lods
inc
xor
mov
and
stos
loopne
ins
inc
adc
push
xor
mov
push
xchg
dec
ret
cwde
and
mov
test
add
pusha
add
pop
rol
nop
sbb
mov
loope
test
adc
adc
adc
neg
out
mov
nop
test
or
cwde
sub
cwde
in
xchg
push
inc
cwde
arpl
dec
mov
and
mov
sub
push
sub
loope
sub
add
add
iret
push
adc
outs
and
sar
sub
test
sar
pop
add
dec
xor
lock
jo
sbb
loop
pop
rcr
les
cmps
inc
dec
test
nop
cmps
or
imul
clc
inc
mov
movs
aam
sbb
icebp
dec
and
and
shl
mov
jg
fild
mov
cmp
hlt
cmp
sti
xor
clc
push
xchg
xor
sub
xor
and
add
nop
push
push
inc
or
add
loopne
movs
and
pop
lea
aam
fcom
mov
daa
add
sub
push
xchg
mov
jne
adc
push
mov
das
dec
test
sub
and
nop
sub
and
pop
inc
and
jge
mov
lods
pop
dec
dec
sbb
xor
xor
int
gs
add
inc
pop
inc
push
xor
cmp
sub
(bad)
es
dec
and
jle
mov
cmp
xor
imul
std
sbb
or
pop
int
xor
add
xor
or
fwait
push
xor
stos
jmp
enter
aam
std
mov
out
pop
add
jns
jmp
je
jb
fsubr
les
and
stc
fcom
popa
mov
dec
cwde
pop
leave
ret
aad
icebp
xor
add
ret
dec
inc
adc
jge
and
add
xchg
(bad)
aaa
jno
inc
push
sbb
push
sub
add
shr
hlt
xchg
aam
jb
scas
xchg
sub
xlat
mov
test
sub
inc
inc
adc
jno
nop
mov
sub
jne
ss
imul
jo
push
push
fmul
jo
icebp
inc
rol
inc
dec
xchg
int
xchg
shr
or
mov
xchg
loopne
adc
test
mov
loope
mov
push
pop
fisubr
sbb
dec
jp
cld
inc
(bad)
jae
rol
add
add
movs
jecxz
mov
test
and
dec
add
dec
sti
popf
sbb
mov
mov
inc
in
dec
dec
int
mov
xchg
call
sbb
nop
nop
je
jbe
das
sbb
adc
fbld
pop
and
sbb
or
inc
adc
dec
add
and
add
(bad)
mov
adc
ins
and
cmp
loope
test
dec
push
fnstenv
das
push
loopne
ja
adc
dec
push
push
xchg
add
sub
and
and
xchg
movs
jns
loopne
in
call
and
test
in
dec
push
push
jle
test
cwde
mov
adc
dec
adc
add
sub
push
push
test
ja
(bad)
or
xchg
arpl
or
push
cmp
dec
or
xchg
sar
arpl
and
test
sub
mov
xor
push
mov
pop
adc
fs
neg
xor
int3
add
adc
and
(bad)
in
inc
or
das
js
sub
adc
pop
xor
nop
inc
cmps
cld
xchg
or
les
add
imul
and
movs
sub
in
add
jmp
ins
or
mov
jns
ja
and
inc
or
inc
enter
push
add
or
and
inc
xchg
xchg
imul
xor
adc
out
or
inc
lods
pop
out
and
out
or
pop
sbb
jno
addr16
dec
int3
push
repz
dec
cmp
jbe
push
dec
or
jg
and
add
or
xor
xchg
inc
das
adc
xchg
xchg
or
xor
mov
or
rcl
or
jbe
pop
neg
push
and
inc
adc
mov
sbb
mov
or
mov
push
dec
ins
outs
and
mov
add
ins
jae
inc
xor
mov
fcmovnb
xor
pop
xor
nop
inc
add
jl
or
mov
sbb
inc
sub
push
mov
jmp
stos
sbb
or
nop
cvtps2pd
cs
xor
cmp
enter
sbb
sub
and
xchg
cdq
xchg
(bad)
adc
imul
xor
dec
es
add
dec
aaa
or
imul
xchg
cmp
sub
ins
and
pop
xor
icebp
sbb
inc
dec
ins
pop
add
add
pop
push
mov
mov
ret
(bad)
imul
dec
sbb
sbb
add
jno
inc
mov
aam
mov
xor
xor
xchg
(bad)
jno
xchg
pop
retf
sbb
jo
jo
cmp
imul
jbe
(bad)
in
dec
and
dec
add
dec
cmp
dec
add
push
push
leave
test
sub
dec
es
sub
inc
inc
jp
inc
jb
and
or
es
std
mov
jg
xor
and
test
pusha
pop
push
adc
(bad)
jno
test
inc
sub
inc
sub
and
or
dec
dec
cs
sbb
or
dec
es
movs
jb
add
nop
daa
and
push
ins
mov
dec
xor
xor
dec
jo
cmp
xor
xor
xor
xor
push
fwait
lods
jl
inc
push
inc
pop
dec
xchg
pop
push
into
retf
inc
pop
inc
push
inc
inc
retf
and
add
dec
and
mov
dec
dec
(bad)
fs
mov
inc
xor
sub
pmulhuw
leave
and
xchg
movaps
pusha
pusha
mov
dec
dec
ins
and
or
or
inc
sub
dec
cmp
push
jns
xor
retf
cld
fisubr
ret
aaa
rol
loopne
xor
xchg
push
or
ret
push
mov
cmps
sbb
jp
inc
mov
fs
or
push
and
xchg
xor
enter
sub
ss
adc
imul
inc
and
pop
mov
repnz
adc
cli
push
test
ja
xchg
das
xor
cdq
je
pop
add
pusha
xchg
pop
dec
loopne
adc
dec
add
or
retf
add
add
fld
icebp
xchg
or
rcl
pusha
pusha
es
and
imul
add
cmp
inc
push
xor
xchg
or
call
jle
sbb
iret
adc
adc
sbb
adc
cmp
in
test
xor
int
movs
ret
or
xor
xchg
and
add
in
mov
fmul
xchg
or
dec
add
add
cmp
inc
jno
pop
ss
adc
retf
stos
outs
lods
add
scas
or
fiadd
ss
pushf
popa
and
and
jle
sub
daa
inc
and
and
dec
sub
and
pop
xor
pop
mov
mov
(bad)
ins
popf
xchg
xchg
push
imul
cmp
jmp
mov
push
add
(bad)
aam
pop
(bad)
adc
int
cmp
add
add
mov
outs
(bad)
cld
outs
imul
and
dec
cmp
or
lock
fcom
pusha
dec
xor
shl
loopne
mov
adc
jmp
dec
cmp
inc
xchg
and
inc
call
cmp
lea
mov
xchg
cs
inc
dec
jae
in
lea
inc
shl
adc
mov
mov
push
adc
inc
sbb
movs
xor
mov
sbb
dec
(bad)
mov
mov
mov
and
je
cmps
adc
ss
es
mov
push
das
jp
xchg
push
js
loopne
sahf
cdq
push
les
adc
xor
mov
out
aam
sub
sbb
mov
and
(bad)
out
push
or
cmc
loop
mov
push
push
adc
jae
or
cmp
add
xor
cli
add
in
sbb
fisubr
push
add
push
sub
adc
aam
sub
or
xchg
inc
ins
call
push
and
adc
sbb
pushf
and
div
sub
sbb
nop
push
retf
xchg
nop
mov
daa
and
xor
cmp
mov
add
adc
gs
and
push
and
xchg
sbb
pop
rcl
push
test
test
movs
adc
push
sahf
inc
add
or
push
cmp
inc
ss
push
inc
cmp
push
ja
dec
sub
call
inc
movs
mov
add
add
fimul
or
pop
push
push
inc
mov
movs
pop
les
cmp
adc
or
lock
dec
and
or
mov
lods
pop
lds
imul
fs
push
dec
imul
cmp
dec
daa
sub
add
jle
xor
adc
dec
mov
xchg
xor
xchg
adc
pusha
jecxz
imul
cmc
mov
std
mov
loop
mov
cmp
xchg
push
cmp
ins
leave
cmc
iret
jb
imul
mov
xchg
hlt
call
cmp
jne
mov
setb
mov
in
sub
xor
xchg
xor
jne
aas
arpl
fldz
out
out
add
add
out
pop
inc
test
pop
fmul
jns
mov
loop
inc
(bad)
cmp
pop
addr16
loop
pushf
loopne
sbb
mov
je
in
js
cmp
xor
pop
ins
arpl
and
xor
mov
add
ret
jge
cmp
or
and
cwde
add
retf
push
mov
repnz
test
movs
pop
pop
xor
ss
ins
mov
adc
out
xor
and
sub
div
or
push
je
cmp
cld
mov
inc
fdiv
pop
cmps
out
inc
ficom
add
out
pusha
jecxz
sbb
and
out
add
dec
scas
xor
iret
es
out
aam
cmp
shl
mov
xchg
xor
icebp
movs
xchg
(bad)
popf
fs
ror
lds
or
xor
inc
mov
out
out
mov
mov
adc
mov
or
pop
add
fcomp
add
inc
or
cmps
pop
aam
daa
pop
dec
je
gs
cmp
jo
mov
mul
xor
test
dec
lahf
dec
ins
or
imul
cld
mov
leave
aaa
movs
inc
cmps
adc
dec
jmp
pusha
test
and
addr16
push
(bad)
sbb
fadd
pop
je
push
popf
loop
pop
jmp
dec
jmp
xchg
jmp
(bad)
fwait
rol
dec
add
ss
mov
shl
mov
mov
add
push
ret
mov
jg
cmp
jl
jmp
push
es
or
int
lds
ins
xlat
or
sub
pop
repnz
or
aas
fiadd
retf
ret
mov
shl
jg
mov
(bad)
xchg
ins
int
inc
in
xor
xchg
mov
inc
rcr
ror
xchg
inc
xor
mov
ret
push
or
xchg
sub
popa
add
xchg
mov
jo
pop
pop
movs
js
vdivps
jnp
jne
nop
push
stos
mov
sbb
stos
mov
pop
lock
add
add
sub
mov
mov
(bad)
mov
out
imul
inc
jle
mov
jae
inc
dec
jne
and
add
sbb
addr16
ins
retf
daa
sbb
(bad)
clc
scas
xchg
movs
dec
cmp
std
or
mov
stc
jne
adc
or
jnp
add
pop
inc
xchg
outs
and
fmul
inc
add
lock
add
pop
popf
push
daa
ret
add
arpl
loopne
shl
xor
aaa
mov
jmp
das
or
push
imul
dec
ss
adc
jno
sbb
dec
mov
cmp
je
dec
inc
(bad)
call
js
std
sub
mov
outs
xlat
push
dec
push
mov
adc
test
xchg
retf
pop
or
mov
cmp
xchg
xor
mov
push
fsub
shl
enter
add
pop
jl
les
mov
pop
push
pop
je
jns
mov
ret
and
shl
or
inc
or
jp
push
mov
pop
push
fsqrt
inc
les
and
psubb
add
cmp
es
adc
test
sbb
dec
xchg
fadd
ret
ret
xor
xchg
inc
(bad)
fsubr
shl
xor
push
cmp
add
sbb
(bad)
xchg
je
cmp
mov
push
xor
xor
add
sub
jle
sbb
clc
dec
mov
push
loope
jmp
add
cmps
push
dec
xchg
sbb
add
int
xchg
lods
push
xor
mov
sbb
aam
mov
xchg
mov
es
dec
inc
mov
ins
into
nop
retf
sub
ret
jne
loopne
fmul
into
aam
mov
call
or
xchg
dec
daa
or
and
cmp
cmp
inc
ja
icebp
(bad)
add
or
mov
adc
or
pop
dec
mov
mov
cmp
mov
push
loop
sbb
push
pop
xchg
fsubr
scas
or
push
leave
in
mov
mov
mov
xor
cld
lods
xor
outs
pop
add
inc
lea
jb
xchg
rol
mov
mov
in
jno
shr
and
xchg
push
mov
(bad)
call
mov
dec
cmp
jne
int3
sbb
sbb
(bad)
in
inc
(bad)
jmp
lea
sub
push
call
dec
mov
add
or
jbe
cld
xor
stos
push
(bad)
(bad)
in
pop
pop
cwde
mov
dec
inc
push
push
xor
adc
mov
in
cdq
es
pop
pusha
jg
or
inc
xor
jmp
inc
dec
jne
dec
mov
(bad)
lock
adc
mov
jp
mov
aaa
pop
inc
pop
js
ret
out
fdivr
aaa
hlt
bound
jbe
shr
fiadd
popa
movs
adc
shr
adc
out
pop
xor
sub
inc
pop
inc
jmp
fwait
shl
and
fst
mov
mov
xor
das
or
sbb
mov
inc
inc
ja
push
fwait
call
fdiv
inc
mov
mov
pop
clc
vsubps
imul
push
mov
das
stos
mov
inc
or
fild
xchg
and
jmp
movs
add
test
push
movs
mov
ret
icebp
gs
xor
mov
js
outs
aas
cmp
test
pushf
cmps
mov
mov
fistp
or
retf
icebp
add
adc
ja
xchg
cmps
bound
inc
sub
adc
pop
xchg
ret
mov
ja
aad
push
mov
xchg
in
cmp
jno
add
dec
pop
dec
adc
xor
ins
ss
movs
push
dec
ret
add
ins
mov
out
jle
ret
or
(bad)
pusha
dec
push
inc
(bad)
lahf
push
call
or
or
and
push
cmp
and
ins
push
push
je
xor
inc
add
fwait
push
not
or
out
mov
jae
inc
test
adc
xchg
adc
cmp
push
pop
icebp
sub
or
inc
pop
clc
pusha
mov
bound
jl
and
dec
out
inc
inc
jle
mov
gs
adc
loop
dec
inc
mov
sub
xchg
jp
mov
pop
lock
add
mov
call
add
jmp
and
adc
test
or
mov
adc
imul
cmp
shl
pop
cmp
mov
xchg
push
and
push
fld
jbe
jns
or
push
mov
stos
mov
jg
fwait
rcr
push
add
mov
add
and
ins
fcmovbe
sbb
and
out
les
or
dec
daa
popf
fnstsw
in
push
sbb
mov
cmp
or
ror
cmp
xor
xchg
or
mul
or
jmp
aam
fcomp
adc
cmp
into
sub
shl
cld
adc
xchg
ret
xor
sbb
es
add
jb
jns
inc
adc
ficom
sub
mov
push
xor
and
aas
pop
cmp
mov
sub
pop
in
in
mov
jmp
mov
adc
adc
in
stos
ret
and
or
mov
cmps
rcl
ret
jl
mov
dec
jp
and
aaa
sbb
aam
leave
dec
in
nop
scas
push
jmp
cmps
sub
aas
sub
pusha
loop
popf
xchg
xor
push
nop
or
adc
push
das
pop
shl
hlt
mov
mov
movs
pop
add
retf
stc
ret
pop
stc
or
repz
dec
les
fadd
rcr
mov
sub
popf
push
mov
loopne
loopne
test
cmps
fcom
es
test
pop
mov
mov
adc
push
push
mov
and
test
jl
movs
in
imul
adc
add
inc
push
mov
jge
test
int3
add
push
pop
inc
adc
and
add
loopne
sub
shr
xchg
adc
or
adc
sbb
mov
sub
cmp
adc
mov
sbb
es
inc
enter
push
rol
lea
xor
add
mov
fdiv
add
xchg
or
mov
(bad)
mov
sub
cmp
adc
mov
call
mov
mov
fwait
mov
sbb
adc
push
add
(bad)
sub
or
cmp
clc
popa
sbb
push
fisub
lods
adc
scas
fwait
jmp
cmp
leave
inc
inc
sub
inc
jo
ror
xor
add
mov
xchg
and
xchg
mov
add
cld
std
mov
pop
sub
adc
adc
std
or
lock
jbe
push
dec
cs
cs
xor
jle
adc
sbb
call
adc
inc
ret
dec
cmp
daa
cmp
pop
cmp
jle
sbb
sahf
fs
and
dec
nop
das
xchg
cmps
jg
jmp
cs
and
sub
cwde
add
dec
or
push
mov
pushf
sub
cmp
ret
dec
ret
ret
add
pop
push
add
xchg
cld
mov
lea
pop
push
sub
mov
loopne
das
pop
push
not
mov
les
hlt
outs
ret
(bad)
je
pop
dec
cmp
jne
cmp
pshufw
xchg
pop
test
push
add
push
xor
scas
inc
adc
(bad)
dec
retf
sub
mov
es
add
add
es
sub
loop
or
add
add
and
seto
cmp
adc
sub
cmc
sub
das
dec
mov
adc
or
sbb
pop
xor
add
add
mov
imul
pusha
or
push
sub
and
push
or
inc
pop
xor
pop
pop
(bad)
in
sahf
mov
bound
jmp
inc
or
aad
adc
or
pop
add
cmp
loopne
retf
clc
repnz
mov
push
push
pop
sbb
call
adc
adc
movs
test
(bad)
sbb
push
lds
neg
and
add
sbb
ror
cmp
xchg
xor
clc
imul
lods
cmp
jne
or
push
inc
sbb
inc
fcmovne
shr
arpl
sbb
enter
hlt
pop
jmp
adc
jecxz
(bad)
mov
dec
mov
sbb
popa
jnp
xor
add
push
mov
mov
pusha
sub
out
in
frstor
rol
shr
ficomp
sub
lods
adc
pop
mov
pop
push
int
call
jmp
call
in
in
sub
popa
fld
test
pop
nop
xchg
and
cmp
xchg
movs
cmp
inc
xor
pop
push
jne
dec
jae
mov
fsubr
or
pop
jmp
fadd
fdivr
lods
and
and
or
mov
fcmovnu
iret
call
loopne
je
std
and
and
inc
dec
pusha
ss
ins
jle
jo
movs
xchg
adc
push
cmp
ror
xor
xor
dec
cmp
cmovb
icebp
sbb
fadd
cmp
inc
clc
dec
in
push
pop
xlat
mov
jbe
inc
call
and
adc
or
fucomip
(bad)
add
fs
jmp
loopne
test
dec
inc
inc
cmp
and
jge
xor
sbb
push
inc
stos
std
push
or
mov
ret
lahf
and
in
rol
mov
(bad)
mov
push
cwde
or
adc
sub
or
das
out
out
xchg
jo
(bad)
(bad)
call
mov
mov
cmp
xor
dec
loope
ins
jecxz
and
cmp
shl
pusha
mov
xchg
lods
add
popf
push
fld
dec
cmp
les
pushw
pop
push
xchg
xchg
scas
mov
je
inc
jne
xchg
lahf
sub
inc
and
xor
aaa
test
sbb
xor
imul
or
and
xor
mov
or
adc
push
(bad)
fadd
inc
mov
inc
imul
mov
mov
test
or
in
push
inc
inc
pop
stos
jnp
test
fld
test
popa
mov
push
or
nop
imul
loop
adc
clc
adc
fsub
add
clc
nop
push
mov
adc
call
xor
aad
add
push
cmp
shr
dec
pop
push
add
jo
(bad)
cmps
and
pop
cs
popf
mov
add
jno
mov
dec
cmp
jl
inc
xor
xor
adc
and
pop
shl
push
cmp
call
pop
sub
adc
mov
push
xor
cmps
sub
clc
test
add
pop
push
lahf
inc
adc
jns
cmp
sub
push
ins
add
inc
mov
or
inc
xchg
xlat
adc
or
jge
sbb
mov
inc
mov
sbb
call
adc
mov
and
or
add
push
daa
push
sbb
cmc
jmp
repz
jo
xchg
adc
nop
call
ret
mov
pop
int3
sbb
add
je
movs
jae
pop
setl
nop
inc
cmp
xchg
add
mov
bsf
or
push
cmp
and
push
mov
int
int
fcom
adc
(bad)
push
push
mov
ins
or
xchg
ror
add
test
and
in
xor
ins
call
push
or
pop
dec
sti
je
pop
adc
in
push
xlat
nop
add
call
jb
mov
push
mov
push
mov
pushf
pushf
or
fs
xchg
adc
push
sbb
sbb
das
(bad)
popf
or
push
sti
mov
xchg
mov
sbb
xor
sub
movs
sbb
inc
jbe
or
cs
dec
mov
in
aaa
pop
xor
mov
sub
jecxz
les
push
call
pop
je
pop
imul
cmp
aam
dec
mov
mov
sub
add
push
adc
pushf
inc
repz
mov
mov
xchg
jb
or
mov
stos
dec
inc
xchg
mov
jne
sbb
adc
push
jl
sub
and
dec
jmp
adc
add
push
repnz
lods
xchg
into
dec
fcomp
jno
cmp
push
mov
jmp
and
mov
sub
jg
or
xchg
push
adc
xchg
lods
or
mov
add
inc
fidiv
in
aaa
inc
aad
les
or
das
pop
xchg
ss
jae
ss
and
dec
mov
push
das
xor
sbb
jbe
xchg
jo
retf
dec
inc
pop
jne
push
out
fsubr
repz
sbb
ins
mov
add
in
test
and
pop
xchg
out
adc
xchg
bnd
cmp
or
loope
adc
inc
jl
sbb
or
mov
xor
jp
mov
fwait
push
mov
inc
push
mov
repnz
sbb
loopne
inc
push
ret
mov
sbb
pusha
push
pop
jne
sahf
mov
es
push
aam
(bad)
cmp
jno
out
jl
or
add
push
xor
inc
sbb
and
mov
add
and
push
mov
jne
xor
adc
and
push
outs
push
push
pop
xor
scas
leave
jmp
in
aam
jle
sbb
pop
lds
jno
loope
and
fs
jp
sub
xor
or
(bad)
les
idiv
sbb
xor
pop
(bad)
sbb
dec
inc
retf
ror
test
mov
and
adc
jge
push
add
add
popf
fdiv
call
movs
out
cmps
and
mov
ins
sub
add
xor
repnz
shl
pop
loopne
sub
xchg
out
cdq
mov
push
push
les
cmp
fmul
pop
sbb
or
mov
ja
rcl
push
test
sub
addr16
push
js
fcom
mov
cmp
add
mov
out
aam
pop
enter
or
and
push
fimul
repz
push
sbb
xchg
ja
ins
inc
inc
mov
cmp
mov
adc
movs
rol
sbb
fadd
add
adc
and
xor
jmp
push
repnz
(bad)
add
jmp
xchg
arpl
test
pop
inc
outs
mov
adc
and
or
popa
test
xchg
cmp
mov
sahf
xor
je
inc
cmps
pop
inc
test
or
push
cmp
ins
mov
in
push
mov
test
lea
pushf
and
mov
push
xor
loop
adc
jae
mov
sub
aas
pop
jo
push
cmp
(bad)
fcomp
test
pushf
xor
add
(bad)
cmp
jl
dec
jae
mov
mov
xor
xchg
js
push
pop
mov
(bad)
and
add
inc
idiv
xor
les
sbb
sbb
adc
lods
add
add
dec
add
psubb
xor
dec
hlt
je
or
inc
cmp
mov
mov
sbb
lods
xchg
rcr
clc
sbb
fist
pop
pusha
(bad)
bound
pop
sbb
test
or
xor
hlt
push
inc
adc
test
ins
add
cwde
retf
and
movhps
push
call
sbb
sub
(bad)
arpl
dec
xchg
xlat
add
rcl
sbb
adc
cwde
and
out
in
sub
leave
adc
add
mov
or
iret
or
sbb
push
sub
call
ret
ror
dec
add
pop
fstp
jno
std
add
fwait
outs
sar
or
pop
enter
(bad)
adc
sbb
and
lods
adc
arpl
mov
add
and
and
ds
and
sbb
push
adc
dec
dec
inc
jbe
call
jnp
add
xchg
dec
adc
mov
daa
in
(bad)
rol
cli
adc
or
jno
push
push
xor
or
sub
jg
bt
adc
mov
pop
jb
daa
sar
dec
mov
jnp
cmp
nop
sbb
cmp
and
int3
lods
rcl
fcomp
sub
out
loopne
xor
pop
rol
xor
jmp
nop
dec
pop
outs
xchg
fdivr
sbb
int
mov
aam
cdq
add
je
adc
in
or
sbb
dec
add
sbb
loopne
mov
cmp
pop
mov
je
cdq
imul
aaa
add
inc
das
adc
mov
xchg
js
lods
dec
push
fs
nop
adc
or
movs
xchg
rcl
cmp
in
es
and
data16
cmp
adc
fld
enter
add
cmp
inc
fisubr
repz
ror
cmp
dec
js
mov
test
cmps
rcl
adc
mov
adc
fs
inc
or
int
in
popf
dec
jmp
sub
add
call
cmp
push
sbb
cmp
int
xor
xor
push
mov
pop
data16
(bad)
popf
pop
fadd
xor
sub
cdq
mov
jl
loopne
cdq
iret
inc
cmp
pop
push
sahf
inc
jnp
push
adc
ficom
mov
dec
xor
xchg
dec
or
movs
and
cmp
and
or
outs
sub
xchg
retf
pop
push
mov
das
mov
unpcklps
sbb
xor
mov
adc
test
mov
add
sub
add
add
jne
and
bound
push
pop
pop
stos
leave
push
out
inc
jno
and
inc
push
adc
loope
pop
add
movs
ss
mov
and
imul
rcl
jne
ror
arpl
pop
push
(bad)
mov
add
(bad)
push
and
sbb
idiv
jmp
push
jne
je
mov
shl
lds
dec
mov
cmp
sahf
sub
or
inc
cli
and
cmp
adc
xchg
imul
pop
aas
sub
or
pusha
sbb
cdq
cmp
push
cmp
or
js
jne
inc
push
add
je
mov
movs
jnp
data16
jg
pop
jno
xchg
(bad)
pop
test
inc
push
xor
test
outs
push
mov
push
lahf
jne
aad
add
loopne
adc
jno
fwait
cli
test
mov
movs
shl
dec
inc
pushf
cmp
sub
mov
je
xor
or
lods
adc
retf
in
jbe
mov
jbe
xchg
sbb
xchg
or
out
and
nop
inc
imul
xor
test
popf
add
pop
(bad)
push
sar
cld
add
and
aad
adc
push
ffreep
mov
(bad)
xchg
scas
inc
push
mov
adc
sbb
iret
lds
neg
mov
mov
xor
mov
mov
push
ss
jae
popa
or
retf
in
cli
mov
jae
ret
fsubr
push
add
jge
adc
add
fimul
mov
cdq
mov
mov
je
je
ins
cmp
or
inc
ins
test
push
inc
ins
xor
jo
out
mov
dec
mov
xlat
jo
inc
xor
mov
cdq
mov
sbb
cmps
daa
xchg
dec
cwde
dec
add
int
push
ficom
ja
ror
push
inc
repz
xor
pop
int3
cmp
scas
inc
hlt
xor
lods
pusha
xchg
or
or
xchg
pop
cmp
fst
mov
xor
add
push
or
jmp
add
add
test
mov
and
scas
and
or
pop
enter
mov
idiv
jo
fisttp
push
out
in
adc
call
add
and
fsub
push
push
sbb
in
add
inc
push
inc
mov
mov
lea
lods
loopne
mov
sub
ret
fstp
ins
or
jg
ret
enter
push
sub
or
jp
lods
add
je
or
arpl
popa
add
sbb
loope
pop
mov
mov
or
mov
js
jns
ss
sub
jo
cmps
mov
sub
push
pop
xor
add
das
test
cdq
add
adc
mov
push
or
div
jmp
fild
jmp
or
xor
aaa
or
jmp
xchg
sbb
jno
mov
idiv
stc
imul
nop
pop
or
add
lods
inc
std
data16
jge
xor
pop
sbb
push
sbb
and
(bad)
add
adc
(bad)
ja
xchg
retf
in
or
inc
ret
ror
in
inc
xor
jb
in
xor
xor
or
stos
in
pop
and
add
add
mov
mov
sub
jb
sub
mov
sbb
es
repnz
sbb
not
jg
adc
ficomp
cmp
add
xor
adc
dec
inc
and
xor
loope
pop
cmp
mov
(bad)
iret
ins
movs
sbb
sbb
shr
mov
jns
stos
(bad)
lods
sub
xchg
mov
imul
sbb
or
mov
push
cmp
test
test
sbb
out
int3
sub
je
mov
dec
adc
mov
lock
pop
sbb
or
out
leave
pop
sbb
sub
movs
aaa
sub
enter
inc
cmp
pop
cs
pop
inc
(bad)
stos
and
addr16
ret
sbb
xchg
jecxz
repnz
(bad)
fst
add
inc
push
mov
push
or
inc
or
cmps
add
imul
mov
(bad)
cs
dec
cmp
cmp
sub
dec
pop
push
cmp
add
adc
popf
dec
adc
push
les
add
retf
(bad)
popf
icebp
or
sbb
jne
jns
add
pop
shl
pop
aas
or
and
xchg
pusha
jecxz
push
add
cmc
xchg
or
fdiv
xor
cmp
jbe
xchg
ret
test
add
jge
mov
push
cmp
sub
fbstp
mov
jecxz
push
fadd
fbld
shr
xchg
adc
mov
call
shr
cmp
xlat
sub
hlt
jp
jge
dec
lods
sub
and
cmp
out
das
ror
push
daa
in
iret
sub
dec
xchg
inc
sub
cwde
mov
mov
inc
xor
cmp
sar
xor
(bad)
sub
sbb
(bad)
push
retf
push
sbb
inc
jne
inc
or
or
test
cmp
jo
loopne
pop
outs
and
fmul
adc
push
loopne
add
sar
xchg
add
push
(bad)
xor
cwde
xlat
jbe
and
scas
sbb
in
xor
sbb
adc
mov
mov
sub
cmp
into
cmc
adc
cmp
lock
jl
sub
mov
jns
sub
ins
mov
sbb
rcl
jmp
pop
fst
or
lahf
inc
adc
mov
push
inc
inc
cs
das
lock
adc
cmp
inc
add
in
inc
je
sub
add
mov
mov
loopne
enter
and
int3
or
stc
test
push
test
movs
pop
cmp
or
icebp
repz
nop
fst
(bad)
ret
inc
or
stos
adc
nop
ror
rcr
daa
mov
sbb
fisttp
fdiv
stos
jle
add
fist
add
mov
sar
loopne
test
add
icebp
aam
repnz
mov
nop
cmps
dec
pop
mov
sbb
add
xchg
xor
lods
retf
inc
cmp
pusha
(bad)
sar
mov
movs
pop
xchg
popa
mov
xchg
push
push
mov
out
and
in
pushf
(bad)
adc
sub
aam
aaa
sub
outs
les
mov
scas
dec
dec
xchg
clc
(bad)
mov
les
add
mov
cmovg
dec
push
fnstenv
out
int
mov
add
or
cs
retf
(bad)
rcr
mov
push
jne
pop
loopne
push
add
mov
rcr
nop
mov
iret
cs
or
jmp
adc
outs
or
enter
add
fisttp
inc
repz
and
cmp
inc
nop
push
iret
xlat
ret
xchg
addr16
je
inc
je
cmp
mov
mov
sbb
xchg
pop
sbb
je
or
sub
lods
or
(bad)
sub
and
imul
test
pop
data16
inc
inc
sbb
sbb
sbb
retf
push
inc
adc
lods
in
jno
icebp
xchg
mov
(bad)
push
test
mov
adc
xor
adc
lds
inc
xor
fimul
mov
cmp
fistp
sbb
and
push
ficom
cs
pop
repz
xchg
stos
sub
std
mov
retf
inc
sub
adc
nop
stos
cmp
cmps
mov
add
and
sbb
jne
xchg
mov
push
cmps
je
jp
add
lock
jne
mov
clc
sub
add
mov
cmp
cmp
es
push
add
rcl
out
imul
jo
dec
adc
loop
cmps
inc
mov
add
inc
jbe
loope
retf
push
loop
aas
xchg
and
add
sbb
mov
push
dec
sub
cli
xor
or
push
and
adc
ins
pop
jne
mov
add
adc
jecxz
fisub
mov
and
or
add
data16
lods
ret
ins
out
push
bound
push
mov
jmp
lahf
pusha
add
push
test
jae
add
shl
add
jecxz
out
jmp
push
jl
add
push
jns
sub
push
add
add
push
push
fmul
push
or
sub
leave
adc
adc
adc
push
inc
push
jo
push
sbb
and
add
add
adc
xchg
mov
test
or
sub
pop
aam
aaa
mov
inc
clc
jmp
push
or
inc
fild
test
sbb
cmps
enter
in
data16
in
push
cmp
pop
xor
pop
mov
daa
int3
adc
cmp
or
push
xor
push
and
adc
dec
(bad)
les
add
xlat
and
out
mov
cli
push
add
and
jo
ffree
add
outs
dec
sub
popf
dec
aad
push
jae
out
add
ret
fs
xchg
dec
pop
icebp
sar
imul
pushf
jnp
adc
add
push
int3
add
sbb
outs
test
add
add
add
sbb
sbb
shr
std
out
push
and
push
not
sub
adc
xor
push
and
and
and
enter
enter
fldcw
inc
mov
push
in
clc
fwait
iret
sar
sub
repz
sbb
mov
jns
or
cmp
in
inc
imul
push
stc
mov
int3
sbb
dec
and
dec
sysret
sub
push
and
xor
das
xchg
and
xor
je
xor
or
popa
and
or
push
ins
sbb
cmp
mov
push
xchg
sbb
inc
(bad)
sti
dec
dec
push
dec
sbb
imul
stos
sub
jmp
(bad)
sbb
rol
mov
lock
push
xor
sbb
add
add
call
cdq
inc
(bad)
loope
pop
test
cmps
mov
pop
mov
mov
push
push
inc
rol
or
add
adc
push
jb
pop
pop
and
xchg
pop
mov
add
or
cmp
adc
add
inc
add
xchg
ja
inc
xor
and
popa
and
sub
mov
sub
sbb
xor
xchg
xchg
jbe
jbe
add
mov
retf
xchg
xchg
fdivr
and
inc
xchg
xchg
xchg
xchg
ins
mov
xchg
out
or
xchg
xchg
xchg
outs
xchg
mov
retf
or
cs
jae
xchg
xchg
xchg
cdq
mov
xchg
xchg
xchg
sub
jns
stc
push
xor
push
fsubrp
mov
neg
jl
cmps
das
int3
push
pushf
and
xor
mov
dec
and
inc
jl
push
fs
mov
ret
mov
or
mov
xchg
ins
xlat
jb
hlt
xchg
push
add
dec
push
movs
minps
adc
std
cdq
sbb
ss
dec
adc
in
push
int3
not
sub
cld
push
(bad)
push
inc
jle
or
cld
push
int3
not
add
ds
inc
jb
std
push
mov
pop
add
add
cdq
test
pop
mov
mov
mov
mul
je
movs
or
jl
int3
clc
push
daa
call
push
dec
and
jo
cwde
ret
inc
add
cmp
out
mul
mov
and
clc
imul
daa
push
in
inc
popa
arpl
push
jb
cld
push
std
push
pusha
enter
mov
or
mov
xor
or
inc
enter
push
cmp
xor
ss
sbb
xchg
adc
or
or
inc
lods
(bad)
stc
dec
outs
xchg
cmp
adc
dec
adc
and
inc
js
mov
stc
dec
icebp
jnp
cmps
cmp
daa
sub
cmps
dec
cli
cmp
imul
add
or
bound
loopne
mov
and
inc
(bad)
(bad)
pop
xor
fwait
jae
nop
cmp
adc
and
and
and
inc
xadd
mov
xor
sub
lods
jno
pop
cdq
ins
pop
sbb
test
jmp
cmp
push
cli
pop
jnp
pusha
xchg
ret
cli
jmp
push
mov
sbb
sti
ss
mov
adc
rol
or
mov
inc
mov
or
or
in
and
test
je
pusha
ret
sub
fwait
inc
loope
and
mov
inc
lods
(bad)
shl
sbb
aam
cmp
cs
jp
xchg
xchg
adc
or
jge
popa
inc
(bad)
sub
imul
out
jno
sub
imul
(bad)
sti
loope
add
pusha
(bad)
iret
jle
call
pop
das
movs
pop
cmp
push
dec
or
(bad)
dec
jae
cmp
xchg
dec
xor
pop
or
sub
in
nop
add
push
inc
out
pusha
inc
repnz
and
adc
clc
fcomp
les
sbb
mov
cmp
jl
out
test
jmp
sbb
(bad)
ins
mov
pop
pop
inc
xor
test
stc
adc
mov
add
push
mov
loopne
inc
lock
push
cmp
push
mov
pop
sub
push
add
cmp
rol
fdivr
jl
and
popf
imul
mov
inc
pop
pop
test
fwait
sbb
add
pop
pop
ja
aaa
nop
mov
sbb
push
sbb
jmp
push
jno
inc
push
(bad)
ja
add
lea
adc
pusha
or
push
aam
and
push
seto
inc
stos
rcr
inc
xchg
xchg
xor
push
test
mov
inc
pop
scas
jge
adc
out
dec
mov
test
dec
xchg
sbb
mov
cmp
fst
int
or
add
dec
inc
and
inc
out
sbb
sbb
(bad)
push
or
dec
dec
hlt
sub
(bad)
jne
icebp
inc
adc
mov
rol
icebp
dec
and
cmp
push
fwait
ret
pop
inc
and
sbb
add
pop
aas
out
dec
and
adc
nop
dec
cmp
rol
add
hlt
fst
lock
lods
rcl
and
jbe
add
push
mov
ins
rcr
lock
push
or
add
popa
dec
int3
xchg
xor
jo
lods
pop
or
add
push
imul
or
mov
jb
xchg
ss
popf
and
push
jno
mov
pop
mov
or
in
mov
js
cmc
or
push
mov
int
adc
add
jno
in
and
sub
push
cmp
xor
jnp
and
fcomp
and
and
les
cwde
enter
scas
iret
test
ret
imul
lods
test
jecxz
je
mov
push
out
lods
adc
leave
(bad)
add
lahf
xchg
fdivrp
mov
or
fbld
ror
mov
jle
js
inc
xchg
fdiv
icebp
cmp
mov
nop
or
add
adc
sbb
mov
xor
add
iret
adc
jbe
call
mov
(bad)
mov
nop
mov
jge
in
xchg
lahf
dec
loop
push
inc
lock
mov
xchg
inc
in
and
mov
fwait
call
lods
rol
push
inc
push
std
(bad)
out
outs
mov
enter
aam
add
adc
xchg
pop
adc
pop
add
adc
adc
and
stc
in
adc
(bad)
leave
in
in
neg
aaa
mov
xor
aaa
adc
dec
inc
stos
cmp
adc
xor
outs
push
jmp
and
xchg
cmps
cmp
push
mov
std
outs
add
(bad)
jmp
add
push
or
adc
in
push
and
gs
xlat
add
xor
xchg
and
add
jno
add
mov
dec
cmp
push
fld
shr
inc
mov
popf
es
scas
xor
and
add
sub
xchg
aad
and
cmp
test
outs
push
(bad)
int3
xchg
and
ror
aam
ss
push
push
push
cmps
xchg
xor
dec
dec
xchg
add
push
mov
jmp
mov
or
add
call
iret
loopne
ficomp
sbb
jle
adc
lods
add
add
stos
jmp
in
call
xchg
imul
movs
popf
push
ficom
xor
fiadd
das
push
sbb
shr
mov
push
movs
add
mov
mov
js
cmp
jp
push
or
jne
cmps
mov
or
pop
rol
ins
ja
stos
imul
pop
xchg
jmp
dec
pop
mov
fmul
jae
add
stc
scas
or
inc
nop
dec
pop
push
cmp
add
xor
push
mov
or
jno
repz
inc
mov
ret
add
cli
push
adc
or
push
es
mov
fcom
add
lock
and
ins
popa
adc
ins
inc
sbb
and
mov
jmp
dec
inc
scas
pusha
push
mov
daa
jge
les
push
and
or
(bad)
mov
sbb
add
or
jo
jge
call
gs
ja
mov
inc
xor
outs
xor
mov
iret
add
or
xchg
clc
adc
ins
ins
adc
adc
xchg
sbb
into
popf
push
xor
rcl
rdpmc
push
add
and
or
sub
sbb
jno
mov
mov
sub
xchg
inc
mov
outs
rol
sbb
push
les
ins
sbb
jns
cmp
add
inc
shl
add
rcr
jmp
add
push
sub
or
je
mov
pop
mov
inc
pop
jno
or
addr16
sub
inc
mov
jno
lea
add
hlt
fiadd
sub
mov
mov
lods
cmp
mov
test
cmp
and
cs
or
js
push
(bad)
and
add
sub
test
out
cdq
jno
adc
mov
cwde
xor
mov
inc
aam
rol
xor
pop
adc
sub
into
ja
xchg
mov
and
push
aam
inc
cmc
push
add
cmp
dec
sub
and
nop
dec
in
push
inc
aam
pop
fadd
in
repz
ss
shl
iret
xor
xchg
push
ret
and
mov
adc
adc
int3
mov
adc
scas
sar
aam
mov
adc
add
and
std
ds
mov
xchg
pop
call
xchg
xchg
mov
and
neg
les
sbb
rcl
and
call
cmp
int3
ds
cmps
iret
adc
xor
adc
adc
das
dec
shl
rcr
push
mov
sbb
jmp
pop
push
push
ss
inc
out
call
sub
adc
sub
int
mov
push
loopne
jmp
xchg
pop
call
xor
cld
daa
sub
and
add
push
adc
inc
add
je
lock
repnz
dec
addr16
clc
or
and
or
mov
inc
xchg
push
mov
sbb
movs
arpl
hlt
dec
mul
neg
inc
or
cli
sbb
adc
and
cmp
xor
das
stc
dec
in
test
add
xor
push
dec
and
mov
add
and
mov
mov
mov
adc
cs
adc
sbb
jne
and
push
xor
test
adc
inc
test
scas
adc
pop
cmp
cmp
adc
sbb
fwait
and
je
push
add
pop
inc
(bad)
push
inc
fmul
andnps
ins
pusha
in
xor
xchg
mov
popa
xchg
adc
jno
into
push
mov
adc
xchg
jo
adc
adc
shl
adc
adc
pop
pop
sbb
pop
sub
mul
or
pop
cmp
dec
and
adc
mov
or
call
es
sub
rol
add
lock
mov
and
in
pop
add
pop
(bad)
push
and
add
sbb
loope
inc
and
add
sub
sbb
xor
popa
dec
shr
inc
adc
adc
bound
dec
add
mov
sbb
inc
gs
inc
outs
clc
clc
out
test
adc
mov
inc
add
push
nop
test
(bad)
or
push
push
mov
pusha
ins
das
mov
adc
push
add
push
(bad)
jge
sbb
mov
xor
adc
or
add
enter
inc
test
ss
out
adc
ins
jo
imul
fwait
nop
fs
add
icebp
mov
inc
(bad)
cmp
ficom
lock
sbb
mov
mov
(bad)
pusha
and
inc
lods
lods
add
sbb
stos
es
dec
sub
push
ret
or
adc
adc
adc
mov
in
shl
cmp
adc
sub
or
mov
imul
cmps
push
ins
or
les
imul
inc
push
in
ja
or
inc
mov
mov
out
mov
imul
pop
or
or
cdq
scas
dec
ror
mov
mov
xchg
mov
xchg
fmul
dec
repnz
sbb
push
sti
sub
adc
mov
and
stc
mov
add
or
mov
cld
sub
inc
xchg
push
jbe
ins
xchg
and
icebp
add
shr
xor
cmp
not
sbb
dec
(bad)
ror
inc
cmps
cwde
jae
sbb
inc
(bad)
int
in
add
imul
cmp
inc
add
(bad)
lock
add
jle
ret
movs
push
inc
or
jne
jae
add
lods
or
jbe
iret
jne
gs
or
pop
jne
fwait
add
adc
and
shl
(bad)
adc
jp
in
mov
jl
mov
adc
and
sbb
lods
xor
mov
mov
dec
adc
mov
sbb
xchg
int3
adc
xchg
adc
jle
in
pusha
jns
pushf
lods
cmp
nop
mov
rol
sub
inc
pop
or
or
adc
lea
movs
pop
inc
mov
push
clc
fcom
cmp
mov
adc
dec
aad
mov
ror
sub
outs
in
daa
dec
cmp
(bad)
and
xchg
pop
fcom
adc
pusha
out
sbb
stos
test
and
inc
dec
(bad)
int
shl
icebp
(bad)
ror
rcl
or
cmp
jne
xchg
mov
add
sub
push
(bad)
sub
sbb
fsub
adc
xor
lods
ret
enter
push
dec
add
add
fs
xor
dec
pop
push
loop
add
xchg
pushf
ret
xor
mov
push
inc
pop
adc
stc
add
inc
and
pop
pop
mov
or
outs
mov
popf
sub
add
scas
add
xchg
sub
mov
adc
leave
or
dec
hlt
jne
pop
aad
push
dec
mov
jae
and
loope
mov
scas
mov
shr
jp
into
in
sbb
push
into
movzx
fist
add
and
jmpw
cdq
adc
add
ret
or
and
push
in
xor
inc
jg
popa
rcr
je
add
std
cmp
mov
es
mov
cs
sub
retf
nop
inc
fadd
outs
xor
nop
sub
inc
daa
and
or
pop
dec
std
in
push
sahf
jb
mov
mov
dec
ud2
jle
shr
test
cmp
jp
aad
adc
push
jo
adc
cmp
fst
add
pop
stc
es
mov
sbb
pop
ret
add
mov
std
dec
mov
dec
xchg
sbb
adc
shr
js
cs
addr16
ss
shl
out
mov
je
or
test
jae
cmp
mov
pop
cs
mov
ins
cmp
and
mov
int3
and
cmps
mov
sbb
pop
jo
and
adc
mov
push
out
(bad)
adc
or
inc
inc
add
movs
adc
or
pop
and
pusha
pop
push
xor
adc
xor
mov
mov
and
and
cmps
and
mov
outs
dec
xchg
adc
jp
nop
mov
aas
bound
nop
jecxz
inc
xchg
cmp
cdq
je
aad
or
inc
rcl
inc
mov
rcr
push
and
jecxz
(bad)
mov
ret
jnp
cmp
and
sar
jns
jae
dec
cvtdq2ps
push
in
dec
ret
int3
adc
jl
pusha
int3
cmp
les
jge
mov
fisttp
jg
xor
pop
jo
push
fstp
or
adc
js
cmp
repnz
ret
nop
ret
dec
xchg
xlat
fisttp
rcl
jmp
xchg
mov
in
push
or
xor
pop
(bad)
or
lock
adc
or
pop
and
call
int
dec
mov
adc
add
ret
lods
adc
xor
push
sub
adc
iret
adc
test
inc
sub
das
pop
cmps
inc
xchg
fsub
test
pop
pop
push
cmp
(bad)
repz
sub
lods
in
jmp
retf
xchg
and
call
ins
pop
dec
lea
scas
test
jbe
div
in
mov
jb
pop
jns
shl
push
dec
pop
or
push
aad
fs
sbb
aam
and
inc
into
xchg
add
pop
mov
sbb
ret
xor
or
sbb
xor
xchg
mov
pop
ret
adc
push
retf
add
jle
pop
and
push
adc
push
xor
and
adc
(bad)
mov
cmp
adc
dec
scas
(bad)
mov
jge
bound
shl
fcom
mov
out
pop
jmp
mov
add
jns
mov
mov
push
pop
ror
push
idiv
fcmovnb
add
retf
jne
ss
and
cli
add
push
mov
bound
push
lahf
xchg
outs
in
gs
les
shr
mov
cdq
ja
das
mov
les
mov
lods
mov
mov
adc
movs
imul
ja
out
in
jno
lock
iret
mov
add
movd
call
push
push
push
pop
or
pusha
les
aam
(bad)
xor
fmul
std
rol
push
sbb
scas
pop
xor
in
lds
pop
inc
adc
jno
add
lock
cmp
mov
(bad)
retf
shl
cmp
jle
add
push
add
iret
cld
ficom
shl
je
push
dec
push
data16
out
sbb
push
int3
data16
sbb
inc
xor
sbb
lds
adc
fst
adc
adc
jae
push
sbb
fisub
jp
addr16
fmul
pop
mov
(bad)
mov
das
push
into
jno
cld
add
add
neg
adc
pop
adc
(bad)
dec
or
mov
adc
add
sbb
add
or
lods
jge
sbb
add
or
leave
or
adc
mov
and
loopne
mov
pop
test
sar
pop
mov
lea
add
push
sbb
pop
or
add
in
add
or
add
sbb
add
sbb
sbb
add
fimul
inc
or
adc
adc
sbb
adc
push
push
dec
fidiv
ss
mov
pop
push
pop
sbb
sub
rol
sbb
push
nop
mov
fs
and
or
adc
adc
icebp
int
clc
add
mov
sub
add
imul
jnp
loope
sbb
or
mov
movs
sub
mov
rol
neg
add
adc
xlat
and
dec
imul
mov
inc
cli
daa
sub
inc
inc
add
cmps
imul
clc
mov
hlt
aaa
mov
push
out
and
outs
test
scas
add
addr16
mov
and
fist
add
jge
jmp
and
cmp
fmul
cmp
(bad)
mov
mov
pushf
inc
iret
push
push
outs
jne
xor
punpckldq
push
into
cdq
fild
inc
sub
in
mov
and
ror
fcmovnb
aad
dec
shl
fxch
fst
aad
jns
mov
add
into
fimul
inc
rcl
push
sub
rol
push
or
das
shl
cmp
jl
adc
nop
fisub
xor
push
bound
js
jle
div
sub
sbb
into
xchg
inc
sub
pop
push
int
mov
cli
push
aad
push
or
or
repz
rcr
ins
sahf
out
xlat
into
fdivrp
rcl
push
sbb
inc
push
adc
nop
cmps
imul
popa
mov
loop
sub
ror
dec
mov
mov
mov
pop
pop
call
add
fwait
sbb
rol
in
icebp
inc
inc
test
jl
mov
or
dec
push
aaa
inc
or
call
mov
jbe
xchg
inc
mov
or
jbe
mov
xchg
push
fidiv
add
(bad)
adc
cmp
mov
and
or
mov
jecxz
gs
je
or
jmp
inc
pop
iret
(bad)
and
ins
push
push
mov
sub
sub
ds
int
push
lods
or
pop
push
pop
inc
fsubr
push
rol
ja
sub
push
not
jg
(bad)
dec
adc
call
ret
fadd
mov
sbb
dec
cld
adc
jbe
ins
and
inc
add
sbb
fs
js
js
sub
adc
test
adc
ins
fcom
pop
inc
enter
add
popa
mov
pop
loopne
and
xchg
jmp
push
in
movs
sbb
pushf
pushf
inc
push
in
mov
inc
mov
sbb
mov
mov
test
sar
sub
cmc
mov
add
and
mov
icebp
adc
push
or
mov
xor
sbb
lock
jmp
repz
mov
or
add
xchg
nop
das
adc
ja
test
xchg
rol
mov
lea
xchg
arpl
push
xchg
add
push
dec
push
pushf
pushf
in
cs
mov
cdq
mov
cmp
mov
adc
movs
jnp
mov
aaa
icebp
rol
(bad)
xchg
sbb
or
pop
sub
sub
ds
inc
fistp
fwait
cdq
pop
int
sub
sbb
nop
sub
mov
sbb
pushf
add
pop
add
adc
lea
cmps
test
and
mov
adc
mov
push
pop
add
mov
jne
inc
adc
or
inc
push
test
xor
add
push
retf
dec
push
inc
inc
dec
add
fwait
test
leave
add
movs
mov
pop
das
mov
shl
js
mov
scas
adc
inc
sub
jne
pop
mov
(bad)
lahf
push
into
mov
inc
cld
and
add
push
sbb
push
push
dec
adc
add
std
je
jp
mov
push
mov
jg
clc
ins
xchg
mov
inc
sub
test
jns
clc
and
jl
sub
cli
ficom
pusha
out
imul
inc
(bad)
add
icebp
pop
xchg
jl
loopne
inc
dec
inc
push
add
lods
mov
sub
ror
adc
mov
or
or
push
nop
sub
mov
ret
xlat
lods
adc
neg
jg
test
mov
add
jmp
jb
ins
cs
cmp
dec
push
mov
and
nop
jne
sbb
or
sub
jecxz
jmp
push
mov
rol
cli
nop
(bad)
fs
add
or
mov
(bad)
js
or
xchg
jb
imul
enter
pop
mov
(bad)
pop
cwde
ror
leave
mov
std
rcl
(bad)
fldcw
mov
cmp
jle
and
es
sub
cld
pop
in
fadd
and
add
movs
jbe
dec
cli
adc
jle
and
inc
adc
mov
lar
xor
cmp
sub
aad
pop
xchg
and
jge
jl
ret
cmp
pop
cld
jmp
and
pop
sbb
cmp
fiadd
xchg
and
sbb
jmp
push
or
div
lods
add
adc
je
fisub
aas
xchg
add
add
inc
and
push
daa
aas
xchg
pop
sub
add
(bad)
cmp
or
dec
xlat
dec
inc
jno
xchg
mov
dec
xchg
and
cmps
mov
ret
(bad)
aas
and
or
adc
jne
inc
mov
push
adc
std
and
test
cld
cmp
push
ds
adc
dec
push
std
and
inc
out
jecxz
imul
mov
mov
or
ret
aaa
pop
adc
adc
lock
dec
mov
push
jmp
pop
inc
cmp
or
ins
je
cmp
movs
inc
add
test
xor
sbb
mov
xchg
mov
jae
ror
popa
mov
pop
sub
shl
dec
or
xchg
add
push
add
nop
jle
jge
fisttp
mov
lock
arpl
test
push
outs
xor
sbb
and
mov
dec
fadd
fadd
test
push
push
and
mov
add
or
das
ins
imul
or
inc
xchg
mov
sub
ins
outs
nop
inc
jnp
pop
add
jnp
and
inc
mov
xchg
inc
sbb
jnp
hlt
jb
jl
sbb
jne
or
mov
push
int
lock
call
enter
inc
add
pop
enter
add
sub
and
arpl
jge
loopne
les
adc
call
aam
ss
inc
jmp
push
adc
push
inc
add
mov
pop
das
not
adc
fwait
and
js
mov
jge
rcl
push
pop
mov
pop
pop
cli
add
bound
and
imul
cld
or
adc
add
add
jl
test
ficomp
cmp
and
cmp
cmp
outs
repnz
popa
add
sub
sub
test
stos
push
ja
ins
ins
add
outs
dec
xor
mov
and
cmp
sbb
push
and
ins
inc
dec
inc
fadd
test
lods
cmp
inc
adc
xchg
test
shl
xchg
and
call
or
(bad)
mov
and
mov
push
inc
or
scas
xor
mov
xlat
int3
xor
sbb
inc
dec
adc
mov
xlat
fadd
movs
and
add
sbb
cmc
inc
loopne
cmp
xchg
es
ss
or
adc
lds
mov
cli
or
or
sub
lea
xor
push
add
adc
mov
adc
xchg
add
cli
xchg
dec
ret
iret
or
mov
sbb
mov
cmp
cli
mov
mov
cmc
test
ret
mov
add
or
lea
xor
dec
cmp
jbe
sbb
lahf
stos
push
hlt
cmp
push
jae
adc
dec
sahf
add
int3
jle
mov
pop
fmul
jne
fs
outs
mov
sub
call
pusha
rcl
xchg
sub
push
repnz
push
fs
push
cwde
iret
mov
or
sub
cs
sbb
sahf
enter
fisttp
cmc
fisub
test
imul
cdq
loopne
loopne
and
jo
cmc
ror
fmul
sar
or
fwait
xchg
dec
cld
cmp
inc
sub
adc
das
inc
test
sbb
rcl
test
dec
xchg
mov
add
and
bound
ror
inc
bound
pop
mov
(bad)
jl
inc
sbb
jmp
push
jp
jne
je
loopne
and
or
fisttp
ja
cmps
jge
ins
ror
sbb
fmul
cmp
aam
jno
mov
ss
gs
adc
inc
psubusb
das
adc
retf
inc
jne
sub
pop
push
not
je
sbb
je
sub
push
lock
adc
sub
push
in
mov
add
clc
inc
pop
rcr
sahf
inc
ror
inc
stc
lock
jle
(bad)
and
sti
xor
adc
and
adc
dec
xchg
mov
dec
lock
lea
inc
add
mov
inc
add
pop
mov
push
adc
inc
inc
pop
mov
dec
xor
pop
and
or
dec
lock
stos
jno
call
(bad)
xor
daa
lods
test
and
ins
jae
or
push
and
or
cmps
mov
(bad)
pop
sub
push
or
lahf
jnp
adc
cmp
ss
loop
dec
mov
aam
push
int3
in
test
lahf
lock
push
mov
pop
push
add
jl
add
repz
adc
cmp
gs
push
call
test
movs
xchg
add
inc
(bad)
xor
inc
repz
leave
cmps
or
dec
lods
add
popa
outs
sub
mov
mov
dec
and
push
pop
out
add
push
and
mov
outs
pop
arpl
jg
inc
fisttp
add
out
add
pop
sbb
les
dec
push
xchg
aam
push
popf
xor
add
aas
sbb
fild
cs
push
fs
push
popa
loop
(bad)
nop
cmovne
mov
mov
jne
ss
add
xchg
stc
nop
call
cmp
mov
mov
rcl
fwait
in
loope
push
push
push
or
fs
popf
iret
cmp
sub
push
dec
jl
pusha
mov
adc
push
lock
lock
jns
inc
push
sub
or
mov
xor
imul
inc
int
pop
push
dec
ins
sbb
(bad)
adc
push
test
js
pop
lea
scas
add
enter
and
imul
lds
pop
dec
pop
shr
mov
rsm
mov
inc
loop
or
push
push
cwde
rol
jae
inc
jmp
repnz
xchg
sub
bndldx
sub
xchg
inc
inc
push
add
into
cmps
add
lods
inc
sysret
sbb
ror
dec
jnp
xor
mov
stos
xchg
xchg
inc
xchg
and
sbb
adc
sahf
or
and
mov
jecxz
pop
pop
rol
add
and
push
push
sub
nop
or
add
scas
xchg
cs
xor
xor
pop
shr
sub
les
or
xor
(bad)
ss
add
aaa
adc
cdq
cmp
sbb
push
mov
cmp
cmp
push
ret
(bad)
dec
scas
xchg
stos
cmp
cdq
aas
inc
cwde
dec
cs
inc
inc
inc
xor
cdq
lds
leave
push
inc
inc
nop
and
dec
pop
inc
nop
add
add
pop
add
and
dec
and
rcr
mov
push
xor
xor
xor
mov
shl
sbb
xor
xor
pusha
sub
icebp
adc
ss
xor
xor
js
mov
cmp
dec
das
push
test
xor
xor
xor
xor
arpl
xor
jmp
xor
xchg
mov
loopne
dec
sub
xor
xor
mov
enter
cli
popa
and
or
enter
or
cmp
xlat
or
mov
idiv
add
imul
sbb
inc
or
cwde
or
pop
xor
sbb
lea
dec
adc
stc
dec
inc
jp
enter
addr16
add
call
es
push
jbe
hlt
push
jns
dec
add
jns
xchg
test
or
loope
dec
pop
fisubr
sub
stc
repnz
pop
pop
jle
and
cmc
mov
inc
cmp
jne
cdq
dec
or
xor
push
add
jg
dec
xor
nop
das
or
or
call
adc
mov
pop
xchg
sub
mov
hlt
jge
sub
adc
or
ins
inc
add
pop
cwde
xchg
scas
pop
ret
push
(bad)
dec
and
and
mov
aaa
cmp
loopne
jnp
sub
cmp
and
and
mov
iret
push
xchg
cmp
xor
lahf
ret
ret
dec
das
sbb
push
push
test
adc
sbb
mov
jecxz
push
movs
dec
or
push
enter
pop
push
sti
mov
arpl
addr16
add
or
adc
sahf
jb
cmp
and
mov
mov
das
stos
add
inc
mov
lds
mov
call
dec
dec
(bad)
push
push
mov
and
js
inc
sbb
data16
into
jp
mov
ss
mov
fwait
clc
fstp
pop
jmp
mov
scas
ret
mov
inc
addr16
sbb
add
xor
cdq
push
aad
adc
popa
or
jne
das
sbb
inc
push
add
pop
test
xchg
push
push
lock
mov
ja
hlt
pop
nop
mov
push
push
lods
dec
std
mov
mov
adc
fcom
mov
sbb
outs
sbb
or
adc
sub
iret
xchg
nop
je
adc
cld
inc
cmp
sbb
and
idiv
push
hlt
add
cmp
push
movaps
lods
into
clc
lock
repnz
and
pop
mov
mov
cld
and
mov
lahf
and
sbb
inc
sahf
ret
sbb
pop
clc
add
push
xlat
test
dec
es
fwait
xchg
dec
jb
cli
test
call
cmp
and
add
sub
outs
sub
(bad)
sbb
shr
repnz
mov
xor
xchg
mov
pop
add
push
arpl
aas
aaa
sub
pop
es
test
or
xor
add
nop
sar
jge
je
mov
ja
and
jl
out
pop
or
lds
loop
rcl
add
rcr
ret
and
lahf
shl
mov
adc
nop
es
daa
jl
outs
push
mov
or
fisubr
dec
int
dec
and
cdq
fbld
xchg
aaa
pop
inc
mov
dec
dec
cs
out
mov
loopne
or
call
lock
cmps
adc
pop
push
sahf
adc
or
cmp
fwait
ret
add
lock
jl
pop
mov
cmp
and
push
ins
cmp
sbb
sahf
lock
test
or
imul
pop
call
sbb
adc
add
add
push
jecxz
adc
jb
or
jp
jp
test
jns
rcl
xor
mov
xor
stc
(bad)
xchg
call
hlt
nop
(bad)
dec
pop
push
mov
inc
push
mov
and
shl
les
add
mov
mov
ror
imul
xchg
mov
mov
std
cmc
pop
sub
dec
cmp
push
push
jl
dec
test
jae
or
nop
mov
in
in
fcmovb
pushf
sub
loopne
ret
mov
and
dec
cmc
in
scas
ja
aad
sub
jno
sbb
add
sub
daa
std
dec
push
push
jne
push
and
xchg
dec
push
pop
jmp
cmp
cmp
dec
into
(bad)
shl
shl
ja
adc
movs
and
and
arpl
add
jae
push
adc
pop
shl
jg
leave
cmp
sbb
or
add
pop
ins
nop
ror
clc
or
cmp
or
xor
pop
mov
and
ror
std
(bad)
cmp
sbb
adc
xor
mov
ins
pushf
fdivr
dec
nop
js
ret
pushf
xor
sahf
mov
dec
test
push
dec
xchg
(bad)
ret
cmp
fsub
int3
push
adc
or
xchg
int3
lea
lods
xor
pop
rol
arpl
or
push
cdq
les
ins
xor
adc
je
jp
int3
sbb
dec
or
aaa
in
lock
fiadd
popa
nop
inc
pop
inc
push
add
sub
scas
lods
js
add
(bad)
daa
jne
call
movs
push
hlt
stc
loopne
ret
loope
adc
dec
aaa
xlat
mov
jne
cmp
jge
cmps
pop
int3
push
dec
jb
pop
xor
dec
push
and
mov
xor
fbstp
imul
xchg
hlt
add
scas
push
sub
sub
add
jae
sub
adc
xchg
push
jno
add
out
pop
pushf
and
mov
or
je
(bad)
jne
jno
fistp
jmp
xchg
or
movs
or
xchg
daa
dec
dec
pusha
and
movs
xor
in
adc
test
and
mov
popa
in
xchg
dec
aas
lea
scas
ins
test
iret
and
mov
dec
je
fistp
dec
jnp
test
pop
push
lock
xor
cmp
mov
rcr
or
ret
rcl
lahf
jne
fiadd
xchg
dec
inc
test
jge
daa
ret
push
imul
pop
test
jle
and
dec
lods
ss
cmp
mov
pop
inc
loop
mov
jae
adc
cmp
inc
sub
and
sbb
popf
cmp
add
or
dec
mov
xchg
mov
movs
xchg
call
in
add
test
inc
and
add
int
and
inc
mov
daa
xlat
jecxz
dec
xor
pop
dec
jg
repnz
mov
dec
aad
in
ror
cs
xchg
into
pop
jl
xchg
and
psubusw
xchg
sbb
xor
push
fs
cmc
ret
popf
push
sbb
vmread
fadd
adc
jnp
dec
pop
dec
das
sub
fs
mov
fild
push
pop
jmp
dec
scas
adc
cs
inc
retf
or
mov
xchg
fs
gs
adc
(bad)
sbb
hlt
inc
test
jo
or
ret
xchg
imul
mov
inc
and
fisub
jo
lahf
or
cmps
loope
sbb
cmp
xchg
dec
scas
and
inc
test
adc
cmp
dec
xor
aam
lods
sub
mov
pop
adc
mov
aas
jmp
stc
mov
push
cmp
rcl
or
mov
ja
adc
push
pop
daa
mov
jns
data16
dec
or
js
add
sbb
pop
cmp
cs
cmp
add
nop
ret
inc
jmp
xor
std
push
enter
daa
or
adc
inc
jne
loopne
mov
sub
loopne
repnz
(bad)
jnp
retw
xchg
aas
jge
mov
and
cmp
mov
jp
xchg
outs
mov
in
adc
push
sbb
arpl
icebp
push
ret
dec
sahf
xchg
mul
mov
popf
fisttp
psllw
loop
dec
jne
add
mov
jmp
in
pop
jo
add
jbe
cmp
imul
inc
sub
add
pop
mov
mov
(bad)
lods
mov
jp
pop
in
sub
xchg
in
retf
inc
xor
aaa
push
pushf
mov
mov
cmp
call
xor
iret
pop
pop
push
shr
test
adc
add
dec
xchg
sbb
push
and
das
lea
xchg
int3
sub
cmp
jg
lods
(bad)
xchg
out
mov
fisubr
loopne
and
push
in
mov
and
cs
bound
inc
call
(bad)
iret
push
pop
and
leave
call
mov
xor
inc
dec
ds
popa
je
cmps
int
ins
jle
mov
cmp
fwait
ds
inc
int
fbld
clc
lods
imul
sub
jb
push
pusha
retf
sysenter
pusha
mov
rcl
pop
add
mov
clc
gs
shl
jne
nop
push
inc
ret
fidivr
mov
mov
inc
push
dec
popa
push
adc
(bad)
mov
ret
push
jmp
sbb
loope
add
sub
std
xor
or
retf
aam
out
cmps
xchg
push
cs
hlt
ins
sub
and
enter
rcr
jae
sub
fs
stos
push
push
mov
in
pop
int
out
arpl
pop
ret
clc
inc
jg
repz
push
mov
je
or
iret
adc
jp
cdq
sbb
imul
or
repz
clc
sti
aam
or
cmp
xchg
mov
aam
mov
movs
adc
dec
xor
call
nop
push
gs
cmp
push
xor
ins
ret
retf
cmp
jmp
test
xor
sbb
test
sbb
add
js
add
xor
sbb
add
xor
int
push
call
dec
loopne
add
jl
or
sbb
mov
sub
inc
xor
add
int
jne
data16
jl
inc
pop
add
push
adc
pop
jle
xchg
cmp
and
xor
in
loopne
jecxz
leave
loopne
sti
ins
or
sar
dec
cld
addr16
div
test
loopne
retf
test
mov
mov
aam
(bad)
or
faddp
daa
ror
rol
ss
push
push
jmp
in
dec
popa
dec
cmp
push
lds
fadd
mov
pop
and
adc
into
push
pop
add
push
out
add
or
or
mov
or
and
arpl
mov
jecxz
push
pusha
jne
add
call
xchg
repz
bound
adc
movs
jno
sub
pushf
test
shl
mov
and
sbb
aaa
js
pop
sahf
das
xchg
lods
pop
mov
dec
sbb
add
(bad)
xor
sub
inc
sbb
pop
push
xchg
(bad)
shr
jno
pop
and
test
or
inc
add
daa
jl
out
es
pop
(bad)
ds
mov
and
psubsb
mov
or
add
sbb
scas
sar
dec
xchg
jb
(bad)
int
movs
sbb
adc
jl
dec
fistp
jae
cmps
cmp
imul
add
or
test
loopne
mov
or
add
call
cmps
sub
popa
dec
adc
(bad)
xchg
jg
sbb
in
cmp
jl
add
movs
test
inc
test
lock
fsub
mov
cmp
pop
arpl
add
inc
mov
imul
mov
arpl
sbb
jns
push
add
outs
rcl
add
rcl
add
ss
loopne
mov
lods
ins
sbb
enter
add
inc
add
jmp
sub
pop
push
jo
inc
xlat
mov
xchg
adc
rol
xor
les
movs
inc
pop
or
pop
aam
shl
adc
push
dec
fstp
adc
cmp
je
sar
jmp
imul
lea
daa
jmp
add
sbb
sub
mov
data16
sbb
sbb
xchg
jmp
and
clc
inc
xchg
clc
jl
mov
pop
push
pop
in
ds
dec
and
mov
xchg
inc
push
loopne
xchg
cmp
adc
cmp
xor
push
adc
pop
and
inc
sahf
rol
punpckhbw
or
inc
retf
mov
in
movs
cmps
push
outs
jb
dec
pop
adc
jne
push
sbb
pushf
mov
gs
addr16
repnz
pop
test
push
stos
mov
jg
mov
adc
das
mov
int3
in
dec
pop
inc
loopne
pop
pop
jno
shl
mov
mov
jl
jae
jl
sbb
mov
adc
aam
push
(bad)
(bad)
test
pop
movaps
push
pushf
push
adc
cmp
xchg
xchg
mov
sbb
ret
pop
mov
sub
in
xchg
or
mov
aam
mov
jecxz
add
and
or
mov
sub
dec
repnz
das
sub
dec
je
test
test
lods
push
fcom
mov
ins
xor
daa
imul
pop
and
rcl
shr
sbb
arpl
cmps
cmp
pusha
and
sub
ja
nop
out
dec
cmp
add
xor
inc
push
inc
(bad)
leave
iret
and
xor
je
inc
push
dec
in
outs
sub
push
add
call
lea
lahf
dec
sahf
push
push
adc
add
inc
es
jne
div
or
jne
xchg
add
or
mov
or
or
loope
push
push
jl
jl
out
and
mov
or
xchg
jns
push
test
or
xchg
mov
adc
adc
daa
mov
pop
xchg
xchg
out
mov
clc
cmp
add
inc
or
pop
mov
dec
jns
dec
push
mov
push
adc
adc
dec
in
mov
or
xchg
mov
mov
arpl
or
xor
and
and
and
or
sar
and
and
xchg
jne
ins
cdq
(bad)
and
jbe
pop
and
and
test
and
mov
and
jns
jns
das
fs
jns
jns
xchg
movaps
push
int3
xor
sbb
xchg
jns
push
pop
push
and
sbb
adc
mov
inc
add
cmp
mov
inc
pop
iret
add
add
mov
nop
add
pop
add
push
pop
add
mov
test
or
and
add
out
nop
jno
xchg
add
or
add
or
and
icebp
xor
add
adc
movups
prefetch
adc
(bad)
shr
xor
lods
xchg
add
sbb
adc
sbb
jb
fs
sub
fs
(bad)
in
fs
adc
imul
inc
add
outs
call
add
jge
jle
jle
inc
and
test
shl
jle
inc
enter
nop
test
pushf
nop
jle
jle
sbb
or
push
inc
and
add
das
add
add
hlt
idiv
fs
rol
rol
rcr
sahf
or
add
add
cmps
jle
inc
cs
or
jg
outs
inc
inc
inc
inc
xchg
mov
inc
inc
sub
mov
cs
inc
loope
xor
xchg
and
push
test
stos
inc
sub
pop
rcl
add
pop
adc
and
je
or
sbb
and
stc
nop
lods
or
xor
cmp
or
inc
or
pop
mov
jl
cs
adc
adc
mov
pushf
cdq
out
inc
mov
push
mov
adc
loopne
mov
inc
rcl
pop
or
jns
jb
stc
jo
jo
ins
push
adc
movs
jnp
adc
pop
rcr
jb
je
inc
sbb
inc
inc
and
lahf
sbb
movs
sbb
mov
lahf
daa
mov
add
js
test
sbb
add
out
adc
loopne
mov
push
in
add
xchg
or
ja
push
shl
xchg
xor
adc
shr
ret
clc
movs
cmc
add
sbb
mov
mov
or
fs
test
mov
test
pop
test
xchg
pop
cs
add
scas
jb
ror
adc
or
mov
mov
in
inc
ficom
add
fwait
adc
xchg
and
inc
js
adc
xchg
mov
inc
(bad)
cmp
push
push
push
rcl
aaa
mov
icebp
xor
push
das
jl
push
sbb
mov
inc
ds
adc
push
ror
stc
inc
push
dec
sub
push
mov
pop
xor
sbb
fld
fwait
in
loopne
mov
xlat
push
enter
(bad)
sti
push
es
les
inc
rcr
jge
cmps
and
iret
data16
retf
mov
xor
pusha
mov
aam
cmp
xor
pop
clc
enter
sar
adc
xchg
pop
cli
sti
pop
or
stos
fistp
mov
add
dec
jb
data16
ds
dec
sbb
dec
mov
mov
push
bound
cmc
sbb
pop
or
add
or
add
push
mov
ins
or
mov
ds
xor
fcomp
mov
mov
dec
popf
out
movs
call
and
sub
xchg
scas
or
push
je
xchg
fadd
add
mov
cmp
sbb
mov
adc
in
mov
pop
and
or
sub
mov
cdq
mov
ins
jl
or
sbb
mov
push
jl
jecxz
sbb
mov
push
jge
mov
and
je
stc
fadd
stc
(bad)
or
retf
call
cmp
push
or
add
cmp
xor
jge
sbb
push
jae
fldenv
int
add
push
xor
fdivp
mov
push
fdiv
adc
and
xchg
jl
repnz
xchg
mov
push
mov
add
not
ror
sub
adc
push
xchg
pop
addr16
add
mov
jne
imul
mov
add
dec
fwait
pusha
imul
xor
ins
cmc
cli
sub
scas
sbb
sbb
clc
cwde
push
sbb
add
leave
sbb
adc
sbb
mov
lock
ret
pop
pop
or
pusha
clc
loope
jns
xchg
pushf
mov
daa
leave
adc
adc
xchg
pop
leave
mov
mov
mov
jl
dec
push
add
push
cmps
pop
cmp
mov
pop
mov
cs
or
mov
mov
pop
shr
(bad)
out
cmc
dec
shr
pop
sub
mov
and
cdq
xchg
(bad)
xchg
xchg
mov
dec
push
pusha
sbb
rol
dec
add
or
xchg
jae
popf
pop
jl
setb
inc
jb
dec
mov
xchg
mov
xchg
adc
xchg
inc
add
xlat
test
and
cs
mov
xchg
push
xchg
inc
dec
add
jae
repnz
sub
mov
call
xchg
pop
sahf
out
push
in
xchg
push
or
jno
push
fst
mov
dec
xor
shl
rcl
and
add
add
ror
xchg
mov
adc
(bad)
fdiv
xchg
xlat
and
adc
pushf
nop
push
pop
leave
pop
mov
xchg
pushf
cmp
jnp
or
inc
shl
cmp
add
xchg
ror
test
push
movs
test
iret
mov
inc
out
sahf
xchg
call
sbb
pushf
call
or
or
call
xchg
jmp
xchg
mov
call
jmp
jmp
jp
ja
push
inc
(bad)
pop
jo
mov
xchg
or
cmp
add
dec
adc
loope
cvttps2pi
jp
dec
lods
arpl
push
addr16
push
je
push
sar
pop
inc
dec
movs
sahf
dec
popa
and
xchg
add
(bad)
mov
pop
adc
push
xor
cdq
mov
lods
(bad)
push
push
add
rcr
dec
scas
jl
enter
push
push
enter
mov
push
dec
loopne
cmp
mov
inc
psubusb
mov
rol
in
iret
pop
xor
bound
fwait
pop
repnz
pop
in
retf
push
call
scas
into
dec
sub
mov
adc
int
or
(bad)
ss
ret
xchg
pushf
dec
dec
pushf
call
ins
ret
in
push
leave
or
pushf
call
jb
push
enter
dec
xchg
add
je
adc
adc
fs
add
push
jge
adc
retf
xor
inc
adc
cmp
loopne
test
push
cmp
dec
xchg
fucom
and
pop
and
pushf
fwait
xor
sahf
data16
test
sahf
cmp
xor
jnp
test
nop
xchg
mov
into
push
add
jb
inc
leave
enter
and
enter
push
mov
push
inc
call
or
push
or
push
add
leave
push
push
and
and
push
ins
mov
fdivr
data16
jns
fwait
push
xchg
fwait
lahf
imul
mov
mov
stos
mov
imul
clc
enter
and
sti
fcompp
mov
jle
ds
mov
rcr
cmps
sub
aam
inc
test
test
mov
out
lods
mov
dec
movs
push
sbb
push
pop
pop
cmp
xlat
mov
dec
inc
call
lock
sbb
cmp
mov
inc
hlt
xor
lea
(bad)
pop
lods
jno
or
cwde
add
cld
cli
push
fsub
setno
repz
pop
sbb
and
ss
mov
mov
int
xchg
or
cmps
inc
pop
shl
sub
jo
ins
and
aad
sahf
lds
sbb
add
sahf
int3
jmp
out
in
mov
adc
sar
sbb
xor
ror
cwde
retf
cmps
mov
inc
leave
sbb
push
clc
jo
das
in
jno
(bad)
lea
jge
and
xchg
and
push
adc
mov
sbb
adc
push
daa
test
mov
sbb
imul
xchg
sub
or
dec
movs
push
mov
fisub
aaa
inc
loop
leave
inc
jo
and
push
inc
sahf
and
rcl
add
push
mov
jns
rcl
xlat
push
shl
loopne
dec
repnz
cmp
or
push
ja
data16
push
and
fld
xor
or
aad
xchg
push
push
es
pop
sub
mov
inc
inc
adc
lock
mov
ins
jb
sbb
inc
mov
add
call
mov
lea
pop
imul
push
and
add
mov
and
aas
les
add
out
push
das
das
stos
mov
mov
in
add
pop
add
in
ficomp
cmp
mov
pop
loop
shl
das
cmps
nop
adc
int3
adc
mov
and
mov
xchg
shr
and
das
cs
dec
pop
cmp
mov
int
pop
add
push
push
add
xchg
push
test
hlt
sub
pop
repnz
cmp
sbb
push
jg
jb
add
xlat
shl
inc
push
and
addr16
push
and
movs
push
xor
or
fld
add
sbb
clc
fwait
add
mov
dec
je
fwait
pushf
pusha
fisttp
pop
or
fnop
cmps
pop
mov
mov
mov
push
xchg
into
push
push
pop
in
mov
int
pop
sub
pop
ror
or
inc
mov
addr16
sub
test
pop
or
or
add
nop
sbb
out
or
mov
add
inc
adc
cmp
ret
cld
and
dec
cmps
sub
dec
fisttp
sbb
and
and
inc
add
movs
push
xchg
or
sbb
or
push
ret
sub
adc
mov
mov
test
ja
and
cmp
dec
or
nop
clc
and
or
mov
ds
dec
pop
jns
inc
lods
mov
add
dec
outs
xchg
pop
and
or
dec
and
push
sbb
adc
jo
std
fisub
mov
sbb
adc
ret
pop
jae
mov
(bad)
sub
test
les
sbb
mov
ffreep
leave
fwait
or
sub
push
xchg
dec
and
and
das
inc
push
inc
xor
xor
push
sbb
adc
and
mov
cmp
or
pop
xor
add
adc
xor
push
leave
push
jb
aaa
cmp
cmp
mov
xchg
ds
mov
cmp
retf
bound
pop
shr
fild
ror
int
nop
or
add
fdiv
mov
dec
rol
inc
inc
sub
inc
mov
inc
add
sub
mov
dec
nop
add
adc
pushf
add
xor
or
mov
xor
xor
xor
xor
pop
jle
jb
xor
(bad)
jmp
xor
shl
cmp
out
stos
cmp
xor
xor
xor
and
cmp
xor
xor
xor
push
jne
int3
xor
xor
push
lods
cmp
xor
xor
xor
adc
xor
xor
cmp
xor
lea
mov
or
dec
pop
and
movs
lds
pop
test
iret
xchg
mov
add
mov
popa
xchg
movs
cmp
mov
inc
add
cmp
inc
int
lock
cld
inc
scas
cmp
pop
ret
into
cmps
lods
repnz
and
(bad)
arpl
inc
test
jmp
xchg
into
push
popa
in
aaa
inc
push
fucomip
sbb
mov
ds
pop
xchg
mov
push
cs
mov
lea
mov
sbb
inc
neg
cmp
inc
fisubr
push
xchg
shr
jge
mov
(bad)
xchg
mul
ss
fwait
scas
lods
sbb
pop
xor
add
sbb
xchg
mov
int
gs
sub
add
or
xchg
ds
scas
sub
inc
dec
mov
dec
ror
and
mov
enter
and
fs
adc
inc
xchg
imul
cli
in
test
pop
cli
stc
xchg
add
and
dec
dec
xchg
cmps
lods
and
retf
push
cli
monitorx
ins
pop
and
pop
je
push
adc
jmp
pop
arpl
mov
retf
pop
imul
xor
daa
cs
mov
mov
sti
xchg
and
in
dec
jle
fadd
adc
scas
test
dec
mov
mov
jne
add
inc
add
popf
mov
cmp
push
ret
pop
cmp
pop
sub
jle
cmp
shl
inc
arpl
jae
and
or
or
aas
lfs
(bad)
xlat
outs
lock
cmp
mov
stc
dec
lods
sbb
pop
out
clc
aaa
mov
jns
loop
sub
test
nop
xchg
(bad)
(bad)
fcom
(bad)
fcomp
std
push
mov
test
pop
jb
dec
(bad)
push
(bad)
outs
push
retf
push
pop
push
mov
iret
mov
adc
sbb
and
sbb
push
dec
std
inc
enter
sti
dec
xor
xor
and
inc
mov
out
push
or
(bad)
add
and
cwde
mov
mov
ins
cld
ds
lahf
mov
jne
ror
mov
adc
xchg
shl
sbb
(bad)
jne
cmc
jmp
retf
inc
pop
xchg
inc
test
or
test
dec
or
xor
add
pop
and
ret
ret
or
adc
adc
jo
adc
mov
call
mov
inc
and
or
or
pop
sbb
gs
into
add
data16
or
mov
dec
mov
test
cmp
sbb
je
mov
nop
test
add
ins
inc
aas
adc
cli
add
jge
cmp
dec
cmp
xlat
mov
sub
push
and
adc
dec
pop
mul
imul
push
ss
ret
and
popf
stos
mov
out
popa
inc
pop
push
push
fiadd
rol
adc
xor
nop
sbb
in
and
xlat
inc
ficom
jg
mov
sbb
sbb
cmp
inc
and
outs
inc
push
cmps
xchg
adc
push
lods
ret
dec
or
sti
adc
(bad)
in
stc
and
loopne
inc
(bad)
add
lds
and
das
loope
enter
pop
or
xor
push
pop
sub
mov
aaa
adc
push
ds
sbb
les
adc
stc
dec
jl
fxch
(bad)
mov
lea
mov
aad
test
sbb
adc
mov
lahf
jmp
sub
jmp
dec
mov
icebp
in
add
cmp
in
xor
push
jb
ret
retf
adc
lods
adc
inc
in
aas
adc
push
pop
mov
xor
cmp
test
sbb
push
les
or
mov
or
popa
nop
push
and
retf
pop
cmp
loopne
mov
push
cmp
daa
push
(bad)
fucomp
retfw
cmps
xchg
scas
and
mov
pop
ins
gs
jl
data16
test
xchg
imul
sub
push
mov
inc
cmovno
xchg
inc
add
push
dec
pusha
add
jg
dec
je
pop
and
and
inc
or
adc
(bad)
pop
xchg
outs
ret
mov
mov
cld
xor
arpl
out
mov
mov
cld
mov
xor
cld
aaa
bound
inc
sub
adc
pop
sub
sub
cmp
cmps
ret
dec
clc
dec
adc
or
mov
dec
inc
cld
cld
dec
mov
add
add
add
sub
jmp
dec
mov
mov
and
xchg
or
rcl
add
mov
push
imul
imul
or
inc
add
dec
adc
pusha
dec
xchg
push
inc
or
add
mov
cld
mov
inc
es
xor
mov
scas
loop
ret
xor
into
xchg
sahf
(bad)
push
push
lock
sub
push
jne
push
mov
dec
fist
or
ja
push
mov
sahf
sahf
add
outs
xchg
popa
add
xor
mov
fs
je
jmp
mov
sub
pop
add
cdq
cmp
loopne
(bad)
xchg
cmp
pop
push
lahf
cld
push
sbb
push
addr16
lods
push
mov
ja
xchg
adc
imul
adc
out
popf
mov
ins
xor
jno
cmps
or
test
or
fsub
dec
sub
arpl
cs
scas
xor
outs
ins
sbb
mov
rcl
and
adc
ret
loope
mov
fmul
xchg
(bad)
mov
pop
pop
add
lahf
and
pop
(bad)
cmps
bound
or
ins
sub
and
lds
loopne
stos
pop
mov
jp
sub
loopne
pop
in
test
xchg
mov
cdq
sub
pop
jno
cmp
imul
add
jmp
in
inc
ret
adc
add
daa
add
or
out
or
inc
cmp
cdq
test
addr16
pshufw
xor
xchg
xor
test
jns
nop
xor
inc
lds
push
sub
shr
push
add
dec
or
loopne
cmp
sub
sbb
inc
adc
jecxz
test
lods
sbb
int3
pop
push
sbb
and
call
push
and
pop
leave
add
jno
fbld
rcr
mov
sub
add
mov
and
jne
mov
nop
popa
add
mov
sub
pushf
ins
ins
js
xchg
jno
xbegin
adc
outs
nop
scas
sbb
adc
dec
mov
adc
test
sbb
sar
popa
dec
iret
int
push
or
inc
sub
shl
cmp
xor
int
mov
jne
(bad)
push
push
lea
pusha
rol
and
jl
jb
jp
lea
inc
or
sub
adc
je
cmp
mov
inc
or
adc
and
jne
xor
or
add
inc
pop
loop
sub
add
xor
pusha
bound
xchg
pop
not
rol
add
icebp
mov
movs
pushf
xor
xchg
imul
ret
loopne
or
js
loope
std
(bad)
mov
lock
test
das
dec
lods
fistp
sbb
fst
jmp
push
in
out
rol
loopne
rcr
aaa
fwait
in
ins
loopne
hlt
mov
add
fst
call
sbb
rol
xchg
in
mov
ror
add
fs
dec
iret
aaa
ins
aam
fdiv
jnp
or
inc
popa
or
or
jmp
jmp
(bad)
and
mov
retf
sbb
ja
scas
adc
or
sar
pop
jp
adc
mov
lods
into
std
add
lock
mov
xor
add
test
add
mov
loope
mov
leave
cmp
lods
mov
cwde
xor
ror
sub
and
sbb
sbb
daa
mov
inc
and
mov
repz
xor
mov
call
or
and
scas
pop
test
add
fsub
pop
pop
cmp
scas
ror
inc
jle
pop
jne
xor
push
inc
and
adc
ret
shr
push
popa
loope
add
addr16
sub
push
sbb
mov
add
ret
sub
and
ss
pop
mov
movs
lds
inc
xor
push
push
add
mov
imul
adc
arpl
or
jg
xchg
xor
lock
cs
shr
ss
and
fadd
push
pop
xchg
jmp
adc
jb
shl
adc
cld
jge
sahf
adc
mov
cmps
jg
cmp
into
xchg
sahf
movs
je
add
sbb
sbb
test
inc
inc
sub
sti
div
add
les
inc
clc
mov
(bad)
rcl
adc
mov
adc
ret
(bad)
pop
jmp
stos
mov
add
inc
mov
sub
add
sbb
loop
add
or
and
nop
add
jb
leave
add
or
pop
enter
mov
add
mov
mov
mov
adc
ror
adc
inc
cmp
jmp
mov
mov
jmp
inc
rcl
sbb
dec
daa
or
aad
mov
(bad)
and
and
retf
pop
xor
sub
jmp
add
outs
cmp
xchg
mov
rcl
xchg
dec
or
data16
mov
or
push
push
mov
xchg
inc
add
jmp
dec
inc
rol
test
or
cmp
jg
jns
add
sbb
xchg
mov
xor
sub
stos
shl
sbb
jmp
shl
cmp
adc
xor
pop
and
adc
jbe
xchg
and
fcmovb
mov
ins
cmp
mov
add
and
xlat
retf
pop
xlat
movs
xor
mov
or
test
lds
shl
cmp
adc
js
movs
jae
fbstp
xlat
pop
test
out
ret
nop
cmp
test
cdq
stos
or
jl
out
nop
fst
mov
or
stos
xor
and
je
and
xlat
aaa
sub
je
mov
fiadd
jnp
ret
xchg
xchg
lods
imul
pop
test
xchg
inc
jle
scas
jns
cmp
mov
mov
cmp
mov
mov
pusha
(bad)
or
arpl
xlat
loope
arpl
xchg
xchg
dec
sub
cmp
not
sbb
adc
adc
fwait
movs
movs
and
mov
or
or
(bad)
in
sub
and
adc
add
jmp
mov
jnp
cli
popf
cmps
test
push
push
add
cli
and
dec
test
or
scas
ret
pusha
mov
ja
adc
add
pop
es
mov
mov
cs
fidivr
rol
dec
and
movs
adc
js
adc
(bad)
xor
ror
out
mov
int3
xchg
pop
sub
add
xor
dec
xor
and
jge
cmp
mov
xchg
add
(bad)
xchg
loope
lods
push
out
mov
mov
movs
push
inc
ret
jl
cmp
(bad)
push
cmp
in
das
inc
dec
cld
xor
pop
into
add
or
das
stos
ret
pop
mov
sbb
dec
ficom
out
adc
and
push
adc
push
out
adc
mov
cdq
lock
ja
add
lea
inc
sbb
cmps
mov
js
fmul
sub
inc
push
fwait
clc
(bad)
imul
sbb
add
sub
in
mov
aad
call
lahf
push
push
mov
fldcw
jmp
push
or
scas
inc
jecxz
adc
aad
cmps
test
in
cmps
jge
or
add
pop
or
jo
std
fcomp
cmp
lds
xor
xchg
and
jl
inc
(bad)
push
rol
push
or
inc
stos
cmp
push
mov
into
push
push
adc
jg
add
ror
xchg
push
jmp
sub
jne
pop
add
mov
fdivr
add
jmp
xlat
mov
mov
mov
add
je
imul
mov
ret
test
push
xchg
jp
jb
ins
sbb
cmp
enter
xor
xor
dec
mov
and
jne
pop
popa
loopne
mov
mov
loopne
and
xchg
pop
sti
movs
push
push
pop
push
ins
fcomp
fsub
lock
jne
xchg
les
aaa
aad
xor
nop
pop
outs
(bad)
push
add
clc
push
sbb
ret
cwde
rol
ja
test
cmp
mov
stc
jne
xor
jns
xchg
movlps
test
sbb
sub
sbb
or
dec
inc
cmp
sbb
xchg
sbb
movs
inc
(bad)
or
pop
fcom
sub
xor
popa
in
imul
mov
adc
inc
cmp
rcr
sbb
ds
icebp
inc
nop
xchg
mov
loop
mov
aas
jno
or
xchg
rcr
cmps
push
add
push
fisub
std
scas
rol
inc
mov
(bad)
in
leave
movs
fnsave
jne
mov
mov
mov
inc
xor
adc
xchg
dec
adc
mov
inc
mov
dec
mov
(bad)
dec
sbb
inc
mov
inc
call
pop
jp
add
and
dec
jmp
shl
mov
cmp
pop
mov
xor
mov
sahf
stc
lahf
and
pop
mov
sbb
mov
xchg
int3
xor
mov
xor
add
out
ins
add
in
pusha
daa
ja
and
or
imul
add
jns
lahf
sbb
push
xor
or
das
or
dec
cwde
dec
daa
ret
test
inc
dec
sbb
mov
push
xor
xor
push
pop
aam
mov
mov
mov
cmc
jle
pop
ret
dec
test
push
mov
or
ja
sbb
cmc
hlt
or
test
cdq
sub
ret
ss
mov
stc
and
push
xchg
mov
and
jmp
shr
push
cmp
icebp
imul
mov
push
shr
inc
cs
out
cmp
das
cs
in
dec
cmp
cld
in
sbb
inc
sbb
aas
pop
cmps
xor
add
or
mov
cpuid
push
js
pop
loop
sub
in
je
inc
mov
sub
cwde
cmp
sbb
inc
int
outs
sbb
add
adc
sub
es
dec
loopne
loope
xchg
dec
pop
sbb
add
sub
xchg
imul
push
call
xchg
in
add
pop
les
(bad)
in
cld
je
leave
xchg
xchg
push
cmps
sbb
sub
xor
test
call
push
pop
jmp
dec
inc
mov
or
call
shr
xchg
mov
mov
test
retf
je
mov
adc
adc
data16
dec
add
lea
sbb
dec
inc
xor
pop
jno
shl
mov
pusha
test
into
mov
fild
xor
ss
mov
xlat
rcr
icebp
cmp
push
push
inc
inc
lea
adc
push
call
iret
adc
adc
fcom
inc
fwait
test
sbb
mov
or
aaa
sbb
fsub
je
xor
xor
retf
jmp
test
sub
sbb
lds
imul
sbb
loope
add
push
movs
dec
arpl
and
or
les
rol
sub
loopne
or
icebp
je
jmp
sar
call
cld
or
adc
icebp
and
sub
xchg
adc
leave
xor
adc
jb
fcom
jne
nop
xchg
sbb
mov
push
sub
push
push
das
ins
pop
(bad)
addr16
dec
cmovnp
cmp
xlat
sub
mov
pushf
mov
leave
pop
xchg
add
adc
pop
sub
dec
mov
add
inc
pop
xchg
add
jne
fs
xchg
in
(bad)
mov
aam
mov
fdivr
dec
mov
mov
and
xor
(bad)
sahf
xchg
dec
scas
dec
lea
in
jb
inc
cwde
ret
sub
pushf
xor
sub
push
loop
popf
inc
sbb
mov
sbb
je
sub
or
into
mov
scas
sub
cmps
cmp
inc
push
out
pop
mov
push
rcl
add
out
add
sbb
adc
fadd
ret
sbb
add
xchg
test
or
and
add
inc
mov
xchg
add
sub
push
leave
inc
mov
mov
add
nop
mov
addr16
and
in
iret
in
std
in
and
pop
inc
ds
call
out
repnz
jmp
mov
call
and
movs
pop
int3
aad
lea
ret
leave
enter
xchg
shr
das
xchg
inc
add
vxorps
dec
clc
push
inc
inc
add
xchg
retf
add
add
xchg
dec
pop
popa
adc
pusha
enter
fs
popa
(bad)
xor
fwait
pushf
sub
or
xchg
pushf
jl
mov
mov
leave
popa
je
dec
jne
adc
or
inc
(bad)
cs
sub
out
xchg
fwait
shl
mov
push
mov
mov
movs
sbb
mov
inc
pop
popf
xlat
ja
inc
jae
sub
sub
lods
xchg
mov
jmp
add
and
xor
dec
call
xor
jns
enter
pusha
popa
pop
or
add
push
adc
jo
mov
rol
mov
ret
and
add
sti
inc
and
push
push
and
je
jp
mov
popa
sbb
js
add
lock
xor
xchg
adc
jg
adc
daa
inc
sub
add
jo
das
aas
mov
push
xchg
pop
pop
adc
push
adc
pop
fsub
push
mov
(bad)
mov
adc
in
xchg
call
dec
or
pop
cdq
pcmpeqb
cmps
sbb
mov
push
and
dec
add
cmp
inc
dec
xchg
jp
shr
outs
pop
sbb
pop
mov
cmc
sbb
add
xchg
aaa
fild
mov
add
inc
ins
mov
mov
push
mov
pop
scas
sbb
and
sbb
mov
lods
xlat
push
or
or
pop
push
ins
adc
outs
or
jle
push
gs
mov
outs
push
adc
sub
call
ret
pop
push
and
xor
push
mov
je
fnstenv
sbb
add
add
cmp
sbb
adc
jbe
xchg
data16
xchg
mov
dec
pop
rol
jge
adc
or
mov
mov
mov
mov
cmp
ins
jne
sbb
pop
movs
inc
pop
or
pop
pushf
add
sub
iret
push
int
dec
inc
popa
cmp
fidivr
add
or
and
test
inc
dec
sbb
outs
ss
test
scas
icebp
dec
adc
arpl
sbb
push
inc
shl
push
in
sbb
jae
dec
xchg
add
or
std
movs
(bad)
sbb
ja
inc
inc
(bad)
fst
dec
adc
or
inc
dec
pop
fmulp
iret
add
jp
jnp
mov
xor
jg
mov
push
xchg
lods
aas
sar
add
sub
js
sbb
or
push
push
dec
add
ficom
mov
push
rcl
adc
jg
(bad)
fnsave
nop
loop
out
adc
mov
mov
jmp
mov
inc
mov
bound
mov
cli
push
popa
cdq
push
add
adc
mov
ja
jg
pop
jmp
je
push
jl
mov
dec
test
jl
pusha
ret
scas
sub
into
mov
xchg
push
cmps
fcmovu
stos
in
xor
sub
push
and
pop
aaa
inc
add
mov
xchg
add
xchg
adc
mov
sub
sub
push
sti
add
pop
(bad)
push
cmp
(bad)
(bad)
adc
inc
sub
pop
je
lock
cmp
mov
or
push
xor
aad
and
xchg
cmps
outs
xchg
ins
xlat
adc
nop
sbb
jmp
push
jnp
mov
arpl
icebp
xor
repnz
sbb
nop
inc
in
in
loopne
in
pushf
fdiv
int3
out
mov
ret
push
cmp
sub
push
jo
out
cmp
nop
adc
hlt
in
sbb
pop
adc
fiadd
mov
aas
iret
rep
push
shr
(bad)
fld
out
mov
out
cmp
leave
fldz
jecxz
cmp
repz
add
or
repz
cmp
cmp
pop
outs
jns
lea
repz
mov
and
hlt
cs
test
aam
add
jno
lock
ja
shl
lods
push
daa
xor
cmps
ins
loopne
inc
push
unpcklps
push
and
push
jmp
add
stos
jg
add
mov
fiadd
retf
popa
fdiv
cmp
xor
test
add
jno
mov
imul
dec
add
pop
fild
aad
or
adc
cmps
lds
cmp
daa
push
xchg
mov
push
jne
mov
ins
adc
call
jnp
and
clc
dec
mov
xor
add
xchg
dec
ficom
jbe
and
aas
pop
out
dec
ss
push
sti
sbb
push
out
push
pop
daa
nop
outs
lahf
cld
cmp
stos
jno
sar
push
test
(bad)
arpl
call
div
(bad)
pusha
mov
dec
shl
xchg
sbb
lahf
es
icebp
push
sti
mov
jns
fucomp
icebp
test
imul
out
sahf
out
inc
push
pop
gs
out
sahf
outs
jns
lea
jns
mov
daa
or
in
fisub
push
js
add
cmc
pop
cs
hlt
and
lock
add
ss
aaa
inc
rcr
mov
adc
nop
jo
pop
push
out
movs
mov
popa
arpl
pop
and
push
and
ror
adc
mov
iret
push
or
dec
and
pushf
fwait
adc
jo
sub
nop
test
or
jmp
ficomp
jo
jae
dec
add
lahf
push
outs
ins
lahf
or
es
popf
pop
add
retf
and
push
jo
jp
mov
das
mov
pop
in
jbe
and
push
(bad)
dec
daa
outs
and
add
enter
mul
add
add
cmp
das
or
push
or
or
ins
push
addr16
xor
xchg
jge
je
or
leave
push
mov
or
push
fild
pop
push
outs
xchg
pop
or
mov
push
inc
mov
mov
push
or
adc
dec
ins
adc
mov
and
inc
inc
or
lock
and
adc
add
mov
leave
xchg
loop
stc
jnp
or
mov
daa
loop
pop
and
cmps
imul
ja
sbb
fdiv
add
or
mov
popf
ins
or
sub
mov
int3
fwait
mov
or
xor
or
adc
mov
repz
inc
sti
or
and
cmps
or
popa
mov
sbb
clc
out
or
(bad)
stos
sahf
push
inc
sub
jnp
loopne
add
pop
and
imul
ror
push
cmp
dec
dec
sbb
add
push
inc
sbb
enter
jnp
call
pop
iret
pop
inc
gs
push
push
mov
ret
or
int3
lea
cmps
repnz
sbb
xor
cdq
push
and
dec
jo
imul
sbb
inc
dec
enter
test
adc
and
fdiv
mov
adc
inc
dec
dec
or
clc
(bad)
nop
sub
mov
ja
movs
mov
pusha
pop
inc
add
jne
loope
and
mov
ins
rcr
mov
imul
ins
mov
add
adc
xchg
add
daa
or
dec
jmp
push
mov
cmp
xor
lock
sub
push
aas
xor
mov
dec
mov
or
and
rol
popf
xor
dec
fisub
dec
jle
les
sub
bound
jns
rcr
outs
inc
dec
rol
jns
xor
loopne
out
sub
call
jecxz
int
xor
cmp
nop
dec
dec
add
ret
das
add
sub
add
sbb
ja
or
mov
cli
lds
push
fbstp
push
cmp
jmp
pop
push
adc
push
add
xor
inc
sub
arpl
dec
sti
or
jp
call
jb
pop
fstp
fwait
nop
xchg
aam
les
pop
jl
or
aam
add
in
sbb
pop
push
mov
sbb
cmp
stos
int
cld
pop
add
and
and
popa
lock
ror
test
enter
(bad)
and
pop
ret
sar
adc
adc
xchg
mov
add
neg
int3
push
xor
ffreep
movhps
jl
xor
dec
ret
sbb
rcl
call
push
cmp
in
inc
push
sbb
pushf
das
mov
pop
jmp
out
std
cmp
or
xchg
arpl
imul
mov
xchg
xchg
jnp
loopne
ins
movs
loopne
jmp
mov
int3
mov
xchg
cmp
int3
cmc
fcomp
inc
leave
fadd
dec
inc
and
rol
sbb
pop
dec
psllw
push
cmp
sub
pop
frstor
cmp
aaa
out
add
mov
or
dec
push
aaa
xlat
and
mov
lock
and
pop
mov
scas
sbb
and
outs
lods
xor
pushf
xor
sbb
addr16
rcl
in
sub
lods
sbb
inc
movs
mov
xlat
gs
inc
(bad)
push
stos
xchg
push
and
dec
xchg
xchg
pop
push
xor
rol
mov
add
or
cmp
movs
ror
and
je
je
(bad)
mov
or
mov
jmp
cmp
jb
pop
lds
nop
cmp
sub
inc
xchg
retf
pop
or
retf
jb
pusha
push
and
push
call
outs
mov
mov
add
dec
mov
xlat
dec
xchg
jmp
shr
aad
(bad)
shl
xchg
jmp
and
jns
xor
les
pop
mov
adc
adc
sub
popa
pusha
jb
push
or
inc
rol
inc
or
or
mov
mov
out
data16
fwait
nop
xchg
mov
arpl
rol
ins
adc
outs
pop
les
cmps
ins
sub
dec
sbb
inc
cwde
dec
bound
push
jle
mov
or
mov
and
rol
xor
and
push
(bad)
in
adc
push
aaa
outs
xor
mov
nop
xchg
ja
sbb
daa
and
mov
xchg
pop
and
enter
mov
push
xchg
mov
pushf
repz
dec
test
push
push
adc
push
inc
daa
jmp
loope
repnz
pop
push
push
imul
add
cs
or
call
movs
or
pop
jo
push
and
or
call
popf
jg
push
movs
xor
je
xchg
cmp
inc
sub
das
cmp
or
movs
add
jb
jb
or
in
pop
cmp
add
add
mov
push
pusha
scas
enter
add
(bad)
lea
pop
sub
xor
pop
ror
cmp
inc
jb
inc
dec
inc
mov
lods
push
add
inc
adc
movs
movs
inc
and
cmc
sar
jne
or
adc
cmps
jmp
fild
pcmpgtb
pop
das
daa
daa
daa
push
push
dec
jo
fld
data16
mov
xchg
das
dec
push
add
ret
push
adc
rcl
fmul
mov
inc
into
shl
lds
shl
cmp
les
pop
add
and
inc
les
std
pop
inc
push
pop
sar
fild
(bad)
inc
sub
ficom
aaa
jp
push
test
gs
or
or
inc
inc
push
add
imul
ds
retf
inc
push
inc
add
pop
add
ret
dec
add
mov
pop
pop
repz
mov
gs
mov
sti
pop
or
call
and
inc
mov
adc
aaa
add
aam
jnp
and
push
retf
nop
or
icebp
pusha
out
aaa
dec
rol
add
fisubr
les
pop
aam
repnz
or
ja
lods
lds
out
xor
retf
add
pop
dec
adc
(bad)
or
call
push
leave
adc
sbb
adc
push
test
adc
or
outs
dec
push
pop
xchg
push
and
add
xchg
pop
movs
scas
mov
movs
in
(bad)
push
sbb
int3
outs
cld
ss
or
add
or
dec
ret
(bad)
xor
mov
aas
or
push
sbb
adc
(bad)
les
cmp
ror
sbb
inc
pop
pop
les
addr16
sub
jo
les
sahf
test
out
push
xchg
add
inc
mov
cmc
mul
adc
add
fcomp
aas
mov
dec
push
test
cmc
bound
adc
mov
sahf
aaa
push
cli
aaa
fcom
jmp
aas
jne
sbb
mov
mov
lock
repz
add
movs
xchg
xor
js
push
(bad)
cmp
add
jns
lods
dec
push
add
and
aam
push
xor
adc
inc
push
push
cld
sbb
push
lods
push
push
fs
add
jl
pop
jae
nop
and
hlt
pop
push
pop
mov
mov
fcomp
fs
push
popa
(bad)
div
fild
addr16
push
mov
xor
adc
xor
or
loope
movs
pop
add
adc
mov
aad
xor
outs
jae
mov
inc
ret
sbb
lods
cmp
xor
sbb
test
mov
aam
and
aam
test
add
xor
add
mov
(bad)
ficomp
and
outs
enter
and
mov
adc
pop
sti
(bad)
shr
push
int3
cmp
jae
jo
dec
pushf
ins
inc
pop
mov
leave
or
mov
ins
adc
mov
push
enter
cmp
push
adc
ja
aaa
sbb
arpl
outs
xlat
pusha
inc
pusha
ret
inc
dec
inc
add
mov
pop
push
or
outs
or
(bad)
jno
mov
rcl
das
gs
je
ins
xchg
or
fwait
add
js
add
sub
(bad)
int
cmc
sub
or
in
pop
(bad)
js
dec
push
fisub
rcl
mov
and
xchg
mov
xor
pop
rol
cwde
mov
ror
inc
pop
mov
ss
(bad)
push
ss
pop
mov
pop
(bad)
add
add
add
clc
push
call
lods
adc
clc
add
lods
call
scas
fisub
call
jns
sahf
imul
cmp
rcr
repz
adc
bound
enter
push
push
cld
fcmovb
pop
ins
mov
test
enter
pop
popf
push
hlt
outs
out
xor
pop
xor
jo
push
out
iret
jae
and
leave
add
imul
pop
cli
lock
ret
inc
sbb
out
mov
cmp
xor
xchg
inc
or
cmc
sbb
cs
mov
fiadd
sbb
lea
pusha
dec
push
jge
jne
out
jmp
pop
inc
repnz
out
add
outs
xchg
and
jns
sbb
mov
and
loope
or
pop
rcl
cmps
stos
ins
mov
out
mov
pop
inc
push
dec
xchg
add
pop
jno
and
fist
les
sti
clc
push
sbb
fisub
sar
cmp
or
test
add
cmc
push
sub
or
into
push
(bad)
sub
movs
jo
add
or
adc
mov
sbb
cmp
enter
adc
cmp
jo
push
xchg
int
and
pop
movs
dec
or
ins
shl
mov
cwde
cld
nop
mov
pop
sbb
adc
repnz
push
cld
jg
nop
xchg
les
jns
nop
push
pusha
adc
xchg
xchg
adc
push
cmp
xchg
xchg
push
fadd
in
enter
mov
(bad)
dec
xor
icebp
loopne
push
mov
xchg
jp
or
stos
mov
js
jecxz
jne
gs
mov
and
push
test
js
leave
push
stos
lods
mov
ss
and
adc
repnz
and
mov
pop
and
and
jp
adc
lahf
sub
add
add
cmp
fnstcw
push
clc
xchg
push
inc
mov
inc
repz
loopne
push
inc
mov
cs
mov
cld
pop
mov
xchg
jg
dec
ds
cmc
clc
and
and
fadd
clc
and
nop
loop
push
inc
xor
push
lea
and
add
sbb
and
xor
clc
and
rol
stos
sysret
sbb
push
sbb
js
fs
inc
and
and
(bad)
ror
jbe
fstp
sub
inc
mov
sahf
add
ins
dec
pop
and
and
add
add
pop
les
sbb
cmp
jns
xchg
cmp
xchg
lock
push
add
pop
add
xchg
sbb
in
call
jns
xchg
test
sub
mov
stos
add
xor
jne
dec
push
mov
es
or
test
pop
mov
lock
and
mov
add
jae
ja
lock
nop
je
and
and
add
xchg
mov
in
pop
or
or
and
sti
mov
dec
cld
and
sbb
sbb
pop
jno
mov
mov
or
xchg
or
mov
mov
inc
cmps
je
sti
push
fisttp
js
and
push
mov
add
cmovbe
nop
mov
sub
push
cmp
int3
ins
push
mov
rol
push
pushf
imul
sar
ror
hlt
xor
(bad)
neg
repz
int3
jo
push
adc
in
xchg
cmp
push
stos
iret
jnp
lods
push
cld
sbb
es
add
sub
pop
bound
mov
inc
push
shl
cmp
sbb
and
push
xor
cmp
sar
mov
jne
push
ja
adc
lea
cmp
dec
mov
mov
call
push
pop
dec
lock
ins
jnp
bswap
cld
inc
sub
fwait
cli
sbb
mov
pop
pop
inc
das
sbb
mov
daa
pop
dec
sbb
aas
adc
inc
pusha
aas
cmp
ret
popa
pop
cmp
adc
adc
daa
fadd
adc
daa
out
jne
js
sub
adc
iret
addr16
pop
push
in
sub
mov
xor
push
or
inc
jl
and
test
bnd
add
sbb
add
pop
xor
lahf
push
das
pop
ins
sub
inc
fs
fcomp
pop
ror
daa
int
mov
cs
shr
rol
call
or
addr16
add
mov
rol
enter
rcr
add
xchg
scas
inc
lahf
fsub
cmp
xor
fbstp
ficomp
ss
push
rcl
add
pop
iret
es
(bad)
xchg
ja
mov
ja
pop
or
xor
dec
and
inc
call
rcl
add
cvttps2pi
mov
fldcw
shr
mov
inc
sub
lock
pop
mov
add
aaa
mov
mov
pop
cmp
push
sub
mov
jmp
adc
(bad)
cmp
mov
jns
fwait
shl
fimul
and
or
add
mov
xor
cmps
push
jl
push
mov
ror
cmps
test
xchg
adc
test
pushf
nop
das
mov
ins
pop
cwde
lahf
sbb
sub
jmp
mov
push
push
and
adc
rcr
cmp
jge
add
in
mov
adc
pusha
(bad)
enter
add
add
and
or
enter
movs
add
test
popa
inc
repnz
in
(bad)
jmp
js
dec
fwait
adc
mov
cmp
sub
xchg
xor
pop
js
shufps
xchg
sub
mov
push
ret
(bad)
push
outs
cmp
jbe
xor
shl
and
mov
or
nop
or
sbb
imul
and
in
xchg
and
dec
mov
add
test
and
add
add
xchg
or
inc
sbb
xor
push
xor
dec
enter
or
sbb
pop
dec
xor
mov
ja
popa
leave
mov
and
dec
cs
jb
and
or
cmp
scas
es
leave
sbb
sub
inc
or
out
in
in
enter
add
in
cdq
ret
dec
xchg
in
cdq
xor
and
and
pushf
movs
ins
xor
inc
and
xor
adc
ret
and
nop
or
sbb
xchg
or
mov
scas
xchg
stos
in
ds
sub
push
and
cs
sub
inc
jns
and
xchg
imul
mov
inc
inc
repnz
inc
add
pop
adc
sub
movs
ror
adc
jb
dec
or
enter
aaa
test
dec
add
and
dec
push
push
mov
add
push
repnz
lock
cmp
xor
xor
pop
jle
(bad)
xor
xor
sbb
cmp
xor
xor
adc
push
jl
xor
xor
xor
xor
push
jns
jb
xor
retf
ss
xor
xor
mov
xor
adc
aaa
cmp
xor
(bad)
mov
add
xor
xor
pop
jle
jb
xor
enter
xor
xor
pop
jl
(bad)
xor
xor
adc
inc
push
xor
xor
xor
xor
dec
jo
aaa
test
xor
cmp
adc
jb
and
js
mov
xchg
push
fstp
cwde
aas
repz
lods
fiadd
stos
aas
xor
xchg
sahf
mov
lods
push
push
or
sar
adc
mov
test
out
inc
push
add
add
push
call
outs
scas
or
xchg
pop
mov
sbb
xor
clc
loope
mov
jg
add
add
xor
and
and
sbb
cwde
clc
stc
pop
div
setno
add
sub
lock
push
sub
push
inc
das
mov
mov
inc
adc
shl
dec
in
cmp
sbb
jl
push
hlt
stos
and
jge
scas
push
push
pop
call
cmps
icebp
xor
scas
inc
push
and
jmp
inc
push
pop
and
stc
in
push
dec
out
push
mov
test
pop
sbb
dec
dec
repnz
and
int
les
shl
push
pop
pop
imul
or
inc
lods
add
and
out
js
add
inc
sbb
mov
push
mov
jecxz
test
dec
mov
shl
and
clc
mov
push
dec
push
and
push
jge
aad
jo
aaa
test
add
outs
addr16
jns
in
and
inc
idiv
sbb
pop
inc
push
sbb
push
add
push
mov
add
xchg
mov
cmp
(bad)
adc
mov
jmp
stc
out
cmp
and
cmp
cmc
push
mov
dec
inc
arpl
fwait
cmps
dec
aaa
mov
test
mov
cmps
or
inc
(bad)
aam
jle
out
int
js
xchg
mov
and
push
add
inc
xor
or
or
mov
cs
(bad)
rcr
pushf
mov
inc
pop
push
add
and
(bad)
retf
test
mov
mov
outs
fiadd
les
mov
adc
dec
cmp
sahf
and
lods
or
xor
push
adc
xlat
cmc
cld
outs
push
sbb
dec
push
sub
add
push
push
adc
fdiv
ins
ds
add
xor
or
mov
lea
fwait
add
add
je
cwde
jge
xchg
movs
dec
xor
inc
nop
inc
rcr
xor
cmp
test
xchg
retf
rcl
and
push
cld
dec
xchg
push
aaa
movs
add
inc
or
sub
push
aaa
pop
cmp
sbb
in
jl
scas
adc
scas
mov
sbb
push
mov
loop
sahf
mov
push
xchg
and
xchg
in
inc
leave
bound
mov
mov
adc
adc
dec
pop
lea
push
jo
mov
rcl
sub
xor
(bad)
test
add
aaa
push
xor
push
popa
or
sbb
iret
adc
dec
and
dec
xchg
enter
mov
es
das
aam
les
nop
dec
push
mov
and
dec
scas
mov
cmps
aaa
and
and
sub
add
mov
or
mov
pop
mov
pop
popa
(bad)
dec
iret
push
loop
div
add
dec
movlps
mov
call
(bad)
push
aad
daa
fmul
repnz
les
push
mov
dec
push
push
inc
ds
pop
dec
push
jns
mov
test
lahf
icebp
pop
pop
inc
loop
or
data16
shl
inc
jno
adc
fstp
sar
or
test
and
arpl
ja
mov
test
xor
add
fistp
xchg
and
mov
and
fs
push
jg
add
ss
addr16
ss
pop
loop
push
sbb
adc
fadd
push
xor
xlat
dec
pop
sub
ret
mov
lods
dec
add
push
add
dec
inc
add
xchg
cmp
call
dec
jnp
add
ds
push
add
js
sbb
imul
jbe
push
icebp
push
iret
adc
mov
or
das
mov
adc
sbb
nop
pusha
jmp
into
jae
mov
add
mul
pcmpeqw
mov
je
jg
pop
and
std
xlat
sub
dec
je
jmp
sub
(bad)
js
jne
push
mov
or
jo
mov
add
mov
sub
cmp
xchg
push
sbb
iret
jge
fwait
int3
jmp
dec
fadd
call
jns
or
sub
pop
fcom
mov
cmp
mov
push
rcl
in
and
sbb
inc
aam
test
inc
pop
or
enter
fdivr
cdq
adc
in
xor
fcmovnb
sbb
ins
and
add
dec
mov
in
es
mov
dec
sahf
sbb
in
fcom
in
xchg
ss
mov
or
adc
jo
cmp
xor
(bad)
shl
sub
xchg
ss
into
xor
adc
ds
cmp
xchg
add
and
out
mov
push
ds
fmul
iret
add
xchg
push
push
inc
out
bound
and
bound
cs
pop
in
inc
cs
in
jmp
sbb
sub
shl
sub
push
adc
out
jge
or
or
cmp
add
test
adc
and
test
fistp
jb
les
mov
popa
add
frstor
or
jne
jmp
imul
adc
mov
mov
je
retf
not
mov
popa
(bad)
rol
pop
sbb
aam
push
inc
aaa
sar
pop
out
cwde
xor
xchg
fild
sub
inc
cmp
fbld
inc
dec
xchg
lods
invd
cmp
lea
fcomp
test
bound
addr16
xchg
adc
pop
clc
imul
cmp
push
xchg
fdivr
add
loopne
shl
and
in
push
mov
fnstenv
sub
cmp
inc
or
add
shl
repnz
xchg
ja
call
(bad)
jmp
int3
mov
adc
mov
jae
ret
shl
in
lahf
inc
test
jnp
jae
push
or
imul
add
outs
jle
mov
mov
xchg
jnp
das
dec
or
adc
daa
adc
sbb
mov
add
inc
add
push
push
mov
outs
pop
inc
push
jle
mov
test
loopne
and
jmp
dec
call
pop
inc
mov
lock
jecxz
sub
loopne
jmp
sub
daa
imul
inc
je
cmp
and
push
loop
inc
mov
jnp
dec
popa
dec
nop
iret
retf
stos
aam
movd
xchg
nop
pop
push
ins
add
mov
test
mov
push
adc
in
dec
inc
sti
pusha
jnp
mov
sub
push
mov
and
adc
or
push
or
cmps
jg
gs
inc
xlat
enter
and
aas
inc
sbb
inc
rol
loope
rol
sbb
(bad)
or
aad
dec
sub
jo
adc
or
lods
push
add
es
xchg
pop
xchg
retf
fcmovnb
sub
icebp
xor
push
or
pop
mov
mov
adc
(bad)
cmps
adc
and
xchg
je
dec
movs
mov
popf
mov
dec
jns
xchg
xor
or
scas
test
xor
mov
pop
mov
aas
adc
icebp
push
add
test
dec
hlt
adc
sub
dec
pop
push
mov
loope
out
in
nop
hlt
hlt
sub
adc
fldenv
das
mov
inc
add
add
ds
adc
mov
inc
jno
popf
push
pop
cld
push
xlat
inc
je
dec
imul
test
mov
and
mov
xor
mov
sub
xchg
sub
cmp
add
cwde
add
shl
and
ins
sbb
or
sub
and
retf
fs
jle
sub
cs
repz
hlt
pop
cmp
pop
dec
mov
mov
xor
or
ret
adc
push
add
nop
and
or
and
sub
(bad)
adc
push
loopne
xor
mov
xchg
jno
scas
mov
mov
adc
ror
in
mov
nop
test
and
pop
or
in
adc
adc
add
sbb
dec
or
ret
dec
outs
ins
sub
inc
mov
cmp
mov
xor
cli
lods
mov
pop
jbe
add
adc
pop
push
pop
mov
inc
loope
shl
hlt
imul
mov
iret
mov
push
add
inc
inc
xchg
sbb
pop
push
aam
ret
cmp
out
or
dec
sub
xchg
xor
mov
pusha
bound
xchg
and
xchg
dec
(bad)
fprem1
ss
test
pop
lods
inc
neg
or
mov
ins
shl
cmp
neg
push
dec
pop
jle
add
cmp
xor
pop
jmp
fistp
inc
push
inc
enter
sbb
sahf
popa
pop
lds
lods
arpl
mov
outs
pop
imul
or
xchg
pusha
or
or
push
or
mov
sbb
(bad)
out
nop
std
inc
shl
inc
mov
xchg
sub
inc
push
and
sub
or
pop
scas
ins
sbb
add
mov
inc
pushf
pop
scas
and
jge
add
ins
jl
popa
dec
lock
inc
inc
fisttp
iret
mov
cs
popf
sahf
pop
jmp
xor
adc
mov
mov
dec
xor
add
call
add
sub
nop
loopne
movs
fcom
or
pop
loope
daa
aam
jp
adc
xor
inc
scas
int
jmp
sub
mov
aad
fild
ins
loopne
call
mov
sub
scas
mov
push
sbb
cmp
inc
and
movs
sub
xchg
mov
imul
loopne
jae
imul
and
push
or
dec
sub
xor
xchg
xor
or
jp
push
or
leave
adc
mov
ss
add
leave
xchg
mov
and
adc
or
std
shr
dec
mov
mov
pop
adc
mov
mov
in
ret
test
test
mov
adc
or
sub
pop
jb
adc
lock
mov
xor
push
fistp
push
daa
dec
pop
pop
add
dec
loop
sbb
add
pop
push
xor
ret
iret
sub
inc
dec
xor
sbb
inc
cmp
and
mov
pop
fwait
cmps
rol
add
fwait
cmp
sahf
sub
fwait
adc
mov
jg
aam
dec
mov
rcr
pop
iret
shl
cdq
mul
jecxz
mov
ins
add
add
cmp
adc
push
sub
jmp
xchg
push
and
in
mov
mov
mov
and
rol
push
movs
jecxz
inc
popa
push
nop
mov
push
adc
aas
loope
nop
(bad)
loope
sbb
mov
ror
adc
or
popa
mov
and
mov
pop
push
icebp
add
ficom
dec
test
xchg
push
sbb
arpl
jb
mov
dec
and
adc
add
lods
int3
adc
les
xchg
xor
aaa
test
lds
and
mov
push
enter
inc
mov
aad
int
add
dec
pop
or
sbb
mov
push
push
mov
mov
fsub
and
and
add
sbb
mul
sbb
push
jg
jnp
add
and
push
mov
popa
loop
or
and
pop
shl
and
movs
mov
inc
sbb
pushf
arpl
aas
xor
add
dec
mov
push
scas
inc
pushf
stos
daa
les
mov
and
(bad)
sub
mov
es
xchg
cmp
movs
pop
je
xor
or
movs
mov
mov
add
les
mov
popa
rcl
or
cmp
jno
push
xchg
call
(bad)
stc
movs
xor
or
pushf
fucomi
sar
lds
popa
mov
add
inc
test
in
push
test
dec
aad
adc
clc
jns
and
push
xchg
clc
aaa
jno
sar
shr
movs
lods
mov
and
fild
add
stos
pop
fwait
lods
sbb
adc
mov
push
mov
sar
mov
sub
push
push
loope
mov
outs
leave
pop
push
shl
push
inc
call
inc
inc
xchg
cmp
aaa
mov
inc
and
addr16
inc
push
push
add
mov
dec
jmp
pop
adc
dec
lock
hlt
into
push
test
pop
or
or
sub
cmp
push
mov
push
jb
je
ins
inc
or
fucomp
sub
sahf
mov
(bad)
outs
nop
sub
fadd
cmp
or
popf
leave
inc
xchg
sbb
and
cmp
ret
dec
dec
inc
cmp
adc
add
inc
mov
fistp
cmp
jne
mov
or
pop
adc
dec
pop
aas
xadd
push
or
jl
rol
add
ss
cdq
mov
scas
push
psrlw
push
mov
lds
or
push
pop
mov
add
les
adc
push
adc
dec
sar
jp
loopne
out
push
jnp
xchg
xlat
inc
mov
dec
aaa
ret
xchg
test
push
sub
or
add
inc
or
pop
inc
push
mov
scas
push
jmp
out
scas
ins
or
cmp
add
pop
call
xchg
aas
call
add
(bad)
jmp
jmp
cmp
adc
shr
mov
in
cmp
dec
je
cmp
(bad)
cmp
pushf
ins
push
add
int
xchg
and
mov
or
xor
and
scas
addr16
aam
cwde
jo
jmp
adc
nop
scas
aam
mov
aaa
jbe
test
cwde
and
shl
int3
out
adc
mov
xor
and
dec
movs
adc
xor
mov
push
call
sbb
adc
sbb
mov
inc
mov
movs
mov
xchg
or
loop
or
cld
nop
ret
dec
call
or
jne
inc
and
adc
dec
sbb
call
pop
push
xor
outs
scas
cmp
lea
cmp
dec
jl
xchg
xchg
cmp
retf
ror
fild
rcr
test
add
rcr
movs
add
add
outs
xlat
dec
stos
push
add
ins
sbb
movs
xor
xchg
add
in
cmps
xor
add
aas
and
or
pop
mov
or
dec
jmp
sbb
and
or
push
cmp
call
sub
(bad)
js
in
test
movs
call
dec
inc
cmp
add
test
or
dec
cld
add
xchg
hlt
sbb
push
jae
stc
push
xor
ins
cmps
inc
lock
adc
inc
(bad)
mov
test
push
push
dec
jmp
lea
dec
pop
mov
sub
push
shl
test
push
lods
push
movs
or
daa
test
je
push
gs
sub
ret
sbb
dec
rol
and
xchg
sub
xor
enter
jle
xchg
sbb
mov
sub
scas
es
fs
lock
sub
sub
popa
cmps
ins
outs
aam
mov
mov
cmp
adc
and
sbb
and
outs
in
shr
xor
push
mov
es
fimul
je
add
je
popa
cmp
sbb
jno
mov
xlat
adc
add
cmp
sbb
inc
push
cmp
outs
cvtps2pi
movs
sbb
fs
mov
inc
(bad)
pop
pusha
in
lahf
push
aaa
add
pop
mov
loop
add
dec
call
icebp
out
retf
mov
std
sub
add
xchg
js
std
dec
ja
adc
(bad)
xor
mov
inc
adc
push
ret
xchg
inc
inc
call
xchg
mov
ret
or
inc
mov
nop
push
mov
or
jmp
pop
fimul
ins
push
mov
mov
popw
xor
lahf
xchg
les
jo
ror
inc
xchg
js
xor
mov
xchg
or
lods
or
dec
and
mov
addr16
shl
ja
jl
inc
and
es
mov
out
xchg
js
stos
add
push
les
and
mov
dec
jle
ret
pusha
jmp
xor
xlat
ins
mov
imul
add
lahf
fiadd
outs
iret
jb
mov
adc
pop
fldenv
dec
lea
jge
hlt
inc
mov
jb
push
add
mov
ss
cmp
retf
iret
add
jne
push
cmps
adc
arpl
cmp
jb
adc
add
daa
or
mov
mov
outs
ins
adc
imul
add
ret
dec
mov
mov
mov
sub
xchg
xchg
or
ins
push
in
push
sub
fnstcw
int
or
pop
aaa
mov
je
or
je
inc
mov
and
jp
arpl
fadd
mov
sbb
mov
push
xor
fadd
adc
mov
sub
adc
push
pusha
inc
gs
aad
push
nop
popa
push
sub
adc
cmp
je
xchg
adc
dec
test
inc
(bad)
stos
pop
fsub
jg
add
mov
push
add
js
push
ins
cmp
cwde
inc
mov
rcr
sbb
inc
cld
fidiv
inc
adc
sub
cmps
adc
sbb
and
jae
out
add
cdq
xchg
inc
dec
push
imul
aad
scas
or
add
sub
ins
ins
retf
dec
ja
pop
mov
enter
cwde
xlat
repz
dec
pop
aaa
ror
xchg
push
outs
cmp
push
sub
or
add
repz
test
push
pop
push
ins
add
aas
iret
cwde
mov
jbe
cmp
dec
mul
add
scas
cmp
je
add
rcr
sub
sti
mov
mov
test
pop
inc
cmp
les
or
cwde
mov
xchg
call
cs
and
test
and
bound
test
xlat
pop
add
in
or
push
dec
mov
and
jl
xor
sub
pop
sub
in
leave
push
xchg
shl
mov
add
or
inc
rol
mov
dec
inc
fdivr
jne
cmp
jne
int3
adc
mov
mov
sahf
xchg
imul
js
and
test
add
dec
pop
cmp
inc
lds
test
push
xchg
cwde
and
cmp
adc
xchg
outs
xchg
sub
cmp
add
cmps
bound
mov
dec
mov
data16
adc
xor
int3
dec
xchg
sbb
movs
ret
or
fistp
and
sbb
jo
rcl
push
aad
inc
mov
fisttp
dec
popa
loop
adc
loope
inc
inc
push
arpl
adc
jmp
ja
addr16
push
cdq
js
and
and
sub
prefetch
sar
(bad)
int3
mov
mov
push
and
ins
sbb
mov
mov
rcl
inc
xor
popa
rcr
fwait
daa
xor
std
push
retf
and
adc
cmp
mov
outs
sbb
inc
xor
outs
xchg
imul
and
pop
and
xor
in
cmp
lods
sbb
mov
ins
add
adc
or
or
mov
dec
jg
inc
push
push
mov
xchg
or
fild
cmp
clc
pop
inc
jo
add
xchg
push
mov
stos
fist
add
inc
pop
xchg
test
xor
xchg
jp
add
adc
mov
jmp
cs
pop
adc
cdq
push
sub
enter
aaa
xor
and
pop
ret
inc
mov
mov
lahf
mov
adc
jo
jp
dec
loope
adc
push
mov
sub
add
icebp
inc
sub
mov
or
or
rcr
sbb
sbb
adc
(bad)
sbb
dec
imul
sbb
mov
dec
adc
push
dec
hlt
jmp
xchg
das
inc
cmp
dec
add
pop
sub
sbb
in
push
add
jmp
adc
aas
popa
scas
pusha
dec
movs
stos
mov
mov
mov
sbb
lds
adc
adc
sub
pop
jl
jo
cmp
mov
ret
inc
cmp
aam
and
inc
sbb
pop
xor
adc
jnp
or
mov
sub
jns
ret
jo
or
xor
add
or
jno
add
xchg
(bad)
and
ins
mov
ins
movs
cmp
mov
inc
ret
jmp
mov
loopne
dec
enter
add
mov
in
adc
dec
das
rol
push
inc
push
and
push
pop
in
shr
ret
lahf
out
mov
push
ins
cs
sub
add
fbstp
xchg
sbb
jmp
stos
test
es
loopne
xor
mov
adc
cmp
push
pusha
pop
xlat
lahf
mov
out
ret
movs
dec
mov
xchg
sbb
icebp
lds
outs
or
cmp
sbb
push
cmp
xchg
jno
xchg
mov
or
enter
jo
dec
inc
xor
aam
xor
or
leave
inc
adc
ds
push
aas
test
inc
fs
jg
ret
push
pop
adc
hlt
int3
cmp
pop
sub
dec
sbb
(bad)
fstp
pusha
sbb
enter
js
and
fwait
int3
adc
ret
xor
sbb
addr16
cmp
push
sbb
ud2
pop
adc
scas
icebp
in
cdq
push
add
movs
dec
mov
inc
je
push
rol
adc
js
out
and
dec
or
mov
icebp
or
cmp
adc
je
pop
push
gs
cwde
adc
inc
cs
mov
jne
int
jge
int3
cmp
push
cbw
or
xor
pop
repnz
dec
sbb
cmp
lahf
test
outs
sbb
popa
repnz
cdq
pop
inc
das
movs
jbe
(bad)
adc
xchg
sbb
adc
test
xor
add
inc
in
rcr
ror
test
add
add
or
retf
dec
adc
fcomp
pop
loopne
push
ret
or
dec
mov
sbb
xorps
ins
xchg
cmp
sar
sub
mov
adc
sbb
adc
cmp
inc
jmp
dec
xchg
dec
ror
inc
test
mul
or
fwait
aam
mov
cmps
mov
or
adc
pop
out
sbb
outs
sbb
and
inc
loopne
xor
pop
jae
ret
popf
cmp
(bad)
mov
pop
or
stc
jae
ins
add
mov
(bad)
fmul
call
dec
and
push
mov
aad
movs
or
pop
xor
adc
adc
or
xchg
test
pop
fimul
mov
stos
push
mov
test
jmp
add
mov
mov
or
adc
mov
add
movs
add
ins
mov
stos
test
idiv
adc
(bad)
jns
in
adc
rep
rcr
adc
in
jmp
ret
add
jbe
lahf
std
xor
adc
pusha
fdiv
mov
push
sub
and
jb
arpl
and
push
or
mov
dec
cdq
jo
bound
ins
movs
(bad)
frstor
jno
inc
xchg
add
xchg
leave
jno
movs
and
mov
es
sub
jae
xor
mov
ret
xor
dec
shl
adc
dec
fcom
mov
mov
ja
jnp
adc
add
pop
shr
sbb
dec
push
add
cmp
jge
xor
clc
sub
das
cmp
jle
pop
or
cmp
sbb
cs
sbb
add
mov
jge
adc
icebp
lds
pusha
arpl
jle
daa
or
jno
pop
stos
stos
cdq
sbb
mov
inc
enter
fdivr
add
call
(bad)
and
adc
pop
sar
inc
inc
and
ss
dec
and
push
adc
push
pop
frstpm(287
mov
nop
jge
int3
push
or
les
inc
adc
imul
sahf
push
jmp
pop
adc
cmp
sub
pop
sub
mov
xor
sub
sub
cmps
test
or
fadd
(bad)
jbe
aas
and
lock
mov
mov
jmp
inc
sub
add
xchg
jno
or
mov
outs
push
dec
push
jge
rcr
lds
pusha
xor
fs
psraw
aad
push
ds
mov
xchg
out
and
push
sbb
outs
push
sub
es
outs
jmp
adc
sbb
lds
jmp
sub
sub
movs
lds
neg
aas
jne
pop
aam
inc
xchg
dec
inc
lea
ins
test
mov
not
adc
lds
mov
je
daa
add
fucomp
(bad)
jo
dec
aam
cmp
jae
jecxz
xor
xchg
ror
sub
shl
sub
out
(bad)
lods
call
dec
imul
xor
ss
jl
sub
or
out
sbb
arpl
inc
and
rol
popa
mov
xlat
pop
xor
cmp
sti
mov
mov
push
add
loopne
arpl
aam
or
sbb
inc
add
and
mov
sub
cmp
sbb
jp
lods
xor
arpl
je
cmp
dec
mov
pop
cmp
mov
sub
jb
sub
imul
add
xchg
pushf
int
inc
mov
xchg
mov
fs
or
adc
mov
inc
mov
xor
adc
adc
cmp
das
iret
ja
mov
adc
add
push
ds
or
jg
or
rol
pop
shr
push
mov
inc
(bad)
rcl
sub
add
xchg
ror
jecxz
jmp
xchg
mov
adc
and
(bad)
daa
dec
and
and
das
pop
dec
adc
pop
les
sbb
fsub
xor
inc
cmp
pop
inc
ins
xor
or
or
test
shr
lahf
scas
dec
adc
retf
call
enter
shl
or
xchg
fmul
lahf
push
xor
out
nop
sbb
push
nop
mov
jne
bound
mov
sub
pop
jmp
sub
mov
jo
sub
inc
inc
sti
adc
lods
cmp
arpl
adc
imul
leave
daa
sbb
cmp
je
shl
push
add
mov
rol
adc
mov
xchg
sbb
ret
fisub
adc
adc
je
add
jns
mov
scas
cmp
cmps
daa
push
push
xlat
push
xor
jne
rcl
dec
mov
popa
fmul
ds
aas
loopne
pop
mov
and
mov
add
xlat
dec
enter
mov
(bad)
int
push
sbb
mov
cs
dec
(bad)
pop
mov
pop
or
das
mov
fst
mov
mov
ret
adc
xor
xor
call
outs
hlt
mov
xor
imul
mov
mov
sub
jbe
ins
adc
cmps
jo
jno
inc
xchg
(bad)
les
call
das
push
imul
(bad)
test
jo
xor
out
daa
gs
add
lods
add
jbe
sbb
adc
and
js
push
add
push
jecxz
and
sbb
ficom
push
inc
(bad)
sub
shr
or
adc
push
daa
neg
mov
out
push
mov
or
and
or
or
inc
ds
inc
hlt
xchg
sbb
das
and
pop
and
adc
fcom
and
add
and
push
mov
add
or
retf
jns
ret
jne
adc
call
jne
pop
push
fcmovb
rol
pop
(bad)
mov
pop
rcl
sub
out
push
enter
sbb
xchg
sub
cmps
mov
jecxz
mov
gs
jecxz
out
mov
inc
cmp
sub
rep
popa
ins
cmp
sbb
out
xor
dec
popa
sub
and
ret
or
pop
pop
ins
ins
pop
ret
mov
mov
jnp
(bad)
ror
xor
outs
adc
mov
cdq
add
rcr
xor
adc
and
mov
es
mov
add
pop
shld
lahf
push
outs
clc
adc
mov
jg
dec
mov
bswap
mov
dec
fidiv
or
int3
and
idiv
lock
mov
xor
inc
inc
jl
inc
jo
dec
pop
mov
xlat
inc
or
arpl
xor
xchg
movs
retf
popf
shr
dec
xchg
mov
lahf
pop
inc
mov
add
in
in
ret
aaa
jecxz
add
test
imul
push
xor
pusha
dec
add
test
fwait
dec
sub
sbb
adc
movs
push
rcl
arpl
ffreep
stc
dec
and
ins
les
jecxz
mov
popf
push
mov
add
out
(bad)
fs
clc
scas
adc
mov
outs
aad
outs
mov
aad
xor
pop
mov
addr16
sbb
jp
pop
dec
lock
jmp
icebp
ds
xlat
popa
jae
pop
fadd
loopne
(bad)
mov
not
xchg
push
popa
and
outs
aam
sar
aas
inc
cmps
add
push
aaa
adc
clc
sahf
push
add
lock
jnp
add
inc
fdivr
aad
sub
jno
sub
sub
cwde
cmp
clc
adc
in
cmp
ret
xor
and
hlt
push
push
add
xchg
arpl
pop
add
pop
popf
add
leave
push
or
in
dec
arpl
ja
pop
daa
jg
jo
scas
(bad)
enter
cmps
cmp
cdq
sbb
test
fnstsw
and
xor
mov
jns
push
xor
jne
jge
mov
xchg
mov
jmp
leave
xor
sub
adc
clc
inc
sbb
es
data16
and
out
pusha
stos
add
xchg
fild
pop
xchg
(bad)
xlat
popf
sub
cmc
pop
bound
cwde
mov
rcl
pushf
(bad)
mov
add
cld
in
inc
imul
or
pop
lods
jb
call
(bad)
jo
pop
pop
mov
dec
repz
push
in
loopne
push
pop
xchg
call
sub
mov
push
jb
or
cmc
sub
inc
sbb
cwde
mov
xor
sahf
jno
iret
mov
xchg
jne
sub
rcr
shl
sbb
fsub
add
lock
fnstsw
cli
and
add
add
xor
mov
lock
mov
push
fs
mov
nop
pop
cwde
fs
push
mov
rcl
or
ret
aas
les
xchg
mov
or
jnp
xor
dec
jecxz
push
out
push
xchg
or
jne
(bad)
mov
test
jmp
mov
or
inc
outs
push
dec
arpl
xchg
sbb
fld
(bad)
inc
fstp
and
pop
pop
or
mov
retf
mov
jns
mov
jns
popf
push
pop
in
mov
cmp
fmul
inc
ss
mov
push
and
dec
or
pop
setle
dec
jbe
scas
test
lahf
jge
ins
cmp
sub
inc
push
push
adc
xchg
inc
pop
pop
sub
outs
rol
and
push
or
(bad)
pop
adc
and
mov
or
das
cmp
add
xchg
movs
lods
(bad)
dec
xchg
nop
imul
retf
fild
fcom
mov
imul
dec
inc
add
inc
test
or
sbb
outs
add
and
push
enter
sahf
inc
call
arpl
push
rcl
fs
mov
fisttp
xchg
add
lods
je
mov
shl
mov
ins
mov
shl
je
xchg
fs
cmp
inc
(bad)
imul
push
add
dec
adc
sub
and
add
add
and
push
sub
in
movs
fs
int3
adc
pop
add
pusha
xor
or
nop
pop
xchg
es
jl
movs
add
sub
test
sub
cli
mov
push
push
clc
xor
sbb
xor
dec
arpl
loop
(bad)
sub
popf
icebp
shl
xchg
loopne
rcr
jmp
and
lods
and
mov
xor
pop
cmp
push
pop
loope
dec
paddsb
push
add
iret
ins
pop
add
dec
dec
scas
adc
sub
sub
xlat
sub
push
jmp
inc
ss
adc
mov
inc
inc
sysret
in
pop
lods
mov
lahf
fmul
movs
xchg
mov
xchg
idiv
popa
jo
in
aad
test
fs
push
js
pop
js
mov
sub
mov
xor
push
imul
cmp
xor
xchg
xchg
shl
cld
adc
adc
inc
mov
mov
mov
sbb
add
enter
mov
scas
nop
dec
repnz
out
test
lea
cwde
pop
xor
pop
mov
pop
adc
pop
push
push
sbb
push
jp
cmp
sar
test
and
int3
dec
inc
inc
sbb
lods
stos
mov
ja
xor
movs
fwait
dec
rol
or
test
dec
inc
int3
out
lea
add
sbb
out
add
das
mov
ss
mov
mov
popf
pop
jmp
sbb
and
test
xor
loope
hlt
xor
push
lds
mov
cmps
hlt
mov
movs
and
adc
xchg
pop
pop
loop
sbb
and
sub
sbb
or
mov
jmp
popa
or
lods
or
pop
mov
cmp
push
mov
jl
imul
adc
pushf
lods
xchg
data16
push
pushf
pop
lock
test
ins
(bad)
pop
cmp
xchg
add
add
ret
cwde
inc
push
adc
movs
push
loopne
ins
scas
sub
daa
dec
imul
adc
push
jecxz
or
nop
les
ret
inc
xor
aaa
pop
dec
mov
jp
mov
repnz
test
push
jecxz
xchg
xchg
mov
loopne
pusha
push
(bad)
(bad)
out
fiadd
xchg
inc
sbb
inc
sub
xchg
jo
push
in
ror
mov
retf
sub
push
add
push
mov
jmp
dec
sub
inc
pop
invd
je
ss
data16
push
add
cmp
pop
pop
sub
mov
stos
fwait
lods
outs
add
movs
lods
mov
fwait
pop
jecxz
adc
jp
bound
xor
sbb
add
adc
inc
xchg
pop
aaa
cmp
or
stos
shl
push
cs
push
cs
mov
loopne
rcl
inc
push
hlt
pop
popa
in
push
and
add
pop
rol
sub
mov
push
rcr
and
shl
mov
pop
xor
scas
or
push
cmps
call
inc
test
ret
scas
or
cmp
jle
adc
xchg
test
test
sbb
sbb
inc
sbb
les
mov
call
adc
mov
imul
xor
and
cmp
cmp
je
add
movs
clc
cs
cmp
int3
iret
push
mov
and
fisub
mov
int
or
and
ror
xor
sub
or
out
push
test
jmp
add
shr
sub
fsub
sub
aad
xor
push
jbe
add
aam
adc
cmp
call
test
push
and
mov
add
adc
xchg
xor
add
aas
mov
xor
mov
js
daa
or
call
push
add
pop
mov
(bad)
jnp
cmp
dec
scas
mov
sbb
push
shl
sbb
les
movs
cmp
syscall
inc
adc
sub
push
xchg
rol
mov
lods
shr
addr16
imul
in
xchg
out
stos
clc
sub
mov
cmc
adc
(bad)
fadd
(bad)
test
test
push
ins
mov
push
mov
inc
pop
(bad)
adc
or
xchg
push
pop
out
jne
inc
inc
mov
ret
lock
outs
jl
repz
in
adc
and
jp
xchg
sbb
xor
mov
rol
mov
inc
es
stos
xor
test
outs
bound
repnz
mov
and
push
mov
mov
and
cmp
xor
clc
fadd
mov
mov
imul
mov
ins
fcomp
or
jmp
xor
rol
or
loopne
and
inc
das
xchg
sbb
cmp
sbb
pop
xchg
shld
push
xchg
add
add
or
stos
mov
mov
cmc
and
aas
outs
sub
fimul
and
inc
sub
sbb
and
adc
and
pusha
xchg
add
fld
aaa
sub
js
xor
es
stos
retf
cwde
jl
je
add
popf
or
lahf
xor
inc
fistp
(bad)
test
or
xchg
xchg
sub
fimul
pop
pop
mov
jp
or
xor
cmp
mov
xchg
add
in
loopne
dec
pop
cmp
xor
add
int
xchg
sub
clc
add
add
push
cmp
inc
mov
inc
jmp
and
add
and
or
xchg
ret
or
add
push
cmp
jne
inc
ror
and
mov
add
sbb
je
or
das
xchg
sbb
add
sub
or
dec
dec
sbb
cmp
adc
jb
xchg
inc
das
jnp
mov
dec
and
push
push
cli
mov
int3
sbb
jecxz
xchg
add
adc
jge
mov
pop
shl
icebp
ror
sbb
mov
cmp
aam
addr16
ret
cld
push
sub
sbb
aam
jg
lds
sar
lea
push
sbb
cmp
adc
lods
jo
mov
loop
dec
push
loopne
push
cmp
das
jge
in
fisub
shr
pop
das
add
sbb
adc
movs
sub
and
push
dec
sub
test
aas
shl
adc
sub
movs
xchg
sbb
pop
pop
hlt
jmp
or
and
ins
in
(bad)
ins
dec
jae
mov
mov
test
inc
dec
(bad)
and
push
call
test
fwait
jae
or
mov
repnz
pusha
or
adc
adc
mov
push
sbb
xor
and
loop
mov
push
cmp
and
ins
mov
(bad)
enter
and
xchg
pop
inc
rcr
add
popa
jns
je
cs
rol
or
add
data16
packuswb
xchg
or
cmc
xchg
sbb
into
hlt
sub
stos
test
loopne
and
adc
xchg
sub
or
mov
lock
add
ins
pop
jg
add
push
loopne
push
fild
shr
lea
or
and
inc
or
jmp
add
xchg
jb
sub
(bad)
sbb
mov
shl
and
xchg
xchg
nop
mov
jno
ret
mov
inc
mov
retf
loopne
xchg
mov
jecxz
xchg
inc
or
loope
cmp
push
inc
adc
das
push
lea
loope
adc
rcl
or
jbe
mov
into
into
cmp
movs
xchg
mov
push
and
add
loopne
cmp
or
adc
cmps
mov
cmps
pop
aam
sar
imul
mov
add
in
popa
leave
inc
or
or
inc
xor
iret
mov
or
int
retf
mov
jge
xor
or
xor
add
sbb
(bad)
daa
push
loopne
inc
add
cld
adc
leave
xor
sbb
fcmovu
push
aaa
xchg
daa
inc
jg
repz
and
xchg
gs
fwait
ja
leave
dec
pop
mov
and
pop
imul
dec
cwde
test
push
and
adc
call
nop
outs
jb
jns
mov
ffreep
pop
inc
iret
pop
jmp
aad
lock
pop
mov
in
mov
fld
sub
jle
test
push
adc
pop
or
inc
add
and
or
add
mov
ds
sbb
ret
cmc
cmp
inc
push
dec
lods
movs
push
and
inc
gs
popa
inc
mov
mov
add
or
and
das
mov
and
cmp
or
iret
and
sub
ret
mov
lds
scas
adc
loope
loopne
mov
aad
in
push
or
test
pop
push
je
jo
sub
scas
pop
movs
and
lods
jo
inc
inc
mov
mov
scas
pop
dec
add
pop
mov
jbe
dec
pop
sbb
iret
fistp
xor
adc
ret
adc
push
jmp
clc
test
mov
mov
push
scas
and
or
xor
adc
pop
popa
arpl
pop
or
push
xchg
xchg
adc
mov
inc
mov
sbb
dec
dec
dec
fstp
daa
mov
mov
dec
push
adc
jne
and
push
lock
jno
test
dec
or
mov
jne
dec
add
ret
movs
ins
sbb
leave
and
(bad)
test
(bad)
fild
xchg
(bad)
sub
shl
xor
push
inc
cmp
ds
push
inc
inc
adc
mov
inc
call
sbb
push
or
pop
inc
imul
add
xor
adc
in
lds
sub
sub
dec
jo
sbb
rol
mov
xor
rcl
cs
shl
xchg
jo
mov
sub
add
sbb
push
dec
inc
cs
or
xchg
inc
dec
shr
and
dec
fld
fdiv
xchg
inc
or
dec
dec
and
sbb
jmp
lahf
ins
xchg
inc
in
xor
push
mov
retf
shr
cmp
push
adc
popf
mov
jge
pop
aad
cdq
adc
cvtpi2ps
push
and
pusha
test
add
hlt
mov
movs
aam
sbb
test
popf
(bad)
xchg
scas
sti
and
(bad)
sub
(bad)
scas
nop
sub
xchg
cmps
and
sahf
out
not
mov
or
and
jnp
jmp
dec
jmp
dec
xchg
ret
arpl
and
add
and
ins
adc
enter
rcl
pop
inc
movs
sub
cs
or
mov
mov
aaa
clc
retf
jmp
mov
retf
push
cmp
mov
in
push
call
add
push
pop
dec
add
dec
sar
xchg
push
and
adc
push
adc
cmp
adc
inc
adc
dec
adc
int3
jmp
lods
jb
cmp
push
ja
inc
sub
arpl
pop
push
sub
dec
sub
les
mov
sar
mov
xchg
inc
rcr
pop
or
es
scas
repnz
jns
test
push
and
(bad)
sbb
push
adc
or
addr16
and
xor
jae
add
xchg
daa
mov
add
xchg
daa
add
and
movs
nop
iret
adc
ret
aas
xchg
nop
in
pusha
daa
inc
ret
sbb
les
imul
cmp
shl
ds
push
sbb
pop
in
dec
sbb
push
xchg
add
mov
inc
rcl
add
stos
in
je
and
xchg
aad
rcr
les
or
out
fwait
jmp
pop
rcl
shl
enter
push
dec
retf
inc
add
pop
fs
add
adc
inc
or
inc
dec
add
inc
or
inc
dec
xchg
and
xor
sub
adc
iret
push
(bad)
xlat
cmc
shr
push
pop
cwde
mov
lods
push
ds
xchg
(bad)
push
dec
loopne
int3
shufps
push
xchg
pop
repnz
mov
pop
sgdtd
shl
es
add
psrlw
adc
and
mov
out
lds
or
xor
xor
add
mov
xchg
inc
mov
in
movs
mov
test
adc
dec
and
inc
jno
(bad)
push
loopne
or
pop
(bad)
fsubr
cmps
fwait
push
pop
pop
add
ss
iret
push
add
mov
or
sar
pop
cmp
sub
fmul
sub
push
cmps
jge
lods
inc
cmp
push
adc
push
clc
scas
mov
pop
les
push
and
push
sub
dec
fadd
adc
and
push
ror
aaa
dec
std
push
xor
jo
ret
jno
jno
inc
test
fiadd
test
and
(bad)
pusha
add
cmp
and
iret
stos
ins
imul
inc
loop
repnz
mov
inc
int
mov
fst
xchg
mov
jge
cmp
mov
in
jno
dec
mov
sbb
push
pop
movs
push
adc
xchg
fwait
pusha
xchg
ja
ds
imul
adc
movs
fist
movs
jle
adc
push
jae
add
or
popa
mov
push
jno
pop
add
imul
push
cmp
(bad)
xor
mov
mov
fistp
mov
les
cwde
xor
sbb
dec
inc
popf
out
call
fsubp
(bad)
lock
sbb
(bad)
adc
lds
retf
ror
push
add
dec
int3
in
call
lods
inc
add
ud2
int
cmp
push
dec
call
jb
repnz
and
bound
fst
iret
inc
add
scas
stc
call
cmp
jge
sub
push
inc
dec
mov
sbb
ss
xchg
pop
sub
call
mov
push
ins
xchg
cmp
pop
neg
mov
xchg
add
in
dec
pop
sbb
icebp
add
sbb
addr16
adc
push
cmp
adc
pop
cld
ins
aad
adc
sbb
ds
or
jno
fmul
xor
jo
dec
sbb
ja
repz
add
lea
sbb
xor
push
or
dec
das
pop
and
or
mov
call
sub
leave
add
outs
or
sub
inc
inc
ret
sti
cmp
mov
retf
push
in
iret
sbb
mov
jmp
fild
jns
mov
mov
icebp
inc
test
ins
nop
in
xor
mov
inc
stc
mov
fdivr
push
call
inc
imul
mov
call
xor
jno
add
pusha
in
jno
cmp
loop
cdq
cs
push
xor
xor
cwde
cmp
inc
or
push
add
jnp
inc
push
fild
aaa
push
das
mov
sub
and
push
sar
mov
xchg
test
das
pop
sbb
or
test
xchg
data16
or
mov
out
sar
addr16
xchg
xchg
xchg
mov
ret
test
popf
call
call
adc
adc
mov
mov
mov
push
xchg
dec
aaa
test
push
movs
dec
inc
cmps
dec
push
sbb
jge
lods
nop
sub
or
push
or
dec
inc
dec
push
cmp
sbb
mov
inc
mov
nop
adc
neg
(bad)
cmp
fimul
es
or
sub
lahf
xor
call
dec
fucom
mov
out
jno
ror
js
icebp
jbe
mov
bswap
shr
push
leave
(bad)
mov
shl
dec
es
and
sub
je
push
jecxz
dec
test
or
push
add
das
inc
add
add
xchg
sbb
in
add
add
cmp
pop
or
test
or
push
add
inc
push
inc
mov
xor
dec
rcr
xor
int3
pop
dec
xchg
neg
or
test
pop
int
pop
adc
pop
popf
and
or
adc
sbb
push
mov
sub
iret
adc
test
gs
in
push
adc
xor
das
enter
push
jge
ror
enter
push
aam
imul
lods
sar
enter
and
shl
fld
(bad)
popf
xlat
mov
mov
aam
inc
jns
xchg
push
js
sbb
inc
repnz
mov
add
or
mov
inc
push
lea
outs
adc
mov
mov
fisub
cmp
test
xchg
fwait
push
clc
mov
sub
les
xor
adc
mov
inc
shl
push
sbb
gs
xlat
and
mov
outs
(bad)
(bad)
jl
push
push
test
mov
xor
mov
pop
out
dec
adc
ror
or
adc
nop
xchg
mov
mov
jp
push
jb
aam
das
rol
mov
push
test
jae
out
mov
mov
dec
aas
pop
cmp
xchg
mov
adc
and
fnsave
or
shl
shl
mov
xor
jl
mov
and
ficom
push
fld
mov
jo
push
sub
push
add
inc
aas
sbb
sub
jl
and
push
popa
push
jno
or
mov
aad
mov
pop
or
add
idiv
scas
ins
mov
sub
cmovs
or
mov
and
cmp
and
sbb
xchg
sahf
add
fst
adc
daa
aaa
sbb
mov
mov
pop
stos
dec
pop
cli
js
nop
and
xor
(bad)
and
pop
xlat
push
dec
call
je
ins
jnp
(bad)
fisttp
fsubr
and
sbb
in
(bad)
push
fisttp
sub
add
push
xor
pusha
lahf
or
loopne
pop
xor
out
retf
xor
push
adc
sbb
stc
add
xor
adc
sbb
push
or
adc
push
int
adc
or
not
or
dec
pop
sbb
mov
or
aas
stc
push
or
imul
mov
fucomp
push
adc
push
mov
xchg
or
push
adc
mov
out
(bad)
add
mov
and
mov
es
fist
loopne
push
in
cwde
xlat
dec
pop
push
and
push
xor
paddsb
jnp
sbb
push
dec
popa
push
rol
xchg
and
inc
xchg
cwde
pop
xor
adc
clc
add
or
xlat
mov
and
adc
aaa
add
adc
ss
cmp
pop
sar
mov
xchg
popf
dec
jl
or
not
cmc
and
push
aad
adc
stos
icebp
add
add
rcr
popa
inc
pop
or
or
xor
ret
scas
fisttp
xor
cmp
idiv
add
add
pop
lock
popa
stc
sbb
jl
or
in
adc
and
loope
dec
pop
push
and
jg
pop
mov
fisttp
pop
cmp
pop
push
add
fisub
shl
clc
xchg
cdq
inc
shr
dec
iret
pop
sti
add
or
dec
mov
adc
icebp
sbb
adc
push
sub
sbb
fsub
add
lock
rcr
jl
add
cmp
inc
sub
inc
pop
push
push
test
pop
sahf
adc
arpl
xchg
and
in
je
repz
mov
ret
or
or
cmp
stc
jle
xor
icebp
loop
jecxz
sbb
dec
loope
xchg
mov
loopne
loop
fdiv
cmps
add
aaa
mov
adc
mov
add
xlat
sub
or
stc
inc
xor
pop
push
or
in
adc
imul
inc
adc
mov
add
dec
in
add
in
out
dec
jle
dec
pop
arpl
xchg
fadd
sub
push
hlt
popa
push
shl
aaa
mov
mov
mov
inc
pop
enter
sub
test
cmp
sbb
pop
pusha
jb
cmps
lods
adc
in
push
add
cmp
jns
in
pop
push
xor
jne
call
pop
jmp
mov
sbb
or
add
inc
loopne
mov
xor
inc
jl
inc
push
mov
inc
add
pop
push
push
add
and
inc
add
test
loopne
out
lea
stos
shl
out
pusha
push
xor
setne
ficom
fs
add
pushf
sub
mov
inc
cmp
dec
sub
dec
and
out
mov
mov
fsub
mov
aam
fwait
add
dec
retf
in
and
adc
and
sub
sub
in
das
loope
lods
mov
add
or
popa
arpl
push
add
add
(bad)
test
pop
cmp
repnz
add
pop
loop
lock
dec
sbb
add
shl
or
or
mov
or
jae
sub
xchg
mov
add
or
test
cmp
scas
pop
cmps
(bad)
call
arpl
or
or
mov
call
mov
dec
shr
fcmovu
mov
shr
fadd
sub
arpl
xor
push
or
push
leave
and
or
pop
mov
or
aaa
xchg
sub
inc
add
inc
dec
aam
mov
jmp
cli
adc
jmp
sbb
sub
xchg
ins
or
pusha
jb
gs
add
mov
mov
nop
mov
or
ret
mov
sbb
pop
shl
jnp
xchg
inc
or
cmps
xchg
push
fisttp
jne
enter
sbb
jne
mov
add
rcl
push
dec
jge
ins
xchg
mov
sub
sub
fwait
push
mov
jmp
in
push
shl
and
sbb
in
aas
xor
inc
xor
and
ja
stos
in
sbb
inc
ins
push
adc
inc
je
push
push
loope
rcl
jl
pop
das
and
add
jmp
add
sub
xor
fst
sahf
push
ja
in
jae
push
inc
mul
or
scas
or
loopne
mov
pop
ja
arpl
mov
xchg
loope
inc
test
and
cmovle
inc
out
dec
mov
popf
sbb
dec
add
adc
aam
es
push
retf
pop
cmp
cmp
loop
cmp
jl
inc
lods
xor
mov
add
into
shl
cmp
push
mov
xor
mov
mov
mov
add
pushf
test
loope
or
push
inc
adc
add
xor
pop
adc
dec
pop
dec
cmp
mov
xchg
mov
pop
lock
push
push
push
xchg
mov
and
or
stos
gs
xchg
icebp
test
mov
es
hlt
add
icebp
cmp
icebp
sbb
sbb
push
in
enter
xor
xlat
xchg
push
push
xchg
fstp
popa
cmp
popa
icebp
popa
xor
push
int3
adc
mov
and
in
enter
or
je
pop
pop
or
hlt
jo
xor
mov
dec
scas
xchg
push
loope
sub
add
rol
icebp
fld
adc
sbb
test
inc
test
psraw
fcos
dec
repnz
xor
push
sbb
pop
and
cdq
mov
in
pop
add
std
or
inc
sar
pop
dec
gs
add
lds
or
addr16
or
pop
daa
sbb
std
movs
dec
add
popf
dec
sbb
shl
lods
in
sbb
into
and
out
imul
imul
out
repz
sub
or
repz
int
inc
out
hlt
fdiv
inc
hlt
data16
pushf
pop
in
or
jns
pop
imul
add
sbb
inc
sub
sbb
cmp
add
inc
das
aas
pusha
xor
cmp
hlt
or
cmp
and
inc
shr
call
add
or
dec
jnp
and
dec
js
pop
enter
pop
pop
enter
mov
ret
pusha
adc
movs
lahf
dec
int3
sbb
inc
enter
sub
sub
mov
push
jns
sub
int3
cmc
jae
sbb
push
gs
arpl
pop
or
push
adc
imul
bound
jl
outs
jmp
es
sbb
sub
or
aaa
ins
movs
ja
dec
repnz
outs
dec
jo
and
sbb
mov
rol
sbb
xor
and
ins
sub
adc
(bad)
neg
test
jns
clc
xor
cdq
or
jns
daa
xchg
clc
clc
outs
jo
xor
mov
adc
push
mov
std
add
ror
add
clc
xchg
pop
push
push
ja
push
xlat
add
jnp
aad
mov
loope
mov
mov
push
adc
sub
xor
adc
pop
or
iret
nop
dec
mov
add
dec
inc
ds
in
jo
pop
ss
sbb
add
mov
ror
in
clc
mov
pop
int3
and
fwait
cli
movs
stc
pop
cli
and
sub
loope
rdtsc
jb
push
pop
and
and
inc
ds
ss
add
retf
es
jp
in
es
sub
cdq
push
movs
in
cli
inc
push
adc
lahf
sbb
mov
push
dec
pusha
test
int3
jb
jmp
jb
add
cli
pop
pop
dec
add
add
fisttp
popa
or
or
or
int
arpl
jnp
push
mov
push
(bad)
repnz
add
les
lods
inc
sub
enter
jl
fs
mov
out
add
and
sbb
and
cmp
xor
jg
xchg
cld
das
add
je
adc
imul
retf
and
and
cli
cwde
and
inc
and
ret
cmp
xor
lods
dec
add
stc
in
or
mov
cld
pop
xchg
mov
xor
scas
mov
xchg
adc
push
jo
and
std
pop
inc
sbb
(bad)
popf
add
dec
enter
inc
je
repnz
inc
inc
adc
or
loopne
pop
inc
push
sub
ja
fdiv
repnz
or
add
sub
fs
jle
(bad)
mov
inc
lods
sti
repnz
cmps
inc
push
rol
and
adc
aas
jo
pop
ret
jg
and
xor
sub
cmp
add
loop
xor
(bad)
push
cmp
call
or
jno
daa
xchg
push
pusha
jmp
dec
test
cdq
enter
inc
repnz
(bad)
inc
dec
add
or
jnp
jno
mov
inc
pop
inc
fwait
inc
cmp
add
add
cmp
dec
jb
fwait
xor
add
jb
in
mov
push
and
(bad)
jecxz
into
out
(bad)
fst
push
xchg
jae
or
and
mov
mov
shl
shl
dec
(bad)
push
mov
out
sbb
pop
es
mov
sub
and
add
dec
and
or
mov
push
(bad)
jnp
cmp
out
pop
sbb
mov
popa
sbb
and
push
aas
push
add
mov
popf
or
add
scas
sbb
(bad)
or
mov
dec
inc
cmp
adc
or
into
cmp
ss
add
jnp
push
adc
or
retf
jmp
jecxz
(bad)
shr
add
lods
lods
cli
pop
adc
add
pop
or
call
hlt
add
imul
pop
cmp
or
jbe
retf
shl
inc
sbb
push
pop
push
loope
call
jg
inc
xor
mov
pop
or
pop
pshufw
jp
dec
push
add
movs
adc
cmp
pop
ja
mov
icebp
outs
jecxz
sbb
test
or
add
js
pop
jb
dec
push
and
adc
and
xchg
and
push
add
sahf
outs
das
push
or
and
or
aam
inc
pop
pusha
and
adc
fimul
sub
dec
cmp
daa
popa
jns
out
or
out
push
add
fild
jns
imul
add
jne
inc
mov
pusha
cmp
add
je
push
mov
push
fild
call
xchg
cmp
push
push
stc
or
stc
push
and
push
push
push
bswap
jle
repnz
lods
or
rol
outs
movhps
dec
outs
sbb
jns
inc
mov
or
les
mov
sbb
pop
mov
cmp
sub
sub
cdq
inc
jmp
ds
jmp
ja
sub
pop
dec
jmp
pop
pushf
test
fst
scas
jbe
mov
push
or
pop
and
dec
inc
jl
and
cwde
test
cmc
nop
sub
or
call
push
sbb
mov
pushf
ret
push
push
xor
imul
fdivr
scas
cmp
jb
push
or
inc
pop
mov
dec
cmp
jnp
pop
dec
sar
sar
mov
pop
arpl
repnz
ja
and
sahf
xchg
cmp
push
mov
or
fcomi
push
sbb
mov
in
dec
add
stc
dec
or
dec
xchg
retf
mov
inc
je
scas
shl
adc
mov
int3
ins
adc
lea
xor
xchg
push
adc
pop
push
mov
dec
enter
inc
push
xor
xor
aaa
pop
movs
add
xchg
test
inc
pop
sub
loop
jmp
test
sub
fwait
jb
cmp
xor
xchg
mov
stc
xor
dec
add
pop
dec
xor
xor
outs
xchg
mov
xor
jb
add
and
xor
xor
mov
jb
and
inc
imul
outs
dec
jns
jp
push
and
ins
adc
(bad)
and
sbb
rol
adc
add
or
fchs
mov
sbb
jo
add
or
test
or
adc
xlat
stos
int3
push
xchg
repz
bound
adc
pop
sbb
dec
rcl
dec
out
jl
xchg
mov
adc
add
adc
inc
mov
pop
popa
cld
xlat
or
pop
cmp
(bad)
jmp
adc
jmp
jecxz
outs
mov
pop
push
addr16
sar
sbb
sbb
mov
and
jg
or
xor
lock
or
adc
and
mov
push
mov
inc
push
sbb
push
add
inc
pop
sbb
dec
add
sbb
adc
adc
sub
push
ror
out
jno
pop
addr16
(bad)
packuswb
jmp
ret
popa
fisttp
push
mov
daa
mov
dec
cmp
cmp
xchg
int3
push
add
enter
mov
je
push
leave
repz
jg
or
xchg
mov
xor
pop
nop
push
mov
sbb
pop
cmp
hlt
fs
bound
dec
stos
es
jnp
xchg
clc
es
(bad)
ins
adc
mov
fnstcw
test
cmp
inc
xchg
mov
and
rcr
push
pop
xor
adc
or
xor
xchg
sbb
pop
fadd
out
pop
cmps
xor
outs
sti
and
jg
adc
scas
fcom
and
cld
adc
adc
stc
add
xchg
mov
rol
and
adc
sbb
or
aaa
js
cmp
sbb
dec
loop
jl
ds
adc
in
fcom
push
scas
adc
inc
leave
(bad)
inc
aaa
inc
fadd
jmp
cmp
cmps
add
add
xchg
mov
sub
inc
sahf
pop
and
mov
push
retf
cwde
sub
pop
(bad)
dec
jns
in
pop
xor
mov
rcl
push
test
ficom
jnp
imul
in
shl
or
or
rcl
popa
ins
and
inc
das
lods
xchg
xor
and
and
scas
loope
test
and
inc
jb
add
add
jno
jne
mov
jge
mov
sbb
les
hlt
xor
push
add
mov
dec
push
or
nop
imul
call
adc
inc
and
lods
push
push
mov
stos
dec
push
lods
push
adc
dec
xlat
jne
shr
adc
mov
push
ja
and
pop
stos
or
xchg
and
sbb
cdq
xchg
and
and
jmp
and
retf
out
and
xchg
and
pop
and
and
rol
adc
lods
mov
in
push
lds
add
or
and
inc
loopne
dec
scas
mov
nop
lea
adc
add
sub
mov
push
mov
and
push
fcom
and
adc
sub
and
(bad)
inc
leave
pop
cmp
mov
movs
pop
mov
adc
adc
add
stos
mov
pop
fdiv
add
movs
cmp
or
add
(bad)
mov
call
sbb
out
push
aas
outs
jmp
outs
repnz
push
or
xor
dec
pop
bound
shr
jo
or
std
push
pushf
nop
mov
mov
inc
ja
movs
gs
cmp
sub
pop
add
jg
pop
or
mov
and
sti
or
inc
add
mov
rol
xchg
sbb
jae
pop
loopne
xchg
in
add
and
push
pop
in
push
sbb
or
hlt
and
shl
js
ja
adc
push
lahf
add
mov
add
and
xchg
push
dec
push
and
or
push
xchg
cmps
push
mov
sbb
xchg
push
test
push
test
ror
js
and
mov
pop
pop
adc
test
xchg
xchg
in
sub
inc
mov
inc
xchg
nop
stos
and
xchg
xor
xchg
cmps
cmp
and
adc
iret
pop
push
or
inc
dec
mov
dec
or
dec
dec
push
test
sub
mov
sub
pop
enter
test
enter
(bad)
(bad)
sub
sub
scas
sbb
inc
mov
push
(bad)
fdivr
rcr
hlt
and
push
fidiv
xchg
jno
scas
pop
inc
and
pop
lds
lods
and
adc
add
adc
test
sbb
pop
jle
data16
and
out
fcmovnbe
push
imul
lods
jg
inc
test
and
and
retf
inc
and
(bad)
iret
xchg
mov
add
sub
scas
pop
add
sub
pop
sar
(bad)
or
or
mov
mov
mov
cs
cmps
int
push
shl
mov
ins
lahf
xor
lods
push
call
sar
lods
lods
push
hlt
mov
cdq
xchg
sub
push
js
loopne
pop
cmp
xor
(bad)
adc
(bad)
push
jb
ror
add
lea
sub
adc
push
imul
and
xlat
push
jne
add
unpcklps
movs
xor
fs
push
xchg
and
and
int3
jle
call
loopne
push
cmp
stc
dec
adc
push
sub
sub
adc
stos
cmp
pop
or
xor
mov
push
adc
jns
bound
jae
xor
js
sub
popa
xor
lods
or
pop
stos
nop
test
sbb
mov
stc
adc
push
and
xchg
ins
pop
adc
jo
inc
adc
dec
dec
mov
mov
das
xchg
(bad)
cli
data16
sar
or
xchg
ins
xchg
mov
xchg
xchg
retf
xchg
cmc
sbb
cmp
xchg
and
inc
mov
rcl
or
jo
xor
pop
adc
cmp
adc
cld
dec
mov
aad
inc
aam
xchg
mov
test
pop
cmp
or
dec
adc
xchg
mov
adc
test
movs
(bad)
call
shl
mov
dec
aaa
and
dec
xchg
xchg
xchg
movs
jno
mov
stc
fwait
push
sbb
push
ret
pop
daa
std
leave
or
or
dec
or
adc
add
sub
out
ja
mov
aaa
mov
add
and
and
push
or
inc
xchg
(bad)
call
sbb
mov
add
mov
aam
cmps
fnstcw
cwde
sub
xchg
sub
xor
add
pusha
push
mul
xor
adc
pop
aam
push
or
js
retf
push
pop
call
jo
push
or
stc
call
nop
pop
xchg
ror
scas
rcr
cmp
jbe
pop
rol
xchg
ja
pop
les
or
sub
push
mov
mov
push
pop
outs
addr16
xlat
(bad)
stos
mov
das
in
loopne
or
ins
movs
in
push
mov
loope
inc
sbb
hlt
or
(bad)
js
sbb
jnp
mov
popa
iret
loopne
inc
out
fmulp
(bad)
js
das
sub
add
mov
xor
je
call
push
stos
mov
mov
dec
ins
ss
(bad)
pop
(bad)
adc
or
jnp
sahf
idiv
sbb
pusha
shl
jnp
int
xor
(bad)
fdivr
fstp
inc
fnsave
leave
test
jl
enter
ins
add
nop
lahf
ins
cwde
mov
jge
sub
mov
and
xchg
inc
dec
xchg
jmp
sub
cld
sub
inc
pop
xchg
cmp
aam
dec
and
add
sub
adc
push
jg
add
jno
xchg
pop
mov
das
sub
xchg
mov
pop
mov
js
mov
outs
inc
jmp
mov
cld
add
jae
mov
fld
lea
push
in
fnstcw
aaa
inc
sbb
mov
push
fidiv
inc
mov
outs
loope
mov
hlt
xchg
sub
ds
fidivr
pop
dec
ret
ja
inc
mov
int
jmp
hlt
enter
push
mov
imul
xor
in
xor
xor
or
mov
push
and
adc
xor
icebp
add
ror
push
push
lods
cwde
test
lds
addr16
mov
adc
xchg
call
pop
inc
add
cmp
out
xor
xor
cs
fiadd
pop
xor
cs
push
in
(bad)
retf
xor
xor
femms
in
xor
xor
in
outs
sbb
in
cmp
in
push
in
add
xor
push
in
push
xor
pop
xor
lods
mov
enter
and
fiadd
push
xor
(bad)
sub
es
mov
jnp
nop
cs
(bad)
mov
test
jge
and
cmp
pop
movs
jmp
push
retf
clc
xor
iret
sbb
aad
xchg
js
dec
or
dec
in
hlt
mov
aas
and
mov
test
mov
mov
and
shl
xor
ja
out
pop
inc
mov
inc
xor
pop
jb
aaa
push
ds
out
adc
aaa
push
inc
sub
out
sub
sub
js
mov
outs
xor
out
add
nop
xor
out
jb
sub
mov
pop
mov
and
lea
outs
imul
inc
mov
aas
les
mov
mov
test
add
inc
xor
mov
push
popa
or
arpl
push
(bad)
iret
mov
test
mov
adc
or
xlat
das
into
push
inc
and
xor
push
xor
dec
ret
push
xor
ror
sub
inc
inc
out
adc
rol
lock
ret
cmp
inc
loope
ret
jne
jb
cld
add
div
dec
sbb
or
mov
int
jnp
adc
movs
movs
jno
xchg
or
pop
cmp
sub
adc
mov
cmp
mul
lods
lods
cld
ds
xchg
stos
mov
cmp
adc
mov
push
pop
or
dec
out
fdivr
push
repnz
add
xchg
jl
aam
lock
cmp
xchg
call
out
cmp
jmp
rcr
fwait
inc
inc
mov
dec
push
ins
inc
enter
push
pop
sub
cmp
rcr
add
inc
adc
rcl
out
fwait
popa
push
add
shl
je
test
mov
(bad)
push
fs
mov
das
push
ins
adc
ret
fwait
ret
push
call
lods
push
neg
mul
enter
xchg
test
inc
xor
add
adc
sub
or
sub
(bad)
leave
test
(bad)
lock
out
cmp
xchg
adc
clc
les
jmp
nop
cs
cmp
inc
rcl
sub
test
rol
dec
popa
enter
mov
lods
jmp
mov
popa
inc
mov
push
ret
mov
jno
test
stos
jbe
mov
rcl
jecxz
mov
adc
and
xchg
rcr
icebp
loopne
in
push
add
push
cwde
repz
jns
ds
cs
mov
or
sar
imul
jne
popa
mov
sub
or
mov
mov
adc
sbb
mov
jmp
xor
mov
gs
shr
xchg
gs
in
mov
daa
retf
pop
mov
cwde
add
or
jp
sub
mov
mov
sbb
pushf
jge
fsubr
or
sbb
jno
jno
lods
add
sub
(bad)
cmp
jl
dec
push
fbstp
inc
pop
rcr
out
daa
pusha
mov
aaa
pop
sub
push
sbb
hlt
pop
les
inc
or
iret
mov
push
add
add
push
cdq
pop
lds
lea
add
mov
js
xor
mov
xchg
aas
jb
hlt
cmp
add
inc
cmp
movs
and
int
xor
test
js
ret
repz
sub
ret
(bad)
stos
push
(bad)
clc
mov
and
fst
sar
sub
cmc
dec
mov
mov
xor
adc
ret
rcl
dec
loopne
ins
add
jne
shr
inc
xor
sub
mov
inc
bndstx
push
dec
xchg
mov
push
sbb
scas
jecxz
dec
int
mov
(bad)
jo
sub
aas
xchg
jmp
adc
pop
jmp
or
daa
and
dec
sub
arpl
movs
pop
fsub
rol
inc
pop
imul
inc
pop
fldenv
sub
add
sub
jp
pop
sbb
lock
or
dec
aaa
movs
ficomp
mov
cmp
outs
mov
xchg
outs
xor
inc
add
push
retf
xor
movs
outs
add
jp
jp
adc
mov
popf
push
add
dec
ja
call
adc
inc
xor
fidiv
ins
sbb
mov
call
call
fmul
leave
outs
xor
inc
sbb
push
adc
dec
call
test
xor
adc
mov
mov
pop
pop
ins
inc
cmps
dec
jnp
sub
push
in
sbb
mov
push
ret
mov
xchg
nop
in
stc
inc
add
cli
cmps
mov
mov
sub
mov
mov
mov
jno
sbb
es
inc
adc
pop
mov
jl
pop
pop
add
dec
inc
cmp
daa
and
add
pusha
xchg
mov
out
enter
mov
xchg
mov
add
mov
inc
and
pop
cmps
(bad)
loopne
or
mov
into
adc
daa
aad
mov
inc
mov
inc
inc
cmp
dec
aaa
xchg
push
leave
mov
nop
mov
or
sub
adc
cdq
and
and
sar
sbb
push
shl
inc
push
cmp
mov
mov
inc
in
je
cmp
mov
test
dec
mov
push
leave
sbb
sbb
push
dec
sbb
inc
xchg
test
mov
ds
fiadd
enter
jne
mov
inc
fisub
jl
and
inc
xor
rcl
aad
jmp
fcom
loopne
mov
mov
lea
push
fcom
ss
and
inc
inc
fwait
adc
mov
push
rep
adc
das
int
xchg
fcom
adc
inc
scas
cmp
lds
add
test
add
or
movs
push
jg
jg
push
mov
jne
inc
push
movs
sbb
sar
(bad)
add
jmp
ins
pop
cmps
lods
mov
and
and
push
xchg
clc
xor
loop
inc
stc
cmp
push
mov
dec
outs
enter
xchg
push
add
fwait
mov
mov
sbb
sub
mov
ins
sub
imul
pop
mov
nop
sbb
jg
test
enter
test
mov
push
(bad)
inc
jne
mov
inc
dec
cmp
fcom
iret
mov
int3
cmps
xchg
jo
mov
in
or
or
pop
call
outs
enter
and
jle
(bad)
push
mov
test
repz
sbb
push
repnz
cmp
ja
jns
ins
repz
shl
out
rcl
aas
in
and
out
push
mov
mov
xchg
retf
inc
mov
enter
inc
fld
dec
pop
iret
aam
mov
jecxz
mov
fist
push
fistp
popa
adc
add
retf
jp
pop
xor
adc
aas
cs
stc
xchg
pushf
or
push
pushf
xor
adc
dec
rcl
inc
cdq
aam
dec
pop
xor
mov
and
push
push
pop
push
sbb
mov
push
xchg
cmc
inc
lock
or
js
loop
mov
and
pop
pop
jns
adc
xchg
push
or
dec
mov
mov
xor
or
pop
and
xchg
sbb
mov
push
xor
and
retf
popa
test
dec
fsubrp
mov
movs
dec
lahf
je
lods
and
sub
or
cmp
fcom
aaa
or
dec
cdq
ret
cmp
xchg
and
movs
cmp
adc
mov
stos
call
lahf
pop
cmp
inc
jnp
pop
inc
stos
je
ret
rol
cmp
push
push
imul
shr
ret
push
add
xor
adc
dec
out
div
dec
pop
and
mov
sub
sub
pop
bound
ja
movs
push
ror
pop
clc
add
push
ficom
movs
pop
call
inc
or
xor
adc
rol
lock
add
cmp
jmp
cmp
inc
jle
jbe
inc
dec
jne
push
stc
add
dec
push
inc
and
push
or
mov
sar
dec
xchg
adc
sub
jns
dec
push
inc
loope
dec
fdiv
mov
pop
add
retf
ja
in
dec
push
or
test
and
push
imul
es
sub
arpl
lea
cmc
push
int
cmovne
push
push
addr16
dec
ins
cmp
leave
lock
ins
cs
je
mov
adc
(bad)
ss
dec
dec
aad
and
sbb
jecxz
ss
fdivrp
xor
push
mov
cmps
jmp
nop
sub
add
and
sub
enter
push
sub
or
add
push
push
sbb
nop
sub
push
push
xchg
ficom
xor
push
or
iret
push
push
adc
inc
std
clc
inc
ja
sub
push
add
dec
imul
add
rol
add
pop
pslld
inc
xlat
pushf
fadd
pop
xchg
jne
and
mov
rcl
adc
shl
pop
xchg
push
push
add
jecxz
retf
push
aaa
ret
bswap
cmp
xor
jmp
lods
mov
sbb
repnz
cmp
mov
pusha
mov
mov
aaa
mov
cdq
and
dec
lock
mov
dec
push
and
pop
ret
jo
and
push
push
mov
push
dec
inc
and
pop
out
test
xor
jecxz
nop
test
xor
jne
nop
(bad)
ror
dec
mov
inc
in
nop
and
mov
nop
dec
ds
pop
inc
ins
sub
sbb
stc
sub
inc
call
push
rcl
enter
daa
pop
inc
call
xchg
enter
sub
xchg
and
xchg
das
in
inc
ins
pop
dec
shl
es
es
shr
inc
adc
sbb
(bad)
dec
jnp
inc
cmc
sub
and
add
mov
ret
xlat
add
add
sar
and
add
loope
inc
daa
mov
je
mov
cld
call
cmp
inc
inc
add
sbb
xor
cmps
xor
add
add
and
push
sub
in
and
fidivr
push
xor
and
cmp
mov
pop
outs
mov
jge
pop
cmp
add
bound
lea
outs
sub
fcmovnb
inc
sub
adc
test
inc
(bad)
mov
dec
ret
adc
cmp
xor
xchg
test
fisub
sbb
mov
imul
sub
dec
sub
mov
bound
sbb
pusha
adc
sub
cmp
scas
dec
fst
nop
(bad)
adc
cs
xchg
cmp
cmps
fwait
fwait
sub
push
mov
mov
popa
push
xor
push
sbb
fcmovnb
mov
sub
repnz
je
and
sub
or
xor
daa
inc
inc
inc
mov
ficom
call
add
mov
std
pop
and
nop
mov
movs
mov
xchg
nop
xor
push
(bad)
mov
jo
add
outs
inc
jo
imul
push
lods
push
xor
imul
inc
mov
pop
bound
test
nop
jg
stos
xchg
pusha
mov
add
arpl
das
sub
jmp
sub
pop
pop
imul
xor
daa
push
xchg
mov
pop
or
outs
imul
push
xor
pop
xchg
aas
sbb
outs
adc
xchg
popa
dec
cwde
dec
imul
data16
imul
in
ja
xchg
jg
nop
or
adc
push
xchg
iret
fld
fist
shr
mov
nop
pop
push
aas
jmp
mov
out
fadd
push
xor
ret
or
in
jmp
sub
mov
xchg
add
add
jmp
xchg
cmc
ja
mov
dec
dec
add
sbb
in
sub
imul
sbb
mov
xchg
shl
sahf
mov
or
daa
aaa
jne
or
outs
push
pop
adc
jae
mov
lock
sub
js
push
cmp
xor
add
fild
and
fisubr
cmps
sbb
add
popf
xchg
cmps
mov
aad
mov
xchg
mov
es
cmps
lods
and
data16
shl
clc
jmp
mov
push
in
mov
sub
js
cdq
add
fwait
mov
xor
and
lea
add
mov
pop
ins
dec
sbb
mov
lods
popa
rcl
repnz
inc
add
enter
xchg
scas
out
pushf
xchg
push
fiadd
daa
in
stos
stos
add
pop
jns
sti
cdq
popf
inc
loope
push
cs
enter
xlat
pop
lods
enter
cmp
sbb
jb
sub
sbb
push
sbb
or
clc
and
dec
shl
adc
adc
inc
jb
adc
jl
mov
lahf
and
mov
cwde
loopne
adc
repnz
dec
sbb
dec
push
push
sub
dec
mov
je
adc
les
sub
xchg
or
scas
lock
xor
cmps
push
xor
inc
ret
scas
or
and
scas
lock
and
stc
add
push
retf
call
pop
and
sub
push
dec
or
test
aaa
outs
enter
pop
xchg
pop
dec
cld
mov
nop
jo
leave
ror
mov
push
pop
or
inc
sub
bound
dec
ds
cdq
int3
add
pop
lea
imul
inc
mov
cmp
pusha
or
les
lock
popa
aaa
test
dec
push
dec
cmp
cwde
mov
es
xchg
push
retf
adc
cmps
das
xlat
leave
sbb
lahf
xchg
push
retf
js
enter
retf
cmp
adc
xchg
iret
sub
popa
fdivp
pop
xor
aaa
pop
push
pusha
push
outs
adc
sub
jno
sahf
push
sub
pushf
or
sbb
xchg
ror
popa
pop
int
mov
xlat
cdq
and
dec
push
pop
sub
pop
dec
dec
xor
xchg
push
fwait
inc
cwde
or
add
dec
gs
adc
pextrw
dec
and
fcom
add
sub
mov
imul
addr16
cdq
mov
jne
jno
shl
fnstcw
retf
xchg
test
sub
(bad)
or
push
dec
add
bndstx
into
jb
mov
mov
push
push
cmp
lods
shr
mov
ror
pop
push
daa
xchg
push
sub
inc
xor
sub
aaa
pop
das
sbb
jg
call
div
fcom
inc
and
sub
in
mov
shr
sub
pop
ret
mov
repz
inc
add
jae
enter
lahf
stos
or
mov
test
or
movs
das
dec
outs
or
jmp
cmp
frstor
mov
jecxz
mov
inc
inc
jo
adc
test
pop
and
retf
push
and
loop
dec
pop
test
or
add
imul
out
(bad)
fsub
ins
xchg
mov
fild
fadd
cmp
lods
and
lods
adc
data16
je
das
add
bound
pusha
int3
jnp
lds
je
retf
push
enter
cs
sbb
nop
and
adc
push
cwde
push
outs
mov
aas
and
dec
fsub
jo
push
shl
push
aad
xor
and
or
mov
inc
ins
je
adc
push
sub
add
jno
imul
hlt
gs
shr
push
pop
jb
leave
adc
frstor
daa
in
add
push
push
mov
enter
adc
jno
lea
jnp
inc
dec
inc
fisttp
scas
jne
or
mov
inc
mov
test
push
and
in
das
and
xor
(bad)
ficom
ficomp
pop
clc
jmp
ins
pop
pop
jp
sub
mov
push
repnz
push
jns
stc
pop
pop
pop
inc
add
push
icebp
inc
and
push
add
scas
stos
mov
aam
ss
cmp
out
and
inc
pop
imul
(bad)
pop
or
xor
inc
das
daa
push
pop
push
inc
xchg
hlt
cmp
and
or
clc
adc
imul
push
mov
out
rcr
fist
xor
es
ror
call
sub
ins
adc
bnd
xor
add
adc
mov
pop
push
lods
or
repnz
pusha
(bad)
pop
ins
fmul
shr
inc
and
pop
mov
arpl
push
imul
adc
adc
add
adc
push
adc
push
(bad)
inc
jo
dec
cmp
outs
xchg
sbb
(bad)
push
sbb
pop
and
adc
push
pop
jo
adc
dec
out
aas
mov
aad
mov
lods
dec
inc
or
or
sub
cmp
ins
(bad)
pop
pop
adc
ins
repz
sbb
iret
enter
xor
pop
sbb
sbb
das
jns
mov
mov
mov
push
sbb
or
test
mov
xchg
mov
ficom
jmp
inc
dec
in
repz
sbb
xchg
std
ret
sbb
or
cwde
lods
xchg
pop
and
sbb
rcr
push
stc
xlat
sbb
mov
push
xchg
cwde
inc
neg
imul
pusha
nop
enter
pop
mov
ins
or
xor
xchg
cli
jne
inc
lods
and
push
and
dec
(bad)
out
es
xor
mov
push
iret
inc
jo
frstor
xchg
sbb
lahf
arpl
sar
jbe
rcr
ror
adc
cmp
call
bound
fs
inc
popa
push
cmp
xor
xor
add
pusha
pusha
popa
push
or
xor
xchg
push
xchg
je
xor
ret
sbb
mov
pop
lds
or
add
adc
xlat
lods
nop
aas
adc
retf
add
int
ret
jp
mov
or
and
mov
mov
sub
and
or
jle
xchg
shl
push
and
push
jp
mov
(bad)
dec
and
push
shr
inc
ror
iret
dec
and
jg
and
xchg
pop
or
and
sahf
inc
and
sub
sbb
jo
push
adc
mov
push
ins
sub
stos
cmps
lods
sti
iret
xor
dec
pusha
and
add
sbb
aam
sub
shr
and
sub
pop
pop
das
push
sahf
mov
fs
xchg
xchg
mov
mov
and
and
inc
or
ror
ja
gs
push
imul
pop
cmps
pushf
hlt
imul
push
gs
add
sbb
push
mov
les
push
pop
mov
jne
pop
aaa
loopne
fild
add
loopne
daa
inc
inc
pop
js
push
push
push
dec
dec
inc
adc
pop
and
ja
pusha
rcl
aam
sub
dec
test
mov
ja
adc
dec
jne
push
add
ret
or
sub
and
dec
adc
test
xor
sub
push
mov
xchg
cld
inc
ja
add
outs
sbb
cs
enter
jo
cmovns
adc
lea
adc
daa
push
adc
or
jp
pop
dec
and
xchg
ds
js
fwait
dec
and
lea
es
adc
and
cli
adc
and
repnz
pop
jo
gs
push
fstp
leave
lahf
inc
jno
movzx
jo
dec
sub
in
ins
outs
mov
out
imul
xchg
jne
or
je
loopne
mov
jae
push
js
mov
pop
jl
cmc
push
dec
push
xchg
sub
js
cmp
and
jmp
dec
shr
dec
cs
jmp
xor
out
mov
retf
adc
pop
mov
rol
sti
lea
movs
into
mov
scas
mov
mov
inc
add
js
dec
cmp
popf
sub
mov
daa
call
mov
xchg
adc
es
pushf
xor
push
loope
or
sbb
std
enter
call
mov
jmp
jmp
cmp
inc
add
imul
in
and
mov
push
shr
pop
inc
aaa
stc
ret
bound
ret
mov
add
jmp
mov
adc
and
rol
jae
ins
add
mov
or
or
xor
outs
loopne
adc
push
test
jg
push
popa
jmp
add
adc
test
jo
jmp
and
add
dec
and
push
sub
sbb
sbb
mov
(bad)
mov
push
scas
add
push
dec
push
cmp
add
xchg
das
fldcw
jnp
in
xchg
xchg
jne
push
fadd
pop
scas
ret
ins
lods
mov
cmp
nop
jnp
inc
xchg
or
or
cmps
sbb
cld
cmp
inc
mov
xchg
das
test
mov
sub
or
js
ret
or
enter
jne
in
add
push
inc
xchg
jle
test
and
sbb
inc
retf
add
add
lock
mov
xor
mov
cmp
sbb
push
adc
inc
pop
inc
jp
aad
sub
cdq
shl
sahf
cmp
cmp
jns
jne
popa
ret
xchg
aaa
std
pop
aaa
enter
inc
or
push
bound
inc
pop
mov
lods
sub
dec
mov
add
add
xor
int
push
sbb
sbb
jb
sub
fisttp
inc
and
jne
cld
pusha
jle
adc
sbb
sbb
add
imul
mov
inc
sub
lea
or
mov
mov
inc
lds
inc
je
or
jmp
mov
jno
xor
sbb
mov
pop
in
ins
je
or
popf
stos
push
xor
sub
adc
inc
mov
popa
and
or
cdq
fnstcw
mov
(bad)
pop
je
mov
cmp
inc
inc
or
mov
das
and
sbb
test
cmps
icebp
and
mov
aaa
or
adc
push
ja
xor
or
adc
(bad)
xor
aad
mov
aaa
fiadd
retf
cwde
or
(bad)
lahf
sbb
sti
lods
xor
push
lods
aas
dec
inc
out
add
inc
xor
adc
push
cmp
lds
out
movs
xchg
cmp
xor
mov
jl
inc
pop
dec
and
adc
xchg
addr16
sub
cmp
leave
xor
cmp
je
mov
cmps
or
es
lea
and
leave
rol
push
cmps
push
lods
sbb
xchg
inc
dec
call
and
nop
push
mov
mov
sub
inc
push
jmp
mov
or
out
push
pop
adc
and
and
nop
jae
add
repz
add
cmp
add
jne
jnp
cmp
xchg
dec
pop
repnz
add
aas
mov
mov
pop
jae
xor
and
addr16
adc
or
inc
cmp
lahf
or
add
test
jae
push
xor
push
push
in
jne
retf
gs
adc
mov
ds
sbb
cmc
and
xor
cmc
xchg
inc
jecxz
and
call
jp
mov
ss
or
mov
jmp
(bad)
mov
or
add
push
rcr
js
xor
add
retf
cwde
jns
nop
add
js
rcl
pop
mov
ret
out
rcr
movs
lods
lahf
out
jns
ret
sti
push
test
jns
call
xchg
and
mov
inc
sahf
mov
out
in
(bad)
daa
sub
std
popa
adc
pop
sub
mov
bound
sti
pop
mov
dec
test
push
cld
mov
cmp
shl
and
cmc
xlat
or
push
cmp
sub
sub
out
aad
inc
dec
fs
xor
(bad)
and
and
mov
icebp
lods
inc
inc
mov
mov
dec
sub
inc
cmp
inc
dec
add
xchg
cmps
stos
(bad)
add
pop
cld
jne
mov
xchg
dec
push
loop
or
sbb
test
jle
mov
(bad)
nop
xchg
pusha
sub
nop
mov
icebp
sbb
inc
jecxz
aam
shl
adc
add
dec
loope
add
ret
leave
leave
xchg
or
bound
pop
dec
pop
cmp
mov
adc
jne
push
xor
xor
fs
sub
lahf
cmp
mov
sbb
dec
inc
cld
mov
add
sbb
jbe
xor
dec
dec
dec
arpl
lods
shr
inc
or
adc
sub
mov
jb
jge
push
jno
mov
jle
mov
and
dec
inc
inc
sbb
pop
mov
push
cmp
cmps
or
fsub
(bad)
xor
adc
cs
icebp
inc
or
fstp
push
mov
add
fcmovbe
sub
xor
cmp
pop
add
sub
push
jl
or
les
or
inc
dec
ins
mov
cmp
xchg
(bad)
es
xchg
mov
inc
rcr
mov
and
xor
cmp
mov
mov
adc
iret
cmp
cmps
out
xor
adc
cmp
or
ins
dec
js
inc
mov
push
pop
push
das
inc
push
adc
scas
sub
sub
add
or
inc
fs
jge
pop
lahf
ja
data16
ret
pop
leave
(bad)
pop
sbb
adc
mov
adc
jge
je
mov
mov
lock
jns
cmp
or
push
ins
jo
ret
inc
push
push
mov
nop
jne
int3
pop
fild
lock
inc
call
enter
cmp
jae
(bad)
pop
out
mov
stos
fwait
sbb
xlat
push
inc
and
call
or
cmps
add
inc
fist
fmul
(bad)
imul
rcr
xor
sar
nop
jns
js
js
dec
dec
dec
shl
pop
sub
xchg
pop
cs
jbe
push
test
mov
je
pop
xor
shl
fs
cmps
xor
ins
ins
repnz
jb
mov
nop
nop
mov
lahf
dec
and
in
inc
jmp
mov
xchg
dec
add
push
xchg
dec
bound
and
xor
shr
push
pop
rcl
stc
out
retf
les
shl
hlt
add
push
push
movs
imul
pop
test
leave
call
les
mov
adc
shl
in
push
fsubr
push
fmul
lahf
mov
sbb
and
mov
add
inc
dec
jge
sti
push
pushf
xchg
dec
sub
dec
inc
ror
xchg
fstp
arpl
clc
or
rol
inc
sub
mov
and
jge
add
push
sub
aad
pusha
or
sub
les
sub
mov
jns
jbe
imul
and
data16
or
sub
dec
and
sar
adc
push
adc
jg
mov
push
mov
or
in
and
or
sahf
mov
lock
xor
imul
shr
jmp
push
ret
sti
mov
pusha
pusha
std
stos
and
test
mov
nop
stc
sar
add
add
and
imul
add
inc
mov
pop
mov
mov
sbb
xchg
pusha
call
jmp
xchg
cmp
push
mov
and
loop
ret
adc
adc
cld
(bad)
cmp
push
mov
test
out
setno
dec
pop
jg
aam
leave
push
(bad)
fmul
repnz
test
movs
in
and
adc
rcl
data16
les
cs
pop
sub
add
nop
and
out
jb
leave
lock
sbb
(bad)
gs
(bad)
sbb
xor
jno
cld
mov
adc
push
(bad)
xor
shr
cmp
xchg
jbe
rcl
and
retf
sub
cmp
mov
push
loopne
loopne
retf
and
jg
inc
inc
xor
inc
inc
and
rcr
dec
test
cmp
xchg
dec
mov
push
dec
lea
inc
js
jmp
mov
xor
add
xchg
pop
rol
add
(bad)
inc
dec
imul
dec
test
scas
push
push
mov
call
pop
adc
mov
sub
and
cwde
xchg
fcomp
xchg
test
pusha
ins
je
inc
jp
clc
or
pusha
xchg
test
pushf
test
sahf
push
mov
inc
inc
xchg
aad
and
add
in
add
push
add
stos
pusha
or
jns
jmp
ror
adc
fild
fcomp
shr
hlt
pop
jmp
push
pusha
jb
inc
adc
or
shl
push
lds
cmp
mov
fbld
xor
jp
ret
(bad)
(bad)
not
jp
in
retf
mov
mov
or
mov
punpckhbw
std
xor
jmp
sbb
jo
outs
push
cwde
push
cmp
dec
scas
xor
xor
pop
push
xor
out
cs
loopne
add
js
pop
sbb
xchg
add
dec
xchg
mov
push
mov
sti
adc
dec
add
cmp
arpl
int
test
sbb
in
mov
push
je
or
inc
push
cmp
ja
jno
and
movs
retf
cmp
adc
shr
sub
lds
push
fcom
shl
lds
outs
lock
sbb
mov
loopne
sub
cs
pop
popa
not
pushf
push
dec
repz
call
in
movs
cmps
sub
pusha
mov
movs
(bad)
pop
push
aaa
movs
jne
popf
jo
xchg
cmp
and
xor
lock
arpl
mov
fs
mov
nop
mov
push
ins
nop
(bad)
push
(bad)
dec
or
pop
pop
ins
or
mov
ret
sub
and
pop
cdq
idiv
js
sub
pop
or
mov
sub
aaa
mov
add
ror
test
xchg
add
and
and
mov
ja
(bad)
ror
inc
jne
rcl
pusha
adc
scas
pop
sbb
(bad)
mov
ins
sub
adc
call
or
and
pop
sub
inc
mov
jne
mov
je
out
dec
add
hlt
(bad)
sahf
fcomp
popf
out
push
inc
and
sbb
mov
add
lahf
inc
sub
mov
sub
leave
dec
bound
in
and
adc
push
inc
jmp
pop
push
mov
sub
inc
sub
frstor
sub
dec
stos
or
pop
jle
xchg
dec
add
stos
add
push
or
cmp
shl
pop
mov
sar
inc
and
jge
call
mov
(bad)
arpl
mov
mov
je
and
xor
adc
shl
or
push
pop
mov
adc
outs
add
or
cmps
xor
adc
and
inc
das
call
xor
outs
es
sbb
xor
test
lods
inc
fild
or
ja
(bad)
or
out
sub
adc
(bad)
cmp
adc
mov
cmc
sbb
add
push
sub
or
call
xor
(bad)
test
inc
cmp
push
inc
pop
shr
xchg
xchg
test
sub
sbb
adc
cmc
sbb
je
and
xor
and
clc
popa
dec
pusha
lahf
fld
ins
pop
dec
jg
mov
mov
sbb
shl
sub
mov
pop
ja
call
fsubr
clc
push
sub
push
pusha
test
xor
mov
adc
inc
gs
and
bound
scas
mov
mov
xchg
mov
sbb
jg
js
push
push
cwde
adc
out
push
jb
push
call
jo
fmulp
movs
lock
sbb
sub
inc
dec
imul
addr16
adc
in
jle
adc
and
cmp
test
imul
leave
nop
or
cmp
jl
jg
sub
int3
add
add
xchg
test
sbb
dec
rcl
mov
or
pop
pop
iret
in
push
xor
pop
push
and
or
and
inc
pop
sbb
xchg
call
adc
push
and
adc
and
cld
jmp
inc
bound
inc
adc
lods
test
push
outs
push
jle
xor
pop
add
pusha
fisttp
jle
xor
push
jmp
push
in
jge
inc
daa
pop
call
mov
and
jmp
dec
or
mov
add
in
or
das
out
and
pop
inc
jne
add
sub
pop
lahf
ret
sub
inc
mov
ss
mov
div
(bad)
mov
add
cmps
fsubr
add
scas
sbb
push
cmp
or
xor
gs
(bad)
lods
jle
jmp
adc
cmps
add
inc
xor
fstp
push
ins
pop
xor
push
call
ins
fisub
inc
or
daa
xor
popa
imul
gs
jecxz
and
out
and
cmps
adc
xchg
out
xor
arpl
add
dec
dec
adc
xor
cs
std
jmp
cmp
icebp
xor
pop
xchg
and
test
jne
sbb
ss
jae
cmp
sbb
scas
add
mov
xchg
loopne
mov
stos
sbb
push
movs
cmp
pusha
or
js
data16
jae
mov
iret
add
xor
cmps
xchg
adc
or
and
out
int
mov
call
pusha
xor
push
out
dec
into
cmp
ss
or
jge
sbb
nop
cmps
in
or
add
mov
xor
add
sbb
mov
mov
cmp
in
adc
add
mov
(bad)
sub
test
mov
(bad)
and
mov
daa
je
sub
sbb
cmps
(bad)
or
dec
loopne
cmp
mov
imul
pusha
xchg
pop
mov
lods
jae
xchg
xchg
ret
mov
test
cmp
push
mov
push
or
rol
adc
push
nop
cmps
push
xor
cmp
or
cmp
xchg
xlat
push
jmp
pop
xchg
sub
fld
popa
rcl
pop
inc
je
xchg
push
push
sahf
mov
inc
(bad)
fistp
adc
add
es
jecxz
dec
xlat
cmp
neg
sub
das
lds
jnp
movs
xchg
mov
in
and
imul
call
daa
(bad)
aas
adc
pop
cmp
sbb
(bad)
mov
imul
das
or
add
pop
or
adc
fld
or
test
jo
push
adc
add
adc
pop
stos
xchg
adc
mov
pop
xlat
xor
xor
add
enter
enter
out
std
jl
jp
enter
or
ret
aam
inc
inc
cmp
and
lahf
jns
add
cmps
xchg
rol
dec
or
nop
adc
dec
or
sar
push
ds
aas
or
sbb
dec
push
sub
sub
jmp
push
jo
nop
mov
or
(bad)
popa
add
std
add
and
or
in
push
and
ret
and
xor
lahf
jecxz
jl
pop
sbb
and
div
call
push
push
push
xor
in
retf
jae
inc
push
inc
or
sbb
neg
hlt
adc
inc
mov
call
pop
call
test
lock
pop
or
pusha
mov
adc
arpl
sub
ins
pop
lea
sbb
lods
or
cmp
pop
pop
push
(bad)
mov
movs
inc
nop
pusha
pop
in
(bad)
rcr
(bad)
sbb
inc
inc
leave
push
cs
hlt
scas
jo
icebp
mov
cmps
mov
mov
push
sub
jecxz
(bad)
ins
pop
scas
push
mov
enter
or
push
mov
ja
and
ret
mov
mov
xchg
mov
mov
dec
xchg
movs
jb
mov
fdiv
add
push
cwde
lods
pop
dec
loop
pusha
sbb
loop
out
adc
dec
nop
daa
rol
ret
clc
adc
lahf
rol
add
retf
push
(bad)
icebp
mov
adc
icebp
add
adc
adc
xchg
or
add
adc
lock
sbb
sub
mov
jns
inc
sbb
or
addr16
xor
shr
jns
sbb
xchg
push
mov
dec
jae
mov
dec
cmps
xchg
add
or
xchg
in
or
and
xor
js
cmps
stc
cmps
cdq
es
stc
and
les
xchg
int3
mov
xchg
es
sbb
out
dec
sbb
and
sub
xlat
rol
mov
jg
inc
sub
lds
jmp
fwait
sbb
and
add
jl
xor
pop
aaa
mov
sbb
std
dec
lods
je
pop
icebp
loop
or
and
dec
popa
enter
mov
cmp
fcmovbe
aas
mov
add
je
mov
jae
jmp
lock
mov
inc
dec
hlt
stos
cmps
push
mov
test
test
mov
inc
dec
(bad)
mov
push
jb
mov
jl
in
sbb
rcl
fimul
cmc
sub
mov
cmc
(bad)
enter
pop
pop
cmp
arpl
(bad)
stos
fiadd
aas
mov
xchg
pusha
lods
xchg
repz
add
sar
cmp
jno
popa
mov
je
mov
clc
adc
pop
push
inc
add
cmp
push
push
add
fwait
je
push
or
dec
inc
retf
push
sahf
lahf
mov
lahf
adc
xchg
sub
push
sbb
fcomp
xor
stos
mov
dec
sbb
sub
fsubp
inc
sahf
fdivr
jle
icebp
mov
or
retf
push
shr
mov
icebp
adc
mov
addr16
adc
lods
(bad)
mov
retf
add
imul
mov
mov
mov
sbb
cwde
fs
push
xor
and
shl
add
in
push
mov
sti
dec
adc
sub
xor
jle
arpl
cmp
add
push
adc
mov
hlt
pusha
movs
jecxz
outs
xor
push
sub
cmp
inc
bound
add
stc
or
stc
mov
std
mov
es
dec
or
mov
mov
inc
and
in
jge
mov
and
gs
or
in
test
push
xchg
(bad)
adc
and
mov
xor
inc
mov
or
mov
movs
sub
or
ins
push
jmp
js
cli
nop
xor
stc
and
mov
adc
movs
cmp
push
and
pop
in
sub
mov
push
adc
icebp
movs
hlt
xlat
mov
nop
xchg
movs
inc
adc
sbb
dec
mov
stos
icebp
into
sbb
sub
push
pop
call
imul
aas
cmp
inc
cmp
dec
or
xchg
pop
mov
in
push
sbb
add
lds
addr16
idiv
test
retf
add
lea
or
dec
pop
ins
sbb
or
pop
dec
test
nop
fld
in
lock
cmp
lahf
inc
sbb
ret
cmps
bound
(bad)
or
nop
cmps
inc
out
and
mov
rep
or
push
outs
repnz
pop
mov
rol
clc
pop
pusha
aaa
mov
adc
fucomip
pop
xlat
fisub
jo
loop
scas
inc
pop
jne
sti
or
out
fsubr
xor
outs
cmp
ja
or
jge
sbb
or
lds
fs
pop
push
dec
cmps
les
fst
inc
xor
mov
sub
leave
dec
pop
hlt
push
jb
stc
and
cmp
sbb
test
jne
pop
add
and
sbb
cmp
ret
jge
out
mov
mov
je
aas
(bad)
enter
das
push
mov
mov
enter
je
les
nop
sub
mov
mov
jae
adc
xchg
pop
push
jo
sub
inc
pop
int3
and
cmp
sub
inc
and
pop
ins
cs
outs
rcr
or
sbb
shl
push
cmps
adc
(bad)
call
ror
dec
xor
sbb
jo
das
adc
sbb
mov
les
cmps
fs
call
loopne
call
cwde
leave
(bad)
fdiv
ins
mov
ret
xor
fiadd
mov
jns
jns
dec
and
mov
push
inc
xchg
add
adc
push
push
inc
jecxz
rcl
rcr
or
add
and
add
dec
mov
les
or
xor
and
(bad)
dec
mov
mov
fild
jmp
xchg
daa
sub
inc
jmp
push
test
mov
iret
inc
inc
mov
cmp
xor
mov
bound
xor
mov
jecxz
push
stc
js
push
push
add
mov
adc
push
mov
xchg
stc
jl
and
shl
mov
dec
cli
push
lea
cwde
(bad)
or
pusha
cmp
push
rol
test
popa
jbe
jo
fiadd
imul
mov
or
js
jecxz
ret
and
sbb
test
add
push
fdiv
jo
ficom
push
push
push
sub
sub
call
mov
mov
retw
stos
aam
dec
call
ins
arpl
mov
mov
inc
mov
in
adc
xor
push
loope
jge
daa
retf
js
jnp
ror
mov
scas
adc
int
fidiv
gs
or
xor
dec
push
push
adc
xchg
sahf
dec
jns
mov
mov
dec
scas
add
ret
push
inc
fcomp
xor
daa
jl
sub
lea
mov
or
aam
mov
adc
adc
adc
add
rcr
outs
inc
inc
sub
mov
lds
xor
inc
fdivr
jg
jecxz
in
aaa
rcr
rcr
sbb
and
jmp
jno
and
adc
fmulp
xor
mov
pop
jb
test
aam
mov
int3
mov
movs
hlt
pop
jbe
movlps
(bad)
jecxz
repnz
xlat
outs
cmc
mov
out
xchg
call
mov
inc
sub
dec
sub
xor
retf
xor
ins
jmp
xchg
test
inc
test
push
sub
pop
and
jecxz
fild
add
cmp
xchg
scas
lods
xor
sar
jge
sub
je
add
adc
mov
gs
ins
sbb
std
rcl
repz
test
rol
or
add
pushf
adc
adc
dec
inc
je
aad
inc
neg
mov
pop
addr16
imul
test
retf
nop
popa
xor
cmps
mov
clc
xchg
pop
xchg
and
retf
xor
sub
mov
xor
mov
arpl
pop
xlat
or
adc
(bad)
adc
lods
pop
(bad)
ret
ds
push
or
sbb
push
inc
movs
fmul
add
push
push
les
mov
inc
loop
cwde
aaa
dec
pop
mov
pop
mov
or
inc
push
xchg
lods
push
retf
rol
hlt
mov
jbe
dec
pusha
not
adc
mov
mov
outs
xlat
push
xor
ins
jmp
pop
push
or
add
xchg
test
dec
sbb
and
add
push
xchg
popa
nop
pop
pop
add
mov
adc
movs
xchg
dec
addr16
push
pusha
inc
arpl
dec
call
pop
jns
pop
aad
movs
arpl
mov
sub
mov
mov
mov
push
dec
into
das
loopne
out
add
add
xchg
xchg
dec
and
jp
adc
gs
mov
nop
(bad)
and
sbb
add
mov
es
cmp
dec
or
mov
adc
popa
aas
sub
and
pop
lock
(bad)
adc
sbb
mov
setb
and
lods
hlt
inc
and
pusha
fwait
pop
cmp
jo
jecxz
arpl
inc
adc
popa
cmp
ins
outs
mov
jg
adc
mov
push
ror
int3
hlt
sub
cwde
sbb
xor
inc
xchg
out
jbe
add
arpl
inc
push
mov
add
lock
mov
shl
in
push
sub
jmp
cmp
add
inc
adc
lods
test
fwait
or
mov
aaa
dec
dec
hlt
xor
jl
js
nop
and
dec
sub
iret
or
dec
dec
fiadd
or
push
inc
dec
push
inc
push
mov
stc
dec
nop
xchg
push
sub
mov
sub
scas
pushf
cmps
pop
shl
cmps
and
es
push
fdivr
aam
and
sbb
jbe
inc
sub
xchg
adc
mov
aam
add
add
mov
add
int3
call
sar
cmps
std
inc
adc
(bad)
mov
mov
mov
pop
fs
test
test
push
pop
xchg
out
in
sti
xor
pusha
imul
inc
outs
ret
stos
clc
sbb
sbb
mov
inc
pop
inc
rcl
movs
aas
fld
xor
cmc
mov
pusha
pop
cmps
push
jo
pop
test
add
push
pop
add
ins
fld
loopne
arpl
cmp
add
dec
(bad)
sub
mov
cdq
sub
cmp
jne
push
and
addr16
push
xor
mov
push
push
clc
in
pop
adc
sbb
es
add
cmp
jbe
jp
sub
push
shr
cmp
push
cld
mov
add
daa
test
jns
in
push
push
dec
push
test
dec
push
sub
pop
mov
(bad)
sub
(bad)
fist
test
and
ja
je
push
dec
push
lahf
(bad)
loope
out
ret
nop
hlt
jnp
cmp
js
xor
mov
jge
and
mov
loopne
imul
push
push
add
mov
ins
or
das
jns
or
xor
mov
pop
lods
clc
cmp
enter
dec
mov
shl
pop
dec
repnz
add
sbb
aaa
push
inc
outs
or
out
mov
stc
outs
leave
push
icebp
test
add
fild
xlat
inc
push
je
xlat
aam
cmp
nop
fild
xor
aas
push
or
test
xchg
jbe
pop
(bad)
add
mov
dec
scas
loopne
mov
add
cmp
adc
shl
cld
or
scas
push
sbb
aas
adc
push
shr
loopne
jnp
adc
mov
imul
shl
adc
inc
fucomp
out
adc
and
pusha
pmuludq
sbb
jb
ret
or
sub
or
mov
and
push
mov
clc
(bad)
retf
push
mov
add
sub
xchg
cmp
pop
xor
jg
into
jp
push
jg
stos
push
leave
lds
dec
mov
xor
dec
add
mov
arpl
lock
sbb
js
stc
push
mov
push
and
pop
retf
popa
rol
mov
inc
sbb
imul
mov
dec
cmp
adc
pop
fdiv
pop
adc
xor
adc
jno
dec
or
imul
push
xchg
dec
push
xor
out
push
dec
xchg
shl
and
enter
sub
test
adc
sbb
inc
cld
cdq
punpckhwd
jmp
aam
push
jae
add
push
pop
push
nop
adc
xor
xchg
mov
add
into
int3
push
push
stos
dec
pop
xchg
aas
xchg
jmp
je
jno
in
push
add
xchg
test
or
js
xchg
adc
adc
dec
mov
inc
push
rcr
ins
jmp
ret
outs
scas
into
push
aam
dec
ror
adc
imul
in
ds
push
add
push
test
fdiv
daa
xor
jns
sub
test
inc
jmp
mov
and
(bad)
pop
jmp
adc
mov
mov
cwde
mov
lahf
adc
add
ins
out
jl
and
dec
fwait
cli
inc
or
sub
sub
push
xor
mov
adc
(bad)
jmp
lock
movs
jno
cmp
adc
mov
sahf
push
xchg
scas
shl
push
sub
add
mov
test
in
xchg
inc
jnp
loope
cmp
cmp
(bad)
ins
in
push
shl
xchg
nop
fstp
adc
adc
xor
push
push
mov
jns
sbb
sbb
jae
sub
or
int
sar
cmp
mov
out
push
jle
mov
test
es
scas
xchg
rol
and
ret
imul
add
xor
(bad)
and
jns
mov
and
push
and
cmp
pop
inc
movs
dec
jnp
nop
adc
adc
xchg
inc
and
ret
icebp
ret
outs
enter
sbb
jmp
and
sub
sbb
cmc
cmp
out
xchg
je
cmp
sbb
add
inc
pop
ret
je
push
cmc
or
sahf
xchg
sub
and
cld
nop
and
lahf
lea
push
retf
pop
add
(bad)
retf
and
iret
daa
loopne
sbb
mov
jo
cdq
sub
push
outs
fadd
daa
gs
test
inc
jmp
push
cdq
add
add
or
xor
add
rcr
(bad)
adc
mov
push
adc
int
ss
push
fcom
mov
mov
cmp
enter
pop
nop
retf
jne
(bad)
dec
cmp
pop
xchg
loopne
sub
test
jbe
add
in
xchg
sti
inc
dec
jae
call
sbb
inc
jno
jmp
push
ss
mov
dec
mov
inc
lods
bound
push
cmp
dec
inc
or
cmp
pop
arpl
pop
test
add
xor
dec
add
pop
jle
ret
adc
add
mov
dec
adc
(bad)
sub
jbe
jg
(bad)
je
pusha
aam
or
dec
push
retf
iret
mov
and
mov
aaa
sub
in
pop
mov
xor
mov
or
pop
bnd
inc
rcl
push
addr16
iret
rol
aas
lea
pop
push
dec
jecxz
cmps
push
dec
pusha
inc
retf
(bad)
push
inc
jmp
aam
div
lahf
sub
push
ds
je
inc
or
int
add
gs
adc
(bad)
nop
ins
push
enter
jle
dec
cdq
js
mov
push
in
cmp
cmp
loop
and
xchg
sub
dec
jp
inc
mov
ins
mov
mov
in
shl
dec
inc
pmaxub
push
jns
enter
mov
out
fs
add
imul
jmp
(bad)
push
push
add
es
in
mov
popa
add
ds
pop
or
push
enter
lds
mov
and
clc
fstp
sub
adc
push
outs
sub
xchg
dec
adc
std
push
mov
arpl
add
repz
sbb
arpl
(bad)
loopne
mov
inc
jg
aas
mov
mov
lock
or
aas
call
sub
dec
out
rcl
adc
push
aaa
push
or
lock
xor
movs
jp
cmp
adc
ret
mov
and
jnp
fiadd
iret
mov
fdiv
jge
nop
jo
jns
inc
inc
in
test
inc
xor
mov
loopne
inc
pop
or
add
popa
fist
enter
loopne
loopne
and
jnp
inc
xor
jo
(bad)
jge
xchg
mov
inc
fdiv
popa
mov
add
add
push
jnp
ds
test
jb
jg
lock
inc
push
push
mov
pop
sbb
sbb
push
or
push
mov
cmp
test
or
int3
inc
jg
dec
mov
jmp
jl
jge
sub
sub
mov
mov
jge
ret
rcl
sbb
jmp
pop
xor
sbb
int3
fidiv
clc
lahf
adc
xchg
inc
jne
stos
lock
adc
push
jo
push
pop
ret
(bad)
bndldx
mov
pop
xor
hlt
xchg
sbb
and
imul
push
inc
cmp
add
ins
es
push
ja
inc
dec
dec
dec
push
mov
test
test
rol
cmp
mov
mov
push
test
add
push
movups
mov
mov
rol
out
cmp
scas
ficom
sub
mov
mov
adc
pop
mov
dec
adc
xor
xchg
and
adc
mov
rol
adc
ds
push
adc
xchg
sbb
aas
adc
inc
clc
mov
add
test
ins
adc
adc
imul
cdq
mov
and
fld
and
dec
fcom
mov
jnp
push
in
xchg
mov
push
(bad)
add
sub
outs
loope
addr16
sbb
mov
fist
or
in
cld
sub
fcomp
loope
inc
jo
sub
push
and
push
pop
xchg
xchg
fstp
test
inc
sbb
fadd
cmp
mov
mov
push
inc
popa
inc
xchg
and
push
ja
ins
mov
lds
dec
mov
fiadd
mov
or
add
or
les
add
lds
cmps
adc
loopne
and
push
dec
movs
ins
push
inc
mov
dec
pop
inc
mov
fbld
xor
enter
nop
nop
pmaxsw
add
pop
push
and
popa
adc
movs
loope
fwait
or
retf
add
and
or
mov
xor
push
mov
rol
or
das
and
xchg
jecxz
rdmsr
and
add
xor
dec
xchg
add
add
cmc
push
pushf
imul
pusha
mov
ds
push
push
std
hlt
sti
sbb
and
push
enter
jbe
or
inc
jecxz
es
add
adc
test
add
push
lds
sub
pop
test
aaa
(bad)
shr
cmp
adc
sbb
and
adc
stc
pop
and
push
add
add
mov
dec
iret
mov
jbe
out
pop
xor
add
int3
inc
jbe
add
cmp
pop
call
loopne
inc
aam
lock
rol
pop
push
test
das
test
pop
lods
add
bound
add
xor
xor
add
ss
(bad)
push
push
retf
idiv
call
mov
xor
mov
dec
(bad)
and
jne
adc
lahf
pop
fsubr
pop
push
or
movs
ins
mov
dec
lods
pop
jmp
cmps
test
in
dec
and
ss
mov
or
leave
pop
xchg
push
mov
scas
lahf
inc
cmp
stc
movs
pop
pop
inc
inc
pop
xchg
shr
pop
sub
cmp
sbb
mov
popw
jbe
add
jmp
les
retf
add
push
fwait
das
push
mov
cmp
and
inc
mov
jle
xor
loopne
sub
sbb
lds
ja
cmp
xchg
in
xchg
setp
push
leave
dec
sahf
inc
xchg
sub
pop
in
xchg
sub
mov
xchg
pop
mov
mov
add
hlt
pop
pop
xor
imul
adc
add
outs
sbb
mov
repnz
test
pop
adc
pop
add
pop
ret
rol
adc
pop
lock
sub
jge
push
and
lds
xchg
lock
push
das
pop
movs
xchg
and
mov
icebp
iret
repnz
and
ds
xchg
pop
in
or
adc
jnp
sub
xor
push
sub
out
clc
repnz
sub
and
push
bnd
inc
mov
push
dec
adc
rcl
pop
add
sbb
sbb
or
inc
cwde
adc
add
hlt
adc
sub
jbe
xchg
pop
fs
addr16
lea
push
or
dec
inc
lods
pop
jecxz
adc
movs
in
pop
nop
ret
sbb
push
sbb
dec
ja
and
xchg
sbb
push
movs
mov
add
mov
sbb
aas
jne
xlat
add
dec
mov
dec
push
adc
mov
retf
movs
jo
adc
and
dec
(bad)
inc
lds
add
dec
(bad)
ja
loope
mov
dec
lods
or
dec
jmp
std
mov
or
clc
push
aas
adc
mov
or
std
xchg
mov
mov
fnsave
mov
and
repz
add
scas
nop
(bad)
xchg
mov
jl
sbb
popa
push
add
adc
adc
rcr
repz
pop
dec
mov
and
das
ror
inc
mov
jo
dec
sub
rol
xlat
push
or
inc
loop
jo
pusha
fwait
lods
loope
push
inc
cmp
xor
lea
inc
or
daa
sub
pop
mov
out
shl
and
add
inc
and
aad
mov
movs
cmp
ret
pop
retf
in
out
pop
dec
in
neg
movs
and
add
inc
sbb
lods
mov
adc
sbb
and
rcr
popf
daa
mov
cld
in
arpl
mov
jbe
arpl
add
mov
cs
push
add
int3
cmc
add
inc
mov
pop
push
loopne
pop
int
jmp
dec
push
lock
lds
inc
in
lods
mov
add
out
lock
or
xchg
and
jmp
xchg
in
cwde
add
push
sar
call
hlt
push
or
call
test
(bad)
repnz
mov
add
mov
push
outs
inc
jo
test
mov
call
call
or
jo
push
mov
cmps
lock
pop
lock
push
sub
ret
popf
jmp
pop
sub
aam
or
add
or
xchg
dec
sub
mov
and
or
and
mov
fdiv
inc
call
fdivr
aam
mov
xchg
(bad)
test
lock
fdivr
loope
push
add
add
nop
repnz
gs
dec
fwait
ror
das
mov
nop
cmp
imul
jg
into
push
add
sub
and
test
pop
daa
and
add
dec
add
das
inc
(bad)
es
push
int3
xchg
sbb
xor
cmp
xor
pop
ins
pop
cmc
ins
cmp
ret
test
icebp
loopne
adc
dec
std
xor
stos
and
and
inc
xchg
mov
nop
inc
dec
push
jge
lods
jne
xchg
push
movs
or
rcr
mov
out
ins
pushf
shr
and
inc
aaa
or
or
stos
inc
push
mov
xor
xchg
(bad)
jg
inc
and
sar
jns
sub
arpl
inc
aas
iret
xchg
jne
dec
rol
sub
or
ret
jno
mov
dec
sbb
adc
adc
int
jmp
xor
addr16
loopne
and
mov
jo
inc
(bad)
rol
add
jp
pop
add
xchg
cmc
jp
dec
cmps
sub
dec
adc
and
mov
adc
or
ins
icebp
or
mov
nop
mov
xchg
ror
dec
std
xchg
adc
jns
test
mov
(bad)
adc
sbb
jg
test
or
or
cmp
cwde
mov
fwait
and
retf
mov
or
retf
ret
rol
fistp
daa
mov
lea
mov
add
mov
pop
(bad)
jne
pop
repnz
nop
add
loop
adc
test
xchg
fwait
int3
rol
and
popa
sbb
sbb
jg
or
mov
lods
add
test
mov
fs
mov
xor
cmp
mov
push
add
pusha
and
or
outs
cmp
inc
cmp
cmps
add
xchg
mov
mov
jg
sub
xor
add
and
pop
(bad)
inc
popa
popf
xor
push
push
popa
pop
adc
push
fcmovnb
lods
and
rol
push
sub
mov
push
test
pop
inc
test
mov
cmps
mov
mov
and
fwait
leave
and
and
enter
jbe
mov
imul
cmp
or
cmps
loopne
sbb
mov
int
scas
mov
adc
lods
dec
mov
lods
fwait
pop
cmp
pop
pop
cmps
jbe
xor
sub
ins
dec
test
aaa
in
jo
adc
and
dec
out
dec
rol
ret
mov
iret
sar
pop
ffreep
inc
fld
inc
in
(bad)
int3
or
mov
add
and
rol
sbb
jne
into
loope
cmp
sar
outs
mov
cmp
into
and
adc
add
pop
inc
dec
mov
sub
jbe
rol
sub
imul
fdiv
add
dec
jge
and
dec
add
out
imul
mov
mov
adc
add
dec
dec
fadd
add
xor
xor
mov
adc
jmp
pusha
mov
gs
dec
fistp
cmp
pop
sub
mov
mov
jge
dec
add
aam
dec
nop
mov
push
std
pop
jo
movs
or
aas
sub
nop
jg
add
das
inc
and
rol
inc
lock
mov
and
aam
xchg
gs
das
ja
adc
pop
push
cmp
lds
and
xlat
adc
dec
add
or
pop
xchg
outs
xchg
nop
imul
adc
inc
sbb
mov
push
inc
push
int3
mov
push
cli
inc
push
movs
adc
stos
add
sbb
adc
aam
jnp
or
imul
pop
fwait
test
xlat
sub
rcr
(bad)
jle
rol
add
sub
pop
xor
bswap
and
sub
enter
fdiv
and
and
hlt
hlt
mov
inc
and
and
in
retf
xor
clc
push
dec
in
add
hlt
jno
and
sub
xchg
push
xadd
xchg
pop
xor
test
in
xor
pop
cmps
or
pusha
jp
sub
cmp
popa
dec
xor
jb
popa
pop
mov
and
pop
xlat
in
jp
inc
pusha
leave
push
dec
pop
imul
sub
dec
push
mov
(bad)
out
sbb
dec
cdq
cdq
adc
bound
push
shl
pop
push
inc
sub
popa
and
cdq
and
add
add
ins
loope
movs
mov
inc
cmp
inc
paddb
adc
(bad)
pusha
adc
in
adc
dec
pop
adc
sub
pop
add
mov
push
sbb
ja
xor
and
pop
mov
sub
dec
sub
outs
add
movs
fdivr
fs
fsub
fadd
push
and
retf
call
push
retf
xchg
pop
pop
scas
dec
fsubr
cmp
xor
sbb
add
xchg
sub
dec
outs
dec
cmp
arpl
xchg
adc
mov
add
movs
adc
mov
inc
push
push
xchg
pop
ret
enter
daa
iret
mov
add
test
sbb
add
add
push
loope
fld
ret
or
sbb
leave
add
lahf
add
jno
adc
or
sub
sub
data16
push
and
loope
daa
and
xchg
and
adc
in
enter
pop
sub
leave
in
sbb
mov
inc
add
nop
add
push
ins
stos
shr
sbb
gs
mov
rol
push
pop
push
call
mov
sbb
dec
sbb
lock
cmp
sub
mov
mov
mov
adc
fsubr
cs
add
pop
cmps
stos
fadd
fcomp
xor
sbb
add
imul
popa
inc
adc
iret
sbb
dec
add
inc
pop
mov
sbb
adc
or
pop
jnp
retf
es
mov
or
fcomp
add
sbb
sub
dec
xor
mov
dec
jl
test
adc
(bad)
out
test
pop
push
pop
push
push
cmps
popf
inc
popf
(bad)
pusha
out
stos
icebp
adc
xor
pop
aas
movs
push
xchg
stos
enter
dec
dec
rcl
cmp
sub
mov
punpcklbw
daa
push
adc
pop
popw
pop
dec
pop
push
pop
xor
or
test
mov
lock
call
jle
xor
cs
push
enter
cs
mov
pop
add
xchg
and
mov
mov
(bad)
pop
pop
sub
and
adc
or
pop
out
enter
push
lahf
sbb
clc
pop
cvtpi2ps
xchg
inc
xchg
cld
add
mov
pop
add
push
inc
pop
adc
ss
bound
inc
lds
inc
int3
inc
mov
mov
(bad)
repnz
aad
idiv
mov
adc
cmp
cwde
inc
pop
push
pop
aaa
add
arpl
inc
sub
pusha
cmp
pop
push
sub
lahf
mov
and
setbe
inc
leave
add
dec
dec
dec
adc
pusha
aaa
add
(bad)
pop
cmp
push
xor
dec
and
push
es
ss
inc
ds
pusha
sbb
cmp
and
js
pop
mov
pop
in
inc
jp
adc
jbe
add
xor
out
and
loopne
sahf
popf
nop
and
pop
cld
daa
pop
add
cmp
and
pusha
ds
(bad)
xchg
scas
adc
inc
shr
cmp
pop
rol
mov
into
ins
in
int3
sub
clc
test
cmps
sub
mov
aas
pop
in
sub
aas
pop
pop
inc
pop
daa
xor
xchg
pop
sbb
or
cmp
adc
and
pusha
sub
fadd
cwde
sub
(bad)
mov
dec
pop
and
movs
inc
outs
sbb
adc
(bad)
mov
xchg
sub
pop
cmp
dec
jle
inc
icebp
mov
js
cmp
jg
or
pop
or
shl
jg
dec
sub
push
sbb
mov
pop
pop
cmp
mov
xchg
rcr
fisubr
fsubr
or
pusha
dec
cmp
sbb
add
add
sub
lock
sub
add
add
push
cmp
test
ss
dec
cmp
sub
mov
or
(bad)
jne
aam
and
jno
push
test
mov
jecxz
sbb
out
sbb
scas
adc
bswap
bound
pop
add
xchg
add
das
jns
add
add
push
adc
and
sub
xchg
sub
or
adc
test
stos
xor
add
addr16
cmp
cld
sub
adc
adc
xor
xchg
nop
dec
inc
mov
inc
pop
jno
pop
inc
dec
jne
mov
jbe
and
sahf
mov
xor
inc
push
and
ffree
cwde
sar
and
push
xor
(bad)
rol
pushf
bound
jb
add
call
pop
fmul
mov
arpl
arpl
jne
cmovo
and
cli
popa
inc
movs
test
or
adc
(bad)
dec
adc
xchg
mov
add
jne
and
or
and
push
add
mov
mov
jecxz
imul
mov
sub
ss
add
ror
mov
popa
xor
shr
adc
sub
dec
enter
adc
sbb
leave
dec
adc
and
scas
retf
pop
rcr
add
push
add
sub
clc
and
and
xor
aaa
cmp
pop
mov
push
inc
pop
and
movs
inc
or
test
js
jmp
imul
add
lea
sbb
aam
sbb
aam
ins
loop
add
inc
addr16
movs
add
bound
or
das
pop
push
xchg
and
add
sub
xor
and
or
sbb
pop
and
sub
adc
pusha
jmp
pop
mov
sbb
and
add
inc
ret
add
dec
popf
in
pusha
mov
repz
pusha
scas
push
xor
push
mov
in
and
jbe
aas
push
add
xor
jb
popf
es
das
popa
dec
xchg
add
inc
and
push
and
and
adc
inc
xchg
cs
xor
cmp
fbld
dec
push
inc
sub
iret
xchg
fmul
inc
call
cwde
rcl
cmp
in
add
jge
movzx
push
pop
cs
test
mov
adc
rcl
cmp
adc
push
jne
sub
and
rcr
sbb
mov
mov
es
jge
test
dec
sbb
dec
adc
adc
cmc
push
ret
sbb
or
inc
jnp
fwait
mov
rol
dec
push
push
mov
dec
(bad)
pop
je
fistp
or
add
std
mov
and
push
ret
mov
jno
sub
or
or
push
sbb
or
mov
or
xor
inc
dec
and
jb
sub
movs
push
xchg
inc
or
rol
adc
mov
cmp
push
inc
xchg
loope
push
int
sub
inc
fnstenv
retf
pop
jae
scas
test
xor
push
mov
test
ret
mov
sbb
add
ds
push
sub
dec
or
enter
lds
lods
frstor
jb
dec
loope
xor
push
push
and
jmp
pop
pop
add
out
push
jb
dec
lods
cdq
test
inc
xor
je
icebp
dec
loope
inc
add
or
pop
add
push
mov
sbb
adc
xor
mov
or
sub
mov
add
mov
or
dec
xor
retf
cmovo
mov
stc
cmp
and
mov
(bad)
cmp
fsub
bound
adc
sbb
scas
fsubp
xchg
jbe
or
pop
jmp
fisubr
iret
mov
lods
mov
push
stos
call
cmps
lahf
sub
rol
fld
jns
or
aaa
fisttp
xor
popf
xor
jns
inc
daa
nop
inc
adc
xor
cs
add
xchg
and
pop
inc
inc
or
push
cmp
(bad)
pop
rcl
bound
pop
pop
stos
dec
xchg
inc
pop
nop
pop
push
repnz
pop
mov
dec
or
add
outs
dec
mov
ins
aas
mov
lock
mov
jmp
inc
xchg
cwde
neg
inc
in
and
inc
popf
mov
movs
sub
sub
ror
retf
in
dec
leave
mov
ret
mov
cmps
mov
sub
or
je
and
fiadd
retf
out
add
jae
push
and
sub
adc
sbb
add
push
out
and
add
loopne
xchg
push
in
les
push
mov
xchg
stc
pop
idiv
adc
push
call
cmp
aaa
retf
clc
mov
dec
aaa
lds
scas
xor
scas
sub
xchg
test
repnz
ins
hlt
or
test
and
push
rcl
sbb
xor
pop
inc
dec
adc
push
loope
test
jecxz
lock
dec
int3
imul
scas
lock
push
and
movs
mov
mov
fisttp
pop
sub
lahf
data16
push
enter
test
dec
loopne
cmp
aaa
sbb
bound
jle
outs
add
dec
mov
adc
mov
ror
test
mov
aaa
sub
daa
push
outs
sub
push
sbb
add
push
mov
inc
mov
fdivr
adc
arpl
mov
movs
jo
pop
nop
(bad)
lods
push
adc
bound
push
pop
pop
pop
jge
fdiv
or
add
(bad)
xor
push
xchg
rsm
sbb
mov
mov
jae
sbb
in
sbb
mov
fbld
xchg
cmp
mov
inc
add
adc
dec
cvtps2pd
loopne
dec
xor
mov
push
popf
int3
inc
jmp
test
push
pusha
push
outs
push
js
dec
(bad)
jbe
pop
mov
sbb
je
mov
je
out
inc
loopne
js
dec
xchg
push
inc
pop
sbb
pop
jns
inc
sub
and
mov
inc
add
push
pop
popf
ins
sbb
fisubr
and
in
mov
push
ins
push
jb
pop
enter
jns
jnp
lds
pop
cmp
test
mov
sub
xchg
pop
xor
sub
test
xchg
pop
xor
jle
repz
push
mov
dec
pop
inc
pusha
outs
movs
jle
popa
adc
sub
xor
add
out
pop
xor
xor
loopne
leave
retf
retf
and
or
pop
jecxz
pop
push
sub
pop
mov
fadd
add
test
rcr
adc
and
sub
mov
jb
adc
mov
cmpordps
adc
pushf
push
enter
xchg
mov
mov
pop
pop
lds
xor
ret
rol
dec
mov
das
pop
movs
test
test
lods
pop
pushf
(bad)
push
pop
les
retf
sbb
cmp
imul
cmp
add
pop
xor
dec
cli
inc
es
(bad)
push
sahf
iret
ficom
inc
jl
dec
push
or
nop
pop
add
jmp
add
add
inc
cmp
out
in
xchg
or
dec
and
nop
sub
jo
and
(bad)
pop
bound
xor
sbb
mov
in
mov
pop
mov
rol
dec
stos
push
add
xchg
test
fs
add
add
or
and
fisttp
mov
sub
popa
and
add
xor
push
idiv
adc
or
pop
popa
adc
cmp
pop
xchg
or
xchg
mov
inc
rcr
lods
fnsetpm(287
fwait
push
mov
loope
pop
enter
pushf
mov
adc
and
ins
adc
cmp
xchg
push
(bad)
xchg
les
test
push
add
outs
adc
fisub
jno
adc
test
lock
test
ss
jle
js
push
adc
dec
in
iret
add
outs
sub
aaa
mov
lea
xchg
jnp
pushf
fisubr
cmp
xor
adc
mov
inc
(bad)
in
imul
add
mov
sti
inc
adc
or
out
mov
or
test
jne
mov
int3
add
or
test
ficomp
lea
neg
mov
xchg
push
fcomp
add
xor
outs
push
xchg
imul
mov
js
fstp
sub
mov
pop
pusha
jmp
imul
cmp
add
inc
mov
fsub
bound
popf
dec
rcl
mov
cmps
ja
aam
inc
inc
adc
and
mov
push
sub
fild
mov
aaa
inc
std
mov
jne
leave
adc
push
xor
jp
cdq
fisub
mov
mov
fld
rcl
push
adc
push
cdq
pop
fs
xchg
adc
test
pop
aaa
xchg
outs
xor
pop
adc
cmp
or
out
bound
xor
ret
dec
test
push
call
xchg
cmp
loop
imul
or
lock
imul
loopne
sbb
jmp
pop
fs
cmp
sbb
add
inc
pop
loopne
sbb
test
push
jno
in
adc
add
pop
mov
lahf
pusha
mov
push
or
xor
lea
sysret
mov
pop
cmps
add
and
addr16
xchg
stos
cmp
jp
dec
lds
jecxz
scas
inc
add
push
mov
or
sbb
adc
pop
inc
mov
sub
add
pop
jge
mov
xchg
loopne
jmp
cmp
shl
es
and
adc
mov
inc
(bad)
adc
iret
in
inc
jo
inc
out
das
aas
and
add
or
cmp
aam
cmp
mov
inc
pop
lock
mov
sbb
cmp
xchg
pop
lds
and
bound
mov
sub
aam
dec
rcl
test
sbb
adc
mov
lock
sbb
adc
adc
sub
adc
add
xchg
dec
bound
mov
aam
adc
inc
icebp
iret
push
fmul
inc
imul
or
retf
inc
jo
test
in
mov
and
sub
mov
jmp
fs
ins
fwait
adc
push
and
pop
aam
xchg
sub
or
lea
loopne
ret
lea
pop
push
lock
mov
xor
leave
or
xchg
cdq
or
cdq
outs
shl
xlat
enter
xor
push
inc
lahf
fdiv
and
repz
push
jmp
cdq
aaa
sbb
rol
add
push
dec
push
mov
or
retf
js
mov
fsubr
inc
inc
call
add
jp
add
or
test
mov
jo
daa
inc
je
test
jmp
inc
mov
adc
les
loop
test
popa
loopne
cmp
jns
ror
mov
loope
adc
out
xchg
dec
repz
adc
mov
in
pop
rol
repnz
mov
outs
pop
frstor
or
ret
daa
rcl
bound
out
xor
push
lods
jp
mov
cmc
fadd
(bad)
leave
xchg
pusha
in
add
mov
cmp
pop
rol
fwait
inc
and
dec
idiv
push
loopne
and
int
jmp
pop
or
jbe
dec
cdq
mov
and
or
sahf
cmps
pop
or
ror
pop
mov
xor
jg
mov
add
or
adc
inc
sub
push
mov
xor
xor
dec
adc
pop
add
clc
loope
ret
in
jb
xor
dec
sub
cmp
in
adc
xchg
loop
jne
sbb
hlt
jae
adc
and
mov
adc
add
add
inc
or
leave
push
(bad)
retf
and
push
mov
out
sti
or
inc
pop
and
adc
jb
leave
or
out
jae
jmp
pop
inc
sub
sbb
push
enter
inc
sub
xchg
jl
jae
enter
lahf
mov
and
mov
mov
sbb
rcl
call
sbb
stc
pop
inc
mov
push
xchg
add
pop
stos
adc
mov
cwde
std
jno
mov
add
xchg
je
mov
aaa
sub
inc
xchg
mov
in
add
fs
rcl
shl
push
dec
mov
push
(bad)
mov
sbb
xor
fdiv
add
cwde
shl
ret
mov
ror
into
js
mov
(bad)
js
or
sub
(bad)
push
scas
in
push
mov
shl
and
fcom
leave
mov
sub
sub
inc
pusha
stos
sub
pop
mul
and
dec
out
xchg
mov
lods
or
cdq
fdiv
pusha
daa
sub
mov
push
fnsave
in
mov
jb
pop
sub
sbb
adc
push
mov
adc
inc
lahf
leave
mov
mov
out
test
test
les
mov
retw
pop
fldcw
inc
call
push
pop
fwait
mov
ret
mov
fcmovne
dec
xor
adc
enter
pop
inc
sbb
sub
inc
mov
fsubr
jns
imul
or
add
in
add
sbb
sub
xor
mov
push
xor
xor
movs
test
and
xchg
mov
sbb
sbb
dec
lods
cmps
ins
mov
pop
out
inc
movs
or
lods
loopne
sbb
ret
lahf
cli
push
mov
and
test
enter
ret
mov
mov
pop
sub
xor
xchg
jo
mov
addr16
adc
jmp
sbb
or
fwait
call
and
fucomip
mov
jne
rcl
cwde
mov
int
lock
test
jle
push
(bad)
mov
inc
push
mov
add
loopne
jo
cmp
pop
movs
xchg
xor
mov
sub
mov
add
loopne
jg
sbb
or
or
add
jmp
imul
nop
add
push
sub
xchg
nop
scas
push
adc
fwait
jle
inc
add
enter
pop
cmps
daa
shl
movs
mov
add
mov
push
sar
hlt
or
mov
aas
sub
and
je
mov
mov
iret
mov
lods
out
inc
enter
(bad)
dec
xor
add
cmp
pop
dec
sub
fmul
adc
push
adc
sahf
or
int3
test
mul
or
lods
xor
push
dec
adc
out
add
adc
add
add
mov
jnp
or
movs
add
fs
aad
pop
pop
and
inc
inc
sbb
icebp
mov
(bad)
mov
clc
stc
movs
popa
test
dec
dec
or
sub
bound
push
outs
sub
aad
dec
xor
stos
add
pop
loope
or
aas
jno
sub
ret
jle
pop
adc
and
push
pop
adc
pop
lds
push
fadd
xchg
nop
stos
mov
sbb
cmps
inc
cs
and
pop
sbb
push
sub
fcomp
fcomp
leave
or
cld
jmp
xor
dec
out
imul
repnz
sbb
and
repnz
pinsrw
or
dec
ret
mov
push
loope
and
lods
in
inc
push
xor
or
inc
ins
sbb
out
adc
xlat
pop
jmp
inc
loop
test
jl
jmp
add
add
pusha
pop
test
adc
and
mov
pop
add
adc
or
enter
add
and
push
jb
pop
pop
push
daa
and
xor
push
(bad)
push
ss
or
shrd
hlt
lea
and
adc
(bad)
outs
xor
daa
pop
leave
daa
dec
sub
and
sub
(bad)
inc
std
push
jl
mov
add
and
sbb
shr
mov
mov
xlat
push
push
inc
jl
mov
pusha
ss
jg
addr16
sbb
nop
sub
arpl
adc
jo
dec
repnz
inc
or
les
nop
xchg
jae
in
xchg
nop
pop
dec
pop
test
nop
jp
and
xchg
xchg
sub
add
mov
loop
pushf
xor
rol
or
xchg
push
lahf
and
stos
adc
pop
mov
scas
loopne
pop
fisttp
(bad)
stos
nop
add
jl
push
mov
fwait
in
adc
mov
inc
mov
push
sbb
push
sub
adc
nop
(bad)
sbb
and
fwait
add
sub
data16
gs
add
xor
and
xor
dec
data16
pop
pshufw
and
pop
enter
aaa
push
sbb
loop
loope
loopne
inc
test
fs
stc
test
jg
mov
push
push
clc
sub
in
mov
jg
paddb
popa
aam
mov
adc
pushf
das
jne
lea
push
adc
pop
gs
adc
inc
adc
pop
or
pop
rcr
push
inc
sub
xchg
push
sbb
inc
ins
jne
add
stos
pop
add
imul
or
xchg
ja
outs
mov
sub
pop
dec
das
or
and
sub
fs
movs
call
fwait
hlt
mov
mov
stc
ja
in
add
aaa
cwde
add
ja
add
add
test
pop
and
xchg
loope
inc
dec
rol
fisubr
xchg
pusha
and
and
cdq
pop
push
(bad)
gs
sub
pop
inc
icebp
push
mov
movs
and
imul
aaa
or
adc
dec
adc
adc
pop
jae
ins
(bad)
add
and
adc
hlt
cwde
inc
and
adc
pop
mov
daa
add
xor
in
rol
push
pusha
push
fild
enter
ret
pop
out
mov
lahf
or
dec
shl
lds
pop
jae
add
stc
into
adc
fiadd
lea
fld
lea
push
mov
fs
sub
cmp
push
adc
pop
daa
add
jnp
test
push
sub
push
or
nop
sbb
push
inc
or
rcl
and
push
ja
jecxz
xchg
mov
and
aaa
and
addr16
call
xchg
pop
cmp
jae
(bad)
je
mov
mov
sahf
mov
dec
and
jne
or
push
out
mov
pop
jmp
or
pop
or
and
and
jmp
test
daa
and
sbb
cmp
sbb
sub
ja
pop
sub
das
das
in
in
push
(bad)
bnd
and
inc
lods
lods
cld
mov
push
and
lock
pop
cmp
add
xchg
jo
pop
push
adc
xchg
adc
mov
add
adc
stos
fs
pop
ror
out
sti
enter
cld
adc
or
repnz
popf
pop
popf
xor
jnp
jl
outs
pop
push
shl
div
mov
scas
ins
popf
mov
pop
pop
pop
pop
add
rcr
xchg
dec
push
and
pop
lahf
hlt
sahf
or
cmp
lahf
hlt
sahf
sub
cmp
mov
push
repnz
hlt
sahf
(bad)
nop
inc
enter
sahf
mov
sbb
add
cmp
lds
cmp
dec
loop
sbb
or
or
and
mov
cmp
in
push
or
add
sbb
or
pop
(bad)
dec
adc
push
dec
call
or
mov
or
or
or
inc
mov
je
or
add
pop
cmp
pop
and
xor
test
dec
and
mov
aas
fld
sbb
js
in
or
sbb
outs
jno
add
cwde
xlat
or
push
mov
adc
in
pop
arpl
(bad)
cmps
xchg
sbb
out
mov
xchg
ds
fist
mov
jmp
sar
cli
call
and
and
mov
or
imul
or
cmp
adc
xor
sahf
idiv
xchg
sub
test
add
or
cmps
xchg
push
leave
or
adc
outs
xchg
hlt
(bad)
push
xor
fsubr
cdq
xchg
test
jns
cmovo
adc
mov
sbb
and
scas
xchg
mov
dec
sub
scas
ror
out
push
sbb
lods
out
xor
jb
jmp
popa
mov
jl
push
je
js
mov
pushf
pop
test
mov
adc
iret
call
dec
cmp
mov
leave
movs
into
js
inc
mov
jmp
ror
pop
push
movs
mov
popf
pop
rdmsr
pop
inc
inc
jo
pop
sub
pusha
add
add
test
pop
cmp
xor
movs
iret
or
inc
mov
movs
and
rcl
xor
les
and
movs
iret
in
mul
mov
in
into
paddq
mov
pusha
adc
inc
inc
sub
push
pop
shl
rol
pop
and
sbb
jbe
push
push
sysenter
cmps
xchg
das
stos
push
mov
xor
add
mov
cmps
pop
or
add
sbb
outs
xchg
or
xor
mov
push
sub
mov
pop
adc
ret
and
mov
jae
sbb
imul
add
add
scas
data16
pop
pushf
mov
add
mov
mov
out
sub
dec
add
inc
mov
or
pop
mov
mov
(bad)
mov
scas
jbe
scas
xor
test
mov
out
lock
or
push
adc
int3
adc
add
adc
ret
mov
xor
xor
retf
pusha
aas
pop
ins
cwde
xchg
hlt
fsubr
jle
test
sbb
hlt
or
enter
inc
lahf
cmp
mov
fcomi
push
fild
pop
sub
aaa
dec
cmp
mov
add
xor
dec
ret
adc
pop
(bad)
mov
movs
lea
(bad)
push
adc
aam
xadd
jmp
mov
ds
ret
nop
xor
or
aad
sti
ror
pop
dec
sar
cld
jno
and
cmp
pop
inc
jle
push
add
mov
punpcklwd
or
push
dec
rcr
test
nop
push
dec
stc
push
pop
push
loope
sbb
push
inc
or
inc
rcl
arpl
rcl
cwde
lea
aam
dec
jp
or
xor
or
adc
adc
inc
inc
add
es
add
mov
dec
jae
xchg
push
add
fld
popf
pop
mov
and
fild
loopne
mov
mov
ret
xchg
inc
inc
add
or
rol
aam
inc
add
xor
adc
xchg
popf
sbb
jg
shr
movhlps
and
lea
xor
out
out
sub
xchg
test
pop
mov
adc
iret
cmc
es
gs
add
movs
jbe
ins
pop
js
jne
outs
mov
add
and
out
popf
aaa
and
jb
(bad)
sahf
addr16
and
mov
clc
add
jge
aam
test
dec
lea
inc
test
adc
dec
mov
dec
sub
jae
sub
or
test
pop
movs
imul
adc
ins
jg
rcr
imul
mov
push
jbe
test
jns
pop
cmc
imul
push
sub
push
jge
cld
pop
pop
and
push
push
js
sub
es
fisttp
outs
adc
add
cmps
adc
loopne
xchg
inc
inc
add
push
popa
jl
jp
xchg
adc
mov
or
mov
push
dec
adc
add
sub
shr
in
jno
mov
(bad)
movs
(bad)
xchg
dec
dec
push
je
or
or
sub
movs
and
push
mov
cmp
in
add
or
adc
or
lea
test
fild
mov
sbb
and
xor
daa
sub
or
mov
pop
mov
dec
popf
cmp
or
inc
gs
mov
push
ins
retf
rcl
push
loope
sbb
xchg
sub
pop
fsub
mov
ss
daa
mov
(bad)
dec
retf
mov
mov
sahf
cld
or
add
icebp
jle
dec
pop
fidivr
cmc
in
inc
cmc
adc
and
and
xor
jmp
jg
sbb
sbb
enter
mov
shl
out
fwait
loope
dec
or
mov
fist
sub
adc
leave
leave
adc
ja
cmp
cmp
sub
leave
movs
sub
or
daa
xchg
xchg
retf
adc
adc
add
or
add
jo
inc
iret
or
sub
lahf
mov
out
xor
add
xor
sub
les
test
lahf
cmp
jbe
xchg
xor
repnz
ret
nop
mov
sbb
retf
mov
sbb
in
dec
pop
mov
ror
or
call
lock
mov
fdiv
jge
push
push
mov
mov
xchg
fwait
jmp
push
test
adc
fs
mov
or
shl
adc
pop
xchg
(bad)
aas
adc
mov
inc
inc
(bad)
(bad)
call
out
sub
cmp
shl
shr
add
and
adc
je
pop
dec
lds
or
add
out
xlat
jp
shl
xor
imul
or
je
outs
push
out
cmp
out
inc
sbb
add
xlat
push
xchg
ret
imul
out
push
ret
inc
(bad)
pushf
sub
and
js
xchg
and
and
mov
push
leave
nop
cmp
mov
jnp
dec
or
jmp
sbb
cmp
pop
cmp
dec
mov
in
xor
retf
push
or
adc
or
pop
push
jo
or
cwde
adc
pop
jne
add
mov
loope
bnd
movs
cdq
les
inc
adc
adc
mov
nop
jo
pop
jnp
inc
or
(bad)
cmp
imul
loop
sbb
jae
jmp
jp
aam
pop
jmp
(bad)
js
outs
mov
jae
out
ja
into
adc
or
and
mov
push
sub
ja
bound
clc
pop
ins
fwait
loop
out
pop
lock
out
adc
outs
je
js
retf
push
nop
sbb
adc
mov
mov
jbe
sub
fidivr
inc
lahf
sub
je
sub
jnp
xor
je
jmp
cmp
push
loop
sub
shl
cmp
jbe
inc
bound
cmp
idiv
mov
adc
enter
pop
test
mov
lahf
sbb
out
xchg
dec
je
outs
jb
jne
or
sbb
push
outs
sbb
inc
nop
pop
cmp
shr
nop
jae
xchg
aaa
and
pop
xchg
add
xlat
and
and
fisttp
mov
ss
push
cdq
cmp
out
arpl
gs
js
sti
mov
aaa
dec
mov
jb
jmp
movntps
jae
popa
and
pop
pop
ret
fwait
out
and
stos
cmp
inc
imul
sub
jg
or
sub
retf
mov
mov
ds
cs
lods
js
dec
ret
cmp
push
imul
cmp
fwait
es
ja
push
jae
out
push
ja
adc
xchg
es
dec
pusha
sbb
adc
pop
ins
test
outs
jbe
inc
ret
jb
stos
aas
(bad)
xor
push
fwait
adc
fs
mov
inc
(bad)
call
fimul
std
mov
jbe
xor
xor
cmps
leave
inc
jo
(bad)
and
lahf
imul
or
cmps
or
sub
sub
pop
xor
push
fild
addr16
jecxz
jecxz
bound
mov
into
ret
sti
xor
iret
xchg
mov
dec
or
xlat
es
mov
lahf
dec
jbe
sbb
fbstp
sti
addr16
mov
sub
scas
adc
mov
mov
cmp
lds
pop
ret
cs
jl
imul
sub
sub
pop
mov
add
ja
dec
stos
cmp
cmps
jecxz
fisub
adc
daa
cmp
xchg
ss
xlat
mov
iret
and
xlat
pop
pop
mov
or
mov
push
pop
jp
adc
sti
pop
stos
xor
sbb
or
shl
push
and
push
ret
or
or
mov
sti
pop
test
in
in
jl
jle
in
in
pusha
popa
bound
in
in
gs
in
push
in
in
ins
outs
outs
(bad)
push
int3
les
ret
mov
out
jbe
cmps
cmp
sub
adc
pop
pop
cmp
fild
jnp
jg
push
dec
xchg
and
xlat
xor
lock
pop
jb
ins
pop
xor
fild
push
xor
mov
xor
cdq
mov
retf
sub
adc
pop
scas
jbe
(bad)
jmp
jo
adc
aas
jo
pavgb
outs
pop
nop
pop
js
jle
sub
aaa
push
dec
and
and
pop
and
or
and
push
pop
scas
lods
and
jo
imul
ret
jb
sub
cs
jae
int3
repnz
or
cld
dec
enter
mov
add
adc
outs
fs
pop
sub
and
ret
movs
ret
add
sbb
ret
mov
and
add
not
iret
pop
sub
inc
imul
and
cmp
inc
les
dec
dec
inc
push
iret
pop
sub
sbb
daa
and
addr16
lock
dec
imul
add
dec
inc
inc
and
bound
call
daa
lods
lds
lds
mov
inc
sbb
pop
add
pop
and
and
mov
and
(bad)
push
xchg
aam
adc
pusha
mov
es
pop
xor
es
(bad)
ja
sbb
jb
(bad)
and
es
test
mov
adc
xlat
shl
mov
xor
adc
cld
loopne
sbb
jb
adc
dec
outs
dec
pop
imul
shr
adc
enter
mov
in
enter
jmp
movs
dec
fwait
sub
sbb
scas
or
leave
addr16
add
push
leave
int3
movs
sub
mov
pop
sub
cmp
add
retf
in
(bad)
cmp
adc
sbb
add
add
jbe
mov
cdq
fild
cmp
mov
cs
clc
fcomp
les
or
dec
cmp
adc
pop
xor
and
retf
retf
xor
retf
jge
rol
movups
sub
and
int3
je
movaps
inc
lock
int3
sbb
xchg
xor
ret
test
out
inc
dec
ins
xor
pop
pop
sbb
(bad)
fistp
nop
jg
xchg
add
mov
add
pop
xor
sub
jg
lock
clc
fcomp
int
sub
(bad)
and
jo
pop
xlat
pop
xor
and
into
xchg
push
push
dec
inc
pop
and
mov
in
in
aad
and
ja
bound
inc
in
sub
fisttp
cwde
aam
out
add
push
dec
push
mov
pop
add
pop
jo
push
push
inc
imul
jne
ins
loopne
xor
jmp
or
je
inc
pop
inc
inc
cmp
int3
or
or
or
loope
das
or
mov
ss
or
pop
jae
push
sar
jmp
(bad)
outs
inc
fs
pop
add
add
clc
mov
gs
sbb
mov
loope
or
and
ds
jns
or
stos
and
sub
cld
dec
in
jns
test
push
add
movups
dec
xlat
add
push
int
or
mov
xchg
inc
or
and
popf
cmps
sbb
(bad)
pop
ins
icebp
cmp
test
mov
push
repnz
pop
imul
mov
mov
add
xor
shr
add
xchg
inc
cmp
add
mov
stos
add
pop
mov
out
add
or
nop
fcmovnu
pop
mov
bound
dec
rcl
addr16
test
sbb
pop
iret
pop
add
mov
xchg
leave
leave
call
dec
je
or
dec
aaa
pop
enter
sbb
dec
sar
or
movs
add
or
das
jge
(bad)
repnz
push
or
xchg
pop
dec
js
add
loope
mov
add
pusha
das
xchg
inc
sbb
push
test
mov
mov
jne
dec
adc
ret
pop
gs
pusha
rcl
sbb
adc
pop
and
jns
jl
adc
cmp
imul
ins
aaa
mov
iret
fadd
adc
shl
popf
cdq
or
cli
fiadd
push
push
int
cld
rol
add
lods
xor
push
jo
or
jb
pop
adc
xchg
outs
mov
push
or
fdivr
fdiv
mov
outs
push
pusha
cld
push
cmp
out
das
out
push
inc
inc
aam
test
sub
dec
inc
pop
add
or
lods
push
pop
(bad)
imul
dec
push
cwde
push
dec
imul
fwait
data16
jbe
ins
push
pop
movs
out
hlt
cmp
push
mov
mov
push
push
data16
js
push
loopne
xor
mov
pusha
adc
shr
sahf
mov
gs
xor
add
movs
stc
shr
ret
dec
loope
call
push
jl
shr
outs
add
add
or
push
test
cmps
cmps
dec
call
iret
repz
pop
inc
inc
lahf
out
dec
cmp
data16
mov
jns
fst
outs
mov
pop
and
ins
add
xchg
(bad)
daa
xlat
punpcklwd
fstp
fdiv
scas
or
sbb
out
fsubr
aas
(bad)
test
dec
(bad)
lock
int
xchg
fisubr
mov
dec
jnp
or
mov
fistp
scas
mov
sbb
adc
btr
in
add
cmp
jle
jmp
mov
mov
enter
ds
pusha
mov
imul
jno
js
mov
movs
xlat
inc
pop
pop
add
push
and
dec
or
add
xchg
test
sub
xchg
or
mov
arpl
adc
(bad)
xlat
je
pop
je
lods
movs
cs
or
lods
cmp
jp
xchg
cmp
jl
or
adc
sbb
sub
xor
pop
cmp
or
(bad)
daa
sub
jl
mov
rol
mov
bound
push
retf
xor
(bad)
and
adc
add
and
adc
lods
adc
and
xchg
inc
xchg
leave
jmp
leave
inc
add
or
pop
inc
mov
or
pop
push
adc
imul
pop
push
add
inc
loope
and
sar
add
push
add
and
dec
addr16
loope
nop
push
xchg
std
or
sub
push
bound
add
mov
les
push
mov
add
clc
test
inc
sub
add
movs
inc
fs
idiv
jecxz
jge
arpl
or
dec
inc
or
hlt
icebp
add
pop
std
jmp
ja
repnz
add
or
pop
add
xor
or
pop
add
pop
dec
fsubr
inc
pop
sbb
in
(bad)
lods
fcomp
adc
add
test
test
iret
pop
mov
xchg
or
push
pop
ja
pushf
mov
push
add
dec
sbb
jl
rcl
mov
jge
dec
test
push
pop
or
and
push
inc
sti
xchg
outs
in
push
add
in
ficom
fisttp
xchg
arpl
xchg
lock
cmp
imul
adc
mov
mul
push
push
or
mov
adc
sbb
push
add
mov
cmp
pop
in
adc
jb
lds
sbb
pop
and
adc
jmp
inc
sbb
pusha
fldcw
push
sbb
add
push
pop
das
aas
and
jb
ret
cmp
xor
inc
inc
jg
push
push
sub
ret
ja
sbb
cmp
lahf
dec
movs
sbb
push
mov
mov
inc
ror
sub
loope
scas
aad
sbb
cmp
jae
sbb
xchg
push
das
es
hlt
loopne
aam
iret
daa
pop
cmp
add
mov
ins
loope
ficomp
push
mov
das
psrad
(bad)
mov
sar
sbb
push
je
movs
sbb
adc
pop
nop
lods
cmps
add
push
or
add
and
fimul
sar
lock
sbb
rcr
loop
push
push
fmul
add
aam
mov
dec
adc
aam
jecxz
ins
cmp
shl
sbb
cmp
pop
and
mov
xchg
adc
inc
lds
or
or
cmp
mov
jecxz
xchg
mov
xchg
bswap
test
add
inc
add
sbb
push
cmp
lods
ret
loope
add
scas
or
push
adc
pushf
test
inc
adc
mov
pop
pop
jg
lods
rcr
push
add
adc
sub
and
mov
(bad)
adc
pop
mov
push
or
inc
inc
fld
adc
xchg
or
push
lods
shl
or
stos
sub
out
in
pop
enter
pop
inc
cmovp
xchg
pop
jge
imul
dec
inc
mov
pop
mov
test
out
adc
or
adc
mov
xlat
mov
mov
sbb
in
add
daa
shr
sub
(bad)
cmp
or
das
or
sub
sub
movs
icebp
ds
out
dec
mov
popa
mov
je
jo
int
jb
and
dec
push
fcom
lods
test
jbe
outs
sbb
dec
xor
adc
aaa
int
mov
dec
inc
and
popa
push
retf
repz
pop
test
mov
sub
mov
and
call
loopne
push
mov
test
sti
inc
jnp
mov
sub
mov
or
sub
(bad)
pop
sub
retf
sbb
out
pop
push
inc
inc
stos
clc
push
add
in
pop
pop
mov
nop
or
add
sub
(bad)
add
ucomiss
jmp
jmp
sbb
loop
dec
push
cli
pop
mov
aaa
lods
jmp
pop
or
add
push
mov
nop
push
and
adc
adc
dec
imul
fisttp
ror
movs
in
adc
dec
rcr
cmp
or
cmps
cmps
sbb
test
inc
or
rcl
or
add
xlat
jo
jns
jge
inc
loope
pop
lds
sbb
inc
pusha
dec
aaa
add
adc
and
inc
bound
int
inc
bnd
arpl
int
mov
retf
inc
popa
add
test
cld
je
or
add
adc
clc
or
or
add
xchg
cwde
fld
mov
mov
jmp
test
fistp
in
das
pop
push
and
pop
dec
push
ja
imul
sbb
or
push
push
sbb
jo
leave
sbb
sbb
std
cmp
and
jns
in
cmc
leave
jg
int
in
(bad)
in
aad
dec
pop
jae
and
or
and
pushf
ins
dec
push
and
mov
mov
cmp
das
pop
ret
xor
mov
outs
pop
add
push
fxtract
mov
or
mov
in
dec
mov
pop
pop
inc
sbb
mov
pop
or
xor
mov
daa
add
das
push
out
(bad)
pop
out
jp
pusha
inc
sbb
(bad)
inc
das
xor
cmp
rcl
out
xor
addr16
dec
inc
pop
fs
sbb
test
es
xchg
push
push
out
push
out
cmp
or
xor
cmp
mov
and
inc
pop
add
cmp
push
lock
icebp
out
das
call
pop
push
sbb
in
inc
sub
mov
mov
popa
pusha
mov
adc
enter
enter
(bad)
lock
jo
add
cmp
sti
ret
pop
push
fstp
push
dec
push
inc
pop
test
js
sbb
xchg
inc
mov
shr
inc
js
mov
ds
cmp
pop
mov
dec
xchg
fcmovbe
out
mov
sbb
scas
or
mov
sbb
adc
and
mov
inc
ss
repz
repnz
repnz
repnz
inc
dec
nop
push
sbb
push
and
lock
or
data16
add
mov
out
add
repz
cmp
das
scas
repz
je
dec
push
pop
ficomp
mov
and
in
mov
sbb
dec
and
mov
mov
dec
je
push
ret
popw
push
pop
in
int
or
rcl
wbinvd
ror
inc
test
fadd
jle
xor
adc
nop
es
cmc
das
pushf
test
outs
push
das
das
cdq
inc
jbe
pop
xor
(bad)
and
dec
pop
out
or
cdq
xor
pop
xchg
dec
sbb
inc
out
add
mov
test
pop
cmps
sub
jecxz
ins
ret
adc
movs
xchg
sub
pop
cmp
cmps
pop
xor
jle
xchg
into
jae
ins
sub
pop
jbe
dec
push
dec
and
jae
mov
(bad)
jns
xchg
push
enter
das
adc
rol
mov
sub
test
mov
mov
es
push
and
enter
push
ret
das
lock
xor
adc
push
add
mov
push
mov
push
push
cmps
add
mov
and
jns
sbb
outs
jne
mov
fisttp
sbb
xchg
adc
repz
scas
mul
fwait
xchg
jmp
and
pushf
push
xchg
mov
ins
push
adc
in
clc
pop
rcl
mov
pop
xor
stos
in
(bad)
cmp
enter
std
push
stc
icebp
int3
jns
push
inc
add
mov
mov
add
les
addr16
xor
std
cmp
retf
jno
sbb
sbb
inc
iret
xchg
xor
lods
push
in
shl
cli
out
(bad)
stc
repz
adc
jp
je
jl
push
push
cmp
mov
mov
mov
sbb
add
mov
adc
arpl
jo
imul
cmp
mov
dec
xor
cmp
pop
repnz
lock
push
and
dec
cmp
lock
in
pushf
dec
jl
lock
pop
ror
inc
xchg
sti
and
lods
adc
inc
icebp
mov
cli
add
sar
lahf
in
outs
xchg
cld
in
cli
sti
outs
inc
stc
lea
mov
sub
pop
and
cld
fs
cmp
push
fcomp
shl
xchg
mov
das
pop
push
outs
inc
sub
sbb
or
adc
cmps
mov
imul
pop
cwde
imul
push
inc
jmp
mov
adc
or
sub
add
cdq
fs
sub
push
pop
jb
lea
fdiv
mov
int3
push
and
ret
es
hlt
hlt
pop
lock
pop
and
imul
aam
in
fcomp
jae
mov
sbb
or
push
mov
outs
das
jp
pop
push
in
ins
or
int
lea
aas
fdiv
mov
lahf
sub
enter
out
inc
fsubr
mov
ret
mov
inc
call
sbb
loopne
ins
pop
xor
ror
cmp
into
fs
adc
dec
into
cli
jne
add
xor
mov
retf
mov
xchg
mov
mov
jg
adc
shr
xor
push
mov
add
add
nop
ins
jne
nop
push
sti
rol
add
inc
call
lea
cmp
out
inc
add
std
cmps
inc
std
movzx
xor
ror
je
shr
and
dec
and
dec
mov
test
push
imul
ins
dec
add
rol
shl
sub
cmp
jl
cli
xor
push
or
ins
mov
xchg
dec
in
jle
push
bswap
pop
shr
pop
mov
cmp
ja
outs
iret
stos
fcmovu
sub
add
pop
pop
jno
mov
fcomp
xchg
imul
pop
push
xor
sub
pushf
in
sub
add
sub
imul
and
ins
lahf
sbb
xchg
jle
sbb
fs
js
sub
pusha
or
and
jne
xor
div
jmp
pop
cmp
mov
mov
jg
inc
daa
fsub
fcomip
pushf
mov
inc
push
jb
hlt
mov
lock
in
pop
cmp
icebp
xchg
jmp
not
xchg
sbb
js
mov
es
in
or
add
and
cmp
jl
(bad)
jo
push
dec
ret
inc
test
jo
jmp
ins
pop
retf
ins
hlt
aam
es
repz
add
cmp
sbb
call
inc
add
inc
add
ret
lods
clc
call
sar
inc
sti
push
mov
pop
add
jne
mov
pop
bound
add
lea
shl
push
jmp
and
push
and
mov
retf
(bad)
mov
push
fiadd
jo
fist
or
dec
push
nop
sub
add
push
pop
cdq
mov
es
out
wrmsr
push
fwait
and
scas
mov
mov
inc
sbb
push
cmp
les
cmp
push
pop
or
fwait
pop
shl
jmp
mov
mov
out
(bad)
stc
int3
mov
jle
mov
cwde
or
sub
mov
cmp
arpl
sbb
push
pop
push
fcomp
xor
es
mov
retf
popf
inc
xchg
les
shr
adc
mov
mov
mov
dec
inc
pop
mov
or
daa
mov
xor
push
scas
in
jge
push
addr16
jb
rcl
mov
addr16
mov
mov
enter
(bad)
je
mov
inc
or
cmp
sub
jnp
aam
jb
add
mov
mov
cmp
sub
ret
cdq
int3
lods
ror
push
(bad)
sub
rcl
aas
mov
xchg
jmp
shl
push
popf
sub
push
or
fwait
inc
sbb
push
or
xchg
push
mov
pop
sub
mov
pop
jge
dec
add
mov
xchg
xor
or
call
inc
push
inc
stos
mov
sbb
mov
sub
ja
push
shr
xor
loope
add
sbb
xchg
into
sbb
in
adc
or
cwde
gs
inc
and
inc
cmp
(bad)
and
dec
mov
push
or
ja
inc
pusha
add
int
mov
adc
and
fimul
aaa
mov
stc
sub
pop
imul
or
xchg
mov
fistp
cmp
or
shl
push
add
nop
pop
push
mov
xchg
add
out
mov
daa
cmp
ret
mov
sbb
jmp
xchg
lods
add
mov
or
out
mov
mov
adc
cmp
mov
std
shr
sbb
and
aas
pusha
sahf
int
mov
or
jne
sub
mov
jl
cmp
sub
sahf
in
sbb
imul
and
rol
stc
mov
icebp
fwait
addr16
push
xor
xchg
jmp
xchg
jmp
mov
and
and
in
pop
dec
out
inc
ss
fcomp
in
stos
pop
or
jmp
fwait
and
inc
xor
jmp
sbb
push
dec
(bad)
xor
sbb
or
gs
icebp
gs
or
cld
pop
mov
jnp
adc
pusha
xor
sbb
cs
lock
xor
and
hlt
nop
and
push
xlat
pop
add
aam
lods
(bad)
in
jmp
mov
bound
aaa
sub
push
clc
sysret
add
sahf
or
adc
inc
xor
add
popf
in
icebp
sub
movs
rcl
add
and
or
fucompp
call
inc
sbb
sub
cmps
jle
xchg
jp
cmp
sar
jbe
jnp
inc
mov
rcr
sbb
in
dec
xchg
test
jne
pop
cs
mov
mov
cli
add
or
inc
jnp
mov
inc
fild
or
xchg
fs
or
div
in
mov
adc
add
or
into
mov
or
lods
pop
pushf
and
and
sbb
nop
pop
lea
mov
fs
call
iret
movs
mov
(bad)
sub
jb
push
xor
push
xor
or
xlat
xchg
inc
aaa
or
jo
leave
test
addr16
inc
add
cmp
dec
dec
jp
pop
and
adc
push
(bad)
sub
icebp
or
sbb
mov
jo
mov
nop
jg
dec
cmp
push
xchg
jmp
mov
(bad)
cmp
pop
enter
movs
add
stos
out
pop
push
lds
adc
or
(bad)
mov
adc
(bad)
retf
adc
leave
inc
cld
test
xor
and
adc
or
or
and
es
or
mov
xor
sub
adc
push
test
frstor
push
(bad)
dec
add
xchg
dec
int3
hlt
and
jne
push
ins
imul
mov
nop
cmp
xchg
loop
pop
rcr
aam
(bad)
cmc
push
mov
push
icebp
sbb
push
cmp
jne
or
or
loope
cmc
xor
or
add
mov
mov
sti
push
mov
pop
add
add
jno
pop
cs
ret
(bad)
stos
bswap
movzx
mov
js
push
mov
or
pop
sbb
fwait
out
sbb
sbb
cwde
imul
ins
ret
inc
mov
mov
add
add
mov
push
xor
pop
inc
jmp
pop
add
dec
sahf
xchg
sbb
mov
loopne
in
aas
sbb
and
out
retf
sub
clc
and
add
sbb
pushf
dec
pop
int
dec
mov
push
jecxz
ret
lea
jno
mov
inc
popf
or
loopne
(bad)
neg
adc
add
push
push
sub
neg
xchg
or
pop
xor
dec
inc
lods
adc
psubq
mov
cs
dec
dec
sbb
jnp
jo
xlat
mov
mov
push
js
push
mov
pop
lock
push
gs
sub
test
mov
adc
xchg
or
(bad)
hlt
xchg
push
ins
inc
bound
in
lea
mov
xchg
xchg
aam
ret
addr16
(bad)
hlt
sub
cmp
and
add
popa
mov
or
test
fucomp
adc
shr
pop
mov
or
sbb
inc
(bad)
pop
jle
xor
mov
add
out
pop
add
outs
fidiv
mov
cmp
push
repnz
inc
or
in
add
or
jnp
mov
adc
adc
dec
or
(bad)
sbb
mov
adc
push
outs
sbb
inc
jl
or
push
ror
sub
sub
push
int3
loope
pop
retf
add
add
inc
add
xchg
ja
inc
mov
mov
cdq
retf
xchg
(bad)
pop
adc
and
sbb
push
push
cmp
dec
(bad)
lods
mov
and
inc
jmp
sbb
push
mov
inc
push
rol
xchg
ja
(bad)
sbb
push
sbb
ss
adc
xchg
mov
add
dec
inc
mov
add
adc
scas
mov
mov
int3
mov
cmp
scas
stos
mov
cmp
push
push
shl
ret
xchg
hlt
jge
rep
cmps
inc
sbb
jp
push
cmps
(bad)
aad
cmp
fwait
adc
daa
cld
les
rcr
sbb
add
inc
sbb
sbb
add
pop
nop
xchg
neg
ss
add
pop
movs
jnp
(bad)
outs
or
mov
daa
setns
sbb
push
sub
imul
(bad)
push
cmovno
in
or
int
pop
repnz
mov
inc
add
out
test
sbb
(bad)
mov
xor
adc
mov
retf
inc
fidivr
and
hlt
mov
and
hlt
cmp
jmp
cmp
je
(bad)
in
mov
sbb
(bad)
push
into
xchg
hlt
(bad)
cmp
jp
cmp
popa
pop
mov
jb
and
arpl
cmp
mov
inc
(bad)
mov
mov
add
packsswb
push
xchg
jo
push
mov
mov
test
push
xchg
xchg
bound
cmp
xchg
inc
add
push
mov
sbb
lods
jmp
mov
pop
or
add
add
je
cdq
fsubr
cmp
gs
inc
movs
and
inc
add
mov
(bad)
push
es
loopne
movzx
dec
adc
es
xor
movs
mov
mov
add
inc
add
add
cmps
mov
add
and
iret
pop
inc
mov
nop
sbb
and
fadd
cmp
mov
fild
rol
or
lahf
out
or
dec
dec
dec
mov
in
aad
movs
daa
mov
mov
inc
mov
es
cmps
jp
data16
sbb
ss
imul
push
dec
inc
xchg
ret
mov
shr
and
add
jb
sub
or
inc
pop
pop
popa
add
adc
push
in
xchg
push
adc
jmp
aaa
pusha
or
cmp
ja
push
xchg
das
sbb
push
inc
or
push
sbb
add
add
push
push
pop
outs
push
pop
ss
xchg
inc
rol
push
sub
rcl
push
or
xchg
dec
push
push
xor
mov
xor
or
add
mov
xor
loopne
call
push
jne
or
adc
cmp
lahf
xlat
aaa
push
jecxz
mov
pop
dec
jb
outs
scas
nop
aas
or
mov
outs
jo
push
dec
push
call
or
mov
mov
add
or
mov
popa
add
js
jecxz
sbb
sub
inc
sbb
mov
nop
sbb
push
mov
adc
imul
sbb
and
neg
call
mov
push
adc
or
call
jo
add
and
adc
jnp
sbb
pop
jg
or
in
daa
sbb
push
dec
add
in
sbb
or
loopne
data16
cmp
pop
call
adc
or
outs
lahf
mov
and
lahf
dec
sbb
pop
mov
push
xchg
cli
add
shr
mov
cmp
inc
inc
push
jb
inc
shr
mov
aam
xchg
push
sahf
xor
in
rol
fwait
nop
cs
lods
push
inc
and
or
rol
jge
or
pop
or
pusha
mov
(bad)
push
shl
dec
dec
jmp
push
jmp
in
sbb
test
loopne
call
sbb
jmp
xor
dec
inc
adc
sub
jge
addr16
inc
inc
jl
adc
sbb
xor
lods
sub
mov
retf
cs
fwait
lods
xchg
mov
jl
xlat
fldenv
add
mov
xchg
clc
aad
push
movs
lea
xchg
xchg
jmp
out
push
enter
scas
(bad)
imul
sbb
inc
sub
push
addr16
xor
lods
cld
cmc
push
sbb
frndint
and
jle
test
daa
(bad)
and
add
fwait
lods
adc
js
inc
jae
jno
xor
jne
pop
pop
and
adc
imul
dec
test
leave
fcmovb
xchg
add
cmp
dec
sahf
ret
and
mov
hlt
test
dec
xchg
sub
(bad)
hlt
js
loop
inc
inc
rcl
cwde
cmp
popa
mov
pop
and
xor
inc
enter
push
adc
sbb
inc
add
inc
inc
jo
les
mov
push
fiadd
add
outs
adc
push
outs
mov
outs
push
daa
ficom
pop
(bad)
fisttp
pop
xchg
push
push
dec
sbb
and
mov
add
in
or
and
mov
lock
and
mov
pop
xor
mov
dec
and
add
adc
sub
xchg
adc
jp
mov
sub
or
jmp
sub
push
retf
iret
push
in
in
(bad)
mov
add
mov
and
test
pop
inc
loopne
push
jae
push
pop
push
mov
sbb
nop
aaa
(bad)
fsub
les
sub
xchg
inc
lods
leave
push
add
xor
inc
ds
xchg
add
test
arpl
sbb
jne
or
cmp
push
adc
mov
adc
ret
mov
jmp
sub
sbb
jecxz
cmps
add
jecxz
cmp
adc
arpl
fsub
xor
xchg
mov
outs
nop
lds
vmovsd
xor
xchg
mov
std
pusha
sub
xchg
and
dec
xchg
mov
aas
ret
dec
retf
jb
scas
inc
or
mov
ror
mov
push
inc
cmps
add
test
enter
xchg
mov
pop
push
inc
add
sbb
xchg
pop
call
in
cmp
sub
add
add
mov
(bad)
sub
sbb
ss
or
into
add
sub
or
add
movs
movs
xchg
add
sbb
xchg
sub
add
lods
pop
push
push
test
add
cmp
fadd
mov
xchg
or
mov
pop
js
dec
inc
mov
popf
add
xchg
repnz
daa
mov
xchg
sub
es
pop
sar
dec
adc
paddsb
(bad)
inc
enter
and
dec
imul
push
call
or
inc
sub
shl
ret
sub
nop
(bad)
dec
inc
adc
in
sub
jge
inc
push
jno
rol
adc
and
test
mov
inc
pusha
rcr
or
lock
and
and
jg
push
iret
and
clc
inc
push
inc
cmp
loopne
sub
push
or
clc
sti
add
add
mov
nop
stos
fadd
cmp
movs
sbb
xor
pop
and
cvtps2pd
and
mov
jl
mov
ret
add
lock
sub
jecxz
or
jo
sbb
mov
dec
lods
ret
aaa
add
inc
rcr
and
push
mov
mov
push
xchg
or
add
add
dec
sub
dec
cmp
jg
sub
fisttp
cmp
test
leave
push
add
xchg
stos
cmp
pop
pop
xchg
cmovae
pop
xor
ins
mov
xchg
sbb
xchg
adc
(bad)
stc
dec
jle
sbb
xor
jae
adc
scas
cmp
retf
inc
lds
movs
iret
pop
sar
aam
or
or
xor
jp
(bad)
nop
popa
xchg
retf
dec
sbb
ja
pop
add
outs
not
jl
mov
xchg
pop
bound
pop
cmp
aam
xor
add
lods
or
pop
test
(bad)
stos
mov
fs
mov
movs
push
jl
iret
cwde
retf
push
jecxz
test
es
mov
adc
cld
fwait
add
jmp
push
in
sub
aad
push
pop
std
dec
inc
gs
jmp
pop
neg
movs
daa
push
into
in
cmp
push
cmp
mov
inc
or
in
imul
aam
mov
xor
outs
or
(bad)
nop
inc
xor
xor
in
sbb
shr
xor
mov
dec
int
lock
xor
mul
mov
mov
fs
dec
sbb
sub
add
scas
shl
mov
dec
pushf
mov
hlt
add
jne
out
or
loopne
cmp
xchg
mov
inc
push
fidivr
add
hlt
loope
dec
(bad)
cmp
pop
movs
inc
adc
xchg
push
call
inc
lea
mov
in
push
loopne
mov
push
add
add
scas
imul
sub
imul
sub
imul
inc
sbb
ja
inc
test
inc
daa
mov
fcomp
add
pop
jne
ins
xor
jo
jle
lea
imul
add
sbb
xor
or
inc
(bad)
jbe
mov
cmps
movs
add
fbstp
push
(bad)
or
push
mov
or
dec
add
add
mov
sub
mov
mov
outs
xchg
xor
in
pop
sub
adc
lahf
lahf
xchg
and
jmp
and
or
cmp
cmova
and
jo
ret
cmp
inc
in
rcl
jl
ss
xchg
test
cmp
shr
add
jecxz
or
mov
inc
mov
mov
mul
mov
mov
xchg
adc
mov
cmp
pop
shl
pusha
cdq
add
inc
inc
xor
addr16
pop
add
add
or
or
add
bound
jb
stos
pop
or
test
or
xchg
mov
sbb
pop
inc
adc
push
inc
inc
inc
jbe
sub
fnstsw
fdiv
jne
pop
push
xor
cmp
call
outs
sub
pop
sbb
adc
cmp
or
and
imul
shl
fld
inc
sub
sub
mov
sub
mov
sub
out
repnz
sub
push
fwait
in
ret
retf
and
ins
cmp
pusha
das
add
or
push
dec
pop
sahf
mov
lods
je
cmp
sub
mov
ins
dec
push
cmp
aas
pusha
or
(bad)
repnz
dec
mov
adc
xchg
add
push
(bad)
jbe
inc
mov
jo
push
push
rol
add
xor
test
push
call
cmp
push
xor
and
sub
adc
and
dec
sbb
push
push
mov
pmaxsw
add
mov
jae
dec
jnp
sub
jb
push
inc
retf
js
popa
lahf
dec
dec
dec
mov
xchg
add
and
sbb
mov
dec
lahf
jb
mov
or
das
pusha
dec
mov
xor
mov
in
jns
xchg
mov
adc
add
das
ret
add
xor
jb
jmp
addr16
inc
rcr
push
dec
mov
adc
add
and
(bad)
in
popa
sbb
dec
add
jbe
fnstcw
ins
mov
sub
sub
mov
mov
dec
cmp
xor
or
(bad)
mov
scas
fs
mov
push
not
sub
and
inc
sbb
fwait
xchg
lods
lods
sub
(bad)
jno
movs
pusha
adc
cld
rcl
pop
or
add
sbb
pusha
adc
pop
(bad)
push
sbb
jl
push
mov
mov
jmp
sub
push
ja
fimul
adc
pusha
or
inc
push
inc
sbb
test
or
jno
sub
addr16
sub
jbe
jg
lea
sbb
jmp
sub
inc
push
out
sbb
mov
jecxz
jl
push
xchg
inc
or
pop
push
sub
dec
scas
pop
shr
dec
xor
rol
in
ja
ja
adc
je
cmp
xchg
dec
jl
scas
xor
or
sub
popa
cmp
sub
add
jb
xor
xor
push
enter
push
add
push
std
sub
(bad)
jmp
aaa
or
mov
sbb
and
or
sub
popa
loopne
mov
cmp
sub
test
sub
dec
enter
sub
leave
adc
lods
sbb
inc
in
nop
pusha
push
test
adc
push
js
(bad)
fisttp
(bad)
lds
push
sub
sbb
mov
or
jle
add
js
inc
fimul
mov
and
xor
dec
ja
xor
xlat
pushf
ja
iret
idiv
add
jmp
mov
adc
repnz
push
leave
xor
ret
adc
jbe
gs
push
mov
loop
outs
das
ss
cmps
adc
pop
pop
sub
and
sbb
pop
mov
idiv
jb
ss
es
xor
es
nop
ss
add
xor
dec
add
sbb
iret
adc
push
repz
or
pop
cmps
inc
and
mov
je
mov
mov
les
xchg
cmp
pop
xor
dec
jne
cmps
jbe
imul
daa
sbb
ror
pop
retf
adc
dec
cmp
pop
jmp
in
fst
xchg
xor
add
jl
(bad)
out
add
stos
push
ds
jb
cmp
jno
adc
pop
loop
std
push
pop
mov
mov
sahf
(bad)
scas
inc
xor
and
outs
test
push
sti
and
xchg
jmp
pop
stos
or
or
jmp
sbb
pop
(bad)
popa
aaa
gs
dec
inc
sbb
popa
sbb
pop
sbb
cmp
xor
jmp
imul
and
add
mov
repnz
jne
shr
ins
dec
push
push
sbb
add
push
adc
sub
add
xor
aam
test
push
mov
sub
bound
les
scas
cmps
cmp
push
and
shl
push
push
shl
sbb
mov
add
adc
stc
xlat
sahf
push
ins
mov
adc
daa
jecxz
sbb
mov
push
pusha
adc
fcmovbe
pop
push
inc
and
es
adc
mov
dec
and
int3
adc
adc
mov
and
dec
jmp
push
pop
fiadd
adc
dec
or
inc
sub
jle
paddusb
xchg
and
sub
sub
test
jge
je
cmp
cmp
cwde
je
xchg
xor
loopne
jecxz
push
xor
ror
xchg
push
jns
mov
rcl
mov
loope
scas
movs
add
or
add
push
or
jg
add
adc
xor
pop
pusha
add
adc
pop
sahf
sub
jl
test
lock
call
js
jecxz
adc
jb
(bad)
cmp
out
and
add
enter
out
outs
pusha
ret
add
adc
ins
scas
pop
fdivr
adc
jl
sbb
mov
add
cmp
xchg
aam
sub
loopne
ins
pop
aas
cmp
or
sbb
stos
ror
mov
pusha
and
imul
or
add
shr
cld
je
fidiv
addr16
sbb
retf
pop
inc
cmp
sbb
sbb
stos
or
xor
cmp
icebp
and
push
loopne
and
xor
or
xor
nop
(bad)
daa
es
lds
shr
call
dec
and
rol
add
or
sbb
add
loopne
add
clc
jbe
jmp
or
xlat
mov
cdq
ds
stos
push
test
push
mov
add
adc
add
add
rol
outs
scas
test
add
dec
(bad)
pop
or
(bad)
and
inc
add
shl
(bad)
adc
add
and
cmp
in
sbb
push
aaa
mov
mov
mov
sar
and
fdiv
push
rcl
xor
push
mov
mov
jmp
imul
sub
sub
add
(bad)
mov
add
int3
not
dec
sub
dec
ds
jmp
dec
and
and
(bad)
or
or
call
sub
xor
adc
mov
nop
fcomi
jns
push
add
pop
pop
rcr
cs
iret
add
push
fmul
in
and
stc
or
inc
scas
pop
adc
cmp
adc
lock
aad
sub
pop
sbb
xor
shl
add
xor
lds
sbb
mov
es
xchg
aam
fiadd
sbb
rcl
mov
enter
cmp
and
xchg
jmp
aad
out
add
inc
pop
sbb
sahf
xchg
adc
push
outs
mov
ror
push
add
adc
fiadd
xor
xchg
xor
test
jg
ins
push
cmps
mov
fiadd
pushf
jmp
in
aam
lds
icebp
rcl
movs
inc
pop
ficom
addr16
nop
movs
and
and
fadd
sub
sar
cmps
pop
jecxz
inc
adc
push
lods
adc
shl
nop
fimul
lods
inc
pop
inc
cld
inc
pop
and
stc
pop
jo
jl
mov
inc
test
in
push
(bad)
out
adc
push
pop
test
out
cmp
push
sub
pop
jo
mov
movs
popf
outs
addr16
jnp
xchg
inc
retf
(bad)
ret
jae
jbe
or
fidivr
mov
or
inc
popa
dec
aam
rcl
das
ret
icebp
cmp
and
and
sbb
add
mov
mov
pop
enter
mov
jecxz
jmp
or
jnp
add
pop
add
lock
outs
or
xor
(bad)
(bad)
mov
push
sub
pop
or
fucompp
and
es
fisttp
sbb
add
fistp
pop
add
push
lea
mov
mov
jecxz
gs
mov
mov
arpl
push
sbb
clc
push
or
mov
dec
or
push
dec
add
push
add
inc
loop
and
mov
dec
push
cmc
out
cmp
(bad)
mov
add
inc
nop
push
jns
cmp
fs
mov
push
dec
xchg
ror
bound
out
lock
dec
or
and
movs
in
test
xor
xor
dec
adc
and
xchg
adc
loopne
je
adc
shl
clc
fs
pop
inc
je
xchg
sbb
jno
int3
std
cmp
or
mov
and
fcom
int3
inc
pop
inc
push
xchg
add
and
std
add
inc
adc
dec
inc
push
bound
mov
call
jne
add
nop
cmc
rcr
inc
sub
pop
mov
fmulp
mov
sbb
call
(bad)
pop
pushf
add
std
rcl
popf
scas
and
outs
or
fdiv
adc
ror
bound
cs
fld
shr
adc
cmp
fmul
outs
xor
cmp
lock
sub
js
mov
pop
add
ret
sar
inc
int
mov
add
and
aas
cmc
test
dec
sub
push
add
add
ss
pusha
aam
and
jg
sbb
jmp
scas
add
dec
mov
sahf
popa
sbb
and
fwait
inc
(bad)
sub
jo
movs
sahf
dec
inc
sbb
sbb
push
and
mov
shl
movs
cmp
xchg
cdq
sub
and
outs
sti
sbb
mov
add
sub
ret
and
fs
push
push
mov
xor
cmp
inc
pop
add
adc
pop
or
push
mov
outs
into
mov
(bad)
in
rcl
sub
adc
inc
adc
xor
pop
movs
(bad)
enter
adc
nop
dec
aaa
sbb
push
mov
mov
push
pop
add
sbb
(bad)
jo
in
dec
in
ret
addr16
add
push
xchg
ss
pop
ins
sbb
jae
or
push
(bad)
loopne
rcl
clc
push
add
ret
sub
mov
cld
(bad)
or
sub
das
pop
dec
data16
add
sub
mov
push
pop
cmps
(bad)
xchg
js
(bad)
rcl
adc
pop
retf
dec
ror
ins
or
cwde
xchg
sahf
std
xor
outs
pop
jl
mov
add
mov
inc
inc
adc
xchg
push
push
jge
ss
into
xchg
inc
sub
in
push
shl
or
xor
idiv
add
sar
arpl
dec
fld
je
xchg
lock
lds
mov
pop
repnz
add
ins
mov
xchg
scas
outs
(bad)
lods
in
pop
adc
cli
lahf
add
add
arpl
push
dec
add
or
xor
dec
xchg
sub
in
and
sub
sub
je
or
lea
xchg
push
mov
sbb
test
cmp
sbb
cmp
xor
sub
xchg
jbe
nop
mov
push
js
jne
push
nop
push
(bad)
cmps
pop
xchg
outs
fwait
jecxz
inc
jne
sbb
jmp
cmp
or
adc
cs
inc
fild
in
xchg
cmp
adc
cld
or
fs
add
movs
dec
lock
fwait
mov
scas
nop
and
xchg
add
pushf
out
dec
cmp
mov
jge
ret
mov
or
dec
dec
pop
or
dec
add
and
stc
test
and
sbb
cld
and
bound
xchg
pop
(bad)
aaa
mov
dec
mov
inc
int
xor
imul
enter
xor
or
in
loop
jno
xchg
or
int
add
cmp
lods
adc
(bad)
adc
fstp
sub
inc
loop
div
dec
push
in
mov
mov
mov
lahf
cdq
mov
out
dec
inc
push
and
add
mov
dec
add
jmp
out
cwde
adc
add
add
xor
cmc
cmp
sbb
sar
mov
das
nop
xor
inc
sbb
adc
mov
jmp
dec
adc
push
or
lea
add
stos
pop
les
adc
ret
clc
sti
fistp
mov
mov
xor
inc
mov
imul
mov
push
not
pushf
rcr
es
mov
or
jle
sbb
dec
in
or
cmp
add
inc
mov
add
test
fwait
nop
add
ins
imul
inc
add
shl
adc
jg
ss
add
mov
add
andnps
into
test
fcmovnb
jb
push
push
jnp
je
push
int3
push
test
clc
mov
std
test
dec
enter
ror
xchg
shl
ret
imul
enter
add
sub
xor
lods
cld
mov
data16
push
sub
je
dec
sub
and
add
clc
call
sbb
imul
jg
shr
and
pop
jns
adc
mov
test
add
xor
inc
mov
gs
sub
push
xchg
mov
test
mov
and
and
popa
add
test
adc
or
jl
mov
and
std
cld
(bad)
icebp
ja
jb
fisubr
fldenv
lea
bnd
inc
cmp
or
shl
popa
div
sbb
mov
pop
add
sub
shl
jno
dec
lds
outs
adc
mov
jg
push
add
bound
add
add
add
jno
mov
popa
push
push
jns
add
inc
rol
push
aaa
sbb
xor
mov
cwde
xor
inc
fwait
in
adc
(bad)
push
repz
jecxz
push
pop
xor
add
pop
jo
sbb
jecxz
sar
mov
mov
icebp
test
add
jmp
inc
iret
xor
xor
jge
inc
and
push
sbb
ja
fild
ja
lea
mov
mov
in
aam
push
push
xor
sahf
fstp
xchg
pop
pop
cmp
ret
ins
pop
pusha
outs
add
mov
das
mov
add
or
push
mov
jge
pop
mov
cmps
or
jp
cmp
nop
mov
daa
aaa
cmc
inc
cdq
mov
mov
mov
scas
xor
inc
mov
inc
xor
std
rcl
sub
push
in
jae
xor
icebp
pop
add
pop
mov
neg
dec
fsub
jo
xor
call
ja
push
mov
aam
and
inc
es
add
fdivr
aam
mov
adc
aam
(bad)
nop
(bad)
and
or
es
cmp
in
mov
or
enter
arpl
pop
lods
add
jne
rcr
icebp
test
add
mov
pop
dec
pop
xor
adc
fidiv
test
ins
and
fadd
sbb
mov
je
jge
sub
sbb
shl
add
cmp
inc
pop
mov
int
or
dec
inc
pop
xchg
mov
test
repnz
mov
sbb
jnp
out
pop
(bad)
or
mov
dec
(bad)
leave
cmp
icebp
inc
and
out
push
pop
mov
jl
jg
add
or
push
scas
pop
stc
sub
sbb
add
add
inc
adc
and
scas
into
push
ja
in
loop
aaa
and
(bad)
aaa
push
adc
outs
cmps
mov
adc
and
mov
lea
and
sbb
lds
ins
jnp
sbb
sub
xor
popf
ins
pop
adc
and
loope
add
push
xchg
pop
ja
popf
or
(bad)
jo
ins
nop
movs
jo
sub
es
arpl
movs
pop
add
inc
xchg
cmps
mov
xor
clc
or
xchg
add
(bad)
jbe
mov
ret
cmp
jmp
cmp
add
add
add
pop
fisttp
test
dec
inc
adc
lods
xor
dec
repz
and
add
add
adc
jne
xchg
cmps
add
add
rol
stc
clc
hlt
push
push
fisttp
out
fcomp
or
mov
pop
pushf
fstp
mov
add
imul
pop
pop
add
pushf
out
daa
ds
push
or
dec
mov
je
or
adc
aaa
mov
jmp
imul
or
xor
mov
jnp
jmp
mov
inc
xchg
rcl
pop
ja
push
or
mov
cmc
(bad)
arpl
int
pop
push
mov
fsubrp
inc
and
mov
or
cdq
xchg
push
dec
fwait
add
push
inc
add
adc
cli
sub
ins
repnz
push
jmp
sar
ret
push
push
pop
clc
es
fstp
xor
and
add
pop
cdq
pop
int
pop
sbb
iret
adc
inc
shr
push
and
and
repz
ret
arpl
in
adc
mov
and
nop
mov
adc
inc
and
and
rcl
xor
sbb
pop
sahf
imul
das
sub
add
sub
sar
xchg
cli
mov
pop
popf
adc
in
mov
das
and
clc
and
in
dec
shl
lahf
shr
int
and
idiv
daa
sbb
adc
lea
test
mov
jb
add
aam
inc
sub
push
movs
test
es
popf
push
or
jnp
mov
and
dec
mov
packssdw
inc
xchg
loop
out
add
cdq
ret
pop
enter
js
xor
lock
inc
mov
push
cmp
push
call
add
xor
xchg
pop
sahf
pop
fiadd
or
sub
sbb
test
sub
add
add
add
mov
fsub
icebp
retf
or
sbb
mov
lock
jmp
lods
or
add
mov
lea
lea
inc
mov
pop
retf
jg
push
mov
lods
cmp
mov
jmp
imul
dec
add
sbb
mov
fdiv
pop
dec
(bad)
pop
or
xlat
imul
repz
mov
ror
push
push
push
ret
loope
cmp
sete
retf
adc
mov
inc
sbb
inc
dec
jne
loopne
fldenv
lahf
mov
imul
or
push
jo
mov
out
aas
xchg
push
mov
int3
add
in
bsf
mov
or
sar
adc
dec
xlat
sub
adc
jp
sub
fadd
shl
adc
loopne
push
test
inc
or
dec
ins
ror
mov
cdq
popa
add
mov
imul
pop
mov
test
in
xchg
or
call
jp
daa
(bad)
adc
or
xor
push
push
adc
mov
dec
test
sahf
(bad)
sbb
pop
pushf
je
jne
add
ins
push
ja
es
sbb
pop
add
mov
clc
movs
cs
sub
es
shr
and
lock
cbw
test
retf
jmp
adc
pop
sbb
sbb
cmp
dec
or
add
sbb
add
bound
sbb
push
push
inc
pusha
or
add
mov
and
or
inc
or
push
pop
push
outs
(bad)
in
mov
add
inc
fistp
mov
or
or
cwde
push
out
jnp
push
push
sbb
cwde
mov
push
jns
retf
adc
sahf
adc
or
inc
out
inc
aaa
push
cmovae
rcr
popf
leave
nop
sbb
shr
ja
mov
das
sub
sub
jno
and
push
aam
cmps
cmc
mov
movs
adc
in
out
fcmovnbe
cmps
push
js
xchg
adc
neg
loop
or
sub
adc
sar
push
jmp
add
loopne
jne
cmp
enter
cmps
pusha
jmp
mov
mov
shl
inc
imul
cmp
mov
mov
out
leave
jg
mov
das
mov
xchg
lds
arpl
inc
mov
shr
out
out
or
aaa
sub
jb
arpl
fadd
sbb
idiv
lock
jmp
jbe
inc
inc
push
fild
adc
xchg
push
or
into
cmp
add
add
loope
fidiv
shl
pop
pop
cmps
add
(bad)
lock
adc
push
cs
ss
add
cmp
aaa
sbb
fbld
pop
sub
sub
hlt
sbb
or
ret
je
push
scas
and
sahf
add
mov
dec
push
or
xlat
mov
enter
jp
mov
or
leave
lea
adc
mov
adc
cwde
shl
cdq
adc
sbb
out
inc
sub
adc
fcomp
loope
outs
pop
imul
pop
retf
ret
pop
cmp
loopne
ror
mov
shr
mov
rcl
dec
fcom
xchg
pop
mov
or
push
push
fs
cld
retf
lock
adc
sub
call
push
lock
enter
push
jnp
push
fmul
xor
loop
xchg
push
enter
mov
aaa
mov
pop
(bad)
dec
adc
add
pusha
jo
pminsw
loop
push
mov
inc
pusha
cmp
add
mov
movs
and
int
gs
inc
jae
addr16
pop
clc
fmul
xor
dec
(bad)
sar
xchg
push
xor
add
and
pusha
adc
aam
add
inc
pop
aam
rcr
cmp
aam
add
adc
(bad)
mov
inc
call
loope
mov
push
pop
fisub
adc
sbb
mov
xor
std
dec
push
cmps
call
adc
mov
mov
aas
lea
inc
mov
or
dec
in
jl
arpl
test
hlt
jae
hlt
jl
ja
cwde
add
dec
out
out
(bad)
gs
push
dec
push
sub
push
sub
inc
push
push
scas
scas
inc
rcl
inc
inc
test
nop
xchg
add
in
jbe
add
adc
push
call
cmp
rol
and
or
loope
cmp
add
retw
dec
mov
sbb
ds
out
sbb
adc
mov
loope
add
imul
sub
dec
test
add
mov
mov
and
jnp
sbb
mov
fisttp
lods
(bad)
mov
retf
ins
jl
cli
cdq
mov
add
test
mov
mov
xchg
popa
pop
not
test
iret
clc
ins
lods
loope
imul
jmp
sbb
test
pop
inc
bound
pop
ins
loope
or
cmps
xchg
mov
sti
xchg
shl
mov
inc
xchg
fwait
js
mov
inc
pop
mov
sbb
mov
pop
add
jg
inc
add
jmp
cmp
ins
pop
sbb
adc
inc
dec
add
ins
and
nop
hlt
fdivr
push
push
ror
(bad)
cmp
or
mov
jle
jmp
ins
call
add
adc
retf
dec
mov
and
lock
xor
(bad)
outs
fiadd
sub
outs
xchg
in
jno
sub
scas
push
or
xor
add
push
mov
dec
iret
dec
add
jne
pop
shl
addr16
xor
hlt
sub
sets
cmp
add
mov
sti
dec
mov
mov
and
jle
sahf
retf
lock
add
in
pop
div
(bad)
iret
ret
mov
clc
jne
(bad)
push
jmp
adc
das
jecxz
loope
adc
and
add
outs
xor
lea
les
dec
mov
lea
call
sbb
pop
adc
cld
movs
mov
mov
cmp
add
push
dec
fldcw
xor
or
shl
push
mov
or
xchg
mov
mov
hlt
aad
popa
test
xchg
jae
xchg
out
ss
lods
push
sbb
mov
jo
test
lock
xor
add
xor
rcr
cwde
scas
(bad)
fsub
fmul
mov
cmp
loope
jne
(bad)
hlt
mov
add
or
rol
leave
dec
fsubr
xchg
ss
nop
std
cmp
fistp
jb
sub
push
mov
neg
ficomp
xor
scas
or
mov
jg
sbb
add
and
add
or
adc
scas
imul
sub
pop
add
cdq
in
mov
mov
sbb
fisubr
mov
rol
in
cmps
dec
dec
rol
add
mov
ds
lock
jmp
adc
xor
mov
push
iret
cmp
ja
and
sub
and
jo
xor
mov
lea
lea
aam
add
addr16
push
jne
jnp
jae
pushf
(bad)
rol
cmp
pop
lds
sbb
(bad)
mov
push
clc
leave
mov
cdq
lea
clc
jle
stos
or
lea
push
add
inc
push
add
inc
mov
jecxz
in
jmp
scas
push
mov
call
add
xlat
je
icebp
(bad)
adc
xor
dec
or
mov
and
push
add
popa
adc
sbb
popa
add
and
xor
mov
add
cmp
out
inc
xor
nop
inc
cmp
adc
hlt
dec
not
or
or
and
out
pusha
adc
jmp
dec
int
bound
push
and
push
adc
xor
xchg
test
je
xor
xchg
js
popf
xlat
xchg
mov
push
xchg
xor
or
push
sub
add
jne
inc
stc
cld
call
jo
ret
cmp
fsub
cld
test
mov
xor
cdq
test
pop
adc
dec
xor
and
mov
cmp
pop
stos
lods
add
inc
dec
fild
push
push
xor
retf
inc
and
loopne
lods
mov
sbb
push
inc
or
push
and
adc
or
pop
mov
inc
push
(bad)
push
jmp
enter
mov
popf
add
lahf
pop
or
fsubrp
(bad)
call
adc
inc
mov
les
stc
imul
ja
jne
fdiv
shl
add
lahf
and
rcl
inc
jns
push
dec
ret
adc
mov
cmp
dec
imul
mov
or
cld
lea
adc
xor
pop
cmp
xchg
xor
pop
and
stos
retf
jp
mov
xchg
xor
daa
fnstenv
and
(bad)
mov
test
lock
and
cmp
rol
mov
xor
sbb
push
push
jmp
cmp
mov
pop
adc
xchg
dec
jmp
xchg
add
push
cmp
in
cmp
mov
push
xor
cwde
mov
call
std
pop
push
fdiv
imul
mov
rol
mov
adc
mov
fadd
cli
sub
test
arpl
adc
data16
add
loope
dec
add
inc
in
scas
dec
adc
idiv
push
movs
mov
imul
or
jnp
setb
pop
shl
ret
inc
adc
call
and
or
xchg
stos
popa
mov
add
pop
xor
dec
cmps
adc
pop
xchg
jne
outs
gs
xchg
shl
popa
push
dec
nop
jl
push
add
inc
je
xchg
call
fiadd
sbb
sub
xchg
sub
movs
enter
not
xchg
lock
mov
fsubr
into
shl
xor
xlat
ret
mov
popf
arpl
and
ss
xor
inc
stos
jecxz
pushf
inc
es
mov
cli
call
(bad)
jmp
(bad)
std
popf
hlt
repnz
sahf
adc
clc
aad
xchg
adc
push
imul
sbb
add
movs
dec
jb
dec
das
retf
aam
ror
adc
mov
sub
push
(bad)
sbb
clc
(bad)
mov
in
jne
pop
ret
sub
or
add
jb
and
or
in
jp
movs
adc
fdiv
in
aas
das
das
loopne
and
repnz
inc
repnz
loopne
pop
and
cmp
pop
mov
stos
sbb
jecxz
jle
int
push
sub
sbb
js
push
outs
pop
dec
mov
jge
push
add
add
xor
je
xchg
dec
adc
adc
aam
lods
mov
xlat
xchg
in
push
(bad)
shl
cmc
or
mov
gs
dec
xor
cmp
jmp
xchg
cld
lock
cs
ret
sete
and
int3
jl
int3
fimul
sub
push
add
pop
movs
rsm
inc
adc
pop
into
ins
aam
push
or
xchg
les
or
cmp
mov
adc
or
inc
adc
adc
inc
pop
jle
ins
in
pop
or
hlt
das
cli
push
movs
lahf
mov
pop
add
in
xchg
pop
int3
mov
xchg
pop
imul
xchg
xchg
xchg
dec
jnp
fwait
out
jl
nop
mov
(bad)
test
xchg
push
lods
xchg
xchg
push
cmp
mov
xchg
mov
xchg
xchg
add
adc
out
and
sub
adc
sub
rcl
nop
pop
or
or
add
push
pop
mov
pusha
add
pop
in
imul
or
pushf
pushf
mov
ins
arpl
lea
test
imul
push
dec
sub
ins
cs
and
fiadd
xchg
add
enter
sbb
outs
leave
sahf
jecxz
pop
dec
sbb
push
and
(bad)
leave
xchg
sbb
cmps
pop
adc
pop
mov
sbb
or
inc
pop
xor
or
inc
push
repz
and
fisubr
cmp
sbb
push
sbb
jno
or
jno
xchg
add
push
xchg
jl
and
hlt
cmps
pop
add
das
call
mov
frstpm(287
dec
bnd
test
loop
add
jno
cdq
pop
add
ins
adc
dec
adc
fnstenv
mov
fucomi
cmp
and
sub
cmp
push
xor
add
pop
push
push
pop
or
sbb
push
fild
sub
push
(bad)
xchg
or
pop
add
lods
sbb
pop
loopne
jg
(bad)
test
or
mov
jo
mov
or
mov
mov
pop
movs
push
push
jne
mov
mov
or
pop
mov
mov
mov
rol
mov
test
sbb
adc
int
fild
and
sub
lods
add
push
rcr
jmp
mov
loop
ror
sbb
cmps
xchg
ins
test
or
stos
pop
push
xchg
sbb
push
and
mov
xor
call
lea
and
fsubr
mov
loope
cmp
mov
push
inc
push
xchg
mov
ins
add
inc
jp
or
outs
je
lea
pop
push
ja
and
rcl
test
adc
loopne
or
aam
in
ins
and
stc
cmp
jb
enter
pop
jb
in
enter
bnd
pop
nop
sub
mov
ds
add
or
pop
es
mov
xchg
cmp
int
or
out
cs
cwde
lods
xchg
cld
nop
retf
and
push
xchg
out
cmp
fstp
mov
cmp
adc
ins
(bad)
mov
pop
mov
adc
push
jns
xchg
xor
mov
nop
dec
mov
sbb
cdq
push
repz
pop
loopne
fmul
inc
jb
pop
nop
push
adc
dec
enter
lods
inc
inc
push
cld
cmc
jl
ja
and
mov
lock
sar
and
idiv
ins
enter
mov
or
jns
cmps
dec
mov
lods
push
int3
or
sbb
add
shl
mov
mov
mov
pop
pop
cmps
cmps
add
push
(bad)
in
cmp
sbb
push
xor
(bad)
imul
adc
les
pop
add
and
daa
(bad)
aaa
xor
mov
mov
and
sbb
dec
pop
iret
shl
test
add
add
xor
xor
nop
or
mov
rcl
mov
lods
pusha
xor
into
(bad)
jp
inc
xor
pop
aaa
or
sbb
or
or
pop
push
repnz
loopne
and
sbb
mov
push
xchg
sbb
jp
pop
push
mov
push
movs
mov
test
adc
pop
ret
push
push
fmul
ret
and
inc
or
push
and
cdq
xor
mov
pop
adc
pop
out
xor
mov
sbb
add
jmp
mov
into
int3
in
jg
dec
xchg
cmc
xchg
lock
xchg
(bad)
fsubr
adc
sub
add
adc
inc
cmp
add
pop
and
mov
mov
pop
dec
lods
adc
ins
pusha
jb
mov
xlat
or
rcl
js
cmps
pop
xor
aaa
and
mov
test
aam
xchg
inc
dec
ss
cmps
dec
mov
mov
add
xchg
js
and
out
or
ror
fs
pop
push
lea
in
pop
ins
lea
inc
(bad)
rol
pop
daa
mov
(bad)
mov
dec
pop
adc
jle
inc
clc
test
inc
jge
sbb
mov
fst
sahf
add
sbb
outs
jmp
imul
mov
adc
pop
dec
jmp
cmps
mov
out
pop
pop
mov
icebp
dec
xchg
mov
sub
cmp
imul
xchg
add
or
in
inc
in
test
test
pusha
inc
das
dec
add
fcom
adc
fisttp
push
leave
rol
xor
cmp
je
loope
xchg
pop
jns
das
cmp
sub
and
ret
inc
mov
mov
or
cs
lea
inc
and
pop
sub
xchg
and
inc
and
int
xchg
push
leave
sub
dec
xchg
in
xchg
sbb
and
movs
loopne
ja
jmp
(bad)
rol
add
xchg
(bad)
movs
inc
adc
sbb
mov
loopne
mov
sub
or
mov
rcr
sbb
js
sar
mov
jae
pop
or
and
mov
fiadd
add
add
sub
jae
outs
loopne
xor
sbb
and
outs
add
cmp
mov
test
push
push
test
cs
test
mov
scas
xor
and
repz
pop
in
mov
and
pushf
or
clc
mov
and
add
loop
add
push
mov
jo
je
xchg
push
ret
test
movs
hlt
add
inc
sbb
sub
add
jno
or
xchg
xchg
cmc
shr
(bad)
lds
pop
and
xchg
test
xchg
loopne
push
xor
push
js
mov
aad
leave
jmp
call
adc
pop
jne
lock
add
mov
dec
jno
std
mov
xor
push
fsubr
paddsb
push
cmp
dec
fidivr
cmp
popa
push
nop
sbb
in
mov
push
aam
or
sbb
inc
ret
sbb
xor
sbb
jne
push
push
add
push
mov
ret
lods
xchg
test
cmp
mov
xchg
fld
xchg
je
mov
jo
dec
dec
push
sahf
ret
and
dec
and
cwde
xchg
sub
pop
sbb
sti
stos
imul
arpl
dec
ror
loop
sar
xchg
cmp
in
xlat
inc
pop
leave
and
mov
outs
ror
adc
rcl
and
iret
sahf
xor
jecxz
and
jmp
loop
repnz
test
inc
dec
sub
inc
jmp
push
mov
add
sbb
cwde
inc
sar
mov
retf
pop
mov
dec
and
or
dec
and
push
cdq
adc
or
adc
sbb
mov
sub
iret
push
and
adc
rol
push
fmul
push
movs
dec
cwde
fwait
sub
jne
add
dec
add
mov
or
pop
stos
out
cmp
sti
ds
ror
lock
clc
adc
mov
stos
outs
or
in
call
and
fwait
movs
movs
ret
ret
sbb
(bad)
retf
mov
lods
cld
push
in
out
dec
pop
mov
mov
lahf
movs
in
test
fwait
sub
sub
or
sub
push
adc
push
(bad)
cmp
lea
cmp
adc
rcr
fwait
ds
scas
xchg
rol
jl
loopne
add
xchg
clc
(bad)
hlt
movs
pop
mov
inc
lea
retf
push
add
and
mov
loope
add
inc
add
adc
xchg
dec
xor
call
or
or
push
shr
or
in
push
add
hlt
aaa
popa
xchg
mov
repnz
icebp
cmp
sbb
push
sbb
pop
inc
or
mov
push
das
dec
push
pop
inc
sbb
mov
or
iret
mov
nop
addr16
dec
xchg
pop
inc
ret
test
ins
in
add
and
iret
or
xchg
ja
mov
pop
mov
sbb
sar
(bad)
dec
call
jmp
inc
out
add
and
jge
mov
stc
push
sub
dec
or
(bad)
fisttp
cmps
imul
test
mov
mov
lock
enter
lock
imul
and
jno
push
lock
jne
sbb
inc
xlat
stos
shr
sahf
scas
call
test
inc
and
jmpw
sar
test
push
outs
mov
xor
cmp
cmp
pop
lock
push
dec
daa
hlt
adc
mov
hlt
and
mov
mov
xor
nop
or
inc
adc
aam
pop
push
inc
cmp
data16
xchg
es
xor
push
or
push
mov
xor
loopne
jmp
jne
push
sub
and
je
sub
xor
jle
in
mov
xchg
(bad)
sbb
add
inc
inc
push
mov
xor
cmp
clc
pop
mov
inc
test
out
or
fdivr
pop
push
clc
adc
mov
outs
push
lods
shr
and
nop
neg
xor
pop
mov
fs
and
adc
or
imul
mov
shl
icebp
mov
push
cmp
push
clc
sbb
mov
or
aam
mov
inc
pop
gs
in
cmp
test
sbb
jge
aam
jne
and
inc
cmps
dec
push
pusha
pop
pop
mov
mov
ret
inc
pop
xchg
pushf
push
sbb
xor
mov
cmp
add
je
nop
test
adc
inc
js
adc
push
gs
pop
mov
xor
jbe
and
or
enter
add
enter
mov
cmp
add
pop
cmp
sar
cmp
adc
pop
cmp
rcpps
rcl
retf
xchg
les
daa
dec
and
(bad)
out
inc
adc
les
sbb
push
add
xor
mov
je
cmp
jecxz
fld
cmp
imul
add
sbb
int3
jo
jnp
daa
push
mov
cld
fadd
pop
pop
and
(bad)
push
mov
and
rol
mov
pop
movs
adc
sub
adc
popa
and
push
dec
push
add
push
inc
test
es
inc
push
data16
adc
and
leave
test
mov
mov
daa
jmp
rol
test
or
dec
mov
sbb
pop
add
add
adc
ins
loopne
bound
std
je
retf
or
nop
push
inc
and
mov
adc
or
inc
sub
jbe
cmps
or
push
add
push
xchg
and
jne
dec
push
mov
mov
pusha
gs
inc
test
and
sub
retf
fimul
out
or
sub
sbb
xlat
mov
sbb
sbb
or
stos
push
hlt
int3
xor
adc
mov
fs
add
dec
cmp
add
cmp
pop
jl
js
(bad)
and
mov
call
mov
movs
call
dec
loopne
push
push
out
int3
lods
ret
lock
loop
sub
sub
or
adc
mov
dec
cmps
or
cdq
inc
mov
add
mov
mov
pop
daa
popa
in
pop
cmp
xchg
lock
cld
dec
add
xor
cmovg
in
mov
mov
pop
pop
mov
cs
push
push
sub
test
xor
push
enter
xchg
push
loope
inc
jmp
xchg
sbb
add
js
mov
retf
or
mov
cs
jmp
dec
dec
or
push
or
inc
push
inc
add
inc
call
mov
lods
inc
(bad)
push
dec
hlt
jb
inc
push
push
mov
loopne
mov
pusha
adc
ret
in
mov
fisttp
pop
outs
call
add
mov
pusha
aam
jg
add
jns
lods
mov
sub
mov
shr
or
pop
fwait
sbb
inc
add
jle
dec
out
adc
bound
inc
stos
add
inc
push
stc
xor
in
sbb
mov
push
add
clc
fistp
sbb
xor
push
add
loope
fucomip
mov
pop
sub
pop
add
push
and
push
inc
sub
add
push
dec
loop
xor
xor
lahf
std
test
inc
lea
sbb
inc
push
add
or
ins
mov
lea
xchg
add
mov
shl
add
rcl
fstp
mov
adc
push
mov
fnstenv
mov
outs
adc
pushf
loopne
dec
or
nop
sub
scas
xchg
nop
adc
inc
inc
jmp
out
inc
adc
mov
(bad)
sbb
xchg
xchg
repnz
push
push
push
xor
inc
inc
inc
pop
sub
loop
pop
imul
lock
cmp
dec
and
clc
(bad)
sub
retf
ret
or
std
outs
lock
and
not
and
or
xchg
push
and
and
or
pop
and
push
sub
lahf
pop
xor
xor
jg
js
loope
adc
in
dec
add
or
sub
mov
sti
out
enter
add
mov
and
(bad)
pop
fsub
cmp
jbe
ja
push
and
mov
and
mov
mov
xor
das
inc
add
das
cmp
push
xchg
or
and
cmp
add
adc
mov
jmp
add
jb
ja
test
pushf
fs
jbe
call
dec
sar
add
in
or
adc
adc
sbb
rol
aaa
push
pop
mov
(bad)
adc
pop
ja
lea
loopne
mov
rcr
lea
push
fsub
fwait
retf
add
pop
dec
or
retf
inc
out
xlat
ins
or
mov
dec
and
call
mov
sub
xchg
fst
je
xchg
adc
push
and
lea
sbb
mov
cdq
jne
add
add
adc
dec
sahf
pop
sub
xor
xor
xor
and
enter
add
or
and
enter
xchg
data16
lahf
adc
add
sub
cmp
lods
dec
or
add
inc
add
push
nop
add
push
add
push
nop
add
cmp
dec
(bad)
ficom
gs
jb
ins
sbb
and
enter
add
sbb
enter
enter
sub
sbb
add
pop
dec
imul
scas
pop
adc
adc
movhps
sub
cmp
or
xchg
sub
rcr
push
adc
loopne
mov
movs
in
sbb
push
adc
add
mov
pop
sub
adc
shr
and
inc
and
sbb
push
bound
cmp
cmp
inc
es
add
and
push
adc
(bad)
in
test
mov
and
aas
adc
outs
jg
or
clc
sub
test
ret
push
xor
adc
dec
and
adc
test
push
dec
aaa
add
lods
mov
out
out
add
sbb
(bad)
cmp
mov
pop
mov
adc
jp
adc
lods
enter
xchg
fcom
and
in
adc
mov
ret
add
fst
jae
cmp
adc
xor
sub
shl
cmps
or
jb
dec
jae
dec
adc
fcom
adc
arpl
cmp
xor
pushf
mov
or
add
retf
sbb
js
inc
leave
add
fs
adc
sbb
cld
pop
push
imul
mov
jae
nop
nop
mov
nop
mov
push
or
in
pop
scas
(bad)
cmc
xor
mov
xor
inc
xor
push
add
cwde
sub
in
inc
scas
test
mov
(bad)
dec
xlat
pop
dec
pop
mov
adc
in
xchg
jno
std
push
mov
jns
pop
and
mov
enter
and
test
es
int
or
mov
ror
xor
outs
push
push
enter
dec
jle
push
enter
push
mov
adc
(bad)
inc
push
adc
add
pop
cmp
out
fsubr
xchg
sub
sti
shl
inc
out
loope
cmp
pop
aaa
ret
sub
dec
pop
xchg
adc
inc
and
sub
add
mov
xchg
and
mov
add
pop
cdq
xchg
addr16
mov
enter
add
inc
cmp
jmp
fdiv
or
xchg
add
push
xor
int3
outs
inc
jg
push
xor
and
mov
fimul
repnz
pusha
dec
mov
leave
sub
mov
fwait
sub
cli
daa
mov
retf
xor
aam
add
leave
mov
cmp
and
sbb
in
(bad)
pop
repnz
clc
jl
pop
and
push
lods
les
push
and
hlt
aad
xor
or
jmp
inc
cmp
push
aad
xor
fst
adc
cmp
xchg
push
ret
pop
pop
sub
jns
dec
inc
jge
out
call
in
and
pop
test
dec
pop
cmp
sub
xchg
sub
xor
inc
add
scas
in
or
cmp
in
pop
cmp
repnz
jns
rcl
sub
rol
or
mov
rol
xchg
mov
push
xor
xchg
or
mov
sbb
cs
push
aaa
out
ret
mov
sbb
pop
sub
lahf
test
sub
test
mov
dec
aam
add
retf
aad
(bad)
std
mov
sbb
daa
mov
inc
mov
add
fidiv
adc
je
(bad)
jl
adc
rcr
cmp
inc
xchg
(bad)
mov
add
in
dec
je
add
jmp
fnstsw
cmp
in
or
(bad)
xor
es
jne
jmp
sbb
mov
and
sub
mov
pop
leave
hlt
jae
sub
mov
imul
xchg
xchg
mov
pop
ret
inc
inc
sbb
int
lock
or
sbb
mov
shr
clc
add
cdq
and
scas
pop
and
(bad)
rcr
jmp
cmp
xor
xor
cmp
xor
mov
(bad)
push
aaa
cmp
cmp
fs
aaa
xor
cmp
xor
xor
xor
and
xor
int3
data16
xor
stos
cmp
xor
xor
xor
cmp
popa
aaa
pop
xor
outs
movs
pusha
outs
cmp
mov
xor
xor
dec
xor
ds
bound
mov
sbb
fs
dec
push
ss
bound
xor
mov
gs
xor
jle
fidiv
arpl
in
int
lods
fsub
aaa
loop
data16
xor
push
mov
int3
rcl
xor
xor
push
bound
or
mov
inc
mov
pusha
inc
hlt
mov
pop
arpl
rcr
call
popa
xor
mov
loopne
xor
popa
enter
arpl
sub
cdq
mov
call
ss
xchg
gs
mov
push
xor
cli
cmp
sub
or
sbb
adc
and
ss
data16
cmp
inc
cmp
push
je
ficomp
fdiv
data16
push
arpl
xor
push
repnz
add
mul
xor
loop
popa
sbb
int3
or
xchg
cmp
adc
fs
fdiv
bound
xor
xor
mov
sbb
adc
add
add
xor
or
fs
in
loop
jp
add
ss
cmp
ror
and
and
fs
sub
pop
sub
js
mul
bound
popa
fidiv
popa
xor
sar
hlt
xor
pusha
pop
push
cwde
lods
push
jbe
sub
dec
ror
gs
inc
inc
push
push
jo
lods
js
pop
cmp
(bad)
hlt
cmps
aaa
dec
rol
dec
adc
arpl
test
jo
shl
add
pop
fiadd
fld
mov
int3
push
xor
fidiv
test
bound
nop
bound
gs
mov
jle
xor
cmp
fdivr
shl
fsub
rcr
inc
pop
cmp
arpl
sbb
add
jo
add
data16
call
cwde
rcr
sar
xchg
inc
xor
nop
bound
xor
adc
add
lock
icebp
cmp
dec
fadd
push
out
cmp
inc
pusha
push
mov
enter
cmps
(bad)
int3
sbb
inc
int3
mov
ss
into
push
(bad)
(bad)
ficom
push
test
and
dec
jno
repnz
xor
add
xor
mov
int3
dec
cmp
rol
add
ins
mov
fs
or
clc
in
hlt
int3
lods
jl
(bad)
jl
cmp
xchg
jae
cmps
push
mov
je
sbb
dec
jbe
sbb
call
xor
dec
in
sub
adc
mov
call
xor
movs
enter
sbb
xor
fimul
or
cli
(bad)
dec
xor
dec
bound
fadd
sbb
in
sub
rcr
xor
xor
mov
xchg
push
call
mov
and
ret
(bad)
setno
in
test
aaa
sub
push
pop
jbe
les
jb
cmp
cmp
ss
lock
adc
sbb
pusha
push
adc
movs
add
in
mov
and
pop
jp
jmp
sahf
pop
or
mov
sbb
xor
push
lods
stos
add
test
add
and
sub
mov
popa
sub
in
fs
and
fs
in
push
cld
ss
push
cmps
cmp
fld
sub
cmps
adc
jo
ret
inc
rcr
movs
out
repz
push
cwde
call
cmp
test
repz
pushf
inc
popa
push
pop
sahf
pushaw
repz
sub
pop
ss
jl
call
and
shr
xor
sbb
call
test
mov
lods
dec
cmp
cmp
fmul
neg
xor
add
int3
push
sbb
inc
(bad)
mov
xor
mov
(bad)
xchg
int3
js
int3
add
add
and
shl
xor
mov
or
repnz
mov
mov
xor
sbb
lods
pop
adc
int3
call
mov
into
fdiv
hlt
xor
sbb
jno
loopne
dec
push
call
cmp
mov
data16
xor
into
xor
pop
or
inc
loope
gs
into
dec
inc
cmp
cmc
mov
rol
mov
arpl
mov
xchg
aam
cmp
test
cmps
push
popa
ret
leave
js
or
push
pop
xor
xor
inc
sbb
ss
(bad)
jb
jp
enter
and
jno
pushf
inc
out
adc
cdq
push
in
inc
data16
xchg
bound
scas
adc
add
clc
fs
push
cmp
dec
xchg
bound
bswap
arpl
xor
sbb
push
data16
loopne
(bad)
or
inc
ss
rcr
cmp
jle
mov
dec
xchg
aaa
jmp
mov
push
mov
xchg
pop
in
adc
sbb
jle
sbb
xor
hlt
push
dec
add
cwde
imul
bound
popf
sub
scas
stos
jle
jo
adc
dec
cmp
push
sbb
int3
cwde
ds
sub
sub
mov
pusha
lock
pop
mov
(bad)
(bad)
xchg
repnz
popa
add
xchg
xlat
lds
data16
xor
and
fidiv
ss
lock
test
add
mov
test
movs
push
xor
sub
sbb
repz
sbb
push
nop
test
xor
jnp
push
mov
adc
mov
cwde
fidiv
retf
add
adc
jno
add
adc
add
push
xchg
test
xchg
repnz
or
or
or
dec
sub
out
sbb
push
bound
cmp
dec
mov
mov
push
jno
add
sbb
loop
sub
add
dec
jecxz
cwde
inc
loopne
cld
add
cwde
loopne
adc
cwde
popf
add
xchg
call
bt
ins
and
loop
in
add
jp
test
popa
mov
popf
ss
adc
loope
mov
adc
add
or
es
test
cld
bound
bound
xor
int3
cmp
pop
add
sbb
mov
and
add
shl
out
nop
popa
fwait
inc
add
enter
mov
and
shl
sub
in
sbb
scas
xor
or
push
ror
xor
test
push
xor
add
cli
mov
dec
or
in
push
retf
arpl
dec
and
and
idiv
ret
retf
pop
sbb
cli
or
push
cmp
cmps
arpl
xchg
xchg
lods
mov
test
adc
jp
fsub
xor
push
pop
push
push
dec
xchg
mov
sub
adc
sub
ss
pusha
and
or
cld
jo
or
sbb
test
cs
rcr
sbb
mov
push
daa
or
mov
int3
fadd
ds
xor
popa
inc
xor
sbb
inc
pusha
bound
movs
adc
(bad)
arpl
or
xchg
mul
cli
mov
xchg
cmp
or
push
xor
loop
(bad)
jmp
ret
and
cwde
xor
loopne
push
and
fisub
dec
sub
pop
(bad)
leave
jo
dec
and
add
lods
mov
cmp
daa
and
xor
loop
jno
fidiv
fsub
shl
inc
mov
xor
add
mov
je
test
fmul
add
cmp
mov
and
pop
jbe
mov
and
les
push
cmp
or
adc
mov
in
hlt
xor
push
pusha
dec
aaa
add
pop
sbb
test
jo
cmp
push
loop
sbb
ficomp
adc
test
mov
and
sub
or
jnp
fs
in
es
xor
repnz
test
pmulhuw
in
mov
data16
nop
mov
out
push
imul
je
xor
ret
cmps
xor
call
out
cmp
dec
mov
pop
add
popa
neg
cmps
mov
jmp
repnz
or
add
cwd
push
add
push
mov
or
out
cmp
adc
adc
xlat
inc
test
push
into
fisubr
sahf
ins
jne
xchg
fdiv
mov
xor
add
or
xor
dec
in
cmp
adc
pop
pop
fisttp
mov
push
and
xchg
inc
les
inc
xor
jp
iret
fstp
imul
fdivr
inc
mov
mov
adc
inc
mov
inc
(bad)
cmp
push
add
dec
iret
xor
sbb
jno
aas
xacquire
nop
imul
push
dec
push
shr
enter
ss
dec
repnz
push
dec
pusha
dec
inc
jmp
dec
dec
ja
dec
sbb
arpl
mov
es
ret
jecxz
jle
imul
sub
int
sub
js
clc
push
sub
cmps
aas
call
lock
push
dec
xchg
movs
jae
mov
add
ror
add
enter
int3
add
mov
ja
ror
dec
push
adc
loopne
pop
lods
fidivr
adc
xor
repz
iret
xor
or
in
adc
xor
rcr
ror
fdivrp
rcr
jmp
and
pop
movs
and
add
jbe
jne
scas
fs
dec
(bad)
loopne
add
loopne
(bad)
and
fmul
cdq
nop
xchg
fsubr
fsub
imul
lds
imul
xlat
sub
push
xor
dec
sbb
sbb
loop
mov
pop
cmp
xlat
add
or
xchg
mov
pop
add
loopne
mov
sbb
psubusw
lea
sbb
movs
xchg
fld
mov
fs
mov
fnstsw
hlt
jmp
inc
test
adc
loop
sbb
push
or
test
push
mov
mov
fst
xor
nop
cvtpi2ps
je
inc
imul
rol
pusha
xor
jb
in
call
mov
fcom
mov
sbb
aam
mov
mov
cmp
push
mov
enter
call
nop
cmps
imul
cmp
in
mov
xchg
out
mov
cmp
fist
aad
fild
add
ficomp
mov
clc
stc
fstp
fwait
mov
cmp
cmp
icebp
and
daa
xor
and
mov
scas
mov
mov
call
nop
lock
in
inc
hlt
lock
adc
hlt
shl
sub
leave
and
mov
push
dec
in
adc
into
leave
add
enter
into
xchg
adc
mov
imul
sbb
les
retf
gs
mov
fs
cmp
nop
fcomp
fcom
push
punpckldq
test
add
or
scas
imul
sub
inc
aaa
inc
in
scas
nop
dec
dec
or
add
jns
or
daa
sub
in
mov
test
fidiv
inc
sbb
jl
gs
sbb
ficomp
repz
mov
mov
js
and
movs
fldcw
lods
test
cmp
mov
adc
shr
add
daa
push
mov
fidiv
push
fcomp
outs
idiv
jmp
cmp
and
push
jmp
sub
push
movs
ss
xchg
fld
add
test
add
inc
repnz
xchg
jo
popa
das
inc
(bad)
inc
cs
ja
daa
test
mov
add
data16
adc
push
lahf
dec
cmp
ss
outs
xchg
test
mov
mov
je
sti
(bad)
or
cmps
jb
jae
inc
mov
mov
callw
add
push
mov
daa
fisub
push
ins
or
mov
xor
lds
leave
add
mov
sub
xor
inc
and
mov
(bad)
sbb
aam
inc
push
xor
add
punpckldq
cmc
jge
lea
mov
iret
mov
lds
aas
bound
ins
mov
loop
inc
sub
outs
jle
int
lahf
nop
clc
mov
lock
sub
and
sub
movs
jo
(bad)
mov
or
into
push
test
add
add
push
iret
push
rol
push
xchg
add
xlat
sbb
adc
dec
and
push
loopne
fiadd
lods
push
add
push
and
retf
test
xor
loopne
aam
xchg
test
dec
ins
pop
xlat
inc
xchg
daa
in
ficomp
gs
out
jne
mov
sub
lea
inc
(bad)
pusha
sub
xchg
cmp
adc
(bad)
push
adc
lea
arpl
inc
cwde
jp
jae
add
mov
cmp
mov
mov
xchg
xor
ja
loope
fucomp
pop
jb
push
mov
mov
sbb
out
cmp
std
loopne
or
aaa
movs
dec
daa
dec
add
dec
sahf
fidivr
cld
or
and
push
repnz
adc
and
sbb
leave
push
repnz
and
inc
ds
sub
adc
pop
adc
mov
mov
pusha
xor
mov
xor
lods
adc
and
xchg
aad
inc
dec
lock
xchg
aam
(bad)
sbb
xchg
xor
add
xor
push
cmc
fld
mov
test
popa
sbb
inc
push
mov
sti
popa
sub
add
dec
jg
aad
aas
and
jne
jg
adc
inc
push
stos
push
push
mov
je
scas
outs
jmp
call
xchg
cs
cli
or
and
mov
jg
and
movs
ss
not
rcl
jns
iret
or
test
arpl
inc
mov
(bad)
xlat
jae
ret
(bad)
popa
xchg
inc
xchg
call
cmps
idiv
js
das
jns
call
add
cmp
cmps
js
dec
push
mov
fs
dec
fcom
ins
es
mov
sbb
xor
push
ins
fbld
mov
add
mov
add
adc
add
pop
and
cmp
arpl
popf
out
jecxz
outs
movhps
or
sti
and
inc
fadd
xchg
cmp
int
adc
enter
lock
pop
pop
shl
dec
call
sub
sub
lea
sub
and
shl
cld
push
in
mov
cmp
movs
pop
pop
xchg
pushf
push
(bad)
cmps
cmp
jmp
adc
mov
mov
jmp
pop
lods
loope
mov
in
gs
ins
jle
xchg
adc
(bad)
fcom
in
mov
test
in
xchg
pop
dec
repz
fldl2t
xor
or
jno
sbb
jecxz
push
cdq
xchg
mov
and
dec
leave
test
and
inc
xchg
js
xchg
inc
cmps
sub
xchg
jge
push
jb
sub
sub
lods
aaa
hlt
mov
popa
push
pop
popa
push
xor
repnz
test
in
ins
ficom
fadd
sub
int
shl
push
aam
or
xor
sub
pop
test
cmp
dec
scas
movs
dec
cs
mov
xor
mov
add
add
and
jbe
fst
mov
jg
stos
repnz
pop
jmp
pop
out
ss
cs
mov
ror
lods
dec
inc
and
sub
pop
add
sub
or
add
test
out
out
fstp
add
adc
cmovs
fs
xchg
jge
or
ret
adc
sbb
add
lods
fwait
adc
mov
dec
out
outs
mov
pop
test
sbb
mov
in
stos
push
push
add
pop
push
imul
jo
pop
pop
adc
sub
rol
shr
xchg
ins
daa
data16
mov
xchg
sahf
fld
pusha
mov
add
adc
inc
jo
popa
stos
lds
mov
jb
xchg
xchg
lods
outs
jne
dec
or
daa
in
push
xor
pop
popf
mov
and
or
inc
or
ja
fcomi
or
aas
cmp
jne
ss
adc
daa
push
push
int
pop
daa
push
inc
xor
adc
call
daa
(bad)
mov
test
lods
inc
sbb
mov
add
lahf
add
and
lock
or
inc
or
push
add
mov
sbb
pop
fidiv
sbb
xor
sbb
and
nop
and
fcmovb
mov
mov
out
sbb
stc
popa
ins
enter
inc
mov
cmp
in
pop
or
sti
stos
(bad)
mov
and
in
stos
js
mov
mov
les
add
fs
mov
adc
xchg
cmps
and
loopne
sbb
adc
sub
inc
sbb
popf
jle
sbb
lea
sbb
xor
movs
(bad)
ret
pop
fmul
sub
das
xchg
xchg
inc
xchg
mov
fst
adc
bt
push
(bad)
enter
and
sbb
add
out
cmp
dec
pop
sub
jae
aam
loopne
pop
fld
jg
inc
jmp
jl
sub
inc
loopne
je
iret
jb
sbb
call
shr
jmp
sti
mov
inc
aam
inc
add
mov
call
call
inc
stos
mov
pop
or
int
movs
aaa
popf
stos
sahf
add
or
enter
fistp
jne
jae
out
je
adc
retf
clc
adc
mov
sbb
push
icebp
jmp
xchg
push
enter
push
ins
adc
push
jp
sbb
mov
sbb
sub
xor
inc
sbb
cmp
loope
add
sbb
inc
add
(bad)
pusha
push
lea
mov
push
ins
stos
or
pop
or
repz
inc
push
repz
add
lods
push
mov
leave
xor
sbb
or
add
pop
mov
aam
push
dec
cs
adc
xchg
sbb
add
or
adc
(bad)
call
cmp
enter
xchg
adc
add
or
inc
adc
inc
inc
inc
cwde
sub
xor
sub
push
(bad)
std
cld
cld
lea
xor
add
jno
sbb
cmp
sub
scas
test
lea
adc
jge
popf
pop
call
dec
ror
rcr
inc
mov
xor
aas
enter
je
and
cwde
mov
sub
sbb
sub
(bad)
loopne
dec
mov
enter
(bad)
inc
mov
mov
cmp
sub
out
inc
inc
and
sbb
sub
cwde
xchg
out
mov
xchg
and
jnp
xchg
add
or
cmp
add
rol
push
or
sahf
cmp
das
daa
push
mov
dec
ja
jecxz
inc
(bad)
fisttp
cmp
cmp
test
xor
dec
push
pop
or
inc
js
les
and
(bad)
ja
sbb
xchg
jecxz
jmp
or
outs
add
loopne
mov
and
and
fdiv
pop
mov
inc
jg
dec
mov
cmps
mov
cdq
mov
add
inc
test
dec
test
ss
mov
aad
add
pop
jmp
mov
pop
shl
ss
cmps
jb
cmps
sub
xchg
push
mov
pop
dec
ins
sbb
lods
sbb
cmp
ret
test
push
cvtdq2ps
loopne
dec
push
mov
push
inc
inc
(bad)
loopne
add
jno
inc
or
in
mov
mov
adc
fs
pop
sbb
add
push
mov
loope
movs
gs
adc
sti
dec
daa
dec
gs
jb
mov
int3
aaa
mov
xchg
lods
push
ja
and
mov
adc
loopne
add
sbb
push
mov
ja
inc
and
jb
push
mov
nop
xor
mov
xor
push
mov
xchg
cmps
sbb
aam
mov
jae
int
rol
les
dec
repz
loopne
das
gs
mov
(bad)
loopne
lods
xchg
in
mov
mov
lods
pop
outs
stos
add
push
pop
xchg
test
and
mov
add
add
scas
sbb
(bad)
(bad)
mov
arpl
fbstp
sbb
jmp
xor
int
jb
sbb
cmp
inc
outs
and
add
sbb
xor
dec
add
dec
xor
ins
movs
enter
psubusb
leave
leave
leave
aam
int3
enter
leave
(bad)
sar
dec
mov
push
push
push
mov
into
es
shr
movq
ins
lods
aas
rol
outs
outs
mov
cli
es
push
push
xor
or
xor
psrlq
ret
pmaxsw
cli
pop
or
dec
sti
push
sub
(bad)
fidiv
dec
enter
jae
and
shl
pop
inc
mov
adc
jle
add
(bad)
pop
sub
test
scas
clc
emms
pop
pop
pop
pop
rcl
jmp
sar
mov
pop
adc
lock
and
repz
test
jge
jg
inc
mov
jle
pop
xor
retf
xor
shl
ret
mov
push
sti
les
inc
mov
mov
js
or
inc
jnp
xor
adc
adc
cmp
movs
adc
data16
mov
add
fisubr
fcmovnbe
sar
jg
clc
inc
add
cwde
adc
push
inc
dec
jge
fist
pop
ror
bound
movs
or
jnp
inc
inc
sub
pop
push
sbb
enter
sbb
add
sahf
jge
sbb
adc
jle
pop
pop
xchg
add
push
cli
adc
(bad)
retf
rcl
fdivr
div
pushf
and
movs
adc
xor
pushf
push
jno
dec
in
jle
sbb
or
and
repnz
jne
xor
pop
dec
xchg
clc
ret
dec
add
js
xchg
iret
in
cmp
div
hlt
in
int3
jo
repnz
jns
retf
lock
or
lock
(bad)
jno
adc
jo
push
mov
js
cmps
mov
sahf
pmulhuw
pusha
(bad)
push
jmp
push
jmp
push
jmp
push
jmp
or
push
pop
xchg
xchg
xchg
push
push
push
mov
je
or
or
sub
movs
push
mov
aas
dec
pop
data16
(bad)
test
repnz
fcomp
(bad)
mov
or
int3
cmp
test
jns
add
or
(bad)
sub
pop
sbb
test
icebp
sub
(bad)
test
or
arpl
adc
sbb
adc
add
int
ss
xor
adc
push
push
jo
dec
mov
jne
cmc
xor
adc
adc
add
shl
or
add
outs
or
clc
xchg
and
dec
sub
in
inc
inc
ret
mov
xor
push
pop
sbb
(bad)
or
mov
int
add
push
add
add
add
lea
mov
out
or
test
cmp
adc
add
adc
jmp
mov
and
sldt
lock
jae
imul
sub
les
retf
dec
push
neg
test
or
cmp
jl
push
fild
lods
mov
dec
out
jae
sbb
inc
add
enter
sub
mov
sub
sub
xor
add
jno
out
add
jae
adc
aaa
add
mov
mov
sub
inc
mov
dec
cmp
sar
nop
retf
add
or
sbb
or
call
retf
mov
hlt
cmp
jne
or
retf
inc
mov
je
inc
out
jns
cmp
test
rol
shr
sub
fcomp
call
inc
adc
xor
inc
dec
test
mov
fld
lea
cmps
jae
or
sbb
aam
data16
or
push
in
addr16
jmp
push
cs
cmp
and
fdivr
nop
enter
shl
cmp
jne
inc
inc
cmps
xchg
sub
call
je
add
adc
add
sbb
mov
data16
test
inc
das
cdq
add
jl
cmp
mov
ret
fcom
or
cmp
cmp
and
ds
add
mov
lock
push
and
pop
add
dec
add
cmps
ds
bound
repz
call
inc
repz
push
ins
std
rcl
xchg
mov
pusha
xchg
leave
mov
xor
dec
inc
adc
sbb
dec
pop
sbb
fucomip
xor
mov
xchg
dec
sub
inc
cmps
outs
sbb
jl
xchg
and
pusha
(bad)
xor
xchg
sti
sbb
sub
sahf
lahf
mov
scas
in
mov
xchg
add
add
xor
pop
adc
sahf
fisttp
unpcklps
(bad)
cmp
cmp
pop
stos
sbb
adc
or
dec
sbb
ja
out
pop
cmp
or
add
xchg
ins
add
ja
dec
xor
mov
sub
add
clc
imul
cmp
inc
or
fsubrp
inc
fadd
or
push
sbb
pop
inc
jnp
jmp
add
test
inc
cmc
movs
loopne
inc
jb
(bad)
enter
shl
pop
push
jg
pop
push
jle
add
add
mul
rcl
retf
mov
cmps
in
out
aad
in
test
cld
pop
clc
shl
cmp
cmp
pop
fnsave
inc
cmp
add
dec
inc
mov
or
pop
sti
add
out
leave
and
sbb
mov
out
dec
cmp
mov
cmps
push
sbb
add
ret
jnp
adc
or
mov
mov
outs
pop
and
mov
fwait
add
xchg
or
movs
cmovae
push
pop
adc
and
out
fs
mov
pop
or
cs
dec
(bad)
out
add
or
in
or
xchg
push
fwait
int3
inc
or
push
pusha
daa
repz
and
push
cmp
add
push
loopne
push
xchg
add
cwde
sbb
jecxz
jo
and
push
or
adc
add
outs
adc
or
or
sub
or
mov
mul
or
add
push
sub
or
and
cmp
adc
ror
add
add
jle
dec
pop
test
dec
mov
dec
loope
fcomp
pop
cmp
sub
jo
ja
pop
(bad)
ss
out
add
cmp
pop
push
pusha
sti
add
rcr
add
jecxz
cmp
add
pop
int
mov
popa
in
dec
call
pop
or
or
mov
add
ins
sbb
aas
inc
je
mov
div
or
loope
js
in
js
movs
nop
push
imul
pcmpgtd
leave
mov
jmp
nop
or
fcom
lock
or
adc
fdivr
add
pop
ret
jg
and
add
mov
out
mov
xor
cmp
add
sbb
add
fimul
jp
outs
sbb
add
mov
add
sar
outs
add
jmp
sbb
es
jo
or
sbb
pop
cs
or
aas
add
or
cmp
jge
xor
mov
xor
add
js
movhps
mov
fwait
dec
push
jbe
mov
pop
ror
mov
sbb
sbb
jae
push
or
and
fstp
fwait
or
sti
faddp
mov
mov
arpl
and
mov
clc
mov
fisubr
push
outs
mov
aam
fld
fdiv
or
mov
fsub
mov
(bad)
or
dec
lods
loope
jmp
into
mov
pop
jmp
or
fiadd
je
shl
mov
cmp
add
inc
and
adc
jae
movs
dec
pop
adc
call
jmp
pop
pop
mov
popf
pop
les
pop
push
dec
iret
sets
daa
daa
daa
pushf
mov
outs
or
lods
inc
inc
push
sbb
mov
movaps
(bad)
xor
or
dec
ins
bndldx
xor
xchg
rol
add
test
mov
inc
and
lods
test
xor
jmp
fnstcw
lock
add
and
sub
pusha
js
cdq
nop
or
int3
call
xchg
adc
add
xchg
or
not
sbb
sub
outs
ret
xor
lea
push
push
sub
and
pop
adc
and
pop
cmp
xchg
jbe
mov
xor
or
inc
adc
js
cmp
xor
jmp
xor
adc
or
sbb
cmp
mov
or
push
sub
sbb
rcl
cmp
mov
mov
sti
pop
xor
push
and
(bad)
jne
sub
cwde
pop
add
test
retf
jne
ss
(bad)
sbb
xchg
shl
or
adc
sbb
nop
sbb
movs
and
lock
sub
cmp
add
xor
sbb
aad
ja
pavgw
push
and
jns
imul
pusha
out
stc
jo
gs
cmps
sub
mov
pushw
fild
sbb
add
jnp
or
jb
jae
aaa
shr
pusha
movaps
jae
xchg
push
(bad)
(bad)
and
cmovns
push
push
dec
dec
ret
mov
inc
dec
push
inc
pop
inc
inc
xchg
pushf
jp
push
outs
sbb
mov
sbb
hlt
adc
or
cmc
push
cmps
adc
adc
in
push
mov
xchg
mov
add
loopne
jno
mov
in
adc
lock
ret
stos
sub
loop
pop
cmps
inc
and
std
fwait
cmp
outs
and
cmp
adc
nop
or
lahf
sbb
in
lahf
push
sbb
call
sti
inc
dec
ins
call
add
ins
inc
add
pop
pop
and
push
adc
push
test
inc
adc
mov
adc
xchg
jl
sahf
mov
outs
xor
mov
jecxz
adc
and
ins
add
dec
ins
adc
js
outs
gs
mov
or
hlt
pop
xchg
std
call
adc
out
(bad)
or
mov
add
cmp
push
mov
sub
sbb
add
add
and
and
add
loopne
push
push
mov
and
jnp
mov
jg
pop
cdq
and
adc
pushf
mov
pushf
pop
inc
sub
dec
out
dec
jge
(bad)
call
and
inc
dec
call
loop
and
ds
scas
and
push
mov
lea
lods
xor
lds
add
xor
lods
sub
movs
adc
retf
push
jl
pusha
xchg
add
movzx
cmps
adc
sub
sbb
movs
(bad)
push
xor
and
jns
push
les
cmp
push
clc
dec
xor
add
aaa
lods
(bad)
loopne
cmp
add
jmp
sub
dec
adc
enter
inc
inc
push
inc
push
inc
ins
je
ffreep
lahf
and
and
(bad)
xchg
xchg
daa
daa
add
push
clc
rol
xchg
hlt
lock
add
cmp
(bad)
pop
cli
mov
cmp
pop
pop
fs
fild
data16
lods
add
add
adc
jge
sub
cmp
arpl
stos
or
sbb
les
pop
push
sub
mov
mov
dec
add
call
ins
test
bound
jae
adc
xchg
sub
sbb
cs
mov
xor
movs
movs
push
out
movs
aas
xor
push
or
jle
lea
xor
test
les
adc
mov
rcr
bound
test
push
call
adc
adc
xchg
pusha
mov
xlat
pop
pop
dec
push
fsubrp
pop
xchg
dec
repnz
idiv
sub
push
aad
inc
pop
xchg
sbb
cmp
scas
jo
sbb
mov
pushf
iret
test
shl
clc
in
test
or
and
add
adc
imul
fiadd
inc
push
mov
adc
add
sar
inc
mov
rcl
and
(bad)
push
mov
or
adc
lds
es
lock
movs
fwait
cmp
je
jmp
test
popa
frstor
outs
mov
lea
daa
cld
sub
adc
xchg
cmp
aaa
inc
add
je
arpl
fwait
and
(bad)
xor
sahf
sub
xor
add
ins
cld
sbb
je
cdq
mov
add
or
je
xor
xchg
adc
hlt
mov
movs
test
inc
scas
mov
es
sub
aad
lock
adc
arpl
mov
inc
xchg
lahf
mov
ja
dec
jmp
addr16
or
and
dec
jmp
adc
inc
fadd
aas
xchg
jle
repz
movs
push
pop
adc
loopne
inc
inc
xchg
xchg
inc
sbb
push
ins
dec
jo
imul
sbb
call
call
add
rcr
sbb
hlt
adc
js
cwde
std
outs
cmp
sahf
xor
adc
push
sub
dec
or
nop
test
xlat
pop
pop
popa
pushf
outs
cdq
pop
or
and
mov
pop
pop
pop
outs
or
ror
pop
jl
cmp
add
cmp
and
sbb
cdq
mov
or
pop
je
test
call
and
jae
add
cs
(bad)
dec
dec
inc
push
arpl
cs
jns
mov
pop
push
jmp
push
adc
add
xlat
aam
add
mov
mov
mov
dec
add
jne
scas
jae
add
sti
and
mov
lods
add
test
ret
shr
push
test
lds
mov
fist
mov
add
or
pop
iret
xchg
sub
or
jae
adc
das
hlt
cmp
jo
xor
pusha
mov
clc
adc
push
in
pop
call
adc
xchg
out
fs
and
inc
cdq
push
aam
out
cmps
mov
fnstsw
or
jge
and
mov
pop
inc
addr16
add
pop
pop
inc
mov
xor
xor
sbb
fsubr
xchg
push
and
xor
rol
inc
add
mov
test
push
and
cmp
lock
gs
sub
mov
jnp
bswap
push
stos
add
shl
add
pop
sbb
stos
jnp
lahf
lods
fsub
jno
jne
xor
call
rcl
lods
jnp
sbb
add
inc
adc
out
aam
lock
aaa
aaa
or
add
xchg
test
or
or
sbb
jmp
add
sub
add
(bad)
or
idiv
aad
jbe
jle
cmp
imul
fimul
xchg
arpl
mov
add
pcmpeqb
dec
repz
xchg
test
test
and
and
movs
daa
cdq
adc
icebp
mov
jge
ss
dec
(bad)
push
mov
mov
bound
add
push
sar
or
daa
je
xor
push
xor
xor
into
add
or
and
ss
fdiv
lods
daa
retf
cdq
and
fidiv
mov
cmp
sub
sub
in
and
and
sub
cmps
scas
sbb
adc
int3
arpl
out
add
es
jmp
mov
shl
mov
inc
or
xlat
std
sbb
std
xchg
or
xor
mov
xchg
jle
jo
neg
jne
lods
or
mov
test
test
jns
sbb
add
into
popa
ins
fcom
repz
jno
enter
add
out
add
inc
push
adc
lods
mov
mov
xchg
and
cs
xchg
stos
mov
icebp
dec
cwde
add
pop
je
lea
hlt
jl
fild
daa
pop
add
not
leave
push
xor
and
aam
shl
or
dec
cmps
inc
cwde
inc
in
lds
xor
inc
pusha
and
xchg
addr16
and
pop
addr16
adc
inc
pop
xor
daa
(bad)
fcomp
pushf
adc
push
cmps
xchg
enter
sub
inc
sbb
xor
daa
pop
sbb
fs
ins
or
jmp
sahf
sub
push
push
nop
ds
shr
sbb
push
adc
push
pop
pop
jmp
or
inc
inc
jmp
add
fsub
or
imul
add
push
or
sub
imul
jge
call
sub
sbb
fidiv
adc
sub
(bad)
and
rol
fst
lds
and
mov
add
(bad)
sub
sub
inc
les
mov
ret
verr
sub
(bad)
aas
or
xor
pop
bound
mov
pop
fnstcw
cwde
sbb
add
ins
xor
add
or
push
in
xor
mov
bound
outs
fs
ins
popa
js
inc
xor
jnp
lods
aas
or
mov
pop
gs
(bad)
xor
int3
sti
xor
mov
mov
cmp
popa
jbe
adc
daa
les
arpl
enter
call
(bad)
or
xor
dec
loopne
or
test
xchg
inc
ret
adc
sub
xor
push
ins
jo
addr16
inc
mov
sbb
fld
ins
adc
inc
dec
shr
and
in
dec
daa
or
pop
aaa
push
add
and
inc
lea
pop
add
es
xchg
xchg
fdivr
lods
pop
ret
adc
and
iret
fcomp
adc
shl
sbb
sbb
cmp
add
adc
push
mov
cli
ss
cmp
and
retf
fist
ror
inc
dec
test
outs
adc
add
sub
das
or
sub
mov
pusha
xchg
add
adc
push
enter
jb
push
ins
gs
mov
nop
cmp
clc
clc
test
xchg
dec
ins
xchg
cs
lods
pushf
sub
mov
dec
sbb
pop
in
push
test
mov
cmp
or
in
push
mov
mov
cmp
adc
xor
in
or
or
inc
dec
xchg
sar
or
sbb
je
dec
es
cmp
xor
sbb
(bad)
cmp
mov
daa
add
out
and
sbb
icebp
cmps
mov
das
push
push
mov
mov
cmp
cmps
pop
cmp
les
scas
pop
sbb
dec
push
jo
jne
mov
xor
out
popa
inc
das
adc
fcomp
(bad)
(bad)
ds
jmp
sub
sbb
mov
nop
adc
(bad)
jge
inc
lahf
push
mov
mov
push
rcr
sbb
out
add
jne
sbb
aam
push
jo
pop
inc
sub
outs
ret
or
mov
movs
test
sbb
daa
push
mov
add
inc
sbb
or
or
sbb
cmps
pusha
push
stos
pop
pusha
lea
inc
jmp
sbb
rcr
adc
cli
cmp
ins
mov
pop
inc
adc
jp
mov
inc
and
xchg
jle
adc
xchg
mov
mov
lods
fistp
sub
push
pop
imul
xchg
dec
sub
inc
adc
sbb
out
in
jmp
and
lea
jns
movs
and
adc
xor
bound
fadd
sar
xchg
imul
push
imul
dec
pusha
mov
push
out
xchg
test
dec
push
sbb
(bad)
push
sub
add
mov
shl
sub
adc
test
ret
adc
sbb
daa
xor
sub
and
test
dec
and
add
aad
mov
aaa
xor
fnsave
shl
dec
dec
sbb
es
sbb
adc
add
jl
xor
ror
lods
aam
cmc
fs
mov
or
les
add
cmp
push
push
pop
adc
push
jle
fistp
mov
mov
add
xor
stos
or
and
pop
cmp
pop
lock
jl
inc
sahf
cmps
push
cmp
das
call
mov
adc
sbb
movs
out
retf
shr
repz
popa
jge
out
fdiv
rol
cmps
pop
in
adc
xor
cmp
aas
sar
jae
popa
mov
std
cmp
jae
mov
std
xchg
jne
js
or
loop
enter
sahf
add
mov
xchg
jmp
sub
fadd
enter
sub
fisubr
repz
(bad)
lods
loopne
sub
push
add
out
sub
repz
mov
and
in
js
dec
jle
dec
aaa
mov
repz
sbb
lods
pop
pop
dec
and
lahf
mov
(bad)
popa
push
sub
daa
(bad)
sar
ja
push
sub
fnstenv
inc
ins
ret
ror
add
dec
cmps
je
add
pshufw
add
push
adc
add
or
movs
push
sub
xor
inc
add
sub
sahf
mov
push
sub
je
cmp
jbe
mov
ror
(bad)
xchg
jo
les
lock
or
push
mov
add
sub
dec
xor
sbb
push
mov
and
jns
aas
aad
inc
push
ins
push
and
inc
jbe
je
shl
dec
sub
je
pusha
in
pop
mov
push
pop
call
mov
dec
dec
inc
push
movs
dec
addr16
dec
xchg
aaa
sub
adc
inc
inc
lahf
dec
in
arpl
ret
ja
(bad)
(bad)
and
add
mov
xchg
or
mov
jae
fmul
and
push
dec
cmp
enter
test
hlt
cdq
(bad)
lahf
xchg
fs
hlt
mov
stos
jp
mov
jae
stos
dec
call
mov
push
hlt
sub
pop
in
in
or
shr
sbb
xchg
in
in
aad
cmp
hlt
outs
test
add
add
hlt
jbe
jno
pop
movs
mov
test
in
in
in
cmps
sub
jmp
rcl
adc
mov
or
out
adc
out
and
es
sub
or
mov
push
(bad)
inc
cmp
xchg
in
inc
pop
test
push
pop
pop
ins
rcr
fwait
sub
and
add
arpl
cmp
cmp
jb
je
pop
cs
xor
sbb
and
call
xchg
add
scas
les
into
mov
sbb
aaa
xor
push
inc
mov
in
adc
jmp
jb
or
adc
dec
imul
and
push
mov
rcl
movs
fucomi
pop
adc
push
imul
sbb
arpl
add
(bad)
ror
push
push
pop
mov
push
mov
sbb
cmp
sahf
rcl
cmps
xor
jmp
jne
dec
or
bound
lea
pop
sub
or
add
loop
test
inc
sub
ficom
pop
sbb
fist
hlt
inc
pop
test
popf
push
jne
arpl
rcr
mov
xchg
mov
ror
call
dec
push
je
icebp
mov
iret
adc
movsx
imul
fst
adc
in
push
fadd
fstp
fwait
(bad)
dec
xor
(bad)
sar
push
inc
xor
outs
or
and
and
push
or
dec
add
call
and
cdq
addr16
jne
ds
cmp
inc
jge
sbb
pop
inc
les
in
and
mov
add
jo
lahf
hlt
dec
add
xchg
mov
pop
das
xchg
and
hlt
call
outs
push
movs
fwait
mov
and
(bad)
mov
pop
adc
push
ja
sub
or
iret
lahf
push
mov
xor
add
adc
xchg
ss
sub
retf
adc
inc
in
and
mov
dec
adc
mov
imul
add
mov
cs
(bad)
push
retf
add
test
or
(bad)
pusha
xchg
cdq
xor
je
mov
mov
popa
pop
aaa
pop
cs
inc
rcr
fisub
or
and
pop
mov
outs
pop
cmp
add
sub
add
inc
fwait
and
adc
das
or
loopne
cmp
jl
psubusw
mov
cmps
jmp
adc
dec
jl
daa
pop
xchg
dec
mov
in
jnp
mov
aaa
daa
jo
add
push
pop
out
fidiv
and
inc
dec
push
jmp
jno
push
add
adc
mov
xor
ss
(bad)
es
inc
add
jo
ja
in
pop
popf
lods
sbb
test
idiv
fidivr
dec
movs
sti
push
jne
mov
add
das
cmp
cmps
ins
jmp
jmp
movs
mov
repnz
dec
cmove
aas
push
fdiv
push
or
add
movs
push
inc
mov
aaa
inc
cmps
fs
and
jbe
mov
xlat
sbb
pop
jg
pop
(bad)
rcl
mov
jbe
inc
pop
adc
mov
pop
inc
movs
lea
das
xor
movs
sub
inc
pop
ins
push
mov
ins
popa
push
xor
mov
add
sub
pop
jge
pop
or
sbb
rol
mov
inc
inc
mov
arpl
add
dec
and
pop
js
loope
xor
(bad)
retf
cld
aas
xor
sbb
cwde
mov
mov
call
jecxz
pop
sbb
nop
(bad)
mov
and
dec
cmc
xor
add
xor
mov
adc
inc
cmps
inc
stc
sbb
xchg
sub
sbb
addr16
or
or
les
and
dec
pop
and
xor
mov
xchg
pop
test
xor
push
xor
dec
sbb
push
stos
add
popa
stos
xchg
adc
ror
adc
pusha
or
adc
or
push
mov
jne
ror
data16
nop
fnstenv
pushf
shl
lahf
(bad)
cmp
stc
call
jno
sub
popf
inc
fbstp
or
or
rol
(bad)
mov
add
xchg
xor
jbe
pop
int
jb
jbe
outs
jmp
add
pop
aas
je
push
outs
sahf
(bad)
sbb
sar
ret
mov
pop
cmp
scas
push
jg
bound
in
lods
rcl
out
cdq
shld
sub
mov
jg
ss
mov
or
mov
mov
adc
loope
enter
stos
pop
iret
dec
cmp
scas
sub
rcl
call
push
mov
das
cmps
lods
es
jp
leave
punpckldq
sub
mov
and
dec
jb
(bad)
jns
sbb
pop
push
cmp
jl
pop
icebp
or
cmp
clc
jp
push
cmp
xor
pushf
std
ins
add
sub
test
clc
test
enter
sbb
and
data16
adc
inc
adc
(bad)
sahf
xchg
push
pop
div
or
addr16
call
jge
mov
add
add
lods
sbb
push
std
stos
or
or
xor
dec
mov
adc
mov
xor
push
add
inc
idiv
xchg
out
fidivr
shr
ror
sbb
fs
ret
div
(bad)
sub
sub
inc
and
ret
mov
and
mov
or
(bad)
push
enter
cmp
pop
mov
jno
pop
mov
xor
aam
ret
sbb
test
ss
or
adc
push
inc
or
ins
sub
and
rol
fimul
int3
test
retf
rcr
push
push
pop
or
sbb
imul
nop
inc
pop
mov
mov
mov
sub
jmp
push
adc
ror
jnp
inc
cmp
dec
xchg
mov
xchg
mov
pop
jmp
and
pop
int
xor
clc
push
cmp
jl
add
aam
out
outs
les
jge
loopne
pop
mov
xor
pushf
pop
enter
mov
enter
loopne
sbb
or
inc
xchg
add
pusha
and
mov
arpl
xchg
dec
arpl
loopne
jmp
sub
adc
jmp
and
lea
outs
sahf
adc
sbb
(bad)
mov
mov
inc
or
mov
xor
in
and
std
stc
clc
add
movs
mov
dec
cld
add
mov
ss
(bad)
div
jae
xor
and
push
lock
mov
dec
push
pop
add
in
mov
and
add
loope
add
int
sbb
or
sbb
and
call
ret
adc
stc
add
push
push
mov
shr
adc
inc
inc
sbb
or
mov
repnz
adc
adc
mov
daa
inc
mov
pop
xor
push
aaa
sub
add
adc
pusha
pusha
dec
mov
push
rcl
jmp
pop
add
adc
hlt
push
mov
sbb
push
pop
out
mov
dec
aas
inc
jle
pop
dec
mov
inc
mov
ds
jg
xchg
add
add
lds
sbb
(bad)
std
in
and
hlt
iret
cmps
in
push
mov
xchg
out
mov
push
icebp
mov
lock
popf
mov
push
mov
push
mov
lods
sahf
sub
hlt
addr16
hlt
jecxz
mov
pop
or
cmp
and
idiv
cmp
popa
mov
xor
or
inc
pop
ficom
shr
jmp
out
cmp
fsubr
xor
repnz
scas
cmc
cli
idiv
stc
test
clc
scas
push
xor
ret
jmp
jnp
stos
sbb
or
sbb
sbb
mov
mov
les
mov
sub
sbb
add
dec
sbb
cmp
xlat
aaa
add
loop
icebp
or
jecxz
in
push
jno
enter
scas
movs
(bad)
pop
lods
push
ror
add
ret
jmp
add
iret
sbb
in
mov
ins
xchg
and
or
xor
mov
repz
xchg
or
sahf
jne
add
ret
jp
add
add
ret
jle
and
dec
pop
push
iret
xchg
lahf
xchg
fld
test
mov
or
xchg
out
outs
or
add
xchg
push
mov
xchg
out
xchg
mov
fsub
enter
test
mov
in
mov
lds
lock
add
add
mov
sti
or
sub
cdq
add
dec
pop
mov
push
add
lods
or
cmp
out
int
push
or
cmp
iret
sub
ret
xchg
ja
xor
lea
rcl
add
or
(bad)
shl
add
cvtdq2ps
sbb
aas
fcom
sbb
shl
lock
adc
imul
je
adc
gs
jg
mov
jecxz
fs
fst
lds
ss
idiv
test
pop
fisubr
lds
push
enter
es
push
mov
ficom
inc
cs
inc
adc
jb
sbb
(bad)
sbb
jp
rol
mov
xor
xchg
adc
mov
xlat
inc
add
cli
enter
add
stc
add
push
xor
mov
adc
stos
cmp
jbe
mov
mov
cmp
push
call
xchg
stos
jne
xrelease
mov
jno
mov
vmread
loop
jle
and
mov
loope
lds
loope
ret
mov
jmp
and
inc
pop
jnp
rcl
enter
or
ret
sbb
out
add
hlt
rcl
add
(bad)
hlt
adc
aas
sbb
cs
add
je
inc
test
fs
pop
shl
test
pusha
frstor
xor
clc
call
mov
out
add
(bad)
jmp
aam
lea
movs
add
mul
outs
dec
push
popa
les
dec
xchg
fisub
outs
iret
ficomp
addr16
stc
jp
iret
shr
and
lahf
sbb
xor
jns
jnp
jbe
add
pop
xor
sbb
adc
or
popf
add
pop
mov
mov
clc
or
test
sbb
pop
add
out
ror
js
inc
fadd
icebp
push
sar
jp
mov
loop
jmp
shl
dec
add
pop
enter
lahf
adc
js
rol
and
ss
xor
repz
icebp
(bad)
out
push
xchg
int3
test
add
or
cmps
rol
cmp
add
add
pop
dec
sub
push
and
add
inc
add
daa
sbb
xchg
clc
dec
out
movs
stc
mov
inc
sub
cmps
js
add
outs
jg
mov
mov
pop
mov
(bad)
cli
jp
cdq
dec
mov
fpatan
jnp
cli
pop
sub
xor
add
and
sti
adc
add
jmp
mov
in
jbe
xchg
adc
shr
adc
sub
xchg
xor
mov
sub
js
mov
or
mov
sub
jl
repnz
add
jmp
mov
mov
leave
mov
shr
add
or
or
or
mov
mov
push
and
ror
adc
add
jg
imul
inc
ret
test
sbb
adc
scas
mov
dec
imul
push
aam
(bad)
jge
mov
xchg
test
mov
mov
cmp
mov
test
jle
nop
adc
aaa
jnp
pusha
or
or
and
xchg
repz
or
mov
rol
mov
sti
jle
jno
push
mov
or
outs
xor
test
xor
outs
call
out
fisttp
ror
pusha
xor
stos
add
dec
stc
ret
or
push
add
movs
aad
adc
scas
(bad)
mov
sbb
addr16
je
or
prefetch
(bad)
rcl
adc
es
jmp
push
test
xchg
inc
cmp
pop
jns
xor
movs
rol
or
or
lds
cdq
fsubr
dec
lods
cmp
or
leave
js
pop
out
inc
shl
or
aaa
adc
xor
aad
jle
retf
lods
scas
out
les
(bad)
push
or
pop
ret
int
add
pushf
cmp
xor
pop
sbb
cs
dec
jbe
pop
fmulp
nop
pushf
shl
nop
mov
mov
ret
jbe
lea
icebp
out
pop
shl
dec
xchg
je
shr
sbb
retf
or
retf
mov
pop
call
ret
sar
hlt
add
xor
emms
out
in
add
rol
add
outs
jo
gs
fadd
push
and
pop
push
(bad)
mov
shl
mov
ror
jg
jbe
adc
ficomp
outs
shl
movs
jne
fdiv
jmp
scas
mov
push
lock
fadd
rcr
pop
psubusw
shl
(bad)
cmc
dec
push
add
add
mov
add
ds
shl
pop
fild
xchg
pshuflw
sbb
dec
lea
push
std
adc
lods
call
push
data16
shl
fld
out
inc
mov
jmp
sub
arpl
data16
test
or
xchg
addr16
or
bound
push
lds
mov
push
dec
or
pushf
mov
add
ret
xchg
aad
jmp
mov
ss
xchg
popa
and
adc
jo
xor
xchg
call
dec
push
mov
and
or
adc
mov
cmps
mov
lods
lea
dec
inc
movs
mov
xchg
(bad)
je
nop
xchg
xchg
push
repnz
or
xchg
mov
into
aam
pusha
sbb
xchg
cmp
and
leave
jecxz
mov
je
(bad)
call
mov
pusha
(bad)
sub
int
jle
mov
sbb
jle
jg
js
js
loopne
push
iret
shl
sub
xor
bound
add
lods
cmp
ds
rol
sbb
or
cdq
add
cdq
xor
outs
fmul
fsubr
pusha
cs
dec
xchg
xlat
jae
daa
fsubr
(bad)
inc
cmp
mov
shr
mov
lahf
(bad)
daa
in
cs
and
iret
fcomp
jmp
and
adc
push
xor
sbb
or
and
dec
push
ss
nop
add
in
pusha
jecxz
in
ss
add
push
xor
jmp
enter
in
std
popf
add
fmul
add
aam
jle
jno
lds
pop
xor
and
lahf
test
xchg
clc
pop
adc
(bad)
or
sub
inc
ds
ins
int3
cmp
push
fnstcw
add
mov
mov
inc
or
mov
jb
in
add
add
add
add
enter
retf
dec
lods
or
or
mov
cwde
xchg
push
cs
and
fcom
dec
in
retf
call
jb
adc
adc
cs
push
xchg
dec
sub
repz
retf
sbb
jmp
outs
and
sbb
fsubr
cmp
leave
and
dec
dec
pop
mov
nop
out
xor
movs
jb
push
add
xchg
add
add
cmp
sahf
pop
call
mov
add
pop
pushf
or
add
adc
or
or
or
add
cmp
dec
or
adc
or
pop
dec
in
prefetcht1
add
inc
pop
adc
jns
and
movs
dec
adc
adc
enter
dec
push
mov
pop
xor
add
add
sbb
adc
push
stos
and
sti
xor
(bad)
push
vrsqrtps
(bad)
push
(bad)
sbb
or
rcr
fdiv
fs
sahf
sub
xor
add
or
or
pop
or
push
cmp
or
nop
retf
adc
adc
iret
xchg
add
xor
adc
stos
sbb
test
mov
pop
xor
dec
in
js
mov
pop
rcr
seto
add
sbb
jb
sbb
sti
in
or
xchg
and
in
pop
xor
fs
pop
lods
or
repnz
add
push
push
nop
out
pop
or
add
jns
adc
push
stos
sbb
xchg
je
in
xlat
push
mov
add
dec
in
jns
mov
pop
cmp
push
nop
retf
adc
push
jb
push
push
mov
aam
pusha
and
or
xor
or
pop
push
test
add
adc
or
pop
or
add
or
mov
pop
sbb
sub
pusha
pop
adc
or
adc
inc
fsub
inc
cmc
pop
aas
or
xchg
mov
shr
mov
add
je
lea
out
(bad)
push
dec
ret
push
add
or
out
sahf
adc
sbb
and
sahf
out
sub
xor
out
adc
rol
mov
shr
pop
sub
je
scas
imul
or
out
sahf
out
or
or
sahf
out
sahf
or
or
or
mov
or
sahf
cmps
cdq
dec
and
and
jns
out
and
and
and
jns
out
and
and
xor
inc
sahf
and
and
fwait
pop
mov
fst
push
data16
(bad)
sbb
punpckldq
pop
dec
push
mov
ror
and
outs
add
movs
popa
jbe
push
push
jb
cmp
movs
add
jb
mov
sti
mov
mov
pop
scas
xchg
add
pop
inc
or
adc
cmps
test
or
and
imul
retf
jp
(bad)
dec
jg
in
or
push
dec
enter
int
int
enter
sbb
ins
enter
cmp
enter
push
dec
out
sahf
out
pop
gs
jne
outs
fwait
fwait
jge
add
dec
retf
push
retf
retf
outs
outs
jg
retf
retf
retf
retf
mov
add
call
lods
push
test
inc
jg
jmp
sahf
out
jmp
jmp
jmp
or
sahf
out
mov
fcmovnu
fild
out
fcmovnu
fcmovnu
inc
and
sub
push
out
out
dec
movs
push
test
lods
sub
inc
cmps
and
mul
and
sub
add
bnd
sbb
fs
movs
jb
ja
and
and
test
add
add
mov
test
and
xor
add
xor
pop
enter
ins
add
adc
sub
xor
nop
push
enter
push
and
mov
cmp
aam
leave
xchg
sub
xor
and
push
jno
jb
push
xor
inc
pop
out
je
mov
ins
jmp
popa
xlat
pop
fs
or
fs
add
push
fisttp
push
sbb
ja
cmp
mov
adc
pop
fs
(bad)
in
pop
add
ss
fs
pop
lods
js
mov
js
je
xchg
cwde
sahf
neg
fs
inc
push
loopne
test
push
aas
ror
push
cmp
ss
aas
xchg
lds
add
pop
mov
aas
imul
push
je
and
mov
js
mov
add
ds
and
dec
cmp
push
movs
add
fisubr
add
pop
pop
pop
mov
xor
sahf
pop
adc
dec
mov
sti
movs
jmp
sub
xchg
sldt
test
and
inc
mov
(bad)
imul
pushf
push
xchg
cmp
or
mov
mov
pop
fcom
add
push
arpl
add
sbb
int3
mov
pop
aaa
inc
nop
ja
scas
push
cmp
adc
dec
int
test
xlat
sbb
or
sub
push
adc
test
aaa
mov
test
sub
mov
daa
mov
push
imul
cwde
nop
push
or
sbb
add
jge
stc
cs
pop
or
rcr
mov
popa
adc
adc
lahf
fucomi
push
les
es
or
shl
jg
loopne
psraw
push
dec
mov
dec
and
mov
ins
(bad)
(bad)
or
push
dec
cmp
push
add
call
rcr
adc
mov
imul
sub
out
pop
adc
movs
push
icebp
and
dec
fild
and
jnp
mov
push
scas
js
das
pop
push
sbb
xchg
mov
rol
loopne
in
pop
xor
stos
ret
cmp
nop
lock
ucomiss
xchg
stos
fisubr
add
shl
mov
pop
test
inc
mov
jb
ins
mov
es
(bad)
mov
xchg
xchg
pop
push
in
and
add
aas
push
adc
pusha
leave
dec
adc
inc
inc
test
mov
ja
add
xchg
pop
mov
jle
push
call
shl
add
or
inc
arpl
jne
sbb
cmc
adc
add
dec
add
ret
mov
push
sbb
push
xchg
in
dec
push
dec
xlat
add
push
pop
inc
loopne
xchg
retf
cld
adc
aam
pushf
pop
call
in
(bad)
div
cmp
push
int3
mov
shl
enter
dec
enter
dec
add
test
add
popf
inc
movs
fsub
in
jmp
out
mov
add
push
inc
add
adc
push
ficomp
outs
xchg
movs
pop
mov
pop
lock
inc
mov
xor
jo
jnp
xchg
ret
je
fs
clc
sti
inc
rol
jb
lea
ficom
inc
(bad)
cmp
jne
cmp
sti
push
adc
clc
push
add
jmp
sub
stos
mov
add
and
add
xor
xor
fucomp
shr
je
cmps
movs
sahf
mov
lods
test
inc
add
push
inc
(bad)
xor
fcom
inc
push
sbb
adc
jmp
inc
fist
out
ss
and
and
add
adc
or
push
lock
scas
add
sub
(bad)
pop
(bad)
shl
xchg
mov
addr16
sbb
enter
jmp
and
sbb
xchg
je
or
test
ja
push
retf
ret
enter
ss
dec
or
jmp
dec
add
mov
popa
rdtsc
rol
rcl
jg
test
pop
enter
sbb
test
xchg
enter
cmp
inc
pop
bound
adc
jne
rol
or
jmp
jno
pop
inc
dec
jne
pop
push
xchg
add
xchg
push
loopne
test
sbb
scas
das
jne
mov
mov
or
dec
push
sbb
sub
clc
mov
adc
pop
sbb
push
cld
add
popa
pusha
xchg
inc
lods
mov
dec
adc
mov
mov
ret
dec
or
dec
fdivr
in
mov
push
pop
push
repz
add
xor
mov
rcr
inc
mov
xchg
mov
dec
push
pop
adc
add
gs
(bad)
pop
xchg
test
daa
lods
or
ret
cld
popa
and
push
fist
(bad)
dec
fdivr
add
mov
xor
movs
inc
scas
mov
sub
jmp
mov
ja
jmp
push
hlt
outs
sbb
daa
cmps
add
sbb
dec
(bad)
aas
or
sub
jns
and
xchg
xchg
inc
inc
cmc
in
div
shr
(bad)
fld
fmul
or
sbb
jmp
push
cld
push
adc
and
inc
or
adc
sbb
movs
rcr
lods
les
pop
out
and
scas
jno
jb
cmps
dec
push
cmp
test
xchg
inc
pop
outs
pop
test
dec
pop
fisubr
dec
mov
mov
xchg
loop
dec
pusha
xor
(bad)
xchg
sub
sbb
and
inc
and
jmp
xor
sbb
fmul
loop
or
jp
call
adc
fdiv
push
sub
movs
stos
nop
inc
addr16
mov
test
mov
out
pop
and
and
jae
ins
jo
aad
xchg
ins
xchg
dec
mov
pushf
test
in
test
push
mov
add
(bad)
outs
or
pop
and
push
jo
jns
xchg
sbb
jb
xchg
pop
xchg
aas
push
pushf
or
pop
idiv
popa
jb
out
pop
inc
add
jge
repnz
or
xor
sbb
sbb
js
shl
inc
outs
jae
pop
out
push
inc
xor
mov
inc
lock
in
repnz
xor
xchg
inc
sahf
push
jo
lock
xor
jl
imul
js
sub
mov
mov
mov
dec
movs
sub
inc
dec
ins
add
pop
sub
inc
mov
iret
in
adc
bound
(bad)
inc
add
mov
adc
xchg
bound
xor
lods
pop
sub
lods
and
add
inc
jbe
xchg
and
daa
mov
data16
mov
jae
dec
push
pop
cmp
ds
imul
ret
rol
inc
lock
mov
push
dec
mov
mov
fidiv
pop
sub
ds
add
jge
gs
imul
cmp
mov
scas
js
mov
mov
mov
jo
cmp
and
test
or
mov
sub
scas
sbb
add
pop
xor
stos
in
mov
xchg
mov
mov
pop
inc
pop
xor
ss
daa
dec
push
fmulp
mov
jmp
bound
arpl
pusha
adc
inc
sub
xor
movs
into
add
xor
add
scas
clc
inc
mov
lea
lea
nop
and
mov
mov
jp
jae
add
mov
int
mov
lea
mov
(bad)
sbb
cwde
stc
dec
jb
mov
jne
jae
popa
outs
bound
fidiv
inc
sub
mov
adc
mov
push
imul
mov
mov
mov
iret
sbb
lods
dec
inc
ins
iret
inc
sub
dec
popa
jo
pop
(bad)
nop
(bad)
xchg
(bad)
push
or
or
pop
test
and
jg
nop
enter
ins
nop
push
nop
push
nop
cmc
sbb
adc
rcl
test
test
mov
pop
sub
sub
clc
nop
scas
sub
adc
and
cmps
aas
sub
rol
add
push
imul
push
lods
ret
stos
or
mov
and
(bad)
pop
mov
sub
leave
hlt
out
out
xchg
or
pop
xchg
mov
inc
push
inc
mov
sub
inc
sbb
sbb
inc
add
ds
mov
mov
neg
inc
mov
add
ficomp
push
push
push
mov
push
inc
inc
push
mov
pop
sub
mov
jb
clc
sbb
and
add
ss
out
fcomp
neg
inc
adc
push
inc
pusha
push
fcomp
out
lock
out
mov
and
dec
pop
sub
cmps
loopne
fsubr
inc
repnz
xchg
nop
xchg
pop
mov
push
and
es
inc
das
cdq
xchg
dec
pop
mov
cdq
dec
xchg
mov
je
add
push
imul
pop
push
push
push
adc
sbb
or
or
loope
and
test
push
leave
mov
outs
int3
les
(bad)
imul
outs
or
ins
push
enter
js
imul
pop
sub
call
add
clc
stos
adc
ja
xchg
xchg
or
add
mov
add
in
mov
(bad)
out
adc
inc
dec
in
inc
dec
pusha
and
test
push
push
xchg
pop
push
add
dec
lea
push
add
test
xchg
adc
(bad)
push
jl
and
loopne
pop
adc
xchg
adc
xor
push
cwde
loope
cs
js
sub
push
rol
push
mov
(bad)
hlt
cmp
sub
cwde
(bad)
dec
adc
mov
sub
or
lods
or
pop
adc
fadd
cld
cmp
push
sub
xchg
into
inc
dec
pop
or
loopne
sub
jl
jns
pop
mov
call
and
and
lock
shl
mov
add
movs
xchg
fstp
jb
in
pop
add
icebp
sbb
add
mov
rcl
into
outs
jb
(bad)
xlat
call
retf
sub
ins
xor
lods
sub
sbb
xchg
sbb
rcl
sbb
jg
cmps
jb
or
dec
sub
xchg
(bad)
retf
xchg
adc
xchg
or
xchg
clc
pop
and
jecxz
test
mov
aad
push
inc
pushf
inc
in
cmp
xchg
push
jg
pavgb
push
sbb
mov
js
pop
jl
push
lods
inc
inc
lods
and
in
shr
fld
loope
mov
rol
and
daa
ins
push
dec
je
rcl
cwde
cmc
ins
stc
pop
ficom
test
mov
add
pop
lahf
fild
dec
cmps
sbb
push
lock
popf
sbb
adc
test
inc
test
and
mov
cli
imul
mov
dec
and
sbb
pushf
jl
adc
push
lods
sbb
inc
mov
cmps
lahf
sub
test
or
pop
mov
mov
sub
mov
sub
(bad)
shr
mov
inc
mov
lock
add
aad
lahf
pop
cmp
jmp
jne
mov
push
cwde
add
mov
adc
test
dec
sbb
loope
xchg
(bad)
adc
loopne
popa
or
in
and
mov
test
jmp
jo
jo
jb
inc
call
aam
call
mov
and
cmps
outs
fmul
fist
rcl
je
mov
stos
es
mov
fsub
jl
mov
cmp
cmp
outs
aaa
add
adc
or
test
jmp
retf
in
pop
dec
repnz
mov
and
xor
dec
mov
rol
loopne
mov
test
cmovb
inc
adc
mov
test
inc
adc
lock
jne
dec
and
and
mov
cmp
and
es
outs
add
leave
adc
xor
xor
mov
sub
nop
sbb
rcr
mov
lds
in
mov
shl
jmp
test
push
fmul
call
push
sub
xor
mov
xchg
pop
inc
push
add
sub
jo
sub
jae
int3
jmp
cmp
jb
sub
(bad)
lock
clc
pusha
mov
sbb
jmp
nop
push
sub
xor
jg
ret
fwait
rcr
xor
loope
fnstcw
(bad)
mov
das
push
call
jmp
push
sbb
sbb
lock
inc
out
pushf
into
ja
loop
adc
jge
sbb
scas
ins
mov
or
xchg
add
cwde
test
inc
push
sti
push
mov
movs
dec
xchg
inc
outs
imul
cwde
arpl
leave
xchg
cmp
pop
bound
adc
pop
es
jecxz
inc
popf
nop
add
adc
loopne
mov
stc
cmp
add
and
daa
pop
rcl
or
jnp
inc
push
sbb
adc
fwait
add
xchg
cmps
mov
sub
nop
punpckhdq
icebp
ins
lahf
pop
movs
retf
push
inc
test
scas
add
inc
cmp
jmp
call
push
imul
dec
jmp
xchg
xchg
daa
cmp
jg
add
fild
mov
mov
fsub
sbb
sub
aam
jo
adc
push
dec
(bad)
ins
add
pop
sub
cmp
sub
adc
jl
enter
xchg
pop
ficom
or
cdq
pop
leave
dec
lods
jmp
xchg
cmp
adc
or
ror
dec
jne
push
add
loop
sbb
inc
xchg
in
in
nop
inc
es
in
cmps
xor
cwde
add
test
xchg
inc
or
inc
cdq
inc
jb
sbb
inc
clc
test
xor
clc
aaa
ficomp
jl
clc
clc
clc
or
test
mov
cwde
mov
adc
or
adc
and
push
pop
loop
sbb
lods
xchg
pop
aad
mov
dec
mov
nop
les
mov
test
(bad)
daa
pushf
xor
shl
sbb
(bad)
loopne
adc
push
sbb
inc
scas
jl
adc
neg
add
mov
popa
inc
and
js
inc
mov
dec
xor
adc
add
sub
mov
mov
and
sar
inc
aaa
pop
cmp
xchg
sub
pop
mov
cmp
sub
mov
sub
cld
mov
push
mov
sbb
popf
xchg
stos
in
nop
add
push
sub
sbb
fwait
sub
enter
add
sbb
in
pop
xchg
aaa
ins
ins
push
push
cmp
iret
into
add
pusha
test
sbb
sbb
bound
clc
mov
mov
or
movs
mov
and
icebp
lods
mov
sub
call
xchg
dec
sbb
scas
call
pusha
push
iret
xchg
add
cmp
cld
neg
add
aam
xchg
pop
ret
mov
adc
jp
nop
pusha
mov
adc
dec
retf
or
cmp
ret
sbb
mov
or
movs
imul
pop
and
mov
push
and
push
sbb
imul
xor
fwait
inc
fnstcw
dec
mov
sbb
cmp
add
or
imul
js
sub
aaa
push
mov
rol
outs
ins
dec
daa
fist
rcr
and
fld
cld
loopne
or
dec
in
dec
loopne
arpl
add
adc
(bad)
ss
into
pop
xchg
(bad)
adc
and
mov
enter
in
or
fist
clc
daa
inc
pop
pop
inc
das
push
nop
sub
mov
pop
mov
outs
shr
fsubr
fsubr
dec
fsubr
add
or
shl
repnz
mov
jge
test
xor
inc
push
in
(bad)
ret
(bad)
nop
rcl
mov
sbb
jl
sub
dec
inc
mov
xor
adc
and
rol
pop
add
dec
ins
retf
test
data16
neg
movs
inc
mov
test
fidivr
sbb
cld
mov
out
aam
dec
ret
mov
inc
jp
popa
in
inc
dec
dec
inc
add
inc
xor
jo
jae
lds
inc
and
adc
stos
inc
xor
cmps
fs
dec
inc
or
and
fs
pop
lea
mov
jecxz
dec
and
add
sub
std
inc
xchg
rcr
(bad)
and
fwait
ins
add
pop
ja
pop
outs
sub
push
or
fcomp
xor
mov
push
mov
pop
nop
sahf
mov
lea
pop
xchg
je
pushf
test
xchg
lods
movs
ror
mov
adc
(bad)
xchg
jbe
sbb
pop
shl
js
scas
pop
add
lock
pop
mov
das
adc
lahf
fs
inc
jns
(bad)
add
scas
push
push
mov
ret
or
add
stos
xor
in
lods
pushf
jmp
add
and
mov
pop
mov
cmp
(bad)
fld
inc
mov
mov
rcr
dec
cmp
enter
scas
dec
and
sbb
mov
sbb
push
mov
push
and
jo
pop
jbe
pop
push
fiadd
mov
add
mov
imul
clc
(bad)
fstp
int3
(bad)
imul
push
movsx
dec
jne
mov
rol
shl
je
or
xor
push
fisubr
call
jno
movs
and
or
nop
cwde
jmp
mov
nop
dec
adc
cld
jmp
dec
adc
xor
mov
inc
lock
cmp
mov
popf
sub
mov
(bad)
fcom
or
add
adc
rol
test
xchg
push
pusha
inc
mov
mov
dec
cmp
xchg
sbb
fist
or
shr
dec
shl
rcl
dec
push
sbb
int3
int3
and
enter
leave
enter
sbb
and
xchg
(bad)
shr
enter
xor
pop
pushf
jnp
and
loop
aas
ret
pop
int3
adc
aam
add
mov
fdivr
(bad)
fwait
add
icebp
push
nop
adc
mov
sbb
adc
dec
cmp
push
sbb
mov
adc
ins
es
sbb
out
ins
ret
push
sbb
mov
cmp
or
(bad)
push
loopne
or
stos
adc
scas
sbb
sbb
push
out
sbb
shl
mov
ss
push
mov
out
and
(bad)
xchg
pop
dec
xor
pop
bound
lock
cld
test
jbe
mov
(bad)
ss
and
jge
cmp
and
jnp
or
add
jle
xor
add
fistp
pusha
ins
mov
add
pop
int
cmp
inc
loop
fld
xchg
jmp
mov
shl
and
out
int3
in
inc
lock
and
ss
retf
aas
mov
shl
sub
pxor
sub
and
ret
(bad)
(bad)
fimul
outs
xor
punpcklbw
paddw
and
push
dec
adc
inc
dec
jo
ror
out
sar
adc
mul
in
add
into
es
sbb
pop
imul
lahf
sbb
data16
fsub
cmp
add
cmps
xor
aaa
pushw
or
rol
aas
inc
inc
inc
shl
popa
adc
into
aam
cmp
fisub
clc
(bad)
leave
cmp
push
jo
lahf
xchg
or
repnz
or
dec
pop
and
pop
add
lea
cmps
mov
popa
test
mov
jge
sub
and
dec
add
clc
mul
mov
xchg
xchg
sub
sbb
dec
movs
or
push
ins
movs
or
mov
ret
mov
cmp
adc
inc
jae
div
adc
lea
setp
mov
cwde
mov
add
call
dec
fs
in
add
push
sbb
mov
sub
fs
push
jo
sub
mul
(bad)
xchg
add
aam
data16
add
mov
sub
test
test
mov
rcl
xlat
(bad)
ret
push
aaa
jmp
add
pop
xchg
js
push
cmp
lea
push
pop
push
sbb
out
inc
out
add
mov
lods
sub
loopne
fcom
cdq
add
jp
xor
loop
jecxz
mov
je
jb
add
mov
adc
add
jecxz
adc
ror
sub
inc
pusha
imul
movs
call
hlt
inc
mov
jg
js
pop
leave
stos
fs
xchg
cmp
mov
test
add
fidiv
adc
add
addr16
imul
push
movs
mov
sub
das
add
cmc
aad
push
and
icebp
mov
imul
add
lods
punpcklwd
mov
test
std
aaa
imul
hlt
ret
or
mov
cld
sbb
jl
push
add
rcl
pop
pop
mov
mov
mov
daa
shr
aas
add
xlat
push
sub
push
and
icebp
or
and
push
pop
jnp
and
or
outs
or
mov
ins
cdq
cmps
sub
add
jo
clc
jo
add
adc
psllw
std
shl
sub
loopne
sbb
rcl
adc
or
pop
aam
test
shr
sub
push
jmp
mov
out
adc
data16
repnz
add
shl
sbb
std
test
test
jbe
inc
in
in
outs
jo
adc
jmp
hlt
aam
lods
daa
mov
ins
pop
jecxz
sbb
cmp
or
rol
mov
and
aas
push
add
mov
pop
xor
push
stos
or
test
pop
jb
sbb
or
add
mov
(bad)
in
xchg
rol
cmp
push
add
add
sub
sub
and
jmp
sub
cmp
fdivr
test
xor
fs
fld
adc
sahf
and
add
(bad)
pop
cwde
(bad)
aas
xor
mov
xlat
in
in
cmp
shl
fwait
test
xlat
fnsave
clc
add
div
add
adc
mov
mov
imul
sub
jbe
mov
js
movs
add
stos
stos
cmp
sbb
inc
cld
in
addps
fmul
nop
mov
popa
dec
xor
jne
pop
sbb
add
out
cdq
sub
ror
adc
je
jo
or
pop
adc
sbb
popf
pop
or
ret
and
mov
add
and
imul
test
jl
pop
lea
jo
xchg
inc
out
mov
fcmove
pop
mov
sbb
inc
or
jb
clc
dec
cmps
pusha
pop
call
hlt
popa
jle
shr
and
das
sbb
stos
rol
jge
fsub
or
cmp
adc
push
mov
or
xchg
push
mov
ret
ss
out
xchg
xor
jmp
pop
ret
mov
xchg
fsub
js
sbb
lods
sub
cmps
nop
sub
mov
call
adc
jbe
and
js
sbb
nop
add
pop
push
push
cmp
add
pop
push
retf
fmul
adc
mov
adc
inc
ret
sbb
movs
or
loop
test
pop
cmps
fmul
fsub
cmps
inc
je
out
lahf
dec
or
xlat
push
test
imul
xchg
popf
inc
inc
clc
jmp
fwait
sbb
mov
int
push
ins
clc
fsubrp
push
jbe
add
adc
je
ror
cmp
xor
or
test
fisubr
inc
mov
cmp
mov
jo
inc
test
pop
stos
mov
push
scas
push
nop
out
hlt
sub
ins
mov
mov
lds
je
cmp
dec
repnz
add
hlt
inc
not
rcr
adc
mov
jmp
inc
mov
inc
out
mov
add
fdivr
push
fwait
inc
jmp
loopne
jbe
fstp
fwait
adc
and
iret
inc
cmp
out
add
sbb
ror
sbb
xor
ret
xchg
adc
jg
test
dec
call
xor
xstore-rng
cmps
add
or
sub
jg
and
clc
sbb
push
and
rol
and
cmovl
cmp
dec
into
jnp
scas
inc
loope
adc
std
out
jae
add
inc
rcr
dec
das
add
mov
cmp
xor
push
movs
sbb
mov
jmp
mov
sub
fidiv
push
push
xchg
imul
pop
bound
fist
dec
ret
inc
cs
adc
shl
xchg
xor
shr
mov
sbb
pop
ret
add
icebp
jne
add
mov
call
fisttp
push
sub
sar
or
(bad)
call
or
aam
jne
or
mov
or
inc
test
adc
mov
call
sub
sbb
scas
inc
mov
mov
hlt
adc
pop
loop
dec
les
lock
fst
gs
cmp
and
lock
sbb
scas
xor
jmp
loope
std
(bad)
je
dec
je
add
inc
jmp
cmp
scas
ror
loopne
mov
stos
in
or
fmul
sub
sub
arpl
xchg
adc
or
fdivr
ss
xchg
shl
cmps
(bad)
test
dec
jl
push
sbb
loopne
xor
pop
and
jmp
sub
adc
inc
popa
iret
inc
cmp
push
xchg
shl
lea
and
cwde
mov
fsubr
dec
iret
xchg
mov
mov
sub
inc
jmp
in
mov
mov
mov
cmp
mov
adc
seta
scas
lds
and
and
mov
jbe
adc
mov
data16
call
mov
sbb
push
sbb
dec
loopne
sub
into
adc
rol
outs
cmps
pushf
test
adc
and
jbe
jae
mov
pop
leave
js
push
jle
ret
dec
mov
ins
test
mov
mov
xor
dec
jnp
dec
and
jg
mov
mov
pop
or
enter
xchg
mov
sub
sar
push
sub
jle
xchg
mov
sub
into
sar
sbb
fnstsw
dec
dec
mov
inc
fcmovb
mov
prefetcht0
xor
dec
jp
into
add
sub
arpl
xor
xlat
call
loope
mov
dec
sbb
xor
add
mov
and
dec
mov
stos
push
les
cmps
gs
add
adc
fldenv
lea
gs
inc
movs
mov
(bad)
jne
ficom
sub
fidiv
test
or
mov
pushf
std
or
jmp
push
lock
push
ror
imul
sub
mov
push
loopne
jg
inc
or
ror
ror
push
nop
pop
not
pop
or
inc
mov
gs
and
nop
mov
je
add
pop
push
add
jb
sub
xor
inc
test
test
test
test
adc
or
push
inc
call
and
push
jno
jno
mov
mov
test
retf
inc
push
ret
je
cmps
lods
mov
shr
leave
push
xor
mov
push
popa
cmp
inc
sub
movs
movs
mov
dec
pop
push
test
jmp
add
mov
sub
add
add
ret
adc
or
clc
adc
cli
jo
xchg
dec
xchg
ins
or
dec
cmc
test
push
mov
push
xor
scas
xlat
add
adc
retf
rol
fbld
push
mov
adc
mov
push
imul
test
ins
enter
mov
cmp
in
mov
loopne
int
in
sbb
scas
mov
js
sub
loopne
ins
mov
adc
mov
and
mov
pop
add
out
sti
psraw
leave
xor
dec
mov
test
ret
mov
add
jbe
add
sti
mov
sub
shr
add
mov
add
out
add
in
sub
lock
loope
push
fld
std
dec
pusha
test
imul
enter
mov
inc
fmul
adc
inc
hlt
add
rcl
xchg
mov
cmp
inc
cmp
ins
int3
cmp
inc
cmp
cmp
push
push
inc
cs
adc
pusha
pop
push
adc
inc
sub
add
add
out
or
inc
lahf
cmp
add
cli
inc
add
jnp
push
mov
push
sahf
sub
and
adc
ror
(bad)
sub
add
push
push
mov
ret
sub
jnp
jo
jl
sbb
pop
enter
mov
cmp
mov
or
mov
mov
stos
in
repnz
popf
cmp
xor
jne
mov
xchg
xchg
xchg
fcom
enter
sub
xor
cmp
and
stos
pop
dec
hlt
rol
stos
jbe
imul
ss
xchg
test
sub
xor
mov
in
shl
jecxz
movs
cld
loopne
(bad)
dec
imul
ins
cmp
out
pop
(bad)
xor
icebp
movs
stos
rcr
lock
push
lods
adc
push
nop
dec
xchg
push
(bad)
rcl
enter
jae
add
dec
sub
cmc
es
retf
mov
dec
out
push
repnz
or
sbb
fwait
mov
dec
cld
push
out
xor
push
shr
div
in
repz
hlt
mov
add
inc
(bad)
int
sub
shl
adc
cmps
xchg
xchg
adc
ret
lods
or
retf
movs
test
jbe
jmp
inc
in
(bad)
or
inc
jmp
cmp
outs
mov
movs
dec
add
add
sub
leave
leave
add
sub
sub
jbe
or
fs
pusha
sub
gs
dec
sub
cs
pop
and
cmp
pop
sub
sbb
adc
cmp
rcl
jmp
repz
add
push
cmp
pop
push
xchg
imul
sub
stos
popa
push
ficomp
add
pop
xor
push
or
push
xor
push
sub
in
nop
push
push
jmp
and
and
fidiv
push
popa
add
mov
sbb
mov
call
sub
xor
jne
pop
clc
lea
dec
adc
lods
sub
jae
je
test
adc
sub
adc
or
push
nop
mov
popa
pushf
hlt
jl
inc
cmp
pop
fdivr
inc
loopne
das
cmp
xor
dec
mov
and
daa
sar
lahf
xor
movs
inc
xchg
cmps
sbb
and
push
lods
xchg
sub
movd
mov
dec
and
in
xor
in
adc
jbe
daa
xchg
mov
out
jle
pop
inc
jge
inc
inc
jno
jle
rcl
inc
cmp
fcmovbe
mov
int
sub
fisttp
cmp
sbb
mov
dec
ja
dec
outs
shr
test
jb
(bad)
xor
fs
jo
(bad)
adc
fisttp
lock
mov
lahf
fadd
or
fcmovbe
push
call
or
adc
call
sub
(bad)
mov
sub
(bad)
popa
inc
cs
or
ror
sub
and
(bad)
fdiv
push
jecxz
xchg
push
out
pop
inc
out
xchg
neg
adc
add
pop
and
mov
push
jmp
sub
and
jg
or
fisub
or
fadd
jmp
sub
lods
cmps
push
jle
pop
push
lds
cmp
ins
and
cmp
jne
bound
pop
adc
(bad)
(bad)
(bad)
arpl
mov
and
jmp
adc
cmp
data16
xor
pop
add
push
cmp
xchg
dec
mov
fdiv
outs
cmp
xchg
daa
shl
cmp
in
and
mov
sub
ss
fwait
xchg
jg
sub
sbb
xchg
pop
popf
bound
push
sub
mov
cmc
xor
out
or
loopne
jne
push
pop
leave
xchg
jle
cli
cmp
jl
mov
fimul
in
sub
and
cmp
fwait
or
sbb
xor
xor
mov
jmp
retf
add
add
lock
mov
clc
mov
jg
fst
jge
movs
cmp
inc
fwait
cmc
div
les
add
mov
loopne
in
inc
sbb
mov
lock
jo
loopne
adc
inc
push
xor
sahf
inc
and
pop
imul
jbe
lods
xchg
fwait
(bad)
jo
ins
sbb
fs
(bad)
les
cli
and
add
dec
cmps
add
cli
push
lock
xchg
outs
fsubr
call
sbb
pop
adc
les
test
and
dec
jnp
jmp
(bad)
jne
sub
shl
xchg
fmul
cmp
clc
fdivr
test
(bad)
inc
pop
mov
lods
js
loope
shl
add
ins
js
ins
lods
mov
imul
push
and
push
xor
in
or
out
nop
or
call
cmp
push
arpl
cmps
stos
inc
cli
inc
or
fisubr
aaa
pop
cwde
fdiv
push
mov
retf
and
call
push
jge
push
loop
movs
imul
aam
adc
mov
sub
add
dec
fsubr
mov
lahf
stc
cmps
out
dec
sbb
sbb
nop
scas
xchg
xor
pop
push
sub
mov
push
cdq
fsubr
jecxz
and
xchg
add
mov
xchg
adc
xchg
add
pop
xchg
mov
jnp
daa
push
xor
sub
pop
pop
ficom
inc
inc
inc
and
or
push
(bad)
mov
sbb
or
dec
dec
inc
jns
ss
fnsave
inc
add
das
push
mov
fild
in
xchg
xchg
pushf
dec
enter
aam
imul
inc
pop
jb
out
scas
inc
popa
popa
sti
popf
push
push
dec
sti
push
add
pop
sub
add
test
mov
adc
push
sbb
pop
inc
adc
in
lods
lss
mov
rol
loopne
jnp
lods
fild
push
in
adc
push
out
sahf
and
sub
xchg
scas
cwde
add
mov
and
jb
or
test
mov
mov
test
mov
pop
or
sbb
add
or
sub
and
adc
dec
add
or
xchg
lea
xor
pop
add
(bad)
loop
mov
adc
push
xor
fiadd
lock
sbb
sbb
mov
inc
dec
(bad)
ror
inc
or
add
lock
ss
add
loopne
push
dec
pop
adc
aas
xor
cmc
scas
inc
sbb
inc
sbb
test
add
pop
fisttp
pop
mov
scas
xor
or
inc
inc
retf
mov
pop
xor
mov
dec
xor
add
and
add
rcr
outs
imul
or
lea
sbb
pop
pusha
and
and
fs
and
je
jl
mov
out
dec
xchg
imul
idiv
(bad)
aad
xchg
ins
ror
rcr
in
sub
pop
test
or
in
push
cdq
nop
xchg
push
in
sub
jo
je
test
test
popa
and
pop
fisub
pop
sbb
xor
push
out
clc
inc
loope
mov
rol
mov
leave
xchg
xchg
(bad)
mov
mov
sbb
outs
sub
mov
jbe
xor
in
call
mov
xor
fcom
das
and
sbb
push
or
(bad)
shl
int
dec
gs
jae
pop
and
pandn
push
lahf
pop
adc
pop
push
push
push
or
add
aam
out
sbb
inc
pop
aad
mov
push
add
mov
add
imul
dec
ror
adc
mov
daa
fwait
ret
cmp
adc
imul
cmp
push
fstp
out
stos
ja
sbb
push
out
pop
and
out
(bad)
cmps
in
test
out
movs
cdq
sbb
mov
mov
jecxz
dec
add
sbb
call
push
jmp
and
pop
mov
and
test
jb
jmp
or
or
imul
xchg
ffreep
and
cs
or
fst
pusha
pop
pushf
inc
add
rol
out
mov
je
aam
pop
mov
adc
add
and
fstp
or
push
inc
out
mov
add
mov
shl
xlat
pop
sbb
pusha
test
cmp
push
add
fimul
push
sbb
inc
mov
ds
add
adc
aad
pop
xor
fdivr
add
inc
fdivr
add
jl
mov
xor
push
add
cwde
ins
les
cs
push
int3
add
sbb
push
inc
call
inc
mov
sbb
and
add
lahf
sbb
cmp
out
or
inc
jecxz
test
loopne
jno
outs
push
add
ins
mov
sub
je
xor
dec
add
outs
or
xchg
mov
add
retf
mov
jge
rcr
cmp
mov
stos
out
(bad)
jl
popf
cli
mov
out
out
or
jmp
frstor
dec
xchg
clc
aaa
add
or
(bad)
or
mov
movs
dec
adc
inc
mov
dec
sbb
imul
jne
leave
sbb
cmp
jnp
movq
push
sub
sub
je
push
push
cwde
lods
cmp
or
ds
ja
sub
or
inc
fiadd
mov
ror
mov
pand
psrld
(bad)
adc
por
jle
emms
js
jmp
adc
add
mov
add
add
xchg
sub
sbb
jl
or
test
and
es
lea
mov
sub
or
pop
sbb
or
dec
and
jmp
sbb
mov
movs
inc
and
push
sbb
sar
and
ss
cmps
mov
fcmovb
jno
cmps
push
sbb
inc
stc
jnp
mov
retf
dec
and
inc
cli
adc
sbb
adc
push
mov
sub
pop
xlat
repz
inc
and
push
aam
inc
or
test
sub
rcl
inc
mov
inc
arpl
out
push
out
xor
sbb
movs
xor
and
sbb
movntps
xor
and
push
adc
add
push
jb
xor
call
sub
or
jg
mov
ins
add
retf
aaa
add
leave
enter
fsub
jbe
sbb
retf
add
(bad)
cmp
sub
jl
inc
retf
fs
xor
dec
mov
cmp
clc
mov
(bad)
xor
std
call
(bad)
sub
movups
(bad)
lods
sub
bound
shl
add
aaa
les
cmp
jge
idiv
and
push
push
rcr
sar
xchg
sbb
or
orps
or
or
xchg
movs
sub
xchg
idiv
mov
pop
jmp
in
jp
mov
stos
shl
les
fstp
hlt
adc
and
adc
rcr
add
shl
retf
test
pop
sar
add
fcmovnb
ret
shl
sub
lods
pshufw
xor
add
call
nop
adc
icebp
add
loope
fiadd
xchg
es
ss
add
mov
adc
fs
xlat
and
hlt
mov
jle
push
dec
sub
data16
xor
call
shl
xor
mov
sbb
or
jmp
xor
and
xchg
sub
es
xchg
test
cmp
out
pop
popa
cmps
mov
add
loop
aam
inc
or
sbb
jp
cmp
adc
jp
pop
add
out
cs
mov
dec
add
dec
or
(bad)
cmp
adc
outs
hlt
(bad)
add
sbb
xor
and
js
push
mov
push
mov
mov
pop
mov
test
sub
or
lods
jmp
scas
lock
jne
repnz
std
out
inc
add
shl
mov
shr
sub
loop
xchg
cmc
popa
outs
daa
outs
add
sub
mov
sbb
xor
add
or
not
cmp
rol
adc
add
add
or
cmp
mov
sub
inc
dec
or
loopne
cwde
nop
dec
outs
adc
imul
addr16
rol
jle
inc
cmp
dec
dec
jl
inc
adc
push
pop
and
pop
inc
sub
xor
xchg
add
test
adc
and
add
int
adc
add
or
call
or
mov
adc
xor
and
adc
add
shr
cs
pop
bound
pop
arpl
call
movs
movs
inc
out
dec
dec
leave
mov
dec
out
inc
lods
or
call
mov
in
loope
add
rcl
gs
adc
shl
popf
dec
xor
fisub
out
mov
push
sbb
sbb
sahf
cmps
test
and
aad
ret
pop
and
xchg
out
mov
add
inc
jbe
xchg
mov
loopne
and
add
mov
adc
push
or
and
xor
pop
mov
xchg
xchg
add
pusha
retf
pop
sbb
into
pop
je
mov
inc
add
xchg
cmp
sub
sbb
or
or
dec
out
cmp
push
cmp
cmp
sub
push
movs
cmps
cmp
repnz
ds
aas
or
aaa
fmul
push
sahf
(bad)
jmp
or
mov
rol
xlat
sbb
mul
fidivr
aad
push
and
xor
or
lock
xor
mov
mov
and
adc
add
mov
and
push
je
test
dec
sbb
sti
adc
shl
adc
dec
bswap
fcmovb
mov
ret
adc
cmp
ds
sub
cdq
nop
inc
dec
inc
jl
mov
push
pop
lock
dec
lock
push
sbb
push
sbb
test
push
out
xchg
mov
push
outs
loopne
jb
adc
push
fs
sub
mov
test
mov
add
and
test
pushf
fs
cmps
jl
bound
out
call
addr16
cmp
sub
into
jae
sbb
add
dec
sub
je
sub
fdiv
mov
jbe
mov
mov
outs
sub
movs
add
jo
mov
ret
push
dec
sbb
add
push
das
sub
dec
xchg
lea
xchg
mov
ins
xor
repnz
test
sbb
fild
push
adc
cmp
inc
and
mov
(bad)
out
dec
adc
sub
mov
xchg
(bad)
cs
out
add
dec
das
cmp
jmp
mov
push
fiadd
ret
bound
mov
loop
sbb
adc
fbstp
mov
xor
invd
les
stos
xchg
inc
jg
jne
mov
(bad)
dec
push
inc
pop
ins
cmp
dec
jl
call
sbb
xor
rcr
sbb
and
jb
jno
ret
enter
mov
out
mov
pop
pop
xchg
scas
pop
sbb
imul
add
and
mov
daa
add
pop
scas
push
push
repnz
inc
out
fadd
jne
psraw
in
cmp
push
cs
adc
mov
pop
push
mov
adc
imul
popa
dec
mov
cld
mov
cmp
mov
pop
lahf
fwait
ja
imul
les
or
xchg
add
dec
push
rcr
cmp
add
ss
adc
push
mov
add
mov
and
test
cmp
xor
adc
or
lods
jmp
nop
retf
xor
xor
xchg
and
lods
mov
xchg
push
movs
mov
test
jae
aaa
mov
jle
sub
sub
add
shl
in
and
xchg
out
add
cmps
pushf
sahf
adc
xor
sub
cwde
jle
dec
mov
sub
fdivr
rol
and
das
and
xor
inc
and
test
or
dec
loopne
pop
aaa
add
(bad)
push
fisttp
adc
iret
jne
xor
mov
jae
or
je
dec
dec
or
cmovo
xchg
nop
nop
xor
push
mov
or
mov
cmp
cld
outs
ss
or
test
push
pop
mov
add
or
xor
push
fcom
inc
shl
fsub
enter
sbb
xchg
mov
jl
ja
sar
inc
into
call
adc
jmp
pop
outs
adc
jne
or
jne
jnp
and
dec
in
and
adc
test
add
les
dec
lods
js
inc
xchg
les
mov
paddq
adc
or
fcom
popa
mov
inc
inc
sahf
bound
scas
dec
inc
outs
loope
dec
push
sub
inc
(bad)
pusha
in
adc
cmps
xor
in
add
loop
jle
mov
dec
fadd
sbb
retf
xor
pop
movs
test
pop
xchg
xor
or
jmp
and
sbb
mov
int3
push
shl
cmp
and
or
aaa
jo
jo
pop
fimul
ins
int3
retf
icebp
inc
pop
push
push
imul
les
pop
in
push
fs
fs
not
shl
sbb
rcl
fwait
xor
or
jmp
pop
pop
fwait
mov
ja
pop
or
cmp
adc
push
dec
push
rcr
mov
mov
and
inc
sub
inc
and
jne
push
xor
out
pop
pop
rol
div
inc
push
xor
call
es
jmp
add
repnz
pop
fdiv
sar
mov
push
xlat
adc
int3
xor
clc
cmp
mov
ins
imul
xor
imul
push
mov
fdivr
add
gs
in
push
retf
cdq
pop
ret
jo
and
movs
mov
sbb
inc
popf
or
mov
jle
adc
add
jae
and
adc
mov
sub
jno
pop
je
push
mov
push
aaa
xchg
inc
or
pop
mov
push
hlt
jge
adc
mov
mov
sbb
icebp
mov
out
xchg
mov
add
sub
and
cmps
sub
inc
inc
call
sub
mov
pop
add
mov
cs
xchg
ins
in
ins
icebp
clc
add
inc
push
cmp
add
retf
stos
mov
dec
adc
dec
and
inc
inc
jge
mov
ror
shl
js
dec
sbb
mov
(bad)
xor
inc
inc
or
jo
je
rol
leave
push
mov
and
repnz
mov
mov
push
sar
loope
retf
loop
inc
cmp
and
rol
inc
shr
shr
cmp
and
cmp
push
shl
sub
mov
jns
dec
mov
js
xchg
add
sbb
test
add
out
push
pop
inc
xor
jb
and
dec
leave
adc
fs
loopne
(bad)
outs
dec
lds
and
xchg
sub
daa
inc
mov
jl
pop
push
adc
xchg
mov
add
dec
add
pop
add
jns
xchg
inc
push
or
jnp
xchg
jnp
add
sub
fcom
push
inc
repnz
add
or
push
sub
mov
sbb
jle
xor
push
add
ss
push
jne
or
xor
push
jge
ins
es
mov
pop
pop
movzx
test
dec
jp
fadd
ja
loope
call
xchg
adc
or
in
inc
and
or
dec
inc
sub
cmp
repz
pop
sbb
ins
xlat
adc
jmp
and
ds
xchg
jb
fisttp
jne
jg
dec
sbb
(bad)
lds
add
xor
push
lods
loopne
gs
mov
xchg
neg
push
cmp
xor
pop
(bad)
fidiv
inc
dec
cmp
ss
xor
or
mov
add
shl
or
gs
sub
or
and
dec
mov
inc
int3
inc
cmps
jge
ds
hlt
into
mov
inc
fcomp
cmovo
xor
mov
sub
mov
inc
push
hlt
xchg
jbe
pop
dec
dec
xor
dec
xchg
sbb
test
push
pop
mov
in
xor
dec
add
loopne
xlat
sbb
and
xchg
add
rcr
lahf
outs
pop
imul
add
mov
jg
push
retf
inc
add
jae
jno
aas
pop
mov
nop
jmp
adc
cmps
retf
xor
scas
mov
sub
xchg
mov
xchg
cdq
mov
jbe
add
(bad)
ror
mov
inc
sub
in
inc
dec
cmc
lea
out
ss
xor
add
(bad)
bound
hlt
rcl
xor
cmp
jnp
call
popf
scas
out
nop
xchg
cli
push
cmp
mov
sbb
sti
jmp
inc
sbb
mov
in
nop
ret
pushf
in
mov
cmp
or
and
call
sub
jle
xor
or
test
dec
pushf
cmps
jne
fcomp
add
stos
sbb
and
jmp
std
add
add
out
enter
enter
adc
dec
mov
or
lock
stc
sub
xchg
cmp
cmp
xchg
add
ret
shr
cmp
mov
popa
call
pop
push
sbb
adc
ins
dec
mov
cmp
ds
dec
test
xchg
mov
lock
cdq
add
retf
loopne
jns
rcl
sbb
(bad)
in
stos
int
add
mov
or
aas
mov
pusha
mul
adc
sbb
xor
jmp
pop
test
jae
je
mov
jge
imul
(bad)
ja
adc
nop
inc
jle
neg
loop
sbb
dec
pushf
mov
test
das
cmp
push
xor
jmp
lock
lahf
mov
push
add
les
iret
(bad)
rcl
mov
mov
xor
pop
sbb
fs
cli
cmps
mov
int3
xchg
lock
cld
call
mov
sahf
fimul
inc
add
adc
xchg
sbb
mov
jae
cmps
ja
inc
jns
outs
outs
inc
xor
call
scas
mov
or
xor
and
ror
dec
jg
iret
movs
jmp
(bad)
out
iret
pop
and
fld
enter
mov
adc
sbb
add
or
dec
mov
(bad)
jg
(bad)
fimul
adc
sbb
dec
movs
push
xor
and
(bad)
call
mov
pandn
mov
sar
bound
jb
nop
or
cwde
or
and
ja
(bad)
les
dec
stos
retf
(bad)
hlt
pop
and
jae
std
add
push
push
movs
xchg
and
or
repnz
js
mov
dec
push
jns
mov
push
add
sbb
sub
push
sub
add
add
jo
adc
test
outs
mov
dec
jne
mov
inc
je
jmp
sub
fld
sbb
mov
pop
add
jno
cld
sbb
adc
sbb
lock
push
shl
mov
fsub
adc
fild
hlt
or
jg
iret
ins
jbe
pop
xor
ss
repnz
push
inc
cmp
nop
pop
pop
mov
pop
pop
add
hlt
push
loopne
stc
sahf
div
mov
pop
push
push
test
rol
aaa
pop
adc
push
mov
adc
sbb
adc
repnz
jle
mov
fdiv
test
sub
mov
aas
iret
ins
in
inc
push
pop
xor
mov
lahf
or
adc
jne
inc
add
mov
ds
push
sahf
retw
sbb
je
ror
sub
and
imul
pop
(bad)
and
push
pop
movs
test
mov
pop
sub
cmp
add
adc
inc
push
cmp
push
add
cmp
mov
fild
xor
cmp
fs
popa
mov
test
push
or
jmp
adc
or
nop
and
cmp
inc
into
adc
fmul
ins
or
cmp
mov
or
or
adc
les
sbb
push
aam
push
mov
push
fs
push
dec
adc
mov
push
fs
mov
dec
fnsave
adc
and
dec
or
fld
clc
cld
or
push
xchg
inc
inc
mov
int3
add
repz
repz
xchg
fwait
movs
fidivr
out
nop
ficomp
in
out
repz
clts
cwde
movs
iret
repz
aaa
inc
dec
push
pop
imul
jae
push
jmp
into
idiv
mov
(bad)
rol
sbb
repz
repz
aaa
add
repz
add
lds
cs
adc
outs
jns
ss
sub
ss
pop
sbb
(bad)
ss
mul
ror
mov
ss
es
nop
push
push
or
push
aaa
in
push
lahf
xchg
pusha
adc
sbb
pushf
je
mov
push
leave
mov
add
dec
adc
das
es
jo
pop
or
dec
inc
pusha
(bad)
fnstenv
pop
and
adc
push
inc
dec
or
fild
sbb
inc
push
pop
iret
mov
pop
sbb
clc
sahf
imul
push
lods
push
test
mov
ss
mov
movs
mov
mov
neg
popa
adc
push
mov
and
fild
es
nop
shl
call
shl
fdecstp
and
and
adc
outs
inc
add
dec
adc
arpl
popa
and
or
or
nop
hlt
sub
jl
pop
xor
out
sub
or
xchg
jns
mov
and
jp
or
fs
sbb
gs
jne
in
add
cmps
sub
push
mov
push
ror
adc
add
lea
fidivr
test
add
mov
xor
sub
mov
aad
or
nop
dec
das
inc
adc
repnz
mov
pop
cld
outs
jns
or
je
jbe
gs
cmps
call
cwde
loope
mov
out
(bad)
adc
ret
icebp
push
dec
inc
dec
or
shl
clc
or
mov
cwde
push
lahf
leave
push
pop
test
adc
mov
mov
fisttp
bound
or
test
rol
div
or
dec
add
inc
in
enter
pop
ror
adc
int
in
pushf
inc
popw
je
pop
retf
or
std
pop
sbb
mov
mov
add
(bad)
or
inc
pusha
or
addr16
adc
mov
sub
add
add
nop
bound
push
fsub
aas
mov
add
mov
sbb
rol
add
jno
jp
jbe
inc
aam
repz
add
aaa
loope
sbb
ret
jo
sub
xor
xchg
dec
inc
mov
jmp
in
in
je
jmp
enter
(bad)
in
out
push
and
aam
add
nop
loopne
inc
aad
adc
loopne
pop
leave
xchg
loopne
call
inc
or
dec
test
and
adc
(bad)
in
dec
dec
xor
test
push
imul
lea
fisttp
popa
test
cmc
xor
call
and
div
sbb
mov
movs
jl
jo
test
pop
ret
inc
xor
nop
xchg
pop
ret
aas
ins
mov
ins
lods
jg
cwde
jbe
out
pop
inc
cmp
in
(bad)
push
dec
push
dec
inc
push
adc
jnp
push
mov
shl
push
push
in
add
adc
loopne
and
inc
push
mov
pusha
or
dec
push
repz
inc
inc
add
mov
in
cli
out
dec
adc
cli
lea
mov
sub
add
or
out
mov
sub
mov
jae
hlt
jp
add
or
test
outs
(bad)
movs
add
push
add
add
or
pop
pop
in
push
add
mov
sub
ja
fs
std
cmc
mov
pushf
fs
and
pop
and
pop
out
push
add
ret
bound
fnsave
mov
dec
pop
call
cmps
leave
mov
fs
cmp
xchg
addr16
sbb
mov
mov
push
or
jbe
cwde
test
pop
loopne
pop
or
or
sbb
dec
sar
ins
or
cdq
icebp
jb
test
in
cmp
bound
add
lods
or
call
mov
cmp
dec
xchg
nop
es
mov
pop
push
xchg
push
jae
adc
lock
cmp
pop
test
lods
int3
pop
adc
popa
call
mov
sti
dec
xor
sbb
es
mov
in
or
mov
cmp
push
sbb
pop
aaa
in
dec
add
mov
dec
adc
push
inc
outs
xchg
(bad)
test
and
fwait
pusha
mov
pop
dec
mov
imul
mov
(bad)
in
mov
(bad)
adc
loopne
inc
jb
ja
jmp
ins
fld
adc
std
xchg
into
adc
idiv
test
adc
sub
(bad)
fdiv
mov
mov
out
repz
cmp
pop
push
jo
add
popa
or
jo
mov
call
dec
imul
jge
xor
sub
hlt
daa
sbb
mov
sbb
xchg
xchg
add
cs
fdivr
out
add
sar
jmp
loop
nop
lahf
pop
test
or
data16
or
fwait
mul
or
in
pop
inc
push
ret
psubsw
ins
jnp
(bad)
cli
ins
mov
and
fisttp
or
push
iret
or
into
xchg
push
and
movs
fist
xchg
stc
dec
stc
pusha
cmp
pop
and
lods
frstor
add
rol
jns
int3
ror
inc
xchg
jl
mov
nop
and
aaa
pop
bound
or
and
call
sub
jae
dec
enter
pop
test
scas
xchg
or
rcl
leave
xchg
scas
xor
xor
pop
push
cmp
sbb
xor
das
pop
and
outs
in
call
aad
fs
rol
dec
or
jmp
mov
aas
add
inc
pop
add
dec
retf
push
js
xor
mov
mov
iret
ja
adc
push
or
inc
test
jg
pop
xchg
mov
dec
add
and
sub
(bad)
pusha
sbb
mov
xchg
test
inc
lea
in
fwait
mov
lea
xor
(bad)
lods
push
jl
pop
xor
je
push
adc
xchg
cmp
cmp
push
ins
push
loopne
fdivr
mov
fdivr
or
push
int3
cmp
dec
repz
sub
and
rcr
push
mov
push
pusha
sahf
mov
pop
shr
push
push
scas
push
push
push
pop
fisubr
sbb
mov
cmp
jns
sub
fistp
push
inc
sahf
inc
sub
daa
daa
and
lock
jg
inc
adc
jl
sub
sbb
dec
ret
adc
imul
pop
push
fisubr
in
jno
ficom
push
xchg
into
and
dec
push
jge
pop
jb
inc
sbb
push
jo
test
sbb
and
or
add
repnz
adc
pop
pop
jge
jns
or
inc
add
or
xchg
mov
sbb
push
inc
sub
nop
mov
push
loopne
fiadd
inc
dec
adc
cdq
sbb
dec
cs
sar
jl
pop
and
sbb
shl
dec
inc
or
jo
popa
adc
jle
and
push
inc
enter
inc
enter
repz
rcr
lock
add
or
cmp
loop
add
clc
add
ror
pop
imul
pop
adc
jno
mov
mov
test
sub
rol
dec
enter
sti
push
pop
enter
inc
mov
or
out
inc
sub
pop
pop
and
test
mov
xchg
jl
and
test
or
xchg
push
mov
lods
sbb
inc
test
add
or
outs
add
or
test
sbb
into
les
lds
add
push
jns
and
movs
adc
test
sub
or
pop
scas
(bad)
xor
adc
or
and
imul
das
repnz
lds
push
sti
sbb
add
push
push
add
pop
xor
lods
mov
push
scas
or
in
add
inc
inc
mov
sbb
or
jp
adc
mov
and
ja
mov
pop
ficomp
pop
fmul
fimul
xchg
popf
js
dec
fsub
inc
pop
cmps
pop
dec
pusha
pop
cmp
clc
mov
push
push
movs
pop
dec
ins
dec
or
sbb
inc
cmp
sbb
pop
sub
mov
or
jle
sub
fs
dec
add
ret
das
xchg
dec
dec
imul
mov
ror
inc
in
add
pop
add
or
enter
call
and
push
push
inc
jle
(bad)
nop
and
push
adc
(bad)
pusha
push
lods
sbb
cmp
mov
mov
mov
pop
sub
ja
cmps
call
add
dec
ins
ffreep
test
jo
push
outs
cmp
gs
adc
xor
jecxz
jmp
fs
outs
adc
xchg
xor
pop
fmul
loop
lods
adc
cmp
adc
and
sbb
sub
adc
sete
adc
pop
add
ret
dec
cdq
dec
pop
shl
xor
and
lock
das
xor
cmp
ins
pop
or
(bad)
setne
sbb
repnz
out
push
iret
push
add
clc
add
pop
dec
dec
(bad)
xor
mov
enter
clc
mov
ror
sbb
lahf
add
and
lds
xchg
add
sub
js
pop
xchg
jns
js
pop
mov
and
adc
adc
or
cmp
or
pop
pop
into
and
sbb
push
push
mov
cmp
jle
sub
jle
xor
and
push
push
pop
adc
mov
lahf
fcmovnu
jle
cmps
cmp
xor
jmp
mov
mov
jb
imul
mov
jmp
js
and
lods
repnz
add
and
inc
or
or
test
or
sub
jl
jge
int
dec
pop
test
dec
clc
mov
aam
test
not
js
push
inc
fadd
sbb
mov
adc
xor
push
test
add
aaa
imul
icebp
add
dec
(bad)
cmp
mov
pop
ss
and
push
cs
and
add
scas
retf
jnp
push
and
repnz
jge
cmp
push
pusha
into
dec
mov
mov
out
mul
or
mul
aaa
pop
fild
push
inc
inc
daa
enter
mov
pop
sub
sbb
adc
ret
out
pop
aaa
pop
(bad)
and
mov
push
ret
push
push
add
add
dec
ds
lods
test
(bad)
inc
sbb
and
add
sbb
(bad)
sbb
mov
int3
inc
inc
inc
push
ja
sbb
jecxz
add
sbb
inc
(bad)
or
popf
adc
movs
daa
fcmovnu
inc
push
dec
mov
dec
cmp
mov
dec
add
cmp
je
add
bound
lds
push
push
lea
lea
cmp
sub
or
add
scas
dec
inc
stos
or
call
addr16
or
shl
xor
pushf
xchg
mov
addr16
mov
sub
imul
inc
adc
loopne
ficomp
ss
and
int3
int
cmp
xchg
pop
sbb
les
add
xchg
test
jo
xor
cmp
sbb
push
jge
leave
fiadd
popf
sbb
mov
int3
outs
pop
dec
add
or
in
sub
les
test
jb
sbb
xchg
icebp
mov
add
jmp
sub
sub
sbb
pop
sbb
push
out
and
fwait
push
push
pop
sbb
cmp
loopne
(bad)
aam
xchg
mov
jp
rcl
lods
cdq
add
inc
aas
ins
mov
sar
adc
mov
mov
sbb
pop
adc
iret
pop
in
fidiv
jno
lahf
loop
adc
mov
jmp
call
pop
mov
push
mov
and
adc
push
dec
sbb
inc
nop
cmp
leave
mov
dec
call
sar
mov
inc
jg
add
inc
aad
adc
push
push
mov
mov
xlat
daa
mov
mov
cmps
inc
sbb
push
fld
jo
pop
inc
inc
push
loopne
adc
mov
mov
rcr
int3
int3
retf
shl
push
inc
aam
mov
and
mov
aad
sti
in
pop
out
mov
retf
pop
js
pop
adc
mov
push
xlat
loop
ret
fst
lods
call
sbb
cs
loopne
test
add
mov
inc
jmp
or
or
je
add
mov
dec
cmc
ds
jbe
sbb
loopne
sbb
adc
sub
push
cmc
rcl
cwde
jns
cmp
aaa
inc
gs
hlt
out
fistp
jge
mov
in
mov
scas
loopne
push
adc
out
and
outs
jg
and
not
and
mov
and
ret
or
push
mov
ds
inc
jmp
cmp
adc
dec
push
int3
pop
in
movs
popa
ds
ja
jns
push
sbb
mov
adc
sbb
test
mov
test
pop
test
test
lods
enter
mov
(bad)
inc
test
add
fimul
add
mov
ss
push
mov
ficomp
clc
(bad)
fidiv
jge
mov
scas
mov
inc
add
or
nop
push
shl
lods
adc
mov
in
mov
xchg
push
sbb
addr16
sbb
sub
mov
inc
pop
sar
call
xchg
xchg
jge
mov
pop
xchg
hlt
test
(bad)
push
lea
rol
test
loop
push
pop
aam
dec
cmp
dec
sub
dec
dec
shl
inc
push
cmp
jb
push
inc
pop
fcmovbe
or
push
inc
adc
inc
es
mov
aam
das
jmp
sbb
and
and
lea
or
ss
cmp
mov
fidivr
sub
cmps
mov
inc
mov
mov
pop
ret
add
mov
inc
add
cs
cld
mov
das
pop
dec
xor
rol
neg
push
mov
mov
fcmovnu
rol
and
mov
lahf
mov
cld
mov
imul
add
fidivr
sub
cmp
add
mov
sub
shl
stos
sbb
adc
mov
xlat
jecxz
inc
dec
push
fiadd
adc
sub
(bad)
cmp
or
cmp
adc
ret
and
dec
pusha
inc
sub
sub
mov
mov
xor
xor
mov
clts
pop
xor
sub
mov
std
xor
hlt
xchg
loope
test
hlt
jno
xlat
xchg
clc
push
inc
pop
cmc
jecxz
or
sbb
fild
xchg
inc
ret
pop
dec
jmp
xor
mov
sbb
ss
nop
inc
inc
push
(bad)
jg
adc
inc
cmp
jbe
pop
inc
loop
push
hlt
dec
jne
push
pop
push
cmc
xchg
add
dec
lods
fwait
movs
xchg
in
imul
pushf
inc
jbe
pop
fcomp
push
inc
push
xor
hlt
call
and
aam
cmp
les
mov
add
cmp
ret
stos
xor
shr
dec
push
loope
mov
(bad)
scas
adc
das
inc
cdq
(bad)
mov
cmp
pop
inc
je
add
mov
orps
mov
nop
cmp
or
arpl
ret
xchg
and
leave
cmc
inc
ret
loope
mov
sub
mov
adc
jno
sub
dec
or
ss
adc
xchg
add
sahf
sbb
push
inc
push
xchg
sbb
cld
lea
arpl
ins
sbb
mov
mov
mov
repnz
mov
out
js
dec
push
pop
(bad)
ror
xor
movs
mov
test
movs
pop
push
imul
imul
inc
pop
mov
loop
inc
cmp
jl
or
sbb
mov
jl
fs
mov
mov
dec
or
mov
and
aaa
mov
sbb
mov
sub
or
sub
lahf
xor
movs
xor
push
mov
pusha
aam
rol
inc
inc
dec
or
and
jg
jl
enter
adc
mov
mov
xor
shl
mov
dec
ror
es
cli
push
inc
jae
push
add
(bad)
cmc
pushf
dec
retf
adc
mov
ds
fistp
add
jmp
js
fild
repz
fist
loopne
std
add
mov
sub
jge
xchg
stos
pop
xchg
xchg
out
and
mov
pop
add
shl
jg
cmp
pusha
mov
dec
shl
fs
ins
fs
shl
cmp
jle
cmp
jle
fwait
jmp
xchg
mov
mov
jne
jl
add
dec
int3
lock
cmp
push
push
xor
dec
dec
cmp
aam
push
sub
sbb
mov
ret
loopne
call
mov
cmp
inc
fidivr
add
ja
dec
lea
and
push
sbb
arpl
sbb
push
fcomi
imul
mov
mov
and
pop
add
dec
sub
dec
dec
shr
dec
xchg
outs
cli
dec
lahf
adc
push
jmp
add
in
cmp
and
mov
pop
or
add
call
sbb
iret
mov
ss
jge
inc
cmp
inc
lock
lock
jne
std
shl
mov
or
fst
pop
dec
jle
cmp
sub
dec
call
cmp
enter
lds
pop
push
push
jne
xor
mov
mov
add
nop
pop
neg
jbe
clc
push
nop
xchg
pop
fdivr
push
ins
inc
pop
push
int
inc
adc
mov
push
fs
cmp
push
cmp
fstp
test
int
test
into
xor
ins
xor
repz
call
in
push
add
dec
fdivr
and
pop
call
cmps
ss
push
mov
sub
and
push
push
adc
clc
xor
xor
gs
cmp
pusha
mov
inc
sub
mov
fmul
ds
adc
sbb
or
cmp
sti
dec
sbb
sbb
fs
fdivr
in
xchg
mov
jae
pop
cwde
sub
mov
les
cmc
jg
les
add
inc
sub
pop
call
imul
inc
pop
and
sub
std
sbb
out
cmp
jmp
cmp
enter
mov
adc
dec
adc
jb
movs
bound
add
jb
outs
adc
vunpcklps
xchg
inc
cmp
sar
mov
inc
cmp
mov
test
test
ds
idiv
sbb
and
cmp
in
or
pop
out
mov
repnz
pop
jge
enter
loop
pop
cld
jo
call
(bad)
xchg
jbe
adc
dec
push
fnstenv
xlat
add
in
fbld
xchg
add
adc
clc
call
add
int3
rcl
in
jo
or
push
rcr
jge
or
push
jb
push
lock
cmp
adc
mov
mov
int
cmp
pusha
sub
jbe
mov
call
sub
in
add
add
push
int3
push
and
js
add
icebp
sub
pushf
mov
ins
push
mov
popa
jge
push
adc
xchg
push
adc
cdq
pop
add
outs
arpl
in
into
xor
jl
push
mov
add
and
jnp
cmp
test
mov
in
sbb
sub
cmp
push
inc
bound
mov
and
jbe
imul
push
in
cld
lock
adc
sub
hlt
jp
daa
(bad)
push
sub
pop
nop
popf
xor
xchg
sbb
add
jge
sbb
or
ja
or
push
sbb
lock
sub
pop
add
mov
add
fnstenv
retf
rol
call
mov
call
fs
scas
add
in
enter
pop
fdivp
xor
daa
mov
mov
out
hlt
sbb
rcl
push
lds
cmp
sub
push
xchg
and
cmp
into
arpl
cmp
adc
mov
push
mov
js
ja
push
jle
dec
jmp
push
je
add
mov
mov
mov
mov
sbb
cmp
sbb
cs
(bad)
jae
ss
push
bound
or
dec
inc
ja
add
lea
js
dec
mov
inc
scas
hlt
or
or
sub
fdiv
cmp
push
jo
ins
rcr
mov
or
in
adc
loopne
and
xor
ret
dec
add
ss
and
(bad)
jge
inc
dec
add
cmp
clc
jnp
and
or
add
add
stos
and
xor
mov
js
and
sbb
repz
jne
test
sub
mov
in
jg
lock
adc
lods
jmp
add
dec
jmp
or
dec
int
and
cmps
push
jecxz
inc
or
push
test
add
mov
ins
and
js
retf
push
push
pusha
mov
mov
cmp
push
push
or
or
sub
ja
add
push
rcl
jmp
neg
or
mov
mov
sbb
popf
push
scas
push
mov
(bad)
or
xor
sub
(bad)
push
in
mov
mov
sti
xor
mov
int
les
in
or
into
daa
popa
add
enter
addr16
mov
mov
shl
stc
pop
rcl
sub
xor
mov
test
dec
xor
ins
lods
and
aaa
inc
movs
xchg
sbb
push
pop
xchg
mov
(bad)
jmp
inc
outs
adc
jns
sub
imul
and
mov
cmps
(bad)
ror
xchg
or
xchg
pop
mov
add
js
ror
or
(bad)
ror
aaa
push
fidiv
call
mov
xchg
mov
push
dec
or
call
repnz
hlt
sub
push
retf
sub
lock
out
popa
leave
jmp
and
lock
movs
jb
hlt
lock
sti
sub
sub
lock
jecxz
xor
repnz
je
addr16
fsub
inc
enter
adc
dec
push
inc
and
aas
sbb
mov
pop
cmps
jno
adc
das
or
call
adc
dec
cmp
popa
mov
cmp
lods
add
inc
pop
inc
cld
mov
jmp
push
ret
xor
pop
movs
pop
int
cmc
inc
iret
(bad)
scas
sbb
push
fild
add
imul
cld
cmp
inc
fisubr
scas
xchg
mov
loope
gs
ret
test
adc
jns
imul
pop
outs
inc
in
mov
mov
test
pusha
push
pop
pop
imul
or
fs
int3
xchg
mov
mov
mov
and
leave
push
cmps
pop
inc
inc
mov
push
hlt
jle
dec
dec
dec
int
mov
xchg
xchg
xchg
pop
imul
add
add
mov
daa
popf
or
inc
sub
(bad)
out
and
push
loope
sub
mov
sub
outs
shr
and
cli
adc
pusha
xchg
cli
adc
adc
sahf
cmp
dec
ss
or
adc
push
push
sbb
or
adc
dec
or
push
inc
aam
nop
cmps
inc
retf
repz
mov
fisttp
mov
es
mov
inc
aas
dec
test
aam
sbb
adc
bound
dec
mov
pusha
jge
add
rcl
mov
mov
jbe
cdq
retf
jno
test
sbb
push
mov
xchg
and
push
pop
out
cmp
and
les
sbb
mov
mov
adc
or
add
add
out
add
mov
adc
add
sub
jl
mov
cmp
cmps
(bad)
xor
or
(bad)
popa
inc
mov
mov
cmps
add
mov
outs
test
int
dec
call
add
cmp
sar
das
xchg
dec
clc
or
xor
inc
rol
cmp
xchg
push
push
pop
or
and
xchg
dec
rcl
dec
sub
mov
aaa
sub
js
add
and
sbb
add
xor
mov
sbb
inc
and
loope
fist
(bad)
sysexit
pop
dec
add
in
or
pop
pop
leave
mov
pop
dec
jmp
ss
inc
push
xlat
test
mov
or
scas
add
pop
loope
pusha
(bad)
xchg
dec
jle
add
dec
pop
pop
mov
inc
clc
push
push
push
dec
pusha
mov
clc
repnz
mov
xchg
pop
inc
pop
cmp
pop
push
inc
lea
in
in
and
pop
adc
cmp
leave
arpl
out
pop
shr
dec
shr
push
and
out
add
or
or
or
popa
and
inc
xchg
sub
popa
jecxz
xchg
or
dec
test
mov
rcl
adc
rcl
sub
cs
sub
test
outs
popa
dec
inc
pop
hlt
jno
adc
push
adc
ss
or
and
hlt
or
and
loopne
inc
mov
loop
inc
xor
sub
add
movs
xchg
out
mov
pop
cmp
inc
fild
mov
push
inc
push
push
inc
push
add
ret
pop
(bad)
dec
inc
lea
xor
inc
sbb
mov
(bad)
retf
sub
push
sbb
mov
aas
mov
cmps
xor
ret
cli
lock
(bad)
adc
mov
cmp
and
xchg
sbb
mov
ror
pop
push
jb
aaa
les
jbe
push
retf
sbb
bound
imul
or
clc
mov
and
movs
outs
adc
es
push
addr16
enter
cmp
(bad)
xlat
cmp
pop
add
loop
dec
jmp
add
or
call
and
pop
xor
xor
test
aam
fcom
xor
pop
jae
jg
and
pop
movs
dec
and
loope
fild
(bad)
add
add
or
repz
or
or
mov
sar
addr16
sbb
add
and
fwait
iret
enter
inc
add
pop
add
or
add
mov
jle
or
and
ja
and
sub
clc
aas
ficom
lea
lea
jecxz
aas
jns
mov
mov
outs
scas
mov
pop
es
dec
inc
mov
rol
lock
push
push
sbb
lods
dec
into
jbe
int
pop
ret
push
(bad)
jg
inc
sbb
jmp
fsub
or
mov
add
or
ins
es
aaa
ins
lock
inc
ret
sub
loopne
and
jns
int
fwait
xor
mov
bound
rol
xlat
inc
(bad)
lea
mov
(bad)
mov
sbb
scas
repz
mov
cmp
sbb
ror
jl
add
int3
sahf
and
retf
inc
adc
or
mov
xor
adc
bnd
push
sub
pop
jge
rcr
(bad)
xchg
sbb
ins
sub
push
inc
or
jle
sub
mov
ins
jae
cmp
fdiv
imul
xchg
jae
adc
add
xchg
push
xor
mov
outs
inc
call
call
in
outs
fcmovnb
call
call
iret
loop
and
xor
adc
push
test
or
movs
xor
inc
fidiv
pop
cdq
call
clc
mov
jp
lods
test
pop
les
pop
mov
inc
and
jae
test
test
ja
je
push
lods
int
pop
aas
add
sar
add
aam
(bad)
inc
lahf
add
int3
cwde
push
jo
nop
fwait
inc
popf
data16
outs
and
cmp
or
fcomp
popa
jbe
add
dec
sysret
and
pop
mov
ja
jbe
add
(bad)
aaa
imul
push
xchg
or
lods
sbb
cs
nop
push
sub
daa
inc
call
arpl
retf
lock
lock
pop
mov
sub
push
nop
jl
sbb
add
jmp
inc
adc
add
fistp
mov
cli
int3
dec
xchg
or
sub
jne
add
mov
add
aam
or
test
bound
inc
shl
ret
pop
pop
inc
popa
hlt
push
push
addr16
std
xchg
add
push
dec
xchg
lock
clc
shr
or
mov
dec
inc
shr
sbb
jb
shr
add
mov
hlt
call
aad
add
xchg
push
mov
iret
popa
add
fwait
or
xor
sbb
add
sub
icebp
daa
shl
pop
push
xchg
sub
xchg
push
and
bound
cmp
(bad)
push
scas
sub
jb
pusha
add
xchg
dec
and
inc
sub
inc
dec
adc
mov
inc
mov
sbb
cmp
xor
or
test
fsubr
ret
rcr
(bad)
pop
ins
xor
cmp
adc
mov
mov
add
xor
xor
mov
cmp
dec
dec
push
adc
push
ins
pushf
jo
or
addr16
je
inc
sbb
pop
adc
pop
pop
mov
sub
sub
jge
pop
sub
xchg
int
inc
mov
xchg
sub
inc
xor
aam
jns
sbb
pusha
and
mov
push
out
mov
mov
fidivr
inc
mov
ja
jns
push
lock
mov
mov
mov
retf
mov
fadd
into
xchg
dec
sbb
or
fsub
pusha
jmp
sub
bound
add
jecxz
add
xchg
ds
add
jge
cdq
xchg
out
icebp
iret
sbb
mov
and
adc
das
outs
or
hlt
sub
stc
xor
xchg
fs
sub
push
jbe
push
adc
sbb
test
jecxz
movs
gs
inc
outs
imul
jg
fld
fcom
outs
pop
test
pop
adc
xchg
retf
xchg
or
mov
repnz
mov
arpl
retf
movs
sbb
push
sub
cmp
xchg
fcmovbe
out
into
dec
ja
jmp
lods
pop
mov
jmp
adc
std
cwde
push
add
push
movs
add
popa
cmp
jg
push
fiadd
xchg
inc
cdq
dec
dec
push
cmp
je
sub
xchg
loopne
pushf
xor
daa
and
pop
mov
adc
mov
adc
outs
sar
jbe
ss
mov
outs
sbb
push
and
sbb
add
imul
adc
cli
cmp
add
mov
cmp
xchg
enter
mov
and
xchg
push
cmp
je
dec
call
add
in
jns
mov
nop
mov
add
add
and
sbb
xchg
mov
fbld
cmp
sub
xchg
adc
add
jmp
aad
or
jo
sub
add
adc
rcl
scas
(bad)
iret
and
xor
cmp
sub
mov
mov
adc
lods
cwde
xor
sbb
adc
cmps
push
adc
xchg
addr16
sub
pop
mov
and
and
pop
enter
cmc
and
rcr
mov
sub
and
xchg
xchg
jmp
sub
pop
push
push
daa
mov
or
or
test
loopne
mov
aam
dec
pop
mov
inc
test
inc
outs
sbb
es
push
xor
ret
iret
dec
call
or
inc
shl
add
(bad)
xor
ins
sbb
push
jb
stos
adc
push
mov
xor
cmps
(bad)
in
adc
pop
call
adc
or
out
jo
je
xchg
inc
push
xchg
je
jae
jge
sti
push
dec
xchg
arpl
mov
les
(bad)
cmps
xor
and
xchg
rcr
loop
nop
mov
add
test
add
out
sub
ret
out
mov
jge
or
add
adc
dec
ds
shr
and
mov
adc
dec
mov
adc
movs
js
cmp
add
lds
loope
xchg
dec
mov
(bad)
fbld
les
outs
sbb
xchg
xchg
inc
movs
fadd
lds
cmp
add
sub
test
cmp
rol
cs
aas
mov
in
jb
test
or
xchg
add
inc
lods
xchg
fdiv
cli
movs
add
leave
dec
add
mov
cmc
mov
nop
test
pop
inc
push
mov
xor
sub
mov
enter
mov
push
das
push
mov
sbb
xchg
dec
or
push
dec
jb
cmp
push
xor
in
adc
add
xchg
xor
and
cmp
nop/reserved
fidivr
cmp
adc
jbe
(bad)
and
adc
jle
daa
or
loopne
push
in
or
jle
cmp
xor
sub
ud2
popf
popa
jae
js
mov
or
xchg
enter
ds
lea
movs
gs
add
loope
fwait
push
xchg
and
test
ret
xlat
ins
mov
inc
lds
cmp
test
mov
push
ficom
inc
data16
mov
aas
sar
inc
ins
cdq
dec
icebp
sbb
mov
sbb
jmp
js
dec
mov
inc
and
dec
mov
call
cmp
cmps
mov
sbb
jo
adc
add
fcom
cmp
and
or
dec
jae
add
sbb
nop
mov
or
ja
mov
xchg
out
in
xchg
loopne
jbe
dec
mov
call
mov
add
mov
and
or
fsubr
cmp
fsubr
sbb
push
or
add
add
pusha
iret
test
jge
sbb
sub
mov
lds
cmps
imul
outs
aam
pop
lock
cmp
add
add
jge
and
push
jns
xchg
add
add
test
xchg
add
enter
dec
push
jae
ins
les
dec
es
jmp
call
sub
imul
cdq
push
sub
xor
test
iret
mov
test
mov
movs
jb
enter
mov
aaa
ja
dec
mov
or
ja
adc
pusha
add
test
add
imul
pop
mov
cdq
and
mov
shr
pop
pop
inc
cs
test
fild
lods
pop
jmp
adc
dec
mov
or
fisttp
fld
mov
fisubr
adc
cmp
jecxz
sahf
or
rcl
fdiv
cmp
jns
inc
pop
test
xchg
mov
(bad)
sbb
jno
scas
inc
sbb
add
cmp
mul
sahf
adc
ret
(bad)
std
adc
jns
movs
add
fisttp
rcl
dec
or
push
lea
dec
or
test
xor
sub
add
or
xor
adc
int
push
sbb
aaa
jno
mov
inc
inc
test
xchg
mov
push
pop
jmp
push
or
nop
and
sbb
lods
inc
mov
aaa
je
ficomp
mov
xor
sbb
repnz
mov
mov
pop
add
ins
sub
sub
xor
pop
and
sbb
arpl
bound
mov
in
int3
jecxz
jl
lahf
adc
inc
retf
pop
pop
outs
and
int
lods
repz
xchg
movs
sub
loope
push
bound
popf
push
xor
jb
adc
inc
es
fstp
ins
jl
aas
iret
jbe
ds
add
inc
sbb
cmp
xor
jns
popf
in
jne
adc
sbb
inc
xor
clc
dec
or
test
xor
aam
loopne
ror
fild
test
mov
out
or
mov
movs
icebp
mov
inc
test
sti
out
mov
inc
les
sub
mov
icebp
pusha
push
out
add
pop
(bad)
ror
(bad)
pop
add
inc
(bad)
jp
cmps
test
mov
lock
adc
scas
push
retf
push
inc
add
and
inc
cdq
push
or
cmp
add
inc
sbb
dec
ret
cmp
push
mov
in
dec
daa
push
dec
xor
inc
mov
pop
push
pop
dec
mov
push
pop
pop
mov
mov
dec
pushf
sbb
push
jb
cmp
stos
rcl
inc
push
call
ror
adc
shl
and
out
pop
sti
adc
jo
in
jmp
rcl
push
lock
jmp
push
jmp
mov
lahf
jecxz
imul
and
ins
aas
or
ret
xor
cmp
jge
add
sub
mov
movs
cmp
adc
add
fucom
xchg
ds
rol
outs
cmps
adc
push
xchg
jg
push
mov
mov
sub
(bad)
adc
or
and
inc
js
xor
mov
inc
xchg
xchg
or
sbb
dec
inc
clc
fdiv
in
out
add
xchg
pop
cmp
(bad)
add
sahf
retf
adc
push
mov
add
jnp
mov
push
lock
retf
fmul
dec
jo
fwait
xchg
cmp
xchg
push
sbb
(bad)
aas
mov
mov
sub
inc
pushf
loopne
pop
fdivr
or
and
lds
xchg
sub
and
push
mov
push
repnz
push
adc
sbb
loop
push
or
es
aas
inc
cmp
mov
mov
gs
pop
sbb
in
les
mov
inc
cmp
mov
pcmpeqb
dec
scas
mov
pop
(bad)
dec
pop
pop
xor
pop
push
mov
inc
add
imul
push
nop
xchg
jecxz
push
cmp
push
or
in
jmp
mov
test
pop
jne
xor
add
sbb
adc
jns
not
outs
inc
out
mov
enter
out
and
popf
neg
adc
add
push
dec
xchg
jo
mov
adc
mov
es
addr16
sub
fmul
rcl
cs
(bad)
imul
xor
les
pop
fistp
dec
mov
fs
imul
out
cmp
or
and
mul
push
push
xlat
out
mov
daa
outs
fwait
arpl
and
sub
pop
xor
retf
repz
stos
je
jo
cmp
das
ja
push
test
loopne
cvtps2pi
jecxz
adc
fisubr
arpl
loopne
push
lahf
mov
and
sbb
mov
add
in
and
cmp
out
jno
jbe
jp
xchg
outs
adc
mov
aad
stc
mov
fstp
out
add
sti
out
pop
mov
popf
and
push
mov
add
inc
int
or
imul
or
test
mov
add
cdq
push
dec
inc
sbb
pop
mov
mov
enter
jo
pop
jb
and
adc
pusha
test
sub
push
xchg
dec
jmp
stos
test
cmp
or
mov
ss
sub
cwde
jbe
mov
push
cmc
jne
pop
mov
imul
mul
dec
and
mov
adc
xor
inc
ins
retf
(bad)
jns
mov
sbb
mov
mov
aam
(bad)
sub
xchg
inc
add
sar
popa
ror
loope
add
mov
jecxz
loopne
mov
fcom
pop
nop
bound
pop
arpl
jle
scas
in
or
jns
inc
fs
lods
jns
push
dec
jnp
add
adc
jb
aaa
adc
aaa
mov
sar
test
inc
mov
inc
scas
cld
sub
mov
sub
sub
adc
push
adc
sbb
or
add
test
ss
jo
push
xlat
cmp
inc
adc
ja
mov
jl
shl
inc
stos
bnd
pop
aas
scas
shr
popa
je
pop
or
fisttp
pop
pcmpeqd
fisub
stos
sbb
xor
push
dec
xor
loope
add
mov
out
pushf
mov
dec
popa
jne
mov
cmps
lds
push
push
in
popa
das
dec
lods
retf
adc
sbb
cmp
add
inc
sub
xchg
nop
sbb
sub
scas
dec
xchg
loop
sub
mov
pop
imul
add
xchg
retf
in
push
je
jmp
loop
push
sbb
mov
add
pop
ror
loop
xchg
mov
in
pop
mov
or
inc
inc
add
adc
cwde
mov
xchg
sbb
pop
sbb
jnp
stos
mov
xchg
lahf
push
cmp
and
jae
aaa
rcl
adc
xor
pop
cwde
pop
fstp
dec
shl
int
or
or
push
fcomp
add
pop
sub
aaa
fdiv
push
rol
xor
or
cdq
aam
movs
lock
rcr
dec
int
xchg
inc
sbb
jo
ret
pop
sbb
jecxz
add
inc
sti
pop
add
or
cmp
sar
sbb
addr16
inc
jbe
jp
outs
dec
dec
mov
or
test
dec
in
pushf
test
das
add
adc
push
addr16
cmps
mov
pop
pusha
pop
je
das
gs
cmp
imul
movs
add
sub
cmp
and
test
shl
pop
not
adc
xchg
adc
sub
fsub
hlt
hlt
movs
popa
and
mov
sbb
popa
and
ds
jno
add
ret
or
mov
add
cmp
push
dec
or
aam
and
rol
(bad)
sbb
or
aas
out
sbb
xor
bound
push
(bad)
cmp
mov
arpl
lahf
add
scas
pop
jmp
push
mov
push
fmul
or
inc
xlat
or
xchg
jecxz
or
sbb
xor
test
mov
clc
push
add
fstp
push
mov
or
mov
inc
jo
cli
jle
lea
jge
mov
mov
in
jmp
xchg
outs
sbb
mov
mov
sbb
ss
add
add
retf
and
ins
rcr
pop
add
into
mov
xchg
pop
mov
(bad)
stos
mov
movs
xlat
adc
and
rcl
adc
push
out
cmp
sbb
in
je
cwde
sbb
aaa
f2xm1
ss
add
jb
loopne
out
int3
iret
xchg
cmps
adc
push
mov
xchg
les
dec
les
pop
adc
loop
mov
mov
imul
xor
or
mov
inc
mov
movlps
stc
call
jecxz
or
inc
into
cmp
cmp
rcl
pop
aaa
adc
mov
fcom
rcl
lds
or
mov
(bad)
fdiv
adc
stc
pop
cmps
inc
or
or
jae
popa
repnz
inc
mov
nop
fmul
mul
xchg
xchg
add
xchg
in
mov
sub
mov
rcr
out
push
in
lea
gs
ins
xchg
movs
pusha
add
shr
sub
and
xor
mov
mov
sahf
mov
cwde
pop
jae
mov
sbb
and
mov
cmp
aam
cld
dec
rol
cmp
and
push
retf
clc
pop
add
aad
mov
xchg
arpl
retf
push
sub
add
retf
sahf
fdivrp
ror
icebp
inc
xchg
les
ins
sub
sbb
add
shl
push
adc
imul
mov
fld
jns
popa
mov
or
(bad)
fdiv
outs
das
push
js
adc
xor
push
leave
and
popf
pusha
push
dec
xchg
cmps
outs
dec
push
add
jae
sbb
or
xor
or
add
push
jae
icebp
adc
or
mov
ins
pop
ficomp
jne
idiv
adc
or
cld
xchg
test
jae
dec
add
xor
jae
loopne
test
jmp
(bad)
cmp
add
inc
call
popa
mov
sbb
shr
cs
mov
mov
scas
push
cs
hlt
rcl
fldenv
xor
xor
mov
int3
inc
out
jo
mul
mov
rol
xchg
mov
movs
sub
or
inc
iret
push
leave
sbb
pop
es
pop
lea
mov
std
inc
jge
iret
call
jge
add
nop
dec
ret
mov
inc
or
sub
and
mov
push
ret
push
dec
xchg
mov
mov
and
loopne
sub
pop
mov
(bad)
cmp
lea
add
cdq
inc
test
sbb
sbb
leave
sbb
fmul
arpl
loopne
ror
xor
mov
pop
xor
movs
cmp
adc
and
push
pop
pop
js
dec
xor
lods
cmps
js
add
rol
add
int3
je
push
or
mov
les
dec
and
dec
enter
rol
xchg
add
ins
pop
(bad)
sbb
xor
inc
push
xor
ja
cmps
add
inc
adc
or
add
cmp
int
pop
inc
pop
add
sub
dec
xor
xor
iret
xchg
pop
sbb
clc
mov
in
dec
mov
jnp
fsubr
mov
pop
mov
sar
add
inc
cmps
inc
xchg
or
arpl
(bad)
aas
and
ds
push
inc
fimul
pop
xchg
mov
cmp
pop
shr
scas
push
mov
into
inc
or
sbb
xor
lock
or
cmp
xchg
jle
pop
in
retf
add
mov
pop
push
fwait
inc
mov
popa
mov
call
or
cwde
cs
retf
in
setg
or
add
test
mov
jmp
nop
sbb
gs
adc
clc
add
adc
cld
add
pop
inc
and
outs
cmps
ins
scas
repz
and
out
xchg
adc
leave
nop
and
sbb
adc
xor
pop
fnstenv
mov
in
xor
add
sub
add
ins
cmps
pusha
mov
jmp
and
add
add
and
add
and
shl
xchg
outs
fsubr
push
sub
nop
push
and
jl
je
test
xchg
test
test
add
movs
loope
cld
and
inc
xchg
mov
dec
popf
pop
rcr
push
inc
arpl
retf
dec
scas
mov
mov
out
push
sbb
jmp
cmp
clc
jno
add
cmp
enter
mov
and
dec
in
ja
test
pusha
pop
dec
dec
dec
(bad)
and
in
inc
es
aam
jle
jmp
sahf
loope
add
inc
sbb
jno
inc
mov
jo
fsub
nop
fwait
ins
cmp
add
or
ins
pusha
dec
xor
adc
cmp
inc
sbb
ret
push
cmp
jno
xor
test
cmp
add
test
and
xchg
xor
out
mov
and
sub
add
mov
dec
dec
jae
mov
sub
sub
cmp
or
or
jbe
xor
add
xchg
mov
xchg
xor
in
fcom
mov
or
clc
sbb
test
test
pop
lea
mov
in
xchg
cmp
fistp
retf
adc
adc
fisttp
jo
mov
retf
and
or
xchg
sbb
adc
xchg
inc
arpl
cdq
fs
mov
inc
xor
lds
add
xor
inc
mov
out
adc
jns
test
call
dec
ja
cwde
nop
push
fsubr
stc
or
add
cmps
add
rol
and
dec
mov
mov
movs
inc
js
scas
sti
xchg
pushf
xor
inc
sbb
cmp
data16
pop
jmp
ror
mul
xor
es
add
dec
jbe
je
add
adc
add
jmp
push
add
or
call
xor
add
sbb
xor
jecxz
or
add
lea
loope
mov
hlt
jmp
lds
cmp
outs
(bad)
mov
or
sub
inc
ror
adc
push
mov
xchg
pushf
pop
jle
fistp
push
sar
pop
push
and
enter
fs
sub
mov
cdq
pop
(bad)
fmulp
in
sbb
inc
loopne
pop
inc
mov
ins
mov
dec
stos
fs
sub
sbb
push
stc
ret
push
in
sahf
out
inc
in
xor
cmp
nop
mov
popf
pop
call
sbb
cmp
es
ret
cwde
xor
mov
push
cwde
cs
or
sub
sbb
adc
test
clc
push
push
imul
(bad)
test
sbb
and
jnp
push
cs
push
mov
and
ss
pusha
add
inc
xchg
sbb
or
xchg
call
and
ret
inc
mov
adc
adc
cdq
fiadd
sbb
loope
or
enter
adc
(bad)
sbb
jae
fnstcw
or
fdiv
fild
jo
or
pop
cmp
ins
or
xchg
(bad)
push
add
mov
hlt
mov
enter
pusha
add
sbb
dec
dec
xchg
xchg
es
nop
pop
cld
(bad)
ins
push
(bad)
lds
lahf
mov
cs
push
clc
bound
dec
dec
sub
mov
xchg
inc
cs
mov
dec
hlt
dec
movs
pop
es
inc
stos
inc
add
mov
in
inc
add
fnsave
into
xchg
movs
fistp
es
dec
push
jge
push
and
sub
add
ins
loopne
test
inc
ret
retf
pop
stc
mov
stos
test
cmp
sbb
or
repnz
das
push
ret
sahf
pop
mov
push
inc
or
mov
call
mov
mov
gs
mov
jp
retf
rol
xor
sub
push
adc
pop
ret
push
xchg
xor
inc
xor
and
es
test
sub
jmp
nop
cmp
imul
jo
pusha
sub
push
dec
mov
push
enter
pop
mov
xchg
mov
fcom
in
dec
sahf
ret
cmc
xor
fcom
retf
or
pop
(bad)
push
add
clc
mov
lods
push
popa
mov
adc
jg
mov
add
add
ret
push
add
add
jl
sbb
ror
mov
lods
popa
sbb
mov
push
fmul
faddp
and
cmps
adc
movs
mov
icebp
add
cmove
icebp
add
push
pop
fistp
pop
ret
inc
pushf
push
lods
jne
push
pushfw
sbb
jbe
push
in
xchg
add
adc
mov
or
outs
and
add
(bad)
pusha
fild
cmc
rcl
xchg
pop
outs
mov
xchg
push
add
sub
mov
xchg
jmp
sbb
cmp
xchg
jmp
out
adc
push
aad
loope
mov
sbb
or
dec
add
lods
test
mov
ror
loopne
pusha
sbb
and
sbb
into
fisub
pop
sub
fisubr
lds
pop
dec
movs
adc
fstp
dec
dec
xchg
mov
sub
aas
sbb
sub
cmp
ins
mov
jae
nop
das
icebp
dec
add
fadd
loope
cmp
call
sub
add
add
jecxz
cmps
push
loopne
js
(bad)
push
adc
inc
fwait
push
and
xchg
add
movs
mov
mov
lods
pushf
pop
sub
or
add
jecxz
mov
adc
(bad)
out
pop
xchg
pop
mov
outs
sub
dec
mov
push
dec
dec
or
push
sahf
cmp
movs
pop
and
sub
lds
jbe
push
mov
mov
and
nop
pusha
fs
cmp
or
in
inc
mov
std
inc
(bad)
shl
dec
je
push
(bad)
fcomp
cmps
sbb
cli
push
or
fld
sbb
retf
pop
xchg
adc
(bad)
mov
jmp
inc
pop
add
push
and
mov
dec
and
je
jmp
retf
push
lds
test
data16
push
jle
mov
xor
inc
scas
pop
lea
cmp
dec
push
mov
or
pop
push
jle
add
icebp
xchg
sub
jmp
cld
mov
cs
mov
or
pop
inc
xchg
xchg
sbb
add
adc
fild
lods
fmul
xor
fs
in
mov
mov
push
fild
cmp
cld
repnz
push
add
xchg
mov
test
loope
lods
add
(bad)
add
mov
sbb
xor
ins
adc
jns
pop
or
rcl
dec
(bad)
pop
mov
sbb
ret
xlat
add
retf
add
add
enter
or
nop
dec
push
shl
sbb
and
sar
mov
sar
call
inc
iret
(bad)
call
push
cs
ftst
(bad)
stos
adc
cmps
loope
lahf
iret
add
cmp
call
nop
daa
lods
icebp
inc
aam
fwait
xor
xchg
jne
cmp
adc
or
sbb
push
movs
mov
in
jnp
cmp
loopne
lock
imul
jb
dec
xor
ret
mov
and
and
xchg
retf
and
push
push
sysenter
xchg
cmp
ret
mov
mov
inc
xor
cmps
(bad)
add
dec
test
fsub
or
je
in
ret
push
fcom
mov
mov
in
je
mov
mov
xor
cmp
aaa
popa
dec
(bad)
leave
push
adc
or
sbb
pushw
es
ja
inc
pop
ror
jbe
les
clc
ret
push
xor
pop
cmp
push
cwde
cmp
les
pusha
arpl
js
gs
dec
add
inc
adc
xchg
inc
es
sbb
push
fs
cmp
ins
cmp
and
sub
pop
add
shl
xor
or
mov
fmul
pop
add
popf
sbb
lds
(bad)
push
add
pushf
dec
push
sub
pop
nop
cmp
repnz
pop
clc
retf
pop
cs
inc
nop
into
pop
add
dec
xor
add
add
shl
push
rcl
(bad)
and
lock
jo
andps
sub
sahf
fs
pop
pop
sub
sub
lods
xor
push
jne
xor
pop
xor
mov
or
rcr
push
adc
xor
les
dec
sar
inc
or
sbb
xchg
mov
sub
mov
mov
pusha
and
adc
or
sub
nop
dec
mov
push
ins
adc
sub
mov
shr
mov
fxch
shl
inc
push
jo
es
and
inc
xor
mov
and
inc
add
dec
add
push
stos
jmp
and
es
xor
dec
cmps
sub
in
ret
add
sub
add
sbb
adc
cmp
and
ja
push
test
push
mov
mov
loopne
and
xchg
jl
rcr
rcr
nop
loopne
and
out
push
add
sbb
mov
sbb
xchg
xchg
and
push
mov
jnp
fs
add
adc
rol
add
xor
daa
popa
or
or
pop
int
mov
pop
xchg
pop
and
jne
les
(bad)
or
sar
sbb
jl
popa
jmp
enter
mov
mov
clc
xor
sbb
fsubr
push
sbb
jg
add
loopne
loopne
adc
std
sbb
shr
int3
add
test
or
adc
or
sbb
xchg
sub
cmp
pop
jmp
or
fdivr
in
ret
xchg
ins
imul
test
or
leave
xchg
clc
addr16
mov
retf
sub
cmp
sub
pop
outs
xchg
mov
inc
inc
adc
cmp
ins
rol
cmovno
test
into
push
jns
sub
loope
adc
(bad)
out
push
push
mov
mov
mov
and
enter
inc
jmp
push
xor
mov
nop
sbb
iret
cs
pop
mov
movs
test
mov
lea
ror
rcl
mov
rcr
mov
leave
inc
fiadd
(bad)
sub
and
xchg
cdq
aaa
fwait
inc
push
je
test
lods
mov
add
inc
das
cmp
sub
fadd
add
aaa
cmp
add
sub
arpl
sub
(bad)
stc
xor
je
(bad)
push
jb
fs
js
in
lds
movs
xchg
push
movs
movs
mov
cmp
inc
pop
inc
and
aaa
fadd
stc
jae
test
sbb
test
or
xchg
fucom
outs
xor
jmp
bound
sub
rcl
push
es
inc
cmp
mov
addr16
inc
and
inc
xor
xchg
cvttps2pi
push
xchg
or
dec
push
scas
mov
jecxz
test
lahf
and
pop
icebp
xchg
mov
pusha
ror
pusha
outs
mov
cmp
sti
adc
lea
adc
ret
dec
sub
inc
and
inc
clc
push
add
adc
movs
icebp
add
or
clc
inc
push
push
push
aad
push
cmp
pop
gs
mov
or
adc
aaa
ins
test
sahf
imul
adc
pop
and
cdq
or
jl
cmps
nop
and
jl
mov
pop
jl
or
jl
sbb
mov
imul
inc
xor
inc
pop
aad
stos
stos
enter
add
cmp
test
das
add
lds
dec
inc
add
sbb
(bad)
neg
dec
cmp
jmp
pop
add
push
sbb
push
mov
shr
sbb
sub
mov
imul
pusha
sub
jnp
or
mov
and
push
sub
dec
(bad)
add
ins
rcr
(bad)
imul
jne
loope
push
rcl
inc
inc
adc
leave
or
fst
mov
pop
xchg
mov
add
in
(bad)
mov
or
or
dec
daa
sbb
rcpps
stc
call
inc
add
push
(bad)
adc
sub
mov
outs
sbb
arpl
test
int3
leave
xor
add
jae
cmp
jge
add
add
pop
leave
inc
or
jmp
jns
mov
push
pop
push
xor
jns
push
or
leave
(bad)
sbb
aaa
js
mov
jnp
pop
retf
sbb
outs
lods
(bad)
scas
sub
sub
fiadd
adc
int3
push
inc
inc
test
mov
xchg
loopne
inc
test
jecxz
inc
in
mov
loop
out
xchg
aas
or
sbb
add
mov
dec
push
fistp
js
sub
and
push
js
imul
mov
sbb
fcom
pop
xor
or
adc
aad
fadd
mov
(bad)
fst
push
mov
enter
push
aaa
mov
pop
add
pop
and
pop
sub
cmp
mov
adc
fisub
dec
xor
and
call
and
adc
mov
mov
push
dec
sbb
xor
mov
inc
adc
aas
pushf
mov
mov
retf
sub
adc
push
not
movs
dec
lea
das
jecxz
int3
(bad)
or
popf
mov
or
repnz
mov
add
jnp
lods
sub
cs
fidivr
sbb
movs
mov
imul
add
stc
mov
add
mov
or
xor
add
add
and
pop
adc
and
lds
lea
push
ffree
cmps
add
xchg
pop
daa
sub
shl
jo
sub
mov
push
stos
or
add
sub
xor
leave
push
jb
xor
xchg
pop
push
add
add
xor
cwde
and
xor
sub
push
or
pop
xor
add
dec
and
movs
adc
cmc
lods
xchg
aad
add
hlt
movs
rcr
int
xchg
fld
mov
cmc
fisttp
sbb
mov
adc
(bad)
daa
xchg
in
xor
xchg
and
pop
call
out
and
sahf
enter
loope
test
out
bswap
xchg
mov
addr16
adc
sub
mov
arpl
in
arpl
test
adc
push
pop
and
adc
aam
mov
adc
shr
je
ror
test
cmps
out
mov
(bad)
or
xor
inc
out
jmp
bnd
leave
jmp
sub
and
xchg
inc
loopne
pop
push
shr
xchg
pop
adc
aad
dec
scas
push
and
push
fwait
xchg
ret
mov
mov
hlt
pop
div
mov
sub
aam
out
mov
jo
xchg
ja
mov
cli
pop
stos
sahf
les
sub
pop
lods
dec
sti
and
or
pop
push
pop
ins
cs
je
aas
or
or
and
adc
imul
or
test
add
aaa
mov
jle
bound
shl
push
repnz
xor
ret
add
rol
adc
jmp
push
jb
cwde
fadd
jne
sbb
lock
and
stc
sub
hlt
hlt
sbb
xchg
push
movs
lock
or
dec
inc
div
stos
adc
scas
fmul
add
nop
jnp
ins
ins
mov
or
ja
dec
push
xchg
cmps
je
xchg
sub
sbb
inc
cmp
sub
add
mov
fwait
and
add
lods
pop
retw
shl
add
nop
pop
aad
pop
cld
adc
(bad)
jle
pop
jmp
cmp
imul
xor
icebp
lea
loope
rcl
push
dec
ja
dec
call
mov
bound
push
mov
and
sbb
add
fs
mov
jg
nop
push
adc
adc
mov
aaa
push
daa
daa
movs
ja
imul
fdivrp
ficom
(bad)
add
add
pushf
sar
inc
or
pop
and
(bad)
stc
pop
(bad)
stos
adc
cmp
pop
cld
or
adc
adc
xchg
sub
add
and
push
(bad)
out
daa
nop
add
out
push
pop
and
and
and
mov
adc
jne
dec
das
bound
add
jae
retf
(bad)
cwde
dec
xor
mov
in
sub
pop
mov
jo
mov
inc
jge
fst
and
cmps
adc
clc
je
cmp
inc
push
or
fst
daa
scas
sbb
call
and
je
sbb
neg
leave
sbb
xchg
leave
dec
pop
jo
mov
sub
or
push
out
in
and
imul
add
inc
xor
or
adc
aaa
jmp
mov
outs
and
pop
xor
pop
pop
sub
adc
mov
mov
add
cmc
inc
jecxz
mov
push
and
movs
mov
bound
es
or
leave
or
push
outs
pushf
mov
out
jge
into
mov
mov
movs
mov
fistp
cmp
jns
jmp
push
pushf
pop
mov
inc
(bad)
js
pop
int3
adc
aas
mov
pop
add
add
stc
movs
sbb
fcom
popf
mov
sbb
test
or
xor
pcmpeqd
push
data16
das
sbb
imul
xchg
pop
inc
outs
inc
mov
jmp
or
aaa
data16
jbe
cmp
das
jl
ucomiss
lods
out
pop
mov
(bad)
pop
ds
lea
test
lock
out
repz
mov
ja
mov
or
(bad)
pop
and
push
mov
pop
cmp
and
imul
adc
push
xchg
iret
jmp
leave
cwde
in
adc
dec
push
fild
adc
std
adc
ret
jmp
sar
ret
inc
push
(bad)
jg
sbb
jnp
and
(bad)
xor
xor
mov
or
push
inc
mov
sub
xor
mov
add
pop
sar
retf
fdiv
(bad)
in
inc
enter
jg
fstp
fwait
mov
and
push
sub
movs
and
test
pop
dec
jno
dec
or
enter
test
mov
xchg
add
div
dec
inc
xor
test
cmp
(bad)
mov
sbb
mov
push
fist
xchg
jge
xor
fstp
add
push
retf
fidiv
inc
dec
jne
lods
fld
nop
push
mov
je
jl
mov
cmps
or
push
adc
and
cwde
ins
inc
jo
jle
ss
add
or
push
push
fisttp
xor
loopne
ins
outs
setb
inc
sub
pop
popa
fst
fdivr
fstp
sbb
imul
addr16
add
loope
cmps
cmps
lock
adc
call
and
mov
mov
sbb
jmp
sub
(bad)
enter
dec
push
fld
fcomp
aas
add
or
lock
inc
or
xor
and
and
arpl
xor
outs
gs
mov
fild
jl
inc
clc
loope
sub
fld
fcomp
retf
cmp
jb
fsubr
in
add
jne
ins
sbb
adc
rcl
sub
cmp
or
out
mov
dec
xchg
xlat
or
or
mov
dec
sub
out
adc
pop
push
clc
scas
or
test
sti
lahf
adc
xchg
mov
daa
xor
repnz
push
hlt
icebp
mov
lock
cli
push
lods
out
rol
or
scas
push
push
out
js
push
mov
add
push
dec
pop
cmp
std
mov
repnz
in
xchg
mov
mov
or
mov
xchg
inc
repz
jnp
inc
outs
fs
fadd
or
xchg
or
inc
add
(bad)
and
mov
nop
sbb
aad
push
adc
inc
dec
adc
pop
out
push
sbb
push
jmp
adc
movs
mov
add
fst
sbb
and
pop
adc
sub
xor
push
fsubr
rcr
je
ds
pop
daa
outs
pop
adc
test
ret
popf
(bad)
leave
fmul
retf
es
fs
pop
stc
or
fnstcw
or
xor
cmp
inc
sbb
and
je
ret
mov
je
ss
ja
mov
inc
jno
hlt
pop
test
(bad)
adc
cmc
cmp
iret
imul
pusha
adc
inc
mov
or
jl
ret
scas
pop
sbb
js
mul
inc
rol
loopne
leave
or
adc
fsub
or
outs
mov
and
and
add
dec
loopne
add
neg
bound
dec
js
ins
stos
call
sahf
(bad)
push
adc
pop
clts
xor
fisttp
data16
jo
sub
cmp
xchg
push
push
test
nop
mov
ret
mov
inc
(bad)
cwde
sub
or
imul
aam
mov
xor
or
inc
cmps
cmp
mov
and
xchg
fidiv
js
jmp
popf
pusha
mov
inc
adc
loopne
lahf
out
sub
add
imul
sub
cmp
fmulp
xor
xor
xchg
dec
pop
popf
inc
pop
rol
mov
or
mov
scas
enter
xor
cli
mov
sbb
sar
mov
fidiv
inc
or
lock
fs
sub
stos
cmps
sub
(bad)
(bad)
xchg
and
inc
sbb
fstp
dec
shr
sub
push
scas
mov
add
add
mov
sub
mov
jmp
adc
ds
xor
sbb
vphaddudq
das
in
pop
xor
cmp
rcl
pop
in
cmc
dec
add
fld
mov
sub
pop
out
jae
loopne
push
popa
sub
es
mov
sbb
pop
and
cmp
and
pop
das
rol
inc
pop
(bad)
jo
enter
stc
push
adc
pop
sub
xor
scas
loopne
mov
push
mov
mov
test
push
or
mov
mul
out
jb
jg
cmp
pop
dec
or
cmps
inc
xchg
sub
and
cs
ror
repz
dec
out
dec
imul
add
dec
cli
inc
outs
call
inc
cmp
inc
push
pop
push
outs
pop
adc
pusha
add
inc
mov
enter
int3
fst
fsubr
lock
and
mov
add
adc
dec
xchg
in
pop
outs
sub
enter
cli
push
xchg
shl
push
je
sub
out
jo
not
popa
jo
pop
adc
push
fdiv
das
ret
mov
enter
add
dec
jge
pop
mov
cld
inc
repnz
loop
test
adc
or
pop
sub
push
pushf
adc
push
xor
and
cmp
mov
repz
ret
lods
mov
push
add
std
sbb
sbb
rol
ror
ret
nop
adc
pushf
daa
or
loopne
nop
movs
and
sbb
cmp
sbb
xor
rcl
or
ja
adc
pop
imul
push
cmp
shr
sub
outs
sub
push
cmp
pop
js
jle
push
xchg
mov
in
adc
inc
push
iret
daa
test
fadd
sbb
jb
cmp
popa
jbe
or
iret
in
jbe
pop
js
bound
push
add
pop
pop
leave
in
inc
add
add
les
add
adc
pop
inc
dec
dec
dec
outs
cmovs
or
dec
pop
pop
fiadd
xchg
addr16
and
fcmovnu
clc
daa
xchg
mov
pop
or
pop
add
push
fistp
in
adc
add
xchg
push
inc
xchg
mov
sbb
cmovb
xchg
ret
mov
in
sub
cmc
aad
push
loope
dec
inc
sub
dec
cmp
rcr
adc
mov
loopne
and
sbb
jno
ror
adc
(bad)
adc
sub
dec
and
add
mov
rol
mov
fstp
cmp
or
fiadd
and
mov
or
rol
inc
mov
and
cmps
in
add
movs
add
inc
sbb
call
dec
fadd
les
add
and
mov
into
add
sbb
rcr
push
xor
and
mov
dec
lock
xchg
popa
jg
ret
add
out
add
out
cmps
sub
loop
push
jl
push
sub
jbe
repz
xchg
mov
ins
adc
sub
imul
mov
(bad)
push
jecxz
test
ficomp
adc
ins
xchg
sub
in
add
push
or
stos
mov
inc
add
add
adc
dec
mov
lods
shl
and
or
or
push
adc
add
inc
dec
jmp
xor
cmp
xchg
sub
sahf
xor
xor
test
and
inc
cdq
lahf
sbb
movs
mov
add
shl
in
shl
push
sub
pop
jae
cli
in
xchg
push
push
jg
(bad)
imul
lock
xchg
pop
mov
in
les
icebp
ds
mov
outs
sub
loope
ret
cwde
or
jp
xchg
xor
pop
xchg
add
into
adc
xor
adc
push
push
sahf
add
movs
pop
pop
jmp
mul
and
pushf
test
jl
(bad)
cwde
jmp
test
mov
xor
daa
test
mov
inc
sub
shl
loopne
iret
xchg
xchg
or
(bad)
jb
fiadd
inc
retf
ins
push
leave
(bad)
or
sbb
add
inc
xchg
jo
add
mov
xor
cmp
dec
fwait
retf
pop
imul
or
push
or
push
sar
xchg
ins
or
and
pop
mov
gs
loope
test
sbb
sti
imul
fs
pop
mov
ret
scas
fwait
sbb
(bad)
xor
xor
dec
lds
mov
mov
test
add
shl
clc
or
clc
(bad)
cdq
add
call
sbb
mov
pop
mov
sub
fmul
stos
adc
mov
sub
or
mov
fiadd
push
inc
rol
xchg
sub
(bad)
out
or
pop
mov
dec
popa
or
inc
in
and
popa
add
fwait
mov
jns
sbb
xchg
inc
or
inc
xor
loopne
jno
lock
js
xchg
inc
and
add
cmp
mov
retf
xchg
sbb
in
sub
xchg
xchg
inc
push
into
pusha
or
xchg
or
jno
scas
out
mov
std
fidivr
cwde
cmp
rcpps
lds
inc
jmp
out
sub
mov
xlat
pop
and
aam
or
add
sbb
add
sbb
xor
test
inc
or
xchg
xor
xchg
and
sbb
fadd
in
push
icebp
ffree
(bad)
iret
or
push
pop
test
imul
inc
jge
push
mov
sbb
push
jo
and
sbb
or
or
add
dec
es
mov
pop
movs
push
test
xchg
xchg
pop
lods
xchg
add
pop
(bad)
fidivr
jno
mov
inc
or
xchg
cmps
push
loopne
sub
mov
or
test
xchg
test
mov
and
sub
jl
nop
xchg
push
lea
add
inc
push
lea
cmp
jmp
push
push
adc
pop
lahf
jl
xchg
ds
ret
call
pop
hlt
pusha
stos
mov
push
push
push
pusha
mov
das
inc
mov
and
xchg
test
popa
int3
scas
or
sub
and
inc
cmp
out
out
inc
outs
xchg
cmp
mov
stos
cs
leave
adc
inc
in
add
movs
sub
(bad)
jmp
stc
add
or
rol
add
mov
rcl
movs
or
sbb
mov
mov
cwde
adc
xchg
scas
and
add
xchg
mov
loopne
ins
(bad)
and
xlat
sub
inc
fmul
adc
add
daa
or
and
sub
cmc
fsubr
xchg
retf
push
pop
jne
mov
dec
in
and
(bad)
mov
nop
or
xor
jge
mov
out
xor
xchg
dec
jae
adc
nop
jae
sub
add
in
pop
inc
cmc
mov
add
out
retf
int
test
rcl
ins
nop
adc
clc
push
inc
push
cmp
jbe
inc
or
call
xor
adc
pusha
adc
mov
mov
sub
add
fmul
pop
ins
and
and
out
out
push
dec
adc
xor
push
scas
mov
mov
adc
jmp
imul
add
out
dec
add
cwde
add
sbb
adc
in
xor
jp
(bad)
jnp
push
jo
je
add
xchg
mov
mov
sub
cmp
retf
or
adc
and
add
and
popf
stos
and
enter
push
sbb
(bad)
rcr
leave
scas
daa
and
out
adc
mov
ins
xor
and
pop
dec
je
ja
cmp
pusha
xchg
stc
or
push
ret
dec
add
in
lock
jne
xchg
sub
or
loope
adc
adc
xchg
and
sbb
movs
mov
push
and
sbb
and
rol
push
adc
(bad)
ss
mov
inc
div
pop
ja
or
add
sub
sub
and
(bad)
neg
sbb
inc
imul
aam
push
inc
jnp
test
aas
add
loopne
jb
mov
push
sub
push
dec
push
jae
inc
int
sbb
dec
push
data16
xor
cmp
mov
loopne
iret
xchg
shl
sbb
shr
sub
sub
add
cmp
fild
pop
icebp
dec
xchg
push
shl
mov
test
imul
sub
xorps
ret
inc
jmp
push
mov
sub
jmp
jae
xor
test
and
repz
push
jnp
and
adc
and
mov
pop
inc
xchg
ins
mov
push
and
adc
jg
mov
imul
mov
xchg
test
sub
adc
out
xor
ret
fbstp
mov
sahf
inc
push
mov
cs
loopne
inc
mov
dec
ss
or
aas
inc
nop
and
inc
sar
lock
mov
push
sub
mov
scas
sbb
xchg
test
ins
xor
sbb
scas
cmp
outs
repz
test
dec
inc
push
xor
inc
and
push
sbb
loope
dec
jnp
and
adc
sub
stos
dec
in
xor
xchg
fs
or
mov
and
push
push
add
or
sub
adc
sbb
add
pop
inc
inc
fiadd
in
mov
adc
nop
adc
push
xchg
jmp
push
outs
mov
cs
add
ror
jb
das
out
ds
and
inc
xchg
addr16
adc
std
and
shr
sub
add
push
inc
sub
imul
adc
loop
loopne
mov
daa
bound
aam
sbb
cmp
add
lods
add
fiadd
and
and
pop
arpl
lds
jecxz
adc
cmp
daa
cmps
xchg
mov
add
push
pusha
mov
and
or
push
pop
test
or
inc
les
call
add
push
adc
mov
scas
add
adc
adc
dec
ret
mov
add
int
sbb
add
mov
adc
mov
mov
adc
or
push
test
cmp
jp
fadd
push
dec
sahf
mov
xchg
iret
or
enter
in
add
fmul
in
xchg
xchg
push
fisttp
mov
cmp
mov
loopne
xor
pop
xor
aaa
imul
inc
cmp
sbb
add
mov
and
dec
loopne
inc
call
mov
sbb
rcr
mov
add
adc
jo
or
and
outs
fidivr
lock
adc
lea
outs
adc
and
(bad)
push
or
adc
xor
or
hlt
call
lods
adc
icebp
sub
push
xchg
mov
fs
mov
sbb
pusha
int
pop
adc
in
stos
das
pop
inc
xor
mov
mov
stc
movsx
adc
inc
mov
fcmovne
rol
mov
jo
neg
sub
stc
cmp
ds
jg
sub
jne
call
nop
or
mov
std
dec
inc
les
sbb
mov
test
jg
sub
dec
xor
inc
adc
xchg
or
add
and
repnz
dec
movs
pop
add
lods
push
rcl
and
fucomi
jne
rcr
nop
xor
xchg
push
addr16
aaa
add
std
fistp
sar
rcr
jle
daa
push
jo
pop
fwait
sbb
ror
loopne
push
mov
inc
push
ds
cmps
xor
test
int
mov
mov
sub
adc
fcomp
jne
cmp
adc
fild
add
pop
cwde
xchg
arpl
xor
adc
inc
loope
adc
and
mov
cmps
mov
loope
test
cwde
mov
je
inc
lods
push
inc
xor
add
sbb
pop
sub
mov
fcom
push
inc
and
xchg
inc
(bad)
cmp
inc
adc
test
jmp
arpl
loopne
fdiv
xchg
(bad)
scas
fst
push
jge
lahf
lock
sub
or
lea
clc
mov
and
ret
scas
adc
mov
push
push
lock
rcl
jo
add
sub
cmp
leave
ins
(bad)
retf
ret
and
push
call
or
xchg
xchg
xor
test
mov
sbb
out
mov
dec
push
adc
fnsave
cdq
xor
mov
pusha
ins
xchg
out
leave
fs
je
mov
jo
pop
je
cmc
pop
add
mov
push
inc
js
pop
xor
dec
inc
jl
push
(bad)
xor
mov
mov
xchg
ror
inc
xor
clc
mov
add
jmp
mov
in
ror
mov
and
mov
push
movs
mov
pop
push
pop
xor
int
push
js
adc
adc
out
push
add
lock
js
lds
or
ins
and
inc
je
daa
daa
inc
push
shl
sbb
nop
cdq
jno
cmp
and
jo
mov
loop
adc
pop
and
test
and
sub
mov
pop
and
jb
popf
add
mov
lea
xchg
js
mov
loopne
frstpm(287
adc
sub
lods
arpl
dec
push
clc
dec
xor
push
push
and
and
movs
pushf
cmps
hlt
enter
jl
and
pop
sbb
mov
cmp
out
sub
and
mov
mov
and
inc
jg
adc
cs
inc
jnp
add
pop
add
mov
mov
push
loope
xor
ret
add
(bad)
mov
mov
mov
outs
jo
xchg
sti
stos
aaa
fdiv
adc
push
add
or
cmps
movs
outs
and
mov
retf
mov
rol
push
cmc
or
pop
cmc
sbb
out
retf
mov
inc
add
ret
jmp
and
fdivr
ins
mov
or
mov
dec
xor
xchg
mov
(bad)
nop
add
and
inc
jle
clc
add
fimul
es
or
dec
les
or
mov
shr
add
mov
ret
loop
mov
test
fwait
arpl
adc
bound
push
push
xchg
into
sub
test
loopne
movs
movs
inc
inc
sbb
mov
in
and
pop
add
scas
mov
nop
mov
add
repnz
xchg
sub
fldcw
cmp
(bad)
(bad)
and
jmp
sbb
in
push
mov
add
xor
inc
xchg
les
clc
cmps
cmc
dec
mov
push
sub
xchg
lock
or
sub
data16
xchg
xchg
out
push
fistp
retf
sub
push
adc
pushf
or
inc
and
xlat
xor
inc
xchg
mov
jecxz
adc
add
inc
adc
add
lods
or
pusha
push
add
dec
xor
jae
sub
cmp
inc
mov
xchg
pop
adc
popa
les
mov
gs
sub
sub
inc
pop
pop
clc
push
lea
sub
or
lods
add
cmp
xchg
push
sub
mov
adc
aad
and
(bad)
mov
inc
xor
and
xchg
sub
push
mov
mov
or
and
(bad)
cdq
mov
cwde
cmp
push
sbb
push
enter
mov
adc
sub
xor
cmp
test
rol
adc
(bad)
mov
movs
sub
(bad)
out
in
in
retf
and
daa
xchg
stos
inc
ror
repz
shl
jb
mov
in
in
or
inc
push
(bad)
sub
inc
add
xlat
dec
enter
add
jmp
in
pop
mov
pop
xchg
(bad)
or
inc
stos
push
mov
dec
gs
in
test
xchg
pop
fmul
in
in
jae
mov
(bad)
(bad)
in
pop
push
sbb
add
push
mov
cmp
cdq
push
push
xchg
dec
inc
dec
js
sub
or
sub
test
adc
sub
sub
(bad)
stos
movs
mov
jne
stos
push
or
pusha
std
stos
in
in
movups
pop
add
call
xor
mov
and
clc
shr
ret
push
add
pop
xor
sub
movs
xor
pop
stc
pop
mov
(bad)
pop
cs
adc
push
out
mov
enter
int3
inc
pop
xchg
sbb
adc
addr16
test
lods
sti
leave
and
add
lock
mov
aaa
push
jbe
push
sub
hlt
or
cmp
ja
aam
pop
adc
or
addr16
pushf
inc
or
add
xchg
xor
pop
lea
adc
hlt
and
and
inc
sub
add
imul
sbb
sbb
push
xchg
mov
enter
xlat
jae
jne
sub
sbb
add
fisttp
call
xor
bound
call
or
inc
clc
jmp
mov
sbb
pop
xor
pusha
or
sub
fisub
mov
addr16
add
mov
repz
inc
inc
sub
shr
inc
in
dec
push
js
imul
loopne
xchg
ins
das
inc
iret
jnp
dec
adc
ss
mov
sub
mov
adc
sbb
add
or
lods
dec
xor
cmp
js
or
dec
aad
rol
dec
pop
jno
pop
add
ror
jo
dec
rol
jp
xchg
mov
js
ret
xlat
stos
cmp
je
daa
(bad)
jbe
pop
xchg
pop
pop
nop
stos
div
sub
and
stos
movs
js
dec
test
jmp
dec
and
lock
cmp
mov
push
xlat
cmp
test
je
sbb
ins
pop
sbb
or
add
add
and
pop
or
aam
mov
jmp
fisubr
inc
cmp
cmc
adc
adc
jo
ja
dec
gs
push
and
test
sub
mov
or
nop
ret
inc
nop
cmps
movs
ror
adc
sbb
repnz
pop
cwde
mov
repnz
sbb
sub
xor
mov
adc
push
call
test
add
inc
sbb
push
sbb
loopne
iret
popf
(bad)
mov
cmp
jge
adc
cmp
imul
xchg
nop
std
dec
jge
sbb
jmp
mov
sahf
dec
sub
(bad)
cmp
jle
push
dec
inc
mov
sub
dec
nop
or
push
lea
dec
ret
sub
mov
sbb
pop
jo
or
mov
sbb
or
adc
push
shl
pop
hlt
les
mov
cld
jg
push
test
enter
movs
sbb
nop
test
inc
push
inc
inc
inc
inc
pop
cs
dec
inc
inc
inc
inc
sbb
ds
leave
add
in
mov
aaa
cmp
mov
ins
neg
mov
pop
jle
mov
and
inc
xchg
out
je
sub
add
jle
sar
xchg
das
pop
dec
(bad)
dec
mov
iret
sub
imul
sbb
sbb
in
mov
sbb
in
retf
sbb
push
sbb
sbb
or
retf
leave
add
daa
jae
cmps
mov
cmp
inc
add
or
xchg
dec
adc
pop
adc
lods
mov
jns
push
mov
frstor
mov
lock
sbb
lock
push
daa
loopne
fnsave
fisttp
and
xchg
or
jo
jns
mov
movs
add
in
pusha
or
out
sub
test
sub
mov
inc
dec
push
out
cmp
in
mov
cmp
dec
pop
in
or
aas
call
sub
mov
rol
add
test
mov
mov
in
in
push
sbb
xchg
mov
add
adc
loope
std
adc
or
add
and
sub
add
sbb
shr
or
pop
inc
push
sbb
adc
inc
sub
js
mov
rol
push
rol
pop
sub
mov
push
cmps
inc
lock
hlt
inc
xor
or
xchg
mov
stos
cmp
scas
or
(bad)
push
sub
sbb
sub
sbb
mov
mov
cmp
add
fmul
movs
jmp
loopne
ins
push
nop
out
jl
inc
test
inc
inc
lods
xor
addr16
xchg
sub
push
vmwrite
call
sbb
mov
enter
loopne
adc
mov
ja
xchg
fsub
mov
movzx
shl
in
mov
dec
xor
shr
sbb
xor
stos
push
add
loope
movs
test
mov
mov
xor
lods
stos
mov
mov
xchg
mov
je
sbb
inc
dec
xchg
inc
mov
push
mov
inc
add
out
in
lea
les
cmps
shr
sar
stc
pop
int3
out
or
movs
jo
fistp
xor
das
lds
cmp
adc
pop
xchg
and
sbb
cmp
ret
adc
mov
movs
ret
mov
mov
inc
mov
mov
mov
mov
cmp
jmp
push
and
dec
loopne
push
mov
enter
sub
jmp
sbb
mov
xchg
jg
mov
fsubr
cdq
sbb
mov
nop
mov
jge
jle
and
enter
jle
test
mov
xchg
jge
sbb
add
test
aaa
movs
sbb
push
sbb
cmp
nop
mov
jg
adc
dec
inc
sub
sbb
xchg
xchg
sbb
(bad)
sbb
test
sub
cmp
leave
cmp
not
fstp
popf
adc
jbe
mov
enter
rol
fadd
sbb
sbb
inc
(bad)
in
inc
dec
repnz
fsub
inc
inc
xchg
ret
mov
inc
mov
(bad)
jo
jo
ins
pusha
add
xchg
or
neg
add
aam
dec
inc
sub
adc
jae
push
jecxz
daa
test
adc
push
hlt
add
ds
hlt
sbb
add
out
inc
inc
cmp
adc
sub
xlat
xchg
mov
aam
mov
inc
jo
xchg
nop
dec
pusha
jne
dec
and
inc
stos
mov
stos
add
ds
fcmovne
cwde
cmc
out
push
add
mov
repnz
or
ins
hlt
in
nop
xchg
pop
add
mov
and
sbb
sub
add
dec
pop
out
add
xor
sub
jg
pop
fwait
rcl
gs
and
add
dec
ret
xchg
push
std
xchg
or
mov
scas
mov
mov
push
push
mov
add
shl
adc
nop
inc
mov
mov
cmp
shl
xchg
xchg
ins
loopne
daa
cmc
dec
xor
fisubr
nop
xchg
mov
cwde
pop
mov
sub
sahf
pop
pop
push
(bad)
arpl
add
jae
dec
sti
sbb
adc
popa
inc
push
pop
pop
xchg
ret
xchg
pop
dec
fld
das
push
xchg
iret
mov
add
push
mov
shr
xchg
repz
(bad)
imul
xor
jecxz
jge
rol
cmp
push
pop
sbb
in
mov
pop
mov
adc
jns
test
jnp
push
sbb
pop
push
loopne
fist
mov
adc
push
mov
pop
add
movs
mov
int
(bad)
dec
adc
inc
push
stos
dec
arpl
das
mov
lods
retf
enter
and
cmp
push
xor
(bad)
dec
dec
add
sub
in
push
out
scas
xor
out
add
xor
jmp
movs
in
jne
lahf
mov
jg
dec
inc
dec
sbb
inc
inc
out
gs
pop
repnz
pop
rcr
cmp
sub
sti
push
add
xor
jae
pop
inc
les
ds
xor
rol
int
cmp
sbb
jb
adc
xor
cmp
cmp
nop
mov
cmp
nop
retf
ja
mov
cmp
pop
(bad)
mul
jae
adc
xor
movs
adc
stos
sub
cmp
nop
retf
cmp
sbb
cmp
xor
mov
psllw
adc
arpl
and
dec
in
adc
std
cmp
jo
jb
xor
pop
jb
push
fdiv
cdq
mov
ror
push
movs
test
stc
pop
mov
or
push
pop
mov
retf
in
xchg
and
sbb
sbb
mov
adc
adc
in
jnp
add
jae
and
sub
sub
sbb
and
sbb
loopne
nop
retf
sub
and
mov
div
mov
neg
adc
in
mov
xlat
or
cmp
aas
adc
sahf
mov
cwde
adc
mov
fimul
and
xchg
sub
mov
fwait
push
sub
fs
lods
xchg
rcr
or
popa
stc
mov
movs
push
test
test
jae
xchg
inc
ror
loope
mov
sbb
pop
add
inc
xor
push
add
hlt
mov
sub
hlt
cmps
inc
sub
lahf
add
add
pop
outs
jb
(bad)
adc
stos
shr
inc
sbb
or
inc
mov
add
xchg
sbb
ror
jp
jmp
or
or
mov
xchg
and
nop
xchg
out
jmp
xor
dec
mov
rol
inc
inc
inc
or
test
pop
push
mov
in
rcl
in
inc
or
lods
test
xchg
mov
ss
mov
mov
fs
std
loopne
inc
out
mov
xor
stos
sbb
(bad)
lock
in
(bad)
ins
add
(bad)
(bad)
sbb
add
mov
inc
sbb
(bad)
push
pop
xchg
jno
inc
hlt
adc
jo
in
and
mov
cwde
push
ja
jno
cli
arpl
stos
je
lds
pop
cld
fsubr
ret
add
xchg
mov
dec
push
and
inc
(bad)
rcl
inc
movs
popa
sbb
jmp
or
xchg
and
ja
and
adc
imul
xchg
adc
xlat
pop
sub
dec
xor
xchg
cmp
hlt
xchg
xor
xor
cmp
and
adc
loope
push
sub
sub
out
sbb
ret
pop
adc
sub
(bad)
lods
or
push
sahf
xchg
jno
and
and
and
jmp
sub
push
or
pop
sub
jbe
xor
push
dec
mov
icebp
inc
sbb
xchg
xchg
ja
adc
xor
add
or
out
pop
pop
out
xor
pusha
pop
mov
mov
or
in
mov
push
inc
pop
sbb
dec
jnp
pop
push
movs
and
jb
pop
(bad)
xlat
pop
pop
sbb
ins
pop
pop
and
pop
lods
pop
pop
hlt
pop
pop
sub
xchg
dec
dec
mov
in
inc
ror
pop
pop
sub
mov
in
pop
pop
or
in
pop
pop
call
push
inc
and
push
pop
xor
ror
aaa
sti
shl
and
pop
pop
and
pop
mov
pop
or
addr16
inc
and
and
push
or
fist
enter
add
pop
in
nop
inc
pop
jae
dec
loopne
sub
cmp
pop
add
and
leave
iret
sbb
mov
pop
cmp
nop
mov
cmps
nop
lahf
pop
lock
and
mov
in
pop
pop
push
xor
mov
in
pandn
in
fs
in
fs
in
fs
dec
pop
paddsb
ins
popa
aam
adc
je
push
neg
add
lea
in
fmul
dec
scas
cld
imul
pop
sub
popa
adc
mov
movs
add
cmp
movs
sub
sbb
loop
xchg
cmovne
test
rol
bound
and
popa
pop
int3
jmp
jbe
sbb
xchg
iret
sub
inc
jecxz
call
mov
adc
xlat
pushf
cwde
daa
dec
arpl
das
rcr
js
xchg
mov
xchg
or
pop
aam
add
addr16
add
retf
sbb
add
jle
cmp
shl
popa
adc
retf
sbb
push
cli
jmp
mov
xor
arpl
push
scas
cmp
xchg
jl
xchg
inc
arpl
sub
or
add
xchg
sub
rcr
mov
adc
fcmovnb
jmp
pop
or
daa
and
cdq
dec
push
and
mov
or
dec
inc
dec
ds
arpl
test
inc
or
mov
test
xor
movs
shr
es
and
and
mov
inc
test
das
fidiv
and
inc
push
push
inc
and
pop
sbb
outs
or
daa
add
mov
push
sbb
push
aaa
push
push
test
sub
(bad)
gs
inc
adc
pop
adc
pop
add
or
mov
push
mov
pop
pop
or
in
call
push
ret
ret
pop
and
add
add
cmp
ja
push
mov
and
ss
push
sbb
push
pusha
retf
lahf
dec
xlat
push
and
inc
pop
sbb
or
add
mov
and
fsubr
(bad)
fsub
std
(bad)
mov
in
ret
movs
mov
dec
cld
cld
jl
xor
imul
inc
addr16
adc
pop
test
leave
push
rcr
push
outs
retf
jmp
and
jecxz
(bad)
popa
test
mov
xchg
popa
movs
add
out
cld
dec
or
test
sbb
daa
mov
dec
sbb
sbb
add
or
cmp
es
mov
xchg
adc
adc
add
jg
test
pop
jb
push
lods
inc
je
mov
sar
pop
add
stc
or
ror
iret
jbe
mov
mov
dec
mov
adc
jmp
dec
mov
leave
inc
or
add
sub
push
dec
add
psubsw
add
pop
jno
xor
sti
cmp
xchg
gs
mov
mov
pusha
and
pop
or
xchg
push
out
fsubr
mov
enter
daa
xor
cmps
and
cwde
xor
sub
call
dec
movs
ja
cdq
nop
inc
xchg
shl
and
xor
xchg
xor
in
add
push
sub
fcomp
and
lods
iret
dec
imul
inc
vpclmulqdq
xor
in
mov
sbb
rcl
jl
xlat
sbb
push
and
sbb
ins
or
or
sahf
xor
adc
jge
(bad)
add
fst
xor
inc
xor
xchg
or
xchg
xlat
dec
or
ret
dec
xor
and
pop
movs
retf
xor
add
xchg
push
jne
pop
jb
add
fnstsw
iret
adc
fisubr
push
xchg
push
or
rcl
int
das
aad
dec
rcr
(bad)
outs
mov
and
ret
and
rol
add
bound
fdivr
test
sbb
fcom
mov
fsub
cwde
sub
sbb
mov
fisubr
inc
and
adc
xor
aas
imul
and
mov
add
and
or
in
outs
pop
movs
aaa
mov
outs
sub
ds
adc
(bad)
lea
xchg
jnp
xchg
pop
and
(bad)
jnp
jo
dec
pop
cmc
or
ins
(bad)
pop
push
das
arpl
adc
popa
ror
lea
pushf
sub
push
xor
das
pushf
shl
test
stos
inc
out
stos
pop
and
xor
xor
xor
cmp
sbb
jb
add
mov
nop
fs
cmp
sbb
push
add
mov
sbb
jmp
push
ins
mov
or
and
aas
std
push
add
push
sbb
movs
jne
test
xchg
pop
test
adc
int
scas
adc
cmp
mov
test
repz
xchg
stc
mov
jnp
jecxz
jo
or
xor
and
mov
das
jecxz
aam
add
sub
adc
out
jb
ins
pusha
dec
imul
and
imul
pop
rcl
push
cs
and
js
inc
add
movs
mov
xchg
xlat
sbb
test
lods
dec
int
inc
nop
add
or
xor
mov
xor
jns
and
les
xor
scas
sub
int3
cmp
pop
fcomp
pop
jge
repz
adc
pop
adc
int
stc
pop
shl
add
sub
cmc
movs
loopne
loope
adc
pop
fsubr
jb
pop
xor
and
mov
push
inc
bound
and
mov
cmps
mov
sub
test
dec
es
lods
pop
or
shl
mov
mov
mov
popa
pusha
push
neg
cmp
mov
jne
xchg
mov
adc
ds
and
cmc
and
leave
jbe
jne
push
js
pop
out
cmp
sbb
shl
pusha
arpl
pop
mov
jbe
add
inc
in
jae
int
adc
outs
cld
sub
pusha
and
retf
pusha
leave
(bad)
shr
cdq
sbb
movs
ss
clc
call
clc
clc
call
clc
clc
outs
aaa
lods
and
cdq
icebp
pop
cmp
mov
aad
jmp
adc
gs
int3
xor
xchg
cmp
rcl
das
pop
jb
repnz
fdivr
outs
cmp
mov
int3
push
in
mov
sar
daa
cmp
push
shl
ds
(bad)
push
in
mov
enter
outs
fld
cmp
jge
fmul
xchg
add
adc
out
push
adc
mov
add
test
fsub
das
shl
sub
or
fmul
inc
imul
call
std
jnp
jge
sub
xchg
lock
rcl
pop
mov
movs
cmps
xor
jo
inc
sub
xchg
in
popa
inc
push
and
push
out
ror
loopne
add
mov
ds
test
enter
xchg
dec
fcom
push
sub
aaa
sub
sbb
repnz
outs
mov
sti
pusha
jmp
imul
cli
ret
ret
ja
(bad)
xor
pop
and
add
enter
dec
sub
in
xchg
mov
aam
imul
dec
sar
add
xchg
cmc
mov
retf
mov
mov
mov
adc
jp
popa
push
xchg
(bad)
sbb
xchg
in
dec
test
dec
pushf
retf
or
mov
mov
out
es
outs
call
inc
add
cmp
repnz
sub
jmp
mov
test
popa
mov
cmp
outs
sbb
mov
fstp
push
imul
das
pop
pop
js
fiadd
ins
add
xlat
ins
addr16
add
xchg
clc
sub
arpl
sbb
pop
cmp
sar
fisttp
xor
dec
dec
ja
push
or
stos
nop
add
pop
xchg
or
imul
mov
xchg
mov
mov
push
ja
retf
jnp
(bad)
ds
outs
aas
mov
out
mov
xchg
mov
out
pop
and
test
push
and
ret
movs
sub
retf
jmp
or
sub
dec
fadd
xor
ror
mov
inc
push
loope
sar
shr
add
xchg
jl
adc
push
mov
pushf
add
movs
test
ja
clc
mov
repnz
inc
es
lods
add
inc
add
ins
add
pusha
in
rol
repnz
sub
xchg
daa
push
or
cld
push
gs
jmp
add
xlat
push
arpl
push
movs
adc
pusha
add
int
inc
and
jge
jnp
les
cmp
inc
adc
sub
int
je
das
add
push
adc
test
push
pop
sub
cmps
cmovnp
out
xchg
push
adc
stos
ins
push
or
pop
in
add
adc
psrlw
push
loopne
push
hlt
call
or
mov
clc
mov
or
xchg
cmp
mov
or
adc
sub
out
sbb
arpl
lock
jle
cld
jge
inc
add
inc
and
pop
inc
movs
sbb
push
mov
clc
add
shr
repnz
std
mov
push
fild
scas
ss
and
push
adc
(bad)
addr16
jmp
arpl
push
add
and
out
daa
mov
inc
push
jo
inc
adc
popa
add
dec
bound
repz
fdiv
data16
pop
add
fidivr
jae
pop
mov
adc
arpl
dec
add
xor
jo
add
add
sbb
mov
inc
gs
leave
aas
test
pop
jae
ins
outs
arpl
mov
cmp
push
ja
mov
pop
adc
in
push
sub
mov
call
pop
nop
xor
pop
sub
scas
adc
pop
and
inc
xchg
shr
mov
cmp
test
mov
inc
fcom
inc
mov
adc
cmps
pop
movs
fiadd
xchg
and
les
inc
das
pusha
lods
xchg
pusha
sbb
add
mov
hlt
ret
popa
sbb
sub
jne
pop
cmp
sbb
mov
dec
sub
aad
ins
add
ror
test
cmp
or
sub
(bad)
sbb
popa
(bad)
or
pushf
clc
ins
jl
or
(bad)
or
sub
push
cmps
mov
clc
rol
push
cs
pusha
dec
mov
test
les
inc
cdq
xchg
(bad)
and
les
xor
daa
adc
popf
adc
scas
inc
sbb
dec
rol
retf
ds
ja
add
add
sbb
aaa
mov
and
jmp
jmp
add
daa
dec
mov
bound
sub
mov
or
mov
fld
test
or
dec
jb
data16
mov
hlt
jge
adc
ror
jo
sub
lahf
sub
das
rcl
xchg
rcl
adc
shl
fmul
rol
mul
inc
or
bound
push
mov
add
in
bound
and
inc
pop
fmul
inc
adc
and
xchg
xchg
movs
test
lahf
mov
dec
sbb
add
jns
add
xchg
xchg
push
adc
call
daa
add
dec
rcr
add
and
add
mov
imul
ret
pop
jl
in
in
xchg
mov
adc
inc
inc
repnz
dec
imul
outs
inc
or
pop
jmp
mov
add
mov
add
(bad)
ja
ins
or
push
inc
sti
xchg
das
rol
jbe
xchg
(bad)
call
retf
xor
adc
mov
lahf
push
loope
lods
and
and
mov
into
ror
(bad)
push
fdiv
dec
daa
lahf
adc
in
mov
jge
loopne
and
xor
push
pushf
fadd
mov
cmp
jbe
cmp
movs
pushf
add
mov
test
xor
xor
adc
xor
gs
rcr
sub
mov
inc
xor
daa
js
enter
adc
(bad)
iret
int3
imul
adc
paddb
retf
dec
fisubr
inc
mov
sbb
add
loop
mov
and
pop
rcl
push
sahf
les
adc
sub
fiadd
(bad)
adc
or
mov
add
or
mov
stc
dec
add
fisttp
jo
dec
lock
loopne
mov
mov
je
pop
jne
jle
dec
aad
or
jnp
pop
sub
or
xor
xchg
data16
ror
rcr
mov
xor
cmc
fcmovne
es
sub
test
mov
adc
sub
xor
fcmovu
xor
aaa
fild
ins
je
and
adc
or
xor
pusha
sub
sbb
mov
mov
xlat
mov
pop
mov
loope
dec
sub
adc
cwde
movs
xor
hlt
pop
nop
sbb
add
add
sub
xchg
inc
adc
mov
cmps
mov
push
mov
push
xchg
les
out
and
mov
push
rol
mov
lahf
push
mov
in
inc
dec
iret
push
test
push
fsubr
ret
sahf
pushf
scas
icebp
mov
push
adc
sub
inc
pushf
and
repnz
xchg
pop
lock
inc
xchg
push
adc
repnz
jecxz
mov
inc
mov
gs
rol
bound
xor
imul
xchg
sub
pop
(bad)
push
(bad)
mov
dec
test
push
jecxz
jne
add
adc
cmps
xchg
pop
or
pop
add
pop
shl
pop
ins
dec
pusha
push
rol
cmp
repnz
leave
nop
(bad)
pop
inc
xchg
pop
cmp
repnz
nop
(bad)
pop
adc
pop
jno
repnz
push
imul
jae
pusha
out
cmp
lds
in
popa
call
ja
in
call
mov
hlt
push
or
xchg
push
push
test
(bad)
mov
mov
fadd
xlat
cmp
rcr
cmp
(bad)
lock
push
je
neg
push
enter
fcomp
(bad)
mov
push
xor
push
test
dec
xor
mov
or
adc
pop
repnz
sub
add
pop
add
sbb
adc
sbb
jge
jo
add
push
sbb
(bad)
xor
fnstenv
mov
(bad)
in
add
add
mov
loop
adc
add
jbe
inc
and
stc
loopne
pop
mul
xor
ins
ja
xor
push
pop
inc
shl
xchg
pop
ret
push
cld
push
and
xchg
pop
je
adc
daa
pop
jmp
xor
fisubr
or
ins
outs
inc
pushf
jl
movs
dec
jo
loope
cwde
add
mov
xchg
mov
mov
inc
push
loop
aaa
mov
or
je
xor
cmc
or
ret
adc
xchg
xchg
dec
push
sbb
adc
push
pop
and
cmps
adc
dec
and
rol
rcl
push
push
ret
sub
(bad)
xlat
add
jns
or
(bad)
jmp
xchg
pop
add
add
ins
aas
call
cmp
push
clc
outs
cwde
inc
gs
xor
or
and
dec
adc
xor
xor
xor
pop
hlt
mov
mov
or
jo
iret
in
inc
push
(bad)
js
mov
xchg
cmovge
pusha
les
pushf
cmp
xchg
xchg
and
sub
nop
xchg
push
sbb
adc
push
push
push
popa
popf
dec
sbb
clc
sbb
jne
mov
test
or
lock
mov
push
scas
adc
aad
xchg
adc
pop
or
add
add
iret
lods
outs
dec
mov
rol
mov
sub
add
scas
les
mov
ret
push
cmp
sbb
xchg
sbb
pop
aaa
sbb
stc
xchg
or
jge
ret
aaa
adc
mul
and
xchg
jg
dec
add
or
inc
rcr
out
daa
jns
test
push
mov
add
push
xchg
push
jno
das
inc
enter
orps
jb
popa
sbb
iret
shl
jg
dec
or
sub
pop
(bad)
icebp
imul
mov
add
add
inc
pusha
xchg
xchg
cwde
and
inc
mov
retf
sub
jne
mov
add
add
or
popa
jne
and
xchg
pushf
add
inc
repz
cli
cwde
jb
or
or
add
cmp
out
cmp
mov
jg
push
cmp
push
push
jnp
mov
pop
pop
adc
call
dec
hlt
and
jg
or
push
mov
aaa
or
and
mov
mov
or
popa
mov
add
pop
add
popa
jmp
pop
push
sub
dec
arpl
sub
addr16
pop
push
retf
cmps
fadd
dec
xchg
retf
rcr
or
add
jecxz
cmps
push
push
vunpckhps
pop
sahf
add
repnz
push
fwait
and
loopne
dec
xchg
jbe
ds
and
adc
test
clc
(bad)
jge
push
mov
xor
mov
sub
call
shl
xor
mov
add
pop
das
(bad)
bound
ficomp
and
popa
cmps
pop
push
push
push
das
fs
add
iretw
pop
cmp
and
jg
add
sbb
pop
and
rol
in
ret
xchg
and
nop
push
sbb
push
lods
popf
or
or
pop
sar
aas
push
mov
outs
pop
jle
and
shl
loop
and
xchg
rcl
test
(bad)
fsub
sbb
xor
cmp
dec
in
adc
aam
mov
loop
retf
pop
cs
sbb
add
adc
xchg
leave
aaa
jne
add
mov
jmp
outs
xchg
es
aam
sbb
ja
pop
add
mov
hlt
iret
xchg
movs
push
pop
xchg
(bad)
mov
adc
add
call
or
adc
sub
mov
mov
mov
ret
jp
(bad)
cld
mov
rcl
mov
jmp
mov
jmp
push
outs
iret
pop
sub
cwde
retf
mov
pop
hlt
inc
add
push
shr
les
cmps
mov
addr16
jmp
add
lahf
inc
add
push
test
dec
imul
dec
jecxz
int3
sbb
jae
inc
push
xchg
jne
jbe
push
add
dec
inc
mov
mov
add
enter
dec
or
div
push
and
push
imul
or
cli
or
outs
shr
or
cmp
jae
fisttp
adc
inc
sbb
mov
mov
inc
inc
call
cmp
arpl
jg
sbb
add
push
add
add
xchg
mov
shl
sub
inc
adc
sbb
ret
cmp
push
inc
lods
sub
and
pop
xchg
push
mov
movs
xor
mov
dec
add
push
ins
dec
je
add
adc
xor
lods
mov
sbb
xor
dec
fs
shl
ins
sbb
or
iret
or
ret
mov
and
mov
fs
adc
adc
pop
cdq
add
inc
or
cmp
enter
arpl
adc
sar
dec
jb
daa
lea
rcr
cdq
sbb
adc
sub
xor
jae
xchg
cmps
mov
adc
mov
mov
lahf
and
inc
adc
inc
xor
ss
or
fisttp
sbb
pop
cmp
dec
sbb
fmul
xor
imul
dec
and
or
mov
fnstenv
push
imul
adc
push
and
push
mov
or
lea
nop
mov
int3
mov
popf
adc
ins
mov
enter
ins
cmp
push
cmp
add
mov
sub
xchg
bndldx
and
push
pop
dec
inc
fild
mov
repnz
popa
out
inc
mov
xchg
lods
pop
adc
popf
shl
sub
mov
cld
test
inc
mov
cli
jmp
xchg
push
outs
ja
add
or
mov
add
xchg
pop
aaa
loopne
jg
inc
not
and
or
adc
adc
imul
adc
push
movs
or
sbb
cmps
or
push
dec
movs
push
dec
mov
lods
adc
test
dec
jo
push
shl
mov
inc
add
pusha
add
test
or
bound
inc
adc
dec
adc
and
(bad)
out
mov
lods
and
ja
dec
repnz
icebp
(bad)
adc
and
popf
or
test
adc
cdq
fs
push
add
pusha
outs
fwait
movs
mov
test
pcmpeqb
mov
xchg
popa
or
jmp
inc
cmp
dec
fadd
sbb
mov
or
(bad)
mov
xor
or
adc
dec
sbb
xor
or
xor
pop
push
and
movs
or
or
push
js
enter
dec
ret
add
mov
adc
inc
inc
push
pushw
fdiv
cli
jmpw
xchg
add
xchg
pop
xor
sbb
je
jae
fwait
pusha
cmps
iret
cmpxchg
out
cmp
fwait
xor
popa
pop
mov
mov
push
push
stos
push
add
jae
and
cmp
xchg
cmps
jg
add
call
jmp
jno
mov
ja
mov
sub
sbb
bound
dec
adc
dec
lods
cmp
mov
push
jns
xchg
leave
jae
pop
cmc
or
xchg
or
add
and
adc
cmp
ss
inc
or
nop
std
test
jae
and
je
enter
add
and
ds
pop
aad
je
call
xchg
ret
lea
add
es
(bad)
mov
adc
adc
nop
inc
pop
rol
inc
fs
test
test
sub
and
mov
xchg
or
bound
and
retf
pop
jecxz
movlps
sub
and
movs
sbb
cmp
pop
sbb
lds
les
dec
push
test
retf
add
adc
inc
cmp
fldcw
inc
mov
pop
adc
adc
add
and
and
adc
push
add
mov
inc
dec
test
repnz
push
rol
add
sbb
push
shl
dec
dec
inc
pop
js
inc
loopne
xlat
mul
inc
outs
sub
pop
and
pop
into
mov
push
push
ja
add
inc
ds
pop
mov
push
or
pop
add
(bad)
arpl
push
jb
jno
dec
adc
add
icebp
or
sbb
retf
or
xchg
scas
sahf
xor
sbb
and
dec
pop
xchg
mov
adc
pushf
es
popa
dec
mov
ret
pop
xor
adc
stos
jl
pop
fsub
stos
xor
loopne
fild
(bad)
ss
ret
or
pop
pop
das
aad
popa
push
or
push
cbw
mov
push
xor
dec
lods
ficom
aaa
jo
pop
retf
lahf
inc
cmp
xchg
loopne
adc
sbb
aaa
dec
add
add
outs
sub
adc
adc
arpl
scas
icebp
xchg
dec
lea
pop
sar
lock
lsl
inc
(bad)
mov
xor
jmp
push
outs
push
cmp
xor
(bad)
push
stc
inc
adc
cmp
or
pop
inc
rcr
mov
in
shl
lods
addr16
in
lods
outs
xchg
pop
xchg
cmps
and
fldenv
mov
mov
push
daa
adc
adc
out
pop
cmp
dec
out
xchg
shl
pusha
jle
or
sub
cmps
loope
mov
dec
shl
sbb
mov
mov
dec
lods
or
rol
adc
inc
je
fst
sahf
inc
outs
repnz
scas
outs
or
cmp
cmp
jl
adc
pop
cmp
sbb
je
dec
aam
nop
test
push
and
pop
push
fld
repnz
cmp
add
pushf
in
shl
cmp
add
out
sahf
out
loope
scas
mov
push
pop
add
in
fsubr
lds
push
add
lahf
inc
mov
jae
stc
out
push
add
mov
setl
xor
out
dec
sbb
(bad)
adc
jge
mov
or
call
test
inc
or
ds
sub
or
or
pop
push
mov
ficom
inc
mov
push
pop
fild
push
jge
sbb
lods
inc
cmps
and
push
in
cmps
sbb
adc
push
in
and
in
push
in
or
loopne
repz
mov
fwait
mov
push
scas
sbb
iret
cmp
arpl
mov
mov
push
mov
shl
push
mov
mov
ins
in
nop
push
int3
mov
(bad)
sub
push
pop
push
push
stc
cmp
out
mov
mov
mov
mov
aas
int
cmp
adc
stos
leave
add
mov
jo
sbb
cmps
and
add
sbb
dec
pop
sub
mov
jbe
test
daa
enter
xchg
test
xchg
shl
enter
push
xlat
dec
aam
adc
mov
or
adc
sub
or
stc
xor
and
std
repz
cmp
push
adc
sbb
iret
repz
imul
mov
cmp
repz
jg
xchg
popf
js
repnz
add
enter
iret
lds
sub
leave
sbb
fs
jnp
mov
loopne
aam
push
sbb
ins
in
add
push
or
repnz
clc
xor
jecxz
sbb
jo
mov
enter
add
jge
jmp
add
cmp
mov
add
push
fucomip
sub
push
pushf
mov
lods
sar
(bad)
cmps
arpl
cmp
jo
ficom
push
sbb
sbb
and
or
mov
ja
mov
fidivr
push
push
push
outs
les
fldcw
mov
dec
ds
pop
or
pop
push
sub
les
push
repnz
add
pop
add
add
(bad)
push
loope
dec
shr
fild
or
jb
jmp
jl
test
add
pusha
sub
les
mov
nop
pop
xor
das
and
cmp
xchg
ror
aam
xchg
pop
or
int
lds
pusha
sbb
and
int3
xor
leave
in
fs
jbe
daa
mov
adc
sbb
pop
mov
mov
iret
add
mov
and
inc
ror
sbb
or
inc
and
mov
push
sbb
rol
push
sub
pop
push
xstore-rng
cmps
or
repz
in
ficomp
shr
jg
push
dec
repnz
nop
lock
int
jno
push
fld
int3
pop
xchg
(bad)
test
mov
test
jne
pop
cmp
push
push
pop
pop
xor
mov
scas
sbb
sti
xor
sub
sbb
fdivr
pop
or
or
cmp
ficom
fbstp
inc
sub
adc
mov
leave
add
mov
shl
cs
jl
loope
or
xchg
movs
add
xchg
out
pop
push
adc
inc
or
or
and
js
cmp
push
and
mov
push
xchg
pop
xor
test
push
shl
mov
xor
arpl
adc
xchg
sub
mov
or
xor
adc
in
or
dec
ficom
add
mov
inc
and
inc
sub
and
xchg
scas
xchg
mov
loope
or
loopne
nop
push
sbb
cmp
loopne
push
add
stos
pop
xchg
dec
mov
aam
xlat
ja
ret
cmp
sub
call
jp
and
inc
clc
inc
add
pop
mov
movs
(bad)
gs
mov
sbb
adc
xchg
sub
mov
mov
in
adc
mov
out
fadd
cs
jae
nop
inc
xchg
or
mov
outs
or
xchg
mov
(bad)
int3
jns
sub
repnz
scas
mov
mov
icebp
mov
mov
pop
call
or
add
je
pop
ins
mov
fucomi
std
push
push
add
cmp
movs
push
xor
push
lock
or
adc
cmp
jb
fsubr
or
out
movlps
test
xchg
adc
retf
and
dec
cli
pop
sub
in
mov
imul
das
or
jl
cmps
pop
sub
push
mov
and
imul
add
push
xchg
sbb
mov
or
lea
xor
movs
mov
adc
add
add
fwait
imul
out
cmp
inc
adc
dec
scas
or
inc
cwde
pop
pop
fsub
lods
imul
mov
in
or
mov
mov
or
add
imul
add
imul
adc
mov
add
jae
push
push
xchg
in
or
push
rcl
mov
dec
dec
or
or
imul
retf
sbb
adc
les
add
push
ret
jp
add
dec
mov
or
adc
and
or
push
aad
jmp
push
add
pop
sbb
or
daa
lock
int
inc
xchg
push
js
ret
or
xchg
popa
aas
(bad)
sub
xor
sti
mov
sar
jae
js
mov
loopne
or
dec
or
outs
mov
das
adc
ret
pop
jo
cmp
push
push
jae
and
cs
or
adc
and
pusha
rcr
push
add
push
cmp
push
xor
sub
call
inc
adc
pop
xlat
repz
pop
jo
jbe
jle
pop
fwait
xchg
and
dec
inc
daa
sahf
repz
sub
mov
dec
repz
or
cmp
pushf
idiv
imul
pop
sub
mov
add
push
in
fldcw
data16
xor
inc
js
dec
push
cld
out
ins
ds
dec
sub
fcomp
sbb
adc
add
mov
imul
mov
adc
aaa
and
int
add
dec
in
ret
hlt
sbb
inc
and
add
shl
cwde
mov
cld
mov
or
dec
mov
sbb
or
sub
shl
add
sahf
outs
jmp
test
les
sbb
cmp
mov
mov
shl
adc
les
int
test
mov
cs
inc
xor
xchg
or
add
mov
or
es
dec
push
add
add
sbb
nop
and
scas
inc
and
pop
repnz
mov
lock
mov
add
or
pushf
sbb
dec
dec
enter
cmp
je
out
daa
sub
xchg
add
add
jecxz
repnz
out
cmp
pop
mov
popf
call
pop
add
(bad)
cmp
mov
lahf
jge
cmp
or
icebp
pop
jne
jne
(bad)
dec
add
test
punpcklbw
data16
outs
add
and
fwait
mov
test
setnp
inc
inc
add
enter
sti
movs
ins
ja
(bad)
dec
imul
or
and
pop
mov
mov
adc
out
adc
aaa
and
fidiv
icebp
and
inc
jo
lds
sbb
shl
fisttp
neg
or
mov
movs
adc
adc
paddusb
add
bswap
ss
jns
cmp
les
iret
rcl
cvtpi2ps
push
push
adc
xchg
and
out
dec
cmp
sbb
mov
push
dec
adc
(bad)
scas
ret
adc
xlat
push
push
jns
lods
cdq
add
adc
adc
xor
dec
outs
and
mov
fdivp
fisttp
out
test
adc
sub
sub
sbb
ins
jae
adc
sbb
xor
cdq
dec
shr
push
sbb
pop
pop
push
adc
add
scas
fs
pop
add
ret
sub
dec
in
xchg
in
mov
imul
lods
push
addr16
ins
dec
mov
loopne
fdiv
ins
fwait
jbe
push
xlat
lds
and
js
mov
outs
fcmovnb
mov
pop
dec
ss
outs
mov
push
imul
scas
imul
fucom
mov
cdq
rcr
das
pushf
mov
mov
addr16
adc
imul
sub
mov
daa
cmp
dec
jmp
adc
adc
test
push
sub
cmp
jmp
stos
out
add
popf
nop
movs
pusha
icebp
int
mov
fcom
dec
sbb
(bad)
and
(bad)
xchg
adc
mov
mov
fcomi
pop
cmps
into
push
mov
int3
out
sub
xor
out
add
enter
or
or
adc
std
cmp
pop
mov
inc
inc
jge
adc
dec
popa
inc
std
les
and
mov
dec
(bad)
icebp
sbb
scas
mov
fwait
ret
lea
fs
or
cmp
push
mov
ja
out
loopne
sbb
push
xor
fwait
inc
cwde
les
or
nop
sbb
mov
nop
stc
lahf
test
sbb
movs
or
pop
cmp
add
je
mov
je
cwde
outs
in
add
xor
push
sar
dec
cmp
add
sub
shl
pop
dec
push
dec
loop
into
pop
ins
ins
mov
dec
jecxz
ins
sbb
loope
adc
jnp
add
mov
int
push
popa
add
jno
and
or
dec
push
(bad)
ins
cs
(bad)
into
push
jns
add
mov
push
or
dec
dec
or
cmp
mov
pop
xor
outs
jb
or
call
dec
mov
mov
(bad)
add
mov
add
adc
push
fadd
add
ins
push
ds
pop
arpl
repnz
inc
aaa
xor
sub
jnp
or
fs
adc
mov
or
and
xchg
fwait
inc
mov
daa
arpl
mov
xchg
daa
add
cmps
shr
mov
mov
iret
mov
push
and
iret
add
sub
loope
add
push
rol
xchg
shl
jns
rol
jle
iret
push
jns
push
or
inc
or
gs
sub
sbb
push
push
std
cmp
push
sub
or
movs
pop
add
mov
push
icebp
push
push
adc
adc
ret
cs
xor
or
rol
xor
loopne
test
xor
pop
enter
hlt
cld
push
push
and
ins
lds
add
add
repz
fwait
mov
lock
loop
inc
push
adc
rcr
push
inc
call
pop
ja
dec
sbb
inc
movs
inc
add
arpl
pop
pop
add
adc
push
ins
ror
cs
dec
dec
add
xchg
mov
sbb
jns
add
xchg
jno
add
push
adc
xchg
add
add
adc
push
add
cmp
jmp
or
add
sbb
imul
ret
mov
jbe
outs
or
jbe
push
or
enter
sbb
pop
pusha
mov
sub
inc
or
inc
loopne
push
or
pop
(bad)
cs
ins
or
adc
mov
imul
outs
add
shl
iret
sbb
in
mov
adc
mov
iret
push
push
lldt
mov
or
add
xchg
call
pop
dec
jmp
inc
and
cmp
popa
(bad)
dec
or
push
adc
iret
mov
ins
lods
jnp
out
add
or
dec
(bad)
sbb
mov
dec
add
dec
ja
push
push
leave
in
(bad)
adc
mov
push
xchg
fcom
push
add
popa
xor
dec
mov
and
or
sbb
push
ficomp
and
mov
jae
call
dec
adc
push
xchg
pushf
push
mov
mov
pop
sbb
add
xor
push
push
jae
inc
or
sub
sub
call
cli
sbb
or
popa
cmp
or
pop
push
pop
aaa
or
arpl
(bad)
(bad)
push
fsubr
pop
dec
fdiv
(bad)
jno
ins
jecxz
push
mov
movs
or
and
fsubr
aas
pop
mov
scas
test
arpl
xor
ror
add
adc
cmp
ret
push
fld
push
sbb
sbb
fld
or
push
fs
enter
pop
bound
bound
je
add
add
jne
or
aam
push
test
fisttp
mov
or
popf
enter
nop
add
add
xchg
fmul
dec
rcr
sar
data16
retf
or
push
or
(bad)
das
adc
jmp
and
dec
dec
lock
mov
int3
lods
nop
add
lds
or
fisttp
inc
and
add
sbb
and
mov
(bad)
and
pop
stos
adc
adc
loopne
fwait
and
call
mov
fdivr
loope
addr16
out
shl
stc
pop
sub
sbb
cmp
or
test
lods
call
pushf
loop
mov
lods
(bad)
push
mov
imul
fidivr
xchg
adc
sbb
mov
fldcw
pop
and
sub
neg
sbb
jo
scas
fbld
mov
add
fs
ins
xor
pop
cmps
sub
add
dec
or
or
push
push
jno
mov
lock
lds
pop
ret
test
les
sub
in
sub
loopne
adc
xchg
inc
les
loopne
test
in
push
sbb
inc
js
sub
add
sub
loope
loope
sbb
push
cmp
add
add
mov
loopne
outs
rol
in
jmp
push
sahf
push
shl
cmp
push
sbb
cmp
pop
pushf
bound
mov
sbb
movs
add
add
loop
popa
inc
push
push
adc
pop
and
(bad)
adc
and
icebp
jno
ret
push
repnz
jecxz
pop
or
push
loopne
cmp
adc
or
sub
test
mov
and
vunpckhps
mov
xchg
sbb
imul
jle
or
shl
inc
sahf
or
movs
adc
dec
scas
(bad)
(bad)
dec
push
out
or
hlt
jns
sub
clc
sub
xchg
call
loope
pop
inc
adc
jmp
dec
push
shl
adc
daa
inc
(bad)
fdivr
fldenv
ror
add
jnp
faddp
cmp
cmp
push
adc
push
shr
jae
daa
arpl
sub
add
push
pusha
popa
inc
aad
pop
lods
in
out
sub
mov
push
nop
imul
sar
add
adc
and
call
out
and
fldcw
jae
ins
push
add
jmp
add
aaa
push
cmp
cdq
sub
and
mov
mov
jmp
pop
add
inc
push
jmp
imul
push
jle
jo
retf
test
jmp
fimul
out
sub
mov
or
inc
aad
jmp
inc
lock
(bad)
and
add
pop
xlat
inc
sbb
movs
cmp
mov
cmp
jmp
or
jo
or
fidiv
sub
cmps
not
and
jecxz
or
push
test
lods
in
jne
in
add
mov
inc
jmp
and
rol
mov
sbb
popaw
lds
and
add
add
jno
cmp
in
out
jne
sub
in
(bad)
and
std
add
imul
mov
cdq
bound
or
lahf
mov
xor
das
out
xchg
add
cmp
aaa
mov
and
jnp
push
sbb
sub
jbe
sub
jno
fild
popf
in
pop
jp
pop
test
xchg
movs
mov
sbb
out
push
sbb
add
add
fs
lea
push
push
or
ss
gs
or
or
cdq
pusha
cmp
(bad)
pop
pop
popf
inc
or
movs
sbb
and
dec
adc
pop
add
movs
lea
nop
int
dec
inc
mov
cmp
icebp
jns
nop
pop
rol
sub
fldcw
or
adc
xor
cmp
sub
rcl
ret
pop
mov
mov
mov
pop
ret
and
lds
adc
xchg
xor
xlat
mov
push
mov
test
repnz
pop
or
movs
xor
pop
std
adc
sub
imul
mov
inc
sbb
pop
or
push
mov
add
and
or
mov
popa
jge
mov
sar
adc
push
mov
dec
imul
popa
mov
and
xor
shl
jb
xor
sti
adc
jb
mov
hlt
sbb
sbb
sub
adc
inc
movs
mov
dec
and
mov
inc
sbb
add
xchg
pop
shr
sbb
add
add
pop
push
test
inc
jnp
cmc
and
add
cs
sbb
loope
cmc
cmps
inc
pop
add
test
sub
test
nop
sbb
push
imul
test
or
and
inc
or
scas
mov
dec
lahf
mov
neg
mov
addr16
adc
mov
idiv
aad
adc
adc
xchg
test
enter
inc
movs
cdq
xchg
lods
pop
adc
adc
push
ins
shr
clc
bound
adc
dec
pop
adc
and
icebp
adc
sub
js
stc
popf
pop
or
dec
and
sub
scas
stc
xor
dec
icebp
dec
xchg
sbb
adc
xchg
add
fdiv
pop
and
jo
jle
mov
mov
movs
or
lds
cli
pop
pop
loope
push
add
xor
inc
jle
pop
xchg
pop
adc
add
sti
(bad)
ss
inc
aas
imul
pop
inc
sahf
sti
pop
mov
imul
ss
test
add
fiadd
xor
cld
outs
push
add
push
and
mov
push
sub
xchg
pop
(bad)
mov
xchg
and
es
pop
(bad)
sub
sub
dec
xor
xor
retf
sub
std
fwait
or
ror
cmps
adc
inc
leave
shl
mov
cmp
les
add
adc
and
repnz
test
sub
into
sub
mov
sti
dec
pop
mov
pop
ret
sbb
stos
daa
inc
inc
test
jmp
movs
mov
jns
stos
in
cmp
pop
jl
or
adc
add
adc
or
scas
retf
add
sub
hlt
out
ret
movs
sbb
test
pop
imul
ret
clc
mov
pop
stc
jns
lods
push
lds
pop
and
mov
and
add
fnstcw
push
dec
xor
xor
push
sbb
push
test
sbb
cmp
xchg
xor
add
les
adc
xchg
adc
neg
mov
push
daa
aas
sub
pop
jl
cwde
lods
jecxz
loopne
pusha
out
or
jne
sub
xchg
pop
sbb
sbb
dec
pop
pop
pop
cs
lock
sub
add
pop
pusha
imul
ss
gs
test
and
lds
jbe
or
popa
imul
inc
hlt
mov
push
je
dec
shl
cmp
push
mov
loop
(bad)
xor
and
mov
repnz
sahf
icebp
in
int3
inc
mov
jae
mov
ret
pop
popa
imul
mov
inc
sub
imul
inc
fstp
xchg
popa
cmp
outs
push
lds
xchg
outs
or
movs
sub
or
in
or
shl
xchg
xchg
scas
inc
ret
cmps
out
add
or
or
addr16
imul
xchg
retf
out
pop
lock
add
pop
outs
push
out
sbb
sar
add
or
in
add
nop
shl
push
lahf
adc
enter
stos
push
shl
rol
enter
clc
clc
adc
js
inc
mov
xchg
sbb
mov
jo
adc
jne
in
or
ins
cmc
sahf
push
aaa
ja
test
pop
xor
rcl
shl
add
add
fild
lahf
add
outs
fmul
lock
mov
or
pop
adc
out
or
or
loopne
add
scas
adc
cmps
enter
mov
pop
jae
add
or
loopne
xor
in
cmps
sbb
das
out
mov
push
add
or
adc
mov
pop
rcr
jecxz
pop
or
aad
cmps
das
and
add
or
ins
push
push
inc
push
add
sub
cmc
mov
jno
in
in
cld
or
adc
add
out
or
stos
adc
mov
add
lahf
out
dec
jno
sub
nop
push
ja
ror
cdq
pop
add
or
or
mov
adc
mov
sub
loope
push
pop
test
cmp
stc
inc
cwde
push
pop
and
pop
movs
lea
xchg
adc
add
inc
inc
sbb
add
add
ins
inc
push
les
mov
aaa
out
test
or
aad
dec
sahf
add
dec
add
mov
(bad)
ins
mov
mov
pop
outs
adc
jecxz
aas
aad
adc
sbb
and
push
jecxz
or
aaa
push
and
shl
mov
adc
xchg
(bad)
stc
in
inc
push
clc
stos
xchg
adc
imul
sar
sub
test
mov
(bad)
dec
ss
add
xor
and
cmp
mov
bswap
aad
aad
scas
add
dec
scas
daa
xor
test
sbb
add
xchg
or
xlat
dec
add
and
sbb
jg
into
es
xlat
mov
adc
mov
or
shl
inc
lods
out
xchg
inc
mov
add
pop
mov
xchg
cmp
push
ins
pop
adc
fwait
inc
loopne
jo
xor
push
push
inc
xchg
adc
test
aas
(bad)
pop
push
outs
inc
(bad)
pusha
out
sbb
sub
add
pop
jbe
jo
aam
imul
mov
inc
movs
sub
lock
cmp
inc
xchg
lods
jae
jmp
inc
adc
mov
scas
mov
add
test
mov
sub
mov
icebp
mov
pop
add
movs
push
iret
inc
adc
xchg
push
xor
mov
rcl
sub
adc
sub
sub
out
ja
lsl
add
ret
popa
add
pop
mov
ins
mov
mov
lods
pop
in
mov
sbb
pop
pop
mov
or
pop
inc
out
inc
fadd
jno
mov
jnp
in
fimul
or
pop
enter
add
add
popf
les
fidiv
and
leave
(bad)
mov
test
sbb
add
dec
fcomp
cld
lods
mov
sbb
or
xchg
setns
xchg
mov
cdq
pop
ret
adc
dec
pop
aas
jge
push
fist
push
in
mov
pop
cdq
mov
lods
int3
or
loop
jne
pop
test
js
fimul
sbb
mov
lods
lahf
lds
adc
sub
sbb
xchg
ins
into
mov
sub
sub
dec
mov
inc
adc
adc
popa
jge
dec
jmp
dec
inc
mov
cmp
adc
pop
lods
xor
sbb
mov
jae
adc
mov
cmp
pop
nop
sbb
push
xor
push
push
ins
sub
lds
lds
sbb
retf
(bad)
fidiv
sbb
cmc
bound
sbb
pop
daa
or
and
add
in
movs
jns
add
pop
xor
cmp
dec
test
or
add
scas
pusha
dec
or
lods
jo
frstor
inc
psubsb
les
push
inc
adc
das
mov
pop
pop
ins
mov
pop
and
test
push
pop
out
and
cs
call
xchg
jbe
push
inc
xchg
pusha
cmp
pusha
rcr
cmp
mov
and
add
add
add
bound
xor
xchg
aam
pop
scas
mov
pushf
push
mov
in
cmps
imul
test
push
repz
jecxz
scas
fsub
pusha
js
push
push
test
lds
pop
cmp
int
xchg
out
cmp
jbe
and
push
fdiv
pop
xchg
sbb
(bad)
or
pusha
cli
xor
test
pop
sbb
push
dec
inc
mov
jae
enter
xlat
in
pop
add
pusha
jo
pop
js
pop
fild
xchg
sub
cmc
pop
mov
into
test
pop
out
push
cld
dec
call
ins
add
mov
out
call
fs
repnz
sbb
cmp
(bad)
jns
loopne
hlt
jbe
imul
stc
push
xor
sti
pop
js
clc
add
int
imul
clc
add
add
int
repz
or
xor
lahf
out
dec
xchg
mov
pop
mov
out
int3
sub
push
nop
aam
cmp
repz
pushf
enter
iret
ja
cmps
(bad)
clc
sub
inc
push
test
adc
sar
in
push
pushf
adc
adc
mov
cmp
add
mov
fwait
int
loopne
lock
sbb
fidiv
les
push
push
or
push
cmp
jns
out
cwde
movs
mov
sbb
repz
fs
aam
xor
pusha
mov
adc
out
push
test
jge
out
aam
sub
cmps
push
cwde
cmp
out
(bad)
in
and
imul
loopne
and
jnp
out
enter
and
repz
loopne
and
push
fldcw
mov
sub
ins
(bad)
shl
xor
in
fnstcw
aas
fs
pop
inc
sti
cmp
ja
push
inc
pushf
sar
sahf
out
sub
mov
pop
cmps
push
xor
cmp
out
repz
loopne
inc
push
push
enter
in
sub
in
dec
xor
push
pop
push
idiv
data16
pusha
test
adc
iret
data16
into
jl
push
lods
xchg
int3
imul
je
ja
jnp
jge
hlt
fwait
in
fstp
add
ins
fistp
xchg
cwde
xchg
and
jnp
iret
sar
adc
addr16
mov
push
push
pushf
(bad)
call
mov
or
mov
mov
fwait
in
jo
push
mov
inc
cmps
lods
push
cld
scas
fdivrp
mov
mov
movs
mov
mov
in
fldcw
jl
mov
mov
fwait
int
fisub
loopne
mov
mov
pusha
jmp
lock
int3
cmp
ins
adc
cmps
xor
or
lods
sar
cmp
push
and
push
ins
add
loopne
sbb
mov
xchg
add
vmread
mov
mov
mov
mov
add
leave
in
mov
ret
in
cld
inc
sub
repnz
sub
aam
cmp
jns
sub
iret
leave
sar
sub
ins
scas
add
sahf
cmp
xor
dec
dec
jmp
xchg
xchg
daa
daa
repnz
jne
enter
call
mov
(bad)
jmp
inc
add
cmp
ins
jge
mov
mov
out
xor
or
mov
mov
adc
or
pop
add
add
jnp
add
adc
xchg
add
mov
adc
or
add
or
pop
add
add
xor
ja
add
push
add
add
call
add
inc
(bad)
fdivrp
loope
push
cld
repz
dec
cmps
out
push
loopne
imul
or
in
cmps
stc
cmp
cmp
fs
adc
nop
int
jnp
lods
push
adc
mov
sbb
aam
sub
push
mov
and
sub
pop
push
fs
ss
test
add
(bad)
push
fldcw
or
jo
xlat
(bad)
pusha
fcomp
fiadd
mov
fsub
out
mov
push
js
nop
ficomp
fbld
loopne
loop
movs
pop
in
jecxz
mov
shl
push
push
sub
test
outs
push
fs
fdivr
cmp
or
jno
mov
arpl
test
test
dec
ret
add
xchg
pop
je
mov
add
pop
jne
xchg
rcr
cmp
jb
or
dec
jae
and
adc
popa
push
push
jl
imul
jo
add
push
or
mov
jae
inc
push
mov
dec
mov
cmovo
mov
and
xchg
jno
imul
push
and
pop
adc
stos
mov
xadd
dec
call
jl
rcl
add
and
test
cs
jbe
pusha
icebp
scas
and
mov
out
pop
push
mov
and
cmc
pop
pop
test
add
adc
pop
inc
inc
pop
lds
les
and
maskmovq
pop
dec
lds
jno
inc
jo
scas
cmp
lock
mov
or
fldenv
add
dec
scas
or
jae
add
jge
add
jmp
sub
xor
or
test
pop
pusha
mov
or
jmp
ret
int3
dec
lods
push
pop
pushf
pop
jno
ds
adc
add
adc
adc
sbb
pop
mov
mov
jns
jle
iret
test
add
pop
mov
xor
push
sub
pop
popa
bound
ret
rol
outs
adc
push
add
inc
rol
loope
popf
xor
xchg
push
adc
pop
or
mov
or
xor
cwde
mov
push
or
mov
and
or
adc
rcl
inc
fnstsw
mov
or
(bad)
psllq
in
adc
sahf
dec
sbb
adc
into
int
jno
xchg
pop
adc
or
inc
sub
push
repz
xchg
mov
cmp
mov
add
pop
and
push
cmp
stos
sbb
xchg
pop
test
sub
push
js
pop
xor
clc
xchg
icebp
pop
sub
and
or
jl
jbe
jae
xchg
dec
pusha
(bad)
cmps
popa
add
scas
cmp
stc
or
cld
ins
or
jae
rol
adc
sbb
jbe
xor
js
mov
pop
ins
(bad)
and
add
aaa
ficom
and
mov
sub
sub
sbb
lahf
out
pop
cmp
dec
sbb
pop
iret
and
adc
(bad)
push
xor
push
repnz
xor
xor
pop
sub
push
and
xor
aaa
mov
mov
pushf
cmps
pop
and
sub
adc
dec
das
jns
add
add
gs
or
adc
xor
pop
sar
xchg
xchg
test
and
or
sbb
or
sub
sbb
push
adc
jno
neg
push
xor
pusha
add
push
or
inc
cmps
clc
xor
aaa
pop
ins
jmp
mov
push
push
pop
pop
test
pusha
and
cmp
(bad)
lock
pop
icebp
push
or
test
dec
xchg
pop
cli
jg
aad
sbb
test
repz
ss
sub
jp
jo
and
sub
mov
or
and
push
dec
add
(bad)
adc
push
int3
inc
cmps
sub
inc
sub
adc
sbb
fs
loope
int3
int3
push
xor
neg
cmp
adc
cli
cmp
(bad)
aad
icebp
aaa
out
ret
mov
data16
jbe
fmulp
add
push
dec
push
add
pop
aam
fisubr
daa
jmp
inc
mov
inc
mov
add
dec
sub
inc
shl
fwait
ins
mov
ret
cmp
and
js
loopne
xor
mov
push
or
xor
xchg
pop
mov
xor
je
adc
adc
or
je
pop
mov
xchg
or
adc
sbb
les
outs
or
div
push
fs
adc
rol
ror
es
and
add
add
test
mov
lahf
(bad)
dec
inc
nop
mov
xchg
fld
sub
cmp
dec
imul
push
fnstsw
or
and
movups
test
pop
cli
cmp
and
add
pop
mov
ins
jmp
xchg
dec
push
dec
gs
jl
or
sar
dec
inc
sub
mov
pushf
sbb
cmp
jnp
xor
nop
push
test
popa
pop
or
ret
and
lods
and
inc
or
call
aad
add
cmp
arpl
mov
mov
dec
pop
dec
sbb
sub
push
xor
xchg
ret
fild
and
add
push
repnz
dec
push
add
and
xor
imul
adc
arpl
xchg
pop
adc
adc
fs
cmp
inc
inc
cmp
pop
adc
adc
rdtsc
jecxz
adc
inc
pop
iret
jnp
out
inc
inc
retf
push
clc
aam
and
into
cmp
pop
and
sub
retf
pusha
inc
pusha
aam
pusha
push
in
and
jne
mov
pusha
and
pusha
mov
inc
pusha
movs
mov
loop
dec
repz
dec
inc
int3
iret
jns
nop
scas
or
pusha
sbb
pusha
test
add
adc
push
add
dec
pusha
je
pusha
(bad)
jb
or
dec
dec
pusha
in
pusha
inc
xchg
sub
add
inc
fcom
mov
xchg
inc
out
ins
out
push
inc
mov
push
adc
dec
pusha
mov
sti
and
test
addr16
mov
sbb
add
and
xor
and
ja
add
add
adc
inc
add
inc
mov
or
out
push
and
adc
aaa
pusha
jns
mov
xchg
mov
out
movs
sbb
iret
daa
sbb
ds
and
and
lahf
inc
push
inc
outs
mov
bound
jbe
stc
ror
add
mov
add
xchg
dec
leave
xchg
xchg
or
jnp
pop
xor
pop
adc
adc
lock
test
or
inc
sub
wbinvd
fisttp
add
test
add
xor
mov
lock
loope
inc
pop
pop
adc
call
xor
or
call
sub
cmp
adc
imul
test
test
mov
call
push
or
mov
call
pusha
in
inc
sahf
lea
push
push
jg
inc
in
movs
push
lock
pop
cwde
or
push
mov
push
cdq
cwde
adc
into
add
in
sbb
jnp
or
add
mov
dec
fistp
test
and
stos
push
inc
outs
in
mov
xchg
stos
sbb
mov
mov
aas
pop
add
and
pop
add
and
dec
sub
xor
enter
inc
mov
push
add
xor
inc
mov
and
add
cmp
and
sbb
dec
dec
dec
es
xlat
or
inc
jo
xchg
or
or
jno
sbb
inc
jge
iret
push
adc
xor
add
add
loop
sahf
jbe
rcl
add
and
enter
and
test
fadd
int3
call
inc
nop
scas
shl
cwde
in
mov
jo
adc
push
retf
adc
enter
je
push
sub
(bad)
in
add
jmp
lahf
jmp
jge
pop
test
jb
add
push
xor
cmp
cmp
adc
dec
xor
fbstp
sbb
cs
sbb
(bad)
inc
mov
mov
jns
stos
mov
xchg
adc
add
popa
ds
cdq
in
inc
sahf
neg
int
xor
aaa
xchg
faddp
add
enter
enter
nop
out
loope
sub
cmp
xchg
xor
xor
pop
fndisi(8087
push
test
inc
inc
jle
das
inc
adc
pop
dec
lock
or
inc
and
cmp
cmps
sub
fldcw
pusha
cwde
inc
lods
adc
or
push
cdq
aas
or
adc
xor
pop
lods
pop
push
push
mov
add
test
dec
cmps
(bad)
xchg
loop
cmp
ins
es
xchg
test
adc
int3
inc
movs
xchg
nop
nop
pushf
shr
push
movs
das
xor
nop
popa
mov
in
inc
add
push
in
inc
and
cwde
push
sar
pusha
and
add
add
popa
mov
imul
movs
or
rcr
pop
lahf
sub
popa
add
leave
rcr
adc
inc
push
push
pop
outs
pavgb
mov
xchg
mov
jnp
add
pop
adc
lahf
sbb
lea
cs
mov
mov
nop
mov
(bad)
loopne
les
pop
jb
inc
mov
pop
add
ret
cmp
push
sub
xor
dec
dec
inc
push
mov
mov
and
mov
xor
into
mov
and
loope
sbb
adc
push
movs
bound
icebp
push
pop
sbb
add
fwait
mov
pop
bnd
adc
push
push
adc
push
xor
and
sbb
clc
pop
or
popf
clc
mov
adc
push
pop
clc
jbe
add
in
adc
pop
or
movs
ins
dec
fadd
mov
movs
adc
xchg
mov
pop
pop
mov
pop
in
sbb
adc
or
add
cmp
test
or
pop
xchg
sub
mov
add
mov
sbb
mov
js
jae
push
pushf
mov
and
into
push
mov
pusha
mov
push
test
repz
push
add
adc
adc
in
aas
mov
lods
cmc
mov
push
test
lock
stc
inc
sahf
jbe
neg
arpl
adc
jae
test
in
mov
mov
iret
mov
pusha
push
cwde
ret
push
add
test
adc
call
data16
(bad)
repnz
mov
test
shr
xchg
adc
in
add
xchg
sub
rol
imul
aad
sub
dec
inc
inc
dec
xchg
xor
or
pop
enter
sub
cmp
xchg
pusha
popa
repnz
add
inc
or
pop
repnz
lods
sbb
ins
add
ja
mov
movs
mov
sbb
dec
(bad)
int3
hlt
push
push
mov
pop
enter
jo
push
jae
loopne
sar
shl
ss
xor
jb
enter
mov
lock
mov
enter
pop
pop
enter
push
adc
xchg
jecxz
repnz
shl
fnstsw
and
sbb
push
add
add
sbb
mov
les
pop
push
add
pop
enter
inc
sahf
cmp
js
repnz
and
or
xor
mov
and
enter
add
adc
and
mov
clc
test
jl
rcl
ficom
test
jge
dec
cmp
sub
ins
std
data16
xchg
jb
jle
outs
ror
sub
rol
push
repnz
pop
jmp
mov
retf
sbb
fld
mov
cmp
add
adc
ficom
jo
add
adc
mov
in
aad
mov
test
or
nop
imul
push
xor
enter
adc
xchg
and
dec
rcl
xchg
adc
mov
movs
sub
outs
fiadd
sub
cmps
fmul
mov
jb
push
outs
(bad)
clc
loopne
loopne
jo
xchg
add
xchg
or
enter
dec
sbb
test
pop
xchg
and
sbb
sbb
mov
add
nop
sub
ror
iret
mov
pop
mov
(bad)
cwde
jns
push
sub
jmp
test
xchg
or
and
xchg
or
dec
sub
neg
(bad)
xchg
or
lock
mov
data16
pop
dec
test
mov
popa
les
push
rol
dec
xchg
fiadd
or
inc
nop
or
xchg
pop
repnz
faddp
(bad)
call
adc
add
jg
stos
sahf
inc
hlt
fimul
or
mov
in
sahf
loopne
cdq
sub
and
dec
cs
adc
pusha
push
test
je
pushf
inc
cmp
fistp
sahf
addr16
mov
popf
mov
pusha
mov
mov
inc
inc
loopne
sub
inc
sahf
add
mov
stc
sbb
xor
mov
cs
mov
dec
shl
mov
sbb
pop
add
push
add
ins
sbb
les
inc
call
add
dec
add
leave
pusha
cmp
in
mov
aaa
es
adc
outs
inc
mov
adc
mov
and
mov
pusha
jb
pop
repnz
xchg
adc
jnp
jne
sub
push
dec
pop
jb
dec
xor
stos
sub
push
adc
loope
inc
add
adc
lods
call
loop
dec
dec
lods
add
nop
cmps
in
pop
sub
in
push
push
scas
dec
lock
cmp
test
dec
mov
xor
push
cdq
mov
dec
cmp
fdivr
pop
jo
inc
add
sbb
test
xor
je
test
or
adc
call
mov
jmp
pop
mov
sub
dec
js
js
xor
mov
sbb
pop
add
mov
rol
push
mov
cmp
mov
jl
dec
jnp
out
pop
rol
add
sahf
test
scas
das
stc
inc
mov
repnz
mov
and
pop
pusha
mov
test
ret
(bad)
in
cwde
mov
lea
add
nop
mov
dec
push
and
adc
pop
enter
in
push
mov
mov
call
push
test
add
push
jo
sub
xchg
mov
push
pop
fisub
push
xchg
ror
adc
daa
xchg
shr
cmps
sub
or
ret
add
imul
sbb
push
pushf
mov
push
push
pop
retf
les
and
stos
fs
(bad)
push
jbe
imul
sbb
push
jp
loopne
sbb
inc
inc
leave
loope
xlat
aaa
movs
mov
scas
add
dec
retf
add
call
rol
mov
mov
cmps
pop
int3
pop
adc
int
add
push
or
sbb
or
and
and
repnz
push
ror
or
cmp
or
or
mov
ret
test
push
push
add
retf
aam
pop
repnz
fcom
ficom
jo
pop
mov
test
mov
jns
(bad)
mov
test
mov
ja
xlat
dec
pop
sbb
pop
cmp
rol
out
fdivr
sub
ror
or
cmps
mov
lock
and
add
inc
fisubr
pop
bnd
add
push
mov
es
js
cwde
outs
enter
fadd
or
test
jo
dec
inc
js
test
fstp
inc
pop
xor
push
adc
sub
or
xlat
mov
or
sbb
push
or
jb
pop
lahf
lock
movs
nop
loopne
jo
or
and
sbb
loope
movs
pop
enter
cmp
enter
mov
dec
dec
dec
cmp
sbb
gs
pop
push
dec
mov
cmp
fsub
ror
pushf
lea
sbb
inc
add
push
in
add
mov
jne
lds
jmp
push
aaa
jns
sbb
loop
or
cmp
xor
and
inc
cmp
push
and
ret
hlt
cmp
int
inc
add
mov
in
add
mov
and
out
iret
sub
leave
add
pop
or
daa
daa
daa
daa
pop
pop
pop
pop
and
outs
mov
push
popa
sub
sub
mov
sbb
std
jnp
add
add
adc
xchg
(bad)
jle
add
hlt
jno
pop
cmp
jb
das
cli
push
and
clc
sahf
inc
xchg
and
(bad)
or
inc
sti
mov
and
push
mov
fadd
into
in
test
scas
mov
and
pop
mov
sub
push
outs
jb
gs
jo
(bad)
iret
pop
and
(bad)
push
pop
dec
jae
mov
in
dec
push
adc
jb
xor
adc
inc
dec
cmps
pusha
fisttp
or
mov
pop
call
dec
inc
pop
adc
hlt
cli
push
mov
ins
movs
dec
cmp
sub
pop
xor
hlt
push
dec
outs
push
sbb
dec
fcomp
or
inc
push
(bad)
fdiv
imul
or
add
and
adc
or
mov
leave
push
mov
add
add
adc
sbb
and
xchg
push
add
inc
ror
sub
shr
push
or
adc
mov
sbb
add
movs
and
xchg
test
jb
xor
(bad)
mov
out
repz
ins
in
les
dec
sbb
adc
adc
lea
xchg
pop
cdq
xor
jne
jle
or
pushf
pop
cmp
nop
push
push
jle
ss
adc
push
cmp
mov
sub
dec
xor
or
inc
addr16
rol
movs
shl
stos
dec
jg
sbb
les
pop
dec
cmc
mov
and
ins
adc
les
das
xor
lea
cwde
or
clc
fwait
pop
int
inc
cli
bound
xor
lea
inc
shl
bound
nop
adc
(bad)
rol
fdiv
aad
popa
jne
outs
add
ins
movs
ins
inc
sahf
aad
scas
pop
lock
add
sub
push
outs
add
cmp
adc
sub
and
or
jl
lods
adc
lea
lea
sub
mov
mov
es
add
or
xchg
xchg
pop
cmc
sbb
aas
xor
or
add
add
add
add
es
or
movs
mov
test
test
js
and
and
sar
push
sub
push
and
push
or
push
and
add
inc
xor
scas
lods
dec
xor
push
adc
aam
jnp
or
fadd
inc
push
dec
mov
sti
and
jmp
xchg
fsub
pop
cmp
es
dec
jb
and
adc
rcl
cmp
shl
stos
dec
xor
out
pop
or
mov
inc
cmp
inc
inc
shl
or
pusha
outs
push
cmp
orps
xchg
add
pop
adc
bound
and
mov
push
cmp
inc
push
icebp
int3
jo
arpl
mov
xchg
inc
inc
outs
test
aam
push
jae
rol
adc
or
xchg
ss
xor
push
das
loopne
test
dec
xchg
out
sbb
mov
jl
fiadd
or
jb
in
or
movs
fsubr
daa
div
dec
xchg
hlt
call
ficomp
add
hlt
sub
jae
mov
bound
cmp
jne
mov
dec
or
push
lea
add
pop
mov
jmp
call
dec
push
pop
aad
dec
pop
mov
js
and
pop
addr16
out
or
mov
push
int3
sub
test
repz
jl
shr
sbb
call
pop
jle
sub
jo
cmc
jp
or
jo
enter
xlat
inc
adc
add
or
pop
imul
inc
mov
add
mov
and
mov
repnz
and
rcl
push
loop
test
add
test
ins
cmp
jne
adc
ja
mov
scas
sahf
mov
cmp
sub
or
daa
test
or
movs
scas
and
or
bound
pop
ficom
mov
add
add
jb
pop
xor
ss
sub
mov
mov
mov
or
cmp
jb
adc
cmp
std
ja
cmp
jl
sub
ret
fimul
dec
xor
or
pop
je
clc
inc
or
sbb
jl
movs
shr
add
dec
rcl
iret
icebp
popa
and
mov
pop
mov
cmc
jnp
add
and
dec
sbb
pop
sbb
fimul
add
cmp
xchg
inc
push
lock
ret
cmp
xchg
jmp
aam
dec
jo
xchg
sub
cmp
jmp
pop
rol
add
hlt
jnp
dec
jmp
add
and
jg
and
mov
sbb
mov
sbb
movs
call
adc
(bad)
and
ret
pop
add
out
call
and
xor
and
(bad)
leave
outs
dec
pop
pop
adc
pop
mov
pop
and
adc
mov
or
cmp
sti
shl
mov
sar
jl
pop
repnz
cwde
mov
cmc
sti
inc
sbb
add
ret
or
sar
inc
jmp
dec
jne
push
aaa
add
or
in
pop
xchg
pop
(bad)
push
test
into
ror
and
mov
dec
aam
dec
and
dec
ror
fist
ret
mov
sar
lods
add
jmp
and
pop
loop
ret
les
mov
lock
or
hlt
(bad)
adc
cmp
dec
inc
cmp
aam
mov
pop
push
or
mov
jle
xchg
inc
jp
aam
int3
stos
cmc
int3
or
and
jl
jecxz
test
sbb
les
mov
mov
das
je
mov
and
jmp
leave
enter
push
push
rcl
enter
aam
sbb
(bad)
cmc
fucom
data16
sbb
jmp
sbb
jl
xchg
retf
ror
in
rol
lds
jo
je
cdq
pusha
loop
outs
retf
test
jl
mov
retf
shr
mov
jl
inc
dec
jmp
dec
dec
pop
xor
xor
mov
test
push
icebp
int3
aas
inc
ret
frstor
mov
push
pop
ficomp
inc
inc
jmp
push
xor
in
or
or
push
jmp
sub
jb
push
cmps
mov
dec
enter
call
add
pop
cmp
not
or
daa
lahf
ja
cs
movs
mov
xchg
add
pusha
dec
jae
sub
push
sbb
adc
and
mov
mov
mov
mov
retf
mov
push
sti
cs
jb
push
daa
mov
push
pop
out
jb
adc
daa
xchg
lods
lods
lods
test
retf
in
inc
dec
dec
dec
stos
mov
stc
dec
sub
in
in
in
cdq
mov
cmp
test
dec
add
xor
ret
mov
pop
dec
add
mov
mov
push
and
leave
or
imul
xor
add
mov
inc
jo
or
test
cs
and
mov
(bad)
std
inc
push
lahf
push
in
or
es
sub
mov
mov
mov
add
dec
js
or
mov
push
dec
pop
push
popa
push
stc
rcr
inc
or
rcl
rcl
pop
nop
aad
iret
dec
sbb
call
mov
xor
pop
sub
pop
sbb
aas
adc
aam
mov
inc
inc
push
mul
or
xor
aad
inc
arpl
(bad)
and
or
neg
jecxz
jbe
push
xchg
lods
nop
fcomi
(bad)
add
and
adc
sahf
add
dec
and
jne
imul
ins
sbb
and
test
add
inc
dec
xor
or
mov
inc
push
shl
cmp
fisubr
(bad)
dec
sbb
or
pslld
sbb
pop
or
push
sbb
fisub
sti
mov
(bad)
ss
and
mov
sub
nop
sub
jne
jne
or
sub
sahf
pop
(bad)
xlat
inc
out
aad
add
jns
pop
add
or
xlat
popa
adc
xor
xchg
fcom
movd
ss
mov
call
call
in
inc
pop
ror
cmp
leave
seta
int
sbb
stc
fisubr
paddw
xor
les
in
lds
addr16
jle
ret
popa
sbb
sub
push
jo
inc
imul
retf
(bad)
test
call
xlat
sub
mov
(bad)
fild
push
imul
adc
(bad)
call
leave
in
int3
mov
push
call
pusha
(bad)
mov
sbb
ficom
ins
aas
nop
movs
mov
or
pop
push
pushf
into
fcomp
sbb
test
movs
adc
push
loopne
or
xchg
mov
cmps
sbb
mov
and
mov
retf
dec
shl
add
sbb
scas
sar
dec
dec
xchg
push
arpl
xchg
das
or
add
dec
pusha
cwde
inc
test
pushf
pop
xchg
jmp
mov
add
iret
aam
xchg
cmc
cwde
cmp
mov
es
jnp
pop
in
js
fisubr
lods
je
or
push
rcl
jb
retf
ds
fst
inc
pop
clc
pusha
jle
jmp
cld
fdiv
shr
xlat
in
inc
cmp
sbb
cmp
jl
cmps
div
and
pop
xchg
dec
pop
xor
stos
gs
and
leave
and
clc
cmp
pusha
sbb
sub
jmp
add
inc
fwait
cwde
fcom
out
imul
retf
cmp
ror
fwait
sbb
nop
mov
pusha
push
pop
out
imul
(bad)
and
repnz
enter
and
mov
hlt
cmp
push
xor
or
push
cmp
mov
xor
lock
popf
sbb
xor
or
and
push
and
inc
pop
inc
lods
add
and
xchg
movs
scas
scas
sbb
xchg
fld
js
enter
pop
cmp
(bad)
sbb
xchg
dec
cmp
movs
shl
je
popf
push
sub
addr16
loopne
add
loopne
dec
add
int3
imul
imul
int
mov
or
jmp
pop
mov
out
adc
sbb
push
xchg
clc
iret
dec
xor
pmaxsw
ficomp
clc
int
div
test
sub
cmp
clc
xor
cmp
adc
adc
cmp
ins
dec
outs
adc
sub
nop
push
push
inc
jnp
mov
ins
adc
push
cmp
xor
xor
ss
lahf
jmp
cmp
or
adc
xor
cmp
sbb
pop
dec
or
test
push
xor
scas
or
mov
imul
iret
or
push
cmps
sub
sti
mov
pop
sub
dec
je
jmp
(bad)
adc
nop
jns
or
add
jl
inc
test
invd
pop
xchg
nop
and
test
into
push
dec
add
or
ins
dec
imul
adc
adc
aaa
dec
jno
jne
stc
nop
iret
in
or
push
and
push
jl
inc
add
push
add
pop
clc
add
jmp
into
add
pop
mov
pop
cmp
cmp
sbb
cdq
add
add
sub
push
adc
jns
adc
sbb
xchg
stos
push
or
sbb
divps
inc
or
mov
popa
retf
dec
sub
cld
or
mov
lsl
adc
and
push
xor
jne
mov
mov
aam
jmp
nop
xchg
xchg
pop
nop
push
xor
pushf
pop
mov
xor
fcom
push
xor
je
push
mov
mov
cmp
push
jb
xor
adc
inc
add
or
push
or
lods
add
push
mov
push
ds
mov
popa
or
test
dec
jno
int
inc
rol
add
pop
xor
fwait
shl
mov
lods
and
sbb
xchg
dec
fimul
movs
dec
fcom
jo
ins
shl
jnp
inc
inc
pop
fwait
(bad)
(bad)
inc
test
adc
jnp
and
sbb
mov
mov
pop
outs
shl
aaa
or
mov
push
mov
out
inc
shl
outs
xchg
jne
adc
mov
mov
mov
xchg
and
mov
inc
dec
xchg
xchg
or
sub
add
shr
sub
push
cs
inc
sub
sub
movs
xor
repz
xor
pushf
xor
cdq
inc
sub
dec
test
daa
cmp
sub
add
xor
mov
sbb
cmp
dec
ja
cmp
xchg
cmp
inc
adc
ja
add
dec
pop
shl
add
add
loope
pop
les
xchg
and
aas
or
dec
repnz
ins
clc
mov
sbb
rol
test
mov
mov
std
sbb
in
movs
inc
sub
xchg
push
dec
push
add
add
cdq
fs
pop
int3
or
mov
jl
imul
pop
push
push
and
daa
or
popa
popa
fwait
pop
lahf
add
les
sub
push
push
rol
inc
rcl
push
dec
sbb
jnp
or
cmp
push
or
adc
dec
sbb
mov
ins
sub
pusha
out
inc
mov
add
sbb
push
into
dec
push
push
inc
inc
push
arpl
in
mov
push
dec
adc
test
mov
or
dec
xchg
adc
adc
pop
ret
enter
repz
mov
je
lds
mov
sbb
or
xor
js
pop
pop
inc
ficom
sub
cs
and
sub
dec
sub
xchg
retf
xor
cmp
jb
in
inc
inc
inc
sbb
mov
cmp
xchg
sbb
bound
ret
pop
push
cwde
mov
inc
ins
add
inc
xor
shl
inc
dec
ja
add
lock
sbb
xor
pop
popa
mov
or
mov
fsub
inc
dec
mov
(bad)
je
shr
dec
push
jb
jmp
cmp
xor
push
mov
jnp
fsubr
int3
imul
cmp
inc
dec
inc
or
mov
cmp
dec
inc
ins
pop
sbb
popf
push
fs
and
pmuludq
dec
or
push
cmps
lahf
jmp
psrld
mov
(bad)
aad
add
push
xchg
aad
or
mov
rol
test
je
jg
inc
xchg
cmp
je
mov
inc
mov
sbb
xor
adc
dec
retf
js
ins
gs
dec
pop
xlat
adc
xchg
into
popf
inc
pop
mov
es
jle
jmp
or
jle
in
and
inc
and
jnp
xchg
shl
mov
test
das
enter
inc
out
or
and
sbb
fadd
fst
add
add
test
xchg
sub
mov
fs
sbb
jno
pop
retf
enter
div
mov
add
gs
popa
cmp
shl
and
pusha
xchg
cmps
pop
sbb
pop
cmps
jnp
or
pop
add
push
nop
or
retf
mov
in
mov
loop
imul
and
loopne
call
and
cmc
fisub
jg
pop
mov
bound
jmp
enter
cmp
nop
(bad)
jb
iret
inc
mov
pop
leave
nop
dec
push
or
inc
test
pop
or
dec
push
sbb
cli
push
sub
cs
push
inc
inc
add
add
adc
shrd
sub
jl
mov
sub
lea
xor
and
cmp
cmps
sbb
icebp
and
aad
aam
lods
imul
imul
push
pusha
iret
xor
inc
aam
adc
jecxz
mov
fucomip
(bad)
sub
mov
jg
out
inc
icebp
add
iret
sub
stc
mov
add
iret
mov
mov
scas
jae
or
inc
or
popa
and
adc
xor
add
xor
mov
inc
cdq
adc
ret
pop
pop
shl
nop
retf
sub
ins
add
and
aad
pop
add
add
inc
in
outs
pop
add
or
add
xchg
add
or
adc
inc
add
adc
sub
xor
aas
adc
nop
arpl
cs
cmc
(bad)
repz
data16
shl
sahf
xchg
and
xor
add
or
bound
mov
adc
cmps
sbb
mov
ss
movzx
adc
movmskps
dec
sbb
enter
mov
xor
outs
not
cmps
push
mov
mov
aaa
in
sub
je
adc
jnp
and
nop
xor
not
sbb
sbb
pusha
mov
das
pop
rcl
pop
pop
orps
xchg
in
push
xchg
dec
(bad)
and
scas
fstp
mov
and
add
outs
mov
(bad)
test
fadd
icebp
pop
mov
movs
das
or
test
sub
dec
sub
push
ins
push
movs
test
cmps
fadd
dec
push
xchg
stos
gs
(bad)
in
cmps
pop
hlt
clc
push
mov
xchg
iret
or
stos
out
mov
cwde
push
push
call
es
or
or
imul
lea
popa
iret
sbb
ret
loope
leave
mov
clc
adc
add
or
add
xchg
or
push
pop
or
xor
xchg
sbb
mov
clc
cdq
(bad)
push
or
or
ins
adc
cmps
jnp
push
in
or
fistp
push
dec
fidiv
mov
popa
push
shr
neg
and
sub
mov
inc
nop
sub
jae
xchg
dec
js
jo
and
les
sbb
imul
in
pusha
cmp
leave
adc
rcl
pop
adc
mov
fbld
clc
cmps
adc
mov
nop
sar
inc
sar
and
enter
push
adc
dec
cdq
popa
and
loopne
inc
psadbw
rcr
outs
cmps
add
icebp
je
imul
cmp
enter
or
sbb
pop
adc
pusha
or
pop
pusha
adc
inc
mov
or
dec
push
or
sub
les
sti
pop
aam
dec
aad
loope
stc
adc
adc
ret
dec
pop
or
adc
rcl
cmps
sub
cwde
mov
xlat
div
sbb
push
lods
adc
not
push
mov
addr16
mov
jne
cs
add
or
and
das
mov
cmps
or
sbb
xchg
outs
push
jo
lahf
idiv
dec
inc
or
mov
xchg
lods
inc
and
lock
clc
or
xchg
nop
jl
or
xchg
fcmove
xor
push
or
fs
adc
sub
ins
shr
jmp
lods
pop
ja
mov
ins
sbb
call
and
push
add
and
add
add
jae
pop
adc
outs
jecxz
aam
jns
call
cmp
adc
lahf
frstor
xchg
movs
mov
xor
(bad)
mov
bound
mov
mov
and
clc
mov
or
lds
inc
dec
sahf
mov
and
inc
xchg
mov
sti
xchg
adc
adc
and
xchg
fistp
adc
mov
sub
inc
push
adc
retf
push
loope
cmc
pop
mov
inc
xchg
sbb
ret
push
jae
mov
leave
and
jb
inc
adc
xor
imul
mov
fiadd
add
push
ror
xor
add
inc
or
add
pusha
pop
aaa
shr
pop
cmp
cmps
xor
test
mov
adc
adc
lock
fs
push
in
lea
ror
das
or
xchg
mov
sti
inc
dec
jne
lea
or
sub
xchg
add
inc
in
pop
xchg
dec
dec
rcl
das
scas
cmps
dec
and
cmp
push
mov
inc
and
rcl
ss
or
and
xchg
in
scas
pop
mov
sub
and
and
pusha
movs
dec
inc
cs
ins
out
jns
adc
jne
or
int
and
adc
and
and
mov
jmp
add
pop
shl
cmps
leave
and
fwait
lea
test
leave
les
test
ins
test
xor
adc
adc
push
in
pop
mov
mov
xchg
sub
sub
sbb
cmp
lock
sbb
add
cli
jg
push
dec
leave
ja
rcl
push
push
ins
fmul
sub
sbb
push
ss
jbe
sub
add
shld
mov
cmp
xchg
nop
dec
cwde
cld
pop
rol
push
inc
daa
push
(bad)
or
mul
outs
mov
mov
inc
inc
or
inc
aam
jo
repnz
cmp
dec
fwait
(bad)
pop
mov
nop
push
(bad)
sub
mov
and
aad
add
mov
cmp
or
cwde
movs
mov
mov
jbe
aad
retf
or
push
jo
or
pop
sti
xchg
dec
je
add
jp
inc
popa
or
pushf
mov
adc
and
movs
sub
jmp
fcmovnbe
mov
mov
sbb
sar
cwde
fst
mov
xchg
inc
mov
xchg
jb
aam
ja
rol
jmp
jb
mov
dec
adc
push
bound
add
jmp
sub
mov
or
or
mov
mov
inc
cwde
nop
retf
or
loopne
inc
and
ds
jbe
movs
ret
aaa
mov
sbb
fimul
xchg
ins
inc
sbb
dec
ins
rcr
jecxz
sbb
test
and
sbb
mov
jl
dec
xchg
add
ds
ret
dec
inc
or
pop
jne
push
xchg
or
inc
pop
mov
push
inc
mov
pop
or
lahf
xor
fidiv
pop
add
fstp
fwait
test
jmp
inc
mov
leave
test
and
mov
sub
xchg
adc
sbb
(bad)
jmp
or
xchg
in
cwde
add
ds
inc
fld
dec
xchg
adc
xchg
daa
scas
std
push
jp
add
out
cmp
je
shl
adc
bound
push
jbe
outs
jo
push
pop
sbb
pop
fs
jmp
pushf
daa
pop
cs
push
(bad)
mov
scas
out
daa
stos
or
lahf
out
call
pusha
or
push
push
and
adc
sub
mov
and
fwait
test
stc
in
and
shr
push
adc
fs
jle
shl
fisubr
cs
rcr
setbe
push
mov
rcl
and
adc
pop
mov
sbb
and
push
int
or
arpl
mov
xchg
pop
mov
jne
arpl
outs
fadd
push
jne
sbb
stc
xchg
adc
dec
adc
cmp
jne
or
cmps
loopne
or
pop
push
jns
fsubrp
sbb
adc
push
push
mov
mov
lahf
sub
cmps
shl
sbb
mov
dec
lahf
pop
loop
xor
pop
push
lahf
cmp
imul
mov
inc
mov
sub
push
mov
ret
in
inc
pop
adc
xchg
sbb
mov
dec
xchg
inc
ficom
mov
or
fs
sbb
or
push
loopne
lods
add
lea
pusha
rcl
mov
mov
xchg
popa
ficomp
sub
and
icebp
jmp
or
add
sub
adc
rol
pop
or
mov
pop
loope
mov
int
inc
repz
pop
cmp
fisubr
add
je
xlat
add
push
je
in
in
and
sbb
sbb
in
je
adc
lock
xchg
jo
repz
add
mov
sbb
mov
pusha
(bad)
lock
rol
or
popf
sub
pop
push
cmp
daa
mov
ins
out
cmp
or
and
cmp
add
repz
fbstp
cmc
(bad)
mov
or
sub
cmp
adc
fmul
daa
sbb
les
sbb
mov
dec
(bad)
mov
es
(bad)
mov
xor
es
jnp
scas
pop
imul
je
sbb
in
pushf
sub
cwde
adc
fs
adc
repz
adc
add
and
sub
lea
ins
sbb
jbe
rcl
mov
pop
ja
mov
jp
or
xchg
inc
mov
or
lods
rol
mov
ror
adc
mov
push
sbb
pop
frstor
das
jns
popa
fimul
frstor
aad
sbb
pop
mov
(bad)
adc
lock
and
inc
cmp
sbb
pop
mov
sbb
jg
add
pop
sbb
ret
and
mov
jl
shr
jg
sbb
sbb
or
jne
add
xor
scas
ret
pop
out
test
sbb
mov
cmp
mov
push
nop
and
(bad)
xor
fs
push
mov
sbb
push
cmp
stos
mov
clts
push
lahf
cmp
jne
xchg
mov
pop
sbb
sbb
ss
xlat
lods
jmp
sbb
cmp
cmps
repz
pop
cmps
mov
adc
(bad)
mov
mov
retf
mov
mov
push
and
cmps
inc
pop
add
imul
inc
in
and
sub
dec
adc
push
clc
sub
loope
imul
push
fs
dec
call
call
sub
test
pop
xlat
push
jbe
das
and
adc
sub
cmps
and
icebp
loope
add
sub
fld
sub
and
adc
and
or
mov
mov
out
adc
lods
dec
xor
sbb
adc
pop
and
rol
retfw
addr16
or
lds
ds
add
inc
fcomp
pop
ins
jge
push
int3
push
or
sbb
xor
and
add
sahf
cmp
fld
pop
mov
gs
inc
retf
shl
push
inc
inc
rcl
dec
jmp
enter
pop
add
add
inc
imul
aam
les
outs
int3
es
mov
sub
xchg
sbb
sub
loope
add
fistp
pop
adc
mov
(bad)
push
rcl
out
imul
es
push
(bad)
out
jne
jae
or
and
adc
inc
jl
mov
xor
push
sub
ret
(bad)
mov
cs
or
rol
loopne
ficomp
or
push
pop
or
loopne
sbb
dec
imul
paddusb
outs
stos
cmp
add
aam
dec
xchg
inc
pop
jmp
das
jnp
leave
jecxz
sbb
cmp
sbb
push
pop
push
adc
shl
setge
mov
or
pop
fwait
in
add
sbb
rcr
xchg
jo
and
xor
fcomp
or
jne
dec
les
jmp
xchg
popa
cmp
cmp
or
xchg
in
add
jge
pop
jae
(bad)
mov
sbb
mov
cmp
movs
or
and
mov
jp
jle
mov
shl
test
fstp
dec
add
iret
xor
cmp
jmp
adc
xor
ins
push
scas
(bad)
mov
fwait
(bad)
adc
inc
(bad)
shr
jecxz
adc
shr
adc
pop
and
mov
inc
and
sar
jmp
and
or
sahf
retf
fld
xor
movs
adc
push
ret
or
cmp
and
sub
mov
mov
pop
push
inc
or
xlat
inc
adc
test
hlt
adc
sar
inc
cmp
inc
loopne
dec
in
push
push
shr
and
lods
scas
adc
int3
add
add
(bad)
outs
or
mov
cdq
mov
movs
adc
(bad)
jl
cdq
and
out
add
push
ins
and
mov
movs
mov
adc
xor
adc
add
sbb
jecxz
mov
pushf
fldenv
adc
jmp
dec
dec
out
mov
dec
adc
and
inc
inc
mov
sub
add
in
jns
lds
sbb
mov
aam
add
addr16
daa
dec
dec
rcl
ror
xor
xchg
inc
je
movs
adc
sub
cmp
cwde
jl
push
outs
rcl
add
inc
mov
adc
je
loope
cmp
adc
push
in
push
out
ret
inc
adc
mov
scas
push
mov
push
std
lock
jns
repnz
in
push
lock
rcr
arpl
or
std
sahf
or
push
sub
cmp
rol
mov
pushf
xor
mov
ins
jb
xchg
movs
movs
inc
int3
inc
ror
cld
rol
shl
jge
inc
fcom
or
cld
and
inc
cmp
xchg
inc
jg
pop
shl
push
cmp
mov
mov
sub
mov
jmp
pop
dec
pop
dec
dec
adc
shr
push
ja
rol
lock
jbe
sbb
imul
or
sub
push
pop
dec
jmp
pop
push
pop
rcl
inc
(bad)
fdivr
push
push
mov
cdq
add
ss
stos
mov
mov
(bad)
gs
arpl
out
daa
xor
mov
mov
and
test
(bad)
mov
pop
movs
movs
and
mov
or
sbb
xor
into
pop
push
pop
or
call
mov
adc
pop
or
and
sahf
popf
sbb
sub
(bad)
sub
sbb
dec
std
mov
inc
and
dec
xchg
push
adc
and
mov
or
jmp
es
xchg
inc
push
arpl
add
add
adc
cmp
ins
and
add
neg
sbb
dec
sbb
ficom
add
test
pop
push
cmps
ins
sub
sub
(bad)
cld
es
and
push
(bad)
loopne
xor
jmp
aas
jne
and
sahf
push
outs
xlat
dec
mov
ret
xor
push
test
pop
and
xchg
add
sbb
push
mov
and
adc
lods
sbb
aaa
add
inc
or
sti
shl
add
add
add
add
lods
sar
cmp
cmps
or
push
test
movs
and
pop
and
imul
push
stos
cmp
mov
fcom
inc
mov
inc
cmp
push
xlat
xor
inc
enter
nop
es
push
jo
cmp
repz
adc
es
clc
add
sub
add
jmp
sub
dec
(bad)
dec
pop
or
std
sub
outs
and
rcr
fwait
or
jl
pslld
sbb
xor
mov
gs
out
(bad)
and
sbb
or
popf
dec
test
and
jmp
dec
das
adc
fisub
mov
retf
gs
shr
mov
xchg
or
std
mov
clc
fwait
inc
or
sub
pusha
and
jnp
out
pop
repz
adc
pusha
into
pop
mov
push
dec
movs
cmps
cmp
jno
mov
and
test
jle
inc
icebp
push
cmp
cmp
ins
add
dec
ja
jb
pop
inc
xor
je
lock
adc
adc
ret
loope
adc
cmp
xchg
inc
bound
add
add
repz
daa
sub
and
or
iret
xlat
add
fs
adc
inc
adc
jbe
inc
xor
adc
movs
(bad)
sbb
setno
(bad)
retf
das
daa
loopne
or
xchg
sub
cmp
mov
clc
push
call
hlt
and
inc
add
test
fidiv
ror
lods
or
jecxz
in
add
inc
movsx
dec
cmp
or
(bad)
pop
inc
xor
jo
fiadd
lahf
aam
xor
sub
inc
inc
rep
xor
cmps
fld
dec
sub
(bad)
adc
push
adc
ins
sub
loopne
cdq
or
and
lea
or
xchg
sbb
pop
xchg
in
mov
add
pop
lock
clc
jmp
repz
outs
pop
pop
pop
cmps
pop
pop
dec
imul
mov
cmp
call
add
fmul
dec
shr
fdivr
inc
call
fmul
mov
jno
jno
pop
adc
xor
xlat
and
fldcw
dec
push
es
mov
and
loope
int3
push
xor
sbb
push
xor
mov
out
sub
or
xor
fs
inc
jb
jbe
(bad)
mov
sbb
and
adc
test
(bad)
xor
jmp
sbb
push
dec
test
xchg
mov
idiv
inc
mov
in
dec
popf
js
(bad)
mov
jns
es
lods
dec
inc
(bad)
lahf
inc
adc
or
inc
sahf
imul
das
and
inc
pop
add
adc
sbb
test
and
pop
xor
or
sbb
out
daa
add
(bad)
ds
scas
movs
neg
and
js
neg
pshufw
mov
das
dec
fbld
dec
dec
jp
mov
pushf
rcl
lahf
adc
iret
pop
xchg
ja
movs
sbb
jne
repz
pop
cmp
push
stc
and
add
xor
shr
std
jl
test
loopne
leave
and
mov
je
jno
ret
mov
call
dec
jp
mov
xor
stos
js
adc
dec
cmp
add
lods
js
and
(bad)
mov
mov
(bad)
fcom
pop
adc
popa
push
inc
cmp
(bad)
ror
ror
leave
enter
dec
inc
test
gs
icebp
and
popa
shl
adc
outs
mov
push
inc
popa
mov
jle
or
add
and
jle
xor
jbe
sbb
aad
mov
sub
or
mov
xchg
sbb
add
dec
push
xchg
and
dec
or
rol
jmp
add
mov
jmp
movs
push
mov
jbe
dec
xor
ins
enter
cld
jle
ror
adc
xchg
popa
test
jne
xlat
dec
inc
or
movs
inc
add
dec
add
push
inc
ror
pop
lahf
ficomp
xor
and
dec
jmp
repnz
jo
push
dec
mov
pop
push
xchg
xchg
xchg
add
sti
test
add
mov
add
in
xchg
cmps
enter
pop
or
ret
std
mov
push
in
movs
lods
pop
sbb
xor
sar
add
pavgb
int
call
mov
push
push
dec
add
das
add
fadd
mov
adc
iret
mov
or
mov
adc
shr
mov
imul
add
cmp
fisub
or
pusha
inc
rcr
or
mov
dec
or
mov
mov
or
mul
cmp
add
leave
or
or
or
xchg
sub
inc
pusha
inc
and
jmp
add
mov
imul
retf
adc
xchg
or
add
imul
mov
mov
cmps
adc
(bad)
and
lock
stos
sbb
rcr
or
dec
push
inc
adc
cmps
ficomp
(bad)
movs
nop
data16
pop
fidivr
pop
lea
push
popf
jge
pop
or
and
movs
inc
sbb
je
push
inc
push
lea
jmp
add
aaa
and
add
shr
ror
add
add
js
sbb
popa
movs
out
mov
cmp
hlt
dec
sub
adc
push
clc
add
pop
stos
neg
pushf
mov
jbe
nop
pop
int
loopne
arpl
cmp
jns
inc
jns
mov
fidivr
rcr
clc
add
fsubr
fcomp
add
add
add
mov
fimul
push
sbb
sbb
mov
pusha
xchg
ret
pop
dec
push
push
shr
jmp
iret
mov
jnp
pop
mov
mov
add
pop
add
add
cmc
mov
mov
xchg
in
cmps
mov
add
sbb
mov
jmp
int
inc
cmp
add
jl
cmp
xchg
fld
push
repnz
adc
lock
jnp
dec
add
or
or
pop
addr16
inc
inc
add
or
ins
inc
ror
pop
sbb
adc
loopne
xchg
or
not
and
and
(bad)
imul
sub
xchg
or
imul
add
adc
repz
and
daa
sub
and
sub
mov
push
mov
imul
mov
push
xor
fcmovb
ret
sbb
push
push
lahf
div
inc
push
pop
add
push
jo
add
dec
inc
mov
mov
push
(bad)
xchg
mov
sbb
dec
push
dec
inc
dec
push
sbb
inc
int3
pop
out
or
or
dec
xor
xchg
add
add
dec
inc
and
fild
push
add
sahf
cwde
cmp
pusha
fistp
jns
popf
stos
sbb
sub
dec
xchg
inc
sub
ret
es
push
push
inc
xchg
cmp
jne
cmp
div
fwait
dec
xor
sub
jmp
inc
xchg
lods
mov
push
dec
adc
test
js
pusha
add
pusha
inc
ret
add
push
adc
dec
cmp
cmp
aas
aaa
xchg
out
sbb
pop
sbb
pop
adc
push
sub
inc
sub
test
cmp
repnz
fild
push
ret
es
xchg
inc
pusha
fild
mov
push
rcl
push
xchg
popa
(bad)
push
xor
data16
test
cmp
popa
clc
in
aaa
jo
xchg
cmp
je
mov
or
sbb
sub
push
ds
pop
xchg
push
outs
jle
cmp
mov
out
xor
sbb
ret
or
mov
int3
aaa
push
pop
dec
and
stc
and
ror
loope
daa
pop
hlt
adc
mov
mov
pop
dec
add
pop
inc
sahf
and
call
nop
retf
sub
mov
xor
and
add
sub
stos
add
xchg
enter
push
or
dec
inc
mov
ins
call
and
and
dec
scas
test
fstp
jnp
adc
not
xor
inc
adc
inc
out
out
test
and
data16
int3
dec
ficom
add
mov
stos
adc
push
cmp
das
retf
and
add
mov
push
push
test
test
adc
enter
jne
aaa
sbb
ret
jmp
cmp
add
fidiv
mov
xor
adc
or
and
inc
lds
test
sbb
rcr
dec
ins
or
or
ret
mov
and
js
clc
or
dec
(bad)
cmp
ret
outs
sbb
xor
inc
inc
rcr
add
push
xor
vpshufd
sub
inc
cmp
push
sbb
sbb
ins
and
xchg
xchg
inc
fsub
add
inc
push
sub
pusha
fdivr
sti
mov
in
or
rcr
jmp
(bad)
adc
daa
not
xchg
sub
dec
xchg
xchg
add
ror
and
sub
sbb
sub
adc
gs
mov
sub
push
and
fmul
mov
mov
out
fiadd
inc
je
ficomp
mov
push
lods
cmp
lock
sub
add
inc
inc
enter
test
out
ror
pop
stc
mov
inc
jmp
and
mov
and
mov
pop
inc
mov
lods
imul
xor
jmp
jl
aaa
cmp
ror
add
xor
cdq
out
sbb
fdivr
loop
or
retf
sbb
dec
das
dec
out
pop
hlt
mov
and
cmp
sar
or
aad
and
(bad)
sbb
or
sub
scas
js
inc
or
jp
mov
popa
pushf
sub
cmp
or
mov
push
pop
pop
mov
push
into
in
jl
jle
and
pop
sbb
cmp
in
jmp
ins
sub
loopne
mov
dec
pop
cmp
add
aam
push
and
ret
sub
cmp
mov
inc
jecxz
retf
adc
push
loopne
repz
jne
aam
imul
pop
adc
idiv
pop
call
sbb
dec
xchg
inc
inc
or
sbb
xor
xchg
push
push
js
cmp
cld
pop
and
retf
push
mov
or
inc
ror
add
rcl
or
jne
sbb
cli
dec
mov
int3
retf
push
cmp
inc
fld
and
enter
and
mov
iret
in
call
sbb
add
push
mov
sbb
cmp
outs
lods
sbb
cmp
sti
and
loopne
inc
gs
imul
into
mov
adc
hlt
fstp
stos
mov
push
call
sub
fabs
jo
push
adc
jns
pop
fwait
xchg
ins
je
cld
add
dec
pop
jle
push
push
mov
pusha
and
xchg
fwait
sbb
inc
push
js
sub
sub
add
add
ucomiss
adc
and
jb
add
cmp
push
pusha
popf
or
push
ja
es
add
in
jl
fiadd
sub
mov
push
xchg
sbb
push
and
sub
pop
jl
shl
add
jmp
mov
mov
test
test
sbb
jo
xchg
(bad)
rol
inc
cmp
pop
inc
loopne
mov
dec
hlt
add
(bad)
sbb
lea
cmps
sar
or
jo
mov
fisubr
shl
xor
scas
(bad)
mov
movs
(bad)
push
rcr
xor
sbb
push
loopne
(bad)
mov
xor
fstp
mov
sub
push
xor
add
push
retf
loopne
xchg
mov
and
add
jge
pop
loop
pop
mov
push
lock
pushf
arpl
xor
pusha
stos
xor
loope
jmp
fisttp
push
add
sub
ror
inc
pop
cdq
imul
clc
pop
mov
push
scas
inc
lds
(bad)
loop
loope
mov
jmp
xor
adc
ret
add
scas
sub
pop
jg
bound
sbb
mov
lea
call
pushf
popf
out
mov
or
sbb
jp
dec
rcl
movs
in
hlt
cmp
or
sbb
nop
mov
mov
add
inc
or
arpl
or
ss
shr
mov
cmp
add
cmp
sub
(bad)
add
adc
das
mov
aas
lea
jl
lds
and
dec
ss
pop
adc
sub
aas
inc
xchg
stc
or
sub
sub
sub
shl
adc
push
mov
add
movs
addr16
pushf
xor
or
pushf
adc
inc
iret
jbe
test
jl
mov
xchg
retf
push
add
or
test
sbb
cmp
les
xor
pop
pop
sub
movs
sub
sub
std
adc
mov
inc
jne
sbb
push
das
ret
cmp
sub
jo
mov
mov
sbb
push
lds
cwde
hlt
adc
int
mov
cmp
push
pop
sbb
cmp
jmp
dec
sbb
or
and
sub
das
retf
cs
adc
sbb
popf
xchg
sub
daa
gs
popa
(bad)
add
popf
loope
sub
mov
mov
adc
xchg
repnz
imul
arpl
fcmove
jmp
pop
ins
inc
mov
ss
out
cli
adc
xor
retf
mov
or
ja
pop
pop
scas
retf
adc
sbb
shl
add
pop
sub
stc
or
mov
imul
sbb
and
dec
and
add
dec
in
jmp
mov
adc
inc
je
shl
popa
sbb
sbb
jge
push
add
scas
add
xor
xchg
adc
adc
pop
out
adc
cmp
loopne
pop
push
jmp
push
aaa
dec
sub
test
shr
pop
push
ret
lods
sbb
pop
neg
xor
nop
or
loop
xchg
push
dec
lock
repnz
cmp
in
ins
xchg
xchg
add
jb
ss
mov
dec
stos
test
adc
cmp
mov
mov
pushf
ret
xor
pop
ror
mov
scas
jbe
sbb
dec
or
loopne
in
xchg
data16
cwde
and
dec
push
pop
shl
pop
inc
es
push
inc
or
dec
inc
adc
cmc
inc
mov
jmp
mov
sub
int3
mov
mov
fs
push
xor
(bad)
dec
mov
sub
sbb
popa
jb
xchg
stos
icebp
cdq
adc
clc
and
or
repnz
mov
popa
and
adc
adc
and
clc
out
inc
sbb
sub
pop
stc
mov
mov
or
sbb
xor
in
adc
sub
inc
rcl
mov
dec
enter
repz
pop
mov
jnp
pop
cmp
adc
ins
sub
adc
xor
xor
mov
and
jbe
rcl
cmp
xchg
adc
xchg
mov
je
ret
lock
cli
xor
mov
mov
lods
jge
pop
(bad)
xchg
pop
xchg
dec
dec
adc
jmp
jp
push
mov
mov
ret
push
adc
sub
inc
sub
aad
sbb
and
test
pop
xor
xchg
and
sbb
fdivr
inc
xor
xchg
dec
jmp
sub
inc
sub
mov
xor
xor
imul
cs
and
add
cmp
mov
or
add
pop
and
sbb
push
dec
xchg
sub
sbb
movs
out
imul
pop
and
mov
add
cmp
jne
dec
dec
fmul
ficom
push
inc
test
les
xchg
inc
adc
adc
add
dec
retf
mov
test
xor
push
jg
add
mov
push
ss
mov
pop
inc
stos
sbb
or
add
bound
and
add
push
jle
add
pop
movs
mov
push
(bad)
jecxz
and
and
pop
xchg
call
(bad)
and
int
lods
pusha
not
mov
bound
jg
add
dec
ins
imul
add
cmp
nop
pop
inc
adc
sub
sub
rol
test
add
cmps
mov
shl
ins
shl
adc
jl
mov
jb
jns
in
fs
pop
sub
adc
or
xor
pusha
mov
pop
add
outs
adc
jle
mov
sbb
inc
push
imul
push
push
fbstp
dec
hlt
add
or
and
or
xor
jg
jecxz
add
cdq
push
ja
je
jmp
add
cmp
je
lods
adc
ror
and
scas
cmps
mov
sar
dec
dec
pop
test
sub
aam
pop
dec
inc
shl
js
stos
mov
(bad)
mov
not
inc
sbb
add
mov
sub
dec
xor
imul
xor
cmp
inc
sbb
xor
pop
rol
dec
and
inc
push
adc
inc
ds
add
mov
(bad)
jmp
shl
test
xor
(bad)
or
mov
nop
or
mov
and
and
and
xor
pop
mov
movs
inc
dec
push
xchg
enter
stos
or
cmps
and
scas
js
pop
adc
add
gs
adc
shl
cmp
mov
sbb
test
fisttp
mov
aaa
xor
and
stos
add
mov
mov
or
push
arpl
xor
push
or
adc
pop
data16
or
loopne
sbb
retf
or
add
and
inc
add
in
inc
push
xchg
(bad)
jno
cmp
adc
xor
or
pop
movs
cmc
add
sub
xlat
rol
daa
push
and
or
xlat
push
inc
arpl
test
jg
pusha
pop
or
test
push
mov
pop
comiss
fsub
push
xor
aas
xlat
sub
dec
jge
dec
push
push
movs
mov
(bad)
adc
and
addr16
aam
add
jp
lahf
or
pop
movs
pop
and
das
movs
jge
xchg
add
add
push
inc
pop
cld
je
jle
cmp
xlat
mov
jl
es
push
arpl
imul
xor
add
inc
xor
push
jnp
lods
xchg
xor
cmp
lods
(bad)
(bad)
mov
push
pop
cmp
inc
inc
sbb
dec
fmul
push
jbe
shl
cs
xchg
xor
mov
inc
test
jbe
(bad)
scas
aaa
inc
push
cwde
add
add
add
aaa
sub
pop
mov
imul
rcl
pusha
fnstcw
std
mov
or
xchg
add
aad
add
sbb
pop
cmps
cmps
inc
jno
mov
cmp
push
int3
ja
mov
loope
xchg
xlat
cmp
jle
call
push
dec
pop
test
mov
mov
sub
dec
pop
add
mov
or
retf
xor
push
jge
sub
pop
jge
or
cmps
push
iret
movs
outs
movs
inc
sub
sar
xor
shl
nop
(bad)
jmp
daa
xchg
js
cmp
cld
xchg
push
push
mov
and
inc
test
push
pop
rcr
jo
mov
add
mov
icebp
dec
xor
push
xor
push
es
and
push
add
test
jmp
mov
out
inc
sub
dec
and
push
add
call
leave
test
inc
cwde
adc
es
les
jns
mov
sub
lahf
dec
adc
mov
test
data16
lds
adc
mov
mov
call
js
and
mov
popa
add
push
add
aaa
sub
pop
in
int3
cmp
add
fbstp
jnp
in
xchg
inc
xor
adc
sub
inc
dec
lods
fisubr
or
and
mov
push
sbb
test
leave
xchg
(bad)
dec
leave
push
dec
push
sbb
mov
test
inc
add
mov
jne
les
rol
out
add
call
ds
jmp
add
add
xor
aas
loopne
add
ror
push
cmc
add
pop
sub
in
add
pop
mov
imul
sbb
or
out
lock
pop
cmp
push
sub
ret
aad
mov
mov
out
push
cs
outs
jg
lods
push
test
push
or
or
ss
inc
mov
ins
dec
inc
ds
add
push
test
fcom
iret
mov
inc
sub
pop
mov
test
push
mov
ret
test
cmps
add
fsub
or
mov
call
push
add
sbb
fbstp
add
jecxz
and
dec
and
add
adc
inc
push
or
stc
jbe
add
xchg
jl
popa
(bad)
jbe
mov
cwde
jne
cmp
int3
push
out
cmp
addr16
pop
in
adc
or
push
jge
sbb
or
mul
mov
mov
data16
pushf
mov
jmp
adc
dec
mov
or
adc
sub
or
xchg
into
push
jle
inc
adc
dec
xor
cwde
cmp
push
inc
mov
adc
mov
or
adc
or
rol
cs
or
fcom
mov
neg
xor
inc
or
cmp
push
xchg
jle
mov
(bad)
push
inc
jmp
cmps
jmp
cwde
mov
jmp
push
vpshuflw
push
and
add
jg
mov
mov
add
inc
into
movs
xor
call
sbb
and
inc
rcl
or
stos
popa
mov
xor
sbb
cmp
xor
xchg
xchg
lods
adc
ins
xchg
cmp
sbb
inc
cmp
sbb
lock
cmp
dec
mov
or
test
dec
dec
cmp
cmp
enter
ficomp
ins
push
mov
js
or
adc
add
test
adc
jns
push
sbb
mov
sub
(bad)
mov
es
ret
ins
and
sbb
inc
and
add
pop
jle
xchg
nop
xchg
add
sbb
jo
fimul
mov
mov
aad
dec
fs
cmp
out
or
and
(bad)
mov
test
inc
sbb
stos
loopne
(bad)
adc
push
add
or
mov
popf
cmc
idiv
inc
sub
test
and
inc
test
and
jns
and
and
and
and
and
jb
add
and
jne
push
xchg
sub
xor
or
mov
and
aam
and
jne
nop
fwait
xor
push
and
push
push
mov
sbb
mov
dec
iret
addr16
mov
neg
mov
mov
rol
fist
or
pop
cmps
add
shl
dec
cmp
fldenv
sub
adc
push
(bad)
rol
inc
dec
imul
push
add
add
ss
(bad)
pop
inc
inc
retf
fcomp
mov
pop
(bad)
dec
dec
xor
enter
add
shr
or
into
or
call
loope
test
jg
cdq
inc
add
(bad)
adc
es
lea
push
or
cmp
cmp
or
pop
mov
or
mov
and
jge
xor
push
sub
xor
pop
in
addr16
adc
add
and
fwait
rcl
in
xor
push
movs
inc
mov
in
jmp
pop
cmp
cmps
lock
ror
dec
add
arpl
mov
adc
popa
xchg
ret
bound
pushf
mov
sub
js
lds
xchg
jmp
ret
adc
loop
imul
scas
mov
fucomp
add
(bad)
and
push
add
pop
loop
cmp
mov
jno
xlat
pusha
and
ror
adc
inc
int
mov
push
push
inc
fsub
pop
inc
sub
pop
sbb
outs
push
ret
ror
popa
and
scas
pop
adc
ret
lods
jnp
iret
int3
es
and
or
sub
aad
dec
push
adc
sub
pop
or
aam
fadd
scas
xor
mov
and
push
sbb
jmp
dec
pop
rcl
cmp
pop
sbb
js
enter
daa
inc
or
test
pop
and
add
stos
push
test
push
nop
adc
inc
and
cld
sub
pop
mov
mov
inc
(bad)
call
pusha
xlat
jle
mov
sub
or
es
shl
test
xchg
lds
bound
lods
sub
or
xchg
(bad)
and
retf
cmp
vpextrw
lds
cmp
inc
out
popf
les
aaa
in
xchg
cmp
mov
mov
mov
retf
pop
sub
mov
rcl
push
aam
call
dec
into
pop
shl
push
imul
jo
xchg
std
and
mov
jmp
aaa
adc
xchg
sbb
jo
shl
push
loope
xor
scas
adc
add
jl
or
out
push
cmp
sub
lock
sbb
out
sbb
add
mov
es
adc
pop
mov
push
scas
push
mov
inc
lahf
pop
xor
fiadd
outs
xchg
inc
fcmovne
retf
inc
cmove
or
(bad)
and
shl
mov
or
sub
test
jl
test
imul
imul
popf
xor
dec
jle
or
jo
mov
cmp
and
sbb
mov
lock
leave
dec
lock
(bad)
push
fcom
add
sub
pop
or
push
cmp
mov
or
or
rol
or
sahf
push
inc
push
enter
adc
jmp
dec
je
repnz
xchg
je
int3
call
inc
imul
pop
adc
mov
sub
imul
adc
and
mov
pop
loopne
or
cmp
adc
mov
mov
das
xchg
adc
lds
jnp
mov
das
sbb
xor
push
(bad)
inc
fcomp
sub
cmp
add
push
pop
push
cwde
add
bound
ret
and
(bad)
movs
aas
or
out
in
dec
in
sub
mov
dec
rcl
repnz
dec
pop
nop
lock
out
loopne
fisttp
pop
mov
dec
ret
cwde
outs
test
cmps
popa
mov
xchg
mov
out
jg
jp
aad
ret
pusha
fmul
mov
jmp
repnz
jbe
xlat
lods
add
fs
jbe
daa
mov
in
inc
jl
push
aam
mov
fsub
xchg
sub
daa
mov
mov
(bad)
mov
mov
jnp
add
push
jg
nop
jbe
(bad)
jno
dec
rol
inc
or
ss
cmp
mov
adc
dec
cwde
or
dec
nop
and
fidivr
lea
or
sbb
xor
jmp
int3
adc
cmp
cmp
jmp
add
mov
test
or
pop
add
push
cmp
jg
and
add
push
adc
sbb
rcl
movs
leave
or
sbb
or
hlt
push
(bad)
and
dec
cwde
pop
cmp
add
adc
sbb
inc
sub
jne
sbb
je
sub
sub
arpl
cs
inc
jne
mov
inc
je
add
cs
dec
sbb
aad
pop
adc
add
ss
sbb
inc
add
sub
inc
lds
add
push
push
adc
jg
adc
pusha
dec
pop
sub
fbstp
ror
push
repnz
lea
imul
(bad)
adc
or
mov
mov
pop
mov
push
mov
and
lea
shl
pusha
pop
add
jnp
xor
test
gs
and
xchg
fsub
xchg
dec
into
mov
mov
sub
push
xor
adc
sahf
retf
fdiv
mov
in
and
add
daa
add
xchg
adc
mov
jl
jb
outs
mov
mov
push
pop
mov
rcl
cmp
push
or
jmp
daa
fist
inc
sbb
push
xor
lods
mov
and
cwde
push
mov
pop
push
in
or
sub
or
add
addr16
add
inc
jmp
lods
stos
(bad)
cmp
sub
push
fsubr
xor
cmp
inc
hlt
mov
xchg
hlt
sbb
ds
jge
ror
jne
hlt
cmp
loopne
std
icebp
shl
cmp
or
and
cmp
or
rol
fisttp
int
xchg
pop
fimul
dec
test
jnp
push
int3
sub
xchg
push
and
mov
push
xchg
jp
or
into
je
xchg
sub
ret
dec
sub
pop
daa
or
fmul
push
mov
stos
push
push
mov
adc
push
loopne
inc
xchg
mov
mov
xchg
mov
sti
stc
scas
jle
mov
dec
stc
mov
inc
enter
stos
xor
adc
adc
loopne
xor
push
retf
rcl
push
xor
mov
sbb
adc
js
push
dec
cmp
xor
or
repz
rol
add
sub
sbb
push
add
add
jmp
cli
inc
icebp
xor
jmp
adc
pop
movs
ffree
into
push
sub
adc
aam
(bad)
adc
push
sub
jecxz
lds
shr
aam
jno
push
mov
repnz
xor
adc
sub
adc
lock
mov
sub
loope
mov
imul
push
hlt
mov
or
call
pop
adc
aad
push
retf
pop
popf
mov
push
popf
or
es
loop
xor
call
sub
nop
add
fimul
dec
ret
je
cmp
sbb
pop
adc
inc
cld
add
test
cmp
popf
push
push
jecxz
sub
or
mov
stos
sub
sub
mov
fstp
mov
cmp
add
imul
xor
out
dec
push
pop
sub
cmp
in
or
jbe
push
pusha
cs
lea
test
mov
sbb
imul
and
pop
shl
nop
mov
xchg
inc
nop
jno
mov
repnz
test
push
bound
ficom
sub
outs
or
pop
packsswb
mov
and
test
xchg
test
scas
std
mov
mov
adc
add
or
add
add
idiv
nop
pop
mov
cmp
clc
into
xor
jns
pop
adc
cmp
ja
movs
sbb
and
push
rcr
sbb
inc
pushf
mov
mov
and
sahf
nop
arpl
and
fwait
push
or
pop
mov
dec
sbb
pop
add
ins
ror
leave
push
ret
call
cmp
or
clc
inc
sub
imul
lods
mov
adc
ret
xor
ret
xchg
stos
push
xor
shr
repz
xchg
or
jo
add
mov
pop
adc
cmp
xchg
jno
in
imul
xor
cmp
jge
xchg
test
fwait
js
(bad)
rol
mov
aad
xchg
jg
xchg
sub
out
xchg
mov
inc
sahf
xchg
add
mov
lods
push
fstp
add
pop
sub
xor
pop
fs
imul
push
sbb
aas
mov
data16
xchg
inc
mov
add
test
inc
mov
jmp
inc
xchg
mov
es
imul
xor
sub
sbb
pop
mov
or
dec
outs
push
cdq
adc
mov
sub
jmp
or
push
dec
and
mov
aas
inc
pop
loop
jge
adc
js
test
movs
jno
paddd
push
xor
and
cmp
div
fild
jmp
cmp
je
mov
test
jbe
push
or
and
in
mov
and
adc
xor
je
or
test
sub
xor
jmp
shl
cmp
cmp
push
mov
repnz
je
cmp
or
push
(bad)
or
or
enter
xchg
or
jae
lahf
jns
in
inc
or
mov
add
dec
inc
xor
sbb
dec
cmp
inc
sbb
xchg
jno
sbb
adc
dec
mov
mov
fsub
pop
fimul
popa
mov
test
jbe
jnp
pop
daa
pop
pop
inc
lods
inc
pop
push
xchg
xlat
pushf
adc
dec
adc
dec
stc
stc
mov
pop
sbb
pop
outs
xor
shl
into
cmp
iret
sub
cmp
cs
jge
or
or
mov
cmp
dec
push
cmp
and
sahf
cmp
jne
push
fisubr
push
in
push
add
cmp
adc
pop
add
test
mov
push
popa
sub
fild
inc
cmp
popa
sub
loope
cmps
inc
xchg
xchg
mov
mov
test
dec
pop
xchg
sar
in
mov
shr
ret
push
add
add
adc
push
adc
or
adc
arpl
push
(bad)
int3
test
shr
sub
gs
lea
shl
daa
xchg
sbb
xchg
aam
xor
dec
(bad)
or
imul
mov
add
pop
dec
jnp
sub
sub
(bad)
leave
push
cs
pushf
mov
pop
dec
mov
xor
and
stc
jg
(bad)
nop
dec
mov
xchg
hlt
xchg
int
jnp
addr16
bound
push
or
add
adc
mov
cmp
inc
mov
call
adc
outs
imul
sbb
or
ja
add
xor
push
ins
inc
loop
mov
ret
call
sub
into
push
adc
(bad)
mov
add
jmp
ds
mov
add
iret
push
sub
lods
jbe
cmc
or
add
pop
cdq
xchg
push
sub
(bad)
jo
aaa
push
sub
inc
cwde
ins
push
add
ret
adc
rol
inc
mov
xor
enter
jns
aaa
pushf
cmp
jnp
movs
in
or
jae
adc
or
dec
and
sub
inc
sbb
out
sub
or
ja
je
push
aam
in
push
imul
inc
xor
call
xchg
lock
movs
xchg
adc
dec
scas
xor
adc
jns
cmp
cmp
pop
adc
adc
test
mov
or
test
mov
or
jnp
push
inc
fs
neg
loopne
push
sbb
and
dec
ret
mov
pop
mov
loop
mov
or
mov
cmps
shl
test
pusha
fisttp
movs
mov
ret
jg
inc
add
mov
ins
mov
out
adc
sbb
or
pop
in
inc
ins
adc
dec
je
mov
jno
(bad)
sub
retf
or
or
xchg
ins
out
dec
mov
inc
fdiv
inc
dec
in
pushf
mov
push
and
(bad)
imul
xor
je
mov
or
push
jp
and
add
and
cmps
je
push
loope
and
add
arpl
call
pop
sbb
por
cmps
int
(bad)
gs
daa
pop
and
adc
shl
jecxz
add
mov
jae
or
add
mov
loopne
js
add
adc
clc
or
push
mov
jmp
xor
xor
sbb
jle
add
dec
hlt
or
or
imul
inc
lods
push
das
lahf
and
inc
push
push
jmp
ret
or
pop
dec
dec
lock
mov
adc
lods
or
or
jae
mov
in
jnp
push
and
scas
sub
xchg
movs
xchg
sub
jo
ret
adc
lods
test
xchg
mov
loopne
dec
shr
loope
rcr
push
popa
or
sbb
xor
in
test
inc
rol
jge
cmp
call
psrld
mov
mov
mov
jns
ss
pop
add
ret
sbb
ret
pop
inc
jns
lock
addr16
nop
fiadd
nop
adc
sub
cmps
or
add
xor
xchg
inc
add
and
sub
test
js
adc
add
je
push
dec
repnz
repnz
push
or
inc
jmp
push
mov
sub
xchg
dec
test
mov
mov
mov
sbb
sbb
ins
popa
push
int
not
repnz
movzx
gs
ret
hlt
lock
outs
jmp
sbb
or
test
mov
adc
mov
pusha
jmp
ret
adc
adc
adc
xchg
out
add
mov
outs
neg
jne
fstp
test
push
not
add
test
xor
inc
sbb
imul
cli
mov
mov
and
test
pop
dec
sahf
hlt
repz
clc
repz
mov
ror
push
leave
sbb
sbb
push
sbb
adc
cmp
sbb
add
pushf
sbb
movs
dec
icebp
lds
lahf
jno
add
xchg
cmp
bound
jb
jae
nop
add
rcl
xchg
xor
mov
hlt
retf
xor
jmp
(bad)
jp
or
pop
and
inc
cmp
and
sub
pop
arpl
adc
mov
inc
out
adc
dec
sbb
mov
pusha
fsub
out
xor
or
js
mov
rcr
inc
popa
in
sbb
sti
mov
jmp
cmp
fs
xchg
inc
dec
cmp
mov
inc
cdq
add
mov
push
clc
and
xor
push
mov
sub
popa
cdq
add
(bad)
or
out
test
sbb
inc
cmp
mov
cdq
dec
cmp
xor
movs
sbb
aam
dec
cmp
mov
push
mov
sbb
sub
cs
adc
mov
or
dec
pusha
sbb
jne
out
push
jmp
pop
mov
and
inc
mov
nop
pushf
retf
pop
mov
add
or
xchg
mov
adc
add
sahf
and
jo
sub
ret
xor
add
lea
jp
mov
fsubr
and
sub
pop
xchg
nop
cmp
sbb
in
sbb
call
mov
xor
sub
std
lods
dec
in
call
sub
jne
les
jg
sbb
add
cmc
daa
cmp
jle
je
jge
outs
sub
push
mov
bound
and
xor
xchg
into
push
(bad)
aad
daa
loopne
xchg
int
je
int3
or
push
or
sub
rcl
push
mov
(bad)
dec
push
sbb
sub
shl
xchg
xchg
sbb
adc
adc
dec
adc
fmul
rcr
pop
sub
xor
adc
dec
or
rep
and
sbb
and
inc
aad
lea
rol
shr
(bad)
jp
or
adc
jle
js
jge
dec
pop
sar
mov
xor
jmp
js
enter
mov
inc
cs
adc
sbb
pushf
ja
push
add
inc
imul
shl
mov
lea
lea
and
(bad)
call
cmp
inc
ins
outs
or
js
sub
aam
mov
gs
popa
movs
ins
lea
pop
aas
cmp
jp
sub
out
ret
addr16
dec
fsubr
popf
add
adc
dec
pop
xor
ficom
xor
inc
test
or
or
fwait
xchg
xor
jmp
mov
add
xor
jmp
imul
pop
pop
push
mov
or
sbb
add
dec
fild
ror
push
add
push
mov
push
repnz
lar
add
or
push
jnp
inc
in
jle
cmp
add
pop
dec
sub
mov
sbb
ins
add
add
add
psraw
sub
call
adc
enter
iret
jae
imul
pop
pop
icebp
sub
push
sahf
adc
inc
jmp
mov
mov
jb
dec
sbb
aam
xor
ret
adc
xor
push
and
ins
or
popf
or
pop
xchg
hlt
xor
fs
inc
or
xchg
jno
popf
pop
xor
or
iret
push
mov
mov
pop
xchg
out
xchg
mov
add
and
push
inc
fcom
add
sub
aaa
xchg
popf
add
jnp
js
outs
sbb
cmp
rcl
and
shr
jmp
inc
pop
xchg
popa
es
clc
jnp
inc
push
lock
xor
scas
push
rcl
add
jle
xor
enter
jbe
inc
pop
push
jmp
dec
dec
xor
das
add
and
sbb
je
push
addr16
sar
js
fild
lods
xlat
ret
test
lea
xor
das
and
xchg
adc
das
clc
sahf
or
fnstcw
xor
sub
rol
push
add
fdiv
sub
fild
add
or
add
add
mov
dec
int
push
xlat
nop
pop
inc
add
fsubr
ror
lods
fsubr
rcl
outs
push
adc
lods
icebp
push
pop
jb
enter
loopne
add
mov
pop
popa
mov
xchg
mov
and
mov
xor
in
sar
xor
mov
xchg
sub
pop
ins
pop
pop
adc
or
lea
jmp
add
mov
and
cmp
sbb
cs
xchg
nop
or
cmp
in
pusha
mov
jmp
inc
je
adc
js
pop
or
das
push
sbb
fidiv
enter
arpl
cmp
xchg
mov
dec
jmp
and
push
sbb
pop
or
and
enter
jo
xor
xlat
add
and
pusha
call
fimul
add
shr
lods
jnp
test
test
js
sbb
inc
mov
mov
inc
mov
add
cli
or
push
mov
and
nop
sub
arpl
xor
sbb
out
cwde
outs
xchg
or
xlat
ror
cmp
in
sub
push
or
push
add
stos
push
mov
jns
call
mov
xlat
or
sbb
push
add
add
pushf
inc
push
push
or
mov
call
sub
and
jp
retf
loope
mov
or
ror
xchg
xchg
pop
cs
or
cmc
push
xchg
cmp
sub
add
jnp
aam
icebp
pop
mov
inc
adc
push
pop
add
sbb
inc
and
bound
dec
add
int
in
js
and
jle
cs
and
dec
and
xchg
pop
sub
sub
inc
mov
imul
jge
adc
adc
mov
js
sbb
pusha
mov
inc
jo
xchg
rcl
pop
push
jmp
mov
xor
xchg
daa
ret
push
test
mov
cmp
mov
rcl
sub
inc
add
addr16
(bad)
cmp
push
sub
les
sub
clc
fcom
xchg
or
ret
push
stc
fwait
test
jnp
adc
push
mov
pop
mov
addr16
arpl
stos
mov
pop
lods
add
jmp
sti
pusha
adc
test
pop
or
mov
(bad)
sub
lods
and
shl
pop
out
inc
mov
mov
ins
mov
jmp
jne
mov
jno
movs
fsubp
and
inc
jb
or
or
cmps
mov
stos
stos
mov
movs
cli
mov
or
jne
enter
test
push
dec
cdq
jecxz
dec
adc
mov
pop
add
jo
inc
in
test
inc
xor
jnp
inc
cmp
lock
and
add
xlat
add
(bad)
imul
add
mov
sbb
add
dec
nop
add
inc
js
add
test
push
and
push
retf
xchg
add
arpl
mov
or
inc
adc
clc
dec
scas
(bad)
cmps
add
je
(bad)
and
add
or
inc
mov
bound
inc
pop
inc
sub
mov
loope
adc
outs
cmp
xor
(bad)
mov
mov
mov
test
add
sbb
jmp
aad
cmc
add
int
sub
adc
dec
aam
fstp
mov
and
push
dec
mov
sub
pop
mov
es
cwde
adc
sbb
out
mov
sbb
enter
fldenv
sub
pop
arpl
adc
lds
gs
xchg
es
cmp
test
sti
pusha
push
std
fst
xchg
rcl
jmp
jge
mov
movs
push
shl
aad
jmp
inc
jns
xchg
test
or
dec
and
xor
or
stc
or
lock
fbld
mov
jl
pop
or
and
add
fdiv
hlt
stos
and
lock
pop
or
fadd
or
add
push
(bad)
in
inc
sbb
sahf
ins
adc
jle
mov
adc
fldenvw
mov
popa
mov
scas
enter
arpl
outs
and
push
or
aas
rcr
push
xchg
(bad)
imul
enter
adc
dec
retf
ret
push
rol
pusha
lds
pusha
mov
stos
loope
mov
pop
sbb
loopne
pusha
loopne
pop
int3
loop
rcr
call
push
data16
repz
inc
mov
enter
push
jb
push
dec
jae
jo
lods
add
ja
dec
sub
fs
out
xor
mov
mov
push
int3
enter
pop
inc
aam
pop
push
in
push
iret
test
mov
xor
cmp
inc
inc
cmps
movs
fist
pop
add
les
arpl
sub
loop
push
mov
push
push
xchg
add
jmp
add
and
lds
pop
les
sbb
pop
sbb
sub
cwde
xchg
mov
lea
movs
pop
pop
mov
sbb
jge
and
jo
addr16
and
leave
jl
and
sbb
mov
movs
pusha
int
pop
cmp
and
add
sub
inc
hlt
cmp
push
jb
xchg
adc
in
sub
sbb
dec
xor
sbb
add
push
xchg
pusha
mov
mov
lock
call
add
jo
inc
mov
or
lock
pop
add
or
sub
jle
xlat
push
mov
rol
add
fadd
leave
xchg
cmps
push
mov
hlt
jge
int
sbb
dec
mov
pusha
push
(bad)
std
adc
mov
lods
xor
adc
fild
jo
fistp
sbb
rcr
xchg
sti
dec
push
into
add
sub
or
push
push
mov
jp
ret
inc
push
or
adc
aas
pop
adc
push
adc
push
sbb
push
daa
dec
sbb
jae
mov
out
adc
fabs
movs
xor
sbb
dec
dec
push
sub
shl
xchg
int
dec
and
add
dec
add
jno
clc
and
ins
inc
fdivr
ror
mov
mov
es
dec
(bad)
ror
ficom
jb
dec
shl
pushf
xor
shl
push
sub
pop
pop
dec
and
stos
add
adc
pusha
js
jle
fstp
fwait
pop
fs
retf
and
jae
or
fs
xor
leave
leave
inc
call
pop
pop
mov
pop
sub
scas
fnsave
sub
repnz
xchg
inc
sub
sahf
dec
pop
xor
mov
add
fild
nop
mov
mov
imul
add
es
test
jle
daa
mov
push
and
int
xor
adc
or
imul
cmp
ret
add
mov
mov
int
fild
or
adc
cmp
fnstcw
dec
dec
xor
pop
loope
cdq
mov
test
pop
and
add
lahf
in
push
dec
test
add
and
add
push
retf
fs
aas
sub
mov
xor
imul
mov
dec
add
and
into
mov
push
sub
sub
sub
push
call
cmp
nop
rcr
(bad)
sub
into
dec
xor
lods
jmp
dec
mov
or
aad
add
or
xchg
and
jge
lock
add
sub
push
sub
add
pop
stos
mov
(bad)
mov
aaa
repnz
add
faddp
push
or
jo
(bad)
clc
lea
xor
mov
cwde
xchg
int3
xchg
pusha
mov
sub
xlat
clc
popf
pop
mov
adc
or
pushf
pop
add
icebp
push
dec
js
sar
pop
xor
popa
aaa
sub
addr16
mov
cs
fist
idiv
jne
adc
push
sub
push
xchg
sbb
sub
icebp
and
add
and
dec
or
jbe
fild
sar
clc
and
(bad)
jl
add
scas
pop
cmpxchg
or
inc
sbb
fsub
sar
adc
imul
add
pop
inc
adc
das
pop
add
cld
aas
into
es
adc
pop
inc
mov
mov
xchg
push
ret
js
add
bound
daa
jnp
fs
(bad)
fidiv
ror
dec
and
ja
jg
ror
ficom
jns
adc
and
mov
dec
jmp
dec
shl
adc
xchg
out
sbb
add
clc
(bad)
outs
push
iret
gs
aad
or
or
xchg
or
call
push
lock
sub
jo
or
dec
jmp
push
adc
jmp
repz
push
retf
mov
imul
shl
mov
test
adc
movs
pusha
sub
push
mov
cmp
popa
cmps
and
mov
push
fcomp
adc
pop
push
adc
jbe
xor
call
fdivr
sbb
and
fadd
sbb
inc
call
inc
push
add
jle
sub
mov
xor
test
push
test
mov
je
mov
pusha
data16
xor
pop
cs
or
xor
cmp
popa
and
inc
or
or
retf
push
or
pop
push
lods
inc
loop
stos
imul
dec
fwait
add
cmp
add
cmc
or
push
leave
sbb
dec
mov
mov
and
and
xor
dec
arpl
push
(bad)
adc
jp
adc
push
pop
movs
sbb
or
add
rcr
add
lahf
dec
cmp
imul
hlt
imul
and
jno
cwde
(bad)
pop
hlt
and
jg
rol
xchg
sbb
cmp
out
dec
sbb
leave
lock
sbb
mov
xchg
adc
sub
dec
dec
ror
sbb
pop
mov
sbb
sub
fiadd
push
jmp
push
sti
xchg
xchg
mov
ret
cmp
or
inc
xchg
in
pusha
pop
sbb
push
bound
in
xchg
test
es
mov
dec
jmp
pop
inc
rcr
repz
sub
and
pop
xor
or
xor
dec
cmp
add
xor
push
jo
cmp
dec
xor
int
cmps
ret
mov
push
xchg
and
dec
dec
mov
mov
mov
jecxz
sub
cwde
rcl
out
shr
push
retf
clc
inc
dec
pop
loopne
inc
jb
or
pop
add
out
rcl
out
and
inc
lods
inc
pusha
enter
ins
dec
ins
add
inc
sbb
adc
sub
inc
es
push
inc
xchg
push
pop
add
and
cmp
pop
movs
jne
shl
push
aad
push
dec
ins
pop
int3
push
out
xchg
xor
rol
and
add
fldenv
lock
scas
inc
mov
cmp
push
pop
push
fld
arpl
inc
enter
sbb
sbb
(bad)
ffree
mov
push
das
clc
dec
push
das
and
jnp
or
or
push
jl
jge
add
outs
in
sbb
jecxz
adc
mov
dec
mov
inc
adc
retf
or
nop
rcl
cmp
push
fcomp
fnstenv
and
int
inc
cmp
mov
or
(bad)
out
and
cmp
add
jo
sti
cmp
jg
adc
push
mov
and
repz
inc
push
out
pusha
daa
pop
int3
mov
(bad)
daa
int3
jbe
push
sub
adc
jmp
mov
push
pop
fdivr
out
rcr
xchg
or
push
inc
(bad)
fstp
xchg
fadd
mov
loope
push
mov
ror
push
(bad)
test
lahf
xchg
xchg
pop
push
fcomp
pop
inc
jl
push
sub
xor
test
cdq
inc
stos
push
in
sbb
sub
inc
pop
mov
ret
push
add
shl
neg
push
je
push
cmp
and
and
or
mov
sbb
pop
adc
lods
in
aaa
sub
xor
inc
pushf
or
call
mov
push
or
xchg
rcl
ret
stos
btc
adc
add
retf
jo
adc
sub
sub
pop
in
dec
daa
adc
sub
jnp
push
xor
xor
cmp
xchg
stos
pop
leave
or
daa
or
and
inc
out
dec
pop
pop
mov
pop
cmps
movs
dec
mov
mov
or
clc
outs
cmp
adc
or
adc
pusha
and
(bad)
call
add
sbb
inc
jp
adc
test
push
push
or
push
or
into
or
in
paddq
pop
ror
inc
inc
icebp
dec
mov
add
and
out
jns
int3
cmp
push
test
adc
(bad)
fsub
or
mov
retf
or
adc
sbb
sbb
and
and
sub
push
sub
fwait
lea
cmp
mov
inc
push
dec
dec
pusha
inc
fs
scas
xchg
lea
aam
mov
xchg
pop
and
inc
je
mov
dec
add
pop
mov
jae
and
ja
xor
pop
and
mov
out
ds
in
adc
push
int
jns
imul
xchg
fdivp
cmp
push
not
or
ss
adc
dec
rcr
(bad)
adc
inc
cmp
and
add
sub
prefetchw
sbb
cmps
xor
mov
stos
rcl
ins
gs
cmp
or
sti
inc
push
jb
scas
or
mov
cmp
popa
inc
mov
ja
add
mov
cmps
jmp
cmc
add
add
cmp
xor
xor
and
or
sub
pop
cmp
or
mov
pop
arpl
fsubr
xchg
fdivr
nop
(bad)
cmp
je
mov
repnz
push
mov
xchg
or
dec
adc
mov
mov
add
xor
add
lahf
xor
push
sub
jb
sbb
out
in
ret
rcr
add
pop
jae
mov
dec
jne
(bad)
(bad)
mov
adc
cmp
inc
call
nop
mov
sub
adc
mov
push
ss
pop
sbb
add
sbb
sub
leave
cs
sbb
daa
inc
xlat
xchg
push
stos
jo
scas
inc
pop
stos
lds
jp
popf
cmc
fwait
daa
iret
cli
add
add
clc
jae
sub
jecxz
cmp
jle
les
and
add
pop
cmp
and
mov
call
enter
xor
mov
mov
mov
sub
adc
pop
add
or
dec
dec
into
repnz
xchg
dec
mov
and
movs
cmp
add
adc
xor
xchg
or
enter
push
in
mov
add
add
dec
inc
imul
push
mov
add
into
pop
or
inc
pop
pop
add
shr
add
cmp
(bad)
sbb
pop
dec
dec
sahf
adc
dec
cmp
adc
shr
je
xor
loope
add
js
xchg
jl
je
lods
fld
xor
pop
add
cmp
cmp
jmp
xor
cmp
jb
jo
push
xor
add
pop
add
add
(bad)
cld
xor
pusha
lods
aam
add
test
xchg
add
jo
mov
and
xor
xchg
fcom
inc
add
push
pop
(bad)
rcr
xchg
(bad)
mov
or
imul
icebp
ins
or
push
retf
dec
sbb
rol
and
and
imul
fadd
popf
and
(bad)
ret
push
xor
cmp
aaa
mov
or
jne
call
in
lock
jb
movs
imul
sub
ja
retf
and
jbe
and
xchg
out
xor
(bad)
int3
adc
jo
outs
movs
das
cwde
les
adc
mov
cmp
add
imul
pop
jo
sub
sub
sub
jl
cmps
sub
and
sbb
adc
adc
push
mov
call
push
add
or
mov
clc
push
xor
inc
sbb
sahf
dec
or
sub
sub
daa
mov
jo
or
add
add
sar
inc
or
pusha
imul
pop
sub
sbb
sar
add
nop
cmp
cli
add
aas
test
mov
push
push
or
pop
pop
int
jbe
fimul
pop
cli
inc
(bad)
xor
iret
adc
sub
je
mov
mov
pop
nop
inc
push
cmp
fsub
and
std
mov
cmps
mov
mov
inc
(bad)
je
add
es
inc
pop
loop
cwde
pop
es
enter
fnsave
mov
sbb
push
mov
push
xor
test
ja
clc
jbe
mov
add
pusha
add
(bad)
push
loope
test
clc
push
and
or
xchg
in
lods
jge
cmp
jmp
test
mov
xlat
ds
mov
sub
sub
loopne
sub
fwait
mov
inc
out
fsub
les
add
aad
js
mov
dec
fld
sbb
and
fidivr
cs
sbb
mov
add
mov
ds
test
add
cmps
push
call
scas
sub
call
dec
gs
or
fsub
scas
inc
adc
sbb
movs
or
or
pop
push
imul
(bad)
gs
aaa
add
and
adc
cmp
push
sub
rol
call
or
bound
repnz
jecxz
les
iret
fst
jge
retf
adc
jbe
xor
adc
sbb
cmp
push
push
push
jmp
adc
mov
and
pop
jmp
mov
sub
lds
pop
sub
js
mov
and
cmps
or
xor
pop
jecxz
or
xchg
popa
cmp
adc
mov
lods
cdq
push
sub
sub
leave
das
mov
cmc
or
rcr
je
inc
sahf
or
shr
das
xor
cmp
js
adc
outs
(bad)
(bad)
xor
(bad)
mov
test
out
pop
add
dec
cmp
lea
or
cwde
sub
clc
pusha
or
and
cmp
and
mov
psubsw
imul
sar
jmp
inc
adc
sbb
ret
shr
int3
jg
fdiv
loopne
mov
add
sub
or
out
enter
or
push
(bad)
push
jl
push
retf
and
es
aam
retf
add
(bad)
leave
and
inc
or
cwde
sbb
sbb
int3
ss
in
pop
(bad)
enter
adc
cmps
sbb
and
(bad)
fcom
add
adc
aas
(bad)
int
movs
and
jno
in
loopne
(bad)
mov
movs
push
aad
add
cmp
scas
add
icebp
add
add
ins
lods
add
xor
shl
dec
gs
and
add
outs
sub
sub
lds
sub
add
jmp
cwde
shl
ja
inc
push
mov
stos
int3
sub
add
sbb
mov
pusha
mov
(bad)
or
sub
fadd
push
mov
xor
jg
jge
popa
mov
int
inc
and
adc
movs
pop
pusha
cmp
mov
loop
add
lods
mov
dec
sub
adc
test
js
adc
lock
pusha
add
mov
scas
dec
aam
cmp
sbb
clts
and
xor
aam
jmp
(bad)
cld
pop
adc
adc
sub
pop
push
(bad)
out
movs
aaa
dec
enter
mov
das
add
in
mov
fild
add
sub
sub
mov
or
test
sahf
sti
add
jmp
or
fdivr
fsubr
adc
jbe
loopne
imul
push
fcom
xchg
in
int
loope
imul
push
test
out
pop
aam
sbb
fdiv
add
inc
loopne
test
xchg
popa
iret
adc
sub
sbb
pop
pop
dec
mov
and
push
mov
add
and
fwait
(bad)
daa
sbb
lock
retf
(bad)
cld
sbb
inc
sar
push
dec
out
fs
mov
sbb
add
call
jb
dec
call
mov
test
inc
pop
lds
sub
dec
dec
xlat
sub
cmp
xor
jb
sub
fnstcw
(bad)
sar
daa
pop
sub
lea
aad
fs
jle
aad
in
pop
ret
jnp
xor
ss
xchg
inc
mov
je
clc
test
cmp
imul
push
mov
clc
mov
je
or
sbb
in
loopne
sbb
stos
in
jne
inc
jne
fld
or
sbb
push
retf
mov
scas
or
xor
retf
pop
or
inc
(bad)
retf
stos
(bad)
mov
stos
and
add
loope
lock
and
add
aam
or
pop
or
dec
(bad)
aam
hlt
dec
or
jge
sbb
add
rol
mov
mov
rcl
push
out
add
pusha
loop
push
add
mov
cmp
shl
bound
jne
or
loop
sub
in
and
push
inc
and
lods
or
jecxz
out
clc
iret
es
sub
or
fcmovu
cwde
sbb
xchg
and
sub
test
or
sbb
and
imul
and
fdivrp
test
or
in
or
dec
mov
xchg
loopne
mov
sbb
es
sar
rcr
inc
add
mov
cmp
outs
and
in
neg
or
ja
mov
dec
or
test
cld
push
or
cmp
icebp
je
test
arpl
outs
mov
pop
cwde
scas
dec
or
jne
pop
push
je
lea
into
mov
xchg
xchg
or
hlt
mov
sahf
add
ins
or
inc
jnp
fwait
sub
dec
rcl
push
js
fadd
sbb
pop
mov
push
adc
cmc
cmp
jbe
bound
adc
mov
jl
sbb
push
inc
mov
add
and
pop
xor
mov
inc
inc
sbb
pop
fcmovbe
pop
xor
hlt
sbb
adc
add
test
in
jecxz
push
rcr
jns
inc
push
or
into
(bad)
push
cmp
call
fstp
je
dec
adc
jg
add
push
inc
cmp
sar
adc
add
and
adc
fiadd
sub
jno
jl
push
sub
cmp
adc
outs
sbb
cmp
adc
jmp
mov
sbb
nop
addr16
(bad)
dec
xchg
ret
test
lds
out
into
xor
pushf
jmp
fwait
lock
fwait
add
dec
mov
dec
ins
push
jge
cs
sub
adc
mov
shr
fadd
adc
add
add
xlat
adc
and
pop
adc
call
cmp
jl
lea
mov
cmp
sar
jb
pop
ror
sar
or
sub
jae
xchg
enter
cs
mov
pop
xchg
pop
lock
pop
xor
inc
adc
inc
adc
pop
pop
dec
call
enter
inc
ds
data16
in
rcl
jmp
inc
adc
sar
loop
sbb
push
sar
nop
fadd
adc
jmp
dec
cmp
popa
dec
test
idiv
pop
sub
es
(bad)
push
sbb
iret
adc
add
push
(bad)
ret
mov
xchg
aad
mov
retf
mov
test
push
xchg
sbb
and
aas
add
pop
addr16
adc
push
push
pop
mov
xor
scas
or
ret
adc
mov
mov
pop
inc
sbb
add
pop
sbb
shl
mov
mov
pop
cmp
inc
and
test
scas
sbb
and
ds
mov
cli
add
push
std
push
fild
jg
pop
jae
jnp
cmps
sbb
push
dec
js
faddp
inc
mov
loopne
cs
or
push
add
stos
pop
mov
nop
add
cli
cmc
mov
sar
(bad)
or
sbb
and
pop
pop
cmp
cmp
je
cmp
cmp
out
repnz
or
in
das
or
or
xchg
adc
rol
xchg
sbb
dec
stos
(bad)
cmps
fcom
jmp
sahf
ror
push
push
mov
mov
xor
jmp
dec
mov
jp
arpl
lods
jmp
enter
mov
inc
jmp
clc
aas
cmp
aaa
fwait
shl
ror
push
ror
xor
jbe
out
sbb
xchg
fld
ret
mov
lock
sbb
adc
les
xchg
xchg
loop
inc
lea
mov
hlt
aaa
xor
test
rol
push
(bad)
jg
or
and
or
mov
aad
dec
in
xchg
pop
inc
dec
(bad)
push
push
or
inc
mov
mov
jl
rol
dec
inc
xor
push
jnp
icebp
sub
pop
sbb
push
ja
das
dec
adc
rcr
pusha
sbb
or
ret
js
stc
outs
mov
imul
jae
shl
mov
xor
das
adc
jo
push
jo
je
enter
pop
cmp
sar
lahf
sub
dec
lods
enter
popa
inc
arpl
loop
xor
push
shr
pop
mov
and
(bad)
push
xor
or
push
imul
xchg
call
cmp
pop
inc
push
hlt
ins
mov
and
add
inc
faddp
mov
sub
mov
call
sbb
dec
add
cmp
adc
div
pop
in
or
or
sub
and
les
inc
or
ret
ficomp
pop
lock
pop
sbb
sub
or
ret
adc
aam
retf
or
xor
or
or
xor
push
loope
and
mov
pop
sub
and
in
ret
push
sbb
fiadd
aas
sbb
imul
mov
jl
stc
pop
mov
xor
mov
in
and
sti
push
mov
sub
ins
pop
and
mov
mov
mov
pop
mov
test
adc
loope
aas
mov
mov
mov
or
jle
lock
imul
rcl
push
mov
mov
jcxz
inc
mov
mov
or
add
loope
nop
cmp
mov
pop
movs
inc
sbb
jmp
sub
mov
pop
pop
inc
pusha
adc
adc
add
movs
adc
rol
sbb
mov
dec
loopne
add
mov
int
mov
and
inc
test
and
inc
jle
daa
or
mov
mov
inc
outs
dec
push
shr
cs
sbb
push
sbb
or
adc
cmp
ret
push
push
add
sbb
inc
jl
xchg
xchg
xchg
arpl
lock
adc
test
addr16
xor
or
loope
mov
or
inc
pop
push
lods
movs
sbb
loope
test
pop
dec
adc
fcom
xchg
les
ja
or
push
push
das
out
imul
mov
jl
mov
cdq
sti
add
gs
dec
int3
pop
pop
sbb
dec
or
push
dec
cmp
add
and
fwait
and
popa
test
rol
sbb
call
pop
pop
add
add
movs
sbb
dec
loopne
fmul
add
lea
jae
rol
mov
aam
imul
pop
out
cmps
rcl
mov
sbb
ja
or
add
(bad)
cmp
inc
iret
dec
sub
test
rcr
jno
pop
or
sbb
pop
and
pop
and
xor
call
add
rcl
ins
mov
inc
dec
jno
outs
jo
(bad)
jbe
cmp
sbb
fbld
push
cs
loop
add
repnz
and
inc
pinsrw
add
(bad)
int3
dec
es
add
repnz
dec
push
in
in
cwde
dec
ins
repz
pop
pop
pop
jbe
mov
add
pop
(bad)
enter
cmp
jns
sbb
and
add
xchg
add
mov
mov
test
or
jmp
adc
or
cmp
inc
push
(bad)
(bad)
int3
push
sub
shr
nop
adc
push
gs
leave
ins
xor
enter
inc
sti
je
mov
and
shl
cmc
leave
lock
pop
jge
cmp
aas
push
in
mov
sub
mov
or
adc
daa
ret
lea
xor
add
push
xchg
inc
rol
or
int
lods
cmp
clc
pushf
and
mov
or
int
sbb
pusha
xor
push
dec
scas
mov
dec
inc
outs
ins
(bad)
push
push
inc
sbb
mov
push
or
pop
clc
push
adc
sub
pcmpeqd
adc
cdq
mov
jbe
ret
jbe
jbe
or
jno
jbe
add
jbe
outs
xor
mov
mov
adc
add
cwde
add
adc
pop
push
sbb
test
push
and
test
add
pop
jbe
dec
es
jbe
test
push
jbe
jbe
pop
xor
jbe
xor
jbe
leave
test
jbe
jbe
sbb
push
shl
pop
and
adc
popf
mov
ror
dec
int
mov
cmc
and
mov
test
add
cli
ror
pop
pop
dec
add
mov
in
test
push
nop
das
adc
or
mov
push
mov
mov
or
or
pop
dec
sub
fstp
add
jns
imul
ror
push
mov
aas
pop
add
sbb
leave
test
movs
push
hlt
xor
xlat
adc
pusha
jmp
push
popa
add
adc
(bad)
rol
in
push
aam
or
and
lea
shl
enterw
jo
xor
mov
inc
lock
das
xchg
inc
inc
mov
fmul
xor
push
cmp
sbb
adc
test
ret
sub
or
or
dec
cdq
add
or
pop
(bad)
cmp
je
inc
jmp
cmp
add
mov
dec
xor
test
xor
or
pop
sbb
adc
inc
push
and
pop
sbb
sahf
sub
push
xchg
rol
push
dec
or
adc
cmp
rol
sar
je
pop
imul
and
(bad)
cmps
push
out
cmp
or
mov
or
jle
fdivr
cmp
lss
stc
xor
mov
outs
out
and
push
sub
and
inc
inc
dec
mov
add
js
and
leave
push
mov
test
lock
pop
pop
dec
mov
inc
cmp
call
jmp
dec
pop
jmp
outs
pop
adc
mov
push
add
or
rcl
das
dec
or
fsub
test
arpl
or
cmps
ins
push
jmp
rol
call
popa
inc
pop
and
add
ror
add
mov
cmp
mov
bound
mov
jb
arpl
hlt
sub
add
shl
mov
out
add
nop
or
and
add
ds
sub
pop
and
or
sub
mov
push
xchg
inc
inc
data16
xchg
add
xchg
fucomip
sbb
pop
mov
mov
sbb
sub
push
pop
and
jo
sub
push
add
add
adc
sub
push
test
sub
xchg
mov
retf
mov
scas
dec
xlat
dec
mov
cmp
in
inc
mov
pop
push
or
call
ret
push
push
rcl
(bad)
and
sbb
add
iret
fwait
arpl
pushf
mov
adc
pop
mov
push
or
ins
dec
xor
sbb
pop
and
or
mov
aam
outs
pop
jmp
sub
or
ror
loopne
ins
push
sub
movs
loopne
sub
mov
inc
and
cs
cmp
mov
(bad)
fldz
jmp
mov
or
adc
shl
dec
dec
bswap
xchg
pop
enter
pop
inc
add
sbb
xor
xchg
pusha
sbb
and
xchg
sub
sub
aad
hlt
pop
mov
jmp
aaa
repz
movs
dec
jne
add
inc
cs
shl
outs
in
sbb
out
cmp
push
add
leave
jnp
jb
pushf
pop
movs
adc
push
xor
pop
rcr
rcl
sahf
int
into
mov
rcl
retf
push
add
rcr
out
ret
cmp
inc
xor
pop
rcr
add
imul
cmp
xchg
pop
push
fist
cld
fmul
mov
xchg
shl
and
pop
cmps
add
jg
and
sub
fidivr
mov
iret
iret
add
add
sbb
pop
and
xchg
push
or
fld
js
and
mov
jl
fdiv
cs
and
sub
imul
push
push
xchg
add
push
ss
mov
mov
pop
(bad)
cld
add
scas
cmp
add
cmp
into
xlat
sbb
add
add
xchg
sub
and
in
(bad)
mov
push
hlt
push
inc
pop
aam
inc
xor
push
xchg
call
in
fcmovbe
call
aam
nop
push
pop
or
cmp
mov
dec
xchg
sub
push
frstor
mov
fisub
mov
imul
outs
xchg
push
push
mov
xor
jbe
adc
add
mov
xlat
mov
outs
add
add
mov
dec
(bad)
dec
cli
retf
(bad)
movzx
in
mov
or
sub
adc
and
sub
mov
mov
fisubr
mov
hlt
inc
cmp
pop
cmp
test
mov
ret
aaa
mov
sub
dec
or
lock
xchg
iret
rcl
shr
test
jne
inc
xchg
std
mov
aas
dec
push
mov
out
dec
dec
inc
pop
mov
lea
sahf
(bad)
loopne
pop
sbb
and
sbb
jne
rcl
adc
jecxz
xchg
iret
movs
sbb
adc
(bad)
int3
mov
in
adc
push
and
add
fadd
or
sbb
pusha
out
in
sub
arpl
dec
xchg
adc
ins
push
(bad)
call
or
test
fwait
cmp
ss
jae
sahf
cmp
loopne
shr
mov
call
xor
inc
mov
xor
cmp
add
add
push
bswap
or
pushf
sub
stos
or
or
adc
mov
push
dec
jl
xchg
js
inc
dec
xor
pop
jno
es
pop
fwait
sbb
(bad)
fs
add
pop
ret
mov
pop
imul
add
adc
mov
ret
pop
rol
sub
push
pop
pop
in
inc
or
mov
ror
leave
loopne
add
ror
push
pusha
push
or
mov
sbb
loopne
mov
rcl
xchg
das
xchg
sbb
jmp
addr16
or
pop
cs
pusha
out
fcomp
xor
and
lods
inc
fwait
pop
fcomp
pop
cmp
(bad)
jl
sahf
mov
pop
adc
push
sbb
mov
xchg
or
popf
imul
mov
sub
and
sbb
repz
ss
pop
and
sbb
push
bound
inc
rcr
je
lea
cmp
or
fadd
mov
movs
mov
xchg
xor
add
ret
ret
xchg
aam
shr
iret
adc
xor
add
cwde
pop
and
les
sub
in
je
sub
shl
les
cld
in
rcr
fadd
sub
sbb
add
ret
and
clc
je
ret
ret
dec
cmp
ret
fnsave
xchg
mov
lds
bound
pushf
loop
and
sbb
sub
xor
mov
adc
xchg
and
pop
int3
and
in
popa
ror
(bad)
push
das
sub
aam
xchg
inc
pop
hlt
data16
add
jge
inc
xchg
out
jnp
ja
pop
xor
and
and
or
ret
jbe
enter
sub
outs
fstp
enter
or
push
adc
pusha
pop
addr16
push
sar
mov
movs
xchg
sub
pop
xor
xchg
int3
clc
jb
mov
adc
ror
inc
leave
mov
aaa
lea
adc
lds
pop
mov
loopne
int3
pop
int3
jl
inc
add
ret
cmc
call
ins
mov
shl
and
cld
pop
clc
and
inc
jns
or
or
xor
add
clc
sbb
(bad)
xchg
adc
xor
outs
or
enter
xor
dec
pusha
mov
mov
sub
xor
mov
test
mov
arpl
add
cmp
jle
ror
push
inc
lock
ret
add
or
fsubr
cmc
jp
xchg
cdq
or
rol
xlat
push
or
xlat
mov
adc
loopne
sub
push
pop
mov
adc
mov
js
inc
in
es
pop
inc
sub
inc
(bad)
xchg
or
cli
mov
sbb
loopne
and
pop
add
inc
push
sbb
imul
xor
popf
in
cmc
add
in
ret
jp
test
rol
pusha
push
fdiv
dec
inc
push
sub
or
out
pop
imul
pop
js
cmp
pop
fld
xor
test
jbe
mov
fadd
fmul
mov
and
sub
mov
jmp
jns
add
jbe
sub
jae
sbb
out
cwde
adc
pop
push
add
sbb
imul
pop
es
cmp
push
rcr
inc
inc
xor
scas
add
add
fwait
loope
sbb
cmps
ficomp
hlt
pop
(bad)
pop
cmp
call
push
rcl
ret
or
sbb
sbb
and
dec
pop
push
inc
ror
xchg
mov
xchg
ds
mov
mov
mov
pop
xchg
fsub
iret
push
mov
add
hlt
call
or
scas
pop
mov
stos
or
or
and
mov
add
aas
adc
sub
adc
inc
add
jb
xchg
jge
push
icebp
adc
mov
xchg
adc
mov
or
xchg
add
xor
sub
dec
ret
mov
repnz
pop
or
adc
xchg
jl
pop
and
lds
add
pusha
aaa
test
adc
or
or
in
in
sbb
aam
adc
call
xchg
push
imul
inc
add
fild
push
cs
cmp
xor
gs
(bad)
mov
icebp
lea
ins
sub
or
dec
inc
inc
and
add
mov
sbb
mov
mov
push
in
ss
push
lock
imul
out
xor
leave
cwde
test
mov
add
jb
pushf
loopne
adc
xor
push
cmp
mov
rol
stos
mov
jne
adc
dec
fistp
xchg
das
and
loope
jle
mov
mov
sbb
cmps
lods
inc
je
(bad)
test
jmp
cmc
mov
push
aas
aas
mov
mov
push
dec
popa
inc
cmc
shl
push
in
sub
add
inc
mov
sbb
inc
jmp
mov
adc
aaa
xor
stos
jb
ror
enter
jecxz
mov
sbb
push
(bad)
xor
xor
aaa
pop
cli
pusha
fnstenv
or
iret
push
adc
adc
and
inc
addr16
xchg
inc
sub
adc
fadd
es
adc
rcr
xchg
test
imul
cmp
pop
push
out
test
inc
in
test
xchg
ret
sbb
mov
stc
fistp
jge
movs
movs
pop
lea
lea
sbb
sub
xchg
pop
clc
mov
sub
sbb
xchg
lea
add
call
mov
outs
dec
imul
add
adc
dec
jnp
add
mov
popf
mov
pop
test
mov
popa
dec
push
and
cmp
cli
or
sub
mov
retf
adc
pop
inc
ss
outs
inc
dec
or
inc
sbb
pop
pushf
or
cmp
add
mov
and
xchg
sahf
xchg
dec
loopne
dec
or
mov
dec
and
std
mov
xor
cmp
push
stos
pop
nop
mov
mov
push
mov
cmps
loop
adc
cwde
jmp
shl
or
inc
dec
jp
mov
aas
sub
nop
fnstenv
and
bound
jb
sub
xchg
cmp
in
fcmovb
jl
add
add
pushf
(bad)
and
out
pop
mov
and
pmulhw
fnsave
aad
xchg
or
leave
loopne
cwde
cmp
stos
int
add
dec
xor
push
mov
imul
push
xlat
xchg
repnz
ficom
adc
stc
add
sub
ja
sbb
sahf
and
or
jo
dec
cmp
sub
add
sub
add
jmp
add
jb
cmp
inc
xchg
cli
clc
adc
or
push
cli
xchg
nop
push
call
xchg
ja
rcl
je
dec
je
pop
mov
test
xchg
xor
fld
sbb
je
(bad)
hlt
(bad)
ins
and
out
jno
jmp
iret
sbb
xchg
imul
retf
jo
mov
cmovl
jecxz
xchg
mov
je
push
or
mov
das
(bad)
xor
add
in
ror
inc
or
push
and
dec
(bad)
xor
ds
add
jne
pusha
pop
fild
test
lock
ret
mov
(bad)
xlat
bound
loop
call
fcom
adc
jle
pop
pusha
mov
movs
mov
ins
ficom
push
lock
mul
inc
or
add
push
lods
stc
rol
mov
mov
inc
lea
cmp
xor
adc
ss
mov
pop
(bad)
loopne
mov
or
add
out
sbb
adc
cdq
xlat
ds
pop
push
add
sbb
imul
hlt
inc
mov
fidiv
popw
pop
cli
xchg
mov
sub
and
dec
pop
or
ret
adc
jmp
and
mov
ins
push
test
sub
jl
cs
push
mov
adc
add
ss
pop
cmp
es
popa
jbe
pop
fist
mov
mov
jo
imul
xchg
loope
push
test
mov
mov
pop
add
fmul
jne
and
push
add
sbb
jbe
(bad)
gs
loopne
fs
je
inc
rcr
shr
push
push
inc
mov
xor
and
pop
sbb
xor
lock
in
cmp
sbb
mov
mov
sub
outs
enter
xor
cmovae
hlt
mov
inc
jg
imul
cld
mov
and
sbb
mov
jne
add
aaa
sbb
mov
mov
push
or
test
rcr
ud0
add
add
mov
das
ins
addr16
jne
dec
into
fsubr
inc
adc
xchg
pop
jnp
xor
xchg
adc
shr
inc
or
adc
stc
pusha
out
or
pusha
pop
test
xor
and
test
ins
mov
test
jl
xchg
pop
fild
adc
aaa
pusha
mov
fisub
sub
add
hlt
adc
adc
je
inc
adc
movs
rol
arpl
lds
popf
xchg
add
out
pop
sbb
or
(bad)
ins
adc
inc
push
out
out
cs
sbb
leave
arpl
pop
shr
add
stos
rol
cmp
cmps
pushf
shl
(bad)
pop
dec
into
dec
push
mov
repz
pop
sub
arpl
mov
add
and
imul
sbb
sub
lock
dec
push
loop
xchg
dec
in
mov
and
mov
mov
pop
in
add
adc
or
xor
xor
les
jb
adc
and
int
pop
mov
xor
xchg
sub
inc
and
inc
rol
mov
not
sbb
cmp
nop
cmovs
push
mov
or
outs
xlat
dec
push
or
jmp
inc
mov
sbb
clc
jmp
add
adc
fmulp
out
mov
add
inc
and
xor
sar
inc
lock
retf
add
shl
aam
cmp
or
pop
add
inc
or
sub
ret
cld
into
popa
lea
mov
mov
icebp
dec
adc
retf
add
cmp
imul
xchg
and
adc
mov
test
jmp
leave
mov
add
inc
fisubr
jmp
stc
fs
cs
adc
add
add
lock
fld
dec
mov
int3
mov
clc
test
stos
repz
out
in
sub
lahf
jo
mov
stos
inc
test
in
dec
fs
mov
inc
xchg
sub
push
das
fld
shr
lock
ja
jae
jbe
xchg
shl
gs
dec
daa
dec
push
adc
push
and
int3
xor
into
or
xor
leave
dec
and
mov
inc
leave
jo
icebp
mov
lock
xor
jg
add
mov
add
add
loope
dec
pop
or
mov
mov
ret
jl
and
add
nop
inc
movs
adc
xchg
mov
not
inc
and
add
jns
or
jge
out
push
add
or
jns
sahf
or
or
jno
or
add
rcl
pop
in
movs
mov
xor
and
pushf
add
pop
add
int3
mov
nop
in
push
adc
dec
mov
inc
lods
leave
fild
or
xor
add
push
fisub
xor
and
lods
push
(bad)
jmp
mov
jg
xor
mov
or
movmskps
and
pop
frstor
xchg
test
mov
jmp
mov
mov
mov
sub
inc
jle
cld
jne
mov
js
loopne
loop
dec
and
ret
add
lahf
cdq
or
inc
sub
in
mov
xor
sub
push
pusha
call
xor
jne
mov
scas
pop
sbb
test
xlat
pop
inc
call
xchg
mov
ss
mov
fldenv
shl
cli
pop
cmp
test
jb
inc
mov
rol
stos
add
adc
jmp
ins
jne
inc
push
clc
dec
scas
fcomp
rcl
jne
popf
push
dec
mov
pop
push
pop
(bad)
mov
imul
clc
push
sti
dec
or
sub
outs
jmp
mov
in
bound
sub
lock
cld
ret
dec
fadd
lock
jae
pop
adc
lock
cmp
(bad)
loopne
add
dec
pop
int3
cmp
cmp
cdq
(bad)
pop
dec
xchg
mov
(bad)
adc
jo
add
pop
xchg
or
cmp
addr16
mov
adc
adc
je
fldenv
sub
sbb
cmps
add
pop
xchg
dec
sub
adc
jl
sub
std
jnp
dec
sar
adc
mov
sbb
jp
and
mov
or
aad
sti
pop
fucomip
sub
adc
or
sar
fisttp
mov
mov
push
push
mov
push
lea
push
xor
mov
in
add
or
push
sbb
sti
adc
jmp
dec
lds
outs
adc
jp
sbb
rol
fwait
or
fmul
pop
cmp
dec
sbb
ja
mov
dec
sub
shr
mov
fisubr
mov
mov
and
and
scas
(bad)
sub
add
add
add
add
idiv
int3
push
push
arpl
push
aad
ds
jnp
(bad)
and
jo
push
dec
retf
ret
sub
add
pop
das
adc
ret
mov
jge
sbb
cld
pop
mov
sub
push
push
pop
(bad)
adc
je
pop
add
push
xchg
mov
pop
jb
push
mov
push
aam
fcomp
xchg
shl
cmps
out
mov
sahf
add
pop
ins
mov
outs
adc
pushf
sub
and
dec
pop
(bad)
mov
loope
add
push
add
xchg
ret
icebp
repnz
inc
jne
jne
cmp
add
les
mov
push
xchg
scas
xchg
xchg
xor
iret
and
push
inc
adc
lods
dec
retf
jbe
mov
mov
cmp
test
cmp
imul
rol
movs
add
mov
dec
push
mov
xchg
add
jg
cmps
push
sbb
jne
cvttps2pi
pop
push
enter
cmp
call
cmp
js
shr
sbb
cwde
sbb
mov
lods
push
push
pop
aad
shl
repnz
adc
jmp
xor
pushf
mov
sbb
dec
jmp
arpl
js
xor
mov
ror
out
and
add
cmp
jle
pop
bound
scas
inc
add
jmp
sub
xor
jecxz
and
std
lods
in
ret
push
mov
cdq
xchg
pop
enter
pop
lock
pop
aas
lea
inc
or
add
jmp
and
adc
pop
sbb
scas
or
mov
mov
adc
retf
jmp
sub
mov
je
xor
outs
xchg
daa
jle
mov
adc
mov
addr16
push
pop
test
(bad)
cmc
mov
add
and
jb
leave
sub
sub
dec
jge
sub
cli
add
lods
arpl
test
popa
sub
add
sahf
shl
push
xchg
je
mov
mov
mov
add
pop
or
adc
fs
sub
jmp
or
and
fmul
adc
inc
je
mov
push
mov
add
adc
pop
icebp
and
xlat
por
push
push
pop
add
movaps
add
xor
inc
push
mov
cli
jbe
mov
add
daa
jmp
loope
imul
mov
sub
add
lods
sub
pop
ret
jne
repnz
gs
inc
sub
add
stos
push
sbb
aam
retf
add
xchg
xchg
cdq
add
xor
push
imul
loope
cmp
das
add
add
push
add
xor
jmp
xor
xor
movs
pop
test
in
inc
adc
pop
and
push
mov
or
xor
int
adc
cmp
xchg
xor
lods
adc
xor
in
jne
sub
push
inc
lods
push
imul
and
jne
popf
retf
clc
call
xor
or
ins
pop
lea
push
fisubr
rcr
add
add
into
jge
in
push
inc
or
inc
jg
jno
fld
out
or
(bad)
dec
fld
enter
loopne
pushf
(bad)
aam
mov
pop
or
(bad)
imul
jno
cmp
mov
push
pop
(bad)
out
or
push
dec
xlat
je
push
les
sub
adc
push
adc
in
push
packssdw
outs
push
ins
mov
icebp
ficomp
(bad)
push
aas
mov
in
adc
adc
jg
je
call
adc
mov
shr
es
mov
add
pop
fnstcw
ret
(bad)
ror
add
dec
rol
or
cwde
or
inc
test
repz
in
add
fbld
xchg
movs
mov
stos
call
fwait
cmc
jne
push
cmp
js
cli
adc
jne
dec
adc
push
mov
push
xchg
adc
lds
js
xchg
pop
fld
cmp
mov
mov
sub
ins
xlat
aad
aad
nop
retf
adc
push
push
inc
ror
adc
fs
test
and
mov
arpl
test
xchg
inc
lea
push
inc
xchg
inc
rcl
mov
dec
outs
shl
xor
add
push
clc
add
pop
js
pushf
push
call
adc
pop
inc
mov
and
mov
cmp
adc
pop
sub
and
add
or
leave
mov
loope
push
or
xchg
xchg
or
lea
push
ret
lods
add
and
sub
scas
inc
inc
das
mov
add
push
add
cdq
and
and
adc
in
data16
push
sub
test
add
cdq
inc
or
adc
jg
adc
lock
or
cmp
and
and
mov
inc
mov
ins
jbe
mov
inc
inc
leave
sbb
aaa
call
xchg
bound
push
or
leave
or
jne
lea
pop
push
and
dec
cmp
xor
jl
fdivr
test
test
test
sbb
xor
mov
test
xor
fiadd
pusha
push
mov
inc
loop
mov
inc
movs
ret
inc
push
inc
inc
idiv
dec
push
dec
jmp
dec
std
push
jmp
mov
inc
pop
or
pop
popf
in
imul
and
test
xchg
pop
sub
fs
mov
nop
xchg
or
test
add
cmp
adc
push
and
sbb
outs
or
enter
and
pop
jne
test
pop
mov
push
xor
ins
xchg
shl
in
shl
mov
inc
gs
nop
pop
cs
imul
inc
sbb
scas
fdivr
cwde
jl
sbb
mov
push
cmp
adc
mov
das
ffreep
pop
add
jb
add
(bad)
repnz
in
xchg
(bad)
or
adc
clc
push
mov
jne
loopne
aam
fst
push
rcl
sub
rcl
in
cmp
in
add
jl
add
or
div
and
jp
imul
inc
add
mov
push
int
(bad)
loopne
test
or
mov
dec
loopne
popa
dec
fs
xchg
(bad)
(bad)
mov
fisttp
jmp
dec
pop
adc
dec
mov
xor
jge
nop
xchg
mov
xchg
add
iret
imul
mul
push
and
add
dec
es
enter
push
sbb
rcr
push
lahf
ret
mov
fild
adc
int
movups
das
pop
fcom
add
loopne
xchg
icebp
mov
fnstcw
aaa
jno
mov
add
jecxz
or
fadd
add
imul
addr16
lea
and
adc
mov
imul
dec
cmp
add
lods
retf
fbld
xlat
rcr
imul
sub
push
scas
call
int
pop
cmp
mov
xchg
cdq
mov
add
xchg
sbb
pusha
ja
ins
fidiv
retf
xchg
js
sbb
je
mov
pop
add
mov
fadd
dec
jecxz
and
cmp
loope
adc
movs
bound
shl
sbb
adc
xor
and
pop
js
ss
xchg
loopne
add
in
leave
ret
add
repnz
popa
push
fild
xor
rcr
ins
jmp
ror
xor
and
add
sub
popa
popf
sbb
inc
cmp
aas
inc
imul
(bad)
aas
or
daa
sub
jnp
add
and
dec
imul
pop
dec
out
dec
popf
sub
push
sub
(bad)
stc
clc
push
xlat
pop
and
push
fprem
add
add
push
push
call
ds
mov
call
sti
scas
or
pop
pushf
mov
add
stos
adc
lods
js
push
dec
rcr
iret
scas
push
cmp
mov
sbb
push
mov
pop
xlat
push
jge
push
cmp
and
test
xchg
pushf
(bad)
and
adc
aam
or
mov
or
mov
add
add
mov
icebp
pop
pop
xor
cwde
and
enter
int
mov
rol
cdq
test
hlt
lahf
call
add
outs
cmp
add
mov
sub
pusha
les
and
push
add
sub
dec
or
(bad)
mov
push
pop
adc
and
mov
xchg
leave
pusha
dec
mov
xor
xor
xchg
in
in
dec
test
adc
clc
sub
ds
test
ss
mov
icebp
jo
push
push
les
mov
repnz
pop
pop
cmp
invd
fist
(bad)
lods
push
mov
adc
xchg
and
enter
add
jo
mov
loopne
or
pop
xchg
in
loopne
loopne
adc
es
daa
pop
in
mov
cwde
xchg
loopne
test
jecxz
in
or
jnp
lds
mov
aaa
leave
jne
push
sub
cli
movs
or
sub
popf
das
add
xchg
jbe
xchg
out
mov
cmps
cmps
test
xor
pop
push
movs
adc
loop
pop
scas
add
add
js
pop
push
aas
cwde
adc
imul
test
mov
add
xchg
sbb
adc
jns
xchg
add
xchg
xchg
add
pop
in
cmc
mov
in
and
adc
imul
je
or
idiv
jo
inc
jo
adc
xor
sub
pop
mov
sub
jmp
pop
sbb
sbb
cmp
push
loopne
enter
cli
dec
ds
pop
xchg
adc
push
or
fsub
xchg
ins
sub
add
jl
add
add
pop
inc
sbb
adc
xor
xor
mov
popa
sti
cmp
ficom
(bad)
mov
adc
movs
sub
or
mov
scas
adc
push
addr16
jg
fbstp
loope
mov
inc
and
mov
inc
add
jg
ret
mov
inc
and
or
cmp
lahf
(bad)
mov
jecxz
pop
mov
and
call
loop
sbb
pusha
lds
imul
mov
movs
sbb
inc
adc
add
movs
sti
scas
inc
test
mov
mov
mov
sub
mov
lds
(bad)
xor
stos
or
imul
dec
in
push
in
lock
es
sub
mov
adc
push
mov
cmps
push
scas
or
add
mov
mov
daa
inc
imul
sti
mov
push
movs
pop
mov
add
repz
(bad)
fadd
mov
ret
and
test
cmp
cmp
add
scas
add
mov
and
test
popf
sbb
inc
inc
mov
adc
mov
xor
mov
mov
rcr
out
push
inc
(bad)
dec
lea
mov
mov
es
or
xchg
iretw
imul
push
in
out
xchg
mov
imul
push
pop
xor
test
mov
test
mov
fs
mov
out
cmps
xor
bound
jmp
in
push
pusha
dec
or
out
and
dec
sub
outs
adc
in
or
push
add
pop
dec
les
xor
call
leave
and
cwde
pop
adc
xor
outs
and
add
and
sbb
push
mov
xchg
sbb
fs
mov
sbb
pop
cmp
and
and
or
js
push
cmps
sbb
popf
rcr
pusha
cwde
das
jns
sbb
mov
pop
(bad)
dec
fs
mov
add
or
dec
or
sbb
sbb
test
push
fisub
sub
inc
or
or
sub
add
dec
(bad)
jmp
xchg
dec
sub
push
ins
sar
mov
sub
mov
clc
and
ds
jo
inc
pusha
mov
push
inc
cld
mov
aaa
and
add
xchg
int3
in
test
outs
pop
inc
retf
pmullw
clc
jge
add
mov
jmp
aaa
nop
out
out
jle
sub
dec
xor
cmps
dec
jle
ins
sbb
mov
jp
cmp
xor
pusha
jle
sbb
sbb
adc
fs
push
dec
movs
daa
test
mov
sbb
ins
fadd
cmp
and
jg
and
push
xlat
cmp
adc
xchg
xchg
jmp
or
add
inc
jb
adc
in
(bad)
inc
add
dec
add
push
xchg
mov
pop
in
sub
inc
jae
pop
and
inc
arpl
inc
inc
shr
icebp
sbb
adc
xchg
cmp
(bad)
in
push
in
sub
or
mov
aam
xchg
movs
sub
pop
cmp
xor
jns
add
out
push
add
push
call
dec
mov
sub
leave
jge
fs
add
in
sub
rol
fiadd
in
lahf
and
add
test
not
out
and
enter
retf
call
shl
jmp
push
push
push
dec
add
jae
mov
fdivr
aas
jmp
outs
pop
add
xor
mov
add
sub
inc
fidiv
xor
add
lock
mov
xchg
adc
push
mov
pop
jp
dec
pop
js
stos
xor
in
jae
pop
jb
sub
jle
or
jne
sub
pop
push
test
jbe
mov
outs
jo
es
dec
add
imul
xchg
mov
push
(bad)
movs
and
cmp
pop
sub
les
jne
icebp
fstp
and
jmp
out
mov
mov
out
and
cmp
pop
or
sbb
push
loope
(bad)
mov
add
test
icebp
out
mov
test
hlt
add
and
gs
stos
(bad)
sub
enter
add
inc
jmp
arpl
gs
imul
push
movs
pop
inc
fstp
cdq
lods
inc
ins
repnz
mov
xchg
xor
nop
imul
and
pop
je
and
adc
xchg
adc
mov
and
inc
fwait
into
adc
adc
adc
sahf
mov
shl
jae
inc
(bad)
pop
fcomp
std
or
cmp
je
mov
lock
mov
pop
dec
retf
adc
inc
cmp
ror
movs
pop
lods
in
pop
add
mov
lock
mov
jecxz
sbb
xor
xchg
hlt
xor
adc
mov
sbb
ret
nop
addr16
xlat
jg
cmp
shl
idiv
int3
add
pushf
pushf
movs
test
push
cmp
mov
int
mov
cmp
xor
addps
icebp
adc
es
add
ret
inc
out
ins
adc
push
(bad)
cmc
adc
pop
or
adc
enter
cmp
clc
daa
xlat
xchg
(bad)
(bad)
sub
push
es
xor
push
xchg
push
xlat
mov
or
cli
ins
lods
ror
adc
push
js
mov
(bad)
in
ret
xchg
hlt
dec
test
or
or
xchg
pop
cmp
jne
push
push
push
dec
inc
adc
add
sbb
inc
add
fs
mov
wbinvd
adc
mov
sbb
out
sub
dec
or
adc
cs
add
sahf
adc
jne
test
xor
daa
push
xchg
adc
out
jbe
add
lods
add
sbb
xchg
iret
outs
add
(bad)
lods
adc
movs
cmp
rcl
ror
ins
add
popf
push
cmps
loope
les
and
or
adc
or
leave
inc
scas
adc
mov
test
test
js
xchg
mov
jne
or
inc
popa
or
cdq
fsub
mov
pop
inc
dec
xchg
inc
cmp
pop
lods
rol
into
cmp
jl
mov
test
je
pop
sub
(bad)
or
iret
mov
jns
retf
aam
mov
cmp
jne
call
mov
push
fiadd
xor
push
(bad)
scas
push
dec
mov
inc
and
xchg
adc
rol
leave
inc
jbe
je
inc
xchg
dec
mov
xchg
jno
test
mov
jle
add
add
and
int3
xchg
or
test
or
aad
int
pushf
xchg
pop
adc
sub
mov
cmp
or
xchg
ins
add
adc
and
cmp
and
nop
push
test
jmp
mov
jmp
adc
ins
add
sub
jns
shl
aam
(bad)
not
enter
xchg
lods
out
div
adc
aam
cmp
retf
push
fdiv
cs
dec
popa
and
or
imul
and
sbb
push
jo
bound
xor
inc
fisttp
mov
aam
push
arpl
xchg
adc
and
sub
lock
push
adc
jmp
add
lods
mov
cmp
movs
add
pop
mov
or
xor
mov
or
or
es
add
push
arpl
add
sub
mov
or
or
sbb
push
or
fmul
or
or
push
push
sub
xor
lock
xchg
pop
leave
daa
cmovo
pop
dec
call
lods
mov
dec
iret
push
xchg
xor
imul
scas
push
cmp
cmp
test
ds
ret
xor
pop
add
push
adc
adc
adc
ins
cwde
mov
ret
cli
popf
jge
mov
jge
les
ins
cmps
adc
in
sub
lahf
sub
cmp
pop
sti
sub
cwde
mov
cmp
add
and
stos
gs
jmp
sbb
add
scas
sbb
sbb
fadd
push
inc
imul
cmps
xor
(bad)
sti
jmp
push
dec
or
je
xchg
jo
pop
xchg
pop
push
jecxz
add
cmp
(bad)
outs
sbb
rcr
mov
jne
pop
test
inc
push
pop
or
xchg
or
add
inc
xchg
cmc
fwait
shr
or
sahf
nop
adc
xor
jo
rcr
sbb
sahf
ret
out
jmp
or
xchg
inc
fimul
jb
cmp
add
or
sbb
data16
in
cmp
xchg
sti
mov
pop
lods
dec
add
push
push
mov
xchg
iret
xor
lock
sti
out
inc
loopne
sahf
fbstp
add
adc
sub
adc
inc
mov
inc
or
ss
call
sbb
and
pop
push
ds
push
js
or
mov
cli
fmul
ja
xchg
je
out
clc
mov
xchg
test
pop
add
lods
dec
jnp
xor
mov
jle
icebp
push
mov
add
neg
sub
push
aad
clc
mov
jns
in
pop
ss
sbb
add
jecxz
xchg
mov
das
(bad)
in
outs
jnp
or
add
or
sub
mov
jne
mov
inc
or
dec
es
mov
pop
sbb
cmp
and
add
add
ja
pop
sbb
add
and
push
adc
pusha
or
pop
add
xor
xchg
retf
push
or
mov
sub
lea
mov
mov
pop
lea
add
push
fst
daa
add
push
mov
or
ins
sub
cmp
and
scas
add
dec
push
out
bound
adc
imul
xor
cmps
xor
sub
adc
pop
and
add
jnp
adc
dec
xchg
sub
add
and
cld
cmp
std
je
mov
push
das
pusha
mov
shl
not
in
jmp
push
aaa
mov
movs
or
inc
inc
adc
je
aam
cmp
retf
in
mov
xchg
test
or
ror
mov
jl
or
js
shl
aaa
push
push
mov
mov
add
pusha
out
jmp
add
gs
jns
aaa
in
push
dec
adc
pop
xor
stc
or
mov
pop
out
jmp
pop
mov
retf
add
je
mov
xchg
push
mov
dec
jb
or
push
ret
pushf
or
(bad)
sbb
sbb
or
jmp
mov
adc
or
sbb
mov
cs
in
ins
push
push
aaa
mov
mov
cmp
jmp
adc
sub
push
in
pop
pop
jne
jmp
fwait
mov
test
loopne
add
cmps
ins
fbld
cmps
xor
mov
arpl
and
imul
inc
jmp
adc
push
fsub
jmp
pop
dec
push
sub
xor
push
mov
jne
cmp
jne
leave
xor
and
fst
pcmpeqb
mov
add
dec
pop
mov
jmp
sbb
xor
pushf
movs
ja
xor
or
adc
cmp
jns
sbb
les
pop
adc
jmp
cmp
or
add
add
out
or
das
and
pop
aam
pop
mov
out
in
fnsave
test
xor
pop
dec
in
call
mov
or
pop
mov
sub
xchg
or
mov
mov
and
or
xor
pusha
outs
repnz
or
and
mov
fs
stc
add
and
not
clc
mov
and
sbb
pop
(bad)
pushf
push
and
sub
or
add
out
aam
outs
jmp
lea
call
stc
sbb
dec
dec
sahf
sbb
cmp
fisub
fisubr
jle
out
push
lock
out
sbb
ret
out
jae
out
aaa
adc
dec
repz
pop
call
cmova
adc
jge
sahf
xor
nop
ja
pop
add
push
add
lds
mov
jge
dec
pop
pusha
das
push
ins
xchg
push
jg
jb
gs
inc
add
mov
sub
cmovs
mov
jns
sbb
sbb
xchg
add
int3
inc
jg
sbb
cld
out
les
or
mov
popa
and
add
inc
jmp
mov
dec
cmp
fsubr
push
xchg
jne
mov
mov
or
lods
push
add
add
nop
add
inc
or
mov
daa
dec
ss
call
pop
cwde
pop
inc
inc
cmps
sbb
or
mov
mov
ins
bound
add
sbb
(bad)
push
cdq
xchg
cs
dec
mov
inc
clc
adc
(bad)
in
add
sar
das
cmps
jno
jecxz
xchg
scas
add
sbb
arpl
adc
inc
xchg
retf
cmp
mov
inc
push
mov
or
adc
lahf
add
dec
inc
xor
mov
retf
mov
(bad)
xor
pop
sub
es
dec
and
mov
ret
repz
pop
push
or
(bad)
or
mov
rol
fiadd
add
adc
sbb
pop
hlt
and
clc
add
or
or
adc
adc
or
outs
xor
lods
xchg
mov
xchg
mov
outs
ret
mov
adc
adc
dec
jns
or
inc
enter
(bad)
mov
jl
mov
sbb
or
mov
mov
ss
test
push
push
loopne
sbb
push
pop
xchg
pop
add
out
push
(bad)
test
into
movs
jb
call
and
and
or
rcl
and
leave
int
mov
dec
ins
cli
loop
cmp
out
and
mov
or
test
and
(bad)
ja
ret
inc
stc
adc
push
xor
or
and
into
adc
push
adc
mov
fld
ins
push
aaa
inc
call
lock
aad
or
inc
sub
pop
retf
scas
repnz
pop
int3
push
enter
mov
rcl
dec
xchg
aas
clc
xor
and
jo
xor
sbb
(bad)
dec
test
push
cli
adc
or
fisttp
(bad)
sub
push
add
rcl
xor
and
loopne
push
xor
jne
clc
mov
cmp
xor
dec
shl
ja
les
pop
xchg
lock
or
inc
xchg
out
and
push
mov
lea
mov
or
or
push
jp
cs
test
mov
inc
xchg
add
or
fdivr
inc
jmp
push
je
mov
adc
pop
pop
push
loopne
aaa
add
mov
and
imul
or
test
and
addr16
rcl
gs
mov
out
mov
in
mov
ja
sub
dec
adc
getsec
sub
mov
cmc
sub
or
lahf
pop
cwde
popf
sub
sub
sub
sbb
push
inc
mov
sub
mov
mov
rol
shl
sub
jecxz
adc
in
add
mov
cmp
sub
shr
popf
outs
int
mov
mov
sub
repnz
mov
inc
nop
rcl
cwde
xor
pop
int
je
pop
add
sbb
maxps
not
je
push
movs
ret
out
ret
push
test
jno
pop
aam
ins
jmp
(bad)
push
daa
mov
fist
mov
cmp
and
shr
mov
lahf
xor
jo
add
push
arpl
push
xor
rcl
sar
cld
sbb
xor
ins
dec
enter
push
shr
enter
lods
mov
sub
clc
sub
imul
test
sbb
(bad)
sar
mov
pusha
cmp
fdiv
inc
popa
jmp
imul
sbb
into
bound
scas
mov
inc
add
iret
or
leave
adc
pop
pop
xchg
xchg
jbe
pop
lar
jbe
mov
ins
mov
xchg
xchg
and
in
or
pop
or
xchg
lock
ret
sbb
div
mov
xor
pop
enter
hlt
jg
int3
imul
adc
add
pop
dec
push
or
and
sbb
mov
aam
inc
jmp
pop
repz
dec
or
xor
jb
xrelease
adc
ins
mov
push
sbb
ret
mov
mov
(bad)
jcxz
shr
dec
enter
and
pop
pop
sub
repnz
test
stc
sub
and
sub
cdq
adc
pop
xor
sub
pop
pop
and
pop
push
pop
pop
inc
adc
sbb
sbb
push
adc
pop
adc
test
or
inc
xor
add
jae
add
add
gs
mov
sar
es
imul
fs
shl
ins
dec
adc
dec
adc
inc
push
out
push
mov
or
jecxz
mov
or
push
mov
xor
or
rcl
xor
rol
mov
sub
or
and
nop
or
adc
mov
fcomp
xor
push
dec
add
inc
imul
add
mov
iret
fwait
bswap
push
cmps
adc
mov
xor
and
mov
repnz
fistp
lock
xchg
add
sub
lds
adc
repnz
bound
fs
pusha
ret
dec
test
xchg
xor
stc
lea
ss
adc
sub
xor
lahf
bound
jp
dec
xlat
add
push
(bad)
fstp
push
pop
test
or
cmp
nop
or
or
add
xchg
test
jmp
mov
dec
adc
movs
xor
and
mov
dec
push
push
retf
ret
adc
mov
(bad)
clc
add
call
xlat
cmps
addr16
sbb
mov
mov
arpl
sbb
popf
xchg
xchg
push
or
(bad)
into
add
loope
pop
and
sbb
je
push
cmp
mov
ret
sbb
movs
xor
inc
into
mov
add
add
mov
push
jo
sbb
inc
dec
ret
mov
ret
int
jne
dec
mov
sub
cmp
enter
or
loop
mov
and
xchg
test
je
mov
or
ins
jmp
and
fcom
pop
rcl
jno
sbb
or
movs
xchg
push
pop
mov
xchg
mov
or
push
pop
in
nop
fcomp
and
xchg
ds
mov
cmp
jb
jmp
pop
dec
mov
fadd
dec
jmp
cmp
pop
jmp
inc
daa
ins
shl
stc
jnp
mov
xlat
xchg
test
cmp
or
movs
lods
lods
cmp
sbb
sbb
cmp
cmp
test
sbb
pop
mov
add
add
dec
fwait
movs
cmp
and
xchg
push
push
ficomp
cmp
je
push
sub
rcr
and
pop
jne
sbb
aad
enter
and
es
or
pop
xchg
and
dec
sbb
rol
mov
inc
xchg
push
dec
dec
xchg
xor
mov
xchg
cs
adc
xor
(bad)
addr16
add
and
imul
int3
sub
in
sub
in
cmps
imul
dec
ja
pop
daa
cmp
mov
fadd
cdq
or
or
pop
repnz
pop
sub
aas
xchg
xchg
es
in
inc
pop
pop
aas
push
es
adc
popa
dec
imul
adc
ret
push
jb
pop
inc
pop
push
inc
add
test
adc
lahf
push
ins
gs
pop
inc
push
push
push
or
rol
ja
xor
dec
movs
add
ins
mov
jg
mov
or
pop
pop
sbb
fadd
sbb
popa
loop
sbb
cld
pop
inc
dec
xchg
dec
pushf
sub
jbe
aad
pop
and
and
inc
in
leave
pop
enter
ins
xor
es
or
rol
xchg
dec
aam
pop
mov
hlt
jb
cs
int3
jl
push
in
ins
nop
sbb
pop
cmps
jl
pop
mov
jl
sbb
mov
xor
pop
mov
clc
pop
xchg
push
add
fstp
retf
aad
pop
jg
pop
les
add
ret
out
sub
sub
test
cmp
cmps
add
aad
pop
adc
push
jno
and
fs
xchg
cmp
ret
push
and
into
in
jnp
mov
push
mov
out
das
push
das
arpl
xchg
mov
pop
out
cs
leave
stos
lods
test
rcl
push
jl
loope
loop
ret
mov
and
mov
inc
and
cmc
or
inc
(bad)
sub
push
adc
xor
add
xor
push
xchg
jmp
out
call
outs
adc
xor
loope
in
fwait
xchg
xlat
add
cmps
test
(bad)
dec
or
dec
retf
xor
push
push
sbb
nop
push
fiadd
cs
(bad)
nop
imul
aad
lods
shr
inc
jb
nop
aaa
ds
sbb
out
clc
sub
dec
xchg
idiv
shl
push
mov
clc
push
div
sbb
add
sar
(bad)
(bad)
or
xchg
jb
cmp
jl
nop
retf
int3
enter
mov
mov
add
(bad)
icebp
std
sbb
push
out
jp
jns
jl
inc
dec
jle
js
add
fiadd
retf
movs
add
and
add
push
add
xchg
mov
jmp
push
add
fmul
push
jg
in
xchg
sub
push
jmp
mov
xchg
cmp
jne
mov
je
add
mov
jns
add
test
xchg
mov
jmp
or
sbb
mov
sbb
mov
add
in
adc
and
push
in
fs
retf
dec
add
push
inc
mov
shr
fisttp
add
rcl
js
or
inc
mov
shl
mov
into
js
cmps
cmp
enter
jns
lock
out
pop
test
jno
gs
mov
inc
mov
inc
pushf
call
cmp
test
mov
movs
cwde
pushf
inc
mov
les
icebp
xchg
xchg
lahf
retw
mov
ret
xchg
pop
inc
and
xor
add
je
mov
std
or
and
loopne
aam
mov
cmc
push
cmp
mov
jp
adc
aaa
fsub
sti
add
in
push
enter
push
push
adc
cmps
dec
push
xor
xchg
retf
stc
or
pop
xor
pop
nop
jns
and
nop
cdq
inc
cmps
ror
or
pop
push
cmp
ja
cwde
jbe
repnz
pop
and
mov
push
es
je
sub
sbb
xchg
data16
push
or
test
adc
mov
adc
fild
fwait
pop
cld
and
cwde
cwde
sub
lock
or
gs
pop
dec
add
test
fcomip
sub
sti
pop
add
(bad)
push
sub
dec
sbb
xchg
mov
cmovne
add
(bad)
mov
cmps
loop
or
or
ja
adc
inc
or
or
pop
ficomp
ins
mov
cmp
inc
imul
mov
das
sub
int
xchg
xchg
mov
fimul
dec
pop
or
fs
test
xchg
sbb
mov
push
loopne
xchg
and
cmp
mov
add
jne
les
add
push
xor
adc
nop
jmp
imul
inc
addr16
cmps
push
sti
mov
aas
pop
lock
les
jnp
inc
jmp
cmp
add
push
dec
sub
jbe
inc
or
in
xlat
pop
test
add
push
aam
call
and
sub
jbe
lock
retf
ja
sub
mov
ret
mov
sub
push
mov
pusha
inc
or
cmp
inc
dec
sbb
sub
data16
add
cmp
mov
inc
adc
movs
or
mov
sbb
cs
adc
sti
ss
mov
xchg
aam
push
or
fstp
ret
adc
das
or
add
jne
inc
test
sahf
xchg
retf
push
sbb
sbb
xor
cmp
or
pusha
sub
mov
mov
ret
and
add
sub
mov
xchg
xor
cmp
pop
or
dec
mov
sub
push
and
inc
xchg
inc
loop
cdq
xchg
pop
jae
icebp
pop
lods
xchg
xchg
cdq
scas
push
pop
sbb
aam
sbb
sbb
sbb
xchg
push
scas
mov
inc
xchg
xor
or
mov
cmp
mov
je
inc
cs
cmp
push
lahf
(bad)
pop
add
pop
test
cmp
inc
or
cmps
cmp
pop
mov
sbb
xor
rcr
mov
rol
add
adc
aaa
push
push
clc
add
jle
sub
inc
out
lods
jmp
in
mov
sub
ret
inc
stos
mov
cmp
cmps
or
inc
out
hlt
jno
div
xchg
aaa
xchg
or
mov
and
or
jmp
popa
and
dec
and
sbb
or
sbb
sub
aaa
sbb
jmp
(bad)
push
jnp
fcom
fdiv
jmp
inc
(bad)
lods
fadd
pop
and
cdq
fdivr
rcl
movs
ror
fadd
sub
cld
rcr
add
xor
mov
not
add
lock
mov
cvttps2pi
fcom
mov
sub
rol
call
nop
cmp
imul
ss
fs
mov
add
shl
cmps
jns
and
mov
sbb
push
cs
add
adc
shl
add
or
fild
sub
in
imul
cmps
xchg
movs
xchg
test
and
xlat
push
fsub
cdq
pop
aam
xor
and
es
std
aam
rol
outs
push
into
and
(bad)
pop
pop
repz
movs
leave
ret
and
int3
fld
(bad)
and
adc
sbb
xchg
xchg
sbb
pusha
rcr
(bad)
xchg
mov
(bad)
dec
push
push
push
mov
nop
mov
outs
jne
in
pop
dec
outs
cs
aam
push
test
sub
shr
xor
inc
mov
ja
jne
add
cmp
push
in
cld
mov
wbinvd
inc
and
(bad)
cmps
sbb
inc
pop
pop
pop
or
mov
xor
mov
and
push
shr
fst
lea
add
push
cdq
js
loopne
jge
addr16
out
and
mov
jae
mov
loop
xlat
mov
and
clc
stc
pop
sar
mov
inc
call
call
fwait
pop
das
and
fld
clc
div
jo
gs
cdq
ror
and
adc
mov
sahf
mov
lea
xchg
add
cmp
mov
inc
sbb
add
sbb
ret
inc
xchg
xor
or
sbb
je
adc
in
hlt
das
cmps
pusha
les
or
mov
mov
icebp
ins
or
xlat
mov
sbb
or
pop
pop
adc
popa
push
mov
cmps
and
adc
and
sbb
pusha
dec
sbb
adc
or
add
ds
lods
js
pop
fimul
mov
inc
or
pop
mov
xchg
xor
or
aam
and
imul
cmps
add
push
mov
iret
lods
inc
ret
ror
call
dec
out
repnz
sbb
mov
xor
xor
sbb
xor
and
push
cmp
xchg
and
lods
enter
stc
sub
enter
outs
or
or
mov
test
xor
in
and
inc
dec
repnz
mov
pop
sub
sub
jo
pop
cmps
add
adc
cs
mov
(bad)
pusha
popa
add
add
mov
je
pop
jmp
sub
or
fs
add
mov
movs
add
jmp
sbb
push
fcmovne
fldcw
lods
mov
push
jnp
dec
ret
data16
mov
mov
(bad)
dec
lea
in
sbb
hlt
nop
inc
xchg
and
imul
xor
mov
sbb
hlt
hlt
jns
dec
mov
dec
push
mov
loop
jge
and
repnz
mov
push
or
movs
movs
mov
xor
pop
jno
aaa
pushf
lea
push
xlat
jo
lock
or
and
sbb
mov
push
gs
enter
pop
lea
data16
hlt
test
sbb
adc
(bad)
les
js
test
(bad)
push
xchg
push
aad
inc
mov
dec
push
or
adc
and
icebp
adc
push
add
inc
jp
or
ins
shr
fnstenv
adc
cmps
pop
push
sbb
pop
adc
cmp
inc
enter
xchg
lods
mov
mov
add
adc
add
pop
enter
pusha
shl
xor
jno
dec
rcr
mov
sbb
repz
inc
mov
add
sahf
aaa
mov
dec
add
xor
mov
hlt
imul
mov
fdiv
jnp
mov
or
dec
and
push
sti
adc
cmp
xor
mov
add
mov
ins
cmp
add
push
or
repnz
in
es
adc
adc
nop
movs
add
ret
sbb
push
inc
arpl
inc
psubusb
adc
cmp
int3
ja
cmp
(bad)
lock
in
in
mov
jb
call
dec
or
mov
(bad)
sub
dec
arpl
add
pusha
das
or
es
xlat
and
jg
cmp
mov
sbb
nop
popa
xor
aas
xchg
lods
dec
sbb
arpl
cwde
sbb
scas
inc
xor
add
sub
popa
mov
fmul
and
sbb
sbb
adc
pop
or
lahf
xchg
or
dec
nop
shr
cmp
xor
ret
xchg
les
pop
shl
sub
dec
and
pop
out
rol
or
jp
add
fmul
xchg
popa
test
inc
mov
loopne
shr
xchg
sub
popa
test
add
test
mov
push
(bad)
loopne
fbstp
fistp
dec
popf
ins
sbb
fist
jnp
add
in
mov
mov
ins
ret
call
inc
or
or
xchg
and
add
pushf
outs
rcr
mov
sahf
adc
add
mov
inc
fmul
ins
movs
push
mov
mov
aaa
lds
mov
jle
loopne
mov
hlt
sbb
sahf
fmul
fwait
pop
cmp
stc
nop
and
bswap
(bad)
sahf
mov
push
sbb
bound
or
pushf
jnp
xchg
add
sbb
adc
setg
rol
sub
add
sbb
push
xor
add
adc
xor
lods
push
shl
pop
jo
xor
or
das
out
pop
and
jns
jmp
lods
and
mov
popf
fdivr
jmp
mov
inc
mov
add
daa
jmp
lds
lods
push
jo
adc
bound
add
ret
mov
mov
and
sub
or
lock
das
adc
jp
push
jb
push
xor
adc
ficom
xchg
lea
adc
xor
xor
bound
jge
out
and
lea
dec
stos
dec
bound
push
inc
pop
cs
jge
or
cmp
rol
cwde
movs
and
jmp
or
adc
scas
adc
cmp
inc
jmp
add
cmp
addr16
add
cli
clc
cmp
fnstenv
sub
pop
sbb
ja
add
mov
mov
and
outs
(bad)
mov
dec
inc
dec
jecxz
xor
ret
cmps
out
xor
and
cmp
and
cmp
pop
aam
xor
and
mov
sahf
push
jg
or
xor
inc
mov
mov
or
inc
cmp
mov
mov
xchg
stc
addr16
inc
mov
inc
sub
jae
ret
ret
xchg
imul
lock
add
cmp
out
popf
ds
daa
or
mov
sub
inc
rcr
nop
push
into
pop
mov
inc
mov
lea
je
jle
retf
cmp
push
xor
ror
and
sbb
cmp
jae
lea
mov
cmp
sub
adc
call
mov
jge
dec
cmp
adc
addr16
adc
push
xchg
jo
iret
fsubr
add
jmp
sub
xchg
cld
(bad)
and
ds
gs
xor
dec
push
cmp
xor
push
mov
and
add
and
rcl
(bad)
pop
jo
add
dec
dec
repz
shl
mov
push
lock
adc
inc
nop
inc
ficom
(bad)
rol
add
push
movs
mov
jl
adc
xor
pusha
enter
jge
gs
dec
add
ins
aam
and
and
xor
jecxz
addr16
dec
add
fdiv
adc
jbe
retf
int3
loope
les
test
pop
scas
cmp
inc
adc
inc
push
out
inc
cmc
sti
into
repz
push
pop
sbb
xchg
out
push
push
aaa
ret
mov
jb
pop
cs
inc
inc
lods
outs
mov
xchg
test
shl
(bad)
mov
inc
hlt
add
(bad)
int
dec
rol
sbb
push
addr16
adc
popf
imul
and
mov
xchg
mov
or
adc
(bad)
xchg
nop
aam
test
sbb
jae
cli
adc
add
rcr
jo
push
adc
popf
xor
push
sbb
dec
mov
mov
mov
(bad)
push
adc
imul
pop
adc
daa
fs
aam
and
or
fcmovb
dec
(bad)
and
and
inc
cmps
fstp
xor
fdiv
cmp
cdq
ror
popa
mov
or
mov
add
add
sub
out
add
test
cdq
pop
enter
mov
popa
sub
ret
test
aas
or
jg
leave
sub
test
addr16
js
mov
scas
div
adc
int
enter
sbb
push
and
cmc
sbb
cmp
inc
xchg
loop
sbb
or
mov
mov
xchg
mov
rol
pop
or
sbb
and
add
cmp
push
test
add
push
gs
test
pop
push
push
dec
loopne
jmp
jnp
add
sub
movs
inc
add
mov
cmovb
sub
stos
sbb
jmp
sbb
or
inc
and
cs
and
pushf
sbb
sub
xchg
ret
jmp
xchg
xor
push
fsub
pushf
addr16
arpl
or
aaa
ret
jno
add
xchg
gs
cmp
test
and
xor
outs
jmp
mov
push
add
mov
aas
fistp
mov
fisttp
test
or
test
pop
dec
jnp
or
jmp
mov
xchg
(bad)
xor
push
enter
inc
repnz
add
sbb
mov
jnp
retf
add
jae
test
xchg
add
jl
movs
pop
sar
retf
or
xor
add
movs
(bad)
int
push
push
adc
mov
je
fcomp
sbb
scas
stos
mov
sahf
xchg
mov
cmp
div
cmp
mov
pop
jnp
mov
add
pop
enter
lock
jo
pusha
mov
fwait
and
ficomp
ror
add
mov
das
xor
ret
or
enter
jle
xchg
sbb
retf
test
les
jg
test
ja
shl
add
jb
sbb
xchg
je
in
sub
fsubr
jmp
add
adc
pop
jo
xchg
inc
fsubr
pushf
dec
jb
shl
cwde
xchg
cmps
pop
pop
rol
inc
fcomp
data16
xchg
adc
cmps
jo
mov
or
(bad)
xor
sbb
in
xchg
or
mov
arpl
inc
out
push
adc
adc
mov
mov
sub
jne
add
or
add
jmp
int
and
les
daa
mov
sbb
mul
dec
scas
jne
xor
lods
jmp
cmp
or
iret
nop
mov
add
xchg
mov
xchg
es
mov
mov
nop
scas
xchg
push
xchg
inc
popf
nop
xchg
mov
fdiv
cld
jo
or
sub
push
mov
push
pop
es
stc
sahf
fs
mov
sbb
movs
add
das
pop
xchg
xor
dec
mov
movs
pusha
push
push
ds
xchg
dec
dec
cs
sbb
xchg
mov
jecxz
lock
call
push
push
shl
ror
sbb
je
mov
mov
sbb
loope
popa
icebp
imul
sbb
sbb
and
sbb
sar
sub
rol
inc
loope
and
add
pop
enter
dec
pop
in
les
inc
fsubr
mov
inc
fnstenv
and
cwde
push
xor
pop
dec
cmps
dec
jae
push
je
xchg
shl
mov
fnsave
adc
sbb
or
addr16
xor
cmp
sbb
cwde
or
mov
sbb
pop
and
pushf
or
test
jle
int3
fimul
inc
add
cmp
popa
cmps
or
sub
sub
int3
add
ret
pusha
pop
sbb
and
and
pop
add
mov
sbb
or
loope
adc
inc
xor
add
dec
sub
mov
ror
mov
mov
and
or
ins
test
inc
repz
xchg
sub
fwait
cli
enter
jl
xor
(bad)
loope
in
stc
lock
dec
push
pop
dec
and
or
add
vpmacsww
lea
push
inc
pop
mov
push
sub
sbb
push
fs
fadd
imul
mov
jno
movs
lock
adc
and
xchg
dec
sbb
arpl
mov
jo
and
mov
scas
and
nop
push
rcl
mov
adc
or
dec
inc
mov
ins
lods
fs
data16
mov
adc
adc
xchg
mov
nop
or
je
stos
ins
inc
add
shl
xchg
in
xchg
mov
nop
call
clc
nop
aas
jbe
sub
mov
inc
push
mov
push
xchg
loop
cwde
test
mov
cmp
mov
dec
push
std
dec
dec
xor
mov
or
loopne
xchg
jmp
in
mov
div
add
int3
inc
and
push
mov
or
or
inc
scas
push
or
not
add
sbb
jb
xchg
das
or
push
mov
push
push
(bad)
dec
jmp
ret
push
jmp
or
push
jne
pop
mov
retf
bound
call
sbb
imul
jp
jmp
std
jmp
cmps
rcr
repnz
cmp
or
pop
push
cmp
cmp
pop
pop
pop
pop
rcl
dec
sti
and
(bad)
jg
sbb
test
imul
or
mov
dec
cmp
inc
nop
dec
sbb
(bad)
or
cmp
or
add
retf
inc
jl
je
bnd
dec
stos
pusha
sub
mov
in
inc
adc
cmp
ja
mov
(bad)
sub
jge
xor
or
out
add
xor
or
xor
xor
jno
call
rol
repnz
or
pop
adc
int3
adc
and
jmp
push
sbb
mov
add
add
xor
movs
jmp
enter
test
dec
enter
nop
les
xor
inc
mov
pushw
jp
popf
imul
sbb
rol
cmps
fs
ins
inc
dec
shl
out
mov
push
imul
push
loopne
repz
pop
pusha
jne
ins
aaa
icebp
inc
add
add
pop
lock
jns
movs
sbb
xor
xchg
adc
or
add
or
je
or
test
and
adc
adc
fnstcw
add
cwde
ret
and
pop
xor
and
sbb
cmp
cmp
or
cld
rcr
xor
ret
je
in
je
cmp
adc
jl
or
test
inc
sub
xor
add
dec
jo
adc
lock
cmp
cmp
push
aam
imul
cmp
lds
inc
test
das
pop
adc
(bad)
fadd
fistp
push
jne
add
xor
xchg
adc
and
mov
inc
add
cmp
addr16
xchg
mov
in
sub
dec
int
push
sbb
stos
cpuid
je
inc
or
or
xchg
rcpps
push
inc
retf
dec
or
xor
scas
inc
adc
pop
imul
mov
jne
daa
inc
in
jmp
xchg
inc
test
movs
lock
(bad)
mov
dec
add
arpl
or
add
push
adc
pop
jnp
pop
jmp
int
inc
jmp
test
mov
and
cdq
call
lock
sbb
adc
adc
add
xchg
cmp
cmps
test
cmps
test
js
mov
push
or
mov
cmp
pusha
and
add
push
sub
leave
mov
lea
data16
push
inc
pop
dec
fbld
sub
std
sub
mov
xchg
aad
and
xor
pop
shl
jmp
xchg
fs
push
add
or
fsub
xchg
daa
ror
or
jle
je
xlat
push
or
add
test
lea
aam
daa
sbb
nop
test
cmp
xchg
sub
adc
aam
or
mov
push
pusha
mov
push
fild
fbld
repz
sub
lahf
nop
xor
add
inc
or
stos
jp
leave
mov
rcr
mov
or
dec
mov
pop
outs
mov
cmp
mov
add
adc
mov
jae
and
imul
test
and
movs
adc
xor
pop
outs
movs
pop
push
(bad)
popa
test
ret
mov
or
xor
hlt
push
fiadd
dec
mov
jmp
shl
aam
jmp
inc
add
test
mov
jnp
mov
or
shr
les
not
jno
test
aas
xlat
outs
cwde
add
jbe
sahf
ss
jne
dec
or
adc
push
sub
mov
jb
shl
es
dec
dec
inc
jp
xchg
push
je
xor
sub
mov
mov
xor
pop
add
pop
xlat
clc
push
push
pop
shl
sti
xor
nop
fs
push
int
cmp
pop
or
jbe
and
mov
and
popa
xor
sbb
stos
inc
int
sbb
mov
(bad)
das
adc
adc
push
and
sbb
das
adc
pop
ret
fsubr
in
add
inc
rcr
mov
inc
mov
out
pop
inc
mov
add
xchg
and
cdq
mov
faddp
push
dec
adc
xor
stc
jle
pop
js
jmp
mov
retf
add
dec
mov
xchg
jp
fimul
adc
inc
adc
retf
or
cmp
mov
pop
loope
cld
adc
push
and
dec
into
pop
or
xchg
je
sbb
xor
lods
xchg
inc
cs
test
jo
pop
jl
ret
sub
mov
adc
ds
retf
adc
jmp
je
or
fwait
jbe
pushf
stos
ins
shr
or
sub
sbb
and
and
imul
sbb
xor
adc
dec
lock
outs
jecxz
aas
sbb
lea
add
mov
cmp
in
inc
inc
and
add
jmp
mov
js
pop
push
mov
sbb
jg
and
add
popa
adc
adc
add
add
jmp
out
cmp
cmp
iret
mov
or
cmp
std
push
pop
ret
aas
push
or
sub
adc
outs
in
xchg
and
push
mov
in
outs
pop
das
xor
fst
or
retf
sbb
ja
xchg
sbb
loope
leave
cmp
out
sahf
and
test
arpl
jmp
xchg
or
das
pop
gs
push
test
gs
or
or
outs
fbld
gs
sbb
nop
repz
sti
pop
jne
xlat
and
xchg
xchg
rcl
out
in
(bad)
jmp
pop
(bad)
xor
push
or
and
daa
aad
hlt
(bad)
jle
lock
mov
sub
and
jle
data16
or
cmp
dec
iret
shl
jg
cs
or
push
mov
test
int3
dec
dec
xor
cmps
add
in
in
mov
ja
or
dec
or
pushf
adc
in
add
sti
xor
shr
outs
jmp
inc
adc
dec
add
hlt
add
push
cmp
inc
add
loopne
jmp
mov
adc
jae
adc
mov
fcom
jmp
sbb
xor
jns
sub
or
ds
lock
sbb
pop
mov
loope
mov
add
sbb
or
adc
adc
mov
adc
xor
sti
mov
push
mov
(bad)
adc
mov
leave
retf
push
xchg
add
imul
mov
pop
dec
enter
pushf
add
push
mov
or
push
(bad)
ror
out
dec
pcmpgtb
add
enter
add
pop
and
push
sbb
push
jbe
in
icebp
mov
out
and
jo
idiv
ins
loopne
inc
xchg
not
add
pusha
add
stos
inc
stos
add
push
mov
pop
jno
aas
aas
(bad)
mov
fmul
inc
adc
sbb
ss
sbb
jae
pop
loopne
add
sub
cwde
outs
pop
and
xchg
cmps
imul
or
push
dec
sub
ja
jns
rol
mov
lock
cmp
cs
xchg
dec
inc
add
loopne
push
ficomp
push
shl
pop
add
push
dec
dec
ror
pop
add
mov
inc
add
cmp
sbb
loopne
and
sbb
push
pusha
push
sub
test
inc
nop
enter
mov
pop
mov
push
pop
mov
adc
movs
dec
mov
iret
sti
dec
add
and
les
push
imul
cmp
imul
sub
jmp
repz
mov
push
add
lock
cmps
add
sub
cs
outs
adc
jae
or
adc
sbb
inc
xlat
rcl
pop
or
add
pop
ret
rcl
imul
dec
data16
mov
imul
dec
mov
fstp
and
imul
sbb
adc
les
sbb
or
dec
sbb
push
push
mov
shr
adc
(bad)
xchg
adc
lea
cmp
sub
fnsave
jmp
iret
push
sbb
xchg
mov
hlt
neg
mov
and
neg
mov
lea
aaa
in
bound
xlat
dec
loope
aam
sbb
inc
inc
add
or
shr
or
add
mov
adc
add
loope
(bad)
mov
or
and
mov
or
add
inc
jo
jmp
and
or
xor
lods
loope
enter
pop
adc
jb
add
stos
add
popa
out
or
outs
test
or
fadd
ja
push
or
test
jbe
pop
(bad)
sub
jns
outs
pop
cmp
mov
xchg
sub
pop
inc
ins
or
mov
adc
add
mov
(bad)
jns
adc
enter
shr
outs
movs
push
mov
ret
pop
ins
arpl
jne
lods
add
cmp
aaa
nop
into
adc
out
mov
cwde
js
push
dec
adc
retf
div
stc
add
popa
bound
cmps
gs
and
les
ins
push
xor
je
pop
pop
jae
fmul
sbb
addr16
add
imul
cwde
jl
add
jbe
sbb
in
inc
xor
sar
jns
sbb
dec
or
loopne
inc
lods
ficomp
rcr
xchg
mov
arpl
adc
bound
pop
push
ins
(bad)
adc
sbb
jl
mov
movs
jmp
into
popf
aaa
and
retf
cmp
mov
mov
sub
pushf
mov
mov
cli
dec
clc
jg
inc
and
or
aaa
nop
push
inc
sub
adc
test
xchg
add
stos
xchg
jp
movs
arpl
inc
je
lea
xor
out
adc
dec
inc
stos
and
mov
push
hlt
mov
(bad)
mov
aas
pusha
or
xchg
movs
add
sar
fwait
adc
dec
add
sub
dec
(bad)
xchg
cld
adc
ret
cmc
push
mov
or
stc
inc
dec
rcl
mov
ret
imul
mov
sbb
push
mov
test
jg
mov
fidivr
xlat
bound
mov
aaa
sbb
ror
inc
xchg
(bad)
arpl
push
sar
sbb
ja
sub
cmp
stos
pop
add
scas
dec
adc
dec
jns
imul
jne
sbb
or
inc
and
daa
mov
mov
xor
fmul
and
xor
xor
movs
push
ret
nop
add
or
ins
and
adc
dec
sbb
shl
add
fs
mov
push
xchg
sti
mov
aaa
lods
pop
fs
push
fcmove
xchg
dec
fcomp
(bad)
loopne
imul
nop
jbe
pop
cwde
fadd
dec
sub
les
add
loopne
(bad)
retf
push
lock
mov
test
cld
and
and
inc
and
push
push
inc
mov
fucomp
fadd
or
mov
aas
pop
or
and
call
cmp
cmp
sbb
xor
mov
adc
mov
adc
mov
sahf
jmp
test
jp
icebp
sbb
mov
sub
adc
cld
bound
add
in
add
pop
pop
add
ins
pop
add
inc
sbb
clc
or
or
outs
inc
(bad)
pop
ror
movs
inc
sbb
pop
mov
mov
or
rol
xchg
mov
and
fld
rcr
rol
ss
push
xlat
pop
call
imul
lds
add
in
mov
adc
xchg
pop
fistp
jae
cmp
(bad)
and
je
ret
cmp
pop
and
inc
ret
mov
scas
sub
sbb
addr16
pop
in
dec
mov
mov
xor
call
lahf
cmp
stos
or
fiadd
add
outs
or
cwde
sbb
lea
loope
stos
jns
add
icebp
add
mov
add
and
push
pusha
inc
dec
xchg
int
add
fadd
jmp
xchg
int
loop
stos
nop
sahf
mov
or
sbb
inc
pop
ins
jns
out
adc
out
clc
or
and
repz
dec
pop
push
mov
scas
pop
jnp
add
imul
sbb
or
xchg
pop
leave
xchg
or
leave
xchg
pop
leave
push
movups
pop
adc
adc
adc
push
pop
sbb
mov
and
fs
xchg
inc
sbb
push
sbb
fs
add
add
xchg
inc
inc
and
in
xor
sbb
xor
jmp
or
inc
pop
stos
push
add
add
add
into
cmp
push
das
inc
mov
push
test
xor
or
inc
mov
rol
retf
push
fsub
mov
shl
sbb
out
pop
push
cld
ds
pusha
add
mov
adc
adc
push
rcr
leave
fsub
jg
and
inc
inc
loopne
jecxz
inc
out
dec
xchg
aad
cmp
(bad)
rol
mov
xchg
shr
adc
adc
jle
add
and
sub
xor
add
xchg
shr
inc
inc
mov
loopne
dec
xchg
les
jno
add
add
test
ficomp
ja
call
adc
cmp
stc
pop
sbb
add
mov
add
mov
sbb
jbe
in
sub
pop
inc
dec
movs
dec
je
inc
push
rol
pop
push
ret
sbb
fcom
jne
into
stc
dec
or
inc
out
sbb
fidivr
push
adc
xor
sti
stc
inc
je
mov
push
test
mov
push
or
jge
nop
ss
cmc
mov
add
xor
test
mov
out
xlat
xchg
test
jle
sub
ret
add
mov
rol
pop
test
ficom
jge
adc
sub
mov
push
dec
inc
xchg
jo
jo
pop
jbe
add
xlat
out
cwde
mov
jo
pop
mov
jl
dec
add
mov
or
jp
lods
sti
dec
dec
or
clc
push
xchg
arpl
mov
sub
ret
sbb
je
fsubr
loop
mov
pop
xchg
neg
xor
mov
or
cli
test
mov
inc
popf
bound
push
and
cmp
add
in
movs
push
or
dec
and
add
ret
(bad)
nop
xchg
enter
mov
push
or
jmp
xor
test
jnp
scas
(bad)
and
jmp
scas
push
addr16
push
push
enter
sub
int3
movs
lea
add
xor
outs
inc
xchg
inc
pusha
fbstp
rcr
jmp
push
int3
jp
retf
mov
cld
push
or
jne
cmp
mov
add
sbb
or
outs
fiadd
adc
test
rcr
sbb
push
or
and
xchg
sahf
push
add
mov
inc
inc
push
sbb
adc
lock
hlt
cmps
push
pop
outs
sbb
jo
sbb
test
sti
fdivr
inc
dec
sub
jae
dec
pop
jmp
dec
inc
adc
ss
and
cmp
cmp
and
add
in
or
aas
mov
aam
ror
add
fwait
scas
call
lea
jp
and
inc
mov
aas
js
or
push
inc
inc
sub
inc
outs
sbb
jno
sub
mov
mov
inc
test
(bad)
add
test
mov
and
js
mov
mov
outs
jno
mov
push
lock
xor
ins
push
and
(bad)
push
sar
sbb
pusha
add
mov
mov
adc
mov
addr16
shl
and
jg
xchg
mov
test
mov
pop
cmp
xchg
push
dec
lock
jmp
adc
mov
in
inc
adc
cmp
lods
ja
mov
aam
mov
xchg
xchg
add
fiadd
adc
sub
into
adc
mov
sub
adc
pushaw
push
ins
dec
and
and
and
xchg
(bad)
mov
dec
call
cmp
xchg
cwde
test
repz
or
call
popf
das
enter
mov
mov
push
test
inc
add
adc
dec
mov
aam
jo
mov
xchg
inc
or
out
pop
movs
jl
push
jge
mov
cmc
call
cld
jge
cmp
xchg
imul
lock
mov
call
add
cmp
test
sub
inc
xchg
in
sub
pop
mov
je
addr16
int3
ins
jecxz
fldenv
in
sbb
sbb
fwait
pop
xchg
and
outs
pop
shl
out
cwde
test
mov
lods
inc
popa
test
pop
jb
sub
push
push
outs
push
or
aaa
and
rcl
cwde
adc
inc
fs
cmp
mov
add
and
mov
push
jp
shr
or
cmp
adc
test
lea
dec
dec
js
or
pop
pop
or
mov
test
or
and
adc
sbb
push
inc
popf
fsubr
fadd
mov
daa
cmp
cdq
mov
ret
cs
les
add
xor
imul
sti
movs
fstp
nop
sbb
cmp
sti
and
sub
(bad)
adc
or
repz
or
push
or
call
xor
ss
and
movs
push
xchg
sbb
jne
add
xor
push
inc
add
add
cmp
inc
and
js
cmp
add
mov
rcl
pop
push
pop
mov
enter
or
inc
mov
js
dec
nop
add
inc
pusha
in
ficom
(bad)
outs
imul
add
movs
ins
inc
retf
mov
dec
or
add
enter
inc
or
xchg
movs
xchg
sbb
int3
push
outs
adc
cmc
lods
and
(bad)
sub
push
sub
inc
mov
pop
sub
xchg
inc
xchg
and
into
sub
add
push
sbb
movs
in
daa
je
mov
hlt
popa
inc
dec
outs
mov
in
sub
xor
cwde
mov
adc
or
mov
xchg
enter
aad
pushf
add
ret
pop
rol
rcl
push
dec
fbld
int
xlat
xchg
or
and
jne
mov
dec
add
stc
sub
pop
enter
and
add
enter
push
rcl
aaa
aaa
icebp
xor
ror
sub
cmp
xchg
fs
int3
add
mov
xchg
push
inc
sahf
movs
adc
mov
fdivr
fs
fild
ds
mov
jo
pusha
rol
les
leave
cmp
add
fsubr
movs
les
pop
sbb
lahf
sbb
fadd
push
sub
jge
jae
adc
test
mov
adc
popa
lock
push
jle
sbb
pop
xor
sub
shl
jne
pop
pop
pop
or
jnp
adc
js
cmp
popf
shl
pop
sub
pusha
push
loope
add
pop
adc
je
stos
or
sub
pusha
push
fsub
sbb
lea
and
or
mov
jg
mov
lea
mov
add
jg
movs
sub
jecxz
neg
lock
pop
xor
mov
mov
jae
repnz
out
mov
je
xlat
cmp
popf
popf
jmp
or
push
jecxz
adc
out
jmp
cmp
jmp
adc
dec
aas
and
inc
pop
imul
fst
movs
push
mov
dec
sbb
ins
adc
xor
cwde
pop
and
adc
sbb
pop
and
adc
push
fist
jl
cmp
ins
or
sbb
test
(bad)
popa
ror
cmps
sbb
jle
pop
or
stos
jo
mov
into
jp
or
push
sbb
dec
sub
test
sub
cmp
cmp
jmp
cld
xchg
or
dec
adc
loop
aas
lods
jne
enter
loopne
(bad)
cld
dec
nop
lock
pop
xor
aad
fld
jecxz
lods
in
push
add
sub
or
or
sub
or
pop
jo
int3
imul
mov
mov
pslld
mov
(bad)
pop
jns
fstp
mov
ss
aad
sbb
add
retf
push
icebp
hlt
cmp
pop
hlt
sbb
pop
inc
adc
or
mov
and
adc
xchg
sub
cld
push
pushf
xor
(bad)
bound
inc
or
inc
or
add
sub
adc
test
dec
xor
pop
cmp
in
cwde
jp
dec
retf
lods
mov
nop
pop
or
ins
mov
push
jne
sub
dec
jne
mov
push
push
lea
or
jmp
outs
and
add
lea
rol
scas
mov
imul
arpl
push
(bad)
int3
adc
dec
fidivr
in
jmp
cmp
dec
test
aam
leave
dec
daa
xor
inc
and
bt
fs
mov
and
leave
mov
rcl
les
loopne
mov
mov
dec
test
adc
or
fdiv
or
(bad)
sbb
dec
sbb
xchg
xchg
xchg
or
pop
and
mov
(bad)
xor
xchg
inc
ret
outs
ret
pop
add
pop
or
or
push
fldenv
cwde
fst
xchg
push
hlt
sbb
mov
out
mov
mov
scas
xchg
mov
lock
xor
mov
daa
inc
js
mov
mov
je
dec
inc
mov
jns
loop
movs
sub
inc
adc
daa
ins
jle
cwde
add
cdq
sub
mov
cwde
pop
add
fwait
add
sbb
popa
xor
add
pop
mov
add
pop
shl
loopne
lods
retf
jae
cwde
inc
sbb
xchg
mov
adc
jns
xchg
pop
jne
jmp
add
sub
add
je
xor
sub
adc
jge
xor
and
and
aas
fld
lods
popa
movs
and
mov
push
or
or
adc
jmp
sti
adc
arpl
clc
pop
sysenter
fiadd
test
inc
sub
mov
imul
into
sub
push
mov
xor
sbb
ss
sub
cmp
repz
sub
jo
add
loope
xor
push
xor
or
mov
or
es
out
jae
xchg
and
mov
dec
stos
mov
sbb
and
movs
mov
inc
in
inc
mov
int3
jns
mov
pushf
xchg
sub
inc
push
clc
clc
pop
jb
into
hlt
into
pop
cld
dec
ds
scas
movs
hlt
and
(bad)
xor
lahf
push
sbb
xchg
fcomp
mov
or
(bad)
call
into
dec
call
add
mov
loop
shl
or
add
addr16
and
clc
and
outs
push
cmp
or
imul
add
xor
add
leave
ja
inc
cmp
jne
ret
je
and
add
mov
pop
lock
je
inc
adc
xchg
xor
push
jnp
sub
(bad)
in
dec
adc
movs
push
or
rol
test
jecxz
es
fs
add
hlt
cdq
add
sub
cdq
mov
dec
movs
int3
test
and
pusha
arpl
arpl
xor
sub
bound
jmp
shl
add
fwait
mov
pop
adc
rcr
add
mov
cwde
add
sub
inc
inc
out
iret
and
sbb
xor
add
ins
pop
xor
adc
clc
mov
jb
mov
sbb
or
loopne
cli
sbb
loopne
sbb
xchg
pop
lods
je
or
sub
cwde
mov
and
add
mov
daa
rol
lds
inc
rcr
xor
push
(bad)
nop
mov
add
jmp
es
and
dec
iret
mov
mov
or
push
dec
inc
dec
fwait
imul
adc
pushf
addr16
pop
dec
std
mov
pop
pop
sbb
or
lock
push
push
out
sub
lods
das
fwait
and
cmp
and
mov
rcl
hlt
movsx
icebp
adc
dec
cmp
and
mov
xor
inc
fcmovnbe
in
dec
mov
jno
sub
push
mov
(bad)
adc
mov
sahf
pop
or
push
jg
movs
(bad)
adc
ret
mov
cdq
add
adc
or
movs
sbb
jns
sti
jle
mov
add
fcmovne
dec
in
mov
sub
cld
inc
xchg
sbb
jo
je
add
inc
mov
push
mov
or
js
movs
or
mov
or
(bad)
push
int
mov
test
test
call
ins
push
inc
cmps
test
shl
push
mov
sub
or
jmp
and
sub
fstp
test
and
iret
in
jle
adc
sbb
fpatan
xchg
or
add
inc
aam
das
inc
scas
cmp
xor
mov
jecxz
or
cwde
pop
xor
cmp
sub
sbb
lahf
nop
adc
cmp
and
popa
add
cmps
push
xchg
js
dec
jbe
pop
in
xchg
inc
sub
dec
jmp
repz
ss
jne
ror
xchg
or
or
scas
sub
add
mov
(bad)
dec
mov
jp
ret
je
xor
cs
es
outs
cmp
adc
fld
retf
xchg
xor
mov
xchg
inc
fcomp
xchg
add
jl
aaa
mov
popa
ins
xchg
or
xor
pop
push
enter
xchg
adc
imul
sub
inc
lock
add
ret
ret
xor
gs
xchg
bnd
jmp
sbb
fdiv
mov
xchg
cmc
mov
dec
adc
imul
xor
jecxz
cmp
xchg
jns
pop
les
xor
out
sbb
ret
xor
pop
inc
mov
lea
dec
sub
movs
xlat
sbb
cdq
push
jo
retf
adc
sub
inc
sbb
nop
sub
add
xchg
pop
ins
mov
mov
ins
adc
das
call
lods
gs
sahf
fistp
or
and
loopne
mov
vmrun
adc
retf
add
sub
dec
jmp
pop
add
popf
mov
inc
test
xchg
shl
push
pop
dec
add
shl
aam
loopne
retf
shr
mov
rcl
and
and
lea
push
ret
push
repnz
adc
dec
shl
leave
sub
dec
add
hlt
ss
jbe
push
xchg
ficomp
pop
pop
inc
adc
nop
loopne
imul
push
push
mov
mov
dec
(bad)
push
mov
sub
and
sbb
sub
add
and
loopne
dec
jbe
xchg
xchg
test
daa
push
inc
add
icebp
inc
stos
or
sbb
xchg
adc
pop
enter
bound
push
dec
je
xchg
jno
popf
outs
and
jne
mov
adc
cli
or
sub
add
mov
loopne
dec
sbb
and
fist
sub
adc
jp
std
pop
cmps
and
cmp
add
sbb
push
lock
push
sbb
add
push
dec
mov
or
xor
push
rol
cmp
cdq
jne
xchg
sub
sub
(bad)
std
fwait
adc
or
mov
fmul
lods
mov
jp
mov
mul
jne
fisubr
add
cdq
pop
sbb
or
sub
imul
sbb
add
push
fwait
ins
fst
lfs
or
dec
pop
sbb
lods
ds
int3
and
jmp
iret
ror
and
js
aas
and
lods
adc
jne
sbb
pop
imul
pop
xchg
mov
sbb
int
add
sbb
and
add
les
or
es
arpl
add
add
loopne
cmps
ins
pushf
and
inc
arpl
sub
test
sbb
add
and
(bad)
mov
and
aaa
xchg
jb
mov
and
nop
mov
push
rcr
retf
das
je
or
popf
add
jo
(bad)
in
call
and
push
pop
and
pop
addr16
cmp
pop
jecxz
test
and
push
xchg
xor
fs
push
cmp
sub
mov
inc
inc
dec
dec
nop
out
test
add
push
aas
clc
inc
inc
leave
clc
pop
sar
push
fist
jo
sub
aas
imul
jl
or
xchg
push
bswap
jp
hlt
jl
add
in
mov
lock
ret
aam
sub
lea
daa
sub
or
cmp
dec
mov
mov
in
jns
inc
lock
icebp
ret
ins
and
jo
cmp
dec
(bad)
sbb
sahf
fwait
test
sbb
es
sbb
push
or
mov
sub
scas
lock
push
push
xchg
mov
pusha
add
adc
cmp
add
add
dec
sub
adc
sbb
gs
adc
scas
inc
movs
pop
sar
mov
xchg
dec
data16
jecxz
and
cs
into
test
add
sbb
add
pop
les
mov
sar
cmps
je
aas
pop
(bad)
test
test
dec
sub
xchg
shr
repnz
dec
loopne
sub
xchg
mov
cmp
sbb
in
ins
and
sub
mov
cmp
mov
xchg
jb
xchg
xor
push
stc
fdiv
xor
or
xchg
add
sbb
and
fimul
cwde
add
fild
pop
mov
add
sbb
out
iret
sub
or
enter
dec
aam
or
ds
add
or
ror
int3
outs
js
rcl
(bad)
sbb
gs
and
jns
inc
jmp
mov
repnz
js
arpl
xor
push
daa
sbb
ret
mov
cmp
push
mov
mov
cmp
xchg
jb
add
fisubr
movs
fisttp
div
cdq
add
cmp
popa
jne
pop
pop
imul
int
sahf
rol
pop
jo
add
mov
add
push
mov
push
inc
(bad)
cmp
arpl
sbb
push
and
mov
ins
xor
and
lods
push
cwde
lods
(bad)
(bad)
inc
ret
ret
mov
enter
add
aaa
or
nop
xchg
in
into
mov
test
jge
cmp
mov
fiadd
icebp
test
xadd
pop
push
jmp
dec
bound
ins
test
cs
ins
mov
inc
or
add
iret
pop
mov
mov
xchg
jmp
or
add
add
pop
ins
leave
es
in
cmps
mov
pop
sbb
cmp
xchg
scas
dec
sub
mov
adc
(bad)
and
cmps
jbe
pop
adc
stc
inc
out
add
sbb
xor
in
scas
and
hlt
sbb
pop
push
mov
add
push
repz
int
std
adc
aam
rcr
jae
sbb
pop
fldcw
mov
mov
inc
pusha
cmp
pop
inc
dec
mov
mov
sbb
icebp
not
(bad)
dec
pushf
out
sub
cmp
and
pusha
jecxz
aad
pop
ret
not
or
sub
or
popa
lock
mov
sbb
int
cmp
or
mov
inc
cwde
xchg
or
cmps
sbb
sub
sti
cmp
shr
add
ins
xchg
fisttp
adc
dec
push
cmp
add
xor
xchg
fcmovnbe
adc
std
pushf
pop
mov
mov
or
jmpw
daa
sbb
inc
xchg
out
outs
in
test
add
in
xchg
(bad)
(bad)
add
sub
cmps
ins
bound
test
pop
call
imul
and
fistp
adc
sbb
scas
fld
add
jbe
and
and
sbb
ins
or
add
push
xor
jl
mov
(bad)
jg
or
ror
cmps
lods
sub
add
call
out
mov
ror
int3
into
ret
pop
lea
pop
aad
mov
imul
sub
dec
mov
enter
mov
cmp
mov
pop
mov
sbb
bound
pop
add
vphaddbw
or
dec
adc
out
inc
mov
mov
adc
mov
ret
jg
xchg
push
push
rol
mov
popf
test
test
mov
cwde
sub
in
sbb
or
lahf
popf
add
imul
push
add
test
int
fs
xchg
jbe
jno
jno
push
add
mov
cmp
add
jg
push
jo
and
push
movs
loopne
in
inc
pop
xor
jecxz
or
in
and
dec
sub
xor
or
add
inc
ret
pusha
movs
jne
or
daa
js
inc
or
jmp
cmp
(bad)
jbe
(bad)
sbb
iret
and
and
sub
mov
mov
nop
inc
add
push
test
cmps
push
call
push
sub
loop
ins
cwde
mov
mov
or
cdq
or
mov
sbb
sub
ret
mov
lock
nop
loopne
out
mov
je
inc
ror
adc
dec
scas
loopne
xor
data16
or
cmp
jns
add
sbb
inc
pop
add
test
fdiv
xor
hlt
or
ror
gs
mov
jmp
xchg
sbb
or
cmp
add
and
pushf
mov
push
xor
mov
test
ins
pusha
sub
jge
retf
sbb
icebp
out
push
inc
mov
wbinvd
dec
lahf
adc
xchg
push
xchg
aam
add
lods
mov
and
add
or
xchg
mov
push
out
scas
jae
dec
test
sbb
mov
pop
and
sbb
and
cmc
cld
(bad)
nop
lock
mov
cdq
cld
cmp
mov
in
pop
push
inc
(bad)
xchg
and
dec
cmp
xor
(bad)
jnp
ret
inc
sub
clc
sbb
mov
ret
mov
inc
mov
push
(bad)
add
pusha
sbb
xchg
inc
xor
clc
or
jno
xchg
gs
gs
mov
push
aam
dec
push
ds
sbb
dec
and
sub
mov
pop
out
jne
jg
jns
xchg
mov
call
push
sbb
xlat
aam
rcr
sbb
sbb
or
mov
or
fimul
push
mov
xchg
jge
add
ins
pop
sub
push
sub
enter
mov
cmp
mov
add
movs
cli
aam
sbb
or
ins
fcmovnbe
push
es
mov
add
rcl
cmps
js
pop
inc
cs
mov
(bad)
pop
aam
adc
jecxz
fwait
fs
push
bound
sbb
inc
adc
inc
int
add
and
gs
push
mov
enter
push
aas
add
push
jno
sbb
test
pop
jb
sub
push
push
clc
cwde
push
pop
mov
nop
mov
imul
push
(bad)
stos
adc
mov
imul
jb
xchg
jmp
stos
mov
pop
xor
inc
and
dec
gs
or
cmps
dec
rcl
(bad)
imul
call
or
xchg
pop
fild
std
ficomp
jbe
mov
mov
cmps
add
or
jnp
fild
jo
mov
test
mov
pop
or
sbb
(bad)
mov
loopne
enter
retf
retf
sub
rol
gs
ds
repz
cmp
add
je
(bad)
sbb
add
mov
mov
pop
xchg
xchg
cdq
rcr
aas
push
and
sub
sbb
mov
mov
inc
mov
mov
lods
jnp
outs
retf
daa
lods
adc
mov
repz
add
mov
mov
mov
and
arpl
enter
sbb
sbb
and
nop
xor
sbb
mov
add
mov
cwde
and
mov
sub
aam
ficomp
stos
mov
clc
and
or
(bad)
jbe
xor
adc
and
add
add
in
adc
mov
jmp
sub
sub
cmps
mov
ror
sbb
jg
xchg
aam
les
add
enter
js
retf
jo
add
xchg
mov
test
pop
in
pop
dec
push
push
xchg
cmp
sbb
adc
lea
sub
inc
shl
and
cs
or
cmp
sub
shl
pop
or
adc
pop
addr16
fsub
sub
and
xor
and
dec
bound
xchg
mov
sar
xchg
adc
mov
mov
ss
cmp
sbb
aas
in
sar
xor
mov
add
mov
retf
cmc
hlt
leave
jg
aas
inc
jmp
ins
sub
push
jnp
xor
inc
lds
cmp
xor
bound
hlt
ret
imul
sar
adc
or
dec
sbb
inc
jecxz
cld
dec
pop
xor
sub
pop
popa
in
push
and
dec
inc
out
mov
sbb
mov
jmp
adc
inc
movs
jmp
adc
test
xor
dec
jne
aad
stos
in
and
jg
mov
daa
and
push
jp
outs
dec
adc
or
shl
xor
dec
push
add
add
xchg
mov
xchg
cmp
(bad)
add
pop
mov
pop
sbb
dec
add
xor
retf
mov
inc
enter
in
dec
pop
mov
in
mov
xchg
mov
sub
test
mov
lahf
fistp
sub
dec
cmp
fmul
pop
retf
enter
cmp
mov
jp
retf
fnsave
jbe
jne
sub
adc
inc
rcl
or
pop
adc
add
test
pop
adc
adc
inc
je
push
mov
and
push
inc
cmps
es
pop
out
or
pop
popf
cwde
dec
xor
inc
pop
aaa
inc
and
and
aaa
(bad)
leave
or
js
adc
ror
or
movs
jbe
mov
popa
mov
add
add
fisttp
adc
mov
xor
pop
les
pop
pop
retf
mov
xor
mov
pop
adc
mov
retf
jb
cmp
ret
arpl
xor
nop
call
inc
sub
ret
mov
out
mov
adc
cs
data16
xlat
and
ret
mov
test
or
sbb
rol
gs
or
jp
add
dec
std
sbb
ja
adc
rep
cmc
or
adc
mov
mov
jl
iret
sbb
adc
pop
aad
mov
mov
cmp
call
sar
sbb
(bad)
and
adc
push
push
fadd
push
jae
imul
std
sbb
sub
push
shl
push
xchg
xor
cmp
and
or
sub
sbb
movs
xchg
sub
mov
mov
(bad)
add
or
inc
lahf
xchg
jne
inc
sbb
cs
jmp
lds
sbb
xor
inc
lea
xor
ins
test
or
add
sub
cwde
lock
push
popf
loop
mov
xor
popa
stos
mov
ror
test
xor
mov
xchg
pushf
pop
aam
addr16
or
outs
ss
push
add
push
leave
mov
daa
dec
int3
ins
int3
enter
xchg
ins
rol
adc
cmp
fldenv
loope
stc
or
add
pop
lea
daa
xor
push
push
add
pusha
iret
adc
push
nop
or
mov
sar
pop
cdq
mov
ins
jl
idiv
jne
ds
mov
mov
mov
retf
mov
test
adc
inc
push
mov
sub
sbb
test
and
cmp
adc
les
(bad)
and
fadd
sbb
ret
daa
test
(bad)
or
add
push
xchg
bound
scas
dec
pop
rol
call
push
dec
call
pop
mov
inc
add
jbe
hlt
int3
cld
or
dec
xchg
sub
mov
mov
movs
bound
stos
lods
mov
in
mov
lods
test
xchg
call
fbld
sbb
out
inc
xchg
rol
wbinvd
and
lds
leave
outs
and
jp
repnz
jl
xor
dec
jl
movs
sub
sub
and
lock
mov
clc
adc
cmp
imul
adc
js
je
aaa
mov
jmp
inc
pop
aam
adc
xor
aam
or
mov
int3
sbb
pop
rol
lahf
clc
xchg
or
pop
icebp
pusha
lods
scas
movs
push
movs
fidivr
mov
cmp
push
mov
pop
xchg
add
mov
dec
push
sub
popf
lock
inc
sub
es
xchg
push
sbb
xchg
xor
dec
add
cld
pop
pop
sbb
or
sti
xchg
fld
punpcklbw
scas
pop
stos
cmps
mov
add
mov
jmp
pop
pop
popa
and
test
jge
sbb
push
jmp
int3
sar
sub
lods
inc
push
inc
icebp
pop
cmp
cmp
push
pop
test
loopne
out
daa
push
sar
(bad)
mov
mov
sti
push
xchg
test
fisub
mov
sub
retf
mov
fld
dec
mov
mov
in
fsubr
or
dec
adc
sahf
stc
mov
sar
jo
adc
stos
sub
push
(bad)
outs
xchg
cmp
fs
sbb
ret
mov
stos
dec
push
rcr
imul
into
push
or
lods
xor
inc
dec
fsubrp
or
(bad)
adc
sub
or
imul
cmp
das
sbb
or
aaa
(bad)
(bad)
mov
mov
rcr
fisub
jle
in
mov
cmp
pop
jne
bound
imul
push
sti
and
daa
inc
jbe
add
in
add
sbb
jae
or
retf
iret
xor
cmp
loopne
xor
mov
int3
push
xor
add
sbb
call
shr
adc
dec
pop
aam
je
pop
and
lea
test
cmp
add
in
ret
inc
add
loopne
and
jle
adc
push
and
xchg
popf
mov
add
sbb
inc
mov
mov
in
nop
xor
dec
ror
push
stos
dec
add
xchg
push
push
add
jp
not
jae
jbe
cmp
xor
cmp
sbb
mov
add
aaa
or
and
ja
adc
inc
inc
loopne
dec
lahf
push
adc
inc
dec
sbb
push
mov
adc
(bad)
jmp
sar
pop
and
rcl
adc
jo
jmp
sbb
xchg
test
cmovns
imul
je
mov
mov
shr
in
inc
mov
xchg
push
jmp
xor
mov
inc
dec
ffree
jmp
rcr
push
mov
push
lock
sbb
xor
cmc
add
or
sub
jmp
xchg
(bad)
fst
test
mov
std
daa
es
add
jnp
xchg
push
cmp
pop
test
xchg
xchg
leave
xor
scas
jecxz
popa
lods
aaa
cmp
ss
shl
adc
sub
adc
add
cmp
sar
loope
sub
push
adc
sbb
or
inc
mov
adc
pop
and
dec
gs
push
add
xlat
nop
repz
into
cmp
jmp
xor
pop
in
lds
or
jmp
dec
je
jmp
and
jg
ins
dec
add
and
xlat
xor
xchg
popf
mov
movs
push
cli
jg
pop
setnp
ret
pop
addr16
ds
xchg
mov
shl
add
cmc
das
rol
cs
dec
je
xchg
sbb
push
cwde
retf
cli
jg
(bad)
pushf
aas
pop
shr
or
jmp
adc
rcl
adc
inc
cmp
and
jmp
cli
movs
aas
stc
cli
mov
and
xor
cs
mov
xor
and
movs
ja
adc
sub
push
or
std
and
mov
(bad)
mov
inc
arpl
test
shr
xchg
push
add
pop
push
cmp
pop
out
(bad)
and
dec
cdq
arpl
pusha
test
jb
pop
add
or
sbb
test
lock
adc
sbb
add
not
sbb
clc
pop
repnz
cwde
xor
lea
add
push
call
sbb
jp
mov
int3
js
inc
dec
hlt
mov
mov
push
pusha
sahf
and
pause
jle
and
dec
adc
push
sbb
sub
sbb
sbb
or
or
mov
cmp
jmp
in
xor
mov
pop
pop
add
movs
or
sbb
jae
sahf
inc
rol
or
scas
lahf
test
mov
xchg
bnd
sbb
inc
sar
mov
imul
pop
ret
and
test
imul
nop
repnz
xchg
imul
dec
or
test
repz
push
jmp
lock
stos
pop
lods
xchg
fmul
pop
pop
xchg
mov
(bad)
cmc
jmp
inc
xor
sub
xchg
sub
sub
dec
movs
cmp
pushf
ret
outs
stos
cs
cmps
mov
cwde
loop
pop
(bad)
inc
push
inc
shr
push
inc
adc
bound
push
or
sub
and
mov
mov
nop
add
add
nop
sahf
retf
mov
jecxz
push
cmps
adc
dec
xor
daa
nop
out
or
pop
int3
or
enter
xor
cmp
mov
add
sub
repnz
dec
outs
enter
jg
pop
repz
retf
ja
and
mov
cld
and
mov
dec
or
imul
stos
and
mov
add
inc
sbb
mov
dec
and
sub
adc
xor
in
rcl
retf
cmp
dec
popa
or
xchg
call
mov
cmp
jmp
pushf
sbb
nop
retf
and
dec
loopne
and
lahf
(bad)
pop
dec
pop
movs
dec
addr16
inc
cmps
mov
and
dec
lahf
jle
rcl
add
not
or
cld
add
add
or
and
leave
pop
inc
loop
xor
(bad)
jle
push
pop
push
dec
fadd
and
imul
push
cmps
inc
mov
out
push
and
jg
mov
push
int
add
xor
or
cdq
inc
mov
push
retf
lock
or
xor
test
xor
mov
xchg
xchg
jno
ret
dec
pop
pop
aam
(bad)
jmp
and
pop
(bad)
dec
sti
mov
inc
inc
stos
cmovae
jle
xchg
imul
in
xchg
shld
sbb
xor
sbb
jg
cmp
mov
adc
push
and
popa
mov
loopne
push
arpl
jle
inc
mov
adc
inc
xchg
mov
adc
inc
pop
xor
and
and
(bad)
nop
test
pop
je
add
pop
sub
push
nop
(bad)
add
shl
pop
jo
gs
xchg
fs
fidivr
sbb
and
aaa
push
inc
das
cmp
loopne
loop
imul
mov
fucom
fmul
cmp
jge
in
adc
mov
fwait
lock
sahf
ja
pop
rcl
in
mov
dec
daa
or
xchg
addr16
push
out
outs
loope
pop
rcr
jmp
xchg
dec
push
cmps
xchg
icebp
jmp
dec
sub
inc
retf
jmp
and
(bad)
push
movs
push
mov
cwde
cli
lds
std
mov
push
aam
push
popa
jmp
mov
push
in
fisttp
je
xor
sahf
pause
add
inc
hlt
dec
xchg
mov
push
add
lea
sub
loop
sahf
in
scas
loopne
or
mov
push
sbb
add
mov
inc
jmp
icebp
or
cs
cs
cmc
pop
mov
and
fisub
cmp
sbb
in
mov
aam
stos
in
xchg
inc
push
in
push
jecxz
stos
test
mov
pop
repz
mov
lock
in
add
cmp
pop
clts
sbb
pop
dec
xor
lea
pop
sub
ja
pop
ins
test
dec
mov
test
movs
out
inc
in
adc
loopne
in
lods
xor
fs
dec
addr16
or
hlt
aaa
xor
xchg
sub
pop
in
mov
repnz
pop
inc
clc
nop
add
inc
adc
lea
data16
and
jne
and
dec
cs
mov
add
pusha
or
xor
inc
mov
out
sbb
and
cmp
mov
cmp
ret
iret
dec
jmp
mov
dec
dec
mov
inc
fwait
inc
pusha
test
scas
ror
dec
adc
(bad)
(bad)
jns
cmp
dec
add
or
adc
pop
pop
jmp
mov
jmp
sub
sub
dec
stos
sub
add
xchg
aam
clc
dec
test
pop
movs
adc
adc
stc
lods
adc
cmp
mov
dec
imul
adc
rol
add
push
sub
sub
clc
jo
xchg
shl
add
and
fsubr
in
pop
push
rcl
sub
add
inc
sbb
bound
and
ins
jmp
adc
shl
mov
mov
ret
and
add
in
and
pop
aam
sbb
lea
sub
call
rcl
pop
lds
es
push
ror
das
test
xor
aas
and
fdiv
pop
shr
cmc
add
call
mov
adc
in
sub
inc
cs
loope
test
in
or
adc
call
ds
add
jl
(bad)
icebp
or
hlt
jl
call
inc
cmps
rol
syscall
mov
ds
shl
out
cld
adc
imul
xchg
ss
cli
inc
mov
jmp
mov
lods
adc
and
or
int
(bad)
jmp
out
fs
in
adc
push
ja
adc
pop
int3
cmp
inc
mov
pusha
call
aad
inc
pop
dec
mov
pusha
or
ret
push
inc
cmp
aaa
push
clc
rcr
adc
cli
or
adc
pusha
sbb
xchg
scas
fistp
adc
add
cli
inc
jno
shl
pminsw
cli
xchg
or
fld
inc
mov
adc
popa
add
cdq
rcr
movhps
adc
ficomp
xchg
mov
and
test
sub
push
inc
shl
mov
sbb
push
bound
push
adc
mov
add
and
xor
add
or
lahf
test
(bad)
jl
mov
and
or
add
sub
pop
psraw
add
mov
out
adc
sbb
sbb
and
pop
push
sbb
mov
(bad)
das
pop
inc
stos
or
jne
adc
push
je
sbb
pop
add
push
loope
and
xor
fmul
mov
lds
adc
jg
das
pop
imul
and
push
or
mov
inc
adc
mul
dec
sub
cmp
loopne
mov
sbb
or
dec
pop
pusha
call
mov
into
jne
or
test
push
adc
movs
stos
clc
fistp
or
add
es
mov
mov
sub
add
pop
mov
fsqrt
sub
dec
xlat
mov
dec
jbe
ret
stos
hlt
pop
cdq
dec
popa
sub
push
test
cmps
push
xor
push
push
sar
imul
imul
rcr
fild
out
sbb
je
stos
fdiv
mov
cmp
cli
and
pop
dec
sbb
ret
push
test
and
inc
ror
and
sub
xchg
add
repz
movs
jne
jae
sti
rol
sub
rcl
test
push
lea
fs
inc
add
mov
and
xchg
icebp
scas
add
push
fst
in
je
xchg
cmp
add
add
shr
or
add
ror
dec
sub
push
pop
add
sbb
aaa
and
xchg
push
or
jbe
and
cs
dec
adc
pop
add
sbb
pop
mov
jbe
pop
or
xchg
adc
cmp
pop
cli
cmps
mov
scas
jmp
mov
push
ror
sub
aaa
mov
icebp
xchg
sub
mov
xor
pop
push
call
sub
sbb
sub
xchg
sbb
rol
fsub
push
jge
mov
adc
dec
inc
mov
xchg
nop
into
in
or
test
test
or
add
popa
adc
out
fnsave
aad
sub
int
mov
lea
pop
xchg
int
dec
rcr
sti
and
cmp
les
or
fadd
mov
outs
cmc
xchg
jne
dec
pop
ret
leave
jge
mov
adc
xchg
out
fdivr
loopne
daa
(bad)
jno
loop
imul
fisttp
repz
xor
mov
pop
and
add
ins
xor
bt
sbb
cmp
lds
adc
xchg
jge
popa
mov
pop
adc
lds
aad
mov
add
pop
aad
(bad)
fcom
cmp
pop
jle
inc
xor
xchg
js
mov
push
out
call
mov
xchg
and
lock
mov
pop
pop
pushf
xchg
mov
int3
cmp
loope
add
mov
test
xor
pop
in
and
add
shr
adc
or
out
sbb
cdq
jno
daa
addr16
pop
jno
lea
adc
out
cdq
or
fdivr
inc
xor
das
sbb
ret
push
rcr
pop
je
or
pop
mov
outs
sbb
mov
fmul
add
xchg
fwait
inc
fldcw
add
inc
xor
xor
or
js
push
push
in
sti
imul
(bad)
ss
xor
stc
fisub
imul
and
movs
or
adc
push
into
sbb
mov
lds
pop
rcl
lods
js
js
adc
jo
stos
arpl
push
cmp
shrd
and
jns
in
aas
inc
cmp
xchg
retf
leave
pusha
inc
pusha
pusha
and
enter
in
int
pop
popf
mov
scas
fbld
ja
adc
adc
test
loop
dec
cmp
inc
imul
pop
rcr
dec
xor
inc
and
jne
xor
push
lods
and
mov
push
or
mov
mov
or
pop
(bad)
push
jne
pop
inc
sub
sbb
inc
dec
push
push
enter
ja
sub
lea
add
mov
leave
sahf
dec
enter
push
mov
imul
test
out
dec
push
jmp
mov
retf
jmp
cmp
push
fdivr
xchg
(bad)
jecxz
sar
add
or
add
cmp
push
or
aas
and
cmp
mov
pop
or
add
xchg
or
and
cli
jl
js
xchg
and
add
fisttp
cmp
sub
push
or
je
daa
adc
sub
jo
stos
sbb
sub
adc
sbb
inc
pusha
xchg
movs
rcl
neg
(bad)
aam
cwde
dec
cmp
sbb
cmp
xor
or
and
xor
xchg
ret
fs
dec
or
in
int
mov
lods
lods
xor
lds
pop
sbb
(bad)
xor
inc
add
rol
jne
ror
xor
inc
and
adc
and
scas
mov
cwde
add
and
inc
mov
cmp
xor
and
test
pop
jb
pop
dec
adc
inc
mov
pushf
or
test
adc
xchg
sbb
mov
ficom
and
test
sub
sub
push
cmps
test
lock
jns
sti
test
in
cld
push
les
jo
jbe
cmp
fmul
ds
pop
mov
jg
adc
or
mov
not
and
and
es
test
inc
mov
je
lea
xchg
ja
je
sbb
push
bound
mov
and
mov
inc
les
sbb
or
lea
xor
jmp
cmp
sub
mul
out
cmp
das
dec
or
adc
jp
cld
stc
fnstenv
pop
xchg
test
repnz
xor
cmc
mov
mov
jecxz
adc
xor
call
sub
sub
ficomp
lock
sub
push
sub
arpl
fmul
rcr
mov
dec
fld
sbb
popa
dec
cld
hlt
dec
lea
pusha
add
add
fisub
movs
add
adc
sub
dec
sub
in
lea
xchg
add
push
ret
and
fcmovu
jmp
mov
lea
adc
lods
inc
pop
shl
lods
daa
rcr
bound
jnp
add
xor
les
mov
push
daa
mov
movs
cmp
or
rcr
movs
out
pop
mov
addr16
pop
pop
add
push
xor
xchg
test
loop
test
or
int3
sub
mov
push
in
push
adc
je
mov
lahf
mov
test
jbe
push
sub
mov
lds
push
mov
inc
and
add
or
mov
add
aas
rcr
and
pop
push
push
pop
mov
mov
fisttp
jle
outs
stc
mov
sbb
xor
nop
or
adc
cwde
inc
adc
ins
xor
popf
out
xlat
mov
loop
add
std
test
popf
fistp
add
mov
jg
ja
sub
push
and
movs
lahf
ret
out
int
loope
add
mov
imul
or
(bad)
and
and
pop
mov
es
pop
sub
cvtdq2ps
js
(bad)
mov
pop
add
jecxz
dec
aam
cli
shr
ss
pop
movs
call
cmp
cmp
xchg
(bad)
xchg
pop
mov
(bad)
and
mov
je
jne
fadd
cmps
xchg
sub
loope
sbb
repnz
nop
push
adc
test
push
ret
add
js
cmp
je
ins
outs
call
sub
stos
mov
jmp
sbb
add
add
sbb
inc
mov
jg
and
gs
jecxz
mov
movs
sbb
in
mov
es
jl
push
lock
ins
pop
rol
je
test
adc
fcmovne
jle
xor
imul
(bad)
jmp
dec
inc
lods
ss
movq
js
push
add
inc
aam
int
ins
sub
and
cwde
and
and
sub
dec
cdq
sub
inc
arpl
sub
call
outs
mov
sub
ins
sub
cmp
daa
cmp
add
sub
mov
mov
add
ret
sub
or
imul
aad
mov
cs
enter
mov
sbb
enter
push
enter
leave
sbb
enter
ins
sbb
xor
add
enter
outs
je
and
shl
cmp
cld
add
mov
adc
lods
jmp
mov
imul
sbb
aam
push
add
sbb
inc
jns
in
sbb
jp
pop
sahf
xor
sub
mov
ret
xchg
sub
sub
enter
dec
push
sar
int
enter
add
or
sar
stc
(bad)
xor
push
rol
add
or
push
mov
pop
sub
(bad)
sub
xor
pop
push
dec
movs
xchg
out
or
or
sub
sub
ds
in
jle
or
xor
or
cmp
lock
pop
fs
retf
cmp
jmp
inc
mov
push
pop
jnp
mov
enter
or
lds
xchg
cmc
xor
pusha
dec
test
xchg
or
cmp
popa
jecxz
and
push
sbb
sti
mov
(bad)
and
add
retf
mov
and
jge
inc
lods
test
pusha
div
inc
or
push
aaa
jmp
loopne
ret
adc
add
add
cli
sub
nop
jns
or
dec
add
icebp
cmp
inc
dec
and
loope
mov
push
push
sub
into
test
cwde
inc
sbb
div
push
shr
cmp
test
jnp
or
std
sar
mov
fmul
cli
addr16
inc
jmp
(bad)
fild
or
ret
mov
sbb
ret
call
sub
popf
cmps
nop
jo
pusha
pop
(bad)
sbb
jo
sbb
int3
call
enter
xchg
fst
or
mov
dec
cmp
push
jb
xor
add
dec
fwait
rcl
pushf
pop
xchg
in
and
icebp
test
inc
jp
pop
jge
add
loopne
imul
or
dec
inc
dec
dec
push
inc
adc
not
sahf
xchg
dec
jmp
inc
mov
jmp
and
lods
test
inc
loopne
loopne
adc
cmp
sbb
jo
pop
or
mov
arpl
xchg
int3
add
inc
iret
cmp
mov
adc
mov
push
sbb
add
mov
mov
jo
fiadd
shl
mov
shl
addr16
or
inc
(bad)
jmp
or
cmp
aas
dec
loop
jp
adc
imul
test
mov
sbb
(bad)
or
mov
pusha
ja
jp
loope
xchg
push
and
xchg
cmp
mov
dec
and
cmp
fild
push
fcomp
mov
or
mov
ss
enter
inc
push
mov
xor
aas
arpl
ja
sbb
pop
outs
scas
mov
dec
sar
inc
xchg
mov
push
sbb
mov
mov
pushf
and
jmp
xchg
fsub
pop
sub
push
push
push
push
adc
inc
jmp
mov
ret
dec
aaa
call
pop
rcl
ret
cmp
out
add
mov
xchg
add
inc
(bad)
fild
xor
inc
pusha
mov
add
dec
sub
mov
stc
adc
or
add
cmp
and
aam
sar
pop
add
popa
xchg
lea
xor
push
inc
add
in
sub
xchg
and
pusha
shl
(bad)
stos
jne
mov
mov
or
push
jmp
and
sbb
and
adc
or
sbb
pop
std
sbb
ss
inc
cmp
cmp
shl
jge
ror
xchg
or
sbb
adc
ins
pop
push
xor
aam
cld
or
sbb
(bad)
cmp
dec
outs
inc
sbb
mov
fldcw
jp
mov
pop
sbb
enter
or
jg
xor
out
sub
ja
sub
das
push
test
(bad)
and
jp
imul
push
sbb
xchg
mov
and
cmp
push
rol
aad
or
aad
ficomp
fucomi
movs
inc
add
mov
js
cs
in
jbe
mov
or
add
jmp
popf
xor
or
inc
bound
bound
pop
adc
dec
add
add
repnz
add
nop
lods
pcmpgtb
dec
rol
(bad)
cmps
inc
xchg
lods
ret
(bad)
aad
xchg
jns
push
sti
fidiv
mov
jmp
pause
mov
das
mov
sbb
sub
jno
sbb
aad
mov
inc
cmp
adc
daa
fld
xchg
add
es
adc
cmp
stc
cmps
xor
add
rol
pusha
sub
cmps
pop
jg
pop
sbb
and
pop
cld
mov
pop
dec
dec
rcr
jo
jbe
jnp
jecxz
je
add
ret
call
cld
add
and
syscall
or
je
cld
jno
jmp
ficom
sbb
add
mov
das
shr
add
pop
or
adc
sub
fadd
cmp
cmps
push
(bad)
adc
movs
dec
rcl
data16
arpl
cwde
and
add
adc
popa
cmps
retf
aam
adc
or
fld
mov
pop
fnsave
sub
cmp
lock
shr
mov
jbe
cmp
stos
sbb
outs
popf
mov
sbb
ins
adc
ret
fstp
push
push
xlat
loop
add
icebp
loopne
and
xor
fisttp
add
test
in
sbb
inc
jmp
pop
jo
(bad)
sub
or
push
icebp
xor
mov
retf
aad
lods
or
and
jns
fwait
or
or
loope
jne
push
lahf
test
dec
mov
pop
sub
in
add
adc
nop
cmp
or
sbb
sbb
and
pop
xchg
or
imul
loopne
cmps
ins
fbstp
dec
add
add
jno
pop
push
mov
inc
icebp
dec
mov
inc
mov
push
and
sbb
jmp
push
xchg
sti
xchg
add
dec
inc
into
xor
stc
cmps
rol
cmc
xchg
sar
jbe
add
push
pop
nop
popf
mov
daa
mov
and
dec
sub
jnp
jb
sub
dec
and
inc
lea
test
outs
mov
jnp
jnp
xor
aaa
or
rcl
(bad)
pop
mov
mov
mov
cmps
mov
xor
mov
jns
dec
pop
hlt
mov
fisttp
mov
pop
gs
mov
xor
cmp
cmp
jecxz
lods
fstp
or
xchg
scas
pop
test
and
test
imul
inc
mov
repz
mov
sahf
popf
cmps
cdq
push
mov
or
and
adc
push
and
cld
and
and
xlat
fdivr
xchg
inc
(bad)
sub
mov
test
lods
sti
scas
mov
int3
or
stc
add
push
add
push
adc
ret
and
sbb
or
clc
in
xor
daa
mov
movs
aad
sub
add
pusha
or
(bad)
add
rcr
mov
movs
mov
cdq
ret
cmp
add
aam
pusha
mov
sbb
ror
xchg
setle
cmp
add
push
aad
and
or
jl
sahf
and
pop
in
lahf
enter
in
mov
push
inc
adc
inc
mov
xchg
pushf
inc
dec
xchg
(bad)
add
stos
loopne
lea
ins
jp
xor
or
jecxz
push
mov
mov
sbb
neg
adc
into
out
xchg
ins
xchg
lock
out
test
dec
loopne
push
movs
fisubr
add
or
aas
sbb
add
or
jmp
neg
sub
sar
mov
xchg
jmp
sub
xor
loope
pop
pop
loope
cmp
fdivrp
mov
push
(bad)
mov
jno
outs
je
cmps
test
push
fcom
stos
add
pop
push
pusha
movs
dec
ds
pop
(bad)
rcr
pusha
test
or
in
movs
pop
sbb
pop
cmp
ret
sbb
add
adc
xor
mov
adc
jl
or
adc
xchg
mov
in
sub
and
adc
shl
xchg
jbe
ror
dec
dec
inc
sub
imul
mov
add
adc
or
jle
sbb
aam
fwait
js
test
mov
cmp
enter
push
xchg
mov
test
data16
sub
popf
test
out
into
add
push
adc
sbb
sbb
mov
pop
jle
shr
movs
xlat
inc
loopne
push
pop
jne
aas
push
sub
sbb
stos
push
in
jmp
pusha
popf
adc
pushf
xor
xor
stos
or
jns
sahf
out
jp
fisubr
setns
stc
ror
popf
(bad)
and
inc
jg
push
mov
cmp
sub
xchg
push
sub
add
lea
pop
adc
mov
mov
loope
jmp
or
push
sti
xchg
lods
inc
adc
ins
add
and
or
add
cs
(bad)
js
dec
pushf
int3
dec
xor
daa
shr
pop
or
add
cmp
imul
ret
jo
stc
jl
push
das
adc
mov
lea
push
jg
fisubr
and
js
pop
test
sub
test
jg
gs
inc
mov
jl
push
xchg
out
loopne
and
ror
loopne
jg
rol
cdq
jmp
add
not
sub
call
or
movs
inc
sbb
gs
enter
out
sti
push
jge
add
in
rcl
add
push
xchg
std
stc
test
or
fist
or
or
push
(bad)
sbb
and
push
push
mov
jg
xor
adc
scas
(bad)
in
jge
inc
and
and
add
inc
loopne
rol
pop
mov
les
pop
dec
mov
adc
inc
movs
and
jo
(bad)
retf
xor
jge
mov
push
adc
mov
imul
leave
je
jl
and
sbb
shr
add
(bad)
sub
mov
fldenv
jl
fisttp
sub
push
pop
adc
stos
sbb
sbb
cmps
pop
and
push
and
mov
test
add
xchg
adc
sub
xchg
jmp
fldenv
or
inc
sbb
dec
aaa
movs
sbb
adc
sbb
push
test
or
mov
cmp
adc
scas
mov
jmp
aad
xchg
mov
push
jecxz
fmul
mov
arpl
je
jmp
popf
ss
and
adc
push
mov
adc
fldcw
xchg
xchg
dec
xor
stc
push
scas
sbb
das
and
inc
mov
test
inc
sub
pop
mov
push
jl
adc
call
push
push
xor
xor
mov
add
inc
adc
loope
jne
test
adc
push
lods
test
and
jno
cmp
and
mov
adc
lds
imul
pop
mov
cmp
xchg
dec
inc
and
lds
ins
cwde
pop
or
cmp
test
or
shl
push
add
add
jno
xor
leave
push
and
dec
sbb
cmp
xor
add
sbb
mov
xchg
xchg
popf
inc
cdq
stos
and
test
rcl
sub
xor
dec
push
adc
push
adc
jl
inc
daa
ret
retf
outs
add
ret
mov
outs
cmp
mov
or
cmp
mov
pop
inc
ins
jmp
ins
jle
or
retf
add
jae
add
jge
(bad)
cmp
stc
mov
ror
adc
cwde
sbb
lock
add
sbb
push
add
lds
add
sub
in
push
xor
adc
sbb
sub
pop
pop
mov
dec
mov
gs
mov
or
jo
iret
xchg
adc
dec
sbb
push
push
pop
pop
adc
or
jmp
add
add
sub
add
mov
retf
mov
or
xchg
rol
sbb
cmp
ins
jecxz
or
sub
mov
cmp
je
inc
dec
xchg
sub
mov
xchg
popa
mov
push
(bad)
das
xchg
pusha
xchg
sbb
aas
cmp
inc
pop
xor
cmp
test
mov
(bad)
shl
mov
(bad)
mov
mov
adc
add
inc
dec
ins
pusha
add
je
rcr
and
lahf
xchg
or
jmp
movs
and
pop
xor
cmp
bound
icebp
and
pop
sub
add
loopne
cmp
sbb
sbb
dec
test
pop
sbb
or
shl
fcom
xchg
jbe
test
(bad)
or
sbb
add
add
cs
sti
push
and
lock
sbb
imul
xlat
daa
sub
sub
in
adc
rcr
adc
in
mov
push
xor
in
mov
adc
inc
aaa
imul
sub
es
aad
sbb
daa
sbb
imul
retf
or
mov
sub
fs
mov
cmp
sbb
or
cmp
sbb
das
int3
dec
adc
inc
or
jne
jecxz
scas
or
mov
into
dec
xchg
add
pop
jl
or
adc
test
xchg
mov
inc
das
popa
sub
loopne
add
popa
loope
sub
(bad)
and
popa
sub
cmp
and
fwait
adc
mov
dec
adc
pop
cs
mov
cmp
fcomp
inc
or
mov
push
addr16
stos
(bad)
dec
enter
sub
add
push
das
pop
jo
push
inc
cli
es
shr
sahf
add
pop
or
fild
aam
mov
push
pop
mov
jbe
push
and
sub
xchg
lds
xchg
xchg
xor
xor
aam
in
movs
inc
stos
add
add
mov
dec
jl
int3
jmp
adc
push
adc
inc
dec
test
mov
mov
add
cmp
cmps
pop
shl
dec
(bad)
aad
(bad)
sti
mov
adc
mov
loope
ins
cmp
mov
sbb
mov
es
pusha
cmp
or
cs
mov
sub
fcom
mov
xchg
fiadd
clc
(bad)
cld
icebp
bound
loope
and
lock
loopne
test
add
movs
xchg
imul
mov
sub
jns
add
fcom
add
push
inc
adc
cmp
pop
jns
jg
movs
pop
xchg
mov
sahf
and
outs
push
dec
loopne
fsub
push
xor
pop
loopne
adc
push
sbb
test
add
cmp
pop
add
jo
add
fisttp
sub
ror
adc
ror
jmp
cwde
cmp
mov
js
push
fild
ins
mov
jo
add
into
mov
add
xchg
push
jae
add
pop
pop
loopne
mov
cmp
sahf
popa
cmp
popa
out
xor
add
and
inc
add
imul
pusha
xor
xlat
inc
pop
pop
xor
outs
inc
ins
loope
add
icebp
xchg
imul
jg
out
dec
mov
adc
aam
push
ret
mov
inc
push
mov
jb
sbb
dec
push
mov
inc
inc
adc
pop
and
dec
add
inc
mov
cs
dec
in
mov
fwait
mov
mov
push
js
mov
mov
xor
or
push
inc
stos
inc
aaa
test
es
jmp
push
sub
adc
pop
adc
mov
mov
xchg
xor
dec
jle
cwde
aam
push
clc
xchg
std
fild
lods
call
xor
sub
aas
jmp
(bad)
and
mov
popa
add
jmp
or
or
pop
sbb
or
fisttp
dec
xchg
adc
inc
xchg
mov
jecxz
adc
push
or
lods
add
aam
adc
inc
loop
mov
or
add
dec
mov
int3
lods
xor
sbb
ja
fstp
popa
jnp
rcl
adc
pop
test
xchg
adc
adc
lods
sub
or
add
out
cld
enter
ss
cmp
mov
shl
retf
lahf
and
sbb
mov
cmp
push
dec
lock
add
fmul
arpl
cmp
cmp
sbb
sbb
xor
push
inc
inc
inc
jp
cmp
rcl
rcl
push
mov
movhps
cmps
xlat
adc
neg
add
lea
mov
lahf
fcom
les
pop
inc
and
xchg
add
or
jge
bswap
fcmovnbe
mov
call
push
adc
fist
jge
sbb
jmp
call
jbe
xchg
add
inc
mov
push
fwait
clc
ss
(bad)
inc
mov
retf
fimul
(bad)
ins
adc
push
and
mov
sub
(bad)
test
or
cmp
adc
ror
sbb
dec
stos
push
loopne
push
sbb
iret
push
push
loopne
enter
xchg
or
mov
fldenv
pop
mov
movs
mov
adc
lahf
daa
lods
addr16
xchg
lahf
sub
pop
push
jle
sub
add
jns
icebp
in
aaa
stos
push
mov
or
popf
jmp
scas
movs
push
xor
ins
jb
xchg
xchg
popa
sub
leave
cmp
rol
aad
fadd
xor
sub
fistp
les
outs
xchg
js
pop
mov
es
adc
mov
or
ret
(bad)
and
add
adc
xchg
test
add
test
or
xchg
push
aaa
fist
sbb
inc
popa
lds
in
pop
jb
loopne
(bad)
jmp
clc
xor
ret
loope
ror
dec
inc
dec
test
inc
test
jne
push
xchg
cmp
sar
adc
mov
pop
in
and
push
ret
or
adc
add
out
xor
repz
cmp
shl
xchg
fs
(bad)
pop
dec
lds
test
(bad)
sbb
xor
sub
xor
or
jmp
sti
scas
cmp
add
lahf
std
daa
les
jae
pop
pop
dec
xchg
cmc
mov
dec
or
in
and
sub
jbe
and
pop
fidiv
test
or
xor
das
rol
inc
or
sahf
lahf
shr
mov
test
adc
sar
clc
pop
push
sub
stc
jge
inc
pop
sub
pop
sbb
pop
rcr
mov
sub
xchg
xchg
inc
in
imul
or
xor
ret
ret
jge
xchg
mov
xchg
mov
addr16
inc
inc
xor
push
xor
jmp
jle
popa
add
dec
cmps
stc
ret
pushf
adc
das
or
lea
sub
pop
add
(bad)
fsub
stos
ins
inc
adc
xor
or
mov
or
adc
pushf
add
jmp
or
cmp
push
and
adc
sbb
pop
aas
mov
pusha
jmp
daa
push
(bad)
inc
inc
or
stc
movs
test
stos
inc
xchg
leave
or
dec
cmp
std
xchg
jl
repnz
or
jns
mov
pop
dec
sub
xor
icebp
and
into
sbb
rol
jmp
jne
xchg
rcl
icebp
loop
mov
jne
pop
ins
inc
stc
adc
xchg
adc
xor
inc
jne
inc
mov
or
cdq
ds
cmp
mov
cmp
pop
push
add
pop
xor
push
or
and
test
clc
test
mov
loop
pusha
add
(bad)
stos
inc
rol
xchg
mov
movs
nop
(bad)
in
xchg
add
xchg
mov
movs
jmp
mov
fisttp
aaa
sub
pop
xchg
sub
aas
pusha
inc
ins
sbb
mov
call
imul
xchg
dec
hlt
shl
iret
test
mov
nop
jl
pop
hlt
pop
retf
push
add
pusha
xchg
test
mov
je
or
add
pusha
mov
outs
mov
or
cmp
adc
mov
sub
je
xor
mov
cdq
pop
dec
mov
dec
mov
xchg
xchg
inc
ss
test
mov
lods
std
enter
data16
test
xor
pop
clc
sti
mov
out
leave
jnp
pop
add
adc
out
and
pop
popa
dec
or
add
or
add
push
mov
add
rcr
arpl
mov
clc
mov
imul
arpl
fmul
dec
rcr
or
ss
sub
xchg
aad
call
xor
(bad)
sub
das
sahf
rcr
cmp
pop
les
dec
or
call
inc
or
pop
pusha
and
hlt
add
cmp
sub
pop
inc
sbb
xchg
mov
mov
imul
and
sbb
mov
cmp
and
xor
fdiv
add
add
jo
inc
pop
daa
adc
push
loopne
fstp
and
lods
xchg
mov
jno
pop
mov
in
sbb
shl
dec
test
push
mov
dec
scas
retf
xor
scas
add
pop
add
dec
imul
mov
push
and
sbb
or
push
jns
adc
hlt
and
sub
imul
jno
or
jne
mov
lock
sbb
push
ds
sub
les
movs
out
fst
rcr
jl
xor
test
or
shl
outs
mov
(bad)
xor
push
push
scas
loop
mov
dec
mov
dec
and
push
sub
aad
or
daa
sbb
cld
sub
push
or
ins
cmp
(bad)
and
mov
mov
or
pop
or
test
push
cmp
lock
leave
mov
push
or
cmp
xchg
je
imul
jnp
packuswb
jecxz
sub
sub
xchg
shl
call
mov
cmp
stos
xor
cwde
fadd
inc
add
in
push
or
push
xchg
ret
sbb
inc
pushf
push
pop
rol
sbb
push
inc
movs
js
les
stos
gs
cli
add
jne
push
sub
frstor
stos
ret
sub
add
or
(bad)
push
cmps
into
inc
shr
adc
lock
jmp
pop
mov
sub
daa
push
in
clc
les
push
test
inc
pusha
(bad)
mov
push
std
mov
push
lahf
pop
test
repz
jg
pop
and
pop
mov
inc
aad
adc
cwde
jo
inc
pop
cmps
fld
push
adc
sub
mov
lods
dec
mov
cwde
inc
arpl
inc
dec
ret
retf
inc
in
dec
pusha
and
adc
mov
pop
nop
dec
xchg
jmp
inc
jb
test
test
or
mov
pop
dec
in
add
leave
xchg
das
addr16
les
aaa
cmp
push
or
loope
cmp
xchg
test
scas
mov
or
push
or
cld
sar
pop
pop
push
adc
ror
dec
jmp
cmp
cmp
fdivr
imul
sbb
mov
sub
ss
xchg
pop
cmp
shl
test
fcom
xchg
cwde
and
jb
rol
in
mov
jb
dec
scas
adc
pop
outs
je
add
push
adc
dec
cld
sbb
xchg
sub
sti
push
mov
mov
sbb
sub
push
xor
cs
js
mov
xchg
add
adc
dec
call
call
mov
add
ret
ja
sar
xchg
dec
cmp
push
les
xchg
ror
cmp
iret
ins
bound
xchg
or
jns
ins
or
mov
push
hlt
and
or
dec
pusha
xor
sbb
arpl
add
adc
lods
mov
or
jnp
mov
ds
mov
sbb
mov
or
pop
hlt
sbb
add
or
adc
add
or
mov
je
int3
xor
mov
mov
retf
xor
mov
mov
mov
xor
or
push
add
jo
or
mov
nop
add
ret
push
dec
pop
pop
pop
fcom
out
clc
test
pop
xchg
lock
scas
fcomp
loop
sbb
jne
inc
or
sbb
lds
repz
and
popa
and
mov
ror
adc
cld
into
sub
retf
mov
xor
pop
jnp
dec
add
shl
push
in
leave
jge
add
and
lock
add
sbb
xor
icebp
jne
jge
xor
jae
xchg
sbb
jge
or
mov
mov
gs
aam
xor
jnp
gs
jo
test
adc
sub
pop
xchg
or
je
imul
sti
jns
xor
adc
or
jno
dec
enter
and
mov
popa
add
in
dec
add
sub
sbb
mov
adc
ror
test
mov
ss
retf
inc
pop
rcl
daa
outs
mov
add
dec
mov
or
mov
mov
loope
and
pop
(bad)
and
cld
(bad)
iret
lahf
dec
call
pop
xchg
ins
xor
je
and
shl
adc
mov
and
jl
or
and
cmp
sub
mov
push
retf
out
adc
cmps
dec
mov
mov
scas
dec
xchg
stc
inc
mov
rcl
mov
push
div
lea
xlat
rcr
mov
imul
mov
push
inc
cdq
mov
adc
jmp
out
push
xor
inc
pop
nop
and
adc
in
repnz
add
cmps
rcl
and
push
ins
mov
ins
imul
add
add
fisttp
push
call
push
mov
pop
sbb
rol
add
adc
mov
out
or
xchg
or
mov
add
dec
sub
scas
jmp
xchg
icebp
arpl
adc
in
inc
pop
sbb
or
stc
lods
hlt
mov
loope
pushf
or
xchg
in
outs
mov
pop
push
xor
test
sub
sbb
push
pusha
inc
stos
add
dec
sbb
aam
int3
fsubr
cmps
add
aam
int3
sbb
addr16
mov
dec
inc
call
bound
and
inc
push
fdivr
and
adc
dec
adc
and
push
repz
ins
mov
in
popa
aam
push
cmp
adc
addr16
push
movs
cmp
and
popf
movs
cmp
jge
clc
in
popa
int3
in
mov
dec
cmp
cmp
movs
inc
xlat
hlt
je
lods
lods
sub
push
cmp
ficom
xchg
sub
addr16
adc
push
jbe
cmc
mov
xor
and
fidivr
rdtsc
ins
or
or
mov
outs
push
add
xor
bound
inc
mov
dec
pop
or
fs
push
out
jmp
or
lea
adc
ja
inc
or
hlt
out
ins
pop
ja
dec
inc
push
pop
push
inc
and
call
adc
and
inc
dec
dec
inc
and
sub
fldcw
push
inc
xor
xor
cdq
dec
adc
mov
outs
xor
dec
and
xchg
outs
dec
ins
ins
test
aaa
mov
or
fs
inc
push
inc
and
je
sub
pop
jbe
not
cmps
lods
sub
jne
xchg
and
ins
cmp
nop
and
cmp
(bad)
sub
(bad)
bound
jns
and
and
inc
add
ins
lea
pop
and
retf
ins
int
aas
xor
or
xchg
aas
enter
push
mov
push
rol
cmp
or
dec
fsub
ja
mov
mul
push
pop
add
xor
clc
jl
push
pusha
data16
mov
add
popf
nop
in
jl
sar
mov
das
or
cld
add
cmp
sbb
cmp
mov
push
or
add
dec
loopne
inc
hlt
call
mov
or
push
mov
arpl
rcl
das
push
or
cmp
dec
mov
and
mov
inc
add
cli
adc
jne
(bad)
push
add
and
and
mov
imul
mov
xor
mov
xchg
gs
mov
jl
adc
adc
lods
xor
sbb
inc
je
or
add
shl
add
sub
pop
lahf
push
and
iret
or
lods
mov
les
aaa
pusha
adc
xor
(bad)
adc
nop
aaa
adc
xor
jmp
inc
sbb
push
mov
sub
movs
fdiv
rcl
in
xor
ret
sahf
clc
sbb
and
ror
fsubr
xor
xor
rcl
push
push
movs
add
or
inc
mov
push
xor
fld
or
push
xchg
dec
gs
add
inc
and
sub
add
lods
push
stc
jo
bound
ja
or
add
bound
call
into
jo
and
sub
cmp
and
mov
inc
out
push
popa
loopne
push
arpl
sbb
js
daa
(bad)
push
ror
clc
xor
and
mov
mov
dec
(bad)
repnz
mov
movs
sub
ins
pop
sbb
xor
xor
and
mov
inc
test
ret
xor
push
pop
jnp
sbb
xor
in
inc
pop
and
hlt
add
pop
fs
shr
cmp
jle
or
inc
cmc
pop
sbb
add
and
xor
outs
rol
retf
sub
pusha
mov
jae
or
into
les
add
add
ins
out
cmp
dec
xchg
lea
jnp
sbb
adc
xor
pop
pusha
jecxz
add
in
sbb
push
in
jnp
and
inc
mov
rcl
nop
data16
fsubr
aas
in
fist
push
add
add
hlt
rcl
mov
pop
pusha
rcr
cmps
loope
leave
xor
(bad)
enter
xchg
mov
inc
sahf
add
rcr
rol
and
mov
leave
cmp
xchg
or
xor
cmp
pop
xchg
nop
fistp
cmp
dec
pop
adc
push
jns
pop
mov
mov
mov
int3
daa
daa
daa
daa
rcl
fcomp
ins
and
sbb
jge
lds
or
or
and
or
jnp
dec
pushf
xchg
mov
sub
lea
sahf
call
cmp
and
ss
inc
xlat
lea
out
pop
pop
bound
push
js
mov
imul
outs
aas
mov
or
iret
ins
mov
nop
imul
retf
push
rol
bound
and
xchg
pop
ja
push
or
mov
das
or
pop
jnp
sbb
xchg
dec
add
adc
ja
jnp
push
movs
and
lods
jae
imul
pop
out
jbe
int
and
add
loopne
enter
movs
movs
mov
sbb
xchg
mov
jmp
jb
push
pop
adc
ins
sbb
cmp
xor
jl
dec
mov
ins
test
and
mov
pushf
retf
pop
add
es
ret
cmp
sub
mov
or
retf
hlt
xchg
fist
jb
and
push
dec
add
jns
add
(bad)
or
lods
rcr
pop
xchg
mov
outs
nop
mov
xchg
mov
sub
mov
outs
cmp
xchg
adc
push
ins
mov
ins
std
xchg
mov
mov
mov
or
outs
jmp
inc
fiadd
adc
adc
xchg
loope
mov
mov
mov
adc
and
and
mov
push
xchg
shr
inc
bts
sti
fisubr
test
jae
ror
dec
xchg
enter
jo
mov
inc
mov
sub
inc
je
dec
sub
mov
ins
xchg
fmul
and
mov
push
pusha
nop
inc
mov
loope
jb
pop
dec
add
sub
mov
add
sub
xor
shl
lock
jbe
inc
enter
add
xor
push
pop
sbb
hlt
push
loope
add
and
push
pop
dec
les
push
fdivrp
push
js
jne
es
add
lods
or
xchg
hlt
fs
out
cmps
mov
or
or
jb
iret
fdiv
or
mov
dec
xor
fstp
movq
jo
xchg
cmp
addr16
in
loopne
in
inc
stos
inc
sbb
mov
push
pop
mov
or
xchg
enter
mov
in
lods
jbe
and
mov
lods
pop
clc
mov
(bad)
pop
xor
xor
jb
cdq
shr
iret
pop
pop
inc
add
mov
mov
dec
mov
jne
mov
add
inc
imul
push
and
es
pop
cwde
mov
add
mov
add
ret
adc
xchg
pop
mov
pop
js
xchg
cmp
pusha
xor
gs
xor
fdiv
pop
push
movs
cmp
mov
ins
fdiv
pop
dec
push
repnz
inc
xor
mov
lock
retf
sbb
lea
out
pusha
cmp
out
retf
popf
sub
cmp
ds
ss
pop
loop
mov
stos
dec
xchg
rcl
adc
or
ss
mov
movs
cmp
daa
rol
shl
and
mov
sbb
ins
stc
popa
cmp
nop
cmp
cmp
sub
pop
rcr
or
mov
mov
push
das
movs
or
pop
fisttp
aas
push
jns
and
popf
fs
push
outs
and
adc
jg
mov
dec
xchg
ins
push
rol
pop
sti
cmp
js
lods
xchg
sub
mov
sbb
pop
pop
add
jae
fcom
in
jne
dec
js
clc
cmp
pop
sub
push
pop
inc
jbe
outs
je
inc
cs
dec
push
push
push
sub
and
push
jmp
mov
gs
dec
dec
dec
dec
and
sub
dec
inc
mov
xor
inc
dec
sub
fidiv
cwde
nop
push
jns
pop
jno
(bad)
(bad)
shl
xor
add
push
icebp
inc
inc
jb
cs
inc
and
adc
pop
sub
push
xchg
sbb
test
jle
jo
xchg
pop
inc
clc
adc
push
sbb
cmp
adc
push
cmp
add
sbb
fldcw
aam
(bad)
sti
push
pop
push
jo
test
(bad)
test
mov
(bad)
jle
test
push
dec
pop
xor
movs
dec
fnsave
and
xor
dec
ror
inc
es
movs
mov
dec
cdq
fs
dec
push
push
pop
fs
dec
es
pusha
or
cdq
push
add
xor
aas
pop
mov
fcmove
mov
bound
sbb
push
jl
nop
mov
mov
adc
add
ds
inc
shl
xchg
jae
sub
dec
data16
mov
rcl
dec
jb
xor
inc
mov
pop
add
mul
push
cmp
or
and
push
outs
bound
cmp
mov
outs
cmp
mov
out
aas
add
adc
and
dec
cmp
pop
sti
jbe
cmps
and
arpl
inc
pop
gs
and
pop
arpl
jp
daa
push
push
mov
jae
add
sbb
imul
or
cwde
push
jns
outs
outs
bound
dec
das
sub
sar
sub
jo
cmp
ficom
test
and
and
inc
int3
dec
xor
jo
jae
into
and
or
psrlq
aaa
jge
sbb
aaa
imul
outs
gs
adc
and
dec
push
enter
and
jae
ror
adc
or
sbb
jg
in
movs
add
ror
adc
xchg
mov
iret
and
mov
movs
imul
addr16
pop
in
loope
dec
lock
jae
js
cmps
pop
or
das
sub
scas
das
inc
push
xchg
and
repz
fdiv
jecxz
jecxz
in
push
sub
adc
inc
bound
cmp
call
inc
in
cmp
push
arpl
ja
xor
or
and
mov
push
adc
xchg
ret
jle
xor
imul
sub
and
lahf
xor
ins
pusha
xchg
imul
or
xlat
loopne
cwde
iret
add
lock
inc
sbb
adc
lds
and
add
cmp
and
add
cdq
pop
ds
jb
cmps
pop
ret
mov
xor
fs
and
adc
and
push
adc
pusha
ja
outs
(bad)
(bad)
cmp
ds
imul
ja
ins
push
cmps
sub
pusha
mov
imul
ins
xor
lahf
adc
sbb
shl
and
ins
shr
arpl
psubsw
nop
fs
cmp
mov
inc
pop
nop
adc
adc
xor
add
clc
jmp
cmp
xor
loopne
mov
add
mov
add
outs
and
adc
int3
jp
rcl
sub
ret
xchg
idiv
jne
xlat
cmp
cs
sbb
xchg
xor
data16
test
and
test
enter
sub
sub
call
sub
pop
fmul
adc
sub
xchg
mov
or
arpl
inc
sub
dec
adc
jge
pusha
imul
fs
add
setno
jbe
cld
xchg
daa
in
stc
mov
push
mov
test
das
jns
push
add
jmp
imul
lods
int
test
sbb
add
rol
ja
cs
xchg
jg
jo
shl
icebp
dec
cmp
jno
pop
in
shr
(bad)
hlt
mov
adc
jecxz
fmulp
cs
lea
clc
pop
dec
xchg
jmp
sar
cmp
lahf
mov
add
out
fsubr
mov
jle
loope
push
mov
das
rol
jmp
outs
xlat
daa
pop
data16
pusha
xor
and
js
push
(bad)
cdq
and
or
dec
jae
(bad)
or
pusha
inc
pop
inc
mov
mov
sbb
cld
test
lock
sbb
hlt
hlt
inc
add
jns
sub
leave
js
dec
inc
ret
fmul
aas
xchg
arpl
jl
sub
rol
dec
ds
xor
ins
jnp
rcr
add
cli
jl
call
or
xchg
mov
inc
call
in
ds
lds
je
test
add
cmp
dec
mov
movs
and
outs
mov
retf
enter
adc
jmp
cs
xchg
icebp
or
mov
iret
add
and
rcl
shr
call
and
pop
inc
mov
retf
xor
pop
jnp
stos
in
in
call
dec
test
(bad)
mov
aaa
push
call
data16
add
dec
or
pop
sbb
adc
enter
std
push
mov
add
adc
mov
dec
push
xor
add
pop
bound
xor
mov
test
enter
cmp
xor
push
mov
inc
pop
push
iret
or
(bad)
and
lock
sbb
push
and
stos
add
mov
sub
jb
(bad)
inc
and
shr
inc
mov
or
mov
xchg
inc
or
add
loopne
movs
out
or
inc
fcomp
add
add
add
js
inc
xor
inc
dec
inc
pop
sti
inc
cmp
movs
mov
cwde
pushf
pushf
mov
ret
movs
jne
jmp
or
sub
stc
ss
xchg
shl
push
inc
add
adc
xor
lods
stos
or
iret
add
lahf
fdiv
leave
sub
inc
scas
sbb
scas
add
sbb
scas
cmp
out
jmp
or
mov
shrd
lods
cwde
and
mov
push
fisttp
pop
pop
leave
rcr
hlt
pop
fs
test
add
adc
jno
daa
add
push
add
xchg
add
add
adc
fld
sbb
push
mov
popf
or
mov
sub
jle
sbb
shl
sbb
mov
scas
scas
(bad)
adc
pop
repnz
stc
movs
mov
mov
pop
add
sbb
leave
add
ret
mov
ins
mov
add
imul
mov
sub
mov
sbb
pop
adc
push
or
xchg
xchg
js
sbb
icebp
ins
out
or
push
arpl
pop
lds
mov
mov
xchg
inc
inc
mov
xchg
fmul
fisubr
and
sbb
or
leave
xchg
push
jge
add
jecxz
(bad)
mov
xchg
adc
ror
ja
arpl
test
lock
dec
enter
popa
and
or
aas
cmp
push
stos
jp
jnp
xor
and
or
out
lea
test
inc
or
fs
sbb
sbb
jmp
xchg
loope
or
jg
or
lock
test
test
jnp
mov
push
xor
mov
jp
or
cmps
mov
adc
xchg
add
push
js
mov
or
push
push
jl
test
push
sub
shr
das
jb
enter
adc
xchg
add
fs
push
add
push
sbb
inc
aad
ret
adc
or
mov
jmp
retf
or
addr16
rcpps
xchg
inc
nop
cs
dec
sbb
pop
push
dec
repnz
push
lods
add
add
jl
push
add
sbb
pusha
imul
out
bound
xor
test
inc
pop
xchg
int
pushf
pop
pop
adc
call
and
xchg
adc
arpl
pop
dec
inc
jp
lods
ja
or
iret
cmp
aaa
pop
push
push
js
adc
adc
and
bound
inc
xchg
pop
jb
mov
mov
jb
das
mov
push
hlt
xchg
pusha
rol
daa
or
xor
xor
cs
js
lods
fld
xor
xor
xor
ins
sub
and
xor
in
movs
push
loop
xor
jnp
push
bound
outs
mov
dec
out
push
add
gs
cmp
sti
mov
das
sbb
ficomp
outs
mov
mov
ja
inc
sbb
ss
ss
(bad)
in
cmp
pop
push
aaa
dec
xor
xor
xor
and
and
ins
aaa
xor
adc
dec
popa
xor
bound
repnz
push
jmp
inc
jmp
fwait
ja
push
inc
and
xor
nop
inc
sub
lock
add
push
in
pop
dec
sub
lock
imul
mov
les
mov
jne
inc
ds
and
mov
clts
not
add
in
fmul
xor
into
mov
ret
popa
bound
ror
xor
add
bound
(bad)
daa
jo
and
xchg
bound
call
adc
popf
pop
jmp
xor
mov
pop
loope
push
mov
cmp
je
and
mov
sbb
inc
pop
nop
cld
adc
jmp
sbb
or
push
mov
or
loopne
pop
fmul
ins
aas
mov
test
js
mov
mov
movs
popa
dec
xchg
cmp
shl
mov
inc
in
cmp
cdq
pop
in
enter
fs
enter
xchg
push
lods
test
sbb
dec
sub
addr16
movs
xchg
and
test
imul
popa
cs
clc
xchg
imul
sbb
movs
and
call
movs
mov
push
cmp
loope
push
pop
or
and
mov
loop
mov
cwde
popa
imul
in
inc
push
cld
and
pushf
xchg
xor
push
jo
sbb
and
xchg
mov
retf
test
pop
(bad)
(bad)
mov
(bad)
(bad)
jl
and
lea
xchg
jo
jb
ret
add
cmp
lock
nop
xchg
adc
nop
in
jne
xor
cs
mov
pusha
sbb
inc
aad
adc
xchg
std
in
sbb
pop
ror
jno
out
lds
repnz
mov
(bad)
cwde
ret
sub
movs
jo
enter
lods
mov
sbb
sbb
or
pop
(bad)
leave
add
dec
and
fmul
ins
movs
jl
enter
cmps
(bad)
cwde
inc
adc
xsha1
cmps
or
mov
cmps
imul
mov
pmulhuw
pushf
jae
nop
addr16
and
cdq
inc
ins
xor
fdiv
pop
xchg
mov
and
in
mov
xchg
xchg
retf
ror
dec
pop
xchg
sbb
ss
inc
cmp
imul
and
cld
retf
cwde
cmp
je
xchg
jb
adc
xchg
mov
pop
stos
xchg
test
push
call
inc
aam
add
adc
add
mov
jl
cmp
jg
cwde
clc
sub
dec
popf
push
inc
sbb
mov
mov
push
dec
rol
retfw
mov
fsub
pop
ins
dec
adc
mov
ret
pop
ss
sbb
inc
pop
mov
sub
aad
pop
enter
inc
call
test
dec
adc
add
sub
push
add
xchg
inc
pop
ds
popa
leave
sbb
or
cmps
push
ror
or
sbb
retf
lods
lods
jno
push
adc
in
mov
jns
and
xchg
xchg
jmp
pusha
add
cli
retf
dec
dec
pop
adc
clc
shl
mov
xchg
mov
and
xchg
xchg
mov
push
sub
pop
into
cmp
sub
pop
mov
pushf
repnz
mov
xor
mov
mov
inc
or
jae
fnstsw
xchg
fdivr
jbe
lods
pop
loopne
xor
or
push
test
and
retf
xor
xor
jecxz
add
dec
add
iret
neg
cdq
(bad)
adc
ins
fwait
daa
push
or
out
xchg
mov
adc
pop
iret
pusha
and
inc
cmp
pop
test
aas
pop
syscall
mov
jb
and
xor
mov
ins
sbb
xor
adc
aaa
loopne
iret
pushf
mov
scas
leave
mov
sub
push
gs
and
jmp
push
mov
inc
jle
xor
add
pop
mov
and
mov
dec
mov
or
shl
fst
sub
mov
ja
dec
mov
adc
pushf
add
sub
pop
fstp
or
inc
add
mov
mov
aad
jbe
lea
jns
add
inc
sub
and
adc
inc
inc
sbb
in
lods
pop
loope
push
jle
add
mov
out
cli
outs
push
cmp
inc
je
sub
xor
sub
loope
dec
cmp
dec
inc
and
lds
adc
pop
cmp
or
lea
nop
push
xchg
mov
xor
cmp
fs
in
pusha
add
lock
cmp
inc
push
iret
inc
jno
movs
mov
lods
pop
xchg
mov
add
(bad)
gs
push
adc
dec
mov
push
push
adc
xor
or
adc
retf
inc
lock
mov
xchg
in
pop
pop
rol
in
mov
je
sub
mov
cmp
xchg
or
mov
adc
jo
cmp
sbb
loope
gs
les
stos
je
dec
mov
add
je
and
push
jmp
js
loopne
aam
and
retf
or
adc
in
cdq
pusha
inc
cmp
xor
xchg
mov
loopne
dec
or
push
xchg
dec
inc
mov
neg
xor
and
les
inc
mov
pop
push
jno
mov
xor
sub
or
or
and
dec
dec
sbb
lds
dec
pop
inc
test
les
ror
add
jo
loop
test
inc
pusha
stos
cmp
push
push
mov
mov
push
sub
out
add
inc
sub
cmc
loope
hlt
or
pop
shl
mov
stos
sbb
or
sbb
sub
cmps
and
push
push
ror
(bad)
xchg
jne
mov
push
test
or
nop
in
sub
or
(bad)
adc
dec
out
sub
xchg
stos
jne
and
sbb
aam
sbb
aad
and
xor
or
xchg
pop
and
xchg
sub
xchg
xchg
movs
inc
push
push
hlt
pop
stos
retf
out
movs
xor
mov
call
(bad)
dec
jmp
sbb
movs
sub
push
icebp
scas
xor
int3
mov
rol
sbb
loopne
or
mov
jb
adc
push
inc
add
or
inc
push
mov
lahf
or
sbb
movs
cmp
jne
scas
jo
mov
xor
add
retf
rcr
xchg
pop
adc
jo
cmp
or
xor
mov
int3
xchg
mov
fcmovnbe
adc
pop
jp
pop
fbstp
sub
pusha
pop
aam
ret
xchg
dec
inc
xor
pop
inc
push
jbe
add
hlt
test
sbb
mov
pop
xchg
xor
xchg
sub
sub
rcl
gs
aaa
or
pop
sbb
rol
jns
cmps
rcr
imul
nop
push
dec
add
push
out
sti
mov
out
dec
add
add
adc
inc
pop
sub
jne
cmps
and
inc
mov
mov
mov
sbb
add
pop
sub
inc
je
push
cmps
mov
or
and
dec
sbb
push
adc
adc
xor
adc
and
pop
cmp
mov
sar
cmp
sbb
and
sub
(bad)
cmp
jne
push
xchg
jl
sub
sub
mov
daa
jo
leave
and
add
xchg
xor
add
xchg
adc
call
xchg
pop
pop
jmp
pop
mov
add
je
shr
gs
jne
in
pop
mov
mov
cmp
pop
or
jmp
test
xchg
(bad)
add
xor
(bad)
icebp
pop
movs
in
push
mov
adc
and
sbb
or
fimul
lock
shr
imul
adc
or
adc
aad
aaa
sub
xor
jns
jb
retf
xor
add
sub
xor
or
mov
loopne
shl
push
push
(bad)
neg
push
fmulp
fdiv
mov
and
outs
lods
adc
sahf
dec
mov
or
or
or
push
gs
lds
or
or
or
push
lahf
mov
cmps
mov
push
adc
scas
shr
push
add
cs
adc
add
mov
imul
and
xor
sub
adc
xchg
inc
cdq
dec
sub
mov
push
add
add
loop
push
mov
cmp
sbb
add
dec
or
aas
adc
push
sbb
adc
push
cmc
inc
pop
jne
test
jno
jmp
shr
test
push
jo
inc
mov
dec
jmp
xor
cs
pop
inc
push
inc
mov
push
test
pop
mov
mov
pop
call
dec
sbb
and
test
mov
leave
adc
add
bound
stc
and
mov
loope
add
fdiv
xchg
xchg
icebp
xchg
pop
loopne
and
and
(bad)
or
mov
push
adc
pop
rol
test
dec
clc
cmps
mov
es
mov
push
add
pusha
jo
shl
jmp
sbb
adc
and
sub
add
fwait
ror
and
or
fwait
sbb
mov
cli
xor
je
inc
sub
xor
dec
stc
je
dec
sub
pop
loope
cmp
mov
jnp
sti
pop
inc
jb
xchg
or
jmp
push
or
and
inc
(bad)
outs
je
push
ret
stos
ret
cmp
in
fcmove
shl
push
out
pop
test
pop
xchg
mov
das
pusha
jo
or
adc
fsub
(bad)
sar
sahf
adc
pop
jne
sbb
xchg
mov
push
pop
and
movs
mov
call
dec
sbb
xchg
or
dec
and
sub
sbb
mov
imul
arpl
jbe
retf
cs
test
xor
sbb
sbb
cs
je
jne
jne
cdq
cmp
jne
dec
mov
mov
neg
jne
je
xchg
sbb
dec
nop
mov
xor
das
dec
jmp
cmps
mov
lods
in
(bad)
jno
adc
push
cmp
xchg
xchg
xchg
xchg
cmp
cmp
pusha
gs
mov
jo
jo
jo
xor
iret
add
ret
pop
test
retf
retf
or
mov
jg
jge
es
sub
jmp
add
add
pusha
inc
ficom
mov
or
jle
adc
mov
push
push
adc
lahf
mov
ss
scas
outs
and
pop
adc
xchg
mov
dec
js
mov
nop
xor
and
mov
push
cmp
scas
pusha
nop
dec
mov
nop
xchg
aas
fsubr
jae
in
pop
out
arpl
add
sub
and
mov
fcom
mov
or
sub
adc
int3
js
cs
ins
fs
mov
add
out
cmp
pop
daa
mov
popa
popf
out
mov
push
cdq
pop
jl
inc
adc
sub
ret
scas
push
push
xor
add
or
adc
push
sub
ins
or
and
sub
mov
mov
mov
mov
and
cmps
iret
mov
sahf
popa
pop
not
das
(bad)
in
push
int
add
ror
cmp
xchg
adc
mov
rol
push
movs
movs
push
sbb
rcl
pop
dec
push
or
dec
push
into
xchg
cld
and
out
or
add
test
xor
jbe
lods
dec
aaa
add
pop
dec
pop
dec
inc
adc
test
shl
inc
xchg
add
in
push
or
shl
pop
add
aaa
and
stos
test
add
out
jmp
fld
dec
push
test
jne
inc
mov
outs
jae
push
mov
cmp
outs
pusha
sub
add
dec
jmp
aas
mov
iret
arpl
and
or
mov
shl
sbb
and
jbe
jg
or
jb
xchg
sysret
mov
jmp
dec
pop
dec
jle
xchg
outs
pop
cmps
outs
dec
and
push
add
or
fwait
push
push
jp
and
sub
das
or
imul
add
adc
in
sbb
scas
adc
pop
fcmove
sbb
and
cmp
bnd
and
loopne
cdq
sbb
pop
xchg
mov
add
push
bound
mov
pop
sqrtps
pop
add
imul
xchg
add
pop
and
outs
rol
sar
mov
inc
or
push
test
mov
outs
mov
mov
daa
add
outs
add
jae
pop
rcl
push
pop
imul
cs
and
xor
call
js
or
jmp
jg
dec
ret
icebp
lods
stos
adc
add
add
test
inc
push
inc
pop
mov
fld
jmp
fild
out
mov
and
imul
dec
jmp
mov
(bad)
and
and
sub
jae
imul
inc
sbb
sbb
leave
add
int3
fist
xor
or
and
add
add
out
or
dec
jae
sbb
(bad)
or
xchg
pop
add
pop
sub
enter
jecxz
mov
add
xchg
or
and
(bad)
retf
inc
js
xor
push
sub
xor
test
imul
mov
loopne
inc
rcl
and
push
mov
loopne
adc
sub
mov
pop
cld
add
mov
outs
test
push
add
cli
loope
sub
dec
dec
push
inc
out
rol
push
test
inc
loop
pusha
inc
push
pusha
fld
push
inc
or
inc
xchg
adc
icebp
sbb
les
retf
lods
jns
(bad)
and
jmp
and
dec
inc
sub
pop
lahf
mov
add
mov
or
retf
mov
adc
mov
cld
add
push
arpl
xor
ins
jecxz
sbb
xor
aam
mov
ins
outs
push
mov
cmps
dec
lods
mov
popa
pusha
jne
daa
icebp
or
add
mov
adc
fs
xor
lahf
cmc
adc
add
enter
add
xchg
ins
mov
les
sbb
rol
sti
stc
fidivr
test
or
sub
jns
xor
adc
daa
add
mov
xor
hlt
pop
sbb
out
jb
mov
loopne
mov
or
loopne
xchg
add
xchg
xor
or
inc
or
dec
add
mov
and
sahf
and
jle
mov
push
and
mov
xchg
dec
cdq
movs
pop
jo
sub
dec
sub
movs
cdq
movs
push
xor
movs
cdq
movs
pop
cmp
jb
imul
mov
inc
dec
add
stos
jg
jo
mov
pop
aaa
add
inc
mov
adc
add
push
fs
lea
test
test
xor
iret
xchg
mov
sub
cmp
out
mov
jo
leave
adc
push
sbb
jge
lods
hlt
mov
cmp
xchg
or
repnz
cmp
inc
leave
pop
sub
and
and
ja
pusha
leave
push
and
popa
push
das
mov
imul
mov
jp
movs
dec
aad
xor
add
add
add
lods
sub
dec
(bad)
mov
xchg
pop
xor
sbb
dec
mov
or
mov
aaa
and
sbb
push
push
push
das
pusha
jmp
push
in
inc
and
cdq
pop
mov
or
and
jbe
popf
xor
adc
cs
pop
sub
fisttp
xor
or
xor
or
int3
(bad)
cmps
loopne
sub
and
push
mov
loopne
(bad)
popa
pop
in
jns
xchg
(bad)
xchg
and
push
gs
fabs
xor
or
pushw
xchg
and
or
push
add
and
mov
mov
jae
or
add
dec
inc
push
ins
popa
adc
and
lds
pop
sbb
push
pop
sbb
push
pusha
pop
push
pop
daa
and
pop
outs
ja
addr16
and
jae
and
jmpw
add
mov
adc
or
xchg
dec
pop
outs
jmp
push
fs
sub
inc
mov
mov
xchg
mov
(bad)
sbb
and
dec
jne
dec
xchg
inc
xchg
jp
mov
push
add
lds
jb
mov
and
aaa
xchg
pop
cdq
dec
imul
dec
or
js
imul
cld
ins
pop
stos
fs
push
dec
out
mov
mov
ins
pop
cmovg
xor
jo
pop
xchg
or
add
xchg
push
js
int3
xor
dec
pusha
xlat
adc
nop
xchg
sbb
adc
xchg
push
add
mov
ins
inc
pminsw
pusha
enter
enter
inc
(bad)
xchg
dec
sti
setns
add
in
adc
push
dec
inc
movs
cmp
dec
psrlw
fnsave
jo
xchg
loopne
mov
xor
add
push
sub
and
sub
add
cmps
or
inc
fimul
adc
leave
cmp
mov
add
shr
mov
in
das
sbb
mov
in
test
cmps
(bad)
and
test
sbb
jae
in
out
loopne
lahf
xor
add
or
sbb
xchg
adc
mov
xchg
jb
ss
shr
fcom
jns
das
pushf
into
cmc
das
xchg
pop
cdq
test
gs
xor
push
inc
lods
icebp
sbb
pop
jo
xchg
add
and
js
adc
in
or
int
jbe
cmp
sbb
int
mov
dec
cmp
add
sbb
mov
imul
adc
shl
sar
inc
or
xor
cmp
xlat
push
(bad)
xor
mov
sbb
sbb
ja
stc
jns
cmp
xchg
jo
adc
adc
cmp
aaa
sbb
inc
mov
add
sbb
int
jo
xchg
sub
cli
or
adc
sub
sbb
inc
mov
neg
add
pop
(bad)
bound
add
shl
scas
dec
(bad)
and
push
cs
ret
es
ins
cmp
repnz
int3
jne
dec
add
jecxz
cmp
inc
es
fsub
add
mov
pusha
test
cmp
addr16
inc
xor
inc
sbb
sahf
(bad)
jns
ss
and
ins
sbb
sub
push
imul
pop
mov
xor
push
retf
pushf
sbb
ds
test
push
lods
iret
xor
lods
fisttp
push
lods
jmp
repz
push
sub
push
shr
jo
aad
mov
adc
mov
arpl
or
fwait
pop
es
cdq
cmp
sub
jmp
inc
and
mov
push
add
data16
ss
mov
rcl
and
sbb
or
mov
je
inc
xchg
(bad)
dec
fwait
jg
ins
mov
cmps
arpl
ja
pop
shr
inc
out
and
jnp
sbb
push
addr16
bound
mov
test
ror
sbb
or
rcr
pop
add
cmp
dec
sub
mov
dec
xor
xor
pop
data16
adc
and
xor
in
dec
adc
inc
call
pop
pop
cwde
mov
retf
add
outs
ret
out
push
cmp
adc
retf
mov
int3
adc
clc
enter
nop
mov
adc
ss
enter
dec
adc
fsub
(bad)
(bad)
mov
fiadd
xor
jle
dec
or
sub
movs
sbb
mov
add
adc
outs
xchg
sub
test
jmp
(bad)
xor
and
xchg
xchg
cmp
xor
add
int3
and
jl
cs
mov
sub
sub
push
xor
xor
pop
ret
push
(bad)
ja
xor
or
sub
adc
pop
mov
add
adc
add
ins
sbb
mov
sub
add
mov
cmp
mov
mov
dec
sub
call
lods
adc
sub
jge
in
push
cdq
cwde
in
xor
in
movs
popa
cmps
or
test
or
cmovs
mov
outs
movs
jnp
and
lahf
mov
add
and
movzx
push
popa
inc
xchg
push
sub
cmp
mov
dec
inc
xor
pop
adc
pop
imul
mov
cmp
mov
and
xor
ds
movs
sbb
fisttp
push
add
add
add
ins
pop
sti
or
das
pop
and
sbb
out
test
sbb
les
push
mov
mov
mov
shl
push
and
mov
outs
or
ror
sub
inc
bound
gs
and
(bad)
popa
xor
push
pop
sub
leave
or
and
jnp
xor
dec
xchg
xchg
mov
stos
pop
mov
pusha
cmp
test
cdq
push
sbb
add
add
sub
cmp
push
inc
add
or
cmps
lea
cmp
lock
js
pop
aaa
js
mov
jg
gs
xor
mov
mov
add
cmp
fadd
arpl
adc
cld
push
mov
aaa
push
idiv
retf
scas
xchg
dec
mov
dec
rcr
or
mov
shl
lods
loopne
popf
xor
rcr
push
dec
cld
stos
sub
enter
add
cmp
and
sub
cmp
adc
nop
or
mov
test
mov
in
clc
mov
rol
ja
add
leave
sub
jecxz
dec
enter
adc
xchg
cmps
lock
xor
mov
in
stc
jno
xor
sub
int3
mov
cdq
int3
add
cmp
xchg
fwait
sbb
adc
rol
push
pop
rol
cmp
add
test
add
mov
add
pop
cmp
scas
push
movs
and
pop
out
call
movs
sub
or
jbe
dec
or
dec
fs
aaa
mov
mov
xor
jnp
aaa
mov
mov
pop
jo
xor
std
in
mov
fldlg2
inc
ficomp
xlat
push
and
ret
cmp
cmp
xchg
(bad)
and
aas
pop
das
(bad)
inc
cdq
(bad)
cmc
lea
dec
add
fisub
bound
call
sbb
bound
sub
inc
dec
adc
in
cmps
or
(bad)
or
or
mov
call
xor
adc
inc
mov
nop
jne
clc
adc
jae
mov
daa
and
push
dec
add
ins
add
mov
(bad)
xor
ficomp
dec
and
sbb
aas
pop
ins
and
(bad)
push
sbb
dec
int
jge
mov
xlat
xlat
cld
sbb
enter
cmp
imul
hlt
aad
or
mov
add
sub
dec
push
xchg
and
in
push
sub
movs
test
jae
jb
lds
pushf
and
lahf
xor
inc
aad
push
inc
fisub
nop
or
cmp
sbb
pop
push
inc
in
stc
push
jb
pop
cmp
and
adc
push
adc
cmp
cmp
cmp
xor
cmps
movlps
mov
jno
mov
add
pusha
adc
loopne
adc
push
push
sbb
js
sbb
addr16
outs
pop
aam
xchg
and
mov
daa
mov
cmp
sub
test
xchg
nop
jo
fs
loopne
hlt
sub
pop
rol
enter
pop
add
pop
(bad)
mov
sbb
adc
push
aad
cmp
jmp
pop
cs
lock
rcr
scas
fldenv
stos
mov
push
mov
xchg
fdivr
ins
add
and
shl
jmp
fadd
mov
add
mov
xchg
mov
xor
and
cmp
sbb
and
cld
in
hlt
and
and
inc
js
in
mov
pop
mov
leave
xor
mov
push
and
fistp
(bad)
pop
dec
adc
(bad)
bound
mov
sub
mov
add
mov
repz
sub
nop
dec
ror
sbb
icebp
sbb
mov
es
pop
(bad)
mov
sbb
add
jae
mov
push
ds
cmp
mov
and
cmp
lock
cli
mov
outs
in
daa
gs
cmp
mov
mov
and
sbb
shl
nop
adc
arpl
mov
add
inc
dec
out
clc
push
ds
ss
push
hlt
lock
push
rcl
(bad)
sbb
or
xchg
mov
pop
gs
dec
push
popa
sbb
cwde
push
cmp
dec
arpl
clc
adc
loopne
mov
cmp
cdq
and
cld
cld
cmp
push
xchg
or
adc
mov
pop
enter
test
clc
push
mov
mov
cmp
jmp
sbb
push
fdivr
ss
cmp
test
addr16
add
cmp
add
jae
rcl
xor
fwait
dec
and
or
add
shl
movs
dec
add
xor
fdivr
jg
aas
shrd
add
cmp
mov
cmp
inc
cdq
adc
bound
(bad)
or
add
sar
adc
inc
mov
mov
nop
mov
loope
call
and
sub
in
hlt
ret
popa
cli
or
mov
push
push
xor
xchg
cmp
dec
rol
inc
and
and
or
loopne
xchg
inc
sub
and
test
jae
sbb
push
popa
pop
in
bound
inc
mov
xchg
loope
fs
jl
cdq
loope
fisttp
pop
movs
cmp
jg
fsubr
xchg
cmp
mov
dec
or
and
popa
fdivr
or
pusha
cmps
or
test
repnz
push
retf
das
repz
enter
inc
push
push
call
cmp
out
xchg
or
lods
or
and
xchg
push
ss
jp
out
in
sub
jmp
add
inc
jmp
and
adc
mov
adc
sbb
and
push
sti
push
icebp
dec
or
cmp
pop
pop
adc
or
xchg
test
push
push
jecxz
push
add
add
sbb
je
lods
in
pop
adc
jecxz
jecxz
psrlq
jns
mov
add
cmps
and
push
ja
push
(bad)
popf
ss
pop
xchg
out
adc
sbb
outs
aas
add
sbb
add
sti
mov
pop
sub
stos
inc
popa
cmp
pop
enter
or
mov
ret
addr16
rol
mov
fbstp
sbb
in
popa
xor
je
mov
add
xchg
(bad)
sbb
jno
dec
sbb
push
push
dec
(bad)
mov
add
or
rcr
and
inc
add
mov
sbb
add
arpl
call
in
in
arpl
call
popa
sbb
inc
cmp
call
cmp
xchg
shr
adc
and
and
pop
ins
repnz
lods
cld
rcl
ss
pusha
adc
xchg
neg
clc
shl
sbb
dec
hlt
pop
or
shr
lods
cmp
repz
push
push
mov
jmp
add
add
push
push
scas
push
and
ja
repz
add
test
add
lods
adc
ins
dec
ds
jmp
jle
ffreep
stos
es
mov
adc
lods
rcl
ins
cmps
inc
sbb
ret
adc
adc
shl
test
add
pop
jb
add
push
add
push
in
cmps
xlat
popa
aas
sti
shl
cmp
add
(bad)
xchg
inc
mov
outs
mov
jmp
inc
add
add
mov
je
and
iret
mov
jo
inc
push
add
inc
mov
ins
ficomp
or
retf
cld
sub
and
ret
push
add
in
mov
cmp
dec
lods
push
xchg
shl
je
sahf
cmp
leave
jmp
adc
call
bound
mov
pop
push
add
add
arpl
das
repnz
scas
xor
add
dec
dec
sbb
ret
jp
in
push
sub
sbb
add
rcr
pop
movs
xor
out
dec
add
ficom
sbb
push
inc
dec
push
(bad)
sub
push
ret
inc
pop
stos
enter
mov
adc
jl
sub
and
sub
and
(bad)
cli
aam
push
mov
add
jo
and
ficom
je
mov
imul
cs
cmp
xor
xor
mov
mov
cmp
shr
movs
int
push
icebp
add
add
push
icebp
pusha
sbb
jo
sub
inc
adc
sbb
test
sub
xchg
dec
lock
nop
icebp
add
(bad)
adc
pop
and
push
pop
add
push
out
adc
and
(bad)
jns
and
pop
ret
shl
icebp
sbb
in
pushf
add
cli
add
mov
xor
stc
fadd
mov
mov
and
mov
mov
jb
mov
push
aaa
xchg
outs
fadd
xchg
cmp
pop
pop
cwde
cwde
cmps
loope
and
or
sbb
add
pop
out
xchg
cwde
pop
add
sub
dec
movs
imul
test
mov
outs
pop
cmps
mov
push
xchg
cmp
mov
mov
repz
mov
mov
test
outs
cmps
sbb
nop
nop
add
add
lds
mov
mov
mov
imul
xchg
sar
movs
out
dec
and
test
cmc
cmp
repnz
add
push
ins
pop
and
sbb
inc
mov
dec
or
sub
mov
lock
cdq
imul
dec
adc
cmc
sub
push
int3
idiv
xor
sub
pop
int
fnsave
jmp
push
sub
outs
mov
xchg
pop
xor
adc
cwde
add
dec
daa
inc
mov
cwde
cmp
xor
movs
out
test
(bad)
mov
add
xchg
inc
retf
cmp
push
jmp
sbb
cmp
mov
mov
in
adc
adc
pop
sbb
pop
dec
inc
push
pop
scas
out
lahf
push
xor
jno
cmp
jg
add
dec
push
jo
sbb
aaa
mov
jg
test
dec
mov
add
cmp
mov
and
ins
sub
mov
mov
adc
mov
pushf
cs
xchg
sbb
push
xchg
jmp
and
sar
xchg
or
inc
and
sub
sub
sbb
dec
imul
inc
jne
and
sub
sbb
sbb
inc
pusha
std
out
mov
into
push
pop
xor
and
mov
lahf
push
add
std
pusha
rcr
mov
pop
add
xchg
xlat
dec
movs
sbb
test
lods
popf
test
dec
pop
xor
(bad)
leave
scas
jmp
lock
mov
xor
inc
xor
test
std
or
xor
xor
dec
push
push
cmp
fcomp
cmps
inc
lods
pop
pop
pop
jge
sbb
lods
shl
sub
inc
pop
mov
push
push
pop
shl
es
test
pusha
loopne
pop
fdivr
popa
or
fwait
ror
bound
ror
nop
out
packuswb
sbb
push
adc
pop
adc
and
fsin
inc
pop
adc
outs
outs
mov
push
mov
ret
add
dec
paddd
fs
sbb
stc
cmp
ficom
jmp
int
fisttp
or
loop
add
mov
adc
add
or
scas
and
add
xchg
push
or
xchg
rcl
inc
icebp
push
mov
shl
aad
cmp
xor
(bad)
lods
xchg
jae
push
mov
push
sbb
xor
mov
mov
or
nop
or
sub
pop
adc
dec
jnp
mov
mov
rcr
sub
ss
les
pop
mov
dec
push
jp
int3
sub
jbe
xchg
dec
pop
data16
adc
aam
pushw
mov
or
or
push
dec
fcomp
cdq
sub
imul
in
and
(bad)
and
xchg
in
into
and
or
cmps
hlt
inc
lods
clc
and
(bad)
sub
jne
lods
test
lods
add
sub
and
xchg
faddp
lods
or
lods
sub
sub
xchg
mov
dec
movs
mov
jmpw
and
mov
daa
mov
cmps
pop
add
outs
jmp
movs
aaa
je
add
outs
call
dec
fld
test
in
pusha
xchg
pop
dec
dec
nop
xor
cmp
and
pop
in
pop
imul
push
jns
out
cmp
pop
daa
push
adc
pusha
push
add
iret
ins
push
fs
popa
and
xor
and
jo
xor
push
cli
rcr
jmp
sub
jae
jl
pop
ds
lods
cmp
scas
xor
adc
fs
ja
inc
xor
add
xor
xlat
inc
repz
mov
inc
outs
xor
xor
dec
sahf
cmps
mov
ins
ja
and
sahf
fst
dec
push
push
outs
jmp
lods
dec
adc
push
in
mov
xor
add
xor
popa
test
dec
xchg
add
ss
adc
xchg
and
mov
jge
mov
aam
xchg
aam
test
jbe
int3
jb
push
arpl
mov
xor
mov
and
je
in
jp
add
mov
xor
add
cs
imul
add
inc
mov
cvtps2pi
push
add
sbb
dec
movs
popf
jecxz
sub
rol
pusha
sub
mov
sub
pop
sub
jne
xchg
popa
call
mov
and
movs
sbb
sbb
repz
ins
push
sub
cld
sbb
inc
push
inc
in
popa
les
popa
jns
stc
dec
loopne
popa
fcomp
add
and
and
mov
sub
cmp
test
dec
and
jns
jns
and
and
xchg
dec
inc
or
sub
pusha
pop
popa
mov
rcl
popa
jo
popa
or
sub
cmp
sub
movs
sbb
xchg
adc
lods
xor
sbb
xor
lods
ret
(bad)
jmp
stc
sahf
inc
mov
popa
fcomp
popa
xor
mov
sti
adc
mov
add
dec
inc
push
sti
arpl
and
inc
pop
cmc
mov
and
mov
adc
lock
ret
push
add
jo
jp
inc
and
(bad)
loopne
inc
add
sub
sahf
popa
push
cs
ret
mov
mov
pop
xor
pop
jo
(bad)
mov
movs
adc
sub
sar
sub
mov
push
pushf
sub
mov
mov
pushf
sub
and
(bad)
cmp
add
nop
sub
mov
popa
and
and
xchg
add
sub
sbb
stc
leave
aaa
and
dec
sbb
popa
sbb
pop
sbb
cwde
xchg
std
pop
adc
xor
push
(bad)
xor
lods
dec
pushf
adc
das
pushf
in
jo
enter
sbb
repz
aad
nop
and
shr
adc
or
popa
adc
add
fcomp
popa
test
popa
push
repnz
pop
and
push
popa
adc
enter
popa
or
popa
inc
cmps
or
mov
add
pop
sbb
rcl
sbb
add
jmp
test
int
movs
lods
dec
push
push
pop
int
add
fwait
into
or
dec
(bad)
mov
mov
outs
xchg
das
ds
movs
push
mov
gs
jmp
inc
push
pop
imul
mov
mov
adc
pusha
xor
stos
hlt
das
push
add
inc
dec
dec
xor
rcl
inc
call
aam
or
fcmovb
inc
out
inc
add
adc
cmps
and
fistp
pop
call
data16
xor
sar
add
imul
es
gs
jmp
pop
nop
sbb
pop
adc
lea
push
dec
imul
jg
mov
or
test
add
or
repz
rcl
mul
adc
mov
jne
push
add
(bad)
xchg
fisttp
es
addr16
loopne
leave
adc
fbld
stc
mov
adc
xchg
aas
fidiv
or
arpl
mov
dec
and
and
test
pusha
push
or
lods
xchg
aas
sub
adc
in
fcom
je
addr16
jmp
movs
mov
imul
dec
xor
inc
sbb
test
cmc
mov
test
movs
and
out
sub
nop
movs
cdq
data16
(bad)
or
sbb
mov
ja
and
call
adc
fcom
pop
dec
mov
(bad)
out
ss
sbb
xor
xor
and
(bad)
cld
adc
mov
adc
or
dec
lock
sub
or
adc
pop
push
push
and
or
dec
xchg
test
ss
or
(bad)
inc
cmp
mov
cld
or
adc
sbb
xlat
pusha
or
in
sbb
xor
add
and
xor
and
add
and
xor
add
sbb
xchg
or
push
push
sbb
pusha
add
add
add
cwde
inc
push
fs
sbb
movs
int3
rcl
inc
arpl
or
pop
js
nop
pop
rcl
out
push
cmps
mov
add
sbb
pop
xchg
pop
into
mov
fst
ins
js
or
test
cmp
mov
push
sub
sbb
lea
jne
dec
and
pop
xchg
jno
cmp
and
test
xchg
adc
inc
hlt
inc
outs
or
outs
clc
mov
sbb
sbb
test
sbb
fucomp
sub
or
and
adc
cmps
mov
jmp
aam
loop
push
pop
dec
fidiv
ffreep
es
bound
pop
jb
test
ins
dec
sbb
js
add
ds
clc
popf
adc
jge
push
xor
inc
ja
and
xor
push
push
jne
popa
clc
clc
cmovno
adc
js
les
adc
dec
mov
mov
jl
popa
push
inc
ins
sub
inc
inc
pop
xor
repnz
push
pop
inc
out
mov
jecxz
pop
test
mov
pop
test
in
mov
in
inc
sub
xor
mov
call
sbb
test
enter
sar
pop
mov
push
jmp
or
adc
fiadd
test
data16
add
xchg
xchg
inc
and
test
stos
js
mov
and
lods
ror
sub
and
(bad)
aaa
into
mov
aas
call
out
fistp
pop
rcl
pop
lahf
fstp
push
adc
stos
nop
loope
add
sub
cmp
sbb
push
cld
push
jno
mov
scas
mov
add
dec
and
(bad)
adc
imul
aas
inc
inc
loope
popa
les
lds
add
add
dec
mov
mov
add
inc
movs
or
add
ds
ins
mov
or
ins
enter
push
(bad)
or
adc
sar
pop
sbb
ja
push
enter
js
popa
add
es
inc
test
in
and
aad
jne
sbb
movs
adc
push
aad
cmps
js
inc
loope
dec
mov
retf
inc
inc
or
and
and
es
in
cmp
sub
xor
jmp
je
sbb
pop
pop
daa
adc
lods
dec
jle
cs
mov
push
push
outs
mov
stos
es
or
xchg
nop
jnp
push
or
mov
daa
popa
sbb
shl
and
les
test
jecxz
lahf
mov
mov
sbb
cmp
ss
push
cmp
aam
or
pusha
mov
fld
mov
ins
pop
pop
addr16
data16
(bad)
jno
xlat
fisub
hlt
xor
or
add
sbb
shl
mov
fisttp
mov
inc
pop
and
xor
cmp
ins
or
enter
add
call
or
sub
add
sub
mov
dec
mov
add
cmp
ss
outs
pop
push
push
cmps
inc
and
xor
cmp
test
mov
mov
and
jmp
sbb
loopne
sub
inc
dec
js
pop
jl
and
adc
inc
pop
inc
pusha
stos
mov
mov
adc
and
shr
add
jmp
sub
fs
ret
cmp
dec
sbb
xchg
adc
push
mov
push
leave
mov
mov
mov
dec
ret
fdiv
test
jmp
pop
and
test
sub
push
add
add
lock
ret
dec
or
fs
adc
lea
mov
ret
jo
or
add
test
les
pop
or
addr16
retf
pop
ins
cmp
lods
cmp
jb
jo
ins
cmp
lahf
imul
dec
cmp
les
je
inc
sub
inc
push
lea
push
repnz
add
in
in
movs
sub
dec
and
hlt
push
jg
inc
sahf
pop
retf
lock
sar
push
add
inc
les
dec
jg
adc
push
inc
jge
ss
sub
shl
adc
clc
sub
mov
js
stos
inc
jge
clc
pop
sub
pop
lds
add
stos
jecxz
popf
pop
call
sub
adc
and
loop
inc
inc
cmp
mov
loopne
add
out
pop
cmp
sbb
and
xchg
call
xor
push
repnz
shl
jmp
fwait
cmp
cmps
(bad)
(bad)
daa
pop
sbb
call
xchg
les
inc
mov
jo
push
mov
lahf
xchg
pushf
xor
or
mov
and
adc
add
sahf
inc
inc
pop
push
xor
add
addr16
ss
adc
pop
and
add
dec
hlt
pop
nop
les
in
xor
std
sub
cmp
xor
cmps
in
mov
fadd
or
jmp
out
mov
inc
add
mov
or
outs
push
fiadd
inc
cs
and
test
sub
jle
shl
mov
dec
sbb
push
das
and
adc
push
inc
in
gs
out
sar
xor
aad
enter
mov
call
push
ret
adc
jae
iret
lock
xor
loop
xchg
jne
out
in
mov
fdiv
(bad)
jge
xor
sbb
push
fidiv
ror
sub
dec
(bad)
mov
in
loopne
imul
and
cmp
xchg
sbb
cld
xchg
xor
xchg
mov
xor
bound
rcl
les
loopne
add
bound
xor
jo
cmps
cmps
push
xchg
jecxz
mov
xor
cmp
mov
add
or
jne
fisub
and
mov
xor
lods
xor
or
pop
xchg
add
das
cmps
inc
ror
shl
je
xchg
bound
or
sub
dec
arpl
mov
adc
push
xor
and
mulps
add
push
out
(bad)
xor
push
dec
and
or
pslld
jmp
jbe
add
mov
inc
and
add
(bad)
sbb
mov
rol
mov
movs
dec
sub
dec
jg
jl
mov
push
xor
inc
add
in
and
add
push
call
add
mov
ins
and
jbe
jge
bnd
inc
outs
xchg
ret
(bad)
mov
push
inc
add
xor
inc
mov
jmp
mov
jo
mov
sub
sub
xchg
mov
nop
fs
cwde
add
lods
ss
cs
data16
loopne
fmul
push
pop
fwait
out
xor
loopne
pushf
call
sar
int
mov
ins
fstp
inc
sbb
in
rcr
sbb
addr16
dec
hlt
xor
int
loopne
int3
(bad)
adc
jl
cmp
enter
hlt
dec
(bad)
cmp
jnp
cmp
cwde
pop
push
test
mov
pushf
dec
enter
dec
add
push
dec
sar
lahf
into
nop
xchg
cmps
ror
mov
pop
repnz
push
out
pop
pusha
dec
out
xchg
jl
ss
int3
cld
jns
cmps
fidivr
and
idiv
sub
lds
jbe
movs
outs
ror
les
(bad)
sti
mov
ds
ror
les
fsubr
and
and
sub
js
ja
xor
out
int3
jle
shr
push
add
dec
iret
loopne
push
sub
test
popf
cmps
mov
ror
pop
aas
(bad)
sub
rcr
add
pop
push
lahf
(bad)
jle
jns
sar
push
ss
and
push
outs
loopne
jns
jns
sub
sar
push
and
add
lahf
jg
and
movs
or
push
das
lahf
out
fild
dec
sub
sbb
in
xor
repz
stos
ins
outs
add
outs
rcl
sbb
dec
mov
and
push
mov
outs
mov
mov
push
ds
call
mov
(bad)
enter
stos
pop
add
inc
enter
mov
mov
aas
mov
repz
push
fnstcw
adc
cld
sbb
fwait
xchg
dec
mov
test
(bad)
das
sub
movs
in
fdivr
lahf
popa
out
cmp
cmp
push
movs
(bad)
es
rcr
push
dec
bound
sub
push
pop
outs
sar
sub
fwait
dec
push
sub
push
push
js
hlt
cld
xor
je
pop
jle
sti
jne
mov
jg
cs
popa
aad
cs
or
or
rcr
inc
mov
inc
jbe
push
xor
lock
adc
cwde
addr16
out
in
call
fs
fwait
out
fs
xchg
icebp
jbe
push
call
jae
repz
test
push
cmc
das
pop
pop
and
pop
add
inc
adc
repz
pop
mov
out
popa
xor
rcr
cmp
push
test
call
mov
fidiv
and
cmp
fs
and
push
inc
pop
(bad)
out
imul
in
cld
push
xchg
xor
add
sbb
int
push
cmp
inc
aaa
nop
movs
sbb
scas
dec
repz
sti
jae
dec
sbb
in
adc
or
jns
xor
jo
in
daa
iret
pop
push
mov
rcr
in
jnp
out
clc
movlps
sub
pop
push
mov
lods
rcl
xchg
enter
adc
lahf
ja
push
mov
adc
xlat
adc
mov
pop
lock
inc
add
test
cmp
sbb
xor
addr16
pop
sbb
cwde
sahf
lods
pop
stc
pop
ins
and
out
sub
inc
mov
int
push
and
aaa
push
cmps
mov
mov
in
repz
hlt
adc
fstp
movs
lahf
pop
fidiv
push
enter
fmul
adc
mov
inc
(bad)
clc
xor
pusha
push
push
psubusb
int
mov
push
ja
mov
xchg
es
lods
push
test
jp
mov
sub
push
scas
retf
aad
push
das
into
inc
into
add
or
adc
aaa
jne
sahf
pop
push
pop
cmp
dec
lock
outs
outs
fimul
shr
and
cmp
push
das
imul
jmp
xchg
das
lods
push
enter
jae
loopne
clc
mov
or
sub
fbld
add
pop
mov
mov
and
inc
pop
ror
inc
aad
mov
popf
pop
inc
(bad)
pop
sub
cmp
lock
je
mov
fadd
push
inc
rol
daa
mov
xchg
add
mov
push
adc
xor
imul
pop
repz
out
rcr
movs
cld
out
sahf
out
retf
sub
lods
iret
repz
hlt
ins
int3
mov
jns
int
int3
in
mov
imul
mov
pop
cmps
pop
mov
cmp
jnp
cwde
outs
pop
mov
mov
cmp
(bad)
push
pop
pusha
and
mov
jae
popf
push
push
dec
fs
mov
pop
jl
data16
out
cdq
fmul
add
pop
dec
rol
enter
fwait
ret
cmp
add
mov
ds
pop
mov
push
enter
data16
leave
dec
retf
retf
push
inc
int3
sti
xor
out
push
cwde
int
into
hlt
mov
rcr
shr
push
(bad)
shl
fcom
inc
pop
jo
pushf
jge
and
enter
daa
dec
xlat
fldenv
mov
fadd
aam
ja
fs
ficom
push
sub
sbb
sahf
cmp
fs
fwait
in
loopne
out
jmp
lock
dec
jnp
push
loopne
ins
jae
lds
dec
mov
xchg
fdivp
test
fidiv
or
sysret
ins
ss
pop
xor
mov
mov
mov
in
in
shl
movs
mov
fs
and
fs
pushf
mov
mov
mov
dec
(bad)
xchg
xchg
and
inc
pusha
pop
popf
in
mov
push
mov
pop
mov
cmp
mov
and
adc
xchg
aam
add
es
and
sub
sub
and
sti
jo
inc
sete
inc
lock
mov
addr16
cmp
pop
setl
or
ins
test
shr
xchg
das
movs
xchg
dec
sti
mov
std
push
xchg
push
cld
movs
mov
xor
xchg
dec
xchg
hlt
cbw
inc
data16
dec
or
cdq
push
pushf
call
enter
pushf
sahf
pop
popf
nop
popf
fsub
cmp
pop
push
popf
in
jge
xor
push
xchg
in
cmps
(bad)
stos
mov
pop
mov
push
cmp
shl
mov
cmp
mov
xchg
mov
inc
mov
pop
and
mov
push
inc
enter
sub
vmread
movs
fbld
loopne
call
or
in
sbb
imul
repnz
push
clc
in
cli
dec
cmp
cld
xor
out
push
js
aam
std
pop
push
add
mov
push
fwait
dec
sti
ds
cmp
push
enter
add
out
xor
hlt
test
pop
push
sbb
fnstenv
fwait
pop
aam
cmp
outs
sub
or
fidiv
jnp
sysret
xchg
and
les
call
(bad)
inc
mov
sub
leave
fldenv
fsubr
xchg
hlt
das
adc
cmp
(bad)
jo
mov
clc
addr16
jg
inc
xor
xor
aas
out
enter
aam
(bad)
dec
mov
test
adc
push
adc
xchg
dec
pop
pop
jp
jl
xchg
dec
call
push
inc
dec
fisttp
dec
hlt
out
popf
push
fmul
lds
inc
pop
jecxz
push
pushf
push
mov
xchg
mov
outs
push
js
or
fmul
or
test
or
fist
push
push
pop
addr16
hlt
cmp
fisub
mov
test
outs
ds
fwait
in
fnstenv
jl
je
movs
jbe
js
xchg
in
data16
sbb
mov
adc
push
jl
ds
mov
lea
fdiv
(bad)
cmps
int
jnp
add
mov
fwait
ins
repz
cwde
call
mov
loopne
test
xchg
scas
fidivr
addr16
mov
rol
retf
ss
or
into
pop
iret
mov
js
enter
xlat
test
or
jnp
mov
adc
inc
(bad)
xor
aaa
xchg
mov
inc
out
fcom
inc
mov
mov
in
jns
mov
push
inc
loope
push
dec
repz
loop
fmul
clc
loop
in
add
into
xchg
fwait
in
outs
jne
in
push
xor
pop
lock
add
cmc
xlat
mov
pop
pusha
cmps
std
adc
stc
push
cwde
cmps
fnstenv
pop
jae
cli
sbb
mov
xchg
cld
sahf
cmp
pop
dec
inc
loopne
push
push
daa
sti
mov
lods
add
rcr
inc
add
mov
push
sub
test
loope
pop
psubusb
push
clts
fnstenv
addr16
test
adc
mov
sbb
fistp
sbb
pushf
sbb
push
pop
sbb
hlt
ins
push
add
movs
mov
mov
push
mov
out
and
or
push
call
loop
and
out
cs
mov
lods
and
push
nop
sahf
out
cmp
hlt
cmp
pop
xchg
into
sahf
in
jge
dec
ficomp
or
fs
push
mov
ins
jae
jns
ss
rol
jl
cmp
test
test
test
cmp
xchg
int3
shl
rol
add
and
ins
(bad)
cmp
inc
iret
je
and
pop
mov
inc
sub
pop
add
inc
add
mov
jo
xor
or
mov
in
mov
sbb
int
call
xchg
or
jo
mov
mov
call
test
mov
lock
cmp
shl
int
jnp
mov
shl
fnstcw
retf
fs
cmps
inc
int3
mov
sahf
in
into
push
sbb
ror
(bad)
ins
(bad)
outs
fild
and
push
inc
out
mov
ja
push
cld
call
push
jle
push
push
sahf
jge
jge
jmp
push
fsub
in
push
je
dec
cli
pop
add
pop
add
sub
xchg
test
push
jmp
xchg
in
shr
lock
sahf
sub
dec
shl
mov
sahf
in
xor
push
aas
jle
inc
inc
ins
sahf
in
(bad)
sbb
push
or
ins
dec
mov
fxch
push
aam
sub
and
movs
or
aas
rol
sub
xor
int
das
sbb
adc
inc
mov
inc
adc
out
cmp
iret
shr
push
loopne
add
aaa
out
mov
aas
es
aam
dec
aam
popf
dec
inc
mov
add
jmp
iret
test
int3
pop
mov
pop
fldcw
push
push
and
test
shr
pusha
addr16
xor
jo
in
cmp
out
mov
jae
loopne
dec
push
xor
ja
mov
test
push
fild
pop
push
jg
add
add
pusha
sbb
inc
mov
icebp
pop
je
jg
add
adc
push
dec
mov
add
sbb
fidiv
and
inc
les
shl
mov
aaa
(bad)
xor
mov
push
add
push
push
aas
mov
pop
(bad)
push
imul
jns
push
sub
lods
call
inc
call
add
ds
shl
or
mov
dec
pop
int
or
sbb
mov
mov
xor
fs
push
pop
or
or
push
pushf
or
loopne
pop
push
lock
adc
add
fldcw
in
ins
jbe
hlt
cmp
push
sub
mov
cmp
push
aas
dec
push
movs
push
fdivr
jns
inc
push
push
push
call
xor
test
mov
pop
jb
jne
sbb
(bad)
lock
push
les
push
inc
cmps
fnstcw
or
push
dec
out
fldcw
cld
sbb
loopne
mov
js
xchg
jp
in
test
or
dec
test
adc
mov
mov
shr
sub
push
movs
sub
addr16
loopne
clc
xor
cmp
es
fadd
xchg
mov
mov
mov
push
mov
mov
jbe
js
jns
clc
dec
sar
das
and
or
(bad)
push
push
sub
push
imul
and
sub
push
add
xor
out
jbe
ds
push
jo
arpl
aas
icebp
shl
push
mov
rcr
jl
sbb
mov
out
cmp
call
mov
(bad)
push
fld
out
retf
retf
sbb
push
into
ror
and
dec
imul
movs
and
mov
push
mov
sbb
fs
(bad)
push
sbb
push
add
ins
lahf
ja
jmp
clc
pop
and
imul
std
call
add
add
pop
inc
push
das
add
add
fisttp
aam
and
push
jo
ds
repz
mov
lock
dec
(bad)
fbld
or
mov
in
sbb
pushf
push
inc
sub
mov
push
mov
xor
aaa
pusha
mov
fwait
int
inc
clc
inc
push
dec
xchg
dec
shl
mov
loopne
dec
ds
sbb
repz
xor
dec
mov
jne
add
pop
push
mov
mov
push
fdiv
inc
push
call
movs
pop
push
hlt
iret
data16
rcl
pop
test
pop
pop
call
xchg
pop
xor
sub
call
je
ficom
enter
fcmovb
or
jp
add
call
add
(bad)
cmps
test
sbb
mov
and
fld
jo
push
sahf
aaa
test
(bad)
lock
test
add
ret
iret
sub
pop
jge
je
iret
mov
stos
adc
inc
jnp
add
or
sub
jg
xchg
(bad)
imul
int
stos
and
push
adc
push
push
mov
mov
into
out
js
xor
sub
ret
add
add
dec
or
add
ins
mov
add
and
(bad)
and
bswap
cmp
nop
inc
xchg
fwait
dec
mov
test
jo
in
call
ds
sahf
jbe
shr
mul
movs
push
mov
dec
int
mov
add
mov
call
inc
rol
push
(bad)
adc
add
push
jg
xor
outs
push
add
and
(bad)
push
jl
sbb
push
cmp
push
clc
push
ud2
mov
adc
pop
and
push
call
cld
and
es
pop
daa
cwde
data16
jl
sub
inc
jnp
int
inc
int3
inc
rol
out
jg
xor
push
dec
jnp
jnp
je
push
rcl
xor
repz
nop
sbb
lods
inc
ret
jns
sti
xor
(bad)
les
lds
mov
cwde
les
fwait
int
(bad)
push
mov
js
push
fnstsw
ficomp
and
aam
adc
pop
jae
cmp
push
int3
jmp
cmps
fnstcw
cwde
icebp
clc
dec
repnz
imul
push
adc
ds
cmc
push
jo
cli
cmps
xor
(bad)
cmp
push
add
aam
add
xor
dec
(bad)
push
mov
adc
sbb
sti
mov
(bad)
sbb
jno
in
adc
(bad)
sub
push
xchg
fs
dec
jecxz
xchg
push
xchg
push
je
pushf
call
pop
dec
movs
int3
cmps
(bad)
sbb
mov
or
aaa
lods
or
cmp
mov
icebp
dec
mov
push
and
adc
xor
aam
pop
push
fs
sbb
addr16
and
inc
jge
mov
or
adc
lahf
std
pusha
jl
jl
ret
mov
(bad)
fwait
dec
enter
xbegin
push
enter
xor
push
hlt
ja
and
es
jo
int
adc
into
test
fcomp
iret
push
sbb
sar
iret
sar
mov
cld
push
aam
push
fsubr
lock
in
fwait
jge
pop
in
nop
push
lods
jmp
fist
push
out
js
push
mov
test
clc
cli
scas
cld
pop
xchg
in
daa
adc
pop
cwde
mov
ffreep
ss
daa
loopne
xor
ja
shr
ja
jns
and
lock
outs
test
int3
test
adc
xor
out
mov
icebp
sar
data16
dec
and
and
cmp
fadd
pop
sbb
xchg
cmp
shl
pushf
out
or
push
adc
cmp
and
aaa
ins
and
xchg
in
pop
mov
add
xor
imul
not
mov
jbe
push
pop
and
call
xor
int
out
push
hlt
xor
mov
or
lahf
pop
dec
or
cmps
movs
mov
xchg
test
stc
push
pusha
and
inc
out
aad
rcr
fild
test
mov
ins
xchg
sub
fwait
int
shr
mov
jo
push
mov
shr
mov
(bad)
clc
loopne
movs
imul
(bad)
xchg
push
xchg
xchg
popw
adc
into
cmp
dec
push
sbb
pop
lahf
cmps
ins
or
pop
mov
jp
test
je
out
mov
push
inc
icebp
adc
xchg
add
loop
pop
ret
scas
mov
jl
iret
sub
pop
mov
pop
pcmpeqb
clc
inc
sbb
and
inc
repnz
pushf
popf
sbb
pmulhuw
adc
or
shl
sub
(bad)
fld
dec
jnp
unpcklps
pop
retf
das
push
jmp
push
mov
sub
ss
(bad)
cmp
dec
pushf
mov
or
test
sbb
popf
cmps
jne
outs
(bad)
cmp
das
(bad)
ret
mov
lahf
movs
push
enter
sbb
cmp
movs
push
xor
sahf
out
mov
xchg
fdivr
scas
stc
dec
repz
movs
test
movs
pusha
push
and
out
call
mov
call
mov
ja
inc
movs
fist
push
dec
push
ds
lods
xor
es
fidiv
outs
pop
add
aaa
enter
push
cmp
lods
mov
enter
mov
(bad)
inc
cmp
jo
mov
mov
fisubr
mov
mov
mov
xor
ds
outs
fisub
lahf
rcl
ret
mov
cmc
or
push
enter
test
lods
push
idiv
int
push
push
movs
push
sub
scas
ds
jns
pushf
rcr
test
ja
or
ror
cmp
ss
neg
jbe
pop
call
hlt
xlat
cdq
popf
cmp
ds
fimul
dec
stc
xor
out
in
lods
(bad)
fadd
inc
frstor
fisub
loopne
ins
ds
loope
call
in
(bad)
inc
out
call
imul
(bad)
xor
fcomp
mov
out
jle
push
mov
cmp
pop
push
mov
mov
fisub
lods
cmc
dec
test
imul
les
ds
repz
dec
sti
or
mov
std
dec
ja
fld
call
push
fwait
int
add
lock
and
sub
adc
mov
add
je
repz
or
push
clc
lock
call
or
test
int
sar
xor
rcr
les
sbb
out
push
pushf
pusha
sbb
ins
sbb
and
jmp
dec
inc
test
push
push
and
xor
fwait
in
rol
fmul
aaa
cld
cmp
test
pusha
cmp
dec
cmp
repz
cmp
push
inc
or
pop
mov
xchg
inc
hlt
fwait
pop
mov
ret
outs
push
pusha
imul
pop
jg
pop
inc
add
fbstp
pop
paddsb
push
push
rcl
mov
test
pop
and
push
pop
imul
cs
bound
push
es
and
ss
int
and
sub
sub
je
jo
(bad)
in
pop
call
sbb
fsubr
mov
xchg
lock
pop
lods
int
repnz
outs
inc
sbb
cmp
sub
push
mov
pop
pmuludq
xor
inc
data16
shl
enter
pusha
xor
je
cld
and
pop
cmps
inc
and
pop
sbb
fwait
adc
push
mov
sbb
push
pop
aas
sub
pop
(bad)
inc
test
repnz
aam
(bad)
clc
in
xchg
pop
test
xlat
dec
add
and
push
adc
movs
push
(bad)
(bad)
inc
popf
nop
fcomi
add
pop
adc
imul
cmp
pusha
or
adc
test
gs
arpl
jnp
sub
fs
arpl
or
xchg
test
inc
push
dec
nop
dec
or
imul
xchg
ins
jo
js
mov
pop
mov
cmc
jge
adc
sbb
setns
leave
inc
mov
push
and
gs
adc
gs
dec
test
sbb
shl
imul
jmp
and
push
inc
ret
sbb
and
xor
popa
ficom
inc
mov
xchg
cmp
adc
mov
enter
sbb
mov
fwait
ror
mov
loope
mov
(bad)
inc
mov
or
or
ins
sub
push
stc
(bad)
test
add
dec
push
xor
add
pop
adc
push
push
mul
mov
push
imul
or
ins
sub
fdivr
push
mov
jp
enter
dec
jo
push
ret
rcl
or
xor
pop
push
mov
adc
add
inc
add
xlat
inc
loop
add
xor
sbb
xor
dec
stc
sti
pop
mov
fmul
js
ins
pop
mov
mov
add
fnsave
out
and
ss
push
mov
ins
sbb
and
mov
stos
retf
in
gs
jmp
sbb
or
test
jo
movs
jno
sub
adc
adc
inc
leave
xor
lods
mov
add
lods
mov
sbb
fstp
or
ins
inc
jne
adc
sub
mov
push
jo
js
(bad)
jmp
cmp
test
popa
cmp
mov
push
jl
popf
jae
(bad)
fcomp
or
mov
or
popa
and
dec
sbb
adc
xor
rol
or
sub
loop
stos
aaa
sbb
in
jo
jae
and
and
adc
jo
pusha
or
mov
add
fild
or
aad
sub
xor
or
fwait
pop
or
inc
inc
pop
add
push
and
pop
cmp
jbe
adc
cmp
ffree
pusha
xor
in
mov
pop
or
scas
jnp
add
push
sbb
cmp
xor
dec
xor
add
add
sbb
int
mov
xor
dec
xor
and
pop
dec
add
xchg
xor
fadd
mov
into
add
sbb
push
test
push
sti
xor
ins
mov
ins
or
dec
and
ret
or
jae
add
pop
or
add
ror
lods
call
jnp
push
pusha
sub
adc
add
add
sbb
add
sub
test
adc
inc
inc
int
ror
pop
imul
test
xor
mov
add
sbb
add
rcr
fild
pop
mov
mov
mov
jmp
pop
ror
mov
popa
mov
and
aam
cmps
gs
inc
retf
rcl
xor
or
dec
mov
adc
aas
or
ficomp
dec
pop
bound
or
pop
ss
inc
dec
pop
or
and
push
pop
push
adc
pop
push
inc
bound
or
adc
add
adc
jl
add
ins
fs
xor
and
popa
pop
push
ja
out
aas
adc
add
xchg
(bad)
and
sbb
xor
add
add
ret
(bad)
out
out
mov
pop
adc
dec
sahf
sub
jge
outs
div
inc
mov
or
xlat
out
dec
jns
adc
jbe
sbb
iret
out
out
mov
mov
jns
mov
fldenv
and
ins
mov
ret
pushaw
pushf
fadd
lods
mov
sub
pop
shl
jo
cmp
js
inc
adc
push
mov
add
inc
pop
xor
xor
cmp
pop
nop
mov
xchg
mov
ret
cwde
rcl
rcl
mov
mov
jno
mov
push
and
int3
(bad)
jp
stc
ffree
add
mov
mov
push
xor
and
mov
push
(bad)
test
dec
or
mov
clc
ficom
mov
scas
add
or
push
sbb
in
cld
dec
mov
or
pop
add
mov
push
(bad)
mov
xor
dec
leave
loopne
sub
mov
das
lods
aaa
data16
cmp
(bad)
jbe
hlt
push
cmp
mov
xchg
cmp
ins
nop
mov
sahf
add
push
xchg
outs
nop
mov
int3
jno
jmp
and
imul
adc
ins
sub
sub
leave
test
aaa
mov
and
and
imul
pop
gs
movs
add
mov
pop
mov
adc
cmp
inc
inc
prefetchnta
mov
inc
rcl
pop
adc
sub
pop
inc
outs
loopne
cld
sti
inc
rcl
stos
sbb
xchg
cld
mov
ins
add
xor
lods
adc
jbe
pop
loope
pushf
addr16
(bad)
fsub
ror
loope
xor
sar
fwait
sub
adc
mov
lods
xor
mov
mov
fistp
push
sbb
fs
pop
jbe
push
test
mov
cld
sbb
or
push
adc
gs
mov
(bad)
xchg
cmp
xor
pop
les
jl
test
cmp
mov
cwde
outs
loopne
xchg
aaa
fwait
xchg
aaa
loopne
in
out
and
pushf
pop
pop
mov
mov
aam
dec
add
add
jno
xor
adc
cmp
add
push
test
movs
loope
ss
dec
and
sub
lds
rsqrtps
je
out
add
adc
adc
call
lock
fadd
push
adc
ret
retf
leave
daa
shl
or
push
(bad)
cmp
test
sti
mov
mov
das
add
clc
add
fld
xor
mov
hlt
ja
enter
add
add
inc
add
xchg
xor
add
out
jmp
and
test
idiv
clc
repz
sbb
leave
clc
add
xchg
mov
clc
add
add
push
add
repnz
add
add
xchg
daa
dec
sahf
adc
adc
adc
jns
in
push
or
or
or
sahf
cmp
mov
and
and
in
xchg
adc
adc
adc
adc
sub
cs
xor
xor
in
xchg
daa
xor
sbb
sbb
cmp
repnz
inc
and
xchg
daa
dec
inc
cmp
ds
jl
and
cld
loope
hlt
daa
pop
or
sub
div
hlt
or
enter
hlt
xor
and
and
and
hlt
or
hlt
hlt
hlt
hlt
or
enter
hlt
xor
and
and
and
hlt
fwait
or
enter
adc
sub
cmp
leave
xchg
daa
dec
dec
ds
aas
dec
pop
enter
push
push
hlt
mov
add
or
leave
xchg
mov
lock
adc
push
aas
add
enter
enter
das
inc
push
jne
dec
jecxz
es
xor
pop
adc
not
sbb
rol
int
mov
shl
sbb
inc
fsub
or
add
daa
(bad)
retf
adc
movs
push
jge
push
dec
xchg
aad
outs
and
test
or
leave
cmp
ins
xchg
xchg
add
and
lock
xchg
sbb
xor
pusha
adc
xchg
cdq
loope
and
push
mov
or
inc
das
lock
jae
loop
mov
dec
cmp
inc
pop
xor
mov
jl
xor
dec
push
inc
and
hlt
jbe
rcr
mov
push
and
in
add
or
enter
mov
inc
mov
inc
or
xchg
xchg
add
frstor
lahf
cs
jecxz
jno
imul
clc
rcl
jmp
jecxz
push
loope
pop
sbb
les
xchg
daa
fild
pop
inc
pop
ins
pop
sbb
fs
jb
sbb
outs
sub
sbb
xor
add
xor
and
xor
cmp
dec
or
xor
mov
int3
jl
push
outs
test
and
or
or
jo
push
in
and
aas
cli
int3
add
push
int3
in
push
retf
jae
push
cld
push
fimul
sub
dec
push
ds
mov
nop
aam
js
hlt
fcom
jb
and
cs
cmp
dec
xor
mov
fdivr
inc
hlt
enter
cmp
push
clc
nop
or
sub
pop
pop
cld
add
mov
inc
and
sar
daa
in
dec
rcr
fdiv
nop
adc
loopne
sbb
mov
enter
cmp
add
pop
retf
lds
pop
imul
lahf
scas
rcr
das
or
dec
pop
or
pusha
jne
out
aam
or
ss
jbe
shl
jno
or
arpl
ss
pusha
push
ins
out
test
pop
push
add
daa
adc
popa
imul
and
sbb
(bad)
and
es
dec
add
and
add
dec
inc
stos
jle
movs
rol
sub
mov
pop
cmp
aas
cwde
test
nop
or
test
adc
cmp
push
mov
(bad)
cmp
test
fs
sbb
and
sub
fs
stos
lock
inc
enter
int3
stos
xchg
call
jg
add
mov
mov
retf
dec
das
pop
out
sbb
leave
mov
adc
xchg
sub
loop
sbb
sub
fs
cmc
int
mov
sbb
loop
fidiv
adc
pop
sub
sub
jecxz
dec
sti
js
das
adc
mov
aam
jns
test
rcl
dec
rol
movsx
mov
daa
imul
ds
jg
dec
imul
popa
stos
stc
adc
mov
outs
push
addr16
adc
xchg
sbb
fild
in
repz
push
fst
sub
jnp
mov
icebp
xchg
push
ja
push
xor
xchg
(bad)
jl
add
mov
bnd
cmp
jmp
sar
cmp
in
push
in
sbb
lahf
daa
ret
jmp
mov
adc
xchg
pusha
cld
gs
daa
cmp
fs
adc
dec
call
pop
rol
adc
inc
push
xchg
and
mov
add
sbb
or
in
xchg
mov
pusha
das
or
jp
cmps
xchg
push
call
xlat
mov
adc
bound
les
(bad)
int
and
jb
mov
add
shl
mov
pushf
mov
cmp
pop
(bad)
mov
int3
sbb
daa
dec
push
shl
inc
adc
and
or
call
cmp
lock
adc
xchg
sub
iret
out
inc
mov
(bad)
sbb
aam
nop
fdivrp
push
dec
cmp
pop
aad
add
xor
and
xchg
pop
loopne
cld
mov
mov
sti
test
jne
cmp
inc
adc
mov
push
aad
and
mov
xchg
adc
in
ds
xchg
inc
pop
ror
mov
mov
jg
mov
sbb
pop
dec
or
das
push
dec
cmp
and
ret
sub
ret
movs
push
sbb
js
add
inc
pushf
sub
push
dec
ret
push
mov
or
cmp
or
pop
push
push
or
dec
xor
ja
imul
push
popa
sbb
xlat
add
cmp
pop
inc
out
and
pop
jbe
or
in
test
mov
adc
test
out
sub
push
jo
mov
aaa
cmp
pop
jmp
mov
outs
jmp
js
and
adc
sbb
mov
push
call
add
push
jl
push
jmp
pop
mov
test
dec
sbb
add
mov
sbb
add
clc
(bad)
popa
int3
cld
(bad)
popa
enter
jl
sbb
mov
jmp
mov
cs
or
push
addr16
push
mov
inc
inc
lods
jg
je
push
inc
mov
jbe
inc
add
addr16
jns
adc
sahf
xchg
push
sub
addr16
movs
xchg
xchg
call
mov
and
add
mov
mov
fsub
pop
jns
push
mov
sbb
dec
fdivr
les
cmps
mov
rcr
out
or
mov
aaa
xchg
das
and
stc
int
inc
mov
in
push
cmps
xchg
push
fcmovu
rcr
xor
push
neg
sti
hlt
test
jbe
jmp
or
fldenv
add
inc
pop
imul
mov
mov
mov
(bad)
dec
mov
xor
aas
call
ficom
leave
sbb
in
mov
jle
adc
inc
stc
jge
les
sbb
pop
pop
lods
mov
fmulp
mov
cwde
jbe
and
sbb
je
sbb
mov
call
cmp
push
pop
fadd
sub
in
adc
ret
jnp
add
jb
test
(bad)
cmc
add
push
in
cmps
movs
wrmsr
or
xor
push
ja
fcmovne
and
push
add
data16
repnz
mov
(bad)
fidiv
push
push
cld
cwde
jmp
cmp
mov
pop
outs
ins
imul
in
repnz
mov
imul
jns
sub
and
or
enter
push
sti
pop
add
iret
fld
ins
jno
in
out
cmp
and
mov
(bad)
and
xor
jmp
shl
sahf
lock
pop
adc
(bad)
dec
test
lds
xor
sbb
(bad)
(bad)
fisub
into
movs
cmp
jne
xchg
sub
out
sahf
(bad)
push
nop
mov
adc
repz
sub
sub
scas
dec
aas
sbb
jb
inc
pusha
and
retf
sub
xor
in
test
cmp
xchg
lock
sbb
dec
adc
jb
dec
push
daa
mov
mov
mov
jo
xchg
mov
and
cs
cwde
cs
mov
mov
mov
das
xchg
mov
add
inc
jb
dec
adc
pop
and
leave
xor
leave
inc
jb
and
loopne
and
add
dec
cs
jo
loopne
push
add
inc
repnz
and
leave
xor
add
loopne
push
xchg
mov
inc
adc
ror
das
or
or
xchg
xor
int
fidiv
cmp
loop
enter
enter
fcomp
fxch
(bad)
(bad)
push
stc
mov
add
in
in
in
add
repnz
inc
ficom
enter
inc
pushf
or
and
and
adc
xchg
(bad)
jl
mov
out
sbb
add
inc
inc
mov
call
xchg
sub
xchg
pop
xor
out
sub
jecxz
add
leave
sbb
xor
cs
jbe
imul
cmp
mov
fwait
(bad)
stc
add
(bad)
mov
bound
cmp
xlat
fadd
out
nop
lods
outs
xor
xchg
push
or
push
push
int3
(bad)
(bad)
(bad)
dec
sbb
ror
mov
push
pop
test
enter
mov
inc
cmp
and
daa
(bad)
(bad)
(bad)
(bad)
dec
into
pop
inc
test
xchg
clc
js
aas
sbb
pop
(bad)
mov
addr16
leave
repnz
sti
(bad)
(bad)
jmp
xchg
and
cld
gs
sahf
mov
sub
inc
aad
iret
dec
js
(bad)
(bad)
(bad)
jg
mov
stos
mov
cmp
or
mov
pop
out
sub
(bad)
(bad)
(bad)
jmp
daa
cmp
inc
xor
cmp
call
mov
stc
popf
sti
jmp
stos
push
inc
mov
(bad)
(bad)
(bad)
jmp
sbb
sar
repnz
test
nop
fild
daa
movs
lahf
nop
inc
pop
stos
clc
scas
(bad)
(bad)
(bad)
call
jecxz
(bad)
cli
inc
pop
pushf
mov
pop
pushf
mov
fs
aam
imul
loope
jp
iret
inc
bound
(bad)
jg
lock
push
cmps
scas
mov
pop
or
add
dec
in
xchg
cmp
xor
in
cmp
sahf
xchg
pop
cmps
lock
mov
(bad)
(bad)
push
popa
mov
fsub
addr16
repz
mov
sub
and
and
push
pop
aad
bound
xor
mov
jne
data16
and
popa
je
jmp
xor
xor
inc
inc
inc
inc
inc
adc
and
ss
cmp
rcr
pop
sub
repz
repz
fs
iret
repz
jo
jl
nop
push
pushf
add
cmp
stc
sahf
add
les
fcomp
je
repz
lahf
push
lock
scas
or
jns
(bad)
out
jl
pop
xor
or
or
lods
jnp
dec
sbb
adc
ins
cmp
sub
cmp
nop
push
movs
das
call
rcr
xchg
cmps
rcl
sbb
and
mov
xor
and
and
adc
mov
jns
and
sub
xor
sub
cmp
dec
outs
fsubp
jbe
xchg
push
jo
rcl
je
sbb
leave
dec
js
js
into
js
popa
sub
js
js
popa
mov
push
jl
rcl
jl
push
sub
dec
xchg
jl
jl
aaa
pushf
push
outs
jl
mov
push
sub
jl
test
xchg
call
aaa
jl
inc
mov
aas
xor
adc
mov
aam
push
div
inc
adc
nop
test
sti
mov
push
push
mov
loopne
std
add
push
inc
stos
test
or
push
inc
iret
adc
mov
or
adc
adc
fwait
in
aaa
sub
enter
imul
xor
fdivr
aam
sub
into
neg
es
rcl
fwait
int
mov
loopne
dec
aam
aad
(bad)
fadd
cdq
add
add
push
pop
pushf
pushf
pushf
pushf
or
or
pushf
pop
test
pushf
pushf
movups
adc
stos
in
adc
add
add
ins
pusha
xchg
push
adc
aam
rcr
ja
add
repz
repz
xor
xor
ss
jns
aaa
cmp
xor
dec
xor
cmp
repz
xor
xor
fnstsw
dec
add
popf
out
sahf
xor
xor
xor
mov
xor
dec
xor
outs
sub
iret
xor
sbb
rcr
xor
add
xor
mov
bound
ror
xor
xor
stos
cmp
ror
ss
add
repnz
loopne
mov
arpl
rcr
mov
add
cmp
outs
jo
xor
stos
arpl
shl
fbstp
inc
cmp
cmp
or
cmp
fstp
dec
sahf
mov
adc
dec
inc
inc
inc
sahf
out
inc
inc
inc
inc
iret
repz
mov
inc
inc
inc
bound
cmp
inc
out
sahf
cmps
scas
inc
inc
inc
inc
inc
cmp
and
cmp
inc
sahf
out
sbb
inc
inc
inc
inc
(bad)
or
jns
inc
ds
repz
inc
inc
inc
inc
inc
inc
jns
inc
and
inc
add
out
inc
inc
inc
cmp
shl
sahf
inc
inc
inc
inc
mov
enter
into
sahf
out
sahf
inc
inc
inc
inc
inc
inc
sahf
cmps
lea
inc
inc
inc
(bad)
in
jns
inc
stos
inc
xor
push
pop
mov
out
sbb
(bad)
jmp
jnp
jle
out
sahf
inc
inc
inc
inc
and
cmp
stos
xor
js
push
(bad)
sar
mov
inc
inc
call
stos
xor
pop
pop
mov
mov
jmp
jnp
jle
mov
inc
call
xor
sbb
push
fisub
imul
inc
mov
(bad)
ror
adc
push
pop
mov
fistp
jae
add
outs
call
outs
mov
inc
dec
inc
pop
inc
shl
push
or
fs
add
xor
pop
add
dec
pxor
scas
mov
mov
push
add
inc
pop
lods
push
iret
aas
adc
cmp
outs
sub
ja
jmp
out
sahf
out
fsub
call
lahf
clc
add
cmp
repz
xor
inc
dec
repz
repz
pop
pusha
push
iret
js
mov
repz
mov
ror
push
test
shr
mov
gs
mov
imul
ror
push
clc
sbb
sbb
push
sub
pop
add
add
dec
scas
jge
pop
add
pop
xlat
adc
cmp
lods
inc
loopne
leave
scas
pop
xchg
pop
add
cdq
jge
fmul
iret
add
loop
ret
or
sub
(bad)
xor
dec
rcl
mov
or
xlat
ret
xchg
movs
add
add
xor
out
gs
add
mov
test
add
inc
mov
pop
pop
pop
or
div
fdiv
add
or
or
or
xor
mov
or
or
add
add
push
inc
jo
adc
aaa
jns
(bad)
call
cmp
sub
out
sahf
out
test
ja
hlt
cmp
push
dec
fs
sahf
out
mov
call
cmp
cmp
add
adc
mov
inc
add
xchg
pop
mov
xor
icebp
jmp
inc
fs
jmp
jae
pop
jmp
(bad)
(bad)
dec
add
retf
xchg
adc
push
cmp
dec
or
icebp
or
cld
mov
jmp
nop
fs
(bad)
(bad)
push
jecxz
cli
jl
aas
jno
inc
mov
pop
scas
scas
stos
movs
in
bound
dec
mov
(bad)
(bad)
(bad)
dec
cmp
jmp
sbb
mov
dec
jge
dec
pushf
sbb
aam
(bad)
(bad)
(bad)
out
mov
push
jp
inc
inc
xchg
imul
lds
cmp
ret
(bad)
dec
dec
test
pop
in
(bad)
leave
push
pop
jl
mov
xor
jns
ss
loopne
sbb
and
xor
pusha
int3
les
pop
mov
cmp
dec
push
pop
push
push
jbe
inc
dec
ja
jnp
or
je
lods
mov
lods
jns
iret
(bad)
fadd
cmp
pop
add
or
dec
xchg
lods
lds
add
fimul
jns
lods
shr
sbb
es
js
out
fidivr
movs
jae
out
inc
push
out
inc
fidiv
stc
outs
dec
jnp
test
sbb
das
clc
(bad)
adc
xchg
adc
daa
lods
adc
out
pop
lock
mov
pop
add
fsub
jo
mov
test
int3
mov
mov
pop
enter
pop
adc
out
iret
jae
das
mov
mov
mov
mov
mov
or
pop
in
out
int
xor
sahf
add
sub
mov
bound
ror
jnp
fs
xchg
(bad)
jnp
cmp
loopne
das
pushf
lea
sbb
outs
adc
iret
repz
neg
pushf
mov
add
lods
rcl
lods
repz
cld
mov
aaa
lock
(bad)
into
pop
jne
into
push
xor
ins
movs
pop
mov
jle
(bad)
das
jo
mov
in
je
js
jg
dec
mov
jbe
jl
lods
dec
mov
pop
outs
dec
jb
sbb
test
js
(bad)
fs
aaa
mov
add
push
das
sbb
aas
and
popf
int3
mov
das
and
repz
xchg
into
push
mov
imul
or
sbb
mov
repz
out
in
adc
jmp
mov
mov
std
add
mov
and
iret
repz
cmp
pusha
clc
xor
iret
repz
test
in
sahf
out
hlt
or
jns
out
icebp
lock
test
enter
xchg
cmps
jnp
(bad)
mov
into
dec
cmp
pcmpgtb
and
push
mov
aas
add
mov
pushf
rcr
add
push
jnp
mov
adc
pop
push
fcomp
cmps
sub
sahf
and
aas
inc
sbb
lahf
call
fdiv
cmps
retf
cwde
jnp
aas
lods
sti
push
mov
aam
(bad)
hlt
push
out
call
add
push
adc
adc
adc
xlat
jecxz
pop
push
sbb
sbb
lahf
out
mov
mov
push
repz
repz
push
cmp
mov
out
out
pop
inc
add
push
push
shl
sahf
test
fistp
push
neg
hlt
push
and
ror
xor
jns
out
pop
add
jns
pushf
or
(bad)
clc
lock
ret
mov
ret
int3
push
aam
jg
call
lock
ret
fdiv
cmc
push
(bad)
in
out
ins
and
iret
jo
int
nop
call
push
loop
mov
fsubr
sub
int3
add
push
mov
add
call
push
push
imul
push
les
cmp
out
xchg
fs
fsub
lds
cmp
fdiv
in
cmp
pop
push
mov
cld
rcr
test
xor
push
xor
pop
inc
cld
mov
mov
mov
das
imul
out
xchg
jmp
out
push
int3
xor
(bad)
cld
jnp
xor
jp
jmp
(bad)
inc
js
iret
jmp
or
jle
into
sub
out
push
rol
xchg
jmp
sahf
xchg
enter
neg
add
out
jmp
push
and
mov
push
lock
jl
fcom
cmp
mov
sahf
aas
add
aam
add
mov
adc
clc
clc
mov
add
sbb
retf
fcmove
pop
dec
retf
push
dec
jg
retf
lods
das
fsubr
dec
retf
scas
in
jae
fcom
retf
pop
pop
int
add
(bad)
stc
aaa
push
retf
(bad)
mov
inc
cli
out
jmp
in
mov
jnp
xor
scas
cld
jl
push
int
push
pop
jne
fnstcw
out
mov
push
fadd
in
jnp
(bad)
fmul
sar
inc
dec
inc
fisttp
xor
push
nop
out
nop
ds
mov
shl
push
and
into
pushf
cld
push
jl
into
xchg
jmp
xor
mov
les
jl
out
and
mov
out
fs
jg
scas
xor
iret
pop
dec
stos
int
jmp
int
cld
push
rcl
into
sar
out
mov
push
jno
cmp
jl
push
push
jl
call
scas
sbb
push
test
(bad)
push
jo
sbb
or
lods
cmp
loope
push
mov
lods
aas
movs
jmp
or
cmc
std
xchg
jg
iret
jmp
pop
push
and
sub
dec
ja
cmovne
(bad)
jo
sbb
xor
int
pop
stos
call
cwde
push
ds
lock
out
scas
out
rcl
out
call
fisubr
aam
test
stos
icebp
push
retf
add
push
frstor
loopne
fadd
sbb
aam
inc
aam
or
push
(bad)
pusha
(bad)
aam
imul
sahf
adc
push
jb
cli
(bad)
js
int3
dec
sti
pusha
movs
hlt
outs
aad
mov
push
out
cmc
cmp
aaa
dec
sub
mov
mov
dec
push
int
push
(bad)
mov
aaa
jae
xor
in
outs
int3
inc
vmread
jg
xlat
scas
mov
inc
jnp
lods
cli
push
mov
push
iret
aas
(bad)
cld
fdivr
arpl
push
shr
push
mov
repz
clc
mov
add
fcomp
xor
cmp
push
lods
push
pop
and
pushf
test
sbb
call
ds
add
popa
outs
jae
mov
mov
push
push
(bad)
inc
iret
repz
mov
mov
mov
or
jns
push
imul
mov
dec
iret
repz
mov
mov
iret
repz
shr
jmp
(bad)
in
ins
sbb
inc
mov
and
push
cmc
mov
retf
aad
sub
shl
or
or
mov
movd
pop
data16
dec
rol
add
or
adc
dec
fcomp
and
xlat
or
push
fcomp
jle
shl
adc
sbb
or
jb
dec
pop
jnp
clc
push
sub
xlat
popa
test
and
pop
fcomip
inc
or
mov
stc
sub
inc
adc
fiadd
and
mov
cmp
xor
xor
dec
gs
aaa
push
fisubr
inc
popa
dec
xchg
push
and
jns
sub
mov
sub
add
push
mov
or
push
(bad)
add
add
test
xchg
mov
pop
inc
pop
(bad)
test
push
adc
add
pop
pop
retf
add
les
(bad)
jbe
pop
push
push
jle
or
adc
pop
push
jo
pop
and
retf
pusha
cmp
loope
and
jmp
fdivp
loopne
push
pop
sbb
dec
pop
cmp
cmp
add
pop
adc
sahf
out
sub
jg
out
add
adc
adc
sahf
out
je
enter
jns
out
test
test
xlat
popf
call
cwde
add
push
iret
cmp
jl
fcomp
cmp
repz
or
dec
clc
repz
repz
mov
iret
jb
les
bound
cmp
repz
add
iret
repz
pop
sbb
jp
aam
jle
sub
out
mov
mov
mov
sahf
out
fidivr
(bad)
xor
int3
vmwrite
lods
push
xchg
jns
out
in
or
sahf
out
sahf
pushf
arpl
fcomp
iret
jnp
repz
outs
cs
dec
cmp
push
cmp
call
adc
push
ret
repz
and
jae
cmp
pop
sbb
iret
cmp
imul
iret
or
push
xor
adc
jne
cmp
jae
retf
stos
add
test
pop
sbb
call
repz
mov
iret
jae
cli
push
adc
jae
jae
cmp
(bad)
arpl
cmps
daa
iret
repz
add
iret
jae
cmp
xchg
jnp
(bad)
iret
repz
imul
or
dec
not
cmp
iret
jae
aaa
into
addr16
repnz
repz
pop
xchg
cmp
iret
jae
pop
sahf
jg
out
sahf
ja
fisubr
das
mov
cmc
mov
inc
pop
jb
pop
mov
jb
shl
icebp
leave
test
jmp
enter
pop
jb
pop
lds
and
jb
cmc
int
pop
enter
enter
popf
fnstsw
std
ret
mov
jecxz
jb
pop
jb
mov
test
retf
stos
enter
jmp
fist
leave
test
(bad)
and
jb
cmps
out
and
jb
xlat
mov
pop
and
test
scas
out
lahf
pop
enter
mov
mov
push
out
add
fisttp
adc
add
adc
inc
ds
mov
add
adc
addr16
inc
push
jle
sbb
xchg
cmps
rcl
add
xor
test
add
(bad)
mov
add
and
push
dec
(bad)
cs
pop
out
jb
inc
add
pop
pop
xchg
popf
add
rcr
aaa
sbb
and
rcl
ds
imul
and
mov
xor
push
mov
add
jb
push
imul
mov
mov
add
or
jmp
out
xchg
mov
outs
jns
and
push
push
outs
sub
jns
bound
adc
je
ret
pusha
jo
push
cdq
sub
pop
xchg
jae
fs
xor
push
cmp
rcl
lea
das
jmp
(bad)
not
retf
arpl
pusha
dec
mov
adc
and
(bad)
lock
ins
dec
pop
jno
cmps
sub
fiadd
xchg
jmp
push
add
cmp
pop
out
lea
jbe
retf
push
dec
pop
mov
lahf
inc
jne
sub
lods
push
sahf
jecxz
sahf
add
in
in
adc
adc
call
dec
mov
sub
out
push
cdq
sbb
iret
popa
es
mov
mov
inc
movs
xor
(bad)
out
sub
pusha
sti
cmp
fcmovnb
jecxz
ret
push
add
sbb
cmp
repz
sbb
mov
in
cs
add
sub
add
(bad)
cmps
xchg
pushf
pushf
pushf
fadd
pop
or
or
or
add
outs
inc
stos
aaa
not
adc
adc
or
or
or
(bad)
sbb
dec
int3
sub
ins
sahf
out
sahf
in
sbb
pop
fdivr
sahf
out
mov
out
sahf
out
ret
bound
adc
sahf
out
mov
repnz
dec
retf
push
out
sahf
jmp
sahf
out
mov
out
sahf
out
(bad)
cmps
data16
out
sahf
out
xchg
push
(bad)
ss
out
mov
test
out
sahf
out
into
cs
outs
sahf
out
sahf
out
push
sahf
pop
fidivr
jns
out
mov
out
sahf
out
shl
popa
sahf
out
sahf
loope
xchg
push
shl
jns
out
mov
icebp
or
dec
leave
sub
sahf
jmp
cmp
out
mov
out
sahf
out
lds
jns
in
xchg
push
aad
jns
out
mov
cmc
or
out
int
lods
ins
sahf
out
sahf
in
sbb
call
adc
or
repz
imul
iret
repz
shl
xor
repz
repz
repz
repz
repz
retf
sub
stos
stos
imul
cmp
jmp
sbb
repz
repz
fwait
pop
pop
fcmovne
repz
fstp
cmp
repz
sti
sti
pop
pop
repz
xrelease
repz
(bad)
daa
daa
cmps
cmps
addr16
repz
out
pop
pop
repz
repz
xchg
push
push
xlat
iret
repz
xlat
aaa
aaa
mov
ja
iret
repz
div
(bad)
psllq
repz
(bad)
dec
dec
iret
iret
repz
iret
das
das
scas
scas
outs
cmp
repz
out
out
pop
pop
repz
repz
lahf
pop
pop
(bad)
repz
fistp
aas
mov
repz
(bad)
push
inc
jns
out
push
and
push
xor
jns
out
or
push
sbb
js
inc
jns
out
and
adc
xor
out
out
add
and
xor
jns
arpl
jecxz
cmp
jnp
push
or
add
iret
repz
or
add
or
cmp
repz
push
push
push
add
cmp
repz
sbb
iret
or
sbb
lods
repz
pop
xchg
push
ins
pop
add
or
pushf
or
or
inc
jb
or
inc
cvttps2pi
mov
adc
add
sbb
xor
xchg
pop
sbb
pusha
push
jb
xchg
retf
ror
mov
adc
adc
test
push
pop
inc
jb
pop
sbb
dec
loop
xchg
sbb
adc
inc
sub
push
dec
add
les
pop
push
add
aad
mov
sub
imul
scas
mov
shl
xlat
or
in
jbe
(bad)
sbb
sar
push
mov
and
sbb
push
add
test
and
and
fs
push
(bad)
fist
fsub
adc
inc
cmp
(bad)
(bad)
(bad)
dec
out
mov
les
(bad)
hlt
push
xor
xchg
fs
xor
fdivr
jmp
aad
mov
rcl
mov
out
(bad)
(bad)
(bad)
call
mov
repnz
repz
test
ficomp
jmp
(bad)
mov
hlt
(bad)
(bad)
(bad)
(bad)
inc
ins
adc
test
fs
(bad)
std
in
leave
mov
add
ins
push
arpl
psubd
(bad)
(bad)
(bad)
dec
outs
cmp
imul
addr16
add
aam
dec
std
test
(bad)
push
mov
ins
cwde
mov
(bad)
leave
mov
lods
jecxz
fdiv
jne
fild
or
(bad)
(bad)
(bad)
cmp
fldenv
cmp
ficom
push
xlat
enter
mov
and
mov
cdq
xchg
mov
sub
movs
mov
mov
(bad)
and
(bad)
(bad)
(bad)
jmp
outs
das
adc
stos
sbb
data16
inc
fdiv
jno
add
(bad)
(bad)
call
aad
mov
mov
movs
in
lahf
xor
mov
js
stc
jl
(bad)
(bad)
dec
cwde
push
loope
or
ins
or
pop
arpl
hlt
push
imul
scas
test
xor
dec
adc
(bad)
(bad)
(bad)
call
add
shl
adc
cmc
(bad)
fnstenv
adc
mov
mov
(bad)
call
ficom
gs
aam
pop
popa
mov
into
pop
cmp
jmp
mov
dec
xlat
xchg
fadd
(bad)
shl
jmp
(bad)
(bad)
(bad)
fldcw
inc
mov
sar
add
in
add
pop
dec
or
cmp
add
mov
xchg
or
and
test
or
mov
popa
into
(bad)
(bad)
(bad)
dec
stc
ficomp
leave
fldcw
and
xlat
(bad)
pop
cmp
mov
cmp
lods
ins
mov
or
mov
mov
add
push
jmp
fild
push
fdiv
or
test
fs
ds
or
hlt
jmp
or
push
in
dec
xchg
daa
scas
jl
sahf
pop
jge
xchg
(bad)
shl
(bad)
(bad)
push
add
inc
push
imul
xor
sbb
push
imul
aam
loopne
ror
(bad)
jp
adc
dec
frstor
fistp
mov
mov
aad
mov
call
xchg
shl
inc
fdivr
push
repnz
addr16
cmps
fld
mov
dec
ss
fisubr
or
scas
idiv
(bad)
(bad)
dec
ss
jp
inc
ret
out
pusha
fist
addr16
mov
jns
imul
and
(bad)
(bad)
(bad)
call
outs
and
xchg
ja
int3
add
mov
das
es
lds
or
(bad)
call
sub
mov
cmps
call
ret
shl
sbb
ret
es
pushf
out
cli
(bad)
jmp
ins
add
ss
jmp
addr16
jb
push
or
(bad)
(bad)
(bad)
call
mov
jnp
sbb
xchg
or
out
fdivr
fisttp
aam
rol
inc
loop
icebp
clc
mov
push
int
mov
mul
ja
outs
ja
mov
out
cli
(bad)
push
jo
ud0
cmp
pop
or
adc
sahf
gs
clc
sar
imul
jmp
mov
loop
mov
push
add
mov
cmp
cmps
not
pusha
ror
add
ja
ds
push
scas
fcomp
fldenv
(bad)
(bad)
jmp
scas
mov
fidivr
mov
jmp
repnz
retf
(bad)
(bad)
(bad)
push
and
sar
sub
push
mov
jp
mov
dec
popa
les
sbb
(bad)
jmp
xchg
sub
aaa
mov
or
sbb
add
sub
mov
and
ret
push
sub
hlt
ja
xchg
(bad)
inc
xchg
inc
dec
or
ret
call
hlt
jecxz
dec
mov
dec
jle
mov
sub
(bad)
dec
sbb
xchg
ret
and
push
shl
js
inc
out
popa
push
xlat
scas
cs
mov
xlat
mov
sbb
push
sar
test
sbb
fdivr
sub
call
pop
ja
sbb
ins
(bad)
fistp
inc
aam
push
pop
int
and
xchg
jecxz
lahf
mov
inc
mov
mov
ja
mov
out
repz
gs
fisubr
inc
inc
sub
(bad)
(bad)
(bad)
jmp
imul
xor
out
pop
sub
sub
pop
or
sbb
repz
fbstp
push
call
add
hlt
div
sub
xchg
sbb
xor
pop
nop
(bad)
(bad)
(bad)
(bad)
sti
mov
test
jns
test
cmp
jns
jae
dec
call
inc
cmp
ficomp
mov
jns
inc
jle
jmp
(bad)
sbb
adc
push
lea
(bad)
jmp
or
hlt
mov
or
xchg
lea
or
int3
pop
dec
xor
inc
mov
jmp
push
retf
mov
mov
lea
push
inc
ficom
test
loope
xchg
retf
les
jb
out
imul
(bad)
(bad)
push
dec
pop
pop
adc
push
sbb
adc
and
inc
and
push
mov
or
push
fs
dec
mov
mov
and
cmps
xor
mov
sub
sar
mov
adc
stos
and
leave
jmp
(bad)
(bad)
(bad)
jle
push
jns
das
mov
and
je
or
repnz
dec
push
jo
(bad)
(bad)
(bad)
jmp
xor
jle
(bad)
repz
mov
xchg
rcl
cmp
mov
js
(bad)
(bad)
(bad)
(bad)
mov
test
cwde
cmp
test
mov
mov
scas
adc
out
pop
push
ins
hlt
inc
int
(bad)
(bad)
(bad)
(bad)
fldcw
push
ret
adc
add
inc
jmp
ja
inc
xlat
ss
push
out
mov
mov
(bad)
(bad)
inc
movs
test
jno
mov
ja
(bad)
ins
pop
push
dec
sub
or
sub
sbb
fstp
adc
cwde
mov
nop
bound
xchg
push
(bad)
push
hlt
out
les
ret
xchg
fdecstp
jmp
lea
inc
xor
pop
icebp
(bad)
fist
dec
jo
outs
sbb
sub
loope
fisub
lds
push
call
push
and
dec
in
mov
movs
ret
addr16
test
mov
(bad)
lahf
fdivrp
cmp
repz
(bad)
(bad)
call
jnp
call
cmp
mov
or
stos
mov
sbb
icebp
adc
sub
jae
xor
mov
jo
cmc
shr
add
mov
arpl
lods
(bad)
(bad)
push
loope
int3
mov
stc
dec
xlat
loopne
adc
mov
jo
popf
mov
test
(bad)
(bad)
call
add
ins
cmp
les
adc
sub
dec
add
sar
push
or
(bad)
(bad)
inc
cmp
popf
cmps
push
mov
xchg
adc
in
xor
cdq
bound
fcom
into
pop
(bad)
(bad)
(bad)
dec
dec
push
jle
push
xchg
sub
int3
bound
mov
xor
call
mov
(bad)
push
jle
lods
ret
outs
xchg
dec
ins
das
mov
adc
test
ja
add
lock
dec
mov
(bad)
sbb
mov
mov
in
and
out
mov
(bad)
mov
or
jle
xchg
aas
mov
adc
out
sar
(bad)
jg
pop
mov
gs
pop
jle
aaa
or
jbe
dec
div
lahf
adc
jb
(bad)
fucomip
std
and
push
push
add
test
pop
mov
mov
(bad)
(bad)
(bad)
jmp
retf
push
mov
lea
push
adc
(bad)
cmp
(bad)
test
or
stc
sbb
or
fist
sub
mov
inc
leave
in
push
ja
(bad)
(bad)
jmp
push
lods
or
sbb
fild
sbb
repnz
adc
push
adc
cmp
and
(bad)
adc
mov
pop
loopne
dec
cmp
sub
cmp
dec
cmp
out
inc
aas
or
cmp
push
add
outs
jge
aaa
ss
cmc
(bad)
(bad)
(bad)
fidiv
test
xchg
xor
imul
fld
adc
nop
in
and
(bad)
(bad)
call
mov
fsub
leave
pop
sub
and
mov
and
(bad)
(bad)
jmp
mov
sub
fidivr
sub
ds
sbb
sub
call
das
(bad)
jg
inc
lea
jno
pop
cmp
xor
jb
and
push
jbe
icebp
pop
(bad)
(bad)
(bad)
push
aad
js
mov
mov
jg
or
jl
je
jns
push
inc
js
mov
(bad)
jp
retf
mov
mov
fdivrp
cmp
nop
es
sbb
loop
in
ja
add
push
or
bound
(bad)
(bad)
jmp
stos
sub
shr
aam
cmps
gs
fs
imul
dec
pop
mov
jmp
dec
cld
arpl
dec
retf
or
xchg
mov
(bad)
(bad)
call
movs
fstp
inc
scas
lock
inc
test
shl
inc
xor
inc
jae
cmovo
out
add
sbb
push
add
push
ds
jne
or
mov
mov
clc
push
mov
adc
push
aad
mov
pop
fist
pop
xchg
(bad)
push
pop
mov
movs
pop
lock
add
sub
outs
pop
ins
das
lods
pop
sbb
loope
(bad)
(bad)
(bad)
push
loopne
iret
mov
fldenv
cmp
imul
out
addr16
in
dec
es
paddd
(bad)
jmp
in
push
sahf
mov
in
in
das
call
mov
stos
jmp
pop
imul
(bad)
(bad)
jg
fcom
cld
sahf
ins
xchg
(bad)
test
adc
cli
sbb
sti
inc
les
(bad)
jmp
add
jg
ret
cmp
inc
icebp
xchg
inc
or
mov
xchg
(bad)
test
dec
pusha
pop
js
push
aaa
mov
fidivr
jecxz
fstp
mov
shl
cmc
fucom
(bad)
(bad)
(bad)
dec
(bad)
or
xlat
out
test
fsubr
aam
mov
aad
movs
(bad)
shl
into
mov
rcr
(bad)
(bad)
call
and
adc
pop
lds
xchg
pushf
les
fcmovb
dec
inc
sbb
int3
push
push
ret
xchg
ret
mov
(bad)
inc
(bad)
call
dec
retf
lahf
lds
adc
leave
je
inc
int3
inc
ins
xchg
sbb
call
rol
iret
sub
fcom
cs
sub
pushf
cmps
xchg
(bad)
(bad)
(bad)
jmp
jmp
clc
(bad)
mov
sahf
xchg
adc
pushf
mov
outs
mov
(bad)
(bad)
(bad)
call
add
xor
xor
dec
mov
or
(bad)
in
popf
or
test
mov
(bad)
mov
push
pop
and
push
adc
fadd
(bad)
(bad)
(bad)
jmp
push
test
sbb
xchg
shl
test
into
add
stos
stc
outs
movs
stos
jl
jmp
(bad)
(bad)
(bad)
dec
sub
and
xor
cmps
jbe
jne
inc
aas
mov
les
clc
mov
repz
cmp
popf
xchg
mov
mov
sbb
mov
cmps
inc
mov
int
mov
fcmovne
mov
add
(bad)
cmp
dec
mov
mov
(bad)
call
adc
mov
mov
fidivr
sbb
ficomp
mov
pop
addr16
stos
fdivp
jmp
push
xchg
bound
pop
imul
(bad)
dec
lds
loopne
outs
add
(bad)
dec
fstp
push
xor
loopne
(bad)
(bad)
call
arpl
push
sbb
xor
cli
jno
lods
inc
enter
lods
cmps
(bad)
addr16
or
(bad)
(bad)
(bad)
jmp
outs
into
int
jg
xchg
adc
mov
aas
sahf
rcr
xchg
call
jae
lods
and
mov
(bad)
(bad)
dec
inc
jp
ds
xor
mov
cmp
rol
xchg
or
in
xchg
loop
pop
test
(bad)
inc
xchg
fstp
(bad)
iret
aas
sub
xchg
in
jecxz
pop
push
or
cli
in
inc
push
lock
and
push
sahf
loop
outs
dec
jg
or
(bad)
jge
aad
shl
rcr
(bad)
lds
xchg
lahf
mov
inc
std
mov
xchg
(bad)
hlt
adc
call
(bad)
mov
aas
test
mov
sbb
mov
jbe
push
retf
pop
jg
(bad)
(bad)
(bad)
inc
mov
out
mov
adc
shl
cmp
das
retf
jnp
(bad)
mov
into
prefetchw
or
jae
mov
cmc
cwde
outs
inc
nop
call
(bad)
(bad)
(bad)
(bad)
cld
jle
data16
sbb
ficom
daa
mov
mov
out
mov
mov
mov
cmp
(bad)
cmp
pop
outs
xchg
add
cmp
inc
mov
das
xchg
in
pop
xchg
sub
(bad)
(bad)
inc
pop
clc
or
test
push
mov
fist
inc
addr16
fwait
push
add
in
mov
cmps
lock
das
dec
leave
xor
inc
arpl
adc
push
(bad)
(bad)
dec
mov
aaa
pop
in
push
loope
inc
call
cwde
call
scas
push
out
aaa
push
clc
inc
add
dec
and
jmp
cdq
scas
xlat
loopne
retf
xor
mov
in
pop
shl
push
(bad)
(bad)
inc
sbb
jmp
bound
inc
xchg
out
xor
or
(bad)
(bad)
(bad)
jmp
mov
push
nop
pop
push
in
cmp
pop
cmp
outs
xor
or
xchg
movs
loope
(bad)
(bad)
push
das
sub
dec
dec
cmc
scas
repz
xor
mov
xchg
and
(bad)
(bad)
dec
hlt
js
scas
dec
rol
std
shl
pop
xchg
idiv
sub
sbb
(bad)
(bad)
mov
(bad)
sbb
pusha
jle
cmc
mov
(bad)
out
mov
pop
push
mov
ret
mov
mov
loopne
fld
mov
(bad)
(bad)
(bad)
fisttp
popa
stc
(bad)
and
push
mov
rol
outs
mov
push
or
adc
(bad)
push
jmp
into
movs
adc
(bad)
bswap
fst
xchg
test
lods
sub
sbb
and
xor
(bad)
(bad)
inc
fcom
add
(bad)
scas
iret
jb
leave
jae
and
movs
push
inc
xchg
sbb
test
pop
adc
out
sar
(bad)
dec
arpl
inc
fsubr
inc
clc
fs
jns
stc
xor
xchg
inc
fidiv
(bad)
(bad)
jg
jmp
(bad)
stc
mov
mov
lock
imul
ss
test
(bad)
(bad)
(bad)
(bad)
cs
mov
call
mov
loope
into
cs
out
cld
(bad)
(bad)
inc
and
loopne
adc
pop
pop
std
pop
jmp
icebp
and
sub
aam
(bad)
jg
and
jle
inc
jg
pop
es
outs
mov
jbe
(bad)
(bad)
(bad)
jl
out
retf
(bad)
sbb
loope
push
adc
cmp
adc
mov
(bad)
mov
cmp
pushf
in
adc
add
sbb
cmps
push
data16
jno
(bad)
(bad)
(bad)
fidivr
sub
outs
sub
mov
add
xchg
out
mov
dec
or
sbb
rol
pop
aad
(bad)
jmp
ret
neg
jmp
pop
test
or
xchg
popa
mov
fdivrp
(bad)
(bad)
(bad)
mov
out
push
popa
sub
or
pop
ins
les
jo
hlt
(bad)
xor
push
(bad)
(bad)
(bad)
dec
movs
loopne
jmp
mov
mov
sub
jl
out
sub
xchg
sbb
call
fs
and
repz
inc
ficomp
fcmovbe
jge
fucom
jmp
aam
push
sub
(bad)
(bad)
jg
(bad)
adc
imul
mov
in
adc
pop
dec
arpl
ins
fsqrt
(bad)
arpl
or
enter
pop
aad
inc
in
addr16
cmp
in
dec
add
inc
ror
(bad)
(bad)
dec
mov
xor
mov
ins
fstp
stc
inc
xor
ins
jecxz
fistp
(bad)
or
add
fnstenv
lods
push
mov
enter
call
shl
and
and
mov
movs
movaps
mov
or
(bad)
(bad)
inc
or
mov
or
and
outs
jl
pop
push
sbb
cmp
add
jno
pop
loopne
call
aad
sub
test
lahf
mov
xor
mov
leave
les
and
or
sbb
or
(bad)
(bad)
(bad)
cmp
xchg
out
pop
add
push
hlt
sbb
popa
bound
bound
dec
ins
push
xchg
in
sbb
cli
(bad)
(bad)
jmp
shl
les
mov
(bad)
adc
mov
jl
fstp
mov
sub
repz
aam
gs
mov
test
push
ror
test
mov
movs
inc
cmp
(bad)
call
movs
rol
ins
rcl
hlt
sti
inc
imul
cld
lods
mov
pusha
mov
jae
add
in
or
or
jno
daa
add
mov
or
xchg
mov
and
(bad)
(bad)
dec
into
popa
in
pop
fdivrp
push
sub
leave
cwde
mov
cwde
and
xlat
test
pop
mov
add
(bad)
cmp
xor
dec
mov
loop
mov
call
ja
add
es
(bad)
fcom
and
or
xchg
cmp
pop
test
push
iret
or
(bad)
(bad)
dec
add
mov
setae
mov
push
mul
pop
and
(bad)
(bad)
(bad)
call
ins
ss
imul
(bad)
aam
jbe
shr
loopne
fidivr
fisttp
stc
mov
out
stc
call
mov
aad
(bad)
mov
push
fadd
les
repnz
sar
add
mov
push
fisttp
ss
fmul
sbb
dec
cmp
jmp
out
ret
test
fist
outs
mov
inc
imul
sbb
outs
shl
int3
or
xchg
mov
fild
inc
push
mov
(bad)
mov
(bad)
(bad)
push
add
xlat
jmp
sub
sahf
mov
scas
sbb
in
arpl
es
(bad)
(bad)
jmp
pushf
add
or
ss
jb
test
add
xchg
mov
jp
jnp
aaa
cld
push
sbb
xchg
ror
repnz
mov
fcmovnu
and
(bad)
(bad)
push
aam
inc
push
fiadd
int
mov
ja
sbb
xchg
(bad)
pop
out
jo
push
cmp
adc
or
(bad)
(bad)
call
sahf
(bad)
clc
bound
rcl
ins
iret
inc
mov
or
adc
(bad)
(bad)
(bad)
inc
cmps
addr16
shl
test
ja
scas
shr
(bad)
pop
fadd
or
fdivr
(bad)
(bad)
(bad)
push
test
mov
iret
jg
mov
jmp
retf
mov
xchg
xor
mov
cmps
mov
xlat
push
xchg
push
ficom
and
addr16
jp
les
mov
(bad)
call
add
outs
sub
or
mov
sub
sbb
(bad)
jg
push
inc
xor
bound
lods
lds
pop
cmps
xchg
xchg
(bad)
enter
(bad)
(bad)
dec
cli
out
call
retf
lods
mov
or
scas
jle
sahf
sub
dec
(bad)
(bad)
(bad)
inc
adc
fldenv
adc
jo
popa
out
inc
xchg
cs
xlat
push
aaa
mov
adc
cwde
mov
add
xor
(bad)
call
cwde
pop
fwait
add
fld
ja
pop
(bad)
(bad)
(bad)
jmp
mov
int
push
sahf
xchg
test
mov
inc
and
call
idiv
call
fiadd
gs
scas
stos
inc
inc
lahf
jmp
imul
jbe
std
imul
jmp
and
pop
out
or
or
sbb
ins
fild
repz
pop
pop
mov
jo
jno
imul
call
mov
xor
mov
sbb
jne
pop
mov
sti
push
test
jns
jmp
sar
out
cmp
jns
push
dec
push
lds
jge
fisubr
cmp
jns
add
jmp
inc
ret
xchg
push
sbb
xchg
adc
mov
(bad)
dec
xor
fld
cmp
hlt
dec
or
xchg
into
pop
int3
sub
cs
jle
xor
cli
bound
call
hlt
mov
ins
adc
xchg
xchg
push
xchg
(bad)
cwde
push
(bad)
int3
test
(bad)
(bad)
(bad)
call
cmc
cli
retf
xchg
jb
xlat
pop
imul
inc
push
mov
pop
dec
test
unpckhps
sbb
jo
out
sar
fidivr
std
imul
and
add
(bad)
call
mov
and
mov
loope
mov
shr
lahf
adc
xchg
mov
(bad)
(bad)
jmp
and
rcl
jmp
ja
das
aas
jns
ss
mov
or
je
adc
(bad)
(bad)
fcomip
xor
dec
lea
pusha
jle
xor
out
(bad)
(bad)
std
ret
sar
(bad)
(bad)
call
cmp
call
js
cmps
cmp
sbb
or
cli
leave
adc
pop
dec
inc
hlt
ins
push
ins
fnstcw
int
ret
repz
adc
inc
and
shr
push
fdiv
adc
out
movs
add
test
mov
push
ja
cmp
(bad)
call
fst
ss
daa
mov
fnstsw
pop
hlt
(bad)
inc
bound
(bad)
lds
(bad)
out
hlt
push
out
rcl
pop
cli
jmp
sbb
test
xor
imul
(bad)
shl
lods
clc
pop
sbb
inc
sub
data16
loope
lds
cld
arpl
lods
mov
in
test
xchg
sub
in
scas
(bad)
(bad)
(bad)
(bad)
mov
(bad)
repz
cmp
call
imul
or
stos
test
jg
sbb
(bad)
(bad)
(bad)
push
push
sub
pop
xor
dec
jo
mov
imul
jp
xor
pop
mov
retf
cli
xlat
jg
cs
dec
shl
out
stc
add
xlat
push
scas
xchg
adc
lea
jmp
dec
popf
mov
inc
mov
and
sbb
ins
je
aas
les
push
push
test
cwde
inc
jle
(bad)
(bad)
call
push
jns
ror
cmp
hlt
pop
mov
cmps
popf
stos
adc
add
cld
mov
xor
bound
into
jns
fmul
dec
pop
push
cli
jle
jnp
sub
(bad)
(bad)
(bad)
jmp
xchg
mov
xchg
push
mov
repz
inc
gs
dec
xchg
outs
jne
mov
(bad)
cmp
ss
or
push
aas
gs
jns
(bad)
mov
sbb
pop
cld
jmp
mov
daa
repnz
mov
mov
out
and
loope
or
call
cld
mov
jle
shl
imul
inc
cmp
ja
fsub
(bad)
(bad)
jmp
out
push
or
test
mov
adc
xor
push
add
ret
add
pop
lods
test
dec
or
fadd
retf
ret
mov
dec
push
test
adc
(bad)
(bad)
(bad)
mov
or
push
out
loope
sbb
fs
xchg
push
or
call
inc
cmp
sbb
mov
sbb
lods
sbb
popa
fwait
sbb
inc
sbb
cmc
adc
cwde
call
mov
cmps
adc
xchg
adc
(bad)
xor
push
mov
(bad)
jp
jp
dec
cmp
loopne
(bad)
sub
cmp
xchg
mov
or
mov
xchg
(bad)
(bad)
call
add
ss
pop
pop
aaa
pushf
jge
xor
sbb
test
xchg
aad
xor
imul
adc
frstor
in
mov
cmps
daa
aam
es
(bad)
(bad)
jmp
dec
and
cdq
and
and
adc
sub
pusha
inc
sub
or
(bad)
(bad)
(bad)
push
hlt
sub
jbe
cs
enter
mov
shl
div
pop
scas
jb
xor
call
dec
sub
jb
aad
inc
jle
fdivr
dec
mov
jge
or
jl
bound
jns
cmc
(bad)
inc
push
xchg
jp
mov
std
ins
mov
xchg
cli
fdivrp
inc
fiadd
pop
push
repz
fcomip
jg
arpl
popa
sub
push
cmps
xlat
aam
fs
mov
jmp
imul
outs
pop
dec
dec
fs
(bad)
jg
sbb
arpl
dec
sbb
retf
dec
pop
mov
dec
cwde
frstor
inc
push
lock
(bad)
(bad)
(bad)
inc
dec
test
inc
int
inc
inc
addps
dec
out
inc
mov
push
xor
addr16
(bad)
(bad)
call
mov
or
ror
adc
push
mov
cmp
pop
and
(bad)
(bad)
(bad)
call
in
xchg
xchg
pop
sub
add
inc
pop
pop
lods
das
ins
loope
sbb
fcomip
cmp
loop
iret
out
jecxz
movs
movs
cmp
pop
out
fldcw
jp
(bad)
(bad)
dec
cmp
in
paddsb
hlt
popa
call
in
mov
jmp
ss
imul
mov
cld
rcl
(bad)
(bad)
xchg
ins
sahf
call
test
sti
fdivr
stc
sahf
les
pop
jmp
add
dec
bnd
lock
adc
or
cmc
retf
sub
gs
dec
dec
fnstcw
pusha
fdivr
aaa
rcl
fstp
jecxz
fidiv
mov
(bad)
and
fdiv
(bad)
(bad)
(bad)
dec
xlat
imul
test
fdiv
shl
add
mov
jo
shl
(bad)
(bad)
call
pop
lds
adc
pushf
xchg
daa
(bad)
fisubr
jle
sbb
ret
int3
ret
xchg
cmp
rcl
mov
icebp
(bad)
call
test
pop
lahf
enter
or
icebp
int3
inc
pop
je
xchg
iret
(bad)
call
rcl
into
add
nop
ins
cld
ja
sub
xchg
jmp
ds
(bad)
(bad)
in
call
and
repnz
loopne
jo
xbegin
pushf
cmp
xchg
popf
cli
jns
cwde
mov
(bad)
jg
outs
and
add
dec
call
xor
loope
(bad)
(bad)
(bad)
(bad)
dec
mov
sbb
mov
or
mov
push
mov
cmp
fcmovbe
test
cmps
arpl
aad
or
test
mov
into
stos
(bad)
(bad)
(bad)
jmp
jl
sub
dec
lods
outs
lods
adc
sbb
movs
jne
jbe
(bad)
(bad)
(bad)
push
sub
mov
jl
stos
mov
les
mov
sbb
mov
cmps
mov
inc
fisttp
cmpxchg
mov
punpckldq
xlat
and
adc
test
sbb
(bad)
call
mov
pop
pop
fidivr
(bad)
fist
stos
or
mov
mov
out
(bad)
bound
xor
xlat
cmp
dec
jl
jge
dec
mov
loopne
xlat
add
mov
(bad)
jmp
fucom
fbstp
pop
arpl
push
push
sbb
call
adc
jno
jnp
enter
(bad)
inc
cmps
lods
jne
or
into
outs
es
lods
jg
sub
mov
xchg
rcr
sbb
call
inc
mov
and
xor
pop
or
addr16
xchg
sar
or
das
push
cmp
in
pop
pop
lock
in
xchg
push
jmp
xchg
fnstsw
loopne
iret
(bad)
dec
pop
loop
aas
jmp
jecxz
in
dec
rcl
mov
mov
aaa
mov
les
xor
loop
push
dec
jg
outs
test
or
mov
sbb
and
lds
sub
mov
(bad)
(bad)
inc
inc
and
(bad)
xchg
test
call
cmp
xor
not
adc
iret
push
(bad)
(bad)
jmp
pop
loope
ret
pusha
test
jo
out
pop
mov
test
fistp
ret
pop
lock
imul
ret
ja
imul
setl
(bad)
(bad)
(bad)
inc
sub
mov
cwde
cmc
cld
sar
nop
out
push
jle
fidiv
sbb
mov
inc
sub
out
(bad)
sbb
mov
cmp
jg
sar
xchg
outs
pop
hlt
cmp
test
jg
xchg
das
aas
mov
xchg
pop
in
mov
pusha
push
or
pop
xor
dec
test
cmps
icebp
iret
mov
inc
(bad)
(bad)
(bad)
jmp
mov
addr16
daa
jo
jno
dec
mov
(bad)
xor
inc
out
imul
pushf
sar
(bad)
(bad)
inc
push
jb
pop
aaa
retf
pop
loope
scas
dec
push
inc
call
mov
mov
out
push
add
inc
clc
inc
daa
popf
and
pop
jle
js
mov
xlat
call
cld
jmp
in
pop
mov
push
in
pop
inc
pop
mov
in
sbb
bound
and
lock
dec
out
mov
aam
push
stc
mov
in
pop
cmp
(bad)
(bad)
fisttp
cmps
(bad)
xor
or
cmp
movs
add
(bad)
dec
lock
scas
cmc
test
and
mov
mov
sbb
(bad)
dec
dec
ror
sar
add
push
movs
not
cmp
and
jmp
icebp
repnz
imul
cmc
xlat
jle
out
ror
ret
push
jp
jmp
fnop
out
mov
xor
xor
(bad)
and
stc
popa
call
sar
add
fsubr
or
sbb
into
sub
mov
xchg
(bad)
(bad)
(bad)
dec
(bad)
loope
xchg
adc
int
lods
mov
inc
and
jne
jp
adc
scas
(bad)
(bad)
(bad)
(bad)
dec
jae
fwait
push
movs
icebp
and
sbb
test
jbe
out
push
into
icebp
mov
inc
lea
(bad)
jmp
call
inc
xchg
push
xor
es
jmp
fdiv
inc
mov
mov
lock
bound
fwait
push
mov
xchg
xchg
cdq
xor
es
mov
(bad)
(bad)
(bad)
(bad)
cld
mov
adc
push
ja
ss
adc
out
mov
loopne
jbe
pop
idiv
(bad)
(bad)
call
dec
jmp
ds
ins
add
aam
popa
inc
(bad)
mov
stos
jle
test
cmp
es
(bad)
(bad)
call
jbe
mov
retf
pop
sbb
mov
repz
in
test
adc
ja
push
sbb
mov
mov
jle
cmp
cdq
(bad)
call
in
or
pushw
cmps
fidiv
sub
fisubr
sar
dec
add
lock
out
mov
mov
push
inc
sar
dec
sti
outs
pop
sub
push
addr16
cmps
iret
sti
(bad)
dec
mov
pop
je
into
jp
mov
push
icebp
test
add
repz
mov
xor
gs
and
jae
and
cmps
and
fild
sub
sbb
adc
lods
push
jl
popa
dec
mov
pusha
sub
(bad)
cwde
fld
bound
cmp
inc
adc
(bad)
bound
aaa
add
(bad)
mov
sti
int
jle
lock
lock
add
mov
xor
cs
pop
psubb
add
mov
jmp
add
fidiv
clc
inc
and
dec
out
scas
js
cmc
out
pop
jns
popf
test
loopne
enter
clc
fisubr
add
push
fidivr
dec
jmp
pop
lock
ja
push
jo
out
mov
pminub
sub
je
les
test
mov
outs
shl
jns
dec
repz
mov
push
out
xor
cli
cmp
mov
jg
(bad)
add
cld
repz
arpl
push
mov
jecxz
lahf
jg
shr
add
hlt
movs
pusha
add
mov
add
mov
int3
mov
inc
into
push
out
(bad)
cld
mov
and
fmul
ret
sub
(bad)
stc
int
aas
add
jp
jl
(bad)
pop
test
call
stos
add
cmp
ret
std
repz
sub
add
ins
lods
jmp
add
jg
int3
(bad)
aaa
xor
ds
mov
cld
repz
add
movs
and
js
out
add
sar
cmp
hlt
push
call
mov
push
out
jg
scas
push
data16
add
fcomp
ds
mov
(bad)
mov
push
imul
(bad)
mov
mov
push
cld
repz
clc
movq
sbb
cli
call
test
iret
aas
jmp
mov
add
loopne
sbb
fdiv
enter
out
xchg
cli
push
fs
or
movs
push
dec
dec
addr16
xchg
mov
mov
(bad)
loopne
add
push
mov
jle
leave
mov
outs
ds
imul
arpl
xor
retf
sbb
add
(bad)
sar
out
add
push
jo
ror
mov
jg
scas
imul
jo
rol
jno
out
enter
add
cmp
int3
and
jg
scas
add
(bad)
adc
out
rcl
push
mov
loop
in
push
outs
adc
mov
mov
push
iret
sub
mov
jo
call
add
dec
or
sub
fidiv
push
into
inc
jo
out
(bad)
scas
push
jbe
pop
stc
cmps
sahf
push
jmp
add
retf
out
ds
jg
stc
mov
fiadd
sar
add
ja
cdq
add
add
jmp
neg
iret
mov
mov
inc
xor
repz
int
cld
jo
outs
sub
scas
rcr
push
or
les
push
call
mov
push
dec
cmp
dec
dec
mov
jbe
add
jne
into
push
add
stos
lods
daa
mov
daa
xchg
mov
jmp
pop
or
nop
mov
xchg
sbb
add
or
push
jmp
dec
xchg
jecxz
(bad)
stos
lods
dec
pandn
mov
xor
sub
das
test
mov
lods
xor
pop
jmp
pop
cs
psubq
push
(bad)
mov
or
cmps
pusha
sti
xchg
add
xchg
add
add
div
or
and
imul
mov
pop
in
call
mov
or
adc
pop
inc
push
inc
and
xor
cmpxchg
aad
cmp
addr16
test
pop
aad
cmp
adc
lock
xlat
or
push
mov
jne
jns
pushf
ins
dec
push
aam
add
mov
jg
mov
pop
pushf
pop
sbb
mov
(bad)
(bad)
fimul
mov
scas
div
loop
shl
jae
lea
jmp
ins
ficom
sbb
inc
or
enter
aad
repz
addr16
dec
stos
pop
fwait
sbb
xor
(bad)
mov
adc
push
sub
pop
xlat
pop
xchg
pusha
call
fimul
push
add
sub
fcom
cmp
dec
daa
ret
mov
jns
sub
add
leave
pop
aaa
add
or
in
add
pop
xlat
sub
div
add
inc
fwait
push
lds
push
dec
jnp
lea
add
lods
fcomp
in
fdivr
inc
inc
ins
scas
fisubr
daa
movs
fist
pop
adc
cmps
ds
push
loopne
dec
inc
std
cld
jmp
or
mov
rcr
(bad)
aas
mov
cmp
push
pop
fiadd
(bad)
int3
cmp
mov
push
add
add
fadd
in
cld
add
cmp
adc
and
cmp
sti
out
sub
ror
mov
(bad)
fdiv
jns
cmps
stc
or
and
push
jo
sbb
out
test
inc
aaa
and
xlat
push
lds
xchg
xchg
inc
call
lahf
out
adc
push
in
clc
or
cmp
repz
xor
push
je
xchg
test
cmps
stc
cmp
aam
hlt
add
adc
out
sahf
and
dec
push
fs
sahf
out
mov
cmp
out
add
adc
pop
iret
repz
je
lods
mov
loopne
loopne
and
jno
sbb
push
adc
adc
in
xchg
test
push
pusha
sbb
dec
stos
mov
lds
(bad)
push
push
adc
push
(bad)
ficom
aas
inc
pop
repnz
dec
pop
data16
add
push
xor
ss
add
dec
test
ja
outs
in
pusha
pop
and
mov
and
push
sbb
call
jnp
add
or
pop
sbb
(bad)
sbb
and
push
jo
dec
add
daa
xchg
cmp
adc
jmp
xor
xchg
mov
push
in
xchg
dec
fwait
out
push
pop
pop
jnp
arpl
add
xchg
iret
repz
mov
leave
repz
cmp
std
fdivrp
(bad)
sahf
out
fiadd
test
lahf
out
add
add
and
add
mov
fsubr
add
cmp
add
inc
xor
into
repz
dec
fs
push
ins
ss
pop
adc
out
out
inc
(bad)
inc
fcom
mov
sbb
inc
dec
add
je
ror
daa
or
and
cmps
jb
(bad)
popf
add
adc
dec
dec
ins
add
add
inc
or
aas
inc
dec
pop
daa
push
mov
pop
pop
jnp
pop
test
pushf
add
arpl
adc
daa
rcl
push
sbb
or
or
push
scas
mov
sahf
push
call
jns
out
mov
lock
das
mov
mov
pop
add
add
aam
movs
shl
add
inc
sub
ins
pop
addr16
add
sub
push
dec
ficom
push
fs
(bad)
push
adc
mov
inc
or
test
add
sub
cmp
push
sbb
xor
xchg
ret
arpl
ret
inc
leave
mov
(bad)
jl
cmp
lock
adc
add
mov
dec
or
fwait
push
cmp
aam
(bad)
(bad)
jmp
push
addr16
outs
sbb
dec
(bad)
(bad)
ficomp
cmc
mov
push
(bad)
(bad)
(bad)
inc
aas
xchg
ret
or
pop
and
nop
xor
xor
not
mov
movs
(bad)
(bad)
(bad)
push
sub
cmp
xchg
movs
jge
jbe
imul
je
icebp
inc
popf
jo
fs
(bad)
(bad)
inc
gs
test
sbb
lods
scas
mov
neg
popa
imul
mov
(bad)
(bad)
jmp
into
mov
push
or
or
(bad)
hlt
inc
or
ins
rcl
jmp
or
xchg
mov
arpl
ins
jmp
sbb
and
in
ja
jmp
or
inc
push
mov
in
pop
sbb
cdq
lea
lahf
adc
test
inc
add
sub
not
mov
(bad)
jg
add
sub
or
pop
inc
ds
sar
jns
xor
fisttp
out
cmp
and
dec
in
mov
daa
icebp
ins
inc
mov
xor
or
mov
fucom
jns
ja
mov
(bad)
sahf
movs
enter
aas
jge
jmp
mov
cmp
aas
imul
or
adc
(bad)
aas
dec
xchg
idiv
(bad)
jmp
aas
mov
or
aas
adc
fidivr
or
or
(bad)
jmp
jl
aas
jl
jl
add
movs
aas
adc
adc
aas
cmp
(bad)
(bad)
(bad)
(bad)
fdivr
loop
fsubp
xchg
rcl
aas
jbe
sub
sbb
push
fadd
and
(bad)
(bad)
(bad)
mov
rcr
sar
rcl
inc
test
xor
int3
pusha
lahf
das
enter
ins
push
pop
(bad)
(bad)
dec
fst
bound
nop
les
aas
push
pop
retf
ds
mov
aas
iret
(bad)
jmp
clc
push
pop
test
imul
sti
mov
aas
mov
xchg
adc
mov
retf
shr
jg
(bad)
call
mov
xlat
xchg
adc
aas
jns
int3
mov
(bad)
cs
dec
(bad)
(bad)
(bad)
inc
ins
push
aam
enter
cmp
aas
or
int
add
(bad)
(bad)
call
aas
mov
in
jge
imul
retf
push
xlat
xchg
jl
aas
push
xor
pushf
aas
sub
pop
cld
idiv
xor
dec
je
inc
pop
dec
sahf
fidiv
push
hlt
retf
aas
and
outs
mov
aaa
mov
add
std
rcl
mov
(bad)
(bad)
(bad)
aas
mov
xlat
xor
dec
aas
adc
outs
adc
aas
outs
and
lock
push
mov
cmp
ins
mov
xchg
imul
ja
and
xchg
sub
out
or
and
call
push
je
aas
xor
cmps
js
sub
(bad)
jl
(bad)
ds
rcl
push
fcomip
(bad)
(bad)
push
into
sbb
aas
repnz
mov
call
ss
and
sbb
cs
inc
aas
lods
cmp
fidiv
fild
loopne
loopne
pop
popf
push
jbe
icebp
aaa
cld
jo
cmps
or
repnz
and
je
adc
xchg
push
in
cmp
xchg
inc
mov
pop
add
lahf
das
sbb
stos
fadd
add
iret
push
xchg
adc
iret
add
dec
jne
adc
mov
jno
pop
xor
inc
iret
mov
ins
test
push
sbb
inc
and
jge
jns
pop
xor
add
jns
out
add
repz
pop
adc
or
push
cmp
repz
jl
pushf
or
cmp
repz
sbb
out
sahf
cmps
addps
adc
add
pushf
mov
mov
pop
dec
push
adc
and
pop
add
adc
xchg
pop
pop
int
(bad)
add
mov
add
add
xchg
(bad)
mov
pop
mov
test
xor
dec
pop
jge
jb
or
adc
in
fsub
adc
adc
pop
add
pop
fild
outs
pop
mov
mov
dec
mov
leave
push
pop
pop
aas
mov
das
ins
dec
inc
lea
xchg
ds
mov
std
leave
jp
sbb
je
clc
cld
data16
repz
cmp
mov
cld
push
xor
pop
mov
shl
mov
or
jl
mov
lods
fdiv
imul
add
(bad)
int3
in
mov
xor
dec
push
mov
sahf
adc
mov
xchg
cmps
into
mov
jle
clc
adc
fcom
push
adc
mov
out
push
cmps
push
scas
std
dec
loopne
sbb
lods
push
fmul
out
imul
fild
jge
mov
(bad)
pop
cmp
fcom
jge
dec
adc
(bad)
into
lods
jmp
mov
xchg
lock
aam
cmps
enter
xor
js
(bad)
cld
scas
in
out
lods
popa
add
jle
push
in
mov
xchg
fisub
and
movs
test
inc
dec
mov
pop
sti
xchg
rol
pop
(bad)
ds
pusha
int
mov
mov
inc
and
test
cmp
loope
mov
dec
repz
fdivr
push
mov
sahf
ins
pushf
in
jnp
out
(bad)
sub
hlt
data16
pusha
into
add
inc
out
mov
cmp
mov
or
(bad)
add
ds
faddp
pushf
mov
ds
je
mov
jge
lods
sub
mov
mov
loop
dec
mov
adc
cmp
ds
lock
jge
mov
jmp
mov
and
test
shl
(bad)
inc
pop
pop
sti
int3
loope
ss
sub
fs
loopne
icebp
loopne
call
push
push
fsubrp
jecxz
cmp
push
int3
push
push
idiv
cmp
sbb
and
fs
fsubr
test
ss
inc
fistp
sti
mov
fbstp
jl
push
hlt
pop
mov
inc
jae
jge
ja
outs
inc
into
and
push
pop
sbb
or
add
test
into
(bad)
shr
inc
adc
fidivr
and
cld
push
and
push
push
test
mov
fsubr
sahf
sar
mov
lock
test
ffreep
test
xor
sar
cmps
push
fdivr
cwde
(bad)
(bad)
pusha
mov
push
js
inc
dec
ss
loopne
jo
add
dec
mov
(bad)
nop
sar
mov
(bad)
xor
int3
push
fidivr
add
loopne
mov
xor
in
mov
repz
pop
fcomp
pushf
outs
or
loopne
sub
mov
(bad)
sar
mov
sbb
ds
pop
sbb
js
cld
loopne
es
div
xchg
adc
popa
test
pop
dec
push
out
mov
js
es
shl
add
nop
daa
ds
mov
mov
into
dec
push
cld
push
int3
xchg
jnp
sbb
lock
clc
push
in
sar
mov
nop
xchg
mov
imul
and
fisubr
cmp
jns
out
pushf
ds
xor
push
inc
mul
xchg
sub
inc
push
idiv
jnp
fsub
mov
ds
dec
push
aam
jo
loope
hlt
dec
xchg
push
jl
out
mov
fs
and
aam
sbb
into
in
addr16
cmp
lock
jo
sahf
cmps
xor
dec
cmp
fcomip
cmps
mov
or
mov
dec
rol
inc
je
add
or
clc
sahf
shl
push
push
sahf
aaa
outs
jbe
enter
clc
push
nop
les
mov
stos
pop
out
scas
xchg
into
fcomp
push
jbe
pushf
sahf
ret
jnp
pop
jle
iret
xchg
or
addr16
cs
jecxz
fadd
call
ucomiss
dec
lahf
jmp
(bad)
loopne
fnstcw
push
test
pushf
xor
pop
push
push
dec
push
mov
adc
xor
sbb
xchg
xchg
xor
push
(bad)
push
into
inc
sbb
(bad)
(bad)
cld
push
enter
jnp
iret
jnp
push
in
sub
ss
(bad)
mov
jo
ins
push
push
sbb
push
mov
push
ds
mov
into
xor
pusha
inc
loopne
adc
xor
xchg
and
aam
push
add
sbb
or
push
sbb
mov
sahf
aam
push
push
into
sbb
push
movs
mov
into
sub
xor
in
(bad)
fild
xor
jp
adc
push
movs
mov
js
mov
adc
(bad)
lock
inc
loopne
es
pop
outs
add
jle
jbe
(bad)
loopne
cmp
mov
aaa
scas
les
loopne
out
out
jle
cs
inc
out
ret
aaa
movs
mov
scas
out
mov
add
dec
data16
fadd
stos
sar
jbe
data16
mov
lock
push
pop
idiv
test
mov
loope
test
inc
pop
push
xor
loopne
pop
mov
not
pop
scas
repz
movs
fmul
rcl
jle
xlat
lods
fimul
pop
jbe
dec
mov
inc
ds
or
enter
push
sbb
xlat
jnp
jmp
push
sub
adc
push
xchg
pop
xchg
cmp
cmp
and
lods
pop
mov
stc
sbb
push
ds
fbstp
outs
cmp
cmp
mov
push
xchg
pop
sbb
inc
stc
fisubr
dec
cmp
cmp
scas
in
sahf
push
out
ds
cmp
dec
scas
mov
dec
loopne
scas
cwde
xchg
xchg
jnp
pop
je
push
mov
pusha
push
push
fbstp
imul
cmp
inc
push
aam
jns
cmp
jbe
les
push
push
js
test
cmp
dec
jo
jo
out
jecxz
fiadd
rcl
ror
icebp
test
sub
dec
fistp
fs
mov
js
rol
js
add
add
nop
inc
add
add
adc
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
mov
add
call
and
popa
cmps
fnstcw
sbb
mov
sahf
mov
and
out
sahf
dec
loopne
cwde
push
sub
inc
inc
ins
test
and
fsubr
mov
fdiv
cmp
cmp
mov
sahf
out
pop
bound
aam
idiv
jl
inc
cli
jl
inc
out
pop
repnz
and
inc
es
jae
repz
mov
pop
leave
repz
test
call
inc
mov
shr
add
out
imul
out
ins
stc
jg
mul
fild
test
dec
pop
inc
add
inc
add
stc
cmp
out
clc
or
enter
xor
cmps
sub
cld
sbb
int3
fnstcw
iret
mov
inc
les
dec
sbb
push
lods
mov
pop
in
cmovne
sbb
daa
push
inc
data16
pmulhuw
push
adc
cmp
out
int
push
inc
aaa
ins
push
add
mov
dec
sahf
out
retf
push
inc
mov
and
jp
add
cmc
push
mov
xor
cs
or
frstor
hlt
push
and
retf
(bad)
rcr
pop
push
push
push
add
xchg
and
cvtps2pd
jne
pusha
sbb
sub
imul
xchg
sub
dec
sbb
sbb
push
and
sub
sub
dec
jae
outs
ja
xor
dec
pop
cmp
sub
(bad)
push
fld
add
scas
inc
dec
inc
pop
sbb
loopne
test
add
jae
and
inc
add
imul
pmaxsw
add
dec
inc
mov
push
or
cs
mov
leave
repz
mov
xchg
inc
ret
sub
sub
idiv
cmp
ins
ins
xor
cli
inc
adc
pop
and
add
mov
daa
mov
and
inc
popa
adc
ins
inc
and
stos
push
sub
daa
xchg
test
pop
cmp
inc
dec
push
ins
loopne
aas
je
inc
dec
dec
mov
dec
sub
cmp
hlt
mov
xchg
cmp
adc
mov
sbb
dec
push
ja
jae
lock
cmp
leave
sar
sub
push
mov
xor
xor
add
or
add
pusha
call
fsubr
or
out
add
sbb
push
and
add
test
mov
add
and
add
nop
push
add
add
add
or
push
add
nop
pop
add
and
ret
or
inc
mov
add
dec
or
or
inc
neg
jnp
outs
and
dec
pop
push
and
pop
dec
jb
mov
dec
add
inc
add
mov
fcomp
adc
dec
xchg
push
loop
out
mov
pop
push
inc
mov
dec
dec
cmp
in
dec
add
es
dec
xchg
adc
and
or
(bad)
aaa
or
add
pop
ucomiss
dec
inc
xchg
push
sbb
dec
xor
or
mov
push
or
push
or
faddp
outs
out
push
dec
sub
sub
pop
pop
cmp
xchg
mov
mov
and
or
push
add
inc
xor
push
adc
inc
stos
or
add
or
bound
out
bound
les
jecxz
or
or
rol
mov
cmp
dec
loop
adc
or
push
aam
mov
inc
adc
and
adc
sysret
adc
or
dec
repz
jnp
push
mov
sub
or
pop
jl
fild
push
mov
sahf
idiv
or
bound
dec
inc
inc
dec
push
xlat
lea
setae
push
mov
pop
fcomi
mov
or
fiadd
adc
or
pop
ja
add
jbe
sub
ja
fsub
das
inc
add
mov
inc
arpl
in
add
dec
lods
sar
shl
dec
sti
or
(bad)
sbb
dec
jecxz
jecxz
fisub
dec
push
rcl
mov
stos
push
mov
ja
fisttp
push
ss
and
cmp
xlat
adc
push
push
sub
sub
cmp
or
pop
inc
push
pop
leave
aad
push
fwait
push
push
jb
push
push
jae
retf
and
sub
gs
jo
out
add
xchg
and
add
adc
and
add
inc
add
add
repz
add
rol
sbb
xor
add
push
jb
add
add
inc
jl
xor
cld
jg
clc
aas
push
in
jns
pop
jmp
rol
popf
in
ins
add
pop
or
push
aas
(bad)
jg
and
add
add
adc
fisttp
pop
jo
pusha
shl
add
imul
psubb
addr16
sbb
fwait
neg
out
mov
lock
out
ja
add
loopne
shl
add
pop
sbb
pop
push
(bad)
imul
xchg
aas
pop
cs
pop
pop
shl
xchg
int
mov
push
pop
std
lock
fld
repz
imul
inc
add
jle
mov
sbb
je
push
inc
mov
iret
add
repnz
pop
pop
inc
lock
div
jl
push
or
push
add
outs
in
iret
nop
es
push
add
iret
repz
nop
into
push
sub
enter
add
lahf
adc
retf
jnp
ja
daa
add
add
comiss
loopne
out
fisttp
outs
daa
add
jl
stos
push
pop
std
clc
lock
xor
rcr
dec
add
jmp
test
pop
outs
clc
(bad)
ins
add
pusha
div
in
add
xlat
pop
repz
sbb
mov
neg
pop
das
ds
jg
dec
xchg
add
fsubr
(bad)
pop
in
les
test
out
sahf
imul
jg
aas
nop
ds
mov
add
out
pop
and
pop
cmp
push
stos
enter
aaa
es
pop
sub
lock
or
cs
cmp
(bad)
iret
std
or
ins
ss
or
push
sub
inc
add
mov
in
inc
add
pusha
xor
sbb
push
push
sbb
adc
lds
shl
cmp
fistp
jl
sbb
push
sbb
or
test
ss
xchg
shl
xchg
adc
test
jmp
adc
add
add
pop
imul
inc
dec
adc
call
add
lock
stc
(bad)
pop
ss
pop
push
mov
pop
ficomp
in
add
in
fcmovnu
pop
unpcklps
lods
inc
fwait
adc
sar
aas
sar
pop
cmp
push
es
jo
xor
add
xor
xchg
xlat
mov
not
adc
inc
add
loop
adc
aas
pop
mov
das
add
push
fs
popa
clc
jo
sbb
jecxz
add
add
pop
mov
sub
and
sub
xlat
lock
pop
(bad)
prefetch
ja
dec
jae
cmp
dec
(bad)
mov
mov
sbb
nop
rol
lahf
fistp
mov
adc
pop
lahf
push
mov
inc
xlat
pop
(bad)
jmp
ins
lahf
stc
pop
clc
(bad)
(bad)
jg
push
js
clc
sbb
pop
lock
iret
cmp
xchg
movhps
aaa
inc
push
adc
je
xlat
scas
add
push
sub
mov
pop
inc
add
inc
lahf
fistp
push
pop
push
pop
iret
stos
in
adc
(bad)
jmp
addr16
not
xchg
add
test
pop
add
inc
mov
xchg
cmp
mov
pop
push
daa
shl
fnsave
pop
xchg
ss
mov
in
pop
mov
pop
das
sbb
add
pop
lods
mov
aas
cmp
push
xor
fadd
jp
jp
fiadd
or
retf
idiv
fldenv
and
or
adc
mov
daa
aaa
inc
push
addr16
(bad)
out
fidiv
xchg
cmps
add
and
sub
addr16
add
iret
mov
adc
or
fnsave
es
push
pop
das
mov
mov
(bad)
stc
mov
loopne
sar
cmp
add
das
sub
aam
stc
out
and
nop
mov
mov
inc
sbb
xchg
(bad)
inc
pop
lock
pop
ins
(bad)
(bad)
pop
pop
dec
adc
fistp
inc
adc
push
out
add
jo
clc
sar
(bad)
cld
clc
ss
push
daa
xor
jnp
jns
out
jo
inc
outs
movs
push
xor
mov
retf
inc
mov
out
mov
add
out
add
pop
add
xlat
ins
inc
xchg
(bad)
dec
pop
and
dec
dec
xor
push
add
inc
mov
add
pop
lock
adc
lock
push
push
sbb
and
(bad)
jo
mov
cmp
out
add
sub
scas
add
push
or
sar
push
or
sbb
sbb
sub
push
repnz
lock
push
and
pop
inc
(bad)
loopne
mov
xor
inc
jg
mov
adc
loope
and
inc
les
pop
dec
xchg
cwde
push
adc
add
aas
sbb
inc
lahf
sbb
shl
pop
push
jg
stos
loopne
into
dec
push
pop
xchg
dec
shr
les
aas
ja
mov
dec
call
xchg
bound
pop
lahf
fistp
lock
add
inc
and
les
xchg
lahf
(bad)
hlt
jne
mov
pop
pop
pop
es
mov
push
addr16
or
and
add
jns
fwait
xor
add
mov
sub
adc
mov
jle
daa
sbb
cmp
(bad)
xor
daa
and
cs
xor
and
jae
pop
or
push
adc
cmp
clc
int
jae
dec
push
dec
push
mov
in
out
dec
push
push
daa
cmp
ss
outs
daa
xchg
push
(bad)
sbb
dec
daa
dec
add
daa
mov
(bad)
out
mov
push
daa
clc
push
(bad)
cmc
cmp
mov
add
cmp
cmps
lahf
adc
xor
lahf
jl
enter
and
cmp
xor
and
int3
mov
inc
pop
daa
inc
push
sub
daa
dec
sub
repz
xlat
dec
sahf
cld
xor
mov
dec
sub
xlat
outs
stc
cmp
xor
jbe
and
out
lock
cmp
push
int3
push
jo
mov
and
and
cmp
jo
shr
jmp
pop
push
fs
(bad)
cmp
push
fcomip
out
cmp
daa
push
and
mov
mov
or
(bad)
push
xsavec
daa
xor
jb
clc
repz
test
lahf
cmp
ja
test
xor
inc
or
pop
mov
pop
dec
jmp
xor
mov
repnz
outs
daa
inc
aad
mov
(bad)
in
mov
dec
pop
daa
mov
out
in
and
xchg
jg
mov
(bad)
(bad)
(bad)
clc
ret
rol
jecxz
add
jbe
pop
daa
xchg
repz
or
inc
push
fld
sub
aad
sbb
xor
inc
arpl
cli
pop
add
inc
rcr
in
popa
daa
xor
arpl
add
daa
lahf
cmp
inc
mov
cmp
imul
out
imul
mov
push
aas
daa
dec
retf
jmp
inc
inc
es
mov
sahf
ins
daa
dec
add
mov
(bad)
out
mov
cmp
push
sub
jecxz
shl
in
jbe
pop
adc
xor
push
aas
xor
js
(bad)
in
inc
xchg
sbb
or
stos
movs
jb
sahf
or
or
daa
xor
xor
cmps
arpl
sar
mov
rcr
mov
push
inc
sub
push
jbe
leave
aas
push
xor
push
sub
add
outs
iret
dec
in
data16
inc
push
shl
mov
mov
daa
cmp
and
inc
aas
ret
sti
call
stos
sub
pop
lock
jo
fsub
movs
pop
enter
xor
dec
xchg
daa
mov
sub
mov
lahf
jmp
pop
das
pop
xchg
jne
inc
jo
jmp
mov
fdivr
or
sub
and
push
cmp
sbb
xchg
(bad)
xchg
sbb
loop
fwait
add
sub
adc
daa
(bad)
xchg
fisttp
in
jl
and
clc
mov
sbb
xchg
fcom
mov
dec
xor
dec
xor
dec
out
jae
gs
dec
daa
dec
daa
clc
dec
jnp
cmp
or
dec
sar
dec
jl
jmp
inc
adc
ror
add
daa
(bad)
cmp
pop
aaa
mov
ret
shl
lock
cdq
cdq
push
mov
test
cdq
and
aad
mul
adc
arpl
aaa
inc
push
sbb
cmp
mov
leave
xor
(bad)
jb
mov
not
(bad)
sbb
outs
inc
frstor
push
daa
cmp
dec
mov
push
inc
sbb
stos
pop
dec
adc
icebp
loop
inc
sub
inc
jae
lahf
push
ret
loopne
es
mov
mov
sub
mov
pushf
aaa
es
loope
sahf
fstp
repz
daa
aaa
xor
loope
aaa
daa
and
sub
jbe
stos
inc
push
xchg
sub
push
mov
ins
mov
cmp
push
les
ds
lds
sbb
fstp
rcr
xor
push
and
out
jmp
pusha
and
xchg
add
jb
ret
jns
and
stos
stos
shr
repnz
mov
sahf
or
adc
push
and
mov
hlt
xchg
das
or
push
jo
jnp
xchg
pop
pop
push
pop
jg
add
pop
push
mov
mov
lahf
adc
adc
js
jg
pop
ror
add
sti
or
and
rcl
out
mov
es
cmps
lds
mov
mov
push
fdivr
jo
ud2
jnp
cmp
scas
mov
pop
jnp
add
mov
into
fptan
sbb
add
setl
(bad)
push
and
mov
bound
add
div
pop
adc
test
aas
inc
add
mov
cmp
rcr
aas
pop
mov
jg
pop
mov
push
pop
pop
pop
popa
sub
test
cvttps2pi
inc
push
jnp
cld
int3
iret
pop
or
sahf
pop
imul
xchg
mov
nop
dec
xor
scas
push
add
add
add
push
xor
loopne
lock
pop
pop
sub
mov
pop
inc
cmps
in
add
vmread
lahf
sbb
pop
xchg
xchg
pop
popa
sahf
lock
or
cmpxchg
fidivr
mov
arpl
dec
and
cmp
les
mov
nop
stos
push
xchg
pop
add
add
aaa
xchg
gs
(bad)
or
xor
jg
or
js
add
pop
mov
lock
xchg
data16
cmp
add
in
pop
or
fistp
sti
mov
add
jo
xor
aas
push
mov
shr
scas
nop
add
jo
inc
jecxz
outs
add
adc
mov
xchg
and
fwait
and
adc
and
mov
(bad)
adc
adc
movs
rcr
lea
adc
jne
ins
int
(bad)
inc
lods
adc
fistp
(bad)
mov
das
xor
or
adc
and
jle
seto
in
or
mov
xor
xor
repnz
mov
mov
adc
xor
xor
xor
ja
cmc
adc
xor
mov
add
jge
jnp
movups
adc
xor
xor
add
in
xchg
and
adc
xor
xor
ud1
dec
adc
adc
xor
mov
dec
mov
imul
jg
xor
xor
xor
add
aas
sub
mov
sysenter
jg
add
(bad)
adc
inc
inc
push
or
(bad)
sub
ds
cvtps2pi
sub
mov
cmp
iret
mov
push
xor
punpckldq
push
xor
inc
inc
sbb
fsub
and
adc
xchg
sldt
inc
ins
aas
jg
fcmove
push
pusha
into
(bad)
and
or
jg
mov
mov
cmovbe
mov
pop
or
sub
adc
xor
push
aaa
pop
adc
add
aas
cmp
sbb
nop
test
(bad)
mov
and
(bad)
repnz
fwait
sub
adc
inc
adc
fcmovb
and
inc
xor
adc
loopne
nop
out
xor
outs
in
(bad)
dec
aas
jle
inc
test
xor
mov
fmul
fisttp
pusha
xor
adc
syscall
sub
add
pop
adc
(bad)
fiadd
cmovo
stos
or
into
(bad)
aam
sub
adc
mov
stos
or
push
pop
adc
stos
iret
pop
stos
and
or
xor
iret
imul
dec
pxor
add
rdtsc
dec
invd
and
push
pop
cmps
sar
jb
(bad)
jg
push
mov
pusha
bndldx
mov
push
mov
add
sbb
mov
cmps
sbb
iret
inc
mov
jecxz
and
cmp
add
push
nop
mov
push
add
adc
sbb
xor
aas
cmps
popf
imul
out
(bad)
and
or
mov
add
adc
fidivr
cmp
test
dec
add
add
add
retf
mov
outs
add
add
xor
js
unpckhps
(bad)
sbb
fimul
mov
add
mov
setnp
mov
add
and
mov
xor
pop
imul
cmp
cmovle
pusha
int
jg
pusha
sub
cmp
fisub
sysret
xchg
sub
cs
jno
imul
dec
scas
fidivr
lsl
jge
push
add
bound
adc
iret
jne
xchg
(bad)
add
iret
xchg
or
out
(bad)
adc
nop
xchg
xor
stos
push
sub
movq
or
mov
add
inc
mov
aad
xlat
and
movs
inc
inc
mov
adc
inc
jg
or
fld
iret
and
and
or
add
mov
mov
adc
or
or
js
add
neg
ud1
inc
pop
leave
jae
push
sbb
mov
lahf
fistp
inc
sub
add
pop
mov
neg
fmulp
and
pop
add
and
or
lahf
push
adc
scas
jg
push
test
mov
daa
daa
sub
xor
or
es
fbstp
aas
sqrtps
fist
in
pusha
add
test
fisubr
pandn
movs
push
jp
wrmsr
fiadd
add
xor
mov
imul
xor
dec
fimul
mov
inc
popa
dec
dec
add
pushf
pushf
mov
xor
inc
popa
pushf
xor
das
add
pop
adc
fdiv
scas
nop
fbstp
xchg
mov
inc
aas
nop
lods
and
arpl
out
mov
ds
pop
inc
adc
fist
(bad)
jnp
sub
outs
punpcklbw
inc
adc
xor
jbe
ucomiss
bsf
inc
ret
pushf
inc
inc
cmp
mov
ds
add
cmp
fild
lahf
or
aas
dec
push
add
fsubr
in
add
sti
push
and
dec
add
jecxz
pop
xchg
push
fiadd
cmp
pusha
add
add
add
ins
ss
push
add
inc
add
cs
(bad)
call
(bad)
mov
jle
(bad)
out
adc
pop
adc
clc
out
nop
test
retf
cdq
cmps
sbb
pop
xor
inc
xor
cdq
int3
ins
inc
sub
cwd
int3
xchg
dec
repz
cmps
push
xor
push
int3
(bad)
(bad)
mov
dec
aad
pushw
cdq
jns
mov
daa
(bad)
std
push
xor
out
sahf
out
xor
xor
sahf
out
sahf
xor
xor
xor
jns
out
xor
xor
xor
jns
out
xor
xor
push
xor
mov
adc
add
data16
repz
repz
data16
js
sub
jns
sahf
data16
xor
int3
sbb
out
int3
(bad)
inc
fldenvw
icebp
int3
jmp
test
add
mov
push
in
into
fwait
aad
es
push
xor
iret
repz
cdq
popf
out
mov
cdq
cdq
repz
fnsave
pop
das
(bad)
(bad)
(bad)
cmp
lods
cmp
add
xchg
xor
push
mov
dec
push
popw
pop
xor
mov
push
int3
xchg
psllq
int3
add
cmp
repz
int3
int3
(bad)
jns
into
repz
call
int3
int3
sbb
lds
or
push
push
cmp
repz
(bad)
(bad)
(bad)
dec
repz
dec
(bad)
dec
into
repz
mov
xor
int3
repz
repz
int3
int3
int3
int3
(bad)
into
int3
dec
(bad)
inc
ficomp
mov
push
and
test
add
iret
xchg
add
mov
add
add
add
ss
jmp
mov
adc
add
inc
ins
repz
or
or
pop
in
out
rol
icebp
or
prefetchw
pop
mov
add
adc
xchg
pop
push
add
add
add
cmp
mul
in
add
fcmovnu
sbb
add
or
sbb
jno
mov
pusha
adc
(bad)
add
(bad)
pop
sbb
push
pop
stc
adc
inc
add
ins
pop
jb
in
std
pop
inc
shl
and
in
in
aad
nop
sbb
sbb
or
aas
mov
or
jg
icebp
pop
push
mov
rcr
and
cmps
mov
sbb
out
pop
loopne
push
fistp
pop
repnz
rcl
add
add
pop
pop
mov
jbe
push
add
movs
sbb
add
out
sbb
int3
or
push
adc
pop
add
add
out
out
jmp
ror
push
and
dec
sub
or
mov
pop
inc
(bad)
jns
outs
dec
push
bound
sbb
pop
mov
cli
pop
mov
repnz
fcomp
clc
icebp
repz
add
(bad)
(bad)
(bad)
leave
fmul
mov
leave
mov
fst
and
aam
fxch
mov
ret
or
fisttp
push
and
adc
cmp
push
adc
push
adc
adc
ins
call
add
add
lar
push
cs
sub
pop
adc
pop
xor
adc
call
pop
adc
push
adc
pop
and
cs
adc
add
pop
pop
jl
lods
dec
pop
stc
xor
add
pop
adc
test
mov
stos
add
mov
mov
adc
cld
(bad)
frstor
push
add
xchg
push
adc
push
int
jnp
adc
pop
aas
cmp
push
pop
push
adc
and
inc
adc
int3
push
or
fsub
pop
push
wrmsr
jo
add
into
mov
pop
pop
xor
mov
and
adc
rol
adc
mul
cmp
call
sub
cwde
mov
mov
shl
mov
(bad)
loopne
jmp
movs
mov
inc
jl
push
mov
jne
jne
inc
sahf
push
pop
inc
and
fsub
repz
aaa
paddsw
hlt
clc
add
(bad)
dec
test
and
jg
adc
rcr
fucom
jmp
repnz
jmp
inc
push
gs
les
cdq
sbb
jno
or
push
and
pop
mov
int
mov
jnp
gs
jg
pop
pop
or
mov
mov
and
mov
cmp
fstp
(bad)
mov
in
out
jg
inc
lds
or
fcom
and
out
cld
mov
mov
pop
repz
pop
hlt
stc
idiv
idiv
clc
add
stc
sbb
adc
sbb
loopne
or
not
pop
push
(bad)
jg
das
in
mov
sti
test
stc
add
xchg
stc
add
(bad)
hlt
mov
cli
test
hlt
mov
std
add
test
clc
fs
inc
leave
sti
push
or
(bad)
rol
(bad)
rcl
(bad)
aam
(bad)
rcl
(bad)
rcl
or
imul
rcl
add
loop
icebp
jecxz
xchg
add
out
lock
out
loop
loop
jecxz
repnz
adc
push
and
hlt
cli
jbe
cli
imul
cli
div
cs
inc
mov
pop
test
idiv
ret
cmc
mov
mov
std
rol
mov
cli
test
or
test
int3
vpaddq
pusha
and
fadd
rcl
(bad)
jle
test
enter
pop
xchg
rcl
vpsrlq
rcl
and
sub
out
jecxz
in
pop
out
adc
cmp
js
lock
pushf
push
jg
fidivr
mov
enter
in
enter
jmp
add
and
fucomp
rcr
stos
mov
cdq
fld
add
nop
or
popa
cwde
fistp
les
out
fsubr
repnz
add
adc
fucomp
hlt
mov
ficomp
xor
add
sbb
sub
mov
clc
jmp
aad
mov
jbe
xchg
fs
shl
cmc
or
mov
cmp
mov
mov
addr16
jle
mov
cmps
fbld
repz
and
cmp
cli
dec
mov
imul
xchg
(bad)
sar
mov
push
and
rcr
fnsetpm(287
jmp
jmp
push
and
jg
push
mov
pop
gs
mov
aam
loope
in
cmc
cmc
std
jle
push
and
test
sub
jns
jbe
inc
test
idiv
cli
inc
add
ficomp
outs
pop
frstor
ret
xor
adc
cld
sar
fldenv
sbb
push
or
cmps
cmps
inc
add
dec
rcl
hlt
sti
iret
inc
int
ret
ret
ror
ret
sub
iret
rcr
(bad)
hlt
mov
loopne
loope
loopne
mov
fldlg2
out
or
adc
mov
adc
mov
stos
push
(bad)
cld
sti
idiv
or
idiv
or
mov
addr16
loopne
lds
stc
mov
mov
cld
test
push
jge
inc
or
aam
push
mov
mov
or
rcl
xchg
jb
sub
add
int
mov
xlat
es
in
add
int
out
push
fisub
jg
aas
lds
loope
mul
add
jmp
int3
in
push
enter
pop
loop
loopne
cmc
(bad)
mov
pop
fdivp
cmc
cmp
jecxz
mov
out
scas
jbe
cli
jmp
into
in
iret
in
fiadd
push
enter
add
pop
dec
ins
ret
das
test
je
mov
jbe
cmc
inc
and
cmp
call
sub
jmp
cli
cli
sti
or
and
cmp
mov
lods
nop
jge
sar
into
iret
add
fsubr
mov
rcr
sbb
cs
sub
gs
repnz
lock
out
xchg
or
out
jmp
and
loopne
adc
pop
fsub
loope
add
cmp
cmp
push
pop
lods
mov
pushf
imul
pop
and
sub
jne
dec
pop
add
dec
fstp
stc
repz
mov
adc
mov
pusha
adc
pop
int3
ror
ret
into
retf
(bad)
popa
pop
fcom
int3
shl
or
pop
xchg
inc
add
add
hlt
loop
fist
imul
cmp
outs
cmc
sti
imul
xor
add
add
mov
xchg
stc
ins
shr
pop
xchg
ins
mov
add
or
mov
fild
les
cld
jg
dec
retf
ror
or
add
int
fadd
iret
rol
int3
rcr
xlat
inc
pop
lahf
fist
push
and
aas
in
repnz
mov
add
jge
jg
mov
add
push
pop
jg
adc
pop
jg
mov
mov
jg
loop
and
push
mov
add
cmp
(bad)
pop
fbstp
fsubr
repnz
fstp
cdq
in
call
mov
cmc
inc
add
mov
aam
(bad)
(bad)
pop
pop
fmul
mov
into
in
pop
or
add
xchg
pop
mov
icebp
in
in
add
cmp
(bad)
jmp
and
mov
fsub
in
(bad)
(bad)
std
jg
mov
cmp
dec
retf
jbe
fiadd
dec
add
adc
add
fsubr
addr16
call
and
int3
(bad)
(bad)
mov
or
and
add
adc
call
je
cmp
pop
mov
clc
or
mov
div
shl
outs
call
add
cld
stc
cmc
retf
dec
dec
cmp
or
add
pop
mov
(bad)
mov
int
int3
iret
mov
int
les
into
xchg
add
aad
push
jmp
jmp
in
loop
lock
test
lock
add
add
add
sti
clc
repz
stc
fs
fwait
stc
div
sti
push
aas
push
jnp
push
mov
add
cmp
push
add
pop
pop
jle
xchg
stc
fist
dec
je
retf
add
add
add
and
dec
push
push
push
xchg
pop
dec
fimul
rcr
push
jne
in
fucomip
jmp
mov
cmp
fs
xchg
or
pusha
shl
fmul
add
pop
jg
inc
add
jg
sar
dec
jecxz
add
scas
sbb
in
add
add
(bad)
fst
in
arpl
loopne
gs
cmp
bound
(bad)
retf
data16
jmp
pop
sbb
sbb
and
pop
in
pop
enter
pop
cwde
push
cli
div
imul
push
cmp
or
(bad)
ffreep
neg
rol
cmp
cmp
lods
xchg
xchg
push
add
pop
retf
cmp
mov
mov
dec
add
jg
ja
test
stos
mov
sbb
push
mov
jg
(bad)
daa
push
dec
dec
hlt
push
out
icebp
icebp
iret
xlat
(bad)
mov
rol
out
or
sub
inc
pop
cs
pop
cli
hlt
repz
push
hlt
icebp
cmc
out
push
mov
ds
push
add
xor
mov
jne
cli
sti
add
lods
aas
push
ret
rcl
inc
ret
or
les
or
into
les
bound
dec
and
ficomp
add
fucomip
mov
ficom
add
(bad)
push
add
add
add
xor
jp
xor
test
push
add
(bad)
add
les
or
sti
sti
push
xchg
ficomp
dec
lods
push
(bad)
ds
(bad)
into
shl
add
movs
add
addr16
rcr
adc
sar
iret
iret
(bad)
iret
fdivr
shr
mov
in
xchg
or
jb
fidivr
mov
pop
add
adc
jg
add
cmp
add
sar
fst
pop
jecxz
xchg
xor
js
loop
fcmovbe
push
mov
add
repz
add
loop
pop
mov
(bad)
retf
xor
and
fisub
iret
pop
ror
push
add
pop
pop
pop
mov
inc
and
mov
cmp
dec
inc
pop
inc
pop
imul
cld
sti
paddsb
outs
and
cmp
mov
add
sub
adc
cmp
inc
pop
pop
cmp
scas
push
sub
push
movs
dec
or
pop
add
pop
and
jbe
pop
dec
push
dec
mov
mov
and
pop
cmp
repnz
pusha
add
fwait
icebp
lock
out
hlt
repz
jb
mov
cli
retf
xor
fistp
mov
out
cli
cmp
hlt
jo
pop
out
div
sti
cmp
div
repnz
lods
push
aaa
xchg
sti
jg
mov
sbb
or
int
push
mov
or
into
retf
inc
add
loope
out
mov
in
icebp
pop
out
test
icebp
cmps
mov
jg
repz
push
add
add
cmp
adc
cmp
mov
test
xor
cmc
adc
mov
not
aas
add
or
ror
cmp
mov
fs
fiadd
sbb
rcl
(bad)
rcl
xlat
sbb
aas
stos
mov
mov
shr
out
adc
add
pop
or
loope
add
mov
add
pop
adc
pop
jg
and
add
loope
stc
cli
adc
add
cli
sti
call
mov
mov
mov
call
mov
cmp
pusha
rol
xlat
in
fsubrp
and
add
out
out
pop
pop
pop
ror
or
sub
loopne
lds
inc
pop
mov
pop
movs
jmp
(bad)
les
mov
mov
fadd
xchg
cmp
sbb
inc
jg
sbb
jecxz
push
and
mov
std
lea
inc
test
pop
mov
ja
push
sub
inc
pop
add
cmc
(bad)
jmp
jmp
sub
add
popf
push
and
add
in
paddusb
fdivr
adc
ja
lock
jmp
add
out
cmc
repnz
and
push
fcomp
call
pop
adc
pop
pop
ror
ret
retf
call
ror
ret
retf
pusha
add
aam
adc
retf
lock
in
inc
pop
jmp
cmp
fldcw
in
cli
cs
cli
or
lock
cli
repz
inc
push
lea
add
fistp
loopne
adc
jmp
hlt
push
cmc
jp
shr
xchg
add
add
shr
cld
mov
add
push
int
retf
(bad)
push
ja
add
push
sar
test
mov
cmc
add
adc
pop
cmp
out
repnz
pop
in
mov
add
pop
jg
and
pusha
jg
pop
add
jmp
cwde
(bad)
iret
add
add
pop
xlat
pop
mov
and
cmp
pop
pop
push
ins
inc
sbb
jg
add
inc
and
mov
repz
call
cmp
inc
and
push
sti
mov
xor
jg
rcr
(bad)
cmp
mov
mov
ja
and
cmp
mov
(bad)
jne
lods
pop
lahf
push
and
mov
mov
mov
jecxz
jmp
in
jmp
jmp
cs
scas
mov
repnz
mov
loope
in
add
loop
fsubp
add
call
lods
sbb
lods
hlt
repnz
repz
fistp
mov
retf
retf
enter
mov
jbe
int3
retf
or
jbe
xchg
mov
push
pop
stos
pop
add
sbb
and
jg
fsubp
jecxz
loopne
in
in
in
call
in
cmc
cs
mov
adc
outs
inc
loopne
pop
ss
icebp
or
or
in
in
jp
call
lods
pop
add
pop
add
data16
push
ret
je
xor
(bad)
into
mov
rcl
enter
jl
sahf
(bad)
rcl
push
lock
dec
out
dec
test
in
in
data16
adc
les
pusha
cmc
in
lock
fidivr
sub
mov
sar
or
std
sub
cld
in
add
cli
sti
in
stc
fucomi
hlt
call
frstor
push
pop
cmp
sbb
retf
ror
pusha
aam
aad
stc
call
aas
pushf
ins
push
mov
jbe
loopne
sti
cli
clc
arpl
or
cmp
bound
dec
jnp
stos
mov
inc
out
out
sbb
cmps
or
push
and
sar
shr
inc
mov
mov
mov
outs
call
mov
inc
jg
sub
mov
xchg
pop
or
and
push
test
pop
jg
js
push
fstp
loope
fld
stos
add
add
push
call
pop
cmc
add
jmp
lock
and
pop
div
fabs
fcmovu
fidivr
(bad)
fst
loopne
in
in
dec
jecxz
mov
lock
jmp
mov
pop
adc
mov
enter
mov
les
test
add
mov
mov
mov
loopne
loopne
sub
(bad)
cmp
mov
aam
loopne
(bad)
add
fneni(8087
(bad)
mov
in
inc
jp
add
add
dec
add
fnstcw
fld
fmul
fnstsw
out
out
in
rol
test
popa
pop
mov
stc
(bad)
ins
shr
mov
add
mov
lds
popa
inc
sbb
retf
sar
xchg
or
sar
mov
addr16
out
xor
push
rcr
or
push
sar
add
jg
jg
xor
pop
jg
dec
jo
pop
jg
adc
push
dec
lock
(bad)
out
add
add
idiv
loopne
neg
(bad)
push
add
(bad)
int3
sbb
jb
shr
jmp
pop
(bad)
jmp
dec
jmp
(bad)
ret
push
out
out
out
pop
cld
or
and
cmp
lock
pop
xchg
sub
stos
faddp
ret
rcr
ret
inc
call
mov
cmp
les
jg
dec
mov
ja
bound
add
push
and
mov
mov
add
jg
test
mov
push
test
fcmovnu
xchg
push
loopne
mov
outs
in
loope
(bad)
in
in
add
pop
test
repnz
or
jmp
(bad)
aad
fstp
(bad)
fstp
fidiv
add
(bad)
ja
jmp
ins
inc
(bad)
mov
lds
mov
cli
lock
sbb
inc
xor
(bad)
cmp
sbb
adc
ins
mov
or
stos
jbe
fcomp
int3
pop
add
add
and
fstp
add
popf
sub
jo
add
in
in
out
in
in
idiv
xor
lahf
jo
jmp
ficomp
fadd
inc
mov
cwde
fnsave
loope
loop
test
ja
jmp
jmp
rol
lahf
cmp
pop
and
js
shr
rol
pop
rol
adc
nop
pop
cmp
inc
cwde
stc
jmp
pop
xor
in
add
into
inc
push
pop
xchg
(bad)
aas
in
les
les
add
mov
out
out
sub
and
out
mov
out
add
mov
inc
pop
pop
js
cld
cmps
jge
lods
test
mov
mov
or
and
cmp
jg
jg
jge
mov
int3
mov
mov
jg
ja
push
and
cmp
mov
(bad)
mov
mov
mov
cs
(bad)
jg
inc
lds
add
cmps
(bad)
call
loop
fcmovu
jecxz
dec
mov
in
(bad)
repnz
fsubp
mov
in
out
in
call
(bad)
(bad)
jmp
outs
lods
in
ins
scas
jmp
mov
jb
in
je
out
jae
out
je
in
jne
lock
icebp
jns
shr
mov
pop
add
(bad)
mov
push
jbe
mov
retf
push
sbb
mov
dec
fwait
dec
inc
push
jbe
das
(bad)
mov
into
xlat
fcmovnbe
(bad)
fldenv
scas
mov
xlat
fcmovbe
push
jmp
loopne
(bad)
in
xchg
jmp
(bad)
sbb
sbb
mov
outs
stos
jmp
ins
mov
jae
in
jb
out
call
js
repz
lock
neg
ss
mov
mov
std
or
(bad)
mov
mov
retf
shl
add
pop
pop
aaa
and
inc
jae
add
add
test
clc
aas
pop
mov
mov
fsubp
mov
xchg
jmp
inc
pop
fcomp
mov
sbb
inc
pop
inc
sti
inc
pusha
xchg
cmps
shl
mov
movs
mov
inc
jl
aas
sub
pop
test
addr16
fstp
das
shl
mov
mov
(bad)
(bad)
mov
push
and
pop
sub
nop
lods
pop
pop
movs
hlt
adc
push
and
push
sub
mov
sahf
mov
stos
or
and
sbb
jg
or
and
inc
mov
cmp
adc
add
call
jbe
pop
call
ss
ror
pop
idiv
movs
cs
add
add
or
add
popa
jl
inc
nop
pop
cmp
js
nop
in
xor
jge
adc
xchg
call
add
push
adc
pop
add
jb
iret
scas
lahf
pop
cmp
sbb
inc
inc
call
mov
pop
fst
fdivr
mov
fild
pop
adc
push
test
mov
xor
pop
fsub
pop
dec
add
mov
sti
pop
push
xchg
pusha
lods
mov
xor
pop
add
movs
fistp
sub
aad
fistp
les
or
mov
(bad)
mov
mov
(bad)
add
sub
pop
jecxz
sbb
jp
push
adc
cmp
aam
cmp
les
add
lahf
push
push
rol
mov
(bad)
mov
add
int3
shr
ret
(bad)
out
out
mov
shr
loope
iret
fcomp
leave
rcr
(bad)
rcl
movs
call
ror
mov
repnz
lock
in
mov
neg
jecxz
jmp
aaa
icebp
cmc
cmc
add
movs
or
fbstp
mov
fstp
imul
lock
(bad)
in
sti
cld
cld
sti
std
std
add
pushf
fisubr
div
aaa
push
inc
ret
mov
jo
xchg
mov
and
dec
fs
jo
dec
xchg
add
dec
pop
add
or
add
and
inc
add
adc
adc
nop
inc
push
add
mov
sub
inc
inc
add
push
sbb
cmp
dec
add
scas
and
stos
out
pusha
cmp
cmps
dec
inc
jns
inc
int3
add
add
inc
push
cmps
str
jno
mov
pop
add
adc
adc
out
push
dec
mov
push
ficomp
ja
loopne
inc
sub
cmp
imul
ja
sub
fdivr
mov
arpl
or
and
jb
outs
nop
inc
mov
(bad)
loopne
pop
pop
jo
outs
or
fisubr
sahf
cmp
and
loope
add
cmps
xor
arpl
out
jge
data16
push
nop
xchg
xchg
outs
sub
pop
out
jbe
jnp
push
jbe
xor
cmps
push
adc
add
xchg
xchg
sub
rcl
add
aam
ss
(bad)
iret
cwde
lods
outs
sbb
jne
(bad)
and
pop
fidivr
sbb
add
push
add
xchg
push
ret
jns
(bad)
mov
sub
jo
cs
adc
loop
aaa
es
outs
rol
pop
push
mov
ret
pusha
(bad)
icebp
sbb
aas
fild
cmp
(bad)
mov
add
sub
mov
push
add
mov
cs
les
outs
and
push
stos
scas
fild
push
lahf
pop
test
aam
pop
inc
lods
loopne
mov
(bad)
test
mul
mov
aam
ja
cli
sbb
xchg
jae
push
add
dec
shr
sahf
pop
test
xchg
mov
pusha
adc
dec
fs
cmovb
fisttp
pop
sub
xchg
mov
(bad)
mov
out
adc
push
adc
push
add
adc
fstp
(bad)
xchg
out
ss
mov
pusha
shl
das
outs
retf
sbb
stos
xchg
stc
je
push
mov
scas
je
ss
dec
mov
hlt
enter
sub
mov
ins
xlat
pop
imul
add
add
push
jmp
push
sub
add
adc
jmp
push
add
das
mov
add
rcl
dec
add
mov
ret
inc
stos
jp
pop
mov
bound
(bad)
xchg
jle
xchg
add
cmps
inc
daa
into
loope
adc
push
push
cmp
mov
push
sub
cmp
loop
mov
daa
add
mov
or
out
ja
xor
sar
sbb
ins
ret
pop
add
inc
arpl
inc
rol
(bad)
add
sbb
pop
xor
out
mov
popa
(bad)
or
sub
and
shl
mov
fucomi
mov
and
loop
cmp
adc
xchg
adc
in
inc
pop
mov
daa
jae
pusha
test
lods
adc
ret
or
shr
cmp
inc
retf
lods
and
popa
jecxz
test
jne
jecxz
in
out
clc
shl
dec
add
daa
inc
ror
cmp
sub
iret
dec
rcr
loopne
arpl
ficom
mov
lahf
jnp
mov
jmp
in
clc
push
adc
stos
mov
and
stos
fidivr
xchg
cmp
jmp
mov
popa
and
fild
inc
xlat
inc
xchg
dec
mov
outs
inc
pop
mov
jb
jae
mov
ins
adc
ret
fbstp
call
mov
popa
bound
es
js
ret
push
sub
inc
dec
cmovl
cmps
in
add
dec
push
pop
pop
jecxz
imul
pop
or
adc
in
inc
arpl
rol
mov
repz
mov
sti
cmp
inc
mov
lods
rol
sti
lds
scas
div
adc
xor
test
add
dec
xchg
(bad)
shl
mov
bound
outs
fdiv
cs
pop
pop
adc
ins
push
(bad)
mov
movs
mov
mov
sbb
arpl
pop
and
test
mov
ret
push
pop
ins
mov
movs
aaa
sti
and
cmp
jbe
sub
add
sub
mov
cmps
sub
psraw
and
mov
dec
cmp
inc
push
adc
rcr
push
or
cmp
arpl
xor
jmp
outs
add
inc
inc
mov
imul
xlat
or
adc
mov
je
(bad)
jne
scas
xor
push
cmp
call
cmps
pop
add
xor
xchg
or
push
imul
dec
dec
adc
push
mov
adc
jo
test
jne
jb
jae
sub
sub
retf
arpl
push
mov
cmps
xor
rol
outs
xchg
xchg
push
scas
push
rol
outs
scas
push
xchg
push
div
push
sbb
dec
push
call
pop
add
push
lods
push
bound
adc
das
out
pop
inc
push
or
pop
mov
lea
and
inc
or
xor
ror
cmp
scas
push
sub
xchg
add
adc
scas
and
or
pop
push
fsub
push
btc
and
mov
(bad)
push
xor
and
or
mov
out
imul
pop
mov
repnz
mov
or
or
dec
(bad)
pop
xchg
add
adc
or
mov
inc
sbb
xor
add
scas
xchg
jg
arpl
and
sub
inc
add
inc
cmps
inc
sub
ret
retf
add
loop
inc
das
sub
and
das
mov
pop
mov
add
dec
or
pop
ja
ja
addr16
stos
adc
iret
or
adc
push
mov
or
pushf
xor
adc
pop
and
or
pop
ins
and
add
or
dec
jns
adc
fisubr
sbb
push
push
(bad)
jo
pop
or
lar
mov
scas
add
arpl
imul
inc
xchg
sti
lock
sbb
aaa
add
ins
xchg
adc
movs
or
cmps
test
icebp
cs
pop
test
adc
retf
xor
test
jecxz
fwait
add
neg
or
imul
push
mov
test
or
arpl
stos
inc
loopne
jecxz
aas
push
add
mov
pop
pop
jae
xor
jne
sub
shr
dec
adc
push
mov
popa
pop
(bad)
and
or
sbb
mov
outs
aaa
pop
lods
add
fild
hlt
jo
(bad)
inc
sahf
sbb
xchg
mov
das
dec
test
jnp
pop
inc
mov
xlat
jbe
mov
daa
imul
pop
adc
sbb
call
(bad)
dec
jecxz
cmp
jae
add
pop
xchg
fimul
arpl
or
lock
bound
jnp
xchg
jnp
cmp
fisttp
loop
mov
popa
mov
inc
sbb
mov
and
test
icebp
xchg
imul
cmps
enter
jae
rcr
fistp
cmp
addr16
or
movs
inc
adc
push
pop
in
lods
adc
push
aas
bound
cmc
sbb
inc
stos
dec
test
jb
sub
js
lds
inc
aam
aaa
jae
add
mov
pop
pop
mov
iret
(bad)
repnz
jne
imul
outs
aas
les
add
xlat
scas
mov
inc
and
cmps
push
ror
fdivr
fs
fiadd
push
jmp
mov
and
sub
fs
xor
aas
(bad)
lock
sbb
or
jp
movq
pusha
bound
inc
das
dec
scas
dec
push
jo
adc
xor
inc
xor
xor
imul
sub
pop
rcr
pop
mov
sbb
and
sub
pop
add
imul
(bad)
(bad)
or
mov
outs
test
outs
loopne
test
xchg
loopne
imul
dec
dec
imul
jbe
and
aad
ds
xchg
mov
bound
xchg
xor
lds
ja
xor
call
retf
mov
dec
xor
xchg
sti
jnp
loopne
(bad)
sbb
push
add
add
jne
aas
iret
bound
mov
daa
inc
aam
push
pop
inc
and
lods
data16
sti
test
out
pop
pop
stos
push
mov
add
ja
mov
sub
mov
arpl
mov
and
xor
add
iret
lahf
or
mov
pop
inc
adc
ficom
hlt
mov
jl
cs
sub
mov
cmp
ret
mov
cmps
add
out
cmp
retf
mov
pop
aas
rcl
int
sub
dec
arpl
add
ds
inc
sub
inc
pop
jnp
xchg
adc
push
and
lods
fwait
jmp
sub
sbb
scas
sub
cmp
jmp
imul
jo
jo
and
pop
jne
adc
add
out
arpl
pop
xchg
mov
jmp
addr16
arpl
pusha
das
mov
stos
fild
or
sbb
push
sub
cmps
xadd
mov
daa
inc
rcl
aaa
push
sub
push
outs
xchg
daa
and
sub
xor
ja
les
push
sub
js
jp
or
jbe
jae
pop
push
xor
dec
das
xchg
jbe
fwait
addr16
adc
adc
push
and
xchg
daa
adc
push
imul
xchg
outs
mov
sub
outs
adc
dec
imul
and
inc
(bad)
int
cmp
add
add
mov
add
outs
dec
int
fild
push
jo
inc
sar
and
dec
mov
add
arpl
mul
ret
ja
xchg
inc
xor
dec
mov
jo
rol
adc
cli
inc
and
call
push
or
cmp
outs
mov
pop
sti
add
xchg
or
call
pop
fdiv
jo
sahf
pop
fwait
add
push
or
cmps
test
jnp
jl
loopne
sbb
aam
or
add
sbb
cmps
test
ins
mov
mov
or
sub
mov
add
dec
xor
daa
pop
push
xor
test
ja
adc
cmp
xor
and
dec
aaa
dec
fidivr
add
das
ficom
xor
push
jnp
add
rol
jo
rol
jae
dec
shl
xchg
jb
adc
add
ja
and
repz
and
push
aaa
cs
push
imul
sbb
and
fnsave
dec
adc
push
mov
ja
lods
push
xlat
pop
mov
mov
popa
mov
dec
out
and
popf
les
cmps
daa
movs
rol
retf
mov
sub
aam
lods
lahf
jnp
adc
mov
or
test
pop
adc
sbb
mov
mov
scas
cmp
stos
ret
mov
stos
xor
inc
sahf
pop
dec
add
(bad)
sbb
push
nop
cmp
xlat
sbb
mov
test
call
or
sbb
test
mov
xor
scas
jb
mov
aaa
mov
sti
xor
mov
pop
jnp
jecxz
(bad)
ror
pop
push
call
jne
push
jg
push
mov
jbe
mov
cmps
jbe
inc
jnp
add
or
add
sbb
or
loop
pusha
adc
push
data16
(bad)
sbb
mov
aaa
push
push
inc
rol
jmp
or
fistp
stos
pop
scas
sahf
sbb
inc
pop
shl
mov
aad
lods
cmp
out
out
fwait
push
loope
push
ret
ja
and
push
add
or
or
mov
pop
add
adc
outs
mov
dec
lahf
or
dec
sub
jne
push
pop
cmps
and
sub
popa
jnp
mov
sub
repz
push
push
stos
pop
mov
and
xor
sbb
pop
mov
dec
mov
pop
retf
push
scas
sbb
jnp
sub
shl
cmp
push
sub
clc
inc
out
adc
mov
call
mov
arpl
ret
inc
fld
mov
mov
jnp
mov
jmp
inc
popf
or
sub
call
dec
pusha
shr
push
inc
add
jle
je
(bad)
or
sbb
mov
sub
cli
or
cmps
test
inc
pop
or
pusha
adc
dec
jne
dec
sub
fwait
jo
sbb
das
sub
add
jae
xchg
sbb
add
jno
jnp
dec
inc
test
fist
mov
ret
adc
push
push
sbb
les
in
(bad)
pop
rcr
rcl
pop
push
adc
int
test
aaa
cwde
and
adc
dec
mov
into
xchg
loop
sub
add
ret
and
(bad)
add
xchg
pop
aad
hlt
ss
(bad)
fild
or
and
push
jle
mov
(bad)
xor
xor
inc
data16
lds
mov
daa
and
rcl
fwait
cmp
mov
push
mov
pop
mov
shl
aaa
(bad)
adc
inc
mov
jmp
push
shl
jp
sub
les
push
ret
adc
scas
mov
aaa
push
xchg
push
add
mov
cmp
dec
aaa
sbb
ss
add
inc
jnp
aas
add
xor
dec
inc
jo
xor
or
daa
pop
xor
mov
dec
xchg
dec
xor
(bad)
(bad)
rol
scas
jns
fs
bound
pusha
push
sub
ins
aad
sbb
dec
mov
inc
aad
xor
outs
mov
jecxz
jno
shl
rol
shl
push
inc
retf
sbb
(bad)
sbb
mov
lods
inc
adc
psubq
(bad)
jne
ret
inc
adc
xchg
scas
xor
push
mov
adc
and
jno
mov
cmps
cmps
and
and
ret
test
or
daa
test
xor
cmps
push
xchg
pop
jnp
xor
jo
jmp
or
call
mov
ja
mov
sbb
iret
out
push
or
inc
bnd
xor
add
ins
rcl
retf
out
mov
rcl
shr
mov
xchg
adc
movs
sub
and
(bad)
fimul
addr16
push
aas
adc
aas
or
jno
and
pop
mov
cmp
add
or
adc
push
test
pop
sbb
fadd
jnp
movs
out
adc
and
xchg
xchg
xchg
and
pop
pop
pop
pop
(bad)
or
sub
sub
test
popa
jecxz
(bad)
rcl
mov
sbb
pop
push
and
sub
ja
ins
or
xor
dec
mov
stos
adc
cmp
scas
sbb
jo
lds
ss
xchg
and
pop
pop
xor
cmps
scas
imul
sub
pop
or
pop
dec
jmp
and
bound
(bad)
sub
sbb
mov
dec
mov
mov
or
inc
add
add
(bad)
movhps
mov
inc
push
dec
shr
xchg
add
aad
pop
mov
or
fld
and
jo
iret
outs
add
sbb
test
(bad)
lods
sub
je
mov
mov
fild
pop
adc
jg
and
adc
and
add
mov
ret
push
sbb
movs
arpl
pop
gs
push
inc
stos
jae
push
mov
xchg
or
mov
mov
add
jmp
inc
repnz
and
loope
and
cli
cmps
stos
or
push
sub
mov
movs
adc
jp
xchg
add
or
movs
aam
inc
push
pushf
addr16
mov
icebp
jb
sti
(bad)
mov
mov
push
and
mov
mov
adc
pop
adc
jg
mov
add
jmp
adc
mov
cmps
pop
pop
repz
lods
mov
fidivr
and
jns
and
(bad)
arpl
xor
dec
lahf
mov
push
or
sbb
sbb
xchg
xor
test
aas
pop
sub
ins
mov
push
sub
cvtdq2ps
add
push
dec
outs
mov
pop
jbe
dec
fcmovb
mov
jnp
and
das
mov
xchg
add
push
push
gs
mov
push
add
retf
pop
inc
outs
frstor
pop
das
push
jnp
pop
xchg
mov
xchg
outs
daa
or
or
mov
(bad)
dec
cs
es
add
pop
(bad)
fiadd
xor
ret
out
enter
bound
and
push
aas
cmp
xlat
sbb
repz
mov
(bad)
jae
sti
jl
pop
jl
or
je
adc
inc
pop
popf
aam
add
das
and
fist
lods
test
sub
sbb
scas
mov
cmc
dec
jo
dec
inc
and
sbb
bound
adc
dec
out
jnp
test
jae
sbb
mov
retf
sbb
mov
pop
cmp
mov
adc
dec
and
adc
sub
(bad)
(bad)
adc
sub
arpl
jnp
(bad)
je
aad
(bad)
stos
lea
test
ja
add
xchg
sub
call
cmp
xor
inc
ins
movs
jbe
retf
fisttp
retf
stos
jnp
and
jo
scas
dec
stos
mul
inc
popa
(bad)
adc
stos
mov
push
and
(bad)
pop
xor
jmp
push
pop
jbe
xchg
and
adc
bound
jb
push
mov
test
cmps
movs
push
sub
sub
or
ja
cs
shr
sbb
xchg
inc
mov
pop
push
sbb
and
adc
fadd
sbb
and
mov
xor
mov
xchg
sbb
cmp
pop
mov
sbb
not
dec
push
imul
pop
adc
inc
jo
adc
pop
jmp
inc
mov
stos
lods
inc
pop
mov
lahf
inc
outs
cmp
add
sbb
scas
lods
mov
stos
adc
pop
out
pop
popa
pop
and
aaa
test
aaa
or
xor
scas
sub
movups
cmp
jno
xor
and
mov
enter
fwait
add
mov
push
mov
imul
mov
arpl
pop
mov
sub
sub
movs
and
lahf
inc
fbld
pop
adc
or
lahf
xor
xchg
cmp
mov
xchg
dec
mov
outs
jg
mov
das
jg
pop
or
stos
push
and
xor
arpl
dec
addr16
pop
imul
lea
jb
iret
repz
adc
pop
mov
jg
push
pop
pop
mov
emms
inc
mov
fiadd
pop
lock
mov
out
dec
jno
cmps
or
das
ds
bound
mov
mov
adc
sub
(bad)
fs
mov
retf
dec
cmp
shl
mov
pop
aam
mov
xchg
pop
jp
outs
pop
jb
xor
adc
ret
ins
push
stos
xlat
fwait
mov
out
and
jnp
stos
push
or
outs
repz
int
and
jg
inc
add
pop
in
mov
(bad)
pop
jg
push
or
arpl
es
aaa
mov
repz
add
fwait
cmp
inc
or
push
add
arpl
ins
inc
jb
sub
pop
push
sub
sbb
cwde
mov
mov
xor
dec
or
movs
test
test
inc
mov
or
aam
add
movs
test
rol
test
adc
sbb
rol
mov
imul
aaa
retf
and
jo
push
outs
inc
dec
cmp
xor
inc
sub
xchg
push
or
push
imul
mov
imul
push
pop
loop
and
jae
rol
xor
fld
jno
adc
sbb
cmp
add
mov
movs
test
rol
xchg
pop
and
or
push
punpckhdq
adc
xor
rol
and
push
mov
mov
repnz
pop
and
mov
adc
pop
stos
sbb
nop
fst
sbb
adc
mov
xchg
fld
sbb
jmp
and
cmp
out
push
dec
pop
rcl
inc
dec
or
inc
popf
sbb
movs
test
mov
jno
fdivr
pop
js
or
fsubr
sub
push
pop
and
sti
sar
dec
add
arpl
jg
stos
dec
or
gs
xor
mov
sbb
shl
sbb
or
test
daa
push
nop
push
rol
sub
loopne
stos
push
or
pop
fisttp
or
rol
stos
cdq
movups
and
sbb
add
cmp
sbb
retf
popa
pop
pop
mov
ss
ret
cmps
test
xchg
adc
inc
sbb
adc
push
push
fisubr
and
cmp
pusha
pop
cmp
and
push
rol
(bad)
jbe
cmp
aas
dec
or
pop
adc
dec
ficomp
inc
ds
neg
mov
xchg
push
out
pop
rcr
es
outs
push
pop
mov
dec
lods
sbb
rcl
pop
loop
ds
sub
or
dec
pop
and
pop
ret
movs
add
ret
jmp
add
sub
data16
rcl
cmp
pop
sub
ret
jmp
out
jge
push
and
jnp
cld
js
cmps
dec
mov
test
stos
push
sub
push
add
cmp
mov
jmp
sar
sbb
cmovge
mov
stos
ins
add
pop
loopne
push
push
lods
mov
fcomp
mov
bound
(bad)
movs
jo
adc
shl
es
lahf
and
mov
dec
rol
movs
mov
mov
movs
test
sbb
data16
fiadd
adc
pop
inc
xchg
xchg
jne
fiadd
xor
(bad)
mov
clc
pop
movs
xor
popa
pop
aas
push
or
mov
inc
mov
mov
sub
or
aad
push
push
xor
adc
add
sub
mov
sti
test
cmc
mov
sbb
addr16
or
inc
mov
pop
outs
aam
or
or
jae
pop
mov
xor
push
pusha
add
scas
sbb
cwde
push
inc
out
pop
pop
sbb
popa
push
mov
push
dec
rcl
xor
push
pop
dec
and
inc
sub
cmp
inc
add
mov
dec
mov
stos
sbb
(bad)
adc
mov
dec
mov
hlt
and
sbb
jo
mov
mov
mov
or
inc
push
xor
dec
or
stos
xor
test
adc
cmc
mov
and
call
je
lock
loopne
jecxz
xor
and
xchg
xor
lods
(bad)
je
test
scas
xchg
xor
xor
adc
xor
jnp
add
xchg
cmc
cli
push
xchg
and
popa
pop
cmp
rol
test
sub
xchg
mov
es
adc
cmp
lods
xor
or
adc
push
add
push
pop
adc
adc
adc
out
push
mov
cmps
pop
cmps
push
mov
cwde
fneni(8087
push
sub
or
push
push
movs
popw
and
sub
stos
mov
sahf
cwde
push
pop
bound
fisub
cmp
add
xor
push
adc
adc
jmp
and
int
or
and
sar
pop
dec
pop
and
(bad)
out
add
sbb
sbb
inc
rol
rol
sbb
mov
(bad)
pop
add
add
add
inc
sbb
sbb
call
sbb
mov
inc
inc
inc
push
dec
push
int3
xchg
std
dec
or
push
push
inc
push
or
jno
cmp
add
or
ret
xchg
(bad)
add
or
dec
loop
push
and
cdq
popa
push
or
or
jnp
iret
clc
sub
add
mov
push
sbb
push
mov
and
popa
and
loope
data16
add
add
cdq
sbb
mov
xor
adc
ss
aad
or
inc
fwait
int
mov
jmp
arpl
dec
repnz
sbb
and
cmp
int
mov
shr
sub
(bad)
jnp
push
inc
jmp
(bad)
mov
inc
cmp
dec
inc
inc
dec
or
fcom
js
(bad)
add
jmp
mov
call
outs
mov
call
push
pop
add
out
data16
sub
iret
imul
pop
fldenv
call
je
ins
(bad)
jl
add
add
data16
push
or
push
arpl
dec
dec
out
mov
sbb
push
fist
push
ss
push
add
dec
shl
fwait
xchg
inc
std
(bad)
int3
jmp
dec
dec
jmp
(bad)
mov
and
mov
add
inc
out
and
mov
clc
fbld
jmp
(bad)
(bad)
(bad)
and
imul
jmp
push
jmp
aam
sub
call
cmp
pop
outs
fistp
pop
std
dec
ror
sbb
pushf
ins
idiv
dec
dec
(bad)
mov
scas
jmp
sub
jmp
add
ja
(bad)
cld
fild
mov
jmp
push
cmp
cmps
std
je
push
outs
in
outs
js
dec
adc
rcr
in
sub
rol
(bad)
cmp
(bad)
out
pop
xor
push
and
lahf
das
clc
xchg
jmp
les
cmps
outs
mov
dec
or
neg
xchg
or
(bad)
jmp
or
cmp
pushf
(bad)
inc
repnz
push
xchg
aas
mov
cmp
push
mov
ds
push
push
adc
adc
ds
dec
call
pop
(bad)
jle
loop
ins
into
hlt
sar
or
dec
imul
in
(bad)
aas
adc
pop
jne
push
dec
inc
out
into
into
int
jp
pop
mov
outs
or
sbb
movhps
call
pop
jns
inc
cld
add
add
or
jg
push
add
cwde
add
aad
pop
sbb
xchg
fwait
test
ja
arpl
dec
ds
or
scas
mov
cmp
mov
adc
xor
(bad)
repz
fimul
mov
data16
and
add
push
inc
fwait
mov
mov
pop
mov
bound
outs
ds
and
mov
adc
scas
xor
call
mov
pop
push
pop
xor
unpckhps
adc
in
mov
pop
push
loopne
ja
pop
adc
add
adc
and
dec
sbb
dec
or
scas
test
(bad)
loopne
and
imul
add
test
add
pop
clc
or
or
ret
xor
cdq
cmps
xor
and
(bad)
aaa
ret
(bad)
addr16
bound
jae
or
outs
push
xchg
and
mov
or
fld
add
ret
popf
sbb
and
inc
add
daa
jae
rol
pop
sub
movs
add
pop
nop
mov
int3
inc
(bad)
mov
sbb
lock
dec
or
adc
arpl
xor
sbb
fs
jo
adc
or
pop
rol
std
sar
mov
or
inc
jmp
adc
inc
and
add
add
push
adc
in
mov
out
jne
jae
add
push
mov
mov
inc
rol
loope
pusha
dec
ret
and
adc
adc
cli
push
jo
push
add
gs
push
(bad)
ss
add
jbe
jb
or
push
inc
cmp
cmp
xor
xor
mov
xchg
inc
cmp
inc
or
mov
push
or
cmp
nop
lea
and
or
pop
and
mov
test
push
push
or
lods
sbb
inc
call
or
pop
and
mov
out
repnz
xor
aam
stos
sub
jo
mov
push
ja
jl
push
xor
push
mov
repz
jo
pop
jae
and
pop
add
call
and
sti
push
xchg
call
(bad)
js
jge
dec
dec
adc
(bad)
(bad)
call
pop
lock
in
scas
scas
gs
outs
(bad)
sbb
xchg
mov
push
repnz
push
sbb
je
xchg
pop
(bad)
(bad)
(bad)
jmp
push
inc
inc
pop
adc
ret
mov
add
nop
push
or
push
or
jmp
std
leave
or
ins
xlat
popf
add
repz
ficomp
repz
jns
lea
(bad)
(bad)
(bad)
jmp
lds
xor
or
mov
scas
scas
jns
fstp
jp
ss
(bad)
(bad)
push
test
call
sub
int3
mov
mov
jecxz
jno
lahf
cmps
mov
inc
(bad)
(bad)
push
sbb
mov
mov
or
les
push
adc
out
sub
(bad)
(bad)
(bad)
(bad)
cmp
or
cli
das
push
(bad)
stos
cmp
add
jl
jnp
xor
es
and
(bad)
(bad)
inc
out
dec
or
fld
jne
xor
shl
in
mov
enter
aaa
cld
(bad)
(bad)
cmp
xor
sbb
xchg
lea
cwde
gs
sbb
pop
dec
cmp
fdiv
ds
mov
fcomp
mov
add
stos
jb
popf
mov
or
test
loopne
enter
add
push
sbb
xor
fwait
and
(bad)
lods
adc
mov
dec
jmp
adc
xchg
fcmovne
fnstsw
and
(bad)
dec
inc
das
movups
and
dec
or
or
imul
loop
je
sub
inc
dec
jge
push
cli
mov
mov
mov
mov
mov
or
mov
mov
jmp
xchg
add
inc
push
and
into
ins
(bad)
cmp
sub
xchg
rcl
(bad)
call
scas
xchg
test
and
adc
jecxz
scas
je
sar
sbb
stos
inc
sbb
(bad)
jmp
adc
sub
push
retf
test
xor
xchg
popa
pushw
dec
jmp
pop
cs
(bad)
(bad)
inc
xchg
or
dec
loope
pop
jmp
xchg
mov
movs
push
jne
movs
sub
pop
(bad)
(bad)
(bad)
(bad)
js
adc
sub
lahf
or
into
jp
mov
mov
(bad)
(bad)
(bad)
dec
(bad)
iret
adc
xor
hlt
mov
call
cmps
sahf
or
std
sbb
ret
jns
pop
pop
sahf
xlat
push
scas
add
ss
pop
mov
ficomp
jne
lea
or
xor
call
jmp
jb
pop
xor
add
mov
add
cli
aaa
call
inc
sbb
cmp
sub
sub
push
shl
(bad)
(bad)
(bad)
mov
loop
loop
imul
inc
rcl
es
push
sbb
pop
jmp
js
(bad)
(bad)
(bad)
jns
ins
dec
or
sub
adc
pop
pop
jmp
adc
(bad)
(bad)
(bad)
(bad)
fnstcw
nop
pop
push
call
retf
jl
fbstp
xchg
push
sub
xor
(bad)
(bad)
(bad)
(bad)
call
repnz
mov
loope
jb
cs
or
pop
out
mov
add
js
out
mov
call
pop
xchg
pop
xchg
outs
mov
xor
inc
es
jge
(bad)
(bad)
(bad)
mov
cdq
rcr
pop
inc
jecxz
out
pop
dec
push
mov
retf
push
shr
(bad)
(bad)
jmp
sbb
and
shl
sbb
and
pusha
and
mov
test
stos
int3
pusha
ror
push
jno
ror
(bad)
(bad)
mov
call
js
xor
out
loop
add
mov
lock
call
sbb
sbb
xchg
cmps
xchg
cmps
ja
popa
jns
popa
pop
add
xor
(bad)
call
bound
in
cmc
push
mov
push
outs
stc
pop
pop
rcr
out
icebp
(bad)
(bad)
inc
int
addr16
clc
cmps
fldcw
lock
add
call
inc
xchg
add
(bad)
(bad)
(bad)
fucomip
mov
inc
jl
std
add
imul
jle
in
lock
xlat
addr16
pop
int3
clc
(bad)
(bad)
(bad)
(bad)
ins
cld
and
lods
popf
shl
ins
mov
push
pusha
lods
jne
pop
sub
adc
mov
(bad)
out
push
jnp
pop
imul
mov
pop
sbb
fld
jge
jnp
ret
(bad)
jg
bound
repz
loop
test
and
add
and
aad
xlat
(bad)
(bad)
(bad)
jmp
inc
(bad)
mov
imul
cmps
iret
pop
mov
and
xor
in
cmp
(bad)
(bad)
(bad)
inc
repnz
cmp
add
inc
mov
adc
repz
in
dec
inc
out
js
(bad)
(bad)
(bad)
mov
xchg
sbb
push
or
call
or
jge
push
cdq
sbb
mov
test
pop
sahf
pusha
sub
test
jmp
loopne
mov
mov
scas
xchg
sub
push
xchg
mov
(bad)
(bad)
(bad)
jmp
inc
es
push
fisubr
sub
hlt
xor
repz
dec
cmp
sbb
loopne
jmp
out
and
push
push
into
cli
rcl
jg
jmp
retf
scas
ja
ins
mov
inc
and
jge
les
ins
(bad)
(bad)
(bad)
(bad)
cmp
arpl
pop
xlat
jo
jno
xchg
imul
outs
lods
push
inc
icebp
std
or
popfw
adc
call
(bad)
push
test
adc
inc
test
xchg
addr16
sti
inc
push
lea
in
int3
pop
aas
shr
lahf
(bad)
(bad)
(bad)
call
in
inc
xchg
dec
push
imul
loop
leave
je
jnp
sbb
jl
(bad)
(bad)
jmp
int3
mov
out
adc
aaa
loopne
(bad)
out
ss
into
aam
mov
outs
cmp
cmp
sub
or
std
(bad)
inc
adc
push
stos
cdq
in
jmp
das
xchg
mov
and
pusha
jl
and
movs
xchg
pop
(bad)
(bad)
(bad)
fistp
xchg
push
aaa
dec
ja
test
mov
and
and
mov
cmp
mov
lock
(bad)
outs
dec
mov
lahf
mov
adc
movs
fdiv
push
mov
mov
inc
(bad)
(bad)
(bad)
inc
push
sub
jg
jae
addr16
dec
addr16
fadd
les
jmp
iret
cdq
cmp
xchg
cmp
(bad)
(bad)
(bad)
(bad)
clc
lahf
xchg
inc
mov
pusha
lods
lock
cmp
int3
iret
(bad)
into
cmp
js
sbb
pop
push
cmc
mov
pop
jp
sbb
push
imul
push
and
(bad)
(bad)
jmp
dec
mov
push
add
xchg
int3
in
add
mov
iret
not
ret
cli
push
jo
sbb
ret
xchg
(bad)
(bad)
(bad)
(bad)
mov
aam
push
(bad)
mov
mov
pop
push
rcl
repz
ins
pop
sbb
jg
jmp
fidiv
loop
jmp
int3
add
cmp
xchg
jp
test
call
(bad)
call
adc
out
sbb
mov
(bad)
(bad)
dec
out
jne
add
or
adc
pop
test
loop
sub
sbb
pop
out
pushf
or
bound
mov
sti
std
or
xor
fmul
fwait
(bad)
push
les
pop
adc
dec
pop
stos
stc
push
(bad)
repz
dec
and
push
(bad)
(bad)
jmp
in
mov
mov
cwde
loop
xchg
mov
pop
add
loopne
(bad)
push
xchg
mov
fst
mov
mov
sar
and
in
ret
(bad)
call
mov
inc
repnz
ret
add
call
adc
add
(bad)
dec
pxor
in
stos
jmp
push
pop
push
sahf
mov
or
pop
ret
push
cld
(bad)
(bad)
(bad)
jg
inc
jo
cmps
sub
loop
push
jecxz
orps
adc
mov
pop
adc
push
call
loope
dec
push
jbe
loope
movs
xor
out
mov
mov
or
imul
cmps
dec
in
jno
ja
push
jmp
or
xchg
push
mov
lahf
pop
add
(bad)
jg
jmp
cmp
out
dec
mov
push
adc
shr
mov
mov
pushf
mov
(bad)
inc
ret
retf
inc
cmp
out
scas
sub
push
test
push
and
and
sub
jne
mov
mov
dec
fisubr
nop
cdq
lock
bound
or
adc
ins
movs
(bad)
aaa
test
xchg
lock
add
mov
inc
dec
adc
xor
xor
popa
outs
or
pop
or
dec
hlt
add
adc
xchg
iret
pop
cld
or
arpl
jns
fs
outs
jp
xor
sbb
inc
(bad)
sbb
in
or
inc
inc
jb
leave
or
and
rol
mov
jno
pop
cmp
inc
push
xor
or
jo
dec
sbb
(bad)
jg
mov
xchg
js
popf
xchg
ja
push
fst
xchg
mov
aaa
mov
xchg
shr
push
add
mov
xor
adc
nop
add
ss
push
jo
mov
xchg
cmps
or
sub
and
push
mov
add
inc
push
std
(bad)
call
jno
adc
xchg
dec
lods
sbb
mov
fistp
idiv
lahf
mov
(bad)
(bad)
push
jge
mov
add
or
adc
out
mov
add
(bad)
dec
add
jo
mov
push
clc
inc
add
ins
cdq
adc
pop
mov
push
mov
sti
sub
aas
mov
call
xor
push
cwde
mov
push
std
(bad)
push
clc
fstp
leave
cmp
dec
leave
cwde
mov
dec
into
xor
pop
xor
mov
jae
sub
jl
cdq
gs
xor
loop
lock
daa
jecxz
(bad)
(bad)
lea
adc
out
clc
mov
xor
(bad)
outs
in
sbb
mov
sub
push
fs
sub
sub
pop
lock
(bad)
call
pop
add
retf
pextrw
pop
adc
mov
es
push
xchg
clc
(bad)
jmp
iret
iret
dec
out
(bad)
push
aaa
lea
loop
fcomp
(bad)
(bad)
fbstp
ins
sbb
cmp
xor
ins
mov
cld
fwait
das
ror
pop
test
push
pop
clc
ret
inc
jle
or
push
cli
xchg
adc
push
mov
das
add
out
cli
(bad)
jge
push
mov
loop
sub
dec
add
out
cli
lahf
push
jmp
pop
jl
push
mov
js
xchg
cmp
outs
data16
inc
(bad)
(bad)
(bad)
inc
or
lahf
xchg
pop
pop
(bad)
jne
push
adc
and
mov
xchg
inc
inc
retf
cmps
call
dec
xchg
mov
enter
cdq
inc
lock
lahf
call
mov
fcomip
(bad)
clc
adc
xchg
pop
add
push
adc
adc
or
sub
stos
(bad)
(bad)
mov
add
int
rcr
cmp
push
mov
jg
pop
inc
cld
jmp
inc
xor
call
add
inc
sbb
(bad)
(bad)
(bad)
call
mov
adc
add
mov
pusha
xor
adc
inc
and
adc
mov
(bad)
(bad)
jmp
pusha
daa
test
jne
adc
ss
je
arpl
xor
pop
cs
push
(bad)
(bad)
dec
lock
inc
adc
xchg
enter
pop
nop
sbb
(bad)
jg
in
lods
adc
xchg
or
adc
test
stos
xchg
mov
out
clc
pop
call
or
push
pop
and
or
ins
fcomip
(bad)
inc
or
lock
pop
xor
out
test
(bad)
(bad)
inc
xchg
loopne
pop
or
and
adc
ret
xchg
js
or
and
jg
inc
imul
mov
pop
adc
inc
inc
xor
xchg
or
pop
adc
test
mov
mov
popf
test
aam
aam
push
cmc
adc
imul
lock
inc
je
cmp
popf
mov
inc
push
mov
mov
adc
cmp
and
push
mov
jg
sbb
adc
mov
ror
mov
mov
lods
cmp
sbb
mov
lds
(bad)
fidiv
adc
cmp
jo
(bad)
(bad)
push
dec
mov
les
pop
jo
jo
jo
mov
adc
mov
push
jge
lock
icebp
gs
jl
jle
aas
mov
or
popa
sub
mov
dec
mov
adc
mov
jo
cmp
cmp
sbb
mov
(bad)
dec
and
sub
in
daa
popf
and
and
fs
cmp
dec
fiadd
inc
daa
mov
sub
lock
sub
je
pop
push
js
mov
(bad)
(bad)
push
hlt
push
pop
lods
cwde
scas
pop
mov
icebp
test
mov
push
mov
pop
cmc
(bad)
call
mov
push
fld
push
cmp
mov
mov
add
fsub
inc
loope
mov
sti
sub
arpl
dec
gs
mov
jmp
add
call
movs
mov
push
mov
sahf
dec
(bad)
retf
sub
call
(bad)
(bad)
(bad)
cli
popa
cli
jne
cmp
push
dec
push
mov
aad
stos
scas
aad
test
test
aad
aam
aad
(bad)
(bad)
(bad)
call
fisubr
rcl
mov
ja
(bad)
inc
imul
stos
icebp
je
ins
mov
(bad)
(bad)
dec
sbb
pushf
xchg
cmp
xor
push
push
pushf
(bad)
rcl
repnz
shr
(bad)
cmp
in
mov
sti
test
movs
push
push
(bad)
dec
inc
mov
into
arpl
(bad)
(bad)
call
xor
jne
mov
xor
jp
jp
jp
jp
hlt
or
(bad)
(bad)
(bad)
jmp
mov
push
and
add
or
adc
pop
xchg
xchg
dec
jne
cmp
into
pop
xor
jmp
ss
pop
data16
int
arpl
xor
(bad)
(bad)
mov
dec
xor
(bad)
(bad)
mov
out
int
sub
inc
mov
mov
dec
adc
xchg
cdq
ret
ins
gs
(bad)
(bad)
call
sub
mov
pop
lds
mov
mov
push
(bad)
mov
push
lods
cdq
sub
ficomp
fistp
jge
outs
(bad)
mov
arpl
(bad)
(bad)
push
sahf
push
bound
add
popa
rcl
shl
mov
icebp
int3
(bad)
(bad)
(bad)
(bad)
dec
arpl
popf
ja
cmp
lods
jbe
out
(bad)
fld
pop
in
jl
stc
pop
pop
cmps
dec
call
(bad)
(bad)
jns
repz
repz
lea
jmp
movs
outs
or
inc
mov
outs
push
ja
ja
jnp
scas
ins
add
jge
sahf
inc
xchg
mov
inc
iret
addr16
(bad)
pop
and
test
outs
(bad)
fcmovne
mov
loop
in
(bad)
(bad)
(bad)
(bad)
in
jae
push
iret
aaa
fnstenv
fisubr
fild
jg
jg
push
call
add
fadd
mov
cmp
add
or
inc
sar
idiv
scas
clc
call
or
ja
adc
shl
ret
xchg
test
mov
ud2
jg
(bad)
jmp
adc
sar
adc
and
inc
cdq
inc
(bad)
(bad)
(bad)
dec
jp
adc
mov
xchg
(bad)
dec
arpl
mov
mov
les
arpl
jmp
loop
pop
pushf
fdivr
mov
jecxz
jns
(bad)
(bad)
mov
pushf
mov
and
ror
out
cmp
rol
push
out
cs
adc
out
retf
dec
and
es
daa
cmp
xchg
(bad)
call
push
xchg
repnz
rcl
or
movs
mov
lahf
sbb
es
cwde
jno
dec
adc
xor
lock
mov
mov
(bad)
(bad)
(bad)
dec
pushf
xchg
in
pop
ss
inc
(bad)
fxch
aam
les
xor
(bad)
(bad)
(bad)
push
es
cmp
dec
sahf
jb
xor
mov
daa
bnd
mov
pop
rcr
pop
mov
(bad)
(bad)
push
retf
shr
jmp
cs
cmp
xor
(bad)
inc
cs
dec
xchg
push
rcr
jmp
mov
scas
call
inc
lds
ss
test
mov
sub
cmp
dec
pop
xchg
mov
dec
lods
dec
sub
outs
out
or
jge
xchg
mov
mov
mov
dec
push
int3
push
loope
jmp
fdiv
iret
das
pop
fistp
mov
jae
arpl
mov
(bad)
(bad)
(bad)
call
push
push
mov
mov
mov
pop
sbb
gs
mov
jmp
push
dec
jnp
in
(bad)
(bad)
(bad)
jmp
mov
rcl
push
push
pop
imul
pusha
out
int
mov
xchg
(bad)
(bad)
jge
sti
push
ss
aaa
idiv
cli
mov
mov
ret
jle
jle
or
(bad)
(bad)
call
stos
movs
jne
pusha
ret
fistp
rcr
(bad)
ins
stos
outs
cmps
mov
push
add
(bad)
(bad)
(bad)
call
inc
xchg
mov
mov
addr16
pop
ins
pop
mov
movs
adc
pop
fidivr
aad
shl
(bad)
(bad)
jmp
sbb
mov
movs
cmps
jecxz
retf
out
neg
sar
js
or
mov
(bad)
jmp
xchg
jne
jmp
dec
jp
pushf
mov
outs
lock
rcr
(bad)
(bad)
(bad)
push
out
iret
popf
jmp
fdivp
cld
mov
into
pop
mov
pop
in
mov
sar
pop
(bad)
(bad)
jg
sti
pop
push
sbb
xchg
sbb
sti
xchg
rcl
scas
(bad)
(bad)
(bad)
call
ror
cld
xchg
loope
push
xlat
outs
fimul
and
push
cli
lods
out
jae
iret
fdivr
push
jge
in
sar
jle
std
mov
jmp
lock
rol
arpl
mov
aas
gs
jle
call
test
inc
repz
inc
(bad)
es
das
aas
pop
clc
js
std
mov
dec
cmps
lds
sub
pop
sti
int3
in
ja
and
xor
(bad)
(bad)
call
shr
fdivr
shr
gs
je
hlt
std
push
sbb
push
jg
loopne
jmp
(bad)
(bad)
jmp
mov
mov
aas
cwde
jle
stc
sbb
icebp
out
cmps
mov
jle
test
jge
sbb
fwait
or
jne
(bad)
scas
addr16
mov
daa
out
stc
pop
mov
cmp
xchg
lods
jne
adc
dec
retf
stos
(bad)
(bad)
(bad)
(bad)
fdiv
mov
cmp
shr
or
cmp
cdq
ror
fucomip
cmp
test
movs
jge
repz
(bad)
(bad)
dec
cmp
sti
mov
mov
mov
std
xchg
pop
das
push
sbb
(bad)
(bad)
(bad)
call
push
push
lock
adc
ror
pop
xor
fmul
push
popf
repz
(bad)
(bad)
inc
ror
or
(bad)
jp
pop
mov
or
push
or
cli
mov
popf
pop
loopne
and
dec
or
adc
xor
dec
(bad)
jg
add
or
(bad)
mov
push
mov
(bad)
call
push
fisubr
sbb
ret
ret
std
pop
jae
hlt
ins
mov
pop
mov
pop
xchg
(bad)
(bad)
(bad)
call
int
pop
lock
std
fild
adc
ins
cmp
xor
enter
(bad)
inc
popw
push
xor
mov
xchg
lds
pop
stc
xchg
and
ds
aam
mov
in
(bad)
(bad)
(bad)
in
cmp
fs
sub
int3
mov
int3
cmps
sbb
addr16
dec
ins
test
(bad)
(bad)
(bad)
jg
inc
imul
mov
pop
test
mov
dec
add
dec
push
mov
(bad)
(bad)
jmp
or
iret
xchg
fdiv
xchg
(bad)
and
xchg
retf
imul
(bad)
imul
push
add
js
and
push
in
dec
cmp
push
pop
add
(bad)
(bad)
mov
cmps
gs
mov
or
sbb
cmp
xchg
out
mov
cld
(bad)
dec
iret
dec
in
lahf
mov
mov
cmp
add
ds
adc
dec
sbb
sbb
out
jecxz
test
call
(bad)
cmp
pop
cmc
(bad)
dec
out
push
sbb
popa
call
adc
xor
jmp
jecxz
ss
jb
or
cmp
dec
imul
adc
js
push
sub
(bad)
(bad)
(bad)
(bad)
(bad)
dec
cdq
push
and
add
pop
movs
push
add
jmp
rcl
call
add
outs
call
out
lds
jae
adc
leave
jnp
or
mov
mov
or
jo
mov
(bad)
(bad)
mov
mov
fild
dec
push
inc
sub
loop
out
in
retf
sub
bound
(bad)
call
mov
push
inc
xchg
dec
dec
and
in
sbb
xchg
lock
or
test
lahf
pop
outs
(bad)
(bad)
(bad)
fist
pusha
es
in
add
mov
sti
fistp
repz
movs
in
cld
(bad)
dec
imul
into
rcr
mov
jae
xor
test
push
pop
add
jl
(bad)
aad
add
fs
sub
fadd
ins
sub
xor
jb
xor
cli
xchg
fwait
jns
loope
jg
adc
add
stc
cmp
mov
(bad)
jnp
dec
movs
and
jp
jnp
movs
cmc
xor
cli
adc
out
jg
pop
add
(bad)
(bad)
call
mov
xor
push
push
rcl
xor
xchg
adc
addr16
(bad)
(bad)
(bad)
mov
xchg
pop
cmpps
aas
xor
rcr
mov
scas
shr
test
(bad)
(bad)
inc
fidiv
mov
xchg
(bad)
stc
xor
mov
cdq
or
mov
daa
ins
xor
push
(bad)
(bad)
(bad)
(bad)
jmp
icebp
imul
shr
scas
ins
in
xchg
jae
adc
arpl
retf
xchg
mov
and
dec
jmp
mov
mov
ss
(bad)
(bad)
(bad)
call
shr
sbb
daa
pop
add
inc
mov
push
mov
mov
xor
gs
(bad)
(bad)
(bad)
inc
xchg
(bad)
add
idiv
push
inc
xchg
clc
sbb
xor
jmp
xchg
repnz
fwait
sub
cdq
call
(bad)
mov
jns
shl
sub
lods
dec
int
xor
mov
mov
call
scas
aad
push
dec
push
stos
fs
xchg
movs
add
inc
adc
out
cmp
add
mov
push
shl
and
mov
mov
fs
sub
pushf
fdivrp
jmp
ror
mov
add
mov
mov
lea
neg
dec
loop
xchg
pop
jno
jmp
(bad)
cmp
push
aam
inc
sbb
in
(bad)
mov
iret
sahf
cmp
adc
gs
stc
push
aaa
add
dec
shr
(bad)
std
into
(bad)
pop
cwde
xchg
popa
sub
and
loop
(bad)
(bad)
mov
xchg
nop
nop
loopne
mov
xlat
cs
sti
mov
int
(bad)
jne
ins
adc
(bad)
(bad)
jge
dec
imul
inc
sub
push
stos
test
xchg
add
mov
push
ds
jl
(bad)
(bad)
jmp
push
ret
or
outs
add
push
rcr
inc
outs
mov
mov
cwde
shl
(bad)
lea
pop
scas
mov
mov
or
jmp
mov
sub
popa
sub
ins
out
popf
fisttp
cmp
(bad)
mov
xor
lods
pop
xor
aad
xchg
xor
fnstsw
cmp
(bad)
call
aas
rcr
xchg
add
jo
(bad)
xor
test
out
js
stc
mov
loopne
in
mov
push
and
xchg
jmp
push
sub
push
pop
or
std
(bad)
scas
fs
xchg
jno
cmc
mov
sti
pop
clc
sub
ds
adc
sbb
add
loop
daa
in
loop
jb
cmps
(bad)
(bad)
inc
sbb
cmp
mov
sub
(bad)
jnp
or
(bad)
(bad)
(bad)
inc
pop
arpl
push
nop
int
mov
mov
jb
jns
dec
mov
add
mov
sub
mov
push
inc
jmp
sbb
mov
inc
mov
popf
cmp
and
push
mov
push
imul
mov
stc
jb
leave
cmp
jb
add
add
fsubr
fistp
add
mov
push
mov
xor
movs
and
(bad)
rcl
mov
(bad)
(bad)
(bad)
stc
ins
push
pop
repz
scas
pushf
or
jo
ins
mov
xchg
es
cwde
jno
dec
(bad)
jg
call
push
cs
nop
pusha
mov
je
test
pop
leave
repz
mov
(bad)
(bad)
call
add
xor
popf
or
ret
(bad)
iret
int3
icebp
jae
pop
sbb
sahf
(bad)
out
dec
(bad)
call
inc
add
(bad)
pop
add
iret
pop
lock
(bad)
scas
pop
fucomip
mov
sti
outs
imul
pop
sbb
repz
ss
inc
pop
mov
je
ror
stc
jecxz
(bad)
call
adc
cdq
mov
jae
shl
ret
dec
pop
es
ret
(bad)
jmp
sahf
imul
loope
dec
cmc
(bad)
(bad)
mov
call
je
add
dec
xor
call
(bad)
aaa
sbb
stc
add
push
call
or
jae
pop
mov
popf
mov
cmps
(bad)
(bad)
dec
ds
lock
xlat
fdivp
pop
fs
arpl
sar
sar
push
(bad)
(bad)
(bad)
mov
push
push
xchg
xchg
aaa
dec
iret
add
or
pop
mov
add
std
(bad)
(bad)
jle
popa
jnp
pop
stc
not
(bad)
xchg
mov
les
push
mov
push
jo
stos
xchg
mov
test
lock
(bad)
inc
mov
loopne
das
cmp
fwait
mov
and
aam
mov
xchg
ins
cld
(bad)
(bad)
(bad)
fdiv
out
movs
call
imul
(bad)
push
sahf
shl
mov
test
mov
(bad)
push
and
retf
icebp
dec
mov
in
or
into
cmp
inc
enter
push
dec
cmp
(bad)
(bad)
dec
sahf
pop
bound
ins
mov
ja
int
mov
dec
fisubr
dec
cmps
add
out
pop
pop
aaa
mov
sbb
jmp
add
cmp
icebp
fstp
mov
mov
xchg
mov
jns
(bad)
(bad)
inc
mov
in
mov
sahf
mov
pop
xor
cmp
mov
add
cdq
aad
call
std
sbb
popa
in
mov
shl
fcmovnbe
rol
in
push
or
pushf
das
push
cmp
outs
(bad)
(bad)
(bad)
jmp
pop
in
push
mov
xchg
dec
in
jnp
loopne
inc
clc
je
cmp
xchg
lahf
or
(bad)
jg
stos
aam
shr
fisub
icebp
cmc
mov
mov
xchg
out
je
(bad)
(bad)
mov
mov
int
xor
out
mov
jmp
(bad)
call
(bad)
jmp
in
inc
mov
mov
pop
mov
xor
push
push
(bad)
fs
sbb
loop
call
xchg
or
aas
icebp
adc
enter
ins
daa
cmp
or
mov
sbb
push
cmp
(bad)
(bad)
(bad)
in
repz
test
mov
mov
aas
add
xchg
mov
(bad)
ss
(bad)
push
mov
ret
jg
rol
jo
inc
xlat
(bad)
sti
and
test
(bad)
repnz
(bad)
(bad)
(bad)
(bad)
clc
pushf
fistp
fadd
mov
call
add
pop
(bad)
clc
jge
hlt
(bad)
(bad)
dec
push
arpl
mov
call
jg
retf
jns
jg
loope
(bad)
call
sar
pop
popa
cmp
popa
xrelease
sbb
pop
popa
xor
(bad)
or
(bad)
(bad)
(bad)
(bad)
in
bound
lods
rcr
lock
not
pop
outs
mov
inc
lods
push
push
fsub
xchg
mov
mov
xor
(bad)
or
pop
imul
fwait
push
popa
fdivr
jle
jne
(bad)
(bad)
dec
dec
cmp
xor
adc
pusha
adc
(bad)
mov
fist
cmp
push
(bad)
(bad)
(bad)
jmp
mov
mov
add
ficom
adc
add
jb
xchg
dec
xchg
(bad)
(bad)
(bad)
push
in
fcmovu
sbb
pop
push
scas
push
movs
mov
xlat
pop
jg
aad
pop
pushf
xchg
inc
pop
in
(bad)
(bad)
(bad)
call
mov
lods
inc
or
adc
sar
cmp
ud1
jbe
(bad)
(bad)
(bad)
dec
xor
mov
mov
stos
aam
sub
or
cwde
daa
(bad)
pop
retf
fwait
and
lods
fild
xchg
data16
div
cli
aam
cli
push
shl
movs
ret
in
icebp
jbe
fild
call
(bad)
push
mov
lods
retf
movs
xchg
mov
cmp
mov
pop
cmp
call
ins
out
add
popf
push
ja
adc
mov
in
shl
(bad)
(bad)
(bad)
inc
mov
(bad)
mov
mov
mov
int3
sahf
in
scas
jmp
or
jbe
mov
mov
fimul
mov
cmps
cmp
xchg
retf
adc
cmp
in
jnp
rcr
mov
ror
not
call
xchg
rcl
add
cmp
mov
div
cmps
div
aam
mov
mov
xlat
ds
sti
xchg
push
pop
call
nop
(bad)
(bad)
jmp
sub
jecxz
in
ret
ret
adc
xor
mov
std
dec
inc
or
or
add
sbb
ret
call
test
jo
dec
lahf
fnstsw
lods
outs
and
mov
dec
dec
cs
repz
jg
mov
mov
mov
fsub
(bad)
sbb
imul
ja
dec
(bad)
cmp
jmp
pop
add
push
jp
jmp
fadd
jmp
push
rcl
inc
(bad)
mov
(bad)
dec
mov
in
xor
shl
(bad)
jp
pop
xor
inc
stc
stos
(bad)
pushf
movs
scas
enter
popf
cmp
push
das
pop
in
out
cmp
dec
movs
pop
add
cmp
mov
jo
(bad)
(bad)
(bad)
dec
and
les
and
lods
jmp
std
cld
cli
add
lahf
sti
inc
mov
or
adc
and
mov
mov
pop
mov
std
add
sub
icebp
test
rcl
mov
(bad)
(bad)
(bad)
call
jmp
sub
lods
push
pop
repnz
cmp
push
sbb
call
rcr
xchg
push
adc
xlat
and
das
sahf
dec
cmovae
mov
jmp
push
std
jmp
push
pop
loop
adc
int3
add
pop
test
cmps
jo
or
pop
icebp
dec
add
fnstsw
xor
dec
cld
loope
rcr
idiv
mov
jmp
mov
fidiv
imul
rol
jp
call
add
cmps
out
scas
mov
out
and
bound
add
sar
xor
(bad)
(bad)
inc
movs
jg
cwde
lock
(bad)
rcr
mov
fs
daa
xchg
cld
lods
(bad)
(bad)
jmp
adc
mov
jg
out
add
stc
into
push
pop
cmc
js
loopne
(bad)
jmp
retf
ret
outs
or
daa
mov
add
lods
inc
xchg
dec
in
xlat
(bad)
inc
jmp
mov
aas
add
clc
pop
and
inc
push
(bad)
(bad)
(bad)
jmp
shl
aad
sub
(bad)
fisttp
cmp
leave
lock
outs
sbb
pop
xchg
xchg
(bad)
(bad)
(bad)
dec
jge
fwait
mov
cli
rcr
jo
rcl
push
stc
push
inc
sar
lods
and
cwde
(bad)
(bad)
(bad)
call
mov
ja
push
push
cmp
inc
dec
out
(bad)
fisttp
sub
xor
fsub
lahf
jg
sbb
xor
scas
adc
repnz
ja
or
dec
jmp
mov
sbb
test
pop
rol
mov
cmp
aaa
sbb
xor
(bad)
(bad)
(bad)
push
lds
push
aas
jg
pop
stc
cdq
push
xor
mov
int
in
jo
aas
sbb
(bad)
(bad)
call
inc
sbb
outs
lock
jge
stos
nop
mov
out
int
stc
sti
jno
push
sub
inc
pop
or
(bad)
call
inc
mov
sahf
cmp
mov
cmp
and
inc
mov
(bad)
(bad)
call
int3
fsubp
enter
sti
xchg
dec
jl
aas
sub
ja
pop
cmp
nop
fwait
jg
jb
(bad)
jmp
jb
cmps
dec
add
cmps
mov
cmp
(bad)
fld
or
inc
or
(bad)
(bad)
aas
nop
pop
or
jl
sbb
test
popf
nop
(bad)
mov
(bad)
push
cld
xlat
fld
cmps
mov
cmc
add
and
int
jae
(bad)
(bad)
jmp
(bad)
test
pop
push
pop
aad
int3
rcr
mov
loopne
(bad)
(bad)
(bad)
inc
cwde
xchg
or
out
jmp
dec
(bad)
shl
pop
jo
push
mov
pop
std
call
data16
cmovs
add
cli
and
stos
pop
mov
into
xchg
xchg
(bad)
mov
push
js
fwait
(bad)
mov
inc
add
mov
or
(bad)
(bad)
inc
ins
push
adc
sub
xor
inc
es
push
or
(bad)
(bad)
(bad)
inc
mov
push
aas
call
jmp
ins
out
mov
(bad)
push
mov
push
mov
jae
aam
retf
test
xlat
(bad)
(bad)
(bad)
dec
call
add
adc
and
mov
shr
mov
ds
push
loopne
pushf
push
ss
or
pop
add
mov
push
jecxz
arpl
jb
add
loope
push
test
(bad)
(bad)
(bad)
dec
shr
push
ins
cmp
mov
(bad)
adc
mov
int3
outs
mov
rol
inc
shld
movs
mov
mov
mov
scas
mov
dec
jmp
imul
mov
xchg
add
xchg
add
fstp
or
mov
retf
fnstenv
(bad)
(bad)
(bad)
(bad)
mov
push
mov
enter
ins
ds
mov
pop
pop
nop
adc
pop
mov
out
cli
icebp
(bad)
(bad)
(bad)
fucomi
outs
cmps
sbb
xor
cwde
sub
inc
mov
jne
lahf
fisttp
(bad)
scas
(bad)
adc
dec
lods
push
jge
imul
inc
push
fstp
pop
cld
inc
lahf
mov
xor
mov
ja
pop
shr
xor
test
push
jg
(bad)
jmp
ja
mov
dec
jb
cmp
daa
aas
inc
std
(bad)
ins
mov
(bad)
(bad)
push
adc
mov
jo
mov
xor
(bad)
cmp
sbb
sbb
imul
pusha
add
rol
(bad)
mov
shr
cdq
ficom
sbb
call
(bad)
(bad)
(bad)
dec
mov
mov
movs
fcom
inc
adc
mov
fcmovnb
push
hlt
jmp
sub
(bad)
(bad)
jmp
jg
jae
jmp
cmps
add
call
cmp
inc
xchg
in
adc
lds
scas
jmp
sbb
test
sahf
loope
and
push
adc
(bad)
jg
jp
inc
mov
jge
add
cwde
pushf
hlt
xchg
frstor
int3
pcmpeqd
mov
or
(bad)
movs
ret
sub
out
push
loop
fst
xchg
pop
or
pop
push
ret
sub
jne
mov
idiv
(bad)
(bad)
(bad)
jmp
adc
and
sti
out
mov
inc
push
dec
adc
std
push
pop
push
data16
aam
mov
sub
aas
cmp
push
and
mov
aaa
xor
jmp
je
rcl
fld
loope
shr
mov
gs
xchg
mov
jle
inc
data16
(bad)
mov
jg
push
std
inc
xor
leave
adc
fisttp
(bad)
(bad)
cmp
push
cmp
call
test
call
ror
xchg
popf
xchg
sbb
(bad)
push
clc
iretw
sahf
in
sbb
jmp
push
fwait
aam
pusha
sar
cmp
jb
outs
mov
add
(bad)
push
jp
retf
sub
(bad)
push
dec
jmp
(bad)
in
push
je
mov
sbb
call
ins
sbb
adc
sti
std
xor
mov
daa
cmp
dec
(bad)
jmp
cmps
cs
pop
ins
rcr
js
aas
pop
push
imul
psrlw
(bad)
(bad)
jmp
xchg
or
cmc
mov
sub
xchg
mov
add
xlat
scas
ja
add
sbb
(bad)
(bad)
call
retf
mov
mov
ins
xchg
adc
push
shl
xchg
mov
(bad)
mov
cli
out
(bad)
stc
or
pusha
xor
adc
retf
push
(bad)
xchg
out
sbb
(bad)
jmp
shl
jmp
sbb
imul
call
(bad)
aaa
test
nop
test
jmp
adc
mov
das
(bad)
push
fstp
(bad)
mov
mov
out
enter
lahf
retf
popf
mov
(bad)
(bad)
(bad)
dec
jle
inc
jmp
cmp
lods
outs
ja
pop
int3
sti
lahf
push
push
cmp
icebp
test
lods
push
scas
inc
(bad)
mov
jl
xchg
hlt
into
sbb
icebp
sub
push
jg
(bad)
call
aam
dec
or
(bad)
cmps
ret
call
sub
in
mov
(bad)
(bad)
inc
xchg
inc
call
imul
call
je
repz
je
mov
ret
retf
cmps
ds
cmc
ror
dec
out
invd
pop
(bad)
jecxz
mov
(bad)
push
es
ja
or
cmps
sti
dec
xor
mov
loop
jg
mov
leave
loope
(bad)
(bad)
jmp
pop
das
mov
outs
test
jne
ins
inc
mov
mov
popw
popa
retf
stos
(bad)
(bad)
(bad)
call
sbb
imul
push
mov
adc
jmp
in
inc
cmps
add
(bad)
(bad)
(bad)
push
movs
idiv
mov
dec
retf
fstp
cld
mov
clc
fxtract
hlt
(bad)
(bad)
(bad)
inc
neg
sub
loop
sar
fucomi
xchg
pop
hlt
lds
inc
ins
cmp
(bad)
(bad)
jmp
jbe
lods
cld
aas
adc
je
mov
movs
repz
push
inc
fs
daa
sub
or
loopne
adc
push
call
loope
dec
ins
mov
(bad)
(bad)
dec
cmc
dec
pop
scas
pop
sub
loopne
int
clc
sbb
aaa
mov
call
(bad)
call
sar
test
out
or
xor
jecxz
ret
movs
mov
and
fwait
outs
rcl
jns
in
daa
popw
cmps
push
in
xchg
dec
cs
cmp
cmp
(bad)
(bad)
(bad)
(bad)
mov
mov
mov
and
pop
adc
xchg
add
sti
stos
leave
enter
cs
(bad)
(bad)
call
sbb
pop
enter
dec
jecxz
cwde
jg
cwde
lods
dec
xchg
sub
inc
ja
(bad)
inc
call
sub
imul
sbb
dec
fidivr
in
loop
inc
xchg
aad
mov
fistp
or
xlat
sbb
mov
loope
mov
lods
sar
mov
pop
into
adc
(bad)
(bad)
call
pop
add
mov
inc
sub
inc
(bad)
call
or
outs
inc
shl
rsm
(bad)
mov
mov
popf
cmp
call
or
xchg
xchg
mov
dec
xchg
sub
rcr
fisttp
into
mov
add
sbb
pop
cmp
dec
pop
add
sbb
ret
add
pushf
sub
mov
pop
(bad)
(bad)
(bad)
push
das
ja
jg
(bad)
ja
push
loop
mov
aad
loope
nop
icebp
push
jp
pop
sub
stos
cmp
jo
loope
add
sahf
jg
cmc
xlat
mov
pop
push
(bad)
(bad)
(bad)
call
sub
dec
lahf
adc
add
test
cmp
pop
in
xchg
enter
loope
stos
aaa
mov
dec
(bad)
(bad)
(bad)
call
and
fwait
mov
idiv
push
icebp
lods
outs
sbb
sbb
push
outs
xchg
jp
jns
(bad)
(bad)
jmp
push
addr16
arpl
pop
xchg
xchg
adc
pop
jle
movs
fwait
pop
xchg
cli
and
sub
jle
(bad)
(bad)
jmp
or
ss
sbb
sbb
push
dec
fnstcw
xchg
jecxz
xchg
retf
shr
fcomip
(bad)
mov
repnz
mov
adc
jo
and
dec
test
or
mov
dec
ret
mov
xchg
neg
xchg
gs
loop
into
pop
frstor
mov
dec
stos
mov
mov
test
adc
push
mov
ins
pop
cmp
outs
(bad)
(bad)
jmp
jbe
sar
pop
add
xor
cmps
mov
lds
nop
(bad)
push
jne
cli
(bad)
dec
cmp
push
mov
xor
shr
addr16
out
mov
or
add
and
fldenv
xchg
mov
xor
push
cmp
iret
push
cmp
call
jnp
pop
mov
xor
mov
out
sub
push
mov
jb
call
das
cli
jmp
hlt
stc
shl
adc
pop
inc
mov
clc
lahf
adc
push
xchg
pop
mov
sar
(bad)
call
pop
cld
movs
cmp
fist
add
mov
fisubr
xlat
call
(bad)
(bad)
jg
call
sub
stos
inc
jb
(bad)
and
(bad)
mov
and
ins
(bad)
(bad)
(bad)
push
adc
stc
ror
call
cmp
mov
retf
out
aam
lds
xchg
(bad)
(bad)
push
pop
sub
xchg
jmp
je
mov
mov
(bad)
push
mov
push
imul
je
add
pop
pop
push
stos
cld
fdiv
pop
add
je
push
test
imul
mov
xchg
mov
sahf
call
enter
popa
std
sub
(bad)
dec
or
mov
out
out
dec
sahf
out
(bad)
cmp
mov
mov
(bad)
(bad)
(bad)
jmp
lods
jg
add
pop
push
stc
cwde
mov
push
sub
enter
sbb
mov
jmp
jp
and
aam
fist
dec
push
ret
(bad)
mov
mov
(bad)
(bad)
jmp
aad
jecxz
lahf
cli
scas
mov
clc
(bad)
cmp
dec
pop
loopne
add
cli
push
test
(bad)
into
test
or
xor
pop
popw
das
dec
push
adc
(bad)
shl
and
adc
mov
inc
inc
inc
cs
xor
cmp
adc
pop
mov
int
push
mov
dec
push
dec
xchg
pop
mov
ret
or
arpl
aas
retf
outs
push
sbb
xchg
adc
nop
inc
xor
call
ins
add
and
add
icebp
add
lods
add
sti
in
arpl
jmp
fldenv
sub
fst
jae
mov
fs
push
jmp
cli
xor
repz
xor
cmc
pop
(bad)
int3
in
loope
add
push
xchg
sbb
iret
dec
mov
adc
cmp
jnp
push
aam
mov
or
jb
pop
add
adc
or
dec
inc
jnp
add
inc
push
sbb
out
add
push
inc
push
cmp
xor
dec
rol
(bad)
imul
adc
mov
pop
lahf
adc
add
jae
pop
das
adc
push
xor
sub
in
adc
mov
clc
xor
xor
ror
ret
clc
and
inc
ror
mov
(bad)
push
inc
dec
or
sub
aam
shl
out
push
pop
nop
and
inc
mov
mov
stos
or
sbb
(bad)
and
lods
lods
lods
lods
add
mov
pop
xor
xlat
and
mov
mov
std
mov
adc
les
or
inc
test
mov
adc
add
(bad)
mov
xlat
xchg
int
push
add
iret
in
add
jno
imul
push
jne
aas
adc
and
shr
push
fidiv
adc
push
jnp
imul
and
or
add
popa
(bad)
mov
(bad)
xchg
cmp
push
frstor
test
test
dec
add
shr
sub
lods
add
mov
push
pop
sub
dec
jno
shl
cmp
xor
push
mov
sub
cmps
or
ret
inc
stos
and
xchg
scas
mov
add
jmp
popa
adc
and
lods
adc
push
popf
sub
inc
mov
xlat
push
pusha
rol
add
pop
mov
pop
and
or
jne
or
mov
sbb
or
add
jne
mov
shr
add
mov
push
mov
stos
dec
fwait
or
mov
mov
data16
shl
mov
cwde
sbb
dec
test
push
test
fwait
add
or
add
pop
gs
sub
xchg
and
cmps
arpl
jnp
adc
(bad)
push
sbb
movs
add
pop
adc
sub
(bad)
dec
sbb
popa
cmp
or
push
mov
push
and
adc
pop
or
dec
xor
sbb
mov
add
cmp
or
mov
pop
or
adc
imul
inc
fwait
movs
fisubr
cmp
sbb
arpl
daa
sbb
add
mov
or
pop
inc
add
xor
pop
mov
std
add
sbb
adc
mov
stos
aad
adc
mov
cmp
retf
(bad)
adc
dec
mov
stos
sbb
and
scas
sub
and
mov
mov
mov
pop
test
in
push
push
push
mov
adc
cmp
mov
pop
ins
bound
adc
sbb
loope
push
add
shr
push
adc
add
mov
inc
cmp
add
adc
inc
or
mov
xor
imul
adc
inc
lods
movs
bound
push
xchg
push
sbb
gs
adc
xor
push
cdq
test
stos
push
adc
or
ret
push
xchg
and
mov
push
mov
push
mov
or
or
mov
mov
sub
mov
push
lods
mov
ret
and
icebp
lods
xchg
test
add
and
int3
add
xor
add
(bad)
nop
push
adc
pop
pop
aam
test
and
cmp
xlat
pusha
push
test
mov
je
movs
push
test
cmp
sbb
lea
add
adc
pop
bound
adc
and
jno
xchg
mov
retf
jecxz
stos
retf
or
popf
scas
push
ins
lods
mov
add
or
push
sbb
inc
cmps
pop
adc
push
mov
add
lods
stos
add
push
adc
add
test
jno
ins
mov
add
mov
mov
push
add
cmp
push
gs
mov
pop
arpl
pop
adc
adc
mov
add
push
int3
inc
test
sub
pusha
ror
cmc
shr
push
mov
and
dec
adc
sbb
push
dec
mov
pop
lods
sbb
mov
adc
ins
bound
lods
add
sub
cdq
adc
(bad)
pop
dec
pop
mov
and
mov
mov
push
fild
jbe
add
ror
and
cmp
pop
sub
adc
imul
add
xor
xor
pusha
rcl
test
and
les
test
lds
test
pop
inc
or
pop
add
adc
cmc
mov
sbb
ds
pop
xchg
sub
add
inc
adc
mov
xor
(bad)
pusha
push
dec
lods
mov
pusha
push
xor
push
mov
fiadd
ins
lds
dec
jge
mov
pusha
rol
adc
pop
add
and
repz
mov
pop
pop
adc
sub
outs
rcl
(bad)
add
mov
jmp
adc
dec
dec
jl
and
daa
pop
les
adc
or
add
add
mov
ror
pop
rol
xlat
push
sub
les
loopne
mov
add
lahf
(bad)
sub
pop
adc
pop
push
dec
mov
adc
xchg
pop
movs
xchg
adc
add
fidiv
test
xchg
inc
adc
pop
add
and
stos
or
bound
push
imul
jmp
inc
daa
xor
push
daa
lock
xchg
adc
lea
inc
mov
imul
jmp
add
mov
les
pop
push
fwait
add
push
inc
stos
(bad)
push
jmp
or
daa
xchg
pop
test
mov
cmp
push
jmp
mov
inc
inc
xor
fst
push
dec
adc
bound
stos
mov
(bad)
or
shl
add
pop
jg
add
push
push
dec
xor
daa
push
inc
bound
dec
mov
and
pusha
adc
add
xor
adc
fldpi
fstp
or
add
add
imul
mov
mov
imul
and
stos
adc
push
inc
add
jo
sbb
sar
mov
mov
pop
mov
inc
das
and
pop
or
add
or
and
(bad)
push
inc
stos
shr
and
push
adc
mov
pop
icebp
rcl
imul
inc
adc
adc
xor
mov
pushf
pop
bound
inc
stos
add
(bad)
xchg
adc
adc
adc
shl
sbb
and
add
in
lds
mov
dec
sar
lds
mov
inc
jne
test
mov
push
jecxz
movs
bound
inc
lods
push
movs
add
ja
test
jmp
or
jno
pop
bound
push
inc
and
dec
cmp
add
lea
add
cmp
cmps
(bad)
add
pusha
adc
mov
sbb
mov
xchg
mov
xchg
sub
add
out
pop
push
aaa
add
mov
jmp
jge
and
scas
inc
popf
pop
inc
push
jmp
das
or
xchg
xor
adc
adc
cs
scas
add
pop
jno
(bad)
lds
and
add
aad
push
dec
add
aam
adc
pop
pop
adc
inc
mov
pop
add
dec
and
push
xor
aam
stos
call
(bad)
repz
stos
stos
xchg
int
test
push
add
jnp
shr
add
bound
inc
mov
adc
pop
inc
xor
push
daa
cmp
les
push
or
test
stc
xchg
dec
mov
or
xor
aad
fild
mov
jbe
pop
ss
bound
movs
mov
inc
push
xor
xor
jnp
add
es
(bad)
sbb
cmp
add
add
sbb
lds
or
sbb
das
and
sbb
outs
adc
or
push
dec
pop
add
cmp
push
ins
xchg
adc
push
aas
aaa
inc
mov
stos
test
push
mov
cmc
ror
sbb
adc
xor
dec
inc
xor
ret
cmp
lahf
mov
and
test
rol
mov
mov
ss
sub
daa
sub
jae
or
xchg
xchg
xor
bound
movs
mov
push
sub
add
jo
adc
or
lods
bound
and
test
add
adc
rol
mul
cmp
ret
shl
sub
xor
sub
stos
adc
jnp
push
ror
stc
add
jno
ins
xchg
and
sbb
das
int
pusha
inc
sub
rcl
push
add
daa
xor
shr
push
sub
add
adc
stos
pop
inc
dec
jno
cmc
mov
mov
push
sub
inc
pop
add
jno
jne
cmc
adc
push
popf
pop
pop
das
bound
inc
loope
inc
and
add
movs
cwde
xor
and
xor
push
mov
mov
adc
test
stos
test
add
dec
push
and
shr
jmp
push
test
lods
sbb
fsub
rcl
or
lds
cmp
jo
xchg
mov
mov
test
sub
out
aad
mov
push
dec
stos
dec
push
test
pop
stos
mov
jno
sub
fwait
mov
pusha
xchg
inc
push
loopne
pop
scas
mov
jns
sbb
add
mov
ret
jmp
movs
pusha
xchg
jno
cwde
push
aam
ja
and
pop
mov
and
les
inc
mov
scas
inc
mov
adc
pop
mov
xchg
add
mov
add
sub
pop
adc
ins
mov
das
mov
mov
xor
(bad)
call
push
add
and
push
lods
and
(bad)
pop
adc
adc
jmp
mov
call
pop
adc
xchg
dec
adc
mov
sbb
add
push
stos
adc
sub
jno
bound
add
xchg
inc
xor
cmps
add
fwait
pusha
lds
bound
jmp
(bad)
dec
sbb
jno
mov
pop
mov
outs
mov
dec
mov
stos
push
ret
cdq
pop
adc
mov
adc
inc
sub
inc
bound
pop
sub
shr
inc
je
repz
xor
jecxz
adc
into
pop
xor
sub
push
mov
or
mov
sbb
mov
and
aas
aad
sub
scas
push
or
pusha
sub
mov
pop
add
mov
pop
jg
sub
mov
sub
push
and
add
int
aad
or
xchg
pop
test
cmp
sbb
sbb
mov
or
dec
and
mov
leave
jno
or
aad
(bad)
adc
adc
ins
rol
sub
add
inc
push
movs
lods
sub
movs
xchg
(bad)
retf
pop
shl
call
add
(bad)
call
movs
pusha
push
ins
imul
and
ins
and
jg
push
sub
shl
mov
(bad)
inc
push
fidiv
shr
adc
outs
add
jge
inc
add
sbb
gs
add
sbb
lds
jae
add
movs
push
outs
xor
inc
pop
push
inc
adc
xchg
cmp
push
and
and
push
xlat
pusha
cmp
pop
sub
mov
lods
sbb
mov
inc
xor
mov
pop
and
add
sti
scas
bound
(bad)
les
int
pop
add
and
sub
lds
add
add
inc
test
xor
xchg
xchg
add
stos
mov
stos
stos
test
inc
xor
cmp
xchg
popa
stc
pop
ins
xor
add
add
mov
sub
adc
(bad)
pop
mov
jne
add
and
jmp
push
xchg
mov
test
push
mov
xchg
pop
pop
add
bound
mov
dec
aam
sub
gs
add
fistp
aam
mov
push
imul
push
cmp
sub
add
adc
shl
mov
add
movs
test
cmp
in
sbb
inc
or
sub
ins
and
daa
inc
add
sbb
pop
call
lods
push
sub
ja
adc
xor
and
sbb
inc
ret
sub
outs
retf
push
or
lods
mov
sbb
stos
add
jnp
lods
mov
sbb
pop
inc
add
inc
inc
test
scas
xchg
xor
test
add
jmp
adc
push
sbb
or
sub
or
jo
fst
xor
adc
dec
pop
or
sbb
stos
add
inc
jge
push
rcr
in
sub
mov
xor
stos
retf
push
inc
mov
test
add
in
and
xor
xor
or
jg
add
mov
test
xchg
jecxz
bound
xchg
jmp
inc
loope
dec
and
mov
out
mov
bound
xchg
cmp
popa
jge
mov
ror
shr
add
xchg
das
retf
xor
sub
and
push
push
and
xor
xor
adc
arpl
inc
add
or
xchg
loop
daa
adc
add
aad
push
test
sbb
pop
shr
push
pop
and
pop
inc
aad
jmp
lock
(bad)
out
stos
dec
xchg
pop
mov
pop
adc
xchg
daa
lahf
cmp
jnp
mov
push
xor
fisttp
xchg
mov
or
or
inc
adc
and
xchg
jns
mov
and
add
std
mov
dec
xor
mov
or
ins
inc
cmps
add
jno
jg
inc
push
cmps
cmps
push
mov
push
and
pop
xor
mov
push
dec
arpl
popa
adc
daa
lods
add
dec
inc
xor
pop
inc
jo
lds
and
shl
adc
push
sbb
or
dec
movs
scas
fistp
jns
xor
shl
lods
sbb
mov
cs
add
and
push
(bad)
cmp
sub
push
sbb
sti
ret
inc
inc
xor
mov
sub
or
adc
and
sbb
sub
add
push
arpl
add
push
icebp
daa
mov
cmp
das
push
add
push
pop
xchg
rol
add
outs
sbb
stos
sbb
lods
add
std
je
stos
pusha
repz
push
inc
and
sbb
lea
sbb
add
dec
or
inc
add
lods
or
add
dec
dec
jg
rol
rcl
or
cmc
inc
bound
or
push
dec
mov
ja
mov
daa
pop
bound
xor
or
or
xor
(bad)
sbb
mov
xchg
push
push
aaa
loope
les
gs
mov
sub
(bad)
test
or
test
out
ins
sub
and
pop
sub
call
adc
cmp
jge
shl
in
std
lds
and
sbb
(bad)
push
sub
pop
sbb
xor
push
inc
(bad)
int3
add
pop
cmc
mov
adc
inc
gs
xor
sub
inc
pop
popf
sbb
adc
mov
test
fst
add
mov
jns
inc
mov
sbb
add
loop
arpl
mov
ins
je
sub
ja
sub
and
add
mov
jmp
and
imul
adc
adc
pop
bound
movs
inc
adc
push
(bad)
mov
test
push
mov
xor
les
stos
push
inc
fst
mov
lds
and
sbb
or
sbb
or
add
or
adc
movs
ss
or
adc
add
inc
pop
jne
fadd
or
add
push
push
pushf
cmp
pop
add
adc
ror
sub
lea
je
add
and
xor
pop
pop
les
adc
ror
push
stos
aad
mov
sub
jmp
add
push
pop
aaa
test
inc
int
lds
mov
add
xor
gs
push
add
xchg
neg
rol
jo
sub
pop
inc
repz
push
or
fnstsw
ret
pop
test
out
repz
add
mov
push
(bad)
rcl
or
pop
dec
mov
inc
mov
inc
sbb
(bad)
test
adc
dec
jnp
popf
dec
dec
out
push
xchg
gs
mov
outs
adc
inc
push
(bad)
int3
adc
dec
adc
(bad)
ficomp
jge
xor
xor
popf
adc
push
cmp
dec
adc
out
bound
sub
xor
pusha
pop
fwait
sti
or
xor
and
mov
outs
adc
adc
adc
inc
adc
and
lahf
xchg
mov
mov
and
push
loop
or
add
dec
popa
fiadd
aaa
inc
mov
add
mov
pop
xchg
pop
lods
test
cmp
pop
and
addr16
sub
add
add
add
popa
adc
or
add
mov
arpl
adc
outs
imul
movs
xor
mov
adc
mov
dec
inc
and
xor
adc
sbb
test
xchg
nop
mov
aam
push
add
mov
or
iret
jge
fistp
fstp
and
mov
mov
test
ret
add
ret
push
sub
je
and
and
push
fld
xor
sub
xchg
xchg
add
add
mov
xor
test
or
add
lods
inc
xor
repz
or
and
push
push
outs
mov
pop
sub
in
fsubr
mov
jae
adc
adc
jae
push
movs
adc
add
jo
dec
adc
xor
cmp
inc
push
and
out
and
xchg
mov
mov
and
cmp
mov
push
add
mov
add
jecxz
sub
sub
cdq
sub
inc
inc
or
inc
mov
pop
add
pop
fbld
add
mov
pop
fidiv
push
pop
sub
je
push
add
ins
gs
xor
push
add
fsubr
fbstp
push
imul
dec
sub
add
jmp
sbb
add
adc
mov
sti
ret
sbb
ja
ins
pop
mov
nop
sub
xor
push
xchg
push
xor
mov
pop
mov
add
xor
imul
adc
adc
xchg
push
aas
retf
aad
movs
add
xor
mov
or
cwde
or
cmp
mov
lea
jno
sub
imul
and
sbb
(bad)
and
ret
sbb
cmp
stos
rol
xor
add
xor
dec
sbb
push
add
pop
das
out
inc
pushf
fsubr
mov
ins
rol
movs
ss
or
sbb
adc
ins
cmp
movs
(bad)
jge
add
nop
mov
push
add
dec
or
fistp
es
mov
repz
pop
mov
ins
test
push
cmp
ss
stos
sbb
or
movs
mov
aad
(bad)
jge
mov
stos
test
ins
pop
pop
cmp
stos
xchg
sbb
inc
dec
sbb
data16
scas
pop
pop
pop
mov
(bad)
push
mov
push
jmp
sbb
add
and
add
and
xor
shr
jg
data16
add
xchg
jnp
push
daa
mov
dec
or
pop
rol
pop
add
and
push
call
test
ret
sub
sbb
ins
pop
dec
sub
dec
inc
cmp
cwde
xor
mov
es
mov
sbb
cmp
mov
mov
mov
ficomp
imul
pop
cmp
push
sbb
mov
lds
sub
fwait
mov
pop
xor
adc
sbb
or
sbb
mov
(bad)
pop
stos
fstp
xor
and
dec
pop
inc
add
mov
adc
lods
sbb
mov
add
mov
ins
inc
push
push
add
ffree
sbb
retf
fnsave
fsubr
(bad)
jns
(bad)
dec
test
sub
lods
push
adc
retf
pop
xlat
jns
and
and
data16
xor
xor
and
push
test
mov
add
mov
push
pop
(bad)
inc
les
cmovo
jmp
mov
out
xor
loopne
jmp
dec
popa
cmc
inc
rol
stos
std
push
mov
das
(bad)
aam
int
shl
xor
push
(bad)
xchg
dec
pop
mov
pop
and
pop
inc
cmp
fiadd
inc
xor
lds
cmc
movs
sbb
(bad)
test
or
mov
jecxz
(bad)
rcl
and
adc
inc
add
push
adc
add
into
(bad)
and
movs
(bad)
shr
or
mov
sub
scas
cmp
ret
or
adc
mul
movs
add
mov
out
and
pop
std
jno
adc
add
mov
xchg
mov
or
ins
mov
loopne
shl
mov
pop
pop
sub
adc
xor
inc
add
sub
pop
jnp
inc
stos
dec
or
push
jno
stos
(bad)
fild
add
mov
add
(bad)
xor
sbb
and
push
(bad)
and
adc
call
add
movs
stos
ja
fnstenv
jno
add
or
mov
in
shl
pop
adc
mov
cmp
and
rcl
pusha
and
mov
iret
jno
loop
xchg
retf
out
add
push
mov
push
or
inc
popa
adc
push
push
in
stos
test
cmp
or
adc
xchg
sub
adc
(bad)
shr
adc
cmps
push
mov
and
movs
popf
xor
dec
inc
mov
inc
cdq
(bad)
mov
fisubr
xlat
add
inc
and
icebp
xor
xlat
mov
sub
mov
and
add
gs
mov
add
add
push
and
retf
(bad)
lds
jecxz
cmp
sti
and
or
and
xor
mov
stos
or
push
fist
ror
xchg
and
and
inc
xor
inc
mov
test
sbb
mov
mov
xor
xor
movs
xchg
ja
nop
call
das
mov
mov
pop
aaa
sub
push
mov
and
test
xchg
add
or
inc
add
xlat
and
inc
mov
or
pop
adc
sub
mov
sbb
movs
xor
stc
xor
push
jg
xor
mov
jg
add
add
mov
add
xor
lea
or
add
inc
add
adc
(bad)
icebp
push
inc
out
dec
and
add
sub
push
adc
xor
push
or
mov
add
lods
pop
sub
and
in
dec
adc
and
pop
ror
leave
sbb
pusha
or
and
sbb
add
fisub
cmp
fsub
fnsave
inc
and
cmp
loop
stos
dec
add
add
or
add
cmp
xlat
shr
sub
and
add
(bad)
sbb
hlt
repz
(bad)
or
push
test
sub
xchg
and
add
add
mov
das
sti
movs
mov
cmp
cwde
pop
xor
stc
dec
pusha
xlat
mov
adc
icebp
sub
and
arpl
inc
push
das
xor
dec
mov
adc
xlat
jecxz
aaa
ins
and
test
jecxz
pop
imul
push
or
sti
pop
or
inc
or
imul
and
jmp
lods
add
push
dec
xor
add
xchg
ret
sub
mov
jge
push
pop
les
and
xchg
test
dec
(bad)
mov
and
or
xchg
adc
inc
xchg
xchg
shl
or
mov
adc
gs
mov
mov
int
loopne
and
adc
retf
ffreep
mov
fbstp
lahf
and
xor
push
or
and
ins
sub
mov
fisttp
bound
pop
sbb
and
loope
or
add
add
or
dec
add
je
push
adc
lods
xlat
test
add
xor
and
lods
sbb
inc
dec
dec
sub
ins
add
sbb
pop
push
dec
or
push
movs
movs
adc
and
xchg
int
add
pop
xor
jne
pop
xor
movs
stos
das
add
pop
test
ins
xor
and
sub
add
loopne
add
inc
jge
or
adc
adc
stos
shr
or
and
ins
pop
mul
lods
push
or
xchg
cdq
sbb
push
pusha
adc
sub
retf
dec
or
and
sub
xor
add
mov
cdq
dec
and
add
loope
mov
mov
ror
or
imul
sbb
lds
dec
fistp
pop
pop
test
add
stos
xchg
mov
or
retf
sub
inc
xor
lods
out
fwait
rcr
les
les
or
inc
and
fimul
pop
mov
inc
jg
outs
push
and
(bad)
sub
ret
push
or
pop
pop
mov
test
jge
stos
mov
mov
or
mov
push
pusha
pop
mov
mov
(bad)
ror
mov
scas
lods
stos
push
mov
mov
inc
xor
or
or
adc
cmps
adc
or
push
jecxz
sub
test
sub
push
xchg
cmp
xor
lahf
cmp
jle
add
inc
mov
sub
or
pop
bound
add
pop
retf
das
arpl
pusha
rcl
out
cmp
inc
mov
jns
inc
adc
cmp
xchg
sub
pop
inc
mov
or
add
jmp
jecxz
push
xchg
inc
test
or
adc
aad
imul
fwait
mov
and
pop
adc
jne
push
push
sub
xchg
ja
push
test
inc
jae
mov
push
popa
fwait
push
push
add
bound
mov
jmp
jge
or
xchg
ror
fadd
mov
loopne
jae
jno
inc
bound
ins
push
xor
mov
pusha
lds
xor
ret
sub
mov
add
shl
pop
stos
rcl
call
add
and
shl
div
mov
aas
test
adc
popf
xor
add
movs
popa
cmp
imul
and
int3
and
add
inc
push
sub
hlt
push
aad
loope
aad
popa
mov
lds
adc
push
cdq
xchg
add
test
push
ffree
sbb
stos
or
pop
daa
add
xchg
push
mov
add
dec
lods
add
adc
cwde
mov
sbb
mov
jno
push
adc
inc
adc
and
mov
xchg
xor
push
in
inc
dec
pusha
mov
mov
mov
push
and
and
movs
dec
push
adc
inc
mov
push
sub
push
or
test
stos
(bad)
mov
es
dec
xchg
mov
and
sub
xchg
mov
push
pop
scas
rcr
jmp
sub
or
sub
push
or
adc
mov
cmp
jle
es
pop
shr
inc
cmp
mov
xor
pop
pusha
mov
add
mov
gs
fidiv
mov
scas
test
(bad)
xor
adc
jno
mov
sbb
and
mov
popa
xor
xchg
pop
mov
xor
push
scas
inc
inc
and
dec
inc
mov
adc
add
mov
sbb
inc
push
ret
stos
add
xchg
or
and
mov
lea
push
and
test
add
xor
pop
inc
test
mov
sbb
inc
movs
inc
dec
lods
add
push
shl
scas
lds
add
les
xor
pop
jnp
mov
movs
cmp
push
pop
or
push
adc
pop
ret
das
push
cmp
das
xor
sub
test
or
push
inc
sbb
popa
mov
(bad)
out
and
and
fwait
pop
and
add
xchg
push
sbb
adc
add
push
rcl
mov
mov
dec
inc
mov
lds
mov
lds
mov
and
adc
jne
stos
cmc
ja
adc
xor
or
mov
int3
fwait
popf
sbb
mov
fadd
fcomip
cmp
sub
rcr
mov
mov
adc
int
mov
and
cmp
mov
add
bound
shr
sbb
adc
or
push
movs
add
xchg
imul
pusha
cmps
inc
xchg
lods
or
sub
add
add
imul
xchg
nop
mov
leave
push
or
adc
adc
iret
and
adc
sbb
pop
les
push
mov
stos
dec
pushf
das
and
lods
and
adc
outs
imul
fild
dec
adc
sub
mov
mov
xor
add
add
inc
xchg
pop
(bad)
mov
sub
gs
fldcw
cmc
or
mov
(bad)
xchg
bound
icebp
sbb
dec
or
add
stos
mov
(bad)
and
(bad)
and
add
daa
test
test
cmc
adc
mov
lods
jae
add
ss
retf
adc
push
lods
mov
add
ret
pusha
imul
push
xor
xchg
mov
cmp
movs
mov
ret
mov
xor
push
fwait
jecxz
aad
adc
cmc
mov
in
scas
pop
add
pop
sbb
retf
adc
fadd
sbb
pop
das
lods
lahf
mov
sti
mov
test
pop
dec
pop
push
add
xchg
bound
jecxz
mov
dec
inc
jmp
adc
add
pop
cmc
mov
and
mov
inc
add
scas
dec
int3
shl
or
mov
mov
pop
lods
loop
adc
mov
movs
rcr
and
add
ins
or
sub
or
aaa
adc
or
add
out
fisttp
and
adc
and
xor
aam
dec
xor
retf
aad
pusha
xchg
mov
jmp
or
aad
xor
mov
(bad)
lds
or
add
jo
push
adc
adc
test
adc
(bad)
mov
arpl
gs
xor
add
adc
(bad)
add
sbb
mov
mov
mov
pusha
inc
mov
pop
push
mov
(bad)
xor
sub
xor
sbb
adc
adc
ror
push
inc
scas
or
mov
and
add
sbb
xchg
nop
pop
pusha
add
or
inc
adc
dec
push
imul
test
stc
xchg
xor
data16
mov
les
test
xlat
mov
dec
pop
loopne
sub
mov
xlat
rcr
jnp
sbb
imul
das
and
or
mov
adc
or
push
int3
pop
sub
or
xor
sbb
pop
mov
idiv
sbb
push
ret
pop
xchg
pop
xor
add
adc
push
inc
popa
adc
mov
and
inc
gs
pop
imul
or
and
test
pop
fisttp
test
xchg
and
and
sub
adc
mov
or
scas
add
or
mov
mov
mov
mul
stos
pop
stos
xor
mov
out
push
imul
sub
or
xlat
test
lods
adc
add
mov
sub
cmp
mov
push
mov
jns
cmc
mov
add
in
or
mov
loop
mov
xchg
das
or
xchg
and
cmc
add
inc
xchg
mov
xor
or
mov
loope
adc
jge
xor
inc
sub
cmp
add
inc
add
push
lods
fwait
cs
and
(bad)
jmp
mov
inc
and
inc
das
test
mov
xlat
scas
mov
shl
fiadd
imul
jne
push
mov
iret
daa
push
add
pop
sti
sbb
mov
sub
fwait
push
scas
jo
and
inc
movs
adc
or
or
pop
das
daa
mov
(bad)
dec
les
or
les
sbb
pop
push
retf
sbb
test
das
mov
adc
add
xlat
mov
rcl
mov
push
adc
xor
sub
sbb
(bad)
add
sub
adc
ja
xchg
push
popf
inc
out
xchg
mov
sub
dec
push
sbb
dec
ret
or
loope
push
les
add
loope
mov
add
shr
sub
daa
dec
(bad)
sub
jns
mov
ret
adc
pusha
(bad)
push
and
xchg
xor
and
in
pop
stos
cmc
mov
cmp
pusha
xchg
leave
stos
or
add
mov
js
dec
lods
cmps
sub
and
outs
retf
or
and
add
inc
cmc
das
test
aaa
mov
sub
pop
push
inc
rol
add
adc
add
add
stc
bound
dec
sub
add
or
sbb
iret
and
jge
div
mov
push
dec
push
xor
jae
test
push
shl
pop
in
and
sbb
pop
push
inc
xchg
(bad)
popa
add
mov
cmc
push
mov
out
and
ss
xchg
cmp
mov
shr
sbb
add
daa
outs
add
inc
mov
pusha
movs
and
pop
das
pop
mov
add
arpl
cwde
mov
pusha
shl
pop
add
xchg
add
aam
push
add
or
and
pop
ret
fild
jmp
adc
sbb
pop
and
adc
xchg
bound
movs
inc
std
pop
push
ins
arpl
in
pop
add
enter
xchg
add
aaa
add
mov
xor
call
pop
or
sub
stos
out
stos
mov
add
test
sbb
inc
wrmsr
mov
test
rcr
sub
gs
cmp
and
sub
xor
pop
pop
xlat
pop
mov
or
sub
sub
push
ror
pop
sub
cdq
dec
cmp
xlat
les
mov
pusha
or
cmp
adc
pop
mov
bound
push
adc
push
dec
dec
fistp
add
lea
(bad)
cmps
push
push
mov
push
push
mov
pop
inc
mov
pop
add
adc
test
push
test
and
sub
push
aaa
mov
adc
sbb
or
push
mov
inc
les
add
adc
or
aaa
mov
inc
loopne
mov
xchg
jb
daa
adc
xor
enter
adc
push
jmp
ret
mov
sub
push
gs
jecxz
fist
xor
cmp
das
pop
inc
xchg
nop
jge
xor
test
stos
test
ret
cdq
adc
inc
pusha
adc
imul
shr
mov
cmp
xor
ja
xchg
inc
xor
pusha
dec
shl
push
sub
imul
jmp
xchg
mov
pop
mov
and
jno
xor
ins
and
(bad)
pusha
nop
mov
xchg
shl
inc
push
sbb
inc
(bad)
call
ins
movs
cli
rcl
not
xchg
das
mov
dec
arpl
xor
cmp
or
pusha
add
lea
das
pop
xor
sub
pop
shl
or
cs
icebp
cmp
or
and
xchg
adc
push
arpl
sbb
add
cmp
mov
mov
sar
xchg
jmp
inc
int3
cmps
push
mov
push
mov
int
or
test
shl
lea
dec
lods
push
ror
cmps
jne
sbb
sub
movs
push
arpl
mov
nop
push
aas
inc
add
inc
loop
add
scas
xor
dec
or
mov
icebp
inc
sub
and
pusha
add
jno
xor
pop
pop
test
imul
in
add
sbb
and
aad
popf
ror
jne
out
sub
add
gs
enter
pop
add
dec
push
shl
icebp
and
push
test
add
xchg
mov
jne
xor
inc
and
(bad)
nop
shl
sbb
mov
ret
lds
add
sbb
and
and
movs
sbb
or
adc
mov
les
pop
sub
mov
scas
scas
lds
xchg
scas
imul
adc
mov
sub
xchg
or
adc
lods
repz
mov
jmp
inc
mov
add
sub
das
pop
sahf
les
fs
stc
adc
ins
or
lods
and
sbb
jo
inc
mov
gs
test
jge
dec
or
inc
and
add
bound
(bad)
adc
sti
push
mov
outs
xor
out
and
dec
dec
and
loope
arpl
xor
push
jecxz
push
sub
sub
or
or
ins
and
push
xor
adc
push
test
movs
pop
mov
stos
inc
sub
test
xor
imul
lea
mov
mov
and
xchg
jns
movs
adc
pusha
xor
(bad)
mov
adc
(bad)
or
pop
mov
dec
ins
sub
and
imul
lds
lock
cmps
gs
adc
pop
push
and
or
jge
loopne
xor
fisttp
xor
fild
or
dec
add
push
xchg
and
mov
or
popf
xor
xchg
mov
mov
stos
sub
stos
test
or
lods
inc
and
and
ret
and
aas
xor
stos
mov
stos
mov
lods
mov
push
movs
mov
adc
inc
sub
push
and
popa
pop
mov
push
test
mov
dec
fcom
sbb
push
inc
or
nop
xchg
sbb
mov
xor
(bad)
push
movs
and
sbb
das
loop
adc
imul
mov
cmps
imul
sbb
inc
xchg
mov
test
retf
dec
and
jo
call
stos
dec
iret
xor
das
test
imul
cmps
imul
push
jg
fsubr
sub
add
cmp
leave
dec
inc
sar
dec
(bad)
imul
mov
iret
push
ins
add
popa
jae
cmp
jmp
push
push
jge
xchg
xor
sub
inc
sti
sbb
push
pop
sbb
sbb
xor
mov
pop
push
or
lahf
fstp
sbb
and
and
sub
inc
jmp
rcr
adc
add
adc
scas
jmp
xor
lock
rcl
pop
add
lahf
shr
add
push
fs
xor
data16
(bad)
push
or
xchg
shr
or
mov
lods
sbb
leave
lds
inc
sbb
sbb
pop
hlt
lea
and
or
int
and
popf
xor
movs
add
mov
fwait
adc
and
test
or
mov
mov
or
out
jne
mov
mov
retf
movs
add
ss
jae
adc
or
imul
mov
add
mov
xor
push
add
pop
cmc
jg
mov
arpl
stos
and
in
int3
aaa
adc
mov
sub
inc
in
dec
loopne
sub
ror
add
call
jno
add
xor
sbb
mov
out
cwde
add
shl
out
mov
or
lds
fs
xor
mov
jmp
inc
mov
ret
sub
push
ja
lods
xchg
or
pop
mov
es
or
add
xor
jmp
dec
pop
dec
or
xor
aam
rol
inc
popf
sbb
and
test
inc
pop
stos
add
mov
lods
xor
inc
push
pop
or
(bad)
in
add
push
push
out
dec
push
sub
retf
pop
dec
sub
test
shl
mov
adc
aad
dec
dec
sar
add
imul
add
rcl
shr
and
rcl
fcomp
jl
mov
adc
jg
cli
inc
mov
xlat
jmp
sbb
mov
(bad)
fnsave
or
adc
inc
ror
addr16
mov
rcr
xor
or
shr
jmp
inc
fld
dec
add
mov
iret
mov
xor
cmp
lods
adc
adc
bound
(bad)
jmp
push
and
aaa
ret
mov
add
pop
push
mov
pop
stos
sub
stos
and
or
loope
dec
les
ret
adc
mov
cmp
mov
mov
or
sub
test
xor
mov
dec
push
push
and
dec
xor
adc
sbb
mov
push
mov
mov
fxam
mov
(bad)
sbb
dec
imul
cdq
fld
mov
mov
out
or
xor
pushf
mov
rcr
ss
test
push
mov
pop
inc
and
movs
mov
mov
push
jne
mov
push
adc
push
add
xor
lea
or
or
push
cmps
sbb
fld
or
mov
mov
stos
mov
fist
pop
mov
(bad)
ret
push
sub
mov
shr
or
pop
out
mov
xor
dec
and
adc
out
rcr
in
jg
and
cmp
push
sbb
push
dec
popa
ror
cmp
cmp
mov
fwait
mov
pop
push
xchg
lea
push
lods
leave
dec
retf
in
test
ins
pop
(bad)
mov
sbb
xor
cs
inc
jbe
mov
rcr
add
add
mov
or
inc
movs
(bad)
mov
push
push
push
imul
or
push
lods
sbb
inc
and
xor
js
scas
in
sub
mov
iret
stos
jns
adc
test
jnp
dec
enter
(bad)
add
lods
push
push
xchg
mov
fnstcw
adc
sbb
add
pushf
or
and
sbb
push
gs
test
and
mov
adc
inc
mov
rol
sub
cwde
lods
mov
dec
daa
push
add
xor
or
push
add
ror
popa
shr
jg
and
sub
pop
and
cs
les
sbb
push
mov
mov
sub
sbb
xor
or
dec
pop
add
mov
mov
pusha
leave
arpl
cmp
(bad)
fadd
sbb
sahf
sbb
cs
dec
cdq
or
fnstsw
xchg
mov
gs
jnp
inc
add
retf
test
rcl
push
sbb
and
add
stos
stos
fwait
cmp
(bad)
stos
add
inc
pop
xchg
adc
or
and
cwde
int
push
or
popa
nop
test
lods
adc
push
pop
aad
outs
push
inc
or
ins
push
int3
xchg
add
jg
arpl
push
and
adc
or
sub
rcl
sbb
test
pusha
or
mov
adc
pop
dec
dec
inc
xor
jo
push
pop
std
and
sti
push
jmp
adc
sbb
loope
imul
inc
movs
shl
enter
push
pop
add
aad
sbb
push
pusha
xchg
shr
sbb
push
rol
ja
mov
mov
xchg
test
arpl
test
cmp
inc
int3
xor
pop
ret
sbb
(bad)
inc
in
sub
xor
or
lods
or
add
inc
pop
push
lds
ret
adc
std
and
in
and
xchg
and
call
mov
push
adc
shr
xor
xor
pop
add
mov
push
icebp
dec
push
lods
push
or
pop
xchg
add
pop
jo
mov
movs
sub
xor
test
addr16
lea
or
lods
andnps
(bad)
xor
setno
mov
or
mov
cmp
movs
push
cdq
inc
and
sub
loopne
inc
pop
sub
ror
and
add
adc
add
xlat
cmp
lock
mov
rcl
cmp
lds
xor
add
sbb
ret
inc
mov
cmp
lods
add
ror
adc
js
stos
movs
xor
push
movs
mov
mov
pop
pusha
add
pop
jmp
(bad)
adc
and
bound
mov
aam
ss
loop
adc
(bad)
adc
sub
mov
inc
aam
jmp
lods
add
ror
bound
lds
xor
or
adc
cmp
mov
add
sbb
std
and
imul
inc
mov
add
cwde
mov
pop
xchg
mov
xchg
adc
add
cs
dec
pop
or
pop
pop
xor
and
push
cdq
or
jmp
add
or
cs
mov
xchg
imul
mov
dec
arpl
and
out
mov
(bad)
sbb
dec
ror
mov
lds
adc
inc
inc
jge
mov
cmc
push
dec
js
sub
arpl
adc
aaa
test
or
push
xchg
loop
push
dec
xor
mov
addr16
dec
mov
add
adc
push
sub
mov
push
popa
cmp
scas
sub
or
inc
jp
or
add
test
pop
push
mov
ins
push
push
imul
mov
fstp
cmps
mov
cdq
(bad)
add
xchg
daa
xlat
adc
dec
jecxz
add
mov
in
(bad)
icebp
sbb
(bad)
jg
cmp
rcr
daa
inc
out
pop
add
or
cmp
(bad)
xor
mov
push
dec
fidiv
(bad)
or
xor
not
popf
mov
gs
mov
lds
push
sbb
inc
push
adc
jecxz
add
xchg
ret
(bad)
nop
and
pop
ja
(bad)
push
adc
push
or
stos
xor
mov
dec
lea
push
xor
dec
sub
(bad)
mov
mov
add
imul
push
inc
(bad)
stos
and
dec
jmp
or
add
add
adc
imul
push
mov
movs
push
jg
daa
xor
popa
dec
xchg
xchg
cwde
mov
cmove
mov
dec
or
push
mov
or
(bad)
sub
sbb
push
dec
adc
xor
ret
sbb
xchg
inc
jae
sbb
jmp
push
pop
sar
add
lock
(bad)
jno
and
retf
out
pop
push
sub
mov
or
add
adc
cmp
xchg
mov
dec
stos
test
lahf
dec
xor
dec
xor
in
mov
pop
adc
ins
xor
pop
mov
jno
mov
xchg
pop
xchg
fwait
sub
cmps
pop
or
adc
(bad)
rol
loopne
out
xor
stos
sbb
lods
xchg
push
inc
inc
add
sub
stos
adc
mov
arpl
lods
pop
pop
push
or
or
push
ins
and
sub
(bad)
dec
mov
sub
test
push
std
add
or
scas
push
and
xor
jmp
adc
scas
les
test
js
or
syscall
or
inc
add
xchg
lods
jmp
cmps
sub
or
mov
ud1
pop
xor
mov
gs
test
retf
imul
add
inc
add
xor
sbb
push
or
retf
es
add
inc
inc
add
or
out
inc
shr
ins
mov
add
aaa
sub
sub
shr
add
mov
jno
jg
pop
and
inc
add
fcos
pusha
adc
add
sbb
mov
stc
or
pop
arpl
inc
mov
mov
sbb
or
pop
mov
mov
mov
sub
ror
xor
sub
adc
pop
mov
ins
pop
mov
leave
add
loopne
pop
(bad)
les
outs
sbb
fsubr
pop
sub
aaa
add
sti
push
retf
sub
loopne
pop
lods
and
or
ja
(bad)
sub
xor
(bad)
cmc
and
test
xor
test
and
push
or
cmp
push
pop
add
jmp
xor
shr
jno
or
pop
sbb
imul
inc
add
sbb
popf
xor
movs
push
(bad)
sub
stc
and
(bad)
lods
lods
lods
movs
and
adc
or
or
imul
xor
lods
jecxz
mov
push
test
mov
and
adc
or
dec
pop
inc
or
rcr
pop
sub
inc
cs
je
push
sbb
push
bound
test
mov
or
sub
pop
dec
mov
jmp
add
xor
icebp
das
xor
pop
fisttp
out
ins
and
mov
mov
fs
popa
or
push
test
pop
inc
pop
mov
xor
in
add
sahf
pop
push
sar
push
js
cmp
adc
xchg
mov
dec
inc
dec
add
adc
(bad)
pop
test
pusha
adc
and
sbb
jae
mov
int
or
call
mov
mov
add
sbb
and
add
jno
and
pop
lea
jecxz
mov
and
retf
jo
sub
or
pop
xlat
test
pop
jne
test
rol
dec
test
xchg
cs
inc
push
imul
sbb
and
adc
inc
aad
jecxz
add
fwait
ins
std
adc
sub
mov
cs
add
out
adc
xchg
jbe
popa
or
lahf
cmp
push
push
sub
inc
sti
mov
movs
inc
lods
cmp
add
dec
fwait
lods
sbb
rcr
adc
inc
int
vcmpps
add
mov
dec
pusha
push
adc
(bad)
inc
imul
xchg
bound
outs
mov
inc
or
xchg
ins
sbb
pop
sub
pop
mov
push
xor
add
call
sub
(bad)
mov
push
adc
and
push
mov
inc
add
push
or
call
cmc
test
push
adc
or
inc
dec
pop
xchg
and
or
mov
xchg
popa
push
mov
add
cdq
ret
and
xor
mov
pop
xor
sbb
xchg
add
and
dec
and
test
or
movs
or
loope
add
sub
mov
jge
add
pushf
or
jbe
push
and
popa
pop
cmp
cmp
adc
add
cmp
or
or
adc
fnstenv
adc
mov
test
(bad)
inc
sbb
sbb
or
inc
add
inc
movs
jne
mov
rol
or
xor
push
int
mov
or
xchg
dec
aad
in
dec
jne
or
or
adc
push
cmp
or
lods
mov
rol
call
adc
adc
mov
dec
inc
movs
or
loope
xchg
or
ret
dec
(bad)
push
pop
or
mov
pop
dec
bound
xchg
fdiv
or
popa
popf
les
adc
pusha
jnp
pop
mov
jno
loop
loope
fld
ins
and
add
(bad)
and
popa
shr
rol
or
(bad)
in
inc
pop
xor
les
cmp
inc
xor
sub
mov
sub
lods
pop
loope
and
adc
xor
ja
inc
add
mov
inc
popa
inc
test
(bad)
inc
mov
mov
js
lods
xchg
and
std
mov
fdiv
adc
sub
adc
adc
and
add
xor
add
sub
stc
arpl
push
inc
ins
out
inc
adc
add
(bad)
or
add
popf
fwait
lods
rcl
(bad)
sub
mov
push
add
mov
sub
xchg
lea
imul
call
sub
arpl
movs
or
and
sub
push
jo
cmps
jae
add
movs
or
mov
push
in
cwde
sub
ins
cs
icebp
mov
mov
or
retf
cs
jnp
(bad)
dec
mul
mov
xor
or
xchg
sbb
mov
imul
sbb
inc
add
pop
daa
xchg
add
stc
rcl
or
pop
xchg
mov
push
dec
bound
or
mov
xchg
shr
sti
jmp
push
sub
pop
ffreep
bound
fisttp
xchg
add
add
lea
(bad)
lods
add
and
sub
popa
adc
mov
fwait
sbb
ins
mov
sbb
mov
(bad)
in
arpl
jg
ret
sub
nop
jns
hlt
push
arpl
shr
xchg
pop
dec
aam
and
add
pop
sar
fnstcw
adc
rol
and
adc
loop
pop
pop
or
mov
xchg
sbb
das
or
nop
jecxz
pop
cmp
cwde
adc
fnstsw
je
pop
inc
dec
pop
sar
push
xchg
gs
iret
sub
sub
adc
(bad)
arpl
rol
loopne
popa
pop
and
adc
aad
adc
inc
mov
dec
mov
sbb
shl
push
inc
pop
xor
and
xor
cs
sub
imul
inc
(bad)
in
(bad)
stos
sub
pusha
or
and
inc
les
cmps
adc
popa
popa
mov
or
(bad)
jl
aam
sbb
lods
cwde
sub
inc
xchg
add
inc
imul
pop
xor
adc
or
aam
aas
pop
mov
xchg
cs
add
xor
push
xchg
jbe
outs
cmp
jno
sub
leave
out
jecxz
dec
jb
mov
sbb
cmp
test
pop
std
fwait
inc
xor
add
xchg
add
adc
shl
shl
adc
xchg
and
int3
sbb
jmp
pop
(bad)
jnp
or
mov
sub
inc
popa
aam
adc
mov
cmp
jmp
and
xchg
adc
xor
sbb
sbb
adc
shl
pop
or
ror
or
and
sbb
aam
jo
mov
popa
mov
sbb
inc
sbb
stc
iret
adc
popa
sbb
sub
xor
adc
pop
mov
imul
jecxz
inc
test
dec
test
pop
call
xor
jae
and
and
xlat
mov
bound
adc
ret
adc
jo
int
ret
add
or
mov
rcr
imul
ja
mov
sub
retf
cmp
je
pop
jo
loope
push
jmp
adc
push
xor
lods
cmp
sbb
jmp
lea
xor
iret
dec
mov
adc
pop
push
pusha
ins
adc
sbb
mov
and
sbb
mov
push
or
sbb
add
sub
aam
jmp
sbb
adc
inc
push
or
mov
add
cmc
mov
sub
pop
iret
rcr
or
xor
in
pop
adc
and
mov
add
aas
xchg
and
shl
shl
ds
mov
movs
dec
stos
fucomp
xchg
or
adc
push
or
lea
or
retf
sbb
les
test
push
dec
xor
add
xchg
jg
pop
mov
inc
les
sub
cs
ret
sub
and
fcom
sub
fnstenv
sbb
dec
sub
xchg
inc
xchg
jno
js
(bad)
and
add
aam
imul
sub
xchg
test
sub
cmc
mov
xor
test
push
and
xchg
pop
sub
test
ins
push
push
sub
not
sub
(bad)
mov
push
pusha
imul
stos
shr
ret
daa
push
and
rcl
stos
jle
adc
stos
out
daa
xor
adc
xchg
inc
pop
les
test
xchg
sbb
jne
pop
movs
adc
add
xor
sbb
xor
push
mov
les
mov
sbb
rcl
test
retf
mov
add
inc
fldcw
add
adc
adc
pop
sub
xor
add
jo
jns
mov
xchg
pop
test
daa
call
add
mov
jae
fwait
jnp
push
nop
bound
mov
sbb
mov
ja
ja
mov
dec
(bad)
sahf
add
inc
and
sbb
xchg
xchg
les
sbb
sub
mov
sub
jns
or
and
jmp
cmp
sbb
int
test
and
scas
pop
lods
push
jp
mov
imul
pop
push
push
lea
test
adc
and
inc
add
sub
add
cmp
test
add
mov
popa
inc
and
xchg
mov
outs
pop
adc
mov
push
call
jne
inc
mov
mov
cmp
dec
push
xor
xchg
xchg
arpl
xor
cmp
lods
add
xchg
dec
sub
push
test
pop
data16
scas
clc
inc
or
test
movntq
dec
dec
add
ja
les
xlat
test
addr16
xor
shl
lds
add
or
add
mov
inc
(bad)
jl
xchg
nop
test
xor
loopne
xlat
mov
cmp
or
retf
push
sub
dec
cmps
push
enter
and
inc
mov
inc
mov
inc
movs
jo
adc
dec
mov
sbb
pop
add
rol
add
cmc
iret
mov
mov
sub
daa
mov
inc
xchg
ror
int
add
out
pop
mov
lods
lods
lods
xor
scas
adc
mov
lods
imul
aad
pop
gs
adc
xchg
add
nop
adc
sbb
dec
mov
fmul
sti
rcl
or
mov
sbb
or
dec
mov
jge
sub
jmp
mov
cmp
in
les
dec
mov
mov
rcr
adc
pop
push
dec
or
jo
aad
mov
lods
push
popa
xor
(bad)
xchg
loop
imul
stos
mov
inc
lea
pop
add
or
mov
mov
fild
lods
xchg
mov
xchg
cmp
pop
xor
xchg
xor
xor
push
adc
push
or
and
add
adc
scas
add
and
sbb
inc
push
sub
pop
ret
and
stos
aaa
lds
push
or
shl
mov
and
sub
add
or
and
sub
scas
fwait
ins
sub
and
and
loope
scas
jmp
xchg
pop
mov
push
mov
shl
bound
movs
or
mov
int3
(bad)
stc
and
dec
cmp
test
sar
xchg
push
out
(bad)
xor
mov
mov
inc
popa
test
or
inc
imul
sub
add
int3
push
xchg
arpl
int
stos
mov
imul
adc
and
enter
sub
xchg
movs
jo
adc
cmp
xchg
push
adc
mov
lea
movs
lods
stos
mov
inc
push
mov
push
(bad)
xor
cmps
pop
les
sub
cmp
movs
mov
and
pop
sbb
out
sbb
int
mov
push
rcr
dec
or
mov
arpl
sbb
rcr
adc
add
(bad)
stos
ror
dec
loopne
sub
sbb
xor
daa
jno
ins
or
daa
push
jg
push
add
sbb
add
xor
dec
mul
sbb
pop
jmp
adc
adc
dec
dec
test
pop
cs
adc
mov
sub
or
retf
gs
ja
adc
mov
push
xchg
adc
push
sbb
aaa
mov
inc
and
ret
sbb
(bad)
dec
and
sub
dec
xchg
rcr
adc
dec
cmps
adc
movs
sub
jo
dec
push
push
xor
add
pop
arpl
lds
jmp
xchg
pop
les
mov
and
arpl
inc
test
(bad)
pop
dec
adc
bound
xchg
add
inc
in
add
shl
ret
xor
and
fcmovnb
adc
test
test
push
and
inc
inc
add
adc
movs
movs
mov
(bad)
sbb
and
mov
add
jno
jecxz
out
enter
add
sub
xchg
and
sbb
add
add
xor
call
call
mov
ins
shl
mov
ja
sbb
retf
sub
sub
rol
adc
inc
fdiv
add
sbb
cmp
add
xchg
mov
sbb
xor
ins
imul
sbb
or
jno
fist
and
jo
inc
fstp
fiadd
pop
sub
sub
popa
popf
mov
aam
add
add
sub
add
or
sub
adc
or
pop
test
inc
jne
inc
pusha
sbb
cwde
xchg
fisubr
shl
pop
xor
sbb
xor
and
bound
stos
jge
(bad)
stos
test
dec
dec
shl
xor
fisttp
push
ss
xchg
xchg
jmp
jg
jg
test
pop
fnstsw
add
dec
fisttp
mov
dec
adc
daa
(bad)
outs
add
push
dec
imul
cmp
inc
lea
jno
sub
mov
add
adc
sbb
xchg
out
sbb
popf
and
sub
xor
fst
sub
arpl
sbb
or
movs
push
inc
jno
add
or
push
mov
dec
pop
pop
add
loope
pop
inc
and
es
xchg
add
inc
sbb
rcr
sub
ret
adc
add
push
fistp
(bad)
inc
fist
sub
adc
ret
or
inc
add
stc
test
mov
stos
sbb
ror
adc
ins
arpl
adc
and
sub
sbb
xor
nop
in
adc
xor
les
push
or
enter
push
jp
jns
mov
and
or
aad
pop
pop
cmp
xchg
push
cmp
retf
and
push
inc
lods
mov
ins
cmps
mov
icebp
dec
xlat
inc
outs
sub
nop
nop
rol
rcr
ror
or
ss
xchg
adc
fiadd
push
and
mov
mov
repz
and
stos
mov
imul
add
fsub
dec
(bad)
mov
mov
sbb
ret
nop
mov
movs
lds
adc
xchg
inc
scas
lods
sub
push
mov
inc
adc
add
or
mov
mov
or
mov
push
or
and
adc
fst
xlat
add
sub
je
pop
sbb
jne
xchg
cs
mov
aad
or
mov
push
pop
xadd
sub
pop
rol
aaa
mov
or
pop
popa
xor
mov
push
adc
outs
cmp
add
push
pusha
ficom
fcmovne
add
push
rol
in
cmp
imul
adc
or
mov
test
or
jnp
mov
add
dec
sbb
xor
sub
(bad)
lds
dec
jne
(bad)
sbb
inc
and
mov
rcl
mov
push
sub
xchg
sbb
pop
mov
sub
mov
dec
and
pusha
mov
sub
pusha
shr
adc
push
push
les
out
adc
push
lods
(bad)
and
fld
sub
vorps
and
mov
shr
inc
stos
retf
arpl
cmps
mov
popa
std
mov
enter
mov
mov
lods
mov
mov
adc
daa
lods
(bad)
sub
test
sbb
pop
cwde
lods
xor
sub
mov
jnp
fnstcw
jnp
and
add
nop
jne
cmps
mov
and
gs
add
loope
cmc
add
xor
jl
add
ret
sub
sbb
jbe
and
add
popa
mov
ins
mov
mov
sbb
lds
cmp
add
or
iret
lds
and
sub
or
sub
pop
nop
test
inc
iret
(bad)
test
test
jnp
push
inc
add
test
shl
or
push
je
mov
loopne
inc
adc
add
rol
inc
or
mov
xchg
jnp
pop
pop
cmps
scas
daa
movs
add
(bad)
test
fcomp
mov
inc
jne
lods
les
cmp
xlat
add
pop
aad
inc
xchg
jb
and
add
aad
adc
sub
inc
or
mov
sbb
push
loopne
add
dec
sbb
data16
and
push
mov
xchg
mov
daa
inc
dec
pop
xlat
sub
cmp
pop
(bad)
and
sub
dec
(bad)
xchg
pop
pop
mov
or
mov
dec
sar
inc
sub
sub
bound
mov
xchg
and
pop
sbb
adc
and
sbb
push
rcr
mov
pop
pushf
inc
test
jnp
and
add
push
inc
adc
jmp
pop
movs
adc
and
dec
das
push
jb
repnz
xor
mov
imul
adc
sbb
sub
bound
mov
adc
lods
inc
retf
jno
dec
pop
add
inc
scas
les
ret
inc
pop
mov
dec
mov
and
lock
mov
fs
jbe
ja
lods
mov
and
xor
test
xchg
add
mov
sub
pop
inc
sub
into
mov
rcr
jo
add
cs
adc
and
mov
retf
dec
and
(bad)
lods
lods
sbb
add
aaa
ins
lds
jmp
daa
test
aam
fdivr
xor
shr
sub
fcomp
mov
add
add
inc
pusha
test
popa
(bad)
shr
xor
test
pop
push
cmp
mov
stos
xchg
sbb
popf
xor
jl
mov
(bad)
movs
or
ja
mov
les
push
cmps
sti
sub
test
mov
add
or
add
push
push
and
jge
add
repz
das
add
inc
bound
loopne
dec
pop
inc
jne
sub
add
out
inc
movs
jno
(bad)
mov
xchg
sub
adc
push
cmp
repz
inc
add
mov
adc
fwait
or
push
nop
jge
(bad)
or
xor
jo
sub
adc
pop
or
nop
fst
jge
mov
push
sub
inc
cmp
(bad)
pop
sbb
lods
add
ins
sbb
mov
mov
loope
mov
pop
fistp
mov
dec
pushf
push
jge
xchg
or
sbb
add
shr
add
adc
pop
lea
pop
daa
bound
sbb
sbb
or
fs
or
lods
daa
xor
dec
aas
inc
adc
inc
in
inc
mov
adc
inc
dec
and
jnp
imul
push
and
mov
adc
jge
and
sbb
xor
icebp
sbb
push
popf
and
addr16
pop
test
cdq
shr
stos
jno
inc
fldcw
nop
or
popa
rcl
nop
outs
ud1
or
jno
dec
fwait
jnp
push
cwde
(bad)
aaa
sbb
add
cmps
push
mov
xchg
or
bound
or
pop
jbe
rol
push
or
sbb
xor
or
pop
ins
lds
retf
shl
or
ret
icebp
ret
xchg
pop
mov
or
popf
test
xchg
mov
sbb
rol
xchg
mov
sub
push
mov
mov
push
sbb
jl
loop
aad
add
(bad)
scas
nop
cmp
ss
sbb
add
shr
sbb
jge
push
sub
or
popf
dec
mov
iret
pusha
adc
add
retf
lds
mov
lods
xor
lods
dec
sub
adc
popf
mov
xor
or
add
push
or
push
fld
push
inc
pushf
std
les
rol
sub
dec
ins
test
inc
outs
imul
stos
mov
dec
push
mov
xor
push
imul
mov
adc
xor
mov
push
push
xchg
ret
xor
(bad)
lods
adc
or
sbb
jecxz
jo
mov
pop
int3
add
adc
push
sub
inc
add
sbb
fs
or
mov
lahf
jno
sti
stos
in
and
add
or
popa
sub
pop
loopne
pop
jbe
fnstcw
mov
inc
push
push
sub
push
sti
xchg
xchg
xchg
retf
cmps
pop
adc
push
pop
mov
mov
sub
std
and
xor
fmul
push
test
pusha
adc
lods
or
inc
mov
jno
push
mov
xor
aaa
mov
push
mov
dec
sub
imul
ss
or
mov
dec
iret
lds
and
push
aad
adc
add
movs
adc
push
mov
shr
retf
add
mov
dec
(bad)
mov
mov
test
and
fs
cmp
push
bound
sbb
push
mov
adc
adc
jmp
sub
fistp
add
adc
gs
pop
add
fldenv
lds
or
xor
adc
nop
sub
cmps
sbb
retf
stc
shl
int3
add
add
popf
xchg
mov
cmp
ffreep
adc
ret
cmps
imul
or
dec
std
pop
xchg
mov
sbb
adc
aam
mov
mov
mov
sub
add
mov
or
add
outs
sub
mov
jno
dec
ror
test
cmp
adc
sub
mov
push
ror
xor
dec
pop
sub
xor
rcr
or
adc
cmp
and
sbb
add
pop
mov
push
mov
and
mov
cmp
cmp
sub
and
inc
cmp
pop
das
mov
sbb
xor
push
cmp
out
cwde
mov
test
mov
stos
cmp
call
xor
push
fdivr
inc
xchg
add
repz
fs
pop
(bad)
lods
inc
mov
or
daa
xchg
lea
imul
jmp
xor
or
retf
adc
in
enter
adc
mov
lods
(bad)
stos
mov
inc
mov
test
ins
dec
sub
xchg
cwde
xor
or
icebp
adc
lods
popa
les
adc
and
or
das
es
ret
xor
push
ret
adc
cmp
mov
xor
or
and
imul
add
lods
icebp
stc
push
adc
lea
mov
add
imul
mov
sub
adc
mov
sub
adc
pop
mov
fld
shl
or
popa
mov
pushf
dec
inc
and
imul
cmp
add
adc
loopne
or
add
mov
adc
xchg
sub
mov
mov
jecxz
imul
enter
add
xchg
inc
pop
or
push
lods
lsl
sub
test
pop
fcomp
and
inc
adc
mov
cmp
adc
lods
inc
jmp
mov
push
dec
add
inc
xor
out
add
outs
mov
(bad)
ja
add
push
add
adc
dec
movs
or
or
pop
iret
dec
movs
sub
les
aam
loope
inc
sbb
cmp
inc
dec
or
sbb
or
push
ja
and
fnstcw
mov
add
add
mov
and
inc
bound
add
add
popf
iret
call
das
adc
clc
rol
or
in
out
push
ret
repz
add
and
pop
pop
les
rol
xchg
sub
popa
ja
sbb
add
movs
or
fst
dec
add
jecxz
xchg
pop
inc
ficom
shr
mov
and
fld
push
pusha
sub
lds
add
fcomp
mov
out
sbb
sub
cs
sbb
jns
sbb
lock
mov
push
fdivr
cmp
sub
mov
push
retf
int
adc
bound
std
push
xchg
add
es
and
add
daa
imul
aas
pop
ins
inc
mov
das
xor
sbb
xchg
sbb
dec
and
leave
push
adc
inc
mov
fbstp
inc
push
popa
cmp
jge
and
or
sub
push
and
lods
aas
mov
lods
push
ret
fwait
sub
call
and
fwait
addr16
test
add
pop
ja
pop
(bad)
call
and
jmp
stos
leave
sbb
daa
xor
dec
ret
sbb
xchg
or
dec
adc
add
add
push
retf
mov
push
push
fldlg2
cs
cmps
jno
push
adc
or
loopne
popa
adc
iret
add
pop
add
mov
xchg
xchg
loopne
mov
xchg
shl
pop
sub
mov
jge
xchg
imul
arpl
fnstsw
adc
pop
pop
test
(bad)
or
retf
mov
sbb
adc
cmp
addr16
sbb
mov
pop
mov
test
add
pop
inc
xor
add
pop
cmc
or
enter
ins
bound
stos
add
imul
cdq
dec
lea
aam
dec
inc
je
ja
or
add
addr16
pop
test
xor
cmp
loope
adc
and
aaa
xchg
and
leave
xchg
aas
sbb
and
add
stos
xchg
popf
ins
xor
sub
push
xchg
test
fs
push
add
and
aad
nop
pop
jg
add
gs
sbb
add
pop
mov
mov
jmp
and
pop
pop
jb
outs
add
mov
add
mov
test
fwait
xor
dec
xor
add
pop
inc
call
or
or
xor
sub
or
push
(bad)
adc
(bad)
sub
add
add
push
inc
cdq
jae
xor
cmp
cmps
dec
fistp
les
loop
or
movs
adc
xor
pop
push
pop
and
mov
pop
sbb
push
retf
enter
add
or
ror
les
xchg
fstp
or
dec
xchg
jg
push
aam
add
test
(bad)
mov
xchg
test
int
mov
xor
or
adc
pusha
inc
gs
daa
xor
sbb
cmps
push
sub
push
mov
push
test
push
and
retf
imul
dec
xchg
sbb
test
and
mov
frstor
daa
nop
add
cmps
jmp
pop
add
sub
xor
add
out
jmp
std
ret
lods
gs
adc
imul
cmp
retf
jnp
test
scas
pop
add
and
int3
into
dec
inc
mov
sub
inc
loop
lea
addr16
(bad)
mov
add
push
push
mov
xchg
and
or
in
mov
mov
and
leave
inc
stc
mov
aad
add
or
xor
inc
mov
adc
stos
sub
jge
add
cs
xor
pop
adc
stos
add
movs
loop
push
push
mov
add
sbb
and
imul
fwait
adc
xor
ins
jo
pop
lods
fnstsw
add
mov
ss
imul
mov
movs
push
xchg
jmp
inc
mov
jge
inc
fcmovbe
xchg
jae
add
imul
pop
mov
shr
inc
imul
cmps
imul
ret
imul
xchg
fld
test
enter
xchg
push
xor
ret
mov
or
adc
add
arpl
cmp
adc
sub
rcl
and
fsubr
loopne
pop
mov
icebp
movs
xor
or
add
sbb
push
sub
add
push
bound
test
add
test
push
and
lods
adc
movs
jg
lods
inc
mov
daa
nop
and
test
push
add
sbb
push
movs
sbb
cwde
inc
mov
pop
or
push
xchg
push
shl
adc
push
xchg
loopne
add
sub
mov
pop
jecxz
xor
sti
les
mul
push
xor
popa
push
loop
dec
sbb
pop
adc
mov
jecxz
inc
shr
call
movs
pop
nop
lods
fld
or
pop
add
or
adc
mov
scas
mov
inc
sub
fadd
dec
loopne
add
pop
jo
in
inc
imul
push
mov
(bad)
cmp
and
pop
shr
enter
xor
or
sub
mov
jge
int
sbb
inc
or
(bad)
sti
imul
test
xlat
mov
fbld
xor
call
or
push
mov
push
mov
pusha
xchg
and
sub
and
push
out
add
lea
and
outs
mov
adc
stc
dec
pusha
rol
stos
bound
mov
fwait
add
or
xchg
movs
xor
cmp
daa
add
xchg
dec
adc
test
inc
mov
pop
mov
inc
arpl
std
or
fcmovne
cs
addr16
mov
ret
mov
push
mov
xor
pop
(bad)
and
add
popa
inc
test
in
and
sti
les
dec
fwait
pop
mov
daa
adc
sub
dec
and
jecxz
add
push
out
pop
mov
les
shl
fsubrp
lods
inc
iret
add
icebp
pop
sbb
cmp
bound
out
cmp
jne
loopne
add
sub
das
ja
imul
sub
sub
add
test
sub
aam
and
push
mov
adc
and
add
fwait
aas
add
xor
arpl
adc
daa
dec
int3
add
mov
push
pop
push
and
pusha
adc
adc
xor
adc
and
push
jecxz
add
push
daa
iret
push
rol
aas
nop
mov
adc
pop
mov
mov
retf
sar
ins
adc
cmps
push
dec
inc
push
pop
icebp
or
mov
sti
dec
lea
mov
sub
call
jne
cmp
xchg
push
es
dec
pop
adc
xor
inc
sbb
in
xor
sbb
and
add
pop
add
and
gs
aam
ja
into
cmovo
lahf
test
imul
add
and
push
jo
mov
mov
sub
fwait
ror
mov
push
fisttp
int
retf
add
mov
(bad)
adc
jmp
or
mov
test
push
xor
pop
sbb
mov
jno
and
jge
push
xchg
test
inc
pop
xor
add
aam
xor
or
mov
cmp
popf
add
daa
xchg
and
nop
cmp
push
xor
int3
adc
retf
adc
sub
pop
and
adc
inc
imul
pop
inc
test
leave
dec
adc
cmp
xchg
mov
bound
scas
xchg
adc
add
test
lds
dec
sbb
dec
test
jns
test
add
cmp
mov
mov
cmp
dec
inc
retf
shl
mov
mov
push
mov
adc
or
cmc
push
and
mov
pop
xchg
adc
jns
push
or
mov
out
add
leave
mov
sub
add
dec
nop
test
push
sbb
aas
xor
jbe
pop
xchg
sub
aaa
imul
adc
add
add
or
or
dec
and
in
inc
mov
addr16
lods
add
cmps
xchg
sub
pop
fisttp
mov
test
dec
mov
mov
or
adc
sub
sub
inc
stos
fld
inc
and
inc
sbb
or
xor
push
and
inc
les
sbb
dec
aad
push
daa
adc
mov
lea
add
pop
or
sbb
dec
shl
add
sbb
mov
add
lds
jno
xor
icebp
inc
xchg
add
inc
add
mov
shl
adc
and
test
bound
imul
adc
les
adc
jecxz
adc
add
lea
pop
test
sbb
adc
call
ss
sub
add
mov
in
cmp
pop
fadd
xor
mov
sbb
push
and
xchg
sub
inc
pop
daa
jb
lock
nop
or
mov
inc
inc
and
sub
and
xor
pop
jno
and
xor
adc
imul
mov
sub
test
add
movs
test
mov
sbb
pop
mov
sub
sub
(bad)
nop
and
sbb
lods
push
add
ror
add
and
sbb
jno
inc
pop
cmp
sub
movs
test
xor
xchg
adc
gs
hlt
sbb
and
lahf
add
cmp
inc
les
imul
inc
jecxz
or
mov
out
leave
enter
xor
and
push
add
gs
push
fadd
sahf
mov
inc
dec
shl
scas
xchg
jge
fwait
xlat
test
fnsave
popa
mov
cmp
enter
sbb
movs
mov
adc
je
movs
jmp
sbb
adc
enter
adc
in
xor
mov
or
fbld
pop
cmp
add
cs
add
xchg
jp
and
adc
shr
xor
mov
push
inc
dec
add
loop
and
or
lods
leave
cdq
mov
sbb
stos
adc
fist
test
adc
lea
gs
xor
xor
push
(bad)
fisttp
pop
push
mov
sbb
or
and
dec
push
mov
xor
jnp
imul
add
adc
or
addr16
mov
(bad)
sbb
add
and
std
inc
rcr
les
and
pop
cmps
fst
adc
ret
pop
addr16
ret
pop
hlt
mov
popa
shl
sbb
stos
je
sub
add
rcr
jns
loopne
test
mov
ins
sub
or
inc
pop
enter
mov
push
xchg
loopne
or
xor
mov
add
push
loop
or
sbb
daa
and
and
xchg
mov
popa
or
sbb
movs
les
clc
mov
(bad)
mov
jne
pop
add
retf
jns
pusha
or
or
nop
cwde
test
pop
inc
add
das
xchg
loopne
mov
xor
xor
sbb
mov
pusha
push
stos
sub
mov
cmp
leave
fst
mov
imul
jl
add
cmp
and
or
nop
inc
je
shr
test
imul
pop
leave
lods
add
pop
out
es
ins
pop
fstp
test
xor
cmp
xlat
xchg
pop
push
mov
mov
mov
in
lods
das
and
fcomp
sti
add
test
mov
cs
mov
pop
leave
add
out
adc
push
mov
add
sub
push
rcl
(bad)
rol
pop
nop
pusha
adc
iret
or
(bad)
add
pop
les
mov
jecxz
or
vfrczps
or
(bad)
nop
and
xor
rcr
pop
push
push
pop
jl
and
pushf
les
mov
sub
(bad)
and
cmp
mov
sub
inc
lods
sub
adc
mov
mov
or
add
sbb
sbb
add
xchg
rcl
push
adc
test
pop
xor
adc
sub
or
or
inc
add
push
xchg
scas
mov
mov
mov
stos
xor
nop
xor
dec
or
push
mov
add
push
jae
pop
mov
and
imul
push
mov
xchg
cs
inc
mov
and
imul
jge
inc
or
sub
mov
jno
sbb
and
push
aaa
cmp
mov
add
adc
jno
add
rcr
sbb
cmp
add
stc
test
push
mov
adc
mov
test
xchg
gs
add
sbb
or
mov
add
arpl
in
mov
add
sub
ret
push
dec
sbb
mov
add
push
retf
outs
add
push
xchg
or
mov
bound
imul
out
imul
xchg
inc
lods
pop
xchg
pop
and
stos
cmp
cmp
and
fcom
add
es
stos
fcmovnb
test
pop
popf
xor
and
jge
inc
push
es
or
add
ror
mov
mov
push
stos
(bad)
(bad)
stos
or
adc
push
dec
inc
pop
or
add
xor
adc
movs
inc
dec
and
xor
xor
inc
mov
movs
aas
pop
push
inc
js
ja
or
xchg
je
pop
sbb
mov
cmp
mov
push
sbb
xchg
mov
in
xchg
jbe
jge
sbb
enter
das
mov
jne
add
clc
test
pop
cmp
push
xor
xor
cs
mov
and
jno
add
das
add
adc
mul
jno
push
pop
mov
or
and
sbb
movs
adc
sbb
jns
mov
popf
sbb
test
xchg
stos
inc
cmp
sub
js
jmp
sar
(bad)
adc
mov
mov
dec
add
xor
sub
or
sbb
sub
add
shr
stos
dec
xchg
test
loope
mov
and
inc
ret
jecxz
andps
adc
mov
push
sub
stos
int
sub
imul
push
push
or
mov
shr
mov
inc
add
test
xor
test
test
fcomp
(bad)
stos
test
ds
lods
mov
test
ins
mov
js
add
pop
adc
iret
or
mov
mov
dec
ret
dec
outs
sub
inc
stos
or
cmp
jo
mov
fwait
(bad)
cs
cmps
sbb
loopne
(bad)
(bad)
jo
pop
jmp
inc
ret
xor
out
pop
dec
loopne
lahf
push
call
popa
dec
xchg
inc
or
xchg
sbb
push
sti
xor
mov
mov
mov
pop
retf
icebp
xor
inc
dec
mov
jno
adc
add
xor
xor
push
and
xor
mov
je
or
mov
(bad)
in
or
xchg
iret
jnp
outs
adc
sub
(bad)
xchg
ror
cmp
push
sbb
imul
mov
jns
xor
ret
sbb
or
leave
ss
mov
out
jg
push
mov
in
pop
sub
and
imul
dec
sbb
or
popf
pop
ins
lea
inc
and
mov
sbb
inc
mov
add
cmp
fs
or
pop
xchg
add
sbb
dec
test
sti
or
in
lahf
mov
retf
(bad)
mov
add
jo
aas
mov
or
lds
xchg
mov
test
or
sbb
test
dec
adc
xlat
jns
or
or
pop
cmp
mov
sbb
xor
adc
add
xchg
mov
cmp
mov
dec
sub
popa
shl
add
push
test
and
daa
and
movs
jno
popa
inc
dec
retf
jg
cs
and
jno
adc
push
test
push
lods
adc
mov
(bad)
sbb
mov
push
or
imul
jno
xchg
push
push
jge
adc
mov
mov
mov
daa
push
je
dec
test
lods
les
popa
jge
adc
dec
lods
add
push
aad
dec
xchg
cwde
inc
xor
xlat
mov
adc
jb
test
ror
add
adc
jge
shl
fisttp
fstp
xlat
iret
enter
aad
adc
add
retf
mov
add
rol
(bad)
retf
or
test
push
test
lods
cwde
or
call
xor
inc
int3
inc
sbb
loopne
loope
mov
test
retf
inc
lods
push
pop
inc
nop
and
dec
inc
pop
daa
leave
add
adc
test
add
retf
std
dec
add
dec
cmp
dec
rcl
and
mov
mov
data16
add
outs
sub
mov
xor
xchg
sub
aas
add
add
push
add
xlat
and
(bad)
sub
xor
les
dec
pop
fwait
inc
xchg
mov
das
cmp
sbb
xchg
fyl2x
test
sub
sbb
cmps
mov
pop
daa
mov
dec
(bad)
pusha
adc
cmp
mov
push
popa
xor
sub
mov
test
sub
mov
xor
jge
scas
pop
fmul
add
jnp
and
xlat
pop
or
dec
add
mov
and
xchg
inc
jbe
sub
sbb
inc
movs
mov
jo
add
mov
in
into
add
inc
movs
sub
cmp
bound
popa
rol
xchg
pop
movs
mov
or
fsubr
xor
(bad)
sti
or
jecxz
xor
call
xchg
add
pop
mov
ret
ja
adc
or
inc
in
xchg
pop
test
aaa
mov
movs
ret
sub
xor
outs
inc
or
mov
adc
cmp
push
or
mov
add
pop
call
jg
mov
sub
push
push
inc
pop
icebp
inc
test
add
imul
add
add
popa
popa
and
pop
or
imul
test
add
sbb
das
test
lods
add
mov
add
aad
mul
adc
or
mul
pop
mov
and
loopne
mov
inc
cmp
ja
add
inc
cwde
je
out
adc
pop
and
and
jae
daa
sahf
xchg
imul
sbb
les
ins
dec
add
sbb
mov
or
rol
cmc
pop
or
scas
mov
pusha
pop
and
xor
cmp
sbb
xlat
ja
inc
and
push
add
paddusw
popa
cmp
jecxz
gs
xor
lods
inc
shr
mov
mov
jecxz
dec
pusha
xchg
push
cmp
test
sub
scas
aas
movs
or
add
mov
stos
mov
dec
out
dec
lods
push
dec
inc
(bad)
sub
stos
push
adc
add
xor
ret
add
jg
add
xor
nop
sub
add
inc
mov
loopne
fwait
sbb
test
lods
dec
inc
push
and
imul
sub
pop
(bad)
iret
mov
pop
test
les
repz
cmp
cmp
test
xor
repz
sub
inc
dec
fwait
cmp
or
outs
or
dec
jecxz
dec
dec
or
rol
pop
or
ja
add
pusha
fcomp
rcr
out
dec
mov
sahf
jno
pop
jmp
xchg
cmp
sbb
fild
retf
(bad)
and
sti
pop
fiadd
and
movs
add
xor
or
xchg
mov
sbb
shl
add
mov
and
addr16
cs
lea
pop
sbb
sub
adc
mov
push
dec
das
add
or
sahf
mov
prefetchwt1
adc
icebp
add
test
inc
pop
cmp
and
add
adc
adc
adc
inc
mov
add
movs
push
sbb
cmp
imul
loop
inc
daa
lods
lahf
pop
mov
sub
mov
mov
jbe
add
inc
jns
sub
mov
push
test
inc
sub
add
(bad)
iret
inc
add
mov
push
popf
arpl
fdivr
add
and
add
out
fiadd
sbb
popa
movs
add
xchg
out
rcl
cmp
retf
fld
mov
cs
in
mov
add
les
mov
test
lahf
mov
jmp
and
mov
mov
imul
xor
pop
daa
in
adc
gs
sbb
xchg
jge
inc
mov
pop
add
adc
or
dec
pop
les
mov
pop
bound
mov
stc
retf
inc
sub
lods
adc
pop
loope
mov
mov
arpl
jmp
or
add
mov
mov
adc
xchg
mov
push
popf
mov
adc
mov
adc
sub
xor
cmp
mov
ror
daa
loopne
jmp
stc
or
mov
fisttp
and
pop
or
and
cmp
mov
pop
pop
mov
jp
stos
jae
adc
enter
xchg
call
sub
lds
cmps
jnp
xor
jge
or
rcr
rcl
xlat
sar
repz
fst
push
cmp
add
daa
ins
int3
xor
js
lds
sti
dec
nop
gs
xlat
jl
or
mov
retf
dec
push
jno
xchg
pop
and
dec
adc
and
imul
jae
push
and
fst
mov
rcl
test
sub
add
inc
or
push
popa
add
mov
inc
and
or
(bad)
sub
mov
add
add
mov
movs
cmp
adc
inc
and
add
lods
mov
add
or
add
ja
xchg
mov
call
jecxz
(bad)
fisubr
fs
mov
test
lods
dec
lods
jmp
test
or
ret
adc
inc
pop
and
xor
cmc
mov
test
adc
pusha
add
xchg
inc
and
jmp
retf
or
shl
inc
xor
sbb
sub
dec
xchg
mov
stos
sub
ror
shl
inc
test
mov
cmp
mov
cmp
mov
adc
mov
rcr
cmp
inc
dec
cmc
mov
stos
jge
sub
in
push
fldcw
adc
add
(bad)
adc
adc
dec
pop
add
lods
mov
add
inc
jmp
(bad)
data16
xchg
pop
sub
inc
mov
arpl
jno
push
ret
xlat
ja
sub
cdq
repz
sbb
xor
dec
push
or
push
add
add
mov
jae
nop
adc
adc
push
test
add
shr
add
(bad)
and
or
push
sbb
sub
scas
push
loop
adc
xchg
nop
lods
rcl
dec
sub
sbb
pop
and
icebp
add
add
adc
jge
es
mov
pop
movs
dec
mov
and
mov
and
add
mov
daa
sti
sbb
jmp
fsub
jp
test
dec
mov
and
gs
ret
pop
aad
imul
enter
lahf
dec
sub
mov
loope
xchg
ret
inc
daa
lock
xor
pop
rcl
pop
daa
jne
in
pop
xchg
and
push
popf
push
add
stos
add
and
mov
xchg
mov
adc
daa
jno
pop
mov
xor
push
les
sbb
ret
in
pop
lea
adc
test
or
adc
xchg
adc
mov
jmp
rol
push
sbb
dec
add
pop
cmps
les
shr
xor
unpckhps
loop
popa
mov
push
add
shr
xor
push
test
jnp
push
xchg
mov
ret
adc
or
and
mov
rcl
mov
add
test
push
add
dec
dec
pop
pop
daa
mov
inc
and
add
mov
push
mov
mov
jae
retf
aam
inc
adc
adc
xchg
addr16
lea
cmp
retf
sbb
movs
dec
out
adc
and
jno
sbb
push
cli
cmp
out
ds
sub
mov
cmp
icebp
add
mov
mov
cmc
(bad)
or
cmp
scas
in
in
jecxz
or
inc
aaa
pop
and
dec
cmc
or
mov
add
xlat
dec
jl
pop
loope
cmp
push
or
test
(bad)
test
dec
and
sbb
(bad)
cmp
jg
les
or
je
loope
dec
jmp
leave
std
push
lods
pop
(bad)
stos
leave
and
aam
sub
movs
pop
mov
xchg
test
add
or
jns
push
nop
cmp
(bad)
dec
mov
sub
stos
pusha
bound
or
and
fadd
sbb
dec
xor
lods
les
emms
pop
mov
mov
or
inc
imul
mov
mov
sub
add
rcr
push
lahf
pop
mov
test
jge
sbb
inc
(bad)
fldcw
test
ret
dec
cmp
(bad)
adc
popa
push
push
pop
and
pushf
adc
add
and
mov
fcomp
mov
add
or
jecxz
or
cmp
retf
das
jmp
jno
sbb
nop
fld
cmp
push
dec
loop
xchg
je
test
xchg
or
xor
push
jbe
sub
add
cmp
test
cmc
and
push
adc
xor
mov
loope
inc
retf
cli
push
lea
sbb
enter
aam
cmp
and
or
xchg
fwait
and
sub
sbb
adc
(bad)
mov
add
stos
xchg
stc
je
add
cmps
inc
pop
inc
mov
mov
dec
dec
inc
and
iret
iret
cs
stos
dec
outs
and
sbb
retf
pop
and
jno
pop
fst
mov
adc
addr16
sub
test
and
pop
(bad)
sbb
loopne
imul
shr
pop
sbb
cwde
xor
shl
fs
cmp
shl
inc
pop
add
dec
jl
les
inc
mov
sbb
push
shl
mov
sbb
mov
mov
cmps
retf
add
je
div
dec
add
add
sub
mov
(bad)
stos
pop
push
jo
add
and
dec
adc
movs
or
aam
jbe
xchg
aaa
push
cmp
les
sub
xlat
mov
jecxz
shl
inc
sbb
adc
nop
and
xor
rol
nop
jmp
mulps
dec
call
inc
adc
jecxz
cdq
test
jnp
mov
sbb
les
mov
xor
je
xchg
inc
xchg
loop
sbb
test
test
outs
xchg
add
push
and
jo
mov
push
ret
fsubr
sar
adc
adc
rol
test
stc
pop
lods
sbb
inc
outs
adc
adc
inc
xor
adc
or
dec
pop
pop
sbb
add
test
sbb
(bad)
sub
sbb
(bad)
mov
call
call
push
sub
cdq
popa
js
cmp
adc
add
inc
lahf
push
adc
std
lahf
pop
rcl
ss
add
sbb
test
xchg
jl
xor
ja
pop
sub
mov
inc
mov
test
mov
or
add
cmp
enter
pop
jb
pop
dec
stos
or
mov
sub
cs
sub
push
neg
fiadd
or
jno
cmps
adc
and
fs
mov
inc
cmp
and
pop
add
or
adc
or
jecxz
movs
or
mov
das
fild
gs
inc
add
xlat
(bad)
icebp
ja
adc
xor
rcr
(bad)
enter
adc
test
and
imul
sbb
test
push
mov
daa
jecxz
lods
fwait
inc
rol
mov
and
fisttp
mov
fcmovnb
or
push
xor
arpl
adc
test
xchg
sub
mov
rcl
add
pop
fild
xor
push
movs
imul
add
xchg
xchg
cmps
sbb
add
(bad)
fs
or
call
sub
xchg
nop
imul
inc
and
(bad)
daa
rol
inc
jmp
lods
aad
add
leave
enter
dec
jmp
jmp
pop
(bad)
mov
mov
push
mov
rol
aam
add
add
ins
out
push
jo
xchg
adc
ins
jbe
clc
popf
pop
loop
(bad)
add
ins
das
xchg
test
repz
sub
mov
cmps
hlt
mov
mov
or
inc
sub
jae
mov
fwait
sub
or
mov
xchg
jno
les
mov
popa
or
inc
or
lods
es
add
mov
scas
or
xor
in
xchg
lods
inc
and
addr16
push
pop
std
sbb
xor
bound
sub
cmps
test
xor
aas
or
pop
imul
or
imul
xor
push
mov
ja
shl
push
sub
sub
sub
les
add
xor
inc
or
jo
jmp
push
lea
mov
mov
add
add
dec
inc
push
pop
pop
pusha
pop
call
das
and
add
dec
add
mov
inc
sub
popf
es
stos
add
popf
in
test
xchg
nop
cmp
jae
inc
and
add
in
clc
inc
test
jns
mov
pop
xor
xchg
in
push
and
mov
sbb
fsub
(bad)
inc
jbe
dec
cmp
pop
push
in
sbb
pop
or
inc
outs
fsubr
fnsave
daa
jbe
add
add
xor
test
data16
or
(bad)
aam
scas
push
nop
and
dec
mov
push
pop
sub
clc
lods
leave
pop
and
sub
inc
dec
and
jmp
xchg
xor
or
ret
add
mov
jns
lea
pop
add
(bad)
stc
mov
pop
or
arpl
inc
inc
add
xor
jmp
inc
cmp
imul
ror
xor
adc
(bad)
mov
shl
pop
adc
add
cmp
xor
shl
jbe
jb
ror
jb
jne
xor
shl
bound
or
add
ds
jne
or
xor
js
sbb
inc
xchg
xchg
inc
bswap
ret
jmp
xchg
gs
push
movs
xor
outs
inc
mov
shl
lods
sub
cmp
ja
loopne
xchg
and
sahf
loop
xor
mov
inc
jns
loopne
mov
outs
push
fstp
(bad)
icebp
add
inc
pop
mov
adc
ins
sbb
adc
pop
or
cmp
cwde
adc
push
mov
pop
rcr
cmps
sbb
popa
xlat
inc
mov
mov
dec
and
sbb
loopne
leave
mov
lea
xlat
shr
bound
or
mov
adc
fld
sub
push
or
aad
add
or
inc
daa
test
test
mov
pop
lods
ror
mov
mov
push
ins
push
sub
adc
test
push
test
outs
sub
xor
push
sbb
and
jg
or
push
pop
movs
imul
ins
and
imul
movs
jge
ja
add
neg
jo
cmps
push
add
cmps
imul
stos
pop
mov
dec
iret
mov
push
xchg
xchg
cmp
test
(bad)
or
shr
aaa
mov
dec
mov
test
dec
sbb
inc
inc
sub
popa
test
and
and
dec
arpl
and
fidiv
mov
fsincos
add
fcmovu
xchg
fadd
(bad)
xor
in
ds
fstp
inc
or
sahf
lods
mov
xchg
pusha
or
xchg
add
jo
jg
cmp
fld
fist
mov
sub
aaa
xlat
loope
gs
sbb
mov
das
mov
in
push
lods
jo
xchg
addr16
pop
and
sbb
sbb
and
outs
or
stos
sub
push
xor
pop
pop
arpl
in
mov
sbb
mov
sti
adc
inc
add
pop
les
push
and
cmp
test
popf
stos
movs
loope
cwde
mov
pop
les
and
lds
sbb
and
adc
pop
push
test
fisttp
sbb
add
dec
rol
pop
das
sbb
xor
push
push
jno
dec
jae
jb
jno
imul
add
test
popf
dec
ret
mov
jg
(bad)
xchg
push
popa
add
or
adc
lea
test
mov
jg
add
pop
sar
dec
jo
or
mov
inc
ss
push
cmp
cmp
out
add
cli
xchg
mov
aaa
push
gs
jo
(bad)
push
mov
pop
pusha
fwait
mov
xor
and
pop
xchg
nop
fst
mov
adc
and
push
lds
add
xor
pop
or
movs
adc
sti
inc
push
mov
pop
mov
adc
xor
popf
popa
xchg
(bad)
and
xor
dec
int3
das
sub
test
popa
xchg
ins
lods
sbb
xor
sbb
stos
ins
loope
sbb
push
(bad)
test
or
add
fadd
mov
mov
lds
or
push
jno
jmp
push
xor
sub
aam
or
ret
xor
or
mov
ja
push
fcom
pop
loope
mov
xor
mov
push
sbb
dec
dec
add
push
test
jb
retf
in
jae
jne
imul
push
sub
jne
pop
retf
xor
movs
add
pop
xchg
xor
add
and
adc
mov
adc
mov
push
pop
dec
ror
retf
push
mov
pop
call
test
push
daa
pop
mov
add
ins
jno
adc
add
adc
in
sbb
push
and
xor
push
sbb
out
mov
adc
jo
and
pop
shl
jno
test
cmps
or
and
arpl
add
sbb
sub
pop
cmp
xor
clc
inc
mov
movs
xor
xor
fcomp
mov
or
adc
(bad)
mov
push
jmp
mov
xchg
dec
mov
dec
mov
add
or
xchg
and
adc
arpl
nop
les
dec
xor
mov
fild
mov
and
stc
lea
add
add
jecxz
adc
mov
int
movs
inc
or
dec
call
call
jne
jne
movs
cdq
inc
js
ja
rcr
popa
push
add
rol
jge
jbe
dec
shl
add
push
pusha
call
add
pop
push
mov
fnstsw
mov
in
add
shl
ror
movs
pop
lods
dec
inc
lods
xor
add
inc
das
into
ret
mov
jno
add
mov
test
cli
xor
sub
sbb
fs
fisttp
push
and
retf
jnp
xchg
mov
add
push
jecxz
mov
or
sbb
push
mov
aam
jge
push
(bad)
dec
sbb
jbe
add
call
xchg
mov
adc
outs
lods
inc
rcr
pop
dec
pop
sub
(bad)
mov
pop
daa
jne
xchg
add
sub
sbb
mov
push
cmp
cmps
xor
inc
adc
add
xchg
int
push
test
adc
aad
sbb
(bad)
add
test
add
adc
dec
or
inc
call
or
test
inc
dec
mov
shr
sti
icebp
dec
popa
popf
inc
pop
fld
shl
add
xor
sub
jb
ja
ror
jns
jnp
xor
shl
dec
cmp
and
xor
rcr
adc
and
dec
shl
jp
dec
jae
cs
jnp
pop
call
scas
mov
push
sbb
inc
ja
pusha
aad
outs
sbb
test
fbstp
jbe
dec
or
add
imul
daa
pop
sbb
outs
loope
test
push
iret
mov
adc
out
add
in
fistp
push
out
dec
ins
mov
bound
aaa
imul
xchg
xor
scas
pop
loopne
add
in
sbb
mov
cli
movs
inc
adc
loopne
add
call
(bad)
ins
loopne
add
pop
loopne
xchg
or
mov
xor
mov
outs
mov
lea
aas
inc
loope
loope
mov
pop
add
sub
sbb
test
pop
and
xchg
adc
lods
xchg
jmp
pop
test
add
adc
xchg
mov
xchg
xchg
mov
adc
sub
add
inc
xchg
xlat
jge
add
adc
jge
mov
fnstcw
test
inc
mov
inc
movs
add
dec
mov
or
mov
xchg
cmp
dec
fwait
popf
add
add
add
imul
cmp
jg
cmps
imul
sbb
or
dec
imul
imul
xor
sub
sbb
pop
pop
test
cmp
(bad)
mov
loopne
cmc
adc
mov
lea
daa
repz
add
push
or
test
retf
xor
loop
mov
or
call
add
fidiv
movs
imul
or
pcmpgtb
inc
jnp
outs
sub
test
add
dec
sub
mov
cwde
or
outs
sub
jge
or
pop
lahf
xor
sbb
leave
lods
nop
rol
and
pop
mov
jmp
or
mov
leave
test
jmp
fwait
jo
sbb
mov
aam
add
addr16
and
or
aaa
lea
sub
test
popa
pusha
loope
sub
sub
test
push
push
or
and
sti
mov
daa
and
mov
add
and
mov
and
mov
ret
inc
call
data16
jp
call
cmps
dec
or
lahf
add
or
push
add
call
aas
and
imul
adc
mov
test
(bad)
jecxz
lods
dec
and
mov
cmp
icebp
pop
ja
outs
sbb
test
inc
or
xchg
xchg
xor
jge
lahf
jmp
mov
xor
xor
fld
jecxz
ja
fcom
add
inc
add
fisub
out
fld
(bad)
add
add
(bad)
mov
adc
pop
or
jbe
fadd
out
test
and
sub
ret
inc
or
sub
loope
mov
dec
push
or
mov
cmp
cmp
mov
jno
or
test
sti
(bad)
lds
loope
test
cmovo
jae
mov
je
ror
xchg
add
push
bound
mov
test
push
mov
lea
dec
mov
mov
nop
jge
sub
gs
lahf
dec
add
xor
and
fsub
icebp
adc
dec
xor
nop
cmps
sbb
or
pusha
call
push
add
add
inc
mov
jl
xchg
cmps
imul
shl
adc
daa
sub
add
rcr
xchg
add
data16
es
cmp
lea
mov
in
mov
jmp
add
push
add
pop
cmp
lahf
neg
test
or
mov
jge
mov
cmp
jge
dec
and
mov
xor
sbb
fild
pop
inc
xor
inc
dec
fs
sbb
adc
adc
sub
mov
pop
dec
sbb
fucomip
test
(bad)
jo
in
push
or
stos
add
ss
pop
mov
les
mov
cmc
jecxz
mov
push
xchg
fcmovnb
jge
or
push
movs
lahf
adc
test
les
mov
stos
aad
xchg
or
push
pop
loope
push
sbb
ins
daa
xchg
pusha
adc
push
pop
dec
inc
and
add
movs
stos
test
dec
adc
adc
xor
mov
push
and
inc
popf
fadd
xor
jnp
add
cld
ror
sbb
scas
dec
cmps
imul
mov
add
call
xor
shl
sub
sub
push
push
xor
add
add
sbb
cmp
push
adc
sub
and
xchg
(bad)
lods
ds
cmp
dec
adc
out
adc
and
mov
push
jl
pop
cdq
cmps
cmps
add
add
pop
sub
xor
test
sahf
mov
xor
mov
lods
jae
loopne
(bad)
mov
xor
bound
cmc
repz
cmovg
xlat
add
push
adc
js
adc
mov
inc
and
outs
dec
hlt
xor
xchg
test
add
lods
adc
out
outs
test
mov
sbb
leave
call
mov
test
and
push
xchg
or
sbb
adc
xchg
dec
pushf
push
mov
xchg
or
(bad)
or
loope
adc
xor
push
(bad)
rol
sub
inc
pop
aad
call
jo
gs
pusha
mov
and
push
xchg
push
xchg
mov
inc
call
cmps
imul
ds
or
arpl
imul
cmps
dec
or
mov
xor
sub
sbb
scas
fisubr
add
push
add
mov
es
shl
add
ret
mov
cmp
sub
adc
add
sub
or
(bad)
adc
dec
mov
ds
inc
push
and
(bad)
and
pop
pop
repz
add
sbb
adc
dec
add
sbb
mov
push
nop
cmp
adc
sub
repz
add
pop
add
(bad)
mov
add
or
jno
dec
loope
xchg
mov
in
test
jae
push
push
push
cmp
inc
sbb
loope
sbb
inc
sbb
cmc
inc
sbb
sbb
or
iret
dec
int3
xchg
ret
and
pop
xor
push
mov
(bad)
int3
dec
pop
jnp
mov
dec
lods
pop
shl
test
and
or
xor
sub
shr
inc
sub
pop
test
add
(bad)
sti
pushf
inc
or
out
addr16
or
adc
adc
sub
loopne
sbb
jbe
mov
mov
pop
outs
cmp
imul
add
stc
ds
movs
test
add
jge
cmps
and
add
or
sub
add
fld
xor
(bad)
aad
das
cld
fild
xor
sub
fiadd
sub
add
inc
sub
bound
mov
test
icebp
xlat
ins
sub
fiadd
sbb
add
dec
add
adc
sub
loopne
lahf
cmp
add
pop
cwde
cmps
pop
frstor
push
or
(bad)
or
fcom
push
or
imul
fistp
mov
or
mov
(bad)
dec
hlt
and
add
adc
ins
loop
sbb
push
xchg
mov
gs
sub
retf
aaa
rol
or
dec
mov
sbb
jbe
cmc
scas
adc
xor
sbb
cdq
and
or
add
add
mov
jne
sub
pop
add
mov
adc
cdq
or
xchg
int
sub
retf
xchg
sub
add
add
mov
sbb
and
xor
mov
dec
inc
xor
call
data16
xchg
cmps
xchg
and
or
jbe
push
sar
test
inc
adc
sbb
add
leave
add
fsub
add
iret
add
mov
mov
rol
rol
inc
add
and
xchg
adc
xchg
xchg
popa
pop
jmp
cli
push
sbb
(bad)
jne
pop
test
mov
outs
mov
and
and
push
ja
add
xchg
ja
test
sub
or
xor
test
mov
mov
and
ja
inc
cs
and
sbb
xor
or
rol
inc
jbe
pop
sub
mov
test
daa
jno
mov
hlt
push
cmps
ror
test
js
aad
mov
inc
test
and
or
xchg
or
mov
add
inc
lds
pop
daa
test
add
mov
xor
dec
(bad)
dec
and
inc
sub
sbb
inc
dec
xchg
inc
test
adc
inc
sub
sub
push
pop
adc
adc
call
test
mov
dec
inc
mov
inc
fcos
cmp
cmp
call
adc
int
add
xchg
cmps
imul
mov
add
sub
ror
sub
and
dec
lds
lods
add
jmp
ss
add
lock
repz
hlt
add
repnz
out
sub
add
fcos
jmp
add
int3
add
mov
pop
test
adc
add
dec
add
arpl
sbb
push
pusha
popf
ror
dec
(bad)
test
aad
add
ins
add
jp
jb
rcl
imul
adc
adc
cmp
mov
loope
ret
leave
add
sub
fmul
nop
in
adc
mov
adc
cli
cmp
out
sbb
pop
and
mov
jmp
adc
xor
sbb
push
dec
or
or
jo
hlt
pmulhw
pop
mov
test
or
add
xchg
ret
(bad)
scas
adc
test
cmp
cmp
inc
push
cs
mov
in
int
sti
or
lods
sub
(bad)
in
or
jg
dec
stos
mov
aas
mov
cmps
add
push
xchg
mov
movs
ja
stos
mov
xchg
sub
bound
and
push
adc
inc
sub
pop
xor
inc
adc
push
dec
and
sub
jne
add
mov
and
call
add
sldt
add
add
xchg
add
push
jp
mov
xor
add
sub
xchg
or
arpl
fiadd
jae
push
inc
add
adc
inc
aas
inc
cs
test
inc
xor
dec
add
daa
adc
mov
bound
add
stos
adc
imul
leave
xchg
ret
xor
ja
or
xchg
jno
sub
xchg
lea
mov
xor
sub
adc
add
mov
test
fld
out
ja
ret
pop
cmps
add
cmp
test
adc
rcr
ret
call
add
test
inc
xchg
jg
inc
push
push
add
pop
mov
int
inc
mov
icebp
pop
xlat
js
mov
cmp
or
mov
adc
add
mov
cmps
add
dec
stos
mov
mov
push
mov
pop
call
(bad)
cmp
test
mov
dec
popf
mov
and
inc
rcl
push
mov
rol
add
outs
inc
test
shl
push
rcr
add
call
add
push
test
and
pop
shr
add
pop
pop
es
enter
adc
icebp
cmp
sub
adc
jg
push
in
add
sub
imul
cmps
xchg
dec
shl
adc
pop
sub
jne
jnp
movs
add
fild
add
(bad)
cmp
jecxz
ss
cmp
add
mov
xchg
ins
and
sbb
ret
xor
pop
push
mov
inc
sub
popa
xor
adc
add
sbb
cmp
adc
push
jo
mov
jmp
xchg
test
jmp
nop
imul
xlat
inc
jns
sbb
cmc
shr
or
cdq
sub
and
mov
pop
test
dec
and
inc
xchg
adc
imul
pusha
call
xchg
jno
jmp
sbb
retf
mov
aas
jg
mov
ins
mov
ins
ret
cs
(bad)
cs
mov
jae
ror
fidivr
mov
fucom
lea
push
and
(bad)
(bad)
jg
dec
outs
mov
pop
mov
jge
mov
xor
add
adc
fwait
fs
xchg
adc
repz
jmp
test
push
jo
push
je
ins
xor
cmps
lods
or
push
jae
dec
or
arpl
mov
mov
cmp
mov
push
push
sbb
(bad)
and
sbb
adc
xlat
push
test
adc
push
xor
mov
daa
adc
iret
or
or
in
dec
popa
adc
outs
test
movs
push
lods
xor
stos
xor
xor
ss
push
or
add
add
and
add
imul
into
xor
sub
cmps
imul
inc
xor
or
add
pop
sti
aas
pop
mov
jne
dec
dec
push
inc
add
data16
fwait
inc
cmp
add
inc
add
cmp
mov
inc
pop
test
xlat
fild
das
jge
add
sbb
iret
push
add
dec
ins
fsub
test
mov
inc
daa
add
mov
cmps
cmps
imul
mov
lock
shr
inc
xlat
add
add
out
jno
pop
ret
popa
mov
ja
shl
pop
leave
mov
pop
inc
aam
add
mov
mov
into
or
int
aas
iret
add
fcmovu
push
repnz
retf
pop
jp
scas
add
cmps
mov
mov
dec
add
xchg
popf
mov
ds
sbb
add
and
xchg
jo
pop
ret
and
test
add
pop
dec
pusha
pusha
xor
mov
ficomp
mov
dec
mov
retf
into
cli
jnp
push
rcl
ja
mov
dec
or
aaa
pop
popa
inc
mov
in
pop
xor
pusha
rol
or
popa
and
pusha
test
add
inc
jo
test
shr
adc
mov
cmp
rcr
enter
add
push
mov
add
rcl
test
xor
mov
add
mov
mov
add
xor
add
cmp
(bad)
add
fild
dec
cli
call
push
mov
daa
mov
sbb
outs
or
out
inc
add
add
jb
sbb
add
ins
add
inc
dec
sbb
add
inc
dec
test
rol
push
lea
add
outs
ret
pop
mov
mov
adc
imul
xor
es
xchg
add
dec
and
and
and
lods
shl
fcomp
add
inc
gs
out
dec
xor
and
or
pop
pop
or
stos
or
iret
jno
xchg
mov
rol
inc
rol
shl
loope
leave
mov
jl
push
clc
mov
dec
into
out
int3
idiv
add
sbb
sahf
cmps
sub
push
ins
rcl
and
into
fild
or
ja
int
inc
rcl
ret
je
nop
add
dec
pop
add
pusha
inc
push
and
mov
xchg
inc
and
mov
popa
push
shr
sbb
scas
add
dec
or
(bad)
stos
push
push
pop
xchg
inc
test
fist
les
add
add
xor
mov
push
cmps
xchg
call
xchg
xor
nop
cmps
imul
add
sbb
inc
cmps
pop
inc
es
dec
pop
pushf
dec
test
jmp
jmp
fbld
dec
dec
sbb
add
mov
push
xchg
pop
pop
add
mov
xchg
(bad)
fld
adc
ret
mov
add
add
push
add
dec
xor
into
int3
mov
lds
pop
retf
sub
add
shl
bound
and
mov
or
rol
dec
add
arpl
out
pop
inc
add
ds
loop
fs
aam
loop
gs
dec
sti
add
pop
add
shl
ins
pop
cld
dec
das
jnp
shr
jge
push
jge
add
add
retf
xor
add
cmp
retf
jo
call
repnz
sub
add
xchg
pop
jne
and
dec
xchg
jmp
inc
or
add
sti
pop
ja
push
daa
or
adc
imul
mov
xor
adc
rcl
dec
add
cmp
add
lods
sbb
mov
aad
mov
shr
xchg
adc
jge
and
push
or
sbb
fs
dec
jnp
mov
pop
add
call
call
add
sub
ret
xor
shl
sbb
inc
adc
sub
adc
pusha
jmp
cld
(bad)
fsubrp
dec
aas
(bad)
mov
inc
pop
dec
add
mov
icebp
xor
add
hlt
iret
add
or
add
xor
adc
xor
and
inc
add
jbe
mov
jecxz
movs
or
cwde
add
outs
imul
xchg
inc
jb
add
retf
fcmovbe
jae
shl
add
(bad)
xor
imul
push
sbb
pop
add
push
and
add
mov
cmp
shr
ja
fiadd
pop
jl
mov
adc
inc
fldcw
pop
jnp
movs
add
imul
mov
xor
aas
or
ret
ror
(bad)
push
jae
fdiv
cmp
(bad)
xor
enter
bound
or
and
and
mov
mov
cmc
movs
sbb
test
push
fwait
sbb
mov
mov
aaa
pop
mov
movs
mov
sub
pop
pop
push
imul
adc
or
icebp
cmps
add
(bad)
cmp
test
data16
mov
ja
je
push
imul
adc
shl
lds
sub
icebp
mov
fwait
add
arpl
aas
cli
pushf
mov
and
add
push
sub
xor
add
jmp
inc
in
cmp
cmps
imul
mov
xor
ss
jg
add
rol
mov
test
addr16
ins
mov
sbb
or
dec
and
push
popa
movs
push
pop
fwait
add
xor
and
jbe
dec
call
inc
add
adc
retf
out
push
cs
les
mov
jne
cmps
add
fnstsw
mov
mov
and
or
and
add
sbb
aaa
stc
jle
jge
loopne
loope
xchg
idiv
inc
fisub
sahf
test
pop
cmp
mov
add
or
jg
les
pop
shl
pop
les
pop
je
sahf
inc
pusha
push
aad
cld
(bad)
scas
(bad)
das
xor
leave
xor
outs
mov
add
ret
xchg
test
popa
popf
add
and
inc
(bad)
lods
sub
add
sbb
ja
push
push
push
inc
or
xchg
add
les
dec
sub
nop
fistp
push
sub
in
mov
dec
pop
mov
inc
and
dec
cmp
dec
jnp
mov
push
rol
or
dec
shl
popf
pushf
mov
cmp
or
(bad)
fistp
add
and
dec
icebp
out
cmp
lods
xor
jnp
cld
std
call
push
push
cmps
ja
outs
inc
fild
pop
stc
sbb
test
loope
test
add
cmp
cmp
ss
add
shl
push
xor
pop
and
pop
xchg
retf
sbb
cmp
mov
add
add
pop
rcr
xor
pop
add
dec
and
push
inc
cwde
out
pop
dec
add
mov
inc
sbb
add
imul
cdq
cmps
imul
les
add
add
daa
jl
add
test
xor
sbb
dec
inc
popa
das
add
sbb
pop
and
aad
pop
nop
sub
ficomp
aad
lahf
add
scas
sub
inc
out
in
std
and
inc
jecxz
addr16
addr16
adc
vhsubps
aad
dec
shr
mov
into
sub
push
or
xor
mov
pop
jmp
pusha
enter
push
les
ret
mov
lods
lods
fwait
add
push
or
or
push
mov
inc
add
push
enter
pusha
jmp
push
retf
xchg
mov
mov
jmp
ins
push
push
pop
rol
mov
mov
pop
inc
mov
fst
add
stos
and
jle
inc
lea
pusha
add
js
mov
ret
retf
add
xor
out
(bad)
xlat
add
repnz
or
jns
push
cmp
inc
call
out
pop
sub
or
das
add
jae
call
add
cmps
sbb
inc
sti
js
add
rol
mov
add
add
bound
popa
mov
sub
jno
add
add
xchg
and
lods
shl
add
or
pushf
push
jae
mov
es
mov
add
mov
adc
xor
je
add
push
int3
xchg
fs
and
dec
and
mov
and
or
xchg
jbe
add
and
in
add
pop
xchg
push
cmp
jnp
sar
add
adc
jg
imul
inc
xor
call
rcl
mov
jle
xchg
fadd
les
das
jg
(bad)
sub
adc
pushf
push
jae
xchg
pusha
leave
adc
and
test
shl
inc
adc
pop
aaa
or
pusha
adc
push
inc
sub
add
test
add
and
cmp
pusha
push
dec
stos
lods
or
inc
imul
lods
sbb
push
or
pop
add
mov
jne
rcr
pcmpgtd
pop
mov
shl
mov
xor
add
mov
sbb
fild
or
rcl
jg
pop
sub
cmc
stc
dec
(bad)
pop
pop
inc
push
add
fcom
add
lods
xor
sahf
xchg
dec
sahf
mov
or
cld
das
ret
add
cmp
shr
(bad)
add
leave
mov
fldenv
int3
xor
xor
push
lock
xchg
sub
aas
lahf
push
loop
jmp
imul
cmps
pop
add
xchg
mov
aad
xlat
(bad)
rol
or
add
fcom
in
dec
data16
sbb
dec
mov
xchg
and
out
jo
xor
outs
sub
and
mov
shl
sar
push
clc
push
adc
stos
clc
call
out
add
out
add
jmp
dec
in
add
xchg
leave
or
lea
pop
js
add
dec
add
mov
push
jl
js
xchg
pop
jne
(bad)
bound
pop
mov
popa
retf
mov
cld
int3
sub
cs
add
adc
in
arpl
sub
ja
mov
and
test
sti
push
add
xchg
mov
mov
pop
lods
stos
mov
mov
adc
dec
cmp
inc
daa
ins
or
mov
lea
ja
jno
cs
scas
iret
adc
ret
test
repnz
xor
mov
mov
add
mov
xor
cmps
nop
add
test
test
(bad)
pop
movs
pop
sub
push
cmc
js
lods
sbb
mov
pop
add
mov
dec
cld
sbb
retf
(bad)
cmp
sbb
add
dec
call
shl
cwde
mov
pusha
sub
dec
mov
and
sub
add
test
add
xor
test
ins
loop
inc
pop
leave
xor
ins
movs
int3
test
mov
pop
pop
fadd
loopne
lea
push
or
frstor
out
dec
cli
and
imul
xchg
imul
popa
call
stos
mov
add
cwde
iret
loopne
clc
sub
adc
add
loop
shl
shl
arpl
inc
add
icebp
add
lods
(bad)
cdq
scas
icebp
add
in
mov
pop
mov
xchg
fimul
shl
iret
adc
xchg
pop
jbe
scas
inc
jl
jecxz
pusha
add
push
xor
sub
lock
adc
out
push
sub
dec
cdq
mov
add
enter
pop
stos
or
sub
ins
mov
mov
test
pop
cmp
aas
mov
push
retf
ins
movs
and
(bad)
in
retf
sbb
xor
and
pop
mov
push
adc
mov
pop
paddw
ror
daa
jmp
sub
mov
mov
pop
push
je
or
sbb
lock
inc
fisttp
add
popa
sub
imul
pop
push
add
stos
jp
add
dec
cmp
mov
rol
push
sub
es
mov
mov
jg
jo
rcr
push
add
dec
shl
add
dec
jae
imul
add
cmc
mov
sub
daa
sahf
add
dec
pop
shr
sub
push
add
dec
xor
scas
ss
into
mov
mov
call
pop
outs
xor
cmps
push
mov
jbe
xchg
push
dec
lahf
mov
push
imul
jmp
mov
stc
xor
test
mov
add
hlt
jge
sbb
sbb
jmp
jns
push
xchg
in
js
imul
(bad)
sbb
dec
popa
pusha
or
leave
(bad)
shl
sub
add
mov
add
daa
jne
gs
dec
arpl
add
or
xchg
jne
sub
push
sbb
xor
add
adc
das
push
jo
sar
sbb
add
inc
inc
and
sub
ins
repz
imul
aas
mov
adc
stos
mov
add
cwde
inc
call
lds
xor
cmp
clc
dec
mov
clc
clc
sti
(bad)
cmp
pop
mov
sub
stos
fst
sbb
in
out
jne
ins
lahf
(bad)
push
add
stc
dec
in
inc
iret
ror
add
jp
mov
and
push
dec
aas
or
jmp
and
add
adc
mov
pop
xchg
sub
rol
hlt
iret
call
sti
es
add
adc
ss
add
fiadd
nop
sub
add
pop
mov
xchg
sbb
or
loop
clc
xchg
fnstsw
shl
movhps
sub
dec
sbb
inc
inc
outs
mov
inc
mov
movs
scas
add
push
lods
push
inc
dec
sti
add
stc
jo
cmp
lds
mov
or
add
cmp
lock
(bad)
es
int
xchg
add
imul
shl
sar
sub
shl
stos
fstp
test
mov
stos
mov
push
inc
ror
push
fst
call
push
push
jmp
lds
and
pop
mov
and
add
adc
xor
pop
add
cwde
add
cmp
cmp
mov
mov
cmp
stos
sub
(bad)
sbb
icebp
jmp
rcr
cmp
jae
pop
sahf
or
cmp
dec
(bad)
(bad)
clc
cli
push
jl
pop
add
pop
push
dec
(bad)
add
rol
dec
fiadd
lods
add
int3
pop
test
xor
shl
in
xchg
xor
imul
add
or
mov
addr16
ror
add
loopne
xor
sbb
ss
add
fbstp
dec
xchg
sar
cmp
and
sbb
add
sbb
daa
cli
sti
mov
xchg
xor
push
imul
cmp
or
stc
sub
inc
fcomp
xor
add
movs
pop
lds
xor
imul
arpl
ss
mov
jmp
jp
xchg
dec
push
out
add
add
and
add
fst
aas
pusha
or
dec
sbb
arpl
jno
cmp
xor
xchg
cwde
pop
icebp
je
inc
cmp
stos
adc
inc
mov
mov
sub
test
sub
pop
mov
adc
mov
add
aam
imul
add
mov
dec
or
xchg
out
xor
test
jno
push
sahf
adc
dec
ror
rol
jecxz
pusha
ins
movs
xor
and
cld
pop
push
mov
fucomi
call
cmp
add
push
pop
arpl
xor
or
and
mov
clc
jmp
popa
test
call
and
aad
enter
ret
lahf
ss
aad
fisub
std
add
mov
inc
loop
fwait
and
or
mov
mov
push
ror
stos
cmps
xor
sbb
sbb
(bad)
add
mov
inc
sbb
shl
lock
cmp
jns
jno
and
retf
inc
daa
add
xchg
arpl
popa
and
dec
mov
movs
imul
add
mov
bound
inc
loop
xchg
add
adc
loop
inc
rol
mov
push
xchg
pop
jp
sbb
add
mov
and
mov
test
mov
sub
xor
mov
test
dec
mov
test
inc
or
cdq
inc
mov
rol
and
sub
pop
add
push
add
(bad)
fwait
adc
and
imul
or
cmps
lea
imul
xchg
imul
cmps
xchg
or
dec
xchg
mov
iret
fild
add
mov
dec
loopne
call
and
mov
add
pop
push
(bad)
sbb
mov
(bad)
mov
dec
fs
add
in
add
rcr
add
pushaw
aam
nop
mov
pop
cmp
mov
inc
dec
xchg
push
add
imul
add
mov
mov
jmp
jmp
or
add
loope
(bad)
cmp
mov
sti
fsubr
and
add
movs
add
fldenv
dec
call
mov
xchg
test
int
jge
das
add
mov
lahf
aam
ret
sub
(bad)
loope
jle
mov
ins
nop
loop
xchg
cmps
aad
add
fld
dec
mov
sbb
pop
jnp
add
adc
jmp
xor
hlt
push
ja
mov
jle
or
sub
les
mov
cmp
xchg
inc
xchg
(bad)
and
scas
pusha
cmps
mov
add
test
add
imul
mov
or
push
or
outs
and
add
xchg
add
cwde
arpl
xchg
add
xchg
or
and
xor
add
push
cs
retf
je
bound
jae
or
repnz
out
mov
(bad)
pusha
loopne
jb
shl
mov
call
outs
add
add
jge
mov
(bad)
ss
shl
call
out
push
je
ins
movs
stc
out
add
pop
iret
ror
mov
js
fld
sub
push
icebp
sbb
fcmovnb
push
add
add
jno
retf
inc
dec
int3
mov
xor
aam
fs
ja
sbb
mov
dec
sti
or
add
(bad)
push
or
xor
mov
add
mov
push
inc
inc
add
loope
push
push
xchg
or
(bad)
push
clc
cdq
lods
aad
add
sub
xor
loopne
pop
add
loope
add
dec
sub
push
call
fiadd
push
repnz
jl
adc
or
sub
cwde
push
mov
out
xchg
jecxz
mov
xchg
xchg
dec
aaa
add
mov
push
mov
arpl
shl
adc
or
and
and
ror
add
push
and
shl
rol
mov
or
xor
in
rcr
inc
sar
pop
adc
das
cmp
popa
aaa
or
add
pop
shl
xchg
mov
and
enter
and
jbe
(bad)
loopne
cmp
in
call
cmp
add
add
clc
or
jg
sub
stos
jl
aad
jmp
out
call
(bad)
lods
pop
arpl
add
pop
iret
mov
std
push
add
fadd
xor
lods
retf
stc
or
pushf
shl
(bad)
je
loopne
or
inc
ins
add
sar
or
(bad)
daa
icebp
fs
cmp
sbb
inc
ror
mov
je
shl
sub
dec
mov
add
(bad)
pop
dec
push
mov
pop
pop
lea
add
inc
xchg
loop
adc
xchg
daa
xchg
into
adc
mov
fstp
push
push
push
call
adc
jge
dec
xor
cmp
pop
call
push
js
fmul
xor
and
xbegin
pop
xor
sar
mov
mov
mov
or
and
mov
adc
test
mov
adc
mov
mov
sub
add
mov
ror
sbb
push
fld
cmp
pop
scas
call
push
xchg
lea
xchg
imul
(bad)
and
and
pop
rol
movs
xor
(bad)
jmp
mov
fist
push
push
pop
dec
xor
stos
jbe
mov
sti
jmp
movs
scas
cld
fwait
js
repnz
add
fild
xor
test
les
jnp
pop
rol
cmp
add
imul
or
movs
outs
imul
mov
fcmovbe
and
pop
add
(bad)
fld
fcmovnbe
fcmovnu
cmp
je
popa
call
in
test
xchg
test
dec
jmp
mov
mov
dec
ss
mov
xchg
push
dec
fnclex
int
enter
xchg
lock
xor
add
hlt
sysret
push
inc
clc
pop
jge
xchg
les
les
and
dec
jmp
and
rdtsc
arpl
add
pop
jmp
jmp
xchg
mov
rol
adc
stos
mov
add
dec
jmp
mov
shl
dec
and
adc
and
xor
xchg
adc
test
and
loop
xor
pop
test
pushf
cmps
push
pop
fld
lock
push
jne
movs
inc
int3
add
and
sub
xor
cmp
cwde
(bad)
mov
lahf
mov
jecxz
pop
sbb
sbb
cmps
jg
stos
pop
mov
loop
cld
inc
sub
xor
dec
and
jg
cmp
jmp
ja
ror
jge
test
fstp
pusha
push
sub
popa
sub
mov
into
add
fnstenv
push
add
inc
xor
mov
xchg
dec
mov
in
neg
or
mov
das
les
rdtsc
and
add
cdq
inc
call
mov
cmps
mov
repz
xor
cwde
div
mov
int
xor
ret
and
jecxz
shl
aaa
cmp
dec
stos
xchg
pop
or
sbb
stos
(bad)
leave
cmps
lock
inc
ffreep
sbb
sbb
lahf
lock
mov
xor
mov
add
adc
and
mov
iret
ins
rcr
ret
cmp
pop
jp
fmul
lahf
data16
and
push
xchg
xor
sub
pop
add
add
mov
xchg
inc
test
and
adc
push
mov
sub
adc
aad
iret
push
push
adc
sub
add
and
fucom
add
mov
fwait
rcl
xor
es
add
add
add
or
fcom
sahf
cmp
mov
ja
add
js
jns
xchg
leave
xor
add
aad
push
sub
imul
jno
and
mov
add
retf
add
lea
shl
push
sub
and
(bad)
mov
xchg
bound
or
mov
dec
neg
adc
test
dec
and
add
lds
lods
ds
mov
into
shl
add
mov
mov
out
repnz
adc
jg
loope
inc
ja
movs
shr
sbb
shl
sub
and
imul
sbb
add
push
and
jmp
xor
dec
jno
mov
js
lods
xchg
dec
lock
(bad)
(bad)
or
shr
inc
fisttp
pop
sbb
adc
clc
dec
add
pop
mov
test
or
add
jmp
mov
lahf
dec
sbb
jmp
or
dec
popa
adc
outs
sbb
inc
or
pop
fadd
outs
scas
inc
pop
mov
rcr
add
popf
mov
dec
inc
or
add
enter
jg
sbb
sbb
jbe
cmp
mov
dec
jmp
jle
jg
les
dec
add
xor
sbb
inc
xchg
jno
add
adc
call
add
add
sbb
or
xor
repnz
loope
push
bound
pusha
push
pop
data16
dec
ror
fmul
mov
ficom
xchg
jle
mov
dec
(bad)
loopne
or
pop
sbb
push
(bad)
and
shl
push
xchg
add
add
(bad)
dec
shl
or
xor
shl
push
inc
mov
int3
sbb
jne
inc
mov
or
jmp
stos
(bad)
push
jmp
add
dec
loope
mov
mov
and
jo
lods
mov
cld
pop
jge
into
and
outs
dec
in
pop
mov
adc
jns
jg
adc
add
adc
std
dec
jno
pop
(bad)
scas
xabort
mov
inc
and
push
sub
out
sub
or
pop
or
jne
add
add
add
adc
mov
inc
push
or
adc
adc
out
add
adc
adc
mov
aad
add
add
mov
dec
movs
mov
mov
or
cs
cmps
push
push
xchg
and
mov
(bad)
sti
std
inc
loope
call
aam
movs
xor
jae
stc
pop
ficomp
pop
or
xchg
(bad)
mov
aaa
inc
in
mov
jne
add
add
shl
lds
pop
dec
(bad)
add
ins
cmp
and
add
push
cwde
jno
xchg
and
jge
push
mov
jae
push
cmp
popa
add
jl
(bad)
adc
mov
push
xor
add
and
pop
lahf
fild
shl
xchg
xor
inc
add
cs
jnp
mov
fild
test
or
or
push
mov
movs
or
push
mov
pushf
adc
in
cli
push
pop
push
add
and
(bad)
adc
xchg
test
jnp
test
cwde
in
lock
inc
dec
bound
aam
xor
xor
add
add
jl
ret
push
js
or
mov
add
xchg
and
mov
cmp
dec
(bad)
pop
enter
adc
test
push
movs
push
nop
ret
mov
inc
rcl
lods
mov
dec
adc
mov
movs
push
daa
iret
rol
mov
sbb
aaa
inc
xchg
or
sbb
push
sub
lods
lods
stos
xor
adc
into
mov
cmps
adc
shl
dec
inc
push
push
push
(bad)
fild
in
xchg
(bad)
fsubr
jecxz
add
and
(bad)
frstor
push
adc
add
hlt
jmp
mov
dec
xchg
add
loopne
cld
add
add
jl
add
push
xor
pop
add
aad
test
sbb
iret
es
add
and
stos
jecxz
bound
mov
iret
int
pop
add
add
mov
cmps
jno
dec
shl
(bad)
dec
add
mov
imul
cmps
imul
leave
imul
imul
xchg
mov
fld
loop
and
adc
ror
das
(bad)
mov
mov
call
test
sti
xor
jns
push
js
xchg
mov
push
fld
fadd
jle
add
imul
scas
add
add
push
jns
stos
rol
add
movs
sahf
sbb
and
popa
add
es
ins
dec
and
mov
stos
scas
xor
pusha
lods
rol
push
or
xchg
cmp
adc
add
jg
push
push
cmp
stos
adc
lds
nop
push
push
inc
pop
push
pusha
inc
pop
arpl
mov
sub
adc
push
sbb
push
pop
imul
adc
xor
movs
add
cdq
jo
sbb
push
cmp
xor
js
or
inc
pop
mov
aaa
add
(bad)
add
sbb
retf
sti
daa
xchg
dec
push
mov
popf
push
or
push
xchg
add
cli
jg
add
add
ja
add
sub
add
xor
retf
xchg
je
jno
popa
daa
push
xor
pop
adc
icebp
test
inc
js
add
xor
test
sbb
add
cmp
add
adc
inc
cmovae
call
mov
in
cmps
sbb
add
jnp
dec
add
mov
add
push
mov
shl
or
add
shl
mov
jmp
or
test
dec
nop
movs
shl
xchg
stos
xor
mov
scas
sbb
mov
pop
imul
sub
xchg
or
xor
or
add
push
and
push
jnp
cwde
popa
loop
lock
(bad)
fcomp
sub
sar
outs
adc
push
and
les
or
inc
inc
test
mov
xor
dec
lea
mov
add
dec
or
adc
aaa
push
dec
ror
and
mov
adc
cmp
dec
inc
mov
add
add
pushf
pop
add
movs
rsqrtps
cmp
adc
in
lock
mov
jp
sub
inc
stos
ins
in
mov
nop
add
dec
push
or
daa
mov
loopne
sar
imul
sub
adc
fld
dec
jns
cwde
add
arpl
sbb
lods
rcl
sbb
add
dec
mov
and
add
les
push
mov
out
ret
xor
jns
call
loopne
xchg
imul
movs
add
imul
sbb
cmps
sub
sub
add
xor
sbb
sbb
push
add
cmps
out
dec
icebp
sar
dec
pushf
cmc
ret
add
and
movs
xor
loopne
stos
(bad)
and
or
xchg
cs
adc
movs
inc
(bad)
dec
xchg
add
jg
mov
loope
mov
dec
(bad)
cmp
or
call
xor
rcr
int3
adc
pop
aam
sar
jne
test
mov
xchg
call
les
xchg
pop
adc
stc
dec
call
jo
add
es
aam
gs
shr
add
adc
sbb
jmp
inc
inc
pusha
dec
push
dec
push
test
outs
dec
or
aaa
sti
mov
rcl
add
mov
stos
jns
cmps
lahf
(bad)
aam
xchg
shl
push
add
push
(bad)
sub
and
xchg
jmp
call
loopne
loop
add
xchg
push
fadd
or
ja
pop
shr
xchg
clc
ds
mov
jmp
cdq
jmp
movs
imul
add
sti
stos
xchg
jo
add
or
sbb
add
or
mov
ror
test
in
pop
xchg
or
adc
or
cmps
pop
scas
add
fcmove
add
add
or
fwait
fs
adc
pop
xchg
out
adc
adc
push
cmps
mov
sbb
mov
cdq
xor
jbe
mov
push
sbb
out
fwait
mov
push
jmp
clc
add
in
inc
or
cmp
out
test
mov
xor
push
or
scas
sub
or
add
pop
or
adc
add
pop
call
dec
push
data16
or
push
pop
not
and
mov
pop
and
mov
add
es
ja
cmp
mov
ja
bound
jecxz
mov
mov
inc
xchg
push
add
sub
movaps
add
aad
ret
daa
test
mov
pop
test
out
and
xchg
xlat
nop
add
cmp
cs
adc
add
movs
add
mov
cmps
sbb
add
inc
cld
or
xchg
jmp
stc
add
cld
std
(bad)
call
xchg
add
xchg
push
push
xchg
test
add
stc
xor
call
call
lahf
add
add
mov
movs
inc
xchg
out
add
add
sbb
adc
or
jb
ret
and
jnp
imul
test
sub
push
add
loopne
sbb
ins
add
add
xchg
out
movs
lods
push
jge
add
out
cmps
call
add
xor
adc
adc
jbe
push
mov
adc
lds
xlat
fadd
and
push
pop
stos
call
sbb
pop
rcr
cwde
imul
pop
adc
dec
fisub
xor
(bad)
push
dec
add
jge
mov
aaa
repz
xchg
mov
sahf
mov
xor
pop
pop
pop
push
add
push
lock
fcomp
shr
jmp
adc
pop
call
push
sbb
fs
fs
push
cwde
lods
pop
xchg
icebp
jmp
and
jbe
mov
lods
cdq
push
inc
loopne
sar
dec
in
jecxz
(bad)
stos
nop
sub
adc
mov
or
stos
pop
fisttp
mov
dec
dec
and
jmp
xchg
mov
mov
fild
and
adc
ins
adc
or
sub
sbb
sar
cmps
xor
xchg
adc
jle
test
rcr
fistp
mov
gs
mov
and
push
and
lahf
dec
jb
dec
dec
pusha
sub
push
ins
xchg
repnz
pop
inc
push
lahf
hlt
(bad)
(bad)
js
(bad)
fdivp
jmp
mov
loop
adc
imul
(bad)
mov
add
add
jle
add
jg
loope
push
cmp
fwait
sub
and
or
jmp
enter
ja
inc
dec
push
shl
daa
cdq
xlat
push
dec
mov
lods
inc
call
sbb
add
xchg
addr16
add
sti
add
add
mov
add
js
dec
jae
cmp
ins
inc
iret
lea
inc
adc
inc
aad
pop
les
adc
imul
rcr
cwde
ins
inc
ror
or
sar
mov
add
ins
nop
ret
jne
hlt
or
ins
and
xchg
repz
shr
jno
jle
in
pop
jle
add
mov
pop
mov
cdq
(bad)
addr16
in
addr16
xchg
push
sbb
add
or
fwait
addr16
ins
mov
or
pop
or
pop
or
mov
push
or
inc
repz
sub
mov
or
dec
lods
stos
sub
rol
and
dec
loopne
mov
dec
dec
inc
xor
mov
add
dec
fild
adc
add
add
pop
sub
fiadd
cmp
rcr
in
bound
inc
sub
enter
add
inc
push
test
inc
mov
stc
cld
sbb
mov
sbb
or
xchg
es
mov
(bad)
jmp
inc
add
sbb
pop
leave
jmp
jmp
call
(bad)
dec
add
sar
mov
sbb
xchg
pushf
rol
sbb
imul
add
mov
fwait
test
dec
fld
leave
add
sbb
es
scas
jnp
xor
dec
pop
xor
int3
(bad)
ds
or
dec
mov
push
sub
xchg
sbb
mov
lods
fild
sub
add
mov
call
jnp
loopne
adc
mov
dec
ror
and
rcl
xor
rol
mov
sbb
retf
das
add
xor
das
ins
cmc
clc
fiadd
or
test
inc
add
xlat
push
jns
(bad)
pop
add
mov
xchg
nop
ffreep
sti
(bad)
xadd
sahf
sbb
call
lds
loopne
popa
call
mov
cmp
or
pop
jmp
adc
cli
xor
mov
lods
sbb
iret
in
adc
mov
adc
push
adc
adc
add
adc
(bad)
dec
jne
iret
add
or
lea
add
xchg
mov
add
inc
sub
daa
stos
add
pop
test
mov
add
shl
(bad)
call
mov
inc
add
fcmovnb
add
imul
xchg
add
mov
jg
call
or
add
jle
jmp
fild
add
cmp
ins
test
add
imul
add
mov
mov
jl
test
or
xchg
fs
mov
arpl
sub
in
les
(bad)
in
mov
fxch
add
or
add
movs
fidivr
or
movs
jbe
add
xchg
cmp
shl
jns
push
inc
dec
rcr
popf
adc
call
int3
fsubr
cmps
imul
jno
call
jecxz
ret
(bad)
ja
jnp
xor
pop
push
or
jl
jno
cmps
mov
dec
cmps
imul
aaa
xor
xchg
inc
add
lods
dec
adc
scas
add
bound
push
test
out
jae
sar
push
cmp
xor
fnstenv
les
dec
(bad)
(bad)
xchg
(bad)
mov
add
nop
movs
rcl
icebp
shr
sar
fnstcw
xchg
cmps
iret
xchg
cmps
rcl
mov
outs
inc
mov
addr16
call
jmp
pop
loop
(bad)
mov
pop
add
mov
mov
test
mov
add
inc
push
bound
(bad)
stos
call
push
or
adc
movs
push
pop
mov
adc
mov
or
xor
dec
xchg
push
test
xchg
fbld
inc
adc
aad
sbb
mov
xchg
push
xchg
add
xor
sahf
int
add
in
add
imul
loop
call
dec
dec
call
add
nop
dec
test
jmp
call
mov
cdq
jne
add
aas
in
add
jno
sub
xor
inc
pop
add
add
dec
add
sub
or
imul
ror
sahf
cdq
pop
xchg
pushf
out
or
add
or
inc
cmp
xor
lahf
test
mov
pop
pop
dec
push
das
pop
pop
mov
xor
pop
inc
xchg
jmp
jo
test
pop
cmp
cmp
inc
xchg
xchg
and
sbb
add
arpl
and
mov
or
cmp
add
adc
mov
and
imul
mov
jbe
out
xchg
(bad)
cmc
inc
jecxz
out
jo
aas
loopne
jp
jg
rol
mov
loopne
mov
es
daa
dec
dec
out
test
adc
stc
or
xchg
mov
int
mov
cmp
jmp
mov
adc
cli
sub
inc
add
cmp
adc
(bad)
xor
inc
or
dec
push
ret
(bad)
(bad)
dec
or
mov
or
dec
sbb
adc
xchg
sbb
loopne
test
in
call
xor
adc
mov
sbb
pop
pop
lock
out
das
pop
add
out
xor
add
push
sbb
loope
add
out
stos
fs
add
xchg
rcr
jg
jae
movs
dec
cmps
jmp
cmp
cmp
shr
mov
in
pop
push
pop
and
or
adc
mov
and
xchg
inc
sti
and
or
fwait
pop
add
mov
icebp
and
push
fwait
aam
adc
and
or
mov
jl
xchg
dec
rol
popa
rcr
pop
sub
inc
mov
push
add
add
add
ret
inc
mov
and
jno
jge
lahf
add
and
pop
sbb
fnsave
or
xchg
in
(bad)
adc
xor
cmps
add
addr16
int
std
xor
popa
cld
xchg
cdq
mov
add
xlat
pop
xchg
mov
pushf
cmp
mov
xor
xchg
mov
and
xor
loopne
inc
jecxz
jne
push
or
outs
jmp
mov
sub
dec
outs
add
scas
test
or
jge
adc
ss
mov
ret
mov
inc
test
rol
sbb
ins
arpl
adc
add
mov
and
ins
pusha
inc
xchg
jg
arpl
shl
or
cmps
mov
scas
or
and
lahf
cmps
cdq
test
scas
pop
add
cmp
retf
inc
ss
aaa
out
and
shl
cmps
mov
add
pop
push
add
(bad)
out
jmp
lea
test
cmps
call
push
xchg
in
stc
inc
mov
push
dec
repz
cmps
lods
fs
jecxz
je
sti
(bad)
(bad)
jg
add
xor
movhps
or
add
adc
pop
and
cmp
push
xchg
jb
add
pop
cmps
cs
add
mov
cwde
test
add
(bad)
dec
jnp
adc
add
in
bound
add
stc
inc
rcl
les
add
int
lds
cs
or
out
leave
cli
adc
lahf
inc
enter
xchg
inc
cmps
sbb
adc
or
jno
clc
shl
add
inc
retf
push
mov
push
push
xor
and
sbb
(bad)
jo
jp
imul
movhps
mov
(bad)
clc
pusha
call
movs
pusha
add
(bad)
add
std
mov
pop
in
adc
adc
and
(bad)
or
adc
and
dec
rcl
fwait
adc
cwde
jae
repz
inc
jbe
push
addps
push
add
fs
es
fcom
or
push
fbstp
jno
lea
inc
sbb
add
add
aad
push
or
push
xchg
sub
inc
movs
push
push
push
ffree
dec
add
add
gs
movs
daa
mov
cdq
pop
rol
pop
dec
pushf
loope
or
add
xor
sub
imul
jmp
call
mov
sub
call
pop
push
pop
mov
cmps
jmp
jmp
fdivp
mov
mov
add
mov
mov
pop
test
in
pushf
repz
(bad)
and
ins
inc
xor
add
rol
add
adc
addps
adc
inc
pxor
iret
sub
adc
add
pop
leave
mov
fchs
add
xor
push
fwait
add
inc
mov
xlat
mov
cmp
add
adc
iret
cmps
adc
aam
sbb
loop
pop
imul
(bad)
addr16
inc
push
push
mov
jecxz
push
popa
xor
mov
and
mov
mov
imul
dec
sti
sub
inc
outs
aad
jle
and
gs
(bad)
ss
push
out
adc
popa
test
inc
dec
inc
cmp
and
adc
inc
add
inc
and
out
mov
inc
js
mov
pop
sbb
dec
or
(bad)
ret
dec
mov
or
aas
les
ret
push
aas
adc
push
mov
push
sbb
ret
add
leave
ins
sub
shl
loope
mov
adc
bound
test
adc
arpl
out
add
add
test
xor
mov
add
in
call
fwait
pop
sub
sub
fisttp
movs
stc
loop
mov
(bad)
fdivr
in
clc
idiv
(bad)
fwait
jmp
mov
call
(bad)
cmp
mov
(bad)
jg
mov
xor
movs
cld
add
lahf
pop
add
add
add
rcl
or
xchg
inc
inc
pop
fdiv
imul
ror
fcom
dec
inc
sub
stos
push
jo
cmp
icebp
fwait
(bad)
pop
sub
ja
or
cmp
fiadd
fstp
sub
mov
xor
enter
jp
mov
out
or
push
mov
stc
sub
pop
imul
in
cmp
add
add
cmps
mov
pop
push
add
and
test
lds
pop
and
rdtsc
cwde
sar
repz
lock
cmp
adc
adc
cmp
test
ror
xchg
mov
addr16
mov
and
dec
jmp
sbb
shr
rol
stos
push
add
sbb
or
arpl
inc
add
and
pop
inc
lds
inc
or
inc
inc
and
add
les
adc
and
jo
inc
int3
aaa
pop
push
retf
das
mov
jl
std
pop
test
call
mov
add
add
call
out
jae
call
xchg
xor
add
jmp
rol
scas
jle
mov
ja
and
daa
jecxz
mov
xchg
(bad)
stc
dec
out
mov
loopne
(bad)
(bad)
jns
add
xor
loope
pop
cwde
mov
inc
sbb
mov
or
inc
and
ret
and
fld
dec
jnp
pop
imul
cs
and
cmp
hlt
icebp
adc
cmp
adc
sbb
jmp
pop
mov
add
adc
or
xchg
push
mov
dec
xchg
jge
or
not
(bad)
xor
imul
mov
cmp
sbb
dec
daa
pusha
nop
and
sbb
cmp
sbb
push
push
pop
imul
add
leave
or
sbb
test
jp
test
mov
jne
out
sub
jg
inc
js
test
pop
add
outs
in
sbb
mov
add
add
pusha
ret
inc
push
sbb
mov
ins
add
int3
adc
inc
pop
les
and
pop
call
adc
add
lahf
and
push
push
dec
push
add
add
push
mov
out
and
add
test
aad
xor
and
ins
add
pushf
xor
mov
loopne
adc
pop
and
(bad)
xor
add
mov
nop
dec
shl
loopne
ins
and
mov
add
xchg
add
mov
push
or
add
add
lock
(bad)
dec
mov
xor
test
dec
jae
inc
call
mov
xbegin
jecxz
or
fidiv
lods
and
movs
leave
xchg
push
and
call
adc
cdq
dec
jae
adc
test
fs
fimul
add
lods
pop
inc
push
(bad)
pop
(bad)
mov
test
sub
lahf
push
add
and
sbb
pop
out
lahf
sbb
imul
mov
div
jno
arpl
sub
mov
push
inc
and
shl
cs
cmp
cmp
int3
cmps
ret
int
mov
push
cmp
mov
popa
mov
jae
stos
je
(bad)
mov
movs
push
cmc
cmps
or
out
dec
jge
jl
cmp
sbb
xor
pop
and
adc
add
ins
mov
dec
loop
or
or
rcl
inc
add
bound
jmp
fnstenv
hlt
dec
and
mov
or
or
lea
aad
sub
(bad)
aad
dec
les
push
lahf
test
or
inc
ins
in
imul
inc
and
adc
or
add
out
pop
pop
adc
push
dec
loope
mov
pop
(bad)
pop
or
add
clc
shr
or
pop
stos
fisub
or
jg
adc
je
test
add
cmp
add
lods
ds
add
add
dec
inc
sub
xor
retf
adc
and
dec
sub
leave
and
xor
test
nop
ss
add
gs
jge
jae
fwait
movs
movs
imul
add
je
mov
or
mov
inc
or
dec
(bad)
out
adc
scas
(bad)
inc
adc
or
sub
push
ins
fsub
lock
inc
mov
mov
dec
sbb
ja
outs
inc
and
jno
inc
aam
adc
xchg
data16
mov
or
sub
sti
jbe
fadd
mov
or
sub
add
test
and
sbb
mov
or
adc
jge
inc
or
pop
dec
push
xor
lods
inc
fld
add
adc
or
add
retf
push
inc
and
lea
adc
call
and
loop
mov
add
int3
inc
mov
mov
dec
cld
aas
sub
add
in
daa
fwait
sbb
imul
out
imul
xor
mov
sbb
add
add
jno
mov
lock
xchg
add
add
add
das
push
add
xor
push
add
mov
dec
inc
ins
enter
jbe
inc
sub
and
mov
dec
add
gs
mov
call
gs
scas
and
aad
movs
imul
rcl
fldenv
jo
fs
imul
retf
or
mov
out
outs
in
pop
test
dec
adc
pop
popa
(bad)
in
xchg
ret
inc
or
(bad)
dec
test
daa
xchg
push
in
pop
push
dec
and
jg
or
pop
push
pop
and
fld
sbb
mov
loopne
jnp
and
fwait
inc
movs
dec
or
je
outs
xchg
loop
mov
mov
add
and
lods
pop
aam
pop
popa
int
mov
mov
add
and
xor
pop
call
push
adc
pusha
mov
adc
stos
fcmovnb
les
jno
int3
mov
adc
aad
sub
add
inc
add
xchg
cmps
mov
ret
mov
retf
sub
mov
adc
clc
add
bound
cmp
mov
ds
mov
imul
add
cmps
imul
adc
stc
imul
dec
xchg
fnstcw
retf
shl
fld
pop
lahf
or
add
jnp
add
lods
inc
stc
add
xchg
or
nop
aas
ins
cdq
imul
mov
push
dec
push
or
xchg
nop
test
lds
or
pop
shr
and
clc
ror
and
sti
xor
aam
nop
sbb
sub
sub
adc
pop
add
and
push
xor
add
xchg
cmps
rcr
adc
and
cmp
lock
mov
mov
pop
iret
test
add
adc
and
mov
pop
push
shl
shr
or
inc
dec
adc
pop
test
cmps
test
adc
and
jne
or
push
xor
dec
das
adc
inc
test
jmp
jecxz
inc
pusha
inc
dec
aas
xor
in
xor
pushf
rcr
xor
jg
inc
or
add
sar
in
and
lds
add
inc
and
pop
xlat
add
xchg
imul
mov
sbb
xchg
test
sbb
retf
and
retf
add
xor
add
jmp
xor
or
movs
ret
scas
add
ret
inc
or
xor
inc
popa
add
popa
pop
sub
mov
call
fld
rol
iret
cs
test
addr16
test
shl
lea
and
xor
popa
push
add
sbb
add
cmp
jg
or
test
sub
sti
mov
and
inc
xor
xchg
mov
jo
dec
sbb
jnp
popa
xchg
xor
scas
add
sub
adc
adc
mov
dec
mov
mov
out
inc
clc
inc
test
pop
retf
inc
pop
adc
dec
test
in
push
mov
xchg
inc
and
pop
dec
sub
int
pop
int
pop
popa
dec
mov
imul
or
push
dec
inc
adc
or
cdq
test
adc
inc
add
lock
push
and
pushf
mov
sar
add
mov
cmp
add
sub
xchg
cmps
jge
add
add
xor
fwait
leave
lahf
retf
stc
std
shl
and
xor
inc
or
repz
(bad)
mov
mov
xchg
add
add
dec
add
add
and
sbb
xchg
inc
outs
cmp
cld
mov
add
push
imul
add
push
jmp
cmp
pop
add
mov
sub
and
gs
push
pop
dec
or
push
popa
rol
adc
pop
lods
add
add
movs
(bad)
adc
sbb
xchg
mov
pop
jmp
add
push
sbb
mov
add
inc
xchg
xlat
ins
and
push
pop
pop
or
mov
loope
adc
icebp
xor
movs
out
sbb
adc
stos
sbb
lods
fwait
adc
adc
push
ja
xor
or
add
jo
cmp
mul
inc
or
enter
popa
adc
lea
or
or
xchg
call
mov
or
pusha
sub
lods
sub
or
xchg
dec
or
xor
inc
dec
adc
outs
cmps
mov
push
adc
out
push
sub
adc
inc
repz
mov
or
ins
and
test
cmp
push
movaps
add
mov
aaa
fild
cmp
mov
sub
aad
add
jne
xchg
xlat
add
sti
(bad)
in
scas
add
popa
call
ss
cmp
cmps
xor
adc
pop
imul
add
mov
add
leave
or
add
push
push
test
movs
stc
and
shr
mov
push
xor
sbb
xor
mov
enter
pop
mov
shr
(bad)
pusha
and
or
enter
outs
sub
xchg
ret
pusha
daa
cs
mov
cmps
and
and
mov
loope
clc
popa
add
sub
add
xor
xchg
push
jecxz
inc
test
xchg
and
in
cmp
lds
mov
pop
adc
push
jno
xchg
aam
test
mov
shl
push
popf
add
jno
jns
xchg
test
sub
sub
dec
xchg
cmp
aaa
and
mov
nop
fnstsw
and
icebp
mov
(bad)
ja
retf
or
mov
pusha
push
mov
cmps
or
adc
inc
(bad)
call
mov
jg
lods
adc
or
inc
xor
push
adc
pop
inc
and
movs
adc
adc
pusha
inc
xchg
push
inc
add
dec
inc
pop
xlat
mov
les
mov
xor
call
dec
add
adc
imul
test
add
ficom
add
popa
pop
sahf
shl
in
mov
sub
std
shl
xor
jmp
jo
sub
and
es
call
mov
xchg
std
add
cld
or
test
add
add
jo
add
add
jno
fiadd
xor
test
mov
mov
mov
dec
arpl
mov
test
push
imul
sub
inc
xlat
daa
adc
sbb
fs
ins
and
pop
inc
sub
mov
retf
jnp
mov
or
jo
mov
inc
and
clc
mov
inc
test
call
jecxz
test
sub
mov
inc
mov
out
jg
call
or
pop
pop
and
scas
gs
pop
sub
jo
sbb
inc
xchg
and
cmps
push
in
loope
push
mov
lods
cmp
adc
sbb
(bad)
or
test
sbb
lahf
lahf
lahf
pop
(bad)
sub
mov
jmp
push
mov
push
sub
sub
rcl
adc
or
adc
test
sbb
hlt
and
and
dec
jns
xchg
nop
mov
inc
jne
or
popf
and
lods
add
push
daa
or
dec
add
ins
inc
push
add
add
arpl
or
add
icebp
sub
add
sub
jo
cmp
test
dec
xor
sub
icebp
pusha
pop
pop
jmp
test
sti
cmc
hlt
mov
fst
repz
add
lods
inc
sub
(bad)
inc
popf
daa
dec
(bad)
add
add
add
push
daa
add
push
mov
sub
push
stos
(bad)
jno
shl
lods
ins
lds
push
mov
pop
sub
push
add
and
cmp
mov
add
lahf
nop
mov
push
inc
mov
mov
or
and
mov
mov
das
sub
adc
cmp
movs
sbb
inc
ja
call
and
mov
cmc
lds
lods
jo
loope
mov
pop
push
cmps
cmc
add
adc
push
dec
sbb
loope
push
call
jo
or
mov
aaa
ret
jae
and
shr
and
cs
inc
sbb
scas
adc
jne
pop
add
jmp
nop
lea
add
sbb
xchg
addr16
inc
and
sbb
mov
sub
or
push
ins
ret
dec
push
adc
(bad)
mov
or
add
add
test
mov
ins
or
inc
movs
add
add
cmc
mov
xchg
mov
mov
xchg
std
sbb
jmp
(bad)
movs
cmp
add
mov
pop
sbb
add
dec
rol
pop
add
imul
pusha
call
inc
cmc
add
xchg
popf
and
scas
cld
int
fisttp
icebp
add
ins
fld
je
adc
jae
test
pop
adc
lahf
push
ret
ret
sbb
or
mov
pop
xchg
retf
or
mov
jg
add
fdiv
mov
push
add
jne
xchg
pop
shl
shr
mov
sbb
pop
test
and
arpl
sti
xlat
test
pop
nop
pop
add
pop
push
xor
pop
xor
sbb
test
pop
adc
fsubr
sub
add
inc
test
rcr
mov
jnp
(bad)
inc
or
adc
pop
sub
stos
lods
xor
mov
inc
(bad)
aaa
mov
or
mov
mov
cwde
jne
popf
mov
and
arpl
cmp
lahf
clc
and
loopne
mov
sbb
and
stos
dec
pusha
rol
push
xor
and
and
inc
cmp
imul
xlat
outs
inc
adc
mov
sbb
add
and
xchg
mov
and
outs
add
xchg
mov
sub
sbb
cmps
and
mov
xor
cmp
xor
sub
lock
call
shl
cli
add
mov
dec
rcr
adc
adc
jle
add
lock
pop
xor
sti
imul
pop
rcl
rol
outs
mov
jmp
fadd
imul
jb
add
add
or
dec
clc
test
add
add
mov
jmp
mov
pop
test
xlat
daa
inc
cmp
mov
mov
arpl
loopne
or
mov
or
xchg
add
pop
or
add
xchg
test
imul
ss
mov
mov
adc
pop
rol
into
jl
call
add
mov
das
nop
and
fwait
mov
sub
mov
add
mov
mov
fwait
lds
sub
fs
mov
mov
add
adc
add
add
or
and
mov
and
adc
jno
adc
icebp
dec
sbb
imul
popf
ja
retf
inc
xchg
or
(bad)
mov
xchg
push
(bad)
mov
in
adc
loop
pop
and
enter
mov
sbb
pop
loope
jecxz
adc
jp
es
inc
in
add
mov
inc
add
dec
xchg
mov
imul
int
(bad)
push
add
or
and
add
mov
outs
push
jg
lods
std
push
clc
lahf
and
stos
sti
add
add
adc
add
outs
fld
push
add
das
add
push
lods
jge
inc
sbb
cmp
dec
sub
adc
and
test
push
addps
sub
add
rcl
add
pop
jno
shr
imul
ret
ds
add
sub
cmc
jmp
and
mov
imul
inc
xor
pop
jl
pop
frstor
sbb
cmc
imul
push
stc
pop
mov
xor
adc
int3
push
sbb
mov
inc
push
dec
inc
xor
inc
scas
mov
push
imul
add
imul
ret
jno
xchg
ds
push
test
mov
addps
jmp
adc
sub
adc
inc
mov
add
bound
loop
aaa
movs
sbb
jne
xchg
test
and
ins
adc
pusha
push
xchg
sub
and
and
stc
and
fld
and
jecxz
pop
push
inc
add
bound
xchg
in
imul
add
lock
adc
data16
outs
sub
push
cli
add
add
out
shl
sub
outs
inc
and
push
test
jl
add
jo
cdq
or
pop
inc
out
pop
(bad)
in
lods
dec
and
fadd
outs
fiadd
sub
push
cmp
xor
push
pusha
aas
add
rcr
adc
mov
cmps
mov
gs
or
inc
push
fwait
xor
ret
push
xchg
push
mov
sbb
adc
mov
imul
das
xchg
mov
pop
aas
add
xor
xchg
mov
inc
adc
inc
cmc
dec
jmp
mov
mov
and
loopne
movs
pop
iret
and
mov
mov
and
shl
nop
sbb
sub
sti
xor
mov
sbb
cs
xor
mov
fild
outs
or
sub
xor
fs
or
dec
and
push
dec
push
sub
lea
add
add
mov
or
push
inc
aad
rcl
sub
add
and
and
shl
inc
test
test
cmp
dec
xchg
and
pop
add
cld
or
fs
dec
pop
cmp
add
scas
fstp
add
xor
rcr
dec
shl
aas
cmp
cmps
mov
outs
mov
inc
sub
test
add
adc
add
mov
add
jo
mov
movs
xor
test
enter
int3
in
loopne
imul
cmps
test
aas
mov
call
jg
xor
cmp
inc
imul
adc
cmovo
ret
imul
cmp
(bad)
loop
cmp
xchg
mov
add
xchg
jge
dec
popa
lds
pop
adc
sbb
dec
pop
xor
sbb
scas
ja
les
fs
inc
or
or
popf
test
push
or
add
xchg
fistp
inc
push
ret
sub
and
pop
ja
dec
push
cwde
push
add
jns
pop
and
ins
and
lea
fs
pop
and
scas
test
add
mov
scas
gs
add
mov
popf
dec
or
sbb
add
bound
add
dec
jg
dec
lea
dec
sub
je
pop
jo
imul
mov
or
shl
mov
(bad)
mov
push
adc
or
rol
mov
gs
add
add
push
add
xchg
call
inc
push
push
push
add
inc
xor
and
mov
cmps
imul
clc
dec
jbe
xchg
in
add
stc
add
add
test
(bad)
(bad)
fadd
ins
fld
outs
loopne
cmp
fist
sub
add
xchg
(bad)
std
and
or
test
push
add
(bad)
push
push
pop
cs
inc
push
test
pop
sub
adc
xor
adc
xor
or
xor
pop
inc
jmp
and
call
sbb
xor
push
loopne
sub
push
mov
adc
sub
dec
jge
cs
add
lods
cmp
mov
cmp
test
add
fisttp
add
imul
add
adc
pop
pop
movs
adc
jnp
and
ret
lods
push
adc
xchg
push
adc
gs
call
mov
stc
push
sbb
movs
or
cwde
add
mov
push
leave
test
mov
add
jmp
fdiv
push
inc
mov
dec
and
jne
adc
mov
push
test
add
dec
push
sbb
xor
or
gs
add
xchg
leave
adc
mov
mov
mov
mov
cli
push
addr16
rcl
mov
add
or
inc
cdq
add
inc
add
push
add
and
push
add
add
sbb
xchg
icebp
mov
in
xlat
add
ins
loopne
imul
xor
pop
or
mov
add
loopne
pop
jno
test
pop
mov
sub
(bad)
out
lods
sbb
ja
test
enter
inc
test
push
add
inc
mov
inc
sub
das
sbb
mov
mov
or
retf
js
and
xor
xor
xchg
xor
xchg
test
ss
sub
sub
xor
mov
adc
mov
inc
add
out
sub
int3
les
jnp
in
inc
inc
xchg
add
jmp
inc
sbb
sbb
mov
nop
push
stc
mov
popa
jecxz
dec
(bad)
out
pop
add
xchg
mov
pop
mov
or
addr16
push
adc
ja
dec
(bad)
lds
in
push
inc
ss
inc
push
ret
jae
jno
aam
mov
xor
inc
adc
mov
test
mov
adc
sub
inc
lods
lahf
inc
lods
or
cmp
or
inc
movs
inc
inc
mov
mov
push
mov
dec
and
rcl
adc
imul
aad
(bad)
add
sub
sbb
popa
add
icebp
sub
nop
pop
ficomp
ins
pop
ret
sub
adc
outs
call
call
pop
aaa
jae
sub
add
inc
add
sub
add
sub
push
(bad)
outs
fstp
sub
add
add
test
(bad)
imul
add
or
fadd
arpl
add
test
fisubr
mov
and
sub
mov
add
test
push
xlat
sbb
ret
(bad)
mov
inc
jge
sar
mov
xor
pop
test
test
rol
jae
add
sub
push
jge
les
push
enter
xor
jo
dec
and
pushf
mov
jmp
test
adc
les
adc
sub
mov
cmps
les
dec
test
jl
sub
mov
or
out
inc
cmp
test
fcmove
aaa
test
dec
push
adc
icebp
rcl
loope
mov
div
cmp
or
or
cmp
add
mov
sub
push
inc
stos
(bad)
xor
push
and
or
add
leave
or
or
add
nop
cmp
pop
rol
and
add
add
xor
inc
aas
inc
mov
xor
and
xchg
jge
imul
loopne
cmps
or
and
jb
jo
outs
gs
cmp
mov
(bad)
adc
jbe
jnp
pop
jmp
test
jp
cs
jg
add
add
test
hlt
add
pushf
or
jmp
jmp
fs
pusha
xlat
add
add
add
retf
pusha
fisubr
mov
movnti
or
daa
and
dec
add
lea
sar
dec
movs
popf
leave
lods
retf
mov
and
ret
pop
movs
jo
mov
sub
in
das
sahf
hlt
movs
jo
shl
(bad)
and
fisub
fst
aaa
cmc
cs
pop
popa
dec
and
mov
or
mov
cdq
cs
and
jae
add
xor
add
and
and
pop
xor
in
call
dec
adc
jo
push
sub
dec
inc
arpl
adc
and
or
pop
xor
and
dec
adc
nop
xor
push
pop
add
xor
xchg
shl
rcl
leave
or
sbb
leave
jmp
and
es
fild
test
sbb
and
inc
adc
shl
call
mov
ror
mov
(bad)
out
sub
aas
adc
adc
add
mov
pop
loopne
sub
jp
pop
movs
pop
sti
jg
add
mov
mov
call
hlt
push
add
add
add
or
add
add
add
pop
xor
xor
add
jecxz
add
mov
ret
loope
cmp
or
adc
dec
or
add
test
or
and
pop
loop
sahf
popf
or
xchg
jge
or
dec
loop
dec
push
sbb
jecxz
sbb
push
sbb
lods
add
add
ja
movs
lods
arpl
dec
or
ins
daa
hlt
xor
test
cmp
mov
loopne
test
adc
push
jno
mov
mov
adc
loopne
jge
ss
lods
sub
add
jmp
push
sub
xchg
(bad)
mov
inc
xchg
sbb
ret
movs
inc
aad
sub
lea
push
mov
and
add
mov
adc
les
test
sub
and
sub
sub
sub
sub
daa
mov
pop
push
aam
mov
sub
mov
add
xchg
(bad)
xchg
and
push
sub
push
shl
and
mov
pusha
loope
(bad)
xor
jle
xor
add
std
add
add
sbb
fild
pop
fild
pop
or
jmp
fs
data16
pop
enter
add
pop
ret
add
or
stc
or
cmp
ds
mov
cmps
jae
lods
retf
or
lock
jecxz
test
ret
mov
test
xchg
or
out
xchg
and
mov
in
pop
add
mov
mov
adc
mov
mov
add
fwait
inc
pop
push
cmp
add
sti
inc
mov
xor
jl
popf
test
test
in
mov
imul
call
jmp
sub
ffree
sbb
sbb
loope
pop
inc
xlat
retf
pop
les
inc
inc
or
add
icebp
pop
in
inc
and
rcl
outs
mov
loop
mov
add
(bad)
ja
add
push
loop
jnp
mov
lods
cmp
loopne
mov
mov
xor
rcl
add
rol
inc
jno
dec
(bad)
aad
call
or
and
iret
(bad)
mov
inc
mov
adc
(bad)
or
xchg
jmp
inc
or
add
inc
or
inc
pop
fld1
adc
mov
add
(bad)
(bad)
jg
aam
push
add
test
inc
mov
pop
jmp
addr16
add
repz
outs
ins
adc
add
fs
push
pop
ret
(bad)
jecxz
pop
loopne
pop
ficom
or
add
outs
or
push
mov
add
and
mov
mov
dec
add
sbb
pop
popf
sub
icebp
sub
xor
pop
jo
iret
ret
add
xchg
inc
ret
add
add
imul
pop
lahf
jg
add
test
dec
or
loopne
rcl
or
clts
not
or
inc
adc
and
stos
inc
sbb
xchg
fidiv
cdq
add
pusha
jmp
add
scas
or
call
sub
ja
scas
dec
lods
push
sti
cld
and
add
push
dec
push
imul
movs
cmp
(bad)
(bad)
mov
or
push
fwait
mov
pop
push
das
or
push
sub
sub
mov
pop
gs
adc
ror
and
mov
sbb
addr16
sti
or
sbb
sbb
pop
inc
sub
lods
sub
add
test
sub
test
in
adc
cmps
mov
sub
pusha
pusha
scas
adc
popa
cs
imul
sub
aad
sub
add
adc
and
add
sbb
add
mov
lods
or
push
and
or
xor
add
std
pop
add
or
add
dec
ins
clc
add
add
xchg
add
lahf
add
push
xchg
sub
add
inc
add
int
and
(bad)
rcl
xor
ret
mov
mov
inc
mov
adc
adc
push
cmps
cmp
jge
movs
mov
dec
add
lock
and
repz
dec
mov
mov
and
jno
mov
sbb
fmul
push
(bad)
sar
mov
lahf
mov
dec
dec
ret
jg
inc
cmp
icebp
mov
out
or
mov
push
mov
inc
imul
pop
sub
push
movups
add
lods
inc
add
inc
inc
mov
dec
js
jmp
inc
cmps
jnp
add
add
push
out
dec
push
adc
add
sub
outs
xor
xchg
scas
(bad)
xchg
cmps
adc
lds
inc
lods
or
or
sbb
push
or
daa
xchg
or
test
fld
pop
xor
gs
dec
push
movs
add
or
leave
sbb
or
dec
sub
movs
add
adc
mov
shl
add
bound
aas
sbb
cmp
mov
fucom
and
push
adc
stos
adc
xor
jne
mov
dec
int
test
test
adc
pop
inc
lea
data16
push
xor
pushf
mov
sbb
popf
and
mov
gs
call
aam
xor
or
push
adc
leave
sub
leave
shl
mov
ss
cdq
xlat
scas
push
push
dec
das
int
push
or
adc
sub
add
enter
fdiv
dec
adc
add
and
push
xor
and
test
or
loop
test
cmp
movs
add
cmp
inc
scas
mov
sub
pop
xor
and
xchg
std
add
(bad)
and
mov
adc
pop
imul
(bad)
pop
sbb
xchg
add
icebp
jmp
or
dec
test
jecxz
and
sub
adc
add
test
jae
dec
push
pop
pop
xor
mov
xlat
pop
push
fcmovb
jne
nop
add
xchg
push
mov
jecxz
rol
add
cli
and
and
push
inc
xor
shr
ret
xor
add
xchg
or
xchg
or
sub
sbb
sbb
test
imul
xchg
pop
call
dec
shl
xor
movs
adc
sbb
sub
cmp
jno
test
or
ss
inc
add
pop
or
loopne
clc
push
ins
inc
jb
xlat
mov
ins
mov
enter
add
xchg
add
add
cmps
adc
sbb
test
in
mov
inc
cmps
and
mov
mov
mov
cs
dec
and
add
enter
xchg
mov
inc
add
and
xor
cmp
popa
(bad)
adc
fdiv
popa
test
push
and
adc
dec
pop
rcl
inc
adc
mov
push
call
or
xor
cmps
push
call
push
sbb
cmc
pop
xor
movs
leave
add
mov
les
popa
mov
sbb
add
mov
pop
xor
add
leave
shl
inc
or
call
inc
lea
(bad)
rol
sbb
xor
sub
lds
int
push
aam
ins
adc
xchg
jecxz
xor
push
cmps
or
add
mov
addr16
mov
mov
(bad)
sub
jg
sbb
jne
mov
cmp
push
xor
or
push
push
gs
rol
repz
pop
cmp
push
inc
mov
ja
mov
or
inc
pop
and
dec
rol
fisub
mov
or
dec
pop
mov
jecxz
std
xor
sbb
push
sbb
shr
test
shr
imul
sub
test
fstp
mov
aaa
add
or
and
mov
jmp
add
push
inc
xchg
mov
xor
sub
xor
es
or
push
push
bound
jnp
rol
out
pop
pop
and
xor
lods
or
push
push
imul
sub
and
sbb
lea
test
sbb
xchg
fcmovne
xor
or
mov
adc
nop
inc
ja
mov
and
popa
mov
add
dec
adc
xchg
hlt
jns
push
adc
mov
add
xor
push
enter
das
pop
mov
mov
xor
xor
jp
sub
and
(bad)
mov
jge
push
inc
imul
stos
lds
add
nop
shr
add
add
or
add
dec
adc
mov
lods
mov
rol
add
popa
mov
pop
push
xchg
mov
mov
test
or
adc
xchg
push
pop
cmp
xchg
jecxz
and
inc
adc
push
inc
aad
add
in
xor
inc
dec
test
ffreep
dec
or
mov
xchg
inc
movs
mov
sub
mov
lods
add
jne
mov
add
je
lods
(bad)
fisttp
sbb
and
call
xor
inc
push
mov
out
mov
xor
sbb
sub
sbb
push
inc
div
push
xor
(bad)
and
push
mov
and
ins
lahf
lods
enter
in
mov
or
test
xchg
inc
xchg
or
shl
loopne
aaa
adc
pop
sub
adc
mov
test
(bad)
mov
push
add
ins
add
(bad)
(bad)
pusha
loopne
add
add
adc
add
test
sub
cmp
pop
shr
ret
or
lods
adc
or
adc
push
(bad)
add
fs
add
xor
inc
(bad)
jo
test
sub
mov
icebp
and
ret
(bad)
sbb
jle
xor
adc
jnp
scas
xchg
sbb
xchg
test
or
test
jmp
push
ret
ret
jmp
stos
adc
xor
loop
or
mov
push
pop
jnp
lahf
les
mov
mov
vmovlpd
push
lock
pop
mov
push
and
adc
sbb
aad
push
(bad)
in
mov
aad
push
in
add
xchg
adc
or
inc
push
mov
inc
das
scas
pop
inc
or
sti
mov
and
jge
dec
sbb
cmps
stos
add
dec
dec
add
adc
mov
sbb
les
sbb
inc
xchg
lea
xchg
sub
test
inc
inc
xchg
jne
adc
inc
mov
xchg
mov
les
les
mov
fisub
pop
fnstsw
retf
push
mov
call
mov
add
xor
jne
ins
cmp
ror
push
inc
dec
jmp
ret
or
adc
and
xadd
or
add
sbb
adc
mov
daa
retf
shr
or
mov
test
movs
xor
or
cmp
sub
test
cmps
push
push
fild
and
pop
cmp
and
test
aas
mov
aad
aaa
gs
movs
sbb
mov
lds
cmp
add
cdq
sahf
sub
mov
sub
push
xchg
xlat
test
movlps
adc
inc
add
les
mov
pushf
ins
push
or
sub
xchg
test
lods
adc
lds
add
iret
inc
fadd
in
or
ja
(bad)
mov
js
push
ror
push
inc
lds
dec
add
sbb
xor
push
sub
adc
fs
sbb
mov
cmps
xor
xchg
cmp
into
movs
jo
xor
push
fnstenv
test
adc
fbld
and
pop
or
fadd
jno
cs
lea
out
cdq
jge
pop
adc
mov
adc
jb
push
jg
enter
movs
push
test
jmp
and
xor
add
add
mov
test
leave
retf
jno
inc
pop
fs
test
push
aaa
sub
stos
push
test
loope
adc
arpl
adc
(bad)
imul
jecxz
jo
jo
mov
lods
or
cmps
jg
sbb
xor
loop
mov
imul
cmp
enter
jecxz
(bad)
fs
aaa
frstor
push
fcom
xor
mov
ss
dec
(bad)
out
dec
jmp
shl
mov
cmp
jno
or
dec
xchg
mov
or
dec
stos
push
mov
xor
and
lds
add
sub
add
sbb
inc
adc
inc
lods
cmp
mov
xor
pop
fwait
or
cmp
sub
cmp
imul
shl
inc
imul
jmp
loopne
pop
xchg
pop
add
pop
int
and
sub
and
cmps
adc
push
sbb
aas
mov
mov
das
jo
cmp
invd
inc
retf
pop
or
adc
sahf
in
loop
pop
add
ffreep
xchg
scas
and
and
mov
lods
mov
sbb
mov
imul
sbb
inc
nop
movs
jo
push
rcl
mov
jge
mov
jae
or
shl
dec
bound
mov
mov
cmp
retf
pop
add
sar
pop
pop
aas
add
aad
and
leave
or
xchg
push
dec
mov
sbb
adc
inc
ss
push
das
popa
test
add
or
xor
stos
shl
add
shl
(bad)
fs
xchg
lea
add
add
pusha
xor
lds
fild
dec
cmp
add
push
add
mov
inc
mov
movs
test
ins
dec
and
movs
jge
adc
sbb
movs
adc
arpl
retf
adc
mov
lods
fwait
ret
shl
add
test
or
jmp
test
movs
jo
xchg
jmp
mov
xor
fst
inc
test
cmps
outs
add
mov
adc
pop
inc
movs
jo
daa
icebp
xor
inc
jns
sub
lea
(bad)
xchg
jo
repz
add
push
add
jmp
sub
daa
inc
mov
dec
or
xor
mov
lds
xlat
sbb
lea
inc
mov
xor
mov
fwait
push
cmp
fild
and
dec
movs
adc
test
adc
xor
add
jecxz
sbb
inc
out
adc
sub
rol
push
mov
sub
xor
fild
or
or
add
add
xor
mov
or
xchg
and
and
js
adc
lea
mov
sar
adc
jge
xor
sub
mov
inc
frstor
sub
mov
adc
popa
push
sbb
pushf
inc
xchg
jmp
or
test
and
or
sub
mov
(bad)
or
adc
dec
mov
(bad)
sbb
arpl
(bad)
cs
cli
and
inc
sub
fbld
dec
stos
fild
std
pop
xchg
out
add
test
and
ja
vmread
xchg
jno
and
push
push
adc
adc
or
or
or
outs
shl
sub
dec
jmp
xor
jno
ss
test
xor
adc
push
adc
mov
adc
retf
movs
lods
push
push
rcl
sub
inc
adc
mov
inc
push
adc
xor
or
jmp
xchg
stos
cmc
inc
and
test
or
sub
xchg
and
sub
shl
dec
xor
push
mov
push
cmps
std
add
push
frstor
or
xor
mov
and
rol
std
mov
std
and
inc
cwde
cdq
sti
push
add
out
dec
pop
mov
daa
or
push
ficomp
imul
and
dec
ret
sub
std
pop
(bad)
pop
sbb
popa
movs
add
bound
fdiv
xchg
sahf
daa
movs
push
push
mov
xchg
lea
pop
rol
dec
mov
int
nop
test
push
shl
add
mov
ins
dec
add
or
das
jno
cmps
sahf
rol
lock
inc
test
js
sbb
cs
adc
push
mov
jne
adc
push
or
pop
sbb
aam
dec
xchg
adc
or
sbb
jae
(bad)
or
outs
ins
and
or
test
push
scas
test
and
push
and
sub
shl
sub
imul
scas
or
push
and
dec
and
sbb
sbb
and
inc
lods
or
push
xor
mov
pop
mov
aas
xor
imul
ins
and
outs
pop
and
and
fild
cwde
inc
pusha
sbb
sbb
jecxz
adc
pop
jecxz
aam
(bad)
iret
cmp
push
fs
dec
xor
cmp
shl
gs
sub
pop
mov
mov
fld
lods
ja
inc
cmp
popa
pop
dec
xchg
cmp
loopne
int
push
add
aad
cs
add
pop
cs
test
sbb
sub
and
sbb
outs
adc
test
mov
push
ret
dec
lds
xchg
lods
ret
ret
cmps
inc
sbb
adc
mov
popf
add
xchg
inc
test
test
mov
add
pop
popf
push
lods
dec
fst
mov
mov
add
test
mov
sub
or
fs
daa
(bad)
pop
jno
cmps
pop
xor
xor
lods
fwait
inc
mov
test
enter
dec
les
and
add
push
or
jns
xor
es
jg
and
inc
xchg
sbb
rol
add
dec
or
and
push
xchg
and
cmp
dec
sub
mov
sub
or
test
dec
scas
cmc
xchg
adc
adc
sub
mov
cmp
stc
das
sar
in
sub
bound
lods
inc
stos
fisttp
dec
mov
adc
mov
pop
adc
dec
lods
cwde
push
daa
mov
sti
push
sbb
and
pop
mov
jno
inc
shr
inc
imul
mov
xor
ins
pop
inc
or
gs
add
mov
xlat
jecxz
add
ja
lods
add
ror
bswap
inc
and
sub
lds
lods
push
imul
int
adc
push
das
push
imul
dec
adc
inc
xlat
sbb
and
push
arpl
sbb
popa
mov
sbb
xor
ret
mov
adc
add
mov
aad
add
sub
inc
or
pop
push
fistp
das
das
mov
or
inc
add
mov
outs
or
xchg
mov
dec
inc
or
mov
jecxz
sbb
push
add
ds
xor
popa
or
inc
sbb
xchg
pop
mul
adc
sti
mov
inc
adc
and
mov
and
pop
(bad)
sbb
pop
adc
sub
jmp
adc
pop
add
pop
rol
sbb
fisttp
loope
adc
ss
xor
fs
push
(bad)
retf
test
or
loope
(bad)
or
repz
gs
inc
movs
adc
adc
dec
popa
imul
daa
rol
loop
jno
jmp
inc
pop
and
cmp
and
dec
adc
dec
sbb
sbb
and
dec
pop
sbb
cs
push
adc
pop
xor
(bad)
push
mov
fs
imul
mov
xchg
test
push
repz
xchg
imul
mov
or
popa
mov
and
mov
push
out
inc
daa
xor
dec
push
inc
loope
push
or
mov
loope
pop
xor
push
or
mov
push
mov
pop
pop
add
xor
loope
mov
cmp
and
lea
movs
adc
pushf
jmp
jne
or
cmps
test
(bad)
dec
mov
popf
jecxz
loope
add
inc
repz
xor
add
or
and
rol
sub
lods
stc
cmc
pop
xchg
nop
mov
xor
pop
pop
jge
shr
daa
test
jno
or
xchg
push
adc
jge
adc
and
add
push
xor
mov
test
or
add
imul
mov
out
xor
xor
sbb
rol
xor
movs
or
add
addr16
xchg
jb
cdq
inc
test
inc
lods
fldenv
ss
and
or
add
dec
pusha
sti
add
test
mov
loopne
ins
dec
jno
inc
or
inc
and
adc
lods
or
pop
imul
mov
push
add
popf
and
in
inc
or
jecxz
pusha
popf
(bad)
and
int3
add
cmp
rcl
and
mov
push
inc
lods
pop
adc
inc
jno
pop
xchg
sub
sub
sub
call
sub
mov
jo
cmps
fldcw
pop
add
jl
add
dec
add
and
lock
and
mov
sbb
pop
xchg
nop
test
aad
mov
push
adc
popf
ret
add
fcom
lea
pop
xchg
test
fld
fld
sub
cmp
adc
repz
or
xchg
test
adc
lahf
or
push
and
inc
adc
dec
leave
mov
xchg
leave
pop
cmps
adc
hlt
lods
fscale
lds
mov
mov
call
inc
mov
call
or
adc
mov
and
bound
push
dec
inc
inc
push
rol
push
sub
xchg
ins
pop
add
inc
daa
mov
repz
push
or
pop
lea
dec
add
inc
mov
cmp
push
and
lds
push
add
les
and
push
pop
stos
xchg
dec
mov
mov
or
cmc
mov
rol
test
cmp
jmp
push
add
jno
or
mov
inc
popa
sub
dec
inc
sub
lds
lods
mov
daa
adc
inc
gs
add
or
jno
mov
leave
(bad)
int
(bad)
add
xor
sub
lods
retf
inc
aad
sub
dec
imul
xor
and
add
push
lea
repz
lods
rcr
or
(bad)
icebp
mov
inc
xor
or
mov
xchg
mov
sbb
fbld
push
mov
push
add
add
adc
jecxz
or
add
xor
mov
adc
pop
dec
adc
sbb
push
dec
cmp
inc
lods
adc
sbb
and
aaa
popa
fist
sub
test
mov
add
test
mov
shr
push
and
pop
loope
cwde
je
sub
leave
movs
sub
adc
jmp
adc
or
jne
aas
mov
adc
mov
rcl
lods
dec
sbb
mov
add
rol
dec
push
popa
add
stc
pop
inc
sub
add
mov
loope
push
ret
ret
imul
pop
mov
cmc
push
mov
sub
dec
nop
dec
fadd
adc
xchg
movs
jb
and
add
jb
or
ret
adc
sub
xchg
cmp
inc
lods
les
adc
lds
cmp
test
xor
mov
push
jae
and
ret
xor
push
inc
adc
mov
dec
adc
push
retf
ficom
ret
out
inc
push
stos
xor
push
iret
add
mov
lock
div
dec
or
leave
cmc
adc
mov
fisubr
or
icebp
(bad)
xchg
mov
or
and
lea
mov
mov
adc
pop
jmp
dec
jno
fs
movs
jo
pop
cmps
ret
add
xor
add
pop
xlat
adc
test
xor
pop
xchg
jo
ja
inc
adc
out
ins
push
pusha
sbb
or
mov
fdiv
sbb
push
(bad)
cmp
jmp
cmp
mov
mov
pop
xor
aaa
outs
sbb
adc
arpl
sar
dec
jne
dec
arpl
or
in
and
add
add
mov
and
and
mov
pop
or
or
test
rcr
cmp
nop
add
(bad)
sbb
add
bound
dec
xchg
adc
jecxz
adc
push
mov
push
and
lods
aad
lods
push
and
imul
fdivr
fs
(bad)
sub
xchg
sbb
cmp
mov
and
iret
and
ins
add
(bad)
push
test
(bad)
(bad)
adc
(bad)
call
add
cmp
inc
jge
or
mov
jmp
fnsave
ffreep
scas
dec
or
movs
add
mov
jo
push
adc
add
push
(bad)
loope
and
or
frstor
icebp
add
pop
add
sti
jno
js
ret
mul
and
out
add
add
jae
add
adc
pop
pop
push
rol
stos
ins
and
adc
js
lods
sub
call
dec
dec
(bad)
add
test
xcrypt-cbc
cmps
push
sbb
icebp
aaa
pop
xchg
arpl
mov
ss
imul
xchg
cwde
sar
mov
jno
cmp
gs
cwde
pusha
lods
sbb
out
cwde
push
es
xchg
movs
inc
jno
lar
pusha
push
mov
ins
fild
jg
or
dec
inc
add
pop
sub
cmps
adc
and
push
and
dec
xchg
mov
retf
or
sub
adc
sbb
dec
pop
mov
dec
sub
pop
jne
mov
jmp
mov
inc
stos
mov
sti
loope
dec
xor
sbb
out
push
fcom
add
or
jmp
and
xor
mov
jmp
push
xor
jecxz
jmp
hlt
shl
(bad)
sub
inc
sub
pop
add
mov
dec
and
sbb
push
pop
add
push
imul
adc
jo
int
mov
lods
cdq
mov
or
adc
pop
mov
cwde
or
movs
push
out
jecxz
add
push
dec
adc
adc
adc
fld
dec
xchg
push
inc
adc
(bad)
inc
nop
lea
pop
mov
cwde
js
movs
add
add
inc
jo
stos
sub
iret
mov
add
or
inc
pop
mov
lods
or
mov
push
mov
movs
sub
bound
add
pusha
cmp
call
mov
in
icebp
inc
loop
test
imul
nop
mov
and
fcmovnbe
mov
lods
add
mov
ins
int
test
pop
test
scas
(bad)
and
xor
or
dec
jne
loopne
mov
fstp
das
and
add
or
jno
sti
cmc
add
push
or
ja
(bad)
mov
retf
inc
mov
sub
sti
or
inc
add
pop
inc
push
lods
enter
mov
inc
mov
pop
bound
or
add
imul
push
inc
or
movs
pop
xchg
(bad)
inc
test
mov
dec
or
adc
add
sub
movs
inc
xchg
push
xchg
add
test
movs
cmp
inc
shl
and
stos
(bad)
inc
out
and
push
add
dec
pop
cdq
sbb
mov
adc
nop
loop
popa
sbb
add
adc
pop
fistp
outs
push
and
add
dec
and
inc
and
jne
das
std
adc
test
lods
pop
cmp
sub
fistp
call
(bad)
and
rol
add
push
sbb
push
add
lahf
xchg
cmps
call
jmp
sub
mov
pop
lods
cwde
push
mov
ja
adc
or
int
inc
(bad)
fs
rcr
cmp
adc
sub
xchg
add
test
adc
push
ret
rcr
xor
jmp
push
cmps
ror
mov
add
dec
inc
aas
mov
and
gs
sbb
int
mov
cmps
add
dec
stos
lds
push
sbb
adc
push
sub
lock
(bad)
aad
fwait
les
lds
sub
xor
or
dec
aam
out
xor
movs
adc
outs
bound
add
(bad)
or
nop
or
ret
test
dec
jl
in
popf
adc
adc
xchg
sbb
mov
sbb
push
(bad)
sub
jnp
mov
adc
mov
lods
ret
adc
outs
jne
pop
xchg
and
xchg
mov
pop
mov
push
inc
cdq
inc
lea
add
sub
adc
add
mov
inc
xchg
inc
pop
outs
and
popf
inc
push
xchg
jge
dec
xor
sti
jnp
(bad)
jo
(bad)
mov
mov
fs
dec
or
enter
jmp
out
sbb
and
and
imul
lods
dec
and
cdq
repz
inc
cmp
adc
ins
push
cmps
outs
or
js
mov
push
push
push
(bad)
pop
adc
add
or
adc
rcr
add
ret
test
lods
push
jo
push
or
xchg
mov
lahf
out
push
add
jns
push
or
mov
mov
lea
mov
or
add
sub
fs
adc
or
mov
adc
and
adc
push
ret
add
and
retf
lods
lods
and
push
dec
jecxz
pop
xchg
shl
adc
fs
mov
jl
add
jmp
cdq
and
or
and
adc
ins
arpl
adc
and
add
mov
xor
lea
fmul
pop
bound
xchg
mov
or
sub
xchg
and
and
jg
push
and
sbb
dec
lods
add
test
mov
das
sbb
or
fsubr
xor
pop
shl
test
lea
dec
sub
and
or
test
pop
push
jge
adc
mov
xor
mov
adc
push
das
jge
and
out
add
stos
add
stos
and
inc
ins
scas
push
add
push
inc
stos
ja
and
aam
xchg
cdq
mov
mov
aad
push
mov
call
mov
add
sbb
mov
jae
dec
add
dec
xchg
mov
retf
mov
cmp
adc
dec
(bad)
mov
test
push
mov
inc
sar
mov
leave
and
xor
jecxz
cmp
adc
xor
adc
fnsave
cmp
add
sub
or
rcl
push
xchg
imul
call
jo
das
push
and
push
cwde
dec
add
int
pop
pop
mov
mov
bound
sti
mov
ds
inc
rol
push
mov
dec
lods
and
jmp
sbb
and
fdiv
pop
(bad)
add
mov
and
(bad)
(bad)
mov
dec
(bad)
scas
scas
scas
add
and
(bad)
push
xor
pop
inc
fistp
mov
daa
adc
pusha
sub
jno
inc
es
push
mov
sub
jmp
scas
scas
mov
mov
movs
push
or
inc
(bad)
mov
adc
(bad)
cmp
jmp
and
enter
dec
sahf
add
test
xchg
les
or
inc
jecxz
ret
(bad)
mov
push
cmps
inc
mov
mov
mov
push
sub
and
adc
pop
add
aam
inc
jns
scas
scas
scas
les
fcmovu
mov
inc
mov
mov
and
int
bound
mov
sub
mov
stos
das
pop
pop
add
les
gs
and
add
test
int
mov
inc
adc
les
icebp
lods
xor
adc
or
retf
rol
pop
sub
pop
or
xchg
test
mov
xchg
pop
(bad)
sub
js
jnp
pop
fcomp
jno
js
rol
mov
cs
in
push
adc
aam
adc
add
dec
(bad)
mov
movs
dec
xchg
aad
mov
sbb
pop
leave
jecxz
or
or
dec
dec
rol
hlt
ret
lahf
fwait
mov
add
scas
scas
scas
or
push
push
stos
call
mov
and
or
or
bound
adc
js
rol
fwait
xchg
sbb
mov
call
push
add
aad
inc
(bad)
and
dec
dec
lea
test
pop
push
mov
sbb
xor
push
jmp
cmps
sti
and
icebp
arpl
xor
xchg
mov
inc
inc
push
pop
xchg
xchg
mov
mov
fist
and
mov
sbb
mov
mov
(bad)
movs
push
sbb
dec
jnp
inc
xchg
fnsave
inc
adc
bound
imul
popf
sbb
sub
mov
add
lods
pop
xor
stos
mov
pop
and
add
push
dec
sbb
cmp
jg
test
add
cwde
es
and
mov
adc
xor
xchg
jno
les
xchg
mov
sti
xchg
test
and
add
pop
and
mov
push
fwait
les
addr16
jno
inc
pop
test
add
lods
xchg
imul
add
lds
and
or
imul
or
inc
ret
push
push
sbb
xchg
add
mov
movs
inc
addr16
sub
xor
adc
mov
push
jmp
inc
xlat
or
add
test
pop
xor
add
int3
and
popa
sbb
sbb
xor
sub
xchg
retf
rol
and
mov
adc
sbb
pop
test
loope
cmp
lods
xchg
and
adc
mov
imul
ret
call
pop
cmp
aaa
cmp
ret
sbb
inc
sub
push
inc
out
fwait
movs
xor
mov
inc
mov
fld
adc
and
push
mov
mov
ret
int
adc
call
xor
add
leave
dec
cmp
rol
repz
xor
mov
xchg
push
xchg
dec
xor
sub
ss
mov
add
jmp
push
xchg
jge
(bad)
add
imul
xchg
retf
icebp
push
ins
pop
cmps
stc
push
aas
dec
or
pop
aam
cmp
mov
cmps
pop
gs
add
jno
sub
lods
jne
pop
fild
xchg
inc
mov
sti
mov
or
pop
or
xor
add
test
repz
ret
ins
push
ja
push
sub
sbb
xchg
loope
aaa
mov
mov
ret
add
retf
and
mov
repz
pop
xchg
xor
or
mov
adc
lea
or
jae
mov
sub
xor
test
bound
sub
or
mov
inc
adc
inc
dec
add
push
jno
or
aam
adc
retf
pop
jo
cdq
loope
add
and
es
out
or
mov
dec
adc
xchg
pop
test
adc
pop
and
sbb
cmp
xor
pop
push
adc
xor
sub
xor
and
jmp
std
test
inc
sbb
pop
je
pop
les
push
test
jp
aaa
or
mov
mov
movs
push
adc
xor
popa
(bad)
or
adc
popa
das
sub
add
(bad)
cmp
adc
and
adc
push
inc
and
mov
xor
loope
int
sahf
mov
and
xchg
addr16
push
inc
stos
xchg
or
add
sbb
xchg
lea
fwait
loope
or
aam
iret
jno
movs
push
or
add
cmc
push
mov
adc
jno
add
sti
add
mov
mov
jno
pop
or
adc
mov
inc
lea
adc
aam
(bad)
retf
add
and
push
cmp
inc
or
xor
pop
push
shr
add
movs
inc
lods
or
pop
mov
xchg
fst
jbe
push
pop
ficomp
add
or
jae
inc
xchg
xor
mov
shl
fisttp
or
jno
sub
pop
daa
dec
mov
imul
sahf
adc
test
fstp
mov
xor
adc
sbb
adc
call
add
shl
inc
ins
xor
js
retfw
retf
retf
adc
lods
add
arpl
in
and
(bad)
add
and
xor
and
cmps
inc
nop
or
ins
lods
pop
add
push
mov
pop
pop
pop
xchg
test
popa
dec
push
mov
xor
mov
inc
cmps
sub
loop
addr16
adc
adc
inc
cdq
dec
or
pop
cmp
cmp
inc
fs
add
mov
dec
pop
xchg
ja
xor
push
repz
add
xchg
shr
xor
mov
sub
mov
jmp
inc
push
sbb
dec
adc
(bad)
add
pop
add
and
add
pop
mov
or
arpl
add
(bad)
(bad)
mov
sub
xchg
rcr
test
push
loope
mov
sbb
adc
xchg
mov
add
sub
adc
add
xor
and
stos
xchg
pushf
pushf
xor
lds
sbb
mov
xor
das
mov
call
and
mov
mov
push
sbb
xor
or
inc
pusha
aad
std
dec
push
imul
or
or
and
adc
jmp
loop
jnp
adc
pop
pop
mov
mov
jecxz
test
add
pop
push
mov
pop
adc
push
jne
and
add
call
fld
mov
adc
dec
mov
sub
mov
lods
adc
dec
xor
or
fwait
popa
sbb
outs
arpl
xchg
add
pop
test
or
xor
rol
sub
(bad)
dec
lods
pop
pop
out
xchg
pop
add
mov
aaa
push
pop
ret
sbb
push
xchg
lods
sbb
xor
push
dec
iret
add
mov
sub
and
es
lods
(bad)
jnp
stos
and
sub
push
push
cmp
pop
pop
sub
and
push
xlat
adc
aam
bound
xor
sbb
mov
xchg
pop
add
rol
push
add
pop
and
jle
sbb
adc
adc
push
mov
push
add
jno
sbb
test
lods
add
add
pop
xchg
adc
adc
add
sub
sti
and
inc
ja
dec
jmp
les
add
dec
sbb
and
or
inc
pop
pop
sbb
push
and
stc
vpand
mov
das
imul
jecxz
fst
test
les
movs
xchg
pop
enter
in
lods
fiadd
cmp
out
add
add
push
adc
push
mov
xchg
shr
test
push
mov
(bad)
inc
or
or
pusha
fcmove
mov
sti
inc
or
mov
and
jne
(bad)
sub
push
or
test
mov
mov
and
and
rcr
call
std
sub
shl
cmc
cmps
mov
add
ficomp
mov
int3
inc
ja
xor
arpl
mov
test
push
add
ins
xchg
adc
mov
pop
push
bound
dec
inc
addr16
dec
inc
add
mov
xchg
sub
pop
xor
pop
add
mov
xchg
cmps
movs
out
mov
pushf
inc
mov
cmp
cmp
jae
ja
xchg
cmp
(bad)
mov
aas
and
ret
pop
adc
pusha
inc
enter
sar
pop
mov
xor
adc
popf
or
lods
or
mov
add
mov
inc
sbb
movs
mov
and
leave
jge
es
fsub
leave
ja
mov
(bad)
nop
pop
daa
mov
add
mov
adc
lea
das
push
popa
push
xchg
dec
in
push
add
sbb
mov
mov
retf
sbb
call
stos
mov
and
xchg
add
push
xchg
sti
push
rcl
mov
adc
iret
rol
sar
and
xchg
push
mov
pop
and
(bad)
sub
outs
adc
adc
adc
jns
push
sbb
mov
bound
(bad)
cmc
in
lods
dec
nop
push
cdq
fwait
cwde
(bad)
and
add
add
add
inc
adc
fld
inc
push
mov
ror
or
mov
scas
cmp
retf
ds
jge
dec
sti
sub
mov
mov
pop
xchg
fnstcw
(bad)
outs
fisttp
inc
test
loope
and
push
xchg
push
mov
adc
mov
or
addr16
mov
add
in
xchg
mov
sbb
inc
iret
xchg
lods
sbb
addr16
iret
cmp
les
add
jge
xor
pop
aam
nop
and
mov
std
gs
lea
inc
jg
iret
adc
jmp
lods
push
gs
jmp
inc
aaa
(bad)
(bad)
push
fs
cmp
add
mov
inc
push
push
add
inc
pop
popf
stos
es
or
rol
cdq
mov
dec
stos
popf
xchg
add
lods
and
push
lahf
ficomp
ret
or
push
mov
test
nop
xor
mov
pusha
add
adc
aas
(bad)
sub
sub
sbb
mov
shr
mov
pop
add
sub
sub
dec
ins
lods
pop
mov
mov
out
add
mov
lds
xchg
xor
and
(bad)
inc
jl
pop
or
das
mov
adc
xchg
lods
shl
dec
and
jle
push
pop
popa
retf
jno
adc
and
mov
and
sbb
jno
inc
push
cmp
xchg
jo
and
loope
ins
arpl
xor
fwait
in
add
dec
push
jbe
(bad)
adc
mov
and
or
test
std
xlat
in
sub
mov
adc
pop
dec
(bad)
call
and
push
or
bound
aaa
or
mov
adc
adc
aam
add
jnp
add
mov
pusha
pop
call
and
xor
or
add
add
shl
and
mov
add
pop
test
pop
pop
test
sub
and
pop
xor
fucom
or
sub
add
out
push
dec
lahf
push
mov
retf
les
sub
or
shl
mov
repz
sbb
jge
shl
inc
cmp
add
adc
leave
pop
add
mov
popa
sub
sbb
imul
or
xchg
sub
shr
xchg
aam
xor
aad
je
test
iret
pusha
inc
pop
mov
xchg
inc
mov
dec
repz
lods
fld
sbb
add
nop
inc
add
jg
adc
arpl
and
mov
inc
sub
(bad)
ins
sbb
push
push
das
mov
popa
and
or
ror
stos
ss
adc
jmp
mov
or
mov
and
xchg
stos
pop
and
dec
add
inc
or
call
cmps
retf
xchg
sbb
fmul
sbb
mov
dec
ins
sbb
ins
add
rol
xor
push
add
jne
add
test
adc
mov
adc
lods
inc
xor
and
retf
mov
jge
fcmovbe
mov
sti
das
aam
lods
xchg
pop
xlat
mov
cmp
mov
jo
pop
mov
xchg
mov
repz
add
ins
add
mov
adc
inc
and
adc
push
add
jmp
inc
adc
rcl
pop
push
add
cwde
inc
mov
mov
out
and
and
xor
pop
push
fwait
xchg
and
inc
add
cmps
movs
ror
sbb
cmps
adc
inc
mov
inc
dec
imul
and
pop
jg
add
push
mov
stos
es
adc
fwait
add
pop
pop
pop
push
jno
xchg
ins
inc
mov
cmc
loop
movs
dec
sub
inc
sbb
mov
pop
add
popa
sbb
adc
adc
(bad)
(bad)
add
adc
add
mov
arpl
sbb
pop
aaa
stos
push
mov
or
pop
jmp
jge
enter
adc
add
test
mov
retf
adc
or
inc
dec
mov
add
or
test
dec
push
jne
push
test
or
test
pop
add
adc
push
movs
std
sub
sbb
or
lods
cmp
cmp
xor
cmc
sbb
xchg
loop
mov
lods
mov
push
add
stos
shr
or
adc
or
jno
ins
fistp
test
jno
sub
mov
pop
and
and
cwde
jo
mov
or
lds
lods
inc
ret
ins
sub
fsub
imul
dec
mov
cmp
push
cmp
inc
and
stos
movs
adc
gs
dec
pop
push
cmps
loop
sti
rcr
mov
ret
mov
mov
dec
pushf
push
jns
mov
gs
xchg
sub
mov
rcl
mov
movs
push
sub
pop
xchg
xor
cmp
mov
add
mov
adc
bound
inc
aad
adc
push
lea
fwait
mov
adc
mov
inc
add
sbb
movs
mov
test
lahf
fwait
pop
inc
or
pop
aam
bound
jno
xor
or
mov
xor
imul
jae
adc
loope
rol
adc
popf
push
xor
retf
inc
lods
jne
fistp
fdivr
xor
icebp
or
add
ss
xor
mov
sub
mov
xor
sahf
fild
mov
mov
adc
ret
sub
lea
test
xor
mov
xchg
loope
inc
icebp
lea
rcr
and
inc
xchg
ins
imul
inc
and
mov
xchg
adc
test
lods
sbb
cmp
xchg
pop
aam
fild
and
aad
sbb
and
push
pop
adc
xchg
mov
add
mov
out
add
and
(bad)
in
mov
push
movs
int
(bad)
stos
test
imul
test
adc
scas
cmp
imul
fldenv
xchg
sbb
test
mov
movs
lds
xchg
xor
ror
xlat
pop
and
(bad)
iret
call
test
add
xchg
fisttp
or
leave
pop
add
xor
mov
rcr
pop
sbb
retf
and
fs
cmp
(bad)
repz
lock
xlat
ret
lea
pop
adc
int
mov
scas
pop
test
dec
push
and
sub
or
jge
add
jne
rcr
push
bound
inc
or
comiss
cwde
pop
adc
push
jmp
adc
inc
adc
inc
movs
inc
mov
push
mov
mov
ror
jge
and
aas
imul
push
inc
dec
dec
sub
stos
add
test
or
data16
imul
mov
fcmovbe
mov
int
ror
xchg
cwde
scas
xlat
test
arpl
inc
adc
lods
lea
in
inc
or
sbb
daa
test
call
xchg
adc
xchg
gs
jno
dec
mov
pusha
dec
mov
mov
inc
push
dec
fwait
sti
and
jmp
nop
sbb
or
mov
xor
sbb
and
(bad)
das
movs
fidiv
or
add
add
daa
mov
mov
imul
mov
push
mov
dec
fcomp
or
stc
push
push
push
cdq
dec
xor
xchg
or
pusha
add
xor
jno
retf
dec
inc
sub
dec
fistp
lods
or
push
add
mov
add
mov
inc
mov
and
dec
mov
mov
add
fisubr
lods
out
test
imul
nop
xor
adc
cmp
adc
and
or
pop
xor
mov
(bad)
jge
and
(bad)
push
pop
sub
xchg
pop
and
cwde
test
outs
inc
cmp
or
jmp
xor
or
mov
and
jno
mov
jecxz
mov
jne
or
and
fstp
add
movs
adc
shl
cwde
(bad)
push
retf
push
mov
jecxz
test
mov
shr
dec
and
popa
lock
or
fild
iret
movs
inc
pop
cmp
sub
or
lds
inc
xor
and
scas
mov
fwait
rol
dec
adc
gs
xor
and
lahf
inc
xchg
and
fadd
fwait
sbb
pop
mov
jae
mov
xor
push
aad
cmc
adc
jno
movs
push
sub
shr
cmp
ja
mov
dec
gs
sbb
mov
inc
scas
xchg
and
(bad)
(bad)
leave
add
adc
mov
adc
fist
dec
pop
xchg
mov
mov
and
inc
and
dec
adc
adc
(bad)
dec
pusha
adc
push
push
mov
xor
arpl
dec
pop
mov
inc
add
inc
stos
adc
push
icebp
sub
movs
mov
(bad)
xchg
inc
adc
push
lods
sub
xchg
stos
or
or
and
gs
stos
xchg
rol
inc
jo
les
pop
dec
sbb
dec
or
jo
pop
dec
pop
icebp
add
inc
cmp
sbb
xchg
cmp
fnstcw
push
and
xchg
jmp
fnstcw
sbb
loop
and
popa
shr
stos
add
mov
add
mov
pusha
fwait
add
pop
xchg
adc
aas
mov
test
adc
inc
cmps
mov
push
pusha
in
(bad)
mov
mov
cmp
imul
mov
mov
add
sbb
and
test
xchg
mov
mov
shl
add
add
in
aad
adc
xchg
stc
or
xchg
popf
or
aam
add
adc
xor
add
inc
imul
call
sub
(bad)
stos
and
push
cmps
(bad)
xchg
mov
daa
mov
and
fwait
pop
stos
adc
sbb
ret
rol
repz
adc
(bad)
and
loope
add
and
adc
cmp
and
loope
sbb
mov
push
mov
mov
bound
adc
xchg
arpl
popa
add
les
mov
retf
inc
sub
sub
mov
lds
sahf
push
pop
fxch
sahf
test
mov
pusha
adc
(bad)
jbe
stos
ins
cmc
and
pop
mov
mov
mov
adc
push
mov
push
imul
jae
lea
xchg
shl
fild
popa
cmp
mov
(bad)
es
rol
cmc
dec
mov
nop
mov
das
dec
or
xchg
aaa
mov
iret
test
and
push
and
jo
(bad)
mov
mov
or
jae
aaa
cmp
arpl
(bad)
repz
rcr
test
add
inc
pop
fld
xchg
sbb
inc
mov
pop
dec
lods
add
mov
mov
or
inc
ror
adc
and
ret
loope
mov
lods
or
shl
adc
rcr
sub
ds
rol
arpl
adc
test
jge
and
inc
add
ins
sub
jns
xlat
pop
and
mov
sub
ret
inc
sbb
or
mov
xchg
mov
or
and
adc
push
xchg
xor
movs
inc
icebp
shl
fucomp
mov
sub
sub
and
add
add
mov
scas
add
xlat
popf
test
adc
xchg
or
and
mov
sbb
inc
and
sub
or
pop
sbb
mov
bound
and
xchg
push
imul
xor
mov
les
or
mov
push
fst
mov
in
add
rcr
adc
mov
jmp
mov
dec
and
add
or
pusha
sub
adc
mov
nop
sbb
xchg
(bad)
pop
add
call
pop
mov
and
mov
xchg
xchg
add
stc
call
and
inc
test
inc
sub
sbb
mov
sub
sub
sar
inc
popa
push
and
sbb
lods
movs
adc
dec
add
test
(bad)
or
arpl
add
add
jmp
mov
(bad)
pop
and
adc
pop
push
ret
inc
sub
add
sub
leave
repz
add
sbb
push
dec
add
mov
cmp
jnp
adc
inc
arpl
adc
adc
out
dec
sbb
pop
cdq
inc
sbb
jmp
test
lods
add
push
gs
sar
mov
mov
mov
cmp
fld
xchg
mov
test
xchg
int
nop
test
jae
and
mov
dec
mov
cmp
or
xor
adc
shl
mov
sbb
pop
xchg
mov
add
add
sub
push
mov
or
fist
or
mov
sbb
and
stos
mov
sub
es
dec
pusha
ror
lds
add
inc
sub
cmp
xchg
adc
inc
(bad)
jl
mov
mov
mov
movs
dec
mov
pop
jno
mov
pop
mov
inc
jbe
adc
loope
gs
xor
rcl
and
je
(bad)
test
pusha
jnp
inc
cmp
in
test
popa
xchg
add
dec
jmp
mov
rcr
and
mov
mov
sub
jae
inc
cmp
push
and
aas
mov
retf
ins
or
xchg
adc
sahf
xor
inc
cmp
xchg
xchg
pop
and
shr
sbb
inc
adc
test
xchg
loop
mov
sbb
pop
xlat
inc
aam
adc
sbb
stos
adc
(bad)
cdq
mov
rol
sub
int
mov
into
pop
loop
movs
adc
inc
out
and
cmc
push
sub
mov
xchg
test
adc
les
inc
cmps
test
mov
movs
pop
inc
sub
push
fabs
pusha
adc
adc
sbb
inc
mov
push
jecxz
test
arpl
pop
adc
xchg
stos
pop
pop
or
xor
xor
or
(bad)
pop
pop
xchg
and
adc
adc
retf
and
jge
imul
jns
push
mov
or
mov
sub
test
mov
test
adc
imul
sbb
push
pop
lds
push
ins
push
adc
inc
sub
sti
add
jno
popa
mov
push
and
sti
daa
push
ins
push
ja
mov
sub
sbb
lods
add
xor
lea
dec
xchg
out
fst
and
pop
xlat
out
add
add
push
fist
adc
mov
arpl
xor
sar
mov
ins
aad
adc
popf
inc
enter
jmp
ins
popf
cmc
dec
jmp
adc
mov
or
mov
push
loopne
mov
aas
jmp
push
sub
das
xor
sbb
inc
retf
and
mov
cwde
pop
adc
imul
push
and
pop
adc
call
stos
pop
inc
push
adc
fnstcw
mov
add
stos
or
pusha
sbb
mov
dec
mov
push
and
mov
fcomp
je
and
dec
mov
and
mov
pusha
mov
or
adc
or
sbb
dec
inc
inc
push
xchg
sub
leave
sbb
adc
adc
ja
in
add
scas
cmp
add
add
les
dec
ret
pop
adc
mov
bound
jne
sbb
psllw
xor
mov
call
scas
adc
aas
fsubr
xchg
mov
mov
xchg
(bad)
add
push
or
sub
dec
ins
cmps
test
imul
inc
pop
dec
or
shl
push
inc
fnstcw
adc
xchg
push
daa
inc
mov
test
add
test
mov
or
or
pop
mov
or
je
inc
fwait
cdq
cli
xchg
push
xlat
addr16
or
add
les
or
mov
in
add
mov
mov
mov
add
(bad)
retf
fcom
inc
sbb
lea
repz
xor
jmp
daa
sbb
mov
adc
xor
inc
sub
add
out
xchg
popa
lods
out
adc
add
cdq
and
sub
mov
shr
cmps
fbstp
xor
inc
pop
cmc
mov
ror
arpl
lods
or
sub
adc
sbb
int
adc
push
imul
popf
test
inc
add
sub
or
les
xor
or
xchg
add
cmp
and
mov
mov
and
test
sbb
or
pop
add
push
jmp
mov
cwde
aam
leave
and
fcomp
xchg
cmp
push
mov
mov
inc
pop
and
sub
nop
mov
nop
xor
dec
adc
or
pop
adc
and
and
push
adc
popa
aaa
sbb
das
mov
mov
(bad)
fsubr
jnp
sbb
jne
and
fisttp
icebp
inc
aaa
and
test
add
add
pop
push
(bad)
call
je
lahf
xchg
dec
sub
mov
rcl
xchg
cmp
aaa
popf
xchg
push
lea
sbb
add
xchg
test
push
test
mov
fcom
inc
adc
and
add
dec
ins
lea
adc
pop
les
loopne
movs
adc
push
or
mov
shl
imul
loop
popa
daa
lods
add
or
fs
xor
fdiv
mov
push
xlat
adc
xchg
mov
or
out
gs
stos
inc
gs
daa
jno
sbb
and
jmp
or
push
imul
dec
xor
sub
xchg
jge
mov
imul
(bad)
sbb
test
(bad)
call
test
or
xor
inc
inc
push
dec
or
xchg
mov
jmp
inc
and
mov
xor
pop
pop
push
retf
xor
push
push
push
add
mov
add
inc
movs
imul
mov
dec
pop
dec
adc
int
push
add
dec
and
push
adc
sbb
sub
ins
sub
dec
inc
and
sub
adc
sbb
inc
or
stos
and
je
adc
xor
dec
adc
int
(bad)
or
ror
mov
add
mov
mov
xor
dec
push
sub
rcl
dec
sub
ins
add
out
inc
and
mov
sbb
push
cmc
aaa
dec
or
(bad)
out
stc
sub
daa
adc
mov
jge
jo
inc
mov
cmp
mov
add
inc
bound
out
sbb
xor
adc
aam
pop
sbb
(bad)
push
aad
in
jge
push
pop
loope
mov
daa
dec
adc
xor
or
sub
inc
inc
add
sbb
dec
inc
shr
arpl
sub
or
mov
adc
adc
sub
mov
aad
or
(bad)
popf
adc
push
jne
dec
push
mov
mov
lods
sbb
mov
shr
or
xor
pop
call
ja
inc
dec
xchg
inc
mov
(bad)
and
sbb
lea
xchg
sub
and
popa
and
inc
add
rcl
sub
or
loope
dec
inc
call
dec
arpl
inc
mov
and
ja
xor
add
jmp
inc
outs
pop
dec
pushf
dec
xlat
sub
sbb
test
or
xchg
and
add
and
mov
ret
push
or
pop
scas
cwde
or
adc
sub
push
movs
push
test
mov
jne
pop
add
dec
popa
jne
add
(bad)
or
iret
inc
pusha
jne
jmp
xor
and
aad
mov
jmp
push
in
dec
cmc
mov
scas
cmps
jmp
dec
das
and
mov
fs
dec
cmps
pop
pop
and
adc
inc
cmp
sub
cmp
jmp
jno
add
inc
inc
push
sbb
jo
mov
imul
out
and
mov
mov
xchg
xchg
cmp
lods
adc
and
adc
mov
push
add
mov
adc
adc
add
add
movs
push
xchg
push
and
inc
xchg
mov
mov
out
rcl
lods
imul
mov
jo
dec
xchg
leave
inc
cs
or
add
push
ret
jno
xor
sbb
pop
out
mov
add
dec
lods
add
push
or
xchg
das
xlat
inc
and
xor
push
mov
and
mov
in
ret
pop
loope
inc
ins
inc
mov
and
jns
sbb
mov
or
xchg
xchg
test
adc
lahf
or
aad
add
adc
and
test
cdq
loop
lods
push
adc
add
mov
ins
push
test
jmp
mov
add
and
sbb
xor
dec
xor
cmp
or
or
and
hlt
or
(bad)
add
adc
xor
push
mov
inc
div
fld
inc
mov
scas
xor
cmp
adc
fsub
adc
push
jmp
pop
jmp
sub
jo
or
mov
jbe
movs
inc
mov
pop
and
push
popa
xor
rol
rol
test
lods
mov
(bad)
shl
stos
sub
inc
inc
add
cmc
adc
inc
push
(bad)
push
outs
xor
push
lds
add
lods
sbb
dec
lods
arpl
push
jge
sub
sub
lods
sub
push
imul
stos
fnstenv
push
sbb
add
rcl
(bad)
leave
or
mov
ins
adc
jno
push
or
fwait
lods
add
and
and
sub
bound
inc
aaa
sti
mov
and
hlt
or
sbb
xor
add
dec
mov
adc
and
adc
outs
sub
lds
or
adc
mov
sbb
(bad)
jmp
push
add
or
xchg
xor
inc
movs
pop
adc
push
sbb
mov
pop
mov
les
jae
inc
daa
xor
push
and
mov
daa
sbb
add
inc
inc
mov
sub
push
mov
iret
test
test
add
test
lea
mov
xor
adc
and
fnstcw
xor
dec
iret
sub
rcl
test
das
ja
fldcw
sbb
add
mov
sub
stos
ins
lods
push
pop
sbb
sahf
stc
sbb
(bad)
and
and
add
push
iret
add
jo
jnp
push
xor
mov
jmp
mov
test
and
mov
inc
xor
shl
xchg
inc
movs
mov
test
mov
and
shl
fld
mov
pusha
push
add
xchg
xchg
mov
add
add
jnp
mov
imul
mov
arpl
push
movs
mov
dec
popa
adc
push
jge
sub
fwait
ins
fnstsw
cmp
inc
scas
mov
xor
ret
add
add
pop
mov
inc
and
push
and
pop
jns
pusha
adc
int3
es
sub
or
or
push
out
sub
mov
sub
push
pusha
and
arpl
cmp
and
ror
xchg
stos
xchg
add
fwait
push
dec
adc
dec
test
adc
and
or
dec
add
sub
ret
cmp
xlat
mov
xchg
ins
mov
or
test
mov
and
rcl
xchg
test
pop
imul
dec
pop
and
sbb
mov
push
(bad)
(bad)
dec
pusha
pop
adc
mov
daa
jmp
lods
arpl
inc
shr
add
push
adc
adc
mov
inc
add
pop
push
adc
jmp
xchg
dec
pop
or
(bad)
retf
or
(bad)
pop
rcl
or
mov
inc
adc
inc
repz
xchg
push
test
scas
sbb
push
lds
sbb
dec
jno
adc
in
pop
cmps
xor
xor
add
add
mov
pusha
sar
sub
push
inc
sar
adc
push
cmp
sub
imul
bound
test
and
cmp
loop
dec
mov
shr
sub
mov
or
sub
inc
das
ss
or
das
stos
mov
push
aam
sub
outs
imul
mov
xchg
aam
dec
jns
mov
jl
popf
(bad)
or
mov
or
test
inc
push
adc
jne
add
and
or
mov
pop
mov
mov
mov
add
adc
fincstp
inc
bound
pop
lea
call
xlat
dec
rol
mov
popa
sbb
push
jge
dec
mov
scas
xchg
imul
push
mov
inc
shr
bound
adc
jmp
lea
add
mov
dec
add
imul
jnp
inc
movs
mov
xchg
cwde
xor
jnp
rcl
add
pop
sub
test
cmp
add
add
mov
sub
sbb
or
add
pop
sub
and
inc
icebp
and
mov
sub
add
sar
inc
sub
mov
test
or
and
enter
arpl
jne
ins
and
pop
stos
pop
mov
add
xor
pop
mov
mov
or
inc
loop
sub
push
add
pop
xchg
push
and
xchg
add
in
add
xlat
dec
push
fnsave
mov
in
adc
aam
inc
sub
mov
fbstp
push
loop
sub
push
fwait
enter
sbb
adc
es
and
test
push
dec
pop
lds
or
push
and
xor
mov
inc
mov
and
push
or
lods
xor
call
pop
add
je
or
sub
loop
xor
loope
and
xor
int
push
cmp
adc
mov
or
adc
inc
push
xor
mov
ins
lods
add
push
pop
call
adc
push
ret
test
jmp
add
test
mov
ss
dec
or
adc
mov
sub
or
adc
test
add
movs
or
jmp
sbb
inc
rol
(bad)
dec
add
and
adc
lods
es
sbb
xchg
sbb
or
jmp
mov
ins
loopne
adc
jecxz
dec
inc
and
call
mov
and
inc
adc
inc
xor
call
cmp
test
add
sub
addr16
inc
mov
mov
cmp
test
fldcw
pop
jo
sub
add
sub
add
xlat
gs
push
push
adc
adc
test
shl
les
les
dec
sub
sbb
and
call
push
mov
push
pop
cmps
xor
dec
pop
frstor
dec
cmp
stos
and
sbb
xchg
sbb
call
xor
and
sbb
and
imul
sub
add
or
ins
ins
add
ror
mov
add
mov
or
xor
or
mov
int
sub
add
cmp
add
add
sbb
cmps
imul
sbb
sub
sbb
mul
and
pop
xchg
adc
or
pop
(bad)
int
sub
or
aas
xchg
pop
movs
hlt
sub
or
sbb
or
mov
ror
push
aad
mov
adc
xchg
inc
adc
push
push
mov
sar
aam
or
inc
enter
pop
push
popa
pop
stos
out
frstor
jne
(bad)
(bad)
push
add
cwde
sub
dec
add
adc
add
pop
sti
inc
inc
adc
push
test
mov
fcmove
cmps
push
push
xchg
push
test
test
jnp
lods
adc
mov
rcl
and
and
mov
lods
daa
lea
or
xchg
xchg
xor
cmovs
xchg
cwde
dec
push
jecxz
test
movs
dec
enter
imul
bound
mov
es
out
movs
push
dec
ror
mov
test
pop
mov
std
jno
stos
cwde
dec
mov
dec
inc
cmp
fwait
xlat
sub
(bad)
adc
bound
jne
xchg
push
dec
sbb
or
push
cmps
(bad)
cmp
sub
sub
push
and
rol
outs
add
mov
add
outs
add
enter
push
or
bound
inc
mov
dec
or
loopne
test
and
fisubr
push
pop
call
ins
int
adc
and
fst
aad
mov
inc
mov
pop
sbb
and
cmp
add
add
push
retf
inc
ret
pop
les
add
sub
mov
sbb
add
(bad)
add
jne
push
xchg
add
call
inc
and
imul
or
pop
stc
sub
fild
shl
int
add
push
lods
movs
bound
xchg
cwde
or
or
shr
sbb
sbb
or
sbb
mov
out
pop
cmps
add
icebp
add
mov
mov
pusha
or
inc
sbb
or
sub
sbb
mov
(bad)
push
xor
and
lods
push
movs
mov
scas
xchg
dec
aam
lods
add
cmp
xor
(bad)
sub
imul
(bad)
mov
or
retf
shl
mov
and
pop
jns
pop
and
and
(bad)
sub
gs
mov
test
cmps
inc
mov
push
lods
dec
push
jno
add
fistp
adc
sti
add
add
jbe
inc
inc
ret
sub
je
xchg
cmp
inc
add
add
popa
add
xchg
aaa
xor
cmps
mov
adc
xchg
imul
cdq
stos
sbb
adc
push
sub
sbb
lea
push
ins
lahf
push
and
and
adc
mov
adc
sub
xor
sbb
movs
or
add
or
mov
push
fild
test
enter
jecxz
movs
pop
mov
jnp
jns
add
adc
inc
jne
sbb
add
retf
sbb
mov
sub
sbb
push
sti
inc
and
pop
add
imul
adc
test
xchg
lods
add
adc
push
push
and
or
inc
pop
mov
aaa
add
jecxz
add
addr16
(bad)
cmp
adc
add
add
inc
jmp
sbb
xor
mov
or
xchg
bound
stos
and
stos
aam
xor
add
push
ins
sub
mov
or
sbb
iret
add
inc
pop
adc
lea
dec
cmp
push
lods
adc
repz
fld
daa
mov
cmps
lea
sub
lds
mov
adc
push
inc
lahf
mov
bound
fstp
imul
mov
dec
scas
inc
pop
or
inc
mov
test
and
mov
fs
add
sub
and
xchg
jmp
dec
or
adc
retf
push
aad
dec
or
dec
dec
inc
pop
or
add
xor
inc
or
add
int3
test
push
ret
adc
adc
adc
or
sub
test
call
xor
and
dec
pop
daa
fistp
inc
out
add
test
nop
cmps
inc
dec
push
add
sbb
sbb
aas
call
fcomp
mov
jmp
xor
mov
and
mov
cmp
push
add
and
cdq
ror
inc
ins
arpl
jmp
mov
mov
add
add
sub
inc
and
shl
mov
addr16
jmp
lods
and
popf
rcl
(bad)
and
jno
or
add
mov
mov
pop
daa
push
imul
or
ret
mov
mov
lods
add
mov
add
push
sbb
mov
inc
and
push
pop
sti
xchg
and
adc
mov
adc
fmul
fild
call
pop
xor
jno
adc
test
ret
sub
mov
lds
add
test
jmp
aaa
or
sbb
and
jmp
mov
add
or
arpl
add
xor
mov
mov
mov
xchg
add
mov
pop
daa
push
nop
(bad)
pop
dec
ins
stos
add
ja
add
mov
add
and
aas
mov
pusha
addr16
leave
rol
push
cmp
movs
push
add
inc
pop
rcl
adc
push
xchg
aad
adc
or
dec
adc
pop
sbb
ror
xor
and
jge
xor
or
pop
xchg
mov
add
add
and
push
pop
sub
imul
xchg
mov
push
aam
push
cdq
aam
adc
or
imul
pop
xchg
adc
add
adc
or
mov
icebp
ins
xchg
test
or
in
mov
adc
mov
xchg
inc
xchg
test
add
mov
pusha
or
mov
ins
sbb
stos
add
aad
inc
pop
stos
cs
xchg
sbb
mov
retf
jecxz
or
adc
mov
fwait
push
daa
xor
jno
shl
gs
jmp
add
stos
dec
push
inc
sti
pop
sub
inc
ja
add
(bad)
test
lds
adc
test
jne
pop
mov
and
sub
imul
lea
mov
call
xchg
add
sbb
inc
add
sbb
xor
push
aas
call
add
mov
or
adc
imul
and
mov
push
adc
sbb
blcs
or
xchg
add
icebp
mov
adc
push
mov
push
jne
fwait
ins
push
sbb
add
aad
lods
sub
and
sbb
xlat
jnp
add
aad
ror
repnz
add
mov
push
icebp
jmp
dec
mov
xchg
mov
jns
imul
add
add
test
aad
jne
adc
repz
(bad)
adc
leave
mov
cmp
test
inc
sub
imul
test
inc
push
dec
aas
and
add
addps
fs
dec
movs
fwait
pop
jne
or
fild
imul
(bad)
sbb
fisttp
add
add
xchg
(bad)
imul
and
fcmovbe
sbb
arpl
mov
inc
dec
push
fldenv
shr
imul
jo
inc
xor
shl
pusha
lods
add
inc
daa
stc
rcl
push
and
sub
or
and
dec
sub
shr
test
adc
push
dec
inc
test
popa
pop
add
sbb
adc
pop
mov
jne
stos
mov
lods
adc
push
pop
adc
sbb
fwait
ds
push
fstp
rol
imul
sub
xlat
and
xlat
repnz
mov
rcl
mov
and
xchg
lods
inc
rcr
movs
xchg
test
imul
adc
lods
out
push
inc
sub
movs
lea
and
push
adc
adc
rol
xchg
sbb
jnp
inc
add
leave
push
add
adc
(bad)
mov
push
dec
dec
stos
stos
dec
pop
add
dec
adc
xor
cmp
xor
sub
call
rol
pop
mov
push
call
les
xor
push
push
sub
sub
ficomp
push
fist
dec
or
ror
fld
pop
lds
int
adc
lods
add
push
adc
les
add
cmp
pop
or
or
mov
sub
dec
push
adc
mov
and
or
popf
inc
add
ins
jmp
pop
sbb
adc
jne
push
leave
pop
add
(bad)
add
add
pop
and
mov
mov
mov
push
cmp
mov
(bad)
mov
andnps
jmp
test
inc
inc
inc
add
jae
mov
lds
aas
xchg
adc
inc
int3
frstor
inc
test
inc
sub
pop
add
sub
imul
mov
sub
call
adc
adc
mov
daa
nop
pop
outs
inc
mov
sub
dec
xor
or
pop
mov
push
popa
add
inc
sub
popa
xor
push
cmp
xor
add
and
pop
or
inc
inc
inc
mov
push
mov
adc
dec
mov
jno
pop
ret
mov
lahf
pop
and
mov
sbb
mov
imul
enter
xchg
fcom
and
fisttp
push
or
lea
inc
loop
mov
pop
out
lods
adc
xchg
push
dec
cdq
aaa
mov
dec
xor
in
add
sub
sub
popa
push
push
add
mov
popf
mov
lods
dec
add
mov
or
(bad)
retf
sbb
dec
adc
fdivr
push
push
cwde
(bad)
jmp
pop
mov
adc
jne
test
add
xchg
sub
mov
adc
inc
mov
bound
dec
leave
push
test
add
pop
pop
push
xchg
das
pop
daa
mov
loope
mov
stos
and
inc
pop
jg
xor
and
shl
jne
mov
sub
rol
adc
lods
mul
jmp
outs
or
mov
dec
pop
or
add
adc
ret
add
adc
lods
add
pop
xor
pop
sub
test
pusha
push
das
push
lea
add
mov
and
or
push
xchg
iret
push
fadd
test
lds
add
jno
sub
inc
add
xor
dec
inc
sub
or
movs
cwde
sub
mov
lds
pop
mov
adc
pop
enter
ror
adc
xchg
mov
xchg
ins
or
retf
lods
mov
adc
or
call
pop
add
push
mov
ins
sbb
scas
mov
or
xchg
xchg
pop
adc
mov
pop
mov
add
cmp
add
pop
push
rcl
jmp
push
add
or
or
push
mov
push
daa
dec
movs
out
fwait
and
nop
sbb
push
xchg
lahf
and
or
xor
xor
pop
invd
mov
xor
inc
push
fadd
or
test
and
inc
ins
cwde
or
sbb
add
sbb
inc
inc
mov
push
sub
sub
cmc
ins
arpl
rol
stos
xchg
pop
and
sbb
stos
or
add
movs
push
jne
stos
iret
sub
and
imul
mov
mov
add
stos
add
dec
and
test
cmps
sbb
xor
pop
add
movs
retf
adc
inc
xchg
push
add
add
xchg
mov
les
aam
adc
add
add
iret
pop
pop
sub
imul
inc
pusha
inc
cmp
inc
mov
arpl
imul
sbb
xor
push
push
push
add
mov
cwde
movs
fs
add
add
sub
repnz
inc
sub
cdq
add
stos
sub
ror
test
std
dec
push
nop
bound
dec
mov
rcr
adc
jge
or
dec
pusha
rcr
and
fiadd
add
sub
xchg
movs
xchg
sub
mov
xchg
add
outs
add
bt
mov
and
inc
add
sbb
push
push
retf
or
mov
sub
add
add
mov
stos
loopne
sti
xor
or
(bad)
adc
push
retf
lea
adc
add
push
inc
adc
retf
(bad)
rol
sbb
push
mov
cmp
and
push
inc
imul
xlat
or
mov
cmp
add
mov
fcmovbe
cmp
mov
mov
mov
loop
mov
(bad)
mov
adc
pusha
adc
lahf
adc
nop
add
sbb
out
push
push
push
adc
retf
bound
mov
cdq
inc
lods
or
lods
xor
dec
std
movs
or
jg
mov
push
and
add
adc
and
call
adc
shr
xor
mov
push
pop
push
mov
sub
popf
imul
(bad)
shr
sub
push
lds
adc
retf
and
xor
inc
int
sbb
mov
add
mov
mov
mov
or
or
mov
adc
and
xchg
add
and
cmp
sbb
outs
adc
nop
lods
test
stos
jecxz
push
les
pop
add
pop
mov
sub
pop
or
mov
mov
bound
push
and
mov
shr
jmp
add
lods
jns
pop
inc
cmp
inc
mov
icebp
push
inc
adc
call
add
icebp
cmc
mov
mov
mov
or
xchg
jns
pop
add
push
sub
(bad)
dec
or
inc
add
aam
fwait
or
xchg
mov
(bad)
adc
mov
cld
adc
sub
adc
push
pop
add
inc
cmp
lahf
sbb
sbb
pop
mov
pusha
push
jecxz
rol
fnsave
mov
sub
inc
xchg
xor
push
cmp
adc
mov
cmc
and
dec
inc
jmp
mov
inc
cdq
add
mov
imul
and
and
add
pop
push
xchg
or
jae
pop
push
sub
out
pop
add
push
jge
loopne
push
iret
xor
movs
xor
test
push
add
pop
push
mov
cwde
dec
add
test
or
stos
fwait
mov
mov
leave
popf
test
adc
movs
mov
add
or
cmp
sub
push
jns
and
push
xchg
pop
sub
and
sub
shr
or
dec
push
or
and
or
add
mov
add
cmp
adc
push
pushf
sbb
push
mov
sbb
dec
or
mov
xchg
mov
adc
or
push
mov
daa
adc
dec
out
sub
or
pop
or
or
add
je
pop
popa
adc
and
or
inc
inc
test
test
add
push
sub
adc
inc
daa
pop
shl
add
sub
add
rol
add
add
leave
sbb
lds
or
adc
gs
and
xor
mov
dec
sbb
inc
xor
mov
pop
imul
adc
adc
lahf
mov
movq
mov
arpl
inc
dec
sub
aaa
mov
adc
or
aam
dec
lods
add
and
aad
imul
jmp
mov
and
mov
sbb
sbb
push
ret
fld
xchg
icebp
add
sub
xchg
xor
ret
mov
dec
test
and
popa
xor
mov
ja
popf
pop
fstp
pop
or
fcom
(bad)
dec
ret
add
sub
call
mov
fldenvw
and
add
pop
fbld
adc
or
cdq
inc
ss
fwait
sbb
dec
mov
fild
push
adc
add
imul
add
arpl
lods
xor
sub
jecxz
sbb
dec
shl
xor
xor
dec
inc
sub
jmp
or
pop
das
pop
sub
xor
sub
loope
add
dec
mov
sub
dec
outs
cwde
or
stc
lds
or
sub
mov
push
adc
and
fiadd
lahf
and
pop
mov
test
dec
pusha
inc
cmp
adc
or
ins
adc
mov
lahf
(bad)
push
add
test
add
add
pop
add
add
int
jo
pop
arpl
xor
bound
mov
and
or
add
jns
dec
sbb
add
and
lods
add
movs
inc
mov
mov
sub
and
dec
aad
push
pop
push
out
shr
inc
inc
or
lds
leave
sbb
pop
scas
mov
rcr
(bad)
std
adc
adc
add
(bad)
lods
and
pop
and
add
adc
and
and
stos
sbb
imul
cwde
iret
push
sub
or
addr16
sbb
test
fst
push
or
jb
adc
adc
pop
test
mov
add
or
pop
mov
pop
loope
cmp
adc
cmp
addr16
jg
and
pop
arpl
jg
push
adc
stos
enter
push
jno
scas
adc
adc
adc
lea
test
add
and
push
push
or
sbb
jge
xlat
push
test
pop
push
add
xchg
add
xchg
inc
jmp
inc
jo
mov
push
sub
xor
inc
popf
and
push
arpl
sbb
xor
mov
ins
aaa
push
ret
test
inc
mov
or
inc
adc
adc
xchg
push
mov
test
mov
push
rol
xchg
dec
loopne
mov
inc
xor
dec
shr
out
inc
imul
or
cdq
sbb
pop
xor
add
loope
pop
push
test
dec
lea
mov
repz
ins
movs
cmp
push
dec
nop
or
add
dec
popa
push
inc
lds
inc
mov
loopne
inc
xchg
push
add
imul
pop
jmp
or
adc
sbb
xchg
adc
add
das
mov
adc
push
push
dec
movs
sbb
or
pop
dec
or
add
aam
adc
adc
push
add
aaa
adc
mov
add
sbb
aas
adc
std
xor
inc
lea
sub
and
or
inc
and
mov
xor
rol
adc
scas
xchg
inc
pusha
add
lahf
call
ins
lods
or
aad
push
ins
add
cmp
adc
aad
sub
cmp
data16
movs
adc
dec
dec
xor
test
jno
add
adc
mov
mov
and
cmc
and
add
mov
aas
adc
xor
cmp
xchg
ret
push
(bad)
stos
inc
xrstors
push
add
inc
mov
add
shr
sub
add
or
sub
xor
shl
adc
shl
add
add
sub
jmp
push
dec
lods
sbb
rol
or
jmp
dec
inc
mov
stos
jmp
push
xor
nop
or
adc
aaa
push
adc
mov
mov
pop
test
mov
(bad)
dec
and
ror
cmp
or
mov
jmp
or
in
sbb
mov
or
pop
sbb
popa
mov
cmp
sar
add
vunpcklps
inc
ins
(bad)
cmp
mov
adc
xor
sub
cmp
mov
jae
inc
and
cmp
dec
inc
mov
dec
add
add
rol
add
ret
push
adc
dec
cwde
mov
push
mov
and
mov
dec
test
sbb
sbb
adc
or
sbb
adc
dec
fild
and
mov
movs
add
imul
add
push
dec
movs
cmp
push
jmp
sar
je
add
sub
or
and
ss
pusha
pusha
push
lods
add
adc
sub
fisttp
push
mov
push
pop
daa
outs
inc
mov
fst
movs
pop
jo
adc
lds
ins
and
sub
sbb
dec
jecxz
inc
push
addr16
sub
push
scas
mov
es
inc
sbb
stos
cmc
scas
jnp
sbb
sbb
sub
inc
rol
cmp
test
and
sub
in
and
and
or
add
adc
stos
retf
dec
pop
adc
pause
mov
adc
inc
mov
stos
iret
das
and
rol
mov
inc
or
add
jg
mov
std
and
sub
and
cmp
sub
icebp
and
sbb
cmps
mov
adc
xchg
mov
xor
dec
cmp
or
and
sub
sbb
pop
mov
fs
mov
xchg
cdq
popa
push
push
pusha
rol
sbb
pop
mov
adc
adc
lea
xchg
mov
mov
push
test
xchg
adc
add
pop
mov
fwait
pusha
adc
sub
test
or
inc
add
inc
cdq
test
ins
and
dec
mov
pop
xchg
test
daa
xchg
loop
xor
mov
retf
push
add
gs
mov
inc
or
or
or
cmp
adc
mov
sbb
fld
dec
inc
movs
adc
gs
loop
add
aas
mov
ins
or
mov
and
or
xor
ror
xor
or
pop
les
mov
clc
push
xor
or
(bad)
stos
std
and
test
adc
mov
mov
aam
mov
mov
adc
dec
mov
mov
xor
cmp
push
ins
lea
or
(bad)
push
fisttp
push
shl
adc
mov
add
xor
sub
nop
dec
in
push
add
aad
jmp
jmp
and
lea
test
sub
adc
adc
pusha
or
dec
arpl
pop
add
les
mov
stos
mov
push
test
lds
inc
add
mov
push
scas
mov
inc
(bad)
rcl
stos
repz
add
push
pop
jo
adc
sbb
or
test
fist
mov
fwait
movs
sbb
push
inc
sub
ins
loope
mov
adc
cdq
jae
push
push
ret
xor
add
stos
outs
or
cmc
pop
lods
mov
pusha
shl
lea
fwait
pop
inc
daa
add
sti
or
inc
mov
mov
xor
xchg
or
sub
mov
dec
push
sbb
jae
mov
inc
pop
add
sub
jno
xchg
and
push
scas
xchg
add
add
push
or
mov
mov
stos
pop
movs
inc
fcom
(bad)
lods
and
xchg
xchg
pop
dec
jg
sbb
or
sbb
add
mov
xchg
sub
bound
or
cmps
sbb
popf
inc
stos
sub
test
pop
xor
sbb
jg
rcr
xchg
rol
test
inc
sub
push
mov
mov
adc
dec
fist
sub
pop
pop
sbb
cmp
sbb
or
or
pop
jne
pop
xor
and
leave
add
add
push
xchg
lds
sub
push
dec
adc
mov
mov
jmp
sub
cdq
add
or
inc
sub
push
mov
das
xor
xor
add
mov
and
loopne
popf
xchg
push
test
cdq
dec
mov
add
jge
add
mov
pusha
leave
ja
inc
movs
aad
and
(bad)
es
mov
sbb
adc
jno
xor
ins
inc
and
and
xor
xor
addr16
adc
mov
lods
cmp
(bad)
push
or
test
(bad)
ret
push
mov
and
mov
in
pop
sti
or
imul
dec
movs
cmc
je
push
mov
inc
push
pop
or
mov
inc
call
dec
add
sti
es
sbb
or
stos
stos
bound
and
adc
sub
dec
jne
stos
ss
sub
and
push
xchg
sbb
call
xor
mov
add
stc
push
add
jo
repz
shr
fwait
and
xchg
adc
adc
retf
mov
push
nop
add
stos
or
sbb
push
or
(bad)
and
and
adc
adc
and
or
jae
add
imul
add
cmp
in
add
fsubr
loop
jmp
nop
mov
popa
popa
rol
push
test
fwait
adc
inc
lds
sbb
aad
sub
ret
push
and
push
cdq
pop
push
movs
loopne
aad
mov
loopne
or
js
add
pusha
xchg
xor
or
pusha
and
or
inc
adc
pop
ror
test
add
mov
mov
dec
(bad)
sub
mov
mov
test
aad
and
sub
jge
and
or
inc
pushf
or
adc
add
sub
or
sub
adc
lds
sub
test
sub
mov
xor
pop
and
push
push
or
inc
jg
push
retf
inc
inc
add
push
or
mov
mov
sub
push
adc
ja
test
xchg
sbb
mov
mov
mov
push
inc
test
xchg
jecxz
rcl
cmps
pop
inc
xchg
and
mov
inc
add
add
inc
stos
cmp
add
push
xor
push
xchg
mov
mov
cmps
mov
push
mov
pop
sbb
xor
add
push
out
add
xor
add
pop
push
and
aas
add
pop
add
xor
pop
cs
push
push
jno
mov
dec
add
mov
fcmovb
mov
adc
bound
pusha
sbb
add
stc
outs
sar
mov
pop
push
or
push
add
and
dec
shl
push
mov
das
add
or
and
stos
xchg
inc
test
mov
cmp
test
mov
xchg
pop
dec
jne
add
pop
push
ins
sbb
add
pusha
pop
lea
add
inc
mov
sbb
retf
dec
ror
inc
pop
sbb
movs
mov
test
mov
sbb
mov
and
inc
sub
and
mov
mov
add
adc
stos
test
or
jne
push
jns
sub
or
and
add
inc
rol
js
cmc
mov
fwait
test
xchg
push
and
and
push
adc
rol
cmc
adc
adc
push
push
add
(bad)
xchg
jo
test
adc
sbb
add
sub
dec
push
and
jecxz
sub
add
and
inc
sub
test
aad
ins
sbb
push
inc
sbb
mov
push
and
adc
mov
mov
inc
ins
sub
pop
xor
and
sub
push
stos
test
scas
dec
sub
inc
xchg
mov
(bad)
xor
and
push
or
inc
or
pop
add
adc
lahf
xor
dec
and
adc
push
movs
mov
or
enter
test
mov
mov
mov
arpl
std
xchg
nop
xor
mov
xchg
and
xchg
mov
add
xor
add
aaa
sub
test
add
jno
icebp
adc
adc
int
or
push
mov
xchg
xor
sub
mov
and
inc
mov
push
adc
pop
push
add
push
and
adc
pop
and
test
and
pusha
lods
jecxz
xchg
push
pop
jge
nop
jo
push
pop
inc
sub
xor
add
(bad)
rol
or
sbb
es
xchg
pop
or
dec
add
mov
imul
xchg
pop
xor
xchg
and
les
inc
nop
mov
or
lods
sbb
xchg
and
mov
loope
add
ins
jno
stos
outs
ret
movs
push
adc
jmp
sbb
sbb
outs
push
add
adc
adc
sub
arpl
bound
push
sub
inc
rol
push
pop
add
stos
push
add
inc
rcl
adc
adc
out
sbb
adc
sahf
test
or
push
adc
adc
xor
push
add
xor
xor
dec
add
leave
sub
add
add
adc
mov
sbb
xchg
mov
dec
adc
xchg
or
push
inc
test
sub
pop
inc
add
and
or
mov
jecxz
repz
shl
mov
add
aas
sub
sbb
inc
ret
or
sub
add
pop
push
push
sub
or
test
sub
jg
and
add
popa
add
sub
or
xchg
stos
test
pop
gs
and
or
adc
lods
lods
lods
pop
sub
xchg
nop
jns
pop
mov
test
sbb
adc
or
lea
data16
xchg
sub
mov
push
(bad)
mov
push
movs
lea
nop
sbb
push
les
adc
add
aaa
add
call
das
xor
and
or
mov
and
cmp
jmp
xchg
test
test
ror
adc
(bad)
fstp
push
imul
adc
sbb
jno
adc
push
imul
adc
push
shr
mov
mov
mov
pop
mov
add
lods
push
popf
xchg
xchg
test
push
inc
adc
or
adc
mov
and
shl
ins
push
mov
lods
pop
inc
aam
test
dec
test
push
adc
push
inc
xchg
cmp
lods
lods
lods
lods
and
inc
leave
lods
lods
fst
inc
push
dec
fwait
push
inc
adc
inc
es
add
push
imul
adc
mov
mov
push
cdq
inc
lea
adc
add
push
dec
sbb
push
inc
sub
pusha
adc
adc
mov
jae
mov
mov
aas
push
int
xor
test
xor
jmp
or
ja
dec
inc
ret
inc
adc
push
adc
add
add
or
push
sub
adc
sub
aad
push
inc
mov
add
xchg
push
scas
lods
call
inc
stc
pushf
dec
adc
add
push
push
push
rcl
fbld
add
dec
inc
adc
leave
movs
add
inc
mov
mov
mov
lods
das
inc
je
mov
and
and
push
xlat
mov
stos
or
dec
and
xchg
mov
and
mov
nop
(bad)
cmp
adc
jo
popa
adc
add
inc
push
rcl
jno
and
add
adc
adc
push
mov
test
cmp
stc
pop
push
lds
mov
xchg
mov
(bad)
mov
jno
add
xor
or
xchg
push
test
and
pop
push
add
mov
adc
fisub
push
jae
stos
adc
mov
fwait
test
push
lea
popf
adc
test
xor
pusha
push
xor
mov
inc
xchg
push
repz
xor
add
cmp
adc
xor
adc
and
xchg
sbb
int
add
popa
and
mov
and
inc
push
or
das
adc
or
push
inc
or
and
sub
sub
ret
or
test
or
xchg
add
fstp
movs
add
add
sub
xchg
sub
sub
or
cmc
add
xchg
mov
and
arpl
out
outs
push
add
pop
mov
iret
stos
cwde
es
test
cli
stc
call
xor
dec
adc
or
add
loop
xchg
sub
mov
dec
pop
push
pop
mov
jmp
pusha
push
lds
(bad)
aas
or
and
or
cmp
adc
outs
push
mov
or
push
test
sub
xor
movs
jne
pop
xor
std
inc
xor
sbb
inc
test
push
adc
lea
dec
test
lds
das
arpl
dec
dec
xor
or
mov
add
icebp
ret
dec
mov
stos
pop
or
adc
inc
push
xchg
pusha
fild
(bad)
sub
jno
add
cs
push
and
add
shr
add
sbb
adc
add
push
xor
xchg
loopne
mov
mov
mov
dec
mov
test
mov
cmp
ret
inc
and
les
test
(bad)
daa
push
adc
add
and
fldenv
test
add
adc
adc
push
adc
push
and
fnstenv
adc
add
es
mov
les
sbb
push
sub
adc
jg
sbb
lods
add
(bad)
stos
mov
xchg
sbb
sub
xchg
or
and
inc
add
inc
scas
add
inc
and
adc
adc
dec
push
xchg
mov
add
push
push
or
movups
mov
mov
adc
test
xor
and
mov
add
cwde
sbb
mov
lods
sbb
pop
jge
or
stos
sub
sbb
mov
popf
(bad)
sub
mov
pop
sub
adc
retf
push
mov
add
add
cmp
pop
add
fld
imul
push
push
xor
add
add
push
xor
xlat
add
bound
sub
pop
add
xchg
ins
popa
dec
mov
popa
lods
adc
adc
adc
or
sub
pop
push
inc
or
add
and
lahf
lods
push
or
xchg
dec
out
inc
rol
outs
rol
jno
add
mov
sbb
inc
jge
adc
or
sbb
sbb
or
retf
add
and
imul
fcmovb
cwde
xchg
rol
and
mov
or
push
scas
add
fist
mov
inc
movs
and
imul
push
push
add
rcr
and
inc
mov
loope
push
dec
push
add
dec
inc
pop
cmp
aad
ins
pop
mov
cmp
add
adc
xchg
or
addr16
add
fsubr
dec
push
add
push
adc
and
push
or
inc
iret
aas
rcl
cs
cmp
imul
push
inc
dec
or
xor
(bad)
adc
in
adc
and
das
pusha
aaa
mov
sahf
popf
(bad)
(bad)
call
sbb
aas
jmp
stc
mov
retf
mov
push
inc
(bad)
(bad)
jg
js
jb
cmp
ss
push
push
jle
jp
mov
(bad)
(bad)
jg
mov
arpl
imul
outs
ins
inc
inc
inc
jg
jge
retf
(bad)
mov
jno
inc
pop
push
jnp
js
pop
pop
in
add
add
(bad)
imul
inc
inc
sbb
pop
and
cwde
xor
call
ficomp
add
lahf
sahf
popf
cli
dec
repz
dec
int
pop
pop
pop
dec
dec
dec
push
mov
imul
mov
dec
repz
xchg
aam
aas
(bad)
xchg
stos
cmps
imul
popa
call
sbb
fiadd
lds
cwde
cmps
imul
cmps
imul
xor
or
es
sub
pop
leave
jle
arpl
or
or
push
arpl
in
xor
dec
adc
sbb
icebp
into
std
sub
push
or
jns
add
je
push
adc
cmp
xor
xor
cmp
add
and
add
leave
and
and
or
and
pop
sbb
sub
or
dec
and
add
jb
les
aaa
inc
add
add
shl
or
bound
mov
dec
mov
adc
adc
nop
xor
inc
sbb
jae
(bad)
adc
cmp
ror
cmps
mov
or
jmp
push
adc
outs
adc
push
add
inc
cmc
fwait
and
xchg
or
add
sti
or
mov
sbb
sub
stos
mov
adc
jecxz
or
jns
xor
mov
icebp
outs
ficom
push
sbb
imul
or
arpl
push
add
call
add
in
(bad)
adc
and
adc
int3
pop
cdq
ret
ins
dec
les
or
and
cmps
imul
test
add
mov
test
(bad)
adc
add
pop
add
rol
inc
push
xor
pop
or
inc
enter
pop
rcr
test
pop
pop
adc
jmp
sub
nop
add
loopne
mov
mov
stos
lea
sbb
or
adc
mov
or
add
add
mov
xchg
imul
add
adc
pop
adc
inc
and
and
jmp
mov
cld
outs
and
mov
pop
(bad)
mov
ins
pop
sbb
sbb
jmp
ret
fiadd
test
push
movs
popa
or
aad
add
adc
test
inc
add
daa
xlat
add
add
pop
and
push
sbb
fisubr
mov
mov
or
add
and
bound
sub
les
adc
inc
fmul
and
adc
xlat
sub
add
popf
pop
pop
add
inc
adc
sub
lea
inc
add
sti
pop
xchg
add
cmp
add
sub
sub
jecxz
retf
xchg
cmp
ss
ins
add
push
sbb
mov
jl
cs
jbe
or
ins
jo
sbb
outs
addr16
sahf
sub
or
lods
dec
and
sub
mov
outs
jns
je
and
js
out
jbe
data16
jo
arpl
jl
aas
leave
push
fadd
out
dec
inc
ins
popa
jl
push
jge
pop
xchg
xor
jl
inc
inc
push
jb
imul
and
inc
dec
inc
inc
mov
or
dec
jl
and
gs
leave
jbe
push
inc
xor
push
inc
jnp
out
pusha
ja
inc
inc
dec
adc
inc
jbe
dec
xor
jl
push
push
push
xchg
jl
clc
retf
imul
push
xor
cmp
push
jl
loop
popa
rol
mov
and
inc
pop
xor
xor
mov
mov
or
and
fbstp
imul
mov
or
leave
dec
adc
mov
push
xor
dec
push
clts
cmp
mov
fs
jae
mov
add
add
pop
in
mov
dec
pop
inc
jae
mov
jae
mov
jns
es
and
add
inc
lds
adc
sbb
dec
mov
pop
adc
pop
dec
or
dec
dec
adc
dec
xor
sbb
dec
adc
push
sbb
aaa
and
and
add
in
xor
jo
mov
cdq
adc
or
ins
mov
ja
test
mov
and
and
test
(bad)
mov
xchg
adc
add
shl
adc
int3
sub
push
jmp
mov
or
jge
push
es
mov
add
sub
push
popa
cmp
inc
push
jne
psraw
jae
sbb
es
in
mov
popf
sub
add
arpl
and
cs
sub
pop
mov
sbb
ja
or
mov
jmp
es
(bad)
and
scas
push
or
ror
mov
sbb
xchg
dec
xor
adc
jnp
out
movs
sbb
mov
or
xchg
dec
xor
data16
arpl
inc
arpl
es
and
pop
and
or
and
jg
jecxz
jno
dec
arpl
adc
push
ins
jo
cmp
test
or
jg
lds
or
pusha
movs
in
push
imul
test
add
pop
push
push
mov
push
gs
and
(bad)
adc
and
add
es
pop
fs
add
outs
jo
fs
addr16
sub
xchg
pusha
sub
pop
jnp
jnp
sub
mov
xchg
add
mov
adc
int3
jle
dec
mov
es
xor
inc
and
cmp
lods
dec
add
jnp
mov
(bad)
push
das
pop
imul
and
and
and
pusha
fist
xchg
sub
dec
cmps
gs
ins
imul
mov
es
dec
add
shl
mov
aaa
cs
imul
push
sub
pop
dec
mov
dec
push
sbb
jns
sub
loope
sbb
and
imul
adc
out
and
cmp
sbb
or
add
stos
imul
mov
daa
jns
add
cmp
fwait
es
inc
push
fild
mov
nop
mov
daa
inc
cmp
fstp
daa
es
xor
xor
sub
or
jo
xlat
jae
inc
xor
and
stos
sbb
inc
fst
push
shr
push
add
xor
or
ret
adc
add
(bad)
fst
dec
jne
call
push
xchg
sub
sbb
push
or
jnp
rcr
jmp
pop
pop
(bad)
ins
leave
inc
push
add
cmp
pop
rol
cwde
and
enter
imul
xchg
sub
push
push
xchg
jae
lods
add
leave
cmps
or
adc
inc
popa
fs
mov
ins
and
push
mov
sti
inc
ret
jp
jae
es
cs
ror
dec
mov
popa
and
ins
push
adc
cmp
es
adc
cmp
inc
shl
jmp
adc
aas
mov
sub
add
inc
gs
push
and
dec
fld
cmp
stos
jne
loopne
jmp
push
mov
or
push
int3
verr
cmp
add
dec
sti
popf
fdiv
sub
popa
jle
inc
mov
push
fidiv
arpl
and
rol
and
pop
imul
mov
inc
dec
pop
mov
cmp
ins
enter
test
sbb
mov
lds
and
xor
dec
add
test
push
aam
imul
adc
mov
add
cwde
jecxz
jae
push
xchg
and
push
lds
stc
or
adc
push
and
dec
popa
pop
add
or
gs
sub
inc
or
lods
mov
jne
pop
sub
xchg
ins
inc
aaa
scas
lea
test
and
and
cmp
es
push
mov
and
xor
mov
inc
enter
sbb
sbb
add
xor
pop
pop
or
or
shl
adc
mov
xlat
ins
and
inc
pop
pop
sub
shl
sbb
(bad)
daa
jecxz
stos
sub
push
xor
push
es
and
es
les
ins
xchg
mov
icebp
push
and
add
inc
jno
adc
adc
and
sbb
ins
and
ror
test
es
xchg
sbb
or
xchg
pop
daa
cwde
adc
push
sbb
ss
xchg
inc
cmps
xchg
xor
adc
adc
add
add
(bad)
bound
movs
adc
pop
push
mov
stc
xchg
mov
daa
xor
and
adc
ror
mov
cld
cmp
or
test
test
xchg
adc
and
pop
xor
ror
in
(bad)
imul
mov
pop
pop
add
adc
add
idiv
xchg
ja
les
sti
(bad)
push
inc
xlat
mov
gs
sub
jecxz
jmp
les
add
add
inc
ret
and
in
add
add
sbb
mov
cmps
loope
sbb
and
(bad)
fcmovbe
cdq
jnp
and
pop
fwait
sar
xlat
or
sbb
(bad)
fcmovnbe
test
cmc
pop
add
sti
adc
dec
or
pop
add
pop
add
popa
mov
adc
sub
inc
mov
pop
add
add
gs
bound
das
or
gs
add
add
push
push
test
push
or
aad
push
adc
lods
dec
mov
or
xor
pop
adc
pop
test
push
pop
mov
mov
push
mov
mov
out
je
mov
push
push
in
sbb
ins
and
push
inc
xchg
jmp
inc
push
lods
dec
in
adc
sub
adc
and
movs
nop
push
adc
push
mov
outs
adc
push
shl
daa
repz
xor
cmps
cmovl
js
imul
popa
fstp
and
xchg
outs
pusha
cmp
or
adc
imul
or
push
xlat
dec
scas
fwait
shl
jl
dec
xor
push
mov
ret
mov
add
sub
jo
add
inc
sbb
adc
sbb
inc
stos
inc
fwait
lea
imul
or
add
add
in
outs
sbb
mov
test
ins
and
test
ror
adc
xor
ins
push
sub
in
xor
mov
lea
or
movs
mov
es
jo
in
or
push
or
pop
rcr
jbe
add
dec
cmc
das
fcom
in
jae
jg
mov
scas
imul
inc
frstor
sub
bound
adc
fild
add
outs
stc
popf
loopne
sub
push
xchg
adc
push
or
ret
in
cmps
or
std
add
adc
sbb
xchg
test
add
pop
or
aas
aaa
sar
sbb
sub
and
jl
(bad)
out
push
sub
inc
add
ret
or
es
mov
mov
push
test
in
add
inc
js
je
lea
(bad)
out
mov
shl
add
adc
arpl
or
jae
aaa
les
or
retf
cmp
out
cwde
fimul
es
adc
jl
adc
or
jo
xor
cmp
inc
sub
jne
pop
arpl
pop
sub
inc
and
or
push
and
sbb
or
dec
push
xor
inc
push
sbb
add
pusha
adc
or
xor
outs
adc
es
ins
rcl
pusha
adc
jnp
das
add
add
xchg
sub
dec
pop
mov
movntps
adc
or
popf
bound
dec
and
or
daa
mov
loopne
mov
adc
add
mov
or
xadd
push
stos
ins
sbb
xchg
mov
xor
and
sbb
stos
pop
cs
cmp
ret
mov
cmc
loope
leave
or
(bad)
mov
out
std
push
gs
push
sub
lds
dec
xor
pop
sti
add
jno
xchg
add
and
sub
xor
sbb
ret
adc
or
add
mov
adc
sbb
fist
js
add
inc
sub
and
xor
sbb
push
push
jp
dec
loopne
sub
and
push
push
add
sbb
cmp
push
dec
pop
dec
xor
sub
bound
or
and
outs
popa
mov
or
pop
popa
pop
xor
gs
xchg
push
mov
fld
pop
loop
ror
add
add
fild
mov
adc
(bad)
out
out
(bad)
add
jg
je
les
and
mov
sbb
and
jae
es
pop
mov
popf
pop
fild
and
pop
fwait
nop
stos
and
push
add
sub
(bad)
mov
sbb
adc
sub
les
shr
inc
inc
je
imul
xchg
push
int
xor
jmp
and
and
nop
mov
or
adc
and
push
add
sbb
cmp
push
imul
add
cmp
push
dec
xor
mov
outs
imul
les
fcomi
sub
cmps
pop
fisttp
sbb
ins
or
test
ss
movs
neg
and
dec
cmp
mov
mov
or
fist
xor
push
mov
inc
loopne
pop
push
fld
adc
inc
or
adc
es
les
push
sub
add
sti
std
sbb
xchg
or
aaa
mov
stos
xchg
and
and
loop
aas
sub
jae
sar
(bad)
fst
pop
sbb
dec
or
sahf
(bad)
fiadd
push
sub
cmp
jb
fstp
in
adc
and
push
sbb
sub
or
ror
pop
add
lahf
inc
and
test
pop
and
je
adc
add
push
and
add
mov
loope
mov
sub
add
cdq
and
leave
pop
mov
adc
inc
pop
dec
adc
das
sub
test
fadd
inc
sti
sub
add
imul
aas
(bad)
sbb
or
movs
add
sbb
push
and
imul
mov
and
push
and
sbb
push
sbb
sbb
dec
jo
add
ficomp
adc
cmp
dec
sbb
icebp
(bad)
fs
jmp
push
daa
aad
dec
outs
sub
mov
aad
inc
arpl
or
add
push
test
sub
push
cmp
psraw
adc
imul
jecxz
sbb
les
imul
popa
push
mov
mov
pop
stos
adc
test
mov
mov
sbb
inc
es
movs
xchg
xor
xchg
ret
adc
retf
fcom
mov
ins
inc
clc
or
or
mov
xor
lds
pop
and
(bad)
dec
xchg
dec
dec
adc
mov
pop
sub
inc
inc
mov
or
(bad)
jg
push
and
jg
les
adc
(bad)
xor
js
hlt
movs
inc
xor
jmp
and
mov
jmp
out
in
out
in
out
int3
out
xor
(bad)
(bad)
(bad)
mov
lock
xor
stc
jle
iret
outs
mov
add
fisub
mov
(bad)
push
cld
popa
pop
into
push
call
shl
frstor
ins
pop
xchg
arpl
aaa
sti
scas
aaa
(bad)
(bad)
(bad)
push
push
adc
gs
sar
jecxz
mov
ja
xchg
imul
inc
jnp
in
enter
xchg
(bad)
(bad)
(bad)
dec
outs
aas
test
push
clc
push
mov
dec
mov
dec
lds
pop
sbb
push
mov
(bad)
push
pop
or
xchg
mov
adc
xlat
das
and
xor
jns
push
dec
xor
push
or
xlat
call
jg
stos
iret
adc
(bad)
(bad)
(bad)
dec
xchg
aam
rcr
ds
mov
rcl
and
or
xchg
das
jmp
pusha
ret
dec
repz
sti
mov
cmp
push
shl
mov
aam
in
cmp
(bad)
(bad)
call
jl
adc
jg
push
push
xchg
xchg
sub
sbb
push
dec
cld
pop
(bad)
mov
push
pop
(bad)
(bad)
(bad)
(bad)
jmp
adc
inc
arpl
inc
and
add
mov
(bad)
(bad)
(bad)
mov
push
cmps
aam
out
rcl
jne
pop
cmp
pop
in
sbb
xchg
xor
(bad)
(bad)
(bad)
inc
ret
mov
xchg
push
ror
mov
and
(bad)
(bad)
(bad)
jmp
cmps
mov
push
xchg
js
push
sub
dec
push
or
jo
xor
push
and
cwde
fwait
pop
inc
fs
(bad)
(bad)
(bad)
jmp
xchg
leave
sub
mov
or
out
and
int3
cmps
add
test
(bad)
(bad)
dec
in
les
(bad)
jns
sti
fnstcw
(bad)
jnp
xor
xchg
call
(bad)
(bad)
(bad)
jmp
jbe
pop
(bad)
mov
test
push
inc
clc
cmp
repnz
call
(bad)
cmp
call
xchg
test
rcr
pop
cmps
dec
jmp
push
dec
test
call
aam
(bad)
sub
lea
fsubr
out
cld
pop
ss
sub
push
pop
sub
add
or
push
dec
cs
inc
pop
dec
push
push
imul
sbb
into
inc
lods
xor
lods
cmps
shl
jp
mov
nop
ret
pop
push
sub
movs
adc
jmp
inc
nop
fcom
ins
mov
or
fdivrp
cmps
jae
and
sub
(bad)
jnp
mov
jle
sbb
add
sbb
sbb
mov
xchg
movs
push
sub
inc
(bad)
push
outs
js
pop
aas
xlat
lock
aaa
scas
cmp
mov
repnz
(bad)
(bad)
jmp
mov
fist
into
call
fadd
push
imul
(bad)
js
mov
add
pushf
inc
lock
dec
xchg
ret
mov
jo
ficomp
xor
(bad)
(bad)
push
mov
pop
mov
cmp
ds
dec
mov
cmp
cmp
ret
sbb
add
pushf
jno
xor
aas
mov
jmp
test
rcl
jmp
fwait
movs
mov
jmp
push
pop
aas
bound
cmp
dec
cmp
std
(bad)
(bad)
push
test
mov
pop
fild
xchg
add
data16
rol
push
inc
(bad)
mov
jl
pusha
call
push
adc
(bad)
jns
inc
bound
xor
jmp
jo
outs
add
xchg
movs
lods
lods
xchg
not
loopne
(bad)
jmp
sahf
imul
cdq
adc
pushf
fwait
(bad)
(bad)
(bad)
call
adc
dec
mov
retf
out
or
push
(bad)
mov
cmp
add
iret
or
(bad)
(bad)
(bad)
call
or
sub
ss
xor
xchg
sbb
(bad)
in
add
mov
or
icebp
push
(bad)
(bad)
(bad)
(bad)
mov
cmp
fucomp
inc
jb
xor
push
mov
cdq
ret
clc
js
or
iret
push
adc
(bad)
(bad)
jmp
jmp
or
imul
jb
aad
pop
xchg
enter
(bad)
(bad)
fcomip
push
xchg
shr
xlat
dec
inc
jge
daa
loop
xchg
and
or
mov
(bad)
call
pop
outs
mov
push
jnp
jbe
fisttp
dec
dec
fcomp
push
mov
lock
(bad)
push
and
stos
adc
mov
lods
jno
stos
es
push
adc
jge
inc
pop
add
aad
lock
rol
leave
test
ins
aaa
rcl
enter
aas
add
(bad)
call
add
inc
mov
lahf
mov
hlt
xchg
or
add
ins
(bad)
cld
fmul
mov
mov
retf
(bad)
(bad)
(bad)
jmp
aas
jg
aas
cmc
out
std
aaa
jmp
fistp
ins
fnstsw
pop
sti
loop
dec
outs
pop
inc
(bad)
(bad)
push
addr16
inc
inc
cmps
xchg
cmp
and
iret
pop
mov
inc
je
loop
retf
call
mov
ss
push
lock
cmp
div
cmp
jmp
inc
add
cmp
mov
mov
inc
(bad)
(bad)
(bad)
call
(bad)
pop
mov
mov
les
call
jnp
mov
(bad)
(bad)
(bad)
(bad)
std
jmp
pop
fistp
fidiv
mov
cld
(bad)
ja
ds
cli
div
scas
jg
(bad)
(bad)
in
xor
out
and
sbb
push
in
sti
out
pop
sbb
cdq
std
cwde
(bad)
(bad)
(bad)
call
std
arpl
scas
outs
out
push
out
pushf
loop
or
scas
or
std
cli
repnz
scas
cli
(bad)
inc
in
inc
jg
jge
lock
push
mov
fild
fwait
js
xor
dec
add
cmp
pusha
clc
dec
push
adc
(bad)
sti
leave
and
pop
cld
(bad)
jg
cwde
xchg
lods
sbb
sub
cmp
hlt
call
in
sbb
imul
xor
dec
scas
repnz
cli
out
add
pop
cld
(bad)
jmp
(bad)
pop
jg
(bad)
xor
loopne
cmc
out
push
es
fnstcw
xchg
adc
jmp
cmp
(bad)
fistp
lahf
mov
jno
jae
fwait
dec
jmp
fild
(bad)
cmp
daa
ret
out
ds
lea
inc
push
xchg
into
jge
jns
lock
mov
jge
dec
jbe
int
fist
mov
cdq
adc
cmovbe
or
retf
sub
xor
push
sbb
shl
and
cmp
add
and
jo
imul
push
add
lds
or
loopne
inc
es
jmp
leave
test
call
adc
(bad)
jnp
and
inc
das
push
test
and
fild
cmp
(bad)
inc
or
cmp
loop
inc
or
cmp
and
fmul
test
sub
movs
(bad)
(bad)
(bad)
(bad)
push
lea
movs
xor
ins
add
shl
(bad)
cdq
fnsave
mov
sbb
int
(bad)
(bad)
(bad)
(bad)
fsubrp
std
out
loope
arpl
mov
leave
mov
add
sub
jle
push
sub
jg
(bad)
push
lods
xchg
ficom
push
je
mov
ja
sbb
cmp
sbb
(bad)
(bad)
(bad)
call
pop
pop
or
sbb
stos
stos
xor
aam
inc
jl
dec
or
(bad)
jmp
add
(bad)
(bad)
dec
mov
lds
and
test
sub
ror
test
or
test
(bad)
(bad)
(bad)
call
cmc
dec
mov
(bad)
add
inc
and
or
aad
or
mov
dec
stos
cmc
mov
sbb
and
mov
jle
add
add
pushf
mov
outs
jnp
cs
sub
(bad)
(bad)
inc
fdiv
call
or
mov
out
popf
out
inc
xchg
push
mov
adc
cmps
sub
jo
push
xor
out
and
lahf
rcl
adc
pop
in
(bad)
(bad)
(bad)
(bad)
sti
and
(bad)
popa
cmp
sti
mov
test
iret
push
pop
stos
scas
or
sbb
call
icebp
xor
fidivr
adc
retf
pop
dec
or
mov
(bad)
push
xor
out
and
rcl
je
jae
or
(bad)
(bad)
(bad)
jmp
pop
lock
add
(bad)
sahf
cld
aaa
sahf
xchg
imul
inc
cmp
add
(bad)
jmp
ja
les
out
sub
inc
cwde
stos
ja
(bad)
and
test
pop
hlt
jbe
sbb
cmp
fnstenv
adc
shl
(bad)
(bad)
jge
mov
aas
pusha
icebp
int
repnz
arpl
inc
(bad)
xor
leave
mov
add
(bad)
(bad)
clc
push
call
ins
sbb
pop
icebp
xor
jb
out
pop
push
dec
cs
loop
(bad)
dec
dec
xchg
imul
inc
jle
cmp
cdq
inc
adc
nop
(bad)
(bad)
(bad)
inc
int3
xor
and
es
xchg
inc
cmps
pop
xchg
mov
mov
aad
and
(bad)
mov
mov
cli
mov
pop
xlat
jne
add
mov
adc
enter
aad
jo
xor
cld
data16
jae
jo
push
cld
iret
loopne
add
out
mov
inc
or
and
adc
idiv
xor
xchg
lock
cdq
inc
movs
sbb
(bad)
(bad)
jmp
int3
jns
test
jmp
mov
adc
in
mov
mov
(bad)
(bad)
(bad)
jmp
sub
add
cmp
sbb
pop
lea
imul
out
loop
mov
(bad)
(bad)
(bad)
jge
fnstsw
outs
or
cmp
pop
push
lock
pop
jbe
fisttp
stc
cmps
fnstenv
(bad)
jmp
les
aaa
mov
outs
aad
sbb
es
lods
xor
imul
aam
sub
inc
sbb
cmps
inc
shl
stos
push
in
mov
sbb
lods
dec
(bad)
jnp
pop
mov
movs
pushf
cmps
movs
lds
fs
mov
adc
clc
rcr
jmp
inc
js
xor
cmp
sbb
add
(bad)
mov
jb
mov
xchg
jbe
(bad)
(bad)
call
lods
and
popa
cmps
sub
dec
adc
sbb
scas
xchg
xchg
call
popa
xchg
(bad)
(bad)
(bad)
jmp
and
add
cmp
inc
inc
shl
mov
js
inc
jle
xor
mov
arpl
mov
sub
popa
repz
cmp
jecxz
push
xchg
pushf
(bad)
fcomip
dec
(bad)
or
test
mov
out
es
es
mov
(bad)
(bad)
(bad)
(bad)
std
sbb
in
adc
cdq
mov
js
inc
and
nop
or
loopne
(bad)
(bad)
call
es
mov
das
cmp
ds
das
pusha
add
shr
cmc
(bad)
(bad)
call
push
push
push
and
sub
out
jo
mov
mov
inc
pop
push
aam
test
mov
scas
sub
(bad)
(bad)
(bad)
push
adc
jne
mov
test
or
xchg
xchg
mov
(bad)
jg
dec
sti
(bad)
push
imul
dec
push
pusha
mov
dec
sbb
sbb
test
hlt
call
push
adc
xor
jmp
add
jle
popa
clc
sbb
xchg
(bad)
loope
(bad)
(bad)
call
adc
ret
add
push
pop
scas
addr16
call
nop
jb
sti
(bad)
loope
mov
(bad)
dec
clc
ret
lock
dec
xchg
xchg
popf
xchg
xchg
sbb
dec
iret
jmp
and
mov
mov
(bad)
(bad)
inc
ret
pop
pop
out
fistp
jnp
aas
mov
sar
adc
jg
pop
nop
fwait
loope
rol
jne
add
(bad)
call
sahf
imul
xor
(bad)
jmp
repz
nop/reserved
clc
repnz
sti
xlat
(bad)
addr16
test
movs
mov
stos
jmp
clc
(bad)
fild
xchg
and
ins
popf
xchg
xchg
lds
(bad)
call
pop
aas
sub
out
pop
rcr
aas
aas
retf
dec
sub
mov
in
in
aaa
inc
inc
in
fsubr
cmp
(bad)
inc
jno
mov
dec
das
ins
or
fsubr
or
cld
aas
sbb
lods
pop
(bad)
mov
inc
push
ins
fucompp
vpsubq
mov
int3
jb
cs
fdivr
ds
sbb
(bad)
(bad)
call
jecxz
inc
xor
mov
pop
jle
or
jae
sub
(bad)
(bad)
mov
inc
push
pushf
fld
aam
push
cmp
pop
cmp
sub
add
outs
jmp
test
shl
pop
stc
in
mov
push
ja
enter
jnp
mov
shl
push
and
cmp
adc
(bad)
(bad)
(bad)
push
lods
dec
ret
cli
xor
inc
and
pusha
and
lock
in
cmps
jecxz
(bad)
jg
mov
pop
xchg
lea
rol
xchg
push
xor
gs
(bad)
(bad)
cli
jbe
jg
mov
and
(bad)
idiv
jp
lock
mov
(bad)
(bad)
(bad)
push
cmp
aad
sub
mov
shl
push
lahf
pop
out
(bad)
jg
in
data16
movs
mov
dec
(bad)
and
sbb
push
loopne
je
mov
fdivr
sub
ja
adc
push
lock
dec
sbb
ss
adc
shr
fbld
push
fistp
mov
sti
repnz
movs
ins
jno
fisttp
sbb
ror
cmp
popf
loope
mov
(bad)
jg
mov
mov
xor
cld
add
test
xchg
(bad)
in
(bad)
(bad)
jnp
and
outs
mov
out
shr
bswap
scas
jo
inc
mov
jno
(bad)
push
push
sar
(bad)
(bad)
(bad)
dec
retf
or
xchg
and
repnz
fisttp
lods
jp
jle
scas
and
mov
push
les
pop
xchg
aaa
xor
or
fdivr
clc
(bad)
out
pop
mov
cmp
or
ret
dec
(bad)
(bad)
mov
inc
gs
call
jmp
sbb
mov
cli
(bad)
jmp
mov
mov
xlat
cli
es
cmp
stos
repnz
div
xchg
retf
mov
xor
int3
adc
and
jne
adc
(bad)
(bad)
(bad)
(bad)
jmp
push
shl
xor
pop
fidiv
xlat
test
inc
call
push
(bad)
push
xchg
pop
pusha
push
enter
pop
mov
jns
ret
lds
test
(bad)
(bad)
inc
mov
cli
mov
mov
lods
jle
jecxz
imul
push
mov
rol
mov
(bad)
cmp
lds
mov
mov
cli
out
push
add
(bad)
(bad)
dec
addr16
jge
mov
jg
cmp
loopne
dec
shl
(bad)
(bad)
jg
aas
xor
cli
neg
or
jle
fs
sti
jmp
ret
lods
popf
movs
aam
ins
cld
(bad)
(bad)
(bad)
(bad)
jbe
icebp
scas
pop
neg
jbe
sbb
ja
adc
arpl
adc
stos
jbe
js
test
jg
push
clc
ins
inc
jge
rol
loopne
inc
push
ins
jmp
mov
(bad)
(bad)
out
ins
xchg
aas
mov
push
loopne
rol
inc
or
fcmovnb
ret
std
jecxz
pop
mov
(bad)
(bad)
(bad)
jnp
xor
push
jl
pop
xchg
repz
sub
loop
dec
xchg
add
enter
aas
and
sti
mov
dec
mov
(bad)
jmp
sar
xor
cmps
or
sub
rol
cdq
pusha
cmc
(bad)
(bad)
call
cmc
pusha
nop
sbb
call
dec
call
pop
sub
(bad)
call
mov
fcmovu
cwde
ja
pushf
mov
ja
in
cs
stos
popa
pop
cmp
retf
(bad)
(bad)
(bad)
jmp
jl
pop
sub
cmps
jnp
adc
aaa
imul
je
iret
aas
lahf
dec
jnp
lds
cmp
xchg
stos
sbb
es
sbb
jmp
sub
dec
(bad)
(bad)
(bad)
dec
mov
cmp
fidiv
xor
es
dec
mov
cmp
jo
pusha
push
(bad)
(bad)
(bad)
jmp
mov
mov
jb
inc
or
mov
mov
loope
loope
loopne
mov
adc
(bad)
(bad)
(bad)
cli
daa
xlat
es
popa
pusha
call
push
mov
and
retf
or
outs
nop
cmp
jmp
mov
int3
pop
inc
div
int
cmp
ins
mov
popa
mov
clc
(bad)
inc
retf
pop
xchg
pop
sub
into
fsin
mov
ud0
jmp
mov
pusha
aaa
rcl
dec
mov
add
and
sub
int3
add
cdq
(bad)
(bad)
(bad)
push
shl
sbb
inc
pop
ret
and
pop
nop
add
sub
add
push
inc
loope
data16
(bad)
(bad)
push
jecxz
ret
xor
cmp
mov
das
xchg
jbe
test
pmaxsw
test
sub
scas
push
sub
(bad)
dec
sbb
and
mov
mov
arpl
pop
fidiv
and
add
mov
push
pop
pop
xchg
xchg
mov
repnz
xchg
(bad)
(bad)
(bad)
(bad)
sti
xor
hlt
push
xchg
out
aam
out
lock
mov
sub
push
xlat
(bad)
(bad)
(bad)
jmp
inc
sub
ins
rol
xchg
ins
sbb
add
mov
cmp
mov
push
cld
gs
jecxz
pop
cs
inc
es
mov
call
cmp
std
stos
mov
outs
(bad)
and
into
aad
add
pop
pop
mov
pop
ja
(bad)
(bad)
(bad)
(bad)
aas
lods
mov
nop
jg
jg
cmp
xlat
test
call
mov
retf
stos
xchg
add
ins
loope
inc
outs
aad
push
(bad)
push
push
out
xor
xor
pushf
nop
add
jg
push
xchg
add
fwait
add
pop
jb
(bad)
jg
(bad)
cmp
add
xchg
push
test
mov
add
add
out
pop
addr16
mov
(bad)
(bad)
jmp
push
cmps
push
dec
jae
fs
adc
scas
lods
scas
shl
mov
pop
clc
jbe
cld
xlat
xor
add
repnz
xchg
(bad)
(bad)
(bad)
inc
test
scas
sub
cmps
dec
lahf
sbb
aas
mov
inc
xchg
lahf
pop
xor
out
jmp
push
loopne
jg
push
aad
loopne
(bad)
(bad)
fstp
sub
mov
sub
stc
stc
js
push
imul
(bad)
push
sbb
hlt
dec
(bad)
iret
add
jecxz
inc
xor
jmp
test
and
mov
push
and
dec
add
adc
inc
push
sbb
fwait
mov
mov
sbb
(bad)
(bad)
call
shl
jg
xor
cli
loop
les
ds
inc
add
ins
enter
push
push
mov
loope
stos
push
inc
sub
xlat
jge
pop
(bad)
retf
mov
pop
mov
push
jle
pop
fs
sar
loope
into
push
jmp
outs
jl
ret
loopne
ds
loope
rcr
cmps
ins
(bad)
iret
adc
ss
ret
leave
adc
mov
rcl
jl
and
sub
clc
push
adc
arpl
jne
sar
dec
cmp
(bad)
aas
int
mov
pop
and
rol
test
lock
out
and
mov
or
ret
and
mov
add
sar
dec
add
add
lock
jmp
xchg
jmp
inc
inc
rol
adc
push
sub
mov
inc
mov
adc
mov
test
jns
pop
cmp
pop
(bad)
(bad)
(bad)
mov
jnp
mov
inc
mov
mov
in
fld
in
ds
sub
(bad)
mov
mov
cmp
cdq
pop
retf
ret
std
mov
call
(bad)
(bad)
inc
add
in
mov
psubq
ja
mov
cmp
xchg
out
mov
cld
inc
pusha
push
add
inc
out
cmps
push
sub
ret
sub
jnp
(bad)
push
or
mov
mov
xchg
mov
aaa
mov
jl
xchg
ret
cmp
(bad)
jmp
mov
inc
lea
pop
sbb
iret
and
test
fwait
addr16
test
call
dec
setp
stos
shl
add
jb
jmp
jp
mov
push
mov
jmp
stos
int
(bad)
(bad)
push
call
push
cmc
dec
movs
xor
adc
pop
loope
ficom
mov
das
push
push
lods
dec
aam
in
(bad)
push
mov
and
into
imul
cmp
lahf
jecxz
nop
push
inc
icebp
(bad)
(bad)
push
and
cmp
add
std
adc
add
push
shl
jmp
ss
js
(bad)
(bad)
mov
ja
xchg
not
ds
orps
lock
ins
(bad)
jg
inc
or
adc
mov
popa
test
adc
test
adc
push
les
mov
mov
mov
cmp
pop
fsub
in
in
dec
lock
sti
xlat
sti
mov
into
jns
xadd
es
out
push
cmp
add
cmp
pop
(bad)
dec
dec
(bad)
leave
mov
loopne
and
out
ret
lds
lock
push
(bad)
inc
jns
jle
mov
cld
add
cli
jo
cs
mov
add
xchg
add
loopne
adc
or
call
or
loope
mov
or
and
stos
ss
hlt
dec
jle
outs
(bad)
ds
fcom
or
(bad)
clc
cdq
sub
add
(bad)
jg
adc
adc
mov
add
scas
add
mov
(bad)
in
add
pop
nop
cmovo
sbb
inc
adc
outs
(bad)
dec
add
dec
add
test
dec
xchg
ror
int
dec
shl
adc
xchg
sar
(bad)
(bad)
call
ja
lock
and
ret
inc
popa
pop
sub
or
and
out
dec
into
or
(bad)
dec
sub
stc
rol
(bad)
cmp
nop
out
in
out
out
out
hlt
lds
and
(bad)
call
(bad)
mov
dec
iret
out
ficomp
in
add
add
(bad)
(bad)
mov
mov
xor
or
stc
mov
cld
inc
push
sahf
mov
cmc
enter
mov
and
jecxz
ds
(bad)
jg
push
loope
loopne
jle
cmp
fstp
add
inc
cdq
lods
shl
jbe
push
(bad)
(bad)
(bad)
dec
xor
out
inc
test
mov
shl
xor
pop
sub
mov
pop
mov
clc
(bad)
inc
jns
push
xchg
inc
and
xchg
loop
jmp
xchg
std
or
dec
rcl
pop
mov
ins
sar
add
add
repz
adc
ret
das
clc
addr16
jns
mov
mov
and
jmp
(bad)
pop
test
pop
dec
(bad)
or
inc
mov
pop
or
adc
rol
dec
pushf
rcr
push
inc
inc
or
sar
cld
add
sbb
adc
adc
xor
or
(bad)
call
pop
sub
sbb
or
enter
and
mov
bound
pop
(bad)
(bad)
(bad)
call
dec
xor
and
(bad)
movs
add
dec
and
sub
(bad)
(bad)
cmp
fcmovne
and
mov
mov
push
add
add
mov
(bad)
mov
jae
je
minps
sbb
cmps
ror
jne
add
mov
shl
(bad)
(bad)
(bad)
dec
mov
popa
pop
mov
sbb
(bad)
push
arpl
pop
xor
sbb
sbb
sahf
sub
popa
out
or
pop
sbb
adc
inc
pop
dec
pop
inc
test
in
and
add
dec
mov
jp
stc
les
(bad)
(bad)
jmp
mov
pop
inc
lods
es
and
and
adc
dec
and
leave
xchg
in
or
and
(bad)
dec
dec
imul
sub
rcl
imul
mov
lods
and
inc
nop
dec
xchg
sti
leave
ret
in
adc
(bad)
or
scas
(bad)
(bad)
call
dec
xor
movs
lahf
xor
mov
sahf
aam
stos
mov
lahf
pop
push
(bad)
(bad)
(bad)
jmp
xchg
and
retf
movs
sub
imul
je
(bad)
(bad)
(bad)
dec
fld
xchg
shr
pop
jmp
ja
or
dec
bound
sbb
jnp
pop
cmp
cmps
sbb
cmps
add
push
xor
xor
outs
(bad)
(bad)
(bad)
call
sub
sub
retf
cmp
out
push
push
jae
aas
aad
stos
or
ud0
(bad)
jmp
inc
push
mov
jecxz
or
push
stos
aad
sbb
scas
into
push
ja
(bad)
push
iret
push
pop
call
mov
arpl
mov
arpl
push
(bad)
xor
(bad)
(bad)
mov
push
add
sub
cwde
dec
bound
stc
in
dec
jbe
sti
sbb
jnp
push
inc
jae
data16
(bad)
(bad)
(bad)
jmp
popfw
out
int
push
(bad)
mov
lock
pushf
dec
into
and
or
sub
push
(bad)
(bad)
(bad)
jmp
jle
aaa
fidivr
mov
in
push
in
jmp
out
jne
popf
inc
popf
sub
cmc
cmp
div
(bad)
(bad)
dec
mov
test
shl
jns
or
retf
jmp
ins
hlt
mov
call
jmp
xor
ss
sbb
lock
nop
arpl
sub
call
imul
mov
ror
daa
mov
jmp
clc
jecxz
js
ds
sbb
lods
xor
fsubr
popa
bound
(bad)
and
(bad)
mov
call
out
sub
mov
fsubr
pushf
imul
mov
movs
inc
pushf
lds
ss
(bad)
(bad)
dec
jl
add
lods
cwde
push
ds
jns
cmc
push
xlat
lods
dec
(bad)
pop
adc
(bad)
(bad)
jg
ins
(bad)
push
ins
push
sbb
or
cmp
fwait
lods
les
ins
fist
adc
sub
sub
(bad)
(bad)
push
push
outs
fidiv
in
cld
in
or
call
mul
sbb
(bad)
cmp
(bad)
(bad)
(bad)
jl
je
int3
jbe
jo
jmp
loope
ret
test
push
sbb
jae
repz
inc
cld
dec
adc
ins
cmps
mov
in
out
mov
(bad)
(bad)
(bad)
jmp
lods
fldcw
(bad)
cmp
dec
cs
sbb
pop
ret
cmp
neg
jno
mov
popf
cmps
fwait
cmps
ret
das
pop
jbe
pop
pop
sti
mov
es
outs
(bad)
(bad)
call
xor
fcmovnb
pop
loopne
retf
jnp
cmp
cmp
add
(bad)
add
(bad)
(bad)
(bad)
(bad)
mov
and
jle
jle
cld
sahf
sti
cmp
retf
std
(bad)
clc
mov
icebp
dec
add
pop
std
inc
in
mov
add
pop
add
stos
pop
xor
push
das
or
adc
inc
or
or
outs
mov
sbb
arpl
fsub
call
pop
(bad)
(bad)
(bad)
call
cli
xor
es
push
(bad)
adc
adc
cmps
stc
dec
jmp
loopne
ins
mov
(bad)
call
cdq
pop
stc
jge
sub
xor
push
je
je
sub
lods
in
sti
addr16
mov
(bad)
(bad)
(bad)
mov
jb
lods
push
push
ins
arpl
fwait
mov
cmp
adc
(bad)
(bad)
(bad)
dec
in
mov
(bad)
fadd
cmp
out
call
je
scas
in
mov
into
pop
aad
dec
sahf
ja
pop
xor
test
and
dec
in
dec
sbb
test
mov
mov
mov
dec
cmp
out
push
jge
cli
push
(bad)
xor
dec
push
sub
(bad)
in
(bad)
call
xchg
mov
inc
(bad)
fisubr
cmp
imul
mov
mov
sub
xchg
or
retf
xchg
mul
and
jae
fist
mov
call
push
push
push
dec
das
test
js
sbb
mov
aam
fbld
jmp
mov
nop
mov
mov
js
icebp
loopne
mov
mov
ja
xor
mov
sar
(bad)
jmp
xchg
std
push
loop
push
push
repnz
fdiv
mov
shl
push
(bad)
(bad)
(bad)
push
outs
scas
hlt
pop
mov
fs
out
push
aad
push
jg
pop
xchg
pop
lods
jo
test
mov
mov
mov
pop
aad
cmc
jns
(bad)
out
push
retf
in
outs
lods
neg
scas
dec
mov
(bad)
mov
lods
sbb
(bad)
in
pop
ins
dec
fidiv
push
mov
mov
retf
xor
popa
xor
fcomi
mov
popf
jg
retf
push
std
lods
stos
mov
cld
(bad)
fisttp
fcmovbe
mov
push
sbb
in
mov
mov
inc
jge
outs
shr
sbb
sbb
mov
mov
sahf
(bad)
jnp
jnp
test
jg
or
push
outs
ins
fsubr
lea
dec
(bad)
(bad)
(bad)
(bad)
cmp
fwait
sub
in
call
ret
shl
cmps
jl
jecxz
call
(bad)
inc
cdq
jg
cmc
or
sub
cmp
ins
mov
call
jmp
inc
mov
xor
arpl
xor
popf
sub
xchg
jecxz
fs
(bad)
(bad)
jmp
cmp
test
mov
aas
pop
je
dec
mov
test
repz
(bad)
pop
lock
(bad)
(bad)
scas
cmp
loope
scas
pop
outs
jmp
neg
(bad)
(bad)
dec
in
push
cmp
je
dec
jmp
shr
sar
push
aad
xlat
clc
xlat
cs
lahf
jns
(bad)
in
mov
mov
fstp
and
imul
pop
or
js
(bad)
call
cld
(bad)
std
jmp
(bad)
mov
shr
pusha
shl
pop
(bad)
(bad)
(bad)
dec
out
push
or
rol
inc
aad
inc
and
sbb
into
(bad)
(bad)
(bad)
call
adc
retf
(bad)
jns
jae
out
std
loop
dec
iret
pop
cld
fdiv
or
mov
mov
(bad)
jns
repz
stos
test
(bad)
pop
mov
cld
lods
into
fstp
mov
(bad)
mov
cdq
sub
inc
(bad)
push
repz
arpl
cmps
ror
ds
(bad)
cld
das
adc
das
inc
pushf
and
jae
ret
mov
mov
ja
(bad)
(bad)
dec
pop
xor
outs
adc
pop
inc
mov
sbb
(bad)
(bad)
(bad)
inc
jo
push
and
rol
adc
and
mov
push
mov
jb
sub
rcr
pop
ja
(bad)
(bad)
(bad)
dec
jbe
nop
retf
xchg
jo
(bad)
(bad)
out
lahf
jae
and
mov
hlt
(bad)
(bad)
(bad)
jmp
mov
xchg
clc
jl
xchg
test
and
xor
jp
xor
loopne
ror
fisttp
outs
clc
cmp
pop
cmc
jp
or
lahf
repnz
and
(bad)
(bad)
dec
outs
add
pushf
adc
or
(bad)
lods
jno
xchg
mov
fwait
or
jmp
scas
int3
add
les
cmc
ins
push
xchg
add
(bad)
(bad)
call
ret
mov
into
inc
sbb
dec
dec
ins
pop
xchg
retf
add
or
out
and
shr
(bad)
(bad)
call
or
(bad)
mov
adc
cwde
push
aas
jecxz
sub
fsub
(bad)
(bad)
in
fild
test
ins
or
add
movs
scas
or
cs
jbe
scas
cs
sbb
(bad)
jg
jmp
mov
mov
sbb
leave
mov
adc
add
xlat
push
lods
(bad)
(bad)
call
cmp
sub
in
pusha
call
and
cmp
into
fstp
adc
repnz
jp
push
sbb
out
(bad)
(bad)
call
cmc
imul
dec
add
test
shl
xlat
int
add
fldenv
mov
inc
push
jge
(bad)
(bad)
jmp
shl
pop
xor
sub
arpl
xchg
xlat
sti
rol
inc
data16
loop
in
out
pop
sub
inc
xor
ins
das
mov
je
sub
cmp
ins
hlt
(bad)
(bad)
(bad)
dec
inc
popf
push
sub
bnd
pushf
adc
cmp
in
xor
out
adc
and
sbb
mov
bound
xor
lds
idiv
push
scas
cmps
push
sbb
das
fsub
(bad)
(bad)
(bad)
(bad)
fistp
(bad)
push
(bad)
xor
jmp
ins
and
mov
(bad)
inc
hlt
push
pop
jns
pop
adc
mov
inc
mov
inc
lea
(bad)
fcomp
mov
mov
dec
jne
fisttp
or
mov
fiadd
fcmovu
push
or
iret
jg
(bad)
and
lock
movs
mov
in
adc
inc
retf
jmp
inc
sbb
addr16
imul
call
cs
retf
dec
ret
inc
int
lods
pop
push
sub
cmp
pop
jnp
pop
jp
(bad)
(bad)
dec
jl
or
or
mov
add
test
and
sub
retf
addr16
fnstenv
retf
dec
and
out
jle
add
fild
call
or
push
push
push
mov
call
pop
out
sbb
pusha
pop
and
ins
mov
call
std
sub
xor
aaa
lock
icebp
add
imul
(bad)
inc
out
mov
das
sbb
mov
mov
mov
add
mov
jmp
inc
imul
pop
sbb
call
push
pop
jge
jae
fnstcw
mov
ja
call
add
sub
push
mov
shl
stos
(bad)
jmp
xchg
scas
loope
ins
nop
mov
cmp
daa
xchg
pop
mov
push
(bad)
cmp
mov
push
stos
js
movs
pop
add
inc
mov
xor
sbb
lock
(bad)
(bad)
call
std
jle
and
jmp
jne
imul
fs
add
rol
(bad)
(bad)
dec
sbb
inc
xchg
in
and
js
and
popf
pop
ficom
mov
(bad)
(bad)
jg
ds
dec
xor
test
or
mov
test
mov
(bad)
(bad)
(bad)
push
sbb
adc
mov
cmc
out
mov
idiv
push
mov
jle
dec
fs
pop
add
(bad)
(bad)
push
(bad)
push
or
pop
pop
mov
push
and
loopne
jnp
adc
jecxz
into
sbb
cdq
lock
cld
push
inc
gs
and
test
leave
mov
jecxz
cli
cmp
jae
mov
cmp
cmc
push
arpl
in
pushf
and
pushf
push
dec
ss
dec
jg
add
adc
mov
adc
gs
mov
fist
(bad)
xchg
pop
sar
pop
jns
mov
xor
pop
or
(bad)
inc
sahf
mov
jo
lea
mov
cdq
pop
fdivp
daa
adc
ret
jns
adc
std
loope
adc
setbe
sti
adc
clc
dec
xlat
outs
push
pop
loop
(bad)
(bad)
clc
jle
xor
xlat
sbb
(bad)
mov
(bad)
jg
std
cdq
fdiv
repz
stos
(bad)
and
pop
sti
pusha
cmps
cli
outs
ror
aaa
lock
cs
fbstp
jnp
push
cs
sbb
mov
mov
jg
inc
outs
bound
lea
cwde
gs
sbb
in
std
(bad)
repnz
repnz
(bad)
mov
push
out
repnz
push
pop
stc
mov
jo
dec
imul
scas
(bad)
call
das
mov
push
outs
aas
fisub
retf
sbb
loopne
(bad)
(bad)
jp
call
popa
sti
(bad)
lahf
jg
cmps
into
pushf
ret
je
retf
adc
mov
jg
call
jb
sbb
in
(bad)
hlt
jmp
stos
stos
in
scas
pop
cmp
retfw
inc
bound
or
call
mov
hlt
(bad)
cmc
dec
call
fnsave
push
add
mov
(bad)
arpl
std
(bad)
(bad)
jg
sub
push
adc
je
jnp
mov
cld
cli
jmp
rep
sub
dec
int3
ins
jg
std
(bad)
mov
xlat
mov
stos
xor
(bad)
out
add
xchg
or
sub
jle
jns
repnz
(bad)
(bad)
mov
js
sub
iret
leave
sub
cld
in
ret
arpl
cmp
xchg
jmp
add
xor
sub
(bad)
inc
dec
leave
into
lea
sti
cmp
lahf
pop
fistp
sbb
cmc
push
add
push
dec
sti
test
repz
(bad)
call
cmps
out
mov
jle
ret
mov
adc
push
dec
push
loopne
sti
mov
idiv
in
dec
mov
mov
in
(bad)
(bad)
inc
fxch
out
push
sbb
repz
pop
lahf
cmp
into
adc
mov
mov
adc
jg
fnstsw
iret
into
ds
ja
and
mov
mov
xchg
push
adc
pop
and
lea
pushf
mov
loop
fwait
and
push
or
out
adc
outs
mov
adc
add
dec
cdq
sub
jmp
or
rol
mov
nop
or
imul
jnp
data16
and
ins
sub
push
(bad)
(bad)
(bad)
(bad)
stc
or
movs
gs
mov
sar
xchg
bound
cli
inc
inc
dec
sub
retf
(bad)
dec
pop
pop
xchg
test
les
pop
out
cmp
ja
jl
jmp
mov
push
pop
push
(bad)
inc
xchg
iret
out
jg
mov
mov
mov
sub
(bad)
(bad)
call
sahf
pop
inc
mov
fsub
mov
add
out
out
xchg
jle
(bad)
inc
jbe
dec
xchg
sub
pushf
test
cmp
mov
and
(bad)
(bad)
(bad)
jmp
enter
int
sub
jns
(bad)
dec
dec
or
movs
aaa
adc
call
pop
aas
call
lahf
cli
in
xchg
rol
push
lock
in
mov
(bad)
mov
pop
dec
loopne
or
test
stc
xor
mov
pop
loop
add
sbb
adc
mov
popf
call
(bad)
(bad)
mov
mov
idiv
fnstsw
hlt
jl
mov
jp
xchg
xchg
cmp
(bad)
(bad)
(bad)
push
imul
repz
rcl
lock
jo
lods
mov
(bad)
(bad)
jmp
leave
jecxz
push
nop
lods
adc
push
cmp
cwde
shr
xor
mov
mov
xlat
dec
cmps
inc
mov
enter
data16
or
loop
adc
mov
sbb
sar
movs
cmp
mov
sub
mov
(bad)
daa
cmp
push
add
cmp
push
xor
or
xchg
or
int3
enter
clc
lds
dec
sar
loopne
cli
fdivr
(bad)
mov
push
dec
mov
and
or
jecxz
or
push
xor
inc
jle
(bad)
(bad)
(bad)
inc
jo
test
loope
out
les
das
adc
mov
js
(bad)
lods
repz
ja
hlt
(bad)
dec
add
std
icebp
les
test
retf
loop
(bad)
call
fmul
popf
sub
xlat
inc
shl
(bad)
inc
pop
mov
xor
retf
fdivr
jmp
popa
jle
mov
and
ja
scas
add
xor
ret
repnz
fwait
imul
fldenv
pop
push
push
dec
(bad)
ss
(bad)
call
(bad)
and
push
pusha
nop
add
es
dec
mov
ds
sbb
xchg
(bad)
jmp
js
lods
mov
out
dec
aaa
(bad)
cdq
ins
shl
push
(bad)
(bad)
call
das
mov
and
ss
loopne
mov
push
data16
push
mov
(bad)
call
(bad)
lods
test
jno
push
pop
sar
and
xchg
pop
and
sbb
lahf
mov
(bad)
(bad)
dec
movs
sub
sub
and
push
pop
es
cmps
popa
sbb
call
(bad)
(bad)
(bad)
dec
fisub
repz
retf
loop
jns
test
int3
mov
or
(bad)
(bad)
(bad)
jge
and
les
sub
loopne
nop
mov
dec
int
out
fst
std
(bad)
(bad)
jg
xor
daa
inc
ret
jmp
pusha
clc
ins
das
int3
pop
dec
xlat
xchg
out
(bad)
(bad)
call
mov
push
or
add
push
nop
(bad)
pushf
das
add
aas
(bad)
(bad)
(bad)
push
push
stos
repz
imul
add
stos
adc
shl
inc
jae
mov
bound
(bad)
call
xor
mov
cmp
mov
jl
test
(bad)
call
sbb
cld
cwde
outs
dec
adc
or
aaa
mov
cs
test
push
dec
inc
lds
jno
mov
mov
push
pop
or
std
(bad)
(bad)
jg
inc
hlt
pop
rcl
into
(bad)
lods
adc
push
pop
(bad)
jae
push
imul
cmp
or
ret
sbb
cwde
rol
inc
jle
mov
(bad)
inc
pop
sbb
mov
(bad)
int3
or
cli
int
or
imul
clc
or
retf
and
call
jge
push
repnz
inc
mov
mov
xchg
aas
jg
in
inc
mov
and
and
mov
dec
je
mov
call
dec
pop
pop
cs
call
jmp
data16
lods
mov
jno
fs
cmp
clc
cmp
add
dec
js
(bad)
(bad)
(bad)
jmp
mov
jno
mov
jne
xchg
dec
jbe
pop
adc
imul
mov
sub
es
ss
push
add
dec
push
add
les
xchg
and
leave
jb
and
and
test
xchg
jo
xchg
sbb
push
sub
movlps
ret
dec
ret
mov
jl
lods
test
jb
test
(bad)
(bad)
jg
inc
out
(bad)
mov
pop
adc
aad
aas
sbb
out
out
cld
iret
add
or
(bad)
(bad)
jmp
and
xchg
and
(bad)
sub
sbb
jmp
mov
popa
and
mov
mov
push
jns
(bad)
(bad)
jmp
cwde
loop
(bad)
or
pcmpeqb
push
xchg
lea
ret
in
rcl
add
es
adc
xchg
hlt
sbb
ss
add
push
and
outs
ins
fidivr
(bad)
dec
mov
call
shl
xor
jp
mov
jmp
(bad)
out
mov
add
hlt
mov
repnz
into
(bad)
cmp
scas
sbb
(bad)
(bad)
inc
in
gs
ja
mov
jns
dec
mov
iret
xchg
jge
cmovp
inc
xchg
(bad)
(bad)
call
push
sub
sub
dec
and
and
test
push
(bad)
(bad)
(bad)
dec
lods
mov
add
mov
sar
mov
call
mul
scas
and
ret
(bad)
out
xchg
addr16
jmp
cmc
es
(bad)
(bad)
call
xchg
jecxz
xor
sahf
push
mov
add
daa
mov
add
hlt
fcomip
fcomip
add
aad
js
mov
cmp
jg
push
mov
(bad)
call
pop
lea
bswap
jns
lods
push
adc
mov
(bad)
call
(bad)
jmp
in
sti
inc
mov
clc
jo
add
adc
adc
xor
nop
lahf
cmp
call
xchg
test
adc
dec
adc
adc
or
push
(bad)
(bad)
(bad)
call
popa
xchg
cmp
lods
cmp
into
lahf
dec
(bad)
stos
adc
stc
add
fs
stos
pop
sbb
loope
or
and
and
pop
hlt
mov
loop
pop
jmp
daa
pop
repnz
mov
cdq
mov
hlt
jecxz
(bad)
(bad)
(bad)
in
mov
pop
xor
cld
popf
mov
jne
ins
adc
fild
inc
iret
dec
sbb
xlat
(bad)
(bad)
dec
mov
pop
shl
cmps
push
(bad)
jle
sub
xor
aas
imul
xchg
outs
aaa
push
add
jb
or
xor
and
das
js
(bad)
(bad)
call
gs
add
inc
and
pop
sti
mov
loop
(bad)
(bad)
jmp
adc
bound
xor
outs
sub
scas
and
(bad)
(bad)
(bad)
out
mov
retf
int3
add
and
pop
cld
mov
mov
xchg
add
(bad)
(bad)
dec
cwde
dec
add
test
or
dec
and
mov
jns
repz
inc
mov
(bad)
push
cld
xor
mov
cmp
dec
imul
add
inc
pop
mov
mov
sbb
pop
cli
mov
(bad)
jmp
xlat
scas
fisttp
ins
lods
or
mov
inc
inc
pop
(bad)
(bad)
jmp
(bad)
jecxz
je
out
sub
idiv
movs
mov
(bad)
(bad)
jle
ret
hlt
stc
aas
lods
sbb
add
das
jmp
push
(bad)
jle
call
dec
(bad)
(bad)
(bad)
(bad)
std
loope
push
mov
fsubr
pusha
sbb
movs
jb
mov
scas
es
pop
or
or
(bad)
(bad)
inc
push
(bad)
rol
lock
mov
dec
and
sub
(bad)
loope
pop
inc
or
mov
inc
je
or
push
pushf
add
dec
sbb
ins
ds
(bad)
(bad)
call
loope
ins
mov
jecxz
(bad)
in
sub
inc
and
sbb
add
add
sub
sub
(bad)
or
fld
pop
add
inc
adc
cli
xchg
repz
push
sti
(bad)
call
mov
xor
rol
mov
jmp
dec
ins
cmp
(bad)
(bad)
(bad)
jg
inc
push
pop
(bad)
pusha
les
pop
sub
mov
adc
push
sub
test
imul
dec
add
in
cld
fisttp
inc
fs
jle
out
(bad)
out
ret
sti
lock
out
cmp
cmp
(bad)
repz
repz
inc
mov
emms
popf
xor
psubd
jg
ins
dec
ins
out
push
mov
sub
(bad)
jmp
fadd
jmp
or
es
mov
outs
movs
test
mov
sbb
(bad)
(bad)
push
aas
pop
jb
aas
xchg
add
loopne
pop
enter
or
(bad)
(bad)
(bad)
fiadd
test
sbb
mul
mov
icebp
in
push
xchg
adc
fld
and
(bad)
(bad)
call
cmp
or
xlat
jne
mov
mov
inc
imul
pop
dec
mov
enter
ret
sbb
dec
(bad)
(bad)
(bad)
dec
rcr
xchg
mov
lahf
ret
repz
fdivr
in
mov
jp
cs
jmp
clc
jp
and
add
cld
lea
xor
adc
xor
fst
jl
push
mov
(bad)
(bad)
(bad)
cmp
and
fnstenv
pop
shr
mov
mov
pop
das
scas
pop
lock
imul
(bad)
jmp
stc
mov
mov
(bad)
mov
jns
mov
(bad)
push
and
pop
pop
pop
jg
inc
jmp
sbb
leave
(bad)
scas
cmps
fnstsw
xor
das
aaa
ret
adc
pusha
xor
(bad)
(bad)
jmp
lea
pop
xchg
mov
mov
xor
sub
jle
push
call
(bad)
call
imul
jle
xor
jg
cmp
mov
pop
(bad)
cmp
inc
jns
adc
enter
mov
add
jecxz
sub
inc
dec
test
push
inc
push
loopne
loop
inc
sub
dec
xchg
sbb
int3
dec
mov
and
aas
nop
ins
mov
jl
aas
(bad)
jecxz
and
pusha
sbb
aas
int3
pop
imul
pop
(bad)
(bad)
(bad)
jmp
mov
fwait
xor
fmul
push
push
inc
dec
std
or
in
dec
xor
inc
(bad)
(bad)
(bad)
jmp
pop
mov
cmps
cmps
int
imul
stc
or
fwait
add
imul
cdq
(bad)
(bad)
(bad)
(bad)
cmp
call
hlt
cmps
xor
pop
sbb
ret
pop
or
icebp
pop
fs
loope
aam
push
pop
fadd
adc
out
pop
add
add
int
in
xchg
ins
mov
daa
add
(bad)
(bad)
(bad)
call
and
enter
test
icebp
rcr
push
mov
inc
repnz
mov
(bad)
(bad)
dec
or
int
popa
add
mov
fidiv
lea
or
xor
dec
nop
inc
adc
(bad)
(bad)
(bad)
std
xor
mov
inc
fsub
jge
cmp
(bad)
(bad)
push
push
pop
and
mov
loop
pusha
pusha
das
add
add
jns
jb
aam
(bad)
jg
mov
clc
pop
dec
cmp
lds
sub
je
fs
push
je
xor
int
push
or
es
(bad)
jmp
adc
and
mov
xlat
call
push
ss
xor
outs
rcl
(bad)
push
std
inc
push
icebp
aas
retf
std
sti
pusha
mov
xor
(bad)
(bad)
call
xchg
in
push
and
mov
sbb
inc
cmps
and
add
(bad)
(bad)
(bad)
inc
in
and
or
in
xor
les
rol
les
test
dec
das
cmp
push
(bad)
(bad)
(bad)
push
adc
or
and
xchg
pushf
mov
div
or
(bad)
(bad)
(bad)
inc
pop
mov
es
add
or
push
mov
add
mov
imul
inc
shr
sbb
sub
fcomp
dec
cmp
add
sbb
(bad)
push
jno
ja
shl
inc
mov
xor
add
inc
mov
sbb
shr
clc
(bad)
dec
pop
hlt
xchg
mov
ja
pop
sbb
rol
cmp
(bad)
call
add
add
push
jo
call
pop
add
cli
repnz
cs
jb
jb
(bad)
cmc
in
leave
add
inc
and
add
stos
icebp
mov
add
int
ds
(bad)
(bad)
push
inc
stc
pusha
add
out
scas
cmp
jle
mov
or
inc
mov
dec
adc
fistp
jno
shl
pop
mov
jo
jle
rcl
sar
ret
dec
pop
cwde
add
(bad)
dec
iret
jmp
ss
or
xor
std
sub
inc
mov
stos
icebp
(bad)
(bad)
inc
test
sbb
add
cmps
add
inc
sbb
xor
sub
push
push
inc
or
dec
loopne
(bad)
mov
add
or
and
je
cmp
fs
(bad)
(bad)
mov
push
add
and
xchg
push
aam
adc
add
and
movs
cli
call
retf
inc
add
jmp
out
add
xchg
clc
outs
daa
test
enter
xchg
cmps
mov
out
fnsave
das
nop
(bad)
test
sbb
shl
mov
(bad)
(bad)
inc
out
mov
and
push
sbb
ja
nop
mov
inc
xchg
or
sbb
(bad)
(bad)
dec
xor
cmp
dec
mov
mov
rol
dec
xor
add
mov
in
(bad)
std
(bad)
(bad)
(bad)
dec
(bad)
retf
cmove
stc
call
and
call
(bad)
sbb
xchg
(bad)
(bad)
fild
adc
push
bound
or
pop
rcr
fidivr
jmp
(bad)
mov
xor
dec
inc
xor
pop
adc
pop
fdivr
in
out
fwait
(bad)
(bad)
call
add
fwait
ss
loopne
rol
mov
fcomp
clc
add
cpuid
dec
(bad)
push
xor
mov
imul
xchg
jle
out
mov
ds
adc
rcl
(bad)
(bad)
(bad)
call
call
sbb
fisttp
mov
mov
cmp
push
(bad)
(bad)
jmp
dec
inc
out
ss
xchg
pushw
mov
and
aas
je
(bad)
lahf
test
(bad)
inc
(bad)
(bad)
(bad)
push
lahf
cmp
scas
dec
jnp
out
push
cmp
jb
sub
pop
fnstenv
rcr
call
(bad)
(bad)
call
popa
(bad)
bound
or
cdq
jle
pop
cmps
outs
cli
movs
das
sub
fs
clc
aad
(bad)
(bad)
(bad)
jmp
mov
call
imul
ins
inc
sahf
mov
leave
xor
call
(bad)
(bad)
(bad)
(bad)
(bad)
fiadd
outs
jl
add
lea
xchg
lock
dec
mov
mov
frndint
(bad)
(bad)
(bad)
dec
sbb
push
shl
inc
jns
mov
xor
fdivr
out
sbb
dec
gs
mov
fs
jnp
or
inc
(bad)
std
std
mov
ror
or
add
jg
(bad)
(bad)
inc
nop
mov
push
xor
lds
sbb
sbb
mov
(bad)
jmp
sti
leave
add
pop
mov
pop
mov
(bad)
cmc
fwait
adc
mov
sbb
mov
and
int3
dec
mov
(bad)
(bad)
in
push
fwait
push
leave
jle
cli
bound
push
in
pop
cmps
sub
shl
xchg
aas
(bad)
(bad)
(bad)
(bad)
jns
cs
mov
or
push
in
cwde
cmps
dec
pop
lock
push
and
push
(bad)
inc
loop
stos
push
shl
sti
aaa
dec
pop
cdq
jns
les
(bad)
(bad)
pushf
(bad)
(bad)
(bad)
(bad)
(bad)
adc
rcr
mov
jge
jne
aaa
ffreep
imul
les
in
mov
cmp
or
std
out
enter
sbb
hlt
scas
cmp
cmps
jo
add
cmp
(bad)
call
add
div
pop
mov
enter
add
dec
sub
mov
adc
pushf
cmc
xor
adc
(bad)
(bad)
aas
jns
dec
inc
imul
adc
addr16
in
(bad)
fld
lds
(bad)
(bad)
dec
dec
mov
xchg
push
das
or
sub
cmps
inc
and
adc
add
(bad)
(bad)
jmp
mov
sub
add
dec
fist
leave
outs
jbe
lea
and
setbe
out
sti
in
int3
into
jg
push
adc
je
mov
lea
mov
repnz
and
cmp
pop
push
in
mov
lahf
fiadd
jns
pop
mov
(bad)
cmps
cmps
mov
(bad)
(bad)
inc
sbb
pop
dec
sub
sub
jne
xchg
sar
mov
mov
inc
add
xor
mov
mov
ins
jnp
add
(bad)
(bad)
(bad)
dec
jmp
dec
stos
pusha
cli
fisubr
xor
sbb
nop
ds
sahf
call
cmp
mov
ins
xor
mov
inc
mov
xor
jns
sbb
aam
dec
loopne
jne
(bad)
(bad)
(bad)
(bad)
(bad)
or
sub
icebp
dec
xadd
push
jle
(bad)
lods
and
and
xchg
jnp
retf
(bad)
(bad)
(bad)
jmp
out
sar
js
ss
mov
mov
add
sbb
cdq
cmp
ja
inc
rcl
lock
movs
rcl
fld
dec
pushf
(bad)
les
add
or
mov
jge
(bad)
(bad)
(bad)
fldcw
pop
neg
pop
add
dec
lods
dec
add
ds
test
daa
mov
xlat
dec
push
out
jb
add
jns
jb
mov
lea
jnp
mov
sbb
std
gs
(bad)
(bad)
(bad)
jmp
shl
dec
dec
popa
fsub
inc
pop
push
into
dec
add
int
cli
or
pop
dec
mov
(bad)
(bad)
(bad)
dec
sbb
out
xor
add
int
xor
inc
mov
pop
xchg
inc
push
xchg
mov
(bad)
(bad)
(bad)
jmp
int3
ss
dec
pop
xor
mov
repz
lea
jmp
xor
retf
je
aad
(bad)
cmp
jmp
(bad)
out
(bad)
cmc
or
ror
aaa
call
nop
xor
cmp
(bad)
(bad)
out
jmp
cmps
popa
in
enter
and
mov
xchg
mov
adc
push
inc
cmp
jmp
dec
inc
call
inc
dec
enter
or
inc
inc
(bad)
dec
add
fmulp
pop
or
loopne
mov
sbb
fld1
cmp
(bad)
call
dec
inc
imul
adc
sbb
mov
nop
add
add
(bad)
(bad)
(bad)
dec
loope
(bad)
fsub
sbb
push
jns
pop
cs
sbb
mov
ins
push
(bad)
inc
dec
xor
jecxz
add
and
or
lahf
enter
lahf
mov
das
hlt
test
xor
das
pop
aaa
lea
sbb
(bad)
out
stc
jo
push
outs
(bad)
(bad)
dec
jmp
add
dec
aaa
sub
jo
mov
or
and
mov
or
mov
sub
jb
fst
sbb
(bad)
idiv
sar
sahf
jae
int3
cmp
jecxz
jae
ds
scas
out
mov
(bad)
call
inc
(bad)
or
add
lahf
xlat
mov
ret
sar
(bad)
dec
mul
iret
int3
enter
xchg
sbb
cmps
mov
fsubr
(bad)
inc
cmp
and
aas
inc
adc
mov
in
pop
jb
in
(bad)
je
lock
add
das
into
leave
(bad)
(bad)
(bad)
push
inc
dec
add
and
mov
sbb
enter
inc
stos
iret
mov
test
(bad)
(bad)
(bad)
fistp
add
mov
xchg
or
add
jno
jle
pop
mov
(bad)
xor
(bad)
(bad)
(bad)
call
dec
jp
push
inc
ss
mov
addr16
mov
mul
(bad)
jmp
add
dec
add
pusha
retf
xchg
dec
lods
pop
mov
cmps
test
xor
(bad)
sub
xor
inc
jge
cmc
inc
(bad)
addr16
mov
(bad)
(bad)
mov
(bad)
sbb
cmp
movs
test
pop
sub
in
retf
push
push
xchg
iret
(bad)
jge
(bad)
(bad)
jmp
adc
jl
rcl
fucomi
jne
dec
adc
sub
(bad)
lahf
aaa
data16
outs
(bad)
inc
je
test
sbb
sti
out
int3
add
pop
ds
fsubr
or
or
(bad)
(bad)
call
call
add
cli
scas
aas
std
jge
xlat
mov
sbb
mov
(bad)
(bad)
(bad)
(bad)
cmp
imul
in
mov
push
push
push
mov
and
xchg
sbb
scas
lock
mov
(bad)
(bad)
(bad)
cmp
jg
xchg
cmp
in
mov
lahf
mov
fist
dec
pop
pop
(bad)
(bad)
(bad)
dec
mov
test
fwait
int
mov
fs
je
dec
or
adc
in
(bad)
(bad)
(bad)
push
cwde
jp
iret
mul
sub
outs
add
mov
popf
(bad)
adc
push
inc
aas
push
cmp
xchg
xchg
movs
xchg
stc
movs
cmp
pop
pop
movs
lea
xchg
int
inc
cld
(bad)
out
(bad)
stc
fwait
(bad)
cmp
jg
jg
data16
cmp
test
inc
dec
sar
movs
arpl
(bad)
inc
stos
pop
ror
test
xor
in
test
cmc
push
ins
and
jmp
and
(bad)
inc
jb
adc
sub
sbb
icebp
xor
mov
xchg
test
cwde
iret
dec
cmp
ds
adc
mov
cld
sbb
dec
call
inc
fcomp
mov
mov
jnp
daa
dec
imul
in
push
sub
(bad)
jmp
xchg
fild
call
int3
(bad)
retf
addr16
add
adc
(bad)
jmp
mov
and
in
aam
into
jns
cmp
call
add
adc
add
cs
or
push
lahf
repnz
adc
pop
jmp
jns
add
ret
aaa
xor
out
jg
call
sar
cli
add
cwde
xchg
loop
rcl
sbb
stos
sub
cwde
xor
data16
and
ss
idiv
rol
(bad)
(bad)
(bad)
inc
rcl
xchg
data16
popf
add
movs
pop
push
imul
cli
pop
loop
xchg
sub
jg
dec
mov
into
aas
mov
sub
imul
pop
mov
int3
push
sbb
(bad)
icebp
xor
(bad)
(bad)
repz
(bad)
mov
push
ins
cmp
sbb
sbb
jg
xchg
dec
(bad)
call
push
cld
cli
std
xchg
loope
neg
or
mov
sti
sbb
scas
ficom
adc
lods
sbb
std
or
sbb
cli
mov
(bad)
(bad)
(bad)
(bad)
xor
add
ja
xchg
and
mov
movs
mov
(bad)
(bad)
(bad)
(bad)
jp
add
int3
jmp
adc
adc
jb
and
jo
repnz
inc
push
cmp
(bad)
call
jbe
sbb
inc
mov
pop
shr
xchg
sbb
movs
adc
cld
push
lock
pop
pop
sahf
xchg
aaa
add
xor
cmp
or
frstpm(287
rcr
xchg
push
sbb
icebp
out
(bad)
(bad)
(bad)
(bad)
jns
(bad)
es
xor
cdq
aam
jmp
pop
pop
test
lods
adc
test
xchg
(bad)
jmp
fcmovnbe
mov
and
jp
and
push
add
stos
sub
rcl
cli
scas
inc
dec
sar
jmp
mov
movs
and
jmp
jns
idiv
rol
out
mov
in
cld
ds
repz
(bad)
(bad)
inc
leave
sti
xchg
clc
aaa
adc
nop
inc
adc
jo
cdq
pop
imul
mov
(bad)
(bad)
(bad)
(bad)
fmul
fwait
clc
pop
pusha
loopne
dec
fidivr
xchg
and
jbe
test
adc
mov
mov
lods
addr16
(bad)
(bad)
(bad)
mov
push
loop
loopne
clc
mov
test
fstp
cmp
(bad)
(bad)
(bad)
push
push
fbld
cld
mov
cwde
repnz
mov
scas
fidivr
dec
push
(bad)
(bad)
(bad)
call
sub
les
xchg
add
jl
sbb
mov
mov
pop
popa
fisttp
(bad)
(bad)
(bad)
mov
js
pop
mov
add
lods
repnz
lds
xchg
and
(bad)
(bad)
(bad)
in
mov
jns
cmp
iret
icebp
popa
mov
outs
xlat
jl
dec
push
imul
std
out
imul
inc
mov
sub
push
push
ins
clc
out
icebp
fdivr
ins
pop
(bad)
(bad)
(bad)
cmp
gs
icebp
dec
jle
mov
loop
lods
outs
out
pusha
cmp
sbb
aad
pop
pop
stc
in
(bad)
(bad)
inc
sub
push
cmps
in
add
xor
mov
(bad)
dec
gs
inc
mov
jmp
push
imul
int3
shl
(bad)
(bad)
dec
imul
fcom
pushf
cmp
dec
sahf
out
xchg
mov
inc
inc
lea
stc
in
and
xchg
call
cmps
or
push
jecxz
nop
dec
sahf
ret
nop
sub
fcmovnbe
(bad)
(bad)
(bad)
push
shl
gs
lahf
push
pop
sbb
mov
xchg
dec
or
mov
mov
(bad)
(bad)
(bad)
in
mov
xchg
jle
jle
and
scas
xor
imul
in
fnstcw
jno
out
fild
(bad)
push
icebp
ins
sbb
xor
mov
dec
stc
test
(bad)
(bad)
(bad)
call
jb
das
lea
std
neg
nop
adc
jl
aas
sub
mov
mov
(bad)
call
aas
inc
xlat
or
das
cmp
sti
jp
out
fsub
ficomp
in
ja
mov
out
inc
xchg
(bad)
call
and
dec
push
aaa
xor
inc
push
ret
mov
fnsave
pop
dec
or
in
dec
xor
xor
or
ins
out
push
mov
test
jle
sub
std
pop
xchg
imul
shr
jns
shl
cmp
xchg
pop
push
or
xor
add
xor
std
dec
jecxz
and
(bad)
jmp
(bad)
(bad)
(bad)
(bad)
mov
movs
movs
add
shr
in
pop
(bad)
stc
pop
sbb
jge
jmp
mov
int
pop
(bad)
(bad)
(bad)
fnstcw
adc
ja
test
dec
add
dec
jmp
int
mov
lock
(bad)
(bad)
(bad)
inc
cwde
inc
nop
mov
mov
stos
xor
(bad)
jp
retf
xlat
outs
or
jmp
fnstcw
sub
(bad)
dec
sahf
adc
rcl
sar
(bad)
aad
mov
pop
hlt
dec
jmp
out
xchg
idiv
jmp
scas
sub
and
lock
pusha
cmp
and
pop
mov
(bad)
call
aad
clc
mov
ficom
sbb
les
mov
dec
xchg
loope
jnp
xchg
(bad)
call
push
jl
jbe
popa
test
cmp
scas
sub
jo
ret
(bad)
call
jle
pop
push
or
xchg
sbb
push
mov
adc
stos
jge
pop
cmps
jnp
jg
mov
push
mov
mov
dec
nop
pop
loopne
push
dec
add
xor
jge
add
add
inc
push
jbe
mov
mov
ror
jl
jns
dec
test
sar
push
in
fs
lock
xor
and
cdq
jg
mov
(bad)
(bad)
aas
ret
mov
add
sub
jbe
ret
movs
xor
(bad)
dec
pop
push
mov
sub
movs
mov
jmp
sbb
xor
cmc
dec
(bad)
(bad)
mov
ror
stc
pop
dec
xchg
xchg
loope
movs
lods
sbb
xlat
cli
jb
jns
jmp
(bad)
inc
stc
cmc
in
ficomp
adc
pop
mov
dec
fimul
add
push
sbb
inc
imul
add
push
hlt
loope
(bad)
jmp
xlat
push
dec
cs
xor
frstor
dec
in
jge
ss
(bad)
bound
xchg
cmps
inc
jmp
push
xor
push
fstp
(bad)
dec
xor
ins
or
lahf
test
neg
push
mov
adc
sub
inc
adc
lods
out
jg
lock
xchg
xlat
fwait
jmp
(bad)
(bad)
(bad)
(bad)
out
add
mov
sbb
push
dec
mov
inc
sahf
adc
std
aaa
rcl
arpl
jb
fidivr
ds
jg
call
out
cmp
shr
and
xor
sbb
pop
sbb
mov
shl
mov
or
(bad)
imul
sub
jle
fistp
cmp
and
scas
data16
sbb
pop
mov
(bad)
call
sahf
push
fild
mov
dec
frstor
fisub
fild
dec
mov
call
call
outs
mov
idiv
ret
mov
(bad)
sbb
pop
pusha
nop
shl
gs
(bad)
(bad)
jbe
adc
out
or
lods
lock
jle
pop
inc
cdq
lahf
popa
push
mov
mov
fld
jno
ja
jmp
jo
xor
sub
mov
out
mov
int
or
add
in
into
sahf
cmp
loope
jl
add
sub
out
(bad)
addr16
and
retf
out
mov
pop
inc
jle
aaa
cld
inc
pushf
pop
push
mov
add
fcmove
lock
dec
mov
(bad)
(bad)
dec
jno
sub
xchg
out
xor
mov
hlt
fwait
(bad)
fistp
mov
jo
jmp
(bad)
mov
ret
lods
dec
pop
sbb
mov
mov
dec
dec
mov
call
fs
in
sub
or
ficomp
pop
(bad)
hlt
jp
jmp
jne
cmovg
adc
jg
mov
sbb
dec
sbb
(bad)
shl
rcr
ins
inc
lea
loop
push
sub
sbb
jmp
mov
arpl
mov
call
dec
cmp
call
(bad)
cwde
hlt
push
fldl2t
fwait
in
add
ins
pop
outs
(bad)
mov
(bad)
dec
aaa
or
movs
es
sub
push
mov
mov
sbb
jae
in
lods
icebp
arpl
jecxz
out
push
(bad)
(bad)
(bad)
(bad)
in
jl
xchg
jle
bound
in
pop
push
movs
retf
retf
data16
xlat
mov
cmp
in
inc
push
adc
(bad)
(bad)
call
push
lods
pushf
mov
push
in
sub
iret
daa
jge
jg
test
push
aas
jbe
lock
fimul
(bad)
(bad)
(bad)
jmp
sbb
xchg
jl
nop
add
mov
imul
xchg
pusha
retf
push
repz
xlat
(bad)
(bad)
(bad)
jmp
fst
push
test
clc
mov
and
and
inc
outs
out
dec
adc
daa
dec
(bad)
(bad)
inc
push
sbb
jmp
jle
sub
jmp
sub
cwde
(bad)
(bad)
(bad)
inc
push
dec
adc
push
fcom
loope
fisttp
and
fs
xor
add
and
(bad)
(bad)
(bad)
mov
icebp
cmps
push
sub
popa
pop
or
pop
les
jno
sub
(bad)
(bad)
(bad)
(bad)
jg
daa
push
sub
sbb
retf
movs
js
inc
cmp
ins
les
(bad)
(bad)
push
cmp
test
mov
imul
or
add
xchg
int
ud0
(bad)
call
cmc
das
mov
and
clc
(bad)
cld
mov
outs
in
inc
leave
push
out
ret
shl
sbb
(bad)
(bad)
cmp
xchg
sbb
cmps
bound
jl
ins
add
int
sub
cld
dec
pop
sub
mov
cmp
mov
int
loope
push
int3
jae
adc
push
fnstsw
or
push
dec
pop
dec
dec
cmp
ins
cs
inc
cs
inc
adc
js
mov
dec
je
cmp
and
imul
xor
inc
gs
push
jp
push
arpl
arpl
and
outs
add
cmp
cmp
ins
outs
jae
mov
scas
cmp
sub
aam
fdiv
sub
push
mov
jmp
nop
and
xor
xor
xor
xor
xor
add
(bad)
jg
mov
das
xor
das
xor
sub
out
sbb
cmp
cmp
and
jb
data16
inc
leave
mov
mov
sbb
add
das
das
ja
cs
cs
addr16
add
xor
jae
outs
je
js
and
arpl
int
and
pop
cdq
xchg
and
ins
and
lahf
jae
sub
mov
(bad)
ins
das
js
jo
je
jb
das
imul
mov
dec
dec
arpl
pop
jae
test
push
data16
push
outs
das
mov
and
jne
and
jo
xchg
and
pop
mov
xor
arpl
out
push
pop
(bad)
xor
cs
scas
clc
push
into
cmp
inc
inc
cmp
inc
xor
cmp
cmp
xor
cmp
xor
scas
fcomp
inc
inc
inc
xor
xor
or
sub
lea
ins
sbb
xchg
xor
es
xlat
cwde
adc
sbb
imul
dec
gs
xchg
sbb
jbe
out
mov
dec
ret
imul
outs
sbb
xor
cli
push
xor
fcmovu
inc
inc
cmp
mov
cmp
inc
cmp
jno
in
fisttp
jle
inc
cmp
cmp
ss
xor
inc
jo
xor
ins
mov
je
inc
inc
mov
xor
xor
das
cmp
or
sti
sbb
call
jb
rcl
ss
jmp
cdq
mov
push
popa
ficomp
aam
retf
(bad)
dec
movs
add
mov
xor
ror
inc
pop
and
mov
fadd
jbe
(bad)
(bad)
(bad)
dec
stc
jne
pop
cdq
and
pop
xor
cwde
adc
out
les
cmp
ja
(bad)
jg
icebp
iret
cmp
ret
stos
test
out
pop
fdivrp
out
mov
and
and
xor
mov
and
jp
movs
aas
fdiv
cmc
xchg
pushf
inc
or
(bad)
(bad)
jmp
cdq
lea
sahf
int
shl
out
jle
jns
sar
(bad)
inc
ds
mov
fs
aaa
cmp
ins
lods
mov
stos
retf
jmp
xchg
sub
push
stos
xchg
xchg
nop
and
jb
(bad)
jmp
and
push
inc
inc
je
mov
or
jno
(bad)
jmp
mov
add
adc
mov
inc
in
and
(bad)
jo
(bad)
(bad)
(bad)
push
or
jno
cmove
sub
pop
xor
nop
xchg
xchg
cmp
jecxz
jp
mov
(bad)
(bad)
jmp
outs
retf
div
ficom
inc
mov
pop
jne
ins
dec
cmovne
movs
or
lds
cmp
sub
lds
pop
out
adc
loop
(bad)
push
(bad)
out
sub
cld
mov
(bad)
sti
dec
sbb
xor
push
pushf
dec
fcomp
push
(bad)
std
(bad)
(bad)
(bad)
jmp
pop
adc
or
repz
sub
xchg
pop
adc
pop
lock
mov
adc
out
fcmovu
inc
and
jle
push
or
ror
inc
adc
repnz
xchg
retf
test
imul
(bad)
mov
add
(bad)
jl
jge
cmp
mov
(bad)
jmp
pop
sbb
hlt
(bad)
test
inc
inc
dec
shr
push
rcl
mov
pushf
sbb
(bad)
(bad)
(bad)
jmp
inc
fs
adc
in
xor
pop
pop
xchg
jecxz
pop
or
push
xchg
jmp
mov
add
sub
mov
mov
mov
or
push
xchg
or
(bad)
(bad)
(bad)
jmp
mov
enter
pop
test
inc
lea
outs
xor
test
pushf
(bad)
(bad)
fcomip
push
pop
mov
push
pop
scas
pop
icebp
jle
cli
jge
jmp
cmps
inc
jp
(bad)
(bad)
(bad)
jmp
xchg
leave
mov
fwait
and
adc
mov
push
sub
gs
and
jae
mov
or
clc
jmp
stc
and
es
shl
or
jmp
and
or
in
sbb
jae
clc
cli
sbb
push
fdivrp
adc
or
or
(bad)
or
xchg
sub
(bad)
mov
je
push
push
cmp
repnz
pop
jl
xor
mov
pop
dec
push
(bad)
jmp
sub
add
mov
mov
test
(bad)
(bad)
(bad)
jmp
push
das
mov
(bad)
jae
cmp
ficomp
mov
int3
jmpw
xor
jmp
pop
adc
add
pop
out
in
ror
inc
jmp
jge
mov
into
stc
pushf
(bad)
(bad)
(bad)
push
mov
or
mov
or
adc
cmps
jnp
into
dec
dec
jg
sbb
xor
(bad)
(bad)
(bad)
call
lea
sbb
out
inc
hlt
div
push
add
cmp
dec
movs
push
addr16
out
mov
hlt
daa
addr16
(bad)
(bad)
inc
scas
inc
inc
ds
fidivr
dec
sti
dec
add
sahf
fbld
dec
popf
aam
and
and
or
mov
sahf
or
or
ss
or
repz
push
stc
push
(bad)
(bad)
(bad)
(bad)
jl
mov
lock
pop
cs
and
cmp
mov
cmp
mov
pop
lods
(bad)
(bad)
(bad)
jmp
cli
scas
fild
loope
fistp
inc
mov
mov
and
xchg
add
cs
and
sti
ficomp
shr
pusha
loopne
add
jecxz
sar
(bad)
(bad)
jmp
or
mov
dec
adc
daa
leave
cmp
arpl
inc
movs
xchg
or
scas
and
(bad)
out
jmp
sbb
cwd
retf
sbb
(bad)
(bad)
(bad)
cli
lea
rcl
aam
dec
dec
mov
enter
jg
fisttp
pop
lock
inc
or
adc
popa
cwde
pop
and
add
ret
or
add
stos
pop
(bad)
(bad)
(bad)
dec
xor
fwait
pop
ins
(bad)
cmps
shr
jo
xor
loop
cmp
out
arpl
or
add
add
adc
in
jecxz
jecxz
push
and
out
mov
(bad)
(bad)
jmp
xchg
add
int3
sbb
inc
outs
or
cmp
xchg
sub
dec
scas
aaa
xchg
ss
es
pop
xor
cdq
cli
(bad)
(bad)
dec
fisub
or
push
ss
mov
mov
mov
push
clc
lds
push
cmp
imul
mov
(bad)
(bad)
jmp
pop
jmp
push
and
jae
jmp
push
mov
ja
es
dec
sub
outs
(bad)
dec
int
sub
adc
add
jg
cmps
shr
adc
mov
push
push
jmp
cmp
sbb
(bad)
sub
clc
call
lods
cmp
xchg
cmp
out
sbb
inc
(bad)
(bad)
push
das
inc
icebp
aam
sub
cld
add
cmc
pop
out
retf
gs
lods
sbb
xor
or
inc
adc
add
add
push
adc
idiv
(bad)
aas
aas
fstp
sbb
fcomip
cmp
fwait
(bad)
jecxz
lods
lods
xchg
pop
adc
(bad)
(bad)
(bad)
inc
push
hlt
mov
and
pusha
ins
call
lods
mov
sub
popa
(bad)
(bad)
(bad)
dec
adc
adc
mov
nop
or
pop
mov
push
jmp
pop
cld
(bad)
(bad)
(bad)
(bad)
jg
cmp
pop
test
sbb
stos
or
cmp
inc
lock
adc
lidtd
sar
(bad)
(bad)
(bad)
call
add
call
pop
inc
push
scas
inc
push
sub
inc
jae
push
and
(bad)
jmp
and
cmp
or
and
(bad)
(bad)
call
mov
imul
mov
int3
or
or
dec
ret
or
div
push
inc
(bad)
(bad)
(bad)
inc
mov
jp
jno
scas
enter
xor
push
test
js
jae
movlpd
jmp
je
mov
lods
data16
adc
mov
data16
jp
out
or
sub
call
sbb
push
std
cmc
mov
stos
jo
add
aam
jmp
aam
mov
adc
mov
(bad)
(bad)
(bad)
call
int
popf
sub
sbb
outs
xchg
add
xchg
sub
jle
jle
nop
or
dec
sar
mov
push
xchg
popa
pop
sub
cmc
add
(bad)
in
cmps
in
xor
xchg
(bad)
(bad)
push
inc
xchg
cmp
and
add
mov
and
jmp
sbb
in
out
mov
fistp
pop
ins
aad
or
jmp
lds
dec
(bad)
or
mov
sub
push
xor
idiv
(bad)
inc
pop
adc
push
out
sbb
leave
inc
mov
out
xchg
movs
fidivr
push
mov
ret
pop
dec
xchg
pop
fimul
sub
mov
icebp
gs
adc
mov
jno
call
pop
add
ficomp
add
test
sub
jo
(bad)
cmp
leave
dec
rol
xor
call
(bad)
mov
push
dec
fisubr
mov
out
mov
adc
(bad)
(bad)
(bad)
inc
arpl
xor
(bad)
es
ret
jl
push
loop
push
jb
popa
(bad)
mov
mov
lods
cmps
retf
add
test
sub
mov
arpl
shl
sbb
push
and
js
scas
aad
push
jae
xor
cmp
repnz
shl
inc
dec
push
ret
or
ds
pop
mov
je
sar
cmps
fdivr
(bad)
(bad)
call
stos
xor
dec
pop
cld
fnstcw
adc
btc
xchg
jae
lods
xchg
(bad)
inc
mov
iret
jno
inc
movs
sub
test
call
sbb
fwait
test
pop
mov
pushf
aaa
inc
(bad)
rcr
jmp
aas
call
lea
dec
add
aas
mov
sbb
dec
adc
adc
xor
adc
cmp
(bad)
shl
xchg
(bad)
(bad)
(bad)
jmp
int3
jp
or
cmp
cmc
push
hlt
push
inc
xchg
sar
and
(bad)
(bad)
(bad)
(bad)
call
cmp
rol
push
mov
push
sbb
mov
mov
mov
adc
push
(bad)
(bad)
(bad)
clc
test
loope
loopne
into
cmp
push
shl
sub
mov
sbb
mov
xor
sahf
(bad)
(bad)
(bad)
inc
mov
pop
outs
std
mov
push
pop
push
or
add
out
movs
jb
inc
(bad)
(bad)
(bad)
(bad)
jp
jl
add
push
xchg
leave
or
mov
sub
cmps
in
stc
daa
sub
xchg
dec
(bad)
(bad)
(bad)
push
cmps
in
outs
dec
and
or
xor
rcl
ret
xchg
(bad)
(bad)
inc
daa
add
sbb
mov
add
pop
add
(bad)
(bad)
(bad)
(bad)
jl
ss
sbb
xor
rcr
pop
jg
add
ja
push
adc
adc
(bad)
(bad)
call
add
pusha
pop
rcr
jbe
add
ja
cli
out
jp
imul
movs
add
in
in
in
mov
and
xchg
mov
xchg
sbb
and
clc
cwde
xor
cmp
jno
xchg
mov
js
repnz
pop
je
jmp
gs
cmp
(bad)
(bad)
(bad)
(bad)
call
add
cdq
pop
das
or
fbstp
aam
inc
mul
pop
mov
(bad)
call
mov
adc
sub
push
adc
push
mov
push
movs
cmc
mov
int
adc
push
jne
scas
ins
xchg
repz
jecxz
mov
and
scas
mov
(bad)
(bad)
jmp
dec
sbb
pop
xor
dec
loopne
and
in
fwait
push
push
and
xchg
xor
jae
or
jns
gs
sar
pop
xchg
(bad)
xlat
cmp
loopne
and
das
clc
pop
add
jmp
std
ds
add
pop
mov
shr
pop
(bad)
(bad)
(bad)
fstp
arpl
test
in
xchg
inc
cmps
rcl
mov
mov
repnz
cmps
sahf
sub
sub
lods
out
dec
add
aaa
inc
ss
nop
in
stos
and
sub
clc
fwait
test
enter
dec
add
fimul
in
fiadd
fcom
fidiv
xchg
mov
std
fild
jg
rcr
cli
adc
xchg
and
xor
push
ins
dec
push
or
das
popf
dec
mov
int3
dec
add
pop
sub
rcl
pop
ds
mov
jmp
inc
push
push
push
pop
movs
stc
adc
test
jmp
mov
sbb
ins
sbb
xchg
es
fmul
add
(bad)
jnp
out
jmp
(bad)
aad
lds
inc
clc
pushf
sub
inc
or
push
xor
(bad)
(bad)
(bad)
inc
push
jbe
adc
mov
(bad)
sub
outs
sar
mov
and
lock
jo
leave
mov
ret
adc
and
sar
or
(bad)
(bad)
(bad)
(bad)
cmp
shl
stos
adc
mov
arpl
call
jle
push
(bad)
(bad)
(bad)
inc
lea
add
cmps
scas
add
pop
call
push
jnp
loope
popf
cmps
(bad)
mov
es
lahf
inc
int3
mov
mov
add
in
push
rcl
push
hlt
and
loop
dec
inc
pop
(bad)
sbb
(bad)
(bad)
jmp
push
add
jo
mov
call
dec
inc
mov
add
(bad)
inc
stc
xchg
add
dec
mov
add
fwait
sar
or
(bad)
(bad)
jmp
fsubr
ss
pop
xchg
add
jb
das
or
into
cmp
and
xor
mov
(bad)
(bad)
push
add
movs
outs
mov
xor
lea
dec
stos
clc
stc
cwde
jp
and
mov
outs
(bad)
(bad)
(bad)
call
fidivr
pop
adc
mov
movs
add
xor
dec
repnz
cmp
or
out
pop
push
test
and
fst
xchg
call
xchg
cmc
in
push
cmp
(bad)
(bad)
jmp
pop
or
sahf
push
fs
pop
test
aad
(bad)
(bad)
dec
dec
dec
pop
pop
stos
dec
outs
xchg
jae
in
or
loopne
jno
outs
mov
xor
(bad)
push
cld
pop
mov
add
cmp
test
mov
push
inc
cs
shl
bound
std
sbb
mov
xor
sbb
call
mov
add
sub
sub
mov
fsubrp
out
aas
popa
sti
in
loop
or
(bad)
(bad)
dec
aam
sbb
pop
push
mov
popa
and
(bad)
mov
jle
out
daa
repnz
push
(bad)
fcomip
call
call
addr16
pushf
inc
fdivp
gs
loopne
sub
pusha
mov
pop
repz
push
enter
push
imul
push
pop
aaa
and
push
mov
adc
jg
sbb
push
cmp
dec
add
adc
add
ds
jo
pop
(bad)
(bad)
(bad)
call
jl
retf
mov
mov
loope
inc
lods
mov
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
out
sbb
xor
aam
and
xor
and
push
les
inc
jl
stos
(bad)
(bad)
jg
mov
dec
push
test
rol
sub
ror
hlt
sub
(bad)
enter
xchg
rol
(bad)
(bad)
inc
dec
dec
adc
pusha
pop
lock
int3
pusha
cli
jmp
(bad)
outs
sub
adc
(bad)
(bad)
(bad)
(bad)
cld
mov
ror
call
and
mov
xor
mov
js
adc
push
(bad)
(bad)
mov
jp
inc
push
add
mov
mov
pop
in
aaa
sbb
jmp
repnz
(bad)
(bad)
jmp
inc
push
add
or
sti
rcr
je
sbb
add
add
inc
jo
sub
add
adc
fwait
jbe
int3
arpl
adc
and
cs
add
fnstsw
(bad)
dec
xchg
push
sbb
sbb
fstp
cmp
cmpps
or
(bad)
dec
sub
ret
push
push
xchg
nop
mov
or
or
ins
jns
out
arpl
(bad)
(bad)
jmp
adc
cs
loope
jle
ret
out
mov
out
push
add
pop
out
adc
(bad)
push
pop
icebp
cmps
outs
fs
push
retf
rcr
gs
cli
iret
inc
shl
adc
(bad)
(bad)
(bad)
call
pop
push
mov
mov
fsubr
adc
lds
rcr
adc
repz
(bad)
(bad)
(bad)
js
push
ret
cmp
jmp
sub
mov
adc
mov
adc
pop
(bad)
(bad)
(bad)
(bad)
jmp
fild
jbe
js
pusha
inc
mov
add
inc
and
fwait
adc
pop
jnp
(bad)
(bad)
jmp
xchg
xchg
xor
(bad)
test
arpl
test
(bad)
(bad)
call
sub
sub
ss
out
or
add
inc
push
pop
mov
(bad)
(bad)
(bad)
(bad)
jns
push
neg
pop
sti
push
xor
and
sub
fadd
pushf
fwait
pop
fisub
iret
jo
clc
(bad)
(bad)
(bad)
jmp
daa
sub
and
adc
test
sbb
or
add
and
mov
xor
lods
jns
fidiv
or
fwait
xchg
(bad)
(bad)
(bad)
(bad)
jle
test
cwde
cmp
inc
cmps
mov
ss
sub
dec
dec
out
retf
loope
sbb
(bad)
(bad)
(bad)
fstp
jle
cmp
add
or
enter
dec
adc
cmp
(bad)
inc
nop
fist
or
repz
shl
(bad)
fild
xchg
lahf
xchg
xor
cmp
inc
movs
in
jge
xor
inc
stos
jecxz
(bad)
(bad)
inc
dec
not
inc
fucomp
retf
in
add
pusha
or
push
or
jmp
(bad)
(bad)
(bad)
lahf
cmc
sti
fidivr
push
clc
pop
push
stos
scas
xchg
xchg
xor
loope
cmp
pushf
jo
xor
add
(bad)
(bad)
(bad)
push
push
mov
mov
pop
rcl
add
xlat
mov
lock
or
(bad)
(bad)
out
xchg
ret
or
pop
add
xor
and
movs
push
fbstp
icebp
outs
push
push
(bad)
(bad)
(bad)
push
lods
neg
push
inc
mov
mov
xchg
adc
fs
add
(bad)
jmp
pop
mov
jne
js
pop
rol
dec
enter
add
dec
dec
adc
(bad)
(bad)
jmp
(bad)
out
in
outs
pop
mov
jge
inc
jns
mov
lds
and
inc
aam
(bad)
(bad)
(bad)
inc
(bad)
mov
dec
inc
(bad)
push
mov
adc
and
push
mov
(bad)
(bad)
(bad)
inc
rcl
mov
jbe
mov
dec
mov
data16
into
jg
mov
pop
add
ret
(bad)
(bad)
(bad)
jmp
in
add
test
cli
sub
call
push
mov
shr
(bad)
(bad)
(bad)
push
cmp
stc
bound
mov
test
test
dec
pop
(bad)
sbb
jmp
or
(bad)
(bad)
call
xchg
or
outs
add
pop
mov
cmps
mov
retf
jno
push
push
sar
(bad)
call
sub
out
jmp
lock
addr16
int3
sub
scas
scas
call
call
fsubr
xor
dec
call
popf
aaa
sbb
dec
cli
outs
mov
popf
push
mov
cmp
(bad)
dec
imul
push
adc
xchg
sub
je
sbb
inc
jecxz
(bad)
(bad)
(bad)
(bad)
cmp
mov
inc
sahf
addr16
sahf
stos
and
fndisi(8087
mov
inc
inc
js
rcl
mov
gs
push
(bad)
(bad)
(bad)
call
adc
enter
inc
xchg
and
inc
rol
outs
(bad)
out
popf
(bad)
(bad)
(bad)
(bad)
jl
int
fst
test
clc
inc
xor
push
mov
rol
jno
push
addr16
int
xchg
(bad)
(bad)
(bad)
push
mov
cli
mov
(bad)
data16
mov
cmp
data16
push
adc
call
push
jecxz
rcr
xor
push
sbb
add
pop
push
cli
mov
(bad)
(bad)
inc
js
imul
sbb
inc
movs
jo
xor
gs
arpl
jmp
mov
sbb
add
mov
cmc
leave
mov
xchg
out
mov
pop
mov
jmp
out
int3
(bad)
mov
rcr
scas
lock
pop
pop
call
dec
pop
test
fimul
mov
into
or
add
(bad)
(bad)
dec
outs
inc
or
xchg
ins
dec
pop
dec
push
in
mov
data16
(bad)
loopne
sbb
xor
sub
(bad)
inc
sbb
fisttp
push
sbb
fmul
sar
pop
or
call
xchg
in
inc
sub
popa
jge
xchg
mov
fistp
adc
adc
adc
(bad)
(bad)
inc
or
fcmovne
add
leave
pop
adc
sbb
and
shr
(bad)
(bad)
inc
sbb
inc
add
fld
(bad)
(bad)
test
mov
(bad)
(bad)
jmp
out
cmp
jl
pop
sub
test
ret
test
clc
(bad)
push
clc
dec
call
aam
clc
in
push
popa
xchg
push
sar
fs
push
lds
xor
fiadd
scas
add
add
(bad)
jmp
aaa
jnp
jne
pop
push
inc
rol
pop
fld
or
pcmpgtd
call
das
mov
sub
sub
xor
xchg
mov
(bad)
(bad)
(bad)
jmp
fiadd
test
cmps
sbb
cmp
jg
mov
es
(bad)
(bad)
(bad)
inc
stc
jge
pushf
aas
adc
add
adc
inc
rcr
or
add
xlat
inc
out
mov
(bad)
(bad)
(bad)
call
jnp
push
add
mov
xor
or
cmp
jge
sub
(bad)
(bad)
(bad)
inc
mov
xor
jmp
ins
(bad)
pop
add
mov
jns
inc
cmp
pop
sub
(bad)
push
mov
loop
mov
into
mov
out
xchg
inc
retf
or
call
outs
sbb
(bad)
(bad)
(bad)
jmp
jmp
into
retf
sub
or
add
xchg
sub
test
(bad)
(bad)
inc
hlt
in
(bad)
sahf
jbe
mov
je
mov
or
xchg
add
xchg
and
(bad)
(bad)
dec
xchg
xor
daa
mov
sub
out
retf
outs
sbb
cmp
test
call
mov
sub
dec
test
loopne
sbb
add
add
dec
inc
test
xor
iret
xchg
mov
mov
outs
inc
or
jmp
and
loop
add
ret
pusha
(bad)
push
mov
and
sbb
jb
movs
inc
fdivrp
(bad)
(bad)
(bad)
fdiv
ror
lock
mov
jno
mov
and
jnp
bound
push
add
(bad)
(bad)
(bad)
dec
push
mov
mov
jae
popa
adc
fwait
mov
mov
lds
mov
(bad)
jb
js
(bad)
icebp
shl
test
jmp
push
pop
pop
or
or
clc
jno
(bad)
(bad)
(bad)
(bad)
jle
stc
pusha
hlt
scas
cmp
outs
inc
add
icebp
add
cmp
cdq
ja
(bad)
inc
cmps
int
or
cmp
jg
xchg
sti
push
jle
mov
mov
jne
push
jns
xor
mov
add
test
test
push
dec
sbb
inc
push
or
or
pop
fiadd
and
jo
pop
les
bound
stos
and
cmp
jge
xor
xor
xor
pop
and
xor
xor
pop
or
shl
xor
lods
mov
pushf
xchg
dec
pop
sbb
arpl
mov
and
aam
add
pusha
cmp
add
mov
and
mov
movs
das
add
xor
shl
and
fndisi(8087
inc
and
xor
and
pop
les
nop
outs
enter
adc
mov
cld
and
mov
mov
pop
sbb
ss
and
add
mov
push
(bad)
and
retf
imul
lahf
pop
arpl
jl
or
jae
add
outs
mov
adc
or
test
ret
adc
inc
push
cmp
pop
mov
and
and
fs
imul
push
gs
loope
adc
and
mov
jns
add
adc
add
fs
add
cmp
jecxz
inc
xchg
fs
or
cmp
pusha
loop
pop
test
add
loopne
add
add
es
imul
cmp
dec
mov
push
xor
pop
and
test
add
push
dec
mov
xchg
cmps
nop
or
inc
or
cdq
and
xor
adc
or
xor
gs
imul
mov
dec
popf
cmps
lods
pop
imul
fidivr
popa
bound
enter
inc
push
adc
daa
dec
scas
pop
lea
pusha
(bad)
adc
shl
mov
pusha
xchg
(bad)
and
push
daa
or
adc
cmps
stos
sub
fwait
xor
sub
cwde
adc
xor
xchg
mov
push
xor
adc
add
es
lods
retf
mov
aam
adc
(bad)
adc
sub
fs
and
aaa
ins
icebp
dec
adc
jge
stos
pusha
pop
fist
and
mov
xchg
ins
pusha
mov
add
nop
add
and
and
sbb
jo
rol
sbb
into
or
popa
jbe
push
and
sbb
add
cmp
and
and
xor
xchg
or
dec
xchg
std
pop
(bad)
int
retf
sbb
cmp
cs
xor
adc
push
dec
add
or
mov
cmp
dec
dec
dec
and
or
lods
bound
add
mov
and
lods
pusha
adc
(bad)
fcom
arpl
pop
add
das
xor
gs
or
push
and
push
inc
add
pop
lods
aad
sbb
mov
dec
sbb
(bad)
mov
pop
push
stos
and
dec
mov
xor
pop
add
shl
stos
xor
nop
adc
dec
inc
add
and
and
adc
mov
add
push
or
bound
sbb
shl
add
call
pusha
inc
out
adc
add
or
or
pop
jno
fst
mov
and
ja
sbb
pusha
pop
sub
js
push
inc
popa
dec
adc
or
or
es
sub
pop
out
setne
jnp
add
and
add
mov
sbb
adc
push
inc
es
xchg
inc
cmps
test
sbb
shr
es
inc
mov
add
xor
xor
pushf
xchg
sub
es
sub
add
pop
push
sbb
xor
xchg
dec
and
icebp
add
add
inc
add
add
add
call
sbb
push
cmp
push
or
push
pop
add
add
inc
add
aam
out
inc
or
pop
cmp
cmp
loopne
jmp
or
push
mov
inc
add
adc
add
add
mov
push
inc
movs
push
pop
stos
or
jnp
xor
jecxz
or
add
fiadd
push
mov
bound
inc
jmp
and
mov
push
mov
add
sub
sub
test
xor
mov
jmp
test
add
rcl
push
xchg
adc
or
sub
adc
mov
pop
jno
add
mov
push
add
imul
ficomp
lds
adc
or
aad
sbb
add
mov
add
sbb
inc
push
or
mov
sbb
adc
aaa
push
sub
jnp
xor
(bad)
in
add
dec
or
rcr
jne
fmulp
adc
inc
ja
test
or
jno
adc
sbb
fild
mov
dec
(bad)
mov
fsubr
push
sub
mov
or
mov
push
or
lock
adc
adc
sbb
sub
mov
mov
xchg
add
sbb
add
dec
fwait
add
pop
add
adc
or
std
or
adc
mov
dec
mov
mov
sbb
xor
inc
jl
lahf
cmc
dec
fiadd
icebp
push
inc
inc
and
xor
cmp
mov
cmc
stc
add
and
or
sub
sbb
xor
push
sbb
jle
lods
add
fadd
mov
sub
dec
data16
and
cmp
sbb
fstp
sub
push
lods
cdq
pusha
add
cmp
mov
or
xchg
ret
or
push
adc
outs
push
and
iret
pop
test
sub
pop
sbb
mov
and
pop
and
pop
lods
add
add
cs
jne
jo
pop
jb
add
or
ds
fwait
iret
xor
cmp
xor
cmp
add
ss
cmp
ss
xor
xor
push
push
xor
push
add
sti
pop
add
xchg
and
and
dec
mov
push
popa
mov
sub
push
sub
sbb
xchg
sub
dec
pop
ins
add
push
mov
test
sbb
and
xlat
sub
and
and
pusha
fs
push
enter
out
ss
or
xor
add
or
call
gs
jmp
jp
fsub
xor
mov
out
xchg
sbb
xchg
sbb
cdq
fild
es
sbb
das
pusha
frstor
xor
or
and
cmp
sbb
xchg
mov
push
stos
in
pusha
outs
stc
inc
sbb
add
xor
push
push
mov
sub
xor
loopne
sub
retf
push
adc
or
xchg
add
dec
loopne
inc
arpl
test
add
cmp
(bad)
jne
les
fisttp
push
and
add
lds
and
scas
xor
pop
pusha
and
mov
mov
ins
or
aas
push
retf
es
and
adc
fsubr
dec
fstp
ret
xchg
nop
test
and
mov
clc
and
or
add
cwde
xchg
xor
pop
ret
jecxz
ins
leave
add
push
ins
fld
leave
adc
mov
or
or
dec
adc
add
out
add
mov
xor
xor
int3
cmp
cmp
or
xlat
xor
xor
push
add
xor
push
or
add
push
imul
sbb
loopne
call
add
fidiv
or
ret
loopne
dec
popa
ja
ins
mov
xchg
aad
add
mov
inc
les
adc
mov
retf
adc
push
push
xor
xor
or
inc
or
xor
and
ins
pop
cmps
in
pop
add
or
sub
pop
(bad)
and
pusha
in
or
das
or
imul
add
sbb
push
dec
in
and
push
sbb
and
and
sbb
femms
mov
(bad)
sub
and
sub
fdivr
add
dec
adc
sbb
jne
add
fwait
js
add
dec
sbb
not
leave
add
pop
cmovno
je
pusha
add
and
sbb
inc
sub
sub
add
xchg
mov
adc
mov
lods
or
adc
sub
ficom
adc
mov
push
xchg
sub
test
ror
add
dec
sub
add
bound
and
cwde
test
pop
rcl
pop
or
xor
jecxz
add
sti
pop
add
rol
or
hlt
mov
and
xchg
rol
mov
pop
inc
and
fnstenv
add
pop
mov
mov
mov
adc
push
and
dec
xor
arpl
dec
and
and
inc
pusha
add
mov
mov
or
pusha
(bad)
pop
add
arpl
adc
lods
and
push
test
adc
sbb
rol
sub
inc
fild
sub
sbb
and
lea
dec
add
loopne
movs
sub
add
push
jl
sbb
pusha
bound
push
dec
nop
enter
jae
add
fadd
mov
mov
or
pop
jb
ins
push
add
push
adc
or
add
or
mov
aaa
popa
adc
scas
add
add
(bad)
dec
jno
add
add
mov
pop
dec
xchg
popa
adc
mov
(bad)
(bad)
(bad)
dec
out
fs
xchg
inc
das
les
sbb
pusha
mov
cmp
(bad)
call
rcl
xchg
cmp
jne
mov
mov
push
fwait
mov
fwait
imul
sti
(bad)
(bad)
jns
or
jecxz
pushf
repz
add
out
add
pop
(bad)
jmp
out
idiv
jmp
and
adc
sbb
sbb
(bad)
(bad)
(bad)
call
mov
dec
or
in
and
push
rcl
fild
xor
xor
call
adc
icebp
adc
in
test
ret
add
js
mov
aam
call
out
and
je
jp
sub
cmp
jle
nop
xchg
xchg
repz
cmp
push
mov
sbb
or
inc
cmp
pop
pop
pop
test
or
call
jb
mov
je
clc
sbb
add
pop
pop
add
inc
jle
sbb
(bad)
xlat
xlat
(bad)
jmp
inc
add
adc
add
xchg
xchg
jno
add
(bad)
pop
push
fwait
(bad)
(bad)
push
adc
mov
test
add
pusha
adc
(bad)
lahf
pop
mov
inc
jmp
pop
push
xor
(bad)
(bad)
jle
ss
mov
sub
addr16
mov
mov
out
cs
add
fwait
movs
enter
fcomp
cwde
pushf
or
pop
js
imul
mov
out
adc
mov
mov
aad
xor
pop
(bad)
fiadd
fild
jl
cmp
out
fwait
(bad)
jg
lods
or
dec
cs
pop
pop
loope
mov
add
push
js
xchg
pop
fpatan
(bad)
(bad)
in
popf
jge
add
int3
mov
in
lods
add
jge
xchg
add
ins
inc
push
pop
das
out
cmp
(bad)
sbb
pop
mov
inc
adc
or
cdq
ins
cmp
xor
jge
xchg
mov
outs
mov
outs
mov
lds
clc
jb
sbb
sbb
pushf
adc
(bad)
inc
popa
and
pop
pop
mov
mov
hlt
fisub
(bad)
fist
cmp
int3
cmps
(bad)
shl
xchg
adc
fstp
push
mov
scas
push
jmp
cmp
xor
jg
test
(bad)
jle
inc
hlt
out
bound
pusha
inc
dec
jnp
(bad)
call
inc
dec
inc
jb
dec
sti
lock
imul
fldcw
(bad)
(bad)
jae
scas
push
xchg
leave
movs
nop
pop
sub
xor
fbld
xchg
test
(bad)
mov
xor
rcl
add
lahf
add
jecxz
cmp
pop
popa
sbb
fbld
(bad)
(bad)
cmp
xor
rcl
xor
sbb
ins
sub
fldcw
mov
ss
push
pop
lods
mov
cwde
push
aaa
xor
jmp
push
jae
xor
(bad)
retf
push
sub
(bad)
(bad)
dec
enter
fisttp
out
jecxz
(bad)
jnp
lahf
out
mov
fadd
sbb
add
(bad)
(bad)
(bad)
inc
mov
retf
pop
aaa
pop
add
push
push
test
mov
sbb
(bad)
pop
pop
pop
mov
push
test
push
nop
dec
cmp
jno
popa
push
sub
add
stos
and
pop
fist
dec
imul
add
cmps
add
xor
cmp
mov
mov
adc
and
add
(bad)
(bad)
(bad)
push
push
xor
inc
pop
adc
xor
into
into
push
daa
sbb
jp
jg
scas
sar
dec
dec
retf
rcr
push
add
push
mov
mov
in
add
and
jl
clc
adc
inc
pop
cmp
es
int
daa
add
bound
cdq
and
mov
and
scas
sub
int3
out
in
ss
lahf
and
(bad)
(bad)
dec
push
call
lods
sub
cmp
imul
fcmovu
push
retf
in
dec
(bad)
es
push
pop
cwde
pushf
xor
in
not
mov
or
(bad)
(bad)
call
xchg
loope
cwde
xchg
xchg
xchg
and
dec
or
imul
jmp
jne
mov
call
xchg
adc
xor
push
mov
xchg
lahf
lahf
mov
xor
(bad)
(bad)
call
cmp
bnd
mov
loop
leave
leave
dec
rcr
ficomp
and
adc
mov
nop
jne
xchg
inc
loope
int3
out
bound
pop
pop
mov
push
xchg
xchg
lahf
mov
jmp
clc
inc
jnp
cmp
xor
sub
adc
das
rcl
mov
fwait
xlat
cmp
(bad)
jnp
or
frstor
add
sti
jg
inc
clc
add
push
or
cld
add
aaa
(bad)
jg
je
lods
xchg
dec
ins
js
ins
repnz
jl
sub
add
xor
add
inc
fidiv
fadd
movs
movs
push
sti
(bad)
jg
jmp
out
(bad)
cmp
xchg
xchg
aaa
xor
xor
ins
ss
mov
adc
push
push
jl
mov
add
add
or
sbb
pop
test
std
adc
iret
imul
and
adc
movs
add
rcl
pop
scas
sub
out
int
cmc
hlt
hlt
or
je
and
dec
mov
es
sbb
lods
(bad)
in
mov
sbb
jns
push
push
xchg
jle
fs
cli
icebp
(bad)
inc
xchg
out
clc
fbld
and
nop
adc
rcr
pop
push
(bad)
(bad)
(bad)
fistp
xchg
dec
xchg
push
nop
push
sbb
xor
add
dec
std
push
out
mov
std
das
xchg
xor
or
mov
xor
or
add
inc
dec
push
or
jl
fs
cmp
jno
add
xor
or
push
or
adc
jo
imul
gs
add
jl
out
cmp
(bad)
dec
test
jle
mov
jg
es
(bad)
(bad)
mov
mov
add
dec
mov
icebp
jecxz
add
fild
sbb
(bad)
(bad)
inc
or
into
mov
mul
aaa
and
hlt
cmps
bnd
cdq
outs
mov
mov
cli
jle
xor
adc
sub
js
in
pushf
push
rcl
call
test
ret
dec
cmp
mov
or
push
inc
inc
cs
mov
(bad)
(bad)
jmp
fadd
inc
scas
iret
xor
dec
(bad)
and
xor
adc
and
jp
(bad)
(bad)
push
xchg
in
dec
dec
inc
mov
push
daa
xor
mov
bound
test
popa
(bad)
(bad)
(bad)
(bad)
ficomp
inc
xchg
pop
inc
xor
lods
ret
arpl
dec
in
call
(bad)
(bad)
std
add
add
or
pop
inc
repz
loop
xchg
ret
(bad)
jmp
push
je
retf
and
in
sbb
popa
pusha
clc
(bad)
pop
push
outs
call
mov
mov
sbb
cdq
xchg
dec
ret
sbb
cld
sbb
ds
mov
addr16
xchg
add
clts
call
call
jge
ret
mov
jmp
or
sbb
data16
rcl
push
jl
arpl
call
fs
(bad)
(bad)
dec
xchg
add
aas
or
cmps
outs
xor
aas
je
stos
push
mov
(bad)
jmp
xor
out
add
jb
imul
push
xor
inc
mov
out
(bad)
(bad)
(bad)
jmp
retf
xor
in
jg
test
inc
xchg
and
pop
(bad)
push
push
fwait
data16
or
into
add
(bad)
jmp
push
mov
mov
add
pusha
mov
mov
mov
rol
call
add
or
pop
pusha
adc
in
mov
adc
mov
ds
sbb
add
push
sbb
add
mov
or
mov
sub
adc
jmp
add
fwait
cmp
ret
adc
or
les
arpl
adc
cs
or
and
push
inc
dec
mov
dec
mov
mov
and
jg
fs
outs
pop
cli
and
ins
nop
(bad)
popf
push
ss
shr
pusha
cmc
(bad)
loope
inc
loopne
or
inc
sar
cmp
popa
dec
mov
fdivr
xor
mov
sub
jae
ins
and
mov
and
jns
mov
lds
aaa
or
lds
add
add
or
mov
lea
loope
add
sbb
push
aaa
or
outs
popa
or
call
push
(bad)
xchg
int3
sub
add
add
mov
sbb
cdq
pop
or
sbb
xchg
outs
sub
cmp
xor
jae
push
cmp
or
add
xor
xchg
imul
sbb
xor
push
or
popa
ins
jne
inc
add
xchg
movs
and
nop
mov
dec
adc
or
and
sbb
mov
inc
sbb
in
xor
and
(bad)
xchg
and
add
arpl
and
sbb
and
outs
outs
ja
dec
inc
mov
pop
push
in
add
adc
shr
movs
repnz
popa
adc
stos
mov
mov
lods
stc
popf
ret
xor
sub
add
repz
mov
xchg
sbb
or
or
xchg
add
or
xchg
pop
cmps
sub
mov
stc
or
movs
test
clc
shr
fcom
popa
or
dec
push
xchg
xchg
jb
jb
and
jg
dec
pop
sub
and
xlat
pop
xor
adc
cwde
adc
pop
push
adc
mov
jne
in
fist
inc
hlt
add
fdivr
shl
fadd
popw
push
addr16
int
sbb
add
mov
outs
inc
fadd
fiadd
jb
pop
(bad)
fnsave
ja
call
pushf
loopne
aad
inc
imul
sub
ffreep
setbe
xchg
lock
shl
pop
fild
ficomp
popf
pop
in
in
in
mov
iret
(bad)
aas
mov
mov
jge
out
mov
dec
mov
inc
loop
and
test
adc
mov
into
xchg
aad
(bad)
push
mov
test
stc
sti
fsubr
pop
fistp
fwait
jg
xlat
jmp
(bad)
add
sub
sti
inc
fdivr
rol
loop
pop
call
jg
repz
outs
mov
pop
add
mov
mov
iret
add
push
xor
idiv
and
ror
xchg
pop
mov
aad
mov
dec
cmp
das
ins
test
inc
imul
fldcw
adc
xor
add
ror
or
add
adc
add
or
sbb
xor
(bad)
sub
rol
or
dec
sbb
out
cdq
push
or
sbb
or
or
inc
sub
xchg
pushf
int3
adc
adc
pop
jae
dec
in
add
or
or
cmp
and
or
inc
fbstp
mov
sbb
lock
pop
mov
add
push
add
out
add
sbb
and
add
jge
adc
xor
xchg
or
add
inc
(bad)
xor
or
xchg
or
inc
jge
mov
xor
cmp
enter
push
sub
inc
pop
xor
enter
push
sbb
fadd
(bad)
stos
adc
mov
stos
cwde
or
sar
into
jmp
ins
jae
pmullw
xor
shl
(bad)
add
or
dec
sub
push
xor
test
push
sar
in
sub
push
inc
xor
es
scas
movs
jns
in
add
or
ja
enter
or
or
call
push
dec
scas
adc
add
cmp
pop
xor
mov
xchg
sub
push
push
inc
push
add
mov
mov
or
or
gs
ja
pop
inc
js
aam
ins
cmp
test
arpl
sub
sub
(bad)
xchg
and
xchg
test
adc
iret
add
add
(bad)
xchg
icebp
inc
jns
sub
aam
push
inc
sbb
sub
jo
jae
xor
xchg
add
jae
dec
pop
sbb
je
pop
dec
mov
or
ins
sbb
inc
adc
and
ret
imul
add
and
and
mov
push
mov
mov
xchg
xchg
push
cwde
outs
leavew
jae
leave
and
imul
and
add
xchg
mov
push
and
adc
ror
dec
(bad)
fmul
xlat
sbb
mov
loopne
or
sub
inc
arpl
xchg
movs
push
mov
dec
push
fwait
sub
push
or
push
xor
xor
inc
outs
jae
movs
icebp
cmp
dec
add
stos
loope
push
pop
sub
and
imul
loop
popa
movs
add
add
movs
mov
movs
aad
inc
sub
inc
pusha
or
add
mov
cli
gs
push
rcr
ss
and
add
cmp
test
mov
and
ret
sbb
add
pop
mov
sub
and
pop
fs
and
rol
dec
test
retf
mov
in
and
and
test
sbb
inc
xchg
fnstcw
xor
rcr
dec
jnp
imul
mov
pop
imul
and
mov
retf
inc
daa
dec
add
inc
cs
sub
(bad)
push
sub
(bad)
hlt
sbb
adc
and
push
jae
inc
js
dec
daa
add
xchg
or
inc
push
mov
and
inc
ins
and
rcr
dec
in
ins
and
or
sub
push
fndisi(8087
sbb
inc
push
push
cmp
lods
pop
mov
dec
gs
add
sub
pop
dec
das
and
gs
xchg
inc
icebp
arpl
ret
ins
dec
add
inc
and
xor
shr
das
sbb
(bad)
neg
ja
push
daa
adc
scas
xlat
pusha
fcmovnb
push
outs
lds
mov
(bad)
sub
jmp
pop
mov
adc
gs
xchg
ret
xor
pop
mov
or
inc
mov
cmp
add
dec
xchg
add
mov
leave
sbb
mov
imul
or
and
mov
sub
adc
fdiv
adc
in
mov
lods
inc
mov
xchg
pop
push
lea
sub
push
data16
cwde
in
push
in
push
jae
xor
test
adc
ins
sub
div
dec
test
sub
jnp
jo
and
daa
jmp
scas
adc
push
outs
xchg
adc
nop
fisttp
jne
push
je
ja
addr16
repnz
ret
sbb
xor
xchg
pop
adc
and
jecxz
pop
push
movs
mov
cmp
or
(bad)
adc
lds
dec
adc
jmp
clc
xor
lods
xor
push
ins
call
push
and
mov
adc
xchg
mov
rol
push
mov
push
std
imul
push
sbb
add
iret
cmp
in
and
loope
(bad)
mov
mov
nop
arpl
push
cmc
inc
gs
rcl
outs
retf
xor
sub
push
inc
and
outs
pop
jo
dec
jae
or
in
fwait
mov
cmp
in
adc
inc
std
mul
mov
push
sbb
sub
fnstenv
mov
sub
xor
dec
add
sub
pusha
sub
xchg
sub
ins
jne
imul
cdq
and
repz
add
dec
movs
inc
cmc
and
and
in
(bad)
sbb
mov
fisubr
xor
or
mov
mov
retf
rol
xor
mov
stos
push
adc
mov
jae
inc
ins
(bad)
shr
or
pop
push
push
push
(bad)
das
sub
test
xor
daa
into
sub
push
pusha
pop
int
push
das
cmp
and
and
shr
cld
mov
xchg
ins
or
shr
push
dec
int3
adc
ja
lds
lock
inc
push
pop
or
stos
std
sub
sub
popf
inc
mov
(bad)
xor
and
add
les
shl
int
mov
inc
xchg
xor
dec
cmp
adc
arpl
or
in
je
jo
fsubr
jmp
addr16
leave
jmp
and
push
pop
dec
mov
push
inc
lods
jbe
ret
jae
scas
mov
cmp
dec
dec
ss
jb
es
sub
fld
scas
pop
sbb
xor
sbb
lds
push
xor
add
mov
mov
mov
mov
or
xor
push
loopne
adc
inc
movs
shl
sbb
add
inc
fadd
cmp
mov
imul
arpl
mov
or
addr16
js
pop
ret
push
mov
xor
mov
imul
and
sbb
push
inc
pusha
dec
xchg
popa
xor
and
addr16
cs
add
push
not
loopne
and
and
ins
add
or
mov
push
pop
js
sub
add
lahf
dec
push
adc
cwde
sbb
mov
pop
sbb
inc
or
pop
sub
sub
dec
cmps
scas
adc
bound
cmp
sub
or
test
inc
stos
fcomi
sbb
out
adc
ins
mov
gs
mov
dec
in
add
lds
ret
fwait
cmp
in
xchg
sub
mov
gs
fimul
push
sbb
ror
xchg
outs
push
or
pop
and
pusha
mov
and
inc
or
inc
xchg
cmp
(bad)
xlat
adc
add
sbb
xchg
push
sub
sbb
cmp
les
inc
inc
adc
jb
pop
inc
sbb
imul
or
xor
pop
jne
int
push
fsub
pop
sub
and
stc
cdq
rcr
sub
lahf
fwait
daa
push
ins
pop
dec
mov
adc
mov
sahf
daa
jnp
push
or
sub
jp
xor
bound
xchg
dec
mov
loope
sub
sub
aad
mov
ins
or
mov
adc
and
jp
sbb
shl
bound
rcr
aaa
pop
sbb
mov
xor
adc
ins
add
pop
jns
mov
lock
arpl
push
outs
jo
ins
jp
or
pop
xor
gs
shr
and
(bad)
mov
sbb
(bad)
pop
or
test
and
test
dec
push
test
and
popa
and
or
cmps
rol
nop
cmc
movs
addr16
xchg
call
xchg
and
xor
xchg
enter
mov
dec
(bad)
inc
fldcw
and
iret
sbb
es
and
mov
and
mov
jbe
imul
imul
inc
and
inc
xor
int
js
es
mov
xlat
xor
leave
fnstcw
popf
push
jno
fadd
pop
and
sub
dec
cwde
push
and
lods
inc
pop
pop
clc
jl
sub
cmps
movs
sbb
and
scas
ss
mov
(bad)
aaa
jae
ins
sbb
movs
sbb
sub
add
jo
gs
jl
add
addr16
jne
xor
shl
in
sbb
xlat
push
lds
inc
gs
nop
inc
nop
adc
sub
inc
sub
lods
pop
daa
dec
xchg
and
sub
inc
and
rol
sbb
or
out
fdivr
pop
push
xchg
sbb
adc
push
sub
js
hlt
push
jno
push
sbb
xor
and
inc
test
add
and
pop
add
pop
jae
and
dec
adc
shl
push
icebp
jb
lock
sbb
push
dec
test
sub
es
pop
ja
push
and
shl
inc
push
popf
shl
shl
cmp
imul
movs
test
mov
adc
pop
xor
cdq
adc
add
pop
push
cmp
imul
push
test
xchg
test
out
in
fnstcw
jae
adc
imul
nop
int
outs
test
adc
xchg
cmp
inc
fdivr
loope
outs
inc
jae
imul
shr
pop
mov
(bad)
fxch
push
dec
mov
xor
inc
imul
cmp
jae
inc
sbb
push
and
xor
xchg
add
pop
mov
mov
mov
cdq
ret
adc
cmp
movs
ins
in
cmc
pop
ja
mov
pop
loopne
xchg
push
jo
sub
jmp
std
and
sahf
es
cwde
jmp
loope
clc
enter
shl
xor
sub
out
xchg
add
sbb
repz
and
jnp
add
dec
cmp
push
cmps
inc
sbb
mov
sbb
and
sbb
(bad)
push
sbb
sbb
and
adc
push
inc
pop
out
inc
das
sar
xchg
push
cmp
and
imul
and
pop
xchg
lock
and
sbb
adc
xchg
xchg
imul
sub
lea
sahf
push
xchg
mov
iret
dec
jae
jbe
mov
and
sub
inc
sbb
outs
pusha
lods
cwde
and
add
lahf
jae
arpl
or
inc
lahf
pop
add
sub
sti
sbb
icebp
push
mov
add
cmp
arpl
stc
sbb
dec
cmp
cmc
add
rol
hlt
adc
mov
mov
and
and
ja
(bad)
gs
dec
adc
dec
ret
add
jmp
push
enter
rcl
fimul
and
dec
xchg
adc
mov
jbe
sbb
push
and
mov
add
data16
push
rol
mov
sti
mov
rcr
mov
push
jmp
sub
pop
push
inc
shr
ret
inc
fcmovnbe
jnp
outs
sbb
(bad)
push
mov
sbb
mov
inc
jae
xchg
nop
inc
sbb
add
imul
sbb
push
xchg
add
cmp
fsubr
rol
inc
sbb
xlat
mov
sbb
pop
and
pop
das
pusha
popa
stos
lods
cmps
sub
sub
xchg
(bad)
fldcw
push
pusha
cmp
popa
push
sbb
pop
push
pushf
ins
fmulp
jne
xchg
arpl
mov
jl
mov
adc
sub
mov
sub
and
ret
sbb
inc
and
pop
inc
pop
arpl
xor
add
rcl
sub
lea
sbb
gs
mov
add
shr
ret
div
dec
fnstcw
push
adc
sub
jecxz
mov
mov
and
sbb
or
fsub
cmc
push
(bad)
fmul
mov
sti
xchg
ss
sbb
and
and
push
pusha
pop
adc
ins
sbb
mov
cmp
ja
add
popa
cmc
dec
and
(bad)
sbb
cs
enter
dec
add
sbb
mov
xor
(bad)
stos
and
xor
push
and
push
or
xor
leave
add
dec
adc
daa
pop
lds
test
push
push
push
xor
sbb
js
adc
mov
mov
pop
sbb
data16
lods
adc
aaa
add
pop
cmps
adc
or
sbb
pop
shl
arpl
xor
inc
aas
pop
fistp
mov
test
imul
xor
adc
dec
pop
int
stc
pop
ror
retf
dec
or
ins
mov
fild
push
imul
cmp
jae
sbb
mov
inc
(bad)
repnz
jb
inc
sub
arpl
sbb
movs
xor
mov
retf
dec
shl
imul
imul
int3
lock
push
jb
and
push
pop
mov
mov
jo
pop
push
jae
xor
popa
popf
jb
outs
sub
adc
fisub
add
test
add
loopne
or
fwait
test
pop
jbe
clc
xor
or
iret
mov
daa
mov
push
adc
push
add
pop
sbb
ins
mov
sub
push
inc
movups
adc
inc
mov
test
movs
sub
adc
dec
vpshufd
xchg
in
aad
pusha
sbb
or
or
je
scas
addr16
iret
leave
push
mov
idiv
fldcw
imul
test
dec
aaa
mov
fmul
or
les
bound
inc
cmps
mov
and
ret
jmp
dec
imul
lahf
fs
xchg
cmp
jo
(bad)
dec
or
je
out
dec
jmp
cmps
sbb
add
mov
sahf
inc
dec
gs
aaa
int
xor
jo
ret
inc
jae
mov
mov
and
mov
test
add
sub
inc
add
add
add
add
call
int
jmp
nop
nop
nop
nop
nop
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jb
dec
add
jne
mov
sub
adc
adc
jmp
add
jne
mov
sub
adc
adc
jmp
xor
sub
jb
shl
mov
inc
xor
je
sar
mov
jmp
add
jne
mov
sub
adc
jb
inc
add
jne
mov
sub
adc
jb
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmp
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
and
and
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
pop
ret
jbe
movs
ret
jbe
or
popa
