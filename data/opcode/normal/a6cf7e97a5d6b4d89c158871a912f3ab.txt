pop
data16
inc
inc
add
pop
inc
outs
outs
ins
gs
outs
add
or
add
jmp
jae
add
jb
lea
sub
add
push
fdivrp
mov
add
push
ins
dec
ins
imul
add
imul
shr
pop
pop
dec
and
add
xor
mov
jns
test
push
outs
jb
out
lea
add
lods
mov
add
or
push
je
sub
mov
push
or
push
imul
push
imul
pop
and
add
shl
cmp
push
mov
nop
aaa
lods
call
push
pop
imul
je
popw
sbb
and
fcom
push
and
or
jb
popa
and
loopne
rcr
call
add
imul
dec
sbb
or
add
add
push
dec
cmp
add
jmp
adc
lods
ins
push
push
rcl
and
inc
fmul
pop
inc
jnp
or
fsubr
or
xchg
push
in
jbe
popa
fs
pop
jle
or
ret
push
jb
popa
jns
add
add
test
or
pop
push
imul
jmp
jg
dec
inc
enter
inc
cmp
and
sub
or
enter
pusha
or
enter
adc
enter
adc
and
inc
push
cmp
cld
jno
hlt
push
sbb
in
call
inc
pop
jg
aas
fdiv
jo
prefetch
ss
ror
sbb
ret
xchg
jl
js
aas
mov
xor
les
les
in
call
sub
je
movzx
mov
aaa
inc
enter
pop
ret
data16
mov
lods
(bad)
(bad)
std
fs
test
push
mov
add
push
inc
push
push
ror
add
push
test
loopne
mov
mov
ret
lea
mov
mov
mov
mov
cmp
jne
mov
mov
mov
push
nop
mov
add
scas
mov
mov
popa
mov
rcl
mov
or
adc
popa
pop
adc
add
or
jnp
lock
or
(bad)
push
push
push
mov
mov
fidivr
mov
add
rcr
(bad)
mov
mov
fsubp
call
cmp
jne
and
mov
or
inc
add
dec
push
add
ret
cmp
(bad)
mov
jmp
ret
mov
ds
add
add
scas
imul
out
fistp
mov
mov
sahf
cmp
jb
mov
add
call
add
int
pop
and
mov
cld
or
test
inc
leave
jmp
out
movsx
or
mov
add
cmp
sti
sub
jmp
sub
loopne
fild
stc
mov
adc
ror
std
jnp
add
jmp
sbb
sti
jne
shr
loopne
pop
and
lock
xlat
add
mov
add
push
loopne
jae
push
push
jg
cmp
push
mov
test
je
mov
mov
dec
mov
test
push
and
out
add
data16
push
mov
sub
sub
push
fcom
jne
icebp
push
nop
cmp
push
dec
popf
cmp
in
adc
(bad)
in
mov
(bad)
lock
inc
lds
jl
mov
rcr
cmp
fadd
lds
ud0
jae
out
ja
mov
add
cmp
mov
outs
xor
cmp
jnp
sub
out
or
sbb
sub
xchg
test
add
fild
jle
jne
mov
outs
in
push
xor
sbb
add
add
push
adc
aas
or
outs
hlt
or
ret
ffreep
add
jae
sbb
loop
mov
popa
mov
xchg
sub
mov
std
cmp
jle
add
pop
jbe
mov
cmp
or
xchg
jbe
or
jbe
scas
adc
sti
out
or
rcl
and
adc
popf
or
sbb
inc
push
je
out
push
inc
or
pusha
in
out
cmp
add
in
sub
or
sbb
jae
mov
cmp
jae
or
add
add
imul
rol
pop
test
clc
xor
(bad)
(bad)
aas
or
lahf
mov
repnz
shl
cmp
cmps
ja
cmps
xlat
test
pop
mov
je
mov
fwait
push
cdq
fs
ds
jle
stos
leave
push
(bad)
pop
add
jae
mov
cmp
pop
movs
and
push
and
sar
fdiv
and
ins
out
cli
jge
add
jo
sti
icebp
je
cmp
inc
jle
push
mov
inc
aaa
ins
jmp
pop
cmp
xor
mul
mov
mov
popa
dec
adc
ficomp
push
fisttp
inc
fwait
aas
lea
jne
cld
mov
aaa
cmc
jne
nop
ss
adc
js
inc
cmp
sbb
lock
sub
inc
popf
adc
and
mov
sub
jo
inc
mov
xor
jecxz
add
out
fld
jae
mov
out
ror
popf
loopne
mov
pop
test
je
xchg
imul
jo
or
push
adc
jmp
loop
rol
jmp
pop
sbb
aas
cmp
sbb
in
aaa
push
push
jnp
ret
(bad)
push
mov
push
cmp
or
cmp
adc
fs
push
and
mov
or
adc
out
pop
jg
hlt
inc
cmp
in
mov
std
jnp
add
rcr
pop
pop
mov
adc
sub
inc
ret
out
push
ficom
das
mov
in
pop
pop
xchg
push
or
pusha
das
xchg
test
shl
or
(bad)
iret
add
sub
in
out
mov
adc
ret
adc
addr16
inc
outs
imul
adc
jmp
mov
sbb
ds
nop
dec
fistp
push
cmp
sub
adc
cmp
pop
jg
fst
test
jns
add
sar
mov
or
cwde
mov
jmp
sub
mov
sub
mov
ficom
mov
xchg
mov
dec
fld
jb
add
or
mov
cmp
les
or
xchg
lea
cmp
jl
mov
fucomi
ja
jb
call
or
or
inc
(bad)
inc
sub
test
cld
iret
cmc
sbb
adc
adc
jbe
or
mov
or
push
rol
inc
xchg
or
jnp
das
add
and
jg
dec
loope
or
cmc
fistp
xor
lods
enter
ret
aaa
push
test
je
mov
neg
dec
jb
sub
cmp
cmp
and
add
test
mov
add
mov
clc
add
and
fucomi
adc
inc
or
and
mov
in
stos
add
pop
adc
add
pop
fucom
xchg
jno
xor
into
jge
jmp
clc
sub
sub
cmp
jge
idiv
or
out
push
jmp
daa
loopne
mov
inc
add
mov
in
mov
mov
sub
lds
mov
mov
ret
lea
add
ret
or
inc
or
iret
(bad)
mov
mov
jecxz
pop
mov
cdq
jo
dec
shl
pusha
aaa
adc
retf
pop
shr
adc
mov
scas
call
jmp
hlt
inc
adc
out
shl
sub
cmp
or
fdivr
mov
ret
imul
pop
(bad)
sbb
adc
out
xchg
arpl
or
mov
es
into
mov
pop
or
sbb
cmps
sbb
inc
add
lock
mov
dec
pshufw
cmp
test
les
push
mov
cmp
popa
fimul
jg
nop
sub
add
adc
and
sbb
sub
mov
xor
sbb
add
add
xchg
add
adc
rcl
loope
or
mov
sbb
mov
adc
pop
int3
(bad)
shr
and
ret
pusha
or
cmps
xchg
mov
xor
cmp
stos
jg
adc
jne
icebp
adc
div
mov
add
xlat
cmp
sbb
pop
push
jle
adc
jge
push
lods
cs
pop
mov
pop
je
shl
pop
pop
jmp
sub
movs
loopne
jne
sbb
pop
and
idiv
jne
movs
sub
cmp
loope
aas
jo
cmc
inc
add
xor
dec
(bad)
loope
sub
cmps
shl
xor
(bad)
fisub
or
rol
(bad)
xchg
mov
jmp
repnz
jne
fdivr
pop
xor
cmps
pop
xlat
test
retf
xor
jne
pusha
or
je
shr
jle
inc
cld
jbe
fiadd
leave
push
push
mov
dec
movd
add
or
sti
mov
mov
push
test
jg
icebp
mov
test
add
pusha
bound
sbb
inc
scas
shl
push
or
js
mov
jnp
jge
clc
jmp
cmp
mov
add
call
and
mov
jbe
jmp
pop
daa
js
mov
sbb
dec
(bad)
movzx
lea
sbb
dec
jno
xor
aam
arpl
and
adc
mov
sbb
jmp
jne
sub
sub
or
adc
bound
pop
loope
mov
lock
test
jne
test
ja
dec
push
ret
and
add
adc
rol
mov
or
mul
ret
adc
iret
(bad)
jge
xor
jnp
xor
add
pop
adc
sub
inc
mov
cmp
stos
or
jle
orps
dec
sbb
dec
mov
adc
loopne
clc
test
je
inc
cli
add
or
dec
or
or
jmp
mov
cmp
and
adc
adc
mov
and
cmp
inc
push
adc
cmc
and
mov
lea
jle
add
out
lock
pop
(bad)
mov
(bad)
jge
pop
sbb
cmp
sbb
idiv
jl
(bad)
mov
dec
(bad)
cmp
int
adc
out
mov
jge
dec
sbb
dec
sbb
push
push
stos
jo
cs
mov
movs
add
cmps
add
add
pop
or
mov
imul
rcl
addr16
and
ja
sbb
iret
adc
sbb
rcr
sbb
add
icebp
sahf
add
add
adc
jne
fcmovb
xchg
sub
xchg
ret
mov
cmp
push
inc
sub
ror
loop
sub
gs
loopne
or
mov
add
inc
mov
add
ret
ret
cs
and
and
sub
je
or
or
clc
sbb
dec
scas
cwde
push
sbb
mov
jno
xor
adc
pop
test
and
pushf
jecxz
(bad)
adc
add
xlat
adc
pop
shl
mov
ret
cmp
jge
inc
(bad)
mov
jae
xchg
dec
pop
ror
sbb
out
jge
mov
jmp
sub
mov
adc
pop
add
out
or
nop
cmps
or
mov
ds
rcr
or
mov
mov
enter
or
mov
ret
push
out
mov
xor
add
shl
bound
shl
(bad)
out
pop
xor
push
mov
iret
fldcw
xor
mov
mov
add
rol
add
inc
mov
mov
sub
xchg
sbb
inc
or
cmps
mov
jl
adc
sub
jecxz
mov
dec
cmp
cmc
div
sbb
cmp
cmp
ja
ja
adc
cwde
cmp
jg
cli
dec
jle
loopne
push
fsub
pop
and
add
cmp
xor
rcl
jmp
mov
out
rcr
loope
je
jmp
xchg
mov
mov
mov
div
je
test
js
rep
mov
and
rep
cmp
xor
lea
xor
fisubr
in
adc
xor
add
xchg
data16
or
add
sti
jecxz
icebp
adc
and
cmp
jo
in
std
inc
out
in
mov
jmp
cmp
xor
push
mov
sub
add
ja
call
jnp
sbb
ja
leave
dec
imul
aad
cmp
ds
jmp
outs
cmp
cmps
jge
lahf
cmp
jbe
mov
mov
inc
inc
adc
cmp
test
lea
pop
cld
adc
pop
ss
div
push
movs
scas
lea
add
xor
aam
push
and
rcl
out
(bad)
out
sbb
cmp
dec
jmp
mov
data16
sbb
leave
mov
inc
push
xor
mov
inc
dec
js
in
call
inc
sub
jle
repnz
jne
retf
inc
shl
cmps
pop
outs
inc
jg
mov
jmp
pop
out
jmp
pop
mov
sub
jg
popa
(bad)
(bad)
cmp
jb
cmp
ja
adc
leave
fld
frndint
fsubr
(bad)
lock
(bad)
fld1
faddp
fscale
fstp
das
sub
fnstcw
cld
std
and
fwait
or
ins
dec
fldcw
aam
hlt
in
cmc
addr16
fsubrp
ret
cmp
or
fwait
pop
pop
out
or
in
or
pop
inc
add
sub
dec
adc
adc
xor
data16
outs
lock
jg
mov
jbe
mov
addr16
and
pop
xchg
push
in
(bad)
call
dec
add
jnp
or
mov
imul
test
sbb
loop
dec
sbb
sbb
enter
inc
adc
sar
lea
push
mov
cmp
adc
adc
inc
mov
out
pop
push
xor
clc
ins
jne
push
add
inc
shr
jae
(bad)
add
push
push
and
pop
and
(bad)
push
or
jae
outs
add
leave
mov
xchg
mov
xchg
fdiv
scas
jno
cli
js
jb
test
jecxz
push
add
or
or
adc
sub
js
or
add
and
add
repnz
dec
fsubrp
daa
cs
add
cdq
or
and
and
xchg
mov
mov
push
cld
push
rsqrtps
inc
dec
test
out
sbb
cmp
mov
cmp
in
jne
dec
add
push
inc
movs
inc
inc
out
jae
pop
fld
ja
xchg
push
aaa
aam
pushf
fstp
mov
loop
ror
mov
inc
mov
ins
cmp
jae
cmp
push
xor
out
push
gs
loopne
mov
jp
int3
dec
jne
jmp
lea
out
xchg
or
lahf
and
adc
xlat
aad
push
cmc
(bad)
push
push
pop
out
sub
xor
hlt
jmp
cmc
movs
lods
mov
cmp
pushf
repz
inc
cmp
xor
adc
add
pop
push
ins
setnp
imul
test
cmovns
jg
scas
(bad)
jmp
sar
sbb
fucomi
pop
cmp
mov
pop
and
dec
and
sbb
xchg
in
ret
and
lock
mov
ja
and
loopne
mov
sbb
iret
dec
xor
sub
and
sbb
jmp
adc
mov
fstp
(bad)
daa
mov
ret
mov
(bad)
jmp
xlat
mov
leave
add
jb
cmp
ja
mov
pop
mov
inc
add
cli
jg
xlat
repnz
sub
jbe
mov
jmp
xor
loopne
mov
inc
xchg
dec
out
sbb
retf
dec
ret
dec
retf
mov
inc
inc
and
fidiv
mov
shr
inc
inc
jg
add
push
shr
je
mov
jecxz
push
mov
cmp
jne
dec
je
mov
pop
add
aaa
add
add
idiv
retf
sti
dec
jne
jmp
adc
loop
je
mov
cmp
jne
push
mov
dec
add
dec
add
adc
push
aad
add
adc
cmp
jne
shr
shr
sbb
jle
or
xchg
into
shr
or
ins
inc
dec
dec
pop
cmp
retf
enter
ret
and
mov
cmp
jne
dec
jae
call
dec
or
jae
sbb
mov
jecxz
cli
or
int
enter
or
ja
push
or
stos
adc
stos
pop
daa
push
mov
mov
add
push
inc
cmp
je
mov
or
sub
jns
pop
and
je
pop
je
xor
dec
fdivrp
clc
mov
dec
inc
test
jmp
or
jge
jmp
or
cmp
ja
lea
pop
add
push
inc
mov
int
or
jge
jmp
inc
mov
js
pop
addr16
mov
inc
inc
inc
jmp
mov
fist
popa
jb
xchg
and
add
not
add
scas
leave
popf
add
aad
xor
mov
lea
add
jbe
test
rol
adc
and
inc
arpl
inc
push
cmps
sbb
aam
add
(bad)
jnp
pop
jp
aad
sub
jno
not
inc
into
cwde
adc
js
xchg
and
inc
jmp
lea
js
add
sub
cmp
jg
cmp
or
jecxz
inc
pop
test
add
pop
jmp
xchg
adc
dec
or
lods
fild
inc
mov
inc
jle
mov
scas
or
mov
push
mov
aad
ret
and
js
gs
test
jg
call
and
push
cmp
push
inc
shl
sar
sbb
repz
pop
mov
xchg
clc
std
js
fisttp
inc
sub
cmp
rol
sbb
cmp
or
inc
lahf
or
into
mov
jnp
sub
inc
and
inc
dec
jne
push
or
aad
out
mov
retf
mov
cld
ret
mov
sub
inc
icebp
pop
push
jae
inc
dec
or
loopne
je
inc
(bad)
fdivrp
aad
test
adc
fld
xchg
mov
aas
adc
sub
je
das
sub
add
pop
(bad)
and
jmp
in
out
addr16
jge
mov
xor
pop
in
stc
sbb
jmp
fld
loop
jmp
fldz
adc
jns
imul
enter
in
cli
or
or
dec
push
in
ret
mov
adc
es
stc
and
sbb
xchg
and
inc
mov
mov
shl
jg
daa
sub
test
out
sub
pop
jecxz
cld
int
inc
leave
sbb
mov
cmp
fidivr
mov
mov
(bad)
mov
bound
cmp
es
das
jmp
xlat
fadd
outs
xor
xchg
push
or
push
push
(bad)
jg
in
int3
into
sbb
ror
mov
push
pop
test
enter
mov
inc
cmp
(bad)
(bad)
dec
and
daa
(bad)
retf
into
pop
inc
test
xchg
clc
js
aas
sbb
pop
(bad)
mov
addr16
(bad)
(bad)
inc
inc
xchg
and
cld
gs
sahf
mov
sub
inc
aad
iret
dec
(bad)
(bad)
fistp
js
inc
mov
stos
mov
cmp
or
mov
pop
out
sub
(bad)
(bad)
jmp
imul
(bad)
div
jl
xor
cmp
call
mov
(bad)
(bad)
call
push
inc
mov
push
sbb
sar
repnz
test
nop
(bad)
(bad)
(bad)
inc
daa
movs
lahf
nop
inc
pop
stos
clc
scas
adc
(bad)
inc
pop
pushf
mov
pop
pushf
mov
fs
aam
imul
loope
(bad)
(bad)
(bad)
(bad)
jp
iret
inc
bound
ds
push
cmps
scas
mov
pop
or
add
dec
in
xchg
cmp
xor
in
cmp
sahf
xchg
pop
cmps
lock
mov
popa
(bad)
(bad)
call
mov
and
addr16
repz
mov
sub
and
paddw
les
outs
bound
xor
das
(bad)
adc
mov
pop
mov
ret
jmp
fucomi
fcos
xor
clc
pop
jne
push
pop
and
cmp
add
add
pop
das
jno
test
add
lea
push
imul
add
pop
mov
xor
push
push
fs
fdivp
cli
mov
mov
addr16
add
mov
sbb
and
push
jmp
loopne
sub
and
lahf
inc
jmp
push
clc
imul
or
mov
(bad)
dec
push
dec
inc
push
push
inc
push
inc
pop
inc
outs
jb
popa
outs
fs
inc
gs
jo
imul
dec
add
push
dec
popa
jae
push
popa
ins
jne
fninit
fldcw
jb
mov
dec
mov
lea
add
xlat
mov
call
push
inc
inc
iret
cs
(bad)
(bad)
jle
sbb
inc
sub
cmp
jne
dec
mov
xor
and
jne
adc
inc
mov
ss
fsubr
add
in
mov
rcr
sub
aaa
int
mov
pop
or
jbe
rcr
test
or
sub
pop
push
movups
fs
js
pop
fisttp
sub
loopne
mov
jbe
pop
xor
out
mov
jge
mov
test
lds
ret
push
shr
dec
rep
pop
call
aas
loop
hlt
sub
pop
(bad)
add
sbb
mov
(bad)
jmp
cmp
je
pop
mov
add
jae
dec
push
mov
mov
pop
pop
sbb
cmp
jg
cmp
pop
lods
(bad)
mov
mov
mov
mov
xor
push
icebp
inc
or
xchg
cmp
ins
jae
paddd
pxor
and
aas
test
add
adc
push
mov
lock
test
adc
push
mov
mov
xor
ficom
add
mov
fld
push
mov
push
add
inc
pavgb
pop
(bad)
shl
(bad)
outs
mov
jecxz
js
(bad)
dec
setne
jecxz
ins
cmp
movs
push
add
test
out
mov
sub
or
jne
jb
cmp
fisttp
or
push
retf
repnz
or
pop
inc
mov
fcom
add
and
add
adc
mov
hlt
out
jmp
test
mov
mov
cmp
je
mov
leave
jne
mov
sbb
nop
push
xchg
jmp
retf
or
lds
push
add
repnz
je
pop
in
neg
stos
inc
vaddsd
shr
mov
pop
cs
xchg
je
mov
icebp
sub
pop
pop
jmp
out
mov
lods
push
mov
jno
sti
popa
xor
das
mov
add
call
out
(bad)
fadd
sub
dec
or
pop
or
clc
jmp
or
div
mov
inc
push
stos
pop
xchg
icebp
mov
mov
popa
lock
jmp
mov
sbb
jns
xchg
adc
mov
add
sbb
add
dec
jne
icebp
fistp
(bad)
fucomi
sbb
add
sbb
jecxz
dec
(bad)
mov
inc
add
iret
out
test
int
lahf
adc
push
add
movs
jmp
pop
jmp
xor
dec
rol
push
cs
push
sbb
mov
dec
fcomp
sbb
jmp
pop
lahf
(bad)
ror
in
push
pop
add
jl
call
rcr
hlt
xor
daa
adc
mov
mov
(bad)
(bad)
psubd
inc
add
cmp
inc
or
or
pop
test
aam
sub
or
stos
jp
ror
adc
iret
add
push
clc
shufps
loop
in
leave
jg
cdq
mov
call
cmp
adc
add
pop
(bad)
in
push
call
fadd
lds
fiadd
cmp
mov
mov
loopne
cmp
sub
or
jae
data16
inc
sbb
pop
pop
push
push
and
add
fistp
inc
add
or
jne
movsx
inc
inc
jmp
dec
mov
rol
dec
outs
mov
jecxz
mov
(bad)
adc
loop
mov
es
fdivr
adc
jecxz
(bad)
and
fdivr
test
mov
cmp
aaa
dec
adc
outs
cld
les
or
add
mov
test
push
test
or
icebp
aas
add
scas
cmp
je
xchg
repz
in
jae
jbe
test
mov
or
mov
cmp
adc
clc
add
stos
call
xor
je
push
jne
push
push
sbb
push
jns
(bad)
mov
clc
jo
dec
add
or
movs
add
sbb
push
sub
push
sbb
test
add
sub
mov
mov
or
inc
add
push
add
test
add
lock
jecxz
mov
mov
dec
adc
xor
hlt
mov
mov
out
leave
inc
mov
push
add
mov
add
inc
pop
cdq
push
or
xchg
pop
add
lds
push
pop
push
pop
mov
out
or
jb
or
fdivr
dec
fdiv
adc
(bad)
rcr
inc
or
mov
jg
data16
pop
pop
jmp
dec
jne
inc
shr
outs
inc
jmp
or
daa
mov
out
test
adc
ins
or
cs
push
cmp
pop
adc
fs
or
clc
test
sub
arpl
sbb
mov
cmps
mov
mov
sub
push
sbb
jg
add
fsub
je
dec
xor
pusha
cmc
je
jle
adc
push
outs
lock
or
out
out
and
psubd
inc
cli
push
cmps
clc
fnstenv
inc
mov
ret
dec
clc
daa
pop
mov
call
cmp
out
loopne
push
sbb
xor
aas
stos
xchg
push
sar
pop
pop
lea
pop
jmp
xchg
sar
ss
push
push
push
push
push
inc
pop
and
mov
and
push
(bad)
xor
sti
push
mov
inc
mov
or
pusha
add
jg
mov
outs
or
sub
scas
loope
cmp
stos
adc
adc
shr
sub
scas
nop
bound
hlt
cwde
gs
xor
cmp
push
xor
sbb
jnp
rol
xchg
mov
add
mov
pop
cmp
push
sub
call
(bad)
pop
lods
cmp
pusha
add
call
xor
push
(bad)
fdivrp
fidivr
sub
adc
std
std
(bad)
(bad)
jnp
das
dec
cmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
scas
or
jmp
mov
jge
mov
fidivr
or
jmp
mov
jmp
mov
ins
popa
(bad)
cmp
cmp
push
or
pop
ret
dec
test
cdq
mov
xstore-rng
cmps
add
into
jno
add
test
inc
pop
xor
sub
sub
sbb
pop
add
push
rol
mov
or
push
ins
adc
fnstenv
adc
ret
mov
jle
mov
inc
or
enter
push
(bad)
int
aam
mov
cmp
call
in
adc
cmp
je
cmp
jne
inc
daa
loop
sbb
rcr
test
or
pop
or
jo
outs
jg
aad
sbb
fstp
dec
mov
inc
fiadd
mov
cld
call
and
jmp
jo
popa
test
add
rol
mov
xchg
arpl
or
dec
mov
ins
push
and
js
jp
repz
add
inc
mov
inc
dec
mov
(bad)
xor
movs
mov
adc
enter
fsub
adc
xlat
mov
mov
mov
clc
push
xor
ret
xchg
cmp
inc
(bad)
jmp
push
adc
icebp
addps
ror
pop
pop
jns
cmp
mov
dec
or
fcomp
addr16
aaa
aas
jne
add
inc
lock
mov
push
xor
add
idiv
add
lahf
mov
mov
daa
mov
out
je
sbb
add
shl
mov
fst
jg
xchg
clc
mov
and
mov
cmps
neg
sbb
inc
xchg
pop
mov
shr
and
movs
pop
leave
idiv
and
push
xchg
dec
xor
cmp
cmp
cmp
jge
or
sbb
push
push
mov
out
xor
inc
psraw
pop
ret
mov
fsubr
or
je
jge
xor
inc
push
jo
add
ficomp
fs
cmp
jne
cmp
adc
and
sub
mov
call
mov
popa
mov
jne
dec
and
xchg
xor
or
jbe
(bad)
shl
push
jne
mov
adc
sub
jbe
or
jno
xchg
inc
adc
pop
pop
pushf
aad
inc
adc
sub
push
or
mov
test
add
js
shl
dec
shl
jne
cmp
adc
mov
imul
imul
ret
pop
push
xor
ins
and
pop
ds
mov
mov
push
sbb
out
movs
neg
cmps
rol
stos
jns
push
mov
inc
or
rcr
cwde
pop
pop
outs
imul
or
pop
rcr
stc
cmp
daa
and
cmp
fiadd
stos
test
jecxz
pop
or
mov
inc
test
cwde
daa
clc
inc
hlt
pop
xchg
dec
(bad)
push
adc
(bad)
mov
dec
jl
lock
clc
std
fild
and
pop
(bad)
mov
push
sbb
imul
pop
push
add
jmp
jne
xchg
inc
inc
jg
sbb
mov
stc
inc
pusha
aaa
test
ret
dec
mov
dec
mov
xchg
adc
sahf
fld
push
aas
ds
push
jle
add
loopne
mov
jle
push
adc
add
adc
cld
mov
popf
ja
cwde
mov
mov
loopne
cmp
lock
cli
and
cmp
push
sbb
xor
push
lea
push
push
mov
loop
adc
lods
adc
push
lock
mov
add
fnstcw
(bad)
cld
mov
out
movs
or
outs
add
xor
scas
jge
push
loop
mov
mov
cmp
jl
popa
or
and
retf
lds
and
dec
fstp
sbb
sbb
pop
sbb
add
cmp
clc
and
push
mov
mov
clc
mov
nop
pop
cmp
or
xchg
cmp
je
pushf
xchg
fild
xlat
or
je
add
jo
jge
jno
call
pop
sub
jmp
cmp
cmp
or
or
push
or
data16
in
add
jae
jmp
inc
xchg
nop
push
cmovno
sbb
mov
imul
pop
add
pop
pop
xor
scas
xor
sub
sub
cld
dec
adc
fnstcw
add
out
mov
inc
pop
mov
sbb
ds
add
push
mov
pop
stc
call
mov
popa
lock
inc
push
cld
add
cmp
xchg
jns
nop
(bad)
jnp
mov
stos
sti
push
pop
xchg
sbb
loopne
cmp
je
cmp
imul
js
pop
sub
shr
mov
cli
cmc
cld
add
(bad)
mov
mov
cli
lds
push
sbb
push
pusha
aas
cmovg
mov
mov
jmp
jbe
mov
push
or
out
adc
push
cmp
cmp
(bad)
xor
mov
cld
cmp
and
(bad)
jne
xchg
adc
clc
mov
mov
jae
add
dec
jmp
xchg
aam
adc
inc
pushf
sbb
shr
dec
jne
jns
push
add
add
popf
xor
add
xchg
jmp
into
out
es
jl
stos
or
mov
mov
pop
es
add
add
repnz
cmp
out
cmp
sbb
or
and
in
in
sbb
and
jmp
aam
cmc
add
push
test
mov
xchg
add
add
(bad)
aad
(bad)
cmp
out
add
push
sub
loopne
xor
sbb
push
sbb
cwde
pop
pop
mov
push
sbb
int3
jecxz
popa
int3
into
pmaxub
icebp
push
es
jl
cmp
jge
sub
pop
jl
jae
adc
stos
add
adc
shr
in
scas
in
push
fwait
jmp
add
dec
push
fst
ret
pop
int3
cmp
mov
xor
sub
jge
mov
cs
scas
jle
inc
sub
add
lea
inc
dec
push
sub
cmp
sub
push
out
mov
push
mov
js
mov
dec
jge
cmp
adc
imul
add
and
pop
cmp
mov
lea
lock
or
pusha
inc
push
add
not
jmp
mov
xchg
xor
mov
push
pop
push
cmp
adc
or
(bad)
cmp
sbb
pop
cdq
jle
add
and
sbb
xor
(bad)
rcr
mov
jo
(bad)
or
loope
sbb
arpl
cli
pop
cmp
retf
push
and
mov
mov
jle
jmp
pop
out
or
mov
lods
mov
aad
mov
xor
les
std
and
mov
ret
cmc
sbb
or
ret
in
in
cmp
in
jbe
push
fcmovne
adc
cs
push
mov
push
sub
ss
or
test
push
cmp
adc
mov
mov
repz
les
pusha
loopne
jmp
es
pop
ds
pop
pop
and
cld
add
aas
and
sub
pop
repnz
aam
cmp
mov
(bad)
jmp
push
aas
(bad)
jmp
or
xor
les
repz
sbb
mov
cmp
rcl
(bad)
jg
dec
jno
mov
xchg
add
(bad)
cmp
mov
add
pushf
cmp
jg
imul
aad
test
push
loope
inc
mov
rcr
jge
dec
jge
aas
jle
retf
dec
cld
or
pop
mov
ja
add
add
inc
sub
adc
or
jmp
add
mov
add
(bad)
int
ror
jle
ror
pop
xlat
fmul
pop
sbb
mov
xlat
pop
sbb
outs
cdq
mov
sbb
retf
push
jge
push
xor
inc
pop
in
push
test
adc
pop
pusha
mov
les
add
repnz
adc
push
lock
and
je
in
pop
mov
push
inc
sbb
inc
push
xor
jb
out
add
add
or
enter
cvtps2pd
or
add
ds
adc
cmp
jge
adc
push
cmp
dec
cmp
aam
(bad)
jmp
sti
sub
or
ret
cmp
push
mov
test
dec
dec
or
push
xchg
in
dec
inc
or
pop
add
and
push
add
push
pop
adc
cmps
adc
xor
adc
push
daa
cmp
pop
cmps
cmp
dec
cld
adc
enter
adc
cli
int3
add
add
adc
push
pop
inc
mov
test
retf
jno
fimul
dec
add
lea
inc
daa
jge
jl
push
test
int
es
pop
dec
jg
mov
(bad)
mov
mov
imul
or
or
pop
(bad)
push
or
je
cmp
je
cmp
cmpxchg
nop
call
jle
cdq
clc
jmp
adc
or
adc
loopne
pop
out
jmp
push
mov
mov
mov
add
dec
cs
pop
jbe
adc
cmp
pop
jmp
cmp
or
sub
lock
xchg
adc
pushf
jmp
or
je
xchg
stc
pusha
adc
jo
loopne
stos
movs
imul
add
jnp
jnp
push
test
popf
jg
xchg
and
mov
inc
mov
push
aaa
or
pop
out
add
fnstenv
ds
jmp
daa
out
push
dec
fsub
inc
ds
repz
pop
mov
inc
inc
or
sub
test
sbb
cmp
push
in
or
jmp
sub
mov
loopne
adc
push
scas
div
pop
jb
inc
fs
or
dec
imul
sahf
pop
mov
push
cmp
or
sbb
sbb
inc
sahf
in
sbb
enter
xor
sbb
add
fdiv
pop
adc
sbb
and
aaa
mov
mov
lea
outs
pop
std
pop
cmp
dec
clc
push
pop
add
sar
add
ds
push
enter
out
loopne
(bad)
jmp
mov
or
out
loopne
mov
or
jo
cs
or
or
adc
xlat
pop
fst
mov
xor
jmp
pop
in
arpl
ds
mov
cmp
(bad)
push
sbb
dec
sbb
inc
inc
inc
in
inc
mov
pop
jmp
aas
add
xor
jns
jns
and
mov
mov
in
and
pop
clc
add
jne
inc
es
sbb
add
aas
daa
ins
and
mov
in
inc
sahf
out
inc
push
popa
jge
mov
in
or
adc
hlt
xor
out
sub
mov
imul
mov
add
daa
adc
data16
inc
dec
xor
add
daa
or
ja
sti
or
add
add
inc
jmp
std
arpl
inc
add
cmp
add
in
jbe
xor
retf
adc
xor
mov
sub
pop
adc
nop
push
add
(bad)
scas
jl
push
jg
cld
adc
pop
mov
xchg
xchg
cmp
or
cdq
shr
aad
push
call
or
in
fidivr
cmc
pushf
stos
dec
add
fbstp
bound
jge
jp
test
or
or
inc
aam
add
add
mov
dec
sub
jne
mov
dec
mov
mov
adc
sub
inc
ficomp
fs
inc
push
sbb
jl
sbb
test
xchg
cwde
mov
mov
add
in
adc
or
inc
test
cmovno
sbb
rol
fdivr
pop
mov
cmp
test
hlt
mov
jg
clc
daa
imul
sbb
sub
and
add
retf
pop
pop
push
ret
push
mov
xchg
inc
mov
pop
cmps
(bad)
pop
sbb
push
sbb
leave
dec
popf
pop
or
je
outs
neg
vmwrite
neg
imul
fiadd
or
xor
fincstp
fild
fincstp
add
not
loopne
call
sub
rcl
cmp
push
pop
cmp
jb
sub
sbb
inc
loop
adc
xor
pop
test
ds
mov
xor
sub
repz
sub
adc
xor
pop
pop
pop
add
and
mov
mov
xchg
push
mov
repnz
int
das
mov
sbb
jl
or
add
aas
jecxz
ret
or
movs
pavgb
outs
aas
xchg
mov
cmp
rcl
jmp
lock
jb
inc
push
or
jmp
test
dec
inc
cmp
(bad)
cli
aaa
clc
out
pop
add
mov
add
add
ja
or
je
or
jne
sub
bound
pop
pop
push
xlat
xor
xor
mov
mov
or
psubw
jb
out
js
rcr
movs
dec
mov
sbb
aaa
jmp
push
in
aas
mov
cmp
or
jb
jmp
jl
and
aas
pop
sub
jbe
jmp
jg
mov
cdq
int
rol
or
outs
lock
xor
sub
movs
mov
push
fsub
inc
xor
ror
push
ret
cmp
popa
in
mov
push
push
in
pop
rol
xchg
sar
dec
inc
dec
mov
adc
int3
cs
jg
or
sub
pushf
and
push
xor
nop
sub
adc
jmp
pop
add
or
xchg
shr
setl
cmp
rol
(bad)
dec
add
ins
aam
mov
push
jge
and
adc
or
adc
loopne
out
add
retf
inc
push
push
cs
or
mov
jle
stos
sbb
cmp
pop
mov
ins
add
(bad)
lods
cmp
dec
ret
push
mov
aad
jmp
push
sti
imul
outs
inc
add
(bad)
xor
call
mov
lods
loopne
pop
ds
test
call
aam
test
inc
call
or
mov
cmp
jne
mov
cmp
jge
xor
jg
and
jp
imul
pop
jmp
xor
in
mov
pop
dec
stos
test
in
push
fistp
adc
in
xchg
jge
or
push
in
test
in
call
aam
(bad)
and
movs
cmp
rol
jmp
mov
jge
mov
or
lock
cld
popa
fisttp
ret
cmps
cmp
jle
les
nop
dec
jno
and
xor
adc
jp
sub
(bad)
(bad)
jne
enter
mov
cmp
mov
jbe
add
addr16
pop
cmp
loope
fdivr
dec
clc
pop
jno
push
mov
test
sbb
push
in
pop
(bad)
je
cld
or
out
lock
fldcw
test
jg
(bad)
clc
jge
cmp
jle
repnz
not
cmp
mov
fucom
mov
or
adc
and
sahf
cs
sub
in
rcl
jo
inc
xor
sub
hlt
add
ja
into
shr
sbb
lock
pop
xchg
ret
and
dec
push
xchg
test
add
pop
imul
jb
push
sbb
mul
rcl
xor
dec
jne
jmp
cmp
das
in
inc
cmp
inc
pop
cmp
out
sbb
jne
add
adc
dec
aam
or
push
push
push
mov
inc
movs
pop
pop
popf
aaa
push
ds
in
stos
adc
sbb
shl
sbb
push
in
jp
dec
dec
rol
push
pop
xchg
shl
or
sub
and
jne
inc
mov
mov
push
enter
add
and
sbb
pop
pusha
or
sbb
sbb
xchg
xor
or
lock
ret
jmp
push
call
adc
cmp
jne
cs
pop
lock
mov
xor
nop
push
dec
inc
ret
scas
std
cmp
mov
mov
and
pop
xchg
inc
jnp
mov
push
adc
rcl
mov
pop
jl
push
xchg
div
loope
push
js
pop
jne
mov
inc
jmp
cmp
neg
pop
jnp
cld
daa
and
adc
fisubr
fisttp
inc
add
shr
(bad)
arpl
sub
mov
inc
cmp
loope
(bad)
xor
push
gs
imul
mov
and
adc
out
fild
push
add
push
mov
mov
dec
push
push
mov
jmp
push
xor
test
dec
inc
(bad)
jg
loop
ret
imul
gs
xor
cs
ins
jbe
pushf
loop
jmp
dec
outs
outs
addr16
popa
je
dec
popa
ins
gs
outs
loopne
ror
jecxz
jecxz
test
out
mov
pop
idiv
add
cmp
and
sub
sbb
pusha
dec
mov
jbe
cmp
fidiv
mov
push
adc
mov
int3
pusha
cmps
lods
popf
movs
aas
into
cmp
push
adc
loopne
mov
repnz
xor
arpl
fsub
jnp
in
dec
sti
and
popf
push
lods
wrmsr
jnp
repz
fs
or
shl
test
dec
jge
or
or
adc
dec
jmp
and
dec
cmp
stos
xlat
mov
fdiv
adc
inc
add
aas
push
jno
sub
sbb
pop
xor
add
ins
cs
pop
call
das
outs
xrelease
dec
xor
cmc
add
mov
mov
outs
data16
popa
jb
sti
(bad)
adc
mul
jae
fsub
arpl
add
dec
ja
add
rcr
cmps
add
and
std
xchg
mov
pusha
jo
outs
sbb
mov
test
fmul
(bad)
jp
mov
mov
sbb
icebp
mov
mov
sub
dec
or
xchg
cli
ret
or
jecxz
into
mov
sar
sub
mov
cmp
jns
dec
add
or
fadd
and
xchg
mov
(bad)
lods
add
retf
mov
pop
mov
cmp
dec
mov
scas
call
mov
jp
in
enter
cs
test
add
mov
pop
mov
sbb
cld
jne
call
xchg
jmp
(bad)
out
mov
mov
sub
inc
cld
enter
push
mov
fs
leave
mov
inc
add
mov
push
sbb
(bad)
mov
or
push
inc
cmp
xor
pop
sahf
adc
inc
push
lods
inc
mov
cmp
add
arpl
and
xor
sub
push
in
loope
daa
mov
jo
sub
mov
cmps
dec
adc
pop
ja
xlat
push
das
je
add
ret
das
dec
rcl
push
xor
fistp
sahf
js
inc
ffreep
or
sar
xor
ret
push
jb
jmp
jecxz
jae
mov
mov
(bad)
sbb
es
pop
adc
mov
mov
push
add
xor
jp
(bad)
(bad)
mov
mov
dec
inc
cmp
ja
mov
inc
jmp
cmp
jp
xor
cld
ja
fcmovb
jmp
(bad)
(bad)
dec
retf
loopne
sbb
adc
and
sbb
and
retf
xchg
pop
push
xor
jge
and
(bad)
xor
mov
dec
popa
rol
js
sbb
add
mov
add
dec
or
rol
pop
jmp
xor
out
adc
pop
add
cmp
add
adc
push
out
mov
dec
test
hlt
sub
mov
pop
faddp
movaps
xlat
mov
cmp
mov
gs
addr16
clc
push
or
inc
test
je
and
adc
ja
xor
cmp
adc
add
cvtps2pd
pop
and
retf
push
or
mov
pop
cdq
dec
mov
cld
ss
dec
cld
mov
retf
push
adc
inc
dec
mov
jo
xlat
or
xor
pop
(bad)
adc
dec
cmp
add
and
inc
ja
std
mov
ins
mov
ret
and
cmp
ja
mov
je
xor
icebp
cwde
sbb
sti
stc
xor
es
cmp
aaa
or
cli
or
jbe
inc
mov
inc
popa
(bad)
push
cmp
push
cwde
in
inc
loope
(bad)
imul
stc
les
add
rol
je
or
cmp
adc
sub
ret
and
or
push
and
stc
rcr
mov
dec
outs
mov
ins
jnp
or
mov
es
scas
inc
xchg
add
adc
or
pusha
call
or
xor
in
adc
ss
push
rol
pop
and
pop
inc
xor
and
cmp
inc
jo
inc
lods
inc
ds
cmp
cmp
gs
pop
jbe
adc
in
lahf
mov
(bad)
inc
mov
loopne
frstor
cmp
fisttp
add
mov
xchg
cmps
push
cli
mov
aam
dec
je
xor
or
push
or
in
push
aaa
xor
add
pop
fisub
mov
mov
push
fsub
sub
jp
outs
rcl
clc
push
sub
add
pop
xchg
add
add
pop
push
les
aas
test
es
fs
push
cmp
adc
push
or
xchg
nop
lahf
cmp
inc
adc
mov
jge
mov
or
nop
jl
add
push
pop
pop
mov
cmp
xor
cmp
and
rcr
pop
data16
sub
xchg
push
repz
mov
or
pop
iret
and
mov
test
fwait
jns
push
mov
and
pushf
mov
mov
and
ret
mov
arpl
cdq
push
(bad)
and
fstp
mov
nop
dec
cmp
mov
jl
xor
neg
and
push
push
in
outs
or
xor
loopne
je
not
or
add
pop
addr16
les
lahf
or
push
add
add
je
pop
sub
xor
outs
jnp
mov
enter
jnp
mov
pop
ins
outs
and
sbb
add
mov
ret
push
mov
rol
mov
or
enter
movs
cmp
and
nop
inc
push
cmp
inc
push
sbb
pusha
inc
xchg
pop
push
push
sbb
dec
dec
inc
sbb
inc
cmp
fs
inc
push
xor
sub
inc
push
sbb
and
nop
and
fs
adc
push
sbb
or
cld
jae
xor
and
and
and
aam
or
enter
les
enter
mov
mov
lods
enter
test
mov
pushf
cwde
xchg
or
nop
mov
and
and
and
and
push
or
push
dec
dec
inc
or
enter
cmp
enter
xor
and
and
adc
or
enter
add
cmp
and
cld
jb
fs
inc
push
hlt
lock
nop
inc
push
sbb
in
inc
push
sbb
aam
jb
nop
ror
mov
out
scas
jne
in
or
(bad)
or
aam
int3
enter
and
sar
mov
and
and
cwde
or
xchg
nop
mov
test
cmp
enter
ins
push
xor
pop
or
push
push
dec
dec
or
enter
cmp
enter
xor
enter
sub
and
or
sbb
or
adc
or
push
xor
and
cld
je
nop
inc
dec
clc
hlt
lock
inc
push
sbb
call
fs
fadd
sbb
ror
enter
inc
(bad)
sar
mov
inc
push
sbb
mov
fs
xchg
nop
and
xor
and
xchg
or
js
xchg
aas
or
sbb
inc
lock
in
psubsb
loopne
inc
push
sbb
rol
sbb
enter
fs
inc
mov
inc
push
mov
test
inc
push
sbb
fs
xchg
nop
push
sbb
mov
jl
je
nop
inc
push
jo
push
fs
pop
inc
push
sbb
push
push
sbb
dec
inc
inc
sbb
cmp
xor
nop
inc
push
xor
nop
inc
push
sbb
sbb
push
sbb
adc
sbb
or
xor
leave
inc
cld
ja
hlt
enter
lock
call
in
fadd
aam
int3
sbb
enter
fs
inc
push
mov
push
sbb
sbb
pushf
or
cwde
sete
and
and
enter
ins
push
fs
pop
and
push
or
dec
dec
inc
inc
or
enter
xor
enter
sub
enter
and
sbb
or
adc
and
add
cmp
enter
clc
hlt
sbb
lock
call
in
fcom
aam
inc
push
sbb
les
sbb
mov
nop
inc
mov
test
fs
and
push
cwde
xchg
nop
nop
inc
push
sbb
cmp
fs
je
ins
push
fs
pop
sbb
push
fs
inc
push
dec
dec
inc
nop
inc
push
sbb
cmp
sbb
sub
sbb
and
sbb
fs
inc
sbb
fs
inc
push
or
add
daa
pop
sbb
cld
jne
fcos
in
enter
add
shl
or
ret
shr
ret
push
jmp
pop
cli
or
popa
les
movs
nop
inc
shl
sbb
hlt
or
mul
pop
inc
and
push
or
shl
sbb
or
and
out
sub
cld
sahf
jno
or
fistp
mov
mov
leave
and
inc
add
sub
into
dec
push
call
sbb
mov
push
push
clc
mov
add
jge
not
cmp
and
mov
fwait
or
mov
push
aaa
mov
test
mov
push
mov
fldcw
push
imul
add
dec
inc
or
mov
pop
or
test
or
(bad)
or
lahf
dec
or
mov
dec
popa
gs
fnstcw
dec
push
push
dec
inc
inc
dec
add
outs
jne
gs
push
jo
mov
dec
dec
dec
pop
inc
push
dec
pop
and
(bad)
fucomi
(bad)
cdq
dec
push
push
pop
sub
push
inc
dec
pop
dec
dec
dec
inc
push
es
(bad)
das
outs
movs
jle
jmp
jle
or
sub
mov
sub
lock
sbb
dec
push
icebp
repnz
repz
cmc
and
clc
or
stc
cli
sti
cld
or
enter
push
enter
loope
enter
jecxz
in
or
out
or
jmp
xor
and
out
out
xor
and
and
and
fadd
fcmovu
fmul
enter
fbstp
enter
rol
and
and
enter
enter
int3
or
enter
iret
xor
and
and
and
mov
mov
xor
and
and
xor
xchg
pop
jb
mov
stos
or
cmp
sbb
cmps
cmp
pop
pop
daa
sub
retf
dec
cwde
cmp
arpl
pop
lods
add
or
arpl
je
outs
outs
test
fistp
into
rol
outs
jb
nop
fdivr
aam
test
adc
sar
inc
dec
gs
jo
nop
xor
mov
xchg
jl
ds
or
cmp
gs
imul
mov
adc
jo
ud2
inc
dec
outs
mov
xor
scas
call
jae
inc
mov
push
inc
test
push
repnz
scas
pushf
adc
aam
and
mov
xor
or
sbb
push
jb
clc
outs
push
test
idiv
or
imul
nop
push
test
aas
scas
jg
push
sbb
push
popa
outs
addr16
test
loopne
inc
or
dec
jbe
dec
jbe
retf
ins
outs
ja
add
aas
test
dec
or
adc
pop
pop
add
jbe
push
sti
pop
xor
dec
jo
mov
mov
push
xchg
ins
jle
mov
or
scas
aas
pop
pop
arpl
xlat
rcl
adc
sbb
fs
test
std
mov
nop
mov
or
(bad)
movsx
outs
imul
or
fdivr
daa
or
aam
and
jae
je
js
adc
je
inc
inc
dec
pop
push
shr
clc
adc
inc
arpl
jae
add
jae
adc
jbe
adc
sub
push
inc
call
ins
mov
mov
adc
aam
mov
inc
push
je
xor
push
shl
add
lock
or
je
ins
inc
sub
jl
cmp
aas
(bad)
ss
sub
fbld
inc
ins
sub
pop
sub
mov
pop
add
fs
mov
clc
push
out
or
jo
jb
je
push
mov
das
push
xchg
fmul
push
data16
mov
add
or
push
stos
push
or
addr16
scas
or
loop
data16
and
adc
xor
add
jl
adc
inc
ins
jae
inc
(bad)
mov
inc
add
addr16
mov
ds
aas
test
dec
adc
and
fs
in
xor
push
int3
add
sub
cmp
lock
xchg
dec
repnz
je
int3
icebp
(bad)
sti
imul
rcr
push
loope
popa
ins
and
pop
adc
cwde
push
jmp
stc
or
push
cmps
clc
adc
lock
fnstenv
push
dec
jne
jge
mov
and
jmp
xor
clc
lods
outs
arpl
cmp
fsin
sub
daa
(bad)
jmp
not
add
fild
retf
mov
mov
lea
test
test
push
aas
cmps
push
test
or
xchg
aam
stos
xchg
dec
ja
adc
push
in
enter
adc
add
or
push
test
lock
rcr
in
mov
das
and
gs
adc
mov
sub
test
pop
cli
cli
sub
out
pop
jmp
mov
movs
lahf
push
dec
mov
inc
inc
dec
push
pusha
or
cmp
jg
inc
and
sub
push
or
pop
aam
(bad)
mov
cmp
jbe
cmp
repz
je
movzx
lods
xchg
mov
in
ret
nop
fild
mov
jmp
fistp
jne
inc
aas
push
mov
sub
or
jbe
sbb
push
fdivrp
iret
(bad)
out
and
sti
je
loope
add
mov
pop
dec
icebp
sbb
add
mov
mov
jns
jg
sti
cmc
xchg
sbb
pop
adc
ror
fld
bound
data16
addr16
push
inc
mov
push
test
popa
retf
in
push
(bad)
ret
std
fld
pop
hlt
jae
outs
loop
or
add
mov
js
sbb
sub
add
inc
push
push
adc
icebp
push
mov
mov
cmp
jl
cmp
jbe
adc
sbb
dec
sub
mov
imul
retf
inc
jmp
and
call
or
push
push
mov
in
(bad)
ins
daa
rcl
xchg
or
mov
mov
lock
add
sti
dec
les
or
idiv
aaa
inc
or
icebp
xchg
sar
inc
push
push
and
fisttp
and
(bad)
push
pop
repnz
add
(bad)
mov
pop
cmp
add
lock
outs
dec
loope
or
mov
mov
pop
add
push
ret
jle
add
clc
push
repz
shl
imul
addr16
add
arpl
ror
mov
sub
or
jmp
and
fdivr
inc
sub
xchg
sti
inc
call
jbe
push
fldcw
fcomip
add
adc
mov
jbe
mov
mov
je
jmp
cmp
jne
inc
add
adc
out
cmps
or
and
arpl
icebp
inc
jmp
sbb
bt
pushf
loope
or
mov
test
retf
addr16
lds
in
loope
jne
enter
jns
getsec
test
xor
sub
cli
fwait
xor
sub
outs
clc
jle
or
jmp
add
pop
or
mov
dec
and
xor
jno
adc
push
dec
adc
add
pop
xlat
pop
int
add
sub
(bad)
or
push
xchg
inc
call
je
sbb
iret
jle
(bad)
(bad)
scas
xchg
inc
jg
mov
add
sub
jb
sub
je
sub
repnz
jae
cmp
jl
inc
mov
mov
out
lock
imul
pop
or
(bad)
jae
inc
dec
jne
call
xchg
adc
rcr
mov
add
lods
xchg
inc
pop
mov
fbld
add
clc
(bad)
push
adc
mov
outs
add
adc
adc
sbb
lock
pop
in
or
js
mov
inc
jge
popa
or
push
inc
fnstenv
imul
jo
pop
out
in
jo
test
dec
or
das
adc
or
xor
adc
repnz
inc
fcom
push
xor
mov
je
xor
clc
or
repz
clc
pop
add
cmp
ja
mov
loop
adc
imul
jmp
rol
ja
push
push
xor
or
popa
add
xor
dec
adc
pusha
ds
sub
rol
ss
push
add
pop
mov
add
dec
imul
or
data16
mov
jb
push
arpl
add
outs
pop
fs
push
test
cmp
icebp
dec
cmp
les
add
adc
push
cld
lods
push
cmps
pop
in
inc
arpl
add
rol
addps
fstp
pop
push
scas
shl
mov
repnz
(bad)
sbb
stos
mov
jnp
pop
push
dec
sub
sbb
inc
mov
xlat
and
push
dec
imul
pop
(bad)
add
hlt
(bad)
mov
or
(bad)
jle
add
fs
and
lock
sti
stc
sti
cmp
dec
fwait
add
pop
dec
and
in
mov
jno
aad
pop
cmp
out
pusha
test
sbb
pusha
inc
outs
not
jmp
dec
iret
push
mov
inc
push
or
or
mov
adc
push
popa
mov
inc
pop
jnp
les
mov
jl
cmp
lods
and
ins
ret
push
fs
pop
and
or
xor
inc
imul
pop
pop
add
outs
jl
outs
jb
sub
jne
inc
cs
push
out
mul
jno
cmp
xchg
nop
mov
nop
ret
mov
jmp
lock
mov
hlt
clc
cld
push
jmp
lock
and
cld
imul
dec
inc
call
xchg
inc
daa
xor
call
daa
icebp
mov
dec
xor
xlat
pop
(bad)
leave
adc
ficom
add
aas
xchg
test
iret
imul
xor
pop
or
pop
das
mov
mov
push
push
addr16
inc
xor
lds
inc
and
into
xor
(bad)
or
mov
jbe
(bad)
mov
jnp
(bad)
mov
mov
xchg
das
sbb
cmp
adc
sbb
sbb
sub
not
mov
mov
mov
inc
add
add
jno
push
jge
pop
pop
ret
ins
ror
in
mov
fild
retf
pop
retf
add
popa
pop
mov
xchg
ret
sub
mov
pop
repz
pop
adc
push
inc
cmp
iret
inc
mov
push
out
call
jg
xor
xor
repz
mov
mov
sbb
popf
rol
ins
call
pushf
cli
jmp
je
dec
mov
mov
xor
or
pop
ret
add
xlat
push
or
add
rcl
add
sbb
push
xchg
dec
jg
inc
das
cmp
pop
push
dec
pop
fbld
into
mov
pop
sub
jbe
sbb
packssdw
xchg
sbb
lock
mov
jne
mov
daa
mov
sbb
mov
push
sub
jcxz
sbb
imul
sar
xor
dec
pop
call
mov
cmc
push
cmps
(bad)
test
sti
pop
jbe
mov
push
fcmovbe
aaa
pop
cmp
sub
pop
retf
push
mov
add
adc
les
and
lea
pop
jno
inc
and
fwait
sub
loopne
stos
xchg
ret
ins
dec
push
(bad)
mov
das
mov
push
inc
dec
stos
mov
pop
jge
ds
das
add
jge
adc
mov
popa
and
or
dec
lods
cmp
je
stos
dec
jne
cmc
sub
cmovg
xor
mov
(bad)
call
mov
dec
xchg
lea
cmp
jl
outs
addr16
retf
lods
jmp
jnp
(bad)
es
pop
push
cmp
sub
sub
mov
icebp
nop
(bad)
movs
or
jle
loopne
inc
fild
sub
jae
imul
mov
fst
mov
rep
sbb
jecxz
je
mov
push
mov
nop
pop
pop
mov
cmp
outs
add
inc
xor
cmp
ja
imul
mov
fisub
and
in
dec
(bad)
push
or
inc
cmp
adc
aas
sub
js
std
rol
sbb
je
clc
or
xchg
ret
and
mov
push
push
pop
pop
jne
lea
mov
mov
push
ja
xchg
icebp
popf
or
sahf
pop
xor
pop
lahf
nop
movs
imul
push
lds
sbb
sbb
sbb
nop
nop
mov
fsubr
rcr
xchg
lock
pop
cmps
and
pop
shl
adc
retf
out
scas
mov
cmp
je
or
sub
int
jmp
sub
test
cmp
xor
inc
add
pop
push
mov
mov
ret
mov
test
add
in
xchg
lds
dec
pop
pop
pop
xchg
fidivr
cmp
add
pop
push
push
inc
(bad)
sub
or
jne
lea
cs
fdiv
xchg
sbb
pop
jbe
mov
ret
fwait
out
cli
ret
xor
aam
clc
aad
cmp
dec
jns
neg
and
test
push
repz
int
push
mov
ins
or
sbb
add
das
xchg
jns
lock
xor
inc
inc
add
mov
jmp
mov
xlat
add
add
jne
aas
sbb
add
call
pop
jns
mov
xor
or
inc
jg
lock
mov
cmp
ja
and
dec
jp
mov
jecxz
dec
mov
jnp
pusha
(bad)
int
ds
sub
inc
fmul
pop
out
enter
pop
mov
fbstp
jg
sub
mov
or
add
jl
(bad)
adc
dec
jnp
std
mov
mov
rcr
ret
dec
ss
shr
cmp
adc
(bad)
mov
mov
scas
js
sbb
xchg
ret
iret
(bad)
add
push
mov
pop
pop
fstp
dec
add
scas
or
das
sbb
test
movs
daa
lahf
and
mov
mov
cs
pushf
out
in
mov
rcr
aam
adc
cli
jg
pop
push
inc
jg
enter
push
test
mov
add
sbb
cdq
sbb
dec
and
sbb
sar
cld
lea
out
jg
fsubr
or
cmp
dec
cmp
jl
jmp
add
mov
cdq
sub
lea
cmp
call
lea
inc
jmp
or
push
xor
stos
or
retf
or
sar
add
(bad)
push
or
or
stos
xchg
push
mov
add
pop
call
mov
adc
(bad)
in
or
jg
dec
mov
stos
cmp
rol
pop
aam
cdq
addr16
icebp
sub
sti
mov
xor
inc
push
stc
das
hlt
mov
bnd
adc
adc
sbb
adc
jecxz
pop
jle
mov
cs
lods
nop
imul
adc
or
push
call
xchg
and
pop
cmp
mov
jae
mov
xchg
inc
lea
push
rep
jmp
mov
cmp
je
add
mov
movsx
mov
add
lea
cmp
call
cmp
cmp
fucomi
enter
mov
jmp
dec
dec
inc
dec
dec
lods
or
in
xchg
test
jge
(bad)
mov
ret
std
mov
aam
adc
sbb
lock
std
jl
pop
sbb
fbstp
cli
sti
push
mov
rep
jmp
aas
inc
(bad)
jle
mov
loop
push
adc
push
pop
inc
clc
(bad)
or
push
jmp
jmp
xchg
mov
mov
dec
and
(bad)
jle
sub
fild
add
inc
mov
fcmovnbe
pand
add
aas
adc
push
(bad)
cmp
mov
jmp
mov
or
(bad)
mov
repz
inc
test
jne
pop
cli
add
fbld
(bad)
in
stos
xor
mov
add
je
inc
jne
pop
nop
loope
add
test
or
clc
int
or
repnz
cld
xlat
add
mov
pop
lea
popa
lock
inc
je
push
push
cmp
(bad)
or
xchg
xchg
pop
(bad)
out
pop
add
inc
loop
push
mov
test
sbb
add
sub
xor
and
and
adc
and
sub
inc
sub
out
and
or
sub
sbb
mov
es
sub
mov
cmp
xor
sub
xor
ss
(bad)
cdq
call
inc
xchg
adc
push
je
ins
xchg
test
xchg
inc
adc
inc
ror
mov
and
cmp
jg
jne
test
jle
or
or
cmp
inc
mov
push
push
fld
jge
imul
hlt
xchg
imul
inc
shr
cli
sbb
and
and
pop
frndint
(bad)
sti
stos
cs
scas
dec
adc
fstp
mov
test
je
fidivr
stos
mov
call
jne
lea
mov
inc
sub
pop
cmp
jg
shr
and
add
pop
aas
jmp
ror
add
jns
mov
movs
aas
sar
movs
or
cmp
xor
in
ffreep
inc
or
dec
and
ja
jmp
popa
sbb
fld
xor
jmp
mov
pop
mov
icebp
not
push
shr
call
jno
add
pushf
out
xchg
xchg
and
xor
ror
je
aam
pop
jns
add
shr
or
pushf
(bad)
outs
pop
jle
add
pop
mov
cmps
sbb
jae
dec
add
sbb
inc
loopne
push
in
ins
or
outs
mov
or
mov
pop
iret
aam
mov
sbb
sbb
sub
ins
hlt
pop
jg
and
jne
dec
xor
cmp
jg
cmp
inc
or
jmp
cmp
add
enter
cmp
div
cmp
cmp
pop
jmp
mov
sbb
inc
mov
xor
sbb
and
sti
xor
dec
shl
dec
mov
sbb
inc
xchg
xchg
adc
loopne
pop
sbb
mov
movs
popa
fcom
and
adc
mov
push
div
push
adc
test
adc
out
mov
or
inc
jmp
or
cmp
pop
sbb
inc
stc
inc
or
div
gs
cmp
pusha
jmp
retf
adc
fistp
std
add
push
fstp
fwait
movs
add
(bad)
pop
mov
rol
sbb
iret
aaa
dec
js
daa
xchg
rcr
fs
mov
jge
fnstsw
nop
dec
xor
adc
(bad)
xchg
ret
adc
daa
jp
lea
mov
or
jl
mov
rcr
popf
sbb
and
ja
mov
mov
and
aas
push
ficom
and
jle
shl
not
sbb
bound
jo
jne
lds
pop
inc
scas
mov
jecxz
std
add
movs
std
dec
add
jg
add
lea
inc
jb
jecxz
or
jg
mov
or
jb
sti
ins
sti
(bad)
cmp
movs
test
bound
dec
fisttp
(bad)
add
fdivr
add
inc
dec
jne
sub
dec
mov
aas
push
sub
imul
cmp
or
aas
pusha
ds
add
bound
(bad)
ret
or
inc
imul
enter
push
clc
mov
shl
add
pop
hlt
nop
mov
call
push
and
dec
in
test
jg
fld
jb
scas
add
pmuludq
add
jo
sahf
pop
inc
cmovns
mov
stc
mov
add
jl
add
mov
mul
add
je
(bad)
jle
nop
loop
mov
or
dec
in
loope
imul
cmp
fs
jbe
mov
add
mov
cmp
aaa
sub
and
jl
iret
ret
sub
cmp
enter
ins
pusha
lods
jnp
jecxz
cmp
mov
rcr
sub
fbld
into
inc
cmc
and
cdq
hlt
inc
push
push
sbb
fs
mov
add
scas
sti
hlt
add
fs
push
pop
outs
push
lods
jle
pop
jl
rcr
sbb
push
fcomp
sub
xor
push
dec
or
out
push
mov
sbb
ins
xor
inc
push
jmp
cmp
sub
cmp
sbb
popa
mov
ret
add
mov
mov
mov
or
push
retfw
mov
sub
and
sbb
push
in
ins
iret
repz
push
adc
adc
test
mov
push
mov
cmp
outs
fcmovu
sbb
imul
xchg
and
lea
faddp
outs
add
add
inc
imul
pop
aas
ins
mov
dec
push
les
sbb
add
mov
test
scas
lds
add
shl
movs
adc
int
rcr
jae
add
sub
jmp
or
sti
je
arpl
inc
inc
hlt
out
dec
fst
outs
push
cmp
jne
rol
jo
in
mov
push
lea
or
xchg
repnz
cmp
adc
inc
in
add
jecxz
fs
call
jmp
loope
mov
lds
into
into
cli
xchg
gs
scas
jns
lea
mov
lock
shl
pushf
out
repnz
scas
xchg
dec
jmp
pop
in
push
test
fwait
push
stos
or
mov
push
neg
int3
lea
(bad)
cmp
clc
push
jle
mov
jno
and
or
mov
test
inc
mov
(bad)
das
adc
cmp
jg
mov
mov
aas
push
or
imul
sbb
add
dec
adc
pop
not
push
test
daa
cmp
xchg
rcr
rcl
add
imul
aad
add
jo
add
addr16
iret
in
adc
sbb
ret
dec
pusha
dec
jg
int3
or
jmp
jmp
add
jne
inc
cmp
jne
push
xor
ret
and
rol
cmp
pop
add
ja
js
cwde
fmul
ror
out
cmp
fs
outs
add
jmp
xor
sar
inc
loope
jnp
sub
mov
in
push
add
arpl
add
fxch
lahf
cmp
dec
pop
adc
or
cmp
jne
mov
icebp
pop
dec
fldln2
jne
fisub
ja
or
mov
and
push
mov
movs
add
push
or
jle
or
or
lds
push
bound
lods
loopne
icebp
or
or
les
movs
xchg
retf
cmps
imul
adc
shr
ins
mov
cwde
cmps
pop
movs
retf
test
mov
add
or
or
jl
and
mov
sbb
pushf
mov
in
mov
mov
popf
mov
dec
push
lea
xor
fcomp
movs
fdiv
dec
inc
lock
sub
sub
iret
hlt
inc
mov
test
xchg
xor
arpl
or
jle
push
dec
add
aad
or
push
inc
cmp
cmp
inc
aam
inc
daa
mov
inc
inc
and
pop
imul
mov
rol
lock
jge
inc
pop
xchg
push
add
adc
and
std
jle
or
push
jmp
or
pop
je
jmp
sbb
mov
mov
inc
fimul
mov
aad
mov
pmulhuw
mov
mov
mov
sti
shr
adc
loope
add
jmp
popa
jb
jmp
outs
dec
push
in
or
or
or
or
(bad)
fstp
jle
fwait
out
or
fbstp
bound
popa
push
mov
sbb
(bad)
adc
push
pop
dec
inc
fisub
retf
xor
xchg
in
int3
movs
dec
sbb
xlat
jne
das
jmp
jle
cmp
rcl
sbb
ror
jns
sub
ja
or
push
xor
jae
retf
dec
cmp
jmp
and
add
sub
fsubr
cmc
xchg
lea
mov
test
sti
out
ret
dec
dec
and
adc
push
adc
jmp
int
out
into
jge
test
mov
add
popf
add
cmp
push
pop
nop
(bad)
lea
je
inc
dec
cwde
test
mov
push
test
or
add
retf
loope
push
push
pop
cmp
jne
mov
sbb
das
shr
(bad)
mov
pop
mov
adc
test
dec
add
dec
adc
das
push
dec
fidivr
pop
dec
adc
add
or
push
loope
ins
mov
pop
push
out
test
sbb
inc
ret
jno
(bad)
(bad)
jmp
push
mov
lea
mov
or
pusha
imul
add
dec
push
dec
popa
jbe
cmps
test
push
fld
and
sub
add
cs
pop
aas
rcr
lods
xchg
inc
mov
int3
jmp
mov
push
add
shl
jb
or
retf
and
(bad)
fwait
ja
mov
mov
push
inc
sub
sbb
push
in
test
sbb
cmp
inc
pop
sub
adc
inc
sbb
cmps
scas
pop
add
adc
bound
adc
xchg
rcr
leave
movs
test
or
inc
lahf
add
push
pushf
pop
mov
pop
dec
push
add
sub
ret
mov
lds
outs
or
or
push
and
dec
lea
dec
retf
cmp
xchg
cdq
loopne
xchg
cwde
int3
dec
inc
xchg
cmp
inc
inc
stos
or
mov
scas
sar
inc
outs
dec
xchg
push
in
mov
leave
enter
xor
in
push
imul
jge
(bad)
in
or
pop
rol
mov
mov
pusha
push
test
mov
pop
je
xchg
cmp
add
dec
add
adc
cmp
push
mov
(bad)
mov
pop
xchg
fst
push
cwde
inc
pop
(bad)
enter
test
mov
sub
mov
popf
fucomp
in
xchg
mov
mov
or
mov
mov
or
add
js
leave
into
daa
push
mov
adc
sub
(bad)
mov
dec
jne
push
arpl
mov
push
js
out
lods
in
mov
loope
pop
xor
nop
pop
fwait
test
je
mov
pop
in
mov
cmp
sub
jb
mov
out
fistp
mov
and
xor
adc
dec
cld
je
sub
je
pop
push
sbb
cmp
xchg
cli
push
dec
cmp
jle
lods
dec
das
pusha
shl
sbb
loope
dec
jecxz
test
mov
cmp
outs
rol
lods
add
jle
test
test
jbe
or
test
sbb
add
xchg
dec
add
jmp
int
movs
add
jmp
mov
cmp
add
xchg
jne
xor
jmp
in
sub
sub
in
jle
push
jecxz
jno
gs
jge
mov
push
push
addr16
fstp
push
pop
add
sub
add
cmp
or
or
inc
inc
cmp
jge
hlt
add
inc
add
mov
sbb
add
daa
dec
out
lock
imul
jl
aaa
mov
ins
sub
xor
fsubr
popf
fs
lock
dec
mov
or
call
push
mov
and
add
fwait
xchg
sbb
imul
fsubr
push
jl
or
test
pop
retf
out
cmp
cmps
mov
inc
add
or
(bad)
out
push
or
inc
pop
sbb
or
lods
or
and
mov
xor
cdq
std
int3
fiadd
les
mov
out
fstp
or
nop
lock
pop
push
imul
pop
or
pop
push
jg
shl
dec
mov
cwde
ror
int3
cmp
push
inc
clc
mov
xchg
adc
xor
pushf
bound
or
sbb
jge
ss
je
fs
jo
or
push
test
loopne
jge
push
cmp
and
dec
fisttp
not
shl
adc
cld
xor
daa
push
js
cmp
mov
jmp
int
scas
pop
fisttp
pop
clc
adc
(bad)
stos
lea
jno
test
adc
push
jns
add
sbb
adc
xor
add
or
mov
sub
shl
add
and
enter
aam
rcr
nop
sub
adc
xchg
fcmovnb
mov
adc
sbb
(bad)
sbb
adc
xchg
xchg
cmp
cli
fcom
scas
daa
test
push
and
push
or
arpl
cmp
xor
sar
dec
ja
sub
inc
cmp
jg
cmp
out
add
icebp
sbb
mov
inc
sub
mov
xchg
jl
inc
cmp
cld
or
aam
or
and
mov
push
ret
aaa
loopne
dec
mov
jmp
adc
adc
cmovl
sbb
and
add
and
in
dec
pusha
add
jae
pop
adc
pop
jecxz
mov
cmp
mul
loopne
cld
cmc
pop
arpl
mov
pop
fwait
add
or
outs
adc
in
inc
mov
push
sub
test
lock
clc
scas
in
and
push
out
loopne
mov
loopne
cmp
lea
add
add
in
add
push
add
out
mov
hlt
ins
add
pop
ins
inc
ja
mov
pop
jno
cld
outs
rol
in
scas
(bad)
add
mov
push
ret
pop
and
fs
push
cmp
je
jmp
aas
and
jmp
xor
retf
sti
aaa
and
add
mov
add
mov
pop
or
or
sbb
mov
push
push
xlat
push
xor
adc
adc
mov
loopne
mov
jb
(bad)
adc
cmp
and
ds
movaps
inc
add
pushf
in
jae
mov
pop
cdq
js
loope
mov
lock
aaa
push
fstp
pusha
cmp
cmp
jbe
iret
dec
add
pop
adc
fdivr
les
mov
shl
sbb
jp
push
pop
enter
test
cmps
jecxz
or
ins
imul
jmp
sub
xor
mov
jge
mov
mov
movs
test
add
and
rcr
jae
sub
adc
retf
aad
cs
pop
xor
pop
mov
push
(bad)
cld
std
rol
ret
jmp
or
jae
cmp
enterw
mov
lods
mov
add
mov
mov
or
push
push
arpl
push
jnp
inc
adc
cmp
(bad)
lock
and
scas
pop
xor
xchg
cmps
inc
lahf
scas
jo
or
out
xor
inc
jo
out
sbb
sub
cmp
adc
test
retf
or
les
adc
push
inc
jl
jo
fisubr
sbb
mov
nop
jge
or
adc
fwait
or
ror
xor
in
ror
adc
mov
add
dec
out
adc
sbb
pop
sub
and
push
popa
outs
ins
es
fidiv
add
lods
xor
xchg
dec
outs
adc
mov
mov
ret
fnstcw
mov
inc
sbb
fwait
mov
mov
sbb
shl
pop
aaa
mov
add
dec
inc
push
lods
shl
dec
jmp
dec
test
jl
loopne
jae
mov
and
mov
sub
and
sahf
jns
dec
or
inc
test
pop
add
add
xchg
add
sub
sbb
cmp
or
in
or
(bad)
push
es
cmp
daa
push
mov
ja
jle
jno
xor
adc
xchg
rcr
inc
enter
ds
pop
inc
pop
jg
mov
scas
das
mov
cmp
inc
sub
push
add
and
xchg
adc
nop
adc
fcomp
pop
push
clc
dec
daa
movs
or
mov
adc
inc
mov
or
or
leave
pop
hlt
jge
pop
push
or
sbb
addr16
out
push
or
lods
pop
cs
push
ret
movs
ror
aas
dec
cmp
(bad)
fwait
jle
fild
push
rol
popa
mov
iret
mov
or
jns
pop
xchg
or
pop
jb
push
arpl
or
dec
iret
es
scas
test
mov
mov
jns
into
data16
sub
sub
sti
adc
cmp
pop
push
pop
das
pop
and
jno
in
xor
shl
push
mov
push
fwait
mov
jb
(bad)
movs
popa
mov
mov
adc
cmp
xor
mov
test
add
and
mov
sti
xchg
lds
mov
inc
sub
inc
out
pop
cmps
(bad)
jo
dec
ins
mov
mov
lds
jmp
pop
jmp
sbb
push
inc
jnp
outs
adc
jo
ja
xor
dec
(bad)
mov
in
out
cmp
jge
imul
or
pop
lods
scas
repz
test
movlps
jb
sbb
push
jmp
inc
xor
dec
and
xor
aas
or
aad
fild
mov
add
push
push
jno
and
test
in
mov
ret
fild
mov
sar
cli
jbe
or
mov
stos
dec
shr
lock
iret
aad
stos
lock
daa
sub
fcom
sub
clc
in
(bad)
adc
and
adc
imul
add
mov
hlt
jo
xchg
test
into
push
lea
push
push
add
sub
popf
nop
adc
xor
xor
pusha
rcr
fmul
and
and
push
into
hlt
sbb
mov
mov
bound
std
jmp
xor
jg
sub
push
mov
sub
jb
inc
mov
xor
std
inc
sti
stos
(bad)
sbb
dec
jne
loope
lods
or
pop
or
pop
pop
jne
sub
pusha
test
ja
pop
call
push
repz
sti
push
mov
mov
cmps
xor
jl
dec
data16
leave
data16
add
adc
aam
or
mov
pop
loope
add
cmp
hlt
cmps
mov
xchg
mov
add
fisttp
pop
push
cmp
jbe
pop
and
jmp
(bad)
mov
ins
stos
mov
outs
popa
mov
(bad)
xchg
jbe
add
cmp
sti
jne
lea
pop
and
clc
test
movs
imul
cmp
xchg
ror
cmps
imul
mov
jne
jmp
push
imul
test
and
in
outs
test
pop
arpl
add
pop
mov
out
xchg
stc
push
test
sar
pusha
test
enter
in
call
add
outs
mov
xor
pop
fdiv
aam
cwde
mov
sbb
pop
mov
xor
call
cmp
cmp
add
cs
cld
push
cmp
das
mov
cmp
rol
pushf
enter
loopne
inc
aam
dec
and
lss
fcomp
mov
sti
mov
mov
jg
mov
sar
inc
xchg
jl
iret
ins
sub
mov
stos
push
ins
jge
enter
or
enter
adc
call
arpl
enter
aas
ret
rol
shl
nop
adc
or
clc
mov
fs
xchg
cld
push
mov
les
xor
mov
mov
sub
or
pop
cdq
cmp
les
arpl
and
sar
push
daa
pusha
ins
das
fs
add
adc
scas
ins
add
fs
pop
sti
lods
push
ja
popa
ins
pop
jo
pop
test
(bad)
(bad)
inc
mov
aaa
sbb
jecxz
ds
cmp
into
mov
cmp
ucomiss
and
mov
fmul
vmwrite
out
test
je
mov
or
cmp
adc
adc
popa
mov
cmps
adc
(bad)
lock
daa
jmp
push
mov
mov
mov
pop
pushf
repz
and
cmc
dec
dec
jge
ss
mov
dec
pop
lods
or
xor
fimul
pusha
daa
jecxz
bound
pop
push
pop
dec
add
daa
mov
scas
or
retw
xor
out
aam
or
sar
push
sbb
pop
jb
cli
sar
inc
in
jo
addr16
icebp
sbb
sub
add
dec
sub
adc
push
dec
aam
gs
sub
push
mov
aad
and
pop
xor
or
test
sbb
cli
(bad)
jmp
(bad)
out
sbb
in
sbb
scas
inc
repz
mov
adc
push
add
or
dec
in
inc
add
xlat
pop
in
arpl
push
and
mov
add
mov
adc
test
lock
call
inc
jb
gs
jo
inc
js
push
mov
lock
inc
in
push
dec
ret
xchg
sahf
xor
xchg
test
shl
dec
adc
outs
popf
and
shl
xadd
pusha
test
or
dec
xor
retf
mov
fdiv
push
inc
cmp
jne
mov
inc
inc
inc
aas
add
jae
xchg
cmps
and
stc
daa
in
jle
es
and
test
mov
adc
mov
lods
test
push
je
mov
and
mov
in
movlps
sbb
ins
xchg
cmps
add
jmp
or
xor
cwde
mov
out
jge
mov
or
leave
jle
call
loope
inc
stc
jle
inc
sub
pop
out
add
mov
inc
pop
ja
outs
mov
loopne
lea
rol
sbb
dec
gs
mov
and
stos
sbb
inc
mov
mov
pop
lahf
clc
(bad)
pop
loope
sar
jmp
cmp
jb
popa
push
jg
xor
or
push
dec
jbe
and
push
xchg
retf
mov
enter
dec
or
inc
add
mov
xchg
out
inc
adc
aas
inc
xchg
lock
xor
adc
mov
mov
adc
sub
or
and
pop
xchg
outs
adc
sbb
xchg
popa
push
cwde
ins
sbb
cwde
sub
add
mul
inc
jo
jle
inc
mov
mov
adc
jmp
das
dec
xor
mov
push
cmp
mov
sbb
add
cwde
pop
add
dec
cdq
rol
mov
ins
or
inc
lods
adc
mov
add
inc
(bad)
ss
mov
xchg
outs
movs
inc
into
push
mov
(bad)
push
mov
jnp
push
lock
rol
rol
nop
adc
sub
(bad)
(bad)
sbb
fcomp
xchg
push
bound
mov
push
sbb
arpl
ds
lods
adc
push
out
mov
sti
sahf
or
imul
int3
push
cs
lods
sub
pop
aaa
push
sub
and
cwde
fs
jl
clc
rcl
(bad)
call
cmp
test
or
rol
or
movs
pop
mov
jmp
adc
test
fisub
scas
retf
sub
sti
lods
cmp
push
and
sub
cmp
xchg
ret
inc
sub
inc
arpl
test
pop
mov
(bad)
dec
xchg
js
push
jo
loope
das
in
mov
or
sbb
sbb
hlt
mov
and
and
pop
mov
jb
(bad)
cmc
mov
(bad)
loope
les
or
mov
fst
or
add
stos
pop
lods
pop
cs
(bad)
or
pop
or
add
push
fmul
fadd
or
shl
jo
fisttp
pop
xor
mov
pop
cmp
ret
add
and
and
adc
ret
push
nop
or
test
sub
or
cmps
add
fnstsw
add
adc
movs
mov
mov
in
ins
dec
adc
jne
ret
adc
imul
cld
dec
aad
add
push
retf
push
push
jg
sub
and
ss
fnstcw
pop
in
adc
dec
or
out
repz
fldcw
jmp
cmps
xor
call
(bad)
outs
in
adc
mov
fmul
lock
adc
inc
aam
int3
push
cmp
les
dec
dec
mov
out
mov
lods
push
mov
movs
call
in
mov
xchg
test
dec
jl
je
xor
ins
mov
rcr
aam
push
pop
dec
jle
mov
lods
pop
inc
ds
cmp
sub
jl
mov
jns
sub
jg
add
push
in
xor
mov
adc
inc
out
or
gs
ss
pop
fsubr
mov
push
and
hlt
int3
inc
fs
pushf
lock
in
xor
nop
out
sbb
jbe
xor
loopne
mov
cmp
push
imul
rcr
and
in
dec
pop
int3
and
jbe
xor
test
out
sar
mov
imul
shl
pop
test
sbb
ss
sbb
inc
fisub
ins
pushf
mov
push
imul
nop
mov
push
imul
test
movs
or
pop
test
out
jae
or
ins
inc
je
nop
xchg
lods
jo
ins
push
fstp
nop
dec
dec
mov
dec
add
cld
inc
xchg
pushf
popa
loop
or
aaa
fist
cwde
enter
mov
mov
cmp
mov
cmp
inc
jmp
inc
cmp
add
push
and
xchg
sbb
add
adc
popf
idiv
cmp
sbb
pop
sbb
sub
or
jbe
dec
add
and
es
push
dec
inc
and
cdq
fs
xor
and
sbb
leave
test
sub
movs
daa
xor
adc
loop
js
cmp
aam
sub
ficomp
xor
mov
cmp
sahf
jge
xchg
in
pop
jno
jo
mov
dec
mov
(bad)
xor
repnz
mov
pop
push
xor
and
and
and
xor
jecxz
pop
(bad)
pop
xchg
xchg
js
cmp
ret
jo
xchg
shr
jno
and
sub
in
lock
push
pushf
jecxz
out
or
cmps
or
push
shl
and
pop
in
scas
sahf
add
and
and
shl
add
jns
outs
call
pop
aaa
aam
cld
fwait
cmps
nop
test
push
inc
jne
je
ins
pusha
in
(bad)
dec
fnstenv
nop
je
pop
xor
mov
adc
push
or
test
xchg
mov
es
push
xor
(bad)
movups
add
call
adc
and
or
setnp
inc
aas
es
add
lahf
jae
data16
jge
not
jmp
xor
psrld
inc
or
lock
test
adc
(bad)
outs
es
stos
lock
sub
loope
scas
ror
mov
aam
(bad)
ja
adc
scas
or
jmp
stos
pop
aam
pop
xchg
add
adc
adc
push
ja
and
dec
mov
adc
nop
pop
enter
fucomi
shl
dec
pop
test
idiv
std
frndint
add
pushf
xchg
and
add
jne
adc
jmp
movs
jno
mov
jmp
mov
retf
or
jbe
(bad)
clc
adc
jl
add
dec
gs
push
mov
fild
inc
ret
(bad)
in
jmp
sbb
aas
add
xor
sbb
or
jl
inc
xor
lea
mov
jecxz
out
nop
push
lea
push
jno
shl
and
aaa
iret
adc
fs
sub
sub
mov
mov
sub
inc
pop
out
inc
mov
and
js
mov
adc
enter
adc
mov
and
dec
test
inc
cdq
bnd
pop
fs
mov
cmp
mov
xchg
inc
rol
ss
dec
push
cmp
mov
and
and
outs
jne
xchg
bound
add
arpl
bound
test
das
div
inc
in
in
std
jae
sub
std
or
loop
mov
add
cli
pop
outs
dec
je
jmp
outs
pop
leave
js
add
mov
cmps
imul
pop
xchg
add
lea
add
ror
xor
or
jmp
inc
sub
aad
loopne
(bad)
and
shl
push
sub
xor
aad
jmp
push
pop
nop
dec
icebp
push
pop
daa
stc
jmp
imul
push
(bad)
(bad)
shl
sub
clc
jmp
sbb
adc
xchg
xor
pop
scas
push
jg
mov
xlat
rol
mov
maskmovq
mov
test
clc
adc
xchg
jmp
jnp
mov
imul
mov
fwait
push
stos
mov
xor
push
pop
and
shl
push
jle
clc
lock
mov
push
or
or
ins
sbb
leave
shl
xor
js
push
jmp
push
push
and
add
mov
cmps
jo
outs
sbb
mov
mov
cmp
fsubr
mov
pop
sbb
test
ret
or
or
movs
mov
sti
mov
add
or
(bad)
sub
sub
and
mov
ret
adc
pop
imul
call
lods
imul
xchg
push
(bad)
push
pop
cmps
scas
hlt
adc
cmps
mov
enter
xlat
popw
mov
push
and
push
adc
add
neg
pop
or
or
sti
popa
fist
jp
jmp
push
add
pop
push
jae
pop
jo
inc
adc
dec
cli
test
dec
cmp
or
dec
jnp
push
push
neg
sbb
bnd
mov
mov
sub
and
fisub
mov
retf
fistp
inc
sub
rol
fld
test
leave
mov
popa
out
ss
fldenv
(bad)
push
(bad)
adc
retf
fsubr
push
fbstp
ss
fmul
cmp
push
(bad)
mov
push
add
pop
fs
jno
xchg
test
test
mov
mov
mov
mov
push
mov
cmp
retf
adc
add
add
xchg
sub
xchg
icebp
enter
fnsave
inc
lahf
sbb
add
push
fs
add
out
int
add
add
inc
jle
mov
dec
xchg
cmps
pusha
and
(bad)
adc
in
imul
and
fdivr
ins
cld
add
adc
inc
dec
adc
(bad)
fimul
push
add
jne
sub
push
daa
push
jmp
ret
jo
add
push
sbb
push
imul
mov
dec
hlt
push
sbb
mov
lahf
push
xlat
std
mov
jns
dec
fs
ret
xor
add
cmp
data16
dec
ss
imul
add
ret
sti
out
xor
ret
addr16
les
mov
add
mov
mov
jge
adc
push
dec
aaa
in
inc
fstp
out
push
pop
inc
xchg
dec
jp
(bad)
push
and
adc
into
xor
adc
call
xchg
in
sub
sti
or
jmp
rcl
or
pop
mov
sub
stos
xor
push
and
pop
shl
iret
out
jbe
pusha
or
push
jbe
mov
xchg
xchg
daa
mov
(bad)
int
inc
outs
add
push
add
movzx
xchg
add
popaw
add
lods
imul
jae
jns
test
fimul
sub
jmp
movsx
pop
jnp
mov
mov
push
movsx
dec
std
or
inc
or
fld
jmp
fst
sub
imul
int
cdq
int3
mov
sbb
call
repz
add
dec
inc
add
call
mov
jmp
cmp
imul
pop
adc
xor
loop
cdq
xor
int3
and
sub
jbe
add
mov
jmp
call
push
jnp
or
push
inc
sbb
dec
aas
dec
fldenv
(bad)
or
cmp
sbb
sub
and
and
fsub
cs
cwde
xchg
ror
or
fldenv
mov
or
imul
jae
jo
std
jno
addr16
pop
ins
dec
rcr
push
fld
vpsrlw
imul
push
or
adc
pushf
jecxz
pop
(bad)
nop
pop
cmp
ja
push
mov
fcomp
push
and
push
bound
mov
mov
xchg
sbb
or
ins
xor
ins
jbe
sub
dec
fbstp
xchg
or
fld
push
sub
xchg
lods
je
hlt
pop
dec
aaa
add
call
dec
shl
les
cmp
and
dec
fisub
cmp
fld
cmps
fs
xchg
jbe
int
sbb
push
aaa
cmps
xor
jmp
das
mov
in
push
mov
push
je
xor
mov
sub
and
les
fcomp
in
outs
jle
and
retf
add
and
jmp
xchg
inc
push
mov
ins
cmc
shl
mov
adc
and
inc
mov
imul
xchg
icebp
rol
leave
arpl
popa
and
cmc
sub
dec
pop
pop
xchg
jns
push
push
test
xchg
or
test
cmp
div
loop
fcmovu
push
popf
mul
stos
test
and
push
mov
dec
push
mov
mov
fdiv
cmp
sub
jb
adc
sbb
sbb
std
aam
jmp
sbb
jmp
outs
ret
push
enter
push
adc
jmp
adc
adc
cmp
pop
leave
sub
xchg
xchg
shl
ja
inc
test
or
lods
push
movs
adc
inc
sbb
nop
ss
cmp
enterw
sub
sub
cmp
add
cmp
mov
or
or
scas
les
jb
xlat
cmp
repnz
ja
mov
cmps
lods
lock
clc
fild
sub
and
dec
push
xchg
sbb
mov
or
adc
mov
call
adc
adc
int
pushf
sbb
add
(bad)
add
or
add
sbb
mov
cmp
pop
out
aas
xchg
inc
mov
push
jns
or
das
sbb
push
or
addr16
movs
dec
inc
cmp
pop
inc
cmp
dec
mov
add
pop
or
std
or
mov
js
ja
adc
lea
sbb
pop
jb
mov
lahf
stc
dec
test
cmps
xor
ror
xchg
cmps
stc
test
(bad)
cs
jo
test
inc
cmp
outs
loopne
loopne
or
pop
dec
xchg
addr16
or
popa
cmp
or
and
and
cli
sbb
cs
out
mov
call
dec
pop
jmp
add
sti
mov
lea
adc
setb
push
push
enter
or
jo
jmp
push
mov
add
or
xlat
sbb
cwde
xor
adc
ss
(bad)
lock
dec
pop
add
mov
push
mov
mov
ret
jmp
test
das
sub
lea
lea
das
mov
or
lods
mul
and
xor
dec
inc
add
movs
std
mov
gs
jg
and
in
les
and
lea
lds
dec
jmp
call
xor
mov
jmp
loop
mov
ret
mov
fcom
mov
jns
sbb
dec
push
sbb
dec
push
out
(bad)
inc
mov
rcr
test
pop
hlt
pop
adc
leave
repnz
dec
pop
lock
test
and
cmp
sbb
ds
dec
ficomp
or
jecxz
push
adc
mov
push
mov
adc
(bad)
push
sub
repz
(bad)
push
cmp
mov
shl
js
out
fnstcw
pop
pop
xchg
jge
or
pop
adc
mov
lock
xchg
dec
cmp
xchg
cmps
pop
cmp
dec
repnz
cld
sbb
mov
sbb
mov
cmp
ret
inc
call
in
mov
mov
ins
adc
or
in
fsubr
pop
in
int
mov
jne
dec
lock
pop
or
and
cmp
push
or
jne
je
adc
lock
or
fsubr
arpl
nop
fsubr
lods
sbb
je
mov
add
xor
jmp
jmp
push
sbb
adc
xor
dec
repz
(bad)
fsub
out
inc
les
ret
movs
imul
add
add
ret
sbb
mov
and
test
sahf
push
fwait
xor
std
push
mov
add
sbb
dec
jp
or
cwde
xor
js
lock
stos
mov
cmps
cmp
push
fstp
fwait
aas
mov
mov
adc
add
adc
je
xchg
push
jo
xchg
xor
iret
leave
sti
push
inc
inc
jmp
push
and
lahf
cmp
push
jne
mov
loopne
jnp
add
call
popa
dec
mov
or
dec
jo
out
mov
add
mov
fcomip
cmps
data16
clc
or
xchg
call
add
adc
xor
sbb
xor
inc
dec
jmp
ror
nop
mov
mov
and
cmp
aas
in
jmp
dec
cmp
idiv
cs
push
xor
jge
jns
shl
sub
mov
lods
inc
sbb
or
xor
les
or
jmp
je
or
mov
mov
inc
pop
loopne
fild
loopne
daa
clc
mov
cli
jbe
ins
es
imul
xor
jb
add
xchg
dec
stc
or
add
mov
pop
je
dec
je
jmp
mov
cmps
and
add
adc
xchg
sub
adc
daa
sub
pop
mov
add
push
add
sub
hlt
cmp
adc
sub
aas
loop
or
add
mov
es
rcr
pushf
imul
or
sub
das
dec
lods
inc
xor
pop
int3
xchg
inc
outs
xchg
sub
and
xor
or
es
or
xor
xlat
ror
or
adc
add
retf
sbb
or
sar
mov
(bad)
pop
ss
sub
retf
lahf
mov
clc
and
xor
cwde
loope
or
mov
lea
add
cmps
imul
add
dec
add
push
push
ss
xor
fiadd
and
push
dec
or
cwde
push
psubb
cmps
sbb
sbb
rcr
sub
jne
int
arpl
mov
and
jl
xor
fisttp
js
cs
add
(bad)
jecxz
fild
fcomp
faddp
popf
mov
jne
loope
fidivr
test
sti
or
aaa
mov
cmp
push
leave
fdiv
ins
xor
inc
stc
cdq
cwde
xor
xchg
mov
js
(bad)
push
jle
or
fwait
sti
call
inc
xchg
fstp
fst
sbb
fsub
fwait
clc
cld
sub
adc
jne
loop
or
in
aam
or
jne
call
ret
add
call
inc
inc
push
nop
push
outs
jbe
inc
mov
movs
adc
rcr
xchg
xchg
cmp
inc
or
das
daa
inc
cmp
jo
jne
xor
or
push
iret
inc
inc
fwait
jmp
dec
adc
sub
and
mov
or
rcr
test
icebp
pop
les
(bad)
xor
or
cwde
jno
pop
xor
inc
adc
call
call
and
test
jnp
test
fwait
or
rol
mov
loopne
or
jbe
daa
test
add
inc
fadd
out
dec
shl
or
clc
nop
push
adc
sar
pop
push
or
jecxz
test
cld
sbb
push
pop
cs
cmp
test
sub
sbb
(bad)
jmp
(bad)
xor
pop
lock
(bad)
cmp
mov
xor
loopne
inc
inc
push
hlt
lea
mov
call
xchg
fisubr
fldln2
push
stos
pusha
stos
(bad)
aad
cdq
and
dec
aad
clc
jns
aam
call
out
aam
add
out
shr
add
sbb
ins
push
aaa
xor
inc
push
sub
push
popa
cmp
adc
add
jmp
mov
ror
xor
mov
addr16
lea
dec
ret
cmp
ret
jno
push
arpl
adc
ret
cmp
jle
add
mov
jge
mov
dec
add
adc
push
or
pop
ds
fsub
shl
xor
add
lds
jbe
outs
adc
fstp
pop
or
fisub
sbb
and
aaa
loop
add
ins
push
or
out
cwde
out
adc
cmovb
mov
(bad)
stos
mov
ror
lods
call
ret
sub
scas
mov
add
test
pop
cmp
stc
adc
sub
add
lods
dec
or
sbb
push
retf
out
push
out
imul
pop
sub
out
mov
mov
xchg
xchg
or
and
push
sahf
fisttp
adc
mov
sub
popa
adc
push
push
or
mul
inc
jl
mov
icebp
(bad)
ficomp
xor
fiadd
mov
jo
push
scas
sbb
adc
dec
mov
test
jmp
push
movs
call
jmp
(bad)
sub
xor
mov
daa
push
sub
dec
ror
dec
aas
popf
outs
push
ror
jbe
pop
movs
imul
int3
test
jmp
not
adc
loopne
xchg
es
loop
push
cmc
jae
popa
jnp
nop
xor
fchs
and
sub
add
sbb
fld
clc
or
lods
out
sbb
pop
or
push
add
rol
adc
adc
jmp
inc
or
frstor
pop
sub
jl
cs
call
js
fadd
test
add
cmp
ret
jmp
data16
je
sbb
xchg
inc
ja
inc
rcl
sar
fcom
jo
xchg
lock
sbb
adc
in
add
mov
ret
adc
and
lock
out
stc
pop
aaa
lea
data16
push
and
or
or
or
in
je
mov
mov
jmp
mov
pop
inc
dec
and
fisubr
jb
jns
xchg
xor
popa
mov
and
jne
sub
sti
retf
loop
add
xchg
cmp
(bad)
or
jmp
mov
push
test
add
mov
lock
outs
push
ret
scas
call
push
cmp
rcl
inc
add
or
inc
or
add
add
mov
jge
mov
sbb
retf
cld
scas
add
ins
(bad)
ss
cmps
cmp
pop
mov
sbb
fisubr
xchg
mov
leave
js
or
add
push
sbb
xchg
lock
(bad)
cmp
jne
mov
loopne
popa
icebp
inc
xor
sti
rcr
inc
sbb
fldcw
sbb
xor
jmp
adc
and
nop
or
lahf
inc
pushf
inc
adc
loopne
xchg
sbb
test
or
and
jo
adc
sti
les
add
rol
ret
or
aad
and
xchg
cmp
add
hlt
sti
mov
sub
inc
mov
xchg
push
out
add
out
test
cli
and
add
push
inc
jp
inc
les
pushf
js
ffreep
rcl
xchg
fimul
mov
loop
lock
mov
inc
push
pushf
std
cmp
nop
adc
xor
mov
ror
loope
mov
das
push
mov
lea
out
sub
lock
int3
pushf
add
xor
push
jb
daa
or
ret
xchg
ror
pusha
push
lods
push
dec
add
fmul
inc
test
mov
es
add
ret
mov
pop
xchg
cld
cmp
add
pop
xchg
lock
mov
add
inc
push
and
sbb
jae
rcl
lock
ror
outs
cmp
jne
dec
and
dec
call
adc
jl
add
inc
dec
dec
push
and
dec
(bad)
push
(bad)
pop
les
lea
mov
pop
inc
call
cmp
sub
das
shr
out
add
xor
jnp
sub
adc
pop
jns
pusha
imul
push
sbb
cmp
lss
pop
fcom
add
push
push
dec
jns
push
(bad)
das
js
inc
mov
or
pushw
(bad)
and
jne
retf
sbb
adc
or
loopne
ins
inc
(bad)
dec
add
sbb
xchg
out
push
jbe
test
shl
div
lea
dec
fmul
mov
inc
repz
imul
fisub
ins
hlt
fwait
mov
jmp
and
ret
clc
sub
jmp
jne
inc
push
lea
or
std
cmp
dec
push
add
inc
fdiv
nop
or
jmp
ficomp
dec
sbb
push
fadd
add
fs
rcl
inc
xor
add
xor
mul
jg
mov
mov
and
inc
cmp
jle
mov
fidivr
jle
cmp
adc
pop
enter
leave
mov
dec
jne
mov
(bad)
gs
inc
loop
jl
xor
cmp
je
adc
adc
sbb
arpl
sub
push
int3
inc
mov
jnp
fstp
daa
pop
add
pop
clc
xchg
jne
arpl
mov
and
call
inc
dec
(bad)
aad
dec
fistp
jmp
ret
dec
pop
and
inc
jmp
iret
out
hlt
(bad)
cmps
(bad)
add
pop
adc
sbb
dec
int3
mov
and
inc
xor
cld
adc
pop
shl
mov
ja
jge
pusha
ret
bound
outs
test
jl
sub
lds
inc
xor
sbb
iret
dec
jne
cmp
std
adc
pop
cmp
mov
or
mov
xchg
or
out
push
dec
pop
push
mov
stc
lea
imul
and
sbb
jge
sbb
lea
cwde
inc
add
pop
adc
test
sbb
mov
fmul
sbb
push
xchg
mov
cmp
or
lock
jne
mov
test
cdq
push
xchg
(bad)
shr
push
out
popf
add
and
sub
lods
mov
pushf
add
adc
cld
or
jle
leave
mov
ja
fnstsw
jle
repz
iret
je
loopne
daa
xlat
dec
sbb
(bad)
mov
pop
sbb
sub
ficom
lock
enter
cdq
dec
fsub
in
(bad)
push
xchg
xchg
jp
and
pop
add
jns
in
and
aam
jo
(bad)
sub
or
sbb
inc
ja
add
in
aaa
sbb
cmp
dec
pop
push
imul
jmp
jge
sub
call
or
aam
add
adc
mov
or
sbb
cmp
cmc
sub
repnz
clc
fwait
movsx
mov
repnz
and
and
iret
pop
fld
and
cwde
(bad)
jnp
cmp
mov
jmp
neg
scas
sbb
neg
sbb
pop
imul
push
add
pop
jns
jmp
ins
sahf
enter
jne
inc
add
add
cmp
sbb
xchg
imul
or
sbb
loope
jne
jge
ds
inc
mov
lock
fcomp
adc
xchg
movs
pop
sub
adc
arpl
xor
fadd
add
fs
daa
add
test
jmp
push
pop
or
add
xchg
lock
(bad)
hlt
dec
or
xor
hlt
mov
outs
dec
sbb
push
push
jge
cli
imul
jne
xor
add
adc
leave
dec
fld
int3
or
(bad)
out
rol
shl
sbb
in
fdivr
inc
in
mov
push
add
aam
xchg
inc
dec
rol
clc
jmp
add
mov
adc
pop
cs
imul
je
mov
push
jmp
test
mov
(bad)
prefetch
fstp
aas
pop
bound
mov
sub
mov
pop
sbb
inc
fstp
fwait
pop
fisttp
icebp
pop
mov
aas
out
jnp
imul
jmp
int
pusha
pop
jbe
(bad)
push
cmp
sbb
int
popa
rcl
mov
pop
ins
pusha
outs
enter
stos
or
mov
jnp
jne
mov
pop
call
pop
hlt
jnp
pop
loop
and
aaa
jne
lock
add
inc
aaa
adc
shl
add
add
sub
xor
pop
std
in
xchg
stos
dec
dec
cmp
jl
sub
add
cmp
data16
loopne
daa
hlt
xor
jne
dec
repnz
ins
loopne
cmp
lock
pop
pop
add
pop
xchg
adc
mov
fdivr
push
jecxz
les
data16
out
inc
add
xchg
es
movs
test
xchg
push
adc
popf
cmp
je
or
dec
sbb
(bad)
adc
dec
and
mov
mov
xor
push
aam
xchg
shl
mul
jg
das
imul
ret
sub
movs
loopne
ret
sub
push
or
adc
mov
leave
add
ret
call
sub
(bad)
ds
pop
inc
es
add
ds
and
inc
sbb
dec
mov
or
cmp
adc
and
mov
jge
cmp
pop
push
and
xchg
xchg
cmp
rol
aaa
adc
cmps
int3
and
push
pushf
dec
push
lods
pushf
push
xchg
popa
shl
mov
sbb
or
(bad)
jmp
pop
arpl
inc
lods
xchg
cmp
nop
iret
retf
xchg
mov
mov
ss
push
rcr
pop
test
std
cmp
jg
rcl
enter
popa
sub
or
mov
mov
dec
inc
je
push
mov
imul
mov
les
adc
sub
lea
and
jge
aaa
outs
push
mov
cwde
sbb
pop
push
and
mov
push
cmp
out
xor
add
pushf
nop
js
sbb
cmovbe
cdq
pusha
jno
mov
or
or
mov
loop
mov
(bad)
sbb
mov
xchg
mov
pusha
sbb
and
inc
push
push
and
js
mov
cli
div
enter
xchg
pop
daa
clc
dec
add
add
pop
popf
cmpxchg
sbb
and
ds
dec
mov
sub
lahf
into
mov
adc
xor
ins
mov
mov
rcr
mov
(bad)
std
sar
mov
mov
(bad)
cld
push
adc
lock
(bad)
jl
(bad)
and
jl
sub
inc
sub
int3
xor
push
imul
fchs
cmp
(bad)
mov
(bad)
cmp
cmp
sbb
dec
mov
lahf
stc
push
mov
pop
mov
sbb
pusha
(bad)
pcmpgtb
mov
push
pshufw
xchg
fbld
je
pushf
sti
mov
mov
std
add
test
iret
repz
jl
xchg
push
nop
les
mov
idiv
cwde
or
pushf
add
mov
iret
adc
movs
adc
xchg
dec
mov
sub
xchg
shl
pop
pop
sub
pop
pop
inc
pop
jns
jbe
push
cmps
push
sbb
test
stos
sbb
stos
lods
lods
fs
inc
push
scas
scas
nop
nop
inc
push
sbb
sbb
xchg
push
sbb
cwde
cdq
call
popf
fs
inc
push
sahf
lahf
adc
add
test
nop
xchg
cmp
fcomp
xchg
test
cmp
pop
xchg
ror
loopne
cdq
inc
lods
out
hlt
or
shl
xor
inc
adc
or
adc
inc
or
repnz
sub
ds
lds
push
mov
mov
mov
adc
mov
repnz
pop
cmp
jne
js
lock
hlt
mov
es
push
daa
pop
sti
ss
xchg
jecxz
das
mov
cmp
lods
lods
out
sbb
jmp
add
sbb
inc
add
sbb
or
icebp
nop
ins
sbb
cmp
loopne
xchg
jmp
clc
mov
sub
add
lea
mov
add
test
or
adc
mov
xor
ret
fbstp
and
push
das
inc
leave
cmp
jg
xor
cmp
jle
cmc
pop
push
(bad)
sub
hlt
or
or
pop
jo
ret
xor
fdivr
mov
sub
sub
mov
(bad)
test
lods
or
test
gs
addr16
mov
mov
cmps
cmc
mov
fisttp
mov
movzx
mov
push
fistp
cmp
call
retf
je
mov
dec
and
sbb
fiadd
push
adc
xlat
jmp
aas
clc
std
jle
and
jne
jmp
cmp
sbb
mul
int
sub
sbb
xchg
xchg
jmp
mov
rep
mov
push
dec
test
sti
jbe
push
or
or
dec
sbb
cmp
sbb
mov
test
(bad)
(bad)
(bad)
repnz
or
ror
pop
cmp
mov
jb
ja
xchg
imul
xor
xchg
pop
mov
mov
scas
and
mov
arpl
(bad)
aas
mov
cmp
je
cs
sysret
jns
mov
pop
or
jmp
jle
or
fisttp
lea
fsub
mov
push
xchg
mov
or
adc
add
mov
shl
das
jg
je
in
add
ss
ds
movs
in
push
push
adc
call
or
(bad)
or
test
dec
imul
pop
outs
jmp
or
gs
pop
xchg
movs
adc
mov
mov
cvtdq2ps
sub
adc
jle
adc
cmp
dec
fdecstp
jo
xchg
xlat
or
cld
adc
mov
lods
cmp
fadd
stos
mov
mov
aas
fldcw
sbb
out
sbb
iret
aam
int
xor
dec
ins
push
pinsrw
data16
add
sub
ficomp
scas
mov
mov
or
rol
fistp
or
mov
adc
jg
fst
pop
clc
(bad)
jge
test
hlt
sub
push
shl
cld
(bad)
sbb
and
mov
fsubr
dec
sub
inc
ins
xlat
ret
xor
pushf
jbe
lods
scas
push
sub
test
jmp
pop
stc
or
je
imul
sbb
test
push
pop
xor
jg
mov
jns
ins
test
adc
adc
sbb
pop
pusha
push
mov
lock
phaddsw
sub
push
or
enter
lock
dec
dec
add
add
pop
push
call
stc
mov
das
test
adc
jecxz
imul
inc
sub
mov
scas
add
pop
adc
pusha
test
inc
cmp
fist
sub
ror
out
add
mov
stc
mov
or
call
adc
(bad)
sbb
and
inc
and
loopne
and
repz
add
test
jmp
adc
fnsave
and
sets
(bad)
(bad)
or
ret
les
adc
clc
aas
jne
xchg
cmp
jb
pop
cmps
cld
xor
iret
lods
and
push
mov
stos
jge
inc
pusha
and
imul
add
loop
sub
fdiv
clc
daa
cdq
add
push
popa
and
mov
add
popa
fwait
cmps
mov
sbb
lods
fadd
jecxz
or
lahf
inc
fisubr
fld
mov
and
imul
dec
inc
add
std
push
movs
mov
xor
cs
jle
fdiv
cdq
jle
jo
pop
push
push
inc
cli
push
jmp
dec
jecxz
xchg
je
aad
add
adc
pop
ins
push
jmp
or
adc
push
sbb
sub
std
adc
lea
rol
imul
pop
add
jmp
test
mov
fadd
imul
xlat
mov
js
dec
ss
mov
in
clc
push
add
push
es
mul
fwait
xor
ins
or
sbb
and
adc
inc
rcr
jnp
cmp
adc
or
cmp
gs
out
or
aaa
pop
mov
add
mov
shl
jge
jecxz
xchg
adc
push
dec
rcl
xchg
push
test
int3
ret
out
pop
cmp
arpl
xchg
pusha
sub
outs
or
mov
fistp
outs
call
jp
mov
call
pop
jo
shl
pop
jmp
sbb
adc
adc
push
or
adc
jns
test
dec
sahf
dec
lea
nop
xchg
mov
pop
add
clc
and
cmp
add
call
and
ror
jg
dec
aam
or
sbb
lock
add
pop
or
cs
and
push
push
jo
rol
fsubr
mov
pop
icebp
shr
add
adc
mov
(bad)
mov
int3
mov
ret
int
in
xchg
dec
or
dec
xchg
mov
push
add
pusha
jb
out
mov
add
dec
inc
adc
mov
in
scas
mov
and
ds
sbb
(bad)
sbb
nop
cs
jbe
(bad)
mov
fyl2xp1
and
cmp
sbb
(bad)
and
add
add
pop
(bad)
std
jmp
sti
rcr
jns
ret
push
ds
loopne
pop
mov
mov
inc
mul
(bad)
mov
loopne
push
sub
pop
dec
dec
imul
xchg
outs
arpl
add
inc
arpl
les
cdq
pop
push
and
push
push
gs
outs
das
ins
sti
(bad)
in
add
xor
jae
sbb
into
adc
outs
pop
jae
ja
jae
mov
or
out
sbb
or
in
inc
cmp
iret
popa
cmp
addr16
and
aas
rcl
inc
fs
jae
dec
outs
ins
call
add
iret
push
(bad)
fld
or
addr16
pop
inc
inc
push
dec
dec
es
mov
and
add
push
or
mov
inc
xor
aas
jb
jo
popa
jb
gs
and
loopne
ror
cli
xchg
popa
or
jnp
mov
xor
outs
xor
popa
push
or
fidiv
neg
seto
enter
mov
jl
and
ins
or
push
xor
and
lock
in
mov
pop
xchg
(bad)
mov
cdq
in
aaa
in
mov
not
add
push
inc
ins
imul
or
pop
dec
gs
iret
(bad)
je
icebp
imul
push
sbb
inc
pusha
mov
inc
ins
popa
mov
jae
sbb
xchg
fs
xchg
scas
pusha
in
outs
or
or
cmp
inc
imul
jle
addr16
or
sbb
sbb
les
cmp
imul
mov
mov
rcr
dec
outs
mov
xor
mov
aam
dec
sbb
test
je
add
nop
ror
(bad)
sub
pop
movs
(bad)
fisubr
or
iret
ds
int3
adc
or
cmps
outs
push
push
cmp
sbb
or
cs
cmp
inc
cs
cmps
sti
dec
or
push
invd
or
mov
lods
jp
adc
or
popf
mov
sub
push
mov
outs
nop
sub
bound
or
fsubr
cmp
mov
push
xchg
sub
dec
(bad)
pushf
les
fs
pushf
inc
leave
in
retf
scas
hlt
hlt
(bad)
stos
in
push
cmp
inc
mov
sub
dec
cmp
push
sub
inc
and
mov
scas
movs
xchg
sub
push
inc
push
push
inc
sbb
push
cmp
aas
out
imul
push
pop
fidiv
call
scas
jle
inc
xchg
dec
fisubr
adc
into
adc
or
xchg
ins
mov
or
(bad)
jo
mov
mov
xchg
adc
es
and
and
mov
or
xor
add
and
test
mov
rcl
(bad)
jo
push
push
push
inc
addr16
or
mov
fild
movs
sbb
call
jb
imul
mov
mov
icebp
pop
clc
(bad)
dec
push
jns
ins
mov
ss
nop
mov
pop
adc
test
inc
fiadd
jns
sub
maxps
xor
aam
cmp
lds
xchg
push
lock
dec
cmp
je
int3
int3
jge
(bad)
sub
jbe
xchg
xchg
cmc
ds
add
mov
push
adc
shl
push
pop
pop
shl
push
mov
pop
sub
aaa
stc
(bad)
mov
add
dec
mov
jb
aas
add
inc
loop
cwde
sub
adc
js
ins
xchg
ins
pop
mul
sbb
mov
push
jmp
add
mov
pop
in
or
cmps
cmp
sbb
es
add
xor
inc
jne
gs
popa
int
pusha
push
xabort
xchg
outs
jbe
jne
push
test
(bad)
jae
je
mov
sbb
sbb
js
nop
popa
mov
xchg
mov
pusha
or
mov
(bad)
fisub
adc
pop
jbe
add
mov
in
sub
sub
(bad)
(bad)
fmul
push
jae
inc
rol
in
dec
add
xchg
dec
xor
push
xor
xchg
adc
push
mov
cmp
mov
pop
xor
pop
adc
mov
hlt
cmp
fcmovb
pop
rcl
fisub
add
(bad)
lock
pop
js
dec
mov
pop
cmp
ins
fs
pop
cmp
sbb
ins
ins
dec
mov
(bad)
or
jnp
pop
sub
mov
(bad)
push
int3
pop
inc
shl
mov
fisttp
call
push
jle
loop
dec
rcr
fsubr
jnp
xchg
inc
add
ror
imul
(bad)
sti
stos
pusha
ds
jo
pusha
pop
and
sar
(bad)
xorps
dec
test
jae
fs
jo
mov
jmp
pushf
jae
push
rcl
sahf
cmps
add
scas
cmp
push
ins
push
lock
je
div
push
adc
cmps
jb
xchg
push
adc
cmp
inc
jnp
add
ja
sub
mov
and
push
mov
stos
push
mov
int
inc
jbe
repnz
pop
aam
clc
jle
dec
add
popf
pop
mov
adc
enter
jnp
xchg
mov
xor
js
inc
repz
mov
pop
sbb
fst
push
or
stos
jne
leave
dec
movs
push
dec
inc
pop
cmp
or
ins
pop
sub
jbe
sub
in
pop
sbb
push
mov
lock
je
jnp
(bad)
cwde
jbe
mov
lea
sub
pop
xacquire
push
enter
jbe
pop
or
push
sbb
ins
(bad)
sub
lea
mov
xchg
(bad)
pop
jne
sbb
mov
inc
inc
push
add
inc
ss
dec
inc
pop
push
adc
pop
sub
into
xchg
mov
push
xchg
sub
fist
in
dec
or
inc
jl
imul
push
sbb
fidivr
xchg
dec
inc
inc
lahf
or
enter
jmp
movs
out
rcl
push
xor
lods
cwde
aas
out
mov
inc
imul
adc
mov
leave
pop
cmp
(bad)
mov
cdq
adc
push
mov
xchg
mov
imul
mov
int3
inc
inc
into
mov
not
push
daa
in
call
fisub
sub
daa
jb
and
out
int3
fwait
xor
mov
cld
out
cmp
je
test
mov
repnz
dec
sbb
mov
popf
dec
xchg
pop
movs
popf
mov
jecxz
andps
out
es
or
or
es
adc
inc
es
or
sub
sbb
adc
mov
mov
ins
call
out
shl
sbb
daa
xor
add
jl
and
pop
push
dec
mov
stos
sbb
cmps
sbb
jl
mov
sbb
test
dec
push
lahf
ins
add
push
test
sbb
push
out
or
test
add
or
mov
aaa
mov
jl
push
stos
fprem
pop
add
sub
stos
sahf
(bad)
sub
pop
push
cmps
add
mov
jle
(bad)
nop
fild
add
dec
movs
fbld
(bad)
or
dec
push
push
test
xor
mov
push
cmp
pop
and
mov
push
test
push
pop
gs
mov
dec
push
inc
shr
aam
ss
repz
jo
into
ins
test
mov
xor
shr
pop
inc
pop
enter
inc
xor
xor
adc
mov
jecxz
test
fmul
and
mov
lock
test
lock
test
scas
test
jno
cmps
jecxz
movs
inc
mov
mov
mov
repnz
fsubr
push
out
fmul
xor
xchg
das
pop
aam
into
xchg
dec
aam
xor
add
cmp
cmp
inc
and
add
pop
sbb
inc
(bad)
int
dec
or
inc
push
in
jns
add
test
sub
dec
cwde
xor
push
dec
int3
push
add
(bad)
pop
push
mov
stc
inc
enter
or
inc
xchg
repnz
mov
out
cwde
not
fs
mov
cmp
mov
fcom
dec
bnd
dec
push
outs
add
(bad)
stc
(bad)
clc
push
jmp
(bad)
push
push
push
push
push
xchg
icebp
push
dec
push
dec
shl
jl
lods
mov
xor
push
push
jo
lods
imul
mov
jbe
pop
and
jb
adc
xchg
xor
push
outs
push
add
outs
dec
loopne
add
push
sbb
push
add
test
push
popa
addr16
push
add
adc
fnstenvw
movs
cli
mov
fcomp
sub
outs
lods
popf
pop
push
lock
fs
adc
imul
xchg
dec
jmp
(bad)
clc
rcr
mov
pop
push
pop
inc
push
dec
push
push
push
repnz
int3
dec
mov
adc
(bad)
scas
nop
cld
jo
aam
js
or
xor
cmp
pop
cmp
inc
add
loopne
pop
push
ss
lea
enter
mov
dec
push
push
fs
enter
or
inc
push
adc
fadd
lds
fstp
loope
cmp
push
sbb
mov
call
and
pop
dec
pop
sub
mov
call
js
push
mov
mov
jl
adc
cmp
or
mov
inc
jb
jne
xlat
aam
adc
inc
aas
xlat
pusha
addr16
xchg
mov
mov
mov
dec
mov
xchg
arpl
and
mov
in
push
mov
add
xor
pop
cmp
or
xchg
pop
je
int
(bad)
adc
packsswb
jmp
mov
mov
and
outs
push
test
push
outs
fist
mov
call
dec
inc
sub
ss
xor
sti
jne
mov
inc
jmp
sbb
adc
mov
and
and
cmp
ret
out
and
out
test
les
pop
or
leave
sbb
inc
or
cmp
dec
inc
cwde
or
and
or
cmp
xor
sbb
hlt
or
pop
xor
xchg
add
add
(bad)
sbb
(bad)
clc
je
sub
pop
(bad)
and
call
push
loope
sti
cmps
js
and
push
sbb
push
sub
sub
rol
mov
xchg
push
inc
or
(bad)
popa
push
mov
(bad)
fstp
inc
cli
or
jne
test
sub
and
push
hlt
fadd
inc
cmp
loopne
ins
pop
test
sub
inc
je
xor
xchg
(bad)
mov
lea
push
xchg
mov
jae
or
push
sub
push
adc
mov
xchg
gs
xchg
loope
popf
jo
adc
scas
cmp
and
movs
mov
pop
cmp
psubsb
and
inc
cmp
and
inc
fdivr
(bad)
jne
or
push
fadd
fstp
inc
es
add
add
xchg
sub
imul
mov
sub
out
lds
or
ins
and
lock
stc
je
cmp
sbb
in
sbb
pop
aas
or
inc
adc
jecxz
and
dec
daa
pop
dec
rol
clc
push
(bad)
fwait
mov
dec
loop
inc
adc
cmp
popa
adc
add
sub
mov
call
jg
jo
lea
pusha
inc
sub
mov
mov
inc
push
dec
jne
rcl
cmps
adc
imul
sub
or
push
cld
xchg
pop
cmps
jg
inc
rcr
xchg
sub
xchg
mov
dec
cmp
dec
sar
movs
nop
popf
mov
mov
imul
rcl
in
sbb
push
xor
add
nop
popf
push
pop
inc
hlt
test
dec
sub
xor
test
ss
addr16
mov
jo
in
sbb
and
hlt
rcr
xchg
jbe
cli
scas
inc
mov
and
sbb
inc
cmp
pop
inc
(bad)
mul
jl
inc
push
sub
call
add
xor
xor
or
imul
aad
loopne
imul
icebp
cmp
lods
out
pop
push
xor
mov
(bad)
jecxz
(bad)
(bad)
dec
call
jne
xlat
add
sar
mov
into
les
adc
xor
enter
xchg
or
into
aaa
inc
ror
inc
scas
fisttp
mov
ja
daa
xor
int
ror
(bad)
mov
outs
bound
and
fild
mov
sub
dec
push
cmps
dec
xor
add
and
clc
scas
fistp
repnz
dec
cwde
cld
(bad)
pop
mov
cmp
adc
add
xor
inc
test
sub
mov
dec
jge
mov
rol
inc
cmp
sub
mov
adc
pushf
nop
test
pop
dec
lods
xor
mov
imul
mov
inc
ins
mov
imul
mov
arpl
add
mov
popa
or
je
pushf
sbb
push
clc
rol
sbb
xchg
pop
xchg
addr16
and
mov
in
mov
or
mov
adc
hlt
ss
cmp
xor
pop
shl
cmps
push
cmp
pop
ja
inc
cld
push
sbb
pusha
cdq
cmp
sbb
mov
adc
add
sbb
out
add
sbb
sbb
(bad)
je
ja
ins
cmp
add
and
add
rcr
test
pop
cdq
sbb
add
fs
add
gs
scas
into
or
mov
mov
dec
xchg
stos
and
cld
mov
pushf
fld
sub
inc
sub
mov
mov
push
add
jle
out
je
repnz
les
or
lods
sub
or
dec
sbb
mov
xchg
(bad)
outs
dec
ins
mov
lea
test
call
(bad)
pop
sub
cwde
in
push
enter
and
js
(bad)
and
mov
int3
ret
and
mov
xor
xor
fucomip
js
or
add
nop
addr16
mul
push
leave
inc
mov
dec
rcr
xor
lea
inc
dec
mov
add
test
sbb
or
or
jnp
mov
ins
sar
pushf
sub
pop
cmp
add
or
cmps
test
ins
mov
jns
sub
mov
xchg
mov
sub
fsubr
in
add
dec
mov
push
lods
(bad)
mov
lock
push
mov
je
lea
enter
(bad)
lea
sar
cwde
lahf
pop
sbb
shl
jo
call
push
mov
in
ja
test
lea
es
inc
sbb
fst
xor
xchg
add
or
push
jle
sbb
push
ins
pusha
(bad)
enter
xchg
dec
push
xor
dec
dec
call
test
bound
mov
clc
inc
rol
xchg
mov
aas
sub
xlat
mov
sbb
sbb
fisttp
push
mov
pop
adc
arpl
jae
xchg
mov
inc
xchg
pushf
(bad)
(bad)
out
mov
add
loope
mov
lock
mov
push
or
fsub
test
cs
pop
pop
arpl
aas
scas
cld
add
and
dec
sub
setns
xor
cmp
xchg
cli
imul
inc
stos
inc
add
fild
jecxz
pop
mov
test
aam
test
xchg
mov
pop
jbe
or
fmul
adc
movs
lds
xlat
nop
add
call
or
fiadd
and
jg
out
adc
inc
test
inc
add
push
push
mov
push
cwde
cmp
inc
not
cmp
cmp
dec
mov
push
adc
mov
sub
shl
(bad)
loopne
cdq
jl
loopne
mov
cmps
pop
inc
push
jge
jbe
enter
lea
xor
inc
xchg
cmp
movs
inc
pop
sbb
cmp
mov
inc
gs
stos
mov
sub
push
pop
mov
test
sub
push
das
nop
inc
bound
push
xchg
es
inc
(bad)
sbb
iretw
mov
call
mov
mov
call
push
push
adc
enter
add
cdq
or
pop
cmp
add
cwde
(bad)
pop
inc
ret
stos
pop
jp
cmovbe
mov
hlt
cmp
bound
xor
nop
punpcklwd
adc
in
dec
add
fimul
jae
add
add
adc
fst
aaa
movs
or
leave
xchg
add
arpl
mov
push
loope
pop
pusha
adc
mov
sub
adc
adc
dec
push
dec
and
jge
inc
add
ja
enter
loop
adc
or
cs
xchg
xchg
hlt
mov
lock
ja
movs
cmp
and
lea
mov
pop
test
adc
rcr
mov
add
ror
shl
cmps
xchg
adc
je
mov
movs
mov
or
or
(bad)
push
mov
repz
sub
jb
jnp
fimul
dec
or
mov
mov
scas
sub
movnti
mov
fcompp
test
mov
ins
jecxz
mov
mov
lds
adc
and
and
sub
aas
inc
call
(bad)
inc
cmp
jge
mov
adc
ror
fidiv
sbb
leave
out
cmps
mov
mov
sbb
mov
and
adc
ret
pop
jg
les
or
pop
xor
icebp
mov
inc
mov
jo
xchg
sbb
and
or
icebp
mov
sub
add
cwde
push
mov
clc
ror
and
push
shl
les
rcl
dec
and
xchg
cmps
xor
clc
(bad)
aas
lock
(bad)
jge
enter
sbb
movs
sub
popa
push
add
mov
pop
push
sar
mov
(bad)
shl
call
xor
adc
xchg
jns
inc
jle
sar
cmp
icebp
scas
add
or
test
cmp
sahf
jmp
dec
mov
sub
jg
orps
push
dec
push
push
dec
inc
push
sbb
or
cmp
push
xlat
or
dec
lods
mov
inc
pop
adc
add
inc
adc
lea
dec
sbb
fnstenv
fwait
stos
adc
mov
fwait
pop
and
inc
pop
ficomp
bswap
mov
js
pop
lods
dec
inc
lods
aad
inc
jne
loop
or
push
dec
add
adc
ins
out
int3
cmp
adc
ins
imul
sbb
es
sub
rol
add
xchg
lds
pop
jg
adc
or
sub
jne
test
add
pop
adc
mov
inc
xchg
sub
ficom
adc
scas
daa
(bad)
or
add
cwd
out
and
push
in
icebp
dec
fisub
f2xm1
fcom
push
ret
cwde
inc
loopne
enter
mov
(bad)
aas
pop
clc
das
fcom
arpl
add
add
ret
inc
add
push
push
xchg
ds
jne
mov
sub
clc
pop
pop
and
fwait
mov
fwait
das
lahf
add
enter
or
fs
call
mov
movs
and
dec
ret
mov
xchg
jl
outs
rcr
dec
mov
nop
imul
stc
loope
mov
inc
repnz
popf
cmp
pusha
or
jp
out
cmp
mov
xchg
cmc
mov
xchg
pop
inc
imul
or
jno
mov
push
aas
mov
mov
imul
add
leave
test
jno
or
jno
dec
cmp
cmps
(bad)
jns
push
push
lahf
pop
jb
jb
or
jb
pop
ins
mov
cmp
mov
jnp
mov
fmul
xchg
inc
xchg
push
pusha
test
rol
xchg
mov
into
xor
push
enter
and
inc
es
enter
clc
int
jno
dec
aam
ret
add
xor
sbb
mov
dec
push
(bad)
out
jg
sar
mov
shl
sbb
and
sar
shl
cmp
je
cs
add
into
sub
add
popa
inc
push
xor
xor
les
fcmovnbe
adc
xor
push
mov
push
pop
add
cmp
jae
fs
or
ror
inc
stos
iret
mov
or
clc
cli
add
mov
pop
push
push
inc
adc
pop
lods
pop
jmp
bound
adc
jp
push
test
dec
inc
ret
adc
push
lds
adc
je
sbb
lahf
gs
xchg
cli
pop
ja
xchg
sub
xlat
lahf
bt
jb
add
add
pop
scas
ret
(bad)
sti
mov
adc
jmp
inc
cmp
jne
inc
dec
jne
adc
test
pop
aaa
lahf
push
sub
and
xchg
mov
shl
scas
in
push
xchg
stos
push
sub
mov
or
cmp
out
in
inc
pop
jbe
daa
popa
cmp
or
in
test
sub
fldcw
daa
pop
ins
adc
add
mov
xor
out
xchg
outs
push
outs
imul
mov
mov
or
in
ret
mov
(bad)
jno
mov
test
mov
sbb
sub
dec
push
sar
cmps
push
or
mov
jne
mov
add
scas
xor
loopne
popa
dec
sbb
dec
and
xchg
test
stos
push
inc
cmp
fistp
ret
sahf
sbb
ja
and
xchg
mov
aad
ins
fstp
add
aas
add
add
push
adc
call
and
ret
mov
stos
xchg
inc
xchg
inc
sbb
je
gs
push
inc
jnp
push
sub
daa
push
push
adc
xchg
cmp
dec
adc
jnp
mov
daa
lahf
fprem
test
mov
(bad)
fwait
or
retf
push
xchg
dec
or
xchg
push
push
sets
das
mov
sub
add
xchg
popa
jnp
test
sbb
xor
mov
pop
cmp
fisub
shl
add
cmp
dec
icebp
test
mov
xchg
and
xchg
xlat
test
mov
mov
stos
test
adc
cmp
xchg
cmp
push
data16
in
in
cmp
loope
jns
jnp
cmp
imul
adc
imul
xor
dec
js
or
adc
cmp
mov
xchg
in
pushf
cmps
and
jns
int
repnz
push
and
pop
or
fidiv
add
sbb
ins
dec
sbb
xchg
sbb
movs
jbe
add
pop
pop
cli
lock
scas
jno
into
je
sub
lds
adc
pop
cs
mov
and
dec
add
or
ds
push
out
mov
pop
mov
pop
sti
push
mov
lea
pop
and
sub
mov
fcomip
imul
inc
inc
bndldx
mov
pop
mov
mov
mov
xlat
and
xchg
push
inc
xor
or
ins
call
and
mov
or
mov
xor
ret
sbb
int3
push
scas
adc
mov
jne
or
add
jle
inc
inc
jnp
push
rcl
lds
or
fild
or
(bad)
push
jb
jnp
dec
or
in
xchg
lods
fsub
adc
sub
lahf
jge
mov
sbb
lods
push
push
inc
or
xor
cmps
or
outs
sbb
mov
clc
in
xchg
mov
sbb
clc
inc
push
ret
daa
lea
jo
pop
cmp
lods
add
jo
psubb
jb
call
clc
lods
rol
mov
or
loopne
ds
adc
cmps
xchg
pusha
pop
or
adc
mov
inc
outs
cmp
dec
and
mov
inc
or
jo
call
hlt
xor
xchg
cmp
jno
or
sbb
pop
jae
add
cwde
out
mov
pop
jne
sbb
cwde
outs
sbb
mov
jne
mov
rcl
cwde
movs
out
enter
or
mov
jmp
add
(bad)
xchg
add
cwde
leave
sbb
ds
je
dec
pop
adc
adc
or
lods
test
pop
adc
pop
and
mov
fldcw
iret
out
push
dec
xor
call
pop
arpl
xor
call
fnstenv
push
js
addr16
shl
popa
mov
cmp
jb
jmp
rol
test
sbb
iret
pop
fst
call
jns
and
mov
cs
mov
jl
sbb
and
mov
inc
cwde
mov
inc
or
les
or
ror
popa
add
pop
jo
sub
adc
bound
push
mov
mov
cmp
cmps
jecxz
jnp
and
and
clc
test
mov
dec
push
bound
inc
bound
or
daa
or
(bad)
mov
mov
adc
loopne
xchg
gs
add
cmps
loopne
inc
dec
cmp
mov
(bad)
test
dec
xor
retf
in
xor
out
jo
imul
xor
add
addr16
es
dec
in
retf
pop
(bad)
clc
arpl
repz
adc
add
xchg
ret
sub
or
adc
imul
mov
pop
xchg
sub
adc
jmp
loopne
subps
hlt
jge
loope
adc
mov
(bad)
mov
add
inc
xor
in
mov
loop
pushf
push
(bad)
movs
xor
cmp
cmp
sub
fcomp
loope
pop
sub
cmp
push
in
cmp
push
shl
movs
jns
sub
or
sbb
add
cmp
(bad)
iret
shl
cmp
add
adc
push
xor
aam
ss
and
xchg
xchg
cmp
dec
fist
or
(bad)
test
sbb
lea
shr
fadd
call
and
and
add
imul
ret
xor
imul
push
rcr
push
xor
or
jge
shl
add
cmc
mov
dec
add
cmp
xor
loopne
call
stos
add
jl
inc
in
mov
dec
xor
inc
jnp
inc
and
lea
jbe
xor
pop
adc
mov
retf
ud1
adc
push
inc
in
xor
inc
es
mov
add
in
in
test
or
mov
test
add
fdivr
mov
cld
or
xor
inc
dec
pop
jmp
cmp
hlt
cmp
sbb
jno
cmp
xlat
and
in
loopne
sub
test
sub
dec
sahf
and
jle
lock
or
push
xchg
(bad)
cmp
add
mov
sbb
pop
sbb
or
bound
sbb
fmul
hlt
pop
in
push
arpl
and
int
mov
outs
sti
test
jg
aaa
or
inc
call
pop
push
xor
stc
pop
jl
pop
add
pop
add
xlat
and
or
pop
or
inc
push
es
(bad)
retf
inc
mov
sbb
pushf
mov
adc
ret
std
or
mov
(bad)
clc
jmp
xchg
mov
ret
div
adc
adc
mov
lock
dec
push
push
mov
or
fldcw
push
xchg
pop
sub
adc
and
clc
mov
add
dec
push
clc
xchg
pop
add
push
bound
dec
push
jmp
in
xor
xor
or
ins
arpl
out
adc
fcmove
pop
(bad)
jmp
bound
mov
movs
mov
and
xchg
add
mov
scas
out
mov
into
push
mov
in
sub
mov
and
mov
push
mov
leave
pop
leave
test
gs
out
and
jb
sub
or
in
mov
push
mov
(bad)
lods
mov
sub
rcr
mov
test
int
and
mov
(bad)
or
je
sar
test
adc
ins
pop
cs
(bad)
bound
aaa
mov
push
popa
push
mov
cmp
adc
dec
pop
dec
and
or
outs
shr
fisttp
fadd
cmp
add
push
mov
or
dec
scas
push
loopne
or
ret
daa
sub
movs
enter
std
mov
cmp
add
lds
cmp
mov
lods
inc
shl
clc
loopne
dec
addr16
xchg
mov
pop
mov
or
sub
sti
inc
daa
lock
push
push
scas
dec
xchg
inc
pop
(bad)
mov
ret
or
or
dec
stc
cdq
mov
mov
aaa
and
jecxz
lods
lds
sbb
inc
sub
push
push
stos
fidivr
and
adc
xor
sub
shr
mov
xor
add
in
sub
test
out
mov
inc
adc
test
mov
or
fs
pop
call
or
sub
adc
cs
and
test
xchg
push
add
mov
or
dec
pop
mov
add
xchg
or
fmul
mov
pop
adc
data16
shr
and
ror
and
and
mov
sub
icebp
adc
adc
(bad)
xchg
test
adc
rol
loop
shl
xchg
pop
add
xchg
jns
or
lea
inc
push
inc
pushf
or
add
lock
adc
or
rcr
mov
sub
frstor
or
je
idiv
mov
jle
pop
cld
inc
inc
dec
pop
call
sbb
int
add
add
push
add
mov
or
pop
ins
adc
div
mov
mov
je
jg
mov
(bad)
jmp
inc
daa
or
adc
pusha
(bad)
mov
test
xchg
retf
jge
lea
ret
movs
cmc
ror
xlat
sar
add
repz
sar
cwde
mov
mov
cmps
out
push
push
sbb
pop
sbb
inc
adc
aas
aam
adc
dec
push
sbb
repnz
stc
adc
leave
mov
(bad)
mov
mov
sbb
push
scas
shr
je
mov
mov
or
push
mov
sub
mov
call
int
je
or
mov
call
pop
and
mov
add
sbb
add
jg
inc
ret
jge
inc
or
or
xchg
mov
cmp
adc
cmp
fiadd
rcr
(bad)
jge
repnz
cmps
add
xchg
push
aad
adc
dec
nop
pop
mov
sub
jl
add
cs
add
shr
sub
lods
xchg
dec
and
jecxz
or
and
arpl
and
loopne
push
enter
(bad)
jne
mov
loopne
jne
or
or
sbb
mov
sbb
jle
sbb
fistp
sub
popa
hlt
jl
adc
test
sbb
sbb
aas
push
shl
cmp
je
aaa
add
xchg
nop
add
cmp
push
jecxz
loope
cmp
ds
push
idiv
retf
or
or
js
xchg
inc
push
jno
rcl
loopne
xlat
dec
push
add
xor
cmp
pop
out
or
push
xchg
nop
add
mov
xor
pop
and
push
test
cmp
ins
fild
imul
jno
sub
xlat
mov
add
or
call
adc
cmp
popa
retf
enter
and
lock
jge
sbb
repz
stc
fs
add
mov
dec
ret
rcl
inc
add
xor
mov
inc
loopne
sahf
mov
push
mov
addr16
inc
out
lea
fs
stos
inc
pusha
cs
out
add
or
xor
sbb
add
(bad)
jne
sbb
cmp
gs
loope
jne
(bad)
and
inc
arpl
xor
scas
mov
pop
adc
mov
push
jo
popa
push
mov
or
xchg
mov
add
lods
jno
xor
or
or
push
test
fist
push
jb
leave
or
inc
add
ret
xchg
test
sbb
sbb
or
push
sbb
pop
or
repz
test
push
cmc
xor
aam
add
push
or
pop
sub
add
aaa
call
mov
cdq
xor
ja
add
out
in
jmp
shr
jne
pop
mov
in
test
loopne
sub
sub
imul
adc
sbb
adc
and
dec
cmps
movs
in
js
jo
sbb
and
cwde
clc
dec
jo
arpl
daa
jno
push
bnd
retf
pop
pop
jg
sar
pop
repnz
rcl
and
and
add
mov
mov
jne
cmp
xor
fdiv
add
pop
pop
into
inc
pusha
es
xchg
sub
inc
ret
cmp
and
add
fidiv
xchg
rcl
pop
dec
cmps
push
sub
inc
icebp
bound
test
rcr
loop
outs
repnz
adc
mov
mov
cmps
push
icebp
cmps
mov
and
inc
inc
push
(bad)
mov
cld
lea
jno
mov
jge
mov
add
ins
push
mov
or
dec
pushf
jmp
seto
fnstenv
and
dec
enter
add
mov
movs
daa
and
add
push
sbb
dec
or
pop
stos
out
jnp
lds
jae
sub
ret
pop
icebp
mov
cmp
xchg
inc
add
jae
or
test
push
popf
cmp
cmp
or
or
adc
or
add
add
sbb
mov
ins
les
ss
push
mov
or
or
pop
xor
dec
sub
mov
dec
adc
cmp
fmul
pop
ss
lds
cmp
jge
push
dec
add
mov
or
or
pop
inc
or
jmp
or
test
lds
sti
je
push
cmp
add
inc
pop
dec
push
cld
stc
adc
jecxz
mov
ins
jmp
dec
cmps
daa
or
call
stos
outs
push
cmp
dec
jmp
and
movs
push
(bad)
test
cmp
xor
add
mov
sub
jle
or
loope
lock
push
add
add
lds
and
stos
mov
add
mov
fsubr
add
sub
je
neg
cmp
dec
jmp
mov
aaa
dec
in
or
inc
(bad)
popa
not
push
in
cmp
gs
cwde
or
mov
ins
(bad)
pop
mov
adc
or
cmp
(bad)
cmp
cmp
mov
or
jge
or
pop
sbb
push
xchg
(bad)
xor
pop
pop
jge
scas
ja
ss
js
movs
push
loopne
rcl
sub
inc
pop
scas
xchg
inc
mov
dec
or
pushf
dec
adc
pop
stos
aas
repz
dec
cmp
xchg
cmp
and
dec
inc
mov
inc
lods
adc
pushf
in
ins
and
add
enter
test
sar
sahf
adc
out
mov
and
bound
inc
add
fcom
adc
stos
fidiv
jg
div
jg
js
push
push
dec
cmp
xchg
in
mov
sbb
test
ret
neg
inc
sbb
repnz
or
ja
mov
inc
aas
inc
lock
push
or
adc
jle
fistp
ret
jl
das
push
int
mov
pop
daa
call
test
outs
add
add
adc
clc
mov
or
inc
imul
jo
xlat
out
or
inc
es
xor
(bad)
mov
sub
ret
aas
(bad)
es
sbb
inc
and
or
or
inc
test
pop
fiadd
adc
lods
cwde
stc
popf
(bad)
sub
fiadd
mov
faddp
add
add
call
jmp
out
mov
pop
adc
inc
sbb
adc
push
bound
or
les
iret
das
mov
shl
jle
or
rol
aaa
or
dec
imul
sub
adc
test
add
in
or
mov
out
pop
movs
and
pop
mov
loop
clc
addr16
(bad)
jmp
pop
lods
sub
add
xor
in
dec
adc
cld
xchg
pop
adc
pusha
adc
out
jmp
xor
adc
xchg
or
dec
xor
(bad)
arpl
je
push
ret
std
shl
cdq
or
clc
jl
mov
je
inc
push
mov
and
xchg
xor
jp
jge
pop
pop
jb
pop
lahf
xor
jnp
mul
mov
xor
xor
(bad)
mov
or
push
dec
repnz
fistp
xchg
or
hlt
test
pop
adc
mov
push
fs
sub
bnd
sbb
xor
inc
sbb
fcomp
push
and
mov
dec
xchg
add
cli
aaa
inc
dec
in
jmp
aaa
cmp
cmp
jl
cmp
xor
stc
sub
aaa
jo
lock
aaa
cld
mov
and
jno
mov
sbb
rcl
add
inc
sub
movs
push
mov
sbb
cmp
and
push
mov
mov
jg
cmp
or
je
push
mov
push
adc
adc
adc
pop
push
or
mov
xchg
into
adc
add
dec
and
mov
movs
xor
sub
add
adc
or
push
movs
dec
stos
xchg
lea
into
rol
add
add
pop
xchg
out
dec
inc
outs
pop
sub
or
inc
jno
adc
push
or
pop
sub
dec
data16
mov
test
arpl
test
cmp
arpl
sbb
sbb
mov
adc
bound
jo
pop
aas
mov
arpl
add
pop
call
jb
add
mov
sub
push
xor
adc
jae
xor
icebp
adc
dec
jecxz
out
mov
fiadd
add
mov
adc
add
dec
loopne
add
cdq
adc
or
dec
hlt
xor
mov
outs
in
cmps
pop
pop
jo
add
pop
stos
xchg
push
jnp
and
inc
ja
inc
dec
dec
cwde
jp
fdivr
pop
test
push
inc
retf
call
sub
cmps
pop
add
dec
xor
fadd
and
arpl
sub
repz
jno
inc
mov
lds
mov
xchg
pop
push
pop
push
enter
xchg
sub
inc
rol
sub
test
mov
jns
xor
cmp
jne
(bad)
or
push
rol
add
shl
das
cmps
scas
or
call
add
inc
test
xor
mov
es
xor
push
mov
xchg
inc
(bad)
neg
mov
int3
mov
inc
push
or
jl
movs
les
lods
(bad)
sbb
clc
arpl
xor
xor
cmp
ror
pop
movs
xor
leave
xor
inc
pop
inc
cmp
jne
add
xchg
cmp
cmp
outs
cdq
inc
adc
add
lock
ja
sub
mov
popa
mov
daa
adc
out
imul
jbe
mov
mov
push
fistp
call
add
xor
mov
push
jg
mov
inc
xchg
pop
cmp
mov
call
dec
jne
jp
cmp
mov
add
jl
mov
pop
or
retf
or
sbb
pop
jno
and
ror
je
cmp
sub
imul
mov
mov
leave
dec
ja
fcomp
jle
ja
mov
jle
sbb
fldenv
sbb
fst
retf
cli
fs
dec
mov
cli
test
inc
or
jne
pop
inc
adc
daa
jl
add
iret
dec
data16
cmp
nop
sub
and
test
push
cmp
and
mov
dec
pop
sub
test
jns
jle
inc
ins
stos
dec
push
mov
retf
jb
and
xor
add
lods
adc
mov
les
jmp
lods
pop
pushf
sbb
add
add
mov
gs
iret
and
cmp
push
dec
add
in
cmp
mov
lea
stos
mov
dec
add
inc
xlat
or
push
sbb
pop
rcl
sbb
fnsave
cmp
retf
paddw
and
bound
xor
(bad)
fwait
and
inc
push
dec
jecxz
inc
xchg
push
adc
ss
add
mov
jae
sub
loopne
cmp
sbb
xlat
in
fldenv
rol
sbb
xor
lods
inc
lock
je
pop
idiv
nop
nop
lock
es
imul
xchg
ins
xor
and
xchg
jp
jno
sub
sbb
mov
ret
pop
mov
dec
sbb
adc
inc
inc
push
or
dec
sub
jne
icebp
or
jp
adc
pusha
imul
gs
pop
ret
mov
es
outs
pop
pop
popa
xchg
push
sub
or
inc
bnd
sub
or
aad
pop
pop
call
out
cmp
in
push
adc
pop
xor
adc
sub
adc
xor
fdiv
shl
popa
arpl
into
xor
inc
inc
add
loop
pop
adc
xchg
hlt
jno
leave
push
(bad)
mov
popa
sub
inc
and
test
inc
sub
nop
in
mov
adc
fcomp
shl
push
div
inc
std
mov
popf
push
pop
jmp
sub
pop
lods
out
mov
and
push
jb
inc
push
push
xchg
mov
pop
pushf
mov
loope
ja
shr
(bad)
loopne
fwait
sbb
add
lods
or
retf
add
mov
adc
jae
(bad)
pop
(bad)
mov
mov
(bad)
fwait
and
inc
imul
cmps
push
and
test
movs
cmc
fwait
adc
cmps
imul
in
loopne
xor
fadd
out
les
add
stos
push
and
mov
cmp
add
into
sub
movs
mov
sub
cmp
pop
sub
ss
aaa
pop
out
in
sub
or
test
fadd
not
jmp
xor
xchg
cmp
rcr
shl
enter
add
ficom
mov
fimul
and
out
pusha
sub
enter
mov
mov
nop
xchg
int3
adc
int
ret
ret
adc
add
cmp
or
sub
(bad)
loope
test
mov
mov
and
push
ftst
xchg
cmps
pop
adc
hlt
adc
push
or
or
mov
add
es
mov
mov
xchg
adc
test
aas
and
add
cmp
inc
push
or
add
add
mov
mov
add
and
pushf
stos
imul
mov
dec
pop
dec
sbb
(bad)
rol
adc
arpl
sub
fistp
loope
sbb
xchg
clc
and
mov
xor
and
adc
xor
ret
pop
inc
(bad)
out
dec
jne
xchg
adc
dec
adc
xor
push
ss
pushf
or
movsx
js
add
mov
push
call
sub
cmp
cmp
pop
inc
xor
gs
pop
xchg
xor
loope
rcr
movs
in
push
(bad)
and
(bad)
xlat
mov
jl
std
popa
mov
jne
mov
push
xchg
xor
push
outs
adc
shl
ret
or
mov
or
mov
gs
adc
or
mov
movs
test
and
ror
xchg
mov
mov
fsub
enter
mov
in
sub
add
fnstcw
fcom
mov
mov
lds
cmps
or
push
popa
bound
mov
add
dec
and
inc
out
or
lock
xchg
or
xchg
daa
mov
xchg
or
pop
test
hlt
jbe
push
mov
dec
cmp
cmp
mov
fcomip
xor
inc
pop
std
and
iret
push
add
inc
imul
jo
sbb
sbb
das
std
cdq
xchg
test
or
mov
or
movs
sbb
imul
inc
jmp
popf
jo
test
bswap
test
jmp
sub
add
nop
or
mov
add
mov
fwait
jns
pop
push
push
or
xchg
cmps
push
push
movs
inc
ficomp
mov
sub
mov
out
js
push
ficom
sub
xchg
mov
movzx
cmp
pushf
not
sub
pushf
(bad)
call
or
fdiv
or
xor
test
push
add
sbb
pop
outs
in
test
aad
xor
(bad)
jg
push
fidiv
fs
mov
sbb
popf
xchg
xlat
or
mov
push
scas
js
push
add
xchg
jge
sbb
loopne
clc
ss
lds
inc
pop
or
jmp
xor
and
and
mov
adc
inc
outs
add
sub
dec
xchg
pop
rol
ins
sbb
mov
xchg
mov
inc
or
xchg
pop
cmp
outs
xor
pop
js
mov
ins
xchg
mov
es
push
add
xchg
int
pop
push
ss
mov
adc
push
adc
dec
cmps
loopne
call
stos
cmp
jbe
inc
inc
enter
call
aaa
cmps
in
or
pop
adc
test
clc
mov
lods
retf
add
and
loopne
dec
loopne
sbb
fadd
dec
fdiv
xchg
lods
mov
loope
sti
sub
mov
cmp
ins
clc
xchg
push
xchg
mov
cmc
je
xchg
cmp
inc
push
sbb
in
pop
pop
fcmovne
sbb
mov
(bad)
push
and
mov
(bad)
call
rol
sbb
push
or
dec
dec
sbb
push
adc
les
jns
les
in
inc
rol
mov
les
and
and
cs
sbb
mov
push
into
iret
es
cmps
outs
aaa
jmp
inc
push
jge
mov
adc
fsub
stc
and
and
cmp
movs
or
iret
add
push
pop
and
mov
out
aam
rcr
fdiv
mov
mov
adc
fwait
test
fisttp
sahf
inc
pop
dec
sub
out
jp
xor
js
sub
push
dec
cmp
xchg
in
pop
mov
push
sub
cmp
adc
dec
cmc
add
jbe
mov
ror
pop
sub
fsubr
xor
cmp
fwait
jecxz
aaa
add
rcr
mov
or
xchg
loope
push
cmp
fcomp
cmp
jecxz
mov
dec
add
adc
or
out
push
jmp
lds
and
mov
xor
inc
mov
push
mov
pop
lds
pop
movs
popf
sbb
mov
xchg
ja
loop
jmp
inc
sbb
pusha
movs
inc
int
push
hlt
push
jo
(bad)
sub
int3
add
or
mov
xor
fistp
ror
dec
dec
je
push
xchg
sbb
in
loop
xor
push
test
adc
push
cwde
bound
sbb
jmp
ins
daa
pop
or
movs
sbb
icebp
xchg
sub
loopne
in
jg
cmc
cmp
push
mov
leave
lds
hlt
mov
aaa
mov
ror
lea
movs
add
or
aaa
add
leave
add
inc
xlat
rcl
push
pop
rcr
int
bts
jmp
pop
movs
fdiv
cwde
cmp
sar
inc
push
jg
(bad)
ffree
push
xor
add
adc
mov
or
inc
enter
(bad)
xchg
lods
xchg
and
jge
xor
das
adc
jne
add
das
loope
test
jmp
xor
je
push
adc
cmp
dec
imul
fwait
xor
inc
mov
and
in
push
stos
cmp
mov
cmps
cmp
movs
or
and
cmp
or
sub
out
pop
ja
inc
pop
mov
push
and
jmp
or
inc
sub
inc
aam
add
or
add
cmp
and
cmp
inc
lock
and
and
xchg
ror
mov
inc
add
pop
push
sbb
sub
cmps
adc
mov
inc
xor
mov
ret
cld
jg
push
imul
out
adc
mov
pop
mov
and
jb
(bad)
fnstenv
ret
mov
push
mov
repz
pop
add
aam
cmp
imul
sbb
mov
stos
retf
dec
adc
imul
push
js
mov
sar
shl
fisub
not
dec
add
push
sub
dec
jmp
fld
pop
popf
fs
outs
sbb
and
add
xlat
dec
cmps
or
mov
mov
addr16
ins
jns
imul
ins
das
pop
push
adc
pop
jb
dec
jmp
mov
fadd
cs
add
cmp
push
jb
xor
les
jns
lods
push
das
mov
and
xor
ja
mov
in
hlt
mov
repnz
shr
gs
and
push
cmp
lock
xchg
mov
aam
out
jmp
add
mov
cdq
pop
xchg
cs
mov
jns
push
aaa
pushf
(bad)
xlat
push
(bad)
(bad)
push
rol
loop
js
sbb
or
popf
(bad)
es
inc
pop
dec
add
push
push
int3
loop
fnstcw
inc
push
call
cmp
jl
out
jo
f2xm1
sub
cmp
daa
mov
inc
xchg
(bad)
adc
(bad)
dec
inc
retf
daa
mov
jp
dec
cmps
or
mov
bound
inc
inc
call
call
in
fild
loope
pop
add
imul
shl
pop
cmps
sbb
(bad)
(bad)
inc
sbb
(bad)
leave
push
jp
jae
sbb
jb
fldenv
pusha
add
jecxz
(bad)
lds
ja
pushf
shl
add
sub
mov
aaa
pop
jg
xlat
dec
adc
xor
adc
push
cmp
or
push
sub
fwait
jno
rol
adc
or
adc
lea
jmp
inc
imul
dec
fiadd
mov
mov
inc
pop
cs
mov
xlat
ret
clc
pop
lock
mov
call
les
fwait
mov
mov
mov
xor
or
add
pusha
sub
sub
(bad)
ins
jge
mov
push
dec
out
dec
call
(bad)
das
paddw
or
mov
sub
aas
sbb
xor
stos
xchg
xchg
fs
(bad)
retf
push
sub
rcr
xchg
and
push
jb
fstp
mov
sahf
push
scas
mov
mov
cmp
pop
dec
pop
cs
dec
imul
pop
push
jmp
or
adc
mov
inc
bound
stos
and
mov
sbb
sti
and
mov
leave
shl
pop
es
push
pop
push
jns
hlt
in
mov
push
adc
lds
inc
cmp
sbb
xor
daa
pop
mov
fimul
mov
jmp
xor
cmp
dec
inc
fcomp
lods
pop
mov
mov
mov
shr
cmp
retf
les
add
sbb
mov
aaa
adc
push
(bad)
cmps
add
test
je
imul
sbb
jae
dec
inc
inc
dec
push
sbb
and
jbe
sbb
cmps
push
das
add
pop
(bad)
sbb
jg
(bad)
lahf
mov
cmp
pop
pop
mov
fmul
jnp
dec
add
push
sub
fisttp
test
leave
mov
sub
jno
(bad)
(bad)
(bad)
dec
or
cmp
xchg
sbb
call
add
add
dec
mov
loop
(bad)
pop
adc
jo
xlat
int
fidiv
int3
xor
scas
or
fisttp
inc
cmps
sbb
enter
mov
xor
popa
test
int3
(bad)
movs
or
adc
dec
sbb
xor
in
xor
daa
sbb
bswap
rcl
cmp
jae
fidivr
jns
scas
push
int
xchg
mov
repnz
xchg
scas
xor
(bad)
scas
mov
nop
shl
adc
mov
jmp
xor
ficomp
(bad)
xor
sysenter
inc
sbb
adc
(bad)
and
jecxz
stos
xor
and
mul
cdq
lods
sub
mov
push
aam
jp
lods
fcmovne
adc
aad
jmp
(bad)
into
jge
lock
dec
sbb
(bad)
je
push
(bad)
push
iret
gs
mov
mov
dec
jl
mov
rol
mov
js
pop
loopne
fimul
or
inc
inc
call
popa
add
cdq
sti
lock
in
or
arpl
scas
loope
test
and
xor
aam
jecxz
mov
int3
push
sbb
popf
fcom
(bad)
loopne
clc
pop
xor
sbb
or
xor
inc
jmp
sub
sub
fadd
cld
btc
xchg
pusha
mov
mov
inc
fstp
test
mov
and
aam
shr
push
or
cdq
inc
fcom
or
add
add
(bad)
ins
sub
mov
cmp
inc
mov
data16
shl
cmps
mov
xchg
xchg
and
jne
xchg
(bad)
dec
cmp
ins
cmp
dec
mov
adc
cmp
lea
ret
cwde
add
cmp
jl
xor
mov
push
cs
pop
push
int3
int3
and
pop
add
adc
nop
and
fstp
enter
inc
cmps
(bad)
xor
lock
xchg
jae
push
sbb
and
or
clc
ret
add
jns
xor
jns
jns
call
and
fdiv
adc
push
(bad)
add
cmp
cs
mov
fld
cmps
les
sbb
sub
or
inc
dec
fsubrp
outs
je
pop
sub
hlt
push
push
imul
and
leave
or
call
or
jns
mov
loopne
popa
aas
ins
mov
sub
or
in
(bad)
loopne
mov
retf
in
cmps
inc
ja
cmp
sti
mov
sbb
lahf
(bad)
push
pop
rol
in
mov
fisub
or
xchg
dec
mov
xchg
sbb
inc
jmp
dec
sub
ret
imul
add
popf
jg
or
pop
addr16
push
movs
inc
(bad)
add
nop
add
xor
adc
xor
popa
pop
daa
mov
or
or
mov
sbb
or
pop
in
sub
mov
jge
sar
sub
adc
test
xor
ins
adc
scas
fistp
cmp
jg
mov
sbb
pop
arpl
fs
and
push
lea
aaa
cdq
mov
adc
sbb
jle
add
pop
mov
mov
ret
xchg
and
das
movs
hlt
and
les
sbb
test
add
sbb
mov
adc
sub
clc
mov
dec
add
sbb
div
sbb
mov
xlat
inc
test
adc
jle
mov
mov
mov
cmp
clc
lock
imul
pop
test
mov
pop
push
or
xchg
and
jle
sub
mov
mov
xor
dec
jmp
addr16
inc
cs
js
or
dec
or
and
test
leave
inc
scas
fcomp
clc
aaa
sbb
xchg
popa
jecxz
stos
add
push
lock
outs
xlat
movs
mov
xchg
xchg
push
pop
test
jmp
(bad)
jae
lea
xor
push
mov
fdivr
mov
jne
and
and
mov
shl
arpl
push
push
xchg
iret
das
and
(bad)
int
rcr
jge
or
sbb
adc
ins
mov
out
cmp
pushf
and
(bad)
add
fninit
adc
fistp
sti
stos
test
mov
(bad)
nop
pop
pop
pop
add
sub
popa
xchg
rcr
test
sub
rol
imul
dec
imul
pusha
int
out
or
push
xchg
test
inc
loop
xor
and
and
inc
mov
cld
dec
mov
dec
or
and
je
cmp
pop
ficom
mov
mov
paddb
pop
inc
repz
enter
push
mov
loopne
sbb
and
sub
cwde
sub
cmp
add
shl
inc
(bad)
js
jmp
dec
mov
popa
cs
cmp
in
fcomp
pop
cmps
xchg
test
mov
fld
sbb
jl
pop
and
push
sbb
fcomp
inc
inc
or
pop
xor
cmp
inc
xor
mov
popa
data16
mov
in
mov
daa
inc
test
pop
cmp
js
loopne
aaa
inc
clc
inc
jg
es
lods
add
and
clc
jno
jns
fs
cmp
pop
sbb
sbb
and
ret
xchg
pop
imul
jae
cdq
xchg
push
pop
xor
lahf
sbb
adc
mov
add
dec
push
xchg
nop
stos
push
mov
or
shr
fsub
ret
adc
sbb
mov
(bad)
push
rcr
imul
shr
xor
xor
cmc
in
sbb
shl
or
call
mov
mov
loop
lahf
outs
int3
fld
ret
jne
adc
add
sbb
sbb
or
add
push
sbb
retf
call
into
je
mov
mov
push
sti
push
imul
popf
stc
cmp
mov
fwait
pusha
aaa
push
mov
sub
add
cmp
pop
pop
or
pop
or
fadd
outs
pop
push
fdivr
push
cmp
cmp
das
xor
or
sahf
pop
sbb
inc
dec
adc
inc
or
or
mov
cmp
nop
and
das
inc
xchg
adc
cmp
sub
jnp
add
xor
and
mov
aam
(bad)
stc
xchg
or
int
sbb
pushf
daa
sub
or
mov
je
sbb
addr16
and
sbb
push
test
mov
dec
inc
aaa
xchg
repz
xor
pop
push
in
and
imul
push
dec
pop
cmp
popa
ret
adc
push
sbb
or
sbb
mov
lds
outs
fbstp
call
add
stc
dec
adc
stos
push
or
outs
dec
sbb
push
dec
fs
lods
(bad)
in
cdq
add
imul
push
lea
call
add
and
mov
push
mov
adc
and
ja
push
dec
and
imul
fs
rcl
arpl
shl
(bad)
int3
scas
inc
push
mov
test
retf
leave
xor
or
loope
arpl
jb
and
sbb
call
inc
jne
inc
jp
xchg
sub
cmp
mov
jge
xchg
shl
dec
xchg
leave
xchg
rol
and
cmps
xchg
dec
clc
adc
in
or
in
xchg
sbb
mov
cmps
fcomp
aas
push
add
inc
xchg
adc
pop
sar
and
pop
hlt
and
jo
or
lea
lea
cmp
and
xchg
sbb
pusha
mov
push
test
retf
and
mov
push
pop
outs
jo
adc
paddusw
mov
bound
sub
pop
adc
xchg
mov
mov
loope
jecxz
mov
or
stos
test
adc
movs
mov
adc
lods
xor
pushf
sbb
xor
rsqrtps
and
cs
bound
sub
pop
jle
sub
push
jb
or
aad
jmp
sub
popa
and
imul
call
lds
test
xor
adc
xchg
out
bound
movs
mov
je
xchg
jl
cmp
in
clc
in
push
or
in
fnsave
in
es
and
das
push
aaa
cs
in
jl
or
retf
jl
icebp
sub
sub
shl
ror
stc
pop
sar
or
clc
rcl
pop
daa
les
mov
dec
les
and
mov
in
cmp
fadd
sbb
push
jmp
inc
add
fadd
inc
and
pop
jg
cmp
and
xor
int
xchg
adc
pop
and
xchg
xor
adc
popa
lds
add
add
xlat
sub
div
or
jb
shr
nop
xor
xchg
test
fcomp
imul
mov
mov
pushf
or
push
sar
leave
mov
sub
sub
es
in
pusha
inc
scas
xor
enter
dec
in
pop
mov
clc
(bad)
lods
add
pusha
addr16
sar
push
or
loopne
jne
fsubr
inc
xchg
ins
adc
shr
xchg
sub
cmp
cld
dec
push
adc
mov
jns
push
cdq
sbb
enter
inc
mov
inc
xchg
ja
sbb
mov
pop
sbb
xchg
nop
in
push
adc
lock
rcl
iret
xor
lea
adc
les
(bad)
lock
in
(bad)
into
(bad)
sahf
imul
inc
xchg
(bad)
and
cmp
and
jecxz
or
enter
movs
(bad)
and
jb
mov
inc
bound
xchg
or
popf
and
jnp
or
daa
aaa
popa
mov
aam
sbb
inc
push
test
push
xchg
push
jmp
or
sub
dec
pushf
sbb
ins
daa
mov
mov
mov
fs
sbb
sbb
sbb
bound
in
and
sub
mov
mov
mov
outs
sbb
cmp
(bad)
sbb
add
push
add
dec
or
nop
out
aaa
push
add
add
add
loope
xchg
jmp
icebp
ftst
or
add
int3
jmp
add
jmp
ins
or
pop
in
jmp
inc
pushf
sub
jge
dec
clc
jge
shl
inc
pusha
dec
pop
cmp
mov
inc
and
jmp
mov
rcl
cld
mov
(bad)
call
sub
add
mov
cmp
or
dec
adc
jbe
mov
jmp
pop
sub
sub
inc
(bad)
cdq
call
cmp
xchg
cmp
cmp
push
xchg
cmps
add
push
movs
inc
test
cld
iret
cmp
je
sbb
and
loop
sub
xchg
and
xor
iret
in
mov
in
(bad)
push
setge
loopne
jne
popa
aam
or
xor
cmp
fdiv
xchg
mov
call
int
xchg
mov
pop
inc
pusha
test
retf
adc
mov
vpslld
push
pop
xchg
mov
pop
test
adc
mov
adc
mov
sub
out
add
sbb
fs
add
adc
iretw
adc
jbe
mov
test
add
and
stos
dec
sbb
dec
leave
retf
inc
loop
mov
xchg
push
call
mov
pop
int
(bad)
(bad)
xor
mov
add
retf
js
xor
int3
cwde
add
add
std
pop
retf
inc
cmp
add
adc
(bad)
sub
cmp
mov
pop
jne
loope
xor
jle
jnp
push
bswap
sbb
movs
sbb
jecxz
jl
lods
loope
bound
sub
mov
sub
fmul
ds
or
jne
pop
fcom
or
mov
and
(bad)
out
je
test
leave
ret
dec
arpl
fimul
movaps
and
inc
int
inc
in
ret
add
jne
int
hlt
bound
mov
push
(bad)
je
mov
sbb
int
mov
or
in
sahf
push
loopne
or
and
lods
or
pop
hlt
daa
cmc
aam
rol
or
or
(bad)
daa
hlt
and
mov
sub
cdq
or
icebp
pop
dec
ret
and
test
add
jae
enter
aad
xchg
retf
or
jne
xchg
into
scas
aaa
rol
add
(bad)
fs
or
enter
les
jmp
inc
dec
bnd
into
or
cmp
aad
rcr
sub
mov
int3
mov
cmp
xchg
jo
cmc
out
jmp
mov
jg
mov
sbb
push
add
mov
iret
mov
adc
cmp
pop
sub
add
ja
sbb
or
rol
or
jmp
mov
sbb
inc
mov
inc
aaa
cs
iret
xor
retf
or
movs
(bad)
fbstp
dec
mov
or
sbb
js
push
jne
adc
and
adc
fld
repz
inc
and
xlat
jecxz
loope
add
movs
cmp
lods
sbb
pushf
sbb
in
sub
adc
lods
cmps
push
lods
dec
popf
dec
lods
xor
psrlq
dec
mov
lea
test
(bad)
fsubr
mov
lods
out
mov
mov
or
ret
pusha
stos
ror
jle
add
test
xor
mov
xchg
fimul
mov
sbb
pop
sbb
sbb
loop
daa
(bad)
fbstp
xor
or
inc
daa
call
(bad)
sbb
dec
mov
xor
push
pop
add
push
pop
mov
ja
add
pop
stos
movs
xor
or
dec
jmp
add
cmc
sbb
ret
pop
test
(bad)
mov
fs
test
jmp
xchg
and
int3
pop
add
add
scas
and
xchg
mov
adc
xchg
add
aam
out
pop
dec
dec
lock
clc
aad
std
mov
inc
mov
hlt
lods
and
enter
adc
vmwrite
movs
lods
jmp
enter
aam
(bad)
aam
scas
call
stos
adc
mov
inc
shr
or
repnz
sbb
cmc
push
adc
dec
in
add
ret
sar
adc
xchg
adc
add
and
inc
div
daa
in
(bad)
adc
adc
and
xchg
arpl
jmp
inc
in
adc
mov
mov
jne
je
xrstor
ja
jl
jp
and
mov
jo
clc
inc
movs
jge
pop
sbb
mov
fild
inc
test
inc
and
cdq
aaa
and
cld
push
push
add
add
mov
xor
pop
(bad)
inc
xor
in
mov
inc
js
dec
popa
xchg
sub
cmp
pop
sub
add
and
push
fistp
movs
adc
push
mov
ss
inc
add
movs
mov
arpl
mov
dec
push
lahf
int3
xchg
push
adc
loope
ret
and
test
cli
(bad)
loop
and
cmp
jne
mov
mov
les
xor
and
(bad)
adc
push
add
or
data16
not
ret
hlt
sub
sbb
or
jg
or
cwde
mov
sbb
(bad)
xchg
mov
inc
dec
or
int3
jne
aaa
nop
adc
inc
push
dec
adc
je
jo
sahf
lods
fistp
loope
push
mov
inc
lock
jne
daa
orps
(bad)
jmp
popa
push
fldl2e
sbb
sbb
mov
dec
and
inc
loopne
shl
dec
les
ret
push
cdq
sub
xchg
(bad)
das
push
dec
cwde
push
lods
cmp
xlat
leave
aas
xor
js
jne
or
xor
push
or
ds
mov
push
dec
cmp
pop
(bad)
mov
ins
fs
ins
pop
ret
test
mov
xlat
clc
adc
dec
xor
mov
data16
and
jmp
mov
sub
push
inc
lock
cmp
popf
movs
pop
les
cs
imul
mov
sbb
dec
pop
aam
sbb
loope
jb
out
mov
jmp
add
xchg
and
sbb
mov
mov
mov
sub
inc
pop
fidivr
call
test
ss
out
add
adc
or
inc
and
adc
adc
rol
or
cmps
adc
xchg
cmps
ins
cmp
aas
or
pop
sub
add
cmps
adc
mov
jg
cmp
push
lahf
push
pop
out
mov
xor
add
je
or
jmp
loope
push
push
pop
pop
xor
imul
std
sbb
and
ins
or
xor
shr
pop
fisub
stos
in
push
sub
cs
xor
mov
pop
dec
sub
xchg
adc
add
inc
mov
pop
push
dec
popf
mov
aam
psubb
js
inc
or
lahf
mov
jmp
mov
ds
mov
ds
push
inc
out
in
sbb
add
inc
dec
(bad)
pop
inc
and
js
mov
mov
cmp
mov
lea
iret
pop
push
xchg
cmps
inc
int
outs
je
inc
repz
out
dec
push
lods
cmp
nop
adc
or
pop
test
loope
je
push
daa
sbb
in
inc
mov
je
and
xor
cwde
enter
inc
adc
ins
and
and
into
lahf
add
nop
cmp
dec
jecxz
adc
(bad)
fistp
ficomp
cmp
jne
cwde
adc
fsub
dec
shr
loopne
mov
int
and
xor
scas
or
sub
clc
adc
adc
add
inc
arpl
mov
xor
adc
jge
xchg
test
xchg
push
inc
jmp
les
imul
pop
or
fisubr
ss
iret
pop
adc
test
(bad)
sbb
rol
sti
add
add
shl
pop
add
push
or
sbb
or
cmp
jo
add
pusha
loopne
rcr
pop
add
inc
into
sti
push
(bad)
mov
jle
push
xor
add
lock
add
fiadd
fcmovnb
cmp
adc
(bad)
pop
pop
add
sub
mov
mov
icebp
or
into
jnp
pop
xor
(bad)
retf
xor
popf
add
cmp
out
and
add
clc
test
bnd
fcomi
lds
cmp
nop
jb
pop
mov
add
dec
pushf
stos
push
hlt
jle
daa
movs
mov
mov
xor
dec
or
fwait
lea
sbb
cmp
scas
icebp
aas
rol
mov
push
in
push
je
push
jns
fcomp
cwde
mov
push
mov
push
or
jecxz
pop
loopne
jbe
sub
adc
and
mov
cld
mov
add
fdiv
(bad)
sub
mov
adc
(bad)
push
(bad)
push
outs
popf
sbb
std
ja
inc
or
das
sbb
cwde
xor
mov
add
retf
sbb
in
adc
sub
mov
and
adc
ret
ret
xchg
dec
pusha
lea
icebp
push
retf
je
or
mov
sbb
push
push
mov
hlt
xchg
daa
(bad)
jge
test
xchg
inc
cmp
sbb
das
lea
xor
iret
or
mov
repz
and
pop
pop
pop
mov
adc
and
and
pop
scas
clc
xchg
mov
test
cmps
mov
dec
xor
jne
lea
pop
mov
rcr
mov
pop
cmp
rol
xor
inc
add
adc
add
mov
cmc
push
mov
das
mov
sub
mov
push
jp
mul
cmps
or
bound
fdivr
lock
jmp
mov
dec
or
mov
(bad)
repnz
cld
cmp
inc
pop
or
add
cmp
inc
add
pop
add
jmp
mov
jne
fisttp
popf
pop
out
pop
mov
pop
mov
or
out
test
and
lock
mov
push
push
(bad)
sub
dec
cmp
outs
ja
or
dec
xor
xor
dec
clc
xchg
add
fmul
call
loopne
ss
imul
sub
push
ins
ins
(bad)
mov
pop
or
rol
fwait
popa
int
push
or
add
jne
inc
test
mov
and
cld
push
jo
cmp
addr16
aad
adc
sti
xor
daa
sbb
inc
dec
xchg
mov
retf
pavgb
data16
push
push
loop
jbe
pop
push
inc
push
add
adc
cdq
clc
adc
mov
test
push
inc
mov
(bad)
es
inc
mov
shr
and
jge
sbb
jae
stc
cwde
add
cmp
cmp
adc
loop
mov
call
popa
xor
mov
loop
nop
test
mov
lea
(bad)
jo
push
sbb
jae
jne
fs
inc
jbe
js
nop
inc
push
jns
jnp
inc
push
sbb
inc
push
sbb
popa
push
sbb
arpl
fs
inc
addr16
inc
push
imul
ins
ins
outs
inc
push
sbb
push
push
sbb
push
push
push
sbb
push
push
pop
fs
inc
push
pop
pop
pop
nop
inc
push
sbb
add
fs
inc
inc
leave
leave
leave
lea
inc
inc
inc
leave
leave
leave
leave
inc
inc
inc
dec
leave
leave
leave
leave
dec
dec
dec
dec
leave
leave
leave
leave
dec
dec
dec
xor
leave
leave
leave
xor
xor
leave
leave
leave
xor
leave
leave
leave
cmp
cmp
leave
leave
leave
cmp
leave
leave
leave
and
and
xlat
sub
ins
fadd
cmp
(bad)
in
xchg
cmp
ret
mov
add
jle
je
inc
outs
gs
mov
mov
add
push
add
mov
pop
inc
jb
xchg
arpl
pop
shr
aas
mov
sbb
lea
ror
test
inc
sbb
shl
mov
mov
xor
data16
gs
and
xlat
adc
or
jbe
cmp
pop
data16
jae
lods
xchg
or
mov
adc
scas
sub
je
fcom
jecxz
fist
jns
sub
sub
outs
xor
data16
leave
mov
dec
je
mov
or
cmp
dec
rcl
imul
dec
jnp
cmc
inc
sub
ins
or
jae
nop
das
inc
(bad)
pusha
lods
std
fist
outs
int
cmp
outs
call
fiadd
jo
outs
sbb
cmove
push
or
sub
fistp
adc
push
inc
jge
div
mov
gs
jb
out
add
lock
cmp
bswap
movs
ins
inc
ins
(bad)
mov
outs
push
push
push
je
iret
ins
dec
xchg
pop
fcompp
outs
jo
je
pop
inc
jns
sbb
mov
xchg
jno
gs
imul
nop
and
add
int3
(bad)
xor
pop
(bad)
retf
xchg
aas
mov
mov
jbe
loopne
outs
or
adc
mov
or
inc
jb
fistp
pop
pusha
or
xor
add
dec
jge
jp
cs
fidivr
(bad)
or
outs
enter
addr16
pop
inc
outs
jb
xchg
in
outs
jae
es
outs
sub
push
jbe
mov
cmp
mov
sbb
pop
mov
dec
and
das
mov
mov
aad
mov
push
popa
movs
and
out
jl
push
jbe
inc
imul
mov
cmps
inc
xor
push
pop
xchg
ins
jbe
adc
or
xchg
mov
adc
fsub
inc
sbb
inc
shl
and
retf
mov
xor
rcr
loopne
dec
aam
adc
xor
sub
mov
mov
ret
mov
or
call
mov
mov
add
cmp
daa
push
aas
imul
sub
fs
add
fld
and
cmp
mov
repz
pop
push
add
or
dec
push
pop
dec
and
push
outs
jbe
push
enter
nop
pop
pop
pusha
push
hlt
sub
add
mov
fld
sbb
les
cmp
sub
add
push
rol
div
outs
cmp
xor
cmp
adc
mov
dec
ds
push
add
push
add
cdq
sar
adc
or
test
call
xchg
add
in
ret
sahf
pop
sbb
add
dec
push
sbb
add
dec
ret
or
movs
inc
cs
loop
push
lds
add
jbe
pusha
pop
or
add
daa
pop
inc
das
inc
test
mov
mov
shl
mov
mov
sbb
push
shl
loop
movs
mov
gs
xor
mov
or
add
push
push
mov
int3
push
or
lods
sub
shl
push
cmp
shl
jno
into
cmps
add
or
lock
addr16
or
push
or
(bad)
into
push
jo
or
pop
sti
into
sbb
arpl
shl
mov
push
scas
add
push
btc
push
adc
mov
dec
ret
push
ins
push
xchg
add
addr16
xor
jnp
fcom
mov
xor
xchg
ret
sbb
add
mov
(bad)
xor
loopne
fcom
jns
jmp
fadd
int
jp
aam
sbb
mov
mov
mov
and
cmp
int
(bad)
in
sbb
and
mov
pop
pushf
movs
inc
jle
push
inc
sar
nop
daa
fs
inc
hlt
dec
inc
mov
ins
jae
dec
clts
cld
dec
mov
ret
call
mov
outs
add
mov
mov
adc
jle
sbb
mov
and
enter
bswap
mov
loope
adc
push
std
lock
fst
movs
or
(bad)
push
sub
add
push
push
test
add
mov
push
sub
movs
rol
xchg
dec
cmp
aam
ds
inc
gs
test
adc
cmps
cwde
push
scas
push
addr16
fidiv
sub
cs
pop
and
mov
cmp
add
mov
aaa
aas
or
push
mov
push
mov
ror
sbb
cwde
mov
cmp
pop
sbb
int3
push
push
fisttp
iret
data16
addr16
pop
ret
nop
clc
mov
mov
mov
(bad)
neg
mov
out
xchg
dec
repnz
pushf
push
jle
pop
pop
xor
pop
aam
cwde
add
pop
pop
ins
fimul
jg
bound
pop
mov
lods
jns
push
jg
pop
shl
dec
inc
or
sar
dec
cmp
and
mov
fdivr
lods
jo
xchg
push
adc
add
mov
jns
push
mov
test
cmp
inc
cmp
sub
push
daa
cmp
mov
jle
cmovg
fs
jg
pop
test
(bad)
push
repnz
and
xchg
lock
(bad)
aam
sbb
xchg
pop
popa
xor
popw
sbb
mov
pop
xor
movs
in
mov
or
outs
outs
pop
jl
mov
loopne
pop
das
jns
add
jo
rcl
xchg
pop
cmp
jbe
push
fcom
xchg
xchg
pop
in
push
ja
or
in
xchg
nop
xchg
pop
dec
shl
or
xchg
jbe
daa
dec
pop
sbb
inc
cmp
inc
in
fs
sbb
mov
(bad)
notrack
sbb
add
dec
adc
ins
sbb
dec
popa
outs
nop
xchg
dec
rol
xor
inc
dec
jne
aas
bound
mov
gs
and
adc
mov
rol
adc
cmps
iret
dec
jb
or
push
imul
sbb
or
in
adc
in
fcmovu
sbb
cmp
or
adc
popa
test
jne
(bad)
retf
sub
fst
shl
test
inc
cmp
xor
fsub
xchg
dec
sub
aas
and
or
fldcw
push
dec
sbb
inc
ret
ret
pop
pop
mov
mov
adc
pop
test
mov
mov
in
push
add
retf
xchg
inc
push
xor
lahf
jae
inc
push
jnp
dec
cmp
dec
(bad)
lock
pop
pop
rcl
mov
dec
loopne
dec
add
ret
jecxz
xchg
sub
jne
mov
sub
mov
test
or
or
inc
jle
sub
add
fnstsw
fidiv
or
dec
pop
or
ret
(bad)
xchg
pushf
and
and
xchg
or
ins
xor
jmp
sbb
push
jle
dec
scas
popf
rcl
shl
sub
and
jmp
fistp
pop
or
dec
sub
fcmovbe
xchg
cmp
jge
pop
fidiv
adc
fucom
mov
lods
lahf
popa
xor
xor
nop
mov
sbb
push
test
inc
or
aas
or
mov
adc
pusha
cmc
jle
mov
jg
mov
jl
test
ins
or
adc
nop
mov
jnp
push
cmps
adc
jg
and
and
in
or
sbb
nop
pop
shr
jne
inc
push
arpl
or
or
outs
mov
inc
inc
sbb
rcr
ins
jmp
jg
dec
popa
jbe
add
imul
adc
xchg
cmp
xor
and
ficom
push
imul
mov
fild
mov
sub
or
inc
or
jne
jecxz
popa
inc
inc
jno
popa
sbb
sbb
mov
mov
loope
jmp
fild
push
imul
sbb
pop
in
ins
inc
dec
and
cdq
sub
push
xor
aad
or
and
(bad)
sti
pusha
dec
push
pop
jo
push
pop
imul
das
inc
push
pop
adc
inc
inc
mov
inc
push
xchg
dec
lods
(bad)
enter
mov
or
sub
and
je
or
jbe
xlat
fwait
daa
pop
call
imul
sbb
dec
outs
popa
inc
pusha
dec
jb
pop
or
test
jbe
adc
mov
adc
out
adc
aaa
fisttp
aas
outs
mov
inc
push
es
outs
mov
jmp
out
outs
jne
push
lar
rol
scas
mov
adc
jb
xor
push
lds
dec
adc
aaa
mov
es
xchg
or
push
nop
push
adc
(bad)
(bad)
jae
inc
shr
ret
push
mov
jl
or
pop
push
enter
xchg
fisttp
adc
ficomp
out
inc
dec
jmp
into
call
pop
inc
dec
inc
push
push
inc
push
xchg
inc
inc
inc
inc
push
dec
fidivr
mov
push
pop
dec
inc
dec
dec
arpl
pop
ret
pop
dec
inc
inc
push
adc
outs
sar
dec
inc
push
dec
dec
push
mov
push
xchg
pop
jnp
popa
inc
dec
dec
and
out
addr16
inc
inc
xor
xor
adc
push
sub
mov
xor
jle
push
inc
inc
dec
not
dec
sub
mov
lea
(bad)
js
imul
sbb
inc
inc
jo
lea
das
mov
sbb
dec
ins
mov
dec
pop
sbb
inc
push
push
push
dec
push
inc
scas
loopne
dec
mov
adc
bound
pop
divps
sbb
mov
mov
test
pushf
mov
push
push
js
cdq
jl
add
jmp
jl
or
sbb
add
int
repz
adc
icebp
outs
or
test
ret
cmp
sbb
and
mov
ins
sbb
inc
or
dec
sbb
jo
aam
cmovge
pop
jbe
or
xor
dec
jmp
out
jmp
add
cmp
pop
shl
lea
xor
cmp
mov
add
mov
push
adc
call
stos
mov
sbb
xchg
dec
dec
xchg
mov
lahf
sub
mov
inc
pop
and
fisub
inc
ret
das
mov
dec
sbb
js
div
sbb
adc
jne
mov
in
push
inc
loopne
hlt
call
add
xchg
cmp
mov
xor
scas
cmp
cmp
inc
jo
cli
das
sbb
mov
add
xchg
push
jne
and
adc
cwde
jmp
and
fcom
push
sbb
daa
outs
cmp
xor
repnz
cmp
mov
pushf
in
es
adc
repnz
inc
scas
test
out
lods
dec
mov
int
dec
out
mov
push
rol
inc
cmp
adc
add
hlt
inc
xor
shr
adc
mov
inc
aam
add
and
aad
cwde
sbb
sbb
xlat
lea
inc
rcl
mov
mov
std
cmps
mov
or
mov
nop
mov
jge
push
jmp
jno
xor
cmp
out
mov
pop
fcomp
add
sbb
ja
push
push
push
or
or
fisttp
or
or
mov
push
and
movs
shr
and
into
mov
dec
cld
lods
in
sub
mov
mov
sub
push
cdq
js
jbe
(bad)
aam
sub
int3
adc
xor
cmp
sbb
mov
sar
in
sbb
pop
fst
popa
adc
test
inc
lea
mov
loope
and
jmp
sub
(bad)
push
stos
adc
popf
ret
in
and
hlt
push
push
mov
fsubr
add
xor
push
das
movs
movd
sbb
jp
mov
call
jnp
and
push
out
cmp
mov
dec
jecxz
xor
test
bound
or
(bad)
pop
pusha
and
xchg
pop
cmp
push
mov
and
sbb
add
in
aaa
adc
push
or
in
sub
and
inc
enter
sub
sub
add
movs
add
test
sub
sub
enter
sbb
dec
inc
or
add
or
out
push
jne
(bad)
or
inc
mov
dec
mov
sbb
mov
inc
test
sub
mov
push
ret
or
in
scas
mov
sbb
stc
cmps
retf
pop
dec
scas
inc
or
push
cmp
sbb
das
sbb
jo
add
mov
or
xchg
pop
sbb
pop
or
xor
xchg
mov
or
push
pcmpeqb
je
and
nop
sub
sub
add
sub
jno
sub
enter
sub
outs
sub
xchg
jle
inc
pop
adc
sub
mov
sub
mov
mov
mov
push
sub
dec
sbb
outs
js
cmp
iret
sbb
xor
rol
add
xor
movs
out
and
push
pop
fs
push
jecxz
cs
push
test
mov
or
push
(bad)
jbe
(bad)
dec
div
loopne
add
cmps
push
sbb
add
inc
pop
add
inc
icebp
jnp
jmp
adc
je
mov
add
adc
jb
fisttp
add
add
hlt
imul
xor
test
cmps
lds
das
dec
cmps
sbb
push
aaa
adc
add
mov
inc
add
cmp
nop
pop
enter
dec
inc
cmp
jae
jmp
adc
cld
mov
jle
push
mov
daa
add
test
or
jns
inc
sbb
xchg
bndstx
int3
and
lock
push
mov
(bad)
mov
sub
sub
xor
inc
dec
jecxz
imul
nop
pop
movups
xchg
or
js
pop
cwde
nop
aaa
jge
and
nop
fcom
loope
sbb
inc
imul
adc
and
lds
mov
push
mov
sub
xor
or
pop
or
or
mov
push
push
or
push
sub
push
pop
mov
popa
add
sbb
bound
pop
add
and
ja
and
data16
mov
int3
pop
mov
mov
les
adc
test
in
imul
and
adc
push
sbb
sub
iret
es
(bad)
push
lahf
add
hlt
adc
xchg
xchg
adc
add
iret
pop
mov
cmp
xor
addr16
or
mov
jg
dec
cmps
cmp
ja
in
cmp
xchg
or
add
jge
push
into
pop
shl
or
outs
or
arpl
jnp
inc
push
sbb
lea
fs
ja
(bad)
mov
xor
mov
and
pop
cmp
or
sbb
outs
je
and
jne
mov
push
sbb
sub
mov
fiadd
jg
jb
leave
or
and
mov
xor
pop
xor
int
adc
adc
test
pop
push
mov
or
ja
mov
inc
sub
ja
inc
and
fst
push
adc
cmp
push
mov
fist
(bad)
dec
fs
pop
outs
enter
sub
inc
sub
test
ja
shr
xor
(bad)
aam
sub
in
mov
loope
and
dec
and
das
pop
ret
(bad)
xchg
xchg
fsubr
lahf
sbb
adc
xchg
push
fwait
xchg
imul
sbb
fstp
add
rcl
fadd
jp
sbb
movs
inc
dec
jo
iret
dec
inc
xor
inc
inc
les
add
inc
sbb
pop
mov
jae
dec
mov
and
mov
test
push
or
shl
cmp
add
mov
repnz
sbb
jne
xchg
int3
dec
jo
mov
inc
and
lea
aas
test
sub
push
and
js
jmp
mov
sbb
js
cmp
dec
or
fld
add
pop
push
push
adc
lock
not
and
and
mov
ret
or
jp
xchg
cmp
imul
dec
aam
enter
add
mov
add
or
or
mov
nop
or
xor
test
sbb
jle
dec
stos
jmp
or
adc
inc
test
repz
imul
ror
pop
int3
jno
adc
jnp
sbb
or
push
cmp
and
(bad)
in
or
movs
pushf
inc
pop
xor
mov
mov
je
xor
sub
ds
cmp
mov
fisub
cwde
aas
in
inc
mov
das
mov
mov
pop
pop
dec
push
in
mov
daa
mov
mov
inc
mov
mov
cld
jl
or
data16
push
pop
xchg
mov
lds
inc
repnz
xor
inc
push
ficomp
xor
sub
adc
adc
lea
pop
jnp
and
mov
mov
aaa
inc
sub
aas
cmc
aam
enter
xchg
repz
aas
jge
pop
xor
mov
call
in
call
push
inc
cmp
add
add
cmp
mov
pop
and
je
bound
movs
and
(bad)
shl
imul
cmp
mov
bound
jno
and
push
push
sbb
call
jecxz
int
in
push
inc
int
shr
mov
or
inc
pop
xchg
xchg
les
adc
inc
arpl
cmp
push
mov
adc
shl
retf
push
cmp
mov
pop
and
sub
loopne
dec
div
cli
cdq
push
and
pop
pop
sar
ret
movs
cmp
cmc
or
mov
pop
mov
and
cmp
retf
xchg
pop
sub
test
sub
pop
and
mov
and
inc
push
or
js
cmp
pop
dec
lock
test
clc
mov
test
(bad)
jo
xor
ins
sbb
call
and
repnz
push
and
lea
addr16
adc
pop
pop
inc
adc
cmps
fdivr
lock
inc
lock
cmp
mov
mov
mov
neg
and
fcomp
push
sub
dec
jmp
jns
jecxz
fisubr
pop
dec
dec
out
mov
sbb
lock
fmul
sub
inc
inc
das
inc
call
push
js
pop
loopne
mov
mov
movs
mov
mov
sub
xchg
jo
adc
xchg
les
pop
call
xor
jecxz
mov
mov
mov
sub
jge
or
and
mov
push
add
mov
mov
or
add
cli
retf
add
faddp
inc
add
gs
cmp
aas
push
js
cmovno
ins
mov
in
(bad)
fwait
mov
mov
pop
pop
pop
es
push
push
add
jne
cmp
cmp
jge
adc
adc
adc
sbb
pop
inc
mov
inc
add
mov
and
inc
pop
stos
sbb
(bad)
in
jle
stos
add
lods
jbe
dec
js
clc
pop
pop
shl
and
enter
sbb
mov
dec
jns
jmp
(bad)
jnp
xor
jecxz
mov
mov
add
fstp
dec
clc
mov
or
cld
push
mov
or
rol
jns
push
jno
loopne
push
mov
jl
out
jp
or
mov
mov
add
aas
push
mov
cwde
lods
retf
fldenv
xchg
mov
(bad)
repnz
push
loopne
pop
sub
push
cmp
(bad)
jmp
addr16
cmp
sub
addr16
cmp
add
sar
(bad)
icebp
pop
fwait
or
idiv
pop
outs
cmp
movs
xor
cwde
sbb
add
sub
pop
les
icebp
xor
mov
cs
stos
add
and
or
add
inc
clc
inc
ins
push
fimul
pop
mov
fadd
loop
push
dec
pop
cmps
pop
and
push
dec
pop
popa
and
clc
add
aaa
fcomp
mov
aas
shl
imul
mov
sub
pop
test
retf
sub
add
jmp
adc
das
jbe
ror
push
xchg
mov
adc
fsubr
and
gs
adc
jg
mov
inc
iret
pop
ret
leave
je
push
push
in
sub
add
and
nop
add
outs
test
pushf
fwait
mov
jnp
pop
cmps
push
in
adc
or
push
push
mov
adc
sbb
add
enter
inc
iret
cmp
nop
adc
inc
sub
outs
push
cs
or
lods
stos
and
rol
mov
pop
stos
add
adc
adc
add
(bad)
mov
daa
pop
movs
pushf
hlt
cld
test
push
cmp
sbb
fwait
mov
mov
daa
pusha
outs
sbb
loopne
add
push
ror
jno
add
mov
call
push
and
add
leave
add
push
mov
pop
in
inc
mov
add
or
inc
ror
mov
xlat
lock
sbb
cmp
ficom
push
push
xlat
push
mov
enter
lock
add
or
pop
cs
fcom
sbb
loop
cmp
mov
cdq
xor
sub
mov
pop
jns
(bad)
cmp
jg
test
jle
cmp
jl
mov
aaa
enter
jg
push
add
into
cmp
jle
jb
jmp
movs
into
nop
mov
add
or
add
fs
sbb
sub
dec
jbe
jae
ins
adc
in
ds
mov
push
pop
rol
fiadd
or
pop
pop
push
retf
xchg
push
xor
pop
fcomp
gs
sbb
movs
popa
movs
cmps
pop
xchg
sbb
scas
iret
jmp
or
in
inc
mov
or
lods
inc
repnz
sub
cmp
jb
aas
inc
jmp
out
push
xchg
pop
popa
xor
xchg
sbb
or
mov
aas
inc
ret
imul
sub
loopne
movs
fucom
mov
cmp
dec
jge
lock
jno
call
push
fistp
mov
adc
lock
xchg
adc
xchg
xor
cli
pop
xchg
inc
ret
(bad)
push
inc
ss
mov
gs
stc
adc
shr
lea
add
test
or
and
dec
cmp
xchg
int3
xor
jns
out
nop
enter
rcl
xchg
ja
xchg
pop
cwde
adc
(bad)
loope
mov
ins
mov
push
mov
loope
jne
les
ret
push
call
xor
xor
cmp
rol
repz
push
mov
aas
mov
aas
add
mov
sub
fidivr
stos
or
lods
data16
loope
call
aaa
repnz
cmp
push
into
mov
pop
pop
or
adc
push
xchg
add
add
pusha
shr
push
push
push
xor
not
jl
mov
fild
jbe
push
push
test
inc
pop
push
test
dec
sbb
aas
sbb
sbb
pop
or
pop
sbb
jb
jecxz
je
pushf
pop
mov
and
sub
add
ret
xchg
int
add
cwde
(bad)
mov
je
dec
or
jg
lock
jmp
mov
xor
out
mov
test
adc
push
fld
aam
data16
imul
sub
or
inc
and
inc
aad
ins
sbb
mov
push
push
sub
inc
scas
and
test
cmp
ja
mov
mov
push
sbb
rcl
dec
in
cwde
sub
and
adc
pop
add
adc
pop
sub
movs
icebp
pop
cmc
pop
sbb
stos
mov
pop
cmps
push
fdivr
add
jl
hlt
dec
ror
cmp
fisttp
inc
hlt
(bad)
mov
fmul
das
int
daa
sbb
clc
pop
dec
jno
sub
(bad)
push
inc
inc
inc
call
inc
cmp
nop
dec
clc
stos
retf
xor
hlt
dec
xor
test
inc
adc
lods
cmps
lods
bound
pop
das
mov
cmps
(bad)
dec
call
adc
sti
lods
mov
mov
scas
dec
add
mov
or
push
pop
in
hlt
int3
add
and
or
loopne
and
pop
add
shr
fist
hlt
loopne
aaa
cmps
add
mov
dec
dec
mov
and
popf
loopne
call
js
call
and
push
push
xlat
cmps
retf
mov
fsubr
fidiv
add
out
jg
(bad)
mov
mov
or
lods
data16
cwde
jge
add
scas
lods
cmps
or
out
mov
mov
or
xchg
and
(bad)
pop
fcom
mov
mov
(bad)
dec
hlt
test
es
in
in
retf
aad
push
(bad)
retf
mov
and
fcom
xlat
and
daa
in
xchg
or
xor
inc
mov
dec
mov
jl
inc
and
scas
adc
test
mov
adc
in
outs
call
cmp
rcr
pop
mov
js
cs
nop
addr16
fmul
aam
push
adc
sbb
or
dec
push
xor
aam
sar
add
(bad)
(bad)
or
popa
adc
inc
in
and
push
adc
and
cmp
push
push
je
sub
cmp
scas
imul
add
jmp
clc
daa
pusha
push
adc
inc
inc
call
sbb
xchg
pusha
inc
aam
lods
adc
mov
push
dec
mov
ret
mov
daa
mov
dec
dec
inc
icebp
push
push
cmp
add
mov
ffree
pop
fld
sbb
xchg
sbb
mov
stc
(bad)
out
cmps
inc
add
pop
xlat
and
fimul
cmp
(bad)
or
sub
mov
gs
or
cdq
clc
clc
sbb
inc
outs
jb
rcl
cmp
add
jne
shr
ds
xchg
and
add
repnz
inc
adc
sub
adc
or
or
(bad)
pop
sar
inc
sbb
cmp
das
clc
mov
mov
xor
hlt
mov
repnz
lock
mov
daa
nop
xchg
arpl
sub
add
movs
or
add
ins
popw
gs
nop
sahf
in
arpl
ins
jo
jle
mov
sbb
push
add
aad
add
inc
or
xchg
inc
arpl
jne
and
dec
add
mov
mov
mov
push
popf
mov
xor
push
xor
mov
and
mov
cdq
xor
rcr
cs
loop
mov
mov
pop
adc
sub
(bad)
xor
dec
jb
cwde
movs
cmp
ficom
leave
clc
rol
retf
or
pop
dec
rcl
add
ror
inc
xchg
sbb
ins
lahf
out
popa
mov
mov
sbb
xchg
mov
repz
(bad)
(bad)
je
int3
mov
aam
sub
inc
pop
xchg
fiadd
jo
dec
adc
xor
outs
xchg
test
xlat
pop
sub
cwde
or
inc
aas
push
mov
inc
cwde
and
rcl
add
push
push
inc
nop
inc
pop
icebp
inc
push
adc
adc
push
inc
sub
or
sbb
test
inc
lahf
(bad)
push
adc
inc
xchg
sub
int
and
test
adc
cli
cmp
jne
gs
test
xor
fild
or
and
jbe
adc
cld
mov
rcl
mov
daa
idiv
aad
(bad)
xor
add
pushf
mov
in
mov
sar
nop
push
inc
in
mov
out
or
push
inc
test
arpl
or
pop
or
js
add
popa
(bad)
ftst
cmp
pop
mov
xor
outs
add
pop
mov
jne
mov
add
nop
or
xchg
jmp
mov
xchg
js
cmp
and
or
jns
pop
and
sub
cmp
sub
push
inc
push
add
sahf
das
adc
sbb
adc
cmp
int
jle
or
adc
sub
pop
mov
ret
int3
das
sbb
sbb
push
mov
scas
pop
adc
add
inc
push
aaa
mov
xlat
(bad)
mov
shl
lods
cmp
add
inc
and
push
pop
push
jo
jge
inc
mov
pop
sub
sub
clc
popa
aas
mov
add
fadd
jle
mov
push
rol
scas
and
lds
jecxz
sub
jg
pop
pop
xchg
cdq
repnz
sbb
and
ret
fimul
add
cld
push
mov
sbb
or
jmp
jmp
sbb
sbb
pushf
aaa
or
push
xlat
sub
inc
movs
mov
loope
or
push
mov
enter
pop
movs
cmps
test
xchg
stos
sub
stos
test
jnp
nop
sbb
inc
sar
sbb
dec
scas
lea
sbb
or
(bad)
and
bound
inc
mov
ret
mov
push
mov
jmp
mov
jge
xor
sbb
mov
mov
pop
les
jae
mov
and
dec
dec
movs
inc
dec
test
xchg
sub
rcl
xor
or
xor
test
cmp
sahf
rcr
sbb
ss
test
sbb
inc
adc
lea
mov
or
ds
or
xor
add
mov
add
inc
loopne
add
pop
(bad)
in
call
dec
inc
neg
inc
or
mov
cmp
pop
xchg
adc
adc
jno
and
dec
aam
or
in
xor
push
pop
adc
and
dec
jp
and
and
fistp
or
mov
cmps
push
jne
dec
inc
ins
xchg
das
call
xchg
jl
pop
jmp
add
add
fs
out
sti
pop
call
sub
pop
and
and
cwde
mov
or
inc
sub
js
adc
or
dec
aas
add
push
inc
sub
pop
sbb
adc
dec
adc
loopne
lea
mov
mov
mov
jmp
in
mov
outs
pop
(bad)
daa
add
movs
cdq
hlt
pop
je
and
or
test
inc
and
dec
sub
jno
add
add
jb
cmp
cs
pop
push
push
jbe
inc
call
xor
mov
(bad)
frstor
xor
mov
adc
mov
pop
fcmovb
into
cld
arpl
adc
and
or
(bad)
mov
adc
pop
enter
and
pop
mov
sub
sbb
jg
aam
adc
and
xor
fidivr
fs
imul
adc
clc
add
adc
jmp
push
ror
xchg
sub
mov
xlat
fdivr
imul
arpl
icebp
add
loope
push
mov
and
dec
push
or
pop
jo
test
test
mov
pushf
addr16
ss
loope
shl
xchg
pusha
jo
push
mov
mov
outs
cmps
fistp
xor
push
dec
or
pusha
and
or
test
jg
push
enter
ins
jmp
fist
sbb
rcl
pop
sub
cmp
test
cmp
xor
rcl
cdq
fimul
les
pop
stc
cmp
and
ss
and
addr16
clc
push
add
fs
daa
imul
add
bt
and
jne
inc
xlat
cwde
loopne
xor
push
cwde
or
dec
sub
cmp
je
adc
xchg
add
push
cmp
mov
or
pop
lea
add
dec
enter
adc
fisub
enter
dec
xchg
mov
loope
fdivr
sbb
cmp
sub
out
adc
adc
call
pop
add
dec
or
add
and
cmp
(bad)
ret
scas
(bad)
int
call
mov
sbb
loopne
push
sub
sar
hlt
ja
pop
pop
scas
pusha
cmp
(bad)
or
das
sti
in
pusha
sub
(bad)
scas
cwde
pusha
(bad)
fucomip
pop
push
in
ret
cmp
out
repz
or
repz
out
fimul
mov
hlt
lea
sub
fs
data16
and
cmp
and
mov
xor
xchg
add
popa
dec
and
and
out
xor
ins
jle
add
test
xor
inc
loope
add
mov
inc
or
aaa
cs
pusha
dec
xor
aam
cmp
xor
popf
je
push
stos
add
mov
call
push
ror
adc
and
aas
push
or
pop
fs
jno
lds
lahf
sub
or
add
jo
iret
push
mov
es
adc
sub
or
or
test
xchg
out
es
push
or
sbb
adc
fist
jp
push
enter
inc
add
cmp
jle
retf
mov
enter
test
pushf
mov
arpl
and
sbb
or
inc
rol
test
mov
or
add
inc
jp
xor
js
and
add
scas
add
adc
adc
cli
and
cmp
sbb
sbb
pop
mov
and
mov
pop
push
xchg
or
ins
rol
push
cmp
(bad)
sbb
adc
mov
dec
and
fwait
mov
add
sbb
pop
clc
mov
or
add
mov
mov
movs
adc
pop
jno
mov
push
sbb
(bad)
rol
jmp
pusha
mov
xlat
in
push
cmp
push
sbb
clc
or
xor
sub
popa
jmp
add
aaa
pop
push
jbe
fmul
push
sub
sub
jmp
xor
hlt
int3
dec
ret
add
inc
in
sbb
sbb
iret
push
fsub
jae
sbb
push
sbb
pop
xor
and
movs
sub
data16
daa
mov
ret
push
dec
das
adc
test
jbe
call
jae
test
sbb
ins
xchg
loop
adc
iret
inc
leave
sbb
sub
push
ins
outs
enter
test
movs
pop
ret
scas
jmp
push
loopne
outs
or
pop
cmp
add
rcr
and
lahf
pop
leave
and
cmovb
push
retf
imul
mov
or
inc
or
pop
adc
cdq
jp
push
mov
sbb
and
and
pop
sub
adc
add
and
ins
rcr
je
das
xor
fnstenv
sbb
mov
dec
cmps
pop
sub
les
push
sbb
ja
rcl
imul
push
lods
es
xchg
test
mov
add
xchg
jo
nop
add
mov
sti
fidivr
push
movs
lea
push
js
ja
mov
stc
test
fldz
cmps
add
cmp
add
sub
ins
dec
gs
xchg
lods
dec
mov
pop
sub
push
mov
mov
fwait
inc
xchg
nop
js
rol
enter
in
pop
xchg
xor
or
cmp
push
imul
imul
xor
adc
or
add
jno
mov
fisubr
aaa
dec
jo
adc
push
push
mov
pop
or
pop
dec
jb
xor
adc
int
mov
xor
pusha
pop
dec
pop
pusha
push
daa
cmp
test
aad
movs
jb
push
and
pop
and
xchg
shl
setae
fdiv
add
push
leave
sbb
cwde
and
push
mov
xchg
mov
je
inc
loopne
inc
ins
int3
xlat
call
dec
or
je
(bad)
fiadd
ins
mov
adc
mov
fist
jecxz
jne
or
push
push
and
pop
test
add
dec
ds
cmp
add
inc
sahf
jns
es
mov
popa
add
fnstenv
mov
dec
or
scas
shl
ja
popf
inc
movs
gs
sbb
jnp
pop
pop
mov
(bad)
sbb
push
dec
in
jo
jecxz
jbe
clc
push
or
pop
add
or
loopne
sbb
ins
dec
inc
cmps
cmps
adc
loop
lea
mov
mov
dec
fdivr
add
xlat
push
add
inc
pusha
and
pop
add
jmp
pshufw
jne
mov
in
add
xor
and
add
pop
pop
fnsetpm(287
adc
jo
cwde
and
test
cmp
mov
jle
cmps
pop
shr
xchg
jmp
push
push
in
mov
leave
or
and
data16
aam
les
jns
xchg
ins
or
in
stos
mov
add
cli
lods
ror
pop
inc
jns
push
sub
mov
jge
cmp
jb
movs
cmps
cs
sub
int3
push
mov
pop
add
add
inc
sub
ror
retf
es
mov
jns
mov
jnp
inc
xchg
push
lds
out
int3
jecxz
xor
loope
ficomp
push
(bad)
lock
fsub
test
dec
mov
arpl
and
add
cmps
push
stc
xlat
aaa
test
je
aas
inc
inc
cmp
test
cli
adc
mov
or
push
rcr
cmp
jne
add
or
dec
push
sbb
or
pop
and
dec
push
int
sub
sbb
sbb
and
xchg
sbb
sbb
nop
jbe
inc
jne
sub
or
cmc
daa
mov
ins
movs
nop
xchg
add
sbb
push
lds
jge
xor
jo
sbb
dec
in
mov
xchg
inc
sub
jne
sub
adc
jo
sbb
inc
adc
es
xor
cmp
imul
je
bound
lea
cmp
sub
jbe
add
pop
mov
and
inc
jbe
stc
add
sub
and
dec
je
push
call
adc
jo
mov
out
adc
jo
mov
dec
adc
mov
add
and
and
lods
ss
fistp
int
ja
xchg
cmps
push
or
pop
adc
in
add
add
test
mov
sbb
lea
cmps
dec
shl
cmp
ret
frndint
iret
in
mov
(bad)
mov
je
scas
xchg
adc
cmp
mov
jmp
mov
fs
pop
jmp
outs
cmp
je
mov
pop
daa
sub
push
adc
das
push
sub
pop
mov
mov
int
push
in
xor
jge
sbb
mov
test
sub
mov
xor
(bad)
arpl
xchg
or
xor
je
inc
add
sub
or
sub
and
je
or
or
fidiv
mov
imul
jg
xor
dec
fidiv
pop
dec
push
lea
inc
inc
loopne
mov
stos
shl
into
movs
pop
bound
dec
dec
xor
cmp
sbb
shl
mov
and
xchg
pop
pusha
add
aam
test
sbb
pop
add
(bad)
fsub
or
and
inc
inc
xlat
mov
xor
or
mov
sahf
xchg
je
(bad)
pop
or
sbb
test
adc
lock
xor
loopne
frstor
fdiv
xchg
stos
mov
jns
test
adc
pop
dec
push
stc
push
inc
mov
inc
std
mov
adc
cmp
sub
leave
xchg
out
int3
push
push
rcr
loope
dec
or
and
jbe
aad
inc
fnstcw
sbb
cmp
call
mov
into
mov
inc
mov
push
adc
inc
lods
adc
dec
dec
aam
and
xor
data16
dec
add
ds
cli
add
dec
xchg
sub
or
push
inc
sub
fwait
aad
cmp
(bad)
pop
out
nop
dec
(bad)
xor
ror
sub
test
psraw
mov
and
add
cs
lahf
scas
pop
push
ss
sub
addr16
fisubr
outs
leave
hlt
pop
sbb
movs
cmc
mov
push
test
or
add
iret
pop
cs
inc
loope
jno
psubsb
pmaxub
fs
push
cmp
xor
sub
mov
lods
imul
sbb
cmp
out
mov
push
repnz
jb
hlt
jns
xor
(bad)
xor
popa
popa
mov
ror
or
aaa
fdiv
bound
loopne
imul
cdq
in
std
mov
ret
jl
or
xchg
xlat
jo
mov
inc
sub
dec
sahf
add
mov
xor
adc
mov
dec
sub
jns
movs
popa
daa
dec
mov
je
xchg
dec
icebp
sub
inc
inc
fisub
movs
and
mov
ret
push
add
push
test
inc
sbb
jae
pop
dec
xchg
inc
out
jns
in
ins
bound
and
sub
movs
or
xor
movs
ds
xchg
push
mov
and
inc
sbb
movs
imul
sar
xor
repz
shl
dec
cmp
or
sub
lock
ss
and
jns
pop
and
ins
or
mov
adc
add
push
or
outs
and
adc
push
ret
push
pop
rcr
push
cmp
add
push
js
or
add
or
xchg
dec
xor
pop
or
adc
(bad)
int
mov
cwde
iret
push
mov
push
stos
pop
fsub
jae
push
mov
cmps
push
adc
xlat
dec
sbb
or
xchg
jp
sub
adc
rol
ins
and
sbb
pop
xor
and
jl
pop
lods
push
sbb
mov
fnstcw
jg
inc
imul
call
in
sbb
out
(bad)
fs
add
clc
shr
aam
repz
dec
movs
jmp
pop
ins
add
arpl
cli
push
and
lea
ror
in
jl
sub
pop
gs
or
inc
inc
ins
and
shl
les
xchg
add
xchg
call
pop
sub
dec
inc
or
inc
jge
or
leave
fld
push
ds
out
and
icebp
pop
ins
xchg
dec
or
fimul
dec
pop
add
mov
push
ins
sbb
mov
rcr
ret
adc
das
adc
mov
add
std
add
retf
adc
or
jmp
or
mov
sub
(bad)
int
xchg
mov
jno
xor
push
cwde
add
imul
cdq
into
cli
push
cmps
adc
stos
push
stos
jno
sbb
pop
adc
sub
sub
movs
sahf
pop
mov
sbb
ja
sub
shr
push
sbb
call
sti
add
jae
mov
mov
call
sbb
mov
inc
or
push
or
jbe
or
loope
mov
sbb
rol
jmp
or
stos
loopne
out
inc
sub
test
cmp
jecxz
enter
aaa
sbb
cmp
pop
lods
(bad)
inc
shl
jle
ret
cdq
pop
adc
mov
ins
hlt
cmp
pop
loopne
push
cmps
addr16
lea
mov
xor
stc
adc
push
je
sub
je
out
adc
pop
lds
or
fbstp
or
cmp
jmp
or
sub
(bad)
sub
pushf
push
jmp
mov
test
xchg
mov
jmp
mov
dec
dec
or
adc
and
add
mov
jg
adc
or
pop
dec
add
mov
mov
sbb
jle
fisttp
jmp
or
into
sub
dec
rcr
jmp
ret
in
push
or
xlat
(bad)
xor
mov
jne
ret
jno
(bad)
hlt
stos
inc
pop
jmp
dec
and
push
or
pusha
int3
add
add
call
pop
clc
sub
pop
aaa
add
gs
js
jbe
and
sbb
xchg
sbb
dec
aaa
inc
mov
mov
dec
imul
mov
sbb
mov
jnp
cmp
push
ja
jae
or
sar
popa
sub
mov
(bad)
pop
inc
cs
popa
sub
out
inc
imul
push
jp
fist
or
cs
adc
add
add
frstor
mov
fstp
(bad)
iret
ret
test
call
xor
add
mov
stos
daa
xor
mov
or
xor
pusha
sbb
or
or
mov
adc
cli
sbb
mov
pop
xor
ja
hlt
inc
arpl
inc
and
cmp
adc
xor
adc
adc
dec
ds
cwde
push
ja
inc
aaa
mov
sbb
imul
daa
push
push
cmp
mov
inc
inc
sub
push
sub
jmp
test
add
lahf
mov
arpl
push
pop
sub
aam
sbb
setg
lock
cmp
retf
(bad)
xor
loop
inc
arpl
mov
mov
rcr
mov
ss
jle
inc
jo
pushf
xchg
sbb
rol
xchg
iret
cs
fadd
add
xchg
mov
jns
outs
push
call
cmc
push
push
mov
movs
or
cs
jnp
inc
cmp
pusha
ins
mov
pop
repz
hlt
push
mov
xor
push
jb
cmp
adc
dec
and
add
mov
in
out
inc
pop
popa
and
or
pop
adc
lock
pusha
fisttp
push
dec
jp
jno
jo
sub
xchg
xchg
in
outs
dec
sbb
in
movs
daa
ins
mov
mov
outs
iret
ror
mov
int3
xor
mov
nop
(bad)
cmp
sbb
push
add
inc
leave
pop
or
xchg
outs
sub
and
sahf
mov
xchg
ds
or
fild
add
add
adc
sbb
add
add
cwde
inc
rcr
in
mov
jo
jp
(bad)
mov
sub
(bad)
aam
mov
sbb
mov
jg
mov
idiv
shl
ret
out
or
mov
jns
push
call
mov
adc
les
pop
cmps
mov
lahf
mov
lods
xchg
mov
movs
or
pushf
clc
push
data16
xchg
or
and
outs
add
mov
pop
sbb
rcl
ror
push
pop
add
sbb
and
movs
and
(bad)
or
add
enter
inc
adc
dec
or
mov
mov
push
inc
in
mov
arpl
or
mov
loope
jne
push
pop
fild
jo
push
xchg
sbb
les
mov
cmp
inc
or
movaps
and
mov
add
loop
movzx
aad
hlt
cwde
popf
movs
aaa
jns
je
cmp
dec
test
or
sub
scas
movs
cmp
cmp
jo
hlt
sub
jmp
cmp
xchg
push
test
inc
jne
sub
push
pop
loopne
cmp
mov
or
push
test
shl
into
pop
lods
aam
test
imul
cmp
rcr
pop
jbe
jb
dec
sbb
movs
shl
enter
cld
daa
aam
sbb
sbb
sbb
(bad)
ror
dec
push
(bad)
pop
cmp
scas
mov
xchg
xor
cmp
adc
and
push
ror
repz
imul
or
in
in
ror
shl
xchg
mov
mov
loop
xor
(bad)
jbe
adc
adc
adc
push
dec
and
pop
outs
ins
imul
and
dec
and
outs
repz
ins
sbb
mov
retf
sbb
and
mov
and
ret
push
shr
scas
mov
xchg
mov
test
mov
sbb
adc
cmp
adc
push
mov
js
fucomip
sub
push
aas
data16
loopne
ret
or
daa
cmp
shr
add
aaa
test
in
push
test
sub
jle
jae
mov
mov
and
fmul
leave
push
jle
sti
jb
rcr
sbb
sbb
mov
inc
pop
or
arpl
xor
or
ins
aam
pop
or
ret
add
and
adc
mov
and
or
mov
jne
or
sbb
std
adc
out
pshufw
imul
add
mov
cmp
ins
test
fadd
or
loopne
push
loop
push
out
test
adc
adc
add
push
mov
push
xchg
int
std
gs
push
xchg
mov
lea
dec
adc
push
stc
jmp
iret
or
adc
je
xchg
lea
(bad)
int
xchg
or
sbb
cld
xchg
fstp
inc
adc
push
fnstenv
mov
add
push
inc
mov
inc
push
sbb
movs
xor
pop
push
lods
clc
sub
and
or
(bad)
mov
sbb
and
sub
loopne
xchg
adc
stos
scas
cmps
or
lea
stc
rol
ror
add
ins
sub
dec
cmp
add
sahf
out
adc
adc
inc
adc
call
inc
js
cdq
mov
jb
mov
test
arpl
stc
aaa
push
movs
loopne
test
dec
leave
in
cmp
lea
pop
jp
push
mov
pusha
or
inc
lea
stc
cmp
pop
in
sahf
mov
add
nop
mov
dec
(bad)
outs
je
cli
jg
hlt
bound
adc
push
mov
(bad)
mov
mov
mov
inc
scas
mov
xchg
mov
mov
icebp
push
enter
mov
inc
mov
pop
push
cmps
sbb
aad
out
daa
(bad)
fucom
movzx
pop
fnstenv
lock
clc
mov
or
retf
add
xor
dec
out
or
push
fcom
mov
add
jmp
mov
jle
iret
and
or
pop
repnz
dec
(bad)
mov
add
cmp
adc
pushf
(bad)
test
pop
rol
das
aam
not
cmp
call
mov
push
mov
sub
or
mov
mov
cmp
mov
sub
mov
sbb
sbb
sub
dec
mov
add
pop
cmp
sti
fst
pop
and
out
push
or
add
ret
push
add
push
call
ins
shl
mov
mov
pusha
cmp
icebp
mov
lea
aas
pop
pop
dec
cmc
sbb
push
cdq
and
pushf
push
adc
loope
hlt
(bad)
and
or
ss
cmc
jge
sbb
and
jnp
fwait
outs
(bad)
fbstp
xchg
in
leave
sub
inc
ret
pop
pop
or
lea
sub
inc
fs
mov
add
dec
loopne
xchg
js
push
xchg
or
ss
inc
movs
inc
adc
bound
ds
or
xor
lea
pop
pop
adc
or
jnp
test
mov
cmps
es
pop
adc
ret
test
ja
or
pushf
mov
and
adc
imul
mov
daa
or
and
push
push
js
cmp
daa
inc
and
or
sbb
push
push
sub
push
lock
push
fcmovnbe
ds
pop
jmp
inc
push
xor
dec
fst
je
aaa
pop
jns
push
movs
add
jo
mov
loope
add
sbb
sub
push
pop
inc
sbb
dec
fiadd
add
sbb
add
cmc
mov
sub
scas
mov
xchg
out
test
hlt
es
fsubr
adc
sub
mov
mov
or
mov
mov
xor
dec
lods
or
inc
pop
nop
pop
or
mov
add
jmp
enter
or
sbb
adc
cmps
jno
and
xchg
pop
add
fistp
mov
push
sbb
iret
or
add
adc
sub
into
and
xor
mov
cli
ss
mov
popf
pop
push
mov
or
jmp
and
mov
imul
sub
stos
dec
dec
(bad)
enter
xor
mov
and
ret
mov
outs
mov
(bad)
sbb
or
mov
cmp
xchg
js
inc
mov
daa
adc
cs
add
fidiv
daa
int3
add
add
mov
(bad)
jmp
dec
call
ret
cdq
out
int
inc
and
mov
adc
add
imul
add
mov
rcr
adc
jp
mov
push
jp
push
ja
imul
add
push
imul
mov
mov
out
adc
stos
nop
into
add
cmp
out
and
xor
sbb
inc
shr
mov
xchg
pop
or
lods
pop
xchg
clc
test
movs
arpl
lods
ror
(bad)
jecxz
not
cdq
mov
jo
add
jecxz
ret
cmp
sbb
pop
sub
mov
xchg
pop
rcl
sub
mov
jns
fbstp
ret
mov
add
aaa
sub
adc
jp
or
xchg
rcr
xlat
pop
les
or
mov
daa
sbb
sub
push
dec
ja
test
cli
add
mov
mov
dec
in
es
sbb
js
mov
mov
jnp
add
daa
mov
pop
xchg
(bad)
push
adc
in
mov
or
and
cmp
outs
or
addr16
js
or
jbe
ss
add
cmp
inc
mov
jmp
jne
mov
pop
inc
mov
fs
or
sub
sub
sbb
push
xchg
jp
and
fcom
das
fmul
add
or
dec
fisubr
shr
daa
pop
push
ret
xor
sub
push
(bad)
mov
xchg
cmp
mov
rcr
adc
pop
or
push
xchg
cli
push
and
fsubr
and
arpl
ds
inc
and
and
mov
enter
dec
xchg
cmp
mov
(bad)
jmp
pusha
mov
add
jb
fwait
jmp
push
mov
or
xor
ins
pop
imul
push
inc
adc
sar
push
or
push
retf
push
mov
and
(bad)
cmp
shl
inc
outs
bound
push
sbb
inc
adc
je
aad
cmp
jg
clc
data16
lahf
or
jmp
punpckhdq
test
lea
out
ds
icebp
inc
cs
xchg
outs
hlt
pop
pushf
push
dec
pop
mov
jnp
add
sbb
sbb
and
fnstenv
in
cmp
jo
pop
cmp
fst
icebp
mov
fdivr
adc
pop
mov
ins
fcmovnb
dec
mov
dec
repnz
popf
xor
test
sub
jmp
adc
in
ins
enter
pop
mov
and
dec
fwait
jl
add
adc
test
mov
mov
push
mov
mov
sub
scas
add
push
popf
test
in
pusha
rcr
int
(bad)
bound
push
push
lods
mov
cmp
add
push
add
mov
and
mov
sbb
mov
mov
cmp
sbb
mov
adc
idiv
nop
lods
mov
mov
fstp
add
mov
and
push
pop
fld
pop
div
jge
adc
sbb
dec
dec
or
addr16
mov
enter
jg
mov
adc
dec
imul
fs
inc
jge
es
adc
or
pop
pop
and
xor
jbe
inc
or
sub
pop
das
cwde
cmps
fnstenv
cmc
lock
sbb
push
cmp
sbb
(bad)
adc
or
out
mov
fisttp
dec
push
scas
sbb
cmp
jbe
in
add
loopne
add
ds
add
and
sbb
inc
or
mov
mov
pop
push
mov
sub
call
(bad)
sub
xchg
or
mov
mov
addr16
or
(bad)
adc
xchg
div
dec
mov
sub
out
shl
adc
mov
and
sti
add
out
and
add
imul
add
pop
sbb
inc
adc
mov
lods
icebp
sub
mov
sbb
out
or
inc
xor
lods
test
push
inc
rol
sbb
adc
jns
cwde
add
outs
cmp
xchg
inc
mov
cmp
or
paddw
inc
xchg
xchg
pushf
cmp
popa
push
jle
add
das
je
push
pop
mov
mov
outs
ins
xor
scas
fwait
push
xlat
dec
outs
imul
ret
jg
inc
js
outs
xor
jbe
push
mov
imul
adc
movs
getsec
inc
push
jns
or
add
or
enter
clc
hlt
lock
mov
repnz
out
pop
mov
loopne
ret
aas
in
call
fs
fadd
sbb
aam
int3
sbb
enter
nop
inc
push
mov
or
test
mov
cwde
fsub
sub
inc
sbb
and
xchg
mov
inc
pusha
in
enter
cmp
jnp
mov
mov
mov
sub
mov
(bad)
aas
retf
sub
pop
and
mov
rcl
mov
mov
jmp
lods
je
mov
(bad)
fnstcw
loope
movs
cld
loopne
test
(bad)
mov
outs
inc
outs
jb
push
push
inc
fiadd
xchg
and
pop
int3
and
icebp
cmp
pop
push
dec
or
aaa
adc
dec
mov
ins
inc
inc
je
dec
xor
jae
cmps
jnp
inc
(bad)
jmp
or
sbb
imul
inc
hlt
push
adc
dec
adc
or
xchg
sub
ja
mov
test
sbb
cmp
push
xchg
and
test
or
inc
popa
cmp
jle
push
pop
aad
mov
mov
xor
imul
in
lock
cmps
inc
call
jne
and
push
dec
push
js
xchg
daa
icebp
ret
sbb
add
adc
jmp
push
movs
iret
pop
add
imul
sbb
cmp
push
adc
xchg
push
test
adc
scas
popa
pop
sub
ror
iret
rol
and
add
or
lock
push
inc
sbb
mov
xor
ss
or
and
lock
inc
movs
lea
les
or
mov
pop
mov
adc
adc
pop
call
test
shl
std
dec
xor
cmp
pusha
cmp
jb
pop
jmp
ins
sub
pop
sbb
hlt
or
ins
outs
rol
and
jle
lea
clc
jae
and
(bad)
ds
jb
push
add
in
ret
pop
shl
push
cmp
(bad)
dec
inc
pop
cmps
cmp
inc
scas
shl
sbb
inc
repnz
iret
out
push
add
sar
leave
ror
push
push
cmps
mov
mov
or
jge
cmps
shr
cmp
cs
push
mov
(bad)
sub
mov
and
add
sbb
cmp
inc
mov
xor
fs
sbb
push
xchg
jbe
adc
neg
(bad)
test
push
pop
rol
movs
push
add
xchg
jne
dec
fidiv
sub
push
ins
add
adc
cmps
arpl
sbb
or
adc
inc
outs
jne
clc
loope
adc
popa
jns
jae
push
and
mov
test
movs
lods
fnstcw
xchg
push
mov
cmps
mov
cmps
cmp
mov
mov
pop
inc
outs
ret
push
and
(bad)
call
dec
push
enter
stos
add
xchg
add
xchg
fcomp
fdivr
prefetchw
loopne
or
outs
(bad)
call
cld
mov
pop
rcl
mov
adc
jns
cmp
inc
jns
or
or
cdq
lea
inc
imul
(bad)
adc
adc
mov
push
imul
test
or
adc
jnp
loope
jns
jnp
call
call
adc
popa
jbe
add
idiv
imul
addr16
or
imul
add
push
jno
in
lods
aas
popa
or
inc
aad
ficomp
inc
mov
mov
test
jo
cmps
ret
or
add
or
test
mov
adc
push
push
dec
and
scas
aaa
mov
aad
lock
stos
or
jns
dec
cmp
je
dec
aam
jns
mov
movs
(bad)
mov
test
dec
test
adc
in
lods
test
dec
rcr
cmp
dec
cmps
imul
pusha
cdq
xor
ja
cmps
sbb
pop
scas
icebp
push
aaa
mov
and
jae
nop
and
mov
add
daa
hlt
ret
setl
cmps
sub
jecxz
mov
fst
cwde
pop
int3
and
sub
jae
xchg
data16
dec
pop
mov
adc
int
lock
loopne
mov
aam
mov
dec
or
ins
div
fwait
scas
and
fistp
xchg
lea
push
push
and
or
push
add
sti
div
dec
pop
push
or
clc
mov
retf
mov
pop
rcr
stos
loop
xor
push
dec
shl
nop
xchg
ret
adc
aam
xchg
inc
pop
mov
fdiv
xor
adc
imul
xchg
ficom
xchg
lahf
mov
nop
push
sbb
or
sub
shl
lods
and
pop
jne
daa
fsubr
dec
push
daa
fmul
mov
sub
lods
pop
xor
adc
lods
sbb
adc
sub
adc
inc
xchg
sub
and
jbe
ss
js
pop
enter
and
hlt
adc
test
ja
add
(bad)
lea
add
inc
jno
leave
repz
mov
push
dec
mov
dec
inc
dec
test
push
push
call
rcr
inc
mov
adc
or
sub
int
(bad)
pop
sahf
movs
(bad)
sar
lods
mov
or
inc
jae
popa
add
sub
cwde
shl
test
bound
xor
add
jo
jns
in
test
ret
aam
mov
mov
jne
movs
and
inc
test
and
je
push
sbb
add
adc
adc
add
jge
jmp
pop
div
ret
ret
adc
cmps
je
jb
xchg
cmp
arpl
adc
leave
and
mov
outs
dec
sub
adc
sbb
jmp
mov
stc
or
add
add
add
jmp
mov
(bad)
sbb
xchg
add
jg
jne
mov
sbb
fadd
data16
or
nop
pop
cdq
cwde
mov
into
pop
aam
je
dec
inc
lahf
cmp
jb
lock
rcl
inc
add
adc
mov
clc
xor
push
cmc
aas
add
pop
test
mov
push
fs
lea
inc
add
xchg
shl
(bad)
shl
push
nop
stc
inc
cmp
lds
nop
xor
xor
mov
cmp
push
and
sub
fiadd
and
aam
xchg
mov
mov
sub
dec
xchg
xchg
scas
push
mov
rol
adc
rcl
ins
jle
inc
nop
or
jmp
fcom
adc
cmps
xchg
arpl
jae
popa
shr
shl
pushf
in
sbb
ret
push
dec
hlt
fadd
cmp
movs
pusha
inc
dec
test
cld
inc
dec
je
mov
cmps
cmp
(bad)
fmul
mov
ins
outs
lock
loopne
rol
xor
pop
dec
gs
fisub
lea
dec
out
movs
pop
leave
leave
aaa
gs
xchg
(bad)
adc
in
repnz
dec
pop
fistp
or
or
jnp
push
(bad)
sbb
mov
inc
cmps
cmp
addr16
stc
repnz
lock
lock
xchg
es
add
xchg
inc
call
dec
mov
jae
push
loope
push
mov
call
and
add
jmp
popa
loop
scas
outs
fldcw
mov
ret
ret
jne
test
pushf
dec
and
pop
pop
pop
mov
test
cmp
mov
dec
or
cmp
or
inc
pop
pop
leave
jae
stos
mov
mov
and
inc
sub
sbb
xor
pop
dec
lahf
push
dec
leave
sub
xor
push
and
lods
loop
icebp
sbb
mov
sub
or
ffreep
mov
das
add
jecxz
add
iret
neg
cmc
jmp
sbb
jmp
and
xchg
sbb
jmp
push
pop
imul
pushf
mov
imul
mov
or
pop
(bad)
push
pop
js
ret
pop
and
lods
pop
xchg
das
outs
mov
fistp
shl
mov
adc
cmp
jne
sbb
or
jecxz
adc
inc
cs
sbb
sbb
fcomp
or
cdq
bound
mov
ret
movs
adc
or
jp
mov
popa
mov
inc
adc
fadd
fmul
xchg
inc
in
xchg
add
outs
movs
xor
pop
test
outs
cdq
mov
cmp
xchg
arpl
push
adc
imul
dec
and
push
xchg
fadd
sbb
fsubr
pop
mov
cmc
pop
push
push
es
and
jl
mov
adc
adc
jns
and
xor
cdq
nop
addr16
ja
inc
fdiv
adc
xor
sbb
hlt
and
hlt
or
clc
loopne
and
cmp
dec
cld
call
nop
adc
pop
mov
xchg
add
add
and
repnz
or
sbb
add
rol
push
inc
es
inc
loopne
pop
sub
pop
lods
sub
adc
dec
jno
sbb
das
push
inc
outs
sub
popa
sub
in
imul
add
adc
pop
das
sbb
enter
outs
jae
pop
ins
adc
dec
push
shr
mov
mov
or
movs
mov
outs
xchg
lods
lock
mov
js
pop
dec
popa
jns
jne
ficom
mov
loopne
imul
outs
test
je
or
fs
je
xlat
dec
mov
ins
jae
inc
shr
rcr
xor
push
mov
add
push
outs
jl
mov
aas
inc
add
outs
lock
sbb
and
mov
retf
imul
xchg
add
aaa
and
and
mov
push
lods
mov
retf
int
hlt
mov
clc
sti
mov
jo
mov
push
leave
cld
(bad)
jle
out
pop
fidivr
loopne
int3
pop
call
(bad)
call
mov
adc
adc
(bad)
inc
inc
cmp
clc
and
(bad)
or
test
lahf
push
push
cli
popa
xchg
bound
daa
push
pop
or
xchg
sub
lea
fldenv
sahf
mov
push
aaa
mov
sbb
xchg
and
pushf
mov
stc
nop
push
pop
sbb
adc
xor
xchg
(bad)
imul
add
sbb
inc
out
add
js
add
dec
data16
dec
fsub
xor
add
pop
inc
inc
repz
sub
xchg
and
or
or
pusha
add
(bad)
rcr
in
icebp
ins
mov
mov
push
adc
inc
jmp
mov
jne
jmp
mov
add
push
cmovne
ja
repz
pop
cwde
mov
add
adc
mov
cmp
leave
inc
and
add
fxch
aam
(bad)
push
add
adc
imul
popa
(bad)
jae
es
add
popf
push
dec
hlt
nop
or
shl
addr16
dec
fsubp
pusha
cmp
xor
dec
dec
sub
jnp
push
dec
inc
pop
pusha
dec
or
adc
or
cmp
push
shl
into
sub
push
jge
adc
inc
outs
arpl
mov
sbb
mov
xchg
push
or
mov
sbb
nop
pop
add
push
popa
jb
out
inc
xchg
push
pop
sub
or
loope
push
sbb
pop
pop
xchg
enter
ror
dec
fcomp
mov
dec
loopne
mov
icebp
sub
inc
sbb
jne
cld
cwde
jo
mov
push
push
retf
mov
ins
pop
add
xor
dec
cdq
push
mov
ret
fld
push
mov
mov
(bad)
or
push
outs
loopne
add
and
push
imul
ss
add
mov
mov
cmp
and
jae
jbe
outs
dec
or
movs
test
add
fnstenv
cmp
inc
push
inc
sbb
fmul
mov
cmp
cmp
fsub
pusha
cmp
cmp
add
nop
mov
push
sub
daa
push
inc
or
cmp
sbb
push
push
dec
daa
sub
xchg
enter
mov
dec
lock
or
mov
or
call
imul
sti
ja
inc
outs
fild
sbb
dec
repz
xchg
nop
jnp
rcl
movs
test
sub
inc
nop
xor
aaa
push
xchg
ja
hlt
dec
fcomp
out
cs
sub
sub
jbe
fild
ffree
dec
dec
inc
lahf
cs
dec
js
clc
sahf
fs
das
dec
gs
jecxz
jg
inc
jo
les
xor
ds
lds
push
jo
dec
adc
xchg
or
adc
adc
(bad)
push
xor
or
or
cs
mov
shl
shr
lock
dec
push
ins
or
(bad)
pusha
cmp
dec
aas
pop
adc
clc
push
lods
mov
push
dec
jb
dec
push
jle
and
cmps
cs
push
cmp
jle
stos
cmp
pusha
call
mov
sbb
scas
dec
xor
std
ret
push
inc
enter
push
inc
add
call
in
int
fcomi
ror
inc
xchg
data16
clc
out
scas
ins
out
js
outs
add
je
mov
mov
jl
pop
add
cs
add
mov
sub
jle
into
inc
das
mov
cmp
push
cmp
pop
clc
scas
push
or
iret
mov
out
adc
mov
mov
mov
pop
mov
imul
xchg
cs
pop
fistp
pusha
and
add
fstp
adc
xor
push
popa
bound
in
inc
icebp
cmc
and
outs
adc
pop
add
add
mov
pushf
add
sbb
imul
repz
adc
push
aaa
mov
and
adc
mov
adc
(bad)
(bad)
jg
popa
leave
js
adc
or
jbe
jns
jo
inc
addr16
xchg
xor
mov
mov
adc
dec
ror
gs
ror
adc
out
nop
fs
adc
sbb
adc
lock
inc
pop
mov
es
clc
(bad)
mov
or
cmp
in
add
adc
push
bound
test
push
add
pop
pop
or
push
into
movs
lods
pusha
das
hlt
inc
mov
mov
adc
enter
sbb
les
and
dec
xor
jae
in
mov
mov
or
or
jne
out
dec
(bad)
rol
ins
gs
fdiv
push
ja
inc
fadd
(bad)
inc
call
cld
jne
js
outs
addr16
inc
scas
xor
inc
dec
pushf
pop
inc
or
inc
and
sub
xchg
adc
dec
stos
add
es
and
xchg
into
or
mov
jae
lods
push
stc
sub
xchg
jo
sbb
sub
or
adc
es
test
out
sub
mov
shl
sub
adc
add
xchg
mov
dec
push
mov
mov
xchg
push
xor
adc
mov
(bad)
in
mov
cmps
sub
stos
and
add
scas
xchg
add
dec
cmovnp
rcl
fidiv
xor
add
enter
mov
push
js
je
jl
fadd
or
fdivr
into
mov
or
stos
test
push
xor
cmp
cmps
cmp
inc
push
lock
call
xor
dec
push
jo
cmp
sbb
ds
jmp
add
(bad)
arpl
shr
or
leave
inc
fwait
or
enter
inc
arpl
mov
enter
cmp
dec
enter
mul
aam
mov
push
sub
xchg
adc
pop
or
push
loopne
xchg
daa
cld
or
ins
add
imul
mov
lock
add
jns
(bad)
in
sbb
sysret
sub
(bad)
dec
imul
and
push
xlat
xchg
in
aam
call
xor
sbb
mov
in
popa
ret
add
sbb
push
inc
jne
adc
mov
mov
mov
or
xchg
pop
adc
and
sbb
xchg
or
sbb
and
leave
push
sbb
pop
or
mov
jb
adc
and
add
cmp
adc
dec
sub
(bad)
rol
push
sbb
xor
aad
add
and
cmp
sub
daa
pop
push
sbb
call
cmp
sbb
in
adc
mov
sbb
mov
es
sub
xor
or
enter
retf
ret
enter
xor
leave
add
add
aaa
xchg
pop
and
leave
push
jb
cmp
and
sbb
sbb
aas
inc
jb
jb
inc
inc
or
test
pop
push
sar
sub
in
test
xchg
push
stc
mov
inc
js
inc
adc
(bad)
fidivr
sub
pusha
mov
(bad)
pop
rcr
movs
inc
pusha
push
mov
push
cwde
push
in
push
(bad)
adc
cld
push
mov
mov
int
xor
adc
mov
cmp
inc
adc
sub
lahf
push
and
clc
and
push
loop
or
icebp
mov
or
inc
or
pusha
lea
or
(bad)
js
lock
add
inc
push
xor
loopne
mov
aas
loopne
pop
(bad)
xchg
aas
mov
aam
in
xor
jmp
test
push
jae
push
sbb
(bad)
es
pop
sub
xchg
push
leave
mov
loopne
je
cmp
push
ds
mov
push
fisttp
rol
adc
adc
adc
ds
add
add
enter
cmp
scas
jns
repz
sar
fcom
fadd
fnstsw
sbb
hlt
lock
and
pop
mov
arpl
mov
adc
push
stc
mov
dec
adc
nop
fs
inc
mov
inc
dec
ret
dec
rdmsr
inc
mov
mov
add
and
ret
cwde
mov
pop
fild
enter
adc
leave
adc
push
fs
adc
jmp
dec
call
xor
popa
and
push
xor
sbb
enter
sbb
adc
sbb
xor
sbb
push
xchg
sbb
aam
pop
adc
and
xor
(bad)
and
add
add
and
push
leave
push
and
sbb
sub
add
sub
pop
and
jge
add
cs
inc
adc
xchg
out
dec
xchg
sar
push
outs
js
je
les
inc
mov
push
adc
sub
adc
adc
add
adc
fild
es
out
xor
fs
sub
stos
and
aaa
push
push
adc
sbb
add
adc
ss
adc
xor
sar
dec
js
adc
imul
xchg
stos
imul
dec
xchg
divps
sub
sbb
sbb
sub
ret
mov
fdiv
pop
jmp
in
add
jmp
add
loope
push
out
out
jmp
add
push
xor
nop
sub
enter
(bad)
adc
and
pop
xchg
or
(bad)
es
or
pcmpeqw
push
xor
adc
cmps
ins
in
sbb
or
mov
inc
add
xchg
and
jmp
inc
cs
leave
add
dec
and
inc
adc
add
adc
and
add
sbb
inc
push
pop
and
push
adc
rol
dec
test
lock
mul
in
mov
ffree
leave
enter
fucom
and
mov
sub
mov
sbb
mov
add
sub
xor
xor
xor
add
dec
test
icebp
pop
hlt
pushf
and
ss
icebp
xchg
in
push
leave
xchg
push
nop
fcomp
xor
adc
test
dec
pop
neg
fcomp
jmp
push
or
push
xor
cmp
pop
pop
and
push
leave
and
lea
inc
xchg
or
popa
adc
push
leave
push
xor
xor
cs
and
inc
adc
dec
push
inc
adc
sub
rol
add
sbb
xchg
and
cdq
dec
scas
pop
and
rcr
jns
xor
ret
in
mov
inc
in
and
xor
and
nop
add
dec
scas
xchg
add
sub
sub
inc
scas
xchg
sub
cmp
cmp
xor
sub
add
xor
in
xor
mov
int3
adc
stos
rol
icebp
cmp
fwait
scas
pop
or
jbe
xor
jmp
inc
ins
add
inc
imul
push
push
and
add
push
cmp
int3
sbb
xchg
xchg
pop
rol
mov
fimul
(bad)
daa
call
das
pusha
mov
or
fistp
add
inc
mov
jle
or
adc
add
add
xor
dec
dec
(bad)
inc
xchg
xchg
loop
sub
neg
cmp
js
out
es
push
aad
imul
cmp
test
dec
jne
or
inc
sbb
push
xor
push
push
test
xchg
mov
jne
fadd
add
mov
pop
and
and
dec
dec
pop
add
xchg
out
test
addr16
test
adc
and
and
sub
and
push
icebp
jle
or
xor
and
dec
ret
sbb
mov
jnp
pusha
mov
adc
aas
pop
add
push
mov
cmp
test
cmp
pop
sub
fisubr
xchg
iret
inc
es
or
jno
loop
mov
ins
outs
pop
push
(bad)
sbb
mov
mov
or
mov
add
add
and
gs
mov
sbb
scas
jmp
sub
clc
or
jnp
loope
add
cs
les
pop
bnd
inc
daa
add
pop
cmp
dec
xlat
dec
pusha
scas
in
rcl
mov
inc
cmp
in
mov
push
outs
xchg
xor
dec
inc
mov
les
imul
inc
pop
pusha
sti
xor
popa
leave
jno
pop
xor
div
sbb
and
faddp
mov
enter
scas
mov
jb
mov
lock
add
or
adc
mov
sti
xchg
test
adc
dec
xor
shr
cmp
and
or
mov
cmp
loopne
lods
and
test
jmp
nop
push
inc
mov
scas
add
sbb
add
cmps
mov
pop
push
and
fldcw
je
xchg
fstp
arpl
mov
mov
sub
add
mov
xchg
outs
cmp
mov
push
jno
dec
fs
adc
or
adc
mov
cmp
or
enter
dec
daa
jge
add
daa
push
int
push
or
and
arpl
std
in
mov
mov
add
inc
pushf
repz
mov
lock
ror
add
or
fisubr
cmc
adc
rol
sbb
cmps
push
aad
std
enter
push
(bad)
sbb
push
inc
add
dec
push
inc
in
jl
pop
and
sahf
dec
push
inc
fdiv
mov
xor
lods
or
xchg
pop
xor
fs
and
mov
xchg
xchg
push
cmp
or
inc
mov
nop
mov
ja
mov
mov
push
or
ret
enter
and
adc
or
addr16
cli
je
mov
ins
xor
hlt
loopne
cmp
pop
xchg
inc
faddp
daa
adc
call
adc
out
cmp
(bad)
mov
mov
add
nop
popa
inc
pop
adc
adc
jb
sbb
add
(bad)
ror
cmps
outs
push
push
scas
addr16
push
push
shr
mov
out
cmp
add
or
dec
mov
xchg
stos
and
or
leave
test
sbb
and
pop
in
nop
jge
adc
sahf
push
out
sub
push
fwait
sbb
adc
test
push
mov
xor
sub
xchg
aas
push
xor
push
out
popa
stos
(bad)
fadd
(bad)
dec
arpl
gs
arpl
inc
cmp
sti
mov
ror
imul
add
aam
xchg
xor
loope
jne
add
push
xchg
fnstenv
add
add
inc
ss
hlt
mov
adc
cmp
xchg
xor
sbb
pop
mov
mov
and
inc
xor
popa
idiv
cmp
jg
dec
mov
and
and
stos
int
or
mov
adc
and
mov
push
inc
mov
daa
pop
or
dec
enter
inc
or
sbb
dec
cld
add
and
dec
mov
mov
ins
outs
bound
pop
xor
pop
rol
jl
outs
test
sub
sbb
sub
or
loopne
lock
or
dec
xchg
cmp
or
movs
popf
pop
sbb
adc
inc
dec
push
adc
push
loopne
test
movs
icebp
or
pop
add
adc
jne
and
jg
or
dec
push
inc
dec
inc
ret
je
int
sbb
inc
add
je
test
je
mov
sar
xchg
neg
add
les
push
bound
retf
mov
in
test
ror
pop
mov
ss
out
cmps
fst
out
pop
add
or
adc
nop
sub
ins
sub
adc
xchg
jle
add
mov
add
add
sti
sbb
rcr
mov
push
mov
fcom
pop
repnz
test
mov
inc
mov
add
fstp
fmul
scas
inc
add
dec
fild
xchg
xor
lea
std
push
add
cmp
push
daa
daa
dec
inc
cmp
pop
and
mov
mov
mov
mov
lds
jno
sbb
bndstx
sar
pusha
adc
add
mov
cmp
xchg
add
nop
retf
mov
sbb
sbb
loop
sub
inc
dec
xchg
call
pop
pop
js
lea
push
aas
imul
mov
xor
popa
cmps
mov
push
pop
imul
test
xchg
add
or
ja
or
dec
ret
fbld
lock
std
add
cmp
adc
imul
pop
test
or
pop
ss
rol
jp
add
add
mov
ds
adc
sub
js
cmps
repnz
sar
pop
adc
mov
sbb
icebp
popf
sbb
xor
add
hlt
div
jmp
adc
mov
fs
inc
ja
(bad)
mov
xor
push
jnp
(bad)
dec
pop
mov
add
push
mov
dec
mov
sbb
add
fiadd
or
pop
call
imul
pop
add
sub
pop
add
into
ins
add
xchg
adc
ret
or
dec
pop
add
add
jl
inc
xchg
aad
and
push
pop
jmp
fiadd
pop
aas
and
inc
add
data16
xchg
sbb
not
lea
cmp
rol
xor
add
cli
push
addr16
cmp
mov
add
jge
push
sbb
xor
push
cmp
addr16
sub
scas
(bad)
xor
and
add
xor
(bad)
xor
sub
fst
loop
daa
add
xchg
leave
mov
leave
push
bsf
pop
mov
cmp
aaa
div
rcr
sar
dec
lods
jge
or
test
les
and
push
lock
cdq
adc
add
fwait
jmp
(bad)
or
push
fisubr
inc
mov
fsub
inc
ins
dec
test
nop
inc
or
and
add
(bad)
addr16
inc
sub
xlat
jns
out
sbb
pop
push
adc
pop
inc
daa
pop
mov
bound
call
pop
adc
push
scas
mov
jg
bound
cmp
pop
pop
fstp
sub
add
inc
(bad)
jo
push
test
icebp
aad
add
nop
frstor
cmp
pop
push
add
add
mov
lea
inc
or
or
sub
test
push
retf
xchg
push
inc
dec
dec
pop
lods
call
adc
les
and
ss
inc
dec
stos
test
cmp
adc
(bad)
jmp
cmp
movs
sub
icebp
sbb
add
lods
lea
xchg
lea
cmp
pop
test
les
fs
sub
les
sub
into
stos
sbb
movs
mov
dec
cmp
mov
dec
mov
out
sub
adc
pop
and
mov
push
push
mov
inc
and
inc
cs
daa
push
clc
(bad)
lods
out
jo
sub
push
lock
call
and
and
lods
nop
sbb
fbld
lock
jg
retf
out
push
dec
cmp
jne
pop
mov
mov
add
xchg
sar
pop
add
adc
xor
dec
or
mov
cs
xor
xor
jbe
loopne
inc
pop
cmp
nop
mov
imul
call
and
aad
or
test
pushf
(bad)
mov
cmovae
enter
sbb
cmp
jmp
fisttp
cdq
cmps
inc
pop
adc
imul
loopne
xchg
pop
add
in
cmps
ror
pop
scas
(bad)
mov
movs
mov
and
jl
add
xchg
sbb
push
or
sbb
rcr
adc
sub
add
pop
sub
(bad)
imul
push
inc
jmp
mov
jne
jbe
out
(bad)
fisttp
mov
daa
add
or
icebp
mov
adc
clc
pop
xor
add
xchg
or
mov
inc
ds
mov
adc
loopne
mov
les
xchg
adc
nop
dec
repz
fcom
dec
cmp
jo
sahf
fisub
cmp
lds
pop
repnz
lds
jmp
icebp
push
mov
adc
adc
sbb
mov
cs
cmp
xor
aam
inc
xchg
fistp
out
lahf
add
add
jg
iret
inc
push
push
push
dec
dec
xlat
jecxz
jl
lds
adc
push
adc
cmp
loop
daa
mov
pop
mov
xor
cmp
mov
push
sbb
fst
xor
dec
cmp
mov
push
cmp
jne
mov
fstp
in
add
js
sar
loope
add
sub
test
jno
mov
pop
jo
xchg
mov
jle
pop
adc
popa
add
pop
pop
jmp
add
xor
mov
mov
hlt
call
cmp
mov
push
add
scas
nop
daa
inc
pop
mov
inc
mov
icebp
ror
mov
dec
jb
pop
ss
xor
cmp
add
movs
add
or
retf
cmp
addr16
mov
cwde
aam
add
add
sbb
pop
pop
ror
xor
xor
cmp
cmp
sahf
loope
data16
in
mov
icebp
add
jno
xchg
or
dec
adc
xchg
xlat
jo
test
adc
sbb
or
repz
adc
cli
and
or
or
test
outs
xchg
sub
scas
cmp
sub
dec
imul
pop
into
push
cmp
pop
int
call
xchg
inc
pop
aad
inc
or
mov
inc
or
jne
mov
inc
je
xor
jg
cmp
mov
xchg
test
call
sub
in
movs
scas
jl
xor
bound
cld
adc
fsubr
(bad)
int3
rcl
mov
adc
ins
push
sub
and
push
fadd
cmp
push
dec
jne
ja
push
and
push
cmp
pop
outs
adc
mov
sub
aas
and
push
test
(bad)
cwde
adc
imul
nop
pop
xor
mov
push
jnp
push
xchg
pop
dec
jg
sbb
aam
sbb
ja
cmps
inc
xor
dec
je
push
leave
fstp
and
add
fcomp
dec
or
mov
inc
push
mov
or
sub
dec
fwait
sbb
or
sub
enter
inc
sbb
and
pusha
add
inc
adc
sub
fmul
sub
and
sbb
sbb
adc
add
push
out
mov
cmp
and
xchg
add
nop
icebp
sub
jb
add
add
xchg
pop
xor
sub
adc
nop
popa
xor
fmul
xchg
xor
jmp
push
push
sub
pop
inc
cmp
ins
push
shl
adc
or
inc
popa
out
adc
jns
sbb
add
out
dec
lock
ror
adc
push
jne
es
pop
jns
arpl
adc
add
nop
inc
inc
cmp
xor
xchg
sbb
in
push
enter
xor
enter
outs
cmp
shr
xchg
cmp
sbb
sbb
aam
mov
sbb
push
add
add
push
add
or
inc
adc
adc
js
aas
(bad)
loopne
movs
pop
shl
(bad)
xlat
inc
dec
xor
xor
sbb
sbb
or
in
rcl
push
pop
adc
pop
mov
mov
inc
mov
xchg
sbb
dec
inc
and
add
movups
adc
inc
cmps
xchg
adc
cmps
jp
xor
adc
jb
sbb
and
add
xor
and
xchg
adc
lods
push
sbb
sbb
pop
sbb
in
sbb
adc
ror
dec
outs
mov
shl
cmp
sbb
mov
push
pop
mov
pop
aam
push
xor
repnz
xchg
mov
mov
inc
xchg
push
pop
inc
push
inc
push
and
sub
in
data16
outs
and
add
inc
push
or
outs
sbb
mov
mov
sub
adc
xchg
(bad)
pop
stos
sub
mov
add
xor
bound
or
outs
pop
adc
xor
push
or
pop
sti
mov
mov
sbb
pushf
xor
fcom
or
jecxz
or
sub
or
pop
popf
pop
xchg
mov
push
cmp
adc
and
lock
in
adc
cmp
push
js
inc
pop
sbb
add
ror
test
rol
or
pop
xchg
scas
or
cmp
enter
into
imul
pop
pop
psubq
mov
adc
rol
rol
in
daa
in
or
push
adc
in
nop
jo
pop
mov
fild
add
add
pop
jne
and
inc
lds
push
les
call
mov
nop
test
je
shl
mov
push
xchg
add
cmp
pop
add
cmp
mov
ret
sub
adc
inc
jl
pushf
cdq
or
add
test
daa
pop
(bad)
cs
daa
dec
push
js
add
(bad)
mov
jns
inc
enter
cmp
xor
aaa
cmps
mov
and
test
and
inc
pop
jl
sbb
mov
mov
mov
dec
mov
outs
jle
cmps
imul
jl
sbb
test
outs
mov
pop
sub
test
ret
and
push
cld
daa
out
shr
pop
push
xacquire
les
out
cmp
rdpmc
pushf
push
sbb
imul
sbb
push
inc
jnp
add
xor
or
dec
add
int3
sbb
add
loop
cwde
inc
scas
loopne
inc
shl
adc
xchg
dec
repz
jo
dec
adc
push
rcr
push
fcom
dec
je
and
pop
jne
ins
and
xor
add
mov
inc
shl
dec
and
add
push
xchg
adc
push
loopne
add
push
push
inc
fsubr
mov
fs
test
sbb
inc
xchg
add
sbb
cmps
xchg
test
pushf
loop
or
mov
test
xchg
stos
jne
or
and
leave
int3
out
and
loopne
push
add
mov
retf
sbb
cdq
and
cmp
cmp
add
add
daa
xchg
test
mov
rcr
and
loopne
shr
sbb
aas
shl
push
imul
jbe
mov
outs
push
add
mov
mov
adc
rcr
das
add
mov
aaa
push
adc
xor
jle
or
repz
mov
push
add
mov
push
repz
or
enter
xchg
or
push
cmp
add
in
clc
(bad)
push
jno
inc
cmp
cmp
add
enter
cmp
push
fld
fwait
inc
mov
pop
sub
push
or
gs
(bad)
mov
in
inc
mov
test
shl
sahf
mov
enter
and
dec
loop
fsub
imul
ret
adc
or
or
jbe
and
call
inc
lahf
and
xchg
shl
in
repz
cmps
mov
sbb
mov
or
add
push
sbb
and
jae
sub
mov
jg
push
(bad)
sub
enter
pop
and
sbb
pop
dec
inc
push
dec
stos
(bad)
fnstcw
inc
not
sbb
mov
movs
sbb
pop
and
(bad)
and
and
pop
and
sbb
inc
fsubr
mov
inc
scas
xor
pusha
mov
dec
add
stos
and
or
psubsb
xchg
pop
(bad)
imul
sbb
mov
push
and
js
sbb
jge
pop
cmps
adc
cmp
cvtdq2ps
mov
add
jp
jbe
js
sbb
jb
adc
inc
sbb
push
aaa
push
adc
push
sbb
out
pop
or
sub
jne
ret
fadd
ja
mov
mov
or
fmul
jmp
sub
xor
dec
ins
jle
xchg
pop
and
aaa
inc
xor
cmp
add
arpl
pusha
jge
xor
push
nop
pop
or
adc
inc
call
push
rcr
data16
add
mov
xchg
push
ret
pop
add
in
adc
inc
push
dec
push
cmp
adc
dec
push
jmp
je
pop
aam
cmp
sbb
enter
(bad)
pop
and
repnz
xor
or
and
ss
(bad)
adc
je
jo
mov
sti
mov
cmp
(bad)
pop
callw
pushf
cmp
or
push
jns
inc
sti
mov
pusha
stc
jae
outs
cmp
dec
mov
les
jl
rcr
and
(bad)
and
sub
push
dec
cmp
ret
add
dec
mov
cmp
mov
jbe
aam
ds
mov
(bad)
cmp
lahf
mov
ret
mov
cli
sbb
fmulp
xchg
adc
push
and
mov
sub
lahf
push
mov
adc
(bad)
push
call
mov
cmp
fimul
adc
xchg
add
pop
shl
and
adc
enter
js
js
jnp
and
jnp
jge
xor
dec
push
pop
xor
dec
inc
pusha
mov
sbb
xor
cmp
jge
clc
icebp
pop
dec
lea
bound
add
or
(bad)
(bad)
xchg
and
les
inc
or
fist
lahf
loopne
mov
mov
push
push
mov
(bad)
(bad)
or
adc
and
sbb
and
and
inc
es
add
mov
(bad)
push
inc
imul
push
ds
es
mov
loopne
add
sub
jae
push
fadd
add
mov
xor
inc
adc
push
out
aaa
jl
adc
out
cwde
or
xlat
push
sub
inc
fmul
push
push
or
cmp
jae
(bad)
and
out
mov
inc
inc
mov
push
cld
add
xchg
push
sahf
lock
fadd
lock
push
test
rol
xor
mov
mov
call
adc
rol
xor
cmp
or
or
xor
fnstsw
and
push
fistp
fs
adc
cmps
xor
inc
or
js
pusha
repnz
add
sbb
mov
jne
mov
mov
mov
push
adc
into
mov
mov
and
pusha
mov
lods
dec
jmp
mov
sbb
fsubr
xchg
adc
push
jne
cmp
xor
pop
(bad)
jmp
push
adc
add
nop
adc
mov
idiv
cmp
push
cmps
pop
ss
sub
lods
sub
adc
mov
push
dec
dec
dec
aaa
daa
add
sub
pop
ja
push
dec
icebp
call
push
mov
add
and
arpl
gs
pop
test
and
or
dec
fnsetpm(287
movs
push
xor
imul
push
xlat
mov
jnp
pop
mov
sub
fstp
call
rcl
gs
rcr
dec
ror
dec
lods
inc
popa
mov
jnp
enter
mov
mov
push
push
fistp
sub
test
xor
fnsave
add
sub
mov
js
mov
hlt
cmp
add
xchg
xor
test
jmp
aas
test
sub
or
mov
add
mov
add
push
int
sbb
stos
push
mov
xor
xlat
inc
or
push
add
cmps
or
cmp
aam
pop
retf
adc
js
mov
je
arpl
adc
xor
push
imul
add
js
retf
add
push
inc
rol
mov
or
out
pop
mov
pop
mov
pop
push
xchg
push
push
ins
call
test
(bad)
adc
pop
cmp
cmp
inc
bound
mov
mov
jae
sbb
loop
xor
lods
outs
int3
aaa
sbb
stc
mov
xor
add
call
xor
lahf
inc
stos
mov
add
adc
retf
sbb
xchg
icebp
add
adc
pop
mov
mov
adc
stos
xchg
mov
or
mov
mov
sbb
lahf
sbb
sub
inc
jo
add
sar
mov
or
mul
mov
sbb
outs
cdq
sub
js
jae
dec
inc
test
fild
add
and
jo
sub
cmp
push
and
mov
ds
leave
xor
lods
push
adc
lock
sbb
and
cwde
dec
inc
cwde
add
inc
xor
cwde
lea
and
mov
out
or
int3
adc
retf
in
or
sub
and
and
out
xchg
cmp
xchg
(bad)
dec
adc
rol
das
in
pop
sub
pop
lock
dec
push
mov
jno
movs
cmp
pop
xor
mov
push
ss
or
adc
inc
fisttp
clc
in
push
dec
push
push
mov
hlt
or
shr
rcl
cli
add
popf
push
fwait
ror
test
hlt
mov
cmp
inc
or
xlat
add
mov
dec
push
test
adc
in
test
inc
(bad)
in
ror
jmp
js
jb
pop
rcl
in
cmp
mov
mov
shl
(bad)
adc
and
cdq
aaa
adc
or
nop
sbb
fcomp
cmp
sbb
sbb
mov
jae
xchg
fdiv
or
call
inc
mov
rcl
or
mov
push
pop
lods
hlt
jne
cmp
pop
in
sbb
in
lods
popf
inc
cli
pop
add
push
lea
lea
jmp
push
test
and
jno
lods
dec
xor
cmp
mov
mov
sbb
lock
cmp
jnp
ins
and
jne
adc
pushf
fwait
retf
test
sbb
outs
cdq
mov
arpl
hlt
loope
sub
jmp
xor
fsubr
ret
xchg
in
and
sub
mov
dec
or
pop
adc
or
adc
(bad)
sub
inc
adc
jecxz
inc
arpl
jne
test
add
fs
in
mov
ja
or
add
adc
pop
inc
jae
mov
div
jnp
adc
pop
fs
cmps
pop
sub
nop
add
xlat
push
int3
jle
add
mov
pop
cld
pop
dec
inc
imul
push
pop
xchg
and
xchg
leave
inc
inc
inc
fadd
add
mov
push
push
aas
or
pop
add
ret
out
dec
repz
imul
push
cmp
dec
pop
cmp
sub
mov
outs
lds
push
add
push
or
and
and
test
mov
test
add
add
mov
les
push
or
adc
ja
or
inc
push
xor
addr16
add
add
sbb
push
push
inc
xor
mov
das
loope
or
repz
lds
adc
adc
ret
sbb
push
adc
sahf
adc
xchg
mov
mov
dec
inc
out
cli
cmp
mov
ds
push
push
sbb
adc
aaa
xor
sub
inc
test
sbb
loop
jmp
sbb
cmps
pusha
in
inc
mov
sub
pop
out
pop
sub
cmp
add
dec
(bad)
cmps
lea
int3
pusha
pop
clc
adc
mov
mov
(bad)
sub
xchg
jl
ins
call
sbb
in
dec
mov
scas
and
je
in
dec
and
jp
dec
sub
ss
fldlg2
inc
or
ins
les
fwait
push
pop
sbb
mov
adc
fucomp
dec
add
pop
daa
mov
call
dec
and
add
push
es
xchg
(bad)
pop
int3
and
adc
dec
dec
inc
mov
inc
inc
cmp
jne
test
and
add
push
push
pop
add
test
push
mov
and
inc
inc
cld
push
in
dec
das
dec
pop
mov
mov
fdiv
add
es
sbb
xchg
sub
pinsrw
js
sub
mov
pushf
pop
inc
in
push
movaps
xor
inc
mov
inc
dec
xchg
push
inc
ret
adc
mov
add
pop
pushf
iret
sbb
dec
add
inc
(bad)
in
push
das
outs
adc
hlt
inc
loope
jle
into
mov
jbe
movs
jne
cmps
and
dec
iret
sbb
iret
mov
jg
inc
xchg
or
dec
and
add
adc
xchg
fidiv
xchg
xchg
call
out
popf
and
popa
movs
pop
adc
ss
sub
add
jge
mov
sub
cmps
push
cmps
or
pop
or
push
mov
(bad)
lea
enter
mov
sbb
mov
popa
pop
adc
mov
cmps
sub
pop
stos
dec
daa
push
inc
sbb
in
lods
mov
mov
(bad)
push
imul
fidiv
dec
in
call
pop
add
or
xchg
push
pop
sbb
push
push
adc
mov
xchg
push
mov
cmp
cmp
adc
sub
inc
mov
mov
cmp
dec
jnp
test
dec
xchg
rcr
push
jo
jge
outs
push
pop
push
mov
xor
nop
adc
aas
or
pop
popf
xor
sub
adc
fs
repz
inc
mov
movs
push
adc
cld
dec
push
adc
mov
nop
ja
shl
mov
mov
adc
or
xchg
pushf
push
cmp
jp
cmps
mov
sub
jo
dec
aad
push
mov
pusha
sbb
inc
mov
cmp
jmp
xor
jns
pop
cmp
inc
sahf
mov
sbb
call
push
dec
pop
scas
mov
dec
cmp
scas
add
nop
xor
in
in
mov
push
adc
(bad)
repnz
out
inc
cwde
or
pushf
int3
outs
lock
movs
test
push
lods
data16
mov
mov
sbb
mov
enter
rcr
xchg
inc
aam
fsub
or
push
mov
cmps
loop
xor
add
sbb
mov
jmp
rcl
bswap
pop
xor
add
jnp
ror
adc
add
fst
imul
cwde
cmp
iret
shr
aaa
ror
add
mov
jb
add
outs
inc
gs
mov
mov
push
outs
pop
or
and
or
pop
stos
push
in
pop
push
scas
nop
nop
add
xchg
cwde
pushf
data16
or
push
scas
lahf
pop
push
sbb
test
xor
shl
stos
mov
(bad)
ja
rcl
jo
add
or
pop
xor
adc
not
push
sub
mov
fadd
add
add
sbb
sbb
add
ret
dec
adc
pop
in
cmp
repnz
sub
fdiv
xor
and
(bad)
fstp
cmp
test
pop
cmp
ja
adc
les
int
mov
push
pop
add
inc
add
outs
lea
fcmovb
or
jmp
mov
adc
pop
movs
rcl
int
sbb
lods
dec
fldenv
cmps
push
sub
push
mov
jle
or
ja
mov
sti
or
or
push
push
dec
aam
div
loopne
mov
dec
outs
xchg
rol
push
add
loopne
mov
xor
add
imul
dec
sbb
sbb
test
icebp
or
shr
std
jb
add
and
push
mov
sbb
push
push
add
jecxz
je
mov
xor
pop
fcom
dec
imul
add
outs
pusha
cmps
icebp
jo
adc
inc
int3
pushf
mov
mov
push
aam
fsubr
in
dec
pop
rcl
pusha
enter
push
jb
add
add
inc
or
jno
je
mov
fild
pop
ja
dec
mov
jmp
mov
mov
aaa
xchg
and
jae
loope
sbb
and
mov
mov
sbb
mov
push
add
push
and
or
(bad)
add
call
div
sbb
idiv
mov
adc
push
in
test
ror
inc
jns
mov
mov
jbe
pop
push
jo
shl
mov
les
mov
or
dec
mov
les
inc
xchg
push
and
aaa
pop
imul
or
mov
in
xchg
mov
lahf
not
dec
or
add
sti
popw
add
ret
ret
sbb
clc
fcomi
jl
jl
scas
dec
cli
or
mov
test
ins
leave
ret
sar
adc
push
sub
call
cmps
mov
in
mov
jne
popf
cmp
sub
ret
adc
aam
mov
add
loopne
lea
cmp
(bad)
data16
test
and
aad
push
cdq
mov
mov
sub
sar
mov
dec
mov
sub
ret
push
dec
or
dec
or
js
lsl
stos
pop
push
shl
mov
scas
adc
inc
sbb
loop
out
mov
inc
mov
sub
mov
add
or
in
jb
inc
ficomp
(bad)
clc
jge
push
scas
jp
aas
jge
add
pop
or
mov
and
leave
add
mov
daa
sti
and
push
ins
cmps
ins
shl
mov
dec
push
push
dec
jecxz
cwde
mov
cdq
test
adc
int
fnstcw
nop
mov
inc
in
data16
inc
cmp
mov
fisttp
imul
ins
fs
addr16
push
ret
pop
ins
jg
pop
adc
push
adc
jb
fcmove
mov
cmp
xchg
ror
xlat
int3
push
and
cmp
rol
xchg
add
cmps
inc
ror
inc
test
and
dec
jae
inc
add
lods
cs
leave
xchg
mov
test
pusha
inc
rol
imul
and
push
fmul
or
in
and
fsubr
adc
sub
mov
sbb
mov
mov
icebp
arpl
pop
mov
or
dec
xor
inc
pusha
or
xchg
adc
jo
outs
je
or
pop
mov
shr
ds
(bad)
pop
pop
inc
int3
pop
addps
dec
int
fcomp
jbe
pop
or
fcomp
pop
and
mov
dec
pop
xor
pop
sbb
sbb
push
adc
sti
add
dec
pop
cs
add
lea
outs
sub
push
or
cmp
inc
adc
inc
or
outs
or
jnp
mov
adc
xor
pushf
not
jmp
fidiv
adc
lock
pop
and
or
test
add
add
add
add
add
add
loopne
cdq
fisubr
pop
test
pop
cli
in
xor
sbb
(bad)
adc
js
mov
inc
sbb
inc
inc
pushf
movs
mov
lea
pushf
push
push
enter
inc
lods
adc
or
dec
mov
outs
xor
inc
xchg
add
pop
or
stc
mov
pop
test
ror
test
cld
mov
retf
add
cdq
out
xchg
inc
ret
je
repnz
pop
ins
add
push
enter
mov
(bad)
aaa
ins
movs
dec
(bad)
loop
push
dec
ret
dec
fmul
enter
cmp
dec
mov
and
or
add
in
sub
pop
ins
rol
dec
cmp
mov
pop
xor
cwde
test
ret
jno
sub
neg
(bad)
ss
cmp
jmp
pop
xlat
and
iret
pop
add
fs
add
les
dec
inc
inc
leave
dec
cmps
rcl
xchg
jl
dec
inc
push
aam
shl
and
xchg
inc
xor
imul
mov
sbb
xor
xchg
popa
inc
aas
fwait
xchg
test
stos
inc
cmp
adc
pop
rol
cmp
xor
add
pop
cmp
out
mov
pop
pusha
in
or
pushf
sub
add
aad
lock
sbb
sbb
adc
lods
dec
test
das
ja
xor
and
jge
or
or
or
rcl
and
push
setle
push
adc
out
nop
cmps
and
movs
pop
pop
cmps
adc
dec
add
inc
jb
or
cmp
ret
xor
cwde
cs
pop
mov
out
mov
jo
aas
rol
das
push
dec
xlat
xor
pop
xchg
inc
xlat
jns
add
sbb
inc
test
pop
or
mov
xchg
or
fadd
dec
ss
and
mov
jnp
rol
and
push
and
inc
mov
xchg
inc
jge
inc
mov
jb
pop
pop
mov
sbb
stc
mov
mov
inc
pop
add
es
dec
call
sbb
int
pop
sbb
sub
adc
xor
inc
int
cs
pop
mov
int3
jge
les
push
fs
or
cwde
adc
push
ds
and
mov
mov
nop
add
xchg
popa
xchg
or
ins
dec
push
pop
push
xor
ds
and
nop
inc
rcr
inc
bound
bound
pop
nop
xchg
gs
mov
sbb
div
add
ror
pop
and
test
(bad)
bound
nop
arpl
arpl
and
test
push
pop
(bad)
add
add
mov
nop
arpl
call
inc
popw
sub
pop
or
pop
and
adc
fwait
clc
sub
inc
jl
mov
push
dec
xor
ja
rcr
sbb
inc
outs
and
ret
jns
mov
jno
xchg
sbb
inc
movs
lea
ss
or
or
jg
dec
lock
pushf
jne
push
mov
push
jbe
push
sub
xlat
mov
rol
pop
and
xor
sbb
pushf
add
jge
mov
xor
outs
add
ins
pop
mov
mov
das
xchg
add
mov
push
bound
cmp
sbb
pop
ret
lea
rol
inc
mov
or
push
sub
pushf
sub
lock
mov
add
xchg
push
xchg
lods
imul
dec
lea
and
and
xchg
data16
mov
pop
ss
pop
in
jbe
ins
aam
call
inc
fimul
pop
xor
shl
repnz
fs
enter
and
fisubr
stos
loopne
je
int3
adc
mov
pop
dec
sbb
and
xor
jmp
dec
imul
mov
mov
xor
add
push
and
aam
push
aaa
fs
push
add
es
push
rol
push
fs
das
pushf
xchg
add
mov
sbb
push
cmp
sets
sbb
and
cmps
or
adc
fs
sbb
add
mov
ja
(bad)
cmps
lods
push
cmp
dec
cmc
push
mov
fld
imul
(bad)
sbb
sbb
fcom
fs
popw
pusha
out
mov
js
sbb
mov
cdq
jnp
js
cmp
push
mov
pop
js
pop
adc
pushf
es
fnsave
fidiv
shr
pop
inc
cmps
pusha
ins
mov
add
cmp
jmp
inc
dec
push
adc
shl
xor
fucomi
add
std
pusha
fimul
jle
clc
push
lods
jl
fimul
sbb
or
xchg
push
dec
rol
call
cmp
sbb
out
cmp
inc
and
add
les
repz
aam
sub
dec
adc
cwde
sub
dec
rcl
inc
data16
xchg
and
xchg
imul
je
les
in
and
mov
clc
(bad)
push
push
test
call
jns
(bad)
pop
gs
push
jae
pop
ins
cmp
cmp
mov
(bad)
add
mov
push
mov
cmps
or
and
jecxz
(bad)
mov
inc
sub
sub
and
sub
test
and
imul
sub
and
xor
add
adc
das
sub
mov
jnp
add
ins
jmp
adc
pop
sbb
sbb
inc
out
pop
adc
jnp
mov
push
jb
push
enter
dec
pop
xchg
in
sbb
xor
stos
adc
je
mov
xor
adc
adc
arpl
jmp
mov
push
push
sub
cdq
dec
ins
in
dec
dec
push
or
test
jo
sbb
mov
cmp
outs
sub
inc
cmp
ss
sub
pop
(bad)
cwde
loopne
push
cld
mov
cdq
cmps
dec
jne
jo
inc
rol
jmp
icebp
mov
jb
sub
push
test
or
add
and
adc
jbe
popa
inc
fs
mov
loopne
mov
popa
ins
push
and
scas
imul
push
ret
sar
sbb
rcr
out
(bad)
cmp
or
in
jno
(bad)
outs
test
jp
imul
imul
(bad)
push
cmp
je
or
je
xor
add
or
movs
sbb
mov
inc
or
pushf
or
or
fs
mov
push
in
das
sbb
sbb
push
gs
sub
sbb
call
pusha
xlat
mov
xor
or
popa
or
or
pop
arpl
push
dec
or
imul
push
jo
lods
out
popa
and
mov
icebp
stos
and
pop
mov
xor
xor
lods
lahf
add
xchg
iret
pop
push
dec
dec
dec
inc
dec
xchg
lods
cwde
test
mov
and
xor
aaa
dec
inc
dec
dec
adc
push
or
mov
(bad)
mov
cmp
add
lock
mov
dec
jno
hlt
sbb
xor
out
cmp
jne
push
and
xchg
xchg
push
adc
jg
push
adc
push
and
cmp
and
not
adc
sbb
push
pop
lock
add
jno
jno
ins
fimul
test
add
pop
jo
sub
int3
test
mov
adc
push
sbb
xor
mov
sbb
jo
push
lock
push
push
pusha
leave
push
jb
jmp
shl
in
sub
cmp
sub
stc
in
enter
jmp
ror
inc
jg
cdq
add
jle
jb
mov
push
mov
je
adc
push
or
mov
sbb
daa
ret
cs
inc
push
div
pop
jae
clc
sbb
add
xor
fsubr
rcr
inc
(bad)
rol
jbe
scas
mov
sbb
pushf
sub
xlat
add
add
sub
test
icebp
cmp
ss
push
ins
dec
(bad)
sbb
add
inc
sub
ins
imul
sub
popa
dec
add
fwait
ret
push
into
pop
rcl
adc
adc
test
or
inc
je
mov
bound
ds
pop
sub
std
add
fiadd
fwait
push
pushf
pop
loopne
imul
push
dec
push
test
push
add
popf
ss
dec
mul
push
mov
in
sub
hlt
idiv
adc
fs
lods
pop
mov
jmp
cmp
test
mov
in
int3
push
jl
adc
adc
and
xchg
pop
clc
inc
lock
jb
add
inc
sahf
push
sub
xchg
sahf
jo
adc
in
repnz
jbe
jbe
jne
mov
pop
nop
sahf
pusha
mov
and
ja
adc
and
adc
sub
clc
inc
mov
jo
sub
mov
xchg
inc
push
dec
push
pop
push
jl
dec
xor
jb
push
call
push
leave
dec
pop
test
adc
sbb
dec
pop
xor
inc
sbb
mov
push
bound
push
push
not
mov
push
xor
mov
and
mov
sbb
and
sbb
lock
dec
push
lods
mov
mov
xor
xchg
test
pop
sub
adc
and
push
jbe
or
jne
and
push
or
fs
fst
les
dec
ret
(bad)
ins
popa
ins
arpl
outs
mov
ja
fdivr
imul
add
add
lods
fwait
test
fmul
or
jns
xlat
mov
or
cmps
sar
sar
je
or
add
outs
push
popa
in
xor
or
inc
add
add
mov
mov
xor
cmp
shl
data16
aas
les
cmps
pop
cwde
push
mov
adc
or
jnp
dec
mov
adc
enter
adc
pop
inc
or
pushf
add
or
and
(bad)
out
div
dec
push
or
enter
mov
add
mov
add
lea
pop
jno
dec
or
dec
xchg
mov
or
sbb
push
sbb
mov
add
jae
lea
or
pop
test
or
imul
inc
jb
iret
add
xchg
(bad)
enter
sahf
seto
add
add
pop
pop
adc
cmps
inc
and
icebp
mov
xor
ret
imul
pop
mov
mov
fcomp
push
push
or
outs
ficomp
sbb
mov
fwait
adc
push
stc
jbe
mov
add
xchg
fwait
enter
add
sub
or
adc
or
ins
loop
xor
jge
mov
or
dec
lds
xchg
add
loopne
add
test
pop
in
pushf
adc
test
imul
push
inc
int3
out
mov
xchg
ja
adc
ins
inc
sub
add
jl
dec
gs
or
push
add
stos
clc
nop
sub
mov
or
push
ja
push
lds
fisttp
add
ins
jne
xor
add
or
fnsave
cmp
jbe
pop
idiv
or
ja
and
or
xchg
add
ins
fwait
mov
jae
push
xchg
inc
xor
or
mov
into
(bad)
fiadd
mov
dec
out
bound
and
test
adc
push
push
inc
enter
or
xchg
xchg
xor
lahf
fs
es
dec
cmp
and
add
retf
mov
mov
mov
out
test
scas
sub
test
pop
imul
add
enter
inc
inc
and
inc
push
push
adc
or
add
aas
cmp
mov
add
push
add
inc
add
add
(bad)
inc
or
pop
add
or
or
xor
or
or
sbb
cmp
inc
add
pop
shl
in
(bad)
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
(bad)
(bad)
fdivrp
(bad)
fdivr
(bad)
jmp
(bad)
fcmovb
fdivr
xlat
call
call
call
call
call
clc
mov
call
dec
push
into
dec
dec
dec
mov
cmp
inc
repnz
xor
xor
fidiv
xor
test
aam
push
lods
cld
imul
aam
imul
ins
pop
imul
push
dec
push
lock
push
mov
data16
inc
sbb
sub
rol
sbb
daa
out
ins
int
fs
xor
jg
ret
loopne
retf
in
mov
push
fisttp
pop
shl
(bad)
mov
ds
add
pop
les
ds
cmps
(bad)
mov
movs
test
in
cwde
out
sub
mov
mov
ins
and
pop
int3
shl
mov
ins
int
or
pop
retf
dec
mov
imul
int
or
push
dec
int3
mov
push
fcmovbe
adc
nop
pop
pop
sbb
movs
aam
jg
fiadd
test
jns
sahf
sbb
stc
sti
fdivr
sbb
popf
rol
and
add
repz
inc
jecxz
dec
dec
bound
dec
enter
js
je
cmp
add
sbb
icebp
loopne
inc
out
sar
jno
push
fadd
or
bound
adc
in
test
les
or
and
xchg
je
(bad)
movs
pop
dec
shl
movs
shl
xchg
in
mov
mov
and
jo
and
shr
test
or
adc
adc
push
pop
ror
popa
xchg
pop
stos
mov
loop
sub
imul
mov
fsub
movaps
xor
imul
or
inc
pmaxsw
pop
pop
inc
dec
jb
push
dec
popa
je
add
inc
fcom
push
test
in
lock
addr16
sub
cmps
xchg
mov
push
and
lods
outs
pop
jo
push
inc
pop
adc
push
nop
mov
(bad)
jmpw
retf
mov
add
inc
mov
pop
je
inc
loopne
mov
outs
sbb
aam
or
call
gs
mov
or
paddusb
inc
aad
mov
jae
js
mov
inc
(bad)
into
in
sbb
sub
dec
imul
ins
imul
add
je
add
cmp
add
mov
or
xor
pop
ret
xchg
sbb
mov
jo
fwait
or
mov
mov
cmps
rcl
ins
mov
jmp
pop
fadd
mov
push
inc
cwde
es
pop
aaa
mov
(bad)
loope
clc
fidivr
push
loop
les
add
cmp
push
test
fdiv
das
inc
adc
icebp
pop
ja
or
add
add
add
adc
das
add
add
mov
fwait
test
test
adc
sbb
or
jae
add
mov
mov
loopne
xor
mov
mov
mov
inc
sbb
call
mov
mov
ud0
and
and
mov
mov
mov
add
push
mov
xor
mov
xchg
xor
loope
out
dec
sbb
(bad)
(bad)
inc
inc
inc
inc
inc
cmps
mov
ret
std
(bad)
mov
or
mov
mov
mov
mov
out
cmc
movs
xor
repz
shl
inc
adc
ins
call
pusha
mov
call
inc
sbb
ins
push
adc
xor
movs
pop
dec
and
mov
push
lods
xor
js
mov
imul
xor
mov
clc
ds
cmps
push
call
data16
and
enter
xor
les
shl
imul
mov
or
jns
cmps
imul
daa
pop
jo
ins
fisub
cmp
pop
movs
sub
pop
repz
sbb
pop
sub
cmps
lock
das
pop
out
mov
pop
hlt
mov
out
fs
or
push
mov
clc
mov
in
cmp
xor
mov
sbb
cld
ds
pavgb
test
cs
sub
push
scas
add
cs
popa
test
rcr
adc
mov
pop
ins
push
je
mov
lahf
jne
aas
inc
add
mov
test
jmp
inc
popa
mov
adc
mov
das
in
ret
adc
cld
(bad)
loopne
fs
and
xor
sbb
out
and
rol
inc
fbld
xor
sbb
int3
dec
jo
push
lds
fmul
add
dec
sbb
into
leave
mov
inc
das
push
(bad)
scas
pop
nop
or
mov
xor
dec
push
sbb
lods
inc
scas
sbb
ficom
inc
inc
rcl
ins
inc
pop
push
ins
addr16
push
push
movs
mov
div
pop
push
aam
cld
inc
and
mov
pop
and
jbe
sbb
pop
repnz
or
xchg
or
inc
mov
push
retf
cmps
sub
mov
add
sahf
outs
inc
into
add
mov
inc
mov
or
pop
sub
xchg
xchg
push
add
rol
pop
int3
mov
mov
push
cmp
or
pop
and
mov
push
or
or
je
dec
sahf
(bad)
pop
cli
inc
or
ins
(bad)
lock
and
dec
lods
push
je
mov
add
pop
sub
mov
imul
pop
nop
arpl
dec
jp
mov
inc
dec
inc
movs
xchg
mov
or
ret
mov
mov
add
mov
sahf
loope
mov
push
loope
push
retf
mov
cld
pusha
(bad)
rcl
xor
stos
sub
outs
pusha
test
pushf
ins
mov
cdq
or
or
sub
fnstenvw
xor
cdq
mov
jg
xchg
fild
adc
sbb
adc
sub
jne
mov
daa
ret
mov
xor
cmp
add
and
or
jb
mov
or
adc
pop
jb
sbb
sbb
xchg
cmp
aam
cdq
jbe
je
int3
xor
push
inc
mov
mov
imul
lea
sbb
jl
xor
push
iret
dec
cs
loopne
mov
hlt
sbb
lock
sar
rcl
data16
scas
iret
push
pop
pushf
push
lods
ins
pop
push
add
test
cmp
repz
push
push
mul
out
inc
mov
lds
js
add
mov
jne
push
push
add
fmul
test
enter
pop
(bad)
fld
add
adc
lea
sub
sbb
in
sbb
mov
mov
add
sub
mov
lock
mov
push
push
and
sbb
mov
add
test
dec
enter
mov
jmpw
inc
mov
sbb
push
cmp
or
push
push
lock
or
outs
sub
or
adc
test
imul
adc
cmp
adc
jns
mov
loopne
jge
cmp
icebp
dec
js
test
push
loopne
call
pop
dec
or
push
pusha
cmp
gs
mov
and
jb
fadd
or
daa
xor
pop
ror
adc
loopne
inc
ja
pop
add
and
push
nop
dec
loopne
xchg
das
push
push
inc
push
inc
and
jo
daa
or
add
add
ins
popa
clts
add
dec
outs
and
fisubr
pusha
xchg
daa
dec
push
jo
imul
mov
(bad)
or
popa
push
mov
xchg
adc
js
add
mov
or
jl
sub
pusha
mov
and
xchg
outs
outs
adc
mov
or
adc
neg
cwde
mov
sbb
cmps
jecxz
iret
jmp
inc
adc
inc
retf
dec
imul
cmps
outs
outs
xchg
lea
les
aam
and
pop
lock
cmp
xor
nop
push
mov
into
mov
mov
push
mov
and
lea
test
push
mov
pop
add
mov
in
aas
sbb
push
xor
scas
mov
inc
xchg
and
pushf
neg
mov
push
adc
nop
dec
pop
clc
mov
mov
pop
in
mov
mov
dec
imul
dec
cmp
and
rep
call
in
xchg
xlat
xchg
and
mov
outs
mov
pop
mov
add
xlat
add
hlt
adc
push
adc
push
mov
mov
adc
in
data16
add
xor
jnp
jg
sub
jne
mov
lds
pop
adc
cld
and
and
or
out
ins
adc
add
push
or
js
test
cmc
sbb
inc
and
gs
xchg
or
adc
adc
pop
xchg
gs
sbb
and
and
pop
xchg
gs
sub
dec
xchg
xor
scas
sub
ss
cmps
add
or
pop
fidiv
shl
and
in
out
scas
pushf
add
sar
inc
sub
(bad)
scas
inc
or
je
pop
mov
adc
push
dec
je
int3
hlt
nop
les
gs
data16
inc
pop
cmp
mov
in
jmp
mov
inc
not
jne
mov
ror
add
xor
add
lds
sti
sbb
mov
cmps
add
out
add
test
(bad)
or
scas
out
pop
jmp
or
aam
add
add
dec
lock
cmps
and
cmp
ss
or
and
sub
push
nop
test
enter
fs
loop
cmp
lock
mov
mov
popa
and
inc
les
add
inc
cmp
daa
inc
test
inc
jmp
inc
mov
add
dec
mov
sbb
xlat
xchg
pop
inc
push
mov
dec
fbstp
dec
iret
push
dec
ret
and
out
mov
push
pop
jp
es
or
pop
fwait
jns
neg
jp
push
mov
aas
cmp
pop
add
add
sbb
lea
jae
dec
dec
cs
mov
sbb
mov
or
inc
inc
push
sbb
int
pop
adc
jo
out
pushf
pushf
jbe
std
add
or
push
sbb
shl
ins
ins
push
dec
jnp
inc
xchg
mov
mov
pop
pop
dec
add
mov
push
addr16
mov
pop
outs
add
xchg
enter
or
test
mov
je
or
scas
or
xchg
popa
(bad)
or
imul
popa
fisttp
or
push
dec
movntps
mov
and
inc
pop
xor
or
adc
inc
leave
pop
jno
out
add
js
in
neg
xchg
inc
inc
push
cmps
add
fucomp
adc
(bad)
sbb
or
fld
jo
xchg
pop
(bad)
lds
xor
push
pop
xchg
mov
mov
cmp
in
sahf
dec
dec
(bad)
and
push
push
sbb
test
aad
(bad)
popa
sar
jb
mov
inc
adc
jmp
cmp
jne
lea
dec
mov
jecxz
cmc
sbb
xlat
(bad)
fmul
pop
push
jmp
scas
adc
push
shr
ret
sahf
in
mov
jb
adc
add
adc
and
mov
jae
sub
mov
cmp
pop
adc
rol
sbb
sbb
int
movs
in
sub
popa
jo
xchg
sti
sub
sub
test
jbe
clc
lods
inc
fcomp
add
hlt
lods
push
stos
pop
(bad)
popa
adc
in
inc
add
xchg
imul
push
mov
clc
dec
ret
sbb
les
in
mov
jle
sub
add
clc
cmp
cmp
je
inc
mov
push
bound
xchg
add
inc
cs
pop
and
mov
push
in
(bad)
ret
lea
sbb
adc
test
clc
test
adc
push
sub
mov
mov
iret
xor
mov
call
or
adc
sub
pusha
mov
xor
adc
sahf
or
js
xchg
ins
cmp
jp
jno
imul
loope
cmp
aas
sbb
pop
cmp
mov
jle
inc
add
(bad)
jns
and
push
dec
pusha
adc
sti
add
repnz
fmul
xchg
mov
push
inc
dec
jne
movs
nop
and
or
test
mov
int
mov
and
adc
jo
sbb
pushf
in
adc
dec
push
(bad)
cmp
lds
adc
pop
and
xchg
mov
dec
shl
jle
push
and
pop
inc
int
enter
fiadd
and
sbb
xchg
nop
dec
mov
movs
push
and
adc
call
das
mov
sbb
and
push
fistp
ret
mov
lods
or
leave
rcl
cli
xchg
jmp
fstp
pop
ins
mov
fxch
mov
ins
pop
inc
xchg
loopne
sub
lea
jae
mov
outs
jb
pushf
or
leave
cld
ret
mov
ret
mov
fidiv
sbb
push
adc
sub
add
sahf
js
or
xor
imul
or
ins
mov
xchg
jo
jl
call
jae
mov
popa
or
jmp
sar
hlt
ficomp
je
out
aas
test
jno
out
xchg
mov
ds
ret
pop
xor
or
sbb
mov
lds
(bad)
imul
mov
push
mov
(bad)
out
lods
sub
shl
inc
add
mov
repz
mov
mov
adc
cmp
sbb
push
cmps
es
xchg
adc
out
xchg
push
fsubr
cmp
cs
aaa
int3
not
mov
lea
adc
add
mov
(bad)
jmp
xchg
cld
add
jnp
sbb
add
cmp
je
xlat
lea
and
mov
dec
out
cmp
mov
xlat
adc
popa
pop
push
add
retf
sub
jae
ins
mov
xor
inc
es
inc
sub
test
sub
imul
push
das
push
adc
and
leave
int3
sahf
mov
mov
nop
test
inc
sub
add
and
and
(bad)
cmp
mov
or
jmp
inc
jmp
(bad)
jle
dec
scas
and
mov
pop
pop
cmp
movsx
inc
cdq
inc
test
in
pop
sub
push
sbb
push
sahf
sbb
and
cmp
imul
cs
loopne
pop
pop
and
in
popa
xor
cmps
or
inc
push
jmp
push
jl
add
dec
or
add
movs
push
pop
fwait
adc
ret
jmp
sub
or
and
xor
xor
xchg
call
fcmovb
and
push
test
adc
sub
ss
aam
dec
mov
aad
test
xlat
loopne
dec
sub
pop
inc
clc
loopne
js
or
stc
imul
adc
mov
dec
daa
adc
clc
xor
icebp
inc
jns
and
add
loopne
and
fnsave
adc
cli
imul
loope
div
mov
sub
adc
mov
test
sbb
jmp
pop
test
cmp
outs
jmp
sub
aad
xor
or
or
nop
cdq
inc
add
enter
shl
daa
adc
mov
test
jae
xor
adc
xchg
push
retf
(bad)
push
mov
xor
pusha
cmp
pushf
outs
movs
daa
outs
sbb
sub
and
div
dec
xchg
inc
xchg
jecxz
mov
ja
nop
mov
jo
pop
rol
or
inc
push
fst
out
in
loop
pop
cmp
sub
out
jno
popf
and
dec
outs
inc
aas
int
inc
dec
jmp
jmp
cmps
outs
call
inc
jl
call
in
or
add
fist
sub
add
inc
inc
ss
mov
pop
jno
dec
push
sbb
or
dec
or
sub
inc
push
xchg
xchg
or
shr
cmp
or
ret
ror
sbb
or
mov
jb
aas
outs
sbb
aas
push
pop
or
xor
mov
xchg
push
repz
inc
mov
add
mov
aas
int3
test
cmps
call
cmp
dec
add
loope
mov
sub
inc
or
enter
cmp
movs
js
in
xor
dec
jmp
or
adc
sub
push
in
cmp
mov
xlat
pusha
xchg
test
cli
jmp
and
or
mov
js
push
dec
lea
push
loope
push
ins
adc
adc
ror
mov
add
arpl
(bad)
push
pop
test
lods
hlt
outs
je
push
int
push
js
adc
push
cmp
add
ins
sub
add
xor
test
cmp
icebp
or
cmp
rcl
(bad)
sub
out
sub
cmp
pop
ret
pop
pop
ret
mov
add
imul
sub
push
push
jmp
cli
sub
sbb
adc
cmp
add
add
(bad)
lds
nop
call
and
cli
std
(bad)
push
and
xor
not
jge
fld
cdq
jbe
mov
mov
ins
inc
imul
jo
adc
rol
dec
inc
cdq
xchg
jecxz
fwait
(bad)
xchg
ret
sub
daa
xor
adc
mov
xchg
adc
inc
jno
js
and
cdq
daa
sbb
mov
lahf
fmul
adc
nop
dec
cmc
push
leave
add
sub
es
mul
add
jmp
cmp
xlat
and
mov
add
pop
jnp
gs
add
pop
or
or
xchg
pop
mov
push
(bad)
je
bound
int3
hlt
es
xchg
cmp
sub
push
or
adc
lahf
jo
movs
cmc
lock
mov
dec
stos
and
out
and
ja
and
test
mov
aas
jp
xor
mov
pop
das
jmp
movs
mov
or
dec
jne
nop
je
adc
jb
stos
dec
mov
pop
sbb
push
nop
addr16
ins
and
cs
push
ins
outs
or
or
imul
popf
mov
xor
or
iret
pop
xor
mov
neg
or
or
mov
retf
lods
outs
push
sub
dec
sub
inc
iret
cmp
rcr
push
pusha
mov
rcl
xchg
nop
xchg
nop
mov
nop
sub
sub
jge
and
jae
xor
pop
pop
ja
push
add
sub
rol
outs
push
pusha
retf
inc
(bad)
shl
cmp
sbb
and
xlat
ret
sub
add
xchg
mov
push
xor
dec
mov
arpl
pop
pop
inc
adc
lea
adc
push
iret
pusha
jp
les
popa
and
push
adc
xchg
or
adc
or
mov
xor
or
dec
retf
aaa
mov
pop
jmp
cmp
je
mov
test
jbe
add
mov
jle
jge
cmp
push
or
mov
mov
adc
je
mov
jbe
cmp
cmp
pop
je
nop
in
addr16
push
or
add
push
push
mov
pop
or
movs
xchg
mov
jae
dec
jbe
pusha
and
rol
and
js
les
cmp
je
push
inc
sbb
cmp
push
in
mov
test
lods
pushf
inc
aam
inc
mov
shl
inc
pusha
dec
sbb
xor
in
aam
data16
pop
and
pop
leave
arpl
mov
jae
and
jnp
mov
divps
jecxz
(bad)
push
pop
mov
add
or
dec
or
es
ror
and
(bad)
mov
fwait
fs
addr16
and
ficom
jl
sbb
dec
jae
outs
aam
mov
mov
cmp
gs
or
jmp
adc
mov
mov
sub
pusha
addr16
loope
movs
sub
xchg
cmps
rcl
push
(bad)
cmp
and
ins
pop
or
push
jnp
mov
push
mov
adc
imul
mov
push
or
and
mov
scas
xchg
inc
ret
or
mov
pop
pop
dec
je
sbb
xchg
jne
cmp
js
xchg
scas
add
cld
mov
mov
cmp
cwde
adc
xor
mov
mov
aas
int3
aad
js
addr16
mov
sub
(bad)
and
ror
mov
push
repz
mov
enter
add
inc
mov
jns
sbb
xor
jmp
gs
adc
mov
mov
inc
push
add
pop
pop
pop
sbb
sbb
adc
push
pop
add
jp
push
xor
inc
adc
outs
inc
aas
push
retf
mov
sbb
stos
cmc
(bad)
xlat
sbb
and
ja
mov
cmps
mov
xchg
mov
xor
aas
mov
push
dec
and
adc
cmp
bound
jae
in
add
ret
and
aad
jmp
push
jns
inc
mov
sbb
nop
pop
punpckhbw
or
fcomp
test
pop
sbb
push
sbb
adc
(bad)
pop
inc
cmp
xor
sbb
add
mov
ret
fild
test
sar
xlat
push
rcl
xor
cmp
pop
pop
xchg
out
xor
adc
dec
mov
push
aaa
push
cmps
xchg
adc
lds
xor
leave
pushf
xor
push
add
popa
aas
fcmovu
mov
push
and
xchg
xor
lods
mov
xchg
cmp
test
arpl
repz
or
lods
cs
push
fldcw
loopne
cmp
mov
call
or
xchg
sbb
imul
push
out
dec
add
mov
xor
inc
pop
add
loope
or
shr
sub
retf
push
xor
or
add
out
mov
cs
adc
sbb
xchg
clc
cli
into
outs
ror
dec
dec
push
test
adc
aaa
das
xor
in
jmp
movs
xchg
cmc
adc
push
arpl
cdq
outs
xor
leave
pop
or
fs
and
cmp
jecxz
adc
cmp
jne
add
test
xor
jne
sub
cmps
push
jo
and
test
xchg
jo
ret
mov
nop
jo
stos
mov
fidiv
in
(bad)
scas
pusha
dec
xor
mov
ficom
or
dec
sub
fistp
xor
out
ret
jmp
mov
xchg
jl
adc
pop
push
(bad)
sti
enter
dec
push
pop
dec
add
icebp
push
inc
imul
mov
and
push
aas
sahf
fidivr
jb
inc
ja
jnp
pcmpgtw
inc
jne
test
or
or
gs
dec
and
shr
dec
cmp
inc
mov
shl
cs
sbb
retf
inc
add
add
push
mov
xor
ja
cmp
mov
sub
mov
mov
test
cmp
cmp
xchg
es
add
scas
retf
adc
adc
push
xchg
mov
dec
das
inc
push
dec
rol
adc
out
pop
popf
add
or
dec
leave
fild
pop
mov
dec
mov
mov
imul
imul
in
adc
cmp
and
(bad)
xchg
inc
adc
jle
popa
xchg
sahf
aaa
lods
ins
scas
push
pop
adc
pop
fadd
das
push
dec
xor
or
nop
std
das
xchg
test
test
inc
loopne
outs
shl
mov
mov
push
inc
dec
add
sbb
xchg
dec
add
xor
pop
mov
inc
or
sub
icebp
lea
outs
gs
add
pop
cmp
shr
cdq
pop
sub
pushf
xor
fisttp
and
adc
xor
sbb
ds
add
xchg
lock
sub
dec
shl
xchg
jo
jle
in
scas
popf
push
loope
fdivr
clc
dec
and
mov
jno
and
push
bound
xchg
imul
sar
mov
cmc
outs
repnz
cmp
and
inc
or
mov
cwde
ins
push
(bad)
loopne
and
mov
add
ret
mul
(bad)
add
push
ror
mov
lea
push
pop
mov
or
outs
dec
add
(bad)
adc
dec
dec
jno
adc
lea
daa
ret
cmp
inc
add
adc
and
fwait
xor
xchg
push
ss
cmp
inc
arpl
es
enter
jae
pop
loopne
add
es
pop
shl
add
push
or
div
hlt
pop
add
movs
retf
add
mov
mov
into
mov
or
or
(bad)
shl
test
call
scas
add
or
sbb
and
pop
mov
(bad)
shr
movs
push
add
mov
sbb
xchg
jb
add
xchg
mov
sub
inc
mov
sub
and
jo
inc
and
and
cmp
jp
sub
pop
mov
mov
sbb
sub
div
dec
mov
jne
and
ss
or
mov
or
loopne
loope
ds
mov
push
sub
daa
ret
aaa
jmp
cmp
lock
je
add
xor
jle
sbb
xor
jbe
rol
mov
lods
adc
mov
aaa
outs
inc
dec
dec
xchg
adc
inc
stos
rcr
popw
sbb
loopne
movs
add
push
pop
xor
mov
enter
mov
xchg
dec
adc
adc
add
int3
in
add
pop
ret
fwait
dec
push
jo
add
ins
sub
adc
add
outs
popa
into
loopne
stos
pusha
rcr
test
sbb
add
xor
test
(bad)
loop
inc
push
nop
xchg
pop
push
xor
xor
pop
push
cmp
arpl
or
mov
popa
fsub
hlt
pop
sub
mov
jmp
pop
pop
add
add
addr16
je
jecxz
mov
and
mov
(bad)
xor
ret
test
je
xor
add
or
inc
add
addr16
pop
sub
(bad)
sbb
adc
out
sbb
and
push
ret
int
(bad)
jl
dec
call
popa
popf
inc
int3
xor
cmp
movs
retf
sbb
or
sbb
cmp
sbb
mov
scas
pop
cmp
dec
ret
xchg
xor
test
jmp
push
in
sbb
pop
rol
cmp
je
pushf
int
test
xor
mov
mov
out
pop
addr16
adc
or
cmp
pop
push
add
mov
sbb
aaa
and
jp
ret
daa
push
or
nop
test
cmps
(bad)
jge
lock
jo
add
pusha
adc
pop
push
iret
sbb
xchg
adc
mov
lea
or
sbb
(bad)
pop
xor
sub
sub
in
loop
dec
mov
aad
loop
lahf
in
(bad)
pop
sbb
outs
or
sbb
out
inc
mov
shl
das
outs
dec
data16
sti
pop
je
mov
mov
ja
fisubr
or
pop
push
pop
adc
push
popa
jp
(bad)
sahf
mov
arpl
mov
xchg
or
jecxz
cs
push
add
loopne
shr
aaa
mov
mov
pmaxsw
xor
das
pop
je
mov
lock
and
adc
aad
in
rcl
cdq
sbb
mov
mov
mov
dec
and
and
and
xchg
mov
mov
or
pop
xor
rcl
xchg
dec
leave
pop
or
jp
dec
leave
pusha
cmp
sar
add
lods
aam
push
not
mov
xchg
add
or
lahf
add
daa
(bad)
popa
dec
jmp
push
xchg
out
sub
xchg
inc
cld
cmps
stc
ins
mov
(bad)
push
mov
or
add
xor
mov
xor
add
jmp
pop
mov
lds
rol
jle
stos
and
leave
je
cmp
sub
not
mov
push
aam
adc
and
(bad)
retf
pop
adc
test
outs
dec
imul
dec
dec
repnz
cmp
inc
sbb
or
push
(bad)
daa
test
dec
or
nop
lods
mov
loopne
clc
retf
mov
dec
dec
cdq
cmp
clc
inc
cmp
test
add
fdivr
add
jns
push
or
in
sbb
push
pop
or
sub
jg
inc
aam
pop
aam
mov
jbe
add
shr
sbb
jne
call
pop
or
lea
dec
lea
cmp
(bad)
scas
pop
pop
aas
fisub
or
sbb
imul
adc
out
jne
mov
outs
or
mov
(bad)
jecxz
les
fidiv
mov
mov
std
movs
adc
inc
inc
pop
loopne
stos
icebp
mov
jg
mov
sbb
inc
jbe
xchg
sbb
test
xor
ret
pop
jle
popa
loope
cmps
test
inc
sub
push
mov
mov
sub
or
test
aaa
shl
out
mov
jne
mov
xchg
test
lea
jo
dec
(bad)
sar
outs
enter
push
inc
ret
pop
cld
add
lea
inc
mov
sbb
cmp
xchg
cmps
call
cld
enter
lods
ror
cwde
dec
fldcw
jecxz
nop
lsl
mov
jp
or
ss
cwde
dec
das
add
jo
or
pop
mov
jb
add
stos
adc
ins
adc
popa
div
sub
int3
dec
pop
jecxz
add
test
stc
mov
sar
or
pop
or
adc
jne
mov
inc
push
jns
push
rol
jle
or
mov
cmp
sub
mov
sub
mov
mov
or
test
mov
call
push
add
and
aas
sbb
inc
repnz
lods
mov
or
mov
push
inc
retf
retf
hlt
lock
jmp
int
sbb
call
xchg
sbb
adc
inc
xor
add
ja
in
dec
mov
dec
sbb
xchg
inc
mov
fcmovb
push
push
pop
cmp
cmp
jne
add
jnp
jno
sbb
mov
add
daa
adc
fmul
fild
fsubp
int3
jb
and
ins
daa
sub
(bad)
loope
and
lea
fst
ins
xchg
test
pop
clc
dec
inc
mov
add
mov
lea
xor
inc
inc
clc
loopne
lods
add
adc
cdq
aas
mov
push
ins
push
mov
and
cmp
pop
inc
arpl
pop
repnz
mov
add
add
in
dec
or
or
add
into
in
inc
add
add
xchg
xchg
pusha
sar
xor
mov
xlat
and
test
sbb
add
adc
pushf
sar
sbb
push
addr16
mov
clc
mov
pop
neg
pop
lea
mov
mov
fld
jmp
xor
and
sub
mov
scas
stc
cmp
jge
mov
scas
pop
dec
int
aas
hlt
test
add
and
les
out
mov
add
push
or
push
sahf
jl
add
push
sub
cmp
xchg
dec
xchg
mov
dec
or
movs
xor
adc
loope
adc
icebp
lock
scas
push
scas
pop
loope
and
mov
jmp
sbb
icebp
ror
movs
cmp
scas
nop
lock
stos
add
movs
jnp
movs
push
inc
add
push
xchg
out
test
mov
ret
cmp
push
lods
xor
pop
dec
sub
xor
(bad)
mov
push
(bad)
aaa
call
sub
push
add
in
push
xor
cmc
add
sub
xchg
dec
xor
push
push
leave
dec
call
xchg
es
push
dec
mov
loopne
cli
in
outs
or
or
jbe
ficom
adc
xor
add
add
inc
sub
add
pop
jo
pop
and
xchg
loop
mov
mov
adc
or
ret
test
sub
scas
and
adc
fisubr
push
or
mov
ficom
dec
call
mov
dec
movs
das
int3
jecxz
outs
push
pop
sub
add
jle
cmp
in
sub
sub
loope
dec
adc
add
and
jmp
push
fsubr
div
or
je
mov
in
push
rol
inc
mov
test
addr16
and
and
push
mov
mov
in
lock
stos
in
rcr
inc
jl
(bad)
jl
jmp
or
and
xchg
or
add
dec
adc
lods
adc
or
jmp
hlt
shr
mov
or
shl
mov
push
mov
or
sbb
push
push
inc
mov
icebp
pop
push
ficomp
pop
adc
js
loop
nop
xor
pop
push
push
inc
js
call
xchg
addr16
mov
leave
arpl
sbb
iret
cmp
adc
or
rcr
jp
iret
mov
sbb
mov
es
or
add
xor
mov
and
push
sbb
xchg
push
pusha
or
add
js
xchg
jp
and
push
lahf
xchg
es
push
les
(bad)
jo
ret
adc
push
popf
les
add
or
cmps
retf
stos
xchg
mov
pop
int3
inc
dec
pop
mov
adc
sbb
jnp
lea
or
imul
lahf
lock
cmc
mov
sub
ret
mov
mov
fcmovnu
lods
xor
jno
xlat
cdq
mov
and
enter
xor
daa
and
ror
fsub
ja
jle
dec
ror
mov
mov
adc
jae
int3
hlt
jp
movs
add
xchg
out
(bad)
mov
sub
xor
fs
sbb
add
into
repnz
mov
cmps
lock
je
loope
add
ins
mov
inc
lahf
ror
adc
xor
sti
push
mov
or
and
sub
xchg
or
pop
adc
lea
and
adc
push
jmp
popf
jbe
sar
push
push
jbe
imul
bound
add
push
or
js
pop
inc
sbb
cmp
and
mov
sub
mov
push
(bad)
imul
push
bound
push
dec
mov
test
inc
stos
push
(bad)
loopne
mov
neg
and
std
inc
jae
addr16
pushf
ins
mov
jmp
fimul
inc
xchg
fnstenv
mov
jp
inc
ror
ja
mov
push
ins
sub
and
arpl
push
adc
iret
es
outs
or
or
sti
adc
and
sbb
add
and
dec
sbb
(bad)
jmp
mov
jbe
add
xchg
pop
pusha
sahf
sbb
or
mov
jle
jb
adc
nop
inc
rol
aas
daa
push
xor
add
lahf
push
popa
or
add
fcmovnb
dec
test
sbb
add
ret
dec
add
gs
(bad)
ret
mov
xchg
es
(bad)
in
sub
dec
push
add
adc
(bad)
jmp
mov
jmp
add
ja
es
sbb
inc
sbb
cmp
and
cli
mov
dec
dec
and
sub
add
add
test
jmp
and
sbb
push
imul
push
rcr
mov
push
rol
fwait
pop
push
in
sysret
fild
sub
add
bound
ds
jg
cmp
pop
(bad)
push
mov
inc
les
hlt
jle
aas
mov
dec
sbb
xor
pop
push
clc
xchg
jb
out
push
call
pusha
je
or
sbb
cmc
xor
fistp
mov
inc
daa
and
dec
xor
mov
cmp
add
inc
pop
popf
add
sub
loopne
mov
adc
adc
add
pop
aam
aad
jno
mov
(bad)
dec
lahf
bound
arpl
sub
adc
les
and
adc
mov
cmps
xor
shl
popf
push
arpl
add
sub
pop
dec
shr
push
popf
add
test
add
adc
movs
rol
test
test
cmp
jns
jbe
or
dec
jle
fwait
es
push
enter
jmp
lock
or
xor
stc
adc
xlat
aad
xor
fcmove
push
or
dec
fldenv
cmps
cmps
into
arpl
mov
push
jmp
sbb
add
push
inc
pop
push
add
lahf
and
lods
ss
sub
shr
and
pop
or
rcl
add
pop
mov
loopne
xlat
dec
inc
or
pop
shl
call
cvtdq2ps
inc
mov
retf
(bad)
sub
sub
int3
gs
ret
dec
aaa
icebp
push
test
cmp
push
mov
and
or
rcl
dec
adc
jne
sbb
or
aam
popa
mov
xchg
ret
adc
cmp
bound
ror
mov
ficomp
cmp
xchg
inc
mov
fiadd
inc
mov
lock
push
pop
jb
inc
jmp
fs
cmp
sub
(bad)
(bad)
mov
or
ret
pop
mov
pop
push
rcr
dec
or
add
loop
loopne
dec
pop
push
mov
xor
rcl
or
call
adc
dec
push
sbb
retf
aam
jne
and
push
mov
push
dec
inc
add
aaa
lea
lahf
push
ins
pushaw
shr
out
outs
mov
movs
arpl
inc
aas
add
into
inc
dec
(bad)
cdq
dec
and
jne
sub
push
push
jo
mov
add
sti
and
bound
jno
jg
mov
push
(bad)
pop
add
jne
mov
cmp
pop
ret
lock
mov
push
xchg
fistp
jecxz
and
push
pop
mov
or
pop
or
sub
adc
adc
jle
pushf
mov
or
cmp
iret
or
dec
mov
mov
je
mov
or
push
add
sbb
inc
sbb
icebp
push
push
push
dec
out
or
mov
pop
and
js
inc
jae
push
stos
ds
mov
je
movs
push
push
inc
loop
add
cmp
out
xchg
jne
aaa
jl
lods
pop
pop
xor
pop
ins
and
js
push
or
es
retf
xor
sbb
and
pusha
pusha
jno
daa
rol
pop
push
jo
mov
xor
arpl
pop
cld
rcl
push
mov
mov
add
push
inc
(bad)
shl
ja
push
aad
mov
adc
es
xor
es
cmp
jne
pop
add
and
call
mov
mov
xor
mov
jmp
jb
pop
mov
fsubp
and
pop
pop
push
in
not
fimul
dec
add
and
ins
ret
bound
out
adc
imul
dec
ss
pop
js
ja
test
cmp
inc
pop
pop
adc
arpl
sbb
inc
cmp
outs
scas
jl
push
dec
mov
aam
sub
mov
jno
push
dec
bound
dec
mov
or
outs
loopne
cmovp
cld
mov
mov
or
pop
mov
pusha
push
xor
pop
or
fcomip
mov
inc
dec
movntps
sbb
dec
jno
loopne
cmc
or
dec
dec
imul
adc
clc
lds
add
add
push
loopne
sub
pop
and
add
or
cld
xor
adc
push
jno
mov
add
push
xor
jmp
popf
cmp
test
(bad)
rcr
or
sbb
mov
out
(bad)
dec
push
sbb
add
das
enter
cld
int3
pop
clc
fcom
in
aaa
or
sub
add
inc
push
stos
sbb
inc
mov
movs
sub
xchg
imul
nop
cmp
or
add
clc
jmp
loop
cmp
sub
adc
or
or
movs
cmc
mov
xor
adc
sub
xchg
sbb
add
adc
adc
xlat
and
sub
push
xor
add
or
xchg
and
int
push
shl
dec
and
add
aaa
mov
or
push
cdq
sbb
(bad)
cmp
cli
push
sbb
xchg
popf
sbb
push
pop
daa
jge
mov
cmp
mov
mov
(bad)
mov
(bad)
sar
push
daa
add
cmps
cmp
push
adc
jmp
mov
or
add
fcomp
ds
lods
fmul
stos
and
gs
ja
mov
icebp
xor
add
ror
add
fisub
inc
jg
push
js
adc
movs
outs
fist
add
ins
cmp
push
add
gs
jg
mov
or
lock
mov
sbb
fwait
jge
sbb
pop
and
sbb
sbb
shl
and
jbe
icebp
push
adc
add
inc
fdiv
sti
pushf
dec
or
je
add
jmp
in
lods
mov
inc
add
pop
scas
push
loop
popa
rcr
ror
dec
mov
dec
and
mov
int3
push
dec
in
jmp
dec
in
or
mov
or
add
sbb
std
jmp
sbb
loopne
inc
aas
aaa
add
ror
sbb
call
pop
out
push
pop
daa
icebp
cld
outs
cld
adc
sbb
rcr
imul
out
sub
and
pop
mov
xlat
sub
and
xchg
fsub
adc
les
aaa
retf
lea
test
inc
add
inc
sbb
test
repnz
jmp
jae
test
xor
push
jmp
xchg
or
ret
cli
adc
jo
mov
add
or
es
xchg
xor
or
jnp
out
jle
push
lock
and
shl
dec
popa
ins
add
iret
add
inc
sub
add
sbb
jmp
add
test
iret
xor
xor
pop
retf
xor
fidiv
icebp
push
imul
or
and
add
pushw
inc
test
aas
dec
sbb
jg
xchg
bound
push
push
les
inc
jecxz
fmul
mov
es
mov
push
aaa
icebp
mov
movs
and
add
mov
xchg
mov
add
jmp
sbb
test
sbb
or
add
fsubr
and
mov
add
fs
or
xchg
mov
or
sub
pushf
xchg
push
mov
cmc
and
(bad)
stos
cmp
inc
mov
xchg
xchg
push
lds
sbb
push
dec
jmp
dec
pop
dec
and
enter
pop
cmc
in
sub
dec
sbb
leave
or
shl
cld
push
mov
repnz
jne
shl
lock
test
xchg
aam
inc
lods
(bad)
and
pushf
ins
popa
mov
int
mov
mov
jo
inc
pushf
enter
push
sub
pop
add
dec
mov
ja
xor
mov
jmp
(bad)
pop
jge
enter
fcmovnb
mov
mov
dec
cmp
stos
hlt
xor
and
push
add
fadd
or
xor
inc
dec
into
xchg
pop
adc
rcr
mov
cmp
stos
mov
lahf
(bad)
pop
adc
pop
pop
xor
mov
adc
retf
aam
div
inc
lods
sbb
shl
mov
div
jmp
mov
xor
push
pop
daa
(bad)
arpl
or
xchg
cmp
setg
jmp
sbb
add
add
inc
add
cmp
mulps
xor
inc
inc
es
adc
gs
inc
dec
adc
jae
sbb
or
test
push
or
rcl
movs
adc
and
or
xchg
inc
sti
(bad)
loop
lods
cmp
jmp
push
or
xchg
xchg
stos
data16
es
adc
sbb
dec
frstor
push
(bad)
dec
ret
sub
and
cs
enter
les
mov
adc
push
jne
out
imul
push
popa
add
inc
adc
and
cmp
mov
loopne
adc
xor
xchg
sbb
hlt
jmp
xor
out
push
dec
les
outs
lea
ror
or
jns
push
sbb
xchg
aaa
lock
add
leave
leave
xchg
in
call
pushf
mov
and
jno
or
sub
push
sbb
xor
or
ins
xchg
push
jne
icebp
fadd
add
sub
jl
push
push
cwde
and
jb
sub
xchg
and
and
mov
popa
or
pop
add
add
(bad)
lock
adc
mov
leave
sar
rcr
repz
imul
bound
mov
int3
mov
add
div
push
or
or
mov
mov
push
xor
add
jmp
sbb
add
adc
cmps
mov
sar
mov
ror
or
bound
cmp
jmp
repz
xchg
inc
adc
invlpg
xor
mov
mov
cli
add
in
sub
pop
ins
jl
cmc
into
xor
mov
pop
sbb
imul
dec
int3
ins
ret
rol
or
sbb
ins
mov
pop
sbb
inc
out
popf
enter
je
dec
and
stos
push
xlat
fistp
mov
sub
dec
sbb
cmp
sub
ret
aas
popa
test
push
mov
(bad)
leave
or
ins
pop
sahf
and
and
fsubr
out
cmp
jl
push
and
adc
adc
or
test
mov
push
cmp
mov
mov
add
and
and
sbb
cmp
lods
xchg
sar
iret
sbb
hlt
sub
mov
test
or
out
movs
outs
mov
mov
int
into
loop
xchg
loope
cmp
test
jne
add
inc
and
add
sub
inc
pop
repz
stc
cmp
add
sub
mov
das
js
inc
adc
cmp
jne
dec
pop
mov
push
fstp
es
ins
pop
test
(bad)
push
nop
mov
dec
cdq
and
sub
pop
xchg
sbb
add
push
cmp
(bad)
retf
gs
popf
les
nop
dec
stos
or
pop
push
mul
out
inc
jmp
add
add
push
daa
push
adc
not
outs
adc
inc
jecxz
(bad)
in
sti
bswap
es
push
pop
mov
fs
pusha
out
dec
push
nop
add
sahf
outs
push
push
add
push
ins
add
sub
lock
cs
or
pusha
push
out
test
fdivr
fwait
mov
inc
std
mov
or
add
dec
dec
jp
and
xchg
loopne
and
add
adc
jge
sbb
movs
mov
jnp
xchg
ret
push
and
sub
add
xor
sub
mov
ror
js
push
and
not
shl
push
and
add
or
leave
test
in
or
mov
pop
mov
dec
add
push
(bad)
sbb
mov
inc
fcom
imul
test
adc
push
push
mov
jae
mov
add
push
ror
fnstcw
cmp
lods
js
pop
mov
adc
push
add
mov
fadd
pop
lea
cmp
test
out
faddp
inc
nop
adc
pop
xor
fst
add
jg
sbb
ret
and
bsf
aaa
mov
pop
xchg
cmps
add
cmp
jnp
xor
inc
mov
jnp
xchg
jmp
sbb
ins
mov
sub
(bad)
jne
lds
jbe
test
sub
dec
jb
aaa
cmp
add
pop
aad
sbb
in
test
mov
mov
push
fs
jne
inc
adc
push
inc
jecxz
xchg
jmp
shl
push
add
mov
sti
mov
call
adc
jmp
jp
ror
cwde
jmp
push
inc
fild
in
inc
outs
sub
lods
test
mov
bound
sbb
cmp
add
hlt
cmps
pop
cmp
idiv
movs
lods
jmp
mov
shl
fst
xor
out
xor
or
pushf
ret
xchg
adc
gs
and
jne
test
xor
call
pop
(bad)
and
cmp
dec
test
movzx
shr
add
movs
or
push
dec
out
cmp
cmc
dec
jns
mov
mov
push
inc
pop
and
cmp
daa
nop
sbb
rol
jle
inc
xor
and
pop
pusha
mov
pop
test
cmp
lds
int3
cmp
inc
jae
xor
or
inc
adc
mov
sub
adc
add
cmps
add
fisub
and
push
imul
add
xchg
inc
lea
mov
and
in
cwde
or
dec
push
xchg
push
out
sub
or
aaa
mov
add
sar
cmp
pop
xchg
mov
inc
or
inc
adc
add
push
dec
inc
and
test
xor
and
xchg
or
dec
sar
mov
jae
and
mov
mov
ss
xchg
inc
scas
dec
push
es
mov
add
jns
mov
call
adc
adc
arpl
cwde
add
pop
iret
ins
nop
aad
test
rol
pop
add
and
jmp
push
movs
nop
jmp
xchg
cmps
out
test
or
cmps
push
out
and
push
dec
sub
mov
or
cmp
or
test
out
mov
clc
or
xchg
push
inc
je
and
in
retf
mov
ds
rol
loopne
out
inc
int3
data16
add
sbb
sub
sub
push
inc
jo
sub
xchg
adc
or
cdq
cmp
(bad)
and
and
xor
push
sbb
das
out
shr
das
test
mov
mov
inc
popa
or
fist
or
and
rcr
pop
call
js
and
ror
pop
push
shl
ins
or
fisubr
in
test
mov
inc
pop
ins
dec
loop
mov
cmp
jne
lea
inc
xor
mov
pop
or
(bad)
retf
adc
jo
stos
(bad)
add
push
rcr
es
add
xchg
sbb
mov
aaa
push
pop
jo
ins
lods
sub
cmp
and
fwait
or
inc
cld
cmp
jne
jns
lea
or
xchg
and
adc
mov
int3
mov
or
jne
jbe
adc
cld
icebp
test
dec
pusha
push
adc
nop
add
inc
push
ror
and
dec
sti
mov
sub
mov
jg
mov
xor
add
jmp
inc
push
clc
mov
xchg
aam
mov
add
ins
or
cdq
les
cmc
mov
fadd
add
add
mov
adc
sub
or
std
test
pop
adc
fdivr
xchg
or
pop
repnz
add
sbb
jmp
push
shl
xchg
sar
fisttp
test
lock
dec
lahf
fdivp
push
ret
jecxz
and
dec
sahf
out
sub
and
add
cmp
repz
dec
int3
mov
or
dec
pop
add
out
(bad)
psubsb
ins
std
lock
push
mov
ss
adc
outs
je
lods
loope
xor
adc
ret
mov
jnp
sub
inc
mov
cmp
adc
pop
xchg
mov
out
leave
mov
cdq
inc
sub
scas
mov
sbb
or
fs
lods
or
jmp
or
push
or
mov
xor
ins
xchg
sbb
and
sbb
add
cmc
cmp
inc
scas
cmp
(bad)
je
loope
adc
sbb
retf
je
shl
pop
rcl
sbb
and
mov
add
push
clc
loope
pop
fsubrp
or
imul
(bad)
mov
sbb
(bad)
adc
pop
test
add
shl
cmp
pop
sbb
rcl
or
dec
and
add
xor
aam
ja
pop
or
push
add
push
inc
xor
mov
sar
mov
and
out
push
add
inc
test
gs
or
fidiv
test
sbb
cmp
xor
add
mov
or
repz
shl
sub
cmp
or
push
mov
into
cmp
xor
mov
xchg
add
adc
icebp
cmp
add
nop
and
imul
push
jo
out
push
sub
xor
push
adc
daa
ins
cwde
adc
je
jmp
push
add
adc
mov
push
(bad)
leave
rcl
aas
adc
mov
push
cmp
jne
mov
sbb
stos
add
mul
or
lahf
or
mov
cwde
push
jne
test
loopne
and
xchg
push
cmp
add
(bad)
xor
pop
movhps
arpl
call
pop
add
jno
retf
in
add
inc
ret
in
mov
ins
neg
xchg
test
jmp
pop
adc
iret
and
test
jno
(bad)
or
cmp
inc
add
popa
xor
mov
test
popa
bound
sub
push
or
sub
call
push
(bad)
imul
mov
or
inc
jmp
sbb
in
sub
clc
jne
inc
sbb
scas
adc
fsub
ret
fwait
dec
ret
dec
test
leave
aaa
adc
clc
iret
jecxz
cmp
jne
ss
popa
xlat
cmp
jnp
mov
call
in
pop
rcl
lods
icebp
lea
or
pop
inc
adc
jmp
arpl
enter
add
lock
repz
imul
js
pop
popf
gs
add
ret
xor
jl
cmp
or
pop
cmp
push
sub
(bad)
lahf
mov
fstp
clc
or
sbb
sbb
push
add
or
inc
jmp
pusha
rcr
mov
adc
add
(bad)
mov
xchg
test
(bad)
dec
cwde
jne
popf
imul
jge
and
xor
mov
inc
jmp
inc
cld
inc
dec
sbb
dec
mov
cld
movs
js
shl
mov
adc
or
mov
cmp
xor
xor
xor
inc
mov
xor
mov
xor
and
scas
adc
or
pop
mov
dec
xchg
xchg
pushf
or
mov
mov
ins
cmp
imul
mov
sbb
or
arpl
mov
(bad)
jo
dec
loopne
jae
aas
xor
mov
sbb
fst
pop
mov
mov
cs
and
xor
psubsb
dec
fimul
push
add
sbb
push
ret
ins
and
mov
sub
add
cmp
or
popa
ins
sbb
add
das
dec
inc
xor
fxch
lock
rcl
push
rcl
xor
push
dec
sbb
inc
sub
mov
mov
inc
lea
aaa
pop
xchg
mov
mov
fs
mov
dec
loop
push
push
inc
push
fdivr
pop
xor
mov
sbb
inc
ss
cmp
sbb
adc
mov
ret
ret
ins
add
cmp
imul
push
xchg
imul
or
inc
mov
unpcklps
fwait
push
add
adc
inc
fwait
pop
mov
pop
inc
test
mov
hlt
dec
sbb
xor
pop
retf
push
loopne
mov
push
(bad)
xor
ja
inc
loopne
sub
pop
adc
fwait
not
call
(bad)
sub
inc
jmp
fbld
in
or
test
mov
mov
cmp
push
out
sbb
xor
inc
call
and
outs
inc
sbb
xchg
jl
push
into
mov
sbb
and
lock
jo
inc
mov
inc
ror
stos
(bad)
clc
ds
je
dec
mov
ret
sub
inc
loope
jl
xor
add
and
mov
retf
cs
xor
mov
gs
rol
iret
sti
ins
sbb
push
mov
inc
movs
cmp
jae
stos
pop
sbb
mov
sti
inc
dec
add
adc
test
and
mov
cld
or
pop
test
inc
mov
movs
mov
pop
cmc
xor
adc
dec
test
push
add
aaa
add
loopne
aas
pop
fldenv
and
push
hlt
cmps
add
pop
adc
mov
inc
test
fstp
sar
or
fcmovb
sbb
cmp
mov
inc
sahf
and
xchg
fisubr
fs
mov
push
aas
scas
es
and
addr16
adc
push
inc
add
nop
inc
or
enter
or
xchg
mov
sbb
test
movs
or
push
fwait
mov
mov
cmp
adc
gs
or
cmp
add
xlat
add
daa
push
sub
inc
add
in
inc
jmp
fstp
and
sbb
jnp
popa
(bad)
sbb
xor
inc
xor
jne
shl
test
push
mov
cmp
and
and
inc
adc
add
adc
cwde
lea
jg
sub
ficom
mov
adc
mov
aad
in
push
push
pop
lea
iret
daa
cmp
inc
sbb
push
mov
sub
sub
rcl
pop
inc
mov
jp
cmp
js
test
inc
mov
sbb
pop
or
cmp
int3
das
or
(bad)
jns
add
cmp
xlat
mov
ds
jmp
dec
or
or
jno
in
test
dec
sub
nop
and
ins
pop
(bad)
imul
inc
mov
ins
loope
mov
push
push
sbb
pop
daa
push
add
pop
icebp
leave
aad
lock
ss
cmp
(bad)
push
out
add
fcmovnb
cmp
mov
inc
dec
mov
xor
fbld
bound
sbb
sub
jmp
cmp
mov
icebp
xor
xchg
test
add
bound
(bad)
jl
cmp
push
in
rcr
sbb
xor
push
mov
mov
add
out
xchg
pop
pop
rcl
and
je
retf
je
ret
or
add
setge
push
and
sbb
add
mov
fsub
sub
test
mov
shl
push
lahf
cmps
ret
sbb
int3
push
or
dec
test
mov
pop
cs
cmp
jl
inc
rol
sbb
mov
fs
fidiv
xchg
fwait
mov
sbb
adc
mov
mov
rol
es
sbb
pusha
push
aam
mov
lods
mov
ds
ret
test
xor
mov
mov
iret
push
hlt
jmp
sub
adc
cmp
sub
std
ja
(bad)
fs
outs
add
mov
mov
mov
sub
cs
mov
test
add
iret
inc
std
cmp
jge
scas
push
sub
adc
push
push
add
test
sbb
scas
aam
add
dec
scas
mov
inc
or
fbstp
push
scas
shr
inc
sbb
call
mov
je
push
daa
adc
push
ror
or
call
adc
test
or
inc
xchg
je
lds
sub
adc
jl
nop
fimul
sbb
lahf
in
je
mov
lods
jne
jle
mov
sbb
adc
psllq
mov
jge
js
xchg
inc
sbb
dec
lods
dec
xchg
sub
cwde
stos
imul
jno
adc
and
and
push
movs
xchg
lea
dec
add
xchg
lds
sub
call
xor
enter
aam
movs
rol
add
xor
add
push
sbb
les
adc
adc
add
xor
es
and
jp
les
adc
fdiv
cs
adc
jo
sbb
loope
sbb
inc
add
sbb
pop
mov
sbb
mov
adc
dec
outs
sbb
mov
cmps
dec
xchg
dec
and
xchg
inc
ja
xchg
adc
xchg
jg
adc
and
test
dec
adc
mov
fcomp
or
scas
(bad)
test
jg
mov
add
out
or
dec
dec
arpl
sub
inc
mov
mov
push
mov
mov
and
push
pop
xchg
or
aas
lahf
jmp
inc
and
or
mov
cmp
repnz
(bad)
in
xor
mov
sub
js
adc
(bad)
aam
adc
pop
jl
test
adc
inc
inc
add
test
in
add
mov
dec
movs
mov
add
cld
fwait
xchg
or
mov
inc
add
add
or
int3
dec
lock
and
add
pop
(bad)
sbb
loop
add
sbb
loopne
mov
clc
pop
ror
and
adc
ficom
sub
retf
jno
int3
cmp
adc
out
inc
das
test
push
or
push
dec
push
jbe
pop
pushf
pop
dec
mov
pop
sub
or
adc
add
xor
push
setle
loope
or
pop
data16
adc
or
cdq
adc
push
loopne
mov
add
mov
lea
imul
lods
adc
pop
ret
outs
xor
xchg
jmp
inc
out
inc
jle
xor
(bad)
mov
mov
xchg
sbb
sub
in
mov
xchg
loope
xor
mov
sbb
jne
adc
jae
int
pop
dec
xor
push
xchg
mov
enter
or
rol
loope
xchg
daa
push
shr
xchg
cmp
dec
shl
dec
xor
(bad)
xchg
pop
test
aam
(bad)
ss
int3
cmp
ret
mov
nop
call
push
pop
es
rcr
addr16
add
jmp
and
mov
dec
cmp
cmp
dec
push
add
repnz
sbb
pop
add
add
jecxz
and
in
jb
jle
ret
mov
rcpps
xor
cmp
mov
shl
dec
dec
pushf
lea
mov
mov
push
enter
shl
stos
pop
mov
int3
ret
scas
inc
mov
ja
add
shl
jmp
or
mov
sub
xchg
dec
dec
push
int3
ret
mov
inc
(bad)
(bad)
sbb
sub
xchg
mov
xor
push
mov
rcl
outs
mov
pop
pop
aas
or
add
es
xor
hlt
push
mov
int3
cmp
add
lods
loope
dec
and
push
inc
int3
cmp
jg
hlt
je
and
test
xchg
movs
adc
adc
jmp
add
add
sbb
pop
mov
aaa
(bad)
(bad)
add
into
jnp
loope
xor
add
add
test
lea
pop
je
dec
dec
or
call
lods
jmp
xor
(bad)
mov
sbb
add
or
pop
dec
pusha
or
lods
fild
jg
mov
add
inc
sub
add
bound
push
mov
jne
call
(bad)
push
aad
adc
inc
xor
test
adc
ss
mov
jl
sahf
rol
or
dec
jl
std
push
scas
rcl
mov
push
xchg
fcmovbe
add
fiadd
adc
push
cli
mov
or
sub
adc
cs
inc
inc
push
inc
add
clc
sbb
retf
cs
dec
mov
push
inc
pop
jmp
add
and
stos
adc
mul
jmp
mov
push
iret
add
pusha
adc
inc
icebp
mov
add
xor
add
clc
and
dec
sti
or
cwde
cdq
gs
inc
mov
xchg
scas
inc
sahf
or
lock
mov
mov
jns
por
add
adc
iret
adc
movs
cmp
xchg
cmp
add
pop
xor
mov
xor
jne
stc
bsf
inc
arpl
loopne
je
daa
sbb
mov
aas
les
xor
adc
je
or
imul
adc
cmp
pop
or
xor
aam
cmp
lock
add
mov
pop
ins
mov
inc
imul
adc
call
inc
out
je
daa
push
sahf
rol
adc
hlt
dec
dec
fiadd
xor
icebp
ins
adc
xchg
fisttp
sub
loop
rol
dec
loop
in
fwait
in
inc
adc
out
fst
sub
add
mov
call
add
movs
in
sub
inc
ins
dec
pop
sub
lods
sub
jne
jmp
add
imul
and
arpl
jno
sbb
mov
aam
push
mov
sub
aam
daa
ffree
(bad)
jo
int3
inc
inc
jmp
retf
jne
cmp
adc
ret
mov
add
xchg
cmps
mov
cmovo
adc
and
xchg
int3
and
std
jo
shr
and
fidivr
retf
mov
hlt
xchg
cmc
add
jb
cmp
add
xor
push
inc
sub
popa
adc
inc
xchg
jg
add
mov
cmp
adc
sub
pushf
mov
pop
cld
pushf
aaa
pop
add
(bad)
sbb
clc
xchg
mov
or
or
(bad)
jge
add
test
adc
jle
and
shl
test
or
sbb
test
xchg
add
or
or
cdq
cmp
add
test
sbb
mov
das
mov
xchg
int3
push
ret
mov
push
adc
fcom
mov
stc
adc
push
mov
loopne
ja
sub
fbstp
adc
xor
dec
sub
bound
arpl
jne
inc
jge
add
daa
cdq
dec
popf
imul
dec
inc
mov
test
ja
sbb
jb
cmp
jp
inc
aam
aad
(bad)
xlat
das
push
push
add
sbb
push
push
pop
shl
das
jne
outs
xor
xlat
cdq
lea
bound
cmps
pshufw
pop
jmp
push
js
xchg
dec
(bad)
iret
or
or
inc
or
aad
movs
add
mov
sub
test
jmp
clc
mov
jne
scas
add
or
push
sbb
inc
shl
js
(bad)
mov
push
jle
jbe
adc
lods
test
or
nop
addr16
or
adc
xchg
pop
sub
or
daa
or
bound
fimul
xchg
pop
cdq
mov
or
es
ja
fmul
cld
outs
xor
inc
and
push
pop
sbb
jmp
ins
jmp
sti
rcl
sahf
cmp
call
dec
push
mov
mov
pop
push
mov
cwde
mov
xor
cdq
adc
xor
pop
add
xchg
pushf
enter
sub
(bad)
in
mov
inc
std
ds
(bad)
lock
add
cmp
push
push
mul
add
or
push
add
adc
pusha
xchg
scas
pop
retf
sbb
ror
pop
sbb
ret
fsub
inc
mul
cmp
rdpmc
jno
push
test
and
add
xchg
mov
mov
cmp
leave
dec
mov
fs
xor
mov
mov
fstp
cmps
das
mov
jmp
ror
leave
add
ja
mov
call
or
and
add
xchg
mov
sbb
jmp
xor
stos
inc
lods
sbb
push
sub
out
pop
adc
or
or
adc
gs
or
fld
out
add
add
sbb
and
pop
test
ja
aaa
cmp
inc
ins
adc
xor
add
mov
xchg
push
retf
icebp
je
mov
pusha
dec
jne
add
or
or
in
sti
js
or
xchg
in
(bad)
ds
add
imul
bound
xor
inc
and
pop
shl
or
jo
jmp
and
pop
or
or
ins
push
jp
mov
es
cmc
mov
mov
and
or
xor
adc
rcr
repz
jge
inc
ja
inc
add
das
inc
jle
dec
or
xor
lods
es
add
mov
aas
loop
and
fwait
lods
xor
rcl
add
les
add
mov
and
and
test
inc
scas
sbb
popa
xchg
mov
clc
xor
jge
add
ja
lea
xor
dec
and
ret
sbb
aam
(bad)
and
(bad)
(bad)
xor
sub
push
pop
jmp
mov
cmp
adc
mov
pop
fs
inc
adc
jne
ror
rcr
or
mov
xchg
xchg
add
or
or
mov
mov
sub
or
sbb
movs
sub
adc
jne
mov
adc
fisttp
scas
push
jb
inc
fldcw
int
sti
push
ror
sub
sub
add
rcl
dec
call
mov
pop
clc
clc
lock
or
in
or
mov
je
cmp
sbb
rcr
int3
gs
out
fmul
aam
sahf
push
mov
mov
sahf
inc
(bad)
rol
push
push
fdivr
push
sub
mov
pop
sar
pop
add
bndstx
sub
cli
add
or
push
mov
or
(bad)
cs
add
or
cmp
js
call
pop
hlt
xor
jne
fwait
ins
mov
pop
pop
shr
sbb
shr
addr16
test
jmp
pop
mov
mov
rcl
add
(bad)
push
dec
xor
repnz
retf
inc
mov
cmovg
mov
mov
dec
jge
mov
add
push
mov
outs
mov
jmp
inc
mov
mov
xlat
mov
jmp
inc
and
dec
daa
sbb
sbb
jge
adc
adc
push
dec
or
loopne
adc
into
js
add
das
das
or
out
in
cmp
out
adc
and
jle
push
fdiv
dec
add
add
pop
pop
add
cwde
pop
cmps
mov
and
jns
sub
into
adc
fldlg2
ds
mov
push
mov
and
into
(bad)
xor
adc
into
inc
dec
dec
sar
mov
adc
lea
sbb
shr
push
dec
je
jle
sbb
mov
popf
pop
cmp
and
imul
int3
or
jbe
aaa
jnp
fadd
sbb
xchg
xchg
xchg
or
dec
les
and
sub
sbb
xchg
loop
mov
inc
xor
add
jo
cs
mov
mov
in
inc
test
pop
xlat
add
in
das
retf
cmp
aaa
(bad)
je
aas
lods
mov
pop
inc
jmp
mov
add
mov
mov
fcom
cmp
enter
imul
jp
sub
fld
xor
pop
add
hlt
mov
add
adc
dec
out
ins
sbb
out
adc
jns
mov
sbb
test
cmps
test
jno
(bad)
xor
push
push
dec
mov
push
cmp
adc
pop
popa
sub
out
cmp
or
icebp
fmul
(bad)
sub
or
fldcw
dec
sbb
xlat
or
jmp
ret
pop
inc
les
cwde
and
push
ret
adc
jmp
mov
icebp
div
fld
jle
(bad)
inc
dec
or
mov
enter
add
aam
adc
and
jnp
xchg
sub
test
fmul
repz
dec
aam
hlt
add
fld
xor
push
jecxz
loop
mov
xor
cmp
cmp
nop
xchg
popa
lods
mov
cmp
pop
push
imul
push
imul
ins
outs
addr16
push
iret
add
push
adc
sub
retf
or
push
retf
ins
or
xchg
adc
(bad)
and
cmp
sbb
test
mov
fs
imul
fisttp
xchg
add
je
mov
ja
pushf
add
in
rcl
or
cmp
and
aas
jecxz
cmp
cld
ins
loop
inc
add
daa
outs
push
punpckhwd
nop
(bad)
ret
fidivr
(bad)
sub
push
mov
imul
fdiv
jle
aad
lea
or
jne
lea
mov
pushf
mov
lods
loopne
out
pusha
cmp
aam
or
xor
and
sbb
cwde
jno
lods
loopne
nop
daa
outs
int
pop
outs
add
jp
pop
xchg
mov
sbb
test
cli
add
test
inc
hlt
mov
xchg
fmulp
cmp
xor
dec
or
adc
loopne
dec
mov
adc
mov
lock
movs
add
shl
fmul
jbe
in
fwait
iret
ror
loopne
mov
imul
ret
imul
(bad)
and
aam
sbb
call
pop
xchg
in
dec
add
cmp
sbb
leave
xchg
push
pusha
and
aas
inc
test
dec
mov
xor
fcmovne
into
add
push
adc
arpl
inc
mov
test
sahf
out
ja
push
pusha
jb
and
nop/reserved
dec
add
cmp
fs
mov
dec
in
nop
mov
jecxz
test
and
test
jne
movs
inc
mov
imul
cmp
dec
lds
out
aaa
jg
mov
call
mov
or
jmp
pop
mov
add
dec
shl
in
test
mov
dec
add
cmc
das
arpl
push
pop
mov
rol
jbe
add
cmp
xchg
fldcw
jp
daa
push
imul
push
cmp
mov
cmp
cmp
inc
or
cmps
clc
aaa
push
dec
xor
out
out
inc
and
imul
shl
sti
mov
xor
add
daa
imul
aaa
stos
pop
mov
xchg
pop
sbb
sbb
int
out
inc
dec
fwait
fs
add
mov
repnz
inc
inc
add
gs
dec
retf
sahf
nop
rol
int
mov
add
adc
pop
sub
rol
push
out
out
xchg
mov
(bad)
or
or
shl
imul
dec
xchg
push
(bad)
sbb
ror
jmp
mov
mov
(bad)
xor
mov
add
sbb
add
rcl
pop
pop
mov
push
jnp
cmp
and
sub
inc
inc
mov
add
jne
ror
test
jmp
xor
rcl
daa
fisttp
add
pop
inc
xchg
dec
xchg
xchg
lock
call
xchg
dec
call
or
xchg
push
pop
cmps
sub
hlt
int3
(bad)
inc
dec
(bad)
adc
mov
(bad)
push
inc
cmp
je
mov
adc
sub
outs
fldenv
sbb
ret
cli
jno
push
adc
sbb
sub
pop
das
lds
adc
sbb
sbb
and
addr16
sbb
sub
add
mov
adc
sar
call
adc
sbb
xchg
or
cld
xchg
loopne
sub
xchg
inc
mov
cmp
jmp
int3
add
sub
inc
sbb
xor
inc
std
or
outs
fcmovbe
push
movs
jecxz
sbb
pop
or
inc
sub
rcl
add
retf
dec
mov
jb
or
lea
adc
add
cli
movs
adc
ins
rcl
adc
inc
jmp
sub
adc
jmp
adc
push
fdivrp
sub
mov
add
jmp
clc
add
push
mov
mov
aaa
mov
test
xchg
lds
xor
inc
add
das
jae
imul
xchg
in
sbb
movsx
jmp
pushf
mov
xor
rcl
ror
or
adc
fwait
mov
daa
aas
out
add
xor
xchg
(bad)
push
mov
mov
rol
jae
mov
popf
lea
dec
je
cdq
cmp
cwde
mov
imul
test
les
ror
xchg
or
ss
mov
pop
not
sub
or
or
repnz
mov
pop
cmp
rol
inc
sub
sub
out
aaa
inc
or
add
or
sub
pop
dec
test
dec
(bad)
ror
hlt
mov
(bad)
aas
xchg
test
ins
sahf
jle
mov
js
mov
mov
test
ret
retf
and
arpl
(bad)
or
mov
fild
es
xor
test
mov
aas
popa
pop
lds
popa
adc
mov
mov
and
push
outs
dec
mov
fcos
jb
inc
sbb
push
jecxz
fiadd
mov
dec
je
and
aad
add
lahf
das
je
pop
nop
cwde
xor
das
fdivr
jo
xor
push
mov
sti
xchg
imul
ins
xor
inc
lahf
cmc
inc
and
dec
pop
push
cmps
(bad)
(bad)
pop
out
adc
fsub
fisttp
xor
adc
adc
add
dec
adc
pushf
inc
lds
adc
inc
outs
cmps
or
cli
gs
pop
or
mov
call
mov
adc
mov
cmp
jne
js
nop
mov
inc
push
sbb
gs
inc
mov
push
push
xlat
mov
sub
adc
inc
xor
in
jle
mov
repz
mov
jmp
mov
push
outs
or
movs
mov
inc
ins
loope
adc
add
sub
call
adc
ja
out
fs
ret
pop
add
aad
popf
xchg
push
jmp
xor
jecxz
fsub
or
xchg
nop
nop
sahf
push
sub
jmp
iret
and
or
jne
bound
dec
xchg
ror
xor
shl
sar
mov
into
test
test
(bad)
sub
mov
xor
sub
jmp
push
xchg
inc
adc
daa
fstp
sbb
add
fs
inc
imul
ss
inc
mov
nop
add
js
xor
mov
push
sti
repz
jb
xchg
cmp
loopne
adc
pop
xchg
sub
jmp
aam
jae
(bad)
aam
out
iret
adc
fs
fldenv
and
mov
rcr
or
mov
xor
xchg
ret
fmul
xor
mov
xor
cdq
mov
mov
lods
sub
test
cmp
ins
sbb
gs
adc
xchg
inc
stos
xor
into
ret
ds
push
ss
mov
out
adc
mov
cwde
cwde
add
hlt
push
sub
add
push
cmp
xor
lds
add
push
into
mov
out
mov
cmp
xchg
outs
scas
dec
push
push
mov
cmp
dec
inc
ins
jmp
les
xor
lds
xchg
jo
cmp
mov
ret
enter
adc
retf
push
add
xchg
jbe
iret
and
ret
add
lds
std
sbb
or
adc
sbb
jp
pop
jg
repnz
test
in
push
adc
adc
jno
fdivr
lock
loopne
mov
mov
xor
(bad)
fild
jo
imul
xor
popw
and
pop
outs
add
fmul
or
arpl
jl
je
or
ss
loope
fs
and
xor
aaa
add
add
push
and
add
nop
xchg
pop
test
xchg
inc
push
xchg
add
sub
mov
mov
adc
cmp
push
sar
rol
bound
js
cwde
mov
imul
loop
iret
cmps
pop
or
and
jle
xor
rcl
sbb
dec
dec
and
in
repnz
sti
adc
(bad)
fdivr
adc
cmp
xchg
ja
jae
scas
inc
int
rol
dec
or
movs
add
ror
pop
sbb
sbb
or
inc
sbb
shl
dec
mov
cmp
or
cmc
add
or
cmp
adc
and
movs
pop
inc
sbb
fs
push
or
add
iret
sbb
mov
or
imul
dec
mov
das
push
inc
xor
je
hlt
xor
fsub
movs
mov
add
adc
(bad)
push
fst
out
pushf
movs
jnp
shl
in
cdq
out
jb
pusha
fisttp
xor
cmp
add
xor
cmp
jno
sub
inc
jge
(bad)
adc
sahf
cdq
sub
enter
sbb
aaa
mov
mov
inc
adc
shl
pusha
cld
or
add
add
inc
add
inc
pop
dec
ins
daa
pop
xor
jg
in
cmp
pop
mov
adc
in
dec
sbb
jp
dec
push
jg
test
mov
xor
or
les
out
rol
arpl
clc
stc
fs
(bad)
daa
pop
xchg
lock
lea
lock
push
test
inc
bound
sti
pop
rcr
and
add
fs
push
or
mov
pop
xchg
test
test
mov
inc
xlat
dec
pop
fdiv
es
fisubr
mov
and
scas
mov
jnp
movs
out
xchg
int3
or
xchg
mov
(bad)
shl
mov
jp
cdq
cmp
sub
jo
hlt
add
ret
mov
dec
loopne
inc
adc
inc
jge
sub
fwait
test
inc
pop
push
or
je
pop
popf
pop
pop
ret
sbb
push
ror
ret
xchg
test
jg
lea
pop
inc
mov
xchg
pop
xor
popf
es
inc
mov
sub
mov
add
jne
jmp
lods
adc
fcomp
sbb
jne
sub
mov
adc
or
(bad)
sti
(bad)
jne
mov
xor
inc
fild
sub
xchg
js
int
(bad)
arpl
cmp
mov
mov
cmovge
pusha
adc
add
xchg
inc
or
adc
into
push
pop
push
shl
stos
mov
cmp
out
mov
jno
in
sti
adc
das
not
inc
jecxz
push
mov
(bad)
and
out
call
mov
dec
(bad)
lods
add
or
jge
ret
or
inc
dec
in
pop
clc
(bad)
and
mov
xor
inc
xchg
sbb
push
cwde
add
fs
add
jl
sub
push
in
and
mov
xor
sbb
and
or
imul
pop
add
push
lds
stc
ja
sbb
lds
pop
out
adc
pop
or
or
ds
sub
sbb
xlat
or
inc
or
pop
adc
push
mov
lock
xchg
sub
or
jmp
daa
ins
test
cmp
or
inc
sub
adc
add
push
pop
and
inc
pop
sub
lods
cli
es
sbb
sub
add
ja
push
je
cwde
and
xlat
(bad)
sub
pop
push
adc
and
sbb
push
push
pop
lahf
push
popa
inc
fmul
in
inc
icebp
pop
add
add
ret
mov
mov
and
sub
xor
iret
sub
mov
outs
or
dec
dec
mov
add
sub
les
add
jecxz
shl
add
cmp
xor
out
cmp
jg
outs
pop
inc
out
add
cmp
xor
push
cmp
mov
add
aaa
mov
dec
mov
fwait
out
sub
aas
adc
ja
sbb
push
mov
jg
lock
or
(bad)
jg
in
rol
add
xor
pusha
cmp
(bad)
loop
fcom
lock
add
pop
push
sti
jmp
inc
adc
in
add
mov
popa
sbb
pop
sub
or
and
loope
add
mov
adc
add
ins
pop
dec
mov
pop
outs
jmp
mov
inc
stos
fisttp
adc
mov
dec
cwde
ds
ins
xchg
adc
mov
sbb
pop
jb
imul
sbb
xor
push
dec
loope
sbb
pop
xchg
and
add
jmp
push
out
inc
test
sub
xor
inc
push
jle
aas
movs
dec
ret
adc
adc
push
adc
pop
and
repnz
repz
cmp
sub
inc
inc
jbe
mov
in
inc
mov
daa
jbe
rcr
jge
loope
and
adc
mov
dec
and
rol
aaa
lods
pop
xlat
mov
popf
mov
xchg
push
adc
(bad)
cmp
into
dec
clc
lock
push
adc
mov
fist
or
cwde
mov
stos
adc
sbb
sbb
js
cmp
das
int3
sbb
pop
and
rcl
ins
pop
pop
or
dec
dec
mov
pop
and
fdiv
sti
daa
je
fs
call
leave
rol
aas
xor
or
or
jae
xor
loope
cmp
(bad)
cli
in
adc
add
sbb
popf
sbb
and
call
movs
dec
pop
clc
adc
inc
cmp
and
imul
stos
fs
sub
sub
sub
add
fcmovne
cmp
adc
sub
mov
xor
xchg
xor
(bad)
or
imul
sub
inc
and
stc
sbb
and
lea
adc
test
dec
and
adc
test
sbb
push
rol
inc
jo
jo
sbb
fsub
or
push
sub
sbb
rol
add
popa
inc
enter
ds
push
jmp
push
rcr
rol
inc
mov
mov
dec
add
sbb
repnz
sbb
mov
push
jb
push
push
inc
fsubr
or
inc
add
mov
push
shl
stos
xchg
cld
xchg
and
mov
popa
in
mov
fidivr
jns
dec
ins
dec
sub
add
cmp
(bad)
pusha
add
add
add
sub
xor
leave
dec
adc
cli
sti
add
aad
in
add
sub
xchg
(bad)
mov
adc
push
adc
add
inc
cmp
inc
push
cmp
push
outs
cmp
lock
shl
push
or
mov
jnp
or
retf
and
push
test
dec
mov
cmp
inc
add
cmp
movs
(bad)
(bad)
jp
sbb
adc
adc
inc
shr
icebp
bound
icebp
pop
or
jg
in
xor
in
aam
imul
xor
stos
sbb
or
or
and
push
or
mov
or
das
push
sbb
inc
add
aad
push
add
mov
or
mov
clc
sar
jns
adc
jmp
test
sahf
add
pop
or
cmp
sub
pop
pop
jne
neg
js
aas
mov
sub
std
iret
xchg
sbb
cmp
lock
pop
push
adc
pop
imul
outs
xchg
dec
or
dec
xchg
xor
push
and
push
fist
adc
ins
dec
push
mov
push
outs
push
or
sub
or
mov
mov
pop
popa
push
mov
(bad)
shr
scas
or
inc
jmp
imul
aaa
sub
and
dec
pop
push
sbb
mov
mov
ins
inc
jnp
mov
adc
mov
push
sub
call
adc
xchg
aaa
pop
hlt
lock
add
cmp
push
dec
push
and
icebp
xor
mov
and
sub
add
sbb
or
clc
jne
cmp
jnp
push
xchg
repz
js
movs
mov
mov
test
push
mov
loope
pop
cmps
add
cs
push
xor
xlat
adc
mov
jae
jo
mov
ret
push
adc
and
fstp
mov
sbb
fidivr
out
movs
push
xchg
enter
pop
imul
daa
push
pop
or
inc
jbe
sbb
push
pusha
out
sbb
adc
and
sbb
jmp
pop
sub
mov
xchg
(bad)
inc
and
inc
call
pusha
outs
rol
das
test
in
or
mov
scas
emms
adc
push
add
cmp
jg
adc
(bad)
sub
popf
xchg
movs
sbb
pop
dec
sbb
(bad)
xor
lea
mov
aaa
add
xor
pop
jg
lock
xchg
pop
mov
or
dec
out
push
sbb
retf
std
adc
inc
push
rcr
xor
(bad)
xor
jle
pop
jecxz
cli
and
add
adc
icebp
push
xchg
mov
push
fld
stos
add
inc
dec
fist
scas
dec
mov
dec
inc
dec
mov
cmp
ja
inc
mov
and
cmc
outs
push
xchg
(bad)
mov
mov
pusha
adc
add
pop
aam
adc
test
(bad)
jbe
mov
xor
movs
xchg
lea
push
call
adc
popa
push
inc
call
or
or
adc
daa
ja
push
and
pusha
adc
leave
jmp
aad
rol
nop
aaa
jno
lods
lock
test
mov
xor
shr
sub
xor
adc
pusha
adc
pusha
add
test
mov
mov
addr16
ja
sahf
push
push
inc
push
fadd
fldlg2
xor
test
and
mov
or
sbb
xchg
adc
sahf
inc
xchg
xor
adc
push
jmp
hlt
dec
jbe
jne
mov
mov
and
push
push
jae
cmp
jne
pop
pop
and
shr
gs
es
loopne
test
mov
and
cmps
add
adc
add
cdq
sub
push
mov
push
sbb
loope
xor
and
push
lock
stos
pop
adc
pop
and
xor
pop
mov
and
mov
add
dec
loope
iret
inc
daa
add
pop
push
hlt
out
push
test
pop
cmps
jo
repnz
mov
lock
xchg
mov
ret
lahf
cdq
inc
pop
lods
pop
js
arpl
pusha
jae
jp
aad
pusha
add
cdq
add
mov
test
inc
add
and
dec
add
add
sub
xchg
minps
push
or
add
add
push
sbb
aas
xor
xchg
test
inc
ror
ret
sbb
popa
xor
pop
movs
outs
cmp
push
mov
(bad)
jo
sub
mov
xchg
int3
inc
addr16
adc
data16
adc
pop
add
pop
into
(bad)
push
ror
xor
ret
icebp
pop
adc
mov
mov
in
pop
add
push
adc
cmps
jge
xchg
enter
sub
arpl
mov
dec
jo
pop
pop
popa
or
in
mov
sbb
in
sub
or
jle
aam
(bad)
and
sbb
xor
jmp
clc
jne
je
mov
call
popa
adc
sub
scas
int3
or
shr
cmp
fcmove
sbb
mov
clc
push
fcmovnb
xchg
or
xchg
inc
dec
and
cmps
jg
mov
shl
add
and
cli
gs
jg
dec
clc
xchg
jge
jge
jle
jl
out
sub
push
xor
lock
ss
inc
sub
ss
es
pop
lahf
inc
outs
or
inc
js
dec
scas
mov
add
pop
dec
icebp
and
rcl
push
and
xlat
mov
shr
mov
pop
cmp
unpckhps
sub
push
pop
xor
and
nop
lods
xchg
xlat
retf
adc
mov
jno
aas
aad
mov
pop
adc
mov
jmp
les
and
add
add
push
inc
out
(bad)
cmp
adc
adc
pop
sub
sub
cmp
fnsave
pop
and
aas
cdq
popa
add
inc
sbb
jns
popa
sub
inc
pop
fadd
push
shr
or
adc
mov
inc
shl
retf
and
push
xor
push
push
pusha
inc
aaa
mov
scas
int
push
inc
imul
pusha
add
les
loopne
popa
pop
mov
mov
xchg
pop
add
js
mov
xor
(bad)
dec
add
push
cmp
jl
mov
imul
push
mov
sub
jg
add
xchg
ds
ss
pusha
dec
jno
sub
cmp
xor
lea
xor
add
sbb
cli
gs
(bad)
popa
call
and
test
cwde
and
add
sub
shl
and
cmp
sub
(bad)
ins
push
test
loop
sbb
mov
cmp
aam
aaa
dec
xchg
nop
popf
popa
in
sbb
lock
pusha
outs
pop
xor
sar
xchg
push
or
push
or
sti
push
pusha
js
push
test
rol
nop
or
mov
mov
push
adc
cli
jge
rep
dec
lahf
push
ror
les
inc
inc
add
mov
and
popf
hlt
xchg
sbb
outs
mov
jne
xlat
jae
mov
jl
jne
dec
and
sub
fwait
sub
cs
test
shr
in
es
and
test
xlat
ds
mov
pop
pop
adc
cli
nop
xchg
leave
jmp
inc
or
push
loopne
sub
mov
mov
adc
out
add
mov
add
sbb
fistp
fs
adc
jbe
mov
mov
adc
push
xor
xchg
xlat
inc
add
add
and
sub
add
imul
clc
inc
cmps
mov
movsx
inc
add
daa
das
sub
inc
xor
push
adc
adc
mov
mov
inc
push
outs
loop
daa
imul
das
jnp
jnp
cdq
iret
and
movs
test
dec
fnstcw
(bad)
(bad)
cli
mov
loopne
inc
loopne
dec
shl
mov
in
into
mov
inc
dec
cmp
or
dec
clc
shr
aaa
cmp
lea
or
retf
pop
pop
or
mov
jns
inc
push
addr16
out
je
add
movs
mov
addr16
or
adc
push
lock
or
jge
jns
lea
sbb
dec
sbb
sbb
cmp
mov
adc
fstp
mov
inc
jg
pop
pop
sbb
xor
daa
(bad)
adc
push
in
mov
in
adc
pop
stc
(bad)
xchg
dec
fild
pop
and
xlat
inc
adc
push
rol
sahf
clc
out
ja
fimul
and
enter
xchg
ror
das
(bad)
push
push
pop
pop
mov
pop
pop
aas
test
mov
adc
add
xor
sbb
inc
push
je
aam
pop
pop
or
and
push
popa
int3
ja
sbb
mov
cmp
call
je
xchg
sub
mov
dec
inc
jmp
aaa
adc
dec
xor
push
sub
adc
lea
xor
(bad)
cld
es
mov
inc
hlt
daa
or
xlat
mov
and
dec
push
mov
stc
cdq
fidivr
xor
pop
push
repz
arpl
bound
aaa
fwait
ss
mov
daa
sub
add
and
add
or
sbb
adc
jns
sbb
xor
sbb
sbb
stc
add
fwait
cmp
or
fild
xor
inc
psubq
dec
pop
inc
dec
dec
inc
add
mov
jne
ins
ins
inc
outs
popa
xchg
lea
pop
push
gs
daa
daa
je
fdivr
or
jae
push
ficomp
push
enter
add
push
retf
inc
sti
das
inc
in
inc
out
or
das
push
(bad)
cmp
dec
jae
pop
cmp
xor
scas
lods
push
jno
cmc
sbb
push
loop
loop
mov
fimul
inc
add
lock
sub
add
mov
push
fcomp
jo
int
xor
push
mov
sbb
xlat
dec
inc
mov
cs
test
jl
push
dec
(bad)
fwait
push
sub
mov
mov
dec
mov
xor
cmp
adc
push
les
hlt
cmps
shl
ret
lea
ja
dec
cli
push
add
inc
xor
fistp
and
mov
(bad)
mov
inc
pop
sub
sub
pop
xor
lock
mov
pop
pop
mov
sbb
repnz
mov
cwde
mov
pusha
push
push
daa
popa
adc
rcl
xchg
or
inc
jl
leave
or
inc
ins
inc
in
or
mov
and
rol
fstp
mov
or
xchg
push
cli
mov
xchg
xor
ds
test
clc
pop
mov
xlat
mov
and
inc
test
cld
pop
mov
jo
scas
int3
ja
xchg
les
and
fs
jno
in
xor
dec
add
ret
sub
ss
inc
inc
scas
push
mov
push
aaa
pop
aas
mov
mov
xchg
mov
inc
adc
data16
mov
cmp
nop
ja
mov
push
or
add
and
(bad)
xchg
or
lea
(bad)
push
sbb
out
push
ret
data16
push
ja
outs
add
mov
imul
inc
mov
cmp
sbb
and
mov
jb
push
push
jg
sub
addr16
(bad)
cmp
jge
sub
jae
cli
aam
aad
jno
pushw
ror
jmp
out
enter
push
rcl
mov
ror
jge
add
sbb
fld
nop
fcomp
and
push
rcr
pusha
dec
sahf
dec
push
(bad)
lods
push
rol
out
pushf
mov
mov
pop
cmp
(bad)
out
mov
(bad)
pop
sub
adc
xor
push
arpl
xchg
xor
mov
and
pop
(bad)
jmp
outs
mov
or
sub
sar
xchg
or
cmps
adc
cmp
imul
sbb
iret
add
mov
mov
add
cmp
push
push
pop
repnz
xchg
dec
mov
enter
inc
fmul
or
pop
sub
push
cmps
push
sub
xchg
lock
pop
fild
in
sub
add
retf
lods
ds
sub
mov
jbe
mov
mov
sbb
mov
cs
pop
or
nop
inc
in
inc
lea
bound
mov
pop
mov
sbb
ss
inc
add
dec
or
cmps
inc
lods
jo
add
in
sub
scas
add
ja
cmp
push
les
mov
xchg
jle
(bad)
sbb
enter
mov
vmread
xor
out
(bad)
call
xor
jmp
pop
sub
and
add
adc
xchg
pop
mov
ret
add
mov
jns
pop
sbb
dec
push
push
push
mov
(bad)
xchg
ins
lea
add
mov
add
cmp
rcl
fild
add
adc
xor
push
add
rcl
ins
lods
das
sar
inc
shl
inc
add
mov
jmp
dec
dec
fimul
int
fs
scas
int3
jo
add
or
sbb
jb
retf
or
aas
adc
sar
daa
sbb
call
sub
mov
int
fcom
mov
xchg
xchg
push
mov
push
ins
add
adc
fwait
xchg
outs
mov
jns
jae
xchg
fadd
jo
(bad)
rcl
adc
fdivr
mov
push
mov
mov
les
pusha
mov
sub
mov
adc
adc
mov
punpcklbw
push
inc
and
aaa
and
mov
outs
dec
cmps
push
pushf
(bad)
fadd
dec
shl
cld
add
imul
call
push
or
adc
jmp
add
in
out
jmp
xor
xor
add
add
push
ss
je
add
movs
xchg
cs
bound
loope
pop
ror
mov
aam
inc
stc
adc
icebp
jne
mov
popa
adc
inc
inc
xor
inc
mov
mov
inc
pop
inc
sbb
add
or
sub
movs
call
xor
sbb
or
(bad)
bound
pop
(bad)
arpl
inc
sbb
push
xchg
fisttp
mov
xchg
mov
cmp
adc
sbb
sub
or
fs
dec
pop
aas
add
sbb
inc
xchg
ins
or
and
fidiv
fld
add
xlat
inc
xor
cmp
(bad)
movs
mov
ja
sti
cmps
mov
cli
jmp
xor
add
and
dec
(bad)
dec
and
cdq
and
add
rcr
push
scas
add
gs
(bad)
xor
aam
cmp
push
pusha
xor
enter
int3
out
ficomp
ror
cmps
xchg
rcl
cmp
cmp
dec
mov
adc
xor
adc
jbe
adc
push
cmp
fdivr
add
cmp
cmp
sbb
and
shr
jl
push
sub
add
pop
and
test
sar
pop
fsub
les
push
dec
push
push
pop
les
popa
add
jo
inc
scas
mov
adc
mov
cmp
(bad)
xor
ja
gs
cmp
(bad)
ret
ja
add
scas
pop
inc
paddsb
xchg
or
call
sbb
stc
lods
movs
ins
out
and
sbb
jb
lahf
sbb
jle
xchg
jo
fs
fdivr
adc
adc
test
push
and
push
popa
or
ins
in
sbb
sbb
addr16
fwait
adc
pop
test
pop
(bad)
aas
push
push
cwde
ins
sub
push
sti
or
mov
daa
push
xor
inc
sbb
jg
ins
adc
adc
ins
pop
push
daa
cs
push
call
xor
(bad)
adc
adc
lea
add
imul
test
jbe
and
fs
jecxz
adc
sub
push
je
pop
sub
adc
jl
add
pop
je
sbb
sbb
mov
icebp
push
jae
add
fwait
dec
scas
inc
dec
or
bound
cmp
cmp
or
(bad)
push
push
pop
pop
cmp
inc
pop
push
add
xor
push
out
lock
xchg
nop
pusha
pusha
xor
pop
data16
jge
ror
xor
adc
push
data16
loope
inc
inc
test
daa
mov
push
leave
in
outs
sbb
lods
dec
outs
fmul
xchg
popa
sbb
shr
mov
add
push
push
daa
out
push
mov
and
cmp
adc
add
(bad)
cmp
into
sub
adc
pop
leave
push
fiadd
push
cmp
imul
pop
and
xchg
jmp
pop
cwde
sti
or
cld
je
inc
cmp
mov
sbb
ds
in
movs
pop
rol
add
and
jns
mov
lods
add
pop
addr16
clc
mov
pop
stc
push
test
sbb
or
shr
mov
xchg
add
pop
inc
mov
mov
xchg
test
out
push
mov
push
mov
xor
mov
rcr
sub
inc
das
pop
jo
inc
sub
rol
and
mov
pextrw
sbb
inc
enter
inc
fst
jns
xor
mov
or
out
cs
bound
and
xor
xchg
je
lahf
jl
cmp
and
sbb
outs
sub
inc
jne
ss
mov
mov
imul
test
mov
jg
and
xchg
cmp
pop
mov
popf
je
mov
jns
or
rcl
jne
or
data16
pusha
fcomp
mov
fwait
loop
call
push
mov
test
sub
ror
mov
enter
jle
lods
fwait
push
pop
lea
cmp
jae
xchg
xor
ja
dec
imul
adc
sbb
dec
ds
dec
jne
mov
jg
enter
inc
or
push
(bad)
pop
inc
and
pop
pop
test
ja
sub
(bad)
adc
jno
mov
mov
or
xor
xchg
icebp
scas
xor
xor
das
and
dec
out
lea
xchg
or
gs
push
(bad)
and
gs
sbb
xchg
mov
movs
rcr
loop
test
pop
sbb
or
add
mov
and
push
add
mov
les
add
shl
xchg
sub
test
ss
pop
inc
cmp
lods
mov
dec
movs
pop
mov
pusha
push
retf
push
jle
lds
outs
shl
dec
ss
fs
cmps
out
rcr
or
cmps
sbb
add
outs
or
or
jnp
stos
and
cmps
(bad)
fild
inc
test
dec
sub
xor
lfs
pop
dec
jbe
xor
push
cmp
mov
cmp
xchg
cwde
pop
js
imul
push
inc
fisttp
jbe
xchg
mov
or
or
in
shl
es
xor
pop
iret
daa
and
sub
add
push
jp
jmp
test
jns
pushf
mov
popf
out
adc
push
inc
ja
xchg
pop
inc
jbe
aas
push
retf
clc
mov
inc
mov
clc
or
and
pop
leave
cmps
(bad)
mov
in
inc
add
cmps
xor
inc
daa
dec
inc
xlat
or
dec
fisub
dec
cmps
out
arpl
push
xchg
sbb
scas
hlt
mov
dec
dec
xor
test
dec
sbb
jns
adc
das
mov
add
push
sbb
or
and
jge
push
stc
and
test
aas
cli
mov
add
add
inc
sbb
sbb
and
out
dec
push
test
imul
mov
mov
cmp
mov
(bad)
sbb
bound
sbb
pop
sub
mov
js
jne
test
jp
sbb
xor
pop
scas
inc
adc
sbb
jbe
inc
adc
sub
add
pop
in
xor
icebp
xor
mov
jmp
push
pop
clc
jo
sahf
mov
cmp
out
cdq
inc
mov
and
ret
xor
xor
push
ret
fnstsw
movs
sar
push
pusha
outs
int
xor
add
in
push
pushf
aaa
mov
dec
sahf
mov
imul
xchg
xor
fild
sub
pop
mov
les
fbld
xor
mov
sub
add
cmp
xchg
enter
inc
fstp
sub
and
ins
lds
mov
mov
(bad)
rcl
sub
push
test
inc
xchg
in
or
and
push
inc
cmps
fsub
or
jae
push
push
jmp
push
(bad)
mov
or
dec
mov
pop
retf
gs
dec
xchg
or
cmp
mov
pop
and
dec
dec
jecxz
retf
mov
and
cmp
mov
pushf
std
cmp
cmps
jae
movs
push
mov
fcmovb
jl
js
lds
arpl
movs
in
pushf
cmp
dec
(bad)
stos
pusha
mov
dec
outs
xchg
xchg
pop
aaa
jge
xchg
xor
xchg
or
ret
pop
ss
lods
gs
lock
fimul
mov
dec
jg
jmp
xor
shl
sbb
test
or
mov
mov
ins
loop
cmp
imul
test
sahf
pop
stos
mov
push
lea
and
jb
retf
push
shl
jg
add
test
pusha
adc
ror
fdiv
pop
mov
xor
jmp
inc
out
push
or
and
inc
(bad)
fidivr
sub
test
ins
int
test
dec
icebp
mov
ins
sbb
xor
and
loope
sbb
pop
push
push
arpl
leave
js
mov
add
adc
add
scas
sub
mov
add
jp
inc
dec
dec
or
push
pop
push
es
fcom
rcr
inc
and
cwde
mov
add
cmps
mov
loope
(bad)
in
or
sbb
in
mov
cmp
cmp
in
xchg
ret
test
mov
loopne
imul
dec
arpl
sbb
adc
xchg
or
or
rol
pop
ror
ins
sub
shl
nop
enter
adc
ucomiss
inc
sbb
or
push
adc
dec
ror
fwait
sub
cmp
inc
sahf
int
adc
xor
fist
push
xor
in
ret
xchg
cmp
movs
jecxz
fcomp
movs
mov
es
and
xchg
in
(bad)
adc
sbb
inc
cmp
pusha
add
js
cmp
xor
gs
sbb
es
adc
cmp
sbb
ror
cmp
push
jns
cmp
xor
jnp
xor
cwde
and
lock
inc
or
dec
sub
ins
jne
aaa
popf
mov
xchg
fst
xchg
sub
inc
cmps
jbe
push
adc
add
test
jl
xchg
pop
stc
mov
push
mov
jmp
nop
sub
mov
repz
stos
push
xchg
mov
push
add
lock
jg
dec
dec
clc
std
mov
mov
inc
or
mov
dec
pop
movs
jecxz
xchg
inc
inc
ret
mov
inc
bnd
and
mov
mov
les
push
loop
dec
sub
jmp
xlat
and
arpl
push
or
ins
mov
inc
and
popa
adc
push
fs
cmp
add
jl
pop
sub
jne
push
adc
aas
movs
pop
or
mov
pop
je
xor
int3
mov
jl
or
pop
rcl
bound
mov
dec
adc
lods
and
inc
pop
mov
ss
jmp
sbb
(bad)
fidiv
or
adc
fsubr
push
fmul
fsubr
adc
add
inc
xchg
cmp
jecxz
add
dec
dec
loopne
xchg
rol
xlat
(bad)
stos
dec
popa
gs
jo
leave
imul
or
sbb
or
xchg
pop
addr16
lds
adc
mov
clc
je
fsub
mov
cmp
not
adc
cmp
or
cmp
sti
jl
mov
je
add
mov
adc
gs
adc
or
add
sbb
ficom
fwait
add
jg
mov
pop
or
out
push
jg
add
dec
call
push
inc
add
mov
pop
adc
fld
clc
cmps
or
or
jns
fisttp
mov
pop
(bad)
int3
aam
jle
pushf
retf
test
ins
sbb
lock
xor
inc
aaa
nop
fld
dec
sbb
lea
adc
adc
ret
adc
in
and
in
push
cwde
sbb
ror
push
loopne
call
loope
inc
cs
test
or
enter
ss
mov
adc
or
call
push
pop
inc
imul
movups
dec
mov
clc
add
adc
pop
test
rcr
pop
cwde
mov
nop
sbb
lock
dec
in
imul
ins
dec
inc
xchg
inc
jmp
loopne
push
(bad)
outs
dec
pop
push
stos
cmp
jo
cmp
jmp
jmp
mov
xor
in
inc
pop
aam
in
xor
pop
mov
stos
pop
push
test
ret
mov
inc
fcomp
jle
and
dec
test
shl
inc
add
push
loope
mov
(bad)
mov
sub
(bad)
dec
cld
sbb
and
xchg
push
or
push
mov
or
sub
cmp
jne
cmps
in
or
sbb
outs
adc
jo
and
and
jo
setl
cmp
lods
inc
ret
push
sti
or
cmp
jle
dec
cmp
mov
bound
cmp
push
jb
pop
add
mov
aas
add
and
add
mov
add
adc
mov
add
or
pop
push
cmps
mov
js
(bad)
and
mov
mov
xor
ins
bound
mov
or
fwait
mov
add
and
ins
or
push
clc
out
and
bound
ins
fs
mov
xchg
mov
adc
xor
(bad)
dec
shl
pusha
sbb
(bad)
je
cli
adc
dec
test
std
(bad)
pop
inc
shl
scas
mov
push
iret
sbb
(bad)
loopne
adc
andps
or
fstp
je
adc
push
call
push
ret
jbe
cwde
das
aam
add
mov
pusha
frstor
sar
or
sub
sub
adc
adc
jne
bound
or
pop
fild
push
sub
jle
or
in
inc
jle
les
cld
push
sub
ins
dec
bound
mov
cld
lods
imul
push
shl
jle
ss
cmp
pop
push
or
mov
push
mov
aad
loopne
adc
add
pop
(bad)
repnz
lods
xor
pop
jne
mov
inc
aam
retf
cdq
cmp
mov
inc
jecxz
in
(bad)
or
cmp
repz
int3
loopne
call
inc
dec
imul
daa
xor
pop
outs
mov
clc
sub
jae
in
cdq
mov
inc
js
call
dec
ret
cmps
pop
sbb
in
sbb
mov
pusha
mov
inc
add
fs
stc
xor
and
cmp
or
sub
add
inc
dec
outs
je
into
pop
jnp
gs
dec
cmp
test
adc
dec
sub
fs
mov
(bad)
and
inc
(bad)
cs
add
mov
jecxz
sub
add
shl
add
aaa
outs
aas
loopne
jmp
cmp
or
inc
push
jecxz
push
inc
sahf
mov
inc
jbe
inc
adc
mov
popa
or
mov
cmp
or
or
or
mov
repnz
aas
gs
es
in
push
or
loope
push
xor
ror
in
mov
adc
mov
sahf
mov
cmovo
shl
dec
(bad)
(bad)
push
cmp
out
pusha
cmp
pusha
xor
push
xor
leave
js
xchg
lods
je
in
cwde
xchg
mov
arpl
mov
inc
rcl
in
and
adc
inc
aam
sbb
inc
lds
or
scas
dec
out
sub
dec
rcr
add
add
pop
inc
jmp
push
add
mov
les
hlt
pop
(bad)
jmp
lods
imul
in
imul
add
xchg
mov
adc
inc
add
ja
mov
cmp
push
push
lods
jge
in
or
hlt
sti
arpl
inc
pop
adc
pop
nop
add
lea
mov
dec
adc
test
fcom
pop
mov
cmp
sbb
lods
add
das
lock
mov
outs
mov
push
pop
and
push
and
or
add
push
sar
add
push
add
jbe
dec
adc
xor
cmc
dec
dec
inc
and
inc
sbb
std
xchg
jecxz
add
xchg
(bad)
push
mov
lea
mov
inc
or
inc
ss
dec
pop
rcr
mov
inc
sub
xchg
arpl
dec
or
pop
mov
push
icebp
push
(bad)
sub
or
push
xor
xchg
out
sub
adc
push
jo
aam
dec
ror
jo
mov
push
jle
push
dec
or
xor
push
xor
je
imul
sbb
data16
and
jae
add
dec
rcr
or
test
mov
sbb
and
push
sbb
mul
pop
int
cld
into
push
push
add
cs
cmc
add
js
add
inc
and
scas
nop
or
jle
push
push
mov
push
or
and
shl
fcom
push
add
mov
mov
jb
add
popa
push
pop
inc
dec
or
and
pop
push
push
test
push
bound
inc
pop
ins
add
push
cmp
clc
push
(bad)
or
push
or
jecxz
or
push
call
ret
or
or
popa
dec
fcmovb
inc
jo
jo
and
xchg
outs
test
sbb
inc
or
push
inc
xchg
mov
or
push
jnp
je
xlat
jl
mov
adc
mov
push
cmc
mov
push
and
xor
xor
jg
adc
ss
cmp
xor
inc
or
dec
dec
dec
(bad)
xlat
mov
dec
dec
dec
dec
jno
push
push
push
push
pop
pop
pop
cmps
mov
add
inc
pop
dec
stos
inc
jb
imul
inc
dec
adc
xchg
nop
leave
retf
pusha
add
rol
add
call
jmp
test
adc
std
les
shl
adc
xor
inc
std
out
xchg
data16
sbb
inc
add
mov
mov
js
shr
pop
mov
sbb
cmp
adc
call
retf
xchg
(bad)
pop
push
add
mov
push
mov
push
sbb
push
fs
outs
test
mov
lahf
fidiv
addr16
clc
sub
nop
pushf
push
xor
or
std
sub
cmp
jne
(bad)
mov
scas
add
repnz
jge
shr
xchg
dec
aas
or
pop
lahf
sar
repnz
cmp
mov
push
fmulp
sbb
sub
leave
aad
nop
jmp
js
fisub
add
xor
fadd
mov
jmp
and
es
jmp
inc
inc
inc
popf
popa
xchg
imul
pop
imul
hlt
add
(bad)
loop
add
or
clc
enter
aad
dec
mov
bound
rcr
sbb
inc
jb
and
mov
mov
and
sbb
cmps
adc
icebp
sbb
jns
hlt
add
shl
iret
pop
xor
cdq
push
pop
cmovne
imul
inc
xor
or
inc
fsub
mov
inc
xchg
rcl
in
mov
add
pop
sub
dec
cmp
inc
sbb
pop
ret
cmp
ins
sti
je
xor
into
sbb
out
mov
test
pusha
inc
xor
pop
leave
enter
jmp
loopne
mov
inc
shl
lods
pushf
xchg
xchg
mov
std
(bad)
(bad)
or
jmp
inc
arpl
push
add
loop
or
xchg
cmps
sbb
std
dec
pop
mov
arpl
aam
mov
and
mov
xchg
(bad)
xchg
jnp
sbb
mov
test
inc
aas
adc
mov
cmp
ja
or
jl
loopne
xor
popa
jne
mov
add
out
fild
in
or
cmp
jg
mov
ret
push
push
inc
or
mov
sub
dec
sbb
dec
fcmovnbe
inc
js
jo
(bad)
ins
stc
add
sahf
sub
add
push
mov
scas
add
jmp
jae
ret
jle
arpl
clc
dec
jo
es
sub
gs
fs
outs
sub
mov
cmps
dec
ror
ja
jo
test
idiv
ss
pop
xor
jmp
aaa
jmp
xor
repnz
mov
push
xor
pop
and
std
adc
in
(bad)
adc
cmps
movs
outs
cmp
xor
out
push
(bad)
jg
cmps
push
or
outs
push
pusha
jmp
cwde
shr
sub
sbb
in
xchg
sub
inc
(bad)
and
mov
inc
daa
ret
inc
cmp
sbb
add
fild
into
inc
cmp
or
adc
push
jb
(bad)
outs
dec
dec
jmp
jno
xchg
nop
and
inc
cmp
movs
lods
repz
or
sbb
fsubr
ins
movzx
cmp
fild
inc
push
jo
lock
inc
je
rol
dec
fisub
test
pusha
inc
xor
and
xor
xchg
jbe
xchg
xchg
add
fsub
cli
or
add
dec
fwait
rcr
pop
mov
das
xor
mov
pop
push
sbb
add
mov
cmp
adc
inc
aas
test
pusha
jmp
mov
iret
call
pop
xchg
frstor
test
sbb
cmp
cmp
retf
or
pop
push
mov
lea
fadd
pop
dec
xor
xchg
dec
call
sub
add
mov
mov
loopne
dec
jge
jmp
int3
rcr
and
std
jmp
cmp
adc
pop
cs
out
or
jmp
fwait
cmp
add
pop
icebp
mov
inc
dec
arpl
sbb
mov
rol
cmp
xchg
enter
cmp
ret
sub
enter
jle
adc
push
icebp
fucomi
dec
rol
pop
jae
fstp
loopne
pusha
popf
fs
push
xchg
lock
mov
jne
xchg
lods
inc
inc
mov
push
fimul
pop
test
dec
daa
rcl
ss
mov
je
jnp
jb
test
or
aas
bnd
int3
jmp
adc
sbb
and
adc
call
pop
ror
shl
mov
add
mov
out
jno
std
lods
or
(bad)
mov
add
leave
mov
or
sbb
loopne
adc
dec
sbb
cmps
push
neg
jmp
ret
fcmove
(bad)
pusha
cmp
clc
pop
cmp
arpl
ins
dec
lock
inc
iret
pop
xlat
dec
js
push
or
(bad)
xchg
imul
mov
daa
(bad)
push
mov
add
mov
loopne
xor
aam
adc
sti
sbb
add
cmp
in
ficom
push
adc
std
ins
and
in
push
or
push
in
jmp
cmp
adc
push
adc
adc
add
cmp
xor
or
sub
dec
movs
dec
sti
stos
movs
push
add
jmp
je
xchg
dec
call
jo
and
or
cdq
je
movs
cmp
pusha
adc
pop
pop
aam
dec
add
clc
dec
sbb
mov
test
popa
dec
je
xor
sub
inc
dec
scas
dec
pop
(bad)
xor
dec
cmp
push
mov
popf
leave
fbstp
outs
es
add
xor
mov
mov
mov
hlt
outs
sbb
mov
shl
mov
or
call
test
je
adc
call
fisttp
jne
cli
adc
je
je
pop
jbe
xor
and
ror
xchg
sahf
jecxz
mul
dec
dec
ins
gs
inc
movs
test
xor
mov
mov
push
jmp
adc
pop
adc
out
int
dec
and
or
es
inc
xchg
mov
push
xor
inc
mov
test
cmp
jno
fwait
jg
inc
les
xchg
ss
cmp
sub
sub
mov
lock
and
mov
jbe
sbb
out
ins
les
and
gs
dec
repz
sbb
mov
jmp
adc
or
les
dec
arpl
in
mov
dec
pop
in
push
push
jecxz
sub
ror
xor
sub
jmp
imul
mov
add
int
arpl
clc
shr
enter
pusha
sub
mov
adc
js
inc
add
and
add
or
mov
add
test
je
cmp
pop
hlt
sub
int3
ficom
adc
mov
mov
loop
lock
les
inc
add
retf
push
ret
or
ret
and
mov
out
test
out
and
or
int
hlt
adc
std
ror
adc
inc
cmp
or
inc
jmp
enter
fcmovu
push
shl
cs
mov
shl
rcl
mov
popf
add
je
test
sub
or
inc
movs
dec
repz
inc
outs
xchg
ret
cwde
out
or
je
cmp
nop
and
dec
loope
jb
push
jp
es
aaa
icebp
pop
xchg
mov
out
mov
sub
xchg
sbb
add
test
pop
das
int3
(bad)
adc
sbb
iret
(bad)
jo
push
loopne
cmp
cmps
cmp
shl
aam
shl
aaa
adc
mov
mov
inc
sar
jbe
mov
in
sbb
push
mov
sbb
jbe
std
xchg
or
pop
jp
sbb
retf
pop
ret
jbe
les
sar
inc
cdq
pop
inc
aaa
jle
fist
adc
sbb
les
fdivr
or
jns
lds
push
sbb
inc
mov
fmul
gs
bound
test
cmp
dec
mov
add
ret
and
mov
add
lock
add
mov
sub
xor
es
test
cmp
fsubr
sbb
inc
or
jno
or
fsubr
fidivr
inc
cmp
and
dec
jge
invd
dec
dec
pop
xchg
sbb
stc
lock
fcmove
mov
pushf
dec
xchg
mov
js
ins
js
hlt
sub
inc
add
dec
jge
std
jge
sbb
adc
fwait
adc
push
fsubr
movs
adc
(bad)
call
(bad)
mov
mov
mov
(bad)
setb
mov
sbb
xor
xchg
or
jl
jbe
push
jne
into
adc
or
or
or
sub
mov
(bad)
cmc
push
add
inc
push
in
enter
pop
lock
and
outs
daa
rol
pop
movs
and
or
or
jne
stos
push
xchg
fs
test
out
and
lea
test
(bad)
(bad)
lock
dec
cmc
sub
ror
sub
shr
(bad)
pop
mov
test
xor
jbe
sbb
into
hlt
cmp
in
iret
hlt
hlt
pop
iret
xor
push
shl
adc
add
and
test
xor
sbb
dec
clc
or
pop
pop
xor
and
add
xor
fwait
or
hlt
ror
jo
add
and
rol
aas
call
ins
sub
cmp
jae
dec
fxch
add
or
scas
jmp
or
ud2
(bad)
mov
int
iret
pop
scas
add
loopne
and
test
dec
add
inc
cwde
add
adc
dec
leave
and
lods
imul
add
ins
cmp
data16
inc
and
enter
shl
gs
(bad)
lahf
adc
les
mov
xchg
sbb
bound
je
mov
test
sahf
mov
pop
jl
sbb
xchg
mov
push
mov
arpl
add
mov
adc
lods
(bad)
or
or
jecxz
xchg
loopne
add
sbb
adc
sub
mov
add
cmp
dec
pop
pusha
mov
sbb
push
or
in
or
ret
fsub
mov
sub
dec
cld
(bad)
test
imul
outs
out
sbb
cmp
adc
push
jns
fbstp
loop
inc
adc
jae
mov
stc
retf
test
lods
and
and
sub
out
sbb
retf
stc
lock
dec
ret
pop
inc
sub
dec
clc
retf
add
in
outs
fiadd
dec
or
dec
clc
adc
icebp
and
xor
add
repnz
mov
clc
lock
adc
dec
call
xchg
add
fild
add
and
fstp
add
fisubr
jle
inc
mov
loopne
test
and
cmp
cmp
jg
adc
pushf
fs
arpl
sbb
popf
jne
inc
inc
cmps
add
push
shl
ror
daa
add
mov
mov
cmp
cmc
pop
inc
(bad)
fidivr
lahf
sbb
xchg
daa
aam
push
sbb
inc
pop
fidiv
cli
xor
int
add
mov
aam
dec
shl
je
mov
xchg
push
sbb
and
adc
adc
cld
cmp
sbb
xchg
pop
inc
das
test
dec
push
fs
push
xchg
push
add
jl
retf
nop
pushf
pop
jl
or
pop
ret
adc
dec
retf
add
(bad)
rol
popf
sbb
cdq
sub
push
sbb
mov
aam
dec
dec
mov
adc
pop
dec
and
xor
(bad)
and
mov
leave
or
add
sub
and
mov
adc
xor
inc
adc
(bad)
inc
gs
adc
inc
call
lea
inc
movs
sub
movs
sbb
es
cmp
imul
sbb
int
push
and
stc
mov
xor
adc
add
sub
sub
fprem1
inc
(bad)
mov
repz
sbb
aad
add
mov
xor
xor
or
movs
inc
outs
loope
jl
movs
xor
mov
data16
add
xchg
push
sar
xchg
cmp
(bad)
mov
aas
add
inc
push
loop
inc
add
stos
adc
jecxz
cld
out
add
ss
push
daa
int
add
mov
fdiv
pop
fdivr
ret
nop
push
dec
ret
add
dec
ja
cmp
xor
ss
adc
dec
outs
and
push
popa
cmp
cmp
mov
xor
adc
pusha
std
pop
fmul
mov
cmp
inc
fldz
jmp
pop
cmp
dec
xchg
shl
adc
movs
sti
(bad)
ror
movs
jae
ins
mov
push
dec
in
outs
dec
mov
jle
or
add
xor
je
cmp
push
add
mov
adc
mov
ins
shr
add
and
(bad)
mov
enter
cdq
jno
dec
jnp
pop
out
aas
je
(bad)
or
popf
and
xlat
fcom
sti
lea
adc
fmul
push
sar
inc
fcomp
cmc
push
sbb
out
or
jnp
test
enter
cmp
pusha
mov
sbb
or
xchg
inc
inc
jo
aad
adc
leave
outs
cmp
inc
push
(bad)
xor
ss
mov
or
imul
jnp
add
lods
test
mov
cmp
sbb
inc
dec
jg
add
push
pop
mov
push
lea
xlat
out
push
add
pop
pop
hlt
daa
add
or
cmp
cmp
add
jns
fs
and
mov
aaa
das
sub
pop
mov
mov
sbb
mov
daa
shl
nop
cmps
loop
ret
pop
add
jmp
dec
push
add
mov
push
cs
sbb
pop
out
aad
shl
lods
mov
adc
dec
sbb
popa
(bad)
aam
sbb
push
outs
or
inc
mov
mov
add
ror
jl
dec
fcom
add
ret
xchg
mov
ficom
adc
push
arpl
popa
pop
mov
fsubr
or
fisubr
out
jmp
dec
(bad)
cmp
sahf
gs
retf
xchg
and
jne
xor
bound
push
cdq
or
ror
cwde
cmp
xor
mov
dec
jmp
xor
inc
inc
popf
push
sbb
bound
xor
dec
pop
jo
in
inc
cmp
xor
cmps
retf
add
push
pop
or
addr16
mov
stos
push
out
sbb
dec
push
mov
xor
inc
iret
inc
and
or
push
adc
mov
or
push
inc
call
mov
loope
adc
push
adc
js
cmp
inc
add
push
jno
les
movs
leave
shl
xlat
fdiv
movs
mov
dec
or
push
aas
push
sub
push
push
aas
inc
jmp
mov
nop
rcpps
out
inc
sub
movs
inc
inc
nop
jmp
push
mov
push
cmps
addr16
inc
dec
push
or
and
ja
jno
es
mov
xchg
cmp
ins
shl
out
cmp
loop
ret
xchg
inc
add
int
xchg
lods
sbb
loopne
enter
mov
inc
xor
xlat
loopne
dec
mov
sbb
sub
ss
xlat
emms
dec
sub
retf
fidivr
out
cmps
sti
push
cmp
cmp
ret
add
stos
and
jl
adc
sti
mov
leave
mov
xchg
dec
sbb
mov
lahf
add
jle
lock
mov
in
in
xor
mov
(bad)
push
mov
xlat
dec
pop
adc
lea
fmul
adc
aas
lock
add
ret
mov
je
int3
dec
fidiv
mov
xor
jnp
mov
ror
dec
dec
pop
jnp
xor
cmp
pop
cmp
adc
mov
xchg
outs
dec
daa
ds
xchg
sub
dec
cmp
dec
xchg
sub
inc
or
pop
mov
jb
add
mov
leave
fwait
sbb
adc
xor
add
outs
ds
jecxz
push
mov
dec
push
jl
or
or
mov
retf
clc
jmp
js
dec
mov
jmp
push
lea
stc
push
out
js
mov
jl
mov
or
rol
data16
push
into
shl
sbb
ins
inc
xor
ror
jae
mov
cmp
xchg
inc
pop
pop
add
adc
inc
mov
clc
(bad)
in
cmps
ins
jne
sbb
mov
movs
or
add
mov
cwde
mov
pusha
xchg
xchg
mov
sbb
or
adc
in
and
xor
rcl
push
add
jns
sbb
sbb
std
rcl
cmp
in
xor
nop
lods
pop
pop
add
enter
lock
sbb
push
mov
mov
mov
add
aam
or
loope
push
adc
out
xchg
dec
fimul
jne
push
mov
fld
inc
sbb
cmp
jns
ins
push
xor
lock
push
lock
pop
jle
mov
push
fist
or
cld
push
jns
sub
aaa
push
dec
rol
and
inc
add
jbe
mov
dec
and
sub
xor
sbb
outs
dec
scas
add
sub
push
cmps
or
sub
adc
inc
add
retf
rol
int3
into
inc
jl
add
out
add
lods
imul
mov
out
daa
lea
xor
pop
icebp
out
mov
push
pop
mov
jnp
or
or
loopne
inc
or
fcmovnb
hlt
scas
fadd
inc
popa
inc
hlt
sbb
in
loopne
cmp
test
ins
or
add
dec
pop
lea
and
or
dec
and
and
leave
sbb
aaa
les
ss
mov
fidiv
or
ud0
adc
fisubr
cwde
or
dec
push
pop
lock
and
dec
xor
int3
fs
in
cdq
xchg
ficomp
pop
std
je
push
sbb
call
repz
mov
sar
mov
pop
dec
sbb
push
jno
addr16
lea
fsub
xchg
add
cld
int3
adc
(bad)
lds
inc
push
fs
push
js
les
and
cwde
popa
dec
mov
jae
cmp
shr
push
outs
jp
loope
and
nop
jno
sub
rol
mov
mov
(bad)
xor
outs
stos
add
(bad)
mov
fnstsw
jmp
push
mov
sbb
add
xor
cmp
cmp
sti
dec
jmp
inc
fild
cmp
inc
xchg
pop
mov
cmp
ins
or
jle
inc
lock
fidivr
or
(bad)
pop
xchg
xor
loope
jecxz
fsub
adc
imul
loopne
cmp
lds
icebp
add
adc
sbb
sub
popa
ret
adc
ss
into
xchg
lods
pop
arpl
jl
push
xor
jo
ficom
aas
jae
mov
test
ss
(bad)
stos
pop
retf
lock
test
sbb
jmp
sbb
push
mov
mov
retf
hlt
lods
lds
repnz
sub
dec
and
cmc
mov
xor
call
jge
mov
jp
push
adc
dec
test
popf
mov
xor
push
pop
xchg
lea
ja
xlat
jb
enter
pop
adc
std
(bad)
sbb
loopne
sbb
add
xor
or
dec
clc
stos
iret
sub
jl
inc
fisttp
adc
pushf
push
cmp
inc
mov
jmp
mov
dec
ret
sub
pop
inc
sbb
push
imul
or
inc
test
or
add
pop
jne
fucom
cmp
outs
loopne
movs
and
dec
leave
test
aaa
dec
and
dec
inc
jne
mov
nop
idiv
mov
cmc
add
jnp
adc
out
mov
call
ins
pop
push
cmp
push
enter
push
mov
pop
cdq
or
sub
mov
inc
mov
(bad)
push
jb
cmp
jl
pop
jo
inc
lea
push
sub
inc
cli
mov
rcr
test
retf
cmp
test
mov
lea
sbb
dec
and
sub
push
adc
les
mov
lea
inc
fidivr
es
and
push
mov
leave
call
xchg
pop
push
mov
adc
sbb
mov
mov
call
inc
es
ins
sub
xor
sbb
xchg
push
or
sub
xor
ret
adc
and
pop
add
cmps
xor
dec
aam
cmovge
cmp
mov
or
aad
xchg
push
push
add
add
add
mov
add
cld
in
add
aad
sbb
call
rcr
add
inc
js
and
sbb
fld
add
mov
nop
or
jbe
or
xchg
and
cmp
fstp
addr16
pusha
xor
push
or
rcl
mov
ror
imul
dec
adc
cmp
fsubr
das
adc
adc
sbb
push
cmp
push
dec
je
pop
call
sbb
and
cs
(bad)
jl
aaa
test
ss
sbb
dec
sbb
hlt
inc
dec
mov
add
bnd
jecxz
arpl
adc
inc
fsub
pushf
pop
jg
gs
and
(bad)
sbb
add
xchg
icebp
adc
xchg
mov
scas
mov
loope
clc
jo
fst
in
mov
add
push
les
pop
adc
jmp
jge
loop
jne
mov
adc
xor
xor
inc
inc
out
dec
loope
sub
int
jmp
sbb
(bad)
inc
adc
test
sbb
push
xchg
pop
fdiv
adc
add
xor
adc
sbb
addr16
pop
mov
and
cli
and
add
in
ja
call
sub
(bad)
shr
inc
test
je
add
jp
adc
mov
cwde
repnz
repz
mov
mov
jo
fisttp
cld
or
cwde
in
push
dec
inc
imul
inc
mov
into
inc
lss
push
xor
aas
fwait
repz
stc
push
nop
push
test
popa
mov
mov
inc
inc
xor
inc
adc
sub
cmc
lds
mov
rcl
xor
adc
cmps
and
out
loopne
xchg
pushf
sub
lahf
fiadd
pusha
mov
xor
xor
pop
shl
pop
(bad)
cs
inc
call
ret
xor
call
dec
pop
pop
cmp
sbb
dec
adc
ins
fisttp
cwde
dec
adc
dec
cdq
add
xor
jmp
and
ins
mov
cld
std
xor
dec
rep
sub
inc
push
lahf
movs
test
out
test
and
pop
add
mov
out
cmp
or
imul
clc
jb
pop
mov
int3
push
mov
or
test
jmp
gs
dec
(bad)
(bad)
cmp
ins
in
rcr
cmp
mov
lea
push
or
popf
sar
cmps
add
enter
cmp
aaa
adc
add
mov
xor
push
inc
or
inc
mov
retf
cwde
test
js
sbb
xchg
adc
ret
movlhps
arpl
xchg
pop
add
ja
mov
inc
or
push
mov
les
jo
sbb
cmp
and
out
add
sub
and
sahf
ror
and
inc
fwait
dec
or
and
fwait
and
cmp
adc
adc
fbstp
xor
addr16
ret
push
dec
cmp
xchg
pop
nop
in
xchg
and
dec
inc
dec
shl
mov
in
cmp
push
add
test
nop
or
sbb
xor
inc
inc
or
jne
ret
sbb
test
or
mov
xchg
add
or
jmp
xor
jbe
mov
cmp
cmp
(bad)
lods
fwait
pop
sbb
xor
pop
adc
add
das
(bad)
call
and
inc
test
push
fsubr
sub
add
dec
(bad)
sbb
imul
sub
repz
push
or
je
mov
and
pop
not
ror
mov
xor
and
arpl
adc
in
push
nop
adc
fcomip
nop
dec
add
pop
out
call
push
(bad)
aad
pop
out
pushf
cmp
lock
fisttp
and
es
xlat
add
inc
loopne
aas
adc
sub
sub
jnp
push
push
mov
and
inc
test
fld
fadd
jge
les
sbb
or
aaa
(bad)
out
nop
or
pop
adc
and
(bad)
jl
adc
std
xor
jne
dec
inc
xor
adc
mov
jno
sahf
pop
and
or
or
add
jmp
and
xor
or
rol
xor
add
jle
test
push
add
in
aaa
in
lds
lea
xchg
(bad)
push
dec
ret
sub
ins
je
mov
inc
adc
aaa
adc
and
mov
mov
mov
xchg
mov
xor
push
jnp
inc
arpl
or
int
dec
or
adc
jns
adc
inc
inc
aaa
movs
lods
add
cmp
cmp
push
mov
inc
stc
cld
adc
and
inc
adc
ret
das
aaa
sbb
es
add
push
or
xchg
and
fsub
push
add
push
add
push
inc
mov
jae
mov
fstp
pusha
push
xor
in
and
ret
aas
cmp
scas
dec
(bad)
cmp
sub
adc
push
inc
dec
fimul
inc
push
pop
fld
and
xchg
movs
add
sub
ficom
arpl
dec
sahf
adc
inc
inc
(bad)
addr16
call
das
fmul
call
push
dec
jmp
adc
sbb
enter
dec
xor
or
mov
fucomi
cmp
jno
mov
push
pop
aaa
dec
test
add
cld
ret
pop
out
inc
and
xor
adc
rcr
pop
test
sbb
or
cmp
and
loope
cmps
in
pop
aad
ins
dec
or
push
cmp
sti
pop
sub
push
popa
pop
xchg
jmp
push
mov
es
or
sub
jmp
arpl
jno
imul
and
pop
imul
inc
push
or
lods
cmp
test
add
jne
in
in
out
gs
sbb
je
adc
rol
arpl
imul
and
mov
jmp
(bad)
and
es
cmp
stc
shl
add
pop
cli
and
adc
mov
add
push
loopne
adc
jmp
imul
cmp
inc
sub
xchg
or
or
fldenv
jge
xor
mov
fldenv
js
push
sub
mov
fist
sub
mov
inc
push
pusha
enter
loopne
xchg
lock
inc
or
dec
pop
sti
and
in
add
jg
adc
mov
pop
or
jmp
ins
jecxz
inc
imul
fdivr
call
mov
xchg
pop
dec
test
and
inc
mov
push
lea
cmps
shl
movs
std
xchg
pop
fwait
inc
cwde
retf
mov
(bad)
fimul
add
je
fisub
rcr
adc
or
add
(bad)
and
xor
icebp
pop
xchg
mov
lock
sbb
cmp
aam
fcmovb
dec
outs
xor
inc
cmp
imul
add
or
les
cmps
inc
jbe
in
or
xchg
or
mov
push
jo
push
lahf
call
mov
les
aam
mov
vorps
add
test
push
push
lds
jecxz
fdivr
and
bound
aaa
sbb
push
push
rcr
push
add
ret
and
push
pop
sbb
sub
out
xor
icebp
mov
inc
pop
fwait
mov
mov
cmp
mov
and
mov
xchg
pminsw
add
adc
mov
mov
cmps
imul
(bad)
div
pop
test
ror
je
ja
sbb
jo
push
ret
cmps
test
dec
add
mov
arpl
add
std
jmp
(bad)
ficomp
fs
xlat
int3
sbb
add
xchg
jns
popf
pop
call
or
sti
pop
pop
les
fisubr
pop
jae
xor
adc
test
xchg
jno
dec
ins
loopne
rol
pop
(bad)
int
pop
std
cld
sbb
jae
mov
mov
inc
xor
adc
jp
gs
cmp
jmp
sbb
jg
fbstp
inc
inc
sub
mov
push
imul
or
add
fcom
stos
sbb
ins
cmp
cmps
dec
cmp
jo
clc
and
cmp
fisttp
or
into
enter
fucom
outs
inc
inc
call
cmps
pop
adc
push
or
sbb
dec
add
div
je
in
or
and
or
movs
in
adc
bt
(bad)
or
jmp
scas
push
je
nop
add
add
sbb
and
and
pop
stos
and
mov
mov
xchg
jmp
loopne
xor
xor
cmp
stos
sbb
jb
cdq
sbb
je
mov
and
cld
xor
cmp
jne
cmc
ss
rol
dec
xor
not
sbb
mov
sbb
(bad)
mov
jne
retf
cli
sub
mov
xchg
sbb
out
push
inc
jg
stos
pop
xchg
mov
inc
pop
ja
sbb
das
mov
sti
jl
mov
xchg
adc
and
and
out
sbb
dec
jl
inc
sbb
sti
rcl
inc
jns
ret
(bad)
repnz
sbb
adc
scas
jl
fcomp
lods
mov
pop
and
fcomp
nop
mov
fst
xor
inc
retf
or
push
in
inc
test
shl
movs
cwde
dec
mov
imul
call
sahf
mov
jbe
outs
test
pushf
or
rcr
int3
je
in
push
pusha
pop
jo
fs
and
mov
in
inc
xor
loop
fdiv
cmp
mov
jg
adc
sub
dec
sub
frstor
sub
mov
push
inc
fs
nop
mov
push
xor
rol
dec
pop
sub
and
pusha
lock
and
in
pop
mov
loopne
mov
loope
mov
(bad)
add
mov
mov
cmp
jae
inc
jne
aaa
push
sub
push
rcl
or
or
xor
pop
mov
adc
mov
and
or
outs
(bad)
adc
lock
mov
cmp
pop
xor
pusha
gs
js
and
inc
jae
and
cmp
add
or
out
sub
xor
iret
sahf
loopne
sar
and
or
or
adc
xchg
cmp
dec
xor
jo
or
add
add
jae
mov
pop
or
add
fimul
fld
inc
sub
push
inc
push
dec
xchg
cmps
and
int
js
pop
push
ins
outs
gs
inc
daa
add
sbb
inc
shr
fidiv
in
or
cmp
add
addr16
out
fisttp
inc
push
push
push
sbb
jb
or
arpl
outs
and
inc
sbb
push
inc
inc
push
add
nop
or
mov
(bad)
mov
adc
dec
ins
xor
ja
imul
pop
or
dec
inc
imul
stc
push
popa
js
pop
jnp
pop
call
rcl
or
out
rcr
sbb
xor
or
and
add
xor
stos
out
daa
imul
cmp
dec
inc
outs
mov
cmp
in
xchg
inc
stos
jo
(bad)
mov
push
cld
inc
push
mov
dec
add
nop
pusha
jle
push
cdq
sub
mov
test
dec
sbb
jmp
inc
jp
xchg
out
mov
sub
dec
mov
test
mov
data16
test
or
rcr
push
sub
or
popa
fistp
or
call
pop
(bad)
test
mov
or
dec
outs
pop
lods
pop
repnz
push
sbb
inc
push
and
je
mov
push
nop
cmp
mov
lahf
adc
xchg
push
cli
out
push
cmp
mov
push
or
outs
js
add
pusha
outs
dec
pop
and
ss
inc
mov
ret
or
retf
push
fmul
mov
mov
bswap
dec
push
xchg
ins
loope
retf
adc
adc
inc
adc
pusha
or
pop
xor
adc
adc
inc
push
xchg
pushf
adc
push
adc
and
pop
and
push
sbb
dec
sub
xchg
or
sbb
sbb
xor
sbb
push
leave
sbb
pop
pop
or
push
push
add
pop
push
xchg
and
pusha
xor
sbb
and
and
or
es
cmps
xchg
stos
daa
sub
jns
cdq
sub
and
sbb
sub
cs
das
xor
inc
inc
ja
xor
sbb
xor
xor
ss
sbb
cmp
cmp
sub
cmp
cmp
dec
repz
sub
dec
inc
inc
cmp
mov
sahf
pop
push
dec
lods
dec
ds
or
and
enter
inc
ds
add
inc
inc
nop
xor
inc
ficom
(bad)
(bad)
jo
dec
outs
outs
imul
lea
movs
sbb
out
mov
inc
lods
lock
das
mov
shl
sub
ja
data16
scas
add
add
dec
scas
fxch
fcmovbe
add
daa
movs
outs
cdq
ret
xchg
and
or
stc
(bad)
mov
or
or
inc
jns
(bad)
retf
sahf
cmp
adc
cmp
popa
jns
fldenv
sahf
in
(bad)
dec
xor
mov
jno
xor
or
out
outs
pop
mov
adc
repnz
popa
fild
stc
lahf
push
or
add
test
lods
ret
in
sub
dec
or
and
aaa
or
jmp
data16
mov
mov
and
push
jo
dec
loopne
xchg
sbb
vmsave
push
cwde
lea
pop
add
and
sub
imul
or
ret
mov
jne
in
or
mov
push
jb
jge
adc
or
jae
sbb
sbb
iret
shr
mov
and
adc
fmul
pop
aas
inc
add
jnp
add
push
nop
rcr
icebp
ins
aaa
sbb
(bad)
mov
mov
and
pusha
jns
inc
dec
loop
add
ret
(bad)
sub
jae
pushf
inc
jl
ds
push
dec
(bad)
inc
movs
or
nop
sub
data16
neg
das
adc
add
xchg
cmp
adc
rcl
add
popa
popf
jbe
in
mov
or
fbld
lods
and
push
es
into
sbb
fisubr
scas
pop
inc
sub
mov
dec
sub
push
push
pusha
dec
popf
daa
add
add
add
add
add
sub
push
(bad)
adc
adc
sbb
and
sub
add
sbb
mov
inc
mov
mov
mov
inc
loopne
add
add
sbb
xchg
or
and
arpl
jnp
mov
ret
cs
sub
cmps
or
add
mov
mov
loopne
add
mov
mov
scas
jmp
adc
inc
pop
shl
mov
stos
retf
ins
sbb
mov
in
push
test
mov
pop
cmp
imul
pop
inc
enter
xchg
outs
mov
push
inc
xchg
mov
movs
mov
cwde
call
loopne
pop
mov
call
pop
aam
push
xor
es
mov
fcom
outs
imul
push
clc
push
je
lahf
js
pop
repz
sub
pop
dec
mov
adc
ds
mov
hlt
xchg
fstp
scas
pusha
lfs
push
int3
inc
or
or
ins
in
or
mov
pop
add
mov
daa
push
fcmovnb
xchg
push
iret
popw
sbb
dec
push
pop
ret
push
pusha
xor
sbb
fisub
movs
lea
test
add
leave
out
lods
sbb
mov
test
lods
pushf
jae
and
cmp
ins
dec
loope
pop
imul
adc
push
xchg
pop
inc
adc
inc
adc
adc
xchg
dec
xor
sbb
leave
push
push
jne
push
repz
sub
adc
push
add
adc
dec
mov
cmp
inc
xor
mov
xchg
sub
sbb
xlat
mov
inc
pop
cmp
pop
inc
sbb
xchg
xchg
out
pop
dec
ins
push
retf
fld
or
mov
add
xor
xchg
inc
repnz
mov
push
mov
add
rol
and
push
xor
pop
and
fs
mov
and
xchg
dec
mov
xchg
xor
add
and
inc
and
sbb
push
xchg
and
sub
ret
and
(bad)
sub
xlat
push
inc
push
int3
js
and
adc
mov
mov
add
push
mov
inc
pusha
inc
pop
pop
loope
sub
cmp
test
sbb
add
call
cmp
xchg
inc
push
dec
sub
cdq
mov
push
pop
retf
add
pop
sub
jbe
cmp
das
jbe
ja
pop
dec
(bad)
cmps
(bad)
pop
enter
xchg
cdq
xor
gs
lahf
es
fs
dec
loop
mov
xchg
push
test
inc
pop
inc
jb
xlat
xor
mov
outs
or
push
imul
jae
data16
repz
arpl
fsubr
dec
loopne
xor
(bad)
into
call
inc
xor
pusha
aam
and
xchg
cmp
or
dec
xor
push
push
lds
adc
xchg
inc
test
xchg
mov
cwde
addr16
mov
xchg
out
(bad)
dec
and
adc
loopne
and
jmp
mov
popa
jb
cwde
ret
or
icebp
dec
add
rcr
and
and
ins
lea
pusha
and
cmp
jmp
jecxz
in
push
inc
cmp
xchg
cmps
inc
cwde
cwde
mov
dec
add
es
xchg
mov
dec
ret
call
fcomp
push
xor
inc
pop
jns
imul
mov
or
inc
popa
cmc
add
sbb
xchg
add
inc
loope
push
(bad)
(bad)
inc
sbb
pop
xor
mov
dec
popa
and
dec
dec
es
jbe
or
push
loope
xor
scas
add
pop
sub
push
cmp
test
ja
xchg
dec
inc
mov
mov
or
or
aam
jns
or
ret
dec
push
or
lea
movs
ins
les
nop
stos
sbb
push
nop
sub
dec
sub
mov
inc
loopne
scas
(bad)
shr
jmp
mov
ja
rcr
loope
in
movs
ror
enter
xchg
xor
pop
ror
test
pop
or
push
dec
xor
xor
lahf
dec
sahf
push
test
cmp
loop
add
ud2
mov
jecxz
fldcw
shr
fsubr
les
sub
sub
(bad)
xchg
out
movs
inc
mov
sub
xor
xor
test
jg
or
nop
loopne
add
push
inc
ins
push
xchg
push
stos
inc
arpl
mov
ins
xlat
scas
push
jp
mov
(bad)
lock
adc
add
pop
cmp
pop
push
pop
sbb
and
push
or
mov
add
pop
mov
scas
mov
sub
scas
clc
mov
inc
pop
test
push
pop
inc
pushf
adc
nop
popa
daa
retf
fmul
push
sub
or
pop
pop
adc
adc
inc
bound
ss
sub
mov
or
and
add
call
outs
(bad)
jne
adc
or
je
and
imul
sbb
mov
and
add
inc
div
fld
test
loopne
movs
test
pop
fabs
mov
es
cmp
cmps
dec
or
pop
nop
add
ror
jl
dec
dec
adc
sub
xchg
je
mov
inc
jb
lods
and
xor
jge
xor
ins
or
sbb
cmp
add
jnp
sbb
mov
add
sub
ret
adc
sbb
cmp
mov
or
enter
or
sbb
ss
popf
jo
jbe
idiv
sbb
sbb
and
popa
dec
jl
aam
ja
sub
dec
mov
je
mov
push
xchg
dec
ss
pop
cmp
or
fld
cmp
jge
ins
mov
pusha
push
cmp
pop
pop
or
cmp
cmp
je
mov
dec
sbb
rcl
push
sbb
add
cmp
aam
add
pop
fisttp
push
das
outs
lock
xchg
jmp
inc
ja
mov
daa
ret
mov
int3
push
add
mov
mov
cmp
mov
call
pushw
cmc
xchg
inc
imul
sub
fwait
cwde
sub
sbb
fs
cwde
fnsave
fidiv
test
in
mov
loopne
cs
test
(bad)
lock
cmp
ins
jl
pop
test
imul
add
or
xchg
data16
add
adc
adc
add
fucomi
and
cmps
xchg
mov
jmp
mov
xchg
scas
ja
das
rcr
sbb
mov
sub
add
or
retf
enter
and
add
inc
cmp
and
and
pop
push
mov
dec
dec
cmp
imul
or
add
add
and
les
mov
fnsave
in
shl
sub
test
and
movs
xchg
sub
hlt
test
xor
lds
xchg
add
in
pop
leave
mov
mov
mov
jle
sub
sar
(bad)
pop
(bad)
or
lea
inc
mov
inc
add
or
mov
jae
out
sub
pop
inc
add
mov
out
lock
sub
and
hlt
mov
mov
pop
movs
and
in
push
adc
xor
loopne
sbb
mov
inc
or
mov
sub
clc
les
das
nop
add
fisub
xchg
(bad)
fcomi
sub
and
das
mov
push
xor
sub
pop
cld
out
outs
sar
inc
sub
mov
inc
popa
pop
push
xchg
in
mov
xchg
mov
or
push
inc
add
add
mov
jns
adc
add
add
ins
xlat
dec
leave
and
int
retf
add
in
adc
(bad)
push
xlat
lock
rcr
retf
pop
add
lods
int
outs
push
push
adc
pop
inc
stc
sbb
outs
sub
inc
sti
test
ret
outs
inc
fist
push
cmp
add
(bad)
adc
lahf
push
add
addr16
push
mov
rcl
push
sbb
and
mov
sub
mov
jp
test
mov
lock
add
push
add
in
mov
or
outs
mov
sbb
shr
popa
pop
scas
mov
push
mov
pusha
adc
add
das
enter
cmp
adc
test
pop
repnz
push
sti
hlt
neg
jmp
arpl
je
push
lods
add
xor
cmp
pop
cli
rol
adc
push
push
test
inc
mov
das
and
pop
bnd
data16
aaa
ret
popf
int3
cld
pop
stos
ins
jne
ror
push
jmp
sub
cmps
inc
xchg
and
pushf
push
sar
xor
add
pushf
shr
sbb
popa
mov
fidivr
xor
fld
adc
sar
mov
pop
push
inc
sbb
mov
adc
scas
add
mov
pop
push
mov
jae
cmps
adc
cmp
sub
jae
or
xchg
fs
jmp
dec
pop
fcmovnb
jnp
pop
and
inc
cmp
push
mov
jmp
inc
inc
or
jns
jg
cmp
adc
push
or
popa
xchg
mov
movs
test
popf
add
(bad)
mov
addr16
rcl
rol
and
ficom
dec
scas
mov
pop
mov
js
sub
mov
and
add
adc
add
jmp
adc
jl
nop
cmovg
and
ss
jmp
mov
sbb
sub
push
clc
shr
add
jmp
pop
ja
dec
or
fnstenv
mov
mov
dec
push
icebp
daa
inc
mov
add
popf
mov
pushf
and
movs
inc
xor
out
xor
fcom
jle
push
outs
enter
xor
fs
and
sbb
sbb
shl
pop
and
adc
aas
fdiv
rcl
cmp
push
inc
jne
sbb
push
push
lahf
inc
adc
adc
mov
add
push
lea
je
mov
mov
shl
add
lahf
sub
sub
adc
xchg
cmc
(bad)
lods
call
and
xor
lods
add
aam
scas
repz
daa
add
iret
ins
or
or
dec
mov
mov
loopne
mov
sub
sub
sbb
mov
popa
lods
add
mov
add
push
inc
nop
adc
cld
fsubr
adc
sbb
push
cmp
lds
fs
mov
pop
add
aas
xchg
ret
or
or
mov
lea
shr
mov
adc
add
xor
or
or
push
add
cmp
and
lds
or
add
sbb
dec
sub
add
xor
mov
sub
js
out
jmp
pop
add
or
sub
xor
jl
adc
leave
cmp
xor
xchg
sbb
xor
sub
or
bound
and
fild
nop
lea
push
mov
add
icebp
mov
push
xlat
and
push
mov
push
mov
clc
sbb
sub
sbb
adc
cwde
push
dec
sbb
push
xchg
dec
jmp
out
ds
adc
shl
push
dec
cmc
xchg
jo
mov
loopne
sar
mov
ret
push
nop
pop
adc
xchg
add
add
ins
stos
add
cmp
xchg
mov
pop
fisttp
mov
adc
outs
xchg
or
adc
lods
pop
nop
popa
les
xchg
movs
adc
clc
mov
push
sub
sub
xor
nop
push
je
inc
das
dec
push
adc
or
test
and
daa
out
sub
popa
bound
cmps
jecxz
sbb
push
and
lea
out
inc
jns
adc
push
mov
mov
lea
pop
fmul
(bad)
mov
inc
stos
xor
mov
sbb
(bad)
xor
ret
xor
cwde
dec
xchg
cvttps2pi
mov
loop
cmp
inc
mov
shl
or
inc
add
lock
jge
int3
ss
pop
imul
dec
adc
push
cwde
push
mov
aad
add
adc
mov
lock
or
adc
enter
or
or
push
cwde
bound
call
mov
aam
pmulhuw
mov
bound
sbb
sub
xor
imul
leave
or
or
cs
inc
jmp
nop
push
dec
dec
in
(bad)
ret
and
pop
add
loope
clc
pop
cmps
add
mov
push
fidiv
fs
(bad)
and
pop
dec
test
outs
or
or
xchg
dec
icebp
and
pusha
push
mov
mov
push
mov
into
adc
inc
dec
cmps
test
push
test
jb
inc
pop
cs
adc
adc
test
shl
fiadd
aaa
call
add
or
and
arpl
jl
push
sbb
push
lds
pop
data16
mov
push
push
lea
push
mov
add
aaa
lahf
adc
or
mov
(bad)
cmp
std
popa
cmps
aas
outs
or
lds
sbb
out
mov
pop
imul
mov
pop
jnp
and
jo
dec
ja
mov
daa
pop
jb
inc
lods
or
push
push
(bad)
sbb
pusha
cmp
ss
pop
and
cmp
push
dec
push
jns
adc
adc
mov
popa
out
std
adc
jle
or
jp
sub
stos
inc
fstp
mov
pop
adc
(bad)
dec
mov
dec
dec
pusha
add
jmp
add
sbb
or
(bad)
jmp
shl
push
nop
dec
mov
enter
movs
scas
pop
push
pop
dec
je
inc
jp
mov
add
fld
(bad)
stos
mov
xlat
push
adc
nop
push
xchg
add
sbb
pop
test
or
pop
ins
push
rcr
data16
and
mov
ds
push
xchg
xor
and
jb
das
inc
or
mov
cmps
xor
xchg
dec
push
adc
ins
pop
mov
lods
and
push
hlt
in
inc
mov
sbb
or
mov
and
add
add
test
or
xchg
imul
sar
push
sbb
fwait
test
fcomp
adc
and
ins
fs
jo
or
test
adc
and
xlat
pop
add
mov
sbb
pop
(bad)
and
stos
add
addr16
mov
cmp
push
mov
in
lods
or
add
add
mov
popa
xor
cdq
mov
inc
rcr
add
mov
popf
adc
nop
push
push
inc
sti
xor
mov
inc
xchg
or
or
imul
dec
dec
cmp
add
mov
or
add
stos
inc
fidiv
cmp
pushf
xchg
and
jge
push
sbb
adc
jo
xchg
arpl
adc
in
rcl
inc
add
or
lea
dec
sub
sahf
jmp
(bad)
push
fisub
or
rcr
push
in
test
push
add
sti
or
loop
jno
test
push
push
push
cdq
enter
test
and
mov
int
fisub
and
(bad)
cwde
mov
mov
jle
push
add
dec
cmps
jecxz
fs
xchg
inc
pop
and
inc
inc
adc
out
ffree
fisubr
push
daa
or
in
cs
shl
xchg
push
les
fs
ret
mov
mov
sub
les
or
or
repz
add
or
mov
sbb
mov
mov
add
and
fld
dec
les
pop
add
shl
fnstenv
pusha
cmp
(bad)
iret
add
arpl
jl
pop
mov
xchg
pop
mov
mov
add
(bad)
add
aam
inc
cmp
pop
call
test
movs
push
or
push
xchg
cmps
inc
not
jns
cmp
cmp
adc
adc
push
and
inc
add
hlt
mov
inc
(bad)
in
sub
push
adc
add
or
push
jne
and
(bad)
dec
mov
push
mov
pop
pusha
adc
shl
inc
sub
pop
je
inc
out
mov
cmp
jmp
popf
ja
fs
ficomp
cdq
xchg
addr16
int
fadd
cmp
shl
aad
xor
sbb
clc
inc
sbb
adc
mov
or
mov
inc
mov
lahf
dec
adc
sub
pusha
mov
sub
sbb
cmp
test
inc
lock
xor
cmp
add
jne
ins
sub
aad
stc
add
jnp
pop
scas
xchg
sub
ficomp
or
in
add
sahf
fs
mov
retf
test
xchg
pusha
adc
and
ja
popf
and
add
xchg
or
add
cmps
push
bound
mov
add
push
outs
adc
mov
mov
ret
xor
xchg
fbld
cmc
iret
sub
pop
aaa
pop
sbb
jo
push
xchg
and
gs
je
adc
mov
adc
daa
push
sub
inc
pushf
jo
les
adc
sbb
cmp
shr
dec
pop
daa
dec
into
xchg
mov
cmp
dec
mov
into
sbb
(bad)
int3
cmp
sub
fisub
cmp
add
and
push
adc
retf
pop
or
in
scas
ins
ins
and
xor
xor
pop
dec
shl
rcr
leave
in
xchg
mov
cwde
retf
cwde
xchg
ret
aas
and
or
ins
or
and
fldcw
stc
mov
cmp
or
dec
jmp
data16
out
cmp
push
or
dec
pop
add
or
xchg
cmp
add
and
add
xor
shl
das
dec
adc
xchg
push
or
mov
inc
es
daa
adc
ret
add
adc
push
scas
xor
loop
stos
or
in
or
xor
in
les
rcl
addr16
dec
mov
pop
xor
adc
and
(bad)
pushf
or
and
sbb
bound
icebp
call
aaa
rcr
mov
lea
imul
or
mov
stc
jb
mov
fnstsw
cmp
gs
outs
int
mov
jmp
dec
sbb
or
cmps
jge
jmp
xchg
cmp
adc
xor
sbb
xchg
mov
adc
ins
into
ja
ss
sub
fwait
adc
(bad)
jo
(bad)
mov
add
fimul
ds
cmp
add
mov
pop
int3
enter
inc
rcr
pop
clc
loop
jne
jecxz
cmp
jge
and
push
push
and
cmp
repnz
add
push
mov
and
loopne
pop
add
and
rcl
scas
inc
rol
jmp
ss
int3
dec
push
xor
icebp
and
add
aad
add
add
mov
cmp
lds
pop
movs
mov
add
sbb
add
neg
(bad)
(bad)
aaa
or
pop
pop
inc
fcomp
sub
and
adc
add
push
mov
and
call
cmp
fld
je
inc
lahf
dec
js
push
aas
add
les
mov
cmp
adc
dec
inc
or
je
mov
pop
sbb
push
or
or
mov
int3
pushf
sub
test
pop
ins
(bad)
les
mov
or
test
add
imul
and
cmp
and
xchg
dec
test
pop
mov
nop
xchg
sub
popf
imul
and
jo
push
inc
sbb
ins
test
das
jecxz
adc
mov
rcl
cmp
push
pop
sbb
adc
xchg
loop
rol
in
mov
arpl
das
sub
cmps
ss
inc
or
sbb
int3
jnp
inc
cld
inc
jg
je
sub
mov
add
and
push
add
xchg
aaa
push
xchg
sub
fisub
jg
fild
and
int
cmp
jp
xlat
mov
ror
add
add
rcr
cmp
sbb
pop
or
or
and
xchg
push
fs
or
cmps
pop
clc
inc
out
mov
in
fiadd
and
or
gs
div
fld
push
and
test
xor
mov
bound
mov
sbb
inc
or
div
iret
or
rcr
stos
popa
add
mov
ret
shl
xor
dec
cs
jbe
ja
jge
cmp
or
pushf
xor
add
hlt
bound
in
xor
clc
cmp
and
loope
sar
adc
hlt
in
xchg
add
cmp
jmp
out
mov
dec
dec
xchg
xor
rcl
inc
xor
mov
push
cmp
ds
xchg
add
inc
add
gs
enter
lock
or
adc
cmp
mov
loope
daa
dec
xor
mov
push
lea
pushf
sub
adc
jo
adc
mov
jo
or
test
cmp
int3
xchg
jl
and
sbb
xor
les
and
mov
int3
ret
adc
add
clc
adc
and
adc
adc
into
add
sbb
sub
xor
addr16
inc
ins
xchg
cmps
scas
(bad)
jl
jno
inc
cwde
(bad)
sub
loope
sub
adc
inc
add
cmp
add
and
mov
dec
pop
packssdw
mov
int3
(bad)
repnz
(bad)
movzx
sbb
int
or
imul
push
jmp
xor
dec
jmp
fwait
movs
and
lods
dec
iret
addr16
adc
sub
mov
enter
sbb
fild
xor
mov
jmp
mov
cs
clc
inc
push
sub
inc
add
loope
and
push
sti
movs
fs
xor
cmp
add
imul
sub
cs
push
jo
add
iret
push
dec
dec
dec
xchg
sbb
rol
and
push
test
scas
jne
clc
adc
and
and
stc
dec
fistp
scas
arpl
cli
pop
imul
fiadd
and
das
fcmovnb
pop
inc
add
inc
add
add
push
and
cmp
jno
mov
outs
test
add
inc
push
and
jns
test
bound
pusha
repnz
jo
or
pop
nop
dec
rcr
inc
dec
push
aaa
inc
dec
push
loopne
daa
xor
std
xor
fstp
adc
adc
and
sbb
sbb
cmp
test
cmps
nop
push
cmps
aas
icebp
iret
jnp
add
add
int3
ret
popaw
push
lods
inc
cmp
je
ret
mov
add
inc
xchg
dec
aas
or
and
lock
outs
push
pushf
mov
jmp
inc
xchg
jo
add
add
add
push
mov
cmps
dec
js
xchg
outs
and
add
pop
aaa
fs
cld
dec
mov
cmp
adc
sbb
adc
add
push
fnstenv
mov
xchg
inc
push
cmp
and
xlat
arpl
add
fimul
pop
jge
xor
test
xor
test
xchg
sbb
data16
xor
mov
jo
out
add
inc
in
add
jle
adc
jne
rcr
xchg
cld
(bad)
adc
ficomp
fld
inc
pop
pop
sbb
mov
fistp
adc
push
mov
mov
enter
leave
inc
pop
and
shr
fisttp
mov
das
pop
push
popa
pusha
cwde
add
rol
rep
pop
scas
pcmpeqb
mov
lods
shl
int3
mul
lock
xor
je
or
push
das
clc
adc
icebp
pop
cmc
mov
test
arpl
leave
aam
add
sbb
xor
lds
or
jge
stos
(bad)
push
and
dec
les
call
xor
jl
cmp
enter
ret
xchg
and
aas
and
lods
mov
mov
cmp
xor
call
dec
pop
fimul
mov
cmp
shl
inc
sahf
scas
push
pop
inc
xor
push
sub
jne
(bad)
xlat
(bad)
call
push
mov
jo
adc
popa
loopne
imul
inc
inc
daa
fdiv
nop
aam
dec
or
lock
mov
jecxz
cld
jne
bound
movs
jmp
cmp
jl
shr
sub
adc
pandn
push
adc
mov
sbb
(bad)
stos
add
aaa
ffreep
cmps
shl
and
jne
pop
and
pop
add
pop
sub
ret
clc
je
fadd
cmp
adc
pusha
jmp
int
sub
jno
imul
sbb
(bad)
cs
pusha
mov
sahf
add
adc
test
push
sar
mov
loopne
imul
loope
add
adc
outs
pop
loope
mov
jnp
mov
(bad)
lock
and
add
xor
lods
add
lds
nop
cmp
push
(bad)
or
and
leave
lds
cmp
xor
mov
ds
jo
or
dec
jg
adc
fmul
push
add
ja
sbb
and
mov
jo
push
call
(bad)
push
test
xchg
dec
inc
pop
(bad)
cmp
push
xlat
xchg
loop
xchg
jmp
sub
mov
pop
and
ja
push
cdq
aam
jno
pushf
(bad)
pop
add
push
das
hlt
icebp
push
push
retf
and
xor
rcl
icebp
adc
dec
adc
mov
pop
dec
out
mov
sub
movs
inc
ja
add
outs
cmp
xchg
ja
push
inc
jbe
cmp
cmp
cdq
xor
and
mov
push
jno
shl
mov
cs
jae
sbb
lods
fld
or
push
outs
sbb
test
dec
or
out
mov
jo
sub
arpl
mov
add
jp
fdivr
pop
mov
push
fisttp
xchg
xor
std
push
pop
adc
vcvtpd2ps
rcl
mov
mov
mov
push
xchg
call
ins
xor
arpl
push
sti
cmp
test
add
inc
sbb
das
sub
push
or
dec
and
movs
lds
xor
or
sub
in
xor
jmp
mov
test
sbb
inc
push
(bad)
dec
ret
pop
ror
sub
jae
mov
push
inc
lods
adc
push
xchg
mov
in
popa
dec
add
add
bound
add
not
mov
or
clc
(bad)
adc
mov
push
jne
cmp
push
inc
aas
push
scas
ret
cld
mov
sti
nop
add
pop
or
dec
sub
(bad)
outs
xchg
cmp
mov
outs
push
push
or
lea
test
out
cmp
rcl
sub
fnstenv
dec
shl
dec
push
or
rcr
pop
mov
pop
push
rcr
jns
ins
in
sbb
test
cmp
adc
dec
xor
(bad)
jmp
adc
out
fidivr
mov
xor
add
dec
xchg
test
loopne
push
push
(bad)
add
pushf
fisub
cmc
fadd
sub
in
mov
sbb
push
inc
jo
lahf
mov
inc
or
dec
sbb
jns
pusha
xchg
pop
add
dec
inc
push
or
in
fmul
lock
rcl
sbb
add
dec
sbb
push
or
add
sbb
pop
jl
jmp
or
sub
push
or
movs
not
push
pusha
movs
ins
call
xor
push
and
push
add
or
xor
jl
addr16
test
add
repz
jle
retf
int
call
xchg
mov
jno
or
es
add
or
scas
inc
dec
loopne
jns
jb
jne
out
lock
pop
push
push
or
cmps
jle
push
push
push
scas
sbb
fiadd
movs
xchg
je
xor
pusha
xchg
(bad)
xor
sub
or
sbb
pop
jnp
dec
and
xor
dec
inc
dec
push
(bad)
outs
dec
cwde
and
dec
lea
add
daa
dec
or
rcl
aaa
mov
xor
rcr
mov
dec
or
xchg
lods
mov
pop
lea
mov
loopne
xchg
test
gs
in
adc
sbb
fsub
and
inc
sbb
cmps
push
inc
lods
sti
mov
push
(bad)
push
push
inc
sbb
mov
inc
fmul
mov
sbb
pop
inc
idiv
dec
sub
inc
ins
mov
sbb
mov
inc
mov
jmp
movs
les
xlat
sub
and
lock
fsubr
cmp
popf
push
adc
mov
add
pop
movs
sub
cmp
inc
int3
pop
inc
cmp
bound
mov
mov
jns
cmp
add
mov
je
jne
cmp
pop
sbb
aaa
(bad)
lock
add
add
in
int3
mov
in
dec
mov
ret
imul
mov
adc
adc
and
in
lahf
or
and
dec
add
test
push
xchg
xor
ja
xor
dec
push
and
test
ja
push
sub
mov
dec
xor
and
addr16
adc
inc
mov
jne
cmp
fld
fstp
(bad)
mov
and
adc
sahf
sbb
js
inc
imul
dec
dec
arpl
lods
fwait
mov
inc
sub
and
cmp
and
adc
adc
aam
push
or
pop
lahf
(bad)
sbb
mov
or
push
dec
fisttp
sbb
jnp
js
ret
add
xchg
mov
sub
push
inc
and
fldenv
addr16
data16
mov
dec
ror
sub
imul
inc
ret
dec
repz
jbe
xor
add
inc
adc
sbb
ret
inc
dec
or
sub
xchg
xchg
fisttp
adc
test
xchg
cmp
fs
push
es
and
mov
sbb
pusha
xchg
popf
mov
mov
sub
xlat
clc
pop
cmps
xchg
int
jl
adc
outs
sub
pop
pop
mov
cmp
and
push
xor
add
scas
inc
and
pop
fs
fldenv
cmps
shl
sub
and
sbb
and
inc
mov
pop
sbb
lock
rol
pop
mov
xchg
add
inc
adc
sub
cmps
adc
aaa
cmp
imul
push
pop
dec
jne
jns
or
loopne
test
pop
cmc
sbb
push
inc
cwde
sub
and
ret
lods
in
scas
rcl
sbb
(bad)
fsubr
popa
mov
sahf
push
sbb
jns
in
jo
or
lods
xchg
mov
mov
iret
je
cmp
je
outs
cli
in
mov
test
mov
not
jbe
inc
fisub
pop
out
(bad)
in
mov
mov
xchg
dec
(bad)
and
cmc
inc
mov
fld
lahf
adc
ins
push
or
add
and
ficom
ins
out
mov
ret
xor
nop
push
in
(bad)
ret
adc
sub
and
adc
adc
add
ss
add
movs
push
mov
add
mov
add
sbb
add
add
inc
cmps
loope
jg
cmp
sbb
lahf
je
or
add
jmp
lods
xor
movs
xor
add
and
addr16
cwde
shr
mov
scas
or
pcmpgtb
rcl
mov
sbb
cdq
sub
inc
dec
jl
adc
xchg
push
fucomip
test
sub
add
in
(bad)
jbe
push
and
mov
jne
arpl
cmp
adc
nop
pop
js
ror
pop
sar
cli
stos
lds
mov
inc
push
dec
adc
add
xor
xor
mov
imul
push
fwait
addr16
addr16
xchg
cmc
mov
lods
jmp
leave
and
inc
inc
mov
and
idiv
js
add
mov
mov
pop
daa
lods
cmp
(bad)
xchg
rcl
xor
xchg
pop
xchg
popf
cs
push
dec
xchg
mul
and
int3
test
gs
cmp
mov
fwait
add
test
ret
dec
lds
icebp
es
hlt
fwait
sbb
xchg
xchg
push
sbb
test
sbb
add
pop
bound
fwait
jmp
dec
cmp
or
push
xchg
xchg
xor
xor
or
gs
lods
pop
push
nop
xchg
mov
or
test
loopne
(bad)
sub
add
jns
xchg
add
mov
rcr
aam
mov
jo
shr
pop
push
jbe
inc
sub
outs
jecxz
mov
adc
mov
jo
mov
pop
(bad)
out
adc
je
mov
sbb
fstp
sub
inc
sub
inc
pusha
mov
fistp
and
sti
stos
sbb
adc
jmp
lods
and
sbb
or
dec
hlt
dec
rol
in
rcl
sbb
icebp
hlt
mov
mov
stc
and
xlat
test
je
xor
add
inc
(bad)
call
mov
sub
and
and
and
xlat
inc
jns
xchg
jo
xor
push
or
inc
je
mov
arpl
fidiv
mov
test
push
(bad)
push
test
movs
enter
es
push
mov
outs
cdq
push
jne
jecxz
add
push
sub
int
and
mov
sub
mov
mov
adc
loopne
movs
adc
xor
xchg
ror
jae
sub
mov
dec
or
and
cwde
cmp
jmp
sbb
and
outs
mov
call
imul
adc
icebp
shr
add
jno
xchg
imul
mov
cmps
jmp
mov
xor
sub
inc
dec
jmp
pop
in
mov
test
mov
push
xchg
sbb
add
mov
jmp
fs
fnstcw
jae
mov
add
add
xchg
cmps
inc
mov
lods
or
adc
outs
dec
(bad)
inc
aaa
nop
xor
sbb
cmp
adc
(bad)
movs
sbb
mov
movs
mov
ret
jle
pop
pop
add
sbb
neg
pop
mov
xor
(bad)
and
add
(bad)
scas
inc
push
dec
inc
or
inc
mov
popf
and
pusha
dec
inc
pusha
inc
ja
xor
xor
jle
lods
push
lods
push
add
mov
and
sub
or
add
mov
sahf
shl
mov
je
outs
test
mov
push
mov
fadd
ret
push
adc
add
sub
mov
dec
popa
mov
sbb
daa
loope
mov
push
pop
imul
ret
sbb
test
cmp
dec
fdiv
add
fcomp
add
sbb
inc
push
jmp
(bad)
ja
jo
inc
xchg
fist
mov
and
cdq
(bad)
test
fsub
mov
in
inc
jle
jmp
and
mov
jbe
sub
clc
sub
add
push
repnz
sbb
imul
xor
lds
pop
dec
das
add
sar
je
dec
sbb
(bad)
loope
pop
adc
popf
sbb
add
jmp
xchg
and
inc
and
adc
mov
or
mov
xchg
push
pop
daa
mov
pop
or
add
jae
mov
arpl
fsubr
(bad)
in
sahf
and
inc
or
sub
repnz
in
or
mov
rol
adc
add
je
lods
push
jmp
and
inc
mov
stos
mov
lods
inc
jae
jl
mov
or
sbb
jb
mov
push
(bad)
jmp
push
jl
stos
xchg
inc
dec
xchg
lea
popf
shl
lea
push
mov
inc
adc
mov
movs
or
push
cli
daa
aaa
or
je
inc
popa
pop
xor
pusha
mov
adc
cmps
mov
add
std
sub
sbb
xlat
loopne
and
lods
dec
jae
test
(bad)
vsqrtps
popf
retf
scas
loope
or
jne
jnp
rol
cwde
add
cmp
fs
mov
add
xchg
xor
xor
and
push
or
mov
mov
jne
add
cmp
cwde
xchg
adc
xor
cmp
jne
aaa
lods
fisttp
repnz
xor
mov
arpl
fnstenv
add
arpl
sar
imul
lods
xchg
test
sbb
nop
pusha
xchg
add
pusha
(bad)
cwde
mov
mov
cli
add
cmp
pusha
or
jo
jmp
imul
mov
mov
sub
cmp
pop
dec
add
add
cmp
pop
and
mov
add
add
and
inc
in
(bad)
enter
mov
pop
add
mov
push
popf
and
dec
ret
dec
jmp
jecxz
imul
cdq
sub
(bad)
mov
sub
ror
sub
push
adc
aam
sub
add
dec
or
fnstsw
ins
or
or
loopne
pop
in
mov
pop
push
les
add
outs
in
imul
int3
lea
mov
dec
sbb
and
sub
lods
outs
push
or
lods
stc
mov
call
push
cdq
sub
adc
das
std
adc
mov
dec
dec
pusha
es
or
pushf
test
add
push
sub
sbb
fdiv
div
pushf
pop
aaa
pop
stc
inc
push
or
add
and
jmp
repnz
xlat
icebp
add
xor
out
shl
stos
and
cmp
xor
mov
mov
mov
in
jb
adc
sub
dec
and
or
pop
aam
mov
or
or
xor
mov
and
and
jo
jmp
sbb
jne
popf
pop
lock
cli
add
aad
pop
pop
pop
and
enter
inc
scas
adc
sbb
arpl
jo
shl
call
arpl
and
cbw
inc
mov
cmp
outs
and
clc
cwde
xchg
push
mov
in
mov
xchg
(bad)
repnz
lock
mov
jmp
push
cmp
sbb
rcr
inc
stos
sbb
scas
jle
jb
ins
aas
sbb
push
(bad)
xchg
addr16
mov
movs
ja
ror
not
shl
pop
push
add
pusha
test
sub
popf
enter
mov
popa
fs
jmp
loopne
in
mov
or
push
fwait
xor
push
out
add
je
or
lods
adc
and
in
adc
mov
pop
push
mov
pop
sbb
mov
cmp
inc
cmp
mov
dec
rcl
js
xor
mov
mov
xor
inc
sub
adc
arpl
shr
inc
dec
ss
cli
in
xchg
ror
or
and
sub
jae
push
xchg
inc
std
xor
jne
ins
add
or
in
mov
adc
push
aaa
add
sbb
aam
imul
sbb
mov
cmps
sbb
(bad)
rcl
dec
arpl
test
(bad)
sar
sub
pop
push
pop
xor
daa
mov
inc
rcl
dec
cmp
(bad)
fisttp
popa
pop
jl
scas
push
push
into
fcmovnb
xor
popa
test
(bad)
sti
sar
js
or
dec
mov
or
popf
lock
cmp
cmp
adc
pop
push
inc
sahf
xchg
adc
sbb
pop
or
sbb
or
inc
es
cmp
cmp
pop
or
js
cli
or
xchg
pop
mov
mov
cld
shl
xchg
(bad)
lds
push
(bad)
dec
dec
in
and
lea
and
and
cdq
ret
(bad)
xlat
ins
jnp
sub
add
push
(bad)
or
push
imul
shl
ss
pop
stos
jo
add
push
jmp
add
popa
lahf
sbb
add
test
push
repz
adc
test
sahf
xchg
fs
adc
xor
mov
inc
pusha
sbb
loop
xchg
sub
mov
lahf
cmp
stos
ds
or
sbb
push
mov
mov
sbb
lods
mov
sbb
push
test
xchg
mov
mov
and
and
call
sub
mov
sub
stos
inc
add
lea
mov
cmp
cmp
or
lock
pop
ret
ret
mov
sub
mov
call
arpl
cld
push
ins
dec
lds
out
push
add
sbb
mov
or
lea
pop
inc
mov
push
mov
adc
mov
in
fcmovbe
pop
xchg
jle
jmp
mov
inc
mov
clc
add
loope
inc
fwait
push
inc
jl
add
inc
xor
add
test
in
(bad)
and
push
mov
mov
inc
std
(bad)
pop
mov
xchg
xor
jno
test
push
push
fistp
imul
add
pop
dec
xchg
outs
push
push
adc
add
stc
in
adc
clc
jmp
and
add
inc
test
xor
sub
inc
push
leave
mov
daa
ret
fimul
mov
dec
loop
inc
and
aas
xchg
and
je
fwait
idiv
pop
or
and
mov
lds
rcl
cmp
mov
sbb
pop
in
in
lock
push
or
(bad)
shl
sbb
test
call
lods
xchg
dec
jecxz
test
sbb
scas
movs
mov
call
pop
daa
xor
int3
xchg
hlt
push
sbb
dec
or
xchg
dec
cmp
push
ffreep
fiadd
push
ret
xlat
cli
pop
mov
stc
lods
js
sub
sbb
add
push
push
neg
inc
sahf
mov
dec
(bad)
jne
pop
nop
add
cmp
cdq
cmp
sub
dec
push
cmps
mov
mov
fisttp
push
add
sub
xchg
(bad)
sub
pusha
pop
pop
adc
lea
icebp
cmp
mov
leave
je
aas
jge
je
dec
sbb
push
loopne
scas
call
xor
push
push
outs
dec
aad
or
jb
pop
push
bound
sub
adc
add
loope
mov
pop
xchg
jnp
and
and
gs
push
addr16
cwde
ins
pop
sahf
mov
cmp
inc
jp
sub
imul
jge
xchg
and
jmp
sbb
cld
mov
adc
push
enter
dec
push
cld
cld
or
and
cld
cld
es
sub
movs
push
psrld
add
push
add
loope
or
mul
fnstcw
sbb
adc
aam
xor
xor
sub
add
jl
loopne
jmp
or
pop
push
add
adc
push
pop
push
lahf
cmp
or
aam
push
imul
mov
movs
dec
adc
rcr
or
dec
inc
and
sub
dec
test
aaa
jns
je
inc
cmp
dec
xor
int
sbb
xchg
je
imul
push
mov
or
(bad)
mov
push
xchg
icebp
adc
adc
inc
fst
mov
push
jb
and
dec
add
nop
mov
iret
cwde
test
push
mov
push
push
cmp
ins
aaa
arpl
test
adc
or
inc
push
(bad)
dec
or
xor
pop
mov
and
xchg
mov
loop
lds
mov
mov
addr16
test
test
aaa
or
in
loope
(bad)
pop
dec
dec
dec
push
fs
dec
dec
xlat
and
add
pop
aas
rol
and
push
movs
lea
ror
pop
dec
inc
dec
dec
push
jbe
addr16
aaa
push
jecxz
scas
sub
mov
retf
dec
jb
imul
inc
fs
xchg
dec
adc
sbb
mov
dec
and
jns
dec
jmp
mov
pop
adc
ins
sub
or
repz
xchg
cmp
push
push
leave
cs
nop
inc
cmp
and
inc
pusha
mov
cld
mov
jl
or
ret
js
call
add
fs
pop
out
loop
ret
xchg
push
inc
xor
jne
jno
and
scas
xchg
adc
xchg
clc
ja
icebp
sub
adc
inc
inc
add
outs
jmp
jne
sub
push
movs
xor
mov
sti
and
adc
imul
jle
cmp
jne
adc
inc
add
push
(bad)
push
test
mov
mov
push
sub
add
add
xchg
imul
es
mov
test
mov
pop
js
mov
xor
ins
jmp
dec
push
test
xchg
outs
adc
pop
lock
mov
test
sbb
mov
fsub
xchg
jns
mov
adc
cmp
push
mov
std
sbb
cwde
sub
int3
hlt
inc
mov
cmp
jecxz
pop
xlat
mov
ss
mov
sub
pop
into
loopne
ror
call
popa
loope
jno
test
aam
sbb
inc
sbb
sub
push
out
jno
imul
cmps
rol
and
retf
sbb
mov
and
sub
mov
gs
xor
xchg
pop
ins
pop
and
or
popa
pop
add
jne
je
adc
pop
mov
cmp
shl
test
js
ins
sbb
cmc
mov
js
movs
adc
leave
xchg
add
mov
scas
aad
cmp
pop
jne
cmp
pusha
in
mov
pusha
imul
push
push
xor
cmp
hlt
xor
ror
test
add
rcl
cmc
pop
loopne
push
js
pusha
cmp
sar
inc
push
inc
sar
mov
pushw
pop
test
and
jae
rol
je
das
adc
add
and
mov
test
aam
pop
sbb
lea
push
sub
loop
movsx
push
xor
std
inc
pop
pop
scas
jne
cwde
mov
adc
inc
jae
mov
outs
and
or
xchg
scas
test
mov
outs
mov
xchg
outs
ins
sub
push
sar
retf
mov
(bad)
xor
ss
stos
dec
loopne
call
ret
mov
mov
outs
sbb
lods
adc
or
sar
or
sub
test
or
xor
xchg
mov
repnz
mov
and
mov
mov
inc
sub
adc
mov
dec
inc
pop
dec
inc
fimul
sub
push
cld
icebp
or
mov
add
mov
js
jg
xor
or
mov
fwait
jl
add
push
or
lock
dec
test
or
sub
cmp
das
sbb
fiadd
fadd
out
cmp
call
es
jo
jbe
or
xchg
dec
sub
mov
(bad)
or
(bad)
fsqrt
adc
test
mov
xchg
jl
dec
cwde
push
xor
data16
xchg
mov
clc
sar
jns
pop
movs
mov
mov
add
adc
sbb
push
push
add
push
lock
and
clc
mov
sbb
sbb
xor
stos
adc
scas
xchg
ror
and
add
jne
sub
and
adc
cmp
cmp
je
adc
(bad)
pop
push
and
jbe
in
and
jecxz
push
cmp
pop
ret
mov
mov
cmp
and
mov
jmp
sub
inc
sub
pop
add
pusha
cmova
sbb
imul
shl
enter
add
hlt
xchg
inc
ret
rcr
lods
in
pop
cs
out
cmp
and
sbb
adc
adc
xor
in
push
pop
rcl
jl
cli
cmp
mov
cmp
xor
ret
mov
pop
nop
push
xor
ret
and
test
pop
hlt
je
clc
sbb
adc
pop
test
sbb
xor
retf
(bad)
mov
not
push
sub
xchg
data16
loop
outs
nop
in
ins
fisttp
lock
pop
mov
rcr
mov
test
sbb
test
sbb
(bad)
pop
lea
add
inc
int3
push
push
add
jae
or
jb
jno
clc
mov
inc
add
popf
xchg
pop
adc
add
jmp
mov
push
arpl
mov
xlat
jbe
fld
inc
sbb
(bad)
nop
pop
(bad)
sbb
push
cmp
push
add
fst
pop
xchg
mov
xor
pop
out
sbb
pop
ret
xchg
or
and
dec
jno
inc
dec
and
or
sbb
sub
push
sbb
or
inc
push
and
cdq
mov
mov
adc
mov
jmp
dec
jb
cmp
loope
test
sar
(bad)
int3
lds
add
mov
adc
sub
and
ins
add
cwde
retf
mov
nop
fiadd
outs
dec
std
cmp
dec
push
mov
cmp
shl
cwde
clc
add
lea
mov
clc
mov
test
test
rcl
xor
pop
adc
push
jbe
pop
call
inc
in
mov
repnz
dec
adc
mov
push
mov
push
es
dec
push
fiadd
push
sbb
pop
iret
leave
je
pop
lock
xor
xor
mov
bound
pop
rcr
mov
xor
pop
in
sbb
fmul
and
or
leave
or
and
in
add
cmp
movs
in
jle
jno
test
xchg
cwde
add
mov
not
sbb
mul
sub
and
add
jg
les
add
jne
pop
or
enter
xor
retf
dec
pop
stos
popa
lock
and
mov
mov
mov
and
inc
pop
sbb
ds
in
cmp
test
imul
les
dec
or
mov
mov
add
fwait
adc
push
add
add
dec
sbb
add
cwde
xor
int3
cmp
adc
xlat
cmc
jmp
ret
popa
jl
or
and
loope
mov
pop
mov
cmp
clc
cs
je
repz
(bad)
mov
sti
popf
daa
mov
xlat
pop
and
add
push
js
mov
rcl
pop
enter
xchg
cmp
pushf
inc
ret
sub
aas
adc
dec
inc
popa
mov
push
adc
fimul
imul
fisubr
cdq
pushf
mov
inc
sbb
or
xor
movs
sub
jmp
sbb
sbb
ret
xchg
push
mov
mov
pop
in
into
xchg
lods
inc
and
mov
inc
inc
mov
push
add
clc
dec
jecxz
movs
add
xor
lahf
(bad)
jge
cmp
pop
outs
sbb
dec
lds
inc
dec
sub
movs
pop
scas
retf
xchg
popf
adc
call
and
pushf
push
imul
sub
inc
cmp
(bad)
and
dec
pushf
xor
adc
sub
cmp
adc
jno
or
add
repnz
mov
pop
mov
test
iret
mov
xor
push
add
in
addr16
adc
push
sub
retf
or
adc
sbb
pop
rcr
pop
mov
xchg
aam
(bad)
loopne
mov
lods
jo
jno
iret
mov
add
arpl
mov
das
repnz
or
ins
xor
sub
dec
repz
test
mov
mov
sub
fild
leave
mov
dec
out
daa
aad
adc
int
sbb
mov
add
sbb
ins
inc
js
or
pusha
mov
fprem
and
pushf
jo
jae
sub
cmps
dec
ret
inc
sbb
ins
pushf
pop
aaa
js
ds
mov
(bad)
adc
hlt
or
add
xchg
push
add
stc
(bad)
call
xchg
adc
mov
cmp
mov
sbb
cwde
pusha
dec
jl
ss
rol
jo
pop
sti
xor
dec
add
enter
dec
sub
add
dec
pop
icebp
sub
add
jp
and
movs
push
ror
repnz
or
xchg
push
adc
outs
test
and
ins
mov
jns
mov
jno
push
fisttp
jne
stc
sub
repz
mov
fsubr
push
lahf
xor
and
xor
icebp
retf
pop
stos
xor
xchg
push
or
ror
lahf
add
fcom
retf
pop
lods
call
daa
mov
jne
inc
sbb
add
cmp
inc
and
mov
nop
push
push
sbb
jno
pusha
push
xchg
(bad)
les
repnz
adc
out
fdiv
add
inc
dec
mov
dec
ret
xor
xchg
test
and
and
mov
or
mov
icebp
xor
rol
mov
out
rol
inc
arpl
icebp
push
sbb
dec
imul
popa
mov
add
shl
cmp
test
jne
sbb
mov
and
cmc
iret
inc
dec
jb
and
aam
nop
test
scas
xchg
mov
pop
pop
mov
daa
ds
outs
(bad)
sbb
call
repnz
add
in
mov
aaa
xor
adc
xor
jns
cmp
pop
mov
adc
push
jmp
push
mov
xchg
pop
jb
enter
out
add
sbb
add
dec
icebp
add
daa
add
xor
mov
ror
and
mov
add
pushf
sub
test
mov
and
sbb
out
inc
lea
stos
movs
pop
xor
mov
xor
push
mov
dec
mov
jg
jae
psubb
add
xchg
mov
add
bound
ss
pushf
addr16
rol
test
mov
mov
jg
ficomp
xchg
add
inc
xor
mov
inc
add
adc
sub
bound
mov
inc
sti
lods
and
push
add
xor
add
pusha
shl
jbe
sub
(bad)
jo
imul
(bad)
ror
xor
cmp
jmp
mov
add
inc
push
fimul
xchg
out
fild
jbe
mov
(bad)
jns
addr16
push
shl
int
push
shl
add
push
hlt
inc
sti
xor
mov
ins
ins
mov
out
jns
das
ror
call
pop
push
pop
outs
imul
mov
mov
push
dec
or
dec
sub
loope
lock
jp
and
sub
cmp
cmp
ja
sar
retf
xor
sub
xchg
mov
mov
mov
inc
push
inc
imul
sub
add
cmp
jae
xor
inc
inc
or
rol
ret
mov
leave
lds
ror
sbb
sbb
ror
mov
xor
fcomp
movs
cmps
int
jge
mov
rcl
push
add
js
mov
jne
int
mov
and
(bad)
mov
jmp
or
cmp
mov
jmp
pop
(bad)
mov
sub
inc
xor
mov
imul
lods
stos
cmp
and
and
push
je
pop
pop
(bad)
mov
adc
mov
inc
jbe
ins
je
xor
movs
sub
xor
imul
icebp
or
add
jmp
(bad)
fistp
jo
jecxz
ret
cmp
jne
inc
je
adc
sbb
cmp
fwait
pop
adc
ja
inc
push
xchg
je
ins
inc
push
dec
xchg
int3
iret
jecxz
out
jno
mov
inc
xchg
ins
ins
(bad)
push
or
xchg
pop
adc
shl
xor
push
cmp
cmps
in
pop
push
icebp
enter
or
adc
and
xchg
fmul
std
les
mov
push
xchg
push
mov
or
jo
or
adc
or
lods
xchg
nop
or
sub
push
ret
pop
mov
or
sub
push
fadd
push
popf
movs
lds
call
mov
and
loopne
add
add
pop
jecxz
xchg
adc
pop
test
call
aas
faddp
call
(bad)
xor
jae
inc
pusha
cwde
shl
loopne
ins
xor
push
shl
pop
jmp
inc
push
mov
xchg
jg
les
mov
es
xor
push
or
dec
add
sahf
(bad)
shr
add
fisub
add
ins
mov
bound
dec
ja
push
or
ror
cmp
or
mov
adc
adc
sti
push
sbb
test
jnp
aaa
jmp
push
(bad)
fwait
movs
push
push
push
stos
jne
pusha
jmp
xchg
int3
test
cmp
imul
xor
push
push
imul
adc
dec
add
cli
jmp
test
inc
xchg
fcomp
cli
ja
add
and
or
popa
data16
jnp
add
adc
in
add
in
(bad)
fistp
fld
(bad)
adc
pop
mov
lods
std
rol
push
and
dec
rcl
xor
mov
jp
jg
aam
rcr
add
inc
loope
mov
mov
daa
cmp
mov
das
sbb
and
sbb
push
cli
or
and
dec
outs
pop
ja
sbb
mov
or
je
sbb
rcl
adc
pop
inc
pop
or
lea
lock
or
js
push
xor
lea
lods
je
(bad)
sub
rol
mov
mov
inc
add
dec
ror
out
push
(bad)
or
shl
cmp
sub
lds
popf
mov
adc
scas
xchg
push
mov
es
ins
sbb
inc
sub
das
inc
mov
rol
and
test
loopne
enter
add
int
sbb
adc
cmp
ret
iret
icebp
xchg
test
xchg
sti
rcr
xchg
jne
(bad)
pop
sub
push
movs
js
leave
mov
mov
push
(bad)
mov
sub
jmp
adc
sbb
add
jno
(bad)
push
pusha
scas
or
push
add
(bad)
xchg
leave
je
mov
mov
add
mov
push
out
push
outs
imul
and
mov
mov
sbb
inc
daa
cmp
add
enter
cmp
mov
imul
adc
push
cmp
(bad)
and
sub
rcl
(bad)
lods
or
pop
fcomip
pop
add
rcl
sub
adc
shr
je
mov
mov
movs
xchg
test
mov
push
ret
ret
push
les
retf
sub
dec
pop
push
jmp
add
aam
icebp
call
or
in
mov
call
xor
dec
pop
int
inc
dec
sbb
push
sbb
sbb
rcl
jno
in
xchg
and
mov
lods
nop
lods
popa
fs
stos
and
mov
push
lahf
jmp
nop
daa
sbb
pop
fst
push
and
cs
adc
(bad)
fadd
mov
outs
adc
pop
xchg
jbe
mov
sbb
cmps
out
sub
test
ins
pop
mov
xor
mov
sub
jge
popf
dec
mov
push
adc
or
int3
cmp
adc
pop
sbb
or
(bad)
sub
xlat
lods
adc
movs
mov
fdivr
xchg
mov
fiadd
sbb
cmp
or
dec
adc
popf
cmps
rol
pop
mov
or
repnz
xor
xchg
aaa
dec
std
add
std
jge
(bad)
jo
scas
(bad)
dec
out
dec
jmp
test
into
fadd
outs
xor
jbe
cmps
cmps
movs
jg
dec
push
jns
icebp
add
and
sbb
loop
mov
mov
push
lea
or
adc
inc
into
repz
dec
sbb
sbb
add
fcmovu
popa
pop
aaa
or
add
enter
adc
data16
adc
addr16
aas
and
sub
or
dec
das
or
sub
push
pop
cmp
adc
or
push
jmp
add
inc
sbb
or
xor
dec
adc
mov
sbb
jns
push
in
test
loope
js
stc
mov
dec
loopne
(bad)
fcom
dec
pop
pop
inc
cmp
push
aad
div
dec
(bad)
or
jae
je
add
and
cmp
jne
pop
outs
arpl
adc
dec
leave
push
sub
mov
pop
ror
cmp
loope
mov
shr
sar
ret
inc
leave
adc
icebp
test
outs
xchg
and
xchg
cdq
add
hlt
pop
adc
dec
push
inc
dec
mov
add
sbb
adc
rcr
and
mov
mov
les
or
jno
lock
add
push
nop
pusha
or
and
imul
sub
cmp
xor
inc
mov
dec
loopne
xlat
sub
hlt
jmp
arpl
lods
mov
xchg
shl
(bad)
push
mov
jbe
push
push
adc
adc
inc
ret
fucomip
push
movs
add
sbb
sbb
mov
sbb
rol
mov
or
add
add
hlt
or
push
xor
add
adc
pushf
mov
push
ss
inc
retf
iret
mov
xchg
ja
ins
bound
pop
push
push
popa
and
cmc
cs
stos
and
and
inc
aaa
test
or
ret
jmp
push
mov
dec
mov
jmp
mov
push
pop
xchg
inc
add
and
or
jo
fdiv
push
mov
loop
pushf
imul
push
xchg
jo
xor
ror
push
xor
push
mov
jae
add
addr16
dec
scas
add
test
loopne
or
and
cmp
mov
add
pop
into
and
popa
ficomp
in
aas
(bad)
mov
jne
xchg
add
add
test
mov
jecxz
sub
or
dec
sub
add
inc
js
arpl
jl
nop
mov
mov
stos
imul
jo
std
sbb
mov
mov
add
mov
icebp
add
sbb
inc
dec
xor
inc
popa
test
push
lock
lea
xchg
test
or
mov
mov
add
por
dec
imul
add
mov
add
push
leave
push
cmp
test
xlat
retf
sub
pop
adc
inc
push
mov
ret
(bad)
stos
popa
cmp
repz
mov
pop
(bad)
sub
ins
xchg
or
sbb
inc
push
and
push
adc
sub
cmc
push
add
add
aaa
loopne
nop
ss
ins
xchg
push
jmp
clc
inc
jne
push
call
sbb
push
call
sbb
mov
xchg
shl
popf
add
xlat
push
mov
loopne
clc
add
sbb
sar
fdivr
mov
jge
mov
sub
arpl
shl
xor
loope
push
mov
cdq
adc
ins
cmp
mov
adc
sub
movs
sub
inc
dec
fisubr
push
hlt
jge
test
retf
inc
int
call
dec
in
add
mov
pop
faddp
out
add
outs
sub
lds
push
nop
mov
je
loop
or
pop
sub
dec
dec
lods
or
push
cs
add
add
adc
and
push
lods
stc
and
cmp
jo
push
xchg
nop
or
push
fwait
mov
add
mul
fcom
add
aad
jl
add
jg
push
hlt
outs
dec
lds
test
add
pusha
mov
inc
or
cmc
out
add
pop
retf
jnp
pop
sub
xor
fs
je
mov
sar
xchg
imul
rcl
adc
aas
jmp
cs
lods
push
pusha
or
retf
jge
push
xchg
rcr
sbb
add
xor
sub
jnp
lock
outs
int
fimul
pop
jl
popa
cmp
lea
mov
cmp
push
sub
ficomp
add
je
fidivr
paddq
shld
and
add
cld
(bad)
shl
jecxz
sub
fcmovbe
dec
add
out
sbb
jecxz
push
ret
and
vrcpps
push
leave
retf
aas
adc
cs
push
fcom
cmp
stc
push
aam
repz
add
cmp
nop
push
sub
pop
or
fdiv
fcom
mov
adc
dec
loope
mov
mov
ja
inc
cmp
popa
or
inc
mov
aaa
cwde
stc
addr16
adc
sbb
jns
jl
dec
rcr
sbb
push
mov
add
ror
stos
je
push
adc
xchg
enter
rol
xchg
cmc
add
push
mov
sub
adc
jbe
push
aam
sbb
mov
cmps
push
and
sbb
and
mov
aad
test
test
jmp
nop
ins
sub
sbb
push
pop
jnp
dec
mov
nop
push
js
hlt
push
dec
mov
test
jg
outs
inc
cmp
je
test
aaa
lds
or
imul
pop
mov
add
mov
mov
add
add
xchg
pop
sar
cmp
mov
scas
add
rcl
or
ja
xor
inc
add
shl
imul
xor
fimul
test
(bad)
shr
add
adc
dec
loopne
jne
mov
sar
mov
xor
test
mov
mov
in
arpl
pop
call
inc
sub
test
xor
mov
lea
loop
aad
mov
adc
push
xor
in
fs
lock
xchg
add
mov
mov
or
sub
inc
xor
xor
jmp
(bad)
push
(bad)
bound
push
ss
popa
bound
pop
push
call
or
add
or
retf
sub
sub
xor
and
xor
mov
sbb
cmp
xchg
mov
mov
test
jnp
aad
sbb
repnz
cs
stos
sub
sbb
cmps
push
imul
mov
mov
cmp
cs
inc
sub
mov
inc
push
inc
je
jo
inc
into
and
fisub
sbb
sub
and
lds
inc
ficom
mov
xor
inc
fist
fistp
inc
imul
inc
fisubr
adc
adc
mov
jg
iret
or
fwait
mov
daa
dec
cmp
sub
push
fcmovnbe
jb
jmp
lea
push
push
mov
sub
jbe
sub
adc
push
jecxz
iret
(bad)
or
add
loop
push
pop
leave
mov
cli
adc
ror
std
inc
or
cwde
add
aad
cwde
xor
fist
loope
dec
cmp
pop
adc
and
mov
or
(bad)
dec
mov
arpl
jb
pop
ficomp
push
fdivr
add
jmp
xor
add
and
loopne
mov
js
js
icebp
(bad)
popa
dec
sub
mov
add
sbb
movs
mov
and
adc
and
fnstcw
mov
mov
mov
dec
aam
movs
mov
test
je
gs
pop
retf
add
mov
loopne
inc
or
lea
mov
add
adc
or
jg
xor
and
inc
mov
xchg
in
inc
cwde
jecxz
clc
fwait
loopne
or
add
mov
push
pop
xchg
inc
adc
and
adc
es
aaa
mov
mov
dec
and
xchg
adc
and
jge
mov
mov
and
test
or
ror
retf
dec
and
cmp
mov
in
cmp
and
hlt
jno
adc
hlt
sub
inc
ret
push
outs
sub
cmp
in
push
mov
cmp
lods
xor
es
in
add
iret
(bad)
gs
shl
xchg
inc
jo
pop
aam
push
enter
lods
inc
pop
adc
or
in
stos
mov
outs
push
das
pop
inc
pop
movs
sbb
les
pop
sub
adc
lock
cmp
push
sbb
mov
cmps
lea
sub
fcmovbe
in
add
in
in
inc
outs
and
ins
jmp
pusha
push
nop
pop
mov
pop
enter
jnp
dec
inc
int3
pop
add
movs
or
xor
pop
push
sbb
sub
in
pushf
fld
aam
dec
add
sub
repz
inc
(bad)
adc
aaa
adc
dec
dec
ret
xor
cmp
add
adc
push
adc
jecxz
int3
mov
mov
or
enter
mov
shr
or
xchg
push
cmps
inc
mov
jne
ror
pop
rcl
cld
cmp
imul
add
rol
(bad)
into
aam
and
aam
mov
out
retf
push
push
push
fcom
xor
fsubr
sbb
fst
ins
lds
sbb
cmp
aam
and
out
push
sub
adc
and
lods
dec
dec
call
leave
and
nop
push
push
call
inc
xor
lds
sub
and
add
adc
and
or
in
adc
int3
or
shr
adc
pop
mov
xlat
add
jmp
inc
pop
pop
and
mov
lds
dec
popf
ins
inc
enter
mov
je
stc
pop
out
add
cmps
test
mov
inc
ss
test
add
(bad)
inc
std
or
adc
xor
cmp
mov
jne
ds
iret
ret
shr
rol
das
pop
adc
movs
jg
push
push
outs
iret
ficom
mov
pop
dec
push
movs
mov
xor
aam
rol
test
inc
cmps
push
fcmovnbe
jg
inc
or
daa
add
ret
push
mov
int3
ret
add
or
sub
adc
push
cld
inc
imul
(bad)
jne
pop
mov
dec
int3
cmp
popa
test
add
nop
pop
jno
jmp
jnp
add
mov
add
adc
(bad)
mov
cmp
scas
adc
aas
fld
loopne
mov
inc
sbb
sbb
dec
and
shl
shl
pop
sub
in
sbb
scas
int3
sub
adc
inc
pop
sbb
and
lea
imul
adc
mov
adc
jo
hlt
pop
jp
dec
cmc
push
in
jne
and
mul
dec
mov
mov
xor
xor
shl
push
add
push
add
lods
sub
xlat
outs
add
pop
jno
dec
pop
sbb
push
mov
xchg
inc
jb
pop
pop
shr
nop
fwait
in
pop
push
enter
mov
enter
aaa
xchg
out
in
add
add
fucomp
add
mov
shl
(bad)
fnstsw
imul
cmp
xchg
je
adc
inc
mov
add
mov
div
xchg
fisttp
push
mov
sub
pop
aad
test
cmp
in
mov
in
jnp
nop
(bad)
xchg
inc
leave
test
das
xchg
xchg
cmp
inc
arpl
sub
aaa
(bad)
out
jb
sbb
dec
lea
pushf
pop
ss
add
icebp
dec
inc
push
dec
jg
lock
mov
gs
sub
push
sub
fcomp
or
mov
mov
outs
fs
push
movs
mov
push
test
mov
or
sti
pop
imul
pop
mov
or
arpl
pop
outs
hlt
xor
jns
jo
(bad)
ins
nop
mov
mov
or
mul
fwait
aas
inc
icebp
mov
cmp
cmp
imul
inc
mov
jae
or
dec
or
or
sbb
mov
sbb
mov
ret
imul
mov
ret
popa
arpl
xlat
adc
rcr
mov
jbe
arpl
adc
in
push
inc
gs
jp
pop
add
mov
or
in
mov
repnz
repz
sbb
push
push
scas
mov
in
push
aas
xchg
push
idiv
inc
loopne
inc
mov
inc
or
out
sbb
inc
leave
psadbw
sbb
dec
adc
cmp
and
sub
sub
(bad)
push
iret
dec
shl
pop
push
test
fist
and
lock
hlt
cmp
and
and
stos
sub
mov
inc
inc
lods
pop
repnz
in
inc
sub
in
es
int3
and
adc
and
and
push
push
sbb
add
push
lods
ins
jl
add
cmps
push
jo
mov
pop
pop
mov
sbb
push
jns
jnp
xchg
cmp
sbb
test
and
xchg
or
bound
sub
imul
xchg
xor
add
push
add
adc
jp
add
xor
adc
or
and
or
shl
jno
mov
xor
sbb
xor
adc
add
add
sub
sbb
mov
sub
lods
nop
xchg
mov
adc
dec
pop
xor
adc
adc
imul
sbb
add
jge
push
cmp
test
dec
push
pop
inc
or
adc
sbb
push
and
pop
and
and
xchg
data16
add
add
or
push
das
xchg
xchg
sar
inc
pop
mov
sub
push
cmp
or
and
sub
dec
jo
retf
ja
repz
inc
js
movs
sub
or
push
inc
jecxz
rol
sbb
cmp
mov
add
jle
data16
in
(bad)
inc
push
or
pop
xor
xor
xor
xchg
cmp
pop
push
test
pop
popa
imul
daa
ror
cmp
daa
out
adc
call
mov
xor
fs
or
xor
test
pop
adc
dec
movs
mov
and
adc
adc
dec
and
mov
ins
movs
rcl
or
push
mov
enter
aam
push
pop
mov
sbb
pop
(bad)
and
sahf
fadd
sbb
sbb
stc
lea
enter
mov
test
sbb
sbb
add
pop
fs
dec
cmps
mov
sbb
sbb
inc
add
cmp
adc
daa
mov
and
or
shl
mov
add
mov
jno
pusha
push
sbb
pop
pop
xor
push
mov
es
xchg
or
lods
sbb
cmps
mov
es
mov
and
mov
push
sbb
push
movs
out
movs
mov
adc
push
cmps
pusha
xchg
or
xchg
sbb
inc
imul
xor
sub
inc
push
pusha
in
sbb
sbb
sbb
xchg
sbb
xchg
xor
mov
add
sbb
xor
pop
gs
ss
inc
sti
xor
inc
les
adc
aaa
jae
call
cmp
xor
sub
jb
cmp
inc
lea
pop
mov
xor
scas
xchg
test
dec
popa
dec
jecxz
inc
sub
jo
xchg
imul
fdivr
or
nop
sbb
dec
add
inc
cmp
pop
fsub
xchg
pop
add
out
cmp
aaa
mov
adc
inc
or
mov
pop
sub
dec
xchg
push
(bad)
int3
sub
movs
push
pop
or
push
xor
push
or
adc
jbe
adc
dec
and
cs
and
call
mov
push
dec
adc
js
sbb
mov
add
imul
push
jae
or
and
push
cmp
or
mov
sub
sbb
imul
pushf
dec
inc
jg
or
add
je
jo
dec
cmps
xchg
and
sbb
lock
sbb
nop
push
inc
pop
sbb
or
and
and
or
and
inc
es
xchg
add
jb
pop
(bad)
call
push
push
rcl
aas
(bad)
mov
lock
lahf
cmp
rol
or
retf
add
or
xchg
adc
pop
sbb
xor
stos
bound
or
inc
push
dec
cmp
(bad)
and
sub
pop
popa
jbe
xchg
mov
out
push
call
jmp
test
pop
jle
je
xchg
test
or
ss
or
push
fwait
jns
neg
inc
gs
daa
ret
inc
adc
ins
xlat
lock
sbb
dec
in
push
inc
or
(bad)
scas
pop
push
push
xor
pusha
inc
and
dec
ds
push
cmp
push
enter
aam
sub
and
cmp
cmp
data16
les
ds
xchg
or
jbe
add
scas
add
std
add
pop
cmp
push
xchg
pusha
imul
mov
js
or
mov
nop
mov
or
sbb
add
dec
pusha
loop
mov
add
mov
sub
pop
add
rcr
movhps
cld
adc
icebp
add
adc
sbb
xor
(bad)
or
pop
adc
dec
inc
imul
nop
and
aas
inc
push
push
or
xor
xor
mov
adc
sbb
inc
jp
jmp
xlat
sbb
and
nop
cmp
movs
xor
inc
mov
mov
inc
sbb
cdq
or
inc
sub
pop
or
sbb
add
rcr
sbb
push
adc
adc
push
push
fs
xor
add
and
mov
test
pop
and
inc
fld
sbb
add
enter
das
sbb
scas
pop
popw
aaa
add
xor
or
xchg
mov
xchg
adc
fiadd
pop
aas
cwde
jle
pop
push
stos
and
jbe
(bad)
or
inc
mov
outs
test
pop
mov
sbb
push
es
mov
push
add
jbe
jg
xchg
repz
test
jne
add
dec
iret
pusha
clc
shl
sbb
sbb
aam
ins
cmp
add
xchg
add
les
nop
aam
mov
lods
xor
sub
cli
mov
xchg
mov
inc
push
xor
test
(bad)
mov
push
ficomp
(bad)
and
sub
mov
sub
int
not
and
jmp
adc
test
not
imul
nop
add
pop
xor
sbb
(bad)
fidiv
ror
setl
xchg
cmps
test
adc
adc
jecxz
pushf
push
inc
jl
in
push
ror
(bad)
mov
sbb
or
and
sbb
test
pushf
inc
inc
out
adc
mov
mov
and
and
adc
or
(bad)
aad
sbb
fsub
mov
add
push
(bad)
(bad)
adc
loopne
mov
leave
(bad)
ja
idiv
dec
loopne
jge
push
imul
inc
std
ja
ins
(bad)
stc
sub
nop
add
ret
nop
dec
push
ins
aas
clc
and
and
mov
out
sbb
ss
enter
xchg
std
test
call
cmp
ja
lods
shr
jecxz
adc
out
add
adc
stos
add
out
loopne
mov
enter
cmp
push
mov
fmul
rcr
ins
aad
xor
or
dec
add
lea
or
loope
sbb
push
pop
cmps
pop
loopne
sub
xor
or
in
jb
adc
lds
fsub
pop
(bad)
fcom
cmp
loop
loopne
cld
xor
(bad)
cmp
bound
dec
push
adc
rcl
sbb
inc
inc
jecxz
fisubr
mov
push
loop
push
jb
mov
mov
adc
push
xor
pop
sub
popa
inc
mov
adc
sbb
lods
(bad)
mov
push
cwde
inc
pushf
add
dec
pop
inc
cmp
mov
leave
mov
add
adc
mov
add
and
fadd
inc
jb
nop
jge
push
icebp
and
mov
dec
mov
rcl
sbb
or
or
sbb
div
call
jecxz
add
ret
sbb
lods
test
test
push
popa
add
and
daa
lock
cmp
mov
inc
mov
xchg
ja
ret
and
gs
adc
(bad)
leave
xor
in
ret
push
enter
ficom
or
inc
sub
addr16
call
sbb
xchg
jno
add
fnstsw
sub
nop
xchg
sub
mov
xor
dec
sbb
or
mov
movs
ror
enter
pop
sbb
add
inc
pop
imul
sbb
and
repnz
fnsetpm(287
mov
or
inc
and
inc
and
cld
addr16
and
and
jle
jae
xchg
sbb
xor
ja
out
or
pusha
div
ja
imul
sub
ror
and
sbb
add
push
cwde
lods
xchg
ja
inc
jge
sub
pop
(bad)
push
xchg
sbb
inc
bound
loope
mov
xchg
mov
sbb
push
pop
adc
xor
arpl
fcom
sub
call
push
mov
inc
pop
sub
aaa
cwde
mov
inc
add
movs
sub
loopne
imul
fldenv
mov
mov
gs
adc
(bad)
out
inc
ins
cmp
nop
or
push
scas
mov
mov
out
enter
out
or
sbb
sbb
jle
bound
or
dec
fs
xor
test
ins
pusha
mov
sub
mov
push
cmp
sub
mov
mov
dec
mov
mov
or
clc
lods
mov
stos
xor
add
push
ins
lock
push
xor
adc
mov
push
or
xor
leave
daa
and
scas
sbb
pop
stos
adc
movntq
add
mov
push
adc
addr16
ss
pop
add
(bad)
sbb
sbb
cmp
cmp
retf
test
ss
frstor
xchg
dec
inc
cmp
rol
adc
sbb
push
and
add
inc
or
lea
and
cmp
stos
in
les
mov
push
dec
test
ins
or
or
push
or
nop
mov
addr16
push
ins
dec
mov
add
push
leave
fs
imul
sti
clc
jne
cmp
add
cmp
sbb
imul
enter
cld
push
sub
dec
add
je
test
adc
or
or
add
xor
sti
adc
pop
sbb
xor
pop
addr16
pop
push
mov
push
popf
sub
outs
xchg
xchg
adc
sbb
in
adc
dec
mov
daa
fadd
and
stos
pop
and
fimul
adc
cmp
daa
cmp
int
hlt
mov
cmp
(bad)
cmc
dec
(bad)
in
test
dec
sbb
sbb
test
mov
mov
add
jle
fsub
mov
inc
mov
sub
push
bound
sbb
pop
fdivr
xor
mov
and
and
hlt
int
aaa
xchg
and
push
push
sbb
push
push
xor
inc
pop
inc
pop
and
nop
xor
mov
push
retf
adc
push
iret
pop
shl
sahf
or
jbe
or
not
mov
add
and
cmp
jle
mov
cmc
sahf
jo
retf
xchg
ss
cmp
ret
cmp
add
ins
adc
or
popa
mov
adc
xor
pop
mov
push
cli
and
adc
dec
add
add
push
popa
pusha
xchg
dec
jmp
xor
pop
gs
dec
sub
(bad)
int3
mov
bound
imul
out
add
add
clc
mov
sub
(bad)
pop
adc
add
xor
clc
lea
lods
mov
dec
jne
pusha
loope
xchg
mov
sbb
add
inc
cmps
push
xchg
or
clc
pop
shl
mov
mov
cdq
mov
add
ins
xor
adc
jnp
outs
inc
cmps
jmp
ret
jecxz
arpl
pop
shl
jmp
jns
(bad)
adc
js
mov
xchg
popa
or
dec
mov
mov
inc
push
ja
aam
add
mov
add
(bad)
cmp
das
add
add
push
call
adc
sbb
adc
(bad)
stc
mov
sbb
outs
jno
out
mov
jns
push
mov
(bad)
fldenv
mov
adc
ror
xor
imul
imul
mov
stc
out
add
movs
or
jl
mov
ss
call
adc
cs
push
test
add
sbb
ins
enter
ds
sbb
jb
and
or
lea
xchg
mov
xchg
push
rcr
sar
add
jle
in
cmp
xor
adc
or
dec
cmp
adc
mov
inc
sbb
inc
pop
fisttp
inc
sar
and
fistp
and
inc
pushf
stc
inc
push
push
sub
(bad)
mov
imul
icebp
inc
add
push
pop
test
pop
loopne
push
sub
and
clc
cwde
sub
push
sbb
inc
das
outs
data16
xchg
xor
sub
mov
sbb
adc
inc
and
aas
sub
adc
cmp
push
inc
arpl
xor
push
into
(bad)
mov
mov
cmps
nop
loop
dec
fs
fidivr
aaa
cmp
mov
mov
jmp
test
add
out
sbb
mov
jae
loop
pop
dec
sar
bound
xchg
bound
cmp
jbe
inc
bound
push
lahf
or
push
nop
or
mov
inc
add
repnz
test
push
sub
jno
or
and
pop
jg
sub
xor
push
push
pusha
cmc
or
cmc
pop
mov
mov
lds
xchg
add
test
inc
loopne
cwde
dec
nop
test
nop
pop
cdq
shl
ret
out
xchg
jmp
dec
stc
push
pop
pushf
cmovne
and
iret
lock
mov
fcmovnb
ins
fcmovb
loop
dec
mov
sbb
loope
lods
sub
loope
add
fist
sbb
push
inc
inc
xchg
sub
dec
pop
pop
lods
add
or
icebp
push
fs
popa
loop
add
mov
(bad)
jae
sbb
cmp
jmp
fdivr
stos
ins
mov
jmp
dec
cmp
inc
lds
enter
ja
mov
sbb
mov
and
fild
daa
jmp
jmp
loop
(bad)
dec
pop
rcr
retf
mov
cmp
inc
ja
pop
ret
or
lock
pushf
mov
jb
dec
xchg
test
sbb
mov
add
jl
dec
test
(bad)
and
dec
stos
outs
pop
jmp
es
ja
or
xchg
lods
adc
outs
test
fnstcw
xchg
sbb
mov
(bad)
adc
cmp
jle
mov
popa
add
rcl
loopne
xchg
je
jmp
push
jmp
jmp
fs
jo
sbb
add
adc
sub
test
xchg
push
daa
and
cmp
push
(bad)
ss
sub
inc
sub
sqrtps
or
or
lods
adc
or
call
jne
scas
add
mov
ins
popf
ss
int
scas
mov
(bad)
xchg
push
in
bound
or
cmps
push
mov
in
or
iret
fs
xor
push
xor
bound
fcom
lea
pop
mov
inc
cmp
dec
lea
sub
xor
add
push
(bad)
pop
pop
xor
or
or
inc
inc
arpl
push
push
inc
xor
and
out
cmp
fs
jno
js
fdivr
les
pop
pop
mov
(bad)
dec
jp
sbb
xchg
sbb
sbb
jbe
test
cmp
add
nop
pop
stos
movs
push
pop
iret
loope
fbld
dec
sahf
dec
(bad)
js
adc
push
aas
pop
cs
xor
push
xor
push
imul
iret
mov
and
cmp
ret
ins
ror
and
inc
jg
inc
cmp
inc
sbb
(bad)
mov
(bad)
je
xchg
and
imul
xchg
xlat
sbb
jl
jne
sub
mov
mov
mov
fcom
pop
and
ins
scas
stos
dec
clc
push
sub
test
pop
and
and
and
sbb
cdq
adc
inc
movs
mov
or
mov
popa
popa
push
loopne
xlat
sbb
or
dec
jmp
cmp
xor
xor
and
xchg
xchg
repz
mov
shl
mov
mov
pop
(bad)
das
pop
dec
test
pop
dec
add
inc
(bad)
out
inc
(bad)
pop
fcomp
adc
test
sub
and
mov
fxch
mov
add
adc
test
dec
or
lds
dec
mov
mov
(bad)
popf
mov
inc
xchg
sahf
xor
push
push
cmc
xor
pop
ins
or
jne
inc
inc
loop
mov
xor
ret
nop
cmp
aaa
call
mov
imul
cli
push
adc
sub
inc
pop
das
sbb
xor
inc
nop
xchg
sbb
shr
adc
bound
test
rcl
mov
mov
sbb
int3
in
inc
inc
imul
loope
scas
mov
pop
mov
cli
cmp
adc
adc
movs
xchg
sbb
pop
pop
and
outs
inc
movs
test
mov
ins
add
push
out
or
jno
sbb
iret
pop
aam
mov
or
bound
push
ret
js
push
test
fidiv
xchg
ret
das
jmp
or
sbb
stc
int
push
push
push
js
ds
clc
push
call
add
mov
or
adc
pusha
aam
add
or
add
mov
adc
sub
xchg
(bad)
in
mov
mov
push
xor
mov
in
shl
add
jecxz
imul
pop
dec
fwait
adc
loopne
push
retf
cmp
adc
add
or
out
xor
jmp
adc
push
into
adc
and
inc
adc
jg
mov
rol
inc
pop
inc
mov
jle
sbb
sbb
mov
sbb
out
add
ja
mov
jb
pushf
sub
aam
leave
and
or
pop
cmp
sub
mov
sbb
mov
xchg
or
sbb
or
add
xor
inc
mov
push
jmp
push
add
test
xor
xchg
dec
mov
sbb
mov
cmc
and
push
sub
js
inc
sub
mov
xor
sbb
sbb
sub
jae
jo
outs
sar
mov
mov
fwait
sub
or
push
add
xchg
mov
adc
repnz
mov
push
daa
mov
add
pop
xor
add
aaa
dec
ja
dec
jmp
pushf
or
xor
xor
jmp
fwait
rcl
cdq
bound
mov
cmp
push
enter
push
lahf
add
movs
pusha
or
not
(bad)
adc
(bad)
mov
in
cmp
pop
pop
xchg
inc
mov
rcl
call
cmp
shl
push
and
mov
cmp
nop
sub
pop
push
push
push
add
out
sar
xor
fxch
mov
add
sub
(bad)
mov
ds
mov
retf
call
pop
ror
int
or
or
iret
call
je
mov
vmwrite
popf
outs
inc
add
lahf
daa
sbb
sbb
outs
rcr
dec
pop
daa
or
jecxz
xor
push
push
xlat
(bad)
aad
adc
popa
adc
outs
sbb
add
add
sbb
xchg
xchg
sub
xlat
inc
outs
push
std
add
idiv
mov
add
ss
or
inc
test
xor
dec
sbb
adc
inc
loopne
cmps
jp
jge
iret
cs
xor
lods
cmp
test
test
daa
(bad)
cdq
xchg
xchg
sbb
and
ret
inc
jl
inc
push
mov
xchg
inc
adc
mov
test
or
ds
adc
js
mov
adc
nop
mov
mov
add
sbb
out
pop
push
sbb
pop
mov
test
and
sbb
and
call
sahf
or
push
shl
xchg
scas
xor
dec
icebp
xor
dec
int
aaa
dec
pop
daa
stos
cmp
push
jmp
mov
adc
adc
xor
iret
je
aam
push
add
or
sub
test
and
test
xor
inc
xchg
enter
bound
es
inc
out
adc
jno
sub
cmp
mov
js
fsub
mov
ror
call
and
push
or
xrelease
inc
call
mov
je
in
jge
push
fld
xor
ret
push
inc
cli
retf
sub
add
nop
mov
pop
sub
dec
aam
and
pop
ficom
nop
mov
sub
dec
sbb
mov
xchg
es
mov
in
lods
pop
movs
aad
push
dec
mov
add
out
mov
pop
in
adc
ret
std
cmp
sbb
push
inc
imul
push
leave
cmc
cmp
addr16
(bad)
shl
jl
pop
(bad)
aad
adc
ss
xchg
pop
and
add
sub
push
pop
(bad)
scas
sbb
por
dec
add
cdq
jnp
cmp
popa
shl
lods
mov
inc
or
adc
inc
xchg
(bad)
adc
shr
mov
not
cwde
fimul
ja
or
enter
fild
sahf
(bad)
movs
dec
add
hlt
call
add
sub
mov
or
test
rol
test
inc
mov
add
push
push
xor
fadd
and
cmps
lock
rol
or
jmp
xchg
mov
daa
sbb
and
sbb
imul
pop
and
adc
push
sub
jg
mov
or
cmp
mov
lock
cmps
out
jmp
xor
test
outs
arpl
and
xor
gs
hlt
aas
xchg
add
jmp
jnp
sbb
mov
mov
lods
or
cmc
pop
push
push
pusha
pop
xchg
scas
inc
ret
nop
mov
inc
xor
jns
adc
lea
fisubr
popa
mov
sbb
inc
xchg
xchg
inc
es
sbb
mov
out
xor
sahf
outs
adc
xor
out
fmul
and
icebp
jmp
mov
ds
cmp
mov
add
ret
test
adc
test
arpl
mov
xchg
and
adc
push
lea
pop
adc
xor
xor
and
add
or
jmp
adc
adc
inc
in
mov
or
fwait
movs
div
jl
pop
ins
sub
inc
pop
lea
inc
(bad)
cmp
inc
out
and
push
add
mov
jp
push
stos
xchg
mov
dec
xchg
pop
ja
movs
jle
xchg
lds
jo
mov
xor
movs
test
xchg
es
or
loop
xor
lahf
and
dec
pop
dec
test
rcl
cmp
and
adc
pop
repnz
mov
imul
pop
mov
dec
pop
outs
xchg
lods
js
aad
cld
jle
out
mov
push
nop
cmp
data16
cmp
xor
or
ss
loope
arpl
adc
mov
mov
push
js
mov
aaa
or
dec
sbb
mov
sbb
mov
jg
jmp
add
imul
add
ins
mov
movs
mov
sub
sbb
sahf
(bad)
(bad)
rcr
xchg
add
cmc
les
popa
ins
pop
inc
xchg
or
add
(bad)
jmp
enter
inc
bound
sub
push
mov
push
xor
add
adc
or
mov
clc
add
pusha
aaa
mov
add
mov
mov
and
pop
add
mov
repnz
pop
pop
or
mov
rol
lea
pusha
popa
fwait
sbb
dec
xchg
(bad)
mov
or
out
sahf
dec
or
pop
pushf
loopne
mov
mov
or
push
jnp
sbb
jne
(bad)
push
jl
mov
mov
movs
sbb
add
mov
adc
int
pop
add
inc
inc
lods
dec
pop
add
inc
xchg
pushw
and
add
sub
mov
mov
jl
add
mov
shl
and
mov
inc
mov
mov
pushf
add
push
sbb
jo
punpckhbw
inc
push
pusha
pop
pop
xchg
sbb
lds
fs
ror
mov
pusha
shr
les
cmp
or
retf
adc
adc
dec
push
xor
xchg
sub
nop
enter
mov
mov
add
sub
inc
push
push
or
ins
jnp
jbe
(bad)
or
scas
adc
push
stos
in
leave
mov
push
shl
sbb
cmps
sub
iret
or
jmp
stc
or
inc
dec
adc
push
pop
push
inc
adc
jo
or
push
shl
and
or
adc
retf
ins
adc
dec
cmp
or
push
xor
or
adc
push
adc
xor
mov
aas
dec
and
cmp
sub
into
mov
sbb
mov
(bad)
jge
jb
and
enter
movs
popa
mov
mov
test
adc
rcl
mov
adc
repnz
push
sbb
mov
sub
rcr
pusha
jge
ret
pop
inc
or
dec
mov
js
pop
xor
inc
jp
lahf
dec
gs
ins
lea
push
inc
pop
adc
or
xchg
and
adc
sub
or
and
cmp
pop
add
inc
or
aam
add
dec
rcr
call
pop
or
retf
sar
and
and
xor
inc
int3
push
test
pop
and
sbb
xor
xlat
sbb
mov
dec
in
outs
pop
jbe
rcl
jmp
add
rcl
sub
test
add
pusha
scas
test
mov
fimul
jae
sar
sbb
(bad)
push
push
not
ret
adc
add
mov
xor
xor
add
and
sub
adc
and
cs
or
inc
xor
stos
and
push
push
es
dec
in
pusha
das
or
fild
push
push
in
jmp
rcr
jge
pop
pop
push
push
push
jns
jns
pop
cld
pop
xchg
cmp
jl
dec
pusha
sub
imul
test
inc
outs
sbb
dec
ja
sbb
fisttp
ins
loop
pop
inc
fs
inc
sbb
or
ja
fiadd
inc
add
lods
shl
imul
cs
jne
xchg
test
sahf
pop
xor
push
loopne
fist
outs
loopne
dec
outs
inc
in
jns
stos
sbb
inc
test
hlt
xchg
adc
sbb
dec
popf
fist
scas
sbb
rcl
scas
mov
fs
xor
loopne
inc
sbb
add
cmp
mov
mov
lea
inc
adc
ja
push
imul
scas
popa
loopne
out
push
ss
or
jbe
sbb
gs
jle
cmp
push
test
or
call
ret
jae
popa
fmul
add
ins
call
pop
loop
cmp
mov
test
xchg
mov
dec
pusha
call
js
cmp
mov
lea
cmp
in
jmp
movs
out
shl
dec
mov
add
xor
mov
adc
xchg
or
call
test
cmp
xchg
aas
xchg
test
test
xor
inc
and
pop
(bad)
in
repnz
int3
inc
cli
or
and
data16
add
or
and
or
test
adc
xchg
xchg
mov
sub
pop
adc
jns
pusha
nop
pop
loope
loopne
push
loopne
data16
jecxz
adc
sbb
cmp
aaa
and
push
add
or
add
sub
in
arpl
adc
jl
pop
imul
dec
add
data16
mov
push
pop
jne
movs
adc
(bad)
not
mov
mov
add
adc
cwde
inc
add
add
adc
out
jmp
add
or
retf
or
mov
add
xor
add
(bad)
mov
sar
adc
sub
inc
pop
sub
rcl
jmp
inc
push
push
mov
push
mov
inc
movntps
dec
ja
xor
and
jle
in
call
adc
pop
push
cmp
sbb
out
popa
dec
jbe
pop
jge
sbb
and
ret
adc
xor
xor
or
sbb
and
fwait
mov
sub
hlt
inc
dec
stos
xlat
mov
sub
sbb
push
rol
xchg
mov
or
bound
mov
ror
shr
or
or
pop
movs
mov
or
or
or
loopne
cmp
adc
(bad)
and
(bad)
jg
add
inc
cmp
nop
or
inc
xchg
add
stos
in
xor
aad
push
or
push
inc
or
xchg
sbb
sub
and
les
pop
ret
and
sbb
jmp
push
jnp
inc
jbe
arpl
add
cmp
test
adc
ins
or
pop
sbb
outs
sub
jecxz
and
inc
cwde
add
dec
add
inc
aam
mov
ret
add
or
daa
xchg
inc
mov
call
lea
add
push
(bad)
aas
ds
sbb
jg
and
inc
mov
ret
or
push
cmp
add
ds
push
(bad)
or
inc
adc
rcl
lock
push
(bad)
push
loope
inc
sbb
inc
sub
adc
cmp
add
nop
test
loopne
cmc
(bad)
shr
pop
rol
lea
lahf
dec
and
cwde
and
outs
shl
mov
movzx
aam
add
clc
ss
and
and
test
sub
je
(bad)
jmp
cmp
ja
push
ss
push
add
jmp
pop
or
jg
test
and
and
imul
jne
mov
push
sub
pop
cld
mov
adc
xchg
aad
out
cld
sub
xor
pop
ins
jge
or
push
jo
call
mov
or
lock
pop
outs
jne
sbb
popf
mov
fs
in
adc
mov
neg
aam
mov
pop
add
xchg
cld
push
push
lea
rcl
cmp
clc
and
push
push
fwait
cli
pop
neg
push
lahf
movs
stos
inc
mov
rcr
outs
fld
call
push
fild
jbe
push
mov
sti
fcmovnb
add
cmp
xchg
daa
nop
mov
daa
mov
dec
add
stos
aas
xor
mov
push
pop
inc
xchg
sbb
les
push
icebp
mov
mov
sbb
aas
and
fcomp
pop
inc
dec
push
test
icebp
jns
mov
inc
mov
ret
jb
mov
loopne
call
add
dec
int3
dec
mov
mov
jns
dec
jo
push
jnp
inc
adc
inc
cmp
in
lock
xchg
or
inc
cmc
rol
add
jl
addr16
std
add
push
inc
push
mov
iret
mov
and
mov
cs
push
xchg
pop
(bad)
jmp
mov
mov
push
pushf
push
push
movs
push
fcom
sbb
and
push
push
rcr
jmp
xchg
add
or
sbb
adc
sub
push
push
fs
xchg
push
or
dec
mov
add
add
xor
pop
cmp
in
inc
inc
or
lea
add
add
push
and
xor
inc
fadd
inc
pop
adc
push
and
pop
loope
loopne
pop
jecxz
pop
dec
cmp
mov
in
mov
stos
pop
sbb
mov
sbb
jl
push
cmp
sbb
daa
xchg
pop
ret
cdq
sbb
in
fs
call
in
hlt
clc
cld
add
xchg
xchg
fild
xchg
xchg
xchg
adc
sbb
xchg
xchg
xchg
xchg
and
sub
xchg
xchg
xchg
xchg
xor
cmp
xchg
xchg
xchg
xchg
inc
dec
dec
push
xchg
xchg
xchg
xchg
push
pop
pop
pusha
xchg
xchg
xchg
xchg
fs
xchg
xchg
je
jl
xchg
xchg
xchg
xchg
test
xchg
xchg
xchg
cwde
pushf
pop
jg
les
sub
mov
out
das
mov
push
lea
adc
cmp
arpl
outs
push
or
add
xchg
loop
and
nop
out
fidiv
call
cmp
mov
sahf
add
call
enter
sbb
in
push
and
inc
out
sahf
add
pop
or
in
nop
je
test
sahf
add
sbb
sbb
and
popf
add
and
sub
and
enter
xor
xor
repnz
inc
cmp
jae
iret
add
enter
dec
and
cmp
enter
pop
aam
cmp
push
in
and
push
sbb
xor
cmp
push
sahf
add
js
jl
cmp
test
jns
in
mov
aam
call
xchg
or
and
psrlq
push
mov
outs
pop
mov
push
push
mov
mov
mov
push
pop
mov
push
add
jnp
and
fidivr
daa
add
pop
inc
icebp
xchg
test
or
arpl
imul
aaa
cmp
pop
adc
in
push
mov
sub
scas
mov
cmc
xchg
gs
adc
inc
lahf
jo
pusha
dec
mov
jno
jae
push
mov
sbb
push
bound
lea
and
pop
ins
jns
pop
dec
ins
lods
inc
sti
pop
dec
lods
sub
and
pop
pusha
out
add
pop
adc
add
pusha
jecxz
inc
daa
inc
outs
(bad)
fiadd
push
push
fwait
shl
adc
ss
mov
fisttp
outs
or
test
imul
inc
pusha
ins
in
bound
pop
dec
xchg
das
fsub
rcr
in
pop
ins
dec
ins
xor
mov
xchg
add
dec
add
jnp
and
retf
aad
mov
cmp
pop
nop
jb
fst
outs
das
pop
fs
js
xor
test
pop
add
add
daa
add
cdq
adc
pop
sub
imul
outs
pop
sub
mov
or
or
adc
sbb
inc
pop
es
xor
bound
push
sti
sbb
inc
lock
pushaw
pop
add
scas
jbe
fbld
mov
and
jo
inc
ficomp
fdivp
mov
loopne
repnz
cld
bound
es
ds
sub
aam
rol
cmp
xchg
invd
mov
mov
dec
popa
popf
sub
ins
aaa
and
xor
or
xor
arpl
dec
bound
add
add
jne
push
ins
(bad)
fidivr
ins
inc
outs
pop
js
div
mov
pop
pop
daa
jo
ins
or
jb
jb
popa
or
sbb
pop
jnp
dec
add
data16
daa
ja
cmp
outs
test
pop
adc
outs
pop
jb
addr16
lods
fisttp
push
mov
arpl
ins
daa
mov
add
into
sub
stos
fld
outs
ins
das
je
cmps
sbb
mov
(bad)
and
pop
or
inc
mov
loop
je
xchg
ss
pop
jb
arpl
jbe
ins
jns
outs
dec
pushw
das
gs
sahf
sbb
imul
push
xor
out
mov
xor
fisub
mov
or
push
mov
sub
sar
adc
ret
es
push
xchg
push
inc
not
sub
inc
std
and
imul
xor
sub
call
cmp
xchg
push
in
pop
fidiv
pop
xor
sub
mov
jl
adc
daa
loop
mov
and
mov
out
mov
sbb
sti
inc
mov
push
dec
mov
or
add
dec
push
xlat
push
bndldx
aaa
stc
or
add
and
mov
inc
jnp
inc
push
inc
addr16
loop
pop
mov
dec
call
xchg
jl
push
js
or
add
or
pusha
sbb
or
je
mov
xchg
fsubr
or
inc
add
mov
mov
fstp
or
jb
add
push
jb
mov
bnd
sbb
or
xchg
pop
add
out
or
popf
jg
ja
xchg
push
and
jb
push
sbb
cmp
xlat
sub
cmp
cmp
and
add
add
inc
fisub
ffreep
push
add
mov
mov
je
jmp
mov
in
arpl
shl
xor
psllw
icebp
inc
mov
test
cmp
adc
pusha
xchg
or
(bad)
mov
dec
shl
add
and
jae
dec
or
inc
fcomp
fsubr
test
fcom
mov
pop
push
jecxz
mov
ret
pop
mov
movs
xor
test
call
cmp
jecxz
cmp
fsubr
add
sbb
lds
push
push
lods
ret
sub
imul
sbb
addps
fwait
and
loopne
xchg
test
xlat
lea
mov
and
inc
xchg
or
jecxz
push
and
sbb
imul
add
jmp
mov
movs
bound
pop
inc
mov
rcr
jmp
or
or
dec
add
or
pop
dec
and
mov
shl
mov
dec
fadd
bound
add
xchg
mov
sbb
push
test
or
dec
push
daa
imul
inc
scas
pusha
ins
addr16
test
mov
rcr
(bad)
or
fmul
neg
push
ja
push
xor
pmaxsw
sbb
fcmovnbe
neg
xchg
or
pop
push
mov
fnstenv
and
cld
sbb
call
(bad)
call
in
xchg
lods
xor
mov
push
add
jno
imul
jbe
(bad)
iret
mov
jle
and
(bad)
pop
inc
js
and
movs
pop
dec
popa
rol
imul
cmp
jno
xchg
fld
mov
xchg
cmc
pop
adc
xor
ret
sbb
adc
and
sub
(bad)
and
add
push
shr
sub
movs
or
dec
mov
dec
loope
inc
push
and
xor
add
in
data16
data16
pop
mov
sbb
sahf
test
dec
push
arpl
add
rcr
adc
and
mov
pop
dec
push
(bad)
outs
in
or
add
test
or
gs
xchg
test
out
or
imul
inc
pop
push
add
push
push
imul
aam
and
jmp
dec
xchg
inc
mov
push
clc
int3
cmps
fwait
(bad)
ficom
loope
gs
or
neg
imul
add
mov
arpl
xlat
test
and
mov
data16
dec
dec
jp
ins
jmp
push
cmp
jle
cmp
inc
sbb
pop
push
shl
aaa
sbb
or
cmp
adc
adc
jp
xor
pushf
or
inc
fadd
sbb
mov
pop
out
xor
(bad)
test
call
ret
pop
pusha
push
shr
dec
mov
dec
pmulhw
jb
xchg
push
add
jo
mov
mov
shl
push
push
rol
add
test
xchg
or
bound
jg
or
inc
sub
mov
dec
lods
fldcw
push
es
mov
sub
(bad)
call
leave
or
popf
mov
mov
add
stos
add
inc
inc
jno
inc
lods
in
jno
xchg
test
dec
(bad)
xchg
add
ins
sub
pop
pop
nop
and
xchg
jno
jb
(bad)
mov
test
stos
xor
mov
scas
inc
int3
dec
sub
pusha
xor
nop
aam
fadd
popf
add
rcl
inc
das
aam
js
pop
loopne
add
mov
rol
push
or
imul
das
dec
or
or
dec
outs
popa
xor
xchg
sub
adc
jb
jmp
inc
mov
or
nop
loop
sub
movs
adc
sbb
jb
into
lock
bnd
mov
mov
jae
shl
(bad)
loop
adc
or
cmp
jecxz
aam
pop
jae
inc
js
dec
sbb
pop
aam
adc
call
cwde
fadd
vmread
and
inc
push
mov
test
mov
ror
aas
iret
fs
dec
adc
push
xor
sar
fild
sbb
jle
adc
ret
popa
sbb
test
repz
xor
loop
call
jae
ins
jl
bound
add
adc
pcmpeqb
xor
jae
(bad)
push
mov
in
sub
adc
daa
or
ret
ret
add
inc
or
pop
addr16
ja
scas
pop
or
jnp
adc
sbb
push
fs
jnp
push
xchg
mov
pop
mov
pusha
pop
and
xchg
(bad)
shr
loopne
or
sbb
test
push
shl
lock
dec
jne
push
adc
dec
sbb
nop
push
sbb
dec
fst
push
(bad)
jns
cmp
imul
add
inc
cld
pop
xor
or
not
adc
data16
pop
push
or
fdiv
inc
jo
push
sub
inc
dec
or
or
dec
adc
ret
xchg
and
arpl
pop
mov
nop
ret
lock
fst
arpl
adc
int3
inc
outs
sbb
sgdtd
inc
loop
scas
loope
jnp
or
fisttp
pop
dec
popa
sbb
aas
ins
jbe
addr16
sbb
xor
dec
push
dec
xor
out
bound
or
and
div
js
int3
mov
movs
and
adc
mov
push
push
mov
adc
or
mov
movs
jo
mov
rcr
ja
push
ds
imul
add
repz
xchg
test
test
adc
shl
xchg
add
enter
je
iret
or
and
push
je
xor
sbb
outs
inc
jb
mov
daa
cmp
bound
pop
inc
pop
or
aaa
pop
push
pop
ja
adc
(bad)
and
mov
fucom
iret
push
push
push
outs
pushfw
adc
nop
mov
jno
je
mov
int
sub
mov
mov
mov
sbb
xchg
or
int
mov
mov
sbb
push
fwait
rol
in
xor
adc
outs
js
add
or
sar
bound
js
popa
jle
sbb
shr
rcl
dec
outs
inc
test
or
adc
sub
jae
and
and
add
add
sub
cdq
push
mov
ins
push
jmp
xchg
jae
and
or
adc
cmp
test
imul
clc
pusha
pop
pop
or
jo
sbb
xor
inc
ds
jp
push
push
sub
xor
dec
pop
adc
inc
out
push
inc
imul
rcl
push
test
xchg
popa
mov
jecxz
inc
mov
add
sbb
xor
dec
xor
fsub
cmp
sbb
push
adc
inc
pushf
inc
ficom
inc
xor
les
or
test
mul
adc
shl
xor
cld
sbb
inc
lock
push
and
nop
mov
or
push
(bad)
out
dec
dec
inc
sar
clc
push
push
(bad)
xlat
push
push
jo
test
sub
adc
push
sar
mov
xchg
or
int
cmp
in
lock
add
push
popa
jne
pop
mov
xor
pop
stos
mov
mov
outs
xor
ins
push
mov
bound
and
inc
and
sbb
sub
adc
push
jl
iret
add
fcomp
push
rol
add
ja
and
fadd
cmpxchg
xor
ds
or
push
push
bound
lock
push
or
in
fwait
sbb
pop
dec
jge
jl
mov
xor
pop
adc
mov
sbb
pop
pop
sbb
sub
pop
in
pusha
lds
inc
and
(bad)
sub
popa
loope
push
ror
adc
add
add
je
leave
adc
nop
test
popa
les
nop
add
and
sbb
pop
push
mov
push
rcl
outs
and
cmp
and
jns
aas
adc
call
mov
xchg
es
dec
push
cmp
jp
call
ror
or
gs
mov
add
cdq
sbb
fisub
mov
sbb
push
ss
push
add
sbb
mov
fwait
xchg
or
ficom
pop
fwait
dec
movups
xor
mov
mov
push
inc
sbb
adc
sbb
gs
sbb
add
dec
push
pop
and
sbb
in
lahf
(bad)
mov
ficom
inc
mov
nop
add
push
jns
sub
es
sbb
fs
es
adc
fs
es
or
mov
adc
fwait
jbe
dec
push
push
lds
loope
lods
xor
sbb
daa
xor
sub
addr16
xor
out
sbb
jno
mov
push
add
in
jmp
ins
push
mov
shr
and
push
mov
stos
imul
sbb
loope
sub
xchg
rcr
dec
xor
or
in
xchg
dec
rcl
mov
jp
je
dec
ins
inc
rcr
cmps
cmp
aam
adc
dec
es
aam
sbb
mov
clc
(bad)
int3
sub
push
xchg
pop
arpl
imul
sub
test
sar
fist
imul
and
ficom
and
sub
push
inc
fnstenv
and
aam
je
out
pop
xor
loop
sub
daa
xor
mov
dec
mov
mov
mov
sbb
adc
or
jne
(bad)
call
test
xor
jl
js
push
sub
cmp
fdiv
call
sahf
fisttp
dec
push
push
ins
imul
sub
jno
sbb
out
clc
push
inc
test
imul
or
and
push
inc
sahf
dec
push
(bad)
sub
or
xchg
xor
fidivr
add
inc
xchg
push
cmp
dec
fdiv
xor
dec
imul
dec
push
dec
push
push
pop
fs
xchg
ret
mov
mov
cmp
loope
push
pop
nop
xor
shl
push
popf
ret
xor
mov
test
cmp
adc
add
and
enter
xlat
sub
push
jbe
into
or
jne
ret
mov
cmps
dec
and
add
sub
inc
or
inc
ins
jg
cmp
or
hlt
or
mov
sbb
or
and
fnop
xchg
cld
push
xor
in
push
push
push
daa
fs
neg
js
sbb
inc
scas
int3
push
pavgb
pop
fs
inc
aas
xchg
pop
fcomip
xor
pop
adc
adc
pop
mov
pop
popa
jb
dec
or
adc
and
xor
jle
ss
push
dec
mov
adc
sbb
fst
add
xor
sub
xor
inc
add
test
sbb
add
imul
pop
adc
add
mov
ret
and
or
rol
sub
nop
adc
lods
xchg
xor
iret
push
jecxz
rol
f2xm1
inc
add
repz
mov
pop
imul
cmp
mov
or
es
(bad)
cmp
push
mul
inc
test
(bad)
xor
mov
fwait
sbb
dec
xchg
adc
dec
push
enter
or
sbb
add
inc
dec
lods
dec
push
and
inc
pushf
or
pop
inc
or
pop
jnp
add
js
mov
push
xor
shl
dec
(bad)
js
mov
sbb
or
loop
test
or
jmp
push
push
(bad)
scas
jg
push
nop
pop
outs
jbe
(bad)
outs
sbb
inc
repnz
pop
inc
call
arpl
imul
cmp
push
pop
ss
xor
pop
int3
or
imul
mov
pop
xor
mov
dec
call
fcmovnb
dec
sar
push
mov
or
push
mov
inc
not
pop
push
jns
and
mov
xchg
jnp
cmp
adc
outs
addr16
es
fistp
cmc
add
push
pop
or
popa
ss
pop
adc
inc
pop
xor
aam
xchg
sbb
adc
jp
sub
xlat
cmp
xchg
xchg
push
adc
adc
mov
inc
mov
xchg
ret
or
or
sar
arpl
pop
inc
sbb
pushf
push
add
ret
shl
fadd
icebp
add
mov
(bad)
xlat
test
mov
push
test
xchg
xchg
cmp
ins
and
cdq
pop
lods
call
adc
pop
ds
jmp
pop
dec
xchg
push
imul
mov
nop
dec
xlat
dec
sbb
add
inc
mov
xchg
and
and
add
xor
clc
or
sar
cmps
iret
mov
or
and
sub
stos
inc
shr
add
add
xchg
leave
int3
and
sar
push
and
inc
dec
gs
pop
dec
ins
cmp
inc
or
or
stos
cli
adc
test
push
cmp
jmp
adc
or
jmp
add
test
mov
mov
and
loopne
xchg
mov
out
pop
enter
(bad)
cmp
sub
rcl
fisttp
sub
cmps
loopne
pop
pusha
push
pop
or
(bad)
jmp
cli
jmp
popf
call
ja
sbb
pop
jl
sbb
lods
adc
pop
pop
adc
or
mov
adc
pop
ins
or
dec
outs
ins
xchg
test
dec
lods
in
mov
dec
push
sub
rol
cmps
test
shl
data16
movs
mov
or
or
inc
test
inc
js
mov
sahf
mov
xchg
mov
hlt
or
and
mov
push
ins
out
je
pusha
mov
or
push
adc
ret
pop
xchg
movs
les
adc
dec
or
add
pop
jbe
xor
mov
ror
mov
xchg
out
ja
loope
cmp
add
shl
jp
add
pop
add
push
mov
stos
xor
je
push
dec
xchg
aam
push
ss
pop
push
pusha
xchg
inc
loopne
xchg
push
mov
adc
test
test
(bad)
and
mov
lahf
mov
adc
fdiv
sbb
sub
push
dec
push
dec
adc
adc
nop
or
and
stos
enter
xor
lea
nop
mov
and
hlt
hlt
mov
push
mov
mov
outs
adc
ins
xchg
push
repz
pop
int3
inc
loopne
pop
adc
xor
and
cmps
pop
and
mov
sbb
xchg
les
adc
enter
xor
loop
jnp
jbe
test
dec
sub
dec
add
add
test
push
sbb
push
mov
add
stos
push
mov
cmp
or
add
sbb
imul
add
mov
or
enter
pop
pop
outs
sbb
imul
or
push
out
add
add
ins
adc
not
fs
adc
lds
sbb
and
adc
inc
(bad)
pop
(bad)
in
sbb
or
sbb
sbb
nop
mov
xlat
movs
pop
xchg
(bad)
jp
lods
xchg
aaa
jo
push
adc
or
scas
jns
add
adc
ins
arpl
xchg
ins
pop
icebp
or
test
push
or
inc
sub
cmps
mov
xchg
(bad)
adc
push
sub
mov
arpl
loope
cmps
int
inc
add
sbb
adc
dec
add
adc
sbb
sbb
mov
or
add
loope
mov
daa
dec
and
or
xor
ret
add
adc
dec
add
retf
shl
or
or
ret
or
fwait
push
and
pusha
adc
sbb
ins
jmp
or
dec
jo
push
or
add
out
xchg
push
adc
ret
pop
or
mov
xor
sub
imul
adc
mov
jmp
pop
cmp
pop
cwde
pop
adc
push
push
fdiv
outs
leave
push
dec
add
add
push
mov
dec
inc
sti
or
fiadd
or
xchg
mov
add
dec
xchg
cdq
cmp
out
push
and
jo
mov
sbb
mov
add
iret
add
stos
outs
or
push
in
call
inc
rol
loop
div
ja
xchg
xchg
dec
pusha
or
sahf
fstp
add
add
mov
sbb
or
mov
(bad)
jmp
fmul
inc
dec
das
repz
mov
sbb
nop
sbb
inc
outs
sub
fist
test
sub
sbb
and
xchg
and
or
adc
in
and
jge
push
push
shl
nop
lods
inc
adc
popf
xchg
xor
aad
dec
adc
push
enter
popa
push
inc
mov
retf
les
cmp
push
mov
adc
or
mov
dec
add
or
and
sbb
xchg
cmp
jo
jne
(bad)
mov
outs
dec
sbb
ret
icebp
out
add
popa
adc
int
add
sbb
adc
mov
mov
or
mov
jae
push
aaa
xor
adc
outs
sub
cmp
adc
push
jmp
adc
scas
test
inc
jae
imul
lods
mov
push
inc
mov
inc
cwde
ss
and
jne
or
or
sbb
ins
add
jb
sub
cmp
sub
push
sbb
inc
stos
add
sub
fnstsw
pop
push
subps
cmp
add
and
nop
add
inc
mov
sub
fdivr
add
sar
nop
dec
mov
xor
scas
rol
fbstp
out
mov
or
and
mov
adc
retf
dec
pop
mov
pop
push
or
loope
in
push
aas
lods
add
or
add
sbb
mov
imul
mov
fs
cdq
dec
repnz
pop
pop
and
scas
or
lahf
push
and
arpl
mov
mov
(bad)
rcl
ror
jb
mov
and
push
daa
mov
push
and
add
iret
ins
fsubr
xchg
call
fadd
and
sbb
fadd
or
xor
cwde
data16
sbb
or
or
dec
in
loop
xchg
add
nop
imul
pusha
sbb
cmps
loopne
pusha
arpl
leave
push
adc
nop
inc
cmps
inc
pop
push
sbb
dec
jmp
push
inc
xor
xor
movs
or
cmp
fcomp
sbb
mov
mov
pop
lea
cmp
cmp
sub
xor
imul
mov
jns
ret
adc
in
ficomp
xchg
out
adc
mov
sub
movhps
jbe
mov
pop
loope
mov
pop
cmps
cwde
rol
out
test
inc
fisttp
test
push
and
or
cmps
shl
xor
add
add
or
test
test
mov
or
imul
or
or
int
add
inc
mov
jg
lahf
mov
stos
aaa
push
sbb
test
cmps
nop
add
ins
add
push
dec
inc
pop
add
(bad)
push
inc
mov
push
sub
mov
push
dec
add
pop
or
sub
addr16
pop
dec
push
inc
push
jg
call
stos
dec
pop
test
push
dec
jbe
push
shl
loope
inc
out
add
or
stos
pop
jp
dec
enter
jae
scas
inc
sbb
imul
inc
bound
rcr
push
mov
pop
add
ficomp
or
loopne
jbe
stos
cmovbe
mov
inc
pop
lods
daa
or
sti
daa
add
adc
or
out
add
test
and
in
push
lods
inc
(bad)
and
push
fwait
out
cmp
xor
dec
inc
rol
pusha
adc
mov
fsubr
ss
pusha
scas
xchg
shl
ror
in
imul
mov
mov
mov
xlat
mov
scas
inc
push
cwde
test
int
add
xchg
add
inc
or
or
std
nop
push
scas
test
add
jne
fnstenv
push
ins
pushf
add
pop
dec
ror
pop
(bad)
out
ins
jp
call
xor
pop
loop
daa
xor
mov
pusha
xor
inc
mov
iret
mov
mov
arpl
or
and
adc
ins
in
mov
cmp
push
mov
sbb
in
stos
pop
or
fwait
nop
shl
pop
or
shl
add
sub
and
cmp
loope
clc
add
or
xchg
add
adc
nop
jo
push
pop
sbb
inc
stos
int
pop
cmps
adc
pop
cmp
jg
mov
jno
xor
mov
call
js
gs
adc
mov
sub
push
test
mov
je
mul
adc
inc
mov
xor
sbb
mov
push
adc
lss
xor
test
add
adc
std
hlt
jne
inc
sbb
add
cmp
les
cdq
outs
cmps
add
pop
loop
push
mov
inc
push
push
ja
inc
gs
mov
sbb
aas
cwde
inc
lock
jl
dec
cmps
dec
push
push
inc
inc
mov
nop
jle
mov
pop
or
js
dec
jbe
sub
jl
mov
sbb
adc
dec
xchg
mov
cmp
and
fldcw
retf
mov
es
add
mov
int
sub
dec
jl
fiadd
push
fwait
in
imul
xor
sub
int3
or
inc
push
ins
call
adc
inc
push
movs
les
aaa
pushf
clc
and
mov
shl
and
shl
xor
push
xchg
retf
data16
aas
inc
cs
add
call
ins
shr
in
inc
sahf
push
lock
(bad)
aam
fs
into
xor
xor
movs
(bad)
rol
dec
push
cmps
pop
ss
mov
sub
call
mov
cmps
lock
ins
lods
cmps
pop
ss
fdivr
sub
data16
mov
dec
test
fbld
enter
push
fcom
push
push
mov
mov
pushw
mov
pop
mov
pop
cs
popa
add
adc
nop
imul
xchg
push
adc
sub
or
lods
imul
(bad)
ss
outs
pop
mov
sbb
(bad)
jae
int
repz
xchg
js
fadd
push
enter
ss
test
mov
dec
ss
mov
dec
(bad)
(bad)
cmp
xor
mov
push
enter
ins
xchg
retf
xchg
push
xor
js
lods
test
adc
pop
pusha
stos
xor
mov
scas
cmovs
fbstp
mov
test
gs
cwde
mov
hlt
mov
in
stc
pop
mov
test
adc
sbb
jo
call
pop
mov
ja
pop
pop
jl
sbb
fdivr
sub
or
repnz
push
fmul
fsub
mov
add
psubusb
xchg
pop
ins
add
shl
ins
cli
xor
pop
jecxz
mov
sbb
add
or
pop
mov
mov
ret
add
or
xchg
add
add
sbb
pusha
jecxz
or
(bad)
popa
or
add
pop
add
add
add
and
sub
sub
adc
mov
sub
adc
sub
das
jl
cmps
lods
test
mov
ror
call
fdiv
pop
aam
push
lock
scas
xor
repz
cmc
pop
clc
or
cmps
imul
shl
add
and
jl
cli
fldcw
lds
mov
pop
cwde
mov
mov
mov
xchg
adc
enter
ss
loopne
adc
fwait
mov
push
pop
jbe
sbb
cld
sbb
sbb
xor
pushf
es
das
sbb
sub
mov
imul
and
fistp
nop
bnd
push
jecxz
sub
xor
in
jo
mov
daa
dec
jne
and
or
jae
fisub
inc
push
cmp
or
dec
push
adc
ins
mov
pop
mov
outs
xchg
push
push
mov
sub
movs
ins
aaa
rcl
sbb
mov
ret
pop
into
pop
inc
ret
inc
cmp
js
addr16
daa
mov
mov
rcr
sbb
fwait
or
push
adc
mov
mov
dec
loop
jp
loopne
or
push
sub
leave
adc
adc
sub
or
mov
jecxz
xchg
inc
call
imul
out
in
or
sbb
sbb
or
sub
dec
add
inc
sbb
xchg
retf
xchg
adc
xchg
cmp
dec
xchg
jno
adc
push
add
push
icebp
and
mov
aam
pop
xchg
enter
cmp
mov
xor
sub
mov
inc
mov
mov
pusha
ins
loop
mov
adc
imul
inc
sub
dec
push
test
add
rcr
(bad)
in
popa
cmps
mov
cmp
rcr
cmps
aad
sub
in
mov
sbb
sbb
in
call
push
movs
les
adc
mov
aam
cdq
jbe
je
int3
pop
mov
mov
outs
push
stc
mov
call
sub
sbb
mov
jne
xlat
adc
xchg
ficom
sub
xor
fwait
gs
mov
xor
js
xor
fdiv
pmaddwd
inc
mov
enter
test
test
or
aaa
shl
or
ficom
sbb
xchg
sbb
and
leave
ss
jecxz
sahf
sbb
fiadd
push
mov
push
imul
pop
adc
push
sbb
add
aaa
pop
ins
and
inc
or
add
adc
aam
or
aas
loopne
push
adc
push
rcr
push
cmp
push
pop
xor
sbb
jae
or
sub
xor
dec
push
popa
arpl
or
sub
cmp
cmp
adc
push
add
js
xchg
inc
push
out
pop
inc
(bad)
pop
push
mov
add
xchg
dec
je
inc
inc
dec
mov
add
xor
test
bnd
adc
add
pop
adc
mov
call
inc
enter
inc
dec
xchg
add
std
icebp
adc
adc
mov
je
cmp
dec
mov
mov
jns
aam
dec
dec
repz
xchg
inc
or
aas
pop
clc
inc
or
pop
inc
pop
pusha
fmul
push
mov
push
movs
sbb
dec
call
call
add
mov
push
sbb
ja
(bad)
out
add
pop
cs
pop
retf
pop
adc
ret
mov
cdq
jge
add
push
movd
sbb
push
xor
mov
add
stos
add
push
dec
dec
retf
and
mov
jle
popa
rol
dec
sub
retf
(bad)
cld
add
add
mov
adc
retf
ds
orps
loop
jo
rol
or
pop
aas
adc
dec
xchg
push
cmp
or
push
xor
test
adc
lea
cmps
cs
enter
imul
pop
mov
nop
adc
in
dec
add
dec
dec
data16
ficom
clc
es
imul
inc
int3
add
les
pop
add
add
sbb
mov
sbb
adc
pop
push
sbb
and
push
rol
jno
in
cmp
ins
fcmovb
sub
and
fstp
pushf
push
mov
xchg
sub
adc
repz
xchg
add
fs
dec
add
or
push
and
or
test
xlat
adc
cs
ret
leave
adc
nop
xor
fcom
push
movs
aaa
je
jg
add
loop
and
xor
inc
int3
fcom
inc
jmp
jmp
add
push
loope
(bad)
adc
pop
ret
fs
or
popa
push
ds
scas
les
add
push
(bad)
inc
in
sbb
sub
imul
rcr
mov
adc
xor
jg
rol
cmp
jg
push
inc
add
add
mov
pop
jbe
sbb
adc
push
pop
add
add
imul
jb
xor
xchg
xor
pushf
cmp
sar
ins
add
inc
mov
int3
jge
jge
sub
lds
dec
aaa
or
lods
push
(bad)
xor
dec
in
lahf
mov
xor
xor
cmp
mov
mov
adc
aaa
add
mov
inc
push
inc
cmp
push
inc
(bad)
fstp
enter
jo
pusha
cmp
inc
cmp
and
arpl
cmp
inc
loop
adc
cmp
fiadd
or
add
ret
cmp
mov
mov
cmp
mov
push
sbb
pop
xor
add
movs
in
add
mov
dec
in
fistp
add
xchg
add
adc
push
and
fidiv
push
ds
mov
test
jae
xor
xchg
ret
aaa
movnti
dec
stos
xchg
jb
pusha
push
inc
fimul
in
into
cwde
fist
mov
imul
fcomp
and
nop
xor
inc
inc
ins
lock
inc
add
or
adc
adc
and
adc
aad
sbb
and
dec
dec
mov
or
cmovnp
cmp
jecxz
cmp
push
add
in
cmp
adc
mov
sbb
xchg
cmc
(bad)
into
fisubr
push
push
push
push
dec
jnp
movs
imul
adc
popa
pop
or
push
fbld
pop
mov
sbb
ficom
push
lock
mov
shl
imul
cdq
dec
xchg
mov
fstp
lock
fist
jo
add
add
sar
aaa
push
push
pop
push
dec
pop
xor
nop
xchg
das
push
push
(bad)
fist
dec
daa
cmp
scas
push
mov
push
adc
test
loopne
nop
add
mov
outs
lods
sbb
lods
pop
jo
pop
aad
adc
push
push
push
les
push
int
dec
enter
scas
push
inc
inc
sub
xor
dec
jns
call
add
repz
pushf
inc
jecxz
stos
push
pusha
or
push
fs
call
pop
dec
ficom
push
dec
push
dec
retf
(bad)
push
dec
or
adc
push
mov
popa
inc
js
movs
pusha
push
mov
call
pusha
mov
fsub
mov
xor
pop
aam
icebp
push
leave
adc
xchg
fs
mov
lock
cmps
jns
adc
cmp
push
fadd
into
inc
or
movs
jno
movs
jns
and
movs
mov
dec
sub
sub
mov
xchg
mov
mov
mov
popf
shr
jns
push
push
rcl
(bad)
xor
imul
inc
xchg
gs
push
or
ins
jo
sbb
pop
mov
jecxz
les
ins
ret
or
mov
inc
out
cmp
pop
outs
loop
mov
ret
add
outs
xchg
test
rol
lea
and
dec
adc
cdq
test
sbb
dec
ror
inc
or
push
xchg
into
je
lods
push
push
inc
leave
or
fbstp
xor
aaa
xchg
xchg
mov
nop
test
addr16
call
les
jno
mov
push
leave
push
xor
js
sbb
or
push
inc
jp
cmps
fwait
jb
popa
push
lods
push
pop
stos
test
or
enter
push
push
rcr
inc
sub
xchg
out
rcr
cmp
dec
and
shl
xor
loop
add
and
xchg
push
xor
and
cmps
pop
repnz
dec
cmp
add
mov
xor
mov
test
inc
pusha
jmp
mov
rcr
neg
movs
mov
inc
rol
inc
test
push
inc
push
xchg
adc
popf
xchg
dec
rcl
jo
cmp
mov
sub
xor
out
(bad)
mov
mov
add
(bad)
cmp
mov
test
inc
push
test
or
stos
sti
clc
clc
push
cmp
mov
sbb
jo
fld
pop
mov
fisubr
movs
jae
gs
add
cmp
into
scas
push
std
lea
jns
add
mov
mov
mov
jns
cmp
loopne
or
mov
add
call
add
hlt
scas
add
test
mov
int
cwde
movs
pop
mov
mov
fcmovnu
jae
pushf
imul
pop
add
addr16
inc
mov
push
sbb
xchg
shl
xchg
push
loop
adc
xchg
and
sahf
cmc
pop
push
xchg
inc
out
pop
xchg
fimul
inc
ror
jbe
enter
lods
cmps
rcr
xchg
mov
les
cwde
imul
ret
sub
and
push
sbb
push
inc
movs
jno
out
mov
sbb
fs
pushf
popf
add
pusha
daa
push
lea
repnz
jbe
mov
fistp
add
push
inc
xchg
push
mov
in
loopne
js
loope
in
push
xchg
movs
inc
mov
sbb
xor
push
push
xchg
ins
stos
mov
dec
cwde
je
xchg
push
adc
dec
jl
dec
nop
push
adc
and
cmps
xchg
cmp
fcmovb
dec
mov
mov
push
mov
add
nop
test
mov
stos
pop
lock
call
xchg
sub
add
sbb
les
dec
pop
lods
test
lock
jbe
push
adc
(bad)
or
inc
sbb
addr16
inc
add
scas
jns
data16
and
xchg
shr
adc
nop
in
fs
mov
add
out
div
ret
dec
mov
push
pop
ret
inc
dec
popf
mov
mov
dec
sbb
ja
mov
push
xlat
jle
cwde
mov
mov
jmp
popf
inc
pop
aam
or
pop
or
(bad)
ror
jb
jl
and
test
pop
and
adc
push
sbb
xor
cs
int3
ret
cmp
pop
lea
adc
push
sbb
sbb
sbb
sbb
sbb
outs
cdq
inc
sbb
fmul
shl
inc
test
adc
sub
add
enter
mov
add
pop
rcr
fiadd
sbb
mov
stc
inc
add
jl
inc
jmp
jno
cmp
prefetchwt1
or
jb
pop
dec
sbb
xor
not
(bad)
push
loope
(bad)
mov
cmc
fdiv
fsubr
pop
dec
dec
sbb
stos
mov
fimul
sbb
jl
and
mov
in
adc
fsub
and
in
or
or
push
pop
das
shl
loopne
mov
test
pop
repnz
hlt
add
leave
inc
add
push
call
sti
and
mov
out
add
ja
jnp
pop
rcr
ins
aad
pop
mov
bound
dec
pop
test
add
int3
adc
or
jbe
lods
add
cld
jle
xchg
clc
or
push
fsubr
pop
mov
xchg
ret
jl
xor
sti
and
aaa
jle
sub
dec
xor
addr16
les
jno
xlat
jne
add
lahf
xchg
ss
add
jle
and
je
and
popa
adc
icebp
and
and
adc
dec
(bad)
fsubr
push
adc
lea
fwait
pop
fisttp
add
xchg
int3
stos
mov
mov
add
inc
add
cmp
dec
sbb
or
add
test
xchg
ins
lock
popa
leave
add
ss
cmp
popa
loopne
jbe
in
add
add
push
cld
push
add
mov
or
xor
dec
les
inc
jle
in
or
adc
lea
lea
jge
mov
mov
add
add
push
les
sbb
hlt
repz
outs
push
ja
test
imul
retf
dec
popa
sub
lods
(bad)
xchg
xchg
push
xor
lock
and
(bad)
lock
adc
inc
nop
imul
cmp
inc
mov
inc
jns
and
nop
mov
out
adc
aam
shr
aam
jo
push
jns
out
and
shr
ins
jmp
sub
and
add
or
push
imul
jle
mov
popa
jg
and
jge
(bad)
dec
test
je
(bad)
fcmovbe
ret
jmp
daa
bswap
push
fcom
mov
popa
jne
xor
xlat
popa
jbe
mov
outs
nop
or
sbb
loopne
sahf
fwait
push
mov
sub
and
cmp
fsubr
jae
outs
adc
pop
push
bswap
out
add
cs
fst
not
pop
mov
retf
(bad)
repnz
cmp
sub
jno
push
sbb
xor
mov
push
sti
dec
mov
push
test
push
mov
lock
es
sti
loop
ss
jae
mov
js
icebp
cs
xor
or
xchg
mov
(bad)
mov
lods
add
jmp
jbe
aas
push
dec
fldpi
dec
push
sti
dec
adc
pop
or
imul
mov
push
inc
imul
sub
or
mov
pop
movs
adc
gs
call
mov
repz
mov
push
pop
dec
inc
jmp
add
add
mov
in
repnz
scas
mov
rcl
push
xchg
dec
pop
or
repz
mov
pop
rol
outs
mov
sbb
jno
(bad)
and
ja
inc
xchg
mov
mov
shl
mov
push
add
fsubr
mov
sbb
pop
mov
add
mov
hlt
mov
mov
retf
test
fs
pusha
lock
adc
jne
adc
pusha
jne
cmp
loopne
int3
cmp
mov
xor
(bad)
int3
dec
fstp
pop
push
pop
adc
sbb
cs
sbb
dec
mov
xchg
shr
(bad)
fiadd
mov
push
jo
lea
clc
cmp
jle
xor
cmp
dec
adc
in
mov
xor
sbb
dec
jnp
dec
pusha
pop
ret
mov
add
aaa
rcl
push
or
ja
adc
mov
add
shr
mov
retf
bnd
test
sahf
cmp
jb
adc
ja
pop
sub
clc
cmp
jl
sub
jle
adc
xor
dec
mov
mov
enter
jmp
jl
nop
test
push
inc
imul
inc
popf
dec
mov
jge
gs
and
mov
loopne
(bad)
(bad)
enter
jg
pop
es
mov
and
(bad)
in
add
inc
push
outs
mov
xor
inc
or
xor
test
add
xor
push
or
pop
dec
mov
call
mov
jbe
jmp
jecxz
dec
rol
add
add
mov
and
and
enter
xor
adc
sub
adc
stos
loopne
fdivr
fadd
push
(bad)
loopne
inc
xlat
sbb
rol
sbb
inc
and
add
retf
jecxz
mov
daa
outs
inc
sbb
adc
mov
push
loop
out
mov
jmp
adc
sbb
test
outs
inc
rcl
pop
push
or
test
sti
es
in
pop
jne
repz
sar
push
xor
or
add
jle
dec
or
nop
jle
sbb
(bad)
cmp
inc
or
or
mov
add
inc
fcomp
aas
rol
clc
xchg
sub
addr16
xchg
loop
les
inc
ret
in
aam
sbb
push
dec
(bad)
nop
mov
frstor
sub
inc
or
xlat
pop
sbb
imul
pop
dec
add
sub
sti
pop
mov
sub
mov
sub
dec
in
popf
or
hlt
cmp
sub
push
imul
dec
out
sbb
loopne
call
push
mov
inc
cmp
or
push
stos
push
mov
hlt
jg
jne
xor
jle
shr
shl
iret
jno
cmp
das
gs
mov
enter
into
aaa
inc
rcl
sbb
sbb
cmp
mov
adc
sub
sbb
mov
cmc
and
adc
push
sub
mov
adc
push
neg
mov
sbb
jne
xor
inc
mov
add
and
cmp
sub
pop
sbb
mov
inc
aas
adc
ins
fcomp
aas
inc
call
jge
rcr
mul
neg
jecxz
ja
mov
out
pusha
and
mov
xchg
add
sub
sub
and
mov
(bad)
sub
jns
test
add
pop
daa
adc
mov
iret
sti
mov
push
mov
adc
jmp
push
mov
dec
sbb
shl
and
mov
leave
mov
ret
aas
mov
sti
mov
(bad)
cmp
enter
adc
xchg
sub
stos
adc
jne
adc
mov
push
pop
xlat
inc
add
loop
dec
vmwrite
push
fwait
xor
movs
(bad)
xlat
es
fadd
fiadd
stos
dec
add
addps
punpcklwd
punpckldq
push
pop
call
jnp
loopne
loopne
add
out
ror
push
psrlw
adc
(bad)
movq
sbb
scas
cld
fnstsw
ror
(bad)
paddw
xor
les
in
lds
addr16
xor
jl
jle
sub
xchg
push
sbb
xchg
sub
push
and
punpcklbw
mov
fadd
(bad)
outs
clc
idiv
leave
leave
rcl
(bad)
out
(bad)
in
and
mov
fnstcw
fstp
sbb
adc
add
jns
bswap
ror
outs
out
(bad)
pusha
int3
mov
sub
mov
(bad)
mov
add
add
xchg
add
(bad)
emms
ja
push
add
js
xchg
pop
adc
push
cmc
in
push
mov
inc
xchg
dec
lea
imul
push
jne
fcom
aad
adc
push
imul
and
jmp
mov
mov
nop
imul
xchg
xchg
and
enter
push
xchg
or
(bad)
(bad)
int3
mov
adc
inc
sub
lahf
sub
mov
pop
cs
gs
sti
std
and
(bad)
iret
jnp
xor
jbe
or
and
inc
inc
jne
test
jbe
imul
and
lds
adc
dec
add
out
xchg
imul
out
scas
repz
pop
sar
jg
adc
stc
and
inc
adc
int3
mov
je
out
cmp
xor
sbb
ja
dec
dec
dec
cmovno
ins
pop
mov
in
mov
je
call
push
sahf
cwde
pop
(bad)
pop
in
sub
ins
or
dec
mov
cld
out
sub
sbb
dec
fs
dec
add
push
int3
cwde
cmp
cld
aas
fadd
gs
jo
aas
adc
cmp
jmp
push
push
(bad)
jle
rol
shr
jb
enter
push
call
xchg
sbb
or
and
clc
inc
or
xor
adc
mov
pop
jb
pop
adc
pop
cld
inc
pop
mov
retf
and
(bad)
adc
adc
ficomp
or
xor
(bad)
mov
adc
scas
pop
fwait
dec
loop
fld
cmp
inc
cld
inc
and
pop
cli
pop
add
cs
inc
sbb
or
adc
mov
inc
dec
push
jg
js
fidivr
pop
inc
dec
clc
push
jmp
aas
push
gs
or
push
inc
push
or
push
add
mov
adc
and
jns
xchg
mov
and
outs
add
and
mov
or
dec
inc
adc
mov
sub
scas
pop
xchg
out
push
sub
lods
dec
out
pop
mov
add
les
sub
sbb
call
icebp
mov
add
add
enter
sbb
and
adc
adc
ss
test
or
add
imul
and
jnp
fiadd
fld
jae
outs
jb
arpl
pop
add
je
add
and
jmp
sbb
add
sub
xchg
sbb
mov
les
mov
adc
adc
mov
push
imul
cmp
mov
cmp
call
in
or
sbb
add
sub
pop
fisttp
test
sbb
test
shl
adc
sub
push
pop
jg
pop
xchg
add
pop
xor
aaa
mov
inc
std
push
sbb
jl
iret
inc
ret
and
adc
imul
out
xchg
xor
imul
mov
not
test
cld
sub
jb
prefetch
pop
js
jae
jl
cmp
cs
or
push
push
push
(bad)
mov
sbb
mov
adc
ret
xchg
imul
dec
bound
sub
sbb
mov
adc
fwait
in
inc
cmc
lock
mov
pop
add
pop
clc
add
push
mov
xchg
inc
and
xchg
int3
or
inc
sbb
dec
xlat
or
inc
fmul
inc
add
mov
les
cld
inc
loopne
cmp
xor
out
sbb
inc
sbb
sub
xchg
xchg
mov
xor
mov
mov
mov
jno
and
jmp
push
jne
aas
jmp
sbb
enter
add
sbb
inc
rcr
imul
out
outs
push
popf
pop
xor
je
rcpps
mov
nop
icebp
pop
jnp
jb
test
ins
pop
xlat
mov
pop
outs
int3
cli
inc
mov
std
jecxz
div
xchg
add
and
das
add
push
mov
sbb
daa
adc
or
rol
mov
cmp
inc
and
cld
mov
add
or
pop
adc
sti
adc
sub
sub
push
mov
and
xor
push
hlt
inc
cmp
cmp
jb
push
jae
or
cmp
leave
xor
add
or
or
enter
adc
pop
leave
xor
mov
adc
jb
cmp
adc
pop
inc
pop
sbb
adc
add
sbb
xchg
sbb
adc
sbb
in
mov
pop
jl
loopne
lods
or
movs
push
ins
arpl
add
push
cld
inc
dec
pop
(bad)
mov
mov
clc
std
push
loop
loopne
push
in
ds
push
xor
sbb
mov
inc
call
enter
push
xchg
sbb
and
mov
and
data16
mov
xor
enter
or
ins
fbld
push
gs
jge
dec
inc
inc
dec
pop
dec
dec
inc
dec
push
inc
inc
das
or
add
dec
pop
das
or
std
in
pop
das
pop
inc
dec
inc
push
pop
add
pop
push
outs
push
jno
pop
inc
push
add
in
inc
inc
inc
push
push
push
sub
or
dec
clc
ror
dec
dec
and
iret
test
push
fcomp
inc
add
imul
push
adc
inc
push
push
sbb
pop
jae
test
add
and
xor
iret
or
or
repnz
adc
adc
and
cmp
sbb
or
xor
push
cmp
scas
daa
sbb
or
js
aas
cwde
mov
outs
dec
xlat
mov
push
cmp
mov
mov
leave
or
mov
outs
scas
inc
bound
dec
add
xor
sub
or
inc
or
int3
jmp
add
mov
in
je
push
(bad)
je
xor
dec
cmp
fldenv
ret
mov
xor
stos
mov
sub
loopne
pop
pop
aaa
jl
adc
or
adc
adc
loopne
aad
jle
mov
std
adc
and
sbb
cmp
sub
inc
sbb
or
dec
xchg
xor
movs
or
push
das
or
mov
xchg
and
adc
dec
jl
(bad)
jne
add
imul
and
(bad)
pop
test
xor
ins
sub
adc
(bad)
in
push
sub
ror
leave
sbb
int3
pop
adc
add
inc
mov
imul
mov
or
pop
xor
cmp
push
cmps
mov
add
movs
jge
mov
dec
out
data16
mov
mov
adc
sbb
lods
arpl
aam
test
xchg
mov
mov
add
mov
mov
mov
test
pop
push
adc
and
cmp
cmp
jnp
jbe
sub
add
push
ins
add
adc
in
movs
xchg
jae
adc
or
inc
mov
loope
inc
mov
lods
add
inc
nop
iret
jae
std
(bad)
clc
cmp
sbb
add
mov
jecxz
mov
rol
or
and
mov
ret
das
or
and
mov
fwait
add
(bad)
or
lea
xchg
and
jno
rol
lods
or
cmps
jle
(bad)
sub
aaa
push
adc
mov
add
add
(bad)
std
add
and
cmps
sbb
std
adc
add
vmovaps
gs
out
and
adc
das
pop
sbb
cmp
sti
pusha
jmp
fwait
sub
(bad)
fs
add
jnp
jnp
jae
cdq
fnsave
jae
adc
or
dec
xchg
dec
daa
xchg
cmps
shr
sub
and
daa
inc
pushf
shr
sub
sbb
sbb
in
push
shr
xor
lock
mov
add
aaa
and
sbb
lds
inc
dec
pusha
data16
pushf
mov
and
mov
test
(bad)
add
dec
jo
pop
cs
push
add
inc
shr
ficom
out
(bad)
in
(bad)
pusha
adc
sti
push
or
pop
xor
aaa
or
add
mov
cmps
add
mov
and
daa
jno
pushf
mov
adc
(bad)
adc
jmp
dec
sar
or
stos
jl
add
into
das
out
pop
pop
test
je
adc
jae
retf
in
pop
and
not
sbb
sbb
test
test
test
push
stos
cmp
inc
sub
rol
mov
das
pop
sbb
retf
cmovne
in
sti
sbb
int3
jne
adc
not
jnp
inc
sbb
cmps
loop
aad
xchg
rcr
pusha
add
(bad)
test
out
add
push
test
sub
xor
and
outs
and
pop
stos
inc
rol
retf
adc
or
clc
cmps
jmp
arpl
or
push
dec
cmc
ins
xchg
retf
jecxz
or
mov
adc
call
pusha
lock
and
cmp
xlat
aad
xchg
sbb
stos
test
jg
rcr
push
sbb
je
xchg
nop
push
in
sub
push
pop
ds
mov
or
nop
sbb
adc
cmp
xor
adc
or
movs
bound
sub
or
jl
mov
push
pcmpeqw
sbb
xchg
adc
jl
xor
bswap
add
lds
jnp
das
cmp
hlt
or
(bad)
adc
dec
push
out
clc
add
pop
mov
cmp
xor
dec
sbb
mov
jo
cmp
push
push
mov
lar
cmp
inc
sbb
mov
fwait
in
mov
add
and
lods
push
pop
movs
mov
js
outs
fwait
add
adc
rcl
adc
imul
or
jo
mov
push
lods
psubq
call
push
dec
sbb
pushf
sbb
inc
dec
dec
adc
cmp
adc
or
stos
or
push
sbb
push
adc
pop
adc
test
popf
adc
lea
fidivr
in
jge
push
in
repz
or
pop
or
nop
inc
xchg
cmp
xchg
adc
jl
test
pop
xor
add
inc
cmps
ret
dec
push
(bad)
mov
in
les
inc
bound
adc
jo
sbb
jg
and
inc
adc
pop
adc
fbstp
jne
dec
popf
fild
cmp
push
push
adc
ret
adc
or
mov
or
dec
mov
shl
aaa
movs
and
mov
in
test
push
pop
loop
or
aam
push
adc
(bad)
loopne
in
das
pop
pop
add
jmp
push
imul
push
mov
mov
inc
arpl
clc
test
xor
and
inc
(bad)
cmp
shl
adc
xor
sbb
and
and
lock
movsx
adc
adc
rcr
sbb
mov
dec
push
adc
cdq
adc
add
push
adc
push
xchg
sub
mov
rol
adc
scas
jne
sub
xor
or
jecxz
push
mov
jmp
mov
add
add
sub
out
jo
add
das
sahf
add
or
mov
or
test
add
jne
out
mov
jne
or
call
or
inc
pushf
cmp
call
xor
dec
xor
vpand
inc
or
fwait
lea
pop
push
aam
xor
into
mul
pushf
xchg
jae
sbb
aad
ret
stos
sbb
add
or
cmc
leave
in
cmp
cli
sbb
scas
ins
jmp
cmps
adc
rol
lods
mov
xchg
pop
ja
jecxz
mov
js
sub
adc
inc
sbb
pusha
jmp
and
mov
aaa
xor
adc
fild
cmp
pop
mov
cmp
inc
adc
aas
fld
in
pusha
dec
mov
sbb
outs
cmp
add
ss
add
movs
mov
(bad)
jns
and
or
lock
jne
add
inc
stos
inc
sti
add
mov
inc
jmp
add
sub
mov
and
mov
icebp
dec
jecxz
cmp
inc
push
xchg
jp
int3
pop
cmp
dec
je
add
add
pop
xchg
cdq
pop
ficom
inc
sbb
lea
cdq
fist
xchg
call
add
(bad)
mov
mov
call
sti
or
adc
(bad)
clc
cmp
mov
or
dec
xchg
add
nop
add
aam
adc
in
(bad)
mov
cmps
jmp
mov
jmp
sub
test
pop
or
add
nop
adc
add
jg
dec
test
loopne
(bad)
xchg
loope
in
les
mov
ret
mov
xchg
and
jne
mov
lock
mov
add
aas
aam
es
cmp
cld
test
sbb
jae
cdq
mov
inc
aas
mov
(bad)
mov
pop
and
pusha
(bad)
mov
pusha
dec
pop
xor
or
fidiv
add
fstp
xor
adc
adc
neg
inc
jecxz
int3
mov
add
jne
cwde
lock
or
enter
jp
lock
enter
xor
ret
add
outs
or
mov
cmps
or
mov
cmp
pop
jne
call
lods
push
aaa
in
adc
inc
sbb
or
iret
jp
test
(bad)
push
nop
or
or
jp
inc
(bad)
xchg
inc
shl
sbb
jbe
dec
es
movs
push
xor
inc
neg
push
and
inc
rol
xchg
mov
mov
push
clc
mov
adc
or
pop
fiadd
fwait
leave
sbb
adc
je
cmps
mov
sbb
add
fimul
push
push
pushf
and
mov
and
nop
xadd
xchg
inc
sub
xor
and
movs
inc
shl
hlt
outs
push
jle
test
(bad)
dec
xor
rcr
sbb
and
add
mov
gs
es
imul
pop
sbb
adc
pop
push
out
or
and
aas
ret
nop
movaps
enter
or
inc
ud1
mov
ss
xor
test
pop
js
inc
inc
movs
inc
mov
xor
adc
push
jb
inc
pop
adc
add
push
pop
push
xor
retf
pop
outs
sbb
adc
out
cmps
or
shl
sub
ja
cwde
shl
push
test
enter
lea
lock
sbb
in
shl
(bad)
or
or
sbb
clc
sbb
hlt
call
jnp
shl
ret
sahf
pop
jnp
cli
cmp
pop
pop
mov
or
inc
xchg
or
cmp
or
lock
inc
aad
je
ins
adc
movs
imul
out
xor
in
inc
sbb
inc
add
ret
fcmovnb
outs
xor
dec
or
or
cmp
lock
gs
shl
idiv
or
push
xor
or
lea
inc
cmp
push
cwde
mov
xlat
cmp
add
or
pop
and
or
sbb
(bad)
mov
jecxz
inc
adc
push
push
ja
rcl
jnp
daa
mov
cmps
nop
and
je
sbb
sbb
mov
ret
dec
es
and
xor
sub
shl
call
call
ret
jecxz
mov
mov
sar
ins
fs
push
xchg
sub
outs
pop
xor
jp
push
fs
and
in
ret
cmp
dec
pop
or
push
xor
repz
sbb
adc
sbb
dec
xchg
or
adc
retf
and
xor
adc
imul
and
cmp
sbb
inc
cmp
imul
mov
mov
or
test
pop
lods
das
imul
adc
cmp
mov
jmp
or
adc
sbb
ror
daa
xor
popa
mov
jp
pop
and
and
fidivr
cmp
shl
push
(bad)
in
popa
xchg
push
out
jmp
mov
adc
dec
bound
or
arpl
dec
pop
cmp
adc
pop
jne
add
test
popa
and
cmc
mov
sbb
add
dec
ret
cli
sub
test
or
or
shl
xor
jg
xchg
sub
and
cld
nop
sbb
cld
icebp
jo
push
ins
jne
out
add
cmps
adc
or
sub
inc
retf
enter
stos
ss
sbb
inc
dec
add
adc
pushf
and
jo
das
adc
lods
add
inc
dec
inc
add
dec
inc
mov
cmp
mov
pop
adc
sbb
dec
cmp
out
xor
mov
test
not
cwde
jp
mov
sbb
or
and
jp
inc
jg
inc
or
arpl
lods
rcl
(bad)
outs
fidiv
(bad)
ret
jmp
test
mov
inc
inc
ss
add
pushf
scas
dec
or
sbb
adc
sbb
push
adc
and
mov
test
sbb
sbb
add
out
dec
cmps
sbb
les
into
leave
cmp
and
xor
push
mov
cmp
bound
movs
xchg
push
loop
dec
or
mov
or
clc
sbb
mov
pop
les
sbb
mov
dec
add
mov
fmul
mov
daa
data16
add
mov
or
outs
mov
push
and
inc
fcom
out
fadd
daa
add
add
pushf
scas
mov
push
and
xchg
sub
and
mov
imul
mov
jmp
push
fidiv
inc
add
add
pop
pusha
in
es
jae
in
call
adc
mov
or
adc
xor
es
pop
outs
movups
sbb
pop
cmp
into
fld
adc
(bad)
push
dec
cs
lods
not
xchg
sub
add
imul
mov
mov
sbb
pop
shr
and
sbb
xor
jne
jl
mov
jmp
sub
mov
mov
sub
mov
iret
and
bound
inc
fadd
fs
mov
sub
ret
add
out
inc
in
add
inc
inc
jmp
mov
repnz
inc
cmp
push
and
popa
adc
xlat
push
mov
push
inc
mov
fld
jecxz
mov
dec
sub
or
adc
dec
push
and
test
shr
cmp
lahf
add
adc
xchg
sbb
add
xchg
popa
cwde
xchg
stos
pop
in
sar
sbb
cmps
or
lds
daa
inc
in
sahf
(bad)
clc
xchg
or
in
adc
imul
sbb
inc
and
add
rcl
gs
or
jmp
aad
jo
cmp
inc
push
pop
jmp
fcom
ins
xor
pop
dec
and
inc
fidiv
mov
sub
pop
outs
test
outs
fsub
dec
inc
add
lock
test
imul
fcomip
ror
adc
ins
dec
enter
fadd
mov
mov
ret
nop
xchg
call
add
rcl
or
test
dec
push
adc
cmp
mov
mov
xlat
and
and
sub
and
push
out
call
push
cmp
ret
outs
add
sbb
dec
jmp
pop
pop
in
inc
imul
das
xor
inc
push
mov
les
inc
add
clc
mov
pop
xor
sbb
je
lods
xor
and
aad
int
add
mov
sub
add
ror
add
and
or
mov
cmp
push
xchg
add
sub
int
lea
pop
xlat
ret
or
sahf
rcr
inc
pop
push
ins
clc
(bad)
xchg
movs
mov
cs
inc
pop
mov
ficom
jg
add
and
lods
xchg
and
sub
ret
cmp
xor
dec
inc
sbb
jmp
in
fcmovu
fstp
or
les
jmp
mov
pusha
and
ret
loopne
iret
and
push
push
mov
das
push
in
neg
jae
push
ins
sbb
push
out
dec
ret
rol
nop
fisttp
inc
addr16
adc
sbb
push
and
popa
out
mov
mov
mov
mov
pop
and
les
mov
(bad)
jae
fs
outs
adc
cmps
add
or
outs
shl
inc
or
loop
push
aas
sbb
mov
std
mov
les
and
mov
inc
mov
adc
popa
push
loop
mov
pop
mov
xor
les
xchg
pop
pop
dec
cmps
xchg
adc
shl
iret
popf
or
(bad)
and
jmp
les
nop
sub
test
and
jno
xchg
ds
lods
add
or
xor
xchg
xchg
shl
cmp
popf
inc
add
out
dec
fadd
shl
jl
retf
push
add
adc
pop
xchg
push
sub
fmul
sub
mov
mov
sub
pusha
pop
xor
push
in
imul
or
out
mov
mov
inc
pop
popa
push
mov
push
inc
or
mov
lods
test
movs
adc
movs
cmps
add
fnstenv
fs
adc
clc
or
push
cmp
inc
inc
add
or
dec
das
inc
dec
add
jb
sub
arpl
and
pop
ret
je
or
sbb
add
push
push
add
add
add
daa
and
ins
stos
sub
dec
add
mov
add
and
xor
inc
jecxz
and
adc
aad
mov
jbe
(bad)
adc
movs
movs
mov
cmp
popa
mov
sbb
ja
mov
js
dec
cmp
or
dec
jae
add
js
movs
push
push
lods
inc
and
movsx
mov
mov
stos
sbb
fidiv
and
or
push
or
imul
sub
loopne
push
out
les
sub
mov
adc
xchg
add
jge
(bad)
or
adc
adc
in
(bad)
clc
shr
or
sub
push
jbe
sbb
and
cdq
ss
call
mov
sub
inc
addr16
or
in
clc
clc
mov
xor
pop
jge
xchg
pop
add
or
or
add
add
shr
mov
mov
add
fdivrp
fmul
call
retf
mov
rcr
fmul
fisttp
mov
fwait
sub
and
adc
cmp
pop
mov
mov
jne
or
popf
cli
cmps
or
jne
add
bswap
push
mov
pop
mov
sub
or
out
mov
sub
dec
sar
jg
push
cmp
jmp
xor
or
je
jne
dec
add
mov
(bad)
repz
dec
inc
sbb
or
es
das
xor
mov
les
inc
jo
and
jmp
(bad)
dec
jle
cli
ins
dec
xor
(bad)
fcomp
pop
adc
inc
inc
and
leave
shl
mov
in
push
in
adc
mov
aad
jl
fbld
mov
sti
add
neg
push
jo
fild
inc
das
stos
imul
fsubr
mov
pop
ret
sahf
xor
mov
cmp
add
push
aas
adc
push
sub
sub
push
mov
add
bound
shr
xor
jl
test
ror
mov
and
sar
inc
jno
adc
popa
pop
aam
imul
test
push
jns
pop
inc
adc
sbb
adc
jns
add
cdq
enter
mov
add
or
push
cmp
popa
into
push
or
cmp
leave
fsubr
in
jo
sub
shl
test
icebp
retf
xchg
ja
(bad)
mov
or
add
popf
pop
movs
je
(bad)
test
mov
xor
mov
or
pop
adc
push
mov
call
sbb
inc
inc
icebp
lahf
test
mov
pop
adc
inc
and
add
ins
pop
dec
xchg
push
scas
into
test
loop
pop
(bad)
push
push
push
sysret
dec
sub
jbe
or
cld
sahf
inc
dec
mov
(bad)
jge
pop
ss
das
repnz
or
inc
outs
cld
mov
jp
jne
out
mov
rcr
pusha
and
mov
into
push
inc
add
or
clc
ret
test
leave
add
dec
shr
or
aam
or
arpl
ins
and
cmps
sub
rcl
shl
inc
and
je
or
faddp
call
mov
mov
jbe
sti
retf
imul
or
inc
pop
ds
ret
dec
sbb
les
xchg
mov
inc
sbb
lock
mov
pop
add
xlat
adc
jns
ss
or
or
push
nop
dec
or
or
dec
or
push
pop
shl
and
and
pop
sub
jp
push
cmp
in
movsx
cmp
or
add
add
mov
inc
imul
aaa
sub
je
or
and
or
or
inc
add
adc
inc
xlat
pop
ror
cmc
fld
mov
dec
or
inc
das
sub
adc
add
test
cmps
lods
repz
iret
and
enter
sub
adc
fdiv
rcl
les
bound
jnp
jo
push
or
xchg
les
lds
pop
(bad)
shl
sbb
arpl
cmp
cld
mov
jl
arpl
fild
leave
or
mov
mov
add
jmp
je
shr
hlt
mov
fidivr
ss
ins
add
cmp
cmp
or
inc
jl
rcl
xor
sub
xlat
(bad)
ror
or
daa
adc
pop
add
mov
mov
sub
shl
inc
mov
inc
and
dec
push
imul
stos
rcl
inc
pop
sub
jg
aas
js
jecxz
aaa
fmul
pop
mov
ficom
mov
cmp
dec
inc
fmul
nop
out
jg
cwde
inc
fcom
jns
jae
adc
mov
dec
jp
push
or
add
inc
and
pop
pop
mov
inc
cmp
ret
repz
sbb
jecxz
adc
clc
jmp
add
push
fdiv
and
sbb
ror
pop
push
mov
adc
dec
or
and
daa
call
call
add
or
mov
ins
cld
or
inc
inc
cmp
mov
pop
xor
or
sub
add
scas
inc
loopne
fnstcw
scas
dec
pop
sbb
dec
sbb
push
push
inc
mov
cmp
out
fstp
das
dec
test
hlt
jge
dec
(bad)
adc
dec
in
pop
mov
xor
mov
or
mov
adc
pop
cmp
(bad)
pop
adc
sub
pop
pop
rol
jg
xchg
cmp
jne
mov
xor
add
fwait
cmp
lea
nop
xor
ret
cmp
popa
sbb
push
adc
push
int
das
mov
dec
cli
mov
xor
mov
or
add
mov
dec
movs
pop
ror
or
or
push
pop
or
dec
adc
inc
je
pop
or
push
mov
sub
sahf
lods
xor
ficom
push
test
neg
xchg
and
push
dec
pop
test
pop
out
cmp
cli
mov
pop
sub
pop
mov
push
or
mov
xor
pop
cld
dec
scas
and
sar
mov
and
sbb
jl
arpl
(bad)
dec
aas
jns
sub
jl
nop
arpl
sub
data16
and
xor
int
inc
stos
retf
jne
and
data16
cmps
cmp
and
pusha
dec
or
and
(bad)
hlt
outs
add
pop
(bad)
mov
xchg
adc
or
fiadd
ss
ret
rcl
push
into
ins
sbb
xor
mov
cmps
or
(bad)
pusha
and
jne
xor
aam
mov
dec
stos
mov
and
jg
push
dec
inc
inc
(bad)
rol
sbb
out
(bad)
ds
call
int3
sbb
pop
adc
sbb
pop
inc
inc
xchg
push
dec
cli
fwait
mov
pop
push
sbb
and
or
inc
call
adc
in
add
aam
mov
les
sbb
jbe
lds
or
cmp
and
mov
cdq
inc
pusha
cmp
mov
xchg
mov
(bad)
adc
xor
or
cmp
mov
mov
bnd
jb
or
cmp
adc
pop
sub
dec
and
mov
mov
iret
adc
sub
xchg
adc
fcomp
adc
scas
sbb
sbb
push
pop
lock
pop
call
inc
adc
xchg
jo
inc
and
pop
sbb
ss
pop
mov
jne
or
push
ret
adc
dec
dec
push
and
rol
and
das
mov
sbb
add
mov
or
jne
(bad)
test
mov
inc
mov
cmp
adc
xchg
push
enter
sub
xor
(bad)
mov
in
jg
push
add
and
sbb
sti
push
or
xor
inc
xor
jmp
pop
sahf
add
sub
push
jle
xorps
xor
movs
add
jns
aam
add
fld
adc
or
sub
out
fcmovu
jle
dec
hlt
jns
or
jnp
mov
sahf
xor
dec
or
xor
push
or
pop
push
pop
push
xor
add
fsubr
pusha
or
jne
pop
or
dec
add
pusha
mov
sar
cmps
pusha
inc
mov
push
xor
add
(bad)
xchg
sbb
mov
js
fadd
int
mov
mov
add
xchg
dec
lds
ins
div
add
shl
xor
push
lock
sbb
das
retf
fiadd
rcl
sub
clc
outs
sbb
fcomp
shr
add
dec
lods
and
xor
mov
sar
xchg
or
add
add
pop
inc
push
mov
ret
jae
mov
xor
ret
fmul
adc
cmp
jle
or
setg
jl
in
add
lods
shr
pop
jns
pop
and
cmp
fild
aad
(bad)
loopne
inc
inc
lea
int
push
sbb
loop
inc
cdq
inc
inc
sbb
dec
call
dec
ret
fst
enter
ss
push
sub
sbb
jmp
jns
add
inc
inc
mov
or
xchg
mov
add
or
mov
and
inc
add
lods
sbb
adc
hlt
les
push
int3
sbb
cmp
push
jb
jne
jecxz
add
add
aam
in
ins
icebp
bound
push
xor
jno
sbb
push
sub
pop
pop
sbb
mov
push
lahf
scas
int3
and
pop
xchg
inc
xchg
stc
fdiv
nop
or
imul
ret
dec
cmp
cmp
inc
sub
cmp
test
mov
shl
popa
sar
or
push
(bad)
xor
cdq
adc
iret
fdivr
shl
sti
arpl
cmp
xor
and
inc
sub
mov
adc
retf
or
sbb
jns
ret
sub
call
mov
or
rcl
divpd
or
aam
ins
pop
mov
pop
outs
das
imul
retf
loopne
push
mov
push
lods
adc
xor
and
mov
or
cmps
inc
rcl
or
enter
adc
mov
adc
clc
shl
jle
xchg
push
add
xchg
outs
out
sbb
loope
adc
inc
inc
jecxz
push
idiv
sub
fiadd
add
daa
dec
cdq
iret
gs
push
push
add
sbb
addr16
add
popa
mov
xor
mov
and
out
mov
adc
dec
push
push
in
pusha
es
or
mov
lahf
adc
sbb
pop
sbb
pop
das
cli
iret
rol
loope
inc
mov
ins
jmp
(bad)
shl
inc
sbb
fcom
push
inc
out
in
inc
add
lods
jge
or
cmp
push
addr16
xor
and
dec
dec
xor
add
cmp
ins
and
sub
aam
sbb
adc
xor
or
mov
push
jmp
and
cmp
hlt
in
hlt
sub
mov
lods
test
nop
sub
jmp
aaa
and
pop
pop
xor
jmp
adc
and
jns
jo
adc
shr
inc
xor
ja
add
and
outs
mov
or
aaa
dec
inc
dec
arpl
sbb
mov
cmp
mov
adc
xchg
mov
xor
cmp
mov
adc
daa
xor
xor
in
and
sti
es
cmp
sbb
and
xor
adc
pop
jo
xor
lods
ins
retf
leave
sbb
push
dec
adc
sbb
pushf
aam
inc
xor
pop
mov
inc
sub
and
dec
xchg
fnstsw
push
stc
add
repnz
xor
pop
mov
mov
ins
(bad)
and
and
retf
repnz
sbb
jne
pop
cmp
jne
imul
cli
xchg
leave
pop
mov
mov
sbb
jnp
pop
fisubr
push
sbb
jne
inc
inc
jne
pop
enter
dec
dec
xor
push
jp
inc
addr16
cmp
pusha
adc
mov
pop
or
and
loopne
adc
rol
loope
xchg
sub
and
mov
in
or
(bad)
jmp
and
jne
div
das
adc
lock
addr16
add
xchg
sbb
fisub
mov
outs
xor
jns
add
pop
or
xlat
call
test
pusha
pop
ja
aam
popf
es
add
cmp
ins
dec
ins
pop
ins
mov
adc
push
sbb
push
mov
shr
and
and
in
inc
pop
enter
mov
pop
jp
pop
and
jnp
mov
inc
cmps
pop
loopne
rol
pop
add
cmp
loop
xor
adc
sub
loope
cmp
je
shr
fwait
popa
mov
push
pop
ret
xor
adc
rol
jp
in
outs
jbe
add
push
mov
dec
ja
adc
(bad)
dec
dec
pop
sub
or
in
mov
push
jecxz
cld
mov
pop
ror
push
push
popa
sub
dec
xchg
pop
adc
pop
pop
or
inc
sbb
push
xchg
xchg
aaa
fcmovbe
lods
sub
dec
xor
xor
cmp
in
dec
(bad)
dec
sub
inc
and
imul
mov
ja
sub
dec
pop
inc
push
mov
enter
leave
les
stc
sbb
or
mov
mov
dec
dec
dec
sub
sub
add
ins
sub
pop
cmc
nop
test
xor
xchg
imul
inc
js
ret
xchg
or
xchg
mov
adc
sbb
adc
xchg
push
lock
cdq
ds
or
aaa
or
dec
push
aaa
rcr
stos
add
push
retf
xchg
and
and
push
xor
mul
cli
mov
and
or
(bad)
jbe
sbb
or
rcl
and
fxch
pop
xlat
pop
cmp
shr
shl
pusha
pop
push
xor
movs
mov
xchg
mov
aaa
or
inc
dec
rol
xor
(bad)
dec
mov
cdq
jbe
mov
arpl
cmp
add
xchg
test
fsincos
mov
rol
sbb
test
add
aad
mov
jp
add
adc
aas
sbb
dec
push
mov
cmp
push
mov
mov
pop
rol
add
jnp
cmp
xlat
mov
mov
add
loopne
sbb
pop
fdivr
aad
mov
test
xchg
call
sbb
out
mov
inc
outs
or
push
outs
xchg
mov
push
and
inc
push
cwde
add
add
xor
retf
mov
inc
mov
cmc
add
add
ret
pop
mov
xor
fisub
lock
adc
rcl
mov
scas
std
aaa
pusha
mov
jne
jge
mov
pop
mov
sbb
es
fsub
out
test
pop
sbb
push
add
fcomp
daa
mov
sbb
adc
add
pop
push
inc
punpckhdq
push
mov
and
push
repz
and
and
sbb
iret
adc
push
xchg
dec
adc
aad
mov
jp
les
loopne
inc
frstor
dec
pop
xchg
sar
sbb
and
std
xchg
xor
sbb
arpl
push
or
adc
fmul
add
(bad)
cli
repz
or
mov
jno
adc
sbb
sub
add
sub
lock
and
sbb
inc
fild
ins
and
in
or
pop
push
xor
and
push
bound
mov
popf
imul
xor
in
add
adc
xchg
xchg
dec
pop
(bad)
aam
and
push
or
or
jo
push
movs
xchg
cmp
pop
loopne
dec
sbb
mov
in
rol
shr
inc
mov
fild
popf
rcl
leave
xlat
sahf
inc
add
mov
jb
cmps
inc
sub
pop
cmp
inc
add
scas
push
adc
pop
jge
and
and
pop
pop
add
adc
add
or
push
push
fidiv
loopne
push
fsubr
dec
in
pop
outs
push
mov
ret
adc
push
pop
mov
add
sub
inc
adc
mov
in
mov
sub
hlt
mov
fcomp
xor
lods
popa
mov
fs
mov
lahf
jmp
cmp
jl
fcomp
xor
inc
mov
repnz
adc
mov
cmp
inc
or
mov
dec
shl
int
rcl
retf
(bad)
dec
xchg
fs
dec
sbb
(bad)
xlat
cmp
inc
inc
cs
or
and
inc
pop
sar
mov
jo
pusha
loopne
jmp
push
push
or
dec
cmp
xchg
das
(bad)
or
inc
sbb
and
pop
clc
jge
push
xchg
cmps
add
mov
mov
inc
sub
jo
fldcw
jl
mov
test
or
mov
ret
mov
sbb
xor
mov
sub
hlt
ret
or
and
push
or
push
jmp
and
inc
xchg
pusha
mov
pop
or
je
cmps
adc
jne
fbld
je
(bad)
mov
mov
add
xor
mov
(bad)
test
mov
mov
aaa
jecxz
adc
inc
adc
inc
sbb
div
inc
inc
mov
mov
pop
add
push
pop
jmp
mov
aam
or
(bad)
jl
sbb
mov
sub
jne
cmp
test
cwde
or
inc
xor
dec
imul
lea
push
adc
movs
mov
jns
mov
test
push
mov
dec
mov
mov
ret
ins
xor
jecxz
enter
add
mov
int3
mov
push
jl
cmc
and
adc
mov
inc
xor
call
ret
in
retf
mov
adc
jg
push
ret
(bad)
mov
call
xor
inc
pop
ret
test
fwait
aam
inc
les
jo
sub
lds
pop
ret
into
push
and
add
jg
mov
push
xchg
jl
mov
pop
in
and
bswap
dec
out
sbb
inc
inc
push
cmps
cmps
or
popa
fld
fisttp
jle
dec
and
sahf
fst
sub
mov
push
add
add
pop
or
aam
cmps
pusha
mov
inc
dec
xchg
push
(bad)
out
cwde
arpl
in
sub
sbb
test
or
xchg
push
or
or
adc
xor
mov
dec
add
xor
cmps
and
in
mov
add
mov
mov
sbb
mov
push
xor
mov
clc
test
xor
hlt
and
cmps
inc
and
xor
sbb
cmc
xor
xor
movs
test
ins
mov
push
sti
enter
jle
cmp
cdq
neg
xor
movs
mov
add
push
sbb
enter
out
jb
or
sbb
and
retf
and
xor
js
adc
add
xor
retf
inc
mov
inc
xchg
enter
adc
lods
inc
pusha
inc
outs
aas
mov
cmp
push
bound
adc
movs
fsubr
sbb
lock
cmps
xor
push
add
add
inc
loopne
and
push
mov
jno
ret
pop
jle
xor
enter
add
(bad)
adc
hlt
inc
xor
or
nop
sub
shr
push
jmp
pop
loope
hlt
push
fwait
xchg
lods
pop
xchg
aaa
push
lock
inc
ror
lea
mov
ret
push
jns
push
das
ds
xlat
mov
mov
and
xor
ins
lock
fmul
sub
leave
adc
pop
xor
push
ins
ss
add
mov
mov
mov
xchg
push
jnp
loopne
or
pop
xor
loope
or
jl
pop
inc
or
jo
and
push
int3
dec
sub
out
push
test
xchg
das
in
mov
rcl
xchg
or
mov
add
or
sbb
and
xor
popf
(bad)
jle
pop
adc
ins
ja
mov
mov
dec
test
inc
add
push
mov
ss
ror
jg
pop
inc
or
jmp
inc
and
sbb
mov
je
test
(bad)
xchg
pop
add
fidiv
mul
push
retf
push
push
cwde
retf
int
add
cmp
pop
xchg
pop
dec
fbld
fdivr
inc
mov
imul
lds
mov
aad
xor
aaa
sub
cmp
push
mov
push
dec
rcr
cmps
gs
sub
dec
xchg
jge
inc
mov
add
push
pminub
outs
mov
push
popa
inc
scas
(bad)
je
pop
pusha
push
xchg
loope
iret
xor
rol
mov
push
cmp
pop
xor
or
jb
xchg
sub
xor
mov
adc
pop
and
dec
xor
mov
enter
es
out
fwait
mov
fcomp
addr16
adc
rol
or
(bad)
ja
or
xor
add
rcl
mov
out
rol
test
sbb
ror
fs
and
fmul
cdq
adc
dec
cld
cmp
pop
dec
sub
jne
jmp
ror
invd
stos
dec
clc
jmp
fstp
inc
add
push
psrld
imul
xchg
aas
add
jne
movs
mov
push
jo
repz
and
mov
test
cmp
push
lods
adc
xor
xchg
adc
mov
cmp
sbb
adc
jae
and
out
inc
retf
retf
(bad)
jnp
rcl
fst
xor
push
jp
pop
div
leave
(bad)
outs
fbld
adc
sbb
cs
jle
mov
or
test
fdiv
movs
or
int3
and
adc
or
mov
mov
fmul
and
fdiv
jmp
cmp
(bad)
pushf
idiv
fcomp
jae
push
int
mov
cmp
(bad)
sub
clc
or
xchg
int3
jge
cmp
sbb
add
mov
leave
mov
call
movs
jne
lea
lods
pushf
add
dec
leave
aad
vpandq
psadbw
sbb
add
mov
xor
add
push
test
inc
cmp
xor
neg
or
xchg
mov
adc
enter
cwde
mov
shl
pop
xlat
es
cmp
sbb
fimul
jecxz
jne
dec
push
(bad)
inc
pop
jecxz
lods
jmp
adc
and
movs
or
xchg
mov
cs
movs
or
push
lods
frstor
mov
cmp
arpl
xchg
scas
xor
sub
aaa
movs
into
sbb
mov
stos
nop
movs
and
mov
aad
test
adc
mov
add
inc
or
mov
push
imul
push
outs
(bad)
jecxz
movs
push
push
jo
xchg
add
dec
dec
pop
mov
lock
and
mov
(bad)
stc
cmps
cmp
jge
in
push
dec
mov
in
fcompp
das
mov
cmp
or
adc
lea
pop
and
imul
lock
jo
add
cmp
daa
jmp
inc
adc
add
xchg
add
adc
retf
fld
dec
loop
test
inc
inc
(bad)
rcr
or
cmp
inc
fld
add
or
js
sahf
dec
movs
or
mov
bound
and
in
and
(bad)
adc
dec
mov
mov
mov
inc
jg
and
or
push
pop
or
cdq
adc
pop
mov
cmp
dec
mov
iret
cli
aas
sub
sub
mov
pop
inc
gs
(bad)
dec
and
lds
adc
jb
sub
cmp
push
xchg
add
xor
jmp
xor
ins
pop
daa
shr
add
sbb
xor
std
std
xor
dec
mov
movs
stos
or
push
sbb
push
stos
and
and
test
cs
xchg
push
sar
cmp
and
(bad)
xor
cmp
push
xor
or
popf
and
outs
mov
fs
stos
dec
out
int3
aad
div
push
rcl
das
add
pusha
lds
into
and
xchg
jg
mov
rcr
push
mov
ins
das
adc
xchg
adc
and
fcomi
pop
sub
add
aad
mov
dec
mul
cmp
mov
sbb
test
cmp
les
mov
not
outs
cmp
les
fild
in
ins
ror
or
stc
sbb
mov
push
cmps
arpl
sbb
inc
cwde
push
jns
sahf
leave
mov
pop
push
jl
bound
fadd
or
dec
dec
jns
es
ret
mov
inc
cmp
adc
add
add
daa
pop
(bad)
mov
imul
jne
aaa
outs
jns
xor
outs
in
pusha
add
shld
ss
dec
push
push
or
pop
inc
lahf
pop
je
mov
movs
jmp
inc
add
imul
jmp
std
mov
cmp
push
sbb
dec
enter
inc
sti
(bad)
pop
mov
(bad)
push
adc
xlat
add
xchg
fst
mov
sub
pop
mov
arpl
call
je
and
lea
sub
or
mov
xor
mov
dec
dec
push
jmp
mov
ret
adc
push
add
push
data16
push
push
jmp
and
add
add
mov
mov
jg
sbb
popa
pop
xlat
mov
jecxz
or
sub
pop
fbld
movs
popf
xlat
add
ins
test
cmp
in
test
bound
not
adc
pop
pop
lahf
mov
adc
fistp
sbb
in
loope
adc
push
adc
pop
jmp
pop
or
inc
or
inc
inc
push
adc
or
mov
cdq
jg
adc
sub
leave
fcom
cmp
out
xchg
push
into
pop
je
inc
pop
sub
rcr
inc
xchg
movs
iret
pop
and
stos
es
inc
sub
mov
pop
or
shl
cmp
xchg
or
(bad)
pop
push
mov
lahf
mov
bound
push
sbb
nop
mov
inc
mov
mov
mov
cmps
bsr
xor
outs
mov
mov
fldenv
cmp
fisttp
mov
nop
inc
mov
popa
xrstors
cmp
push
or
adc
out
add
and
shl
pop
xchg
push
nop
pusha
ja
or
(bad)
mov
aaa
add
fs
jno
sbb
add
pushf
nop
xlat
nop
mov
mov
xchg
sub
inc
outs
fwait
out
xchg
jle
dec
repnz
xor
sub
xor
call
cmp
or
and
and
inc
jbe
daa
push
add
dec
add
inc
jecxz
ret
enter
fist
and
dec
loopne
in
inc
dec
mov
xor
inc
xor
xchg
stos
xlat
cmps
and
cmp
sbb
ss
mov
inc
das
add
sbb
xor
cmp
push
sbb
or
outs
mov
movs
push
mov
push
cmp
adc
daa
fs
arpl
mov
push
sbb
(bad)
sbb
xchg
mov
shr
push
scas
pop
add
sbb
ret
add
add
mov
dec
cmp
push
mov
inc
sub
dec
cmp
or
add
sbb
ins
jo
jbe
je
mov
fiadd
pop
fistp
pusha
inc
ret
add
or
pop
or
jmp
push
scas
rol
add
das
mov
mov
lods
pop
or
jecxz
fcom
jmp
retf
pop
dec
ds
cmps
mov
xor
pop
nop
jb
movups
mov
or
jnp
pop
fstp
and
pusha
dec
fldcw
sub
push
or
mov
mov
daa
or
xchg
in
or
cs
aam
mov
out
mov
shl
rcl
movs
jle
(bad)
repnz
or
jmp
test
in
inc
ret
mov
jno
mov
mov
inc
inc
cmp
fucomp
xchg
jno
add
push
and
inc
mov
mov
xchg
loope
adc
pop
dec
icebp
add
and
test
add
inc
pop
fcmovnb
movs
cmp
and
pop
retf
sbb
pop
xor
mov
dec
or
pop
pop
and
stc
test
pusha
mov
pop
pop
xor
movs
cs
push
aas
(bad)
movsx
pop
jne
mov
sbb
xchg
add
idiv
jmp
popa
rcl
mov
add
xor
dec
call
ja
bound
push
pop
call
mov
jnp
test
push
daa
aad
pusha
push
jl
retf
mov
aad
adc
add
xor
dec
bound
inc
and
adc
add
fnstenv
mov
nop
add
jge
daa
pusha
pop
les
jg
jno
test
cmp
stos
loope
lock
daa
lea
push
push
sub
cmp
jo
scas
sbb
cmp
mov
movs
push
mov
add
fistp
or
mov
jne
addr16
scas
and
or
scas
pop
(bad)
popa
sti
nop
fadd
cmp
or
out
cmp
leave
xchg
out
jl
mov
sbb
aas
push
cmp
or
popf
std
inc
mov
pop
imul
or
add
cmp
(bad)
sar
arpl
add
add
push
data16
push
ret
pop
sti
test
scas
ficomp
xor
gs
sahf
jns
and
xchg
pop
xchg
imul
cmp
cmps
push
ins
xchg
inc
pop
int3
push
or
int3
nop
lods
add
jno
cmp
inc
or
add
cmps
test
adc
dec
inc
data16
jnp
and
sub
sar
mov
(bad)
pop
aam
and
test
xor
(bad)
imul
or
popa
repz
and
pop
out
push
fisttp
repz
jmp
sub
or
mov
mov
popa
(bad)
xor
gs
jp
je
rol
xor
push
sub
or
push
push
popf
sbb
loope
vcvtsd2ss
sub
retf
dec
aam
dec
add
xor
add
sub
jo
movs
shl
fiadd
or
test
cmp
add
mov
mov
mov
mov
and
enter
xchg
inc
loop
inc
or
dec
enter
adc
push
inc
sbb
inc
sbb
ret
retf
push
mov
cmps
jae
mov
stos
cmp
mov
and
fwait
mov
xchg
sub
inc
or
cwde
jnp
or
movaps
xor
mov
adc
add
or
add
nop
adc
and
dec
push
sbb
adc
sub
add
and
adc
enter
add
imul
and
test
pop
and
mov
sub
adc
jns
adc
jmp
cmp
lock
push
adc
inc
icebp
or
ficom
mov
pop
loop
push
cmp
adc
xor
pop
or
ja
and
imul
sbb
je
inc
sbb
loop
aam
xor
(bad)
ror
ret
mov
sbb
pusha
fwait
sub
inc
leave
inc
ret
sbb
sbb
mov
inc
dec
je
test
jns
mov
xchg
fadd
jle
pop
dec
push
sbb
jmp
jmp
mov
leave
and
sbb
bound
xchg
in
cld
sbb
sub
fcom
or
sub
sub
daa
sub
jle
and
xchg
es
sub
add
movs
stc
xor
jp
push
fiadd
push
sbb
xchg
loopne
cmc
scas
mov
std
dec
push
jnp
push
xor
nop
sub
enter
(bad)
push
mov
aam
es
mov
shl
add
ror
jo
xchg
mov
xchg
lea
and
cmps
mov
stc
in
jl
mov
mov
xor
add
lods
cmp
out
or
aad
lock
rcl
add
mov
push
adc
xchg
add
jne
pop
sar
(bad)
stc
ret
pop
das
push
cmp
cmp
jb
je
xor
and
(bad)
mov
and
mov
or
mov
xchg
mov
or
push
mov
pop
xor
jmp
cmp
test
loope
mov
push
out
sub
push
pop
jecxz
pop
pop
cld
inc
jp
adc
and
fdiv
pop
ins
rcl
inc
jnp
inc
pop
inc
fdiv
or
cmp
jmp
cmp
add
pusha
fisttp
je
ins
xchg
call
popw
std
and
add
sbb
pop
mov
out
xor
cwde
sbb
jmp
push
aad
adc
dec
(bad)
or
mov
ins
js
xchg
dec
mov
add
pop
mov
lock
dec
mov
or
inc
pusha
jns
xor
mov
push
cmp
clc
jbe
adc
outs
aam
ret
fwait
cmp
mov
fidiv
add
sub
pop
xchg
movs
add
push
xor
mov
xchg
mov
pop
and
mov
pop
and
adc
ret
in
inc
aam
loope
xchg
inc
mov
xor
push
add
repz
scas
rcl
mov
xchg
jo
out
mov
stos
lods
adc
imul
cmp
mov
nop
bswap
dec
in
mov
and
pop
push
add
adc
mov
jge
pop
adc
mov
movs
mov
pop
mov
xor
lahf
popa
or
loopne
cmps
fldenv
je
test
int3
aam
or
or
fldenv
and
pop
pop
icebp
pop
or
arpl
neg
ss
pop
sub
mov
dec
or
inc
add
dec
mov
dec
cmc
or
sub
je
adc
pop
push
sub
pop
jge
sbb
ja
std
fnstsw
jne
stc
or
push
push
mov
add
lock
pop
sub
push
and
test
cmps
xchg
inc
xor
sahf
xchg
and
xor
sub
adc
cmp
test
cmp
in
adc
sub
sub
out
es
sub
mov
add
fiadd
mov
cwde
sbb
xchg
fdivr
cdq
mov
jb
(bad)
stos
test
xlat
repz
mov
sahf
sub
call
(bad)
mov
(bad)
imul
add
push
jmp
push
xlat
aaa
pop
mov
add
ins
sub
adc
fstp
fwait
inc
pushf
sbb
les
jb
mov
and
stmxcsr
arpl
push
xchg
push
sub
or
mov
adc
sahf
test
mov
push
push
fbstp
inc
sub
in
ss
add
cmp
(bad)
sub
mov
or
ret
and
dec
ret
inc
pop
mov
inc
push
mov
add
out
xor
jo
adc
xchg
or
jb
pushf
test
mov
jmp
xor
xor
sbb
xchg
adc
jmp
out
lods
movs
aad
inc
sub
test
cmp
popf
sub
adc
sbb
and
mov
fstp
cli
inc
call
(bad)
fild
jns
inc
mov
jb
push
push
cdq
or
sbb
inc
inc
leave
mov
addr16
in
mov
add
and
ins
jo
sbb
and
fcom
push
adc
mov
or
(bad)
repz
add
sub
xchg
sub
rol
outs
cmps
dec
rol
mov
test
mov
aad
and
add
mov
test
jne
es
push
test
pop
test
jbe
dec
adc
aam
xor
cmp
inc
push
sbb
pop
sbb
icebp
shr
cmps
shr
add
or
push
adc
fadd
add
shr
cmp
mov
cwde
ret
xor
inc
push
jle
or
pop
popf
or
sub
pushf
mov
pop
add
adc
cwde
mov
push
aas
adc
in
inc
fist
and
repnz
adc
jmp
pop
hlt
sbb
push
cdq
lds
mov
shl
sbb
adc
xchg
enter
sub
inc
in
sbb
imul
add
in
push
adc
sbb
xor
cmp
ins
and
fiadd
add
xchg
imul
adc
jl
xor
push
mov
movs
sub
jle
sti
lock
push
sub
icebp
aaa
cmp
call
mov
xor
(bad)
fdivr
aas
push
add
add
dec
cmps
test
or
mov
bound
cmp
mov
push
push
push
add
in
and
enter
add
arpl
mov
cld
aad
sub
jne
push
mov
mov
xor
call
mov
push
cmp
adc
gs
jns
lds
add
and
ins
inc
dec
add
aaa
fs
dec
jb
inc
hlt
hlt
fucomp
sub
cld
mov
dec
inc
in
adc
fld
sub
fcmovnb
je
in
pop
inc
inc
and
xchg
cmp
dec
(bad)
fwait
ja
adc
or
push
adc
or
mov
mov
pop
ret
add
push
adc
mov
pop
(bad)
push
or
mov
enter
adc
(bad)
sub
sub
(bad)
std
cmp
je
mov
das
mov
pop
and
outs
test
jge
adc
and
adc
xchg
mov
and
sub
imul
lods
pop
xchg
mov
mov
test
push
xchg
adc
lea
and
js
xchg
pop
or
dec
add
cwde
mov
add
gs
sbb
dec
ja
aad
or
in
adc
push
inc
mov
fcmovne
sbb
sbb
fsubr
daa
xor
cmp
popf
inc
jl
fdivr
clc
inc
nop
or
cmp
je
mov
aaa
and
adc
ret
inc
sub
je
ret
dec
add
das
out
inc
add
jge
push
imul
add
lea
aaa
scas
das
ins
pop
jb
xchg
and
dec
loope
mov
ret
ss
mov
pop
adc
dec
sub
sbb
daa
push
xchg
mov
xor
push
xor
shl
dec
loopne
push
push
jl
push
pop
or
or
sti
iret
mov
xchg
jg
mov
jge
cmp
dec
or
sbb
stc
fs
sub
cmp
mov
adc
adc
lock
or
(bad)
jp
mov
cmp
mov
mov
xchg
fs
or
adc
call
sub
jbe
pop
clc
mov
in
mov
mov
repz
adc
das
jl
mov
in
adc
xor
cwde
add
sbb
imul
cmps
jo
jno
es
mov
add
jno
adc
add
imul
pop
push
add
inc
cmp
dec
and
(bad)
rol
adc
mov
add
sbb
retf
bnd
repnz
adc
imul
or
add
mov
or
xor
lods
cmp
xchg
or
adc
mov
push
and
lea
leave
sbb
sar
add
in
icebp
add
daa
jb
loopne
inc
jno
jb
cwde
xchg
jl
add
shl
and
or
adc
das
push
ret
inc
inc
cmps
pop
xchg
lock
add
lea
and
push
ret
fimul
sbb
int3
sbb
adc
dec
mov
pushf
and
adc
mov
push
pop
ins
mov
test
and
or
add
outs
fldcw
mov
sbb
pop
mov
xor
xchg
pop
mov
xor
div
cmp
dec
pop
inc
pop
xchg
pop
jo
sub
dec
pop
je
cmp
dec
push
mov
loopne
leave
mov
ror
add
add
sbb
dec
sub
rol
xor
cdq
cmp
push
mov
movs
movs
je
mov
imul
and
cmp
dec
loop
pop
bnd
dec
ror
clc
mov
inc
inc
dec
or
jb
iret
shl
jbe
mov
add
or
jo
or
xchg
mov
mov
(bad)
sub
in
xchg
cmps
or
pusha
inc
sbb
fstp
or
and
psubusb
add
fwait
dec
add
outs
shl
xor
add
jl
xchg
pop
cli
inc
daa
inc
add
sbb
inc
push
aaa
mov
aas
pop
push
jne
inc
sbb
daa
lahf
add
cdq
pop
lods
mov
push
js
aaa
out
add
dec
mov
cmp
inc
xor
jmp
sbb
imul
ror
ret
or
ret
in
pusha
xchg
aam
jbe
push
or
jbe
mov
sub
push
rol
mov
cmp
mov
or
add
pop
in
ret
pop
add
mov
adc
dec
test
mov
push
fucomip
shl
jnp
or
inc
mov
add
mov
int3
adc
cmp
inc
or
pusha
cmp
xchg
mov
or
cmp
fwait
popa
test
or
inc
clc
push
inc
popf
test
or
mov
cmp
and
and
and
pop
jnp
clc
out
aad
les
loop
and
cdq
addr16
or
or
add
ins
and
dec
sbb
jne
lds
jbe
in
and
(bad)
push
inc
imul
add
xchg
push
jmp
sbb
mov
adc
sub
mov
or
pop
adc
retf
or
rol
cmc
add
push
pop
mov
mov
push
lea
jmp
inc
rcr
jle
mov
xor
shr
xchg
psubusw
ror
dec
lods
xor
dec
or
xor
adc
mov
add
scas
cwde
adc
pop
inc
mov
add
nop
jmp
(bad)
or
sub
xor
clc
xor
add
jecxz
add
or
dec
dec
sahf
inc
cmp
add
mov
js
and
or
enter
pushf
adc
sbb
adc
dec
cmovae
lea
inc
shl
mov
lock
mov
fs
or
bound
sbb
or
dec
adc
mov
xlat
pop
(bad)
cmp
pusha
add
pop
adc
xor
xchg
je
fdiv
imul
fmulp
sub
and
sub
sub
adc
and
pusha
(bad)
shl
and
ret
sub
add
dec
adc
ret
adc
enter
call
arpl
add
cmp
js
imul
cmps
add
movs
rcl
scas
loope
xor
loopne
pop
in
in
sar
jle
and
add
sbb
loope
call
repnz
inc
int3
lds
cmps
and
enter
push
imul
cmp
adc
test
cmp
call
or
in
jl
and
fldcw
mov
inc
push
lahf
mov
or
fdiv
les
cmp
imul
mov
dec
aam
fnstsw
sbb
repz
aam
mov
lods
cmp
jmp
fcmovnu
cld
push
add
or
call
data16
lock
popa
sbb
lock
in
aaa
push
in
lods
jl
setl
pop
jp
jp
(bad)
in
test
fcmovnu
pop
not
rcl
mov
add
mov
and
ret
or
ret
sub
(bad)
pop
sti
in
jmp
push
loopne
mov
cmp
jl
(bad)
push
fiadd
in
push
push
sbb
loope
or
inc
xchg
xor
je
sahf
arpl
scas
repz
add
push
xor
adc
inc
sbb
cmp
mov
push
out
and
add
pusha
pop
test
mov
sbb
in
into
ret
daa
(bad)
(bad)
loopne
push
add
out
jne
adc
sahf
sbb
jmp
inc
mov
cmp
jmp
pusha
pop
mov
leave
mov
ficom
movs
dec
cmps
mov
adc
xor
dec
sub
pop
jb
pop
push
xor
adc
and
push
sub
dec
enter
mov
sub
push
int
jl
and
in
das
or
xlat
rcr
je
(bad)
sub
and
(bad)
ja
and
mov
rep
jg
push
and
xchg
inc
xchg
in
loopne
or
mov
adc
retf
jbe
pop
sub
jbe
sbb
inc
nop
xchg
cmps
sbb
shl
inc
add
push
bound
cmp
xor
and
(bad)
jl
mov
dec
add
jo
imul
sub
out
jecxz
sbb
fwait
add
test
or
(bad)
popa
rol
pop
clc
xchg
xor
and
ret
pop
dec
inc
pop
neg
rol
mov
ins
sbb
sbb
out
inc
retf
fistp
dec
clc
inc
ss
aaa
mov
sahf
xchg
nop
or
je
add
mov
add
adc
out
repnz
xor
inc
add
sbb
maxps
jecxz
or
popa
sbb
add
add
retf
or
test
or
dec
fwait
or
or
or
lods
xchg
adc
mov
adc
int3
(bad)
mov
and
jmp
mov
nop
or
aaa
shl
pop
jmp
js
push
xor
inc
cmp
popf
cmp
and
cmp
retf
push
jo
cmp
in
fist
push
fist
ret
ins
or
je
retf
and
pop
push
sbb
daa
xor
js
js
xchg
mov
repz
ja
dec
cmc
jo
or
mov
fwait
jns
sbb
out
inc
push
nop
sbb
dec
fmul
lea
xor
cmp
and
xchg
add
js
jae
adc
adc
cmc
add
dec
fstp
or
minps
ja
lahf
fimul
mov
pusha
jb
dec
sbb
icebp
jne
push
and
xchg
and
push
pop
jmp
jno
jb
loope
movs
bound
jg
pop
dec
popa
pushf
adc
enter
sub
adc
jmp
push
xchg
les
adc
mov
or
xor
out
loopne
mov
inc
imul
arpl
push
loopne
loope
push
mov
cli
sub
mov
int
fidiv
in
sbb
(bad)
lock
add
push
mov
cmp
mov
mov
ins
test
fidivr
inc
mov
add
add
shl
xor
rcl
imul
dec
or
test
ret
loope
mov
cmp
mov
fnstenv
push
mov
(bad)
pusha
xchg
lahf
imul
lea
shr
sub
ret
sub
jl
adc
and
add
out
dec
push
jge
in
loopne
xlat
inc
inc
fadd
adc
mov
popa
mov
mov
pop
and
xchg
sti
idiv
sar
sar
add
shr
mov
add
mov
fstp
pop
mov
push
jmp
scas
mov
ret
or
sub
lock
and
test
adc
movs
mov
fist
xchg
fsub
push
(bad)
out
mov
jp
mov
inc
xchg
or
sub
xor
sub
adc
and
mov
aam
add
movs
or
dec
mov
add
adc
push
cmps
pop
fwait
int
lods
(bad)
mov
hlt
mov
mov
retf
nop
or
test
ja
lods
nop
setnp
push
inc
xchg
xchg
jo
jbe
inc
xlat
add
push
mov
in
sub
cmp
adc
cmp
add
retf
rol
retf
inc
and
js
sbb
aas
rcr
or
jne
push
(bad)
mov
add
pop
pop
and
add
adc
pop
mov
pop
or
ins
test
(bad)
jecxz
add
pop
fistp
or
(bad)
in
xchg
ins
sub
add
or
aaa
or
and
mov
cmp
adc
in
out
addr16
add
adc
push
dec
or
outs
inc
or
test
mov
and
retf
les
push
jne
inc
jp
rcl
mov
gs
sub
or
xchg
mov
push
mov
push
pop
jo
dec
je
xchg
test
call
mul
cmp
mov
popf
das
xchg
ret
mov
fwait
(bad)
ret
test
xchg
jmp
int
sbb
scas
adc
pop
outs
imul
imul
adc
jbe
xchg
stc
not
fidiv
lea
cwde
sbb
ins
xor
mov
mov
add
push
hlt
lock
pop
lahf
jle
sub
test
mov
cmp
inc
xchg
mov
xchg
jp
inc
pusha
call
cmp
(bad)
ficomp
add
push
add
add
dec
or
mov
push
sbb
adc
pushf
dec
ret
inc
(bad)
or
pop
push
xchg
push
xchg
or
mov
xchg
or
and
mov
push
adc
push
daa
jo
adc
in
repnz
and
dec
ret
xor
ficomp
sbb
pop
hlt
sbb
xlat
push
adc
jp
add
lods
add
and
outs
adc
jne
inc
mov
ret
push
xchg
pop
xchg
jecxz
out
sbb
and
pop
inc
or
inc
inc
adc
mov
adc
or
sbb
js
dec
xchg
inc
adc
ja
cmps
xchg
add
out
jl
xor
or
add
mov
loope
or
call
aaa
lods
nop
jb
movs
sub
xor
mov
imul
mov
pop
fs
scas
imul
sbb
ret
fsubr
sub
add
jmp
test
add
mov
rol
jne
lods
xchg
mov
mov
int3
lds
mov
in
arpl
add
dec
push
add
icebp
adc
push
rol
inc
arpl
adc
add
out
mov
sub
mov
mov
sbb
and
dec
xchg
popf
(bad)
sub
(bad)
cmp
add
adc
sub
dec
int3
adc
inc
out
xchg
adc
mov
frstor
pop
adc
loopne
add
or
sub
or
mov
mov
pop
movs
mov
or
je
jnp
add
imul
push
jnp
sbb
or
jae
mov
cld
cmp
jne
mov
in
scas
mov
nop
xor
test
mov
mov
sub
dec
test
pop
push
mov
outs
iret
fdiv
adc
enter
nop
xor
sub
xchg
lahf
cmc
jge
xor
aaa
dec
lock
and
and
test
push
push
push
push
fs
dec
shr
xchg
add
sub
or
sbb
mov
xchg
adc
xor
mov
xor
(bad)
mov
cmp
mov
adc
out
or
mov
and
(bad)
std
pop
xchg
jecxz
inc
mov
mov
or
pop
push
jmp
daa
sbb
cld
in
ja
movs
inc
sbb
jmp
sub
mov
pop
pop
fmul
pop
ja
ins
fadd
xchg
add
cmp
jae
inc
or
dec
or
in
rcr
xor
add
ss
sub
imul
add
into
sub
push
(bad)
in
lea
sbb
inc
pusha
sbb
out
iret
es
push
jmp
call
inc
mov
inc
inc
push
push
cmps
sub
xor
xor
dec
xor
push
mov
cmp
and
mov
je
mov
ss
out
or
data16
cmps
xor
(bad)
inc
ins
jmp
cli
xor
add
inc
pop
dec
mov
lods
xchg
aas
into
jecxz
ret
cmp
or
rcl
ret
ins
push
fmul
out
xchg
xor
dec
add
js
xor
push
cmp
movs
in
adc
pop
sub
xlat
xor
adc
xchg
mov
xor
inc
scas
in
mov
inc
or
push
shr
aas
mov
ficom
test
sbb
jmp
adc
dec
loopne
pop
hlt
enter
or
add
and
xchg
adc
nop
imul
and
cmp
jae
dec
mov
cwde
je
mov
fldenv
adc
mov
dec
cmp
and
lock
adc
add
int
cmp
xor
int
mov
or
xor
icebp
dec
dec
dec
push
xchg
push
dec
dec
or
fs
nop
or
enter
(bad)
push
nop
xchg
cmp
mov
out
add
and
clc
jge
adc
xchg
in
retf
xor
arpl
ja
and
loop
lods
add
les
add
imul
and
bound
and
inc
icebp
mov
add
add
sbb
add
add
adc
add
pusha
inc
xchg
inc
adc
jle
add
or
add
dec
adc
ret
(bad)
clc
and
mov
and
and
cmp
hlt
dec
jge
cmps
push
test
mov
push
jmp
push
and
pop
cmp
(bad)
fcmovu
sub
adc
add
jno
dec
sbb
mov
adc
movups
ja
movs
in
sbb
dec
adc
es
add
ins
mov
jecxz
add
cmp
pop
aad
in
xor
fadd
jmp
push
loopne
aam
cmp
jo
lods
mov
call
or
rcl
jg
add
or
je
push
aad
inc
mov
xor
mov
jmp
jo
pop
mov
hlt
sub
pop
add
adc
adc
inc
in
add
pop
add
mov
ds
push
or
cmp
jne
adc
xchg
and
(bad)
adc
xor
cdq
sbb
push
adc
and
inc
mov
cmp
ret
imul
retf
push
sbb
gs
in
sbb
mov
xchg
ins
mov
lods
aas
addr16
adc
mov
es
mov
(bad)
inc
pop
(bad)
into
inc
add
mov
mov
xor
jbe
jo
mov
adc
sbb
and
pop
mov
add
inc
or
jbe
cmp
jbe
jbe
ss
xchg
dec
mov
rol
mov
and
ret
pusha
or
xor
pop
jbe
add
shl
and
call
jbe
xchg
pop
xor
xchg
sbb
or
xchg
or
es
jbe
pushf
xchg
or
adc
add
add
cwde
es
and
cmp
inc
sub
and
add
icebp
mov
or
inc
adc
mov
pop
aam
adc
and
ss
or
ss
or
xchg
and
add
xor
jns
or
call
pop
pop
ja
mov
mov
and
or
add
inc
sahf
fnstsw
add
add
and
xor
dec
mov
or
push
add
lahf
or
mov
and
jae
inc
in
mov
push
dec
stos
inc
scas
cmp
or
xor
in
or
push
sub
sub
js
mov
mov
pop
mov
adc
aaa
sub
cld
fst
ficom
mov
xchg
pop
push
add
std
dec
test
popa
jmp
imul
add
sbb
xchg
sub
push
lds
mov
punpckhwd
hlt
retf
pcmpgtb
pop
inc
sub
pop
ror
sbb
jno
mov
or
sub
ret
pop
and
inc
and
outs
jo
xchg
popa
add
outs
jle
in
jnp
dec
jbe
mov
adc
call
or
jno
and
xchg
pushf
(bad)
sub
cmp
pop
out
lahf
inc
add
adc
and
mov
push
daa
dec
adc
mov
mov
fs
cwde
popa
inc
bound
sbb
add
lock
dec
push
dec
test
xor
xchg
(bad)
neg
push
add
push
mov
fwait
rcl
ss
add
inc
cmp
shl
test
dec
or
rcr
push
or
adc
aaa
jg
inc
jo
or
fst
push
adc
xchg
or
repz
jno
mov
(bad)
cmp
xlat
call
imul
mov
out
pop
sub
add
or
or
cmp
dec
ror
or
sti
push
jle
and
sar
test
dec
fdiv
mov
cmp
sti
jle
call
xchg
xlat
mov
add
jg
or
je
xor
adc
sti
cmp
or
or
enter
rcr
add
xor
pop
pop
sbb
mov
adc
leave
cmp
jle
xor
ret
xor
pop
cld
xor
jmp
adc
mov
push
sub
mov
sbb
and
sbb
call
movs
shl
std
cmp
shl
enter
push
mov
pop
jp
js
add
arpl
adc
and
sub
jb
inc
and
aas
hlt
pop
outs
sbb
mov
leave
test
inc
ror
inc
add
xchg
(bad)
in
xchg
loopne
sbb
add
pop
mov
inc
out
dec
dec
and
sub
fst
mov
jb
cld
pop
pop
jge
jecxz
cmp
dec
add
les
mov
sbb
xchg
(bad)
mov
adc
push
cwde
fmul
and
add
pop
mov
and
or
sub
cmps
dec
sub
pop
aaa
mov
call
test
mov
add
or
pusha
add
fisubr
cmp
mov
mov
enter
psubb
pop
xor
push
add
iret
pusha
fidiv
cmp
fs
jo
enter
stc
mov
push
add
pushf
add
cmp
adc
out
add
ja
pop
or
shr
mov
cld
lods
add
fst
dec
dec
clc
cmp
sbb
or
or
dec
movs
xor
dec
(bad)
xchg
xchg
(bad)
mov
add
xor
popf
sbb
popf
int
adc
xchg
inc
pop
push
adc
dec
mov
outs
cmp
sti
adc
or
adc
inc
inc
cmp
mov
int
scas
and
mov
inc
daa
shl
mov
adc
pop
lahf
jae
mov
rol
(bad)
and
jb
push
inc
(bad)
stos
fst
mov
(bad)
fs
xchg
add
add
inc
add
retf
repz
cmps
retf
xor
xor
push
shl
in
sbb
shl
sbb
inc
fdivr
inc
int
mov
jmp
or
and
lds
push
jbe
push
push
mov
pop
xor
dec
jmp
hlt
enter
push
and
test
dec
das
loope
aad
mov
adc
vhaddps
add
xchg
inc
sub
loopne
pop
xchg
or
(bad)
test
ror
mov
sbb
movs
nop
(bad)
mov
out
std
test
cli
cld
add
and
mov
frstor
mov
jl
ret
cmp
mov
xor
test
mov
js
lock
push
loopne
mov
pop
cmp
ins
sbb
add
adc
rcr
jle
add
mov
in
inc
outs
adc
inc
cmps
retf
cmps
pop
add
pushf
xor
cmp
jns
mov
shl
jno
les
sbb
test
mov
mov
jb
push
and
addr16
sbb
inc
inc
adc
sbb
inc
or
sbb
xor
stos
loopne
xchg
lock
xor
and
fs
les
pop
sbb
xor
jge
scas
pop
inc
cs
std
push
push
ret
scas
inc
scas
shl
jle
ss
add
add
cmp
inc
shl
inc
xchg
inc
jl
bound
idiv
nop
lock
mov
ss
lahf
cwde
test
or
sbb
adc
or
outs
push
inc
jae
out
xor
lea
mov
dec
cmp
xchg
test
sub
or
add
sub
aas
add
xchg
pusha
mov
cmp
xor
xchg
mov
jmp
push
dec
push
call
pop
test
mov
stc
xor
mov
lea
xchg
adc
jae
mov
pop
add
mov
cdq
push
and
ja
call
aaa
or
imul
jbe
jge
stos
and
sar
mov
out
and
xchg
pop
les
cld
mov
jge
cmc
inc
sti
sub
sbb
sbb
ret
and
xchg
ja
mov
mov
adc
pop
push
and
loop
arpl
push
or
adc
or
test
dec
jb
fcomp
lock
int3
sub
pop
mov
fdiv
fiadd
mov
loopne
jo
ret
in
sbb
inc
jno
mov
jnp
sub
inc
add
jmp
pop
or
in
inc
dec
and
ss
push
push
gs
(bad)
leave
ret
or
push
test
fcmovnb
add
imul
clc
xor
adc
popa
push
pop
add
cmp
jo
inc
fdivr
and
pop
clc
xchg
mov
bound
jl
add
jno
inc
mov
or
inc
and
xchg
adc
fisttp
das
or
cwde
or
clc
push
fdivr
lock
adc
add
add
pop
mov
cdq
add
mov
sbb
dec
cdq
clc
push
mov
inc
sbb
adc
mov
ds
jle
dec
enter
mov
xchg
add
mov
xor
les
mov
dec
jle
aam
jge
ja
push
ds
cmp
test
xor
push
enter
movs
aad
in
loop
push
adc
jg
clc
dec
or
ja
inc
push
push
dec
sbb
xor
popa
and
rol
lock
in
js
outs
lods
pop
pop
inc
inc
mov
inc
pop
push
emms
cmps
add
pop
sub
adc
iret
inc
std
loope
sbb
(bad)
dec
mov
push
jmp
dec
lock
jmp
adc
inc
or
aam
adc
movs
add
stos
rol
xchg
adc
dec
inc
push
push
xchg
xor
jb
or
inc
inc
jecxz
(bad)
mov
test
jmp
adc
pop
sbb
in
sub
addr16
in
es
mov
and
xchg
mov
cld
add
in
stc
inc
mov
xchg
pop
retf
rcr
mov
mov
jmp
call
add
mov
cwde
xchg
or
mov
jl
adc
test
std
sbb
popa
outs
dec
cmp
adc
aaa
pop
xor
idiv
add
adc
or
dec
inc
mov
inc
sbb
mov
cmp
sub
aas
adc
pop
or
cmp
(bad)
add
push
add
or
aad
pop
add
inc
sbb
pushf
sar
pop
popf
stc
lock
add
test
dec
cmc
adc
pushf
add
push
enter
cmp
or
(bad)
sti
add
scas
mov
xchg
push
adc
cmps
or
xchg
jmp
add
jnp
stc
icebp
enter
adc
or
test
nop
mov
and
push
dec
push
mov
stc
sbb
enter
or
rol
dec
in
mov
cmps
adc
pop
test
adc
push
mov
push
adc
scas
fwait
add
adc
retf
call
mov
sbb
or
inc
movs
xor
mov
xlat
cwde
cwde
add
sub
or
cmp
lea
ja
jmp
loopne
mov
test
fld
arpl
xlat
leave
inc
ret
push
sub
add
fxch
je
in
push
dec
lahf
dec
sbb
test
jno
push
mov
xchg
popa
sub
movs
xlat
mov
movs
sub
xor
xchg
or
test
addr16
sahf
fld
sbb
mov
sbb
in
push
push
mov
shl
movs
movs
retf
ror
cwde
mov
int3
lock
mov
imul
dec
adc
add
mov
out
fiadd
push
clc
mov
in
mov
ins
fnstenv
cmp
or
add
mov
enter
dec
lea
jmp
xor
xor
xor
mov
ss
js
or
js
jo
in
sbb
popa
xchg
inc
pop
and
dec
sbb
cwde
pop
mov
adc
and
dec
sbb
and
and
mov
xchg
lea
push
pop
ror
inc
test
jne
sti
js
adc
and
sub
add
and
and
cmp
sub
fmul
je
jg
xor
jmp
cmp
sbb
xor
test
adc
dec
mov
mov
and
push
ins
adc
scas
and
(bad)
out
and
pop
push
xchg
xchg
xor
retf
inc
sub
sub
(bad)
lock
outs
pop
aad
jmp
xchg
mov
pop
out
out
pop
lea
xor
or
or
push
mov
add
xchg
das
push
or
enter
pop
push
dec
adc
jno
sahf
and
and
inc
jb
fist
inc
call
or
mov
and
jg
nop
je
test
(bad)
test
jg
lock
xchg
je
lods
push
add
loopne
aam
clc
mov
mov
sbb
movs
ins
and
xchg
dec
sub
push
cmp
inc
enter
push
cmps
call
mov
ins
in
aam
out
pop
xor
add
mov
and
aas
int3
push
xlat
cmp
je
icebp
sub
lock
dec
test
arpl
les
mov
jmp
push
push
stos
inc
dec
aam
push
add
pop
loopne
or
pop
sub
je
arpl
mov
xor
cmp
sub
mov
cmp
jp
in
adc
stos
jmp
adc
fdiv
std
fistp
cwde
popa
inc
adc
push
rcr
mul
or
dec
dec
dec
(bad)
mov
mov
cld
add
mov
xor
mov
pop
push
pusha
hlt
inc
jo
stc
pop
xor
nop
lahf
pop
imul
push
or
fist
mov
add
adc
outs
cmc
int3
sub
sub
or
adc
shl
pop
cmp
inc
loope
xor
dec
mov
popa
sub
adc
and
push
or
aam
cmps
dec
xor
mov
aad
or
rcr
adc
adc
leave
and
mov
cmp
shr
xchg
or
mov
sbb
jmp
loopne
jmp
ja
mov
and
out
xor
adc
push
popa
mov
pushf
adc
and
outs
inc
clc
mov
scas
xchg
xchg
or
mov
movs
icebp
or
lock
leave
dec
ins
jbe
or
lods
fcmovnu
fldcw
aad
clc
push
sbb
pop
aam
jno
push
lock
test
adc
add
cwde
(bad)
cmp
or
xchg
inc
xchg
sbb
lea
dec
add
push
cmp
stos
push
mov
add
add
sub
test
push
add
test
int3
bound
test
add
mov
inc
nop
add
outs
inc
nop
cmp
cdq
idiv
xor
adc
push
shl
rcl
or
jmp
outs
add
pop
test
adc
push
jo
setbe
popf
mov
inc
mov
call
adc
pop
ins
popa
sbb
add
xor
and
jmp
pop
iret
add
mov
push
repz
shl
ins
add
or
cmp
or
adc
xor
les
and
add
out
or
nop
pop
or
xchg
cmc
xchg
pop
nop
(bad)
jb
test
das
sbb
inc
push
inc
sub
jl
pop
rcr
inc
inc
js
int
jb
and
or
out
or
push
pop
or
sub
in
loope
cmp
fs
and
push
rol
adc
outs
dec
shr
das
(bad)
cmp
fs
mov
mov
into
add
or
inc
or
pop
inc
mov
hlt
sbb
add
mov
xchg
movs
or
popa
xchg
add
mov
sbb
pusha
push
adc
mov
cs
call
cmp
test
scas
mov
sub
movs
mov
dec
xor
rol
stos
aaa
jmp
lods
je
aaa
inc
imul
cmp
gs
ins
inc
mov
xor
(bad)
cmp
add
and
inc
add
hlt
xor
sub
scas
mov
popf
xchg
dec
jae
adc
xchg
mov
ror
dec
sub
sbb
sub
shl
cmps
jmp
xchg
dec
xchg
dec
out
adc
test
inc
enter
popa
rep
sub
mov
jg
mov
into
sub
cmp
jns
sbb
pop
pop
aam
lahf
ror
dec
cmp
and
(bad)
fiadd
mov
pusha
cs
dec
and
cmp
imul
or
imul
mov
add
add
adc
lea
add
mov
dec
push
loope
or
push
add
clc
or
jg
add
cmp
clc
push
clc
sbb
lahf
or
ret
inc
xchg
daa
in
push
add
xor
add
xor
or
mov
xor
or
int
or
or
jl
jbe
adc
dec
test
sbb
jg
and
(bad)
test
xchg
icebp
jecxz
pop
add
xchg
clc
sub
xchg
ins
pushf
clc
add
shl
cmp
mov
add
and
xor
pop
cmps
add
xor
push
clc
jbe
nop
mov
push
adc
dec
mov
(bad)
sub
(bad)
push
sbb
repnz
jne
ror
not
jmp
dec
daa
mov
or
jb
movsx
or
fwait
xor
jbe
sar
and
inc
pop
mov
or
jl
mov
or
sbb
cmp
adc
mov
lods
mov
cli
fcom
fiadd
rol
xchg
test
xchg
js
jbe
adc
push
add
xchg
dec
sub
(bad)
in
and
outs
adc
and
push
cmp
mul
xchg
xor
xor
les
adc
jp
pop
fwait
mov
mov
xlat
and
adc
pop
sbb
push
add
sbb
(bad)
mov
lea
xlat
arpl
xor
push
std
mov
cmova
and
les
gs
mov
adc
cmps
in
test
mov
je
pop
or
les
or
mov
ret
add
inc
jp
sti
cmps
sub
(bad)
stc
mov
(bad)
out
adc
mov
adc
cwde
jge
adc
xchg
shl
push
inc
cld
mov
push
movs
push
add
add
mov
mov
(bad)
adc
jg
mov
add
cmp
push
sahf
sbb
sbb
and
or
mov
retf
dec
jne
shr
cmp
test
pop
jbe
bound
retf
sub
hlt
outs
adc
mov
les
mov
xor
or
add
inc
add
add
add
add
dec
retf
inc
fnstcw
int3
jb
sbb
add
inc
add
cwde
add
clc
and
out
sbb
mov
(bad)
(bad)
mov
and
xchg
jb
lods
imul
in
gs
mov
pop
(bad)
cmp
or
ja
xor
push
sbb
pop
sub
aad
cwde
clc
icebp
iret
sub
aam
(bad)
jmp
mov
push
pop
add
(bad)
loope
clc
cmp
xchg
loop
mov
iret
dec
pop
icebp
add
js
jne
mov
adc
jne
test
pop
movs
adc
aaa
push
push
stos
mov
dec
lods
push
push
sub
mov
jne
mul
jbe
add
add
mov
dec
xchg
inc
iret
push
or
fisub
rol
leave
dec
cmp
and
inc
dec
inc
inc
xor
xor
popa
jmp
push
add
inc
adc
bound
rcr
(bad)
pop
mul
out
cmp
jle
and
jae
fiadd
or
lahf
ret
add
imul
(bad)
and
add
lds
sti
aas
and
xchg
aam
lea
repnz
adc
jmp
xlat
popa
rol
das
test
or
jno
pop
and
adc
xor
rcl
sub
bswap
mov
sbb
mov
cmps
jle
movs
inc
sub
push
inc
je
ins
adc
addr16
pushw
lea
mov
imul
pop
adc
mov
mov
add
inc
and
loop
outs
cld
arpl
test
sub
add
xor
inc
(bad)
popa
iret
mov
pop
imul
adc
mov
push
sbb
push
xlat
dec
loope
push
pusha
out
push
push
cmp
shl
imul
test
xchg
mov
sbb
sbb
mov
xor
pop
mov
jmp
and
mov
in
pop
xchg
xor
mov
shl
retf
cmps
add
jge
ret
mov
jnp
jp
mov
pop
sub
sub
bnd
pop
inc
xchg
sbb
bound
gs
stos
ret
or
ss
sub
lods
fs
jmp
outs
je
push
lods
and
sub
mov
mov
and
inc
and
clc
iret
iret
push
xor
jmp
push
scas
sub
jmp
jne
adc
pop
jp
dec
nop
imul
or
je
cwde
cmps
ja
jne
add
and
icebp
pop
cmps
mov
add
push
adc
mov
pusha
inc
(bad)
pextrw
je
cmp
or
add
or
ja
add
mov
push
scas
or
inc
add
dec
inc
les
scas
fidiv
stos
push
pop
shl
dec
call
leave
and
push
dec
clc
sbb
add
ins
xor
xor
sub
iret
gs
push
adc
pop
fidiv
add
jmp
push
imul
lock
aad
push
ins
scas
ret
push
aas
dec
or
add
mov
sbb
out
inc
inc
adc
pop
inc
sti
daa
sub
adc
jecxz
rcl
stc
add
push
ins
dec
mov
sub
mov
fst
out
push
repz
jo
(bad)
movs
dec
mov
dec
imul
push
dec
inc
push
shl
pop
pushf
ins
mov
idiv
stc
push
jnp
ret
adc
xlat
mov
call
mov
mov
aam
inc
push
xchg
push
popf
dec
addr16
and
in
push
daa
pushf
jb
dec
sbb
lea
hlt
add
jmp
and
add
push
mov
loopne
inc
sub
xchg
imul
inc
ins
add
dec
movs
xor
add
xor
and
cwde
ss
hlt
cmp
test
jbe
push
outs
push
add
push
mov
dec
pop
lea
ficom
stc
mov
and
push
jecxz
add
jl
cli
xor
loope
test
mov
mov
push
and
mov
adc
add
pop
pop
outs
arpl
test
or
xor
mov
jbe
jle
xchg
inc
mov
mov
pop
mov
adc
ucomiss
ins
sbb
sub
xor
jno
xor
inc
sti
mov
jp
jae
fsubr
xchg
fsubr
jecxz
adc
movs
or
scas
rcl
inc
shl
call
cmps
in
inc
mov
sbb
jp
popa
shl
push
mov
fisubr
sbb
adc
aam
push
(bad)
jl
cmp
mov
sbb
xor
mov
pop
push
adc
push
add
ds
add
sub
and
xor
test
mov
into
jmp
push
cld
ret
je
or
inc
cmp
dec
mov
jmp
mov
adc
mov
jb
pop
popa
adc
js
les
movs
or
inc
fisub
sub
das
push
or
inc
push
jge
cmc
and
pop
dec
mov
or
loop
inc
mov
adc
inc
xor
pop
sbb
inc
enter
aam
pop
popa
inc
xchg
add
loopne
jo
ficom
sbb
push
aam
jo
pop
xor
mov
cmp
adc
sbb
add
inc
inc
sbb
pop
iret
mov
cmp
mov
repnz
xor
(bad)
mov
add
and
ins
mov
and
jg
inc
pushf
fs
dec
pop
mov
out
inc
inc
call
add
adc
pop
sbb
test
inc
inc
jo
enter
lds
xor
mov
sub
shl
xchg
sbb
pop
jns
add
and
shl
sub
repz
int3
dec
ret
(bad)
jl
rcl
repnz
push
fcom
cmp
mov
cs
mov
iret
clc
lahf
push
je
pop
and
in
in
lsl
into
add
sub
dec
dec
jecxz
jnp
adc
add
push
mov
jo
lea
push
adc
test
jecxz
lea
sbb
jecxz
push
and
lsl
ret
jge
pusha
inc
add
cmps
add
add
cdq
aaa
sbb
or
cmp
push
sbb
mov
scas
sbb
sbb
inc
jge
scas
jo
int3
adc
aam
sbb
and
and
sub
xchg
cmc
add
add
xchg
and
popf
and
cmp
in
adc
rol
or
loop
in
dec
cmp
pop
rcr
cwde
push
rcr
mov
pop
xor
pop
or
test
and
fst
add
xor
xchg
add
mov
inc
xchg
ss
sbb
add
das
or
fsub
(bad)
gs
xor
or
movs
xor
rol
push
or
(bad)
dec
shl
cmps
and
add
psadbw
xchg
arpl
push
popa
and
sub
cmps
inc
or
push
fmul
bound
call
por
mov
(bad)
cmp
dec
sub
xchg
and
add
sub
fbld
imul
or
lea
hlt
mov
and
sar
or
test
aaa
mov
fdiv
mov
nop
mov
mov
pop
or
popa
and
or
mov
or
stos
movs
test
pop
jl
pop
inc
add
out
(bad)
dec
inc
adc
cs
aad
icebp
adc
and
mov
adc
jno
jno
imul
lahf
jmp
push
cmps
add
xchg
and
stc
push
aas
nop
or
or
push
xchg
xchg
clc
xchg
loopne
in
mov
inc
jo
out
or
adc
mov
test
inc
aaa
stc
aad
outs
push
jecxz
add
callw
sub
aaa
jl
adc
inc
xor
int
(bad)
ss
adc
stos
mov
dec
ret
inc
mov
dec
jmp
inc
xchg
push
push
inc
dec
out
cmp
cmps
test
add
nop
retf
cwde
adc
cmp
and
test
sub
add
call
mov
daa
nop
push
daa
daa
inc
inc
scas
cwde
push
lahf
test
and
in
xchg
mov
jl
mov
adc
xchg
arpl
shl
pop
cwde
add
dec
adc
mov
sub
or
jmp
pop
xor
inc
fist
add
ret
das
mul
or
inc
(bad)
inc
dec
pop
loope
inc
push
ret
dec
pushf
pop
jge
push
jns
add
mov
mov
and
sbb
mov
push
pushf
ror
jne
adc
cmps
pop
adc
adc
mov
adc
jmp
fst
dec
add
cmp
cmp
add
adc
pop
call
push
xchg
test
movs
mov
test
xor
mov
in
dec
cdq
hlt
(bad)
ret
outs
xor
mov
mov
add
inc
or
ret
in
cmp
dec
popf
sub
rol
cs
scas
test
jbe
fadd
sbb
mov
or
push
push
repnz
pop
fcmovnbe
mov
mov
adc
sbb
shl
push
add
add
add
and
dec
sub
hlt
mov
sbb
js
jo
or
push
xchg
lods
sbb
jno
cld
pop
inc
mov
out
stc
xchg
xchg
jg
pop
mov
movs
xor
ror
and
push
dec
mov
nop
stos
sbb
xchg
mov
dec
xor
cli
sbb
cwde
cli
sar
xchg
in
add
sbb
mov
push
popa
pop
ret
mov
dec
mov
push
and
out
mov
dec
pop
fs
push
gs
or
mov
lds
push
mov
and
mov
and
mov
fdivr
adc
pop
cmp
push
push
or
inc
shl
mov
or
test
mov
clc
(bad)
lods
jge
(bad)
scas
enter
lds
sub
test
sbb
push
cmp
jbe
sbb
lods
xor
xor
js
nop
add
push
mov
lea
stc
inc
mov
push
stc
and
add
xchg
add
lock
push
loope
adc
jo
dec
xchg
test
loopne
gs
adc
adc
les
and
ins
lods
rcl
or
sbb
push
je
or
and
adc
adc
gs
add
js
mov
not
sub
xchg
dec
mov
mov
push
xor
pop
outs
out
and
leave
xchg
pushf
ret
and
mov
pop
lods
shl
nop
inc
fsubp
frstor
jge
and
loopne
push
ins
xor
xor
mov
push
add
pop
and
or
retf
cld
(bad)
xor
add
retf
clc
jge
or
mov
and
dec
enter
sub
in
int
sub
cmps
inc
bound
sbb
cmp
jp
cmp
xor
pusha
sbb
push
sub
cmp
jb
dec
outs
push
xor
movs
daa
pop
dec
enter
mov
add
push
xchg
and
jb
stc
and
pop
xchg
addr16
add
sub
xchg
or
push
inc
inc
(bad)
pushf
xchg
das
jns
or
add
arpl
sub
dec
push
daa
nop
test
ja
mov
and
inc
sbb
dec
cmp
sbb
xchg
pop
push
dec
add
push
(bad)
sub
movlps
test
jnp
cmp
pop
push
add
mov
in
mov
inc
sar
(bad)
sbb
jmp
cmps
xchg
sub
xor
add
adc
scas
inc
lods
inc
shr
jmp
xchg
cmps
or
aas
dec
add
out
add
(bad)
jmp
mov
inc
dec
add
inc
rcl
stos
dec
dec
and
out
fidiv
fs
or
clc
xchg
mov
cmp
xor
arpl
cs
fadd
xor
xchg
fisttp
add
loop
enter
sbb
enter
inc
push
mov
and
clc
push
jp
xchg
punpckhbw
aas
test
mov
ret
inc
push
ret
mov
or
or
fdivrp
mov
xor
imul
mov
or
add
cmps
adc
mov
lock
add
imul
int3
aam
(bad)
adc
ins
dec
xor
jae
adc
adc
jb
mov
popf
popa
loopne
emms
push
sub
dec
cs
mov
popf
fisub
mov
jmp
(bad)
dec
jb
movs
sub
sub
cli
jbe
dec
xor
xor
xlat
pop
into
daa
and
push
push
push
mov
in
rol
arpl
sub
adc
jns
add
outs
xor
aam
lea
sub
lea
pop
sub
sbb
stos
or
mov
sar
dec
or
jg
and
sar
add
test
jge
arpl
mov
jb
push
lea
aas
add
pop
xchg
sbb
or
and
stc
mov
aas
adc
xchg
call
cli
xlat
cmp
xchg
in
push
mov
je
add
mov
je
and
popa
fmul
fisttp
and
je
and
loop
jb
and
inc
pop
pop
adc
loope
sub
add
cmp
push
test
add
shl
push
add
aam
pop
dec
push
or
test
fadd
inc
imul
scas
dec
dec
push
stos
pop
(bad)
push
pop
mov
in
cmp
test
adc
mov
push
xchg
adc
cmp
iret
das
rcr
mov
adc
pusha
bound
bound
(bad)
ss
xor
dec
mov
adc
(bad)
pop
sub
adc
mov
fwait
fwait
mov
adc
adc
in
nop
inc
adc
inc
dec
push
clc
sbb
inc
inc
mov
sar
add
sub
jp
pop
leave
inc
add
sub
pop
cmp
in
dec
or
jb
std
dec
add
stos
mov
loope
movs
bound
inc
idiv
out
jbe
cmps
fld
ror
sbb
sub
or
or
mov
and
pop
call
adc
outs
jae
jge
mov
sub
and
ret
dec
cmp
pusha
fild
adc
(bad)
pusha
push
cmc
or
and
add
xchg
outs
dec
js
in
fsubp
nop
(bad)
push
fcomp
sub
push
push
fisttp
push
sbb
aas
inc
xor
push
and
add
(bad)
xor
enter
xchg
outs
shl
ficomp
add
jge
sub
and
xchg
sbb
sbb
xchg
aaa
div
test
xchg
adc
loope
(bad)
jmp
sbb
mov
cwde
sbb
sub
jb
add
imul
dec
mov
out
add
inc
das
xor
imul
rol
mov
jno
ror
outs
dec
cmp
dec
add
adc
cwde
sbb
out
das
and
sbb
adc
pop
add
imul
add
div
and
inc
dec
cmps
lea
js
dec
lods
sub
cmp
leave
adc
repnz
inc
and
inc
xor
jge
dec
adc
ror
jno
dec
adc
xor
inc
in
adc
(bad)
mov
and
and
addr16
imul
push
fistp
dec
mov
pop
imul
jno
add
in
test
lods
dec
dec
mov
push
mov
test
lock
mov
dec
shl
push
mov
pusha
cwde
xor
or
movs
mov
loopne
inc
cmp
ins
mov
mov
inc
fwait
ret
add
inc
mov
cs
push
add
pop
xor
inc
or
aam
pop
jne
rcl
ror
sti
stos
stos
test
dec
repz
(bad)
push
and
jmp
lea
dec
xor
js
sbb
test
fldenv
adc
shl
jne
adc
iret
adc
test
xchg
or
xor
push
cmp
dec
sub
adc
or
mov
fwait
jp
mov
push
in
pop
inc
add
repnz
inc
push
cmp
push
mov
xchg
ins
adc
adc
inc
cmp
sub
jg
lahf
add
push
push
stc
add
in
push
scas
loop
outs
add
aaa
inc
fwait
push
aam
int3
jnp
ss
adc
mov
dec
xor
or
xchg
and
les
rcr
inc
das
add
call
fild
call
bound
inc
std
and
and
test
push
adc
mov
add
pop
sub
popa
inc
inc
add
xchg
popa
xchg
test
or
mov
mov
and
gs
or
add
push
or
je
adc
into
jg
mov
lock
mov
pop
add
lock
sub
mov
dec
out
pop
add
(bad)
scas
sbb
cmp
xchg
add
jo
es
fs
push
sbb
jno
jecxz
lods
add
xor
mov
cmp
leave
shl
popf
jb
adc
loope
jl
in
inc
pop
xor
and
dec
jae
movs
sub
jb
sub
xor
std
and
(bad)
and
mov
mov
sar
loop
fdivr
repz
out
xchg
lock
push
mov
popa
lods
hlt
cdq
(bad)
push
add
and
jne
cmp
(bad)
sub
push
mov
mov
pop
out
inc
cmp
mov
push
sbb
or
rcl
push
mov
or
adc
xor
stc
iret
or
add
add
add
jo
inc
(bad)
lock
xor
mov
or
jmp
popa
lock
adc
nop
add
hlt
(bad)
push
or
aas
inc
es
jmp
push
xchg
int3
mov
sbb
mov
sub
push
jns
or
int
lds
dec
pop
lods
and
cmp
sub
xchg
mov
cmp
(bad)
jge
sub
clc
mov
outs
xchg
add
and
in
add
adc
cmp
jno
or
push
shl
sbb
add
jmp
test
jne
add
inc
pop
jbe
dec
xchg
adc
xor
jae
jecxz
cmp
xchg
push
or
pop
sbb
push
pop
mov
add
sbb
cmps
je
sbb
enter
syscall
jne
jb
pusha
push
cmp
xchg
jo
pop
and
sbb
ins
nop
and
inc
push
push
push
push
rcl
(bad)
inc
adc
inc
(bad)
stos
mov
sbb
dec
dec
out
push
and
mov
mov
mov
mov
test
and
jns
nop
add
push
jge
je
fs
jo
xor
push
or
sub
push
inc
fidivr
mov
jmp
dec
test
sbb
in
cmps
add
add
jg
add
(bad)
jp
shl
js
montmul
cmps
test
enter
inc
mov
dec
xchg
or
pop
out
nop
add
inc
mov
push
inc
xchg
dec
mov
sub
scas
dec
dec
dec
push
jno
movs
push
enter
pusha
aaa
test
adc
fadd
aas
ror
in
inc
mov
push
push
cmp
sahf
pop
arpl
(bad)
pushf
xchg
adc
or
inc
movs
repz
leave
mov
add
lods
xchg
test
adc
repnz
adc
fst
adc
adc
mov
test
imul
test
test
pop
pusha
fld
jl
sbb
ret
js
neg
sar
pop
call
xor
pusha
repnz
shl
jb
and
je
scas
inc
mov
push
dec
pop
pop
ror
prefetcht1
and
and
(bad)
and
sub
or
xor
pop
mov
mov
out
test
mov
scas
pushf
push
call
xor
aam
in
cmp
pop
and
scas
fwait
ret
jb
or
sub
or
(bad)
and
mov
inc
in
adc
and
or
fsub
fwait
cmc
mov
xor
xchg
and
daa
dec
lahf
xor
add
test
mov
cld
fadd
jp
test
int3
cld
js
jae
aad
inc
push
mov
xchg
in
sbb
mov
mov
mov
(bad)
mov
(bad)
addr16
xchg
xchg
add
(bad)
pavgw
icebp
imul
ficomp
mov
popf
jecxz
in
in
loopne
push
test
lock
and
or
pop
pop
add
rol
jle
dec
retf
cmps
mov
jo
pop
adc
jnp
popa
dec
fbstp
adc
add
or
jb
into
sub
sub
dec
sub
loop
nop
out
add
add
and
sbb
add
int3
add
add
call
inc
xor
(bad)
add
fst
push
test
jmp
test
rcl
pop
xchg
jmp
out
sub
dec
add
js
cvtps2pd
mov
or
jb
nop
sbb
jl
cmp
inc
add
pop
out
fst
pop
mov
in
jo
ds
rcl
ss
pop
and
imul
cs
xchg
or
push
stos
xchg
adc
daa
les
add
cmp
clc
push
mov
clc
sub
js
xor
pop
adc
stc
or
mov
ja
and
out
in
jmp
test
clc
leave
movs
dec
sbb
inc
daa
or
xor
pop
sbb
xor
pop
fwait
sub
inc
jno
xchg
in
or
inc
dec
xor
fmul
sub
cmpxchg
test
std
out
loope
sbb
and
mov
or
aas
xor
test
xchg
(bad)
in
pusha
sbb
faddp
and
inc
add
add
aam
push
push
nop
xchg
mov
cwde
and
test
xchg
inc
add
dec
test
inc
aam
xchg
cmp
xchg
and
mov
nop
mov
popa
push
or
or
ret
sbb
pop
sbb
jno
adc
ja
adc
push
push
xor
sbb
jg
hlt
cmp
loope
cmp
mov
sub
cwde
leave
and
shl
test
pop
jl
sub
mov
cmp
sub
adc
test
or
test
xchg
dec
add
sahf
enter
mov
dec
dec
cmps
movs
mov
add
sbb
shl
adc
in
mov
sbb
jbe
push
pop
adc
xchg
or
enter
out
rcr
add
sti
mov
cwde
mov
push
test
out
or
lds
xchg
mov
mov
test
mov
adc
sbb
mov
add
sbb
inc
adc
mov
ins
test
add
mov
in
inc
pop
mov
or
imul
test
pop
enter
mov
add
cmp
add
int
retf
in
inc
fs
xchg
cmp
inc
out
aam
inc
pop
add
pop
or
push
rcr
jmp
sub
mov
scas
gs
and
cld
jle
arpl
mov
pop
lock
add
jae
ss
call
push
popa
sbb
adc
(bad)
das
xor
out
mov
cmp
mov
fcom
(bad)
xor
sub
(bad)
aaa
mov
cmp
(bad)
push
xchg
mov
mov
cmp
inc
call
mov
push
push
dec
fiadd
retf
and
cmps
push
push
outs
xor
ficomp
rcr
scas
retf
nop
das
in
cmp
add
inc
jae
jo
sbb
enter
dec
mov
jge
es
das
retf
xor
add
xor
pop
(bad)
and
xor
dec
pop
pop
fisub
dec
stc
sub
sbb
xor
pusha
clc
test
or
adc
mov
mov
test
add
imul
mov
in
imul
call
(bad)
ret
and
sub
xchg
sahf
pop
aas
sub
mov
push
add
outs
sbb
push
daa
or
ins
daa
dec
mov
mov
pushf
cwde
(bad)
xchg
mov
adc
or
ins
xchg
push
mov
iret
adc
mov
daa
fcomip
cmp
inc
dec
or
rol
addr16
xor
add
mov
add
sub
cmps
or
xor
and
cmp
fwait
dec
xor
shl
pop
cmp
add
dec
add
icebp
mov
nop
mov
lahf
and
lahf
push
xchg
test
and
and
lods
enter
cmp
rol
fistp
cmp
mul
add
inc
xchg
nop
fldcw
sub
add
cmc
or
or
inc
pop
call
fs
ja
aaa
mov
mov
mov
iret
in
sub
cmp
or
mov
rol
push
je
aam
add
push
dec
pushf
or
cmps
(bad)
popf
mov
lea
mov
xor
cmps
jne
shl
add
push
ins
daa
ins
lods
adc
cs
aaa
leave
enter
cli
cld
clc
mov
outs
inc
or
sbb
cld
clc
xchg
sbb
cmp
ja
jbe
fild
outs
push
mov
push
(bad)
push
cmp
cs
cmp
enter
aam
and
loopne
mov
fcom
jmp
enter
add
cmp
and
pusha
and
mov
fisttp
enter
test
jge
mov
fld
mov
or
inc
xchg
or
and
jbe
cmp
push
sbb
dec
inc
sahf
ins
gs
imul
and
jae
fist
adc
test
sbb
or
loope
mov
dec
jmp
dec
das
dec
mov
fistp
sahf
and
pop
leave
aad
aas
sub
pop
sbb
sub
or
rol
or
enter
or
mov
dec
ins
add
call
lea
jbe
mov
add
addr16
movs
mov
or
ins
pushf
mov
lahf
xchg
xchg
nop
inc
push
nop
and
aam
inc
in
jbe
add
add
mov
(bad)
js
and
ins
mov
ror
popa
or
int3
cmp
add
adc
xchg
sbb
dec
mov
mov
les
mov
retf
aaa
jo
pop
push
sti
xchg
in
into
clc
add
mov
cdq
out
or
or
xchg
mov
lods
mov
add
test
enter
retf
mov
retf
inc
aas
movs
int3
test
or
and
mov
aam
fcom
aas
xchg
mov
cwde
or
mov
push
test
mov
mov
rcl
pop
call
inc
xor
cmp
sti
sub
xor
add
or
sahf
pop
lds
or
lahf
mov
pop
adc
mov
jb
(bad)
ret
das
xor
inc
fadd
pop
dec
inc
add
jmp
dec
push
imul
(bad)
mov
in
jecxz
fs
jb
add
sbb
and
jnp
add
add
hlt
add
enter
add
mov
lock
fiadd
inc
popf
inc
dec
enter
test
popa
inc
mov
(bad)
lods
lock
mov
les
movs
cmp
mov
test
push
push
fisub
xchg
daa
(bad)
mov
imul
enter
push
out
or
mov
(bad)
les
adc
add
adc
loopne
cdq
arpl
aam
push
dec
push
loope
and
(bad)
pop
and
lea
lea
add
dec
inc
inc
or
xor
push
jp
add
mov
pop
xor
sbb
movs
dec
xor
ins
push
dec
das
mov
push
pop
(bad)
inc
pop
call
inc
sub
std
sub
mov
dec
push
mov
pop
cmps
xchg
loopne
xchg
pop
or
stos
shl
loope
test
dec
or
inc
jb
push
add
jle
sub
arpl
pop
push
mov
mov
mov
push
imul
hlt
sub
aaa
loopne
lock
lds
cmp
inc
jmp
cmp
or
adc
out
xor
pop
in
xchg
ja
dec
or
lea
mov
addr16
or
int
loope
mov
js
enter
pop
enter
mov
ins
stos
arpl
sbb
adc
test
imul
add
movs
push
out
sub
in
mov
mov
stc
lods
add
loopne
lods
ja
test
mov
mov
mov
add
rcl
mov
outs
outs
popf
popa
ins
out
jne
cmp
push
push
repz
xor
stos
xchg
xchg
cmp
nop
adc
(bad)
mov
and
push
xor
iret
adc
fadd
mov
or
fdiv
repz
mov
pop
push
mov
pop
sbb
pushf
mov
popa
push
and
iret
and
mov
jno
iret
mov
fs
popa
ins
adc
in
push
in
push
imul
push
(bad)
pop
and
push
retf
mov
lods
sub
sub
in
aad
mov
xchg
adc
movs
adc
fs
cmp
push
jno
lock
inc
push
pushf
or
sub
movs
xchg
sbb
pop
mov
or
mov
fadd
xchg
adc
outs
nop
leave
inc
loopne
aaa
cmps
mov
cmp
clc
gs
aam
xchg
cmps
adc
adc
or
cmps
xor
pop
adc
or
daa
(bad)
(bad)
cwde
pop
into
mov
jle
mov
or
jne
leave
in
hlt
xchg
push
dec
call
dec
loop
aam
pop
jae
xchg
imul
cmps
scas
or
ss
in
sbb
cmps
push
in
or
inc
sub
rcl
inc
mov
cli
cld
inc
cmp
dec
dec
dec
in
mov
pop
push
jne
and
inc
inc
cs
push
pop
test
inc
neg
add
neg
pop
cld
loopne
adc
inc
pop
not
add
lock
jmp
cmpxchg8b
sub
mov
mov
mov
jmp
mov
dec
inc
inc
shl
and
repnz
mov
sbb
fcomp
inc
jbe
rcl
xor
sbb
shl
mov
(bad)
lahf
xor
repnz
cmp
and
mov
sub
(bad)
mov
or
push
pop
ret
push
push
cmp
adc
push
dec
inc
adc
push
movs
push
movs
cwde
test
cmp
movs
sbb
xchg
push
lea
sahf
pop
and
mov
mov
lods
jb
les
jmp
icebp
nop
inc
add
pop
es
mov
push
das
cmp
shr
lods
pop
mov
jnp
sbb
mov
mov
adc
sub
and
rol
sbb
aam
mov
jb
das
and
mov
jns
dec
mov
jecxz
xor
and
mov
jge
mov
addr16
dec
outs
push
mov
jmp
mov
jae
mov
add
test
xor
fist
push
xchg
pusha
cmp
rcr
call
mov
cmp
adc
(bad)
mov
sub
inc
and
jmp
test
and
adc
clc
in
les
adc
add
mov
add
jle
adc
or
add
xchg
sub
je
vpminub
jne
dec
sbb
push
inc
mov
add
or
div
cmps
jno
das
or
push
sar
sub
xor
fisttp
sub
test
jp
add
pusha
or
jnp
(bad)
jg
mov
test
sub
movs
retf
push
pop
or
dec
xor
fsubr
dec
sbb
push
repnz
cmp
mov
xor
inc
adc
nop
sbb
jno
shl
dec
mov
repz
push
repz
call
xchg
dec
test
popa
jecxz
mov
sub
ss
mov
aaa
and
and
xor
and
jo
pop
in
push
xchg
or
pusha
shl
xor
test
or
in
mov
jmp
rcr
pusha
or
push
jno
std
aas
push
mov
cmp
fadd
fld
enter
fmul
push
push
xchg
leave
ret
repz
add
pop
jb
clc
cmp
add
adc
movs
push
call
test
pop
xor
or
test
add
cmp
es
repnz
and
les
and
xchg
test
mov
mov
mov
enter
movs
and
pop
lahf
and
sbb
je
popa
mov
sar
cmp
xor
xchg
pop
and
pop
pop
aam
mov
fadd
mov
in
cdq
xor
ror
pop
pop
loopne
test
imul
int3
adc
mov
xor
dec
sub
sbb
into
cmp
sub
mov
mov
(bad)
sbb
test
jecxz
add
jp
call
cmp
cdq
adc
adc
dec
imul
cs
xor
shl
test
cdq
rol
or
popa
rol
push
or
push
add
inc
ins
addr16
mov
jns
call
or
inc
or
or
test
add
call
dec
adc
jg
mov
mov
inc
sub
nop
arpl
push
mov
xor
xor
sub
or
dec
adc
int3
mov
add
xor
jecxz
je
and
dec
fsubr
or
ret
aaa
adc
test
inc
call
push
jmp
mov
mov
cmp
xchg
xchg
movs
movs
sub
jns
loope
xor
les
addr16
xchg
not
jne
inc
xlat
mov
sub
imul
add
hlt
out
xchg
test
add
xchg
lock
loope
lods
dec
sub
mov
imul
fsub
add
pop
add
inc
or
call
aad
and
or
repnz
mov
add
dec
cmps
or
sub
jns
and
imul
dec
mov
push
fs
int3
sti
das
sub
enter
adc
sbb
fcomp
int
and
in
xor
or
outs
movs
dec
jmp
out
or
outs
sbb
xor
adc
ret
add
test
(bad)
cli
sbb
lock
inc
lods
data16
adc
rol
test
fidiv
bound
cmp
movs
add
aaa
scas
jecxz
dec
pushf
pusha
popa
mov
movs
jge
icebp
dec
push
jbe
xor
mov
ret
outs
movs
scas
retf
inc
xor
ret
inc
in
add
sar
hlt
jle
add
sbb
add
adc
fwait
repz
repnz
cmp
aaa
loop
lock
repnz
out
out
jecxz
cli
in
jae
test
pop
cmp
sti
aam
mov
inc
and
das
push
push
xchg
jmp
adc
pop
add
mov
dec
int
nop
into
into
push
inc
dec
mov
out
(bad)
push
jno
inc
aaa
jp
dec
jbe
cmp
gs
jns
and
inc
test
in
bound
repnz
mov
push
fisub
sar
push
fs
or
cs
fisttp
sub
rcr
test
mov
mov
mov
adc
jmp
mov
adc
mov
xor
push
in
pop
popa
(bad)
inc
jg
adc
rol
imul
xchg
in
popa
dec
add
sbb
xchg
or
mov
or
cdq
scas
jmp
mov
(bad)
jecxz
das
pop
jecxz
outs
adc
sbb
push
aad
(bad)
in
push
popf
mov
jecxz
dec
inc
mov
adc
pop
inc
or
sub
or
cmc
sbb
movs
inc
cmp
or
mov
add
or
ficomp
push
cmps
lock
sbb
inc
or
stos
sub
inc
pop
and
inc
out
cmps
es
push
mov
bound
cwde
pusha
xor
inc
push
iret
dec
pop
adc
mov
repnz
lahf
sbb
in
les
test
sbb
cmp
jl
lea
std
dec
loop
push
nop
sbb
sub
xchg
fisub
jge
or
jge
js
outs
ficom
aad
out
mov
ret
lods
xor
jg
xor
add
out
imul
stos
mov
mov
out
pushf
sar
add
or
fs
test
or
mov
dec
xchg
xchg
popf
sub
ins
jmp
sub
push
adc
jns
adc
dec
sub
inc
mov
pusha
mov
mov
push
lods
or
sub
dec
scas
inc
xor
jmp
or
or
add
dec
(bad)
dec
add
ror
loope
cmp
mov
imul
sub
imul
ins
addr16
push
cmp
cmps
imul
and
or
or
and
and
adc
xor
push
mov
dec
push
mov
xchg
and
rol
jle
repnz
jne
ret
push
mov
fs
cwde
mov
jnp
pusha
inc
retf
or
adc
ret
leave
call
jmp
pop
push
push
xchg
sbb
mov
arpl
enter
pop
sub
add
aaa
arpl
inc
imul
jmp
sub
xchg
fs
adc
bound
clc
and
nop
nop
sub
dec
dec
(bad)
xor
fdiv
dec
jb
sub
jo
shld
sbb
jo
fnstenv
and
mov
cmp
test
dec
mov
dec
in
dec
jg
test
dec
sbb
push
out
(bad)
sbb
dec
scas
pop
fist
add
mov
dec
or
mov
mov
sbb
adc
push
sar
les
loopne
addr16
sbb
add
push
scas
lods
(bad)
fs
out
xor
mov
push
jb
cwde
inc
jmp
and
xchg
adc
push
xchg
push
inc
std
and
lods
shl
xor
scas
cwde
pop
and
push
jl
push
xchg
jmp
movs
fsubr
outs
push
sbb
dec
cmp
pop
(bad)
pop
sub
pop
bnd
aaa
or
int3
sub
or
push
or
and
pop
or
and
push
mov
fisub
cdq
shl
shl
xor
sub
mov
pop
add
mov
pop
adc
adc
xchg
push
js
ret
cmp
mul
jae
jmp
loopne
and
pop
dec
mov
retf
or
pop
mov
dec
sbb
mov
push
xchg
ret
jne
test
sbb
call
cld
ret
mov
mov
mov
test
jae
xor
daa
das
or
sub
pop
and
push
jmp
pusha
dec
in
ja
ret
and
adc
hlt
loop
add
mov
not
lock
inc
sahf
cmp
int
jmp
adc
fiadd
ja
ins
test
jb
loope
add
shl
outs
leave
sub
cmp
jnp
lahf
inc
cmp
push
push
gs
push
inc
imul
jb
pushf
adc
xchg
adc
shl
jae
mov
push
imul
sub
mov
jo
adc
pop
movs
imul
ins
push
pusha
adc
push
cld
pop
pop
mov
pop
add
fadd
xchg
cmp
sub
lods
jl
inc
ret
call
jne
mov
or
arpl
xchg
adc
pop
xchg
popa
fidiv
jle
je
icebp
les
and
sbb
in
je
sbb
es
add
test
sar
adc
les
hlt
sub
sbb
mov
cmc
fisttp
add
mov
lock
jne
sar
mov
sub
or
mov
mov
xor
inc
arpl
pusha
rcr
push
adc
dec
mov
test
add
mov
pop
add
mov
sub
(bad)
xchg
arpl
dec
lock
jns
cmp
sub
mov
push
aaa
aam
add
fs
in
ret
ret
xor
aaa
xor
sub
rcr
das
in
dec
sub
je
inc
jne
imul
mov
xchg
add
mov
push
push
out
jmp
push
dec
lds
retf
icebp
pusha
(bad)
sbb
add
jmp
mov
adc
add
xchg
pmulhuw
pop
adc
or
sub
inc
sub
es
out
pop
sub
cmps
push
test
inc
xchg
sbb
push
pop
shl
xor
jo
mov
mov
add
jne
dec
jg
push
pop
jmp
je
push
(bad)
add
mov
enter
adc
or
pusha
sub
jo
xor
ret
lock
enter
add
adc
pop
call
call
stos
sbb
add
loop
push
cdq
adc
adc
xchg
or
(bad)
int3
cmp
cmc
mov
js
dec
ror
outs
sbb
inc
jge
and
add
and
nop
or
rcl
sub
push
mov
pop
pop
and
xor
ret
(bad)
cld
add
stc
outs
stc
test
pop
sbb
xor
xor
(bad)
mov
sub
push
inc
or
fisub
shl
test
xchg
and
xchg
shl
and
push
nop
sahf
mov
stos
push
rcl
jno
cmps
add
or
mov
ja
or
and
add
sti
dec
push
into
push
xchg
rol
fs
inc
sub
pop
icebp
dec
xor
or
mov
or
cs
cmps
mov
nop
sub
jl
test
enter
cmp
inc
fwait
mov
mov
or
push
or
add
inc
adc
or
push
fild
or
inc
jp
add
pusha
xchg
xor
adc
or
enter
imul
pop
xor
into
adc
add
ss
das
adc
mov
(bad)
iret
es
mov
cmp
jne
push
xchg
and
fcom
sub
or
in
and
add
cmps
fbld
mov
aaa
mov
imul
mov
(bad)
sub
pop
int3
adc
inc
mov
mov
or
imul
and
outs
xchg
xor
jne
or
aaa
pushf
inc
jp
movs
movs
(bad)
aam
sbb
iret
sub
push
mov
or
push
sbb
xchg
and
mov
bound
xchg
mov
sub
push
sub
mov
inc
jecxz
mov
loop
mov
ja
mov
and
add
jmp
stc
or
mov
test
xor
cmc
add
push
push
in
mov
in
adc
(bad)
xor
imul
jne
push
lahf
sbb
and
sub
inc
jl
pop
mov
add
xor
xor
push
xsaveopt
inc
jns
rol
and
xor
jno
sbb
fstp
stos
jb
pop
scas
adc
sbb
mov
inc
outs
pop
xor
mov
inc
data16
or
out
and
jne
test
shl
into
push
sub
je
lea
dec
cmps
mov
sbb
pop
std
inc
pop
aam
sub
pop
jle
jb
xchg
cmp
lea
mov
sti
add
xchg
shr
call
lea
dec
and
or
aam
or
rcl
lahf
lea
xor
jbe
jp
pusha
and
pop
scas
out
or
sbb
nop
push
int
push
jecxz
loopne
jo
nop
push
push
ds
test
lods
cmp
and
out
cmc
les
mov
push
mov
jno
xchg
int3
cli
add
cmp
mov
es
aam
(bad)
cmp
movs
mov
sti
xor
movs
sbb
ror
and
pop
xor
or
add
xor
sub
(bad)
popa
or
mov
and
clc
and
ins
jne
test
outs
and
or
xchg
pop
in
or
or
inc
jecxz
or
and
retf
add
rol
pop
mov
push
xor
adc
mov
test
aad
mov
adc
xchg
sub
dec
xor
test
(bad)
push
jge
sbb
bound
loopne
(bad)
sbb
sar
mov
scas
xor
pop
sbb
jne
fwait
adc
inc
dec
out
pop
aad
inc
sbb
adc
outs
int3
or
sbb
sbb
sbb
xchg
or
mov
inc
ret
jne
mov
addr16
lods
sbb
xor
add
pop
stos
loopne
div
shr
aad
dec
adc
scas
pop
or
push
add
ins
in
out
in
lea
push
sub
in
cs
pop
mov
bound
xchg
fst
push
bnd
mov
pop
xor
loopne
call
xor
sbb
push
aad
in
cmp
shl
jmp
dec
dec
bound
lods
adc
rcl
enter
pusha
or
test
add
add
or
jecxz
mov
add
imul
scas
mov
shr
push
inc
arpl
repz
jmp
adc
movs
mov
jp
adc
sub
xchg
xor
adc
pop
add
jbe
jo
popf
mulps
mov
and
add
retf
adc
ret
sub
pop
adc
ftst
add
stos
and
jmp
sub
dec
cld
(bad)
repz
ds
mov
push
daa
adc
cmp
or
int3
inc
xor
test
bound
mov
rcr
xor
(bad)
je
xor
xchg
jne
fbld
shr
and
out
dec
cmp
pop
jb
inc
sbb
dec
shl
or
lea
rol
sub
or
es
sub
mov
pop
add
jp
cmp
jnp
sbb
push
movs
arpl
cmps
dec
repnz
mov
or
push
sbb
mov
mov
(bad)
adc
add
sahf
fcom
inc
call
in
mov
mov
fld
jmp
fst
ja
out
cmps
mov
out
sbb
dec
sbb
shr
ins
push
sub
cwde
ret
inc
or
fsubr
loope
cmp
enter
add
popa
in
in
mov
clc
sbb
nop
out
sub
cmp
shl
sbb
into
cmp
push
sub
call
adc
add
add
xchg
xor
add
adc
add
sub
or
pop
xchg
cmp
aas
pusha
mov
cmp
jg
das
shr
xchg
sbb
jnp
or
sub
sbb
enter
xor
daa
cmps
adc
jmp
dec
ret
movs
jbe
not
dec
add
pop
into
rcr
mov
in
call
call
imul
inc
in
je
adc
(bad)
(bad)
add
jl
and
retf
lea
les
fild
mov
in
sub
mov
test
dec
lea
adc
jne
inc
or
cmc
xchg
xchg
cmp
cmp
or
inc
ret
and
gs
inc
mov
jecxz
or
push
loopne
sub
mov
inc
and
lods
or
loopne
mov
sti
movs
fidiv
test
sahf
xor
pop
movs
sub
(bad)
push
in
arpl
push
pusha
push
mov
jns
cmc
jg
xchg
pop
inc
pop
xor
mov
mov
push
and
add
mov
(bad)
xchg
cs
xor
es
push
inc
add
(bad)
jl
or
inc
add
inc
inc
addr16
out
jne
push
lods
jnp
imul
add
mov
adc
in
adc
adc
lock
imul
jmp
push
rol
cmp
ror
sbb
sub
xor
enter
lds
sbb
and
and
dec
or
push
and
push
xor
out
sub
pop
ret
cmp
mov
push
and
and
or
add
push
dec
or
add
sub
sbb
xchg
and
and
cmp
(bad)
loope
cmp
dec
(bad)
(bad)
test
dec
or
sub
xor
xchg
mov
dec
jo
dec
mov
xor
repz
xor
test
mov
jmp
dec
sub
or
sub
call
push
shl
push
jb
ror
and
or
add
lea
inc
lods
and
sbb
ret
add
push
retf
(bad)
sbb
mov
mov
sbb
aaa
pop
sub
or
clc
jne
xchg
mov
sub
fldcw
and
(bad)
std
inc
inc
add
les
push
pop
or
or
(bad)
cmp
or
int
pusha
xor
cli
pop
or
mov
jo
clc
mov
jecxz
nop
dec
xchg
add
addr16
jns
adc
popa
cld
inc
pop
dec
sbb
movzx
jg
pop
jnp
or
mul
(bad)
or
mov
jb
mov
mov
mov
cwde
out
pop
pushf
sub
sbb
dec
ss
push
sub
mov
sbb
pop
mov
adc
adc
push
cmp
fsub
inc
sub
cwde
add
out
sub
mov
add
fisttp
arpl
test
cdq
fistp
aaa
jb
outs
dec
cs
xchg
mov
dec
or
inc
mov
and
je
adc
aaa
jmp
pop
and
or
pop
fisttp
push
nop
iret
rcl
pop
pop
out
xchg
or
push
add
dec
adc
mov
pop
push
jo
or
loop
and
sbb
sbb
add
mov
mov
mov
mov
mov
adc
rcr
pop
fsubr
popa
adc
xchg
xchg
sbb
or
movzx
jnp
sub
stos
xor
ficom
leave
ret
and
mov
fild
xor
into
and
(bad)
sbb
ret
lea
inc
in
pop
inc
retf
inc
xchg
or
and
scas
pop
rol
and
and
xor
jno
adc
test
inc
aas
xor
sbb
dec
(bad)
repz
cdq
add
mov
leave
bound
mov
sub
push
pop
sub
xor
jns
aad
mov
mov
or
add
clc
adc
ret
sbb
adc
add
pop
xor
shr
dec
or
loop
dec
sbb
add
pusha
lods
adc
xor
test
into
dec
xchg
ror
pop
pop
call
repz
scas
or
mov
cdq
mov
adc
je
add
popf
xchg
add
fidiv
lds
adc
adc
xchg
inc
mov
mov
push
jno
in
ror
push
jnp
imul
and
movs
stos
xchg
xor
and
add
je
and
sahf
add
xor
sub
or
(bad)
push
and
or
jb
jb
out
add
out
dec
mov
lahf
das
push
or
mov
push
cmp
scas
lods
je
and
in
push
sahf
inc
les
xor
pop
retf
push
mov
int
inc
inc
mov
repnz
pop
jne
aas
pop
inc
pop
in
inc
pop
(bad)
fadd
xchg
inc
data16
ror
xor
ja
xchg
or
pop
(bad)
and
add
and
cmps
adc
xor
jmp
bound
sar
dec
sub
(bad)
cmp
sti
add
pop
scas
lahf
fmul
ins
das
mov
xor
and
xchg
(bad)
inc
in
inc
cmps
adc
test
fwait
dec
jmp
adc
or
clc
bound
jae
ret
or
inc
pop
ror
movs
sbb
push
push
add
xor
mov
fst
clc
sbb
stos
add
pop
pop
shl
add
das
sub
add
dec
and
pop
sub
push
push
adc
push
ins
add
pop
ins
push
mov
xlat
rcl
adc
rcl
dec
adc
inc
fadd
add
cwde
xor
add
add
lea
sub
pop
ret
or
or
bound
ud2
xchg
pop
shl
mov
add
jbe
jge
cdq
add
dec
movs
or
sbb
inc
loope
cmp
in
retf
cwde
cld
popa
clc
test
fs
push
jnp
into
dec
cmp
inc
jae
dec
call
rol
hlt
mov
repnz
or
or
adc
add
and
xor
ret
sbb
cs
jmp
mov
in
fld1
shl
adc
outs
add
sub
xor
xchg
ret
jle
jle
add
sbb
dec
mov
mov
sub
cmps
icebp
dec
movs
inc
mov
arpl
cmp
enter
xchg
mov
sbb
xchg
mov
mov
push
xor
or
rep
in
adc
add
adc
sbb
xchg
jbe
dec
mov
xor
sub
jg
dec
and
cmp
cmp
dec
(bad)
int3
or
scas
jg
add
mov
or
outs
das
mov
jbe
push
repz
or
dec
mov
mov
fmul
aam
outs
adc
jo
lock
mov
ret
jp
dec
outs
push
adc
sub
push
mov
pop
cmp
adc
xchg
adc
pop
aas
mov
sbb
lea
movs
lea
rcl
mov
dec
jmp
test
in
les
jne
les
cmp
push
sbb
xlat
inc
dec
jmp
push
mov
mov
xor
adc
loopne
jo
mov
dec
or
mov
mov
cmp
das
sar
ficomp
shl
add
pop
or
je
xchg
adc
mov
sbb
pop
sbb
and
stc
or
push
pop
sbb
sbb
jns
push
retw
mov
xchg
mov
or
ins
inc
imul
(bad)
and
or
int3
or
std
sar
and
jge
xchg
mov
mov
sbb
mov
dec
(bad)
test
dec
fist
nop
fadd
xlat
cs
cwde
movs
add
cwde
add
(bad)
jmp
clc
cmps
xor
movs
mov
dec
add
dec
or
xor
mov
in
add
xchg
adc
cmp
push
add
rol
and
add
adc
and
cmp
adc
mov
pop
imul
ret
mov
adc
(bad)
mov
add
adc
xor
sub
in
adc
push
push
jmp
jmp
mov
xchg
mov
test
pushf
xor
mov
dec
inc
out
add
cmp
clc
mov
stc
inc
fidiv
enter
leave
jno
adc
ror
je
repz
lea
lods
cmps
in
sub
or
shl
dec
pushf
pop
mov
push
mov
ret
shl
add
inc
cmps
nop
(bad)
sbb
(bad)
rcr
aad
jl
int
add
ins
retf
or
push
test
sub
mov
movs
repz
lods
fdiv
and
movs
mov
gs
cmp
mov
cmp
and
sub
sbb
xor
mov
cmp
pop
inc
xchg
int3
push
imul
xchg
nop
minps
je
dec
call
push
and
(bad)
sbb
enter
cmp
js
add
pop
not
or
jmp
and
inc
add
mov
pop
xlat
xchg
inc
push
pop
ret
and
mov
or
jmp
fmul
clc
hlt
or
data16
test
or
cmp
push
mov
call
xlat
cmp
push
inc
push
xor
sbb
ins
movs
lods
rcl
mov
or
stos
fdivr
dec
fmul
arpl
nop
outs
push
push
fcomp
push
(bad)
add
push
or
push
cli
push
add
enter
cld
rcl
adc
pop
inc
fsubrp
jle
add
jecxz
sbb
mov
out
ret
scas
xor
and
mov
dec
out
push
push
daa
inc
xchg
fadd
mov
xchg
inc
fwait
jmp
jmp
cdq
add
inc
lods
pushf
push
jecxz
popa
inc
inc
adc
gs
mov
or
or
sub
cmp
and
push
sar
pop
add
ror
jmp
jmp
xor
repz
xchg
inc
or
adc
iret
mov
add
js
fldenv
push
adc
adc
and
dec
adc
jmp
jo
daa
aas
fbstp
xor
hlt
rol
loop
and
rol
mov
int3
xchg
mov
cmp
mov
push
push
cdq
fsubr
add
setb
push
and
and
cmp
adc
pop
mov
cs
je
daa
cmp
cmp
std
jmp
imul
add
and
push
and
pmulhuw
in
call
sub
movs
lock
ret
mov
add
add
pusha
add
rcr
test
push
cli
ins
inc
bound
or
dec
and
idiv
or
jmp
or
cmp
pop
dec
(bad)
and
and
mov
in
nop
das
mov
mov
loopne
sbb
imul
in
aad
rol
test
adc
call
call
mov
dec
(bad)
and
push
pop
movs
adc
adc
or
jmp
adc
cmps
inc
or
add
popa
ret
xchg
push
xchg
xor
push
movs
or
adc
imul
adc
cmps
fdiv
adc
sub
mov
add
or
rcl
outs
mov
sbb
inc
push
inc
mov
xchg
xor
mov
ins
mov
or
cmps
cmps
and
movs
push
(bad)
ss
push
inc
jbe
lods
dec
sub
aaa
add
ins
jg
or
rol
mov
jmp
and
inc
xchg
cmps
mov
dec
mov
mov
sub
inc
mov
clc
imul
mov
and
dec
cmps
sub
adc
retf
add
sub
cmps
sbb
mov
mov
or
mov
sar
leave
cmps
push
inc
add
push
loopne
pop
sbb
push
call
push
dec
fadd
daa
inc
movs
push
push
pop
and
pop
mov
add
inc
sbb
mov
adc
lock
int3
adc
test
and
jns
or
mov
js
jge
add
call
pop
mov
test
rcr
mov
push
pop
xor
xchg
jb
jnp
(bad)
cwde
adc
mov
(bad)
ds
inc
sbb
dec
ins
sbb
jg
or
pop
add
inc
pop
nop
outs
dec
lahf
call
push
sub
ret
nop
loop
mov
fld
inc
adc
sub
in
nop
and
add
inc
xor
mov
push
ins
test
pop
add
mov
or
adc
stc
or
fcmovnbe
in
sbb
inc
clc
pop
push
xchg
movs
dec
or
or
mov
pop
adc
mov
les
loope
or
push
stos
xor
mov
shl
fwait
jecxz
xor
dec
sub
in
ss
xor
pushf
ret
ins
daa
in
int3
and
shl
or
or
test
inc
sbb
sbb
in
xchg
icebp
mov
cmp
out
fs
pop
cmps
or
mov
cmc
add
mov
leave
add
xchg
mov
mov
or
dec
pushf
jmp
popf
add
lods
sub
out
push
or
xor
cli
stos
clc
clc
nop
stos
jo
mov
sub
adc
xchg
xchg
push
dec
lock
test
pop
dec
hlt
add
inc
sub
call
out
push
push
mov
xchg
push
inc
sbb
ror
shr
cmps
add
lahf
mov
lods
xchg
lods
in
mov
or
push
nop
sub
or
mov
push
inc
fs
nop
retf
cwde
addr16
(bad)
pop
and
arpl
sub
cmp
xor
add
inc
add
adc
mov
ins
push
and
sub
lahf
xchg
mov
mov
stc
push
jae
and
pop
xor
dec
inc
leave
xlat
sbb
dec
pusha
lds
and
xchg
sbb
xor
push
fisttp
mov
sub
scas
add
dec
add
in
pop
call
dec
xor
pushf
push
add
sub
sub
add
mov
and
push
adc
cdq
cli
push
xchg
add
adc
xor
es
test
add
sbb
(bad)
aam
and
and
lock
(bad)
or
ja
call
adc
push
pop
jmp
mov
adc
pop
sbb
and
and
retf
dec
adc
inc
mov
xchg
cmp
ins
sbb
cmps
and
add
or
adc
add
xor
popf
xchg
imul
clc
or
shr
sbb
inc
les
push
sbb
cdq
mov
gs
aas
jmp
out
cmps
mov
mov
add
or
nop
jns
(bad)
push
cmps
cmp
push
sbb
and
jns
sbb
js
or
push
sbb
inc
mov
js
nop
iret
mov
xor
push
sub
add
inc
iret
hlt
sub
or
ins
or
push
rcl
(bad)
popa
adc
adc
add
test
outs
je
pop
sbb
mov
or
xchg
or
dec
add
mov
add
das
jmp
inc
xchg
adc
call
or
out
test
pop
lea
dec
cs
outs
xor
inc
nop
xchg
repz
xor
sbb
movs
jbe
xor
out
loope
mov
std
pop
mov
xor
and
pop
jge
outs
dec
add
mov
push
sti
sbb
mov
xchg
cli
cmps
dec
les
push
dec
sti
fstp
shl
leave
aam
jle
sub
sahf
rcl
mov
pusha
sbb
mov
sbb
sub
(bad)
cmp
imul
and
(bad)
fiadd
fnstcw
add
ficom
(bad)
dec
lds
adc
or
mov
push
and
add
xor
dec
pop
jg
hlt
and
add
jo
xchg
inc
mov
jne
inc
and
inc
xlat
fild
lock
hlt
mov
inc
sti
xchg
sbb
cli
adc
push
inc
pop
ss
mov
sbb
shr
adc
push
mov
neg
mov
inc
shl
inc
int
cmp
lahf
add
sub
add
or
cs
inc
sub
lods
test
or
jbe
daa
sbb
imul
adc
sbb
push
ins
loopne
aad
and
cmc
enter
mov
fwait
xchg
add
mov
jle
cli
add
xchg
cmp
ss
or
or
xlat
cmp
mov
pop
dec
mov
ins
addr16
push
dec
fld
push
xor
sub
jnp
jae
inc
push
loope
or
inc
jmp
jp
pop
cmc
and
push
test
jo
add
or
ret
call
data16
out
bound
add
arpl
js
sbb
or
dec
(bad)
daa
push
and
jg
pop
dec
lods
cmps
dec
icebp
ret
pushf
and
add
push
popw
mov
test
or
or
int3
enterw
pop
and
mov
adc
mov
movs
jbe
mov
xchg
sub
ins
or
pop
add
push
mov
push
and
sbb
push
test
sbb
sbb
push
push
mov
push
pop
jns
lock
adc
push
daa
mov
xchg
sbb
mov
cmp
inc
push
adc
xchg
sub
add
sub
test
add
push
dec
add
add
and
add
and
mov
or
push
sbb
daa
sbb
sub
pop
add
add
sar
jg
cmp
stc
xor
adc
fs
fldenv
neg
mov
inc
imul
fisttp
in
cmp
cmp
popf
ucomiss
jne
or
(bad)
sub
cwde
test
sub
sbb
ret
es
xchg
mov
pop
pop
loopne
bswap
loop
mov
aam
dec
inc
add
and
ret
push
inc
xor
xlat
add
icebp
and
xor
aaa
cmps
pop
and
or
and
pusha
sub
push
int3
sbb
add
fild
adc
inc
mov
push
jmp
fidiv
add
in
jo
ss
sbb
jmp
nop
mov
in
(bad)
arpl
pop
xor
pop
xchg
cmp
in
mov
test
lods
or
bound
add
ja
sbb
push
and
dec
inc
jns
dec
(bad)
(bad)
mov
scas
xor
dec
adc
or
dec
enter
movs
add
or
es
adc
pusha
mov
xor
pop
fiadd
fist
add
cld
imul
data16
mov
cmp
and
mov
adc
int3
stos
push
popa
inc
and
cmps
mov
push
arpl
lock
mov
in
dec
add
push
aaa
clc
iret
mov
mov
inc
pop
jl
mov
adc
lods
cmp
xor
sub
jl
inc
push
add
sbb
and
jmp
inc
add
in
inc
jns
xchg
cmp
fdivr
fdivr
imul
in
stc
add
adc
adc
je
or
add
lahf
pop
pusha
pop
sbb
adc
sahf
and
and
or
pop
mov
xor
or
mov
outs
adc
outs
pop
and
test
movs
mov
sub
imul
aam
add
dec
adc
js
jne
jmp
xor
add
cmp
imul
and
xor
stos
jnp
mov
or
jb
fstp
mov
pop
popf
and
cmp
xchg
jle
cmp
or
mov
push
cmp
xor
movs
mov
adc
push
cmp
aaa
in
imul
int3
inc
ins
pop
cmp
mov
or
add
pusha
sub
inc
call
mov
icebp
inc
mov
je
adc
movs
xchg
mov
pusha
mov
cmp
xchg
jmp
out
and
cdq
jp
jg
pop
loop
xchg
cmp
or
pusha
retf
fwait
cmps
clc
aam
in
sbb
mov
jns
add
test
fwait
mov
or
mov
add
cmps
in
imul
sar
mov
cmp
in
retf
xchg
rol
retf
rol
jmp
and
fmulp
ror
and
pop
outs
xchg
xchg
xor
test
inc
xchg
and
shl
rcl
push
jmp
test
addr16
fisubr
nop
imul
(bad)
pop
ins
mov
cmp
movs
and
fptan
and
addr16
js
mov
jl
mov
sub
(bad)
cmps
sar
mov
push
pop
mov
dec
ror
or
xor
inc
mov
pop
and
rol
out
or
gs
mov
pop
cdq
inc
ret
popa
pop
test
inc
and
leave
pop
les
loop
mov
mov
mov
(bad)
jmp
add
inc
imul
add
and
movs
loopne
add
adc
cli
pop
sub
cmp
daa
mov
push
adc
clc
ror
mov
sub
mov
in
(bad)
in
loope
(bad)
inc
sahf
lock
sbb
dec
in
imul
ret
or
loop
adc
popa
dec
add
daa
out
cmps
jb
shl
cmc
xor
cli
jne
dec
xor
test
or
mov
or
and
pop
mov
mov
sbb
das
push
movs
pop
stos
sbb
xchg
adc
jns
mov
ins
es
aas
mov
mov
inc
lea
les
cmp
or
xchg
les
jo
fstp
cmp
fdivr
add
leave
and
jb
in
and
push
push
les
adc
ins
sub
das
sbb
xchg
push
loopne
xchg
mov
or
addr16
and
les
aaa
clc
es
xchg
idiv
mov
cwde
(bad)
icebp
int3
adc
ret
movs
shl
push
cdq
dec
xchg
aaa
mov
mov
adc
movs
movs
xor
push
stos
sar
sub
ja
sub
mov
cwde
pop
nop
sbb
int
dec
outs
pop
popa
jne
xchg
mov
mov
(bad)
clc
jg
dec
xchg
outs
loopne
bound
adc
lods
jg
out
lds
pop
add
int3
(bad)
pop
mov
les
lds
addr16
pop
and
and
or
aaa
adc
dec
test
xchg
xchg
cmc
rol
and
rol
add
mov
(bad)
cmp
leave
mov
(bad)
aam
cwde
add
xchg
mov
push
sub
neg
xchg
dec
add
cld
(bad)
imul
aad
pop
gs
push
call
xlat
xchg
inc
sub
cmp
adc
test
xor
push
icebp
adc
mov
jbe
cmp
daa
mov
jecxz
push
sub
sub
inc
inc
jle
dec
shr
xor
and
loopne
sbb
and
push
and
sub
inc
retf
sub
(bad)
fisttp
sbb
mov
ins
sub
cmps
add
push
lock
ret
adc
xchg
inc
adc
dec
cmp
sbb
xchg
test
shl
nop
(bad)
lea
sub
mov
add
push
or
jg
inc
pop
push
add
cwde
fwait
adc
cs
mov
daa
dec
jo
push
aad
and
ins
shr
or
movs
sbb
lds
lods
push
cmps
pop
push
sbb
xor
enter
aaa
out
cdq
or
add
xchg
(bad)
and
dec
ds
retf
push
sbb
or
test
aas
fs
sbb
rol
repnz
xchg
mov
je
fs
je
and
mov
cmp
jmp
aaa
xchg
inc
mov
mov
or
(bad)
pop
cmp
pushf
sub
cmp
retf
cld
retf
inc
movs
rol
jns
dec
mov
loopne
ror
or
scas
fwait
add
je
cmovnp
pop
fnstenv
enter
enter
repnz
dec
xor
adc
in
pusha
mov
dec
jno
imul
mov
sub
pushf
xor
mov
nop
xchg
pop
inc
int3
leave
sub
test
sbb
cld
mov
add
popa
inc
and
xor
xlat
mov
shl
cld
add
cmp
sub
add
and
sbb
cmp
jno
jns
jno
rol
xchg
xchg
cmp
sbb
leave
lea
and
mov
and
test
(bad)
ffreep
jl
add
nop
dec
hlt
(bad)
cdq
cld
cmp
sbb
retf
add
xchg
sbb
xlat
push
fs
sub
mov
xchg
and
push
or
lea
and
call
jl
cmp
and
nop
or
adc
leave
pop
and
ja
mov
call
xchg
mov
in
push
or
jmp
imul
pop
mov
jo
sar
inc
cmp
adc
jne
dec
xchg
pop
add
cmps
pop
xor
mov
or
mov
ret
sub
inc
inc
sub
nop
out
or
bound
out
aas
mov
popa
and
arpl
inc
into
and
sub
inc
test
shr
xchg
inc
mov
cs
ins
iret
mov
and
je
mov
xchg
outs
jl
mov
add
test
dec
inc
dec
mov
mov
ins
arpl
add
add
fcom
jle
outs
pusha
leave
loopne
shr
sub
push
sub
inc
jmp
imul
add
sbb
and
adc
stos
push
rcr
add
mov
xchg
inc
(bad)
dec
cmp
ds
lods
popf
je
sbb
adc
mov
dec
dec
imul
sar
jmp
and
aaa
mov
mov
(bad)
adc
inc
mov
inc
mov
and
xor
add
cmp
push
in
nop
cmp
addr16
cmp
popa
mov
inc
arpl
outs
imul
push
cmp
ja
or
jp
je
jne
or
nop
inc
xor
lods
add
dec
sub
mov
call
test
add
fstp
sbb
jg
xor
push
jns
shl
jl
scas
hlt
add
cmps
into
dec
nop
adc
or
imul
or
mov
les
fiadd
or
es
pop
xchg
mov
and
dec
jns
dec
xchg
(bad)
test
sahf
cdq
into
stos
aam
adc
inc
nop
fistp
std
shl
add
or
mov
mov
and
mov
lock
dec
add
push
sbb
cmp
pop
fcom
test
push
add
and
inc
push
xor
cmp
or
add
push
pop
aam
xchg
push
xor
add
test
mov
cs
hlt
maxps
sbb
pop
fsub
jns
sbb
cmp
jl
sbb
inc
push
mov
outs
add
push
jns
sub
jns
rol
jmp
sub
mov
shl
and
es
daa
or
rol
adc
jns
test
adc
pop
jg
dec
push
inc
popf
scas
retf
mov
outs
popa
and
imul
lock
mov
je
mov
add
xchg
out
adc
push
push
pop
out
cmps
mov
daa
cmp
stc
jmp
mov
ret
add
xor
xor
addr16
mov
lahf
sbb
sub
cwde
jne
add
xor
cdq
add
mov
sbb
xchg
inc
pop
jl
dec
inc
xor
pushf
and
fmul
ret
pop
mov
xor
add
xor
mov
into
jne
mov
push
xchg
(bad)
fld
inc
sub
inc
pop
cld
stos
fmul
loope
add
in
inc
dec
pusha
sbb
jg
hlt
jno
es
sti
and
cmp
por
sbb
pop
inc
inc
es
and
cmps
adc
enter
mov
test
or
leave
cmp
ret
xor
or
cmp
adc
push
xlat
push
lea
push
push
jae
out
sub
inc
imul
lahf
shr
sub
add
add
and
jge
jne
push
add
add
inc
fstp
jge
inc
add
sub
cmc
jg
pop
retf
into
ins
inc
aaa
jmp
outs
aas
pop
(bad)
in
sbb
das
sub
cmp
jle
xor
int
je
pop
jne
and
ss
mov
enter
mov
and
mov
sbb
push
add
add
or
scas
and
add
push
test
outs
jnp
outs
push
ja
adc
add
jb
aad
pop
sub
aaa
test
call
arpl
add
jns
xor
push
inc
sub
pop
inc
in
in
pop
dec
lods
(bad)
inc
sti
mov
imul
xor
mov
push
and
test
shr
xor
push
xchg
popa
adc
gs
sar
or
cmp
adc
or
mov
cmp
mov
loopne
cmps
std
sbb
popf
aaa
pop
sub
jmp
cmp
jmp
retf
push
push
retf
loope
hlt
movs
mov
(bad)
xchg
je
and
shl
pop
xor
xor
scas
dec
stos
imul
rcr
repz
dec
push
fs
jmp
xor
or
pop
and
das
pop
sbb
add
mov
es
shl
aam
or
loopne
test
xchg
retf
sbb
(bad)
push
nop
ins
pop
adc
jbe
jle
jae
dec
shl
add
ss
inc
es
shr
dec
or
icebp
loopne
sub
mov
or
and
fmul
dec
sar
and
or
and
or
mov
sbb
xor
les
add
dec
xor
rcr
add
jmp
in
sbb
ret
pop
push
call
mov
add
mov
cmp
and
nop
xchg
pop
das
jecxz
sbb
inc
add
add
or
imul
jnp
int
sub
xchg
cwde
ret
xchg
sub
sub
pop
out
pop
je
mov
push
mov
movs
sub
sbb
jmp
jmp
sub
add
jge
jb
inc
mov
sti
lahf
mov
mov
js
xchg
inc
(bad)
cmc
cmc
xor
push
push
mov
inc
pop
aad
(bad)
mov
sbb
es
jecxz
pop
mov
test
int
sbb
jbe
push
xchg
in
aas
push
pusha
mov
enter
push
pop
test
sub
shr
test
ret
fild
ret
ja
inc
cs
pop
adc
dec
jmp
add
pusha
dec
mov
aas
gs
sbb
xor
xor
and
and
cmp
fwait
mov
xchg
xor
je
xchg
retf
adc
mov
movs
in
cmp
loopne
das
adc
sub
shl
add
inc
cmps
not
shl
pusha
les
push
push
inc
call
add
add
push
pop
push
cmp
dec
aaa
and
ja
adc
sbb
add
loope
mov
jne
mov
and
adc
int
(bad)
int3
sub
add
or
fwait
dec
inc
lds
dec
inc
and
sbb
sub
pushaw
xchg
or
lea
push
adc
test
add
push
inc
and
and
inc
sbb
leave
inc
jae
cmp
call
sbb
shr
ins
lahf
xor
pop
ret
inc
push
xor
call
out
bnd
mov
sbb
jne
jmp
add
test
ds
jb
cmp
or
enter
add
xchg
jl
adc
enter
push
sbb
and
push
pop
cwde
test
out
bound
mov
push
pop
pop
fcmove
and
loop
loop
sbb
push
sti
sbb
add
test
push
jmp
push
adc
and
outs
pop
push
fwait
jmp
mov
pop
addr16
add
bound
dec
jecxz
add
add
test
mov
add
dec
js
mov
push
mov
add
jns
add
push
xor
push
inc
sahf
in
pop
and
or
add
jae
into
inc
sbb
in
bound
loope
dec
test
mov
dec
mov
and
adc
or
dec
sub
mov
dec
xchg
add
(bad)
lds
mul
loop
mov
adc
arpl
lock
or
pop
jne
sbb
and
clc
out
rol
inc
jge
or
ins
ds
out
inc
pusha
out
out
push
mov
xchg
dec
add
in
pop
xor
cdq
dec
cmp
mov
pop
pop
add
jge
mov
pop
push
enter
adc
clc
adc
ret
stos
xor
js
sub
pushf
cmp
shl
jbe
inc
dec
xor
(bad)
ja
scas
push
(bad)
dec
xor
arpl
pop
push
cwde
cdq
jge
and
sub
jbe
xor
scas
adc
sbb
adc
sbb
mov
outs
push
pop
add
xchg
inc
imul
jmp
sbb
or
movs
cs
in
mov
add
or
push
mov
and
cwde
adc
push
les
movs
fnstsw
fs
pop
ss
inc
sti
mov
add
dec
out
ficomp
pusha
cmp
pusha
jmp
(bad)
xor
sbb
pop
sbb
xchg
dec
mov
scas
adc
inc
shl
ret
mov
pop
inc
test
(bad)
xchg
rcl
jmp
ret
int
sbb
jmp
sub
outs
mov
shl
add
jmp
in
test
inc
fs
nop
retf
pushf
jmp
jmp
das
jo
mov
mov
dec
cs
es
adc
sub
and
rcr
push
imul
fdiv
adc
sbb
jae
push
adc
das
and
jo
daa
jl
xchg
in
imul
sub
mov
loope
sub
aas
jne
xor
rol
nop
pop
cs
shr
dec
movs
pusha
adc
jns
sbb
out
push
out
and
xchg
dec
(bad)
adc
pop
fnsave
add
adc
sub
dec
dec
xchg
por
mov
fcmovnu
push
popa
push
ret
inc
ins
xchg
test
push
pop
xor
and
(bad)
fcom
loopne
sub
aam
loope
repnz
clc
cmp
and
push
aas
fbld
shl
inc
in
cmp
je
add
xor
jnp
popf
and
ins
inc
loop
sub
xchg
dec
int
std
mov
xchg
jecxz
pop
sbb
mov
pop
mov
test
add
pcmpeqb
bound
add
sbb
mov
popf
xchg
ret
imul
jl
lds
jmp
mov
push
dec
rol
cmp
and
push
push
push
inc
pop
pop
pop
pop
adc
test
or
add
adc
add
mov
inc
sub
add
pop
inc
daa
sub
and
ret
push
cdq
ins
and
or
xor
dec
mov
xchg
gs
repnz
jmp
or
or
test
popa
or
xor
sbb
in
inc
icebp
adc
ror
rcpps
loop
retf
or
sbb
pop
rcr
add
out
sbb
aaa
xor
sub
sbb
mov
add
mov
sub
push
(bad)
iret
(bad)
bound
mov
test
push
bound
sbb
outs
pop
add
ret
adc
mov
sbb
dec
enter
aam
pop
mov
outs
jle
sbb
jb
lods
or
adc
movaps
icebp
mov
xor
add
pop
and
sub
sbb
pusha
and
mov
jb
sti
dec
imul
inc
sub
push
mov
lods
daa
dec
(bad)
push
jb
sbb
sti
and
xor
inc
outs
(bad)
hlt
mov
(bad)
scas
mov
inc
ror
fisttp
ss
jg
dec
pusha
and
pop
pop
jg
icebp
push
mov
and
rcr
adc
xor
push
fimul
mov
inc
fimul
sub
mov
popa
xor
test
test
xchg
mov
enter
or
mov
aam
inc
shl
in
shl
cs
ds
dec
jae
sbb
adc
int
inc
xor
push
retf
adc
dec
xor
xchg
add
and
or
jg
dec
jmp
add
pop
nop
in
sbb
add
dec
pop
inc
mov
fst
ss
test
xor
(bad)
ja
add
xor
bound
pusha
(bad)
xchg
cmp
test
cmps
test
int
fdivr
push
nop
lahf
lods
jle
mov
fisub
dec
and
xor
mov
aam
sbb
fcomp
pop
int3
(bad)
fdivr
test
fst
jne
into
and
stos
mov
hlt
mov
shl
push
fst
je
aam
ss
xor
adc
sub
push
jecxz
aaa
add
sub
cld
cmp
pop
sahf
sub
and
cmps
xchg
inc
cmc
sub
cwde
out
out
test
inc
or
aaa
call
and
(bad)
adc
sbb
cmp
pop
mov
adc
pop
xchg
adc
dec
and
hlt
cmp
dec
mov
jmp
dec
add
jecxz
vmwrite
sbb
push
rcr
sub
sbb
mov
aad
leave
sub
lods
pop
movs
mul
add
sbb
fld
push
inc
cs
push
pop
clc
jmp
pop
xchg
cmp
xor
clc
push
push
nop
dec
add
sub
mov
jne
out
cmp
sub
es
les
sub
sub
jne
int
and
adc
hlt
add
jp
xor
call
inc
push
adc
jecxz
push
cmp
jl
das
test
jo
or
adc
retf
hlt
dec
pusha
enter
outs
inc
imul
pusha
xchg
mov
dec
mov
jns
mov
shl
cli
in
in
fadd
or
mov
mov
add
cmp
scas
stc
sti
hlt
add
ret
inc
pop
fs
je
div
jmp
jne
xchg
inc
xchg
xchg
imul
pop
push
mov
xchg
ss
sub
or
addr16
mov
add
sub
inc
and
pop
and
sbb
xlat
push
xor
and
and
arpl
cs
inc
shl
cmp
add
int3
aam
adc
leave
not
sahf
add
out
lea
mov
dec
mov
adc
test
xchg
sub
inc
mov
or
sub
mov
fsub
mov
push
or
mov
dec
sbb
jl
or
and
mov
enter
pop
adc
add
sbb
add
cs
in
xchg
add
enter
ret
sbb
(bad)
ret
in
cmp
fild
sub
loopne
push
push
lock
or
xor
sbb
sub
jo
push
cmps
inc
enter
xchg
sbb
inc
sti
inc
lock
daa
gs
and
rol
leave
xor
das
and
sbb
call
sbb
adc
scas
cmp
jg
fcom
push
mov
xor
sub
adc
push
jecxz
gs
xor
add
clc
and
xor
ror
sub
rol
pop
inc
sub
int3
add
loop
xchg
mov
inc
test
ret
or
lods
sub
and
fidiv
sub
test
or
icebp
fnstenv
or
xchg
sbb
movs
add
or
push
pop
inc
push
push
aam
jmp
mov
nop
aam
(bad)
enter
loopne
popa
test
imul
adc
xchg
sub
mov
loopne
fild
jecxz
xor
jl
sub
pop
js
pavgw
std
cmps
push
test
lods
test
and
std
call
sbb
fcomp
pop
push
mov
mov
fdivr
cmp
leave
adc
push
inc
mov
mov
movs
test
pop
inc
add
loopne
imul
push
bound
ret
jl
inc
cld
sysenter
lea
pop
(bad)
sbb
cdq
addr16
cld
push
rol
adc
imul
mov
(bad)
xchg
jns
movs
jmp
mov
mov
or
cwde
ins
pop
sub
sbb
pop
in
jp
add
addr16
adc
cmp
jg
repnz
mov
xchg
mov
arpl
add
mov
xlat
mov
mov
lea
push
mov
jmp
mov
add
ss
or
loope
push
iret
xor
xchg
std
add
cmp
sub
jmp
inc
and
imul
out
pop
inc
cmp
retf
adc
pop
add
jbe
idiv
test
xchg
sar
xor
sbb
inc
or
jg
lods
addr16
and
pop
cmp
sbb
jne
add
sub
mov
ja
adc
jp
cmps
outs
std
rcr
enter
dec
loopne
jg
mov
and
adc
xchg
arpl
jne
jae
jmp
sar
in
cmp
lds
mov
fist
jb
out
pop
fs
ds
pop
mov
mov
psraw
rcr
inc
sub
ins
fild
and
jmp
aad
cmp
and
add
push
pop
dec
push
ins
sbb
add
xchg
nop
cmp
dec
mov
js
cmp
dec
adc
lock
loopne
pop
push
mov
adc
add
and
cmps
pop
sub
pop
enter
sahf
pop
rcl
adc
in
mov
cmp
adc
and
aad
aaa
add
mov
dec
dec
es
inc
cmp
or
in
jmp
dec
das
aaa
dec
xor
lods
jp
mov
in
test
push
add
mov
cmp
pop
push
dec
cwde
add
jns
pop
sbb
pop
and
sub
adc
and
mov
lsl
mov
mov
mov
shr
mov
ins
dec
push
push
loopne
rcr
movs
push
xor
xor
push
aam
sbb
outs
(bad)
fst
xor
adc
in
retf
test
dec
bound
icebp
and
int
sbb
sbb
xchg
retf
enter
out
sub
or
mov
mov
sbb
nop
loopne
aam
in
jno
sub
sbb
and
enter
add
pop
aas
cwde
(bad)
or
js
or
inc
and
ins
add
aam
outs
jp
sbb
and
ss
rcl
jns
add
inc
add
dec
enter
and
sub
ror
pop
fdiv
add
lods
test
dec
in
imul
jl
adc
mov
addr16
je
fiadd
jo
cmp
pop
push
sub
sub
adc
push
(bad)
sub
xor
or
dec
mov
or
jl
add
pop
imul
jmp
movlhps
and
pop
add
sbb
ret
das
call
fnstenv
lea
out
lods
es
pop
push
ins
test
movs
div
or
add
mov
or
pop
inc
or
add
or
add
jge
inc
cmps
aam
sub
add
fstp
push
push
enter
mov
push
adc
push
mov
or
push
out
mov
and
or
imul
inc
or
adc
(bad)
adc
dec
push
sub
sbb
push
repnz
sbb
add
add
inc
dec
push
xor
mov
enter
pop
or
inc
sbb
push
mov
push
test
xchg
mov
lea
lds
jno
xor
sbb
jno
xchg
bound
lea
mov
mov
xchg
cmp
push
sbb
sub
inc
(bad)
fistp
inc
cld
sub
xchg
jmp
lock
lods
nop
sbb
cmp
push
inc
ror
dec
and
add
in
add
xor
out
add
or
pop
xchg
add
dec
inc
sbb
xchg
test
jp
cwde
add
sub
pop
sub
xor
cmp
in
or
jg
inc
dec
test
sbb
pushf
mov
xor
push
cmp
jge
jle
std
push
pop
or
shl
je
mov
dec
jl
xchg
mov
das
jbe
mov
ret
adc
or
es
ret
dec
and
jmp
jne
or
adc
sti
adc
inc
mov
and
es
sub
lea
lock
mov
sub
and
sub
loopne
mov
iret
xchg
cmp
xor
and
jb
syscall
inc
ss
add
jbe
sub
jmp
xor
mov
loope
sub
je
mov
hlt
sbb
mov
out
test
xchg
push
xor
addr16
inc
aad
shr
inc
xor
mov
sbb
xor
ins
movs
add
test
test
jne
pop
test
mov
cwde
imul
cmps
inc
add
fsubp
cmp
or
add
aad
dec
les
mov
add
xchg
repnz
xchg
test
push
dec
sub
adc
push
es
or
stos
mov
ret
stos
fadd
cmps
mov
and
in
sbb
jne
add
jecxz
cmp
dec
mov
or
push
rcl
add
or
scas
sub
push
mov
in
fsubr
add
pop
sar
gs
addr16
adc
(bad)
(bad)
cwde
sbb
lock
mov
dec
leave
js
inc
dec
jmp
xor
and
ins
and
bound
sub
jmp
xlat
pop
in
ins
push
daa
sbb
mov
push
std
gs
jo
pop
xchg
mov
pop
jnp
xchg
int3
loopne
push
cmp
loopne
fcomp
in
mov
inc
push
cmps
enter
in
scas
sbb
int3
xor
sbb
int3
sub
and
sub
xchg
adc
shl
pop
fwait
cmp
test
jg
inc
cmp
cmp
frstor
shl
mov
or
mov
xchg
ss
ror
call
mov
clc
shl
push
adc
and
pop
and
add
shl
xor
cmp
and
clc
and
out
pop
nop
pop
inc
adc
xchg
xor
jbe
adc
sbb
inc
je
pop
pop
dec
sbb
push
mov
outs
repz
or
or
sub
lahf
xor
pop
sbb
push
mov
add
dec
loopne
inc
loop
mov
stos
xor
or
add
and
out
xchg
push
sub
xor
xchg
jle
into
push
int3
sbb
push
ins
adc
dec
sbb
enter
mov
push
xor
gs
mov
mov
cmp
loopne
adc
sbb
into
popa
mov
test
ins
xchg
js
cmp
mov
and
into
test
or
cwde
inc
(bad)
std
fdiv
jmp
add
mov
mov
sar
add
sbb
cli
push
mov
ror
pusha
mov
fild
inc
scas
dec
or
outs
push
cdq
test
jmp
dec
and
pop
and
add
adc
jno
cmp
add
add
in
or
mov
mov
adc
test
sub
pushf
loope
cmp
push
iret
xor
mov
pop
add
xchg
and
jns
cdq
adc
pop
int
jno
xchg
add
sti
sub
dec
sub
in
movs
or
xchg
jo
(bad)
jmp
sbb
dec
fbld
(bad)
arpl
xor
and
xor
in
or
sbb
xchg
adc
or
jl
push
(bad)
int3
add
rol
loope
dec
imul
xor
in
sub
bound
mov
test
loope
in
out
or
xor
retf
push
pop
movs
dec
add
and
sub
or
rcl
pop
push
cmp
stos
or
mov
dec
mov
bound
add
jo
les
test
mov
loop
add
pop
sbb
mov
mov
imul
dec
outs
loope
sbb
cmp
push
mov
push
cmps
push
add
pop
xchg
pop
or
or
cmp
stos
cmp
lods
inc
test
mov
dec
sbb
outs
adc
push
push
mov
inc
sbb
ds
inc
add
test
or
stc
and
imul
int
ins
mov
mov
add
push
pop
add
dec
or
push
cmp
add
inc
add
xor
push
aam
push
in
dec
push
stos
add
adc
std
add
(bad)
xor
adc
nop
cdq
xor
mov
ret
inc
ins
xor
pop
mov
dec
and
(bad)
mov
jge
or
or
test
test
dec
movs
cs
rol
data16
and
test
jne
pushf
and
retf
add
retf
(bad)
movs
mov
xor
add
loopne
pop
and
mov
ficom
jno
fdivrp
dec
jne
or
shl
xchg
xor
add
mov
imul
imul
inc
fadd
out
mov
or
out
int3
jmp
pop
in
hlt
cmp
jl
mov
xor
rep
add
arpl
sbb
test
push
jmp
in
aaa
int
dec
test
mov
inc
mov
cdq
les
ror
xchg
dec
adc
xor
out
and
dec
dec
sahf
ret
fild
and
mov
leave
fiadd
lods
dec
jge
daa
push
lea
ins
dec
pop
and
or
(bad)
sar
lock
and
mov
pop
cld
fs
jo
ins
call
int
call
push
ss
mov
cmp
inc
fld
mov
jmp
mov
mov
jecxz
cld
js
lahf
(bad)
jmp
adc
xor
in
cmp
rol
in
scas
fsubr
dec
es
xlat
add
or
clc
mov
je
mov
retf
push
in
mov
retf
test
add
cwde
sbb
retf
fiadd
in
mov
mov
test
test
inc
add
fnsave
cmp
sbb
outs
dec
cmp
dec
jle
mov
pop
mov
sbb
xchg
and
sbb
lahf
ret
inc
movs
pop
mov
cmps
dec
loope
stos
out
cmp
fwait
jne
dec
loope
jne
jne
inc
bound
inc
inc
imul
push
or
xor
jmp
test
dec
cmps
cmp
mov
or
push
adc
stos
aaa
sub
or
hlt
pop
or
adc
add
pop
mov
pop
out
pop
dec
lea
jle
push
or
xchg
aad
pushf
test
or
xor
test
xor
clc
inc
pop
outs
pop
sub
mov
or
cmp
dec
dec
je
shl
dec
or
add
inc
lods
add
adc
or
or
popa
sub
call
cmps
push
mov
cmp
repz
cmps
hlt
popf
and
inc
pop
add
stos
cmp
js
int3
mov
cmp
sahf
mov
sub
xor
stc
aas
xchg
loopne
add
inc
call
fcom
enter
adc
push
and
or
jae
jo
adc
xchg
fsubr
sbb
(bad)
loopne
lods
xor
cmp
cmp
mov
pop
inc
push
test
pusha
ja
stos
mov
jo
call
or
xor
ret
mov
out
rcl
mov
sbb
add
les
sub
repz
aaa
dec
mov
das
push
or
or
xchg
add
sub
adc
add
dec
push
jb
xor
xchg
aam
mov
daa
cmp
rol
aas
in
jmp
sub
pop
sbb
add
pop
in
mov
cmp
imul
cmc
push
xor
dec
ja
mov
call
sbb
add
stos
test
jmp
ror
sub
mov
(bad)
pop
inc
inc
bound
xchg
rol
dec
(bad)
and
add
push
jb
cmps
push
xor
xor
adc
mov
dec
inc
lock
scas
and
das
in
movs
add
xchg
das
add
mov
adc
add
add
xchg
hlt
das
or
iret
jmp
sub
mov
ins
(bad)
adc
or
into
or
dec
ror
lods
iret
in
add
or
je
jne
push
jmp
add
inc
fstp
sub
mov
iret
adc
and
or
add
or
push
loop
mov
aad
xor
inc
cmps
pop
sbb
mov
or
pop
mov
mov
pusha
xor
cmp
jle
inc
adc
pop
push
(bad)
scas
test
pusha
xlat
cmps
push
add
cmps
or
mov
popf
in
jns
sub
test
or
push
in
push
dec
inc
push
push
dec
ins
add
ret
mov
icebp
rcl
xor
mov
sub
int
sub
les
(bad)
shl
push
or
fstp
xor
jl
push
es
mov
jecxz
cwde
cmps
pop
mov
pop
mov
xchg
js
fs
dec
inc
dec
sbb
outs
adc
ins
inc
push
xor
data16
outs
sbb
pop
dec
adc
mov
jmp
stos
sub
es
das
and
or
adc
mov
outs
push
ins
jnp
test
or
ss
sbb
sbb
cmps
cmp
outs
out
fwait
popa
sub
push
ins
outs
or
pop
and
addr16
cmp
dec
add
test
or
adc
or
mov
lds
mov
dec
test
xor
pop
push
nop
add
ja
cmp
nop
dec
jb
enter
enter
mov
mov
sbb
sub
aas
mov
popa
sub
sbb
sub
imul
add
or
lahf
xor
adc
bound
pop
xchg
lods
push
jmp
ret
or
xor
loop
push
or
pop
movs
mov
or
scas
adc
add
mov
jnp
pop
adc
aas
push
and
mov
cvtps2pd
shl
ror
sub
xor
sub
mov
xor
add
push
or
pop
ins
xchg
mov
push
adc
rcl
(bad)
les
dec
iret
or
adc
(bad)
add
add
sbb
xchg
adc
mov
xchg
test
mov
or
xor
add
mov
inc
inc
mov
cmp
cli
dec
cmp
adc
jne
or
mov
sub
xor
pop
mov
or
and
jno
mov
or
mov
in
xor
jns
or
xchg
inc
call
jmp
jmp
and
lods
pop
mov
add
jmp
fcmovnbe
je
loop
bound
pop
sbb
mov
xor
test
loopne
cmp
xor
imul
or
inc
lods
rcl
dec
pop
test
push
adc
sub
nop
sahf
stos
lea
test
rcl
ins
add
arpl
cmp
test
fcom
xor
xor
in
mov
push
and
push
je
dec
retf
imul
xor
jl
xlat
dec
push
inc
push
inc
pop
mov
mov
inc
mov
movs
retf
mov
fcomp
rcl
in
add
clc
or
fxch
mov
mov
adc
xchg
xlat
shl
test
mov
ret
add
cmp
sub
daa
adc
and
adc
push
aam
repnz
ror
add
dec
movs
add
test
jae
or
cli
jo
ret
inc
retfw
outs
xchg
outs
cmp
leave
rcr
xor
cmp
jp
and
or
xor
inc
ficom
xchg
or
jo
or
leave
add
dec
ret
mov
lock
jmp
jbe
pop
cwde
cmp
sbb
retf
pop
lods
rcr
shr
and
dec
add
add
arpl
mov
pop
ficom
dec
ins
push
add
sub
js
jmp
or
jns
inc
stos
mov
call
enter
pop
das
add
push
enter
ins
jmp
add
call
mov
mov
xor
imul
inc
adc
cmp
and
dec
adc
or
test
or
and
lds
xchg
(bad)
mov
jno
ds
mov
sbb
sub
lods
or
hlt
and
adc
add
iret
dec
add
mov
mov
pushw
lea
mov
jnp
xchg
lar
sbb
sbb
dec
or
aam
xor
cmpxchg
mov
jns
xor
jle
mov
mov
mov
dec
cmp
sub
mov
xchg
or
int3
xchg
outs
mov
mov
in
cmp
mov
inc
and
dec
pop
and
adc
push
call
jo
xchg
inc
dec
inc
xchg
adc
add
cwde
fs
jo
inc
shl
ss
and
inc
adc
cli
mov
mov
mov
shl
xor
xor
xor
xchg
sub
dec
sub
cmp
jmp
test
adc
inc
push
sbb
aaa
push
cmp
imul
and
lods
push
or
mov
push
add
sbb
popa
xor
hlt
(bad)
leave
popa
jp
ret
xchg
or
mov
jo
and
sbb
aaa
push
xchg
xchg
mov
lea
inc
cmp
push
adc
retf
xor
mov
inc
fisttp
aam
xchg
out
jbe
fs
or
cmps
jo
cmp
movs
lods
das
inc
mov
add
inc
mov
neg
fsubr
jne
push
xor
ficom
push
mov
andnps
in
or
(bad)
sbb
adc
shl
cmp
inc
sbb
out
pop
add
mov
fiadd
ret
adc
es
inc
add
lea
in
mov
(bad)
adc
xor
push
add
les
aad
mov
push
xor
inc
ja
inc
cdq
enter
hlt
mov
or
outs
arpl
in
xchg
pushf
xchg
cmps
dec
fsub
push
push
add
adc
je
push
cs
and
sub
mov
mov
daa
test
imul
jecxz
dec
push
xor
cmp
mul
ja
in
adc
adc
enter
or
mov
outs
or
xor
ja
neg
in
mov
jb
aaa
mov
nop
shl
imul
add
mov
test
or
dec
add
ror
mov
cs
inc
jo
cwde
or
adc
aad
mov
xor
sar
xchg
punpcklwd
jle
adc
xchg
cwde
fwait
xchg
or
into
xchg
xor
mov
bound
punpckhwd
dec
and
or
add
inc
arpl
out
cmovae
pushf
push
(bad)
jmp
mov
test
and
adc
jle
or
into
loopne
mov
dec
ret
test
adc
les
popf
inc
imul
or
push
push
or
push
xlat
and
or
enter
clc
dec
dec
mov
mov
xor
jb
pop
cmp
je
fidivr
not
mov
xor
add
dec
inc
mov
outs
inc
xor
cmp
jl
mov
pop
adc
nop
jle
or
fisub
xchg
xchg
scas
shr
ret
push
retf
dec
bound
adc
imul
loope
mov
push
icebp
and
mov
mov
shl
add
adc
js
xchg
or
ins
push
jae
and
add
mov
and
popa
jnp
xor
nop
in
push
nop
push
jb
(bad)
mov
mov
and
mov
mov
cmps
test
push
adc
dec
adc
js
add
jno
jbe
and
cmp
cmps
xchg
loop
lea
lock
lds
retf
push
or
icebp
sub
enter
mov
xchg
jne
loopne
mov
fiadd
xchg
nop
push
and
or
adc
sub
mov
or
imul
dec
cld
add
xchg
jo
inc
arpl
shr
outs
aaa
cmp
in
sub
push
push
adc
lods
outs
add
cmps
pop
push
fstp
lea
or
push
call
add
pusha
adc
cmp
(bad)
add
inc
or
int3
dec
mov
add
(bad)
loope
and
cmp
sub
test
add
lock
fisub
mov
outs
nop
push
mov
in
add
ins
aas
aam
pop
dec
xor
xchg
or
adc
scas
cs
sub
adc
ss
xor
fsubrp
and
inc
ins
pop
sbb
cmp
sbb
sbb
pop
das
mov
inc
push
cwde
mov
(bad)
cli
(bad)
mov
pusha
lea
inc
mov
aas
aaa
cmps
retf
add
ins
xchg
sub
dec
inc
sbb
jbe
adc
cmp
pusha
or
push
mov
jnp
and
push
loopne
sbb
dec
dec
xchg
and
mov
and
dec
push
jecxz
sub
inc
dec
fst
stos
inc
sbb
add
fcmovnb
fild
or
cmps
mov
push
inc
stos
popa
fdiv
les
adc
inc
xor
shl
push
cmp
sbb
repnz
jbe
not
clc
mov
sub
sahf
or
pop
shl
mov
arpl
retf
rcr
movs
pusha
add
enter
movs
test
mov
lds
(bad)
test
push
adc
adc
add
sub
(bad)
adc
sub
push
inc
nop
fwait
mov
inc
cmp
xor
rol
aaa
cmp
mov
adc
and
retf
sub
xchg
mov
xor
sub
packuswb
test
aaa
enter
aad
inc
leavew
add
push
and
es
pop
sbb
rol
adc
add
loopne
and
movs
dec
hlt
lock
jne
bound
ins
cmp
icebp
pop
push
dec
mov
(bad)
push
or
pop
stos
aad
dec
adc
fisubr
add
sub
and
fwait
daa
push
loopne
pop
in
popf
jo
xchg
cmp
lock
(bad)
mov
and
les
xchg
dec
shl
jg
adc
lods
inc
jbe
inc
add
dec
lds
pop
or
lods
cmp
aas
or
and
sub
and
clc
and
jge
imul
call
mov
sub
dec
imul
xor
out
scas
adc
or
pushf
xor
(bad)
and
push
adc
cmp
and
sub
adc
xchg
mov
repnz
jo
or
dec
xchg
shl
mov
scas
cld
mov
jb
clc
fld
ds
sub
xchg
pop
and
push
inc
xchg
push
add
cmp
push
bound
mov
movs
adc
xchg
out
repz
push
push
or
in
bound
cli
mov
and
addr16
jb
pusha
inc
add
and
and
mov
jbe
push
sbb
add
sahf
imul
add
xchg
add
test
push
pop
stc
or
or
mov
push
pusha
sub
and
xlat
xchg
jl
xchg
add
les
es
add
dec
lods
xor
inc
push
mov
push
je
cld
and
jle
push
xchg
or
or
jecxz
aaa
popa
inc
cmps
push
or
in
sbb
mov
cs
sub
loope
adc
nop
cmps
nop
shl
jbe
jo
leave
div
inc
pop
and
adc
or
push
inc
mov
mov
mov
not
or
mov
sbb
inc
pop
into
(bad)
test
adc
adc
sbb
xchg
test
das
push
ret
nop
hlt
dec
sub
and
mov
dec
adc
add
das
adc
or
xchg
inc
ins
inc
push
jae
jae
sub
and
pop
adc
mov
add
and
add
mov
shr
(bad)
jne
pop
xor
adc
sbb
pusha
sar
adc
add
and
out
mov
not
(bad)
or
imul
shl
mov
or
rcr
or
adc
aam
xchg
mov
pop
sbb
cmp
sahf
test
or
add
aas
add
pop
dec
outs
arpl
std
or
jne
cmp
stos
jne
mov
popa
aad
test
movs
loope
xchg
outs
dec
ror
ins
test
mov
pop
bnd
sbb
inc
inc
mov
es
mov
add
mov
mov
lods
dec
or
inc
sbb
pusha
sbb
mov
nop
(bad)
sub
push
xchg
sub
mov
cmp
add
dec
popf
pop
xor
imul
int
add
jno
fdiv
mov
or
add
push
sbb
and
ret
scas
pop
xor
fild
adc
cmps
repz
push
push
push
mov
mov
icebp
fadd
dec
sbb
test
sbb
cwde
jmp
inc
inc
add
sub
fcomip
pop
dec
hlt
add
cs
imul
mov
mov
inc
cld
jecxz
push
hlt
or
fstp
add
popf
add
sbb
xor
dec
inc
sub
aaa
or
lock
jp
jmp
popa
pop
sub
mov
mov
(bad)
fld
or
loopne
and
push
mov
mov
lods
pusha
and
adc
int3
call
fsub
cmps
fcomp
pop
add
enter
fmul
hlt
jge
retf
and
aam
dec
push
and
hlt
aam
mov
adc
cld
push
fsubr
or
fwait
xchg
ret
fisttp
arpl
jns
rol
adc
cli
adc
cmp
xor
add
bound
dec
stos
dec
inc
cmp
and
push
retf
ja
sub
pop
xchg
cmp
lea
shl
(bad)
or
sub
(bad)
aaa
mov
ds
inc
dec
inc
push
pop
push
inc
and
div
aas
mov
and
or
xor
shl
and
das
adc
inc
dec
and
(bad)
xor
iret
outs
push
cmp
or
(bad)
std
dec
inc
push
inc
and
je
sub
jbe
lahf
add
stos
pop
sub
adc
cmp
into
sub
mov
jne
mov
add
das
(bad)
bound
jns
and
in
adc
sub
and
sub
ins
mov
pop
call
cmp
dec
imul
inc
rcl
xchg
call
or
pusha
fld
xchg
or
fsub
and
icebp
dec
cwde
dec
mov
dec
pop
inc
pop
(bad)
push
pop
retf
mov
dec
fs
jne
mov
stos
(bad)
fisub
in
cli
ins
jns
cmp
adc
mov
mov
mov
(bad)
pusha
in
or
cmp
out
imul
clc
mov
pop
in
dec
call
cmp
push
inc
test
push
cmp
jb
or
cmp
test
cmps
sub
jb
inc
loopne
sub
in
adc
(bad)
and
repnz
xor
les
sub
and
iret
push
xchg
mov
and
xchg
jno
jl
or
daa
sub
add
pop
add
inc
mov
ins
mov
cmp
push
aaa
cmp
sahf
cmc
out
lds
pop
push
hlt
(bad)
je
dec
ss
sbb
(bad)
fcomp
and
jne
dec
push
mov
fild
jl
push
dec
sub
sahf
cld
fcomp
fdiv
or
mov
inc
loopne
inc
or
arpl
test
bound
or
int3
test
and
push
pushf
cmp
ins
imul
inc
and
addr16
das
add
cmps
fisub
inc
cdq
clc
dec
retf
push
mov
sti
add
inc
das
fistp
cmc
cmp
and
mov
shr
dec
mov
add
mov
loopne
add
mov
lock
frndint
xlat
dec
test
pushf
cmps
xor
xor
dec
imul
add
push
and
add
adc
addr16
and
pop
xchg
jo
add
jmp
xor
sysret
xor
(bad)
mov
mov
inc
push
and
hlt
inc
inc
cdq
hlt
shr
cmp
jle
inc
adc
popa
xor
(bad)
es
inc
leave
hlt
and
adc
in
or
pop
add
sub
cld
lods
push
cld
ret
mov
jno
push
mov
in
adc
jmp
sbb
dec
pop
loopne
jl
sub
dec
les
enter
repnz
pop
or
ror
add
sbb
and
adc
or
mov
ror
inc
leave
inc
sar
sbb
xor
jns
pop
iret
cld
pop
add
(bad)
jge
add
push
lahf
xchg
cmp
add
add
xchg
or
iret
sub
pop
imul
adc
add
pop
or
inc
adc
call
sub
cmp
jl
jge
and
and
xor
xor
in
test
sbb
or
adc
(bad)
and
pop
xchg
enter
jmp
test
push
and
dec
ret
push
xchg
xor
lods
mov
aaa
mov
popa
adc
jmp
test
sub
cmp
xchg
jmp
push
xchg
or
sbb
and
test
pop
inc
sbb
or
xor
popf
xchg
aad
sub
movs
xchg
dec
lods
add
inc
stc
push
mov
jb
mov
sti
ret
rcl
push
or
push
push
iret
lods
or
adc
mov
les
mov
and
xchg
push
in
je
popf
repz
mov
cmp
or
mov
add
je
and
test
pop
xchg
sbb
popa
sub
jge
mov
mov
push
je
pushf
hlt
stos
loopne
pop
pushf
adc
pusha
dec
sub
mov
sub
mov
inc
fld
fwait
pop
call
push
mov
nop
cmp
mov
movs
xor
inc
xchg
sbb
(bad)
mov
push
sbb
or
rol
push
int3
aad
or
movs
bound
imul
in
or
sub
and
dec
loopne
sub
clc
push
loopne
mov
or
inc
inc
dec
push
cmp
push
ret
repz
xchg
cs
and
pusha
lahf
test
enter
int3
push
and
or
xchg
xchg
pop
dec
pusha
cmp
add
cmp
mov
adc
lock
hlt
scas
mov
adc
push
mov
test
mov
arpl
aaa
or
inc
popf
les
jbe
dec
add
daa
jne
mov
jnp
dec
xor
nop
nop
sub
xchg
mov
push
push
sti
mov
mov
mov
je
mov
or
dec
cmp
gs
jne
add
mov
jecxz
lds
lds
nop
movs
arpl
in
cmp
or
add
arpl
xor
dec
dec
xchg
xor
stos
push
(bad)
int
imul
pushf
inc
pusha
push
jno
fld
das
arpl
clc
adc
mov
inc
or
or
cmp
mov
dec
or
pop
and
bnd
sar
fdivr
das
aam
add
test
sbb
mov
fs
or
cmp
aas
dec
add
xor
adc
add
test
sub
dec
push
xor
xchg
bound
dec
mov
adc
daa
sbb
mov
cmc
xchg
adc
jmp
nop
dec
push
fidivr
pop
push
jae
cmp
mov
or
mov
sub
leave
push
rcl
mov
jae
rcr
push
fst
jecxz
cmp
dec
stos
sub
add
nop
and
cmp
ret
cdq
sbb
in
mov
and
aad
int3
sbb
pop
mov
cwde
sbb
pop
cmp
dec
push
fsub
cmp
je
or
push
cmp
mov
call
stos
icebp
dec
xchg
(bad)
jmp
cmp
retf
add
xor
ja
push
or
mov
cli
cmp
mov
mov
inc
ins
push
ret
sbb
cmp
sahf
add
pop
mul
jo
mov
cmp
js
and
popf
push
jne
push
fbstp
int
sub
pop
cmp
out
out
imul
aas
icebp
sbb
cs
dec
jge
test
je
lea
jae
jns
push
or
cmps
out
xor
mov
jae
xor
pop
repnz
outs
outs
add
sub
xchg
or
cmp
(bad)
fmul
xor
pop
pop
xor
ficomp
mov
push
jo
add
std
out
mov
fisttp
sub
xor
fwait
shl
out
and
mov
sbb
and
mov
das
mov
test
add
lds
or
es
xor
arpl
inc
das
inc
mov
dec
ret
bound
les
sbb
push
jae
dec
xor
ret
cmp
push
jg
arpl
out
mov
frstor
rcr
cmp
outs
mov
push
loop
int
jo
out
mov
out
loope
jb
ins
and
imul
pop
cmp
or
pop
popa
xor
or
rcr
push
scas
fidivr
daa
or
jo
les
ja
xor
cmps
add
iret
inc
ds
jb
sbb
ret
loope
xor
ds
mov
or
xchg
pop
xchg
loopne
pop
ds
bound
pop
xor
fisub
sub
dec
ins
gs
adc
sbb
rcl
and
ja
xor
outs
pop
addr16
repnz
jbe
mov
mov
jno
sbb
int
mov
and
fld
cmp
mov
cmp
mov
or
cmps
(bad)
jbe
hlt
pop
mov
ds
mov
jg
mov
fsub
add
pop
push
sub
data16
in
leave
push
push
mov
data16
cmp
in
nop
in
mov
or
pop
mov
mov
xchg
in
pushf
xchg
stos
(bad)
fdivr
fcom
in
mov
mov
sbb
iret
xlat
pop
arpl
mov
in
adc
jge
les
add
mov
pop
sbb
and
dec
aaa
adc
push
xchg
dec
cli
cli
sbb
xchg
enter
pop
mov
mov
pop
aas
inc
sbb
or
pop
or
cmps
pop
push
in
or
lock
or
lock
mov
or
jnp
rol
sti
loope
sbb
(bad)
cmp
fisttp
mov
retf
movs
adc
aas
in
push
in
mov
cmp
dec
or
sub
sbb
movaps
inc
ss
fild
sar
or
(bad)
test
fild
les
jae
pop
add
and
data16
mov
mov
pop
bound
outs
enter
push
gs
ficomp
add
loopne
shl
push
jmp
or
fisttp
in
hlt
cmp
imul
test
push
jmp
or
(bad)
inc
retf
mov
xchg
pop
xchg
test
mov
movs
sub
lds
dec
mov
rcr
mov
xchg
push
jb
ja
pop
mov
mov
adc
add
imul
pop
daa
test
add
popa
fild
fdivrp
imul
mov
cli
test
adc
mov
lods
jne
jmp
ins
imul
mov
xchg
push
jb
mov
cmp
jbe
sbb
pop
xor
adc
sub
(bad)
sbb
iret
sbb
stos
jne
sub
sub
sbb
dec
or
xchg
push
mov
push
rcr
dec
out
mov
sbb
das
xchg
cmp
shl
lds
or
test
(bad)
push
dec
mov
mov
sbb
mov
xchg
mov
shr
fcom
sbb
neg
and
mov
or
enter
xchg
mov
les
cmp
and
or
mov
lods
(bad)
and
sbb
pop
jp
repz
ret
add
or
pop
pop
out
pop
mov
inc
inc
and
mov
inc
in
cmp
mov
adc
add
push
lds
jmp
adc
dec
jo
sbb
xchg
dec
or
jae
and
sbb
add
sub
xor
mov
sbb
or
add
enter
pop
mov
movs
leave
retf
imul
push
movs
ret
test
and
or
test
dec
pop
inc
or
js
dec
loope
imul
adc
inc
sub
js
icebp
mov
or
fs
xchg
adc
xchg
cmp
dec
adc
jnp
push
pusha
xchg
push
dec
repz
test
(bad)
popa
push
imul
or
(bad)
outs
ret
nop
dec
or
xchg
daa
les
enter
fst
dec
adc
adc
pop
xlat
xchg
sar
ja
or
aaa
imul
js
mov
loope
dec
adc
mov
jb
mov
cwde
pusha
or
and
xchg
ins
stos
xlat
iret
or
jnp
je
push
clc
or
jnp
jmp
xor
xor
xor
ins
sub
test
sti
and
xor
push
adc
ins
add
and
and
ror
retf
aas
mov
rcl
gs
jae
fs
xor
outs
pop
cmp
or
ins
add
adc
fldcw
inc
adc
popf
int3
mov
test
ret
jge
ja
popf
sub
lock
(bad)
in
shr
loopne
mov
cmp
push
fbstp
mov
cld
pop
jne
cmp
pop
adc
loopne
cdq
dec
test
mov
and
and
aad
sub
push
and
sbb
fiadd
call
push
int3
mov
mov
mov
push
adc
call
enter
arpl
xchg
outs
adc
jmp
and
ror
jnp
xor
push
dec
adc
add
mov
mov
or
jnp
add
and
inc
add
dec
xchg
and
lods
mov
aam
jno
sbb
mov
out
or
or
or
pop
dec
mov
xor
adc
int
pusha
jge
sub
stos
cmp
jbe
adc
mov
sbb
loope
icebp
out
mov
dec
out
and
lahf
lods
fsub
sub
in
aaa
ins
lods
pop
push
out
test
cmp
test
mov
dec
psubsb
pop
sub
xor
out
imul
dec
scas
loope
mov
pushf
xor
cwde
dec
pop
and
inc
fld
xchg
dec
or
jns
je
sub
rol
mov
mov
sub
jno
add
add
outs
and
test
adc
add
cwde
sbb
sti
or
xchg
lods
and
jns
and
inc
jb
sbb
jl
add
xchg
sbb
(bad)
fcomp
loop
loop
neg
js
pushf
enter
aaa
adc
mov
test
mov
lock
mov
in
loopne
pop
stos
and
jp
xor
int3
(bad)
add
and
movs
push
bound
mov
sbb
enter
(bad)
repnz
imul
out
mov
xor
sbb
loopne
xchg
icebp
add
nop
add
push
in
sbb
and
push
fstp
and
sub
mov
scas
jp
test
daa
mov
xchg
fcomp
ss
mov
fnstsw
fwait
dec
loope
mov
adc
mov
stc
sbb
mov
lods
xchg
out
inc
cmp
jns
adc
dec
xchg
(bad)
rcl
and
sbb
push
xchg
xchg
and
cmp
scas
pop
je
pushf
scas
outs
and
iret
mov
pop
inc
cmps
sub
mov
sbb
jp
test
push
sbb
xchg
loope
lea
fiadd
inc
xchg
das
jo
lods
clc
in
ror
mov
and
test
jmp
mov
add
adc
xor
das
inc
mov
popa
adc
pop
xor
cmp
push
dec
aas
push
push
lods
mov
inc
gs
add
add
push
jmp
sub
jne
push
mov
xchg
jl
leave
jp
inc
add
add
in
cmp
inc
add
xchg
mov
inc
pop
jbe
sbb
sbb
sub
fst
and
add
mov
fmul
das
or
mov
adc
push
lds
ins
push
jmp
push
out
mov
push
mul
movs
add
aam
call
add
retf
out
dec
pop
test
and
ins
into
lea
xor
out
iret
inc
sub
push
mov
ins
jmp
push
inc
adc
iret
int3
test
leave
jl
xchg
fs
add
loop
push
sub
(bad)
dec
adc
push
out
ins
cmp
jecxz
push
mov
sub
or
sbb
inc
and
or
ss
out
fnstcw
jae
mov
sbb
add
or
mov
jmp
sub
or
add
inc
jecxz
jmp
arpl
(bad)
add
inc
ins
and
mov
pop
jp
push
add
add
push
dec
inc
dec
adc
pop
mov
adc
shl
jb
fidiv
jae
inc
cs
sub
adc
add
pop
push
dec
push
mov
adc
and
cmps
retf
outs
fnstenv
push
sbb
outs
bound
in
add
es
jae
shl
repnz
push
arpl
pop
cmp
push
ja
fs
ins
sbb
pop
(bad)
mov
out
push
popa
pop
jbe
fnsave
inc
jae
ins
push
fidiv
cmps
mov
popa
iret
sahf
push
add
adc
fistp
mov
mov
cmp
and
dec
cmp
jmp
arpl
push
stos
bound
push
jo
jbe
adc
ja
(bad)
push
mov
pop
mov
dec
fs
or
mov
das
lods
xor
mov
dec
dec
and
sub
jo
outs
cmps
xchg
sub
push
stos
sbb
outs
sbb
sub
leave
fld
fnsave
stos
into
sbb
loop
xchg
sub
pop
dec
sahf
pop
push
ret
ret
(bad)
push
outs
retf
cmps
pop
ret
adc
xor
mov
jmp
dec
mov
fld
repnz
mov
jns
dec
iret
popw
addr16
cmp
mul
xor
(bad)
pusha
ss
dec
(bad)
push
inc
call
push
je
scas
inc
(bad)
repnz
dec
imul
sub
mov
and
push
jbe
mov
jbe
and
je
adc
dec
sbb
sbb
pop
cmp
outs
xor
sbb
inc
jne
push
outs
out
push
mov
xchg
dec
out
mov
aaa
outs
and
adc
data16
push
mov
imul
dec
mov
push
mov
jecxz
cmp
or
push
jmp
jno
xchg
mov
(bad)
loop
mov
pop
mov
aad
inc
(bad)
add
xchg
shl
jp
add
dec
mov
push
pop
or
mov
sbb
mov
aaa
adc
outs
dec
outs
cmp
xchg
mov
call
push
ficomp
and
jno
xchg
ds
loopne
xchg
add
inc
xchg
jb
mov
and
inc
enter
(bad)
xor
pop
xor
scas
cmovs
push
xchg
xchg
inc
push
inc
sbb
jg
push
movs
jmp
pusha
ror
cs
dec
iret
adc
outs
ins
neg
pusha
or
lds
ffreep
(bad)
fadd
popa
pop
outs
inc
jnp
data16
dec
shl
pop
jae
and
pop
dec
fistp
call
inc
xor
cmp
sbb
ds
popa
pop
loop
mov
sbb
or
jo
jo
mov
push
daa
jb
sub
dec
repnz
outs
xor
ins
jmp
pop
mov
das
mov
sbb
push
retf
jo
popa
jo
or
bound
sbb
mov
push
inc
pop
out
shr
or
les
push
es
ret
mov
mov
nop
xchg
arpl
push
cwde
cmp
stos
ins
fidiv
add
dec
ja
pop
stos
mov
popa
sbb
sbb
jno
push
movzx
cmps
pop
xchg
data16
pop
and
jnp
sbb
jmp
(bad)
mov
jo
mov
sub
fwait
scas
mov
adc
cdq
fs
cmp
fs
dec
jo
push
fs
pop
xchg
dec
es
pop
push
push
dec
es
fs
dec
inc
es
fs
inc
cmp
xor
inc
aam
in
sti
adc
outs
sbb
mov
leave
and
dec
fcom
shl
dec
xor
enter
xor
sar
and
test
leave
shl
js
or
mov
mov
test
stos
add
das
test
dec
mov
push
lods
xchg
imul
shl
push
out
test
pusha
jo
pusha
jbe
call
push
pop
push
call
and
fwait
cmps
imul
shl
xor
sub
sub
push
and
jnp
(bad)
scas
and
sbb
int
rcl
or
xor
shl
pop
add
add
rcr
xor
cmp
shl
(bad)
lock
dec
shl
inc
loopne
cmps
pop
ss
sbb
fadd
imul
popa
call
cmps
imul
scas
imul
imul
mov
cmps
popf
in
jge
push
xchg
les
lods
mov
xor
shl
adc
jbe
sar
je
push
jo
in
jb
sub
mov
push
or
ja
test
push
mov
dec
mov
mov
or
push
aas
or
pop
or
lea
sub
out
jo
out
lods
or
addr16
push
fs
cmp
sbb
xchg
inc
inc
inc
sbb
add
aad
enter
push
fs
sahf
add
les
pop
ins
loopne
aad
jbe
fadd
adc
xchg
addr16
ins
pusha
add
cmp
add
cmp
or
dec
mov
nop
sbb
add
fbstp
add
add
mov
push
repnz
sti
lock
in
clc
push
pop
mov
vphaddubq
js
sub
sahf
xchg
imul
push
push
cmp
in
cmp
cmp
pop
inc
ds
out
push
inc
push
mov
mov
xchg
cmp
mov
pop
mov
pop
ds
pusha
push
in
sbb
push
sub
in
in
push
and
jl
push
retf
or
out
je
sub
or
ja
dec
popa
sti
mov
imul
xor
movs
xchg
mov
aas
mov
sub
xor
shl
daa
movs
and
inc
(bad)
fstp
and
inc
sbb
xchg
dec
inc
dec
scas
gs
out
fnstsw
or
outs
mov
ins
jo
cmp
cmps
push
mov
add
xchg
and
aaa
outs
jg
jne
xor
xor
jnp
sub
cmp
inc
pop
stos
aaa
mov
nop
mov
ins
push
test
js
sub
ins
push
dec
arpl
test
das
ja
scas
cmp
pop
push
(bad)
dec
xchg
es
sub
add
in
or
adc
(bad)
into
aaa
aam
and
cmp
and
xor
push
mov
adc
in
clc
aas
sar
adc
rcl
cdq
fwait
cmovg
push
loope
js
push
add
dec
add
push
stc
add
in
push
adc
or
in
popa
jae
in
not
add
lea
sbb
mov
repnz
sbb
test
pop
retfw
mov
sbb
jbe
mov
or
call
es
cmps
and
test
adc
inc
sub
inc
enter
inc
adc
pusha
xchg
fistp
xchg
mov
cmp
aas
adc
cmps
jno
arpl
ret
popa
mov
cmp
adc
cmp
add
es
xchg
mov
xchg
daa
cmp
inc
mov
js
dec
xchg
mov
mov
xchg
cwde
or
jno
(bad)
inc
adc
std
mov
push
pop
fcom
enter
dec
nop
loopne
lock
lahf
dec
xchg
add
xchg
ret
test
push
scas
and
cmp
xlat
xchg
sbb
sub
bound
push
mov
and
push
stos
add
mov
test
jae
dec
xchg
js
inc
jae
push
add
add
sbb
inc
push
inc
xor
call
loopne
test
sub
push
sbb
(bad)
and
adc
xor
xor
xchg
inc
loop
cmp
push
int3
xchg
add
add
ror
ins
sbb
rcl
adc
iret
test
fimul
dec
call
mov
push
sar
xchg
xchg
cmp
dec
pushf
fcom
pushf
xor
jbe
gs
ror
sbb
outs
mov
fimul
push
push
mov
enter
nop
add
pusha
in
sbb
out
pop
pop
mov
clc
jo
sub
mov
test
dec
or
retf
cli
pop
lea
out
sbb
push
lods
cmp
add
pop
xchg
jo
das
adc
add
or
ins
and
sbb
sub
lock
leave
adc
xchg
pop
adc
xchg
or
jnp
(bad)
sub
(bad)
sub
cwde
pop
cwde
pop
jnp
outs
mov
clc
stos
adc
(bad)
je
loop
pushf
sbb
push
mov
adc
fsub
cmp
ja
dec
imul
addr16
nop
fild
jmp
fwait
cmps
pop
add
icebp
in
ret
ins
adc
aam
push
pop
or
or
add
(bad)
mov
(bad)
fisubr
je
lods
int3
pusha
fnsave
ja
adc
sete
and
repnz
pmulhuw
mov
outs
and
jne
fdiv
cmp
and
fst
xchg
lahf
push
jg
xchg
dec
mov
cmc
mov
adc
(bad)
cmp
push
adc
test
mov
jns
es
movs
mov
cs
mov
(bad)
pop
dec
push
or
and
imul
add
push
andps
push
lea
cmp
lea
cmp
mov
dec
je
ins
pushf
ja
out
add
adc
cld
mov
or
push
sub
xor
nop
int3
mov
int3
adc
nop
mov
push
(bad)
mov
adc
aaa
inc
xor
push
fild
sub
xor
data16
xchg
push
mov
cmps
rcl
ins
call
mov
es
int
out
in
loope
inc
and
and
or
mov
pusha
in
sub
pop
out
and
mov
dec
sbb
stc
jmp
xchg
mov
inc
mov
inc
pop
jmp
arpl
push
or
mov
pop
rcr
push
cs
jcxz
push
aad
add
repz
enter
setns
inc
leave
xchg
inc
push
push
rcr
popf
mov
xchg
daa
out
cs
cmp
mov
in
jo
aas
das
dec
mov
xchg
dec
adc
adc
leave
sub
xor
pop
xor
shl
shl
movs
lods
mov
add
xor
mov
xor
nop
nop
mov
add
call
fdiv
and
jg
xor
pop
(bad)
shl
mov
mov
cmp
xchg
out
or
and
fsub
es
push
movs
aad
or
xor
inc
test
jb
push
fld
xor
xor
dec
pusha
mov
out
xchg
jl
pop
pop
fs
mov
(bad)
fwait
or
add
nop
sbb
(bad)
fsub
mov
xchg
sbb
adc
test
mov
adc
push
pop
jno
add
adc
inc
adc
sbb
dec
pop
add
mov
and
mov
sar
dec
inc
ficom
mov
and
dec
adc
push
inc
(bad)
test
mov
add
ret
cmps
imul
cmp
je
add
xchg
jo
mov
mov
jne
xchg
push
mov
and
(bad)
push
push
jge
adc
sbb
fcomp
push
pop
lock
add
rcr
rcr
sub
outs
inc
mov
subps
inc
ss
xor
lods
rcl
(bad)
(bad)
aaa
cmp
ja
inc
sub
pop
add
push
inc
xchg
and
add
xor
test
inc
jo
add
mov
loopne
repz
sub
js
pop
pop
cmp
pop
mov
xor
xchg
fimul
sbb
nop
and
add
and
and
imul
xor
sub
add
call
adc
arpl
push
jg
icebp
pop
jbe
mov
inc
inc
push
add
ins
dec
daa
icebp
and
cdq
dec
inc
loope
and
mov
pop
iret
jnp
ret
iret
cmp
inc
mov
jne
or
jns
adc
shl
fs
sbb
ret
lar
add
or
xchg
cmc
das
cmp
xchg
lods
arpl
jbe
cmps
add
rcl
je
(bad)
or
add
mov
out
xchg
lahf
adc
dec
push
nop
retf
clc
int3
inc
clc
mov
fs
adc
inc
repnz
mov
adc
inc
loopne
xchg
(bad)
push
xor
cmp
cmp
imul
pop
cli
add
pop
add
dec
dec
pop
imul
outs
mov
pop
sub
inc
add
cmps
ja
add
add
inc
pop
and
dec
shr
or
xor
rcl
mov
sub
daa
or
push
pop
mov
pushf
daa
test
pop
fcmovb
or
adc
test
cmp
adc
mov
in
cmp
mov
inc
fld
add
pop
adc
les
or
push
jno
push
lods
jae
les
int3
enter
outs
test
mov
push
scas
aam
adc
int3
jp
mov
jo
lahf
cmps
cmp
imul
lods
adc
test
jmp
popf
inc
js
xchg
shr
sbb
je
push
adc
mov
repz
pop
test
jne
sbb
cmc
sbb
pop
popf
mov
xor
ss
xor
mov
push
jle
ss
neg
pop
cmp
xchg
inc
sahf
pusha
add
cmp
arpl
sahf
and
scas
in
push
or
adc
mov
cmp
inc
sbb
xchg
and
ficom
cmp
push
inc
pop
popa
push
dec
das
ret
stos
xor
or
and
dec
mov
pop
test
push
and
or
inc
bound
or
or
push
cmp
div
jmp
adc
mov
sbb
daa
pop
stos
imul
push
movs
xchg
pop
cmp
fistp
fadd
fmul
loop
xchg
test
daa
cmp
add
jo
lea
movs
movs
cwde
dec
push
mov
mov
mov
or
pop
int3
imul
xor
push
fnsave
rol
retf
pop
and
sbb
inc
pop
push
dec
adc
dec
(bad)
jns
inc
adc
add
jno
add
in
lods
(bad)
cmp
xor
(bad)
or
inc
sti
cmp
pop
and
mov
lock
movs
call
add
cli
inc
movs
push
dec
aam
add
pop
dec
and
shl
adc
xchg
mov
test
ins
mov
aad
pushf
push
inc
dec
inc
add
and
inc
or
xor
loopne
mov
adc
or
popa
shl
xor
daa
mov
jae
lea
lea
inc
popa
xchg
and
test
daa
cmp
mov
mov
fs
mov
adc
mov
add
cmps
je
jne
pop
push
inc
sahf
jo
or
int3
and
cdq
mov
or
mov
mov
in
mov
iret
inc
xor
aas
popa
stos
mov
push
cdq
imul
mov
retf
aam
call
inc
ds
jne
or
and
cmps
sbb
enter
pop
or
fnstcw
retf
arpl
ret
scas
sub
imul
cld
pop
pop
or
jmp
ja
and
nop
dec
call
adc
outs
outs
sbb
and
imul
cmp
inc
inc
pop
icebp
int3
cmps
sbb
mov
(bad)
jmp
cmp
jne
xor
(bad)
in
pop
enter
aas
sbb
push
daa
ins
and
stc
cmp
and
mov
add
bound
inc
arpl
rcl
sub
movs
iret
add
add
inc
push
xor
cmp
add
push
xchg
jb
into
xchg
add
jmp
push
mov
retf
mov
push
imul
enter
xlat
or
out
out
inc
inc
(bad)
dec
mov
push
xchg
imul
push
shl
dec
push
jbe
jl
dec
les
mov
cmp
inc
add
sar
or
mov
pop
loop
rol
mov
(bad)
repnz
mov
jmp
jnp
jle
or
fiadd
gs
loopne
mov
sbb
push
jle
mov
(bad)
inc
dec
psubq
mov
or
movs
fnstenv
or
imul
imul
mov
test
add
xor
xchg
dec
cmp
je
ror
add
inc
jl
ror
add
xchg
jne
xor
mov
dec
pop
and
jae
adc
adc
xchg
mov
dec
add
mov
push
mov
(bad)
(bad)
pop
xchg
repz
pop
xchg
(bad)
cmc
aas
cli
enter
out
lock
mov
cmp
jb
dec
inc
aas
push
enter
call
mov
lods
add
adc
or
pop
xor
les
mov
and
xchg
or
adc
lahf
xchg
xchg
or
adc
cdq
or
in
sub
(bad)
sbb
adc
inc
xor
push
popa
jno
or
ret
pop
arpl
mov
xor
retf
add
dec
repz
add
or
adc
and
pop
or
push
and
in
and
inc
inc
fmul
retf
popa
mov
scas
add
add
mov
and
bound
jae
scas
push
sbb
or
call
push
inc
je
fiadd
fisub
daa
mov
(bad)
fidivr
or
and
popa
or
test
outs
test
call
and
dec
outs
gs
xchg
test
inc
inc
dec
clc
adc
add
push
mov
cmp
test
dec
jl
mov
pop
inc
rdtsc
dec
sub
ret
pop
and
and
cmp
fsubp
pop
dec
inc
cmp
jl
sbb
inc
inc
adc
adc
and
push
push
xor
add
lods
or
xchg
mov
dec
mov
adc
fcom
cmp
and
bound
cmp
aas
mov
pop
in
push
mov
add
fmul
xchg
mov
mov
je
leave
aam
add
xchg
test
inc
dec
shr
mov
add
call
pop
out
lods
xchg
pusha
scas
xor
cmps
cmp
mov
ret
iret
int3
dec
fimul
jmp
arpl
cmp
lock
packsswb
or
lock
popf
je
dec
jle
xor
mov
mov
inc
inc
es
adc
clc
outs
pop
imul
test
xchg
add
adc
adc
rcr
sbb
sub
mov
enter
es
adc
lods
add
loop
inc
scas
sub
ret
call
clc
mov
cmp
inc
dec
ret
sbb
sub
and
xor
mov
push
lods
push
add
mov
add
loopne
sbb
jo
in
adc
push
push
add
in
jo
or
mov
push
sub
in
xor
rol
cmp
xor
sub
sbb
nop
push
ret
(bad)
and
jl
inc
cmp
nop
shl
mov
xchg
inc
push
dec
repnz
xchg
jo
sbb
cmps
jae
push
mov
pop
into
cmps
lods
sbb
lea
inc
and
sub
or
xchg
lods
lods
into
sar
dec
mov
xor
add
mov
leave
rcr
mov
mov
xor
cmps
dec
push
jl
loopne
mov
js
adc
fstp
jle
pop
inc
and
xor
xor
or
push
popf
imul
repnz
adc
push
mov
sbb
push
push
out
dec
ins
jp
push
test
push
adc
jo
xor
hlt
push
jecxz
adc
dec
lock
sbb
cs
mov
or
pop
cmp
out
adc
cmp
(bad)
je
cs
add
sbb
jbe
rcr
push
dec
(bad)
jno
and
or
mov
in
sub
mov
push
stos
inc
lds
cmp
mov
mov
xchg
dec
mov
xor
js
pop
and
inc
mov
add
lods
ins
sbb
dec
call
mov
dec
retf
inc
pop
cmps
test
in
add
enter
test
imul
sti
hlt
rcl
inc
loopne
(bad)
(bad)
pop
and
adc
dec
pop
push
or
adc
mov
dec
movs
inc
test
(bad)
cmp
loop
cmp
sub
inc
dec
add
mov
jmp
and
and
jmp
pushf
dec
dec
inc
loope
add
stos
push
movups
add
xchg
push
pop
adc
in
test
sbb
sbb
mov
lods
adc
add
cwde
(bad)
and
xchg
pop
cwde
arpl
pop
test
jbe
je
or
test
lds
ret
jg
mov
inc
xchg
dec
(bad)
jmp
mov
mov
jb
shl
mov
mov
sub
adc
xchg
test
aaa
adc
push
outs
loopne
es
test
dec
pop
pop
sbb
inc
sbb
add
dec
inc
aas
scas
test
add
sti
sar
dec
repnz
xchg
adc
pop
loope
inc
pop
in
fiadd
mov
jmp
cmp
push
adc
ins
push
adc
xor
push
jne
sub
push
(bad)
mov
adc
(bad)
jnp
add
aas
add
push
je
dec
xchg
dec
retf
nop
mov
and
add
adc
and
scas
push
push
and
xchg
or
adc
inc
mov
jg
adc
add
cmovno
ret
mov
(bad)
in
jbe
ret
pop
test
push
cmp
jbe
pop
loopne
sub
mov
popa
loope
add
ss
adc
daa
sbb
ja
xor
icebp
aaa
cmp
fwait
test
adc
iret
cmp
pushf
mov
movs
imul
add
add
xchg
ins
pusha
adc
int
or
push
imul
add
mov
or
sti
or
push
stos
xor
xor
adc
push
xchg
and
cmp
pop
ror
and
and
or
and
and
or
in
in
push
and
and
movups
jmp
or
inc
push
pusha
mov
adc
inc
aaa
mov
jge
xchg
adc
push
and
add
inc
aam
cmp
add
jg
loop
cli
pop
loop
je
dec
je
dec
mov
and
push
not
cmc
lea
adc
inc
add
pop
pusha
fidivr
inc
loop
cmp
ins
(bad)
push
push
ret
sar
or
repz
mov
sar
repz
adc
mov
sbb
inc
out
loop
mov
out
push
pop
push
pop
je
push
jl
add
ins
inc
push
jbe
cmps
or
call
sub
mov
and
sbb
mov
lock
in
es
dec
int3
sbb
xor
mov
fiadd
sar
add
cmp
neg
adc
int
or
inc
clc
imul
push
add
sbb
mov
pop
lock
ins
push
add
mov
add
popw
pop
cmps
dec
adc
ins
lods
adc
sbb
mov
sub
and
push
jo
and
push
mov
clc
call
and
mov
mov
pop
and
dec
aaa
or
out
or
test
xchg
add
inc
cmp
push
pop
xor
sbb
in
adc
xor
cmc
push
repz
stos
rol
add
inc
out
adc
pop
or
fimul
nop
sbb
dec
stc
adc
sbb
retf
shr
jecxz
retf
or
dec
pop
pop
or
and
fld
push
ror
or
xchg
inc
mov
push
lods
ret
add
cmc
push
jne
adc
cmps
add
test
push
add
mov
cmp
rcl
push
mov
sbb
(bad)
sbb
jne
aas
mov
adc
adc
fld
xor
and
xor
add
mov
adc
push
xor
sub
(bad)
push
and
in
mov
and
ror
aam
jns
fcmove
inc
or
mov
pop
lea
xor
sub
fs
fist
inc
call
and
cs
inc
push
mov
pop
sbb
retf
sbb
xor
test
mov
fdivr
xlat
pop
fwait
adc
cmp
jae
cs
push
int
xchg
mov
test
cdq
ret
mov
and
pop
mov
push
pop
xor
iret
mov
mov
into
(bad)
cmp
dec
arpl
xlat
push
std
shl
adc
push
jno
sbb
hlt
cmc
fxch
jnp
add
inc
mov
pushf
in
or
loopne
les
imul
sub
push
adc
popf
(bad)
lock
aam
cmp
gs
pop
adc
jb
inc
add
and
jl
mov
cwde
or
inc
int3
test
adc
popf
sub
jns
into
clc
lock
jb
jo
xchg
mov
add
and
cmps
pop
mov
clc
pop
sub
fnstsw
and
xchg
pop
fs
iret
and
test
sub
push
shl
cmp
les
xchg
repnz
sub
or
cld
add
and
push
add
pop
mov
mov
jmp
pop
xor
mov
add
cmc
add
mov
or
lea
mov
mov
call
outs
fld
jp
repz
daa
test
or
das
or
xor
ins
or
les
push
xor
aad
xchg
scas
fdivr
cdq
fmul
add
out
mov
(bad)
retf
(bad)
(bad)
ret
and
xchg
and
mov
xchg
test
outs
mov
fs
popa
jmp
or
invlpg
inc
pop
loopne
shl
(bad)
aam
pop
bound
mov
scas
inc
push
cmp
jge
sbb
lods
(bad)
gs
jg
mov
lods
xor
ret
jmp
aad
pop
and
ret
or
jo
inc
ficomp
jge
dec
push
sbb
pop
adc
xchg
lea
add
inc
test
inc
cmp
add
stos
rcl
movs
test
lods
fs
dec
inc
lahf
mov
pop
lock
leave
and
inc
xchg
test
dec
cld
stos
rcr
push
mov
fwait
fs
pop
pop
and
jo
jg
inc
imul
bound
dec
arpl
sar
retf
ss
add
in
inc
add
in
jmp
fild
adc
fist
jge
outs
mov
cmp
popa
pop
loope
cmp
cmp
jne
xor
out
mov
ja
inc
xor
and
sub
xchg
add
dec
fistp
and
shl
shl
add
clc
cmp
aam
popa
lds
mov
jmp
daa
ins
and
inc
aam
or
lds
add
out
add
ror
int
push
cld
call
jns
jg
test
push
imul
xor
cmps
call
loopne
shl
pusha
aam
dec
shl
shr
int3
or
call
aam
xchg
ja
cmps
movs
inc
pop
aad
mov
sahf
test
sbb
sbb
and
outs
xor
cmp
rcl
cld
xchg
stos
js
pop
aam
adc
mov
sub
ins
add
sbb
mov
jo
outs
lods
inc
pop
mov
jo
jns
mov
push
mov
sbb
push
or
pusha
mov
sahf
dec
push
ret
aaa
push
(bad)
mov
sahf
ins
xor
shl
mov
idiv
sub
ins
push
out
ds
out
push
xchg
(bad)
fmul
addr16
test
clc
push
or
mov
out
xlat
fist
daa
and
mov
lahf
jmp
mov
push
inc
xor
and
lds
xlat
lahf
sbb
rcr
and
or
dec
or
or
ret
jno
or
dec
push
test
sbb
arpl
mov
and
pop
mov
xor
add
jl
fcom
cs
shr
pusha
xchg
or
inc
mov
pusha
aam
add
nop
or
outs
xor
aas
sub
add
adc
in
das
xlat
push
hlt
sub
ds
jge
bound
sub
xor
pop
xor
lods
cmp
das
cmp
xor
xor
add
sub
imul
inc
sbb
rol
xor
adc
push
ret
leave
pusha
stc
mov
push
add
or
aas
pop
mov
jge
inc
in
push
shl
cmp
inc
sbb
push
and
ds
ins
lea
aam
in
das
xor
(bad)
shl
inc
ja
add
and
inc
or
scas
push
inc
mov
mov
inc
(bad)
dec
pusha
nop
pop
(bad)
xlat
xchg
int3
mov
add
sbb
adc
or
call
push
jb
ficom
jmp
cdq
xchg
xchg
or
and
push
int3
clc
loop
sti
pop
add
mov
push
and
es
mov
mov
add
cmp
push
inc
xchg
push
sbb
sbb
jp
(bad)
(bad)
ret
sub
inc
sub
add
push
test
call
push
(bad)
mov
jb
xor
mov
sub
rol
test
fwait
or
dec
adc
inc
adc
xor
and
push
mov
cmps
add
add
jne
pop
dec
sbb
nop
or
or
retf
scas
pop
jo
sub
(bad)
mov
sar
pop
scas
cmovbe
pop
mov
mov
xor
mov
cmps
lock
outs
lock
inc
sbb
test
adc
lods
scas
vpmacsww
sub
mov
pop
xlat
mov
jp
cmp
pop
mov
daa
dec
push
inc
dec
lock
pop
pop
mov
fiadd
sbb
or
aam
jne
sub
xor
push
ja
imul
daa
xlat
or
retf
(bad)
and
mov
test
popf
pop
dec
and
add
test
inc
ficom
add
dec
sbb
push
pop
add
test
(bad)
sti
dec
xchg
inc
int
test
jb
adc
xor
sbb
inc
fistp
mov
loop
xor
out
cwde
dec
mov
(bad)
cdq
add
pop
fisub
xor
cs
jg
xchg
mov
adc
loopne
mov
cmp
ror
ret
xlat
jns
les
and
jmp
dec
pop
pop
dec
and
inc
adc
mov
inc
movs
push
add
push
push
adc
nop
mov
cs
cs
(bad)
dec
fcom
sbb
rcr
(bad)
(bad)
outs
adc
icebp
ins
shr
je
pop
xor
out
or
les
or
stc
imul
femms
adc
enter
push
xor
and
retf
ds
dec
mov
rcr
adc
inc
fild
add
mov
or
add
mov
and
mov
ret
xor
loopne
andps
and
in
push
dec
enter
nop
cwde
jbe
ds
and
inc
(bad)
adc
sbb
mov
or
and
mov
ins
mov
pop
inc
sbb
add
leave
inc
mov
push
add
adc
fcom
push
xchg
push
icebp
fsubr
pop
xor
les
daa
sbb
int3
loope
adc
push
push
sbb
pop
push
sbb
cmp
loop
loop
pop
push
mov
dec
mov
push
pusha
fbld
dec
dec
pop
ss
das
repnz
cmp
cs
sbb
cmovl
or
add
adc
sub
fsub
or
(bad)
jecxz
loopne
mov
int
shr
pop
pop
in
loopne
ins
xchg
pop
enter
lock
outs
add
pop
or
mov
add
movs
in
mov
mov
mov
icebp
dec
or
push
adc
dec
mov
mov
sbb
or
mov
retf
data16
mov
fmul
imul
adc
pop
in
and
mov
xchg
adc
movs
mov
gs
jle
in
sbb
xchg
lods
pop
ss
rol
fdiv
sub
call
outs
push
mov
repnz
inc
push
pop
fcomp
in
push
pop
and
nop
and
push
fsubr
jg
sub
mov
pop
cwde
sub
out
dec
push
pop
cmps
js
retf
jl
nop
stc
push
pop
daa
push
cmp
nop
xchg
nop
xchg
mov
repnz
mov
fsub
or
push
cmp
or
gs
push
outs
aam
push
ds
sbb
push
jo
push
push
movs
add
jbe
ss
inc
aad
and
test
add
(bad)
nop
mov
in
inc
in
xor
adc
dec
loop
scas
inc
push
and
sub
outs
and
inc
int
mov
inc
add
xor
inc
popf
js
sbb
repnz
leave
scas
shl
icebp
into
(bad)
dec
dec
popf
(bad)
adc
jecxz
add
xchg
aas
mov
mov
pop
leave
add
out
add
scas
sub
hlt
mov
gs
stos
mov
clc
mov
movs
cdq
sbb
and
or
sahf
or
addr16
fiadd
icebp
and
push
inc
jae
dec
push
xor
(bad)
lds
dec
mov
dec
call
and
les
lahf
mov
adc
test
mov
dec
popf
cmp
add
mov
or
and
xlat
xchg
pusha
or
inc
je
movs
pop
fimul
jl
and
in
ret
data16
dec
fsub
fwait
ins
mov
test
fistp
sbb
or
adc
cmp
and
xor
and
mov
int3
add
call
cld
push
push
in
mov
sbb
pop
dec
dec
and
xchg
add
stos
and
add
jmp
fs
sti
lock
loope
mov
(bad)
jmp
inc
js
push
mov
rcr
call
adc
imul
mov
jp
in
cmps
lock
mov
adc
cdq
jbe
add
in
sbb
por
mov
pop
mov
cmp
pop
mov
sbb
ss
pop
lock
or
mov
pop
sub
(bad)
jmp
or
cld
addr16
ins
jno
pop
retf
scas
cmp
jno
cmps
cmp
sbb
into
push
ins
mul
mov
mov
push
push
movs
popa
xor
leave
pushf
dec
mov
jg
jb
pop
mov
rdtsc
lock
mov
cmps
add
jo
pop
mov
sub
(bad)
jmp
push
cmps
sub
cs
shl
mov
jbe
scas
jbe
je
and
sbb
push
(bad)
push
pop
das
aas
and
adc
sbb
xchg
adc
pop
dec
js
rol
or
xor
div
mov
cmp
push
outs
sbb
cli
dec
retf
add
mov
dec
or
in
inc
pop
(bad)
jnp
nop
jo
add
mov
dec
xor
mov
push
inc
test
(bad)
adc
punpcklbw
stos
dec
add
sbb
fadd
push
inc
pop
and
pop
imul
scas
rol
xchg
cmc
mov
sbb
or
push
retf
push
retf
adc
cs
jbe
loope
pop
sub
pop
jbe
imul
out
sub
mov
arpl
add
xor
push
ret
push
add
arpl
or
pop
aaa
or
push
es
jmp
cmps
inc
cmp
clc
cmp
xor
int3
rol
popa
push
and
adc
fisubr
(bad)
movs
add
dec
clc
frstor
in
ret
inc
inc
sbb
mov
lods
or
mov
mov
pop
addr16
add
and
mov
inc
add
rcl
dec
sub
adc
icebp
(bad)
mov
xor
sbb
or
push
and
add
out
mov
dec
stos
movs
xchg
in
dec
push
fsubr
adc
add
int3
test
add
enter
xchg
or
xchg
add
es
push
fistp
cmps
or
jl
fdiv
jae
mov
movs
sub
mov
add
mov
add
add
jmp
inc
adc
cmc
mov
pushf
ss
loopne
pop
pop
mov
jno
or
add
ret
popa
loopne
xchg
js
nop
les
(bad)
adc
loopne
gs
or
test
cmps
adc
dec
push
xchg
outs
mov
dec
pop
push
jne
dec
pop
fadd
dec
push
imul
mov
ds
dec
xchg
je
xchg
jns
and
adc
sbb
fs
nop
es
and
ja
push
inc
inc
lock
inc
dec
xor
cmp
sbb
popa
adc
xor
cdq
push
adc
test
repz
inc
jbe
ja
div
(bad)
cs
push
adc
std
mov
sub
inc
jbe
adc
sbb
jp
nop
fild
adc
cmp
jmp
popf
gs
inc
adc
ins
add
call
sub
clc
je
mov
jne
ins
sbb
cmc
mov
mov
(bad)
ins
adc
aaa
mul
loop
aam
(bad)
xlat
sub
dec
jne
or
pop
cs
xchg
sbb
retf
stc
jns
sbb
call
push
adc
inc
pushf
sub
xchg
std
push
cli
into
jmp
mov
mov
inc
dec
inc
xchg
or
repz
add
xchg
jmp
sar
sub
dec
je
(bad)
add
cmp
outs
or
jno
(bad)
into
sub
sub
xor
or
dec
sub
test
push
cmp
sub
or
loop
or
push
in
and
pop
pop
scas
adc
into
and
adc
cdq
cmp
mov
mov
dec
cmc
in
enter
cmc
test
enter
inc
stos
ss
inc
fs
xchg
icebp
and
dec
add
call
hlt
push
dec
sbb
ror
pop
arpl
inc
push
sub
sub
or
popf
jnp
jne
sbb
inc
fbstp
adc
xor
test
jae
add
dec
pop
nop
push
pop
or
loope
lea
prefetcht1
data16
mov
popf
adc
fadd
into
enter
call
jp
test
loope
add
fadd
cs
mov
add
mov
loopne
and
pop
mov
inc
enter
jne
mov
adc
push
jns
adc
inc
mov
or
aaa
movs
inc
je
push
sub
lock
jno
rcr
(bad)
enter
leave
mov
test
mov
sbb
sub
cmp
int3
or
es
fld
cli
popa
in
jae
add
xchg
pushf
pushf
enter
imul
dec
shl
jmp
push
dec
lods
ds
sub
add
or
adc
xchg
sub
push
nop
sub
or
jne
sbb
loope
pop
rcl
pop
cmp
cld
push
sbb
sub
push
or
data16
xlat
or
mov
push
cmp
mov
sti
enter
js
outs
adc
add
cmp
inc
cmp
ja
sbb
lods
psubw
aas
xchg
popa
call
(bad)
loope
mov
sbb
cmp
popf
mov
push
inc
out
mov
mov
sbb
adc
cmp
xchg
push
xchg
dec
aaa
repnz
pop
add
daa
push
mov
jl
addr16
sbb
sbb
xchg
fdivr
out
jae
in
xchg
pop
push
xor
sti
and
mov
aaa
dec
pop
rol
add
repz
add
or
div
repz
add
push
pop
xchg
std
adc
popf
inc
movs
in
xchg
maxps
adc
adc
fisub
or
aam
and
jne
push
inc
nop
xlat
add
add
push
dec
add
clc
inc
mov
pop
dec
jmp
(bad)
movs
push
mov
push
add
(bad)
sbb
dec
sub
sub
loope
shr
ss
xchg
add
jge
adc
sbb
mov
jge
push
add
mov
push
fcomp
ja
imul
les
inc
push
xchg
aam
adc
push
add
retf
daa
push
bound
jmp
cmc
sar
test
repz
push
cmp
addps
in
cmp
add
add
ss
dec
fadd
leave
ror
sub
mov
in
leave
mov
retf
(bad)
in
cmp
pop
test
popf
jb
dec
sbb
jp
leave
rcl
arpl
push
push
inc
je
push
push
jne
ret
sbb
fld
(bad)
pop
loope
ret
(bad)
not
and
lahf
mov
inc
shl
push
vpcmpeqd
test
lock
sub
add
inc
loopne
test
mov
sar
cmp
retf
pop
int3
adc
jg
data16
jmp
jg
jmp
inc
cmps
in
in
cdq
lock
pop
xlat
or
enter
aaa
dec
hlt
in
int
dec
mov
in
sub
or
leave
and
adc
or
mov
or
mov
inc
inc
imul
(bad)
ja
pop
add
adc
and
repz
faddp
adc
jmp
cmp
and
lods
aam
or
and
adc
int
add
pop
dec
pop
fstp
daa
in
ins
ins
test
dec
mov
mov
mov
mov
std
clc
inc
push
mov
pop
adc
aas
jp
and
leave
jb
hlt
mov
pop
push
in
lock
nop
xchg
dec
lock
cmp
add
inc
cmps
dec
push
and
sbb
add
mov
out
loopne
push
test
lahf
inc
push
es
add
in
leave
dec
repnz
add
lea
adc
pop
push
add
mov
mov
or
retf
enter
add
xchg
in
jb
adc
push
sub
cmps
cmps
cwde
popa
cmp
movs
mov
mov
(bad)
(bad)
add
loope
add
push
jo
nop
and
cmp
push
in
or
cs
cmp
aaa
cs
jb
sub
pop
xchg
imul
call
mov
xchg
jo
loopne
xor
xchg
mov
adc
hlt
jge
jns
pop
xlat
or
cli
xchg
pop
mov
in
mov
pop
push
stos
adc
data16
lock
outs
adc
cmps
out
mov
out
add
or
mov
sbb
aam
xlat
and
sbb
adc
mov
cwde
popa
test
in
inc
fistp
pop
imul
je
fdivr
and
in
fsubr
push
in
push
sbb
pop
mov
ds
(bad)
pop
add
mov
xchg
add
mov
mov
dec
leave
add
xchg
push
sub
pop
fcom
(bad)
dec
fadd
and
shr
pop
inc
enter
lock
(bad)
jmp
push
fadd
mov
aad
jno
and
mov
mov
loopne
xor
pop
shl
mov
mov
adc
arpl
adc
aas
cmp
dec
mov
lods
xor
sub
pop
cdq
rcl
jge
jae
loop
and
sub
or
mov
adc
fbstp
dec
sti
cmp
pop
adc
movaps
mov
mov
sub
adc
adc
jmp
sub
push
addr16
pushf
adc
jns
std
addr16
jns
shr
and
pop
jns
xchg
sbb
arpl
push
dec
nop
adc
mov
sbb
rol
mov
shl
sbb
xchg
xchg
clc
dec
mov
push
cmp
test
push
push
xor
arpl
rcl
or
dec
aam
jae
dec
mov
mov
pop
mov
js
mov
or
mov
popa
pop
sub
inc
movs
(bad)
adc
dec
leave
push
jmp
pop
std
fmul
addr16
or
and
pop
push
mov
pop
cdq
push
js
push
cmp
dec
ins
mov
ds
fs
pop
xor
lock
jae
mov
clc
outs
pop
cmc
lea
call
jo
cmp
je
mov
enter
add
data16
cdq
mov
addr16
aam
add
or
or
nop
aaa
add
inc
scas
add
inc
pop
leave
mov
and
in
push
out
fstp
cmp
lds
clc
out
inc
add
je
outs
std
jmp
aas
repnz
and
push
or
inc
ss
inc
xor
xlat
or
outs
inc
add
call
clc
(bad)
and
mov
daa
out
retf
lds
jo
mov
cmp
enter
pop
rcl
sub
sbb
push
call
dec
fst
sbb
push
ja
push
add
nop
dec
clc
or
inc
xchg
cmp
jmp
fistp
jo
fwait
pusha
inc
add
and
movs
mov
cmp
gs
push
rcl
push
and
leave
daa
inc
sbb
(bad)
lock
lahf
repz
inc
push
mov
test
add
push
pop
xor
int3
sti
push
jno
sbb
and
mov
hlt
rcl
push
mov
sub
pop
lock
push
aam
jns
retf
mov
fmul
push
dec
stos
pop
xor
sub
sbb
(bad)
popa
call
mov
xor
ss
and
pusha
in
inc
outs
in
sub
shl
xchg
pop
mov
and
jo
xor
push
add
add
add
mov
call
call
lds
push
sub
cdq
loope
jb
xor
jne
sbb
nop
add
in
les
xor
pop
or
addr16
xor
imul
loopne
imul
xchg
adc
cmp
rcr
mov
lahf
test
jmp
mov
test
loopne
in
adc
rol
and
xor
imul
mov
in
leave
push
jecxz
pop
iret
dec
dec
hlt
mov
xor
sub
and
int
pop
mov
sbb
iret
push
push
adc
sbb
mov
fstp
rol
xor
out
lods
int3
(bad)
retf
or
aad
frstor
mov
out
sub
rol
mov
aas
lods
add
popa
inc
dec
pop
ds
hlt
jmp
sub
ja
fsubr
push
iret
or
xchg
and
cs
mov
add
and
sub
add
aam
imul
ds
fs
adc
push
test
cwde
lea
and
cmp
ins
dec
mov
pusha
or
enter
lahf
fstp
je
outs
test
iret
(bad)
in
and
repz
dec
mov
mul
add
dec
push
or
jl
pop
inc
xchg
adc
je
sbb
test
in
inc
adc
push
add
test
xchg
pop
mov
or
xchg
mov
cmp
test
mov
mov
xchg
fidivr
sbb
enter
adc
sbb
add
or
inc
xchg
xchg
rcl
sbb
out
adc
lea
hlt
inc
sbb
pop
imul
pop
cmp
inc
jnp
mov
(bad)
jno
jmp
xor
rol
and
sbb
icebp
ins
xchg
jge
loopne
sbb
xor
jp
shl
cdq
push
and
xor
sub
jl
push
lock
adc
xor
or
fwait
dec
sbb
fsubr
push
sahf
test
lea
push
rcr
mov
mov
push
xchg
xchg
arpl
and
add
xchg
xchg
mov
inc
dec
dec
inc
ret
ja
add
xor
or
adc
add
push
push
in
adc
push
jno
cmp
in
sbb
and
add
mov
add
push
xlat
pop
test
fist
mov
add
inc
sub
jmp
add
retf
or
push
push
iret
hlt
imul
and
pusha
adc
mov
xor
add
rol
sahf
in
dec
mov
add
dec
sti
push
icebp
add
cli
ficom
xor
or
das
dec
ret
aaa
mov
cs
sbb
or
add
lock
scas
jo
fwait
ret
popa
aaa
icebp
sahf
retf
inc
pop
mov
push
(bad)
adc
(bad)
addr16
fwait
mov
xchg
add
clc
lods
add
dec
call
movs
pop
fsubr
jno
add
fadd
mov
fwait
scas
or
dec
shl
test
add
jo
sbb
ret
push
mov
addr16
pop
adc
jbe
dec
inc
and
mov
outs
popa
adc
jne
mov
out
adc
jmp
and
add
in
mov
adc
adc
pop
xor
xor
adc
sbb
fnstenv
adc
in
sbb
xor
adc
lock
in
xor
xchg
scas
enter
enter
or
stos
inc
sub
sbb
leave
jnp
inc
or
leave
or
xchg
or
and
mov
in
xor
sbb
or
dec
or
fstp
enter
add
xor
dec
push
adc
push
sbb
jg
imul
mov
ret
dec
ret
sbb
sbb
xchg
pop
xor
cmp
(bad)
pop
adc
inc
and
repnz
arpl
adc
test
xor
dec
nop
add
jne
cdq
push
pop
into
mov
pop
das
shr
add
ins
das
jns
mov
pop
sbb
pop
inc
cwde
and
cdq
in
add
mov
jmp
pop
dec
fimul
popa
add
jle
xor
add
inc
push
rcr
add
mov
sub
nop
sub
add
and
and
xchg
rol
jno
shr
enter
xchg
fs
sahf
(bad)
sbb
and
mov
test
fnstenv
or
movs
or
lods
test
add
jae
add
mov
pop
push
jo
mov
ror
jne
div
std
or
ins
in
sub
or
(bad)
xor
mov
jecxz
cmp
cmps
or
xor
mov
add
sub
pop
dec
xchg
sub
dec
or
or
fptan
mov
ins
pop
push
sbb
into
dec
movs
loopne
sbb
aaa
and
cwde
sub
add
cmps
fst
ror
sbb
sub
jmp
push
das
jne
cmp
push
jmp
xchg
xchg
adc
jne
jb
mov
xor
xchg
sub
call
ins
aad
int3
int3
xor
scas
sbb
sub
ror
push
adc
in
jo
fistp
jbe
in
in
ret
pop
mov
fbld
xchg
sbb
(bad)
and
movs
sub
lea
mov
pop
sub
push
test
mov
in
xor
imul
bound
xor
mov
outs
sbb
call
xor
inc
inc
xor
das
add
jb
xor
add
inc
jge
js
inc
arpl
jnp
dec
adc
test
cwde
xchg
imul
and
hlt
mov
push
cmc
cmc
aaa
inc
mov
cmp
inc
std
mov
jns
ret
fs
in
sti
cmp
jmp
or
mov
movs
xor
arpl
xchg
aaa
fwait
leave
sub
(bad)
dec
or
push
mov
cmp
inc
sbb
daa
out
fmul
xchg
adc
pop
adc
mov
in
or
gs
jb
(bad)
sbb
xchg
cmps
in
mov
sub
data16
jbe
jo
adc
xlat
movs
fimul
mov
add
push
or
ret
aad
add
adc
jmp
adc
inc
rol
sbb
bound
scas
(bad)
out
and
lock
ror
pop
pusha
aaa
cmp
push
iret
clc
in
psubd
arpl
jmp
in
pop
mov
push
add
ret
mov
xor
add
xor
loope
movs
and
pop
xor
and
pop
push
or
in
xchg
scas
xor
or
sub
push
dec
xor
pop
mov
bound
adc
mov
mov
adc
imul
arpl
(bad)
sub
lea
dec
loopne
mov
outs
sub
sub
jl
add
lock
imul
pop
aam
push
and
icebp
aam
mov
pop
adc
lock
jno
gs
sub
xchg
cmovp
sbb
mov
mov
fist
sbb
cdq
xchg
and
push
mov
aam
add
adc
dec
lea
clc
dec
loopne
cli
arpl
dec
jmp
in
(bad)
sbb
ret
imul
(bad)
rol
sub
sub
mov
(bad)
pop
add
add
test
and
pop
hlt
pop
rol
adc
sbb
leave
xchg
dec
and
or
xor
or
shl
push
xchg
mov
in
arpl
es
xchg
jae
push
jmp
and
cmps
push
adc
inc
imul
retf
sub
push
ins
xor
cmp
in
lahf
call
ins
in
fdiv
cmp
jge
xchg
(bad)
loopne
push
pop
add
add
dec
and
dec
sbb
call
push
shr
adc
adc
sub
scas
dec
add
and
call
sub
push
lds
inc
ror
adc
or
aam
or
int3
inc
inc
inc
inc
enter
pusha
inc
inc
inc
loopne
fsubr
pop
sub
pop
mov
(bad)
loopne
fcmovb
inc
inc
or
add
push
xchg
inc
cld
test
pop
mov
mov
inc
stos
dec
jmp
aad
inc
mov
ins
and
xor
sbb
test
mov
test
lea
pop
and
popf
adc
bound
sbb
ins
push
and
ret
pop
(bad)
out
pop
nop
add
sbb
stos
mov
add
lods
mov
mov
push
enter
jne
popf
les
enter
cs
int3
rol
in
xchg
rcl
aam
push
xor
int
add
sub
leave
and
loopne
call
sub
(bad)
idiv
jno
(bad)
mov
sbb
pop
push
dec
and
mov
test
je
pushf
xchg
add
xor
test
cmps
movs
pop
xor
inc
xchg
add
fadd
cs
pop
(bad)
nop
fild
pop
fcomi
add
sbb
mov
bnd
pop
mov
int3
cwde
(bad)
mov
outs
or
scas
add
int
and
dec
pop
fcomp
cs
sbb
xchg
das
inc
pop
push
and
mov
out
pusha
cmp
int3
sbb
and
cmp
(bad)
cmps
outs
and
(bad)
rcl
mov
sbb
dec
les
pop
fwait
sbb
inc
std
mov
add
inc
jns
inc
mov
dec
or
dec
xor
or
je
push
mov
arpl
(bad)
and
sbb
add
dec
loope
rcr
loopne
mov
adc
enter
outs
fisubr
mov
mov
out
xor
jmp
jo
adc
adc
gs
or
push
add
push
sbb
(bad)
cmp
sbb
shl
movs
adc
jge
in
or
aaa
in
xor
ret
les
inc
mov
loope
fsubr
rcr
pop
(bad)
push
out
nop
pop
pop
xor
adc
scas
adc
inc
arpl
call
xchg
popa
jne
pushf
pop
adc
sub
sbb
inc
ja
xchg
sbb
clc
push
test
movs
or
sbb
cs
test
fmul
pusha
aaa
xchg
adc
fs
shl
fdiv
xchg
inc
sbb
stos
pop
push
adc
out
or
fst
sub
add
inc
inc
dec
sbb
add
and
sub
add
dec
or
xor
retf
cmp
inc
dec
push
xchg
popa
cmp
add
add
add
jnp
and
pop
mov
add
jecxz
push
adc
xor
jmp
pop
xor
and
push
test
and
fld
mov
add
or
aaa
push
jo
mov
push
imul
or
and
xlat
cwde
cmp
gs
test
loope
cs
inc
jmp
mov
cmc
sub
mov
aas
xor
or
jne
lods
test
nop
inc
call
sbb
daa
adc
stc
xor
test
popa
mov
cmovae
inc
xor
sbb
push
(bad)
adc
or
adc
mov
stos
xor
ds
and
cmps
push
xor
add
cs
aaa
lea
adc
mov
add
clc
cmps
inc
les
xchg
xor
hlt
sbb
inc
push
and
or
pop
fcom
inc
xor
mov
jp
dec
mov
xchg
test
add
fidiv
and
inc
inc
and
mov
movs
sub
cs
sub
fcom
(bad)
repz
ret
ss
aam
(bad)
jo
jmp
adc
lahf
lahf
add
sahf
mov
push
inc
test
jno
add
(bad)
in
inc
call
bnd
jl
or
mov
pop
mov
push
icebp
loope
mov
mov
add
paddb
aad
adc
hlt
push
popa
sbb
cmp
and
add
mov
outs
or
cli
ret
and
push
cmps
in
pop
pop
push
fs
xor
aam
mov
xchg
cwde
shl
(bad)
mov
aam
push
pop
shl
xor
mov
jo
mov
mov
in
sar
aam
sbb
pop
pop
fsub
mov
sub
jp
int3
test
loopne
aaa
popf
lea
in
stos
push
(bad)
fiadd
inc
and
and
inc
and
push
or
inc
pop
das
ficomp
jo
out
push
popa
jmp
mov
scas
ins
inc
aam
mov
ins
xchg
mov
lds
mov
pop
ret
cmc
test
fs
sub
ss
(bad)
adc
xchg
data16
push
and
ror
pop
jae
mov
or
jmp
(bad)
and
sbb
hlt
dec
jl
lods
adc
call
fistp
and
jg
add
int3
cmp
jne
mov
push
inc
add
or
lds
dec
jl
or
test
push
xchg
adc
cli
push
push
add
sbb
xor
outs
mov
push
lahf
fnstsw
sub
pusha
or
pop
ret
mov
dec
mov
pop
or
inc
push
mov
mov
push
mov
js
add
sub
mov
adc
and
cmp
aam
sbb
inc
outs
push
pop
adc
push
jo
sbb
enter
sbb
and
adc
shr
in
mov
aaa
arpl
fs
mov
or
or
jbe
lds
push
and
fisttp
xor
inc
sub
xor
sbb
dec
sbb
sbb
or
inc
xchg
or
mov
inc
mov
rol
mov
rcl
call
ss
jne
mov
dec
add
sub
xor
int
(bad)
cmp
dec
cdq
inc
or
jmp
xor
scas
xor
pop
push
add
sub
push
sbb
push
or
adc
add
retf
mov
lea
or
cmp
sbb
push
pop
cld
cs
lds
pop
jle
mov
adc
pop
pop
movs
xchg
dec
mov
mov
add
pop
xchg
(bad)
dec
fild
ins
sbb
dec
aam
inc
add
adc
jo
les
repnz
rcl
inc
mov
pop
test
adc
daa
push
(bad)
les
cmp
cli
std
fucomp
jle
sbb
je
sbb
jmp
rcl
dec
jns
push
nop
ror
pop
pop
push
inc
jmp
cmp
test
test
mov
or
adc
or
nop
jb
pop
or
sbb
pop
sar
adc
and
movs
dec
scas
pop
inc
mov
push
dec
xor
or
pop
mov
ins
nop
push
cmp
and
mov
loope
pop
mov
adc
push
cmps
sbb
mov
pusha
push
cs
or
iret
clc
inc
hlt
stos
add
inc
mov
jmp
and
int
jmp
dec
or
mov
cmp
test
clc
push
ret
lea
sub
jmp
cmps
jo
inc
push
or
stos
mov
retf
xor
adc
push
popa
mov
inc
sub
push
xchg
hlt
cmp
jne
and
int3
sub
cdq
jle
xor
mov
or
addr16
loopne
mov
sub
and
xor
sub
loope
outs
fmul
repnz
inc
push
or
dec
in
in
mov
jle
mov
not
sub
mov
mov
mov
add
mov
in
(bad)
arpl
push
add
xor
fs
outs
xor
or
sub
xor
arpl
sub
sbb
in
mov
or
jae
pop
mov
ret
sub
js
pop
pop
or
xchg
mov
in
stc
adc
mov
ss
push
pop
add
sub
test
shl
int
sbb
sub
inc
fcom
js
xor
imul
sbb
(bad)
leave
imul
and
sub
mov
out
loope
shr
cs
lahf
cs
sbb
mov
add
xor
mov
pop
dec
cmps
xlat
pop
jl
dec
dec
out
ja
or
daa
adc
(bad)
and
xor
and
cwde
inc
imul
imul
ror
inc
sub
xchg
pop
ror
out
sub
(bad)
pop
ins
repnz
mov
mov
inc
pop
rcr
cmp
and
pop
or
push
daa
ret
xor
dec
fimul
out
and
adc
push
fwait
arpl
fild
push
mov
out
pushf
add
stc
push
lahf
push
repnz
leave
les
rcr
aaa
and
xlat
jg
and
add
test
ror
imul
add
pop
in
push
xchg
xchg
pushf
push
dec
repz
or
adc
adc
out
pop
fiadd
mov
ja
ins
loopne
xor
cwde
imul
lea
add
mov
xchg
add
dec
mov
pusha
fldenv
loopne
add
xchg
popf
nop
(bad)
inc
dec
cmp
pop
ins
jg
retf
adc
clc
push
pop
cmp
cmps
push
sar
cmp
sbb
fld
push
adc
mov
ins
dec
scas
mov
fnstsw
adc
jl
cmp
fiadd
jle
mov
xlat
shl
aaa
mov
and
mov
add
outs
push
xchg
push
(bad)
lea
imul
sbb
cmp
cmp
adc
or
jae
lea
inc
xor
call
xchg
sub
jne
or
outs
cmc
jnp
xchg
push
sbb
xor
(bad)
push
push
sbb
call
xchg
loopne
and
adc
push
or
fiadd
jne
add
sub
and
jno
in
dec
pop
and
dec
mov
dec
mov
loop
ret
and
add
xlat
lock
in
lods
lahf
popf
dec
inc
lock
push
mov
sub
pusha
loopne
lea
add
mov
dec
jmp
jae
jo
xor
mov
adc
nop
fadd
inc
mov
faddp
dec
fld
(bad)
xchg
ret
pushf
push
stos
in
call
ret
cmp
aam
movs
push
fld
jns
adc
dec
es
sub
nop
repnz
mov
adc
sub
pop
popf
call
jmp
xlat
or
out
imul
in
mov
jns
lds
in
dec
in
nop
mov
mov
push
add
inc
mov
popa
push
sbb
in
adc
pusha
sub
push
and
sub
sbb
inc
sub
xchg
(bad)
push
cmp
and
dec
js
push
cmp
and
in
in
mov
or
movs
and
faddp
ror
std
and
(bad)
jns
sbb
ror
or
inc
mov
sbb
in
jmp
fcmovb
mov
sbb
push
add
pop
movlps
sub
daa
adc
inc
aas
das
sub
bound
jne
cdq
sub
add
test
adc
pop
cmp
adc
pop
test
or
jecxz
and
pop
inc
mov
sub
adc
aad
or
lock
inc
sbb
lock
or
cmps
push
push
ror
add
cmp
mov
inc
inc
xchg
inc
outs
inc
push
outs
inc
enter
adc
and
adc
dec
dec
add
sub
test
icebp
shr
repnz
mov
movs
and
inc
retf
xor
shr
sbb
scas
cmp
inc
jb
cmp
cmp
lds
dec
xchg
inc
jg
lock
add
and
mov
call
cmp
push
and
das
mov
push
pop
xor
iret
pop
imul
ficomp
jb
in
fwait
or
adc
push
loop
fild
cld
arpl
add
addr16
push
or
arpl
push
aaa
nop
or
mov
and
scas
movs
mov
(bad)
lods
dec
dec
dec
es
dec
sub
in
push
lods
push
push
inc
push
cmp
fiadd
push
nop
add
fs
inc
inc
pop
dec
es
push
push
xor
jbe
and
jb
pop
cmp
enter
inc
pop
pop
xor
dec
mov
and
xor
pop
stos
mov
push
movs
out
push
pop
mov
sbb
mov
push
and
add
dec
inc
add
add
or
or
stc
call
rcr
and
test
icebp
ja
xor
loopne
fwait
(bad)
push
add
imul
mov
fld
inc
inc
inc
or
xchg
icebp
or
or
jmp
add
sub
jmp
mov
jmp
pop
jmp
or
adc
jmp
push
mov
or
sbb
cdq
stc
sub
nop
sub
push
in
mov
xchg
mov
push
xchg
push
lods
sub
pop
popa
es
out
and
inc
jne
and
and
out
nop
sbb
test
sbb
mov
xor
and
and
and
outs
and
sbb
ret
sbb
adc
xor
push
test
nop
(bad)
inc
adc
nop
or
adc
adc
push
jne
fwait
or
or
stos
jmp
shl
push
shr
mov
xchg
fs
mov
fs
sbb
fs
adc
add
jmp
mov
push
cmp
xchg
adc
dec
inc
or
xor
test
jmp
push
add
inc
jnp
sub
or
rol
xchg
push
add
mov
push
push
and
or
xchg
icebp
loop
popa
loopne
adc
jo
and
add
aad
adc
inc
mov
inc
mov
movs
in
in
adc
fsub
aas
sub
mov
lea
inc
add
jb
mov
popa
xchg
(bad)
push
shl
popf
sbb
mov
push
xchg
push
in
pop
or
push
adc
push
dec
lea
popa
pop
test
daa
ja
dec
adc
iret
pop
movs
inc
jb
mov
dec
mov
ret
jecxz
cwde
mov
(bad)
pop
outs
or
or
pusha
adc
(bad)
add
mov
pop
jg
ss
and
test
jl
mov
push
and
pop
je
mov
mov
push
movs
xchg
nop
(bad)
sar
loopne
pop
mov
add
cli
adc
addr16
cmp
mov
sbb
imul
popf
pop
mov
sti
sub
sub
pop
test
sub
retf
in
int
mov
jecxz
push
sbb
xor
or
leave
pop
add
movs
icebp
xchg
pop
adc
add
call
xchg
lods
retf
mov
or
add
xchg
sub
pop
aam
enter
add
fcomp
and
arpl
and
test
bound
sti
mov
adc
dec
lods
cdq
test
stos
add
and
push
pop
in
inc
lea
mov
les
adc
sti
(bad)
mov
nop
pop
rcr
js
movs
inc
adc
lods
mov
mov
pop
pop
pop
leave
push
push
ins
cmp
outs
add
inc
push
rcr
inc
gs
push
inc
bound
aam
mov
adc
pop
inc
cs
test
add
scas
pop
loopne
adc
inc
ins
add
add
data16
mov
loopne
sub
xor
rol
add
pop
mov
arpl
add
fdiv
rol
popa
fdiv
les
pusha
or
and
(bad)
das
xchg
movs
pop
nop
adc
xchg
leave
push
mov
xchg
pushf
xchg
in
pop
and
add
dec
cmps
sbb
mov
cdq
fs
fsub
in
cdq
fs
dec
in
lock
xchg
test
clc
int3
adc
inc
mov
js
xor
sub
retf
cmp
push
enter
fdiv
loope
sub
loope
xchg
inc
mov
jg
mov
aam
cmp
cmp
fcom
fcom
in
loopne
cmp
cmp
call
xchg
cmp
lock
cmp
clc
ret
push
mov
test
fdivr
das
rol
add
pop
pop
sbb
push
in
scas
push
sub
and
xor
pop
pusha
inc
xor
sub
imul
dec
pusha
jae
int
ds
push
add
inc
je
push
inc
retf
cmps
imul
pop
cs
jg
adc
fwait
(bad)
mov
addr16
jbe
retf
xlat
cs
scas
jp
je
enter
add
sbb
or
sbb
jle
push
adc
mov
les
push
add
stc
pop
stos
popa
cmc
mov
dec
sbb
mov
shl
fs
cs
hlt
adc
popa
or
jne
outs
pop
int3
nop
pop
leave
arpl
popa
rol
or
icebp
add
mov
movs
pop
adc
cmp
mov
and
cmpxchg
(bad)
add
cld
cmp
cmp
jg
je
shr
inc
pop
(bad)
out
add
movs
push
(bad)
(bad)
dec
dec
and
popa
adc
dec
dec
inc
call
sar
mov
fld
jmp
add
jnp
and
fidiv
retf
shl
stc
and
sti
mov
push
push
fwait
or
das
and
jg
rol
ror
sub
and
out
sub
sub
jl
adc
xor
sbb
movhps
adc
(bad)
test
inc
adc
mov
mov
mov
dec
cs
rcl
retf
and
cmp
fmul
cld
icebp
inc
adc
inc
pusha
lods
mov
push
aam
fs
pop
pop
(bad)
pop
ss
(bad)
psubw
in
cmp
xchg
mov
dec
adc
nop
fist
push
rcr
add
mov
adc
add
add
pop
dec
dec
lds
vpavgb
repz
(bad)
outs
xchg
les
xchg
dec
inc
fs
pop
xchg
inc
sbb
movs
inc
popf
and
test
test
icebp
mov
cmps
mov
mov
neg
fidiv
jle
dec
mov
stos
jmp
leave
xchg
pushf
sbb
aaa
gs
stos
loope
nop
jl
je
add
ds
sbb
iret
gs
mov
mov
xor
mov
jns
ret
loopne
sub
nop
add
inc
jg
fst
xchg
and
dec
sub
prefetcht2
sbb
lds
mov
in
hlt
enter
lahf
aas
inc
arpl
pop
je
ret
add
stos
adc
icebp
cmp
jl
jae
push
pop
sar
popf
mov
or
sbb
mov
dec
lods
xor
test
retf
(bad)
pop
dec
push
add
jo
fiadd
and
jo
shl
push
push
mov
push
cmp
and
sahf
stos
xchg
pushf
xchg
ret
xlat
cmp
rcl
push
scas
lods
jne
loopne
dec
pop
aas
sub
or
(bad)
fiadd
sbb
int
lods
mov
inc
add
adc
(bad)
push
sbb
add
or
mov
test
lahf
inc
sbb
pop
dec
ins
dec
sub
fmul
mov
mov
seta
fldenv
push
inc
xchg
add
dec
xchg
imul
sti
pushf
lea
jge
pop
cmps
loopne
sub
daa
mov
inc
jb
or
pop
sbb
and
imul
or
xor
cld
jae
out
les
push
jnp
jp
int
lock
mov
add
dec
add
pop
xchg
dec
jle
data16
inc
cld
scas
cmp
jne
pop
loopne
mov
or
jmp
daa
or
loope
push
push
movs
pop
mov
pop
rcl
or
aam
add
mov
add
xchg
aaa
test
mov
add
push
or
shr
mov
sbb
stc
inc
mov
and
(bad)
in
ret
cmps
or
enter
push
push
ins
cld
sbb
push
xlat
mov
icebp
or
repz
pop
push
cmp
adc
mov
or
xor
add
sub
scas
adc
rol
cmp
push
loope
(bad)
xlat
pusha
pop
xchg
test
mov
daa
imul
mov
mov
push
mov
gs
push
pop
xchg
in
xor
(bad)
rcl
jnp
cmp
adc
(bad)
fxch
push
dec
(bad)
popf
lock
mov
sar
jb
imul
xor
enter
adc
dec
jle
sbb
mov
lods
push
sub
or
ins
cmp
cmp
pushf
(bad)
scas
add
aam
adc
mov
aam
test
dec
in
repnz
add
mov
sbb
sub
lock
dec
jp
or
add
je
jne
sti
pop
imul
bound
dec
dec
lock
xor
fsub
shl
xor
or
sbb
ret
or
mov
sbb
jp
sub
push
cmps
mov
or
jl
cmp
pop
(bad)
pop
mov
pop
cmp
test
add
dec
test
push
push
pop
cmp
or
movs
mov
pop
mov
ins
ins
mov
sub
jne
mov
fwait
adc
mov
psubb
lds
(bad)
jb
jle
mov
sbb
repz
dec
dec
in
cmp
push
xor
push
inc
mov
jecxz
punpckhwd
and
stos
or
mov
movs
inc
or
aas
rcl
cmp
into
jno
stos
pop
aas
out
into
and
loope
mov
daa
sub
sbb
fbld
push
xor
sbb
inc
sbb
xor
sub
push
or
xor
adc
jo
fstp
sbb
mov
sbb
mov
mov
mov
inc
in
das
push
add
ins
das
je
or
jne
xor
pop
and
adc
fadd
jg
mov
movs
ja
and
push
push
mov
out
(bad)
fldcw
cli
inc
add
pusha
mov
enter
nop
sti
or
jmp
pop
sbb
or
cmp
xor
ds
add
sub
cmp
je
(bad)
in
ror
dec
cmp
nop
inc
call
adc
mov
push
push
jmp
cmp
sub
cmp
les
in
push
sub
fdivrp
je
mov
scas
and
mov
aam
dec
sub
hlt
pusha
ret
(bad)
pop
mov
fist
mov
jae
sbb
outs
rcr
sar
and
nop
xchg
(bad)
xor
pop
pop
sub
or
pop
inc
sbb
leave
rol
bound
cmp
mov
and
lock
push
hlt
sub
and
mov
das
sbb
inc
movs
movs
mov
rol
add
xor
push
fmul
add
inc
ds
xor
pop
sbb
jo
mov
inc
es
sbb
and
mov
cdq
cmp
sub
push
lahf
and
mul
xchg
xchg
adc
lock
nop
mov
cs
retf
std
adc
or
mov
shr
inc
mov
mov
ret
ret
and
rol
inc
adc
out
js
and
or
push
push
loope
push
adc
out
sbb
dec
adc
push
arpl
add
push
jns
push
cmp
mov
adc
push
add
inc
jne
mov
pop
call
dec
dec
ss
mov
add
jae
jmp
neg
jg
sbb
add
or
ins
mov
(bad)
js
jle
test
add
pusha
push
outs
test
xor
(bad)
int
jne
call
aaa
mov
fadd
xchg
push
leave
mov
mov
sbb
call
sbb
(bad)
in
jae
inc
loop
add
jmp
dec
ret
mov
add
gs
mov
mov
cmp
xor
cli
sub
dec
sar
pop
pop
adc
adc
or
sbb
sbb
push
dec
adc
ins
aas
cmp
sbb
push
push
push
xor
bound
push
jno
jae
pop
inc
icebp
out
pop
add
clc
pop
pop
adc
pop
iret
dec
push
(bad)
and
add
jbe
fstp
jmp
inc
ret
and
sub
and
mov
test
jmp
int3
jl
mov
xor
loopne
gs
test
sbb
inc
lds
add
in
push
inc
test
retf
push
push
adc
iret
push
outs
mov
popf
call
and
push
mov
dec
mov
add
mov
test
je
lea
sbb
xor
dec
or
aaa
nop
shr
lea
jecxz
push
jecxz
movaps
mov
inc
rol
sub
adc
adc
loopne
nop
pop
mov
jns
cmps
pop
cs
inc
pop
lock
add
inc
push
xor
adc
add
jp
jo
xchg
sbb
or
nop
mov
mov
daa
dec
cmp
setns
add
or
jne
call
and
add
rol
push
or
cmp
and
retf
and
(bad)
nop
arpl
ret
or
adc
sub
test
and
test
push
xchg
dec
(bad)
sub
arpl
int
or
test
adc
xor
xor
in
in
imul
dec
mov
in
jne
scas
test
jmp
push
add
push
push
push
add
xor
imul
adc
aaa
adc
jnp
jb
js
je
call
rol
jle
or
and
add
fsubr
inc
daa
lods
inc
push
mov
mov
pop
fwait
push
xchg
xor
(bad)
shl
fadd
push
loopne
test
push
adc
test
ret
xchg
mov
fnstenv
add
mov
sbb
dec
inc
fwait
in
mov
inc
and
popa
adc
iret
inc
jle
inc
ds
ror
call
adc
push
sar
cmp
pop
je
sbb
add
mov
scas
or
je
cmp
pusha
sbb
stc
or
hlt
outs
mov
xor
sub
fstp
cmp
(bad)
adc
sbb
inc
outs
xchg
outs
(bad)
add
push
or
cmps
into
fwait
cs
adc
lock
in
xchg
pusha
sbb
xchg
into
shr
nop
pop
inc
mov
stos
or
dec
or
push
sbb
jnp
adc
mov
sbb
mov
jg
(bad)
ret
je
adc
add
adc
popa
pop
cmp
push
into
pop
shr
scas
push
loope
xchg
xor
data16
cmp
popf
adc
sahf
ret
jo
cmp
add
enter
test
cwde
dec
loop
scas
je
pop
dec
inc
xlat
add
aam
das
(bad)
pop
jb
mov
or
pop
imul
rol
pop
xchg
cmps
addr16
(bad)
jmp
repnz
pop
and
xor
aas
aaa
sub
sub
mov
inc
in
inc
or
add
call
ins
sbb
(bad)
std
pop
push
pop
add
jg
repz
add
adc
push
or
add
data16
mov
xchg
fmul
cmp
sub
jne
and
shr
push
and
inc
xor
sysexit
jne
popf
jae
fbstp
add
add
out
jmp
int
dec
es
clc
jle
jmp
mov
(bad)
dec
pop
inc
add
push
movs
aas
lods
mov
aam
mov
(bad)
xor
and
push
pop
jmp
bound
inc
test
or
push
mov
and
nop
mov
gs
dec
xchg
add
shl
je
xor
cdq
call
pusha
xor
popa
add
and
fwait
pop
aaa
or
dec
dec
add
push
repnz
sub
or
and
sub
mov
inc
sub
adc
and
into
mov
xchg
xchg
les
fidivr
sub
and
sti
add
cmp
push
out
and
xchg
push
cdq
test
popa
push
jmp
or
xlat
cmp
mov
cmp
pop
loopne
push
and
sub
jl
neg
js
imul
xchg
jne
mov
dec
add
xchg
adc
mov
pop
dec
cmps
cdq
adc
int3
xchg
jmp
ret
fsubr
unpckhps
dec
dec
inc
dec
dec
dec
sbb
jmp
nop
(bad)
stos
or
xor
ss
adc
xchg
cwde
ds
add
ins
jg
push
nop
jbe
xchg
imul
cdq
xor
and
pop
cdq
or
shufps
es
add
adc
jo
popa
ror
jo
or
inc
add
adc
and
test
in
outs
adc
dec
mov
ins
jb
lock
mov
movs
rcr
call
movs
sbb
leave
add
call
add
or
adc
inc
(bad)
js
dec
test
jp
push
repnz
and
daa
dec
cmp
fcmovb
inc
adc
mov
syscall
mov
push
sbb
cwde
data16
mov
sti
ss
out
cmp
shl
outs
or
lea
adc
test
cmp
pop
scas
dec
mov
add
sahf
sbb
add
adc
mov
int3
xor
mov
adc
adc
loopne
cwde
fidiv
outs
push
cmps
cmp
mov
stos
adc
mov
aaa
scas
je
adc
cmp
mov
push
dec
lods
das
mov
ins
fisub
cmp
daa
xchg
inc
push
cmp
scas
cmps
dec
cmp
arpl
pusha
and
scas
sbb
in
cmp
dec
fsub
and
rcr
rcr
adc
sbb
shl
imul
xor
jg
xchg
popf
cmps
mov
dec
shl
(bad)
jecxz
imul
test
push
or
push
pop
and
aaa
cs
push
dec
and
add
add
sub
sub
jg
ficom
sbb
(bad)
imul
or
test
inc
shl
in
call
loope
call
cmc
pop
sub
out
popf
mov
mov
mul
add
push
cmp
push
add
sub
cli
xor
and
call
adc
cli
dec
sbb
stos
add
dec
mov
and
inc
push
mov
scas
int3
add
mov
loop
adc
test
cmp
dec
push
lea
push
lods
pusha
push
scas
fidiv
mov
(bad)
in
(bad)
adc
cmp
xchg
dec
in
sub
int
imul
ins
dec
shl
repz
pop
adc
push
jecxz
mov
popf
mov
sbb
add
push
out
nop
add
push
mov
iret
pop
dec
fcomp
xchg
mov
mov
dec
mov
pop
xchg
inc
sbb
push
push
fcomp
push
cmp
nop
fcomp
fcomp
cmp
nop
inc
fcomp
fsub
nop
inc
push
fcomp
fcom
fcomp
inc
push
cmp
fcomp
fdiv
cmp
nop
fcomp
fmul
xchg
xchg
xchg
mov
outs
mov
nop
mov
call
pop
arpl
ja
mov
lahf
test
imul
stc
add
or
daa
add
ss
rcr
mov
in
outs
sub
jbe
int
add
arpl
jns
sub
ins
mov
push
(bad)
(bad)
les
nop
mov
fimul
mov
and
test
push
xchg
pop
xor
mov
push
gs
jnp
(bad)
shl
mov
dec
shl
icebp
sti
shl
push
sbb
sub
aaa
inc
dec
inc
push
push
pop
inc
jb
cmps
popa
imul
pop
xchg
out
and
adc
repz
das
jmp
sbb
mov
and
mov
lds
fs
cmp
xor
(bad)
rol
je
and
(bad)
adc
js
jl
pop
inc
repnz
ret
or
xchg
arpl
xor
pop
mov
push
call
and
das
cmp
push
dec
shl
mov
popf
cmps
mov
lds
call
push
jge
xor
shl
shl
(bad)
xchg
mov
jae
add
adc
pop
push
add
and
outs
or
mul
add
push
aam
enter
test
arpl
aam
pushf
pushf
pushf
pushf
aam
aam
enter
aam
aam
xchg
aam
aam
sbb
enter
aam
jb
and
aam
jb
and
and
test
(bad)
pop
push
push
call
ror
outs
xchg
xor
shr
or
shr
pop
shl
add
shl
sub
dec
inc
das
inc
aaa
push
aas
inc
dec
cmp
dec
rcl
addr16
sbb
pop
lock
int3
fisubr
sbb
and
xor
and
inc
adc
int3
mov
cdq
push
push
test
xor
shl
frstpm(287
out
stc
dec
shl
pop
and
xor
aas
dec
push
pop
addr16
xor
shl
test
shl
popf
movs
ins
dec
out
fsubr
outs
sub
push
xchg
call
aas
jg
ret
mov
pop
nop
sub
ror
add
rcr
xchg
add
shr
clc
add
adc
cdq
in
rcl
shl
cdq
fs
rcl
rcl
cdq
fs
dec
rcl
shl
es
rcl
rcl
and
ror
(bad)
dec
pop
or
pop
es
push
js
and
jecxz
retf
shl
or
xor
sub
cmp
dec
shl
shl
mov
fnstenvw
call
fninit
jmp
sti
xchg
add
daa
jmp
xchg
sub
cld
sbb
(bad)
sbb
xor
sbb
cmps
or
adc
inc
mov
mov
jno
scas
retf
leave
push
daa
xchg
xchg
call
or
mov
sub
imul
push
inc
dec
popf
push
popa
dec
shl
xchg
fwait
xor
shl
shl
cmc
jmp
rcr
sahf
adc
sbb
push
out
fdiv
popf
jnp
neg
dec
dec
sahf
cmp
in
push
es
mov
xchg
xchg
fisubr
cvttps2pi
adc
pop
dec
rol
and
dec
punpckhwd
int3
int
jg
push
and
pop
mov
repz
jno
lahf
xchg
cdq
mov
imul
cmps
imul
ficomp
push
imul
adc
jmp
mov
mov
push
inc
aaa
mov
add
into
dec
adc
sbb
test
mov
out
jg
mov
xor
cmps
mov
(bad)
imul
jecxz
test
shl
cmp
xor
pop
arpl
ja
leave
and
in
mov
ins
mov
xor
or
stos
js
sub
jns
jecxz
ss
jne
movs
cli
push
jno
mov
cmps
xchg
cdq
mov
imul
lods
imul
sbb
das
cmp
push
movs
(bad)
repnz
inc
jb
jl
push
movs
push
fmul
aas
(bad)
dec
imul
xor
pop
jp
push
(bad)
xchg
xchg
test
cmovge
inc
int3
int3
cmps
lahf
push
jns
call
mov
cmps
imul
icebp
sti
add
and
cmps
imul
pop
imul
out
dec
xchg
ficom
cmps
cmp
lods
and
aas
das
or
sub
add
push
pop
dec
adc
jne
(bad)
call
test
(bad)
cdq
mov
xor
mov
icebp
shl
clts
sbb
dec
shl
push
pop
in
dec
test
in
pop
push
test
bound
push
adc
inc
cmp
dec
or
movs
ror
sbb
imul
ror
ss
shl
mov
repz
int3
test
les
in
out
add
mov
test
loopne
loope
xor
adc
and
jmp
or
adc
adc
mov
mov
imul
mov
out
push
mov
pop
and
dec
adc
loopne
xchg
loopne
loope
jecxz
mov
dec
repnz
js
cwde
stos
jbe
lea
cmp
ficom
enter
pandn
sub
test
adc
dec
fdivr
test
(bad)
adc
shl
push
jb
aam
pusha
mov
push
jns
(bad)
shr
cmp
adc
cwde
(bad)
jmp
nop
vmwrite
arpl
fist
jns
and
adc
pop
cmp
fs
fwait
int3
int3
int3
in
inc
push
int3
int3
int3
nop
inc
push
cmp
int3
int3
inc
push
cmp
int3
int3
int3
push
cmp
nop
int3
int3
int3
int3
cmp
nop
inc
int3
int3
int3
inc
dec
dec
push
int3
int3
int3
sbb
in
int3
int3
int3
mov
xor
imul
retf
jns
mov
xor
xchg
lahf
cmps
scas
and
call
jmp
cmps
std
pop
adc
sbb
imul
arpl
jnp
lods
mov
mov
cmp
out
push
shl
mov
lahf
test
xor
in
stc
add
xor
xchg
or
mov
dec
rol
mov
(bad)
rcr
mov
xor
in
stc
add
push
pop
shl
aas
dec
leave
or
push
lods
push
imul
dec
movs
xor
jl
imul
js
or
ds
bound
add
scas
add
or
les
movs
add
inc
leave
push
pop
dec
cli
dec
mov
add
mov
shr
int
dec
jno
mov
push
push
and
nop
or
outs
ins
into
or
pop
xlat
js
enter
mov
cmp
cmc
je
mov
rol
dec
or
pop
dec
xor
add
sbb
or
pop
adc
mov
pop
or
mov
in
ins
pop
mov
or
jmp
xchg
xchg
call
xlat
ins
push
push
sbb
movs
inc
(bad)
xchg
pop
loope
and
mov
xor
dec
or
mov
ss
sbb
push
mov
cmp
(bad)
es
cmps
add
je
fstp
fild
(bad)
ffreep
sti
inc
pusha
fnsave
jl
xchg
push
mov
das
xor
pop
and
mov
add
mov
test
ins
xor
popa
or
cdq
push
movs
and
cmp
adc
cmp
movs
push
and
cmps
mov
mov
jnp
adc
fstp
in
test
mov
jl
jo
and
sbb
adc
lods
mov
mov
sbb
push
sub
gs
enter
or
outs
jno
xchg
inc
push
or
cmp
push
sub
ror
fcom
xchg
xchg
(bad)
popa
mov
inc
adc
xor
mov
add
mov
call
pushf
mov
imul
pop
mov
test
unpcklps
retf
mov
pop
repz
fldln2
mov
mov
jmp
mov
pop
pushf
pop
push
test
xor
enter
pop
dec
push
pop
add
les
adc
mov
inc
add
outs
sbb
or
push
sbb
and
sub
adc
or
xor
add
fild
call
fidivr
ficom
daa
loopne
xor
aas
mov
adc
nop
pushf
mov
test
mov
dec
inc
xchg
out
nop
adc
aas
mov
xor
fld
loopne
arpl
push
sbb
or
mov
(bad)
mov
shl
das
imul
adc
or
jne
jmp
lods
inc
sbb
scas
xor
and
and
cld
add
or
pop
or
push
or
mov
xchg
jbe
sub
jmp
adc
sub
fwait
test
dec
pop
pop
inc
arpl
leave
mov
pop
outs
xchg
push
add
iret
jae
mov
sub
sbb
xor
cld
nop
dec
push
add
cmp
adc
jle
xchg
pushf
nop
and
mov
jne
or
mov
and
rol
xor
movs
imul
shl
sbb
mov
or
mov
add
inc
pop
mov
push
sbb
dec
or
add
outs
mov
bswap
adc
sub
add
mov
test
ret
or
cs
mov
or
sub
add
daa
outs
dec
pop
jmp
mov
lods
xchg
jno
mov
sub
mov
pop
jb
mov
sbb
ja
(bad)
push
enter
xor
xchg
mov
mov
mov
cmp
dec
sub
push
nop
mov
xchg
cmp
daa
in
(bad)
jge
and
sbb
loopne
dec
shr
movs
nop
sub
fs
in
inc
in
dec
cmp
in
test
rcr
das
icebp
xor
dec
mov
ret
ja
or
or
js
adc
adc
mov
mov
call
(bad)
enter
adc
adc
xchg
xchg
hlt
hlt
and
add
fcom
sub
nop
mov
pcmpgtb
xor
and
call
outs
xchg
aad
jecxz
inc
dec
mov
shl
pop
outs
adc
scas
adc
adc
stos
xchg
pop
push
aaa
lods
repnz
cwde
inc
cwde
xchg
leave
or
sar
lock
ror
xor
nop
nop
cmp
test
push
mov
push
add
or
je
jge
or
cdq
shr
enter
jmp
adc
inc
xchg
jbe
xchg
stos
movs
add
test
ror
dec
mov
dec
clc
pop
mov
mov
adc
pop
inc
ret
mov
mov
add
inc
call
jnp
push
xor
stc
test
dec
movs
mov
xchg
das
fld1
loop
mov
fstp
cmp
dec
daa
mov
pop
mov
nop
daa
sub
inc
repnz
cmp
outs
test
les
daa
pusha
cwde
test
nop
ja
les
nop
adc
hlt
les
inc
jb
lds
add
jmp
dec
dec
in
xchg
lds
mov
xchg
sub
and
push
lock
mov
and
aam
and
xchg
inc
enter
and
dec
pop
push
leave
adc
(bad)
nop
pop
jb
jle
es
repnz
dec
enter
jae
pop
push
gs
loopne
add
or
mov
and
je
mov
or
pop
adc
hlt
xor
pop
jno
js
enter
pop
sbb
sub
push
mov
in
or
xor
mov
sbb
pop
add
jne
inc
and
xchg
xchg
leave
and
(bad)
xchg
dec
call
or
ret
xchg
(bad)
sub
ja
add
or
xchg
pushf
push
retf
sbb
and
inc
enter
sbb
xchg
outs
pop
retf
sub
retf
mov
mov
cmp
jae
leave
sub
nop
aas
xchg
retf
mov
inc
jb
test
adc
adc
(bad)
mov
int3
push
stos
and
es
adc
outs
imul
enter
push
addr16
int3
int3
add
push
dec
fbstp
mov
xchg
movs
int3
arpl
sbb
int
inc
xor
sbb
in
in
stc
popa
test
push
nop
(bad)
dec
daa
sbb
mov
aaa
out
popf
js
pop
xchg
mov
mov
push
mov
jecxz
xor
add
mov
inc
(bad)
retf
push
into
xor
popa
mov
push
in
or
pop
inc
pop
mov
into
das
adc
lock
aaa
xchg
scas
sbb
enter
test
inc
mov
aaa
lds
iret
mov
adc
in
sub
int
(bad)
or
mov
adc
(bad)
push
jo
les
pusha
mov
daa
cmp
sbb
ins
hlt
add
adc
hlt
cmovge
test
mov
or
adc
dec
pop
lods
push
jmp
mov
add
mov
and
mov
adc
lock
add
or
xchg
aas
xchg
inc
bound
cmp
sub
push
adc
pop
stos
adc
clc
or
ret
bound
nop
mov
or
cs
pop
push
repnz
rol
xor
push
push
inc
pop
cli
or
inc
jns
les
pop
jl
jb
icebp
mov
or
rol
or
sub
add
sbb
es
jne
adc
and
inc
jo
lahf
and
push
dec
pop
push
push
cmps
xor
or
movs
adc
test
and
ret
das
jnp
cmp
adc
call
leave
pusha
enter
lock
aam
pop
dec
scas
test
les
xor
pop
sub
mov
mov
dec
mov
push
sbb
cmps
clc
aam
cmp
loope
mov
ret
pop
dec
fwait
xor
inc
les
cmp
mov
xchg
fwait
and
adc
xlat
push
test
jo
rcl
and
pop
cmp
repnz
and
pop
(bad)
leave
sub
ins
(bad)
in
pusha
adc
pop
nop
sbb
mov
loope
dec
outs
xchg
adc
mov
sbb
in
retf
mov
xor
pusha
enter
loopne
pusha
in
and
int3
jo
movs
loopne
xor
dec
pusha
(bad)
mov
test
call
lock
rcl
pop
int3
rol
jp
push
or
movs
inc
xchg
mov
push
push
call
pop
shl
xchg
xlat
dec
push
fsub
add
push
js
fcomp
out
fdiv
jmp
and
fnstcw
and
add
mov
cmp
pop
dec
(bad)
pop
fldcw
mov
fnstcw
loop
cmp
leave
sub
cmp
or
lods
mov
sub
sub
enter
inc
fiadd
fisubr
or
aam
add
imul
bound
and
adc
inc
or
repnz
jb
adc
sub
int
dec
adc
fucomi
(bad)
bound
jo
push
push
rcl
dec
fs
fwait
xchg
pushf
inc
dec
fsub
jo
outs
pop
pop
and
xor
lahf
cwde
fmul
jns
adc
int3
sbb
xchg
leave
jo
movs
lea
xlat
push
pusha
and
andnps
jb
mov
cmp
das
rcr
lea
and
mov
mov
adc
fsubrp
dec
add
cmp
fisttp
mov
js
mov
test
les
iret
mov
cmp
pop
mov
inc
stos
outs
mov
mov
xchg
mov
dec
ss
enter
das
or
sbb
les
xchg
dec
sub
add
aad
sbb
pop
adc
or
loope
inc
sub
jp
push
adc
mov
sbb
loope
inc
cmp
and
dec
cmp
mov
adc
push
jns
jo
inc
loop
cmps
inc
test
add
in
loop
push
xchg
adc
stos
in
push
push
mov
repnz
inc
les
jno
dec
pop
test
outs
clc
in
mov
jg
mov
sub
rcl
enter
cdq
aaa
inc
in
pop
enter
call
enter
fsubr
rol
fcom
mov
mov
jne
pop
mov
and
push
push
test
mov
leave
mov
stos
jl
cmp
or
jns
inc
adc
add
push
nop
mov
test
call
xchg
sbb
inc
leave
push
enter
scas
nop
and
inc
xchg
inc
and
mov
nop
and
in
sahf
ror
mov
add
mov
and
push
(bad)
mov
jae
repnz
mov
or
fs
inc
cmp
mov
nop
and
pop
mov
js
mov
jmp
inc
jns
mov
xchg
psubq
inc
xchg
rcl
aaa
inc
vmwrite
jo
sub
or
add
and
cld
or
sub
nop
in
inc
jbe
and
cdq
or
fdiv
mov
push
dec
add
xchg
in
mov
in
in
dec
cld
push
and
and
stos
sub
pop
inc
ret
xlat
pop
leave
mov
paddsw
or
or
dec
sub
packssdw
sbb
(bad)
loope
in
xor
ss
(bad)
jno
je
mov
cmp
in
sub
fild
adc
xchg
mov
rcl
inc
out
adc
or
dec
xchg
pop
lds
inc
adc
cmps
and
sbb
in
cmp
jne
dec
scas
inc
cmps
jl
push
(bad)
sub
inc
dec
push
scas
popf
push
shl
lock
push
aad
adc
lds
or
scas
cmps
lock
mov
dec
enter
pushf
loopne
pop
fisttp
(bad)
sub
sbb
mov
push
xlat
or
call
jo
data16
fsubr
sbb
aaa
xchg
dec
xor
fadd
mov
movs
fcom
or
mov
movs
dec
mov
cmp
mov
arpl
add
sbb
or
addr16
sbb
or
in
or
pop
mov
pop
dec
xchg
and
rcr
repnz
rol
lods
push
cmp
inc
push
xchg
dec
call
mov
iret
xor
repz
daa
test
add
dec
cld
test
add
inc
mov
dec
ins
hlt
adc
push
xchg
bound
jmp
ret
dec
popf
sar
cdq
test
dec
in
pop
xor
outs
and
loope
xor
and
xor
cwde
dec
repnz
test
test
call
xchg
inc
mov
out
or
pop
push
and
xor
sub
inc
and
and
xor
cmps
dec
xchg
jb
fs
mov
not
xor
xchg
sub
mov
cdq
mov
jno
and
push
or
dec
and
shl
imul
mov
inc
leave
mov
mov
leave
and
xor
pop
push
add
cmp
cmps
mov
and
movs
add
add
les
and
pop
sub
or
test
cmp
mov
repnz
iret
imul
xchg
push
scas
mov
stos
les
mov
pop
mov
or
add
test
invd
dec
adc
std
fadd
xchg
aam
pop
pop
pop
xor
pop
or
loope
iret
enter
add
adc
push
xor
xor
sbb
inc
fimul
lods
js
lock
adc
sub
inc
and
add
mov
or
pusha
out
mov
nop
sahf
pop
and
das
add
inc
pop
or
dec
mov
inc
adc
ja
int3
dec
lea
pop
inc
sti
in
pusha
sub
pop
daa
push
and
cwde
dec
add
int3
retf
lods
xor
test
ror
add
xchg
push
sbb
mov
cmp
push
je
ror
rol
mov
jno
ins
je
cmp
add
inc
movs
sar
xor
lods
dec
mov
mov
sub
and
cmp
xchg
or
sti
pop
in
stos
xchg
add
das
add
in
mov
or
icebp
dec
adc
movs
loopne
out
ret
dec
dec
loope
(bad)
mov
jns
ret
cmc
inc
add
or
inc
mov
adc
sub
xor
and
nop
lahf
mov
enter
std
(bad)
xlat
pop
mov
out
sub
dec
and
push
cmp
inc
pop
xchg
add
dec
mov
fild
sbb
push
add
xchg
cmp
and
sbb
bound
jmp
push
imul
ror
hlt
(bad)
adc
dec
add
cmp
jne
lock
adc
push
or
dec
inc
loope
and
mov
push
pop
add
mov
mov
jae
imul
cmp
or
cmp
arpl
sub
add
sbb
mov
pushf
out
ss
inc
mov
adc
(bad)
repz
mov
stos
outs
movs
(bad)
add
jns
or
or
sub
lahf
inc
sub
inc
pop
idiv
das
jbe
mov
add
push
push
add
sub
xor
sbb
sub
dec
les
mov
lahf
dec
push
add
push
aaa
mov
es
in
dec
push
and
pop
add
repz
inc
or
(bad)
jo
dec
cmp
adc
adc
jp
xchg
addr16
xchg
bound
inc
imul
cs
sbb
ins
es
add
inc
push
data16
pusha
in
ficomp
xchg
sbb
jb
adc
and
das
jbe
inc
fisub
cmps
push
pop
fidiv
out
test
adc
pop
sbb
push
cmps
dec
sahf
ss
or
out
inc
xor
sbb
ror
addr16
jbe
push
out
xor
xor
mov
add
inc
inc
repz
sbb
dec
rcl
dec
das
push
sub
push
sbb
sbb
inc
push
xor
int3
pop
dec
adc
and
ins
ret
stos
cli
imul
mov
sahf
je
imul
lahf
adc
or
retf
arpl
push
inc
add
out
or
out
push
inc
das
push
daa
test
sbb
push
daa
(bad)
adc
sbb
dec
in
push
inc
daa
add
push
or
or
inc
into
jle
push
jl
imul
xor
in
(bad)
dec
push
push
push
and
shl
lds
pop
pop
cs
cmp
out
jae
lds
jns
or
retf
cs
shr
jne
bound
xchg
fcmovb
out
push
aas
mov
sbb
sbb
das
mov
inc
and
pop
xor
push
sbb
shl
mov
push
pop
imul
mov
ja
adc
(bad)
out
das
dec
ficomp
data16
cmps
push
cmp
fstp
arpl
arpl
mov
test
jbe
or
or
xor
and
mov
add
push
mov
jns
out
cmps
pop
lea
adc
mov
push
or
and
ss
xchg
mov
cmps
mov
push
cmp
mov
lods
push
add
shr
test
add
fsub
xor
test
mov
nop
dec
mov
fnstenvw
add
aam
mov
xchg
je
call
sub
imul
ins
call
push
jbe
shl
push
mov
call
pop
inc
dec
imul
and
call
add
sub
cmps
imul
cmps
imul
sbb
cmps
imul
imul
add
push
cld
ss
shl
movs
lock
shl
in
jl
shl
inc
fmul
xor
sub
sbb
add
daa
xchg
lahf
xor
jp
rol
mov
push
cmp
add
scas
dec
sbb
or
into
sub
mov
xor
pop
add
adc
push
xchg
push
pop
inc
xor
pop
movs
or
outs
cmp
push
out
sbb
jno
nop
jmp
jmp
inc
mov
popf
or
jb
cmps
imul
jecxz
arpl
add
or
xchg
mov
sbb
js
cmp
xchg
stc
jge
clc
add
sub
enter
fadd
pop
mov
add
xchg
std
repnz
pop
and
pop
adc
push
mov
hlt
push
dec
shl
ins
call
push
in
loopne
call
shl
sub
int3
hlt
pop
enter
jbe
sar
je
jb
mov
or
lea
jmp
sahf
push
dec
sub
sub
jns
cld
push
sub
call
inc
xor
cmp
inc
dec
xor
pop
mov
add
pop
jb
push
(bad)
sub
inc
fwait
fs
dec
mov
or
and
add
lds
das
or
add
sub
pop
jp
in
in
pop
xor
pop
adc
or
lock
or
or
push
mov
lahf
int3
push
add
ja
ds
add
ror
jae
push
loope
add
ins
jp
sub
xor
in
inc
or
movs
xchg
xchg
mov
lds
es
ror
mov
pop
sub
pusha
xchg
cld
sbb
and
inc
mov
cmp
inc
push
adc
or
enter
push
inc
sub
jne
test
pop
and
test
mov
(bad)
imul
out
and
leave
and
int
out
sub
sub
adc
mov
mov
add
les
cmps
push
pmaddwd
push
or
mov
mov
push
out
sub
jae
mov
fld
mov
sub
fs
loop
cmp
dec
ret
aad
pop
xor
adc
cmp
mov
or
push
adc
adc
ret
xor
test
add
cmp
lock
pop
sti
addr16
pop
clc
push
or
jl
(bad)
sub
inc
and
fwait
push
rol
pushf
and
inc
mov
ins
mov
sub
mov
dec
fdiv
dec
push
fcomp
arpl
adc
or
call
xchg
add
lock
sbb
fnstsw
push
scas
inc
add
adc
jnp
adc
mov
push
mov
shl
add
and
mov
mov
or
inc
fwait
(bad)
push
test
push
cmp
or
or
mov
push
push
add
cmp
pop
call
or
and
mov
aam
cmp
rcl
iret
outs
adc
gs
push
add
xor
dec
cmps
inc
or
pop
adc
xor
ins
pusha
or
cmp
pop
mov
shr
or
add
push
frstor
or
pop
adc
dec
imul
add
inc
mov
pusha
sub
dec
sbb
mov
ror
add
pop
call
sbb
or
adc
xor
loopne
mov
test
push
pusha
xchg
push
cmp
adc
sbb
jne
mov
xchg
int
inc
movs
pusha
pop
sbb
frstor
pop
xchg
mov
popa
test
ins
dec
add
loope
jno
aad
sub
ins
pushf
leave
retf
dec
in
mov
pop
daa
adc
test
int
sub
repnz
inc
ins
out
repnz
push
jmp
and
in
dec
mov
(bad)
enter
push
jmp
loopne
loopne
aam
sub
test
and
push
cmp
dec
add
xor
mov
aaa
pop
mov
pop
and
adc
jb
jbe
push
pop
cmc
add
sbb
test
dec
movs
cmc
nop
cmp
clc
scas
add
enter
arpl
and
adc
adc
xor
jge
lea
pusha
data16
adc
add
fdiv
call
and
xchg
xchg
jg
lods
adc
sub
test
sbb
adc
add
fsubrp
sbb
push
mov
test
test
inc
push
mov
addr16
add
das
pop
add
dec
push
aad
mov
daa
fcomp
add
xchg
fdivr
imul
mov
pop
pop
add
add
adc
nop
sbb
sbb
fnsave
mov
sbb
pop
mov
adc
jge
mov
stos
fdivr
fild
aas
inc
loopne
lea
mov
sub
dec
jnp
das
dec
fs
popa
sbb
dec
test
adc
out
fdiv
dec
daa
jmp
test
enter
xchg
or
iret
daa
push
inc
and
sbb
ins
(bad)
bound
gs
out
mov
xor
jns
fisttp
inc
xchg
fidivr
jmp
mov
xor
inc
sub
dec
sbb
mov
mov
retf
scas
xchg
mov
inc
mov
scas
rol
mov
shl
enter
mov
or
add
sbb
(bad)
push
xchg
popf
dec
or
and
pop
rcl
rcr
dec
pop
cmp
ins
cmp
daa
dec
inc
inc
lahf
call
adc
pop
lock
add
add
push
sbb
inc
push
lock
mov
imul
ret
or
adc
dec
loopne
popa
dec
lock
or
hlt
jecxz
retf
shr
test
jg
mov
and
in
add
loope
sbb
and
mov
mov
out
pop
pusha
or
and
mov
adc
test
xchg
out
call
pop
shl
dec
cmp
xlat
inc
adc
or
ss
xchg
xchg
out
(bad)
mov
popf
(bad)
mov
mov
lock
add
lods
adc
push
nop
pop
test
push
sub
adc
jmp
adc
dec
out
mov
or
(bad)
sub
test
pop
and
or
add
sti
pop
(bad)
jne
jae
les
popa
ret
jge
jmp
add
test
adc
inc
dec
mov
dec
das
imul
pop
(bad)
dec
mov
and
div
push
hlt
jle
xor
mov
popa
add
inc
or
adc
outs
fcmovnb
(bad)
iret
and
add
daa
jns
loope
inc
xchg
and
inc
bound
mov
and
ffree
sbb
cmps
fwait
push
and
xor
xchg
and
push
loope
inc
inc
mov
mov
pop
rcl
xlat
push
(bad)
movs
movzx
cld
xchg
mov
or
or
loop
and
and
push
jmp
leave
test
call
in
in
enter
xchg
data16
loopne
sbb
call
hlt
or
push
add
sahf
pop
adc
add
xor
nop
dec
xor
or
sar
inc
pop
add
and
cmp
mov
add
imul
in
xchg
mov
add
mov
jmp
push
punpcklwd
repnz
add
jmp
xchg
daa
cmp
xchg
add
call
enter
sub
pop
shl
mov
retf
cmp
adc
inc
add
nop
stc
and
mov
dec
imul
ficomp
push
ror
jmp
adc
push
xchg
push
push
mov
icebp
push
jge
scas
loop
aam
call
out
mov
sub
fist
sbb
push
test
(bad)
pop
inc
xchg
mov
mov
jbe
lods
pop
jge
add
push
call
mov
jns
dec
or
mov
lahf
sbb
jns
xchg
hlt
in
call
in
jmp
shl
xchg
mov
pop
and
sub
mov
cmps
push
dec
pop
sub
add
pop
mov
add
push
push
add
and
in
adc
add
or
std
mov
xor
add
inc
sub
xor
mov
sub
outs
push
dec
cmps
or
mov
inc
cmp
adc
or
push
clc
cmp
push
sbb
add
push
pop
shr
sbb
sub
add
push
adc
xchg
iret
mov
push
shr
fwait
addr16
fldcw
and
das
mov
xor
jae
fadd
inc
or
jno
ss
ret
and
inc
push
and
and
and
in
push
popf
es
or
mov
es
sub
jl
call
es
test
adc
shl
or
jae
add
ror
out
xor
push
add
and
cmps
xor
push
jb
xchg
in
enter
mov
daa
add
test
das
cs
test
(bad)
pop
and
popa
or
sub
pop
or
pop
inc
add
lods
add
mov
cld
shr
movzx
sub
pop
cmp
and
sub
pop
and
xor
es
push
pop
dec
out
adc
mov
leave
jo
xchg
jae
or
inc
sub
mov
aaa
movs
pop
bound
or
ss
sub
leave
adc
add
or
sub
iret
fdiv
bound
in
lods
xor
and
and
sbb
and
out
mov
push
cmp
enter
sbb
adc
mov
push
adc
add
fs
in
cmp
clc
fsubr
xchg
cs
cmp
and
jb
sbb
or
sbb
enter
or
lock
xchg
and
sbb
pop
dec
xchg
sub
iret
test
fcmovbe
(bad)
out
aas
ja
cmps
mov
test
or
ja
(bad)
cmp
mov
shr
sub
or
or
pop
xchg
xchg
inc
ins
scas
fsubr
sub
xchg
call
mov
ficomp
xchg
test
sub
pop
fld
ror
or
pop
xchg
and
add
ror
retf
daa
add
test
push
ror
xor
movs
and
inc
cs
test
cmps
test
sbb
ret
xchg
in
or
sub
sbb
ds
es
mov
test
pop
je
push
call
inc
das
xchg
sar
imul
pop
push
arpl
repnz
andnps
rcl
jbe
mov
adc
mov
xor
retf
ret
imul
sub
rol
popf
ins
xchg
leave
xor
sbb
daa
sar
add
popf
ret
movups
push
inc
mov
xchg
xchg
mov
dec
push
and
retf
adc
or
fisttp
inc
not
xor
cmp
adc
lock
cs
leave
mov
push
je
in
icebp
ficomp
add
jns
xor
sub
int3
mov
dec
cmp
nop
js
add
fistp
sub
fcomp
and
jnp
mov
or
sub
push
sbb
mov
enter
enter
mov
repnz
les
outs
inc
in
in
ins
mov
and
addr16
js
pop
mov
pop
jge
xchg
sub
mov
cld
sbb
add
and
dec
mov
mov
mov
push
push
enter
test
mov
sbb
sub
movs
pushf
popf
pushf
adc
or
mov
push
and
and
in
aas
rcl
xchg
sbb
pop
aaa
(bad)
and
mov
mov
and
mov
test
push
fsubr
test
inc
sbb
and
jmp
es
mov
adc
and
ret
dec
sbb
imul
or
ins
jae
adc
xor
(bad)
push
push
inc
sbb
test
icebp
mov
sub
sub
xor
dec
pushf
repnz
test
and
add
test
shr
push
mov
sbb
adc
(bad)
push
mov
inc
or
pop
pop
push
xor
xor
pop
and
(bad)
cs
pop
cld
push
lods
ja
pop
adc
pop
arpl
cmps
push
push
mov
push
lea
or
rcl
push
ja
outs
imul
ins
sub
fistp
sub
dec
rol
call
push
jl
enter
lock
lock
sahf
ss
mul
sbb
imul
fisubr
sbb
imul
leave
bnd
call
and
pop
in
sbb
mov
sbb
fsubr
push
in
inc
loopne
fsubr
stc
dec
fdivr
push
xchg
and
pop
loopne
xchg
dec
ret
or
and
pop
lods
mov
dec
jge
adc
xchg
push
or
add
popa
popa
sub
imul
inc
mov
test
add
cmp
(bad)
dec
paddb
fld
push
add
pushf
mov
(bad)
fild
add
(bad)
mov
movs
mov
and
popf
sbb
dec
add
test
and
in
imul
cmp
mov
pop
stos
pop
and
jae
add
mov
sub
(bad)
sahf
cmp
cs
pop
push
arpl
cmp
push
ret
cmp
and
cmp
cmp
cmp
aaa
inc
(bad)
daa
cmp
and
or
and
jne
mov
sahf
jmp
dec
lahf
sar
enter
pop
je
cmp
test
sbb
sbb
mov
movs
inc
jmp
jno
dec
inc
xchg
ja
jmp
xor
fistp
lea
push
shl
inc
dec
arpl
fcmovnu
xor
jne
shl
aas
fisttp
dec
cmp
pusha
sbb
movs
les
sbb
das
and
sub
movs
or
rcl
loopne
je
mov
data16
aaa
daa
dec
sbb
sbb
shl
sub
mov
inc
out
enter
and
sbb
push
or
push
arpl
and
bound
lock
mov
inc
in
cmp
sbb
invd
bound
and
push
(bad)
jmp
fs
jl
hlt
cmp
pop
and
mov
xchg
dec
popa
mov
dec
je
or
ret
or
lea
sub
nop
cmp
jmp
xchg
inc
dec
mov
aas
cmp
jbe
and
scas
add
inc
cmp
sbb
sahf
dec
jmp
push
call
sti
into
inc
xor
pop
sub
sub
mov
pop
xor
cmp
sub
ss
in
jne
sub
sbb
sti
inc
dec
stos
cmp
sub
mov
pop
inc
sbb
or
adc
add
add
shl
jns
mov
outs
aas
in
test
inc
sahf
out
add
and
mov
inc
not
mov
add
add
out
mov
mov
jb
or
fiadd
pop
adc
push
xor
fiadd
xchg
jmp
dec
les
pop
pop
push
dec
adc
(bad)
mov
mov
fsub
jne
(bad)
mov
sub
jge
(bad)
mov
jns
add
mov
arpl
inc
inc
mov
push
mov
fbld
mov
push
rcl
cs
cmps
adc
sahf
imul
xchg
push
inc
push
rcl
xor
xchg
adc
ss
or
icebp
bound
out
mov
sub
sub
push
sub
mov
fsub
jle
mov
jns
daa
jb
cmp
leave
enter
cmp
and
ss
call
in
repnz
in
or
cli
add
loopne
sbb
leave
enter
fdivr
xchg
mov
leave
xchg
mov
aam
dec
and
jb
rcl
mov
out
je
xor
int3
mov
pop
mov
enter
les
mov
and
add
int3
stc
or
xchg
fwait
jle
pop
add
imul
call
and
xor
mov
stos
xlat
stc
dec
repnz
clc
mov
and
jbe
sbb
ja
mov
dec
mov
mov
enter
dec
and
aam
repnz
nop
push
cmp
xor
lods
lods
mov
xchg
ret
mov
fdivr
add
lea
(bad)
nop
pop
cmp
inc
dec
dec
xor
xor
or
push
xor
sbb
or
push
ret
leave
aaa
cmp
cmps
cmp
push
pop
aaa
pop
popa
inc
add
cmpxchg
jbe
aas
js
cmp
les
mov
aaa
call
and
add
sbb
sar
mov
sbb
rol
inc
sub
imul
arpl
inc
inc
aaa
add
icebp
cmp
inc
fisubr
in
fs
mov
not
adc
adc
mov
sbb
ins
neg
jae
iret
or
push
push
aam
stos
push
rcl
sahf
or
mov
xchg
pop
aam
cdq
inc
in
xchg
les
inc
ins
xchg
adc
in
add
mov
adc
leave
lds
scas
adc
mov
cmp
(bad)
push
aad
push
push
xor
push
push
jecxz
xor
push
and
daa
jl
bound
add
jmp
add
and
mov
or
leave
add
jl
das
je
cmp
je
aas
test
cmp
je
cmp
xor
ds
adc
je
jl
sbb
sbb
aam
mov
jne
ins
jno
push
and
inc
out
dec
jecxz
dec
inc
jb
das
repz
push
mov
or
cmps
xchg
or
dec
mov
adc
and
test
pop
js
mov
ss
xor
adc
push
sub
push
xor
sbb
pop
pop
push
mov
add
int3
data16
adc
inc
(bad)
cmp
mov
dec
push
test
jb
and
add
or
(bad)
and
js
push
inc
stos
or
sub
and
inc
push
xchg
xchg
add
int3
mov
pop
adc
push
mov
and
dec
fwait
pop
ret
jl
add
xchg
imul
lods
loope
mov
jle
mov
js
and
adc
aad
fs
adc
test
sbb
push
test
inc
js
or
mov
pop
retf
pop
sub
imul
jo
dec
dec
jae
sbb
adc
jae
adc
nop
add
ins
push
dec
xor
mov
lahf
adc
or
and
add
loope
or
sbb
sbb
or
sbb
cmps
and
in
test
or
outs
adc
(bad)
pusha
or
push
dec
xor
sar
and
ret
ret
clc
test
mov
dec
jge
add
add
jp
(bad)
test
adc
inc
or
adc
sub
cdq
pop
shl
or
push
inc
adc
mov
pop
and
jmp
dec
test
gs
jecxz
aaa
jmp
fcmovb
sbb
les
mov
add
sub
inc
(bad)
and
jbe
mov
shl
ror
cli
pop
shr
mov
xchg
leave
add
ror
xchg
cmp
popf
sbb
inc
or
fistp
out
cmp
sbb
add
cli
add
dec
add
outs
jnp
add
inc
popf
cli
xchg
nop
mov
rol
test
add
add
shl
add
js
mov
lods
lods
jl
aas
movs
xor
and
or
add
jmp
cmp
(bad)
jo
es
mov
jne
pop
jo
das
add
cmp
cli
inc
test
pop
inc
jae
sub
jmp
aas
retf
popf
add
inc
push
or
popf
imul
sub
or
or
or
add
or
and
and
or
or
imul
pop
jecxz
pushf
jb
pusha
or
bswap
ja
retf
push
xor
cmp
ret
or
xor
mov
ret
in
ret
xor
std
push
adc
add
imul
test
add
pusha
or
(bad)
dec
inc
pop
scas
cmp
push
or
or
adc
popa
add
daa
xor
iret
push
addr16
fiadd
and
sbb
jne
xchg
add
rol
aaa
and
add
inc
fidiv
push
or
sub
jmp
dec
add
bound
or
ds
sahf
push
inc
lods
ins
inc
adc
mov
(bad)
out
test
and
out
test
dec
adc
cdq
ret
jmp
aas
and
push
dec
jo
sub
cmps
push
cwde
fcom
jo
or
cmp
bound
jnp
ja
pop
mov
fsubr
dec
add
and
lock
mov
test
and
imul
mov
je
pop
xor
cmp
pop
push
scas
xor
imul
push
pop
fwait
ja
jae
cld
pop
data16
jae
cmp
push
dec
sub
pop
or
pusha
or
inc
cwde
dec
call
lods
int3
mov
outs
int
stc
jae
popa
jo
popa
fs
aaa
push
je
ret
pop
push
pushf
xor
outs
arpl
push
call
rcr
xchg
movs
and
xor
and
add
test
dec
mov
jg
inc
inc
pop
inc
dec
push
inc
add
cmp
lods
fadd
cmc
jle
pop
ss
adc
pop
inc
ja
sbb
or
mov
and
cmp
or
jae
jl
push
mov
loope
push
xchg
mov
jae
lds
not
sub
es
repz
dec
jo
dec
push
sub
push
jns
popa
push
cmps
sub
push
push
in
ret
out
push
jl
mov
(bad)
jns
add
pop
add
add
nop
imul
sbb
xor
rol
xor
aam
sbb
push
sub
fadd
pop
push
or
inc
pop
in
push
mov
pop
lock
sbb
stos
ds
daa
push
pop
iret
pop
dec
mov
mov
lods
push
and
mov
fidiv
gs
xchg
or
enter
pushw
call
hlt
call
push
hlt
popa
nop
sub
call
push
push
or
sub
push
pop
and
inc
pusha
and
std
add
cmps
add
arpl
inc
mov
xor
ficomp
test
out
jo
jae
inc
ficom
xor
jb
ror
in
mov
imul
(bad)
adc
pop
aaa
push
and
add
fst
adc
mov
adc
dec
(bad)
and
ds
mov
ds
inc
sbb
ror
mov
or
inc
das
xchg
push
sbb
pop
jo
add
dec
add
inc
(bad)
call
lds
ja
xchg
adc
sub
jo
adc
test
or
mov
and
push
pop
push
lahf
and
cli
(bad)
sbb
push
or
mov
mov
or
pop
xchg
gs
add
imul
pop
cmp
and
pop
test
dec
xor
ror
aas
inc
push
and
or
add
das
xchg
add
sub
xchg
push
call
push
mov
inc
sub
xor
or
dec
rcl
movs
sbb
(bad)
pop
cld
jge
aam
test
mov
adc
ds
pop
inc
jp
xor
shl
push
xor
lahf
clc
pop
jmp
les
out
and
enter
add
pusha
loopne
xchg
lods
mov
pusha
mov
inc
sub
adc
dec
ins
mov
xor
movs
mov
mov
add
adc
in
pop
inc
clc
jge
add
inc
add
or
stc
xchg
mov
leave
pop
inc
cmps
repnz
mov
adc
idiv
mov
rcl
into
mov
mov
rol
dec
xchg
bound
(bad)
xor
(bad)
sub
jnp
add
dec
mov
aad
dec
xor
test
sbb
cmp
cmp
and
loop
xlat
into
add
add
ret
mov
mov
pop
and
jbe
ja
add
mov
je
jno
mov
leave
cwde
mov
rcl
xchg
xor
jge
es
mov
add
pop
add
dec
inc
pop
sub
pusha
loope
(bad)
dec
aam
mov
inc
add
hlt
dec
ficomp
cmp
cmp
mov
cmp
sbb
int
mov
aas
daa
movs
adc
ins
nop
fst
das
cld
jmp
in
aaa
inc
movs
in
push
sbb
inc
add
push
pop
xchg
sbb
cld
movs
out
imul
je
or
jnp
(bad)
push
inc
push
jmp
adc
sub
mov
cmp
sub
push
push
loopne
and
add
xor
out
pusha
or
shl
xchg
adc
adc
rcr
retf
cmp
jo
lea
test
cmp
inc
sbb
cdq
and
inc
adc
sub
nop
inc
sub
retf
and
sub
xor
arpl
mov
test
cmp
or
push
stos
lahf
xchg
sbb
or
push
xchg
push
pop
mov
and
xor
je
or
xor
jge
cmp
fadd
pop
or
ret
pop
xor
pop
push
push
push
mov
int
cs
sub
sqrtps
bound
inc
test
fiadd
fisttp
dec
mov
add
es
div
inc
adc
adc
inc
or
test
fist
adc
add
xchg
movs
popa
xor
mov
mov
mov
out
adc
imul
in
in
fwait
es
mov
cmp
or
mov
sbb
(bad)
das
inc
sbb
xchg
lock
adc
pop
mov
ins
or
outs
call
hlt
push
pop
(bad)
pop
hlt
mov
lock
ret
add
cwd
dec
fld
js
pop
xchg
and
push
or
and
push
mov
fs
out
call
retf
sbb
and
ret
imul
add
cmc
push
jo
cmps
aam
add
ja
mov
inc
test
sbb
ss
mov
sbb
adc
push
aas
mov
dec
sbb
pop
add
add
aaa
and
gs
push
dec
fcom
imul
dec
scas
push
adc
jmp
adc
push
or
dec
das
or
dec
and
cdq
not
mov
jp
jno
add
lods
sbb
inc
sub
and
push
jp
pop
xor
inc
or
inc
stos
std
mov
and
and
cmp
mov
aas
inc
movzx
ror
mov
test
cli
std
imul
mov
mov
add
inc
add
ret
mov
pop
cmp
inc
or
add
rol
ja
(bad)
retf
push
or
not
xor
fdivr
adc
dec
cmc
jnp
adc
or
cmp
or
test
mov
sub
dec
jle
idiv
imul
add
add
push
lea
mov
push
inc
ret
dec
jne
(bad)
ror
out
inc
inc
imul
push
mov
add
movs
pop
pop
sub
cmp
cmp
xchg
sbb
mov
add
fs
gs
sbb
cdq
inc
call
xchg
jmp
pusha
popa
add
movs
mov
push
in
nop
push
pop
sbb
cmp
push
cmc
stos
push
inc
jns
inc
sub
ret
jge
sar
or
aas
adc
fwait
add
ins
(bad)
xchg
loopne
cmp
sti
push
adc
ins
jb
jnp
xor
mov
xchg
xor
xchg
and
sbb
xor
das
ret
sub
lock
test
sbb
xor
add
mov
movs
dec
shr
or
mov
add
out
dec
push
xor
outs
shl
je
fbld
pop
fild
add
mov
dec
jmp
add
push
mov
pop
fisubr
shr
nop
dec
dec
cli
add
fwait
xchg
test
cmp
jne
(bad)
cdq
adc
push
test
xor
sub
and
cmp
dec
rol
arpl
or
pop
movs
imul
mov
dec
push
aam
push
pop
and
push
pusha
adc
push
sbb
and
cmp
xor
add
add
and
(bad)
mov
dec
jae
test
sub
outs
inc
or
dec
pop
sub
or
in
leave
add
cmp
adc
sbb
hlt
xor
or
xchg
arpl
call
push
jg
sbb
(bad)
cmp
in
bound
pop
fdivr
mov
inc
inc
and
or
cmp
mov
arpl
or
nop
push
sub
xor
adc
xor
pop
mov
shr
inc
inc
out
rcl
pop
loopne
sub
mov
mov
gs
sub
test
sbb
cmp
mov
xchg
test
adc
in
dec
mov
lock
add
pop
cmps
mov
or
mov
adc
or
movs
inc
add
adc
(bad)
cmps
mov
mov
adc
push
fsubrp
xchg
mov
mov
jno
test
test
push
sub
lea
(bad)
xor
scas
push
or
or
ins
arpl
ins
inc
fisub
test
jo
adc
fmul
xchg
sahf
xlat
loopne
add
adc
cmp
mov
mov
loopne
pop
call
mov
add
adc
bound
mov
(bad)
pop
and
add
and
pusha
or
or
inc
mov
repnz
nop
inc
enter
pop
data16
or
jno
aas
(bad)
ror
inc
cmp
test
popa
sbb
pop
hlt
ret
sub
cmp
cmps
push
dec
or
pop
adc
movs
adc
fsubr
mov
or
fwait
ret
lahf
aas
test
imul
xchg
or
and
push
movhps
xor
adc
and
retf
jno
sbb
fcom
scas
sub
lock
ret
lods
push
scas
mov
cmp
imul
adc
hlt
inc
xchg
adc
cli
cmp
sbb
mov
mov
sbb
call
ss
xor
cmp
pop
jns
and
mov
push
shl
cmp
mov
hlt
and
or
(bad)
enter
dec
adc
push
imul
push
pop
lea
ins
xor
in
into
jle
xchg
cwde
mov
xchg
stc
mov
or
vmread
jmp
dec
dec
or
and
ins
fidivr
out
jg
mov
inc
inc
adc
loopne
sbb
rol
test
push
outs
inc
cmp
dec
je
jb
dec
push
jbe
sub
cwde
pop
lods
mov
ins
jmp
ja
sub
retf
mov
or
add
inc
and
and
and
xchg
pusha
cmp
movs
cmp
add
push
xchg
sub
mov
mov
cli
ret
(bad)
enter
adc
push
and
xchg
sbb
aad
pop
lds
mov
push
cmp
jns
test
push
inc
das
push
inc
or
xchg
inc
in
jmp
pop
add
cmps
js
add
push
in
or
popa
mov
in
inc
ins
xchg
dec
or
jmp
push
and
mov
pop
jno
jg
outs
or
sub
jno
push
mov
xor
xchg
pop
(bad)
pop
iret
ins
jns
cmps
lock
inc
cmp
sub
inc
ja
pop
dec
cmp
imul
into
push
xor
add
(bad)
push
push
adc
call
cmp
adc
mov
retf
ret
rol
sub
sub
jmp
lock
int3
jge
inc
(bad)
mov
add
inc
adc
ins
pop
and
inc
dec
xlat
cli
adc
cld
test
mov
adc
xor
push
or
outs
add
adc
rol
or
lods
ficomp
outs
jnp
or
pop
xor
pmullw
call
cmp
push
rol
and
inc
sbb
sub
inc
call
mov
mov
imul
rcl
outs
in
cmp
xchg
loope
and
jae
push
mov
mov
inc
inc
mov
adc
pushf
ret
inc
cmp
iret
js
and
ins
je
pop
ret
sub
sub
or
loop
sbb
adc
xor
out
inc
add
and
call
inc
es
scas
imul
cld
dec
clc
cs
(bad)
xchg
rol
repnz
jl
or
jl
pop
dec
or
add
mov
xor
adc
or
jmp
(bad)
repz
movs
rcl
loopne
push
add
neg
pop
aad
add
test
xchg
or
sub
sbb
add
or
inc
ins
rol
sub
nop
and
adc
in
xor
sub
jmp
jnp
fwait
xchg
dec
imul
dec
dec
sbb
or
mov
aad
mov
jne
dec
pop
mov
test
or
push
sub
jo
jle
cmp
fadd
ret
jo
popa
mov
add
ret
pop
mov
add
addr16
pop
lds
and
jns
mov
add
or
jg
mov
scas
aaa
test
mov
jecxz
iret
xor
or
pop
lds
dec
xor
pop
outs
jo
adc
xchg
lea
push
xor
push
movs
mov
fiadd
js
cld
inc
add
pop
or
popa
jmp
mov
pop
in
mov
fidiv
adc
pop
xchg
mov
call
sub
inc
adc
fstp
js
pop
cmp
inc
retf
les
fadd
dec
fisttp
jne
cwde
pop
lods
cli
retf
xchg
push
and
inc
jne
movs
out
ja
aaa
and
xchg
add
ja
xchg
imul
aas
pop
nop
or
mov
sub
push
mov
mov
add
pop
mov
and
sysexit
pop
mov
or
addr16
adc
mov
adc
pushf
and
add
cmp
std
push
fsub
idiv
and
sbb
mul
and
add
mov
pop
mov
inc
adc
inc
mov
fs
and
fs
inc
dec
cld
ss
mov
outs
add
xor
inc
test
lea
sbb
push
scas
jmp
(bad)
pop
rcl
or
mov
pop
sub
fist
mov
pop
push
shl
adc
bound
imul
add
push
xor
nop
mov
cmp
pop
mov
xchg
xchg
xchg
fdivr
jecxz
jae
lods
sub
mov
or
es
mov
pop
imul
dec
(bad)
cmp
mov
xor
out
pushf
sbb
shl
mov
stos
popa
xor
jo
out
mov
sbb
mov
outs
loop
push
loop
ret
pushf
bound
aaa
xchg
inc
and
and
sub
pop
sbb
add
jns
sub
cmp
jle
fdiv
adc
pop
or
sbb
sar
addr16
adc
daa
add
stos
push
jmp
jl
or
adc
pop
sub
pop
jl
cmps
mov
push
xor
mov
or
push
xor
sub
mov
stc
sub
jae
aam
add
mov
pop
nop
sub
hlt
(bad)
jge
add
cmp
ja
pop
ja
dec
jb
pop
out
adc
call
clc
ja
add
adc
jbe
clc
adc
or
dec
arpl
mov
gs
int
ret
sbb
cmp
add
xor
(bad)
jb
sbb
jp
add
jae
je
xor
rcl
and
push
rol
sbb
adc
mov
sub
icebp
mov
sub
sub
(bad)
jbe
hlt
inc
push
add
push
add
and
out
sbb
jmp
mov
add
pop
or
add
xchg
add
inc
aam
(bad)
xchg
data16
nop
add
jge
push
sbb
or
push
add
xchg
inc
push
inc
sub
pop
xor
adc
inc
test
or
mov
(bad)
lods
mov
fcmovne
push
inc
dec
inc
inc
sub
xchg
cmp
shl
hlt
adc
jmp
or
imul
sub
mov
je
jbe
or
or
xor
nop
dec
or
xor
push
icebp
push
fwait
xchg
mov
or
add
repnz
ins
test
jns
shr
loopne
mov
mov
lea
shufps
mov
cmp
push
in
cmp
cmp
popf
ss
lods
fistp
ins
dec
and
icebp
lahf
pop
jecxz
push
pop
adc
(bad)
or
ins
outs
sub
repnz
mov
dec
or
cmp
or
jb
hlt
jne
stc
cmp
pop
jae
les
jbe
in
ja
js
and
jns
push
jp
sub
pop
or
test
and
je
inc
pop
adc
inc
dec
inc
xor
div
push
xchg
sbb
cvttps2pi
sub
inc
movs
jbe
pop
add
xchg
add
xchg
xor
(bad)
rcr
sbb
pop
mov
or
sbb
test
and
cmp
or
adc
and
call
dec
cmp
and
sbb
sbb
repz
adc
mov
scas
test
jmp
mov
adc
or
jle
or
loope
fs
adc
cmp
add
adc
xor
push
or
xor
in
and
adc
cmp
repz
inc
jl
div
jno
sub
add
push
test
or
imul
add
ror
mov
int3
inc
sbb
mov
fdiv
das
and
sub
arpl
sub
add
mov
adc
pop
fdiv
mov
push
add
push
out
stc
sbb
cmp
jmp
ror
movs
mov
xor
xor
pop
xor
cmp
cld
jmp
lods
xchg
xchg
pop
jb
out
dec
out
and
inc
push
sbb
push
push
mov
xchg
inc
nop
inc
xor
or
cmp
and
inc
inc
sbb
clc
pusha
scas
jno
neg
xor
add
inc
out
pop
loopne
ror
pusha
aad
push
stos
fcom
fsubr
jle
test
cs
add
sub
or
sbb
or
pop
mov
or
xchg
xor
jmp
(bad)
or
xchg
or
xchg
mov
push
sbb
cmp
xor
imul
sbb
mov
sub
fcomp
imul
dec
jle
fisttp
sahf
dec
jo
jmp
pop
inc
mov
mov
add
test
inc
xor
sbb
mov
pop
add
js
stc
lea
inc
xchg
imul
cli
inc
jle
jmp
clc
jae
cmp
xor
data16
or
call
enter
(bad)
repz
imul
push
push
push
outs
dec
cdq
push
push
imul
mov
mov
or
or
pop
(bad)
cmp
movs
mov
mov
cmp
mov
adc
push
push
mov
mov
jle
cmc
outs
pop
or
mov
lods
and
adc
jmp
clc
pop
xor
imul
jmp
(bad)
daa
or
mov
and
movs
jmp
sbb
cmps
ds
jno
adc
mov
push
push
jo
mov
cmp
or
cmp
mov
push
imul
dec
jecxz
add
cmc
adc
mov
adc
cli
xchg
pop
push
mov
cli
push
rol
xor
test
or
or
mov
repnz
sbb
pop
adc
add
inc
inc
push
cmc
add
into
mov
xchg
test
or
imul
sbb
je
jo
lock
pop
(bad)
leave
fldl2e
add
retf
std
mov
adc
jle
das
xchg
mov
mov
jle
and
jmp
add
adc
push
sub
scas
push
ds
dec
or
push
mov
(bad)
mov
add
je
rol
sub
add
push
fbld
pushf
dec
stc
in
in
jns
and
sbb
sbb
add
mov
enter
xor
xchg
or
lgs
js
jge
fisub
sbb
push
or
push
jne
xor
pusha
xchg
sbb
and
retf
xchg
loope
movs
pop
sub
xor
into
sti
or
inc
dec
jle
cmp
jl
popf
xchg
aas
push
(bad)
push
mov
mov
jl
push
lock
inc
jb
xchg
inc
fcomp
neg
dec
ds
cmps
pushf
pushf
mov
call
push
add
lahf
jo
jnp
push
or
add
mov
cmp
lods
add
ror
mov
inc
stos
lods
aaa
loope
push
pop
fwait
xchg
push
int3
dec
inc
mov
add
mov
daa
js
push
adc
stc
test
xchg
fst
ror
pop
inc
popa
dec
int3
aas
ja
jg
jo
sar
mov
inc
mov
dec
dec
clc
push
mov
gs
adc
call
xor
add
adc
push
jo
jmp
sbb
leave
pop
fucomp
popa
xor
imul
pop
adc
pop
xlat
sub
adc
mov
cld
mov
inc
add
movs
push
or
out
cmp
sbb
push
sbb
mov
rcl
pop
ret
dec
mov
(bad)
add
dec
shl
xchg
jg
rol
jb
aam
fbstp
bound
cmp
add
fidiv
or
or
or
push
and
aaa
ficomp
inc
mov
sub
pop
call
mov
xchg
in
push
adc
punpcklbw
mov
sbb
fsub
pop
and
and
inc
or
out
rcl
sbb
call
test
mov
sub
push
call
push
sbb
ret
or
les
xor
repnz
(bad)
ja
jg
xor
jb
enter
add
mov
and
add
pop
inc
repz
inc
or
sub
ins
inc
xor
lock
sahf
add
sbb
jo
or
push
mov
daa
jmp
add
lock
xor
push
or
mov
sub
mov
or
adc
xor
jle
and
add
cmp
mov
mov
cmp
(bad)
jae
imul
out
inc
cdq
or
xor
mov
sub
popa
fdiv
xor
add
mov
or
sbb
dec
pusha
sahf
jbe
sbb
add
mov
and
ret
push
je
stos
adc
pop
or
cmp
lea
inc
dec
pop
add
sbb
(bad)
and
js
loop
mov
mov
inc
lea
imul
test
dec
cmc
popa
sub
lea
cmp
hlt
push
or
sbb
sub
or
movs
les
movs
push
jecxz
push
jmp
pop
sbb
jns
js
mov
les
sbb
je
ret
add
dec
or
pop
or
or
lock
sbb
daa
and
aaa
push
mov
cmp
bndldx
push
fs
push
sub
sahf
pop
jmp
xor
idiv
inc
jle
cwde
div
jle
push
jmp
cmp
add
fs
sbb
sbb
pusha
cwde
mov
sub
xchg
xchg
cmp
mov
add
pusha
sbb
jne
dec
mov
cwde
fwait
aaa
call
into
mov
or
adc
pop
or
inc
push
sbb
adc
repnz
and
and
mov
xchg
inc
icebp
jne
jb
xor
mov
rol
in
cmps
sbb
push
cs
js
add
ret
lahf
or
xor
jo
in
dec
pop
cmp
or
push
test
mov
push
cmp
cmp
pop
mov
ret
add
icebp
ret
inc
sub
and
xor
or
call
push
and
sbb
mov
add
inc
ins
jne
lsl
sbb
mov
mov
fmul
(bad)
cmps
jns
imul
ror
das
xor
es
inc
inc
stos
(bad)
mov
ja
push
or
inc
sar
or
or
popf
pop
jle
ret
add
add
out
dec
push
cmp
mov
test
or
repz
iret
sbb
jo
and
jne
stos
dec
in
add
add
js
ficom
pop
push
sbb
pop
cmp
pop
les
sub
sub
popf
ret
lahf
mov
or
or
nop
mov
das
icebp
stc
inc
or
xor
dec
cwde
mov
mov
adc
xor
jb
and
mov
and
adc
mov
inc
es
neg
data16
mov
xchg
fnstsw
xor
je
pushf
push
xor
nop
ror
dec
sti
(bad)
push
sub
jle
cs
mov
push
movs
dec
pusha
loop
xor
ret
imul
shl
and
xchg
xchg
sub
or
jle
push
mov
mov
mov
jbe
in
add
in
lods
ror
xchg
fsubr
fsub
dec
loope
ror
les
mov
inc
mov
adc
add
push
ror
dec
push
mov
add
imul
enter
cmp
push
(bad)
loope
lea
mov
cld
fcmovne
add
nop
dec
cdq
adc
push
das
and
pop
cmp
jno
nop
push
xchg
jmp
test
mov
adc
xchg
mov
pop
inc
lods
jge
iret
xchg
pop
xchg
lock
out
jo
dec
mov
mov
mov
ja
rcr
sbb
mov
mov
add
leave
add
xchg
adc
mov
add
hlt
push
mov
or
daa
inc
xchg
sahf
and
adc
outs
xchg
inc
jl
and
push
cdq
sti
subps
mov
push
movs
retf
int3
icebp
in
lock
iret
inc
sbb
ja
mov
jl
mov
and
cmp
sar
cmp
pop
mov
sub
pop
sbb
and
ss
lea
mov
mov
sub
mov
jg
fs
xor
test
ret
aaa
and
cwde
and
mov
lock
pshufw
xor
sub
stc
pop
push
mov
dec
lea
aam
test
add
mov
jmp
fs
cmps
scas
xchg
sbb
xor
(bad)
imul
xor
sub
push
push
test
(bad)
mov
dec
xchg
sub
adc
pop
hlt
mov
sub
aam
mov
dec
jmp
xor
dec
pop
pop
das
mov
inc
fisttp
mov
inc
push
sar
push
mov
xchg
mov
cmp
sbb
mov
(bad)
fisttp
xor
or
in
fstp
rcl
sbb
fucomp
sub
pop
inc
repnz
daa
fsubr
jge
push
sar
and
sub
movs
dec
and
xchg
loop
and
cmp
mov
jge
jae
lock
shr
cmp
stos
dec
shl
and
pop
test
call
inc
jmp
and
xor
push
cmp
sbb
xchg
mov
xchg
jg
adc
xor
mov
les
push
or
jno
(bad)
loop
adc
jne
jbe
lea
xchg
mov
dec
ins
push
add
pop
out
lds
mov
jnp
mov
sbb
xlat
xor
jecxz
fadd
dec
cmp
loopne
jp
sub
cs
add
test
cmp
adc
jl
sahf
or
adc
add
scas
xor
or
add
into
lock
xor
adc
sub
xor
jl
push
mov
adc
inc
popf
(bad)
es
jo
sti
mov
push
shl
mov
dec
ins
fsub
cmp
pop
mov
sbb
ficom
(bad)
cmp
jbe
sub
and
mov
add
or
test
cld
dec
faddp
xchg
clc
(bad)
jge
test
ds
out
movs
jno
je
sti
ins
(bad)
push
xor
fild
sbb
and
outs
inc
mov
cmp
mov
or
jl
movs
test
add
ret
push
jle
jl
dec
mov
rol
sbb
psubsw
por
cld
add
fnstcw
lods
xor
repz
push
adc
adc
mov
dec
sub
(bad)
mov
js
test
jmp
call
enter
sbb
pushf
nop
add
and
inc
outs
jmp
push
mov
xchg
push
pop
push
xchg
inc
sar
xchg
mov
inc
and
pop
cmp
cdq
inc
push
sbb
xor
cmps
adc
rol
sbb
cdq
jecxz
add
ret
leave
(bad)
ror
xchg
(bad)
and
inc
add
leave
adc
fldenv
rol
xchg
add
add
cmps
icebp
sub
push
test
pop
add
cli
jge
mov
xchg
mov
addr16
pusha
dec
xchg
xchg
clc
pop
jae
sar
test
dec
sbb
cmp
pop
inc
cmp
jl
push
ins
xchg
or
jno
xor
sub
in
dec
outs
sub
add
sbb
pop
fbstp
xchg
jae
jne
sar
jno
mov
xchg
popf
mov
cmp
dec
inc
cmp
cmp
imul
mov
cmp
and
inc
stos
mov
fs
jle
pop
push
sub
push
test
xor
lea
stos
into
xor
add
sub
nop
mov
sub
ss
iret
inc
stos
mov
xchg
mov
enter
in
frstor
iret
sub
and
push
mov
cmp
jp
out
sar
push
dec
outs
loopne
inc
es
inc
or
jb
sbb
add
ins
pop
pop
xchg
push
or
xor
cmp
cmp
or
pop
or
or
std
(bad)
loopne
push
ror
sbb
mov
push
pop
mov
movs
push
adc
lods
(bad)
mov
adc
mov
push
aam
push
retf
(bad)
mov
mov
push
push
js
je
in
add
dec
mov
xor
dec
ror
and
or
sub
add
adc
jg
ins
inc
dec
sbb
jmp
dec
js
(bad)
cmp
test
(bad)
xchg
add
adc
push
xor
or
imul
push
inc
add
mov
add
sbb
outs
xchg
sbb
mov
cmp
pop
lahf
add
inc
jb
pop
or
push
or
pop
dec
jno
test
xchg
sbb
cmp
xor
cmp
adc
and
jmp
lahf
mov
sub
xchg
push
jle
mov
sar
test
pop
push
inc
cmp
leave
cmp
nop
stos
shl
pop
inc
mov
mov
rol
add
(bad)
ror
add
xor
inc
xlat
arpl
jmp
clc
add
repz
push
jmp
sbb
sbb
jge
fsubr
push
inc
or
lods
inc
sub
call
adc
mov
jns
imul
cmp
dec
test
and
lods
mov
or
dec
icebp
(bad)
pop
mov
add
mov
arpl
cdq
sar
enter
sub
test
(bad)
in
cmp
push
test
xchg
or
aaa
(bad)
or
sub
mov
or
hlt
push
xor
pmaxsw
jbe
and
fwait
mov
and
cli
or
(bad)
loopne
clc
enter
mov
mov
pop
add
xchg
fldcw
add
sub
lea
(bad)
sbb
inc
pop
fwait
or
add
sar
fisttp
rol
aaa
sbb
movq
or
jle
xchg
ins
loop
cwde
leave
xor
fnstsw
cmps
movsx
xchg
jmp
jp
add
xchg
xchg
and
(bad)
or
call
inc
dec
cmp
fbstp
leave
inc
dec
cmp
int
pop
pand
dec
loop
mov
inc
adc
push
mov
mov
je
shr
sahf
cmp
and
cmps
inc
mov
into
xchg
(bad)
ss
mov
or
les
ret
inc
add
jle
sbb
or
sbb
fimul
rcr
add
cdq
pop
test
or
pop
mov
in
call
int
out
push
retf
retf
movzx
sbb
repz
xchg
add
test
xchg
adc
jns
in
loope
push
dec
mov
inc
sub
out
pushf
jb
xor
jle
imul
or
inc
push
inc
add
adc
in
pop
stos
xor
push
sbb
mov
xor
retf
adc
adc
test
shr
push
mov
(bad)
sub
cmp
mov
mov
outs
mov
(bad)
inc
mov
leave
je
leave
mov
or
or
cmp
inc
cmp
or
outs
adc
sbb
sub
cld
add
call
mov
rcr
add
adc
xchg
mov
dec
or
ja
xor
xor
and
push
add
pop
xor
or
(bad)
nop
xor
outs
or
adc
push
mov
mov
mov
inc
mov
or
and
push
mov
mov
popf
push
jmp
add
mov
clc
xor
lock
inc
(bad)
lea
pop
cmp
jg
pop
mov
push
loope
inc
add
es
pusha
jo
adc
push
pop
sar
fimul
sub
adc
movs
movs
cmc
add
je
and
adc
xchg
inc
clc
push
push
lea
les
in
inc
movs
cmp
and
cmp
fs
xchg
ss
xor
fs
push
cmp
xchg
das
pop
es
clc
push
daa
es
cs
iret
(bad)
ins
stos
jne
repnz
xchg
fstp
or
push
stos
or
add
bound
mov
sub
sbb
xor
inc
sti
and
dec
retf
and
pop
(bad)
loop
dec
and
add
int3
daa
mov
xlat
retf
sbb
sub
xchg
mov
sbb
test
sbb
and
aaa
xor
lock
sbb
and
pop
in
pop
addr16
and
mov
jl
in
cmp
xor
adc
sub
aaa
call
sbb
mov
inc
and
ret
sbb
add
aas
jb
add
and
and
adc
or
sbb
adc
leave
sbb
lods
inc
xchg
outs
clc
sbb
rsm
dec
pop
add
js
ret
(bad)
scas
mov
sub
cmp
xlat
sti
push
cmp
jg
lds
inc
cmp
(bad)
fbstp
xchg
add
mov
leave
push
and
xchg
inc
mov
and
adc
pop
sub
jne
(bad)
dec
and
data16
add
imul
mov
mov
test
mov
stos
aad
inc
cmp
fisttp
jp
shl
dec
in
jg
stc
pop
enter
mov
call
xchg
xor
outs
jmp
ins
es
sub
lock
ins
loop
mov
sbb
sahf
mov
xor
or
inc
es
lock
add
mov
fisubr
imul
shl
adc
stc
adc
sub
mov
jae
pop
out
mov
inc
inc
and
adc
scas
icebp
ror
test
or
ret
jmp
pop
loop
dec
nop
cwde
pop
inc
push
cmps
and
sub
fwait
or
xchg
push
adc
or
ss
pop
and
add
pop
pop
mov
mov
jg
cmp
jae
icebp
xchg
sub
inc
inc
test
or
xor
dec
adc
stos
ret
xor
lock
rcl
inc
or
jbe
inc
sti
pop
fiadd
xor
jae
push
aad
xor
dec
hlt
xchg
popa
pusha
test
(bad)
(bad)
dec
and
or
push
ja
adc
ror
adc
fist
ror
rcr
retf
cmc
(bad)
ret
xor
push
jne
mov
push
sbb
sbb
sbb
cmps
pop
add
push
add
call
jo
add
adc
jmp
mov
xchg
dec
call
int
(bad)
mov
adc
imul
pop
pop
and
xchg
repnz
jge
xor
bound
clc
std
adc
add
or
sar
gs
inc
sahf
adc
in
sub
shl
sbb
mov
adc
mov
or
mov
and
inc
pop
enter
sar
inc
ins
add
inc
or
adc
aam
add
add
aas
xchg
jo
pop
sub
add
add
xchg
push
movntq
out
push
cli
add
or
or
adc
daa
mov
mov
xor
out
fiadd
xchg
js
mov
or
add
pop
fcomp
adc
and
add
pop
out
push
or
shr
adc
adc
or
in
adc
fsubr
fcomp
xchg
gs
hlt
(bad)
in
inc
lahf
xchg
gs
enter
dec
jl
mov
ja
mov
lea
sub
mov
mov
adc
pop
lock
mov
fs
sbb
loopne
loopne
std
push
nop
lea
ja
xchg
sub
movs
jno
mov
sbb
inc
xchg
movs
fld
repz
push
inc
fdiv
xchg
push
daa
adc
daa
(bad)
push
sbb
mov
xchg
add
frstor
inc
push
add
adc
xor
jecxz
or
or
add
adc
pop
pop
loopne
dec
cmp
repnz
cmp
dec
add
xchg
pop
clc
and
cmp
lahf
pop
push
cmp
mov
or
test
xor
xchg
adc
inc
bound
cmps
nop
inc
or
sub
hlt
rcl
xchg
adc
pop
xor
ror
and
adc
add
add
or
sbb
and
push
lahf
fisttp
mov
inc
or
imul
or
popa
call
scas
or
push
mov
pop
fwait
mov
sbb
add
lea
mov
or
addr16
push
ficomp
cmp
repnz
std
jae
mov
mov
lea
push
jg
retf
fadd
sub
into
repnz
aaa
sar
ss
add
jns
mov
cmp
shl
rcr
jb
mov
jns
sbb
(bad)
jbe
mov
dec
mov
and
call
xor
test
dec
add
out
inc
mov
jmp
jbe
mov
mov
inc
sbb
push
shl
ja
add
fadd
fbld
int
repnz
das
push
and
sbb
aam
mov
mov
test
dec
adc
paddb
scas
call
repnz
jmp
jne
or
add
and
bound
int
push
in
mov
ins
inc
inc
inc
(bad)
aam
xor
or
movs
in
adc
or
mov
lock
dec
jp
rol
jae
jo
sub
enter
sbb
mov
in
mov
ret
xor
(bad)
xor
aas
push
inc
or
pop
fistp
mov
sbb
paddw
mov
lsl
or
pop
out
xlat
add
and
pop
pusha
xor
nop
jecxz
sub
sbb
pop
add
xor
outs
xchg
in
push
xor
inc
push
add
xor
inc
sub
je
aaa
shl
std
sub
adc
ja
adc
sub
mov
adc
push
les
or
pop
js
movs
push
prefetchw
and
add
cwde
retf
xor
sub
inc
scas
pusha
jmp
xchg
xor
jl
ss
js
(bad)
mov
pop
inc
push
lahf
adc
dec
add
sub
xor
mov
sub
mov
dec
bound
dec
fisub
ret
add
add
fwait
adc
jmp
js
xor
xchg
cmp
es
cmp
mov
push
(bad)
dec
mov
lods
or
jg
hlt
sar
imul
and
enter
fsubrp
push
je
or
or
rol
dec
dec
stos
pop
inc
adc
ret
inc
adc
syscall
jl
loop
add
fsub
aaa
int3
inc
sbb
les
leave
mov
jns
cmp
inc
cmp
retf
and
pop
sub
mov
push
ret
push
js
or
call
jno
sub
cwde
pop
adc
adc
ficomp
adc
inc
cdq
ret
retf
js
inc
mov
call
cld
retf
mov
xor
adc
dec
dec
iret
mov
jnp
aaa
bound
in
(bad)
int
sti
pop
test
lahf
mov
push
dec
inc
add
add
add
scas
aam
shl
dec
mov
ret
jo
mov
sbb
sbb
cmp
or
ins
add
cld
push
add
and
mov
xchg
mov
jnp
nop
cmps
pop
xlat
lods
jmp
lea
pop
xchg
push
sbb
sub
pop
cwde
loope
adc
aad
xor
mov
or
jae
rcl
je
into
or
mov
loope
fstp
cmps
pop
mov
icebp
jmp
xchg
sub
cs
loope
jge
aam
push
cmc
or
pop
jb
(bad)
mov
gs
sbb
test
call
(bad)
aam
and
fld
fadd
clc
loopne
rcr
pop
sbb
add
push
add
stos
dec
jl
test
enter
das
or
mov
in
(bad)
push
hlt
dec
je
adc
(bad)
or
out
and
rol
mov
outs
loopne
ds
loope
push
sub
mov
call
sbb
mov
dec
loop
sbb
test
or
popf
or
adc
loope
inc
or
lods
push
outs
ret
xchg
mov
addr16
inc
psraw
mov
test
test
in
pop
imul
test
push
(bad)
xor
(bad)
or
std
outs
ret
ins
ret
jge
mov
dec
inc
inc
into
inc
mov
jl
es
xchg
inc
inc
adc
or
sbb
retf
inc
rcl
mov
sub
cmp
retf
outs
adc
mov
clc
pop
adc
adc
call
mov
pop
dec
inc
inc
add
idiv
and
adc
add
or
add
push
sbb
ror
or
pushf
sub
add
mov
dec
adc
out
loope
test
fadd
sti
xchg
mov
aas
add
int3
in
pop
ror
sub
jno
clc
les
ret
dec
sahf
pusha
jo
aaa
or
mov
mov
and
fidivr
cmp
mov
xor
test
les
jg
pop
pop
mov
and
test
add
mov
stc
(bad)
sub
jl
and
aam
lahf
mov
xchg
pop
sbb
je
imul
lea
dec
loop
out
dec
out
imul
mov
(bad)
(bad)
push
aam
inc
imul
adc
jge
push
cmp
mov
std
movzx
add
sub
mov
mov
ja
adc
sar
add
in
sar
outs
aas
dec
jl
xor
jae
ds
test
sar
test
push
ss
mov
retf
inc
in
dec
lock
lock
pop
in
push
mov
pop
or
gs
(bad)
icebp
cmp
sub
outs
and
adc
not
imul
pop
ja
adc
adc
int3
sbb
xchg
pop
aaa
int3
jno
out
mov
sbb
daa
fdivr
cs
aad
loopne
sub
add
jnp
or
ja
xchg
pop
sbb
(bad)
js
and
dec
int3
jecxz
sub
sub
je
pushf
gs
daa
push
xor
xor
in
cld
add
inc
sbb
xchg
mov
lock
adc
neg
or
call
aas
inc
or
sbb
out
loopne
ss
inc
fld
dec
cmp
fcom
cmps
mov
jl
lock
ins
test
loope
sub
ins
add
or
mov
fsubr
leave
mov
sub
cmps
dec
cld
mov
stos
mov
push
jl
xor
imul
push
pop
dec
inc
mov
rol
dec
jmp
cmp
sbb
add
xchg
xchg
xor
dec
xor
loop
cmps
sub
dec
cmp
cmp
imul
xchg
aam
xor
xor
jmp
shl
xchg
jecxz
adc
or
adc
pop
cmps
xor
in
retf
lock
xchg
inc
hlt
neg
loop
cmp
ja
cli
ret
push
add
jbe
cmp
inc
xor
jl
push
xor
cmp
mov
dec
pop
inc
push
(bad)
enter
and
addr16
shl
sub
jle
enter
mov
push
(bad)
ja
rol
inc
aaa
retf
mov
mov
adc
sbb
sti
test
inc
add
sub
aaa
or
and
mov
add
ss
push
(bad)
(bad)
das
arpl
add
jmp
push
inc
les
xchg
aam
dec
xchg
pop
in
adc
push
ds
and
ins
inc
or
daa
jno
or
lock
jb
and
push
and
sbb
xchg
mov
sti
adc
cmp
lods
shl
push
ins
pop
retf
lods
add
or
push
or
fdiv
call
retf
push
or
ja
ficomp
or
xor
mov
les
add
in
push
rcl
rcl
pop
mov
sahf
push
dec
jg
mov
cmp
xlat
or
push
inc
movs
push
push
jo
or
pusha
dec
aaa
in
leave
jnp
jl
inc
mov
mov
bound
addr16
adc
lahf
lea
dec
ds
pop
dec
push
lock
xor
je
dec
je
xlat
adc
scas
sbb
sub
(bad)
push
mov
pop
or
mov
jge
and
cmp
or
or
xor
lahf
mov
and
lock
ds
jns
inc
stos
outs
imul
cli
pop
xchg
inc
add
inc
lds
adc
push
popf
leave
adc
adc
sbb
xor
add
(bad)
enter
sar
and
xor
add
inc
outs
xchg
cmps
xchg
jnp
cmp
dec
and
mov
and
jnp
add
cmps
xor
aaa
daa
xor
enter
jne
pop
inc
inc
push
add
es
and
jbe
pop
jo
mov
adc
shl
(bad)
xlat
or
sub
(bad)
not
inc
repnz
test
fmul
call
xchg
ret
(bad)
xchg
mov
out
popf
jo
dec
pop
mov
mov
je
push
(bad)
fiadd
sar
pop
xor
sbb
mov
pop
mov
xor
bound
mov
dec
pop
inc
cmp
stc
jp
inc
sahf
mov
adc
cmp
push
sub
jl
mov
add
fs
push
xor
pop
mov
enter
jg
adc
mov
loopne
pop
or
psraw
cmp
mov
loope
add
adc
cdq
or
and
ins
mov
rol
repz
mov
fdivrp
dec
jne
or
loope
loopne
nop
mov
pop
xchg
pusha
sti
sub
xchg
sbb
int
sub
xchg
fndisi(8087
push
add
adc
stos
mov
outs
cld
mov
xor
sar
imul
call
xchg
mov
pop
or
xor
add
outs
jmp
xor
add
xor
or
fbld
add
sar
iret
sub
imul
mov
inc
xor
and
ret
or
retf
or
das
mov
adc
xlat
stos
sbb
mov
inc
movs
loope
pop
sbb
ffree
bound
cmp
cmp
xor
sbb
out
fcom
sbb
out
cmp
ror
lods
stos
sub
aaa
add
dec
cmps
pop
push
jp
sbb
mov
iret
sub
mov
ret
mov
add
sar
adc
jne
add
test
and
inc
push
std
inc
test
sti
jg
sub
add
adc
cmps
inc
or
or
out
inc
addr16
cli
inc
stos
stos
push
add
add
pop
js
adc
jne
test
clc
out
(bad)
stc
lods
clc
jmp
pop
xchg
push
fiadd
add
fist
repnz
dec
dec
or
adc
stc
or
or
adc
inc
sub
(bad)
dec
sub
jecxz
push
pop
mov
ret
adc
shl
push
adc
dec
mov
xchg
add
(bad)
cmp
mov
sbb
mov
or
xchg
add
imul
or
sub
add
cmp
out
jmp
sub
xchg
xor
adc
jp
ins
mov
in
mov
movs
add
pop
pop
and
dec
inc
in
adc
ror
sub
pop
push
imul
(bad)
hlt
shr
jb
push
adc
shr
jg
in
inc
and
retf
addr16
ret
cmp
mov
cli
test
shl
mov
sbb
test
icebp
cmp
dec
and
shl
xchg
lods
leave
jmp
xor
sbb
add
mul
mov
cmp
test
cs
das
std
add
jne
cmp
shl
(bad)
or
pop
call
jp
xor
fisubr
jp
popf
or
dec
cli
sub
xor
pop
loope
adc
fcmovbe
retf
das
sbb
or
lods
push
adc
fcomp
or
(bad)
pop
or
dec
adc
adc
push
and
popa
mov
sub
or
call
icebp
ds
mov
inc
sub
pusha
pop
clc
jg
mov
fst
cwde
pop
mov
das
add
adc
data16
push
movs
(bad)
jg
cmp
in
imul
(bad)
or
in
loopne
or
mov
adc
sub
fdivr
xor
mov
aas
outs
mov
xchg
dec
enter
(bad)
jmp
inc
sbb
sbb
add
cmp
sahf
inc
(bad)
popa
enter
adc
dec
sbb
sub
loope
dec
je
adc
mov
enter
xor
push
daa
xchg
cld
sbb
mov
dec
jb
or
in
inc
clc
jge
clc
sub
fisubr
movs
or
aaa
lock
jge
sbb
ja
retf
jmp
inc
in
jle
adc
xor
clc
and
jg
xchg
jbe
sbb
sbb
xchg
enter
lea
call
das
xchg
dec
in
call
jg
mov
push
idiv
push
mov
cmp
jge
or
sbb
ret
jo
mov
in
aas
cmp
push
or
jecxz
mov
jg
mov
outs
jmp
les
and
or
ss
shr
add
iret
(bad)
std
(bad)
mul
out
lea
dec
pop
add
frstor
jge
in
or
lds
adc
and
je
and
cmps
cmp
inc
sbb
pop
loop
sub
push
push
xchg
push
jne
jo
pusha
and
arpl
inc
sub
lea
mov
inc
fild
dec
test
mov
adc
mov
mov
mov
pop
add
mov
dec
xlat
or
and
cmp
xchg
loop
xchg
and
ja
mov
cmp
daa
xchg
and
cs
pop
jne
lods
int3
cmp
std
ja
xor
mov
imul
loopne
pop
add
mov
mov
push
dec
cli
inc
loopne
mov
stc
jge
add
ins
loope
dec
jge
push
cmps
daa
pop
out
sub
clc
add
mov
ins
ret
pop
cmp
adc
adc
add
push
xchg
lods
adc
aam
cmc
nop
sbb
xchg
jge
add
push
pop
or
mov
std
or
out
nop
loop
scas
jl
xor
add
pop
test
ret
rcl
aaa
or
into
jle
mov
sbb
cdq
push
mov
mov
shl
pusha
sub
gs
lea
push
mov
cli
pop
call
icebp
(bad)
in
or
inc
mov
inc
push
(bad)
out
inc
mov
retf
adc
sbb
fdiv
mov
(bad)
test
sbb
in
fld
mov
adc
xor
sbb
ja
xor
pop
cli
adc
(bad)
mov
inc
fst
adc
sar
pop
mov
sar
les
jo
daa
mov
adc
or
push
prefetcht1
or
(bad)
mov
xchg
mov
and
(bad)
loopne
inc
hlt
sub
ja
xchg
push
test
lods
nop
addr16
cmp
leave
int
(bad)
cmp
xchg
adc
xor
xor
sub
dec
sbb
add
mov
jle
rcr
pushf
jae
mov
sbb
mov
sar
sbb
test
mov
popa
aas
cmp
dec
and
push
mov
test
ret
sbb
shl
std
hlt
icebp
arpl
cmp
or
mov
jo
add
sub
pop
and
and
inc
es
retf
pop
push
jbe
xchg
add
xchg
xor
dec
int3
(bad)
aam
pop
adc
sub
mov
retf
or
xor
stc
jbe
jne
cdq
mov
sbb
mov
pop
push
inc
add
repnz
push
add
fidiv
test
inc
ret
jmp
inc
pop
(bad)
sub
sti
cmp
jp
lods
mov
call
rcl
in
jle
(bad)
(bad)
lods
mov
das
test
add
daa
je
out
mov
or
push
adc
push
inc
jae
scas
ss
adc
xor
pop
push
adc
les
jne
sub
into
test
fdivr
add
sub
movs
lods
pop
sbb
retf
mov
pushf
sub
mov
jmp
(bad)
cwde
frstor
cdq
clc
pop
cmp
add
mulps
inc
fstp
(bad)
sub
fst
jne
push
fadd
lock
(bad)
push
push
mov
push
out
xchg
sahf
sbb
retf
scas
push
add
rcr
sbb
loopne
adc
punpckhdq
lahf
add
or
call
jne
std
shl
mov
mov
cmp
sbb
or
mov
and
cmp
mov
jmp
mov
aam
es
xor
imul
ret
adc
push
xor
cmp
mov
add
adc
sbb
jbe
jge
cmp
cmp
ss
xchg
adc
fidivr
mov
dec
fistp
and
pop
xlat
movs
shr
daa
adc
push
inc
sbb
sbb
or
into
mov
setle
cli
add
and
mov
xchg
adc
js
retf
int3
adc
sub
push
xor
aas
iret
pusha
xor
cmp
cmp
push
loopne
mov
push
std
aaa
add
dec
push
jb
sti
push
cmp
inc
mov
add
lea
pop
shr
xor
dec
and
inc
and
sbb
and
or
jl
and
push
fs
lock
or
jl
pop
sbb
ins
push
push
pusha
sub
dec
mov
push
push
lds
jo
js
add
cmp
inc
or
iret
or
fs
sub
mov
aam
(bad)
push
scas
pop
cmp
mov
add
loopne
cmp
xor
mov
xor
stos
mov
jnp
sbb
test
mov
jmp
adc
loop
imul
mov
shl
loopne
mov
aas
push
daa
ret
add
pop
cmp
or
mov
(bad)
pop
shl
mov
mov
jns
inc
addr16
and
int
or
mov
and
adc
jno
add
outs
pusha
ins
fisub
push
bound
imul
fistp
jmp
nop
adc
or
fstp
enter
movs
or
shr
push
cmp
mov
cmp
aam
cmp
dec
int3
pop
sbb
(bad)
xchg
sbb
lods
adc
or
or
cwde
xor
mov
adc
punpcklwd
and
ret
sbb
out
mov
sbb
jnp
jle
add
sbb
inc
cmp
jecxz
adc
or
repnz
sar
mov
dec
mov
das
inc
aas
mov
adc
or
jp
movs
mov
cli
scas
cmp
jl
jnp
cli
dec
adc
stc
mov
aaa
test
in
add
(bad)
pop
cmp
cs
jecxz
mov
push
pop
movs
popf
into
dec
inc
ss
jmp
pop
ret
pop
lock
mov
shl
sbb
jmp
jns
test
fsub
cmp
mov
mov
adc
js
je
nop
and
aaa
cmp
or
jo
jle
mov
fcmovb
loopne
sub
fidivr
mov
dec
and
jo
adc
inc
in
add
ret
scas
add
or
sbb
leave
sti
(bad)
(bad)
mov
adc
nop
mov
jg
push
pop
jbe
cwde
inc
pop
jno
jb
ja
jo
push
stc
sub
adc
xor
inc
sub
retf
sub
sti
push
lea
lea
inc
inc
jp
mov
dec
inc
sbb
lahf
ficomp
jmp
cld
jmp
cwde
loop
fimul
aas
(bad)
scas
out
add
xchg
and
cmp
mov
jo
idiv
jmp
add
call
popa
loope
aad
ror
push
inc
fadd
sub
pop
or
adc
fwait
and
(bad)
adc
add
mov
xlat
sahf
out
inc
movs
xor
xlat
lods
sub
jp
add
clc
and
push
add
ins
or
mov
mov
push
add
add
jb
adc
test
icebp
ret
dec
pop
fcmovnb
icebp
rcl
cmp
mov
sbb
add
shl
xor
add
add
pushf
adc
push
popf
pop
adc
aaa
push
xchg
mov
clc
and
jb
xor
jbe
push
fisubr
mov
jmp
ins
dec
jmp
daa
dec
into
cld
jo
push
movs
push
jecxz
push
fimul
dec
retf
push
addr16
jb
cmps
dec
add
in
popa
add
add
xor
and
sub
fcomp
hlt
dec
push
jbe
nop
ja
retf
es
cmp
pop
pop
adc
pop
fimul
inc
mov
sbb
and
cld
lock
mov
and
or
mov
int
add
jns
cmp
jge
outs
sar
cmps
out
or
cmps
add
aad
sahf
jmp
fbstp
and
in
or
imul
cmp
push
add
test
movs
cmp
pop
dec
and
or
retf
add
add
ret
inc
aas
and
sbb
push
or
cmp
arpl
jge
mov
xor
dec
cmp
outs
leave
jbe
jae
and
sbb
jl
lods
sub
pop
inc
sbb
call
arpl
(bad)
pop
ret
pop
pop
pop
es
mov
and
rcl
scas
ds
ja
push
pop
add
or
fist
inc
jmp
xchg
cwde
sbb
pusha
jns
xchg
movs
or
and
dec
xor
push
out
jp
inc
jge
dec
xchg
leave
in
inc
adc
in
add
movs
push
xchg
pop
add
cmc
dec
popf
and
and
loopne
xchg
mov
loop
inc
pop
sbb
(bad)
pop
rol
das
call
add
sub
daa
test
bndstx
ror
push
sbb
mov
mov
inc
stos
sbb
call
cld
movs
xchg
mov
dec
stc
add
add
adc
fadd
outs
sub
or
loopne
stos
push
pop
pop
sub
adc
push
pop
push
cmp
gs
repnz
or
retf
cmc
loop
rcr
jge
jl
not
sub
cmovnp
add
fild
das
ror
sar
add
jl
(bad)
add
inc
dec
jl
or
inc
je
pop
push
inc
jg
inc
mov
shl
jl
mov
aaa
or
cmp
adc
test
pop
jp
movs
jbe
or
pop
sbb
loope
loope
adc
inc
cmp
bound
fisttp
jmp
cmp
jae
retf
adc
adc
test
inc
ja
inc
test
mov
stos
add
push
loopne
add
cwde
das
add
push
add
retf
push
push
repz
inc
iret
movs
mov
xchg
push
or
push
and
out
jb
std
mov
jg
sbb
adc
or
ror
adc
nop
mov
sub
(bad)
xor
jp
or
or
ucomiss
inc
mov
shl
sti
neg
and
cmp
inc
inc
mov
fidivr
mov
es
lahf
stos
(bad)
mov
adc
inc
pop
add
xor
jmp
pop
lea
add
sub
xchg
adc
sub
add
shl
(bad)
cmp
add
push
loope
or
outs
sbb
stos
mov
ins
pop
xchg
stc
sar
mov
retf
adc
out
mov
nop
gs
cmp
or
das
aam
mov
ror
sub
scas
jecxz
push
popa
adc
add
fxch
cli
div
mov
xchg
enter
jl
daa
jne
nop
test
scas
inc
fwait
icebp
inc
sub
cdq
lea
mov
mov
fnsave
cwde
mov
mov
je
add
enter
cmps
xchg
mov
adc
sbb
dec
retf
dec
fcomi
div
and
push
sub
nop
xchg
and
add
dec
dec
mov
sub
test
adc
in
std
sub
add
mov
pop
icebp
into
cmc
and
pop
and
jmp
mov
adc
push
adc
mov
sbb
fidivr
jae
sbb
mov
dec
or
ret
sbb
xchg
test
stc
fwait
cwde
sub
pop
jno
xor
dec
mov
lds
cdq
iret
or
pop
dec
or
add
mov
fldcw
jo
les
xor
add
lock
std
pop
dec
das
xchg
push
fsubr
or
int
xlat
sbb
adc
pop
push
adc
push
ja
add
lods
(bad)
inc
xchg
or
ret
add
mov
cmp
ss
xor
stc
add
stos
mov
inc
fsubr
xor
mov
(bad)
adc
sbb
adc
(bad)
and
xchg
xchg
outs
and
daa
int3
ss
push
fstp
push
shl
imul
lds
mov
push
add
call
hlt
dec
or
ficomp
jl
xor
mov
les
in
xor
cmp
test
xchg
dec
jmp
imul
and
test
or
mov
sub
xchg
retf
xor
push
(bad)
imul
push
mov
add
sub
fucomp
imul
aas
mov
mov
nop
jmp
fs
ins
inc
jmp
xchg
call
or
fdiv
jno
dec
shl
dec
mov
(bad)
jo
(bad)
sub
scas
dec
adc
fwait
mov
rol
adc
dec
add
mov
retf
push
imul
int3
mov
imul
scas
mov
inc
inc
push
cmp
test
or
mov
gs
retf
or
sub
adc
mov
sub
dec
push
test
mov
and
sub
xor
push
dec
call
xor
js
(bad)
nop
sbb
jg
xchg
jne
into
push
(bad)
push
fsubr
jnp
or
je
test
stos
aaa
mov
inc
jl
cmp
daa
aam
mov
add
cmp
fs
js
test
pusha
repnz
adc
adc
push
add
lea
ret
sub
or
xor
mov
push
js
sub
lds
dec
xor
add
test
pop
sub
mov
inc
into
sub
add
lock
mov
imul
mov
jb
pop
xor
xchg
hlt
push
rol
inc
adc
dec
ja
sbb
jmp
sub
dec
or
inc
call
test
or
test
dec
sub
ror
arpl
test
add
mov
mov
jl
push
clc
call
ins
ins
inc
nop
and
cmp
pop
mov
xchg
daa
lea
mov
dec
cmp
or
and
push
mov
inc
das
cmp
nop
and
shr
je
mul
pushaw
pusha
arpl
or
xor
jnp
adc
lea
and
xchg
rol
sub
sbb
das
mov
push
loop
ja
inc
add
sub
xor
xor
and
pop
mov
gs
cmp
or
adc
inc
mov
dec
add
arpl
or
jle
in
xlat
sbb
jg
adc
sub
add
push
push
xchg
ja
and
xor
xlat
jo
mov
mov
test
push
test
or
push
add
or
shr
pop
icebp
(bad)
mov
push
inc
dec
mov
fadd
lods
lock
and
clc
test
add
dec
pop
ins
sub
and
inc
sbb
add
xor
inc
pop
sbb
sbb
aam
popf
in
xor
out
dec
ficomp
xor
popa
enter
adc
or
(bad)
mov
xor
enter
inc
pop
jmp
or
(bad)
daa
in
or
inc
hlt
pushf
gs
mov
aas
(bad)
adc
or
ins
cld
fnstenv
jmp
je
jne
es
imul
or
pop
jo
push
pop
sbb
call
pop
mov
or
sbb
add
add
into
adc
aam
jmp
mov
lods
shr
sub
add
dec
push
xchg
bound
xor
test
pop
push
cli
dec
mov
dec
inc
shr
add
sti
push
dec
or
lea
fild
mov
scas
inc
hlt
rol
repz
pop
cmp
movs
cmps
mov
mov
sub
xlat
lock
pusha
xchg
xchg
out
inc
push
adc
push
dec
fmul
adc
or
pop
add
adc
or
xchg
xchg
jo
jbe
sub
rol
or
push
push
retf
sbb
or
cli
xlat
fidivr
gs
add
or
pop
mov
adc
push
add
clc
jmp
jbe
mov
aas
test
repnz
jae
jbe
popa
add
sub
sbb
push
push
adc
adc
mov
ror
loopne
add
add
inc
pop
lods
int
mov
sbb
shl
fild
hlt
add
out
jne
cmc
sub
loopne
scas
add
ins
imul
sbb
jo
pushf
jbe
or
and
adc
hlt
xor
jmp
adc
and
cmp
push
les
push
or
test
rcl
cmp
xor
xchg
arpl
fidiv
daa
jge
add
adc
sub
xor
add
xor
xchg
push
fcmovnu
and
add
mov
sahf
push
je
clc
cld
or
cli
jle
xor
inc
dec
je
add
in
clc
xchg
out
sbb
and
add
sbb
sbb
rol
push
shl
rol
sbb
xor
in
push
cmp
das
inc
sub
fld
sbb
push
cwde
adc
out
jge
jo
push
out
sub
push
packssdw
mov
push
lahf
clc
xchg
pop
dec
or
sbb
ja
fsubrp
dec
sbb
fimul
dec
mov
movsx
inc
fiadd
or
and
sti
pop
das
sub
push
jp
data16
jmp
cmp
jl
mov
js
cmp
icebp
idiv
mov
mov
lea
rcl
aaa
sub
sub
fstp
or
inc
fmul
fmul
mov
int3
js
push
(bad)
jl
lahf
sub
mov
or
cld
pop
mov
adc
add
add
(bad)
ror
test
shl
mov
dec
loopne
retf
mov
fld
cld
lea
adc
jmp
add
or
add
dec
lods
xchg
and
pop
mov
rcl
and
add
xor
(bad)
out
push
mov
add
pop
push
pusha
in
fbld
inc
outs
push
inc
pop
cmp
push
mov
pusha
in
mov
mov
cli
ret
dec
cmp
hlt
inc
mov
dec
xor
sbb
inc
and
or
push
pop
dec
loopne
jbe
inc
mov
dec
adc
test
jae
adc
mov
sub
das
jbe
cmc
imul
dec
mov
in
push
(bad)
fadd
mov
pusha
sub
mov
popf
mov
sub
cmp
sbb
les
out
popf
push
pop
adc
or
dec
fiadd
mov
js
push
mov
(bad)
jne
dec
cmp
pop
test
stos
loopne
cld
mov
lea
pop
and
rol
mov
clc
inc
or
ror
jbe
mov
and
dec
adc
dec
sbb
sti
or
jg
ja
add
nop
pop
lock
push
sbb
fwait
dec
imul
and
mov
ret
add
mov
cmp
and
jg
mov
rol
jne
les
xor
xor
cmp
repz
push
out
jns
cli
cmp
jbe
mov
inc
add
inc
cmps
je
fdivr
adc
mov
jg
mov
(bad)
mov
mov
mov
inc
retf
sub
mov
add
fld
inc
jo
jb
arpl
or
adc
add
adc
repnz
xor
ror
ins
push
hlt
lock
pop
jne
hlt
aad
or
hlt
fisttp
test
jg
scas
sahf
nop
adc
pop
shl
xor
std
adc
mov
xor
mov
retf
repz
std
dec
or
xchg
push
add
jmp
jo
sub
fscale
fldenv
dec
cmp
mov
cmp
sbb
gs
pop
dec
sub
push
dec
fiadd
mov
jnp
adc
jne
aam
inc
jnp
pop
gs
fadd
fwait
movs
push
loop
dec
loopne
or
or
dec
aam
or
xchg
test
movs
loopne
sbb
fisub
xor
mov
adc
xchg
or
fcom
lea
inc
adc
dec
dec
adc
cmp
nop
push
sbb
in
cmp
in
jbe
mov
push
iret
fwait
inc
sub
ins
cs
das
inc
lea
mov
ja
pop
in
jp
xrelease
out
scas
mov
inc
jl
ja
(bad)
ss
mov
jecxz
jecxz
ja
xchg
xchg
jb
jl
popa
mov
inc
inc
ds
test
pusha
int
cmps
mov
imul
xor
dec
adc
fcom
aaa
mov
pop
fwait
pop
out
push
mov
cmp
fild
jg
add
mov
ror
mov
xor
pusha
xor
xchg
xor
in
jmp
fisubr
mov
sbb
rcl
(bad)
and
(bad)
mov
das
aaa
mov
aas
dec
add
jnp
enter
inc
adc
out
dec
dec
or
push
std
fwait
jne
push
cmp
out
icebp
ins
push
cmp
jb
rcl
ins
pop
fsin
cdq
sub
jbe
pop
pushf
lock
push
mov
sbb
inc
mov
sar
sbb
inc
add
push
icebp
jae
cmps
xchg
ss
push
xchg
or
dec
add
sub
shl
adc
stc
test
push
shl
hlt
cmp
int
pop
push
mov
cmp
jmp
xchg
and
das
daa
gs
pop
loop
(bad)
sub
ins
movs
add
test
fistp
cli
(bad)
push
dec
adc
inc
inc
sub
sbb
and
lea
sar
rol
lods
mov
lds
dec
and
inc
push
pusha
jo
push
fucomip
add
sbb
fstp
mov
mov
or
or
test
out
shl
fsub
std
out
outs
out
lahf
cdq
xchg
cld
fild
fmul
adc
pop
xchg
aaa
(bad)
inc
fcom
pop
hlt
pusha
ror
jge
lock
lahf
adc
gs
mov
clc
lock
lock
adc
mov
(bad)
cld
and
mov
in
gs
adc
and
in
xor
push
gs
call
xchg
in
retf
ja
in
outs
jns
repz
adc
int3
xchg
xlat
cmp
shl
mov
cwde
sbb
mov
out
cmp
enter
add
gs
sbb
sub
enter
xor
enter
cmps
aam
push
in
sub
jb
call
push
out
cmp
inc
fwait
inc
or
pop
and
loopne
out
rcr
arpl
pop
inc
adc
nop
mov
sub
pop
add
pop
push
gs
pusha
push
xchg
fadd
sub
das
ret
pop
jmp
dec
or
push
xchg
add
xor
sbb
test
or
sbb
mov
arpl
repz
retf
imul
enter
pop
aad
jns
les
lahf
test
pusha
xchg
jo
add
and
jge
mov
adc
jo
cmp
in
push
dec
and
add
aaa
push
enter
add
repnz
adc
ss
lds
dec
inc
inc
lahf
mov
imul
(bad)
(bad)
call
and
pop
sub
aam
mov
jne
daa
je
data16
rcr
mov
imul
inc
sub
dec
arpl
jmp
jle
lea
mov
xor
dec
dec
dec
dec
dec
dec
test
cmp
inc
xchg
imul
les
mov
pusha
mov
jmp
sbb
dec
shl
mul
cli
jne
dec
lock
rcr
and
jnp
sbb
inc
mul
call
or
call
test
dec
xchg
(bad)
sbb
ds
imul
add
sbb
rol
pop
xchg
lock
in
sbb
outs
dec
jmp
mov
fistp
jns
mov
or
jp
pop
jo
js
push
lods
in
fdiv
sub
mov
xor
pop
cmps
mov
ror
(bad)
xchg
jne
pop
fild
test
pop
arpl
jns
add
sub
or
(bad)
xchg
sar
adc
add
push
addr16
inc
fadd
dec
mov
into
add
xor
adc
inc
inc
sar
jmp
cwde
or
rcr
and
jae
(bad)
fisub
add
push
sub
pop
jno
loopne
push
sub
sbb
xor
dec
adc
int3
xchg
jp
and
push
sub
rol
retf
mov
ror
or
add
mov
adc
sbb
xchg
call
jecxz
or
pop
xchg
gs
add
add
push
push
xchg
outs
pop
sar
adc
(bad)
ret
pop
(bad)
mov
shl
dec
mov
push
sub
dec
imul
push
out
adc
adc
mov
ja
xor
add
add
jne
js
in
popa
cmp
and
out
pop
shl
sub
iret
cmp
sub
pop
pop
pop
in
fidiv
loop
sub
sub
push
push
dec
sub
and
lds
ret
sbb
sbb
adc
cdq
and
fdiv
stos
les
or
pop
inc
pop
enter
loopne
mov
push
mov
fidivr
xor
cmc
and
and
xor
xchg
movs
jmp
adc
inc
add
cmp
(bad)
cmps
and
mov
sbb
pop
aad
stos
sahf
sub
inc
fld
sub
lahf
in
icebp
shl
or
loop
lea
idiv
into
movs
(bad)
neg
lea
shl
imul
dec
scas
std
add
jmp
jp
sub
in
call
add
cmp
mov
sbb
add
int
adc
mov
hlt
out
fimul
xchg
mov
imul
in
jns
sbb
int
rcl
call
jle
cmp
jae
neg
and
jne
ret
mov
in
pop
dec
push
in
int
sub
daa
js
(bad)
jl
js
psrlw
test
ja
cld
add
adc
cli
xor
mov
add
add
dec
jae
and
inc
xchg
xchg
stos
aaa
fstp
push
imul
mov
lods
xor
imul
repz
in
fdivrp
or
push
jne
push
in
fwait
push
stos
in
jmp
push
add
adc
icebp
lock
test
retf
retf
retf
retf
add
cmp
(bad)
je
add
inc
fild
fidivr
stc
sbb
xchg
cmps
cmp
add
das
adc
hlt
add
add
neg
and
loope
pop
not
test
sar
test
or
pop
imul
in
add
adc
xor
aaa
adc
in
push
stos
xchg
pop
loopne
cmp
mov
cmp
mov
hlt
inc
fadd
daa
push
push
mov
lods
jno
and
stos
push
adc
push
adc
adc
mov
ds
pop
scas
dec
mov
and
rcl
xlat
rcr
cmp
pop
fs
ucomiss
rcr
out
call
xlat
lock
mov
inc
sub
push
pusha
and
adc
test
push
inc
ret
dec
push
add
ins
sar
enter
inc
cmps
test
jp
and
jp
rol
fptan
(bad)
push
cwde
or
outs
xor
in
popf
push
popa
push
out
or
add
cmp
cli
inc
push
lea
out
shl
mov
add
add
add
pmaxsw
jl
jo
lods
daa
test
pop
lock
or
mov
jl
pusha
dec
aas
ins
cs
adc
sbb
aaa
pop
stos
sub
mov
pop
and
inc
outs
jmp
xchg
push
mov
shl
mov
icebp
or
in
rol
ja
dec
push
mov
pop
dec
pop
mov
cld
gs
pop
lods
push
add
adc
cmp
adc
pop
and
dec
push
xchg
out
cmps
pop
cli
add
inc
and
xchg
cmp
add
inc
mov
test
sbb
sub
mov
adc
dec
add
adc
sbb
add
pop
les
retf
rcr
int3
cmp
mov
test
xchg
fcomp
rcr
stc
fmul
or
ds
call
idiv
jmp
dec
movzx
shl
inc
jns
fild
add
and
and
ficomp
popa
mov
and
pause
inc
sbb
add
mov
enter
or
add
xchg
das
mov
xchg
push
sbb
into
jo
enter
cmp
xchg
loope
xchg
outs
xchg
cmp
or
loope
add
jg
cmc
xchg
pop
lods
inc
cmp
je
push
xchg
sbb
fucomp
push
inc
fld
push
mov
test
mov
fild
sub
cmp
lds
data16
fwait
ret
sar
int3
bound
std
push
xor
pop
fwait
and
es
jp
push
sub
adc
out
or
adc
cli
xor
(bad)
pop
sub
push
xchg
sbb
ror
jno
xchg
fsubr
lods
mov
jmp
sub
outs
jne
jne
inc
cmp
fidiv
xchg
dec
inc
xchg
pop
jl
or
inc
add
lods
inc
ins
dec
pop
fadd
hlt
push
and
nop
jecxz
(bad)
push
jl
or
jle
or
mov
jnp
test
mov
ins
repz
jp
in
shl
push
jmp
cmp
pop
inc
(bad)
push
aaa
inc
adc
aaa
push
je
inc
jb
adc
out
jne
xchg
push
sub
jo
mov
add
loopne
or
into
push
(bad)
inc
(bad)
nop
nop
dec
adc
leave
(bad)
jecxz
nop
test
add
leave
in
pop
sub
xrelease
jnp
in
or
sub
jno
enter
cmp
stos
push
or
ins
leave
jns
inc
or
adc
ret
xor
and
enter
pop
aaa
and
nop
push
lock
jmp
mov
sub
sbb
jmp
stos
adc
imul
das
sub
push
cld
sub
les
or
adc
mov
add
inc
sub
cwde
loopne
mov
sbb
pop
push
ins
adc
fnsave
inc
xor
sbb
jl
add
or
gs
jge
adc
inc
pop
jns
dec
fimul
dec
sub
adc
lock
or
xor
movs
test
cmp
pop
mov
adc
xchg
cs
adc
jbe
popa
leave
and
cdq
or
mov
mov
shl
ret
lds
leavew
sbb
push
cmp
mov
lahf
loop
icebp
fcmovu
movzx
mov
shl
sahf
repz
sub
mov
cwde
sbb
pop
sbb
sbb
and
sub
cmp
jo
jmp
or
je
mov
test
mov
cmp
dec
pop
jb
add
aas
sbb
sub
push
mov
sbb
or
or
sub
add
jne
(bad)
pop
pop
dec
cmp
add
das
cmp
loopne
(bad)
pop
xor
dec
fdivr
sbb
add
dec
push
imul
push
pop
xor
lds
(bad)
sbb
fdiv
or
into
or
inc
sahf
sub
dec
adc
fs
outs
jns
cmp
lods
pop
bound
sub
push
or
push
pop
add
and
pushf
push
(bad)
fnstcw
dec
and
inc
or
test
and
inc
inc
outs
add
inc
daa
push
jno
mov
out
gs
xchg
cmp
sbb
repnz
lds
and
mov
or
jae
mov
(bad)
or
mov
mov
dec
enter
sub
xor
stos
jo
pusha
xchg
jbe
add
push
cwde
nop
or
cwde
push
xor
cmp
fsubrp
popa
nop
mov
add
ret
mov
fldenv
adc
jl
loope
or
jb
out
dec
xor
scas
mov
cmp
and
or
sbb
adc
add
mov
lock
daa
sbb
xor
sbb
sbb
cmp
pop
fisubr
jae
push
sbb
fmul
xchg
out
or
or
pop
and
clc
inc
adc
sbb
inc
and
push
and
sbb
js
dec
or
dec
push
add
and
inc
sub
mov
and
pop
lock
add
xor
(bad)
retf
mov
retf
cmp
jb
cmps
shr
xchg
aad
jo
clc
inc
mov
mov
adc
dec
(bad)
adc
bound
jne
add
icebp
jmp
inc
sbb
neg
lods
mov
and
sbb
ficomp
and
sbb
rcl
adc
mov
mov
ror
fs
and
and
in
inc
and
inc
push
sub
clc
add
and
aaa
and
or
es
pop
or
or
jno
in
rol
jae
(bad)
leave
mov
or
mul
xchg
lods
mov
add
rcr
mov
lds
push
iret
sbb
mov
sbb
jbe
cmp
ins
js
lea
aas
push
mov
xor
xor
push
xor
xchg
mov
sbb
inc
in
jns
out
inc
lahf
call
xchg
enter
xor
lds
add
and
dec
popa
push
cmp
xlat
in
es
fistp
inc
add
icebp
mov
jae
sub
sbb
or
push
pop
add
adc
add
or
lds
ret
dec
movs
push
pop
(bad)
enter
mov
mov
and
adc
popa
add
dec
mov
fistp
dec
and
adc
scas
pusha
pop
fadd
sub
jo
sub
sbb
jbe
sbb
and
push
add
call
or
ins
loope
lea
repnz
iret
mov
dec
add
or
push
cwde
test
sbb
sbb
ror
xor
vpmuludq
pusha
inc
(bad)
repz
test
push
mov
push
jne
inc
adc
pop
and
xor
jp
xor
xchg
pop
clc
pop
bound
pop
or
jle
add
add
nop
dec
pusha
xor
lods
mov
or
arpl
mov
and
sar
inc
adc
lds
lods
or
inc
and
(bad)
pop
add
les
cmp
lods
movs
adc
cmp
ins
and
or
dec
out
sbb
pop
sbb
les
cs
ror
xor
(bad)
and
and
test
cmp
adc
and
pop
push
bound
adc
mov
push
sbb
sub
ret
dec
xor
inc
pop
fisubr
pop
ror
enter
pop
mov
pop
cmps
lds
das
imul
sbb
jno
aaa
add
jo
dec
loope
push
cmc
adc
pop
mov
dec
pop
and
sbb
popf
or
pop
mov
mov
mov
cwde
push
sub
icebp
and
in
xor
dec
xchg
pop
push
push
lds
jne
and
cmp
cmps
mov
adc
add
xchg
mov
xor
or
cs
push
daa
mov
mov
add
sub
sub
add
movs
cs
and
movs
lock
jns
push
sbb
(bad)
pop
arpl
or
jns
in
int
jg
lds
or
test
scas
or
add
adc
out
mov
jmp
dec
dec
shr
push
cmp
xchg
and
cli
mov
das
inc
mov
sbb
sbb
data16
push
push
rcl
add
mov
cmp
xchg
test
mov
jb
test
pop
pop
sbb
xor
push
fsub
cmp
sahf
push
adc
jge
popf
and
dec
mov
pop
or
pusha
es
fisubr
ins
rcl
mov
jb
stos
imul
adc
xchg
ret
mov
ror
pop
xchg
frstor
push
js
xchg
in
int
sti
(bad)
and
jno
fucomp
(bad)
fs
add
inc
sahf
pmulhuw
enter
add
xchg
mov
push
xor
jg
dec
popa
aas
adc
sbb
retf
jbe
pop
enter
iret
mov
mov
pop
enter
out
and
inc
xlat
mov
cmps
sbb
and
shr
into
stos
clc
cmp
sub
gs
pusha
push
or
dec
or
dec
xchg
in
jge
jnp
pop
xor
jo
fst
outs
pop
mov
and
xor
xchg
cmp
fstp
add
push
sbb
cmp
xor
sbb
inc
movs
jns
xlat
jle
or
mov
jnp
or
mov
fcomp
fidiv
sub
enter
inc
movs
loopne
sbb
sbb
mov
xor
push
sbb
add
xchg
retf
ret
int
add
xchg
adc
inc
mov
fld
push
dec
adc
aam
mov
push
push
call
push
pop
xchg
pop
and
pop
xchg
add
mov
push
push
ins
sbb
xchg
mov
loopne
jp
xor
or
push
dec
das
inc
adc
inc
push
les
mov
repz
dec
inc
dec
nop
or
nop
cs
shr
rcr
inc
enter
test
ins
dec
ret
(bad)
push
rcl
imul
inc
xchg
push
icebp
jne
mov
mov
mov
jle
sub
mov
mov
adc
les
xchg
adc
fcom
and
outs
push
adc
and
jg
mov
or
or
or
ret
out
xor
mov
out
adc
div
nop
add
mov
imul
das
dec
loope
movs
shr
mov
js
pop
lea
cmp
dec
test
adc
or
xchg
sbb
or
push
inc
cmp
cmp
or
(bad)
adc
push
neg
and
push
mov
cmp
call
sbb
mov
les
cs
movs
mul
cwde
dec
clc
stc
pop
mov
inc
gs
or
(bad)
cld
push
or
pop
or
jo
jo
jmp
call
lea
adc
cmp
lock
sub
jns
push
imul
mov
adc
xor
mov
int3
jae
iret
adc
mov
and
scas
jg
and
push
jp
dec
inc
cmp
and
loope
jl
mov
or
inc
idiv
sub
sti
repnz
push
cmp
xchg
sbb
pop
mov
fs
fs
iret
pusha
jge
mov
jmp
add
ret
or
sub
ret
ret
pusha
repz
inc
mov
mov
push
mov
cmp
clc
dec
lock
neg
ins
adc
add
les
push
push
aaa
test
mov
push
pop
or
lahf
push
aas
mov
push
push
aad
and
aas
div
repnz
sbb
dec
fst
sti
sbb
test
sub
or
sbb
lods
add
sub
aaa
mov
movs
add
jo
and
es
jo
add
sbb
jb
pop
sbb
and
lods
dec
ret
call
cmp
ret
or
dec
mov
rol
and
data16
into
sub
out
adc
das
adc
sub
movs
dec
pop
retf
and
push
out
push
add
add
push
cmps
in
and
adc
mov
or
pop
aaa
pop
sbb
or
mov
cmp
data16
je
ins
es
stos
int
mov
push
mov
and
cmps
and
mov
cmps
push
add
jp
fstp
ds
ror
xor
dec
or
adc
aam
push
bound
dec
jae
js
dec
pop
dec
arpl
and
loope
mov
inc
out
dec
and
popf
and
and
(bad)
enter
add
add
pushf
adc
cmp
xor
inc
pop
popa
add
rol
xor
dec
and
dec
jb
xor
dec
movs
pop
cld
xor
aam
adc
nop
add
xor
mov
inc
jb
add
sbb
or
inc
sub
adc
push
leave
les
xor
fsubp
daa
movs
(bad)
xchg
ja
add
daa
test
iret
mov
in
popa
(bad)
idiv
cmp
and
mov
lea
std
pop
test
fcomp
mov
push
sbb
and
and
sti
push
shr
addr16
loopne
pop
push
jge
inc
lods
out
mov
js
jg
and
outs
xchg
in
(bad)
jbe
mov
sub
or
push
fsub
sbb
xor
in
pusha
frstor
pop
das
xor
cmp
ret
scas
mov
push
cmp
ja
aam
add
nop
pop
push
adc
inc
jne
pop
aam
cmovne
or
inc
retf
cli
jge
jmp
daa
add
or
pop
call
mov
push
pop
inc
push
jmp
lahf
adc
outs
cmc
push
xchg
and
(bad)
fcmovb
in
and
sbb
jmp
popa
pop
sub
or
push
in
sub
xor
add
xor
dec
leave
add
pop
inc
or
dec
add
cmp
mov
or
add
(bad)
inc
enter
mov
and
ja
sub
sub
movs
or
test
sbb
cmp
dec
mov
sbb
xor
movs
dec
pop
mov
inc
jbe
xor
in
cwde
mov
xor
inc
addr16
pop
dec
jl
adc
gs
dec
jle
cmp
sbb
adc
lea
mov
xor
ficom
sub
jecxz
jns
aaa
dec
sbb
fist
sbb
call
mov
xlat
jno
and
into
push
es
dec
inc
inc
out
and
sbb
adc
mov
adc
mov
mov
push
adc
mov
push
add
mov
outs
and
add
inc
jb
add
jne
xor
xchg
mov
popa
popa
pusha
dec
call
mov
push
and
out
xchg
xchg
or
nop
bound
xlat
and
test
lea
xor
push
mov
std
mov
xor
xchg
pop
sbb
sbb
ficom
(bad)
inc
repz
fst
loop
jne
test
push
dec
test
push
enter
jmp
mul
jae
push
cmp
dec
pop
add
jmp
iret
adc
pop
add
pushf
inc
xor
mov
mov
jb
cmc
fcom
cwde
sub
lods
retf
add
add
inc
push
pusha
adc
adc
mov
xchg
pop
or
sbb
mov
iret
mov
cld
dec
call
push
pop
cmp
pop
jno
daa
es
dec
or
adc
(bad)
imul
pop
inc
int3
retf
fldenv
or
mov
popf
and
fcmovnu
or
push
adc
enter
adc
xor
mov
pop
mov
(bad)
enter
sbb
mov
mov
data16
pop
dec
push
nop
add
dec
js
lock
(bad)
adc
call
in
mov
call
std
ret
sar
xor
dec
sbb
jne
add
lahf
jp
jmp
dec
xor
(bad)
pop
jmp
adc
aaa
test
adc
sti
inc
test
mov
xchg
jmp
fild
cwde
(bad)
jo
cli
pop
mov
in
and
push
fldenv
mov
or
or
aam
movzx
fldenv
fimul
pop
jmp
sbb
add
test
mov
test
add
into
jo
vhaddps
call
inc
jmp
pop
jp
push
mov
les
in
test
push
in
inc
pop
inc
add
loopne
rol
jmp
adc
sub
pushf
push
pop
inc
or
fcomp
call
lods
xchg
inc
adc
mov
jg
(bad)
pusha
adc
add
xchg
mov
mov
push
xchg
rcr
les
pop
adc
mov
adc
enter
sbb
xchg
push
xor
lods
mov
ss
or
sbb
push
gs
ja
cmp
push
sub
dec
jmp
adc
mov
xor
aam
mov
adc
int3
in
loope
fdiv
jo
and
in
lea
sahf
dec
mov
inc
push
mov
sub
jge
sbb
xchg
mov
cmp
jmp
pop
mov
shl
cmp
jl
push
xlat
add
cmp
test
dec
inc
cs
pop
in
mov
dec
pushf
mov
xlat
in
pop
xchg
sub
dec
inc
mov
pop
jnp
into
fistp
rcl
xchg
test
and
xor
inc
fs
push
fs
push
outs
bound
shr
rcr
mov
adc
or
sbb
and
shl
add
fldenv
test
push
(bad)
(bad)
jmp
lea
adc
jmp
data16
mov
and
test
jo
jmp
(bad)
cmp
mov
and
pop
fs
and
jge
adc
pop
sbb
mov
scas
rcr
inc
add
inc
push
in
jmp
outs
stc
fcmovbe
bound
jle
aaa
jle
jmp
jge
and
cmp
adc
popa
mov
cwde
add
aam
inc
lock
mov
jmp
aad
fld
mov
shl
mov
or
rcr
(bad)
adc
add
cmp
cmp
shl
pop
mov
outs
jl
lock
leave
or
jmp
or
sbb
sub
popf
jecxz
jp
pop
sbb
fadd
xchg
mov
and
sub
jmp
ds
and
sbb
and
adc
mov
or
es
and
mov
sub
popa
xor
lds
and
out
push
pop
shl
stc
push
and
adc
or
dec
xchg
xor
ss
sbb
shr
lahf
inc
jecxz
cwde
movs
sbb
xor
adc
test
add
fincstp
imul
in
add
gs
mov
xor
js
das
pop
pusha
xchg
sbb
lods
sub
jnp
data16
cmp
mov
adc
arpl
cwde
(bad)
pusha
xchg
mov
inc
pop
jle
sbb
sbb
and
jae
pop
pop
sub
popa
fwait
popa
sbb
adc
and
mov
dec
sub
mov
lahf
add
test
jnp
mov
adc
adc
or
lock
dec
sbb
adc
popa
into
mov
das
pushf
dec
jp
aas
je
mov
dec
jnp
jmp
jns
les
dec
cli
loopne
jnp
inc
das
loop
sub
xchg
or
sub
xchg
pop
push
jmp
add
xchg
(bad)
loopne
push
dec
in
aaa
xchg
popa
stos
sbb
sub
pop
or
cmp
mov
add
sub
lock
and
and
loopne
addr16
loopne
adc
shl
sbb
pop
cld
jg
xor
inc
push
mov
and
aad
sub
inc
rcr
push
or
sbb
jns
in
ins
and
jns
adc
mov
das
or
jge
lahf
sub
dec
cmp
adc
inc
sahf
mov
sbb
cmp
jg
jecxz
sbb
jle
setbe
js
data16
sbb
pusha
add
cmc
adc
pop
sbb
jge
xchg
sbb
push
xor
in
sub
popf
or
sbb
test
jmp
add
pop
jg
push
sbb
cmp
and
aaa
and
sub
fwait
loop
je
cmp
xor
ss
retf
inc
nop
loop
lods
add
mov
jg
jmp
sbb
cld
popa
sub
jne
sub
mov
add
inc
cmp
pushf
and
sbb
mov
bswap
push
call
test
jp
mov
test
iret
push
push
add
sub
sub
cmp
shl
push
jne
stos
arpl
dec
loopne
and
movs
and
dec
popa
out
test
mov
lock
and
rcl
ret
sub
dec
retf
cmp
push
xor
(bad)
pop
cmp
out
lea
push
shl
add
mov
shr
loop
shr
movs
mov
or
mov
jb
lahf
cmp
add
xchg
mov
ja
loope
enter
lea
mov
pop
ds
mov
dec
cmp
or
or
aam
test
sbb
mov
leave
mov
mov
add
dec
and
test
mov
cdq
add
or
cmp
outs
mov
cs
mov
sub
sahf
add
pop
mov
jb
mov
or
(bad)
jmp
jmp
push
cdq
daa
inc
popa
in
dec
push
or
or
sbb
push
push
popa
and
sbb
stos
mov
push
mov
push
cdq
xchg
cmp
out
lods
mov
es
mov
or
xor
sub
call
and
inc
pop
xchg
dec
sbb
call
lahf
xor
(bad)
fs
jle
mov
xor
dec
cmp
je
les
push
add
pop
sub
cmc
sbb
and
not
jecxz
sbb
(bad)
inc
fsubr
ror
or
movs
fidiv
mov
xchg
cmp
adc
fidivr
ins
loop
dec
sbb
push
sbb
cmps
(bad)
push
jg
or
sub
mov
sub
pop
cs
sub
add
call
xchg
inc
fs
adc
sar
sbb
and
xor
inc
rol
mov
sbb
or
inc
push
stos
mov
cmp
lea
jno
cmp
inc
retf
and
add
adc
or
test
fisttp
mov
cmp
add
icebp
sub
inc
test
cmp
cmp
and
adc
inc
jo
or
push
pop
add
or
in
push
sbb
mov
dec
cdq
nop
js
or
das
cmp
(bad)
pop
or
or
cld
jnp
push
aad
add
inc
dec
xor
add
sub
sbb
jae
lea
push
xor
lea
pop
mov
gs
inc
inc
adc
sbb
dec
dec
sub
jb
adc
or
push
(bad)
(bad)
loope
adc
imul
xchg
sbb
pop
add
mov
addr16
scas
js
xchg
jbe
add
inc
das
scas
fiadd
int
cmp
int3
rcl
push
xchg
inc
addr16
push
sbb
jmp
outs
pop
pop
adc
cmp
and
adc
jp
sbb
fadd
push
push
xor
shl
clc
and
loop
add
push
xor
inc
in
cmp
inc
cmp
imul
cmovp
sbb
lea
ins
sbb
inc
xor
sar
in
scas
sbb
xor
add
sub
movs
xor
daa
sbb
and
(bad)
sub
dec
or
xor
int
mov
or
sgdtd
dec
add
push
pop
and
outs
cmp
movs
cmc
inc
xchg
jge
inc
cmp
sbb
jo
adc
pop
aas
xchg
stos
pusha
inc
adc
fisttp
sbb
mov
stc
or
es
(bad)
imul
mov
mov
out
or
mov
mov
movs
mov
jmp
push
test
xor
or
mov
add
loop
jmp
add
adc
shl
js
pusha
leave
adc
push
or
adc
test
outs
mov
push
xchg
rcr
add
str
adc
xchg
loope
sub
dec
sahf
gs
inc
ins
lods
or
cli
lock
ss
and
cld
in
pop
lods
mov
push
sbb
push
xor
ds
and
cmp
in
add
adc
push
dec
pushf
or
test
xchg
int
imul
inc
and
mov
mov
lahf
xor
add
mov
lock
push
or
inc
xor
inc
jo
sahf
or
popa
imul
jae
in
retf
jo
mov
call
mov
retf
lods
test
cmps
fcmovnu
popa
push
sub
js
sbb
push
inc
rol
dec
cmp
dec
inc
in
pop
inc
sahf
mov
mov
and
inc
cmp
xor
cmp
cld
dec
sbb
jb
outs
pop
xor
add
pop
push
add
movs
loop
push
nop
ret
cmps
addr16
sub
adc
and
rol
xchg
test
mov
sbb
mov
or
fild
mov
mov
or
pop
push
daa
inc
cmp
out
sbb
and
stos
loopne
jns
gs
add
jle
imul
sbb
push
push
call
sar
outs
mov
and
pop
sar
mov
mov
sets
pop
jecxz
les
mov
mov
mov
mov
fs
and
push
add
mov
or
rcl
(bad)
jo
ss
adc
gs
(bad)
and
(bad)
inc
loop
adc
dec
sub
mov
dec
ds
sbb
cld
inc
rol
imul
push
pushf
inc
pop
or
pop
pop
jne
mov
aam
inc
lock
mov
jae
dec
sbb
dec
das
cmp
(bad)
adc
sub
cmp
or
xchg
or
or
or
outs
mov
and
jno
add
call
cmp
jecxz
pop
mov
dec
je
dec
adc
mov
xlat
inc
push
sub
inc
dec
mov
inc
push
and
add
sub
mov
pop
push
xlat
dec
pusha
les
xor
jo
call
add
mov
call
or
mov
jns
push
xchg
loope
sbb
xor
xor
fwait
xor
jp
mov
ja
add
inc
repnz
pop
and
imul
pusha
test
xor
ffreep
scas
mov
call
xor
push
mov
adc
sub
js
sub
mov
and
xor
adc
(bad)
inc
xchg
mov
jg
or
jg
or
mov
cli
xchg
sbb
push
imul
dec
leave
push
push
inc
xor
cmp
or
popa
test
or
jmp
xchg
jg
not
pusha
loop
sbb
sti
add
inc
adc
cmp
enter
pop
inc
add
sbb
cmp
lea
and
mov
sbb
call
jecxz
xor
sub
daa
mov
push
and
dec
add
mov
sbb
adc
jno
inc
outs
cmp
mov
stos
add
push
ins
movs
mov
and
cwde
and
xchg
sbb
cwde
cmp
cmp
add
fdiv
adc
push
mov
mov
mov
aas
push
inc
cmp
cmp
inc
cmp
(bad)
or
cmp
xor
sbb
sub
xchg
or
and
xlat
add
sub
cwde
adc
fxch
jp
test
stos
pop
add
pop
push
adc
repnz
ja
mov
lock
mov
ror
dec
add
call
or
sub
(bad)
stos
pop
idiv
retf
sbb
inc
ret
mov
sbb
and
mov
(bad)
gs
cmp
xor
jecxz
jno
lea
mov
mov
mov
jg
add
add
jo
mov
mov
pop
add
mov
pop
ins
xor
sbb
stos
adc
shr
mov
cwde
push
fwait
sub
adc
ds
hlt
adc
outs
fwait
push
cmp
rcl
mov
or
adc
push
xor
shl
add
mov
outs
mov
sub
xchg
push
enter
xchg
jnp
or
pop
mov
inc
mov
sub
inc
aad
mov
dec
dec
mov
add
ja
push
and
push
jo
xor
dec
ss
jo
dec
sub
mov
and
push
jo
adc
out
or
call
push
adc
adc
jno
stos
fcmovb
pusha
mov
push
scas
sbb
adc
dec
add
xchg
dec
push
or
(bad)
inc
sbb
pop
lods
and
dec
xor
clc
mov
mov
lsl
fst
push
mov
imul
pop
cmp
or
jl
inc
jmp
jns
or
pop
mov
(bad)
scas
out
dec
ret
push
dec
loopne
call
or
inc
inc
out
scas
adc
or
inc
or
mov
xchg
push
mov
jle
pop
add
mov
cmps
test
push
pop
mov
retf
or
mov
mov
pop
das
sbb
and
and
int
lahf
jbe
fist
or
stos
out
mov
shl
lods
sqrtps
mov
dec
mov
rcl
push
icebp
rcr
cmp
adc
push
dec
inc
push
adc
inc
jb
push
in
jb
mov
sub
cld
sub
or
xchg
ret
sbb
or
clc
jnp
pop
out
popa
jge
sbb
inc
enter
sar
loopne
and
or
das
lods
stos
adc
loope
movs
mov
or
mov
add
fimul
loopne
push
sti
adc
into
aas
adc
in
xchg
sbb
xchg
mov
lock
sbb
sbb
sar
adc
retf
push
loopne
in
lods
and
icebp
cmp
adc
adc
xor
inc
loop
or
fcom
pushf
inc
pop
fimul
jle
inc
mov
mov
mov
pop
les
sahf
js
fcomp
test
in
int
sbb
jb
pusha
push
adc
js
sbb
test
xor
enter
sbb
or
ret
in
sub
fadd
pop
pop
mov
fwait
ret
pop
push
scas
mov
mov
mov
cld
pop
sub
js
cld
inc
(bad)
sbb
retf
into
add
sti
xor
(bad)
sti
sbb
and
xchg
fcomp
cmps
fadd
adc
xchg
call
or
loope
stos
mov
xor
inc
ret
fst
les
mov
test
mov
inc
mov
xchg
clc
mov
cmps
adc
fst
xchg
movs
cmps
or
rcl
adc
lods
iret
mov
rcr
jae
push
out
ds
inc
sahf
mov
mov
aam
jl
push
dec
add
daa
or
scas
pop
jle
in
dec
int3
push
dec
add
dec
pop
pop
mov
aam
push
sub
push
mov
push
push
or
push
pop
ins
push
mov
xchg
xchg
icebp
inc
and
or
div
adc
push
xchg
inc
add
sbb
imul
inc
pop
push
cmp
cdq
ins
pop
and
adc
fiadd
xor
cdq
add
ins
dec
jb
and
enter
lds
dec
cmp
or
xchg
mov
jne
sub
add
shl
adc
cmps
lock
jle
sub
cld
jge
mov
lock
adc
push
push
adc
ins
daa
sub
clc
inc
cmp
xchg
inc
cwde
ret
das
call
xchg
ror
mov
sysret
sbb
or
sub
ins
sbb
push
mov
in
shl
dec
add
add
pusha
sbb
pop
pop
mov
daa
and
ret
sub
int3
mov
sub
retf
mov
out
sub
or
test
paddb
mov
es
inc
mov
and
push
in
retf
cmp
push
loopne
aam
push
adc
popf
mov
dec
sbb
inc
sbb
sbb
ret
ret
inc
jns
pop
mov
xor
jmp
jae
push
mov
jge
or
add
mov
mov
fimul
mov
(bad)
lea
push
jl
inc
dec
jl
pop
scas
and
loopne
mov
aad
add
fadd
clc
aam
scas
cmp
jne
ss
sub
clc
or
mov
js
mov
dec
sbb
cwde
shr
cli
lahf
jne
jne
push
out
jno
mov
sbb
push
mov
sbb
or
adc
imul
mov
loop
inc
sahf
jge
nop
outs
xchg
sbb
xor
mov
pusha
pop
dec
cmp
jae
cmc
js
fild
fbstp
add
xor
sar
(bad)
cmp
or
xchg
add
loop
ret
jo
adc
jg
daa
call
daa
lock
in
xchg
inc
pop
adc
std
sub
add
inc
sbb
outs
push
add
je
or
inc
sbb
or
or
add
test
hlt
es
popa
jb
inc
or
in
inc
jne
xchg
xchg
mov
dec
icebp
sbb
cwde
call
lock
push
and
into
jnp
les
jns
mov
sbb
nop
sub
sbb
pop
icebp
daa
(bad)
sub
ins
mov
test
cdq
mov
push
xor
jecxz
mov
cmp
add
test
and
stos
cld
mov
fistp
ins
xor
sbb
or
or
or
push
ret
js
push
adc
popa
in
cs
add
test
(bad)
jns
or
cld
inc
mov
fild
jge
mov
sub
pop
pop
loopne
and
push
(bad)
or
div
dec
jmp
mov
into
or
adc
or
dec
jp
push
pop
adc
cmp
jle
pop
inc
loopne
dec
dec
xchg
inc
pause
mov
inc
add
lods
mov
inc
sbb
outs
push
push
sahf
inc
ror
add
inc
fild
imul
adc
push
sub
sub
cdq
push
inc
inc
jns
cmps
inc
scas
cdq
dec
leave
rcl
addr16
aam
mov
xlat
fmul
out
popa
inc
mov
sub
bound
(bad)
sbb
or
in
or
(bad)
into
mov
fs
ror
shr
das
xor
cld
cmp
xchg
cmp
mov
xchg
mov
mov
inc
add
mov
(bad)
call
mov
sub
rcr
xor
xor
repz
dec
xchg
mov
dec
push
add
mov
jne
bound
push
vunpcklps
jmp
cmp
aad
mov
mov
pop
push
mov
add
xor
sub
jne
imul
add
push
dec
rol
add
xchg
and
xor
loope
fnsave
out
loopne
push
in
sbb
dec
jo
add
(bad)
dec
aas
mov
or
das
loopne
and
push
or
cmp
mov
sub
adc
push
fsubr
sub
pop
dec
adc
sbb
mov
push
add
push
jmp
dec
cmp
xor
rcl
and
icebp
mov
jmp
jns
cmp
cmp
ficomp
in
int
js
es
cmp
add
mov
xor
mov
cwde
or
in
adc
adc
push
mov
rcl
stos
pop
(bad)
pop
enter
pusha
push
cmp
and
rcr
push
(bad)
pop
sub
xor
inc
(bad)
cmp
cmc
add
rcr
pusha
or
xor
sbb
and
push
dec
je
add
addr16
mov
dec
dec
call
jmp
jno
std
idiv
push
fistp
icebp
inc
pushf
mov
fnstsw
arpl
bt
sar
in
pop
sbb
and
cmp
jl
ret
in
sbb
and
dec
ret
rcr
pop
ins
and
inc
fwait
mov
mov
call
lea
add
cmp
add
fmul
outs
pop
aas
fdivr
inc
sbb
inc
rol
iret
pop
and
and
push
push
add
ins
push
push
sub
and
inc
sub
mov
daa
jle
mov
cmps
pop
sub
lds
outs
ret
mov
push
xor
pop
mov
xchg
or
xchg
push
or
add
inc
inc
das
add
aad
mov
inc
movs
add
or
ror
rcr
stos
inc
sub
dec
aaa
jbe
hlt
or
ds
call
jp
sbb
(bad)
shl
icebp
ret
cmp
sub
jmp
xor
sbb
jno
jl
xor
add
jge
xor
sbb
add
adc
jmp
popa
cmps
sbb
add
nop
sub
dec
lock
or
or
sbb
data16
and
inc
das
push
rol
dec
push
test
or
addr16
call
lea
int3
jnp
or
sbb
call
add
and
out
add
sbb
cmp
adc
rcr
enter
ret
mov
rcl
push
fld
mov
sahf
pusha
mov
add
stos
repz
clc
xchg
test
jmp
leave
cld
popa
repz
loopne
jo
pop
push
push
arpl
jb
adc
inc
mov
cmp
push
xor
mov
stos
add
push
sbb
mov
xor
mov
push
inc
or
rcl
push
and
fisubr
inc
add
imul
xor
add
lods
jns
ins
and
mov
jg
add
sbb
adc
call
jmp
mov
pop
adc
pop
add
lea
and
mov
js
push
hlt
fwait
test
neg
or
cmp
pop
js
dec
cmp
mov
aas
sahf
adc
in
xor
mov
aaa
adc
mov
pop
sub
pop
push
pusha
sbb
ret
add
xor
pop
sbb
repnz
adc
pop
inc
sbb
adc
pop
lock
daa
dec
adc
sbb
and
outs
inc
nop
popa
and
adc
pop
add
or
jb
cdq
jl
cmp
cmp
bound
cmp
sbb
and
inc
sbb
mov
mov
or
adc
mov
sahf
inc
xor
mov
(bad)
test
out
ja
test
cmps
fld
adc
js
aas
sbb
shl
or
std
scas
and
jmp
pusha
and
pop
inc
push
sbb
mov
imul
adc
or
out
jae
push
xor
or
inc
inc
cmp
sub
add
mov
nop
jge
cld
out
adc
pop
cmp
ss
and
pusha
call
mov
popa
ror
jo
jno
inc
stos
push
nop
sbb
test
xchg
or
shr
and
addr16
adc
inc
jmp
mov
dec
inc
sub
push
cwde
xchg
adc
ds
jne
shl
inc
mov
pop
sub
mov
in
test
inc
cmp
or
cbw
lea
scas
das
je
xor
ins
cld
sbb
inc
sub
ror
and
push
and
pop
xchg
xchg
and
and
xchg
and
out
cmp
and
fidiv
lods
ret
mov
fidivr
pop
out
push
adc
push
adc
or
xchg
adc
cli
or
les
fbstp
in
nop
or
retf
sbb
(bad)
sbb
mov
xchg
movsx
cwde
inc
ja
(bad)
rcl
(bad)
sub
jl
jmp
add
fdiv
stos
call
inc
push
fst
fistp
pusha
fsubr
sbb
push
dec
imul
push
cmp
add
xor
xchg
lock
xchg
mov
dec
or
pop
add
sar
inc
imul
dec
iret
nop
cmp
sub
and
out
mov
cwde
fs
loop
inc
pop
jb
sbb
add
adc
pushf
mov
jae
mov
dec
add
add
pop
pop
jl
xchg
xchg
pop
fisttp
imul
popa
rcl
or
loope
cmp
pushf
inc
jmp
push
lahf
xchg
adc
rcr
or
mov
dec
jno
adc
imul
sub
dec
jle
mov
adc
jbe
cli
add
pop
sub
fld
(bad)
ds
fld
ret
add
dec
mov
pushf
or
pop
sbb
pusha
shl
mov
shl
out
rcl
outs
cmp
jnp
jmp
mov
and
movs
and
inc
jno
imul
cmps
mov
sub
mov
test
popa
cmp
pop
xor
sub
dec
inc
jp
xchg
and
sbb
sar
jmp
movs
mov
mov
jno
add
jb
(bad)
inc
and
sub
adc
cmp
enter
and
dec
add
(bad)
xor
inc
pop
repz
out
push
ss
push
mov
push
adc
push
xchg
lea
ja
xor
test
jle
jge
neg
rcr
mov
add
mov
inc
and
hlt
fdivr
imul
cmp
push
adc
clc
aaa
mov
lea
rcr
aas
aam
mov
adc
ret
das
inc
loop
add
push
adc
out
adc
jno
rol
jle
pop
cli
test
jle
and
mov
cmp
mov
push
fild
mov
xchg
loopne
retf
cmp
in
bound
add
mov
into
mov
or
adc
inc
addr16
dec
pop
ror
mov
in
add
repz
repnz
add
sbb
lods
(bad)
sbb
mov
fld
movs
inc
mov
push
in
dec
mov
xor
sub
adc
addr16
sub
pusha
in
js
daa
inc
lock
jmp
add
mov
(bad)
jmp
and
mov
or
add
(bad)
fld1
test
xchg
and
xor
(bad)
outs
fs
movs
or
and
(bad)
mov
ret
(bad)
mov
adc
inc
dec
imul
int3
adc
test
test
movs
inc
les
pop
push
add
jno
dec
mov
xrelease
cli
in
sbb
dec
add
clc
sbb
or
stos
jmp
dec
pop
xor
cli
add
sub
dec
pop
dec
xchg
sbb
mov
jns
mov
xor
sub
std
push
call
movs
lea
sub
leave
inc
jp
xchg
jo
int3
rcl
or
test
fisubr
sub
add
div
mov
mov
std
idiv
inc
aad
push
push
jo
and
lea
jl
fs
inc
fld
fcmovnb
sti
daa
sti
mov
out
sbb
add
or
cmp
mov
or
jo
cmp
or
adc
iret
add
inc
cmp
js
ds
push
or
cmp
and
mov
xor
mov
sub
or
pop
nop
mov
pusha
shr
mov
cs
add
cmp
nop
inc
addr16
mov
ret
loopne
sbb
movs
jae
popa
xor
pusha
and
cs
inc
or
sbb
arpl
les
fadd
fstp
idiv
fild
inc
add
sbb
imul
sbb
or
or
adc
or
adc
call
clc
adc
outs
rcr
fs
ss
dec
jp
and
sub
mov
in
cdq
and
sbb
fs
adc
sub
fisttp
sub
or
xor
sbb
or
lods
jns
adc
adc
fisub
int
rcr
push
sbb
fdecstp
xchg
neg
xchg
fadd
add
icebp
imul
mov
and
jmp
mov
sti
cmp
push
inc
in
xor
fs
cs
jg
adc
and
sub
add
pusha
cmp
cmp
ret
push
sub
outs
pop
dec
or
adc
sahf
fstp
sbb
es
in
pop
add
xor
out
adc
sbb
mov
sbb
push
xchg
sbb
call
call
and
call
dec
mov
out
xor
ds
or
mov
push
adc
(bad)
dec
aas
adc
mov
dec
or
dec
pop
push
rol
push
push
js
cs
or
xor
push
adc
mov
sbb
and
(bad)
mov
movs
cmp
dec
and
add
pusha
js
add
dec
pop
mov
sub
pop
push
adc
shl
outs
popf
les
pop
sbb
push
add
pop
ja
test
dec
push
ja
lods
xor
sub
ss
push
or
sub
call
cmp
xchg
push
adc
mov
iret
(bad)
fisttp
adc
adc
mov
xor
(bad)
(bad)
in
adc
cmp
pusha
and
xor
or
add
mov
push
lea
push
add
loope
cmc
fprem1
mov
inc
jg
jle
add
retf
jle
inc
inc
pushf
or
lds
data16
and
dec
pop
adc
mov
out
aam
mov
inc
inc
cmp
mov
add
icebp
add
inc
cmp
movs
xchg
adc
outs
add
xor
ficom
(bad)
mov
mov
ret
lahf
add
mul
push
and
lea
push
fisttp
in
add
or
fcom
fldcw
and
(bad)
sub
or
inc
sub
adc
inc
rol
add
add
pop
popa
mov
cmp
push
cmp
out
sbb
jmp
sti
stos
mov
push
jmp
xor
sub
pop
jae
cmp
mov
pop
jno
je
outs
or
test
or
sbb
push
add
test
or
inc
jmp
pop
jne
pop
in
ins
or
xchg
mov
ins
out
jmp
imul
fwait
cmp
lock
xchg
or
lods
imul
pusha
dec
ret
add
les
inc
dec
push
imul
jle
iret
(bad)
lock
xchg
add
adc
cmp
scas
in
lds
ret
add
cmp
add
pop
xchg
dec
add
sub
pop
cmp
inc
sub
add
pop
pop
push
inc
bound
push
lods
jecxz
scas
imul
aaa
or
add
shr
or
xlat
ret
add
into
fimul
inc
jmp
(bad)
out
jne
and
push
inc
mov
arpl
dec
mov
inc
inc
movs
push
fnstenv
pusha
push
(bad)
imul
adc
ins
xchg
xchg
retf
add
lea
std
sub
cmp
stos
gs
dec
dec
xchg
sub
xchg
push
test
je
das
in
mov
mov
sbb
sbb
adc
cs
jo
and
push
jge
cmp
or
arpl
inc
loope
xchg
inc
and
popa
add
stc
mov
sub
mov
xor
aam
aas
adc
and
jp
push
imul
inc
inc
cs
sub
imul
mul
or
ffreep
popf
and
ins
sub
add
fstp
mov
sti
inc
or
xor
ss
fbld
add
push
dec
dec
add
das
cmp
or
std
sbb
inc
xchg
inc
add
or
adc
retf
cld
mov
jl
cmp
cmp
pop
pop
and
xchg
ds
(bad)
call
mov
dec
inc
cmp
xlat
int3
rol
push
cmp
and
lea
add
and
sub
daa
pop
pop
pmovmskb
xor
popa
cs
pop
sub
or
push
mov
mov
xchg
adc
popa
imul
mov
aaa
mov
ret
ror
ror
cmps
enter
cmc
(bad)
xor
and
ret
lea
mov
jno
outs
fisttp
xchg
or
push
sti
add
out
push
sub
or
sub
into
dec
popa
outs
xor
xor
jl
js
ret
test
jle
or
xchg
xor
cmp
jl
ret
je
mov
ror
dec
sbb
idiv
xor
gs
shr
and
jmp
xor
shr
sbb
push
mov
mov
lahf
cmp
xchg
rcl
test
sub
cli
push
dec
les
mov
test
rcr
or
(bad)
sar
cmp
into
pop
rcl
and
dec
dec
(bad)
sti
pop
mov
(bad)
inc
inc
add
add
dec
das
cmp
ja
dec
dec
ficomp
ds
ja
rol
sbb
dec
dec
cmp
xor
cmp
push
adc
inc
call
push
fiadd
pop
fist
inc
call
xor
sbb
mov
inc
inc
jl
ja
add
inc
movs
pop
les
push
fadd
mov
add
xchg
sub
ret
adc
imul
call
add
push
xchg
inc
mov
mov
mov
enter
and
stos
pusha
test
enter
push
xor
jns
mov
sbb
push
mov
(bad)
sub
movs
or
mov
or
or
shr
shr
lahf
or
cs
add
push
aam
adc
ret
xchg
add
stos
add
mov
(bad)
cmps
(bad)
inc
pop
mov
test
mov
add
pushf
add
inc
adc
jnp
or
sbb
mov
sbb
das
sbb
loopne
dec
fs
mov
or
jno
aad
pop
mov
inc
inc
ins
and
fld
outs
enter
sub
pusha
inc
add
inc
adc
jbe
mov
adc
nop
rcl
xlat
cmp
fs
xlat
and
(bad)
and
fiadd
adc
retf
test
repz
cwde
push
(bad)
xchg
adc
sahf
jns
mov
or
aam
aas
xchg
adc
adc
mov
(bad)
lock
data16
inc
mov
pop
mov
js
dec
enter
ins
les
adc
push
push
(bad)
leave
aam
mov
dec
dec
sub
icebp
and
(bad)
and
xchg
enter
sbb
xor
daa
mov
mov
push
push
pop
nop
inc
push
sbb
or
inc
push
sbb
or
push
(bad)
(bad)
icebp
xor
and
and
and
cli
or
sti
cld
std
dec
enter
loope
enter
jecxz
enter
in
out
or
jmp
enter
out
or
enter
shl
enter
rcl
enter
aad
xlat
and
fiadd
(bad)
fimul
enter
shl
and
and
and
retf
xor
retf
int3
int
or
enter
mov
and
xor
pop
jb
les
sbb
pop
daa
test
adc
cmovp
add
add
xlat
sub
pop
xchg
add
or
inc
fisubr
lahf
push
sbb
push
xor
(bad)
pop
sub
dec
outs
mov
or
(bad)
adc
sbb
repnz
mov
or
test
mov
cmp
mov
test
ficomp
jmp
mov
les
inc
sbb
pop
outs
add
arpl
loop
xchg
sbb
xor
(bad)
or
cmp
xor
sub
clc
jp
(bad)
pop
lods
je
movs
mov
loop
iret
add
loopne
adc
shl
dec
add
and
lods
add
dec
and
adc
call
loop
or
aaa
cmp
sub
fdiv
mov
push
into
fisttp
and
mov
jns
retf
dec
bound
pop
mov
imul
aam
aam
cmp
inc
dec
push
jo
mov
adc
add
pusha
ins
bound
xor
ret
cmps
or
xor
xor
xchg
pop
cmp
xchg
or
aas
inc
fmul
rol
and
sub
add
dec
pop
adc
adc
and
inc
cld
dec
and
mov
mov
pop
mov
dec
xor
pop
mov
mov
outs
mov
imul
pop
outs
outs
dec
and
sbb
into
or
inc
push
pop
fsubr
pop
sub
mov
inc
les
cmp
and
push
sbb
jno
xor
xchg
xchg
mov
call
lds
push
test
cmps
call
mov
mov
adc
or
adc
fsubr
jns
dec
xchg
or
adc
test
int3
xor
jae
in
aam
push
repnz
mov
pop
mov
push
add
jmp
push
fs
cmp
xor
in
dec
sub
arpl
cmps
call
mov
fwait
jmp
lock
test
and
scas
in
(bad)
(bad)
clc
rol
jo
sar
hlt
popf
cvttpd2pi
or
pop
mov
fs
fnsave
and
(bad)
xchg
sbb
push
frstor
and
lds
js
add
popa
sbb
loope
sbb
add
rcl
adc
neg
push
out
jge
push
jne
add
dec
popf
es
xchg
outs
push
jne
push
pop
dec
sti
and
das
push
add
leave
dec
dec
popa
inc
bound
in
das
inc
jo
jns
mov
fimul
pop
push
ins
pop
jne
xlat
xchg
das
cmp
gs
dec
arpl
jbe
dec
push
js
arpl
das
xchg
pushf
xchg
jge
xor
xchg
adc
add
fs
mov
mov
xchg
cmp
popa
push
icebp
jp
mov
jmp
nop
pop
in
outs
cli
outs
fst
sub
mov
inc
pop
xchg
(bad)
imul
(bad)
and
dec
inc
inc
movs
sub
jo
jno
mov
ds
ss
cwde
das
cmp
fcomp
rol
inc
dec
mov
or
test
movd
xchg
cmps
lock
call
or
jmp
and
push
(bad)
movs
cs
xchg
push
neg
pop
xchg
jbe
cmp
adc
ds
add
xor
inc
mov
and
fwait
fs
push
mov
mov
push
daa
and
or
leave
mov
pusha
movs
mov
or
xor
pop
cwde
fsub
cmp
lea
movs
call
dec
pop
pop
popa
adc
sbb
xor
pop
test
sbb
xchg
sub
push
and
jb
mov
cmp
jb
pop
adc
lea
dec
mov
push
mov
xchg
movs
cmp
xchg
push
arpl
add
jmp
out
js
mov
dec
push
jns
mov
adc
jne
jecxz
inc
jmp
mov
adc
dec
repnz
xchg
jne
mov
push
out
das
inc
scas
mov
push
add
xchg
icebp
sbb
aad
or
dec
loop
nop
xlat
adc
popa
xchg
ret
push
ficom
inc
add
push
push
mov
add
inc
mov
mov
add
adc
aam
rol
cmps
mov
(bad)
jmp
or
dec
xor
or
and
les
add
inc
mov
jne
fsubr
jecxz
add
ret
mov
cld
push
mov
nop
jns
xchg
pmulhuw
mov
or
shl
int3
lock
pop
inc
push
add
add
inc
pop
jb
pusha
push
add
pop
push
push
dec
dec
dec
push
inc
pushf
in
daa
inc
inc
dec
push
push
dec
pmulhuw
int3
adc
xchg
int3
ss
or
paddq
pusha
fdivr
xchg
das
in
leave
xchg
daa
dec
lock
cld
xchg
or
adc
and
cs
mov
daa
mov
ds
inc
inc
inc
inc
dec
inc
push
xchg
imul
pop
cmps
dec
dec
dec
pop
ficom
dec
cmps
push
inc
and
cmp
inc
push
inc
push
dec
push
cmps
or
inc
inc
(bad)
jge
sbb
jno
mov
mov
adc
arpl
cwde
pop
leave
test
mov
sbb
push
in
jecxz
cwde
mov
jbe
test
fcomp
xor
test
cmp
or
add
or
xchg
scas
ja
fcmovnu
scas
jp
cmovno
add
(bad)
call
test
jo
enter
add
push
and
cs
jne
frstor
push
stos
retf
test
mov
adc
mov
sbb
data16
dec
mov
jo
push
cdq
test
fst
add
or
ja
pop
mov
xchg
sub
imul
fcomp
sbb
sti
out
fabs
(bad)
js
or
fsub
push
and
in
das
mov
cdq
call
pusha
and
inc
imul
jo
pop
shr
aaa
xchg
mov
and
out
stos
sbb
and
pushf
or
cdq
rcl
(bad)
ficom
fs
int3
xchg
mov
mov
ins
mov
or
sbb
in
mov
out
sbb
stc
mov
push
jb
call
fdiv
je
xor
cwde
push
add
pushf
xchg
dec
adc
inc
or
inc
xor
inc
stc
inc
or
add
and
sub
les
xchg
test
je
mov
sbb
lods
rol
inc
pop
in
fadd
popf
add
or
push
mov
add
jecxz
rcr
adc
sbb
xchg
loope
fcomip
or
pop
xor
xor
add
stos
xor
cmp
cmp
pusha
push
cmp
pop
das
xchg
pop
out
mov
fcmovnb
cmp
fidivr
and
jne
push
adc
sti
in
ret
and
or
cld
pop
(bad)
jne
cmp
jne
push
jmp
xor
ja
and
mov
cdq
test
mov
push
add
dec
pop
add
sub
and
mov
lods
push
sub
retf
sub
je
leave
mov
or
loopne
xor
adc
cmps
cwde
sti
jo
stos
or
or
xor
inc
ins
cwde
jb
pop
dec
sub
mov
js
ret
call
int3
and
mov
adc
mov
es
test
adc
test
jecxz
and
adc
daa
call
cmc
mov
adc
add
add
inc
cmp
push
inc
xchg
mov
adc
(bad)
sbb
sahf
inc
push
dec
sub
retf
les
nop
ret
ret
xchg
or
cwde
ret
jle
pop
out
add
cs
xor
daa
hlt
shl
xor
hlt
or
repz
and
rcr
and
sbb
adc
js
xchg
rcr
add
cmps
adc
or
pop
adc
pop
sub
fiadd
adc
hlt
cdq
in
pusha
jg
xchg
rol
push
repnz
lahf
int3
enter
mov
jo
inc
add
push
or
cmps
mov
add
jl
and
inc
ret
mov
rcr
mov
or
inc
in
mov
rol
push
mov
mov
or
repnz
xor
adc
add
adc
and
and
adc
or
rcl
iret
cmp
adc
inc
add
add
mov
lds
mov
push
mov
ss
test
jg
push
retf
jmp
xor
iret
adc
xchg
lods
xlat
sub
add
push
xchg
adc
js
je
addr16
in
push
mov
and
shr
imul
or
call
mov
add
mov
xlat
add
sub
dec
fidivr
aad
sub
jne
fwait
in
cmc
lock
shl
sub
push
push
dec
sub
in
xor
add
sub
loopne
(bad)
cmp
fsub
pop
push
pop
jp
sqrtps
mov
fmul
or
sub
(bad)
jns
call
xchg
jl
fdivr
and
xchg
stos
cmps
test
cmps
inc
xchg
pushf
and
icebp
lods
es
pop
test
mov
test
adc
(bad)
mov
xchg
jl
nop
scas
div
xlat
and
sbb
cmp
jae
(bad)
sub
es
jo
mov
push
lea
into
aas
add
hlt
adc
add
cdq
or
cwde
sbb
lods
or
or
jmp
xchg
movs
cmps
cmp
xchg
in
inc
test
and
push
pop
bound
mov
fbld
pusha
mov
adc
xchg
les
mov
mov
pop
xor
push
xor
aas
movs
movs
movs
jl
in
lods
movs
movs
add
pusha
add
xchg
aas
aas
nop
pusha
adc
sbb
sbb
cwde
add
add
adc
and
sti
leave
ror
(bad)
cli
mov
jnp
sbb
push
int
mov
cwde
push
imul
push
in
nop
pop
jo
je
sahf
add
js
in
nop
out
add
cwde
mov
nop
test
add
in
cwde
rcl
pushf
aam
push
in
mov
inc
sahf
add
cmp
mov
iret
cmp
enter
shr
cmp
sbb
jae
int3
push
loopne
cmp
repnz
fdiv
and
fadd
sbb
mov
nop
out
and
sbb
jns
in
adc
enter
adc
lods
or
cmp
repnz
cmp
jns
iret
sbb
push
movs
jl
xchg
xchg
jecxz
sahf
lock
in
mov
push
add
(bad)
hlt
fdiv
iret
and
sbb
hlt
sub
cmp
jnp
xor
xor
test
test
sub
sub
mov
mov
inc
retf
or
fcom
arpl
add
sub
sbb
fidiv
adc
gs
cmp
outs
jle
js
outs
ja
fwait
(bad)
popf
cmp
mov
ficomp
pop
outs
xor
(bad)
mov
push
popa
je
mov
inc
push
daa
xor
jbe
jbe
imul
imul
jbe
pcmpgtd
push
jae
push
mov
push
pop
push
pop
jae
jne
pop
test
jmp
aas
lds
add
inc
jle
jns
push
imul
pop
sbb
xor
pop
jne
loopne
add
rcl
pop
sti
fstp
push
push
inc
inc
jae
add
pop
push
push
mov
in
or
aaa
inc
daa
dec
mov
jb
jns
das
mov
mov
and
xchg
xor
aaa
push
adc
push
ins
icebp
and
das
cmp
jne
pop
sar
dec
adc
pop
sub
mov
int3
sahf
daa
push
outs
push
dec
ins
popa
adc
jg
(bad)
lea
pop
(bad)
outs
sbb
add
jae
pop
ja
lock
push
pop
pop
sbb
push
stos
test
pop
ins
imul
inc
xchg
add
les
adc
mov
pop
or
ret
cmp
xor
cmp
ret
iret
lea
and
enter
lods
int3
dec
loop
xchg
lods
and
push
nop
push
test
fadd
inc
push
push
inc
out
ret
cmc
inc
nop
mov
dec
sbb
iret
or
iret
xor
mov
fwait
dec
in
dec
into
mov
mov
fistp
loopne
pop
jo
fsubr
cmp
mov
xchg
mov
xchg
push
inc
in
mov
int3
lods
jns
and
add
push
dec
mov
les
ds
(bad)
xor
cmp
mov
mov
mov
into
cmp
mov
and
adc
and
adc
push
adc
push
jmp
mov
pop
or
or
inc
and
xchg
mov
sar
in
jo
push
icebp
js
rcl
pop
lea
mov
xchg
ds
iret
call
shl
shr
push
cld
cvtps2pi
add
pop
mov
pop
int
or
mov
test
adc
xchg
mov
int3
adc
mov
add
shr
fdiv
cmp
leave
and
and
hlt
hlt
jp
and
pop
ret
add
cwde
and
xchg
pop
rcl
push
shld
pop
mov
leave
shr
out
push
sub
icebp
push
mov
or
and
jbe
mov
pop
dec
inc
ja
adc
(bad)
xchg
data16
adc
inc
(bad)
call
jae
ret
jbe
adc
jmp
mov
popa
sub
test
push
ss
push
outs
daa
pusha
inc
nop
adc
call
push
lods
pop
out
mov
xor
hlt
repnz
cld
inc
daa
xor
scas
shl
sahf
jae
add
clc
adc
dec
es
aam
add
sub
push
add
or
outs
add
sbb
pop
lea
fiadd
xchg
shr
test
add
sub
(bad)
lock
test
lds
cld
adc
push
xchg
add
add
pop
cmps
adc
(bad)
mov
nop
push
pop
and
js
xor
nop
inc
not
ret
xlat
sub
pop
sbb
inc
fst
iret
shl
and
push
jecxz
cmc
out
inc
inc
push
sbb
inc
add
mov
adc
jne
sub
cdq
leave
sbb
ret
sub
inc
jge
xchg
and
mov
icebp
inc
jo
rcl
fbstp
shr
and
rol
mov
and
dec
push
test
adc
add
jo
shr
pop
xor
imul
push
dec
xchg
and
push
daa
call
and
pop
pop
ret
sbb
adc
add
lock
jno
mov
push
or
sbb
pusha
xor
push
sbb
jmp
in
es
cmp
push
mov
and
fist
shr
lods
pop
test
lahf
fsubr
scas
jnp
and
add
pop
imul
mov
(bad)
xor
mov
xor
or
mov
loopne
mov
and
lock
inc
pop
outs
add
inc
cmp
adc
dec
pop
add
scas
psubusb
push
leave
mov
dec
adc
bound
cmp
or
ins
aaa
add
inc
mov
xor
scas
scas
test
push
inc
dec
adc
imul
xor
xchg
movs
push
mov
stos
mov
out
mov
test
fidiv
in
pop
pop
inc
shr
inc
inc
daa
ins
(bad)
pop
test
je
xchg
cwde
and
pop
mov
mov
pop
ret
push
popf
nop
fld
in
xchg
mov
sub
dec
adc
ja
retf
movs
popa
test
rol
inc
int3
sysret
sub
add
jle
stos
dec
adc
enter
dec
test
and
scas
clc
(bad)
pop
lock
fbstp
xchg
(bad)
frstor
inc
xor
test
jmp
inc
adc
imul
std
cld
ficomp
aas
xor
jl
inc
inc
dec
pop
adc
adc
mov
push
dec
adc
sub
stc
das
push
or
loope
lds
mov
cmp
cmp
cmp
in
add
fist
mov
sub
(bad)
sbb
mov
jno
ror
or
add
fsub
imul
xchg
mov
ficomp
(bad)
adc
(bad)
inc
cmovae
or
mov
lea
adc
lea
sahf
inc
sbb
push
sbb
hlt
add
lea
adc
add
inc
loop
mov
xor
test
jmp
push
shr
dec
sub
(bad)
fcomp
lds
inc
mov
pop
je
daa
pop
jb
sbb
popa
adc
les
xor
cmp
pop
lock
in
js
xchg
popf
repz
xlat
and
mov
cmp
sahf
pop
leave
hlt
hlt
inc
add
lock
add
(bad)
or
jb
add
xchg
mov
xor
push
test
mov
ret
xchg
cmp
add
cmps
mov
and
or
jo
dec
mov
add
icebp
xchg
scas
pop
jb
adc
call
fcom
or
dec
call
in
mov
jb
mov
jb
es
mov
cmp
jae
mov
mov
jo
push
nop
hlt
mov
scas
clc
mov
sbb
sub
inc
jg
repz
sub
cmp
jo
adc
xchg
and
add
(bad)
dec
inc
sub
push
fild
pop
pop
test
push
sub
mov
sub
or
push
mov
aas
inc
inc
cmps
pusha
(bad)
or
outs
les
or
jb
sbb
sbb
dec
jnp
frstor
rcl
addr16
ja
dec
popa
add
gs
add
jmp
inc
dec
cmps
ins
scas
repnz
and
inc
jne
pop
mov
(bad)
cmps
adc
cmp
mov
ss
jne
and
(bad)
sahf
dec
ja
mov
(bad)
sti
shl
cli
inc
pop
and
xchg
call
xchg
enter
lock
icebp
cld
inc
test
(bad)
fwait
or
shr
inc
or
ret
push
mov
dec
mov
fisubr
mov
(bad)
or
test
sub
sbb
mov
test
scas
lahf
sbb
cmp
lock
enter
outs
je
push
xor
inc
nop
xchg
das
fist
mov
xor
sbb
jnp
iret
xor
add
aaa
dec
dec
inc
test
xlat
inc
dec
dec
push
push
add
xor
aaa
xor
xor
add
ret
pop
call
sbb
mov
mov
in
fdiv
enter
ds
inc
mov
pop
mov
jmp
jae
pop
outs
jg
pop
or
mov
rcr
ret
push
aam
test
imul
imul
imul
imul
cmps
imul
ds
xor
dec
push
leave
not
mov
and
inc
inc
inc
sbb
inc
jb
inc
mov
sbb
retf
rol
mov
xchg
inc
fisub
test
in
sbb
inc
mov
mov
and
and
ficomp
in
xor
clc
or
and
test
add
arpl
xor
test
inc
fild
and
push
jmp
push
pushf
inc
(bad)
mov
and
and
lock
cmps
frstor
mov
inc
or
mov
push
imul
or
add
icebp
mov
add
in
mov
iret
mov
(bad)
shr
or
mov
inc
jle
ret
xor
cmp
bound
(bad)
dec
pop
xor
or
adc
hlt
and
lock
add
xor
xlat
adc
fcomp
sbb
add
nop
lock
(bad)
mov
(bad)
mov
pusha
adc
ss
out
pushf
xchg
add
int3
add
and
(bad)
xchg
push
add
test
fs
(bad)
mov
shl
in
enter
cmp
jl
sbb
mov
test
dec
movs
leave
(bad)
xchg
push
push
xor
add
rol
sub
pop
in
pusha
and
aaa
push
pop
xor
and
cmp
push
add
or
and
nop
cmp
xor
push
push
add
push
mov
in
ja
dec
cdq
push
jb
add
xor
sar
cmp
or
ins
and
fild
dec
jne
lods
cmp
mov
pop
jno
or
push
outs
pop
nop
mov
add
shl
daa
aas
sbb
out
ins
sbb
add
div
retf
lods
and
clc
sub
rol
push
sub
lock
repnz
leave
push
mov
dec
retf
xor
xor
sub
ret
and
dec
adc
leave
cmp
or
or
jno
mov
inc
push
push
mov
gs
mov
mov
and
jne
outs
fdiv
xor
and
pop
repnz
mov
clc
retf
retf
or
xor
je
rol
inc
mov
popa
js
in
es
inc
add
inc
or
sub
adc
dec
or
ret
pop
std
and
js
and
shl
gs
fmul
inc
inc
jge
imul
dec
and
dec
popa
div
cmps
or
or
dec
xlat
in
jbe
adc
or
or
mov
mov
pop
mov
mov
sbb
xor
mov
cwde
or
fadd
and
push
pop
sub
jmp
sub
sbb
int
test
dec
lods
popf
push
add
sub
dec
and
push
mov
test
jl
mov
jmp
sub
dec
inc
sub
or
fdiv
or
add
push
add
xor
and
pushf
and
jle
mov
push
sbb
add
mov
add
mov
in
fldenv
into
daa
mov
mov
lea
inc
cmp
jg
cmp
in
xchg
je
push
and
pop
xchg
mov
or
xor
addr16
add
daa
aaa
dec
mov
cmp
arpl
jmp
and
push
repz
add
mov
add
jmp
xchg
or
or
xchg
dec
mov
or
aam
pusha
pop
mov
sub
and
fstp
inc
pop
data16
sar
inc
push
outs
sbb
cdq
in
mov
inc
push
pop
and
xchg
mov
es
es
movs
adc
push
rol
push
shr
jmp
cmps
(bad)
dec
sbb
aad
adc
or
movs
push
xchg
rcr
dec
and
inc
adc
adc
inc
addr16
sub
jo
inc
pop
push
xor
mov
push
ficom
and
push
cmp
fadd
mov
add
sub
inc
xor
mov
rol
xchg
ins
aam
cmps
push
sub
jmp
inc
imul
aas
adc
and
lods
and
push
cmc
mov
enter
iret
inc
and
ror
in
(bad)
xor
pop
adc
or
fnsave
sbb
mov
xchg
push
inc
sbb
retf
jecxz
into
xor
or
or
inc
cmps
pop
(bad)
dec
loop
inc
cdq
addr16
add
and
push
ret
int
or
jne
rcl
jg
leave
adc
push
xchg
dec
mov
rcr
into
push
inc
fsubr
pop
aam
ret
(bad)
int
jnp
or
dec
or
dec
xor
aaa
inc
xchg
pop
rcr
push
shr
test
js
pavgb
inc
daa
dec
or
fsub
xor
xor
jb
int3
rcr
xchg
call
xor
dec
cmp
jnp
add
sub
movs
jmp
adc
xchg
xchg
dec
and
test
xchg
mov
inc
sbb
xor
or
mov
cmp
push
push
js
add
mov
adc
fnstsw
jne
and
pop
or
jmp
or
out
lahf
sub
lea
mov
cmp
or
dec
jo
sub
in
aam
pop
sub
xchg
daa
sub
dec
inc
sub
push
dec
sete
mov
ret
aam
mov
sub
hlt
xchg
push
xchg
lock
adc
test
imul
dec
rcl
or
movs
sub
jmp
lea
xor
sbb
mov
arpl
sbb
data16
adc
(bad)
je
push
inc
sbb
movs
pop
or
pop
mov
shl
and
neg
and
jecxz
daa
add
and
or
shl
mov
add
pop
lods
inc
inc
mov
dec
ror
xor
aaa
push
xor
ins
and
pop
ret
pop
dec
lods
bound
xchg
les
mov
bound
mov
sub
mov
cmp
shl
cld
add
test
sbb
push
or
adc
jb
scas
nop
xlat
jno
les
in
js
(bad)
rcl
cs
sbb
pop
sbb
sbb
sbb
outs
jo
xlat
and
sbb
dec
mov
outs
ds
inc
xor
(bad)
in
inc
xor
aaa
(bad)
clc
push
pop
inc
add
in
pop
(bad)
aad
enter
paddusb
enter
or
loope
or
imul
movs
in
mov
or
dec
outs
cmp
into
outs
or
sysenter
or
inc
and
xor
cmp
sahf
adc
rcl
std
and
pop
(bad)
jae
lods
and
mov
aas
and
jae
arpl
movs
inc
test
mov
push
fisub
fs
pop
or
sbb
xor
fld
add
fadd
cdq
pusha
dec
pusha
mov
push
out
pop
and
adc
nop
cmps
or
xchg
in
dec
ds
in
or
inc
or
sbb
mov
movs
inc
mov
sbb
loope
inc
xor
push
(bad)
dec
inc
or
cmp
dec
sub
fstp
adc
cmp
or
and
inc
cmp
adc
or
in
mov
mov
sbb
or
and
dec
adc
jp
xor
fistp
add
fadd
cmp
inc
pop
ds
lods
mov
dec
dec
dec
sbb
mov
bound
mov
pop
fstp
and
movs
out
test
xor
inc
enter
jecxz
out
dec
pushf
jns
fwait
nop
loop
jle
pop
inc
loope
call
lock
inc
mul
repnz
(bad)
dec
les
loopne
paddsb
in
cld
out
pop
mov
ja
jmp
ins
xchg
outs
push
out
pop
nop
repnz
test
mov
pusha
xlat
adc
call
pop
xor
int3
int3
pop
add
clts
cmps
movs
sub
push
(bad)
fldcw
(bad)
xor
mov
push
pop
or
xchg
add
mov
test
adc
test
pusha
popf
ret
add
fnstenv
pop
push
mov
gs
call
es
pop
ret
push
or
cmp
inc
inc
mov
or
lods
dec
dec
mov
test
xor
(bad)
mov
dec
in
adc
or
hlt
mov
not
nop
push
push
lds
push
push
push
frstor
aas
inc
or
jns
mov
test
and
ficomp
lock
inc
push
in
mov
xchg
or
adc
iret
aas
pcmpgtd
in
outs
js
sub
jne
push
xor
iret
push
data16
pusha
hlt
push
ss
jae
mov
xchg
int3
(bad)
int3
pop
into
or
loope
sbb
(bad)
aas
pop
in
mov
xchg
(bad)
xchg
popa
fadd
inc
inc
fldenv
adc
ret
add
mov
movs
imul
and
push
dec
rol
push
xor
xor
sbb
ins
jbe
js
xchg
and
loope
and
add
xchg
adc
xor
lea
pusha
inc
ins
mov
cmp
adc
fwait
es
jmp
rcl
cmp
mov
clc
jns
sbb
clc
aas
jl
dec
adc
adc
jmp
mov
adc
adc
sbb
loopne
adc
or
jl
push
or
or
jg
js
iret
dec
xlat
fild
sbb
jnp
xor
test
or
xchg
dec
and
jecxz
je
adc
push
pop
shl
mov
mov
xor
les
push
mov
pusha
fbstp
aaa
push
adc
pop
(bad)
mul
inc
adc
push
les
mov
fwait
std
jo
pop
sub
jae
mov
mov
dec
sbb
pusha
iret
ja
sbb
and
daa
lock
(bad)
daa
and
inc
mov
cmp
(bad)
push
ret
add
sub
lods
jle
xchg
push
push
xchg
or
jnp
mov
fsub
ror
popa
cmp
fild
push
popf
das
dec
dec
inc
aad
out
inc
dec
sbb
sbb
mov
pushf
dec
lods
sub
pop
jle
add
sub
int3
sbb
js
fimul
sbb
out
mov
add
add
and
(bad)
lock
sbb
push
ret
mov
pop
xchg
call
mov
rcr
ja
out
sahf
gs
popa
or
cwde
jmp
les
out
in
loopne
ja
retf
add
in
pushf
add
fmul
add
fsubr
xor
cmp
mov
push
cs
adc
push
inc
fisubr
or
or
cmp
mov
dec
scas
sub
adc
adc
xchg
out
sbb
and
loop
cmc
xor
out
cmp
push
pop
test
ins
push
mov
mov
and
adc
push
out
mov
jno
inc
fwait
(bad)
jle
aaa
jmp
jae
shl
pop
jo
mov
jecxz
and
shl
xchg
dec
fwait
dec
adc
jmp
mov
ror
mov
inc
fucomp
adc
xchg
ret
add
cmp
or
dec
inc
arpl
test
push
mov
pop
dec
je
jl
inc
inc
cmp
inc
jns
mov
jo
cmp
sbb
sub
into
adc
and
mov
jmp
adc
and
jg
call
lock
jo
daa
xor
ret
xor
xor
aaa
jne
outs
mov
mov
mov
or
test
sub
add
inc
mov
and
push
pop
mov
adc
cmps
ficomp
lock
adc
adc
clc
jo
sub
les
or
pusha
cmp
xor
and
pop
and
mov
and
lahf
movs
hlt
nop
sub
pop
add
pop
clc
dec
or
adc
push
add
add
xchg
fadd
inc
cwde
add
dec
and
xchg
push
es
or
mov
xor
retf
jae
and
pop
xchg
mov
mov
xchg
lock
cdq
cmp
movs
jmp
xchg
inc
push
jno
out
cmp
add
nop
xchg
(bad)
popf
dec
push
dec
mov
loopne
push
ror
add
xchg
addr16
add
xor
sbb
adc
(bad)
fwait
sub
jmp
adc
das
pusha
add
or
dec
mov
sub
(bad)
sbb
in
xor
lock
je
pop
xchg
shr
xor
pop
sub
sbb
pop
adc
adc
mov
test
lahf
lock
adc
cmp
sbb
clc
add
jle
mov
int
pop
cmp
and
cwde
adc
bound
imul
sub
rcl
es
adc
jg
arpl
jns
ret
dec
imul
lods
and
dec
xchg
adc
mov
inc
mov
popa
test
xor
dec
or
push
(bad)
prefetch
pushf
xchg
cmp
add
add
lock
cmp
rcl
xor
inc
or
adc
pop
xor
les
pusha
popa
pop
aam
cmc
and
cmp
xchg
inc
sbb
and
(bad)
mov
and
in
jecxz
lea
adc
mov
adc
dec
or
sbb
mov
(bad)
jo
push
sub
xor
add
test
inc
ins
mul
sub
cmp
mov
je
mov
inc
call
inc
sub
push
pusha
lods
push
pop
arpl
or
stos
mov
pop
(bad)
es
(bad)
out
or
fisubr
pop
mov
xchg
jo
clc
scas
or
or
pop
popf
sub
fnstcw
shl
dec
fwait
sar
sub
dec
xchg
out
js
leave
mov
movs
and
js
adc
cdq
mov
loopne
nop
dec
sbb
inc
xor
pop
popa
mov
aaa
add
out
outs
mov
test
sbb
cmp
rcr
add
or
add
mov
jle
mov
hlt
inc
loopne
adc
cs
xchg
sub
jp
test
(bad)
add
inc
and
js
retf
pop
clc
lods
push
test
mov
test
inc
mov
pop
pop
fisubr
xchg
adc
sbb
push
push
adc
xchg
or
fucomip
pushf
or
add
fistp
pop
cmp
gs
ret
dec
inc
or
test
in
sbb
test
mov
sbb
ins
mov
inc
mov
sbb
and
dec
sbb
dec
inc
push
mov
cmp
dec
push
sbb
cwde
movs
push
ins
push
or
adc
push
mov
or
movs
dec
dec
shl
test
sti
dec
repnz
or
sbb
push
imul
imul
dec
sbb
inc
pushf
push
xor
call
fcomp
xor
mov
ja
mov
push
jmp
cmp
xor
les
ja
arpl
inc
out
test
popf
and
movs
arpl
jecxz
jmp
or
rcl
lock
push
xchg
je
mov
pusha
ret
loop
popf
or
and
dec
and
add
push
hlt
and
test
and
dec
sub
xchg
add
loop
test
xchg
nop
in
xor
sub
cmp
adc
sub
adc
sbb
add
xchg
xor
jns
add
in
loop
rol
add
mov
leave
mov
xor
mul
in
in
jmp
fst
hlt
inc
cmp
pop
jbe
pop
lds
(bad)
or
ror
and
push
test
leave
jp
fdiv
push
xchg
add
ja
ins
push
dec
or
mov
or
pop
add
add
mov
ret
iret
adc
cmps
sbb
add
jmp
xor
cmp
dec
fnstcw
ins
and
mov
xor
ret
inc
jbe
jmp
jle
pop
and
in
inc
lea
cmp
mov
pop
cdq
jge
cmps
push
or
inc
xchg
adc
into
cmp
daa
scas
adc
sbb
nop
add
xor
pusha
xchg
or
bound
imul
mov
ret
and
sbb
ss
adc
add
lea
and
mov
adc
cwde
rol
sbb
add
add
or
not
rol
add
nop
xor
adc
adc
mov
jae
pushw
push
or
sub
test
fld
inc
push
push
and
pop
cmp
xchg
jl
dec
not
push
idiv
jle
cmp
ret
lods
add
pop
or
sbb
push
add
les
jns
jns
push
test
cmp
ret
hlt
(bad)
in
dec
and
loopne
dec
es
add
clc
sti
nop
fadd
nop
inc
and
or
adc
or
(bad)
mov
pop
repnz
test
jg
inc
test
lods
or
fcom
mov
shl
inc
sub
fstp
inc
ror
lss
les
xchg
daa
pop
ret
push
xchg
or
lods
popa
mov
loope
mov
cwde
or
xor
or
stc
(bad)
stc
shr
mov
popf
out
adc
add
out
stc
imul
adc
sub
je
cmp
add
iret
fsub
mov
mov
add
inc
sti
iret
aas
iret
mov
push
outs
imul
push
dec
pop
test
test
push
adc
xchg
pop
ret
sbb
pop
mov
pop
sub
popa
or
rcr
bound
test
push
sbb
xchg
inc
dec
fdivp
sub
push
cmp
inc
scas
pusha
mov
iret
sbb
push
add
inc
pop
test
test
push
xor
and
mov
arpl
jb
dec
mov
sbb
push
jb
mov
jnp
add
pop
enter
and
sbb
dec
mov
pushw
and
adc
sbb
jg
pop
xchg
push
push
dec
lahf
imul
sahf
push
or
or
outs
fmul
outs
imul
and
jae
into
dec
adc
add
mov
jns
push
in
lahf
add
sbb
pop
mov
jne
inc
mov
mov
rcr
arpl
and
call
inc
mov
jle
inc
sbb
jnp
jmp
leave
jne
mov
mov
add
loopne
pushf
jne
or
paddsb
push
cdq
mov
mov
sub
xchg
cmp
adc
pusha
jmp
or
inc
sub
jle
sub
inc
in
xor
lea
xor
mov
mov
mov
xor
push
cmp
and
push
sub
rol
inc
lods
mov
int3
and
arpl
jecxz
arpl
lea
mov
pop
sbb
mov
mov
sub
jmp
ror
sbb
clc
sub
and
pop
out
popa
mov
or
mov
xor
jmp
dec
sbb
jne
shr
mov
lahf
or
or
xor
shl
mov
pushf
jecxz
xchg
inc
cmp
and
push
dec
fisttp
mov
cmp
dec
inc
repz
test
inc
adc
mov
or
cmp
push
cld
fmul
les
push
xchg
add
push
or
sub
add
adc
loope
outs
push
fadd
fdiv
cld
mov
sub
mov
dec
ins
push
xor
cmp
in
mov
lods
inc
int3
(bad)
stc
jl
mov
inc
push
nop
daa
xchg
enter
and
xchg
jl
inc
les
shl
xchg
call
sti
cmp
add
out
mov
mov
inc
xor
mov
lods
add
sbb
ret
pop
xchg
add
iret
or
mov
xchg
inc
mov
add
not
cmp
jne
jae
test
inc
mov
cmp
push
cdq
fisttp
or
outs
ret
mov
lods
or
(bad)
ja
fcmovbe
sub
sub
inc
sub
lock
outs
out
popa
inc
xor
xchg
dec
cmps
fs
cmp
push
jno
dec
into
mov
or
push
mov
mov
and
mov
push
ret
add
xor
dec
es
xor
jmp
mov
dec
in
xor
mov
imul
push
ss
inc
repnz
lea
ret
fwait
inc
xchg
fwait
jnp
mov
xchg
add
inc
repnz
ret
fidiv
add
call
or
cdq
push
call
sbb
iret
lds
daa
test
and
test
xchg
dec
inc
xchg
inc
movs
cs
nop
lock
and
std
pushf
aam
cmp
es
int3
cwde
inc
sahf
dec
repnz
cmp
xchg
mov
jl
or
jns
nop
add
nop
daa
sbb
push
mov
jb
leave
inc
dec
mov
mov
mov
pop
adc
sub
das
push
stos
aas
je
jmp
and
or
mov
pusha
imul
xchg
iret
dec
(bad)
in
mov
jge
test
add
lods
mov
adc
push
leave
or
test
push
cwde
sbb
xchg
dec
push
out
sub
jno
sub
ins
addr16
pusha
inc
dec
aad
adc
imul
adc
adc
cwde
not
or
jo
xchg
test
adc
(bad)
push
add
mov
add
lea
sar
mov
sub
dec
mov
nop
addr16
mov
and
mov
aaa
xchg
sbb
rol
out
aam
add
xor
mov
mov
cmp
ret
movs
cs
push
and
pop
push
inc
mov
add
push
add
push
test
dec
xchg
maxps
pop
int
ins
int
xor
pop
rcl
dec
int3
xchg
cwde
fsub
pop
pop
pusha
cmp
adc
sbb
stos
call
and
or
mov
(bad)
retf
sbb
add
sbb
imul
pop
and
and
mov
dec
push
push
mov
je
stos
pop
and
jbe
and
inc
(bad)
cmps
popa
mov
sub
pop
nop
out
pop
xor
sub
loopne
inc
imul
test
vmwrite
invd
pop
sub
mov
or
pop
inc
jg
ja
mov
ror
gs
xor
push
add
or
shl
cmp
push
sub
(bad)
push
or
cmp
fild
xor
mov
sub
pop
xchg
mov
xor
push
inc
es
xchg
fldpi
push
les
jg
mov
add
mov
iret
mov
push
dec
xor
or
int
sahf
out
ds
inc
dec
fs
jo
stos
imul
sbb
pusha
jge
mov
add
push
dec
inc
push
sub
jecxz
jbe
cld
inc
add
push
dec
or
add
mov
fst
or
daa
or
je
(bad)
enter
sub
mov
dec
xchg
push
add
inc
fcom
jle
dec
cld
mov
xchg
int3
and
xchg
inc
add
mov
out
adc
pusha
pop
xor
not
addr16
out
sti
add
mov
sub
loopne
sbb
push
inc
les
mov
(bad)
test
mov
sub
cmp
sub
and
inc
pop
xor
in
sbb
imul
mov
and
inc
dec
jle
sub
jmp
mov
mov
popf
pop
fwait
das
adc
test
and
jnp
mov
nop
add
cmp
and
je
in
and
int
cmc
loop
mov
js
xor
mov
(bad)
jmp
imul
mov
js
add
or
cmp
xor
xor
jle
test
adc
jnp
or
dec
ret
sub
lds
call
scas
imul
dec
add
add
ret
add
cdq
pop
adc
add
ins
push
sub
push
or
inc
xchg
dec
jmp
mov
adc
adc
dec
dec
clc
sub
sub
shr
sbb
mov
dec
adc
shr
xor
adc
fisttp
(bad)
out
mov
bound
dec
das
pop
popf
push
ins
adc
test
adc
sahf
or
(bad)
fnstenv
ficomp
inc
mov
aad
imul
add
dec
sbb
lds
add
std
add
rcl
xor
arpl
fs
fdiv
test
lds
jmp
xor
adc
inc
and
mov
lock
popa
xor
adc
imul
mov
sbb
mov
dec
ja
es
pop
pop
xchg
fwait
mov
pop
jp
ret
xor
add
sub
push
adc
mov
pop
mov
sub
mov
mov
popa
jnp
std
daa
mov
pop
add
inc
cld
sub
sbb
popa
dec
ss
dec
out
(bad)
xchg
cmp
adc
inc
push
fld
inc
push
scas
adc
dec
jp
in
xlat
adc
sub
adc
and
in
and
push
sbb
cwde
or
mov
push
outs
add
add
popf
add
inc
dec
inc
popw
js
ins
cwde
push
(bad)
and
mov
jno
xchg
test
xchg
lods
pop
push
add
inc
mov
dec
loope
sbb
sti
mov
mov
ror
lock
pop
or
(bad)
mov
mov
push
xchg
and
xchg
jo
lods
popa
xchg
das
outs
addr16
xor
je
jae
inc
retf
pop
jl
out
add
loopne
pop
mov
dec
fld
jb
in
sbb
out
sbb
mov
in
inc
and
and
call
iret
and
lock
mov
cmp
sbb
ret
add
adc
mov
das
pop
adc
pop
push
into
ins
pop
add
and
or
xchg
popa
sub
dec
xor
adc
adc
scas
push
xor
inc
or
and
popa
bound
addr16
imul
outs
outs
jo
jb
jne
ja
jns
(bad)
mov
call
and
es
sub
sub
neg
sub
cmp
xor
pop
pop
xchg
sub
mov
shr
sbb
push
add
push
call
cmp
sub
adc
mov
js
and
add
or
sub
jne
fadd
and
jle
mov
push
outs
pause
sar
or
sbb
jns
cmp
sbb
sbb
cmp
or
addr16
lods
add
sub
mov
sbb
or
lock
aam
sub
cld
push
push
sub
cmp
lock
outs
arpl
add
adc
add
cs
aam
xor
mov
lock
cmp
pusha
movs
sub
inc
gs
shl
and
xchg
(bad)
shr
in
fs
rcr
in
add
mov
enter
les
and
mov
push
je
pop
scas
and
push
add
push
pop
sub
mov
add
xor
pushf
mov
mov
aas
mov
pop
and
int3
ss
fadd
sub
repnz
and
nop
leave
and
jl
mov
nop
pop
jl
mov
leave
mov
jg
pop
add
out
inc
pop
sub
pop
enter
jo
sbb
call
push
sbb
movs
inc
jg
adc
jg
pop
sub
or
and
lods
pop
mov
jbe
ds
test
jae
adc
and
ret
pop
or
or
add
sub
lods
aad
js
je
daa
adc
push
into
mov
or
jecxz
sahf
dec
dec
inc
cmp
sti
ret
in
daa
mov
(bad)
jg
test
mov
jae
(bad)
push
add
(bad)
push
push
test
int
call
test
in
lea
ret
cmp
test
mov
inc
pop
daa
jmp
pop
mov
push
lock
sbb
mov
add
sub
cs
dec
mov
cwde
je
aad
adc
mov
push
jo
sub
adc
mov
inc
or
mul
dec
dec
mov
test
cmps
es
rcl
or
dec
rol
cmp
push
or
add
inc
sub
shr
adc
lock
adc
test
adc
pop
in
rol
add
rol
cmp
jno
adc
mov
mov
pusha
mov
shr
or
imul
and
and
mov
mov
arpl
loope
inc
push
jo
rcr
sbb
shl
mov
dec
xchg
mov
or
sbb
adc
stos
jne
pop
sahf
inc
adc
repnz
adc
or
or
sbb
je
fnsave
pop
ja
shl
ja
and
sbb
cmp
je
imul
lds
ror
sub
add
mov
add
(bad)
retf
lds
sbb
inc
add
xor
jnp
lock
(bad)
adc
add
cmp
jbe
enter
test
lock
dec
imul
mov
repz
sbb
xor
pop
cli
add
jae
push
pop
sbb
dec
mov
jl
inc
pop
cmp
into
push
dec
push
jnp
cmp
fdivr
pop
mov
pop
xor
cdq
les
gs
shl
jmp
push
dec
or
pop
retf
pop
sahf
dec
dec
test
in
push
nop
mov
lea
lods
or
push
bound
adc
mov
sbb
add
add
push
fldlg2
jnp
fidivr
comiss
sti
push
cli
stc
es
xchg
pop
ret
in
dec
sbb
lea
sbb
and
lock
lock
stc
add
add
and
jne
sahf
int
fcos
test
inc
and
aas
ret
adc
repz
pop
clc
dec
fld
push
push
and
inc
das
adc
or
sub
test
sub
rcl
and
sub
hlt
or
jb
sub
inc
push
je
inc
and
mov
pusha
or
fwait
jle
imul
idiv
dec
je
add
sub
test
xchg
stos
xor
cmp
pop
xor
add
xchg
sbb
xor
es
pop
xchg
sbb
and
aam
and
push
sbb
mov
pop
mov
pop
addr16
dec
dec
or
ret
or
mov
push
jns
inc
or
jge
push
adc
lock
add
adc
xor
sbb
jg
sub
aam
je
mov
add
jge
add
cdq
dec
dec
jle
in
xor
leave
push
xchg
hlt
je
ds
xlat
sub
adc
cmp
sub
pop
lea
mov
mov
cwde
dec
mov
xchg
lock
sub
add
aas
mov
mov
cmp
xlat
mov
ret
adc
push
xchg
call
rol
mov
jbe
sar
or
cmp
pop
js
and
mov
adc
stos
inc
ds
int
lahf
xor
ret
inc
inc
xchg
push
scas
ss
sbb
mov
fld
(bad)
inc
or
mov
push
mov
cmps
ficom
rcl
and
add
adc
test
mov
pusha
shl
jb
add
xchg
xchg
or
xchg
repnz
icebp
ror
mov
and
fisub
mov
call
xchg
inc
call
adc
adc
or
mov
pop
mov
adc
dec
pop
nop
jbe
nop
call
inc
adc
jle
push
cmp
(bad)
and
adc
adc
dec
mov
fwait
aam
add
push
add
cld
or
dec
and
dec
repz
push
sub
mov
icebp
lock
rcl
lds
mov
leave
sti
stos
inc
xlat
test
jne
xchg
fcom
xchg
fsub
xchg
in
aam
add
pop
or
or
(bad)
repz
jp
or
mov
and
repz
and
int3
mov
xor
enter
mov
pop
les
lods
add
mov
jo
pop
add
push
add
inc
mov
retf
mov
mov
scas
test
ins
cmps
jmp
ins
ins
mov
jno
and
push
daa
outs
mov
inc
scas
ins
(bad)
sbb
test
mov
or
sbb
mov
xchg
je
pop
inc
sar
arpl
ins
mov
push
es
div
imul
ins
pusha
in
(bad)
push
sub
push
loopne
popf
pusha
(bad)
outs
inc
pop
push
xchg
push
or
xchg
mov
jae
mov
xchg
push
pop
mov
rol
clc
mov
inc
xchg
jmp
add
or
cmp
rol
bound
sbb
push
push
loopne
inc
outs
jmp
imul
xchg
les
sbb
pop
pusha
leave
mov
xor
push
xchg
dec
loopne
push
push
addr16
ja
xor
fs
aam
adc
or
(bad)
push
jbe
sbb
mov
add
pusha
enter
mov
sbb
add
shl
jne
sbb
or
stc
mov
push
sbb
repnz
lock
cmp
xchg
xchg
(bad)
ss
dec
and
rcl
sbb
fsub
lahf
xchg
leave
clc
in
push
loopne
lahf
jae
sub
loop
sub
cmp
inc
test
mov
sbb
xor
(bad)
and
add
mov
in
(bad)
leave
cmp
push
dec
loope
or
cmc
aas
sub
das
push
dec
xchg
outs
add
dec
fdiv
add
add
push
add
or
xchg
xchg
cwde
and
push
pop
add
adc
or
or
or
inc
cmp
push
aad
dec
mov
mov
sub
sbb
nop
adc
ds
imul
and
adc
inc
push
inc
data16
or
push
and
ins
ds
mov
fwait
gs
cmp
mov
adc
test
bound
push
jne
add
add
in
xchg
mov
xor
xchg
xor
test
daa
add
sub
cmp
add
mov
and
xor
(bad)
and
dec
scas
sub
cli
or
sub
push
in
ins
adc
push
adc
leave
mov
and
test
jns
imul
xchg
pop
in
scas
popf
adc
imul
lock
sahf
cmp
shr
popf
add
sub
push
ins
add
call
pop
lea
push
sahf
and
cmp
adc
fwait
sub
xor
movs
mov
inc
xchg
cmp
(bad)
sbb
push
sub
clc
cmp
out
or
rcr
sub
clc
inc
add
sub
sub
inc
cmps
ror
sub
test
in
dec
sbb
popa
loope
pop
xor
and
mov
push
dec
movs
fadd
or
shl
push
inc
test
lea
cmp
xchg
(bad)
push
and
inc
pop
push
dec
inc
jmp
inc
adc
cmp
out
lahf
add
inc
int3
jb
mov
inc
jnp
cmp
inc
enter
int3
adc
inc
mov
and
pop
xor
rol
xchg
xor
popf
cld
add
das
(bad)
cdq
(bad)
aad
and
mov
xchg
add
jo
ret
movs
and
add
mov
push
inc
or
xchg
adc
and
xor
and
xchg
test
add
mov
das
fiadd
sbb
loop
sbb
pop
aad
jo
inc
xor
mov
fidivr
or
ret
jns
inc
jb
jmp
dec
adc
xor
and
in
jmp
xchg
dec
adc
mov
adc
inc
add
je
dec
xor
xor
pop
pop
xchg
jle
lea
inc
lods
mov
adc
pop
and
inc
sbb
and
leave
add
aaa
leave
or
outs
ret
dec
sbb
int3
jnp
push
sbb
xchg
and
lahf
sub
jne
sub
dec
inc
cmp
gs
and
shr
pop
cmps
sub
cmp
sub
sub
mov
stos
pop
xor
aaa
mov
repz
jne
mov
arpl
push
in
aam
aam
test
or
adc
adc
shl
or
das
pop
ret
ret
call
push
cmp
sbb
shl
xchg
sub
jno
xchg
push
stc
adc
cmp
(bad)
cmp
inc
dec
xchg
sar
inc
js
mov
inc
mov
push
push
sbb
cmp
inc
mov
mov
out
xor
stc
xchg
sub
popa
jmp
sbb
mov
cmps
test
stc
stc
inc
mov
ins
push
xor
and
lds
mov
mov
pop
addr16
mov
pop
pop
push
push
rcr
ret
adc
retf
gs
sbb
shl
mov
mov
mov
mov
or
push
mov
(bad)
enter
loop
cdq
dec
rcl
int
add
(bad)
fiadd
cmp
pop
or
push
mov
sbb
or
call
jo
jl
push
pop
xchg
xor
sbb
frstor
test
inc
or
or
jmp
mov
add
clc
lock
xchg
adc
(bad)
mov
leave
movs
xor
sbb
lock
and
movs
cdq
add
sub
add
add
adc
pusha
add
js
fs
mov
jmp
and
mov
dec
inc
and
cmp
shl
sub
xchg
xor
and
push
and
pop
cmps
pop
inc
add
mov
sbb
pop
xchg
inc
popa
daa
pusha
inc
jl
mov
add
push
stc
push
sbb
xor
es
xor
fisub
sub
push
sbb
sub
cmp
adc
fcomp
sub
pop
sbb
and
dec
cmp
jne
sbb
sbb
add
movs
mov
scas
dec
push
push
push
stc
outs
das
xor
jns
sbb
add
mov
fstp
or
push
pop
pop
jbe
call
inc
or
and
jae
xor
push
jno
or
test
xor
pop
sub
or
xor
out
push
adc
dec
cwde
dec
dec
fs
add
or
in
or
push
and
inc
out
test
xor
dec
or
pop
punpcklbw
call
lods
in
shrd
mov
and
push
test
loopne
test
xchg
dec
add
les
inc
jae
inc
mov
xchg
test
bound
xchg
repz
adc
add
adc
movs
sbb
or
dec
sbb
push
or
jmp
pop
add
out
and
loopne
xchg
and
icebp
push
pop
sbb
pop
push
mov
mov
add
mov
shr
or
fdiv
adc
sub
nop
xchg
retf
xor
push
imul
add
(bad)
add
push
adc
dec
repz
xor
ret
sbb
dec
dec
adc
pop
test
aam
out
add
gs
cmps
push
add
retf
xor
sbb
or
pop
popa
repnz
mov
xchg
into
sbb
mov
test
imul
push
add
aas
push
pop
pop
enter
adc
fsub
mov
lods
rol
js
aaa
xchg
fs
and
fsub
or
add
cmps
push
cmp
adc
or
jne
ins
cmps
mov
and
inc
sbb
jo
pop
pop
cmp
adc
imul
lods
xchg
js
js
jo
or
aad
push
inc
sbb
inc
or
and
add
push
test
xorps
shl
daa
pushf
dec
xor
sbb
inc
dec
mov
jbe
push
or
mov
pop
jo
cmp
int3
pop
fild
dec
sbb
add
or
cmp
cmp
cmp
ss
sbb
push
add
pop
cmp
(bad)
aad
lldt
andps
nop
sbb
or
out
inc
push
add
adc
mov
adc
aam
lods
xor
unpcklps
bnd
fcomp
imul
fadd
lahf
xor
clc
loopne
or
mov
push
or
test
ss
pop
mov
mov
inc
test
mov
jo
movs
xchg
pop
or
adc
xchg
inc
or
adc
adc
inc
sbb
and
pop
shl
popa
inc
outs
pop
xchg
mul
sub
dec
xor
xor
cmp
cmp
inc
inc
ror
retf
inc
inc
js
dec
xor
repnz
pop
pop
dec
dec
push
xchg
in
mov
lahf
push
pop
pop
jns
mov
fs
fs
pop
push
push
inc
xchg
inc
fidiv
jo
je
xchg
inc
xchg
js
jl
sbb
and
pop
pusha
pusha
inc
test
dec
daa
sbb
outs
adc
enter
inc
or
push
adc
pop
fdiv
cmp
jbe
and
iret
cmp
pop
and
sub
jnp
jo
jg
test
in
jl
loopne
mov
fwait
xchg
ins
jo
es
es
out
inc
dec
int
dec
dec
pop
xchg
(bad)
push
aas
sub
sub
stc
dec
aas
(bad)
cmps
mov
ins
popa
das
xor
jmp
mov
cmp
dec
rcl
sti
cmp
jb
mov
mov
js
jg
xor
dec
add
cld
sbb
push
dec
pop
mov
jae
push
daa
loop
outs
mov
sbb
es
inc
(bad)
jl
fstp
shl
leave
xor
pop
xchg
movs
dec
stc
dec
sbb
xchg
bnd
mov
in
mov
xor
pop
enter
mov
jno
leave
push
int3
(bad)
dec
pop
repnz
in
fs
and
push
mov
retf
ror
xor
jb
mov
aam
push
enter
sar
stos
add
xor
mov
add
mov
add
add
fs
dec
and
outs
and
loopne
fs
out
fs
jl
clts
mov
mov
cmp
push
mov
mov
and
sti
mov
push
cwde
enter
mov
pop
ret
xor
jge
mov
sbb
pusha
shl
sub
add
nop
hlt
mov
adc
adc
mov
cmp
loopne
test
add
add
mov
xchg
data16
das
or
push
sub
test
push
popa
or
jo
lds
mov
sbb
mov
inc
pop
fidiv
cmp
sti
ss
mov
addr16
sbb
das
or
call
out
ins
xor
(bad)
popa
inc
xor
xchg
sub
das
xor
sub
scas
dec
inc
and
sub
or
mov
icebp
push
fdivr
xchg
out
mov
mov
adc
pop
push
in
in
int
or
or
mov
mov
dec
hlt
adc
inc
es
lock
in
xchg
pop
imul
js
in
je
cmp
aas
call
jl
jl
pushf
shl
leave
in
loopne
inc
es
xor
and
push
pop
xor
aas
fdiv
retf
enter
mov
lea
jb
pop
gs
imul
pop
mov
ror
and
mov
idiv
popa
xchg
int3
sub
push
mov
mov
or
push
dec
jno
inc
add
ins
shr
sub
enter
sub
inc
or
les
jmp
mov
pop
stos
mov
out
inc
push
in
push
pop
pop
test
test
sbb
xchg
lods
xor
adc
jo
xor
sbb
sub
mov
jno
and
movs
push
lds
sub
(bad)
jb
push
sub
nop
sbb
or
xlat
mov
inc
lods
cmps
dec
fsub
sub
scas
aaa
adc
shl
mov
add
or
mov
mov
or
jle
sub
rol
sub
pop
and
in
push
cmp
push
arpl
imul
mov
xor
outs
sbb
pop
bound
jae
inc
nop
xor
idiv
lahf
dec
adc
pusha
jp
leave
pop
push
ds
movs
dec
enter
mov
and
in
and
add
(bad)
retf
sti
jo
xchg
clc
mov
bound
inc
inc
push
test
mov
or
in
xchg
xor
fsubr
movs
mov
xchg
or
(bad)
in
push
sub
jo
or
mov
stos
movs
lahf
and
daa
jns
sub
loope
add
inc
adc
cs
or
pusha
dec
repnz
mov
inc
bound
and
mov
inc
test
jg
mov
pop
push
and
(bad)
test
add
mov
pop
outs
lods
mov
scas
sbb
add
inc
jbe
ss
mov
sub
icebp
add
add
cmovle
in
clc
pop
out
mov
inc
ins
xor
push
push
add
xchg
cmp
jl
pop
push
rol
ret
scas
adc
push
dec
or
or
jle
sbb
dec
and
pop
or
lock
pop
mov
lock
movzx
jle
adc
je
sbb
jl
rcr
test
mov
xchg
or
mov
imul
adc
dec
(bad)
test
mov
push
fs
or
les
and
imul
xchg
pop
and
or
icebp
dec
mov
or
lea
adc
or
arpl
push
ds
nop
mov
test
pusha
jo
jno
enter
dec
jmp
(bad)
dec
or
addr16
call
pop
sub
pop
jmp
test
push
mov
ror
stos
add
mov
mov
or
jle
push
les
test
or
mov
inc
mov
mov
add
add
mov
sbb
xchg
push
stos
bound
ret
les
inc
out
aam
or
cwde
mov
leave
adc
jbe
test
or
(bad)
cs
data16
push
fisub
jo
std
inc
dec
mov
cmp
test
mov
add
inc
jmp
mov
mov
inc
mov
(bad)
sahf
push
adc
icebp
jle
push
or
mov
push
das
jmp
ffreep
imul
inc
call
repz
gs
xlat
or
dec
xor
js
lods
mov
adc
cs
or
arpl
outs
imul
sub
mov
or
aaa
xor
hlt
popa
push
push
mov
mov
adc
mov
or
mov
cmp
push
dec
data16
in
pop
leave
loopne
stos
scas
or
je
call
adc
inc
sbb
dec
or
pop
fnsave
loopne
pusha
cmp
adc
adc
jmp
or
idiv
push
mov
aas
xor
push
and
mov
test
or
out
add
sub
jae
sbb
addr16
pop
ret
mov
jmp
gs
sbb
and
test
shl
push
mov
ror
nop
add
xor
lea
sbb
or
or
jnp
push
shr
add
sbb
push
push
and
xchg
push
bound
mov
jmp
push
and
enter
pushf
mov
jne
mov
mov
shr
nop
mov
in
sub
xor
xchg
nop
mov
mov
mov
dec
mov
xchg
mov
push
in
push
add
mov
inc
jno
mov
fdiv
mov
add
push
or
loop
pop
push
(bad)
sbb
xor
mov
add
xor
jns
mov
xlat
enter
lods
(bad)
shr
int
daa
test
mov
inc
lahf
cmp
jbe
in
sub
xor
inc
cmp
push
pop
movs
adc
pop
or
fxch
inc
cwde
inc
push
div
push
movs
adc
ins
or
nop
adc
cmp
mov
push
mov
loopne
dec
mov
and
inc
xor
jecxz
shl
pop
ss
adc
lds
mov
or
popa
ss
test
dec
cmp
and
pop
mov
sub
cld
inc
or
les
add
je
jne
xchg
or
ret
rol
push
movs
in
mov
movs
mov
add
ins
jne
dec
cmp
jecxz
ss
push
fst
cdq
dec
xor
mov
iret
sbb
inc
inc
pop
and
das
pop
inc
inc
push
cmp
or
ror
or
das
je
popf
addr16
outs
inc
adc
mov
add
ret
ins
test
push
les
add
pop
call
mov
dec
sbb
mov
and
loop
jo
push
pop
lds
add
xor
or
enter
fmul
ins
lock
fs
call
mov
call
xor
add
add
push
ret
inc
pushf
mov
ins
pop
or
adc
in
mov
in
cwde
inc
pop
out
lahf
sub
push
add
inc
dec
dec
dec
inc
inc
mov
jne
sar
pshufw
xchg
enter
bound
and
or
iret
pop
mov
pop
ins
pop
sub
gs
xor
daa
dec
sbb
mov
sbb
imul
out
aaa
or
pop
or
outs
ins
mov
mov
add
in
xchg
dec
fsubr
add
dec
dec
cld
test
mov
mov
sub
mov
loopne
xor
rol
xor
pop
rol
fcmovnbe
push
icebp
mov
js
out
dec
push
mov
xor
scas
dec
and
cmps
ja
sub
lock
jo
and
ss
rcr
das
arpl
je
mov
jo
jo
inc
ja
fsub
lea
jb
ins
or
ins
popa
pusha
fwait
bound
xchg
and
xor
jno
mov
mov
and
sub
clc
push
jmp
dec
jns
add
iret
or
lds
adc
popa
jbe
and
mov
imul
sub
test
sbb
or
or
inc
push
outs
mov
fild
mov
push
lahf
pop
adc
gs
and
arpl
ins
ins
in
loopne
repnz
adc
or
outs
(bad)
fistp
push
cmp
push
leave
adc
jl
push
ror
inc
xchg
inc
add
or
xlat
hlt
popa
in
dec
and
js
test
push
mov
add
push
and
jno
sbb
jo
dec
and
aas
add
add
push
adc
ds
dec
enter
test
enter
sbb
mov
idiv
inc
xor
push
div
and
push
(bad)
push
pop
inc
add
pop
sub
add
push
jnp
data16
add
jns
cmp
imul
adc
(bad)
out
lods
mov
in
call
mov
add
adc
adc
xor
or
cmp
xor
mov
pop
test
mov
and
xchg
dec
or
mov
sahf
loopne
add
or
push
(bad)
sbb
mov
add
and
mov
loopne
jo
cmps
push
(bad)
mov
stc
adc
and
arpl
xchg
and
cmp
sbb
ret
retf
sbb
int
jo
sub
neg
cmp
in
cmp
sbb
addr16
je
popa
pop
cmp
xchg
pop
inc
daa
test
and
add
mov
xchg
call
(bad)
or
mov
enter
inc
adc
xchg
sub
test
and
les
xor
inc
cmp
outs
bound
arpl
inc
outs
mov
loop
shl
adc
or
adc
sub
ret
inc
out
mov
xchg
dec
call
sbb
xchg
inc
outs
neg
and
ins
jbe
xchg
inc
mov
jbe
fsubr
dec
ja
or
sbb
loopne
mov
out
jae
test
xor
mov
(bad)
mov
add
mov
adc
ja
data16
nop
add
movs
xchg
mov
movs
fs
retf
mov
jo
push
mov
sbb
xor
loopne
xor
add
push
aaa
out
ret
int3
or
jge
or
bound
sub
arpl
bts
loope
out
pop
pop
push
ret
push
mov
dec
xor
and
mov
pop
fs
pop
unpckhps
sbb
add
xor
sub
mov
mov
jg
adc
es
jmp
cs
pop
inc
lahf
fucomip
cdq
lea
or
daa
shl
sbb
push
jae
add
xor
hlt
push
sbb
push
inc
mov
out
push
mov
xchg
pushf
ja
add
sbb
loopne
mov
sub
loopne
sub
and
jno
jae
mov
dec
in
ss
sub
loopne
mov
cmp
outs
mov
cmp
nop
push
jno
push
and
or
push
mov
fnstenv
ficom
pop
sub
fidiv
dec
mov
data16
or
pop
test
mov
test
rcl
test
ret
les
xor
xor
ja
add
dec
push
(bad)
sbb
mov
push
into
push
sbb
enter
rol
dec
inc
mov
les
inc
inc
add
dec
adc
sub
out
push
inc
repnz
xchg
adc
inc
daa
cs
int
js
sub
mov
add
and
pop
movs
xor
lahf
pusha
(bad)
test
in
ret
inc
pop
adc
mov
or
sti
xor
mov
popa
lahf
adc
daa
jl
push
or
sub
dec
jmp
mov
or
dec
inc
sub
mov
shr
add
mov
adc
add
test
movs
movs
xor
mov
pop
jne
adc
mov
movs
jno
inc
cmps
adc
xchg
pushf
scas
shr
aam
jl
hlt
mov
cs
jns
out
mov
jle
or
(bad)
add
jns
sahf
or
sbb
mov
add
dec
xor
sbb
int
xchg
inc
imul
in
shl
dec
xor
adc
or
inc
mov
or
repnz
mov
pcmpeqd
outs
dec
push
jns
enter
pop
jns
fs
ja
aam
cld
cmp
or
shl
mov
push
pop
dec
shl
test
xchg
jp
mov
mov
jnp
ss
neg
repnz
fild
mov
dec
sbb
push
or
fisub
pushf
cmps
mov
lods
lock
fst
mov
or
cmps
and
adc
test
test
dec
xchg
test
js
scas
ret
pop
jl
mov
inc
or
sbb
adc
add
clc
adc
pop
xchg
in
xlat
or
sbb
mov
call
popa
mov
lods
xor
rcl
(bad)
aam
or
fild
jge
ins
enter
dec
call
daa
inc
mov
out
movs
sub
pop
adc
out
(bad)
ss
dec
mov
(bad)
push
dec
inc
mov
jg
or
hlt
jne
push
cwde
and
les
sub
clc
in
jge
xchg
and
add
inc
fisttp
cmp
sub
fcomp
call
popa
add
mov
or
mov
shr
or
sbb
sub
or
and
inc
add
and
out
or
cmps
stc
xor
call
and
inc
xor
or
and
mov
pusha
inc
outs
call
lods
add
out
cmp
pop
(bad)
push
sub
sub
push
call
pextrw
jl
lds
std
fcom
xchg
pop
mov
dec
dec
jle
outs
shr
and
or
lock
call
and
push
icebp
bound
adc
out
das
fadd
jb
and
xchg
ss
adc
sbb
xchg
cmp
cmp
mov
xchg
mov
retf
adc
inc
test
mov
test
mov
imul
outs
outs
inc
sbb
mov
mov
mov
xor
pop
arpl
xor
mov
add
or
sbb
mov
xchg
ins
and
fs
enter
les
lock
xor
dec
in
add
sti
movs
inc
add
sbb
xlat
jnp
dec
sbb
dec
sbb
scas
add
inc
dec
dec
add
dec
(bad)
arpl
mov
mov
and
push
rol
sub
jmp
pop
pop
push
faddp
mov
inc
out
push
pop
inc
xchg
push
sbb
data16
(bad)
lock
and
jb
rcr
mov
add
mov
mov
int
mov
push
test
mov
and
shl
test
test
shl
xchg
xor
xor
fbstp
or
dec
push
dec
js
mov
rol
inc
xlat
dec
(bad)
in
or
lsl
jecxz
add
outs
aaa
jmp
xlat
lods
inc
xor
cwde
dec
enter
xor
adc
mov
push
ret
cmp
xor
js
sub
hlt
mov
sub
es
arpl
ins
pop
push
xchg
aaa
repnz
adc
ins
sub
mov
jmp
inc
xor
aaa
aas
arpl
mov
xor
mov
dec
sbb
inc
das
push
retf
js
ret
mov
sub
or
enter
push
(bad)
fnstcw
ins
push
test
xchg
add
add
or
inc
adc
das
retf
jno
inc
xor
test
xchg
inc
ror
sub
xor
out
mov
push
mov
sub
cdq
nop
cld
add
push
sub
mov
push
adc
es
xor
ror
mov
and
or
out
nop
pushf
outs
jb
mov
nop
push
leave
je
jae
or
xor
mov
dec
or
and
push
sbb
mov
jo
test
sar
ins
mov
loopne
mov
xor
cdq
xchg
dec
pusha
inc
pop
and
jg
dec
mov
xor
cmp
mov
or
daa
outs
dec
adc
jb
add
inc
mov
pop
int3
xor
mov
jbe
or
mov
dec
popa
or
xchg
ins
outs
and
inc
addr16
mov
inc
jg
fs
ins
popa
lock
add
mov
add
outs
fisubr
stos
mov
adc
or
ins
in
push
adc
mov
adc
ror
inc
mov
lds
xor
aam
sub
add
addr16
fbld
dec
jg
push
jae
jo
pop
mov
dec
fs
gs
xchg
nop
add
dec
and
div
sub
pop
jne
dec
pop
or
loope
ins
sub
dec
outs
je
add
or
mov
dec
adc
and
inc
(bad)
or
mov
fs
adc
imul
mov
pop
xor
lock
cmp
mov
test
and
and
jecxz
or
and
cmp
inc
mov
inc
cmp
adc
add
jbe
cmps
xchg
pop
inc
and
or
xchg
rol
xchg
cmp
mov
scas
inc
pop
mov
xlat
cs
inc
mov
and
pop
push
stos
push
dec
inc
pop
pop
pop
and
aam
dec
ja
inc
enter
dec
mov
jl
mov
add
mov
or
sub
add
jnp
lahf
inc
or
call
rcr
arpl
add
add
cmps
xor
pushf
popa
call
cwde
push
in
popa
inc
ret
mov
cmp
adc
or
adc
pop
scas
cmp
or
push
add
mov
div
xor
or
jo
xchg
and
and
mov
and
push
add
adc
add
push
sbb
outs
push
(bad)
fs
adc
or
adc
addr16
dec
popf
inc
pusha
out
adc
push
in
popf
sub
and
and
dec
pop
push
ss
cmp
shl
movs
adc
cld
rcl
inc
adc
fisubr
lock
pop
inc
push
mov
imul
sub
repz
inc
push
inc
or
bound
add
les
push
scas
or
in
sbb
neg
in
push
test
cmps
push
and
outs
(bad)
into
dec
adc
jle
pop
mov
aas
adc
sub
sub
adc
fadd
jl
inc
movs
popa
dec
movs
fsubrp
int
mov
aam
test
movs
pusha
adc
or
add
mov
jne
inc
shl
int
stc
or
mov
push
or
inc
imul
or
jl
shl
or
and
sub
xchg
dec
cmps
call
dec
sbb
lahf
pop
lsl
int3
int3
xchg
jmp
mov
sbb
cwde
dec
adc
xor
loope
or
push
or
mov
cmp
ins
adc
sbb
xchg
or
add
shl
or
jg
mov
dec
xor
jo
mov
add
pop
xchg
and
es
nop
outs
push
ret
xchg
or
xor
or
pop
(bad)
jb
sbb
rcl
sub
push
push
jle
mov
cmp
mov
push
addr16
inc
test
sbb
dec
ja
add
lods
mov
and
xor
or
add
inc
pop
pushf
dec
mov
or
rcl
push
(bad)
pushf
inc
push
add
test
into
fnsave
fadd
sbb
inc
push
int
mov
(bad)
adc
inc
fist
inc
repnz
sti
nop
adc
sub
(bad)
outs
cmps
push
les
rcl
imul
ja
and
mov
aam
add
sbb
bound
mov
and
test
sub
or
push
ret
sbb
daa
push
xlat
dec
cmp
sub
add
add
jb
test
xor
loopne
mov
push
or
or
fs
popaw
adc
sbb
mov
jb
dec
add
jb
mov
jb
xchg
inc
push
ret
add
adc
ret
lock
push
push
sub
and
add
repnz
cmps
push
pop
mov
cmp
mov
mov
and
mov
retf
add
loopne
in
pop
xor
cmps
sbb
pop
jl
(bad)
push
test
sub
retf
adc
mov
push
ins
push
mov
test
loope
test
mov
xchg
hlt
cmp
adc
push
(bad)
dec
or
jmp
push
push
fnstcw
nop
pop
or
and
into
add
enter
or
xor
dec
add
add
add
mov
mov
fs
lods
add
adc
xchg
inc
add
ret
xchg
adc
in
cmp
push
mov
inc
xchg
adc
push
dec
mov
adc
sbb
pop
xchg
sub
mov
ror
lahf
xor
add
das
mov
and
and
and
aad
nop
mov
jle
xchg
jo
lods
inc
push
fwait
push
scas
or
or
sub
ins
lahf
xor
nop
sub
ret
aam
push
sbb
or
dec
pop
add
shr
sbb
mov
test
cs
iret
xchg
ds
jg
xor
inc
pop
dec
add
iret
sbb
int
mov
popa
mov
das
push
xchg
pop
test
jmp
sbb
mov
inc
pop
mov
test
je
jg
test
and
cmp
idiv
jne
xlat
xlat
add
adc
ret
fisub
xchg
mov
inc
xor
(bad)
lea
out
push
mov
or
dec
push
pop
test
push
pop
adc
add
fxch
add
pop
xor
test
rol
bound
xor
adc
mov
aas
mov
or
mov
shl
jo
and
add
xor
iret
mov
sbb
daa
pop
enter
jne
mov
inc
and
cmp
in
dec
sub
sub
mov
cmp
frstor
mov
sub
fdivr
rol
push
in
sub
xor
leave
xchg
scas
sbb
add
lock
sub
sub
mov
dec
pop
xor
and
aad
(bad)
adc
ret
or
xlat
add
ret
lods
shl
add
ins
xchg
sbb
jmp
fild
adc
outs
ins
inc
push
xchg
add
jl
paddusb
in
sbb
outs
mov
js
cs
es
sub
inc
push
pop
jmp
test
or
lahf
dec
add
pop
sub
ins
imul
mov
push
fwait
mov
loop
jl
add
mov
inc
inc
gs
mov
test
sub
xchg
(bad)
lods
nop
arpl
and
and
pop
and
jne
fisttp
ror
mov
pusha
sub
cmps
(bad)
jo
dec
ret
ret
and
and
and
mov
movs
shl
dec
mov
or
and
imul
enter
xor
dec
add
pop
sub
mov
imul
dec
sbb
or
rcl
gs
into
jno
rcl
sbb
or
xor
mov
bound
jmp
lahf
cmp
mov
xor
push
retf
adc
push
jns
xchg
dec
add
imul
mov
dec
inc
je
mov
mov
add
xchg
fxtract
enter
add
sub
(bad)
not
jmp
add
xlat
push
dec
test
adc
pop
leave
add
sbb
inc
add
cmp
add
jb
push
jae
dec
in
jmp
mov
pop
dec
pusha
add
pusha
add
jb
test
push
xchg
pusha
pop
fs
adc
cmps
and
dec
add
cmps
imul
cmp
and
aad
push
shl
dec
out
xchg
push
xchg
pop
je
xchg
data16
sbb
cmp
add
push
mov
test
jg
or
in
aas
test
add
dec
out
adc
sbb
adc
mov
lsl
or
push
xchg
sbb
mov
sub
fild
add
jg
inc
mov
inc
inc
es
and
and
pop
ja
inc
xchg
dec
and
adc
mov
jle
mov
cmp
test
test
push
addr16
sbb
and
ins
lock
sub
or
jmp
pop
pop
fsub
pop
jle
adc
dec
xchg
addr16
stos
push
push
nop
sbb
jecxz
(bad)
dec
test
dec
pop
js
sahf
shl
jae
sbb
cld
jae
cmp
cmp
loope
cld
loop
and
ret
(bad)
push
dec
in
add
ins
add
xchg
fnstcw
sbb
mov
stos
dec
sbb
cwde
out
test
je
jl
xchg
cmp
mov
repnz
add
in
cmpxchg
pop
add
test
nop
add
add
add
or
in
pop
(bad)
mov
push
adc
div
mov
inc
mov
mov
fistp
ins
cld
and
or
and
or
mov
mov
mov
jg
ins
ror
dec
mov
push
pop
or
jl
movs
cmp
xchg
sub
ret
inc
fisttp
inc
test
cmp
mov
push
dec
rcl
push
mov
daa
ja
inc
jo
pusha
arpl
sub
sbb
rol
push
shl
cmp
jbe
popf
retw
js
add
dec
movs
fiadd
fiadd
mov
sub
dec
lods
xor
lock
dec
inc
and
cmp
add
(bad)
sbb
lock
or
sub
out
or
xor
loopne
add
stc
and
or
adc
sbb
call
aas
ret
add
adc
mov
adc
sub
add
leave
sbb
jno
icebp
mov
lds
inc
sub
add
imul
jmp
lods
shl
rcl
or
test
add
jne
jle
loop
push
ins
jmp
adc
and
adc
inc
movs
inc
test
push
or
cmp
rol
das
dec
call
in
jns
add
and
dec
cmp
jno
mov
or
mov
and
test
add
sbb
push
push
xor
adc
(bad)
je
add
lods
pop
pop
and
les
cmps
cwde
les
bound
nop
das
and
mov
smsw
pop
mov
mov
pop
pop
sub
sbb
push
test
push
ss
add
dec
ret
xor
and
mov
xor
adc
in
lahf
push
enter
dec
pusha
pop
rdpmc
mov
add
dec
adc
jo
pop
sub
mov
mov
push
sub
adc
xchg
cmp
pop
adc
dec
dec
pop
pop
adc
fisub
and
movs
sub
mov
add
xor
ss
xor
add
add
dec
jge
daa
jg
fwait
adc
cmps
retf
dec
mov
mov
cmp
ret
enter
lods
mov
push
or
or
mov
mov
and
mov
cmps
test
mov
imul
adc
sub
popa
dec
mov
adc
(bad)
ja
add
scas
or
mov
ins
and
pop
ret
jo
or
xor
test
(bad)
jmp
adc
push
ins
push
mov
xchg
push
cmp
sub
and
and
push
jnp
imul
inc
sub
push
mov
sbb
pop
adc
dec
pop
(bad)
out
add
ja
cmp
jl
mov
and
imul
fadd
rol
ror
pop
add
push
add
push
pusha
sub
(bad)
jne
jne
sub
aam
cmp
or
sar
push
add
mov
push
push
mov
fild
lds
and
ins
out
data16
and
and
pop
cmps
mov
mov
mov
push
dec
leave
mov
(bad)
ds
jne
sbb
ror
loopne
push
push
iret
mov
in
enter
pop
dec
mov
sbb
pop
nop
movs
imul
fs
jne
ret
outs
mov
lock
cwde
lods
or
sbb
and
dec
mov
ins
(bad)
adc
inc
adc
inc
adc
fisttp
push
sbb
or
mov
cmp
or
and
sbb
dec
add
(bad)
mov
sete
not
out
mov
or
test
or
pop
ret
adc
add
cmp
sub
xchg
fs
sbb
push
repnz
pop
dec
dec
and
test
(bad)
mov
adc
pop
dec
cs
dec
or
aam
popa
push
add
pop
pop
fst
and
mov
popa
and
fmul
push
mov
xchg
push
mov
push
sub
ja
ret
pop
scas
hlt
mov
pusha
icebp
out
pushf
push
sbb
xchg
fldenv
inc
add
cmp
shl
cs
je
push
inc
add
xchg
sbb
or
mov
lea
pop
retf
and
pop
pop
push
or
stos
imul
add
mov
add
fsubr
mov
iret
fisub
ror
cmp
pop
dec
push
loopne
lods
pop
jno
arpl
fst
cmp
je
sub
pop
pop
cmp
cli
je
jne
or
out
and
sahf
popw
xchg
and
mov
dec
retf
nop
xchg
(bad)
enter
adc
sbb
inc
xor
cs
call
or
push
fiadd
mov
add
push
or
and
xor
adc
dec
push
movups
xor
inc
movs
inc
test
mov
cmp
xor
in
xchg
lea
adc
cmps
leave
adc
cwde
cld
push
repnz
daa
add
adc
add
xlat
and
ja
pop
ror
push
lds
adc
sub
xchg
aam
mov
mov
add
(bad)
push
(bad)
retf
test
or
dec
push
push
ret
popf
push
push
sub
or
or
cdq
les
inc
loop
pop
and
xor
and
cmp
cmc
pop
mov
sbb
arpl
push
and
into
pusha
pop
mov
test
fisubr
movlps
lahf
clc
xchg
xor
jns
and
retf
ds
ror
es
sub
mov
fwait
nop
sub
ret
sub
or
and
xchg
mov
shl
stc
add
je
sti
sub
fldenv
mov
dec
jnp
inc
and
ret
inc
jne
push
xchg
nop
dec
sahf
xchg
shl
clc
mov
nop
lock
inc
xor
stos
inc
jmp
push
enter
adc
inc
dec
and
iret
retf
cmps
pushf
jmp
pop
push
dec
add
leave
inc
ret
push
push
mov
imul
dec
mov
or
aas
and
sub
sbb
push
test
dec
(bad)
xchg
ins
fsubr
mov
test
loope
inc
adc
scas
mov
jmp
or
cmps
int3
jmp
pop
addr16
push
adc
test
mov
arpl
cdq
dec
call
and
dec
into
mov
mov
cmps
xchg
xchg
mov
test
push
arpl
or
sbb
loope
(bad)
xor
sar
ins
add
imul
adc
es
pop
xchg
lea
mov
cmp
into
sbb
outs
fadd
jnp
inc
inc
ins
mov
sub
shl
(bad)
pop
test
jge
clc
mov
bound
xchg
mov
(bad)
push
sub
dec
sbb
cmps
jge
lods
push
stos
cmp
dec
in
in
pop
fdiv
aad
mov
ins
faddp
or
or
and
push
fistp
adc
call
mov
enter
jb
sbb
imul
pop
cmps
xchg
and
sbb
call
(bad)
push
pop
imul
inc
push
sbb
jecxz
push
cmps
push
push
sti
cwde
in
in
mov
dec
sbb
sar
or
xor
ins
pusha
cmp
test
xchg
daa
sub
cmp
jle
inc
cwde
sbb
xor
mov
cmc
inc
or
add
dec
popa
lds
add
test
push
out
mov
cmp
ret
ret
xor
jmp
mov
pop
push
and
xor
push
add
jecxz
or
dec
out
cmp
sbb
push
cmp
pop
xor
fcomi
out
mov
cmp
sbb
pop
and
dec
fmul
pop
xchg
pop
nop
xlat
add
movs
mov
inc
fld
cld
sbb
ja
lods
inc
and
bound
js
dec
retf
and
imul
ds
mov
cs
push
adc
jecxz
mov
(bad)
jnp
mov
xchg
pusha
stos
push
ins
adc
mov
movs
pop
cmp
push
jl
sub
rol
mov
pushf
pop
mov
sub
inc
ss
jno
mov
adc
pop
out
rcl
and
mov
sbb
popa
mov
leave
push
xor
adc
cmp
xor
push
jo
xlat
in
and
xchg
retf
pop
mov
pop
inc
xchg
inc
lea
mov
retf
out
(bad)
call
jle
push
pop
add
fnsave
mov
enter
xchg
mov
pop
xchg
hlt
sub
push
movs
outs
arpl
xchg
cmps
jmp
add
adc
mov
cmp
sbb
mov
test
pop
ins
pop
add
sub
clc
and
ret
fld
fild
xor
fs
mov
dec
push
inc
enter
test
push
push
cmp
dec
ret
jmp
sub
or
cmc
rol
dec
xchg
or
dec
popf
cmp
add
jle
add
fprem
mov
cdq
es
rcl
inc
enter
pop
or
push
inc
cmp
pop
push
rol
add
or
xor
jo
jo
inc
sub
pop
cmp
jnp
push
xchg
pushf
push
call
cmps
and
pop
or
call
jo
lock
(bad)
jg
stos
es
xchg
jge
jo
mov
aad
sti
push
mov
or
sbb
jmp
push
pop
inc
(bad)
push
mov
push
mov
adc
jb
push
or
adc
call
neg
ss
repz
ret
dec
jmp
hlt
call
jnp
xchg
or
shr
xor
(bad)
dec
sti
repnz
arpl
ret
cmp
or
and
imul
mov
dec
mov
inc
bswap
or
clc
fwait
and
or
loop
bound
inc
scas
mov
lods
mov
mov
push
sbb
push
inc
dec
es
xchg
jmp
dec
jnp
xlat
popf
pop
push
pop
pusha
cmp
adc
pop
xchg
mov
rcr
test
(bad)
jmp
or
mov
addr16
sub
out
sahf
daa
pop
lds
sub
scas
mov
push
lods
push
arpl
sub
mov
lds
jle
bnd
sub
fsub
pop
loopne
mov
pop
out
adc
call
adc
xchg
push
les
cmp
lea
mov
dec
cmp
add
fist
sub
movs
je
enter
add
(bad)
iret
adc
push
and
cmp
jns
ins
and
add
call
test
enter
(bad)
dec
ins
mov
mov
das
xchg
push
sub
cwde
and
dec
rol
jo
cmp
mov
push
fimul
inc
xor
sbb
pop
test
xor
adc
xor
leave
or
sbb
adc
rol
xchg
jnp
xor
or
dec
imul
inc
adc
sub
pop
push
push
push
push
pop
mov
adc
push
or
loop
les
sub
movnti
add
push
or
mov
push
adc
cmp
or
push
xor
push
pop
push
mov
mov
adc
js
test
xor
shl
add
imul
mov
or
call
sub
scas
shl
adc
add
cmp
jae
movd
stos
sbb
mov
jge
push
ret
rol
adc
push
add
cmp
add
nop
mov
outs
adc
ret
repz
mov
out
sub
and
xchg
js
mov
adc
mov
add
clc
sub
and
and
in
push
daa
cmpxchg
or
or
fs
add
aad
pop
cmp
outs
js
push
adc
jbe
jno
daa
pop
push
or
fimul
vmread
inc
lea
std
fadd
mov
outs
adc
and
les
in
gs
sbb
imul
jp
dec
add
inc
push
add
and
or
mov
xlat
push
inc
ss
or
xor
adc
fs
sub
lods
call
lock
or
mov
inc
pop
inc
cmp
popf
out
lea
mov
(bad)
add
inc
retf
mov
sar
add
mov
add
lock
mov
loop
sub
out
enter
jmp
sub
mov
cmp
pop
add
sbb
cli
loop
pop
enter
sbb
xchg
jge
mov
xchg
dec
lds
push
je
sbb
cmp
xlat
shl
repz
push
sbb
inc
pusha
int
pop
mov
daa
leave
or
push
push
jle
cmp
jb
or
jbe
dec
pop
jmp
adc
mov
sbb
pop
mov
leave
test
push
add
(bad)
adc
and
pop
jl
or
or
mov
and
(bad)
int3
bound
or
nop
jmp
lods
les
pop
and
sbb
fdivr
clc
inc
bound
push
xlat
test
call
xchg
nop
popa
push
mov
cmp
mov
mov
mov
sbb
shl
and
jecxz
cmp
xchg
lock
add
pop
into
scas
inc
xlat
add
adc
or
pop
mov
or
fisttp
ds
daa
fadd
aaa
sub
adc
mov
cdq
in
xor
inc
and
dec
icebp
je
xor
mov
bound
ret
xor
sbb
adc
mov
xchg
mov
push
jmp
leave
inc
rcl
and
js
mov
inc
pop
add
hlt
clc
sbb
cld
cmp
adc
nop
retf
dec
shl
mov
and
cmp
call
xchg
call
mov
cmp
movs
adc
adc
pop
les
test
jp
pop
add
ror
leave
add
popa
imul
das
dec
sbb
movs
aaa
ins
add
sar
sbb
and
sbb
add
xor
les
or
sbb
or
lods
outs
sbb
pop
les
mov
adc
adc
je
in
sub
js
imul
inc
jge
rcl
retf
xchg
movs
mov
push
jmp
rcl
mov
es
jge
xchg
int
cmp
jae
xchg
or
inc
arpl
cwde
or
cmp
push
adc
xor
push
adc
ins
adc
jmp
or
xchg
lods
push
and
mov
sbb
fs
or
lods
scas
push
sar
je
jne
adc
rcl
adc
imul
(bad)
and
sbb
mov
adc
add
cs
jae
lods
add
imul
bound
je
mov
ret
push
ret
jmp
data16
push
sar
or
imul
sub
mov
and
jae
addr16
add
pop
push
xchg
jb
inc
jns
adc
or
movs
mov
aas
unpckhps
and
inc
or
test
ret
mov
out
(bad)
in
gs
jp
mov
sbb
cld
adc
es
mov
sub
or
pop
adc
sub
ins
cwde
popa
mov
adc
sbb
test
pop
push
jo
arpl
jg
int
popa
cmp
mov
sbb
inc
mul
aam
arpl
daa
dec
nop
ss
dec
or
sbb
fcom
loope
arpl
or
push
mov
sbb
xchg
jl
push
jae
in
test
mov
in
mov
or
dec
adc
cld
xor
adc
push
shl
fist
mov
dec
xchg
add
int
cmp
xchg
or
sub
cmp
aad
add
(bad)
dec
adc
je
clc
retf
dec
adc
dec
or
cmp
mov
mov
lea
dec
sysexit
ret
xchg
imul
sub
and
sbb
add
push
pop
outs
test
mov
addr16
jmp
xor
lahf
in
adc
cmp
pop
inc
nop
loop
aad
add
xchg
xchg
xor
pop
push
sub
push
adc
xchg
in
sbb
imul
sbb
mov
jo
and
inc
push
adc
add
cmp
adc
push
mov
mov
pusha
pop
mov
add
adc
xchg
dec
add
sbb
cmp
jo
adc
sub
cmps
mov
sbb
lock
xsaves
xchg
mov
adc
movs
test
and
push
push
mov
or
push
(bad)
xchg
mov
xor
or
iret
imul
adc
xchg
movs
imul
dec
mov
popa
ret
jl
or
aad
pop
sbb
(bad)
mov
in
dec
push
mov
sbb
jp
jo
adc
das
or
je
jo
mov
and
sub
daa
outs
pop
pushf
mov
fadd
icebp
inc
jae
js
mov
cmps
xor
mov
sbb
and
sbb
jle
fnstenv
cmp
and
in
cmp
add
jnp
and
sub
mov
push
cmp
fstp
xchg
outs
add
fld
push
cdq
xchg
mov
hlt
je
jb
or
jbe
daa
sbb
sbb
push
pmovmskb
or
push
or
aas
mov
jne
outs
inc
daa
outs
fldenv
rcr
div
sub
push
adc
xor
adc
ror
ficomp
xchg
or
jo
out
cwde
sub
adc
mov
jo
dec
(bad)
div
cmp
jo
mov
add
jo
das
jns
retf
pop
mov
inc
lods
aas
call
push
mov
rcl
push
sbb
adc
test
adc
push
and
popa
xor
das
or
ss
bndldx
movaps
sbb
adc
enter
or
inc
xor
adc
mov
pop
xchg
sub
inc
in
fidiv
add
sbb
and
cmp
fiadd
mov
mov
addr16
push
dec
cs
push
test
(bad)
(bad)
sbb
push
add
sub
adc
xchg
push
fadd
dec
je
fistp
sbb
movs
repz
inc
inc
mov
sub
adc
nop
pop
jle
push
add
xchg
fisub
adc
stc
data16
ins
add
ficom
xor
enter
adc
or
das
pop
or
test
dec
jg
iret
push
add
idiv
mov
cld
data16
xchg
mov
push
das
mov
leave
fst
stos
cld
add
push
loopne
fild
cmp
pop
and
ins
les
xor
and
push
push
pop
sbb
clc
or
mov
nop
push
pop
and
bound
loope
dec
push
mov
fidivr
pop
fs
add
mov
cmp
mov
adc
test
pop
xor
sub
pusha
cli
xchg
fisubr
jmp
mov
push
pusha
loope
in
mov
dec
loopne
cmp
ja
xor
in
cmp
push
outs
(bad)
test
dec
add
outs
cwde
(bad)
das
mov
or
dec
jae
or
dec
or
data16
out
lds
mov
add
xchg
lock
and
inc
inc
sbb
sbb
sub
cld
dec
test
and
xchg
and
push
push
setl
xchg
(bad)
pushf
test
dec
dec
push
push
inc
not
xor
and
sar
jmp
sub
movs
push
or
fs
or
ret
sbb
mov
pop
mov
inc
ret
and
(bad)
scas
loopne
loope
mov
movs
pop
add
in
add
pop
and
mov
fadd
test
in
das
call
cmp
or
pop
and
test
(bad)
mul
jo
lods
push
call
or
ror
out
loope
push
inc
clc
call
pop
rcl
cli
mov
cmp
push
or
and
enter
sbb
out
sub
pop
push
adc
mov
jo
outs
inc
xchg
outs
and
and
rol
dec
add
inc
jnp
pusha
jno
bound
out
pop
xor
enter
in
mov
xor
and
or
shr
add
aas
retf
cmps
pop
mov
push
adc
mov
shl
hlt
mov
mov
add
fisubr
add
jg
add
imul
mov
add
add
sub
(bad)
dec
rol
cmps
push
mov
test
movs
jb
lods
popf
jb
ins
mov
movs
mov
xchg
dec
adc
push
dec
mov
inc
mov
xor
xor
inc
and
push
add
and
(bad)
inc
mov
imul
fiadd
sub
sub
push
(bad)
out
xchg
jl
stc
popa
pop
aaa
adc
cmp
add
and
add
pop
and
sub
loopne
mov
pushw
dec
pop
adc
mov
repnz
or
data16
stos
sbb
and
in
or
jmp
lock
addr16
sbb
call
test
inc
jo
xchg
outs
jne
test
out
shl
aaa
and
addr16
les
mov
push
add
ins
ror
outs
dec
or
or
push
cmps
jae
imul
jmp
xchg
pop
pop
sub
cmp
cs
lea
adc
lock
add
and
mov
(bad)
loopne
add
(bad)
fbstp
xchg
cmps
call
xchg
push
sub
shl
xchg
out
and
mov
and
cmp
or
sbb
ins
cmovg
clc
push
dec
or
aad
or
fiadd
push
adc
pusha
dec
in
mov
mov
mov
in
push
jo
xchg
jmp
and
push
add
test
inc
mov
push
or
rol
add
xchg
mov
add
dec
imul
in
add
rol
pop
fsubr
loopne
cmp
pushf
movs
push
je
imul
pop
mov
cmp
adc
arpl
rol
popa
movs
adc
pop
pop
push
mov
daa
bound
rcl
mov
push
inc
sbb
lods
jae
pop
sbb
mov
or
nop
xor
dec
pop
jo
sar
push
cmp
xchg
cmp
dec
jle
sbb
dec
gs
xlat
cmps
outs
mov
mov
sub
pop
xor
loope
pusha
inc
dec
scas
ins
and
test
fsub
adc
and
pop
fwait
sldt
push
mov
inc
sbb
es
push
shl
out
sahf
adc
lods
sbb
out
mov
or
das
cmp
adc
or
add
inc
and
cwde
sbb
dec
pop
psubusb
clc
push
inc
jb
cmp
inc
and
enter
adc
imul
fcom
or
adc
add
test
jecxz
add
enter
push
retf
out
push
into
adc
test
retf
or
outs
add
jle
xchg
push
jns
and
xchg
dec
call
or
push
inc
(bad)
mov
lods
call
push
lds
xor
push
add
add
inc
loope
dec
rol
sbb
sub
mov
retf
or
xor
inc
add
dec
call
jg
mov
jne
add
mov
dec
push
out
mov
add
add
push
sub
add
ins
cmps
inc
and
add
xchg
or
and
sub
inc
xchg
mov
ror
lahf
jne
sbb
push
enter
dec
cmp
mov
or
push
call
add
mov
dec
inc
adc
in
adc
adc
push
mov
icebp
adc
shl
push
lods
repz
sub
push
out
add
call
add
or
cmp
or
or
sbb
sbb
and
sub
adc
shl
inc
test
mov
sbb
inc
xchg
jnp
and
cmc
sahf
sub
fistp
setle
cmp
sbb
je
adc
adc
sahf
push
xor
popa
or
mov
dec
push
sub
xor
or
jecxz
pop
not
push
inc
push
mov
and
ret
cmp
push
and
push
enter
imul
test
adc
test
and
jae
adc
fsub
rol
nop
jbe
test
mov
dec
int
in
(bad)
adc
std
pop
inc
repnz
mul
cmp
lahf
fdiv
add
pop
iret
pop
test
fadd
retf
pushf
scas
js
dec
inc
ds
and
dec
loopne
dec
and
stc
inc
adc
and
mov
push
and
add
mov
inc
js
fdiv
scas
xchg
ins
push
inc
cmp
mov
mov
xchg
or
in
sbb
inc
add
or
nop
scas
xchg
inc
or
aas
(bad)
mov
push
test
xchg
lock
xchg
stc
sub
xchg
js
dec
test
dec
sub
rol
retf
je
les
in
mov
mov
xchg
dec
sbb
enter
xor
inc
aad
xchg
push
movs
xchg
sbb
pusha
add
dec
inc
add
mov
repnz
xor
pop
sbb
xor
push
jle
pop
je
inc
sub
pop
or
inc
xor
dec
fadd
jbe
xchg
out
xchg
xchg
xchg
dec
jns
mov
inc
loopne
add
and
in
cmp
fsubr
fist
push
cmc
pop
test
enter
retf
gs
adc
xor
sahf
push
aam
mov
data16
test
sbb
xor
mov
jo
ret
enter
xor
ins
outs
scas
in
lds
(bad)
and
jo
push
dec
outs
dec
es
add
push
fisub
add
hlt
psubb
das
push
gs
add
push
xor
pop
jnp
add
xchg
stc
adc
loopne
add
sub
sub
xor
loope
arpl
cmp
rol
jg
push
pop
fild
pop
(bad)
or
adc
in
loopne
add
or
jl
sub
cmps
movs
loopne
loope
test
retf
(bad)
sub
mov
test
push
and
hlt
data16
stc
ss
daa
push
call
push
sub
adc
xor
ins
or
sub
pop
inc
imul
push
cmps
push
or
pushf
std
xor
add
and
inc
mov
in
push
dec
cmp
push
ror
pusha
dec
scas
pop
cmp
mov
push
mov
push
or
inc
add
dec
ret
leave
dec
daa
cmp
or
and
test
push
fxsave
nop
adc
mov
inc
adc
push
inc
push
inc
adc
pusha
dec
scas
inc
push
pop
push
add
ins
push
xor
push
(bad)
sbb
pop
xor
sbb
jo
add
sbb
lds
xchg
rol
and
and
adc
stos
or
add
adc
pop
pop
retf
jbe
mov
and
push
jbe
dec
es
and
and
mov
daa
sbb
xchg
pop
sub
dec
dec
pop
enter
sub
sub
leave
adc
pop
jecxz
push
xor
bound
rol
xor
and
inc
stc
inc
sub
sub
push
push
mov
or
mov
sbb
loopne
ins
xchg
xchg
adc
int
xor
push
hlt
xor
dec
addr16
and
es
ins
pusha
and
leave
adc
enter
ds
and
inc
leave
push
jb
inc
inc
ins
loopne
pop
inc
aas
and
dec
adc
pop
adc
inc
inc
and
dec
mov
inc
and
enter
dec
push
dec
cs
dec
mov
push
stos
dec
ror
xchg
cs
pop
and
push
mov
mov
sub
xchg
push
xchg
nop
inc
es
dec
mov
ss
dec
loope
inc
movs
and
fs
add
adc
push
add
pop
test
rcr
jecxz
xor
ins
fcomp
push
lds
dec
add
addr16
push
sbb
dec
push
adc
add
push
loopne
adc
or
cmp
push
hlt
push
sbb
pop
jecxz
in
mov
xor
sbb
icebp
push
pop
fld
aam
pop
sub
inc
sbb
rcl
pop
nop
and
fcom
nop
sub
sub
sub
sub
cmps
xchg
or
sbb
or
data16
pop
(bad)
hlt
rcl
mov
js
add
int
cmc
push
pop
pusha
and
pop
push
push
jo
pusha
push
push
add
mov
pop
ins
and
enter
imul
enter
or
outs
repnz
in
push
xor
push
outs
add
or
push
ins
icebp
sbb
pop
ins
mov
push
push
leave
jo
lock
push
add
adc
inc
mov
dec
push
or
pop
jns
call
add
cmps
pop
test
fld
adc
shl
inc
fadd
mov
nop
and
sbb
test
ret
inc
in
sbb
mov
repnz
nop
js
popa
add
inc
xchg
inc
push
inc
cs
dec
mov
jge
test
sub
and
sub
test
or
cs
cmp
loop
adc
mov
mov
xchg
mov
adc
mov
xor
in
add
sbb
mov
pusha
cmc
lea
sbb
mov
and
cwde
cwde
mov
jae
mov
and
and
xchg
adc
enter
xchg
or
ret
xchg
test
and
adc
sbb
fcom
push
fwait
sbb
sub
add
les
adc
sahf
add
add
lahf
mov
mov
in
mov
movs
cmp
add
movs
cmps
shr
and
stos
adc
push
inc
mov
sbb
xlat
inc
ss
test
and
mov
test
sub
stc
mov
push
push
fwait
sub
sbb
xchg
in
pushf
and
mov
mov
jl
loopne
jae
pop
push
xchg
lods
sub
rcr
stos
sub
out
rcr
popa
pushf
scas
leave
rcl
cmp
out
mov
or
and
mov
inc
xchg
sbb
dec
imul
repz
rol
pushf
and
cmp
(bad)
sbb
push
fild
adc
add
call
add
movs
pop
nop
dec
or
sysret
sub
add
sbb
test
add
or
or
es
jb
jb
sub
xor
jb
sub
add
inc
add
in
mov
stos
in
xor
add
inc
add
cmp
xor
xchg
mov
aaa
cdq
dec
cs
cmp
add
adc
inc
jb
cmp
xor
and
inc
jb
xor
add
cmp
inc
add
add
inc
dec
add
sub
dec
dec
and
dec
dec
or
dec
dec
and
fs
push
movs
xchg
test
bound
and
sbb
and
es
push
sbb
leave
pop
push
xor
push
sbb
push
or
fs
sbb
data16
dec
sub
push
or
dec
sub
outs
dec
sbb
test
or
or
je
pop
sbb
and
push
inc
cs
jns
mov
inc
jnp
in
cdq
dec
jge
adc
call
test
out
in
sub
add
or
push
test
xchg
mov
mov
mov
sbb
mov
inc
cwde
xchg
push
and
sbb
lds
xchg
xchg
scas
inc
scas
inc
xchg
cwde
mov
inc
cdq
call
inc
xchg
pushf
popf
dec
push
inc
push
sahf
lahf
sub
add
add
mov
in
movs
sbb
xor
outs
cmps
jb
jb
test
enter
stos
stos
leave
add
and
nop
or
add
out
pop
push
or
xchg
nop
mov
xchg
adc
inc
inc
cmp
push
enter
and
sbb
and
push
xchg
jl
ins
pop
dec
add
gs
mov
and
or
movs
sbb
sub
fiadd
inc
push
inc
add
sub
mov
or
mov
mov
dec
sar
ret
dec
and
fld
add
adc
ja
push
ins
inc
inc
fisttp
addr16
push
add
dec
ins
inc
cmp
xor
dec
jmp
and
cmp
ins
sbb
lock
mov
aas
int3
sbb
clc
jns
cdq
jp
sbb
dec
das
sbb
test
xor
cmp
dec
add
xor
add
clc
retf
hlt
push
shr
push
sbb
rcl
add
into
mov
add
cmp
ins
sbb
mov
add
fdiv
push
arpl
and
adc
rcl
stc
inc
mov
inc
cwde
ret
pop
jns
bound
(bad)
retf
jecxz
sub
popf
in
aas
or
mov
inc
and
adc
inc
and
in
pop
dec
or
xor
inc
add
or
in
xchg
pop
dec
ins
bound
pop
inc
or
or
add
push
sub
jg
mov
xor
adc
inc
push
fs
pusha
sub
or
ret
or
mov
(bad)
push
jp
push
push
pop
add
test
nop
dec
nop
rcr
and
sub
adc
dec
push
pushf
push
jno
mov
push
punpckhbw
push
sbb
pop
xor
inc
inc
sbb
ins
je
pop
adc
push
xor
jo
and
fiadd
pushf
mov
fldenv
mov
mov
mov
bound
or
and
mov
leave
mov
adc
wrmsr
dec
xchg
and
sbb
fs
push
mov
andps
xor
cmovo
push
nop
aaa
pop
js
adc
sub
cmps
jns
xor
je
pop
xchg
mov
mov
inc
push
daa
dec
hlt
xchg
rcl
pop
add
das
ror
push
adc
test
les
adc
data16
clc
nop
fadd
sub
push
loop
test
push
jbe
push
push
push
sbb
push
std
cmp
jae
fs
adc
dec
add
xor
add
ds
repnz
add
dec
fdiv
and
add
sub
adc
mov
sub
iret
inc
repnz
repnz
jb
fist
aam
(bad)
ffreep
xchg
inc
jns
int
jns
nop
sub
adc
aas
add
in
add
pop
xor
dec
or
cmp
retf
xor
inc
ja
push
nop
out
xchg
push
xor
fwait
sbb
push
test
adc
and
mov
and
call
push
test
bsf
xchg
cmc
enter
fidivr
mov
push
enter
lods
add
stos
add
ficom
aam
add
cmp
cmp
(bad)
xchg
(bad)
inc
mov
ss
add
lock
in
pop
enter
add
mov
add
pop
xchg
dec
push
sub
rol
ror
sub
adc
xchg
test
and
dec
imul
adc
ror
cmp
cmp
inc
or
mov
sub
dec
(bad)
(bad)
fcom
in
xchg
dec
pop
xchg
adc
inc
pusha
out
test
or
je
rcl
ss
add
mov
mov
or
and
popa
enter
pop
push
in
inc
push
and
push
pop
adc
jbe
push
aam
jl
test
les
sbb
add
ins
sub
fild
cmps
dec
jo
outs
test
std
mov
sar
adc
div
mov
cmp
push
jns
sbb
xchg
je
pop
mov
cs
test
pushf
xchg
daa
xchg
(bad)
(bad)
(bad)
ror
and
mov
mov
push
addr16
(bad)
jo
adc
mov
std
add
mov
pop
or
nop
or
dec
mov
mov
fs
add
pop
cmp
adc
jnp
jp
adc
mov
push
adc
nop
inc
add
xlat
mov
and
les
xor
or
dec
fcomp
aaa
inc
lods
sbb
jg
sbb
pop
mov
inc
and
cmps
sbb
jbe
and
xchg
pop
fsubr
pusha
les
xchg
inc
cwde
inc
ins
pop
lea
xchg
mov
pop
push
fs
xchg
push
jl
xchg
sub
jl
mov
pop
xchg
xor
add
lods
cwde
jge
push
sub
jge
test
inc
mov
and
and
and
das
or
dec
hlt
or
mov
inc
lock
sbb
(bad)
xchg
or
pop
lods
pop
jnp
out
cmp
pop
adc
sbb
js
repnz
adc
add
mov
imul
fwait
pop
sbb
hlt
call
mov
sub
fcomp
sub
sbb
mov
inc
out
repnz
pusha
das
and
sbb
pop
movs
popa
push
push
je
nop
pmulhuw
dec
dec
inc
xlat
and
adc
dec
lock
adc
pop
lock
add
fcom
or
jl
add
inc
and
inc
add
dec
(bad)
call
dec
lock
push
(bad)
add
pusha
dec
fxsave
add
lock
add
push
sbb
mov
mov
pop
cmp
(bad)
pop
mov
pop
sub
shl
mov
sar
push
je
cmovl
sub
sub
mov
nop
cs
dec
xchg
mov
sub
dec
mov
add
call
xor
cmp
sbb
int
mov
xor
push
push
adc
adc
push
adc
xchg
jb
arpl
push
je
cli
mov
dec
test
adc
(bad)
rcr
cmp
or
adc
xor
adc
nop
xchg
idiv
xchg
dec
mov
sub
sbb
mov
jl
adc
in
cdq
push
fwait
(bad)
shl
mov
scas
lods
lods
punpckhdq
xchg
sbb
rol
xchg
pop
mov
adc
sar
jmp
push
jg
adc
ja
test
xchg
cmp
test
push
jmp
or
ds
and
loop
dec
(bad)
mov
loop
jns
lock
popa
cmps
push
mov
sub
loopne
sub
xchg
add
mov
out
push
sar
inc
inc
push
mov
call
and
movs
cmps
loop
pop
sar
adc
mov
lahf
or
mov
xor
fadd
out
sub
pop
loope
inc
dec
push
push
jb
lock
or
adc
pop
push
push
or
iret
xchg
idiv
mov
call
out
repz
mov
adc
mov
jecxz
xchg
repz
jecxz
in
push
stos
gs
dec
jg
push
or
or
mov
or
mov
mov
enter
xchg
pop
jbe
jne
(bad)
mov
jle
dec
mov
jl
add
or
dec
sub
mov
jg
enter
scas
nop
fldcw
dec
lea
shr
leave
xlat
sbb
mov
or
add
mov
dec
out
pop
add
mov
and
nop
xor
push
jg
dec
adc
cld
ret
inc
shl
inc
add
jge
retf
cs
mov
js
and
data16
add
imul
add
add
push
cmp
xor
in
adc
add
xor
sub
and
cmp
pop
ret
pushf
add
xor
ret
mov
js
sahf
inc
jl
adc
call
test
clc
(bad)
pop
mov
test
leave
adc
xchg
rcr
ins
dec
xor
enter
sub
imul
or
push
(bad)
test
and
xchg
push
sub
xchg
or
jecxz
and
popf
cwde
mov
add
push
(bad)
add
stos
dec
sahf
sub
dec
shl
jno
sub
movs
pop
call
(bad)
lock
mov
dec
loopne
xchg
pop
add
push
lock
pusha
push
fadd
xchg
lea
je
sbb
inc
dec
dec
popf
cmp
or
pusha
push
jbe
sbb
or
add
ficom
pop
adc
fdiv
fist
add
sub
jmp
les
cmp
sbb
and
push
rcl
inc
mov
pop
in
ucomiss
stos
test
or
xchg
call
and
inc
push
xchg
fs
jno
xchg
mov
push
repnz
push
mov
mul
pop
push
fmul
sti
adc
or
rol
mov
and
clc
pop
pop
lock
dec
rol
test
or
dec
or
jbe
lods
push
sbb
ja
jnp
xor
and
and
nop
mov
add
add
xor
mov
xchg
pushf
mov
enter
mov
mov
xchg
mov
enter
xchg
xchg
(bad)
outs
andps
mov
dec
dec
fimul
in
cmp
push
adc
inc
or
popf
popa
sbb
pop
sub
pop
clc
sub
jo
hlt
imul
inc
pop
or
in
mov
stos
test
loopne
psubq
ins
in
hlt
xchg
mov
test
mov
jns
add
arpl
js
pop
pop
div
pop
leave
popa
ins
xlat
and
nop
mov
hlt
inc
push
or
mov
pop
(bad)
push
stos
or
inc
add
js
mov
cdq
ins
jecxz
ins
xor
pushf
dec
mov
nop
sets
into
ja
add
cmp
dec
imul
leave
sub
push
xchg
or
out
(bad)
xor
dec
movs
jmp
test
mov
adc
cdq
into
add
(bad)
movs
adc
outs
sbb
inc
sbb
inc
iret
shr
or
mov
outs
xor
outs
hlt
scas
repz
jmp
xor
mov
add
sbb
into
push
adc
sub
sub
rcr
cmp
push
add
mov
adc
ss
adc
sar
xor
add
sub
jo
test
push
jne
add
or
in
push
xlat
or
mov
cmp
xor
loope
and
adc
mov
imul
sbb
cdq
popa
jg
push
jle
cmps
ins
add
dec
mov
pusha
inc
and
jp
es
imul
and
popa
pop
std
push
adc
gs
pop
pop
xor
loop
sbb
mov
adc
mov
shl
inc
shr
cmp
add
or
add
jmp
pop
cmp
adc
sbb
cmp
ret
mov
mov
dec
push
add
inc
inc
mov
add
sub
dec
push
arpl
add
add
add
and
push
shl
xor
cmp
(bad)
dec
clc
cmp
and
mov
xor
call
dec
jno
retf
xor
xor
add
xchg
ds
ret
stos
iret
dec
jno
mov
xor
sub
stos
pop
jbe
neg
out
add
arpl
cmp
lock
imul
loopne
cmp
shr
pop
fnsave
aam
pop
fdivr
sub
push
cmp
lock
rcl
jg
out
or
fwait
and
xor
xchg
sub
sub
jmp
jae
sbb
rol
fistp
popa
imul
adc
xor
or
in
sub
mov
mov
or
fwait
jmp
or
mov
bound
add
inc
cmp
es
mov
sar
sub
mov
add
jg
fistp
leave
xor
and
dec
pusha
xchg
and
inc
add
inc
in
es
into
daa
lock
xor
cmp
and
mov
jns
and
mov
adc
fld
retf
xchg
mov
inc
mov
or
lock
push
mov
sbb
xchg
pop
and
sbb
push
(bad)
and
xchg
xor
xchg
and
bound
in
loop
add
mov
ret
sub
sub
mov
inc
cs
sub
and
pusha
inc
inc
inc
das
add
scas
adc
push
or
call
sbb
sbb
jl
sbb
fnstcw
jg
dec
mov
mov
les
stc
(bad)
jmp
or
xchg
add
add
xor
jne
add
in
and
jne
push
add
stos
cmp
test
jmp
or
pop
inc
jae
xchg
or
nop
mov
sbb
add
pop
in
jb
and
or
mov
nop
in
xor
jo
out
cmp
xchg
test
mov
or
pop
lahf
cmp
pop
fadd
pop
ss
fs
clc
or
sbb
pop
loop
ror
cmps
outs
retf
sbb
push
xchg
dec
cmps
or
idiv
push
adc
mov
adc
ret
mov
xchg
push
leave
and
or
and
sub
pop
jb
inc
inc
dec
in
pop
and
cmp
(bad)
and
int
mov
mov
hlt
jno
stc
pop
mov
lock
dec
nop
lods
xor
or
cmp
mov
nop
add
shl
push
jne
fwait
push
lock
or
call
ret
test
iret
xor
rcr
fiadd
pusha
add
add
movs
ja
xor
sub
enter
add
cmp
je
pusha
dec
or
mov
cmp
cmp
push
cmp
je
inc
and
js
add
mov
adc
or
add
cwde
(bad)
jnp
leave
je
(bad)
ja
sbb
xchg
ins
out
mov
mov
lea
cwde
(bad)
ins
jecxz
mov
xchg
ss
loop
mov
test
jle
xchg
pushf
cmc
clc
loop
mov
js
fisubr
hlt
call
mov
or
fmul
pop
push
scas
pop
sbb
retf
pop
sub
or
sbb
(bad)
jbe
in
mov
pop
pop
and
add
ds
adc
pop
pop
jle
lods
leave
enter
push
add
xchg
mov
or
add
and
rcl
ds
call
imul
push
adc
stos
jns
ficom
sar
jbe
hlt
les
xor
dec
ja
sub
pop
shr
add
pop
add
inc
call
movs
sahf
ins
jle
sub
ins
jge
sub
je
or
cmp
cmp
mov
sub
add
gs
int3
pop
les
fild
dec
icebp
sbb
ins
dec
fisttp
int3
mov
hlt
stos
or
mov
and
cdq
sub
mov
aad
adc
jge
push
ss
jno
sbb
sar
call
cs
cmp
sub
rol
add
adc
xor
push
or
adc
inc
sub
(bad)
cmc
nop
movs
fndisi(8087
or
add
ficomp
adc
pop
jo
pusha
ss
jecxz
cdq
dec
cs
xor
jo
sbb
jno
leave
xchg
pop
adc
ins
shr
aam
xor
inc
mov
jge
int3
xor
dec
xor
int3
int3
int3
ins
test
and
das
push
push
xor
rcr
xor
dec
add
xchg
mov
jne
daa
les
sub
imul
sbb
sub
cmp
cld
sbb
jns
ins
push
outs
jne
jae
mov
adc
dec
mov
addr16
push
push
mov
call
adc
sub
jmp
fadd
mov
jmp
sub
cs
sbb
in
das
push
sub
push
add
push
xchg
iret
enter
imul
add
ss
push
sbb
repnz
sub
and
push
jg
add
stos
loop
enter
xor
pop
xchg
jne
xchg
push
mov
sbb
cmp
das
inc
sub
xchg
gs
mov
and
cli
sub
ret
scas
dec
pop
xor
and
or
push
test
mov
ins
sbb
or
mov
inc
sbb
test
and
je
mov
mov
add
push
clc
adc
pop
(bad)
cmps
mov
cwde
add
cmp
push
jmp
mov
xchg
adc
test
pushf
movs
lea
sub
stos
add
popa
cmp
mov
add
jb
mov
leave
ret
add
pop
and
jp
mov
jl
js
push
repnz
test
add
ret
stos
mov
ja
xor
test
jmp
xor
mov
sbb
add
sub
inc
enter
leave
add
adc
loopne
sar
repnz
jecxz
loopne
fcomp
sub
movs
mov
hlt
dec
xchg
jecxz
cmps
push
xchg
add
nop
mov
nop
mov
push
loope
inc
jge
or
push
in
mov
adc
movs
int3
nop
das
push
mov
cmp
les
mov
pop
adc
xchg
shl
inc
imul
pop
jmp
inc
jmp
push
sub
push
movs
add
frstor
sub
xor
pop
imul
mov
xor
cwde
add
or
sti
adc
fisttp
pusha
xor
mov
adc
aaa
jmp
adc
test
pop
cmp
mov
leavew
or
and
fldenv
adc
dec
xor
mov
dec
push
aaa
sub
ret
mov
dec
loope
leave
jo
mov
fxtract
lea
movs
(bad)
mov
sub
xor
clc
out
adc
xchg
in
fst
or
aad
dec
cmc
adc
mov
add
push
jns
dec
jge
outs
mov
push
lock
push
jmp
or
lods
mov
retf
out
popa
pusha
push
jae
add
and
adc
test
xor
xor
adc
rol
adc
repnz
mov
cmp
rcl
sbb
and
push
push
push
adc
lock
fs
and
in
in
xor
les
cmp
sub
sbb
nop
nop
fnstenv
pop
loopne
fdiv
dec
or
cdq
and
or
or
inc
jo
jb
std
call
add
aam
jbe
or
and
jmp
dec
pop
ret
push
cmp
fmul
xchg
mov
jge
push
pop
adc
and
sti
jo
xchg
xor
pop
dec
adc
adc
cmps
arpl
mov
dec
fild
inc
stos
pop
sar
ja
mov
push
dec
dec
xchg
inc
xchg
inc
or
cmp
add
out
fsub
pop
jmp
pushf
(bad)
xor
xlat
xlat
or
cmp
pop
mov
mov
nop
rol
int3
mov
sub
in
mov
pop
add
test
nop
adc
popa
jecxz
and
mov
stos
jns
add
inc
adc
sbb
dec
enter
xchg
shl
cli
gs
dec
xlat
pop
cmp
xchg
mov
mov
mov
mov
repnz
and
xor
sub
test
add
add
aam
clc
jp
jmp
jecxz
xchg
fisub
mov
xor
mov
push
mov
pop
aad
dec
shl
inc
mov
lock
jns
mov
out
sbb
xchg
fld
inc
sub
enter
in
hlt
cmp
call
ret
xor
xor
popa
nop
and
fs
fmul
xor
fwait
jl
fcomp
xor
xor
aam
xor
xor
rol
push
(bad)
and
mov
enter
mov
(bad)
les
cmp
pop
dec
xor
ret
ss
mov
mov
aaa
call
push
push
pop
pushf
(bad)
ja
jge
jo
or
or
stos
and
dec
pop
jns
xchg
mov
jmp
(bad)
rcl
pusha
popa
in
jmp
xchg
jmp
int
mov
addr16
jbe
imul
inc
inc
and
and
cmc
retf
or
jb
push
cmp
push
(bad)
cmp
xchg
sbb
aam
sbb
mov
mov
cmp
pavgb
(bad)
mov
pcmpgtb
xor
xor
loope
jmp
or
jne
inc
jmp
sar
pusha
addr16
sbb
inc
js
push
je
js
psllw
pusha
xlat
sti
sub
neg
and
xchg
pop
mov
adc
inc
ror
dec
dec
sti
sub
imul
push
loop
leave
movs
pop
add
inc
ds
stos
adc
stos
push
repnz
sub
mov
lods
test
inc
add
cmp
add
xchg
imul
add
test
in
rcr
in
add
push
ret
pop
(bad)
jno
xor
mov
sub
call
pop
lods
cmp
fwait
adc
cmp
jne
add
push
je
mov
add
in
or
repnz
mov
pop
adc
adc
mov
push
jmp
pop
jecxz
and
jle
inc
pop
mov
mov
in
or
mov
cdq
add
sahf
cmp
xor
fdiv
int
or
pop
cwde
cmp
pop
jne
and
(bad)
fsub
inc
je
xchg
xchg
pop
test
cmp
stos
mov
xor
inc
or
fcomp
mov
add
enter
mov
pop
push
pop
ins
sbb
sub
ds
aas
fimul
inc
push
mov
xchg
and
inc
adc
pop
shufps
jbe
enter
jne
sbb
push
xchg
inc
sbb
es
mov
fadd
dec
test
and
adc
add
add
xor
xor
jb
adc
out
test
mov
sbb
mov
into
adc
shl
add
mov
mov
pop
push
push
adc
retf
mov
sbb
adc
cmp
mov
dec
xor
add
add
adc
mov
add
loope
adc
in
dec
add
jnp
add
shr
stc
push
inc
pushf
ja
(bad)
pause
pop
pop
xchg
add
in
and
ja
popa
add
pop
outs
ret
pop
push
cs
test
stos
xor
sub
lock
sbb
test
or
adc
not
addr16
fsubr
or
cmp
dec
ss
nop
dec
scas
(bad)
inc
cs
test
jno
adc
xor
add
pusha
or
out
cmc
or
add
cmp
dec
lock
jns
mov
loope
les
and
pop
add
push
jge
mov
inc
mov
neg
ins
sbb
mov
or
jne
push
and
xor
jle
push
add
ficom
outs
dec
call
jl
mov
push
cwde
enter
xor
loope
test
(bad)
in
das
lods
mov
and
cmp
(bad)
mov
mov
adc
inc
sub
or
sbb
adc
jne
lods
mov
push
dec
std
add
jmp
xor
mov
mov
dec
or
inc
push
push
or
daa
nop
xchg
(bad)
or
bound
push
push
jbe
mov
sub
or
(bad)
fs
scas
rcr
mov
xor
jne
jecxz
or
jae
push
test
sbb
inc
add
or
dec
call
lahf
add
dec
inc
outs
add
add
popa
xor
cmp
or
push
pop
or
sub
add
add
sbb
hlt
jmp
jge
bnd
cdq
es
mov
(bad)
sbb
fist
pushf
aam
icebp
adc
jbe
add
adc
push
ins
xor
cmp
push
enter
mov
test
xor
push
jo
int
mov
inc
add
into
and
repnz
pop
mov
mov
mov
push
push
push
add
or
dec
arpl
loopne
dec
xchg
popa
add
add
xchg
pop
loop
push
ficomp
add
test
daa
popa
sub
pop
sbb
sbb
add
pushf
sub
shl
mov
aaa
out
sbb
lock
(bad)
(bad)
mov
inc
or
data16
test
add
arpl
xchg
pop
inc
fadd
movs
iret
arpl
movs
out
jns
jle
ins
add
add
sbb
rcr
pusha
add
sub
lahf
or
adc
adc
sub
push
xchg
xchg
or
aam
and
stc
(bad)
rol
adc
dec
dec
mov
jmp
sub
lea
lock
cs
sub
add
pop
jp
and
or
or
push
ss
pop
or
mov
imul
inc
jecxz
shl
jmp
add
mov
mov
sbb
ins
mov
es
lods
sbb
or
dec
push
pop
adc
test
or
add
push
push
lods
mov
hlt
add
call
or
mov
ds
push
jns
pusha
push
or
rol
xchg
nop
das
int3
xor
(bad)
daa
adc
mov
and
adc
dec
lods
push
sub
es
xor
aas
mov
mov
inc
fidiv
add
mov
push
pushw
mov
or
fwait
cmp
loopne
adc
dec
cmp
and
adc
fwait
(bad)
xor
in
push
mov
fdiv
int3
cmp
adc
sbb
in
jnp
adc
sbb
xchg
sar
mov
xchg
ins
push
gs
mov
ins
movs
(bad)
pop
cdq
inc
xchg
call
ins
or
iret
jo
mov
call
adc
mov
or
or
add
sbb
pop
mov
iret
in
push
mov
not
mov
inc
rol
repnz
out
or
in
adc
pop
out
cmp
inc
and
xor
call
hlt
call
(bad)
loop
add
dec
mov
fist
fist
in
in
dec
cs
call
lods
sbb
push
jecxz
bound
clc
fild
in
fdivr
pop
inc
sbb
pop
push
xor
adc
mov
cmps
out
sub
inc
sahf
retf
sub
cmc
imul
mov
lods
das
jp
xor
or
jmp
push
pop
cs
cli
ret
dec
add
and
jp
xchg
jno
(bad)
rcl
and
mov
dec
push
and
xchg
fimul
sbb
hlt
stos
das
cmp
push
xchg
sbb
ret
add
loope
add
xchg
xor
lods
xor
mov
in
pop
and
or
add
or
inc
in
rol
add
ja
jmp
inc
bound
or
pop
or
jmp
imul
and
pop
jmp
add
pushf
xchg
push
or
retf
call
lea
add
or
scas
and
pop
shl
xor
dec
cmp
ret
or
jl
es
mov
add
sbb
and
add
rcl
xor
popf
fiadd
lock
add
fsubr
out
dec
lahf
jmp
adc
pushf
or
aam
and
inc
movs
fnstsw
push
add
cmp
lahf
push
ret
hlt
scas
pop
sbb
retf
bound
add
repz
mov
loopne
ja
mov
jp
cmp
and
push
cmp
or
sbb
cmp
rcl
arpl
adc
mov
mov
bound
jne
push
or
add
jecxz
or
ret
out
and
mov
mov
and
test
and
inc
and
fisub
mov
(bad)
out
or
lods
lea
leave
test
mov
test
and
inc
cmp
loopne
in
and
add
loop
jmp
fxch
aam
cmp
ret
fmul
add
out
adc
xchg
and
js
shr
hlt
sbb
sbb
sbb
mov
fcom
movs
xchg
sub
jmp
dec
lods
iret
movs
and
push
aaa
push
push
repnz
in
mov
add
dec
jns
out
enter
rol
repnz
js
push
je
push
sbb
stos
sub
enter
les
movs
inc
sbb
mov
cmps
jge
push
mov
pop
test
fadd
lods
test
adc
inc
and
lock
shr
and
add
popa
adc
rcl
lea
nop
fnsetpm(287
outs
in
push
fild
std
and
mov
or
dec
repz
fwait
dec
lods
pop
and
push
add
pop
lea
scas
shl
das
sbb
mov
dec
xor
mov
mov
jnp
mov
js
nop
leave
and
mov
add
cmp
adc
sbb
add
daa
adc
cmp
fiadd
jmp
adc
or
lea
mov
es
adc
cmp
cdq
mov
inc
add
or
sub
cld
scas
add
cwde
cmp
xor
jmp
(bad)
or
dec
pop
fisttp
mov
sbb
mov
pusha
add
sub
lds
cmps
xchg
inc
add
lock
push
inc
fld
shl
add
xor
cmp
or
imul
lahf
cmp
mov
xor
outs
xchg
or
dec
cmp
cmp
stos
pop
and
adc
leave
jne
mov
sbb
jae
cli
inc
xor
mov
and
(bad)
push
int
push
jecxz
pop
cmps
popf
shl
ret
arpl
loope
hlt
out
pop
test
(bad)
sti
pop
shl
(bad)
cmp
pop
movs
enter
movs
push
in
add
jne
aam
aad
adc
dec
or
and
sub
test
(bad)
sub
lods
and
inc
hlt
mov
push
pop
add
popa
sbb
jns
sub
test
sub
loopne
adc
push
add
lock
or
fsub
xor
(bad)
jg
and
(bad)
pop
lock
(bad)
jmp
mov
stos
xchg
add
cmps
mov
and
leave
xchg
push
add
out
in
sub
(bad)
mov
sub
clc
inc
push
cmps
movs
dec
stos
adc
ins
dec
inc
shl
adc
mov
xchg
or
stc
pop
inc
inc
push
rcl
mov
and
push
xor
pop
inc
sbb
jecxz
xor
fs
aaa
es
cmp
bound
jno
int
jb
jl
mov
sbb
loop
pop
nop
aam
mov
push
mov
or
les
inc
call
lea
movs
sbb
pop
fld
pop
sub
push
xchg
xchg
jp
in
or
push
pop
sbb
or
or
bound
adc
dec
mov
push
adc
movups
cmp
lds
sahf
or
sbb
sbb
enter
lock
add
jecxz
xor
inc
adc
test
movs
test
lods
xchg
xor
add
xor
adc
(bad)
imul
jl
mov
and
xchg
add
or
fs
add
add
movs
add
(bad)
imul
leave
pop
push
push
or
not
inc
mov
loop
pop
adc
jmp
pop
jp
pushw
pop
pop
enter
fadd
ss
int3
and
push
inc
das
or
and
dec
add
push
push
loope
xlat
pushf
cmp
and
repnz
add
adc
mov
sub
mov
repnz
or
sbb
add
xchg
xor
or
mov
sbb
mov
mov
loopne
call
iret
or
test
fdiv
pop
or
xor
push
fwait
and
and
or
retf
movups
inc
adc
and
sbb
jmp
xor
push
jns
sbb
hlt
dec
xchg
imul
test
cmp
or
dec
lods
mov
sbb
mov
ror
(bad)
popa
sub
popf
dec
pop
push
call
dec
inc
mov
hlt
sbb
inc
clc
je
sub
push
jne
jne
sub
and
sbb
lahf
jno
adc
mov
mov
aas
xor
out
add
(bad)
and
and
fnstenv
loope
xor
test
iret
and
add
ins
or
daa
push
inc
sbb
sbb
(bad)
mov
mov
test
(bad)
cmp
adc
and
jne
xor
ror
aas
and
dec
push
les
aad
xlat
das
int3
test
pop
mov
scas
dec
dec
es
popa
and
cwde
nop
xchg
mov
dec
add
out
xchg
in
cwde
and
test
push
pop
(bad)
add
nop
mov
je
adc
push
pop
in
popa
push
cmp
cmps
push
push
xor
or
lahf
or
call
in
mov
fbstp
inc
cdq
inc
inc
gs
and
jle
push
inc
retf
jae
test
pop
push
push
inc
icebp
cs
sbb
lods
ret
xchg
jo
in
mov
mov
inc
adc
stc
and
xor
daa
das
inc
jmp
and
arpl
push
sub
xchg
dec
out
test
inc
jo
enter
sub
push
dec
outs
sbb
mov
add
cmp
fistp
and
add
in
fst
mov
xor
or
sbb
jno
xchg
ret
popa
or
adc
xchg
sbb
or
mov
adc
xchg
add
pop
mov
sbb
adc
pop
adc
push
or
ja
inc
or
mov
jnp
sub
ins
loopne
inc
xchg
nop
inc
mov
mov
mov
or
add
and
dec
push
leave
lods
mov
add
out
and
fnstcw
or
mov
aam
enter
mov
push
sbb
imul
inc
cwde
hlt
add
mov
cdq
ror
xchg
sahf
inc
push
add
ret
mov
sub
adc
adc
out
push
sub
leave
push
dec
mov
or
fidiv
sbb
and
fwait
and
imul
dec
repz
dec
(bad)
(bad)
sbb
and
xchg
mov
and
idiv
xchg
sub
add
inc
or
xchg
fsub
inc
push
pop
sub
ins
cmp
fild
xor
das
adc
push
test
mov
xchg
jle
push
push
aas
hlt
test
mov
rol
sbb
inc
jo
dec
ret
adc
shl
loope
mov
xchg
fcmovnb
cmp
sbb
mov
push
push
fs
sbb
sub
sbb
sbb
inc
loopne
adc
adc
mov
pop
scas
xchg
dec
push
aaa
sub
shl
mov
cmp
sbb
lods
inc
jl
jmp
mov
call
jo
add
cmp
add
and
mov
fwait
add
pop
adc
and
add
jmp
jb
or
sbb
ja
paddusb
jno
arpl
adc
test
push
mov
ret
adc
add
adc
xchg
ret
cmps
push
call
in
xor
cmps
xor
arpl
ja
add
xor
js
jb
lods
add
mov
adc
inc
imul
fwait
sbb
xchg
xabort
clc
or
es
or
adc
sub
imul
or
mov
sub
int
jmp
push
inc
add
fs
pop
in
xchg
bound
gs
imul
mov
shl
int3
sub
sub
mov
pop
push
xor
sti
and
mov
cmp
adc
dec
lds
xchg
packuswb
adc
jg
sub
movs
pop
xchg
or
dec
push
cmp
inc
cmp
inc
jmp
je
and
or
add
xchg
hlt
jbe
jne
jns
mov
add
shl
pop
and
and
or
test
fsubr
cwde
not
in
or
mov
data16
in
mov
test
jmp
xor
and
sub
loope
mov
cmp
in
push
outs
mov
mov
inc
aam
xor
inc
fidivr
push
and
xchg
rol
sub
rcr
jle
jl
stos
mov
and
enter
jg
popa
nop
inc
jmp
and
pop
or
jb
or
(bad)
jge
cmps
loopne
push
mov
xor
ror
mov
int3
add
js
mov
push
nop
out
(bad)
fnop
fldl2t
xchg
or
ret
sbb
test
sbb
add
sbb
add
loop
call
xchg
and
adc
test
mov
pop
and
or
lods
jmp
push
gs
pusha
(bad)
xchg
mov
int
xchg
and
adc
push
cdq
push
inc
rol
sbb
push
dec
inc
pop
lea
xchg
xchg
dec
push
mov
std
pop
xor
add
add
xchg
lods
or
push
or
pop
add
adc
(bad)
cmp
pop
test
addr16
loop
into
movs
(bad)
pop
pop
push
push
inc
gs
add
fadd
aaa
add
xchg
jo
fsub
mov
jmp
pop
or
add
cwde
add
sbb
or
jnp
mov
sub
dec
leave
or
call
popa
fnstcw
pusha
xor
inc
iret
gs
cwde
enter
loop
sub
mov
sub
jo
ins
mov
add
pop
es
xor
shl
ret
and
mov
or
lea
leave
retf
int
shl
daa
into
cmp
popa
les
cmp
adc
stos
mov
retf
stc
mov
leave
into
mov
add
inc
inc
and
mov
xor
or
push
mov
jae
mov
in
rcr
jb
sbb
or
inc
rcl
inc
inc
adc
iret
jb
or
jmp
adc
aam
sbb
test
pop
out
xchg
mov
iret
add
cmp
add
adc
mov
lock
popf
cs
(bad)
cmps
(bad)
xchg
add
push
xchg
call
nop
add
mov
or
ret
stos
mov
mov
(bad)
cmp
adc
inc
jne
jae
mov
pushf
xor
add
and
(bad)
cmp
and
pop
ins
ins
push
mov
jae
loope
adc
sbb
mov
xor
(bad)
jb
es
jb
sbb
pop
cmp
and
sahf
push
push
cmp
lahf
je
repnz
xchg
(bad)
idiv
sbb
mov
jge
add
mov
add
bound
cmps
leave
sbb
cld
adc
fadd
sbb
sub
sub
or
loopne
sbb
rcr
(bad)
fstp
or
cs
push
push
push
out
mov
mov
xor
gs
test
adc
mov
out
cmp
lds
ins
mov
movs
mov
movzx
push
inc
lock
and
ds
daa
cmp
rol
xor
add
add
pop
jmp
lds
fcom
or
fwait
sub
jbe
pop
sub
and
dec
cmp
add
jb
lods
(bad)
leave
sbb
les
mov
lods
aaa
mov
cmp
dec
xchg
hlt
call
outs
retf
pop
ins
bound
ja
mov
inc
xchg
sub
mov
imul
retf
jp
in
jne
lds
imul
ror
popf
pop
inc
dec
dec
adc
push
pop
cmp
jg
push
lods
mov
sbb
pop
push
add
jmp
or
stos
pusha
xor
sahf
add
nop
lea
test
cdq
data16
mov
inc
adc
fwait
outs
(bad)
xor
push
mov
pop
out
movs
adc
sbb
fwait
rol
ja
test
or
lods
sti
inc
rcr
in
clc
not
sub
das
mov
xchg
mov
pusha
(bad)
shl
out
ret
leave
sbb
pop
and
shl
addr16
add
(bad)
loop
push
mov
push
das
add
add
test
es
lds
or
movs
adc
adc
adc
or
and
sub
fs
shl
inc
inc
sub
pop
fdiv
dec
cmp
sub
int
jmp
call
sub
sbb
sbb
lods
add
or
mov
div
das
mov
clc
xor
rcr
push
adc
xor
pop
sub
or
sub
and
and
je
add
xor
nop
or
xchg
(bad)
fstp
xor
xor
mov
mov
cmp
prefetcht2
and
add
pusha
fnstcw
sbb
push
push
rcr
(bad)
pop
adc
mov
mov
add
xchg
cmp
xor
mov
pop
add
je
or
daa
pop
(bad)
mov
xchg
imul
xor
aaa
adc
mov
fild
leave
leave
and
fmul
mov
fadd
ror
sbb
cmc
add
ja
inc
add
jo
cmp
lods
mov
pop
or
sbb
je
or
cmp
retf
sbb
jmp
push
test
pop
dec
mov
jmp
imul
sbb
and
mov
nop
push
mov
push
mov
xchg
push
sbb
xchg
jge
(bad)
mov
add
sub
add
pop
cmp
(bad)
rcl
fs
dec
inc
adc
clc
mov
mov
mov
sbb
mov
mov
adc
adc
aam
dec
mov
pop
pop
in
movs
mov
push
into
ds
or
es
nop
inc
cmp
push
mov
shl
add
add
add
sahf
mov
xchg
fxch
inc
and
sbb
xchg
adc
inc
xchg
retf
das
inc
or
int3
adc
jmp
test
xchg
in
push
pop
dec
cwde
and
and
xchg
rol
ja
xchg
and
add
or
fimul
sbb
xchg
test
add
push
jl
int
push
into
pop
adc
sub
dec
pop
shl
xchg
mov
scas
mov
call
iret
pop
and
cmps
imul
cmps
imul
imul
cmps
imul
xor
stos
adc
arpl
nop
add
sbb
das
add
nop
add
and
cs
sbb
sbb
sbb
mov
xchg
and
or
and
nop
add
nop
and
sbb
add
add
nop
add
nop
sub
sub
nop
add
add
or
sbb
add
nop
and
ret
xor
cmp
or
inc
nop
adc
add
pop
aam
scas
mov
sbb
or
je
daa
add
push
mov
inc
dec
jo
push
jg
xor
shr
adc
(bad)
icebp
ds
add
push
mov
push
and
pusha
pusha
add
or
or
dec
sbb
adc
add
add
je
es
xchg
inc
movs
fnstsw
xor
sub
or
inc
popa
sub
pop
and
mov
jge
add
xchg
or
inc
xchg
xlat
push
xor
shl
movs
arpl
or
or
add
pop
cmp
or
bound
repnz
mov
test
dec
pop
retf
mov
cmp
cmp
ds
mov
sbb
pop
add
mov
jb
mov
int
int3
cmps
sbb
mov
sbb
pop
shl
movs
jno
mov
mov
movs
inc
and
add
pop
je
jno
out
adc
sbb
inc
lds
jb
xor
mov
inc
dec
dec
aam
aam
fs
stos
or
push
jne
cmp
cmp
or
popf
lock
jle
jne
xchg
sub
mov
imul
dec
outs
jmp
xor
fst
add
mov
les
out
and
cs
xor
pop
inc
sub
xchg
(bad)
aad
test
add
jne
test
xor
dec
push
cdq
xchg
mov
sub
movs
xor
mov
inc
jbe
add
retf
jo
gs
fisttp
(bad)
xor
pusha
pop
or
inc
pop
mov
sub
je
mov
cmp
add
into
mov
or
add
mov
pop
sub
scas
push
popa
push
inc
or
and
mov
nop
mov
enter
adc
into
mov
addr16
dec
pusha
xlat
(bad)
pusha
movs
icebp
sbb
inc
pop
inc
mov
and
fisubr
fsubr
push
mov
push
adc
in
daa
xchg
mov
sbb
sbb
xchg
push
mov
add
adc
jb
add
inc
xchg
sbb
fdiv
fiadd
sar
mov
and
loope
dec
jne
into
outs
pop
loope
movs
(bad)
or
cmp
aas
(bad)
xor
cs
or
mov
and
mov
adc
add
mov
div
hlt
pop
pop
and
add
sub
sub
xor
sbb
adc
dec
push
pop
jae
xor
loop
rcl
loope
pop
addr16
mov
jge
and
jmp
cmp
inc
(bad)
sub
and
mov
add
xor
mov
xor
test
je
lods
fnsave
add
pusha
ss
xchg
rcr
dec
and
mov
dec
mov
pop
xchg
add
outs
add
sbb
fsub
fidiv
retf
or
and
mov
inc
bound
in
add
dec
jmp
sahf
sbb
adc
jno
lds
fidivr
mov
xor
int3
aad
inc
(bad)
ds
rcr
div
dec
dec
movs
mov
jmp
retf
and
sub
lods
jb
(bad)
cwde
dec
xchg
pop
or
adc
pop
leave
xchg
add
sub
pop
add
aam
ror
add
sbb
sub
fist
dec
sbb
cmp
cli
push
and
push
push
lock
inc
dec
nop
sbb
out
mov
std
fsubrp
jo
push
add
sbb
mov
push
and
cmp
mov
dec
repz
jecxz
(bad)
cmc
or
xchg
div
sbb
stc
lock
lods
sbb
jge
mov
jo
inc
iret
ror
xor
popa
mov
in
retf
mov
js
add
ins
push
jno
or
fsub
push
pop
sub
rcl
rcl
adc
enter
jnp
cmps
xchg
inc
inc
int3
jno
add
ins
fadd
imul
add
xchg
in
lods
fbstp
push
or
pop
fcomp
push
mov
mov
jne
add
fdiv
xchg
mov
clc
loopne
push
dec
ficom
jne
cld
mov
mov
sbb
cwde
or
inc
loope
(bad)
out
push
icebp
xor
or
mov
outs
jg
ret
(bad)
call
stos
and
les
fldenv
test
jecxz
nop
or
inc
push
cmc
add
xchg
lahf
in
jne
jne
out
add
mov
scas
add
enter
bswap
push
fdiv
push
mov
push
push
pop
(bad)
push
iret
mov
arpl
lock
xor
xor
or
fsubrp
xchg
inc
mov
or
(bad)
pop
mov
and
cmc
and
sbb
or
sbb
test
xor
retf
mov
push
dec
imul
and
adc
nop
ret
xor
xor
shr
adc
out
dec
test
xor
ins
dec
imul
pop
sbb
pusha
fmul
jmp
imul
jns
cmp
ret
xor
movs
add
aam
lock
aad
sar
jnp
xor
or
or
or
dec
add
or
pop
add
cmp
je
cs
pop
add
test
shl
(bad)
pop
push
add
sbb
bound
fsub
shl
jne
cmp
jmp
test
mov
and
es
jmp
xchg
lods
xor
aaa
inc
push
push
or
in
loopne
nop
sub
cmp
or
retf
adc
sbb
mov
mov
lea
push
pop
or
hlt
pop
jge
mov
sbb
je
mov
xlat
imul
movs
sbb
adc
cli
cmp
pop
or
push
push
ret
fsubr
inc
jno
xor
das
and
in
add
in
jmp
inc
pop
outs
or
fwait
clts
fwait
and
add
test
loop
mov
in
xchg
dec
and
dec
xchg
fimul
loop
pushf
mov
push
(bad)
add
fwait
test
or
sbb
dec
mov
je
int3
stos
shr
adc
or
or
and
ret
add
xor
or
xchg
inc
ret
stos
mov
adc
mov
xor
retf
sbb
popa
add
cmp
mov
lock
lea
(bad)
in
add
pop
in
xchg
mov
bound
ret
add
sbb
add
inc
xor
mov
inc
out
xor
sbb
cdq
xchg
xor
fs
es
jle
aam
xlat
xchg
fs
push
add
icebp
add
xchg
xor
xlat
xor
mov
mov
aam
out
ds
aam
add
loopne
scas
and
xor
pusha
in
adc
adc
mov
mov
jle
xchg
rol
and
inc
pop
mov
sub
mov
lock
cmps
cdq
mov
sbb
sub
and
pushf
lock
dec
adc
pop
nop
test
cwde
dec
push
inc
aam
cmps
pop
add
add
nop
mov
mov
push
xchg
sbb
mov
xor
or
xor
or
aad
inc
jmp
fcom
xlat
stos
or
pop
inc
dec
mov
add
nop
js
pusha
mov
test
mov
jo
or
mov
add
dec
pusha
sbb
lock
or
cld
add
add
push
cvtdq2ps
mov
stos
sbb
dec
ds
je
rcr
sub
icebp
gs
mov
cmps
add
fwait
js
inc
sub
clc
pusha
leave
xor
pop
push
arpl
sub
adc
mov
adc
mov
rcr
jb
adc
pop
xchg
cmp
inc
mov
cmp
and
(bad)
(bad)
inc
push
daa
adc
adc
popa
xor
pop
fwait
mov
sub
retf
mov
mov
mov
xor
hlt
addps
mov
jmp
nop
dec
sbb
jo
adc
rcl
lds
aad
or
leave
mov
imul
pop
leave
popf
loopne
(bad)
add
in
xchg
(bad)
js
sahf
inc
jo
fbld
inc
jmp
lahf
push
sub
jecxz
lods
jmp
mov
jbe
out
inc
sub
or
xchg
push
mov
dec
js
mov
scas
ret
fstp
xchg
inc
push
loope
mov
sub
ins
dec
jns
in
cmps
push
mov
push
test
sub
cmp
retf
mov
sub
arpl
jmp
mov
jne
test
or
je
mov
xchg
push
mov
rcl
out
xchg
ret
test
adc
test
adc
dec
loop
xchg
pop
sbb
sub
aas
push
sub
jo
and
and
popf
call
clc
jmp
mov
push
or
sub
(bad)
push
sub
js
xor
loop
pop
sar
or
or
xchg
movs
sbb
call
adc
in
ja
mov
adc
out
push
cmps
(bad)
jmp
and
mov
or
or
sbb
or
enterw
ds
inc
or
aaa
mov
fnstcw
sbb
fisttp
inc
pop
arpl
fldcw
in
fisttp
sub
and
xchg
inc
cmps
or
or
ja
xor
add
stc
imul
imul
or
sub
and
add
jmp
dec
mov
nop
icebp
or
lods
test
dec
and
(bad)
arpl
push
add
fsubr
xchg
jmp
ret
cmp
cmp
stos
mov
add
add
popf
mov
pop
jb
push
sub
mov
pop
add
repz
mov
mov
shr
repz
sub
xchg
mov
adc
push
add
jnp
add
bound
imul
sbb
call
test
and
xchg
inc
push
sbb
aas
inc
or
jl
inc
or
sub
in
sub
in
or
daa
and
call
dec
pop
fld
xor
popa
add
ss
aam
inc
inc
rcl
daa
mov
test
clc
jns
and
out
inc
jmp
inc
sbb
add
data16
ret
(bad)
jae
dec
push
js
push
fist
or
into
add
push
and
sbb
imul
mov
add
sbb
add
loope
dec
adc
ret
push
scas
cmps
dec
cmp
dec
push
sub
dec
mov
sub
test
mov
jg
sub
cmp
arpl
dec
call
cmp
adc
test
inc
inc
cmp
jae
cmp
imul
in
mov
in
inc
pop
es
add
mov
mov
pop
dec
or
pushf
xor
popa
inc
pusha
add
mov
push
sub
(bad)
clc
push
add
push
jno
lock
add
cmps
sbb
pushf
mov
push
add
sub
and
cmp
push
je
fmul
xchg
dec
shl
enter
or
sub
push
cli
push
xchg
xor
sub
cmp
and
scas
retf
add
clc
jb
inc
push
in
adc
mov
pop
inc
inc
cmp
fistp
or
nop
or
pop
inc
sbb
and
ret
adc
mov
mov
jne
and
push
fmul
xchg
and
nop
adc
jg
mov
cld
pop
icebp
adc
jo
inc
mov
bswap
clc
popa
adc
sub
mov
and
sub
adc
inc
fidivr
leave
add
xlat
sub
loopne
xor
(bad)
sub
fld
jo
push
push
shl
lea
inc
bound
and
mov
aas
clc
mov
movs
inc
imul
in
push
(bad)
xor
and
icebp
dec
pusha
sbb
scas
pop
push
dec
lahf
xor
mov
fsubr
push
aas
nop
and
adc
adc
xor
adc
sub
fisubr
ins
sub
add
dec
sbb
xor
pop
test
imul
pop
test
cwde
gs
lds
call
sub
rol
popa
popa
and
fild
mov
pop
into
(bad)
pop
fild
rol
fnsetpm(287
sbb
arpl
sub
adc
xor
int
addr16
ret
adc
ja
adc
xchg
mov
dec
pop
ret
jp
loopne
dec
rcr
adc
add
(bad)
and
sub
push
cmp
fstp
stc
clc
repz
push
or
mov
inc
jl
push
push
repnz
ins
xor
push
(bad)
and
and
das
addr16
ret
or
push
dec
push
mov
stos
xchg
xchg
rol
xor
inc
xor
ins
mov
cld
push
leave
or
scas
dec
add
stos
pop
xor
call
and
or
mov
pop
arpl
xchg
addr16
shl
out
and
adc
dec
and
and
icebp
add
inc
das
adc
ret
or
js
or
pop
sub
xor
loope
xchg
or
pusha
adc
cmp
or
pop
xchg
shr
popa
loop
int3
addr16
or
mov
lock
call
sub
mov
mov
test
int
ins
loope
xchg
test
cmp
add
jb
inc
and
cmc
inc
dec
test
leave
and
ja
in
push
inc
int3
loope
adc
aaa
inc
test
add
imul
cmp
arpl
xchg
clc
cwde
inc
xor
rcr
pop
adc
js
xor
or
dec
aam
aas
retf
cmp
inc
imul
inc
sbb
iret
mov
xor
cmp
das
push
jno
and
clc
sbb
push
xor
(bad)
stc
enter
and
test
fnstcw
ins
les
ss
dec
xor
pushf
inc
out
clc
int
movs
mov
inc
popa
xlat
ins
cmp
push
xlat
cmp
inc
push
shl
(bad)
mov
mov
adc
lds
icebp
add
or
xchg
(bad)
xchg
mov
sub
cmps
loopne
sbb
adc
sbb
out
xchg
imul
mov
cmp
icebp
xchg
xor
inc
adc
adc
clc
cmp
sub
iret
sbb
mov
xor
out
sbb
jno
inc
mov
lahf
loope
push
aad
(bad)
pusha
lahf
pop
ss
and
pop
pop
and
add
pop
pop
shl
aaa
sub
mov
cld
daa
in
test
pop
mov
addr16
scas
xor
add
out
test
xchg
pop
(bad)
xchg
pusha
xchg
loope
jmp
dec
jge
mov
mov
mov
les
mov
test
jae
sbb
retf
dec
pop
mov
out
addr16
mov
pop
mov
add
cmp
ret
test
mov
pop
xor
mov
dec
scas
or
inc
ins
icebp
imul
xor
push
dec
add
clc
xchg
mov
mov
cmp
jle
add
jb
jecxz
adc
and
push
outs
sar
add
lods
rol
arpl
push
mov
in
xor
cwde
dec
out
or
mov
imul
jne
add
add
ficomp
ss
popa
lea
xor
shl
push
test
xchg
int3
push
or
mov
xor
es
cmp
xor
add
leave
inc
adc
add
mov
push
neg
sti
add
sub
les
and
ss
popa
sub
imul
rol
fcomp
and
in
outs
mov
add
push
or
aaa
adc
or
add
or
inc
sbb
add
sahf
ret
cmp
inc
arpl
(bad)
push
lea
pop
add
xchg
sbb
lock
sub
jg
dec
mov
sbb
dec
sbb
pop
inc
adc
adc
jb
push
sbb
cmp
lods
inc
add
add
dec
sahf
add
les
pop
pop
ins
addr16
and
or
push
cmps
test
ss
pop
(bad)
add
mov
add
(bad)
outs
cmp
add
or
test
mov
sbb
int
adc
sbb
or
mov
jecxz
pop
outs
jl
push
jmp
jmp
popf
or
add
fsub
or
shr
sbb
loope
sbb
fsub
xchg
test
mov
xchg
mov
out
repnz
xor
push
inc
dec
pop
enter
adc
imul
iret
ret
or
xchg
cmp
or
(bad)
mov
sub
(bad)
arpl
clc
jns
hlt
and
(bad)
dec
(bad)
bnd
dec
mov
(bad)
cmps
std
clc
je
xor
adc
icebp
mov
ins
push
push
jae
add
adc
mov
and
sbb
jo
nop
mov
xchg
es
retf
xlat
frstor
and
add
aad
mov
add
and
push
cmps
retf
ins
iret
cmp
movs
inc
inc
es
add
adc
adc
cmps
and
js
test
and
rol
repnz
mov
adc
nop
ret
test
push
hlt
xlat
push
cmp
ret
sbb
loop
sub
(bad)
adc
clc
add
sahf
adc
mov
sbb
test
push
sbb
(bad)
pop
daa
sbb
cmp
ret
cmp
and
xchg
jge
cmp
repz
aad
cmp
inc
or
fsub
out
dec
bound
pop
sar
lods
xor
xchg
inc
cmps
call
imul
adc
xor
inc
cmps
adc
arpl
stc
pop
add
(bad)
adc
nop
add
adc
jmp
mov
mov
sti
mov
inc
xor
xlat
sbb
inc
rol
sbb
add
dec
cmc
mov
rcr
fincstp
jl
sbb
xchg
xchg
adc
sbb
adc
stos
popf
das
inc
inc
repz
mov
cwde
stos
and
sub
push
arpl
jo
and
jne
popa
push
jo
loope
or
rcl
or
sar
or
mov
movs
outs
add
sbb
xchg
sbb
add
push
or
dec
push
mov
add
sbb
add
pop
loopne
punpckhbw
clc
mov
mov
loope
pop
in
mov
pop
ins
mov
daa
popa
test
inc
pop
(bad)
clc
mov
call
stos
push
and
out
fstp
cmp
sbb
movs
add
dec
dec
or
jo
out
aam
or
not
or
sbb
icebp
out
or
dec
push
pop
clc
mov
lock
xlat
dec
pusha
jle
sahf
aaa
daa
sar
add
inc
sbb
sbb
inc
repz
mov
jg
and
push
fistp
pop
pop
icebp
nop
push
push
(bad)
adc
mov
inc
ja
dec
xchg
mov
movs
cmp
sub
lods
aam
sub
add
cmp
out
sbb
sbb
adc
cmp
push
in
add
dec
enter
fld
mov
aad
inc
(bad)
nop
cmp
jecxz
sbb
xor
movs
inc
and
mov
in
test
(bad)
sub
nop
xchg
xchg
cld
cmp
jbe
sbb
push
leave
or
or
test
adc
scas
push
sbb
push
adc
xor
xchg
pop
adc
xchg
add
jo
push
iret
mov
inc
push
cmp
push
and
lods
add
ins
or
ret
sub
add
push
or
or
dec
jns
sbb
and
dec
rcl
ins
lea
mov
ficom
dec
dec
gs
(bad)
dec
adc
clc
(bad)
sub
mov
cmp
mov
or
pop
pop
or
pop
push
or
hlt
push
inc
or
ja
dec
push
pop
pop
test
or
retf
mov
add
sti
sbb
cmps
imul
push
mov
push
fist
mov
mov
cld
rcr
fadd
pop
fsub
push
add
push
cmp
add
enter
xor
add
or
adc
or
xor
or
pop
sbb
dec
rol
push
and
cs
nop
popa
sub
and
nop
inc
and
sub
jmp
ds
or
xchg
sub
jl
xchg
sbb
mov
in
outs
es
push
setnp
mov
jle
clc
and
push
in
xchg
xor
sbb
add
ds
xchg
sbb
test
pop
pop
pop
out
sbb
mov
pop
dec
push
(bad)
push
(bad)
push
xchg
xchg
in
(bad)
push
(bad)
push
(bad)
and
pop
dec
inc
inc
enterw
mov
cmp
xchg
div
orps
adc
sbb
dec
mov
jbe
or
rol
mov
ret
and
mul
retf
add
xor
or
xor
pop
pop
inc
bound
in
push
sbb
xor
push
sbb
(bad)
nop
bound
xor
inc
sbb
add
sbb
aam
ja
pop
cdq
ret
mov
add
sub
add
xchg
ss
psubusw
mov
push
jnp
sbb
inc
in
sbb
mov
xchg
add
xchg
sahf
xchg
pop
dec
icebp
push
dec
or
sar
cmp
nop
jmp
sub
(bad)
fnsave
or
adc
xor
sbb
inc
xchg
rcl
pusha
dec
adc
pusha
pusha
rcl
mov
mov
bound
dec
in
imul
sbb
push
inc
psubw
clc
jb
inc
or
ret
jae
jb
push
push
jmp
mov
data16
add
or
or
(bad)
or
dec
sbb
ds
sub
movs
ret
mov
mov
loopne
or
nop
out
dec
inc
scas
push
push
imul
add
cmp
and
daa
aam
mov
aas
cmp
fsub
push
xchg
rcl
pop
add
jno
mov
pop
fcomp
pop
ror
pop
inc
bound
imul
frstor
add
cli
adc
mov
jne
add
or
dec
xchg
iret
and
and
shl
sbb
adc
sbb
js
add
hlt
mov
pusha
push
ss
adc
mov
and
sti
dec
sbb
mov
add
imul
mov
bound
out
push
inc
iret
mov
xor
clc
ins
fldenv
jno
out
popa
mov
pusha
enter
and
inc
stc
and
shl
ret
dec
fcom
xchg
adc
sar
(bad)
ror
pop
mov
or
jle
mov
dec
pop
push
inc
dec
sahf
cld
mov
js
int3
xor
push
das
sar
mov
add
into
mov
mov
test
shr
ret
mov
inc
cmp
cwde
xlat
and
ror
sbb
or
push
stos
inc
test
mov
mov
arpl
mov
prefetch
test
loope
lods
xchg
gs
ret
shr
and
inc
pop
xchg
dec
out
push
je
xor
shl
lock
sub
adc
or
pop
and
into
lock
(bad)
or
rcr
movs
sbb
mov
bound
mov
jmp
(bad)
lock
xor
hlt
neg
and
sub
repz
movs
add
call
push
sbb
retf
pop
cmp
xor
cli
mov
cmp
sbb
pop
fild
enter
int3
lds
popf
and
xchg
ss
sbb
test
mov
xchg
push
inc
xor
or
push
sti
nop
inc
add
xchg
xlat
xchg
sbb
scas
sbb
xchg
jbe
xor
movs
sbb
inc
sbb
jno
sti
add
add
xor
jbe
inc
pop
test
and
sahf
shl
mov
das
and
mov
xor
jg
and
jns
leave
cwde
mov
call
sbb
mov
add
ror
push
scas
xor
lds
xor
mul
test
pop
pop
or
cmp
cmp
dec
or
jns
pop
add
das
pusha
and
sbb
add
jmp
or
cs
in
retf
test
sbb
push
movs
mov
inc
add
lock
sbb
nop
sbb
ins
push
sub
fwait
add
pop
push
jp
jmp
inc
push
mov
out
sbb
push
add
inc
imul
sbb
popa
pushf
xchg
or
sub
sub
scas
ins
cmps
jp
dec
sahf
hlt
inc
or
sub
scas
cmp
and
pop
xchg
xchg
mov
cmp
xchg
push
rol
sub
sub
lods
sub
mov
xor
xor
xor
jge
mov
shl
jne
jmp
sbb
ins
lock
xchg
jb
sbb
idiv
mov
sub
add
push
sbb
cmp
pusha
movs
ror
aas
jl
or
aaa
jecxz
dec
mov
pop
test
or
rcr
out
mov
jmp
push
shl
leave
or
punpcklbw
or
inc
pop
add
xor
dec
out
and
dec
and
add
cmp
and
and
leave
and
and
and
jo
cmp
inc
cmp
inc
and
and
inc
add
and
add
or
push
add
invd
popf
push
adc
adc
sbb
shl
(bad)
mov
adc
ret
lahf
add
mov
dec
xor
mov
sub
adc
inc
mov
sbb
es
pop
jns
movs
mov
add
fidivr
inc
dec
push
and
sub
mov
xchg
ja
shl
and
push
addr16
and
ficom
rcl
mov
lock
pop
movs
nop
cmp
jnp
(bad)
add
test
fadd
mov
test
sub
and
lea
ins
js
dec
and
and
mov
or
dec
push
adc
push
and
popa
es
cmp
in
fisttp
mov
ins
out
int
lock
mov
dec
push
in
xor
add
sahf
add
cs
icebp
inc
jne
ss
and
cmps
or
adc
(bad)
or
mov
lods
inc
sbb
xor
addr16
jmp
adc
cmp
jl
xor
in
dec
test
sbb
push
and
mov
xor
push
or
fisttp
bound
mov
add
shl
mov
xor
xor
xchg
xor
cmp
inc
add
sar
inc
out
cmc
push
rol
nop
daa
xor
add
and
pusha
lea
push
lea
sbb
fsub
div
xor
stc
and
add
jae
les
sbb
ins
push
xor
sub
add
adc
jno
cmp
jb
lods
cmps
out
adc
jmp
add
inc
or
rcl
jo
loop
retf
sub
mov
inc
es
xchg
imul
jnp
add
mov
pusha
and
popa
mov
xor
add
dec
adc
xor
inc
es
cmc
bound
lock
adc
sub
inc
lock
es
xor
lds
adc
xchg
add
xchg
sub
xchg
(bad)
fcom
inc
dec
inc
fadd
shl
add
sbb
inc
dec
lods
arpl
add
sub
add
fwait
or
or
adc
inc
ss
lock
ds
adc
mov
dec
je
gs
cmc
ins
mov
inc
lds
xchg
mov
xor
mov
dec
imul
mov
dec
daa
stos
pop
push
js
mov
adc
mov
pop
xlat
pop
scas
sbb
fsubr
mov
add
and
mov
add
mov
lds
imul
push
retf
ins
add
inc
ret
push
sbb
retf
jno
fcom
dec
ja
outs
gs
and
jnp
push
add
inc
jbe
inc
aaa
fs
repnz
test
stos
lods
mov
add
push
movs
out
nop
dec
or
and
cmp
pop
add
sbb
ret
addr16
aas
scas
(bad)
and
out
daa
or
xchg
xchg
sbb
push
jns
out
pushf
jecxz
or
add
inc
mov
and
pop
loopne
dec
adc
pop
dec
add
bound
mov
mov
pop
push
sahf
fiadd
inc
mul
sbb
jnp
xchg
sub
fs
add
scas
test
xchg
in
jo
pop
ins
pusha
add
cmp
mov
add
je
cmp
pop
lock
sub
lea
jbe
aam
xchg
loopne
mov
pop
cmp
cmp
push
cmps
jmp
pop
adc
fist
dec
jmp
add
lds
sub
adc
in
dec
dec
adc
cmp
outs
push
leave
leave
in
hlt
rcr
mov
cwde
sbb
or
dec
mov
das
adc
fld
movs
and
mov
leave
dec
rcl
xchg
call
xchg
es
in
(bad)
rcl
mov
dec
jnp
rcr
out
and
mov
in
push
ret
fdivr
nop
ja
fcom
fsubr
movs
repz
sbb
jb
aam
pop
cmp
loop
sub
pusha
mov
adc
jmp
imul
sbb
int3
push
int3
mov
call
lea
sbb
ss
push
sbb
pop
push
sbb
lods
push
fcomp
loopne
sub
inc
mov
mov
xchg
xchg
adc
push
(bad)
push
jne
lods
das
pop
lock
and
mov
dec
xor
pop
mov
dec
test
mov
xor
sbb
test
(bad)
cmp
sub
push
pop
inc
dec
sub
movs
out
adc
mov
and
int
inc
(bad)
and
mov
sbb
xor
adc
adc
mov
out
pusha
inc
and
imul
lea
pop
lock
mov
stc
clc
gs
neg
shr
pop
sub
sbb
arpl
lahf
hlt
dec
sub
jnp
je
and
and
jbe
and
adc
sbb
lock
loop
and
xor
jno
rcl
test
or
xor
pop
sub
mov
and
test
or
or
sbb
dec
xor
mov
popf
sar
out
and
ins
test
in
aas
in
inc
mov
adc
xchg
retf
addr16
sbb
mov
adc
and
out
inc
or
xor
push
stc
fisttp
lahf
arpl
adc
push
retf
add
rol
mov
dec
ds
xor
nop
mov
push
gs
into
inc
pop
imul
cmp
add
pop
xor
jbe
and
adc
add
adc
mov
(bad)
mov
mov
jp
mov
inc
sbb
xor
inc
test
daa
retf
sub
adc
inc
jo
inc
sub
retf
sub
or
outs
ja
or
and
pop
sub
or
xchg
mov
add
or
mov
cmp
cmps
mov
and
pop
in
cmp
pop
jp
ja
std
pop
inc
in
sbb
pop
or
mov
mul
or
and
and
cmps
retf
mov
and
and
rol
rcr
jo
adc
inc
gs
popa
adc
cmp
pop
push
bound
or
push
sub
dec
sub
inc
mov
or
xor
shl
and
(bad)
and
sub
pusha
or
addr16
bound
xchg
mov
aaa
inc
xor
jno
or
adc
pop
xchg
or
arpl
pop
sub
fisttp
scas
pop
ss
xchg
or
(bad)
sti
add
dec
popa
mov
xlat
cwde
rol
push
jge
cvtps2pd
popa
rol
mov
jp
xchg
in
cdq
ret
out
or
sbb
mov
dec
inc
sbb
adc
jp
add
push
cli
adc
dec
in
xor
and
xchg
mov
mov
push
bnd
mov
push
push
lods
inc
jmp
adc
(bad)
int3
adc
add
add
mov
fsub
sub
or
push
mov
inc
cmp
ficom
xchg
sub
adc
sbb
jno
pop
movs
cmc
fidivr
mov
jno
sbb
or
inc
inc
add
push
icebp
mov
push
fwait
push
xor
and
push
pop
and
cmp
leave
and
sbb
(bad)
cdq
or
pop
sbb
inc
shr
xor
and
mov
mov
mov
push
shl
sbb
(bad)
out
inc
(bad)
or
sbb
nop
lock
sbb
add
xor
rcr
jb
push
sbb
pop
sbb
stc
sub
dec
xor
das
add
and
pop
aam
fcmovu
cmp
add
mov
pop
les
inc
pop
inc
push
(bad)
sbb
das
dec
jne
mov
mov
pop
dec
jge
leave
push
push
push
adc
movs
inc
cdq
out
ss
ins
es
and
xchg
ins
test
cmp
popf
add
(bad)
or
test
pop
imul
sbb
adc
fs
dec
pusha
sbb
outs
xchg
and
pop
sub
scas
fadd
mov
repnz
rol
cmp
loope
leave
mov
imul
dec
mov
retf
mov
fdiv
into
jmp
or
out
push
ret
lidtd
fimul
test
sbb
adc
add
sahf
in
jmpw
cmp
push
(bad)
mov
mov
pop
pop
popf
rcl
dec
scas
ret
lock
add
mov
or
popa
sar
inc
enter
daa
inc
sbb
and
sub
outs
sbb
xchg
pusha
and
stos
movs
lods
lea
xchg
pop
sbb
dec
pushf
sbb
cmp
adc
mov
push
add
inc
jecxz
adc
sbb
xor
inc
retf
test
adc
adc
shr
jl
imul
inc
repnz
jo
cmp
movlps
cmp
dec
nop
add
inc
dec
dec
ins
lods
enter
dec
mov
xchg
sub
add
dec
and
cmp
add
cmps
cmp
and
or
xor
cmp
and
mul
push
out
or
push
adc
ret
rol
loopne
mov
add
xchg
push
mov
inc
loop
inc
and
test
ss
out
add
loope
aas
push
mov
inc
pop
pop
cmp
bound
fisub
add
xor
aas
inc
pop
ja
mov
fsub
jle
mov
lea
add
(bad)
push
push
mov
add
clc
cmp
ror
lock
bound
xchg
test
push
inc
dec
add
xchg
inc
mov
mov
clc
and
or
fistp
push
and
sbb
lock
adc
adc
push
cmp
jg
call
shl
clc
pushf
scas
jo
jmp
dec
aas
mov
lock
scas
mov
and
int
or
push
nop
add
(bad)
sbb
pop
sub
cmps
stc
and
pop
add
add
sbb
jle
add
int
test
inc
inc
daa
inc
ins
shr
gs
add
out
inc
imul
mov
imul
out
test
hlt
sub
adc
ja
mov
xor
js
lods
std
jmp
movzx
add
xchg
adc
mov
mov
and
inc
shl
cmps
rcr
push
cmp
and
pop
and
pop
or
daa
adc
into
inc
and
jns
push
push
push
mov
mov
adc
loop
pop
xchg
push
test
xchg
sbb
imul
add
pusha
loopne
pop
push
jmp
pop
repnz
dec
jmp
aad
mov
sbb
sub
lods
and
sbb
fmulp
mov
jo
xchg
test
mov
xchg
push
stc
cmp
push
cdq
inc
dec
add
xor
dec
pop
aam
fwait
mov
inc
lahf
mov
add
xchg
add
adc
add
lea
mov
fwait
add
in
cwde
dec
ficomp
repnz
inc
inc
push
jl
push
and
mov
and
xor
adc
push
push
rol
adc
push
ja
and
push
or
imul
ror
es
mov
sbb
xchg
into
xchg
xor
sub
adc
xlat
push
sbb
push
shr
sbb
ins
push
jno
ret
add
add
das
xchg
sub
add
mov
mov
xchg
adc
test
out
sbb
xor
mov
and
push
hlt
mov
pushf
rol
push
push
xor
xor
and
jle
xor
add
inc
adc
dec
gs
jnp
ret
scas
sbb
xor
jo
dec
loop
mov
xchg
out
cmp
xlat
xchg
inc
loopne
sub
and
outs
inc
mov
ja
adc
test
mov
xchg
sub
ret
jns
or
mov
jmp
dec
cs
enter
les
sub
(bad)
aam
cld
test
ss
ds
mov
and
cmp
call
push
out
xchg
mov
jo
jmp
ficomp
nop
popf
cmp
jb
retf
pusha
in
push
and
mov
and
sbb
ret
ins
ret
add
and
mov
add
adc
fnop
pushf
les
dec
push
sub
pop
pop
dec
sub
inc
xor
fcomp
out
and
push
mov
or
aaa
dec
bound
xchg
cmp
or
xor
das
inc
rol
inc
pop
std
sub
and
pop
neg
mov
(bad)
and
and
mov
clc
gs
adc
mov
nop
cwde
jo
mov
push
xchg
adc
leave
add
test
imul
adc
out
inc
clc
or
pop
jo
(bad)
adc
lds
scas
add
gs
pop
mov
ror
adc
sub
retf
jecxz
adc
dec
or
sbb
cmc
push
mov
push
hlt
mov
ret
scas
mov
dec
fs
pusha
sbb
lea
leave
ins
rcl
ret
pop
inc
bound
aam
xor
shl
pop
mov
mov
imul
and
adc
or
rcl
or
pop
ja
sub
nop
int3
pop
push
mov
cmps
(bad)
popa
mov
cld
ins
les
mov
mov
push
mov
mov
lahf
xor
inc
int3
cmova
fcomp
or
jb
(bad)
inc
add
inc
test
mov
pop
dec
cmps
enter
pop
dec
div
loopne
mov
push
inc
ret
cwde
push
pop
add
(bad)
es
fcomp
test
movs
adc
(bad)
and
dec
adc
daa
sub
push
add
das
ret
dec
add
xchg
pop
adc
sub
and
push
imul
cmc
inc
lea
ret
(bad)
pop
rol
sbb
add
adc
cmp
or
dec
and
aaa
cmovae
xor
and
aad
inc
add
pop
adc
add
xchg
inc
mov
sbb
jns
sbb
das
push
inc
push
in
push
pop
pop
push
dec
cs
pop
pusha
pop
inc
xor
ss
xor
mov
adc
cmp
pop
int
mov
xor
jle
mov
popf
jmp
cmp
or
xor
pop
push
or
add
sbb
inc
inc
(bad)
push
dec
or
aaa
add
add
cs
and
sbb
sub
and
rcr
mov
jo
push
add
fwait
inc
ins
arpl
mov
and
push
cmp
aaa
xor
dec
sub
into
and
lods
test
xchg
cmp
sub
dec
adc
jae
sub
loopne
mov
cs
sbb
and
pop
enter
sbb
shl
xor
pop
js
hlt
jg
test
or
test
and
dec
ss
rcl
data16
pop
push
xchg
test
jecxz
adc
int3
pop
movs
(bad)
or
mov
adc
mov
aas
add
xor
cmp
pop
dec
sub
lock
push
fimul
sub
ss
fild
cmp
jge
bound
inc
shr
sbb
jo
add
nop
mov
sub
sbb
adc
int3
sbb
push
inc
sub
les
sub
(bad)
ror
mov
xchg
aas
lea
xor
enter
jge
bound
dec
das
popa
adc
add
add
aam
push
adc
mov
mov
pop
rcr
xchg
xchg
xor
je
add
or
dec
add
dec
imul
clc
sub
es
jne
jo
and
jno
repnz
aas
adc
push
and
pop
mov
or
add
sbb
adc
nop
mov
sti
sub
mov
mov
sub
add
jmp
mov
sub
je
xor
aam
jo
mov
lock
dec
inc
gs
mov
push
cmc
nop
bound
or
add
push
adc
mov
leave
clc
mov
sub
or
(bad)
sar
test
push
adc
push
add
xchg
and
mov
pop
inc
sbb
xor
daa
jae
shl
dec
pushf
and
je
sub
xchg
xor
xor
lods
adc
aaa
cmp
sbb
aaa
cmp
cmp
outs
mov
push
add
push
or
adc
inc
imul
test
adc
sbb
cmps
mov
sbb
pop
mov
dec
jno
shl
xor
cmps
pop
mov
inc
adc
ds
jb
or
aam
ror
aas
mov
xchg
mov
sbb
js
mov
push
inc
test
xor
mov
ficomp
adc
and
scas
xchg
sub
mov
fistp
sahf
jb
rcl
test
push
xchg
cmp
add
cmps
loop
inc
das
jae
xchg
(bad)
(bad)
xor
cmp
dec
xchg
and
inc
mov
pushf
inc
mov
jp
add
push
add
pop
push
jmp
adc
aaa
lock
xor
push
xchg
outs
popf
jbe
sub
sbb
js
inc
lods
mov
push
jl
pop
mov
sub
bound
div
push
dec
sbb
test
xchg
aaa
or
ja
test
mov
not
add
dec
cmp
call
leave
imul
outs
pusha
xor
enter
mov
or
cmp
xor
or
imul
pop
or
xor
and
jno
sub
jne
cmp
push
fs
or
fdivr
aaa
pop
je
add
xchg
outs
xor
ins
sti
mov
adc
xor
add
clc
fcmovne
jae
cmps
xor
mov
mov
inc
mov
xor
xchg
cmp
or
inc
add
sbb
inc
pop
add
scas
pop
mov
out
mov
mov
std
cmp
jge
rol
xor
ja
sbb
jo
and
push
in
ret
xchg
mov
stos
xor
jno
out
dec
mov
mov
ror
popa
xchg
es
xchg
xor
test
jmp
mov
lock
rol
adc
fist
or
inc
adc
test
mul
dec
add
sti
mov
sub
fld
or
jg
test
push
xchg
add
push
(bad)
shr
mov
push
popa
iret
add
pop
aaa
sub
or
inc
or
movs
popa
sub
pop
and
ret
aas
and
add
mov
push
hlt
adc
lods
dec
sub
and
sub
daa
push
add
jb
jne
shl
mov
add
out
add
adc
xor
dec
mov
jno
fdiv
adc
(bad)
sub
hlt
pushf
sbb
mov
mov
pop
adc
sar
sub
add
mov
or
inc
ins
adc
lods
inc
cmp
adc
xchg
gs
out
and
loop
push
push
mov
push
and
mov
or
mov
ret
xor
stc
shl
and
xor
jmp
xchg
mov
adc
fild
test
mov
out
retf
push
mov
cmp
cwde
jl
xor
leave
push
jne
in
ret
mov
nop
cmp
in
adc
mov
jmp
mov
and
fsubr
push
aas
or
sbb
cs
dec
scas
add
cs
add
mov
outs
add
ret
pushf
(bad)
into
or
movs
xor
adc
mov
or
inc
pop
dec
inc
push
shr
ins
sbb
sub
enter
pusha
les
sbb
or
cmps
and
adc
fs
add
sbb
in
mov
pop
and
mov
adc
sub
fcomp
pop
inc
push
hlt
jl
pop
not
(bad)
imul
shl
pop
ret
cmps
or
fwait
loope
xchg
mov
fcompp
fnstenv
sbb
movs
add
pushw
xor
test
cmp
int3
sti
loope
arpl
dec
js
(bad)
lock
jmp
jge
je
push
sub
sub
xor
stos
sbb
dec
in
mov
pop
and
and
push
adc
and
mov
out
stos
push
mov
adc
jle
sbb
into
push
and
js
adc
je
ud2
push
hlt
sub
cmp
hlt
add
push
xor
clc
hlt
and
mov
fsubrp
sbb
push
aad
fs
sbb
sub
test
cli
into
ja
mov
dec
out
sti
sbb
push
xchg
pop
jae
nop
mov
and
pushf
dec
dec
inc
sbb
lods
mov
jae
mov
cmps
add
jge
mov
xor
punpcklbw
dec
sbb
lods
and
gs
or
adc
and
pop
shl
sahf
shl
test
shl
in
or
rol
xlat
je
stos
scas
inc
add
test
fcomip
sbb
gs
rol
sub
push
mov
fcom
mov
adc
mov
cmps
add
test
cmps
inc
pop
arpl
ja
and
rcr
mov
and
push
jo
ret
pop
push
shl
sub
sub
test
xchg
mov
dec
je
adc
test
and
inc
cmp
cmp
push
xchg
push
fidivr
pop
daa
dec
add
adc
aam
add
dec
shl
push
pop
into
and
or
mov
dec
xlat
cmp
in
xor
imul
mov
jo
inc
sbb
mov
nop
inc
add
js
hlt
cld
xacquire
cwde
loopne
loopne
jo
mov
data16
adc
xchg
out
mov
jne
jmp
sbb
adc
pop
test
pop
in
or
je
dec
pop
sbb
shr
push
call
push
rol
or
mov
push
cmps
test
adc
movs
sbb
leave
xchg
push
push
inc
xchg
and
add
jo
pop
cmp
(bad)
and
adc
lock
mov
adc
dec
mov
push
inc
test
pop
inc
imul
dec
push
ficomp
(bad)
dec
xor
bnd
shr
ror
push
sub
xchg
cwde
test
sbb
rcl
ds
lock
jns
and
scas
sub
inc
shl
add
push
lea
sbb
pop
pop
call
shl
push
xor
adc
les
repnz
sub
push
cmp
lock
dec
push
mov
adc
sub
mov
xchg
movs
hlt
cmp
popf
adc
stc
sub
push
repnz
shl
out
(bad)
mov
mov
sub
dec
adc
mov
ret
sub
dec
or
and
push
repnz
cmps
and
sbb
dec
or
jno
mov
pop
inc
pop
inc
dec
popf
xor
xor
out
and
sbb
ret
nop
int
sub
scas
add
xchg
and
bound
lahf
adc
(bad)
imul
mov
add
push
lods
lea
or
inc
fdiv
xchg
jbe
mov
jne
cmp
add
jmp
inc
push
add
push
idiv
rcl
sbb
mov
aas
dec
push
dec
bound
cmps
mov
pop
mov
sub
push
cmps
fs
jmp
push
add
mov
ror
mov
fisttp
mov
inc
or
data16
push
add
rol
fcmovbe
nop
int
pop
add
sub
add
aaa
push
ins
mov
push
cmp
dec
ret
dec
or
imul
xchg
and
and
xchg
loope
and
mov
in
hlt
imul
fadd
pop
or
(bad)
push
popf
int3
ret
xor
or
jmp
sahf
dec
and
ret
sub
jo
fstp
cmp
jmp
adc
movs
and
xchg
mov
jl
int3
lods
in
pusha
popf
adc
and
and
push
or
or
push
sbb
adc
jl
xchg
(bad)
jno
nop
jns
test
fistp
and
cmp
pop
fadd
xchg
test
bound
mov
pop
xor
cmp
mov
xchg
xchg
rcr
xor
sbb
sub
add
xchg
jl
(bad)
push
(bad)
add
jbe
dec
arpl
les
mov
sbb
test
xor
inc
add
aaa
in
mov
loope
out
cmp
je
sbb
fld
mov
sub
adc
dec
xor
adc
and
ss
pushf
lds
and
les
retf
cmp
dec
lock
mov
nop
int3
cmps
sbb
xchg
xor
or
das
ins
pop
or
aaa
cmps
adc
rcr
addr16
popa
mov
lods
xlat
fiadd
test
ret
test
xor
mov
dec
sub
jne
icebp
push
(bad)
or
mov
adc
lea
cmp
jmp
pop
aaa
add
add
push
add
cmp
shl
sbb
lock
dec
(bad)
jmp
dec
jmp
mov
jbe
sbb
daa
or
push
push
pop
add
pusha
inc
out
and
ret
mov
xchg
push
push
neg
push
rol
mov
pop
dec
loope
pusha
or
xor
mov
scas
and
dec
inc
or
inc
push
arpl
adc
or
je
pop
sub
add
add
mov
jb
adc
jno
mov
and
or
sub
mov
sub
pushf
jbe
inc
outs
jne
and
shl
and
and
jmp
rol
arpl
sub
mov
ror
cmps
adc
mov
rcr
mov
or
mov
adc
pop
sub
sub
pop
cmp
ret
loopne
cmp
mov
push
push
enter
push
cmp
shl
js
jns
sub
dec
jae
or
ins
data16
es
add
pop
in
mov
jg
repnz
cmp
rcr
inc
and
xchg
add
mov
dec
fmul
add
and
(bad)
xchg
test
and
push
outs
xchg
mov
add
imul
pop
jmp
push
add
sub
push
dec
pop
and
adc
test
push
leave
push
jae
xor
cmp
add
jge
lds
and
fcmovnbe
cmp
pop
push
lds
adc
sub
cmps
adc
pop
call
add
ja
or
push
push
dec
popa
mov
sub
arpl
inc
and
fwait
add
sti
xchg
mov
pop
and
js
popa
push
ds
jo
sub
mov
dec
imul
adc
sub
add
addr16
add
jl
sti
add
xchg
and
imul
sub
imul
pop
push
nop
inc
xchg
xchg
shl
loope
adc
inc
sar
inc
mov
add
scas
push
pop
je
imul
inc
dec
dec
add
mov
sub
fadd
add
stos
cmp
xchg
add
das
cmps
add
xchg
dec
xchg
dec
leave
int
jne
mov
dec
leave
jne
and
add
cwde
lds
cs
mov
dec
and
add
xor
sbb
lods
fcmovb
and
aas
sbb
and
out
xor
add
jns
adc
enter
movs
fstp
jge
sub
bound
pop
dec
jnp
cmp
push
jp
ror
aaa
and
add
pop
leave
lds
arpl
pop
pop
cmp
fcom
push
add
jge
dec
jne
push
add
cmp
jne
fsub
or
jmp
jns
sbb
push
sbb
mov
les
jns
mov
xor
pop
loop
lds
pop
ret
mov
fs
adc
mov
mov
add
xchg
or
dec
inc
dec
inc
mov
in
or
fsub
push
neg
pop
dec
call
jno
push
lar
and
enter
pop
and
and
mov
dec
scas
jge
rol
fcom
ss
mov
sub
or
add
mov
adc
and
push
inc
adc
imul
xchg
push
pop
das
pop
inc
or
xchg
loopne
adc
dec
cmp
mov
dec
pusha
xor
mov
mov
shrd
fsubr
pop
adc
jne
push
add
or
inc
lods
or
adc
jl
sub
pusha
sbb
cmc
stc
adc
sub
test
push
or
jne
pop
lock
nop
adc
adc
mov
out
jle
je
daa
jne
push
loopne
mov
mov
inc
pop
sub
mov
pop
dec
mov
add
mov
aad
call
dec
adc
jge
jbe
or
pusha
or
or
jl
cmp
addr16
rcr
jo
jo
fs
add
or
xchg
push
xchg
imul
jno
inc
ins
adc
clc
push
add
pop
in
mov
jmp
pusha
inc
daa
sar
push
cmp
in
adc
adc
sub
adc
cmp
fdiv
lea
sar
out
sub
lock
pop
or
pop
add
add
xchg
pop
or
add
(bad)
push
or
ins
inc
dec
sub
pushf
std
aad
inc
dec
ret
pop
jg
or
pop
aad
outs
dec
imul
call
mov
rol
(bad)
sub
push
cmc
ret
imul
call
xchg
rol
sbb
rol
leave
cdq
inc
ss
icebp
jne
imul
cwde
stos
mov
mov
adc
sub
pop
add
mov
inc
call
or
add
mov
cmp
cli
or
(bad)
push
outs
movs
mov
xlat
push
mov
stos
int3
add
mov
mov
sub
shl
and
call
jbe
cmp
jbe
leave
aad
adc
sub
push
pusha
adc
inc
dec
xchg
in
adc
or
or
ret
loopne
gs
mov
xlat
add
cmp
jge
mov
sub
imul
jbe
push
inc
sub
jle
xlat
sub
in
pcmpeqd
sub
sub
js
mov
and
aas
lods
rcr
jnp
test
or
sbb
jge
arpl
pop
jmp
cmp
inc
jle
xor
push
inc
push
sub
sti
inc
inc
ja
jle
push
rcl
das
xor
test
xor
cdq
and
(bad)
es
or
or
dec
mov
push
cmp
es
popa
push
inc
sbb
adc
xchg
or
loop
js
push
jmp
add
hlt
adc
sbb
ins
sbb
and
sub
sub
sbb
push
call
arpl
mov
add
jmp
sub
pop
cmp
cmps
mov
sbb
sub
sbb
lock
repnz
mov
dec
sbb
adc
repz
adc
and
jmp
fiadd
cwde
adc
fadd
mov
push
jg
dec
in
test
sub
sub
ja
rol
jae
adc
mov
imul
bound
movs
aaa
push
mov
(bad)
and
and
(bad)
mov
xchg
push
fucomip
lock
adc
pop
dec
cmp
jle
mov
mov
cmp
cmp
nop
loop
out
aam
mov
mov
mov
adc
add
sbb
inc
(bad)
fs
mov
or
adc
sbb
or
add
dec
push
addr16
cmp
ss
div
push
mov
xchg
mov
mov
dec
daa
ja
jb
inc
dec
mov
in
jle
and
std
(bad)
and
inc
sahf
dec
or
or
enter
xor
shr
fwait
pop
out
inc
xchg
or
sub
mov
cwde
add
or
adc
dec
mov
pop
pop
add
pop
add
rol
and
data16
add
test
mov
daa
and
xor
dec
fwait
test
push
inc
arpl
cld
jo
loope
repz
ss
inc
(bad)
fadd
pop
iret
xchg
stos
(bad)
and
and
out
imul
mov
xchg
sbb
adc
dec
shl
mov
rol
in
add
cmps
cmp
cmps
or
leave
call
pop
xchg
sub
mov
adc
xor
nop
gs
push
scas
cmp
sahf
std
jg
je
sub
std
cwde
sbb
fldenv
imul
xchg
push
xor
jbe
addr16
and
cmp
add
(bad)
gs
jbe
xchg
jbe
lahf
ret
jmp
sbb
stos
pusha
imul
ror
inc
mov
call
xchg
pushf
int
pop
cmp
mov
or
call
and
fwait
and
nop
add
mov
pushf
or
cwde
rcl
add
cmps
dec
push
adc
push
push
jno
or
inc
cmp
lock
iret
out
or
jl
dec
or
shr
xchg
(bad)
lahf
lock
mov
or
sub
sbb
nop
push
cmps
push
sbb
push
and
jbe
mov
mov
fcmovnbe
pop
fistp
mov
inc
fwait
and
popa
mov
cs
or
sbb
push
mov
or
and
push
pop
and
fisub
push
add
cwde
popa
or
(bad)
imul
sub
(bad)
adc
xchg
jb
xor
inc
ret
pop
(bad)
lds
inc
jge
sub
and
push
push
(bad)
and
cmp
sbb
push
xor
pop
xor
jo
sub
xchg
jle
shl
mov
sub
push
mov
nop
arpl
jb
pusha
ins
sbb
call
sbb
sbb
xchg
push
lock
add
jp
add
sti
div
sbb
jg
push
ins
and
push
test
arpl
sub
aas
adc
cmp
jae
or
adc
cwde
(bad)
fsub
lea
mov
xchg
ss
sar
xchg
mov
adc
mov
fstp
sti
(bad)
or
push
mov
push
fs
add
jae
ficom
xor
imul
inc
sbb
cmp
es
or
mov
movs
popa
xchg
jg
mov
ror
mov
mov
sbb
and
lock
and
movs
fsub
repz
xchg
rcr
mov
pop
shl
sub
ins
cmp
inc
sar
push
inc
add
dec
ja
ret
cdq
pop
or
ror
pop
js
push
fucomip
aaa
and
mov
cmp
xchg
xor
nop
push
dec
inc
or
mov
icebp
(bad)
and
sbb
dec
sbb
push
scas
mov
inc
sbb
gs
nop
(bad)
sub
leave
cmps
in
fadd
pushf
movsx
sbb
mov
mov
rdpmc
aam
test
aas
adc
pop
popa
push
push
and
out
daa
and
jge
mov
test
mov
call
outs
iret
lds
pop
inc
jns
ret
clc
or
je
shl
jo
cmps
mov
(bad)
xor
(bad)
sbb
push
jecxz
xchg
test
and
add
jbe
inc
or
dec
jne
dec
ret
mov
sbb
ror
ror
rcr
nop
adc
fst
push
xor
pusha
push
mov
xor
or
fldenv
sbb
enter
ja
cmp
push
push
ins
and
in
retf
jmp
pusha
dec
xchg
xchg
push
inc
loope
or
cwde
push
sub
leave
sbb
xchg
inc
add
stc
xor
xchg
jb
sub
and
push
dec
jne
hlt
pop
xor
adc
(bad)
test
dec
popa
ja
mov
sbb
add
dec
jb
xor
mov
ret
cmp
xchg
test
jmp
inc
loope
inc
movs
jo
inc
out
adc
inc
xor
mov
xchg
lods
inc
hlt
call
push
adc
daa
lock
pop
les
jmp
in
or
mov
hlt
inc
stos
or
int
pop
add
outs
add
add
rol
nop
adc
jo
fimul
xlat
jmp
jo
mov
sahf
xlat
push
std
xchg
and
inc
stos
in
adc
test
enter
sbb
push
rcl
mov
popa
leave
and
repnz
or
(bad)
aad
push
sub
test
shl
and
pop
mov
add
mov
fisub
aam
mov
inc
mov
mov
add
test
and
sbb
icebp
jp
and
inc
jecxz
xor
(bad)
push
or
jl
xor
jne
add
mov
ins
sub
add
jg
add
mov
int
add
cmps
xor
ss
dec
daa
xor
mov
push
inc
lea
mov
dec
test
pop
cmp
mov
and
enter
dec
inc
lods
loopne
rol
sub
dec
and
or
lock
dec
daa
in
arpl
mov
adc
mov
pop
test
adc
jb
xchg
adc
dec
arpl
push
fisttp
add
xor
and
(bad)
aas
pop
dec
pop
and
(bad)
and
adc
lods
xor
ss
mov
push
xchg
pop
cmp
mov
mov
xor
pop
hlt
clc
inc
fs
outs
xor
mov
push
fwait
sbb
and
add
or
movs
dec
out
fnstsw
cmps
mov
mov
mov
nop
ja
sub
sbb
popa
in
and
push
test
pop
cmp
shl
sub
out
je
add
nop
push
dec
ins
jnp
sub
pushf
cwde
dec
jle
aaa
xchg
cmp
les
aaa
jnp
sbb
jnp
retf
lds
sbb
or
fabs
outs
aam
inc
cmp
cmp
cmp
sub
std
popa
clc
pop
call
ret
pop
ret
adc
rcl
inc
repnz
dec
js
mov
mov
leave
adc
adc
or
nop
or
push
xchg
pop
xchg
leave
jno
stos
push
cmp
iret
push
push
mov
or
in
sbb
nop
push
sub
sub
loope
and
mov
mov
aaa
out
cmps
and
(bad)
mov
jo
rol
je
in
pop
mov
add
adc
inc
loop
sub
sbb
sub
pop
push
adc
or
inc
ins
sbb
push
call
mov
ret
pusha
sub
jmp
ds
xor
enter
cdq
nop
push
rcr
fst
popf
add
or
(bad)
test
out
push
repnz
jo
nop
daa
das
pop
ror
js
sub
or
inc
popa
add
sub
aas
stos
or
cmp
sub
clc
jge
cli
adc
xchg
test
mov
loop
fwait
cdq
stos
sbb
mov
push
sbb
(bad)
fcomp
jge
cmc
dec
mov
cmps
xor
(bad)
xchg
push
xor
es
rcr
and
je
fbld
enter
fwait
shr
out
outs
adc
mov
or
jge
xchg
xor
callw
ficomp
sub
lods
or
adc
stos
sbb
les
add
lahf
sbb
les
ret
test
xor
push
cmp
imul
sub
movs
sub
imul
mov
mov
popf
add
arpl
push
mov
sar
push
push
sub
cwde
xor
add
out
lahf
je
outs
adc
dec
xchg
xchg
and
out
mov
jb
push
xor
sub
inc
xchg
bound
adc
mov
mov
mov
xchg
nop
js
dec
xchg
sub
lods
mov
test
adc
adc
mov
add
fbld
popa
push
sbb
(bad)
imul
add
sub
push
xchg
nop
xchg
xor
repnz
mov
enter
jmp
sbb
add
pop
xor
add
idiv
imul
xchg
in
or
and
mov
mov
or
popa
push
mov
sub
or
popf
xchg
adc
add
add
or
add
add
test
frstor
sub
cmp
push
in
push
mov
retf
mov
or
and
adc
add
sub
add
push
or
sbb
add
dec
shl
push
leave
dec
mov
adc
nop
call
push
cmp
dec
das
stos
add
pop
jbe
cmp
adc
pushaw
dec
or
leave
dec
call
lea
out
pop
xchg
sbb
xchg
xor
call
sub
add
xchg
clc
and
inc
fidivr
movs
mov
push
inc
sbb
imul
or
ror
es
inc
pop
test
imul
(bad)
adc
jne
inc
mov
int
imul
add
daa
nop
dec
push
cmp
mov
xchg
mov
dec
xchg
fcomip
jo
or
xor
fcomp
movs
nop
or
dec
xor
xchg
cs
je
lods
dec
lahf
pop
fisub
adc
out
cmp
sbb
push
pop
or
or
sub
push
ins
adc
push
je
inc
fld
sbb
cmp
push
or
xor
inc
lods
ss
sbb
sbb
pop
ret
adc
mov
push
push
pop
ins
adc
iret
(bad)
push
xchg
xchg
or
pop
les
xor
inc
and
inc
stos
pop
cmp
fs
imul
jns
adc
cmps
cmp
xor
fbld
xor
pop
seto
add
dec
mov
xchg
rcl
mov
mov
inc
enter
sub
pop
seta
sub
add
rcr
sub
xchg
adc
cmp
add
pop
mov
pop
jbe
aam
push
push
cmps
movs
ins
xchg
mov
xchg
mov
mov
inc
or
push
jl
inc
mov
std
out
dec
dec
and
mov
xchg
or
je
push
jbe
cmp
cdq
add
inc
ins
xor
sub
pop
inc
repz
popa
cmp
test
push
mov
and
fcom
arpl
sbb
cmp
mov
fadd
fld
dec
mov
fwait
cs
sbb
add
std
stc
dec
clc
bndldx
sahf
inc
mov
in
cld
mov
(bad)
rol
outs
ret
mov
mov
xor
xchg
cmps
mov
xor
popf
or
adc
shl
sub
les
mov
fs
and
les
fiadd
xor
arpl
adc
adc
shl
sub
mov
scas
ins
or
mov
pop
jae
and
call
clc
cmp
ja
inc
pop
das
cmps
adc
ret
or
push
into
inc
sbb
daa
dec
or
mov
push
sub
or
adc
dec
jnp
jmp
mov
sub
inc
inc
adc
inc
add
pop
shl
ret
mov
fcmovu
ins
out
sub
cmps
pop
stos
(bad)
into
pop
daa
push
inc
pop
aas
or
xchg
into
(bad)
mov
sbb
mov
and
mov
push
xchg
jns
and
push
adc
xor
jo
stc
data16
and
xor
jmp
das
add
loope
arpl
and
fbld
adc
pop
pop
or
daa
add
mov
sub
movs
add
xor
test
retf
cmps
in
mov
mov
dec
pusha
push
outs
inc
xor
jnp
ja
push
std
and
lods
mov
ins
retf
pop
mov
push
dec
mov
sbb
lods
push
inc
mov
pushf
push
jp
mov
iret
or
imul
rol
cmp
retf
or
test
and
or
int3
push
daa
xchg
imul
and
mov
or
fcomp
add
jae
or
pop
and
jnp
mov
popa
mov
mov
mov
push
(bad)
mov
test
addr16
ins
mov
ins
and
mov
inc
ror
call
or
inc
xor
add
push
adc
outs
cdq
mov
cmp
or
ror
and
rcr
pop
add
add
in
dec
xor
test
inc
sub
xor
or
push
xor
dec
pop
xor
pop
pop
int3
outs
movs
fiadd
sbb
add
cmps
shl
pop
push
adc
push
mov
push
clts
add
mov
fsub
mov
je
push
das
or
js
pop
outs
jl
sbb
xor
pusha
movs
test
xchg
mov
mov
repz
cmp
xchg
nop
push
adc
fstp
imul
sub
fisubr
cwde
std
bound
ja
mov
push
rcr
sub
pushf
push
(bad)
enter
mov
inc
mov
dec
mov
adc
add
mov
xor
ja
and
mov
or
and
xor
jo
jle
pusha
ret
sbb
pop
and
arpl
mov
jno
and
xchg
fbld
inc
hlt
sbb
lahf
popa
fs
pop
mov
cmp
leave
dec
sub
jnp
push
jle
and
and
maskmovq
imul
pop
push
jb
data16
inc
lods
ror
adc
jp
repz
or
inc
clc
fcomp
adc
add
out
inc
inc
jnp
pop
inc
cmp
retf
push
sbb
push
add
mov
cmovo
xor
jne
mov
arpl
addr16
add
adc
dec
and
mov
jb
js
mov
fnsave
lock
movs
push
push
aad
pop
mov
movs
ins
pop
adc
clc
jge
imul
dec
mov
mov
shr
out
adc
push
push
pop
and
xchg
pop
pop
inc
mov
fcomp
ret
mov
rcr
ret
adc
dec
cmp
leave
lea
or
inc
inc
and
arpl
dec
add
mov
push
or
sub
or
aas
jecxz
add
jmp
mov
or
dec
cs
sar
or
stos
pop
pop
cmp
ins
xor
mov
sub
mov
js
jmp
mov
ins
jbe
and
sbb
sub
adc
movs
in
and
arpl
dec
movs
jl
and
push
in
icebp
pushf
or
fcom
popa
push
jne
dec
pop
push
popa
push
addr16
out
push
test
add
inc
jb
movs
hlt
xor
jae
adc
je
rcr
in
add
or
xor
adc
call
ror
jbe
mov
sub
clc
cwde
sbb
jecxz
sqrtps
nop
sbb
push
ret
retf
mov
pop
mov
xchg
push
add
push
bound
shl
cwde
adc
aaa
pushf
stos
mov
pop
adc
add
test
outs
cs
inc
sub
jge
popa
call
or
push
or
or
jp
sub
or
out
je
cs
imul
aas
push
dec
and
inc
lar
sahf
jnp
pop
cmc
cdq
mov
movs
or
test
jbe
inc
ds
or
adc
mov
(bad)
(bad)
cmc
adc
in
retf
cmp
in
retf
inc
push
mov
or
xchg
adc
outs
(bad)
jmp
or
lahf
xchg
push
mov
mov
or
inc
mov
dec
add
pusha
sub
or
test
pop
pusha
cmp
cmp
nop
dec
pusha
movs
sbb
in
or
push
adc
push
and
js
adc
sar
mov
push
int3
inc
sbb
in
inc
enter
fdivr
jns
shl
loopne
or
pop
xchg
push
arpl
not
in
inc
lods
aas
ror
inc
loope
or
hlt
fisubr
xor
push
rcl
adc
adc
stos
sub
push
adc
sbb
(bad)
cmp
iret
outs
jae
mov
js
add
pop
add
dec
ins
fisttp
adc
sub
push
push
mov
push
push
test
mov
push
adc
lds
jo
sbb
and
sbb
sbb
inc
mov
add
add
lods
stos
(bad)
setnp
sbb
pop
das
js
xor
xor
leave
xor
mov
xchg
fiadd
pop
pop
mov
inc
pop
cmp
dec
and
and
fs
xchg
inc
xchg
xchg
sbb
mov
pop
inc
ins
or
retf
cmp
(bad)
int3
mov
adc
jge
call
mov
stos
inc
pop
lea
adc
or
nop
pop
adc
add
pop
jb
add
xchg
push
enter
add
out
cmp
inc
aaa
mov
or
clc
mov
or
inc
pop
pop
jle
iret
mov
mov
clc
add
pop
xor
nop
cld
(bad)
out
cmp
sub
or
sub
xor
dec
fcmovne
push
outs
inc
and
xor
pop
sub
(bad)
adc
mov
and
ja
push
dec
jg
or
lock
mov
xchg
sub
sub
(bad)
out
shl
mov
or
or
in
scas
pop
daa
dec
jp
mov
fwait
cmp
add
mov
enter
sbb
adc
inc
push
sub
fadd
sbb
aas
hlt
pop
fsub
xchg
add
pop
adc
dec
xchg
cmps
and
fadd
or
fs
rcl
cmc
aam
lea
lock
ins
enter
int3
and
outs
adc
mov
or
cmp
sub
push
ret
idiv
jb
stc
mov
cld
pusha
dec
loopne
ret
adc
adc
xor
repnz
mov
sar
xor
inc
push
push
fs
mov
mov
mov
mov
mov
addr16
xchg
rol
mov
iret
lods
or
xchg
mov
enter
cwde
pushf
add
mov
xor
leave
mov
nop
nop
test
in
xchg
test
inc
mov
add
and
dec
push
aad
or
sbb
jo
pop
mov
jo
inc
jl
loop
and
fs
in
ins
xor
mov
jo
mov
and
cmp
and
jns
pop
push
push
pop
and
xchg
push
push
xlat
pop
pusha
mov
xor
adc
pop
xchg
sbb
call
inc
cmp
inc
outs
leave
enter
inc
inc
adc
les
cmc
movs
(bad)
cmp
add
sbb
dec
(bad)
mov
fild
cdq
loopne
cvttps2pi
sbb
add
xchg
dec
xor
scas
mov
sbb
adc
fs
adc
sbb
fsub
dec
add
xchg
jle
inc
jmp
leave
fld
mov
or
mov
or
jne
jp
inc
ja
das
and
pop
or
or
xor
cld
std
and
leave
nop
sbb
add
sbb
pop
add
mov
and
cwde
hlt
clc
std
xor
mov
adc
mov
enter
call
jns
pop
in
call
sbb
js
lds
fdivr
movs
pop
popa
xor
mov
mov
sub
pop
push
inc
test
inc
xor
mov
xchg
sbb
inc
(bad)
addr16
in
jo
rcl
jmp
xchg
push
nop
add
leave
push
leave
je
push
retf
cmps
sbb
mov
enter
loopne
push
test
xor
int3
aaa
rcl
add
pop
or
in
sbb
adc
(bad)
(bad)
shl
int3
cmp
adc
adc
sbb
in
inc
mov
inc
fidiv
push
shl
xor
mov
dec
lods
xchg
lods
xor
iret
mov
xor
mov
and
aas
movs
test
xchg
sbb
test
pushf
inc
cs
cwde
test
add
mov
nop
cmp
nop
and
lds
jno
sbb
cmp
pop
enter
imul
and
bound
in
les
leave
aad
xor
lods
push
daa
dec
pop
jne
jmp
mov
xor
pop
and
dec
sbb
retf
movs
inc
pop
xchg
pop
and
mov
jnp
jns
hlt
xor
loopne
adc
or
xor
push
fs
jo
xor
aam
ds
out
dec
fiadd
fimul
in
xchg
add
retf
stos
mov
pop
loopne
dec
in
lock
sub
xchg
push
pop
pop
xor
lods
mov
lea
mov
add
cwde
xchg
adc
push
in
mov
lods
in
nop
add
daa
repnz
xor
adc
rol
(bad)
ss
popa
add
add
and
gs
add
add
test
arpl
and
inc
call
mov
in
pop
aas
or
adc
xchg
nop
pop
and
and
inc
pop
lahf
dec
arpl
inc
and
push
dec
pop
add
les
jae
(bad)
mov
push
sbb
fidivr
cmp
ficom
push
jne
cmp
dec
jo
xor
popa
inc
adc
movs
push
mov
sbb
enter
js
xchg
dec
jae
in
or
out
dec
scas
pop
cmp
ret
dec
jne
test
xchg
and
int
in
movs
not
dec
popa
dec
stc
cmp
fmul
xor
jno
jmp
out
sbb
popa
jbe
ja
dec
je
jo
ins
sub
sub
jnp
ins
push
and
and
js
cmps
data16
xchg
sub
fadd
outs
and
cmp
sbb
jmp
daa
sbb
cdq
sbb
ins
in
nop
jmp
pop
and
sbb
data16
adc
dec
cdq
(bad)
sbb
lods
loopne
or
push
stos
xchg
loope
test
adc
jo
pop
and
or
int
shr
jb
imul
ss
push
and
dec
stos
(bad)
(bad)
out
and
adc
push
daa
jmp
bound
and
mov
pop
xchg
mov
loop
mov
mov
sbb
jae
xor
inc
pop
or
cmc
sbb
jge
cmps
inc
fmul
jb
arpl
sbb
fwait
int3
add
test
add
xchg
clc
add
dec
cmp
jne
jae
mov
xor
sbb
test
xchg
or
test
cs
in
out
or
xor
cmp
xor
add
mov
sbb
adc
mov
ror
or
mov
(bad)
jns
add
stos
sbb
lea
xchg
lea
dec
and
and
xor
push
add
cmp
add
or
or
ins
aam
int3
ds
dec
aaa
fcomp
push
fdivr
mov
(bad)
popa
adc
add
stos
int3
(bad)
les
repnz
dec
das
jmp
mov
push
mov
or
mov
mov
mov
mov
xchg
nop
xchg
or
mov
pcmpgtb
mov
nop
mov
mov
popa
xor
add
pusha
inc
shl
xchg
mov
pushf
mov
test
mov
push
lds
add
lds
mov
mov
or
pusha
mov
ret
push
repnz
scas
pop
mov
adc
movs
xor
in
(bad)
jge
or
jo
aas
sbb
push
fld
xchg
push
add
pushf
pop
jae
mov
xor
or
inc
(bad)
rcr
xchg
in
sub
es
lea
cli
add
and
inc
xor
inc
and
loopne
cmp
inc
dec
cwde
add
sbb
mov
das
pop
and
ret
nop
test
jmp
inc
sbb
cwde
inc
cmp
or
inc
nop
and
xor
(bad)
and
aad
pop
loope
cld
add
jl
(bad)
movs
mov
ins
rcr
aas
cmp
fmul
inc
mov
mov
mov
inc
cmp
fdivr
jns
or
psubb
xchg
ret
sbb
mov
pop
fs
pop
cwde
sbb
popa
add
cmp
js
jnp
movs
inc
mov
ror
add
jmp
sub
pop
jns
jmp
push
sub
js
mov
test
dec
push
sar
nop
pop
xchg
add
xchg
xchg
xor
cmps
xor
aas
xor
fmul
jnp
adc
cld
push
xor
xchg
sub
les
dec
cmp
mov
aas
lea
ror
ret
lahf
dec
mov
or
push
add
data16
sbb
arpl
enter
adc
test
ret
and
jmp
cmc
add
inc
data16
scas
dec
in
pop
jno
into
pop
mov
jo
lea
inc
mov
stos
out
ins
iret
dec
add
inc
xchg
mov
jns
nop
jbe
test
sub
mov
popa
addr16
cs
pop
pop
mov
jecxz
cmp
inc
dec
int
add
dec
or
add
push
retf
xchg
sub
cmp
fs
daa
fild
xchg
xor
ds
(bad)
add
add
add
pop
sub
jae
outs
in
sar
and
xor
fs
fs
sbb
leave
pusha
fs
push
mov
and
pop
daa
push
pop
xchg
dec
and
mov
push
sbb
xor
and
test
inc
int3
outs
xchg
adc
push
sbb
sbb
cmp
clc
dec
daa
cmp
fimul
or
xor
pop
fs
push
ret
(bad)
div
inc
aad
pusha
adc
out
lock
push
sbb
inc
loopne
stc
outs
mov
inc
cmp
sbb
inc
es
loope
pop
js
inc
daa
scas
loopne
mov
add
fsub
xchg
inc
je
es
xor
add
je
sub
mov
mov
inc
ficomp
and
xor
inc
pop
(bad)
and
push
dec
mov
mov
imul
inc
dec
je
dec
add
xchg
outs
and
imul
and
in
inc
and
add
(bad)
pusha
and
enter
sbb
pop
sub
adc
mov
push
sub
mov
nop
dec
sub
xor
(bad)
pop
inc
sbb
(bad)
xor
push
mov
dec
daa
jae
cmp
mov
dec
daa
inc
push
or
stos
sbb
mov
push
mov
nop
dec
dec
push
rcl
je
pop
pop
daa
clc
push
nop
dec
jecxz
ret
push
or
push
xlat
test
loope
mov
test
inc
dec
or
mov
cmp
dec
push
xchg
inc
adc
test
shr
cmp
mov
imul
push
ret
imul
mov
add
and
adc
cmp
pop
push
out
push
(bad)
lods
mov
cmp
mov
jle
mov
and
retf
mov
push
lock
into
jb
push
jmp
sti
call
call
popf
push
out
sub
in
or
push
or
jnp
jns
push
in
pop
xchg
and
and
sbb
aad
aas
retf
aam
and
dec
adc
rcr
dec
jnp
pop
sbb
jno
hlt
sbb
dec
outs
cld
sar
sub
jno
rcl
pushf
iret
push
jb
pushf
push
sub
movs
and
xchg
add
cwde
cwde
mov
imul
add
jl
push
dec
ins
fistp
adc
and
js
rcr
jmp
jecxz
cmp
jb
iret
daa
mov
pushf
jecxz
mov
or
mov
push
repnz
imul
sbb
imul
push
cmp
or
sbb
in
xor
dec
pushf
push
push
xchg
and
imul
les
pop
cmp
add
and
sub
xchg
inc
jne
and
mov
fbstp
(bad)
cmp
fcmove
push
xchg
jg
imul
inc
dec
int3
mov
pusha
arpl
lds
test
xor
cmps
push
xchg
shr
mov
and
imul
and
jp
popa
je
dec
jno
sbb
hlt
imul
push
add
scas
xor
movs
cs
dec
rcl
lds
outs
fsubr
out
popa
(bad)
int
aam
inc
sub
movs
(bad)
gs
or
push
and
leave
or
mov
adc
xor
pop
sbb
adc
sbb
sbb
push
movs
lea
pusha
xor
add
push
pop
jb
mov
sti
test
loope
pushf
or
aaa
and
and
sub
mov
test
xchg
aam
sbb
pop
lods
add
aas
adc
or
(bad)
retf
dec
stos
mov
arpl
sbb
jns
aam
adc
adc
inc
(bad)
(bad)
jns
push
adc
mov
adc
pop
mov
enter
xchg
sbb
and
jne
xchg
adc
xchg
ja
sub
lods
pop
push
adc
loope
movs
int
hlt
jecxz
xchg
out
push
push
xlat
sbb
sbb
lods
adc
dec
out
mov
cmp
and
pop
and
jno
mov
es
mov
(bad)
cld
repnz
aam
mov
mov
cmps
fbstp
jae
iret
sbb
test
sub
neg
sahf
sbb
iret
loope
add
test
movs
ror
sbb
addr16
repnz
dec
sub
cmps
lods
pop
daa
xchg
mov
test
jmp
dec
inc
adc
dec
in
enter
mov
mov
arpl
call
jo
sbb
dec
je
test
mov
push
je
outs
and
and
dec
mov
ret
fcomp
in
and
fucomp
mov
(bad)
adc
daa
cmps
test
mov
jae
aam
call
scas
pop
popf
cmp
cmp
pusha
lods
jmp
in
or
jmp
xor
scas
dec
je
and
cli
or
xor
in
rcr
jo
mov
and
dec
lock
cmp
jmp
popa
push
add
bound
push
int3
or
xchg
mov
jle
sbb
fdiv
dec
fdivr
jbe
sbb
fdivr
adc
jle
pop
aam
inc
sbb
aam
push
pop
xchg
arpl
push
mov
or
and
jge
sbb
push
nop
popa
pop
and
sbb
sub
mov
add
enter
push
enter
xor
rcr
js
push
shr
dec
sub
(bad)
lods
and
xchg
mov
xor
sub
pop
mov
aad
lods
std
mov
mov
in
sbb
sar
fisubr
or
push
sbb
adc
adc
mov
or
mov
xlat
fcmovnb
push
add
(bad)
mov
and
(bad)
push
inc
ss
sbb
cs
pop
aas
lods
or
pop
mov
xor
xor
adc
cmc
test
push
ja
xor
jl
and
and
lea
out
aaa
pop
xor
mov
inc
push
mov
mov
jb
adc
adc
pop
bound
outs
les
adc
test
add
ror
and
test
dec
loopne
or
scas
addr16
or
fnstcw
ins
lea
mov
adc
mul
mov
sub
lock
ror
scas
rcr
or
pop
imul
pop
xchg
pop
or
pop
push
jne
inc
loope
push
retf
add
rcr
push
add
cmc
movs
pushf
add
mov
cdq
or
pop
mov
in
cmp
push
jmp
and
sti
call
mov
mov
mov
xor
or
adc
and
mov
test
add
sbb
fcom
pop
xor
and
mov
mov
mov
xchg
or
aad
mov
sbb
or
push
daa
adc
adc
sub
or
or
outs
sub
sub
xchg
ror
fsubp
sbb
adc
ins
add
ins
xchg
nop
in
xchg
sub
adc
je
add
jo
push
xchg
pop
lods
inc
dec
sbb
mov
sub
or
xchg
xchg
mov
(bad)
cmp
dec
lea
nop
mov
sbb
or
in
add
div
fwait
sub
add
xor
jg
and
and
and
push
ja
push
loope
or
test
adc
mov
or
or
add
ins
clc
xor
mov
dec
retf
cmps
jecxz
out
aam
jo
push
int3
inc
sub
loopne
lahf
jle
pop
mov
rcl
sub
loopne
es
or
lods
jo
(bad)
adc
jnp
cmps
inc
dec
repnz
sub
and
cmp
inc
je
adc
xchg
pusha
repz
adc
push
stos
xchg
mov
xchg
xor
xor
ins
push
xchg
test
xchg
xchg
pop
fnsave
nop
pop
aam
test
test
dec
in
call
mov
aam
push
stos
leave
mov
inc
adc
jnp
sti
(bad)
sbb
adc
loopne
in
jge
fmul
cld
cmp
inc
ins
inc
push
aam
adc
sar
mov
cmp
xchg
pop
adc
sbb
por
xchg
sbb
cmp
shl
mov
pop
pop
push
pop
pop
pop
pusha
gs
dec
cmc
ret
scas
add
jne
jno
xchg
or
adc
xchg
sbb
pop
jmp
arpl
sub
inc
push
fnstsw
ret
popa
(bad)
enter
xor
or
call
cdq
add
adc
sub
popf
and
daa
jge
cmc
nop
mov
movs
mov
call
push
mov
sub
js
stos
add
dec
mov
add
cmp
push
push
ss
cmp
sub
movs
in
imul
aad
and
xchg
add
daa
jg
fs
nop
sbb
fnstenv
jge
push
mov
std
pop
push
mov
out
jmp
adc
fsubr
adc
enter
cmp
imul
cwde
dec
popf
into
xor
push
pop
jbe
adc
adc
fiadd
inc
popa
adc
jns
mov
or
js
xor
add
repnz
fldenv
jo
imul
push
sub
and
xchg
les
or
scas
data16
or
mov
pop
adc
adc
mov
add
push
mov
arpl
stos
(bad)
push
adc
push
and
adc
push
xchg
and
dec
inc
jae
and
xchg
sub
mov
popa
inc
bound
or
dec
arpl
add
fadd
dec
pusha
ja
add
xor
jae
mov
pusha
xor
aaa
sbb
out
inc
into
adc
and
adc
pop
xor
adc
and
sbb
sub
test
mov
pop
movs
add
inc
clc
cmc
adc
sub
into
and
lods
adc
sbb
fistp
repnz
push
daa
mov
mov
imul
push
jns
and
les
(bad)
push
push
les
push
sbb
icebp
mov
mov
ret
jo
jns
fisttp
(bad)
dec
fsub
inc
cmp
cmc
mov
cdq
cmps
ja
pop
jl
out
add
loopne
mov
add
clc
mov
inc
jmp
mov
add
dec
jmp
enter
dec
or
sbb
or
adc
sbb
sub
bound
fidiv
fimul
push
jb
stos
imul
push
dec
aaa
test
ficom
addr16
dec
inc
lds
and
push
jns
retf
rcr
sbb
jl
mov
cmps
mov
test
nop
pusha
mov
sub
test
mov
ret
sub
xchg
mov
push
pushf
add
jmp
mov
or
mov
adc
push
jp
sbb
hlt
enter
jg
push
inc
add
imul
or
add
adc
xchg
mov
and
cmps
push
das
cmps
inc
stos
imul
lds
aaa
and
dec
push
add
daa
fs
outs
out
adc
push
xchg
xchg
xchg
cmp
xchg
push
push
scas
sahf
pusha
cmc
and
dec
or
push
mov
push
pop
mov
outs
push
adc
ins
jno
pop
mov
mov
or
bound
jo
jbe
ins
das
sbb
mov
and
cmp
push
idiv
(bad)
xchg
jae
aam
test
les
shl
push
(bad)
sbb
sbb
test
push
test
inc
jl
dec
push
lock
sbb
or
push
rcr
inc
mov
push
les
mov
push
lock
push
ss
into
jge
cmp
sub
cmp
add
sub
inc
sub
inc
cmps
lods
cmp
add
loope
les
jne
push
ror
bswap
adc
sbb
loop
fwait
and
(bad)
bound
imul
mov
loope
test
mov
mov
add
mov
jno
add
pop
outs
inc
xchg
js
cmp
and
push
jge
out
adc
test
test
das
mov
pop
xchg
dec
loopne
mov
push
mov
xchg
ret
jbe
add
or
adc
(bad)
mov
jb
inc
aaa
outs
pop
retf
xor
adc
or
mov
mov
and
cmc
pusha
mov
or
push
movs
pop
(bad)
idiv
push
push
out
out
sbb
mov
mov
iret
pushf
adc
pushf
enter
cwde
cwde
mov
pop
adc
pcmpgtb
movs
repz
mov
add
add
and
dec
ds
mov
inc
mov
dec
aam
adc
inc
push
dec
inc
jl
jl
leave
ret
or
(bad)
adc
sbb
fnstenv
ss
hlt
fld
push
xor
and
shr
pusha
add
adc
and
out
or
mov
xchg
sbb
mov
movs
lahf
mov
xor
jmp
cld
push
xchg
pusha
fadd
cs
(bad)
push
in
fistp
stos
adc
xor
fsubr
sub
aam
dec
imul
outs
pop
and
push
mov
and
enter
pop
pop
fnstenv
out
pop
pushf
inc
into
push
push
cmp
dec
dec
sbb
dec
adc
sbb
js
cmc
sub
daa
push
jecxz
or
push
call
(bad)
jmp
aad
adc
mov
sbb
mov
push
pop
pop
out
ret
add
sar
sub
mov
push
(bad)
in
cmp
movs
jmp
dec
ja
sbb
lods
loopne
repz
push
cmp
dec
inc
cmp
inc
adc
jne
mov
mov
push
(bad)
pop
fdivr
nop
xchg
and
sbb
sub
fs
mov
sub
nop
xchg
dec
sub
and
clc
call
mov
sub
mov
and
push
ss
fst
mov
popa
mov
aaa
xchg
mov
fmul
jae
and
jne
and
and
stos
stos
sbb
add
leave
dec
cmp
mov
inc
aaa
add
loopne
jb
hlt
(bad)
and
outs
and
aaa
sbb
mov
push
and
sub
and
loopne
pusha
mov
cs
call
leave
add
loopne
jl
test
fadd
sti
xchg
adc
hlt
aad
leave
dec
sar
stos
and
push
pop
or
sub
mov
in
popa
and
pop
leave
int3
int3
shl
and
adc
push
ss
sbb
lock
jne
cmp
dec
or
or
pop
mov
sub
inc
or
add
inc
sub
mov
dec
scas
mov
and
mov
xchg
or
inc
inc
loop
push
adc
aaa
xor
xchg
cs
jo
pop
mov
mov
adc
add
push
or
adc
xor
xchg
sbb
xor
and
xchg
mov
popa
cwde
ret
cwde
sub
adc
push
jb
enter
xchg
mov
nop
in
nop
xchg
ss
lock
or
sbb
dec
xor
les
jl
sub
adc
or
pop
sbb
adc
ins
ins
jo
leave
and
leave
enter
fs
push
add
pop
pusha
dec
inc
scas
ss
fist
adc
and
xchg
mov
cdq
inc
repnz
leave
leave
nop
pop
push
push
cmp
mov
leave
xchg
pushf
xor
xor
enter
xor
pusha
test
or
test
lods
cli
test
iret
(bad)
mov
mov
sar
adc
xor
xor
(bad)
ror
pop
or
mov
enter
dec
js
and
enter
and
out
xchg
mov
mov
cmp
adc
sbb
mov
push
xchg
or
xchg
dec
jno
sbb
push
jo
add
in
nop
and
in
out
cmp
loopne
sar
and
je
add
in
movs
and
lock
lea
mov
ror
adc
or
add
cld
std
push
push
fst
loopne
js
ins
mov
xchg
mov
dec
add
jno
movs
fcomi
repnz
call
fstp
(bad)
in
dec
inc
popf
or
int
adc
stos
pop
cs
call
cmp
adc
sar
xchg
or
mov
in
dec
data16
mov
xchg
lods
lods
mov
leavew
stos
or
test
and
dec
and
dec
test
pop
jbe
push
sub
daa
fdiv
dec
pop
mov
loopne
stos
fmul
or
ds
xchg
mov
dec
ds
cmp
bound
(bad)
jbe
ins
lods
pop
repz
shr
pop
aam
xor
xor
inc
sbb
inc
sub
jne
xchg
mov
pusha
xlat
cmp
adc
mov
push
add
test
(bad)
dec
push
(bad)
mov
inc
sahf
or
mov
push
outs
loope
adc
adc
loopne
adc
lahf
add
push
adc
ror
stos
movs
or
mov
push
jle
add
add
imul
mov
xchg
lahf
xor
and
iret
lods
add
invd
sub
pop
inc
sub
add
push
dec
addr16
mov
lahf
scas
ret
and
and
and
and
test
cmp
and
add
or
inc
outs
sub
and
(bad)
or
xchg
test
ja
add
lods
nop
icebp
push
or
(bad)
in
xor
xchg
or
mov
and
mov
fistp
jo
daa
dec
and
or
daa
inc
adc
adc
pop
inc
enter
scas
add
mov
mov
je
xchg
xchg
dec
inc
(bad)
sub
adc
mov
add
jne
and
and
bound
and
ret
faddp
outs
dec
lods
dec
enter
jge
pop
and
retf
mov
mov
push
cmp
call
ins
js
dec
mov
add
call
div
pop
cwde
push
ins
loop
loopne
jecxz
out
fld
sub
les
pop
jl
dec
and
xor
sub
xchg
mov
pop
inc
mov
adc
daa
sar
gs
xchg
mov
pop
popf
ss
or
das
push
jle
mov
push
xor
inc
daa
adc
add
cwde
jl
retf
jbe
repz
xchg
push
clc
jb
mov
shl
add
sbb
les
mov
xchg
pushf
sbb
push
dec
(bad)
sbb
nop
pop
imul
push
aam
movs
push
push
sub
adc
in
push
pop
mov
mov
mov
mov
mov
mov
fadd
push
lods
lock
movs
fnsave
mov
ss
mov
push
shr
mov
(bad)
pop
imul
dec
es
cmp
in
cs
add
lods
mov
push
sbb
in
outs
sbb
(bad)
sti
mov
and
pusha
inc
xor
push
aaa
retf
clc
push
js
mov
push
hlt
clc
int
retf
data16
(bad)
sub
call
push
pop
retf
ja
fiadd
dec
mov
pop
adc
aam
pop
inc
or
rol
mov
in
pop
ss
xlat
push
or
mov
pop
daa
mov
das
mov
out
mov
pop
mov
sub
and
jae
pushf
push
ins
push
pop
outs
imul
push
cld
jb
jl
dec
push
and
gs
xchg
cwde
push
aad
bnd
add
xlat
xchg
lods
push
sbb
out
ds
(bad)
pop
sbb
fimul
pusha
pop
inc
mov
push
or
dec
sbb
xchg
out
mov
pop
and
imul
push
lods
push
test
dec
(bad)
gs
push
enter
xchg
test
mov
cdq
test
dec
rol
shl
(bad)
data16
gs
mov
cmp
es
in
stc
fiadd
into
pop
adc
loopne
jl
fldcw
dec
pop
imul
call
xchg
pop
dec
or
push
loopne
xchg
mov
fwait
gs
fiadd
rcl
daa
xchg
push
mov
inc
fs
retf
data16
aam
mov
pop
ss
stos
lock
cmps
stc
ss
mov
jo
jns
sbb
jne
and
pop
push
mov
fisttp
lods
mov
out
addr16
js
sub
outs
mov
mov
pushf
pop
jo
mov
popa
pop
mov
mov
mov
xor
cmp
fbld
inc
in
add
inc
xor
fisttp
add
test
add
jnp
or
xor
mov
add
jl
fnsave
pop
add
add
and
pop
and
(bad)
mov
int3
enter
enter
fmul
(bad)
(bad)
(bad)
loopne
jecxz
pop
rcl
push
dec
imul
add
xchg
mov
inc
cs
adc
je
imul
add
push
adc
lds
mov
adc
push
xchg
fcomp
add
adc
xor
popa
lods
push
pop
mov
dec
mov
push
dec
dec
push
add
push
test
push
js
mov
cwde
mov
imul
cmps
imul
or
xor
rcl
sbb
sub
dec
shl
pop
pusha
xor
shl
jo
or
xchg
mov
imul
leave
or
fs
popf
enter
test
pop
xchg
enter
shl
mov
enter
mov
or
mov
rol
jb
mov
lahf
rcr
cmp
in
mov
add
inc
push
movs
add
jb
sbb
add
pop
faddp
push
xlat
adc
(bad)
pop
inc
mov
inc
add
pop
jg
pop
mov
add
add
add
in
add
add
fwait
mul
mov
push
dec
add
pop
or
add
pop
fstp
sti
xchg
add
pop
add
add
jo
mov
pop
add
or
cmps
into
out
push
mov
nop
retf
push
or
xchg
test
add
pop
mov
ror
scas
pushf
push
lods
xchg
call
and
or
imul
or
or
add
or
pop
push
adc
fiadd
icebp
jmp
dec
cs
(bad)
mov
into
pop
jmp
sub
add
add
popa
shl
sub
ficom
fbld
adc
scas
pop
mov
push
and
push
add
push
stos
imul
xor
sbb
add
mov
jbe
push
push
push
push
pop
out
in
ficomp
and
add
outs
retf
imul
jle
mov
cmps
retf
int3
sti
ins
in
jne
pavgb
or
add
cmps
imul
cmps
imul
cmps
imul
hlt
rcr
sbb
sbb
shl
scas
pop
movups
or
shl
or
test
xor
rcl
mov
shl
clc
xor
ins
mov
or
ficomp
adc
xor
dec
add
dec
push
jo
mov
and
xor
repz
xor
dec
shl
jl
xor
shl
xchg
shl
cmps
imul
cmps
imul
cmps
imul
popa
mov
lods
popa
ins
mov
(bad)
cmp
or
or
inc
push
inc
or
punpckldq
ret
xor
jg
or
fdiv
and
adc
(bad)
pop
add
into
(bad)
ror
and
in
sbb
popa
mov
mov
call
adc
popa
sbb
inc
sbb
(bad)
dec
push
xor
stos
ins
imul
fistp
adc
and
xchg
inc
xlat
out
hlt
sub
dec
fistp
add
ins
add
lock
push
push
ds
icebp
pop
or
jg
push
sahf
pusha
call
shl
test
mov
shl
adc
rol
and
cmp
inc
shl
push
pop
test
cmp
add
or
mov
repnz
sbb
add
or
nop
push
call
sbb
push
std
or
cld
shl
stc
inc
dec
shl
idiv
shl
shl
icebp
fsub
xor
lock
add
out
call
in
cmp
xchg
cmps
imul
pop
push
xchg
add
(bad)
sbb
push
lds
xchg
inc
mov
mov
xchg
adc
and
push
es
lods
std
outs
xor
scas
inc
or
or
add
add
addr16
mov
inc
adc
adc
push
nop
es
or
inc
xor
test
inc
add
mov
stos
push
lahf
add
pop
outs
cld
ret
add
cs
pop
ins
and
bound
adc
inc
jne
push
adc
imul
popa
add
push
pop
pop
add
jg
jg
stc
mov
cmps
imul
std
ds
inc
test
xor
test
out
xchg
add
or
inc
into
cmps
imul
cwde
mov
mov
pop
fwait
cmp
push
loopne
aaa
nop
and
push
inc
push
lea
sub
ret
aad
add
xor
push
es
or
pop
cmps
dec
inc
push
xchg
and
(bad)
sub
test
xor
dec
pop
hlt
push
add
imul
mov
call
fs
shl
pop
push
adc
dec
ror
fdiv
or
push
aas
xor
and
xchg
pop
fidivr
mov
popf
mov
add
sti
xor
(bad)
or
jmp
iret
dec
or
call
sub
sbb
push
lock
pop
fs
cwde
xchg
push
rol
in
imul
xor
call
or
xlat
push
test
mov
loope
in
xchg
jno
cmps
sbb
stos
test
and
mov
lahf
push
add
push
push
add
push
test
mov
pop
fiadd
push
add
loope
and
addr16
pop
ficom
dec
or
imul
or
mov
sysret
adc
push
loopne
sbb
dec
push
jns
xchg
push
add
pusha
or
push
outs
pop
pop
mov
sbb
adc
or
push
pop
aas
jg
mov
add
or
(bad)
addr16
(bad)
jg
jmp
or
shl
clc
cld
test
lea
adc
cmp
(bad)
xchg
test
fild
int
pop
mov
mov
out
add
pusha
js
es
pop
call
push
pop
data16
push
imul
pop
sti
ret
xchg
pusha
pop
data16
paddq
xlat
mov
add
add
fs
inc
push
add
add
out
xor
bound
xor
jb
push
loop
cmp
mov
or
add
test
xor
inc
xlat
fs
ins
mov
adc
les
in
add
retf
ja
ja
mov
mov
jne
cdq
jbe
add
push
add
pop
inc
or
mov
pop
inc
scas
popa
iret
ror
sahf
icebp
or
dec
push
push
add
add
adc
sbb
and
imul
pusha
add
jg
add
pop
xchg
dec
jl
inc
add
cld
pushf
pop
push
movs
sbb
mov
mov
or
fidiv
push
std
movs
push
mov
push
(bad)
mov
sti
pop
loop
xor
mov
jnp
aam
call
cmps
imul
je
movs
daa
cmp
push
mov
push
dec
shl
mov
xor
int
push
pop
movs
push
test
mov
cmps
lods
mov
dec
cmp
movs
push
fisttp
xor
or
jg
push
stc
icebp
cmp
shl
rol
sar
clc
lock
stos
div
add
call
int3
cmp
add
xor
bswap
aas
inc
dec
mov
jae
(bad)
(bad)
(bad)
dec
jg
loopne
shr
sbb
and
adc
das
out
pop
fbld
ins
pushf
pop
mov
(bad)
(bad)
(bad)
jmp
pop
or
cmp
add
xor
or
cmp
pop
(bad)
aaa
test
dec
mov
(bad)
inc
ja
call
adc
sub
sbb
daa
out
xlat
test
pop
movs
fs
push
(bad)
(bad)
(bad)
jmp
addr16
push
add
xor
push
into
inc
shl
or
inc
mov
mov
jle
(bad)
(bad)
inc
dec
mov
shr
out
push
fisub
loope
shr
bound
pop
(bad)
(bad)
(bad)
jmp
ins
popf
pop
or
cmp
push
(bad)
test
cmp
add
dec
mov
jbe
(bad)
(bad)
dec
inc
mov
sub
sbb
es
(bad)
sub
sbb
and
push
pop
cmps
xchg
push
cld
add
imul
pop
lahf
push
inc
out
mov
xor
and
jae
push
mov
jle
aaa
sbb
push
bound
mov
inc
sub
in
mov
pop
mov
mov
or
(bad)
mov
jb
or
out
out
outs
push
bndstx
cmps
mov
getsec
sbb
popf
lock
out
popa
(bad)
std
(bad)
dec
push
xor
aas
retf
xchg
scas
out
aas
stos
adc
shl
aas
aas
cmp
cmps
shr
aas
mov
push
loope
pop
stos
jb
push
test
add
xor
inc
or
adc
sbb
adc
mov
adc
mov
retf
mov
sub
sub
imul
cmps
imul
imul
cmps
imul
cmps
imul
imul
cmps
imul
aas
adc
jecxz
loope
or
sbb
xor
add
ret
jne
push
dec
cmp
imul
ja
ds
mov
sbb
sbb
dec
rcl
adc
and
or
dec
cmps
imul
cs
push
call
call
dec
pop
bound
arpl
test
into
das
es
ss
out
inc
aas
outs
cmp
out
push
push
cmps
outs
pop
xor
push
inc
inc
add
test
or
or
push
jne
add
cmp
aad
xchg
lods
add
add
add
jge
(bad)
jmp
adc
push
adc
pop
and
xor
inc
movs
icebp
out
push
lock
bound
jno
pop
sbb
sbb
or
pop
ror
add
adc
adc
cmp
jg
dec
and
add
(bad)
dec
xchg
xchg
xchg
cwde
cdq
call
test
stos
mov
mov
mov
mov
(bad)
(bad)
(bad)
(bad)
inc
mov
leave
retf
aam
(bad)
xlat
fcomp
(bad)
loop
in
out
call
repz
cmc
div
xor
stc
cli
sbb
js
fs
pusha
lock
push
adc
pop
popa
jno
and
adc
imul
or
xor
adc
loope
icebp
push
add
imul
imul
aas
hlt
(bad)
dec
shl
add
pop
or
and
shl
pusha
ins
xor
shl
test
dec
shl
add
mov
clc
push
inc
sbb
gs
mov
sub
lock
add
xor
scas
dec
pop
push
data16
rcl
jg
adc
or
mov
je
or
inc
loope
push
push
scas
outs
loop
rol
loopne
inc
xchg
ds
or
test
mov
ins
jbe
inc
dec
xor
fs
lods
imul
xchg
mov
imul
sahf
in
pop
imul
mov
xchg
pop
dec
imul
jbe
xchg
pop
or
or
int
sbb
data16
xchg
and
sahf
enter
jbe
cmps
and
inc
push
retf
sbb
fdiv
hlt
es
push
shr
xchg
cwde
sbb
add
jnp
sub
fs
enter
(bad)
sahf
sub
pop
call
mov
dec
loopne
fadd
adc
dec
es
inc
pusha
push
or
push
mov
mov
pop
imul
test
pusha
push
jo
jo
punpckhbw
(bad)
push
push
push
dec
data16
or
out
ss
aas
sbb
lock
xor
xor
dec
ss
int3
inc
imul
sahf
enter
jle
pop
xor
dec
push
adc
add
xchg
and
mov
mov
sub
nop
inc
(bad)
and
xchg
push
int3
xor
in
jle
pusha
rcl
mov
jg
imul
js
ds
cmp
jo
dec
mov
cs
cmps
rol
adc
fidivr
mov
mov
jns
repz
xchg
pop
xor
sub
mov
lods
add
xchg
es
add
call
pop
adc
sahf
hlt
pop
data16
movs
push
into
sub
push
jo
cmp
sub
cmp
ds
(bad)
lods
pop
test
xor
clc
push
pop
sbb
push
sbb
or
(bad)
push
enter
rol
pusha
mov
push
fs
push
mov
js
test
addr16
sbb
cmps
imul
outs
loop
sbb
ss
inc
imul
scas
push
movs
pop
shl
inc
push
mov
or
mov
ficom
and
xchg
mov
push
or
xor
xor
lock
pusha
fisttp
data16
pop
ds
push
xchg
sahf
call
pop
scas
pop
scas
sub
mov
inc
pushf
push
or
ret
mov
(bad)
mov
push
and
or
pusha
jbe
cmps
enter
xor
jbe
jnp
add
push
ror
inc
mov
add
loopne
xor
fidivr
mov
pop
add
cmp
les
sub
or
add
out
mov
cmp
cmp
(bad)
aad
pushf
es
data16
mov
imul
jbe
pushf
es
push
inc
add
pop
sbb
fcomp
cs
(bad)
cwde
pop
scas
inc
inc
adc
xor
xlat
ss
(bad)
pusha
push
pusha
cmps
imul
ror
cmp
push
xchg
xor
jo
push
loopne
lods
mov
or
push
pop
pop
xor
add
cdq
scas
dec
xchg
inc
mov
push
inc
imul
lock
xor
or
enter
jns
sub
sbb
(bad)
mov
mov
mov
in
cmps
lods
div
or
and
inc
out
sbb
jbe
dec
add
xchg
pop
imul
cmps
xchg
ss
sahf
sub
cld
xor
pop
push
(bad)
xor
inc
outs
cmp
(bad)
mov
fsub
inc
imul
in
rcr
nop
push
push
cs
add
cwde
ja
or
out
cmp
mov
xor
push
mov
push
mov
cmps
adc
fsubrp
lods
fldcw
inc
inc
fisub
and
mov
mov
imul
push
pop
xchg
add
xchg
pusha
push
xchg
push
es
mov
cmp
dec
push
adc
sahf
and
sub
out
ds
push
mov
les
mov
in
aad
sbb
push
add
sub
mov
mov
inc
out
or
rcl
push
cmp
nop
ins
push
xor
mov
adc
mov
sub
sar
ds
or
cmp
(bad)
jle
or
jl
or
mov
daa
adc
push
and
adc
jg
cld
adc
sbb
mov
inc
push
inc
add
add
test
mov
push
rcl
sub
add
stos
or
adc
nop
push
add
add
or
add
inc
push
ret
mov
add
imul
pop
inc
sbb
inc
and
ss
dec
pop
push
and
pop
dec
aaa
push
pop
pop
test
dec
add
sub
sbb
(bad)
dec
xchg
push
loop
test
pop
imul
mov
dec
imul
fwait
(bad)
iret
daa
inc
dec
push
mov
(bad)
pop
inc
cmp
mov
aaa
mov
xor
jmp
in
fldenv
push
scas
dec
dec
inc
xchg
push
add
pop
imul
or
push
pop
fimul
fwait
pop
xchg
xchg
sub
sub
add
push
shl
push
mov
ja
iret
ficom
inc
sub
push
scas
push
pop
ins
and
mov
or
sub
push
jbe
push
push
sahf
dec
sub
and
jp
mov
or
push
xchg
or
rcr
sub
mov
dec
mov
inc
dec
aas
push
pop
cmp
push
aaa
dec
fcmovb
pop
or
xchg
cmp
inc
movs
dec
repnz
pop
or
adc
daa
dec
call
push
dec
or
and
imul
sub
xor
adc
mov
ins
fs
push
test
cmp
bound
inc
push
cmps
or
fld
xchg
loop
ror
add
or
inc
es
or
inc
retf
push
mov
push
call
in
popf
or
(bad)
pop
out
inc
sbb
sbb
dec
or
adc
pop
dec
push
repnz
inc
xchg
xchg
sub
pop
ins
push
sbb
dec
dec
cmp
pop
dec
pop
es
fisubr
aad
shl
jae
fs
and
fldenv
outs
mov
add
ins
leave
mov
aaa
and
add
fwait
push
push
sub
or
push
add
fwait
mov
add
sub
rcl
enter
sbb
push
mov
arpl
imul
(bad)
sar
fld
cld
xor
cmp
jg
clc
aas
push
pop
jmp
ror
xor
(bad)
cld
add
pop
or
sbb
push
aas
(bad)
jg
push
push
push
xor
inc
add
cmovp
test
or
mov
mov
shr
fld
fild
mov
psubb
pop
pop
adc
out
ficomp
neg
out
(bad)
cmp
rol
loopne
lock
sbb
sub
pop
(bad)
aas
push
cs
fcmovu
ds
xchg
addr16
cmp
lock
jmp
xor
cmp
mov
aas
add
jl
(bad)
shr
pop
data16
jg
sub
xor
inc
add
jo
out
inc
(bad)
iret
rol
mov
mov
aas
lahf
pop
cwde
fstp
xor
push
cwde
pop
vmwrite
daa
jg
add
rcr
(bad)
aas
in
mov
scas
sahf
or
add
add
or
cmp
xor
retf
ucomiss
fstp
ds
pop
outs
shl
pop
std
clc
push
daa
xchg
retf
lock
aas
rcr
dec
add
movs
pop
push
cs
pop
outs
clc
sbb
fisttp
je
add
jnp
(bad)
pop
sbb
mov
add
push
push
cs
inc
sbb
jle
add
fsubr
(bad)
pop
in
and
sub
adc
aas
push
pop
popf
ins
mov
cs
push
aaa
addr16
retf
xchg
fadd
cld
push
cmp
(bad)
or
stos
pop
sbb
jo
ret
xchg
test
cs
std
or
inc
jl
cmp
sbb
push
sub
inc
add
retf
xlat
pop
cs
add
and
xchg
sbb
push
push
sbb
push
and
stc
push
add
xor
retf
in
mov
adc
fstp
jl
sbb
push
sbb
or
cs
or
test
mov
jge
xlat
fs
add
imul
add
or
pusha
aaa
add
inc
mov
imul
add
push
adc
inc
aaa
pcmpgtd
out
lock
btr
pop
movhps
pop
in
adc
lahf
sbb
mov
out
push
(bad)
fistp
punpckldq
add
inc
popf
inc
inc
imul
jge
(bad)
cld
aas
pop
js
cmp
push
es
jns
jg
add
add
dec
adc
adc
sti
adc
cmp
in
push
adc
adc
inc
sbb
or
jg
or
rol
stos
adc
pusha
clc
jo
loopne
rcr
lds
adc
inc
push
and
add
ins
mov
xlat
adc
(bad)
push
prefetch
jbe
daa
pop
ror
iret
jbe
cmp
sbb
nop
mov
xor
pop
popf
sub
inc
(bad)
(bad)
fucomip
repnz
lahf
stc
pop
clc
movs
pop
jg
push
js
clc
sbb
pop
lock
out
sbb
push
es
push
mov
or
addr16
xchg
imul
(bad)
shl
pop
xlat
adc
push
(bad)
iret
sub
pop
iret
cmp
scas
(bad)
inc
pop
sbb
push
push
cmp
test
xchg
add
retf
ja
fiadd
add
inc
mov
aaa
push
test
bound
push
es
pop
xchg
in
pop
mov
mov
add
push
push
bound
out
add
sbb
addr16
push
fadd
inc
repz
movs
mov
adc
or
mov
or
and
or
adc
push
mov
ss
push
data16
xchg
nop
push
pop
mov
inc
or
movs
cmps
iret
adc
scas
push
xor
enter
sbb
popf
push
popa
xor
xlat
fist
adc
div
pop
mov
push
pop
pop
pop
lahf
and
sbb
mov
pop
jg
sti
rol
fnstcw
test
sysret
push
je
ins
xlat
adc
adc
bound
inc
je
jg
pop
movs
push
dec
(bad)
jg
les
ret
jo
shl
adc
xlat
aam
and
or
pop
cs
ins
mov
(bad)
inc
movs
lods
lock
push
lock
add
inc
adc
or
and
push
sbb
scas
shl
jo
jo
push
rol
ss
fist
add
mov
sbb
dec
je
mov
sub
sub
ja
imul
neg
lock
and
pop
push
lea
or
inc
mov
into
inc
and
jg
mov
nop
outs
adc
mov
out
xchg
or
dec
popa
sete
inc
pusha
out
das
les
push
pop
pop
xor
mov
push
rcl
aas
adc
imul
jg
dec
push
mov
mov
mov
and
inc
and
mov
jno
dec
lock
bound
add
xchg
pop
push
lahf
fistp
xchg
shr
add
adc
or
push
lahf
and
jae
(bad)
je
mov
pop
push
push
es
push
fild
ss
and
pop
adc
push
jns
fidiv
add
daa
mov
jbe
out
dec
cmp
sub
mov
daa
pop
imul
sbb
cmp
(bad)
and
mov
std
int3
cs
xor
pop
mov
or
push
adc
cmp
clc
in
(bad)
out
out
dec
push
dec
push
mov
mov
push
push
daa
retf
adc
sub
push
(bad)
sbb
dec
daa
dec
add
daa
sbb
add
das
retf
ficom
clc
push
(bad)
hlt
sbb
xchg
(bad)
into
inc
cmps
or
push
lods
lahf
adc
adc
xchg
inc
and
mov
xor
mov
pop
ret
and
daa
inc
push
imul
sub
push
aas
push
sbb
xor
mov
sub
out
push
sahf
push
js
pop
aas
js
dec
and
cmp
lds
out
int3
push
and
and
cmp
cmp
sti
and
mov
pop
es
ret
push
(bad)
cmp
push
mov
outs
ret
xlat
push
retf
fdiv
mov
mov
fdiv
push
daa
pop
mov
mov
daa
push
and
repz
push
test
add
and
aas
int
inc
mov
jo
or
mov
scas
scas
in
out
dec
push
pop
daa
or
aad
stos
adc
dec
pop
and
ret
daa
mov
out
in
add
inc
and
(bad)
das
rcr
add
add
outs
or
mov
daa
add
daa
add
mov
xor
repz
or
mov
daa
aas
inc
cwde
jo
sub
fisttp
ss
arpl
daa
popf
(bad)
shl
ds
ror
out
shl
daa
ins
in
xor
repnz
in
arpl
repz
out
fs
mov
push
cmp
pop
mov
(bad)
push
fisub
mov
push
aas
es
retf
jmp
out
fild
sbb
push
daa
dec
add
jle
cwde
cdq
aaa
daa
xor
in
repz
sub
jecxz
(bad)
jns
or
rcl
inc
shl
xchg
in
inc
xchg
sbb
(bad)
cmp
xor
push
stos
movs
sub
pop
rep
jns
imul
xor
out
fsubrp
mov
es
cs
(bad)
enter
jle
in
push
inc
sub
mov
xor
pushf
addr16
es
sub
ret
fwait
push
push
je
stos
inc
push
shr
std
jbe
out
push
inc
mov
fdiv
clc
(bad)
and
inc
ds
ret
in
stos
sub
outs
cmp
and
mov
xor
dec
xchg
pop
and
daa
sub
adc
and
mov
xchg
sbb
retf
pop
ret
mov
pop
ss
push
inc
sub
and
dec
mov
adc
cdq
xchg
sahf
mov
push
xchg
sbb
data16
mov
and
or
or
mov
clc
or
sbb
daa
sub
push
(bad)
daa
dec
xor
dec
xor
data16
dec
daa
dec
daa
dec
mov
clc
dec
jne
dec
shr
frstor
adc
ror
sub
aas
sbb
(bad)
es
cmp
lahf
mov
pusha
pop
xor
cdq
cdq
xchg
enter
mov
cmp
add
mul
inc
int3
dec
jb
aaa
nop
arpl
popa
movs
aaa
mov
(bad)
retf
dec
fcomp
push
mov
(bad)
sbb
outs
inc
(bad)
nop
arpl
je
xchg
push
das
aaa
push
mov
pusha
or
mov
aam
je
push
inc
popa
and
cmp
jnp
(bad)
into
es
fcomp
or
scas
or
add
jne
mov
popf
mov
fld
mov
movs
imul
inc
cmp
dec
jno
and
cdq
stos
push
sar
in
mov
lock
cdq
pop
jbe
les
push
fst
sbb
(bad)
fdiv
push
xor
daa
and
xlat
mov
jmp
xchg
add
or
mov
xchg
and
xchg
pusha
lds
xchg
mov
es
pop
add
mov
ret
add
test
enter
jo
pop
push
sub
sti
out
jg
add
add
mov
lahf
inc
push
in
jle
js
push
inc
add
or
sti
adc
cmp
shl
or
or
adc
test
mov
mov
ud2
jnp
cmp
push
iret
add
add
gs
sub
lock
push
fstp
scas
push
mov
sbb
mov
fsubr
and
jg
repz
arpl
loopne
sbb
dec
add
xchg
push
inc
mov
push
jo
outs
ds
pop
aas
add
and
mov
ds
dec
or
cmps
inc
inc
ror
pop
fld
adc
or
nop
out
add
and
push
and
clc
pop
mov
or
prefetchnta
sub
imul
cmp
sti
and
int3
iret
pop
or
add
add
xor
adc
xor
jo
push
rol
or
jp
scas
or
mov
mov
dec
dec
dec
je
push
inc
xor
(bad)
adc
xchg
test
fwait
retf
dec
add
outs
mov
xchg
push
pop
mov
lock
jg
mov
xchg
test
dec
add
xor
pusha
ja
dec
or
fidivr
cmp
pop
add
jo
lods
fisttp
aas
mov
dec
pop
mov
cmp
dec
cs
adc
pop
add
dec
or
adc
fsubr
mov
es
(bad)
xchg
lods
jp
nop
add
movs
cmp
pop
adc
pop
aas
and
push
xchg
fld
jno
push
mov
and
mov
fidiv
int
adc
lods
inc
sub
outs
test
aas
cs
add
jo
ins
ret
in
jo
aas
and
(bad)
es
(bad)
pop
adc
pop
cmp
inc
cmpxchg
or
cmovo
ret
cmovg
and
or
push
xor
push
pusha
movlps
xor
sbb
popf
cs
popa
cwde
and
xlat
mov
adc
adc
pusha
or
lods
and
(bad)
add
sub
dec
add
pop
xor
mov
inc
pop
dec
xor
or
inc
lea
enter
pop
(bad)
or
add
push
scas
sub
xor
fsub
push
and
inc
fdiv
(bad)
adc
push
push
inc
push
mov
sub
and
or
push
mov
mov
xor
jle
fs
(bad)
das
fdiv
inc
sar
inc
inc
pop
imul
sub
inc
dec
lar
add
cmovno
(bad)
cmovae
aas
mov
mov
inc
push
aam
xor
add
pusha
jg
and
xlat
inc
out
push
jl
test
and
les
push
push
or
pop
and
xor
pop
fisttp
and
jecxz
inc
int3
push
ret
maxps
sub
xor
jb
add
aas
or
pop
xor
xor
add
aas
bound
cmp
rcr
inc
adc
fcmovu
or
dec
test
test
pop
pusha
pusha
(bad)
das
inc
xor
adc
adc
call
cwde
or
(bad)
bndstx
inc
test
inc
cwde
adc
xor
(bad)
fisub
aas
add
jb
jno
pop
push
mov
das
(bad)
dec
jo
adc
xadd
or
jbe
push
jg
and
adc
stos
(bad)
ja
adc
mov
add
mov
push
(bad)
stos
mov
add
enter
test
add
and
iret
and
sbb
xchg
mov
(bad)
rdtsc
pusha
jb
add
ds
jp
adc
inc
sbb
jb
push
lidtd
mov
jg
int3
cmc
or
push
and
lea
out
mov
inc
iret
push
sub
dec
das
test
push
adc
add
(bad)
inc
les
and
and
mov
dec
and
sbb
(bad)
sub
push
(bad)
fld
adc
adc
fcmovu
lods
cmovnp
aas
and
jno
add
mov
aas
pop
shl
sti
scas
adc
movlps
mov
sar
add
fidivr
dec
sbb
lods
mov
pop
dec
push
enter
add
mov
(bad)
ss
btc
punpcklwd
add
xor
clts
cmp
push
add
cmps
add
jg
add
pop
jbe
leave
inc
add
popa
and
movzx
adc
sub
out
jo
dec
pop
imul
or
jg
adc
(bad)
mov
leave
ins
out
movd
wrmsr
sub
or
and
mov
push
or
adc
or
xor
xor
adc
xor
push
mov
adc
ds
ret
fwait
mov
jl
jb
pop
shr
and
pop
xor
sub
stos
add
outs
les
push
test
or
inc
or
mov
dec
add
or
mov
repnz
outs
sbb
add
aam
loopne
scas
repnz
inc
or
and
in
fild
into
cs
sbb
out
adc
xor
or
cmp
ud1
push
ins
mov
mov
sbb
or
fistp
adc
lahf
fbstp
mov
inc
shl
push
iret
add
sub
xor
pop
outs
test
(bad)
iret
pop
and
add
xchg
push
test
and
inc
pop
add
add
jg
stos
ret
fist
push
leave
mov
les
adc
adc
sub
push
and
aaa
adc
dec
mov
add
jo
sub
out
xchg
dec
jg
mov
sbb
push
sbb
aam
rcr
setno
(bad)
outs
add
arpl
fbld
div
xchg
jle
and
adc
add
(bad)
fild
add
add
(bad)
xor
dec
inc
imul
inc
and
leave
or
mov
dec
jl
push
adc
sbb
mov
ret
mov
unpckhps
inc
inc
(bad)
sqrtps
(bad)
and
ret
xor
loopne
scas
jg
pusha
xor
add
icebp
pop
add
adc
das
sysenter
inc
or
outs
xor
sbb
adc
cmp
adc
cdq
pusha
jg
(bad)
and
pop
add
or
lea
fild
outs
jo
adc
jle
mov
mov
sbb
jne
add
stc
or
add
fsubr
in
add
sti
mov
std
jg
and
xchg
jecxz
pop
xchg
pop
fiadd
stc
scas
test
dec
lds
mov
cmp
xchg
add
repnz
push
add
inc
add
std
fidivr
push
push
pop
dec
(bad)
mov
jg
(bad)
out
int
push
call
out
add
cwd
call
xor
imul
inc
data16
call
fidiv
pushf
cs
int3
call
push
push
ins
mov
dec
aad
pushw
cdq
es
pusha
addr16
std
or
fmul
es
or
push
pop
int3
dec
inc
push
lock
pop
cs
pop
int3
je
cmp
cs
pop
cs
add
add
xchg
es
pop
es
mov
add
int3
in
stc
push
ins
shl
int3
rol
int3
or
cmp
cs
sub
daa
push
pop
es
pop
jmp
push
pop
es
int3
inc
sub
int3
jmp
aaa
(bad)
int3
test
add
mov
dec
push
call
data16
popf
cdq
xor
pop
cs
pop
xchg
data16
mov
data16
cdq
xor
pop
ret
jns
(bad)
dec
pop
push
aaa
cmp
pop
or
int3
fiadd
es
mov
or
cmp
push
cmps
popf
movs
adc
cdq
int3
outs
shl
add
jno
add
cs
push
and
shl
loopne
lds
or
fs
pop
and
pushf
rcr
pop
bound
dec
pusha
daa
enter
cs
pop
imul
cdq
into
int3
add
cdq
push
mov
cs
fadd
or
push
cs
pop
out
into
in
int3
xchg
inc
sti
jbe
push
mov
mov
push
and
movs
add
cs
outs
cmps
iret
xchg
add
in
mov
fld
jecxz
jmp
add
(bad)
movs
mov
add
movs
pop
ds
or
or
pop
sti
std
mov
jne
or
sidtd
adc
inc
lock
push
add
popa
sub
mov
add
pop
add
mov
or
pop
or
pop
add
or
or
sbb
sbb
add
pusha
arpl
add
or
dec
inc
pop
stc
sbb
call
pop
adc
mov
sbb
add
or
inc
push
push
in
in
mov
stos
cmp
pop
je
adc
sahf
pop
jns
call
jmp
and
pusha
pop
inc
pop
mov
add
sbb
add
add
adc
add
pop
aas
adc
adc
pop
rcl
add
pop
sbb
pop
add
add
xchg
sbb
adc
push
mov
add
out
out
jmp
ror
push
pop
inc
xor
and
pusha
mov
inc
pop
mov
outs
dec
push
bound
inc
outs
inc
imul
pop
in
fcomp
xor
mov
clc
icebp
repz
lods
mov
std
jg
inc
mov
into
mov
leave
mov
or
and
leave
mov
sti
les
push
and
jns
ins
push
ins
adc
add
push
adc
push
adc
adc
add
mov
add
lar
push
mov
push
adc
add
add
push
adc
sbb
(bad)
inc
cs
adc
push
adc
pop
and
pop
jnp
pop
push
adc
add
pop
pop
jl
lods
sti
mov
out
add
pop
adc
test
mov
pop
stc
stos
mov
mov
adc
call
adc
push
adc
(bad)
push
pop
add
nop
adc
push
pop
push
adc
adc
push
aaa
cmp
int
or
add
push
xor
add
sbb
aaa
int
pop
pop
xor
fs
pop
pop
sub
pop
adc
es
lock
pop
js
test
rcr
cmps
adc
scas
idiv
dec
sub
cwde
mov
mov
shl
mov
loop
mov
inc
lea
push
mov
jne
jne
dec
mov
pop
inc
and
fsub
repz
hlt
mov
jl
clc
add
(bad)
dec
test
(bad)
fdivr
push
leave
rcr
fucom
jmp
repnz
mov
inc
push
inc
(bad)
les
idiv
mov
dec
add
and
pop
fptan
dec
fmul
mov
gs
jg
pop
pop
or
and
mov
or
fstp
(bad)
mov
in
out
inc
nop
add
mov
sbb
fcom
mov
mov
or
out
jmp
hlt
stc
idiv
idiv
clc
add
stc
sbb
adc
stos
add
or
not
pop
push
ins
test
idiv
mov
sti
test
stc
add
xchg
stc
add
(bad)
hlt
mov
cli
test
mov
test
clc
in
outs
call
inc
leave
jg
rcl
(bad)
rol
(bad)
rcl
sar
inc
aam
(bad)
rcl
(bad)
rcl
or
enter
adc
pop
mov
fild
jecxz
loope
lock
out
loop
push
sub
lock
clts
packuswb
cli
dec
push
div
cli
ja
mov
jnp
cli
div
adc
pop
mov
test
idiv
push
jl
ins
ret
cmc
mov
mov
mov
clc
data16
inc
and
out
cli
test
or
neg
shl
jle
vpaddq
(bad)
(bad)
jg
fdivr
rol
aam
xchg
rcl
vpsrlq
rcl
and
add
aas
push
jns
or
loopne
in
in
pop
out
js
lock
mov
and
add
jg
mov
(bad)
(bad)
xlat
leave
loope
enter
jmp
add
fwait
sar
rcr
stos
mov
arpl
popf
xchg
add
nop
or
dec
arpl
out
fsubr
repnz
add
shl
fild
fucomp
hlt
mov
ficomp
add
and
sbb
or
mov
gs
int3
ds
call
ret
mov
jbe
xchg
fs
shl
cmc
or
jmp
cmp
jo
and
jle
mov
cmps
fbld
repz
and
cmp
imul
xchg
(bad)
sar
retf
or
and
cwde
cdq
(bad)
rcr
fnsetpm(287
jmp
inc
or
and
fsubr
fs
shr
aam
loope
in
cmc
cmc
std
adc
int3
lods
or
and
pop
pop
test
(bad)
test
addr16
push
std
inc
and
ret
mov
hlt
push
pop
cld
stc
sub
cmc
sbb
dec
push
mov
cwde
shr
rcl
(bad)
int
ret
ret
ror
pop
push
xlat
in
ret
sub
iret
ror
push
fnstsw
arpl
add
fist
adc
loope
add
or
sbb
or
cmc
sbb
dec
lock
idiv
or
repz
mov
(bad)
push
pop
xchg
pusha
into
add
stc
mov
cli
stos
les
or
test
pop
or
adc
cmp
rol
pop
sbb
les
retf
rcl
xchg
jae
int
mov
lock
daa
mov
mov
inc
add
pop
push
or
cmp
jg
mov
repz
add
jmp
int3
in
push
mov
pusha
add
or
add
repnz
shr
and
lock
cmp
jecxz
mov
aad
(bad)
sti
jmp
add
(bad)
jmp
in
iret
in
pop
or
add
jecxz
sub
lea
cmc
inc
jmp
cdq
sub
jmp
add
mov
mov
lock
test
and
cmp
in
(bad)
fild
mov
sar
inc
xor
and
mov
jl
in
dec
pop
and
or
xor
div
lock
out
jmp
and
add
mov
rcl
fsub
loope
mov
movs
jp
inc
sub
popf
imul
test
add
jp
cld
dec
dec
sbb
stc
and
sar
ret
add
jbe
adc
mov
shl
sbb
into
int3
ret
into
retf
vmovupd
rcr
ror
fwait
lea
sbb
pop
adc
fist
xchg
add
jbe
aas
outs
js
adc
cmc
sti
imul
xor
test
add
pop
or
xor
lahf
fld
mov
xchg
push
cmp
pushf
add
or
mov
loopne
fild
dec
retf
ror
or
add
int
fadd
iret
rol
int3
rcl
lahf
cmp
pop
les
and
ins
les
in
repnz
and
jg
adc
in
add
pusha
pop
jg
mov
or
jg
mov
add
jg
loop
test
add
jg
fbstp
fsubr
repnz
pop
mov
sub
pop
cdq
in
call
or
fcomip
cmc
inc
add
mov
out
add
pop
add
int3
pop
fs
or
pop
pop
dec
movs
dec
jmp
in
in
sbb
ins
rol
cmp
in
imul
and
mov
fdivr
int3
int3
sub
and
cmp
pop
ins
cmp
retf
dec
add
mov
mov
jmp
xor
jg
jecxz
int3
into
cli
fmul
(bad)
(bad)
mov
or
and
pop
push
sub
(bad)
jmp
pop
mov
sahf
pop
add
add
add
push
push
or
and
inc
pop
push
adc
add
hlt
dec
cld
stc
cmc
retf
(bad)
(bad)
and
pop
add
mov
add
(bad)
int3
int
int3
iret
pop
int
les
pop
mov
aam
into
stos
aad
rol
sbb
sub
lea
lock
mov
adc
mov
mov
pop
or
add
sti
clc
repz
div
sti
push
aas
add
je
xchg
fsincos
sar
add
and
add
pop
wrmsr
rol
xchg
(bad)
jne
retf
cmp
call
add
add
add
cli
jp
loopne
xchg
sar
sbb
add
or
in
fimul
xchg
call
out
jmp
mov
mov
adc
add
ror
jg
adc
mov
add
pop
inc
push
sub
dec
jecxz
mov
add
add
lahf
add
in
arpl
in
pop
add
nop
sbb
in
xor
sar
(bad)
retf
jmp
pop
adc
jl
sbb
pop
sub
mov
icebp
scas
cwde
push
sub
mov
cmp
aaa
fcmovb
aas
dec
jp
stos
stos
(bad)
ffreep
neg
loopne
data16
jbe
xchg
xchg
add
retf
cmp
data16
inc
or
mov
cmp
dec
xchg
push
mov
or
or
pop
pop
sub
push
dec
cmc
push
out
cwde
ins
push
icebp
iret
xlat
(bad)
mov
ror
sub
inc
jle
test
pop
cli
hlt
repz
pop
hlt
icebp
cmc
push
cmps
pop
out
inc
add
dec
loope
ja
push
add
and
aad
sbb
test
cli
loopne
inc
add
push
ret
rcl
into
push
jno
inc
ret
or
les
or
loop
scas
fmulp
test
rcl
adc
push
jmp
adc
hlt
(bad)
pop
add
pop
push
mov
rcr
jmp
hlt
addr16
test
cli
add
rcr
lds
sub
xchg
push
xchg
pop
pop
jg
cld
lock
aas
gs
retf
inc
aaa
shr
loopne
aas
rol
retf
addr16
rcr
sub
iret
iret
(bad)
iret
fcom
loop
mov
fwait
loopne
mov
jb
fisub
rcl
fsub
add
pop
jg
inc
add
jg
ins
add
dec
jmp
(bad)
add
add
loop
pop
jnp
xchg
fcmovbe
push
out
jecxz
push
push
xor
inc
pop
xchg
sub
pop
mov
es
xor
and
mov
mov
pop
ror
pop
call
xor
and
mov
push
xor
and
cmp
jbe
adc
iret
aad
std
aaa
pop
lods
cdq
cdq
test
cmp
adc
std
ja
mov
enter
add
cmp
arpl
cmp
dec
push
add
std
push
movs
dec
or
and
inc
or
xor
mov
add
pop
shr
repnz
lock
out
adc
cmp
add
add
mov
imul
xor
pop
pop
mov
fs
jno
sti
cli
mov
repz
cmp
addr16
xchg
sti
call
mov
push
sub
inc
or
int
push
mov
adc
into
retf
pop
pop
push
pop
mov
out
out
out
aam
(bad)
jns
in
icebp
pop
out
add
inc
mov
add
(bad)
push
add
add
pusha
mov
cmp
pop
and
stc
inc
cmp
mov
sbb
rcr
(bad)
not
aas
ror
sbb
adc
sar
pop
stc
fiadd
sbb
rcl
(bad)
rcl
pop
jg
rcl
push
aas
stos
mov
mov
shr
out
adc
add
push
or
jb
loope
add
sub
jg
nop
pusha
sbb
or
ins
pop
jg
xchg
and
pop
loope
stc
cli
or
call
out
sti
loopne
fnstsw
pop
arpl
mov
mov
sbb
xchg
mov
add
rcl
enter
pop
lods
add
shl
add
jmp
cld
or
mov
cmp
sbb
inc
cld
pop
movs
jmp
(bad)
les
inc
pop
or
shl
mov
sbb
inc
jg
sbb
sbb
or
and
lock
jg
add
sub
inc
sti
cli
call
jmp
jmp
sub
add
cmp
lock
outs
inc
mov
add
pop
in
div
lock
mov
gs
sbb
test
repnz
cmc
repnz
aas
sub
call
pop
ror
ret
out
pand
ror
ret
retf
(bad)
pop
add
(bad)
pop
adc
or
fucomip
in
inc
jmp
push
jmp
mov
pop
push
aaa
in
inc
add
div
cmc
cli
repz
add
cli
dec
ss
xchg
or
mov
or
hlt
lods
add
xlat
push
cmc
add
add
inc
test
mov
inc
sbb
mov
mov
add
rol
retf
(bad)
jo
push
xchg
leave
rcl
jle
add
push
push
cld
cdq
mov
scas
mov
mov
add
xchg
jg
add
adc
jg
xor
cmp
adc
push
jg
push
xchg
sub
pop
jmp
nop
add
add
pop
xlat
and
in
pop
cmp
push
push
mov
es
inc
and
mov
cdq
add
cs
std
dec
add
inc
and
(bad)
leave
retf
xor
adc
cmp
adc
outs
ja
lods
mov
inc
xor
int3
cmp
or
pop
lods
pop
pop
fsubr
xor
and
daa
push
out
in
(bad)
jmp
in
jmp
jmp
das
repnz
hlt
sti
inc
mov
loope
in
loop
fsubp
add
pop
add
call
loop
repnz
clc
repz
fistp
retf
retf
enter
std
mov
leave
adc
jbe
int3
retf
add
push
ja
xchg
sbb
xor
or
fwait
push
add
jne
add
sbb
mov
pop
jg
pop
mov
loopne
out
in
loop
jmp
add
in
in
cmc
dec
xor
les
(bad)
pop
xor
test
lahf
aaa
jns
add
xor
in
in
jnp
lods
(bad)
mov
call
xchg
or
or
(bad)
into
mov
rcl
pop
and
pop
and
dec
inc
add
ffreep
or
(bad)
scas
mov
in
lock
fidivr
and
xor
and
pop
jg
add
push
inc
sbb
in
sti
je
pop
(bad)
in
add
stc
fucomi
hlt
jmp
(bad)
out
and
mov
cdq
pop
cmp
ret
fsub
retf
shl
add
in
mov
mov
sbb
pushf
ins
or
xchg
icebp
push
mov
jbe
sti
cli
clc
pop
shl
push
and
cmp
fwait
test
paddd
jnp
stos
mov
inc
cdq
cdq
cmp
push
and
call
inc
pop
jbe
xchg
cmp
je
retf
cmp
jg
xchg
adc
fidivr
xchg
pop
or
and
imul
add
add
fstp
loope
fld
xchg
add
add
pop
call
mov
jmp
shl
cmc
pop
div
out
push
fcomp
fstp
(bad)
adc
outs
in
in
adc
mov
jmp
jg
pop
adc
mov
enter
mov
add
mov
leave
mov
pop
push
or
test
push
pop
fimul
sub
adc
pop
push
loopne
mov
loopne
(bad)
xlat
add
fneni(8087
(bad)
mov
in
js
movs
aas
repz
add
inc
add
fnstcw
fld
or
fsub
fnstsw
out
out
in
rol
test
mov
jle
stc
fistp
(bad)
mul
retf
jg
leave
add
mov
(bad)
cmp
add
int
jg
ds
push
push
fnstenv
sub
add
rcr
inc
sub
jg
jg
dec
mov
pop
jg
add
lea
mov
lock
(bad)
out
add
loopne
cwde
popf
push
xor
mov
sbb
les
sahf
(bad)
cs
cmp
jmp
xchg
pop
movs
sbb
inc
(bad)
ret
mov
int3
int3
cld
or
and
cmp
(bad)
jmp
imul
rcr
ret
inc
data16
(bad)
or
and
cmp
adc
jl
dec
mov
(bad)
cmc
rcr
add
cwde
cdq
and
cmp
jno
jg
test
and
mov
(bad)
ins
fsubp
loopne
stos
call
in
jecxz
loope
in
test
shl
jmp
mov
jmp
(bad)
aad
(bad)
fcmovnu
fcmovnu
fstp
jne
loop
mov
jmp
stos
ret
neg
mov
enter
add
push
js
adc
shl
and
mov
cdq
(bad)
jg
mov
sbb
or
rcr
fcmovne
sbb
fcomp
add
add
and
loop
(bad)
jg
jno
add
in
in
out
in
in
push
push
add
std
rcr
pop
(bad)
add
loopne
js
jne
arpl
loop
xor
icebp
call
in
jmp
inc
add
cmp
mov
mov
imul
mov
adc
pop
or
dec
dec
push
test
loop
mov
imul
xor
or
mov
in
add
inc
push
or
cdq
lea
cmp
scas
les
shl
mov
out
out
fs
mov
sahf
mov
mov
inc
(bad)
aas
inc
daa
pop
cmps
jge
lods
test
popw
adc
fxch
or
(bad)
shl
cmp
mov
xor
mov
mov
mov
push
and
outs
mov
sub
mov
mov
int
in
mov
and
mov
(bad)
jle
mov
pop
(bad)
loop
fcmovu
jecxz
dec
cli
xlat
inc
pop
ins
in
(bad)
repz
fsubp
pop
and
mov
jmp
fild
(bad)
push
ins
scas
jmp
mov
jb
in
je
out
jae
out
je
in
jne
lock
icebp
jns
cmc
jle
ror
pop
pop
mov
out
(bad)
mov
jmp
(bad)
retf
cmp
call
mov
movs
in
shl
pop
jo
mov
pop
jg
fdivr
rcl
fld
aam
imul
sbb
fcomp
fadd
(bad)
in
jle
and
xchg
jmp
jle
mov
outs
stos
jmp
(bad)
add
ins
mov
jae
in
jb
out
add
mov
mov
add
lock
neg
rol
mov
cld
(bad)
(bad)
sbb
enter
mov
retf
rol
add
pop
jae
add
in
icebp
and
sbb
cmp
add
cmps
sbb
dec
mov
fsubp
dec
in
and
mov
inc
pop
fld
loopne
pop
jl
mov
inc
pop
inc
jp
xchg
cmps
shl
mov
push
sbb
shld
pop
inc
addr16
popa
inc
jne
mov
(bad)
(bad)
mov
xor
int3
or
and
test
arpl
ss
nop
lods
pop
pop
movs
jmp
int3
push
and
push
cdq
std
mov
sahf
mov
stos
or
and
or
adc
adc
pop
mov
inc
inc
mov
sub
adc
test
jmp
mov
pop
sbb
or
aam
or
adc
data16
jbe
pop
jmp
push
and
std
cli
sub
ins
mov
stc
jae
stos
xor
and
test
pop
je
xor
mov
add
lahf
pop
adc
pop
sbb
pop
rol
adc
add
and
inc
fild
pop
adc
sbb
pop
adc
add
cmps
std
add
nop
pusha
lods
mov
xor
add
movs
in
pop
adc
ins
aad
fistp
and
adc
(bad)
enter
mov
fild
idiv
retf
mov
and
push
and
sbb
sar
pop
sbb
sbb
dec
mov
jle
mov
cmp
or
or
pop
int
push
push
rol
mov
cwde
js
idiv
(bad)
push
add
int3
shr
ret
rol
shr
loope
iret
fcomp
leave
rcr
(bad)
rcl
(bad)
rcl
rol
sti
push
mov
repnz
lock
in
pop
pop
sti
mov
jecxz
jmp
aaa
icebp
cmc
cmc
add
shl
add
fcomp
fbstp
mov
in
jg
imul
lock
(bad)
in
sti
cld
cld
sti
std
std
add
push
cli
add
mov
push
jo
ss
dec
fimul
and
outs
dec
sub
adc
dec
test
sbb
pop
inc
cwde
or
and
int
add
adc
(bad)
xor
mov
adc
fsubr
pop
xor
push
add
xor
fadd
sbb
or
dec
retf
or
jl
push
mov
add
and
ss
call
shl
and
or
call
imul
push
leave
xchg
popa
not
dec
outs
bound
shr
mov
dec
jb
fisub
rcr
jne
and
inc
lods
push
inc
adc
add
pop
div
mov
push
rcr
loopne
inc
mov
adc
outs
popa
mov
or
(bad)
ins
bound
popa
mov
inc
xchg
cs
dec
jle
jae
jo
and
dec
outs
mov
and
repnz
push
adc
sub
outs
retf
dec
(bad)
and
imul
and
fisub
ins
lock
push
(bad)
mov
adc
jae
inc
adc
sbb
call
lock
add
inc
je
popa
(bad)
pop
xor
ror
pusha
mov
mov
add
out
dec
or
push
pop
data16
push
mov
and
fcomp
inc
mov
(bad)
xchg
test
xor
mov
adc
push
mov
and
inc
loope
popa
add
and
dec
mov
adc
inc
adc
dec
(bad)
rcl
ins
dec
cmps
jno
jbe
inc
icebp
inc
add
adc
push
xchg
scas
fadd
or
dec
ja
sbb
mov
jmp
sub
sub
popa
push
addr16
xchg
pop
push
popa
mov
inc
adc
pop
inc
dec
cmp
jno
and
push
add
or
shl
stos
push
mov
rcl
and
mov
and
leave
lds
sbb
jecxz
add
imul
out
or
mov
or
xor
mov
adc
push
fistp
adc
stos
imul
pop
sbb
inc
lds
arpl
ffreep
pusha
js
xchg
push
mov
or
mov
je
shr
push
arpl
enter
push
cmps
aaa
or
or
pop
pop
xchg
sub
inc
idiv
in
not
imul
stos
shl
xor
aaa
dec
mov
xor
cmp
add
pop
dec
data16
jecxz
inc
fcmovu
fwait
push
or
out
je
fimul
or
push
mov
add
pop
add
xlat
outs
das
xchg
mov
ds
cmps
jmp
jae
dec
dec
and
jae
lds
and
scas
scas
pop
adc
repnz
ja
frstor
ret
retf
dec
jno
repz
add
outs
xchg
nop
ins
push
sub
ror
push
lods
add
(bad)
fisttp
xchg
fild
sbb
dec
xor
sub
xchg
aas
adc
dec
ins
sub
jo
(bad)
daa
push
repnz
pop
rcl
pop
daa
push
ret
inc
sbb
sub
jno
and
iret
sbb
sbb
sti
stos
push
xor
cli
jns
adc
sub
jmp
je
adc
push
sbb
add
je
and
test
out
bound
sub
adc
push
outs
lea
ins
xchg
jo
xor
sbb
into
ins
ficomp
xlat
jne
and
mov
pop
stos
inc
or
iret
sbb
mov
xchg
outs
mov
add
iret
fs
or
adc
push
(bad)
mov
jbe
sbb
push
test
push
sbb
mov
pop
adc
push
cmp
inc
cwde
mov
scas
jmp
scas
fs
loopne
jb
jmp
ror
div
dec
aad
data16
adc
stos
sar
bound
adc
and
mov
mov
pop
push
xor
jb
inc
cmp
cmp
pop
or
mov
add
jg
pop
out
jno
sbb
jecxz
aad
in
stos
jg
repz
test
push
inc
or
outs
repnz
push
inc
(bad)
mov
rol
sti
(bad)
fstp
lock
imul
adc
bound
sub
fadd
cmps
mov
sbb
and
sub
pop
arpl
outs
mov
sti
les
inc
push
inc
sbb
js
xor
inc
fisub
jecxz
mov
mov
push
sbb
bound
stos
xor
mov
stos
(bad)
sbb
stos
(bad)
pop
call
je
test
(bad)
sahf
movs
adc
jno
imul
adc
adc
ins
scas
arpl
mov
and
push
mov
(bad)
mov
pop
cmp
pusha
(bad)
jb
(bad)
sbb
inc
imul
xchg
arpl
pop
mov
sbb
and
xor
sahf
js
shl
retf
movs
adc
out
in
in
and
cli
bound
mov
cmp
not
aaa
and
(bad)
cmp
mov
push
push
sbb
sub
jnp
lods
push
stos
or
scas
mov
or
ret
or
imul
dec
loop
outs
js
inc
or
jle
inc
cmps
add
scas
inc
pop
lods
hlt
or
xor
sbb
push
push
inc
add
cmp
inc
xchg
daa
xchg
daa
inc
sbb
shl
test
das
into
push
dec
lea
push
pushw
outs
push
add
scas
ficomp
arpl
dec
mov
movs
or
sub
les
out
push
dec
dec
ret
mov
das
or
xchg
jbe
lds
iret
je
sbb
pop
cmp
sub
inc
inc
aas
popa
out
jbe
adc
mov
pop
pop
mov
pop
sbb
xchg
jnp
mov
leave
add
xor
mul
verw
push
daa
sub
push
lea
push
cmps
mov
into
ss
and
dec
fisubr
aad
inc
add
out
mov
add
daa
dec
aad
in
aaa
daa
inc
jno
mov
dec
fst
or
fstp
ret
mov
add
cmps
add
sbb
mov
scas
jb
inc
rol
inc
dec
push
pop
arpl
xchg
mov
lods
outs
fdiv
jb
outs
pop
cmps
push
ins
xchg
sub
sub
xchg
fadd
js
pop
xor
es
sub
inc
dec
mov
(bad)
jae
push
packsswb
test
push
sub
bound
and
pop
mov
pop
add
imul
and
xchg
call
lahf
xchg
fs
pop
popa
out
dec
push
push
sub
and
lahf
dec
ret
and
scas
sbb
outs
popa
jecxz
sbb
and
mov
loope
dec
es
mov
ret
dec
xchg
adc
jo
out
and
push
and
xchg
rcl
adc
shl
jnp
test
(bad)
into
sbb
dec
xchg
jo
adc
(bad)
ds
push
pop
jnp
(bad)
aad
outs
lods
rcr
mov
xchg
sar
add
sbb
adc
test
ins
ror
jbe
xchg
add
(bad)
(bad)
xchg
push
cmp
adc
mov
call
mov
mov
out
imul
gs
adc
rcl
or
sti
outs
add
xor
jmp
xchg
mov
inc
imul
xor
xor
pop
push
xchg
inc
jnp
ret
inc
ret
ins
push
(bad)
adc
add
sub
jbe
lods
cmp
sbb
loop
add
sbb
loop
jmp
loopne
out
arpl
dec
adc
pop
ins
les
xchg
add
add
mov
and
xchg
out
sar
imul
inc
xlat
push
cmp
test
pop
arpl
(bad)
mov
inc
mov
cmp
rol
fild
mov
mov
push
inc
daa
ficomp
pop
sbb
push
aaa
push
dec
cmp
dec
rcl
loopne
or
outs
inc
sub
ss
add
sub
jae
mov
retf
sub
ins
push
inc
ss
loope
push
inc
push
push
out
call
push
push
aas
mov
lods
imul
fistp
adc
out
loopne
pop
ret
iret
or
popa
sbb
mov
push
inc
pop
dec
add
mov
cs
adc
push
sti
add
dec
outs
jmp
movs
and
repz
in
xchg
test
xor
retf
dec
loop
push
push
sub
movs
add
or
adc
dec
adc
test
lock
pop
and
(bad)
frstor
movs
cmps
and
(bad)
sbb
lods
data16
jo
sub
inc
mov
pop
pop
sub
pop
push
pusha
sbb
push
push
scas
push
inc
bound
ins
mov
adc
xchg
cmp
mov
aam
pop
cmps
sbb
mov
inc
les
jo
and
xchg
loopne
stos
jae
mov
pop
gs
mov
inc
cs
addr16
mov
mov
xlat
xor
push
jnp
jp
into
inc
jp
cmps
mov
pop
jae
xor
dec
adc
stos
push
mov
sub
call
add
push
sub
jbe
ins
mov
shr
ja
daa
out
shl
shl
add
(bad)
adc
sbb
mov
gs
add
(bad)
dec
ret
pop
add
push
aam
push
les
pushf
xor
into
push
adc
in
iret
arpl
popa
retf
pop
and
pop
sahf
pusha
inc
pusha
mov
pop
out
sub
push
sbb
(bad)
aas
fbstp
adc
test
adc
mov
dec
and
inc
and
and
mov
fwait
popa
ret
mov
adc
or
repz
jecxz
mov
mov
pop
aad
jnp
mov
sbb
or
xchg
sub
sub
add
add
sub
add
stos
push
popf
push
sbb
mov
pop
sub
stos
(bad)
add
xchg
mov
sbb
inc
imul
add
sbb
adc
jnp
push
inc
xor
inc
xchg
or
adc
or
push
iret
inc
cmp
loope
mov
sbb
iret
push
ins
xchg
xchg
and
scas
popa
repz
inc
or
out
scas
data16
cmps
sbb
and
movq
sbb
xchg
and
lods
push
ins
fcom
add
out
adc
jp
inc
or
add
sub
daa
mov
pop
(bad)
sub
sar
mov
repz
pusha
mov
iret
cs
adc
not
mov
daa
push
adc
shl
sbb
bound
(bad)
pop
repz
or
pop
adc
ins
mov
mov
das
call
aaa
adc
or
jecxz
out
dec
aad
fwait
daa
jmp
cmp
sub
push
iret
jmp
or
pop
iret
push
inc
sbb
sub
lods
es
inc
push
xor
add
jbe
in
mov
je
xor
inc
sub
dec
mov
inc
sub
sbb
mov
mov
or
or
jo
movs
dec
sbb
ror
imul
push
sub
adc
add
add
add
arpl
lods
pop
pop
fist
push
pusha
mov
inc
leave
add
test
jnp
not
in
xor
dec
jb
in
inc
cwde
push
adc
push
(bad)
retf
inc
and
inc
daa
and
adc
repz
push
sbb
push
popa
push
cmps
outs
fadd
jae
or
rol
jo
and
inc
pop
push
add
push
jp
ret
call
mov
mov
or
sbb
mov
jle
rol
xchg
pop
iret
pop
in
or
imul
jo
(bad)
repz
xchg
sbb
shl
add
xor
ret
add
into
pop
push
daa
sub
stos
push
dec
xchg
ins
inc
test
push
adc
push
das
test
adc
sahf
cwde
or
xor
ficomp
add
mov
mov
or
jbe
and
pop
mov
mov
push
stos
pop
jne
push
ret
add
pop
gs
xchg
push
outs
add
ret
jnp
pusha
imul
mov
bound
inc
inc
pop
jns
sbb
ins
(bad)
ds
jmp
add
push
mov
pop
pop
push
jne
(bad)
cmp
jb
add
or
jmp
bnd
xor
test
fistp
je
stos
pop
imul
mov
or
adc
mov
push
pop
sub
scas
inc
sub
outs
pop
cmp
into
and
add
rcl
ins
retf
jo
ret
aad
pop
data16
push
add
jo
mov
xchg
mov
push
xlat
jb
pop
inc
sub
adc
lods
sbb
jne
sbb
(bad)
mov
mov
and
xchg
jle
bound
aam
fstp
arpl
mov
xchg
stos
fwait
sbb
pop
inc
xor
dec
fadd
sub
mov
pop
mov
inc
or
imul
inc
adc
out
arpl
mov
ret
iret
inc
push
sub
ja
push
inc
fimul
shr
mov
xchg
pop
jg
fidiv
fadd
test
sbb
arpl
pop
int
sbb
pop
dec
aad
push
lods
push
sti
sbb
(bad)
test
mov
mov
sbb
push
xchg
mov
or
pop
sub
mov
push
fbld
or
mov
out
adc
test
or
enter
jae
call
cmps
cs
or
inc
pop
fnstsw
jne
shl
pop
ds
stos
mov
mov
dec
scas
stos
test
add
das
add
adc
cmp
inc
add
outs
inc
movs
pop
cmp
adc
fcmovb
sub
jg
jo
sub
and
push
inc
fiadd
adc
xor
mov
pop
adc
and
idiv
scas
sub
and
enter
ds
arpl
mov
scas
adc
push
mov
jbe
adc
popa
sub
fist
repz
pop
bound
sub
lods
pop
mov
or
push
or
(bad)
push
enter
(bad)
jmp
jo
adc
sbb
loopne
fist
and
les
retf
xchg
stos
loope
pop
fbld
pop
mov
hlt
(bad)
jg
cmp
aaa
mov
pop
fwait
cmp
and
add
jno
mov
push
jb
cld
lea
retf
push
and
and
dec
aam
(bad)
add
vmptrst
push
sub
mov
xor
movs
fcmovu
adc
push
add
adc
sbb
outs
(bad)
call
and
cmp
inc
inc
call
sub
(bad)
fisub
enter
sub
cdq
dec
push
out
mov
and
or
stos
sub
jae
outs
xchg
and
pop
inc
ins
sar
add
xchg
pop
outs
dec
cmp
fwait
shr
test
mov
fsubr
add
mov
scas
mov
push
jo
cmp
in
or
adc
shl
mov
push
sub
xor
inc
(bad)
sbb
fwait
mov
dec
sub
rcr
cmc
adc
hlt
xchg
int3
adc
add
test
enter
xchg
push
aaa
test
xchg
ss
adc
dec
inc
ins
addr16
adc
or
adc
jg
ret
ret
mov
aas
jp
mov
out
push
addr16
mov
jnp
movs
sub
shl
and
ins
inc
and
icebp
mov
inc
dec
xor
dec
jmp
lea
outs
add
inc
movs
adc
inc
or
mov
adc
aas
jo
and
push
adc
adc
sbb
xor
inc
in
add
mov
and
add
adc
retf
push
jbe
mov
mov
adc
sbb
(bad)
add
ret
or
sub
rol
dec
imul
adc
movs
and
sub
popf
pop
add
and
outs
or
adc
enter
push
and
inc
aad
sbb
nop
rcr
inc
add
sbb
cmps
add
rol
mov
shr
sbb
cmp
movs
add
adc
sbb
xchg
add
push
fsubrp
nop
add
xchg
add
ror
xlat
or
shl
fs
sub
je
std
stos
arpl
jne
push
lods
repz
test
adc
cmps
jbe
call
pop
dec
and
(bad)
dec
ret
jb
mov
mov
popa
fidiv
xchg
pop
rol
inc
lahf
jl
push
popa
fadd
inc
push
xor
add
lds
and
adc
rol
dec
invd
sub
lods
dec
dec
dec
inc
push
mov
mov
xchg
adc
adc
cmp
xor
js
in
shl
dec
sbb
bound
test
mov
(bad)
(bad)
test
dec
cmp
lods
icebp
int
nop
xchg
cmp
mov
aaa
xchg
ss
xchg
test
int3
add
mov
shr
dec
(bad)
repz
inc
inc
mov
ins
shl
add
xor
hlt
push
pop
dec
test
pop
or
pop
xor
sub
clc
or
sbb
(bad)
add
add
xor
pop
fistp
mov
jne
lods
inc
inc
cmp
or
mov
add
add
add
shr
add
add
adc
xor
sbb
cmp
mov
pop
punpckhwd
cmp
add
push
mov
cmc
or
mov
add
jne
inc
xchg
mov
and
add
mov
dec
fild
lea
(bad)
mov
mov
pop
sbb
add
daa
add
xor
dec
mov
repz
add
xchg
movs
mov
sub
pop
sbb
pop
lods
jne
nop
ins
inc
add
mov
or
ret
pop
stc
add
jno
(bad)
jo
or
mov
add
pop
dec
mov
pop
test
scas
add
lods
push
pop
add
pusha
pop
(bad)
and
jno
adc
cs
or
pop
mov
bound
sbb
dec
sbb
adc
push
ins
shl
imul
add
push
daa
lea
or
pop
les
jno
pop
rcr
rcl
or
adc
pop
cmps
imul
aad
or
or
jo
mov
fld
xor
add
add
sub
int
lea
jns
(bad)
sub
pop
cwde
arpl
(bad)
(bad)
mov
push
shl
xor
adc
rcr
sar
int
lea
mov
arpl
in
push
add
lea
add
data16
pop
inc
jnp
fld
sbb
sbb
jmp
mov
add
sub
pop
dec
or
sub
shl
stos
or
lds
movs
jmp
lods
jo
(bad)
clc
retf
jle
scas
adc
pop
xor
add
push
xlat
mov
add
sub
scas
pop
add
pop
ja
scas
call
add
mov
pop
add
aad
adc
jge
mov
fistp
push
dec
or
or
or
mov
in
sbb
ins
adc
inc
pop
xor
daa
jb
or
or
or
shr
add
nop
mov
adc
xchg
popa
sub
imul
push
inc
adc
cwde
jo
popa
dec
pop
adc
or
or
xor
and
xlat
push
xor
test
ins
xlat
pop
mov
mov
or
or
push
or
jb
das
adc
sub
movs
jo
push
sub
inc
dec
or
adc
xor
mov
jae
xchg
fild
or
xlat
or
xor
test
or
pop
pop
arpl
fst
aad
or
aad
or
int
pop
sbb
jae
sbb
dec
sbb
and
pop
pop
rol
daa
add
std
or
test
mov
sub
mov
pop
add
ret
ins
push
pusha
push
pop
test
add
nop
xchg
popa
mov
or
sub
pop
cmp
or
push
mov
nop
inc
aaa
pushf
add
gs
sub
popf
add
into
push
push
sbb
jo
mov
add
nop
rcl
into
push
pop
sti
mov
mov
les
adc
adc
movs
add
pusha
add
ja
fwait
push
xchg
repz
and
icebp
nop
or
add
cmps
and
and
add
mov
xchg
adc
out
shr
dec
mov
add
or
dec
sbb
mov
push
cld
add
dec
dec
scas
add
sbb
mov
dec
rol
pop
es
xor
mov
add
xor
xor
add
mov
pop
pop
les
xor
push
shr
pop
add
call
sbb
add
fwait
(bad)
cmp
fidiv
pop
jo
xor
lea
mov
cmp
aam
rcl
xor
ins
rcr
push
dec
add
dec
cmps
pop
rcr
int
or
les
pop
movs
mov
adc
ficom
push
in
int3
inc
cs
pop
add
sar
lahf
das
or
je
dec
pop
or
or
xchg
fidivr
out
xchg
inc
mov
mov
stos
sub
or
sbb
leave
lods
hlt
and
push
adc
xor
pop
xor
dec
arpl
mov
and
adc
fadd
lods
sub
jecxz
add
add
sbb
cs
xchg
and
gs
mov
adc
aas
fstp
or
pop
and
mov
call
sbb
adc
cmp
inc
sbb
retf
leave
add
and
ins
fstp
cmp
mov
inc
adc
inc
mov
lea
add
movs
sbb
pop
cmp
pop
outs
xchg
sub
or
push
mov
or
das
add
or
jae
and
loop
inc
push
xor
cwde
push
mov
add
rol
pop
inc
sub
xchg
fsubr
icebp
sub
icebp
dec
xor
push
mov
loop
imul
mov
push
add
fcom
pop
leave
ins
xchg
and
nop
push
and
in
add
sub
rcr
vmovshdup
or
jge
ror
sbb
aad
or
in
add
dec
add
jl
ins
or
mov
mov
sub
scas
inc
sbb
fcomp
add
adc
add
add
inc
dec
add
loope
pop
cmp
mov
mov
xlat
inc
add
repz
ds
push
sbb
bound
sbb
push
sub
xor
sbb
add
pop
adc
inc
jle
cmp
rol
or
adc
outs
js
xor
adc
xor
mov
and
xor
xor
cmp
cmp
jg
cmp
cmp
adc
xor
xor
jp
rcr
mov
mov
into
pop
add
pop
inc
xchg
push
adc
repnz
add
es
add
loope
ret
mov
seta
addr16
clc
xchg
in
add
pop
inc
dec
inc
out
add
sbb
fs
(bad)
fidiv
test
or
or
or
or
or
or
adc
dec
unpckhps
adc
adc
add
inc
add
or
adc
adc
add
in
or
cmp
cld
mov
mov
and
adc
add
loopne
fst
add
rcl
dec
enter
sbb
push
cmp
add
sub
xchg
mov
sbb
add
adc
and
xor
sbb
inc
inc
push
popa
adc
jno
xor
adc
(bad)
(bad)
jg
inc
and
xor
adc
pop
and
icebp
arpl
push
mov
(bad)
(bad)
(bad)
call
mov
push
loop
repnz
ret
shl
repz
daa
xchg
movs
test
(bad)
(bad)
(bad)
jmp
cmc
push
data16
xchg
cmps
mov
(bad)
out
aaa
inc
push
addr16
xchg
cmps
mov
xlat
out
adc
inc
jecxz
sbb
das
clc
add
or
adc
jno
adc
ja
add
jecxz
pop
mov
loope
xchg
or
loopne
jecxz
sti
xor
and
xor
pop
nop
sub
loop
mov
inc
add
add
aas
or
add
adc
jne
cs
mov
fdivr
(bad)
(bad)
(bad)
jmp
pop
cmc
inc
jecxz
and
sbb
imul
shr
mov
push
add
inc
xor
mov
(bad)
(bad)
(bad)
(bad)
inc
imul
jle
dec
(bad)
fdecstp
push
out
aaa
inc
pop
ins
ja
in
jnp
int3
jle
sub
(bad)
std
aas
lock
movs
or
pop
daa
cmp
enter
inc
inc
mov
cmp
mov
lods
scas
jne
imul
mov
(bad)
jp
cli
(bad)
sar
mov
(bad)
paddd
call
shr
arpl
dec
inc
out
cmp
mov
mov
(bad)
(bad)
(bad)
call
lods
(bad)
arpl
enter
sub
ins
mov
inc
mov
jo
ins
mov
and
idiv
mov
dec
cdq
idiv
repz
popa
sub
push
jbe
(bad)
xor
pop
inc
xchg
int3
sub
inc
xchg
sar
ret
cmc
js
and
sbb
repnz
packssdw
out
push
dec
(bad)
(bad)
(bad)
push
loop
out
(bad)
imul
push
ds
mov
test
xchg
pop
push
imul
inc
(bad)
sbb
fisubr
imul
pop
jmp
(bad)
jmp
jmp
push
cli
rcr
xchg
fstp
or
xchg
js
call
inc
in
sbb
(bad)
or
lds
fsubr
push
out
mov
mov
mov
int3
imul
call
and
(bad)
inc
fnsave
out
in
popa
fistp
pop
nop
lock
(bad)
(bad)
dec
jns
popa
jne
(bad)
push
jne
(bad)
jecxz
mov
mov
(bad)
jg
sti
push
and
lds
leave
bound
jno
pop
sbb
adc
jl
cmp
adc
call
mov
(bad)
call
mov
dec
and
shr
cmp
push
inc
jle
(bad)
xlat
pop
adc
loopne
(bad)
push
or
jg
mov
(bad)
mov
imul
leave
mov
adc
sbb
mov
enter
retf
(bad)
movs
fstp
rcr
cmp
xchg
popa
mov
jne
stos
ja
lea
push
(bad)
inc
cmc
iret
cmps
cmps
mov
push
fsubr
in
ins
xchg
mov
xor
and
int
out
(bad)
call
ror
xor
stc
mov
pop
(bad)
leave
test
imul
scas
pop
stc
(bad)
(bad)
(bad)
call
and
pusha
ret
(bad)
mov
out
xor
jno
in
inc
sub
xor
(bad)
call
dec
arpl
jge
(bad)
and
dec
idiv
xchg
gs
(bad)
(bad)
aas
inc
lods
push
mov
jae
aas
xor
movs
aam
(bad)
lock
(bad)
(bad)
out
fst
scas
mov
dec
push
sbb
push
mov
repz
std
sbb
(bad)
(bad)
(bad)
mov
xchg
inc
inc
out
mov
ret
jge
mov
in
pop
ja
mov
cli
std
push
mov
ss
mov
push
fstp
les
call
mov
out
repz
pop
sbb
(bad)
scas
popa
and
mov
mov
jg
ss
(bad)
(bad)
jmp
push
enter
and
mov
or
pushf
mov
or
call
cmps
(bad)
(bad)
clc
mov
popf
mov
aam
push
cmps
cli
lahf
lock
leave
jb
(bad)
(bad)
(bad)
inc
ins
pop
js
pop
xor
push
imul
loopne
mov
imul
pop
push
(bad)
jmp
xor
fisubr
lea
ror
in
(bad)
(bad)
dec
cmp
dec
xor
xchg
push
(bad)
push
mov
and
clc
call
pushf
jb
xor
shl
loopne
popf
and
(bad)
mov
popa
push
dec
clc
lods
ror
retf
stos
sbb
in
imul
ss
cmp
js
(bad)
jle
in
dec
jp
or
mov
fisttp
sbb
jno
push
mov
xor
enter
jns
(bad)
jge
cmps
xchg
sub
in
mov
es
fldln2
ja
mov
std
(bad)
(bad)
(bad)
aas
xchg
into
cmps
aam
cmp
dec
and
(bad)
mov
mov
clc
mov
xlat
cmp
(bad)
(bad)
cs
sbb
jbe
addr16
jge
jmp
push
ud0
(bad)
ficomp
mul
jl
call
movs
aad
(bad)
jge
shl
imul
jge
xchg
out
ja
hlt
div
movs
jnp
cmp
mov
xlat
data16
cmps
dec
sub
(bad)
adc
js
fild
mov
inc
mov
fbstp
jg
xor
mov
sub
jl
imul
call
retfw
jecxz
fnstcw
lods
adc
out
jle
cld
push
(bad)
jno
cmp
mov
(bad)
(bad)
mov
int
pop
aad
clc
scas
out
jg
rcl
dec
stc
jp
icebp
jg
ror
stos
cli
loope
(bad)
jmp
xor
(bad)
mov
sub
or
scas
jge
(bad)
(bad)
(bad)
aas
cdq
jg
pop
mov
enter
retf
and
fist
std
test
nop
ret
call
dec
cs
daa
ins
lea
adc
out
ins
test
dec
addr16
mov
push
rol
cmps
pop
loopne
call
xchg
mov
mov
outs
inc
mov
jmp
imul
jge
mov
repz
aaa
fcmovbe
mov
jmp
inc
fst
iret
shl
add
xchg
(bad)
pop
out
stos
or
mov
mov
(bad)
(bad)
call
sbb
out
fisttp
int
(bad)
stos
xchg
iret
cld
jg
dec
cmp
xchg
dec
test
xor
jg
jp
cmps
fild
add
(bad)
(bad)
call
popf
popf
sub
cli
adc
jns
ins
ins
sbb
dec
test
(bad)
div
call
dec
lea
push
imul
xlat
jno
mov
(bad)
aad
call
call
adc
jbe
rol
(bad)
(bad)
jg
(bad)
in
cmc
pop
(bad)
sbb
xor
sar
in
jne
xlat
mov
push
(bad)
and
xor
rcr
(bad)
jg
mov
fdiv
mov
not
retf
fscale
cmp
push
or
sub
(bad)
mov
(bad)
(bad)
jg
push
fcomi
cwde
clc
leave
jmp
popf
add
das
or
out
jne
ja
(bad)
dec
stos
jbe
arpl
push
mov
in
sbb
pop
out
cmp
loop
jmp
jmp
out
clc
push
les
aas
call
aad
cdq
cwde
push
test
(bad)
fistp
jge
stos
or
sub
pop
outs
iret
dec
cld
xor
mov
mov
mov
jg
jmp
mov
xor
and
ins
movq
push
adc
adc
sub
fstp
sub
jg
pop
std
mov
mul
dec
jmp
push
aaa
scas
sub
dec
sub
mov
adc
dec
pop
jmp
stc
int
xor
or
out
sub
stc
jg
mov
icebp
jo
dec
imul
cmps
pop
gs
retf
pop
pop
pop
(bad)
fucompp
cmc
sbb
(bad)
(bad)
call
or
push
dec
daa
push
cli
mov
cmp
das
imul
xor
xlat
(bad)
(bad)
(bad)
push
pop
stos
std
daa
mov
(bad)
es
movs
pop
lahf
xor
loop
fild
ins
scas
lea
add
les
lahf
push
call
gs
daa
ins
jne
sub
xor
fidiv
mov
stos
cmp
push
les
(bad)
(bad)
call
sub
and
outs
test
mov
jmp
cmp
pop
sbb
outs
(bad)
fs
retf
das
fucomip
(bad)
nop
ficomp
pop
retf
mov
ret
jae
xor
lods
inc
aaa
cli
sahf
(bad)
(bad)
mov
loopne
div
and
inc
jae
pushfw
jp
retf
xor
xlat
inc
push
cmp
clc
ja
(bad)
mov
push
adc
xchg
dec
pop
cmps
jge
mov
add
jg
hlt
pop
call
xchg
aad
(bad)
outs
fwait
jmp
jo
cld
(bad)
call
(bad)
fld
mov
dec
in
mov
retf
aad
ja
stos
(bad)
(bad)
push
jg
and
mov
(bad)
sar
aad
out
sub
clc
(bad)
(bad)
call
mov
pop
jg
(bad)
jnp
(bad)
jmp
aas
push
popf
jbe
push
or
arpl
fdivr
ins
(bad)
fst
cmps
scas
push
in
aaa
out
jle
pop
(bad)
jmp
(bad)
fwait
(bad)
popa
hlt
enter
pop
ficomp
data16
gs
(bad)
out
(bad)
jnp
mov
dec
in
jmp
mov
sub
movs
mov
cmp
jle
jnp
jge
pop
cmp
and
dec
cmp
(bad)
jg
ss
icebp
push
dec
fwait
jne
mov
aam
cmp
dec
loopne
mov
(bad)
call
sub
rsm
je
sub
mov
aad
pop
scas
and
add
stos
out
jae
inc
(bad)
jmp
stos
mov
scas
loop
mov
movs
fcomp
in
sbb
sar
(bad)
(bad)
(bad)
mov
ds
retf
aad
jg
cli
popf
jg
out
stos
cs
mov
cli
(bad)
(bad)
call
or
cmc
movs
jp
loop
mov
mov
push
add
xlat
pop
push
sub
cmp
fwait
mov
int
loope
dec
inc
(bad)
aas
popf
aas
stc
les
daa
cmp
cmp
fwait
idiv
cld
(bad)
(bad)
dec
int
idiv
(bad)
mov
sbb
jno
xchg
xchg
test
xchg
ret
mov
call
xor
add
cmc
or
outs
mov
mov
(bad)
call
sti
enter
pop
mul
ror
(bad)
and
test
mov
ins
mov
mov
dec
dec
arpl
lods
or
xchg
push
stc
jmp
(bad)
(bad)
push
sbb
sti
icebp
dec
mov
xchg
push
ins
out
loop
ds
sub
pop
pusha
inc
(bad)
aas
std
jge
arpl
push
mov
repz
cmp
retf
cld
loope
icebp
sti
aas
sbb
(bad)
xor
fisttp
out
or
mov
je
aam
mov
fst
sar
push
and
imul
(bad)
(bad)
(bad)
(bad)
xchg
aas
mov
out
jg
idiv
aaa
loop
call
cmc
inc
out
jecxz
(bad)
addr16
push
pop
cld
(bad)
call
retf
xlat
pop
call
fnsave
imul
push
mov
jg
lods
(bad)
ficomp
(bad)
push
stos
jecxz
cmp
iret
into
shl
xchg
je
xlat
jp
dec
jmp
pusha
jnp
dec
fbld
aas
shl
(bad)
hlt
fld
push
cmp
pop
pop
std
fsubr
and
xchg
dec
mov
xchg
in
sbb
jg
(bad)
call
adc
sbb
(bad)
(bad)
addr16
cs
nop
sbb
push
in
aas
push
fld
and
pop
cmp
dec
and
mov
out
mov
(bad)
inc
xlat
cmp
stc
pop
inc
jb
scas
lods
lods
mov
mov
test
retf
(bad)
ss
ins
mov
jg
idiv
mov
ins
cmp
jmp
mov
mov
mov
jmp
outs
scas
idiv
(bad)
(bad)
jg
ja
add
(bad)
and
int
mov
mov
adc
pop
cld
cli
dec
ins
xchg
dec
sub
dec
and
sub
imul
movs
or
push
push
loop
xor
stc
outs
adc
or
out
adc
mov
mov
outs
repz
xlat
hlt
scas
cmps
lahf
pop
dec
ret
jle
cld
(bad)
call
enter
shr
inc
mov
sbb
xor
mov
cld
jmp
pop
imul
jno
push
or
(bad)
push
(bad)
mov
(bad)
(bad)
sbb
sub
cmps
leave
mov
mov
(bad)
adc
popa
into
add
mov
jne
sysenter
mov
out
xor
mov
adc
jg
jmp
sbb
dec
mov
fsubrp
cmp
sub
movs
xor
ret
pop
mov
(bad)
(bad)
dec
ins
mov
mov
fsin
xchg
jmp
jp
dec
scas
pop
and
sub
arpl
mov
retf
mov
mov
mov
out
jmp
pop
pop
mov
add
(bad)
out
(bad)
jge
aad
sbb
mov
(bad)
mov
sar
mov
and
lods
fisttp
pop
push
arpl
mov
(bad)
(bad)
jmp
(bad)
xor
adc
fwait
sbb
mov
gs
cmp
loope
(bad)
push
test
dec
cmp
xchg
arpl
lods
jne
or
pop
hlt
jg
(bad)
jmp
mov
int3
repz
neg
cmc
out
mov
sar
dec
jp
(bad)
call
pop
sbb
(bad)
jg
mov
mov
xchg
xlat
mov
(bad)
inc
jmp
fs
shr
shl
mov
xchg
(bad)
and
dec
lods
or
out
jae
dec
xchg
aaa
dec
cmps
jmp
clc
pop
mov
cmp
lods
ins
mov
js
ins
and
(bad)
(bad)
dec
lock
jle
fmul
mov
mov
mov
fstp
(bad)
xchg
hlt
(bad)
inc
cld
xchg
pushf
popf
int3
ins
push
(bad)
cli
pusha
add
pop
jns
jmp
jmp
lods
aas
sbb
aaa
mov
xchg
(bad)
(bad)
(bad)
sti
aad
outs
out
std
daa
cmps
arpl
jb
daa
and
cs
cdq
mov
(bad)
mov
fisttp
jle
xor
fcmove
pop
pop
and
into
repnz
scas
pop
(bad)
(bad)
dec
pop
aaa
rol
add
enter
add
cmps
loope
stc
out
(bad)
(bad)
(bad)
call
push
push
xchg
xchg
pop
repnz
mov
mov
arpl
sub
jp
js
xchg
movs
jmp
movs
std
bound
mov
arpl
mov
in
idiv
(bad)
(bad)
call
cmp
jle
inc
xlat
out
jae
(bad)
imul
xchg
hlt
not
loope
(bad)
inc
mov
and
or
jmp
jmp
paddd
(bad)
push
dec
cpuid
in
jnp
sub
sar
mov
cmp
scas
imul
jmp
mov
cmp
dec
or
and
fcomi
imul
scas
cmp
dec
repnz
out
mov
xchg
in
cmp
mov
pop
jmp
xlat
(bad)
jmp
jae
mov
ficomp
rcl
push
push
dec
leave
jmp
mov
jmp
jbe
fcomp
fldenv
in
std
sbb
(bad)
(bad)
call
xor
std
lods
mov
in
stc
sub
cmp
cld
pop
js
mov
mov
inc
stc
jo
dec
mov
test
(bad)
fcos
mov
lds
cmp
dec
add
or
daa
jmp
sub
cmp
adc
not
sub
es
or
(bad)
(bad)
add
and
mov
aas
push
xor
xchg
int3
pop
sbb
stos
rep
mov
imul
xchg
sbb
lods
int
or
(bad)
int
jmp
data16
ret
or
imul
cdq
call
pop
and
dec
cmps
clc
xchg
mov
add
and
(bad)
aaa
mul
cmp
pop
add
xchg
popa
mov
xchg
xor
pop
jo
sub
mov
pop
and
ja
inc
push
pop
shl
sar
pop
sbb
lods
mov
sub
add
adc
pop
aam
and
sbb
add
inc
add
sbb
inc
mov
mov
mov
adc
cli
nop
fld
add
bound
adc
mov
arpl
push
mov
rcr
lea
das
fcom
rol
or
fnsave
enter
jle
jae
ins
dec
jae
iret
add
mov
inc
mov
xor
jo
adc
retf
outs
mov
out
js
pop
imul
or
inc
push
outs
pop
ja
popa
data16
push
adc
and
(bad)
xchg
add
ins
push
inc
pop
push
stc
inc
inc
jle
and
adc
push
inc
je
daa
push
loop
and
arpl
jae
inc
xor
push
bound
xor
sub
or
xor
stc
jns
sub
inc
icebp
pop
push
ror
pop
push
sub
add
mov
or
ins
mov
daa
inc
inc
xor
lods
mov
or
or
or
cmps
sub
dec
das
shr
push
or
push
aad
sub
add
lock
addr16
pop
pop
dec
or
std
clc
sub
mov
add
stos
test
or
jns
aam
and
invd
xchg
cmovle
cmp
cmp
loop
sub
fwait
dec
jae
jo
adc
add
stos
push
add
sbb
ret
clc
fwait
pop
rcr
dec
push
inc
push
push
in
cs
outs
inc
jae
int3
fadd
sbb
add
mov
add
jne
sbb
push
enter
dec
mov
jae
add
sbb
jae
div
ins
in
imul
outs
inc
scas
push
xchg
test
jae
mov
imul
mov
sbb
pop
adc
jmp
cmp
jae
popa
call
nop
and
js
jo
xor
xor
add
or
jmp
(bad)
(bad)
std
iret
fnstcw
and
imul
jo
gs
mov
jp
push
arpl
arpl
and
or
cmp
jo
or
mov
imul
pop
mov
xchg
imul
sti
jge
xor
shl
sub
and
cmp
data16
sub
push
inc
inc
jae
inc
ffreep
out
mov
jb
cmp
add
xor
push
sti
xor
xor
sub
inc
mov
js
pop
and
es
call
push
lock
and
mov
mov
shl
jo
loopne
push
mov
daa
das
gs
mov
adc
sbb
das
mov
jp
cmp
inc
jg
adc
rcr
das
sub
das
adc
mov
adc
stos
or
sub
test
popa
adc
mov
inc
pop
(bad)
gs
push
sbb
scas
xor
sub
push
ins
in
mov
adc
mov
or
xchg
imul
jns
push
xchg
inc
jb
sub
dec
ror
or
ins
adc
retf
jae
stos
or
das
test
loope
fstp
adc
adc
test
icebp
cmp
inc
inc
xor
jmp
ds
ss
ss
inc
xchg
inc
cmp
aaa
inc
xor
ss
sub
cmp
cmps
rol
(bad)
push
and
fwait
jp
lods
add
or
push
dec
cli
add
add
cmp
pop
ret
mov
jo
cmp
mov
inc
leave
aaa
outs
lods
mov
xor
outs
pusha
xor
jge
cmp
inc
adc
xor
inc
xor
sbb
xchg
inc
inc
outs
outs
mov
lods
cmp
aad
xor
mov
out
sub
shr
add
xor
sbb
mov
pop
pop
push
ins
jne
mov
les
mov
je
pop
leave
rol
pop
pop
fwait
pop
or
sub
sub
loopne
test
inc
imul
aaa
cmp
imul
jb
xor
xor
cmp
xor
mov
cmp
cmp
xor
xor
fld
xor
mov
xor
(bad)
fucomi
xor
ds
xor
cmp
inc
xor
(bad)
fdivrp
(bad)
xor
aaa
inc
aaa
inc
inc
xchg
xor
inc
inc
adc
inc
sub
ss
icebp
push
push
pusha
sti
gs
mov
les
xor
sub
pop
and
sub
sbb
pop
xor
xor
movs
and
adc
mov
inc
or
jo
inc
sbb
hlt
and
jne
sbb
or
jae
inc
xchg
lods
and
dec
pop
xor
outs
fld
xor
or
and
fwait
(bad)
imul
or
pop
xor
and
enter
xor
xor
ss
aaa
or
cmp
xchg
xchg
xchg
xchg
xor
xor
ja
xchg
xchg
xor
ja
xor
xor
outs
xchg
cmp
xor
aaa
or
(bad)
push
stc
cmp
inc
cmp
mov
or
or
cmps
or
cmp
xor
xor
or
xor
dec
sub
ja
jecxz
mov
push
inc
sub
adc
add
fbstp
mov
out
add
dec
push
adc
dec
das
jnp
xor
cmp
xor
pop
inc
mov
cmp
inc
fbstp
loop
imul
gs
cmp
mov
adc
xchg
cdq
retf
jo
pop
adc
inc
fisubr
fbstp
(bad)
imul
inc
iret
std
ret
jmp
and
scas
lds
ss
add
mov
push
pop
add
inc
das
adc
lea
sub
sbb
pop
addr16
jg
and
or
adc
dec
and
sub
push
and
popf
std
outs
out
call
loop
pop
or
push
dec
inc
dec
dec
pop
or
dec
dec
arpl
(bad)
shr
in
sbb
push
sbb
push
sub
sahf
push
sub
lahf
sbb
jae
dec
push
inc
test
mov
mov
(bad)
or
shr
adc
jb
dec
mov
outs
xor
out
mov
ins
ja
jo
push
adc
imul
add
add
inc
push
sbb
js
fldcw
pop
inc
fs
fs
jns
sub
push
jo
les
or
add
push
aam
jge
push
clc
jbe
xchg
gs
gs
movs
stc
cmps
std
and
arpl
xor
push
push
inc
cmp
inc
push
in
or
bound
clc
xchg
movs
or
and
arpl
call
dec
fist
sub
add
arpl
adc
add
lea
cmp
adc
mov
mov
repz
repnz
add
int3
es
outs
mov
cmp
add
fcomp
sbb
and
outs
movzx
add
push
pop
add
out
lock
jecxz
mov
and
scas
fistp
ret
cs
mov
jo
mov
test
dec
add
inc
push
int
call
add
cvttps2pi
dec
jno
lock
fadd
pop
jmp
ret
xchg
dec
ins
inc
in
xchg
push
test
punpcklwd
pop
scas
iret
adc
in
sub
fbld
subps
aas
jge
or
repnz
pop
out
sbb
(bad)
cmp
and
push
push
mov
adc
add
call
add
sub
das
sbb
ror
and
add
ins
shr
outs
pop
idiv
pop
xor
add
xchg
mov
scas
add
(bad)
fdivr
pop
mov
in
add
add
add
add
add
(bad)
(bad)
dec
test
add
pop
add
add
add
add
add
add
adc
add
pop
push
add
jne
jl
mov
inc
add
add
add
(bad)
inc
rol
add
add
add
add
add
add
add
add
adc
sbb
add
add
(bad)
call
add
add
add
jp
test
mov
cwde
add
add
add
xor
add
add
add
jmp
and
sub
add
add
dec
add
add
jle
mov
xchg
add
add
add
add
add
(bad)
(bad)
push
add
add
aad
and
add
add
add
add
add
add
add
(bad)
(bad)
jmp
add
add
add
add
add
sub
pop
add
xchg
xchg
add
lds
test
push
push
daa
push
aaa
push
dec
push
pop
push
push
jnp
(bad)
mov
popf
push
scas
push
rol
push
jecxz
cmc
pop
sbb
sub
cmp
pop
je
xchg
(bad)
(bad)
inc
cdq
pop
lods
pop
mov
pop
clc
or
or
or
or
pop
or
or
or
(bad)
dec
ror
out
sti
or
or
or
or
or
or
or
or
jg
(bad)
dec
daa
or
or
or
or
or
or
or
or
(bad)
(bad)
(bad)
jmp
or
or
or
or
or
or
or
or
or
or
or
or
or
(bad)
dec
repz
pop
or
test
or
cs
dec
push
fs
(bad)
dec
jg
fwait
push
mov
ror
out
wbinvd
(bad)
cmovno
pop
(bad)
setbe
mov
iret
paddsb
(bad)
(bad)
jg
adc
adc
popa
adc
fwait
adc
adc
adc
adc
ins
adc
(bad)
dec
adc
adc
adc
adc
adc
jecxz
add
and
inc
adc
cmp
(bad)
aas
mov
adc
adc
adc
adc
adc
adc
adc
adc
adc
push
adc
cld
adc
loopne
push
or
ins
push
(bad)
push
mov
(bad)
(bad)
(bad)
call
push
cli
pop
sbb
pop
mov
scas
pop
rcl
neg
sbb
inc
sbb
mov
scas
sbb
sbb
sbb
(bad)
(bad)
jmp
sbb
imul
sbb
sbb
sbb
ja
sahf
sbb
sbb
sbb
cmp
arpl
(bad)
(bad)
(bad)
dec
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
jo
cdq
sbb
(bad)
(bad)
(bad)
call
push
inc
push
push
xchg
push
mov
pop
ds
imul
jmp
and
inc
and
and
dec
and
mov
and
and
and
and
and
and
and
jmp
(bad)
call
pop
and
and
and
and
push
and
xchg
and
(bad)
(bad)
jmp
daa
es
xchg
mov
call
daa
jp
stos
daa
fsubr
or
sub
std
(bad)
(bad)
jmp
cmp
imul
sub
sub
sub
sub
sub
sub
sub
popf
sub
sub
(bad)
(bad)
jg
scas
outs
sub
sub
sub
jbe
stos
sub
dec
cs
(bad)
jmp
mov
out
das
and
pop
das
xchg
das
(bad)
das
(bad)
xor
xor
xor
xor
xor
xor
(bad)
(bad)
(bad)
push
sub
arpl
fwait
xor
xor
xor
xor
xor
xor
xor
xchg
(bad)
(bad)
push
aaa
ss
scas
ss
aaa
pushf
aaa
xlat
cmp
push
cmp
inc
(bad)
(bad)
(bad)
(bad)
cmp
mov
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
(bad)
cmp
loopne
and
pusha
mov
aas
popa
aas
mov
inc
fs
cmps
inc
out
sub
(bad)
(bad)
inc
inc
lods
inc
out
inc
xor
inc
mov
test
inc
add
mov
(bad)
(bad)
jmp
inc
fiadd
inc
addr16
stos
inc
lock
xor
dec
add
dec
xlat
dec
(bad)
(bad)
(bad)
call
dec
lock
aaa
dec
jge
les
dec
push
dec
call
dec
mov
dec
(bad)
jg
call
dec
outs
dec
mov
dec
dec
dec
xchg
dec
fst
push
jno
mov
inc
push
push
push
fwait
push
out
xor
push
(bad)
push
adc
push
stos
push
not
(bad)
push
fist
push
jne
(bad)
(bad)
(bad)
inc
push
orps
push
not
push
xchg
push
loopne
das
pop
jge
retf
pop
sbb
pop
(bad)
(bad)
aas
shl
pop
cmc
pop
inc
pop
xchg
pop
in
xor
pop
(bad)
(bad)
(bad)
jmp
pop
js
leave
pop
sbb
pop
mov
pop
mov
add
pusha
cld
popa
dec
popa
mov
jmp
dec
pushf
(bad)
lock
xchg
arpl
jmp
gs
cmp
(bad)
(bad)
(bad)
jmp
addr16
push
in
imul
dec
push
push
imul
imul
(bad)
(bad)
jmp
scas
ins
or
ins
mov
outs
les
outs
js
shl
jo
jo
jno
jno
inc
push
jb
jb
jae
jae
jae
je
cdq
int3
jne
jne
jne
jbe
(bad)
(bad)
(bad)
ds
jbe
ja
ja
js
js
js
jns
jns
jns
jp
jp
jnp
jnp
jnp
jl
(bad)
(bad)
jmp
jl
jl
jge
jge
jle
jle
jle
jg
jg
jg
add
xor
sub
xchg
xor
mov
(bad)
inc
test
xchg
xchg
xchg
mov
mov
mov
(bad)
(bad)
(bad)
dec
xchg
mov
mov
retf
lea
mov
(bad)
ss
sahf
nop
push
nop
outs
nop
(bad)
(bad)
inc
call
adc
xchg
mov
and
xchg
leave
xchg
xor
(bad)
(bad)
(bad)
call
xchg
loopne
dec
cwde
mov
cdq
cld
call
scas
pushf
sbb
mov
jmp
sahf
inc
sahf
scas
lahf
sbb
mov
inc
mov
xchg
mov
out
(bad)
(bad)
(bad)
call
(bad)
movs
cmp
mov
loopne
push
test
test
sbb
(bad)
stos
add
jne
jmp
lods
inc
lods
mov
scas
push
scas
mov
jmp
mov
(bad)
(bad)
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
(bad)
(bad)
mov
cmp
cmps
mov
mov
test
(bad)
(bad)
jp
cmc
shl
shl
ret
fcmovnb
pop
ret
aam
push
(bad)
into
lds
enter
(bad)
aas
inc
addr16
(bad)
mov
leave
cmp
mov
retf
ss
mov
(bad)
(bad)
dec
xor
int
into
ss
mov
aaa
iret
mov
sar
mov
rol
(bad)
(bad)
(bad)
call
dec
aam
aad
aad
(bad)
push
(bad)
fcom
pop
xlat
loopne
fs
fldcw
fidiv
sti
fild
(bad)
(bad)
fmul
ficomp
mov
loopne
loopne
loope
loope
loop
loop
jecxz
jecxz
in
(bad)
(bad)
(bad)
jmp
cld
in
out
out
out
out
call
inc
jmp
in
jo
sti
in
xchg
adc
inc
(bad)
(bad)
in
pushf
out
sub
mov
inc
out
int3
lock
lock
jb
(bad)
(bad)
jg
mov
sbb
cmps
hlt
xor
ret
cmc
fdivp
ins
idiv
test
cli
push
xor
(bad)
(bad)
cli
out
ja
pop
cld
cwde
std
sub
mov
jmp
jmp
jecxz
jmp
add
std
outs
jg
es
add
push
or
push
push
or
or
or
mov
or
or
or
and
adc
or
shr
jns
cmps
sbb
adc
dec
inc
sub
jge
cwde
sub
inc
mov
add
add
pop
pop
add
and
fimul
add
add
sub
sahf
rol
jmp
pop
adc
(bad)
(bad)
jmp
icebp
and
mov
xor
mov
pop
push
fs
cld
jmp
sti
shl
or
sub
inc
movs
mov
ror
sbb
jecxz
push
scas
sub
add
cmp
pop
add
cmp
mov
push
add
and
or
leave
fldl2t
stc
sub
in
lock
push
mov
jmp
or
ins
int
lds
xchg
bound
cld
pop
gs
xor
pop
and
push
bound
sar
push
and
inc
adc
push
and
jae
xor
or
loopne
or
inc
sbb
ja
aaa
repnz
sub
rcr
jne
pusha
popf
push
cs
lahf
add
call
cmps
icebp
mov
adc
mov
pop
cmp
aam
(bad)
jmp
inc
in
loopne
test
pop
or
fcmovne
jp
call
(bad)
(bad)
(bad)
cmp
inc
xor
js
pop
add
adc
push
push
xchg
mov
cmp
sub
loope
nop
jl
lods
stc
daa
int3
rcr
sub
sar
call
or
sbb
cmps
dec
mov
mov
dec
push
sub
sub
das
sub
push
div
movs
shl
jg
xchg
mov
loop
xlat
adc
fistp
push
lods
push
fsubr
in
pop
rcl
mov
(bad)
(bad)
push
xchg
mov
or
mov
xor
dec
repnz
ror
pop
mov
(bad)
(bad)
jmp
jle
pop
sbb
xchg
cdq
hlt
ins
adc
xchg
jle
(bad)
pop
call
jmp
cmp
cmps
xchg
add
dec
sub
inc
inc
sub
clc
jg
xor
iret
lds
out
cmp
xchg
and
cmp
mov
mov
jl
inc
(bad)
call
test
cld
movs
bnd
adc
shl
stos
scas
les
sar
add
and
pop
mov
push
mov
jbe
imul
cmovnp
sti
xchg
loop
cmp
mov
loopne
loope
cmps
bound
lds
repz
(bad)
push
pop
cld
(bad)
call
loopne
jg
(bad)
pop
call
hlt
jge
and
push
mov
stos
jno
pop
(bad)
(bad)
(bad)
jmp
and
test
cwde
loopne
xchg
mov
jbe
inc
xor
mov
movs
and
stc
jg
stc
(bad)
(bad)
(bad)
push
(bad)
mov
bound
mov
aad
mov
retf
and
inc
and
and
sbb
fiadd
sbb
(bad)
(bad)
(bad)
push
mov
out
jg
ret
les
ss
ror
and
jbe
call
lods
pop
inc
xchg
(bad)
(bad)
jg
adc
addr16
fdecstp
jmp
jae
dec
adc
sbb
popa
ins
mov
rol
lds
mov
cmp
scas
das
(bad)
call
and
sub
call
hlt
pop
xchg
and
mov
(bad)
aas
(bad)
xchg
xor
fsubr
shl
jb
out
pop
test
leave
es
dec
push
xchg
(bad)
dec
sbb
aam
cmp
dec
sub
cmp
xor
(bad)
dec
hlt
or
fdiv
mov
sahf
xor
imul
xchg
rcl
gs
clc
adc
sbb
mov
and
push
lea
fisttp
push
hlt
(bad)
(bad)
inc
add
xchg
inc
push
int
loopne
mov
js
mov
mov
push
movs
imul
inc
shr
(bad)
jmp
push
cmp
mov
or
(bad)
jg
sbb
sub
bound
mov
jo
jnp
outs
xchg
jo
(bad)
push
push
add
mov
lahf
repz
lock
jecxz
cli
dec
data16
test
or
jecxz
mov
(bad)
mov
pop
test
xor
fstp
mov
xchg
das
inc
jmp
or
xchg
imul
mov
(bad)
(bad)
aas
lea
fcom
neg
push
lock
repnz
ds
aas
call
pop
push
test
xchg
(bad)
mov
dec
hlt
xor
addr16
jmp
fild
vpshlw
cmps
jmp
(bad)
(bad)
(bad)
dec
test
retf
and
xor
stos
push
pusha
push
js
fcom
sbb
dec
xor
lahf
cmps
jne
push
push
adc
cmp
out
push
stos
mov
pop
mov
mov
(bad)
(bad)
inc
idiv
cmps
inc
ret
sbb
pop
aam
mov
cmps
xor
or
(bad)
(bad)
(bad)
jle
cmp
dec
aaa
push
in
aam
sub
sti
stos
mov
mov
xor
push
(bad)
(bad)
dec
or
add
fisttp
or
mov
nop
cmp
(bad)
(bad)
(bad)
dec
lahf
neg
xor
in
popa
mov
adc
pusha
hlt
imul
jae
mov
xchg
fidiv
sti
out
(bad)
(bad)
inc
icebp
ficom
sub
mov
jge
pop
sub
mov
loop
std
pop
dec
xchg
push
adc
mov
mov
mov
std
movups
mov
aad
inc
(bad)
push
retf
rcl
xchg
xchg
or
test
mov
(bad)
(bad)
(bad)
dec
dec
test
pop
or
scas
and
mov
cmp
dec
jle
(bad)
mov
mov
pushf
push
add
(bad)
dec
xchg
sbb
xchg
fist
sahf
loop
xor
inc
rol
dec
add
aad
movs
push
rcr
(bad)
jg
mov
xchg
sbb
icebp
aaa
loop
push
pop
jae
adc
inc
pop
fsubr
xchg
mov
add
dec
movs
fcmovu
in
cld
(bad)
popw
mov
cld
and
jae
dec
out
repnz
in
pop
xchg
jle
jge
dec
or
lock
cmp
inc
jg
mov
bound
call
push
jo
or
sbb
jno
add
pop
invd
dec
lock
lds
cld
(bad)
mov
cld
push
xor
(bad)
out
imul
xchg
ins
mov
(bad)
(bad)
push
add
pop
jno
stos
int
test
cdq
inc
jbe
(bad)
pushf
stc
scas
int3
xor
stos
xlat
xchg
movs
(bad)
(bad)
(bad)
push
cmps
mov
imul
loop
push
cmc
out
push
dec
or
jmp
inc
cmp
xor
retf
xchg
nop
mov
mov
cmp
call
add
shl
adc
fstp
lds
bound
stc
lahf
mov
fdivr
loop
mov
(bad)
(bad)
(bad)
mov
or
pop
test
pop
pop
pop
les
jo
bound
mov
sti
pusha
sub
jmp
(bad)
pop
sub
inc
fs
pop
add
push
pop
lods
mov
push
cwde
xlat
inc
lahf
clc
cmps
and
inc
popa
adc
cmp
sub
into
(bad)
jne
dec
xor
cmp
push
(bad)
(bad)
(bad)
sti
mov
dec
and
fsub
xchg
mov
mov
dec
fisttp
jne
jnp
mov
inc
movs
(bad)
(bad)
(bad)
jmp
aad
xchg
mov
ins
xor
xchg
movs
xor
inc
pop
mov
in
std
pop
mov
cld
jne
fimul
call
(bad)
dec
rcr
pop
call
jae
fdiv
sub
(bad)
(bad)
(bad)
jmp
jp
cld
jo
(bad)
daa
sbb
(bad)
xor
pop
gs
push
mov
dec
pop
pop
push
add
std
dec
sub
and
fdiv
sbb
(bad)
(bad)
jmp
or
push
cmp
popf
or
bound
add
pop
jecxz
inc
pusha
mov
pop
jnp
loope
fld
(bad)
dec
pop
xchg
mov
sbb
out
sub
cs
xor
call
xchg
push
xchg
call
cld
push
(bad)
mov
add
push
sub
mov
arpl
idiv
cmps
push
es
jg
jg
dec
jg
xchg
mov
inc
ficomp
in
test
(bad)
(bad)
jmp
les
(bad)
sbb
and
scas
push
xor
and
call
mov
ss
(bad)
(bad)
dec
movs
ins
inc
sbb
test
mov
popa
retf
movs
jnp
sbb
xchg
inc
cld
jmp
mov
xor
xchg
pop
pushf
test
fsub
repz
lea
adc
mov
frstor
dec
movs
rcr
mov
stos
dec
not
hlt
out
es
ficom
ret
shl
and
jmp
xchg
mov
(bad)
sbb
dec
std
sahf
stc
inc
pop
push
js
dec
call
push
(bad)
(bad)
aas
mov
push
lods
xor
xchg
push
aam
xlat
lods
rol
fld
inc
(bad)
fmul
xchg
cmc
sbb
jmp
psadbw
loopne
push
call
daa
(bad)
(bad)
(bad)
call
xchg
rol
mov
jbe
sbb
dec
fisub
jmp
jmp
(bad)
(bad)
(bad)
mov
push
stos
push
fld
retf
adc
sbb
dec
adc
mov
(bad)
(bad)
call
repnz
dec
rcr
push
test
cli
jo
pop
xchg
dec
mov
(bad)
jg
dec
pop
popf
or
add
aas
push
xchg
dec
aam
mov
fs
(bad)
inc
out
cmp
mov
fcomp
leave
adc
(bad)
pop
add
and
mov
or
xchg
xchg
xchg
rcl
sub
inc
xchg
dec
retf
inc
dec
xchg
cmc
push
out
(bad)
(bad)
(bad)
dec
xchg
in
adc
ins
(bad)
nop
(bad)
in
int3
cmp
lods
fbstp
into
dec
pop
sbb
push
sbb
(bad)
(bad)
(bad)
(bad)
fidiv
sub
nop
fdivr
xor
fcomp
sbb
out
jge
(bad)
(bad)
(bad)
(bad)
jmp
cmp
pop
not
and
jb
mov
aam
sub
mov
movs
xchg
jle
cld
(bad)
(bad)
(bad)
ds
mov
in
add
mov
adc
in
(bad)
cdq
sbb
out
cld
(bad)
(bad)
jmp
sti
icebp
dec
leave
xor
rol
lods
jbe
adc
stos
adc
(bad)
(bad)
(bad)
(bad)
fsub
inc
push
retf
movs
dec
mov
mov
pushf
test
add
cwde
sar
push
cs
in
jp
sahf
pop
mov
aaa
fcomp
dec
sub
mov
xlat
push
(bad)
aas
cli
call
cdq
(bad)
mov
or
pop
js
mov
(bad)
(bad)
(bad)
push
adc
push
test
xchg
xor
mov
shl
stc
in
rcl
and
call
cmp
outs
cmp
and
lahf
(bad)
sub
mov
sub
mov
(bad)
(bad)
(bad)
call
mov
cs
add
pop
sti
add
xchg
fild
xchg
xor
imul
(bad)
call
pop
add
cmp
popf
mov
lea
jmp
jmp
(bad)
push
jmp
add
sbb
test
adc
sub
sar
(bad)
(bad)
(bad)
jl
mov
mov
retf
sahf
fld1
ror
cmps
lds
pop
mov
sbb
lods
cs
inc
adc
data16
lahf
maxps
out
xchg
sbb
push
adc
and
addr16
cmp
aad
addr16
dec
aad
adc
jo
push
nop
pop
fst
inc
(bad)
push
dec
repnz
popw
pop
mov
sbb
test
outs
and
mov
aas
std
sub
por
dec
test
mov
sar
in
push
aam
sti
(bad)
(bad)
jmp
cdq
stc
push
sub
imul
adc
cli
xchg
outs
ds
inc
shl
jb
in
sar
scas
call
(bad)
sti
(bad)
mov
mov
sbb
sbb
cmps
call
(bad)
fdivr
(bad)
ret
(bad)
(bad)
jmp
rcr
aad
out
xor
xchg
cli
mov
or
(bad)
sbb
inc
jmp
movs
imul
pop
cld
(bad)
call
dec
sub
test
or
aad
mov
xchg
std
jno
push
jg
(bad)
call
std
pmulhuw
ficomp
dec
movs
jns
imul
hlt
lods
mov
mov
mov
jmp
jecxz
movs
xlat
fnstenv
test
int
mov
loopne
sbb
pushf
jmp
nop
jle
(bad)
(bad)
(bad)
jmp
push
aas
daa
sbb
(bad)
frstor
repnz
push
fcmove
jmp
and
push
mov
add
loopne
daa
mov
and
dec
and
ja
dec
cmp
(bad)
(bad)
call
jp
imul
push
push
jmp
out
(bad)
aas
cli
sub
test
jno
ret
and
lea
inc
and
push
adc
xor
inc
(bad)
dec
mov
(bad)
inc
popf
mov
xor
jns
cmp
scas
popa
in
pop
lahf
loope
mov
mov
add
(bad)
jmp
fldcw
jle
xchg
cld
sub
loop
push
(bad)
(bad)
(bad)
inc
inc
sub
(bad)
cmps
test
cdq
sub
movs
mov
std
mov
(bad)
(bad)
(bad)
jmp
mov
repz
lea
retf
out
cmp
cmp
dec
xchg
retf
cld
push
mov
pop
xor
and
loope
jns
fisttp
ret
loopne
cld
enter
xor
std
(bad)
(bad)
(bad)
call
jno
cmp
lea
adc
push
ins
arpl
jl
stos
pop
jp
or
inc
add
mov
movs
and
fwait
pop
mov
xchg
inc
jmp
icebp
jl
(bad)
(bad)
(bad)
jmp
shl
sub
inc
lock
in
sub
jle
cmp
cmp
(bad)
(bad)
(bad)
(bad)
(bad)
sub
mov
loop
pop
sar
hlt
fdivr
lock
mov
js
pop
mov
(bad)
(bad)
(bad)
(bad)
aas
jne
jo
(bad)
aas
xchg
cmp
pop
into
dec
out
iret
cld
out
imul
push
adc
icebp
(bad)
(bad)
inc
(bad)
jmp
mov
inc
std
xchg
push
test
stos
repnz
pop
jb
or
jmp
mov
out
mov
jno
xchg
cmp
(bad)
push
dec
lds
dec
icebp
push
les
or
bound
inc
or
repz
push
xchg
fstp
(bad)
sti
daa
mov
call
lea
(bad)
(bad)
xchg
stos
js
cmc
cmps
xchg
inc
mov
jmp
sub
or
test
xor
mov
lds
xor
(bad)
inc
icebp
and
mov
push
fxch
dec
ja
cmp
xchg
jg
pop
jns
lea
call
add
in
pop
rcl
pop
mov
(bad)
(bad)
fisttp
test
leave
sub
sbb
ret
mov
loop
or
call
stos
cmc
push
push
test
or
idiv
call
out
or
(bad)
(bad)
(bad)
jmp
ss
lea
iret
ret
inc
sbb
mov
in
call
test
push
jmp
sbb
mov
aas
repnz
rcr
dec
add
sbb
scas
jnp
outs
lock
and
fisttp
push
outs
outs
mov
dec
retf
mov
inc
and
push
sbb
dec
jecxz
add
inc
sbb
into
cmps
add
(bad)
aas
std
pop
inc
(bad)
es
mov
or
and
pusha
inc
and
nop
cmp
pop
(bad)
(bad)
call
sub
push
mov
imul
test
retf
pop
mov
loop
xor
(bad)
(bad)
dec
hlt
push
(bad)
push
mov
xchg
sub
and
or
mov
ficomp
(bad)
(bad)
jmp
or
fisubr
push
sbb
enter
pop
pop
das
sar
mov
bound
jmp
pop
push
adc
rsm
and
sub
sub
fisub
and
xchg
xor
lock
loop
xor
sbb
imul
mov
(bad)
push
mov
in
sub
sub
fwait
jl
jge
pop
mov
cli
jbe
(bad)
(bad)
push
xchg
mov
das
push
in
lds
mov
push
sub
ins
sub
jmp
fild
push
adc
stos
mov
xchg
(bad)
pop
sub
in
adc
inc
aam
pop
(bad)
(bad)
jmp
dec
aam
pop
retf
aam
inc
mov
mov
(bad)
pop
(bad)
jmp
std
mov
scas
push
retf
stos
sbb
fld
scas
outs
pop
(bad)
(bad)
call
addr16
jmp
mov
punpckhbw
dec
inc
push
rcl
(bad)
(bad)
(bad)
call
mov
jnp
and
inc
je
xchg
and
mov
popf
xchg
(bad)
(bad)
(bad)
jmp
push
mov
and
mov
cmp
test
shl
hlt
ret
cmp
call
inc
mov
dec
jmp
inc
ror
stos
movs
call
sbb
sub
divps
dec
imul
(bad)
aas
loop
call
xor
cmp
in
leave
pop
jle
hlt
test
pushf
(bad)
jmp
mov
out
iret
retf
(bad)
std
jecxz
in
in
sti
popa
(bad)
jecxz
push
fdivr
(bad)
(bad)
push
fwait
or
add
shl
mov
fsub
test
cwde
fldenv
(bad)
(bad)
inc
mov
movs
inc
repnz
xchg
mov
adc
jae
(bad)
jge
ins
ins
(bad)
(bad)
(bad)
(bad)
out
lods
and
sub
inc
or
scas
inc
bound
sbb
lahf
push
adc
das
(bad)
movs
idiv
popf
(bad)
sar
(bad)
(bad)
fbstp
inc
sbb
ret
shl
mov
push
enter
scas
lds
stos
dec
mov
ins
data16
(bad)
(bad)
inc
fcmovu
ret
dec
mov
inc
or
mov
sub
add
dec
xchg
push
and
daa
(bad)
(bad)
call
iret
nop
cld
in
stos
inc
mov
mov
push
xchg
out
jge
stos
jnp
stos
aaa
in
std
(bad)
(bad)
jmp
rcl
in
xchg
mov
lock
sub
dec
xchg
dec
rcr
dec
jns
push
cmp
push
(bad)
(bad)
(bad)
(bad)
jl
arpl
pop
fdiv
imul
xchg
or
mov
mov
aam
cli
(bad)
(bad)
(bad)
(bad)
jmp
call
dec
cld
inc
dec
pop
in
or
xlat
into
ds
mov
(bad)
call
fld
mov
aam
scas
in
mov
dec
cdq
fdiv
icebp
or
push
dec
pop
inc
es
gs
sub
adc
mov
enter
xor
dec
mov
mov
ins
out
arpl
loopne
pushf
popf
fs
test
jg
mov
call
jecxz
enter
mov
fdiv
cmps
cmps
mov
sub
clc
sub
lods
mov
out
inc
(bad)
(bad)
(bad)
jmp
ds
repnz
xor
xchg
and
cli
inc
fs
mov
(bad)
(bad)
(bad)
js
jo
loopne
shl
mov
jb
es
dec
pop
repnz
cmps
addr16
pop
(bad)
jg
call
(bad)
pop
fs
mov
sub
ss
arpl
(bad)
stc
jae
push
shr
xchg
(bad)
jmp
mov
mov
mov
dec
clc
(bad)
(bad)
mov
cmp
jg
aas
int
movs
std
push
jbe
mov
pop
std
dec
lods
cmc
leave
mov
fxtract
jg
stc
(bad)
sbb
test
and
inc
jmp
xlat
packsswb
repz
push
xchg
mov
xchg
pop
(bad)
jno
pop
daa
(bad)
xor
mov
dec
push
and
jne
inc
retf
fwait
add
and
call
jmp
cmp
(bad)
retf
inc
xlat
sub
mov
(bad)
(bad)
(bad)
(bad)
fist
add
inc
enter
(bad)
out
sbb
cmp
cmp
cmc
stc
or
mov
dec
mov
sub
mov
mov
test
mov
int
push
div
xchg
pusha
push
jne
mov
jmp
call
xlat
out
adc
xchg
je
pop
inc
pop
dec
imul
stc
(bad)
(bad)
dec
cmp
lahf
das
push
pop
jle
imul
dec
rcl
(bad)
(bad)
jmp
ins
and
mov
mov
leave
and
xchg
and
mov
cmc
inc
je
ds
out
gs
loopne
int
ins
or
shl
shr
es
adc
sub
mov
sti
shl
loop
bound
(bad)
(bad)
in
xor
push
(bad)
(bad)
call
repnz
or
sti
mov
xchg
jg
int3
mov
mov
xchg
bound
out
call
dec
sub
imul
sub
std
pop
in
(bad)
repz
inc
fdivr
(bad)
(bad)
inc
retf
push
sti
sbb
sar
mov
je
fisubr
aas
or
icebp
(bad)
(bad)
(bad)
call
sub
dec
pop
data16
icebp
test
push
xchg
imul
icebp
cmps
mov
xchg
cli
(bad)
dec
cmps
clc
mov
xchg
push
cld
inc
into
lahf
or
dec
jecxz
sbb
aas
push
jecxz
jmp
mov
call
cwde
cmp
jmp
jmp
(bad)
call
jmp
pop
xor
or
ins
push
addr16
das
enter
icebp
(bad)
xlat
mov
(bad)
(bad)
call
push
ds
loope
mov
fdiv
leave
add
rcl
mov
scas
xchg
(bad)
lea
outs
(bad)
pushf
(bad)
(bad)
(bad)
jmp
dec
ins
cmp
ins
fs
das
dec
jo
and
iret
stos
inc
fist
xor
sbb
(bad)
(bad)
inc
mov
icebp
and
cwde
int3
add
mov
sbb
xor
and
push
mov
out
retf
mov
addr16
jmp
jmp
rdpmc
fcmovnu
ffreep
(bad)
dec
lea
adc
pop
leave
lock
retf
cld
pushf
fdivr
jmp
imul
add
ins
inc
hlt
ja
(bad)
(bad)
(bad)
(bad)
jl
or
add
mov
fcmovnb
or
js
inc
test
js
(bad)
xchg
dec
mov
push
cmp
inc
(bad)
js
in
lods
mov
in
and
cld
gs
(bad)
(bad)
(bad)
out
mov
test
test
pop
repnz
call
mov
fwait
js
mov
in
dec
inc
aam
(bad)
std
js
cmp
xor
pop
movs
data16
sub
fimul
(bad)
call
xor
sbb
imul
lds
stc
fldpi
(bad)
(bad)
call
inc
lock
xchg
rcl
dec
add
je
dec
fxch
outs
in
jecxz
ret
add
movs
adc
lahf
test
pop
jg
(bad)
inc
jne
ins
lock
jg
in
and
jb
lds
xchg
pop
cld
push
jg
push
mov
scas
mov
push
jnp
(bad)
(bad)
inc
push
jmp
in
add
scas
jno
sbb
inc
mov
mov
js
(bad)
(bad)
(bad)
dec
jle
cwde
or
bound
mov
push
adc
adc
scas
test
(bad)
(bad)
jmp
stos
mov
or
leave
xor
rcr
ror
mov
mov
inc
call
mov
hlt
push
mov
mov
iret
repz
jecxz
hlt
(bad)
call
push
sub
hlt
nop
adc
xchg
in
cmp
fcom
mov
js
fmul
dec
xchg
enter
lea
ret
xchg
jnp
std
scas
ret
jl
xor
xor
jb
enter
test
clc
jg
retf
(bad)
(bad)
(bad)
mov
jno
xor
jo
mov
inc
pop
jle
push
test
std
jg
mov
mov
jg
in
xor
iret
xor
jmp
repnz
cmps
mov
(bad)
movs
mov
int3
xor
and
(bad)
mov
sbb
cli
es
aad
sti
sbb
sti
pop
mov
jge
jns
cld
(bad)
push
ror
stc
mov
push
mov
sbb
sbb
retf
xchg
or
(bad)
(bad)
push
adc
cwde
xchg
sbb
dec
xchg
mov
mov
adc
xchg
int
(bad)
jmp
pop
mov
dec
fild
dec
mov
aad
mov
cld
sti
jmp
mov
add
aad
xchg
mov
(bad)
(bad)
push
iret
rcl
xor
jecxz
dec
dec
fidivr
inc
mov
add
jmp
call
xor
cmps
(bad)
push
mov
dec
mov
(bad)
(bad)
inc
or
mov
sbb
xor
leave
outs
xor
or
movs
sbb
or
cld
cmp
sbb
outs
out
hlt
jmp
or
fnstenv
pop
loopne
call
jnp
jns
or
das
pop
(bad)
push
cmc
repnz
jmp
sbb
shl
jge
loop
sbb
mov
test
lock
lds
gs
js
(bad)
cmps
add
mov
(bad)
aas
cld
pop
std
cmps
mov
xchg
inc
aas
lock
addr16
add
aam
ficomp
xchg
(bad)
sub
in
idiv
ret
addr16
(bad)
(bad)
mov
std
ins
call
dec
retf
pop
(bad)
lods
fld
push
mov
adc
cmp
(bad)
(bad)
call
inc
out
jmp
dec
xor
push
aad
xor
cwde
dec
rol
cld
(bad)
(bad)
jmp
sti
add
sub
mov
add
dec
fisttp
pop
jg
push
sub
sub
(bad)
jg
movs
dec
lods
add
xor
loop
loop
xor
mov
and
int3
icebp
jecxz
(bad)
call
and
(bad)
mov
pop
enter
(bad)
cmp
cs
sahf
inc
(bad)
jg
jmp
popf
add
inc
pop
retf
shl
mov
dec
and
(bad)
jmp
in
xchg
push
imul
not
add
repnz
hlt
(bad)
jg
mov
xor
fimul
leave
jle
push
push
sahf
outs
and
(bad)
cmp
call
sbb
vpaddsw
(bad)
(bad)
call
sub
arpl
sbb
aad
mov
scas
pop
fiadd
int
push
enter
test
aas
(bad)
(bad)
(bad)
jl
test
jbe
stos
pop
cdq
and
lods
and
cld
aaa
leave
mov
(bad)
(bad)
inc
shl
test
add
retf
sbb
xchg
xor
int
xor
(bad)
call
sahf
xchg
add
or
cmp
add
scas
and
clc
add
(bad)
(bad)
clc
lock
popa
loope
movs
gs
jmp
jae
icebp
dec
scas
or
and
fnstcw
mov
and
mov
pop
push
(bad)
jg
pushf
lahf
cmc
call
jae
aas
imul
nop
retf
js
add
xchg
icebp
cmps
test
aam
sbb
pop
jbe
push
sbb
test
add
mov
jo
out
jg
(bad)
repz
mov
adc
push
mov
out
(bad)
call
shr
dec
out
cmc
push
pushf
mov
cdq
xchg
and
imul
lds
call
and
push
or
sub
call
adc
pushf
aad
xlat
in
and
(bad)
(bad)
fnstsw
push
pop
bound
(bad)
dec
push
shl
(bad)
pop
push
add
and
xor
(bad)
mov
jmpw
mov
repz
mov
ficomp
out
sar
jmp
mov
ja
stc
ud0
(bad)
call
ins
fdivrp
dec
pop
inc
sbb
cmp
cmp
xor
xchg
leave
cmp
(bad)
inc
mov
push
adc
ds
call
add
cmps
ins
xor
jno
pop
(bad)
(bad)
call
cli
lods
xchg
sbb
jbe
in
dec
sbb
int
or
(bad)
jmp
(bad)
outs
(bad)
push
lods
jno
ds
lahf
inc
mov
daa
adc
(bad)
push
aaa
add
jg
xchg
xor
mov
inc
imul
in
jo
sub
lahf
(bad)
dec
cli
pushf
xchg
sub
outs
or
rol
jl
pop
xchg
(bad)
aas
cmp
xchg
jmp
jg
jmp
test
movs
dec
cmp
push
sbb
inc
cld
or
hlt
push
mov
push
push
sbb
mov
repz
xchg
dec
call
cmp
adc
(bad)
call
sbb
dec
dec
jmp
xor
add
push
mov
(bad)
(bad)
dec
call
jns
movs
sub
xchg
(bad)
mov
shl
cmp
les
jg
inc
jg
sbb
pop
cmp
ficomp
cli
cmps
je
push
dec
(bad)
(bad)
dec
xor
(bad)
in
xchg
add
adc
(bad)
mov
(bad)
(bad)
jmp
fwait
sbb
jo
push
mov
ja
mov
or
sbb
cmp
sub
fld
(bad)
(bad)
(bad)
inc
push
inc
arpl
and
es
les
pop
repz
sub
push
and
lods
(bad)
push
jmp
xchg
loope
mov
cli
push
pop
retf
mov
std
pop
les
(bad)
(bad)
(bad)
(bad)
jp
cld
dec
push
xor
addr16
sbb
sub
retf
pop
add
inc
xchg
or
retf
ja
cwd
cmp
gs
out
adc
(bad)
(bad)
dec
cmc
sub
xor
cwde
push
xchg
add
cmp
out
ja
xchg
cld
cdq
mov
ret
pop
retf
iret
xor
sub
(bad)
(bad)
(bad)
jmp
xchg
jg
in
in
and
mov
xchg
push
jne
sub
sahf
sar
out
jg
(bad)
call
jne
gs
sahf
out
dec
cwde
push
dec
or
mov
or
loope
(bad)
(bad)
inc
lods
or
pusha
(bad)
es
sbb
imul
(bad)
jg
test
psubb
ins
(bad)
lahf
jmp
sub
mov
imul
(bad)
(bad)
mov
imul
ss
mov
dec
sub
push
dec
xor
jne
cmp
lods
inc
jae
dec
mov
rol
std
lds
inc
and
fisttp
cmp
and
push
data16
pop
outs
clc
(bad)
(bad)
jmp
ss
xchg
enter
sub
cmps
push
pop
stc
inc
imul
pop
push
nop
seta
jmp
push
sub
(bad)
(bad)
(bad)
cmp
jge
nop
push
shl
cmp
lds
(bad)
push
dec
mov
add
and
(bad)
(bad)
jmp
cld
jg
mov
adc
gs
rcr
(bad)
pop
mov
mov
xchg
sub
jmp
retf
add
mov
popf
xchg
aaa
das
idiv
dec
sub
lock
cmc
cli
adc
push
out
xlat
retf
call
(bad)
jmp
sub
or
cmp
clc
mov
dec
jg
xor
cmp
jae
cwde
cmc
out
(bad)
(bad)
(bad)
(bad)
cmp
sbb
mov
call
je
(bad)
adc
fnsave
(bad)
(bad)
jmp
lods
add
pusha
fld
retf
jg
mov
dec
scas
ss
mov
(bad)
(bad)
call
adc
call
lahf
test
mov
mov
jmp
lods
ds
pop
mov
mov
add
mov
cdq
xchg
scas
dec
sbb
retf
adc
aad
(bad)
jmp
daa
aad
push
(bad)
hlt
sub
jns
cmp
out
adc
add
(bad)
(bad)
dec
imul
(bad)
sub
mov
xor
ror
push
push
mov
(bad)
(bad)
(bad)
jmp
and
jmp
jb
sub
scas
pop
sbb
mov
pop
in
pop
adc
mov
mov
das
sahf
(bad)
in
inc
loope
fistp
inc
(bad)
in
inc
dec
jae
inc
jp
sub
out
aas
push
xor
(bad)
fild
retf
repnz
pop
(bad)
dec
data16
(bad)
(bad)
(bad)
mov
imul
add
push
gs
inc
cmp
test
mov
and
sub
out
mov
xchg
cwde
fimul
fsubrp
adc
push
js
outs
cld
xchg
out
mov
ret
xchg
ficomp
cmp
pop
cmc
push
aas
aas
pop
sar
inc
retf
std
lahf
icebp
push
push
stc
(bad)
(bad)
fistp
lods
scas
lds
pop
cld
xchg
adc
call
sbb
sbb
sub
sar
(bad)
pop
push
xor
inc
xchg
cmp
pop
cmp
xor
(bad)
aas
daa
mov
fistp
sar
add
inc
ja
jno
xchg
mov
inc
icebp
(bad)
(bad)
(bad)
out
push
mov
adc
es
add
in
push
cmp
daa
xchg
das
fcmove
xor
(bad)
jmp
mov
popf
cmc
iret
ss
movs
repnz
push
popa
mov
cld
dec
mov
scas
jne
ins
dec
sbb
ins
mov
ins
push
cmc
mov
ss
or
(bad)
call
in
dec
push
xor
dec
imul
dec
pandn
imul
(bad)
call
std
inc
aam
in
movs
xchg
outs
ror
fistp
sbb
and
nop
or
das
icebp
fs
jp
mov
add
scas
(bad)
jmp
inc
push
push
fistp
scas
dec
retf
(bad)
(bad)
push
cwde
and
or
mov
mov
cld
(bad)
mov
mov
(bad)
lock
nop
sub
mov
arpl
push
add
sbb
pop
sub
push
inc
aad
jge
sub
stos
sub
stc
mov
jl
cli
ror
add
stos
or
(bad)
(bad)
fild
clc
jg
mov
xchg
jmp
stos
(bad)
(bad)
jmp
jle
aam
dec
sti
dec
mov
les
mov
xchg
jecxz
xchg
xor
xchg
mov
(bad)
inc
xchg
jo
cld
pop
sbb
mov
stc
add
mov
mov
push
stos
sbb
cmp
rcl
(bad)
jmp
mov
pop
lods
dec
cmps
dec
fld
pop
test
(bad)
mov
xchg
sub
pusha
mov
cwde
mov
out
(bad)
(bad)
jmp
enter
sub
and
mov
pop
mov
(bad)
ror
loop
(bad)
cmps
std
call
jmp
xlat
jmp
in
cli
je
sti
jg
cli
test
inc
call
pop
frstor
pop
jg
add
xchg
test
in
xchg
(bad)
(bad)
(bad)
(bad)
dec
pop
inc
sbb
test
ins
cwde
cs
add
repnz
add
repz
push
in
xchg
cld
mov
(bad)
mov
fist
sti
cmp
cmc
mov
jg
(bad)
cli
push
mov
scas
(bad)
repnz
pop
ins
inc
pop
mov
lahf
out
pop
mov
dec
ins
mov
out
xchg
aas
out
mov
stos
dec
mov
call
jmp
ins
cli
inc
push
mov
xlat
rcr
mov
stos
xchg
add
in
(bad)
(bad)
out
pop
shl
iret
daa
int
cmp
scas
stc
ret
hlt
xor
popa
xor
xchg
mov
(bad)
(bad)
(bad)
(bad)
jmp
mov
cmp
push
ret
les
scas
inc
or
aad
call
cli
(bad)
pop
xchg
inc
dec
mov
jns
pop
mov
jmp
jl
xor
jle
sbb
mov
fiadd
scas
cld
cld
push
clc
jmp
pop
in
mov
repnz
adc
ja
sbb
pop
cmp
or
mov
cmp
mov
(bad)
jno
jmp
das
out
mov
icebp
push
push
aad
jmp
inc
fstp
loope
(bad)
out
jle
fisub
mov
xlat
neg
scas
fwait
clc
cld
aaa
arpl
in
(bad)
jg
dec
pop
pop
in
cmp
jge
(bad)
repnz
sahf
(bad)
jmp
pop
leave
outs
retf
(bad)
(bad)
(bad)
(bad)
stc
lea
push
nop
clc
mov
lods
xor
outs
icebp
push
sbb
repz
fist
movs
ffree
das
dec
imul
loop
and
inc
pop
lds
outs
in
dec
cli
movs
std
dec
push
cli
arpl
lahf
hlt
ja
call
or
pop
jns
cld
stos
fbld
jg
jle
(bad)
(bad)
jg
fdivrp
pop
cld
pop
cmc
sub
aam
jp
loope
scas
push
lahf
(bad)
cmp
cli
mov
aas
mov
jp
xchg
mov
push
out
or
shl
inc
mov
or
cdq
ja
pop
das
not
jno
adc
mov
jne
(bad)
(bad)
(bad)
call
stos
repz
ds
jl
out
inc
pop
mov
call
(bad)
out
xor
adc
(bad)
(bad)
(bad)
jmp
and
test
sbb
xor
jp
xlat
retf
adc
jb
cmps
xchg
dec
xchg
jle
int
aas
idiv
pop
stc
sbb
cdq
add
mov
(bad)
jmp
dec
cmp
mov
dec
dec
xor
cld
movs
pusha
push
in
fild
sub
mov
bound
sub
in
std
jecxz
push
call
(bad)
(bad)
jmp
jae
repz
popa
movs
push
retf
push
outs
ret
adc
out
mov
cmc
call
jne
imul
lea
push
cdq
sbb
mov
test
sub
push
(bad)
(bad)
(bad)
jmp
inc
xchg
jns
shr
es
mov
mov
mov
(bad)
add
(bad)
dec
xchg
dec
lods
aas
jp
push
and
pop
loop
fwait
ja
add
imul
jg
shl
jb
pop
(bad)
neg
adc
fldcw
lods
loopne
loope
sbb
lods
gs
ins
pop
pop
xor
or
(bad)
(bad)
sub
inc
aam
gs
mov
lods
jl
ins
inc
pop
outs
mov
add
(bad)
(bad)
fcomip
xchg
dec
sahf
mov
je
es
ror
jb
stos
xor
dec
push
(bad)
(bad)
(bad)
jmp
adc
sbb
(bad)
int3
sub
bnd
fidiv
xchg
add
sbb
(bad)
out
(bad)
dec
outs
enter
and
jmp
mov
mov
mov
(bad)
(bad)
inc
pop
movs
dec
lds
hlt
std
mov
or
add
and
std
bound
xor
pop
(bad)
(bad)
(bad)
push
fnsave
push
cwde
(bad)
jbe
(bad)
push
retf
cmp
int
and
cmc
inc
(bad)
hlt
stos
mov
sti
mov
fwait
jne
cmp
lea
aas
dec
mov
mov
das
or
push
shl
jg
push
pop
mov
cmp
pop
(bad)
cld
push
aam
stc
out
jb
(bad)
(bad)
(bad)
call
shl
(bad)
mov
outs
xor
dec
or
push
fs
neg
xchg
ss
(bad)
push
icebp
stc
jne
cmp
jp
fmul
retf
into
repnz
inc
jno
and
mov
(bad)
push
dec
pop
mov
mov
cmp
ret
cld
dec
push
(bad)
inc
(bad)
repz
xchg
je
dec
out
lods
lods
out
xor
sub
lods
fidiv
(bad)
call
retf
icebp
aad
test
fnstcw
mov
xchg
adc
jbe
std
mov
cli
pushf
mov
loopne
pop
xchg
outs
cmp
push
addr16
(bad)
(bad)
(bad)
(bad)
mov
repnz
sbb
aam
add
xchg
mov
xchg
mov
(bad)
inc
dec
in
movs
call
xchg
sub
movs
lods
imul
aam
jg
add
(bad)
dec
ror
mov
aam
mov
or
mov
test
int3
push
xchg
inc
push
aas
icebp
dec
pop
xor
adc
aad
(bad)
or
(bad)
(bad)
out
(bad)
stc
mov
mov
data16
mov
xchg
shr
push
inc
gs
call
or
das
in
sub
(bad)
jmp
jmp
dec
rcr
cmp
xchg
fidivr
es
pop
cdq
daa
das
test
xchg
clc
(bad)
(bad)
(bad)
js
into
cld
test
mov
scas
aaa
sub
(bad)
sahf
hlt
cdq
arpl
pop
dec
xor
aas
inc
sub
cld
rcl
nop
aas
retf
lock
scas
dec
and
aam
dec
repz
push
dec
cmps
cmps
popf
(bad)
(bad)
(bad)
(bad)
mov
jae
fwait
lods
xor
pop
jecxz
mov
sbb
outs
mov
(bad)
sbb
dec
cmps
push
sub
xchg
hlt
fild
(bad)
(bad)
jmp
cld
(bad)
(bad)
jmp
arpl
or
(bad)
and
sub
inc
jno
fisub
out
loope
dec
jge
xor
mov
addr16
cmc
adc
pop
mov
dec
and
aam
push
(bad)
icebp
dec
xor
retf
retf
jmp
push
jmp
(bad)
push
aaa
push
stos
aaa
scas
sbb
push
push
test
cld
or
inc
cld
loope
jmp
xlat
push
fcomip
(bad)
push
shr
lods
enter
(bad)
fldenv
jl
xchg
pop
loopne
jo
ret
inc
fild
(bad)
fcom
rol
je
push
sbb
retf
xor
setbe
(bad)
(bad)
(bad)
(bad)
cmp
(bad)
shl
xor
imul
pop
jae
mov
pop
adc
pop
neg
sbb
(bad)
(bad)
(bad)
jmp
xchg
jno
add
dec
add
icebp
mov
out
sbb
sbb
(bad)
(bad)
(bad)
call
int3
idiv
pop
call
in
mov
push
push
adc
sub
(bad)
(bad)
(bad)
dec
sub
adc
retf
in
test
cmp
push
mov
(bad)
dec
mov
das
lea
repnz
(bad)
(bad)
jmp
les
pop
fdiv
mov
repnz
or
mov
and
push
xor
mov
dec
rol
mov
cmps
inc
imul
pop
stc
mov
(bad)
(bad)
(bad)
jmp
xor
xor
loopne
jae
push
lock
mov
bnd
and
(bad)
jg
mov
sub
loope
or
cmc
sub
and
(bad)
cli
(bad)
dec
in
xchg
sub
pop
gs
inc
repz
outs
daa
aad
dec
and
(bad)
jmp
aas
mov
jge
lock
jecxz
mov
mov
xchg
(bad)
out
jmp
inc
inc
jb
mov
(bad)
(bad)
aas
std
mov
les
mov
xchg
sbb
push
rol
sub
cmp
(bad)
(bad)
jmp
lahf
pop
bound
shl
loope
and
call
ins
adc
xor
(bad)
jmp
mov
or
sbb
or
sub
(bad)
jmp
fnstsw
push
ss
rol
pop
(bad)
mov
leave
push
pushw
adc
inc
cld
and
js
aaa
hlt
fstp
aam
xor
fsub
cmps
xchg
add
dec
pop
(bad)
inc
aaa
repnz
add
ror
push
mov
or
pop
(bad)
(bad)
call
repz
into
fistp
or
jnp
in
mov
scas
and
(bad)
jmp
(bad)
adc
mov
dec
out
fs
pop
clc
mov
or
inc
les
push
xor
stos
aaa
lahf
out
and
inc
add
jmp
aas
push
lods
cs
sub
clc
popf
mov
out
jbe
idiv
call
add
pop
xchg
ja
(bad)
xchg
(bad)
out
out
mov
gs
pushf
add
push
(bad)
(bad)
(bad)
call
mov
lods
or
dec
ret
loope
sub
dec
sahf
(bad)
adc
into
pop
sahf
ja
popf
cmc
or
(bad)
dec
test
mov
mov
pushw
jl
push
and
push
or
xchg
dec
sub
(bad)
(bad)
call
mov
jno
les
sub
movs
add
inc
arpl
inc
fcomp
cld
lahf
mov
(bad)
ds
pop
cdq
enter
or
sar
(bad)
(bad)
push
fld
lods
scas
pop
fwait
cmp
fld
sub
nop
lods
push
fild
std
ins
mov
jmp
or
sbb
aas
std
cmp
ret
ins
sub
(bad)
(bad)
jmp
ret
mov
repz
aaa
fmul
ret
cld
mov
cmps
inc
inc
add
ins
rcr
jo
or
stos
das
dec
pop
clc
movs
pusha
push
(bad)
mov
jmp
popf
sbb
arpl
mov
xchg
cmp
pop
or
outs
repz
(bad)
mov
fdiv
cmc
dec
xor
retf
fwait
pop
enter
fwait
push
shl
jnp
mov
dec
das
stos
stc
xchg
(bad)
(bad)
neg
sbb
xchg
jae
jno
sub
idiv
iret
ins
add
cmps
andnps
adc
movs
pop
xor
ficomp
loopne
fisub
and
es
dec
push
(bad)
(bad)
(bad)
jmp
test
pop
(bad)
icebp
jle
dec
push
cmp
sub
fs
add
enter
out
sbb
jmp
cli
inc
in
fs
(bad)
test
out
int3
add
pusha
xor
(bad)
jmp
mov
pop
mov
out
fstp
outs
sbb
inc
push
stos
(bad)
(bad)
(bad)
dec
adc
inc
pop
push
dec
sbb
pop
aas
int3
out
das
pop
stos
inc
jbe
xchg
cmp
leave
pop
ret
sbb
lea
rcl
mov
cmp
xor
daa
(bad)
js
(bad)
jg
pop
out
dec
daa
pushf
sbb
mov
lods
inc
ret
jnp
clc
adc
(bad)
jmp
das
ficomp
inc
add
popa
or
jb
test
jmp
and
mov
retf
jg
rcr
rcl
cmc
call
add
aam
je
xlat
push
fadd
(bad)
(bad)
(bad)
(bad)
aas
pop
ret
retf
dec
jno
mov
movs
pop
(bad)
shl
ja
inc
inc
dec
(bad)
(bad)
(bad)
jmp
test
push
(bad)
dec
repnz
push
cmp
xchg
hlt
ret
dec
dec
xor
test
ret
pop
out
(bad)
(bad)
(bad)
call
test
aad
adc
mov
aas
push
dec
outs
ins
mov
sub
sahf
fs
nop
cmp
sar
(bad)
jmp
sbb
push
aam
or
jns
mov
mov
dec
jp
inc
cli
aas
les
in
mov
(bad)
(bad)
(bad)
call
int
inc
jecxz
inc
dec
dec
mov
fiadd
inc
push
movs
(bad)
aas
shl
(bad)
(bad)
(bad)
call
and
add
sub
icebp
sub
pop
jle
sbb
mov
mov
(bad)
data16
std
(bad)
(bad)
in
pop
inc
cdq
je
adc
call
pop
xorps
xor
sub
(bad)
inc
rol
mov
add
ds
(bad)
(bad)
(bad)
dec
into
mov
lock
push
test
mov
rol
(bad)
ins
jnp
jb
lahf
add
loope
cmp
scas
ins
gs
(bad)
(bad)
dec
rcl
movs
mov
sar
jne
xor
mov
jecxz
ins
xor
(bad)
int
je
retf
inc
je
or
(bad)
(bad)
jmp
js
rcl
cmps
and
pop
fisub
(bad)
icebp
imul
xor
xchg
sar
jmp
jl
cmps
xor
ret
mov
mov
cmp
retf
push
movs
mov
test
out
sub
loope
cmp
xchg
pop
mov
ds
(bad)
(bad)
dec
test
xlat
and
mov
imul
aas
fcomp
jmp
loop
mov
(bad)
lock
mov
leave
sbb
fistp
(bad)
(bad)
(bad)
call
ret
(bad)
dec
sbb
shr
or
jo
sub
sbb
(bad)
jmp
push
stc
rcl
(bad)
cmp
in
js
rol
dec
xor
aam
ins
int3
lods
pushf
(bad)
jg
inc
push
scas
mov
xchg
push
jae
sbb
nop
or
or
(bad)
(bad)
(bad)
jg
cld
lods
mov
mov
stc
scas
rcr
push
mov
arpl
inc
jmp
jg
inc
(bad)
(bad)
cld
fldcw
and
std
fisub
icebp
and
xchg
(bad)
(bad)
jmp
shl
test
mov
jae
fstp
in
rol
(bad)
jmp
sbb
push
xchg
out
xchg
pusha
popf
call
pop
fcmovnb
or
movs
sub
jb
(bad)
(bad)
call
bound
stos
repnz
in
in
jne
xor
dec
lods
mov
cmp
dec
jo
(bad)
(bad)
dec
mov
lea
(bad)
les
sub
xor
cdq
adc
stos
and
(bad)
(bad)
(bad)
push
add
inc
aaa
icebp
rcl
aam
rcr
lea
es
inc
retf
(bad)
(bad)
jmp
and
movs
shl
or
je
push
arpl
(bad)
(bad)
inc
push
adc
pop
gs
into
imul
hlt
and
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
cwde
nop
cwde
stc
sub
cmp
cdq
lods
mov
mov
cld
(bad)
(bad)
(bad)
out
adc
pop
xor
xchg
cmp
stos
fwait
cwde
aas
xor
cs
mov
cmp
or
(bad)
(bad)
(bad)
call
add
sti
mov
or
jg
mov
outs
jne
fisubr
sbb
mov
aas
sbb
(bad)
frstor
jl
jp
push
(bad)
and
xor
out
jge
out
icebp
mov
cmc
fwait
sti
imul
mov
retf
jle
(bad)
fistp
mov
stc
int3
xor
add
shrd
inc
mov
ret
push
(bad)
(bad)
(bad)
jmp
hlt
mov
mov
and
inc
mov
pop
mov
xor
mov
jno
popf
dec
ds
adc
outs
aad
xchg
pop
inc
mov
(bad)
leave
xchg
push
enter
dec
xor
and
push
loope
jmp
icebp
sahf
out
or
xlat
loope
add
aam
sub
pop
push
and
cld
(bad)
(bad)
push
mul
jl
xchg
jmp
jae
test
cli
int
ret
test
inc
cmp
(bad)
jmp
pop
(bad)
(bad)
(bad)
(bad)
stc
mov
ret
inc
loope
scas
adc
push
inc
push
xor
xor
xchg
cmps
in
(bad)
(bad)
jmp
aas
loope
out
ds
xchg
inc
test
pop
call
and
jmp
lahf
jne
push
ret
idiv
xchg
push
sub
scas
cld
inc
pop
mov
not
and
icebp
xchg
jge
push
jae
(bad)
xor
dec
jle
test
jmp
stc
(bad)
out
shr
aad
(bad)
pop
add
ret
lahf
test
jno
lahf
xchg
bnd
imul
(bad)
(bad)
inc
mov
test
mov
scas
cs
mov
mov
xor
add
shl
popa
arpl
icebp
inc
or
fcmove
(bad)
(bad)
imul
es
cmp
in
and
pushf
jae
or
arpl
movs
daa
imul
add
and
js
push
push
test
pop
dec
ins
imul
out
dec
bound
cmp
movs
aad
mov
mov
or
jb
mov
dec
ret
dec
fstp
add
mov
in
push
aaa
mov
push
ins
sub
or
inc
aam
or
push
mov
jge
fst
adc
adc
sbb
mov
mov
dec
sub
(bad)
sbb
(bad)
jp
data16
popa
fs
fadd
and
sbb
cmp
popf
sbb
jge
or
bound
ja
inc
mov
lea
jb
or
ret
lock
jb
inc
ret
inc
mov
sub
and
pop
sub
sbb
add
add
pop
in
pushf
pop
mov
aaa
pop
cwde
nop
call
stos
push
mov
mov
jg
and
cmp
xchg
xor
dec
push
test
shl
push
in
or
adc
popa
pop
xor
mov
cmps
(bad)
shl
and
cmps
or
inc
mov
shr
cmp
inc
addr16
mov
or
sub
pop
sbb
shr
fwait
pop
add
rol
popf
ss
adc
pop
dec
xchg
push
adc
(bad)
sbb
pop
push
pushf
shl
inc
leave
je
outs
cld
es
(bad)
fsub
cmp
xchg
xchg
push
xor
add
sub
rcl
aad
fs
mov
sbb
or
add
mov
dec
jnp
sbb
inc
cmps
inc
jl
jecxz
movs
imul
pop
or
(bad)
cs
add
xor
sub
mov
add
cmc
mov
mov
js
xor
les
rcr
dec
test
pop
push
dec
add
jecxz
loop
xor
add
sbb
popa
mov
popf
fwait
or
inc
icebp
mov
mov
(bad)
fild
mov
nop
xchg
or
ins
adc
hlt
(bad)
jl
fs
add
mov
lods
daa
inc
xor
adc
cmp
and
test
dec
or
(bad)
std
fs
push
sub
stos
add
add
dec
inc
int
test
shl
and
inc
pusha
add
push
icebp
mov
add
les
mov
mov
xor
xchg
push
movs
pop
mov
test
xor
adc
xchg
adc
add
adc
dec
add
pop
mov
jno
pop
or
ret
cmp
jbe
mov
adc
lods
es
cmps
fisttp
push
lahf
popf
rcr
add
push
sub
add
or
loope
stos
or
ror
mov
ror
sbb
mov
fbstp
dec
and
mov
xchg
sub
push
mov
inc
push
inc
cwde
cmp
add
rcl
xor
ja
or
test
pop
pushf
xor
sbb
add
das
pop
mov
imul
pop
mov
sbb
xchg
xor
dec
adc
bound
test
adc
adc
xchg
sub
outs
or
ja
add
push
or
mov
das
fdiv
inc
mov
cmp
rcl
jo
inc
mov
cdq
leave
pop
lea
xlat
cmps
and
inc
mov
sbb
inc
ror
cmp
or
add
es
mov
dec
mov
ror
inc
iret
fs
xor
xor
aas
jb
fld
ds
pop
ss
cmp
ficom
loope
mov
out
xchg
and
add
sub
pop
inc
leave
add
ss
daa
or
ins
add
in
add
or
or
add
adc
enter
or
sub
call
or
adc
and
ror
and
add
add
add
add
xor
sbb
rol
out
scas
cmps
push
ins
gs
shl
test
inc
and
movs
in
inc
arpl
ins
jo
adc
or
fild
adc
je
dec
popa
out
and
add
sub
je
test
hlt
sbb
mov
ins
mov
fnstsw
jmp
sbb
push
adc
or
ss
gs
xchg
adc
test
and
add
inc
loop
mov
aad
daa
inc
and
jb
fadd
mov
icebp
sbb
sti
push
pop
mov
imul
les
mov
and
and
inc
fmul
in
call
int3
sub
sete
add
mov
add
push
fisub
xchg
or
mov
adc
xor
mov
outs
ins
les
retf
mov
push
mov
sbb
jo
dec
imul
xor
dec
inc
arpl
xchg
ss
and
cmp
inc
call
test
inc
lods
stos
fisubr
arpl
sbb
mov
mov
and
jo
cwde
shl
mov
add
jmp
and
loopne
sbb
ins
mov
pop
xor
xor
jbe
and
mov
fwait
push
daa
dec
sub
pop
or
adc
add
push
imul
sbb
sbb
inc
lods
daa
mov
pop
mov
imul
sub
sbb
and
fwait
or
or
lods
push
jmp
data16
sub
ins
outs
mov
inc
ja
inc
pop
(bad)
lds
inc
gs
mov
add
fsub
inc
daa
and
lods
sbb
adc
mov
nop
les
mov
inc
cs
jns
and
mov
fsub
adc
mov
xchg
bound
cmc
sbb
xor
cmp
or
inc
dec
xchg
stos
push
ret
xor
push
inc
and
stos
nop
icebp
nop
cmp
outs
shr
add
and
scas
aam
pop
or
inc
sub
mov
icebp
sbb
push
pop
sbb
push
sbb
inc
sbb
loopne
pop
add
and
sub
pop
ret
sbb
inc
aas
and
das
inc
cdq
mov
or
push
ins
jae
cmp
mov
lods
stos
add
popa
adc
push
movs
sbb
or
repz
push
rcl
sub
pop
push
loope
int
not
push
inc
sbb
inc
adc
adc
fadd
push
and
add
loopne
inc
and
cdq
inc
dec
repz
dec
and
xchg
xchg
fxch
push
outs
push
inc
push
cs
cs
fcom
push
je
ja
fnsave
xchg
sub
push
mov
stc
in
inc
pushf
leave
addr16
jno
adc
xor
jecxz
sub
xor
and
sbb
xchg
fnstenv
pop
jae
push
sbb
jge
adc
fiadd
push
dec
aas
sub
mov
loope
push
and
or
push
mov
stos
sub
push
push
sub
xor
jge
or
ins
dec
test
arpl
mov
fcmovb
adc
inc
fcomp
adc
pop
add
sbb
adc
cmp
ss
loope
in
adc
inc
ret
push
enter
push
adc
mov
xchg
outs
sbb
gs
sub
imul
add
inc
lods
push
dec
pop
daa
add
ror
sub
cs
adc
pop
sbb
mov
popf
ja
and
push
mov
add
mov
or
xchg
sbb
mov
ins
daa
mov
pop
xor
ins
and
sti
and
fstp
pop
nop
adc
xor
or
sbb
rol
push
(bad)
fsubr
inc
ins
xor
dec
jb
and
pop
dec
xor
mov
retf
jp
pop
xor
hlt
dec
xor
mov
and
pop
idiv
sbb
(bad)
push
dec
push
xor
not
scas
inc
daa
dec
pop
movs
push
out
rcr
ss
sub
test
jecxz
xchg
enter
out
xor
adc
retf
sbb
push
adc
xchg
inc
inc
nop
inc
loopne
fld
pop
(bad)
sub
adc
ret
sbb
mov
adc
pop
fmul
sbb
mov
add
(bad)
xor
xchg
stc
mov
add
and
push
push
mov
xor
pop
or
mov
aaa
jnp
pop
movs
dec
sub
test
push
sub
inc
loope
jge
push
test
sbb
dec
xchg
shl
cwde
adc
jbe
mov
test
dec
fstp
inc
sbb
ins
mov
cmp
sub
or
inc
sbb
lods
xor
and
test
inc
and
sub
out
inc
outs
cmp
ins
fidivr
pop
inc
cmp
or
pusha
push
sbb
xchg
jbe
mov
out
or
sbb
and
jbe
or
(bad)
lea
pop
ins
dec
xor
sub
sbb
test
dec
and
movs
sub
push
dec
retw
sub
imul
cmp
stos
imul
push
je
pusha
mov
push
fsub
jnp
mov
nop
sub
outs
jo
call
loope
sub
dec
es
in
dec
test
scas
jo
popf
inc
cmp
mov
adc
push
dec
outs
dec
mov
dec
test
popf
push
(bad)
hlt
and
and
or
inc
mov
jle
pop
dec
pusha
adc
int
add
sub
xchg
xchg
or
sar
inc
xor
pop
enter
mov
inc
stos
stos
cdq
sbb
scas
push
icebp
mov
xor
or
push
stc
scas
test
jne
sub
mov
sub
sub
add
lods
loope
cs
push
nop
ins
pop
and
dec
or
rcl
sub
mov
sbb
dec
stos
pop
inc
jb
(bad)
imul
mov
aaa
sbb
xchg
inc
inc
inc
mov
jmp
jae
js
das
sbb
cmp
push
lahf
and
and
add
dec
jmp
popf
add
mov
xor
dec
popa
ja
ss
sbb
(bad)
adc
pop
mov
sub
loop
jo
or
bound
add
sbb
(bad)
dec
sbb
cs
pop
sbb
ficom
push
and
repz
scas
xchg
addr16
dec
xchg
or
(bad)
ret
and
bound
or
ror
xor
and
mov
push
and
jns
mov
adc
adc
xor
xchg
movs
and
(bad)
bound
or
test
jbe
adc
lds
jae
adc
(bad)
es
mov
gs
sbb
jl
les
int
mov
in
mov
fsub
mov
bound
push
inc
or
and
add
pop
aas
pop
lods
adc
sbb
movs
daa
adc
add
mov
or
sub
dec
imul
or
jbe
call
ss
pop
inc
and
imul
jb
std
sub
mov
cmp
imul
and
add
xchg
pop
inc
outs
sub
jb
push
sbb
nop
or
push
sbb
ins
xchg
cdq
xchg
cmc
in
sub
mov
in
shl
adc
mov
mov
jecxz
ss
ins
xor
pop
add
icebp
cwde
aas
sar
ret
or
push
and
retf
es
jne
and
sbb
imul
and
pop
mov
or
and
sub
dec
cmp
sbb
xchg
rcl
mov
and
mov
lock
scas
inc
test
push
mov
sub
push
sub
pop
sub
or
test
dec
popa
(bad)
jae
leave
adc
dec
imul
(bad)
fisub
xor
mov
sbb
jb
add
je
sbb
pop
shl
or
daa
ins
arpl
xor
pop
push
pop
hlt
(bad)
(bad)
(bad)
rcr
pusha
ror
inc
and
data16
jae
hlt
push
imul
xor
outs
in
xchg
mov
ficom
pop
mov
repz
inc
pop
test
in
xor
sbb
lahf
push
arpl
sbb
inc
movs
and
sbb
pop
and
jne
push
xor
pop
add
inc
inc
pop
test
push
sbb
es
sub
test
ins
sbb
rol
inc
dec
xchg
adc
fsub
inc
sbb
mov
retf
xor
sub
mov
cmps
mov
aas
xchg
xchg
pop
fisubr
and
cwde
(bad)
mov
and
test
adc
int
sub
ins
in
pusha
sbb
or
sbb
shl
pusha
xchg
mov
lods
and
test
cmp
xchg
inc
inc
mov
or
cmp
add
jno
adc
out
jno
mov
and
je
jns
push
shr
sbb
or
scas
shl
sbb
(bad)
mov
mov
inc
and
(bad)
arpl
xchg
fucom
ficom
mov
sub
adc
jnp
(bad)
loopne
lods
add
sub
mov
mov
pop
sub
dec
mov
inc
xchg
dec
inc
dec
adc
sbb
inc
and
stc
outs
ins
or
and
lods
sar
ins
jmp
fiadd
and
add
shl
pop
ins
call
push
test
and
xor
sbb
mov
jo
lock
or
(bad)
sbb
inc
xchg
inc
retf
jbe
add
add
jo
(bad)
push
test
test
cmp
push
(bad)
xor
loopne
cli
and
cmp
jge
pop
push
jge
push
mov
adc
popa
adc
sub
mov
int3
sub
pop
and
push
pusha
and
fwait
pusha
lock
lahf
and
xchg
loopne
shl
sbb
mov
cmps
(bad)
push
push
fs
ins
and
push
inc
pop
dec
add
add
pop
inc
sub
push
fwait
ret
loopne
pop
mov
add
inc
pop
push
mov
adc
jecxz
inc
xchg
sbb
mov
not
pop
push
inc
push
jle
neg
or
push
xor
push
xor
jl
mov
jge
or
mov
mov
sbb
retf
pop
das
sub
cmp
(bad)
add
and
pusha
mov
es
sub
or
inc
pop
imul
adc
push
cmp
rol
pop
cs
add
lock
jbe
dec
xor
push
nop
popa
rcl
lahf
push
pop
dec
retf
dec
sbb
dec
add
push
dec
gs
add
ins
dec
jae
dec
push
xor
push
daa
jb
dec
xor
clc
jnp
nop
jp
icebp
xor
add
xchg
inc
add
add
add
add
add
inc
xchg
inc
adc
ins
cmp
out
or
jmp
nop
nop
nop
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jb
dec
add
jne
mov
sub
adc
adc
jmp
xor
sub
jb
shl
mov
inc
xor
je
sar
mov
jmp
add
jne
mov
sub
adc
adc
add
jne
mov
sub
adc
adc
jne
inc
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
nop
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmp
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
popa
jmp
cwde
pop
push
add
push
push
