sub
mov
pushw
mov
data16
push
jmpw
imul
dec
jmp
xor
push
dec
ror
test
or
cmp
push
iretw
mov
cmp
push
sar
fs
dec
lods
or
imul
test
pop
ret
in
pushf
or
data16
test
mov
aas
push
repz
imul
sbb
and
adc
data16
data16
mov
sbb
data16
fs
mov
repz
data16
adc
push
pcmpgtd
adc
inc
push
xchg
call
add
adc
mov
push
sbb
adc
fwait
or
mov
retfw
mov
or
adc
or
mov
or
mov
push
adc
or
data16
cmp
inc
jle
cmp
xchg
jb
or
push
data16
push
data16
or
pop
cmp
push
push
jne
push
push
push
sbb
or
pop
ror
data16
or
data16
jecxz
scas
pushf
or
mov
mov
xor
push
pushw
popa
push
data16
push
data16
test
sub
push
data16
in
data16
add
inc
push
add
call
outs
adc
mov
adc
jne
data16
push
lea
data16
pusha
push
enterw
ins
jecxz
data16
adc
mov
mov
data16
data16
push
data16
call
add
add
add
add
add
inc
pop
add
add
dec
add
dec
add
dec
add
outs
dec
add
add
add
dec
add
add
add
outs
dec
add
add
add
or
xchg
je
add
add
add
add
add
or
jbe
dec
add
add
add
dec
add
add
add
add
jle
add
add
add
dec
add
add
add
add
or
add
add
add
add
dec
add
mov
add
add
sbb
add
add
dec
add
mov
add
add
std
mov
add
or
hlt
lea
add
xchg
dec
add
add
add
xchg
dec
add
add
add
xchg
dec
add
dec
add
xchg
dec
add
add
xor
dec
add
add
add
or
pushf
xchg
dec
add
add
add
xchg
dec
add
xchg
dec
add
xchg
dec
add
add
add
dec
add
dec
add
dec
add
lahf
dec
add
add
add
lahf
dec
add
mov
add
retf
mov
or
nop
movs
dec
add
add
add
add
add
dec
add
add
add
dec
add
stos
dec
add
add
add
stos
dec
add
mov
add
add
add
mov
add
mov
add
add
add
or
inc
mov
add
add
add
dec
add
mov
add
add
add
mov
add
mov
add
(bad)
mov
or
je
dec
add
add
add
dec
add
ret
dec
add
add
add
dec
add
les
add
add
sti
les
add
leave
dec
add
add
add
leave
dec
add
add
add
int
add
add
add
ror
add
add
xlat
ror
add
aad
add
add
add
add
add
dec
add
add
add
dec
add
loop
add
add
add
loop
add
in
add
add
add
add
add
add
add
add
add
dec
add
add
add
add
repnz
add
add
add
repnz
add
repz
add
add
add
add
add
dec
add
add
add
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
dec
add
add
add
or
add
add
adc
add
add
adc
add
add
add
stos
adc
add
add
dec
add
add
add
dec
add
sbb
add
add
add
sbb
add
and
add
add
and
add
add
and
add
dec
add
and
add
add
add
daa
dec
add
daa
dec
add
das
dec
add
add
add
dec
add
xor
add
add
xor
add
add
add
add
add
add
add
add
add
dec
add
inc
dec
add
add
add
inc
dec
add
inc
dec
add
add
add
inc
dec
add
dec
dec
add
add
add
dec
add
dec
dec
add
add
add
dec
dec
add
push
dec
add
add
add
push
dec
add
pop
dec
add
add
add
pop
dec
add
pop
dec
add
add
add
add
add
dec
add
add
add
dec
add
dec
add
add
add
dec
add
ins
dec
add
add
add
add
add
jne
add
add
add
jne
add
jbe
add
add
add
jbe
add
jle
add
add
add
add
add
add
add
add
dec
add
xchg
add
add
xchg
add
add
add
stos
mov
add
add
dec
add
add
add
dec
add
xchg
dec
add
add
add
xchg
dec
add
call
mov
add
add
add
add
add
dec
add
movs
dec
add
add
add
movs
dec
add
add
add
dec
add
movs
dec
add
add
add
test
add
test
dec
add
scas
dec
add
add
add
scas
dec
add
scas
dec
add
add
add
scas
dec
add
mov
add
add
add
mov
add
mov
add
add
add
mov
add
mov
add
adc
add
mov
add
in
dec
add
ror
add
add
dec
add
(bad)
dec
add
add
add
(bad)
dec
add
enter
add
add
enter
add
add
dec
add
add
add
into
dec
add
iret
dec
add
add
add
add
add
aam
add
add
add
aad
add
(bad)
dec
add
add
add
add
add
fisttp
add
add
fisttp
add
add
add
fisttp
add
add
loop
add
add
add
loop
add
out
add
add
add
call
or
pop
jmp
dec
add
dec
add
add
add
in
dec
add
in
dec
add
in
dec
add
icebp
dec
add
add
add
icebp
dec
add
repnz
add
add
add
repnz
add
test
add
(bad)
dec
add
clc
dec
add
add
add
add
add
add
add
add
add
dec
add
add
add
add
add
add
add
pop
add
add
add
add
dec
add
or
hlt
push
dec
add
add
add
push
dec
add
or
add
add
or
add
add
push
dec
add
add
add
push
dec
add
add
add
dec
add
adc
pop
add
add
adc
out
adc
in
dec
add
sbb
add
add
or
dec
add
sbb
add
add
mov
add
add
and
add
add
sti
and
add
and
add
add
stos
and
add
sub
add
add
jmp
dec
add
sub
add
add
les
dec
add
xor
add
add
(bad)
dec
add
ss
add
add
add
ss
add
cmp
add
add
stos
cmp
add
ds
add
add
add
ds
add
inc
dec
add
add
add
add
add
inc
dec
add
add
add
inc
dec
add
dec
dec
add
add
add
add
add
dec
dec
add
add
add
dec
dec
add
push
dec
add
add
add
dec
add
push
dec
add
add
add
add
add
pop
dec
add
add
add
pop
dec
add
add
add
pop
dec
add
dec
add
pop
dec
add
add
add
popa
dec
add
popa
dec
add
bound
add
add
movs
bound
add
arpl
add
add
fbld
add
add
add
dec
add
add
add
add
add
dec
add
push
add
inc
push
or
retf
push
add
shr
add
imul
add
add
imul
add
add
imul
add
add
add
add
ins
dec
add
outs
dec
add
add
add
outs
dec
add
add
add
add
add
jb
add
add
add
jb
add
add
add
dec
add
jbe
add
add
add
jbe
add
add
add
jbe
add
add
add
jbe
add
add
add
dec
add
add
add
dec
add
add
add
jp
add
add
add
add
add
jnp
add
add
add
add
add
add
or
adc
add
add
add
jg
add
add
add
or
and
dec
add
add
add
or
add
add
add
aas
add
add
add
and
add
add
test
add
add
test
add
or
inc
test
add
or
iret
test
adc
mov
add
add
jno
dec
add
add
add
add
add
add
add
add
add
add
mov
add
add
inc
mov
add
mov
add
add
cdq
mov
or
mov
add
add
push
mov
pop
add
add
lea
xchg
lea
add
(bad)
dec
add
add
add
dec
add
add
add
nop
dec
add
add
add
dec
add
xchg
dec
add
add
add
or
and
or
pop
xchg
dec
add
add
add
dec
add
add
add
xchg
dec
add
xchg
dec
add
add
add
xchg
dec
add
add
add
add
add
cdq
dec
add
add
add
dec
add
add
add
add
add
fwait
dec
add
add
add
fwait
dec
add
add
add
dec
add
add
add
popf
dec
add
add
add
dec
add
lahf
dec
add
add
add
add
add
mov
or
sahf
mov
or
cmp
or
cmps
mov
or
cmp
add
add
add
and
dec
add
add
add
add
add
add
add
scas
dec
add
sbb
add
add
add
add
add
pop
scas
dec
add
add
add
inc
inc
add
cmp
add
inc
push
add
add
add
repz
dec
add
add
test
adc
add
add
test
dec
add
dec
add
inc
add
add
add
add
add
add
add
add
add
add
add
dec
add
add
add
add
add
dec
add
add
add
add
test
add
add
add
mov
add
add
loopne
inc
add
add
add
outs
inc
add
add
add
add
scas
or
add
add
push
add
add
add
xchg
adc
dec
add
add
(bad)
sbb
add
enter
add
add
add
pop
xor
add
add
fld
add
add
add
add
cli
dec
dec
add
dec
dec
add
add
add
add
(bad)
pop
dec
add
add
add
inc
add
add
add
dec
add
dec
add
add
dec
dec
add
push
dec
add
push
dec
add
dec
add
push
dec
add
push
dec
add
push
dec
add
dec
add
dec
add
add
push
dec
add
push
dec
add
dec
add
dec
add
dec
add
dec
add
push
dec
add
push
dec
add
push
dec
add
push
dec
add
push
dec
add
push
dec
add
push
dec
add
dec
add
add
dec
add
dec
add
dec
add
dec
add
dec
add
dec
add
pop
dec
add
add
inc
add
add
add
jo
add
add
add
jg
add
add
add
add
movs
pop
dec
add
add
add
add
add
pusha
dec
add
popa
dec
add
pusha
dec
add
pop
inc
add
add
add
add
add
add
add
pusha
dec
add
add
add
add
add
bound
add
or
mov
add
add
gs
add
add
add
gs
add
add
add
add
add
add
add
add
add
pop
inc
add
add
add
add
add
add
add
push
add
add
add
add
add
ins
dec
add
add
add
add
add
outs
dec
add
add
add
add
add
dec
add
add
add
add
add
jae
add
add
add
add
add
dec
add
add
add
jne
add
add
add
dec
add
jle
add
add
add
jle
add
add
add
and
sbb
add
in
dec
add
jbe
add
ja
add
dec
add
dec
add
js
add
js
add
js
add
dec
add
jp
add
jp
add
jp
add
jnp
add
dec
add
dec
add
jnp
add
jl
add
jge
add
add
add
add
inc
xchg
dec
add
dec
add
dec
add
add
add
add
add
jle
add
jle
add
or
or
or
or
mov
or
or
test
test
int3
xchg
push
mov
lahf
mov
cmp
dec
add
dec
add
mov
mov
dec
add
mov
in
mov
test
dec
add
xchg
dec
add
xchg
dec
add
xchg
dec
add
xchg
dec
add
xchg
dec
add
xchg
dec
add
xchg
dec
add
xchg
dec
add
dec
add
xchg
dec
add
add
add
xchg
dec
add
add
add
dec
add
add
dec
add
add
add
dec
add
add
add
mov
add
in
dec
add
add
pop
ror
add
add
scas
loop
add
add
mov
dec
add
add
sti
hlt
dec
add
add
add
add
add
dec
add
add
pop
add
add
add
inc
dec
add
add
add
add
add
stos
add
or
xchg
or
add
popf
or
or
inc
cmovg
add
add
dec
cmovg
add
pop
dec
add
add
add
add
add
sbb
add
add
jmp
dec
add
and
add
add
frstor
dec
add
and
add
add
mov
dec
add
sub
add
add
jge
dec
add
sub
add
add
add
sub
add
xor
add
add
add
add
add
xor
add
retf
xor
or
mov
dec
add
add
add
add
add
add
add
add
add
dec
add
add
add
dec
add
push
dec
add
add
add
add
add
pop
dec
add
add
add
pop
dec
add
pop
dec
add
add
add
pop
dec
add
gs
add
add
add
add
add
dec
add
add
add
dec
add
add
add
outs
dec
add
outs
dec
add
outs
dec
add
add
add
add
add
dec
add
add
add
add
add
add
jb
add
jae
add
jb
add
inc
add
add
add
add
add
add
add
add
add
add
add
add
jbe
add
ja
add
ja
add
add
add
add
pop
js
add
dec
add
and
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
add
push
call
add
dec
add
add
add
add
add
add
add
arpl
fwait
jns
mov
out
xor
add
add
add
add
add
inc
inc
cmp
arpl
jb
push
arpl
and
jae
add
ja
ins
imul
add
add
add
add
add
add
add
add
test
mov
jecxz
lea
out
test
add
mov
add
add
add
add
gs
and
jne
add
jae
arpl
je
jbe
jne
je
outs
jae
dec
add
gs
cmp
sbb
dec
mov
dec
movs
cdq
call
mov
lock
mov
not
add
mov
inc
ja
pop
xchg
nop
add
outs
movs
fwait
inc
mov
inc
mov
cmp
xor
or
stos
add
xchg
popf
dec
add
shr
add
add
add
ins
dec
popa
imul
push
push
bound
imul
popa
arpl
sub
outs
and
outs
jne
add
add
add
add
inc
add
and
add
ins
je
add
sub
add
fdivr
loopne
adc
dec
inc
add
add
add
sub
add
fild
inc
add
add
add
add
add
add
add
add
or
pop
push
or
or
or
or
or
push
adc
or
adc
adc
adc
pop
sbb
adc
adc
inc
add
add
add
add
or
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
inc
add
or
loopne
add
and
add
add
adc
inc
add
add
add
add
add
add
or
inc
add
add
add
add
add
jge
add
add
add
push
adc
pop
and
xor
inc
mov
adc
xor
or
push
pop
sbb
sbb
sub
cmp
inc
inc
inc
dec
dec
dec
push
push
push
push
push
pop
pop
pop
arpl
addr16
jne
ja
jns
add
xchg
xchg
xchg
xchg
xchg
xchg
cwde
cdq
call
test
stos
mov
mov
mov
mov
(bad)
(bad)
enter
rcl
aad
xlat
fcomp
(bad)
loop
in
out
call
repz
cmc
div
clc
stc
cli
inc
add
add
add
add
add
add
add
add
add
add
add
add
or
inc
add
add
add
add
add
add
add
add
and
push
adc
pop
popa
jno
and
or
mov
or
xor
adc
push
and
loope
icebp
pop
sbb
sbb
daa
sub
sub
cmp
inc
inc
inc
dec
dec
dec
push
push
push
push
push
pop
pop
pop
arpl
addr16
jne
ja
jns
add
mov
xchg
xchg
cwde
cdq
call
test
stos
mov
mov
mov
mov
(bad)
(bad)
enter
rcl
aad
xlat
fcomp
(bad)
jecxz
in
out
jmp
cmc
div
clc
stc
cli
(bad)
fiadd
or
add
add
add
add
add
and
mov
aas
clc
call
repz
mov
scas
or
jle
clc
out
mov
cld
xchg
cli
psubd
jmp
(bad)
ja
adc
(bad)
mov
dec
jle
js
(bad)
stc
or
cld
dec
jl
test
mov
dec
pop
jne
in
jno
xor
add
cli
fs
dec
mov
jg
sbb
clc
(bad)
mov
sbb
stos
out
inc
sub
add
xchg
inc
add
stc
pop
dec
inc
ret
xlat
std
add
inc
ins
movs
inc
loop
aas
loope
clc
imul
jg
xor
(bad)
sbb
cdq
inc
adc
lea
inc
sar
in
sti
inc
repz
dec
mov
or
in
xor
sub
mov
inc
loop
inc
test
pop
imul
dec
(bad)
es
iret
ret
inc
hlt
sbb
mov
mov
inc
int3
outs
dec
aas
div
pop
clc
(bad)
pop
jmp
jge
add
inc
add
xchg
inc
iret
out
add
inc
loope
clc
arpl
inc
adc
sub
pop
sbb
imul
adc
xor
sbb
add
mov
sub
loop
popa
xlat
(bad)
jle
cld
push
sbb
add
or
repnz
sub
sub
inc
add
add
xlat
lock
std
add
cld
dec
inc
daa
(bad)
mov
or
call
cmps
lods
bound
in
(bad)
stos
fdivr
inc
nop
aas
cld
dec
ins
mov
jg
daa
clc
aam
scas
jl
inc
inc
stos
inc
add
test
inc
in
inc
shl
(bad)
lock
xchg
push
add
add
or
clc
call
lods
das
std
stc
xchg
inc
mov
and
jg
daa
inc
jg
cld
push
(bad)
and
push
push
add
sub
out
aas
popf
das
cmc
iret
mov
sbb
clc
add
add
and
jg
inc
lahf
iret
inc
add
add
loop
jb
sbb
scas
push
jg
xor
daa
xor
fidiv
inc
adc
ret
lods
imul
jmp
mov
cmp
push
dec
push
xor
scas
out
retf
lea
cmp
in
add
and
inc
add
jl
lock
test
push
fisub
add
js
fs
pop
dec
adc
out
add
mov
out
pusha
in
or
xchg
pop
into
mov
mov
adc
push
lods
jmp
stc
dec
icebp
mov
stc
test
add
add
and
iret
inc
add
ret
mov
aas
test
(bad)
es
(bad)
push
pop
(bad)
sti
arpl
inc
adc
jg
pop
mov
dec
inc
shl
iret
cvtps2pd
dec
mov
out
outs
adc
add
lea
test
inc
or
xchg
xor
pop
hlt
push
lahf
inc
aas
adc
xor
add
retf
clc
call
jns
cmc
jo
pop
inc
loop
in
inc
loop
mov
lods
sbb
jne
repz
jle
lds
shr
xchg
push
mov
(bad)
and
imul
cld
inc
test
cld
add
xchg
aad
sbb
ds
inc
add
scas
add
cld
xchg
fwait
inc
mov
push
ficomp
data16
sti
and
or
xchg
jp
jbe
idiv
jg
mov
add
mov
adc
frstor
(bad)
data16
cmc
xlat
mov
pop
push
inc
or
xchg
sbb
ja
dec
out
mov
add
mov
icebp
jnp
jno
not
cwde
das
scas
xchg
aaa
inc
adc
mov
jg
adc
lock
into
mov
imul
inc
movs
push
xchg
mov
jmp
sub
hlt
shr
pop
popa
jecxz
mov
leave
mov
lock
dec
push
(bad)
sub
add
loopne
pop
clc
popf
(bad)
cld
add
movs
inc
test
loopne
inc
xor
cmp
inc
jl
inc
fbstp
in
iret
pop
mov
mov
fnstsw
mov
(bad)
test
jp
add
dec
mov
add
mov
lsl
mov
inc
mov
or
(bad)
dec
pop
inc
clc
mov
mov
sahf
cmp
stos
(bad)
and
imul
ds
in
std
push
sar
cmp
cmc
inc
enter
in
add
and
add
call
fs
out
(bad)
jno
imul
jmp
nop
js
sar
push
int3
mov
daa
push
les
pop
inc
pushf
pop
retf
xchg
pushf
clc
push
das
cmp
cmc
sar
pop
lock
or
stos
dec
inc
scas
adc
adc
loop
test
bound
xlat
mov
in
iret
imul
push
pop
push
cmp
push
mov
dec
adc
inc
repnz
xchg
clc
ja
cmc
mov
xchg
inc
test
xor
repnz
add
sub
add
mov
inc
mov
test
scas
popa
mov
pop
mov
movs
je
scas
sbb
inc
inc
leave
sbb
clc
data16
pushf
mov
cmps
loop
xchg
out
push
pop
cmc
ret
es
mov
retf
jmp
ds
inc
icebp
adc
jns
or
cmp
pop
lods
jae
pop
mov
mov
push
fwait
aas
adc
or
popf
cmp
push
inc
stc
and
cmps
ret
mov
xchg
int
xchg
neg
jl
or
mov
pop
jp
dec
inc
les
cmp
push
jb
jmp
arpl
mov
xchg
icebp
inc
sbb
into
dec
scas
ret
ret
cmp
retf
ss
inc
(bad)
repz
mov
je
std
sar
add
xchg
xor
cmps
sub
scas
repnz
mov
inc
and
mov
inc
icebp
adc
js
retf
ins
ja
cli
sbb
repnz
stc
xchg
(bad)
mov
repnz
(bad)
push
mov
pushf
ins
(bad)
sub
jge
inc
jl
test
leave
inc
repnz
xor
arpl
lods
jmp
aas
loope
pop
clc
dec
inc
aas
jmp
jg
and
jg
data16
pop
add
push
idiv
(bad)
dec
pop
or
mov
and
aam
dec
jae
icebp
or
cld
mov
dec
jmp
jns
jmp
add
dec
loope
pushf
pop
adc
xlat
xchg
inc
cld
outs
movs
dec
fisub
loope
scas
push
les
psubd
lahf
inc
mov
sbb
pop
sub
loop
data16
jo
movs
inc
leave
add
ins
add
add
add
jge
pop
(bad)
mov
jae
inc
scas
pop
xchg
leave
push
and
xlat
loopne
jae
push
into
cmp
loop
in
or
and
mov
test
xchg
stc
xlat
mov
scas
mov
sub
repz
fwait
mul
mov
jl
lock
pop
add
add
add
sub
cmp
(bad)
dec
inc
les
sbb
push
imul
mov
cli
push
push
jecxz
jge
stos
lahf
and
bnd
nop
mov
imul
out
mov
jge
sub
cld
es
jae
add
fisttp
pop
jg
popf
(bad)
inc
sbb
mul
out
pop
xor
mov
fmul
in
jb
out
xchg
inc
and
ret
xchg
jb
xchg
xor
cmc
inc
xor
ja
and
lods
call
paddw
or
inc
std
xor
test
dec
cmp
ins
dec
lds
inc
arpl
test
mov
imul
jg
xchg
fwait
loope
sbb
push
xchg
mov
aaa
in
daa
lock
pop
clc
dec
mov
cmp
jno
add
push
jg
movs
(bad)
sbb
add
(bad)
xchg
xchg
pop
cld
inc
jl
ins
cmps
mov
scas
call
stos
iret
cmps
fstp
out
sub
jae
push
mov
pop
je
stc
and
pop
add
stc
pop
je
add
dec
cld
aaa
aas
repz
add
sub
loope
(bad)
sbb
add
(bad)
jg
adc
inc
mov
test
in
out
sbb
add
jmp
add
jg
das
mov
scas
in
(bad)
bnd
int
neg
repz
push
sbb
(bad)
(bad)
mov
sub
in
movs
mov
and
(bad)
pop
aas
pop
in
mov
ja
inc
les
dec
std
jl
xchg
lds
je
stc
and
pushf
xor
xlat
stc
pop
data16
fiadd
rcr
jge
inc
loop
and
std
loopne
sti
cli
call
clc
mov
(bad)
ja
fdivr
jb
clc
cdq
pop
stos
les
push
in
jmp
nop
ds
sub
imul
jecxz
add
repnz
inc
mov
call
in
neg
add
mov
rcr
adc
jecxz
shl
inc
in
aas
mov
loope
push
cld
repnz
xlat
stc
pop
ins
pop
(bad)
push
or
out
cmp
adc
leave
mov
inc
mov
mov
push
icebp
sub
aas
retf
fwait
(bad)
(bad)
retf
inc
in
sbb
sub
daa
cmp
push
imul
sbb
jo
movs
mov
sbb
xchg
fidivr
add
push
and
inc
icebp
adc
lock
or
scas
mov
add
mov
outs
and
shl
pushf
jne
scas
das
test
xor
or
jle
ret
out
xchg
inc
and
cli
mov
jmp
(bad)
mov
ds
(bad)
stc
cdq
mov
add
xchg
(bad)
data16
pop
fdivr
add
mov
jb
pop
nop
shr
xor
je
pop
sti
inc
or
adc
push
(bad)
mov
jg
jg
inc
inc
push
xor
xchg
div
in
daa
lock
data16
adc
jge
addr16
cmc
dec
gs
in
cmp
xchg
(bad)
retf
movs
in
cld
mov
dec
or
push
and
mov
sub
inc
xchg
and
pop
sar
xor
cmc
inc
dec
cld
xor
loop
inc
adc
outs
scas
inc
sti
inc
cld
cmp
inc
cmp
add
jne
ret
sub
cmp
in
lds
jecxz
retf
mov
add
mov
out
mov
cld
xor
ret
(bad)
push
(bad)
cld
add
aam
lock
mov
mov
add
outs
mov
push
fld
(bad)
or
shl
push
jmp
in
lahf
or
fimul
pop
je
(bad)
pop
add
ds
inc
icebp
adc
add
scas
pusha
sti
pop
iret
inc
(bad)
jmp
mov
mov
bound
push
push
cmps
test
aad
and
pop
jp
add
jmp
jg
pop
xchg
dec
loop
paddw
jg
mov
lock
out
js
dec
or
imul
push
in
cmp
(bad)
mov
sbb
(bad)
lods
push
call
mov
test
sbb
das
dec
std
push
rcr
jb
xlat
stc
pop
dec
mov
ja
sbb
ss
mov
add
xor
or
clc
test
std
push
aad
aam
stos
aad
dec
std
cmps
xchg
fmulp
pop
movs
std
popf
cmp
dec
lahf
xor
loope
lea
xchg
aad
ret
mov
dec
jns
dec
or
dec
enter
jb
jo
xchg
or
rcl
add
xor
lea
pop
mov
leave
pop
xor
jmp
addr16
lock
adc
adc
stos
mov
mov
imul
fadd
sbb
pop
adc
sti
inc
cld
dec
mov
and
and
out
sbb
push
pusha
add
add
setnp
das
jne
jbe
pop
into
mov
dec
pop
mov
cmp
jle
ja
jge
mov
jg
jl
inc
shl
icebp
retf
shl
out
jmp
add
sub
je
div
sub
clc
and
inc
lds
mov
mov
jl
mov
mov
pop
jbe
sti
in
imul
js
xchg
call
cmp
jg
jge
mov
jg
cmc
jne
add
xchg
and
add
aaa
je
inc
xor
xlat
dec
xchg
inc
mov
nop
(bad)
rcr
aas
xchg
das
xor
mov
repz
loop
scas
ds
pop
or
ds
shl
aam
xor
adc
push
aaa
sahf
cs
sbb
push
nop
jae
or
mov
out
les
sub
sbb
xchg
dec
repnz
jmp
sub
push
(bad)
outs
fistp
cmp
iret
dec
xlat
inc
mov
or
cmps
psubw
mov
pop
mov
jmp
cmp
jmp
les
mov
popf
mov
sbb
loope
jno
jp
cli
push
popf
fidivr
cmp
sub
scas
scas
xor
cmc
stc
clc
stos
mov
push
lds
outs
out
fcomi
inc
jne
inc
mov
push
scas
out
dec
cli
mov
icebp
inc
xor
inc
mov
cld
adc
pop
inc
loopne
jg
in
lods
imul
push
js
and
jp
mov
add
icebp
loop
cld
sbb
add
push
(bad)
pop
test
dec
cld
mov
rol
sar
ds
pop
lock
sbb
jae
add
xchg
mov
inc
scas
inc
sbb
xchg
ins
ds
and
and
push
mov
repnz
test
lds
add
xchg
inc
loopne
outs
(bad)
sub
adc
lock
inc
lock
movs
inc
loope
jp
std
push
mov
clc
das
pop
(bad)
cmp
add
icebp
sar
add
jne
inc
sar
icebp
retf
(bad)
pop
inc
les
cli
sbb
cmp
clc
stos
imul
inc
inc
(bad)
mov
addr16
inc
adc
std
add
mov
cmp
lahf
dec
out
inc
cmp
loopne
cli
jns
add
add
sub
lahf
stc
popf
scas
jg
pop
mov
outs
lea
(bad)
cld
iret
push
and
add
movs
(bad)
push
inc
inc
sbb
(bad)
stc
sahf
jl
inc
or
stos
jg
int3
inc
call
xchg
mov
cld
cli
jg
cld
adc
ret
inc
add
ror
clc
das
pop
(bad)
cmp
clc
daa
push
pushf
jg
js
inc
sar
icebp
retf
mov
add
xor
inc
mov
outs
cli
push
cld
inc
inc
sbb
clc
stos
jg
int3
inc
call
xchg
lock
repz
dec
test
dec
mov
outs
mov
jb
fcomip
dec
popf
cmp
add
jb
add
retf
(bad)
cmp
cmp
loop
cld
sbb
inc
lds
fnclex
inc
inc
cdq
test
inc
mov
add
mov
paddd
mov
inc
sub
(bad)
addr16
inc
sbb
aaa
cld
adc
dec
outs
stc
lahf
cs
jb
push
jg
pop
adc
dec
stos
or
cmp
and
inc
push
sar
add
push
pop
push
int
call
sbb
inc
out
sti
inc
loopne
push
leave
inc
add
rcr
push
mov
scas
cdq
mov
(bad)
inc
mov
cmc
lods
vcmpge_oqpd
int3
fwait
sub
cmp
into
(bad)
pop
xchg
pop
pop
or
cmp
and
stos
into
inc
in
mov
jno
stos
test
xlat
mov
ins
xor
push
pusha
mov
inc
sbb
les
cmp
push
je
and
popf
inc
loope
xor
jge
pop
xor
and
push
fisubr
lock
xchg
xchg
(bad)
in
out
mov
lods
jge
jno
push
mov
add
bound
mov
xchg
mov
xchg
mov
sub
inc
add
test
sar
cmps
xchg
icebp
xor
test
call
pop
scas
fst
xchg
mov
dec
or
out
data16
call
cmps
mov
je
sahf
adc
pop
sti
(bad)
mov
mov
aas
xchg
ds
ins
sub
xchg
lods
cmc
jmp
dec
sbb
mov
sub
xchg
push
jmp
mov
dec
in
jns
push
sti
jmp
jne
mov
sub
adc
dec
ret
shl
jmp
sub
mov
jmp
(bad)
lahf
xchg
push
sti
xchg
aad
ret
(bad)
adc
in
sbb
cmc
scas
retf
in
mov
call
jp
pop
mov
or
pop
retf
nop
sub
adc
or
pop
test
or
mov
mov
and
adc
or
int
out
cmc
scas
mov
dec
ins
jb
stos
push
movs
sub
loopne
mov
lea
jmp
imul
fisub
sti
jmp
sub
scas
and
jnp
call
xchg
out
pop
lahf
xchg
cmp
sub
fild
mov
aas
inc
jnp
inc
sbb
mov
push
cmp
icebp
ss
out
(bad)
pop
push
fwait
retf
popa
addr16
rcr
push
fdivr
dec
adc
pop
dec
push
sbb
bound
jb
mov
inc
push
and
lods
shr
pop
pusha
jnp
sbb
jno
adc
sub
sub
(bad)
and
ret
and
imul
jp
rcl
bound
frstor
and
pop
rcr
sbb
je
push
or
mov
jp
test
lods
(bad)
fld
outs
pop
mov
jecxz
inc
add
stos
ja
loop
mov
leave
cmps
pop
fucomip
push
push
xor
int
test
mov
pop
lods
dec
shl
mov
or
shl
jne
inc
jle
enter
stos
jp
jns
in
ins
pop
retf
aad
pusha
jmp
inc
adc
nop
jb
les
jnp
cmps
test
sahf
icebp
and
push
popf
sub
jns
xor
retf
adc
dec
test
sahf
cwde
stos
mov
adc
shl
xchg
push
or
jp
mov
nop
shl
aam
repz
leave
sbb
jle
cli
jl
aad
pop
test
call
pop
ret
mov
add
mov
cmps
sbb
sub
fnstenv
mov
xor
sbb
or
icebp
xor
push
ins
and
lock
push
lods
lds
xchg
mov
push
test
cdq
push
xchg
mov
push
lahf
or
mov
inc
daa
add
push
mov
xor
pop
and
jge
push
dec
push
cwde
int
test
fisubr
jae
push
mov
ret
mov
sti
mov
mov
cmc
sbb
sbb
pop
or
dec
jl
in
sbb
pop
sub
lds
ret
fs
mov
cmp
stos
push
lea
jge
jo
push
imul
gs
imul
sub
pop
mov
icebp
inc
xchg
and
pop
sbb
test
push
cli
test
stos
ficomp
rcr
cs
xchg
adc
(bad)
(bad)
mov
push
ret
cmp
dec
out
cs
xchg
sbb
outs
sahf
pop
mov
mov
je
fs
mov
push
jno
jp
pushf
mov
mov
jo
xchg
xchg
out
sub
iret
mov
(bad)
test
xor
jp
mov
in
or
add
cld
sub
shl
mov
gs
or
ret
adc
cmp
pop
xchg
repz
adc
aam
mov
push
aaa
das
adc
enter
retf
cmc
and
mov
lea
cdq
xor
or
call
pop
sbb
(bad)
xchg
(bad)
jecxz
or
mov
pop
sbb
jp
hlt
fwait
mov
into
rcl
adc
shl
cmp
xchg
gs
imul
cmps
push
pusha
data16
add
test
das
shl
inc
xor
pusha
mov
enter
iret
sub
and
xor
inc
imul
mov
jo
mov
add
jbe
dec
push
in
xchg
pop
inc
(bad)
push
mov
outs
mov
ja
adc
movs
push
icebp
out
cld
mov
and
add
push
jg
jl
mov
lea
jnp
lods
cmc
cmp
and
test
add
sbb
jo
(bad)
test
stos
pop
jl
icebp
inc
ret
(bad)
xchg
xchg
xchg
cmp
pop
std
or
ret
fldcw
retf
inc
enter
outs
mov
test
jg
ret
inc
xchg
outs
pop
inc
fcomp
push
inc
shr
pop
mov
sbb
aas
test
jg
stos
push
icebp
fs
adc
jge
sti
push
sub
icebp
aas
jecxz
loopne
fild
pop
mov
in
mov
mov
aas
psraw
cmp
mov
xchg
mov
lods
and
lods
mov
(bad)
fisubr
mov
movs
movs
imul
lock
dec
pop
pop
call
sbb
mov
ffree
out
inc
lock
out
icebp
and
pop
sar
sbb
addr16
ss
or
cmps
fild
dec
outs
xchg
ss
in
pop
call
mov
(bad)
das
mov
clc
fistp
mov
sbb
das
scas
mov
sbb
stos
outs
and
rcl
cmp
imul
(bad)
movs
movs
dec
xor
movs
inc
pop
cli
fsubp
fsin
adc
movs
jle
clc
xlat
ret
sbb
sar
punpckhwd
or
pop
sti
inc
mov
pop
or
xchg
push
push
rcr
aas
xor
adc
push
js
loop
cld
adc
ffreep
jle
inc
ficomp
aam
es
pop
add
dec
mov
mov
xchg
push
dec
dec
jns
add
scas
(bad)
pop
add
push
das
icebp
push
xchg
loop
push
sub
sub
int3
jno
adc
out
shl
(bad)
call
mov
lea
lahf
inc
repz
push
popa
push
ins
vmovaps
int3
cmpxchg
mov
xlat
xchg
inc
lods
cmps
mov
mov
push
jmp
cs
(bad)
push
pop
add
inc
(bad)
in
dec
cmp
mov
in
sbb
sub
pop
pop
out
push
cmp
test
dec
lock
popf
mov
adc
loop
cmps
cdq
jnp
pop
imul
push
int
mov
adc
jnp
es
or
adc
ror
retf
xchg
push
icebp
pop
movs
and
inc
scas
jmp
fimul
outs
and
pop
jecxz
(bad)
daa
sbb
pop
fucomi
jno
outs
fistp
hlt
sub
outs
adc
nop
bswap
push
outs
fdiv
xor
pop
xlat
rol
sub
in
gs
cwde
rol
retf
test
jge
icebp
xchg
fidivr
loopne
mov
mov
fnsave
pop
xor
xchg
sub
mov
adc
pop
test
cmps
fnstsw
pop
mov
pop
mov
xchg
neg
data16
clc
pop
lahf
xor
inc
jb
mov
pop
xor
mov
jbe
loop
push
push
lock
mov
(bad)
pop
push
sub
ret
xor
test
js
inc
jl
clc
aad
cld
das
lock
xchg
jecxz
in
icebp
sbb
loope
xchg
xor
ret
in
mov
div
add
retf
test
xchg
jp
cmp
or
out
push
mov
lods
push
cmps
mov
jmp
cmp
imul
icebp
outs
ret
lock
mov
pop
push
pop
pushf
out
repz
inc
cmp
bound
xchg
dec
fistp
and
icebp
inc
loop
and
pop
jmp
dec
jnp
pop
jmp
pushf
sub
jns
cmp
in
xchg
push
js
ret
fisubr
lock
pop
js
rcr
or
xchg
xchg
or
imul
daa
pop
sbb
les
hlt
xchg
sbb
scas
mov
jge
cmc
stos
cmp
push
in
mov
ins
xchg
jg
jle
icebp
jg
fwait
mov
jmp
xor
xor
add
fcmovnu
test
xor
xor
cmc
(bad)
push
into
xchg
loop
xor
or
sub
fxtract
sbb
mov
cmc
jecxz
ret
dec
mov
add
cmp
test
dec
jmp
in
pop
pop
mov
push
sbb
jmp
fidivr
shl
call
bound
pop
push
push
xchg
jns
pop
mov
pop
(bad)
adc
mov
adc
pop
jmp
pop
push
rcr
clc
pop
push
fwait
dec
repz
push
inc
fstp
bound
and
jmp
dec
fwait
out
adc
(bad)
pop
pop
xchg
jne
ja
mov
(bad)
adc
rcr
xchg
sbb
add
test
add
dec
clc
scas
cmp
inc
push
push
jecxz
mov
cdq
jl
rol
scas
ret
icebp
imul
(bad)
adc
aam
cmp
mov
lods
clc
xchg
lock
(bad)
pop
or
loopne
push
clc
mov
inc
loop
xchg
add
fist
inc
ins
fcomp
mov
inc
mov
add
push
mov
cmp
retf
sahf
das
mov
cld
dec
lock
and
push
xor
retf
ja
int3
mov
call
push
test
mov
sti
inc
jl
pop
mov
add
sahf
sbb
pushf
or
dec
adc
push
shl
cdq
mov
pop
mov
mov
je
cmp
movs
pop
aaa
fwait
shr
retf
cld
into
push
inc
push
fs
clc
aad
sub
std
mov
inc
into
jnp
pop
fldenv
mov
arpl
bswap
(bad)
xor
sbb
dec
les
cmps
js
pop
mov
addr16
jge
adc
rol
mov
out
adc
fsub
(bad)
fadd
inc
iret
iret
sar
xchg
ret
dec
repnz
sub
in
pop
inc
(bad)
mov
popa
loope
adc
cmp
ins
mov
sbb
sti
ret
aaa
push
jo
int
mov
add
xchg
xchg
xchg
xchg
jmp
(bad)
jne
cld
cmp
ds
sahf
adc
pop
aaa
push
xor
xor
cmps
adc
addr16
push
shl
sti
lods
mov
push
aam
jnp
lods
sbb
push
iret
dec
sub
das
rol
mov
jnp
add
sub
test
xchg
in
xlat
xchg
mov
xchg
jge
in
iret
add
cli
sbb
scas
stc
inc
add
inc
hlt
cmps
push
xor
stos
inc
pushf
imul
retf
jae
pop
dec
je
(bad)
scas
pop
cli
pop
cmp
movs
clc
popf
cdq
ret
push
dec
shr
fdiv
cmp
out
mov
ret
loop
xchg
loop
xor
mov
(bad)
imul
in
mov
dec
movs
jge
inc
mov
mov
enter
lahf
cmc
mov
add
mov
and
icebp
mov
mov
imul
test
jle
sub
mov
cmps
mov
mov
sub
mov
add
mov
rcl
fcmovnu
xor
pop
jb
fneni(8087
mov
mov
hlt
jg
and
lds
jns
(bad)
sub
rcl
pop
stc
sti
(bad)
cmp
cld
xchg
cmc
push
hlt
fisttp
imul
(bad)
in
jle
aas
into
mov
icebp
pop
in
xchg
popf
inc
dec
sbb
dec
cmp
imul
mov
les
push
or
pop
imul
call
ret
dec
mov
add
sub
inc
popf
jg
lods
push
add
or
shr
jp
cwde
scas
mov
fnstenv
fucomip
pop
not
xchg
jg
cmp
add
mov
mov
sti
and
cmp
ror
int3
les
sbb
in
into
and
and
lods
ins
pop
in
int3
mov
bound
mov
idiv
pop
inc
mov
sti
xchg
sub
xor
inc
adc
jl
xor
sbb
or
fs
test
push
mov
xchg
rcr
mov
mov
pop
das
fsubr
mov
lds
gs
sahf
mov
add
out
cwde
cld
push
jno
arpl
and
call
fnstsw
lods
repnz
retf
lahf
out
lock
adc
aad
data16
push
add
hlt
xor
and
sub
sub
sbb
dec
icebp
popa
bound
mov
inc
(bad)
jmp
sub
adc
outs
fmulp
inc
(bad)
jmp
movs
clc
sbb
cld
inc
pop
push
xor
loope
jne
jmp
jno
cdq
call
test
xchg
shr
ret
out
inc
(bad)
jmp
(bad)
cmps
mov
scas
fwait
inc
lea
xchg
das
xchg
ins
mov
in
or
sbb
(bad)
cmp
enter
pop
mov
mov
xchg
and
jg
addr16
cmc
psubusw
xlat
dec
inc
jp
mov
clc
fst
push
pop
imul
in
pop
popf
push
js
popf
enter
dec
jne
scas
outs
fidiv
leave
iret
jae
lods
pop
in
(bad)
jecxz
fld
and
inc
lea
outs
fnstcw
lds
sbb
mov
retf
inc
(bad)
jmp
ret
shl
ins
sub
outs
fisubr
cmp
out
(bad)
dec
into
mov
imul
aas
fist
retf
aam
gs
ror
inc
(bad)
clc
fs
sbb
or
dec
sar
stos
call
cmp
or
out
cdq
in
out
push
jae
out
loope
jge
and
es
loop
inc
fmul
out
xor
leave
(bad)
fadd
mov
inc
(bad)
jmp
in
xor
out
inc
(bad)
jmp
jo
je
js
pop
in
repz
mov
push
mov
cvtps2pd
sub
enter
in
push
popf
xchg
not
fisttp
push
ror
iret
std
cli
lods
fwait
(bad)
fnstenv
mov
fstp
xchg
add
je
inc
icebp
mov
cmp
out
cmp
add
dec
stos
cmp
inc
bound
cdq
pop
in
inc
or
loop
pop
jne
nop
or
call
dec
icebp
popa
daa
outs
mov
das
inc
sbb
std
add
into
xor
jnp
js
pop
mov
mov
inc
xchg
ja
add
outs
sti
std
das
inc
sbb
rol
pop
pop
cmc
ficomp
aaa
dec
jo
je
(bad)
sbb
stc
mov
add
cdq
(bad)
pop
loope
sbb
sahf
dec
push
jae
loope
in
scas
loop
pop
outs
hlt
pushf
cli
mov
jecxz
psubusw
jno
xchg
jge
sbb
std
in
lahf
cld
outs
mov
stos
mov
xlat
rol
xor
leave
or
pop
lahf
push
mov
fiadd
or
adc
xor
movs
retf
sbb
xor
(bad)
call
mul
xor
jbe
imul
outs
mov
ret
movs
inc
mov
xchg
jae
xchg
stos
mov
neg
or
mov
shl
xchg
scas
imul
adc
imul
les
mov
es
dec
push
pushf
mov
daa
inc
sbb
retf
push
mov
imul
xor
bound
mov
mov
pushf
adc
pushf
test
add
adc
out
jmp
xchg
lahf
cld
xchg
std
cdq
jl
ins
and
add
pop
ds
stos
aam
popf
push
xchg
pushf
jae
sbb
iret
adc
les
sbb
(bad)
aad
xchg
jle
fisub
jmp
aas
clc
fisttp
mov
mov
cmp
(bad)
mov
jmp
scas
or
movs
jg
rcr
dec
aaa
rcl
sbb
jge
dec
push
add
cmp
retf
push
jmp
std
cdq
mov
jmp
mov
icebp
mov
les
sbb
add
xchg
pop
call
popa
pop
mov
das
daa
(bad)
fdivr
push
imul
not
inc
mov
jmp
mov
in
cdq
loop
rcl
mov
jecxz
lds
push
into
push
ror
jae
jmp
push
push
fld
mul
sbb
mov
mov
out
dec
inc
pop
neg
pop
(bad)
aaa
dec
pop
in
xchg
mov
iret
shr
clc
fst
mov
inc
mov
icebp
push
loope
adc
daa
sbb
lahf
fstp
sbb
mov
cmps
push
mov
mov
aas
in
mov
cld
outs
mov
icebp
cmps
mov
call
imul
int
cmp
or
or
inc
sub
imul
jae
jne
sub
sub
jnp
or
mov
clc
jecxz
(bad)
fcom
aas
out
cld
(bad)
push
std
xchg
mov
fidivr
xor
data16
mov
dec
imul
fmul
loope
pop
sub
and
(bad)
imul
mov
cld
(bad)
inc
jg
inc
jecxz
das
in
sub
lds
sbb
xchg
cmc
pop
adc
add
call
ret
mov
cmp
or
es
(bad)
gs
gs
ins
(bad)
lods
enter
sub
or
in
mov
xor
xor
repz
stos
out
sub
(bad)
daa
lock
xor
imul
call
lock
cld
imul
cmp
mov
cmps
fwait
loopne
mov
(bad)
pop
(bad)
(bad)
lahf
adc
pop
sbb
imul
loope
fmul
push
dec
add
add
inc
(bad)
pop
mov
les
lahf
jbe
push
sti
sub
in
xchg
or
sbb
ins
movs
fst
push
or
and
or
and
jbe
or
jae
sub
leave
imul
push
cmc
out
daa
inc
xchg
pusha
fsub
ds
ins
sahf
out
cld
iret
out
mov
int
mov
(bad)
inc
add
pop
std
sub
and
cs
mov
pop
xlat
cmc
sub
sub
push
inc
shl
sub
stos
hlt
pop
loope
cld
mov
sbb
xor
ret
sahf
sub
fild
(bad)
div
(bad)
dec
ja
dec
movs
(bad)
pusha
and
mov
arpl
xor
in
and
ja
sub
(bad)
jmp
cmp
adc
xchg
jle
ja
lock
loopne
in
cdq
cmps
jmp
mov
mov
mov
in
int
cmp
and
push
push
or
or
in
test
rol
mov
sbb
or
lock
daa
mov
scas
retf
out
dec
lea
mov
test
icebp
int3
sahf
sub
hlt
popf
dec
push
dec
shl
xor
push
les
adc
inc
or
push
xor
sbb
or
js
pop
xchg
pop
dec
ja
push
dec
adc
dec
mov
ret
pushf
or
bound
sar
mov
adc
repz
idiv
movs
aam
jmp
(bad)
(bad)
sbb
imul
pop
les
and
repnz
arpl
(bad)
cmp
inc
jns
sbb
in
repz
jg
jle
pop
cld
add
popa
cmps
js
ret
not
jecxz
adc
cmps
pop
icebp
pop
in
dec
pop
and
jns
inc
retf
or
sub
sbb
cmp
mul
and
(bad)
pop
cld
and
xor
cmc
mov
enter
xor
rcr
in
test
je
and
cmp
(bad)
jle
jl
sar
lock
mov
shl
lods
or
int3
cmps
add
ror
cmp
or
js
icebp
dec
xor
mov
outs
lds
shl
cmc
(bad)
mov
jmp
ret
dec
inc
cld
cmp
mul
mov
sub
out
fidiv
lahf
and
cmp
stos
xchg
push
movs
aaa
jns
popf
mov
cmps
mov
dec
loop
jle
pop
out
push
add
push
mov
iret
sbb
js
jbe
jae
xor
cld
jp
mov
(bad)
sahf
or
mov
loope
dec
pop
js
pop
push
btr
add
or
adc
loopne
mov
hlt
jg
lahf
mov
ret
mov
add
push
or
jecxz
push
adc
push
push
jg
mov
jmp
aaa
or
cli
mov
lds
jbe
jae
ins
dec
push
int3
mov
rol
mov
push
das
mov
jecxz
not
outs
xor
js
sub
outs
and
dec
inc
mov
push
inc
pushf
test
jae
xlat
imul
scas
hlt
xchg
mov
sahf
dec
leave
gs
pushf
dec
lahf
mov
outs
movs
sar
test
mov
jns
xchg
push
mov
push
sbb
ret
push
and
jecxz
mov
retf
dec
push
add
loop
adc
scas
inc
rcr
mov
outs
(bad)
fisttp
(bad)
mov
ret
inc
add
es
pop
mov
add
jnp
add
in
loope
sbb
shl
inc
pop
pop
adc
dec
pushf
jne
stc
adc
dec
mov
sbb
das
cmp
loope
sar
(bad)
enter
sub
xor
push
add
shl
cmp
sub
and
pop
and
aad
fwait
mov
sar
or
das
test
test
pusha
in
sub
retf
in
push
pop
retf
(bad)
imul
les
stc
jg
mov
sahf
jle
imul
pusha
aam
je
jnp
repnz
pop
xchg
not
and
mov
or
and
and
ficomp
clc
test
lock
ret
in
ss
stos
frstor
scas
xor
mov
add
fidiv
mov
mov
cwde
loop
into
or
xchg
das
(bad)
sub
cld
add
push
push
jge
cli
xor
adc
outs
das
and
in
xchg
mov
cld
dec
lock
inc
clc
xlat
sti
pop
(bad)
xchg
push
rcr
cmp
out
popf
mov
pop
movs
push
jbe
and
bound
ds
stos
(bad)
rcr
or
clc
aaa
loopne
mov
and
div
inc
(bad)
into
fnsetpm(287
adc
sbb
outs
daa
sub
shr
loope
das
sbb
icebp
and
clc
mov
fidiv
(bad)
repnz
xchg
popf
mov
xor
rcr
jecxz
scas
sub
mov
in
mov
jp
push
xchg
mov
sbb
fist
dec
xchg
cld
cmp
repnz
test
fs
xchg
or
inc
jae
adc
not
add
xor
push
std
xchg
addr16
adc
push
fisubr
clc
xor
stos
mov
push
xor
add
sbb
pop
clc
lahf
lea
push
icebp
sub
add
imul
stos
push
lds
inc
jo
sbb
out
stc
and
dec
icebp
repz
mov
push
sub
call
outs
loop
adc
fnstcw
in
push
and
add
add
xchg
adc
mov
cmp
sub
cmp
mov
push
fist
outs
pop
mov
lock
sar
clc
inc
pop
(bad)
lods
xchg
scas
jge
inc
rcr
(bad)
xor
fs
out
jno
inc
sub
mov
cmp
dec
pop
add
lock
ret
dec
fisttp
sahf
jnp
and
jl
cmp
retf
aaa
scas
into
in
xor
sub
inc
ja
(bad)
fimul
inc
add
mov
fisttp
shl
mov
cmp
fadd
shr
mov
or
add
cld
dec
clc
pop
lods
js
jecxz
shr
cli
pushf
loop
mov
xchg
mov
ficomp
mov
in
fs
or
cmp
jge
in
test
push
fcmovnbe
fisubr
int
pop
cmps
in
pop
jno
jnp
lock
mov
pop
clc
mov
push
jns
rcr
adc
inc
pop
rol
add
jbe
xchg
ds
mov
clc
mov
loopne
or
jbe
call
xlat
cmc
mov
dec
pop
hlt
push
add
add
add
cmps
loop
sbb
pop
test
into
ficomp
jg
jmp
mov
(bad)
mov
(bad)
push
cmp
lods
sti
and
ds
sbb
cmp
pop
pop
pop
fistp
xchg
js
push
mov
mov
sub
fldenv
and
cmc
sub
ret
jmp
mov
pop
rcr
retf
xchg
mov
jg
inc
jg
push
jge
bound
cmp
xchg
in
popf
mov
pop
repz
sbb
add
fmul
mov
repz
clc
outs
sbb
addr16
mov
jg
push
sbb
push
push
fcmovu
add
rcr
add
jecxz
push
std
mov
push
not
sbb
loope
mov
fild
in
inc
xchg
leave
jae
outs
lea
dec
sbb
add
mov
and
pop
push
clc
(bad)
rcl
ret
sahf
push
mov
inc
mov
adc
mov
stos
inc
aam
push
stos
or
cmp
stos
inc
stos
div
test
out
push
out
jg
mov
inc
inc
add
adc
jle
mov
xor
das
std
lahf
imul
or
dec
add
jecxz
jl
imul
or
inc
loopne
jae
jmp
xor
retf
mov
jmp
push
lock
sub
mov
ins
ja
xor
inc
xchg
inc
retf
and
inc
or
pop
push
js
add
add
mov
fcomip
inc
outs
xor
mov
ret
aad
inc
adc
frstpm(287
jge
ds
dec
movs
mov
sar
neg
shl
iret
test
push
and
jns
sub
mov
test
ss
call
scas
jne
add
fisttp
jg
stos
out
add
pop
icebp
in
stos
jg
pop
repnz
jp
dec
inc
pop
test
mov
inc
int3
stc
retf
hlt
mov
xchg
in
jg
fcomp
mov
adc
pop
pop
lock
mov
adc
pop
js
adc
inc
lahf
jg
inc
xor
or
repz
cld
(bad)
arpl
add
fisttp
jg
stos
out
add
ret
std
fisttp
jg
stos
out
add
sti
and
add
(bad)
popa
std
mov
jg
in
jg
fcomp
mov
adc
pop
pop
lock
mov
adc
pop
js
adc
fs
mov
add
aas
mov
aas
int
das
repnz
loop
idiv
add
mov
xchg
idiv
add
scas
sbb
(bad)
in
mov
cld
sti
cld
pop
stc
xchg
xchg
stc
mov
inc
ret
popa
jl
(bad)
out
test
add
je
ret
popa
jl
(bad)
out
test
add
jne
xchg
push
std
xchg
cmp
lahf
jg
inc
xor
rol
inc
aaa
loopne
enter
ins
das
mov
lock
dec
scas
jg
cs
clc
ins
das
mov
lock
dec
scas
jg
cs
xor
out
icebp
jg
pop
ficomp
lahf
out
pop
stc
push
(bad)
inc
or
mov
push
iret
inc
and
test
dec
sti
mov
push
iret
inc
and
test
jge
das
cld
ret
sti
inc
adc
fild
inc
loope
mov
pop
clc
sub
aas
loope
mov
pop
clc
sub
icebp
retf
enter
mov
jg
bound
lock
in
pop
cld
ss
lds
out
clc
dec
inc
add
inc
cld
ss
lds
out
clc
dec
inc
add
pop
cmp
fstp
das
stc
idiv
mov
dec
repz
cld
(bad)
arpl
add
fisttp
jg
stos
out
add
ret
std
fisttp
jg
stos
out
add
sti
and
add
(bad)
popa
std
mov
jg
in
jg
fcomp
mov
adc
pop
pop
lock
mov
adc
pop
js
adc
fs
mov
add
aas
mov
aas
int
das
repnz
loop
idiv
add
mov
xchg
idiv
add
scas
sbb
(bad)
in
mov
cld
sti
cld
pop
stc
xchg
xchg
stc
mov
inc
ret
popa
jl
(bad)
out
test
add
je
ret
popa
jl
(bad)
out
test
add
jne
xchg
push
std
xchg
cmp
lahf
jg
inc
xor
rol
inc
aaa
loopne
enter
ins
das
mov
lock
dec
scas
jg
cs
clc
ins
das
mov
lock
dec
scas
jg
cs
xor
out
icebp
jg
pop
ficomp
lahf
out
pop
stc
push
(bad)
inc
or
mov
push
iret
inc
and
test
dec
sti
mov
push
iret
inc
and
test
jge
das
cld
ret
sti
inc
adc
fild
inc
loope
mov
pop
clc
sub
aas
loope
mov
pop
clc
sub
icebp
retf
enter
mov
jg
bound
lock
in
pop
cld
ss
lds
out
clc
dec
inc
add
inc
cld
ss
lds
out
clc
dec
inc
add
pop
cmp
fstp
das
stc
idiv
mov
dec
repz
cld
(bad)
arpl
add
fisttp
jg
stos
out
add
ret
std
fisttp
jg
stos
out
add
sti
and
add
(bad)
popa
std
mov
jg
in
jg
fcomp
mov
adc
pop
pop
lock
mov
adc
pop
js
adc
fs
mov
add
aas
mov
aas
int
das
repnz
loop
idiv
add
mov
xchg
idiv
add
scas
sbb
(bad)
in
mov
cld
sti
cld
pop
stc
xchg
xchg
stc
mov
inc
ret
popa
jl
(bad)
out
test
add
je
ret
popa
jl
(bad)
out
test
add
jne
xchg
push
std
xchg
cmp
lahf
jg
inc
xor
rol
inc
aaa
loopne
enter
ins
das
mov
lock
dec
scas
jg
cs
clc
ins
das
mov
lock
dec
scas
jg
cs
xor
out
icebp
jg
pop
ficomp
lahf
out
pop
stc
push
(bad)
inc
or
mov
push
iret
inc
and
test
dec
sti
mov
push
iret
inc
and
test
jge
das
cld
ret
sti
inc
adc
fild
inc
loope
mov
pop
clc
sub
aas
loope
mov
pop
clc
sub
icebp
retf
enter
mov
jg
bound
lock
in
pop
cld
ss
lds
out
clc
dec
inc
add
inc
cld
ss
lds
out
clc
dec
inc
add
pop
cmp
fstp
das
stc
idiv
mov
dec
repz
cld
(bad)
arpl
add
fisttp
jg
stos
out
add
sti
push
cld
inc
(bad)
(bad)
sbb
das
or
and
cmps
fsub
mov
xchg
add
xchg
push
jno
loopne
or
cmp
or
inc
call
loope
jmp
call
sbb
inc
xchg
dec
pop
cmp
and
inc
(bad)
and
add
inc
ror
aaa
pop
inc
nop
push
mov
jg
es
movs
jg
nop
inc
scas
xchg
jg
data16
scas
mov
call
mov
add
xchg
les
jnp
add
fidivr
mov
push
out
(bad)
nop
fild
iret
adc
xchg
ds
cli
aaa
sti
xor
icebp
jae
and
sbb
pushf
jo
jmp
mov
mov
push
lahf
scas
movs
jl
aaa
in
(bad)
icebp
jbe
jns
outs
add
push
enter
sar
mov
xor
cmps
pop
dec
pop
outs
inc
fsqrt
sahf
xchg
adc
pop
push
jns
js
(bad)
cmp
push
pop
jg
jl
cmps
pop
inc
mov
pop
xchg
jge
ffree
lods
mov
in
(bad)
pop
jmp
fdiv
idiv
leave
scas
pop
dec
(bad)
shr
loopne
dec
repnz
(bad)
sub
enter
and
xchg
inc
mov
stc
mov
sub
and
stc
mov
adc
adc
cmp
int
push
jle
pop
adc
(bad)
in
cld
push
dec
lahf
mov
lds
add
push
mov
icebp
push
fcomi
lods
aas
cld
cld
(bad)
fimul
mov
pusha
aad
cmp
loop
jmp
mov
sub
xchg
aas
in
aam
icebp
iret
(bad)
sub
out
sti
sar
ret
aas
mov
adc
cmp
push
xor
(bad)
stc
xchg
jne
cld
jae
add
clc
mov
aas
icebp
iret
(bad)
sub
clc
mov
repnz
mov
adc
or
int
adc
cld
leave
fiadd
lds
in
xlat
icebp
cmp
test
inc
inc
sbb
add
test
cld
pop
jp
mov
cld
(bad)
out
addr16
cdq
sub
clc
popf
inc
inc
jbe
inc
mov
push
sar
xor
daa
push
clc
out
add
out
sti
sar
scas
repnz
mov
mov
cmp
and
sbb
sar
sbb
mov
shl
or
inc
les
imul
lods
dec
ins
adc
ss
fcmovnu
inc
sbb
cmp
iret
dec
or
std
cwde
(bad)
daa
dec
adc
dec
sbb
cld
or
jmp
shl
cmp
lock
inc
(bad)
mov
and
push
mov
adc
ins
lods
int
push
inc
sbb
rol
leave
and
xlat
sbb
mov
in
pusha
and
sub
lods
sub
(bad)
xor
add
cld
inc
loop
or
jb
arpl
into
pushf
mov
pop
jmp
movs
xchg
adc
xchg
mov
push
in
outs
dec
and
aad
loopne
test
mov
pop
aam
fnstenv
pop
adc
leave
and
inc
push
add
adc
movs
mov
mov
pop
mov
pop
(bad)
pop
sar
push
lock
jne
or
pop
fcmovnb
loope
ss
pusha
call
inc
xor
dec
jne
xor
push
mov
or
jle
leave
arpl
sub
dec
es
dec
shr
ficomp
jmp
jb
repnz
call
dec
and
in
xchg
loop
adc
cmps
js
aas
int3
cmc
pop
sbb
in
jecxz
aas
jmp
pop
mov
push
mov
(bad)
in
cli
fsub
popf
and
mov
arpl
into
mov
pop
icebp
pop
popf
push
sub
xlat
jbe
retf
and
out
arpl
or
and
cmp
jecxz
lahf
dec
mov
lock
sub
and
cmps
mov
pop
mov
adc
repnz
xchg
push
js
ret
pop
adc
imul
adc
lahf
sbb
test
int3
cli
lahf
fisubr
addr16
repnz
test
inc
cmp
cmp
cmps
sub
sahf
test
push
ret
xor
stc
lahf
cmp
dec
imul
add
ja
ss
xor
cld
dec
loopne
dec
push
dec
sbb
add
js
mov
and
add
cmp
cmp
jno
push
mov
movs
xor
loope
outs
cmp
mov
mov
pop
aam
repz
jecxz
sub
adc
enter
in
add
add
fs
imul
xor
cmp
add
cmp
das
pop
mov
(bad)
scas
pop
psubusw
loop
xchg
inc
cmp
pop
inc
test
jge
xor
pop
cmp
sbb
sub
cmp
add
sub
je
jecxz
cmps
out
sub
xchg
adc
xchg
arpl
(bad)
mov
add
jecxz
neg
pop
mov
stos
in
clc
fs
mov
mov
add
xchg
scas
mov
jg
mov
out
jp
ror
(bad)
lea
inc
cmp
fs
stos
test
push
dec
xrelease
shl
cs
mov
clc
not
aas
fisttp
jns
ror
jno
add
pop
xchg
pop
inc
aas
mov
push
rol
or
mov
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
(bad)
aas
repnz
imul
jae
add
mov
pop
push
jg
push
mov
cld
cmp
loope
scas
push
(bad)
xchg
inc
push
inc
(bad)
mov
call
xor
xchg
jno
fchs
enter
enter
push
fisub
add
or
repnz
std
in
pop
ret
cld
cmp
stos
jecxz
(bad)
adc
(bad)
xchg
cmp
outs
nop
mov
mov
jns
adc
pop
cld
adc
push
repnz
loopne
inc
jl
retf
test
add
cmp
pop
pop
sub
shr
fstp
daa
pop
inc
and
cld
repz
xchg
mov
add
gs
pop
or
les
mov
xchg
dec
arpl
mov
aaa
push
das
cld
adc
push
outs
stc
xchg
sub
cld
outs
mov
add
popf
mov
mov
dec
xchg
sub
pop
in
lods
pop
cld
sti
cld
pop
stc
fwait
jge
adc
fild
push
dec
dec
test
stc
xchg
ins
mov
outs
movs
pop
clc
sub
mov
inc
ror
sub
sti
mov
add
add
repnz
aas
mov
pop
repz
icebp
jg
pop
pop
(bad)
inc
aaa
loopne
enter
add
add
cmp
inc
(bad)
rol
cld
adc
push
aas
repz
jg
sar
and
xor
inc
retf
das
dec
aas
and
inc
inc
pop
(bad)
(bad)
cli
out
sub
inc
add
clc
sub
pop
jg
sar
inc
jne
inc
xor
dec
inc
(bad)
xlat
test
hlt
cmp
sbb
jg
mov
mov
aas
repz
icebp
jg
pop
pop
lds
loopne
enter
js
mov
mov
or
inc
(bad)
sar
add
ret
outs
inc
call
rol
pop
cli
inc
cli
push
mov
cli
popa
cli
push
std
xchg
cmp
inc
xor
out
sub
inc
add
ret
ret
outs
inc
call
rol
js
inc
std
or
clc
xor
aaa
pop
adc
push
mov
cli
popa
cli
push
std
xchg
cmp
inc
xor
out
sub
inc
add
clc
sub
mov
add
cmp
imul
add
mov
sbb
inc
sbb
pop
clc
in
sbb
inc
(bad)
push
add
mov
jge
adc
inc
and
paddb
push
pop
repz
jg
sar
push
fld
int3
(bad)
ins
inc
adc
add
jne
jnp
mov
gs
mul
xchg
lahf
not
(bad)
jge
das
cld
ret
jmp
scas
out
pop
stc
push
rcr
lock
sub
ins
inc
adc
add
jne
jg
dec
mov
inc
xor
inc
(bad)
xlat
lea
aas
fnsave
mov
in
mov
pusha
aas
out
loop
add
jg
(bad)
inc
aaa
loopne
enter
add
add
and
inc
(bad)
aam
inc
add
cmp
sbb
inc
sbb
mov
xchg
cmps
inc
iret
cmp
push
iret
mov
jge
adc
fild
inc
sbb
fiadd
mov
scas
pushf
jle
jle
pop
das
std
mov
mov
pop
pop
xor
es
bound
dec
cs
xchg
clc
add
(bad)
jns
jle
dec
mov
ins
shr
mov
imul
inc
xor
mov
cmp
jl
lock
sbb
fld
mov
int3
xlat
dec
push
std
cmps
pop
stc
jmp
inc
iret
push
inc
mov
jae
les
jp
std
hlt
sub
dec
aas
repz
out
mov
xchg
push
jg
xchg
jp
std
hlt
sub
dec
aas
repz
out
mov
push
push
std
cmps
pop
stc
jmp
inc
iret
push
inc
mov
dec
inc
inc
neg
fild
mov
inc
cmp
pop
add
fisub
add
or
ror
cld
cmc
dec
sti
call
xchg
push
jg
xchg
jp
std
hlt
sub
dec
aas
repz
out
mov
push
push
std
cmps
pop
stc
jmp
inc
iret
push
inc
mov
dec
inc
inc
neg
fild
mov
inc
cmp
pop
add
fisub
add
or
ror
cld
cmc
dec
sti
call
xchg
push
jg
xchg
jp
std
hlt
sub
dec
aas
repz
out
mov
push
push
std
cmps
pop
stc
jmp
inc
iret
push
inc
mov
dec
inc
inc
neg
fild
mov
inc
cmp
pop
add
fisub
add
or
ror
cld
cmc
dec
sti
call
xchg
push
jg
xchg
jp
std
hlt
sub
dec
aas
repz
out
mov
push
push
std
cmps
pop
stc
jmp
inc
iret
push
inc
mov
dec
inc
inc
neg
fild
mov
inc
cmp
pop
add
fisub
add
or
ror
cld
cmc
dec
sti
call
xchg
push
jg
xchg
jp
std
hlt
sub
dec
aas
repz
out
mov
push
push
std
cmps
pop
stc
jmp
inc
iret
push
inc
mov
dec
inc
inc
neg
fild
mov
inc
cmp
pop
add
fisub
add
or
ror
cld
cmc
dec
sti
call
xchg
push
jg
xchg
jp
std
hlt
sub
dec
aas
repz
out
mov
push
push
std
cmps
pop
stc
jmp
inc
iret
push
inc
mov
dec
inc
inc
neg
fild
mov
inc
cmp
pop
add
fisub
add
or
ror
cld
cmc
dec
sti
call
xchg
mov
lahf
stc
adc
inc
inc
xor
out
jg
inc
mov
imul
inc
pop
lea
ja
xchg
push
outs
sbb
cmps
adc
mov
pop
cmps
fidivr
aam
addr16
or
mov
dec
icebp
sub
pop
mov
imul
or
fmul
inc
loope
std
xchg
aas
call
add
hlt
mov
clc
sub
mov
sbb
sti
pop
(bad)
nop
pop
xlat
int
lock
movs
xchg
ds
es
jg
addr16
sub
jae
pop
inc
cld
es
cmps
std
pop
adc
pop
xchg
(bad)
xor
or
sar
add
jmp
fmul
clc
dec
inc
gs
cli
push
jl
inc
sar
test
not
mov
or
inc
(bad)
mov
sbb
pop
lods
and
inc
out
addr16
es
cmps
std
pop
adc
pop
xchg
(bad)
xor
ret
sub
add
ja
adc
add
lock
(bad)
adc
mov
jmp
sbb
arpl
arpl
dec
inc
sbb
dec
jg
das
cli
push
cld
and
add
mov
sar
adc
mov
jmp
clc
dec
inc
gs
cli
push
cld
and
add
mov
add
mov
or
inc
(bad)
mov
sbb
pop
lods
and
inc
out
addr16
es
cmps
std
pop
adc
pop
xchg
(bad)
xor
(bad)
lahf
mov
std
pop
adc
sti
jnp
inc
(bad)
mov
pop
aas
loope
pop
lods
and
inc
out
outs
cld
es
mov
std
pop
jle
inc
loopne
xchg
(bad)
xor
ret
sub
add
ja
paddd
xchg
mov
pop
push
nop
jnp
jle
inc
ret
sub
add
ja
paddd
inc
or
inc
fild
add
ret
jg
cmp
sti
cdq
inc
or
inc
iret
test
pop
movs
inc
lea
lock
dec
lahf
hlt
sbb
inc
inc
cmp
cld
and
inc
aad
sbb
std
int3
inc
test
not
mov
or
inc
(bad)
(bad)
clc
dec
inc
gs
cli
push
jl
inc
sar
(bad)
adc
mov
jmp
ret
sub
jae
pop
inc
cld
es
cmps
std
pop
adc
pop
xchg
(bad)
xor
or
sar
add
jmp
jae
loope
std
xchg
aas
call
add
hlt
mov
test
not
add
or
inc
(bad)
mov
pop
aas
loope
pop
lods
and
inc
out
addr16
es
lahf
std
pop
jle
jg
pop
xchg
(bad)
xor
lock
dec
lahf
hlt
sbb
inc
inc
cmp
cld
and
inc
aad
sbb
std
int
add
mov
or
inc
(bad)
(bad)
clc
dec
aas
gs
cli
push
cld
and
add
mov
retf
(bad)
adc
mov
jmp
clc
dec
inc
gs
cli
push
cld
and
add
mov
loope
std
xchg
aas
call
add
ficom
inc
or
sar
add
jmp
jae
loope
std
xchg
aas
call
add
hlt
mov
aas
fst
sbb
inc
sbb
xor
add
jne
cli
mov
popf
pop
mov
retf
sbb
inc
inc
cmp
or
inc
iret
test
pop
movs
inc
lea
inc
ret
jg
cmp
fmul
clc
dec
inc
gs
cli
push
jl
inc
sar
test
not
mov
or
inc
(bad)
mov
sbb
pop
lods
and
inc
out
addr16
es
cmps
std
pop
adc
pop
xchg
(bad)
xor
ret
sub
jae
pop
inc
xchg
mov
pop
push
nop
jae
div
(bad)
adc
fst
sbb
inc
sbb
loope
std
xchg
aas
call
add
hlt
mov
clc
inc
push
(bad)
clc
inc
push
(bad)
stos
dec
cmp
sti
cdq
inc
or
inc
iret
test
pop
movs
inc
lea
lock
dec
lahf
hlt
sbb
inc
inc
cmp
cld
and
inc
aad
sbb
std
int3
inc
test
not
mov
or
inc
(bad)
(bad)
clc
dec
inc
gs
cli
push
jl
inc
sar
(bad)
adc
mov
jmp
ret
sub
jae
pop
inc
cld
es
cmps
std
pop
adc
pop
xchg
(bad)
xor
or
sar
add
jmp
jae
loope
std
xchg
aas
call
add
hlt
mov
aas
fst
sbb
inc
sbb
xor
add
jne
cli
mov
popf
pop
mov
retf
sbb
inc
inc
cmp
or
inc
iret
test
pop
movs
inc
lea
inc
ret
jg
cmp
fmul
clc
dec
inc
gs
cli
push
jl
inc
sar
test
not
mov
or
inc
(bad)
mov
sbb
pop
lods
and
inc
out
addr16
es
cmps
std
pop
adc
pop
xchg
(bad)
xor
ret
sub
jae
pop
inc
xchg
mov
pop
push
nop
jae
div
(bad)
adc
fst
sbb
inc
sbb
loope
std
xchg
aas
call
add
hlt
mov
clc
inc
push
(bad)
clc
inc
push
(bad)
stos
dec
cmp
sti
cdq
inc
or
inc
iret
test
pop
movs
inc
lea
lock
dec
lahf
hlt
sbb
inc
inc
cmp
cld
and
push
cmc
imul
loope
std
xchg
aas
call
add
hlt
mov
dec
(bad)
sbb
inc
sbb
and
(bad)
in
inc
cmc
push
mov
xor
inc
out
scas
aas
xor
dec
jl
std
fdivr
add
mov
or
inc
(bad)
(bad)
clc
dec
aas
gs
cli
push
jl
inc
sar
(bad)
adc
jg
dec
(bad)
adc
ret
inc
iret
imul
mov
jae
idiv
adc
dec
inc
das
dec
inc
sbb
loope
std
xchg
inc
call
add
hlt
mov
clc
inc
je
add
in
jno
add
clc
push
inc
or
lahf
inc
cmp
inc
or
mov
retf
sbb
inc
inc
cmp
or
inc
iret
test
pop
movs
inc
lea
ltr
adc
xlat
pop
call
inc
(bad)
jnp
jle
loope
mov
jae
std
fdivr
add
mov
hlt
iret
icebp
cmps
daa
mov
aas
or
shr
dec
aas
(bad)
mov
mov
add
push
inc
ret
inc
cmp
cmps
in
es
std
(bad)
add
pop
lea
lock
jle
aas
hlt
sbb
dec
inc
cmp
pop
cld
and
aas
repz
hlt
inc
or
loope
mov
add
push
in
es
aas
ja
add
sub
xchg
inc
cld
(bad)
adc
dec
cdq
(bad)
xor
loop
add
pop
sbb
jg
mov
add
addr16
xlat
loope
cld
and
aas
repz
hlt
inc
or
loope
mov
add
push
in
es
std
fcomp
xor
xchg
jae
mov
mov
cmc
cmps
das
mov
xchg
lods
cld
and
dec
popf
xor
imul
(bad)
adc
pop
stc
in
jae
jg
pop
lock
iret
imul
push
je
out
inc
ret
sub
add
arpl
daa
inc
lahf
jecxz
ds
xchg
add
pop
clc
dec
inc
cmp
pop
cld
and
aas
repz
hlt
inc
or
loope
mov
add
push
not
push
je
out
jg
popa
sti
sub
pop
inc
ja
jg
sub
not
ret
cs
inc
pop
call
inc
or
std
aas
ret
sub
xchg
pop
fs
jg
aas
popa
ss
pop
inc
rol
in
jl
inc
outs
pop
cli
inc
outs
pop
sbb
scas
or
js
lds
sub
xchg
jmp
or
sbb
jg
push
loope
fild
(bad)
mov
movs
push
cmc
sar
fcomip
jo
add
add
jp
jbe
call
fcomip
dec
(bad)
mov
xor
push
fwait
inc
js
cmc
or
jle
js
ret
push
xor
iret
mov
sbb
dec
mov
and
jbe
dec
pop
mov
add
test
mov
mov
mov
push
test
mov
out
and
movs
dec
ss
fsubr
and
xchg
rcl
ja
xchg
xor
scas
in
push
inc
xor
pop
cdq
mov
imul
in
cmps
push
jmp
ret
pop
or
int
loop
mov
add
(bad)
pop
dec
stos
les
or
enter
cmp
ds
xlat
je
mov
int
cdq
test
(bad)
retf
popf
fmul
add
lods
je
dec
and
call
xchg
mov
out
inc
xlat
scas
scas
popa
aam
imul
mov
ss
cmps
push
clc
(bad)
sti
or
xor
(bad)
cmp
aaa
shl
push
mov
cmc
sbb
shr
xchg
jb
dec
jg
mov
repz
adc
and
ret
jecxz
aad
arpl
xchg
retf
jne
enter
and
mov
push
xchg
clc
in
aaa
aaa
sub
clc
pop
mov
dec
inc
sar
push
push
jl
aad
clc
jnp
pop
push
hlt
js
(bad)
imul
xchg
or
jne
mov
push
xchg
xchg
retf
into
(bad)
inc
sub
lock
xchg
push
fwait
sub
les
shl
cwde
jecxz
in
mov
(bad)
dec
add
int
pushf
lods
sbb
hlt
jecxz
jle
inc
ror
out
sbb
sar
mov
fld
mov
iret
xchg
dec
inc
fs
push
(bad)
daa
xchg
outs
jge
aas
loopne
cld
adc
loope
cmp
loop
xchg
push
aam
sub
fimul
ins
addr16
or
rcl
in
adc
xor
xor
mov
pop
clc
in
fwait
outs
or
jne
push
push
sahf
aaa
xchg
dec
in
cmp
and
add
stos
jmp
lock
scas
add
add
jns
push
jno
movs
inc
xor
cmps
fmul
adc
jl
into
add
push
mov
scas
clc
es
in
dec
mov
jg
adc
in
pop
pop
xor
dec
ja
xchg
sub
in
in
les
mov
sbb
xor
loop
test
sub
fnstenv
fadd
lock
inc
gs
inc
or
or
bound
sub
(bad)
inc
(bad)
cmc
outs
or
loope
ss
cmps
js
cmc
sub
inc
es
div
jmp
fs
fsub
mov
das
or
mov
das
mov
hlt
div
gs
movs
push
cmp
enter
pushf
test
adc
xor
pop
xchg
lock
ror
mov
pushf
imul
add
clc
cdq
loopne
xchg
fidiv
aam
ror
mov
aaa
xchg
mov
or
std
out
jge
jmp
mov
lock
dec
test
sar
out
faddp
dec
shr
data16
pop
retf
push
pop
xchg
push
dec
daa
in
rol
into
inc
sub
inc
sar
push
lods
inc
loop
sbb
cmp
sbb
add
out
div
pop
adc
add
sti
and
mov
and
cs
out
stos
sbb
jnp
jno
cmp
push
jns
ins
retf
test
hlt
inc
in
cmp
aaa
syscall
mov
mov
xchg
xchg
ja
bound
sbb
sbb
icebp
or
mov
loopne
inc
call
mov
fnstcw
jmp
(bad)
xor
adc
repnz
std
inc
clc
pop
inc
add
clc
dec
loopne
xchg
pop
out
lds
aad
out
bound
pop
imul
stos
movs
push
pusha
dec
fadd
jb
out
mov
mov
icebp
mov
je
mov
fstp
xor
fldl2e
cmp
test
push
jbe
repnz
(bad)
aas
sbb
clc
dec
ret
lea
movs
les
xchg
inc
sbb
push
dec
ss
pop
call
(bad)
in
scas
jl
enter
je
inc
call
sub
lods
or
add
mov
add
popa
sti
xor
adc
sti
imul
or
stos
and
repz
arpl
loope
sbb
test
pop
fmul
ins
xor
in
inc
in
sbb
cmp
std
xchg
mov
add
ds
imul
jns
scas
cmps
xchg
push
adc
add
loope
clc
daa
xlat
sar
push
loop
push
mov
dec
adc
bound
repnz
mov
and
(bad)
xchg
lahf
xchg
(bad)
movs
jge
lock
adc
(bad)
icebp
mov
lock
fidiv
imul
outs
frstor
cmp
in
cmp
cmp
lock
lds
mov
add
das
adc
ja
das
cmp
or
cmp
out
out
jmp
inc
loopne
xchg
iret
gs
sub
ss
xor
test
les
in
stc
sbb
cs
out
mov
movs
pop
js
pop
mov
int
out
outs
sub
jecxz
sbb
mov
scas
(bad)
mov
pop
adc
pop
push
mov
les
fimul
cmp
mov
and
adc
cmp
lahf
dec
fbstp
jg
mov
outs
(bad)
fimul
mov
lods
xlat
dec
jge
dec
loop
cdq
bound
add
mov
in
out
adc
clc
daa
out
mov
cmp
rcr
xlat
aaa
mov
mov
pop
adc
fisttp
cmps
add
or
div
daa
movs
jnp
jle
lahf
mov
pushf
xchg
sahf
adc
sbb
jno
cmps
jo
sbb
inc
or
cs
loop
xchg
(bad)
int3
fild
icebp
inc
(bad)
iret
or
sbb
mov
cmps
xor
cmp
adc
inc
in
fnclex
mov
sub
push
es
and
pushf
push
dec
pop
idiv
ret
in
stos
jecxz
scas
lods
adc
nop
jl
std
mov
syscall
dec
lods
push
inc
lahf
inc
jge
dec
mov
outs
pop
adc
jbe
and
cmps
and
loop
mov
dec
icebp
xlat
in
inc
lock
shl
sbb
retf
stos
leave
mov
data16
popa
sbb
test
jge
out
js
dec
dec
adc
add
mov
mov
cmp
shl
loop
gs
inc
adc
cmp
xchg
jl
sti
aaa
jg
scas
mov
int3
repnz
mov
sbb
(bad)
fxch
das
imul
mov
add
mov
xor
mov
inc
icebp
dec
mov
sub
xlat
mov
das
mov
test
scas
pop
xchg
in
lock
pop
test
mov
sbb
jne
ret
in
repz
dec
out
repnz
ja
jl
pop
lods
inc
in
push
es
ret
mov
in
sti
add
fisubr
idiv
mov
cmp
test
pop
xor
push
lods
(bad)
ret
pop
sbb
mov
std
mov
dec
clc
jnp
sbb
mov
test
stos
cmp
and
add
in
mov
or
cmc
mov
aas
test
xchg
push
mov
lods
mov
or
out
iret
in
repz
lahf
and
dec
inc
mov
test
pop
pop
sti
dec
inc
pop
or
daa
sti
xor
inc
rcr
fistp
xor
dec
sub
sub
test
jae
cmps
cld
add
sti
inc
imul
aas
test
pop
adc
cmp
and
jp
scas
mov
imul
aas
fst
popa
mov
(bad)
imul
rcr
repz
in
add
xchg
push
jns
adc
cld
dec
push
lahf
clc
sbb
pop
cmps
sub
mov
xchg
inc
cmp
jbe
aaa
or
sbb
cmp
pop
in
gs
sub
jg
jne
add
mov
inc
icebp
push
(bad)
pop
jmp
push
mov
fdivr
inc
aad
std
movs
ins
jl
mov
pop
xchg
fidiv
es
inc
or
pusha
loop
jg
push
push
mov
push
mov
ror
test
in
mov
stc
adc
mov
jg
fwait
loop
test
sub
arpl
std
jecxz
das
scas
js
cmp
mov
ins
sbb
cld
adc
jge
dec
mov
fidiv
mov
mov
jnp
sbb
daa
nop
out
ds
add
(bad)
mov
push
add
xor
dec
aam
in
push
retf
push
aaa
test
idiv
aam
gs
or
push
loopne
dec
pop
outs
pop
sar
int3
(bad)
enter
inc
sbb
pop
addr16
jo
jle
(bad)
mov
jecxz
scas
lahf
(bad)
xor
mov
dec
bound
imul
and
mov
idiv
pop
les
clc
pop
cmps
imul
faddp
cmc
pop
aaa
outs
mov
lock
retf
lahf
clc
sub
add
outs
xchg
or
jno
lods
mov
ins
(bad)
jnp
pop
cmp
pushf
xchg
(bad)
cmp
pop
cld
sub
das
(bad)
pop
pop
pop
js
ret
mov
loope
and
inc
jp
jg
inc
adc
mov
push
out
or
push
int
push
xor
outs
not
and
cmc
and
arpl
add
xchg
pop
adc
jbe
div
in
cs
push
cmc
das
mov
add
clc
or
les
jg
cmc
cdq
hlt
jg
mov
mov
inc
mov
mov
pop
sbb
cli
mov
push
imul
dec
mov
aas
sbb
inc
loope
dec
ret
test
xchg
xor
aaa
sbb
xchg
adc
lock
scas
scas
fdivr
push
pop
xchg
dec
add
or
outs
and
and
bound
sbb
push
xor
add
pop
inc
pop
mov
mov
ud2
imul
mov
aaa
call
cmp
sbb
mov
pushf
pop
loope
fidiv
or
xchg
cs
test
inc
aam
or
into
push
out
or
jecxz
jbe
mov
scas
fsubr
scas
mov
add
add
sbb
les
pop
mov
xor
pusha
pop
loop
adc
ret
(bad)
ret
stc
inc
test
test
push
(bad)
out
(bad)
sbb
cmp
stos
xchg
sub
ins
stc
sbb
out
in
sbb
ret
mov
fwait
inc
ins
and
retf
movs
fstp
sar
mov
repz
mov
sbb
mov
out
sbb
test
scas
push
jmp
mov
cmps
mov
in
repz
sub
sbb
sbb
jo
jnp
das
rcr
loope
cmp
fdivr
loop
std
push
out
out
sub
jnp
xor
(bad)
repnz
xor
pop
(bad)
out
adc
sti
pop
push
pop
pop
jl
sti
push
sbb
fcomp
jmp
jns
mov
(bad)
iret
int
les
sbb
out
pop
aad
inc
jg
mov
dec
mov
dec
stos
jmp
jne
cmp
div
push
cmp
es
add
add
fs
dec
pop
es
mov
mov
ret
div
std
xchg
hlt
pop
fnstcw
jl
jno
je
dec
and
sbb
push
add
jno
inc
sysexit
repnz
sbb
adc
shl
push
jecxz
push
jmp
dec
add
mov
add
mov
movs
pop
pop
push
fwait
push
in
mov
push
push
in
mov
inc
dec
mov
mov
xor
rcr
push
push
mov
adc
mov
pop
mov
call
inc
cmp
popf
iret
movs
aas
loopne
jg
ja
cmp
std
and
inc
xchg
xor
std
test
add
stos
mov
inc
leave
fistp
(bad)
fdivr
xchg
mov
dec
xadd
not
xchg
rcl
es
repz
fist
mov
xchg
jle
jns
mov
push
fwait
setae
repnz
mov
inc
popa
sahf
cmc
loop
lock
adc
loopne
and
(bad)
sti
outs
sub
sar
xchg
cmp
pop
idiv
push
mov
movs
call
leave
imul
lahf
in
and
xchg
push
add
or
jg
(bad)
dec
and
fdiv
mov
scas
lods
outs
(bad)
lahf
stos
imul
loope
aas
movs
jne
adc
push
adc
js
push
stc
hlt
in
inc
ficom
mov
adc
adc
cmp
enter
add
lock
in
fcomp
sbb
data16
or
inc
mov
popf
or
jnp
dec
clc
pop
test
xor
xor
mov
xor
imul
lock
aam
jg
inc
stos
jg
mov
loope
mov
sar
ins
cs
lahf
loop
add
cmc
scas
xor
dec
clc
cmp
sbb
jne
dec
dec
fcomip
stc
xor
cld
jne
xchg
add
arpl
dec
xor
xlat
xchg
loope
pop
aas
dec
mov
fucomi
dec
data16
cli
adc
outs
stc
sub
mov
inc
rol
cmc
lahf
clc
dec
mov
and
mov
pop
aad
jge
inc
add
sbb
aad
add
sti
and
add
rcr
xchg
test
pop
mov
or
enter
aas
idiv
push
(bad)
add
data16
inc
mov
cmp
out
clc
ja
or
fstp
sub
xor
add
sub
xlat
in
icebp
jno
xchg
cmp
push
jbe
adc
inc
cs
sub
int
aad
pop
cld
adc
in
std
lea
and
fimul
aas
std
sub
mov
outs
pop
neg
cmp
inc
sbb
stos
lods
call
mov
imul
sub
cmp
sub
aas
clc
outs
dec
in
xor
ja
cli
add
mov
(bad)
pop
sbb
pop
cld
or
jmp
adc
lods
hlt
retf
test
dec
cmps
retf
jae
mov
repz
xor
push
and
repnz
in
sti
sti
dec
jmp
repz
push
jg
lock
lea
inc
dec
sbb
jg
arpl
aas
xchg
pop
add
in
mov
cli
cs
(bad)
clc
and
inc
pop
adc
std
sbb
cmps
out
xchg
mov
idiv
or
dec
js
loope
iret
xchg
adc
jns
lods
sub
dec
imul
retf
pop
das
(bad)
out
sti
mov
imul
sub
pop
hlt
lock
add
sub
jg
pop
jg
lods
cld
xor
add
jge
sti
dec
aas
xchg
sti
adc
vandnps
test
sbb
sbb
jb
paddsb
pop
add
ret
aas
cmc
in
sahf
mov
daa
loop
ret
imul
pop
clc
daa
dec
mov
scas
arpl
int3
adc
scas
jle
fidivr
jecxz
in
pop
xor
push
pop
ret
out
or
imul
jns
jno
setp
inc
imul
mov
ins
push
push
push
xchg
xlat
dec
shl
inc
add
and
mov
sbb
sbb
imul
out
fistp
and
mov
xor
sbb
push
retf
cmps
clc
pop
adc
push
cs
gs
not
aas
cmp
push
idiv
std
mov
neg
push
mov
inc
adc
call
inc
es
pop
push
xchg
cmp
(bad)
mov
aas
xchg
std
mov
mov
iret
ins
jo
fnstsw
leave
sti
mov
xor
pushf
lahf
pusha
movs
push
xchg
jg
dec
cld
movs
js
not
ret
mov
(bad)
std
stos
scas
(bad)
ficomp
mov
shl
pop
fld
xor
fdiv
and
sbb
add
xor
fimul
scas
cli
inc
xlat
push
scas
ror
fisubr
xchg
lock
in
in
loope
cmp
and
lods
in
dec
ins
add
ja
out
std
icebp
int
push
shl
cld
gs
xchg
lods
outs
sti
jg
push
scas
ror
retf
test
push
pop
push
pop
push
fucom
mov
mov
pop
retf
sbb
xchg
fist
outs
push
inc
adc
not
mov
je
mov
stc
pop
jo
rcr
(bad)
in
ror
std
jg
jg
push
sub
aaa
jae
jge
ficom
sbb
dec
pop
add
adc
and
movs
inc
sti
adc
inc
pop
mov
pop
iret
jbe
xchg
lds
ins
jbe
add
imul
mov
cld
adc
dec
(bad)
inc
cli
mov
xchg
dec
push
inc
pop
repnz
jbe
add
imul
mov
test
cld
xor
cmp
add
cli
pop
xor
leave
pop
repnz
loope
add
movs
xchg
push
cmp
pop
cmp
dec
(bad)
xor
dec
adc
jnp
push
ret
or
sbb
imul
ins
jae
jns
nop
mov
and
repz
fmul
out
iret
fst
inc
lods
stos
cmp
hlt
and
into
inc
cmp
mul
mov
neg
aad
mov
lock
sbb
mov
outs
mov
inc
mov
loope
or
add
add
cmc
stc
loope
or
sahf
iret
ret
lahf
mov
mov
mov
mov
cmps
repnz
cld
jbe
mov
jmp
inc
and
dec
sahf
test
int
loope
leave
and
or
jne
retf
mov
std
mov
pop
ja
add
inc
xchg
cmc
clc
cmp
add
mov
xchg
mov
icebp
ficomp
xchg
sahf
lea
pop
test
lock
and
jns
in
daa
aam
ret
(bad)
imul
xor
add
ret
loopne
pop
cmp
and
fstp
test
inc
daa
outs
lock
inc
mov
xchg
loop
stos
jle
pop
pop
add
add
mov
cld
aas
ja
je
xor
jge
imul
push
js
(bad)
dec
shr
leave
mov
xor
dec
mov
ja
jmp
pop
outs
cmp
push
add
mov
mov
jbe
and
add
inc
pop
lahf
scas
adc
inc
mov
ret
jg
sahf
cmp
(bad)
mov
pop
pop
mov
cwde
xor
cmp
repz
aad
cmp
xlat
xchg
pop
adc
neg
clc
inc
aas
test
jne
mov
xor
xchg
popa
outs
sub
pop
shl
mov
ds
cmp
xchg
stos
sar
loope
das
xchg
in
cmp
repz
out
mov
shl
ret
dec
push
pop
dec
mov
call
test
repnz
test
fcmovb
addr16
mov
mov
ror
das
pop
jl
lock
mov
or
imul
and
loopne
mov
pop
pop
cmp
cmp
xor
sub
pop
cmp
enter
and
js
cld
push
and
loope
std
ja
inc
rcl
pop
dec
push
loop
test
push
ins
int
jmp
pop
out
imul
jae
das
out
pop
(bad)
dec
mov
retf
mov
mov
mov
mov
loop
mov
add
fnstsw
bound
jns
push
ret
int
xor
inc
mov
loopne
arpl
adc
clc
xchg
das
inc
xor
push
bnd
inc
std
mov
inc
jmp
aam
and
add
or
xchg
aad
jno
xor
add
and
fwait
jecxz
scas
(bad)
fnsave
lods
xchg
xchg
frstor
mov
lock
cld
adc
loop
xchg
cdq
sti
pop
cld
sbb
imul
int
push
leave
inc
xlat
sub
pop
dec
adc
sub
xor
cmc
out
or
inc
(bad)
(bad)
sbb
push
pop
(bad)
and
add
inc
rcr
push
clc
icebp
lods
std
stos
dec
cmp
adc
shl
ss
inc
pop
imul
xlat
out
(bad)
xor
rcr
add
jl
pop
mov
(bad)
hlt
popa
dec
sub
aam
mov
iret
les
aaa
(bad)
xchg
retf
pop
sub
add
jp
mov
mov
lock
adc
sti
ja
pop
xchg
aaa
jns
test
or
hlt
cld
imul
clc
sub
adc
push
inc
jns
jmp
repz
inc
or
cmc
ins
jge
test
jecxz
fst
(bad)
mov
stc
jl
lock
ret
cmp
jp
xchg
cmps
fimul
es
mov
inc
retf
cmc
sbb
sbb
test
call
add
test
sbb
aad
retf
sbb
jno
jno
and
icebp
mov
adc
adc
dec
mov
jmp
out
and
xchg
push
pop
in
sub
aas
mov
(bad)
ficomp
mov
push
mov
mov
imul
adc
cmp
idiv
ds
pop
push
cld
cmp
popa
popa
ja
cmp
outs
nop
mov
in
and
scas
imul
(bad)
iret
test
or
sub
call
test
shl
xchg
inc
test
out
xor
retf
loope
mov
adc
cmp
imul
(bad)
out
repnz
aas
fimul
and
hlt
add
scas
inc
sar
in
daa
loop
sbb
aam
dec
cmp
jle
leave
out
out
pop
sub
ss
push
aaa
sar
(bad)
fistp
adc
jg
pop
(bad)
test
(bad)
loope
xor
add
xchg
sbb
mov
and
lock
pop
imul
test
outs
push
pop
mov
add
cmp
xlat
test
add
into
xchg
jecxz
(bad)
retf
jno
xchg
jb
dec
cdq
ret
pusha
test
inc
loopne
aas
bnd
or
add
scas
sub
push
enter
or
or
leave
pop
sub
inc
ficom
mov
dec
clc
mov
adc
(bad)
sbb
and
jns
pop
mov
add
add
pop
repz
sub
jl
jb
cwde
loope
dec
nop
xor
sbb
pop
mov
lahf
mov
in
test
and
jnp
data16
fnstcw
inc
and
dec
addr16
jle
jg
daa
ret
jge
idiv
mov
stos
jmp
inc
stc
nop
movs
aam
(bad)
push
push
mov
inc
std
mov
adc
pop
jmp
call
mov
call
xchg
xchg
out
add
fbstp
xchg
loop
or
lods
cmp
rol
dec
ss
jne
mov
push
cmc
fsubr
add
pop
imul
push
out
sti
pop
into
out
idiv
add
mov
pop
imul
pusha
retf
push
fmul
jge
iret
iret
clc
sub
cmp
push
shr
ins
loopne
mov
(bad)
dec
mov
fs
outs
sbb
sub
jo
mov
retf
push
inc
jge
hlt
retf
dec
mul
jge
xlat
loope
xor
jge
sub
mov
xlat
out
mov
mov
xlat
adc
iret
push
jno
std
ret
push
push
lock
sbb
(bad)
inc
xchg
rcl
mov
dec
aas
ins
sub
and
push
and
inc
ficom
(bad)
ins
sbb
sub
push
sub
push
sub
push
sub
push
sbb
cmp
jg
jle
pop
imul
push
inc
fild
sub
test
push
mov
xor
mov
xlat
(bad)
mov
dec
adc
sti
pop
js
(bad)
fdivr
xchg
mov
jp
hlt
inc
daa
out
xor
mov
sub
xor
cmps
(bad)
cld
inc
test
ins
jo
push
inc
cmp
jb
push
jp
in
lods
push
icebp
lahf
(bad)
(bad)
hlt
ja
cld
dec
jecxz
jg
shl
jns
pop
test
ins
sbb
test
into
into
out
sar
lds
pop
adc
into
cmps
movs
imul
mov
or
push
pavgw
clc
scas
loop
mov
jecxz
jle
pop
aam
fidiv
inc
jne
inc
pop
pusha
sub
xor
jbe
pop
mov
lds
xor
mov
mov
ins
popa
push
div
mov
sub
or
mov
sar
jecxz
jnp
sar
pop
fcomp
adc
outs
jl
leave
cmp
jae
push
test
inc
xor
pop
call
pop
retf
pop
pop
cmp
jbe
sub
repnz
dec
je
adc
and
xchg
xchg
fistp
pop
mov
(bad)
repz
scas
or
cmc
xchg
mov
cmp
imul
clc
iret
(bad)
push
xor
cdq
test
les
mov
sub
xchg
ret
dec
shr
cmp
mov
fild
(bad)
rcr
jg
sahf
adc
mov
movs
imul
or
mov
das
loopne
test
inc
ficomp
in
lahf
(bad)
jle
icebp
pop
popf
jl
(bad)
xor
or
jbe
xchg
xchg
xchg
adc
sub
lock
push
(bad)
push
lock
ja
jmp
(bad)
and
test
sub
ins
sbb
xchg
bound
scas
mov
clc
mov
add
leave
cdq
in
mov
or
pop
lock
movs
lock
cmp
lock
ins
dec
ret
out
test
popa
sub
enter
(bad)
mov
mov
push
dec
enter
jecxz
push
clc
iret
loop
lods
imul
push
xchg
repnz
or
fidivr
clc
movs
loop
add
inc
(bad)
mov
pop
(bad)
mov
std
int3
dec
pop
dec
test
mov
das
arpl
pop
ror
mov
scas
(bad)
jns
mov
pop
mov
hlt
dec
addr16
lods
dec
sbb
(bad)
repnz
outs
loop
(bad)
cmp
icebp
jnp
mov
mov
cld
inc
jbe
ins
dec
jns
sub
out
adc
push
mov
mov
mov
out
ds
fisttp
inc
push
hlt
(bad)
sar
sbb
sub
int
xor
stos
mov
scas
loope
outs
mov
out
mov
mov
std
jg
add
jge
jg
jg
mov
cmp
popa
jnp
popf
call
inc
push
(bad)
push
lock
mov
arpl
cmp
fidivr
arpl
aas
lock
push
adc
add
movs
and
repz
fidiv
rcl
dec
sbb
add
fild
fisttp
addr16
sub
push
sub
cs
and
imul
not
jecxz
jnp
shl
cmp
call
mov
jmp
test
mov
inc
clc
in
push
ret
shl
(bad)
push
jmp
jbe
or
adc
cmp
jnp
dec
cmc
mov
sub
inc
pop
daa
inc
icebp
fidivr
sbb
std
jecxz
out
(bad)
rsqrtps
xchg
jge
xchg
fild
cmp
cmp
fwait
shl
psraw
mov
sub
(bad)
sub
(bad)
(bad)
sar
fsub
call
daa
jl
lock
test
mov
xchg
outs
mov
icebp
inc
test
adc
pop
into
fidiv
shr
and
cmp
add
dec
test
xor
jae
and
imul
aad
jg
jle
(bad)
icebp
daa
pop
push
jnp
mov
cmps
call
mov
stos
je
and
cld
pop
jecxz
pop
js
pop
mov
push
push
mov
pop
pop
mov
and
(bad)
dec
dec
jae
jne
add
loop
xor
cld
arpl
mov
mov
in
(bad)
dec
retf
loop
not
mov
mov
pusha
out
(bad)
xor
clc
int
cmp
(bad)
and
test
cmp
mov
sbb
add
xchg
or
mov
test
scas
mov
lds
mov
(bad)
fldcw
cmp
fcomp
shl
jae
shr
mov
cmp
cmp
sub
mov
sub
mov
jl
loope
adc
les
xchg
lahf
mov
iret
stos
(bad)
jb
add
fistp
into
dec
jge
sbb
inc
cmp
cmp
(bad)
jecxz
mov
pop
aaa
mov
push
stos
js
sub
outs
pop
push
sbb
pop
imul
(bad)
clc
aas
loopne
ret
ret
add
pop
xchg
push
cli
jge
xchg
jmp
daa
jae
sahf
std
jns
xchg
add
js
leave
pop
push
push
mov
push
(bad)
rcr
out
in
push
icebp
sbb
pop
mov
ins
and
pop
imul
sub
xor
add
and
xchg
adc
clc
pop
les
(bad)
push
mov
shl
xor
(bad)
add
in
mov
movs
sbb
xchg
dec
ins
mov
xor
sub
inc
add
pop
push
push
jg
sahf
sub
fidivr
in
push
push
lahf
push
aam
outs
outs
cmc
sbb
cwde
retf
sub
dec
fisub
pushf
sti
call
mov
pop
mov
(bad)
mov
loop
aam
adc
retf
cmps
movs
jno
sahf
ds
call
dec
test
imul
int
push
fstp
mov
fild
cmp
popf
popf
in
add
mov
push
icebp
inc
imul
push
xchg
pop
xor
jl
jecxz
outs
sti
pop
lds
out
loop
inc
mov
push
mov
mov
jbe
mov
mov
and
mov
mov
mov
pop
enter
je
ret
add
hlt
jge
idiv
nop
fist
cmc
shl
dec
test
shl
call
pop
mov
inc
cmp
add
dec
out
in
jae
int3
mov
cmp
mov
call
out
push
adc
xchg
shl
idiv
movs
mov
xchg
mov
mov
sbb
and
mov
das
clc
pop
xor
dec
test
inc
dec
xor
xor
jmp
daa
icebp
cmps
imul
icebp
outs
lea
mov
cmp
scas
outs
mov
jnp
cmp
add
shl
in
mov
fdivr
fstp
lahf
sbb
lahf
icebp
add
shl
inc
sbb
fidivr
cmps
ficomp
ret
es
or
pop
pushf
xor
(bad)
cmp
dec
clc
aas
cmps
mov
cmp
test
jge
aaa
adc
mov
inc
test
movs
in
popa
fdivr
fldenv
fidiv
icebp
pop
lods
jns
outs
sbb
sti
pop
mov
xchg
jb
mov
fcom
loopne
fimul
out
ret
sbb
js
push
shl
arpl
jp
enter
mov
jbe
mov
popa
or
into
ret
lds
icebp
aas
les
ds
pop
aad
ins
aaa
aaa
rcr
sbb
iret
fstp
ret
mov
mov
hlt
adc
mov
stos
lea
jno
mov
cmp
push
fidiv
aam
push
in
mov
mov
push
(bad)
xor
sub
in
lods
and
shl
pop
mov
mov
push
sub
mov
add
add
movs
fild
sub
sar
cmp
push
jg
(bad)
(bad)
nop
fcmovnbe
into
xchg
hlt
jg
adc
dec
(bad)
lahf
mul
inc
movs
ss
rep
dec
adc
out
out
inc
dec
inc
imul
inc
dec
inc
push
or
and
push
mov
pusha
mov
pop
cs
inc
dec
inc
push
or
and
push
mov
pusha
mov
pop
cs
inc
dec
inc
push
or
and
push
mov
pusha
mov
pop
cs
inc
dec
inc
push
or
and
push
mov
pusha
mov
pop
cs
inc
dec
inc
push
or
and
push
mov
pusha
mov
pop
cs
inc
dec
inc
push
or
and
push
mov
pusha
mov
pop
cs
inc
dec
inc
push
or
and
push
mov
pusha
mov
pop
cs
jp
data16
rol
in
mov
stos
xor
in
xchg
mov
mov
rol
pop
adc
call
fild
jge
push
es
shl
pop
and
inc
ficom
pop
(bad)
ins
sbb
mov
mov
and
inc
fidivr
pop
xor
imul
push
cld
adc
dec
(bad)
lahf
mul
inc
movs
ss
rep
jge
inc
add
mov
inc
jmp
pop
push
(bad)
adc
adc
cwde
retf
push
les
lahf
inc
add
mov
cld
or
ret
(bad)
cmc
and
dec
push
jmp
jo
and
call
jbe
push
mov
mov
dec
mov
jbe
loope
sbb
mov
neg
addr16
out
(bad)
push
mov
ins
stc
push
sti
add
and
(bad)
sub
pop
addr16
mov
cwde
aas
loopne
inc
adc
jae
inc
xchg
jmp
(bad)
nop
test
scas
mov
adc
outs
inc
fnstsw
cmp
add
aaa
inc
add
stc
push
(bad)
lods
push
out
push
into
inc
enter
fcomip
jmp
add
aaa
inc
add
stc
push
(bad)
clc
jne
add
outs
cli
sbb
inc
xor
addr16
sbb
jmp
clc
jne
add
outs
cli
sbb
inc
xor
loop
std
or
or
scas
inc
jmp
sti
(bad)
fxch
stc
push
mov
sti
(bad)
sbb
xchg
push
inc
loopne
xlat
inc
and
inc
push
mov
inc
pop
cmp
jmp
add
loop
jb
inc
mov
xchg
push
inc
mov
sbb
add
hlt
jg
scas
(bad)
sub
shl
cld
or
jp
mov
mov
rcr
jg
scas
(bad)
sub
shl
cld
or
jp
loope
inc
adc
outs
inc
fnstsw
cmp
cmp
scas
scas
mov
adc
outs
inc
fnstsw
cmp
add
aaa
inc
add
stc
push
(bad)
lods
push
out
push
into
inc
enter
fcomip
jmp
add
aaa
inc
add
stc
push
(bad)
clc
jne
add
outs
cli
sbb
inc
xor
addr16
sbb
jmp
clc
jne
add
outs
cli
sbb
inc
xor
loop
std
or
or
scas
inc
jmp
sti
xchg
cmc
idiv
cmp
loop
std
or
or
scas
inc
(bad)
sbb
xchg
push
inc
loopne
xlat
inc
and
cmc
mov
fxch
stc
push
mov
sti
(bad)
sbb
xchg
push
inc
loopne
xlat
inc
and
inc
push
mov
inc
pop
cmp
jmp
add
loope
in
add
inc
push
mov
inc
jae
inc
xchg
call
cld
push
inc
mov
sbb
add
hlt
jge
lahf
jo
jb
inc
mov
xchg
push
inc
mov
sbb
add
hlt
jg
scas
(bad)
sub
shl
cld
or
jp
mov
mov
rcr
jg
scas
(bad)
sub
shl
cld
or
jp
loope
inc
adc
outs
inc
fnstsw
cmp
cmp
scas
scas
mov
adc
outs
inc
fnstsw
cmp
add
aaa
inc
add
stc
push
(bad)
lods
push
out
push
into
inc
enter
fcomip
jmp
add
aaa
inc
add
stc
push
(bad)
clc
jne
add
outs
cli
sbb
inc
xor
addr16
sbb
jmp
clc
jne
add
outs
cli
sbb
inc
xor
mov
or
or
scas
inc
jmp
sti
(bad)
fxch
stc
push
mov
sti
(bad)
sbb
xchg
push
inc
loopne
xlat
inc
and
inc
push
mov
inc
pop
cmp
jmp
add
loop
jb
inc
mov
xchg
push
inc
mov
sbb
add
hlt
jg
scas
(bad)
sub
shl
cld
or
jp
mov
mov
rcr
jg
scas
(bad)
sub
shl
cld
or
jp
loope
inc
adc
outs
inc
fnstsw
cmp
cmp
scas
scas
xchg
adc
add
mov
add
sbb
add
cmc
popf
scas
jg
xor
xlat
push
xlat
mov
gs
lods
outs
in
not
dec
lahf
fwait
or
cmps
fdivr
scas
inc
clc
xchg
cmp
dec
clc
push
push
cld
push
loopne
sti
or
aaa
xor
inc
(bad)
fcmovnb
into
stos
clc
call
nop
inc
test
lods
arpl
retf
inc
dec
outs
adc
call
hlt
push
add
cmps
rol
mov
mov
add
sub
push
add
cmps
rol
mov
mov
add
sub
push
add
cmps
rol
mov
mov
add
push
cld
adc
idiv
std
mov
mov
mov
add
fdivr
(bad)
fdivr
xchg
mov
add
mov
fild
rcr
mov
dec
test
cmp
movs
cmp
dec
popa
lahf
movs
pop
ds
inc
add
jle
lock
dec
dec
sub
and
in
aaa
jae
jb
arpl
in
adc
inc
aad
jmp
jmp
xchg
sahf
pop
out
jb
adc
out
push
jle
mov
icebp
mov
inc
mov
les
(bad)
ds
gs
call
fsubr
sub
jns
mov
jne
iret
fidivr
popf
rcr
mov
arpl
out
inc
in
daa
in
les
mov
sbb
jg
cld
inc
aad
mov
aas
cmps
pop
jmp
test
pop
mov
shrd
fs
jne
mov
pusha
imul
mov
sar
adc
mov
push
jae
adc
cmps
call
jmp
mov
(bad)
cdq
cld
ja
out
aas
or
test
iret
cmps
lods
fucomip
in
pop
and
pop
inc
push
aas
lea
push
xchg
sbb
pop
lea
icebp
aas
loop
fwait
icebp
sbb
mov
mov
icebp
add
push
icebp
std
scas
jmp
inc
xor
neg
movs
ret
sti
xor
xor
bnd
iret
sahf
pop
ss
mov
xor
ror
cmp
push
cmp
xchg
cmps
ds
cmp
xchg
movs
lods
add
scas
addr16
jmp
cmps
js
mov
cli
pop
add
sub
lds
(bad)
mov
dec
cmp
(bad)
and
add
xchg
(bad)
cmp
jp
xchg
loopne
cmp
out
mov
fwait
push
xchg
outs
ret
into
mov
push
sbb
xchg
sbb
les
dec
fild
aaa
add
iret
imul
vpmaddwd
(bad)
mov
xor
dec
(bad)
fistp
loop
jb
leave
int
call
mov
ins
sub
push
xlat
mov
lods
sub
cwde
or
adc
scas
inc
push
(bad)
mov
loop
ret
femms
pop
dec
lock
jnp
out
lods
xor
xchg
idiv
xlat
enter
add
lds
sti
cmp
icebp
push
mov
cmp
mov
cld
fistp
inc
adc
or
inc
cmp
popa
jl
shl
xchg
test
sub
xchg
jne
dec
mov
lahf
mov
mov
cli
pop
cld
std
(bad)
shr
pop
into
(bad)
in
aaa
sbb
mul
ret
scas
sbb
push
out
xchg
(bad)
mov
sbb
xor
mov
imul
fstp
mov
xor
add
ficom
aaa
pushf
arpl
clc
fisttp
sub
xor
int
cwde
in
jp
out
movs
adc
push
jge
clc
sbb
jb
hlt
push
mov
sahf
or
xor
pop
loop
cwde
jne
add
not
mov
loop
cmps
dec
push
std
jbe
sbb
adc
mov
lods
dec
movs
push
jne
scas
mov
dec
icebp
out
out
aas
sbb
mov
rsm
imul
or
enter
xchg
retf
sti
inc
(bad)
dec
fwait
add
mov
mov
inc
clc
out
push
mov
jne
sbb
cdq
add
push
jae
cmp
sti
cmps
mov
aam
jecxz
aam
inc
push
jo
dec
xchg
cmp
xchg
mov
mov
mov
mov
push
xlat
cmps
mov
xchg
nop
xor
jmp
jg
(bad)
jne
xor
rcr
mov
scas
hlt
mov
add
sub
xchg
leave
pop
xchg
rol
sar
and
cmp
pop
or
imul
movs
out
pushf
sbb
int
cmp
push
seta
mov
xor
into
xor
repz
ja
pop
pop
loop
inc
ja
sub
lahf
jmp
jecxz
mov
jnp
cmp
push
dec
loope
pop
fcomp
xor
push
pop
jge
and
ret
pop
xchg
(bad)
xchg
stos
fucomi
jo
push
fcompp
ret
imul
xor
ss
ret
or
sub
push
lock
les
(bad)
lods
cld
jmp
loope
mov
fisubr
(bad)
cmp
sbb
stos
adc
fwait
jbe
push
(bad)
jns
pop
jo
int
es
mov
mov
sti
(bad)
rep
cli
adc
pop
ror
and
sti
mov
or
scas
mov
jg
xor
xchg
mov
hlt
jg
lea
push
rcl
fsub
xor
setnp
cmp
(bad)
cdq
lock
loope
cmp
add
mov
mov
mov
scas
ss
mov
repnz
bound
aam
in
pop
mov
repz
neg
lods
shl
dec
dec
pop
xlat
mov
and
xchg
cmp
hlt
stc
xor
leave
bound
(bad)
sbb
lods
mov
mov
cmps
mov
icebp
cld
jmp
(bad)
fcmovnu
lahf
mov
das
std
and
in
imul
adc
and
rcl
addr16
aaa
imul
mov
lods
mov
pop
or
jg
mov
loope
xor
push
mov
adc
inc
pop
scas
clc
cmps
loope
lea
pop
imul
jp
cmp
lods
mov
cmp
mov
pop
dec
inc
push
movs
pop
fist
jmp
xlat
iret
pop
mov
fdiv
mov
and
dec
lock
jnp
cmc
sti
sbb
jbe
xor
xor
test
pop
mov
push
and
aam
xchg
adc
jp
in
int
ds
repz
(bad)
scas
jnp
mov
push
ret
cmps
aam
scas
clc
in
jl
aaa
ror
shr
xchg
cli
inc
sahf
push
popf
jne
mov
xchg
shr
sub
adc
push
dec
aad
jnp
inc
fnstenv
lahf
dec
xor
hlt
das
(bad)
sbb
js
(bad)
pushw
cs
pop
adc
mov
popa
loopne
add
lds
mov
(bad)
mov
mov
cmps
cdq
fcomp
fucomp
(bad)
int3
dec
out
xor
retf
bound
pop
dec
sub
mov
or
in
sub
dec
scas
xchg
mov
sbb
lods
mov
push
ds
lock
fwait
stos
js
pop
mov
je
push
not
ins
mov
lods
add
sbb
mov
das
or
cmc
jno
js
leave
hlt
jmp
sbb
pop
in
cmp
(bad)
jmp
mov
popf
lock
(bad)
push
sbb
daa
(bad)
call
jecxz
jmp
inc
test
jecxz
push
fisttp
or
mov
int3
mov
pop
ret
lods
xlat
or
pop
mov
or
iret
leave
retf
mov
daa
lahf
mov
jb
das
in
pop
clc
pop
pop
adc
daa
les
imul
imul
call
aas
xor
aam
cmp
imul
mov
sub
pop
inc
sti
push
repz
xor
add
pushf
push
stos
jl
clc
dec
loopne
sbb
fisttp
mov
jle
(bad)
out
xor
int3
(bad)
pushf
ins
ds
jmp
(bad)
and
and
mov
sbb
aaa
mov
push
lahf
repz
inc
adc
das
jnp
sar
sti
dec
mov
mov
sti
(bad)
repz
mov
cld
sar
lock
jne
pop
add
movs
jbe
scas
in
cmp
ret
adc
addr16
aaa
clc
and
cli
ins
fnstsw
fcom
or
mov
daa
shl
sbb
leave
jnp
popf
inc
mov
inc
cli
jmp
mov
out
idiv
pop
clc
mov
jg
aas
mov
sti
(bad)
repz
mov
sub
xor
clc
xchg
jg
push
lock
pop
sub
sbb
dec
mov
in
das
add
jns
dec
jl
lock
xchg
lock
inc
icebp
xlat
xchg
mov
sahf
leave
pop
xchg
or
outs
sbb
mov
sbb
cmps
xchg
clc
test
or
popf
sub
push
jns
fimul
dec
aaa
sbb
push
jb
inc
sub
in
scas
clc
push
cmp
scas
test
xor
out
xchg
sub
repnz
sub
stc
cwde
push
out
xor
mov
adc
push
jns
inc
mov
stos
lock
xor
sti
fstp
jmp
pop
daa
ret
js
(bad)
out
movs
mov
adc
jl
sbb
vhaddpd
jne
outs
imul
into
xor
dec
jmp
mov
push
retf
sub
mov
mov
aam
or
xor
in
dec
dec
mul
into
mov
ds
ds
jg
sub
mov
mov
repz
cmp
aad
add
loope
or
scas
fsubrp
fidivr
fwait
mov
fmul
and
push
jae
(bad)
mov
aam
movs
aas
stos
push
xchg
loope
or
cmp
jmp
retf
rol
int
scas
ror
aam
inc
sub
or
es
arpl
ficom
icebp
out
sub
mov
mov
(bad)
loop
xchg
out
int3
popa
sbb
ds
cs
lahf
mov
and
(bad)
dec
dec
das
mov
cmp
mov
les
iret
cmp
jmp
outs
mov
test
test
sub
(bad)
out
cmp
(bad)
stos
popf
fld
(bad)
xor
aas
popf
pop
fimul
jecxz
aad
sub
scas
addr16
(bad)
(bad)
into
retf
inc
fisubr
mov
je
stos
fstp
and
je
fadd
mov
jbe
pop
test
add
sbb
pop
je
mov
add
not
jp
cmps
and
xchg
outs
leave
pop
sbb
rol
fisubr
lahf
mov
mov
cmp
les
data16
dec
stos
mov
iret
inc
(bad)
jne
neg
and
pop
inc
call
(bad)
sahf
and
xlat
cmp
arpl
mov
mov
cmps
rol
fild
jge
add
mov
cmps
rol
fild
jge
add
mov
cmps
rol
fild
jge
add
mov
cmps
rol
fild
jge
add
mov
cmps
rol
fild
jge
add
mov
cmps
rol
fild
jge
add
inc
cld
adc
idiv
std
mov
mov
mov
add
clc
jmp
fdivr
xchg
mov
not
pop
xchg
movs
(bad)
aaa
jmp
cld
cmps
arpl
nop
popa
xlat
jmp
in
jno
addr16
loop
aas
sti
add
sub
xor
js
dec
daa
xchg
mov
mov
fmul
jo
and
mov
pop
and
mov
stos
leave
sub
in
mov
xor
jns
arpl
pop
imul
xor
ds
push
ins
push
jne
ret
aad
pand
inc
aad
aaa
cmp
imul
mov
test
ja
jge
in
arpl
xchg
sbb
mov
sub
ins
xor
xlat
dec
idiv
movs
xchg
bound
movups
mov
inc
(bad)
adc
loop
sahf
je
cmc
fmul
in
aaa
push
pop
push
frstor
sbb
icebp
inc
mul
mov
shl
hlt
fwait
or
js
retf
xchg
lods
pop
add
out
mov
add
sbb
xor
addr16
jnp
cmp
aad
and
add
stos
clc
xchg
cmps
js
sti
adc
adc
push
das
and
push
(bad)
xor
loope
into
imul
jle
addr16
dec
mov
in
out
loop
in
mov
mov
(bad)
pop
cdq
scas
push
imul
sti
xadd
aas
ret
push
movs
retf
jmp
aad
xor
fs
push
jae
or
das
lods
cs
std
xchg
in
push
or
pop
sar
(bad)
mov
in
add
cmps
ret
js
mov
xchg
aaa
das
out
(bad)
adc
sub
scas
out
add
mov
xchg
sti
dec
jl
shr
lods
ins
cld
dec
icebp
fcmovu
retf
and
inc
not
mov
in
jb
cmp
cmp
cmps
sub
fwait
in
dec
xor
rcr
inc
popf
data16
ins
and
push
mov
inc
stc
or
add
(bad)
pop
cmps
jg
push
icebp
inc
std
sub
xchg
stc
jecxz
(bad)
sar
ds
shl
mov
(bad)
and
retf
jo
add
(bad)
test
push
jle
mov
jne
icebp
daa
cli
gs
dec
adc
jge
(bad)
inc
into
ror
dec
stc
jmp
lahf
mov
jne
sub
inc
das
fs
cmp
(bad)
dec
repnz
mov
repnz
ja
fstp
mov
test
dec
xchg
jns
add
add
and
lock
ret
jno
dec
repz
test
aas
cmovg
das
add
stos
fistp
inc
mov
fcomi
(bad)
(bad)
in
or
fwait
std
mov
mov
cmp
mov
ret
inc
and
mov
pusha
je
jle
jmp
sbb
(bad)
push
sub
jb
jl
mul
xlat
leave
pop
retf
pop
(bad)
mov
mov
sar
or
adc
sti
loope
xchg
pop
loopne
jne
inc
push
aad
mov
cli
popa
xchg
int
js
test
pop
pop
test
ds
scas
imul
mov
xor
mov
jo
gs
adc
daa
repz
scas
iret
dec
add
sar
clc
imul
or
dec
xchg
dec
out
mov
stos
jmp
icebp
js
cld
push
mov
inc
popa
aaa
and
jbe
fs
fist
js
sahf
out
xchg
adc
sub
int
daa
js
jp
pop
cdq
xor
jl
sbb
mov
fimul
pop
cld
cmp
mov
mov
inc
pop
std
dec
dec
mov
retf
and
xchg
fcom
dec
and
pop
test
push
mul
push
lock
fwait
test
and
jbe
bound
ret
neg
mov
les
jp
pop
pop
adc
mov
jg
ret
into
fist
fwait
sbb
loop
mov
push
clc
mov
xchg
(bad)
add
test
mov
cmp
or
mov
(bad)
mov
mov
dec
inc
xchg
retf
fstp
cli
xchg
or
or
aad
repz
(bad)
(bad)
sbb
lods
iret
dec
(bad)
cmp
mov
pop
enter
dec
mov
out
sub
pop
cmp
das
sbb
arpl
inc
(bad)
mov
sbb
out
push
mov
mov
cwde
loop
adc
or
setno
cmp
mov
mov
ret
adc
mov
popa
cmp
(bad)
inc
adc
sbb
or
mov
push
pop
aam
das
int
pop
add
or
hlt
je
xlat
jmp
paddsw
jne
lods
xchg
xchg
enter
jecxz
aam
icebp
fldcw
out
shl
jbe
sbb
arpl
fisttp
aas
xor
rcr
inc
or
inc
xchg
pop
mov
jae
rcr
jl
sti
dec
js
add
sahf
sbb
add
and
xor
add
pop
add
js
neg
cld
cmp
and
or
or
cs
inc
fs
retf
mov
inc
push
movs
cmps
sbb
sbb
sbb
out
sbb
jmp
mov
cmps
jnp
sub
jns
jae
adc
add
push
loop
ret
leave
mov
imul
pop
mov
mov
test
(bad)
mov
adc
push
add
xchg
outs
xchg
or
push
data16
adc
(bad)
out
lahf
mov
jle
ret
cld
pop
test
fs
outs
sysexit
mov
in
popf
out
jne
cli
outs
(bad)
popf
(bad)
cmc
addr16
(bad)
imul
jns
sub
div
jle
call
in
jmp
ret
dec
inc
jecxz
sbb
jg
lahf
add
push
mov
mov
push
out
and
cmp
mov
test
aam
mov
jl
or
dec
pop
dec
retf
jbe
pop
mov
xor
(bad)
mov
retf
pop
pop
pop
cmp
test
sahf
pop
daa
lods
jle
(bad)
lock
adc
jae
push
sub
jb
mov
in
sub
scas
inc
or
je
sub
or
push
test
adc
xchg
aas
bnd
pop
inc
mov
(bad)
xchg
outs
cmp
icebp
xchg
(bad)
xor
sti
inc
ds
repnz
jmp
push
pop
loopne
loop
(bad)
ficom
imul
lods
das
outs
adc
add
sbb
or
shl
adc
ds
jl
jg
imul
jge
dec
sub
icebp
mov
add
aam
shl
pushf
and
scas
fwait
xor
cld
push
xlat
popf
push
jae
mov
mov
sar
das
clc
pop
loop
mov
jno
loop
jmp
popa
int3
sub
add
prefetch
or
jecxz
mov
cmp
daa
mov
dec
jo
shr
pop
jg
fidivr
pop
(bad)
mov
dec
jns
mov
push
add
scas
in
mov
in
sbb
jg
pop
sub
push
jl
dec
(bad)
not
inc
dec
mov
in
jo
icebp
scas
jbe
fstp
jns
push
xor
mov
adc
lods
mov
mov
inc
push
mov
mov
xor
cld
lods
jp
in
push
or
dec
(bad)
inc
jmp
jmp
inc
imul
add
mul
jl
loopne
mov
clc
outs
lods
pop
jmp
scas
adc
jb
sbb
sbb
or
mov
jne
jmp
push
xchg
dec
outs
mov
dec
jb
ds
inc
dec
movs
jnp
pop
loope
imul
cld
repz
adc
push
je
mov
jns
sub
sbb
icebp
aas
inc
out
out
mov
mov
sbb
mov
xchg
adc
xchg
nop
jle
and
leave
clc
inc
or
mov
movs
cli
mov
dec
bound
aas
addr16
sub
cmp
or
mov
inc
mov
cmps
inc
movs
bound
mov
hlt
or
xchg
hlt
lods
out
or
pop
ss
movs
fidivr
mov
es
sahf
dec
jns
rcl
pop
call
mov
push
outs
dec
xchg
jmp
push
sbb
pop
cli
xchg
not
mov
test
stc
stos
pop
mov
idiv
out
in
out
mov
jae
aad
mov
mov
sub
push
dec
sbb
(bad)
(bad)
mov
cmp
cli
lahf
xchg
cmp
and
xchg
sub
xchg
call
jle
dec
outs
(bad)
and
pop
icebp
and
xchg
or
inc
sbb
xor
sbb
(bad)
movs
aas
arpl
ja
xchg
in
dec
sub
(bad)
outs
lods
rcl
repz
loopne
or
ins
push
xchg
cmps
xlat
pop
mov
lods
pop
ret
enter
shl
mov
arpl
imul
xor
pop
push
and
and
or
pop
sub
jl
icebp
pop
popf
es
lock
(bad)
dec
(bad)
sti
xor
fs
xchg
inc
jg
outs
cmp
clc
mov
mov
enter
cmp
call
cmps
sbb
fsubr
outs
gs
les
stc
icebp
xor
mov
in
movs
cld
mov
xchg
push
mov
cld
out
jge
and
mov
(bad)
outs
jno
aas
addr16
loop
add
aad
xchg
imul
xor
cmps
fwait
or
leave
or
ficomp
add
or
mov
mov
imul
jge
push
pop
jle
add
lods
pop
lock
in
pop
jecxz
xchg
jne
shl
xchg
mov
adc
adc
test
jno
sbb
and
in
pop
dec
pop
sbb
xchg
jmp
push
mov
sub
sar
lods
pop
outs
or
mov
sbb
mov
mov
leave
das
sub
mov
stos
xchg
jo
sbb
pop
adc
loop
sahf
pop
xchg
sbb
sbb
xchg
popf
sti
inc
clc
jmp
icebp
pop
out
ins
mov
mov
call
jbe
push
add
push
aaa
jecxz
pop
push
cmp
retf
scas
mov
xor
push
bound
add
lock
jns
or
jne
js
shr
mov
jne
scas
cmp
loope
xor
mov
xchg
sub
fisubr
mov
adc
mov
imul
lahf
aas
retf
jp
jg
sub
call
aas
jecxz
(bad)
mov
not
daa
std
js
inc
call
scas
jmp
jae
mov
lahf
repz
test
cmp
cli
out
lds
test
icebp
pop
enter
test
adc
les
call
out
gs
ficom
mov
sbb
in
mov
mov
mov
mov
sub
add
mov
mov
mov
sub
add
mov
mov
mov
sub
add
mov
mov
mov
sub
add
mov
mov
mov
sub
add
mov
mov
mov
mov
aas
cli
inc
outs
pop
cmp
rcr
mov
add
popf
mov
mov
dec
ins
jmp
call
and
outs
aam
mov
inc
xor
jmp
push
vzeroupper
imul
push
jecxz
xchg
(bad)
js
ret
jns
push
lahf
mov
fdiv
imul
clc
and
pop
mov
retf
lods
and
ins
mov
mov
aas
dec
loope
adc
int3
lahf
adc
aaa
xchg
fwait
ret
ds
xchg
dec
xor
aam
fadd
sahf
sti
cwde
in
call
inc
add
clc
movs
fsub
pop
lock
repnz
adc
in
cld
(bad)
loop
pop
stos
pushf
fs
push
mov
jnp
mov
fdivrp
add
retf
push
xlat
in
iret
inc
inc
test
add
ins
jg
xchg
jg
jae
add
inc
or
ins
iret
inc
and
inc
push
mov
mov
add
jg
ins
iret
inc
and
pop
(bad)
lahf
cld
std
jg
push
inc
cld
mov
jg
ins
jle
pop
hlt
dec
jl
inc
jge
mul
lock
data16
cli
daa
mov
mov
clc
jne
lds
cli
psubb
add
outs
jg
push
(bad)
clc
jne
lds
cli
psubb
inc
add
stc
push
xchg
mov
inc
aas
pop
faddp
enter
push
cld
sub
mov
mov
mov
iret
inc
inc
test
add
imul
push
mov
mov
add
jg
ins
iret
inc
and
inc
push
mov
mov
add
jg
ins
iret
inc
and
in
imul
mov
pop
enter
push
xlat
in
iret
inc
inc
test
add
inc
or
push
loop
sti
jmp
add
xchg
push
inc
mov
lock
add
pop
cld
push
inc
mov
lock
add
add
jmp
fdiv
in
adc
imul
add
jmp
add
mov
xor
sar
inc
fst
lods
(bad)
sub
add
jg
pop
clc
sbb
add
hlt
jg
lods
(bad)
sub
add
jg
inc
clc
sbb
add
hlt
jnp
jg
cmc
std
in
cmp
repnz
sti
xor
add
cmp
inc
fst
inc
call
cli
inc
out
retf
loope
pop
adc
call
or
jp
loope
jg
jg
aas
loope
cld
or
jp
lods
aas
stc
cli
(bad)
neg
stc
adc
jg
(bad)
call
cli
inc
out
retf
ins
jle
pop
hlt
dec
jl
inc
jge
mul
mov
aas
hlt
push
lock
inc
xor
mov
clc
cmp
call
and
push
sub
push
aad
add
xchg
(bad)
mov
sub
popa
jge
mov
mov
mov
mov
iret
inc
inc
test
add
into
ds
push
frndint
mov
xchg
lahf
(bad)
jg
popf
jecxz
stos
out
ds
add
add
cmp
inc
fst
aas
call
cli
inc
out
retf
leave
dec
out
shl
cmps
imul
sbb
sti
ret
push
neg
inc
jg
(bad)
call
cli
inc
out
retf
ins
jle
pop
hlt
dec
jl
inc
jge
mul
jecxz
cmps
imul
push
sti
mov
sbb
sti
ret
push
neg
inc
jg
(bad)
cdq
inc
call
cli
inc
out
retf
ins
jle
inc
hlt
dec
jl
inc
jge
mul
jecxz
cmps
imul
push
sti
mov
sbb
sti
ret
push
neg
inc
jg
(bad)
cdq
inc
call
cli
inc
out
retf
ins
jle
pop
hlt
dec
jl
inc
jge
mul
jecxz
cmps
imul
push
sti
mov
sbb
sti
ret
push
neg
inc
jg
(bad)
cdq
inc
call
cli
inc
out
retf
ins
jle
inc
hlt
dec
jl
inc
jge
mul
jecxz
cmps
imul
push
sti
mov
sbb
sti
ret
push
neg
inc
jg
(bad)
cdq
inc
call
cli
inc
out
retf
ins
jle
pop
hlt
dec
jl
inc
jge
mul
jecxz
cmps
imul
push
sti
mov
sbb
sti
ret
push
neg
inc
jg
(bad)
call
cli
inc
out
retf
ins
jle
inc
hlt
dec
jl
inc
jge
mul
jecxz
cmps
imul
push
sti
mov
sbb
sti
ret
push
neg
inc
jg
(bad)
cdq
inc
call
cli
inc
out
retf
ins
jle
inc
hlt
dec
jl
inc
jge
mul
jecxz
cmps
imul
push
sti
mov
sbb
sti
ret
push
neg
inc
jg
(bad)
call
cli
inc
out
retf
ins
jle
pop
hlt
dec
jl
inc
jge
mul
jecxz
cmps
imul
push
sti
mov
sbb
sti
ret
push
neg
inc
jg
(bad)
call
cli
inc
out
retf
ins
jle
inc
hlt
dec
jl
inc
jge
mul
jecxz
cmps
imul
push
sti
mov
sbb
sti
ret
push
neg
inc
jg
(bad)
cdq
inc
call
cli
inc
out
retf
ins
jle
pop
hlt
dec
jl
inc
jge
mul
jecxz
cmps
imul
push
sti
mov
sbb
sti
ret
push
neg
inc
jg
(bad)
call
cli
inc
out
retf
ins
jle
pop
hlt
dec
jl
inc
jge
mul
jecxz
cmps
imul
push
sti
mov
mov
inc
sub
(bad)
mov
int3
inc
hlt
dec
jl
inc
jge
mul
lock
data16
daa
mov
mov
repnz
sti
mov
sub
fidivr
pop
into
(bad)
lock
rol
loop
in
sar
add
inc
inc
inc
push
clc
sar
(bad)
dec
ss
lock
pop
mov
pop
xlat
push
dec
dec
in
pop
pop
dec
(bad)
sti
loopne
iret
dec
jbe
adc
jg
sti
(bad)
js
sub
lods
idiv
cmp
pop
cmp
das
cs
mov
mov
pop
inc
cmps
fdivr
outs
bound
out
and
lock
nop/reserved
cmc
or
pop
ds
push
inc
je
int3
sub
adc
pusha
or
mov
adc
add
push
inc
push
add
adc
inc
sub
mov
inc
adc
pusha
or
mov
adc
bt
outs
mov
inc
fisttp
cmp
(bad)
popf
lahf
mov
(bad)
inc
dec
pusha
scas
sahf
jmp
aas
lock
call
jle
mov
lahf
cmp
lock
loope
clc
mov
arpl
jle
and
mov
add
mov
int3
cld
mov
push
pop
pop
push
inc
shl
aas
mov
cmp
jecxz
mov
out
aaa
or
xor
out
inc
jne
inc
(bad)
rcl
aaa
cmps
sar
mov
mov
mov
push
dec
aas
int3
repnz
cmp
test
lds
test
js
icebp
fcom
imul
cld
sbb
sbb
ins
aad
add
into
mov
pop
mov
inc
lds
and
(bad)
(bad)
inc
(bad)
and
fnstsw
scas
sbb
shl
js
div
mov
movs
ss
xor
cmc
jo
pop
cmps
adc
ja
dec
adc
pop
fwait
jo
adc
lods
jno
repz
cld
cmp
add
out
add
out
call
inc
or
popf
jle
clc
mov
cwde
mov
pop
xor
repnz
sub
jg
pop
push
lock
mov
cmp
add
dec
sbb
out
daa
xchg
ret
inc
int
xchg
or
jo
int
retf
sub
pop
sub
push
ror
cli
imul
(bad)
adc
stc
jmp
jl
clc
mov
jae
dec
pop
xchg
lea
xor
fst
sar
fidivr
jmp
xlat
dec
fmul
(bad)
les
call
mov
jle
cmps
fwait
dec
or
cmp
push
in
sti
jb
pop
fxch
out
pop
push
int
repz
adc
(bad)
add
and
out
cld
and
fcomip
aam
mov
jl
clc
mov
scas
or
shl
(bad)
jge
dec
sbb
and
mov
ret
sub
cli
push
clc
dec
fucomip
adc
push
fmul
sahf
pop
xor
mov
xchg
or
cmp
(bad)
movs
imul
ficomp
add
fld
sbb
test
sub
(bad)
arpl
inc
repz
(bad)
adc
inc
sub
and
fcomip
aam
jne
add
clc
jae
jl
lock
mov
cmp
stos
js
xchg
es
cdq
sbb
or
inc
in
cmp
scas
dec
clc
and
rcl
movs
shl
aad
xor
std
test
in
iret
push
rcr
xlat
jle
sbb
mov
mov
push
rsqrtps
or
cmp
pop
xor
inc
shr
ss
out
icebp
dec
pop
loop
xor
xchg
aaa
jo
sbb
add
ret
out
mov
dec
adc
mov
aam
imul
push
and
mov
xor
xlat
out
jne
pop
sub
adc
mov
xchg
fcom
jnp
pop
sbb
sar
and
and
imul
scas
xchg
mov
mov
imul
xchg
(bad)
ficom
iret
ficomp
dec
inc
iret
push
cld
mov
popa
dec
xchg
loop
cli
push
mov
jno
cmp
push
xchg
imul
adc
mov
pop
adc
es
mov
mov
cld
out
jg
mov
ins
sahf
sbb
sub
inc
pop
aas
pushf
xlat
retf
loope
mov
mov
jb
dec
jmp
jae
add
test
lods
push
rcr
iret
lea
xchg
jecxz
push
ins
rol
hlt
lea
int
jle
push
add
xor
(bad)
sbb
test
xchg
loopne
xor
lods
jb
mov
cmp
xchg
pop
bound
pop
aad
popa
loop
stos
stos
stos
xchg
or
(bad)
aam
jmp
cmp
fdiv
pop
clc
pusha
lar
add
les
inc
add
inc
in
dec
clc
pusha
pop
add
add
les
inc
add
add
mov
mov
add
jg
sar
iret
xlat
mul
fwait
jmp
(bad)
push
call
add
add
les
inc
add
add
mov
or
add
loope
cld
add
jmp
dec
in
retf
mov
in
cld
hlt
cmps
std
fwait
pop
(bad)
jle
mov
dec
mov
jl
inc
inc
adc
out
cld
add
call
lock
std
sbb
xchg
dec
scas
popf
aas
mov
inc
out
pop
fist
in
fcmovu
repz
std
enter
xchg
cli
das
(bad)
sbb
sar
add
pop
jg
cs
clc
pusha
pop
add
add
les
inc
add
add
mov
out
(bad)
jp
std
mov
sub
int
inc
aas
pop
fadd
mov
jl
inc
inc
adc
out
cld
add
call
lock
std
sbb
xchg
dec
scas
popf
aas
mov
inc
out
pop
fist
in
fcmovu
repz
std
enter
xchg
cli
das
(bad)
sbb
sar
add
pop
jg
cs
clc
pusha
pop
add
add
les
inc
add
add
mov
out
(bad)
jp
std
mov
sub
int
inc
aas
pop
fadd
mov
jl
inc
inc
adc
out
cld
add
call
lock
std
sbb
xchg
dec
scas
popf
aas
mov
inc
out
pop
fist
in
fcmovu
repz
std
enter
xchg
cli
das
(bad)
sbb
sar
add
pop
jg
cs
clc
pusha
pop
add
add
les
inc
add
add
mov
out
(bad)
jp
std
mov
sub
int
inc
aas
pop
fadd
mov
jl
inc
inc
adc
out
cld
add
call
lock
std
sbb
xchg
dec
scas
popf
aas
mov
inc
out
pop
fist
in
fcmovu
repz
std
enter
xchg
cli
das
(bad)
sbb
sar
add
pop
jg
cs
clc
pusha
pop
add
add
les
inc
add
add
mov
out
(bad)
jp
std
mov
sub
int
inc
aas
pop
fadd
mov
jl
inc
inc
adc
out
cld
add
call
lock
std
sbb
xchg
dec
scas
popf
aas
mov
inc
out
pop
fist
in
fcmovu
repz
std
enter
xchg
cli
das
(bad)
sbb
sar
add
pop
jg
cs
clc
pusha
pop
add
add
les
inc
add
add
mov
out
(bad)
jp
std
mov
sub
int
inc
aas
pop
fadd
mov
jl
inc
inc
adc
out
cld
add
call
lock
loop
cmp
inc
repnz
jl
std
mov
sub
fdivr
data16
inc
lahf
scas
out
inc
cmc
in
cmps
mov
out
test
mov
push
repz
lock
pop
inc
rcr
adc
and
scas
xchg
repnz
xchg
(bad)
sbb
or
scas
push
sar
mov
hlt
stos
jmp
cmp
(bad)
fisttp
sti
push
jecxz
lods
outs
fisub
cld
sub
int
(bad)
cmp
cmp
fs
adc
test
inc
pop
icebp
scas
jp
jmp
aam
movs
push
xor
(bad)
sub
cmp
jo
mov
push
jo
mov
push
jo
mov
push
jo
mov
push
jo
mov
push
jo
mov
sub
push
int3
retf
(bad)
cld
sub
aaa
sbb
int3
loopne
hlt
push
aad
stos
ror
sar
(bad)
enter
mov
pop
rcl
mov
loop
gs
xchg
mov
or
mov
mov
mov
mov
add
lahf
fcmove
(bad)
aas
mul
inc
movs
xor
jnp
call
dec
iret
(bad)
aas
mul
inc
movs
xor
jne
sbb
repnz
mov
shl
popf
(bad)
fistp
inc
shl
aas
imul
cld
xchg
mov
xchg
jle
(bad)
lock
xlat
xchg
cdq
test
jl
fwait
sbb
mov
stc
mov
pop
fcomp
lea
retf
das
mov
in
ja
add
rep
stos
hlt
lahf
ficomp
loope
ffreep
das
mov
(bad)
cdq
jae
dec
cmp
jns
addr16
call
bsr
call
dec
pushf
fs
int
cmp
(bad)
fild
jmp
pop
push
jno
fnsave
or
cli
adc
push
bound
mov
mov
pop
clc
jbe
cmp
mov
(bad)
sbb
cmp
jo
stc
push
in
mov
jns
xchg
adc
add
xchg
adc
xchg
xchg
push
hlt
addr16
pop
scas
neg
ins
std
xchg
dec
mov
fwait
inc
lods
das
clts
mov
loopne
xor
sbb
xor
shl
pop
call
mov
adc
ins
loop
jecxz
mov
(bad)
add
cdq
pop
xchg
add
and
clc
xchg
lock
ret
sub
je
xchg
lods
sub
dec
rol
jg
icebp
jg
jmp
fnstenv
adc
aas
jmp
mov
(bad)
cmc
mov
mov
(bad)
push
mov
popf
lods
(bad)
pop
mov
mov
stos
pop
outs
dec
add
loop
mov
or
mov
add
cli
lahf
mov
adc
test
scas
adc
sub
adc
js
mul
leave
loope
outs
lds
movs
retf
adc
scas
pop
pop
jp
loope
or
cmp
push
sti
and
jle
sub
sbb
mov
cmps
jmp
shr
sbb
or
sbb
mov
ret
sub
outs
aas
hlt
inc
jnp
jg
mov
aad
rcr
adc
lds
std
mov
mov
cmp
ja
jae
arpl
aam
add
in
lods
cmc
mov
sub
jge
fdivr
lods
jmp
mov
and
adc
pop
jmp
pop
int3
cmps
(bad)
cmps
cli
xor
dec
ret
pop
sahf
scas
das
shr
adc
cli
pop
push
mov
fistp
(bad)
cmp
fsub
jb
fs
jg
in
mov
xlat
jp
mov
xchg
and
adc
test
sub
jl
clc
arpl
push
and
cli
(bad)
out
mov
sbb
repnz
in
fisub
out
mov
pop
mov
das
cmc
sbb
add
aas
cmps
loopne
push
movs
or
popa
jmp
movs
call
inc
mov
add
ds
std
cwde
mov
inc
pop
xor
repz
mov
sti
inc
js
rcr
mov
std
xchg
ret
xlat
mov
dec
imul
jp
and
test
mov
push
jns
jecxz
lods
jp
dec
cmp
push
stos
sub
mov
sbb
jmp
xchg
test
cmp
push
fs
out
push
inc
or
mov
cmp
sbb
jmp
cli
jp
push
jge
(bad)
adc
cmp
mov
xchg
lock
(bad)
mov
in
into
sub
mov
cmp
jnp
les
fistp
adc
jmp
push
xchg
jbe
mov
jg
or
mov
inc
mov
movsx
mov
(bad)
and
mov
std
sub
sbb
aas
gs
int
cmp
in
push
stc
sbb
fild
jg
jnp
sar
pop
adc
mov
and
jnp
sub
pop
stos
addr16
jle
inc
add
mov
jl
mov
pop
or
lods
lods
xchg
dec
push
repz
jns
clc
cmc
jbe
lock
out
sbb
cld
push
(bad)
cld
aas
and
sbb
lods
mov
(bad)
cld
jno
mov
and
dec
pop
lds
adc
cmp
mov
jne
in
rcl
fucomi
iret
(bad)
jecxz
sbb
movs
sahf
div
stos
or
scas
idiv
sub
xchg
(bad)
jl
call
xlat
dec
pop
xchg
sbb
jp
in
hlt
inc
mul
pop
loope
jae
xlat
fist
mov
sbb
push
adc
and
add
stc
pop
mov
jmp
call
(bad)
push
cld
pop
clc
das
daa
mov
sti
outs
push
jmp
add
and
repnz
mov
inc
jbe
aaa
cmps
or
lsl
inc
sahf
das
in
outs
push
pop
movs
aas
mov
add
pop
add
inc
mov
mov
das
jne
je
fs
repnz
push
imul
into
js
jnp
cmps
ror
ficomp
pop
clc
aas
dec
lahf
push
ins
es
call
(bad)
cmp
sahf
xchg
in
ror
and
mov
aas
xor
scas
sar
add
mov
dec
cmp
mov
ja
fadd
mov
inc
scas
adc
cmc
(bad)
pop
xchg
jl
sti
jb
sub
xlat
ret
add
jle
shl
imul
in
popf
mov
hlt
xor
jmp
add
sub
in
pop
shl
mov
mov
rcl
pop
mov
sti
xor
sbb
jecxz
fisubr
jg
pop
cld
adc
cmc
out
test
pop
ss
pop
rol
dec
loopne
popf
mov
call
cld
fwait
lods
xchg
std
test
mov
xor
loope
jno
inc
xlat
pop
push
cmp
sub
sahf
jbe
cmps
sti
cmp
sbb
test
cmp
mov
inc
mov
inc
jecxz
sub
xchg
popa
mov
or
jnp
cld
inc
cmp
outs
idiv
xor
pop
mov
imul
ds
pusha
ja
xor
sub
pop
add
xor
inc
lock
jecxz
test
pop
pop
ret
add
movs
mov
ds
fs
adc
fdivrp
sub
test
fnstcw
or
cmp
jle
push
pop
jle
(bad)
lahf
mov
test
pop
sbb
imul
not
mov
and
dec
repnz
add
sub
pop
les
jg
jle
cld
add
xor
mov
mov
sub
push
mov
xchg
xor
pop
mov
scas
xlat
mov
mov
jo
mov
mov
jg
mov
cli
pop
rcr
mov
out
scas
sub
mov
sar
xchg
sbb
sbb
adc
in
fnstsw
das
mov
add
icebp
fild
ffreep
cmps
lods
outs
sub
xchg
adc
xor
mov
stos
fmulp
into
xlat
mov
(bad)
cmc
or
ds
mov
hlt
(bad)
loope
shr
cli
scas
in
shl
shr
jne
xor
cdq
out
fs
and
ja
cmc
enter
loopne
ret
sti
scas
fld
cli
cmp
stos
js
fcomp
xchg
in
in
iret
scas
push
jae
ss
jl
mov
mov
jg
sahf
add
outs
in
inc
loope
jmp
add
call
mov
mov
push
pusha
sbb
xlat
sbb
push
int
pop
mov
xor
cld
sbb
clc
jae
ror
int
xor
fidivr
daa
sbb
popf
push
out
pop
push
cld
add
repz
dec
jae
mov
std
pop
mov
(bad)
(bad)
and
mov
fsubr
ins
and
mov
and
adc
retf
repz
retf
hlt
jmp
cmp
paddw
(bad)
xor
cld
inc
xchg
push
pop
lock
sub
and
iret
add
jmp
retf
pop
pop
aam
rcl
idiv
sub
pop
jl
clc
mov
cmp
cmps
jmp
imul
sbb
sbb
je
loopne
jle
std
lea
in
scas
sti
sub
out
(bad)
cmp
sub
push
pop
std
sbb
jno
cmps
cmp
and
pop
or
cmps
sbb
sbb
in
call
cmps
jnp
push
rcr
mov
push
ds
je
mov
ins
hlt
lahf
or
aaa
pop
pop
(bad)
fidivr
lods
in
jecxz
xchg
cmp
clc
xchg
(bad)
not
repz
ins
das
push
mov
shl
jg
out
shl
mov
dec
imul
(bad)
jmp
mov
scas
iret
test
ret
(bad)
inc
imul
(bad)
xchg
xlat
jl
inc
xchg
and
mov
pop
jmp
mov
jns
arpl
imul
ins
mov
dec
call
mov
mov
(bad)
fild
pop
sub
movs
mov
inc
ficomp
mov
dec
mov
movs
test
fs
and
imul
inc
cmp
loop
inc
daa
popf
adc
or
je
sub
mov
imul
sbb
xchg
fisub
pop
pop
fwait
mov
push
arpl
int3
sahf
bound
jae
sub
and
lock
sahf
imul
jae
lods
mov
out
dec
fs
mov
jne
fdiv
out
push
in
jl
data16
cwde
xchg
xor
inc
mov
sbb
dec
jae
leave
sbb
mov
pop
addr16
push
out
mov
repnz
std
cmp
in
pushf
jl
mov
(bad)
sub
outs
sbb
hlt
lea
dec
mov
leave
mov
cli
xlat
or
lea
mov
out
pop
arpl
fmul
jecxz
mov
jbe
mov
fsubr
push
xchg
stc
ins
mov
fs
xchg
xchg
xchg
dec
adc
test
pop
fisttp
out
xchg
mov
xor
sub
fidiv
mov
stos
mov
imul
ins
sbb
mov
fucomi
dec
(bad)
aas
mul
inc
movs
push
push
iret
xchg
hlt
aas
in
icebp
inc
daa
popa
jecxz
sti
jb
add
sub
out
retf
or
enter
xchg
cmc
fs
push
mov
dec
xchg
enter
dec
cmc
loop
mov
xchg
cmp
(bad)
push
clc
outs
ffreep
cli
or
xor
fdivr
shr
std
imul
jns
mov
push
and
sbb
hlt
cmps
jns
sahf
fldcw
and
mov
sub
jae
pop
std
or
and
add
sub
add
test
adc
dec
inc
leave
xchg
jecxz
inc
jg
mov
aas
push
lahf
repz
xchg
push
int
icebp
arpl
adc
(bad)
sbb
les
xor
mov
inc
sahf
cmps
pop
fs
add
lods
inc
icebp
add
ja
sahf
xor
mov
call
add
cmp
inc
jbe
and
out
sar
lods
inc
out
mov
inc
jnp
iret
les
out
and
mov
or
(bad)
push
mov
aad
(bad)
sbb
mov
sub
or
hlt
out
addr16
lds
xchg
pop
imul
and
in
das
stos
aam
add
mov
aas
loop
in
stc
jns
sub
js
push
mov
lock
int3
sti
fcmovnu
ins
mov
inc
std
sahf
popa
mov
test
and
and
cmp
pop
repnz
in
push
inc
jg
mov
in
lock
inc
clc
out
js
int3
cmps
inc
aam
xchg
mov
add
push
mov
add
js
push
mov
(bad)
shl
or
add
loope
inc
jg
mov
(bad)
stos
push
(bad)
jle
out
packssdw
in
mov
arpl
ret
ficomp
cli
inc
call
mov
aas
pop
add
lds
loop
rcr
cmp
inc
mov
push
icebp
std
loope
mov
mov
in
mov
xchg
call
in
fnsave
mov
icebp
retf
dec
mov
out
loope
test
test
out
ds
add
mov
dec
test
cmp
mov
ins
cmp
gs
imul
cmp
leave
bound
shr
inc
pop
sbb
mov
fdivr
dec
pop
in
pop
inc
pusha
fwait
dec
std
push
jmp
fldcw
das
fmul
add
add
dec
std
push
jmp
pop
lods
mov
in
lea
push
sti
div
dec
sahf
push
clc
fucom
sbb
cld
jno
mov
jle
xlat
call
jmp
jmp
add
mov
fbstp
(bad)
cmp
inc
xchg
(bad)
loope
sti
or
inc
mov
add
sub
out
bnd
mov
mov
test
lock
leave
mov
adc
cli
add
xchg
repnz
outs
std
mov
add
xlat
lea
pop
mov
scas
xchg
shr
fs
xor
jge
and
ffreep
lahf
adc
pop
mov
in
aam
popf
dec
push
mov
jge
jmp
aam
or
stos
clc
in
movs
jl
pop
jb
les
test
pop
sti
xor
leave
test
fwait
inc
lods
pop
test
repnz
add
sar
xor
mov
lea
ja
xchg
ficomp
lods
scas
add
fs
jo
jge
pop
mov
inc
mov
mov
aam
aad
mov
cmps
mov
std
leave
xor
push
lea
lods
jns
int3
test
loope
mov
aas
fcos
add
push
dec
push
dec
inc
jb
cli
dec
and
clc
test
das
mov
mov
ja
leave
sbb
lods
add
leave
dec
push
jno
push
jp
jecxz
adc
enter
rol
pusha
setno
(bad)
fwait
dec
pop
xchg
pop
out
xchg
inc
inc
xor
les
pop
cmps
(bad)
addr16
mov
pop
cmps
fcomip
dec
out
stc
aaa
pop
das
sti
or
call
bnd
clc
ja
dec
or
mov
xchg
(bad)
(bad)
xchg
and
jo
mov
repz
daa
sti
stos
dec
mov
mov
icebp
xor
xlat
div
pop
test
push
xchg
push
inc
adc
add
jbe
pop
adc
pop
lods
cli
test
test
mov
in
adc
leave
lahf
int3
imul
inc
pop
sahf
movs
inc
or
jmp
retf
ret
pop
ds
jle
icebp
dec
mov
cmc
sbb
aaa
jle
mov
jmp
ffreep
or
clc
sub
jmp
(bad)
ror
push
jne
sub
add
cmp
jecxz
jg
(bad)
mov
(bad)
push
sbb
jle
(bad)
cmp
stos
iret
popf
push
outs
cmp
push
mov
pushf
jg
lods
add
pop
sub
push
out
nop
fucomp
mov
push
push
push
leave
mov
repz
xchg
adc
rcl
push
loop
sar
jp
mov
dec
jne
xchg
and
out
and
mov
pop
add
iret
dec
jae
aas
mov
lds
loop
cmp
bound
repnz
in
mov
ret
cmp
les
push
arpl
fsin
into
pop
mov
cli
mov
test
fisttp
mov
addr16
cmp
adc
adc
lahf
ffree
sar
shr
mov
aad
mov
std
(bad)
je
jmp
cmc
in
imul
inc
mul
(bad)
std
and
lds
iret
inc
mov
xchg
sub
sub
and
hlt
cmps
cld
ins
icebp
dec
xchg
lock
mul
push
aam
sbb
jg
xchg
inc
mov
jo
pmulhuw
sbb
aad
sub
fnstsw
jnp
(bad)
jmp
lahf
cmp
call
or
add
dec
mov
(bad)
in
shl
mov
outs
out
add
xchg
(bad)
xor
clc
outs
imul
mov
mov
aam
sub
in
mov
mov
jnp
test
add
inc
fimul
stc
sbb
std
cwde
cld
daa
cmp
div
loopne
mov
(bad)
cld
inc
icebp
adc
push
mov
pop
mov
mov
and
lods
jbe
aas
je
or
mov
neg
rcr
xor
xchg
das
jg
movs
scas
mov
pusha
das
mov
pop
cmp
sbb
jne
xchg
pop
aad
mov
imul
dec
sub
adc
aad
aam
xchg
stc
addr16
out
inc
sar
push
lock
xor
leave
das
out
ins
add
je
add
and
mov
xor
test
icebp
std
fisttp
not
loop
mov
(bad)
in
sub
sbb
cmp
les
mov
xor
ins
fisubr
inc
pop
sub
retf
sahf
fdivr
movs
js
shr
inc
ret
ds
mov
clc
lods
in
xor
sahf
push
or
dec
cmp
jne
mov
jne
repnz
ins
adc
push
jmp
dec
pop
mov
jmp
mov
dec
lock
jne
cmp
dec
repz
pushf
mov
mov
mov
push
movs
cld
cmp
imul
or
fcmovnu
movs
adc
push
pop
cmp
xchg
xor
jecxz
js
ja
lock
ret
lahf
sbb
(bad)
ficomp
lods
in
(bad)
outs
out
rcr
arpl
dec
sub
inc
outs
mov
icebp
lahf
(bad)
xchg
mov
popf
dec
pop
imul
push
adc
mov
jmp
(bad)
mov
dec
push
dec
and
jb
xor
fdivr
lahf
lods
(bad)
sub
jle
clc
jge
fisttp
jmp
mov
jmp
mov
out
xor
pop
pop
push
xchg
xlat
mov
jae
cmp
nop
fnstcw
mov
clc
aaa
ret
mov
add
movhps
(bad)
mov
imul
add
popf
mov
mov
(bad)
sbb
mov
xchg
or
stc
out
push
ss
in
pop
mov
ss
loop
addr16
cwde
inc
and
ja
mov
jp
add
fstp
mov
retf
jecxz
cld
xchg
das
cmp
dec
scas
std
xchg
mov
cdq
pusha
jle
mov
dec
cmps
(bad)
push
test
sbb
adc
sub
test
inc
dec
inc
add
call
popf
inc
cmp
cmp
mov
loope
adc
mov
out
xor
mov
popa
dec
scas
sbb
repnz
xchg
pop
dec
xchg
loope
out
dec
jp
sahf
icebp
ins
int3
jle
push
push
pusha
jecxz
cmps
dec
icebp
(bad)
mov
mov
stc
and
dec
cmp
xchg
dec
into
xor
or
xor
push
dec
(bad)
outs
ss
or
retf
sub
aaa
sub
ins
lea
jp
xchg
icebp
sub
pop
dec
fbstp
js
push
mov
mov
out
pop
adc
sbb
or
jmp
fcom
push
inc
fst
xor
mov
lods
xchg
dec
jnp
arpl
mov
jmp
in
retf
cs
mov
pop
add
sub
jp
jae
fisubr
or
retf
sbb
adc
popf
sbb
jl
leave
ds
dec
mov
cmps
lea
inc
or
fnstcw
or
loop
fsubrp
not
mov
leave
ds
es
xchg
cli
inc
xchg
pop
out
mov
and
stc
mov
xor
cwde
mov
inc
inc
mov
mov
arpl
inc
pop
scas
shr
mov
test
mul
mov
out
inc
inc
dec
inc
add
das
fninit
dec
(bad)
pop
mul
inc
movs
push
push
iret
mov
daa
in
in
inc
daa
pop
jecxz
sti
jb
add
sub
out
out
jg
push
mov
xor
cld
dec
jp
xchg
push
call
push
jmp
rcr
clc
and
pop
ret
call
fidiv
std
fcomp
jle
xor
in
imul
ja
pop
inc
arpl
in
fadd
fs
sbb
call
iret
in
std
icebp
inc
cmp
aaa
icebp
outs
jge
dec
pushf
jg
adc
daa
js
test
lock
ret
int
into
pop
jbe
xor
cmps
loop
mov
xchg
xchg
mov
pop
fstp
les
mov
add
jne
add
inc
and
fwait
in
xlat
enter
addr16
mov
hlt
dec
cld
pop
inc
cmp
(bad)
and
pop
hlt
dec
cld
pop
inc
cmp
(bad)
and
loop
std
or
stc
dec
mov
add
je
lock
icebp
lahf
clc
dec
into
aas
in
sbb
jmp
vpshufd
test
aas
jl
inc
mov
adc
jg
adc
ret
aas
jl
inc
mov
adc
jg
adc
pop
push
icebp
inc
and
(bad)
std
sub
aaa
pop
lds
lahf
imul
(bad)
call
aas
jnp
imul
sti
loop
std
adc
jg
mov
inc
mov
xchg
adc
jg
mov
inc
mov
in
clc
mov
add
(bad)
push
in
jg
(bad)
cld
aaa
push
lds
sti
pop
pop
jg
mov
jle
push
xlat
(bad)
js
cld
xor
lds
cli
es
inc
rcr
cld
xor
lds
cli
es
inc
rcr
jmp
icebp
imul
dec
cld
cmps
(bad)
add
mov
mov
enter
lods
mov
sbb
imul
sti
loop
std
adc
jg
mov
inc
mov
xchg
adc
jg
mov
inc
mov
in
clc
mov
add
(bad)
push
in
jg
fstp
lock
inc
retf
inc
sbb
div
js
cld
xor
lds
cli
es
inc
rcr
cld
xor
lds
cli
es
inc
rcr
jmp
(bad)
adc
(bad)
sti
pop
pop
jg
mov
mov
xor
xlat
inc
(bad)
shl
cmp
sar
fdivr
scas
pop
int3
lock
sbb
inc
add
aas
cld
inc
jb
and
scas
mov
sbb
arpl
out
aaa
sbb
aad
nop
add
imul
cld
pop
(bad)
cld
mov
(bad)
shr
outs
mov
inc
lock
cld
pop
shr
and
sub
rcl
or
mov
sub
arpl
pop
sbb
das
ret
ja
sbb
mov
xchg
and
(bad)
ss
in
mov
mov
adc
int3
adc
addr16
inc
mov
cld
xchg
das
fiadd
inc
ss
cli
or
inc
(bad)
in
mov
fbstp
push
loop
sub
sbb
adc
adc
imul
fstp
iret
stos
retf
adc
lahf
inc
xlat
outs
xor
call
push
mov
pusha
cmp
call
ror
iret
movs
sub
push
dec
jecxz
jge
xor
push
jge
aas
out
push
mov
sub
or
out
gs
jp
or
stos
pop
imul
div
xchg
fmulp
mov
adc
test
stos
aas
out
push
imul
out
fsubp
imul
jg
(bad)
xor
ja
push
test
and
rol
fwait
(bad)
out
std
stos
aas
out
push
imul
fnstsw
cmp
loop
popf
and
add
cmc
cmp
adc
sbb
mov
and
aam
push
sti
aam
stos
aas
out
push
test
inc
call
add
sub
mov
push
movs
(bad)
mov
and
fs
push
fisub
pop
push
sti
aam
(bad)
out
(bad)
out
ins
pop
mov
call
push
cld
scas
sbb
inc
jecxz
jne
outs
push
(bad)
sbb
(bad)
cli
jmp
inc
pop
mov
aas
out
push
imul
repnz
imul
ja
pop
or
out
gs
je
fiadd
jle
xchg
push
aad
cmc
imul
push
mov
dec
pop
lahf
(bad)
out
std
stos
aas
out
push
imul
sar
pop
jmp
in
mov
mov
push
adc
stos
sbb
punpckhdq
jp
mov
std
jmp
or
jecxz
dec
iret
stc
adc
cmc
pop
push
sti
aam
and
aad
icebp
es
jns
sub
aad
es
add
sub
push
jge
aas
out
push
imul
in
pmaxub
push
mov
test
xor
shl
and
pop
dec
inc
push
or
mov
cmc
and
mov
stc
cdq
cmps
test
xchg
mov
out
out
sub
dec
out
daa
addr16
cli
add
adc
cmc
daa
fisub
jbe
int3
test
scas
(bad)
jecxz
cld
xchg
dec
test
dec
scas
std
xchg
mov
dec
jnp
xor
sub
add
clc
out
test
push
movs
mov
inc
xor
retf
cmps
adc
pop
sbb
dec
arpl
sub
mov
and
shl
out
xor
mov
add
sub
push
add
cmps
rol
mov
imul
jmp
jg
mov
pop
rcr
mov
nop
cmp
imul
push
fst
movs
jl
fs
mov
pop
dec
mov
inc
or
call
mov
fucomp
jne
cmp
push
lock
mov
(bad)
mov
mov
test
in
loop
pop
mov
push
mov
cmp
adc
adc
or
data16
push
push
js
mov
xchg
fisub
not
push
xchg
pop
hlt
rol
imul
(bad)
mov
sbb
inc
jne
data16
sub
fidiv
scas
dec
ja
ja
fld
in
inc
popf
imul
frstor
in
jmp
(bad)
in
add
push
cs
stos
cmp
fiadd
sahf
jp
loop
push
jae
push
retf
fidiv
daa
int3
push
sar
add
xchg
arpl
ja
aad
jge
inc
outs
and
xor
fnstsw
pop
fcmovnb
mov
and
gs
sub
cmp
xchg
push
call
outs
dec
stc
cmp
sbb
add
xchg
(bad)
xchg
inc
pop
aas
xlat
rcr
mov
cld
popf
outs
(bad)
inc
in
retf
inc
dec
mov
or
enter
and
scas
sub
jge
inc
add
shr
dec
fidivr
dec
jnp
test
or
ret
and
cld
cwde
(bad)
jne
pop
jge
inc
add
inc
xchg
lea
leave
imul
aam
out
adc
pop
adc
cmc
mov
cs
mov
repz
mov
sti
jg
pop
xor
lds
inc
fucom
fmul
mov
fldenv
pop
in
mov
imul
test
sbb
leave
scas
leave
xor
mov
ret
dec
lock
rcr
loop
inc
mov
movq
mov
fwait
mov
iret
pop
sub
lds
inc
fldenv
push
mov
push
loop
xlat
shl
dec
mov
daa
cmp
int
ret
lock
or
dec
pop
les
ins
sbb
arpl
pop
fld
ins
and
bound
cmp
(bad)
cmp
fimul
(bad)
outs
pop
adc
call
mov
fdivr
add
ret
aas
in
lock
fdivr
test
shl
xchg
fwait
ja
cs
sub
and
icebp
dec
ret
dec
fdiv
add
fist
mov
pop
dec
mov
inc
pop
mov
les
xchg
add
xor
iret
rcr
mov
fisttp
std
xchg
ins
cmp
gs
cld
pop
push
sub
push
fild
push
cmps
clc
xor
dec
mov
mov
add
pop
mov
leave
lods
push
inc
ror
pop
lods
cmp
sub
or
cmp
jmp
or
popa
jg
nop
mov
lock
test
xchg
je
mov
cmc
pop
cmp
xchg
(bad)
test
adc
icebp
push
jae
jecxz
scas
outs
aam
in
push
inc
shl
stc
adc
xlat
std
out
(bad)
xchg
mov
sub
jge
xor
sub
fmul
(bad)
push
add
cmc
inc
adc
test
and
lods
retf
xor
jo
cmp
mul
inc
ret
loopne
les
inc
or
push
(bad)
jb
in
cmp
sti
lods
cmp
iret
push
xor
cmc
shl
sub
cmp
aad
(bad)
retf
sbb
or
fcmovu
pop
jo
jp
ret
inc
mov
fisubr
(bad)
xor
xor
mov
jnp
mov
cmp
fnsave
jle
mov
out
jmp
push
jle
cmovle
ds
pop
(bad)
js
ret
jmp
push
ins
add
mov
push
sti
mov
(bad)
iret
nop
fdiv
in
pop
add
mov
icebp
stos
lds
lahf
outs
jbe
test
sbb
nop
push
shr
xor
sti
adc
dec
lock
lahf
ror
pop
clc
(bad)
lods
scas
xchg
jno
add
xchg
or
jbe
shl
pop
add
stos
les
cs
movs
lods
pop
xor
jmp
(bad)
cmp
fdivr
add
shr
cs
pop
jp
jno
std
int3
adc
enter
(bad)
test
retf
(bad)
movs
(bad)
xchg
hlt
iret
arpl
inc
jno
inc
dec
xchg
jle
clc
inc
test
dec
call
mov
scas
daa
daa
daa
xor
cld
pop
aas
cmp
scas
das
pop
cmp
out
push
shr
pop
pop
inc
jae
sub
inc
loop
cmps
mov
fs
jb
ds
pop
sar
lahf
sbb
adc
jnp
cmp
sar
jnp
sar
aad
stos
call
xor
jg
neg
rcr
add
jecxz
add
je
clc
pop
mov
push
inc
mov
xlat
mov
aas
out
shl
cmp
add
cld
out
out
aaa
not
(bad)
push
neg
iret
inc
or
idiv
mov
sar
add
mov
iret
lahf
hlt
and
fwait
(bad)
cli
aas
cld
xchg
pop
xor
cmp
add
in
pop
push
test
mov
repnz
mov
mov
push
inc
mov
sar
add
aaa
idiv
mov
sar
add
mov
std
fidivr
(bad)
pop
imul
lods
dec
out
js
js
add
sti
(bad)
inc
test
xchg
loop
sti
call
pop
lock
addr16
cli
adc
dec
sbb
sbb
frstor
jbe
stos
push
(bad)
ja
xchg
idiv
pop
mov
push
inc
mov
sar
add
aaa
idiv
mov
sar
add
mov
std
fidivr
(bad)
pop
imul
lods
dec
out
js
js
add
sti
(bad)
inc
test
xchg
loop
sti
call
pop
lock
addr16
cli
adc
dec
sbb
sbb
frstor
jbe
stos
aam
ja
xchg
idiv
pop
mov
push
inc
mov
sar
add
aaa
idiv
mov
sar
add
mov
std
fidivr
(bad)
pop
imul
lods
dec
out
js
js
add
sti
(bad)
inc
test
xchg
loop
sti
call
pop
lock
addr16
cli
adc
dec
sbb
sbb
frstor
jbe
stos
aam
ja
xchg
idiv
pop
mov
push
inc
mov
sar
add
aaa
idiv
mov
sar
add
mov
std
fidivr
(bad)
pop
imul
lods
dec
out
js
js
add
sti
(bad)
inc
test
xchg
loop
sti
call
pop
lock
addr16
cli
adc
dec
sbb
sbb
frstor
jbe
stos
aam
ja
xchg
idiv
pop
mov
push
inc
mov
sar
add
aaa
idiv
mov
sar
add
mov
std
fidivr
(bad)
pop
imul
lods
dec
out
js
js
add
sti
(bad)
inc
test
xchg
loop
sti
call
pop
lock
addr16
cli
adc
dec
sbb
sbb
frstor
jbe
stos
aam
ja
xchg
idiv
pop
mov
push
inc
mov
rcr
mov
(bad)
es
iret
inc
and
aas
out
shl
cmp
add
cmp
ret
fcmovnb
stc
push
fdivr
mov
pop
pop
ret
out
push
pop
pop
fmulp
test
aam
das
add
cld
or
imul
jne
dec
jae
pop
xchg
inc
cmp
test
adc
or
mov
pop
jne
int3
fstp
xchg
jmp
sub
inc
adc
mov
adc
pop
or
mov
adc
retf
retf
xor
movs
mov
in
pop
callw
stos
and
bound
repz
push
std
fisttp
rcl
pop
mov
push
cmps
dec
pop
jge
pop
push
jmp
sbb
aad
xchg
test
add
and
fsubr
aas
mov
and
mov
ds
sub
in
clc
and
in
jnp
add
jmp
pusha
retf
pop
mov
pop
inc
inc
mov
cmps
pop
fidiv
inc
sbb
lds
nop
imul
imul
inc
dec
push
shr
sub
nop
cld
(bad)
je
jl
fs
movs
pop
and
iret
mov
xchg
sub
mov
cwde
cmp
cmp
xchg
jbe
lods
fnsave
cmp
ss
jb
ret
test
mov
sub
pop
mov
cmp
fcomp
push
gs
xor
aas
ror
mov
sar
pop
es
xor
scas
jg
outs
retf
hlt
scas
xchg
mov
movs
xchg
xor
rcl
(bad)
and
inc
pop
cld
sti
xor
mov
loope
adc
pop
ds
aas
in
jl
inc
outs
pop
cli
inc
add
inc
jle
pop
bnd
aaa
inc
mov
std
and
cld
or
repnz
cld
dec
jp
xchg
push
call
out
inc
mov
mov
cld
and
inc
push
inc
cmp
jo
popf
jle
stc
test
lea
dec
arpl
cdq
jnp
jns
sub
sub
aas
adc
cmps
in
imul
fs
call
jno
das
pop
jmp
cmp
mov
nop
sbb
mov
pop
lods
jnp
mov
xchg
imul
add
mov
out
data16
mov
mov
sub
shl
cld
lds
cmp
fisttp
mov
sbb
inc
and
dec
xor
dec
adc
out
sub
in
cmc
inc
cmps
in
iret
and
(bad)
aas
pop
inc
enter
jg
cmp
mov
mov
addr16
sub
inc
lock
sar
add
add
mov
add
call
add
sti
jmp
clc
int3
push
es
out
fimul
sbb
dec
cld
popf
dec
pop
mov
sar
and
js
lahf
pop
and
and
cmps
ss
in
cld
sahf
sahf
push
iret
mov
imul
in
clc
(bad)
push
lock
mov
pop
mov
pop
and
push
dec
push
lea
ret
inc
loope
clc
pop
dec
out
stos
outs
dec
(bad)
adc
call
cli
mov
add
call
inc
adc
bound
jmp
fstp
pop
adc
push
loop
pop
inc
(bad)
push
mov
mov
inc
ficom
sub
sub
add
icebp
pop
outs
clc
inc
ins
mov
jno
int3
aaa
push
idiv
mov
xor
xchg
cmp
out
out
fbld
pop
add
add
lock
std
cmc
ins
inc
leave
xor
ret
aas
std
push
jg
inc
fist
cld
xchg
dec
iret
sub
push
mov
cmc
call
outs
cmps
enter
loopne
rcr
loope
xor
inc
push
cmp
test
test
push
ret
out
cmp
outs
xchg
cmps
imul
xor
cmp
cmp
stc
xchg
cld
enter
dec
fisttp
ret
aas
std
push
jg
inc
fist
cld
xchg
inc
cld
sub
inc
shl
inc
std
cmc
ins
inc
leave
xor
cld
inc
leave
mov
stc
push
(bad)
imul
jg
clc
pop
dec
lock
idiv
repnz
or
and
mov
or
mov
(bad)
fist
mov
xor
inc
(bad)
ins
lea
push
clc
sbb
add
xchg
sar
hlt
pop
cld
aas
inc
jge
jg
dec
pop
lock
inc
lahf
ret
inc
not
mov
add
hlt
mov
jge
mov
sub
lds
mov
mov
je
loope
aas
ret
fiadd
ret
sub
lea
aaa
fsub
cmp
mov
sub
pop
pop
mov
loop
ins
scas
daa
xor
(bad)
add
jle
(bad)
inc
ret
aas
std
push
jg
inc
fist
cld
xchg
inc
cld
sub
inc
shl
inc
std
cmc
ins
inc
leave
xor
(bad)
in
imul
push
mov
inc
int3
jmp
mov
retf
es
paddb
ud0
fist
cld
xchg
pop
sahf
mov
jl
clc
pop
je
fisubr
(bad)
cli
hlt
pop
fild
pop
(bad)
outs
jo
test
ds
mov
dec
(bad)
mov
mov
das
out
ins
push
clc
rep
adc
loope
add
jmp
mov
inc
ret
hlt
fstp
dec
das
jne
adc
pop
fisubr
mov
cmp
scas
std
sub
sbb
sti
fstp
xchg
sub
xlat
mov
jecxz
(bad)
sbb
xchg
xor
fistp
add
dec
jae
fstp
(bad)
cs
enter
jmp
clc
jbe
lds
push
clc
inc
inc
add
stc
push
(bad)
clc
jbe
lds
cli
vmread
add
outs
jg
push
mov
int3
ins
cmc
jp
(bad)
xchg
push
fstp
adc
add
cmp
mov
aas
loope
pop
adc
add
cmp
mov
aas
mov
(bad)
aas
stos
aam
jl
inc
jge
inc
push
enter
add
or
ins
iret
inc
and
inc
push
enter
add
or
ins
iret
inc
and
std
mov
mov
push
xlat
pop
lock
(bad)
push
lock
push
fdivr
add
cmp
mov
push
lock
push
fdivr
add
cmp
out
stos
aam
jl
inc
jge
inc
push
enter
add
or
ins
iret
inc
and
inc
push
enter
add
or
ins
iret
inc
and
std
mov
mov
push
xlat
pop
lock
(bad)
push
lock
push
fdivr
add
cmp
mov
push
lock
push
fdivr
add
cmp
out
stos
aam
jl
inc
jge
inc
push
enter
add
or
ins
iret
inc
and
inc
push
enter
add
or
ins
iret
inc
and
std
mov
mov
push
xlat
pop
lock
(bad)
push
lock
push
fdivr
add
cmp
mov
push
lock
push
fdivr
add
cmp
out
stos
aam
jl
inc
jge
inc
push
enter
add
or
ins
iret
inc
and
inc
push
enter
add
or
ins
iret
inc
and
std
mov
mov
push
xlat
pop
lock
(bad)
push
lock
push
fdivr
add
cmp
mov
push
lock
push
fdivr
add
cmp
out
stos
aam
jl
inc
jge
inc
push
enter
add
or
ins
iret
inc
and
inc
push
enter
add
or
ins
iret
inc
and
std
mov
mov
push
xlat
pop
lock
(bad)
push
lock
push
fdivr
add
cmp
mov
push
lock
push
fdivr
add
cmp
out
stos
aam
jl
inc
jge
inc
push
enter
add
or
ins
iret
inc
and
inc
push
enter
add
or
ins
iret
inc
and
std
mov
mov
push
rcr
jns
pop
lock
xor
add
jae
jmp
jnp
mov
and
sbb
push
int3
out
sbb
inc
sub
jecxz
dec
jo
iret
out
xor
shr
rcl
mov
int3
gs
sub
xchg
push
call
mov
mov
gs
mov
in
push
ins
test
test
out
jge
cld
dec
fistp
in
in
sbb
(bad)
push
out
jmp
cmp
sub
jp
xchg
rcr
popf
adc
pop
mov
mov
add
psllw
dec
rcr
ins
xor
sbb
sub
xchg
(bad)
loope
je
je
fisttp
jae
daa
mov
pop
jecxz
outs
push
dec
lds
and
mov
repz
je
daa
out
pop
test
dec
inc
aam
adc
and
shl
adc
push
mov
dec
xlat
xchg
mov
mov
sar
out
addr16
scas
push
jmp
mov
stos
movs
push
sbb
xchg
adc
sahf
xchg
inc
dec
lea
jecxz
retf
call
sbb
iret
xchg
jl
lock
fs
dec
dec
dec
and
inc
out
sub
add
xchg
cvttps2pi
jne
dec
lahf
loope
cmc
lahf
mov
daa
mov
jno
popf
inc
out
and
dec
jmp
inc
dec
lock
stc
fwait
pop
xor
cs
movs
xchg
aas
ja
(bad)
cdq
movs
sbb
pop
xor
dec
fdiv
out
pop
clc
(bad)
out
ret
div
lods
leave
mov
adc
push
fnstenv
daa
movs
clc
mov
aam
mov
push
jnp
jmp
js
jmp
out
xchg
je
in
fdivr
mov
dec
test
fidivr
dec
xchg
mov
cmp
push
stos
add
sbb
jno
or
retf
int3
gs
sub
(bad)
push
dec
mov
mov
ins
inc
outs
pop
cli
inc
add
in
loope
add
push
jecxz
sti
jb
add
sub
shr
sti
mov
(bad)
(bad)
and
pop
push
inc
adc
inc
add
pop
push
popa
xchg
test
es
add
lods
in
cmp
fucomip
or
stc
out
test
lods
std
(bad)
cld
test
(bad)
outs
retf
shr
mov
xchg
fwait
std
and
shl
mov
mov
sti
lods
stc
push
in
jmp
aaa
sti
add
(bad)
jns
std
and
imul
sub
mov
pop
repnz
sahf
inc
outs
test
add
(bad)
jns
xchg
(bad)
(bad)
jmp
push
ins
outs
out
mov
inc
mov
fld
cmp
fucomip
or
stc
out
test
lods
std
(bad)
cld
test
(bad)
outs
retf
dec
mov
jns
mov
into
(bad)
in
or
stc
out
pop
pop
sti
lods
stc
push
mov
mov
dec
mov
jns
mov
pop
aam
jmp
dec
sbb
sub
adc
cmp
sbb
arpl
push
inc
adc
dec
xchg
pop
aad
xor
jne
jnp
rol
mov
jmp
push
fidivr
lock
ret
sbb
dec
or
(bad)
rol
add
sbb
in
cs
mov
stc
ja
inc
lock
sahf
daa
std
movs
cmp
imul
(bad)
mov
repz
popf
cmc
lahf
sbb
sub
bound
iret
xchg
push
and
test
in
test
jg
push
outs
ficomp
arpl
jle
scas
xor
jbe
aam
push
mov
aam
inc
int
sar
inc
jl
inc
or
int3
push
test
fs
cld
sub
(bad)
stc
mov
add
rol
jmp
out
jg
(bad)
jg
call
jns
adc
pop
lahf
pusha
div
jae
mov
jecxz
out
pop
lock
retf
std
sub
add
pop
and
out
test
sub
test
rol
cdq
push
std
sub
mov
ins
inc
in
and
test
mov
(bad)
ja
xor
or
test
cmps
push
xor
out
xor
movs
mov
xchg
out
repnz
dec
push
push
ds
inc
test
lock
sti
out
repz
mov
ret
inc
clc
shrd
mov
in
xchg
jo
sbb
in
pop
mov
sti
aas
cld
inc
clc
mov
and
jb
pusha
mov
cli
cmp
xor
adc
pop
movs
adc
xchg
dec
push
in
mov
jg
call
jae
cmp
push
loop
xchg
aas
jge
outs
loop
cs
outs
in
sbb
pop
repz
(bad)
mov
loope
add
jmp
push
jbe
jmp
add
add
fs
jge
cld
mov
pop
lods
in
ins
dec
(bad)
pop
out
std
repz
cld
sub
(bad)
stc
lods
jno
pop
(bad)
(bad)
loop
rol
cmc
push
lods
sub
in
mov
inc
fs
pop
outs
pop
sbb
mov
adc
lods
clc
push
push
shl
mov
ins
pop
cmp
cmp
sbb
dec
sub
dec
cdq
jge
mov
add
xor
ret
out
call
fcmovbe
out
and
adc
push
sbb
xchg
rcl
xlat
mov
psubsw
fisub
pop
mov
mov
cdq
mov
fbld
mov
bound
sbb
ret
out
call
jns
adc
xor
mov
jp
cld
sub
(bad)
stc
mov
add
rol
jmp
out
jg
(bad)
jg
call
jns
adc
pop
lahf
pusha
div
cmp
add
les
cli
ret
test
jmp
ficomp
clc
shr
shl
pusha
shl
inc
(bad)
(bad)
xor
je
jno
sub
xor
div
pop
sti
jge
pop
jne
adc
into
cmp
cwde
scas
sbb
retf
jp
cmp
(bad)
scas
stos
jmp
clc
jnp
xor
sbb
fldenv
repnz
xchg
pop
push
xor
fbld
ja
cmps
jmp
sbb
xchg
mov
cmc
adc
jno
mov
inc
adc
push
inc
adc
push
inc
adc
push
mov
mov
in
stos
mov
scas
scas
cmp
ret
lods
enter
adc
jmp
mov
adc
daa
shr
stos
sar
mov
loopne
pop
sbb
cmp
fidivr
popa
mov
pushf
xchg
mov
mov
xchg
mov
mov
sti
or
mov
mov
(bad)
push
enter
inc
add
jge
(bad)
mov
(bad)
movs
and
popf
lods
daa
mov
js
mov
(bad)
scas
push
mov
lods
mov
lock
movs
xchg
enter
retf
add
lock
push
mov
imul
js
lock
dec
lock
mov
adc
fsub
jbe
xchg
xchg
imul
sub
int3
fcmove
xchg
xchg
jbe
jno
rcr
dec
stc
xchg
out
outs
das
inc
xchg
sar
loope
lods
jge
icebp
cmps
les
cmp
rol
jmp
(bad)
mov
pop
out
nop
push
add
cmp
sub
adc
loope
push
in
gs
pop
jb
data16
inc
add
inc
add
sti
ja
add
aad
(bad)
fdivr
sub
out
fstp
mov
mov
loopne
imul
mov
(bad)
mov
gs
jmp
das
jl
scas
imul
cli
cli
je
xchg
fstp
xor
iret
xor
sti
add
std
mov
sti
add
inc
sbb
or
cmp
xor
push
jns
sahf
lds
lock
idiv
shr
mov
shl
add
cld
inc
mov
push
int3
mov
push
xor
shl
repz
sar
add
inc
jl
mov
dec
pop
ret
mov
(bad)
cmp
icebp
sbb
stos
pop
fdiv
xchg
leave
cmp
call
jmp
imul
xchg
mov
add
sbb
mov
icebp
out
sbb
adc
lahf
clc
or
scas
pop
pop
std
cmp
inc
pop
imul
adc
jg
outs
mov
mov
out
xchg
cmp
or
popf
out
ins
xchg
ins
js
cld
cmp
(bad)
lahf
hlt
add
out
add
add
test
add
sbb
mov
fbstp
fldenv
push
lahf
ret
xlat
mov
jp
stos
out
inc
gs
mov
jge
out
xchg
mov
mov
loopne
cmp
sar
add
aaa
cdq
xor
xchg
daa
add
and
in
pop
hlt
sahf
pop
push
xor
mov
imul
inc
nop
cmps
std
add
inc
adc
icebp
jmp
add
sbb
cmp
idiv
icebp
scas
mov
and
inc
mov
mov
ss
sbb
mov
mov
(bad)
sbb
ins
call
fnstenv
ja
movs
dec
fisub
mov
push
xchg
popa
xchg
rcr
cdq
adc
(bad)
mov
fcomip
icebp
inc
sbb
adc
lahf
clc
or
mov
dec
cli
add
inc
add
xchg
in
add
or
fprem
jl
add
push
xchg
pop
lods
lahf
mov
inc
stc
cmp
aad
inc
add
push
fprem
xchg
inc
shl
jnp
call
push
mov
add
dec
inc
xchg
inc
cmp
(bad)
neg
mov
imul
jnp
lahf
hlt
add
out
add
add
test
add
sbb
mov
or
cld
dec
lock
lahf
mov
shl
ins
inc
es
or
(bad)
fs
jno
jge
jno
push
in
pop
sub
call
outs
pop
test
aam
pushf
and
mov
gs
sbb
xlat
gs
pop
push
outs
adc
ret
push
mov
push
cmp
js
inc
add
jg
(bad)
mov
dec
push
jg
xor
cld
jp
fcmovnb
lahf
or
push
clc
ja
clc
jns
jg
inc
je
jp
les
xchg
xor
jae
mov
mov
and
rcr
pcmpeqb
xchg
sbb
cmova
dec
mov
loopne
mov
js
dec
push
dec
push
mov
imul
mov
ret
(bad)
mov
cmp
jg
fisubr
cmp
jle
jle
mov
fdivr
add
sbb
inc
outs
loop
sub
sar
jns
ins
mov
iret
pop
and
daa
cmp
xor
xchg
pop
xchg
mov
jecxz
(bad)
ja
pop
fild
pop
jl
icebp
(bad)
mov
in
(bad)
ds
mov
mov
test
sub
in
imul
cs
dec
jae
lods
pop
dec
lahf
scas
out
or
popa
push
xchg
cmc
(bad)
push
mov
inc
xchg
lods
lock
std
jno
inc
rcr
sahf
clc
mov
cld
popa
scas
inc
xlat
hlt
inc
cli
sbb
add
jno
inc
rcr
xchg
clc
lods
inc
and
sar
add
(bad)
test
sar
push
inc
sbb
inc
jnp
xchg
adc
inc
add
inc
add
inc
add
in
mov
pop
clc
inc
mov
fbld
mov
stos
leave
repnz
xor
cmc
cmp
push
or
(bad)
mov
sbb
inc
add
(bad)
test
test
ret
mov
nop
jg
std
stos
clc
addr16
cld
gs
call
sbb
aaa
cmp
pop
push
(bad)
mov
inc
cli
lahf
ss
(bad)
js
(bad)
push
jl
fwait
out
sahf
loopne
fild
and
and
cld
pop
icebp
mov
test
adc
mov
push
fcomp
add
scas
mov
inc
add
fcmovnu
fidiv
les
cmc
jo
icebp
scas
cmps
inc
ins
scas
stc
aaa
outs
push
inc
xlat
sbb
add
(bad)
xlat
cdq
pop
xchg
and
push
xchg
(bad)
dec
out
addr16
sub
jbe
xor
sahf
xchg
icebp
jnp
lods
cli
lods
push
imul
xchg
in
mov
aas
test
cld
adc
shr
or
sti
test
jp
and
mov
mov
aas
std
js
inc
mov
pop
dec
mov
push
xlat
daa
xor
movs
xlat
jmp
gs
jg
cmp
and
add
rcl
in
sar
add
xchg
cmp
popa
mov
add
test
inc
leave
out
pop
inc
fsubr
mov
outs
lahf
stc
adc
sbb
add
mov
test
jp
out
adc
pop
in
aas
loope
aam
cmp
(bad)
sbb
loope
shl
inc
into
xor
aas
cld
adc
rcr
pop
or
(bad)
sbb
call
add
push
inc
pop
mov
xlat
test
sahf
fcmovbe
out
jp
test
hlt
scas
lds
icebp
(bad)
test
pop
push
mov
fnstcw
lock
ror
jmp
pop
dec
cwde
xor
repnz
jae
mov
scas
mov
mov
sub
mov
mov
std
push
jge
aam
sub
jg
fisttp
pop
cli
fidivr
push
cmps
clc
push
dec
loop
std
test
hlt
jge
js
lahf
lock
stos
cld
iret
dec
add
push
(bad)
std
dec
cli
push
call
push
lods
mov
pop
test
sbb
ins
sbb
sbb
ins
sbb
mov
mov
mov
sbb
ins
sbb
mov
(bad)
loope
popf
pop
jge
push
mov
xchg
not
add
aad
das
dec
lahf
push
aam
in
lods
xchg
out
lea
fdiv
pop
push
(bad)
pop
xchg
sub
test
mov
arpl
cmp
sbb
test
cmp
jp
ret
pop
dec
imul
xchg
retf
rol
std
sub
clc
scas
test
xchg
dec
mov
jno
daa
enter
sahf
xor
sti
ss
(bad)
pmaxub
enter
out
mov
xchg
enter
je
cmc
lea
and
shl
add
cmc
scas
iret
imul
ins
pop
scas
loope
jmp
dec
mov
ins
mov
push
jmp
dec
inc
loop
outs
cmps
dec
push
ficom
mov
movs
cmps
fimul
cmp
xor
(bad)
int
pop
xchg
xlat
mov
mov
dec
loope
xchg
dec
aam
aaa
pushf
mov
adc
sahf
jno
aas
adc
data16
mov
pop
add
int
push
pop
and
in
and
jecxz
sub
leave
jno
push
inc
ja
adc
cld
cmp
jmp
test
aaa
mov
outs
(bad)
mov
aaa
mov
popf
xor
xchg
ss
mov
pop
pop
lahf
dec
mov
les
aas
aaa
jp
lahf
mov
adc
loope
int
xor
mov
cld
outs
adc
xchg
cmp
pop
aad
rol
movs
enter
(bad)
pop
movs
scas
mov
stc
adc
inc
lods
mov
mov
pop
cmp
dec
test
pop
fmul
cmc
push
cmc
out
popa
xor
shl
aam
lahf
sub
sbb
sahf
jb
fistp
loop
jno
push
mov
mov
cmp
inc
xchg
test
mov
mov
loopne
out
lahf
mov
cld
popf
inc
lea
dec
mov
daa
sti
mov
sub
add
jle
repz
mov
fwait
inc
cmp
(bad)
(bad)
pusha
mov
and
clc
xchg
inc
std
mov
sbb
imul
xchg
lahf
sti
in
push
cmp
xchg
std
in
dec
and
pop
cld
xchg
into
mov
mov
mov
out
sbb
push
mov
mov
shl
call
sbb
addr16
sub
mov
std
xchg
xor
or
jbe
mov
xor
mov
inc
sbb
mov
lahf
xor
lds
(bad)
push
cmps
and
push
jecxz
pop
repnz
jb
jbe
cli
lahf
loop
in
push
jl
clc
mov
or
or
ror
inc
aas
enter
ss
ja
fadd
add
jg
mov
retf
in
mov
std
inc
ret
fist
push
outs
adc
cmp
add
or
(bad)
dec
out
xor
cmp
in
shl
mov
add
iretw
lds
cmove
in
mov
lods
xchg
jecxz
cmps
mov
mov
idiv
xlat
stc
sahf
scas
(bad)
test
jl
aad
mov
cmp
dec
(bad)
cld
cli
pop
jg
or
in
je
sti
or
inc
jmp
xor
mov
mov
cmp
loop
es
je
ins
push
ins
xchg
iret
ins
xchg
inc
mov
adc
out
lock
pop
clc
mov
addr16
sbb
inc
mov
lods
fcomp
fcmovnu
shl
mov
setb
dec
inc
dec
and
out
mov
shl
xor
mov
cs
jge
test
mov
add
pushf
js
jecxz
jg
sti
(bad)
daa
adc
add
and
xor
mov
in
adc
mov
mov
xchg
jmp
sar
lock
fwait
mov
dec
xlat
mov
dec
push
or
js
or
xor
add
jle
cmp
sbb
clc
jnp
shl
aas
or
out
ins
out
scas
in
mov
xchg
scas
sahf
adc
repz
mov
xchg
iret
xor
stos
ds
imul
or
loopne
repnz
(bad)
mov
mov
fistp
xchg
movs
jmp
(bad)
jnp
push
mov
pop
and
jo
ret
arpl
stc
ret
test
mov
(bad)
fadd
pop
and
xchg
cmp
jns
ror
push
test
pushf
cmp
ds
xlat
pop
mov
ret
dec
dec
loopne
mov
xor
sub
icebp
lahf
fwait
es
stos
fxch
int
fs
retf
icebp
add
mov
outs
in
movs
loope
lock
push
out
xchg
jb
pop
out
mov
jno
into
pop
popa
pop
jecxz
aas
fld
or
(bad)
sbb
scas
inc
or
test
sub
and
push
aas
xor
cmp
mov
push
dec
mov
adc
dec
adc
mov
mov
stos
inc
add
out
aam
inc
cmp
mov
mov
pop
xchg
pop
mov
call
in
adc
iret
aas
cmps
retf
(bad)
test
out
sbb
dec
ror
push
addr16
mov
outs
mov
inc
xlat
mov
xacquire
mov
xchg
pop
pop
jmp
jnp
rol
mul
mov
dec
stc
mov
(bad)
jmp
std
cmp
add
hlt
xchg
dec
in
sub
add
in
jg
hlt
inc
cli
xor
in
jl
inc
pop
scas
jg
xchg
dec
in
sub
add
in
jg
hlt
inc
cli
xor
std
pop
jmp
loopne
mov
sub
mov
sub
and
(bad)
inc
xchg
jl
pop
std
and
shr
fidivr
add
ja
inc
inc
lock
cld
and
dec
outs
mov
imul
ror
into
mov
adc
xchg
mov
inc
mov
mov
cmp
jbe
clc
mov
cmp
adc
add
(bad)
(bad)
sbb
js
(bad)
dec
mov
push
mov
lods
nop
mov
sbb
(bad)
mov
push
clc
xchg
(bad)
xchg
cmp
les
hlt
retf
mov
xchg
cmp
mov
pop
mov
in
pop
pop
clc
paddd
push
sub
loop
or
out
mov
nop
mov
add
loop
loopne
retf
push
push
jno
dec
inc
mov
cmp
in
sti
addr16
nop
push
mov
push
(bad)
sub
aad
mov
js
in
or
or
jmp
loopne
loop
mov
xor
fcmovnbe
pop
clc
popf
loope
(bad)
vmread
ds
jae
sub
repnz
add
cmc
cld
sub
fstp
ret
cmp
test
push
mov
in
inc
xor
mov
mov
out
ss
mov
addr16
retf
pop
xchg
imul
lahf
sti
sub
data16
arpl
push
cwde
and
inc
adc
repnz
xor
(bad)
sbb
or
push
lock
sti
xchg
loop
call
scas
fldenv
jp
pusha
mov
add
inc
test
sti
imul
ret
je
das
clc
inc
mov
or
mov
jmp
xchg
pop
mov
rcl
xor
mov
cmp
inc
and
mov
add
mov
mov
add
sti
arpl
add
mov
sub
push
outs
test
outs
push
xor
mov
jbe
arpl
cmps
movs
jp
adc
xlat
mov
cwde
push
test
inc
jnp
inc
adc
rcr
inc
push
inc
adc
push
inc
adc
push
inc
adc
or
xor
add
add
aas
std
pop
ins
pop
pop
jae
lods
std
or
in
ds
inc
fadd
inc
inc
fist
cdq
inc
or
mov
adc
addr16
jg
mov
mov
add
jmp
enter
adc
push
inc
push
inc
adc
push
inc
adc
push
inc
adc
aam
add
cdq
daa
cs
inc
adc
pop
or
cld
add
(bad)
push
xchg
and
pop
dec
test
push
dec
jns
jno
mov
jmp
data16
cmp
loopne
lock
mov
pop
xchg
lds
fistp
out
cmp
push
sahf
mov
lock
(bad)
imul
(bad)
daa
(bad)
in
push
mov
push
shl
pop
xchg
test
lea
rol
add
push
js
and
adc
sahf
and
mov
mov
adc
out
ss
mov
cmc
ins
in
jecxz
inc
out
pop
sbb
cmps
data16
dec
dec
sti
cmps
cmps
mov
or
cmp
xchg
xchg
sbb
mov
rcr
fiadd
cmps
ds
in
ficom
icebp
lea
push
ret
sub
mov
cmc
dec
dec
mov
push
push
(bad)
adc
mov
xlat
pop
cdq
push
jg
fmul
icebp
mov
int
inc
arpl
int
xlat
(bad)
inc
sbb
jl
dec
mov
test
pop
fcomp
push
(bad)
call
stc
xor
fidivr
xor
jns
ds
sbb
xor
repz
pop
inc
mov
adc
mov
(bad)
cmp
mov
clc
mov
(bad)
cli
adc
ret
jae
out
and
or
jge
mov
(bad)
mov
jge
pop
fiadd
dec
arpl
fnstenv
and
dec
jae
in
jg
mov
imul
outs
scas
dec
outs
es
gs
and
pop
inc
inc
pop
in
xlat
lods
push
lahf
xor
xchg
mov
bound
xor
(bad)
dec
or
inc
and
data16
pop
dec
or
js
pop
jmp
push
push
in
shufps
cmp
and
xor
test
mov
xchg
pop
enter
cmp
xchg
dec
aas
inc
pop
cmps
sbb
retf
pop
arpl
xchg
call
test
out
int3
jne
push
pop
mov
jne
add
sar
xlat
(bad)
fdivr
dec
idiv
add
mov
mov
movs
push
push
adc
adc
ficomp
pop
clc
shl
jg
adc
pusha
inc
push
mov
jb
ret
cmp
mov
mov
and
sti
fs
push
dec
movs
and
(bad)
mov
sbb
sahf
xchg
xlat
pop
mov
lods
cld
pop
icebp
push
push
stc
add
and
jp
in
mov
mov
push
xor
in
movs
jecxz
movs
sub
or
in
sbb
or
cs
inc
pop
dec
loope
inc
bound
icebp
scas
sub
push
ficom
mov
inc
ret
sub
retf
inc
lahf
inc
mov
inc
or
jecxz
cli
or
pop
div
jg
xor
jg
sbb
jg
aas
loope
mov
aas
popf
dec
cs
stc
xlat
fcom
ret
jg
hlt
pop
cld
xor
mov
add
int
lock
inc
mov
jg
inc
jecxz
repz
and
(bad)
adc
aas
inc
stc
ror
(bad)
(bad)
jne
add
pop
inc
or
jecxz
cli
or
pop
div
jg
xor
xor
mov
add
int
stc
inc
or
mov
test
iret
sar
je
jecxz
add
repnz
inc
inc
ret
sub
retf
inc
lahf
inc
mov
inc
or
jecxz
cli
or
pop
div
jg
xor
jg
sbb
jg
aas
loope
mov
aas
popf
sbb
inc
out
jo
or
lock
inc
mov
jg
inc
jecxz
jg
sub
retf
inc
lahf
inc
mov
iret
lahf
lock
cli
pop
into
(bad)
clc
inc
ins
std
movntq
aas
stc
xlat
fcom
ret
jg
hlt
pop
cld
xor
mov
add
int
lock
inc
mov
jg
inc
jecxz
repz
and
(bad)
adc
aas
inc
stc
shr
scas
mov
call
int
aas
fidivr
loope
inc
cld
mov
ret
ret
jne
std
jle
push
aam
enter
push
sub
std
mov
xchg
aam
jmp
dec
jl
cmp
into
cmps
mov
mov
xchg
push
sub
stos
xchg
jae
shr
(bad)
push
dec
popf
imul
mov
mov
adc
add
sub
adc
jmp
inc
daa
and
cdq
out
jg
(bad)
cld
popf
inc
test
jmp
out
(bad)
xchg
leave
pop
xchg
lds
sbb
iret
cli
(bad)
lahf
inc
inc
push
inc
popa
dec
stc
cmp
(bad)
and
lahf
repnz
lahf
cmc
std
aas
inc
add
mov
add
adc
pop
jmp
sahf
dec
sub
inc
add
test
pop
mov
scas
jmp
cli
mov
jae
xchg
repz
(bad)
inc
inc
pop
mov
inc
popf
xor
dec
std
and
dec
fmul
jecxz
xor
cld
sub
daa
imul
cld
sub
add
add
push
(bad)
add
push
loope
(bad)
pop
jl
icebp
adc
(bad)
push
xchg
shr
aaa
mov
mov
leave
sbb
ret
retf
aaa
lds
cld
iret
movs
pop
or
xor
scas
movs
pop
push
test
ins
out
lods
out
scas
mov
or
clc
inc
sti
sbb
inc
clc
shl
push
test
mov
hlt
ds
jg
iret
ret
mov
jl
adc
imul
sbb
inc
and
in
pusha
mov
clc
stos
cld
js
loope
test
lea
dec
xchg
dec
js
ret
in
pop
sbb
int
sub
imul
dec
dec
jmp
dec
in
sub
and
out
lods
mov
or
jne
dec
std
cdq
sub
arpl
pop
stos
stos
xchg
clc
mov
aaa
rcr
je
or
mov
popa
sbb
push
fdivr
mov
mov
add
add
ds
icebp
ss
(bad)
out
in
rcl
pop
xchg
or
jmp
cmp
cmps
cmp
ins
mov
pop
inc
stos
fimul
mov
jnp
clc
push
ret
call
mov
js
jl
xchg
ss
mov
sbb
cmp
pop
fcmovnb
sbb
adc
ret
mov
(bad)
call
mov
sbb
dec
xchg
scas
pop
mov
icebp
jmp
pop
push
inc
test
loopne
in
imul
outs
rcl
mov
repz
out
inc
adc
(bad)
dec
aad
into
sub
push
xchg
mov
mov
jmp
jle
cld
sub
icebp
mov
jecxz
push
sbb
xor
mov
add
fcom
inc
clc
test
mov
std
mov
outs
xchg
mov
mov
aaa
sar
add
lahf
in
lods
lahf
bnd
pop
imul
(bad)
mov
bound
pop
movs
xor
or
sub
and
lahf
add
cld
jne
imul
scas
js
sub
imul
out
jle
mov
adc
(bad)
fist
jle
call
(bad)
fiadd
aaa
jp
mov
ret
aad
inc
xor
out
(bad)
fstp
ds
push
dec
fist
pop
mov
lahf
test
pop
retf
popa
push
je
cmp
repnz
mov
sub
mov
xchg
lods
add
inc
out
mov
pusha
pop
mov
sub
add
pop
loopne
cmps
popa
cmp
mov
xchg
in
pop
inc
lock
loopne
mov
js
jmp
lock
adc
sti
pop
int3
mov
aam
push
ror
push
jae
cmp
imul
test
cmps
clc
(bad)
pop
mov
fist
pop
mov
(bad)
push
and
sahf
cwde
scas
adc
pop
movs
fucomi
mov
imul
ret
out
sbb
and
xor
sub
test
inc
pop
into
cmps
push
xchg
xchg
sbb
sbb
lds
(bad)
psubsw
jecxz
sbb
imul
jmp
cmp
(bad)
adc
neg
xor
popf
icebp
sti
jecxz
xchg
rcr
scas
fild
sbb
ffree
mov
adc
sub
mov
xor
fisttp
dec
pop
aaa
inc
xor
or
arpl
fcom
(bad)
dec
adc
fidivr
mov
pop
out
xor
je
clc
daa
aas
les
sti
push
shl
mov
neg
xchg
fnstsw
bound
lahf
sbb
add
sbb
xlat
in
mov
mov
push
jecxz
sbb
push
inc
hlt
not
lods
cld
and
movs
mov
ins
scas
or
and
pusha
mov
iret
push
mov
push
clc
or
mov
lea
add
inc
sbb
dec
lds
ret
jecxz
imul
mov
mov
push
inc
add
(bad)
lods
std
or
add
sar
daa
inc
fadd
inc
inc
fist
pop
inc
stos
aas
inc
pop
mov
pop
mov
add
adc
aad
out
ret
pop
stos
repz
sbb
jbe
jmp
cli
test
push
mov
pop
mov
adc
adc
rol
push
push
rol
lahf
je
ss
retf
mov
ds
jg
mov
and
push
cmp
jns
cs
cmp
jle
or
ret
out
enter
aam
scas
js
in
div
inc
popf
out
push
adc
cmp
arpl
scas
push
lock
mov
bnd
shr
jb
mov
jp
aas
(bad)
mov
fistp
out
xor
dec
nop
lods
rol
stos
xor
push
shl
pop
pop
js
out
fisubr
mov
xchg
loop
ins
mov
cld
xchg
stos
adc
popa
xchg
pop
sbb
push
shl
test
mov
lahf
or
cmc
sbb
(bad)
js
sti
mov
cmp
pop
mov
xlat
hlt
pop
jnp
jmp
aas
mov
sbb
out
inc
sbb
xor
(bad)
or
xchg
xor
imul
mov
ss
dec
sbb
jg
js
mov
xlat
out
lods
hlt
stc
scas
out
dec
adc
mov
jne
adc
ror
pusha
in
jmp
pop
enter
xchg
cmp
pop
ja
mov
(bad)
push
pop
adc
sbb
imul
jbe
and
jmp
aam
sbb
sbb
mov
imul
les
adc
jnp
test
rcr
fst
aas
or
(bad)
jne
(bad)
jmp
inc
cld
xor
mov
maskmovq
test
adc
jecxz
jp
xchg
ins
in
scas
adc
call
scas
and
push
jnp
xlat
movs
clc
and
repnz
in
ret
inc
and
(bad)
xchg
xor
ja
fldcw
mov
ret
jmp
or
fisttp
aas
and
int
jp
mov
loopne
loop
ficom
jno
sar
aad
lods
call
sub
cmc
jge
lea
lahf
sub
lds
xchg
mov
leave
jne
int3
out
sub
mov
push
imul
inc
or
cmp
jnp
add
aad
push
imul
lea
sbb
imul
adc
inc
out
fs
push
ds
xchg
pop
movs
test
mov
mov
sahf
and
cli
push
jbe
dec
fisub
xchg
cmps
je
xor
mov
scas
mov
(bad)
mov
movs
push
push
adc
jle
inc
bnd
xor
add
mov
out
hlt
inc
ret
pop
inc
icebp
cmps
jmp
scas
mov
jmp
push
les
mov
dec
jmp
jne
cld
adc
clc
push
into
dec
adc
and
sar
cmp
icebp
pop
push
push
pop
sbb
outs
mov
(bad)
shl
popa
sub
out
ja
sbb
sub
xchg
cmp
mov
(bad)
sub
add
aad
pop
sbb
cmp
or
ret
scas
xchg
inc
mov
repnz
jns
xchg
stc
into
dec
push
imul
not
rol
add
jle
dec
pusha
aas
sub
retf
xchg
dec
ds
popf
jb
or
fwait
outs
enter
xchg
fcos
add
(bad)
push
in
mov
ret
lahf
sbb
call
popf
xchg
inc
push
lods
adc
dec
jl
iret
cld
mov
movs
(bad)
push
je
icebp
das
jecxz
imul
cmps
sbb
cmp
sub
xchg
shr
scas
jp
jno
ficom
dec
dec
sbb
lahf
lock
lahf
sbb
call
popf
xchg
inc
push
mov
addr16
or
push
mov
add
aam
clc
fwait
icebp
(bad)
pop
sub
mov
adc
xchg
in
xchg
in
pusha
push
dec
scas
jnp
sbb
aas
std
push
mov
movs
(bad)
push
or
jmp
fld
xor
(bad)
iret
cli
adc
add
test
add
add
(bad)
push
in
mov
add
dec
jl
and
lock
aas
inc
adc
clc
shr
or
jno
and
pop
iret
jae
and
icebp
lahf
xor
lds
or
ficom
inc
cmp
call
ds
rcl
das
(bad)
cmp
(bad)
iret
cli
adc
add
stos
pop
(bad)
sbb
cmp
add
jmp
pop
pop
inc
push
inc
lds
cdq
icebp
jg
inc
mov
lods
clc
retf
sub
xchg
push
div
push
inc
cwde
sbb
cmp
mov
pop
les
xchg
dec
inc
or
icebp
mov
test
icebp
jmp
rcl
das
(bad)
cmp
pop
adc
pop
lock
add
test
add
add
mov
imul
(bad)
pop
int
les
int3
fdivrp
add
add
(bad)
push
in
mov
ret
jg
jg
dec
inc
retf
inc
push
test
aas
mov
sbb
scas
jecxz
push
sbb
imul
jno
sub
sub
repz
ja
out
adc
pop
inc
jbe
adc
mov
call
aam
arpl
fiadd
lock
lahf
sbb
loop
aas
xchg
stos
cmp
lock
(bad)
pop
or
sub
mov
jge
(bad)
and
daa
mov
test
(bad)
sbb
inc
outs
sbb
xor
daa
inc
loop
mov
jg
popa
clc
scas
inc
mov
in
xchg
jno
addr16
shl
and
sar
shl
imul
scas
(bad)
pushf
ror
push
ja
mov
mov
mov
inc
add
into
and
adc
pop
cmp
ror
dec
cmp
addr16
jne
adc
add
and
in
xlat
aas
jmp
jg
sbb
fdivr
inc
bnd
adc
add
and
jg
jb
aas
jmp
jg
sbb
lds
idiv
cmc
aaa
test
jo
push
inc
jnp
sahf
adc
xchg
xchg
push
xor
aaa
pop
clc
mov
add
inc
mov
add
add
cli
jg
out
sbb
retf
(bad)
(bad)
xlat
aaa
pop
ja
and
pop
mov
sbb
inc
fild
push
fnstenv
imul
cmp
cmp
loop
imul
icebp
pop
aam
outs
xor
cmp
fld
cmp
(bad)
fcomp
pop
add
xchg
xchg
push
pop
mov
add
mov
ds
in
icebp
push
repz
inc
mov
xor
or
dec
inc
and
add
ret
add
dec
loop
sti
add
pop
or
pop
imul
lea
cs
lods
ins
test
scas
mov
inc
pusha
stos
(bad)
std
push
imul
push
mov
pop
push
out
sti
sbb
add
mov
xor
mov
in
add
xlat
cld
lahf
ffreep
out
sti
add
mov
xchg
cld
fwait
outs
cmp
mov
cli
ds
repz
xchg
mov
add
cmp
imul
sbb
sub
out
movs
pop
add
not
out
outs
loopne
xor
std
xchg
pop
sar
pop
push
or
hlt
sbb
test
js
imul
dec
rol
xchg
aaa
adc
inc
mov
add
sub
(bad)
std
sub
push
cdq
sbb
call
sar
in
inc
std
test
xchg
push
stos
jg
lock
jg
cmps
pop
dec
sahf
jg
outs
stos
inc
popa
pop
lahf
in
stos
lahf
bnd
pop
imul
(bad)
mov
sti
int
cdq
(bad)
dec
clc
xor
inc
pop
cld
adc
out
das
adc
adc
je
inc
xor
out
rcr
das
(bad)
pop
add
into
cdq
cmp
sub
imul
cmp
xchg
jg
inc
in
mov
or
fnsave
cmc
int
out
aas
arpl
out
(bad)
pop
sbb
fcomp
cmp
out
mov
push
dec
adc
loopne
cmp
nop
cmps
dec
cmps
push
sub
scas
in
out
cmps
cmp
loop
lods
scas
imul
jg
arpl
fistp
xchg
loope
repz
lea
sub
pushf
sahf
pop
les
sub
jp
fsubr
out
lock
mov
call
div
jae
xor
cmp
and
jl
(bad)
jecxz
ret
imul
lods
scas
fsubr
mov
retf
sbb
(bad)
fdivr
pushf
cmp
nop
cld
cmp
fnstsw
sbb
fs
xchg
sti
dec
dec
shr
cld
dec
xchg
clc
(bad)
mov
xor
ins
shl
popf
sbb
push
cmps
mov
mov
jne
daa
movs
jl
lock
cmp
scas
jnp
popa
ins
sbb
imul
enter
add
call
fsub
div
out
minps
adc
fisubr
adc
add
jmp
mov
sub
loope
ret
pop
ret
not
div
ret
and
and
mov
fbstp
xlat
mov
gs
jmp
mov
push
pop
les
mov
jae
jns
lods
lods
dec
iret
out
and
cmp
pop
cmps
ds
xchg
clc
push
hlt
fstp
sbb
je
jl
mov
pushf
xchg
dec
pop
daa
clc
sbb
lods
out
loope
fsub
or
dec
inc
jecxz
ret
sbb
inc
or
xor
scas
adc
pop
clc
aaa
push
mov
es
or
out
dec
movs
jge
icebp
pop
ret
mov
xor
arpl
ins
sub
xor
fs
hlt
or
add
adc
xor
outs
push
adc
shr
push
mov
les
and
or
mov
add
loope
stc
xor
mov
not
mov
add
div
in
aas
jmp
dec
loop
std
test
hlt
jge
js
lahf
lock
stos
cld
iret
dec
add
push
popf
(bad)
movs
jle
data16
shr
mov
xor
mov
xchg
fadd
jbe
sbb
fisub
fisttp
adc
add
push
pop
fild
adc
pop
mov
test
call
jo
jbe
push
adc
jno
mov
in
jmp
cwde
pusha
cmovae
xlat
les
sub
jb
call
adc
pop
and
jg
inc
cmp
addr16
dec
cmps
inc
bound
cmp
lods
loope
icebp
pop
mov
fsubr
xor
add
pop
xchg
mov
dec
pop
jp
(bad)
in
cmp
push
mov
jnp
inc
int
jmp
jnp
inc
pusha
jb
cmp
ficom
ficomp
pop
mov
pop
mov
mov
add
(bad)
cmp
sbb
mov
(bad)
xor
sbb
xchg
rcr
loope
in
sbb
xchg
dec
cmp
inc
lock
push
and
leave
push
adc
dec
loopne
mov
cmp
(bad)
lods
(bad)
inc
ins
ja
push
into
icebp
inc
mov
ret
jae
mov
sbb
outs
ret
fidiv
xchg
loope
adc
je
in
rol
mov
aas
dec
jg
out
inc
(bad)
lea
and
mov
dec
adc
movs
enter
mov
pop
add
cmp
sar
outs
jecxz
mov
test
out
or
retf
mov
mov
jae
rcl
(bad)
mov
cdq
div
stos
iret
push
fs
dec
femms
pop
int
jb
jns
and
xchg
pusha
sub
sbb
push
mov
mov
or
int
sbb
pop
dec
icebp
push
(bad)
and
push
je
mov
movs
ror
pop
mov
jecxz
test
push
(bad)
out
fs
xchg
std
pop
mov
push
arpl
inc
test
(bad)
out
imul
xchg
inc
mov
sar
cmc
out
imul
pop
or
fstp
sub
ins
nop
lds
ret
popa
jo
jl
xchg
int
mov
in
repnz
repz
test
out
sub
mov
add
inc
add
mov
adc
mov
shl
retf
arpl
cmp
jmp
xlat
(bad)
std
jae
out
jecxz
mov
loopne
or
jp
cmp
add
sar
xor
xchg
inc
aas
sbb
movs
adc
out
pop
mov
iret
in
dec
jecxz
sti
jb
add
sub
shl
mov
mov
lea
in
iret
inc
dec
loopne
pop
fistp
xlat
sti
xor
xlat
adc
imul
shl
pusha
aaa
ins
jge
sti
add
jno
inc
fidiv
int3
mov
out
int
loope
mov
jge
jle
jno
fsubr
jmp
sub
pop
cli
sbb
lock
sbb
sahf
cli
imul
lahf
lods
outs
adc
add
jbe
std
repz
jmp
mov
sar
cwde
push
mov
std
loope
and
sti
xor
push
add
enter
sub
add
aad
add
xlat
jmp
ret
int
sti
aaa
rcr
arpl
add
cld
xchg
inc
inc
fldcw
mov
repnz
pop
imul
mov
int
xor
fld
rol
data16
icebp
jge
mov
nop
imul
sbb
les
add
rcr
icebp
jne
stos
ds
sti
and
cmp
sub
inc
or
cmp
mov
add
add
cmp
sub
fdivr
int
inc
stos
jp
fucom
fild
repz
outs
das
pop
cmp
in
sub
lock
and
stc
arpl
outs
in
aas
mov
cmps
test
imul
mov
shr
in
in
retf
and
xor
mov
dec
shl
or
push
mov
imul
(bad)
xor
mov
cld
jbe
xchg
mov
lods
movs
nop
aas
test
stc
xor
pop
mov
add
mov
lods
sbb
fcomi
and
dec
adc
into
push
out
not
clc
jae
les
aas
bound
std
test
xor
ret
sbb
mov
lock
ret
pop
push
ror
ret
or
out
jo
(bad)
cmc
das
stc
sbb
std
sub
sar
inc
outs
(bad)
cld
inc
retf
std
out
(bad)
xchg
mov
pop
mov
arpl
mov
jo
mov
std
mov
jp
mov
adc
sbb
in
popf
inc
loopne
add
push
dec
in
xor
rcr
mov
pop
and
fisubr
push
shl
enter
jae
mov
pop
mov
das
sbb
fistp
sbb
movs
aam
xor
push
jae
cmp
scas
mov
imul
(bad)
mov
jmp
ss
mov
mov
and
retf
cmp
cdq
out
pop
(bad)
pop
mov
jne
sahf
xchg
xchg
mov
inc
jmp
fdivr
loopne
xchg
or
pop
inc
cld
inc
dec
sub
jle
stc
fcomip
inc
dec
mov
add
and
scas
add
(bad)
push
cli
xchg
xchg
loop
sbb
mov
jne
mov
addr16
mov
(bad)
(bad)
pop
push
dec
or
sub
jg
mov
loop
add
leave
dec
cmps
xchg
rcl
in
adc
jne
not
mov
dec
lahf
std
push
cmps
pop
jge
pop
cmc
dec
hlt
scas
mov
push
adc
retf
lock
loope
in
stos
outs
pop
retf
xchg
mov
inc
xchg
stc
xlat
popf
arpl
add
out
jle
or
cmp
cmp
add
pop
retf
inc
lock
retf
mov
xchg
fwait
cmp
(bad)
std
test
inc
pop
outs
jg
call
jecxz
jg
hlt
inc
cli
sbb
sti
sbb
mov
sbb
and
mov
rol
loop
pop
lea
adc
mov
dec
or
add
mov
jle
cmc
es
jecxz
into
and
ret
add
pushf
mov
add
in
(bad)
ror
add
push
fisttp
add
pop
loop
adc
xchg
mov
(bad)
loope
and
or
sbb
pop
cld
nop
sar
clc
inc
inc
mov
retf
dec
icebp
mov
aam
or
jno
mov
add
sbb
mov
js
pop
fucomi
and
test
repnz
out
jb
push
cli
or
xor
dec
(bad)
idiv
sar
mov
(bad)
lahf
push
lods
and
mov
mov
(bad)
neg
repnz
stos
in
mov
pop
jecxz
ret
aaa
xchg
dec
mov
shl
mov
adc
mov
cli
jecxz
mov
cs
and
iret
sub
pop
fcomp
pop
jmp
or
sbb
adc
iret
adc
data16
movs
push
push
lahf
test
retf
je
or
(bad)
push
or
stos
dec
push
pop
xor
mov
iret
cmp
aaa
aam
jmp
mov
popf
cwde
cli
jb
jl
sti
sub
push
in
jns
sbb
jbe
sti
sbb
sbb
sbb
cmps
icebp
or
aam
enter
in
jecxz
mov
mov
jne
inc
int3
jb
mov
pop
jbe
add
clc
push
xor
mov
add
xor
cmps
dec
sub
push
gs
enter
mov
ret
jns
push
inc
sahf
ds
in
inc
std
adc
inc
or
in
sbb
arpl
fld
cmp
enter
and
clc
push
jecxz
push
inc
shr
enter
das
pop
mov
icebp
test
push
pop
sahf
xlat
std
inc
call
popf
movs
mov
enter
ds
inc
mov
sbb
push
lds
push
mov
adc
in
mov
pop
sub
imul
mov
fnsave
dec
mov
fs
push
aad
adc
shl
inc
in
sub
cmps
outs
scas
rcr
or
in
sahf
ds
push
lahf
ins
jge
je
mov
sbb
xchg
xor
call
jns
jae
(bad)
in
mov
sar
xchg
out
sub
push
imul
ins
inc
mov
and
fdiv
cmps
aaa
fbstp
js
mov
inc
push
out
sub
or
aam
pop
push
jg
inc
mov
sbb
test
xchg
mov
mov
leave
mov
out
xchg
out
dec
loopne
push
sar
or
ds
icebp
mov
pop
sub
cmp
fldcw
mov
push
dec
scas
(bad)
or
mov
scas
mov
test
repnz
out
and
jns
dec
daa
jmp
pop
lock
out
(bad)
mov
jmp
cs
neg
mov
in
ret
ret
out
inc
pop
cli
xchg
or
out
gs
jmp
ror
call
ret
test
test
neg
add
xor
push
fcom
and
jnp
jp
les
fisttp
xlat
ficom
popa
ins
cmps
sub
mov
and
shl
ds
aas
mov
cmp
pop
(bad)
pop
icebp
mov
xchg
add
or
hlt
pusha
sub
xlat
sbb
sahf
bsf
add
shr
popf
jbe
fisubr
fstp
(bad)
push
push
xchg
movs
stos
dec
repnz
sub
pop
or
rcr
mov
adc
js
loop
mov
xchg
loop
cmp
push
dec
dec
inc
retf
setg
cmp
mov
das
dec
mov
std
stos
cmp
imul
cmp
mov
retf
sub
jecxz
xor
push
cmc
icebp
jno
icebp
icebp
sub
int
icebp
push
cmps
cmp
(bad)
inc
pop
pop
out
jl
scas
clc
into
out
(bad)
adc
mov
aam
sahf
loope
jp
jb
cmp
mov
(bad)
sahf
mov
jecxz
into
ror
js
or
pop
sub
dec
jnp
hlt
jmp
je
fadd
xor
cmps
ds
(bad)
jp
ret
jg
sahf
and
xor
mov
cmp
and
inc
jb
sub
retf
ret
cmps
(bad)
out
add
push
xor
ins
in
mov
int3
test
adc
push
shl
scas
addr16
lahf
adc
cmp
scas
pop
jmp
test
fs
std
aad
mov
(bad)
out
addr16
jbe
rcr
sub
arpl
lahf
push
call
sbb
adc
or
xor
add
add
aas
std
pop
outs
pop
pop
js
pop
mov
cmp
(bad)
push
dec
sti
sbb
lods
and
adc
out
scas
sbb
clc
and
cld
cdq
in
outs
cld
jnp
adc
jb
fnstsw
imul
pop
and
fisttp
inc
fcmovbe
les
fidiv
shl
jo
pushf
loopne
mov
push
push
aam
ret
jle
jle
scas
xlat
lds
xchg
jle
ror
xchg
in
cmps
jp
addr16
push
in
(bad)
mov
ds
sub
fnstsw
repz
test
fadd
retf
repz
scas
cwde
mov
add
pop
cld
or
hlt
ja
shrd
push
mov
cdq
dec
inc
adc
and
mov
icebp
loope
jae
fwait
lock
mov
mul
mov
cmps
adc
mov
mov
mov
add
fidivr
inc
add
dec
shl
jecxz
dec
xchg
sti
pop
cmp
pop
dec
pop
fnstcw
mov
movs
mov
fild
mov
adc
jbe
push
jge
adc
dec
div
daa
mov
cmp
popf
adc
mov
loop
fild
or
iret
xchg
call
int3
or
or
fld
imul
sar
and
mov
rol
ins
les
addr16
mov
(bad)
outs
cwde
cli
xlat
rcr
sbb
push
inc
sbb
loop
test
call
das
rol
xchg
adc
imul
mov
inc
out
xor
cmp
mov
lea
and
repnz
or
or
pop
pop
jp
mov
xor
cmp
jecxz
js
in
and
clc
jne
dec
inc
pop
hlt
prefetch
cmc
sub
(bad)
aam
mov
xlat
mov
mov
jl
jnp
push
ret
xor
lods
mov
fsubr
stos
cmp
out
jo
adc
mov
jb
stos
cmp
fld
addr16
fisttp
jecxz
sti
cld
jne
push
pop
mov
sbb
ret
push
xchg
jbe
ss
xor
mov
mov
push
fstp
add
sub
mov
jge
sbb
mov
add
mov
push
add
rcr
mov
mov
sar
mov
sbb
adc
mov
aam
sub
sub
je
in
jno
fistp
(bad)
jns
sub
out
mov
sbb
arpl
pop
(bad)
dec
sar
sti
dec
scas
and
jge
pop
mov
xchg
out
out
dec
popa
jmp
std
mov
imul
inc
add
in
(bad)
inc
daa
inc
jecxz
sti
jae
add
cmp
ret
push
mov
test
cdq
mov
xor
pop
out
mov
fldenv
gs
in
jg
cwde
mov
mov
nop
int3
fidivr
jno
int3
sbb
test
icebp
mov
and
enter
ret
mov
dec
push
cmps
sub
movs
cmp
dec
dec
mov
cld
imul
add
or
das
in
sbb
adc
sbb
lds
pop
movs
jnp
iret
(bad)
inc
or
std
and
scas
mov
jnp
or
dec
cmps
xchg
out
jmp
push
xchg
push
sbb
xchg
nop
mov
cdq
xchg
inc
scas
xor
out
sub
out
js
push
repz
dec
int3
repz
enter
sbb
js
into
cmp
push
inc
mov
in
pop
inc
nop
cwde
inc
cdq
sti
into
jle
into
fnsave
jg
js
mov
mov
lock
inc
leave
inc
enter
data16
in
or
pop
jg
xchg
stc
popf
mov
pop
lea
(bad)
mov
imul
push
mov
(bad)
setb
mov
sbb
int
cld
cmp
lock
shl
push
pop
sub
cmp
dec
fwait
clc
pushf
retf
adc
or
push
add
jns
xchg
lock
inc
leave
inc
enter
add
js
mov
mov
or
push
loop
mov
sar
out
mov
clc
mov
xor
bound
inc
(bad)
adc
mov
imul
les
add
iret
inc
mov
jns
push
jae
outs
and
sub
inc
sub
ret
aas
xchg
std
nop
std
stc
xchg
inc
xchg
sub
ds
add
icebp
scas
jg
cdq
aas
stc
adc
test
mov
sahf
and
push
xor
cld
adc
loop
retf
imul
pusha
xchg
jns
mov
stc
test
out
xchg
arpl
popf
sti
push
fisttp
cld
dec
imul
and
ins
enter
mov
mov
cld
pop
fcomip
out
inc
clc
add
add
mov
inc
in
test
inc
xchg
dec
out
sbb
popf
out
ret
pop
(bad)
pop
or
sub
call
(bad)
iret
and
jmp
push
sbb
cmp
icebp
out
(bad)
cmc
(bad)
mov
mov
mov
and
pop
add
call
hlt
cmp
fcomip
out
inc
clc
add
add
mov
inc
in
call
fwait
pushf
sub
cmps
adc
leave
mov
pop
ror
add
sub
popa
adc
mov
test
jae
inc
pop
jecxz
pop
loop
scas
sbb
push
xlat
outs
push
sub
out
out
in
xor
pop
pushf
pushf
add
imul
icebp
scas
jg
cdq
aas
stc
adc
nop
std
stc
xchg
inc
xchg
sub
(bad)
ret
(bad)
outs
mov
js
scas
sub
dec
retf
int3
repz
fwait
adc
sbb
movs
sahf
cwde
cld
jno
xchg
ins
inc
nop
inc
icebp
mov
inc
enter
push
ds
and
push
(bad)
sti
pop
aad
fist
stos
test
or
jnp
push
dec
jg
add
push
cmp
dec
cs
out
call
repz
mov
sbb
cmp
sub
fcom
xchg
sbb
cld
xchg
imul
dec
(bad)
addr16
aam
mov
mov
and
movs
(bad)
leave
sbb
movs
imul
dec
(bad)
sbb
in
loopne
mov
sbb
or
in
call
iret
in
xchg
sti
pop
js
js
loop
out
mov
mov
mov
pop
inc
lahf
into
mov
and
loope
mov
cmp
icebp
dec
sub
shl
shl
sub
cmp
dec
test
sub
sbb
lahf
enter
push
sub
pop
js
loopne
arpl
cld
inc
(bad)
jno
aad
mov
loope
clc
adc
add
push
inc
rcr
fist
xor
retf
outs
test
ret
inc
inc
div
cmp
push
scas
inc
xor
add
xor
or
add
loopne
mov
push
jg
sti
xchg
daa
cld
retf
out
cmp
push
mov
add
rol
inc
lock
pop
inc
(bad)
adc
sbb
cld
pop
xchg
inc
xchg
test
aam
retf
cli
xchg
(bad)
neg
imul
cld
and
add
call
clc
comiss
add
push
inc
or
ror
add
inc
enter
das
in
jo
dec
inc
xor
into
adc
pop
cmp
mov
scas
out
(bad)
adc
sbb
cld
pop
xchg
inc
xchg
test
add
or
in
add
push
mov
repnz
add
lods
sbb
ja
add
test
mov
add
aam
ret
and
mov
scas
inc
xor
add
xor
pop
fcomp
push
jg
mov
mov
inc
test
inc
std
adc
pop
inc
add
inc
in
aas
loope
clc
adc
add
push
inc
sar
sbb
out
pop
aas
out
jns
jg
inc
inc
div
cmp
push
scas
inc
xor
add
xor
or
add
loopne
mov
mov
aam
repz
mov
mov
inc
loope
clc
adc
add
push
inc
sar
sbb
jg
inc
aad
add
push
pop
inc
sti
push
jg
sti
sub
stc
xchg
fidiv
fcmovbe
sar
lods
sbb
jl
inc
mov
loopne
mov
and
add
call
clc
comiss
add
push
std
test
xchg
std
shl
cld
retf
out
cmp
push
mov
add
rol
inc
lock
pop
inc
(bad)
adc
sbb
cld
pop
xchg
inc
xchg
test
aam
retf
cli
xchg
(bad)
neg
imul
cld
and
add
call
clc
comiss
add
push
inc
or
ror
add
inc
enter
das
in
jo
dec
inc
xor
into
adc
pop
cmp
scas
sbb
sbb
cld
pop
xchg
inc
xchg
test
xor
les
inc
repnz
pop
fcomp
push
jge
fidivr
cmps
stos
sub
pop
and
lahf
pop
aad
pop
adc
pop
loopne
cmp
imul
fistp
or
stc
out
outs
retf
pop
ret
pop
cmps
movs
jmp
mov
(bad)
sub
mov
add
sbb
scas
cmc
lods
push
(bad)
call
loop
adc
adc
dec
sbb
xor
cmp
mov
mov
pushf
cli
sbb
dec
scas
movs
push
mov
jecxz
jbe
mov
in
and
stos
push
jmp
xchg
repnz
xchg
push
out
inc
call
cmp
(bad)
jbe
(bad)
xor
test
test
push
test
mov
mov
sub
xor
bound
test
sub
ins
push
out
stos
(bad)
fisubr
mov
jg
and
cmp
xor
call
pop
loope
cmp
mov
xor
pop
mov
and
(bad)
sbb
adc
ret
in
push
sub
ret
xchg
cmp
mov
pop
inc
pop
cld
dec
fwait
push
mov
sbb
mov
push
fadd
dec
sahf
cmc
mov
lock
mov
mov
mov
add
xchg
mov
pushf
pop
xchg
lods
jl
lods
js
push
(bad)
call
movs
adc
scas
dec
addr16
and
dec
cmp
and
adc
mov
mov
mov
mov
jns
jl
sbb
jo
pop
ds
and
mov
pop
jl
aam
in
lods
int
test
and
daa
mov
inc
jo
inc
push
cmp
lea
dec
mov
sbb
les
jne
and
sti
mov
or
push
fcomp
jne
sub
stc
pop
into
ins
outs
(bad)
fstp
cli
jp
cmp
xor
mov
mov
sbb
xlat
xchg
mov
fisttp
pop
xchg
ret
cmps
in
test
xchg
xchg
fisubr
xchg
rcr
lock
std
inc
inc
pop
stos
retf
dec
(bad)
iret
jecxz
push
lahf
mov
leave
std
sub
add
scas
inc
cmp
jae
clc
imul
mov
push
push
jge
es
xor
sub
leave
push
addr16
(bad)
movs
imul
cdq
cmp
fild
sbb
inc
or
sbb
mov
lods
imul
sub
dec
repnz
pop
jae
fdivr
bnd
xor
add
mov
loope
add
mov
adc
or
push
inc
or
(bad)
int
pop
(bad)
lahf
stos
cld
ret
scas
retf
sbb
inc
adc
pusha
adc
inc
fisubr
pushf
cwde
sar
bound
in
push
dec
mov
add
mov
repnz
mov
dec
mov
xchg
retf
jbe
repz
push
add
fldcw
fnstenv
repz
push
add
fldcw
fnstenv
repz
push
add
fldcw
fnstenv
repz
push
add
fldcw
fnstenv
repz
push
add
fldcw
fst
dec
adc
add
movs
dec
inc
sbb
add
sub
push
out
pop
pushf
aad
sub
test
aaa
xchg
ret
dec
inc
test
out
(bad)
std
adc
in
fs
jg
aaa
pop
imul
add
adc
pop
add
mov
aas
loope
mov
mov
ret
imul
mov
scas
add
mov
aas
loope
mov
mov
ret
imul
mov
scas
add
mov
aas
loope
mov
mov
ret
imul
mov
scas
add
mov
aas
loope
mov
mov
ret
imul
mov
scas
add
mov
aas
loope
mov
mov
ret
imul
mov
scas
add
mov
aas
loope
mov
mov
ret
imul
jmp
add
sbb
and
das
out
sar
add
fcomp
lods
cli
sub
mov
inc
test
out
sar
add
fcomp
lods
cli
sub
mov
inc
test
out
sar
add
fcomp
scas
add
pop
mov
cmp
frstor
mov
mov
rol
ds
add
mov
inc
clc
inc
loop
in
sub
fcomp
mov
sub
fiadd
inc
aad
push
(bad)
inc
and
pop
mov
enter
frstor
add
mov
push
jb
sub
adc
loopne
pusha
adc
scas
and
add
test
add
aaa
icebp
jmp
les
or
add
pop
jmp
xchg
inc
lods
xchg
lds
scas
jb
dec
shl
test
fcom
and
aam
movs
bound
lock
pop
lahf
pop
pop
jge
pop
lock
movs
sub
and
adc
dec
loopne
ds
aas
retf
pop
outs
pop
imul
rol
sbb
cmc
push
adc
push
xchg
jp
(bad)
mov
pop
xchg
rcr
out
out
and
sub
cmps
cmp
pushf
(bad)
movs
xor
jns
test
arpl
iret
mov
cmp
test
or
xchg
jae
dec
adc
pop
push
sub
repz
ret
mov
mov
daa
cwde
mov
mov
es
and
jmp
dec
popa
cmp
add
lods
cmp
call
and
jo
inc
adc
mov
enter
mov
add
jmp
cmp
repz
mov
mov
inc
outs
jg
inc
add
neg
ja
pop
mul
inc
movs
jo
test
jmp
pop
loope
xchg
stc
mov
clc
shl
jg
push
iret
push
jnp
mov
popa
into
inc
mov
lea
push
iret
push
jnp
mov
add
cmp
rol
ins
mul
add
fimul
add
iret
push
jnp
mov
add
cmp
rol
ins
mul
add
fimul
add
iret
push
jnp
mov
add
cmp
rol
ins
mul
add
fimul
add
iret
push
jnp
mov
add
cmp
rol
ins
mul
add
fimul
add
iret
push
jnp
mov
pop
mov
add
xlat
ret
mov
(bad)
sar
les
pop
mov
cmp
movs
stos
iret
xor
rcl
nop
jo
je
sub
neg
arpl
add
sbb
jg
outs
sub
mov
(bad)
cwde
add
jo
repnz
test
push
fdiv
dec
and
lock
pop
jno
or
mov
xchg
or
xchg
dec
sar
add
mov
push
cmp
outs
jae
mov
xor
sbb
dec
ds
dec
adc
in
out
mov
lods
idiv
mov
cmp
aam
enter
push
jge
(bad)
mov
jge
imul
ja
js
out
daa
pop
xlat
xchg
mov
sub
std
push
or
sub
xchg
arpl
pop
in
add
pop
and
imul
jb
out
push
jmp
mov
test
fsubr
(bad)
stc
ret
inc
add
sbb
std
movs
hlt
or
das
lds
imul
cli
dec
test
xchg
pop
inc
repz
mov
push
cmp
aas
push
scas
js
add
sub
js
popf
pop
sti
sbb
jl
dec
cdq
adc
ret
ins
sahf
ret
cmp
(bad)
fidiv
cs
out
dec
mov
idiv
popf
or
xchg
call
fsubr
ins
inc
bound
mov
inc
xlat
cmc
mov
mov
mov
test
inc
add
pushf
adc
fld
or
and
out
ins
lods
test
sub
or
sub
jmp
xor
xor
ret
lock
cs
xor
adc
dec
in
jecxz
cwde
xchg
aas
push
jmp
jecxz
fiadd
icebp
int
lea
pop
mov
sub
add
jmp
out
push
xor
fdiv
xchg
mov
add
mov
imul
jmp
icebp
sbb
mov
sahf
(bad)
shl
and
shl
adc
es
xor
es
imul
mov
lea
cmps
push
lahf
and
(bad)
sbb
cwde
mov
retf
cmp
push
pop
test
push
add
aaa
in
popf
lods
mov
int
outs
xor
pop
inc
data16
mov
in
fcmovnu
aad
mov
repz
aas
lds
(bad)
jmp
inc
sar
clc
dec
inc
pop
cmps
mov
scas
jno
fcom
xor
retf
add
add
cmp
test
jecxz
into
or
inc
cmp
jo
and
xchg
cmps
scas
cld
sbb
lock
retf
push
lock
xchg
mov
jns
jne
scas
aad
ins
pop
push
fadd
jo
push
jb
or
std
pop
cmp
cmp
clc
cmp
xchg
popa
pop
test
inc
jge
and
and
mov
push
repz
call
push
pop
add
mov
jmp
push
lock
fadd
stos
add
dec
and
imul
out
mov
sub
in
mov
sbb
mov
dec
cmps
test
sbb
adc
mov
jge
clc
mov
jnp
movs
push
scas
dec
xor
inc
das
shl
sbb
lods
in
ds
fisubr
ins
mov
ret
mov
cmp
mov
repz
mov
xchg
dec
aaa
cmp
adc
dec
jl
aam
clc
push
loopne
or
mul
les
mov
mov
jbe
add
mov
push
loopne
enter
jae
cmp
psrad
in
and
mov
call
mov
shr
cli
xchg
adc
cmps
rol
and
dec
retf
adc
fadd
dec
sbb
iret
sbb
outs
loop
iret
lds
out
sub
icebp
ret
adc
in
and
nop
cmp
jae
(bad)
clc
jl
xchg
jecxz
xchg
mov
stc
fldcw
vpaddd
push
les
sbb
mov
rcr
add
mov
int3
jne
pop
or
sbb
mov
pop
icebp
mov
out
xchg
xchg
pop
outs
cld
xor
ret
clc
xor
ds
adc
(bad)
sbb
retf
mov
test
ficomp
imul
arpl
fld
fsin
rcr
movs
cmps
ret
aas
clc
inc
xchg
imul
mov
rol
ffree
add
sbb
shl
sahf
xor
mov
jge
pop
icebp
adc
jmp
pop
leave
sub
leave
or
or
sbb
pop
sbb
ret
test
pushf
jge
sti
xor
cmps
test
aad
add
inc
imul
cmc
mov
xor
pop
push
dec
cs
sbb
loop
fcom
aaa
jl
push
sub
iret
and
lar
lahf
pop
lock
mov
into
int3
leave
jne
cmp
xchg
and
or
mov
sbb
sub
push
std
mov
pop
shr
fst
adc
loopne
cmp
aam
(bad)
jecxz
xchg
loop
mov
stos
xchg
fisttp
mov
xor
xchg
into
fnstsw
loopne
cs
lock
popf
and
faddp
int3
lahf
push
enter
sbb
stos
adc
sahf
lods
jns
hlt
jp
stos
xor
aaa
xchg
test
daa
aas
ret
ss
add
jg
sbb
scas
adc
dec
or
sbb
addr16
jle
jl
mov
xchg
ds
sbb
fs
ret
into
icebp
ins
fcom
or
bound
xor
sub
mov
and
xchg
loop
dec
sub
jmp
xchg
sub
inc
js
fild
daa
and
xor
movs
mov
js
dec
aam
pop
or
inc
xchg
imul
mov
in
sbb
movs
cs
in
into
or
iret
inc
xor
dec
push
dec
ficomp
jmp
xor
jb
cmps
idiv
mov
test
out
mov
or
fsubr
jp
popf
xlat
ftst
aam
js
xor
repnz
pusha
ror
mov
jns
(bad)
out
fnstenv
jbe
cmps
nop
jp
mov
loope
mov
in
mov
xchg
and
in
sahf
inc
mov
and
test
mov
inc
inc
call
imul
das
or
loopne
add
dec
mov
call
push
sub
mov
inc
pop
icebp
aas
(bad)
das
xchg
pop
fucomp
call
dec
mov
push
(bad)
rol
xchg
sbb
xchg
mov
mov
in
jl
(bad)
jo
(bad)
xchg
aad
fdivr
bound
sub
fld
stos
ds
xchg
cld
pop
aas
jmp
in
lods
cli
(bad)
mov
push
scas
loop
ja
lock
outs
cmps
sbb
outs
daa
call
adc
inc
fcmovne
sbb
jb
pop
iret
ds
enter
add
xor
mov
sbb
fwait
pop
mov
jp
xchg
xor
loop
sub
outs
repnz
enter
shl
adc
dec
cmps
lds
clc
(bad)
loop
cmp
push
not
fimul
mov
movs
adc
xchg
pop
add
(bad)
xlat
nop
jl
icebp
inc
test
push
mov
fcmovbe
mov
adc
mov
aas
addr16
not
inc
aas
xor
cmp
ds
jae
iret
sub
sahf
mov
test
nop
pop
pop
sbb
and
(bad)
xor
sub
test
xor
pop
xor
lods
and
adc
ins
fs
int
dec
xor
jecxz
hlt
scas
int
out
adc
jecxz
cmc
int
leave
ins
lods
xchg
add
stc
mov
xor
scas
push
aam
push
inc
push
clc
stos
icebp
das
(bad)
shr
leave
jno
jge
jecxz
call
jno
xchg
dec
xor
or
pop
dec
xchg
cmp
in
or
(bad)
sbb
xchg
clc
add
inc
jns
sbb
fidivr
je
and
ins
in
jl
shl
jae
repz
cld
add
inc
idiv
aam
xchg
test
adc
cmps
or
xchg
push
inc
inc
inc
or
or
jg
sub
cmp
mov
pop
jmp
mov
xor
inc
dec
mov
inc
and
retf
and
adc
in
pushf
mov
out
cmp
sbb
fisub
ds
dec
shr
pop
inc
xchg
enter
xchg
jns
inc
ins
push
mov
inc
xchg
ins
sahf
js
or
jmp
lds
push
push
jle
sbb
outs
or
or
fcmove
add
mov
into
js
imul
push
sti
and
movs
xlat
mov
shl
aas
sbb
lods
cmc
fs
mov
mov
add
cdq
cwde
adc
ss
mov
xchg
pop
sbb
jmp
mov
push
out
push
sahf
cmp
(bad)
pop
or
push
pop
lahf
ret
pop
(bad)
xlat
call
xchg
sub
ret
pop
mov
dec
mov
mov
sahf
xchg
push
fs
ins
jge
loop
fldpi
loope
test
sbb
loope
lea
pop
outs
icebp
int
xchg
movs
fisubr
inc
out
and
adc
add
jecxz
add
fcom
nop
(bad)
addr16
fcmovb
mov
dec
test
neg
cmp
dec
xchg
stos
mov
jns
add
cmc
lahf
clc
sub
and
shl
cmc
(bad)
pop
fwait
mov
mov
movs
ret
scas
int3
xchg
and
and
ss
addr16
mov
pop
jne
das
xchg
lock
(bad)
push
lock
mov
dec
cs
retf
test
mov
and
call
push
push
jno
inc
and
popa
movs
xor
mov
je
push
mov
mov
fdivr
test
addr16
and
mov
inc
mov
add
mov
cmp
in
ds
mov
mov
mov
adc
mov
aad
sbb
hlt
mov
cmp
jl
fwait
mov
test
adc
in
sahf
inc
cmp
pop
sbb
ins
retf
lods
push
fidivr
ret
ds
jl
loope
shr
in
arpl
in
cs
xchg
mov
pop
xor
aaa
xor
add
mov
jg
push
clc
fistp
mov
aam
pop
or
mov
push
fidivr
sbb
outs
cmp
and
jne
clc
es
and
mov
lods
imul
fld
jp
lods
jne
ins
xchg
outs
(bad)
jb
addr16
fsub
and
mov
or
xor
inc
paddb
mov
les
pop
js
(bad)
adc
adc
and
bound
and
mov
retf
inc
jae
sti
jnp
fldpi
ss
xchg
lock
inc
shl
dec
lea
pop
les
push
into
in
fidiv
div
and
and
mov
cmp
mov
fisttp
xchg
js
mov
jg
inc
xchg
mov
mov
and
jb
call
lods
cmp
dec
sahf
adc
push
cld
pop
clc
test
mov
call
inc
lods
and
dec
jbe
es
push
jbe
pop
jb
xor
loopne
fdivp
xchg
lds
add
jmp
push
mov
mov
dec
mov
leave
and
xor
and
jns
mov
dec
pop
clc
aaa
loop
icebp
push
mov
dec
stos
sub
xor
pop
enter
fs
inc
sbb
mov
imul
mov
and
sub
movs
pop
retf
and
ins
(bad)
in
xchg
push
fadd
add
fild
sar
fs
fist
je
jnp
pop
sub
add
seta
shr
ins
scas
sub
ficom
jecxz
mov
sbb
add
pop
mov
aas
mov
cmp
cmp
dec
(bad)
fisubr
sub
(bad)
ins
push
cmp
xor
jne
sti
mov
pusha
or
sahf
jb
sub
lock
test
loope
xchg
mov
(bad)
jb
xor
mov
xor
push
or
and
fstp
xlat
inc
shr
mov
shr
jmp
mov
and
or
mov
int3
pop
stc
jmp
pop
mov
in
mov
and
push
xor
sbb
inc
push
ins
jo
inc
sub
adc
in
mov
jecxz
cmp
push
dec
xchg
mov
inc
cmp
fdiv
lock
imul
jae
jmp
not
aad
and
rol
int
lea
dec
shl
int
shl
dec
mov
xchg
sbb
pop
and
mov
leave
leave
and
add
loop
inc
sbb
sub
xor
push
cwde
dec
ins
pusha
jb
push
adc
sahf
dec
(bad)
cmc
aas
(bad)
fldenv
add
inc
add
add
add
add
add
add
add
add
adc
add
add
sub
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
inc
add
add
add
inc
inc
add
inc
inc
(bad)
inc
add
(bad)
inc
xchg
js
ja
jg
ja
ja
ja
xchg
add
ja
push
push
pop
jnp
mov
jne
push
push
jo
add
push
add
ja
push
push
pop
jnp
mov
ja
ja
xchg
xchg
ja
jo
ja
js
pushw
ja
adc
ja
loopne
addr16
adc
add
pop
jno
adc
push
add
adc
ja
loopne
addr16
adc
pusha
data16
add
ja
ja
jo
ja
js
add
add
add
add
add
ins
xor
add
dec
add
add
add
and
add
inc
push
add
add
add
dec
imul
add
ja
push
jo
imul
outs
imul
ins
add
(bad)
inc
add
(bad)
or
add
arpl
pop
add
add
push
add
add
add
add
add
add
add
add
and
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
inc
add
add
add
inc
inc
add
inc
inc
(bad)
inc
add
(bad)
inc
add
add
(bad)
push
(bad)
(bad)
push
add
add
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
push
add
(bad)
(bad)
(bad)
(bad)
push
add
(bad)
(bad)
(bad)
(bad)
push
add
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
add
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
add
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
add
add
add
lock
(bad)
(bad)
inc
add
add
add
add
add
(bad)
(bad)
push
inc
add
add
add
(bad)
add
lock
lock
add
lock
lock
add
lock
lock
add
lock
lock
add
lock
(bad)
add
(bad)
add
(bad)
add
(bad)
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
clc
add
(bad)
clc
add
(bad)
clc
add
push
add
jmp
add
inc
add
inc
add
inc
add
add
jg
add
jg
add
jg
adc
jg
xor
jg
jo
jg
lock
push
add
push
pop
(bad)
push
aas
(bad)
push
(bad)
(bad)
push
(bad)
(bad)
push
(bad)
(bad)
push
(bad)
(bad)
(bad)
stc
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
nop
add
jl
add
popa
outs
jae
push
gs
inc
pop
add
add
push
add
popa
gs
add
add
add
add
add
add
add
add
add
and
add
add
add
add
add
add
add
adc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
inc
add
add
add
inc
inc
add
inc
inc
(bad)
inc
add
(bad)
inc
mov
(bad)
clc
add
add
add
add
add
psubb
(bad)
clc
mov
add
add
add
ud0
clc
or
add
add
inc
or
add
(bad)
clc
add
(bad)
(bad)
(bad)
dec
loopne
add
add
ud0
clc
ud0
(bad)
dec
loopne
add
add
add
ud0
(bad)
(bad)
(bad)
dec
loopne
add
add
(bad)
push
add
(bad)
(bad)
(bad)
dec
loopne
add
add
(bad)
(bad)
(bad)
push
(bad)
(bad)
(bad)
dec
loopne
or
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
dec
loopne
ud0
(bad)
clc
add
(bad)
(bad)
(bad)
(bad)
push
push
loopne
add
ud0
dec
(bad)
(bad)
(bad)
push
add
(bad)
(bad)
(bad)
push
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
clc
push
add
loopne
add
loopne
add
rol
inc
add
inc
add
inc
add
inc
add
add
add
add
clc
inc
pop
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
add
add
add
add
add
add
add
add
add
rol
add
add
add
add
add
add
add
add
inc
add
add
add
inc
inc
add
inc
inc
(bad)
inc
add
(bad)
inc
add
add
or
add
add
mov
dec
add
add
add
dec
dec
dec
add
jo
add
inc
add
inc
add
inc
add
inc
add
or
add
add
add
add
add
add
add
add
add
sbb
add
inc
add
inc
add
inc
add
inc
add
enter
loopne
loopne
or
inc
pop
add
add
add
popa
addr16
add
add
add
add
add
add
add
add
and
add
add
add
add
add
add
add
adc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
inc
add
add
add
inc
inc
add
inc
inc
(bad)
inc
add
(bad)
inc
mov
(bad)
clc
add
add
add
add
add
psubb
(bad)
clc
mov
add
add
add
ud0
clc
or
add
add
inc
or
add
(bad)
clc
add
(bad)
(bad)
(bad)
dec
loopne
add
add
ud0
clc
ud0
(bad)
dec
loopne
add
add
add
ud0
(bad)
(bad)
(bad)
dec
loopne
add
add
(bad)
push
add
(bad)
(bad)
(bad)
dec
loopne
add
add
(bad)
(bad)
(bad)
push
(bad)
(bad)
(bad)
dec
loopne
or
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
dec
loopne
ud0
(bad)
clc
add
(bad)
(bad)
(bad)
(bad)
push
push
loopne
add
ud0
dec
(bad)
(bad)
(bad)
push
add
(bad)
(bad)
(bad)
push
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
clc
push
add
loopne
add
loopne
add
rol
inc
add
inc
add
inc
add
inc
add
add
add
add
clc
inc
pop
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
add
add
add
add
add
add
add
add
add
rol
add
add
add
add
add
add
add
add
inc
add
add
add
inc
inc
add
inc
inc
(bad)
inc
add
(bad)
inc
add
add
or
add
add
mov
dec
add
add
add
dec
dec
dec
add
jo
add
inc
add
inc
add
inc
add
inc
add
or
add
add
add
add
add
add
add
add
add
sbb
add
inc
add
inc
add
inc
add
inc
add
enter
loopne
loopne
or
inc
pop
add
add
popa
addr16
sbb
ds
add
add
add
add
add
add
add
and
add
add
add
add
add
add
add
adc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
inc
add
add
add
inc
inc
add
inc
inc
(bad)
inc
add
(bad)
inc
add
add
add
add
add
or
mov
add
add
add
or
(bad)
lock
add
add
add
or
lock
lock
add
add
or
or
push
loopne
(bad)
(bad)
dec
add
add
add
loopne
(bad)
(bad)
push
(bad)
(bad)
push
add
add
add
loopne
(bad)
(bad)
push
push
add
add
add
add
loopne
(bad)
(bad)
push
add
(bad)
inc
add
add
push
loopne
(bad)
(bad)
dec
(bad)
(bad)
(bad)
inc
add
add
push
loopne
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
or
loopne
(bad)
(bad)
(bad)
(bad)
(bad)
inc
(bad)
(bad)
(bad)
push
add
add
ud0
(bad)
push
(bad)
(bad)
push
add
add
add
add
(bad)
(bad)
(bad)
(bad)
inc
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
sar
push
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
jg
add
add
add
add
add
add
add
add
add
jmp
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
add
add
add
add
add
add
add
add
add
rol
add
add
add
add
add
add
add
add
inc
add
add
add
inc
inc
add
inc
inc
(bad)
inc
add
(bad)
inc
add
mov
inc
add
add
add
add
add
add
(bad)
clc
add
add
add
push
push
push
add
ud0
or
add
inc
add
inc
add
inc
add
inc
add
aas
add
add
add
add
add
add
add
add
add
add
add
add
add
cmp
add
(bad)
inc
add
inc
add
inc
add
inc
add
js
call
add
add
add
add
push
push
add
popa
xor
sbb
ds
add
add
add
add
add
add
add
and
add
add
add
add
add
add
add
adc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
inc
add
add
add
inc
inc
add
inc
inc
(bad)
inc
add
(bad)
inc
add
add
add
add
add
or
mov
add
add
add
or
(bad)
lock
add
add
add
or
lock
lock
add
add
or
or
push
loopne
(bad)
(bad)
dec
add
add
add
loopne
(bad)
(bad)
push
(bad)
(bad)
push
add
add
add
loopne
(bad)
(bad)
push
push
add
add
add
add
loopne
(bad)
(bad)
push
add
(bad)
inc
add
add
push
loopne
(bad)
(bad)
dec
(bad)
(bad)
(bad)
inc
add
add
push
loopne
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
or
loopne
(bad)
(bad)
(bad)
(bad)
(bad)
inc
(bad)
(bad)
(bad)
push
add
add
ud0
(bad)
push
(bad)
(bad)
push
add
add
add
add
(bad)
(bad)
(bad)
(bad)
inc
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
sar
push
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
jg
add
add
add
add
add
add
add
add
add
jmp
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
add
add
add
add
add
add
add
add
add
rol
add
add
add
add
add
add
add
add
inc
add
add
add
inc
inc
add
inc
inc
(bad)
inc
add
(bad)
inc
add
mov
inc
add
add
add
add
add
add
(bad)
clc
add
add
add
push
push
push
add
ud0
or
add
inc
add
inc
add
inc
add
inc
add
aas
add
add
add
add
add
add
add
add
add
add
add
add
add
cmp
add
(bad)
inc
add
inc
add
inc
add
inc
add
js
sbb
or
inc
pop
add
add
push
add
popa
xor
sbb
ds
add
add
add
add
add
add
add
and
add
add
add
add
add
add
add
adc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
inc
add
add
add
inc
inc
add
inc
inc
(bad)
inc
add
(bad)
inc
add
add
add
add
add
or
mov
add
add
add
or
(bad)
lock
add
add
add
or
lock
lock
add
add
or
or
push
loopne
(bad)
(bad)
dec
add
add
add
loopne
(bad)
(bad)
push
(bad)
(bad)
push
add
add
add
loopne
(bad)
(bad)
push
push
add
add
add
add
loopne
(bad)
(bad)
push
add
(bad)
inc
add
add
push
loopne
(bad)
(bad)
dec
(bad)
(bad)
(bad)
inc
add
add
push
loopne
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
or
loopne
(bad)
(bad)
(bad)
(bad)
(bad)
inc
(bad)
(bad)
(bad)
push
add
add
ud0
(bad)
push
(bad)
(bad)
push
add
add
add
add
(bad)
(bad)
(bad)
(bad)
inc
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
sar
push
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
jg
add
add
add
add
add
add
add
add
add
jmp
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
add
add
add
add
add
add
add
add
add
rol
add
add
add
add
add
add
add
add
inc
add
add
add
inc
inc
add
inc
inc
(bad)
inc
add
(bad)
inc
add
mov
inc
add
add
add
add
add
add
(bad)
clc
add
add
add
push
push
push
add
ud0
or
add
inc
add
inc
add
inc
add
inc
add
aas
add
add
add
add
add
add
add
add
add
add
add
add
add
cmp
add
(bad)
inc
add
inc
add
inc
add
inc
add
js
rcl
loopne
loopne
or
inc
sub
add
gs
add
(bad)
inc
add
push
add
add
sbb
add
push
push
sbb
add
add
add
add
add
gs
(bad)
inc
add
or
add
adc
add
push
pop
adc
add
add
add
add
add
gs
pop
add
(bad)
inc
add
add
add
sbb
add
push
enter
pop
add
add
add
add
xor
pop
add
(bad)
inc
add
add
add
push
add
add
push
adc
add
add
add
add
add
or
add
popa
xor
sbb
ds
add
add
add
add
add
add
add
and
add
add
add
add
add
add
add
adc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
inc
add
add
add
inc
inc
add
inc
inc
(bad)
inc
add
(bad)
inc
add
add
add
add
add
or
mov
add
add
add
or
(bad)
lock
add
add
add
or
lock
lock
add
add
or
or
push
loopne
(bad)
(bad)
dec
add
add
add
loopne
(bad)
(bad)
push
(bad)
(bad)
push
add
add
add
loopne
(bad)
(bad)
push
push
add
add
add
add
loopne
(bad)
(bad)
push
add
(bad)
inc
add
add
push
loopne
(bad)
(bad)
dec
(bad)
(bad)
(bad)
inc
add
add
push
loopne
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
or
loopne
(bad)
(bad)
(bad)
(bad)
(bad)
inc
(bad)
(bad)
(bad)
push
add
add
ud0
(bad)
push
(bad)
(bad)
push
add
add
add
add
(bad)
(bad)
(bad)
(bad)
inc
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
sar
push
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
jg
add
add
add
add
add
add
add
add
add
jmp
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
add
add
add
add
add
add
add
add
add
rol
add
add
add
add
add
add
add
add
inc
add
add
add
inc
inc
add
inc
inc
(bad)
inc
add
(bad)
inc
add
mov
inc
add
add
add
add
add
add
(bad)
clc
add
add
add
push
push
push
add
ud0
or
add
inc
add
inc
add
inc
add
inc
add
aas
add
add
add
add
add
add
add
add
add
add
add
add
add
cmp
add
(bad)
inc
add
inc
add
inc
add
inc
add
js
adc
loopne
loopne
or
inc
pop
add
add
popa
xor
sbb
ds
add
add
add
add
add
add
add
and
add
add
add
add
add
add
add
adc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
inc
add
add
add
inc
inc
add
inc
inc
(bad)
inc
add
(bad)
inc
mov
(bad)
clc
add
add
add
add
add
psubb
(bad)
clc
mov
add
add
add
ud0
clc
or
add
add
inc
or
add
(bad)
clc
add
(bad)
(bad)
(bad)
dec
loopne
add
add
ud0
clc
ud0
(bad)
dec
loopne
add
add
add
ud0
(bad)
(bad)
(bad)
dec
loopne
add
add
(bad)
push
add
(bad)
(bad)
(bad)
dec
loopne
add
add
(bad)
(bad)
(bad)
push
(bad)
(bad)
(bad)
dec
loopne
or
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
dec
loopne
ud0
(bad)
clc
add
(bad)
(bad)
(bad)
(bad)
push
push
loopne
add
ud0
dec
(bad)
(bad)
(bad)
push
add
(bad)
(bad)
(bad)
push
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
clc
push
add
loopne
add
loopne
add
rol
inc
add
inc
add
inc
add
inc
add
add
add
add
clc
inc
pop
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
add
add
add
add
add
add
add
add
add
rol
add
add
add
add
add
add
add
add
inc
add
add
add
inc
inc
add
inc
inc
(bad)
inc
add
(bad)
inc
add
add
or
add
add
mov
dec
add
add
add
dec
dec
dec
add
jo
add
inc
add
inc
add
inc
add
inc
add
or
add
add
add
add
add
add
add
add
add
sbb
add
inc
add
inc
add
inc
add
inc
add
enter
loopne
loopne
or
inc
push
add
add
push
add
gs
add
add
das
or
add
add
add
add
add
push
add
gs
xor
add
pop
add
add
add
add
add
push
add
gs
xor
add
pop
add
add
pop
add
add
add
add
push
add
gs
xor
add
pop
out
add
add
pop
add
add
add
add
push
add
gs
xor
or
add
add
pop
add
add
add
xor
add
pop
out
add
add
pop
add
add
add
xor
pop
add
(bad)
inc
add
add
add
sldt
add
push
lock
pop
add
add
add
add
xor
pop
add
(bad)
inc
add
add
add
adc
add
push
cmp
add
pop
add
add
add
add
add
push
add
gs
xor
add
daa
adc
add
add
add
add
xor
pop
add
(bad)
inc
add
add
or
push
add
push
and
or
add
add
sbb
add
jne
imul
es
imul
sbb
add
sbb
add
inc
js
je
adc
add
imul
add
sbb
add
jne
gs
jo
adc
add
ins
jo
pop
(bad)
inc
xor
add
sbb
add
inc
outs
outs
je
outs
je
add
add
es
outs
ins
ins
outs
outs
and
jae
gs
popa
outs
and
ins
jne
imul
sbb
add
sbb
add
push
bound
adc
or
es
bound
push
imul
add
add
pop
add
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
add
inc
add
add
add
inc
add
inc
add
add
add
add
add
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
add
dec
add
add
add
add
lods
ja
add
add
add
add
add
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
add
add
dec
add
add
add
ja
add
ja
add
add
push
inc
xor
add
or
or
add
jns
add
lock
dec
add
add
add
add
add
add
add
add
add
es
add
add
mov
add
popf
add
add
add
add
bound
imul
arpl
push
push
bound
imul
popa
arpl
add
outs
push
arpl
add
add
cmp
add
rol
add
fadd
add
add
add
sbb
add
(bad)
(bad)
(bad)
inc
add
add
add
add
add
add
add
add
add
add
test
mov
jecxz
lea
out
test
jno
mov
not
sbb
dec
mov
dec
movs
cdq
call
(bad)
fild
cmps
test
jae
inc
mov
pop
mov
inc
test
ror
loope
inc
add
lar
add
add
test
adc
aaa
dec
test
std
inc
xor
add
add
data16
push
xor
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
outs
push
arpl
ins
jbe
jne
je
outs
jae
dec
add
jne
je
outs
jae
dec
add
hlt
add
add
add
add
push
dec
add
dec
add
nop
dec
add
inc
add
add
pop
add
add
xor
pop
add
add
add
add
inc
add
add
add
inc
add
add
add
cs
add
add
add
add
add
inc
add
add
add
sub
add
mov
add
dec
sub
add
add
add
mov
add
add
add
add
add
sub
add
add
add
sub
pop
add
add
add
add
inc
add
add
add
sub
pop
add
add
add
jo
inc
add
add
add
inc
add
add
add
sub
pop
add
add
add
add
inc
add
add
add
sub
pop
add
add
add
add
inc
add
add
add
sub
pop
add
add
add
je
inc
add
add
add
daa
inc
add
add
add
es
add
add
add
add
add
inc
add
add
add
and
add
mov
inc
add
add
add
inc
add
add
add
and
add
hlt
and
add
add
add
add
add
add
add
add
and
add
add
add
and
pop
add
add
add
add
add
add
add
and
pop
add
add
add
and
pop
add
add
inc
add
add
add
and
pop
add
add
add
inc
and
pop
add
add
and
pop
add
add
add
add
add
add
add
and
pop
add
add
pop
inc
add
add
add
add
cmp
inc
add
add
add
push
inc
add
add
add
add
sbb
add
add
add
inc
add
add
add
or
add
add
add
inc
add
add
add
or
pop
add
add
add
pushf
or
pop
add
add
add
add
add
inc
add
add
add
or
pop
add
add
inc
add
add
popa
mov
inc
ja
pop
xchg
adc
add
test
add
add
inc
daa
inc
add
add
add
loope
popf
hlt
sub
push
aad
push
push
add
add
add
add
or
add
sbb
add
add
add
pop
inc
add
add
in
push
arpl
sar
movs
lahf
sub
jbe
add
add
add
add
adc
add
add
add
add
je
inc
add
add
add
add
cld
popa
fbld
fwait
test
sub
or
push
sub
add
add
add
add
adc
add
sub
add
add
add
add
add
add
and
pop
(bad)
(bad)
mov
sub
add
add
add
or
xchg
add
add
add
push
dec
inc
add
add
mov
stos
xor
(bad)
mov
jno
add
add
or
add
add
add
add
add
add
jge
lods
cmps
(bad)
dec
pop
inc
mov
cs
push
add
add
add
add
add
add
jae
add
add
push
add
add
xchg
pop
bswap
adc
xchg
mov
or
add
inc
add
add
sub
pop
mov
jecxz
lea
out
imul
add
add
inc
add
add
add
sbb
cmc
dec
mov
cmps
adc
or
add
add
add
leave
pop
add
add
add
mov
add
add
add
cld
test
xchg
push
stos
into
cmp
data16
add
or
add
add
add
popf
test
add
add
sbb
add
add
push
add
add
ja
test
enter
pop
movs
add
add
add
add
add
add
add
add
inc
add
add
add
add
add
add
(bad)
inc
add
add
add
nop
dec
add
add
add
inc
add
inc
add
add
add
add
add
inc
add
add
add
inc
add
add
add
add
add
add
add
add
stos
dec
add
add
add
add
add
add
or
add
adc
xor
add
les
add
add
add
add
lock
add
inc
add
add
add
adc
cmp
add
les
add
add
add
inc
add
lock
add
inc
add
add
add
sbb
cmp
add
mov
add
add
add
lock
add
or
add
add
add
pop
add
add
je
inc
add
(bad)
(bad)
inc
add
add
add
add
inc
add
lock
add
(bad)
inc
adc
inc
add
add
add
add
add
in
inc
add
lock
add
inc
add
add
dec
test
pop
test
add
add
dec
add
add
pusha
es
add
inc
add
inc
add
add
pusha
es
add
inc
add
add
pusha
es
add
inc
add
inc
add
add
add
pusha
es
add
inc
add
add
add
add
pusha
es
add
inc
add
add
add
aas
(bad)
add
add
add
mov
add
add
cmp
add
add
add
dec
add
(bad)
(bad)
inc
add
add
inc
add
nop
dec
add
add
add
test
fadd
add
in
or
add
add
in
inc
add
add
add
test
add
add
call
add
add
test
add
mov
push
xchg
pushf
fwait
dec
add
add
add
jge
add
add
add
or
or
inc
add
adc
xor
add
sbb
inc
add
add
add
inc
add
add
inc
add
add
add
adc
cmp
add
les
add
add
add
add
add
inc
add
lock
add
or
add
add
add
add
add
add
rol
pop
add
add
add
add
pop
add
add
je
inc
add
(bad)
(bad)
inc
add
add
add
add
inc
add
lock
add
(bad)
inc
adc
inc
add
add
inc
add
add
add
lock
add
inc
add
add
add
adc
dec
add
add
add
add
add
add
inc
add
lock
add
inc
add
add
add
adc
dec
add
add
add
add
add
ins
mov
and
pop
add
inc
add
add
out
mov
sti
mov
aam
inc
add
mov
add
add
in
test
pusha
test
pop
es
add
inc
add
inc
add
mov
adc
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
mov
mov
inc
add
inc
add
inc
add
inc
add
inc
add
xchg
pusha
test
pop
es
add
inc
add
inc
add
add
add
inc
in
add
add
add
retf
add
inc
add
(bad)
out
add
inc
add
push
jmp
add
add
add
add
pop
dec
add
(bad)
(bad)
inc
add
add
cli
inc
add
add
add
add
inc
add
inc
add
add
add
add
add
add
add
add
add
or
add
mov
push
mov
int3
ror
add
add
sub
add
inc
add
pop
inc
add
adc
xor
add
les
add
add
add
lea
and
pop
add
inc
add
add
add
or
add
add
or
add
jo
inc
add
out
pop
add
add
or
add
inc
add
add
add
add
add
add
add
add
pop
add
add
add
add
add
les
add
add
add
mov
and
pop
add
push
inc
add
add
add
or
add
add
add
add
push
out
pop
add
add
inc
add
add
add
les
add
add
add
add
add
pop
add
inc
add
add
add
add
add
add
add
adc
inc
add
lock
add
add
inc
add
add
add
pop
add
add
add
out
pop
add
add
inc
add
add
add
add
add
ror
add
add
add
add
add
or
add
add
or
add
or
inc
add
out
pop
add
pop
inc
add
add
add
adc
pop
add
add
add
add
add
add
inc
add
lock
add
add
inc
add
add
add
les
add
add
add
lock
add
inc
add
add
add
pop
add
add
add
(bad)
(bad)
inc
add
add
add
add
xchg
inc
add
lock
add
(bad)
inc
adc
push
add
add
add
add
pop
add
add
add
add
add
adc
ins
add
add
add
add
add
add
inc
add
lock
add
inc
add
add
add
add
xchg
inc
add
xchg
inc
add
xchg
inc
add
xchg
inc
add
xchg
inc
add
xchg
inc
add
xchg
inc
add
xchg
inc
add
xchg
inc
add
add
add
inc
add
inc
add
inc
add
inc
add
add
add
add
add
xchg
inc
add
inc
add
inc
add
inc
add
inc
add
mov
add
inc
add
inc
add
inc
add
mov
add
inc
add
inc
add
inc
add
xchg
inc
add
inc
add
mov
pop
es
add
inc
add
inc
add
add
mov
pop
es
add
inc
add
inc
add
xchg
inc
add
add
mov
pop
es
add
inc
add
inc
add
add
add
add
add
add
add
inc
add
inc
add
inc
add
inc
add
mov
add
inc
add
inc
add
inc
add
mov
add
inc
add
inc
add
inc
add
inc
add
mov
pop
es
add
inc
add
inc
add
add
add
xchg
inc
add
xchg
inc
add
inc
add
mov
pop
es
add
inc
add
inc
add
add
add
add
add
add
add
add
mov
pop
es
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
inc
add
xchg
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
add
add
aaa
push
or
sub
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
add
add
add
add
add
add
add
(bad)
(bad)
inc
add
add
dec
add
add
add
add
add
add
add
sbb
add
mov
add
add
nop
xchg
inc
add
add
add
add
add
ins
add
xchg
inc
add
mov
add
add
add
hlt
add
(bad)
add
js
or
or
sbb
add
hlt
add
movaps
sbb
or
or
sbb
add
hlt
add
prefetchnta
sbb
or
or
sbb
add
hlt
add
cmovs
sbb
or
or
sbb
add
hlt
add
mov
sbb
or
or
sbb
add
hlt
add
cmove
sbb
or
or
sbb
add
hlt
add
cmovo
sbb
or
or
sbb
add
hlt
add
(bad)
add
js
or
or
sbb
add
hlt
add
movups
sbb
or
or
sbb
add
adc
adc
dec
push
add
add
cmp
and
or
add
add
adc
add
add
or
add
adc
add
add
add
add
add
in
inc
add
sbb
inc
add
sub
add
add
adc
inc
add
(bad)
(bad)
inc
add
add
add
add
add
sbb
add
(bad)
(bad)
inc
add
inc
add
inc
add
inc
add
inc
add
xchg
inc
add
xchg
inc
add
xchg
inc
add
xchg
inc
add
xchg
inc
add
xchg
inc
add
xchg
inc
add
cwde
inc
add
inc
add
cwde
inc
add
cwde
inc
add
cwde
inc
add
inc
add
inc
add
inc
add
inc
add
add
cwde
inc
add
cwde
inc
add
cwde
inc
add
cwde
inc
add
cwde
inc
add
cwde
inc
add
cwde
inc
add
cdq
inc
add
cdq
inc
add
cdq
inc
add
cdq
inc
add
add
inc
add
inc
add
inc
add
cdq
inc
add
cdq
inc
add
inc
add
cdq
inc
add
cdq
inc
add
cdq
inc
add
cdq
inc
add
call
sbb
inc
add
call
inc
call
pop
call
ja
inc
add
inc
add
call
lds
inc
add
call
stc
call
adc
inc
add
fwait
inc
add
inc
add
add
inc
add
inc
add
inc
add
fwait
inc
add
fwait
inc
add
inc
add
fwait
inc
add
fwait
inc
add
fwait
inc
add
fwait
inc
add
pushf
inc
add
pushf
inc
add
inc
add
pushf
inc
add
pushf
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
pushf
inc
add
pushf
inc
add
add
add
xchg
inc
add
inc
add
inc
add
inc
add
inc
add
fwait
inc
add
fwait
inc
add
fwait
inc
add
inc
add
add
add
inc
add
inc
add
pushf
inc
add
add
add
inc
add
fwait
inc
add
fwait
inc
add
fwait
inc
add
fwait
inc
add
fwait
inc
add
inc
add
inc
add
pushf
inc
add
pushf
inc
add
add
add
fwait
inc
add
inc
add
xchg
or
sub
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
add
add
add
add
add
add
dec
add
(bad)
(bad)
inc
add
add
inc
add
nop
dec
add
add
add
inc
add
inc
add
add
add
add
inc
popf
inc
add
add
add
add
add
add
inc
add
add
add
add
add
add
lahf
inc
add
dec
add
add
add
add
inc
add
adc
xor
add
les
add
add
add
mov
pop
add
add
inc
add
add
add
add
add
add
add
add
lock
add
add
inc
add
add
add
les
add
add
add
mov
pop
add
inc
add
add
add
pop
add
add
je
inc
add
(bad)
(bad)
inc
add
add
add
add
inc
add
lock
add
(bad)
inc
or
add
add
or
add
in
inc
add
out
pop
add
add
add
inc
add
add
add
les
add
add
add
mov
pop
add
add
add
add
add
or
add
add
or
add
nop
mov
pop
add
add
inc
add
add
add
adc
add
fsub
pop
add
add
inc
add
add
add
add
add
add
add
mov
pop
add
inc
add
add
add
adc
pop
add
add
add
add
add
mov
pop
add
inc
add
add
inc
add
add
add
or
add
call
out
pop
add
add
inc
add
add
add
or
add
xor
inc
add
out
pop
add
add
add
add
add
adc
add
add
add
add
add
add
add
add
lock
add
inc
add
add
add
add
les
add
add
add
movs
inc
add
lock
add
inc
add
add
add
or
add
add
or
add
inc
movs
inc
add
out
pop
add
add
add
add
add
adc
jo
add
les
add
add
add
pop
add
add
inc
add
add
add
pop
add
add
movs
inc
add
out
pop
add
add
add
add
add
inc
add
inc
add
inc
add
inc
add
add
cmps
inc
add
cmps
inc
add
cmps
inc
add
cmps
inc
add
cmps
inc
add
cmps
inc
add
cmps
inc
add
add
add
add
pushf
inc
add
inc
add
inc
add
inc
add
add
add
add
add
add
add
add
pushf
inc
add
inc
add
inc
add
inc
add
add
add
cmps
inc
add
cmps
inc
add
inc
add
inc
add
inc
add
inc
add
add
add
inc
add
inc
add
popf
inc
add
pushf
inc
add
inc
add
inc
add
inc
add
cmps
inc
add
popf
inc
add
pushf
inc
add
inc
add
inc
add
inc
add
inc
add
pushf
inc
add
inc
add
inc
add
inc
add
inc
add
pushf
inc
add
inc
add
inc
add
inc
add
add
pushf
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
add
add
add
add
add
add
sahf
inc
add
pushf
inc
add
inc
add
inc
add
inc
add
inc
add
pushf
inc
add
inc
add
inc
add
inc
add
inc
add
pushf
inc
add
inc
add
inc
add
inc
add
add
add
inc
add
add
add
add
pushf
inc
add
inc
add
inc
add
inc
add
add
add
pushf
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
add
add
cmps
inc
add
cmps
inc
add
lahf
inc
add
pushf
inc
add
inc
add
inc
add
inc
add
add
add
jmp
or
sub
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
add
add
add
add
add
push
dec
add
(bad)
(bad)
inc
add
add
stc
inc
add
nop
dec
add
add
add
add
add
add
add
add
add
inc
add
add
add
add
add
add
cmps
inc
add
add
add
stos
inc
add
add
add
add
lahf
push
add
add
add
add
rol
inc
add
or
add
add
or
add
add
add
add
inc
add
out
pop
add
add
or
add
add
add
or
add
jo
inc
add
out
pop
add
add
add
inc
add
add
add
je
inc
add
(bad)
(bad)
inc
add
add
add
add
pop
add
(bad)
inc
or
add
add
pop
add
add
inc
add
out
pop
add
add
inc
add
add
add
push
add
add
pop
add
add
inc
add
add
add
pushf
add
add
add
add
lods
inc
add
lock
add
add
inc
add
add
add
add
add
inc
add
lock
add
add
inc
add
add
add
pushf
add
add
add
add
lods
inc
add
lock
add
add
inc
add
add
add
add
add
add
add
pop
add
add
add
add
add
adc
pop
add
add
add
add
add
add
pop
add
inc
add
add
add
add
pop
add
add
add
cld
lods
inc
add
lock
add
inc
add
add
inc
add
add
add
les
add
add
add
scas
inc
add
lock
add
inc
add
add
add
adc
add
add
add
add
add
add
inc
add
lock
add
inc
add
add
add
adc
push
add
add
add
add
scas
inc
add
lock
add
inc
add
add
add
add
ins
add
add
add
cmp
pop
add
add
add
add
add
or
add
add
add
add
add
add
add
add
out
pop
add
add
add
add
add
add
add
add
mov
out
pop
add
add
add
add
inc
add
add
add
add
add
in
scas
inc
add
out
pop
add
add
add
add
add
adc
jl
add
les
add
add
add
mov
add
lock
add
add
inc
add
add
add
add
add
add
lock
add
add
inc
add
add
inc
add
add
add
mov
add
lock
add
add
pusha
mov
add
inc
add
inc
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
inc
add
add
inc
add
inc
add
add
add
cmps
inc
add
inc
add
inc
add
inc
add
cmps
inc
add
inc
add
inc
add
inc
add
cmps
inc
add
cmps
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
cmps
inc
add
cmps
inc
add
inc
add
inc
add
inc
add
test
add
cmps
inc
add
inc
add
inc
add
inc
add
inc
add
cmps
inc
add
inc
add
inc
add
inc
add
inc
add
cmps
inc
add
inc
add
inc
add
inc
add
cmps
inc
add
inc
add
inc
add
inc
add
inc
add
add
add
test
add
cmps
inc
add
inc
add
inc
add
inc
add
inc
add
test
add
cmps
inc
add
inc
add
inc
add
inc
add
add
add
add
cdq
mov
add
test
inc
add
inc
add
inc
add
inc
add
inc
add
add
add
test
inc
add
inc
add
inc
add
inc
add
add
add
add
add
add
add
inc
add
cmps
inc
add
inc
add
inc
add
inc
add
add
add
mov
add
mov
add
cmps
inc
add
inc
add
inc
add
inc
add
add
add
mov
add
mov
add
cmps
inc
add
inc
add
inc
add
inc
add
add
add
add
test
inc
add
inc
add
inc
add
inc
add
stos
inc
add
cmps
inc
add
inc
add
inc
add
inc
add
stos
inc
add
cmps
inc
add
inc
add
inc
add
inc
add
inc
add
cmps
inc
add
inc
add
inc
add
inc
add
add
add
mov
add
mov
add
inc
add
cmps
inc
add
inc
add
inc
add
inc
add
add
add
mov
add
mov
add
cmps
inc
add
inc
add
inc
add
inc
add
add
add
mov
add
add
add
inc
add
stos
mov
add
add
add
scas
mov
add
add
add
adc
and
cmp
add
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
add
add
add
add
add
(bad)
inc
add
add
cli
inc
add
add
cld
mov
add
mov
add
add
add
or
add
add
add
add
or
add
add
inc
add
mov
add
add
add
inc
add
add
add
add
or
add
or
or
inc
add
adc
xor
add
les
add
add
add
pop
add
add
inc
add
add
add
adc
add
add
add
add
mov
add
out
pop
add
add
adc
add
add
add
add
add
dec
mov
add
out
pop
add
push
inc
add
add
add
adc
inc
add
add
add
add
add
xchg
mov
add
lock
add
add
inc
add
add
add
adc
add
hlt
mov
add
out
pop
add
add
add
add
or
add
add
adc
add
inc
mov
pop
add
add
inc
add
add
add
add
add
add
add
pop
add
push
inc
add
add
add
or
add
add
adc
add
in
mov
pop
add
add
inc
add
add
add
add
(bad)
(bad)
inc
add
add
add
add
mov
pop
add
(bad)
inc
or
add
add
or
add
add
add
add
mov
pop
add
add
add
add
add
add
add
add
add
add
mov
pop
add
inc
add
add
add
or
add
add
add
add
add
add
add
inc
add
out
pop
add
add
add
add
add
add
add
add
add
add
mov
pop
add
add
add
add
add
or
add
add
add
add
and
inc
add
out
pop
add
add
add
add
inc
add
add
add
add
add
add
add
inc
add
lock
add
inc
add
add
add
adc
jo
add
les
add
add
add
mov
pop
add
inc
add
add
add
or
add
add
or
add
xor
add
pop
inc
add
add
inc
add
add
add
les
add
add
add
add
lock
add
inc
add
add
add
adc
jl
add
les
add
add
add
mov
pop
add
add
inc
add
add
add
add
add
add
pop
add
add
inc
add
add
inc
add
add
add
pop
add
inc
add
add
add
inc
add
mov
inc
add
mov
inc
add
inc
add
inc
add
inc
add
add
inc
add
mov
inc
add
mov
inc
add
mov
inc
add
mov
add
or
inc
add
inc
add
inc
add
inc
add
add
add
add
add
add
add
mov
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
mov
add
inc
add
inc
add
inc
add
add
add
mov
add
and
add
test
inc
add
inc
add
inc
add
inc
add
mov
add
inc
add
inc
add
inc
add
mov
add
inc
add
inc
add
inc
add
mov
add
and
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
mov
add
jo
inc
add
inc
add
inc
add
inc
add
mov
add
inc
add
inc
add
inc
add
add
add
add
add
mov
add
shl
pop
es
add
inc
add
inc
add
mov
add
inc
add
inc
add
inc
add
mov
add
adc
inc
add
inc
add
inc
add
inc
add
mov
add
inc
add
inc
add
inc
add
mov
add
pusha
mov
add
inc
add
inc
add
inc
add
add
add
inc
add
inc
add
mov
add
inc
add
inc
add
inc
add
mov
add
inc
add
inc
add
inc
add
add
mov
add
inc
add
inc
add
inc
add
add
add
inc
add
inc
add
mov
add
inc
add
inc
add
inc
add
add
add
add
add
add
add
mov
add
inc
add
inc
add
inc
add
add
add
mov
add
cmp
add
add
add
add
cmps
push
or
sub
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
add
add
cmp
add
add
add
add
(bad)
(bad)
inc
add
add
dec
add
add
add
add
add
add
add
add
add
add
inc
add
add
add
inc
add
add
add
add
mov
mov
push
ret
add
dec
add
add
add
or
add
add
adc
xor
add
les
add
add
add
inc
add
lock
add
add
inc
add
add
add
add
add
ins
ret
inc
add
out
pop
add
push
inc
add
add
add
adc
cmp
add
les
add
add
add
add
add
lock
add
add
inc
add
add
add
sldt
add
les
lock
pop
add
add
add
add
or
add
add
pop
add
add
add
out
pop
add
add
inc
add
add
add
push
add
add
out
pop
add
add
inc
add
add
add
or
add
add
add
add
les
lock
pop
add
add
inc
add
add
add
les
add
add
add
inc
add
lock
add
push
inc
add
add
add
or
add
add
push
add
add
out
pop
add
add
add
add
add
pop
add
add
je
inc
add
(bad)
(bad)
inc
add
add
add
add
lds
add
pop
add
(bad)
inc
or
add
add
add
add
add
add
add
out
pop
add
add
add
add
add
add
les
add
add
add
mov
lock
add
add
add
add
add
or
add
add
add
add
xor
inc
add
out
pop
add
add
add
add
inc
add
add
add
les
add
add
add
lock
add
inc
add
add
add
adc
ins
add
add
add
add
add
add
mov
and
inc
add
add
add
adc
jo
add
les
add
add
add
inc
add
lock
add
inc
add
add
add
or
add
add
adc
add
mov
out
pop
add
pop
inc
add
add
inc
add
add
add
les
add
add
add
enter
lock
add
inc
add
add
add
adc
jl
add
les
add
add
add
add
lock
add
add
inc
add
add
add
add
add
add
pop
add
add
inc
add
add
inc
add
add
add
inc
add
lock
add
inc
add
add
add
add
retf
fwait
retf
test
inc
add
retf
iret
retf
fmul
inc
add
retf
test
add
retf
inc
add
retf
inc
add
retf
inc
add
retf
inc
add
add
inc
add
inc
add
add
add
inc
add
mov
inc
add
inc
add
inc
add
add
add
add
add
retf
inc
add
mov
inc
add
inc
add
inc
add
mov
inc
add
inc
add
inc
add
inc
add
add
add
add
add
add
add
mov
inc
add
inc
add
inc
add
inc
add
rol
mov
inc
add
inc
add
inc
add
inc
add
mov
inc
add
inc
add
inc
add
inc
add
mov
inc
add
inc
add
inc
add
mov
inc
add
inc
add
inc
add
inc
add
mov
inc
add
inc
add
inc
add
rol
mov
inc
add
inc
add
inc
add
add
rol
mov
inc
add
inc
add
inc
add
rol
mov
inc
add
inc
add
inc
add
inc
add
inc
add
mov
inc
add
inc
add
inc
add
mov
inc
add
inc
add
inc
add
add
add
retf
inc
add
inc
add
mov
inc
add
inc
add
inc
add
inc
add
rol
mov
inc
add
inc
add
inc
add
add
add
add
add
retf
clc
rol
mov
inc
add
inc
add
inc
add
ret
hlt
mov
inc
add
inc
add
inc
add
retf
dec
ret
hlt
mov
inc
add
inc
add
inc
add
add
add
retf
out
retf
jo
inc
add
mov
inc
add
inc
add
inc
add
add
add
retf
or
inc
add
mov
inc
add
inc
add
inc
add
add
add
add
add
add
add
add
add
push
fisttp
add
add
add
mov
ins
and
cmp
add
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
add
add
add
add
add
add
(bad)
(bad)
inc
add
add
inc
add
dec
add
add
add
retf
inc
add
retf
inc
add
add
add
add
add
loopne
inc
add
add
add
retf
inc
add
add
add
retf
inc
add
add
add
retf
inc
add
add
iret
inc
add
xlat
dec
add
add
add
call
push
inc
add
push
inc
add
adc
xor
add
les
add
add
add
iret
inc
add
lock
add
add
add
add
add
or
add
add
add
add
add
add
add
inc
add
out
pop
add
push
inc
add
add
add
add
add
add
adc
add
out
pop
add
push
inc
add
add
inc
add
add
add
add
add
int3
rol
lock
pop
add
push
inc
add
add
add
adc
inc
add
add
add
add
add
add
add
add
rol
and
pop
add
inc
add
add
add
add
les
add
add
js
inc
add
lock
add
push
inc
add
add
inc
add
add
add
adc
add
fcom
inc
add
out
pop
add
add
adc
add
inc
add
add
add
les
add
add
add
inc
add
lock
add
inc
add
add
add
or
add
add
sbb
add
test
inc
add
out
pop
add
add
add
add
adc
pop
add
add
add
add
add
rcl
inc
add
lock
add
inc
add
add
inc
add
add
add
sbb
add
xor
inc
add
out
pop
add
add
inc
add
add
add
les
add
add
add
add
add
add
lock
add
inc
add
add
add
add
pop
add
add
rol
lock
pop
add
add
inc
add
add
add
les
add
add
add
aam
add
lock
add
inc
add
add
add
or
add
add
adc
add
mov
inc
add
out
pop
add
add
add
add
add
pop
add
add
je
inc
add
(bad)
(bad)
inc
add
add
add
add
aam
add
lock
add
(bad)
inc
or
add
add
sbb
add
push
out
pop
add
add
add
add
add
or
add
add
adc
add
mov
inc
add
out
pop
add
add
add
add
add
adc
jl
add
les
add
add
add
(bad)
inc
add
lock
add
inc
add
add
add
adc
add
add
add
add
add
add
inc
add
lock
add
inc
add
add
add
adc
test
add
les
add
add
add
(bad)
inc
add
lock
add
add
inc
add
add
add
add
add
add
xlat
inc
add
lock
add
add
inc
add
add
inc
add
add
add
lock
add
add
call
xlat
inc
add
fadd
psubusb
sbb
inc
add
fadd
fadd
inc
fadd
push
fadd
pop
fadd
push
inc
add
inc
add
inc
add
fadd
mov
fadd
rcr
inc
add
fadd
in
fadd
add
add
call
retf
inc
add
inc
add
inc
add
inc
add
fadd
adc
inc
add
add
inc
add
inc
add
inc
add
int3
inc
add
add
inc
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
retf
inc
add
inc
add
inc
add
inc
add
add
add
fadd
fadd
mov
inc
add
add
inc
add
inc
add
inc
add
add
add
add
add
add
add
int3
inc
add
add
inc
add
inc
add
inc
add
int
add
add
inc
add
inc
add
inc
add
add
add
fadd
xlat
fadd
sub
inc
add
add
inc
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
add
fadd
dec
fadd
js
inc
add
add
inc
add
inc
add
inc
add
retf
inc
add
inc
add
inc
add
inc
add
add
add
add
add
add
add
int
add
add
inc
add
inc
add
inc
add
int
add
add
inc
add
inc
add
inc
add
xlat
inc
add
into
inc
add
add
inc
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
xlat
inc
add
inc
add
add
inc
add
inc
add
inc
add
retf
inc
add
inc
add
inc
add
inc
add
retf
inc
add
inc
add
inc
add
inc
add
add
add
xlat
inc
add
fadd
loopne
inc
add
add
inc
add
inc
add
inc
add
inc
add
iret
inc
add
add
inc
add
inc
add
inc
add
add
add
inc
add
inc
add
iret
inc
add
add
inc
add
inc
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
add
add
add
add
add
add
adc
or
sub
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
add
add
add
add
add
add
(bad)
inc
add
add
sti
inc
add
add
add
add
add
add
add
inc
add
add
add
add
add
add
add
sbb
add
add
add
mov
push
fld
mov
dec
add
add
add
sbb
add
xchg
sbb
add
inc
add
inc
add
adc
xor
add
les
add
add
add
inc
add
lock
add
inc
add
add
add
adc
cmp
add
les
add
add
je
inc
add
lock
add
inc
add
add
inc
add
add
add
les
add
add
add
fiadd
and
pop
add
add
add
add
adc
inc
add
add
add
add
add
add
inc
add
lock
add
inc
add
add
add
adc
inc
add
add
add
add
add
add
pop
add
inc
add
add
add
pop
add
add
je
inc
add
(bad)
(bad)
inc
add
add
add
add
fild
add
pop
add
(bad)
inc
or
add
add
or
add
mov
inc
add
out
pop
add
add
add
add
add
or
add
add
or
add
add
add
add
loopne
add
out
pop
add
add
add
add
add
add
add
add
add
add
loope
add
lock
add
inc
add
add
add
or
add
add
adc
add
add
add
add
out
pop
add
add
inc
add
add
add
add
add
add
int3
loope
add
lock
add
add
add
inc
add
add
add
or
add
sub
inc
add
out
pop
add
inc
add
add
add
or
add
add
or
add
js
inc
add
out
pop
add
inc
add
add
add
adc
push
add
add
add
add
add
add
loop
add
lock
add
inc
add
add
add
add
add
add
add
and
inc
add
lock
add
add
inc
add
add
add
les
add
add
add
pop
add
add
inc
add
add
add
add
add
add
add
jecxz
add
lock
add
add
inc
add
add
add
les
add
add
add
add
lock
add
add
add
add
add
or
add
add
sbb
add
add
add
add
pop
add
add
add
or
add
add
sbb
add
lock
add
out
pop
add
add
add
or
add
add
push
add
add
pop
add
add
inc
add
add
add
sldt
add
out
pop
add
add
inc
add
add
inc
add
add
add
in
add
lock
add
inc
add
add
add
or
add
add
adc
add
xor
inc
add
out
pop
add
add
inc
add
add
add
and
add
and
add
out
pop
add
add
add
add
or
add
add
sbb
add
int3
out
add
out
pop
add
add
inc
add
add
inc
add
add
add
out
add
lock
add
add
add
out
add
out
add
inc
add
out
add
out
add
out
add
out
add
call
inc
add
inc
add
call
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
add
add
inc
add
inc
add
inc
add
inc
add
add
add
out
add
out
add
inc
add
inc
add
inc
add
inc
add
add
add
out
add
call
add
aam
inc
add
fadd
pop
es
add
inc
add
inc
add
add
add
add
mov
add
add
fld
hlt
fadd
pop
es
add
inc
add
inc
add
add
add
inc
add
call
add
and
inc
add
fadd
pop
es
add
inc
add
inc
add
add
fadd
pop
es
add
inc
add
inc
add
add
add
add
fadd
pop
es
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
fiadd
hlt
fadd
pop
es
add
inc
add
inc
add
call
add
in
fiadd
hlt
fadd
pop
es
add
inc
add
inc
add
inc
add
fadd
pop
es
add
inc
add
inc
add
add
add
add
add
add
add
inc
add
fadd
pop
es
add
inc
add
inc
add
add
fadd
pop
es
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
fild
hlt
fadd
pop
es
add
inc
add
inc
add
add
add
inc
add
inc
add
inc
add
fadd
pop
es
add
inc
add
inc
add
add
inc
add
fadd
pop
es
add
inc
add
inc
add
add
add
add
fadd
pop
es
add
inc
add
inc
add
add
fadd
pop
es
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
fadd
hlt
fadd
pop
es
add
inc
add
inc
add
fadd
hlt
fadd
pop
es
add
inc
add
inc
add
call
add
sbb
inc
add
fadd
pop
es
add
inc
add
inc
add
add
fadd
pop
es
add
inc
add
inc
add
add
fadd
pop
es
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
add
add
out
add
out
add
inc
add
mov
ins
and
inc
add
add
sbb
add
add
add
xchg
sbb
add
add
add
push
push
or
add
add
add
pop
es
add
add
add
fisub
or
add
add
add
popf
das
or
add
add
add
pusha
xor
add
add
add
and
or
add
add
add
out
or
add
add
add
test
ins
and
aaa
add
add
ins
inc
or
add
add
add
das
dec
or
add
add
add
repnz
or
add
add
add
mov
or
add
add
add
js
or
add
add
add
cmp
add
add
add
(bad)
ins
or
add
add
add
shl
ins
and
outs
add
add
test
add
add
add
inc
jge
add
add
add
or
add
add
cmp
add
add
add
dec
add
(bad)
(bad)
inc
add
add
add
add
add
add
jmp
add
adc
inc
add
add
add
push
inc
add
add
add
inc
add
add
add
inc
add
add
add
jmp
add
sbb
inc
add
add
add
dec
add
add
add
sub
add
hlt
add
push
inc
add
push
inc
add
adc
xor
add
les
add
add
add
out
inc
add
lock
add
inc
add
add
add
adc
cmp
add
les
add
add
add
inc
add
lock
add
pop
inc
add
add
add
or
add
add
or
add
shr
inc
add
out
pop
add
pop
inc
add
add
add
or
add
add
push
add
add
inc
add
out
pop
add
pop
inc
add
add
add
or
add
add
add
add
push
out
pop
add
pop
inc
add
add
add
or
add
add
push
add
add
pop
add
pop
inc
add
add
add
adc
dec
add
add
add
add
add
add
lock
add
lock
add
inc
add
add
add
adc
push
add
add
add
add
add
add
inc
add
lock
add
pop
inc
add
add
add
adc
push
add
add
add
add
add
add
add
add
lock
add
lock
add
pop
inc
add
add
add
add
adc
add
add
add
add
icebp
inc
add
out
pop
add
inc
add
add
add
add
pop
add
add
add
out
pop
add
add
add
add
or
add
add
sbb
add
mov
out
pop
add
add
inc
add
add
add
sbb
add
add
inc
add
out
pop
add
add
inc
add
add
add
pop
add
add
inc
add
out
pop
add
add
add
add
add
or
add
add
push
add
add
pop
add
add
add
add
add
pop
add
add
je
inc
add
(bad)
(bad)
inc
add
add
add
add
repnz
add
lock
add
(bad)
inc
adc
je
add
les
add
add
add
add
lock
add
add
add
add
add
adc
js
add
les
add
add
add
add
add
repz
add
lock
add
add
inc
add
add
add
add
add
add
add
inc
add
lock
add
add
inc
add
add
add
add
add
pushf
hlt
inc
add
lock
add
inc
add
add
inc
add
add
inc
add
add
add
hlt
inc
add
lock
add
inc
add
add
add
adc
mov
add
les
add
add
pop
cmc
inc
add
lock
add
add
inc
add
add
add
or
add
mov
out
pop
add
push
inc
add
add
inc
add
add
add
or
add
or
inc
add
out
pop
add
push
inc
add
add
add
or
add
add
or
add
push
test
out
pop
add
push
inc
add
add
add
adc
cwde
add
add
add
add
add
mov
lock
add
inc
add
add
inc
add
add
inc
add
add
add
test
cmp
inc
add
add
add
adc
mov
add
add
add
add
inc
add
lock
add
inc
add
add
add
adc
movs
add
add
add
add
add
add
test
xor
inc
add
add
add
clc
inc
add
clc
inc
add
inc
add
add
inc
add
inc
add
clc
inc
add
clc
inc
add
clc
inc
add
clc
inc
add
clc
inc
add
clc
inc
add
clc
inc
add
stc
inc
add
stc
inc
add
inc
add
stc
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
add
add
inc
add
es
add
inc
add
inc
add
add
add
clc
inc
add
inc
add
add
es
add
inc
add
inc
add
add
add
add
es
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
jmp
inc
add
inc
add
inc
add
inc
add
inc
add
es
add
inc
add
inc
add
add
add
add
inc
add
inc
add
es
add
inc
add
inc
add
add
add
inc
add
inc
add
add
es
add
inc
add
inc
add
add
add
add
add
add
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
jmp
pop
es
add
inc
add
inc
add
jmp
pop
es
add
inc
add
inc
add
inc
add
es
add
inc
add
inc
add
add
es
add
inc
add
inc
add
add
es
add
inc
add
inc
add
clc
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
jmp
add
es
add
inc
add
inc
add
add
add
clc
inc
add
clc
inc
add
jmp
add
es
add
inc
add
inc
add
clc
inc
add
inc
add
es
add
inc
add
inc
add
add
add
inc
add
es
add
inc
add
inc
add
add
add
add
add
add
fs
inc
add
es
add
inc
add
inc
add
add
add
stc
inc
add
stc
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
in
inc
add
es
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
add
add
inc
add
stc
inc
add
inc
add
inc
add
inc
add
inc
add
add
add
stc
inc
add
inc
add
add
es
add
inc
add
inc
add
add
add
inc
add
inc
add
add
es
add
inc
add
inc
add
add
add
clc
inc
add
clc
inc
add
add
add
arpl
add
add
add
(bad)
das
or
sub
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
add
add
add
dec
add
dec
add
(bad)
(bad)
inc
add
add
dec
add
push
in
adc
xchg
sbb
push
push
or
push
add
add
add
stc
inc
add
add
or
add
add
add
add
add
cmps
inc
add
(bad)
(bad)
push
add
add
sbb
add
je
inc
add
inc
add
add
add
pushf
inc
add
(bad)
(bad)
(bad)
mov
add
add
add
adc
add
aam
inc
add
inc
add
add
add
add
(bad)
(bad)
jmp
inc
add
add
push
add
add
add
add
add
(bad)
(bad)
dec
inc
add
inc
add
add
ins
std
inc
add
inc
add
add
add
mov
(bad)
push
add
add
adc
add
fdivr
inc
add
inc
add
add
add
mov
(bad)
(bad)
(bad)
(bad)
call
add
add
inc
add
add
add
inc
add
inc
add
add
add
(bad)
push
add
inc
add
add
inc
(bad)
inc
add
add
add
ja
add
(bad)
(bad)
call
or
add
add
rcl
add
add
add
add
add
add
inc
add
add
add
add
les
(bad)
(bad)
fmul
add
add
add
add
add
add
add
xchg
inc
add
(bad)
(bad)
dec
inc
add
add
inc
add
inc
add
sbb
add
add
(bad)
(bad)
call
or
add
add
mov
dec
add
add
add
inc
add
add
add
add
add
inc
add
add
add
add
hlt
fadd
(bad)
(bad)
(bad)
dec
or
je
inc
add
add
add
inc
add
inc
add
add
add
inc
add
(bad)
(bad)
jmp
add
add
fadd
inc
add
inc
add
add
add
(bad)
(bad)
call
or
add
add
or
dec
add
add
add
add
add
add
add
inc
add
add
xor
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
add
add
xor
add
inc
add
xor
adc
inc
add
xor
sbb
inc
add
xor
sub
inc
add
xor
xor
inc
add
xor
cmp
inc
add
inc
add
add
add
das
inc
add
das
inc
add
sub
inc
add
sub
inc
add
sub
add
sub
add
sub
add
sub
add
add
add
inc
add
inc
add
inc
add
es
add
es
add
inc
add
es
add
add
add
add
inc
add
inc
add
ins
dec
popa
imul
gs
imul
je
add
add
ins
dec
outs
fs
xor
add
ins
dec
outs
fs
xor
add
ins
dec
outs
fs
xor
add
ins
dec
outs
fs
gs
add
ins
inc
outs
outs
jne
add
add
dec
outs
fs
xor
data16
dec
gs
jo
ins
jbe
jne
je
outs
jae
dec
add
fs
jo
outs
push
push
dec
add
data16
push
gs
jne
arpl
add
add
data16
inc
bound
je
add
add
fs
jbe
imul
jb
push
arpl
add
add
add
push
add
inc
add
add
push
add
pop
add
imul
outs
add
outs
add
je
pop
add
push
add
add
add
add
ins
add
and
dec
add
arpl
popa
add
add
outs
add
add
add
add
dec
add
dec
add
inc
add
add
add
dec
popa
bound
add
add
push
bound
add
dec
popa
bound
xor
add
gs
xor
add
gs
xor
add
add
dec
add
push
add
inc
add
inc
add
add
arpl
jb
outs
add
outs
add
je
pop
add
push
add
add
add
add
ins
add
pop
add
push
add
dec
add
dec
add
add
add
add
add
inc
add
add
add
add
movs
fwait
inc
mov
inc
mov
mov
mov
inc
rcr
movs
popa
mov
inc
ja
pop
xchg
hlt
mov
out
imul
cwde
sub
iretw
adc
pusha
rcl
xor
add
cmp
push
add
xor
inc
cmp
outs
addr16
ins
and
ins
gs
dec
imul
je
push
imul
je
imul
pop
push
inc
ss
dec
inc
add
add
add
clc
add
add
add
push
add
add
add
add
add
add
inc
add
dec
add
sub
add
popa
xor
add
dec
lods
xor
or
stos
add
xchg
inc
outs
jb
add
add
dec
ins
popa
xor
add
popa
xor
add
lods
xor
or
stos
add
xchg
ins
outs
jne
gs
jo
ins
outs
jne
imul
imul
cdq
iretw
adc
pusha
rcl
imul
add
inc
outs
outs
je
outs
je
add
dec
ins
popa
addr16
add
popa
addr16
popa
gs
dec
popa
bound
xor
add
gs
xor
bound
add
pop
add
add
gs
xor
add
add
add
je
jns
je
ins
dec
gs
imul
and
inc
add
add
adc
add
add
add
mov
or
je
jmp
push
mov
call
jmp
add
add
nop
add
cmp
push
add
xor
and
push
add
xor
add
add
add
add
add
add
lods
xor
or
stos
add
xchg
mov
xor
or
stos
add
xchg
xchg
dec
lods
xor
or
stos
add
xchg
das
repnz
cmp
cmps
call
add
cdq
adc
mov
fld
loop
xchg
sub
arpl
sar
movs
lahf
sub
jbe
jnp
push
mov
sbb
lods
pop
test
push
dec
ins
popa
addr16
add
dec
ins
popa
cmp
add
popa
cmp
add
gs
cmp
add
gs
cmp
add
gs
aaa
add
dec
popa
bound
xor
add
gs
xor
add
fs
dec
add
add
cwde
add
cdq
mov
jne
int
pop
cmp
jnp
mov
lahf
xor
dec
popf
hlt
sub
push
aad
push
push
cmp
mov
mov
and
leave
dec
ins
popa
addr16
add
add
add
add
add
add
jmp
pop
dec
jmp
pop
rcr
icebp
fucomp
inc
(bad)
cld
popa
fbld
fwait
test
sub
or
push
sub
inc
push
mov
in
dec
popa
bound
xor
add
popa
xor
add
popa
xor
add
popa
xor
add
popa
xor
add
gs
xor
add
gs
xor
add
popa
addr16
aaa
add
mov
rol
pusha
sbb
inc
stos
jl
data16
jb
mov
xchg
dec
mov
xor
jae
loopne
pop
(bad)
(bad)
mov
sub
add
lods
rcr
mov
sub
xor
add
popa
xor
xor
add
add
inc
and
inc
adc
clc
push
cmp
movs
or
mov
inc
xchg
cdq
jo
or
xor
(bad)
mov
jno
pop
idiv
push
fdivp
inc
scas
sahf
inc
out
aaa
movs
fmul
add
mov
outs
pop
fst
sub
lea
loope
sbb
jo
pop
fimul
in
sub
adc
dec
daa
sbb
cmc
dec
mov
cmps
adc
movs
test
lds
sti
jno
lods
ins
jg
dec
popa
bound
xor
add
gs
xor
add
gs
xor
xor
add
add
gs
xor
dec
popa
bound
xor
xor
add
add
gs
xor
xor
add
add
popa
xor
add
popa
xor
add
popa
xor
add
popa
xor
xor
add
add
popa
xor
add
popa
xor
add
popa
xor
xor
add
add
gs
xor
add
or
add
add
or
add
add
add
dec
add
add
add
gs
je
push
outs
ins
imul
add
add
or
ror
inc
add
add
sbb
dec
add
or
je
jmp
push
mov
call
jmp
add
add
jae
jb
add
add
add
add
ins
ins
push
arpl
add
sbb
inc
add
or
add
add
sub
add
add
add
mov
or
je
jmp
push
mov
call
jmp
add
add
gs
gs
dec
bound
arpl
add
enter
ins
or
add
add
xor
dec
add
or
je
jmp
push
mov
call
jmp
add
add
fs
outs
jb
add
add
cmp
xor
or
stos
add
xchg
or
test
cmps
mov
outs
inc
sub
push
jmp
jae
or
lock
jge
lods
cmps
(bad)
dec
pop
inc
mov
cs
daa
stos
outs
mov
mov
fnstenv
add
add
jo
add
add
add
dec
add
add
je
je
jo
cmp
das
add
add
ja
ja
add
outs
add
je
outs
add
jb
imul
add
bound
jb
outs
add
add
jb
jns
add
outs
add
das
add
add
add
add
jae
gs
ins
xor
cs
ins
add
add
add
gs
ins
inc
js
arpl
gs
add
add
add
add
inc
cwde
dec
add
or
je
jmp
push
mov
call
jmp
add
add
or
test
hlt
and
adc
xor
sbb
retf
inc
xchg
bound
mov
lods
hlt
sbb
ja
test
enter
pop
movs
add
aam
loop
iret
sub
push
dec
dec
repnz
lods
xor
or
stos
add
xchg
add
add
ins
bound
je
add
add
arpl
push
jns
dec
outs
outs
add
ins
bound
jae
ins
popa
imul
ins
bound
jae
jb
jo
imul
add
popa
fs
jo
xor
add
add
push
add
add
addr16
jo
outs
dec
gs
js
add
add
add
add
add
dec
cwde
dec
add
or
je
jmp
push
mov
call
jmp
add
add
add
add
addr16
jne
jb
push
popa
ins
jne
inc
js
add
add
ins
or
les
inc
add
add
pop
cwde
dec
add
or
je
jmp
push
mov
call
jmp
add
add
add
push
gs
ins
outs
jae
dec
gs
ins
or
adc
add
add
fs
dec
add
or
je
jmp
push
mov
call
jmp
add
add
popa
jb
push
jns
dec
outs
outs
add
add
inc
gs
gs
popa
ins
jne
add
pop
add
xchg
es
sbb
fimul
fistp
inc
mov
pop
jge
push
dec
stos
push
or
jg
mov
cld
test
xchg
push
stos
into
cmp
data16
(bad)
xchg
outs
sub
test
mov
mov
cmps
inc
lods
ins
test
sub
je
outs
outs
jae
dec
xor
add
add
push
add
inc
ss
dec
dec
add
add
pop
pop
jbe
popa
inc
outs
add
add
add
add
jbe
popa
inc
jb
gs
popa
jb
add
add
jbe
popa
inc
jb
gs
je
dec
imul
pop
pop
jbe
popa
push
je
dec
xor
add
jbe
popa
push
je
dec
outs
jbe
add
add
pop
pop
jbe
popa
push
je
push
outs
inc
outs
jae
add
pop
pop
jbe
popa
push
popa
jb
outs
jbe
add
add
pop
pop
jbe
popa
dec
bound
gs
pop
pop
jbe
popa
inc
jb
gs
bound
add
add
jbe
popa
dec
gs
add
add
jbe
popa
inc
jo
xor
add
pop
pop
jbe
popa
dec
jb
jae
ins
je
push
bound
add
add
jbe
popa
push
gs
jns
je
ins
inc
jb
outs
jb
adc
xor
add
add
xor
add
add
add
push
add
add
imul
pop
pop
jbe
popa
dec
bound
gs
fs
data16
add
dec
lods
xor
or
stos
add
xchg
or
add
outs
add
add
add
add
jns
lods
xor
or
stos
add
xchg
add
add
pop
add
add
add
add
je
je
imul
and
push
add
add
je
add
add
outs
add
imul
add
add
add
imul
and
push
add
jb
add
add
push
add
add
add
jbe
imul
push
add
add
cmp
pop
add
add
add
pop
add
add
add
outs
add
and
push
add
add
je
add
add
outs
add
imul
add
add
add
imul
and
push
add
jb
add
add
push
add
add
add
popa
add
je
and
xor
add
jbe
imul
add
pop
add
outs
add
add
add
add
add
add
je
and
dec
add
add
jb
and
inc
add
jb
ins
add
add
ins
add
add
add
dec
add
add
add
je
je
imul
and
push
add
add
je
add
add
add
add
outs
add
and
push
add
add
je
add
add
add
add
add
pop
add
add
add
je
je
imul
and
push
add
add
je
add
add
outs
add
imul
add
add
add
imul
and
and
push
add
jb
add
add
push
add
add
add
add
add
pop
add
add
add
je
je
imul
and
push
add
add
je
add
add
outs
add
ins
add
je
je
imul
and
je
push
add
outs
add
imul
add
add
je
add
add
add
pop
pop
jbe
popa
push
je
inc
popa
je
jb
add
pop
add
outs
add
add
add
add
add
add
ja
and
push
add
and
dec
add
add
arpl
outs
add
add
add
add
and
dec
add
je
push
add
data16
add
jb
imul
outs
add
and
push
add
jb
je
and
xor
add
jbe
imul
push
add
add
add
sub
add
add
add
pop
add
outs
add
add
add
add
add
add
ja
and
push
add
and
dec
add
add
arpl
outs
add
add
add
add
and
dec
add
je
push
add
data16
add
jb
imul
outs
add
and
push
add
jb
je
and
xor
add
jbe
imul
add
pop
add
outs
add
add
add
add
add
add
ja
and
je
outs
add
add
jbe
add
arpl
outs
add
add
add
add
and
dec
add
je
push
add
data16
add
jb
imul
outs
add
add
add
add
add
pop
add
add
add
add
ins
add
and
xor
pop
add
js
jo
add
jae
add
add
jo
jb
add
add
add
push
add
add
add
jae
imul
and
xor
add
ins
add
add
add
dec
add
add
add
add
ins
add
and
xor
pop
add
popa
add
jb
outs
add
add
add
js
jo
add
jae
add
add
outs
add
add
add
add
add
add
ins
add
add
add
inc
add
add
add
add
ins
add
and
xor
pop
add
jo
jo
popa
add
add
add
jb
add
jb
pop
add
outs
add
ins
add
add
ins
add
add
add
ins
add
add
add
add
ins
add
and
xor
pop
add
jb
outs
add
add
je
imul
and
push
add
popa
add
imul
add
add
add
outs
add
add
add
imul
and
push
add
jae
jae
imul
and
xor
add
ins
add
add
add
je
add
pop
add
outs
add
add
add
add
add
add
je
ja
outs
add
imul
add
add
imul
and
push
add
popa
add
imul
add
add
add
outs
add
add
add
imul
and
push
add
jae
jae
imul
and
xor
add
ins
add
add
add
pushf
add
add
add
add
ins
add
and
xor
pop
add
popa
add
add
jb
imul
and
popa
add
add
add
outs
add
ins
add
je
je
imul
and
popa
add
add
add
data16
add
add
and
dec
add
arpl
add
jae
popa
add
jns
and
dec
add
data16
jb
ins
add
je
imul
and
push
add
jb
je
and
xor
add
jbe
imul
push
add
add
add
add
ins
add
and
xor
pop
add
add
add
add
outs
add
je
and
inc
add
popa
add
add
imul
jae
add
jae
imul
and
xor
add
ins
add
add
jl
add
pop
add
outs
add
add
add
add
add
add
bound
jb
outs
add
add
jb
jns
and
ins
add
arpl
push
add
and
push
add
outs
add
add
je
imul
and
push
add
push
add
ins
add
and
push
add
jae
jae
imul
and
xor
add
ins
add
add
add
je
add
pop
add
outs
add
add
add
add
add
add
je
ja
outs
add
imul
add
add
imul
and
push
add
popa
add
imul
add
add
add
outs
add
add
add
imul
and
push
add
jae
jae
imul
and
xor
add
ins
add
add
add
ins
add
add
add
add
ins
add
and
xor
pop
add
jb
outs
add
add
je
imul
and
push
add
popa
add
imul
add
add
add
outs
add
add
add
imul
and
push
add
jae
jae
imul
and
xor
add
ins
add
add
add
dec
add
add
add
add
ins
add
and
xor
pop
add
jne
jae
je
outs
add
add
pop
add
jo
jo
jb
outs
add
popa
add
add
outs
add
ins
add
add
ins
add
add
add
or
adc
add
add
adc
add
push
add
add
add
add
sbb
or
gs
sbb
and
add
pushf
add
add
add
add
ins
add
and
xor
pop
add
popa
add
add
jb
imul
and
popa
add
add
add
outs
add
ins
add
je
je
imul
and
popa
add
add
add
data16
add
add
and
dec
add
arpl
add
jae
popa
add
jns
and
dec
add
data16
jb
ins
add
je
imul
and
push
add
jb
je
and
xor
add
jbe
imul
jle
add
pop
add
outs
add
add
add
add
add
add
je
push
add
outs
add
and
popa
add
add
add
outs
add
ins
add
je
imul
and
je
push
add
add
add
jae
popa
add
jns
and
dec
add
data16
jb
ins
add
je
imul
add
add
add
dec
add
add
add
add
ins
add
and
xor
pop
add
ins
add
jb
outs
add
add
jb
jns
pop
add
outs
add
ins
add
ja
outs
add
imul
add
add
je
add
add
add
dec
add
add
add
add
ins
add
and
xor
pop
add
add
add
add
add
add
ins
add
arpl
add
add
je
and
push
add
add
je
add
ins
add
add
add
or
sbb
add
add
sbb
add
add
add
add
add
ins
add
and
xor
pop
add
jb
add
je
imul
and
popa
add
add
jb
imul
outs
add
and
push
add
add
je
add
jns
and
push
add
popa
add
add
imul
and
push
add
jb
imul
add
outs
add
and
pop
add
jne
add
add
add
add
add
add
add
add
ins
add
and
xor
pop
add
jb
add
je
imul
and
popa
add
add
jb
imul
outs
add
and
push
add
add
je
add
jns
and
push
add
popa
add
add
imul
and
push
add
jb
imul
add
outs
add
and
pop
add
jne
add
jbe
imul
push
add
add
add
add
ins
add
and
xor
pop
add
jb
imul
outs
add
and
push
add
add
je
add
jns
and
push
add
jae
jae
imul
and
xor
add
ins
add
add
add
ins
add
add
add
add
ins
add
and
xor
pop
add
jb
outs
add
add
je
imul
and
push
add
popa
add
imul
add
add
add
outs
add
add
add
imul
and
push
add
jae
jae
imul
and
xor
add
ins
add
add
add
or
sbb
add
add
sbb
add
add
add
cwde
add
add
add
add
ins
add
and
xor
pop
add
outs
add
and
je
outs
add
add
jb
add
je
add
add
outs
add
add
outs
add
ins
add
je
and
popa
add
add
jb
imul
and
dec
add
jae
je
and
push
add
popa
add
add
imul
and
push
add
jb
imul
add
add
jae
imul
and
xor
add
add
add
add
data16
add
add
add
ins
add
and
xor
pop
add
outs
add
and
je
outs
add
add
jb
add
je
add
add
outs
add
add
outs
add
ins
add
je
and
popa
add
add
jb
imul
and
dec
add
jae
je
add
jbe
imul
add
pop
add
outs
add
add
add
add
pop
add
jb
imul
outs
add
push
add
add
je
add
jns
push
add
jb
imul
add
outs
add
add
ins
add
add
pop
add
add
add
outs
add
jae
pop
add
outs
add
and
je
outs
add
add
jb
add
je
add
add
and
push
add
add
add
add
add
outs
add
je
and
push
add
add
je
add
add
add
push
jae
jb
outs
outs
je
outs
ins
add
or
add
add
or
add
or
adc
add
add
adc
add
add
add
inc
add
add
add
outs
add
jae
pop
add
jb
add
je
imul
and
popa
add
add
je
jns
ins
add
and
push
add
add
je
add
jbe
imul
add
pop
add
outs
add
jne
jae
pop
add
and
popa
add
add
add
add
add
add
add
pop
add
add
add
outs
add
jae
pop
add
push
add
outs
add
add
add
jae
pop
add
add
jne
jae
add
data16
jb
pop
add
push
add
data16
bound
jb
imul
add
add
add
xor
add
pop
add
outs
add
jne
jae
pop
add
popa
add
jo
ins
add
and
dec
add
outs
add
and
push
add
add
add
add
add
add
add
pop
add
outs
add
jne
jae
pop
add
jb
add
je
imul
inc
add
ins
add
outs
add
add
add
jb
add
add
add
jae
imul
add
add
add
add
imul
dec
test
leave
gs
ror
pop
mov
jecxz
lea
out
test
pop
bswap
adc
xchg
mov
push
cmp
sbb
dec
mov
dec
movs
cdq
call
mov
lock
mov
not
xor
or
stos
add
xchg
adc
add
inc
jb
popa
je
inc
outs
ins
jo
je
bound
inc
add
fmul
inc
add
add
je
dec
add
or
je
jmp
push
mov
call
jmp
add
add
add
add
gs
inc
inc
add
add
fmul
inc
add
add
sbb
add
add
add
or
je
jmp
push
mov
call
jmp
add
add
or
inc
add
add
mov
add
add
add
mov
or
je
jmp
push
mov
call
jmp
add
add
add
add
je
popa
jo
outs
fs
fmul
inc
add
add
cwde
cwde
dec
add
or
je
jmp
push
mov
call
jmp
add
add
add
add
je
bound
arpl
add
or
inc
add
add
movs
cwde
dec
add
or
je
jmp
push
mov
call
jmp
add
add
gs
arpl
push
arpl
add
fmul
inc
add
add
mov
dec
add
or
je
jmp
push
mov
call
jmp
add
add
add
add
je
popa
jo
outs
fs
dec
gs
jb
jae
add
add
dec
gs
jo
add
fmul
inc
add
add
mov
add
add
add
add
or
je
jmp
push
mov
call
jmp
add
add
add
add
ins
bound
gs
outs
add
fmul
inc
add
add
enter
mov
or
je
jmp
push
mov
call
jmp
add
add
add
add
gs
je
inc
ins
ins
imul
outs
add
add
or
inc
add
add
aam
dec
add
or
je
jmp
push
mov
call
jmp
add
add
add
add
gs
je
push
outs
ins
jns
outs
outs
push
outs
add
add
fmul
inc
add
add
loopne
dec
add
or
je
jmp
push
mov
call
jmp
add
add
add
add
gs
je
push
arpl
outs
add
add
or
inc
add
add
in
cwde
dec
add
or
je
jmp
push
mov
call
jmp
add
add
add
add
je
outs
inc
outs
js
add
fmul
inc
add
add
clc
cwde
dec
add
or
je
jmp
push
mov
call
jmp
add
add
add
add
ins
arpl
imul
add
jne
gs
outs
jbe
add
add
jns
outs
ja
add
add
add
or
inc
add
add
add
dec
add
or
je
jmp
push
mov
call
jmp
add
add
add
add
data16
je
outs
add
add
or
inc
add
add
adc
add
add
add
mov
or
je
jmp
push
mov
call
jmp
add
add
add
inc
jb
add
or
inc
add
add
sbb
dec
add
or
je
jmp
push
mov
call
jmp
add
add
add
add
je
ins
je
add
or
inc
add
add
sub
add
add
add
mov
or
je
jmp
push
mov
call
jmp
add
add
jb
popa
je
inc
imul
add
or
inc
add
add
xor
dec
add
or
je
jmp
push
mov
call
jmp
add
add
add
add
gs
je
inc
outs
ins
jo
je
bound
imul
or
inc
add
add
inc
cdq
dec
add
or
je
jmp
push
mov
call
jmp
add
add
add
inc
jb
popa
je
inc
outs
outs
je
outs
imul
or
gs
gs
inc
outs
ins
outs
jb
add
add
popa
jns
jb
ja
outs
add
add
fmul
inc
add
add
dec
cdq
dec
add
or
je
jmp
push
mov
call
jmp
add
add
add
add
gs
je
push
outs
add
add
or
inc
add
add
pop
cdq
dec
add
or
je
jmp
push
mov
call
jmp
add
add
or
inc
add
add
fs
dec
add
or
je
jmp
push
mov
call
jmp
add
add
add
add
popa
ins
gs
outs
add
add
fmul
inc
add
add
jo
dec
add
or
je
jmp
push
mov
call
jmp
add
add
add
add
je
imul
outs
jb
add
or
inc
add
add
jl
dec
add
or
je
jmp
push
mov
call
jmp
add
add
add
add
je
imul
add
or
inc
add
add
mov
add
add
add
mov
or
je
jmp
push
mov
call
jmp
add
add
add
inc
gs
jns
inc
outs
ins
outs
jb
and
inc
add
add
xchg
cdq
dec
add
or
je
jmp
push
mov
call
jmp
add
add
jne
gs
jo
fmul
inc
add
add
mov
add
add
add
add
or
je
jmp
push
mov
call
jmp
add
add
add
add
je
ins
je
add
or
inc
add
add
lods
cdq
dec
add
or
je
jmp
push
mov
call
jmp
add
add
add
add
ins
jns
imul
fmul
inc
add
add
mov
add
add
add
add
or
je
jmp
push
mov
call
jmp
add
add
add
add
popa
ins
imul
je
add
fmul
inc
add
add
les
add
add
add
mov
or
je
jmp
push
mov
call
jmp
add
add
add
add
arpl
ins
add
add
or
inc
add
add
rcr
add
add
add
mov
or
je
jmp
push
mov
call
jmp
add
add
add
add
ins
arpl
ins
gs
add
add
or
inc
add
add
fcomp
add
add
add
mov
or
je
jmp
push
mov
call
jmp
add
add
add
add
je
imul
outs
jb
add
jbe
jb
popa
arpl
outs
ins
outs
jb
add
outs
add
add
push
gs
jae
add
or
inc
add
add
call
add
add
add
add
or
je
jmp
push
mov
call
jmp
add
add
add
add
je
imul
add
add
or
inc
add
add
hlt
cdq
dec
add
or
je
jmp
push
mov
call
jmp
add
add
add
add
je
imul
add
or
inc
add
add
add
add
add
add
mov
or
je
jmp
push
mov
call
jmp
add
add
gs
gs
inc
outs
ins
outs
jb
add
add
or
inc
add
add
or
dec
add
or
je
jmp
push
mov
call
jmp
add
add
add
add
jb
je
push
add
or
inc
add
add
sbb
add
add
add
mov
or
je
jmp
push
mov
call
jmp
add
add
add
add
jb
gs
xor
add
add
push
add
add
ins
dec
outs
jbe
dec
gs
outs
jb
add
add
sub
dec
sub
add
add
and
dec
add
or
je
jmp
push
mov
call
jmp
add
add
add
add
jo
dec
ins
popa
add
add
jbe
jb
outs
jb
inc
outs
ins
outs
jb
add
inc
add
add
inc
add
add
xor
add
add
add
mov
or
je
jmp
push
mov
call
jmp
add
add
add
inc
gs
jb
jns
arpl
add
add
inc
add
add
cmp
dec
add
or
je
jmp
push
mov
call
jmp
add
add
add
add
ja
outs
arpl
push
arpl
add
add
inc
add
add
dec
call
add
add
mov
or
je
jmp
push
mov
call
jmp
add
add
add
add
ja
arpl
inc
js
add
add
inc
add
add
push
call
add
add
mov
or
je
jmp
push
mov
call
jmp
add
add
add
add
ja
gs
inc
add
add
add
inc
add
add
pusha
call
add
add
mov
or
je
jmp
push
mov
call
jmp
add
add
gs
jne
jae
jb
outs
jae
add
add
add
inc
add
add
ins
call
add
add
mov
or
je
jmp
push
mov
call
jmp
add
add
add
add
je
inc
add
add
jae
je
gs
jne
je
outs
ins
outs
jb
add
dec
outs
jbe
jb
outs
ins
outs
jb
outs
arpl
add
add
inc
add
add
js
dec
add
or
je
jmp
push
mov
call
jmp
add
add
add
inc
gs
arpl
dec
outs
outs
add
add
inc
add
add
test
add
add
add
mov
or
je
jmp
push
mov
call
jmp
add
add
add
add
je
jb
jo
add
add
and
inc
add
add
nop
call
add
add
mov
or
je
jmp
push
mov
call
jmp
add
add
add
add
je
imul
arpl
add
add
inc
add
add
pushf
call
add
add
mov
or
je
jmp
push
mov
call
jmp
add
add
gs
imul
outs
add
add
and
inc
add
add
test
dec
add
or
je
jmp
push
mov
call
jmp
add
add
add
dec
outs
data16
popa
je
push
arpl
add
inc
add
add
mov
dec
add
or
je
jmp
push
mov
call
jmp
add
add
add
add
ins
ins
push
imul
inc
jb
imul
outs
jb
add
inc
jb
imul
add
add
and
inc
add
add
rcr
add
add
add
or
je
jmp
push
mov
call
jmp
add
add
add
add
jbe
push
imul
and
inc
add
add
int3
call
add
add
mov
or
je
jmp
push
mov
call
jmp
add
add
add
add
data16
je
arpl
and
inc
add
add
fcomp
add
add
add
mov
or
je
jmp
push
mov
call
jmp
add
add
outs
jae
dec
gs
popa
addr16
add
add
and
inc
add
add
in
dec
add
or
je
jmp
push
mov
call
jmp
add
add
add
add
ins
gs
jae
inc
popa
jo
jne
add
and
inc
add
add
lock
add
add
mov
or
je
jmp
push
mov
call
jmp
add
add
add
add
ins
gs
jae
inc
inc
add
add
add
inc
add
add
cld
call
add
add
mov
or
je
jmp
push
mov
call
jmp
add
add
add
push
gs
outs
jbe
push
jb
jo
add
jb
inc
outs
ins
outs
jb
add
inc
popa
arpl
outs
ins
outs
jb
add
dec
outs
jne
gs
outs
ja
add
add
add
inc
add
add
or
add
add
add
mov
or
je
jmp
push
mov
call
jmp
add
add
add
add
jb
outs
push
outs
inc
ins
imul
add
inc
add
add
adc
dec
add
or
je
jmp
push
mov
call
jmp
add
add
add
add
je
popa
jo
jne
add
and
inc
add
add
and
add
add
add
mov
or
je
jmp
push
mov
call
jmp
add
add
add
add
je
jb
jo
add
add
and
inc
add
add
sub
dec
add
or
je
jmp
push
mov
call
jmp
add
add
add
add
je
arpl
add
inc
add
add
cmp
add
add
add
mov
or
je
jmp
push
mov
call
jmp
add
add
add
add
je
imul
add
add
inc
add
add
inc
fwait
dec
add
or
je
jmp
push
mov
call
jmp
add
add
gs
imul
outs
add
add
inc
outs
outs
je
add
add
loopne
mov
mov
or
inc
outs
outs
je
je
ins
add
add
add
add
add
inc
add
add
push
fwait
dec
add
or
je
jmp
push
mov
call
jmp
add
add
add
add
outs
outs
ja
jb
ins
push
outs
imul
add
das
inc
add
add
pop
fwait
dec
add
or
je
jmp
push
mov
call
jmp
add
add
je
outs
outs
push
je
ins
add
fs
add
inc
popa
jo
imul
je
outs
outs
inc
ins
imul
inc
popa
jo
imul
add
add
inc
jne
je
ins
inc
ins
imul
je
outs
push
push
push
imul
xor
add
add
add
add
add
add
inc
inc
cmp
dec
inc
dec
push
push
pop
jae
jae
gs
xor
pop
jae
outs
ins
xor
je
bound
jae
outs
ins
add
nop
xor
add
add
add
add
add
add
mov
xor
push
add
add
add
add
sub
add
mov
add
push
imul
ins
imul
inc
outs
popa
bound
add
outs
ja
outs
arpl
push
arpl
add
ins
jne
add
add
arpl
gs
imul
jae
push
outs
imul
add
dec
outs
jne
gs
arpl
add
add
add
add
jne
gs
outs
inc
jne
je
outs
add
add
imul
outs
jne
ins
gs
ins
imul
inc
outs
ins
jo
gs
inc
jb
add
inc
inc
jb
addr16
jb
jo
and
jmp
add
inc
cmp
dec
inc
dec
push
push
pop
push
pop
push
push
inc
dec
xor
pop
dec
push
push
inc
push
dec
xor
inc
dec
dec
pop
xor
add
push
push
dec
add
add
add
push
add
add
add
add
inc
add
add
sub
add
cmps
inc
sbb
adc
push
inc
inc
jb
addr16
jbe
jb
dec
dec
inc
inc
imul
bound
imul
dec
inc
push
gs
popa
je
add
dec
dec
inc
push
je
jb
inc
jb
add
add
inc
add
add
add
add
add
adc
imul
in
inc
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
add
add
add
(bad)
inc
or
mov
add
add
adc
add
inc
add
arpl
imul
add
ins
add
jb
add
adc
add
inc
add
arpl
imul
add
add
add
add
add
add
outs
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
popa
add
je
imul
add
push
mov
iret
adc
bound
add
push
add
add
jne
je
je
outs
add
and
imul
add
jae
and
popa
add
add
add
ins
add
add
add
add
add
das
add
outs
add
add
ins
add
add
add
je
add
sub
and
add
add
add
add
or
add
add
add
jne
je
je
outs
add
and
arpl
popa
add
je
imul
jae
and
arpl
popa
add
and
outs
add
ins
add
and
bound
add
add
add
je
add
and
popa
add
add
outs
add
add
add
add
add
add
popa
add
inc
add
add
outs
add
add
add
add
add
popa
add
push
add
add
add
add
add
push
add
add
jb
outs
add
add
je
jns
and
push
add
add
outs
add
add
data16
add
je
and
jne
outs
add
add
jae
and
je
push
add
jne
je
je
outs
add
and
push
add
popa
add
add
add
jae
and
popa
add
add
jne
jae
je
outs
add
and
jae
push
add
add
add
add
add
add
jne
jae
je
outs
add
inc
add
add
imul
add
add
ins
add
pop
add
bound
push
add
add
xchg
add
add
add
and
push
add
arpl
je
jne
jb
add
add
jb
outs
add
add
je
jns
and
ins
add
jae
je
and
bound
add
add
jae
jae
imul
add
add
imul
je
and
popa
add
add
add
jne
jae
je
and
bound
add
add
and
bound
imul
popa
add
and
outs
add
and
dec
add
inc
add
add
add
add
add
push
add
add
push
add
add
imul
jne
jb
add
add
add
outs
add
jae
and
arpl
popa
add
outs
add
je
and
bound
add
add
jae
add
add
outs
add
and
arpl
jne
jae
je
outs
add
and
bound
jne
je
je
outs
add
jae
add
add
outs
add
add
add
jae
add
add
imul
popa
add
jae
and
outs
add
and
dec
add
inc
add
jae
add
add
add
inc
add
je
je
outs
add
and
ja
popa
add
and
arpl
push
add
add
add
add
add
add
je
popa
add
add
ins
add
jb
and
jae
push
add
add
add
add
add
add
ins
add
add
add
adc
add
dec
add
add
ins
add
add
add
add
push
add
add
outs
add
bound
ins
add
add
add
add
add
add
add
add
outs
add
jne
jae
and
jb
add
je
popa
add
add
add
add
popa
add
and
popa
add
jo
add
jb
and
outs
add
and
add
data16
jne
ins
add
add
jne
je
je
outs
add
jae
and
dec
add
dec
add
and
ja
push
add
and
imul
add
jae
imul
and
ins
add
add
sub
and
add
pop
add
add
jne
je
and
ja
imul
and
outs
add
je
and
popa
add
jo
add
jb
and
ja
push
add
add
add
and
data16
jb
ins
add
add
jae
and
jb
jne
outs
add
imul
add
add
add
add
outs
add
jne
jae
add
jb
add
push
add
imul
jo
jb
outs
add
add
je
jns
and
imul
outs
add
je
and
popa
add
jo
ins
add
arpl
popa
add
ins
add
and
data16
jb
and
arpl
outs
add
ins
add
outs
add
add
jne
je
je
outs
add
and
ins
add
add
jae
add
add
add
add
popa
add
add
add
sbb
add
add
xchg
add
add
or
add
add
add
push
add
add
add
dec
add
je
inc
add
jne
outs
add
add
add
push
add
add
add
imul
jne
jb
add
add
imul
and
arpl
popa
add
outs
add
je
and
bound
add
add
push
add
add
add
outs
add
and
push
add
popa
add
add
add
jne
je
je
outs
add
jae
add
push
add
add
ins
add
push
add
jp
add
add
add
add
push
add
imul
add
add
add
or
add
ins
add
arpl
outs
add
add
mov
dec
sbb
mov
cmp
cmp
add
push
add
ins
add
arpl
je
and
add
arpl
outs
add
add
jb
and
add
jne
jb
and
inc
add
ins
add
jae
and
dec
add
ins
add
add
add
or
add
inc
add
outs
add
add
add
add
add
inc
add
jb
add
add
add
add
inc
add
arpl
imul
add
add
add
inc
add
popa
add
add
outs
add
add
add
add
jb
popa
add
add
outs
add
add
add
add
add
inc
add
outs
add
add
add
push
add
add
inc
add
outs
add
add
add
adc
add
dec
add
arpl
imul
add
jbe
add
add
sbb
add
add
adc
or
add
adc
add
add
add
sub
add
inc
add
jb
and
imul
dec
add
je
imul
push
add
add
ins
add
cmp
and
add
add
add
add
mov
add
add
jl
jl
add
add
jno
lods
xor
or
stos
add
xchg
push
add
popa
add
add
outs
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
jo
ins
add
jns
inc
add
inc
add
data16
jne
ins
add
add
add
add
ins
add
pop
add
ins
add
jae
jae
dec
add
add
add
add
ins
add
pop
add
add
add
dec
add
add
add
outs
add
je
add
rcl
mov
or
add
add
imul
add
ins
add
jb
add
push
add
add
inc
add
outs
add
add
add
pop
pop
jbe
popa
push
popa
jb
gs
pop
pop
jbe
popa
inc
popa
jae
dec
bound
popa
jb
pop
pop
jbe
popa
push
je
dec
xor
add
jbe
popa
inc
jo
push
outs
addr16
xor
add
pop
pop
jbe
popa
inc
push
dec
outs
je
add
jbe
popa
push
bound
outs
add
jbe
popa
push
popa
jb
jb
add
jbe
popa
inc
jb
push
outs
ins
outs
arpl
add
jbe
popa
inc
jb
dec
outs
arpl
add
add
jbe
popa
push
popa
jb
fs
jbe
popa
push
arpl
jae
push
outs
push
outs
imul
jbe
popa
push
arpl
imul
add
pop
pop
jbe
popa
dec
xor
jb
add
jbe
popa
inc
jns
popa
jb
add
jbe
popa
inc
jns
jne
dec
xor
add
add
jbe
popa
push
cmp
add
add
jbe
popa
push
je
push
popa
jb
outs
jbe
add
jbe
popa
dec
jae
je
imul
pop
jbe
popa
push
dec
xor
add
pop
pop
jbe
popa
inc
jo
xor
add
pop
pop
jbe
popa
push
outs
ja
jb
cmp
add
add
jbe
popa
inc
outs
jae
bound
gs
pop
pop
jbe
popa
inc
outs
jae
bound
je
jb
add
add
pop
pop
jbe
popa
dec
popa
je
dec
gs
inc
popa
ins
ins
dec
add
pop
pop
jbe
popa
inc
push
jns
add
pop
pop
jbe
popa
inc
outs
jae
bound
add
jbe
popa
inc
jb
gs
bound
imul
pop
pop
jbe
popa
inc
jo
cmp
add
pop
pop
jbe
popa
inc
outs
jo
inc
jns
gs
add
jbe
popa
push
je
push
outs
push
outs
imul
add
jbe
popa
push
popa
imul
je
pop
pop
jbe
popa
inc
popa
imul
outs
add
add
jbe
popa
inc
outs
gs
je
inc
outs
jne
fs
jb
outs
jb
add
add
jbe
popa
inc
jb
inc
outs
outs
jae
jb
arpl
add
jbe
popa
dec
popa
je
dec
fs
popa
ins
ins
dec
add
add
jbe
popa
inc
outs
outs
ins
push
popa
jb
add
add
jbe
popa
dec
xor
jae
add
jbe
popa
dec
popa
je
dec
fs
je
add
pop
pop
jbe
popa
inc
js
je
jb
arpl
add
pop
pop
jbe
popa
dec
outs
inc
jb
outs
jb
add
add
jbe
popa
inc
jb
inc
gs
jb
arpl
add
pop
pop
jbe
popa
inc
jb
jae
add
add
add
pop
pop
jbe
popa
push
gs
bound
xor
popa
jb
add
jbe
popa
dec
bound
jae
add
jbe
popa
push
popa
jb
jne
add
jbe
popa
dec
outs
inc
jae
jb
add
add
jbe
popa
inc
jb
gs
popa
jb
imul
pop
pop
jbe
popa
inc
jb
outs
jb
jbe
jb
ins
outs
ja
add
jbe
popa
dec
xor
je
add
pop
pop
jbe
popa
push
je
push
gs
inc
ins
jo
pop
pop
jbe
popa
inc
jb
gs
je
add
add
pop
pop
jbe
popa
push
je
inc
outs
jo
add
add
pop
pop
jbe
popa
dec
xor
add
add
add
add
add
add
add
add
add
or
add
add
add
outs
add
add
add
add
add
or
add
bound
ins
add
add
add
add
add
add
add
outs
add
add
add
add
dec
add
data16
arpl
add
add
outs
add
xor
add
add
add
add
push
add
outs
add
add
add
outs
add
add
add
outs
add
je
popa
add
add
ja
dec
add
inc
add
add
sub
add
add
js
add
add
add
pop
add
add
bound
add
add
add
add
jb
and
cmp
add
add
add
add
add
add
push
add
add
add
add
add
pop
add
push
add
add
js
add
add
add
add
add
dec
add
data16
arpl
add
add
add
pop
add
data16
imul
pop
add
jne
imul
pop
add
add
outs
add
add
add
add
add
add
add
xor
add
pop
add
add
outs
add
jb
arpl
add
pop
add
jae
xor
jo
add
cmp
cmp
xor
add
add
add
add
add
pop
add
add
bound
add
add
add
add
jb
and
cmp
add
add
add
add
add
jae
je
popa
add
add
je
imul
and
dec
add
jae
je
jb
jne
arpl
je
imul
jae
add
add
add
cmp
add
pop
add
add
outs
add
jb
arpl
add
pop
add
add
push
add
je
push
add
add
arpl
add
js
add
add
add
jbe
popa
push
popa
jb
jae
inc
jno
add
sbb
add
pop
add
push
add
dec
add
dec
add
add
add
add
js
inc
add
add
add
jns
jae
je
add
and
dec
add
data16
jb
ins
add
je
imul
and
dec
add
and
push
add
popa
add
popa
add
ins
add
bound
ins
add
and
inc
add
add
add
jae
and
push
add
ins
add
add
add
add
add
add
add
add
pop
pop
jbe
popa
push
je
push
popa
jb
popa
ins
add
pop
pop
jbe
popa
dec
outs
push
je
push
popa
jb
add
pop
pop
jbe
popa
push
popa
jb
jne
add
jbe
popa
push
je
inc
ins
jo
dec
xor
add
xchg
pop
bswap
adc
xchg
mov
imul
dec
test
leave
gs
ror
xor
or
stos
add
xchg
push
add
add
add
add
add
jne
je
outs
jae
dec
add
add
add
add
add
arpl
xor
xor
add
add
aaa
add
add
inc
add
add
nop
add
push
imul
ja
push
outs
ins
popa
outs
inc
add
inc
add
or
add
mov
or
add
(bad)
(bad)
call
add
push
cli
std
(bad)
(bad)
sti
(bad)
(bad)
call
(bad)
(bad)
(bad)
(bad)
std
(bad)
(bad)
cli
(bad)
(bad)
dec
add
push
or
add
(bad)
(bad)
inc
add
push
add
add
(bad)
(bad)
inc
add
push
add
(bad)
(bad)
dec
add
push
dec
xor
pop
sbb
ja
test
enter
pop
movs
add
out
hlt
and
adc
xor
cdq
iretw
adc
pusha
rcl
push
add
add
add
add
add
ins
inc
bound
je
or
bound
je
push
imul
je
add
add
sbb
add
and
and
(bad)
(bad)
jmp
ins
xor
add
add
sldt
bound
outs
add
je
and
push
add
ins
add
push
add
add
je
xor
xor
pop
add
jmp
or
add
add
add
add
add
dec
dec
add
add
dec
dec
add
prefetchnta
mov
add
adc
adc
sbb
add
dec
add
add
add
or
arpl
push
jns
dec
outs
outs
add
verr
push
jns
je
ins
and
outs
cs
jo
add
add
sbb
add
add
jns
jae
je
add
and
dec
add
data16
add
add
add
add
add
add
add
popa
xor
sbb
inc
add
add
add
add
add
add
add
add
adc
add
add
sub
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
inc
add
add
add
inc
inc
add
inc
inc
(bad)
inc
add
(bad)
inc
xchg
js
ja
jg
ja
ja
ja
xchg
add
ja
push
push
pop
jnp
mov
jne
push
push
jo
add
push
add
ja
push
push
pop
jnp
mov
ja
ja
xchg
xchg
ja
jo
ja
js
pushw
ja
adc
ja
loopne
addr16
adc
add
pop
jno
adc
push
add
adc
ja
loopne
addr16
adc
pusha
data16
add
ja
ja
jo
ja
js
add
add
add
add
js
lock
push
add
(bad)
inc
mov
add
add
add
inc
gs
jb
jo
imul
add
fs
and
and
and
inc
popa
jb
gs
inc
bound
xor
xor
add
add
add
inc
add
push
adc
adc
sbb
sbb
jo
jo
and
inc
add
jae
arpl
jb
imul
imul
and
mov
add
popa
outs
jae
push
gs
inc
jo
add
add
ins
push
imul
add
gs
push
add
(bad)
inc
add
dec
loopne
adc
add
jo
jo
ins
add
arpl
popa
add
add
outs
add
add
add
add
pop
add
nop
add
dec
push
and
outs
jae
push
gs
inc
das
add
add
add
xor
pop
add
add
add
add
add
add
adc
add
inc
xor
add
add
xor
pop
add
add
(bad)
(bad)
inc
add
add
add
add
adc
add
add
add
or
inc
imul
gs
add
daa
add
imul
and
and
jno
gs
and
and
jb
arpl
inc
outs
jb
gs
add
(bad)
inc
add
test
add
add
sbb
popa
add
outs
add
outs
add
cmp
and
add
add
add
add
mov
add
popa
outs
jae
push
gs
inc
add
add
int3
xor
add
test
xchg
push
stos
into
cmp
pushw
xchg
es
sbb
fimul
fistp
inc
cmp
xor
or
stos
add
xchg
inc
test
xor
pop
add
ins
dec
gs
jo
or
push
bound
imul
popa
arpl
sub
ins
outs
outs
and
jae
gs
popa
outs
and
ins
jne
imul
add
and
add
ins
je
add
add
(bad)
fdivr
loopne
adc
dec
inc
add
add
add
sub
add
fild
inc
add
add
add
add
add
add
add
add
or
pop
push
or
or
or
or
or
push
adc
or
adc
adc
adc
pop
sbb
adc
adc
inc
add
add
add
add
or
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
inc
add
or
loopne
add
and
add
add
adc
inc
add
add
add
add
add
add
or
inc
add
add
add
add
add
jge
add
add
add
push
adc
pop
and
xor
inc
mov
adc
xor
or
push
pop
sbb
sbb
sub
cmp
inc
inc
inc
dec
dec
dec
push
push
push
push
push
pop
pop
pop
arpl
addr16
jne
ja
jns
add
xchg
xchg
xchg
xchg
xchg
xchg
cwde
cdq
call
test
stos
mov
mov
mov
mov
(bad)
(bad)
enter
rcl
aad
xlat
fcomp
(bad)
loop
in
out
call
repz
cmc
div
clc
stc
cli
inc
add
add
add
add
add
add
add
add
add
add
add
add
or
inc
add
add
add
add
add
add
add
add
and
push
adc
pop
popa
jno
and
or
mov
or
xor
adc
push
and
loope
icebp
pop
sbb
sbb
daa
sub
sub
cmp
inc
inc
inc
dec
dec
dec
push
push
push
push
push
pop
pop
pop
arpl
addr16
jne
ja
jns
add
mov
xchg
xchg
cwde
cdq
call
test
stos
mov
mov
mov
mov
(bad)
(bad)
enter
rcl
aad
xlat
fcomp
(bad)
jecxz
in
out
jmp
cmc
div
clc
stc
cli
(bad)
fiadd
or
add
add
add
add
add
cmp
loop
jp
sbb
mov
cmps
mov
(bad)
adc
bswap
xor
add
test
inc
push
scas
sti
sti
daa
clc
rcr
dec
inc
fdiv
add
cli
cli
and
sbb
pop
test
ja
inc
outs
xchg
xchg
push
int
push
jne
xlat
sub
mov
xlat
std
std
xchg
cld
imul
lods
jg
fnstcw
(bad)
mov
sar
sti
inc
cmc
sub
data16
sbb
imul
inc
mov
aas
clc
call
xor
loop
test
scas
mov
jg
mov
push
fnstcw
cmp
cmp
aas
idiv
dec
icebp
movs
sti
pop
(bad)
aas
mov
jmp
mov
stc
or
std
clc
xchg
inc
mov
lock
cld
dec
inc
(bad)
(bad)
inc
jmp
push
jg
mov
test
inc
hlt
sbb
ins
mov
inc
mov
fdivr
inc
dec
(bad)
xor
ret
add
add
inc
inc
fisttp
clc
pop
ficomp
inc
mov
adc
xor
inc
mov
jne
inc
leave
mov
push
cmp
in
jle
(bad)
(bad)
mov
add
inc
sbb
jecxz
jmp
jg
jp
clc
stos
loope
inc
xor
inc
jle
inc
loop
sub
js
icebp
lea
add
cdq
aas
clc
call
inc
ja
add
inc
mov
inc
repz
mov
out
jp
pop
idiv
dec
icebp
movs
push
pop
pusha
psubd
daa
clc
xlat
mov
push
jg
stc
aas
test
add
mov
jo
mov
add
mov
add
cdq
inc
loopne
test
fs
sbb
mov
xor
add
dec
or
push
xor
jmp
(bad)
mov
push
in
fld
(bad)
mov
lahf
push
push
and
das
cmc
xlat
mov
call
pop
inc
inc
mov
dec
cli
push
pop
clc
adc
pop
mov
aam
fsubr
mov
inc
lea
jl
in
test
mov
add
mov
inc
aas
addr16
std
mov
push
cmps
lahf
jecxz
or
sbb
bnd
cld
jg
mov
jecxz
xor
iret
inc
add
inc
xlat
sbb
loop
dec
sbb
fs
ins
popa
adc
cmps
xchg
pop
into
mov
mov
pop
xchg
inc
jmp
popf
ja
jle
lock
or
stos
and
jl
es
jg
mov
xchg
jo
mov
cwde
aas
inc
adc
mov
inc
sub
repnz
das
imul
cld
call
(bad)
jg
in
lahf
jecxz
fdivr
dec
(bad)
xor
cld
xor
icebp
daa
inc
adc
loop
xchg
mov
out
mov
std
jbe
psubd
aas
cld
pop
push
(bad)
in
sub
inc
int
(bad)
out
imul
test
out
sbb
jmp
lods
cmp
icebp
jbe
jae
fidivr
jge
ss
pusha
fdivr
fmulp
icebp
test
jg
iret
std
js
push
cdq
sub
add
jne
jecxz
fldenv
fcmovb
scas
cld
or
add
jl
paddb
lahf
clc
adc
add
inc
aam
push
les
jge
adc
xchg
add
fdivr
add
(bad)
cld
jno
ret
dec
pop
push
int
aam
jns
(bad)
hlt
mov
cli
adc
ret
fst
std
pop
scas
cld
or
sbb
jecxz
dec
shl
cmps
mov
pop
outs
jl
add
sbb
scas
pop
aas
adc
fbstp
(bad)
std
xor
es
inc
mov
add
add
stos
sub
push
pop
mov
test
out
mov
out
(bad)
mov
mov
stos
retf
xchg
arpl
call
mov
add
xchg
add
dec
in
pop
adc
add
(bad)
cmps
inc
or
pop
and
repz
or
inc
int3
and
iret
jae
inc
ret
jmp
inc
fcmovu
sub
repnz
stos
jg
inc
inc
lea
push
icebp
inc
cmp
jmp
pop
sub
and
mov
xor
adc
inc
repnz
repz
cli
lea
aas
enter
mov
push
(bad)
clc
inc
aam
add
and
add
popf
push
mov
pop
push
(bad)
mov
fcmovb
loope
retf
xchg
mov
mov
(bad)
push
inc
imul
das
xchg
clc
xor
add
mov
mov
(bad)
mov
cmp
xor
jne
pop
pop
neg
dec
icebp
scas
push
test
mov
call
push
and
in
outs
cld
inc
pushf
jl
cmps
test
pmaddwd
cmc
lea
in
inc
(bad)
stc
ds
inc
sahf
mov
cld
push
in
mov
add
inc
sbb
xor
push
aam
push
and
push
jle
mov
repz
or
cld
int3
xlat
or
xchg
in
dec
aaa
repnz
(bad)
in
dec
call
test
fwait
(bad)
xor
ja
(bad)
mov
jo
adc
pusha
dec
cmp
das
repz
aam
popf
aas
sbb
int
sbb
outs
repz
lods
jmp
jge
xor
scas
mov
out
push
cwde
inc
mov
inc
sbb
mov
pop
or
mov
pmaddwd
fidivr
(bad)
shl
outs
xor
inc
leave
mov
test
ret
cld
(bad)
cmp
outs
mov
(bad)
add
push
fwait
pop
icebp
cmp
aam
xchg
inc
jecxz
mov
xchg
mov
mov
pop
std
scas
jbe
sbb
add
mov
pop
mov
jbe
add
stc
cdq
shl
retf
xor
leave
jge
in
inc
ret
cmp
sti
dec
push
(bad)
std
jl
clc
aam
lods
js
aam
jmp
inc
lea
dec
out
test
and
popa
inc
je
mov
add
rcr
jae
icebp
jnp
test
in
out
(bad)
movs
popa
aas
out
mov
clc
dec
jl
pushf
jg
jmp
add
nop
imul
call
add
mov
je
jmp
repnz
mov
test
add
out
repz
stos
repnz
cld
mov
inc
lds
mov
xor
jecxz
sbb
pop
(bad)
cli
in
daa
clc
xlat
jge
jmp
retf
and
or
xchg
push
jle
jmp
call
out
repz
mov
sub
std
(bad)
xchg
mov
xor
jae
shrd
lea
mov
pop
mov
add
es
push
retf
jno
push
or
mov
das
adc
mov
retf
inc
shl
sahf
(bad)
pop
and
test
push
mov
movups
jecxz
cmps
mov
clc
(bad)
mov
clc
in
mov
cmp
jmp
pushf
ret
inc
(bad)
ja
or
mov
mov
loope
inc
jmp
mov
push
ins
hlt
(bad)
out
(bad)
xor
jnp
(bad)
out
mov
cdq
(bad)
push
mov
int3
pop
inc
in
push
jmp
loope
lock
push
icebp
addr16
xlat
sti
lods
cmp
inc
int3
iret
std
dec
mov
in
inc
outs
cld
and
and
add
sub
inc
loop
cli
or
aas
clc
adc
add
pop
idiv
das
neg
or
lods
inc
jno
(bad)
push
pop
mov
and
std
push
lahf
dec
inc
test
dec
lock
and
(bad)
adc
adc
add
push
push
inc
rcl
and
paddw
jg
stos
pcmpgtw
xchg
sar
cmps
stc
js
jecxz
push
ins
xor
retf
push
lock
stc
push
and
mov
push
aam
inc
jbe
iret
cmc
test
xor
jp
push
repz
(bad)
xor
(bad)
gs
and
push
xchg
div
out
jb
jmp
mov
sar
add
mov
xchg
cmp
add
push
daa
(bad)
mov
push
icebp
dec
cmc
mov
aas
clc
xlat
dec
sbb
adc
xlat
lods
into
xor
in
cs
pop
jmp
sub
outs
sbb
loop
lock
in
pop
adc
stc
jg
aas
lock
add
test
mov
std
push
(bad)
mov
and
pop
jle
sti
push
lock
xor
mov
(bad)
cmc
ret
add
mov
imul
lock
and
mov
xchg
push
(bad)
adc
aam
inc
pop
das
(bad)
xor
test
mov
movs
dec
repnz
mov
mov
cmps
popa
imul
inc
push
xor
imul
add
inc
(bad)
adc
jae
adc
add
adc
add
dec
inc
or
inc
inc
fwait
inc
cld
or
test
sub
(bad)
dec
xor
imul
pop
vpsubusw
jmp
out
cmc
xor
imul
add
fcos
add
add
add
outs
mov
jg
(bad)
(bad)
mov
js
and
in
add
and
in
push
loop
outs
rol
ret
inc
inc
xor
mov
pop
in
ds
or
push
mov
inc
sbb
lods
pop
psubq
icebp
lods
dec
adc
ret
pushf
xlat
inc
jl
(bad)
mov
repnz
repz
std
dec
ret
jg
fnstcw
in
jno
mov
mov
into
jg
pop
ds
pop
cmp
mov
cmc
lock
jecxz
lods
pushf
sahf
inc
fcom
add
mov
pop
dec
test
mov
push
imul
or
ret
cld
mov
lods
clc
popf
mov
mov
jg
cmps
scas
test
jmp
push
lods
mov
pop
cmps
sub
mov
imul
pop
xchg
jno
jle
test
pop
int3
loope
push
lahf
dec
arpl
add
int
mov
clc
jg
xchg
jne
adc
pop
neg
inc
(bad)
cwde
fcmovbe
mov
(bad)
mov
(bad)
mov
dec
lock
lea
test
or
cmps
inc
xchg
jg
call
lock
and
aad
adc
mov
std
sahf
cld
dec
stos
pop
jl
lock
ret
sbb
daa
jbe
sbb
test
mov
aaa
mov
mov
cld
xchg
iret
or
add
retf
jg
mov
sar
pop
or
mov
sbb
sbb
pop
gs
loope
arpl
mov
fdivrp
push
inc
xor
aas
std
xchg
dec
scas
popf
(bad)
dec
add
add
jo
add
cli
cli
and
jg
lock
loopne
cdq
out
jo
lock
cmp
loope
ret
fwait
lahf
(bad)
fidiv
(bad)
cmc
cmp
shr
mov
out
ds
out
repnz
jae
cmc
repnz
(bad)
pop
std
mov
mov
sbb
lods
lock
bound
adc
ins
movs
dec
push
mov
scas
cwde
jle
out
pop
rcr
xor
test
inc
sub
push
push
cld
jb
jb
ins
cli
lahf
push
std
mov
ins
(bad)
out
mov
(bad)
(bad)
mov
int
fst
mov
retf
int
lods
pop
push
mov
fisub
cli
popfw
or
mov
add
jnp
cmp
xchg
popf
push
mov
add
enter
xchg
out
outs
rcr
(bad)
shr
sub
out
cli
adc
xor
ins
(bad)
out
mov
(bad)
(bad)
mov
int
fst
mov
imul
add
icebp
cmp
loop
inc
std
adc
mov
out
pop
clc
imul
out
ret
(bad)
sahf
xor
mov
mov
(bad)
aad
lods
xor
mov
(bad)
retf
push
jecxz
out
push
imul
fimul
loopne
inc
std
ins
outs
test
stos
(bad)
fdivr
fstp
fucomip
jmp
stc
adc
push
std
fnstsw
add
jg
jo
add
mov
pop
cmp
loopne
lock
add
jns
mov
(bad)
popa
add
lock
rcr
scas
fild
adc
mov
repz
xchg
or
sbb
mov
fs
cmp
(bad)
add
lods
sub
test
pop
lods
out
mov
cdq
push
xchg
scas
adc
enter
dec
mov
daa
clc
shl
(bad)
mov
mov
add
icebp
inc
mov
add
test
inc
sbb
push
xlat
push
add
shl
fs
and
aas
cli
clc
inc
outs
fs
jp
jle
mov
test
es
jae
jmp
jns
ds
fs
fst
lds
js
mov
pop
xlat
xchg
xchg
idiv
or
cmps
sbb
mov
scas
mov
int
fst
mov
neg
fnstenv
inc
inc
sbb
shl
das
ret
mov
mov
aas
dec
mov
fidiv
jmp
xor
in
cwde
pop
pop
inc
(bad)
dec
add
pop
in
ds
mov
xor
xor
movs
pop
ins
jp
add
and
frstor
(bad)
mov
mov
add
ds
inc
ja
inc
enter
sub
mov
xlat
dec
aam
jmp
imul
neg
push
std
mov
ins
(bad)
out
mov
(bad)
(bad)
mov
int
fst
mov
retf
pop
imul
jge
(bad)
sahf
retf
out
packssdw
aad
pop
push
std
mov
ins
(bad)
out
mov
(bad)
(bad)
mov
int
fst
mov
retf
pop
imul
imul
shl
mov
adc
ret
add
jp
dec
into
pop
pop
inc
movs
sub
dec
in
out
outs
push
test
stos
sub
ds
std
fnstsw
add
jg
pop
ins
std
fwait
jg
scas
jg
dec
icebp
scas
xchg
mov
jge
dec
test
add
fnstcw
sti
pop
out
scas
mov
mov
div
cld
mov
xor
mov
ins
(bad)
out
mov
(bad)
mov
pop
imul
neg
jnp
out
scas
mov
fwait
outs
sbb
imul
and
pop
dec
(bad)
outs
adc
sbb
mov
adc
pop
jge
loope
gs
(bad)
and
cmp
push
xchg
cmps
fidivr
jg
ja
adc
fadd
push
pusha
or
repz
(bad)
in
retf
mov
mov
aam
call
test
pushf
inc
adc
lea
xlat
sbb
hlt
and
jo
push
inc
(bad)
push
jle
mov
js
in
(bad)
clc
std
jno
not
mov
mov
mov
mov
icebp
xchg
xchg
sbb
(bad)
cmp
in
jge
fbstp
jge
stos
mov
clc
sbb
or
or
push
and
(bad)
icebp
inc
adc
mov
sbb
pushf
jo
data16
retf
sbb
fdivr
in
pop
das
inc
xor
in
add
test
inc
sbb
aad
imul
dec
push
sub
imul
lea
shl
repz
mov
xchg
fidiv
mov
xor
aaa
or
add
pop
mov
or
and
xor
mov
pop
stc
and
arpl
push
outs
mov
test
jo
adc
repz
(bad)
sbb
imul
daa
les
sub
and
add
and
sub
cmps
inc
cmps
push
cld
nop
pop
mov
jmp
movs
sbb
push
mov
inc
adc
sub
retf
and
jmp
movs
fisubr
int
push
cmp
test
pop
dec
xor
adc
push
call
call
int
(bad)
pop
mov
out
xor
rcr
popf
sub
imul
adc
popf
in
mov
cmp
cmp
xchg
int
cmps
lods
ins
test
adc
sbb
gs
retf
icebp
xchg
call
movs
jb
or
fidivr
jno
jo
pushf
jns
mov
mov
fdivr
jecxz
jb
mov
push
imul
scas
push
ret
jne
sar
or
push
and
or
cs
push
(bad)
cs
fs
icebp
mov
or
mov
fxch
pop
pushf
ss
or
mov
push
int
lea
push
arpl
sub
mov
xchg
fsubr
mov
dec
pop
int3
mov
xchg
sbb
fwait
pusha
sbb
cld
dec
sub
push
lds
push
push
cmp
inc
scas
stos
sbb
cmp
dec
jno
or
sar
push
sbb
stos
fisub
add
enter
aaa
jg
idiv
mov
fmulp
outs
outs
movs
xchg
test
push
mov
hlt
mov
sbb
int
fisubr
dec
mov
repnz
jle
cmps
enter
xor
adc
arpl
inc
ret
bound
cmc
adc
cmp
leave
lahf
mov
push
fcomp
lods
mov
add
mov
cmp
dec
adc
and
xor
stos
imul
inc
jl
dec
pop
sahf
sahf
cmc
sbb
pop
pop
pushf
dec
adc
std
loope
cmp
loop
ret
jecxz
arpl
retf
ds
int3
aad
cmp
and
pop
xor
(bad)
mov
out
sti
mov
shl
fs
or
sbb
mov
arpl
stos
inc
xchg
mov
mov
sbb
xchg
jbe
jnp
lods
mov
sbb
sbb
out
fstp
jecxz
sub
repnz
(bad)
mov
mov
shl
(bad)
xchg
mov
push
mov
sbb
(bad)
jns
ds
and
jmp
imul
sbb
xchg
movs
sub
jle
jmp
fidivr
pop
mov
xchg
pop
xchg
adc
cmps
pop
mov
(bad)
retf
out
pop
loop
xor
pop
mov
ss
imul
or
inc
pop
sub
mov
(bad)
fldcw
sub
popf
lds
stos
sti
fistp
retf
mov
ja
loop
sbb
ds
into
aaa
sbb
jmp
call
xor
je
pop
stos
repnz
aam
inc
arpl
aad
int3
fdivr
dec
jmp
mov
lods
cmps
mov
and
clc
fdiv
bound
movs
pushf
inc
jge
dec
mov
cmp
loop
in
frstor
into
cmp
xor
inc
fldenv
stos
imul
inc
(bad)
in
jmp
xor
in
xor
xchg
cmp
stc
sub
mov
pop
push
sbb
xchg
aas
js
push
sahf
xchg
sbb
xchg
bound
cmps
mov
inc
enter
push
cli
xchg
cmp
and
mov
call
in
mov
ficomp
mov
jne
(bad)
mov
add
cli
xchg
mov
jbe
dec
adc
stos
xlat
xchg
xor
scas
dec
pop
lds
data16
retf
mov
push
or
jl
mov
(bad)
mov
mov
cmc
int3
repnz
repz
and
retf
dec
test
jmp
mov
outs
test
push
bswap
mov
out
pop
jb
add
dec
les
push
dec
ror
out
aad
sbb
cld
add
jmp
mov
add
mov
mov
and
adc
mov
mov
fild
pop
imul
jge
ja
jecxz
(bad)
jo
pop
jmp
loope
sahf
inc
std
push
inc
inc
sbb
inc
pop
push
stos
int
leave
sbb
jnp
das
xchg
out
add
mov
or
ja
loopne
add
mov
fiadd
pop
sub
mov
idiv
jg
xchg
icebp
xchg
std
(bad)
dec
test
jno
sub
enter
or
adc
in
sub
mov
xchg
popf
xchg
jg
ds
mov
mov
mov
xchg
repz
xchg
cmps
icebp
xchg
pop
mov
xchg
das
sbb
jns
stos
stos
sbb
or
cdq
cld
inc
std
mov
adc
add
cld
adc
stc
push
mov
mov
jns
adc
data16
std
fwait
cmc
das
sbb
cld
sub
mov
outs
ds
jmp
and
popa
jns
inc
and
test
shl
dec
jne
lahf
cld
adc
rol
pop
js
ret
sbb
add
sahf
sub
int
xchg
xchg
cld
movs
fcomp
mov
inc
dec
jne
dec
fldcw
imul
xchg
push
mov
mov
cmp
cmps
push
mov
icebp
inc
mov
sahf
fidiv
int
mov
mov
dec
jbe
jmp
ja
js
loop
fwait
icebp
or
out
adc
cmp
cdq
xor
fimul
add
sar
mov
pop
mov
xchg
popf
dec
(bad)
rol
inc
ins
sti
mov
out
push
test
add
adc
xchg
hlt
das
or
aaa
dec
xlat
jle
clc
outs
aas
sbb
inc
icebp
or
sti
sub
rcr
fiadd
cmp
push
outs
push
xchg
push
into
rcl
sar
sub
dec
xor
jmp
int3
cmps
sbb
xchg
jo
inc
iret
jle
clc
shl
out
(bad)
(bad)
and
test
hlt
sbb
push
movzx
and
sti
add
ss
jp
dec
lock
(bad)
jg
jl
lock
xchg
lods
or
scas
popf
jne
pop
outs
int3
xchg
fadd
push
xor
arpl
pusha
stc
add
idiv
xchg
sbb
cmc
pop
ins
ds
pop
and
repnz
ss
sub
movs
mov
bound
int3
pop
and
clc
pop
div
push
lock
icebp
push
lds
ret
dec
xchg
push
mov
cmp
retf
outs
sbb
mov
add
ss
stc
jb
js
xor
mov
fstp
add
xchg
loope
repnz
(bad)
lods
mov
imul
mov
pop
and
mov
pop
jl
xor
(bad)
adc
add
ja
inc
cmps
imul
inc
outs
mov
sub
sbb
sub
adc
repnz
push
ds
mov
xor
jl
mov
aaa
in
aad
aas
clc
and
mov
mov
icebp
push
mov
cmps
inc
icebp
stc
mov
pop
xor
sbb
pusha
pop
and
(bad)
or
dec
idiv
clc
(bad)
ins
and
sub
movs
fisttp
rcr
pop
(bad)
sbb
ror
(bad)
fwait
out
in
jl
mov
daa
push
shr
outs
adc
lds
icebp
mov
cmc
pop
adc
popa
jnp
cdq
movs
fisubr
mov
arpl
cmp
dec
add
in
leave
in
cld
dec
popa
test
arpl
into
fsub
add
(bad)
mov
lock
loope
cmp
rol
aaa
call
out
movs
dec
ins
lods
ja
mov
fwait
jno
and
bound
push
cmp
mov
inc
std
movs
mov
xchg
ret
ins
and
xlat
pop
shr
or
jnp
adc
jno
les
in
add
mov
in
loope
jg
and
out
inc
xchg
sub
mov
dec
fist
pop
jmp
stos
int3
frstor
pop
mov
test
inc
and
stos
push
inc
push
call
jle
cld
sbb
mov
cmps
ds
push
mov
imul
pop
mov
sbb
gs
xchg
je
imul
iret
sbb
loopne
and
retf
cli
xrstors
or
cmps
mov
(bad)
xchg
popa
addr16
mov
adc
sar
inc
loope
add
mov
mov
push
sar
jl
sar
cmp
push
xlat
jl
je
xchg
jb
mov
and
and
adc
not
and
mov
and
and
addr16
push
inc
enter
lahf
xchg
mov
mov
daa
cmp
js
sar
inc
mov
push
mov
adc
add
and
dec
popa
lock
ret
dec
cmp
out
mov
xchg
aas
adc
mov
(bad)
outs
xchg
pop
or
jae
push
and
push
fcmovu
les
mov
pop
ja
pop
cs
fcomp
pop
push
dec
xchg
dec
jl
mov
addr16
ss
mul
pop
mov
add
scas
xlat
div
adc
repz
lock
test
sub
cld
and
repnz
mov
mov
add
xor
xchg
jbe
test
leave
jo
pushf
add
jle
jg
dec
cld
and
lock
mov
(bad)
out
mov
cmp
push
cmp
sbb
jns
in
mov
push
jmp
jg
push
cmp
fs
ins
add
jno
js
push
adc
stos
dec
jo
or
dec
or
ins
jb
cmp
stos
mov
(bad)
fisttp
pop
xlat
call
in
mov
jbe
aad
mov
cmps
lea
jbe
dec
pusha
push
pushf
jae
frstor
dec
lods
dec
xchg
test
mov
test
cs
adc
popa
pusha
xor
loop
fdiv
outs
in
daa
loope
mov
loope
xchg
movs
js
pop
icebp
cmp
scas
or
jns
pop
ss
fild
mov
xchg
adc
push
fsub
bndldx
xlat
fwait
loope
xchg
test
add
shl
mov
imul
mov
push
inc
and
inc
enter
xor
xchg
cmp
mov
push
call
xor
jle
mov
jno
dec
mov
push
xor
mov
cmp
jae
inc
fdivrp
inc
dec
std
mov
inc
push
lock
cld
and
sbb
mov
inc
sub
jl
adc
jmp
xor
mov
add
push
pop
push
mov
sub
pop
pop
sub
lods
ins
push
aaa
pop
cmp
pop
(bad)
pop
and
cmp
sub
jge
inc
aam
jmp
add
test
lea
fdivrp
nop
pop
ret
out
cwde
aaa
hlt
iret
dec
mov
and
fdiv
loope
cli
jmp
inc
mov
popa
imul
jecxz
clc
push
loopne
sub
pop
shl
sbb
or
mov
test
xchg
call
adc
cld
inc
fwait
pop
mov
ret
cmps
cmc
(bad)
pop
inc
inc
mov
scas
cmp
(bad)
call
cmc
fnstsw
push
idiv
jne
push
rcl
nop
or
add
mov
sbb
sbb
(bad)
mov
mov
push
jmp
xchg
aam
dec
jg
jno
mov
in
inc
aaa
shr
pop
push
imul
and
and
in
jbe
repnz
(bad)
inc
loope
cs
sahf
lahf
cld
sbb
(bad)
xor
icebp
pop
xchg
out
jle
fwait
mov
retf
sar
mov
or
mov
fs
loope
mov
mov
push
xor
inc
jecxz
fsubr
add
sub
or
inc
hlt
inc
loopne
jg
call
sahf
lahf
cld
sbb
(bad)
xor
pop
or
movs
out
and
pop
sub
out
xor
fxch
clc
xchg
rcr
ret
jp
mov
pop
xchg
pop
jle
clc
jno
sub
xchg
xor
jb
mov
aas
retf
add
jl
inc
sar
cld
data16
clc
outs
mov
add
and
add
jae
dec
std
enter
sub
xchg
ss
sub
test
aad
adc
push
jae
add
pop
adc
pop
inc
aam
(bad)
jae
and
xchg
fwait
inc
or
inc
hlt
inc
loopne
jg
call
sahf
lahf
cld
sbb
(bad)
xor
lock
aaa
repnz
xor
xchg
xchg
sub
into
xchg
imul
fcos
add
mov
das
add
or
sqrtps
(bad)
scas
jg
push
inc
xchg
mov
jg
jb
clc
int
lock
aas
hlt
dec
dec
dec
inc
inc
sbb
movs
pop
pop
movs
mul
xchg
cmp
retf
sti
int3
push
lock
mov
mov
xchg
cmps
push
(bad)
dec
test
mov
pop
pop
sbb
jg
(bad)
jg
mov
lahf
cld
sbb
(bad)
xor
aaa
(bad)
adc
inc
adc
pop
adc
xor
sar
add
test
jmp
sahf
jle
or
pop
mov
jno
stc
lock
inc
mov
xor
ds
(bad)
xor
jmp
call
ret
jl
inc
sar
cld
data16
clc
outs
mov
add
and
add
repz
xor
add
cld
xchg
sti
fld
pop
js
cmp
xor
adc
add
xor
sbb
(bad)
mov
jl
cld
dec
jp
cld
aaa
(bad)
adc
inc
adc
add
mov
aas
clc
int
mov
dec
out
inc
jg
xor
or
in
in
xor
ffreep
ss
mov
sbb
jecxz
mov
mov
cmp
call
cmp
jns
push
ret
mov
sub
aas
sti
sub
pop
aas
hlt
dec
dec
dec
inc
inc
sbb
dec
enter
xor
loope
xchg
scas
push
jp
and
(bad)
pushf
mov
jmp
cld
and
or
lock
(bad)
jmp
(bad)
retf
es
lahf
cli
daa
cmps
inc
pop
and
add
jae
add
add
in
icebp
call
(bad)
in
jecxz
mov
inc
out
sub
jg
fild
ret
jno
sub
cmp
add
imul
xor
loope
ins
xchg
(bad)
ds
inc
mov
mov
pop
inc
sar
cld
data16
clc
outs
mov
add
and
add
test
das
jo
inc
aas
jnp
das
clc
push
push
sub
gs
cli
fmul
inc
mov
test
sbb
inc
jl
cmps
inc
ret
jl
inc
sar
cld
data16
clc
outs
mov
add
and
add
jne
jg
sub
jno
repnz
out
addr16
imul
(bad)
adc
and
test
icebp
cmp
loopne
addr16
or
sbb
in
inc
(bad)
imul
inc
mov
aas
clc
int
lock
aas
hlt
dec
dec
dec
inc
inc
sbb
out
fmul
sub
fld
mov
iret
adc
push
cli
sbb
inc
dec
push
iret
ret
das
pop
(bad)
stc
xchg
cmc
lahf
ret
(bad)
es
out
mov
inc
ror
add
xor
ret
jl
inc
sar
cld
data16
adc
out
inc
pop
pop
and
iret
xchg
dec
pop
lahf
stc
xchg
mov
cld
add
mov
cmp
mov
es
lahf
cli
daa
cmps
inc
pop
and
add
jae
add
add
in
icebp
call
lahf
fadd
inc
out
addr16
or
push
shr
lods
jge
lds
inc
adc
clc
pop
loop
ficomp
ret
fisub
cld
sub
mov
jg
jb
clc
int
lock
aas
hlt
dec
dec
dec
inc
inc
sbb
out
sub
dec
hlt
pop
jns
scas
ret
inc
or
mov
cld
sub
jmp
xchg
ret
ret
jp
jge
movs
inc
loop
ja
sbb
out
mov
inc
ror
add
xor
ret
jl
inc
sar
cld
data16
xchg
ret
and
adc
pop
movs
neg
adc
(bad)
gs
inc
cli
sbb
cli
push
xchg
xchg
mov
lock
jb
icebp
xor
jl
inc
sar
cld
data16
clc
outs
mov
add
and
add
xor
xor
adc
mov
pushf
inc
sar
call
push
pop
leave
iret
(bad)
cmp
fisttp
mov
lock
lods
scas
clc
outs
mov
add
and
add
jae
add
add
in
icebp
call
out
call
imul
add
mov
loope
push
das
pop
mov
js
push
loop
fcos
add
in
add
jmp
jg
sahf
lahf
cld
sbb
(bad)
xor
aaa
(bad)
adc
inc
adc
loope
aaa
outs
ins
cli
and
add
pusha
mov
aas
adc
pop
ret
mov
(bad)
adc
inc
cmps
pop
ret
pop
mov
aas
ret
clc
outs
mov
add
and
add
jae
add
add
in
icebp
call
sti
nop
mov
div
mov
clc
cmps
jne
out
sub
inc
loop
mov
xor
outs
dec
cld
push
fcmovbe
inc
mov
jg
call
cli
daa
cmps
inc
pop
and
add
jae
add
add
in
icebp
call
out
(bad)
in
xor
out
lock
dec
cmps
ret
es
mov
jg
xor
inc
(bad)
xlat
mov
inc
sar
cld
data16
clc
outs
mov
add
and
add
mov
pop
cli
in
nop
(bad)
fmulp
xor
(bad)
adc
out
cdq
jne
pop
mov
out
test
icebp
cld
daa
xor
aaa
les
jge
fld
inc
ret
jl
inc
sar
cld
data16
clc
outs
mov
add
and
add
adc
iret
aaa
repnz
push
loop
dec
fist
(bad)
push
cld
inc
xchg
ss
or
(bad)
outs
(bad)
es
dec
lock
scas
fdivr
xor
sub
jg
es
sti
sub
or
inc
hlt
inc
loopne
jg
call
sahf
lahf
cld
sbb
(bad)
xor
or
in
loop
aas
mov
idiv
or
sbb
dec
hlt
shl
inc
loop
jae
lock
les
pop
xchg
aas
cmp
(bad)
stc
push
dec
inc
(bad)
xlat
mov
add
jl
inc
sar
cld
data16
clc
outs
mov
add
and
add
pop
push
xchg
fadd
xor
(bad)
mov
pop
cld
pop
ja
xchg
cmp
scas
inc
fmul
push
shl
pop
sti
sub
leave
ins
lock
std
jl
dec
mov
loope
sahf
inc
aas
in
aas
clc
int
das
in
out
icebp
mov
cmps
(bad)
sahf
pop
inc
inc
mov
out
or
(bad)
cli
mov
lds
jmp
xor
rep
loope
aad
mov
mov
in
(bad)
xor
pop
inc
scas
stc
inc
hlt
arpl
jmp
add
scas
stc
inc
hlt
arpl
call
sub
sbb
dec
std
popf
es
and
inc
jg
push
scas
or
call
rcr
or
mov
push
sahf
xor
imul
bnd
daa
sbb
(bad)
fistp
fstp
inc
mov
enter
rcl
mov
adc
mov
in
cmp
stc
lahf
test
add
aas
fs
or
sar
das
mov
dec
sub
mov
repnz
jp
test
jns
hlt
scas
cmp
iret
test
in
inc
adc
xchg
imul
out
and
jp
out
xor
fcomp
(bad)
sub
and
paddb
ss
ds
outs
sbb
out
jno
mov
cmp
xchg
or
push
xchg
mov
test
inc
movs
jecxz
outs
retf
scas
enter
test
mov
sub
sbb
jl
clc
pop
mov
xor
jle
push
fcom
jmp
dec
add
xchg
jb
jle
inc
rol
jecxz
test
movs
fnstsw
les
push
push
sbb
in
mov
mov
inc
dec
in
mov
scas
jp
aad
pop
icebp
loope
cmp
dec
mov
cmp
xchg
cmc
pop
(bad)
out
fisttp
clc
daa
loope
xchg
cmp
outs
cmps
(bad)
sbb
mov
ins
jp
aas
ss
jbe
push
aas
ins
iret
test
loope
or
add
add
addr16
es
sub
imul
stc
int
push
imul
push
(bad)
scas
push
rcr
jle
imul
cli
hlt
sti
and
pop
pop
imul
mov
fmul
jmp
xchg
mov
lods
ja
cmps
out
sub
push
jbe
push
push
jb
add
ret
icebp
or
data16
sbb
mov
xor
jmp
sub
inc
cdq
or
jo
xor
sbb
add
stc
retf
in
pop
hlt
jge
fidiv
sub
xchg
sub
fidiv
push
std
mov
sbb
inc
loop
push
inc
push
(bad)
(bad)
add
jne
cmps
jmp
out
sub
inc
add
jns
outs
xchg
lock
loope
ret
retf
pop
or
out
mov
(bad)
push
mov
fsubr
or
xchg
or
in
pop
hlt
jge
fisubr
sbb
sar
inc
sub
aam
jge
stos
jle
lahf
or
jmp
aaa
push
mov
jae
jne
mov
adc
shl
outs
jb
lock
ins
pop
sbb
out
cmp
fisubr
ds
push
mov
sbb
mov
xor
ja
sub
repnz
mov
sti
push
mov
(bad)
inc
xchg
jb
imul
repnz
addr16
inc
jmp
ret
inc
pop
ror
xchg
jno
test
scas
outs
loopne
mov
aam
mov
sbb
fwait
or
in
jne
stos
fdivr
and
mov
push
mov
pop
sub
ins
adc
xlat
inc
mov
xchg
add
mov
and
adc
dec
jnp
lds
cmp
ret
mov
cmp
sub
mov
push
pop
pusha
(bad)
int3
in
sub
mov
push
cmp
pushf
stos
xchg
jo
sbb
dec
ds
inc
mov
dec
inc
mov
std
test
add
retf
dec
lock
test
lods
cs
es
movs
ffree
sub
out
add
loopne
inc
ret
add
(bad)
jae
cmp
sti
gs
clc
mov
ds
cld
jb
mov
leave
mov
out
adc
in
daa
or
and
scas
call
push
mov
lea
jmp
xchg
xlat
pop
mov
sbb
cs
and
nop
cdq
mov
pop
mov
add
mov
in
lds
lock
dec
mov
mov
clc
je
jbe
enter
pop
cmp
or
cld
scas
push
fs
pop
ins
cmp
xchg
test
xchg
sub
jb
mov
outs
je
push
out
dec
fisub
lock
mov
mov
cwde
xor
fisubr
mov
test
inc
sar
jne
inc
xor
fnstcw
neg
add
lea
pop
retf
je
addr16
cmc
sbb
push
adc
out
and
imul
jbe
or
cli
or
cld
push
ins
mov
mov
(bad)
cmp
dec
(bad)
popa
mov
cld
cmp
inc
test
ja
push
mov
aam
inc
jmp
or
sbb
add
and
lods
stos
sub
jmp
aas
push
arpl
stc
std
jmp
hlt
outs
xchg
mov
js
les
sub
jne
rcr
push
lahf
add
aad
or
fld
sbb
add
fdivr
cmp
test
pop
or
icebp
cmps
mov
ret
ds
cmps
pop
add
pop
fldenv
(bad)
fisubr
add
inc
ins
add
push
push
xor
cld
retf
xlat
je
or
jb
xchg
xor
dec
out
ret
mov
aam
jne
xchg
imul
push
inc
mov
and
mov
hlt
and
inc
mov
mov
add
out
sahf
jnp
xchg
mov
aam
arpl
sub
inc
fisttp
add
xchg
add
adc
fnstsw
xor
jb
xlat
enter
icebp
mov
loope
add
leave
movs
jl
dec
(bad)
ds
jge
cmp
pop
arpl
loope
in
jg
data16
cld
adc
loope
cli
jmp
aas
icebp
sti
(bad)
rcr
add
sub
pop
mov
lock
xlat
pop
outs
std
push
idiv
sub
test
popf
pop
not
sahf
jg
xchg
push
ss
jle
icebp
mov
and
(bad)
fwait
mov
pop
aad
sub
cmc
or
mov
sbb
cwde
ret
mov
or
jl
xchg
lock
or
mov
pop
cld
dec
lock
sub
xchg
pop
nop
arpl
adc
fmul
sahf
(bad)
pushf
out
xor
jp
mov
pop
cld
sub
dec
jne
imul
sub
fcmovu
ror
fidivr
lock
or
push
jo
aaa
jp
shr
in
aas
ret
ficomp
(bad)
jp
cmps
add
popf
es
in
dec
es
mov
jno
leave
and
loope
test
xor
lds
sub
or
pop
ret
cmps
dec
movs
sbb
fld
popf
sar
stc
mul
cs
loopne
add
(bad)
fist
xchg
cmp
xor
sub
in
fsubr
inc
jbe
icebp
adc
rep
cmps
pop
imul
adc
sar
imul
fwait
aam
inc
out
shl
(bad)
jo
int
pop
sbb
jp
xchg
mov
or
cwde
aam
push
into
cmp
ficomp
std
pushf
jle
jl
shl
fisttp
rcr
xchg
enter
loop
sub
sbb
and
and
jecxz
cmps
loope
or
pop
push
ds
lock
xlat
lahf
push
cmp
movs
inc
jbe
pop
mov
jno
xchg
xor
xchg
dec
(bad)
lea
mov
out
jno
pushf
xor
xchg
sub
mov
push
test
(bad)
fistp
in
gs
xchg
loope
mov
(bad)
jl
imul
loope
ret
push
sub
sbb
mov
pop
inc
pop
xchg
pop
bound
pop
jo
popa
sbb
call
mov
lods
cmps
les
xchg
add
dec
push
xchg
popa
mov
xor
retf
mov
nop
mov
or
in
faddp
adc
pop
sbb
or
test
jmp
iret
test
(bad)
leave
sbb
xor
mov
mov
call
(bad)
into
lahf
mov
xor
add
test
jecxz
sub
pop
ret
sub
sbb
cld
pop
mov
pusha
lods
mov
cmp
repz
xlat
mov
cmp
movs
jg
fdivr
(bad)
jecxz
shr
pop
xchg
xchg
imul
push
cmp
mov
mov
cmps
sbb
ds
addr16
and
cmp
cli
push
mov
popa
gs
(bad)
jl
mov
enter
xchg
adc
div
ja
(bad)
xor
scas
int
out
fist
imul
jbe
inc
mov
sqrtps
lods
arpl
out
push
je
sar
ficom
dec
sbb
and
inc
pop
xchg
sar
pop
outs
dec
add
mov
sub
fistp
das
mov
imul
mov
mov
icebp
pop
mov
mov
lock
iret
sbb
dec
dec
dec
or
push
mov
sub
pusha
mov
jecxz
in
adc
bound
push
ss
leave
cmp
imul
div
dec
aad
fist
fidivr
cmp
mov
repnz
add
add
sub
cmc
cmp
mov
mov
inc
pusha
inc
dec
sti
mov
and
jl
inc
sbb
lods
clc
ret
dec
mov
cmc
and
ficomp
inc
and
jo
push
shl
adc
or
imul
in
jae
js
pop
fisubr
add
jg
pusha
and
ins
or
xchg
xchg
leave
cs
dec
xchg
int
les
aaa
adc
cld
xor
mov
(bad)
loope
add
jl
lock
rol
(bad)
lds
and
xor
mov
pop
or
(bad)
test
sbb
outs
xchg
xor
jae
mov
jnp
test
pop
jl
mov
push
(bad)
out
inc
sbb
inc
sbb
loope
repnz
mov
test
fwait
jmp
mov
push
ja
cmp
out
rcr
cli
push
jecxz
aad
in
adc
pop
jl
aad
clc
outs
jne
add
sbb
add
movs
xor
out
dec
jb
cs
inc
and
fiadd
fwait
(bad)
aas
adc
dec
imul
mov
mov
cdq
mov
call
push
or
repz
cld
(bad)
sub
sub
fisttp
dec
inc
scas
addr16
stc
add
fnsetpm(287
jl
jns
fldl2t
ror
mov
nop
es
pop
test
xor
sbb
jmp
pop
in
(bad)
pop
dec
clc
popf
icebp
pop
out
xchg
ret
stos
call
fwait
push
mov
enter
pop
mov
jbe
in
cmp
push
lock
es
inc
mov
sbb
jp
or
cmp
lods
fdivr
inc
and
jmp
sahf
movs
dec
mov
mov
and
sahf
(bad)
rep
dec
xchg
cmp
pop
pop
push
adc
lods
fchs
int
ins
xchg
lahf
push
mov
mov
lds
stos
fldcw
retf
imul
fs
inc
xlat
push
mov
je
adc
hlt
scas
adc
push
sar
scas
cs
outs
xor
dec
imul
push
in
sbb
mov
jmp
mov
jecxz
jnp
push
cli
cmp
xor
sbb
sbb
fild
xor
(bad)
rcl
arpl
cmp
sti
pop
mov
sbb
cmc
mov
loope
scas
icebp
add
loope
sub
sub
fucomip
fisubr
jbe
inc
call
outs
xchg
or
nop
jo
cmc
sbb
add
int3
pop
push
popf
icebp
xchg
imul
fmul
aaa
and
sub
fcmovb
ja
dec
jp
(bad)
adc
jbe
clc
sub
cmp
mov
jmp
pop
mov
jecxz
and
aaa
mov
xchg
dec
fs
inc
scas
fisubr
cmps
ret
cmp
jnp
ror
inc
test
ret
sbb
xchg
mov
scas
retf
out
lea
js
push
mov
cmps
aaa
sbb
mov
xor
mov
icebp
pop
test
(bad)
jl
loop
and
dec
or
(bad)
stos
push
sbb
dec
xor
dec
stos
dec
sub
push
push
dec
sbb
add
sbb
mov
cli
cmp
(bad)
(bad)
cmp
fstp
inc
stc
hlt
(bad)
jae
out
mov
add
mov
xlat
jle
jmp
mov
cmp
or
ret
xchg
mov
pop
mov
mov
jb
ror
sbb
push
loope
mov
adc
aas
or
sub
retf
les
imul
outs
sub
dec
and
cmp
mov
ror
mov
retf
loop
daa
jge
stos
sbb
fs
or
jl
adc
icebp
jmp
mov
imul
xchg
adc
fst
dec
lock
cld
push
mov
in
lahf
stos
pop
pop
pop
dec
stos
dec
or
adc
pop
bound
shr
dec
idiv
fldpi
shl
das
std
scas
sti
iret
sar
sbb
adc
xor
into
and
frstor
test
popf
cld
cmp
sub
and
mov
cmc
inc
push
imul
pop
pop
inc
xchg
dec
sahf
imul
out
rcl
je
mov
mov
imul
(bad)
cdq
stos
ret
and
cmp
pop
mov
fisubr
in
test
fidiv
xor
mov
cmp
jl
loope
ss
fwait
popf
inc
xor
repnz
add
les
xchg
out
jle
imul
lea
sbb
xor
pop
sub
jb
xchg
data16
cli
ja
iret
sar
clc
addr16
adc
repnz
or
jbe
inc
push
aam
inc
mov
xchg
int3
fwait
pop
test
cmp
mov
in
lods
jno
lea
pop
jp
fcmovu
jmp
inc
sub
loopne
test
dec
loope
iret
test
xor
xor
loop
push
sub
jbe
push
mov
xchg
aaa
ja
sub
sbb
jp
mov
retf
mov
add
xchg
push
outs
jl
sub
jne
xchg
aaa
in
mov
add
je
cld
ins
icebp
pop
lds
fild
and
fmul
sub
xor
mov
jle
sahf
and
lock
clc
jle
jmp
mov
mov
das
adc
xchg
pop
not
xchg
ret
les
rdpmc
push
popa
pop
call
mov
and
pop
mov
sub
pop
jge
dec
sbb
xor
mov
jae
push
cmc
lahf
daa
mov
dec
nop
mov
test
clc
call
sbb
and
sub
inc
push
inc
lods
sahf
cmps
mov
mov
(bad)
rol
pusha
ss
mov
test
aas
adc
add
aaa
jns
jge
ret
xor
mov
pusha
lea
(bad)
stc
les
sbb
fcom
mov
sbb
out
in
mov
add
xchg
adc
adc
aam
and
mov
fcmovbe
pop
push
mov
sti
inc
outs
iret
cmps
fsub
xor
test
mov
stos
lods
jle
sar
arpl
mov
add
(bad)
into
iret
add
sub
(bad)
mov
icebp
lods
lock
shl
dec
loope
mov
iret
jge
jmp
jo
mov
mov
pop
sub
rol
test
aam
aam
push
pop
ds
jo
or
inc
iret
adc
retf
icebp
aaa
loop
test
xchg
idiv
cmp
(bad)
data16
mov
sub
cld
mov
pmaxub
and
inc
push
mov
jne
movs
mov
les
test
sub
add
and
ret
ret
pop
sbb
adc
jae
bound
stos
imul
sar
sar
mul
(bad)
(bad)
push
mov
jg
(bad)
pop
(bad)
mov
sub
jecxz
lea
mov
push
fwait
or
xchg
mov
inc
dec
add
jo
mov
mov
dec
icebp
xchg
pop
cmp
aas
arpl
int
(bad)
cmp
inc
and
adc
xchg
sahf
mov
jl
clc
data16
cs
mov
xchg
pop
fmul
jne
push
xchg
movs
jae
cmp
jg
iret
or
(bad)
adc
scas
adc
call
mov
inc
adc
push
sbb
ret
inc
jb
cwde
add
and
mov
dec
lods
in
dec
(bad)
std
inc
mov
loop
xchg
out
std
and
ins
jl
movs
pop
fnstsw
fist
out
fadd
jo
inc
nop
cmp
pushf
adc
fld
pop
cmp
outs
(bad)
pop
mov
out
enter
mov
popa
lock
ret
add
ins
movs
imul
push
out
sub
into
sbb
xchg
xchg
and
jle
push
sar
sahf
ss
sub
cmps
iret
gs
dec
(bad)
xor
enter
add
cmp
add
int
dec
cmp
cmps
imul
jbe
xchg
shl
(bad)
pop
and
mov
add
sbb
ret
cmp
pop
xor
(bad)
sbb
jp
mov
push
fwait
into
xchg
not
sub
ret
sub
cmp
leave
pop
mov
mov
icebp
cmps
les
and
vmread
clc
jge
clc
daa
sar
mov
(bad)
xor
fsub
mov
cwde
in
xchg
push
add
dec
push
mov
sbb
cmp
mov
inc
mov
cmp
addr16
js
les
(bad)
icebp
outs
(bad)
jb
jle
mov
aam
daa
mov
sub
int
repnz
xchg
jl
mov
dec
movs
js
loop
sar
pop
lods
imul
mov
je
fist
jae
add
out
xor
jg
inc
mov
dec
(bad)
sbb
nop
jmp
jl
in
fmul
sti
addr16
hlt
es
pop
clc
outs
ret
ficom
xchg
(bad)
push
sub
daa
ret
mov
mov
mov
push
cmp
int3
inc
and
add
mov
push
stos
push
imul
mov
in
mov
fwait
jmp
cmp
jmp
fild
lods
pop
pop
pop
imul
pop
inc
mov
cld
dec
jnp
xor
stos
jecxz
pop
cmp
dec
icebp
sbb
mov
pop
psubusw
pop
leave
xchg
aad
loope
sahf
sbb
or
(bad)
sbb
ja
aas
cmp
pop
push
push
out
out
daa
xchg
ins
mov
inc
or
mov
fs
test
xor
pushf
adc
fdivr
mov
retf
fldcw
push
(bad)
dec
pop
jmp
gs
(bad)
pop
mov
outs
xchg
xchg
sub
cmc
or
std
and
jns
test
stos
test
dec
movs
icebp
pushf
add
lods
cmps
pop
pop
dec
jno
sbb
call
jno
bound
loopne
dec
loop
stos
clc
jne
push
fist
aas
icebp
arpl
xchg
inc
xchg
shr
je
mov
xor
stos
in
lock
and
and
cmp
cmp
jp
fcmovnb
mov
push
jl
aad
and
aas
pusha
sti
push
lods
movs
cmp
jmp
ret
lds
(bad)
mov
fadd
(bad)
push
imul
xchg
cli
daa
std
and
(bad)
cld
out
aam
lods
jne
aas
push
mov
out
lods
scas
mov
push
or
and
rcl
fisubr
sbb
cdq
add
push
sub
cmp
(bad)
scas
or
jle
std
call
push
lahf
loopne
mov
hlt
ss
cmp
push
pop
inc
and
mov
push
repz
iret
rcr
push
rol
std
fwait
jle
js
ror
mov
test
xor
inc
(bad)
sub
xor
out
add
iret
jbe
jp
movs
pushf
cmp
sub
outs
int
ret
xchg
imul
(bad)
inc
mov
adc
cmp
icebp
mov
inc
lock
shr
jle
xchg
lds
lods
fisub
icebp
je
int
movs
int3
mov
fisubr
pop
fucom
jo
and
jl
and
mul
test
add
pop
jl
icebp
je
pop
xlat
out
movs
mov
imul
and
or
ja
mov
stos
or
js
aad
pop
clc
inc
ret
rol
dec
fcomp
lds
aas
or
ldmxcsr
bound
pop
mov
out
xchg
jg
mov
in
cld
(bad)
std
pushf
mov
(bad)
mov
mov
mov
inc
and
repnz
sub
rcr
(bad)
pop
push
nop
icebp
scas
cld
mov
std
jg
inc
mov
push
cmc
pop
pop
jne
dec
out
push
pop
int3
sub
fmul
leave
leave
dec
in
xor
sbb
dec
mov
fbstp
js
das
sbb
test
sar
pop
out
(bad)
pusha
sbb
jecxz
mov
ret
out
adc
iret
add
ror
add
jae
ficom
outs
or
ja
sub
mov
stc
sbb
iret
pop
jl
mov
sub
lods
cs
std
popa
push
fisubr
(bad)
mov
loope
mov
add
add
je
inc
fbstp
aad
jb
pop
jmp
pushf
outs
arpl
inc
loope
sar
add
pop
lock
std
hlt
aas
clc
mov
inc
rcr
cmps
std
hlt
aas
clc
mov
scas
inc
inc
sar
add
lock
inc
add
cmp
adc
add
stc
and
jp
leave
clc
sahf
inc
inc
push
inc
test
out
mov
inc
push
inc
test
out
mov
cmp
jg
push
lahf
cld
add
inc
test
inc
hlt
sbb
add
shr
icebp
pop
hlt
adc
add
lahf
mov
inc
lock
call
push
(bad)
cli
pop
cld
pop
pop
lock
call
push
(bad)
cli
pop
cld
pop
js
cld
sub
inc
mov
pop
dec
(bad)
clc
push
scas
inc
inc
sar
add
iret
adc
add
stc
and
jp
leave
clc
sahf
inc
inc
push
inc
test
out
mov
inc
push
inc
test
out
mov
cmp
jg
push
lahf
cld
add
inc
test
inc
hlt
sbb
add
shr
icebp
pop
hlt
adc
add
lahf
mov
inc
lock
call
push
(bad)
cli
pop
cld
pop
pop
lock
call
push
(bad)
cli
pop
cld
pop
js
cld
sub
inc
mov
pop
dec
(bad)
clc
push
scas
inc
inc
sar
add
iret
adc
add
stc
and
jp
leave
clc
sahf
inc
inc
push
inc
test
out
mov
inc
push
inc
test
out
mov
cmp
jg
push
lahf
cld
add
inc
test
inc
hlt
sbb
add
shr
icebp
pop
hlt
adc
add
lahf
mov
inc
lock
call
push
(bad)
cli
pop
cld
pop
je
aaa
in
xchg
loop
or
aas
push
add
mov
aam
mov
xor
pushf
jne
xchg
jg
inc
mov
add
add
je
ret
cli
push
lahf
cld
add
or
pop
dec
(bad)
or
ins
repz
in
push
stos
js
out
jecxz
clc
cmc
mov
adc
gs
cmp
cmp
retf
jae
cmp
cmps
mov
lea
aam
aas
push
mov
aam
pop
outs
pop
movs
(bad)
out
cli
push
mov
add
lea
push
lahf
cld
add
inc
test
inc
hlt
sbb
add
(bad)
das
mov
adc
adc
out
rcl
inc
mov
aam
std
mov
and
imul
cmps
pop
add
int3
adc
fsubr
xchg
jge
xor
(bad)
cmps
mov
stos
retf
cdq
in
lea
and
cdq
jns
and
int
lock
inc
add
cmp
loope
mov
add
add
jne
fst
inc
shr
jge
fmulp
mov
mov
jecxz
xchg
mov
cs
not
pop
push
mov
in
sub
pushf
jne
iret
dec
cmp
std
paddw
fild
add
test
inc
hlt
sbb
add
sar
add
xor
jg
pop
inc
mov
mov
or
mov
and
daa
in
add
cld
lock
push
stos
jae
mov
out
add
inc
bound
fist
jl
imul
sar
pop
jle
jmp
add
aad
add
jo
xor
mov
pop
mov
mov
test
inc
hlt
sbb
add
aam
jg
loope
loope
out
jns
pop
sub
icebp
fdiv
push
mov
jp
test
test
jne
mov
scas
outs
jl
(bad)
xlat
ret
add
scas
mov
cli
sbb
dec
shr
mov
fisubr
shl
in
loope
xor
push
loop
xor
stos
in
sahf
dec
mov
daa
cli
mov
rcr
or
in
jecxz
inc
adc
test
outs
dec
aad
adc
jbe
xchg
add
pop
xor
sbb
mov
mov
aam
out
sbb
test
mov
cmps
jne
jle
(bad)
pop
ret
into
cdq
pushf
sub
jg
sbb
cld
push
mov
add
dec
loopne
adc
pop
ret
fisub
aam
xor
jb
or
shr
sbb
jns
out
push
pop
ins
add
leave
sub
pop
aaa
cld
and
sbb
add
adc
aaa
xchg
cld
shl
add
sbb
xchg
outs
xchg
mov
jmp
pop
adc
mov
adc
fwait
dec
lock
sub
or
add
jg
inc
pop
push
daa
clc
int
jmp
mov
sti
inc
mov
fcomp
dec
mov
jns
cld
and
aas
fmul
fmul
cmp
mov
mov
mov
dec
and
in
xchg
into
inc
fdivp
jmp
xor
cmp
mov
sar
(bad)
sub
sbb
xchg
not
aaa
jge
adc
pop
hlt
(bad)
add
ins
xor
lahf
mov
ror
test
frstor
das
sbb
or
and
inc
int
jl
clc
sbb
sbb
jg
scas
sbb
cmp
in
(bad)
xlat
pop
cmc
sub
ror
add
jns
je
or
(bad)
out
dec
sar
unpcklps
std
test
pop
sahf
cmps
cmps
mov
mov
popf
adc
add
cmp
(bad)
sub
lock
mov
out
imul
lods
sub
jp
(bad)
jg
das
ret
repnz
loopne
xchg
inc
adc
cmp
aam
and
or
ret
sub
pop
in
aas
adc
push
arpl
push
js
in
cs
pop
movs
add
or
sbb
cmp
xchg
ja
sbb
inc
sahf
add
cmp
xchg
popa
lea
xor
test
add
popa
pop
push
xor
xor
lds
in
inc
adc
mov
lock
mov
xor
cmp
sub
(bad)
add
push
adc
add
test
sub
mov
xchg
jle
fild
jl
loopne
test
jle
jl
mov
xchg
sti
inc
loop
and
leave
push
jno
and
in
pop
daa
out
(bad)
jae
mov
push
push
dec
and
jbe
adc
outs
mov
cmps
mov
lods
sub
pop
(bad)
mov
xor
loope
mov
sub
gs
mov
and
sbb
mov
jns
clc
mov
mov
std
xor
xchg
dec
(bad)
loop
lahf
dec
shl
outs
xlat
push
enter
les
leave
out
mov
adc
or
and
xlat
mov
imul
retf
jne
mov
mov
or
fsub
adc
adc
shr
call
and
and
sub
(bad)
adc
xchg
dec
push
mov
enter
xchg
leave
movs
jg
sub
pop
mov
pop
fstp
dec
jp
scas
lds
or
jmp
rcr
les
fs
mov
add
(bad)
test
int
scas
xchg
mov
adc
pop
out
out
outs
mov
daa
mov
stc
jo
shl
or
ss
imul
xchg
shr
mov
pusha
(bad)
mov
sbb
fisubr
je
cmp
sbb
arpl
loop
mov
retf
mov
arpl
popf
out
and
addr16
out
outs
ja
pop
ds
pop
(bad)
cdq
jb
mov
cmp
mov
aam
jnp
inc
xor
push
loope
mov
pop
dec
adc
inc
jae
(bad)
(bad)
jmp
or
(bad)
mov
repnz
lds
popf
shl
mov
clc
jae
into
sar
jmp
sbb
aaa
mov
and
push
push
jmp
add
in
movs
setb
dec
test
pop
gs
push
shr
loopne
repz
pusha
push
adc
retf
in
pop
jg
clc
das
in
lahf
or
or
and
gs
aas
mov
and
inc
fdivp
xor
jo
in
or
jmp
sti
push
fsubr
lahf
mov
gs
pop
aad
sbb
neg
push
cmp
sbb
repz
cmp
push
std
push
mov
jp
repnz
sbb
mov
inc
clc
arpl
shl
mov
jp
mov
stos
cmps
leave
test
mov
cmps
adc
mov
mov
pop
inc
cmp
push
lahf
rcr
out
inc
js
dec
clc
xchg
icebp
sub
pop
adc
mov
loope
and
cli
ins
hlt
xchg
aaa
pop
mov
(bad)
sbb
dec
push
or
pushf
adc
mov
cmps
stos
pop
xchg
jnp
or
cmp
xlat
ds
pop
sub
movs
fiadd
jge
inc
inc
jb
movq
mov
xor
aam
and
aad
scas
shr
pop
test
sub
jnp
ret
jns
sbb
jne
mov
imul
fsub
adc
inc
or
mov
fistp
lods
clc
xor
dec
fild
jl
cmps
cld
inc
clc
mov
pop
punpckhwd
cdq
movs
imul
mov
jmp
cwde
xchg
xchg
lea
outs
test
mov
sar
jp
push
xor
sbb
or
sar
or
adc
ret
fcom
dec
loope
push
test
mov
into
cmp
addr16
dec
jg
cmp
test
mov
les
jo
out
dec
xchg
lods
rcr
inc
push
icebp
test
xchg
rcl
pop
jl
std
xchg
mov
aam
test
mov
push
int
retf
push
mov
test
es
ds
adc
xor
pop
test
dec
mov
xor
ins
or
fisttp
call
pop
jmp
ret
dec
and
pop
xchg
mov
cmp
scas
or
popf
ror
pop
mov
push
ffreep
mov
in
outs
push
push
js
push
icebp
dec
mov
cmps
fistp
dec
and
mov
aad
dec
push
xchg
icebp
mov
sti
pop
cld
and
jl
stos
call
mov
sti
dec
push
fdiv
dec
jnp
jno
and
jle
repnz
or
das
iret
inc
pop
inc
gs
pop
dec
mov
(bad)
(bad)
loope
mov
ins
xchg
sbb
pusha
loopne
sahf
xchg
sbb
mov
or
mov
int3
jp
xchg
leave
mul
sub
jmp
fist
clc
fisttp
dec
icebp
shl
je
xor
ret
fisttp
adc
(bad)
test
push
fs
xor
in
cld
inc
icebp
(bad)
mov
das
pop
clc
push
mov
in
and
or
xchg
adc
stos
mov
in
dec
popf
inc
sbb
xor
cmps
push
ins
bound
icebp
outs
or
mov
pop
lods
jae
or
jge
retf
mov
xor
ja
stos
jno
div
mov
aam
lods
rcl
dec
pop
sbb
cmp
jge
loope
sbb
loop
in
dec
lock
ret
js
ret
iret
xchg
jne
pop
fisttp
out
scas
pop
sub
fbstp
pop
adc
pop
mov
pop
adc
mov
xor
and
retf
dec
mov
ins
cmp
mov
rol
cmp
out
xchg
stos
jns
ins
shr
cld
movs
fistp
lahf
add
adc
push
push
shr
dec
mov
(bad)
pop
cmc
push
dec
add
cmp
push
jle
outs
lods
imul
sub
in
jne
mov
cld
add
icebp
pop
pop
adc
xchg
js
lods
mov
ins
mov
push
xchg
dec
fld
movs
mov
(bad)
push
sub
aas
scas
xchg
jge
iret
lea
retf
lock
pop
jmp
jns
loope
(bad)
loope
push
sbb
jl
jns
adc
repnz
mov
lods
lods
ins
int
mov
push
mul
test
xlat
in
sbb
sub
shr
jno
sbb
test
nop
cli
scas
sbb
adc
sub
(bad)
jmp
sub
pop
xchg
xor
mov
push
xchg
dec
mov
sbb
mov
das
leave
mov
frstor
adc
aad
pop
jg
xchg
iret
mov
cld
pop
stos
inc
bound
push
repz
lds
cmp
int3
in
aas
ds
out
xchg
sahf
adc
imul
jbe
mov
hlt
icebp
cmp
pop
lea
adc
(bad)
xor
fcmovbe
call
push
push
add
pop
mov
inc
push
sar
pop
mov
dec
xlat
ret
ficom
cmp
mov
in
adc
mov
ins
mov
int3
scas
fcomp
push
imul
sbb
sub
fucomp
out
mov
push
push
js
mov
mov
popf
sbb
mov
fld
les
dec
clc
lods
stos
call
(bad)
shl
or
outs
scas
movs
push
push
pusha
or
jmp
add
retf
std
fdivr
nop
mov
call
fstp
ficomp
inc
mov
mov
test
or
xlat
call
or
call
sbb
ss
nop
js
inc
mov
pop
nop
jmp
sub
mov
adc
addr16
es
int
lods
push
out
cli
jmp
shl
inc
cwde
loop
jmp
in
mov
pop
call
jmp
or
dec
mov
sub
jp
sqrtps
out
ins
iret
cmp
jmp
push
mov
add
fnstcw
stos
loop
and
pop
mov
imul
(bad)
inc
(bad)
dec
clc
jne
pop
fldcw
cmp
mov
xchg
push
movs
outs
out
scas
xchg
or
jo
icebp
nop
inc
pop
xor
je
push
push
xchg
ret
dec
mov
xchg
xchg
jnp
push
xor
and
sub
mov
sub
cld
mov
sbb
jp
sbb
sub
mov
jns
fucomip
inc
and
js
out
pop
xor
jg
aas
or
cmps
ins
push
pop
shl
mov
cmp
hlt
mov
retf
and
dec
mov
jb
or
pushf
add
ret
ja
mov
in
in
lock
dec
lock
(bad)
cdq
jl
jmp
push
enter
in
daa
out
mov
in
mov
cli
xor
jbe
pop
xor
je
adc
pop
iret
stos
push
movs
std
push
inc
ret
mov
test
and
push
ins
mov
stos
pop
push
push
mov
jnp
mov
xchg
fnstsw
ins
mov
jle
shl
ins
outs
lds
xlat
aam
pop
jmp
push
not
push
rol
fucom
call
loop
ret
xchg
cld
adc
pop
xchg
xchg
pop
movs
jge
out
imul
xchg
inc
sub
into
inc
popa
sbb
jnp
(bad)
arpl
pop
pop
dec
mov
(bad)
(bad)
loope
mov
ins
xchg
sbb
sbb
imul
fabs
push
pop
std
out
cmp
imul
push
jle
call
enter
out
lahf
sbb
mov
inc
gs
xchg
and
push
neg
and
pop
xor
jnp
(bad)
in
mov
xchg
push
xchg
xor
div
or
dec
cli
xchg
out
lea
inc
clc
jno
retf
lods
imul
rcr
(bad)
inc
xor
pop
cmp
push
adc
aam
inc
or
adc
dec
in
cmp
imul
and
mov
or
jg
(bad)
sbb
lock
mov
xlat
cdq
idiv
jb
(bad)
sti
push
inc
sbb
loopne
push
push
add
cmp
sub
mov
imul
cli
pop
(bad)
cmp
and
out
icebp
xchg
dec
mov
icebp
pop
mov
push
mov
mov
fcmovu
dec
rol
push
xor
adc
add
mov
pop
dec
stos
fnstsw
cmp
stos
fsubr
cli
mov
cmp
jne
cmp
lods
mov
adc
xchg
sti
(bad)
xchg
daa
cmp
movs
mov
pop
fcomp
or
push
pop
inc
mov
iret
pop
fs
fsubr
idiv
fild
add
mov
add
retf
adc
mov
cld
aam
pop
aad
xchg
sub
aas
addr16
stc
sub
scas
xchg
inc
shr
outs
pop
xchg
sti
cmp
ins
lock
std
jl
dec
add
jle
repnz
mov
pop
scas
js
inc
xchg
ja
dec
inc
loop
shl
gs
rcr
xor
pusha
lods
das
inc
add
stc
mov
xchg
xchg
jg
inc
fmul
inc
inc
movs
jle
xlat
int
xchg
jmp
inc
rol
inc
xor
out
aam
pop
(bad)
sbb
dec
inc
mov
shr
and
inc
add
cli
cmps
mov
(bad)
mov
(bad)
out
cmp
aas
in
retf
rcr
nop
inc
pop
inc
icebp
adc
ret
add
imul
or
push
aad
push
cmc
fmul
cld
jg
jnp
jg
(bad)
xchg
mov
cli
push
xor
inc
loop
inc
xchg
sar
add
js
aas
lock
inc
mov
mov
lock
add
add
imul
or
push
inc
or
movs
inc
shl
lods
jg
xor
pop
push
rol
jno
repz
std
loope
imul
inc
xchg
sar
add
js
aas
lock
inc
mov
inc
mov
shr
and
loop
out
sti
ret
fcom
(bad)
push
jl
inc
or
movs
inc
shl
lods
jg
xor
inc
cld
xor
inc
inc
(bad)
mov
add
inc
jge
inc
pop
pop
(bad)
inc
iret
(bad)
test
sub
add
shr
and
inc
add
cli
cmps
mov
mov
(bad)
out
packsswb
push
repnz
xor
inc
inc
(bad)
mov
add
inc
pop
lock
nop
inc
pop
inc
icebp
adc
ja
inc
aas
pop
ficomp
(bad)
lahf
repnz
lods
das
inc
add
aas
loope
mov
cli
push
xor
inc
loop
jmp
jle
mov
inc
retf
rcr
nop
inc
pop
inc
icebp
adc
ret
add
imul
or
push
aad
push
cmc
fmul
cld
jg
jnp
jg
(bad)
xchg
mov
cli
push
xor
inc
loop
inc
xchg
sar
add
js
aas
lock
inc
mov
mov
lock
add
add
imul
or
push
inc
or
movs
inc
shl
lods
jg
xor
pop
push
rol
jno
repz
std
loope
imul
inc
xchg
sar
add
js
aas
lock
inc
mov
inc
mov
shr
and
loop
out
sti
ret
fcom
(bad)
push
jl
inc
or
movs
inc
shl
lods
jg
xor
inc
cld
xor
inc
inc
(bad)
mov
add
inc
jge
inc
pop
pop
(bad)
inc
iret
(bad)
test
sub
add
shr
and
inc
add
cli
cmps
mov
mov
(bad)
out
packsswb
push
repnz
xor
inc
inc
(bad)
mov
add
inc
pop
lock
nop
inc
pop
inc
icebp
adc
ja
inc
aas
pop
ficomp
(bad)
lahf
repnz
lods
das
inc
add
aas
loope
mov
cli
push
xor
inc
loop
jmp
jle
mov
inc
retf
rcr
nop
inc
pop
inc
icebp
adc
ret
add
imul
or
push
aad
push
cmc
fmul
cld
jg
jnp
jg
(bad)
xchg
mov
cli
push
xor
inc
loop
inc
xchg
sar
add
js
aas
lock
inc
mov
mov
lock
add
add
imul
or
push
inc
or
movs
inc
shl
lods
jg
xor
pop
push
rol
jno
repz
std
loope
imul
inc
xchg
sar
add
js
aas
lock
inc
mov
inc
mov
shr
and
loop
out
sti
ret
fcom
(bad)
push
jl
inc
or
movs
inc
shl
lods
jg
xor
inc
cld
xor
inc
inc
(bad)
mov
add
inc
jge
inc
pop
pop
(bad)
inc
iret
(bad)
test
sub
add
shr
and
inc
add
cli
cmps
mov
mov
(bad)
out
packsswb
push
repnz
xor
inc
inc
(bad)
mov
add
inc
pop
lock
nop
inc
pop
inc
icebp
adc
ja
inc
aas
pop
ficomp
(bad)
lahf
repnz
lods
das
inc
add
aas
loope
mov
cli
push
xor
inc
loop
jmp
jle
mov
inc
retf
rcr
nop
inc
pop
inc
icebp
adc
ret
add
imul
or
push
aad
push
cmc
fmul
cld
jg
jnp
jg
(bad)
xchg
mov
cli
push
xor
inc
loop
inc
xchg
sar
add
js
aas
lock
inc
mov
mov
lock
add
add
imul
or
push
inc
or
movs
inc
shl
lods
jg
xor
pop
push
rol
jno
repz
std
loope
imul
inc
xchg
sar
add
js
aas
lock
inc
mov
inc
mov
shr
and
loop
out
sti
ret
fcom
(bad)
push
jl
inc
or
movs
inc
shl
lods
jg
xor
inc
cld
xor
inc
inc
(bad)
mov
add
inc
jge
inc
pop
pop
(bad)
inc
iret
(bad)
test
sub
add
shr
and
inc
add
cli
cmps
mov
mov
(bad)
out
packsswb
push
repnz
xor
inc
inc
(bad)
mov
add
inc
pop
lock
nop
inc
pop
inc
icebp
adc
ja
inc
aas
pop
ficomp
(bad)
lahf
repnz
lods
das
inc
add
aas
loope
mov
cli
push
xor
inc
loop
jmp
jle
mov
inc
retf
rcr
nop
inc
pop
inc
icebp
adc
ret
add
imul
or
push
aad
push
cmc
fmul
cld
jg
jnp
jg
(bad)
xchg
mov
cli
push
xor
inc
loop
inc
xchg
sar
add
js
aas
lock
inc
mov
mov
lock
add
add
imul
or
push
inc
or
movs
inc
shl
lods
jg
xor
pop
push
rol
jno
repz
std
loope
imul
inc
xchg
sar
add
js
aas
lock
inc
mov
inc
mov
shr
and
loop
out
sti
ret
fcom
(bad)
push
jl
inc
or
movs
inc
shl
lods
jg
xor
inc
cld
xor
inc
inc
(bad)
mov
add
inc
jge
inc
pop
pop
(bad)
inc
iret
(bad)
test
pusha
int
push
fwait
(bad)
adc
div
les
mov
inc
mov
inc
push
inc
out
call
mov
pop
(bad)
mov
push
xor
cmc
imul
and
xchg
pop
inc
jno
test
jb
imul
aaa
lock
dec
cmp
mov
repz
xchg
xchg
jg
inc
fmul
inc
inc
movs
jle
jl
clc
xchg
ret
sahf
and
pop
icebp
lods
ret
dec
mov
inc
adc
and
ins
mov
cmp
fsubr
retf
jno
xchg
push
mov
in
xchg
fidiv
push
int3
aas
pop
mov
clc
adc
scas
mov
sub
movs
pop
xor
data16
mov
xchg
mov
dec
or
mov
add
mov
icebp
xchg
lahf
(bad)
adc
mov
push
or
cmps
fnstcw
or
push
and
or
add
add
in
(bad)
cmps
lea
and
pop
mov
sbb
cmp
movs
das
jp
int
aaa
mov
cmp
push
mov
pop
test
mov
(bad)
pop
push
cld
pusha
std
mov
xchg
push
mov
jp
shl
inc
cwde
inc
fs
imul
mov
or
cmps
lds
fsubr
int
jp
adc
jg
neg
pop
pop
je
push
and
sti
stc
adc
and
sub
addr16
call
xchg
mov
mov
xlat
dec
sti
icebp
add
inc
adc
popa
test
cli
int
xchg
pop
fcmovnu
lds
in
cmp
cmp
mov
jmp
pusha
icebp
sub
inc
push
mov
loop
xchg
scas
push
out
xor
aad
out
pop
(bad)
not
sub
inc
sub
mov
ds
pop
sub
dec
inc
add
daa
in
pop
gs
cmp
mov
test
rcr
and
and
outs
stc
or
repz
sub
or
data16
(bad)
iret
test
mov
push
aad
mov
out
or
aad
mov
clc
sbb
rol
push
test
jecxz
xchg
iret
outs
adc
cmp
fiadd
movs
fldcw
repnz
dec
pop
daa
mov
pop
xchg
lds
call
daa
xlat
and
addr16
sub
(bad)
repz
ja
jg
dec
loopne
mov
xor
out
mov
xor
and
cmp
pop
mov
dec
sbb
jle
(bad)
sar
mov
mov
(bad)
lock
jle
mov
push
test
(bad)
push
adc
jo
push
icebp
sti
sub
ror
icebp
ffree
mov
cmp
xlat
inc
out
cmp
repnz
mov
xchg
mov
sti
jb
(bad)
in
in
mul
mov
in
lahf
icebp
or
inc
out
fistp
mov
jg
fcmovnbe
fild
cmp
cwde
rcr
adc
mov
ins
sahf
outs
lahf
test
sahf
or
ret
and
cmps
inc
out
pop
inc
call
cmp
fwait
cmps
xor
xor
add
hlt
int3
lds
adc
sub
iret
ficomp
lahf
bound
stos
js
push
or
sbb
ins
mov
or
cmp
test
into
mov
jmp
cmps
xchg
cmc
repnz
cmps
sbb
inc
sahf
movs
mov
ins
mov
and
sahf
sbb
sbb
jge
fiadd
push
sub
ins
sbb
add
and
jns
and
out
jnp
fisttp
mov
adc
inc
add
sub
mov
lods
jle
cld
inc
(bad)
not
les
fidiv
in
sub
mov
xchg
and
jae
sbb
sahf
xor
imul
push
call
scas
loope
sbb
jno
ss
cmp
jecxz
pop
mov
pop
cmp
std
sar
pop
inc
jle
jmp
sbb
scas
mov
xlat
cmp
dec
cmp
or
push
xchg
jbe
and
addr16
xchg
add
jnp
cmp
sbb
fs
fisubr
ins
dec
jne
cli
inc
mov
lock
fcmovb
aad
pop
retf
add
outs
cdq
sbb
xor
lods
test
cmps
sub
jne
lahf
inc
cdq
lock
and
cwde
retf
push
in
iret
in
in
jecxz
adc
mov
imul
rcr
mov
push
icebp
aas
in
cmp
add
imul
dec
and
mov
into
sbb
dec
pop
mov
movs
fcmove
jbe
cli
mov
xchg
mov
mov
retf
pop
pusha
or
jecxz
mov
push
xchg
jl
test
repz
in
sub
push
call
in
inc
sti
push
js
loop
mov
push
scas
mov
in
xor
xchg
pop
sub
loope
add
rol
in
jg
pop
fcmovu
pop
adc
xor
push
xor
sub
into
inc
xchg
sar
dec
cmp
cmps
dec
sbb
sub
(bad)
(bad)
imul
cmp
or
std
pop
mov
cmp
idiv
mov
(bad)
test
int
cmp
mov
sub
or
mov
test
jns
dec
inc
nop
stos
and
mov
push
sti
xor
xlat
mov
inc
lock
iret
cmp
ffreep
and
xchg
sbb
retf
xchg
enter
jb
into
pusha
out
aad
sub
ins
fcmovbe
lahf
inc
mov
fist
pop
sbb
push
mov
jnp
mov
mov
inc
out
mov
les
jg
fiadd
(bad)
cmps
mov
adc
add
push
mov
add
jnp
push
scas
(bad)
jle
aas
in
inc
icebp
pop
ret
xor
add
and
outs
mov
and
xchg
ja
mov
pusha
cmp
xlat
mov
sbb
outs
popa
sbb
lods
jge
cmp
mov
int
loop
popa
jmp
jno
dec
cmp
inc
jle
push
pop
add
in
arpl
mov
test
xor
scas
loop
xchg
inc
imul
enter
and
cs
sar
lock
(bad)
std
daa
ret
icebp
or
add
movs
fwait
jl
mov
inc
arpl
jmp
data16
popf
pop
pop
lods
sub
sub
mov
xor
in
push
lea
retf
xchg
xchg
bound
cli
pop
jns
pop
cs
sar
push
clc
in
stos
jmp
js
cmps
sahf
push
repnz
sub
pusha
imul
and
imul
dec
test
mov
adc
pop
sub
cdq
or
jmp
push
pop
mov
dec
(bad)
je
ins
scas
ins
sbb
xor
mov
push
mov
test
ds
daa
gs
imul
inc
push
(bad)
sbb
iret
getsec
mov
movs
cld
das
test
aad
fcomip
add
nop
ins
push
and
inc
sbb
cmc
in
inc
mov
(bad)
imul
aaa
pop
addr16
ds
(bad)
(bad)
lock
call
push
fidivr
cmp
imul
call
call
dec
adc
(bad)
cdq
inc
cld
dec
movs
xchg
fcomi
inc
shl
out
in
inc
icebp
repz
push
sub
fdivr
pop
mov
push
xlat
pop
ins
loop
imul
dec
xchg
mov
stos
pop
mov
dec
inc
xor
mov
(bad)
push
div
fwait
lds
mov
ins
jg
jle
push
jno
dec
aaa
mov
std
in
(bad)
pop
pop
(bad)
cmp
outs
clc
test
ds
int
mov
jo
or
pop
and
add
sbb
xlat
mov
(bad)
fisubr
inc
scas
push
xchg
cmp
mov
in
pop
loopne
push
pop
add
sbb
nop
jno
lea
mov
cld
cld
les
or
pop
mov
dec
pop
xchg
lods
jg
adc
dec
inc
js
in
cmps
icebp
retf
pop
or
mov
sub
pop
(bad)
stc
popa
add
repnz
push
sbb
cmp
ins
icebp
iret
mov
add
jl
loope
add
(bad)
js
jne
dec
pop
mov
xchg
or
jmp
xchg
sbb
ins
dec
movs
mov
sbb
mov
mov
push
outs
div
pop
inc
fbstp
push
(bad)
mov
adc
pop
xchg
int
cdq
cmp
cmp
ss
add
retf
cmp
dec
mov
loope
mov
fwait
push
pop
lods
fstp
lock
mov
cmp
scas
or
push
aam
in
fs
out
aam
test
xor
mov
jae
add
out
ret
mov
sbb
sbb
stos
adc
jmp
pusha
imul
int
rcr
jmp
mov
mov
test
pop
mov
test
mov
es
or
xor
inc
repz
inc
or
cli
mov
jmp
pop
enter
mov
add
add
call
in
mov
ret
push
xchg
popf
movs
loop
ficom
dec
jns
sar
cld
mov
addr16
or
xchg
jecxz
push
(bad)
adc
dec
test
repz
neg
loope
aad
add
in
mov
js
add
pushf
std
lahf
and
aad
push
stos
pop
ret
gs
pop
dec
jne
mov
dec
ss
jb
jmp
rol
stc
aad
rol
sti
sbb
ja
xchg
mov
sub
ret
adc
paddsw
(bad)
cmp
push
dec
in
imul
fld
cdq
rcr
mov
loope
and
jge
or
push
xchg
dec
push
retf
jnp
push
inc
jnp
pop
out
lods
jge
cmp
lods
adc
mov
inc
jecxz
mov
cmps
push
mov
in
shl
test
(bad)
jbe
adc
pop
or
lahf
or
mov
outs
out
sub
bound
dec
jbe
add
pop
out
sar
mov
out
mov
stc
cs
data16
mov
sbb
mov
xor
and
pop
std
cmp
mov
jge
or
cmp
and
ror
jbe
push
lods
sub
dec
dec
sbb
mov
stos
jg
dec
jle
dec
mov
inc
pop
dec
inc
mov
(bad)
test
stc
xlat
sti
cmp
add
outs
lock
jge
inc
lock
lahf
mov
dec
xlat
cld
mov
xchg
xchg
jg
inc
fmul
inc
inc
movs
jge
sti
inc
cld
pop
xchg
jecxz
ret
mov
shl
loop
movs
mov
inc
nop
fwait
ja
icebp
ins
cmp
outs
xchg
lock
ror
sub
add
xchg
dec
repz
sbb
mov
jl
jl
adc
sbb
and
in
popf
call
jmp
scas
in
jecxz
ret
adc
or
idiv
xor
loope
scas
xor
(bad)
loop
mov
test
fwait
outs
stos
popf
dec
gs
xchg
in
(bad)
mov
shr
mov
pop
jno
dec
push
retf
jg
push
pop
adc
(bad)
cld
pop
mov
les
sahf
mov
imul
xchg
popa
call
and
push
sub
inc
neg
imul
cmps
pop
sub
aad
movs
pop
mov
repnz
loope
pop
retf
mov
pop
in
(bad)
inc
dec
sti
cmp
call
retf
lea
loopne
sub
das
sub
and
jb
inc
fbstp
outs
in
addr16
add
lea
dec
loope
jge
sbb
inc
jbe
xor
add
es
sbb
(bad)
sti
cmp
xchg
fild
aad
cs
cwde
mov
pop
shl
jg
icebp
inc
clc
sub
push
push
mov
jecxz
test
sub
inc
rcl
jo
addr16
lods
push
mov
mov
mov
ret
ror
out
or
je
mov
mov
jno
push
cmp
clc
daa
sti
and
cmp
push
fwait
jns
out
das
mov
imul
add
and
js
xor
mov
add
adc
int
mov
dec
adc
add
sub
sub
fmul
movs
mov
sahf
inc
ds
xlat
ret
adc
add
mov
shl
mov
jo
lahf
sti
push
daa
outs
cmps
movs
dec
lock
cmp
cmps
imul
or
adc
push
sub
std
xchg
call
pop
aam
adc
lods
scas
inc
scas
aam
stos
(bad)
cwde
dec
jno
cmps
es
jecxz
xchg
mov
ja
mov
cld
jecxz
jl
add
dec
mov
aaa
ret
fisub
icebp
or
inc
xchg
test
adc
cmp
retf
push
push
enter
in
lods
shr
pop
and
jg
jnp
mov
dec
xchg
scas
cdq
scas
push
jbe
cmp
mov
dec
sbb
add
mov
(bad)
in
arpl
sub
pop
fiadd
in
inc
sub
lea
and
push
fiadd
ds
jp
lods
inc
ror
add
pop
cs
iret
cmps
hlt
inc
(bad)
inc
dec
cmp
mov
jb
out
mov
scas
jns
loop
hlt
arpl
es
inc
push
sub
pop
cli
jns
mov
jg
inc
mov
rcr
test
cmp
pop
xchg
dec
sub
xchg
cwde
in
fidiv
(bad)
movs
adc
pop
push
outs
in
mov
pop
mov
mov
push
fwait
inc
aam
push
push
cli
loope
jns
retf
push
out
cld
into
loopne
imul
xchg
jg
mov
sbb
xchg
adc
and
repz
(bad)
jp
ins
pop
(bad)
pop
mov
lock
loope
lea
dec
stos
clc
(bad)
in
scas
mov
pushf
in
sbb
inc
pop
shl
jae
cmps
mov
mov
xor
mov
movs
xchg
jg
das
add
cmp
mov
jnp
xor
dec
call
mov
lahf
pop
inc
jbe
das
icebp
out
loop
mov
xlat
cmc
pop
inc
(bad)
int3
imul
fwait
mov
jns
and
jle
push
inc
push
ds
scas
mov
cmp
xlat
and
xchg
loope
lahf
ret
cmp
test
movs
xchg
sub
fwait
sub
movs
xchg
inc
cmp
fsub
out
or
retf
ja
iret
out
sub
sub
cdq
lds
test
mov
mov
aas
and
es
cmp
push
mov
jmp
mov
sub
inc
setge
mov
sbb
call
dec
clc
(bad)
loop
fcomp
loopne
fwait
loope
mov
loop
pop
jmp
aaa
adc
pop
dec
rep
mov
xor
mov
into
or
pop
sti
cmp
jmp
repz
aam
xor
outs
pop
cmp
loope
daa
in
aas
loopne
jo
cmps
(bad)
dec
xor
mov
(bad)
cdq
add
ret
daa
out
loop
scas
stos
loope
jecxz
pop
dec
leave
lds
in
scas
mov
repz
cmps
icebp
xchg
(bad)
xlat
iret
mov
sbb
adc
sub
pop
(bad)
xchg
cs
das
dec
sub
pop
lds
in
or
xchg
(bad)
xor
lock
aad
jge
popa
test
adc
(bad)
(bad)
jmp
shl
ret
add
push
add
xchg
(bad)
ret
mov
aas
sbb
mov
mov
imul
ins
mov
iret
aad
push
or
ss
pushf
adc
js
ret
or
icebp
push
aam
mov
iret
or
ins
sbb
cmc
daa
mov
cmps
pop
cld
inc
std
movs
cmp
jecxz
and
sub
aam
and
add
loopne
pop
js
in
movs
icebp
imul
ret
imul
inc
pushf
aad
call
in
lods
add
or
popf
(bad)
ror
clc
sub
or
sub
inc
lds
mov
mov
in
add
not
jge
pop
sahf
jg
push
aas
push
fadd
jecxz
or
sbb
fsubr
fs
add
and
aam
aas
and
pop
sahf
jp
mov
in
mov
scas
adc
lds
imul
scas
icebp
jb
shr
sti
add
jo
ins
imul
mov
js
cmp
add
adc
popf
mov
aas
adc
cmc
lods
lea
and
xor
in
bound
jns
push
inc
sbb
clc
inc
icebp
scas
ret
clc
movs
imul
push
xor
pop
inc
neg
out
inc
imul
jne
adc
loopne
xchg
rcr
sbb
retf
neg
icebp
mov
js
loope
mov
scas
imul
jnp
out
mov
fs
xchg
stos
sub
test
cmp
sbb
mov
and
cmp
cmp
loop
pop
popf
jp
jae
(bad)
ja
idiv
hlt
cmp
add
jae
(bad)
loopne
in
sti
mov
dec
loope
fwait
push
mov
(bad)
fisubr
adc
or
fisttp
loope
or
not
fdivr
dec
and
call
xor
fcom
inc
pushf
sub
or
movs
sahf
and
lock
imul
and
(bad)
fisubr
and
inc
ins
pop
pop
pop
sti
jg
xchg
test
lock
push
pop
ss
(bad)
dec
adc
test
das
jmp
inc
or
sub
add
test
add
mov
xor
cmp
imul
pop
icebp
xchg
add
pop
push
push
jno
ret
out
pop
xchg
test
push
repz
push
fisttp
sub
loop
in
(bad)
imul
jne
lods
mov
outs
jo
movs
inc
mov
sub
rcr
out
mov
lock
ret
ins
inc
(bad)
mov
cmp
mov
std
inc
lds
ret
sbb
mov
fidiv
nop
cmp
mov
iret
arpl
jae
call
sti
aam
loop
mov
aad
cmps
popf
sbb
enter
sbb
xor
adc
push
ins
lods
fidivr
inc
push
retf
repnz
movntps
cmps
push
lahf
mov
pop
(bad)
out
retf
test
mov
push
(bad)
icebp
out
in
arpl
fild
push
push
mov
in
in
and
adc
outs
xchg
inc
int3
mov
or
adc
push
jnp
retf
sub
inc
test
loop
fiadd
adc
not
ss
add
and
and
pop
add
arpl
mov
outs
ret
mov
retf
daa
sahf
jge
aad
mov
jbe
retf
in
fcomp
and
imul
in
mov
mov
xor
xlat
les
les
xchg
and
xor
in
inc
enter
or
pop
test
imul
test
out
xchg
bound
jl
push
pusha
inc
mov
or
sbb
mov
xor
push
jge
jbe
(bad)
dec
stos
fnstsw
add
clc
mov
fisubr
lock
xchg
and
and
and
or
out
scas
push
adc
xacquire
les
mov
lock
movs
loop
in
out
adc
xchg
dec
and
sub
xchg
or
pop
pop
jg
xor
cmp
scas
xchg
les
sbb
lods
int
inc
sti
sub
clc
cdq
sti
ins
jmp
and
xchg
test
cmp
cwde
les
dec
in
dec
loop
cwde
cmp
outs
dec
mov
(bad)
mov
sbb
les
or
sbb
gs
(bad)
out
pop
cmp
in
jp
lds
(bad)
dec
call
test
push
xchg
jns
push
sahf
inc
cwde
pop
inc
mov
daa
sbb
jecxz
(bad)
outs
js
mov
mov
dec
jle
jmp
mov
loop
fwait
pusha
pop
sti
dec
(bad)
pop
mov
add
enter
push
pop
ss
mov
cmps
imul
dec
and
jns
nop
xor
inc
loopne
out
sub
jl
sti
sub
push
adc
jl
idiv
sahf
push
pop
xchg
mov
xor
add
and
add
jmp
pop
leave
pop
dec
fstp
mov
push
retf
jb
push
cmp
mov
arpl
stos
cmp
sbb
jnp
stos
fisttp
std
test
cmp
pop
pop
(bad)
pop
jmp
add
data16
mov
or
jb
shl
lock
lahf
or
push
ret
ds
les
ss
inc
sbb
shl
idiv
aad
mov
into
repnz
cmc
rcl
xchg
pop
push
dec
sub
sub
lea
dec
scas
jp
xor
loopne
sahf
mov
jmp
xchg
sub
test
mov
and
pop
in
mov
mov
scas
iret
jg
inc
adc
inc
(bad)
aam
xchg
dec
pextrw
psrlw
mov
loop
and
gs
push
jno
je
(bad)
cmp
mov
movs
(bad)
div
push
pop
cwde
retf
sbb
push
outs
stos
xchg
mov
pushf
call
mov
mov
push
dec
icebp
mov
mov
ja
mov
push
inc
and
stos
cdq
or
cmc
jmp
(bad)
cmp
adc
cmps
mov
sub
push
das
mov
mov
jecxz
imul
div
adc
xor
and
lds
fisub
icebp
or
leave
jbe
mov
inc
repnz
loopne
pop
std
sub
sbb
(bad)
ror
jmp
xchg
ins
and
(bad)
out
or
pushf
inc
fild
enter
lea
sub
repz
outs
adc
push
les
add
movs
dec
cmp
imul
jo
cmps
mov
fsubrp
int3
out
or
es
call
mov
popf
push
xlat
pop
mov
arpl
mov
cld
dec
icebp
sub
addr16
iret
adc
movs
sbb
jg
xchg
mov
clc
nop
add
pop
add
sub
icebp
outs
xchg
xor
mov
xchg
dec
(bad)
popf
sub
or
push
mov
(bad)
xchg
shl
cmp
daa
lahf
loope
ret
inc
outs
fwait
out
pop
leave
inc
xor
sub
in
xchg
(bad)
ss
adc
ret
or
xor
add
jmp
jns
lock
cmp
outs
add
adc
dec
cld
adc
cmps
clc
fwait
loop
stos
adc
pop
pop
std
mov
in
jl
aad
retf
and
add
(bad)
sbb
mov
lahf
test
adc
pop
dec
jns
nop
cs
das
loop
xor
clc
mov
clc
or
jle
movs
in
movs
stos
inc
movs
dec
imul
stos
sbb
cwde
test
pop
dec
inc
stos
cmc
int3
ins
shl
imul
ret
jl
xchg
test
xchg
not
loopne
call
aad
clc
das
test
pop
sti
enter
in
bound
lahf
js
xchg
add
jmp
dec
pop
loope
mov
or
mov
iret
sbb
push
sub
lea
mov
in
jecxz
xor
xchg
inc
xor
lock
in
jbe
xor
jbe
test
rcr
sbb
adc
ds
movs
jb
add
data16
(bad)
ficomp
lahf
test
xor
(bad)
aaa
xor
adc
out
sub
movs
push
fistp
inc
pop
fsub
add
daa
ja
fidivr
dec
pop
xor
push
push
push
les
mov
ds
jb
(bad)
cmp
mov
add
clc
aas
scas
daa
mov
pop
mov
int
(bad)
call
sub
xchg
inc
push
jns
push
stos
add
or
sub
fidivr
lds
outs
xchg
xchg
xor
repnz
lods
outs
adc
or
jmp
sar
mov
xlat
mov
into
lahf
stos
fldcw
retf
cmps
and
sbb
mov
mov
push
push
sar
and
mov
xchg
sbb
sub
xchg
pop
pop
mov
movs
mov
dec
sbb
outs
and
pop
scas
dec
retf
outs
dec
jl
inc
out
jl
pop
lahf
iret
mov
sbb
in
(bad)
xchg
test
mov
and
dec
mov
aas
push
inc
or
add
push
out
in
cmc
outs
sbb
es
test
and
dec
setg
stos
pop
jmp
clc
(bad)
add
(bad)
mov
sub
xor
sbb
repnz
jno
mov
cmp
arpl
jae
lahf
aas
push
hlt
lods
push
div
ins
cmc
mov
xor
xor
outs
add
out
add
(bad)
mov
into
push
pop
and
jo
mov
fdivr
cmovbe
pop
sub
in
neg
jne
jnp
or
(bad)
and
mov
outs
scas
cmps
mov
mov
mov
imul
pop
pop
jle
call
pop
fbstp
sahf
mov
in
xchg
add
repnz
jnp
jg
jmp
ficomp
lock
gs
ins
ins
xor
inc
into
es
retf
out
adc
push
fbstp
aas
pop
cld
adc
add
mov
xchg
and
jbe
imul
mov
pop
inc
push
jg
push
jnp
pushf
dec
xchg
jo
push
or
scas
mov
outs
push
ja
mov
shl
psubusw
test
test
cmp
jno
or
mov
sub
pop
and
out
fcom
retf
mov
mov
cmp
cmc
push
sbb
and
jae
mov
mov
mov
push
fcmovu
retf
cmp
pop
fcmovb
or
movs
enter
in
cmp
sahf
cmp
sub
out
loop
adc
(bad)
cmc
in
in
and
cmps
repz
mov
cmps
ss
scas
ds
movs
mov
sar
clc
adc
out
out
xchg
and
jge
cld
aam
hlt
aas
dec
cmp
cld
iret
clc
pop
lahf
mov
(bad)
ficomp
aad
lock
mov
dec
shl
clc
xlat
call
scas
cmp
jne
das
imul
jno
xor
xchg
mov
stc
sbb
mov
pop
pop
js
inc
pop
in
pop
jp
xchg
jns
fstp
jne
jg
(bad)
(bad)
jl
in
xor
loopne
clc
dec
loope
out
aaa
jp
dec
push
mov
popf
sar
pop
dec
rcr
cmps
mov
pop
xchg
push
pop
loop
sub
mov
into
mov
scas
fcmove
imul
mov
xchg
jg
cdq
bnd
xchg
std
(bad)
pop
fninit
jecxz
cld
sub
je
xor
in
aas
xor
or
push
int
pop
xor
push
sti
dec
clc
pop
ret
loop
sar
out
cmps
push
sbb
pop
sub
shl
sbb
imul
popa
xchg
sbb
sbb
mov
and
addr16
les
pop
mov
mov
imul
sbb
jge
aam
test
outs
inc
add
inc
outs
jae
les
mov
cmp
xchg
pop
mov
jg
inc
adc
pop
lss
sub
loop
(bad)
out
or
lahf
clc
icebp
pop
cld
mov
cld
or
jg
fisub
clc
popf
or
clc
test
mov
imul
and
mov
outs
out
push
cs
cmp
(bad)
and
mov
ins
movs
dec
push
pop
into
cmp
les
arpl
mov
sbb
and
lea
stc
push
(bad)
adc
clc
jbe
test
sub
call
stos
shr
neg
mov
(bad)
adc
int3
(bad)
push
jge
loop
aad
arpl
je
repnz
js
out
addr16
pop
(bad)
das
fstp
clc
cmc
loope
lock
lahf
loope
pop
or
push
inc
xchg
push
push
ja
push
retf
or
ror
or
scas
fcomp
out
fwait
loopne
jp
mov
fisttp
(bad)
sti
push
aam
popf
pop
push
xchg
and
xlat
adc
ss
xor
ja
lea
sar
lods
jl
xlat
mov
jno
mov
cdq
inc
jl
cmp
mov
jo
sbb
xchg
sbb
jge
ds
jno
mov
pop
cmp
popa
ds
push
call
test
sub
jle
inc
or
mov
jge
fist
mov
lods
pop
je
into
mov
pop
push
cld
sahf
xor
cmp
xchg
mov
dec
cmc
xchg
icebp
std
inc
jmp
les
cmps
cmp
mov
aaa
fsubr
xchg
dec
xor
sub
outs
jb
mov
lds
ss
mov
jecxz
jnp
aam
in
movs
nop
fcmovnu
inc
test
arpl
cmps
xor
push
call
adc
int
xchg
lahf
xchg
repnz
mov
in
dec
cwde
push
lahf
mov
sub
push
fs
call
pop
sti
repnz
cmp
add
js
mov
(bad)
(bad)
nop
add
sti
lods
jle
out
arpl
(bad)
sbb
ret
das
and
add
clc
lahf
dec
jno
(bad)
xlat
push
pop
lock
outs
not
(bad)
gs
test
push
mov
push
push
lock
call
pop
push
pop
lds
sub
rcl
aad
and
sar
imul
mov
loope
mov
loopne
(bad)
movs
mov
sbb
ret
adc
fild
mov
cld
adc
inc
(bad)
mov
pop
ret
fsub
fwait
push
mov
aad
mov
loope
arpl
in
pushf
(bad)
adc
pop
clc
dec
loope
test
lea
scas
sub
gs
adc
imul
push
mov
lahf
add
pop
or
mov
dec
fnsave
into
ret
xchg
test
xchg
mov
pop
jne
mov
push
and
int3
jbe
adc
aam
xchg
mov
inc
cs
mov
aam
mov
xlat
sahf
sub
add
sar
ret
dec
pushf
jmp
(bad)
cld
add
push
icebp
inc
cld
adc
lds
(bad)
or
cmp
push
aad
out
sti
rol
sbb
inc
mov
mov
aad
cmp
mov
jg
xchg
cld
sbb
push
sbb
inc
fidivr
addr16
lds
pop
cmp
les
dec
or
in
lods
mov
xchg
in
(bad)
mov
(bad)
(bad)
jg
gs
in
sbb
clc
dec
ret
cli
jmp
jmp
(bad)
fisubr
scas
ss
stos
and
rol
jl
ret
or
clc
xchg
loopne
test
cmp
jnp
outs
and
cdq
aaa
and
aas
xchg
pop
ud1
jg
lahf
movd
dec
dec
shr
pop
fs
sahf
push
fstp
sub
add
xchg
arpl
mov
sar
fldl2e
jle
fwait
icebp
outs
or
cld
inc
mov
mov
dec
dec
daa
sub
out
in
pop
mov
sub
stc
imul
sbb
js
ret
dec
cmps
js
repnz
xor
sbb
mov
cs
mov
shl
jecxz
xchg
cmp
aaa
les
jmp
inc
aaa
mov
inc
jae
xor
sub
pushf
sub
cmp
fcmovnb
cmp
loop
jne
dec
add
outs
cmp
ja
sbb
jg
xlat
ficomp
mov
xchg
mov
add
cmp
mov
sbb
pop
mov
push
test
jne
sbb
push
cmps
sbb
inc
mov
nop
lock
sub
cs
mov
push
in
cmps
shl
push
shl
fdivr
pop
idiv
xor
aaa
rcr
pop
fnstenv
ror
sahf
or
push
out
inc
sub
dec
lods
repz
push
jg
imul
ins
pop
fiadd
loopne
test
or
outs
clc
stos
xor
popa
out
lods
mov
push
bound
add
jl
dec
push
or
loop
inc
rol
shl
sahf
stos
push
retf
add
pinsrw
ins
mov
mov
fisttp
hlt
jl
stos
iret
sub
add
iret
ins
stc
lahf
lods
jno
adc
sub
push
(bad)
push
dec
mov
lock
lahf
sub
pop
jns
daa
sbb
jle
mov
out
out
pop
fld
not
shr
adc
icebp
daa
(bad)
call
mov
mov
add
enter
mov
(bad)
scas
pop
js
loopne
mov
mov
sbb
aam
sahf
or
repz
jge
jecxz
(bad)
inc
or
or
in
stos
scas
dec
xor
mov
mov
repz
jmp
mov
sub
jg
pop
sbb
icebp
xor
aad
dec
loope
imul
mov
ja
xchg
and
movs
mov
mov
test
cmps
cmp
inc
out
mov
jnp
dec
f2xm1
sub
js
xchg
sbb
cmp
test
repnz
sub
inc
movs
scas
lods
jne
(bad)
cmc
cmps
xchg
inc
clc
lods
sti
jb
cli
fidiv
sub
test
sbb
adc
into
(bad)
cmp
mov
jecxz
sbb
into
fbstp
scas
int
push
jns
mov
lods
and
pop
mov
push
and
mov
sbb
movs
add
mov
in
in
cld
push
clc
push
mov
(bad)
das
push
adc
jns
push
pop
inc
test
mov
sbb
dec
jbe
(bad)
cmp
sti
loope
dec
jecxz
cdq
jl
cmp
mov
mov
int
xor
sbb
xchg
inc
sahf
and
es
xor
(bad)
sbb
cmps
pushf
mov
stos
mov
cmp
sub
mov
call
jmp
out
aad
loope
cli
cmps
inc
je
out
in
jmp
add
hlt
(bad)
add
movs
fucomip
lahf
std
rcr
jg
scas
cld
xchg
out
or
sar
or
rol
jle
(bad)
xor
cld
je
jg
out
or
inc
lock
std
test
mov
fnstsw
jl
inc
xchg
(bad)
loopne
sti
or
jg
aam
sar
mov
sub
jg
inc
fst
cmpps
add
cmc
mov
mov
dec
pushf
shr
out
xor
cli
std
jecxz
in
inc
jl
jp
icebp
xor
sub
jmp
xchg
(bad)
xchg
lods
das
addr16
je
ror
fwait
call
adc
push
in
xor
push
push
pop
stc
sti
ss
stos
add
fcomp
jp
lock
sbb
ss
inc
adc
dec
jae
adc
push
fbld
mov
in
aas
ret
(bad)
sbb
cmp
dec
xor
js
imul
dec
xor
aad
lods
cs
jg
scas
inc
call
hlt
mov
inc
aam
jecxz
shr
int
(bad)
int3
ds
mov
sbb
add
call
out
dec
aas
dec
lahf
sub
sub
(bad)
mov
(bad)
sub
xchg
pop
fild
(bad)
push
pushf
jo
cmp
imul
call
repz
sahf
pop
sti
cmp
push
sbb
pop
jb
mov
movs
icebp
pop
mov
jg
aaa
adc
(bad)
adc
dec
fdiv
and
jno
add
loopne
jg
das
sub
sbb
pop
movs
repnz
std
xchg
in
sbb
cmp
mov
mov
lds
pop
xchg
ret
data16
cmp
xor
dec
dec
movs
in
ins
lods
lods
retf
outs
sub
repnz
(bad)
loopne
xchg
(bad)
mov
mov
cmps
mov
shl
cwde
lock
or
xchg
into
dec
jp
scas
sbb
mov
or
mov
or
adc
sti
mov
sbb
nop
jae
jge
inc
dec
shl
pushf
aas
xchg
out
cmps
stc
cld
int
lds
push
xor
cmp
mov
cld
mov
mov
pusha
movs
and
mov
mov
adc
cmp
mov
mov
out
sbb
lods
fwait
iret
sbb
aam
jo
jmp
cli
aaa
jecxz
in
stc
loope
mov
adc
movs
test
mov
mov
(bad)
jle
nop
push
push
cmc
shr
and
call
test
jnp
in
jno
addr16
jecxz
popa
mov
icebp
pminub
leave
and
push
mov
into
idiv
mov
add
sbb
cli
xor
pop
inc
sbb
cdq
ss
jg
(bad)
adc
loopne
test
inc
xchg
xlat
adc
rcr
or
fcomp
cmp
rol
add
mov
dec
cmp
test
out
mov
stc
mov
call
(bad)
or
ds
es
jae
jbe
sub
push
add
xchg
ss
sahf
mov
imul
mov
mov
push
outs
xor
jmp
cwde
mov
push
popa
arpl
enter
xchg
mov
lock
mov
aaa
ret
mov
pop
mov
dec
cs
push
in
add
xor
xchg
jmp
sub
call
add
ficom
mov
jl
(bad)
js
cmp
mov
aaa
mov
jno
mov
jle
jle
jg
mov
aaa
fdivr
sti
lds
test
add
fcomi
inc
or
stc
mov
popf
mov
shl
or
mov
xchg
mov
repz
jbe
inc
xchg
pop
push
call
arpl
scas
out
int3
stc
stos
test
pop
and
mov
loop
mov
cmp
jns
pop
xor
sub
jl
neg
call
jp
mov
pop
les
adc
js
jmp
inc
in
mov
addr16
std
fiadd
sbb
fs
xlat
push
push
and
int3
and
sti
imul
mov
xor
out
jo
adc
dec
cs
movs
jns
jg
dec
fmul
jp
cmp
daa
sti
dec
dec
pop
pop
in
adc
push
in
mov
pop
cwde
mov
enter
add
sub
jl
sub
loop
sbb
pop
inc
cmps
dec
mov
(bad)
test
dec
bound
es
sub
jo
adc
gs
nop
mov
(bad)
fsin
push
add
pop
js
inc
mov
in
fwait
dec
fnstcw
fwait
mov
add
ret
loope
(bad)
xchg
mov
jo
sub
pushf
adc
jle
push
into
cmp
jl
movs
mov
and
and
mov
or
mov
fs
pop
outs
push
dec
scas
pop
test
and
addr16
fdivr
sub
jle
pop
xchg
xlat
pop
pop
leave
jmp
dec
pop
sbb
jge
push
das
arpl
dec
fsubr
jmp
std
in
sbb
sbb
add
daa
lods
jns
lods
xchg
clc
jb
repz
or
sar
jge
push
xchg
dec
std
movs
pop
pop
cli
mov
pop
outs
sbb
addr16
sbb
sub
xchg
sub
mov
pop
int3
pop
add
and
jae
imul
push
pop
es
xlat
and
xchg
dec
jmp
xor
xor
clc
jmp
fs
fstp
fsubrp
mov
mov
mov
pop
adc
ret
push
daa
outs
or
pop
enter
loopne
add
pop
fstp
xchg
mov
xchg
cmc
movs
adc
(bad)
mov
mov
mov
jnp
icebp
cmp
dec
xor
shl
outs
mov
loopne
fisub
cmps
fwait
pop
sbb
ret
stos
and
das
out
sub
rcl
xchg
adc
inc
repz
pusha
sbb
leave
shr
(bad)
dec
mov
xchg
inc
sub
adc
shr
in
or
add
cmps
jb
sbb
idiv
and
jmp
cmps
int3
jecxz
adc
cmp
sahf
mov
sub
mov
int
cli
pop
mov
ret
stos
or
and
jns
adc
mov
fwait
xchg
cmp
push
test
pop
outs
in
retf
sti
cmp
into
jle
aad
aad
push
mov
xchg
test
stos
fwait
ja
jo
sbb
clc
mov
pop
loope
test
js
dec
dec
pop
or
inc
(bad)
sub
mov
jp
adc
add
lock
test
aas
lock
add
loop
js
cmp
sub
fld
sahf
push
pop
pop
push
adc
imul
lahf
cmp
scas
neg
aas
cmp
outs
fiadd
loope
lahf
sbb
sbb
clc
dec
sub
cmp
retf
jae
outs
mov
push
ins
(bad)
out
dec
lods
adc
cmp
xor
ret
adc
add
mov
cld
xor
ret
adc
add
mov
push
xor
cmp
in
lock
jb
mov
(bad)
dec
xor
fldcw
fimul
lea
std
mov
cdq
and
xchg
repnz
iret
mov
sbb
sub
inc
pop
aad
in
sbb
sub
test
aam
xchg
jae
je
jbe
loop
xor
in
sub
jne
loopne
stos
pop
lock
call
add
aas
clc
in
lock
call
add
aas
clc
in
in
sub
stos
sti
sub
pop
(bad)
out
jg
aaa
cmp
int3
inc
mov
cmp
mov
mov
mov
mov
sti
cmp
and
loope
lahf
adc
adc
ret
jae
(bad)
mov
dec
mov
push
lock
js
pop
and
into
inc
fidiv
add
jmp
loop
mov
and
add
ss
mov
add
mov
pop
std
or
inc
sbb
(bad)
sbb
loope
std
or
inc
sbb
sahf
push
push
mov
add
sub
sbb
addr16
xchg
cmp
push
fdivp
push
mov
pop
pop
iret
fwait
je
clc
es
mov
push
inc
(bad)
or
movs
lea
lahf
or
aad
pop
ret
ds
clc
aaa
loope
hlt
das
or
sub
xchg
(bad)
fucom
outs
loop
mov
pop
inc
or
lock
test
aas
lock
add
xor
aas
lock
add
aam
xor
xor
mov
sahf
jno
cli
lds
int3
jae
rol
adc
mov
mov
sti
inc
scas
lds
inc
sbb
mov
pop
(bad)
(bad)
xchg
pop
retf
dec
aaa
int
sbb
sub
popf
jmp
loope
xlat
(bad)
jg
and
add
mov
jg
and
add
mov
rol
dec
aas
xor
sti
iret
jg
dec
pop
xor
lock
ret
outs
lods
xchg
sub
mov
jnp
int3
out
mov
mov
(bad)
inc
or
xchg
push
mov
int3
fidivr
outs
xchg
scas
ss
mov
sbb
psubusw
xlat
sar
js
jecxz
js
dec
test
imul
cs
iret
cs
jb
inc
(bad)
sbb
loope
std
or
inc
sbb
(bad)
sbb
loope
std
or
inc
sbb
push
push
mov
retf
mov
lea
in
jb
pop
fisubr
in
sub
aad
xlat
(bad)
mov
jle
xchg
loop
ret
pop
jae
nop
push
inc
jge
and
ja
mov
mov
pop
sti
push
sbb
xor
into
xchg
fbstp
cmp
scas
pop
push
dec
cmp
jge
in
sti
push
push
sub
(bad)
cmp
cs
push
mov
mov
add
out
aas
clc
in
lock
call
add
aas
clc
in
mov
ror
in
inc
sbb
data16
cmp
mov
cmp
dec
ds
push
mov
mov
call
sbb
aas
in
inc
or
dec
jle
icebp
das
mov
out
sbb
adc
mov
inc
push
addr16
js
and
add
sub
adc
add
and
add
mov
jg
and
add
mov
push
mov
je
pushf
popf
fistp
addr16
push
mov
sub
xchg
or
push
dec
sub
lods
mov
mov
neg
mov
jl
cmp
ss
sbb
xor
pop
fidivr
movs
jg
inc
(bad)
ins
jb
push
mov
ds
jg
movs
icebp
mov
xchg
inc
(bad)
adc
lahf
out
scas
dec
sub
jbe
(bad)
cmp
jge
mov
or
lock
test
aas
lock
add
xor
aas
lock
add
mov
mov
frndint
(bad)
dec
or
nop
rol
or
cli
test
idiv
xchg
sahf
cld
fcmovnbe
ja
(bad)
aad
rcl
inc
into
inc
dec
test
cld
aam
cld
mov
ds
add
aad
mov
mov
in
nop
ret
leave
in
in
ss
frstor
sti
xlat
mov
ret
and
add
mov
jg
and
add
mov
leave
sbb
mov
xor
repz
adc
adc
cmp
aad
jge
hlt
(bad)
(bad)
clc
aad
jl
cmps
icebp
mov
adc
das
or
xor
loope
adc
lds
or
stos
pop
inc
push
push
jnp
mov
and
loop
inc
shl
add
mov
mov
add
out
aas
clc
in
lock
call
add
aas
clc
in
mov
(bad)
sub
lds
in
retf
mov
jb
(bad)
lods
and
xchg
pop
push
mov
repnz
fild
lock
push
jg
xor
cmps
push
aas
adc
push
leave
imul
mov
push
pusha
lds
jns
sbb
sbb
(bad)
jp
hlt
pminub
div
xchg
test
(bad)
jecxz
mov
cmp
mov
imul
mov
cmp
in
pop
sahf
xchg
fidivr
and
add
mov
jg
and
add
mov
call
push
push
data16
stc
je
in
popf
jne
out
push
sbb
cmp
stos
stos
add
pop
cmc
push
sub
jnp
imul
jl
inc
push
rcr
push
pop
dec
aas
sti
mov
mov
mov
daa
mov
cmp
xor
push
(bad)
sti
das
enter
push
out
repz
sbb
cmps
push
(bad)
clc
fs
inc
xor
in
mov
xchg
sbb
lock
call
mov
dec
sub
lea
(bad)
retf
cld
(bad)
icebp
pop
and
mov
jp
push
movs
push
or
pop
xor
imul
stc
sti
dec
jle
jae
rcr
mov
je
sub
mov
into
sti
dec
div
fwait
ds
test
jbe
pop
inc
je
scas
jbe
or
outs
xchg
push
js
jmp
stc
inc
push
fwait
arpl
dec
pop
jno
jl
sub
div
xlat
push
jp
xor
inc
ret
mov
inc
ret
test
hlt
retf
cmp
mov
(bad)
outs
xchg
scas
inc
adc
jns
sub
in
outs
in
mov
icebp
xor
inc
test
int
mov
addr16
(bad)
callw
int3
sahf
outs
call
mov
stc
jo
xor
jae
ret
shl
xchg
mov
jae
int3
call
pushf
shl
retf
xchg
neg
mov
aas
mov
cld
sub
mov
(bad)
out
jl
inc
or
xchg
cmp
sti
and
aad
dec
fisubr
add
(bad)
cs
jle
aas
mov
test
inc
pop
fxch
cmp
bound
les
cdq
sbb
lahf
push
movzx
pop
lods
push
sbb
sbb
inc
xchg
push
int3
mov
mov
pop
sub
scas
(bad)
xlat
test
loopne
xor
lods
pop
pop
js
(bad)
push
jmp
jge
add
sub
xchg
cwde
xchg
pop
push
push
jns
mov
adc
call
xor
ins
mov
mov
loope
mov
(bad)
sub
xor
sbb
adc
outs
not
les
mov
adc
scas
out
cdq
icebp
ss
add
mov
cmp
icebp
push
out
inc
shr
mov
dec
adc
sbb
aas
push
mov
pop
mov
in
mov
mov
jnp
in
cmp
jbe
cmp
cdq
pop
retf
lea
cmp
and
xor
leave
loopne
fisubr
call
dec
imul
cmp
xchg
sbb
mov
loopne
js
sub
mov
jb
fmul
and
repz
inc
push
inc
out
call
mov
pop
(bad)
mov
push
adc
std
push
inc
mov
jne
add
cli
outs
std
add
bound
mov
jmp
int
adc
add
or
jg
aam
sar
inc
and
adc
pop
cmps
je
pop
adc
xchg
test
inc
adc
inc
adc
push
inc
adc
push
inc
adc
repnz
in
daa
sti
(bad)
jmp
push
(bad)
sub
cmp
ins
jne
and
out
push
adc
add
mov
mov
or
repz
fstp
mov
inc
mov
adc
add
gs
mov
inc
loope
ds
cld
jmp
retf
mov
push
adc
in
adc
(bad)
aad
fld
shl
cmp
or
push
push
test
mov
shr
jge
cdq
popa
jae
cmp
ss
inc
hlt
push
sbb
repnz
sti
push
clc
xchg
test
sahf
mov
fistp
(bad)
dec
shl
aas
mov
imul
in
in
mov
lahf
clc
or
icebp
adc
aas
pop
cld
dec
loop
push
test
in
ins
(bad)
(bad)
loope
and
and
jae
xor
sti
sub
(bad)
and
sub
dec
(bad)
cld
addr16
popf
popa
popa
movs
iret
and
adc
xchg
push
and
ret
jbe
xor
je
stos
xchg
shl
cmps
(bad)
fwait
xchg
in
loope
popaw
cmp
test
in
test
mov
mov
mov
inc
(bad)
pop
push
cmc
dec
pop
jg
sbb
ss
fwait
retf
in
ja
ret
addr16
aas
push
fdivr
aas
mov
mov
mov
jne
mov
pop
xor
or
ins
cdq
jb
or
or
cmp
in
cmp
rsqrtps
push
mov
xchg
imul
mov
stc
mov
out
into
xchg
jns
dec
push
dec
movs
push
not
cmp
aas
push
cld
aas
jno
clc
(bad)
push
mov
je
ds
test
or
mov
ins
jle
js
pop
adc
push
mov
ficom
rol
push
adc
jb
test
xadd
jg
dec
icebp
cmps
lods
jecxz
cmp
stos
jmp
(bad)
in
pop
imul
popa
sbb
ret
cs
pusha
push
mov
xchg
cmp
les
pop
add
mov
cmovne
and
(bad)
and
sti
fiadd
pop
out
jmp
cdq
cmp
stc
popa
mov
stc
neg
sahf
xchg
popa
rcl
movs
popf
push
stos
pop
pop
mov
pop
movs
mov
aaa
repnz
iret
movs
jmp
pop
ficomp
or
ficom
shr
xchg
pop
sahf
lock
test
adc
loopne
(bad)
and
clc
cmps
lods
imul
clc
jnp
push
sbb
mov
mov
or
sub
loopne
in
push
sub
mov
sbb
mov
fucomi
xchg
jmp
cmps
inc
add
dec
jo
push
int
pop
retf
pop
vorps
cmp
(bad)
lea
test
sahf
pop
addr16
das
xchg
sub
int3
jae
or
sbb
xchg
sub
shl
cmps
call
add
adc
pop
nop
mov
repz
cdq
mov
inc
shr
into
mov
pop
push
add
adc
gs
push
movs
shl
push
mov
shld
cmp
and
cmp
inc
retf
adc
push
ficom
call
sbb
xchg
rol
xchg
cmp
dec
jg
jno
jae
mov
cmp
push
jb
xchg
mov
in
arpl
in
imul
test
pop
mov
movs
mov
ss
in
dec
lods
xchg
mov
push
nop
jle
inc
mov
(bad)
in
or
cdq
jne
mov
jbe
popa
and
test
gs
minps
out
aas
cmp
lahf
idiv
icebp
jne
inc
xchg
rol
out
ret
fst
lods
xor
jge
in
or
test
jno
je
adc
mov
push
xor
push
cmps
or
xchg
mov
push
or
mov
outs
daa
movs
dec
aad
jmp
outs
cmps
inc
mov
(bad)
mov
fwait
mov
sbb
aam
jg
pop
psubb
adc
pop
int
mov
push
ss
xchg
push
dec
jae
pop
imul
jmp
xlat
mov
call
jnp
retf
mov
xor
stos
(bad)
xlat
pop
pop
push
js
dec
and
int
(bad)
cli
lds
popf
cmp
out
push
mov
adc
or
sub
xchg
leave
and
add
and
sbb
mov
out
cmp
push
lock
das
sbb
inc
mov
dec
xchg
fidiv
out
push
ins
inc
movs
jnp
inc
pop
inc
shl
sub
inc
icebp
mov
movs
mov
popf
cmp
adc
sbb
cld
mov
in
das
pop
cmp
jecxz
test
xchg
mov
jl
scas
or
loope
dec
jnp
daa
mov
xor
jl
(bad)
retf
sti
xor
inc
gs
fimul
fbstp
pop
lock
cmps
mov
lds
pop
and
inc
nop
mov
int
add
movs
jge
pop
sub
dec
jle
mov
retf
jns
stos
jmp
cmp
rol
ror
test
push
in
cmp
mov
mov
test
ret
jecxz
imul
(bad)
cmp
xchg
xlat
jmp
daa
push
imul
xlat
mov
or
xchg
shl
ret
gs
call
sub
mov
inc
push
mov
pop
ret
iret
push
(bad)
push
mov
xchg
fldenv
iret
cmp
sbb
and
jecxz
in
cdq
loop
jg
inc
loope
ret
sub
ins
cmp
pushf
jge
loop
jecxz
sbb
and
push
xor
shl
ins
ins
fucomi
arpl
xor
mov
dec
pop
outs
dec
sub
outs
int3
in
call
out
push
js
aas
add
daa
pop
icebp
add
scas
call
aaa
xchg
test
js
in
xchg
sti
dec
jmp
add
inc
mov
ins
hlt
scas
and
push
jbe
cmp
repnz
daa
(bad)
cmp
out
mov
mov
lds
(bad)
push
jl
lock
mov
pop
sar
mov
ret
sbb
or
sbb
popf
(bad)
sbb
jmp
mov
(bad)
lahf
lock
neg
mov
pop
scas
cs
pop
(bad)
mov
and
pusha
cmp
das
adc
sbb
add
mov
mov
push
lea
mov
sbb
leave
cmps
addr16
in
stc
mov
imul
sti
dec
jle
mov
outs
xchg
mov
inc
mov
mov
cmp
add
jecxz
jge
idiv
pop
xchg
fcmovnu
js
dec
sub
cmp
add
mov
jae
inc
xor
jno
jae
fidiv
retf
xor
pop
push
sbb
in
lods
in
and
test
sub
jmp
aam
xor
mov
pop
in
(bad)
call
or
(bad)
loope
mov
mov
sti
inc
int
add
not
sub
mov
cld
mov
sub
sub
add
jae
(bad)
mov
xchg
sbb
mov
inc
fwait
push
xor
pop
xchg
pop
sub
stos
mov
pop
push
in
movs
xchg
ins
test
repz
clc
and
sbb
add
fmul
push
mov
jns
pop
outs
jecxz
jle
loop
mov
in
sub
xchg
dec
dec
inc
mov
ins
hlt
mov
mov
in
(bad)
int3
jnp
std
inc
pop
lock
lea
jb
adc
js
dec
xlat
mov
xor
sbb
sub
cwde
clc
aas
cs
xlat
xor
lods
mov
inc
mov
xor
mov
fwait
xor
sbb
pushf
push
xor
add
pop
movs
dec
aam
lds
xlat
(bad)
call
pop
mov
jmp
adc
push
mov
jmp
pop
dec
mov
hlt
ins
sti
mov
jl
mov
jle
imul
je
jl
xchg
cmp
(bad)
or
fcmovnbe
sysexit
test
dec
add
cmc
jg
and
mov
jmp
std
outs
dec
mov
das
ins
loopne
loope
sub
and
sahf
jns
arpl
push
xor
xchg
out
mov
std
or
cs
xor
and
lahf
mov
mov
sub
dec
pop
(bad)
gs
jg
xor
call
fild
jle
aaa
mov
pop
repnz
out
sbb
cmp
push
(bad)
loope
mov
push
jg
dec
jl
mov
ficomp
mov
and
scas
push
sub
icebp
out
mov
stos
retf
or
xor
cmc
jp
cmp
xchg
ror
clc
or
scas
push
push
mov
fidiv
dec
dec
jl
arpl
int
jecxz
les
cmp
add
dec
jbe
pop
enter
nop
arpl
cmp
sbb
push
jmp
mov
(bad)
push
cmp
pop
lds
pop
pop
and
push
fs
adc
jbe
cmc
repnz
in
mov
in
scas
test
jns
inc
imul
mov
das
fisubr
inc
lock
int3
push
adc
data16
clc
push
cmp
stos
inc
cmps
pop
fnstenv
fsub
cmp
out
adc
or
js
and
jno
mov
pushf
and
shl
rol
imul
in
retf
scas
xchg
outs
(bad)
repz
imul
das
(bad)
(bad)
iret
mov
mov
jae
shr
mov
mov
addr16
push
stos
xor
(bad)
cmc
lock
adc
sti
data16
inc
adc
ss
adc
dec
add
add
loop
(bad)
add
outs
lds
mov
xchg
sbb
movs
fadd
lods
sub
cmps
imul
je
adc
sub
sub
fs
mov
xchg
(bad)
and
clc
lahf
test
mov
cmp
pop
and
sbb
push
xchg
jge
repnz
push
lds
mov
icebp
cmps
jbe
imul
test
inc
cmp
in
mov
xor
inc
or
add
dec
scas
xlat
test
cmps
jl
lock
dec
or
cmp
outs
jne
cmp
pop
outs
mov
adc
pop
add
jmp
imul
push
std
jg
xor
cmp
dec
shl
test
dec
mov
jmp
scas
xchg
mov
push
clc
adc
mov
xchg
fcomp
lods
aam
imul
add
in
aas
movs
jo
daa
in
dec
icebp
mov
pop
mov
popa
loopne
add
(bad)
sbb
xlat
fwait
dec
xchg
pop
and
or
enter
jecxz
jno
into
in
arpl
daa
add
(bad)
sub
(bad)
idiv
mov
call
pop
and
sbb
lahf
and
push
push
pop
cli
push
cdq
(bad)
int3
std
movs
adc
push
dec
(bad)
pop
outs
ret
cmp
mov
pushf
mov
popf
sbb
in
dec
jbe
fwait
mov
mov
inc
sar
outs
or
nop
daa
fisttp
call
jecxz
sbb
pop
add
push
je
sub
mov
inc
into
sbb
call
(bad)
pop
mov
pop
(bad)
idiv
pushf
jle
jmp
fistp
xchg
jmp
xor
jb
sub
xor
add
xchg
xchg
ror
lods
xor
aam
lahf
mov
(bad)
jl
daa
xor
cmp
jnp
inc
mov
lahf
mov
mov
mov
mov
xchg
loope
clc
pop
add
ss
ficom
add
mov
push
mov
jmp
sub
cmps
in
sbb
xchg
push
mov
out
push
imul
rcr
ins
or
outs
push
hlt
enter
mov
add
jbe
mov
mov
sub
jo
push
xchg
test
xchg
es
dec
stc
jl
cs
in
or
aas
xchg
(bad)
cdq
mov
clc
mov
xlat
inc
mov
cmps
sub
mov
xchg
sbb
dec
pusha
imul
dec
cld
xor
pop
mov
js
rol
(bad)
xchg
mul
mov
lods
fst
dec
fld
in
pop
std
inc
jle
clc
or
pop
mov
loop
mov
sbb
mov
sub
mov
call
sbb
popa
sub
jmp
fistp
xchg
test
xor
sbb
not
fcomp
neg
les
out
xor
jecxz
sbb
and
cld
jno
or
add
dec
cld
imul
dec
shl
or
retf
jns
pop
pop
push
sar
out
mov
loope
std
fwait
cld
push
mov
dec
test
ss
xlat
jl
mov
enter
xlat
sahf
sbb
jg
aad
lods
xor
aam
cmp
lea
xor
dec
out
push
scas
push
sbb
mov
jmp
pop
sbb
out
mov
jmp
test
jmp
idiv
(bad)
cmp
add
ror
xchg
adc
sbb
sbb
retf
cs
jo
pop
xchg
(bad)
sbb
cdq
pop
lods
jge
icebp
inc
loop
lahf
cmp
jg
je
push
movs
imul
adc
jne
out
and
add
outs
les
adc
dec
lock
mov
cmps
movs
fild
lods
pop
pop
cmp
int
or
xchg
(bad)
cmp
push
jge
scas
jecxz
popf
xchg
mul
iret
in
dec
loopne
or
push
mov
sti
sbb
xor
or
and
mov
neg
sbb
pop
test
jae
sub
add
loope
cmps
xor
sub
cmp
push
je
movs
out
or
push
movs
xchg
test
(bad)
jge
test
fimul
xchg
adc
pop
push
pushw
inc
sub
test
xlat
mov
cmp
sahf
lahf
loop
pop
sbb
or
daa
jns
sub
scas
mov
dec
inc
pop
push
cmps
(bad)
sar
add
icebp
push
cmp
repnz
inc
xchg
mov
inc
jmp
jne
cmp
dec
xor
adc
pop
repnz
fstp
test
mov
dec
stos
cmps
movs
cmp
(bad)
jmp
push
fstp
outs
jg
neg
adc
sti
dec
fdivrp
rcr
push
scas
arpl
or
and
dec
nop
sbb
and
add
sbb
in
pop
sti
push
ds
retf
js
loope
mov
pop
mov
jae
ins
xor
sub
adc
add
loopne
mov
pop
xchg
outs
jne
fnstsw
ds
stos
data16
xor
jnp
push
ja
mov
xchg
out
fcmovbe
imul
scas
mov
xor
fcomp
sbb
or
(bad)
dec
mov
mov
enter
ja
mov
pop
sub
xor
dec
pop
mov
imul
(bad)
pop
mov
xor
mov
jg
pop
inc
sti
dec
shr
sbb
stc
push
add
cmp
pop
push
sub
mov
popa
cmp
int
(bad)
loopne
fild
mov
popa
loope
(bad)
cli
(bad)
test
jnp
ss
leave
sub
mov
(bad)
mov
fwait
out
or
imul
ins
push
(bad)
in
add
cmp
dec
jno
push
dec
inc
pop
sub
(bad)
aas
gs
aas
push
mov
in
mov
and
and
sbb
inc
sbb
and
push
jno
cmp
stos
stos
pop
ja
into
js
xor
xor
push
mov
xchg
pop
retf
cmp
pop
push
jns
les
neg
fucomip
and
shr
retf
popf
imul
cmp
xchg
or
neg
in
or
xlat
inc
shr
push
mov
iret
mov
add
add
ins
clc
arpl
pop
mov
(bad)
(bad)
popa
loope
daa
inc
repz
dec
daa
mov
lds
push
out
in
mov
loope
mov
(bad)
rcl
cmp
add
pushf
push
xchg
pop
pop
mov
push
out
mov
and
push
inc
cmp
ds
xor
cmp
jns
pop
dec
jo
push
jo
aam
and
push
cld
aad
ret
imul
call
cdq
(bad)
mov
rol
sub
nop
push
inc
adc
push
inc
adc
leave
mov
mov
pop
stc
sub
scas
cmps
inc
rcr
mov
push
inc
out
call
mov
pop
(bad)
mov
push
sub
clc
sbb
daa
jecxz
jmp
inc
aaa
lock
dec
cmp
mov
repz
xchg
xchg
jg
inc
fmul
inc
inc
movs
jle
rcr
ficomp
inc
adc
into
popf
loope
adc
add
push
add
pop
sbb
cmp
cs
mov
push
add
test
lds
mov
addr16
and
aas
int3
in
ret
dec
outs
pop
retf
sub
push
push
imul
mov
xor
sub
fstp
mov
lock
popf
sub
jle
jp
mov
sahf
in
inc
cmps
repz
stos
cli
test
repz
aas
mov
in
xor
ret
(bad)
mov
mov
xchg
cmp
sahf
fwait
(bad)
out
mov
test
mov
leave
cmp
mov
shl
lock
in
mov
ins
xchg
(bad)
stc
mov
popa
repz
imul
outs
fldl2e
inc
lock
inc
adc
fs
push
shl
dec
stos
push
xchg
xor
aas
clc
not
lock
shl
test
cmp
adc
cmp
mov
repnz
pop
jge
imul
icebp
jb
rcl
rcr
lahf
in
pop
(bad)
jns
or
test
mov
jecxz
aaa
(bad)
mov
fnstenv
les
hlt
lea
jp
test
jbe
mov
test
xor
sub
out
add
jmp
xlat
imul
adc
jp
stos
mov
iret
xchg
cli
into
pop
dec
xchg
mov
push
sub
dec
inc
shl
vmovaps
imul
dec
aam
add
cmc
sub
push
shl
pop
mov
pop
adc
bt
repnz
call
mov
clc
in
(bad)
imul
push
(bad)
mov
pop
ja
push
cmp
xchg
mov
in
jo
cmp
jae
ficomp
pop
mov
ret
das
or
loopne
cmp
loop
retf
mov
xchg
xor
outs
pop
add
mov
addr16
sub
pop
das
mov
push
clc
mov
loope
rcr
and
retf
mov
mov
icebp
out
popa
pop
sahf
es
inc
jno
ficom
das
inc
std
xor
js
adc
dec
out
scas
sbb
inc
scas
imul
and
outs
ret
ins
xlat
outs
mov
and
sub
mov
dec
out
cld
cmps
pop
retf
bound
or
adc
sti
cmp
pop
sar
add
scas
mov
rcr
pop
dec
outs
mov
mov
pop
(bad)
sbb
mov
xlat
fistp
or
shl
imul
cmps
pop
(bad)
xchg
and
pop
sahf
pop
cmps
sbb
and
inc
cmps
fucomp
ins
sub
aam
mov
sahf
sbb
adc
ret
push
adc
cmp
jmp
xchg
xor
popf
pop
pop
lahf
push
inc
lahf
imul
clc
adc
or
push
icebp
(bad)
xor
fdivr
dec
and
add
pop
inc
inc
cdq
scas
mov
push
daa
clc
sub
mov
push
(bad)
cmc
sbb
inc
ins
and
lods
lahf
xor
sahf
aad
pop
mov
ror
cld
sbb
es
xchg
lods
push
cmp
sbb
mov
sbb
sti
int
sbb
jne
sub
retf
adc
cli
pop
cmps
mov
loope
fimul
int
mov
scas
pop
push
or
xchg
jnp
dec
pop
(bad)
mov
xor
(bad)
sti
jl
mov
jne
or
or
je
adc
sub
bound
sti
scas
mov
jg
jle
js
not
rol
or
test
push
pop
in
adc
jno
cmp
jg
push
mov
pop
pmulhuw
dec
push
arpl
ss
xchg
sub
jae
in
sbb
mov
xor
jno
push
cld
jle
mov
iret
mov
imul
fistp
inc
int3
cmp
push
int
cmp
add
into
xor
jns
popf
ins
or
movs
sub
imul
cmp
popa
dec
lea
and
nop
pushf
mov
cmp
stos
xchg
mov
(bad)
pop
mov
cmp
cmps
jl
icebp
adc
xchg
dec
mov
or
pop
mov
inc
fist
jle
mov
(bad)
in
lds
or
xor
cmc
jl
fdivr
and
add
cmovb
in
pop
push
pop
dec
xlat
jg
jg
jg
js
rcl
lods
js
push
mov
out
mov
mov
jl
add
sahf
mov
daa
scas
ja
xor
aaa
les
cmp
loop
loop
xor
into
movs
jle
inc
daa
mov
mov
mov
inc
int3
ds
(bad)
jae
mov
stos
test
dec
hlt
mov
dec
iret
mov
cmp
test
les
sub
dec
ret
retf
xchg
loop
xchg
jp
retf
mov
pop
data16
lahf
sub
inc
cmp
std
xchg
lock
(bad)
dec
inc
les
out
jno
cmp
add
test
jne
mov
test
add
sbb
pushf
je
cdq
ss
stos
fcomp
cli
mov
cmps
mov
mov
pop
lea
mov
pusha
sahf
dec
movs
sti
adc
xchg
inc
daa
or
cmp
outs
lods
jge
lock
ret
inc
push
jl
loope
inc
xchg
imul
or
cmc
and
dec
xor
pop
push
push
mov
jg
(bad)
std
jg
(bad)
popa
jo
or
stos
aad
sub
pop
cs
aad
sub
mov
stc
sti
pop
les
push
pop
sbb
in
ror
dec
add
sub
aas
sbb
inc
jl
test
jle
lock
lods
jns
nop
shl
js
add
sbb
inc
hlt
rol
repz
(bad)
sti
imul
jne
das
sbb
dec
(bad)
mov
fiadd
mov
out
cmp
sbb
or
xchg
mov
push
add
jmp
adc
mov
in
jnp
js
fisttp
jo
add
add
xchg
call
das
dec
push
jae
mov
scas
(bad)
mov
lods
stos
xchg
mov
jae
push
sub
mov
sub
push
mov
mov
imul
dec
inc
cmp
dec
icebp
add
js
fistp
retf
pop
xor
les
fcomip
dec
jge
fistp
and
adc
mov
push
push
mov
sbb
sbb
addr16
inc
pop
fld
lahf
test
idiv
or
ret
sub
push
mov
jns
outs
ficomp
inc
cmp
jmp
mov
(bad)
jg
mov
ret
stos
ss
outs
aaa
inc
adc
jno
cmp
aaa
popa
mov
sbb
sbb
add
jns
xchg
mov
outs
jmp
imul
jno
pop
lds
fdiv
sbb
or
scas
test
adc
dec
dec
push
mov
mov
fisub
jmp
imul
jl
sbb
push
(bad)
test
lahf
fld
repnz
mov
sbb
sub
out
out
inc
cmp
and
sbb
and
leave
jg
ds
mov
(bad)
outs
outs
mov
push
jns
adc
xchg
pop
sbb
(bad)
and
and
push
(bad)
pop
add
arpl
rol
lods
mov
les
pop
push
xor
mov
mov
test
shl
dec
inc
jmp
aas
popf
xchg
fidiv
sahf
inc
inc
or
or
and
retf
scas
adc
in
out
mov
out
fucomp
jns
mov
sahf
add
lock
xchg
cmc
adc
and
or
sub
sbb
jb
pop
mov
mov
loop
mov
(bad)
sbb
and
sub
popf
sub
or
imul
shl
sbb
movs
cmps
or
jne
sbb
push
add
out
push
xor
mov
ret
pop
pop
jl
lock
pop
and
(bad)
or
jmp
and
jae
xor
cmp
push
lods
lea
aaa
jns
mov
fild
sbb
out
dec
adc
push
mov
lahf
mov
in
jne
hlt
aam
lahf
mov
fcomip
cmp
rol
test
repnz
xchg
push
pusha
jae
nop
(bad)
mov
loop
not
std
scas
(bad)
pop
in
jbe
sti
or
stc
inc
xchg
sub
cmp
mov
inc
adc
add
push
mov
cmp
mov
and
push
(bad)
mov
test
xchg
or
stos
clc
dec
push
cmps
jg
xchg
loop
adc
inc
(bad)
fadd
in
test
aad
xor
les
popa
aas
in
xchg
cmp
inc
std
jle
data16
aaa
mov
mov
aad
or
dec
mov
and
xchg
sbb
mov
inc
loopne
cmp
loope
cmp
xor
pop
lock
aad
fdivr
fistp
mov
pop
iret
xchg
sub
je
cmp
ja
rep
in
xchg
sti
xor
jge
push
lock
xchg
scas
jmp
cmps
sub
hlt
push
push
pushf
adc
fadd
mov
in
arpl
ds
jae
mov
inc
repz
push
inc
pushf
rep
cmp
call
mov
movs
rcl
mov
bound
jle
lahf
mov
iret
cs
and
or
sub
sbb
sahf
xor
and
scas
mov
fs
mov
dec
xchg
hlt
xchg
lea
and
sbb
adc
imul
dec
pop
fcmovbe
pop
lock
push
mov
out
fmul
jl
add
test
fcmovne
in
sti
(bad)
scas
jae
jge
sti
and
adc
fimul
mov
out
pop
ret
(bad)
and
test
cs
adc
sbb
shr
xor
mov
push
retf
jno
sbb
repnz
mov
ja
jne
dec
sub
mov
(bad)
jl
iret
outs
fisub
clc
pop
jg
das
test
aas
jns
test
add
repnz
scas
leave
aas
dec
std
or
iret
fidivr
xchg
test
ds
xchg
inc
sti
pop
xchg
cmps
mov
mov
push
ret
mov
call
mov
xchg
cld
xchg
out
jl
add
lock
mov
repnz
mov
sub
neg
mov
and
rcr
(bad)
and
jmp
xchg
enter
sbb
loope
xchg
icebp
pop
loop
mov
(bad)
mov
movaps
mov
out
ds
xchg
mov
in
xchg
icebp
and
xchg
adc
scas
loope
dec
pop
inc
sbb
mov
mov
cdq
add
dec
mov
jb
(bad)
js
push
std
lods
inc
mov
fisttp
jl
loopne
xchg
or
mov
sub
xor
jno
int3
jne
pop
jnp
mov
xor
stc
mov
adc
retf
jb
mov
cli
rcl
loop
test
cs
xor
sti
lods
leave
fcmove
int
mov
fldenv
pop
sar
add
mov
mov
ret
retf
mov
add
outs
int
ds
sti
inc
jle
imul
jl
mov
mov
mov
mov
sub
icebp
paddsb
jbe
mov
ss
mov
lods
lods
or
inc
and
repz
inc
xchg
out
xor
clc
arpl
imul
outs
sbb
cmc
add
repz
add
leave
retf
mov
sahf
pop
adc
sub
adc
leave
(bad)
jmp
fcom
lds
neg
lock
icebp
sbb
shl
push
mov
pop
pop
iret
cmp
pop
lods
ins
sbb
xor
ins
fcom
push
fucomip
mov
jl
std
stos
mov
pop
fcmove
sti
enter
push
push
inc
leave
xor
sub
push
movs
jle
fbstp
jl
aad
(bad)
adc
ds
xchg
fidiv
cli
xchg
and
mov
xchg
cwde
outs
push
outs
mov
cmps
in
jmp
mov
and
ret
inc
fs
aaa
jo
mov
mov
fnsetpm(287
pop
or
les
sbb
pop
xor
push
sahf
push
xor
or
das
sub
int3
cli
mov
loop
mov
dec
or
sub
aam
xchg
mov
cmps
sub
inc
arpl
pop
push
clc
jg
lock
test
popf
ss
xor
xor
inc
sbb
xor
adc
cmps
test
in
xchg
mov
vaddpd
(bad)
jnp
pop
pop
mov
adc
jecxz
fdivr
fdivr
jmp
jae
pop
(bad)
mov
mov
jle
mov
call
and
cdq
pop
or
cmp
mov
sti
aas
clc
cmps
loopne
scas
mov
popa
movs
lea
push
aam
or
pop
sub
xchg
cmp
adc
xor
arpl
rol
movs
aam
fld
mov
cmp
mov
out
call
loope
inc
push
pop
shr
imul
in
aad
aaa
inc
sub
ss
(bad)
cld
cmp
or
call
inc
xor
loopne
mov
aam
loop
add
xor
cmp
test
push
mov
ja
mov
dec
(bad)
test
dec
and
push
jle
pop
adc
sbb
fst
pop
xor
je
mov
sub
push
xchg
out
dec
retf
je
or
add
aaa
bound
lahf
sub
cmp
outs
sti
arpl
jp
(bad)
jae
js
ret
pop
mov
cld
lahf
es
cmp
mov
sbb
lds
and
mov
sub
sbb
gs
idiv
fxsave
ficom
icebp
xor
mov
adc
cmp
(bad)
gs
(bad)
xor
pop
mov
mov
iret
lock
ret
xchg
imul
mov
xor
fld
loope
mov
addr16
xchg
jmp
fst
imul
cmovle
int
fisttp
hlt
imul
mov
movs
imul
pusha
repz
inc
dec
call
ret
jmp
push
mov
push
loope
sahf
mov
test
push
jp
lds
sbb
xchg
or
xchg
test
cli
sahf
dec
push
push
xchg
stos
(bad)
div
push
pop
and
mov
lods
lods
outs
(bad)
out
sahf
jecxz
pusha
jb
xchg
push
test
(bad)
cmp
jmp
stc
fimul
mov
bnd
adc
xchg
pop
clc
lahf
jecxz
adc
out
sub
jg
dec
in
dec
xlat
adc
stc
inc
sti
sub
sub
jmp
pop
dec
call
(bad)
out
ss
and
lea
xor
cmp
in
test
sbb
inc
lds
cmp
stos
dec
adc
adc
push
scas
or
dec
leave
sub
inc
out
ja
int
adc
push
imul
js
ret
stos
cld
ficomp
jl
cmp
idiv
(bad)
push
(bad)
inc
xor
lahf
add
jnp
push
mov
push
mov
hlt
fldenv
sub
mov
pand
pinsrw
(bad)
or
add
jmp
push
xchg
fiadd
in
shr
mov
cdq
mov
cmp
fcmovnu
inc
xchg
icebp
pop
or
inc
pop
stos
add
ds
dec
pop
sub
xlat
inc
cmp
sub
loope
dec
push
push
imul
xchg
push
in
imul
jecxz
xchg
test
das
ret
ins
jp
pop
aam
das
cmp
test
mov
sbb
jns
adc
fisub
stos
lds
imul
sbb
sub
xor
loope
jns
call
jne
or
cld
(bad)
std
popf
and
lods
hlt
out
adc
std
fimul
mov
mov
mov
in
shr
ja
outs
in
ror
loopne
dec
pop
cmc
jl
aas
mov
mov
les
stc
(bad)
sub
push
jns
stos
fcmove
xor
mov
mov
pop
in
xchg
lock
rcr
jmp
arpl
and
jge
sahf
dec
add
leave
cmp
mov
std
cmps
das
mov
aam
sar
xchg
mov
leave
or
jb
sbb
add
xor
dec
pushf
xchg
enter
mov
cld
shl
out
lods
movs
or
xchg
shl
sub
fsub
cmc
sbb
push
loop
test
test
cmp
dec
jbe
ss
idiv
fimul
addr16
push
push
aaa
mov
add
fnstenv
sub
movs
repnz
mov
and
pop
mov
inc
inc
call
sub
aaa
mov
inc
icebp
push
mov
mov
rcl
call
or
cmps
dec
mov
mov
popa
enter
and
aas
sbb
inc
add
lock
pop
es
mov
lahf
adc
pop
in
push
not
jns
in
test
or
aas
in
call
scas
jl
clc
aaa
test
jnp
cli
sub
out
out
jne
out
push
sahf
sub
(bad)
int3
xor
xchg
sar
jge
jl
jne
cmp
ins
std
fwait
jle
push
lahf
ret
push
shr
add
rcr
lods
jae
and
retf
(bad)
int3
push
cmp
inc
dec
lods
push
push
cmps
sbb
test
dec
push
repnz
cmp
jno
add
mov
pushf
movs
xchg
and
scas
mov
jge
cdq
test
aas
adc
push
push
aad
repz
xchg
adc
and
cmp
clc
pop
dec
or
or
retw
(bad)
fisttp
mov
mov
mov
sbb
jo
adc
or
dec
push
aaa
xlat
(bad)
sub
out
aam
pushf
pop
lds
test
fcom
ins
retf
add
or
xor
test
xchg
outs
mov
and
int3
mov
loop
sub
adc
sub
pop
test
mov
bound
(bad)
int3
jb
add
arpl
mov
loopne
das
gs
pop
imul
cld
and
sbb
retf
cmps
push
dec
in
mov
lods
mov
call
hlt
add
jmp
jo
jb
mov
xchg
sbb
loopne
inc
ss
pop
jmp
push
sti
or
adc
lahf
rcr
das
sti
sub
sbb
mov
imul
sti
jecxz
movs
jns
mov
inc
fidiv
xor
movs
ja
mov
or
dec
mov
or
jl
fdivr
add
mov
leave
stos
pop
jmp
push
xor
xlat
push
xor
aaa
pop
mov
pop
mov
mov
fist
sbb
push
mov
mov
jmp
loop
(bad)
sti
cmp
xchg
inc
js
ins
inc
xchg
xor
jmp
jae
ss
into
aaa
imul
mov
sub
mov
sub
jmp
mov
cld
xchg
out
or
sar
or
stos
jg
dec
jle
dec
mov
inc
pop
dec
inc
mov
cld
or
cmps
call
shl
inc
and
and
adc
pop
cmps
jne
mov
inc
dec
cmp
mov
into
sub
ret
push
mov
lock
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
sub
ss
loop
pop
loope
mov
imul
xor
arpl
pop
in
push
loopne
scas
je
imul
shl
xlat
push
cli
scas
mov
(bad)
inc
mov
loop
mov
jno
fcmovu
dec
mov
adc
imul
dec
mov
clc
sbb
jmp
call
add
test
mov
ins
jmp
(bad)
and
xchg
xor
pop
lds
mov
dec
sub
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
jmp
mov
cld
xchg
out
or
sar
or
stos
jg
dec
jle
dec
mov
inc
pop
dec
inc
mov
cld
or
cmps
call
shl
inc
and
and
adc
pop
cmps
jne
mov
inc
dec
cmp
mov
into
sub
ret
push
mov
lock
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
jg
jg
dec
jle
dec
mov
inc
pop
dec
inc
mov
(bad)
test
stc
xlat
sti
cmp
add
outs
lock
jge
inc
lock
lahf
mov
dec
xlat
cld
mov
xchg
xchg
jg
inc
fmul
inc
inc
movs
jle
xlat
out
ror
sub
add
xchg
dec
cmp
test
mov
popf
cmp
mov
mov
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
inc
fnsave
inc
leave
outs
lock
jge
inc
cli
cmps
inc
je
out
in
jmp
add
hlt
(bad)
add
gs
les
mov
icebp
aas
sbb
mov
cld
or
add
das
std
sbb
lahf
add
in
clc
pop
inc
jbe
cli
xor
jecxz
cmps
call
or
mov
sub
or
mov
or
mov
or
mov
or
mov
or
mov
or
mov
or
mov
or
mov
or
mov
or
mov
or
mov
or
mov
or
mov
or
mov
or
mov
or
mov
or
mov
or
mov
cmps
inc
je
out
in
jmp
add
hlt
(bad)
add
movs
fucomip
lahf
std
rcr
jg
scas
cld
xchg
out
or
sar
or
add
adc
cli
xor
(bad)
cld
je
jg
out
or
inc
lock
std
test
mov
fnstsw
jl
inc
xchg
(bad)
loopne
sti
or
jg
aam
sar
mov
sub
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
jmp
mov
cld
xchg
out
or
sar
or
stos
jg
dec
jle
dec
mov
inc
pop
dec
inc
mov
cld
or
cmps
call
shl
inc
and
and
adc
pop
cmps
jne
mov
inc
dec
cmp
mov
into
sub
ret
push
mov
lock
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
jg
jg
dec
jle
dec
mov
inc
pop
dec
inc
mov
(bad)
test
stc
xlat
sti
cmp
add
outs
lock
jge
inc
lock
lahf
mov
dec
xlat
cld
mov
xchg
xchg
jg
inc
fmul
inc
inc
movs
jle
xlat
out
ror
sub
add
xchg
dec
cmp
test
mov
popf
cmp
mov
mov
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
inc
fnsave
inc
leave
outs
lock
jge
inc
cli
cmps
inc
je
out
in
jmp
add
hlt
(bad)
add
gs
les
mov
icebp
aas
sbb
mov
cld
or
add
das
std
sbb
lahf
add
in
clc
pop
inc
jbe
cli
xor
jecxz
cmps
call
or
mov
sub
or
mov
or
mov
or
mov
or
mov
or
mov
or
mov
or
mov
or
mov
or
mov
or
mov
or
mov
or
mov
or
mov
or
mov
or
mov
or
mov
or
mov
or
mov
cmps
inc
je
out
in
jmp
add
hlt
(bad)
add
movs
fucomip
lahf
std
rcr
jg
scas
cld
xchg
out
or
sar
or
add
adc
cli
xor
(bad)
cld
je
jg
out
or
inc
lock
std
test
mov
fnstsw
jl
inc
xchg
(bad)
loopne
sti
or
jg
aam
sar
mov
sub
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
jmp
mov
cld
xchg
out
or
sar
or
stos
jg
dec
jle
dec
mov
inc
pop
dec
inc
mov
cld
or
cmps
call
shl
inc
and
and
adc
pop
cmps
jne
mov
inc
dec
cmp
mov
into
sub
ret
push
mov
lock
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
jg
jg
dec
jle
dec
mov
inc
pop
dec
inc
mov
(bad)
test
stc
xlat
sti
cmp
add
outs
lock
jge
inc
lock
lahf
mov
dec
xlat
cld
mov
xchg
xchg
jg
inc
fmul
inc
inc
movs
jle
xlat
out
ror
sub
add
xchg
dec
cmp
test
mov
popf
cmp
mov
mov
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
inc
fnsave
inc
leave
outs
lock
jge
inc
cli
cmps
inc
je
out
in
jmp
add
hlt
(bad)
add
gs
les
mov
icebp
aas
sbb
mov
cld
or
add
das
std
sbb
lahf
add
in
clc
pop
inc
jbe
cli
xor
jecxz
cmps
call
or
mov
sub
or
mov
or
mov
or
mov
or
mov
or
mov
or
mov
or
mov
or
mov
or
mov
or
mov
or
mov
or
mov
or
mov
or
mov
or
mov
or
mov
or
mov
or
mov
cmps
inc
je
out
in
jmp
add
hlt
(bad)
add
movs
fucomip
lahf
std
rcr
jg
scas
cld
xchg
out
or
sar
or
add
adc
cli
xor
(bad)
cld
je
jg
out
or
inc
lock
std
test
mov
fnstsw
jl
inc
xchg
(bad)
loopne
sti
or
jg
aam
sar
mov
sub
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
jmp
mov
cld
xchg
out
or
sar
or
stos
jg
dec
jle
dec
mov
inc
pop
dec
inc
mov
cld
or
cmps
call
shl
inc
and
and
adc
pop
cmps
jne
mov
inc
dec
cmp
mov
into
sub
ret
push
mov
lock
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
jg
jg
dec
jle
dec
mov
inc
pop
dec
inc
mov
(bad)
test
stc
xlat
sti
cmp
add
outs
lock
jge
inc
lock
lahf
mov
dec
xlat
cld
mov
xchg
xchg
jg
inc
fmul
inc
inc
movs
jle
xlat
out
ror
sub
add
xchg
dec
cmp
test
mov
popf
cmp
mov
mov
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
inc
fnsave
inc
leave
outs
lock
jge
inc
cli
cmps
inc
je
out
in
jmp
add
hlt
(bad)
add
gs
les
mov
icebp
aas
sbb
mov
cld
or
add
das
std
sbb
lahf
add
in
clc
pop
inc
jbe
cli
xor
jecxz
cmps
call
or
mov
sub
or
mov
or
mov
or
mov
or
mov
or
mov
or
mov
or
mov
or
mov
or
mov
or
mov
or
mov
or
mov
or
mov
or
mov
or
mov
or
mov
or
mov
or
mov
cmps
inc
je
out
in
jmp
add
hlt
(bad)
add
movs
fucomip
lahf
std
rcr
jg
scas
cld
xchg
out
or
sar
or
add
adc
cli
xor
(bad)
cld
je
jg
out
or
inc
lock
std
test
mov
fnstsw
jl
jecxz
aaa
cmp
mov
scas
test
imul
mov
test
jg
aas
cmp
scas
test
aas
cmp
scas
test
aas
cmp
scas
test
aas
cmp
scas
test
aas
cmp
scas
test
aas
cmp
scas
test
aas
cmp
scas
test
aas
cmp
scas
test
aas
cmp
scas
test
aas
cmp
scas
test
aas
cmp
scas
test
aas
cmp
scas
test
aas
cmp
scas
test
aas
cmp
scas
test
aas
cmp
scas
test
aas
cmp
scas
test
aas
cmp
scas
test
aas
cmp
scas
test
aas
cmp
scas
test
aas
cmp
scas
test
aas
cmp
scas
test
aas
cmp
scas
test
aas
cmp
scas
test
aas
cmp
scas
test
aas
cmp
scas
test
aas
cmp
scas
test
aas
cmp
scas
test
aas
cmp
scas
test
aas
cmp
scas
test
aas
cmp
scas
test
aas
cmp
scas
test
aas
cmp
scas
test
aas
cmp
scas
test
aas
cmp
scas
test
aas
cmp
scas
test
aas
cmp
scas
test
aas
cmp
scas
test
je
out
in
jmp
add
hlt
(bad)
add
xchg
scas
mov
sahf
cmc
stc
(bad)
cmp
out
mov
inc
lock
lahf
mov
dec
xlat
cld
(bad)
sub
mov
sbb
stos
retf
cmp
mov
dec
inc
mov
pop
lock
cmp
js
jg
xor
mov
mov
sub
cmps
in
int3
out
clc
inc
xor
cli
pop
pop
inc
fbld
loope
sar
add
cld
sub
aaa
dec
clc
jg
mov
adc
xchg
not
add
xlat
push
dec
jno
pop
inc
push
mov
push
push
inc
sbb
(bad)
jne
inc
popf
pushf
mov
into
pop
xor
jg
sbb
mov
add
cld
sub
add
jne
std
cli
pop
lock
outs
xlat
jle
and
lgs
jmp
sbb
(bad)
test
adc
jno
dec
repz
mov
jnp
jno
xor
imul
fld
iret
outs
sbb
xchg
cmp
push
ret
mov
das
mov
test
sahf
pop
inc
or
xchg
inc
inc
jmp
sti
hlt
mov
call
sar
add
jl
clc
outs
jns
mov
sahf
neg
adc
xor
and
outs
out
bound
out
mov
xlat
(bad)
pop
call
dec
aam
movs
mov
xchg
push
ret
jae
xor
int3
int3
rol
jecxz
nop
fdiv
xlat
dec
retf
out
or
mov
std
add
add
pop
hlt
push
mov
add
fidivr
and
outs
hlt
jmp
dec
sbb
fsubrp
fs
test
repnz
leave
push
lea
xor
mov
mov
xor
in
ins
jbe
lods
aas
push
call
ins
out
aas
xor
inc
add
add
dec
fwait
or
dec
out
cmc
repnz
push
inc
adc
jg
sbb
mov
add
cld
sub
add
jne
std
cli
pop
lock
pop
mov
jno
mov
ficomp
pop
neg
ja
retf
jg
mov
es
out
and
xor
fisubr
xor
clc
jae
jbe
lods
(bad)
shr
lock
push
mov
in
push
cmp
lea
mov
out
cld
hlt
shl
sub
sahf
arpl
add
out
inc
inc
jmp
sti
hlt
mov
call
sar
add
sub
mov
cmc
cli
jmp
mov
rcl
ret
lahf
xchg
in
mov
mov
outs
sub
mov
arpl
dec
lds
maskmovq
and
rcr
shl
ret
jbe
ja
add
test
imul
mov
ret
jg
cmp
(bad)
std
das
clc
push
scas
pop
cld
and
dec
test
cli
cmp
sub
sub
ss
push
iret
out
add
ret
daa
outs
fnstsw
xor
je
vmread
fistp
loopne
mov
mov
and
sbb
add
ins
cmp
retf
hlt
(bad)
loope
in
xchg
push
mov
and
jg
sar
add
pop
hlt
push
mov
add
xor
daa
aad
das
mov
pop
pop
pop
pop
cmps
mov
adc
loopne
call
cmp
test
div
sbb
daa
mov
pop
aad
pop
hlt
sti
es
xchg
and
leave
adc
and
inc
rol
xchg
xor
xchg
mov
popa
pop
cmps
jg
repnz
clc
inc
xor
cli
pop
pop
inc
fbld
loope
sar
add
cld
sub
and
jno
cmps
movs
push
movs
pop
cmps
xchg
jae
ja
mov
xchg
and
dec
imul
add
pop
jl
mov
mov
push
pop
call
mov
das
and
test
daa
jl
sub
out
mov
pushf
aam
loope
icebp
pop
jp
mov
cmps
mov
add
cmp
(bad)
std
das
clc
push
inc
or
xchg
inc
inc
jmp
sti
hlt
mov
sar
in
dec
inc
mov
push
gs
and
lods
push
fabs
xchg
cmp
ret
sahf
or
or
sbb
cmps
lock
shl
or
pushf
jmp
mov
inc
test
sbb
cmc
stos
push
ret
mov
xchg
(bad)
add
dec
push
pop
jg
into
inc
loope
sar
add
cld
sub
add
jne
std
cli
pop
lock
cli
das
xchg
pop
clc
cli
out
ret
fimul
or
push
add
mov
mov
cld
fs
add
xor
add
scas
pop
cld
aaa
mov
outs
pusha
ins
daa
les
cmp
ror
sbb
push
mov
cmp
jbe
xchg
(bad)
adc
out
mov
add
jecxz
clc
sahf
inc
or
xchg
inc
inc
jmp
sti
hlt
mov
call
sar
add
mov
jge
popf
pop
pop
xchg
dec
aam
out
jnp
or
xor
loopne
or
sti
bound
(bad)
imul
test
fwait
sbb
mov
pop
sbb
lahf
cwde
jl
push
js
movs
xchg
fucomp
in
(bad)
push
inc
adc
aas
loope
sar
add
cld
sub
add
jne
std
cli
pop
lock
(bad)
fwait
inc
(bad)
das
mov
and
mov
jecxz
and
stos
test
mov
popf
inc
or
xchg
inc
inc
jmp
sti
hlt
mov
call
sar
add
sar
push
test
lock
hlt
push
mov
add
ret
jg
cmp
(bad)
std
das
clc
push
lea
sbb
mov
cmp
adc
sub
adc
ret
inc
xor
cli
pop
pop
inc
fbld
mov
push
fcomp
out
addr16
cmp
(bad)
std
das
clc
push
inc
or
xchg
inc
inc
jmp
sti
hlt
mov
in
imul
sahf
pop
int3
out
clc
inc
xor
cli
pop
pop
inc
fbld
loope
sar
add
cld
sub
cmp
jo
retf
mov
out
inc
inc
jmp
sti
hlt
mov
call
sar
add
cmps
cld
stos
out
push
jns
xor
call
jle
cld
sub
add
jne
std
cli
pop
lock
sbb
div
add
out
cld
and
jg
sar
add
pop
hlt
push
mov
add
inc
push
(bad)
lahf
repnz
mov
inc
test
inc
mov
pop
lock
inc
jg
mov
out
mov
mov
xor
sbb
imul
inc
adc
das
sbb
daa
or
fcomp
jge
pop
clc
inc
xor
cli
pop
pop
inc
fbld
loope
sar
add
cld
sub
das
jle
ins
mov
sar
je
imul
and
sub
or
mov
pop
inc
xor
mov
add
mov
sub
lahf
dec
hlt
test
scas
mov
(bad)
clc
inc
xor
cli
pop
pop
inc
fbld
loope
sar
add
cld
sub
arpl
and
inc
inc
iret
rcr
rcr
pop
cmps
and
dec
and
test
clc
inc
xor
cli
pop
pop
inc
fbld
loope
sar
add
cld
sub
(bad)
imul
fwait
push
test
xor
push
jae
push
lahf
je
and
outs
sub
jecxz
mov
and
mov
xchg
repnz
mov
inc
test
inc
mov
pop
lock
inc
jg
mov
push
lock
mov
cmps
pop
daa
call
mov
or
jmp
js
ret
push
(bad)
adc
fwait
dec
aam
repnz
xchg
adc
in
aam
out
pop
repz
xchg
test
pop
leave
imul
out
ins
out
loope
sar
add
cld
sub
add
jne
std
cli
pop
lock
inc
aam
push
pop
imul
cmps
fsubr
pop
jl
jae
movs
ret
and
loop
xor
scas
loope
sub
dec
loope
mov
xor
push
icebp
fstp
imul
outs
sbb
inc
mov
mov
xchg
fcom
(bad)
inc
test
inc
mov
pop
lock
inc
jg
mov
test
fisubr
int
popa
xor
xchg
jp
dec
out
ficom
fild
jmp
cmp
shl
cmp
fisubr
(bad)
out
add
nop
add
inc
sbb
jns
repz
clc
inc
xor
cli
pop
pop
inc
fbld
loope
sar
add
cld
sub
icebp
popf
repnz
or
es
popf
into
add
ins
pop
cmp
xor
add
test
fldcw
pop
scas
ds
ins
xor
jo
adc
retf
adc
arpl
in
and
sub
lahf
lock
fidivr
jg
sbb
mov
add
cld
sub
add
jne
std
cli
pop
lock
jns
scas
and
pop
movaps
(bad)
cdq
cmp
push
inc
icebp
dec
cmps
or
movs
adc
push
mov
push
mov
dec
mov
out
inc
inc
jmp
sti
hlt
mov
call
sar
add
sub
int
repz
icebp
pop
mov
mov
pop
xchg
xchg
retf
sub
or
or
push
outs
std
stos
xchg
lahf
dec
xchg
pop
dec
or
aaa
jne
mov
add
xor
or
sti
mov
jbe
inc
ret
jg
cmp
(bad)
std
das
clc
push
inc
or
xchg
inc
inc
jmp
sti
hlt
mov
loope
int
push
shr
test
retf
xor
sbb
push
inc
inc
mov
push
or
or
retf
int
mov
jnp
scas
mov
paddb
call
sar
add
pop
hlt
push
mov
add
mov
lods
lods
int
scas
cmc
inc
sbb
aam
loop
xchg
jmp
jno
mov
sbb
(bad)
jecxz
ins
out
jne
iret
cmp
xchg
repnz
mov
inc
ret
jg
cmp
(bad)
std
das
clc
push
inc
or
xchg
inc
inc
jmp
sti
hlt
mov
adc
mov
and
push
retf
outs
fcom
jle
in
shr
or
fs
add
xor
pop
dec
popf
pop
mov
fdivr
imul
lods
jg
sar
add
pop
hlt
push
mov
add
xor
dec
ins
in
cmovbe
mov
push
or
mov
stos
nop
jb
rcr
pop
jle
xchg
repnz
mov
inc
ret
jg
cmp
(bad)
std
das
clc
push
inc
or
xchg
inc
inc
jmp
sti
hlt
mov
adc
fucomip
xchg
xlat
je
cld
dec
mov
fmul
addr16
retf
fstp
sbb
pop
adc
push
mov
cmc
mov
push
sbb
lahf
ret
push
jae
mov
(bad)
adc
sub
adc
ret
inc
xor
cli
pop
pop
inc
fbld
xchg
out
sbb
mov
adc
inc
addr16
dec
and
leave
and
mov
sahf
aad
retf
scas
mov
dec
cld
and
jg
sar
add
pop
hlt
push
mov
add
jmp
adc
push
adc
addr16
(bad)
mov
mov
pop
mov
cmp
push
pop
jo
cmps
mov
ja
and
jg
sar
add
jnp
pusha
dec
gs
push
cmp
sub
cmp
inc
and
test
jg
es
dec
inc
xor
retf
or
mov
inc
push
push
fcomip
int
xchg
pop
lods
fld
(bad)
mov
pop
fsubr
icebp
jmp
dec
shr
aad
cwde
adc
or
mov
std
add
inc
ret
(bad)
dec
out
inc
sub
push
loope
cdq
mov
cmp
cmps
sti
inc
cmp
push
xor
push
and
arpl
into
inc
pop
mov
add
inc
mov
cli
add
add
xor
add
lahf
hlt
push
mov
inc
or
sub
xor
ret
dec
mov
je
mov
xchg
inc
sub
pusha
cld
fsubr
in
daa
inc
xchg
ret
shr
cmp
pop
in
test
aaa
push
fmul
sub
not
retf
inc
mov
scas
cmp
add
xor
aas
clc
push
inc
or
imul
cld
push
jg
scas
jg
dec
stc
mov
out
arpl
cmc
aas
mov
xlat
cli
dec
mov
aam
js
(bad)
fs
mov
imul
dec
dec
sar
mov
sbb
ins
cmps
ret
jno
cmps
into
or
mov
cwde
add
lea
lods
add
fmul
pop
sbb
mov
hlt
push
mov
inc
or
loope
xlat
aas
call
or
adc
scas
inc
sub
clc
cld
mov
xchg
in
jnp
cmp
loope
jge
(bad)
dec
mov
in
jl
cmps
fsubr
pop
pop
pop
pop
xor
xor
outs
retf
xor
or
xor
jl
ss
push
lea
push
xchg
popa
sub
jae
sub
int
ds
out
pop
test
push
sbb
jge
jns
int3
jg
adc
aas
call
or
adc
ret
jg
sbb
add
add
lahf
cld
sub
dec
out
repnz
jge
int3
jle
pop
mov
ret
add
push
test
xor
sub
call
xor
cmp
clc
aad
das
lds
sbb
sahf
movs
gs
mov
mov
out
scas
and
push
ins
push
mov
in
cmp
push
call
rcr
inc
inc
add
test
inc
mov
add
clc
push
mov
(bad)
xchg
cmp
xchg
cs
dec
mov
movs
mov
pop
lods
lods
jnp
js
adc
xacquire
ins
(bad)
cmp
shl
(bad)
inc
and
and
in
leave
les
inc
pop
cli
xor
loopne
(bad)
ds
inc
or
imul
cld
push
jg
mov
inc
or
add
dec
jmp
lahf
arpl
mov
adc
inc
ins
imul
jns
mov
(bad)
mov
mov
xor
fidiv
fyl2xp1
sti
cmp
ins
pusha
xor
push
mov
ins
out
ror
loope
xchg
jg
and
inc
inc
add
test
inc
mov
add
clc
push
je
aas
mov
cli
jg
pop
cmp
jg
sar
xchg
jp
xchg
ins
addr16
imul
sub
in
mov
sub
jno
lods
imul
popf
repz
adc
imul
test
sub
repnz
jne
push
cld
and
std
add
inc
ret
inc
mov
cli
add
add
xor
add
int
stc
pop
jl
mov
lea
fst
mov
shr
push
dec
je
jb
fdiv
aam
pushf
in
bound
loop
pop
clc
inc
inc
rcr
add
lods
je
cmp
mov
in
in
mov
sbb
and
cs
sbb
gs
mov
ret
jg
sbb
add
add
lahf
cld
sub
add
xor
aas
clc
push
je
mov
cmp
pop
mov
sub
sub
(bad)
into
out
jne
sti
retf
mov
imul
data16
into
dec
cmp
loope
lds
pop
outs
adc
fidivr
int
test
div
mov
add
and
xchg
inc
ret
jg
sbb
add
add
lahf
cld
sub
add
xor
aas
clc
push
je
mov
ja
cmp
cmp
or
outs
in
das
pusha
aad
leave
out
add
adc
je
outs
bound
jl
fadd
addr16
pushf
pop
push
sar
nop
imul
xor
fbld
fld
test
out
stos
test
mov
ret
dec
jae
repz
clc
inc
mov
cli
add
add
xor
add
lahf
hlt
push
mov
inc
or
das
(bad)
cli
inc
and
outs
lea
push
mov
jmp
jne
inc
jae
jae
ror
cmp
adc
and
mov
xor
add
aas
mov
cmps
dec
aam
aam
fcomip
mov
cwde
sti
aas
sbb
mov
jae
jg
and
inc
inc
add
test
inc
mov
add
clc
push
test
pop
repz
mov
mov
test
stos
clc
mov
aam
xchg
sub
mov
xchg
sbb
mov
pop
push
pushf
sbb
cmp
push
add
and
inc
inc
add
test
inc
mov
add
clc
push
inc
or
sbb
cld
and
std
add
inc
ret
inc
mov
cli
add
add
xor
add
iret
mov
inc
push
add
and
inc
inc
add
test
inc
mov
add
clc
push
iret
push
loope
fmul
mov
xlat
aas
call
or
adc
ret
jg
sbb
add
add
lahf
cld
sub
(bad)
jo
in
gs
pop
mov
hlt
push
mov
inc
or
loope
xlat
aas
call
or
adc
(bad)
mov
lods
pop
clc
inc
mov
cli
add
add
xor
add
lahf
hlt
push
mov
inc
or
jecxz
sub
sbb
cld
and
std
add
inc
ret
inc
mov
cli
add
add
xor
add
jge
stos
sub
adc
inc
clc
or
add
inc
cld
and
std
add
inc
ret
test
stos
inc
or
imul
cld
push
jg
mov
inc
or
add
inc
cmp
test
test
and
retf
std
inc
fisubr
sub
add
test
les
in
fistp
clc
inc
mov
cli
add
add
xor
add
lahf
hlt
push
mov
inc
or
out
push
mov
jl
mov
sub
les
push
mov
push
arpl
mov
dec
leave
dec
fadd
adc
loope
pop
dec
icebp
pop
std
(bad)
mov
sub
jb
push
jge
lods
lods
je
jp
cmp
sub
mov
dec
jo
mov
repnz
iret
cmp
out
and
std
add
inc
ret
inc
mov
cli
add
inc
loopne
inc
test
call
gs
lds
jp
stos
jns
test
fcmovnb
lock
xchg
in
push
retf
out
out
xor
fwait
mul
push
jae
sub
clc
push
imul
pop
mov
inc
cdq
jg
jns
jns
inc
shl
cmp
js
pop
mov
test
pop
jns
ret
mov
adc
push
jle
ds
loop
adc
repnz
adc
enter
mov
adc
(bad)
sub
inc
pop
jg
(bad)
mov
(bad)
jo
jle
clc
cwde
mov
retf
inc
xlat
retf
pop
inc
mov
and
inc
(bad)
outs
pop
movs
sahf
xchg
mov
fidivr
and
mov
call
pushf
out
mov
pusha
mov
adc
add
mov
inc
or
xor
and
in
mov
mov
retf
jnp
mov
movs
and
mov
xchg
inc
stos
sub
fucomi
pop
mov
neg
cmps
jno
mov
mov
xchg
out
ins
cmp
mov
push
jnp
xchg
pushf
outs
add
aas
das
aas
js
xlat
pop
icebp
cmps
std
cmc
scas
sbb
push
xlat
push
jbe
outs
sub
fist
retf
fsub
popa
push
pop
sub
cmp
pushf
xlat
sub
mov
inc
cld
push
jg
mov
inc
or
add
pop
shl
outs
clc
pop
in
sub
int
xchg
scas
clc
ins
cmp
loopne
mov
outs
out
mov
aad
cmp
enter
sbb
(bad)
out
mov
jge
push
mov
aas
pop
cmps
popa
es
lods
jmp
ja
xlat
or
mov
mov
add
mov
xchg
lahf
sub
add
xor
aas
clc
push
inc
or
imul
cld
push
jg
test
mov
out
adc
mov
fisttp
test
ss
icebp
fsub
sub
repz
repnz
xchg
sahf
daa
pop
aam
mov
xchg
and
cmc
adc
xchg
int
xor
sar
sahf
mov
inc
mov
cli
add
add
xor
add
lahf
hlt
push
mov
inc
or
ins
cli
sub
cmp
shl
das
pop
clc
push
loop
sbb
dec
fimul
xchg
sub
add
into
imul
icebp
push
les
sti
ins
inc
cmp
shr
push
shl
or
je
in
repnz
sbb
mov
and
inc
inc
add
test
inc
mov
add
clc
push
into
xor
sub
cmp
shr
shr
jne
dec
cmp
fld
jne
clc
xchg
sti
arpl
push
in
ins
jo
nop
push
inc
sbb
xchg
stc
jl
outs
out
dec
jmp
push
dec
sahf
sbb
fs
les
or
cmp
sub
pop
inc
mov
add
clc
push
inc
or
imul
cld
push
jg
lods
mov
movs
std
imul
mov
mov
pop
pop
push
push
lock
lahf
shl
movs
and
inc
ins
fcomp
mov
test
add
mov
jae
aas
or
ss
cli
int
test
clc
mov
out
ror
dec
sahf
push
retf
jl
mov
cld
daa
outs
mov
lahf
cld
and
std
add
inc
ret
inc
mov
cli
add
add
xor
add
sub
out
jns
xchg
in
fidivr
in
cmc
movups
ret
push
(bad)
loopne
into
fcmovnb
call
pop
push
jmp
loope
and
popa
jl
xchg
stc
inc
fucomi
dec
mov
sub
and
aad
jmp
(bad)
push
jp
and
dec
pop
leave
aaa
or
xchg
fcom
mov
ror
add
xor
aas
clc
push
inc
or
imul
cld
push
jg
test
punpckhwd
(bad)
test
mov
das
adc
js
or
adc
lods
out
aam
fmul
cmps
bound
push
pusha
stos
mov
or
adc
cmp
neg
jmp
or
shr
cmp
push
inc
add
pop
(bad)
adc
inc
clc
or
add
inc
cld
and
std
add
inc
ret
sar
(bad)
inc
and
fdiv
(bad)
in
xlat
shl
int
(bad)
adc
adc
mov
js
ret
pop
mov
out
ficomp
xchg
inc
sub
test
inc
mov
sahf
aam
int
in
div
cmp
lods
div
add
xchg
cmp
jle
jbe
adc
js
arpl
jecxz
aas
loope
xlat
aas
call
or
adc
ret
jg
sbb
add
add
lahf
cld
sub
dec
div
mov
add
sti
dec
jbe
arpl
clc
cdq
jecxz
add
sbb
push
call
push
cmps
or
inc
fs
divps
js
cmp
jecxz
std
push
or
add
inc
add
adc
and
lds
xchg
pop
dec
in
mov
inc
push
lds
and
jb
das
(bad)
adc
inc
clc
or
add
pop
ret
es
lods
imul
mov
jp
mov
adc
xchg
mov
(bad)
cli
pop
pop
pop
mov
(bad)
fstp
mov
sti
cmp
retf
sbb
jae
imul
leave
adc
jge
les
push
xchg
rol
imul
ficom
dec
int3
fisub
ins
or
in
lock
hlt
push
mov
inc
or
loope
xlat
aas
call
or
adc
and
jmp
popa
test
aas
push
mov
and
ret
imul
(bad)
push
xchg
sbb
pop
fild
out
dec
ins
stc
fcom
pop
ficomp
ret
dec
loope
adc
push
pop
push
gs
jb
push
sub
adc
xchg
jg
and
inc
inc
add
test
inc
mov
add
clc
push
jge
pop
outs
fwait
cli
xlat
cld
retf
(bad)
mov
mov
cmp
pop
push
jmp
sub
out
mov
jge
adc
lods
mov
jns
mov
lods
pop
clc
inc
mov
cli
add
add
xor
add
lahf
hlt
push
mov
inc
or
cmps
or
cmps
std
imul
jb
xchg
call
jg
mov
lahf
cli
or
jae
adc
add
or
add
dec
inc
or
push
loop
movs
shl
div
xchg
aas
sub
cmp
mov
dec
pop
hlt
bound
and
and
add
ins
je
add
add
add
add
add
add
adc
add
add
sub
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
inc
add
add
add
inc
inc
add
inc
inc
(bad)
inc
add
(bad)
inc
xchg
js
ja
jg
ja
ja
ja
xchg
add
ja
push
push
pop
jnp
mov
jne
push
push
jo
add
push
add
ja
push
push
pop
jnp
mov
ja
ja
xchg
xchg
ja
jo
ja
js
pushw
ja
adc
ja
loopne
addr16
adc
add
pop
jno
adc
push
add
adc
ja
loopne
addr16
adc
pusha
data16
add
ja
ja
jo
ja
js
add
add
add
add
add
ins
xor
add
add
mov
add
or
add
inc
add
add
add
add
or
ins
jbe
jne
je
outs
jae
dec
xor
call
push
jb
push
arpl
ins
jbe
jne
je
outs
jae
dec
add
xor
pop
xlat
or
add
add
sub
cld
add
add
add
add
add
add
repnz
inc
and
add
pop
add
js
je
add
je
js
pop
adc
add
add
add
repnz
inc
and
add
pop
add
js
je
add
je
jns
imul
pop
add
add
add
popa
add
je
imul
push
add
add
add
ins
add
jae
add
add
add
add
add
arpl
popa
add
popa
add
add
outs
add
add
add
add
add
add
add
popa
add
imul
add
add
add
add
add
add
push
stos
and
add
arpl
add
popa
add
add
outs
add
add
add
add
add
mov
arpl
data16
jb
gs
(bad)
inc
add
or
add
jne
or
add
outs
add
je
add
or
jecxz
stos
add
push
add
add
nop
add
add
popa
outs
jae
push
gs
or
add
mov
add
add
outs
add
jne
jae
add
add
add
in
or
sbb
add
ins
add
add
add
add
or
add
mov
add
add
popa
add
add
add
add
pop
add
push
xchg
fisub
add
add
data16
outs
add
add
inc
add
add
add
add
sbb
add
bound
popa
add
imul
cmp
add
add
pop
add
push
xchg
fisub
add
add
bound
push
add
jb
rol
add
add
add
add
cmp
ins
add
arpl
imul
add
jbe
add
add
add
add
inc
mov
push
add
gs
xor
add
jbe
dec
outs
and
and
jae
jne
arpl
dec
outs
jne
outs
data16
jae
popa
jo
ins
imul
and
jne
ja
ins
ins
and
outs
and
arpl
ins
arpl
outs
and
and
gs
data16
popa
jb
and
and
imul
and
popa
ins
ins
outs
ja
jns
jne
je
and
and
and
bound
imul
popa
arpl
and
outs
bound
push
inc
inc
and
popa
fs
popa
outs
and
gs
imul
jae
popa
jbe
imul
outs
and
and
jae
popa
ins
ins
gs
jbe
gs
je
and
jne
outs
je
and
and
jae
fs
and
jae
and
and
outs
and
je
ins
jo
imul
jbe
gs
popa
and
fs
sub
popa
outs
and
jne
addr16
jae
jne
and
ins
jns
and
gs
jae
and
imul
imul
and
and
fs
and
fs
je
outs
outs
and
outs
ins
and
and
jae
jne
arpl
dec
outs
jne
and
add
add
add
or
fadd
call
call
add
nop
add
aam
add
popa
outs
jae
push
gs
inc
mov
add
add
add
gs
xor
add
ins
add
je
outs
jne
push
imul
push
popa
jb
and
ins
and
ins
ins
outs
outs
and
jae
gs
popa
outs
and
ins
jne
imul
outs
jne
and
jne
push
jo
outs
bound
jae
ja
je
and
jae
popa
jo
ins
imul
add
add
add
rcr
add
call
call
add
nop
add
jl
add
popa
outs
jae
push
gs
inc
pop
add
add
add
gs
xor
add
sbb
inc
outs
ins
ins
outs
outs
and
jae
gs
popa
outs
and
ins
jne
imul
add
add
dec
push
sub
adc
add
call
add
mov
add
popa
outs
jae
push
gs
inc
add
add
dec
xor
adc
or
xor
(bad)
mov
jno
pop
std
inc
adc
clc
push
cmp
lods
xor
or
stos
add
xchg
cmp
add
xchg
jmp
add
or
data16
dec
outs
fs
gs
or
push
bound
imul
popa
arpl
sub
jne
and
sbb
add
and
jmp
add
fucomp
add
(bad)
fdivr
loopne
adc
dec
inc
add
add
add
sub
add
fild
inc
add
add
add
add
add
add
add
add
or
pop
push
or
or
or
or
or
push
adc
or
adc
adc
adc
pop
sbb
adc
adc
inc
add
add
add
add
or
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
inc
add
or
loopne
add
and
add
add
adc
inc
add
add
add
add
add
add
or
inc
add
add
add
add
add
jge
add
add
add
push
adc
pop
and
xor
inc
mov
adc
xor
or
push
pop
sbb
sbb
sub
cmp
inc
inc
inc
dec
dec
dec
push
push
push
push
push
pop
pop
pop
arpl
addr16
jne
ja
jns
add
xchg
xchg
xchg
xchg
xchg
xchg
cwde
cdq
call
test
stos
mov
mov
mov
mov
(bad)
(bad)
enter
rcl
aad
xlat
fcomp
(bad)
loop
in
out
call
repz
cmc
div
clc
stc
cli
inc
add
add
add
add
add
add
add
add
add
add
add
add
or
inc
add
add
add
add
add
add
add
add
and
push
adc
pop
popa
jno
and
or
mov
or
xor
adc
push
and
loope
icebp
pop
sbb
sbb
daa
sub
sub
cmp
inc
inc
inc
dec
dec
dec
push
push
push
push
push
pop
pop
pop
arpl
addr16
jne
ja
jns
add
mov
xchg
xchg
cwde
cdq
call
test
stos
mov
mov
mov
mov
(bad)
(bad)
enter
rcl
aad
xlat
fcomp
(bad)
jecxz
in
out
jmp
cmc
div
clc
stc
cli
(bad)
fiadd
or
add
add
add
add
add
and
add
or
cmp
clc
call
bound
inc
mov
jg
xor
ret
out
in
inc
out
xchg
inc
and
cmp
loope
ficom
jg
pop
pop
sbb
mov
inc
clc
call
bound
add
mov
sbb
in
xchg
inc
loopne
les
adc
mov
mov
add
inc
icebp
push
mov
(bad)
cmp
pop
push
xchg
inc
fisttp
jmp
jmp
sbb
test
(bad)
fxch
inc
(bad)
sar
add
aaa
ret
dec
aas
in
add
mov
es
ffreep
cmps
(bad)
arpl
inc
xor
sbb
mov
add
inc
sbb
mov
cli
push
pop
clc
add
add
aas
mov
out
stc
cld
inc
lock
add
(bad)
jg
dec
jg
test
clc
pop
pop
sbb
add
xor
xor
sahf
pop
inc
mov
xor
es
pop
std
push
hlt
out
cld
or
ret
aas
inc
mov
dec
cld
retf
inc
retf
jg
repz
shl
mov
xor
cld
test
add
cld
dec
and
scas
loope
xchg
add
adc
xor
sbb
add
mov
fdivr
jae
cmc
inc
lahf
movs
inc
sbb
add
inc
add
xchg
in
repz
inc
loopne
inc
and
inc
icebp
pop
ret
push
inc
enter
xor
and
add
cld
dec
jl
(bad)
rol
dec
pop
(bad)
inc
fcmovne
jg
push
mov
jg
fwait
pop
pusha
hlt
inc
dec
dec
icebp
test
add
inc
dec
nop
in
repz
inc
loopne
inc
and
test
xor
cmp
fisttp
cld
sub
mov
aas
clc
call
inc
aas
(bad)
stos
dec
loop
xor
pusha
xor
jp
stc
sar
add
inc
dec
inc
xchg
xor
add
mov
lock
add
loopne
cmp
rol
add
shl
clc
mov
jmp
xchg
lods
pop
into
fwait
cmp
int
cmp
call
into
adc
mov
jb
pop
and
or
inc
outs
dec
inc
xchg
sbb
xor
loopne
inc
and
sub
mov
push
mov
pop
lea
sbb
jae
add
clc
push
push
push
dec
dec
sub
or
dec
sti
jbe
ja
mov
imul
es
popf
ins
(bad)
push
push
rol
add
icebp
hlt
lahf
jecxz
jecxz
and
or
repnz
retf
and
xchg
aad
inc
pop
adc
cs
out
dec
std
mov
inc
mov
fist
add
xor
xor
sbb
std
push
mov
cld
or
stos
idiv
lock
stos
in
push
cs
in
cmc
stos
jl
les
pop
stos
das
cld
add
xchg
call
clc
adc
enter
push
xchg
xchg
cld
les
es
fdivr
arpl
jne
cli
in
pop
daa
(bad)
sbb
clc
call
xor
push
mov
popf
jae
jmp
mov
sti
movs
aad
sbb
inc
dec
pop
aas
pop
retf
std
jbe
ds
push
inc
or
xchg
cmp
scas
inc
lock
add
loopne
jg
aaa
inc
xchg
repz
adc
icebp
out
mov
aam
ja
mov
mov
sahf
cli
popf
cwde
inc
mov
inc
sbb
mov
movs
scas
sub
(bad)
pushf
test
cmps
(bad)
mov
mov
repnz
xchg
push
in
pop
fstp
cld
or
in
mov
add
mov
dec
cmp
xlat
or
add
mov
jecxz
fcmove
inc
les
mov
out
ret
dec
cmps
cmp
cwde
inc
cmp
aas
icebp
scas
cmp
push
(bad)
imul
xchg
jle
sbb
xlat
mov
sub
ins
xlat
fcomp
inc
xchg
jg
inc
cld
(bad)
mov
loope
clc
or
arpl
add
inc
loop
aas
loope
clc
or
add
je
rcl
outs
(bad)
and
test
out
pop
loop
and
repz
lahf
(bad)
dec
inc
push
mov
iret
das
mov
lahf
lock
add
add
inc
cld
inc
add
xor
addr16
daa
mov
inc
mov
sub
leave
jecxz
push
loop
mov
lahf
(bad)
dec
aad
psllq
out
pop
cld
mov
outs
cld
xor
add
pop
sbb
add
xchg
fninit
mov
scas
in
push
mov
call
mov
fs
xchg
shr
sbb
cmp
and
repnz
inc
in
fnstcw
inc
jae
pop
mov
int
xchg
cmc
(bad)
pop
lock
inc
stos
xchg
inc
pop
and
add
imul
sub
stc
lds
sar
pop
and
hlt
test
aam
jo
imul
mov
and
retf
inc
push
jo
pop
retf
inc
and
dec
clc
pop
sahf
adc
aas
test
(bad)
and
mov
inc
jle
inc
loop
out
idiv
ins
adc
pop
jmp
popa
sbb
dec
xor
inc
leave
sbb
pop
ret
aaa
fs
scas
repnz
aas
push
jl
mov
add
add
push
cld
imul
xor
mov
and
test
bound
loop
jnp
cmp
cmps
loop
popa
jnp
cmps
pop
jmp
clc
dec
adc
xchg
sti
mov
(bad)
fiadd
nop
(bad)
mov
mov
cld
inc
dec
addr16
rol
test
and
movs
jl
inc
bnd
imul
ins
jb
pushf
shl
test
je
jmp
ret
sbb
xor
push
xchg
fidivr
cs
push
xchg
aad
mov
add
imul
test
ss
cmp
add
sub
dec
pop
imul
fcmovne
inc
repz
pop
fcomp
lods
jmp
adc
inc
leave
sbb
loope
xor
mov
inc
and
mov
(bad)
dec
mov
jmp
jg
and
jg
mov
pop
enter
sbb
inc
fs
test
xchg
loopne
lds
stc
push
imul
stos
js
call
inc
and
inc
stos
fsubr
out
fidivr
imul
and
inc
scas
cmp
add
fisttp
inc
ret
out
inc
mov
aas
jmp
jg
and
pop
js
cmp
imul
loop
data16
jo
movs
inc
leave
add
ins
add
jb
xlat
inc
and
pop
(bad)
iret
add
call
jg
adc
sbb
jbe
stc
cmc
inc
inc
cwde
jg
xchg
repnz
adc
arpl
inc
mov
rol
jno
imul
inc
leave
push
ins
outs
pop
ret
xor
(bad)
(bad)
xor
xor
stc
mov
(bad)
and
jbe
(bad)
jg
pop
outs
(bad)
and
outs
pop
nop
xor
pop
mov
jb
dec
shr
aad
stc
and
test
push
ret
into
push
jl
ror
jg
cmc
mov
in
adc
cs
adc
fcomp
dec
std
adc
clc
ins
inc
jg
and
(bad)
mov
jl
loop
pop
mov
cmp
cmp
out
retf
(bad)
mov
pop
je
stc
and
push
mov
ds
mov
mov
addr16
inc
mov
arpl
lods
adc
jg
outs
(bad)
es
xor
add
shl
mov
adc
pop
xchg
cmps
test
ss
pushf
das
call
aaa
ret
lods
movs
sub
repnz
dec
loope
and
adc
mov
jecxz
add
loope
jg
(bad)
inc
leave
dec
(bad)
(bad)
and
out
xlat
je
xor
stc
mov
out
outs
in
repz
test
jge
aas
mov
mov
cli
scas
cmp
jge
cld
(bad)
mov
fistp
inc
test
inc
adc
xor
ret
jae
add
pop
dec
jg
adc
xchg
sub
adc
fsubr
add
int3
iret
stc
and
dec
inc
xchg
pop
cli
scas
cmp
jge
cld
(bad)
mov
xchg
push
outs
dec
mov
aas
call
add
fistp
mov
cld
inc
jle
movs
aam
int3
and
fcmovb
out
pop
xchg
lea
xchg
iret
out
jae
sub
sub
movs
inc
leave
sbb
sub
mov
int
add
mov
jmp
dec
das
(bad)
fild
daa
(bad)
inc
aas
jmp
outs
(bad)
and
pop
dec
pushf
lahf
ds
push
sub
pop
xor
jnp
ja
xchg
inc
and
xchg
jp
add
in
popa
icebp
inc
ror
dec
inc
clc
mov
rcr
rol
jmp
jg
and
je
bound
test
add
iret
mov
and
sbb
out
fidivr
pop
mov
mov
cld
inc
dec
sti
dec
cld
xor
mov
addr16
xchg
jne
das
mov
xchg
push
cmp
jle
xlat
mov
scas
in
loope
dec
jg
inc
dec
xchg
popf
addr16
mov
inc
or
int3
retf
pushf
inc
rcl
dec
jg
pop
xchg
scas
mov
add
aas
cld
outs
mov
leave
aas
je
out
inc
stos
retf
loope
test
repz
mov
jg
inc
inc
stos
sbb
xchg
fidivr
sbb
cdq
fwait
inc
and
jg
fld
mul
addr16
clc
add
jmp
arpl
sub
stc
inc
dec
mov
pop
in
adc
es
push
lds
inc
mov
inc
cld
movs
inc
leave
pop
cli
mov
jmp
jge
cld
(bad)
mov
xchg
arpl
js
pop
pop
hlt
jmp
(bad)
imul
popf
mov
popf
push
sti
pop
dec
jg
jne
out
sub
mov
mov
jp
jno
in
popa
outs
dec
jg
inc
jg
pop
aas
out
fidivr
add
sub
clc
add
jmp
repnz
and
adc
aas
arpl
and
adc
(bad)
push
pop
jb
loop
les
gs
sbb
test
jmp
xchg
jp
pop
jp
add
out
out
clc
push
push
pop
clc
or
inc
sbb
js
add
sbb
aaa
pop
push
pop
pop
cmp
data16
push
ins
jne
lds
xchg
jno
mov
jae
je
jmp
test
jnp
retf
out
pop
in
aad
add
repz
jnp
inc
les
inc
clc
or
icebp
pop
imul
aas
inc
sbb
mov
loopne
fcmovne
jno
mov
loop
lea
lahf
(bad)
dec
inc
push
mov
fxch
pop
jp
add
jmp
jg
das
xchg
sbb
mov
inc
jecxz
ds
inc
cld
cmp
ds
pop
xor
pop
int3
nop
inc
pop
fldcw
push
out
adc
xchg
leave
loop
daa
aam
xchg
push
ror
imul
sbb
lock
(bad)
jecxz
fwait
sub
xor
sbb
jmp
cmp
fnstsw
in
int
pop
fld
imul
enter
xor
aad
jecxz
inc
cmp
neg
cli
sub
push
stos
ret
dec
das
mov
cmp
call
daa
ret
nop
fcomp
adc
mov
jmp
sbb
leave
cmp
inc
pop
jns
sbb
(bad)
jo
and
dec
lea
and
(bad)
xlat
dec
loopne
push
dec
push
or
jns
mov
mov
sahf
sub
and
xor
jne
dec
xchg
cwde
ja
lea
imul
(bad)
daa
pop
iret
and
icebp
add
mov
stos
dec
mov
call
add
bound
sbb
xchg
movs
dec
xchg
mov
out
mov
lods
pop
adc
ds
xchg
mov
add
mov
mov
jg
jp
inc
sar
icebp
retf
ds
dec
cmp
inc
push
repz
icebp
jne
xlat
in
sub
stos
pop
sub
les
arpl
fwait
(bad)
stc
or
(bad)
call
stc
sbb
adc
mov
scas
cld
adc
pop
repz
inc
loopne
jg
mov
ficomp
add
add
xlat
(bad)
push
(bad)
rcr
gs
dec
sbb
into
dec
mov
xor
dec
(bad)
jne
pop
or
(bad)
xor
shr
aaa
icebp
inc
imul
(bad)
jp
adc
xor
into
rol
xor
movs
scas
sub
jle
aas
leave
xor
cmp
mov
inc
add
rol
cld
into
idiv
add
loopne
sbb
add
add
inc
mov
cmp
jl
icebp
sub
jmp
mov
xlat
or
rol
xchg
mov
sub
ja
sti
inc
js
jmp
push
sbb
(bad)
les
xlat
out
scas
test
mov
adc
mov
(bad)
test
push
jne
xor
(bad)
and
or
cmps
(bad)
stc
popf
outs
inc
lock
mov
ja
mov
cld
add
cs
jecxz
(bad)
sub
les
inc
lods
dec
les
push
xchg
jecxz
les
cli
push
jl
inc
or
clc
stos
in
pop
jl
dec
icebp
les
repnz
in
mov
das
out
mov
xor
out
inc
sub
add
sar
add
mov
out
mov
mov
xlat
lea
mov
repnz
jo
push
mov
adc
iret
clc
pop
inc
adc
ja
pop
dec
test
pop
test
das
repnz
out
ds
hlt
cmp
jg
or
add
je
lock
sub
scas
cld
add
cs
iret
icebp
pop
inc
shr
sub
inc
shl
loop
cld
sbb
add
push
cli
scas
inc
inc
or
pop
in
pop
sar
idiv
add
ds
aas
lock
or
jmp
or
add
ror
adc
(bad)
add
add
add
jne
and
test
out
icebp
pop
dec
stos
pop
clc
xlat
icebp
or
int3
cmc
loop
cld
sbb
inc
lds
push
xor
add
shrd
xlat
loop
cmp
loopne
sbb
add
add
inc
mov
cwde
fcomip
cmp
inc
loopne
inc
icebp
jne
repz
clc
mov
add
mov
add
imul
add
mov
inc
push
mov
add
push
(bad)
stos
cdq
inc
rol
xchg
stc
pand
mov
add
xchg
mov
inc
cdq
fsubrp
inc
add
aam
inc
add
ror
cld
iret
pop
jg
das
pop
(bad)
cs
adc
inc
push
sar
add
push
add
jne
nop
aas
out
icebp
das
dec
call
add
out
pop
in
outs
cmp
lahf
pop
mov
arpl
xor
xor
(bad)
or
inc
mov
add
rcr
(bad)
addr16
inc
sbb
xchg
pop
jecxz
les
add
inc
pop
push
dec
icebp
out
push
jmp
add
aaa
lahf
inc
mov
add
out
pop
in
outs
cmp
lahf
pop
mov
mov
xchg
in
icebp
in
fsubr
pushf
movs
jg
retf
test
cmp
fcmovu
fstp
mov
push
mov
or
jmp
mov
or
inc
cmp
xor
jg
dec
(bad)
ret
das
les
adc
inc
jne
enter
fdivr
sub
scas
ds
shl
out
mov
cmp
data16
test
mov
loop
push
jb
cmp
cmp
push
dec
adc
pop
mov
xor
and
mov
adc
data16
inc
and
cmp
jecxz
stos
pop
jl
jle
mov
add
bound
mov
xchg
mov
xchg
mov
sub
inc
add
test
sar
cmps
xchg
icebp
xor
test
call
pop
scas
fst
xchg
mov
dec
or
out
data16
call
cmps
mov
je
sahf
adc
pop
sti
(bad)
mov
mov
aas
xchg
ds
ins
sub
xchg
lods
cmc
jmp
dec
sbb
mov
sub
xchg
push
jmp
mov
dec
in
jns
push
sti
jmp
jne
mov
sub
adc
dec
ret
shl
jmp
sub
mov
jmp
(bad)
lahf
xchg
push
sti
xchg
aad
ret
(bad)
adc
in
sbb
cmc
scas
retf
in
mov
call
jp
pop
mov
or
pop
retf
nop
sub
adc
or
pop
test
or
mov
mov
and
adc
or
int
out
cmc
scas
mov
dec
ins
jb
stos
push
movs
sub
loopne
mov
lea
jmp
imul
fisub
sti
jmp
sub
scas
and
jnp
call
xchg
out
pop
lahf
xchg
cmp
sub
fild
mov
aas
inc
jnp
inc
sbb
mov
push
cmp
icebp
ss
out
(bad)
pop
push
fwait
retf
popa
addr16
rcr
push
fdivr
dec
adc
pop
dec
push
sbb
bound
jb
mov
inc
push
and
lods
shr
pop
pusha
jnp
sbb
jno
adc
sub
sub
(bad)
and
ret
and
imul
jp
rcl
bound
frstor
and
pop
rcr
sbb
je
push
or
mov
jp
test
lods
(bad)
fld
outs
pop
mov
jecxz
inc
add
stos
ja
loop
mov
leave
cmps
pop
fucomip
push
push
xor
int
test
mov
pop
lods
dec
shl
mov
or
shl
jne
inc
jle
enter
stos
jp
jns
in
ins
pop
retf
aad
pusha
jmp
inc
adc
nop
jb
les
jnp
cmps
test
sahf
icebp
and
push
popf
sub
jns
xor
retf
adc
dec
test
sahf
cwde
stos
mov
adc
shl
xchg
push
or
jp
mov
nop
shl
aam
repz
leave
sbb
jle
cli
jl
aad
pop
test
call
pop
ret
mov
add
mov
cmps
sbb
sub
fnstenv
mov
xor
sbb
or
icebp
xor
push
ins
and
lock
push
lods
lds
xchg
mov
push
test
cdq
push
xchg
mov
push
lahf
or
mov
inc
daa
add
push
mov
xor
pop
and
jge
push
dec
push
cwde
int
test
fisubr
jae
push
mov
ret
mov
sti
mov
mov
cmc
sbb
sbb
pop
or
dec
jl
in
sbb
pop
sub
lds
ret
fs
mov
cmp
stos
push
lea
jge
jo
push
imul
gs
imul
sub
pop
mov
icebp
inc
xchg
and
pop
sbb
test
push
cli
test
stos
ficomp
rcr
cs
xchg
adc
(bad)
(bad)
mov
push
ret
cmp
dec
out
cs
xchg
sbb
outs
sahf
pop
mov
mov
je
fs
mov
push
jno
jp
pushf
mov
mov
jo
xchg
xchg
out
sub
iret
mov
(bad)
test
xor
jp
mov
in
or
add
cld
sub
shl
mov
gs
or
ret
adc
cmp
pop
xchg
repz
adc
aam
mov
push
aaa
das
adc
enter
retf
cmc
and
mov
lea
cdq
xor
or
call
pop
sbb
(bad)
xchg
(bad)
jecxz
or
mov
pop
sbb
jp
hlt
fwait
mov
into
rcl
adc
shl
cmp
xchg
gs
imul
cmps
push
pusha
data16
add
test
das
shl
inc
xor
pusha
mov
enter
iret
sub
and
xor
inc
imul
(bad)
ja
loop
enter
push
inc
mov
pop
jge
mov
and
pop
mov
dec
lock
ins
jo
lods
pop
imul
sti
hlt
scas
dec
add
out
cdq
leave
mov
lahf
mov
mov
jnp
add
aaa
mov
pop
jno
add
fiadd
mov
outs
adc
iret
outs
adc
in
adc
xor
adc
add
and
daa
jmp
ds
and
lods
mov
out
ins
retf
fisttp
pop
mov
mov
ja
daa
inc
push
out
out
cwde
scas
cdq
loopne
sbb
ret
inc
xchg
outs
pop
inc
fcomp
push
inc
shr
pop
mov
sbb
aas
test
jg
stos
push
icebp
fs
adc
jge
sti
pop
sub
icebp
aas
jecxz
loopne
fild
pop
mov
in
mov
jg
mov
inc
iret
adc
inc
fsubr
jb
xor
mov
les
add
popf
aas
sub
call
cmps
loopne
xlat
repnz
inc
jns
sub
popf
jns
ror
push
les
pop
inc
clc
jne
fistp
imul
cs
push
popa
mov
out
scas
push
aaa
call
jne
push
arpl
cld
adc
jp
in
vmaxps
jl
lods
fistp
repnz
pop
jle
and
cmps
mov
jecxz
and
movs
movs
dec
xor
movs
dec
pop
cli
fsubp
fnstcw
adc
xlat
ret
mov
std
jbe
das
push
jmp
dec
sti
push
mov
adc
push
shl
int
ds
and
ret
aam
lds
fisttp
jg
js
add
push
aam
ins
outs
add
adc
dec
cmp
adc
fs
scas
add
fucomip
movs
jecxz
cmp
xchg
dec
icebp
mov
lahf
sbb
cmps
aad
jae
cmp
or
outs
or
shl
scas
mov
je
popf
inc
or
mov
add
stc
xchg
ins
arpl
add
pop
dec
je
jge
stc
sbb
pushf
dec
test
mov
(bad)
cmp
or
inc
mov
adc
dec
jg
jmp
stc
push
(bad)
sbb
pop
out
push
cmp
mov
xor
loop
mov
gs
mov
scas
fild
pop
dec
gs
push
dec
loop
in
loopne
push
sub
daa
add
cmp
mov
pop
test
dec
adc
adc
xchg
outs
xchg
or
daa
jo
in
mov
inc
outs
mov
sbb
ins
jmp
sbb
out
aas
mov
jns
lods
pop
add
sbb
popa
or
cli
sbb
mov
pop
mov
sub
fcmove
iret
cmps
push
arpl
sub
pop
pushf
popf
fucomi
out
jge
icebp
sahf
dec
(bad)
cld
and
mov
cmp
xchg
stos
shl
lock
sbb
jns
test
pop
pop
sbb
mov
mov
dec
repnz
test
push
out
mov
les
pop
mov
push
fldcw
push
std
mov
(bad)
or
nop
sub
mul
jmp
fisttp
pop
mov
loopne
adc
mov
aaa
call
test
(bad)
rcr
std
psllw
lahf
ret
call
ror
cld
cmp
ret
adc
xchg
pop
push
cmp
test
xchg
or
addr16
push
rol
pop
dec
idiv
stc
daa
stc
popf
push
movs
dec
adc
xlat
xchg
jbe
inc
xlat
fdivr
in
pop
loopne
add
loop
test
inc
mov
enter
adc
and
xchg
repz
(bad)
push
sbb
aas
adc
and
jnp
ds
shl
aas
clc
dec
loope
stc
cmps
mov
jmp
mov
and
mov
inc
dec
adc
(bad)
cmp
jecxz
add
mov
cld
pop
stos
js
iret
push
nop
shr
mov
jns
out
fcomp
dec
fadd
add
jno
stc
pop
daa
or
jle
inc
pop
sar
sahf
push
lea
sbb
sub
jmp
js
loop
(bad)
bsf
push
sub
mov
popa
aam
scas
ret
xchg
call
cmp
fiadd
inc
icebp
jle
ficomp
mov
push
xchg
inc
cmp
sbb
ins
cli
push
jae
xor
jnp
(bad)
loope
push
ror
push
jae
push
mov
shl
pop
(bad)
lods
xor
inc
mov
ret
mov
pop
push
aam
je
out
jmp
outs
push
inc
xchg
popa
jmp
pop
mov
jl
clc
test
sti
pop
call
mov
mov
push
call
push
and
int3
jo
shl
jmp
aas
loope
fst
aam
outs
das
inc
mov
mov
inc
arpl
sub
xbegin
mov
xchg
xchg
stos
sub
(bad)
(bad)
mov
repnz
dec
or
mov
xchg
popa
xor
or
inc
xchg
arpl
add
xchg
dec
add
pop
outs
les
dec
loopne
add
xchg
call
jle
pop
ss
rcr
and
push
or
xchg
add
jb
imul
std
xchg
cld
pop
jge
jle
push
clc
mov
or
les
(bad)
xor
push
in
pop
jne
jo
pop
retf
test
xor
inc
mov
(bad)
xchg
icebp
(bad)
test
xor
aad
sub
and
in
fbld
rol
or
fdiv
aam
addr16
ret
ficomp
retf
cmps
test
popa
in
sar
jno
or
mov
(bad)
test
(bad)
clc
inc
dec
push
push
rcr
mov
hlt
mov
fmul
add
mov
pop
or
ret
sar
pop
xor
fimul
call
mov
int
jno
cs
sub
push
xor
push
popa
rcr
xlat
(bad)
fadd
inc
iret
iret
sar
xchg
ret
dec
repnz
sub
fs
mov
cld
cmp
lods
mov
sbb
push
ret
aaa
push
jo
int
mov
add
retf
sbb
sub
add
sbb
aas
adc
fisttp
fstp
and
(bad)
fwait
test
push
mov
and
and
inc
jne
aam
sub
pusha
stos
cmp
scas
in
mov
jle
clc
sub
mov
mov
add
fld
pop
push
mov
mov
sbb
not
cmp
add
jmp
jno
mov
xchg
jo
jg
push
inc
inc
dec
scas
xor
les
sbb
xchg
jno
sbb
daa
outs
push
xchg
jmp
das
hlt
ds
xchg
outs
push
retf
dec
icebp
cmp
test
ins
sbb
mov
sub
add
sub
int
bound
fisub
jb
xlat
push
nop
lods
lods
(bad)
jmp
sbb
lahf
dec
cli
xor
adc
inc
nop
xchg
inc
jecxz
cld
xchg
loop
inc
fwait
jecxz
fwait
pop
push
cmovb
fsubr
jb
test
repnz
ds
inc
xor
lahf
dec
jns
imul
jp
xlat
imul
cmp
std
pushf
jl
movs
mov
mov
or
daa
pop
clc
in
mov
int
popa
or
in
stc
call
jl
pop
xchg
mov
pop
jns
cli
repz
test
repz
cmp
add
std
(bad)
sar
jp
imul
scas
loop
retf
mov
sahf
sahf
je
aas
out
fnsave
mov
mov
push
add
rol
add
dec
xor
add
cmp
xchg
add
sub
(bad)
cmp
rcr
or
sbb
sbb
stc
mov
cmp
mov
mov
mov
mov
sub
cld
outs
mov
inc
add
adc
test
jns
jbe
std
cmps
sbb
pop
addr16
mov
loopne
jge
test
xchg
pop
fidivr
push
lds
cld
adc
sbb
in
jbe
(bad)
fidivr
inc
adc
add
sub
je
xchg
mov
and
cmp
data16
aaa
push
push
sub
mov
out
popf
xor
ds
mov
mov
inc
retf
test
cmp
dec
clc
mov
cli
dec
popa
sar
mov
add
mov
in
mov
aas
int3
mul
fwait
pusha
sub
loopne
or
call
push
sbb
mov
ret
inc
inc
(bad)
std
jne
inc
(bad)
sar
bound
jne
sbb
fistp
aad
stos
stc
xlat
std
add
cmp
cld
(bad)
xor
jl
xor
call
in
imul
in
xchg
jecxz
sub
or
into
xchg
inc
(bad)
aad
sti
push
clc
mov
inc
leave
cmp
add
inc
sbb
pop
or
out
je
push
push
retf
mov
in
xor
pop
ins
xor
jo
nop
scas
push
adc
push
dec
or
cli
inc
xor
xchg
retf
mov
add
into
test
mov
sbb
hlt
sar
add
mov
loop
mov
(bad)
into
sbb
test
imul
adc
cwde
jmp
pop
fnsave
mov
(bad)
xchg
mov
push
ror
mov
sbb
mov
cmp
dec
daa
mov
(bad)
(bad)
jne
enter
pop
fbstp
mov
cmp
ror
stc
into
jno
xchg
popf
jnp
lods
(bad)
fldenv
jp
mov
jle
mov
test
retf
cmps
xchg
(bad)
cld
xchg
lock
push
sbb
cmps
inc
jecxz
shr
sbb
pushf
jns
sbb
jg
int
xor
out
iret
sub
(bad)
cli
and
push
dec
aas
les
mov
sub
arpl
xchg
cld
pop
mov
xor
es
inc
(bad)
aad
lahf
fdivr
lds
pop
push
inc
sbb
xchg
inc
(bad)
(bad)
jo
pushf
jmp
enter
jnp
mov
dec
clc
push
mov
pop
imul
add
sub
sub
inc
js
cmps
mov
imul
pop
mov
mov
mov
inc
sub
push
jmp
jne
clc
cmp
in
repnz
aas
int3
retf
or
into
les
(bad)
sbb
in
push
jmp
and
jmp
stos
mov
dec
fld
(bad)
mov
pop
scas
test
jecxz
pusha
imul
cmp
repz
(bad)
inc
or
loop
cli
or
fcomip
cli
pop
(bad)
xor
lds
aas
jmp
mov
jl
cmp
mov
add
push
in
xor
stos
xor
out
ret
pop
(bad)
enter
cmp
adc
inc
(bad)
jmp
jecxz
es
dec
cmp
sti
fnstcw
clc
fnsave
stos
fnstcw
leave
std
scas
add
mov
ds
jno
cmps
imul
xchg
aaa
mov
xchg
inc
mov
push
mov
add
pop
aas
clc
(bad)
test
dec
pop
dec
sub
out
sub
ins
(bad)
out
xor
cdq
sbb
push
dec
movs
push
push
cmp
pop
xlat
aaa
in
mov
mov
xchg
inc
mov
cmc
scas
dec
mov
sbb
cmp
pushf
push
xchg
aad
rcl
lock
xchg
jmp
xchg
imul
jno
imul
cmp
add
shl
dec
mov
mov
fwait
daa
aas
stc
push
scas
inc
sti
xor
xchg
add
jns
sub
pop
sti
dec
mov
aaa
fwait
push
test
cmp
fdivr
push
mov
sub
fisttp
lea
sbb
fbld
fwait
movs
mov
mov
icebp
mov
adc
push
test
add
int
dec
inc
movs
mov
sahf
outs
and
cli
ins
xchg
sbb
mov
xor
pop
cmp
xchg
stos
shr
xor
xor
add
inc
jecxz
add
mov
add
xchg
xor
add
inc
jecxz
je
adc
ja
push
add
dec
sbb
(bad)
movs
jnp
(bad)
in
cmps
loop
jno
push
rol
(bad)
pop
jg
fst
fnstenv
lds
xor
add
jmp
pop
sub
pop
adc
stos
cmp
mov
out
dec
fcom
cmp
aad
fs
mov
not
mov
(bad)
lds
movs
mov
add
mov
std
add
inc
xor
pushf
mov
scas
and
mov
dec
cmp
mov
adc
add
aas
fs
adc
sbb
fld
clc
fnsave
iret
in
dec
jecxz
inc
std
out
push
rcl
inc
inc
push
outs
adc
xchg
sbb
pop
adc
add
stos
pop
rcr
fiadd
push
dec
push
sbb
nop
jmp
neg
scas
jno
add
std
mov
jg
stc
mov
or
out
push
push
jg
mov
mov
mov
or
jg
pusha
xchg
shr
mov
pop
ret
fidivr
push
inc
xchg
popf
lods
out
pop
scas
jg
dec
sbb
jnp
inc
iret
inc
(bad)
push
mov
(bad)
jae
add
xor
jo
arpl
xchg
jae
sbb
add
dec
adc
adc
push
xchg
mov
nop
aas
idiv
sub
xor
fcomp
(bad)
mov
ins
(bad)
scas
mov
int
add
stos
daa
(bad)
mov
and
dec
dec
fidivr
frstor
call
pusha
addr16
lods
xor
fwait
rol
inc
ficom
xchg
pop
cld
enter
sbb
jb
add
mov
pop
ret
pop
or
fadd
loope
mov
shl
mov
shr
mov
add
or
pop
shl
dec
(bad)
jl
lods
jmp
mov
pop
dec
add
dec
xchg
jo
mov
xchg
dec
rol
loopne
adc
rcl
mov
push
and
push
cmp
repnz
aas
jmp
dec
std
add
div
or
imul
pop
jbe
call
ds
clc
jnp
add
loopne
inc
mov
mov
push
out
xchg
mov
xor
or
call
jl
sub
enter
and
jp
test
sahf
or
cli
or
mov
lea
add
scas
cwde
aas
popa
fist
add
lods
lods
xchg
out
dec
call
mov
test
retf
jns
cmc
ret
sbb
lock
jne
out
into
(bad)
push
jnp
outs
xchg
imul
retf
mov
ja
dec
shl
in
addr16
(bad)
fist
(bad)
and
out
clc
jb
out
pop
mov
add
and
add
jae
jno
and
mov
and
(bad)
sahf
adc
xadd
push
popf
arpl
and
mov
sti
mov
mov
(bad)
outs
fsubr
ret
jle
fistp
pop
adc
test
imul
les
adc
mov
and
add
adc
mov
mov
mov
out
sbb
mov
adc
push
iret
test
lods
xchg
cmps
and
jae
jbe
jle
mul
or
movs
(bad)
pop
sbb
sar
inc
mov
jmp
dec
push
icebp
push
xchg
mov
out
dec
jbe
retf
jbe
test
in
mov
jns
push
fcomp
dec
inc
or
inc
or
mov
aad
js
repnz
shl
gs
add
movs
popf
mov
test
add
mov
jg
jl
mov
ficomp
test
shr
pop
and
add
xor
rcl
in
test
push
xor
(bad)
push
imul
mov
mov
lahf
(bad)
inc
sysenter
(bad)
or
inc
aam
aas
(bad)
ret
das
mov
pop
or
imul
repz
and
test
xchg
lea
mov
jg
mov
call
lods
fcmovnu
cli
repnz
clc
das
popa
loope
add
xor
dec
ret
mov
out
mov
scas
sbb
mov
and
cmp
stos
xchg
push
movs
aaa
jns
push
pop
push
mov
and
xchg
jge
(bad)
and
pop
mov
sbb
mov
xlat
push
cmp
jne
jmp
jb
sub
pop
icebp
jmp
leave
xchg
(bad)
dec
mov
aam
cmp
sbb
pop
js
push
xchg
pop
mov
int
or
or
pop
pop
jnp
(bad)
cs
(bad)
add
cmc
pop
or
inc
ret
scas
or
or
dec
test
mov
xchg
aam
jmp
aam
xor
xchg
jmp
mov
(bad)
push
aad
sub
push
xchg
sti
sub
(bad)
stos
loop
adc
pop
cmps
(bad)
cld
outs
jle
(bad)
mov
fadd
xchg
ins
in
dec
dec
xchg
and
enter
lods
test
mov
inc
outs
sbb
inc
icebp
jbe
in
(bad)
xor
(bad)
rcr
repz
movd
lahf
or
jl
mov
ds
movs
clc
xchg
ret
mul
imul
cmps
jl
mov
bound
pushf
das
and
mov
stc
scas
mov
push
mov
adc
outs
outs
xchg
or
(bad)
sbb
movs
pop
push
jb
(bad)
enter
jo
dec
int
jo
mov
je
(bad)
push
mov
test
dec
jb
lahf
push
js
jecxz
sahf
or
ds
cld
sbb
cmps
test
xlat
(bad)
lock
shl
or
stc
push
inc
retf
sub
aas
ins
das
ficomp
dec
clc
cmp
push
mov
push
(bad)
retf
dec
retf
addr16
pop
retf
(bad)
imul
les
pop
sti
cs
pop
sar
addr16
mov
jge
test
outs
adc
sahf
repnz
test
jb
sub
ret
cmp
arpl
fisub
clc
test
lock
std
xor
dec
stos
int
push
sub
dec
mov
sbb
jae
cmp
adc
aad
xchg
pop
imul
dec
fs
out
jge
loopne
mov
clc
icebp
ins
lock
into
xchg
ins
mov
(bad)
ds
jnp
loopne
sub
xor
(bad)
in
mov
stc
xchg
dec
push
imul
adc
mov
aas
dec
cmp
js
inc
test
push
imul
dec
adc
leave
xor
daa
xor
cld
sbb
icebp
inc
les
imul
push
mov
dec
in
pop
fstp
and
(bad)
in
cmp
lock
into
icebp
je
fist
cmc
dec
mov
pop
push
mov
jno
cmps
pop
mov
cmps
int3
lods
les
and
jo
pop
add
pop
(bad)
or
fstp
repnz
(bad)
and
pushf
xlat
(bad)
iret
mov
cmps
in
scas
icebp
mov
jg
ds
(bad)
sti
fwait
hlt
mov
pop
mov
cmp
aam
mov
arpl
jb
std
or
mov
outs
jecxz
clc
inc
lock
push
clc
mov
div
ret
retf
sub
daa
jmp
xchg
add
and
aaa
std
scas
hlt
(bad)
pop
(bad)
outs
sti
aas
js
xlat
dec
rcl
stc
das
xor
nop
aam
sbb
xchg
or
(bad)
jbe
push
pusha
xor
pop
push
dec
clc
idiv
push
js
inc
aad
clc
aaa
loope
popf
pinsrw
adc
imul
push
(bad)
(bad)
cmp
mov
into
into
mov
aam
xor
pop
push
ins
mov
mul
clc
mov
das
add
test
jmp
push
push
dec
outs
ja
adc
pusha
int3
dec
add
addr16
jg
and
inc
ret
dec
out
mov
in
mov
and
jl
cmp
retf
fwait
xlat
out
sbb
push
add
inc
ds
aam
add
les
cli
dec
pop
cmp
shr
jp
inc
and
push
xor
mov
stos
inc
mov
xor
push
lock
test
pinsrw
xlat
cmp
retf
movs
cmp
sub
fs
xor
ins
sbb
jo
dec
and
mov
push
push
push
imul
cld
nop
xor
fild
mov
push
std
stos
scas
lods
outs
and
jno
mov
(bad)
jl
test
pop
aam
or
nop
pop
repnz
cmp
jae
in
ds
lock
in
or
icebp
push
push
lock
test
retf
or
or
stos
jmp
fdivr
(bad)
mov
stos
mov
nop
push
mov
mov
jnp
fistp
mov
inc
sar
mov
xchg
ret
loopne
push
icebp
cmps
gs
fisttp
cwde
add
fidivr
cmps
add
lods
sti
and
sar
add
sbb
xor
das
sub
enter
inc
ins
pop
cli
lock
dec
out
sbb
mov
pop
in
mov
cld
pop
inc
jle
dec
fidivr
jmp
inc
jg
inc
jg
(bad)
sar
inc
int
adc
ins
retf
out
mov
ss
or
sbb
ds
js
div
cmp
sar
stos
js
leave
fisttp
ins
xchg
xchg
add
sub
fidivr
push
sti
jl
pop
pop
(bad)
fld
add
pop
dec
mov
xor
adc
loopne
jae
sub
cwde
test
push
pusha
sub
push
out
lods
or
ds
call
xor
lock
and
sub
xlat
push
sub
sbb
out
mov
ret
mov
push
imul
popf
fcomp
sbb
lock
add
mov
xchg
add
test
cdq
and
xchg
(bad)
jbe
jl
inc
mov
add
ss
aam
xlat
(bad)
inc
es
xchg
mov
xlat
xchg
fadd
loope
mov
ss
loop
mov
dec
and
mov
mov
mov
mov
and
clc
es
enter
push
inc
(bad)
sti
jns
mov
sub
stos
xor
sub
jns
push
jne
or
mov
aas
mov
(bad)
jg
jl
mov
or
sbb
cmp
in
dec
cmp
push
loopne
fnstenv
jmp
inc
or
mov
dec
iret
inc
and
mov
add
in
call
mov
pop
stos
test
inc
cdq
repz
xchg
jmp
jns
fdivr
add
mov
sub
ret
sub
aas
loope
mov
pop
clc
sub
icebp
retf
sti
and
add
(bad)
mov
inc
aaa
loopne
enter
ins
das
mov
lock
dec
outs
jg
cs
clc
ins
das
mov
lock
dec
outs
jg
cs
xor
out
icebp
jg
pop
pop
(bad)
inc
aaa
loopne
enter
ins
das
mov
lock
dec
outs
jg
cs
clc
ins
das
mov
lock
dec
outs
jg
cs
xor
out
icebp
jg
pop
pop
(bad)
inc
aaa
loopne
enter
ins
das
mov
lock
dec
outs
jg
cs
clc
ins
das
mov
lock
dec
outs
jg
cs
xor
out
icebp
jg
pop
pop
(bad)
inc
aaa
loopne
enter
ins
das
mov
lock
dec
outs
jg
cs
clc
ins
das
mov
lock
dec
outs
jg
cs
xor
out
icebp
jg
pop
pop
(bad)
inc
aaa
loopne
enter
ins
das
mov
lock
dec
outs
jg
cs
clc
ins
das
mov
lock
dec
outs
jg
cs
xor
out
icebp
jg
pop
pop
(bad)
inc
aaa
loopne
enter
ins
das
mov
lock
dec
outs
jg
cs
clc
ins
das
mov
lock
dec
outs
jg
cs
xor
out
icebp
jg
pop
pop
(bad)
inc
aaa
loopne
enter
ins
das
mov
lock
dec
outs
jg
cs
clc
ins
das
mov
lock
dec
outs
jg
cs
xor
out
icebp
jg
pop
pop
(bad)
inc
aaa
loopne
enter
ins
das
mov
lock
dec
outs
jg
cs
clc
ins
das
mov
lock
dec
outs
jg
cs
xor
out
icebp
jg
pop
pop
(bad)
inc
aaa
loopne
enter
ins
das
mov
lock
dec
outs
jg
cs
clc
ins
das
mov
lock
dec
outs
jg
cs
xor
out
icebp
jg
pop
pop
(bad)
inc
aaa
loopne
enter
ins
das
mov
lock
dec
outs
jg
cs
clc
ins
das
mov
lock
dec
outs
jg
cs
xor
out
icebp
jg
pop
pop
(bad)
inc
aaa
loopne
enter
ins
das
mov
lock
dec
outs
jg
cs
clc
ins
das
mov
lock
dec
outs
jg
cs
xor
out
icebp
jg
pop
pop
(bad)
inc
aaa
loopne
enter
ins
das
mov
lock
dec
outs
jg
cs
clc
ins
das
mov
lock
dec
outs
jg
cs
xor
out
icebp
jg
pop
pop
(bad)
inc
aaa
loopne
enter
ins
das
mov
lock
dec
outs
jg
cs
clc
ins
das
mov
lock
dec
outs
jg
cs
xor
out
icebp
jg
pop
pop
(bad)
inc
aaa
loopne
enter
ins
das
mov
lock
dec
outs
jg
cs
clc
ins
das
mov
lock
dec
outs
jg
cs
xor
out
icebp
jg
pop
pop
(bad)
inc
aaa
loopne
enter
ins
das
mov
lock
dec
outs
jg
cs
clc
ins
das
mov
lock
dec
outs
jg
cs
xor
out
icebp
jg
pop
pop
(bad)
inc
aaa
loopne
enter
ins
das
mov
lock
dec
outs
jg
cs
clc
ins
das
mov
lock
dec
outs
jg
cs
xor
out
icebp
jg
pop
pop
(bad)
inc
aaa
loopne
enter
ins
das
mov
lock
dec
outs
jg
cs
clc
ins
das
mov
lock
dec
outs
jg
cs
xor
out
icebp
jg
pop
pop
(bad)
inc
aaa
loopne
enter
ins
das
mov
lock
dec
outs
jg
cs
clc
ins
das
mov
lock
dec
outs
jg
cs
xor
out
icebp
jg
pop
pop
(bad)
inc
aaa
loopne
enter
ins
das
mov
lock
dec
outs
jg
cs
clc
ins
das
mov
lock
dec
outs
jg
cs
xor
out
icebp
jg
pop
pop
(bad)
inc
aaa
loopne
enter
ins
das
mov
lock
dec
outs
jg
cs
clc
ins
das
mov
lock
dec
outs
jg
cs
xor
out
icebp
jg
pop
pop
(bad)
inc
aaa
loopne
enter
ins
das
mov
lock
dec
outs
jg
cs
clc
ins
das
mov
lock
dec
outs
jg
cs
xor
out
icebp
jg
pop
pop
(bad)
inc
aaa
loopne
enter
ins
das
mov
lock
dec
outs
jg
cs
clc
ins
das
mov
lock
dec
outs
jg
cs
xor
out
icebp
jg
pop
pop
(bad)
inc
aaa
loopne
enter
ins
das
mov
lock
dec
outs
jg
cs
clc
ins
das
mov
lock
dec
outs
jg
cs
xor
out
icebp
jg
pop
pop
(bad)
inc
aaa
loopne
enter
ins
das
mov
lock
dec
outs
jg
cs
clc
ins
das
mov
lock
dec
outs
jg
cs
xor
out
icebp
jg
pop
pop
(bad)
inc
aaa
loopne
enter
ins
das
mov
lock
dec
outs
jg
cs
xchg
popf
pop
rcr
loop
pop
fidivr
gs
outs
shl
cmp
shr
das
test
popa
xchg
imul
fisttp
push
sub
inc
pushf
call
jo
bound
jb
fnstcw
pop
cmp
sar
xchg
cmc
xor
nop
push
mov
jg
es
dec
aaa
(bad)
mov
rcr
ftst
inc
ror
adc
or
and
test
inc
loope
cld
mov
cli
(bad)
(bad)
xchg
dec
pop
popf
mov
ret
jnp
xchg
cmp
sub
jbe
into
imul
mov
or
cs
xchg
fimul
push
mov
std
xor
sahf
adc
xchg
xor
not
scas
xchg
es
xchg
ds
pop
iret
and
loopne
out
mov
sar
and
bound
xchg
push
fwait
shl
jle
movs
mov
cmps
std
aad
out
ja
jl
movs
pop
inc
cmps
js
lds
test
cmp
mov
ror
shl
aam
int
movs
sub
int
into
test
mov
clc
pop
push
cld
sar
add
clc
mov
out
aam
xor
add
stos
mov
repnz
push
retf
sub
outs
(bad)
repnz
adc
add
add
lods
inc
imul
not
mov
out
aam
xor
add
stos
je
xchg
sub
mov
inc
loop
mov
js
stc
stc
pop
mov
in
jae
(bad)
shr
mov
lds
shl
call
inc
adc
iret
sub
add
add
test
jle
out
inc
sti
or
mov
xchg
rcl
mov
dec
jg
fwait
jg
cmps
inc
adc
icebp
inc
jg
popf
jg
cmps
inc
adc
cld
cld
(bad)
fiadd
xor
aad
loop
push
mov
inc
inc
clc
stos
jo
call
jg
cmps
inc
adc
cld
cld
pop
jp
mov
cld
(bad)
out
addr16
sbb
mov
scas
dec
aas
mov
(bad)
inc
cli
adc
inc
xor
add
test
push
inc
mov
dec
(bad)
sub
out
sti
sar
scas
repnz
mov
sub
out
(bad)
ret
(bad)
dec
loopne
mov
lock
(bad)
mov
call
mov
ins
dec
push
aam
mov
mov
imul
adc
leave
and
lahf
mul
popf
cmp
sbb
ss
xchg
rcl
and
add
stos
mov
xchg
cmp
hlt
popf
push
pop
sbb
adc
movs
fimul
or
xchg
imul
mov
or
outs
jecxz
inc
out
scas
add
or
scas
je
xchg
mov
push
push
dec
pop
pop
pop
mov
addr16
jmp
jno
clc
xchg
les
sbb
out
mov
in
aam
inc
push
sub
pop
mov
pop
outs
or
jo
xchg
inc
das
test
add
mov
cld
inc
cmps
pop
(bad)
adc
xchg
clc
jnp
shl
in
cmp
sbb
dec
cs
add
mov
int3
repz
cmp
stc
imul
sar
xor
(bad)
sub
push
push
mov
dec
push
(bad)
fidivr
push
jmp
pushf
mov
xor
and
pop
test
xchg
(bad)
cmps
(bad)
pop
ss
adc
mov
aas
push
push
mov
mov
out
sbb
xchg
xor
mov
mov
pop
cmps
stc
sahf
stos
mov
jg
std
pop
icebp
(bad)
adc
int
sub
cmc
out
or
jmp
xchg
aaa
xchg
jae
cmps
ret
stc
repnz
shl
mov
sbb
jmp
sbb
sbb
pop
sbb
dec
shl
adc
cmp
mov
lods
repnz
div
lahf
cmp
pop
xor
cwde
dec
mov
nop
gs
or
retf
scas
pop
jecxz
mov
ret
mov
adc
into
loop
dec
pop
imul
sub
push
inc
ror
xor
pop
jns
push
push
bswap
xor
ror
xchg
test
jl
(bad)
in
scas
jl
sti
ds
sar
fisubr
mov
movs
movs
dec
cmp
add
cmp
dec
jp
mov
pop
ror
inc
test
xchg
jecxz
(bad)
clc
aaa
push
aam
shr
sub
xor
in
sub
ror
pop
jmp
mov
loopne
ret
and
in
in
jecxz
(bad)
xor
sub
adc
add
in
add
and
inc
pop
and
popa
dec
ins
imul
call
(bad)
mov
js
fs
mov
sbb
mov
out
sub
(bad)
mov
pop
jl
jno
lea
aam
lods
fcmovbe
je
std
pop
in
push
ror
mov
pop
xor
adc
xchg
arpl
(bad)
mov
add
jecxz
neg
pop
mov
stos
in
add
fs
mov
mov
or
pop
xor
xor
push
fdivr
xor
clc
or
push
fdivr
outs
pop
sahf
and
shl
sub
in
test
mov
(bad)
mov
dec
mov
or
cmp
fimul
movs
retf
and
xor
add
fisub
es
inc
scas
aaa
clc
xor
add
mov
aas
in
shr
call
fsubr
mov
push
inc
add
adc
inc
add
adc
inc
add
adc
inc
add
adc
inc
add
adc
inc
add
adc
inc
add
adc
inc
add
adc
inc
add
adc
inc
add
adc
inc
add
adc
inc
add
gs
inc
push
(bad)
mov
dec
push
push
mov
add
pop
aad
jmp
dec
std
add
xor
imul
dec
cld
mov
cmps
mov
lea
xchg
(bad)
in
push
sbb
das
test
add
and
inc
movs
sbb
adc
add
(bad)
jnp
inc
jge
push
fs
cmp
and
jg
aas
adc
js
out
inc
xchg
pop
(bad)
jecxz
sub
mov
add
xchg
xor
adc
sbb
or
pop
jne
add
sbb
int3
mov
inc
pusha
inc
inc
in
(bad)
mov
xchg
mov
add
gs
pop
or
mov
call
cmc
aad
add
add
and
inc
(bad)
aam
inc
add
fs
pop
cld
sbb
inc
sbb
add
fstp
mov
sar
sub
dec
sar
(bad)
cdq
mov
jno
iret
clc
and
inc
cld
adc
push
aas
repz
add
sar
push
sub
(bad)
imul
add
add
jne
sti
ins
cmp
fidiv
pusha
aas
out
inc
sbb
inc
lahf
jg
inc
xor
out
daa
stc
inc
add
(bad)
inc
rol
inc
cdq
and
inc
push
or
jecxz
or
test
jg
cmp
pop
hlt
pop
cli
ja
add
push
inc
jecxz
jg
pusha
aas
out
loop
add
pop
pop
lds
loopne
enter
add
add
push
scas
inc
mov
add
dec
pop
lock
or
xchg
imul
sub
test
retf
(bad)
(bad)
add
pop
clc
in
pop
fstp
stc
idiv
mov
mov
jnp
inc
add
inc
loopne
jg
adc
clc
js
mov
scas
inc
mov
add
pop
adc
jbe
(bad)
pop
mov
jecxz
jg
pusha
aas
out
loop
add
ds
jg
out
inc
lock
test
(bad)
and
mov
cli
adc
mov
mov
popf
(bad)
pop
mov
jecxz
outs
mov
cmp
sbb
inc
inc
pop
(bad)
popa
cmc
fcom
dec
cld
(bad)
je
lock
or
imul
sub
paddb
push
pop
repz
jnp
icebp
adc
pusha
inc
(bad)
push
(bad)
cmp
push
add
jge
das
cld
ret
jmp
scas
out
pop
stc
push
fidivr
mov
cdq
xlat
inc
add
inc
mov
test
jg
pusha
(bad)
outs
mov
out
inc
mov
inc
add
in
pop
fstp
stc
idiv
mov
mov
jnp
jg
dec
jne
inc
xor
inc
(bad)
aam
dec
dec
test
jg
pusha
(bad)
outs
mov
jge
add
fidiv
fdivr
inc
jecxz
inc
mov
pop
repz
icebp
jg
aas
scas
loop
lahf
lock
mov
cld
adc
push
pop
stc
xchg
ins
jg
pusha
(bad)
outs
mov
test
repz
loopne
mov
int
rcr
inc
sbb
add
sar
xchg
cmp
lahf
jg
inc
xor
out
daa
stc
inc
add
mov
pop
sub
loopne
xor
loopne
inc
enter
jne
xchg
(bad)
aas
fisub
(bad)
pop
mov
scas
ins
fcmove
inc
or
imul
mov
sbb
jmp
sub
in
mov
mov
inc
or
in
call
jmp
cmps
iret
dec
or
jmp
lea
shl
pushf
mov
mov
push
call
aam
out
mov
add
xchg
pop
cmp
out
jg
fsub
push
pop
mov
pushf
(bad)
and
pop
repz
sti
in
push
idiv
neg
mov
push
pop
imul
jge
xlat
pop
cld
test
cdq
sub
inc
sahf
sar
add
bound
cmp
lds
inc
dec
inc
inc
idiv
neg
mov
push
inc
rcr
rcl
scas
psubw
pop
std
imul
sti
pop
pop
repz
sti
in
push
je
fs
pop
imul
jge
xlat
pop
cld
test
cdq
sub
inc
sahf
sar
add
bound
cmp
lds
inc
dec
inc
inc
idiv
neg
mov
push
inc
rcr
rcl
scas
psubw
pop
std
imul
sti
pop
pop
repz
sti
in
push
je
fs
pop
imul
jge
xlat
pop
cld
test
cdq
sub
inc
sahf
sar
add
bound
cmp
lds
inc
dec
inc
inc
idiv
neg
mov
push
inc
rcr
rcl
scas
psubw
pop
std
imul
sti
pop
pop
repz
sti
in
push
je
fs
pop
imul
jge
xlat
pop
cld
test
cdq
sub
inc
sahf
sar
add
bound
cmp
lds
inc
dec
inc
inc
idiv
neg
mov
push
inc
rcr
rcl
scas
psubw
pop
std
imul
sti
pop
pop
repz
sti
in
push
je
fs
pop
imul
jge
xlat
pop
cld
test
cdq
sub
inc
sahf
sar
add
bound
cmp
lds
inc
dec
inc
inc
idiv
neg
mov
push
inc
rcr
rcl
scas
psubw
pop
std
imul
sti
pop
pop
repz
sti
in
push
je
fs
pop
imul
jge
xlat
pop
cld
test
cdq
sub
inc
sahf
sar
add
bound
cmp
lds
inc
dec
inc
inc
idiv
neg
mov
push
inc
rcr
rcl
scas
psubw
pop
std
imul
sti
pop
pop
repz
sti
in
push
je
fs
loop
stc
push
jne
cli
not
mov
mov
neg
lods
scas
adc
stos
add
fwait
imul
lods
imul
cmps
iret
pop
push
jge
aaa
(bad)
aas
gs
mov
xchg
dec
pop
mov
mov
aam
sahf
dec
xor
adc
pop
inc
lock
add
cld
xor
add
jne
repnz
stos
dec
sti
outs
je
out
ret
sub
ja
pop
inc
imul
mov
std
pop
jle
inc
loopne
xchg
(bad)
xor
or
sar
add
jmp
jae
loope
std
xchg
mov
inc
add
icebp
mov
pop
inc
lock
add
cld
xor
add
jne
cli
mov
popf
pop
mov
retf
sbb
sbb
stos
inc
inc
inc
test
sbb
sbb
add
cmp
pop
inc
into
(bad)
(bad)
clc
dec
aas
gs
cli
paddb
inc
ror
cld
push
not
repz
clc
inc
inc
sbb
inc
cld
and
call
test
not
add
inc
outs
call
mov
lods
inc
inc
fild
add
ret
jg
cmp
fsubr
clc
dec
mov
cld
and
add
int
cld
push
not
add
or
inc
(bad)
mov
pop
aas
loope
pop
lods
and
inc
out
jg
inc
mov
std
pop
(bad)
adc
pop
xchg
(bad)
xor
ret
sub
add
jg
pop
inc
xchg
lock
pop
push
nop
jae
idiv
(bad)
adc
push
inc
add
das
dec
inc
sbb
dec
mov
cld
and
idiv
movs
inc
lea
inc
ret
jg
cmp
fsubr
clc
dec
mov
cld
and
add
int
cld
push
not
add
or
inc
(bad)
mov
pop
aas
loope
pop
lods
and
inc
out
ja
fbstp
adc
add
xchg
(bad)
xor
ret
sub
ja
pop
inc
imul
mov
pop
push
nop
jae
idiv
(bad)
adc
pop
inc
lock
add
aas
loope
std
xchg
mov
inc
add
icebp
scas
ret
pop
clc
inc
push
(bad)
clc
inc
push
(bad)
stos
dec
cmp
sti
popf
inc
or
inc
out
test
sbb
cld
inc
mov
std
pop
(bad)
adc
add
pop
xchg
(bad)
xor
or
sar
add
jmp
jae
loope
std
xchg
jg
aas
lock
add
out
(bad)
xor
sbb
retf
arpl
or
std
mov
xchg
lock
pop
push
nop
jae
idiv
(bad)
adc
push
inc
lock
dec
inc
sbb
loope
std
xchg
jg
aas
lock
add
hlt
mov
clc
inc
push
(bad)
clc
inc
push
(bad)
stos
dec
cmp
sti
popf
inc
or
inc
inc
test
sbb
lock
jle
fcomip
sbb
sbb
inc
cld
and
call
test
not
add
or
inc
(bad)
(bad)
clc
dec
mov
cld
and
add
int
cld
imul
(bad)
adc
mov
jmp
ret
sub
ja
pop
inc
imul
mov
std
pop
jle
inc
loopne
xchg
(bad)
xor
or
sar
add
jmp
jae
loope
std
xchg
mov
inc
add
icebp
mov
pop
inc
lock
add
cld
xor
add
jne
cli
mov
popf
pop
mov
retf
sbb
sbb
lods
inc
inc
fild
add
ret
jg
cmp
fsubr
clc
dec
mov
cld
and
add
int
cld
push
not
add
or
inc
(bad)
mov
pop
aas
loope
pop
lods
and
inc
out
ja
fbstp
adc
add
xchg
(bad)
xor
ret
sub
ja
pop
inc
imul
mov
pop
push
nop
jae
idiv
(bad)
adc
pop
inc
lock
add
aas
loope
std
xchg
mov
inc
add
icebp
scas
ret
pop
clc
inc
push
(bad)
clc
inc
push
(bad)
stos
dec
cmp
sti
popf
inc
or
inc
fild
add
retf
sbb
sbb
inc
cld
and
call
test
not
add
or
inc
(bad)
(bad)
clc
dec
mov
cld
and
add
int
cld
imul
(bad)
adc
mov
jmp
ret
sub
ja
pop
inc
imul
mov
std
pop
jle
inc
loopne
xchg
(bad)
xor
or
sar
add
jmp
jae
loope
std
xchg
mov
inc
add
icebp
mov
pop
inc
lock
add
cld
xor
add
jne
cli
mov
popf
pop
mov
retf
sbb
sbb
lods
inc
inc
fild
add
ret
jg
cmp
fsubr
clc
dec
mov
cld
and
add
int
cld
push
not
add
or
inc
(bad)
mov
pop
aas
loope
pop
lods
and
inc
out
ja
fbstp
adc
add
xchg
(bad)
xor
ret
sub
ja
pop
inc
imul
mov
loop
mov
ret
enter
movs
inc
or
inc
out
test
sbb
cld
inc
mov
std
pop
mov
xchg
(bad)
xor
lods
add
in
push
les
sub
push
lahf
lahf
cmc
xlat
aas
not
inc
test
es
cmp
fucomp
clc
dec
inc
gs
cli
(bad)
and
add
int
cld
push
not
add
or
inc
(bad)
mov
sar
add
mov
std
hlt
mov
sbb
idiv
cld
sub
or
add
fwait
dec
mov
inc
sbb
stos
inc
inc
out
test
sbb
adc
add
lahf
sti
jmp
inc
xor
add
in
jae
add
clc
push
in
es
aas
ja
add
aaa
std
xchg
jg
cmp
add
icebp
mov
push
inc
xor
add
cld
and
add
out
cli
pop
lock
cld
idiv
not
pop
xor
fucomp
clc
dec
aas
gs
pop
clc
inc
inc
std
jle
lahf
jecxz
nop/reserved
and
std
mov
xchg
inc
add
clc
inc
sub
out
(bad)
out
ret
inc
sub
out
iret
out
ret
cwde
jae
std
loop
add
mov
or
jg
(bad)
clc
dec
jg
mov
inc
shr
(bad)
adc
psubw
jae
(bad)
lock
stc
in
jae
(bad)
lock
in
es
aas
js
mov
add
sbb
xlat
ret
mov
jl
sti
sub
mov
add
push
inc
or
cld
xbegin
add
cld
xbegin
push
jg
shr
jl
aas
div
cmps
lahf
jmp
push
cs
xchg
fsub
or
shr
dec
inc
sbb
sbb
ret
(bad)
jnp
(bad)
arpl
sub
add
(bad)
arpl
sub
adc
push
xchg
dec
jg
sbb
dec
inc
sbb
aas
gs
cli
or
shr
(bad)
adc
psubw
jae
(bad)
lock
stc
in
jae
(bad)
lock
jle
jg
imul
jg
ja
pop
inc
imul
sbb
call
jp
in
mov
cmp
ins
inc
retf
sbb
xchg
cmp
dec
push
or
add
sti
call
inc
add
lock
scas
xchg
sti
data16
add
daa
cwde
mov
(bad)
ss
push
aam
sbb
push
mov
inc
loop
fisub
les
ret
push
xchg
lds
fsub
mov
sbb
jmp
jae
or
(bad)
outs
adc
lahf
clc
xchg
sahf
aas
in
mov
and
mov
(bad)
popf
fnstsw
cmp
inc
mov
pop
xchg
push
in
rcl
sbb
retf
sbb
pushf
mov
pop
ja
inc
imul
outs
in
fistp
fidivr
dec
cmp
aam
imul
sbb
mov
mov
das
in
jae
int
cmp
xchg
shl
lock
aad
xchg
stos
or
sub
mov
add
mov
sub
rcr
int3
mov
push
into
(bad)
jo
mov
pop
sbb
mov
loop
fstp
aad
movs
scas
xlat
dec
das
fadd
idiv
lock
jmp
mov
jecxz
popf
cs
push
xchg
cmp
mov
scas
and
addr16
or
sar
sbb
in
and
mov
xor
fs
(bad)
pop
pop
xchg
mov
mov
mov
lods
cld
jmp
sbb
ret
inc
or
loop
test
or
fcomp
fst
retf
pop
ss
jnp
pop
das
fadd
sahf
mov
mov
jbe
stos
call
inc
xchg
mov
push
clc
retf
mov
ss
mov
dec
loop
xchg
iret
into
aas
or
push
(bad)
pop
daa
shl
sub
aam
in
adc
dec
out
cmc
push
inc
sbb
cmp
add
ror
lods
hlt
sbb
push
mov
cmps
jl
std
movs
xor
imul
mov
jns
xor
inc
in
in
imul
imul
clc
std
loop
fisub
loope
xlat
mov
imul
stos
push
cdq
sbb
(bad)
mov
inc
inc
mov
push
lods
push
push
dec
push
fmul
in
iret
int
mov
aas
les
(bad)
ror
adc
mov
add
retf
test
jns
movs
js
pushf
mov
fcmovnu
mov
(bad)
(bad)
mov
pop
jns
aaa
ret
mov
mov
inc
ror
xchg
adc
shl
aas
dec
jmp
fcos
add
xchg
mov
sbb
dec
mov
push
pop
test
iret
jo
mov
test
pop
clc
lods
jecxz
in
clc
stc
jnp
xchg
cmc
in
aas
add
rcl
sbb
jecxz
dec
xchg
and
stc
cwde
arpl
fldl2t
pop
lahf
mov
in
leave
paddsb
icebp
add
xlat
dec
mov
les
mov
sbb
(bad)
enter
or
call
add
iret
cld
and
pop
inc
call
idiv
pop
fstp
or
push
xlat
mov
imul
ins
cmp
cdq
dec
sbb
mov
daa
mov
xchg
out
sub
mov
mov
and
inc
pop
add
jmp
inc
aad
inc
mov
push
jmp
pop
ins
dec
cwde
jns
xor
out
repz
test
push
ret
aas
mov
adc
shl
mov
jae
outs
in
dec
adc
xor
xor
adc
(bad)
fdivr
in
popa
lock
clc
mov
lea
ret
mov
dec
push
jae
es
inc
push
xor
add
cmps
movs
jp
(bad)
out
fld
(bad)
aas
mov
and
out
xchg
jg
fdiv
inc
add
fcom
add
clc
ret
ret
imul
cli
mov
add
xchg
ret
and
adc
sub
jb
lock
psubusw
daa
sar
sbb
push
mov
cmp
dec
mov
outs
cmc
or
movs
pusha
(bad)
jmp
jge
repnz
mov
pop
jns
scas
(bad)
dec
pop
dec
std
lock
loope
and
push
(bad)
cmc
jns
retf
repnz
push
sti
and
push
jo
inc
ins
std
fidiv
fsub
dec
pop
(bad)
rcr
or
pop
mov
sub
xchg
mov
scas
add
scas
movs
dec
add
cli
jae
xor
outs
ret
jecxz
sub
ror
dec
inc
lock
icebp
jmp
jmp
fist
jmp
mov
jno
xchg
pop
int3
je
popa
pop
retf
mov
pop
add
fstp
mov
jle
fist
shr
mov
test
loop
cmp
pop
in
push
pop
cmp
loope
pop
test
xor
push
clc
add
es
not
sub
cdq
sbb
fs
lds
test
ins
ret
sub
add
clc
fwait
lock
cli
cmps
mov
mov
call
jbe
fadd
es
inc
jno
das
mov
add
ins
aas
hlt
or
test
add
xor
(bad)
and
pop
jbe
ficom
mov
push
push
jbe
mov
idiv
in
dec
mov
inc
adc
mov
jae
scas
aad
adc
je
xchg
loope
xchg
or
imul
adc
jle
jbe
xchg
mov
add
clc
sbb
xlat
adc
jecxz
call
mov
add
popa
xchg
push
mov
inc
retf
lods
mov
mov
jmp
ds
daa
clc
pop
loope
inc
mov
fwait
sbb
sub
je
ds
in
xchg
sti
paddb
clc
jne
outs
sbb
push
(bad)
jecxz
mov
fwait
leave
daa
mov
and
ret
jns
ins
shl
mov
daa
call
add
jmp
inc
shr
hlt
fsub
dec
inc
in
or
loop
mov
cld
sbb
xor
hlt
fwait
div
cld
cmp
mov
mov
sbb
mov
or
mov
sbb
push
add
mov
sub
(bad)
mov
pop
out
test
push
mov
mov
lds
fsub
sbb
xlat
push
push
jle
rcr
pop
sbb
add
inc
mov
mov
cld
xor
pop
imul
enter
xor
inc
add
clc
adc
add
mov
or
mov
into
pop
retf
imul
xor
add
or
dec
int3
or
mov
fwait
lds
xchg
lahf
add
or
mov
ja
inc
clc
jp
pop
lock
std
sahf
dec
mov
mov
mov
int3
jle
jl
aam
adc
sahf
mov
ss
fidivr
ret
sbb
and
jg
hlt
jb
addr16
call
aam
cmp
shl
sti
retf
or
jecxz
dec
ins
xchg
and
jbe
(bad)
mov
pop
pop
pop
in
inc
(bad)
movs
stos
clc
jnp
mov
(bad)
mov
leave
and
stc
call
ds
(bad)
sub
ds
clc
add
test
leave
movs
inc
push
cdq
sub
aam
sbb
xchg
push
inc
fsub
fs
push
pop
icebp
outs
loope
mov
imul
pop
(bad)
outs
pushf
ins
in
pop
int3
mov
hlt
scas
(bad)
(bad)
loope
ret
lahf
sbb
lea
add
cs
ins
dec
dec
jns
popa
gs
xchg
dec
add
xchg
and
imul
adc
retf
add
dec
jb
jnp
or
loop
fdivr
xchg
and
or
cmp
mov
das
daa
jge
in
cld
out
add
jmp
mov
add
clc
or
ins
cmp
cmp
imul
fisubr
daa
mov
mov
cmps
in
xchg
mov
add
dec
sar
call
(bad)
mov
jne
cld
dec
lock
les
dec
inc
push
lock
cmps
mov
rcr
outs
mov
pop
add
jns
lods
(bad)
es
mov
adc
add
aas
mov
xor
shr
je
push
push
mov
in
lods
jle
xor
nop
adc
sbb
pop
enter
arpl
xchg
in
push
lock
push
dec
clc
jg
shl
sar
jge
mov
xor
out
sbb
and
and
fistp
mov
mov
sahf
fldcw
adc
inc
clc
inc
loope
icebp
pop
xchg
dec
pop
(bad)
std
ds
jge
xlat
sub
lock
out
sbb
jg
fld
dec
xchg
dec
mov
cdq
outs
and
mov
push
mov
mov
pop
sbb
into
adc
inc
pop
fidiv
push
mov
jl
add
loop
clc
es
xor
inc
cmps
imul
dec
add
stos
out
cli
or
push
dec
jle
pop
adc
aaa
clc
push
pop
jg
xchg
dec
mov
mov
pop
dec
and
scas
pop
sub
xor
ds
cli
lods
lock
loop
scas
jecxz
dec
loop
mov
call
imul
test
(bad)
jo
jo
mov
cmps
or
adc
js
pop
xchg
ins
cmp
out
cdq
(bad)
sbb
lea
jge
jbe
xchg
pop
fwait
jle
std
mov
jl
icebp
out
mov
cmps
popf
sub
push
int
jo
adc
add
and
fucom
add
dec
iret
mov
fidiv
mov
into
movs
cmps
pop
sar
and
mov
loope
repnz
aas
mov
pop
fcos
add
aas
fnstcw
mov
(bad)
mov
mov
aaa
add
(bad)
adc
inc
fistp
ja
call
das
inc
or
mov
in
fcomp
in
ret
cld
adc
add
push
xchg
mov
add
(bad)
std
test
ficom
(bad)
jl
loop
int
les
jl
pop
lods
push
add
jg
cli
or
and
xlat
inc
mov
mov
sbb
xor
sub
pop
data16
xchg
pop
retf
ja
sub
lods
xor
jle
pop
push
mov
mov
call
loop
xchg
pop
enter
and
sub
xchg
push
push
cmp
loopne
in
cmps
jecxz
fidiv
out
(bad)
adc
fld
mov
out
in
cdq
fmul
hlt
scas
mov
lock
inc
mov
cmp
jne
lds
xchg
loop
cmp
mov
jmp
add
push
xor
lahf
push
xchg
or
outs
outs
paddsb
sub
pop
inc
dec
jg
int3
and
fisttp
ret
or
jg
pop
mov
daa
lahf
dec
icebp
mov
fiadd
sub
int
mov
push
sbb
mov
scas
xor
pop
cld
test
jo
rcl
les
push
js
imul
cmps
jmp
push
xchg
mov
add
jmp
xor
icebp
aas
dec
div
(bad)
loop
ret
jge
push
clc
pop
out
fisub
add
and
xchg
add
cmp
xor
jp
mov
jle
js
ud2
js
fisub
cmps
xor
dec
lods
jnp
dec
mul
in
outs
inc
lahf
mov
ret
pop
mov
add
push
mov
in
mov
in
push
sbb
xchg
mov
mov
fsub
sub
ror
(bad)
lods
cmc
or
mov
dec
push
xor
(bad)
retf
xlat
daa
mov
pop
xchg
fdivr
sbb
test
xchg
cld
pop
sti
xor
dec
nop
jmp
jg
mov
cmc
pop
aaa
out
fsubr
repnz
add
adc
loope
add
scas
cs
jae
add
jmp
(bad)
in
fwait
ins
mov
fnsave
scas
pop
movs
jnp
xchg
inc
add
clc
add
pop
jge
ret
jp
xchg
(bad)
test
push
fsubrp
out
js
mov
and
adc
cmp
aam
adc
jge
in
jle
push
pop
push
(bad)
or
call
pop
push
aas
lock
or
mov
cmp
sub
pop
sbb
repz
jmp
addr16
pop
shl
pushf
js
hlt
inc
mov
lea
in
dec
add
outs
or
(bad)
neg
ja
shl
mov
fisubr
aam
imul
cmp
mov
mov
cs
ss
mov
cmp
mov
xor
call
push
aam
jo
inc
jp
leave
push
xchg
push
inc
dec
add
adc
sbb
aas
ins
cmp
enter
shl
adc
pusha
mov
shl
adc
shl
adc
shl
adc
add
(bad)
(bad)
xor
rol
stos
jle
repnz
jp
shr
mov
je
aas
imul
jg
jge
add
das
inc
jecxz
ds
sub
jg
and
inc
inc
pusha
mov
jl
pop
ins
inc
shr
in
clc
(bad)
inc
daa
inc
inc
or
and
xchg
pop
jl
shr
sub
pop
in
mov
xor
ret
xlat
sub
scas
or
mov
shl
dec
shl
mov
aas
ins
jg
inc
fcomp
push
xlat
pop
icebp
out
push
pop
adc
cmp
(bad)
aaa
mov
and
adc
pextrw
sbb
or
(bad)
jg
jae
or
sub
clc
mov
(bad)
loopne
scas
jno
test
(bad)
not
dec
(bad)
cld
test
loop
add
sbb
mov
inc
popf
cld
pop
sbb
popw
jno
call
cmps
(bad)
fistp
add
dec
mov
or
cli
adc
cmp
sar
push
(bad)
icebp
or
pop
daa
ins
stos
cli
pushf
push
rcl
aas
fisttp
dec
lock
jg
push
sub
pop
add
retf
test
jg
jecxz
imul
dec
loopne
(bad)
(bad)
cli
fmul
in
or
xchg
inc
(bad)
inc
scas
mov
loope
mov
add
retf
js
sti
ds
push
aas
add
inc
(bad)
sbb
out
out
inc
xchg
enter
aad
clc
and
inc
sti
or
xchg
mov
mov
cdq
mov
jg
sub
psubq
dec
cld
xchg
mov
iret
pop
out
pop
cmp
ss
inc
lock
ins
pusha
adc
in
div
lds
lahf
fisubr
loopne
sti
cli
iret
(bad)
xchg
sub
sahf
rol
pop
lock
cmp
popa
mov
jbe
aam
hlt
or
clc
repz
and
scas
xor
push
adc
hlt
push
aam
fcomp
adc
mov
add
std
imul
lahf
adc
add
arpl
add
ins
pop
pop
cld
adc
ret
inc
scas
retf
jg
add
pushf
jg
pop
cld
jne
push
ss
jg
imul
aam
cwde
outs
outs
out
mov
sub
arpl
xchg
push
jno
inc
jp
cld
adc
inc
pop
sbb
mov
(bad)
pop
xor
test
gs
std
popf
cmp
scas
fsubr
sahf
push
lea
shl
(bad)
add
ins
sbb
sbb
add
mov
clc
test
cmp
xlat
mov
das
cmp
xor
(bad)
sub
lahf
clc
sub
in
xchg
loop
fcomip
in
inc
movs
jmp
shl
push
test
inc
sar
daa
dec
aam
retf
lods
jb
out
in
daa
jecxz
sbb
mov
xchg
hlt
sbb
sar
rcr
jg
icebp
sahf
(bad)
call
dec
ja
inc
inc
arpl
sub
lods
add
push
mov
leave
aas
hlt
push
scas
lods
mov
clc
and
aas
add
fwait
stc
push
sub
jg
inc
out
je
push
daa
sbb
out
gs
dec
jle
jmp
lds
movs
cmps
js
sbb
(bad)
neg
or
in
xor
ds
movs
inc
push
xchg
sub
push
xchg
push
movs
xor
imul
or
pop
popa
cld
jno
arpl
pop
pop
jmp
ja
ss
fcom
xchg
push
into
cmp
pop
pop
repnz
(bad)
lahf
sbb
add
fneni(8087
mov
outs
scas
popa
pop
mov
xlat
mov
jl
sbb
jae
jecxz
repnz
mov
cmps
lods
ins
inc
sahf
mov
imul
push
cmp
jecxz
or
(bad)
cli
in
ss
ins
mov
jmp
and
adc
pop
sahf
pop
lock
scas
mov
clc
mov
or
push
add
push
pop
xchg
test
dec
jnp
mov
sbb
xor
mov
pop
mov
pop
dec
lock
test
stos
fwait
pop
jle
mov
mov
ds
adc
(bad)
jb
mov
pop
or
repnz
hlt
cmp
inc
jnp
push
fdiv
aas
clc
and
cld
mov
adc
add
repnz
add
mov
add
mov
hlt
mov
movs
xchg
lock
mov
inc
sub
pop
jle
cmps
fnsave
(bad)
out
aas
adc
add
repnz
add
mov
ins
pop
fcom
loop
mov
aam
ins
and
adc
sub
stos
test
cld
daa
scas
jle
pop
aaa
in
sub
add
jecxz
inc
ins
aas
stc
xor
outs
(bad)
mov
jmp
pop
inc
scas
sbb
push
cmp
adc
add
cmp
pop
or
cld
cdq
outs
mov
add
ja
call
psllq
dec
pop
test
inc
rcl
sub
and
add
lock
bound
fiadd
fld
in
sahf
(bad)
pop
push
xchg
mov
add
int3
cmp
inc
pusha
mov
jl
clc
cmp
idiv
cld
pop
cmps
sub
push
push
nop
daa
and
add
aam
jae
push
inc
outs
retf
call
(bad)
lock
dec
nop
leave
sub
mov
cld
lea
xlat
mov
inc
mov
inc
in
xchg
and
add
xor
jecxz
test
pop
adc
test
ror
adc
mov
fbstp
inc
sbb
inc
outs
pop
cs
and
data16
icebp
ja
cld
lds
test
xchg
(bad)
addr16
xor
in
enter
into
mov
sti
out
add
adc
push
loopne
retf
pop
(bad)
into
test
pop
fldenv
ss
pushf
jns
rcl
pop
mov
out
mov
fidiv
xchg
inc
inc
lods
data16
lahf
repnz
mov
lods
inc
hlt
xchg
mov
popa
(bad)
sbb
inc
aam
xor
xchg
dec
mov
dec
push
add
adc
stos
pop
mov
hlt
add
(bad)
std
movs
sub
shl
scas
fxch
and
fst
shl
mul
aas
add
loopne
inc
fmul
inc
shl
inc
shl
inc
or
inc
fistp
ret
fisttp
fist
ds
neg
ja
cmp
ins
push
(bad)
pop
outs
sbb
jl
icebp
scas
cdq
ins
sti
pop
jl
lock
repnz
adc
or
sub
and
push
mov
jne
outs
ja
stos
ins
aas
les
pop
retf
mov
push
dec
add
std
nop
mov
jecxz
(bad)
std
addr16
mov
push
mov
daa
lea
sub
xor
sbb
or
lds
shl
imul
or
aas
xchg
(bad)
push
aaa
sar
cld
outs
std
mov
lahf
dec
mov
push
xchg
nop
inc
or
and
adc
addr16
lahf
mov
in
ins
jecxz
add
lea
inc
loope
or
add
pop
xor
dec
repz
sbb
sub
popa
in
inc
jmp
das
test
mov
cmp
inc
movs
push
into
sbb
xor
arpl
popf
mov
inc
add
das
adc
add
int3
(bad)
es
xor
add
addr16
dec
sbb
arpl
test
loop
sub
sar
iret
inc
add
icebp
xlat
ret
outs
sub
pushf
xchg
cmp
scas
test
arpl
mov
cmp
mov
add
movs
mov
imul
and
imul
pop
lahf
cmps
fisubr
or
add
fbld
jmp
imul
inc
jle
jmp
xchg
jno
add
pop
icebp
setno
je
rcr
xor
std
cld
(bad)
xlat
dec
cmp
jno
mov
add
xchg
mov
retf
(bad)
adc
sahf
inc
in
arpl
movs
aad
repnz
xchg
inc
into
cmps
cmp
(bad)
mov
and
jmp
xchg
cmp
iret
popa
lods
and
and
add
pop
mov
fisttp
pop
call
cmps
adc
push
pop
retf
and
in
fidivr
iret
clc
dec
aas
imul
push
pop
ins
sti
gs
dec
cmp
xlat
ficom
pop
addr16
jmpw
and
xor
pop
lock
int
jmp
sbb
or
sbb
dec
std
xor
sbb
jmp
leave
out
out
inc
jge
inc
inc
dec
pop
add
add
pop
aas
in
mov
sub
add
ins
xchg
cli
ins
movs
cld
xor
int3
clc
leave
scas
clc
out
in
(bad)
popa
aam
fistp
pop
stc
js
test
push
fstp
sbb
or
neg
daa
xchg
dec
shl
fldenv
data16
fild
pop
les
cmp
fdiv
jecxz
les
jbe
add
add
inc
mov
sbb
xor
imul
int
sahf
ss
ret
mov
fs
jb
cmp
aas
jbe
pop
clc
push
loopne
(bad)
loope
pop
fiadd
movs
outs
jmp
push
push
mov
sbb
xor
repnz
clc
es
mov
push
aaa
rep
icebp
push
stos
and
jmp
mov
mov
adc
jp
mov
out
mov
inc
push
cmp
xchg
retf
in
cmp
lods
fbstp
pushf
outs
cld
adc
ret
mov
inc
imul
shl
(bad)
lahf
cmps
jmp
sub
out
lds
jecxz
rcr
call
push
test
jno
sahf
lods
mov
mov
sub
jg
dec
pusha
inc
pop
adc
add
je
push
retf
xchg
mov
dec
xor
cmp
shl
mov
std
sahf
jle
clc
stos
jecxz
xchg
push
mov
ret
test
sbb
push
and
pushf
arpl
retf
pop
sbb
cld
adc
repnz
add
push
fisubr
jmp
retf
nop
jp
aad
inc
pop
aas
imul
mov
sub
fcomp
adc
xchg
arpl
stos
dec
retf
stos
inc
scas
jle
repz
xchg
les
stc
pop
loope
jle
mov
in
pop
sub
push
inc
stos
mov
mov
pop
bound
test
fwait
sti
(bad)
out
pop
inc
shl
aad
lahf
pop
mov
(bad)
sub
xchg
mov
call
mov
xor
push
lea
push
xor
cld
or
pop
mov
ds
sar
mov
pop
cmc
mov
outs
sbb
push
clc
push
loop
add
mov
fisub
push
jbe
and
(bad)
jbe
movs
jl
icebp
out
ret
clc
jae
iret
(bad)
pop
pop
cld
inc
imul
inc
sbb
fidivr
xchg
and
inc
daa
sbb
sbb
lds
ss
mov
dec
imul
mov
rcr
xor
jecxz
sbb
add
ret
sbb
push
mov
jg
pop
ret
js
iret
dec
(bad)
neg
int
stos
pop
movs
div
leave
xor
mov
mov
fadd
ss
pop
loop
pop
lock
cld
addr16
ret
outs
xchg
leave
mov
fwait
adc
jne
ss
mov
xor
sbb
pop
mov
pop
jmp
mov
scas
lds
pop
lds
outs
sbb
mov
sete
and
adc
idiv
and
mov
or
std
stos
and
shl
sub
rcr
mov
(bad)
jne
bnd
pop
(bad)
pop
pop
and
test
fdivr
dec
sub
ins
mov
inc
dec
mov
mov
push
mov
ror
ror
inc
jnp
fist
dec
(bad)
fmul
sub
push
sub
push
sub
push
sub
daa
inc
add
cmp
scas
cmp
out
xchg
(bad)
inc
cmp
sar
add
dec
psubw
out
add
mov
stos
mov
push
test
shr
and
lds
push
das
es
mov
fcomp
arpl
test
mov
loop
mov
dec
(bad)
push
fistp
sub
mov
pop
jg
push
and
sub
(bad)
cmp
jle
pop
loope
xor
enter
cmc
lods
dec
sbb
mov
jge
(bad)
sti
lds
aad
sti
stos
push
sub
sbb
jae
xchg
js
pushf
mov
mov
jl
hlt
clc
jg
fisttp
dec
cmps
les
aaa
xor
mov
(bad)
neg
adc
mov
inc
sar
into
add
jge
out
and
mov
cmps
test
cmp
jl
clc
mov
inc
xlat
mov
xor
(bad)
leave
adc
pop
xor
pop
repz
clc
mov
mov
aas
adc
movs
cmp
(bad)
in
dec
in
repnz
out
in
loop
sub
and
cmp
dec
dec
mov
xor
dec
dec
out
cmp
icebp
stos
loop
xor
cmp
jecxz
imul
cmp
mov
out
sbb
jp
push
scas
dec
ins
sbb
dec
xor
jecxz
mov
pop
les
cmc
(bad)
mov
jmp
popf
cmp
xchg
clc
stc
mov
add
in
jns
retf
inc
rcl
jmp
dec
and
(bad)
xor
pop
jno
inc
dec
repz
(bad)
aad
pop
in
mov
pop
mov
lea
mov
aam
dec
and
dec
scas
rol
pop
push
cmp
lock
loop
ret
aad
cmp
sub
shr
adc
out
popf
mov
cmps
test
popf
out
cmp
push
and
pop
mov
ds
pop
aad
push
dec
das
outs
in
gs
test
dec
add
adc
pop
les
xchg
cli
jg
mov
sar
rol
fnsave
repnz
or
push
sub
sub
xchg
mov
sar
leave
loop
loop
inc
(bad)
adc
into
jle
pop
mov
xlat
cmp
stos
jle
clc
movs
jecxz
add
mov
fidivr
xor
mov
jecxz
adc
lea
(bad)
mov
jl
loope
hlt
pop
pop
loop
lods
ins
movs
mov
xchg
mov
sub
cmps
shl
pop
push
jg
stos
loop
jp
pop
(bad)
cmc
sbb
int
imul
push
and
aaa
test
test
inc
fimul
adc
jg
imul
call
sub
retf
mov
mov
sbb
fwait
sti
inc
pop
aad
xor
push
aam
pop
leave
cmp
and
aad
mov
xor
aad
daa
je
es
js
loop
mov
(bad)
pop
clc
dec
lds
xchg
and
adc
push
shl
add
lods
jle
lahf
sbb
cmps
les
fldcw
jne
loopne
std
sub
inc
adc
adc
cmp
jecxz
lds
call
aas
icebp
add
cmp
dec
pop
sbb
jmp
and
jmp
or
cmps
(bad)
mov
std
and
jnp
scas
frstor
iret
inc
sbb
setge
jl
icebp
jle
test
mov
sar
cmovno
lds
aas
push
xchg
std
fwait
jno
adc
mov
adc
dec
mov
mul
adc
sbb
fdivr
fnstcw
les
lahf
jecxz
pop
jmp
imul
sbb
aaa
xor
jle
js
ret
repz
adc
jmp
mov
cli
inc
adc
xor
xchg
iret
dec
add
inc
mov
pusha
out
fild
sysexit
sbb
or
aaa
mov
pop
pop
retf
cmp
sahf
mov
js
neg
inc
fwait
inc
icebp
jg
sub
scas
mov
call
sbb
inc
adc
sbb
jl
clc
pop
movs
dec
cmps
js
(bad)
sbb
int
or
mov
sbb
movs
lock
inc
mov
mov
pop
jmp
cmp
or
retf
inc
(bad)
cmp
or
pusha
ins
mov
sar
(bad)
jg
inc
cld
fs
pop
aam
pop
(bad)
and
mov
int
aad
movs
xchg
aam
ficom
sbb
add
add
pop
ret
(bad)
push
clc
sar
ret
jmp
mov
aam
out
add
fiadd
sahf
sub
or
(bad)
clc
iret
mul
bswap
mov
cmc
imul
aaa
pop
jl
cmp
jbe
sbb
mov
cld
jno
scas
(bad)
out
pop
or
push
lock
ror
ret
or
ins
mov
inc
out
xchg
mov
cmc
jge
loop
xchg
mov
fsubr
mov
repz
adc
add
(bad)
cmps
cld
adc
mov
mov
sbb
fsubrp
cmp
inc
mov
adc
stc
fnsave
mov
into
js
into
ret
lea
cld
pop
jecxz
addr16
les
stos
jmp
jo
lock
add
xchg
push
nop
je
or
pop
shr
cdq
dec
mov
js
and
mov
call
in
lods
push
sub
repnz
in
jae
xlat
jg
pop
mov
and
das
mov
dec
dec
outs
jne
inc
enter
add
sbb
scas
arpl
sbb
sbb
cmps
jae
imul
mov
dec
push
in
fsub
les
fnsave
ret
out
jae
sti
dec
jl
mov
(bad)
daa
xor
movs
pop
sbb
add
sbb
mov
dec
test
outs
xchg
ret
aam
or
mov
test
fwait
sbb
jno
pushf
outs
es
shl
cs
mov
mov
(bad)
fstp
loop
(bad)
repnz
mov
sub
bound
repnz
scas
out
repnz
fdiv
dec
arpl
ins
cmp
test
(bad)
ss
jecxz
adc
cmp
xchg
push
lock
mov
ins
sti
inc
test
ss
ins
jo
fmul
inc
cld
popa
clc
stos
movs
mov
loop
push
jmp
and
and
inc
add
retf
out
rcl
jg
(bad)
push
jmp
shl
retf
mov
add
loope
mov
lods
inc
mov
mov
jmp
cmps
stos
imul
mov
add
cld
or
rol
fwait
ret
ds
cmp
in
jp
test
outs
lods
call
sub
ret
aaa
and
pop
or
dec
(bad)
fisubr
lock
mov
cmp
cmps
js
push
mov
adc
fimul
or
outs
sbb
iret
xor
jnp
jbe
jbe
pop
sbb
inc
icebp
mov
jl
loop
push
les
ja
aas
mov
call
jmp
imul
lea
sar
jmp
imul
mov
push
add
pop
inc
in
add
mov
ss
adc
cmp
shr
jp
test
das
sahf
not
dec
iret
cmp
std
in
std
jae
pop
mov
in
jne
(bad)
fild
mov
in
fst
mov
push
out
push
lods
pusha
out
je
not
repz
int
jns
out
scas
daa
jb
and
movs
cwde
repnz
mov
inc
fcmovbe
xor
inc
mov
cmp
adc
imul
shl
lea
pusha
or
cmc
cmps
ins
lods
adc
xchg
dec
les
shl
mov
ins
mov
push
sub
mov
add
sar
dec
sti
rcr
inc
movs
aaa
adc
das
dec
jmp
fistp
stos
mov
ds
in
inc
dec
inc
je
fwait
xchg
push
push
rol
in
push
mov
pusha
mov
pop
cs
inc
dec
inc
push
or
and
push
mov
pusha
mov
pop
cs
inc
dec
inc
push
or
and
push
mov
pusha
mov
pop
cs
inc
dec
inc
push
or
and
push
mov
pusha
mov
pop
cs
inc
dec
inc
push
or
and
push
mov
pusha
mov
pop
cs
inc
dec
inc
push
or
and
push
mov
pusha
mov
pop
cs
inc
dec
inc
push
or
and
push
mov
pusha
mov
pop
cs
inc
dec
inc
push
or
and
rcr
shl
ss
sub
or
ror
cs
sbb
imul
push
ins
mov
jecxz
shl
add
movs
fild
sub
and
inc
ficom
add
lahf
inc
push
or
cmp
add
add
idiv
nop
fcom
adc
jecxz
dec
out
sar
inc
movs
aaa
adc
jp
loopne
in
jmp
ds
int3
gs
sub
xchg
push
call
mov
clc
mov
clc
mov
clc
mov
clc
mov
clc
mov
clc
mov
clc
mov
clc
mov
clc
mov
clc
mov
clc
mov
clc
mov
clc
mov
clc
mov
clc
mov
clc
mov
clc
mov
clc
mov
clc
mov
clc
mov
clc
mov
clc
mov
mov
gs
sub
xchg
push
call
mov
mov
gs
sub
xchg
push
call
mov
mov
gs
sub
xchg
push
call
mov
mov
gs
inc
add
inc
xchg
mov
jg
or
inc
inc
sar
in
mov
(bad)
inc
jno
(bad)
(bad)
adc
sbb
xchg
repz
fidiv
shr
lods
mov
mov
data16
aas
fldcw
mov
lea
lahf
or
pop
fs
stos
jno
mov
or
rol
mov
loop
jle
mov
jecxz
daa
std
mov
(bad)
repz
into
mov
jae
xchg
test
ds
adc
stos
test
mov
(bad)
and
outs
rcl
mov
cmp
add
inc
dec
jecxz
add
sub
adc
not
pop
xchg
inc
aaa
(bad)
addr16
icebp
jne
aas
rcr
inc
ret
imul
mov
ret
inc
cld
pop
(bad)
inc
les
add
and
add
inc
lock
pop
inc
adc
push
dec
sti
aas
or
add
cli
aad
out
(bad)
loope
mov
pop
loope
add
or
inc
loop
inc
xchg
lock
adc
inc
clc
das
(bad)
inc
mov
aas
or
add
cli
aad
out
(bad)
loope
mov
pop
loope
add
or
inc
loop
inc
xchg
lock
adc
inc
clc
das
(bad)
inc
mov
add
test
inc
ret
mov
cmps
fsub
mov
fwait
xchg
scas
pop
int3
movs
arpl
cdq
outs
dec
sub
scas
fst
xor
xchg
and
pop
lock
push
inc
mov
inc
add
adc
ret
imul
mov
ret
inc
cld
pop
(bad)
inc
les
lods
jle
mov
loope
cmovno
sbb
fdiv
mov
out
ret
or
stc
retf
aam
call
ret
js
inc
lock
mov
add
leave
and
test
adc
das
data16
shl
inc
or
sbb
ds
or
iret
pop
adc
stc
mov
xchg
out
push
or
push
repz
aas
loope
mov
pop
loope
add
or
inc
loop
inc
xchg
lock
adc
inc
clc
das
(bad)
inc
mov
aad
sub
cmp
(bad)
mov
pop
fwait
ins
ss
adc
and
loop
bound
ret
imul
cmp
mov
dec
jmp
mov
xor
push
inc
dec
ins
ror
mov
stos
addr16
pop
mov
push
pushf
xchg
mov
mov
aad
cmp
mov
lahf
mov
ja
cld
jbe
out
inc
loope
mov
pop
loope
add
or
inc
loop
inc
xchg
lock
adc
inc
clc
das
(bad)
inc
mov
out
xchg
and
clc
addr16
sbb
(bad)
sar
inc
out
repnz
xor
jge
xor
jl
jge
pop
aam
xchg
sti
push
mov
(bad)
jg
fisub
les
stc
cmp
jge
pop
fnstenv
jo
test
mov
xor
popf
mov
lods
cmp
movs
xor
cmps
loopne
jbe
scas
mov
loope
mov
pop
loope
add
or
inc
loop
inc
xchg
lock
adc
inc
clc
das
(bad)
inc
mov
iret
paddb
sbb
aam
pop
int
push
ss
lods
cmps
push
bound
push
jmp
out
idiv
dec
loop
mov
gs
adc
test
sbb
jecxz
jmp
push
cs
adc
sbb
imul
xchg
and
jge
ret
test
xchg
ins
(bad)
sub
std
adc
fcomip
fcmovu
push
inc
mov
inc
add
adc
ret
imul
mov
ret
inc
cld
pop
(bad)
inc
les
and
out
scas
mov
pop
fsubr
ret
dec
lock
pop
(bad)
jne
or
mov
mov
xchg
add
(bad)
mov
jle
loope
adc
fidivr
fcmovu
addr16
xlat
int
or
xor
push
jnp
mov
inc
ret
imul
mov
ret
inc
cld
pop
(bad)
inc
les
add
and
add
inc
lock
pop
inc
adc
xchg
add
mov
aas
pop
(bad)
addr16
stos
jg
in
dec
inc
or
and
add
inc
lock
pop
inc
adc
ss
mov
inc
sar
jne
or
mov
sbb
sbb
shr
push
and
repnz
push
cmp
cld
jmp
ret
mul
pusha
clc
cmc
aas
xor
ins
adc
ins
mov
push
fs
stc
push
cmps
sbb
cmp
sbb
movs
aaa
jle
fimul
shl
jg
fcomip
xlat
cmp
mov
pop
jbe
sti
pop
enter
(bad)
lock
adc
inc
clc
das
(bad)
inc
mov
fcomip
inc
(bad)
pop
inc
loopne
aas
(bad)
and
dec
xchg
cmp
jecxz
cmp
xchg
pop
daa
rcr
add
sahf
sar
xor
mov
ffreep
pop
mov
arpl
pop
sbb
aad
(bad)
sahf
lods
push
pop
mov
ror
gs
mov
das
mov
cmp
fsub
xchg
out
scas
pop
mov
jbe
xor
inc
push
(bad)
push
fild
imul
clc
ins
outs
movq
pop
clc
jg
add
mov
loope
mov
pop
loope
add
or
inc
loop
pushf
std
lahf
mov
loop
mov
stos
clc
jp
dec
mov
ds
cmp
inc
dec
test
fsubr
cmc
scas
inc
loop
in
stc
loop
pop
dec
loop
(bad)
retf
dec
mov
mov
int3
rol
loope
xor
inc
inc
daa
ja
das
pop
(bad)
hlt
mov
jb
push
push
in
retf
fidivr
mov
mov
xchg
movs
stos
imul
lods
mov
(bad)
sbb
fcomip
inc
(bad)
pop
inc
loopne
aas
(bad)
and
jg
pop
clc
jg
add
mov
std
xchg
jg
lahf
(bad)
jns
cmp
ja
push
xchg
mov
mov
aam
bound
inc
hlt
in
pop
ficom
das
fld
mul
adc
stos
push
inc
and
ins
pop
aas
and
fwait
mov
dec
aaa
lea
arpl
cdq
iret
sub
cmp
retf
push
jo
sti
xor
fild
push
(bad)
push
movs
stos
inc
call
mov
add
and
add
inc
lock
pop
inc
adc
ss
mov
inc
sar
jns
xchg
fisttp
cmp
cdq
loope
cdq
mov
mov
mov
sbb
xor
or
int
clc
aas
loopne
(bad)
jl
jno
shl
cs
add
lock
jae
mov
retf
lahf
retf
sti
push
xchg
push
sar
in
jge
fst
jmp
mov
fisttp
xor
cmps
(bad)
sbb
fcomip
inc
(bad)
pop
inc
loopne
aas
(bad)
and
jg
pop
clc
jg
add
mov
mov
cmp
xor
ficomp
mov
dec
hlt
mov
add
cmp
popf
push
clc
mov
dec
(bad)
fisttp
rcr
dec
adc
adc
nop
pop
ss
mov
arpl
ja
xor
push
mov
(bad)
loope
mov
imul
inc
call
cs
cmp
mov
repnz
ret
fcomip
inc
(bad)
pop
inc
loopne
aas
(bad)
and
jg
pop
clc
jg
add
mov
std
xchg
mov
js
jne
in
outs
push
aam
fs
dec
arpl
lea
push
dec
cmp
imul
pop
loop
sbb
sbb
cld
dec
loop
sbb
xor
imul
enter
mov
jecxz
fsubr
cmp
adc
lock
lea
mov
dec
pop
push
in
mov
ja
ret
jecxz
push
test
pop
pop
ins
jg
cmps
inc
or
and
add
inc
lock
pop
inc
adc
ss
mov
inc
sar
jns
mov
push
mov
cld
cmp
loope
daa
push
mov
ds
pop
sub
push
inc
cmp
fst
ins
inc
dec
mov
movs
int3
mov
jl
adc
jecxz
add
imul
adc
imul
jne
push
int
xchg
cs
push
push
in
mov
cmp
fwait
movs
scas
push
mov
mov
sti
mov
xorps
add
adc
inc
clc
das
(bad)
inc
mov
fcomip
inc
(bad)
pop
inc
loopne
aas
(bad)
and
lea
icebp
sub
adc
pop
retf
pop
sub
jae
cdq
sbb
cmp
mov
push
stc
jb
out
mov
aas
sbb
jge
push
fwait
in
mov
dec
xor
movs
jmp
pop
test
popa
mov
sbb
adc
mov
jecxz
xacquire
movs
mov
fcmovu
fiadd
dec
test
fld
jg
mov
cmp
loope
add
or
inc
loop
inc
xchg
lock
adc
inc
clc
das
(bad)
inc
mov
dec
ret
jg
loop
add
in
aad
out
(bad)
loope
mov
pop
loope
add
or
inc
loop
inc
xchg
lock
adc
inc
clc
das
(bad)
inc
mov
aas
or
add
cli
aad
out
(bad)
loope
mov
pop
loope
add
or
inc
loop
inc
xchg
lock
adc
inc
clc
das
(bad)
inc
mov
aas
or
add
cli
aad
out
(bad)
loope
mov
pop
loope
add
or
inc
loop
inc
xchg
lock
(bad)
leave
jns
add
aaa
adc
mov
rcr
mov
mov
(bad)
clc
mov
(bad)
outs
enter
lock
ror
(bad)
push
sar
pop
adc
gs
ds
ja
mov
xor
or
jmp
sar
in
fdivr
push
sti
inc
inc
adc
mov
aad
shl
jae
cmps
aaa
push
call
imul
sbb
push
add
shl
ins
sbb
push
add
shl
ins
sbb
push
add
shl
ins
sbb
push
add
shl
ins
sbb
push
add
shl
ins
sbb
push
add
xlat
rcr
lock
mov
lahf
idiv
inc
movs
aaa
adc
inc
add
inc
xchg
mov
jg
or
push
hlt
xchg
clc
xlat
test
shr
mov
mov
mov
mov
xor
sub
sub
psubusb
ds
add
test
stos
stos
inc
out
cld
retf
mov
into
out
adc
mov
aad
ds
inc
add
inc
add
inc
and
jecxz
movs
jl
pop
xchg
lock
paddb
out
push
(bad)
adc
inc
ins
jg
leave
ins
imul
jns
js
fwait
jbe
jmp
jecxz
mov
cmp
add
stos
movs
jbe
mov
movs
mov
push
adc
xor
dec
fldenv
scas
jle
pop
clc
xchg
fdivr
les
and
push
out
mov
cs
cld
pop
add
(bad)
sar
icebp
push
data16
and
lock
repz
(bad)
out
inc
ins
fwait
fwait
iret
or
retf
inc
pop
or
test
out
test
inc
mov
retf
outs
fwait
and
hlt
jecxz
ds
mov
pop
adc
lahf
mov
mov
xchg
pop
sbb
jmp
scas
ss
push
cwde
aas
(bad)
js
or
or
retf
inc
out
jo
push
mov
into
movs
cmps
sbb
ja
jae
xor
in
cli
dec
pop
popf
xchg
xlat
cli
pop
iret
stos
inc
icebp
stos
(bad)
test
pop
stc
and
retf
xchg
retf
push
dec
push
out
and
rol
fisttp
retf
bound
mov
ss
mov
adc
ficomp
fs
push
mov
out
jl
cmp
(bad)
mov
push
jo
pushf
sbb
or
mov
fld
push
cli
(bad)
ins
test
das
jl
push
and
inc
or
nop
loope
xor
mov
jo
lods
lock
sti
dec
jg
out
jnp
(bad)
and
mov
jmp
cmp
or
jecxz
shr
addr16
push
mov
fdivr
call
psubq
(bad)
xchg
or
sub
outs
inc
scas
in
ja
add
stc
mov
(bad)
jle
pop
dec
or
fsubr
inc
jns
dec
mov
sbb
jno
in
xlat
mov
xlat
in
aad
test
dec
lds
lods
and
xchg
jmp
dec
xor
xchg
imul
out
mov
dec
ret
cs
lock
xchg
in
sbb
ficom
pop
cmp
xlat
dec
scas
cmp
sysenter
sar
push
cmps
inc
call
iret
ret
mov
mov
sub
push
adc
cmc
scas
fistp
push
mov
mov
xor
cmp
or
inc
mov
sti
mov
mov
jecxz
fistp
out
lds
(bad)
sub
or
std
lds
repz
push
in
imul
iret
(bad)
push
add
(bad)
(bad)
inc
test
inc
or
inc
std
mov
addr16
ins
into
(bad)
in
fstp
sub
test
lahf
fisubr
outs
jns
sbb
cld
das
scas
sub
push
aad
sbb
clc
jne
call
jns
cmp
jecxz
jnp
imul
shl
movs
push
dec
and
adc
dec
into
adc
cmc
scas
mov
pop
scas
les
pop
mov
push
xchg
mov
jl
add
pushf
push
nop
dec
jo
jns
retf
mov
mov
pop
imul
jb
xor
nop
xchg
in
nop
inc
ja
sahf
mov
inc
or
lea
push
push
aad
jge
xlat
push
icebp
ins
cmc
in
and
popf
out
mov
dec
jo
stos
test
out
sbb
in
xor
add
cmp
cmp
ins
mov
cmps
mov
dec
lahf
and
test
movs
sbb
retf
adc
stos
dec
retf
push
jns
popaw
xchg
mov
(bad)
fs
addr16
cld
aas
clc
jg
jmp
jge
jl
add
aam
fs
mov
cli
loopne
or
cmp
jl
loope
add
xchg
push
mov
mov
scas
push
add
daa
mov
icebp
scas
adc
mul
push
mov
dec
fwait
stos
mov
pop
addr16
retf
mov
(bad)
xchg
dec
and
push
inc
call
retf
dec
sub
aaa
sub
mov
mov
stc
out
push
int
inc
pop
sti
jmp
dec
fild
jne
jle
cld
sub
push
js
pop
ins
outs
dec
sti
or
inc
stos
adc
mov
sti
cmp
push
ret
and
inc
sar
out
clc
inc
out
dec
test
sti
push
mov
js
cmp
push
sbb
mov
cmp
gs
enter
ins
mov
xchg
cmp
mov
jge
and
mov
dec
mov
push
lock
push
nop
popf
sub
adc
enter
push
out
sbb
jmp
pop
psubb
inc
shr
mov
int
jle
cmps
cs
lods
mov
mov
mov
(bad)
retf
dec
jle
xlat
fisttp
mov
inc
popa
sar
add
jg
das
fmul
shl
sbb
sbb
retf
aaa
jno
ret
xor
cmps
mov
aas
cld
and
lahf
mov
add
or
dec
cld
and
fild
std
test
mov
cmp
arpl
mov
ret
lods
mov
(bad)
ds
rcl
in
in
xchg
dec
sbb
mov
rol
loopne
inc
out
test
mov
jne
mov
mul
dec
xchg
mov
aaa
ins
pop
mov
cmps
test
push
mov
aad
hlt
mov
lock
les
int
test
ficomp
xor
jae
(bad)
out
cmp
(bad)
not
cld
btr
enter
(bad)
sbb
stos
pop
xor
jge
shl
rcl
(bad)
test
jl
test
push
call
ins
je
scas
dec
inc
fisub
es
xchg
xor
cmp
bound
pop
sbb
das
icebp
daa
xor
out
mov
mov
dec
es
jo
inc
mov
stc
div
(bad)
jb
pop
push
xor
mov
cld
jmp
out
daa
push
dec
movs
call
jge
fstp
ret
sahf
arpl
push
out
in
jmp
add
jp
cld
adc
inc
xlat
aad
inc
jne
sbb
aas
mov
mov
jmp
aam
mov
(bad)
stc
push
nop
xor
pop
mov
jle
pop
lock
fisub
inc
or
imul
not
repnz
stc
into
out
push
mov
lock
loope
cld
and
in
das
in
or
fnsave
xchg
ds
xchg
into
xor
xchg
js
les
xchg
push
into
call
pushf
xor
out
dec
pushf
and
leave
cmp
mov
fwait
xor
pop
jp
adc
dec
addr16
fnstsw
cmp
mov
or
mov
call
scas
and
movs
add
cmp
in
nop
xor
inc
pop
jb
adc
pop
lahf
push
(bad)
sub
inc
data16
xor
imul
in
les
sbb
cmp
jle
lea
xchg
mov
push
mov
cmps
cmps
sbb
cwde
fxch
ins
ins
adc
sub
loope
in
mov
(bad)
xor
jne
or
mov
sub
mov
shl
add
jl
aas
or
scas
xchg
pop
mov
lods
sbb
std
movs
cmp
idiv
xchg
push
pop
xor
mov
cmp
or
ret
pop
sti
cmp
imul
movs
(bad)
movs
aas
gs
sbb
dec
icebp
or
cmp
push
pop
fadd
ret
adc
sub
fnstcw
popa
pop
inc
(bad)
lahf
adc
(bad)
add
xchg
jne
xchg
movs
jmp
mov
mov
lds
dec
xor
mov
jg
stc
mov
pop
in
daa
stos
jl
icebp
push
scas
ja
cmps
lds
jmp
push
xchg
lock
out
or
std
or
stos
mov
mov
aas
xchg
sbb
and
sub
fild
(bad)
jno
dec
add
ret
dec
rol
(bad)
je
js
sub
mov
into
xchg
popa
or
ror
mov
bnd
jmp
sti
not
retf
sahf
jmp
inc
xchg
aaa
(bad)
cmp
imul
mov
fnstcw
pop
pop
icebp
daa
(bad)
pop
pop
dec
loopne
or
inc
shl
mov
outs
xchg
loopne
sub
ja
and
std
pushf
mov
std
pop
pop
mov
add
je
int3
sti
ja
cld
mov
jl
xchg
popf
sti
ds
lahf
lock
lahf
lock
inc
ins
inc
push
cmps
xchg
test
retf
into
jl
iret
pop
je
mov
data16
and
shl
mov
mov
stc
mov
ja
(bad)
xlat
xchg
jb
(bad)
dec
loope
out
fnsave
popf
jl
mov
pop
jmp
loope
xchg
data16
les
loop
mov
cmc
lds
sar
push
sub
cld
imul
and
(bad)
ins
movs
mov
aaa
sub
add
jo
aam
sti
out
sbb
add
jmp
fcomip
mov
inc
test
inc
not
fild
fild
out
mov
mov
or
leave
lock
call
loop
or
es
jmp
add
popf
cmps
sub
fadd
sbb
push
int3
jno
mov
les
daa
dec
stos
nop
push
push
mov
pop
repnz
(bad)
fbld
in
dec
cmp
jecxz
sahf
jmp
repz
(bad)
dec
jcxz
and
mov
aad
cmc
dec
sbb
inc
ins
outs
ins
pusha
ss
loopne
pop
dec
xchg
jno
adc
jno
mov
bnd
fisub
pop
xchg
xchg
sbb
mov
mov
or
or
fs
js
imul
mov
mov
jl
lock
mov
cmp
sub
jmp
or
jo
sbb
fbstp
pop
(bad)
pop
pop
(bad)
(bad)
sub
sahf
sbb
dec
mov
loopne
xchg
sub
mov
mov
ins
sti
add
ret
xchg
sub
cmp
jle
push
push
mov
ss
adc
xor
mov
cmps
dec
ins
mov
imul
repnz
or
mov
or
mov
add
mov
idiv
sub
sub
out
test
lahf
fcomip
pop
out
aas
in
pop
jge
add
mov
mov
retf
sar
scas
inc
clc
sub
inc
mov
sbb
in
mov
mov
mov
mov
sub
add
mov
mov
mov
sub
add
mov
mov
mov
sub
add
mov
mov
mov
sub
add
mov
mov
mov
sub
add
daa
loopne
in
jno
dec
sti
jle
add
sbb
inc
cmp
leave
(bad)
pop
(bad)
fistp
scas
pop
fisttp
call
push
inc
jbe
retf
adc
pusha
mov
jecxz
mov
js
inc
pop
daa
jae
pop
fstp
cs
sar
inc
inc
pop
pop
xchg
lods
neg
xchg
mov
xlat
jb
pop
std
xchg
jle
cmp
adc
push
xchg
out
(bad)
adc
test
(bad)
test
adc
clc
ret
repz
das
sahf
ds
lock
add
call
adc
and
lds
xlat
aas
icebp
xchg
add
stc
jecxz
sti
out
(bad)
es
clc
ret
inc
stc
cld
icebp
idiv
repz
inc
adc
push
dec
xchg
cmps
cld
cld
xchg
fisubr
inc
stc
adc
iret
cld
popa
inc
cld
(bad)
js
(bad)
stc
(bad)
inc
mov
(bad)
jg
jge
add
add
xlat
enter
push
(bad)
jle
out
or
adc
iret
cld
popa
inc
cld
(bad)
js
(bad)
stc
(bad)
inc
mov
(bad)
jg
jge
add
add
xlat
enter
push
(bad)
jle
out
or
adc
iret
cld
popa
inc
cld
(bad)
js
(bad)
stc
(bad)
inc
mov
(bad)
jg
jge
add
add
xlat
enter
push
(bad)
jle
out
or
adc
iret
cld
popa
inc
cld
(bad)
js
(bad)
stc
(bad)
inc
mov
(bad)
jg
jge
add
add
xlat
enter
push
(bad)
jle
out
or
adc
iret
cld
popa
inc
cld
(bad)
js
(bad)
stc
(bad)
inc
mov
(bad)
jg
jge
add
add
xlat
enter
push
(bad)
jle
out
or
adc
iret
cld
popa
inc
cld
(bad)
js
(bad)
stc
(bad)
inc
mov
(bad)
jg
jge
add
add
xlat
enter
push
(bad)
jle
out
or
adc
iret
cld
popa
inc
cld
(bad)
js
(bad)
stc
(bad)
inc
mov
(bad)
jg
jge
add
add
xlat
enter
push
(bad)
jle
out
or
adc
iret
cld
popa
inc
cld
(bad)
js
(bad)
stc
(bad)
inc
mov
(bad)
jg
jge
add
add
xlat
enter
push
(bad)
jle
out
or
adc
iret
cld
popa
inc
cld
(bad)
js
(bad)
stc
(bad)
inc
mov
(bad)
jg
jge
add
add
xlat
enter
push
(bad)
jle
out
or
adc
iret
cld
popa
inc
cld
(bad)
js
(bad)
stc
(bad)
inc
mov
(bad)
jg
jge
add
add
xlat
enter
push
(bad)
jle
out
or
adc
iret
cld
popa
inc
cld
(bad)
js
(bad)
stc
(bad)
inc
mov
(bad)
jg
jge
add
add
xlat
enter
push
(bad)
jle
out
or
adc
iret
cld
popa
inc
cld
(bad)
js
(bad)
stc
(bad)
inc
mov
(bad)
jg
jge
add
add
xlat
enter
push
(bad)
jle
out
or
adc
iret
cld
popa
inc
cld
(bad)
js
(bad)
stc
(bad)
inc
mov
(bad)
jg
jge
add
add
xlat
enter
push
(bad)
jle
out
or
adc
iret
cld
popa
inc
cld
(bad)
js
(bad)
stc
(bad)
inc
mov
(bad)
jg
jge
add
add
xlat
enter
push
(bad)
jle
out
or
adc
iret
cld
popa
inc
cld
(bad)
js
(bad)
stc
(bad)
inc
mov
(bad)
jg
jge
add
add
xlat
enter
push
(bad)
jle
out
or
adc
iret
cld
popa
inc
cld
(bad)
js
(bad)
stc
(bad)
inc
mov
(bad)
jg
jge
add
add
xlat
enter
push
(bad)
jle
out
or
adc
iret
cld
popa
inc
cld
(bad)
js
(bad)
stc
(bad)
inc
mov
(bad)
jg
jge
add
add
xlat
enter
push
(bad)
jle
out
or
adc
iret
cld
popa
inc
cld
(bad)
js
(bad)
stc
(bad)
inc
mov
(bad)
jg
jge
add
add
xlat
enter
push
(bad)
jle
out
or
adc
iret
cld
popa
inc
cld
(bad)
js
(bad)
stc
(bad)
inc
mov
(bad)
jg
jge
add
add
xlat
enter
push
(bad)
jle
out
or
adc
iret
cld
popa
inc
cld
(bad)
js
(bad)
stc
(bad)
inc
mov
(bad)
jg
jge
add
add
xlat
enter
push
(bad)
jle
out
or
adc
iret
cld
popa
inc
cld
(bad)
js
(bad)
stc
(bad)
inc
mov
sti
(bad)
scas
scas
mov
in
xor
jl
inc
sbb
aas
out
mov
pop
push
js
div
das
stos
push
wbinvd
retf
test
and
and
jo
pushf
mov
jg
and
inc
and
dec
mov
push
sbb
jge
jge
dec
push
shr
mov
inc
adc
pusha
mov
cs
inc
push
or
loope
adc
pusha
mov
cs
inc
push
or
loope
adc
pusha
mov
cs
inc
push
or
jg
fstp
(bad)
fistp
jns
mov
cmp
inc
fcomi
(bad)
nop
fcom
xlat
out
addr16
mov
inc
adc
dec
xchg
push
inc
adc
xor
pop
shl
adc
pop
pop
fwait
ins
and
pop
fcmovnu
les
ror
sub
pop
xor
cli
cli
mul
das
shr
push
cmp
lods
imul
sub
and
rcl
les
inc
js
jae
add
cmps
lahf
(bad)
(bad)
jge
jge
(bad)
(bad)
xor
(bad)
or
cmp
aas
push
in
sub
sub
enter
jecxz
into
aas
icebp
mov
sti
clc
sti
repz
cld
imul
out
adc
ds
mov
test
add
(bad)
ds
jecxz
add
xor
and
mov
add
mov
add
mov
xor
iret
xchg
push
and
mov
add
mov
enter
jecxz
into
aas
icebp
mov
pop
jo
pop
int3
mov
jmp
dec
pop
repz
jecxz
into
aas
icebp
mov
sti
clc
sti
repz
cld
push
xchg
fcom
xchg
das
mov
retf
aas
mov
cld
sti
clc
sti
repz
cld
push
add
(bad)
ds
jecxz
add
cmp
test
mov
in
test
add
(bad)
ds
jecxz
add
xor
and
mov
add
mov
add
mov
xor
iret
xchg
push
and
mov
add
mov
jge
ss
adc
jg
xor
icebp
sbb
daa
fwait
stos
clc
ja
inc
das
ins
(bad)
in
push
add
add
shl
sbb
(bad)
push
xchg
jbe
sbb
in
sub
scas
out
out
shr
pop
sbb
jo
int
out
fild
xchg
mov
push
inc
dec
xchg
dec
add
mov
std
popf
mov
pop
icebp
mov
neg
in
push
aaa
jne
test
in
sti
or
push
adc
sti
and
in
mov
arpl
call
mov
std
adc
scas
dec
inc
(bad)
adc
add
(bad)
(bad)
sub
jnp
jg
mov
xor
shl
jne
cmc
(bad)
cld
sub
fld
mov
mov
add
push
inc
or
mov
adc
aam
dec
jg
mov
xor
shl
jne
cmc
(bad)
cld
sub
fld
mov
mov
add
push
inc
or
mov
adc
aam
dec
jg
mov
xor
shl
jne
cmc
(bad)
cld
sub
fld
mov
mov
add
push
inc
or
mov
adc
aam
dec
jg
mov
xor
shl
jne
cmc
(bad)
cld
sub
fld
mov
mov
add
push
inc
or
mov
adc
aam
dec
jg
mov
xor
shl
jne
cmc
(bad)
cld
sub
fld
mov
mov
add
push
inc
or
mov
adc
aam
dec
jg
mov
xor
shl
jne
cmc
(bad)
cld
sub
fld
mov
mov
add
push
inc
or
mov
adc
aam
dec
jg
mov
xor
shl
jne
cmc
(bad)
cld
sub
fld
mov
mov
add
push
inc
or
mov
adc
aam
dec
jg
mov
xor
shl
jne
cmc
(bad)
cld
sub
fld
mov
mov
add
push
loope
adc
(bad)
lahf
mov
in
dec
pop
xchg
sub
xor
xor
xor
push
or
das
cld
or
jp
dec
mov
rcr
add
sub
pop
mov
mov
ins
not
xchg
jno
and
mov
lahf
aaa
lods
and
sub
inc
adc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
hlt
movs
fld
push
jmp
neg
adc
push
cwde
(bad)
xchg
(bad)
fdiv
inc
jp
out
and
imul
retf
mov
cmps
scas
cdq
iret
and
sub
mov
mov
mov
std
cmp
inc
outs
(bad)
inc
cmp
jle
lahf
bnd
push
inc
mov
std
and
lahf
mov
fisttp
ss
pop
xchg
cmp
fidiv
rcl
inc
and
scas
mov
inc
mov
sti
dec
js
pop
test
ret
out
out
xor
sbb
rep
jge
inc
add
inc
xchg
xchg
mov
add
xor
std
sbb
sahf
or
jge
test
popf
inc
mov
mov
in
mov
int3
cmps
dec
neg
jmp
(bad)
sbb
mov
xor
out
sar
adc
gs
iret
mov
jmp
loop
jnp
inc
push
outs
or
test
in
cmps
and
and
mov
jbe
mov
ret
jmp
fxch
ret
fist
xor
test
dec
outs
imul
bound
mov
mov
daa
cmp
pop
(bad)
inc
add
mov
cmp
loope
sbb
test
mov
icebp
inc
pop
scas
out
add
jmp
xchg
inc
aas
mov
ror
es
repnz
pop
and
pop
cmp
loope
mul
retf
idiv
loop
fiadd
jbe
test
sbb
push
aam
adc
repnz
jnp
and
int3
fstp
jle
aas
mov
ds
pop
adc
icebp
aas
dec
icebp
pop
xchg
retf
adc
nop
mov
fwait
fwait
das
sbb
cmp
movs
fbstp
mov
(bad)
xchg
add
inc
(bad)
inc
cmp
and
cs
movs
scas
fwait
test
mov
sbb
ficomp
std
jle
pop
sbb
aas
push
out
imul
cs
lock
lds
cmps
js
ret
mov
jne
das
and
outs
pop
shl
lock
jo
fwait
icebp
pop
cmp
mov
adc
mov
gs
inc
add
fmul
iret
(bad)
sbb
aad
loope
mov
test
movs
jo
(bad)
sbb
add
xchg
into
cmovne
stos
mov
js
jecxz
ror
and
lods
pop
or
call
cdq
jae
lock
or
aas
pop
hlt
push
imul
pop
pop
jmp
stos
mov
jle
push
mov
(bad)
std
or
ins
scas
(bad)
sbb
rcl
ss
in
popa
in
xor
push
inc
lds
jle
call
clc
jmp
dec
out
push
mov
stos
sub
mov
sub
inc
adc
test
ins
mov
mov
xor
sub
pop
ins
sub
mov
test
cmp
pusha
jno
lds
call
dec
sbb
jno
inc
add
cmp
mov
mov
lock
test
retf
push
sub
test
data16
out
mov
jno
adc
adc
in
cmp
add
dec
loopne
cli
jmp
inc
movs
mov
es
lahf
in
inc
dec
mov
inc
mov
dec
mov
outs
mov
push
inc
push
mov
inc
sbb
fst
jle
mov
xlat
dec
icebp
pop
dec
mov
add
daa
jae
add
loop
inc
jae
lahf
push
clc
xor
loope
in
pop
scas
imul
pop
pop
lds
repnz
xchg
inc
push
xor
pusha
cli
adc
int3
xor
add
repnz
add
jl
std
and
mov
pop
xchg
jge
cdq
int
jle
push
xchg
ds
clc
sub
(bad)
inc
test
(bad)
push
cld
inc
aad
(bad)
fnclex
inc
imul
lods
out
mov
mov
mov
dec
cmp
call
in
sub
or
sub
sbb
xor
xchg
mov
pop
daa
mov
bound
(bad)
add
cmps
jbe
faddp
cmp
cli
stos
neg
movs
loopne
fidiv
loopne
(bad)
lock
pop
mov
and
das
xchg
cmp
cmp
inc
aad
mul
fadd
lock
ja
push
call
std
cmp
jge
test
and
lods
or
add
inc
adc
movs
mov
fild
fldcw
movs
cmp
mov
ret
push
dec
mov
scas
and
ss
jmp
fwait
(bad)
and
bswap
sbb
pop
xor
jo
daa
mov
(bad)
lods
loope
jg
pop
js
pop
mov
outs
mov
iret
mov
nop
cmp
push
in
pop
cmp
(bad)
sub
aaa
xchg
push
jnp
cs
(bad)
cmp
or
mov
inc
out
pop
aad
cmp
xlat
sahf
cld
or
cmps
cdq
lock
xor
shr
cmp
or
shl
es
sti
pop
mov
shr
in
inc
pop
clc
mov
lock
xchg
push
js
add
cli
out
test
aam
or
mov
rol
inc
inc
outs
mov
mov
das
adc
pop
les
or
mov
dec
lods
(bad)
sub
loopne
xchg
cmp
push
les
cmc
jae
popf
in
(bad)
mov
(bad)
adc
sub
das
pop
add
xchg
xchg
sub
add
stos
mov
xor
and
sahf
icebp
aaa
xor
mov
mov
(bad)
in
mov
bound
jae
push
push
xchg
(bad)
retf
adc
xchg
lods
jmp
je
push
mov
dec
dec
mov
iret
into
pop
imul
mov
mov
pop
mov
mov
sub
xchg
jne
retf
dec
sbb
pop
pop
adc
xor
(bad)
sbb
pop
call
shr
lods
div
in
call
sti
les
dec
sbb
inc
imul
shl
and
es
dec
pop
push
mov
mov
aad
push
mov
xchg
cmp
dec
(bad)
dec
out
bound
xchg
cmp
or
xchg
cmps
(bad)
lods
cmp
inc
mov
sub
sub
cmp
mov
mov
add
ja
aaa
neg
xor
fnstcw
aas
cmp
pop
lock
mov
ja
jle
gs
dec
js
inc
mov
push
push
push
ja
pop
mov
in
mov
iret
mov
or
dec
mov
xor
aad
sub
ret
pop
sbb
arpl
pusha
adc
add
jg
test
fs
aas
loopne
cmp
add
mov
xchg
std
cmp
clc
inc
push
clc
jnp
lock
iret
sbb
pop
dec
cmp
mov
jnp
jmp
xor
ins
push
aaa
outs
sbb
xchg
imul
xchg
stos
mov
outs
popf
sub
mov
scas
popa
jl
std
xchg
bndldx
shl
js
pop
mov
scas
popa
xchg
inc
imul
mov
cmps
add
dec
jo
outs
fisub
sbb
lock
mov
loop
adc
dec
(bad)
xlat
push
xchg
int3
push
outs
sub
add
scas
pop
clc
mov
or
cmp
ret
push
icebp
aaa
ret
fwait
(bad)
adc
xchg
cmps
mov
jmp
in
popa
into
add
cmp
movs
mov
inc
retf
or
sti
pop
pusha
pusha
int3
mov
les
into
icebp
mov
jb
xor
push
outs
(bad)
pop
int
jge
pushf
stc
xchg
(bad)
cs
push
cmps
ret
das
push
js
les
call
sbb
daa
mov
fisttp
ror
icebp
inc
mov
xchg
mov
or
or
gs
dec
pop
push
(bad)
shl
mov
add
and
out
pop
sub
ficomp
in
sub
lea
and
dec
icebp
ja
das
xchg
aas
mov
std
cmps
mov
adc
fdiv
mov
xlat
fsubp
sbb
ins
frstor
pop
xor
aad
out
add
jo
jle
pop
adc
pop
or
mov
movs
cmp
jb
and
cmp
jle
pop
jae
xor
psubusb
pop
std
mov
ss
popf
shl
pushf
fs
pusha
inc
cmp
imul
push
xchg
test
arpl
movs
shr
fwait
dec
sahf
push
(bad)
sub
inc
enter
mov
shl
jae
dec
jg
cld
fs
mov
retf
pop
pop
mov
mov
ret
mov
out
(bad)
sti
jbe
dec
data16
dec
push
mov
aas
(bad)
fnstsw
lods
or
scas
clc
pop
in
xchg
jbe
stos
jmp
ins
inc
jecxz
cwde
shl
nop
inc
jecxz
pop
mov
mov
in
cmp
mov
pop
lock
mov
xchg
loop
and
inc
aam
add
fidivr
pop
test
mov
xlat
jmp
loop
in
mul
fwait
jge
les
mov
not
test
mov
xor
rcl
push
mov
push
inc
add
jecxz
punpckhwd
lock
push
sub
or
mov
test
std
iret
sub
add
pop
movs
or
pop
mov
push
jmp
scas
call
push
dec
jmp
adc
iret
push
fucomi
outs
in
inc
mov
cs
jno
retf
lds
mov
inc
cmc
fidiv
mov
stc
push
ins
jge
lock
jg
test
sub
dec
movs
inc
mov
test
(bad)
ret
push
or
push
pusha
mov
inc
push
or
push
pusha
mov
inc
push
or
push
pusha
mov
inc
push
or
push
pusha
mov
sar
leave
sbb
mov
inc
sub
movs
aad
repz
(bad)
xchg
and
pop
xor
sbb
adc
jmp
pop
cdq
inc
or
and
fs
pop
sbb
mov
ret
push
pop
scas
popf
loope
test
or
imul
pop
leave
push
xchg
mov
add
(bad)
in
push
dec
jno
mov
mov
jae
daa
mov
icebp
(bad)
div
shl
jg
out
lods
jl
arpl
mov
cmps
adc
in
add
xchg
stc
lods
out
cmp
dec
sar
lods
xchg
ins
fisub
daa
push
mov
mov
mov
in
out
test
cmp
mov
add
push
or
mov
retf
pop
and
jne
push
dec
adc
mov
push
scas
mov
jmp
push
mov
sti
pop
int3
mov
je
repz
xlat
jmp
movs
add
call
int3
xchg
inc
mov
pushf
mov
je
mov
mov
mov
add
jno
shl
adc
or
add
add
mov
pusha
dec
stc
cmp
add
idiv
nop
iret
pop
clc
test
cdq
cli
aas
enter
in
push
repz
adc
jb
sub
or
dec
dec
push
jg
jge
es
scas
xor
icebp
aaa
xchg
(bad)
pop
nop
aas
xchg
jl
pop
das
ret
jg
jmp
stos
dec
pusha
das
hlt
mov
mov
sti
sub
xchg
sti
adc
sub
and
ja
xchg
mov
inc
sub
in
retf
rcl
xor
mov
add
push
outs
sbb
aas
loop
xchg
loopne
dec
push
arpl
clc
jae
dec
mov
aaa
or
pop
or
popa
xchg
aam
ror
mov
paddd
cmps
inc
pop
pop
xor
shl
into
push
test
(bad)
xchg
push
mov
cli
cs
inc
shl
add
call
sar
call
add
sar
add
stc
mov
mov
fist
int
inc
test
inc
rcr
mov
retf
icebp
in
stos
(bad)
mov
jne
sbb
stos
xchg
push
cs
or
sahf
jne
mov
bound
lock
pop
cmps
inc
pop
inc
std
mov
arpl
jecxz
or
pop
pop
xor
cli
iret
mov
pop
div
inc
fdiv
jl
mov
fidivr
aas
add
in
push
jmp
cmp
adc
push
daa
mov
or
mov
cld
push
clc
test
ror
mov
pop
int
(bad)
adc
jae
xlat
imul
adc
cmp
or
sar
test
out
mov
cmp
push
dec
sbb
popf
cmc
adc
in
pop
cmp
or
jae
pop
scas
xor
pop
out
mov
xchg
(bad)
(bad)
fisttp
xor
inc
shr
adc
stos
fdiv
sbb
xchg
aaa
pusha
xor
xor
test
lock
lahf
(bad)
outs
cmp
mov
mov
cmps
jae
ins
adc
or
outs
(bad)
jmp
mov
pop
ss
jle
call
ds
aam
pop
jle
jmp
inc
repnz
jl
lock
xor
data16
xchg
jle
jmp
fabs
mov
mov
xor
lods
retf
stos
fcmovu
je
inc
mov
jle
clc
xchg
sbb
shr
pusha
adc
ss
and
ja
js
inc
leave
or
iret
add
loop
pop
(bad)
mov
inc
test
xchg
pusha
mov
into
xor
sbb
in
pop
cmps
cmp
mov
ret
sar
adc
mov
add
sar
push
lahf
cld
pop
outs
cmp
xchg
popf
dec
mov
mov
and
mov
xchg
push
mov
xlat
push
in
sub
scas
clc
bound
cmp
aas
clc
mov
dec
cli
cs
inc
shl
add
jmp
cli
(bad)
sbb
mov
aad
idiv
(bad)
xchg
imul
popa
imul
push
add
push
jb
fst
ss
scas
ret
(bad)
sbb
out
pop
cld
cmovg
cs
push
clc
jne
sbb
add
sub
lea
mov
push
mov
das
(bad)
test
ja
pop
pop
dec
lods
sub
out
in
mov
imul
xor
retf
sahf
cmp
cwde
cmp
push
push
lods
cmp
bound
dec
cmp
lods
pop
ja
cwde
mov
in
sbb
(bad)
out
out
cli
and
jge
repnz
bound
call
cld
inc
lock
xor
dec
loopne
adc
leave
cmps
pop
cs
sub
sahf
retf
pushf
add
loopne
sbb
jle
sbb
das
les
or
inc
nop
out
sub
mov
in
sbb
add
cld
add
aas
xor
mov
mov
scas
xchg
mov
adc
push
in
shl
clc
clc
dec
out
dec
sar
mov
mov
dec
pop
adc
push
sub
push
jne
inc
jle
loope
out
mov
aad
imul
fsubr
call
dec
sbb
and
mov
pop
mov
add
daa
ffreep
pop
es
xchg
retf
lds
sbb
push
mov
jmp
dec
jg
js
shr
dec
or
pop
sbb
pop
cmp
and
jl
call
lahf
imul
mov
aaa
cmps
pop
js
(bad)
inc
adc
fsubr
int3
stos
aaa
iret
data16
(bad)
lods
out
lea
cmp
mov
sar
pop
mov
jmp
imul
and
ds
ret
push
icebp
cs
cmps
test
imul
inc
loop
les
mov
pop
lea
lock
vphaddwq
inc
test
add
push
push
jo
push
jb
scas
js
cld
add
jne
mov
jge
mov
mov
arpl
(bad)
(bad)
loop
jnp
jmp
mov
xchg
outs
ret
sub
sub
shl
aaa
add
jbe
mov
or
aas
pop
jle
js
fcmove
inc
shl
test
popa
fs
xchg
inc
out
add
dec
sbb
jmp
sar
(bad)
clc
pop
nop
dec
mov
popa
clc
mov
mov
add
cmp
es
and
mov
xor
jbe
and
lahf
pop
stc
push
mov
push
idiv
cmp
cmp
or
iret
push
outs
sar
lock
(bad)
jne
icebp
arpl
ficom
outs
jge
cmps
lods
mov
int3
pop
pop
fs
mov
pop
paddusw
in
xlat
imul
jl
mov
clc
mov
sbb
jp
test
fmul
cmp
pop
scas
addr16
sbb
mov
xor
lock
das
mov
push
jns
js
ret
xor
lods
and
pushf
cwde
jmp
icebp
cmp
movs
mov
loope
mov
aad
add
mov
jg
pop
icebp
jnp
sar
add
cmps
xlat
scas
jae
mov
ret
stos
mov
xor
cwde
dec
pop
jg
inc
cdq
loope
mov
mov
mov
or
loope
mov
fs
out
xor
es
adc
outs
ficomp
mov
call
jg
popf
pop
adc
mov
(bad)
add
dec
aas
mov
jl
cmp
ins
xor
inc
stos
dec
lods
test
dec
cmp
xchg
sbb
inc
and
pop
aad
not
test
jb
ret
push
jl
lock
stos
inc
test
cwde
clc
xchg
dec
and
dec
push
dec
enter
adc
ret
pop
fcomp
pop
ja
add
mov
or
xchg
mov
aad
data16
push
arpl
inc
inc
push
jmp
add
dec
aas
not
inc
lea
aad
mov
jmp
imul
mov
jge
lock
sbb
icebp
pop
jecxz
or
push
cli
(bad)
in
nop
shr
imul
sub
fisttp
cmps
loope
pop
popa
icebp
mov
rcr
sar
mov
cmp
sbb
in
fiadd
inc
in
push
push
sub
jl
inc
jg
dec
iret
mov
pop
or
add
jmp
push
scas
jg
sahf
pop
adc
imul
dec
in
scas
es
and
cld
dec
push
mov
popa
arpl
fucomi
movs
xlat
jbe
mov
jmp
fcmovnu
jmp
loop
mov
or
lahf
les
or
jns
cmp
xor
dec
adc
add
les
mov
(bad)
mov
clc
shr
mov
jne
fs
mov
or
inc
bound
inc
add
fs
inc
test
mov
mov
retf
outs
out
or
movs
or
push
pop
sub
inc
add
clc
xchg
cmp
adc
not
jg
xor
sub
jmp
imul
pop
mov
pop
cld
add
hlt
dec
vmread
rol
push
(bad)
cmp
sub
jmp
jne
and
addr16
mov
mov
adc
push
cmp
mov
sbb
mov
xor
cmp
mov
add
and
mov
inc
xlat
call
fxch
es
adc
aad
push
pop
mov
sahf
sub
icebp
inc
xor
and
xlat
aaa
repnz
push
dec
aad
je
jmp
pop
cmps
jne
jbe
xor
scas
xchg
movs
sbb
cmc
std
xor
loope
cwde
mov
cmp
xchg
jmp
daa
mov
bound
mov
push
sar
movs
jl
clc
pop
and
jle
shr
dec
mul
stos
jns
outs
sbb
nop
jp
pop
or
jne
outs
dec
push
sbb
call
sbb
adc
movs
mov
sub
test
inc
dec
inc
add
sub
or
pop
mov
push
push
mov
xchg
add
leave
sbb
scas
xchg
retf
lods
xchg
xchg
push
outs
sbb
cli
sahf
cmc
mov
or
jns
(bad)
mov
popa
xchg
dec
shl
dec
repnz
pop
cmp
pop
xchg
loope
sub
dec
mov
xor
sbb
add
cmps
mov
push
mov
mov
jb
inc
int3
and
in
jne
cmps
jge
cs
js
cmp
push
stos
mov
lds
ins
or
arpl
xor
pop
xchg
dec
xor
cmp
(bad)
out
xchg
mov
push
sbb
fdivp
fld
xor
inc
nop
xor
xchg
cmc
stos
out
shl
scas
mov
js
dec
mov
mov
fild
xchg
addr16
jno
les
dec
push
xor
imul
push
xor
test
(bad)
ins
mov
in
inc
call
xor
cmp
call
fmul
pushf
push
jns
ins
ds
push
jg
and
jp
aam
dec
or
pop
cmp
mov
bound
cmp
mov
or
jno
inc
jle
mov
sbb
and
jge
xchg
je
stc
xchg
mov
adc
rcl
stos
call
dec
retf
rcr
sti
inc
movs
push
xlat
adc
pop
mov
cld
popf
xchg
inc
dec
cmps
scas
ins
dec
lock
call
dec
not
push
call
push
call
mov
jne
add
rcr
rcr
rcr
rcr
rcr
rcr
rcl
mov
sbb
sbb
inc
add
idiv
icebp
cld
call
popf
sub
sti
(bad)
repz
je
push
add
out
pop
into
(bad)
in
std
jecxz
rcl
inc
or
aaa
mov
(bad)
out
inc
add
idiv
icebp
cld
call
popf
sub
sti
(bad)
repz
je
push
add
out
pop
into
(bad)
in
std
jecxz
rcl
inc
or
aaa
mov
(bad)
out
inc
add
idiv
icebp
cld
call
icebp
movs
mov
mov
gs
sub
xchg
push
call
mov
mov
gs
sub
xchg
push
call
mov
mov
gs
ds
add
jmp
mov
push
xor
ins
dec
(bad)
(bad)
mov
push
push
(bad)
and
xor
icebp
jle
or
stos
shr
pop
mov
call
retf
inc
(bad)
jns
in
or
add
mov
loopne
pop
cmp
xchg
(bad)
mov
shr
pop
pop
stos
or
inc
fdiv
fidivr
jne
pushf
sahf
loopne
shr
add
mov
out
retf
dec
pop
pop
jge
pop
jp
sub
or
cmp
daa
mov
scas
enter
xchg
fcomp
pop
dec
inc
xchg
ins
loop
aam
mov
cdq
imul
mov
pop
out
push
daa
mov
xor
sti
inc
pop
loopne
je
dec
enter
out
out
mov
inc
push
and
scas
xor
imul
loop
addr16
test
repnz
out
mov
rcr
xor
dec
add
and
ror
pop
retf
mov
fiadd
mov
mov
cmp
or
inc
mov
test
mov
xchg
jns
fsub
cli
sub
jle
inc
bnd
pop
inc
mov
std
and
std
cmp
cld
ud0
outs
mov
bound
aas
inc
stc
sbb
(bad)
and
push
loopne
push
inc
je
xlat
or
mov
jp
in
shl
fninit
pop
(bad)
inc
or
movs
leave
sub
jno
sbb
jbe
mov
dec
adc
and
push
clc
jge
xor
movs
lea
adc
pop
mov
add
mov
xchg
inc
xchg
clc
(bad)
add
mov
add
mov
sbb
js
(bad)
aaa
jo
outs
pop
mov
stc
or
repz
dec
add
and
and
push
lsl
sbb
lods
lock
dec
clc
out
icebp
lds
cmp
stos
sbb
js
mov
aas
(bad)
dec
mov
xchg
push
adc
sbb
mov
in
adc
repnz
outs
inc
mov
pop
jg
fidivr
loope
jle
inc
ror
aas
clc
in
imul
std
movs
xor
push
adc
clc
or
mul
aam
mov
xchg
cmp
mov
rcl
clc
test
mov
movhlps
xchg
scas
sub
pop
jns
inc
pop
xchg
arpl
cmp
cmps
sub
out
arpl
push
jo
mov
sbb
jg
or
inc
loopne
sar
add
xor
mov
lock
imul
inc
loope
clc
inc
inc
loopne
jg
cs
std
mov
xlat
(bad)
mov
dec
or
js
inc
out
pop
inc
xor
inc
push
(bad)
jp
push
scas
push
xchg
cmps
adc
dec
popf
cmp
aam
lahf
xlat
popa
lahf
lock
aas
sbb
add
inc
xchg
inc
push
push
lahf
cld
jbe
clc
popa
lahf
(bad)
inc
hlt
and
add
pop
inc
or
cmp
(bad)
inc
push
mov
add
je
mov
push
lea
loop
out
inc
cmp
add
jmp
iret
cld
leave
div
jmp
sbb
add
inc
xchg
inc
push
push
lahf
cld
jbe
clc
popa
lahf
(bad)
inc
hlt
and
add
pop
mov
dec
jl
lock
inc
mov
in
inc
les
jp
mov
cs
pop
adc
movs
in
and
adc
arpl
iret
in
aaa
mov
pop
xlat
(bad)
and
stc
scas
jns
repnz
mov
stos
cdq
cmp
out
mov
xchg
pop
xlat
enter
xchg
clc
(bad)
add
mov
add
mov
ret
or
outs
inc
mov
pop
jg
(bad)
aas
clc
pop
fidivr
inc
mov
xor
mov
inc
call
or
jmp
jmp
add
(bad)
fcmovbe
in
(bad)
cmc
inc
jg
or
outs
inc
mov
pop
jg
fidivr
loope
jle
inc
ror
aas
clc
in
jns
cld
outs
pop
inc
shl
loop
cld
sbb
inc
(bad)
add
fwait
(bad)
inc
hlt
cmp
(bad)
inc
push
mov
add
je
pop
adc
sar
lahf
stc
xchg
cld
(bad)
dec
inc
xchg
clc
fidivr
out
xchg
inc
push
push
lahf
cld
jbe
mov
lahf
or
push
sbb
mov
int
hlt
(bad)
enter
dec
mov
fisttp
cmp
int
lock
jno
aas
cld
sbb
inc
(bad)
pop
add
aam
or
(bad)
pop
xrstor
jbe
cs
int
in
out
mov
es
repnz
jle
addr16
xor
jno
fucompp
cli
cmc
xor
lahf
and
dec
inc
or
sub
add
mov
or
sub
adc
pop
or
mov
adc
ret
mov
add
mov
or
sub
adc
pop
or
mov
adc
ret
mov
add
mov
or
adc
retf
fwait
pop
xchg
ror
or
mov
retf
sbb
test
shrd
addr16
imul
fbld
cmps
iret
fdivr
or
adc
mov
mov
jmp
(bad)
cld
cli
adc
fs
cli
push
inc
or
cmp
mov
lea
(bad)
xchg
jmp
or
pop
dec
push
xchg
aas
inc
mov
sti
clc
adc
fsubr
(bad)
out
adc
clc
aam
js
pop
push
jmp
in
aaa
push
xor
jno
mov
ins
mov
xchg
pop
dec
mov
es
xchg
out
xor
add
dec
imul
sbb
sti
(bad)
or
ret
xor
pop
xchg
shr
into
ss
jbe
pop
call
lds
fwait
or
sbb
data16
outs
bound
ja
add
pop
xor
dec
dec
int3
loop
inc
inc
push
jae
lock
mov
fwait
cdq
pushf
addr16
sbb
ds
outs
out
xor
mov
fcom
ins
into
push
sbb
scas
call
xchg
ja
aam
ins
mov
repz
and
popa
xchg
xor
cdq
stos
cmc
idiv
cmp
pop
arpl
pushf
dec
aam
dec
dec
mov
jb
sub
psubusb
dec
rcr
sti
inc
movs
push
xlat
iret
cmc
hlt
pop
in
pop
inc
daa
pop
loopne
sti
jge
add
sub
lahf
adc
or
aas
enter
in
push
repz
adc
sub
add
out
dec
cmp
inc
mov
cli
sub
int
hlt
xchg
cld
adc
dec
(bad)
inc
mov
cli
sub
cs
clc
adc
data16
mov
push
out
ds
jge
jge
inc
add
inc
pop
icebp
aaa
std
fnstsw
stc
(bad)
shl
cli
call
mov
ja
call
out
jae
jle
mov
sti
les
xchg
ds
sar
pop
icebp
xchg
add
push
shl
sbb
leave
aas
movs
nop
xlat
xchg
adc
mov
fwait
dec
adc
iret
mov
neg
fsub
and
adc
stc
inc
out
pop
lea
add
push
pop
mov
cmp
sti
mov
cdq
outs
and
les
xchg
(bad)
mov
jg
sti
xor
in
sbb
and
shr
in
mov
mov
adc
xchg
mov
jno
xor
leave
shl
cmp
(bad)
dec
pop
ror
imul
and
sar
into
pop
loop
in
(bad)
xchg
(bad)
pop
add
clc
pop
ret
lea
scas
test
xor
add
repnz
inc
push
les
mov
ret
or
sbb
add
movs
fwait
push
mov
mov
sbb
adc
xor
adc
(bad)
icebp
jb
xor
jge
(bad)
dec
(bad)
pop
shl
mov
stos
leave
add
jb
gs
xor
fild
add
mov
pop
inc
mov
xchg
adc
jp
mov
int
mov
dec
jge
cs
push
sar
add
cli
loop
xor
loopne
(bad)
loope
stos
xor
and
cmp
mov
pop
ret
cmp
jle
shl
jge
into
not
mov
pushf
mov
mov
ror
add
xor
stc
cmp
(bad)
jg
gs
jle
(bad)
fcomp
bnd
sub
pop
cli
dec
outs
pop
stc
push
pop
xchg
stos
imul
pop
in
ret
mov
sar
ds
aad
mov
sub
retf
jp
xchg
jo
xor
sbb
loop
popf
fs
int
std
sahf
ds
inc
sub
loope
add
bswap
mov
(bad)
cmc
iret
mov
popa
lock
pushf
int
out
hlt
jge
push
mov
add
and
(bad)
sbb
bnd
xchg
and
pop
inc
sbb
call
scas
jg
fcomi
cmp
in
outs
ret
test
gs
test
add
pop
loopne
icebp
aas
test
(bad)
cli
fisttp
mov
dec
adc
aaa
add
sahf
or
lfs
fisub
rol
push
cmps
mov
(bad)
dec
and
scas
xlat
add
dec
loope
or
in
xlat
mov
inc
xchg
jl
inc
test
(bad)
jmp
mov
mov
xor
jo
xchg
and
pop
lods
push
lock
mov
push
cli
(bad)
mov
add
adc
mov
pop
std
nop
and
loop
xchg
repz
daa
and
mov
in
cmp
mov
shl
push
out
adc
mov
jg
cmp
aaa
loop
xchg
and
cmp
neg
mov
stc
out
sub
adc
push
sbb
les
lea
xor
aas
or
adc
popa
lods
push
clc
jne
scas
mov
and
cmp
inc
xchg
sub
(bad)
std
mov
mov
ja
sar
retf
les
cs
sar
mov
xor
clc
xchg
push
fcom
ins
cli
jns
sub
inc
ds
scas
loopne
mov
inc
jge
rcr
lods
xor
jns
pop
xor
jmp
mov
dec
lods
xlat
std
sub
inc
add
out
ret
mov
add
mov
cmp
jne
inc
mov
idiv
sub
movs
sub
out
mov
int
jecxz
xchg
push
jl
inc
jge
mov
xchg
(bad)
sti
jge
sub
cmp
sbb
mov
gs
sub
xchg
push
call
mov
mov
gs
sub
xchg
push
call
mov
mov
gs
sub
xchg
push
call
mov
mov
gs
sub
xchg
push
call
mov
mov
gs
sub
xchg
push
call
jae
repz
lods
cwde
mov
inc
push
nop
ja
inc
push
sbb
rcl
inc
lock
and
xchg
test
es
dec
iret
bswap
push
xchg
fs
daa
fnstcw
lock
clc
adc
xchg
xchg
movs
mov
ret
sahf
jns
mov
adc
imul
fiadd
aad
adc
fisubr
(bad)
sbb
retf
mov
lahf
inc
icebp
pop
mov
mov
out
retf
popa
cwde
pop
sub
daa
shl
xchg
and
cmp
xchg
jmp
cmp
leave
cmps
jmp
cmp
sub
iret
push
dec
push
sahf
sub
sbb
push
imul
push
fdivr
daa
add
and
mov
rol
sar
mov
mov
call
aam
sub
outs
lods
dec
outs
ret
cmc
dec
arpl
add
fcmovb
jo
mov
cmp
sahf
and
cld
push
jns
call
ficom
nop
aas
(bad)
adc
loope
ss
sbb
jb
in
out
mov
xor
aam
jl
int
(bad)
popf
jae
dec
and
xor
fwait
movs
(bad)
mov
les
cld
fs
mov
daa
call
int
xchg
movs
pop
dec
stos
mov
mov
stos
push
xor
lods
iret
add
dec
push
cmps
cmp
xchg
cld
pusha
jne
adc
popa
mov
inc
or
mov
cmp
add
fucomi
(bad)
xchg
dec
pop
add
push
inc
leave
(bad)
js
(bad)
fistp
mov
lds
cmps
mov
add
ds
pop
sub
sub
dec
clc
mov
mov
lea
xchg
inc
mov
xchg
into
push
xor
or
leave
in
adc
pop
cmp
nop
jo
xor
xchg
xor
aam
fcmovnu
sbb
inc
xchg
ja
xor
sbb
aaa
add
jmp
jle
pop
sub
pushf
sbb
sbb
mov
jecxz
or
mul
mov
leave
adc
jmp
cmp
inc
sar
xchg
lds
test
or
cs
lods
inc
test
(bad)
push
or
call
je
xchg
pop
pusha
sub
jl
inc
sahf
jp
inc
pop
(bad)
cs
mov
dec
dec
jp
inc
sub
sub
mov
cld
adc
sbb
sahf
or
shl
xchg
aad
xchg
inc
xor
adc
loopne
sbb
add
push
out
cmp
sti
jne
inc
xchg
jecxz
scas
les
push
pop
fcom
fld
sub
jle
rcl
or
mov
clc
js
lds
loopne
inc
loop
inc
xchg
sahf
jp
inc
pop
(bad)
cs
fstp
xlat
jge
pop
je
in
sti
mov
inc
add
outs
push
clc
mov
sar
ins
xor
pop
dec
and
sub
push
xor
and
sbb
in
mov
push
sbb
mov
xchg
mov
arpl
and
push
dec
les
jbe
fadd
cmp
adc
(bad)
ds
add
cmp
ud0
pop
inc
cld
cmp
loop
cld
repz
lock
add
jne
xchg
fdivr
add
pop
lock
in
jmp
inc
rol
push
cmp
jl
cs
mov
je
dec
fwait
cmp
dec
pop
adc
xchg
rcr
icebp
push
loop
mov
ja
inc
mov
(bad)
fist
push
jne
sbb
dec
xlat
push
jb
cmp
mov
add
pop
(bad)
cs
clc
js
lds
loopne
inc
loop
dec
push
popf
jmp
pop
dec
sti
adc
pop
stos
dec
mov
dec
mov
xlat
mov
int
clc
jp
out
(bad)
rcr
or
cmp
cmp
movs
pusha
mov
mov
loope
cmp
jl
jecxz
or
mov
outs
scas
scas
imul
(bad)
ds
mov
mov
or
inc
loope
lahf
push
jg
sahf
cmp
add
icebp
addr16
jns
pop
clc
add
mov
mov
in
push
xchg
inc
in
sti
mov
or
jg
lahf
or
loope
mov
mov
rol
test
pop
jne
and
sbb
add
test
add
mov
cld
inc
xor
jp
mov
and
or
dec
xchg
and
mov
dec
leave
cmp
icebp
addr16
jns
pop
clc
add
mov
push
jg
sahf
cmp
add
sti
or
(bad)
fcomip
add
dec
das
clc
es
xchg
sti
ja
inc
shl
js
mov
cmc
jecxz
imul
fisubr
aaa
adc
popa
add
addr16
cmp
sar
or
jnp
dec
clc
jg
repz
lock
lea
stc
imul
xchg
mov
inc
fdiv
pusha
add
inc
ret
or
lds
loopne
inc
loop
inc
xchg
sahf
jp
inc
pop
(bad)
cs
movs
jne
xchg
add
fisubr
push
sti
inc
jle
jle
std
mov
adc
pop
xchg
jmp
sbb
and
dec
in
bnd
(bad)
xor
mov
jge
add
pop
add
xlat
jecxz
mov
shr
xchg
dec
shl
mov
push
pusha
sub
xchg
sbb
jno
or
test
ds
out
push
inc
pop
pop
xor
jcxz
lea
jmp
in
iret
fldln2
and
mov
ror
icebp
leave
cmp
je
add
mov
test
jo
in
dec
inc
adc
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
cmp
mov
mov
inc
std
push
imul
fisttp
push
inc
mov
mov
pop
lods
jo
mov
push
jg
sbb
cld
pop
cmps
es
adc
mov
lods
inc
enter
loope
sbb
test
sbb
cmc
scas
pop
aam
dec
arpl
not
lds
push
out
(bad)
ins
std
pop
push
xchg
xchg
out
clc
inc
cmp
sub
popa
pop
mov
mov
cli
rol
push
sub
push
mov
xchg
or
icebp
pushf
(bad)
ficomp
ja
mov
pop
sub
clc
jo
mul
repnz
lds
xor
lods
les
sbb
ror
cli
jp
mov
inc
lds
pop
lods
fwait
sub
lea
loop
inc
(bad)
ror
mov
dec
in
bound
xchg
lods
jl
icebp
mov
imul
push
push
jp
mov
jbe
cs
cmp
icebp
xchg
cli
xlat
scas
cld
outs
xlat
loope
adc
jo
sbb
dec
inc
js
xlat
mov
jne
sbb
call
inc
jl
adc
pusha
test
mov
pop
jl
push
inc
adc
push
mov
bnd
or
add
mov
ud0
xchg
stos
lock
std
mov
cmc
int
inc
ja
call
aas
les
jbe
xlat
popa
test
ror
inc
fiadd
jecxz
cmps
ins
mov
push
mov
mov
mov
fild
ins
adc
mov
mov
fidiv
rcl
sbb
ins
sbb
lea
add
inc
fiadd
jecxz
cmps
ins
mov
push
mov
mov
mov
fild
ins
adc
mov
mov
fidiv
rcl
sbb
ins
sbb
lea
add
inc
fiadd
jecxz
cmps
ins
mov
push
mov
mov
mov
fild
ins
adc
mov
mov
fidiv
rcl
sbb
ins
sbb
lea
add
inc
fiadd
jecxz
cmps
ins
mov
push
mov
mov
mov
fild
ins
adc
mov
mov
fidiv
rcl
sbb
ins
sbb
(bad)
sar
inc
mov
les
push
aaa
lahf
pushf
xor
sahf
cmp
addr16
clc
xchg
loop
je
cmp
retf
cs
mov
retf
cld
push
shl
xchg
std
mov
cmp
cmp
arpl
(bad)
div
jmp
out
and
aam
(bad)
pop
dec
int
icebp
fisub
es
fimul
sub
jbe
or
(bad)
rcr
mov
xchg
mov
push
(bad)
pop
jae
test
pop
and
pop
dec
cmp
and
rcl
in
aas
jle
hlt
stos
or
ret
fidiv
lods
das
mov
cs
sbb
adc
mov
ret
adc
retf
ins
arpl
xor
pop
sub
jo
pop
outs
loopne
xchg
sub
sbb
cmps
adc
adc
inc
(bad)
in
outs
jg
outs
jl
mov
sub
sub
mov
sbb
cwde
mov
addr16
lods
push
loop
cmc
(bad)
rol
pop
out
das
mov
inc
arpl
in
inc
(bad)
out
cmp
sbb
je
xchg
dec
fld
sub
sub
loop
mov
out
jmp
mov
dec
loop
mov
(bad)
mov
jnp
pop
aas
adc
sub
popf
sbb
push
jle
cmp
sub
mov
jo
jnp
icebp
adc
jmp
xchg
ins
int
out
hlt
fstp
push
dec
fst
sbb
jmp
shl
sub
jmp
(bad)
mov
or
inc
adc
iret
(bad)
sub
jo
aad
fstp
push
pop
jg
or
xor
mov
shl
(bad)
(bad)
inc
dec
sar
sti
inc
movs
push
xlat
sub
std
test
push
add
add
out
(bad)
xchg
dec
pop
mov
loope
xchg
mov
sti
fdivr
mov
in
cmp
mov
mov
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
repz
in
in
push
inc
sbb
loopne
push
(bad)
mov
cmp
push
mov
xchg
nop
stos
mov
repz
jno
xlat
ror
mov
pop
sbb
sar
in
cwde
iret
xor
sbb
mov
mov
sbb
dec
lock
cmc
in
ins
loop
lods
and
or
cs
imul
stos
mov
std
aaa
stos
jle
icebp
mov
mov
jmp
test
xchg
jmp
jne
lea
in
mov
sub
xchg
mov
pop
jp
int
sbb
sub
dec
mov
ins
and
fs
shl
aad
das
xchg
inc
loop
jo
mov
js
push
shr
lock
rcr
shl
mov
mov
mov
lods
pop
jae
ret
movs
jns
mov
adc
inc
aad
mov
loope
cmc
test
cmc
lea
ret
and
in
cmp
mov
ins
shl
xlat
cmp
into
fwait
out
jl
sub
push
icebp
aaa
mov
pop
xchg
cli
(bad)
loope
push
mov
pop
push
test
cli
xlat
cmps
cld
dec
icebp
cwde
xlat
or
pop
inc
adc
js
test
pop
out
aad
mov
sub
add
icebp
sahf
dec
sub
jne
fidivr
jbe
out
ds
sub
imul
push
pop
shr
das
sub
and
inc
pop
inc
xchg
mov
lahf
sbb
imul
pop
(bad)
out
jle
addr16
call
and
push
mov
fldcw
(bad)
int3
in
add
mov
js
sar
mov
mov
fimul
(bad)
test
xchg
arpl
sbb
cmp
addr16
sub
mov
push
jmp
(bad)
lea
scas
lods
fmulp
in
xchg
dec
outs
cmps
add
jo
sbb
in
and
cmps
mov
imul
cmp
aas
lock
ret
lods
ins
jbe
mov
sbb
push
div
xchg
sahf
out
jecxz
sub
addr16
mov
cld
popf
inc
cmp
inc
dec
cmps
scas
add
add
jmp
cli
inc
cmp
ja
(bad)
pop
stc
sbb
aas
mov
push
stc
sahf
or
pushf
les
push
add
push
mov
add
push
mov
add
push
mov
add
push
mov
add
push
mov
add
push
mov
add
push
mov
add
push
mov
add
push
mov
add
push
mov
add
push
mov
add
push
mov
add
push
mov
add
push
mov
add
push
mov
add
push
mov
add
push
mov
add
push
mov
add
push
mov
add
push
mov
add
push
mov
add
push
mov
add
push
mov
add
push
mov
add
push
mov
add
push
mov
add
push
mov
add
push
mov
add
push
mov
add
in
mov
sub
mov
pop
icebp
ds
je
or
rcr
dec
jo
jns
out
adc
mov
ficom
fstp
aas
jns
(bad)
stos
hlt
cmp
cmc
jg
pop
jmp
test
cmp
out
adc
fcmovnbe
mov
ret
inc
sbb
faddp
jmp
jmp
arpl
fcomp
cs
push
cli
data16
jl
sahf
nop
aaa
shl
mov
xlat
dec
nop
add
adc
sbb
and
(bad)
push
dec
push
pop
jno
mov
ja
into
mov
cmp
mov
js
add
push
xchg
(bad)
mov
inc
mov
dec
jne
aas
sbb
imul
retf
xchg
pushf
xor
xlat
aas
xchg
fisub
aad
js
inc
in
outs
pop
(bad)
mov
push
mov
enter
(bad)
dec
add
out
push
movs
cld
cs
mov
daa
int3
inc
add
out
xor
mov
scas
in
and
fsubr
shl
mov
jb
sahf
mov
(bad)
stos
pop
pop
dec
ins
sub
movs
pop
imul
cmps
shl
sub
pushf
jne
loope
jnp
and
sti
mov
stc
push
call
mov
jns
into
dec
(bad)
sub
addr16
aam
mov
jl
loope
ins
sbb
ja
add
mov
jl
es
arpl
stos
xlat
jbe
addr16
es
addr16
jmp
aam
mov
fisubr
xor
arpl
jns
jecxz
jb
inc
push
(bad)
jecxz
add
loop
jbe
daa
mov
in
icebp
mov
retf
cmp
cld
(bad)
in
retf
add
jmp
loop
inc
mov
ficom
jo
mov
mov
pop
mov
xchg
loope
dec
ret
out
jae
and
mov
mov
pop
mul
mov
(bad)
sub
mov
cwde
mov
mov
and
aas
inc
or
mov
xlat
mov
pushf
fwait
inc
mov
sub
mov
lods
ds
mov
jle
cmps
pop
retf
popf
in
outs
outs
jl
pop
push
dec
xor
xor
and
jno
leave
stc
imul
push
shr
js
mov
mov
ret
je
or
add
mov
pop
inc
xchg
movs
lock
std
mov
cmc
hlt
mov
loope
xchg
repnz
lea
push
stc
sahf
or
mov
cmp
dec
mov
mov
gs
sub
xchg
push
call
mov
mov
gs
sub
xchg
push
call
mov
mov
gs
sub
xchg
push
call
mov
mov
gs
sub
xchg
push
call
mov
mov
gs
sub
xchg
push
call
mov
mov
gs
sub
xchg
push
call
mov
mov
gs
sub
xchg
push
call
mov
jge
je
or
pop
xchg
mov
jmp
icebp
(bad)
lock
(bad)
fbld
sub
mov
cmp
jge
push
adc
pop
cdq
das
out
pop
out
into
cmp
dec
or
cmps
inc
lea
cmps
and
xchg
test
hlt
bound
std
call
dec
mov
pop
and
ja
adc
xlat
stos
js
loope
fdiv
fcmove
add
retf
pop
nop
lds
cmp
into
lahf
mov
mov
lock
les
dec
mov
in
or
sub
push
hlt
ins
jo
cmc
scas
mov
test
mov
mov
js
movs
test
outs
jns
fld
enter
retf
push
or
sbb
mov
xchg
in
push
xchg
lods
cld
push
icebp
mov
jno
xlat
and
mov
popa
daa
add
movs
cld
sub
cmp
outs
lock
xchg
es
ret
adc
inc
jmp
jnp
jmp
push
clc
pop
push
sar
or
imul
ret
cmp
repnz
dec
mov
stos
or
test
sbb
cmp
jmp
mov
in
es
ins
mov
jmp
fisubr
rol
ffreep
(bad)
and
push
inc
push
pop
sbb
test
pop
jge
jmp
iret
lods
push
out
sub
popa
je
das
dec
lea
repz
mov
dec
adc
push
sbb
jno
jmp
dec
fldenv
inc
xor
cmc
aaa
mov
fdiv
jb
mov
jmp
mov
repnz
mov
push
push
loope
lahf
out
(bad)
mov
cmp
(bad)
retf
ja
ins
imul
mov
sub
mov
or
hlt
xor
(bad)
cmp
out
pop
inc
jle
sbb
(bad)
repnz
jge
retf
adc
inc
xchg
jno
rep
mov
add
inc
sub
xchg
adc
mov
push
xchg
mov
or
movs
out
cmp
imul
imul
ds
arpl
push
inc
cmp
mov
cld
cmp
dec
mov
stc
push
push
push
(bad)
mov
xor
mov
cmps
inc
pop
mov
adc
cmp
jnp
in
das
inc
daa
dec
loopne
sti
jge
add
sub
ret
jg
(bad)
stc
cmp
inc
fucomi
(bad)
xchg
dec
pop
push
mov
add
(bad)
pop
stc
pop
pop
xchg
xor
push
out
inc
fidiv
shl
sbb
jbe
mov
mov
mov
push
in
mov
push
fidiv
shl
mov
mov
mov
mov
imul
outs
fidiv
shl
fnsave
push
add
inc
fisubr
jbe
mov
mov
mov
push
in
mov
push
fidiv
shl
mov
mov
mov
mov
imul
outs
fidiv
shl
fnsave
push
add
inc
fisubr
jbe
mov
mov
mov
push
in
mov
push
fidiv
shl
mov
mov
mov
mov
imul
outs
fidiv
shl
fnsave
push
add
inc
fisubr
jbe
mov
mov
mov
push
in
mov
push
fidiv
shl
mov
mov
mov
mov
imul
test
xchg
mov
popa
push
jno
scas
sub
ficom
cdq
fdiv
outs
retf
adc
mov
ds
iret
popa
pop
pop
jmp
jae
cmc
repnz
xchg
enter
bswap
dec
fidivr
pop
jmp
sbb
jmp
inc
pop
mov
mov
push
xor
cli
pop
hlt
call
mov
and
mov
pop
outs
inc
loop
unpcklps
push
or
outs
jno
test
cmps
xchg
idiv
out
push
ror
call
push
ret
adc
cmc
scas
outs
lock
mov
scas
cmp
movs
imul
out
and
stos
push
pushf
in
jmp
scas
jp
aaa
nop
imul
pop
push
lods
(bad)
daa
inc
dec
xor
shl
sti
in
imul
shl
test
mov
mov
loop
in
dec
sbb
out
retf
push
fnstsw
add
jne
cmp
push
lock
lahf
loope
jp
shr
faddp
or
jnp
aam
cmp
inc
pop
xor
arpl
les
push
icebp
fs
push
adc
(bad)
add
mov
leave
cld
cmp
or
icebp
pop
mov
scas
sub
ds
cmp
enter
in
or
sbb
ficom
out
add
ret
or
lods
fucomi
adc
lods
jns
jo
jb
mov
(bad)
jl
mov
repz
(bad)
scas
mov
ret
inc
cmp
sbb
jnp
(bad)
icebp
adc
repnz
dec
jp
and
mov
in
and
pop
mov
inc
add
sbb
call
in
stos
mov
xor
enter
(bad)
mov
jnp
mov
cmp
pop
push
jne
jecxz
sahf
xchg
mov
cmc
dec
lea
sub
inc
out
daa
cwde
lds
sub
sbb
and
push
pop
dec
cli
hlt
scas
sub
jecxz
xchg
pop
push
mov
ins
dec
mov
retf
je
and
sahf
inc
dec
dec
out
dec
inc
int
push
sbb
bswap
(bad)
into
lods
imul
lods
in
retf
jb
(bad)
xlat
aas
pop
lods
sbb
call
cmp
push
fs
jno
shl
imul
outs
adc
jbe
inc
fdivr
jecxz
imul
popa
xchg
(bad)
ficom
inc
movs
push
xlat
enter
xor
and
mov
daa
fbstp
sti
or
clc
retf
sbb
(bad)
call
dec
jno
sub
mov
mov
ret
rcr
(bad)
sbb
cli
sub
push
add
mov
pop
push
push
dec
mov
hlt
push
pusha
sbb
mov
sub
adc
sub
push
add
mov
pop
push
push
dec
mov
hlt
push
pusha
sbb
mov
sub
adc
sub
push
add
mov
pop
push
push
dec
mov
hlt
push
pusha
sbb
mov
sub
adc
sub
push
add
mov
pop
push
push
dec
and
or
test
(bad)
cmp
adc
hlt
sub
aad
pop
push
xchg
das
dec
mov
fs
aad
add
push
xor
popa
shl
movs
pop
popa
out
inc
pop
mov
dec
leave
lahf
movs
ret
adc
inc
inc
into
out
push
arpl
fs
jmp
movs
jne
push
(bad)
in
imul
jo
cmp
xor
ret
push
pop
xlat
ins
push
fwait
add
fistp
out
pop
or
adc
jae
jmp
lea
jmp
adc
xor
push
in
fnstenv
push
ds
jge
imul
jg
xchg
and
mov
xlat
pop
xchg
pop
aas
cmp
aam
iret
adc
popf
stos
jmp
cs
sbb
sub
sub
imul
sti
push
aam
mov
fwait
jnp
out
lods
push
fwait
xor
out
fdivp
adc
fsub
je
pop
icebp
out
fistp
jmp
call
sub
jbe
pushf
jecxz
bound
call
xor
mov
fs
xchg
int
sbb
rcr
sahf
mov
lea
ja
sbb
push
stos
jmp
sbb
pop
dec
repnz
mov
(bad)
dec
mov
jecxz
arpl
xchg
jmp
int3
jb
hlt
iret
jp
sbb
sub
mov
in
imul
outs
mov
pop
sbb
(bad)
xor
jle
add
sbb
xor
lods
mov
fisttp
imul
sub
dec
scas
imul
pop
xchg
dec
inc
and
push
xchg
inc
dec
iret
sub
iret
mov
fnstcw
mov
out
add
cmc
scas
test
std
in
mov
sub
aam
jg
push
push
sahf
aas
das
in
sub
inc
add
(bad)
add
adc
jg
nop
pop
push
xchg
test
je
pop
pushf
addr16
ins
jae
push
inc
jle
arpl
lock
adc
inc
sub
mov
inc
adc
pusha
or
mov
adc
add
push
inc
push
add
adc
inc
sub
mov
inc
adc
pusha
or
mov
adc
add
push
inc
push
add
adc
inc
sub
mov
inc
adc
pusha
or
mov
adc
add
push
inc
push
add
adc
inc
sub
mov
inc
adc
pusha
adc
sub
(bad)
pop
pop
sub
jp
jmp
inc
loop
lea
mov
fdivr
repz
aam
push
xor
push
xchg
jge
pushf
fs
jns
dec
push
mov
xchg
aam
xor
or
stc
jp
les
push
inc
arpl
call
cmp
mov
jae
rol
xchg
mov
add
sahf
xchg
mov
aas
pop
pop
(bad)
sahf
mov
or
shr
adc
fld
sbb
xchg
push
or
lods
cmp
test
imul
mov
push
mov
mov
pop
add
aaa
pushf
rol
ss
leave
or
sub
and
jbe
dec
cmp
lods
es
and
cmp
icebp
push
das
jg
mov
xor
push
hlt
and
xchg
add
cli
ror
pop
and
mov
outs
int
lods
test
stos
jmp
paddsw
jmp
inc
mov
sbb
clc
jp
rcr
dec
push
inc
sbb
jg
inc
out
mov
addr16
cmp
ret
repnz
addr16
inc
add
sahf
aam
imul
mov
lea
enter
mov
movs
mov
push
jnp
mov
pop
and
in
inc
iret
push
mov
in
cmp
rol
mov
sbb
xchg
ins
mul
add
sahf
aam
imul
mov
lea
enter
mov
movs
mov
push
jnp
mov
pop
and
in
inc
iret
push
mov
in
cmp
rol
mov
sbb
xchg
ins
mul
add
sahf
aam
imul
mov
lea
iret
pop
clc
and
ret
clc
sub
js
test
cdq
out
retf
push
cmp
cdq
or
jno
call
test
push
mov
js
mov
mov
mov
rcl
add
and
xchg
repz
daa
fdivr
xor
pop
call
push
jo
in
cmp
fistp
mov
nop
in
sar
mov
xor
outs
or
loope
vmread
cld
cmp
mov
inc
(bad)
sar
add
stos
pop
or
push
cmp
mov
mov
lods
aad
std
cmp
rcl
mov
enter
leave
ss
aaa
cmp
js
retf
(bad)
adc
icebp
add
mov
mov
ja
inc
inc
dec
retf
into
out
pop
add
mov
push
sti
daa
fisubr
push
mov
pop
adc
retf
(bad)
not
ins
enter
addr16
lahf
xchg
cdq
aaa
and
into
jo
jp
ret
iret
mov
icebp
pop
cmp
cmp
sbb
test
sub
mov
xchg
loope
pop
add
mov
and
sbb
cmp
ds
inc
jg
lea
xchg
inc
ins
cmps
cld
cmp
mov
pop
mov
jp
sub
add
in
js
and
push
data16
je
fcmove
aad
mov
jle
and
mov
ret
aaa
jb
scas
(bad)
dec
sar
addr16
xchg
ret
inc
cmp
inc
repz
pop
inc
mov
mov
out
fstp
(bad)
fcmovnb
push
(bad)
daa
icebp
pop
mov
movs
cmc
int3
adc
dec
pusha
pop
and
dec
and
icebp
(bad)
das
clc
gs
pop
pop
clc
daa
sar
cdq
jge
ja
stos
fnstsw
cmp
and
inc
sub
arpl
fistp
stos
mov
pop
cmp
mov
shr
in
xchg
pop
mov
xchg
lods
lods
push
retf
jae
jecxz
sbb
call
jmp
bnd
or
xlat
mov
mov
mov
inc
popa
stos
inc
loope
mov
movhps
not
ss
(bad)
not
inc
outs
psubd
cmp
adc
loopne
xor
mov
imul
xor
ins
cmps
leave
jno
mov
mov
popf
enter
push
inc
pusha
sti
push
cmc
dec
aas
ins
mov
aad
lock
sti
pop
inc
ins
fucomi
pop
popa
jns
or
ror
jo
xor
pop
sbb
mov
ds
imul
or
mov
cmp
out
jb
pop
bound
mov
jp
ja
adc
into
adc
mov
mov
ja
popf
outs
ret
loope
mov
outs
je
(bad)
bswap
test
xchg
pop
mov
cs
inc
ret
sub
and
xchg
imul
aas
add
pop
mov
ret
pop
shl
jne
icebp
and
outs
outs
mov
xchg
and
bound
add
sub
f2xm1
xchg
jecxz
ss
loopne
fisttp
mov
lods
and
inc
lahf
cmp
lds
mov
dec
daa
and
shl
retf
(bad)
xchg
inc
sbb
mov
push
cld
dec
aad
test
imul
pop
inc
mov
xchg
add
stos
cmps
inc
loopne
sbb
cmp
adc
out
mov
pop
ins
lods
or
xchg
dec
cld
mov
dec
mov
(bad)
mov
jg
hlt
loopne
sbb
fdivr
in
push
js
cwde
out
mov
ss
add
adc
lahf
test
adc
cmp
call
mov
bound
bound
jns
in
in
and
daa
aaa
loop
in
or
out
adc
arpl
xchg
call
scas
js
pop
dec
mov
shl
add
mov
fwait
out
xchg
pop
aam
jae
lock
sbb
and
cld
push
clc
xor
arpl
imul
loopne
(bad)
ror
pop
loopne
lods
scas
dec
stos
mov
add
das
aaa
cli
pop
sbb
xchg
iret
adc
pop
cmp
inc
scas
test
ret
stc
jae
(bad)
arpl
sti
xlat
dec
pop
in
mov
cmp
mov
pop
imul
imul
xchg
dec
mov
cdq
push
add
jle
repnz
dec
movd
pop
sbb
test
xchg
xchg
fidivr
sbb
sbb
test
int
mov
into
inc
fisttp
std
mov
mov
mov
mov
mov
inc
aam
das
das
adc
inc
test
stos
mov
cmp
jmp
push
leave
in
xlat
rcl
jge
ds
xchg
sub
mov
fst
div
pop
mov
xlat
sub
ins
jmp
ins
mov
adc
inc
and
inc
pop
jbe
sti
and
adc
(bad)
jbe
mov
cmps
xlat
lods
lods
frstor
mov
dec
cmps
inc
ret
add
lahf
inc
clc
(bad)
(bad)
cmp
mov
cli
into
call
ds
(bad)
adc
cmp
sahf
adc
fisubr
js
jb
adc
loopne
imul
pop
test
(bad)
(bad)
cmp
and
push
add
dec
xor
and
cmp
(bad)
stos
in
lods
out
fldcw
xor
retf
inc
pop
dec
shl
pop
mov
add
cmc
pop
cmp
inc
mov
(bad)
sub
sar
cmp
mov
sahf
test
xchg
xor
js
loopne
cdq
icebp
add
jae
jne
iret
adc
pop
fsubr
push
inc
pop
push
jmp
ins
pushf
jl
sbb
xchg
pop
and
sub
add
lods
pop
sub
mov
dec
xchg
ins
aaa
inc
push
lock
xchg
mov
xlat
xor
popf
fdiv
xor
rcr
iret
ret
icebp
push
lea
xchg
jnp
fld
mov
inc
jmp
add
sahf
pop
xchg
adc
or
push
mov
pop
loop
sub
cmps
in
punpcklbw
std
push
idiv
ins
cmp
retf
adc
pop
xor
xchg
sbb
dec
outs
div
ret
cmps
fnstsw
pop
sbb
mov
jge
dec
aam
cld
inc
test
dec
mov
lock
nop
push
clc
test
and
icebp
movs
or
sbb
loope
out
hlt
inc
cmp
clc
jae
xor
xchg
lahf
fnstenv
mov
mov
mov
outs
ss
dec
aam
xor
mov
dec
sahf
and
cmp
loop
test
addr16
shr
je
mov
loopne
aaa
xor
stos
sub
mov
pop
stc
mov
mov
inc
xor
(bad)
mov
imul
pushf
loop
add
mov
cmp
scas
cmps
jmp
int3
call
sbb
push
inc
sub
(bad)
aaa
adc
mov
ret
sbb
mov
jno
stos
sbb
mov
in
movs
mov
mov
mov
movs
popa
fs
fcomp
xchg
arpl
jo
icebp
out
aas
adc
outs
loop
mov
and
imul
lock
pop
retf
ins
test
xor
jne
mov
and
and
xlat
cmp
or
icebp
mov
cli
ds
sub
std
xchg
or
ficom
pop
fsub
jae
mov
not
lahf
push
sar
out
mov
push
cmp
inc
icebp
lods
sbb
popa
xor
inc
aas
mov
fstp
dec
sbb
das
jl
jg
jle
lock
pop
inc
loop
jge
xor
xchg
add
cdq
inc
pop
das
into
sbb
js
pop
lahf
push
push
push
xchg
icebp
add
jge
fist
fiadd
jmp
test
inc
jmp
jmp
jle
mov
jecxz
lea
xchg
test
(bad)
lea
adc
adc
xchg
out
shl
adc
enter
push
ins
fstp
sbb
pop
test
fdivr
(bad)
repz
add
xor
jmp
in
xchg
cmp
movs
sub
sbb
aam
add
cld
push
std
cmps
cld
sbb
lahf
adc
push
shr
cmc
pop
cmp
repnz
gs
add
xchg
and
push
inc
rol
lahf
cmp
dec
pop
ret
(bad)
push
lock
fwait
ins
adc
je
aad
aam
sahf
fimul
mov
into
or
retf
xor
jo
mov
jl
std
movs
in
jle
jle
ficom
icebp
loop
ja
push
sub
fwait
cmps
mov
inc
test
xchg
in
ret
pushf
mov
jnp
out
fist
jg
and
mov
ror
adc
call
js
test
mov
jmp
jl
add
bnd
jle
jp
xchg
test
pop
xchg
in
in
jne
jge
ins
(bad)
data16
rol
fldenv
and
xor
and
jl
scas
jmp
sub
lds
rcr
cmp
lock
popf
cs
sub
add
mov
icebp
imul
jno
out
pop
lahf
mov
shl
mov
jg
out
iret
xchg
sbb
jp
into
xor
int
mov
xchg
test
mov
push
loope
or
xchg
les
test
cmp
jns
inc
lods
mov
mov
or
mov
(bad)
inc
pop
add
pop
retf
popf
pop
ret
lock
js
ret
dec
icebp
mov
pop
mov
pushw
cmps
inc
sub
cwde
adc
push
jnp
sbb
(bad)
add
cld
jae
imul
loop
icebp
ss
in
ret
adc
sbb
div
push
dec
fidivr
mov
mov
jb
out
test
lods
jne
addr16
in
(bad)
jg
ja
mov
stos
sbb
out
push
jb
xchg
out
add
aaa
mov
xor
shl
fstp
loop
sub
mov
je
mov
mov
jbe
pop
pop
jb
jns
mov
ficomp
ret
test
je
lea
icebp
xchg
clc
xor
or
lea
aaa
adc
and
cmps
jl
xchg
push
add
and
cmp
out
fistp
sar
or
fild
imul
jl
outs
movs
mov
neg
jmp
in
pop
jecxz
push
sub
or
es
pop
fstp
not
xchg
and
mov
(bad)
rcl
cmp
fisubr
retf
pop
fsub
xor
into
pop
mov
sub
add
xlat
sub
ffreep
rcr
mov
sub
movs
int
jp
mov
or
xor
movs
xchg
test
xor
add
cmp
ds
mov
sar
(bad)
inc
lock
outs
ins
cmps
dec
pop
mul
pop
repnz
fsub
int3
inc
push
jb
pusha
popa
inc
(bad)
jp
iret
cld
adc
ret
jno
pop
jbe
addr16
jns
cmc
mov
pop
mov
mov
jae
bound
cmps
loopne
ror
nop
jo
add
fnclex
(bad)
inc
ret
fild
es
fwait
sbb
push
sahf
jae
fisttp
lods
jns
stos
vmovsldup
hlt
fnstenv
aaa
mov
pop
imul
sahf
sbb
sbb
ret
shr
mov
retf
fwait
jno
mov
lds
inc
dec
cmp
inc
lods
je
lock
in
addr16
xchg
loope
add
mov
pop
push
ins
fs
cmp
ss
scas
repnz
push
mov
data16
arpl
or
xchg
jl
clc
mov
pop
jmp
movs
test
xchg
stos
jmp
sub
pop
dec
push
cld
adc
mov
ja
mov
hlt
jmp
sbb
mov
sbb
aaa
mov
fcmovnb
call
clc
jno
leave
out
mov
mov
hlt
xor
mov
aad
or
adc
js
jnp
hlt
(bad)
add
xor
outs
imul
mov
bound
arpl
leave
repz
xchg
jbe
xlat
aas
pusha
pop
hlt
lea
clc
clc
(bad)
jno
pop
js
push
shl
pop
push
shr
mov
hlt
sub
sbb
dec
std
mov
sbb
and
inc
lock
xor
out
jge
test
sbb
xchg
pop
iret
setb
sbb
sbb
add
sbb
sahf
or
push
mov
cmp
pop
lds
outs
mov
pop
out
mov
sub
sub
in
sti
mov
jo
and
out
or
and
push
aas
add
mov
pop
inc
jge
jnp
sar
mov
push
in
and
sbb
xchg
or
ret
outs
(bad)
bound
cmp
in
jnp
out
repz
cld
adc
inc
lock
xor
aaa
pop
xchg
mov
add
mov
or
(bad)
aad
pop
(bad)
mov
ret
push
or
scas
fstp
mov
or
sbb
cdq
jno
in
and
ins
mov
cld
dec
mov
sar
add
cmps
fimul
imul
inc
fwait
xor
mov
iret
retf
ficomp
pop
fdivr
fldenv
add
inc
add
add
add
add
add
add
add
add
adc
add
add
sub
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
inc
add
add
add
inc
inc
add
inc
inc
(bad)
inc
add
(bad)
inc
xchg
js
ja
jg
ja
ja
ja
xchg
add
ja
push
push
pop
jnp
mov
jne
push
push
jo
add
push
add
ja
push
push
pop
jnp
mov
ja
ja
xchg
xchg
ja
jo
ja
js
pushw
ja
adc
ja
loopne
addr16
adc
add
pop
jno
adc
push
add
adc
ja
loopne
addr16
adc
pusha
data16
add
ja
ja
jo
ja
js
add
add
add
add
add
ins
xor
add
add
mov
add
bound
add
inc
add
add
add
add
add
dec
imul
add
ja
push
jo
imul
outs
imul
ins
add
(bad)
inc
add
(bad)
or
add
arpl
pop
add
add
push
add
add
add
add
add
add
add
add
and
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
inc
add
add
add
inc
inc
add
inc
inc
(bad)
inc
add
(bad)
inc
add
add
(bad)
push
(bad)
(bad)
push
add
add
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
push
add
(bad)
(bad)
(bad)
(bad)
push
add
(bad)
(bad)
(bad)
(bad)
push
add
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
add
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
add
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
add
add
add
lock
(bad)
(bad)
inc
add
add
add
add
add
(bad)
(bad)
push
inc
add
add
add
(bad)
add
lock
lock
add
lock
lock
add
lock
lock
add
lock
lock
add
lock
(bad)
add
(bad)
add
(bad)
add
(bad)
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
clc
add
(bad)
clc
add
(bad)
clc
add
push
add
jmp
add
inc
add
inc
add
inc
add
add
jg
add
jg
add
jg
adc
jg
xor
jg
jo
jg
lock
push
add
push
pop
(bad)
push
aas
(bad)
push
(bad)
(bad)
push
(bad)
(bad)
push
(bad)
(bad)
push
(bad)
(bad)
(bad)
stc
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
nop
add
jl
add
popa
outs
jae
push
gs
inc
push
add
add
push
add
gs
cmp
add
pop
sbb
add
push
add
add
add
add
add
add
popa
addr16
sbb
inc
add
add
add
add
add
add
add
add
adc
add
add
sub
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
rol
add
add
inc
add
(bad)
inc
inc
add
inc
inc
(bad)
inc
add
(bad)
inc
sub
sub
sub
sub
add
sub
(bad)
(bad)
(bad)
(bad)
jmp
cmp
(bad)
clc
sub
sub
add
clc
sub
das
sub
sub
add
jmp
das
sub
das
sub
repnz
sub
sub
sub
repnz
sub
clc
sub
sub
or
(bad)
(bad)
(bad)
(bad)
(bad)
inc
sub
sub
add
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
or
adc
add
add
add
add
add
add
add
popa
xor
sbb
ds
add
add
add
add
add
add
add
and
add
add
add
add
add
add
add
adc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
inc
add
add
add
inc
inc
add
inc
inc
(bad)
inc
add
(bad)
inc
add
add
add
add
add
or
mov
add
add
add
or
(bad)
lock
add
add
add
or
lock
lock
add
add
or
or
push
loopne
(bad)
(bad)
dec
add
add
add
loopne
(bad)
(bad)
push
(bad)
(bad)
push
add
add
add
loopne
(bad)
(bad)
push
push
add
add
add
add
loopne
(bad)
(bad)
push
add
(bad)
inc
add
add
push
loopne
(bad)
(bad)
dec
(bad)
(bad)
(bad)
inc
add
add
push
loopne
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
or
loopne
(bad)
(bad)
(bad)
(bad)
(bad)
inc
(bad)
(bad)
(bad)
push
add
add
ud0
(bad)
push
(bad)
(bad)
push
add
add
add
add
(bad)
(bad)
(bad)
(bad)
inc
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
sar
push
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
jg
add
add
add
add
add
add
add
add
add
jmp
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
add
add
add
add
add
add
add
add
add
rol
add
add
add
add
add
add
add
add
inc
add
add
add
inc
inc
add
inc
inc
(bad)
inc
add
(bad)
inc
add
mov
inc
add
add
add
add
add
add
(bad)
clc
add
add
add
push
push
push
add
ud0
or
add
inc
add
inc
add
inc
add
inc
add
aas
add
add
add
add
add
add
add
add
add
add
add
add
add
cmp
add
(bad)
inc
add
inc
add
inc
add
inc
add
js
dec
adc
add
add
add
add
push
add
popa
xor
sbb
xchg
add
jle
add
add
add
add
adc
add
add
or
push
add
add
add
add
add
add
add
add
add
add
(bad)
inc
add
add
fstp
fld
stc
clc
stc
add
out
lock
add
add
jns
out
in
(bad)
sti
cld
add
clc
stc
add
jmp
add
add
push
push
add
outs
add
aad
add
jne
imul
add
(bad)
add
fcomp
add
sbb
add
dec
dec
add
and
pop
add
xor
add
adc
dec
inc
aas
add
dec
add
sub
add
cmp
mov
or
add
push
xor
xor
daa
add
call
sldt
pop
aaa
add
ja
add
inc
sldt
push
sbb
add
pop
and
retf
add
and
shl
add
sbb
shr
add
(bad)
jno
add
mov
add
jne
add
js
add
jl
add
ja
add
sub
in
push
add
mov
add
mov
push
add
xchg
sub
icebp
(bad)
xchg
add
call
in
(bad)
add
out
add
ror
add
(bad)
add
fcompp
add
rcl
add
(bad)
inc
idiv
test
add
push
(bad)
(bad)
add
test
add
mov
test
add
mov
and
sahf
add
leave
mov
sub
xchg
add
cmps
add
lds
add
je
add
add
xchg
pusha
add
mov
add
add
outs
add
mov
add
mov
pop
add
xchg
ins
add
cmps
jle
xchg
aam
add
jno
add
arpl
add
add
pushf
ins
add
xchg
push
sbb
jo
dec
mov
jp
fldlg2
out
add
add
pop
inc
add
add
ins
pop
add
in
add
pop
add
repnz
add
ins
add
jmp
add
dec
dec
add
pop
push
add
push
add
add
(bad)
inc
data16
pop
add
jecxz
add
shr
add
loop
add
add
mov
add
scas
fadd
add
in
push
scas
xlat
add
mov
add
mov
add
scas
aam
or
xlat
add
mov
loopne
adc
fiadd
sbb
jecxz
sbb
lods
add
mov
jecxz
and
lea
inc
(bad)
dec
retf
push
retf
push
retf
out
pop
into
jmp
add
jmp
data16
sbb
add
repz
add
std
inc
inc
into
cmc
add
cmc
add
clc
cld
add
aaa
cmp
cmc
sti
inc
loop
cmc
add
(bad)
xlat
add
inc
lock
inc
repnz
in
add
dec
repz
dec
in
add
push
test
sub
add
push
stc
add
push
cmc
add
pop
cld
add
pop
sti
add
push
cli
add
push
repz
pop
inc
xor
xor
add
push
in
add
pusha
inc
ss
in
add
inc
inc
ins
inc
dec
jae
add
add
inc
push
inc
jp
inc
test
cli
add
int
add
dec
inc
pop
outs
cld
add
ds
add
dec
add
cld
cld
add
cmc
cmc
add
repnz
in
in
add
jmp
in
in
loopne
loopne
fstp
fld
fcmovnu
fild
(bad)
fld
(bad)
(bad)
(bad)
add
into
into
add
cmps
cmps
add
nop
nop
add
mov
add
jo
bound
add
cmp
add
xor
add
sub
and
and
push
push
push
add
add
add
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
hlt
hlt
hlt
hlt
hlt
hlt
push
push
push
push
push
push
push
push
push
hlt
sbb
sbb
push
push
push
push
push
push
hlt
and
mov
push
push
push
push
hlt
sub
mov
movs
xchg
cmps
cmc
push
push
push
sub
cmp
or
cmps
cmc
push
push
cmp
inc
inc
das
repz
cmps
mov
inc
dec
dec
add
or
push
cmp
or
out
or
mov
mov
sti
(bad)
mul
jp
xchg
mov
mov
cmp
xchg
push
push
mov
cmp
js
add
push
mov
in
pop
pop
pusha
imul
push
mov
pop
pop
push
pop
jae
push
push
push
push
push
push
mov
arpl
cmc
push
push
push
push
push
push
push
push
push
mov
push
push
push
push
push
push
(bad)
dec
repz
xor
xor
add
movs
add
mov
add
or
add
repz
add
cmp
add
inc
add
push
add
cmps
rol
cmps
loopne
xchg
xchg
aas
or
add
add
(bad)
add
add
add
add
add
add
add
gs
pop
add
(bad)
inc
add
or
add
adc
add
push
mov
add
pop
add
add
add
pop
push
add
popa
xor
sbb
ds
add
add
add
add
add
add
add
and
add
add
add
add
add
add
add
adc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
inc
add
add
add
inc
inc
add
inc
inc
(bad)
inc
add
(bad)
inc
add
add
jo
add
jo
add
jo
add
inc
add
inc
add
inc
add
dec
add
add
add
jo
(bad)
inc
(bad)
inc
(bad)
ud0
clc
or
add
(bad)
dec
clc
or
add
(bad)
dec
lock
or
ud0
jo
add
add
add
add
(bad)
inc
jo
add
add
add
ud0
push
jo
add
add
add
(bad)
(bad)
(bad)
push
or
add
add
ud0
(bad)
(bad)
(bad)
clc
add
add
add
add
ud0
(bad)
(bad)
(bad)
clc
add
add
add
add
add
(bad)
(bad)
(bad)
(bad)
clc
add
add
add
add
add
(bad)
(bad)
(bad)
dec
add
add
add
ud0
(bad)
dec
add
add
add
ud0
(bad)
dec
add
add
add
add
(bad)
(bad)
clc
add
push
out
out
out
mov
add
add
add
push
out
out
out
mov
add
out
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
aas
(bad)
inc
ud0
add
(bad)
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
jmp
add
jmp
add
inc
add
inc
add
inc
add
inc
add
adc
add
and
add
add
add
add
add
rol
add
add
add
add
add
add
add
add
inc
add
add
add
inc
inc
add
inc
inc
(bad)
inc
add
(bad)
inc
add
add
add
add
add
add
add
add
add
(bad)
add
add
add
or
lock
add
add
lock
add
add
lock
add
add
lock
add
add
or
add
add
ud0
add
add
add
(bad)
inc
add
clc
add
add
add
mov
add
std
inc
add
inc
add
inc
add
jg
add
aas
add
lock
add
lock
lock
lock
lock
lock
clc
sldt
clc
pop
add
clc
pop
add
lock
lock
add
loopne
loopne
loopne
or
inc
push
add
add
push
add
gs
xor
add
sub
push
jb
arpl
and
jb
je
addr16
push
outs
jb
bound
imul
jb
ins
and
jae
imul
(bad)
(bad)
inc
add
mov
inc
or
adc
add
pop
add
popa
xor
add
add
je
add
add
add
add
add
adc
add
add
or
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
and
imul
sbb
sub
jae
sub
jnp
sub
mov
sub
mov
pushf
pushf
pushf
add
cmp
add
lods
add
inc
mov
push
push
mov
jae
mov
mov
add
arpl
add
mov
add
mov
pop
mov
arpl
add
mov
imul
jae
mov
test
add
mov
movs
mov
mov
pop
pop
into
add
into
add
movs
into
add
lods
into
add
(bad)
into
add
into
into
add
and
add
(bad)
add
(bad)
add
(bad)
add
(bad)
add
(bad)
add
(bad)
add
(bad)
add
mov
(bad)
add
and
add
sub
add
fiadd
inc
cmp
add
fiadd
pop
inc
fiadd
arpl
add
fiadd
(bad)
fiadd
arpl
add
out
jnp
out
xchg
jae
add
out
lods
lods
out
mov
out
add
out
add
(bad)
out
add
out
add
out
out
add
test
jnp
test
xchg
xchg
test
into
(bad)
test
out
out
test
inc
inc
arpl
add
inc
mov
add
inc
movs
pushf
inc
lods
pushf
inc
mov
inc
mov
movs
inc
mov
inc
(bad)
into
inc
(bad)
(bad)
inc
out
inc
out
out
inc
div
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
add
add
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
jae
add
add
add
add
jae
jae
pop
pop
pop
inc
xor
sbb
sub
sub
push
push
adc
adc
jae
cmp
cmp
sub
and
and
push
and
jae
cmp
inc
xor
cmp
cmp
adc
ds
xor
and
push
dec
inc
dec
sbb
jae
sub
sub
dec
xor
ins
pop
push
pop
pop
sub
and
and
dec
dec
dec
dec
dec
dec
dec
xor
or
adc
cmp
inc
pop
push
push
pop
das
inc
adc
and
dec
push
push
dec
imul
or
push
cmp
push
push
ins
ins
pop
push
jae
inc
or
or
cmp
dec
dec
pop
push
dec
sbb
inc
wbinvd
or
es
sub
sub
jae
jae
sbb
sbb
sbb
cs
sbb
jae
jae
jae
jae
jae
dec
popa
adc
jae
jae
jae
jae
jae
jae
push
inc
jae
jae
jae
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
aas
(bad)
(bad)
(bad)
aas
(bad)
inc
mov
add
add
add
add
add
add
push
add
xor
add
add
(bad)
inc
add
sbb
add
or
and
add
cwde
or
inc
pop
add
add
push
add
popa
xor
sbb
ds
add
add
add
add
add
add
add
and
add
add
add
add
add
add
add
adc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
inc
add
add
add
inc
inc
add
inc
inc
(bad)
inc
add
(bad)
inc
add
add
add
add
add
or
mov
add
add
add
or
(bad)
lock
add
add
add
or
lock
lock
add
add
or
or
push
loopne
(bad)
(bad)
dec
add
add
add
loopne
(bad)
(bad)
push
(bad)
(bad)
push
add
add
add
loopne
(bad)
(bad)
push
push
add
add
add
add
loopne
(bad)
(bad)
push
add
(bad)
inc
add
add
push
loopne
(bad)
(bad)
dec
(bad)
(bad)
(bad)
inc
add
add
push
loopne
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
or
loopne
(bad)
(bad)
(bad)
(bad)
(bad)
inc
(bad)
(bad)
(bad)
push
add
add
ud0
(bad)
push
(bad)
(bad)
push
add
add
add
add
(bad)
(bad)
(bad)
(bad)
inc
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
sar
push
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
jg
add
add
add
add
add
add
add
add
add
jmp
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
add
add
add
add
add
add
add
add
add
rol
add
add
add
add
add
add
add
add
inc
add
add
add
inc
inc
add
inc
inc
(bad)
inc
add
(bad)
inc
add
mov
inc
add
add
add
add
add
add
(bad)
clc
add
add
add
push
push
push
add
ud0
or
add
inc
add
inc
add
inc
add
inc
add
aas
add
add
add
add
add
add
add
add
add
add
add
add
add
cmp
add
(bad)
inc
add
inc
add
inc
add
inc
add
fcomp
inc
or
add
add
add
add
add
or
add
gs
xor
add
add
dec
outs
ja
je
and
gs
je
and
and
jb
popa
je
popa
and
imul
je
je
popa
je
ja
ins
ins
and
jb
and
and
gs
and
je
popa
je
outs
outs
add
(bad)
inc
add
outs
or
or
adc
pop
add
add
add
add
bound
xor
add
test
add
add
add
add
add
push
add
gs
xor
add
pop
out
add
add
pop
add
add
add
add
push
add
gs
xor
add
pop
out
add
add
pop
add
add
add
add
push
add
gs
xor
add
pop
push
out
add
add
pop
add
add
add
add
add
xor
pop
add
(bad)
inc
add
or
add
adc
add
push
push
add
add
add
xor
pop
add
(bad)
inc
add
add
add
adc
add
push
sub
add
add
add
add
add
add
add
xor
pop
add
(bad)
inc
add
add
add
adc
add
push
push
add
add
add
add
xor
pop
add
(bad)
inc
add
and
adc
add
and
inc
add
add
dec
xor
sbb
(bad)
mov
sub
add
sbb
icebp
inc
stos
jl
data16
jb
cmp
xor
or
stos
add
xchg
adc
add
jmp
add
or
data16
dec
outs
fs
xor
or
push
bound
imul
popa
arpl
sub
jne
and
add
add
inc
add
pop
jmp
pminsw
add
fdivr
loopne
adc
dec
inc
add
add
add
sub
add
fild
inc
add
add
add
add
add
add
add
add
or
pop
push
or
or
or
or
or
push
adc
or
adc
adc
adc
pop
sbb
adc
adc
inc
add
add
add
add
or
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
inc
add
or
loopne
add
and
add
add
adc
inc
add
add
add
add
add
add
or
inc
add
add
add
add
add
jge
add
add
add
push
adc
pop
and
xor
inc
mov
adc
xor
or
push
pop
sbb
sbb
sub
cmp
inc
inc
inc
dec
dec
dec
push
push
push
push
push
pop
pop
pop
arpl
addr16
jne
ja
jns
add
xchg
xchg
xchg
xchg
xchg
xchg
cwde
cdq
call
test
stos
mov
mov
mov
mov
(bad)
(bad)
enter
rcl
aad
xlat
fcomp
(bad)
loop
in
out
call
repz
cmc
div
clc
stc
cli
inc
add
add
add
add
add
add
add
add
add
add
add
add
or
inc
add
add
add
add
add
add
add
add
and
push
adc
pop
popa
jno
and
or
mov
or
xor
adc
push
and
loope
icebp
pop
sbb
sbb
daa
sub
sub
cmp
inc
inc
inc
dec
dec
dec
push
push
push
push
push
pop
pop
pop
arpl
addr16
jne
ja
jns
add
mov
xchg
xchg
cwde
cdq
call
test
stos
mov
mov
mov
mov
(bad)
(bad)
enter
rcl
aad
xlat
fcomp
(bad)
jecxz
in
out
jmp
cmc
div
clc
stc
cli
(bad)
fiadd
or
add
add
add
add
add
and
add
or
cmp
clc
call
bound
inc
mov
jg
xor
ret
out
in
inc
out
xchg
inc
and
cmp
loope
ficom
jg
pop
pop
sbb
mov
inc
clc
call
bound
add
mov
sbb
in
xchg
inc
loopne
les
adc
mov
mov
add
inc
icebp
push
mov
(bad)
cmp
pop
push
xchg
inc
fisttp
jmp
jmp
sbb
test
(bad)
fxch
inc
(bad)
sar
add
aaa
ret
dec
aas
in
add
mov
es
ffreep
cmps
(bad)
arpl
inc
xor
sbb
mov
add
inc
sbb
mov
cli
push
pop
clc
add
add
aas
mov
out
stc
cld
inc
lock
add
(bad)
jg
dec
jg
test
clc
pop
pop
sbb
add
xor
xor
sahf
pop
inc
mov
xor
es
pop
std
push
hlt
out
cld
or
ret
aas
inc
mov
dec
cld
retf
inc
retf
jg
repz
shl
mov
xor
cld
test
add
cld
dec
and
scas
loope
xchg
add
adc
xor
sbb
add
mov
fdivr
jae
cmc
inc
lahf
movs
inc
sbb
add
inc
add
xchg
in
repz
inc
loopne
inc
and
inc
icebp
pop
ret
push
inc
enter
xor
and
add
cld
dec
jl
(bad)
rol
dec
pop
(bad)
inc
fcmovne
jg
push
mov
jg
fwait
pop
pusha
hlt
inc
dec
dec
icebp
test
add
inc
dec
nop
in
repz
inc
loopne
inc
and
test
xor
cmp
fisttp
cld
sub
mov
aas
clc
call
inc
aas
(bad)
stos
dec
loop
xor
pusha
xor
jp
stc
sar
add
inc
dec
inc
xchg
xor
add
mov
lock
add
loopne
cmp
rol
add
shl
clc
mov
jmp
xchg
lods
pop
into
fwait
cmp
int
cmp
call
into
adc
mov
jb
pop
and
or
inc
outs
dec
inc
xchg
sbb
xor
loopne
inc
and
sub
mov
push
mov
pop
lea
sbb
jae
add
clc
push
push
push
dec
dec
sub
or
dec
sti
jbe
ja
mov
imul
es
popf
ins
(bad)
push
push
rol
add
icebp
hlt
lahf
jecxz
jecxz
and
or
repnz
retf
and
xchg
aad
inc
pop
adc
cs
out
dec
std
mov
inc
mov
fist
add
xor
xor
sbb
std
push
mov
cld
or
stos
idiv
lock
stos
in
push
cs
in
cmc
stos
jl
les
pop
stos
das
cld
add
xchg
call
clc
adc
enter
push
xchg
xchg
cld
les
es
fdivr
arpl
jne
cli
in
pop
daa
(bad)
sbb
clc
call
xor
push
mov
popf
jae
jmp
mov
sti
movs
aad
sbb
inc
dec
pop
aas
pop
retf
std
jbe
ds
push
inc
or
xchg
cmp
scas
inc
lock
add
loopne
jg
aaa
inc
xchg
repz
adc
icebp
out
mov
aam
ja
mov
mov
sahf
cli
popf
cwde
inc
mov
inc
sbb
mov
movs
scas
sub
(bad)
pushf
test
cmps
(bad)
mov
mov
repnz
xchg
push
in
pop
fstp
cld
or
in
mov
add
mov
dec
cmp
xlat
or
add
mov
jecxz
fcmove
inc
les
mov
out
ret
dec
cmps
cmp
cwde
inc
cmp
aas
icebp
scas
cmp
push
(bad)
imul
xchg
jle
sbb
xlat
mov
sub
ins
xlat
fcomp
inc
xchg
jg
inc
cld
(bad)
mov
loope
clc
or
arpl
add
inc
loop
aas
loope
clc
or
add
je
rcl
outs
(bad)
and
test
out
pop
loop
and
repz
lahf
(bad)
dec
inc
push
mov
iret
das
mov
lahf
lock
add
add
inc
cld
inc
add
xor
addr16
daa
mov
inc
mov
sub
leave
jecxz
push
loop
mov
lahf
(bad)
dec
aad
psllq
out
pop
cld
mov
outs
cld
xor
add
pop
sbb
add
xchg
fninit
mov
scas
in
push
mov
call
mov
fs
xchg
shr
sbb
cmp
and
repnz
inc
in
fnstcw
inc
jae
pop
mov
int
xchg
cmc
(bad)
pop
lock
inc
stos
xchg
inc
pop
and
add
imul
sub
stc
lds
sar
pop
and
hlt
test
aam
jo
imul
mov
and
retf
inc
push
jo
pop
retf
inc
and
dec
clc
pop
sahf
adc
aas
test
(bad)
and
mov
inc
jle
inc
loop
out
idiv
ins
adc
pop
jmp
popa
sbb
dec
xor
inc
leave
sbb
pop
ret
aaa
fs
scas
repnz
aas
push
jl
mov
add
add
push
cld
imul
xor
mov
and
test
bound
loop
jnp
cmp
cmps
loop
popa
jnp
cmps
pop
jmp
clc
dec
adc
xchg
sti
mov
(bad)
fiadd
nop
(bad)
mov
mov
cld
inc
dec
addr16
rol
test
and
movs
jl
inc
bnd
imul
ins
jb
pushf
shl
test
je
jmp
ret
sbb
xor
push
xchg
fidivr
cs
push
xchg
aad
mov
add
imul
test
ss
cmp
add
sub
dec
pop
imul
fcmovne
inc
repz
pop
fcomp
lods
jmp
adc
inc
leave
sbb
loope
xor
mov
inc
and
mov
(bad)
dec
mov
jmp
jg
and
jg
mov
pop
enter
sbb
inc
fs
test
xchg
loopne
lds
stc
push
imul
stos
js
call
inc
and
inc
stos
fsubr
out
fidivr
imul
and
inc
scas
cmp
add
fisttp
inc
ret
out
inc
mov
aas
jmp
jg
and
pop
js
cmp
imul
loop
data16
jo
movs
inc
leave
add
ins
add
jb
xlat
inc
and
pop
(bad)
iret
add
call
jg
adc
sbb
jbe
stc
cmc
inc
inc
cwde
jg
xchg
repnz
adc
arpl
inc
mov
rol
jno
imul
inc
leave
push
ins
outs
pop
ret
xor
(bad)
(bad)
xor
xor
stc
mov
(bad)
and
jbe
(bad)
jg
pop
outs
(bad)
and
outs
pop
nop
xor
pop
mov
jb
dec
shr
aad
stc
and
test
push
ret
into
push
jl
ror
jg
cmc
mov
in
adc
cs
adc
fcomp
dec
std
adc
clc
ins
inc
jg
and
(bad)
mov
jl
loop
pop
mov
cmp
cmp
out
retf
(bad)
mov
pop
je
stc
and
push
mov
ds
mov
mov
addr16
inc
mov
arpl
lods
adc
jg
outs
(bad)
es
xor
add
shl
mov
adc
pop
xchg
cmps
test
ss
pushf
das
call
aaa
ret
lods
movs
sub
repnz
dec
loope
and
adc
mov
jecxz
add
loope
jg
(bad)
inc
leave
dec
(bad)
(bad)
and
out
xlat
je
xor
stc
mov
out
outs
in
repz
test
jge
aas
mov
mov
cli
scas
cmp
jge
cld
(bad)
mov
fistp
inc
test
inc
adc
xor
ret
jae
add
pop
dec
jg
adc
xchg
sub
adc
fsubr
add
int3
iret
stc
and
dec
inc
xchg
pop
cli
scas
cmp
jge
cld
(bad)
mov
xchg
push
outs
dec
mov
aas
call
add
fistp
mov
cld
inc
jle
movs
aam
int3
and
fcmovb
out
pop
xchg
lea
xchg
iret
out
jae
sub
sub
movs
inc
leave
sbb
sub
mov
int
add
mov
jmp
dec
das
(bad)
fild
daa
(bad)
inc
aas
jmp
outs
(bad)
and
pop
dec
pushf
lahf
ds
push
sub
pop
xor
jnp
ja
xchg
inc
and
xchg
jp
add
in
popa
icebp
inc
ror
dec
inc
clc
mov
rcr
rol
jmp
jg
and
je
bound
test
add
iret
mov
and
sbb
out
fidivr
pop
mov
mov
cld
inc
dec
sti
dec
cld
xor
mov
addr16
xchg
jne
das
mov
xchg
push
cmp
jle
xlat
mov
scas
in
loope
dec
jg
inc
dec
xchg
popf
addr16
mov
inc
or
int3
retf
pushf
inc
rcl
dec
jg
pop
xchg
scas
mov
add
aas
cld
outs
mov
leave
aas
je
out
inc
stos
retf
loope
test
repz
mov
jg
inc
inc
stos
sbb
xchg
fidivr
sbb
cdq
fwait
inc
and
jg
fld
mul
addr16
clc
add
jmp
arpl
sub
stc
inc
dec
mov
pop
in
adc
es
push
lds
inc
mov
inc
cld
movs
inc
leave
pop
cli
mov
jmp
jge
cld
(bad)
mov
xchg
arpl
js
pop
pop
hlt
jmp
(bad)
imul
popf
mov
popf
push
sti
pop
dec
jg
jne
out
sub
mov
mov
jp
jno
in
popa
outs
dec
jg
inc
jg
pop
aas
out
fidivr
add
sub
clc
add
jmp
repnz
and
adc
aas
arpl
and
adc
(bad)
push
pop
jb
loop
les
gs
sbb
test
jmp
xchg
jp
pop
jp
add
out
out
clc
push
push
pop
clc
or
inc
sbb
js
add
sbb
aaa
pop
push
pop
pop
cmp
data16
push
ins
jne
lds
xchg
jno
mov
jae
je
jmp
test
jnp
retf
out
pop
in
aad
add
repz
jnp
inc
les
inc
clc
or
icebp
pop
imul
aas
inc
sbb
mov
loopne
fcmovne
jno
mov
loop
lea
lahf
(bad)
dec
inc
push
mov
fxch
pop
jp
add
jmp
jg
das
xchg
sbb
mov
inc
jecxz
ds
inc
cld
cmp
ds
pop
xor
pop
int3
nop
inc
pop
fldcw
push
out
adc
xchg
leave
loop
daa
aam
xchg
push
ror
imul
sbb
lock
(bad)
jecxz
fwait
sub
xor
sbb
jmp
cmp
fnstsw
in
int
pop
fld
imul
enter
xor
aad
jecxz
inc
cmp
neg
cli
sub
push
stos
ret
dec
das
mov
cmp
call
daa
ret
nop
fcomp
adc
mov
jmp
sbb
leave
cmp
inc
pop
jns
sbb
(bad)
jo
and
dec
lea
and
(bad)
xlat
dec
loopne
push
dec
push
or
jns
mov
mov
sahf
sub
and
xor
jne
dec
xchg
cwde
ja
lea
imul
(bad)
daa
pop
iret
and
icebp
add
mov
stos
dec
mov
call
add
bound
sbb
xchg
movs
dec
xchg
mov
out
mov
lods
pop
adc
ds
xchg
mov
add
mov
mov
jg
jp
inc
sar
icebp
retf
ds
dec
cmp
inc
push
repz
icebp
jne
xlat
in
sub
stos
pop
sub
les
arpl
fwait
(bad)
stc
or
(bad)
call
stc
sbb
adc
mov
scas
cld
adc
pop
repz
inc
loopne
jg
mov
ficomp
add
add
xlat
(bad)
push
(bad)
rcr
gs
dec
sbb
into
dec
mov
xor
dec
(bad)
jne
pop
or
(bad)
xor
shr
aaa
icebp
inc
imul
(bad)
jp
adc
xor
into
rol
xor
movs
scas
sub
jle
aas
leave
xor
cmp
mov
inc
add
rol
cld
into
idiv
add
loopne
sbb
add
add
inc
mov
cmp
jl
icebp
sub
jmp
mov
xlat
or
rol
xchg
mov
sub
ja
sti
inc
js
jmp
push
sbb
(bad)
les
xlat
out
scas
test
mov
adc
mov
(bad)
test
push
jne
xor
(bad)
and
or
cmps
(bad)
stc
popf
outs
inc
lock
mov
ja
mov
cld
add
cs
jecxz
(bad)
sub
les
inc
lods
dec
les
push
xchg
jecxz
les
cli
push
jl
inc
or
clc
stos
in
pop
jl
dec
icebp
les
repnz
in
mov
das
out
mov
xor
out
inc
sub
add
sar
add
mov
out
mov
mov
xlat
lea
mov
repnz
jo
push
mov
adc
iret
clc
pop
inc
adc
ja
pop
dec
test
pop
test
das
repnz
out
ds
hlt
cmp
jg
or
add
je
lock
sub
scas
cld
add
cs
iret
icebp
pop
inc
shr
sub
inc
shl
loop
cld
sbb
add
push
cli
scas
inc
inc
or
pop
in
pop
sar
idiv
add
ds
aas
lock
or
jmp
or
add
ror
adc
(bad)
add
add
add
jne
and
test
out
icebp
pop
dec
stos
pop
clc
xlat
icebp
or
int3
cmc
loop
cld
sbb
inc
lds
push
xor
add
shrd
xlat
loop
cmp
loopne
sbb
add
add
inc
mov
cwde
fcomip
cmp
inc
loopne
inc
icebp
jne
repz
clc
mov
add
mov
add
imul
add
mov
inc
push
mov
add
push
(bad)
stos
cdq
inc
rol
xchg
stc
pand
mov
add
xchg
mov
inc
cdq
fsubrp
inc
add
aam
inc
add
ror
cld
iret
pop
jg
das
pop
(bad)
cs
adc
inc
push
sar
add
push
add
jne
nop
aas
out
icebp
das
dec
call
add
out
pop
in
outs
cmp
lahf
pop
mov
arpl
xor
xor
(bad)
or
inc
mov
add
rcr
(bad)
addr16
inc
sbb
xchg
pop
jecxz
les
add
inc
pop
push
dec
icebp
out
push
jmp
add
aaa
lahf
inc
mov
add
out
pop
in
outs
cmp
lahf
pop
mov
mov
xchg
in
icebp
in
fsubr
pushf
movs
jg
retf
test
cmp
fcmovu
fstp
mov
push
mov
or
jmp
mov
or
inc
cmp
xor
jg
dec
(bad)
ret
das
les
adc
inc
jne
enter
fdivr
sub
scas
ds
shl
out
mov
cmp
data16
test
mov
loop
push
jb
cmp
cmp
push
dec
adc
pop
mov
xor
and
mov
adc
data16
inc
and
cmp
jecxz
stos
pop
jl
jle
mov
add
bound
mov
xchg
mov
xchg
mov
sub
inc
add
test
sar
cmps
xchg
icebp
xor
test
call
pop
scas
fst
xchg
mov
dec
or
out
data16
call
cmps
mov
je
sahf
adc
pop
sti
(bad)
mov
mov
aas
xchg
ds
ins
sub
xchg
lods
cmc
jmp
dec
sbb
mov
sub
xchg
push
jmp
mov
dec
in
jns
push
sti
jmp
jne
mov
sub
adc
dec
ret
shl
jmp
sub
mov
jmp
(bad)
lahf
xchg
push
sti
xchg
aad
ret
(bad)
adc
in
sbb
cmc
scas
retf
in
mov
call
jp
pop
mov
or
pop
retf
nop
sub
adc
or
pop
test
or
mov
mov
and
adc
or
int
out
cmc
scas
mov
dec
ins
jb
stos
push
movs
sub
loopne
mov
lea
jmp
imul
fisub
sti
jmp
sub
scas
and
jnp
call
xchg
out
pop
lahf
xchg
cmp
sub
fild
mov
aas
inc
jnp
inc
sbb
mov
push
cmp
icebp
ss
out
(bad)
pop
push
fwait
retf
popa
addr16
rcr
push
fdivr
dec
adc
pop
dec
push
sbb
bound
jb
mov
inc
push
and
lods
shr
pop
pusha
jnp
sbb
jno
adc
sub
sub
(bad)
and
ret
and
imul
jp
rcl
bound
frstor
and
pop
rcr
sbb
je
push
or
mov
jp
test
lods
(bad)
fld
outs
pop
mov
jecxz
inc
add
stos
ja
loop
mov
leave
cmps
pop
fucomip
push
push
xor
int
test
mov
pop
lods
dec
shl
mov
or
shl
jne
inc
jle
enter
stos
jp
jns
in
ins
pop
retf
aad
pusha
jmp
inc
adc
nop
jb
les
jnp
cmps
test
sahf
icebp
and
push
popf
sub
jns
xor
retf
adc
dec
test
sahf
cwde
stos
mov
adc
shl
xchg
push
or
jp
mov
nop
shl
aam
repz
leave
sbb
jle
cli
jl
aad
pop
test
call
pop
ret
mov
add
mov
cmps
sbb
sub
fnstenv
mov
xor
sbb
or
icebp
xor
push
ins
and
lock
push
lods
lds
xchg
mov
push
test
cdq
push
xchg
mov
push
lahf
or
mov
inc
daa
add
push
mov
xor
pop
and
jge
push
dec
push
cwde
int
test
fisubr
jae
push
mov
ret
mov
sti
mov
mov
cmc
sbb
sbb
pop
or
dec
jl
in
sbb
pop
sub
lds
ret
fs
mov
cmp
stos
push
lea
jge
jo
push
imul
gs
imul
sub
pop
mov
icebp
inc
xchg
and
pop
sbb
test
push
cli
test
stos
ficomp
rcr
cs
xchg
adc
(bad)
(bad)
mov
push
ret
cmp
dec
out
cs
xchg
sbb
outs
sahf
pop
mov
mov
je
fs
mov
push
jno
jp
pushf
mov
mov
jo
xchg
xchg
out
sub
iret
mov
(bad)
test
xor
jp
mov
in
or
add
cld
sub
shl
mov
gs
or
ret
adc
cmp
pop
xchg
repz
adc
aam
mov
push
aaa
das
adc
enter
retf
cmc
and
mov
lea
cdq
xor
or
call
pop
sbb
(bad)
xchg
(bad)
jecxz
or
mov
pop
sbb
jp
hlt
fwait
mov
into
rcl
adc
shl
cmp
xchg
gs
imul
cmps
push
pusha
data16
add
test
das
shl
inc
xor
pusha
mov
enter
iret
sub
and
xor
inc
imul
(bad)
ja
loop
enter
push
inc
mov
pop
jge
mov
and
pop
mov
dec
lock
ins
jo
lods
pop
imul
sti
hlt
scas
dec
add
out
cdq
leave
mov
lahf
mov
mov
jnp
add
aaa
mov
pop
jno
add
fiadd
mov
outs
adc
iret
outs
adc
in
adc
xor
adc
add
and
daa
jmp
ds
and
lods
mov
out
ins
retf
fisttp
pop
mov
mov
ja
daa
inc
push
out
out
cwde
scas
cdq
loopne
sbb
ret
inc
xchg
outs
pop
inc
fcomp
push
inc
shr
pop
mov
sbb
aas
test
jg
stos
push
icebp
fs
adc
jge
sti
pop
sub
icebp
aas
jecxz
loopne
fild
pop
mov
in
mov
jg
mov
inc
iret
adc
inc
fsubr
jb
xor
mov
les
add
popf
aas
sub
call
cmps
loopne
xlat
repnz
inc
jns
sub
popf
jns
ror
push
les
pop
inc
clc
jne
fistp
imul
cs
push
popa
mov
out
scas
push
aaa
call
jne
push
arpl
cld
adc
jp
in
vmaxps
jl
lods
fistp
repnz
pop
jle
and
cmps
mov
jecxz
and
movs
movs
dec
xor
movs
dec
pop
cli
fsubp
fnstcw
adc
xlat
ret
mov
std
jbe
das
push
jmp
dec
sti
push
mov
adc
push
shl
int
ds
and
ret
aam
lds
fisttp
jg
js
add
push
aam
ins
outs
add
adc
dec
cmp
adc
fs
scas
add
fucomip
movs
jecxz
cmp
xchg
dec
icebp
mov
lahf
sbb
cmps
aad
jae
cmp
or
outs
or
shl
scas
mov
je
popf
inc
or
mov
add
stc
xchg
ins
arpl
add
pop
dec
je
jge
stc
sbb
pushf
dec
test
mov
(bad)
cmp
or
inc
mov
adc
dec
jg
jmp
stc
push
(bad)
sbb
pop
out
push
cmp
mov
xor
loop
mov
gs
mov
scas
fild
pop
dec
gs
push
dec
loop
in
loopne
push
sub
daa
add
cmp
mov
pop
test
dec
adc
adc
xchg
outs
xchg
or
daa
jo
in
mov
inc
outs
mov
sbb
ins
jmp
sbb
out
aas
mov
jns
lods
pop
add
sbb
popa
or
cli
sbb
mov
pop
mov
sub
fcmove
iret
cmps
push
arpl
sub
pop
pushf
popf
fucomi
out
jge
icebp
sahf
dec
(bad)
cld
and
mov
cmp
xchg
stos
shl
lock
sbb
jns
test
pop
pop
sbb
mov
mov
dec
repnz
test
push
out
mov
les
pop
mov
push
fldcw
push
std
mov
(bad)
or
nop
sub
mul
jmp
fisttp
pop
mov
loopne
adc
mov
aaa
call
test
(bad)
rcr
std
psllw
lahf
ret
call
ror
cld
cmp
ret
adc
xchg
pop
push
cmp
test
xchg
or
addr16
push
rol
pop
dec
idiv
stc
daa
stc
popf
push
movs
dec
adc
xlat
xchg
jbe
inc
xlat
fdivr
in
pop
loopne
add
loop
test
inc
mov
enter
adc
and
xchg
repz
(bad)
push
sbb
aas
adc
and
jnp
ds
shl
aas
clc
dec
loope
stc
cmps
mov
jmp
mov
and
mov
inc
dec
adc
(bad)
cmp
jecxz
add
mov
cld
pop
stos
js
iret
push
nop
shr
mov
jns
out
fcomp
dec
fadd
add
jno
stc
pop
daa
or
jle
inc
pop
sar
sahf
push
lea
sbb
sub
jmp
js
loop
(bad)
bsf
push
sub
mov
popa
aam
scas
ret
xchg
call
cmp
fiadd
inc
icebp
jle
ficomp
mov
push
xchg
inc
cmp
sbb
ins
cli
push
jae
xor
jnp
(bad)
loope
push
ror
push
jae
push
mov
shl
pop
(bad)
lods
xor
inc
mov
ret
mov
pop
push
aam
je
out
jmp
outs
push
inc
xchg
popa
jmp
pop
mov
jl
clc
test
sti
pop
call
mov
mov
push
call
push
and
int3
jo
shl
jmp
aas
loope
fst
aam
outs
das
inc
mov
mov
inc
arpl
sub
xbegin
mov
xchg
xchg
stos
sub
(bad)
(bad)
mov
repnz
dec
or
mov
xchg
popa
xor
or
inc
xchg
arpl
add
xchg
dec
add
pop
outs
les
dec
loopne
add
xchg
call
jle
pop
ss
rcr
and
push
or
xchg
add
jb
imul
std
xchg
cld
pop
jge
jle
push
clc
mov
or
les
(bad)
xor
push
in
pop
jne
jo
pop
retf
test
xor
inc
mov
(bad)
xchg
icebp
(bad)
test
xor
aad
sub
and
in
fbld
rol
or
fdiv
aam
addr16
ret
ficomp
retf
cmps
test
popa
in
sar
jno
or
mov
(bad)
test
(bad)
clc
inc
dec
push
push
rcr
mov
hlt
mov
fmul
add
mov
pop
or
ret
sar
pop
xor
fimul
call
mov
int
jno
cs
sub
push
xor
push
popa
rcr
xlat
(bad)
fadd
inc
iret
iret
sar
xchg
ret
dec
repnz
sub
fs
mov
cld
cmp
lods
mov
sbb
push
ret
aaa
push
jo
int
mov
add
retf
sbb
sub
add
sbb
aas
adc
fisttp
fstp
and
(bad)
fwait
test
push
mov
and
and
inc
jne
aam
sub
pusha
stos
cmp
scas
in
mov
jle
clc
sub
mov
mov
add
fld
pop
push
mov
mov
sbb
not
cmp
add
jmp
jno
mov
xchg
jo
jg
push
inc
inc
dec
scas
xor
les
sbb
xchg
jno
sbb
daa
outs
push
xchg
jmp
das
hlt
ds
xchg
outs
push
retf
dec
icebp
cmp
test
ins
sbb
mov
sub
add
sub
int
bound
fisub
jb
xlat
push
nop
lods
lods
(bad)
jmp
sbb
lahf
dec
cli
xor
adc
inc
nop
xchg
inc
jecxz
cld
xchg
loop
inc
fwait
jecxz
fwait
pop
push
cmovb
fsubr
jb
test
repnz
ds
inc
xor
lahf
dec
jns
imul
jp
xlat
imul
cmp
std
pushf
jl
movs
mov
mov
or
daa
pop
clc
in
mov
int
popa
or
in
stc
call
jl
pop
xchg
mov
pop
jns
cli
repz
test
repz
cmp
add
std
(bad)
sar
jp
imul
scas
loop
retf
mov
sahf
sahf
je
aas
out
fnsave
mov
mov
push
add
rol
add
dec
xor
add
cmp
xchg
add
sub
(bad)
cmp
rcr
or
sbb
sbb
stc
mov
cmp
mov
mov
mov
mov
sub
cld
outs
mov
inc
add
adc
test
jns
jbe
std
cmps
sbb
pop
addr16
mov
loopne
jge
test
xchg
pop
fidivr
push
lds
cld
adc
sbb
in
jbe
(bad)
fidivr
inc
adc
add
sub
je
xchg
mov
and
cmp
data16
aaa
push
push
sub
mov
out
popf
xor
ds
mov
mov
inc
retf
test
cmp
dec
clc
mov
cli
dec
popa
sar
mov
add
mov
in
mov
aas
int3
mul
fwait
pusha
sub
loopne
or
call
push
sbb
mov
ret
inc
inc
(bad)
std
jne
inc
(bad)
sar
bound
jne
sbb
fistp
aad
stos
stc
xlat
std
add
cmp
cld
(bad)
xor
jl
xor
call
in
imul
in
xchg
jecxz
sub
or
into
xchg
inc
(bad)
aad
sti
push
clc
mov
inc
leave
cmp
add
inc
sbb
pop
or
out
je
push
push
retf
mov
in
xor
pop
ins
xor
jo
nop
scas
push
adc
push
dec
or
cli
inc
xor
xchg
retf
mov
add
into
test
mov
sbb
hlt
sar
add
mov
loop
mov
(bad)
into
sbb
test
imul
adc
cwde
jmp
pop
fnsave
mov
(bad)
xchg
mov
push
ror
mov
sbb
mov
cmp
dec
daa
mov
(bad)
(bad)
jne
enter
pop
fbstp
mov
cmp
ror
stc
into
jno
xchg
popf
jnp
lods
(bad)
fldenv
jp
mov
jle
mov
test
retf
cmps
xchg
(bad)
cld
xchg
lock
push
sbb
cmps
inc
jecxz
shr
sbb
pushf
jns
sbb
jg
int
xor
out
iret
sub
(bad)
cli
and
push
dec
aas
les
mov
sub
arpl
xchg
cld
pop
mov
xor
es
inc
(bad)
aad
lahf
fdivr
lds
pop
push
inc
sbb
xchg
inc
(bad)
(bad)
jo
pushf
jmp
enter
jnp
mov
dec
clc
push
mov
pop
imul
add
sub
sub
inc
js
cmps
mov
imul
pop
mov
mov
mov
inc
sub
push
jmp
jne
clc
cmp
in
repnz
aas
int3
retf
or
into
les
(bad)
sbb
in
push
jmp
and
jmp
stos
mov
dec
fld
(bad)
mov
pop
scas
test
jecxz
pusha
imul
cmp
repz
(bad)
inc
or
loop
cli
or
fcomip
cli
pop
(bad)
xor
lds
aas
jmp
mov
jl
cmp
mov
add
push
in
xor
stos
xor
out
ret
pop
(bad)
enter
cmp
adc
inc
(bad)
jmp
jecxz
es
dec
cmp
sti
fnstcw
clc
fnsave
stos
fnstcw
leave
std
scas
add
mov
ds
jno
cmps
imul
xchg
aaa
mov
xchg
inc
mov
push
mov
add
pop
aas
clc
(bad)
test
dec
pop
dec
sub
out
sub
ins
(bad)
out
xor
cdq
sbb
push
dec
movs
push
push
cmp
pop
xlat
aaa
in
mov
mov
xchg
inc
mov
cmc
scas
dec
mov
sbb
cmp
pushf
push
xchg
aad
rcl
lock
xchg
jmp
xchg
imul
jno
imul
cmp
add
shl
dec
mov
mov
fwait
daa
aas
stc
push
scas
inc
sti
xor
xchg
add
jns
sub
pop
sti
dec
mov
aaa
fwait
push
test
cmp
fdivr
push
mov
sub
fisttp
lea
sbb
fbld
fwait
movs
mov
mov
icebp
mov
adc
push
test
add
int
dec
inc
movs
mov
sahf
outs
and
cli
ins
xchg
sbb
mov
xor
pop
cmp
xchg
stos
shr
xor
xor
add
inc
jecxz
add
mov
add
xchg
xor
add
inc
jecxz
je
adc
ja
push
add
dec
sbb
(bad)
movs
jnp
(bad)
in
cmps
loop
jno
push
rol
(bad)
pop
jg
fst
fnstenv
lds
xor
add
jmp
pop
sub
pop
adc
stos
cmp
mov
out
dec
fcom
cmp
aad
fs
mov
not
mov
(bad)
lds
movs
mov
add
mov
std
add
inc
xor
pushf
mov
scas
and
mov
dec
cmp
mov
adc
add
aas
fs
adc
sbb
fld
clc
fnsave
iret
in
dec
jecxz
inc
std
out
push
rcl
inc
inc
push
outs
adc
xchg
sbb
pop
adc
add
stos
pop
rcr
fiadd
push
dec
push
sbb
nop
jmp
neg
scas
jno
add
std
mov
jg
stc
mov
or
out
push
push
jg
mov
mov
mov
or
jg
pusha
xchg
shr
mov
pop
ret
fidivr
push
inc
xchg
popf
lods
out
pop
scas
jg
dec
sbb
jnp
inc
iret
inc
(bad)
push
mov
(bad)
jae
add
xor
jo
arpl
xchg
jae
sbb
add
dec
adc
adc
push
xchg
mov
nop
aas
idiv
sub
xor
fcomp
(bad)
mov
ins
(bad)
scas
mov
int
add
stos
daa
(bad)
mov
and
dec
dec
fidivr
frstor
call
pusha
addr16
lods
xor
fwait
rol
inc
ficom
xchg
pop
cld
enter
sbb
jb
add
mov
pop
ret
pop
or
fadd
loope
mov
shl
mov
shr
mov
add
or
pop
shl
dec
(bad)
jl
lods
jmp
mov
pop
dec
add
dec
xchg
jo
mov
xchg
dec
rol
loopne
adc
rcl
mov
push
and
push
cmp
repnz
aas
jmp
dec
std
add
div
or
imul
pop
jbe
call
ds
clc
jnp
add
loopne
inc
mov
mov
push
out
xchg
mov
xor
or
call
jl
sub
enter
and
jp
test
sahf
or
cli
or
mov
lea
add
scas
cwde
aas
popa
fist
add
lods
lods
xchg
out
dec
call
mov
test
retf
jns
cmc
ret
sbb
lock
jne
out
into
(bad)
push
jnp
outs
xchg
imul
retf
mov
ja
dec
shl
in
addr16
(bad)
fist
(bad)
and
out
clc
jb
out
pop
mov
add
and
add
jae
jno
and
mov
and
(bad)
sahf
adc
xadd
push
popf
arpl
and
mov
sti
mov
mov
(bad)
outs
fsubr
ret
jle
fistp
pop
adc
test
imul
les
adc
mov
and
add
adc
mov
mov
mov
out
sbb
mov
adc
push
iret
test
lods
xchg
cmps
and
jae
jbe
jle
mul
or
movs
(bad)
pop
sbb
sar
inc
mov
jmp
dec
push
icebp
push
xchg
mov
out
dec
jbe
retf
jbe
test
in
mov
jns
push
fcomp
dec
inc
or
inc
or
mov
aad
js
repnz
shl
gs
add
movs
popf
mov
test
add
mov
jg
jl
mov
ficomp
test
shr
pop
and
add
xor
rcl
in
test
push
xor
(bad)
push
imul
mov
mov
lahf
(bad)
inc
sysenter
(bad)
or
inc
aam
aas
(bad)
ret
das
mov
pop
or
imul
repz
and
test
xchg
lea
mov
jg
mov
call
lods
fcmovnu
cli
repnz
clc
das
popa
loope
add
xor
dec
ret
mov
out
mov
scas
sbb
mov
and
cmp
stos
xchg
push
movs
aaa
jns
push
pop
push
mov
and
xchg
jge
(bad)
and
pop
mov
sbb
mov
xlat
push
cmp
jne
jmp
jb
sub
pop
icebp
jmp
leave
xchg
(bad)
dec
mov
aam
cmp
sbb
pop
js
push
xchg
pop
mov
int
or
or
pop
pop
jnp
(bad)
cs
(bad)
add
cmc
pop
or
inc
ret
scas
or
or
dec
test
mov
xchg
aam
jmp
aam
xor
xchg
jmp
mov
(bad)
push
aad
sub
push
xchg
sti
sub
(bad)
stos
loop
adc
pop
cmps
(bad)
cld
outs
jle
(bad)
mov
fadd
xchg
ins
in
dec
dec
xchg
and
enter
lods
test
mov
inc
outs
sbb
inc
icebp
jbe
in
(bad)
xor
(bad)
rcr
repz
movd
lahf
or
jl
mov
ds
movs
clc
xchg
ret
mul
imul
cmps
jl
mov
bound
pushf
das
and
mov
stc
scas
mov
push
mov
adc
outs
outs
xchg
or
(bad)
sbb
movs
pop
push
jb
(bad)
enter
jo
dec
int
jo
mov
je
(bad)
push
mov
test
dec
jb
lahf
push
js
jecxz
sahf
or
ds
cld
sbb
cmps
test
xlat
(bad)
lock
shl
or
stc
push
inc
retf
sub
aas
ins
das
ficomp
dec
clc
cmp
push
mov
push
(bad)
retf
dec
retf
addr16
pop
retf
(bad)
imul
les
pop
sti
cs
pop
sar
addr16
mov
jge
test
outs
adc
sahf
repnz
test
jb
sub
ret
cmp
arpl
fisub
clc
test
lock
std
xor
dec
stos
int
push
sub
dec
mov
sbb
jae
cmp
adc
aad
xchg
pop
imul
dec
fs
out
jge
loopne
mov
clc
icebp
ins
lock
into
xchg
ins
mov
(bad)
ds
jnp
loopne
sub
xor
(bad)
in
mov
stc
xchg
dec
push
imul
adc
mov
aas
dec
cmp
js
inc
test
push
imul
dec
adc
leave
xor
daa
xor
cld
sbb
icebp
inc
les
imul
push
mov
dec
in
pop
fstp
and
(bad)
in
cmp
lock
into
icebp
je
fist
cmc
dec
mov
pop
push
mov
jno
cmps
pop
mov
cmps
int3
lods
les
and
jo
pop
add
pop
(bad)
or
fstp
repnz
(bad)
and
pushf
xlat
(bad)
iret
mov
cmps
in
scas
icebp
mov
jg
ds
(bad)
sti
fwait
hlt
mov
pop
mov
cmp
aam
mov
arpl
jb
std
or
mov
outs
jecxz
clc
inc
lock
push
clc
mov
div
ret
retf
sub
daa
jmp
xchg
add
and
aaa
std
scas
hlt
(bad)
pop
(bad)
outs
sti
aas
js
xlat
dec
rcl
stc
das
xor
nop
aam
sbb
xchg
or
(bad)
jbe
push
pusha
xor
pop
push
dec
clc
idiv
push
js
inc
aad
clc
aaa
loope
popf
pinsrw
adc
imul
push
(bad)
(bad)
cmp
mov
into
into
mov
aam
xor
pop
push
ins
mov
mul
clc
mov
das
add
test
jmp
push
push
dec
outs
ja
adc
pusha
int3
dec
add
addr16
jg
and
inc
ret
dec
out
mov
in
mov
and
jl
cmp
retf
fwait
xlat
out
sbb
push
add
inc
ds
aam
add
les
cli
dec
pop
cmp
shr
jp
inc
and
push
xor
mov
stos
inc
mov
xor
push
lock
test
pinsrw
xlat
cmp
retf
movs
cmp
sub
fs
xor
ins
sbb
jo
dec
and
mov
push
push
push
imul
cld
nop
xor
fild
mov
push
std
stos
scas
lods
outs
and
jno
mov
(bad)
jl
test
pop
aam
or
nop
pop
repnz
cmp
jae
in
ds
lock
in
or
icebp
push
push
lock
test
retf
or
or
stos
jmp
fdivr
(bad)
mov
stos
mov
nop
push
mov
mov
jnp
fistp
mov
inc
sar
mov
xchg
ret
loopne
push
icebp
cmps
gs
fisttp
cwde
add
fidivr
cmps
add
lods
sti
and
sar
add
sbb
xor
das
sub
enter
inc
ins
pop
cli
lock
dec
out
sbb
mov
pop
in
mov
cld
pop
inc
jle
dec
fidivr
jmp
inc
jg
inc
jg
(bad)
sar
inc
int
adc
ins
retf
out
mov
ss
or
sbb
ds
js
div
cmp
sar
stos
js
leave
fisttp
ins
xchg
xchg
add
sub
fidivr
push
sti
jl
pop
pop
(bad)
fld
add
pop
dec
mov
xor
adc
loopne
jae
sub
cwde
test
push
pusha
sub
push
out
lods
or
ds
call
xor
lock
and
sub
xlat
push
sub
sbb
out
mov
ret
mov
push
imul
popf
fcomp
sbb
lock
add
mov
xchg
add
test
cdq
and
xchg
(bad)
jbe
jl
inc
mov
add
ss
aam
xlat
(bad)
inc
es
xchg
mov
xlat
xchg
fadd
loope
mov
ss
loop
mov
dec
and
mov
mov
mov
mov
and
clc
es
enter
push
inc
(bad)
sti
jns
mov
sub
stos
xor
sub
jns
push
jne
or
mov
aas
mov
(bad)
jg
jl
mov
or
sbb
cmp
in
dec
cmp
push
loopne
fnstenv
jmp
inc
or
mov
dec
iret
inc
and
mov
add
in
call
mov
pop
stos
test
inc
cdq
repz
xchg
jmp
jns
fdivr
add
mov
sub
ret
sub
aas
loope
mov
pop
clc
sub
icebp
retf
sti
and
add
(bad)
mov
inc
aaa
loopne
enter
ins
das
mov
lock
dec
outs
jg
cs
clc
ins
das
mov
lock
dec
outs
jg
cs
xor
out
icebp
jg
pop
pop
(bad)
inc
aaa
loopne
enter
ins
das
mov
lock
dec
outs
jg
cs
clc
ins
das
mov
lock
dec
outs
jg
cs
xor
out
icebp
jg
pop
pop
(bad)
inc
aaa
loopne
enter
ins
das
mov
lock
dec
outs
jg
cs
clc
ins
das
mov
lock
dec
outs
jg
cs
xor
out
icebp
jg
pop
pop
(bad)
inc
aaa
loopne
enter
ins
das
mov
lock
dec
outs
jg
cs
clc
ins
das
mov
lock
dec
outs
jg
cs
xor
out
icebp
jg
pop
pop
(bad)
inc
aaa
loopne
enter
ins
das
mov
lock
dec
outs
jg
cs
clc
ins
das
mov
lock
dec
outs
jg
cs
xor
out
icebp
jg
pop
pop
(bad)
inc
aaa
loopne
enter
ins
das
mov
lock
dec
outs
jg
cs
clc
ins
das
mov
lock
dec
outs
jg
cs
xor
out
icebp
jg
pop
pop
(bad)
inc
aaa
loopne
enter
ins
das
mov
lock
dec
outs
jg
cs
clc
ins
das
mov
lock
dec
outs
jg
cs
xor
out
icebp
jg
pop
pop
(bad)
inc
aaa
loopne
enter
ins
das
mov
lock
dec
outs
jg
cs
clc
ins
das
mov
lock
dec
outs
jg
cs
xor
out
icebp
jg
pop
pop
(bad)
inc
aaa
loopne
enter
ins
das
mov
lock
dec
outs
jg
cs
clc
ins
das
mov
lock
dec
outs
jg
cs
xor
out
icebp
jg
pop
pop
(bad)
inc
aaa
loopne
enter
ins
das
mov
lock
dec
outs
jg
cs
clc
ins
das
mov
lock
dec
outs
jg
cs
xor
out
icebp
jg
pop
pop
(bad)
inc
aaa
loopne
enter
ins
das
mov
lock
dec
outs
jg
cs
clc
ins
das
mov
lock
dec
outs
jg
cs
xor
out
icebp
jg
pop
pop
(bad)
inc
aaa
loopne
enter
ins
das
mov
lock
dec
outs
jg
cs
clc
ins
das
mov
lock
dec
outs
jg
cs
xor
out
icebp
jg
pop
pop
(bad)
inc
aaa
loopne
enter
ins
das
mov
lock
dec
outs
jg
cs
clc
ins
das
mov
lock
dec
outs
jg
cs
xor
out
icebp
jg
pop
pop
(bad)
inc
aaa
loopne
enter
ins
das
mov
lock
dec
outs
jg
cs
clc
ins
das
mov
lock
dec
outs
jg
cs
xor
out
icebp
jg
pop
pop
(bad)
inc
aaa
loopne
enter
ins
das
mov
lock
dec
outs
jg
cs
clc
ins
das
mov
lock
dec
outs
jg
cs
xor
out
icebp
jg
pop
pop
(bad)
inc
aaa
loopne
enter
ins
das
mov
lock
dec
outs
jg
cs
clc
ins
das
mov
lock
dec
outs
jg
cs
xor
out
icebp
jg
pop
pop
(bad)
inc
aaa
loopne
enter
ins
das
mov
lock
dec
outs
jg
cs
clc
ins
das
mov
lock
dec
outs
jg
cs
xor
out
icebp
jg
pop
pop
(bad)
inc
aaa
loopne
enter
ins
das
mov
lock
dec
outs
jg
cs
clc
ins
das
mov
lock
dec
outs
jg
cs
xor
out
icebp
jg
pop
pop
(bad)
inc
aaa
loopne
enter
ins
das
mov
lock
dec
outs
jg
cs
clc
ins
das
mov
lock
dec
outs
jg
cs
xor
out
icebp
jg
pop
pop
(bad)
inc
aaa
loopne
enter
ins
das
mov
lock
dec
outs
jg
cs
clc
ins
das
mov
lock
dec
outs
jg
cs
xor
out
icebp
jg
pop
pop
(bad)
inc
aaa
loopne
enter
ins
das
mov
lock
dec
outs
jg
cs
clc
ins
das
mov
lock
dec
outs
jg
cs
xor
out
icebp
jg
pop
pop
(bad)
inc
aaa
loopne
enter
ins
das
mov
lock
dec
outs
jg
cs
clc
ins
das
mov
lock
dec
outs
jg
cs
xor
out
icebp
jg
pop
pop
(bad)
inc
aaa
loopne
enter
ins
das
mov
lock
dec
outs
jg
cs
clc
ins
das
mov
lock
dec
outs
jg
cs
xor
out
icebp
jg
pop
pop
(bad)
inc
aaa
loopne
enter
ins
das
mov
lock
dec
outs
jg
cs
clc
ins
das
mov
lock
dec
outs
jg
cs
xor
out
icebp
jg
pop
pop
(bad)
inc
aaa
loopne
enter
ins
das
mov
lock
dec
outs
jg
cs
xchg
popf
pop
rcr
loop
pop
fidivr
gs
outs
shl
cmp
shr
das
test
popa
xchg
imul
fisttp
push
sub
inc
pushf
call
jo
bound
jb
fnstcw
pop
cmp
sar
xchg
cmc
xor
nop
push
mov
jg
es
dec
aaa
(bad)
mov
rcr
ftst
inc
ror
adc
or
and
test
inc
loope
cld
mov
cli
(bad)
(bad)
xchg
dec
pop
popf
mov
ret
jnp
xchg
cmp
sub
jbe
into
imul
mov
or
cs
xchg
fimul
push
mov
std
xor
sahf
adc
xchg
xor
not
scas
xchg
es
xchg
ds
pop
iret
and
loopne
out
mov
sar
and
bound
xchg
push
fwait
shl
jle
movs
mov
cmps
std
aad
out
ja
jl
movs
pop
inc
cmps
js
lds
test
cmp
mov
ror
shl
aam
int
movs
sub
int
into
test
mov
clc
pop
push
cld
sar
add
clc
mov
out
aam
xor
add
stos
mov
repnz
push
retf
sub
outs
(bad)
repnz
adc
add
add
lods
inc
imul
not
mov
out
aam
xor
add
stos
je
xchg
sub
mov
inc
loop
mov
js
stc
stc
pop
mov
in
jae
(bad)
shr
mov
lds
shl
call
inc
adc
iret
sub
add
add
test
jle
out
inc
sti
or
mov
xchg
rcl
mov
dec
jg
fwait
jg
cmps
inc
adc
icebp
inc
jg
popf
jg
cmps
inc
adc
cld
cld
(bad)
fiadd
xor
aad
loop
push
mov
inc
inc
clc
stos
jo
call
jg
cmps
inc
adc
cld
cld
pop
jp
mov
cld
(bad)
out
addr16
sbb
mov
scas
dec
aas
mov
(bad)
inc
cli
adc
inc
xor
add
test
push
inc
mov
dec
(bad)
sub
out
sti
sar
scas
repnz
mov
sub
out
(bad)
ret
(bad)
dec
loopne
mov
lock
(bad)
mov
call
mov
ins
dec
push
aam
mov
mov
imul
adc
leave
and
lahf
mul
popf
cmp
sbb
ss
xchg
rcl
and
add
stos
mov
xchg
cmp
hlt
popf
push
pop
sbb
adc
movs
fimul
or
xchg
imul
mov
or
outs
jecxz
inc
out
scas
add
or
scas
je
xchg
mov
push
push
dec
pop
pop
pop
mov
addr16
jmp
jno
clc
xchg
les
sbb
out
mov
in
aam
inc
push
sub
pop
mov
pop
outs
or
jo
xchg
inc
das
test
add
mov
cld
inc
cmps
pop
(bad)
adc
xchg
clc
jnp
shl
in
cmp
sbb
dec
cs
add
mov
int3
repz
cmp
stc
imul
sar
xor
(bad)
sub
push
push
mov
dec
push
(bad)
fidivr
push
jmp
pushf
mov
xor
and
pop
test
xchg
(bad)
cmps
(bad)
pop
ss
adc
mov
aas
push
push
mov
mov
out
sbb
xchg
xor
mov
mov
pop
cmps
stc
sahf
stos
mov
jg
std
pop
icebp
(bad)
adc
int
sub
cmc
out
or
jmp
xchg
aaa
xchg
jae
cmps
ret
stc
repnz
shl
mov
sbb
jmp
sbb
sbb
pop
sbb
dec
shl
adc
cmp
mov
lods
repnz
div
lahf
cmp
pop
xor
cwde
dec
mov
nop
gs
or
retf
scas
pop
jecxz
mov
ret
mov
adc
into
loop
dec
pop
imul
sub
push
inc
ror
xor
pop
jns
push
push
bswap
xor
ror
xchg
test
jl
(bad)
in
scas
jl
sti
ds
sar
fisubr
mov
movs
movs
dec
cmp
add
cmp
dec
jp
mov
pop
ror
inc
test
xchg
jecxz
(bad)
clc
aaa
push
aam
shr
sub
xor
in
sub
ror
pop
jmp
mov
loopne
ret
and
in
in
jecxz
(bad)
xor
sub
adc
add
in
add
and
inc
pop
and
popa
dec
ins
imul
call
(bad)
mov
js
fs
mov
sbb
mov
out
sub
(bad)
mov
pop
jl
jno
lea
aam
lods
fcmovbe
je
std
pop
in
push
ror
mov
pop
xor
adc
xchg
arpl
(bad)
mov
add
jecxz
neg
pop
mov
stos
in
add
fs
mov
mov
or
pop
xor
xor
push
fdivr
xor
clc
or
push
fdivr
outs
pop
sahf
and
shl
sub
in
test
mov
(bad)
mov
dec
mov
or
cmp
fimul
movs
retf
and
xor
add
fisub
es
inc
scas
aaa
clc
xor
add
mov
aas
in
shr
call
fsubr
mov
push
inc
add
adc
inc
add
adc
inc
add
adc
inc
add
adc
inc
add
adc
inc
add
adc
inc
add
adc
inc
add
adc
inc
add
adc
inc
add
adc
inc
add
adc
inc
add
gs
inc
push
(bad)
mov
dec
push
push
mov
add
pop
aad
jmp
dec
std
add
xor
imul
dec
cld
mov
cmps
mov
lea
xchg
(bad)
in
push
sbb
das
test
add
and
inc
movs
sbb
adc
add
(bad)
jnp
inc
jge
push
fs
cmp
and
jg
aas
adc
js
out
inc
xchg
pop
(bad)
jecxz
sub
mov
add
xchg
xor
adc
sbb
or
pop
jne
add
sbb
int3
mov
inc
pusha
inc
inc
in
(bad)
mov
xchg
mov
add
gs
pop
or
mov
call
cmc
aad
add
add
and
inc
(bad)
aam
inc
add
fs
pop
cld
sbb
inc
sbb
add
fstp
mov
sar
sub
dec
sar
(bad)
cdq
mov
jno
iret
clc
and
inc
cld
adc
push
aas
repz
add
sar
push
sub
(bad)
imul
add
add
jne
sti
ins
cmp
fidiv
pusha
aas
out
inc
sbb
inc
lahf
jg
inc
xor
out
daa
stc
inc
add
(bad)
inc
rol
inc
cdq
and
inc
push
or
jecxz
or
test
jg
cmp
pop
hlt
pop
cli
ja
add
push
inc
jecxz
jg
pusha
aas
out
loop
add
pop
pop
lds
loopne
enter
add
add
push
scas
inc
mov
add
dec
pop
lock
or
xchg
imul
sub
test
retf
(bad)
(bad)
add
pop
clc
in
pop
fstp
stc
idiv
mov
mov
jnp
inc
add
inc
loopne
jg
adc
clc
js
mov
scas
inc
mov
add
pop
adc
jbe
(bad)
pop
mov
jecxz
jg
pusha
aas
out
loop
add
ds
jg
out
inc
lock
test
(bad)
and
mov
cli
adc
mov
mov
popf
(bad)
pop
mov
jecxz
outs
mov
cmp
sbb
inc
inc
pop
(bad)
popa
cmc
fcom
dec
cld
(bad)
je
lock
or
imul
sub
paddb
push
pop
repz
jnp
icebp
adc
pusha
inc
(bad)
push
(bad)
cmp
push
add
jge
das
cld
ret
jmp
scas
out
pop
stc
push
fidivr
mov
cdq
xlat
inc
add
inc
mov
test
jg
pusha
(bad)
outs
mov
out
inc
mov
inc
add
in
pop
fstp
stc
idiv
mov
mov
jnp
jg
dec
jne
inc
xor
inc
(bad)
aam
dec
dec
test
jg
pusha
(bad)
outs
mov
jge
add
fidiv
fdivr
inc
jecxz
inc
mov
pop
repz
icebp
jg
aas
scas
loop
lahf
lock
mov
cld
adc
push
pop
stc
xchg
ins
jg
pusha
(bad)
outs
mov
test
repz
loopne
mov
int
rcr
inc
sbb
add
sar
xchg
cmp
lahf
jg
inc
xor
out
daa
stc
inc
add
mov
pop
sub
loopne
xor
loopne
inc
enter
jne
xchg
(bad)
aas
fisub
(bad)
pop
mov
scas
ins
fcmove
inc
or
imul
mov
sbb
jmp
sub
in
mov
mov
inc
or
in
call
jmp
cmps
iret
dec
or
jmp
lea
shl
pushf
mov
mov
push
call
aam
out
mov
add
xchg
pop
cmp
out
jg
fsub
push
pop
mov
pushf
(bad)
and
pop
repz
sti
in
push
idiv
neg
mov
push
pop
imul
jge
xlat
pop
cld
test
cdq
sub
inc
sahf
sar
add
bound
cmp
lds
inc
dec
inc
inc
idiv
neg
mov
push
inc
rcr
rcl
scas
psubw
pop
std
imul
sti
pop
pop
repz
sti
in
push
je
fs
pop
imul
jge
xlat
pop
cld
test
cdq
sub
inc
sahf
sar
add
bound
cmp
lds
inc
dec
inc
inc
idiv
neg
mov
push
inc
rcr
rcl
scas
psubw
pop
std
imul
sti
pop
pop
repz
sti
in
push
je
fs
pop
imul
jge
xlat
pop
cld
test
cdq
sub
inc
sahf
sar
add
bound
cmp
lds
inc
dec
inc
inc
idiv
neg
mov
push
inc
rcr
rcl
scas
psubw
pop
std
imul
sti
pop
pop
repz
sti
in
push
je
fs
pop
imul
jge
xlat
pop
cld
test
cdq
sub
inc
sahf
sar
add
bound
cmp
lds
inc
dec
inc
inc
idiv
neg
mov
push
inc
rcr
rcl
scas
psubw
pop
std
imul
sti
pop
pop
repz
sti
in
push
je
fs
pop
imul
jge
xlat
pop
cld
test
cdq
sub
inc
sahf
sar
add
bound
cmp
lds
inc
dec
inc
inc
idiv
neg
mov
push
inc
rcr
rcl
scas
psubw
pop
std
imul
sti
pop
pop
repz
sti
in
push
je
fs
pop
imul
jge
xlat
pop
cld
test
cdq
sub
inc
sahf
sar
add
bound
cmp
lds
inc
dec
inc
inc
idiv
neg
mov
push
inc
rcr
rcl
scas
psubw
pop
std
imul
sti
pop
pop
repz
sti
in
push
je
fs
loop
stc
push
jne
cli
not
mov
mov
neg
lods
scas
adc
stos
add
fwait
imul
lods
imul
cmps
iret
pop
push
jge
aaa
(bad)
aas
gs
mov
xchg
dec
pop
mov
mov
aam
sahf
dec
xor
adc
pop
inc
lock
add
cld
xor
add
jne
repnz
stos
dec
sti
outs
je
out
ret
sub
ja
pop
inc
imul
mov
std
pop
jle
inc
loopne
xchg
(bad)
xor
or
sar
add
jmp
jae
loope
std
xchg
mov
inc
add
icebp
mov
pop
inc
lock
add
cld
xor
add
jne
cli
mov
popf
pop
mov
retf
sbb
sbb
stos
inc
inc
inc
test
sbb
sbb
add
cmp
pop
inc
into
(bad)
(bad)
clc
dec
aas
gs
cli
paddb
inc
ror
cld
push
not
repz
clc
inc
inc
sbb
inc
cld
and
call
test
not
add
inc
outs
call
mov
lods
inc
inc
fild
add
ret
jg
cmp
fsubr
clc
dec
mov
cld
and
add
int
cld
push
not
add
or
inc
(bad)
mov
pop
aas
loope
pop
lods
and
inc
out
jg
inc
mov
std
pop
(bad)
adc
pop
xchg
(bad)
xor
ret
sub
add
jg
pop
inc
xchg
lock
pop
push
nop
jae
idiv
(bad)
adc
push
inc
add
das
dec
inc
sbb
dec
mov
cld
and
idiv
movs
inc
lea
inc
ret
jg
cmp
fsubr
clc
dec
mov
cld
and
add
int
cld
push
not
add
or
inc
(bad)
mov
pop
aas
loope
pop
lods
and
inc
out
ja
fbstp
adc
add
xchg
(bad)
xor
ret
sub
ja
pop
inc
imul
mov
pop
push
nop
jae
idiv
(bad)
adc
pop
inc
lock
add
aas
loope
std
xchg
mov
inc
add
icebp
scas
ret
pop
clc
inc
push
(bad)
clc
inc
push
(bad)
stos
dec
cmp
sti
popf
inc
or
inc
out
test
sbb
cld
inc
mov
std
pop
(bad)
adc
add
pop
xchg
(bad)
xor
or
sar
add
jmp
jae
loope
std
xchg
jg
aas
lock
add
out
(bad)
xor
sbb
retf
arpl
or
std
mov
xchg
lock
pop
push
nop
jae
idiv
(bad)
adc
push
inc
lock
dec
inc
sbb
loope
std
xchg
jg
aas
lock
add
hlt
mov
clc
inc
push
(bad)
clc
inc
push
(bad)
stos
dec
cmp
sti
popf
inc
or
inc
inc
test
sbb
lock
jle
fcomip
sbb
sbb
inc
cld
and
call
test
not
add
or
inc
(bad)
(bad)
clc
dec
mov
cld
and
add
int
cld
imul
(bad)
adc
mov
jmp
ret
sub
ja
pop
inc
imul
mov
std
pop
jle
inc
loopne
xchg
(bad)
xor
or
sar
add
jmp
jae
loope
std
xchg
mov
inc
add
icebp
mov
pop
inc
lock
add
cld
xor
add
jne
cli
mov
popf
pop
mov
retf
sbb
sbb
lods
inc
inc
fild
add
ret
jg
cmp
fsubr
clc
dec
mov
cld
and
add
int
cld
push
not
add
or
inc
(bad)
mov
pop
aas
loope
pop
lods
and
inc
out
ja
fbstp
adc
add
xchg
(bad)
xor
ret
sub
ja
pop
inc
imul
mov
pop
push
nop
jae
idiv
(bad)
adc
pop
inc
lock
add
aas
loope
std
xchg
mov
inc
add
icebp
scas
ret
pop
clc
inc
push
(bad)
clc
inc
push
(bad)
stos
dec
cmp
sti
popf
inc
or
inc
fild
add
retf
sbb
sbb
inc
cld
and
call
test
not
add
or
inc
(bad)
(bad)
clc
dec
mov
cld
and
add
int
cld
imul
(bad)
adc
mov
jmp
ret
sub
ja
pop
inc
imul
mov
std
pop
jle
inc
loopne
xchg
(bad)
xor
or
sar
add
jmp
jae
loope
std
xchg
mov
inc
add
icebp
mov
pop
inc
lock
add
cld
xor
add
jne
cli
mov
popf
pop
mov
retf
sbb
sbb
lods
inc
inc
fild
add
ret
jg
cmp
fsubr
clc
dec
mov
cld
and
add
int
cld
push
not
add
or
inc
(bad)
mov
pop
aas
loope
pop
lods
and
inc
out
ja
fbstp
adc
add
xchg
(bad)
xor
ret
sub
ja
pop
inc
imul
mov
loop
mov
ret
enter
movs
inc
or
inc
out
test
sbb
cld
inc
mov
std
pop
mov
xchg
(bad)
xor
lods
add
in
push
les
sub
push
lahf
lahf
cmc
xlat
aas
not
inc
test
es
cmp
fucomp
clc
dec
inc
gs
cli
(bad)
and
add
int
cld
push
not
add
or
inc
(bad)
mov
sar
add
mov
std
hlt
mov
sbb
idiv
cld
sub
or
add
fwait
dec
mov
inc
sbb
stos
inc
inc
out
test
sbb
adc
add
lahf
sti
jmp
inc
xor
add
in
jae
add
clc
push
in
es
aas
ja
add
aaa
std
xchg
jg
cmp
add
icebp
mov
push
inc
xor
add
cld
and
add
out
cli
pop
lock
cld
idiv
not
pop
xor
fucomp
clc
dec
aas
gs
pop
clc
inc
inc
std
jle
lahf
jecxz
nop/reserved
and
std
mov
xchg
inc
add
clc
inc
sub
out
(bad)
out
ret
inc
sub
out
iret
out
ret
cwde
jae
std
loop
add
mov
or
jg
(bad)
clc
dec
jg
mov
inc
shr
(bad)
adc
psubw
jae
(bad)
lock
stc
in
jae
(bad)
lock
in
es
aas
js
mov
add
sbb
xlat
ret
mov
jl
sti
sub
mov
add
push
inc
or
cld
xbegin
add
cld
xbegin
push
jg
shr
jl
aas
div
cmps
lahf
jmp
push
cs
xchg
fsub
or
shr
dec
inc
sbb
sbb
ret
(bad)
jnp
(bad)
arpl
sub
add
(bad)
arpl
sub
adc
push
xchg
dec
jg
sbb
dec
inc
sbb
aas
gs
cli
or
shr
(bad)
adc
psubw
jae
(bad)
lock
stc
in
jae
(bad)
lock
jle
jg
imul
jg
ja
pop
inc
imul
sbb
call
jp
in
mov
cmp
ins
inc
retf
sbb
xchg
cmp
dec
push
or
add
sti
call
inc
add
lock
scas
xchg
sti
data16
add
daa
cwde
mov
(bad)
ss
push
aam
sbb
push
mov
inc
loop
fisub
les
ret
push
xchg
lds
fsub
mov
sbb
jmp
jae
or
(bad)
outs
adc
lahf
clc
xchg
sahf
aas
in
mov
and
mov
(bad)
popf
fnstsw
cmp
inc
mov
pop
xchg
push
in
rcl
sbb
retf
sbb
pushf
mov
pop
ja
inc
imul
outs
in
fistp
fidivr
dec
cmp
aam
imul
sbb
mov
mov
das
in
jae
int
cmp
xchg
shl
lock
aad
xchg
stos
or
sub
mov
add
mov
sub
rcr
int3
mov
push
into
(bad)
jo
mov
pop
sbb
mov
loop
fstp
aad
movs
scas
xlat
dec
das
fadd
idiv
lock
jmp
mov
jecxz
popf
cs
push
xchg
cmp
mov
scas
and
addr16
or
sar
sbb
in
and
mov
xor
fs
(bad)
pop
pop
xchg
mov
mov
mov
lods
cld
jmp
sbb
ret
inc
or
loop
test
or
fcomp
fst
retf
pop
ss
jnp
pop
das
fadd
sahf
mov
mov
jbe
stos
call
inc
xchg
mov
push
clc
retf
mov
ss
mov
dec
loop
xchg
iret
into
aas
or
push
(bad)
pop
daa
shl
sub
aam
in
adc
dec
out
cmc
push
inc
sbb
cmp
add
ror
lods
hlt
sbb
push
mov
cmps
jl
std
movs
xor
imul
mov
jns
xor
inc
in
in
imul
imul
clc
std
loop
fisub
loope
xlat
mov
imul
stos
push
cdq
sbb
(bad)
mov
inc
inc
mov
push
lods
push
push
dec
push
fmul
in
iret
int
mov
aas
les
(bad)
ror
adc
mov
add
retf
test
jns
movs
js
pushf
mov
fcmovnu
mov
(bad)
(bad)
mov
pop
jns
aaa
ret
mov
mov
inc
ror
xchg
adc
shl
aas
dec
jmp
fcos
add
xchg
mov
sbb
dec
mov
push
pop
test
iret
jo
mov
test
pop
clc
lods
jecxz
in
clc
stc
jnp
xchg
cmc
in
aas
add
rcl
sbb
jecxz
dec
xchg
and
stc
cwde
arpl
fldl2t
pop
lahf
mov
in
leave
paddsb
icebp
add
xlat
dec
mov
les
mov
sbb
(bad)
enter
or
call
add
iret
cld
and
pop
inc
call
idiv
pop
fstp
or
push
xlat
mov
imul
ins
cmp
cdq
dec
sbb
mov
daa
mov
xchg
out
sub
mov
mov
and
inc
pop
add
jmp
inc
aad
inc
mov
push
jmp
pop
ins
dec
cwde
jns
xor
out
repz
test
push
ret
aas
mov
adc
shl
mov
jae
outs
in
dec
adc
xor
xor
adc
(bad)
fdivr
in
popa
lock
clc
mov
lea
ret
mov
dec
push
jae
es
inc
push
xor
add
cmps
movs
jp
(bad)
out
fld
(bad)
aas
mov
and
out
xchg
jg
fdiv
inc
add
fcom
add
clc
ret
ret
imul
cli
mov
add
xchg
ret
and
adc
sub
jb
lock
psubusw
daa
sar
sbb
push
mov
cmp
dec
mov
outs
cmc
or
movs
pusha
(bad)
jmp
jge
repnz
mov
pop
jns
scas
(bad)
dec
pop
dec
std
lock
loope
and
push
(bad)
cmc
jns
retf
repnz
push
sti
and
push
jo
inc
ins
std
fidiv
fsub
dec
pop
(bad)
rcr
or
pop
mov
sub
xchg
mov
scas
add
scas
movs
dec
add
cli
jae
xor
outs
ret
jecxz
sub
ror
dec
inc
lock
icebp
jmp
jmp
fist
jmp
mov
jno
xchg
pop
int3
je
popa
pop
retf
mov
pop
add
fstp
mov
jle
fist
shr
mov
test
loop
cmp
pop
in
push
pop
cmp
loope
pop
test
xor
push
clc
add
es
not
sub
cdq
sbb
fs
lds
test
ins
ret
sub
add
clc
fwait
lock
cli
cmps
mov
mov
call
jbe
fadd
es
inc
jno
das
mov
add
ins
aas
hlt
or
test
add
xor
(bad)
and
pop
jbe
ficom
mov
push
push
jbe
mov
idiv
in
dec
mov
inc
adc
mov
jae
scas
aad
adc
je
xchg
loope
xchg
or
imul
adc
jle
jbe
xchg
mov
add
clc
sbb
xlat
adc
jecxz
call
mov
add
popa
xchg
push
mov
inc
retf
lods
mov
mov
jmp
ds
daa
clc
pop
loope
inc
mov
fwait
sbb
sub
je
ds
in
xchg
sti
paddb
clc
jne
outs
sbb
push
(bad)
jecxz
mov
fwait
leave
daa
mov
and
ret
jns
ins
shl
mov
daa
call
add
jmp
inc
shr
hlt
fsub
dec
inc
in
or
loop
mov
cld
sbb
xor
hlt
fwait
div
cld
cmp
mov
mov
sbb
mov
or
mov
sbb
push
add
mov
sub
(bad)
mov
pop
out
test
push
mov
mov
lds
fsub
sbb
xlat
push
push
jle
rcr
pop
sbb
add
inc
mov
mov
cld
xor
pop
imul
enter
xor
inc
add
clc
adc
add
mov
or
mov
into
pop
retf
imul
xor
add
or
dec
int3
or
mov
fwait
lds
xchg
lahf
add
or
mov
ja
inc
clc
jp
pop
lock
std
sahf
dec
mov
mov
mov
int3
jle
jl
aam
adc
sahf
mov
ss
fidivr
ret
sbb
and
jg
hlt
jb
addr16
call
aam
cmp
shl
sti
retf
or
jecxz
dec
ins
xchg
and
jbe
(bad)
mov
pop
pop
pop
in
inc
(bad)
movs
stos
clc
jnp
mov
(bad)
mov
leave
and
stc
call
ds
(bad)
sub
ds
clc
add
test
leave
movs
inc
push
cdq
sub
aam
sbb
xchg
push
inc
fsub
fs
push
pop
icebp
outs
loope
mov
imul
pop
(bad)
outs
pushf
ins
in
pop
int3
mov
hlt
scas
(bad)
(bad)
loope
ret
lahf
sbb
lea
add
cs
ins
dec
dec
jns
popa
gs
xchg
dec
add
xchg
and
imul
adc
retf
add
dec
jb
jnp
or
loop
fdivr
xchg
and
or
cmp
mov
das
daa
jge
in
cld
out
add
jmp
mov
add
clc
or
ins
cmp
cmp
imul
fisubr
daa
mov
mov
cmps
in
xchg
mov
add
dec
sar
call
(bad)
mov
jne
cld
dec
lock
les
dec
inc
push
lock
cmps
mov
rcr
outs
mov
pop
add
jns
lods
(bad)
es
mov
adc
add
aas
mov
xor
shr
je
push
push
mov
in
lods
jle
xor
nop
adc
sbb
pop
enter
arpl
xchg
in
push
lock
push
dec
clc
jg
shl
sar
jge
mov
xor
out
sbb
and
and
fistp
mov
mov
sahf
fldcw
adc
inc
clc
inc
loope
icebp
pop
xchg
dec
pop
(bad)
std
ds
jge
xlat
sub
lock
out
sbb
jg
fld
dec
xchg
dec
mov
cdq
outs
and
mov
push
mov
mov
pop
sbb
into
adc
inc
pop
fidiv
push
mov
jl
add
loop
clc
es
xor
inc
cmps
imul
dec
add
stos
out
cli
or
push
dec
jle
pop
adc
aaa
clc
push
pop
jg
xchg
dec
mov
mov
pop
dec
and
scas
pop
sub
xor
ds
cli
lods
lock
loop
scas
jecxz
dec
loop
mov
call
imul
test
(bad)
jo
jo
mov
cmps
or
adc
js
pop
xchg
ins
cmp
out
cdq
(bad)
sbb
lea
jge
jbe
xchg
pop
fwait
jle
std
mov
jl
icebp
out
mov
cmps
popf
sub
push
int
jo
adc
add
and
fucom
add
dec
iret
mov
fidiv
mov
into
movs
cmps
pop
sar
and
mov
loope
repnz
aas
mov
pop
fcos
add
aas
fnstcw
mov
(bad)
mov
mov
aaa
add
(bad)
adc
inc
fistp
ja
call
das
inc
or
mov
in
fcomp
in
ret
cld
adc
add
push
xchg
mov
add
(bad)
std
test
ficom
(bad)
jl
loop
int
les
jl
pop
lods
push
add
jg
cli
or
and
xlat
inc
mov
mov
sbb
xor
sub
pop
data16
xchg
pop
retf
ja
sub
lods
xor
jle
pop
push
mov
mov
call
loop
xchg
pop
enter
and
sub
xchg
push
push
cmp
loopne
in
cmps
jecxz
fidiv
out
(bad)
adc
fld
mov
out
in
cdq
fmul
hlt
scas
mov
lock
inc
mov
cmp
jne
lds
xchg
loop
cmp
mov
jmp
add
push
xor
lahf
push
xchg
or
outs
outs
paddsb
sub
pop
inc
dec
jg
int3
and
fisttp
ret
or
jg
pop
mov
daa
lahf
dec
icebp
mov
fiadd
sub
int
mov
push
sbb
mov
scas
xor
pop
cld
test
jo
rcl
les
push
js
imul
cmps
jmp
push
xchg
mov
add
jmp
xor
icebp
aas
dec
div
(bad)
loop
ret
jge
push
clc
pop
out
fisub
add
and
xchg
add
cmp
xor
jp
mov
jle
js
ud2
js
fisub
cmps
xor
dec
lods
jnp
dec
mul
in
outs
inc
lahf
mov
ret
pop
mov
add
push
mov
in
mov
in
push
sbb
xchg
mov
mov
fsub
sub
ror
(bad)
lods
cmc
or
mov
dec
push
xor
(bad)
retf
xlat
daa
mov
pop
xchg
fdivr
sbb
test
xchg
cld
pop
sti
xor
dec
nop
jmp
jg
mov
cmc
pop
aaa
out
fsubr
repnz
add
adc
loope
add
scas
cs
jae
add
jmp
(bad)
in
fwait
ins
mov
fnsave
scas
pop
movs
jnp
xchg
inc
add
clc
add
pop
jge
ret
jp
xchg
(bad)
test
push
fsubrp
out
js
mov
and
adc
cmp
aam
adc
jge
in
jle
push
pop
push
(bad)
or
call
pop
push
aas
lock
or
mov
cmp
sub
pop
sbb
repz
jmp
addr16
pop
shl
pushf
js
hlt
inc
mov
lea
in
dec
add
outs
or
(bad)
neg
ja
shl
mov
fisubr
aam
imul
cmp
mov
mov
cs
ss
mov
cmp
mov
xor
call
push
aam
jo
inc
jp
leave
push
xchg
push
inc
dec
add
adc
sbb
aas
ins
cmp
enter
shl
adc
pusha
mov
shl
adc
shl
adc
shl
adc
add
(bad)
(bad)
xor
rol
stos
jle
repnz
jp
shr
mov
je
aas
imul
jg
jge
add
das
inc
jecxz
ds
sub
jg
and
inc
inc
pusha
mov
jl
pop
ins
inc
shr
in
clc
(bad)
inc
daa
inc
inc
or
and
xchg
pop
jl
shr
sub
pop
in
mov
xor
ret
xlat
sub
scas
or
mov
shl
dec
shl
mov
aas
ins
jg
inc
fcomp
push
xlat
pop
icebp
out
push
pop
adc
cmp
(bad)
aaa
mov
and
adc
pextrw
sbb
or
(bad)
jg
jae
or
sub
clc
mov
(bad)
loopne
scas
jno
test
(bad)
not
dec
(bad)
cld
test
loop
add
sbb
mov
inc
popf
cld
pop
sbb
popw
jno
call
cmps
(bad)
fistp
add
dec
mov
or
cli
adc
cmp
sar
push
(bad)
icebp
or
pop
daa
ins
stos
cli
pushf
push
rcl
aas
fisttp
dec
lock
jg
push
sub
pop
add
retf
test
jg
jecxz
imul
dec
loopne
(bad)
(bad)
cli
fmul
in
or
xchg
inc
(bad)
inc
scas
mov
loope
mov
add
retf
js
sti
ds
push
aas
add
inc
(bad)
sbb
out
out
inc
xchg
enter
aad
clc
and
inc
sti
or
xchg
mov
mov
cdq
mov
jg
sub
psubq
dec
cld
xchg
mov
iret
pop
out
pop
cmp
ss
inc
lock
ins
pusha
adc
in
div
lds
lahf
fisubr
loopne
sti
cli
iret
(bad)
xchg
sub
sahf
rol
pop
lock
cmp
popa
mov
jbe
aam
hlt
or
clc
repz
and
scas
xor
push
adc
hlt
push
aam
fcomp
adc
mov
add
std
imul
lahf
adc
add
arpl
add
ins
pop
pop
cld
adc
ret
inc
scas
retf
jg
add
pushf
jg
pop
cld
jne
push
ss
jg
imul
aam
cwde
outs
outs
out
mov
sub
arpl
xchg
push
jno
inc
jp
cld
adc
inc
pop
sbb
mov
(bad)
pop
xor
test
gs
std
popf
cmp
scas
fsubr
sahf
push
lea
shl
(bad)
add
ins
sbb
sbb
add
mov
clc
test
cmp
xlat
mov
das
cmp
xor
(bad)
sub
lahf
clc
sub
in
xchg
loop
fcomip
in
inc
movs
jmp
shl
push
test
inc
sar
daa
dec
aam
retf
lods
jb
out
in
daa
jecxz
sbb
mov
xchg
hlt
sbb
sar
rcr
jg
icebp
sahf
(bad)
call
dec
ja
inc
inc
arpl
sub
lods
add
push
mov
leave
aas
hlt
push
scas
lods
mov
clc
and
aas
add
fwait
stc
push
sub
jg
inc
out
je
push
daa
sbb
out
gs
dec
jle
jmp
lds
movs
cmps
js
sbb
(bad)
neg
or
in
xor
ds
movs
inc
push
xchg
sub
push
xchg
push
movs
xor
imul
or
pop
popa
cld
jno
arpl
pop
pop
jmp
ja
ss
fcom
xchg
push
into
cmp
pop
pop
repnz
(bad)
lahf
sbb
add
fneni(8087
mov
outs
scas
popa
pop
mov
xlat
mov
jl
sbb
jae
jecxz
repnz
mov
cmps
lods
ins
inc
sahf
mov
imul
push
cmp
jecxz
or
(bad)
cli
in
ss
ins
mov
jmp
and
adc
pop
sahf
pop
lock
scas
mov
clc
mov
or
push
add
push
pop
xchg
test
dec
jnp
mov
sbb
xor
mov
pop
mov
pop
dec
lock
test
stos
fwait
pop
jle
mov
mov
ds
adc
(bad)
jb
mov
pop
or
repnz
hlt
cmp
inc
jnp
push
fdiv
aas
clc
and
cld
mov
adc
add
repnz
add
mov
add
mov
hlt
mov
movs
xchg
lock
mov
inc
sub
pop
jle
cmps
fnsave
(bad)
out
aas
adc
add
repnz
add
mov
ins
pop
fcom
loop
mov
aam
ins
and
adc
sub
stos
test
cld
daa
scas
jle
pop
aaa
in
sub
add
jecxz
inc
ins
aas
stc
xor
outs
(bad)
mov
jmp
pop
inc
scas
sbb
push
cmp
adc
add
cmp
pop
or
cld
cdq
outs
mov
add
ja
call
psllq
dec
pop
test
inc
rcl
sub
and
add
lock
bound
fiadd
fld
in
sahf
(bad)
pop
push
xchg
mov
add
int3
cmp
inc
pusha
mov
jl
clc
cmp
idiv
cld
pop
cmps
sub
push
push
nop
daa
and
add
aam
jae
push
inc
outs
retf
call
(bad)
lock
dec
nop
leave
sub
mov
cld
lea
xlat
mov
inc
mov
inc
in
xchg
and
add
xor
jecxz
test
pop
adc
test
ror
adc
mov
fbstp
inc
sbb
inc
outs
pop
cs
and
data16
icebp
ja
cld
lds
test
xchg
(bad)
addr16
xor
in
enter
into
mov
sti
out
add
adc
push
loopne
retf
pop
(bad)
into
test
pop
fldenv
ss
pushf
jns
rcl
pop
mov
out
mov
fidiv
xchg
inc
inc
lods
data16
lahf
repnz
mov
lods
inc
hlt
xchg
mov
popa
(bad)
sbb
inc
aam
xor
xchg
dec
mov
dec
push
add
adc
stos
pop
mov
hlt
add
(bad)
std
movs
sub
shl
scas
fxch
and
fst
shl
mul
aas
add
loopne
inc
fmul
inc
shl
inc
shl
inc
or
inc
fistp
ret
fisttp
fist
ds
neg
ja
cmp
ins
push
(bad)
pop
outs
sbb
jl
icebp
scas
cdq
ins
sti
pop
jl
lock
repnz
adc
or
sub
and
push
mov
jne
outs
ja
stos
ins
aas
les
pop
retf
mov
push
dec
add
std
nop
mov
jecxz
(bad)
std
addr16
mov
push
mov
daa
lea
sub
xor
sbb
or
lds
shl
imul
or
aas
xchg
(bad)
push
aaa
sar
cld
outs
std
mov
lahf
dec
mov
push
xchg
nop
inc
or
and
adc
addr16
lahf
mov
in
ins
jecxz
add
lea
inc
loope
or
add
pop
xor
dec
repz
sbb
sub
popa
in
inc
jmp
das
test
mov
cmp
inc
movs
push
into
sbb
xor
arpl
popf
mov
inc
add
das
adc
add
int3
(bad)
es
xor
add
addr16
dec
sbb
arpl
test
loop
sub
sar
iret
inc
add
icebp
xlat
ret
outs
sub
pushf
xchg
cmp
scas
test
arpl
mov
cmp
mov
add
movs
mov
imul
and
imul
pop
lahf
cmps
fisubr
or
add
fbld
jmp
imul
inc
jle
jmp
xchg
jno
add
pop
icebp
setno
je
rcr
xor
std
cld
(bad)
xlat
dec
cmp
jno
mov
add
xchg
mov
retf
(bad)
adc
sahf
inc
in
arpl
movs
aad
repnz
xchg
inc
into
cmps
cmp
(bad)
mov
and
jmp
xchg
cmp
iret
popa
lods
and
and
add
pop
mov
fisttp
pop
call
cmps
adc
push
pop
retf
and
in
fidivr
iret
clc
dec
aas
imul
push
pop
ins
sti
gs
dec
cmp
xlat
ficom
pop
addr16
jmpw
and
xor
pop
lock
int
jmp
sbb
or
sbb
dec
std
xor
sbb
jmp
leave
out
out
inc
jge
inc
inc
dec
pop
add
add
pop
aas
in
mov
sub
add
ins
xchg
cli
ins
movs
cld
xor
int3
clc
leave
scas
clc
out
in
(bad)
popa
aam
fistp
pop
stc
js
test
push
fstp
sbb
or
neg
daa
xchg
dec
shl
fldenv
data16
fild
pop
les
cmp
fdiv
jecxz
les
jbe
add
add
inc
mov
sbb
xor
imul
int
sahf
ss
ret
mov
fs
jb
cmp
aas
jbe
pop
clc
push
loopne
(bad)
loope
pop
fiadd
movs
outs
jmp
push
push
mov
sbb
xor
repnz
clc
es
mov
push
aaa
rep
icebp
push
stos
and
jmp
mov
mov
adc
jp
mov
out
mov
inc
push
cmp
xchg
retf
in
cmp
lods
fbstp
pushf
outs
cld
adc
ret
mov
inc
imul
shl
(bad)
lahf
cmps
jmp
sub
out
lds
jecxz
rcr
call
push
test
jno
sahf
lods
mov
mov
sub
jg
dec
pusha
inc
pop
adc
add
je
push
retf
xchg
mov
dec
xor
cmp
shl
mov
std
sahf
jle
clc
stos
jecxz
xchg
push
mov
ret
test
sbb
push
and
pushf
arpl
retf
pop
sbb
cld
adc
repnz
add
push
fisubr
jmp
retf
nop
jp
aad
inc
pop
aas
imul
mov
sub
fcomp
adc
xchg
arpl
stos
dec
retf
stos
inc
scas
jle
repz
xchg
les
stc
pop
loope
jle
mov
in
pop
sub
push
inc
stos
mov
mov
pop
bound
test
fwait
sti
(bad)
out
pop
inc
shl
aad
lahf
pop
mov
(bad)
sub
xchg
mov
call
mov
xor
push
lea
push
xor
cld
or
pop
mov
ds
sar
mov
pop
cmc
mov
outs
sbb
push
clc
push
loop
add
mov
fisub
push
jbe
and
(bad)
jbe
movs
jl
icebp
out
ret
clc
jae
iret
(bad)
pop
pop
cld
inc
imul
inc
sbb
fidivr
xchg
and
inc
daa
sbb
sbb
lds
ss
mov
dec
imul
mov
rcr
xor
jecxz
sbb
add
ret
sbb
push
mov
jg
pop
ret
js
iret
dec
(bad)
neg
int
stos
pop
movs
div
leave
xor
mov
mov
fadd
ss
pop
loop
pop
lock
cld
addr16
ret
outs
xchg
leave
mov
fwait
adc
jne
ss
mov
xor
sbb
pop
mov
pop
jmp
mov
scas
lds
pop
lds
outs
sbb
mov
sete
and
adc
idiv
and
mov
or
std
stos
and
shl
sub
rcr
mov
(bad)
jne
bnd
pop
(bad)
pop
pop
and
test
fdivr
dec
sub
ins
mov
inc
dec
mov
mov
push
mov
ror
ror
inc
jnp
fist
dec
(bad)
fmul
sub
push
sub
push
sub
push
sub
daa
inc
add
cmp
scas
cmp
out
xchg
(bad)
inc
cmp
sar
add
dec
psubw
out
add
mov
stos
mov
push
test
shr
and
lds
push
das
es
mov
fcomp
arpl
test
mov
loop
mov
dec
(bad)
push
fistp
sub
mov
pop
jg
push
and
sub
(bad)
cmp
jle
pop
loope
xor
enter
cmc
lods
dec
sbb
mov
jge
(bad)
sti
lds
aad
sti
stos
push
sub
sbb
jae
xchg
js
pushf
mov
mov
jl
hlt
clc
jg
fisttp
dec
cmps
les
aaa
xor
mov
(bad)
neg
adc
mov
inc
sar
into
add
jge
out
and
mov
cmps
test
cmp
jl
clc
mov
inc
xlat
mov
xor
(bad)
leave
adc
pop
xor
pop
repz
clc
mov
mov
aas
adc
movs
cmp
(bad)
in
dec
in
repnz
out
in
loop
sub
and
cmp
dec
dec
mov
xor
dec
dec
out
cmp
icebp
stos
loop
xor
cmp
jecxz
imul
cmp
mov
out
sbb
jp
push
scas
dec
ins
sbb
dec
xor
jecxz
mov
pop
les
cmc
(bad)
mov
jmp
popf
cmp
xchg
clc
stc
mov
add
in
jns
retf
inc
rcl
jmp
dec
and
(bad)
xor
pop
jno
inc
dec
repz
(bad)
aad
pop
in
mov
pop
mov
lea
mov
aam
dec
and
dec
scas
rol
pop
push
cmp
lock
loop
ret
aad
cmp
sub
shr
adc
out
popf
mov
cmps
test
popf
out
cmp
push
and
pop
mov
ds
pop
aad
push
dec
das
outs
in
gs
test
dec
add
adc
pop
les
xchg
cli
jg
mov
sar
rol
fnsave
repnz
or
push
sub
sub
xchg
mov
sar
leave
loop
loop
inc
(bad)
adc
into
jle
pop
mov
xlat
cmp
stos
jle
clc
movs
jecxz
add
mov
fidivr
xor
mov
jecxz
adc
lea
(bad)
mov
jl
loope
hlt
pop
pop
loop
lods
ins
movs
mov
xchg
mov
sub
cmps
shl
pop
push
jg
stos
loop
jp
pop
(bad)
cmc
sbb
int
imul
push
and
aaa
test
test
inc
fimul
adc
jg
imul
call
sub
retf
mov
mov
sbb
fwait
sti
inc
pop
aad
xor
push
aam
pop
leave
cmp
and
aad
mov
xor
aad
daa
je
es
js
loop
mov
(bad)
pop
clc
dec
lds
xchg
and
adc
push
shl
add
lods
jle
lahf
sbb
cmps
les
fldcw
jne
loopne
std
sub
inc
adc
adc
cmp
jecxz
lds
call
aas
icebp
add
cmp
dec
pop
sbb
jmp
and
jmp
or
cmps
(bad)
mov
std
and
jnp
scas
frstor
iret
inc
sbb
setge
jl
icebp
jle
test
mov
sar
cmovno
lds
aas
push
xchg
std
fwait
jno
adc
mov
adc
dec
mov
mul
adc
sbb
fdivr
fnstcw
les
lahf
jecxz
pop
jmp
imul
sbb
aaa
xor
jle
js
ret
repz
adc
jmp
mov
cli
inc
adc
xor
xchg
iret
dec
add
inc
mov
pusha
out
fild
sysexit
sbb
or
aaa
mov
pop
pop
retf
cmp
sahf
mov
js
neg
inc
fwait
inc
icebp
jg
sub
scas
mov
call
sbb
inc
adc
sbb
jl
clc
pop
movs
dec
cmps
js
(bad)
sbb
int
or
mov
sbb
movs
lock
inc
mov
mov
pop
jmp
cmp
or
retf
inc
(bad)
cmp
or
pusha
ins
mov
sar
(bad)
jg
inc
cld
fs
pop
aam
pop
(bad)
and
mov
int
aad
movs
xchg
aam
ficom
sbb
add
add
pop
ret
(bad)
push
clc
sar
ret
jmp
mov
aam
out
add
fiadd
sahf
sub
or
(bad)
clc
iret
mul
bswap
mov
cmc
imul
aaa
pop
jl
cmp
jbe
sbb
mov
cld
jno
scas
(bad)
out
pop
or
push
lock
ror
ret
or
ins
mov
inc
out
xchg
mov
cmc
jge
loop
xchg
mov
fsubr
mov
repz
adc
add
(bad)
cmps
cld
adc
mov
mov
sbb
fsubrp
cmp
inc
mov
adc
stc
fnsave
mov
into
js
into
ret
lea
cld
pop
jecxz
addr16
les
stos
jmp
jo
lock
add
xchg
push
nop
je
or
pop
shr
cdq
dec
mov
js
and
mov
call
in
lods
push
sub
repnz
in
jae
xlat
jg
pop
mov
and
das
mov
dec
dec
outs
jne
inc
enter
add
sbb
scas
arpl
sbb
sbb
cmps
jae
imul
mov
dec
push
in
fsub
les
fnsave
ret
out
jae
sti
dec
jl
mov
(bad)
daa
xor
movs
pop
sbb
add
sbb
mov
dec
test
outs
xchg
ret
aam
or
mov
test
fwait
sbb
jno
pushf
outs
es
shl
cs
mov
mov
(bad)
fstp
loop
(bad)
repnz
mov
sub
bound
repnz
scas
out
repnz
fdiv
dec
arpl
ins
cmp
test
(bad)
ss
jecxz
adc
cmp
xchg
push
lock
mov
ins
sti
inc
test
ss
ins
jo
fmul
inc
cld
popa
clc
stos
movs
mov
loop
push
jmp
and
and
inc
add
retf
out
rcl
jg
(bad)
push
jmp
shl
retf
mov
add
loope
mov
lods
inc
mov
mov
jmp
cmps
stos
imul
mov
add
cld
or
rol
fwait
ret
ds
cmp
in
jp
test
outs
lods
call
sub
ret
aaa
and
pop
or
dec
(bad)
fisubr
lock
mov
cmp
cmps
js
push
mov
adc
fimul
or
outs
sbb
iret
xor
jnp
jbe
jbe
pop
sbb
inc
icebp
mov
jl
loop
push
les
ja
aas
mov
call
jmp
imul
lea
sar
jmp
imul
mov
push
add
pop
inc
in
add
mov
ss
adc
cmp
shr
jp
test
das
sahf
not
dec
iret
cmp
std
in
std
jae
pop
mov
in
jne
(bad)
fild
mov
in
fst
mov
push
out
push
lods
pusha
out
je
not
repz
int
jns
out
scas
daa
jb
and
movs
cwde
repnz
mov
inc
fcmovbe
xor
inc
mov
cmp
adc
imul
shl
lea
pusha
or
cmc
cmps
ins
lods
adc
xchg
dec
les
shl
mov
ins
mov
push
sub
mov
add
sar
dec
sti
rcr
inc
movs
aaa
adc
das
dec
jmp
fistp
stos
mov
ds
in
inc
dec
inc
je
fwait
xchg
push
push
rol
in
push
mov
pusha
mov
pop
cs
inc
dec
inc
push
or
and
push
mov
pusha
mov
pop
cs
inc
dec
inc
push
or
and
push
mov
pusha
mov
pop
cs
inc
dec
inc
push
or
and
push
mov
pusha
mov
pop
cs
inc
dec
inc
push
or
and
push
mov
pusha
mov
pop
cs
inc
dec
inc
push
or
and
push
mov
pusha
mov
pop
cs
inc
dec
inc
push
or
and
push
mov
pusha
mov
pop
cs
inc
dec
inc
push
or
and
rcr
shl
ss
sub
or
ror
cs
sbb
imul
push
ins
mov
jecxz
shl
add
movs
fild
sub
and
inc
ficom
add
lahf
inc
push
or
cmp
add
add
idiv
nop
fcom
adc
jecxz
dec
out
sar
inc
movs
aaa
adc
jp
loopne
in
jmp
ds
int3
gs
sub
xchg
push
call
mov
clc
mov
clc
mov
clc
mov
clc
mov
clc
mov
clc
mov
clc
mov
clc
mov
clc
mov
clc
mov
clc
mov
clc
mov
clc
mov
clc
mov
clc
mov
clc
mov
clc
mov
clc
mov
clc
mov
clc
mov
clc
mov
clc
mov
mov
gs
sub
xchg
push
call
mov
mov
gs
sub
xchg
push
call
mov
mov
gs
sub
xchg
push
call
mov
mov
gs
inc
add
inc
xchg
mov
jg
or
inc
inc
sar
in
mov
(bad)
inc
jno
(bad)
(bad)
adc
sbb
xchg
repz
fidiv
shr
lods
mov
mov
data16
aas
fldcw
mov
lea
lahf
or
pop
fs
stos
jno
mov
or
rol
mov
loop
jle
mov
jecxz
daa
std
mov
(bad)
repz
into
mov
jae
xchg
test
ds
adc
stos
test
mov
(bad)
and
outs
rcl
mov
cmp
add
inc
dec
jecxz
add
sub
adc
not
pop
xchg
inc
aaa
(bad)
addr16
icebp
jne
aas
rcr
inc
ret
imul
mov
ret
inc
cld
pop
(bad)
inc
les
add
and
add
inc
lock
pop
inc
adc
push
dec
sti
aas
or
add
cli
aad
out
(bad)
loope
mov
pop
loope
add
or
inc
loop
inc
xchg
lock
adc
inc
clc
das
(bad)
inc
mov
aas
or
add
cli
aad
out
(bad)
loope
mov
pop
loope
add
or
inc
loop
inc
xchg
lock
adc
inc
clc
das
(bad)
inc
mov
add
test
inc
ret
mov
cmps
fsub
mov
fwait
xchg
scas
pop
int3
movs
arpl
cdq
outs
dec
sub
scas
fst
xor
xchg
and
pop
lock
push
inc
mov
inc
add
adc
ret
imul
mov
ret
inc
cld
pop
(bad)
inc
les
lods
jle
mov
loope
cmovno
sbb
fdiv
mov
out
ret
or
stc
retf
aam
call
ret
js
inc
lock
mov
add
leave
and
test
adc
das
data16
shl
inc
or
sbb
ds
or
iret
pop
adc
stc
mov
xchg
out
push
or
push
repz
aas
loope
mov
pop
loope
add
or
inc
loop
inc
xchg
lock
adc
inc
clc
das
(bad)
inc
mov
aad
sub
cmp
(bad)
mov
pop
fwait
ins
ss
adc
and
loop
bound
ret
imul
cmp
mov
dec
jmp
mov
xor
push
inc
dec
ins
ror
mov
stos
addr16
pop
mov
push
pushf
xchg
mov
mov
aad
cmp
mov
lahf
mov
ja
cld
jbe
out
inc
loope
mov
pop
loope
add
or
inc
loop
inc
xchg
lock
adc
inc
clc
das
(bad)
inc
mov
out
xchg
and
clc
addr16
sbb
(bad)
sar
inc
out
repnz
xor
jge
xor
jl
jge
pop
aam
xchg
sti
push
mov
(bad)
jg
fisub
les
stc
cmp
jge
pop
fnstenv
jo
test
mov
xor
popf
mov
lods
cmp
movs
xor
cmps
loopne
jbe
scas
mov
loope
mov
pop
loope
add
or
inc
loop
inc
xchg
lock
adc
inc
clc
das
(bad)
inc
mov
iret
paddb
sbb
aam
pop
int
push
ss
lods
cmps
push
bound
push
jmp
out
idiv
dec
loop
mov
gs
adc
test
sbb
jecxz
jmp
push
cs
adc
sbb
imul
xchg
and
jge
ret
test
xchg
ins
(bad)
sub
std
adc
fcomip
fcmovu
push
inc
mov
inc
add
adc
ret
imul
mov
ret
inc
cld
pop
(bad)
inc
les
cld
xor
xor
adc
pop
dec
jne
movs
and
mov
mov
imul
scas
jnp
ins
aas
les
ds
jecxz
xor
and
and
addr16
push
xor
jae
das
pop
jo
or
and
push
jg
xor
sub
push
in
push
mov
pop
pop
cmp
in
lods
xchg
mov
xchg
lock
adc
inc
clc
das
(bad)
inc
mov
fcomip
inc
(bad)
pop
inc
loopne
aas
(bad)
and
mov
inc
dec
mov
in
xchg
imul
icebp
adc
or
push
sub
rcl
push
sti
iret
xor
das
enter
sbb
fcomip
inc
(bad)
pop
inc
loopne
aas
(bad)
and
jg
pop
clc
jg
add
mov
clc
push
sti
and
cmp
jp
mov
movs
sbb
mov
and
mov
pop
mov
add
push
jp
fwait
pop
std
mov
jecxz
test
xor
(bad)
mov
movs
mov
mov
mov
movs
dec
cmp
sbb
xchg
dec
les
adc
push
movs
in
cs
addr16
daa
inc
cmp
and
ins
daa
adc
jmp
lahf
jnp
mov
pop
lock
push
inc
mov
inc
add
adc
ret
imul
mov
ret
inc
cld
pop
(bad)
inc
les
pop
mov
test
ins
unpckhps
xchg
jp
ss
inc
cs
jns
pusha
push
aad
frstor
jl
sti
ds
fnclex
push
mov
ret
loope
push
fisubr
push
pop
jb
sbb
and
adc
in
retf
mov
mov
pop
xor
or
fsub
test
rcr
fadd
movs
sub
ss
aad
(bad)
mov
push
add
and
add
inc
lock
pop
inc
adc
ss
mov
inc
sar
jno
pop
mov
cld
fs
icebp
frstor
mov
mov
add
xchg
xchg
in
xor
lods
push
clc
mov
xor
adc
daa
mov
out
ja
clc
inc
ret
out
test
dec
retf
sti
mov
jl
scas
in
jns
out
scas
mov
pop
sbb
retf
push
fsub
push
outs
jb
xchg
xchg
arpl
cmp
mov
mov
(bad)
daa
xchg
sbb
scas
ins
mov
pop
lods
ja
lock
push
inc
mov
inc
add
adc
ret
imul
mov
ret
inc
cld
pop
(bad)
inc
les
sti
sub
(bad)
cmp
(bad)
and
push
dec
sub
ss
pop
mov
cmp
lods
jmp
idiv
lock
inc
or
stos
imul
ret
idiv
mov
repnz
lea
mov
addr16
cmp
jns
scas
sbb
dec
cwde
push
retf
xor
lods
sbb
pop
mov
fcom
lea
mov
mov
imul
mov
ret
inc
cld
pop
(bad)
inc
les
add
and
add
inc
lock
pop
inc
adc
loopne
fldcw
or
pop
pop
sbb
mov
xchg
sbb
inc
inc
adc
cmp
loop
adc
mov
cdq
jne
sub
not
push
dec
pop
sbb
daa
jnp
out
xor
cdq
lock
pop
das
adc
fiadd
(bad)
fdivrp
add
(bad)
jb
sbb
mov
jmp
ret
imul
mov
ret
inc
cld
pop
(bad)
inc
les
add
and
add
inc
lock
pop
inc
adc
inc
add
and
mov
pop
xchg
dec
sub
dec
(bad)
rol
aas
(bad)
fadd
and
xadd
pop
cld
sub
aaa
xchg
shr
pop
cmp
mov
pop
sbb
push
jge
call
cmp
xor
lahf
or
dec
ficomp
out
scas
imul
xchg
xor
cmps
gs
jg
imul
mov
ret
inc
cld
pop
(bad)
inc
les
add
and
add
inc
lock
pop
inc
adc
popf
sti
ds
inc
push
mov
test
scas
fwait
sbb
adc
cmp
out
scas
jg
aas
test
iret
xchg
call
dec
xchg
fcomp
pop
leave
adc
and
enter
xor
mov
sbb
repz
dec
js
fcmovbe
(bad)
xor
sbb
lds
repz
in
sub
jne
mov
mov
mov
add
adc
inc
clc
das
(bad)
inc
mov
fcomip
inc
(bad)
pop
inc
loopne
aas
(bad)
and
das
mov
aas
push
clc
jg
mov
or
push
sahf
frstor
cwde
xchg
enter
loope
repnz
ja
cmp
xchg
lods
jmp
jmp
jnp
popa
mov
ja
xor
dec
xor
cmp
dec
out
push
pop
inc
dec
cmp
mov
in
push
and
jnp
xor
imul
cli
push
mov
mov
inc
sar
pop
lock
push
inc
mov
inc
add
adc
mov
cmp
cmc
lods
es
loop
pop
inc
mov
push
push
mov
add
fdivr
add
jnp
mov
mov
add
rol
arpl
cmp
retf
inc
mov
(bad)
daa
pop
dec
sub
mov
fs
adc
mov
fsub
mov
jmp
aas
int3
cmc
dec
clc
ins
outs
movq
pop
clc
jg
add
mov
loope
mov
pop
loope
add
or
inc
loop
in
sub
aas
mov
(bad)
clc
mov
pop
stc
mov
ins
outs
movq
pop
clc
jg
add
mov
loope
mov
pop
loope
add
or
inc
loop
in
sub
iret
ret
jg
loop
add
ds
stc
mov
ins
outs
movq
pop
clc
jg
add
mov
loope
mov
pop
loope
add
or
inc
loop
in
sub
iret
ret
jg
loop
add
ds
stc
mov
ins
outs
movq
pop
clc
jg
add
mov
loope
cld
daa
jno
pop
jl
lock
pop
(bad)
cmps
lock
(bad)
in
cld
aaa
bnd
cld
ret
jmp
mov
sar
sbb
push
div
or
jmp
xchg
pop
pop
sbb
mov
(bad)
arpl
test
sub
sbb
lock
out
stc
neg
test
inc
rol
outs
test
inc
mov
(bad)
imul
fdiv
sub
aam
movs
sub
fidivr
and
jge
add
mov
cmps
rol
fild
jge
add
mov
cmps
rol
fild
jge
add
mov
cmps
rol
fild
jge
add
mov
cmps
rol
fild
jge
add
mov
cmps
rol
fild
jge
add
mov
inc
cld
adc
arpl
mov
jg
or
inc
jg
aas
aas
in
cmp
inc
outs
(bad)
inc
jno
(bad)
(bad)
adc
sbb
mov
mov
sub
shr
scas
test
popa
popa
mov
jmp
xor
inc
(bad)
(bad)
mov
and
int
sub
jecxz
repz
adc
adc
inc
add
jge
sti
add
add
jns
test
(bad)
imul
clc
ret
inc
or
(bad)
mov
fistp
mov
jge
in
push
inc
fisub
out
mov
arpl
lds
aaa
mov
pusha
mov
inc
sub
pop
mov
mov
out
rcl
sbb
cmp
cmps
pop
mov
icebp
pop
mov
pop
ficomp
sub
ins
sar
scas
and
pop
(bad)
retf
mov
adc
add
cmp
cmps
icebp
xchg
fnstenv
cld
jmp
jnp
add
es
ret
rcl
pop
pop
icebp
push
stos
jne
fwait
in
stc
sti
sub
adc
in
stc
repnz
enter
out
mov
pop
adc
loop
aaa
ret
push
imul
movs
xlat
xchg
pop
mov
lea
icebp
fimul
ret
ret
push
xchg
mov
adc
movs
add
sub
inc
cmps
out
leave
(bad)
pushf
repz
scas
cs
ds
xlat
cmps
fs
test
xor
jo
push
mov
cli
dec
test
stos
mov
push
adc
cmps
mov
sub
push
pop
dec
mul
dec
lods
or
repnz
jecxz
ds
repz
mov
pop
les
ja
cmp
push
sub
out
bound
mov
outs
sub
addr16
mov
mov
clc
ja
lock
mov
popa
or
mov
adc
test
push
mov
mov
adc
xchg
xchg
cmp
cmp
mov
jmp
in
repnz
ins
jns
fmul
ret
repz
jp
cmc
xchg
in
mov
ds
inc
add
add
stc
and
inc
jmp
pop
inc
rol
ins
fwait
imul
mov
lea
lock
ret
outs
call
fisub
cwde
sbb
or
into
mov
jne
push
adc
test
(bad)
sub
cmc
in
push
sahf
cmp
gs
inc
push
pop
int3
fnstcw
loopne
cmp
cmp
shl
retf
mov
jnp
xchg
not
aas
jg
xor
add
xor
repz
xchg
inc
aad
sar
daa
(bad)
jae
mov
lods
jb
je
into
xchg
inc
test
std
imul
jl
pop
push
pop
xchg
inc
push
ins
sub
frstorw
xchg
out
in
mov
dec
jno
push
js
test
icebp
inc
ret
iret
or
dec
lock
das
mov
push
movs
outs
mov
adc
jle
jecxz
pop
out
pop
dec
imul
jg
mov
ret
aas
mov
push
cdq
fisttp
cmp
std
stos
pop
lahf
or
stos
je
in
out
stos
scas
pop
imul
jl
add
jmp
stc
xchg
mov
xchg
push
jle
mov
jp
clc
push
sbb
icebp
mov
pop
pop
dec
in
lods
dec
neg
mov
sub
nop
in
bound
imul
add
mov
push
sar
cdq
push
lahf
jecxz
je
scas
cs
cmp
dec
xor
inc
ret
inc
in
pop
lahf
cmp
les
inc
clc
mov
lea
es
jecxz
cmp
and
mov
jecxz
sbb
xchg
sub
addr16
sub
push
stc
push
inc
inc
dec
xchg
enter
fdivr
loope
sub
xor
cmps
sub
pushf
push
push
cs
xchg
jns
mov
lods
es
cmp
mov
test
into
out
movs
out
lahf
mov
jmp
std
inc
ret
jle
icebp
adc
hlt
fdiv
cmp
sbb
mov
push
jae
addr16
fild
adc
pop
(bad)
adc
sbb
pop
mov
fild
sbb
in
fnstenv
jg
xor
jae
push
call
iret
jno
inc
jns
mov
cld
leave
stos
xchg
sti
xchg
sub
sbb
lods
sub
sub
or
jae
jecxz
mov
movs
movs
xchg
mov
stos
push
dec
inc
inc
pop
mov
(bad)
sar
add
mov
sub
or
imul
sti
popfw
loope
jg
xchg
inc
pop
ds
mov
jmp
in
sti
mov
sbb
pop
adc
jae
loopne
adc
jmp
and
ins
and
dec
ret
test
add
test
mov
pop
neg
aam
lahf
mov
mov
call
fst
in
cs
xchg
ret
xor
pop
jno
daa
(bad)
retf
jecxz
cmps
sub
leave
(bad)
lods
pushf
sbb
mov
mov
xor
imul
dec
pop
jbe
arpl
loope
mov
in
sbb
xor
rcr
in
pop
add
sar
scas
pop
pop
inc
inc
dec
pop
jns
ja
cmp
clc
scas
push
mov
mov
pop
popf
push
outs
xor
sub
xchg
add
iret
in
aas
mov
sub
aas
cld
and
ja
hlt
push
jno
xchg
sti
push
outs
xchg
in
scas
ja
daa
jbe
inc
clc
jae
popa
das
xchg
clc
arpl
pop
adc
scas
scas
cs
aam
sbb
and
in
and
and
add
inc
ret
pop
sub
aam
push
pop
mov
xchg
and
push
jg
movs
in
mov
or
aad
std
mov
jmp
test
(bad)
iret
or
jecxz
pop
inc
loope
and
mov
mov
fisubr
cwde
or
repz
mov
mov
cmp
loopne
iret
pop
es
sbb
mov
out
xor
sbb
iret
xchg
lahf
test
shl
jno
aaa
mov
jno
movs
xchg
dec
shr
hlt
mov
sbb
sub
das
add
pop
push
arpl
mov
les
sbb
loopne
ds
les
sub
sbb
pop
mov
push
cmp
jne
les
cwde
addr16
ins
dec
sub
pushf
test
push
xchg
movs
adc
retf
call
adc
movs
test
jne
jb
lods
cmp
ss
inc
inc
add
inc
xchg
xchg
(bad)
lahf
cmc
jmp
mov
addr16
(bad)
dec
jl
xchg
inc
mov
jl
inc
lods
pop
fsubr
inc
xchg
xchg
in
cmp
mov
add
clc
fisttp
mov
(bad)
ror
in
(bad)
pop
ror
mov
pushf
sti
push
outs
outs
sti
imul
mov
add
sbb
pushf
inc
push
sar
add
ins
repnz
in
jbe
outs
mov
loop
jmp
xor
mov
iret
push
loop
loopne
push
dec
dec
mov
dec
stos
idiv
rol
(bad)
mov
imul
inc
ficomp
jl
xchg
out
dec
add
pop
and
mov
adc
adc
push
clc
es
sti
dec
test
xor
gs
xchg
sub
inc
and
int3
xor
repnz
cmp
inc
sar
and
icebp
das
or
pop
and
fldenv
inc
out
sar
ds
std
mov
cmp
cld
arpl
mov
pop
ins
loopne
mov
shl
arpl
xchg
and
push
dec
call
ret
push
repz
jae
push
test
das
imul
xchg
push
xor
and
in
pop
mov
hlt
fistp
fs
mov
add
sub
cld
push
std
mov
imul
sbb
jb
leave
and
cmc
lods
out
mov
cmp
hlt
mov
imul
aam
dec
dec
cmc
popa
xor
mov
fist
dec
test
jb
sbb
inc
mov
test
mov
popa
cmps
lds
xchg
pop
pop
rcr
and
sahf
add
jecxz
in
sub
arpl
jg
mov
or
outs
ret
pop
(bad)
push
popf
out
das
cmps
sti
pop
popf
in
and
and
ss
cmp
cmp
dec
add
loop
xor
mov
inc
test
cmps
xchg
mov
mov
into
in
mov
stc
jb
xor
push
jle
mov
ja
lock
iret
stc
or
jmp
mov
xlat
jg
lahf
les
(bad)
inc
imul
cmp
addr16
ss
jge
adc
jbe
and
inc
sti
(bad)
in
fnstcw
xchg
inc
test
jnp
push
cmp
in
sub
(bad)
lods
repz
(bad)
sub
pop
sti
inc
inc
ret
int
dec
pop
jg
aas
std
mov
clc
xchg
std
mov
bnd
xchg
pop
cmc
sahf
pop
fisttp
iret
sbb
xor
sbb
inc
aad
sbb
xchg
and
and
mov
dec
cmp
sub
xchg
imul
cmp
mov
(bad)
pop
(bad)
enter
imul
add
rcl
dec
jg
inc
loop
push
out
dec
mov
cwde
mov
lea
leave
xor
in
push
sbb
sbb
xlat
in
retf
inc
or
scas
jecxz
out
clc
inc
(bad)
sar
add
sbb
add
and
jae
popf
fbstp
jecxz
cmp
sti
dec
dec
lock
dec
fld
das
adc
pop
leave
mov
movs
test
adc
add
stc
sbb
xchg
mov
push
xor
push
xchg
xor
push
or
bound
aam
mov
xchg
lods
mov
mov
mov
scas
dec
std
std
ss
cs
jecxz
(bad)
pop
clc
push
mov
std
scas
mov
pop
pop
rcl
jae
ins
clc
dec
cwde
adc
stos
popf
ret
adc
push
cmp
rol
xchg
jecxz
fwait
ins
ror
(bad)
shr
cmp
xchg
and
adc
add
dec
jl
dec
movs
jecxz
fild
les
iret
and
xor
pop
mov
mov
mov
ins
rcl
cwde
or
xlat
cmp
pop
lods
mov
mov
mov
ins
or
imul
(bad)
pushf
mov
dec
sahf
inc
jnp
mov
mov
mov
sbb
sbb
dec
outs
ds
mov
retf
arpl
cmp
ja
ins
pop
mov
or
sub
call
push
(bad)
sub
dec
sub
mov
sub
dec
std
inc
and
ja
cli
add
mov
add
mov
idiv
sub
dec
ds
jge
jl
and
cli
sahf
mov
cli
adc
mov
xchg
fsubr
shr
mov
inc
outs
fidiv
shr
mov
inc
outs
fidiv
shr
mov
inc
outs
fidiv
shr
mov
inc
outs
fidiv
shr
mov
inc
outs
fidiv
shr
scas
mov
sbb
mov
out
cli
pop
dec
sti
inc
daa
outs
loopne
sti
jle
add
sbb
aas
inc
imul
rol
fldenv
test
inc
and
inc
rcr
sbb
ror
pusha
popf
int3
dec
imul
mov
or
scas
or
sbb
add
fsubr
aad
pop
retf
icebp
neg
mov
out
les
jl
loopne
push
pop
call
mov
fisub
push
jg
bswap
cld
mov
arpl
add
imul
sub
mov
and
bound
adc
add
pop
inc
iret
out
mov
clc
call
repz
fcomip
int3
jg
dec
jl
inc
ds
lahf
repz
js
pmulhuw
aas
icebp
xchg
add
stc
jecxz
sti
out
(bad)
es
clc
ret
inc
stc
cld
icebp
idiv
repz
inc
adc
push
inc
sub
mov
xlat
aas
icebp
xchg
add
stc
jecxz
sti
out
(bad)
es
clc
ret
inc
stc
cld
icebp
idiv
repz
inc
adc
push
inc
sub
mov
xlat
aas
icebp
xchg
add
stc
jecxz
sti
out
(bad)
es
clc
ret
inc
stc
cld
icebp
idiv
repz
inc
adc
push
inc
sub
mov
xlat
aas
icebp
xchg
add
stc
jecxz
sti
out
(bad)
es
clc
ret
inc
stc
cld
icebp
idiv
repz
inc
adc
push
inc
sub
mov
xlat
aas
icebp
xchg
add
stc
jecxz
sti
out
(bad)
es
clc
ret
inc
stc
cld
icebp
idiv
repz
inc
adc
push
inc
sub
mov
xlat
aas
icebp
xchg
add
stc
jecxz
sti
out
(bad)
es
clc
ret
inc
stc
cld
icebp
idiv
repz
inc
adc
push
inc
sub
mov
xlat
aas
icebp
xchg
add
stc
jecxz
sti
out
(bad)
es
clc
ret
inc
stc
cld
icebp
idiv
repz
inc
adc
push
inc
sub
mov
xlat
aas
icebp
xchg
add
stc
jecxz
sti
out
(bad)
es
clc
ret
inc
stc
cld
icebp
idiv
repz
inc
adc
push
inc
sub
mov
xlat
aas
icebp
xchg
add
stc
jecxz
sti
out
(bad)
es
clc
ret
inc
stc
cld
icebp
idiv
repz
inc
adc
push
inc
sub
mov
xlat
aas
icebp
xchg
add
stc
jecxz
sti
out
(bad)
es
clc
ret
inc
stc
cld
icebp
idiv
repz
inc
adc
push
inc
sub
mov
xlat
aas
icebp
xchg
add
stc
jecxz
sti
out
(bad)
es
clc
ret
inc
stc
cld
icebp
idiv
repz
inc
adc
push
inc
sub
mov
xlat
aas
icebp
xchg
add
stc
jecxz
sti
out
(bad)
es
clc
ret
inc
stc
cld
icebp
idiv
repz
inc
adc
push
inc
sub
mov
xlat
aas
icebp
xchg
add
stc
jecxz
sti
out
(bad)
es
clc
ret
inc
stc
cld
icebp
idiv
repz
inc
adc
push
inc
sub
mov
xlat
aas
icebp
xchg
add
stc
jecxz
sti
out
(bad)
es
clc
ret
inc
stc
cld
icebp
idiv
repz
inc
adc
push
inc
sub
mov
xlat
aas
icebp
xchg
add
stc
jecxz
sti
out
(bad)
es
clc
ret
inc
stc
cld
icebp
idiv
repz
inc
adc
push
inc
sub
mov
xlat
aas
icebp
xchg
add
stc
jecxz
sti
out
(bad)
es
clc
ret
inc
stc
cld
icebp
idiv
repz
inc
adc
push
inc
sub
mov
xlat
aas
icebp
xchg
add
stc
jecxz
sti
out
(bad)
es
clc
ret
inc
stc
cld
icebp
idiv
repz
inc
adc
push
inc
sub
mov
xlat
aas
icebp
xchg
add
stc
jecxz
sti
out
(bad)
es
clc
ret
inc
stc
cld
icebp
idiv
repz
inc
adc
push
inc
sub
mov
xlat
aas
icebp
xchg
add
stc
jecxz
sti
out
(bad)
es
clc
ret
inc
stc
cld
icebp
idiv
repz
inc
adc
push
inc
sub
mov
xlat
aas
icebp
xchg
add
stc
jecxz
sti
out
(bad)
es
clc
ret
inc
stc
cld
icebp
idiv
repz
inc
adc
push
inc
sub
mov
xlat
aas
icebp
xchg
add
stc
jecxz
sti
out
(bad)
es
in
pop
mov
lahf
out
jg
mov
mov
out
outs
loope
jne
cmp
add
inc
loop
fcmovu
sar
lock
clc
jl
daa
movs
add
clc
mov
aam
dec
ret
sub
or
add
inc
add
inc
imul
mov
test
inc
and
adc
pusha
mov
cs
inc
push
or
loope
adc
pusha
mov
cs
inc
push
or
loope
adc
pusha
mov
cs
inc
daa
ins
loopne
sti
jle
add
sbb
std
cmp
in
mov
(bad)
inc
jno
push
pop
mov
cmps
std
cmc
jmp
sbb
inc
adc
sbb
inc
adc
jl
stos
fldcw
ins
mov
call
adc
dec
and
stos
mov
sbb
sub
jmp
fild
inc
outs
movs
jl
icebp
push
mov
js
jecxz
cs
scas
or
repnz
ja
inc
xor
retf
jae
loopne
into
ror
es
jg
das
stc
div
mul
pop
clc
(bad)
dec
movs
movs
scas
sbb
mov
sub
lods
mov
and
mov
add
mov
enter
jecxz
into
aas
icebp
cmps
int
stc
imul
mov
mov
retf
aas
mov
cld
sti
clc
sti
repz
cld
push
add
(bad)
ds
jecxz
add
cmp
test
mov
in
test
add
(bad)
ds
jecxz
add
xor
and
mov
add
mov
add
mov
xor
iret
xchg
push
and
mov
add
mov
enter
jecxz
into
aas
icebp
mov
pop
jo
pop
int3
mov
jmp
dec
pop
repz
jecxz
into
aas
icebp
mov
sti
clc
sti
repz
cld
push
xchg
fcom
xchg
das
mov
retf
aas
mov
cld
sti
clc
sti
repz
cld
push
add
(bad)
ds
jecxz
add
cmp
test
mov
in
test
add
(bad)
ds
jecxz
add
int
imul
fneni(8087
dec
sbb
cmp
jl
lock
les
frstor
loope
pop
add
pop
add
sbb
inc
sub
mov
sbb
pop
fcmovbe
push
loope
cld
iret
xchg
call
pusha
mov
push
mov
adc
ret
ss
sub
cdq
fwait
ins
push
mov
add
sbb
call
jbe
dec
xchg
outs
(bad)
retf
stos
(bad)
xchg
jno
jmp
aam
movs
mov
in
sub
push
dec
repnz
fucomi
xchg
jg
push
pop
call
push
push
jle
pop
hlt
push
jl
inc
cmp
push
lahf
mov
std
adc
scas
dec
inc
in
and
rcr
retf
out
inc
leave
aam
(bad)
aas
lock
aas
psubd
mov
pop
lahf
cld
lea
sub
fld
mov
mov
add
push
in
and
rcr
retf
out
inc
leave
aam
(bad)
aas
lock
aas
psubd
mov
pop
lahf
cld
lea
sub
fld
mov
mov
add
push
in
and
rcr
retf
out
inc
leave
aam
(bad)
aas
lock
aas
psubd
mov
pop
lahf
cld
lea
sub
fld
mov
mov
add
push
in
and
rcr
retf
out
inc
leave
aam
(bad)
aas
lock
aas
psubd
mov
pop
lahf
cld
lea
sub
fld
mov
mov
add
push
in
and
rcr
retf
out
inc
leave
aam
(bad)
aas
lock
aas
psubd
mov
pop
lahf
cld
lea
sub
fld
mov
mov
add
push
in
and
rcr
retf
out
inc
leave
aam
(bad)
aas
lock
aas
psubd
mov
pop
lahf
cld
lea
sub
fld
mov
mov
add
push
in
and
rcr
retf
out
inc
leave
aam
(bad)
aas
lock
aas
psubd
mov
pop
lahf
cld
lea
sub
fld
mov
mov
add
push
in
and
rcr
retf
out
inc
leave
aam
(bad)
aas
lock
aas
psubd
mov
pop
lahf
cld
lea
loopne
in
shl
xchg
jle
icebp
mov
shl
(bad)
je
dec
jl
fmul
sbb
pop
aad
push
shr
cmp
call
(bad)
mov
add
adc
mov
jp
inc
jno
jbe
imul
inc
(bad)
int3
(bad)
jmp
cmp
xchg
xlat
xor
test
adc
or
cwde
sub
mov
mov
mov
mov
mov
mov
mov
mov
daa
rcl
nop
push
push
cmps
lahf
jno
jg
jo
sub
dec
sbb
dec
adc
xchg
cmp
pop
mov
inc
push
jo
cmps
scas
mov
sub
sub
rcl
xchg
mov
mov
enter
mov
mov
adc
add
add
mov
repz
sti
add
fprem
sbb
fistp
les
jle
repnz
das
jle
cmps
iret
pop
push
pop
out
fwait
push
or
add
xchg
in
cmp
stc
outs
mov
mov
(bad)
push
or
fstp
loopne
into
xchg
hlt
(bad)
cld
adc
dec
ret
inc
mov
cli
sub
ss
dec
xor
data16
out
and
js
mov
sti
fist
jne
call
in
xchg
into
in
pop
(bad)
out
xor
cmps
xlat
shl
mov
cmps
pop
(bad)
and
fwait
mov
lock
sti
dec
lock
scas
sti
adc
in
add
pop
xor
jl
xchg
lea
call
pop
mov
movsx
xchg
pop
pop
cmc
dec
jecxz
lahf
hlt
imul
stos
pop
mov
pop
lock
popa
or
adc
jmp
jbe
and
in
sub
ds
xlat
lock
(bad)
mov
aaa
xchg
cmp
stos
inc
pop
std
lods
cli
xlat
(bad)
into
mov
jp
cmc
jnp
cmps
in
sbb
push
jo
in
test
repz
clc
jmp
mov
xchg
mov
pushf
shr
(bad)
jnp
lods
dec
outs
adc
cdq
aad
imul
cmp
sbb
pop
ret
lock
pop
shl
sbb
lahf
loop
test
xchg
(bad)
ss
jge
rcl
shr
sbb
jmp
aam
fdiv
inc
int3
cmp
adc
fcomp
leave
lahf
in
aaa
ret
fisub
add
xchg
out
cli
(bad)
scas
add
imul
pop
hlt
add
(bad)
jp
mov
dec
into
cli
fist
loop
sbb
arpl
ja
inc
in
jg
aaa
jecxz
xchg
hlt
or
cdq
popa
mov
jb
xor
arpl
mov
jno
jmp
dec
xchg
pop
pop
sbb
pop
push
dec
loope
rcl
imul
add
push
pop
imul
xor
xchg
loope
mov
sbb
pop
clc
pop
jno
loop
lock
retf
jp
push
push
ret
xor
xlat
out
push
cmovp
cld
inc
std
lods
mov
xchg
sahf
scas
jno
loope
inc
and
lahf
fsub
daa
jmp
in
push
out
in
push
in
mov
lock
stc
bound
jle
inc
std
mov
jl
lock
(bad)
mov
ss
xor
iret
outs
sub
enter
xor
loopne
in
cmc
inc
lea
cld
iret
jne
mov
mov
dec
fisttp
cmp
pushf
jp
jmp
mov
mov
mov
adc
stos
pop
jmp
adc
add
sub
scas
mov
out
std
movs
jl
popa
sbb
aad
mov
pop
mov
fsubr
aas
test
in
sti
push
jg
sar
sbb
mov
sub
leave
mov
aam
addr16
sbb
shr
shl
sar
add
maskmovq
not
pop
mov
jl
inc
xchg
test
jg
or
inc
call
clc
lods
adc
fisub
out
gs
pop
jmp
(bad)
mov
xlat
push
icebp
outs
mov
inc
mov
pop
movs
or
pop
test
or
add
cmp
aas
sti
pop
sbb
add
scas
call
pop
data16
lahf
mov
dec
inc
fisttp
arpl
mov
add
call
xchg
push
outs
sbb
xchg
ins
jmp
dec
push
jp
or
aaa
sti
dec
jle
jp
ret
jp
or
ins
push
leave
out
ins
ins
test
cwde
xor
adc
test
mov
jle
std
xchg
sub
test
movs
mov
mov
sub
dec
in
ds
inc
xchg
jne
std
fnstenv
and
and
adc
lock
mov
adc
js
dec
jge
neg
push
mov
dec
call
push
inc
loopne
jnp
js
lds
pop
mov
retf
movs
pop
imul
stos
icebp
mov
scas
(bad)
fsubr
or
fnstsw
data16
sbb
repz
cmp
jno
add
loop
jmp
jg
js
ffreep
push
pop
(bad)
cs
pop
lea
jecxz
mov
push
movs
push
dec
jb
arpl
dec
adc
iret
(bad)
inc
mov
in
sahf
ret
dec
mov
add
lods
xchg
push
mov
ds
mov
jl
std
lea
push
dec
jno
call
ret
mov
dec
mov
and
out
leave
stos
(bad)
(bad)
lods
retf
lock
aas
stc
xor
sub
and
sbb
test
cmp
push
inc
mov
nop
push
fucomi
stos
fs
or
imul
ds
jecxz
jmp
sub
mov
mov
adc
and
pop
mov
sbb
pop
clc
daa
jnp
jecxz
fldcw
es
sbb
mov
cmc
jge
or
(bad)
add
and
add
mov
enter
dec
loopne
or
daa
ror
push
cmp
sahf
adc
cwde
mov
(bad)
les
les
jmp
jmp
outs
sbb
(bad)
aad
inc
rol
push
in
div
repz
pop
std
fwait
(bad)
sub
ret
scas
scas
jmp
jecxz
fs
dec
push
push
push
arpl
cmp
test
or
jecxz
cmp
pop
push
aad
mov
sub
sub
sub
ds
add
std
nop
lock
lods
js
push
aad
outs
ins
jl
jg
test
je
dec
and
popa
cmp
scas
or
ror
loope
add
scas
out
(bad)
sbb
ret
mov
test
icebp
jmp
add
test
outs
xchg
xlat
or
mov
ins
push
cmps
mov
mov
lods
pop
rol
fstp
int
(bad)
int
mov
in
(bad)
loopne
fpatan
sar
(bad)
cld
cmp
(bad)
(bad)
mov
push
sahf
cmp
das
xchg
iret
rcr
xchg
sbb
sti
and
loop
ret
loop
les
repnz
imul
movs
xor
pop
repnz
shl
clc
sub
cdq
psubb
aas
mul
dec
in
add
mov
adc
(bad)
push
fdivrp
sbb
jae
add
ror
sbb
pop
ret
cmp
loopne
fptan
pop
add
sbb
mov
jmp
sbb
xchg
lods
cmps
imul
pop
clc
inc
(bad)
lahf
or
push
xchg
ret
(bad)
ins
hlt
stos
cwde
fs
sbb
rcr
sub
hlt
sub
xchg
pushf
push
pop
neg
or
int
dec
clc
popa
mov
xchg
pop
mov
in
add
add
btc
cmp
jl
icebp
mov
dec
mov
lock
(bad)
(bad)
imul
fcomp
push
lahf
cmp
dec
sti
pop
jae
ror
test
loope
jb
dec
jg
dec
jle
fcomp
xor
test
aas
scas
inc
mov
lea
ins
jp
xchg
mov
xchg
fwait
inc
xchg
inc
lahf
push
cmps
ds
stos
aas
sbb
cmp
or
push
and
inc
push
aad
retf
or
and
outs
xor
shl
(bad)
cmp
jecxz
xchg
clc
gs
gs
add
add
cdq
dec
inc
mov
xchg
adc
addr16
adc
jg
jl
add
jmp
loop
loope
dec
or
ins
lods
cs
(bad)
mov
mov
sar
mov
mov
loop
dec
dec
icebp
push
mov
pop
dec
add
daa
lahf
sub
sbb
or
xor
cmp
inc
xchg
dec
cmp
movs
dec
call
xchg
(bad)
std
inc
ret
sub
or
jmp
jmp
or
mov
mov
arpl
div
jg
lahf
or
mov
sub
sub
lods
out
and
sbb
dec
aad
mov
pop
int
fcomp
js
xor
cwde
es
xchg
and
jb
inc
bound
mov
outs
xor
pushf
out
adc
(bad)
jg
xor
sbb
xchg
inc
mov
(bad)
loop
sub
stc
jno
lock
mov
sub
retf
mov
(bad)
rcl
mov
cmps
jmp
dec
xor
jmp
add
ins
loope
cmp
mov
outs
xchg
sbb
xor
mov
adc
lods
inc
cmp
scas
arpl
fimul
xlat
mov
clc
(bad)
jne
shl
or
jmp
sti
xor
ret
push
clc
mov
cmp
icebp
adc
test
stos
sub
je
loope
xor
xchg
mov
mov
sbb
mov
or
fstp
mov
dec
mov
lods
ret
and
(bad)
(bad)
aad
sub
aas
jae
adc
add
test
and
xchg
push
xchg
cli
jmp
out
(bad)
push
invd
push
push
adc
ficom
aas
les
xor
mov
retf
fwait
mov
dec
movs
pop
dec
jb
inc
cmp
out
jno
cmp
pop
push
jl
inc
xchg
sbb
popa
sbb
and
test
adc
lods
dec
mov
movs
mov
fidiv
rcl
inc
and
mov
cs
rcl
inc
and
mov
cs
rcl
inc
and
mov
cs
rcl
inc
and
mov
cs
shl
fdivr
inc
movaps
retf
xor
movs
or
mov
dec
mov
out
test
pop
outs
test
xchg
out
or
sbb
inc
fwait
mov
or
sets
add
imul
enter
je
push
mov
push
xor
out
in
jge
or
or
mov
pop
sub
add
sub
dec
cmp
mov
mov
pop
add
push
and
pop
or
movs
mov
shl
sub
ja
stc
mov
push
scas
and
dec
mov
stc
mov
push
outs
hlt
xlat
mov
pop
cdq
inc
call
inc
popa
popa
and
test
scas
mulps
push
mov
sbb
aam
out
push
jb
xor
jge
add
jp
ficom
repz
popf
sbb
fst
cmc
cli
aad
and
cmp
xchg
xchg
test
and
jl
daa
sub
adc
ins
cmp
mov
movs
scas
jp
into
pop
dec
mov
movs
mov
pop
inc
jle
arpl
mov
cmp
sub
dec
fcom
dec
rcr
std
inc
movs
xor
and
jle
repnz
inc
jns
push
jl
inc
dec
inc
jbe
pop
mov
push
hlt
scas
cld
adc
push
pop
ficomp
mov
sbb
cld
dec
in
(bad)
in
in
aaa
xlat
dec
lock
mov
sbb
pop
or
cs
adc
enter
dec
sub
(bad)
(bad)
xor
pop
push
imul
pop
shl
cmp
mov
inc
pop
(bad)
clc
scas
loope
ret
push
push
fwait
(bad)
mov
js
push
aam
fsubr
sbb
adc
inc
lds
sbb
je
jg
adc
hlt
pop
cld
add
add
xlat
dec
jno
sub
fstp
push
fst
and
pop
sub
scas
clc
bound
cmp
aas
clc
mov
dec
cli
cs
inc
shl
add
jmp
inc
nop
mov
jnp
cld
adc
sbb
daa
mov
lods
outs
mov
arpl
mov
sbb
(bad)
fcmovnbe
fidiv
lock
sti
pusha
jl
mov
ja
jmp
test
shl
jmp
nop
ss
and
dec
jno
sub
mov
cli
cs
inc
shl
add
call
sar
call
add
sar
add
retf
jnp
jns
shl
push
in
ja
push
push
aad
pop
lods
xlat
mov
cmc
stos
jl
clc
jg
in
jg
ret
inc
fwait
dec
mov
test
jg
xchg
loop
outs
sbb
stos
mov
dec
or
clc
xchg
lock
movs
imul
pop
mov
mov
or
and
add
add
add
dec
inc
push
imul
clc
bound
cmp
aas
loope
xor
cli
cs
inc
shl
add
jmp
xchg
mov
jbe
sbb
mov
not
fidivr
lock
jg
jle
dec
fimul
lock
jecxz
xor
cmp
xchg
into
xchg
enter
mov
sbb
ds
nop
movs
mov
stos
idiv
pop
test
sbb
mov
outs
je
lods
push
(bad)
call
or
and
mov
movs
xlat
iret
aas
lock
das
std
pop
aas
add
jp
icebp
je
ret
adc
hlt
pop
cld
add
add
(bad)
sahf
retf
add
cmp
movs
imul
inc
mov
pop
and
mov
clc
iret
lock
out
xchg
sbb
mov
lahf
ja
mov
mov
or
pop
push
mov
add
jae
daa
repnz
cli
cmps
(bad)
sbb
out
das
cld
cmovg
cs
clc
bound
cmp
aas
clc
mov
test
fnstsw
scas
sbb
fidivr
sub
scas
clc
bound
cmp
aas
clc
mov
dec
cli
cs
inc
shl
add
jmp
jmp
outs
out
pop
stc
sbb
push
stos
fcomi
ds
scas
jp
test
jl
in
jg
scas
popf
enter
lods
fldenv
mov
adc
mov
aas
clc
mov
xlat
in
ja
sub
pop
pop
cld
inc
clc
test
pop
mov
inc
jns
shl
push
movs
in
test
fld
movs
dec
xchg
mov
lods
sub
test
out
pop
lahf
sub
(bad)
js
mov
pusha
icebp
leave
test
cmp
xor
and
xor
shl
(bad)
clc
sbb
bound
cld
(bad)
push
aaa
fwait
mov
lahf
call
retf
stc
mov
stos
mov
(bad)
or
pop
ret
outs
mov
dec
daa
cmp
in
adc
popf
je
fnstenv
add
jo
stc
pop
xor
addr16
add
cld
cmps
test
loop
push
inc
mov
dec
mov
jne
jo
cld
or
adc
cld
shr
out
sub
pop
cli
mov
mov
mov
lea
inc
ret
jecxz
sub
mov
call
sbb
test
sbb
or
sti
fild
push
loop
pop
push
std
scas
jl
mov
stos
imul
cmp
xchg
in
(bad)
pop
mov
adc
mov
out
push
loop
daa
sar
add
lahf
jg
je
sbb
adc
(bad)
into
inc
sbb
stos
retf
dec
mov
stos
clc
push
sti
and
aaa
jecxz
clc
dec
cld
cmp
pop
add
es
stos
out
adc
jne
lods
js
sub
fist
repz
jge
repnz
ficomp
sbb
push
icebp
sub
aaa
jae
iret
xor
sbb
add
frstor
imul
iret
cld
adc
pop
test
imul
and
xchg
sti
sbb
push
dec
les
cli
sahf
mov
mov
mov
adc
jo
jle
leave
jg
mov
(bad)
adc
cmps
neg
sub
lds
mov
lock
aam
out
mov
sahf
std
sti
sub
(bad)
(bad)
std
mov
mov
in
out
lods
pop
fsubp
dec
mov
mov
cwde
fadd
in
fidivr
or
clc
and
or
and
mov
inc
pop
cwde
retf
in
sub
jne
movs
jl
ins
inc
add
clc
lahf
gs
outs
loop
or
hlt
js
pop
adc
retf
inc
add
clc
cdq
xor
and
and
fwait
enter
push
nop
xchg
jge
in
repnz
test
out
in
out
mov
jmp
sub
cmp
jae
mov
(bad)
sbb
cmp
xchg
call
xchg
ror
fs
jne
retf
nop
inc
pop
lods
jmp
rcl
loop
in
ja
inc
or
push
imul
in
and
outs
jbe
(bad)
push
into
cmp
retf
add
cmp
daa
fisttp
dec
loop
or
es
cli
mov
jo
jb
movs
dec
clc
daa
xchg
call
pop
test
cmp
mov
(bad)
dec
(bad)
sub
adc
in
fisttp
mov
lahf
pop
mov
and
stos
rol
popa
and
xchg
retf
mov
dec
xchg
and
lods
xchg
dec
cwde
aam
adc
mov
mov
inc
xor
mov
xlat
push
jg
xor
cmp
sub
lods
idiv
leave
retf
lods
and
sub
mov
pop
cmp
inc
mov
addr16
rcr
pop
(bad)
fnstcw
sbb
lock
sar
lods
push
mov
sub
sub
and
adc
push
dec
jbe
xlat
pop
jo
inc
or
jg
adc
mov
add
sahf
jg
das
out
sbb
adc
push
loop
in
xchg
push
xchg
cwde
std
dec
(bad)
xor
loop
jae
mov
fcom
(bad)
xor
repnz
in
(bad)
iret
cmps
jg
mov
lods
jnp
fild
sbb
lahf
les
mov
jmp
imul
movs
mov
mov
xor
fwait
xchg
dec
add
(bad)
push
jmp
cmp
addr16
push
pop
pop
imul
jns
dec
in
mov
pop
cmps
fcomp
adc
add
cmp
es
sub
pop
mov
sub
jne
and
pop
scas
xchg
dec
mov
jl
mov
pop
test
xchg
mov
(bad)
icebp
xor
movs
test
xchg
pop
ficom
jae
jecxz
scas
mov
das
xor
mov
jl
jecxz
out
cmc
fild
pop
push
imul
dec
shl
ficom
(bad)
test
pop
ds
icebp
inc
jecxz
scas
xchg
shr
in
gs
xchg
ret
and
sub
adc
test
jecxz
repnz
cmp
test
outs
or
push
nop
and
movs
jns
test
cld
adc
js
jg
dec
inc
clc
aad
test
mov
stos
das
sub
lods
into
cmps
test
cmp
lock
dec
sar
pop
pop
jmp
sbb
ret
test
(bad)
pop
mov
popf
scas
adc
dec
call
push
pop
inc
add
jns
xor
ds
icebp
mov
adc
mov
out
dec
lds
std
xchg
pop
imul
lahf
xor
js
or
(bad)
push
xchg
pop
jle
cmp
add
loopne
clc
mov
je
ja
(bad)
test
mov
aas
push
adc
adc
popf
xlat
in
sbb
fidivr
inc
xlat
hlt
int3
pop
xchg
(bad)
std
xchg
dec
stos
imul
and
add
std
mov
dec
lock
xchg
lock
jl
(bad)
push
dec
mov
xor
cli
lods
out
mov
mov
cmp
into
push
xlat
dec
mov
into
inc
sbb
mov
push
push
mov
in
mov
push
push
mov
pop
and
adc
enter
mov
inc
add
sub
or
push
pop
adc
mov
and
inc
sub
xchg
fidivr
mov
pop
dec
mov
(bad)
cs
arpl
inc
in
pop
aad
xchg
inc
fldenv
retf
sub
jl
gs
push
add
jle
xchg
xchg
mov
mov
and
lods
ja
or
das
and
in
jg
retw
test
lea
out
mov
and
loop
in
in
mov
lods
cli
test
jne
mov
push
retf
mov
fucomip
pop
mov
sbb
xchg
retf
out
mov
in
addr16
movs
inc
gs
cmp
ins
cmps
clc
into
xlat
dec
mov
ins
adc
xor
dec
(bad)
scas
lahf
fwait
inc
xchg
sub
ret
dec
call
pushf
xor
xor
mov
ins
int
pop
jmp
retf
cmp
dec
dec
mov
mov
retf
inc
add
mov
ss
out
mov
mov
(bad)
mov
call
sub
in
ja
sbb
jecxz
in
sahf
inc
popf
mov
xchg
cmc
into
imul
call
sbb
je
pop
adc
aam
imul
addr16
shl
aaa
and
pop
stc
cmp
add
out
(bad)
xchg
dec
pop
add
jle
inc
bnd
pop
inc
mov
std
and
lahf
mov
fiadd
pop
ror
mov
mov
mov
gs
imul
imul
imul
imul
imul
imul
dec
mov
mov
sub
adc
sbb
add
mov
je
push
add
out
pop
into
(bad)
in
std
jecxz
rcl
inc
or
aaa
mov
(bad)
out
inc
add
idiv
icebp
cld
call
popf
sub
sti
(bad)
repz
je
push
add
out
pop
into
(bad)
in
std
jecxz
rcl
inc
or
aaa
mov
(bad)
out
inc
add
idiv
icebp
cld
call
popf
sub
sti
(bad)
repz
(bad)
xchg
mov
gs
sub
xchg
push
call
mov
mov
gs
sub
xchg
push
call
mov
mov
gs
sub
xchg
push
call
test
outs
adc
sub
mov
pop
pop
enter
pop
mov
retf
and
movs
aaa
mov
retf
mov
fisubr
fdivr
or
daa
and
pop
mov
dec
pop
ret
and
jp
sbb
gs
in
dec
lods
push
in
mov
jp
sti
sahf
imul
adc
sub
ror
imul
test
mov
retf
mov
sahf
int
mov
dec
arpl
sub
dec
mov
adc
inc
push
js
gs
jo
loopne
aam
(bad)
rcr
ja
dec
sahf
(bad)
xchg
in
push
and
and
in
or
cmp
daa
and
rcr
sbb
sbb
cmp
xchg
popf
sti
push
cmps
test
mov
out
sub
inc
push
(bad)
cmc
push
mov
add
dec
shl
es
and
jb
mov
imul
jmp
xor
jb
push
sti
pop
pushf
(bad)
jno
push
call
jge
sti
add
add
fdivr
(bad)
fistp
mov
or
pop
test
add
mov
cmc
int
inc
clc
xchg
cmc
inc
adc
pop
sub
adc
ret
mov
sbb
xor
xchg
and
jno
add
call
inc
dec
(bad)
je
push
cmp
inc
leave
in
mov
pop
loope
in
xlat
icebp
xor
xchg
xchg
xor
sti
push
ror
adc
cmp
imul
mov
sbb
jg
or
inc
loopne
sar
add
lods
cmp
jecxz
sbb
shl
jb
ret
push
psrlq
ss
(bad)
mov
or
mov
add
cmp
loopne
sub
mov
rcr
rcl
fucom
push
or
aaa
ins
inc
pop
sub
cmp
cmps
jp
cmp
not
cmps
stos
mov
sub
outs
enter
or
icebp
mov
lock
imul
add
add
mov
add
mov
gs
not
cmp
or
mov
xor
inc
out
fcmovne
fisttp
pusha
dec
scas
inc
loop
fistp
mov
das
mov
loop
sub
mov
enter
out
adc
(bad)
mov
mov
push
mov
inc
pop
ret
mov
lahf
(bad)
inc
hlt
and
add
inc
cld
xor
(bad)
inc
cli
adc
cmps
inc
sbb
test
jecxz
add
push
cmp
inc
sbb
clc
mov
js
test
sbb
pop
fisttp
nop
leave
adc
pop
gs
jbe
lds
jmp
push
not
inc
cdq
sub
push
jp
pop
xchg
or
outs
inc
mov
pop
jg
fidivr
loope
jle
inc
ror
aas
clc
in
jns
cld
outs
pop
inc
shl
loop
cld
sbb
inc
(bad)
clc
ret
icebp
push
imul
mov
cld
xchg
inc
add
mov
fcmovbe
in
(bad)
cmc
inc
jg
or
outs
inc
mov
pop
jg
fidivr
loope
jle
inc
ror
aas
clc
in
outs
clc
fneni(8087
imul
xor
(bad)
and
mov
adc
call
popf
jl
mov
push
rol
xchg
cmp
rcl
pop
loopne
scas
adc
pop
clc
or
mov
adc
sti
mov
fs
push
xor
sub
jg
and
(bad)
sbb
jg
or
inc
loopne
sar
add
xor
mov
lock
imul
inc
loope
js
add
xchg
(bad)
jg
cs
clc
pop
fidivr
inc
mov
xor
scas
lahf
stos
loop
call
imul
xlat
stc
push
cdq
inc
or
icebp
mov
lock
imul
add
add
mov
add
mov
jg
mov
inc
(bad)
mov
add
imul
add
inc
cld
outs
pop
inc
shl
loop
cld
sbb
inc
vpmaddwd
inc
out
jg
push
(bad)
(bad)
imul
xor
sbb
js
add
pop
jg
(bad)
iret
push
jl
icebp
inc
ret
sbb
shr
xor
shl
and
and
mov
jecxz
aaa
pop
enter
inc
lock
add
pop
dec
jl
icebp
(bad)
movs
sti
push
jl
icebp
jg
out
sbb
ds
mov
mov
out
mov
retf
push
enter
mov
stc
jno
dec
xlat
mov
outs
imul
inc
retf
sbb
sbb
push
(bad)
push
or
mov
adc
ret
mov
add
mov
or
sub
adc
pop
or
mov
adc
ret
mov
add
mov
or
sub
adc
pop
or
mov
adc
ret
mov
int
push
pop
sub
ins
inc
add
lods
movs
movs
ins
into
out
lock
adc
into
mov
dec
dec
jle
repz
lods
es
aas
jae
xor
idiv
xchg
inc
sub
push
sbb
jmp
in
cli
in
iret
fwait
add
and
push
cmps
dec
loope
cmp
fucomi
push
sub
jge
jp
clc
fxch
fmulp
std
add
loopne
xchg
aas
mov
int
pop
ins
inc
test
rcl
mov
pop
ret
adc
mov
or
aad
push
pop
jns
(bad)
pusha
cdq
or
clc
or
int
push
(bad)
ret
out
cmp
jae
iret
sbb
add
xchg
cmp
sbb
imul
shr
mov
and
and
xchg
or
cmp
mov
pop
ret
mov
jno
mov
fs
or
push
mov
loope
xor
cmp
ins
mov
(bad)
(bad)
push
dec
faddp
push
loope
xchg
enter
out
imul
xchg
retfw
xchg
cld
les
scas
xlat
fucom
mov
(bad)
into
jno
push
lods
sub
loope
adc
dec
retf
jo
mov
cmp
add
fucomi
(bad)
xchg
dec
pop
aas
xlat
rcr
mov
cld
popf
outs
cmp
idiv
add
scas
jl
lock
call
das
not
push
call
push
call
lahf
lock
lahf
stc
cmp
pop
sti
push
fidivr
mov
pop
lock
mov
sti
push
fidivr
mov
dec
rcr
dec
cdq
in
in
cmc
xor
xchg
std
jg
fcomip
je
out
pop
add
neg
jmp
cli
fisttp
sti
jae
call
mov
stc
dec
dec
lock
cmps
(bad)
(bad)
pop
or
inc
shr
xchg
push
sbb
xchg
inc
pop
sbb
xchg
push
test
shl
into
shr
dec
(bad)
mov
ins
and
push
mov
add
int3
dec
rol
add
outs
mov
or
jns
and
idiv
iret
fisub
mov
repz
push
movs
cld
push
std
mov
rcr
in
fsubr
or
jmp
xchg
mov
add
and
inc
sub
dec
xor
(bad)
js
aas
daa
inc
retf
daa
sub
jg
and
test
loop
push
mov
mov
ja
pop
sbb
mov
xchg
adc
ss
retf
leave
pushf
dec
or
and
sbb
js
dec
fisttp
push
into
jmp
xchg
ins
inc
out
in
pop
and
in
imul
(bad)
ins
push
scas
push
and
(bad)
shr
cmp
fnsave
stos
and
and
enter
int
scas
jle
xchg
clc
xchg
inc
es
jg
ret
inc
shl
scas
mov
js
leave
jmp
cmps
or
xchg
(bad)
lock
mov
push
push
mov
mov
int
pop
adc
les
setnp
movs
ds
jmp
out
adc
addr16
test
pop
ficom
jb
pop
dec
sbb
test
in
mov
and
jmp
sbb
inc
rcl
jo
leave
loopne
mov
mov
mov
dec
lods
movs
es
sbb
inc
mov
test
sub
jecxz
xchg
cmps
ret
sub
pop
jmp
cs
inc
(bad)
mov
xchg
sti
inc
xor
idiv
xchg
ins
push
add
aas
xchg
sbb
pop
xlat
ds
sar
cmc
dec
stos
jmp
jge
xlat
les
outs
(bad)
leave
ret
outs
pop
mov
gs
jle
imul
movs
js
mov
cmc
sub
or
cmps
pushf
jl
std
xchg
jle
js
loope
sbb
jmp
sub
jbe
xor
dec
cs
add
js
mov
sbb
sar
lahf
adc
inc
inc
sbb
call
fidivr
xchg
sub
leave
daa
or
xchg
xor
loop
sbb
(bad)
sbb
(bad)
adc
jnp
lods
jbe
dec
rcr
jmp
add
mov
mov
shl
out
sti
pop
pop
pop
jmp
in
mov
push
mov
inc
mov
or
jl
xchg
enter
les
in
cmc
dec
stos
call
fst
push
mov
jmp
pop
fnstcw
fisttp
xchg
fdiv
push
out
fidivr
out
int3
mov
inc
or
or
sahf
mov
sub
xor
idiv
push
scas
scas
test
mov
iret
loope
mov
xor
jbe
lock
pushf
add
mov
clc
or
inc
scas
(bad)
pop
div
jmp
frstor
adc
sbb
lock
dec
cli
out
push
popf
cmp
stos
call
pop
cmp
out
test
clc
xor
mov
xchg
mov
mov
in
out
push
dec
(bad)
cmps
lods
jb
add
dec
out
stc
cs
test
inc
rol
pop
inc
push
inc
jmp
idiv
add
mov
inc
and
push
(bad)
add
mov
dec
out
iret
repz
xor
mov
std
idiv
shr
sti
in
cmc
movs
scas
inc
out
inc
mov
gs
sub
xchg
push
call
mov
mov
gs
sub
xchg
push
call
mov
mov
gs
sub
xchg
push
call
mov
mov
gs
sub
xchg
push
call
mov
mov
gs
sub
xchg
push
call
mov
iret
pop
iret
stos
fcomp
mov
scas
mov
fiadd
push
inc
fcomip
adc
hlt
scas
add
inc
ret
out
push
jg
sub
fcom
lds
mov
cmp
xor
pop
inc
xchg
into
fcomp
lock
push
pop
inc
xchg
xor
dec
add
jb
out
out
cmps
xchg
pop
inc
icebp
sbb
cmps
into
inc
fmul
ret
imul
test
push
jl
jae
sbb
jecxz
pop
dec
loop
adc
jle
sub
mov
popa
push
fisttp
pop
cmp
mov
inc
xchg
in
xchg
inc
cmps
push
add
dec
pusha
pop
xor
pushf
jecxz
test
cmp
sub
js
aam
mov
pushf
ins
xchg
sbb
and
cli
xor
add
xchg
pop
dec
xlat
scas
clc
fwait
inc
adc
adc
test
stos
or
(bad)
dec
mov
push
imul
push
lock
pop
pop
xor
aad
lea
(bad)
sbb
(bad)
imul
data16
jns
cmc
pop
in
jle
js
push
icebp
push
in
imul
inc
inc
sbb
iret
xchg
jg
push
mov
out
push
retf
idiv
push
repnz
xor
pop
jne
xchg
cmp
cmp
jp
xchg
xlat
ja
cmp
div
xchg
shl
jle
cmp
cmp
scas
cmp
ret
ss
test
sbb
rcr
pop
shl
xor
xchg
push
adc
adc
mov
xchg
mov
mov
add
jmp
adc
add
cli
inc
cmp
add
sbb
add
pop
loopne
sti
jge
add
sub
fwait
adc
repnz
mov
in
xor
sub
fldcw
loop
pop
inc
(bad)
jle
(bad)
xor
dec
push
retf
cmp
push
xor
daa
mov
gs
or
and
mov
sti
inc
cld
or
mov
shr
ins
push
dec
(bad)
int
push
cwde
outs
mov
fadd
add
inc
in
std
sti
dec
js
div
je
imul
mov
nop
dec
fild
jle
mov
ins
out
pop
dec
call
pop
adc
pop
push
mov
movs
movs
fld
add
nop
mov
rcl
add
sub
addr16
jns
pop
clc
add
mov
push
retf
and
push
test
jle
lock
pop
dec
std
mov
jae
js
ret
(bad)
dec
rcr
mov
mov
add
pop
and
setnp
add
push
sahf
movs
in
mov
pop
mov
mov
inc
test
dec
gs
jg
movs
stc
or
out
inc
push
or
lahf
push
jg
sahf
cmp
add
icebp
addr16
jns
pop
clc
add
mov
ror
call
xchg
scas
out
inc
adc
cld
adc
loop
mov
dec
lock
mov
popa
sahf
(bad)
imul
popa
pop
enter
and
pop
xchg
jae
lds
lahf
mov
(bad)
xor
outs
ret
inc
sbb
rol
cmp
cmp
adc
aaa
pusha
or
mov
inc
nop
mov
add
paddb
aas
cld
pop
pop
lock
iret
mov
repz
inc
inc
rol
add
aam
pop
mov
cmp
(bad)
out
clc
outs
mov
clc
lea
pop
mov
shr
ins
loopne
sub
cwde
mov
dec
jecxz
jne
pop
mov
lds
cmp
(bad)
sbb
pop
ins
push
stc
mov
(bad)
adc
and
cdq
pop
cmp
mov
icebp
addr16
jns
pop
clc
add
mov
push
jg
sahf
cmp
add
ja
inc
daa
imul
dec
stc
lods
sub
cmp
in
std
icebp
pop
pop
icebp
scas
test
dec
ss
loope
scas
mov
adc
mov
sub
loop
data16
bound
(bad)
inc
xchg
icebp
loope
inc
lea
ficomp
neg
sub
lods
out
arpl
stc
and
loopne
iret
retf
mov
scas
inc
xchg
sahf
jp
inc
pop
(bad)
cs
clc
js
lds
loopne
inc
loop
adc
je
test
add
and
std
mov
lock
xchg
ret
dec
xlat
mov
add
fnstcw
movs
or
pop
adc
fmul
and
add
pop
std
mov
and
loop
mov
jmp
mov
fiadd
add
xchg
xchg
and
xor
js
lds
loopne
inc
loop
inc
xchg
sahf
jp
inc
pop
(bad)
cs
out
daa
in
and
outs
out
jg
adc
cmp
loopne
cmp
fcomip
pop
inc
sar
pop
popa
push
(bad)
loope
xchg
xlat
xchg
pop
xlat
lea
mov
xchg
or
pushf
pushf
out
dec
lock
in
out
icebp
sub
inc
ret
int
ret
jp
fnstsw
in
stos
mov
adc
xchg
adc
add
mov
add
jecxz
push
jg
sahf
cmp
add
icebp
addr16
jns
pop
clc
add
mov
push
aas
clc
pop
cld
add
inc
cmp
add
dec
clc
stos
test
cmps
imul
xor
mov
nop
test
sti
sbb
jp
(bad)
fnstenv
idiv
add
mov
mov
and
inc
sub
jb
pop
dec
and
(bad)
or
fnsave
inc
add
mov
aas
cld
pop
js
lds
fld
popa
out
xchg
fistp
addr16
inc
push
lock
fcom
add
sti
(bad)
and
xor
test
adc
mov
cmp
cmp
fild
and
push
inc
adc
push
inc
adc
push
inc
adc
push
inc
adc
push
inc
adc
push
inc
adc
push
inc
adc
push
inc
adc
push
inc
adc
push
inc
adc
push
inc
adc
push
inc
adc
push
inc
adc
push
inc
adc
push
inc
adc
push
inc
adc
push
inc
adc
push
inc
adc
push
inc
adc
push
inc
adc
adc
out
call
and
or
cmp
jns
xor
mov
adc
ins
jle
ror
dec
std
outs
or
push
pushf
call
jno
jbe
clc
adc
and
sbb
stos
movs
stos
lds
mov
lea
adc
mov
test
dec
loope
hlt
imul
nop
mov
test
mov
fs
retf
pop
jmp
lgs
clc
cmp
push
test
iret
repnz
push
sub
jae
js
fnstsw
mov
fcmovnu
cwde
bound
push
or
jge
xchg
xlat
jle
fisubr
adc
test
pop
xlat
loope
adc
push
ins
mov
inc
jmp
dec
cmp
adc
cmps
movs
aaa
mov
out
push
mov
outs
(bad)
retf
jno
js
lods
push
sbb
aad
(bad)
mov
sub
(bad)
dec
jmp
mov
push
outs
mov
pop
and
sbb
int3
data16
repz
imul
ins
cmp
jne
bnd
mov
mov
inc
jge
lock
push
add
sti
pop
inc
leave
aad
daa
(bad)
fistp
mov
sbb
out
fdivr
dec
sar
sti
inc
movs
push
xlat
ss
fisub
inc
adc
test
dec
sub
push
sbb
ins
sbb
lea
add
inc
fiadd
jecxz
cmps
ins
mov
push
mov
mov
mov
fild
ins
adc
mov
mov
fidiv
rcl
sbb
ins
sbb
lea
add
inc
fiadd
jecxz
cmps
ins
mov
push
mov
mov
mov
fild
ins
adc
mov
mov
fidiv
rcl
sbb
ins
sbb
lea
add
inc
fiadd
jecxz
cmps
ins
mov
push
mov
mov
mov
fild
ins
adc
mov
mov
fidiv
rcl
sbb
ins
sbb
lea
add
inc
fiadd
jecxz
cmps
ins
mov
push
mov
mov
mov
fild
ins
adc
mov
mov
iret
loope
hlt
sub
xor
adc
lea
cmp
scas
mov
lahf
ret
int
loop
mov
pop
sub
mov
mov
dec
lahf
ret
push
sbb
cs
dec
out
pusha
loop
cwde
cmc
cmp
mov
adc
retf
and
es
test
xor
mov
sbb
sub
test
cmp
or
(bad)
stos
mov
test
sbb
(bad)
daa
dec
sti
dec
cmp
add
(bad)
icebp
adc
clc
jge
out
cmps
jnp
loope
ins
or
cmp
and
pop
add
inc
jmp
std
clc
and
lods
cs
mov
sub
push
mov
sub
cwde
mov
aad
jge
inc
js
pop
ret
aam
ucomiss
or
shl
(bad)
sbb
cmps
mov
or
adc
mov
push
mov
cmp
pop
pop
mov
std
lds
pop
scas
cmps
lds
movs
jb
bound
adc
mov
mov
mov
mov
pop
mov
cld
xor
xchg
cmps
xchg
dec
push
aas
cwde
fs
jno
rcr
pop
cmp
in
pushf
movs
shl
scas
mov
outs
outs
mov
cmp
adc
scas
cmp
xchg
mov
pusha
in
in
int
cld
dec
lock
fidiv
mov
cli
pusha
jecxz
scas
and
xchg
shl
(bad)
aad
adc
shld
lds
leave
mov
jae
shl
jge
aas
je
popa
aad
test
fistp
les
or
daa
mov
aad
inc
push
mov
ja
scas
mov
jbe
xor
mov
sbb
clc
sub
(bad)
mov
jecxz
(bad)
(bad)
es
fistp
psubw
scas
add
add
out
(bad)
xchg
dec
pop
or
sbb
stos
jl
inc
outs
mov
loop
fucomp
jg
inc
pop
out
arpl
pop
mov
or
mov
or
mov
or
mov
or
mov
or
mov
or
mov
or
mov
or
mov
or
mov
or
mov
or
mov
or
mov
or
mov
or
mov
or
mov
or
iret
xor
xchg
ja
sbb
ja
rcl
adc
neg
jbe
sbb
push
inc
stos
int3
inc
iret
(bad)
mov
cmp
fist
jl
outs
add
arpl
in
dec
out
xor
loopne
sub
sti
ret
int3
imul
jne
das
retf
nop
jge
mov
mov
js
push
mov
sub
add
lods
cli
xlat
(bad)
out
pushf
in
fdivr
lods
mov
cmps
pop
imul
mov
or
jbe
je
cmps
ret
ficomp
in
jmp
jle
mov
sub
cmp
nop
sub
xlat
push
inc
mov
ret
or
addr16
jge
ins
inc
inc
cmps
mov
xchg
xor
add
repnz
pop
(bad)
jecxz
mov
iret
imul
xor
push
ds
mov
push
cs
(bad)
mov
or
xor
xchg
fsubr
cli
frstpm(287
mov
(bad)
pop
jmp
fwait
cmp
cld
mov
pop
(bad)
mov
pop
bound
jnp
xchg
sub
sbb
jmp
lahf
icebp
cmp
arpl
inc
jg
popa
or
push
clc
mov
imul
imul
(bad)
jns
stos
in
aam
push
mov
rcl
shl
mov
lods
scas
cmc
pop
jnp
mov
mov
inc
pushf
or
or
daa
call
loope
lock
mov
sub
sti
loope
mov
add
clc
loopne
neg
das
cmc
popf
inc
out
dec
dec
and
mov
adc
nop
sbb
out
in
sbb
adc
add
pop
xlat
xchg
dec
push
adc
aad
sti
fistp
push
(bad)
push
ja
scas
jmp
fstp
stc
dec
movs
pop
mov
jnp
test
push
mov
xchg
xchg
mov
xor
ret
cmps
add
xchg
inc
arpl
mov
sub
pushf
cmp
lods
adc
mov
(bad)
push
mov
fld
retf
and
mov
pop
fcmovnbe
push
jnp
or
push
ret
jle
jg
jne
or
add
mov
adc
add
mov
cmc
cmps
das
std
fisub
sar
sub
push
out
xor
jae
push
push
rol
push
push
rol
push
push
rol
push
push
rol
push
push
rol
push
push
rol
push
push
rol
push
push
rol
push
push
rol
push
push
rol
push
push
rol
push
push
rol
push
push
rol
push
push
rol
push
push
rol
push
push
rol
push
push
rol
push
push
rol
push
push
rol
push
push
rol
push
push
rol
push
push
rol
push
push
rol
push
push
rol
push
push
rol
push
push
rol
push
push
rol
push
push
rol
push
push
rol
push
push
rol
call
dec
lods
xor
out
mov
xchg
jnp
cli
test
(bad)
add
ret
and
push
mov
mov
jnp
jbe
push
std
in
ds
shr
daa
aad
cmp
mov
sbb
push
repnz
cdq
xchg
inc
data16
outs
push
xor
out
xor
jl
jnp
scas
fwait
cmps
or
leave
mov
jns
cld
mov
test
imul
dec
sub
test
and
add
add
aad
cmps
imul
xor
pop
(bad)
xchg
inc
fnstcw
cmp
mov
in
sar
(bad)
dec
jecxz
adc
pop
sbb
stc
push
xchg
pop
sbb
cmp
and
xchg
mov
into
(bad)
pop
(bad)
sbb
loope
adc
(bad)
sbb
and
or
clc
enter
pop
xchg
lock
mov
loopne
xor
daa
mov
cmp
sti
or
mov
jno
fild
div
adc
jb
mov
into
mov
jno
mov
mov
xchg
jns
pop
add
cmp
mov
cmovb
iret
xchg
pushf
sub
lahf
in
imul
loop
fucom
pop
cmp
cmp
and
sub
ss
fidivr
test
mov
or
fst
fimul
repz
cmp
jl
mov
sahf
daa
pop
test
pop
bound
or
xchg
mov
popa
mov
lea
sbb
outs
test
icebp
sub
sbb
daa
shr
ja
sub
(bad)
fidivr
push
into
sti
jp
fidiv
repz
je
aas
test
sub
hlt
call
aas
cdq
adc
out
jmp
jle
std
cmp
jbe
ror
pop
mov
cld
dec
sub
inc
(bad)
sbb
int3
std
push
add
cmp
ror
ja
pop
sub
jb
push
adc
lods
lods
adc
retf
sti
lods
cmp
mov
pop
popf
outs
cs
inc
mov
dec
cmp
mov
lahf
jbe
icebp
ins
(bad)
xchg
daa
out
mov
push
dec
mov
test
scas
xchg
idiv
or
sar
sub
fistp
mov
call
xchg
rcr
inc
movs
push
xlat
shl
inc
fucomp
jg
inc
sar
xor
push
out
sub
in
inc
mov
gs
sub
xchg
push
call
mov
mov
gs
sub
xchg
push
call
mov
mov
gs
sub
xchg
push
call
mov
mov
gs
sub
xchg
push
call
mov
mov
gs
sub
xchg
push
call
mov
mov
gs
sub
xchg
push
call
mov
mov
gs
sub
xchg
push
call
mov
mov
gs
aad
and
jle
(bad)
xchg
jge
pop
scas
pop
(bad)
pop
(bad)
jnp
imul
nop
loopne
aas
mov
sbb
in
rcl
cmc
push
dec
or
mov
cmp
ss
dec
out
cdq
push
ss
sbb
mov
movs
jl
jmp
ror
repz
push
(bad)
test
xor
pop
push
lods
test
(bad)
sub
jns
lock
stos
xor
mul
test
jo
not
jnp
cmp
mov
xchg
js
outs
sub
xchg
bound
sub
loopne
pop
cmp
fisub
lahf
ret
pop
adc
jmp
and
test
mov
shl
mov
or
and
cmp
mov
adc
mov
xchg
aas
sub
cmp
sub
mov
inc
xchg
imul
cli
(bad)
lods
les
pop
mov
pushf
add
repnz
xchg
pop
mov
call
xchg
sbb
movs
xchg
add
gs
loope
pop
inc
lock
neg
xor
adc
jmp
imul
ror
lods
push
icebp
xor
jp
xchg
retf
fisubr
(bad)
fucomp
pop
cwde
addr16
repz
sbb
cmp
cwde
xchg
inc
cmps
xchg
in
mov
sbb
pop
rcl
in
into
push
scas
movs
jb
fiadd
push
cdq
loop
jg
clc
xchg
jnp
push
imul
movs
mov
shr
test
mov
into
lahf
and
mov
cdq
pop
mov
je
ds
aas
pop
lock
ins
out
sub
imul
sub
mov
int
push
aam
and
jne
or
jo
enter
stos
test
mov
adc
cs
pop
dec
xchg
mov
mov
in
xor
(bad)
aaa
sub
fisttp
imul
mov
push
(bad)
xor
xchg
push
fsub
cs
cmp
rcl
mov
fs
mov
imul
cmc
imul
push
les
int
mov
pusha
add
nop
inc
jp
lods
aaa
mov
push
pop
in
(bad)
jb
and
xchg
mov
xor
jmp
cmp
sbb
cmp
jae
out
popf
cmp
(bad)
mov
cmp
in
mov
enter
cmp
std
push
repnz
push
push
in
call
mov
cld
popf
das
cmp
cmps
scas
or
in
jl
inc
outs
mov
pop
das
std
fisub
pop
pop
clc
shl
pop
cdq
loope
push
(bad)
ins
jb
fild
jbe
shl
mov
mov
mov
mov
imul
outs
fidiv
shl
fnsave
push
add
inc
fisubr
jbe
mov
mov
mov
push
in
mov
push
fidiv
shl
mov
mov
mov
mov
imul
outs
fidiv
shl
fnsave
push
add
inc
fisubr
jbe
mov
mov
mov
push
in
mov
push
fidiv
shl
mov
mov
mov
mov
imul
outs
fidiv
shl
fnsave
push
add
inc
fisubr
jbe
mov
mov
mov
push
in
mov
push
fidiv
shl
mov
mov
mov
mov
imul
outs
fidiv
shl
fnsave
push
add
push
int3
in
test
(bad)
mov
mov
(bad)
fistp
sub
retf
stc
in
cmp
or
jnp
retf
mov
push
pop
and
repnz
aas
and
mov
outs
iret
scas
mov
xor
out
pop
or
ja
imul
dec
xor
pop
and
xchg
jge
pop
mov
loope
and
cs
push
fdecstp
stos
mov
imul
jno
or
inc
pop
pop
(bad)
mov
mov
cmps
pop
call
jnp
jnp
ins
xchg
imul
xchg
rol
mov
fiadd
jmp
pop
xlat
sar
pop
pop
add
mov
ficom
or
add
cmp
add
mov
or
adc
sbb
sub
repz
out
out
mov
imul
and
jbe
inc
test
or
aad
jmp
rcr
jne
xchg
dec
mov
jnp
cs
inc
into
test
mov
loopne
add
dec
mov
mov
lds
in
retf
imul
xchg
cs
daa
lock
loop
xor
or
push
sahf
adc
push
or
ins
in
cmps
and
adc
dec
sar
pop
or
aas
or
sub
mov
cmp
in
ret
mov
cmp
xor
sub
sub
fld
cli
push
int3
push
ds
xchg
mov
sbb
sub
in
adc
jmp
ds
out
cli
aas
les
push
(bad)
retf
pop
mov
cmp
add
lock
push
popf
push
in
adc
mov
xchg
es
mov
dec
xor
sti
push
pop
pop
leave
loope
push
cmp
xchg
pop
movs
fldcw
mov
jp
jle
repz
jle
aad
xor
mov
dec
addr16
sahf
arpl
lods
xchg
in
outs
sub
rcr
and
sar
inc
jne
clc
pop
xchg
xchg
mov
lock
jecxz
out
shl
adc
sub
pushf
test
loopne
js
ss
cmp
xor
mov
retf
sub
std
push
popa
(bad)
imul
cmp
jnp
mov
or
inc
xchg
sub
mov
dec
inc
fldcw
push
adc
jmp
icebp
scas
jle
xchg
push
add
(bad)
xchg
dec
pop
and
inc
(bad)
int
enter
iret
outs
in
jge
test
cmc
iret
in
xor
jecxz
mov
int3
adc
inc
mov
xor
loopne
dec
outs
retf
pop
or
cmp
sub
xchg
xlat
push
sti
iret
or
cmp
xchg
push
call
jge
pop
push
push
dec
mov
hlt
push
pusha
sbb
mov
sub
adc
sub
push
add
mov
pop
push
push
dec
mov
hlt
push
pusha
sbb
mov
sub
adc
sub
push
add
mov
pop
push
push
dec
mov
hlt
push
pusha
sbb
mov
sub
adc
sub
push
add
mov
pop
push
push
dec
mov
hlt
push
pusha
sbb
sbb
inc
sti
stos
or
aam
xlat
dec
sti
cmp
retf
aas
sbb
pop
mov
pusha
out
sbb
movs
jmp
push
pop
dec
sbb
test
rcl
dec
add
xchg
xchg
ficom
std
push
imul
jle
or
jo
pop
or
cmp
cmp
or
xchg
aam
pop
sbb
adc
shl
fisttp
cmp
stos
clc
pop
pop
mov
ins
push
in
jns
cmp
hlt
jecxz
jo
add
iret
mov
pop
mov
cs
movs
mov
inc
jbe
xchg
enter
dec
xchg
push
fs
cli
pop
inc
icebp
dec
mov
enter
pop
(bad)
push
pop
xchg
xor
inc
clc
lea
sar
je
jbe
cmps
cmps
ins
and
and
scas
xchg
scas
cmc
mov
repnz
jns
ins
out
fstp
pop
fisttp
jnp
push
dec
arpl
lahf
pop
ins
outs
movs
mov
cmp
inc
bsf
jae
lods
mov
outs
(bad)
sub
imul
mov
and
(bad)
sbb
sbb
out
dec
xor
pusha
cli
jp
mov
(bad)
xchg
mov
ins
test
push
stos
scas
push
ja
jge
retf
add
(bad)
add
sbb
stos
jmp
sbb
retf
arpl
cmp
repnz
xchg
and
dec
and
fstp
ja
xchg
mov
pop
pop
outs
xor
ja
sbb
gs
stc
mov
cmp
stos
xor
in
jae
inc
mov
jecxz
cmp
jno
call
pop
test
cmp
adc
cld
mov
add
je
sbb
retf
dec
(bad)
outs
ds
pop
inc
and
fs
push
and
add
(bad)
mov
jae
not
mov
mov
or
sbb
dec
js
mov
or
hlt
iret
cld
adc
ret
icebp
cld
inc
in
inc
cli
inc
jno
inc
movs
mov
lea
pushf
outs
and
adc
ret
mov
push
add
adc
inc
sub
mov
inc
adc
pusha
or
mov
adc
add
push
inc
push
add
adc
inc
sub
mov
inc
adc
pusha
or
mov
adc
add
push
inc
push
add
adc
inc
sub
mov
inc
adc
pusha
or
mov
adc
add
push
inc
push
add
adc
inc
add
icebp
pop
in
mov
int
outs
stc
fs
hlt
adc
pop
mov
ds
clc
xlat
iret
out
jno
xchg
jmp
dec
hlt
inc
jno
xchg
inc
out
cmp
dec
push
dec
rol
xchg
jmp
adc
sbb
(bad)
cmps
push
sbb
bound
iret
jecxz
push
pop
cmp
stos
sti
enter
inc
pushf
jp
push
mov
sbb
std
imul
sub
pop
movd
push
xor
push
dec
dec
xor
push
push
fimul
cmps
idiv
stc
imul
or
(bad)
fistp
sbb
cmp
movs
jo
jae
adc
jb
hlt
test
dec
add
xlat
adc
dec
xchg
adc
ds
dec
lea
mov
add
dec
mov
jmp
test
rol
jmp
cmp
sub
push
sub
xor
popf
sbb
mov
or
jg
jecxz
std
add
mov
ja
jmp
cmp
data16
cmp
in
inc
(bad)
cli
add
lahf
ret
sahf
aam
imul
retf
mov
lea
enter
mov
movs
mov
push
jnp
mov
pop
and
in
inc
iret
push
mov
in
cmp
rol
mov
sbb
xchg
ins
mul
add
sahf
aam
imul
mov
lea
enter
mov
movs
mov
push
jnp
mov
pop
and
in
inc
iret
push
mov
in
cmp
rol
mov
sbb
xchg
ins
mul
add
sahf
aam
imul
mov
lea
enter
mov
movs
mov
push
jnp
mov
pop
cmp
xor
jg
clc
shl
push
mov
test
mov
mov
addr16
dec
sub
fs
mov
std
movs
das
mov
mov
xlat
ins
loop
jmp
adc
and
in
in
mov
push
pop
adc
xchg
xchg
inc
int3
aad
jl
clc
lahf
popa
loopne
xlat
xor
adc
jb
jle
icebp
add
shr
repnz
(bad)
inc
xchg
pop
add
xchg
cmp
movs
jmp
mov
cld
cmp
jmp
fst
sti
inc
jmp
add
or
dec
test
sub
cmp
hlt
and
lods
sbb
movs
movs
or
mov
push
jnp
in
test
adc
inc
and
jmp
das
clc
inc
push
dec
jge
ffreep
or
int
cmp
cmp
or
das
cmp
icebp
push
in
lahf
jns
js
not
xor
sub
mov
pop
pop
fstp
push
fadd
rcl
js
les
icebp
xchg
mov
add
pop
xchg
or
outs
pop
pop
test
or
int
test
pusha
sbb
rcl
sbb
mov
xor
mov
lock
push
push
(bad)
aam
xlat
in
jb
add
ins
jmp
rol
xchg
leave
jecxz
mov
sti
cmp
push
neg
ja
stc
cld
xchg
(bad)
int
or
retf
loop
sbb
lods
std
mov
pop
or
test
dec
add
into
dec
jns
sbb
mov
add
clc
lahf
les
mov
and
push
xchg
xlat
xor
dec
sub
sub
and
add
(bad)
jecxz
sbb
loope
in
ins
jae
lahf
add
sbb
mov
loop
cmc
(bad)
mov
jmp
jae
jns
sti
jl
stos
cld
dec
std
movs
je
push
jmp
dec
mov
ret
push
mov
pop
sub
iret
push
mov
jno
imul
iret
leave
daa
movs
(bad)
mov
inc
leave
inc
test
out
pop
(bad)
(bad)
mov
dec
ds
icebp
add
shr
jns
fistp
pop
pop
fisttp
mov
outs
or
retf
pop
mov
jb
ror
pusha
push
iret
inc
sbb
sti
mov
mov
stos
inc
outs
push
and
leave
sbb
ds
or
in
pop
aad
std
mov
cmp
frstor
xchg
xlat
in
jae
mov
lods
imul
sub
shr
xor
repz
clc
sti
movs
cld
inc
lock
fldcw
fcmovu
mov
and
and
push
sub
cmp
cmp
sbb
cmps
cmp
in
jnp
std
cmp
stos
bnd
dec
xor
out
mov
pop
cmp
test
xchg
sar
mov
out
pop
stos
dec
sar
push
push
in
aaa
mov
test
adc
imul
lods
je
jnp
arpl
and
xchg
les
les
xchg
mov
test
jge
xchg
xchg
addr16
test
aas
sub
xor
cmp
sbb
adc
cmp
xchg
arpl
push
dec
add
sbb
cli
xchg
icebp
xor
mov
gs
int
dec
push
xchg
xor
sbb
adc
dec
sahf
and
retf
pop
cs
fild
fcmovnu
ins
mov
sub
push
dec
dec
aas
repnz
mov
loop
ds
xlat
xor
push
fld
or
cmp
jg
icebp
mov
mov
jecxz
arpl
jo
add
sti
inc
jmp
sub
jl
mov
and
mov
push
mov
daa
xchg
nop
mov
ror
rcr
xchg
mov
mov
icebp
or
push
sub
or
mov
jle
cdq
repnz
jg
xor
retf
sar
imul
loop
fcmove
popf
ins
xor
mov
or
mov
inc
aaa
push
aas
lea
ret
aad
sub
ds
out
in
push
mov
mov
jmp
sahf
sbb
cmp
test
dec
adc
adc
pmulhw
cmps
cmp
xchg
sub
cmp
mov
xor
imul
jne
jmp
ins
lods
test
es
xchg
push
inc
gs
add
stc
(bad)
retf
mov
js
ret
fisttp
call
loopne
jb
jo
push
mov
jbe
ins
inc
aaa
sahf
jmp
cmp
jbe
xchg
pushf
or
sar
loope
in
ds
ror
sub
mov
xchg
mov
cmp
jp
in
or
icebp
jle
push
xor
mov
dec
pop
test
out
(bad)
jg
div
je
fcom
pop
aad
sub
mov
shl
push
in
mov
push
xor
int
dec
lds
loope
cmp
mov
in
test
sbb
jmp
pop
mov
jbe
aaa
push
push
ret
xor
sbb
daa
or
jecxz
in
pop
ja
repz
ret
jmp
mov
cli
data16
adc
out
push
sbb
add
faddp
jecxz
leave
js
neg
movs
lock
jmp
push
mov
xlat
and
jbe
xchg
int
adc
and
daa
cmp
lods
push
pop
jl
cmps
push
stos
mov
lahf
iret
mov
sbb
rcl
jns
inc
lds
cld
daa
aam
psubb
mov
mov
inc
sub
inc
in
bound
jp
inc
dec
sar
loopne
add
cmp
xor
cmp
jno
jae
pop
add
lods
and
jb
push
sbb
and
sbb
les
mov
xchg
mov
fst
pop
ret
ins
imul
ja
shl
inc
jb
shr
add
or
pop
les
xor
sbb
mov
mov
in
out
out
jne
(bad)
shl
sbb
cmp
push
push
jb
and
cmp
dec
mov
xchg
jge
(bad)
sahf
lahf
xchg
mov
fsub
cmc
pop
fsub
mov
retf
sub
clc
dec
push
aas
or
cmps
pop
push
sbb
out
xchg
xor
stos
mov
sbb
out
mov
(bad)
xor
mov
frstor
push
mov
cs
dec
cmps
inc
stos
iret
loop
shl
jb
jae
xchg
fcmovnb
nop
sub
in
jbe
fmul
sar
or
(bad)
iret
mov
cmp
or
pop
jg
fistp
sahf
and
retf
fnstenv
cmp
retf
repnz
mov
add
fidivr
pop
mov
adc
sub
js
dec
mov
shl
aam
xor
shr
mov
jl
out
sbb
ror
jae
lds
aad
sbb
mov
cli
inc
shl
cmps
sbb
je
ds
dec
int
shr
add
fisttp
movs
retf
jp
aaa
xor
ins
(bad)
xor
add
sbb
push
xchg
icebp
(bad)
in
push
fisttp
jle
imul
icebp
(bad)
mov
out
mov
mov
pop
inc
sbb
sbb
sub
push
mov
cld
dec
std
mov
and
mov
mov
in
arpl
inc
in
shl
and
into
add
in
adc
loopne
xchg
pushf
xchg
lods
(bad)
rcr
std
movs
xor
(bad)
fiadd
cli
xor
jge
push
xchg
pop
test
js
sub
into
int3
pop
jb
push
int3
jo
into
add
fisttp
dec
add
lahf
mov
icebp
call
mov
outs
adc
retf
movs
sbb
pop
ins
jmp
aaa
ret
outs
adc
jno
mov
clc
aaa
ret
xchg
das
jns
jns
ins
ficom
gs
ins
out
jecxz
jle
dec
test
pop
mov
cmp
iret
imul
pop
enter
add
push
call
mov
xchg
ds
xchg
dec
sbb
pop
dec
fwait
sbb
dec
(bad)
dec
and
je
imul
js
retf
popa
jecxz
pop
iret
xchg
add
shr
test
jns
xchg
ficom
xor
and
(bad)
xchg
mov
ss
jne
inc
push
pop
push
clc
add
jnp
fwait
lock
jge
dec
mov
xchg
retf
sub
add
mov
mov
jmp
psubb
ficom
sar
mov
dec
inc
push
shr
push
fist
jnp
and
cmp
fwait
cmp
out
sub
enter
ficomp
sub
xchg
mov
test
inc
js
(bad)
mov
jb
or
loop
js
movs
adc
xchg
inc
bound
dec
xchg
mov
enter
xchg
out
dec
mov
add
xchg
scas
and
dec
aas
loopne
ret
int
ret
pop
fstp
fucom
pop
fsub
jbe
xchg
lods
popa
repz
sub
cld
inc
sti
add
push
sbb
jecxz
popf
or
pop
mov
hlt
imul
out
data16
enter
js
retf
icebp
cmps
idiv
(bad)
mov
push
js
pop
adc
sbb
pop
ret
div
stos
adc
out
xchg
push
xchg
pop
(bad)
fbstp
jle
jge
inc
aam
outs
sbb
inc
std
mov
arpl
inc
jbe
aaa
xchg
jmp
in
dec
ins
jp
cmps
sti
sbb
push
loope
xchg
dec
adc
ds
xor
out
push
mov
sbb
pop
pop
inc
push
lock
(bad)
in
inc
sbb
dec
std
sub
jns
fwait
or
xchg
jno
js
loop
fld
cdq
mov
scas
fadd
xchg
ds
dec
push
dec
sbb
jl
sti
outs
cld
das
icebp
int
cmps
mov
push
aaa
mov
fiadd
ja
dec
outs
push
cmp
out
fldenv
push
ss
scas
cmp
neg
pop
sahf
xor
imul
mov
call
jae
cld
(bad)
cmp
fisubr
into
push
mov
addr16
sub
or
outs
mov
or
jmp
test
jle
and
xchg
jl
enter
cmp
imul
das
test
push
jl
shr
lea
(bad)
pop
adc
shr
and
xor
mov
sbb
pop
pop
add
lea
out
xchg
ss
out
jl
loope
outs
iret
shl
mov
mov
jne
movs
push
dec
pop
xor
xchg
add
and
mov
ficomp
pop
push
push
adc
lods
mov
shr
push
ins
xor
jecxz
mov
(bad)
loopne
inc
aad
cmp
push
mov
call
aam
jnp
jg
inc
jbe
push
mov
xor
push
jmp
inc
into
push
pop
(bad)
sbb
mov
imul
mov
(bad)
out
sar
aas
(bad)
mov
xor
adc
add
sub
pop
fst
jae
xor
test
cmp
jmp
mov
ficomp
in
(bad)
sub
push
aad
int
mov
ret
sahf
fwait
add
xor
ds
xchg
jg
outs
mov
inc
movd
cld
je
call
jns
mov
retf
cmp
shl
sub
mov
or
test
or
inc
loop
les
jne
shl
scas
or
dec
mov
ins
(bad)
scas
sub
bound
call
repz
pushf
jp
test
lar
jle
clc
popf
jno
movs
mov
shl
repnz
in
cmp
xor
mov
sbb
push
push
lock
loop
lahf
push
mov
cmps
cmps
mov
sbb
movs
cmp
pop
mov
jnp
dec
push
adc
add
loope
(bad)
add
pop
add
js
cli
cmp
pop
retf
js
pop
fsubrp
jmp
adc
loope
pop
daa
pushf
add
fidiv
lds
aam
fwait
mov
cmp
loopne
out
cmps
shr
inc
shl
push
and
mov
cwde
xchg
sbb
mov
push
pop
std
and
jecxz
mov
sbb
sub
dec
dec
inc
sahf
ror
popa
jne
dec
mov
xor
cmp
stos
popf
mov
out
clc
das
test
outs
lock
lea
rcr
aad
jl
mov
call
stos
inc
ja
ds
int
fisttp
(bad)
cwde
arpl
int3
je
dec
sti
jbe
sub
sbb
jg
jmp
cmc
jnp
push
cli
sub
mov
xchg
out
stc
test
pushf
sub
pusha
adc
out
sar
pop
cld
pop
mov
test
test
dec
fwait
dec
lods
inc
xchg
or
pop
xor
or
add
lahf
mov
ret
mov
push
in
pop
sar
leave
jno
movs
(bad)
in
xor
or
push
pop
add
push
xor
cmps
mov
ja
push
js
pop
clc
gs
or
es
or
gs
icebp
mov
fs
cmp
(bad)
xor
and
in
shl
sub
jecxz
cld
adc
dec
icebp
xchg
lahf
imul
add
inc
sbb
shl
das
push
jbe
pop
mov
and
and
add
ins
je
add
add
add
add
add
add
adc
add
add
sub
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
inc
add
add
add
inc
inc
add
inc
inc
(bad)
inc
add
(bad)
inc
xchg
js
ja
jg
ja
ja
ja
xchg
add
ja
push
push
pop
jnp
mov
jne
push
push
jo
add
push
add
ja
push
push
pop
jnp
mov
ja
ja
xchg
xchg
ja
jo
ja
js
pushw
ja
adc
ja
loopne
addr16
adc
add
pop
jno
adc
push
add
adc
ja
loopne
addr16
adc
pusha
data16
add
ja
ja
jo
ja
js
add
add
add
add
add
ins
xor
add
add
mov
add
bound
add
inc
add
add
add
add
add
dec
imul
add
ja
push
jo
imul
outs
imul
ins
add
(bad)
inc
add
(bad)
or
add
arpl
or
pop
add
push
add
add
add
add
add
add
add
add
and
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
inc
add
add
add
inc
inc
add
inc
inc
(bad)
inc
add
(bad)
inc
add
add
(bad)
push
(bad)
(bad)
push
add
add
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
push
add
(bad)
(bad)
(bad)
(bad)
push
add
(bad)
(bad)
(bad)
(bad)
push
add
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
add
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
add
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
add
add
add
lock
(bad)
(bad)
inc
add
add
add
add
add
(bad)
(bad)
push
inc
add
add
add
(bad)
add
lock
lock
add
lock
lock
add
lock
lock
add
lock
lock
add
lock
(bad)
add
(bad)
add
(bad)
add
(bad)
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
clc
add
(bad)
clc
add
(bad)
clc
add
push
add
jmp
add
inc
add
inc
add
inc
add
add
jg
add
jg
add
jg
adc
jg
xor
jg
jo
jg
lock
push
add
push
pop
(bad)
push
aas
(bad)
push
(bad)
(bad)
push
(bad)
(bad)
push
(bad)
(bad)
push
(bad)
(bad)
(bad)
stc
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
nop
add
jl
add
popa
outs
jae
push
gs
inc
push
add
add
push
add
gs
cmp
add
pop
sbb
add
or
pop
add
add
add
add
add
popa
addr16
add
add
add
ins
je
add
add
add
add
add
add
adc
add
add
sub
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
rol
add
add
inc
add
(bad)
inc
inc
add
inc
inc
(bad)
inc
add
(bad)
inc
sub
sub
sub
sub
add
sub
(bad)
(bad)
(bad)
(bad)
jmp
cmp
(bad)
clc
sub
sub
add
clc
sub
das
sub
sub
add
jmp
das
sub
das
sub
repnz
sub
sub
sub
repnz
sub
clc
sub
sub
or
(bad)
(bad)
(bad)
(bad)
(bad)
inc
sub
sub
add
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
clc
push
lock
add
add
add
add
add
add
popa
gs
add
add
ins
je
add
add
add
add
add
add
adc
add
add
sub
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
rol
add
add
inc
add
(bad)
inc
inc
add
inc
inc
(bad)
inc
add
(bad)
inc
sub
sub
sub
sub
add
sub
(bad)
(bad)
(bad)
(bad)
jmp
cmp
(bad)
clc
sub
sub
add
clc
sub
das
sub
sub
add
jmp
das
sub
das
sub
repnz
sub
sub
sub
repnz
sub
clc
sub
sub
or
(bad)
(bad)
(bad)
(bad)
(bad)
inc
sub
sub
add
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
nop
adc
or
inc
add
add
popa
addr16
add
add
add
add
add
add
add
add
adc
add
add
sub
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
rol
add
add
inc
add
(bad)
inc
inc
add
inc
inc
(bad)
inc
add
(bad)
inc
sub
sub
sub
sub
add
sub
(bad)
(bad)
(bad)
(bad)
jmp
cmp
(bad)
clc
sub
sub
add
clc
sub
das
sub
sub
add
jmp
das
sub
das
sub
repnz
sub
sub
sub
repnz
sub
clc
sub
sub
or
(bad)
(bad)
(bad)
(bad)
(bad)
inc
sub
sub
add
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
sub
add
add
add
add
add
push
push
add
popa
addr16
sbb
inc
add
add
add
add
add
add
add
add
adc
add
add
sub
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
rol
add
add
inc
add
(bad)
inc
inc
add
inc
inc
(bad)
inc
add
(bad)
inc
sub
sub
sub
sub
add
sub
(bad)
(bad)
(bad)
(bad)
jmp
cmp
(bad)
clc
sub
sub
add
clc
sub
das
sub
sub
add
jmp
das
sub
das
sub
repnz
sub
sub
sub
repnz
sub
clc
sub
sub
or
(bad)
(bad)
(bad)
(bad)
(bad)
inc
sub
sub
add
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
rcl
add
add
add
add
or
dec
ins
popa
xor
xor
sbb
xchg
add
jle
add
add
add
add
adc
add
add
or
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
and
imul
sbb
sub
jae
sub
jnp
sub
mov
sub
mov
pushf
pushf
pushf
add
cmp
add
lods
add
inc
mov
push
push
mov
jae
mov
mov
add
arpl
add
mov
add
mov
pop
mov
arpl
add
mov
imul
jae
mov
test
add
mov
movs
mov
mov
pop
pop
into
add
into
add
movs
into
add
lods
into
add
(bad)
into
add
into
into
add
and
add
(bad)
add
(bad)
add
(bad)
add
(bad)
add
(bad)
add
(bad)
add
(bad)
add
mov
(bad)
add
and
add
sub
add
fiadd
inc
cmp
add
fiadd
pop
inc
fiadd
arpl
add
fiadd
(bad)
fiadd
arpl
add
out
jnp
out
xchg
jae
add
out
lods
lods
out
mov
out
add
out
add
(bad)
out
add
out
add
out
out
add
test
jnp
test
xchg
xchg
test
into
(bad)
test
out
out
test
inc
inc
arpl
add
inc
mov
add
inc
movs
pushf
inc
lods
pushf
inc
mov
inc
mov
movs
inc
mov
inc
(bad)
into
inc
(bad)
(bad)
inc
out
inc
out
out
inc
div
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
add
add
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
jae
add
add
add
add
jae
jae
pop
pop
pop
inc
xor
sbb
sub
sub
push
push
adc
adc
jae
cmp
cmp
sub
and
and
push
and
jae
cmp
inc
xor
cmp
cmp
adc
ds
xor
and
push
dec
inc
dec
sbb
jae
sub
sub
dec
xor
ins
pop
push
pop
pop
sub
and
and
dec
dec
dec
dec
dec
dec
dec
xor
or
adc
cmp
inc
pop
push
push
pop
das
inc
adc
and
dec
push
push
dec
imul
or
push
cmp
push
push
ins
ins
pop
push
jae
inc
or
or
cmp
dec
dec
pop
push
dec
sbb
inc
wbinvd
or
es
sub
sub
jae
jae
sbb
sbb
sbb
cs
sbb
jae
jae
jae
jae
jae
dec
popa
adc
jae
jae
jae
jae
jae
jae
push
inc
jae
jae
jae
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
aas
(bad)
(bad)
(bad)
aas
(bad)
inc
sub
xor
add
add
add
add
add
add
push
add
xor
add
add
(bad)
inc
add
sbb
add
or
and
add
and
inc
sub
add
or
gs
add
add
(bad)
inc
add
call
pop
adc
add
call
add
add
add
add
add
gs
add
(bad)
inc
add
adc
add
push
adc
add
add
add
add
add
add
gs
(bad)
inc
add
sbb
sbb
add
sbb
inc
sub
add
or
add
gs
pop
add
(bad)
inc
add
mov
add
add
push
mov
add
pop
add
add
add
or
popa
xor
sbb
ds
add
add
add
add
add
add
add
and
add
add
add
add
add
add
add
adc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
inc
add
add
add
inc
inc
add
inc
inc
(bad)
inc
add
(bad)
inc
add
add
jo
add
jo
add
jo
add
inc
add
inc
add
inc
add
dec
add
add
add
jo
(bad)
inc
(bad)
inc
(bad)
ud0
clc
or
add
(bad)
dec
clc
or
add
(bad)
dec
lock
or
ud0
jo
add
add
add
add
(bad)
inc
jo
add
add
add
ud0
push
jo
add
add
add
(bad)
(bad)
(bad)
push
or
add
add
ud0
(bad)
(bad)
(bad)
clc
add
add
add
add
ud0
(bad)
(bad)
(bad)
clc
add
add
add
add
add
(bad)
(bad)
(bad)
(bad)
clc
add
add
add
add
add
(bad)
(bad)
(bad)
dec
add
add
add
ud0
(bad)
dec
add
add
add
ud0
(bad)
dec
add
add
add
add
(bad)
(bad)
clc
add
push
out
out
out
mov
add
add
add
push
out
out
out
mov
add
out
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
aas
(bad)
inc
ud0
add
(bad)
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
jmp
add
jmp
add
inc
add
inc
add
inc
add
inc
add
adc
add
and
add
add
add
add
add
rol
add
add
add
add
add
add
add
add
inc
add
add
add
inc
inc
add
inc
inc
(bad)
inc
add
(bad)
inc
add
add
add
add
add
add
add
add
add
(bad)
add
add
add
or
lock
add
add
lock
add
add
lock
add
add
lock
add
add
or
add
add
ud0
add
add
add
(bad)
inc
add
clc
add
add
add
mov
add
std
inc
add
inc
add
inc
add
jg
add
aas
add
lock
add
lock
lock
lock
lock
lock
clc
sldt
clc
pop
add
clc
pop
add
lock
lock
add
loopne
loopne
loopne
or
inc
pop
add
add
push
add
popa
xor
sbb
ds
add
add
add
add
add
add
add
and
add
add
add
add
add
add
add
adc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
inc
add
add
add
inc
inc
add
inc
inc
(bad)
inc
add
(bad)
inc
add
add
add
add
add
or
mov
add
add
add
or
(bad)
lock
add
add
add
or
lock
lock
add
add
or
or
push
loopne
(bad)
(bad)
dec
add
add
add
loopne
(bad)
(bad)
push
(bad)
(bad)
push
add
add
add
loopne
(bad)
(bad)
push
push
add
add
add
add
loopne
(bad)
(bad)
push
add
(bad)
inc
add
add
push
loopne
(bad)
(bad)
dec
(bad)
(bad)
(bad)
inc
add
add
push
loopne
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
or
loopne
(bad)
(bad)
(bad)
(bad)
(bad)
inc
(bad)
(bad)
(bad)
push
add
add
ud0
(bad)
push
(bad)
(bad)
push
add
add
add
add
(bad)
(bad)
(bad)
(bad)
inc
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
sar
push
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
jg
add
add
add
add
add
add
add
add
add
jmp
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
add
add
add
add
add
add
add
add
add
rol
add
add
add
add
add
add
add
add
inc
add
add
add
inc
inc
add
inc
inc
(bad)
inc
add
(bad)
inc
add
mov
inc
add
add
add
add
add
add
(bad)
clc
add
add
add
push
push
push
add
ud0
or
add
inc
add
inc
add
inc
add
inc
add
aas
add
add
add
add
add
add
add
add
add
add
add
add
add
cmp
add
(bad)
inc
add
inc
add
inc
add
inc
add
js
dec
adc
add
add
add
add
push
add
popa
xor
sbb
xchg
add
jle
add
add
add
add
adc
add
add
or
push
add
add
add
add
add
add
add
add
add
add
(bad)
inc
add
add
fstp
fld
stc
clc
stc
add
out
lock
add
add
jns
out
in
(bad)
sti
cld
add
clc
stc
add
jmp
add
add
push
push
add
outs
add
aad
add
jne
imul
add
(bad)
add
fcomp
add
sbb
add
dec
dec
add
and
pop
add
xor
add
adc
dec
inc
aas
add
dec
add
sub
add
cmp
mov
or
add
push
xor
xor
daa
add
call
sldt
pop
aaa
add
ja
add
inc
sldt
push
sbb
add
pop
and
retf
add
and
shl
add
sbb
shr
add
(bad)
jno
add
mov
add
jne
add
js
add
jl
add
ja
add
sub
in
push
add
mov
add
mov
push
add
xchg
sub
icebp
(bad)
xchg
add
call
in
(bad)
add
out
add
ror
add
(bad)
add
fcompp
add
rcl
add
(bad)
inc
idiv
test
add
push
(bad)
(bad)
add
test
add
mov
test
add
mov
and
sahf
add
leave
mov
sub
xchg
add
cmps
add
lds
add
je
add
add
xchg
pusha
add
mov
add
add
outs
add
mov
add
mov
pop
add
xchg
ins
add
cmps
jle
xchg
aam
add
jno
add
arpl
add
add
pushf
ins
add
xchg
push
sbb
jo
dec
mov
jp
fldlg2
out
add
add
pop
inc
add
add
ins
pop
add
in
add
pop
add
repnz
add
ins
add
jmp
add
dec
dec
add
pop
push
add
push
add
add
(bad)
inc
data16
pop
add
jecxz
add
shr
add
loop
add
add
mov
add
scas
fadd
add
in
push
scas
xlat
add
mov
add
mov
add
scas
aam
or
xlat
add
mov
loopne
adc
fiadd
sbb
jecxz
sbb
lods
add
mov
jecxz
and
lea
inc
(bad)
dec
retf
push
retf
push
retf
out
pop
into
jmp
add
jmp
data16
sbb
add
repz
add
std
inc
inc
into
cmc
add
cmc
add
clc
cld
add
aaa
cmp
cmc
sti
inc
loop
cmc
add
(bad)
xlat
add
inc
lock
inc
repnz
in
add
dec
repz
dec
in
add
push
test
sub
add
push
stc
add
push
cmc
add
pop
cld
add
pop
sti
add
push
cli
add
push
repz
pop
inc
xor
xor
add
push
in
add
pusha
inc
ss
in
add
inc
inc
ins
inc
dec
jae
add
add
inc
push
inc
jp
inc
test
cli
add
int
add
dec
inc
pop
outs
cld
add
ds
add
dec
add
cld
cld
add
cmc
cmc
add
repnz
in
in
add
jmp
in
in
loopne
loopne
fstp
fld
fcmovnu
fild
(bad)
fld
(bad)
(bad)
(bad)
add
into
into
add
cmps
cmps
add
nop
nop
add
mov
add
jo
bound
add
cmp
add
xor
add
sub
and
and
push
push
push
add
add
add
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
hlt
hlt
hlt
hlt
hlt
hlt
push
push
push
push
push
push
push
push
push
hlt
sbb
sbb
push
push
push
push
push
push
hlt
and
mov
push
push
push
push
hlt
sub
mov
movs
xchg
cmps
cmc
push
push
push
sub
cmp
or
cmps
cmc
push
push
cmp
inc
inc
das
repz
cmps
mov
inc
dec
dec
add
or
push
cmp
or
out
or
mov
mov
sti
(bad)
mul
jp
xchg
mov
mov
cmp
xchg
push
push
mov
cmp
js
add
push
mov
in
pop
pop
pusha
imul
push
mov
pop
pop
push
pop
jae
push
push
push
push
push
push
mov
arpl
cmc
push
push
push
push
push
push
push
push
push
mov
push
push
push
push
push
push
(bad)
dec
repz
xor
xor
add
movs
add
mov
add
or
add
repz
add
cmp
add
inc
add
push
add
cmps
rol
cmps
loopne
xchg
xchg
aas
or
add
add
lock
add
add
add
add
add
push
add
gs
aaa
add
add
add
je
dec
jb
gs
inc
outs
jb
add
(bad)
inc
add
aaa
add
adc
add
add
add
add
add
push
add
gs
add
add
add
jo
jb
ins
and
fs
inc
outs
jb
add
(bad)
inc
add
pop
inc
or
adc
add
add
add
add
adc
add
gs
xor
add
outs
fs
je
outs
outs
and
arpl
outs
and
and
imul
ins
and
jae
imul
(bad)
(bad)
inc
add
cmps
or
adc
add
add
add
add
adc
add
gs
xor
add
sub
push
jb
arpl
and
jb
je
addr16
push
outs
jb
bound
imul
jb
ins
and
jae
imul
(bad)
(bad)
inc
add
mov
ja
or
adc
add
add
adc
add
popa
xor
add
add
add
add
add
add
add
add
add
add
and
add
add
add
add
add
add
add
adc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
inc
add
add
add
inc
inc
add
inc
inc
(bad)
inc
add
(bad)
inc
add
add
add
add
add
or
mov
add
add
add
or
(bad)
lock
add
add
add
or
lock
lock
add
add
or
or
push
loopne
(bad)
(bad)
dec
add
add
add
loopne
(bad)
(bad)
push
(bad)
(bad)
push
add
add
add
loopne
(bad)
(bad)
push
push
add
add
add
add
loopne
(bad)
(bad)
push
add
(bad)
inc
add
add
push
loopne
(bad)
(bad)
dec
(bad)
(bad)
(bad)
inc
add
add
push
loopne
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
or
loopne
(bad)
(bad)
(bad)
(bad)
(bad)
inc
(bad)
(bad)
(bad)
push
add
add
ud0
(bad)
push
(bad)
(bad)
push
add
add
add
add
(bad)
(bad)
(bad)
(bad)
inc
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
sar
push
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
jg
add
add
add
add
add
add
add
add
add
jmp
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
add
add
add
add
add
add
add
add
add
rol
add
add
add
add
add
add
add
add
inc
add
add
add
inc
inc
add
inc
inc
(bad)
inc
add
(bad)
inc
add
mov
inc
add
add
add
add
add
add
(bad)
clc
add
add
add
push
push
push
add
ud0
or
add
inc
add
inc
add
inc
add
inc
add
aas
add
add
add
add
add
add
add
add
add
add
add
add
add
cmp
add
(bad)
inc
add
inc
add
inc
add
inc
add
fcomp
inc
or
add
add
add
add
add
adc
bound
xor
add
add
add
gs
je
outs
and
push
jb
arpl
and
jb
arpl
and
je
ja
ins
ins
and
jb
and
jb
pop
outs
jne
add
(bad)
inc
add
outs
or
add
add
add
pop
add
add
add
add
push
add
gs
xor
add
test
add
add
add
add
add
push
add
gs
xor
add
pop
out
add
add
pop
add
add
add
add
push
add
gs
xor
add
pop
add
add
pop
add
add
add
add
push
add
gs
xor
add
pop
push
out
add
add
pop
add
add
dec
xor
pop
loope
popf
hlt
sub
push
aad
push
push
sub
mov
jne
int
pop
cmp
xor
or
stos
add
xchg
mov
add
mov
adc
data16
inc
gs
imul
je
add
push
bound
imul
popa
arpl
sub
je
outs
and
popa
jb
gs
add
inc
add
add
add
ins
je
add
jmp
add
fdivr
loopne
adc
dec
inc
add
add
add
sub
add
fild
inc
add
add
add
add
add
add
add
add
or
pop
push
or
or
or
or
or
push
adc
or
adc
adc
adc
pop
sbb
adc
adc
inc
add
add
add
add
or
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
inc
add
or
loopne
add
and
add
add
adc
inc
add
add
add
add
add
add
or
inc
add
add
add
add
add
jge
add
add
add
push
adc
pop
and
xor
inc
mov
adc
xor
or
push
pop
sbb
sbb
sub
cmp
inc
inc
inc
dec
dec
dec
push
push
push
push
push
pop
pop
pop
arpl
addr16
jne
ja
jns
add
xchg
xchg
xchg
xchg
xchg
xchg
cwde
cdq
call
test
stos
mov
mov
mov
mov
(bad)
(bad)
enter
rcl
aad
xlat
fcomp
(bad)
loop
in
out
call
repz
cmc
div
clc
stc
cli
inc
add
add
add
add
add
add
add
add
add
add
add
add
or
inc
add
add
add
add
add
add
add
add
and
push
adc
pop
popa
jno
and
or
mov
or
xor
adc
push
and
loope
icebp
pop
sbb
sbb
daa
sub
sub
cmp
inc
inc
inc
dec
dec
dec
push
push
push
push
push
pop
pop
pop
arpl
addr16
jne
ja
jns
add
mov
xchg
xchg
cwde
cdq
call
test
stos
mov
mov
mov
mov
(bad)
(bad)
enter
rcl
aad
xlat
fcomp
(bad)
jecxz
in
out
jmp
cmc
div
clc
stc
cli
(bad)
fiadd
or
add
add
add
add
add
and
add
or
cmp
clc
call
bound
inc
mov
jg
xor
ret
out
in
inc
out
xchg
inc
and
cmp
loope
ficom
jg
pop
pop
sbb
mov
inc
clc
call
bound
add
mov
sbb
in
xchg
inc
loopne
les
adc
mov
mov
add
inc
icebp
push
mov
(bad)
cmp
pop
push
xchg
inc
fisttp
jmp
jmp
sbb
test
(bad)
fxch
inc
(bad)
sar
add
aaa
ret
dec
aas
in
add
mov
es
ffreep
cmps
(bad)
arpl
inc
xor
sbb
mov
add
inc
sbb
mov
cli
push
pop
clc
add
add
aas
mov
out
stc
cld
inc
lock
add
(bad)
jg
dec
jg
test
clc
pop
pop
sbb
add
xor
xor
sahf
pop
inc
mov
xor
es
pop
std
push
hlt
out
cld
or
ret
aas
inc
mov
dec
cld
retf
inc
retf
jg
repz
shl
mov
xor
cld
test
add
cld
dec
and
scas
loope
xchg
add
adc
xor
sbb
add
mov
fdivr
jae
cmc
inc
lahf
movs
inc
sbb
add
inc
add
xchg
in
repz
inc
loopne
inc
and
inc
icebp
pop
ret
push
inc
enter
xor
and
add
cld
dec
jl
(bad)
rol
dec
pop
(bad)
inc
fcmovne
jg
push
mov
jg
fwait
pop
pusha
hlt
inc
dec
dec
icebp
test
add
inc
dec
nop
in
repz
inc
loopne
inc
and
test
xor
cmp
fisttp
cld
sub
mov
aas
clc
call
inc
aas
(bad)
stos
dec
loop
xor
pusha
xor
jp
stc
sar
add
inc
dec
inc
xchg
xor
add
mov
lock
add
loopne
cmp
rol
add
shl
clc
mov
jmp
xchg
lods
pop
into
fwait
cmp
int
cmp
call
into
adc
mov
jb
pop
and
or
inc
outs
dec
inc
xchg
sbb
xor
loopne
inc
and
sub
mov
push
mov
pop
lea
sbb
jae
add
clc
push
push
push
dec
dec
sub
or
dec
sti
jbe
ja
mov
imul
es
popf
ins
(bad)
push
push
rol
add
icebp
hlt
lahf
jecxz
jecxz
and
or
repnz
retf
and
xchg
aad
inc
pop
adc
cs
out
dec
std
mov
inc
mov
fist
add
xor
xor
sbb
std
push
mov
cld
or
stos
idiv
lock
stos
in
push
cs
in
cmc
stos
jl
les
pop
stos
das
cld
add
xchg
call
clc
adc
enter
push
xchg
xchg
cld
les
es
fdivr
arpl
jne
cli
in
pop
daa
(bad)
sbb
clc
call
xor
push
mov
popf
jae
jmp
mov
sti
movs
aad
sbb
inc
dec
pop
aas
pop
retf
std
jbe
ds
push
inc
or
xchg
cmp
scas
inc
lock
add
loopne
jg
aaa
inc
xchg
repz
adc
icebp
out
mov
aam
ja
mov
mov
sahf
cli
popf
cwde
inc
mov
inc
sbb
mov
movs
scas
sub
(bad)
pushf
test
cmps
(bad)
mov
mov
repnz
xchg
push
in
pop
fstp
cld
or
in
mov
add
mov
dec
cmp
xlat
or
add
mov
jecxz
fcmove
inc
les
mov
out
ret
dec
cmps
cmp
cwde
inc
cmp
aas
icebp
scas
cmp
push
(bad)
imul
xchg
jle
sbb
xlat
mov
sub
ins
xlat
fcomp
inc
xchg
jg
inc
cld
(bad)
mov
loope
clc
or
arpl
add
inc
loop
aas
loope
clc
or
add
je
rcl
outs
(bad)
and
test
out
pop
loop
and
repz
lahf
(bad)
dec
inc
push
mov
iret
das
mov
lahf
lock
add
add
inc
cld
inc
add
xor
addr16
daa
mov
inc
mov
sub
leave
jecxz
push
loop
mov
lahf
(bad)
dec
aad
psllq
out
pop
cld
mov
outs
cld
xor
add
pop
sbb
add
xchg
fninit
mov
scas
in
push
mov
call
mov
fs
xchg
shr
sbb
cmp
and
repnz
inc
in
fnstcw
inc
jae
pop
mov
int
xchg
cmc
(bad)
pop
lock
inc
stos
xchg
inc
pop
and
add
imul
sub
stc
lds
sar
pop
and
hlt
test
aam
jo
imul
mov
and
retf
inc
push
jo
pop
retf
inc
and
dec
clc
pop
sahf
adc
aas
test
(bad)
and
mov
inc
jle
inc
loop
out
idiv
ins
adc
pop
jmp
popa
sbb
dec
xor
inc
leave
sbb
pop
ret
aaa
fs
scas
repnz
aas
push
jl
mov
add
add
push
cld
imul
xor
mov
and
test
bound
loop
jnp
cmp
cmps
loop
popa
jnp
cmps
pop
jmp
clc
dec
adc
xchg
sti
mov
(bad)
fiadd
nop
(bad)
mov
mov
cld
inc
dec
addr16
rol
test
and
movs
jl
inc
bnd
imul
ins
jb
pushf
shl
test
je
jmp
ret
sbb
xor
push
xchg
fidivr
cs
push
xchg
aad
mov
add
imul
test
ss
cmp
add
sub
dec
pop
imul
fcmovne
inc
repz
pop
fcomp
lods
jmp
adc
inc
leave
sbb
loope
xor
mov
inc
and
mov
(bad)
dec
mov
jmp
jg
and
jg
mov
pop
enter
sbb
inc
fs
test
xchg
loopne
lds
stc
push
imul
stos
js
call
inc
and
inc
stos
fsubr
out
fidivr
imul
and
inc
scas
cmp
add
fisttp
inc
ret
out
inc
mov
aas
jmp
jg
and
pop
js
cmp
imul
loop
data16
jo
movs
inc
leave
add
ins
add
jb
xlat
inc
and
pop
(bad)
iret
add
call
jg
adc
sbb
jbe
stc
cmc
inc
inc
cwde
jg
xchg
repnz
adc
arpl
inc
mov
rol
jno
imul
inc
leave
push
ins
outs
pop
ret
xor
(bad)
(bad)
xor
xor
stc
mov
(bad)
and
jbe
(bad)
jg
pop
outs
(bad)
and
outs
pop
nop
xor
pop
mov
jb
dec
shr
aad
stc
and
test
push
ret
into
push
jl
ror
jg
cmc
mov
in
adc
cs
adc
fcomp
dec
std
adc
clc
ins
inc
jg
and
(bad)
mov
jl
loop
pop
mov
cmp
cmp
out
retf
(bad)
mov
pop
je
stc
and
push
mov
ds
mov
mov
addr16
inc
mov
arpl
lods
adc
jg
outs
(bad)
es
xor
add
shl
mov
adc
pop
xchg
cmps
test
ss
pushf
das
call
aaa
ret
lods
movs
sub
repnz
dec
loope
and
adc
mov
jecxz
add
loope
jg
(bad)
inc
leave
dec
(bad)
(bad)
and
out
xlat
je
xor
stc
mov
out
outs
in
repz
test
jge
aas
mov
mov
cli
scas
cmp
jge
cld
(bad)
mov
fistp
inc
test
inc
adc
xor
ret
jae
add
pop
dec
jg
adc
xchg
sub
adc
fsubr
add
int3
iret
stc
and
dec
inc
xchg
pop
cli
scas
cmp
jge
cld
(bad)
mov
xchg
push
outs
dec
mov
aas
call
add
fistp
mov
cld
inc
jle
movs
aam
int3
and
fcmovb
out
pop
xchg
lea
xchg
iret
out
jae
sub
sub
movs
inc
leave
sbb
sub
mov
int
add
mov
jmp
dec
das
(bad)
fild
daa
(bad)
inc
aas
jmp
outs
(bad)
and
pop
dec
pushf
lahf
ds
push
sub
pop
xor
jnp
ja
xchg
inc
and
xchg
jp
add
in
popa
icebp
inc
ror
dec
inc
clc
mov
rcr
rol
jmp
jg
and
je
bound
test
add
iret
mov
and
sbb
out
fidivr
pop
mov
mov
cld
inc
dec
sti
dec
cld
xor
mov
addr16
xchg
jne
das
mov
xchg
push
cmp
jle
xlat
mov
scas
in
loope
dec
jg
inc
dec
xchg
popf
addr16
mov
inc
or
int3
retf
pushf
inc
rcl
dec
jg
pop
xchg
scas
mov
add
aas
cld
outs
mov
leave
aas
je
out
inc
stos
retf
loope
test
repz
mov
jg
inc
inc
stos
sbb
xchg
fidivr
sbb
cdq
fwait
inc
and
jg
fld
mul
addr16
clc
add
jmp
arpl
sub
stc
inc
dec
mov
pop
in
adc
es
push
lds
inc
mov
inc
cld
movs
inc
leave
pop
cli
mov
jmp
jge
cld
(bad)
mov
xchg
arpl
js
pop
pop
hlt
jmp
(bad)
imul
popf
mov
popf
push
sti
pop
dec
jg
jne
out
sub
mov
mov
jp
jno
in
popa
outs
dec
jg
inc
jg
pop
aas
out
fidivr
add
sub
clc
add
jmp
repnz
and
adc
aas
arpl
and
adc
(bad)
push
pop
jb
loop
les
gs
sbb
test
jmp
xchg
jp
pop
jp
add
out
out
clc
push
push
pop
clc
or
inc
sbb
js
add
sbb
aaa
pop
push
pop
pop
cmp
data16
push
ins
jne
lds
xchg
jno
mov
jae
je
jmp
test
jnp
retf
out
pop
in
aad
add
repz
jnp
inc
les
inc
clc
or
icebp
pop
imul
aas
inc
sbb
mov
loopne
fcmovne
jno
mov
loop
lea
lahf
(bad)
dec
inc
push
mov
fxch
pop
jp
add
jmp
jg
das
xchg
sbb
mov
inc
jecxz
ds
inc
cld
cmp
ds
pop
xor
pop
int3
nop
inc
pop
fldcw
push
out
adc
xchg
leave
loop
daa
aam
xchg
push
ror
imul
sbb
lock
(bad)
jecxz
fwait
sub
xor
sbb
jmp
cmp
fnstsw
in
int
pop
fld
imul
enter
xor
aad
jecxz
inc
cmp
neg
cli
sub
push
stos
ret
dec
das
mov
cmp
call
daa
ret
nop
fcomp
adc
mov
jmp
sbb
leave
cmp
inc
pop
jns
sbb
(bad)
jo
and
dec
lea
and
(bad)
xlat
dec
loopne
push
dec
push
or
jns
mov
mov
sahf
sub
and
xor
jne
dec
xchg
cwde
ja
lea
imul
(bad)
daa
pop
iret
and
icebp
add
mov
stos
dec
mov
call
add
bound
sbb
xchg
movs
dec
xchg
mov
out
mov
lods
pop
adc
ds
xchg
mov
add
mov
mov
jg
jp
inc
sar
icebp
retf
ds
dec
cmp
inc
push
repz
icebp
jne
xlat
in
sub
stos
pop
sub
les
arpl
fwait
(bad)
stc
or
(bad)
call
stc
sbb
adc
mov
scas
cld
adc
pop
repz
inc
loopne
jg
mov
ficomp
add
add
xlat
(bad)
push
(bad)
rcr
gs
dec
sbb
into
dec
mov
xor
dec
(bad)
jne
pop
or
(bad)
xor
shr
aaa
icebp
inc
imul
(bad)
jp
adc
xor
into
rol
xor
movs
scas
sub
jle
aas
leave
xor
cmp
mov
inc
add
rol
cld
into
idiv
add
loopne
sbb
add
add
inc
mov
cmp
jl
icebp
sub
jmp
mov
xlat
or
rol
xchg
mov
sub
ja
sti
inc
js
jmp
push
sbb
(bad)
les
xlat
out
scas
test
mov
adc
mov
(bad)
test
push
jne
xor
(bad)
and
or
cmps
(bad)
stc
popf
outs
inc
lock
mov
ja
mov
cld
add
cs
jecxz
(bad)
sub
les
inc
lods
dec
les
push
xchg
jecxz
les
cli
push
jl
inc
or
clc
stos
in
pop
jl
dec
icebp
les
repnz
in
mov
das
out
mov
xor
out
inc
sub
add
sar
add
mov
out
mov
mov
xlat
lea
mov
repnz
jo
push
mov
adc
iret
clc
pop
inc
adc
ja
pop
dec
test
pop
test
das
repnz
out
ds
hlt
cmp
jg
or
add
je
lock
sub
scas
cld
add
cs
iret
icebp
pop
inc
shr
sub
inc
shl
loop
cld
sbb
add
push
cli
scas
inc
inc
or
pop
in
pop
sar
idiv
add
ds
aas
lock
or
jmp
or
add
ror
adc
(bad)
add
add
add
jne
and
test
out
icebp
pop
dec
stos
pop
clc
xlat
icebp
or
int3
cmc
loop
cld
sbb
inc
lds
push
xor
add
shrd
xlat
loop
cmp
loopne
sbb
add
add
inc
mov
cwde
fcomip
cmp
inc
loopne
inc
icebp
jne
repz
clc
mov
add
mov
add
imul
add
mov
inc
push
mov
add
push
(bad)
stos
cdq
inc
rol
xchg
stc
pand
mov
add
xchg
mov
inc
cdq
fsubrp
inc
add
aam
inc
add
ror
cld
iret
pop
jg
das
pop
(bad)
cs
adc
inc
push
sar
add
push
add
jne
nop
aas
out
icebp
das
dec
call
add
out
pop
in
outs
cmp
lahf
pop
mov
arpl
xor
xor
(bad)
or
inc
mov
add
rcr
(bad)
addr16
inc
sbb
xchg
pop
jecxz
les
add
inc
pop
push
dec
icebp
out
push
jmp
add
aaa
lahf
inc
mov
add
out
pop
in
outs
cmp
lahf
pop
mov
mov
xchg
in
icebp
in
fsubr
pushf
movs
jg
retf
test
cmp
fcmovu
fstp
mov
push
mov
or
jmp
mov
or
inc
cmp
xor
jg
dec
(bad)
ret
das
les
adc
inc
jne
enter
fdivr
sub
scas
ds
shl
out
mov
cmp
data16
test
mov
loop
push
jb
cmp
cmp
push
dec
adc
pop
mov
xor
and
mov
adc
data16
inc
and
cmp
jecxz
stos
pop
jl
jle
mov
add
bound
mov
xchg
mov
xchg
mov
sub
inc
add
test
sar
cmps
xchg
icebp
xor
test
call
pop
scas
fst
xchg
mov
dec
or
out
data16
call
cmps
mov
je
sahf
adc
pop
sti
(bad)
mov
mov
aas
xchg
ds
ins
sub
xchg
lods
cmc
jmp
dec
sbb
mov
sub
xchg
push
jmp
mov
dec
in
jns
push
sti
jmp
jne
mov
sub
adc
dec
ret
shl
jmp
sub
mov
jmp
(bad)
lahf
xchg
push
sti
xchg
aad
ret
(bad)
adc
in
sbb
cmc
scas
retf
in
mov
call
jp
pop
mov
or
pop
retf
nop
sub
adc
or
pop
test
or
mov
mov
and
adc
or
int
out
cmc
scas
mov
dec
ins
jb
stos
push
movs
sub
loopne
mov
lea
jmp
imul
fisub
sti
jmp
sub
scas
and
jnp
call
xchg
out
pop
lahf
xchg
cmp
sub
fild
mov
aas
inc
jnp
inc
sbb
mov
push
cmp
icebp
ss
out
(bad)
pop
push
fwait
retf
popa
addr16
rcr
push
fdivr
dec
adc
pop
dec
push
sbb
bound
jb
mov
inc
push
and
lods
shr
pop
pusha
jnp
sbb
jno
adc
sub
sub
(bad)
and
ret
and
imul
jp
rcl
bound
frstor
and
pop
rcr
sbb
je
push
or
mov
jp
test
lods
(bad)
fld
outs
pop
mov
jecxz
inc
add
stos
ja
loop
mov
leave
cmps
pop
fucomip
push
push
xor
int
test
mov
pop
lods
dec
shl
mov
or
shl
jne
inc
jle
enter
stos
jp
jns
in
ins
pop
retf
aad
pusha
jmp
inc
adc
nop
jb
les
jnp
cmps
test
sahf
icebp
and
push
popf
sub
jns
xor
retf
adc
dec
test
sahf
cwde
stos
mov
adc
shl
xchg
push
or
jp
mov
nop
shl
aam
repz
leave
sbb
jle
cli
jl
aad
pop
test
call
pop
ret
mov
add
mov
cmps
sbb
sub
fnstenv
mov
xor
sbb
or
icebp
xor
push
ins
and
lock
push
lods
lds
xchg
mov
push
test
cdq
push
xchg
mov
push
lahf
or
mov
inc
daa
add
push
mov
xor
pop
and
jge
push
dec
push
cwde
int
test
fisubr
jae
push
mov
ret
mov
sti
mov
mov
cmc
sbb
sbb
pop
or
dec
jl
in
sbb
pop
sub
lds
ret
fs
mov
cmp
stos
push
lea
jge
jo
push
imul
gs
imul
sub
pop
mov
icebp
inc
xchg
and
pop
sbb
test
push
cli
test
stos
ficomp
rcr
cs
xchg
adc
(bad)
(bad)
mov
push
ret
cmp
dec
out
cs
xchg
sbb
outs
sahf
pop
mov
mov
je
fs
mov
push
jno
jp
pushf
mov
mov
jo
xchg
xchg
out
sub
iret
mov
(bad)
test
xor
jp
mov
in
or
add
cld
sub
shl
mov
gs
or
ret
adc
cmp
pop
xchg
repz
adc
aam
mov
push
aaa
das
adc
enter
retf
cmc
and
mov
lea
cdq
xor
or
call
pop
sbb
(bad)
xchg
(bad)
jecxz
or
mov
pop
sbb
jp
hlt
fwait
mov
into
rcl
adc
shl
cmp
xchg
gs
imul
cmps
push
pusha
data16
add
test
das
shl
inc
xor
pusha
mov
enter
iret
sub
and
xor
inc
imul
(bad)
ja
loop
enter
push
inc
mov
pop
jge
mov
and
pop
mov
dec
lock
ins
jo
lods
pop
imul
sti
hlt
scas
dec
add
out
cdq
leave
mov
lahf
mov
mov
jnp
add
aaa
mov
pop
jno
add
fiadd
mov
outs
adc
iret
outs
adc
in
adc
xor
adc
add
and
daa
jmp
ds
and
lods
mov
out
ins
retf
fisttp
pop
mov
mov
ja
daa
inc
push
out
out
cwde
scas
cdq
loopne
sbb
ret
inc
xchg
outs
pop
inc
fcomp
push
inc
shr
pop
mov
sbb
aas
test
jg
stos
push
icebp
fs
adc
jge
sti
pop
sub
icebp
aas
jecxz
loopne
fild
pop
mov
in
mov
jg
mov
inc
iret
adc
inc
fsubr
jb
xor
mov
les
add
popf
aas
sub
call
cmps
loopne
xlat
repnz
inc
jns
sub
popf
jns
ror
push
les
pop
inc
clc
jne
fistp
imul
cs
push
popa
mov
out
scas
push
aaa
call
jne
push
arpl
cld
adc
jp
in
vmaxps
jl
lods
fistp
repnz
pop
jle
and
cmps
mov
jecxz
and
movs
movs
dec
xor
movs
dec
pop
cli
fsubp
fnstcw
adc
xlat
ret
mov
std
jbe
das
push
jmp
dec
sti
push
mov
adc
push
shl
int
ds
and
ret
aam
lds
fisttp
jg
js
add
push
aam
ins
outs
add
adc
dec
cmp
adc
fs
scas
add
fucomip
movs
jecxz
cmp
xchg
dec
icebp
mov
lahf
sbb
cmps
aad
jae
cmp
or
outs
or
shl
scas
mov
je
popf
inc
or
mov
add
stc
xchg
ins
arpl
add
pop
dec
je
jge
stc
sbb
pushf
dec
test
mov
(bad)
cmp
or
inc
mov
adc
dec
jg
jmp
stc
push
(bad)
sbb
pop
out
push
cmp
mov
xor
loop
mov
gs
mov
scas
fild
pop
dec
gs
push
dec
loop
in
loopne
push
sub
daa
add
cmp
mov
pop
test
dec
adc
adc
xchg
outs
xchg
or
daa
jo
in
mov
inc
outs
mov
sbb
ins
jmp
sbb
out
aas
mov
jns
lods
pop
add
sbb
popa
or
cli
sbb
mov
pop
mov
sub
fcmove
iret
cmps
push
arpl
sub
pop
pushf
popf
fucomi
out
jge
icebp
sahf
dec
(bad)
cld
and
mov
cmp
xchg
stos
shl
lock
sbb
jns
test
pop
pop
sbb
mov
mov
dec
repnz
test
push
out
mov
les
pop
mov
push
fldcw
push
std
mov
(bad)
or
nop
sub
mul
jmp
fisttp
pop
mov
loopne
adc
mov
aaa
call
test
(bad)
rcr
std
psllw
lahf
ret
call
ror
cld
cmp
ret
adc
xchg
pop
push
cmp
test
xchg
or
addr16
push
rol
pop
dec
idiv
stc
daa
stc
popf
push
movs
dec
adc
xlat
xchg
jbe
inc
xlat
fdivr
in
pop
loopne
add
loop
test
inc
mov
enter
adc
and
xchg
repz
(bad)
push
sbb
aas
adc
and
jnp
ds
shl
aas
clc
dec
loope
stc
cmps
mov
jmp
mov
and
mov
inc
dec
adc
(bad)
cmp
jecxz
add
mov
cld
pop
stos
js
iret
push
nop
shr
mov
jns
out
fcomp
dec
fadd
add
jno
stc
pop
daa
or
jle
inc
pop
sar
sahf
push
lea
sbb
sub
jmp
js
loop
(bad)
bsf
push
sub
mov
popa
aam
scas
ret
xchg
call
cmp
fiadd
inc
icebp
jle
ficomp
mov
push
xchg
inc
cmp
sbb
ins
cli
push
jae
xor
jnp
(bad)
loope
push
ror
push
jae
push
mov
shl
pop
(bad)
lods
xor
inc
mov
ret
mov
pop
push
aam
je
out
jmp
outs
push
inc
xchg
popa
jmp
pop
mov
jl
clc
test
sti
pop
call
mov
mov
push
call
push
and
int3
jo
shl
jmp
aas
loope
fst
aam
outs
das
inc
mov
mov
inc
arpl
sub
xbegin
mov
xchg
xchg
stos
sub
(bad)
(bad)
mov
repnz
dec
or
mov
xchg
popa
xor
or
inc
xchg
arpl
add
xchg
dec
add
pop
outs
les
dec
loopne
add
xchg
call
jle
pop
ss
rcr
and
push
or
xchg
add
jb
imul
std
xchg
cld
pop
jge
jle
push
clc
mov
or
les
(bad)
xor
push
in
pop
jne
jo
pop
retf
test
xor
inc
mov
(bad)
xchg
icebp
(bad)
test
xor
aad
sub
and
in
fbld
rol
or
fdiv
aam
addr16
ret
ficomp
retf
cmps
test
popa
in
sar
jno
or
mov
(bad)
test
(bad)
clc
inc
dec
push
push
rcr
mov
hlt
mov
fmul
add
mov
pop
or
ret
sar
pop
xor
fimul
call
mov
int
jno
cs
sub
push
xor
push
popa
rcr
xlat
(bad)
fadd
inc
iret
iret
sar
xchg
ret
dec
repnz
sub
fs
mov
cld
cmp
lods
mov
sbb
push
ret
aaa
push
jo
int
mov
add
retf
sbb
sub
add
sbb
aas
adc
fisttp
fstp
and
(bad)
fwait
test
push
mov
and
and
inc
jne
aam
sub
pusha
stos
cmp
scas
in
mov
jle
clc
sub
mov
mov
add
fld
pop
push
mov
mov
sbb
not
cmp
add
jmp
jno
mov
xchg
jo
jg
push
inc
inc
dec
scas
xor
les
sbb
xchg
jno
sbb
daa
outs
push
xchg
jmp
das
hlt
ds
xchg
outs
push
retf
dec
icebp
cmp
test
ins
sbb
mov
sub
add
sub
int
bound
fisub
jb
xlat
push
nop
lods
lods
(bad)
jmp
sbb
lahf
dec
cli
xor
adc
inc
nop
xchg
inc
jecxz
cld
xchg
loop
inc
fwait
jecxz
fwait
pop
push
cmovb
fsubr
jb
test
repnz
ds
inc
xor
lahf
dec
jns
imul
jp
xlat
imul
cmp
std
pushf
jl
movs
mov
mov
or
daa
pop
clc
in
mov
int
popa
or
in
stc
call
jl
pop
xchg
mov
pop
jns
cli
repz
test
repz
cmp
add
std
(bad)
sar
jp
imul
scas
loop
retf
mov
sahf
sahf
je
aas
out
fnsave
mov
mov
push
add
rol
add
dec
xor
add
cmp
xchg
add
sub
(bad)
cmp
rcr
or
sbb
sbb
stc
mov
cmp
mov
mov
mov
mov
sub
cld
outs
mov
inc
add
adc
test
jns
jbe
std
cmps
sbb
pop
addr16
mov
loopne
jge
test
xchg
pop
fidivr
push
lds
cld
adc
sbb
in
jbe
(bad)
fidivr
inc
adc
add
sub
je
xchg
mov
and
cmp
data16
aaa
push
push
sub
mov
out
popf
xor
ds
mov
mov
inc
retf
test
cmp
dec
clc
mov
cli
dec
popa
sar
mov
add
mov
in
mov
aas
int3
mul
fwait
pusha
sub
loopne
or
call
push
sbb
mov
ret
inc
inc
(bad)
std
jne
inc
(bad)
sar
bound
jne
sbb
fistp
aad
stos
stc
xlat
std
add
cmp
cld
(bad)
xor
jl
xor
call
in
imul
in
xchg
jecxz
sub
or
into
xchg
inc
(bad)
aad
sti
push
clc
mov
inc
leave
cmp
add
inc
sbb
pop
or
out
je
push
push
retf
mov
in
xor
pop
ins
xor
jo
nop
scas
push
adc
push
dec
or
cli
inc
xor
xchg
retf
mov
add
into
test
mov
sbb
hlt
sar
add
mov
loop
mov
(bad)
into
sbb
test
imul
adc
cwde
jmp
pop
fnsave
mov
(bad)
xchg
mov
push
ror
mov
sbb
mov
cmp
dec
daa
mov
(bad)
(bad)
jne
enter
pop
fbstp
mov
cmp
ror
stc
into
jno
xchg
popf
jnp
lods
(bad)
fldenv
jp
mov
jle
mov
test
retf
cmps
xchg
(bad)
cld
xchg
lock
push
sbb
cmps
inc
jecxz
shr
sbb
pushf
jns
sbb
jg
int
xor
out
iret
sub
(bad)
cli
and
push
dec
aas
les
mov
sub
arpl
xchg
cld
pop
mov
xor
es
inc
(bad)
aad
lahf
fdivr
lds
pop
push
inc
sbb
xchg
inc
(bad)
(bad)
jo
pushf
jmp
enter
jnp
mov
dec
clc
push
mov
pop
imul
add
sub
sub
inc
js
cmps
mov
imul
pop
mov
mov
mov
inc
sub
push
jmp
jne
clc
cmp
in
repnz
aas
int3
retf
or
into
les
(bad)
sbb
in
push
jmp
and
jmp
stos
mov
dec
fld
(bad)
mov
pop
scas
test
jecxz
pusha
imul
cmp
repz
(bad)
inc
or
loop
cli
or
fcomip
cli
pop
(bad)
xor
lds
aas
jmp
mov
jl
cmp
mov
add
push
in
xor
stos
xor
out
ret
pop
(bad)
enter
cmp
adc
inc
(bad)
jmp
jecxz
es
dec
cmp
sti
fnstcw
clc
fnsave
stos
fnstcw
leave
std
scas
add
mov
ds
jno
cmps
imul
xchg
aaa
mov
xchg
inc
mov
push
mov
add
pop
aas
clc
(bad)
test
dec
pop
dec
sub
out
sub
ins
(bad)
out
xor
cdq
sbb
push
dec
movs
push
push
cmp
pop
xlat
aaa
in
mov
mov
xchg
inc
mov
cmc
scas
dec
mov
sbb
cmp
pushf
push
xchg
aad
rcl
lock
xchg
jmp
xchg
imul
jno
imul
cmp
add
shl
dec
mov
mov
fwait
daa
aas
stc
push
scas
inc
sti
xor
xchg
add
jns
sub
pop
sti
dec
mov
aaa
fwait
push
test
cmp
fdivr
push
mov
sub
fisttp
lea
sbb
fbld
fwait
movs
mov
mov
icebp
mov
adc
push
test
add
int
dec
inc
movs
mov
sahf
outs
and
cli
ins
xchg
sbb
mov
xor
pop
cmp
xchg
stos
shr
xor
xor
add
inc
jecxz
add
mov
add
xchg
xor
add
inc
jecxz
je
adc
ja
push
add
dec
sbb
(bad)
movs
jnp
(bad)
in
cmps
loop
jno
push
rol
(bad)
pop
jg
fst
fnstenv
lds
xor
add
jmp
pop
sub
pop
adc
stos
cmp
mov
out
dec
fcom
cmp
aad
fs
mov
not
mov
(bad)
lds
movs
mov
add
mov
std
add
inc
xor
pushf
mov
scas
and
mov
dec
cmp
mov
adc
add
aas
fs
adc
sbb
fld
clc
fnsave
iret
in
dec
jecxz
inc
std
out
push
rcl
inc
inc
push
outs
adc
xchg
sbb
pop
adc
add
stos
pop
rcr
fiadd
push
dec
push
sbb
nop
jmp
neg
scas
jno
add
std
mov
jg
stc
mov
or
out
push
push
jg
mov
mov
mov
or
jg
pusha
xchg
shr
mov
pop
ret
fidivr
push
inc
xchg
popf
lods
out
pop
scas
jg
dec
sbb
jnp
inc
iret
inc
(bad)
push
mov
(bad)
jae
add
xor
jo
arpl
xchg
jae
sbb
add
dec
adc
adc
push
xchg
mov
nop
aas
idiv
sub
xor
fcomp
(bad)
mov
ins
(bad)
scas
mov
int
add
stos
daa
(bad)
mov
and
dec
dec
fidivr
frstor
call
pusha
addr16
lods
xor
fwait
rol
inc
ficom
xchg
pop
cld
enter
sbb
jb
add
mov
pop
ret
pop
or
fadd
loope
mov
shl
mov
shr
mov
add
or
pop
shl
dec
(bad)
jl
lods
jmp
mov
pop
dec
add
dec
xchg
jo
mov
xchg
dec
rol
loopne
adc
rcl
mov
push
and
push
cmp
repnz
aas
jmp
dec
std
add
div
or
imul
pop
jbe
call
ds
clc
jnp
add
loopne
inc
mov
mov
push
out
xchg
mov
xor
or
call
jl
sub
enter
and
jp
test
sahf
or
cli
or
mov
lea
add
scas
cwde
aas
popa
fist
add
lods
lods
xchg
out
dec
call
mov
test
retf
jns
cmc
ret
sbb
lock
jne
out
into
(bad)
push
jnp
outs
xchg
imul
retf
mov
ja
dec
shl
in
addr16
(bad)
fist
(bad)
and
out
clc
jb
out
pop
mov
add
and
add
jae
jno
and
mov
and
(bad)
sahf
adc
xadd
push
popf
arpl
and
mov
sti
mov
mov
(bad)
outs
fsubr
ret
jle
fistp
pop
adc
test
imul
les
adc
mov
and
add
adc
mov
mov
mov
out
sbb
mov
adc
push
iret
test
lods
xchg
cmps
and
jae
jbe
jle
mul
or
movs
(bad)
pop
sbb
sar
inc
mov
jmp
dec
push
icebp
push
xchg
mov
out
dec
jbe
retf
jbe
test
in
mov
jns
push
fcomp
dec
inc
or
inc
or
mov
aad
js
repnz
shl
gs
add
movs
popf
mov
test
add
mov
jg
jl
mov
ficomp
test
shr
pop
and
add
xor
rcl
in
test
push
xor
(bad)
push
imul
mov
mov
lahf
(bad)
inc
sysenter
(bad)
or
inc
aam
aas
(bad)
ret
das
mov
pop
or
imul
repz
and
test
xchg
lea
mov
jg
mov
call
lods
fcmovnu
cli
repnz
clc
das
popa
loope
add
xor
dec
ret
mov
out
mov
scas
sbb
mov
and
cmp
stos
xchg
push
movs
aaa
jns
push
pop
push
mov
and
xchg
jge
(bad)
and
pop
mov
sbb
mov
xlat
push
cmp
jne
jmp
jb
sub
pop
icebp
jmp
leave
xchg
(bad)
dec
mov
aam
cmp
sbb
pop
js
push
xchg
pop
mov
int
or
or
pop
pop
jnp
(bad)
cs
(bad)
add
cmc
pop
or
inc
ret
scas
or
or
dec
test
mov
xchg
aam
jmp
aam
xor
xchg
jmp
mov
(bad)
push
aad
sub
push
xchg
sti
sub
(bad)
stos
loop
adc
pop
cmps
(bad)
cld
outs
jle
(bad)
mov
fadd
xchg
ins
in
dec
dec
xchg
and
enter
lods
test
mov
inc
outs
sbb
inc
icebp
jbe
in
(bad)
xor
(bad)
rcr
repz
movd
lahf
or
jl
mov
ds
movs
clc
xchg
ret
mul
imul
cmps
jl
mov
bound
pushf
das
and
mov
stc
scas
mov
push
mov
adc
outs
outs
xchg
or
(bad)
sbb
movs
pop
push
jb
(bad)
enter
jo
dec
int
jo
mov
je
(bad)
push
mov
test
dec
jb
lahf
push
js
jecxz
sahf
or
ds
cld
sbb
cmps
test
xlat
(bad)
lock
shl
or
stc
push
inc
retf
sub
aas
ins
das
ficomp
dec
clc
cmp
push
mov
push
(bad)
retf
dec
retf
addr16
pop
retf
(bad)
imul
les
pop
sti
cs
pop
sar
addr16
mov
jge
test
outs
adc
sahf
repnz
test
jb
sub
ret
cmp
arpl
fisub
clc
test
lock
std
xor
dec
stos
int
push
sub
dec
mov
sbb
jae
cmp
adc
aad
xchg
pop
imul
dec
fs
out
jge
loopne
mov
clc
icebp
ins
lock
into
xchg
ins
mov
(bad)
ds
jnp
loopne
sub
xor
(bad)
in
mov
stc
xchg
dec
push
imul
adc
mov
aas
dec
cmp
js
inc
test
push
imul
dec
adc
leave
xor
daa
xor
cld
sbb
icebp
inc
les
imul
push
mov
dec
in
pop
fstp
and
(bad)
in
cmp
lock
into
icebp
je
fist
cmc
dec
mov
pop
push
mov
jno
cmps
pop
mov
cmps
int3
lods
les
and
jo
pop
add
pop
(bad)
or
fstp
repnz
(bad)
and
pushf
xlat
(bad)
iret
mov
cmps
in
scas
icebp
mov
jg
ds
(bad)
sti
fwait
hlt
mov
pop
mov
cmp
aam
mov
arpl
jb
std
or
mov
outs
jecxz
clc
inc
lock
push
clc
mov
div
ret
retf
sub
daa
jmp
xchg
add
and
aaa
std
scas
hlt
(bad)
pop
(bad)
outs
sti
aas
js
xlat
dec
rcl
stc
das
xor
nop
aam
sbb
xchg
or
(bad)
jbe
push
pusha
xor
pop
push
dec
clc
idiv
push
js
inc
aad
clc
aaa
loope
popf
pinsrw
adc
imul
push
(bad)
(bad)
cmp
mov
into
into
mov
aam
xor
pop
push
ins
mov
mul
clc
mov
das
add
test
jmp
push
push
dec
outs
ja
adc
pusha
int3
dec
add
addr16
jg
and
inc
ret
dec
out
mov
in
mov
and
jl
cmp
retf
fwait
xlat
out
sbb
push
add
inc
ds
aam
add
les
cli
dec
pop
cmp
shr
jp
inc
and
push
xor
mov
stos
inc
mov
xor
push
lock
test
pinsrw
xlat
cmp
retf
movs
cmp
sub
fs
xor
ins
sbb
jo
dec
and
mov
push
push
push
imul
cld
nop
xor
fild
mov
push
std
stos
scas
lods
outs
and
jno
mov
(bad)
jl
test
pop
aam
or
nop
pop
repnz
cmp
jae
in
ds
lock
in
or
icebp
push
push
lock
test
retf
or
or
stos
jmp
fdivr
(bad)
mov
stos
mov
nop
push
mov
mov
jnp
fistp
mov
inc
sar
mov
xchg
ret
loopne
push
icebp
cmps
gs
fisttp
cwde
add
fidivr
cmps
add
lods
sti
and
sar
add
sbb
xor
das
sub
enter
inc
ins
pop
cli
lock
dec
out
sbb
mov
pop
in
mov
cld
pop
inc
jle
dec
fidivr
jmp
inc
jg
inc
jg
(bad)
sar
inc
int
adc
ins
retf
out
mov
ss
or
sbb
ds
js
div
cmp
sar
stos
js
leave
fisttp
ins
xchg
xchg
add
sub
fidivr
push
sti
jl
pop
pop
(bad)
fld
add
pop
dec
mov
xor
adc
loopne
jae
sub
cwde
test
push
pusha
sub
push
out
lods
or
ds
call
xor
lock
and
sub
xlat
push
sub
sbb
out
mov
ret
mov
push
imul
popf
fcomp
sbb
lock
add
mov
xchg
add
test
cdq
and
xchg
(bad)
jbe
jl
inc
mov
add
ss
aam
xlat
(bad)
inc
es
xchg
mov
xlat
xchg
fadd
loope
mov
ss
loop
mov
dec
and
mov
mov
mov
mov
and
clc
es
enter
push
inc
(bad)
sti
jns
mov
sub
stos
xor
sub
jns
push
jne
or
mov
aas
mov
(bad)
jg
jl
mov
or
sbb
cmp
in
dec
cmp
push
loopne
fnstenv
jmp
inc
or
mov
dec
iret
inc
and
mov
add
in
call
mov
pop
stos
test
inc
cdq
repz
xchg
jmp
jns
fdivr
add
mov
sub
ret
sub
aas
loope
mov
pop
clc
sub
icebp
retf
sti
and
add
(bad)
mov
inc
aaa
loopne
enter
ins
das
mov
lock
dec
outs
jg
cs
clc
ins
das
mov
lock
dec
outs
jg
cs
xor
out
icebp
jg
pop
pop
(bad)
inc
aaa
loopne
enter
ins
das
mov
lock
dec
outs
jg
cs
clc
ins
das
mov
lock
dec
outs
jg
cs
xor
out
icebp
jg
pop
pop
(bad)
inc
aaa
loopne
enter
ins
das
mov
lock
dec
outs
jg
cs
clc
ins
das
mov
lock
dec
outs
jg
cs
xor
out
icebp
jg
pop
pop
(bad)
inc
aaa
loopne
enter
ins
das
mov
lock
dec
outs
jg
cs
clc
ins
das
mov
lock
dec
outs
jg
cs
xor
out
icebp
jg
pop
pop
(bad)
inc
aaa
loopne
enter
ins
das
mov
lock
dec
outs
jg
cs
clc
ins
das
mov
lock
dec
outs
jg
cs
xor
out
icebp
jg
pop
pop
(bad)
inc
aaa
loopne
enter
ins
das
mov
lock
dec
outs
jg
cs
clc
ins
das
mov
lock
dec
outs
jg
cs
xor
out
icebp
jg
pop
pop
(bad)
inc
aaa
loopne
enter
ins
das
mov
lock
dec
outs
jg
cs
clc
ins
das
mov
lock
dec
outs
jg
cs
xor
out
icebp
jg
pop
pop
(bad)
inc
aaa
loopne
enter
ins
das
mov
lock
dec
outs
jg
cs
clc
ins
das
mov
lock
dec
outs
jg
cs
xor
out
icebp
jg
pop
pop
(bad)
inc
aaa
loopne
enter
ins
das
mov
lock
dec
outs
jg
cs
clc
ins
das
mov
lock
dec
outs
jg
cs
xor
out
icebp
jg
pop
pop
(bad)
inc
aaa
loopne
enter
ins
das
mov
lock
dec
outs
jg
cs
clc
ins
das
mov
lock
dec
outs
jg
cs
xor
out
icebp
jg
pop
pop
(bad)
inc
aaa
loopne
enter
ins
das
mov
lock
dec
outs
jg
cs
clc
ins
das
mov
lock
dec
outs
jg
cs
xor
out
icebp
jg
pop
pop
(bad)
inc
aaa
loopne
enter
ins
das
mov
lock
dec
outs
jg
cs
clc
ins
das
mov
lock
dec
outs
jg
cs
xor
out
icebp
jg
pop
pop
(bad)
inc
aaa
loopne
enter
ins
das
mov
lock
dec
outs
jg
cs
clc
ins
das
mov
lock
dec
outs
jg
cs
xor
out
icebp
jg
pop
pop
(bad)
inc
aaa
loopne
enter
ins
das
mov
lock
dec
outs
jg
cs
clc
ins
das
mov
lock
dec
outs
jg
cs
xor
out
icebp
jg
pop
pop
(bad)
inc
aaa
loopne
enter
ins
das
mov
lock
dec
outs
jg
cs
clc
ins
das
mov
lock
dec
outs
jg
cs
xor
out
icebp
jg
pop
pop
(bad)
inc
aaa
loopne
enter
ins
das
mov
lock
dec
outs
jg
cs
clc
ins
das
mov
lock
dec
outs
jg
cs
xor
out
icebp
jg
pop
pop
(bad)
inc
aaa
loopne
enter
ins
das
mov
lock
dec
outs
jg
cs
clc
ins
das
mov
lock
dec
outs
jg
cs
xor
out
icebp
jg
pop
pop
(bad)
inc
aaa
loopne
enter
ins
das
mov
lock
dec
outs
jg
cs
clc
ins
das
mov
lock
dec
outs
jg
cs
xor
out
icebp
jg
pop
pop
(bad)
inc
aaa
loopne
enter
ins
das
mov
lock
dec
outs
jg
cs
clc
ins
das
mov
lock
dec
outs
jg
cs
xor
out
icebp
jg
pop
pop
(bad)
inc
aaa
loopne
enter
ins
das
mov
lock
dec
outs
jg
cs
clc
ins
das
mov
lock
dec
outs
jg
cs
xor
out
icebp
jg
pop
pop
(bad)
inc
aaa
loopne
enter
ins
das
mov
lock
dec
outs
jg
cs
clc
ins
das
mov
lock
dec
outs
jg
cs
xor
out
icebp
jg
pop
pop
(bad)
inc
aaa
loopne
enter
ins
das
mov
lock
dec
outs
jg
cs
clc
ins
das
mov
lock
dec
outs
jg
cs
xor
out
icebp
jg
pop
pop
(bad)
inc
aaa
loopne
enter
ins
das
mov
lock
dec
outs
jg
cs
clc
ins
das
mov
lock
dec
outs
jg
cs
xor
out
icebp
jg
pop
pop
(bad)
inc
aaa
loopne
enter
ins
das
mov
lock
dec
outs
jg
cs
clc
ins
das
mov
lock
dec
outs
jg
cs
xor
out
icebp
jg
pop
pop
(bad)
inc
aaa
loopne
enter
ins
das
mov
lock
dec
outs
jg
cs
xchg
popf
pop
rcr
loop
pop
fidivr
gs
outs
shl
cmp
shr
das
test
popa
xchg
imul
fisttp
push
sub
inc
pushf
call
jo
bound
jb
fnstcw
pop
cmp
sar
xchg
cmc
xor
nop
push
mov
jg
es
dec
aaa
(bad)
mov
rcr
ftst
inc
ror
adc
or
and
test
inc
loope
cld
mov
cli
(bad)
(bad)
xchg
dec
pop
popf
mov
ret
jnp
xchg
cmp
sub
jbe
into
imul
mov
or
cs
xchg
fimul
push
mov
std
xor
sahf
adc
xchg
xor
not
scas
xchg
es
xchg
ds
pop
iret
and
loopne
out
mov
sar
and
bound
xchg
push
fwait
shl
jle
movs
mov
cmps
std
aad
out
ja
jl
movs
pop
inc
cmps
js
lds
test
cmp
mov
ror
shl
aam
int
movs
sub
int
into
test
mov
clc
pop
push
cld
sar
add
clc
mov
out
aam
xor
add
stos
mov
repnz
push
retf
sub
outs
(bad)
repnz
adc
add
add
lods
inc
imul
not
mov
out
aam
xor
add
stos
je
xchg
sub
mov
inc
loop
mov
js
stc
stc
pop
mov
in
jae
(bad)
shr
mov
lds
shl
call
inc
adc
iret
sub
add
add
test
jle
out
inc
sti
or
mov
xchg
rcl
mov
dec
jg
fwait
jg
cmps
inc
adc
icebp
inc
jg
popf
jg
cmps
inc
adc
cld
cld
(bad)
fiadd
xor
aad
loop
push
mov
inc
inc
clc
stos
jo
call
jg
cmps
inc
adc
cld
cld
pop
jp
mov
cld
(bad)
out
addr16
sbb
mov
scas
dec
aas
mov
(bad)
inc
cli
adc
inc
xor
add
test
push
inc
mov
dec
(bad)
sub
out
sti
sar
scas
repnz
mov
sub
out
(bad)
ret
(bad)
dec
loopne
mov
lock
(bad)
mov
call
mov
ins
dec
push
aam
mov
mov
imul
adc
leave
and
lahf
mul
popf
cmp
sbb
ss
xchg
rcl
and
add
stos
mov
xchg
cmp
hlt
popf
push
pop
sbb
adc
movs
fimul
or
xchg
imul
mov
or
outs
jecxz
inc
out
scas
add
or
scas
je
xchg
mov
push
push
dec
pop
pop
pop
mov
addr16
jmp
jno
clc
xchg
les
sbb
out
mov
in
aam
inc
push
sub
pop
mov
pop
outs
or
jo
xchg
inc
das
test
add
mov
cld
inc
cmps
pop
(bad)
adc
xchg
clc
jnp
shl
in
cmp
sbb
dec
cs
add
mov
int3
repz
cmp
stc
imul
sar
xor
(bad)
sub
push
push
mov
dec
push
(bad)
fidivr
push
jmp
pushf
mov
xor
and
pop
test
xchg
(bad)
cmps
(bad)
pop
ss
adc
mov
aas
push
push
mov
mov
out
sbb
xchg
xor
mov
mov
pop
cmps
stc
sahf
stos
mov
jg
std
pop
icebp
(bad)
adc
int
sub
cmc
out
or
jmp
xchg
aaa
xchg
jae
cmps
ret
stc
repnz
shl
mov
sbb
jmp
sbb
sbb
pop
sbb
dec
shl
adc
cmp
mov
lods
repnz
div
lahf
cmp
pop
xor
cwde
dec
mov
nop
gs
or
retf
scas
pop
jecxz
mov
ret
mov
adc
into
loop
dec
pop
imul
sub
push
inc
ror
xor
pop
jns
push
push
bswap
xor
ror
xchg
test
jl
(bad)
in
scas
jl
sti
ds
sar
fisubr
mov
movs
movs
dec
cmp
add
cmp
dec
jp
mov
pop
ror
inc
test
xchg
jecxz
(bad)
clc
aaa
push
aam
shr
sub
xor
in
sub
ror
pop
jmp
mov
loopne
ret
and
in
in
jecxz
(bad)
xor
sub
adc
add
in
add
and
inc
pop
and
popa
dec
ins
imul
call
(bad)
mov
js
fs
mov
sbb
mov
out
sub
(bad)
mov
pop
jl
jno
lea
aam
lods
fcmovbe
je
std
pop
in
push
ror
mov
pop
xor
adc
xchg
arpl
(bad)
mov
add
jecxz
neg
pop
mov
stos
in
add
fs
mov
mov
or
pop
xor
xor
push
fdivr
xor
clc
or
push
fdivr
outs
pop
sahf
and
shl
sub
in
test
mov
(bad)
mov
dec
mov
or
cmp
fimul
movs
retf
and
xor
add
fisub
es
inc
scas
aaa
clc
xor
add
mov
aas
in
shr
call
fsubr
mov
push
inc
add
adc
inc
add
adc
inc
add
adc
inc
add
adc
inc
add
adc
inc
add
adc
inc
add
adc
inc
add
adc
inc
add
adc
inc
add
adc
inc
add
adc
inc
add
gs
inc
push
(bad)
mov
dec
push
push
mov
add
pop
aad
jmp
dec
std
add
xor
imul
dec
cld
mov
cmps
mov
lea
xchg
(bad)
in
push
sbb
das
test
add
and
inc
movs
sbb
adc
add
(bad)
jnp
inc
jge
push
fs
cmp
and
jg
aas
adc
js
out
inc
xchg
pop
(bad)
jecxz
sub
mov
add
xchg
xor
adc
sbb
or
pop
jne
add
sbb
int3
mov
inc
pusha
inc
inc
in
(bad)
mov
xchg
mov
add
gs
pop
or
mov
call
cmc
aad
add
add
and
inc
(bad)
aam
inc
add
fs
pop
cld
sbb
inc
sbb
add
fstp
mov
sar
sub
dec
sar
(bad)
cdq
mov
jno
iret
clc
and
inc
cld
adc
push
aas
repz
add
sar
push
sub
(bad)
imul
add
add
jne
sti
ins
cmp
fidiv
pusha
aas
out
inc
sbb
inc
lahf
jg
inc
xor
out
daa
stc
inc
add
(bad)
inc
rol
inc
cdq
and
inc
push
or
jecxz
or
test
jg
cmp
pop
hlt
pop
cli
ja
add
push
inc
jecxz
jg
pusha
aas
out
loop
add
pop
pop
lds
loopne
enter
add
add
push
scas
inc
mov
add
dec
pop
lock
or
xchg
imul
sub
test
retf
(bad)
(bad)
add
pop
clc
in
pop
fstp
stc
idiv
mov
mov
jnp
inc
add
inc
loopne
jg
adc
clc
js
mov
scas
inc
mov
add
pop
adc
jbe
(bad)
pop
mov
jecxz
jg
pusha
aas
out
loop
add
ds
jg
out
inc
lock
test
(bad)
and
mov
cli
adc
mov
mov
popf
(bad)
pop
mov
jecxz
outs
mov
cmp
sbb
inc
inc
pop
(bad)
popa
cmc
fcom
dec
cld
(bad)
je
lock
or
imul
sub
paddb
push
pop
repz
jnp
icebp
adc
pusha
inc
(bad)
push
(bad)
cmp
push
add
jge
das
cld
ret
jmp
scas
out
pop
stc
push
fidivr
mov
cdq
xlat
inc
add
inc
mov
test
jg
pusha
(bad)
outs
mov
out
inc
mov
inc
add
in
pop
fstp
stc
idiv
mov
mov
jnp
jg
dec
jne
inc
xor
inc
(bad)
aam
dec
dec
test
jg
pusha
(bad)
outs
mov
jge
add
fidiv
fdivr
inc
jecxz
inc
mov
pop
repz
icebp
jg
aas
scas
loop
lahf
lock
mov
cld
adc
push
pop
stc
xchg
ins
jg
pusha
(bad)
outs
mov
test
repz
loopne
mov
int
rcr
inc
sbb
add
sar
xchg
cmp
lahf
jg
inc
xor
out
daa
stc
inc
add
mov
pop
sub
loopne
xor
loopne
inc
enter
jne
xchg
(bad)
aas
fisub
(bad)
pop
mov
scas
ins
fcmove
inc
or
imul
mov
sbb
jmp
sub
in
mov
mov
inc
or
in
call
jmp
cmps
iret
dec
or
jmp
lea
shl
pushf
mov
mov
push
call
aam
out
mov
add
xchg
pop
cmp
out
jg
fsub
push
pop
mov
pushf
(bad)
and
pop
repz
sti
in
push
idiv
neg
mov
push
pop
imul
jge
xlat
pop
cld
test
cdq
sub
inc
sahf
sar
add
bound
cmp
lds
inc
dec
inc
inc
idiv
neg
mov
push
inc
rcr
rcl
scas
psubw
pop
std
imul
sti
pop
pop
repz
sti
in
push
je
fs
pop
imul
jge
xlat
pop
cld
test
cdq
sub
inc
sahf
sar
add
bound
cmp
lds
inc
dec
inc
inc
idiv
neg
mov
push
inc
rcr
rcl
scas
psubw
pop
std
imul
sti
pop
pop
repz
sti
in
push
je
fs
pop
imul
jge
xlat
pop
cld
test
cdq
sub
inc
sahf
sar
add
bound
cmp
lds
inc
dec
inc
inc
idiv
neg
mov
push
inc
rcr
rcl
scas
psubw
pop
std
imul
sti
pop
pop
repz
sti
in
push
je
fs
pop
imul
jge
xlat
pop
cld
test
cdq
sub
inc
sahf
sar
add
bound
cmp
lds
inc
dec
inc
inc
idiv
neg
mov
push
inc
rcr
rcl
scas
psubw
pop
std
imul
sti
pop
pop
repz
sti
in
push
je
fs
pop
imul
jge
xlat
pop
cld
test
cdq
sub
inc
sahf
sar
add
bound
cmp
lds
inc
dec
inc
inc
idiv
neg
mov
push
inc
rcr
rcl
scas
psubw
pop
std
imul
sti
pop
pop
repz
sti
in
push
je
fs
pop
imul
jge
xlat
pop
cld
test
cdq
sub
inc
sahf
sar
add
bound
cmp
lds
inc
dec
inc
inc
idiv
neg
mov
push
inc
rcr
rcl
scas
psubw
pop
std
imul
sti
pop
pop
repz
sti
in
push
je
fs
loop
stc
push
jne
cli
not
mov
mov
neg
lods
scas
adc
stos
add
fwait
imul
lods
imul
cmps
iret
pop
push
jge
aaa
(bad)
aas
gs
mov
xchg
dec
pop
mov
mov
aam
sahf
dec
xor
adc
pop
inc
lock
add
cld
xor
add
jne
repnz
stos
dec
sti
outs
je
out
ret
sub
ja
pop
inc
imul
mov
std
pop
jle
inc
loopne
xchg
(bad)
xor
or
sar
add
jmp
jae
loope
std
xchg
mov
inc
add
icebp
mov
pop
inc
lock
add
cld
xor
add
jne
cli
mov
popf
pop
mov
retf
sbb
sbb
stos
inc
inc
inc
test
sbb
sbb
add
cmp
pop
inc
into
(bad)
(bad)
clc
dec
aas
gs
cli
paddb
inc
ror
cld
push
not
repz
clc
inc
inc
sbb
inc
cld
and
call
test
not
add
inc
outs
call
mov
lods
inc
inc
fild
add
ret
jg
cmp
fsubr
clc
dec
mov
cld
and
add
int
cld
push
not
add
or
inc
(bad)
mov
pop
aas
loope
pop
lods
and
inc
out
jg
inc
mov
std
pop
(bad)
adc
pop
xchg
(bad)
xor
ret
sub
add
jg
pop
inc
xchg
lock
pop
push
nop
jae
idiv
(bad)
adc
push
inc
add
das
dec
inc
sbb
dec
mov
cld
and
idiv
movs
inc
lea
inc
ret
jg
cmp
fsubr
clc
dec
mov
cld
and
add
int
cld
push
not
add
or
inc
(bad)
mov
pop
aas
loope
pop
lods
and
inc
out
ja
fbstp
adc
add
xchg
(bad)
xor
ret
sub
ja
pop
inc
imul
mov
pop
push
nop
jae
idiv
(bad)
adc
pop
inc
lock
add
aas
loope
std
xchg
mov
inc
add
icebp
scas
ret
pop
clc
inc
push
(bad)
clc
inc
push
(bad)
stos
dec
cmp
sti
popf
inc
or
inc
out
test
sbb
cld
inc
mov
std
pop
(bad)
adc
add
pop
xchg
(bad)
xor
or
sar
add
jmp
jae
loope
std
xchg
jg
aas
lock
add
out
(bad)
xor
sbb
retf
arpl
or
std
mov
xchg
lock
pop
push
nop
jae
idiv
(bad)
adc
push
inc
lock
dec
inc
sbb
loope
std
xchg
jg
aas
lock
add
hlt
mov
clc
inc
push
(bad)
clc
inc
push
(bad)
stos
dec
cmp
sti
popf
inc
or
inc
inc
test
sbb
lock
jle
fcomip
sbb
sbb
inc
cld
and
call
test
not
add
or
inc
(bad)
(bad)
clc
dec
mov
cld
and
add
int
cld
imul
(bad)
adc
mov
jmp
ret
sub
ja
pop
inc
imul
mov
std
pop
jle
inc
loopne
xchg
(bad)
xor
or
sar
add
jmp
jae
loope
std
xchg
mov
inc
add
icebp
mov
pop
inc
lock
add
cld
xor
add
jne
cli
mov
popf
pop
mov
retf
sbb
sbb
lods
inc
inc
fild
add
ret
jg
cmp
fsubr
clc
dec
mov
cld
and
add
int
cld
push
not
add
or
inc
(bad)
mov
pop
aas
loope
pop
lods
and
inc
out
ja
fbstp
adc
add
xchg
(bad)
xor
ret
sub
ja
pop
inc
imul
mov
pop
push
nop
jae
idiv
(bad)
adc
pop
inc
lock
add
aas
loope
std
xchg
mov
inc
add
icebp
scas
ret
pop
clc
inc
push
(bad)
clc
inc
push
(bad)
stos
dec
cmp
sti
popf
inc
or
inc
fild
add
retf
sbb
sbb
inc
cld
and
call
test
not
add
or
inc
(bad)
(bad)
clc
dec
mov
cld
and
add
int
cld
imul
(bad)
adc
mov
jmp
ret
sub
ja
pop
inc
imul
mov
std
pop
jle
inc
loopne
xchg
(bad)
xor
or
sar
add
jmp
jae
loope
std
xchg
mov
inc
add
icebp
mov
pop
inc
lock
add
cld
xor
add
jne
cli
mov
popf
pop
mov
retf
sbb
sbb
lods
inc
inc
fild
add
ret
jg
cmp
fsubr
clc
dec
mov
cld
and
add
int
cld
push
not
add
or
inc
(bad)
mov
pop
aas
loope
pop
lods
and
inc
out
ja
fbstp
adc
add
xchg
(bad)
xor
ret
sub
ja
pop
inc
imul
mov
loop
mov
ret
enter
movs
inc
or
inc
out
test
sbb
cld
inc
mov
std
pop
mov
xchg
(bad)
xor
lods
add
in
push
les
sub
push
lahf
lahf
cmc
xlat
aas
not
inc
test
es
cmp
fucomp
clc
dec
inc
gs
cli
(bad)
and
add
int
cld
push
not
add
or
inc
(bad)
mov
sar
add
mov
std
hlt
mov
sbb
idiv
cld
sub
or
add
fwait
dec
mov
inc
sbb
stos
inc
inc
out
test
sbb
adc
add
lahf
sti
jmp
inc
xor
add
in
jae
add
clc
push
in
es
aas
ja
add
aaa
std
xchg
jg
cmp
add
icebp
mov
push
inc
xor
add
cld
and
add
out
cli
pop
lock
cld
idiv
not
pop
xor
fucomp
clc
dec
aas
gs
pop
clc
inc
inc
std
jle
lahf
jecxz
nop/reserved
and
std
mov
xchg
inc
add
clc
inc
sub
out
(bad)
out
ret
inc
sub
out
iret
out
ret
cwde
jae
std
loop
add
mov
or
jg
(bad)
clc
dec
jg
mov
inc
shr
(bad)
adc
psubw
jae
(bad)
lock
stc
in
jae
(bad)
lock
in
es
aas
js
mov
add
sbb
xlat
ret
mov
jl
sti
sub
mov
add
push
inc
or
cld
xbegin
add
cld
xbegin
push
jg
shr
jl
aas
div
cmps
lahf
jmp
push
cs
xchg
fsub
or
shr
dec
inc
sbb
sbb
ret
(bad)
jnp
(bad)
arpl
sub
add
(bad)
arpl
sub
adc
push
xchg
dec
jg
sbb
dec
inc
sbb
aas
gs
cli
or
shr
(bad)
adc
psubw
jae
(bad)
lock
stc
in
jae
(bad)
lock
jle
jg
imul
jg
ja
pop
inc
imul
sbb
call
jp
in
mov
cmp
ins
inc
retf
sbb
xchg
cmp
dec
push
or
add
sti
call
inc
add
lock
scas
xchg
sti
data16
add
daa
cwde
mov
(bad)
ss
push
aam
sbb
push
mov
inc
loop
fisub
les
ret
push
xchg
lds
fsub
mov
sbb
jmp
jae
or
(bad)
outs
adc
lahf
clc
xchg
sahf
aas
in
mov
and
mov
(bad)
popf
fnstsw
cmp
inc
mov
pop
xchg
push
in
rcl
sbb
retf
sbb
pushf
mov
pop
ja
inc
imul
outs
in
fistp
fidivr
dec
cmp
aam
imul
sbb
mov
mov
das
in
jae
int
cmp
xchg
shl
lock
aad
xchg
stos
or
sub
mov
add
mov
sub
rcr
int3
mov
push
into
(bad)
jo
mov
pop
sbb
mov
loop
fstp
aad
movs
scas
xlat
dec
das
fadd
idiv
lock
jmp
mov
jecxz
popf
cs
push
xchg
cmp
mov
scas
and
addr16
or
sar
sbb
in
and
mov
xor
fs
(bad)
pop
pop
xchg
mov
mov
mov
lods
cld
jmp
sbb
ret
inc
or
loop
test
or
fcomp
fst
retf
pop
ss
jnp
pop
das
fadd
sahf
mov
mov
jbe
stos
call
inc
xchg
mov
push
clc
retf
mov
ss
mov
dec
loop
xchg
iret
into
aas
or
push
(bad)
pop
daa
shl
sub
aam
in
adc
dec
out
cmc
push
inc
sbb
cmp
add
ror
lods
hlt
sbb
push
mov
cmps
jl
std
movs
xor
imul
mov
jns
xor
inc
in
in
imul
imul
clc
std
loop
fisub
loope
xlat
mov
imul
stos
push
cdq
sbb
(bad)
mov
inc
inc
mov
push
lods
push
push
dec
push
fmul
in
iret
int
mov
aas
les
(bad)
ror
adc
mov
add
retf
test
jns
movs
js
pushf
mov
fcmovnu
mov
(bad)
(bad)
mov
pop
jns
aaa
ret
mov
mov
inc
ror
xchg
adc
shl
aas
dec
jmp
fcos
add
xchg
mov
sbb
dec
mov
push
pop
test
iret
jo
mov
test
pop
clc
lods
jecxz
in
clc
stc
jnp
xchg
cmc
in
aas
add
rcl
sbb
jecxz
dec
xchg
and
stc
cwde
arpl
fldl2t
pop
lahf
mov
in
leave
paddsb
icebp
add
xlat
dec
mov
les
mov
sbb
(bad)
enter
or
call
add
iret
cld
and
pop
inc
call
idiv
pop
fstp
or
push
xlat
mov
imul
ins
cmp
cdq
dec
sbb
mov
daa
mov
xchg
out
sub
mov
mov
and
inc
pop
add
jmp
inc
aad
inc
mov
push
jmp
pop
ins
dec
cwde
jns
xor
out
repz
test
push
ret
aas
mov
adc
shl
mov
jae
outs
in
dec
adc
xor
xor
adc
(bad)
fdivr
in
popa
lock
clc
mov
lea
ret
mov
dec
push
jae
es
inc
push
xor
add
cmps
movs
jp
(bad)
out
fld
(bad)
aas
mov
and
out
xchg
jg
fdiv
inc
add
fcom
add
clc
ret
ret
imul
cli
mov
add
xchg
ret
and
adc
sub
jb
lock
psubusw
daa
sar
sbb
push
mov
cmp
dec
mov
outs
cmc
or
movs
pusha
(bad)
jmp
jge
repnz
mov
pop
jns
scas
(bad)
dec
pop
dec
std
lock
loope
and
push
(bad)
cmc
jns
retf
repnz
push
sti
and
push
jo
inc
ins
std
fidiv
fsub
dec
pop
(bad)
rcr
or
pop
mov
sub
xchg
mov
scas
add
scas
movs
dec
add
cli
jae
xor
outs
ret
jecxz
sub
ror
dec
inc
lock
icebp
jmp
jmp
fist
jmp
mov
jno
xchg
pop
int3
je
popa
pop
retf
mov
pop
add
fstp
mov
jle
fist
shr
mov
test
loop
cmp
pop
in
push
pop
cmp
loope
pop
test
xor
push
clc
add
es
not
sub
cdq
sbb
fs
lds
test
ins
ret
sub
add
clc
fwait
lock
cli
cmps
mov
mov
call
jbe
fadd
es
inc
jno
das
mov
add
ins
aas
hlt
or
test
add
xor
(bad)
and
pop
jbe
ficom
mov
push
push
jbe
mov
idiv
in
dec
mov
inc
adc
mov
jae
scas
aad
adc
je
xchg
loope
xchg
or
imul
adc
jle
jbe
xchg
mov
add
clc
sbb
xlat
adc
jecxz
call
mov
add
popa
xchg
push
mov
inc
retf
lods
mov
mov
jmp
ds
daa
clc
pop
loope
inc
mov
fwait
sbb
sub
je
ds
in
xchg
sti
paddb
clc
jne
outs
sbb
push
(bad)
jecxz
mov
fwait
leave
daa
mov
and
ret
jns
ins
shl
mov
daa
call
add
jmp
inc
shr
hlt
fsub
dec
inc
in
or
loop
mov
cld
sbb
xor
hlt
fwait
div
cld
cmp
mov
mov
sbb
mov
or
mov
sbb
push
add
mov
sub
(bad)
mov
pop
out
test
push
mov
mov
lds
fsub
sbb
xlat
push
push
jle
rcr
pop
sbb
add
inc
mov
mov
cld
xor
pop
imul
enter
xor
inc
add
clc
adc
add
mov
or
mov
into
pop
retf
imul
xor
add
or
dec
int3
or
mov
fwait
lds
xchg
lahf
add
or
mov
ja
inc
clc
jp
pop
lock
std
sahf
dec
mov
mov
mov
int3
jle
jl
aam
adc
sahf
mov
ss
fidivr
ret
sbb
and
jg
hlt
jb
addr16
call
aam
cmp
shl
sti
retf
or
jecxz
dec
ins
xchg
and
jbe
(bad)
mov
pop
pop
pop
in
inc
(bad)
movs
stos
clc
jnp
mov
(bad)
mov
leave
and
stc
call
ds
(bad)
sub
ds
clc
add
test
leave
movs
inc
push
cdq
sub
aam
sbb
xchg
push
inc
fsub
fs
push
pop
icebp
outs
loope
mov
imul
pop
(bad)
outs
pushf
ins
in
pop
int3
mov
hlt
scas
(bad)
(bad)
loope
ret
lahf
sbb
lea
add
cs
ins
dec
dec
jns
popa
gs
xchg
dec
add
xchg
and
imul
adc
retf
add
dec
jb
jnp
or
loop
fdivr
xchg
and
or
cmp
mov
das
daa
jge
in
cld
out
add
jmp
mov
add
clc
or
ins
cmp
cmp
imul
fisubr
daa
mov
mov
cmps
in
xchg
mov
add
dec
sar
call
(bad)
mov
jne
cld
dec
lock
les
dec
inc
push
lock
cmps
mov
rcr
outs
mov
pop
add
jns
lods
(bad)
es
mov
adc
add
aas
mov
xor
shr
je
push
push
mov
in
lods
jle
xor
nop
adc
sbb
pop
enter
arpl
xchg
in
push
lock
push
dec
clc
jg
shl
sar
jge
mov
xor
out
sbb
and
and
fistp
mov
mov
sahf
fldcw
adc
inc
clc
inc
loope
icebp
pop
xchg
dec
pop
(bad)
std
ds
jge
xlat
sub
lock
out
sbb
jg
fld
dec
xchg
dec
mov
cdq
outs
and
mov
push
mov
mov
pop
sbb
into
adc
inc
pop
fidiv
push
mov
jl
add
loop
clc
es
xor
inc
cmps
imul
dec
add
stos
out
cli
or
push
dec
jle
pop
adc
aaa
clc
push
pop
jg
xchg
dec
mov
mov
pop
dec
and
scas
pop
sub
xor
ds
cli
lods
lock
loop
scas
jecxz
dec
loop
mov
call
imul
test
(bad)
jo
jo
mov
cmps
or
adc
js
pop
xchg
ins
cmp
out
cdq
(bad)
sbb
lea
jge
jbe
xchg
pop
fwait
jle
std
mov
jl
icebp
out
mov
cmps
popf
sub
push
int
jo
adc
add
and
fucom
add
dec
iret
mov
fidiv
mov
into
movs
cmps
pop
sar
and
mov
loope
repnz
aas
mov
pop
fcos
add
aas
fnstcw
mov
(bad)
mov
mov
aaa
add
(bad)
adc
inc
fistp
ja
call
das
inc
or
mov
in
fcomp
in
ret
cld
adc
add
push
xchg
mov
add
(bad)
std
test
ficom
(bad)
jl
loop
int
les
jl
pop
lods
push
add
jg
cli
or
and
xlat
inc
mov
mov
sbb
xor
sub
pop
data16
xchg
pop
retf
ja
sub
lods
xor
jle
pop
push
mov
mov
call
loop
xchg
pop
enter
and
sub
xchg
push
push
cmp
loopne
in
cmps
jecxz
fidiv
out
(bad)
adc
fld
mov
out
in
cdq
fmul
hlt
scas
mov
lock
inc
mov
cmp
jne
lds
xchg
loop
cmp
mov
jmp
add
push
xor
lahf
push
xchg
or
outs
outs
paddsb
sub
pop
inc
dec
jg
int3
and
fisttp
ret
or
jg
pop
mov
daa
lahf
dec
icebp
mov
fiadd
sub
int
mov
push
sbb
mov
scas
xor
pop
cld
test
jo
rcl
les
push
js
imul
cmps
jmp
push
xchg
mov
add
jmp
xor
icebp
aas
dec
div
(bad)
loop
ret
jge
push
clc
pop
out
fisub
add
and
xchg
add
cmp
xor
jp
mov
jle
js
ud2
js
fisub
cmps
xor
dec
lods
jnp
dec
mul
in
outs
inc
lahf
mov
ret
pop
mov
add
push
mov
in
mov
in
push
sbb
xchg
mov
mov
fsub
sub
ror
(bad)
lods
cmc
or
mov
dec
push
xor
(bad)
retf
xlat
daa
mov
pop
xchg
fdivr
sbb
test
xchg
cld
pop
sti
xor
dec
nop
jmp
jg
mov
cmc
pop
aaa
out
fsubr
repnz
add
adc
loope
add
scas
cs
jae
add
jmp
(bad)
in
fwait
ins
mov
fnsave
scas
pop
movs
jnp
xchg
inc
add
clc
add
pop
jge
ret
jp
xchg
(bad)
test
push
fsubrp
out
js
mov
and
adc
cmp
aam
adc
jge
in
jle
push
pop
push
(bad)
or
call
pop
push
aas
lock
or
mov
cmp
sub
pop
sbb
repz
jmp
addr16
pop
shl
pushf
js
hlt
inc
mov
lea
in
dec
add
outs
or
(bad)
neg
ja
shl
mov
fisubr
aam
imul
cmp
mov
mov
cs
ss
mov
cmp
mov
xor
call
push
aam
jo
inc
jp
leave
push
xchg
push
inc
dec
add
adc
sbb
aas
ins
cmp
enter
shl
adc
pusha
mov
shl
adc
shl
adc
shl
adc
add
(bad)
(bad)
xor
rol
stos
jle
repnz
jp
shr
mov
je
aas
imul
jg
jge
add
das
inc
jecxz
ds
sub
jg
and
inc
inc
pusha
mov
jl
pop
ins
inc
shr
in
clc
(bad)
inc
daa
inc
inc
or
and
xchg
pop
jl
shr
sub
pop
in
mov
xor
ret
xlat
sub
scas
or
mov
shl
dec
shl
mov
aas
ins
jg
inc
fcomp
push
xlat
pop
icebp
out
push
pop
adc
cmp
(bad)
aaa
mov
and
adc
pextrw
sbb
or
(bad)
jg
jae
or
sub
clc
mov
(bad)
loopne
scas
jno
test
(bad)
not
dec
(bad)
cld
test
loop
add
sbb
mov
inc
popf
cld
pop
sbb
popw
jno
call
cmps
(bad)
fistp
add
dec
mov
or
cli
adc
cmp
sar
push
(bad)
icebp
or
pop
daa
ins
stos
cli
pushf
push
rcl
aas
fisttp
dec
lock
jg
push
sub
pop
add
retf
test
jg
jecxz
imul
dec
loopne
(bad)
(bad)
cli
fmul
in
or
xchg
inc
(bad)
inc
scas
mov
loope
mov
add
retf
js
sti
ds
push
aas
add
inc
(bad)
sbb
out
out
inc
xchg
enter
aad
clc
and
inc
sti
or
xchg
mov
mov
cdq
mov
jg
sub
psubq
dec
cld
xchg
mov
iret
pop
out
pop
cmp
ss
inc
lock
ins
pusha
adc
in
div
lds
lahf
fisubr
loopne
sti
cli
iret
(bad)
xchg
sub
sahf
rol
pop
lock
cmp
popa
mov
jbe
aam
hlt
or
clc
repz
and
scas
xor
push
adc
hlt
push
aam
fcomp
adc
mov
add
std
imul
lahf
adc
add
arpl
add
ins
pop
pop
cld
adc
ret
inc
scas
retf
jg
add
pushf
jg
pop
cld
jne
push
ss
jg
imul
aam
cwde
outs
outs
out
mov
sub
arpl
xchg
push
jno
inc
jp
cld
adc
inc
pop
sbb
mov
(bad)
pop
xor
test
gs
std
popf
cmp
scas
fsubr
sahf
push
lea
shl
(bad)
add
ins
sbb
sbb
add
mov
clc
test
cmp
xlat
mov
das
cmp
xor
(bad)
sub
lahf
clc
sub
in
xchg
loop
fcomip
in
inc
movs
jmp
shl
push
test
inc
sar
daa
dec
aam
retf
lods
jb
out
in
daa
jecxz
sbb
mov
xchg
hlt
sbb
sar
rcr
jg
icebp
sahf
(bad)
call
dec
ja
inc
inc
arpl
sub
lods
add
push
mov
leave
aas
hlt
push
scas
lods
mov
clc
and
aas
add
fwait
stc
push
sub
jg
inc
out
je
push
daa
sbb
out
gs
dec
jle
jmp
lds
movs
cmps
js
sbb
(bad)
neg
or
in
xor
ds
movs
inc
push
xchg
sub
push
xchg
push
movs
xor
imul
or
pop
popa
cld
jno
arpl
pop
pop
jmp
ja
ss
fcom
xchg
push
into
cmp
pop
pop
repnz
(bad)
lahf
sbb
add
fneni(8087
mov
outs
scas
popa
pop
mov
xlat
mov
jl
sbb
jae
jecxz
repnz
mov
cmps
lods
ins
inc
sahf
mov
imul
push
cmp
jecxz
or
(bad)
cli
in
ss
ins
mov
jmp
and
adc
pop
sahf
pop
lock
scas
mov
clc
mov
or
push
add
push
pop
xchg
test
dec
jnp
mov
sbb
xor
mov
pop
mov
pop
dec
lock
test
stos
fwait
pop
jle
mov
mov
ds
adc
(bad)
jb
mov
pop
or
repnz
hlt
cmp
inc
jnp
push
fdiv
aas
clc
and
cld
mov
adc
add
repnz
add
mov
add
mov
hlt
mov
movs
xchg
lock
mov
inc
sub
pop
jle
cmps
fnsave
(bad)
out
aas
adc
add
repnz
add
mov
ins
pop
fcom
loop
mov
aam
ins
and
adc
sub
stos
test
cld
daa
scas
jle
pop
aaa
in
sub
add
jecxz
inc
ins
aas
stc
xor
outs
(bad)
mov
jmp
pop
inc
scas
sbb
push
cmp
adc
add
cmp
pop
or
cld
cdq
outs
mov
add
ja
call
psllq
dec
pop
test
inc
rcl
sub
and
add
lock
bound
fiadd
fld
in
sahf
(bad)
pop
push
xchg
mov
add
int3
cmp
inc
pusha
mov
jl
clc
cmp
idiv
cld
pop
cmps
sub
push
push
nop
daa
and
add
aam
jae
push
inc
outs
retf
call
(bad)
lock
dec
nop
leave
sub
mov
cld
lea
xlat
mov
inc
mov
inc
in
xchg
and
add
xor
jecxz
test
pop
adc
test
ror
adc
mov
fbstp
inc
sbb
inc
outs
pop
cs
and
data16
icebp
ja
cld
lds
test
xchg
(bad)
addr16
xor
in
enter
into
mov
sti
out
add
adc
push
loopne
retf
pop
(bad)
into
test
pop
fldenv
ss
pushf
jns
rcl
pop
mov
out
mov
fidiv
xchg
inc
inc
lods
data16
lahf
repnz
mov
lods
inc
hlt
xchg
mov
popa
(bad)
sbb
inc
aam
xor
xchg
dec
mov
dec
push
add
adc
stos
pop
mov
hlt
add
(bad)
std
movs
sub
shl
scas
fxch
and
fst
shl
mul
aas
add
loopne
inc
fmul
inc
shl
inc
shl
inc
or
inc
fistp
ret
fisttp
fist
ds
neg
ja
cmp
ins
push
(bad)
pop
outs
sbb
jl
icebp
scas
cdq
ins
sti
pop
jl
lock
repnz
adc
or
sub
and
push
mov
jne
outs
ja
stos
ins
aas
les
pop
retf
mov
push
dec
add
std
nop
mov
jecxz
(bad)
std
addr16
mov
push
mov
daa
lea
sub
xor
sbb
or
lds
shl
imul
or
aas
xchg
(bad)
push
aaa
sar
cld
outs
std
mov
lahf
dec
mov
push
xchg
nop
inc
or
and
adc
addr16
lahf
mov
in
ins
jecxz
add
lea
inc
loope
or
add
pop
xor
dec
repz
sbb
sub
popa
in
inc
jmp
das
test
mov
cmp
inc
movs
push
into
sbb
xor
arpl
popf
mov
inc
add
das
adc
add
int3
(bad)
es
xor
add
addr16
dec
sbb
arpl
test
loop
sub
sar
iret
inc
add
icebp
xlat
ret
outs
sub
pushf
xchg
cmp
scas
test
arpl
mov
cmp
mov
add
movs
mov
imul
and
imul
pop
lahf
cmps
fisubr
or
add
fbld
jmp
imul
inc
jle
jmp
xchg
jno
add
pop
icebp
setno
je
rcr
xor
std
cld
(bad)
xlat
dec
cmp
jno
mov
add
xchg
mov
retf
(bad)
adc
sahf
inc
in
arpl
movs
aad
repnz
xchg
inc
into
cmps
cmp
(bad)
mov
and
jmp
xchg
cmp
iret
popa
lods
and
and
add
pop
mov
fisttp
pop
call
cmps
adc
push
pop
retf
and
in
fidivr
iret
clc
dec
aas
imul
push
pop
ins
sti
gs
dec
cmp
xlat
ficom
pop
addr16
jmpw
and
xor
pop
lock
int
jmp
sbb
or
sbb
dec
std
xor
sbb
jmp
leave
out
out
inc
jge
inc
inc
dec
pop
add
add
pop
aas
in
mov
sub
add
ins
xchg
cli
ins
movs
cld
xor
int3
clc
leave
scas
clc
out
in
(bad)
popa
aam
fistp
pop
stc
js
test
push
fstp
sbb
or
neg
daa
xchg
dec
shl
fldenv
data16
fild
pop
les
cmp
fdiv
jecxz
les
jbe
add
add
inc
mov
sbb
xor
imul
int
sahf
ss
ret
mov
fs
jb
cmp
aas
jbe
pop
clc
push
loopne
(bad)
loope
pop
fiadd
movs
outs
jmp
push
push
mov
sbb
xor
repnz
clc
es
mov
push
aaa
rep
icebp
push
stos
and
jmp
mov
mov
adc
jp
mov
out
mov
inc
push
cmp
xchg
retf
in
cmp
lods
fbstp
pushf
outs
cld
adc
ret
mov
inc
imul
shl
(bad)
lahf
cmps
jmp
sub
out
lds
jecxz
rcr
call
push
test
jno
sahf
lods
mov
mov
sub
jg
dec
pusha
inc
pop
adc
add
je
push
retf
xchg
mov
dec
xor
cmp
shl
mov
std
sahf
jle
clc
stos
jecxz
xchg
push
mov
ret
test
sbb
push
and
pushf
arpl
retf
pop
sbb
cld
adc
repnz
add
push
fisubr
jmp
retf
nop
jp
aad
inc
pop
aas
imul
mov
sub
fcomp
adc
xchg
arpl
stos
dec
retf
stos
inc
scas
jle
repz
xchg
les
stc
pop
loope
jle
mov
in
pop
sub
push
inc
stos
mov
mov
pop
bound
test
fwait
sti
(bad)
out
pop
inc
shl
aad
lahf
pop
mov
(bad)
sub
xchg
mov
call
mov
xor
push
lea
push
xor
cld
or
pop
mov
ds
sar
mov
pop
cmc
mov
outs
sbb
push
clc
push
loop
add
mov
fisub
push
jbe
and
(bad)
jbe
movs
jl
icebp
out
ret
clc
jae
iret
(bad)
pop
pop
cld
inc
imul
inc
sbb
fidivr
xchg
and
inc
daa
sbb
sbb
lds
ss
mov
dec
imul
mov
rcr
xor
jecxz
sbb
add
ret
sbb
push
mov
jg
pop
ret
js
iret
dec
(bad)
neg
int
stos
pop
movs
div
leave
xor
mov
mov
fadd
ss
pop
loop
pop
lock
cld
addr16
ret
outs
xchg
leave
mov
fwait
adc
jne
ss
mov
xor
sbb
pop
mov
pop
jmp
mov
scas
lds
pop
lds
outs
sbb
mov
sete
and
adc
idiv
and
mov
or
std
stos
and
shl
sub
rcr
mov
(bad)
jne
bnd
pop
(bad)
pop
pop
and
test
fdivr
dec
sub
ins
mov
inc
dec
mov
mov
push
mov
ror
ror
inc
jnp
fist
dec
(bad)
fmul
sub
push
sub
push
sub
push
sub
daa
inc
add
cmp
scas
cmp
out
xchg
(bad)
inc
cmp
sar
add
dec
psubw
out
add
mov
stos
mov
push
test
shr
and
lds
push
das
es
mov
fcomp
arpl
test
mov
loop
mov
dec
(bad)
push
fistp
sub
mov
pop
jg
push
and
sub
(bad)
cmp
jle
pop
loope
xor
enter
cmc
lods
dec
sbb
mov
jge
(bad)
sti
lds
aad
sti
stos
push
sub
sbb
jae
xchg
js
pushf
mov
mov
jl
hlt
clc
jg
fisttp
dec
cmps
les
aaa
xor
mov
(bad)
neg
adc
mov
inc
sar
into
add
jge
out
and
mov
cmps
test
cmp
jl
clc
mov
inc
xlat
mov
xor
(bad)
leave
adc
pop
xor
pop
repz
clc
mov
mov
aas
adc
movs
cmp
(bad)
in
dec
in
repnz
out
in
loop
sub
and
cmp
dec
dec
mov
xor
dec
dec
out
cmp
icebp
stos
loop
xor
cmp
jecxz
imul
cmp
mov
out
sbb
jp
push
scas
dec
ins
sbb
dec
xor
jecxz
mov
pop
les
cmc
(bad)
mov
jmp
popf
cmp
xchg
clc
stc
mov
add
in
jns
retf
inc
rcl
jmp
dec
and
(bad)
xor
pop
jno
inc
dec
repz
(bad)
aad
pop
in
mov
pop
mov
lea
mov
aam
dec
and
dec
scas
rol
pop
push
cmp
lock
loop
ret
aad
cmp
sub
shr
adc
out
popf
mov
cmps
test
popf
out
cmp
push
and
pop
mov
ds
pop
aad
push
dec
das
outs
in
gs
test
dec
add
adc
pop
les
xchg
cli
jg
mov
sar
rol
fnsave
repnz
or
push
sub
sub
xchg
mov
sar
leave
loop
loop
inc
(bad)
adc
into
jle
pop
mov
xlat
cmp
stos
jle
clc
movs
jecxz
add
mov
fidivr
xor
mov
jecxz
adc
lea
(bad)
mov
jl
loope
hlt
pop
pop
loop
lods
ins
movs
mov
xchg
mov
sub
cmps
shl
pop
push
jg
stos
loop
jp
pop
(bad)
cmc
sbb
int
imul
push
and
aaa
test
test
inc
fimul
adc
jg
imul
call
sub
retf
mov
mov
sbb
fwait
sti
inc
pop
aad
xor
push
aam
pop
leave
cmp
and
aad
mov
xor
aad
daa
je
es
js
loop
mov
(bad)
pop
clc
dec
lds
xchg
and
adc
push
shl
add
lods
jle
lahf
sbb
cmps
les
fldcw
jne
loopne
std
sub
inc
adc
adc
cmp
jecxz
lds
call
aas
icebp
add
cmp
dec
pop
sbb
jmp
and
jmp
or
cmps
(bad)
mov
std
and
jnp
scas
frstor
iret
inc
sbb
setge
jl
icebp
jle
test
mov
sar
cmovno
lds
aas
push
xchg
std
fwait
jno
adc
mov
adc
dec
mov
mul
adc
sbb
fdivr
fnstcw
les
lahf
jecxz
pop
jmp
imul
sbb
aaa
xor
jle
js
ret
repz
adc
jmp
mov
cli
inc
adc
xor
xchg
iret
dec
add
inc
mov
pusha
out
fild
sysexit
sbb
or
aaa
mov
pop
pop
retf
cmp
sahf
mov
js
neg
inc
fwait
inc
icebp
jg
sub
scas
mov
call
sbb
inc
adc
sbb
jl
clc
pop
movs
dec
cmps
js
(bad)
sbb
int
or
mov
sbb
movs
lock
inc
mov
mov
pop
jmp
cmp
or
retf
inc
(bad)
cmp
or
pusha
ins
mov
sar
(bad)
jg
inc
cld
fs
pop
aam
pop
(bad)
and
mov
int
aad
movs
xchg
aam
ficom
sbb
add
add
pop
ret
(bad)
push
clc
sar
ret
jmp
mov
aam
out
add
fiadd
sahf
sub
or
(bad)
clc
iret
mul
bswap
mov
cmc
imul
aaa
pop
jl
cmp
jbe
sbb
mov
cld
jno
scas
(bad)
out
pop
or
push
lock
ror
ret
or
ins
mov
inc
out
xchg
mov
cmc
jge
loop
xchg
mov
fsubr
mov
repz
adc
add
(bad)
cmps
cld
adc
mov
mov
sbb
fsubrp
cmp
inc
mov
adc
stc
fnsave
mov
into
js
into
ret
lea
cld
pop
jecxz
addr16
les
stos
jmp
jo
lock
add
xchg
push
nop
je
or
pop
shr
cdq
dec
mov
js
and
mov
call
in
lods
push
sub
repnz
in
jae
xlat
jg
pop
mov
and
das
mov
dec
dec
outs
jne
inc
enter
add
sbb
scas
arpl
sbb
sbb
cmps
jae
imul
mov
dec
push
in
fsub
les
fnsave
ret
out
jae
sti
dec
jl
mov
(bad)
daa
xor
movs
pop
sbb
add
sbb
mov
dec
test
outs
xchg
ret
aam
or
mov
test
fwait
sbb
jno
pushf
outs
es
shl
cs
mov
mov
(bad)
fstp
loop
(bad)
repnz
mov
sub
bound
repnz
scas
out
repnz
fdiv
dec
arpl
ins
cmp
test
(bad)
ss
jecxz
adc
cmp
xchg
push
lock
mov
ins
sti
inc
test
ss
ins
jo
fmul
inc
cld
popa
clc
stos
movs
mov
loop
push
jmp
and
and
inc
add
retf
out
rcl
jg
(bad)
push
jmp
shl
retf
mov
add
loope
mov
lods
inc
mov
mov
jmp
cmps
stos
imul
mov
add
cld
or
rol
fwait
ret
ds
cmp
in
jp
test
outs
lods
call
sub
ret
aaa
and
pop
or
dec
(bad)
fisubr
lock
mov
cmp
cmps
js
push
mov
adc
fimul
or
outs
sbb
iret
xor
jnp
jbe
jbe
pop
sbb
inc
icebp
mov
jl
loop
push
les
ja
aas
mov
call
jmp
imul
lea
sar
jmp
imul
mov
push
add
pop
inc
in
add
mov
ss
adc
cmp
shr
jp
test
das
sahf
not
dec
iret
cmp
std
in
std
jae
pop
mov
in
jne
(bad)
fild
mov
in
fst
mov
push
out
push
lods
pusha
out
je
not
repz
int
jns
out
scas
daa
jb
and
movs
cwde
repnz
mov
inc
fcmovbe
xor
inc
mov
cmp
adc
imul
shl
lea
pusha
or
cmc
cmps
ins
lods
adc
xchg
dec
les
shl
mov
ins
mov
push
sub
mov
add
sar
dec
sti
rcr
inc
movs
aaa
adc
das
dec
jmp
fistp
stos
mov
ds
in
inc
dec
inc
je
fwait
xchg
push
push
rol
in
push
mov
pusha
mov
pop
cs
inc
dec
inc
push
or
and
push
mov
pusha
mov
pop
cs
inc
dec
inc
push
or
and
push
mov
pusha
mov
pop
cs
inc
dec
inc
push
or
and
push
mov
pusha
mov
pop
cs
inc
dec
inc
push
or
and
push
mov
pusha
mov
pop
cs
inc
dec
inc
push
or
and
push
mov
pusha
mov
pop
cs
inc
dec
inc
push
or
and
push
mov
pusha
mov
pop
cs
inc
dec
inc
push
or
and
rcr
shl
ss
sub
or
ror
cs
sbb
imul
push
ins
mov
jecxz
shl
add
movs
fild
sub
and
inc
ficom
add
lahf
inc
push
or
cmp
add
add
idiv
nop
fcom
adc
jecxz
dec
out
sar
inc
movs
aaa
adc
jp
loopne
in
jmp
ds
int3
gs
sub
xchg
push
jmp
(bad)
sub
jecxz
aam
in
inc
imul
or
push
aad
aaa
cld
adc
(bad)
ret
les
lock
scas
inc
cmp
mov
or
cmc
jnp
sbb
dec
out
icebp
xlat
rcr
add
jmp
ins
pop
mov
pop
lods
outs
jl
inc
jge
inc
or
movs
jg
jbe
pop
inc
daa
inc
pop
inc
cld
xor
inc
inc
fcmovnb
pop
clc
sbb
cld
pop
push
(bad)
aas
shl
iret
xchg
sub
xor
cli
fiadd
inc
shl
add
call
sar
call
add
xchg
inc
mov
cmp
and
xor
inc
inc
fcmovnb
pop
clc
sbb
cld
pop
pop
lock
pop
outs
add
jb
icebp
je
pop
inc
dec
xchg
ds
mov
xchg
sar
call
add
xchg
inc
mov
inc
mov
push
dec
(bad)
cs
imul
xor
addr16
jg
sar
pop
outs
add
jb
icebp
je
ret
add
mov
leave
inc
vpaddsw
es
stc
adc
das
dec
inc
mov
push
dec
(bad)
cs
clc
pusha
mov
cmp
cmp
clc
mov
ret
xchg
lahf
and
pop
inc
ret
add
mov
leave
inc
(bad)
add
movs
jg
jbe
pop
inc
daa
inc
pop
inc
mov
hlt
cwde
jb
in
sub
mov
dec
cmp
clc
mov
(bad)
cli
fiadd
inc
shl
add
call
push
push
jl
inc
jge
inc
or
movs
jg
jbe
pop
inc
daa
inc
pop
inc
cld
xor
inc
inc
fcmovnb
pop
clc
sbb
cld
pop
push
(bad)
aas
shl
iret
xchg
sub
xor
cli
fiadd
inc
shl
add
call
sar
call
add
xchg
inc
mov
cmp
and
xor
inc
inc
fcmovnb
pop
clc
sbb
cld
pop
pop
lock
pop
outs
add
jb
icebp
je
pop
inc
dec
xchg
ds
mov
xchg
sar
call
add
xchg
inc
mov
inc
mov
push
dec
(bad)
cs
imul
xor
addr16
jg
sar
pop
outs
add
jb
icebp
je
ret
add
mov
leave
inc
vpaddsw
es
stc
adc
das
dec
inc
mov
push
dec
(bad)
cs
clc
pusha
mov
cmp
cmp
clc
mov
ret
xchg
lahf
and
pop
inc
ret
add
mov
leave
inc
(bad)
add
movs
jg
jbe
pop
inc
daa
inc
pop
inc
mov
hlt
cwde
jb
in
sub
mov
dec
cmp
clc
mov
(bad)
cli
fiadd
inc
shl
add
call
push
push
jl
inc
jge
inc
or
movs
jg
jbe
pop
inc
daa
inc
pop
inc
cld
xor
inc
inc
fcmovnb
pop
clc
sbb
cld
pop
push
(bad)
aas
shl
iret
xchg
sub
xor
cli
fiadd
inc
shl
add
call
sar
call
add
xchg
inc
mov
cmp
and
xor
inc
inc
fcmovnb
pop
clc
sbb
cld
pop
pop
lock
pop
outs
add
jb
icebp
je
pop
inc
dec
xchg
ds
mov
xchg
sar
call
add
xchg
inc
mov
inc
mov
push
dec
(bad)
cs
imul
xor
addr16
jg
sar
pop
outs
add
jb
icebp
je
ret
add
mov
leave
inc
vpaddsw
es
stc
adc
das
dec
inc
mov
push
dec
(bad)
cs
clc
pusha
cmp
fstp
jl
lock
sti
js
aas
and
cli
dec
cmp
and
sbb
arpl
mov
mov
stos
jmp
xor
jae
mov
nop
sbb
pop
inc
in
xlat
mov
xchg
xchg
scas
pop
jno
(bad)
mov
cli
sub
retf
push
add
cmps
rol
mov
mov
add
sub
push
add
cmps
rol
mov
mov
add
sub
push
add
cmps
rol
scas
mov
bnd
add
add
scas
sahf
sub
lahf
clc
daa
iret
cld
popf
xlat
cmp
dec
outs
sub
ffreep
xchg
mov
js
inc
fidivr
mov
int
ins
cmps
rol
fistp
jle
xor
cmc
jmp
inc
aad
jg
push
jbe
or
mov
add
sbb
test
inc
sti
or
add
mov
pop
out
xchg
pop
popa
(bad)
mov
mov
sbb
call
pop
dec
sbb
mov
lods
in
sar
pop
pop
xchg
pop
and
test
repnz
enter
and
xchg
jmp
dec
inc
fimul
sar
dec
icebp
outs
push
mov
pop
xor
in
shl
test
nop
mov
xor
dec
clc
mov
addr16
test
ss
mov
jp
sub
sbb
xor
enter
mov
push
aas
icebp
sbb
or
dec
movs
mov
daa
sbb
mov
pop
aaa
ja
fadd
in
mov
fcmovne
mov
jns
cld
call
mov
adc
adc
xlat
pop
aad
mov
(bad)
jmp
jbe
adc
xchg
mov
or
push
jno
xor
ret
push
ret
clc
cmc
scas
clc
imul
das
adc
mov
call
shl
and
in
and
push
push
mov
sbb
push
sub
adc
push
xchg
test
push
mov
mov
movs
outs
mov
loope
shl
sahf
(bad)
mov
or
dec
test
imul
gs
dec
cmps
fstp
add
or
cmp
add
jo
rcr
loope
adc
or
dec
push
popa
sbb
add
retf
mov
and
jecxz
pop
in
push
ret
mov
not
out
test
fnsave
and
push
dec
push
inc
out
out
pop
xchg
mov
mov
sti
adc
loopne
arpl
es
cs
adc
xchg
push
in
clc
mov
inc
push
ins
inc
popa
int
(bad)
cmp
js
cmc
mov
mov
aad
inc
repnz
inc
and
mov
push
fnsavew
shr
push
clc
push
mov
jno
popf
loope
jns
retf
aad
inc
sar
mov
jp
mov
push
aam
(bad)
push
and
jnp
sti
pop
les
inc
xchg
icebp
ds
loop
data16
pop
paddsw
sbb
lods
push
enter
pop
out
repz
cmp
pop
lahf
lock
or
out
mov
mov
imul
(bad)
into
push
int3
mov
add
jle
enter
je
cmp
retf
jecxz
int3
mov
push
mov
cdq
fisttp
mov
(bad)
pop
inc
dec
jb
mov
dec
lahf
addr16
pop
fldenv
fwait
sbb
test
icebp
sti
dec
cld
inc
shl
ds
pop
call
scas
push
nop
retf
mov
das
pop
xchg
or
lahf
sti
inc
jle
fiadd
aas
push
cmp
imul
or
pop
aad
cmp
sub
cmps
jmp
(bad)
mov
ror
cmc
loopne
cmp
movs
cmp
inc
mov
push
movs
icebp
xor
sub
pop
mov
dec
pop
cmp
gs
fiadd
jg
xor
push
outs
cli
cmp
es
mov
and
lock
pop
inc
test
cwde
movs
pop
data16
call
mov
fidivr
es
icebp
or
call
jmp
mov
add
push
scas
loop
xor
pop
loope
xchg
rol
rcl
dec
fcmovb
test
ja
mov
inc
vmovaps
fild
int
scas
shr
sbb
pop
sbb
popf
jae
pop
mov
mov
lods
movs
mov
mov
and
sub
add
out
loopne
dec
cmp
jl
std
xchg
jl
lods
cld
aas
mov
inc
stos
femms
int
and
jo
jecxz
in
ds
inc
and
xchg
mov
sbb
out
inc
push
pop
vprotw
and
stos
cmps
loop
xchg
mov
aaa
imul
dec
mov
fnsave
mov
pop
movs
add
push
std
xchg
iret
mov
pop
xchg
mov
dec
dec
out
push
in
mov
mov
xchg
aas
fwait
pop
les
cmp
pop
loope
ret
jl
lock
das
vmread
jmp
mov
jmp
xor
add
fcmove
jae
leave
and
xchg
and
lock
in
xchg
and
xchg
dec
sub
div
pushf
pop
call
mov
(bad)
cmps
mov
mov
push
std
imul
add
jl
clc
in
out
sbb
aaa
jne
xchg
gs
inc
cli
aam
adc
xor
cmp
(bad)
push
push
sbb
in
je
aaa
inc
mov
cdq
inc
popa
push
fstp
jns
cmp
clc
jns
iret
or
inc
mov
mov
lock
jp
xchg
push
fimul
push
mov
pusha
das
add
cmc
cld
mov
xor
in
aad
push
cmps
std
cmps
(bad)
mov
jae
jnp
mov
push
enter
(bad)
jnp
ss
imul
or
ret
ficom
mov
pop
mov
js
mov
pop
jbe
shl
xor
xchg
inc
cmp
mov
popa
loope
mov
(bad)
pop
and
mov
pop
dec
xor
sbb
int3
test
inc
fmul
js
scas
lods
ret
js
xchg
sub
popa
pop
dec
xchg
jno
push
out
sub
pop
aaa
cmps
and
retf
ins
jns
cmp
xchg
(bad)
mov
jmp
(bad)
fstp
icebp
fadd
leave
movs
out
inc
inc
gs
ds
dec
lock
adc
mov
outs
cmps
fcomp
mov
jl
jae
or
jecxz
xor
adc
in
mul
sub
xlat
xor
enter
sahf
inc
jno
ja
mov
jne
mov
jle
dec
jno
xchg
mov
push
push
jle
ficom
xchg
jno
dec
or
loop
mov
(bad)
movs
xchg
in
in
jnp
(bad)
jbe
lods
iret
cwde
shl
mov
sbb
lds
sti
add
shr
pop
add
lahf
addr16
cmps
jge
je
retf
mov
add
fidiv
repz
std
lea
mov
in
mov
sub
cmp
fisubr
mov
jmp
inc
scas
and
loop
or
adc
out
aad
cmps
inc
fisub
repnz
sbb
ins
or
push
ret
sub
lahf
fnstenv
mov
fild
pop
jae
sti
push
clc
push
into
pop
xor
ficom
stos
sti
sub
pop
(bad)
call
sub
stc
cmp
scas
push
loope
in
inc
cmps
js
fcmovnb
push
call
jp
fisub
push
pusha
xchg
sub
call
lock
xchg
in
inc
(bad)
sahf
push
scas
sub
and
cmc
test
inc
jmp
repz
mov
mov
in
jle
mov
neg
and
xlat
fstp
pop
js
lds
jmp
add
mov
adc
pusha
pop
cmp
inc
sub
sbb
arpl
pop
xor
mov
cwde
hlt
pop
jno
cmp
out
test
push
dec
mov
mov
sbb
push
mov
and
scas
js
lock
es
addr16
push
retf
jo
movs
out
xchg
xchg
mov
cmp
in
sub
jmp
xchg
out
mov
dec
fwait
stos
sub
scas
xlat
mov
jle
into
mov
imul
add
and
out
out
data16
lea
and
pop
pop
push
xor
icebp
scas
mov
pop
push
xchg
mov
in
cmps
ret
imul
adc
or
jl
fmul
aaa
xor
push
outs
xor
ret
mov
sub
lods
in
sub
pop
or
sub
ror
adc
mov
outs
(bad)
jmp
call
loope
add
fsubr
popf
cmps
scas
jns
jbe
mov
repnz
dec
mov
in
sbb
daa
mov
mov
fdivr
lods
js
les
mov
ret
cmp
jmp
jns
mov
add
scas
mov
shr
div
fistp
frstor
gs
loop
push
dec
pop
stos
fsubrp
arpl
sbb
call
loopne
or
jne
je
in
inc
fcmovnb
push
xor
mov
mov
or
jle
jmp
nop
icebp
lds
push
clc
imul
adc
shr
push
push
adc
sub
sbb
jmp
stc
daa
mov
adc
sub
rcr
loop
pop
jbe
pop
push
push
mov
xlat
dec
outs
arpl
stos
xchg
lods
jae
jae
push
mov
sbb
mov
inc
pop
push
inc
ds
jne
push
imul
ret
xchg
lods
es
outs
in
push
xchg
push
imul
push
sbb
cld
adc
dec
(bad)
std
sub
hlt
add
leave
neg
jmp
lods
fnstcw
mov
mov
pop
mov
mov
inc
bound
ins
sbb
push
add
shl
ins
sbb
push
add
shl
ins
sbb
push
add
shl
ins
sbb
push
add
shl
ins
sbb
push
add
shl
ins
sbb
push
add
xlat
rcr
lock
mov
lahf
idiv
inc
movs
aaa
adc
inc
add
inc
xchg
mov
jg
or
push
hlt
xchg
clc
xlat
test
shr
mov
mov
mov
mov
xor
sub
sub
pop
fcom
fnstsw
sbb
inc
push
int3
jne
push
push
fdivr
fdiv
mov
push
jl
push
inc
adc
cmc
pop
cld
adc
lods
scas
fimul
(bad)
xor
mov
jb
mov
std
add
push
rcr
cmc
fwait
jne
adc
dec
cmps
lock
mov
out
cmp
xchg
jns
xchg
push
cmps
shl
pop
fst
push
cmp
mov
fist
and
popa
enter
out
mov
mov
pop
in
xchg
int
ftst
jno
dec
mov
jb
sahf
cmp
stc
mov
icebp
ds
xor
bound
aam
out
movs
push
ficom
fisubr
hlt
mov
or
out
jle
clc
xor
xor
mov
cs
sbb
add
and
xchg
cmp
push
rcr
shr
xor
cld
pop
sub
cmp
shl
test
push
out
jns
hlt
scas
into
scas
or
dec
icebp
pop
sub
add
stos
mov
pop
fimul
xor
xor
xor
(bad)
test
loop
outs
sbb
mov
(bad)
pop
mov
push
and
cdq
fstp
jl
lods
mov
add
idiv
jmp
pop
jmp
div
ficomp
je
mov
cli
dec
lock
sar
cmp
ins
dec
(bad)
imul
sbb
jg
arpl
test
sbb
adc
mov
icebp
xor
push
mov
into
repnz
lock
xor
xchg
(bad)
and
jl
icebp
xchg
imul
outs
push
imul
or
jne
mov
inc
outs
fnstsw
cmp
mov
xchg
mov
dec
dec
test
mov
(bad)
fsubr
out
sbb
les
cs
cmps
cmc
data16
fldcw
lock
rcr
scas
cmc
(bad)
and
iret
aad
cmps
jg
std
adc
mov
inc
mov
(bad)
inc
movs
in
push
cmc
(bad)
sbb
adc
test
mov
lahf
outs
lock
dec
add
jb
rcr
outs
in
ja
xor
packsswb
dec
icebp
dec
(bad)
outs
imul
sub
xchg
in
and
mov
sub
aaa
popa
dec
mov
sbb
push
mov
cmp
jl
mov
and
mov
xchg
cdq
data16
lahf
push
lahf
sub
loopne
popa
sbb
jo
xchg
push
loopne
test
dec
sub
lods
jl
pop
(bad)
cmp
push
mov
inc
mov
in
aas
addr16
imul
outs
lods
pop
mov
popf
and
add
cmp
cmp
xchg
pop
es
mov
(bad)
cmp
ds
jmp
jbe
call
out
stc
sub
nop
xor
dec
loop
in
(bad)
loop
pop
clc
inc
inc
ret
push
cli
push
xchg
loope
sub
cdq
scas
(bad)
cdq
or
outs
ins
iret
xchg
sub
int3
fldcw
leave
leave
leave
in
les
push
lock
jno
pop
inc
jae
int
lods
sbb
jge
dec
and
shl
add
push
xor
mov
xchg
pop
jl
dec
das
call
mov
xor
xor
or
inc
or
hlt
aas
dec
mov
fbstp
ins
and
and
push
jae
lds
sbb
pop
ror
out
cmp
sbb
outs
(bad)
mov
movd
rcl
aas
mov
mov
inc
sub
inc
and
test
lahf
fisubr
clc
cmps
jecxz
sbb
(bad)
ins
scas
clc
fwait
push
aad
arpl
xchg
or
fimul
out
(bad)
mov
pop
or
mov
ret
cmp
dec
div
add
das
jbe
add
sbb
scas
and
lock
shr
cmp
sub
(bad)
xor
mov
fnsave
jmp
push
cmp
jne
addr16
aad
or
inc
ret
xchg
inc
shl
push
mov
cld
jp
jb
dec
mov
repz
pop
sbb
push
and
xchg
imul
retf
hlt
imul
mov
mov
and
call
add
les
iret
icebp
stos
loop
fadd
jo
outs
loop
cmp
stc
sub
jmp
fnsave
pop
in
mov
dec
icebp
sub
jp
stos
pop
push
pop
int
pop
pop
lea
sub
leave
lahf
xor
fstp
jl
int3
jmp
adc
mov
ins
mov
jg
sbb
movs
hlt
mov
shr
inc
test
ins
arpl
out
push
inc
cmp
(bad)
call
iret
loope
iret
mov
scas
fldcw
ror
ret
xchg
in
cmp
cmps
cmp
das
shr
leave
add
js
mov
js
inc
dec
punpckldq
(bad)
pop
inc
and
pop
pop
pop
aam
pop
and
aam
pop
add
mov
xchg
(bad)
cli
mov
pop
test
loope
dec
imul
daa
cmp
add
xor
popa
(bad)
(bad)
push
les
lods
pop
xchg
jne
lds
daa
lods
movs
not
dec
pop
push
xchg
setnp
lea
inc
korb
jmp
push
aas
dec
outs
mov
lock
test
xchg
pop
outs
lock
loop
test
loopne
sbb
sti
xchg
das
mov
mov
cmp
pop
pop
xor
into
jecxz
arpl
adc
gs
sbb
jle
mov
cld
inc
(bad)
and
mov
inc
cmc
aam
retf
test
jno
stc
test
jmp
inc
sbb
fnsave
icebp
mov
jae
jae
xor
jl
aaa
cmp
ds
push
int3
loop
adc
push
movs
dec
xchg
ss
xchg
mov
push
pop
aad
sub
dec
je
std
pop
mov
call
add
fdivr
aas
or
int
(bad)
retf
jno
ins
test
jne
jecxz
repz
xor
jno
dec
icebp
test
in
add
mov
mov
retf
mov
ffree
sbb
(bad)
xchg
ret
push
pop
ror
out
iret
imul
cmp
(bad)
(bad)
mov
mov
aaa
div
mov
(bad)
sbb
cld
jb
add
pop
or
repz
pop
leave
add
add
add
push
fidivr
cmc
adc
jne
push
sar
or
push
aad
bound
bound
mov
in
icebp
(bad)
xor
xchg
push
adc
jg
jmp
jbe
add
ins
outs
jnp
and
ror
retf
clc
bound
fwait
ret
mov
loop
push
dec
mov
mov
outs
jae
mov
sub
lea
or
pop
pop
and
jo
sub
sub
mov
mov
outs
fs
adc
mov
stos
sbb
retf
fidivr
(bad)
shr
clc
(bad)
add
jg
add
popf
loop
pop
dec
icebp
(bad)
div
pop
cmps
imul
rcr
out
rol
push
pop
mov
dec
test
adc
xchg
mov
cmc
lods
ds
loop
mov
xor
lahf
jmp
inc
mov
iret
jp
or
sub
movs
fnstcw
leave
sbb
inc
sar
mov
adc
xchg
sub
test
inc
push
push
arpl
mov
cmp
out
data16
sbb
xchg
and
sahf
mov
addr16
add
inc
or
cs
lock
xchg
(bad)
dec
imul
cdq
sbb
add
out
fist
add
aas
jecxz
xor
dec
inc
in
dec
sti
mov
sub
ins
sbb
pop
mov
jnp
movs
clc
xchg
push
shr
scas
cwde
xor
(bad)
pause
dec
add
(bad)
scas
test
mov
mov
jg
imul
repnz
shr
pop
dec
(bad)
out
dec
out
and
pop
imul
(bad)
mov
cmps
sbb
inc
jne
jmp
mov
push
mov
xchg
ins
dec
pop
pop
popa
jge
xchg
mov
jecxz
psubusb
ja
clc
adc
mov
stos
dec
jmp
inc
adc
push
jno
dec
push
sbb
push
mov
out
int3
je
fcmovne
and
mov
add
hlt
js
test
cmp
mov
xor
popa
jge
xor
and
jge
mov
jne
add
scas
adc
cmp
sub
jmp
retf
add
add
add
push
out
adc
cld
dec
push
cmp
mov
in
retf
dec
aaa
out
hlt
jge
aam
out
cmps
xchg
xchg
imul
test
icebp
inc
stos
jecxz
or
call
pop
mov
push
mov
mov
mov
pop
or
pop
dec
loop
maxps
sar
xor
push
test
movs
mov
mov
imul
sub
stc
add
sub
aad
fldenv
xchg
mov
fcmovu
cmps
cwde
pop
(bad)
fiadd
dec
xchg
stos
inc
je
ins
add
sub
push
sbb
inc
stos
imul
sub
popa
mov
add
and
cmp
add
mov
adc
mov
push
test
mov
push
dec
out
sub
or
jge
stc
pop
dec
int3
sti
arpl
push
(bad)
pop
outs
test
mov
cwde
dec
lods
ret
test
jb
xor
mov
in
outs
enter
bound
in
loope
fisttp
(bad)
xor
sbb
and
retf
in
dec
push
aam
repnz
cmp
sbb
lea
jp
mov
and
or
mov
push
cmp
iret
pop
icebp
movs
rcr
aad
mov
pusha
stos
dec
jg
repz
mov
daa
add
push
fidivr
xchg
adc
cmp
dec
or
dec
xor
pop
aad
addr16
lahf
std
test
cmps
cmc
addr16
jnp
mov
scas
fadd
pop
das
(bad)
lds
adc
in
(bad)
jo
(bad)
add
cmc
out
mov
add
mov
adc
dec
push
outs
mov
xor
jns
adc
popa
add
movs
jl
mov
xchg
mov
pop
les
(bad)
mov
xchg
sbb
pusha
or
add
add
clc
xchg
shr
dec
adc
cdq
xchg
sbb
in
test
cmp
test
mov
mov
dec
je
retf
mov
push
outs
jg
retf
ins
cs
div
fwait
sub
mov
xor
scas
mov
repz
lahf
in
push
loop
popa
xchg
mov
nop
loopne
outs
popw
lahf
mov
ret
loop
add
jge
scas
gs
mov
stos
mov
lahf
mov
dec
push
ins
les
xor
imul
clc
pop
fisubr
sbb
aaa
cld
and
(bad)
idiv
cld
int
in
repnz
popf
div
addr16
jnp
pushf
mov
icebp
leave
and
js
loop
mov
out
vmread
cdq
adc
jmp
add
aas
pop
call
lock
push
outs
adc
mov
mov
xchg
leave
jmp
pushf
scas
fisttp
jle
std
adc
inc
ret
fisttp
jl
std
lods
pusha
ds
mov
dec
jge
ret
aaa
xor
inc
(bad)
scas
cs
sub
aaa
add
xor
scas
hlt
pop
in
pop
jecxz
add
je
cdq
outs
lods
fld
add
adc
push
xchg
sbb
imul
scas
jmp
jb
mov
fst
mov
lods
js
cmc
das
xor
mov
mov
or
inc
cmp
xchg
jno
jge
call
cs
jmp
scas
dec
test
jmp
call
enter
adc
xor
sub
fsubp
pop
mov
call
lock
loopne
fcomip
pop
out
aas
in
pop
jge
add
stc
fucomi
imul
clc
daa
repnz
icebp
(bad)
jmp
icebp
daa
shr
fwait
std
idiv
xlat
iret
loop
icebp
xor
pop
test
cmc
jg
push
fidiv
shr
in
mov
inc
outs
fidiv
shr
mov
inc
outs
fidiv
shr
mov
inc
outs
fidiv
shr
mov
inc
outs
fidiv
shr
mov
inc
outs
fidiv
shr
mov
inc
outs
(bad)
pop
dec
clc
xor
pop
js
(bad)
fistp
jp
mov
mov
inc
mov
std
and
push
hlt
xchg
clc
xlat
test
pop
xchg
xor
cs
shl
sbb
xchg
or
test
sbb
add
or
je
push
mov
dec
iret
popa
test
aaa
(bad)
dec
fst
push
jl
(bad)
cld
sbb
xchg
mov
out
inc
xchg
push
mov
cdq
lahf
fdivr
inc
retf
out
xchg
push
aas
(bad)
es
push
shl
and
lds
xlat
aas
icebp
xchg
add
stc
jecxz
sti
out
(bad)
es
clc
ret
inc
stc
cld
icebp
idiv
repz
inc
adc
push
dec
xchg
cmps
cld
cld
xchg
fisubr
inc
stc
adc
iret
cld
popa
inc
cld
(bad)
js
(bad)
stc
(bad)
inc
mov
(bad)
jg
jge
add
add
xlat
enter
push
(bad)
jle
out
or
adc
iret
cld
popa
inc
cld
(bad)
js
(bad)
stc
(bad)
inc
mov
(bad)
jg
jge
add
add
xlat
enter
push
(bad)
jle
out
or
adc
iret
cld
popa
inc
cld
(bad)
js
(bad)
stc
(bad)
inc
mov
(bad)
jg
jge
add
add
xlat
enter
push
(bad)
jle
out
or
adc
iret
cld
popa
inc
cld
(bad)
js
(bad)
stc
(bad)
inc
mov
(bad)
jg
jge
add
add
xlat
enter
push
(bad)
jle
out
or
adc
iret
cld
popa
inc
cld
(bad)
js
(bad)
stc
(bad)
inc
mov
(bad)
jg
jge
add
add
xlat
enter
push
(bad)
jle
out
or
adc
iret
cld
popa
inc
cld
(bad)
js
(bad)
stc
(bad)
inc
mov
(bad)
jg
jge
add
add
xlat
enter
push
(bad)
jle
out
or
adc
iret
cld
popa
inc
cld
(bad)
js
(bad)
stc
(bad)
inc
mov
(bad)
jg
jge
add
add
xlat
enter
push
(bad)
jle
out
or
adc
iret
cld
popa
inc
cld
(bad)
js
(bad)
stc
(bad)
inc
mov
(bad)
jg
jge
add
add
xlat
enter
push
(bad)
jle
out
or
adc
iret
cld
popa
inc
cld
(bad)
js
(bad)
stc
(bad)
inc
mov
(bad)
jg
jge
add
add
xlat
enter
push
(bad)
jle
out
or
adc
iret
cld
popa
inc
cld
(bad)
js
(bad)
stc
(bad)
inc
mov
(bad)
jg
jge
add
add
xlat
enter
push
(bad)
jle
out
or
adc
iret
cld
popa
inc
cld
(bad)
js
(bad)
stc
(bad)
inc
mov
(bad)
jg
jge
add
add
xlat
enter
push
(bad)
jle
out
or
adc
iret
cld
popa
inc
cld
(bad)
js
(bad)
stc
(bad)
inc
mov
(bad)
jg
jge
add
add
xlat
enter
push
(bad)
jle
out
or
adc
iret
cld
popa
inc
cld
(bad)
js
(bad)
stc
(bad)
inc
mov
(bad)
jg
jge
add
add
xlat
enter
push
(bad)
jle
out
or
adc
iret
cld
popa
inc
cld
(bad)
js
(bad)
stc
(bad)
inc
mov
(bad)
jg
jge
add
add
xlat
enter
push
(bad)
jle
out
or
adc
iret
cld
popa
inc
cld
(bad)
js
(bad)
stc
(bad)
inc
mov
(bad)
jg
jge
add
add
xlat
enter
push
(bad)
jle
out
or
adc
iret
cld
popa
inc
cld
(bad)
js
(bad)
stc
(bad)
inc
mov
(bad)
jg
jge
add
add
xlat
enter
push
(bad)
jle
out
or
adc
iret
cld
popa
inc
cld
(bad)
js
(bad)
stc
(bad)
inc
mov
(bad)
jg
jge
add
add
xlat
enter
push
(bad)
jle
out
or
adc
iret
cld
popa
inc
cld
(bad)
js
(bad)
stc
(bad)
inc
mov
(bad)
jg
jge
add
add
xlat
enter
push
(bad)
jle
out
or
adc
iret
cld
popa
inc
cld
(bad)
js
(bad)
stc
(bad)
inc
mov
(bad)
jg
jge
add
add
xlat
enter
push
(bad)
jle
out
or
adc
iret
cld
popa
inc
cld
(bad)
js
(bad)
stc
(bad)
inc
mov
(bad)
jg
jge
add
add
xlat
enter
push
(bad)
jle
out
or
adc
iret
cld
popa
inc
cld
(bad)
js
(bad)
stc
(bad)
inc
mov
(bad)
out
jno
in
inc
outs
ds
out
(bad)
out
outs
loope
jne
xor
add
inc
jecxz
(bad)
ret
lock
add
pop
jmp
dec
cmp
and
push
sbb
int3
repz
test
add
push
sbb
mov
out
sub
loope
adc
fcom
sub
sub
sub
sub
or
mov
sub
sub
sub
or
mov
sub
sub
fadd
dec
sar
aaa
adc
sti
add
fstp
(bad)
fistp
scas
mov
pop
dec
sti
jmp
lock
mov
mov
mov
sar
iret
test
cld
fs
fabs
jg
fsubr
push
pop
push
push
pop
ret
in
icebp
test
push
or
push
mov
fs
lock
(bad)
clc
lahf
icebp
outs
dec
(bad)
shl
mov
outs
cmc
or
pop
and
push
push
push
fdivr
movs
xlat
inc
or
icebp
(bad)
test
add
push
jg
outs
fimul
mov
out
ret
jle
shl
cmp
movs
dec
(bad)
sar
cld
mov
adc
adc
mov
(bad)
(bad)
std
push
cmp
add
or
inc
loop
jecxz
(bad)
into
sub
std
sub
jmp
ss
cld
xor
(bad)
outs
cli
adc
dec
pop
lock
clc
ss
add
aad
pop
lock
jno
add
mov
mov
mov
fwait
ds
mov
jmp
push
pushf
inc
in
aad
push
(bad)
inc
cmp
out
fs
xchg
repnz
aas
lock
clc
ss
add
aam
ret
add
jbe
add
(bad)
inc
(bad)
push
fwait
scas
lds
pop
cmp
sub
adc
jno
add
jl
pop
clc
mov
inc
inc
icebp
sbb
push
jge
adc
icebp
sti
lahf
stc
xchg
imul
push
xchg
inc
or
icebp
(bad)
test
add
inc
cld
xor
(bad)
outs
cli
adc
dec
jns
jl
icebp
aam
adc
arpl
jne
leave
inc
shr
mov
adc
jp
movs
cmp
cli
adc
add
out
popa
cmc
call
pop
movs
inc
ret
add
jbe
add
(bad)
inc
(bad)
push
inc
or
icebp
(bad)
test
add
pop
inc
or
pop
hlt
cmp
inc
clc
xor
(bad)
push
xlat
mov
call
lock
inc
adc
iret
pop
mov
xchg
repnz
mov
mov
ss
add
aam
ret
add
jbe
add
(bad)
inc
(bad)
push
cdq
jg
(bad)
(bad)
std
push
cmp
add
or
inc
loop
icebp
cld
push
icebp
fsubr
sbb
movs
cmp
add
test
cmps
daa
stc
jecxz
aas
repz
push
idiv
add
cmp
jecxz
std
or
inc
push
(bad)
aas
cld
jp
clc
pusha
pop
mov
hlt
and
add
jmp
inc
mov
rcr
mov
mov
mov
mov
js
iret
cld
ret
jmp
mov
lock
add
add
(bad)
push
lods
jg
cmc
jns
les
inc
test
gs
add
pop
push
cmps
push
ror
mov
(bad)
jo
xor
dec
clc
pop
pop
cmp
add
rcr
ss
inc
aam
push
and
jbe
push
retf
add
sbb
jno
jnp
pop
pop
dec
jb
jbe
cmp
add
inc
mov
movs
mov
xor
push
and
sbb
push
pop
fcmove
arpl
mov
arpl
stos
shl
xchg
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
shl
jge
aaa
popa
cmps
fimul
not
pop
std
xlat
or
(bad)
hlt
shl
sbb
rcr
movs
sbb
pop
push
or
mov
mov
repnz
ins
sbb
stos
cmps
jae
dec
push
rcl
sub
mov
push
pusha
mov
scas
mov
cmp
add
idiv
nop
iret
pop
cmp
daa
cld
popf
lahf
cmp
inc
lock
jb
jecxz
jl
mov
mov
push
mov
mov
mov
push
pusha
mov
clc
daa
add
sub
and
jle
xlat
int
hlt
(bad)
cld
adc
dec
ret
inc
mov
cli
sub
ss
(bad)
xchg
std
in
popf
and
in
cmc
xor
je
jge
cmps
fwait
pop
inc
js
pop
ins
inc
shr
sbb
mov
sub
div
dec
pop
inc
imul
call
imul
inc
mov
mov
push
push
ja
xchg
adc
inc
cld
loop
out
adc
ret
pop
xchg
cmps
push
push
pop
mov
cld
iret
mov
xor
push
cld
outs
mov
inc
loop
jno
imul
js
(bad)
in
cld
push
loop
fadd
mov
push
sti
xor
xchg
stos
fld
pop
into
repz
out
jg
cli
arpl
mov
rcr
stos
loop
and
popa
jmp
lahf
adc
inc
enter
jae
add
ror
std
inc
sub
in
int
push
stos
ficom
jb
ficom
(bad)
and
push
cdq
lock
outs
cmp
jecxz
mov
call
rcl
add
jle
dec
jb
or
sub
sbb
mov
xor
imul
hlt
fistp
clc
vunpcklps
adc
jp
add
mov
rcr
jg
mov
adc
add
cmps
fldl2e
invd
ins
inc
xchg
inc
shl
jmp
neg
xchg
jecxz
lods
int
xchg
retf
xchg
inc
jmp
fmulp
sub
adc
jne
sub
lock
push
icebp
scas
cmp
and
test
sbb
cmp
inc
loope
cmp
out
jl
inc
xor
fild
retf
(bad)
scas
mov
sti
or
push
js
inc
mov
xor
pusha
mov
adc
push
clc
pop
icebp
imul
ret
fld
add
in
retf
pop
mov
(bad)
in
jle
ss
xchg
int3
and
rcr
and
sbb
sbb
sahf
xor
pop
(bad)
jne
icebp
fsub
mov
cdq
add
out
dec
dec
cs
cld
mov
stc
lock
push
clc
add
and
ret
les
and
imul
mov
sti
dec
jbe
xchg
jo
repnz
daa
hlt
stos
div
lock
shr
shl
ret
or
leave
test
mov
test
cld
enter
pop
or
js
and
repnz
cld
adc
outs
pavgw
inc
loope
xchg
clc
adc
jmp
int
add
aas
icebp
push
pusha
cmp
(bad)
std
adc
in
lods
es
movs
sti
aas
push
sbb
arpl
sub
stc
pop
fwait
aaa
pop
jmp
inc
js
add
mov
sti
(bad)
stc
aam
cmc
pop
mov
and
movs
lock
in
iret
(bad)
xchg
int
adc
sti
push
inc
leave
sar
sbb
mov
sub
retf
mov
add
(bad)
pop
stc
sbb
sub
push
out
pop
les
pop
adc
sar
mov
pop
out
(bad)
(bad)
and
inc
icebp
aas
std
test
jg
imul
je
mov
ins
mov
adc
pop
sub
movs
mov
inc
ficomp
mov
dec
mov
movs
mov
inc
ficomp
mov
dec
mov
movs
mov
inc
ficomp
mov
dec
mov
movs
mov
inc
ficomp
mov
dec
mov
movs
mov
inc
ficomp
mov
dec
mov
movs
mov
inc
ficomp
mov
dec
mov
movs
mov
inc
ficomp
mov
dec
mov
movs
mov
inc
ficomp
mov
dec
mov
movs
mov
inc
ficomp
mov
dec
mov
cmps
pusha
sahf
xchg
imul
mov
push
or
gs
push
jns
imul
and
addr16
ins
mov
es
sub
nop
jo
js
lea
inc
pop
leave
popa
pop
push
xor
xor
icebp
scas
xlat
dec
lock
aam
and
and
inc
mov
repnz
lods
fs
retf
fstp
sti
mov
jbe
xor
pop
xchg
push
add
in
rcl
mov
jnp
push
xchg
ja
ds
mov
sbb
jbe
or
jb
add
ja
pop
movs
imul
repz
xlat
adc
(bad)
and
leave
repz
sti
cmps
stos
fucomip
scas
bound
xor
add
ret
aad
push
rcr
add
jne
gs
scas
adc
cmp
stos
movs
mov
les
push
pop
cli
sub
mov
fidivr
inc
cmp
stc
mov
rol
je
int
daa
push
sub
ret
out
mov
mov
sub
fwait
mov
jno
popa
or
fwait
push
or
add
imul
jg
idiv
nop
iret
pop
ds
rcr
lahf
cmp
inc
std
int3
std
pop
in
dec
(bad)
repnz
cli
mov
adc
enter
clc
daa
(bad)
jle
pop
and
cmp
mov
xchg
outs
and
into
mov
or
sub
je
adc
adc
cmc
sbb
sub
lods
cmp
(bad)
xor
pop
push
pop
daa
retf
and
lahf
dec
aam
in
scas
arpl
pop
fcmovne
icebp
dec
sbb
push
inc
pop
cwde
stos
aad
aas
mov
test
xchg
and
pop
sysexit
in
inc
neg
mov
adc
add
lods
das
clc
bound
cmp
aas
clc
mov
xchg
cmp
popa
push
fst
and
pop
out
mov
clc
push
icebp
jae
fisubr
mov
mov
pusha
or
pop
sub
inc
and
mov
add
scas
jo
add
mov
add
inc
mov
inc
mov
cmovg
cs
jo
mov
add
xor
hlt
cmp
adc
rcr
adc
cmps
ret
cmp
(bad)
loop
ins
dec
push
mov
dec
movs
mov
cld
ss
xor
outs
jp
pop
ja
sti
arpl
pop
(bad)
das
test
mov
pusha
xchg
mov
out
aaa
jbe
aas
mov
ret
adc
hlt
pop
cld
add
add
sar
add
mov
paddd
cmps
inc
pop
pop
je
xchg
ret
xchg
rcr
scas
inc
jno
sub
fld
outs
xchg
inc
jle
push
push
push
aad
pop
or
shr
arpl
mov
cmp
cmp
icebp
mov
ja
ret
ins
stc
dec
outs
or
lock
sti
shl
pop
repz
sbb
stos
iret
loope
dec
dec
or
dec
mov
xchg
push
add
dec
aaa
adc
or
mov
cli
cs
inc
shl
add
call
sar
call
add
sar
add
aaa
aad
lods
xlat
xlat
mov
icebp
outs
fidivr
cmp
sub
adc
mov
mov
sar
dec
jno
cmc
(bad)
mov
nop
mov
data16
sbb
xchg
mov
std
mov
cmpps
cmp
cld
xor
dec
add
xor
sub
(bad)
icebp
dec
loop
fst
inc
outs
cmps
add
inc
mov
cmovg
cs
clc
bound
cmp
aas
clc
mov
daa
xor
not
inc
nop
jae
mov
push
pop
sti
dec
cld
jb
test
data16
inc
xchg
jbe
mov
mov
leave
sbb
ds
mov
mov
mov
(bad)
pop
mov
cmp
addr16
imul
mov
(bad)
out
clc
pop
inc
cli
adc
jl
pop
xor
out
mov
lahf
inc
or
mov
paddd
cmps
inc
pop
inc
cld
xor
mov
add
sar
push
lahf
cld
pop
je
test
jb
push
scas
dec
xchg
mov
lea
xchg
mov
cmp
ret
mov
scas
clc
bound
cmp
aas
clc
mov
dec
cli
cs
inc
shl
add
jmp
jmp
outs
out
pop
stc
sbb
scas
outs
enter
sti
not
shl
push
lock
retf
add
and
scas
mov
sbb
out
pop
cld
cmovg
cs
cmc
iret
xchg
mov
cmp
js
lds
loop
push
shl
(bad)
xor
or
jl
loopne
pop
sti
xor
or
mov
push
movs
sub
xchg
mov
jp
shl
and
out
(bad)
aam
scas
pop
rol
sahf
(bad)
jns
popa
fstp
and
inc
mov
bound
sub
adc
jb
sub
or
pop
mov
push
push
mov
pop
and
adc
enter
mov
inc
add
sub
or
pop
mov
push
push
mov
pop
and
adc
enter
mov
inc
add
sub
or
pop
mov
mov
and
arpl
popa
mov
xor
ins
jecxz
fist
mov
retf
sbb
popa
rdmsr
das
and
lods
int3
xor
ds
ds
pop
xchg
sub
xor
cli
test
jmp
jl
in
and
sbb
leave
mov
out
add
cmp
push
imul
sub
mov
lahf
sub
sbb
test
jge
mov
shr
inc
outs
sub
sbb
addr16
ss
lods
mov
mov
inc
pop
aad
outs
xchg
stos
clc
jmp
sub
movs
mov
std
out
fdivr
jmp
mov
cmp
jns
fidivr
mov
xchg
push
or
jl
fisub
imul
inc
jnp
adc
xchg
dec
nop
inc
sbb
inc
(bad)
imul
fist
mov
push
push
mov
mov
call
lods
arpl
push
xlat
inc
sub
add
(bad)
sbb
or
repz
xchg
outs
inc
pop
xchg
loope
mov
mov
xlat
sub
in
dec
sub
scas
jae
push
xchg
sub
and
sub
iret
xlat
xor
mov
movs
add
shl
out
xchg
aas
xor
pop
sub
sti
add
add
fnstcw
(bad)
fistp
mov
sbb
or
pop
inc
xchg
mov
aas
std
mov
cmc
int
inc
(bad)
repnz
test
mov
add
sub
push
add
jae
jmp
clc
mov
pop
shl
mov
jno
fsubrp
push
pushf
inc
mov
push
pop
pop
scas
sti
pop
shr
jbe
lock
fisttp
inc
clc
xor
cld
inc
jae
adc
into
push
stos
xchg
inc
scas
mov
pop
push
jg
mov
sub
inc
loopne
inc
icebp
adc
ret
mov
sub
inc
loopne
inc
icebp
adc
call
lahf
sub
mov
aad
lock
fisttp
inc
clc
xor
cld
inc
pop
lock
fisttp
inc
clc
xor
cld
inc
pop
pop
mov
dec
in
push
int
scas
stos
mov
mov
add
pusha
jg
mov
loope
mov
xchg
add
pusha
jg
mov
mov
stc
sar
lahf
retf
call
jle
jg
pop
ud0
loopne
inc
icebp
adc
ret
mov
sub
inc
loopne
inc
icebp
adc
outs
xchg
mov
stc
push
xor
mov
outs
cld
pop
inc
sahf
mov
cmp
add
add
rol
fisttp
out
in
push
sub
scas
push
add
(bad)
mov
add
add
add
push
inc
push
(bad)
mov
add
add
add
push
cmc
mov
aam
push
in
rcl
jg
in
fisttp
inc
clc
xor
cld
inc
jns
(bad)
das
fld
(bad)
mov
push
mov
cmp
sbb
fstp
push
sar
or
ret
adc
in
xchg
bound
retf
call
inc
sub
lahf
inc
add
mov
add
sub
push
add
cmps
rol
mov
mov
add
sub
push
add
cmps
rol
mov
mov
add
sub
push
add
cmps
rol
mov
mov
add
sub
push
add
cmps
rol
mov
mov
add
sub
jge
add
pop
mov
sahf
mov
aam
cmp
retf
(bad)
lods
fs
fs
pop
xchg
aad
loop
push
sbb
sub
jmp
mov
out
xor
out
pop
scas
dec
xor
retf
sbb
xchg
pop
lods
inc
cmps
sub
jnp
fwait
push
mov
xor
cmps
(bad)
mov
push
sbb
xchg
push
test
std
iret
jnp
jmp
pop
add
out
bound
mov
nop
push
mov
push
push
cs
fdiv
pop
sbb
push
inc
jo
dec
lods
pop
xchg
mov
daa
mov
mov
and
jge
(bad)
cmp
xor
cmp
push
jg
or
fsub
stos
nop
push
and
test
xchg
xchg
mov
jmp
sbb
push
push
inc
sahf
(bad)
and
stos
push
inc
mov
fxam
repz
imul
fcomp
movs
push
xchg
mov
fiadd
imul
(bad)
js
sbb
test
adc
(bad)
into
xor
repz
mov
push
enter
std
cmp
ud0
outs
mov
add
inc
leave
xlat
clc
pop
(bad)
fistp
mov
(bad)
inc
add
repnz
mov
jmp
inc
add
push
std
cwde
ds
jl
clc
out
pop
push
pop
es
imul
xchg
movs
je
out
add
inc
add
add
sahf
inc
bnd
aas
std
jns
jg
xchg
lods
xor
jo
cmp
sub
rcr
sbb
adc
sti
fs
clc
(bad)
(bad)
jbe
shl
fwait
ins
adc
push
inc
(bad)
out
adc
rol
cmp
int3
jg
aaa
out
aaa
cli
jmp
imul
ror
mov
leave
into
dec
push
fdiv
inc
fisubr
mov
add
mov
outs
xchg
xor
mov
mov
test
mov
xor
pop
bound
xor
xlat
xor
ins
inc
jg
dec
push
jp
jb
inc
(bad)
cmp
(bad)
sbb
test
inc
movs
dec
ret
(bad)
jl
sti
es
push
icebp
cmps
mov
sbb
fisubr
or
div
mov
nop
mov
stos
xchg
sub
inc
ret
sahf
pop
mov
mov
jle
cmp
mov
xchg
stc
inc
test
hlt
scas
aam
test
iret
(bad)
jnp
add
test
dec
mov
stc
retf
stc
jmp
lock
mov
cs
inc
mov
xor
jbe
jne
(bad)
das
jnp
repz
scas
xor
fwait
jno
and
dec
xchg
call
test
(bad)
cli
fmulp
lock
pop
add
add
mov
add
fdivr
ret
jbe
inc
pop
mov
xor
bound
mov
in
ret
dec
push
icebp
cmp
outs
mov
pop
push
fdivr
add
lods
add
mov
mov
out
inc
popa
aad
sbb
jle
clc
jnp
inc
ret
(bad)
xor
loope
xchg
xchg
pop
pop
push
mov
mov
mov
jmp
xor
fs
sub
shl
add
sar
cmp
(bad)
out
loop
pop
repz
sar
cmp
xchg
adc
repnz
push
push
rol
adc
sbb
jbe
cmp
xor
sahf
not
push
push
add
in
in
stc
jno
aas
neg
out
aaa
out
mov
pop
xchg
clc
sbb
cmp
aas
lock
sbb
push
pushf
pop
retf
fs
add
ret
push
cmp
push
inc
ret
mov
ret
pop
push
adc
sub
xchg
xor
xor
ss
add
adc
call
push
jnp
fisttp
imul
stc
xchg
aas
neg
addr16
and
push
clc
mov
push
icebp
push
and
nop
jge
pop
add
bound
sbb
leave
shl
push
inc
fisttp
jbe
lock
jecxz
shl
xor
(bad)
or
xor
push
mov
daa
call
popa
icebp
lahf
(bad)
adc
ret
pop
pop
sbb
cmps
push
lods
ins
fldenv
push
inc
pop
pop
retf
pusha
xchg
sbb
mov
(bad)
jmp
mov
adc
inc
fidivr
push
jp
fisttp
fistp
clc
xor
jne
pop
iret
psubb
mov
mov
dec
jns
sbb
dec
pusha
inc
add
dec
and
pop
jle
inc
jns
cmp
sti
dec
jae
jmp
mov
lea
mov
inc
imul
xor
push
xlat
mov
sbb
mov
popa
fisub
add
cmp
cmps
idiv
icebp
in
les
popf
push
loopne
mov
movs
aam
das
loop
sbb
shr
enter
inc
and
std
shl
adc
lahf
xchg
sub
aas
bound
cmp
add
(bad)
(bad)
dec
sub
daa
jle
mov
mov
leave
(bad)
lods
ins
aad
icebp
in
push
dec
fwait
dec
aam
in
outs
pop
ins
not
cmp
cmovbe
std
inc
push
scas
fwait
loop
cld
xchg
lahf
adc
jmp
add
jae
leave
sbb
pusha
mov
mov
adc
inc
pop
sub
adc
pop
or
mov
adc
ret
mov
add
mov
or
sub
adc
pop
or
mov
adc
ret
mov
add
mov
or
sub
and
mov
push
inc
pop
dec
dec
pop
dec
fstp
xchg
pop
(bad)
push
sub
adc
popf
adc
xchg
cmp
pushf
xchg
std
sub
mov
dec
ds
fsub
jne
sti
sbb
pop
inc
pop
pop
out
out
scas
xor
mov
shl
cmc
fistp
inc
out
scas
dec
lahf
ret
pop
mov
cmps
push
stos
cli
pusha
hlt
xor
xchg
cli
add
(bad)
ffreep
xchg
push
ror
lahf
(bad)
mov
xchg
arpl
scas
popa
mov
lea
outs
cmp
imul
ins
mov
xor
jns
lock
call
out
fdivr
out
sahf
xor
(bad)
dec
es
add
sar
sub
out
sbb
adc
dec
or
jmp
addr16
pushf
mov
fmul
jecxz
inc
pop
sar
pop
leave
and
hlt
stos
ja
leave
nop
(bad)
ret
cmp
imul
mov
jo
fmul
ja
cmp
mov
or
popf
(bad)
mov
shr
xor
mov
int
scas
mov
(bad)
sti
pop
pushf
loop
cmps
pop
push
pop
ret
scas
xchg
xchg
loope
inc
jle
jg
jne
or
add
mov
pusha
mov
jg
out
(bad)
xchg
dec
pop
clc
lahf
loopne
sar
inc
mov
out
and
(bad)
lahf
call
and
cmps
rol
scas
movs
inc
loopne
fcomip
jae
aas
std
jns
jg
xchg
scas
fwait
jmp
outs
fsub
push
or
cmp
mov
inc
jne
aad
xor
xor
push
clc
xchg
vphadddq
mov
cmp
mov
mov
dec
mov
jp
xchg
jnp
mov
(bad)
jmp
cmp
cwde
xor
push
inc
popf
mov
mov
not
in
inc
loopne
int
sub
loopne
push
xlat
adc
cld
addr16
out
(bad)
jp
mov
jmp
cdq
push
inc
mov
adc
test
imul
mov
dec
mov
daa
sbb
in
pop
lds
jle
imul
leave
cmps
pop
fbstp
jmp
scas
dec
add
or
mov
pop
les
sub
pop
mov
test
mov
ins
int
repnz
mov
push
mov
jb
pop
in
test
xchg
jl
pop
or
inc
test
aaa
fidiv
outs
fsub
std
lahf
ret
mov
adc
std
adc
push
(bad)
push
xchg
popf
mov
pop
ss
cld
push
mov
loop
shl
stos
stos
pop
fs
int
lock
call
popa
daa
test
inc
mov
dec
dec
icebp
dec
retf
dec
shr
retf
inc
sahf
dec
cmp
imul
out
test
xor
(bad)
pop
(bad)
data16
jge
imul
pop
les
mov
pop
ss
pop
pop
and
and
xchg
sbb
xchg
inc
enter
xor
sub
jb
retf
pop
stc
fdiv
out
jg
(bad)
fistp
jl
lock
ss
dec
shl
out
in
or
mov
(bad)
push
xchg
mov
movs
jbe
xor
loopne
mov
and
scas
jmp
sti
add
add
cmps
imul
icebp
out
(bad)
jg
iret
loope
mov
mov
imul
in
lods
int3
(bad)
or
xchg
inc
inc
push
add
int
ret
inc
ret
inc
xlat
sub
jae
xor
out
mov
mov
inc
add
(bad)
mov
jbe
xchg
xor
out
hlt
repnz
xchg
cmc
mov
ins
(bad)
addr16
inc
add
jecxz
fcom
lock
inc
mov
aaa
adc
stc
push
mov
(bad)
pop
mov
sahf
inc
addr16
loop
mov
fcomp
pop
lds
mov
dec
add
xor
fucomp
xchg
cld
stc
clc
lahf
icebp
cmp
mov
adc
xchg
in
jne
mov
repnz
fs
mov
and
push
pop
cmc
and
dec
jge
loope
clc
sub
les
shr
mov
or
ins
cmps
fild
adc
jb
mov
ror
cmp
mov
push
sahf
push
push
jbe
pop
jl
jp
jmp
enter
mov
js
push
xlat
mov
lods
jmp
inc
inc
mov
inc
stos
or
add
retf
mov
enter
js
icebp
scas
(bad)
sar
mov
and
dec
hlt
enter
push
loopne
out
out
outs
clc
rcr
xlat
mov
cdq
inc
sub
ds
popf
cmp
cmp
test
in
dec
inc
daa
inc
loopne
cli
clc
fwait
inc
dec
in
imul
test
lock
shl
in
lahf
ret
sbb
add
jno
sbb
mov
aam
addr16
pop
inc
pop
mov
inc
xchg
cld
dec
inc
xchg
xchg
loop
sti
or
call
mov
js
pop
mov
mov
mov
inc
call
mov
mov
arpl
cmps
rcl
push
call
mov
mov
gs
sub
xchg
push
call
mov
mov
gs
sub
xchg
push
call
mov
mov
gs
sub
xchg
push
call
mov
mov
gs
sub
xchg
push
call
mov
mov
gs
xlat
cmp
ds
popa
arpl
mov
jne
pop
jg
push
jno
cmps
imul
add
inc
or
inc
mov
or
loop
aam
lock
shr
jge
inc
cmp
fwait
jmp
cmp
jne
and
sbb
leave
leave
out
jmp
(bad)
sahf
sbb
or
les
lahf
cmp
arpl
or
icebp
push
mov
fucomp
lock
(bad)
mov
dec
adc
outs
cld
test
mov
jne
icebp
je
inc
pop
enter
xchg
adc
cdq
test
sub
jle
and
mov
mov
jmp
cmp
outs
jp
loopne
fisub
mov
xchg
push
jge
pop
mov
dec
cmp
aas
retf
lods
daa
dec
cmp
movs
test
fld
xlat
mov
(bad)
jmp
xor
jmp
pop
popf
lods
daa
add
jae
imul
lds
imul
cmp
cld
jno
ds
jmp
sbb
ins
inc
test
fmul
inc
fdivrp
sbb
popf
inc
aaa
retf
lods
imul
mov
sub
jecxz
jmp
fmul
in
jnp
(bad)
dec
add
(bad)
jbe
sti
dec
div
das
or
imul
movs
fnstsw
pop
jp
arpl
fdiv
xor
dec
cmp
dec
dec
mov
rcr
fcmovb
out
out
xor
cli
add
or
add
mov
cmc
loopne
out
inc
mov
cld
popf
cmp
idiv
add
scas
ins
push
lock
enter
and
pop
enter
add
inc
ret
mov
in
cmp
daa
imul
loope
ins
out
test
cwde
lods
jmp
mov
(bad)
fiadd
clc
sahf
jg
sahf
cmp
xchg
cmps
mov
nop
add
add
fcomip
int
add
add
push
jg
push
repnz
adc
xchg
adc
call
(bad)
cld
iret
test
loope
jle
jg
rol
and
add
add
pop
dec
fwait
inc
mov
stos
jg
xlat
test
pop
jecxz
addr16
lock
add
add
push
jg
push
jg
ss
push
inc
mov
add
push
retf
hlt
push
in
stos
jg
xlat
test
das
(bad)
cld
iret
test
loope
jle
jg
rol
and
add
add
pop
dec
fwait
inc
mov
push
inc
lahf
scas
out
(bad)
stc
pop
xor
stc
lahf
push
jg
ss
push
inc
mov
add
push
inc
or
lock
mov
paddb
pop
das
rol
lods
inc
aas
pop
fstp
repnz
push
enter
mov
clc
or
pop
dec
fwait
inc
mov
aaa
std
sbb
pop
clc
sub
sub
pop
(bad)
jle
mov
inc
xchg
jle
out
inc
inc
or
lock
mov
paddb
inc
cld
xor
outs
cli
cmp
aas
lock
(bad)
push
jl
inc
push
retf
std
jg
jg
cmp
jg
cli
cmp
mov
aaa
std
sbb
pop
clc
sub
sub
xor
sahf
(bad)
push
imul
clc
stos
lds
sbb
pop
sub
lahf
mov
ds
popf
les
cmp
sahf
xchg
es
imul
add
jg
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
or
jae
je
add
(bad)
adc
cmp
loopne
cli
sbb
add
(bad)
sbb
inc
jp
jl
aas
pop
loopne
jg
dec
cmc
mov
(bad)
mov
mov
dec
dec
retfw
inc
sbb
cld
or
jnp
xchg
ret
aad
aad
(bad)
xor
jmp
mov
clc
xchg
mov
out
es
mov
lods
fsqrt
mov
mov
lock
icebp
pushf
enter
das
inc
pop
mov
add
mov
jl
cmp
test
inc
mov
test
lods
jecxz
lea
mov
ror
retf
lock
in
dec
xor
sub
loope
mov
imul
movs
xchg
xor
adc
lock
push
jmp
arpl
mov
xor
push
rcr
sub
aaa
jecxz
mov
stos
(bad)
les
lock
jb
xlat
test
sub
jnp
daa
cmc
scas
pop
clc
(bad)
loope
aaa
ficomp
adc
jmp
xor
ja
mov
xor
jae
mov
ds
cmp
push
pop
ja
sub
mov
jle
cmp
in
mov
mov
or
inc
daa
push
loopne
sti
jge
add
sub
fwait
adc
inc
jg
pop
push
js
adc
mov
scas
ret
or
mov
(bad)
aad
xor
(bad)
jne
pop
or
push
jmp
sbb
mov
mov
or
mov
test
(bad)
sar
jnp
adc
popa
adc
sub
ins
aas
adc
fmul
retf
gs
push
in
scas
pop
pop
cmp
jnp
jbe
lock
outs
in
inc
or
pop
(bad)
mov
pop
outs
hlt
lahf
push
ins
repnz
aaa
or
data16
mov
mov
add
inc
ret
and
add
add
mov
jbe
imul
imul
arpl
imul
popf
mov
xor
or
sbb
mov
iret
pmaxub
div
xchg
(bad)
das
jle
push
jmp
inc
js
adc
xor
ins
jo
scas
ja
push
xchg
push
lods
in
pop
jno
pop
push
retf
inc
or
in
(bad)
inc
inc
nop
add
jno
add
fidivr
loope
std
xchg
inc
call
out
aas
(bad)
cmp
cmps
in
adc
(bad)
loop
mov
pop
xor
push
(bad)
imul
shr
into
mov
add
sub
dec
in
pop
outs
in
or
imul
sar
test
in
lahf
aas
enter
inc
fxam
jns
mov
inc
(bad)
jl
(bad)
xor
hlt
lods
mov
inc
mov
jnp
pop
movs
pop
sub
rcr
cdq
inc
or
in
(bad)
inc
inc
nop
add
jno
add
fidivr
loope
std
xchg
inc
call
out
aas
(bad)
cmp
pusha
mov
in
push
fbstp
push
cld
dec
pop
adc
jne
mov
xlat
pop
fldcw
fisubr
fst
dec
cmovle
dec
enter
cld
mov
jns
mov
add
das
in
(bad)
inc
inc
nop
add
jno
add
fidivr
loope
std
xchg
inc
call
out
aas
(bad)
cmp
loopne
push
bound
in
popa
inc
sub
(bad)
stos
inc
loope
std
xchg
inc
call
out
aas
(bad)
cmp
and
mov
std
add
inc
jge
inc
(bad)
push
mov
add
imul
in
xchg
repz
sbb
(bad)
xor
clc
daa
mov
add
jne
mov
jmp
or
xchg
imul
loopne
and
hlt
es
pop
neg
call
imul
jg
dec
sti
and
add
add
mov
jbe
clc
dec
jg
jg
add
(bad)
sti
(bad)
inc
mov
retf
and
lds
sub
neg
mov
clc
dec
jg
jg
add
(bad)
sti
(bad)
inc
mov
inc
or
in
(bad)
inc
inc
nop
add
jno
add
(bad)
inc
pop
rcl
out
ficomp
pop
jg
mov
clc
dec
aas
fs
test
inc
mov
in
bound
add
dec
mov
or
lahf
adc
sbb
jns
dec
jno
loopne
xchg
leave
add
xchg
repz
sub
(bad)
ds
dec
push
(bad)
ds
xor
fisub
lock
push
ss
div
add
add
aad
pop
mov
inc
aad
(bad)
xor
push
fcmove
xchg
push
pop
idiv
jb
sahf
retf
out
dec
mov
mov
mov
rcl
sbb
ins
sbb
lea
add
inc
fiadd
jecxz
cmps
ins
mov
push
mov
mov
mov
fild
ins
adc
mov
mov
fidiv
rcl
sbb
ins
sbb
lea
add
inc
fiadd
jecxz
cmps
ins
mov
push
mov
mov
mov
fild
ins
adc
mov
mov
fidiv
rcl
sbb
ins
sbb
lea
add
inc
fiadd
jecxz
dec
dec
(bad)
adc
mov
adc
push
fimul
daa
(bad)
dec
sbb
mov
ds
call
cs
lea
add
mov
cld
and
cs
(bad)
jmp
and
jmp
xor
ins
cli
mov
push
lahf
dec
mov
mov
and
(bad)
shl
clc
jmp
mov
aaa
mov
and
in
jp
in
mov
inc
xor
arpl
mov
mov
ja
outs
pop
push
enter
mov
adc
jle
dec
fild
jmp
xchg
ret
jo
and
lea
mov
jmp
loop
mov
ins
pop
ja
les
in
sub
repnz
lds
gs
fistp
icebp
int
imul
xchg
retf
das
test
mov
(bad)
pop
pop
aad
jmp
arpl
adc
sti
sbb
in
and
dec
cmp
cs
xchg
pop
pop
loop
sub
mov
jo
dec
pop
js
fild
pop
lahf
ret
adc
outs
cmps
or
jns
xchg
arpl
xchg
(bad)
pop
popf
adc
xchg
mov
dec
dec
or
pop
nop
mov
mov
sti
mov
lods
jno
js
loop
jecxz
push
push
push
(bad)
(bad)
iret
les
sub
outs
mov
fwait
aam
cmps
push
aas
or
xor
sbb
pop
add
cmp
lock
inc
clc
pushf
push
popa
mov
aaa
push
mov
push
test
stc
(bad)
xor
add
call
jp
jne
js
cmp
cmp
jb
idiv
cli
sbb
xor
ds
sbb
mov
inc
ins
(bad)
xor
scas
pop
repnz
ss
add
mov
cmc
loopne
imul
popa
adc
idiv
inc
movs
push
xlat
cs
fisub
inc
(bad)
idiv
test
push
mov
mov
add
pop
stc
cmp
jg
mov
inc
mov
cld
pushf
dec
xchg
std
sub
push
scas
cmp
sti
mov
(bad)
sub
dec
xchg
fs
in
cmc
xor
sti
dec
mov
inc
cli
push
ins
pop
and
neg
jmp
cld
xchg
int
inc
mov
ficomp
shl
mov
bts
xchg
jle
sar
outs
jo
hlt
pop
sub
mov
stc
jge
inc
clc
xlat
mov
mov
ds
adc
loope
(bad)
mov
jno
in
cmp
data16
push
fist
adc
fsin
add
int3
std
out
stos
jmp
jo
repnz
(bad)
add
pop
cld
or
jle
jmp
push
rcl
push
fxch
xor
xchg
pop
xor
shl
pop
and
mov
cmps
(bad)
add
push
cmp
cld
mov
jl
loopne
lea
mov
dec
rcl
shl
dec
aad
ins
mov
in
inc
jmp
inc
push
(bad)
pop
sbb
(bad)
inc
add
jge
mov
xor
add
cmp
sar
(bad)
in
jecxz
out
lods
lock
imul
sub
dec
sbb
mov
ins
sub
xchg
adc
sbb
sbb
xor
xor
jbe
push
lahf
fst
aas
cli
push
cmc
lods
sbb
push
mov
cmp
xor
cmps
mov
dec
or
pop
or
inc
test
inc
sahf
jecxz
aad
shl
xor
cmp
pop
out
inc
xor
mov
add
add
loopne
fiadd
hlt
enter
or
popa
mov
inc
xchg
test
mov
or
sar
jb
xchg
pop
jge
push
inc
nop
inc
shr
sbb
add
push
icebp
pop
cld
adc
dec
inc
inc
mov
(bad)
add
sub
or
mov
jnp
imul
lock
sbb
sub
jg
fwait
xor
jg
sub
jae
mov
mov
sar
inc
arpl
jno
jo
push
mov
div
ins
mov
int
push
jb
aas
out
lods
mov
jmp
les
mov
(bad)
imul
push
mov
mov
ins
cli
sahf
test
mov
das
cld
sub
jl
sti
xor
(bad)
cs
pop
scas
mov
push
stos
cwde
out
rep
inc
sar
pop
mov
cmps
push
xchg
push
mov
and
xchg
imul
add
sti
pop
jl
aam
jl
cmps
lds
fldcw
jge
std
xchg
or
retf
and
into
pop
push
pop
test
mov
int
push
push
out
adc
in
and
int3
mov
add
loope
jns
mov
mov
mov
dec
cld
push
lods
js
out
pop
pop
pop
daa
push
xchg
pop
xor
add
outs
and
jae
mov
aam
mov
in
mov
inc
xchg
inc
cmp
push
(bad)
pop
int3
jmp
add
sahf
aas
clc
mov
outs
clc
inc
mov
pusha
mov
(bad)
in
xor
push
adc
dec
mul
ret
pop
or
inc
mov
fs
sbb
pop
inc
xlat
sbb
adc
mov
mov
sar
inc
scas
cmp
dec
pop
ins
fidivr
ret
dec
mov
cli
cli
push
(bad)
jecxz
fcmovu
or
cmp
pop
nop
stos
mov
loope
inc
retf
lahf
pop
es
mov
int3
repz
clc
sub
cmp
sahf
adc
dec
mov
pop
sbb
loope
pop
and
or
sbb
lds
cld
adc
dec
iret
std
sub
jg
push
adc
lock
jmp
mov
lock
(bad)
xlat
aas
test
inc
rol
xchg
dec
mov
mov
cmp
outs
lods
ss
inc
jge
mov
cli
add
or
mov
or
mov
or
mov
or
mov
or
mov
or
mov
or
mov
or
mov
or
mov
or
mov
xor
xchg
ja
sbb
ja
rcl
adc
neg
jbe
sbb
push
inc
stos
int3
inc
iret
(bad)
mov
cmp
fist
jl
outs
add
arpl
in
dec
out
xor
loopne
sub
sti
ret
int3
imul
jne
das
retf
nop
jge
mov
mov
js
push
mov
sub
add
lods
cli
xlat
(bad)
out
pushf
in
fdivr
lods
mov
cmps
pop
imul
mov
or
jbe
je
cmps
ret
ficomp
in
jmp
jle
mov
sub
cmp
nop
sub
xlat
push
inc
mov
ret
or
addr16
jge
ins
inc
inc
cmps
mov
xchg
xor
add
repnz
pop
(bad)
jecxz
mov
iret
imul
xor
push
ds
mov
push
cs
(bad)
mov
or
xor
xchg
fsubr
cli
frstpm(287
mov
(bad)
pop
jmp
fwait
cmp
cld
mov
pop
(bad)
mov
pop
bound
jnp
xchg
sub
sbb
jmp
lahf
icebp
cmp
arpl
inc
jg
popa
or
push
clc
mov
imul
imul
(bad)
jns
stos
in
aam
push
mov
rcl
shl
mov
lods
scas
cmc
pop
jnp
mov
mov
inc
pushf
or
or
daa
call
loope
lock
mov
sub
sti
loope
mov
add
clc
loopne
neg
das
cmc
popf
inc
out
dec
dec
and
mov
adc
nop
sbb
out
in
sbb
adc
add
pop
xlat
xchg
dec
push
adc
aad
sti
fistp
push
(bad)
push
ja
scas
jmp
fstp
stc
dec
movs
pop
mov
jnp
test
push
mov
xchg
xchg
mov
xor
ret
cmps
add
xchg
inc
arpl
mov
sub
pushf
cmp
lods
adc
mov
(bad)
push
mov
fld
retf
and
mov
pop
fcmovnbe
push
jnp
or
push
ret
jle
jg
jne
or
add
mov
adc
add
mov
cmc
cmps
das
std
fisub
sar
sub
push
out
xor
jae
push
push
rol
push
mov
enter
clc
jne
inc
ret
movs
and
cmps
dec
sub
fmul
or
fadd
gs
add
inc
dec
into
movs
adc
lods
pop
and
and
cmp
and
dec
(bad)
mov
sbb
dec
repnz
dec
retf
pop
push
cmp
enter
inc
sbb
clc
mov
iret
cmp
cli
xlat
xor
data16
jg
lds
call
xchg
pop
jge
push
pushf
addr16
lods
jnp
cmp
add
imul
add
inc
shr
adc
fwait
jmp
mov
push
pause
rol
xchg
lahf
jp
inc
xchg
sar
call
add
adc
add
mov
call
mov
xchg
adc
xor
adc
mov
mov
stos
push
jge
add
fcom
xchg
out
cmp
cmps
daa
aaa
mov
push
icebp
mov
or
stos
clc
jns
jge
out
dec
js
push
push
mov
ret
add
inc
add
xchg
fsub
fdivr
mov
dec
cli
and
add
add
add
add
sub
add
mov
adc
add
adc
add
sbb
mov
icebp
cmp
std
mov
out
aas
sbb
shr
pop
xor
mov
cli
or
xchg
neg
ffreep
sub
sub
dec
loope
sbb
adc
(bad)
xor
fcomip
mov
fstp
in
adc
mov
aas
clc
mov
loope
mov
cli
and
add
add
add
add
sub
ret
das
cld
xchg
mov
clc
sahf
push
stos
(bad)
fdivr
mov
lea
jnp
push
jns
call
outs
in
jmp
repnz
mov
or
imul
jg
jl
push
mov
or
xchg
ins
adc
lds
and
or
out
out
mov
add
mov
adc
add
adc
add
inc
inc
mov
add
and
sbb
xchg
dec
shr
scas
fisub
loope
outs
adc
idiv
push
inc
(bad)
fdivr
dec
adc
and
mov
cmp
lods
jmp
add
int
pop
icebp
push
test
idiv
in
pop
iret
xor
and
inc
adc
repnz
clc
ins
in
adc
mov
aas
clc
mov
loope
mov
cli
and
add
add
add
add
sub
cmc
gs
mov
pop
mov
les
mov
fdivr
les
cmps
dec
out
mov
sbb
mov
jmp
fisttp
sar
pop
les
icebp
xor
loop
mov
mov
(bad)
sub
push
push
or
add
pop
(bad)
add
adc
daa
inc
daa
inc
adc
ss
inc
inc
inc
rcr
aas
jns
leave
loope
fdivrp
(bad)
push
pop
ss
(bad)
mov
ins
lahf
mov
push
mov
mov
sub
imul
repz
dec
push
aas
xchg
lds
cmp
xor
ficomp
cmp
addr16
cmc
sub
cdq
xchg
dec
push
fs
scas
retf
enter
xchg
(bad)
sbb
inc
inc
mov
add
and
dec
add
clc
mov
cli
mov
jecxz
outs
mov
mov
mov
mov
les
sbb
xchg
jecxz
adc
pop
fimul
mov
adc
push
cmp
daa
adc
push
cmp
pop
cld
inc
clc
ret
lods
inc
(bad)
jp
mov
mov
and
cdq
jmp
add
or
add
or
outs
hlt
add
add
sub
mov
sub
(bad)
sub
in
call
jp
xchg
pop
xchg
imul
add
sub
jecxz
icebp
xchg
xor
mov
test
fcmovne
cs
test
dec
jmp
xor
sub
push
push
mov
add
push
mov
add
push
mov
add
push
mov
add
push
mov
add
push
mov
add
push
mov
add
push
mov
add
push
mov
add
push
mov
add
push
mov
add
push
mov
add
push
mov
add
push
mov
add
push
mov
add
push
mov
add
push
mov
add
push
mov
add
push
mov
add
in
mov
sub
mov
pop
icebp
ds
je
or
rcr
dec
jo
jns
out
adc
mov
ficom
fstp
aas
jns
(bad)
stos
hlt
cmp
cmc
jg
pop
jmp
test
cmp
out
adc
fcmovnbe
mov
ret
inc
sbb
faddp
jmp
jmp
arpl
fcomp
cs
push
cli
data16
jl
sahf
nop
aaa
shl
mov
xlat
dec
nop
add
adc
sbb
and
(bad)
push
dec
push
pop
jno
mov
ja
into
mov
cmp
mov
js
add
push
xchg
(bad)
mov
inc
mov
dec
jne
aas
sbb
imul
retf
xchg
pushf
xor
xlat
aas
xchg
fisub
aad
js
inc
in
outs
pop
(bad)
mov
push
mov
enter
(bad)
dec
add
out
push
movs
cld
cs
mov
daa
int3
inc
add
out
xor
mov
scas
in
and
fsubr
shl
mov
jb
sahf
mov
(bad)
stos
pop
pop
dec
ins
sub
movs
pop
imul
cmps
shl
sub
pushf
jne
loope
jnp
and
sti
mov
stc
push
call
mov
jns
into
dec
(bad)
sub
addr16
aam
mov
jl
loope
ins
sbb
ja
add
mov
jl
es
arpl
stos
xlat
jbe
addr16
es
addr16
jmp
aam
mov
fisubr
xor
arpl
jns
jecxz
jb
inc
push
(bad)
jecxz
add
loop
jbe
daa
mov
in
icebp
mov
retf
cmp
cld
(bad)
in
retf
add
jmp
loop
inc
mov
ficom
jo
mov
mov
pop
mov
xchg
loope
dec
ret
out
jae
and
mov
mov
pop
mul
mov
(bad)
sub
mov
cwde
mov
mov
and
aas
inc
or
mov
xlat
mov
pushf
fwait
inc
mov
sub
mov
lods
ds
mov
jle
cmps
pop
retf
popf
in
outs
outs
jl
pop
push
dec
xor
xor
and
jno
leave
stc
imul
push
shr
js
mov
mov
ret
je
or
add
mov
pop
inc
xchg
movs
lock
std
mov
cmc
hlt
mov
loope
xchg
repnz
lea
push
stc
sahf
or
mov
cmp
dec
mov
mov
gs
sub
xchg
push
call
mov
mov
gs
sub
xchg
push
call
mov
mov
gs
sub
xchg
push
call
mov
mov
gs
sub
xchg
push
call
mov
mov
gs
sub
xchg
push
call
mov
mov
gs
sub
xchg
push
call
mov
mov
gs
sub
xchg
push
call
mov
jge
je
or
pop
xchg
mov
jmp
icebp
(bad)
lock
(bad)
fbld
sub
mov
cmp
jge
push
adc
pop
cdq
das
out
pop
out
into
cmp
dec
or
cmps
inc
lea
cmps
and
xchg
test
hlt
bound
std
call
dec
mov
pop
and
ja
adc
xlat
stos
js
loope
fdiv
fcmove
add
retf
pop
nop
lds
cmp
into
lahf
mov
mov
lock
les
dec
mov
in
or
sub
push
hlt
ins
jo
cmc
scas
mov
test
mov
mov
js
movs
test
outs
jns
fld
enter
retf
push
or
sbb
mov
xchg
in
push
xchg
lods
cld
push
icebp
mov
jno
xlat
and
mov
popa
daa
add
movs
cld
sub
cmp
outs
lock
xchg
es
ret
adc
inc
jmp
jnp
jmp
push
clc
pop
push
sar
or
imul
ret
cmp
repnz
dec
mov
stos
or
test
sbb
cmp
jmp
mov
in
es
ins
mov
jmp
fisubr
rol
ffreep
(bad)
and
push
inc
push
pop
sbb
test
pop
jge
jmp
iret
lods
push
out
sub
popa
je
das
dec
lea
repz
mov
dec
adc
push
sbb
jno
jmp
dec
fldenv
inc
xor
cmc
aaa
mov
fdiv
jb
mov
jmp
mov
repnz
mov
push
push
loope
lahf
out
(bad)
mov
cmp
(bad)
retf
ja
ins
imul
mov
sub
mov
or
hlt
xor
(bad)
cmp
out
pop
inc
jle
sbb
(bad)
repnz
jge
retf
adc
inc
xchg
jno
rep
mov
add
inc
sub
xchg
adc
mov
push
xchg
mov
or
movs
out
cmp
imul
imul
ds
arpl
push
inc
cmp
mov
cld
cmp
dec
mov
stc
push
push
push
(bad)
mov
xor
mov
cmps
inc
pop
mov
adc
cmp
jnp
in
das
inc
daa
dec
loopne
sti
jge
add
sub
ret
jg
(bad)
stc
cmp
inc
fucomi
(bad)
xchg
dec
pop
push
mov
add
(bad)
pop
stc
pop
pop
xchg
xor
push
out
inc
fidiv
shl
sbb
jbe
mov
mov
mov
push
in
mov
push
fidiv
shl
mov
mov
mov
mov
imul
outs
fidiv
shl
fnsave
push
add
inc
fisubr
jbe
mov
mov
mov
push
in
mov
push
fidiv
shl
mov
mov
mov
mov
imul
outs
fidiv
shl
fnsave
push
add
inc
fisubr
jbe
mov
mov
mov
push
in
mov
push
fidiv
shl
mov
mov
mov
mov
imul
outs
fidiv
shl
fnsave
push
add
inc
fisubr
jbe
mov
mov
mov
push
in
mov
push
fidiv
shl
mov
mov
mov
mov
imul
test
xchg
mov
popa
push
jno
scas
sub
ficom
cdq
fdiv
outs
retf
adc
mov
ds
iret
popa
pop
pop
jmp
jae
cmc
repnz
xchg
enter
bswap
dec
fidivr
pop
jmp
sbb
jmp
inc
pop
mov
mov
push
xor
cli
pop
hlt
call
mov
and
mov
pop
outs
inc
loop
unpcklps
push
or
outs
jno
test
cmps
xchg
idiv
out
push
ror
call
push
ret
adc
cmc
scas
outs
lock
mov
scas
cmp
movs
imul
out
and
stos
push
pushf
in
jmp
scas
jp
aaa
nop
imul
pop
push
lods
(bad)
daa
inc
dec
xor
shl
sti
in
imul
shl
test
mov
mov
loop
in
dec
sbb
out
retf
push
fnstsw
add
jne
cmp
push
lock
lahf
loope
jp
shr
faddp
or
jnp
aam
cmp
inc
pop
xor
arpl
les
push
icebp
fs
push
adc
(bad)
add
mov
leave
cld
cmp
or
icebp
pop
mov
scas
sub
ds
cmp
enter
in
or
sbb
ficom
out
add
ret
or
lods
fucomi
adc
lods
jns
jo
jb
mov
(bad)
jl
mov
repz
(bad)
scas
mov
ret
inc
cmp
sbb
jnp
(bad)
icebp
adc
repnz
dec
jp
and
mov
in
and
pop
mov
inc
add
sbb
call
in
stos
mov
xor
enter
(bad)
mov
jnp
mov
cmp
pop
push
jne
jecxz
sahf
xchg
mov
cmc
dec
lea
sub
inc
out
daa
cwde
lds
sub
sbb
and
push
pop
dec
cli
hlt
scas
sub
jecxz
xchg
pop
push
mov
ins
dec
mov
retf
je
and
sahf
inc
dec
dec
out
dec
inc
int
push
sbb
bswap
(bad)
into
lods
imul
lods
in
retf
jb
(bad)
xlat
aas
pop
lods
sbb
call
cmp
push
fs
jno
shl
imul
outs
adc
jbe
inc
fdivr
jecxz
imul
popa
xchg
(bad)
ficom
inc
movs
push
xlat
enter
xor
and
mov
daa
fbstp
sti
or
clc
retf
sbb
(bad)
call
dec
jno
sub
mov
mov
ret
rcr
(bad)
sbb
cli
sub
push
add
mov
pop
push
push
dec
mov
hlt
push
pusha
sbb
mov
sub
adc
sub
push
add
mov
pop
push
push
dec
mov
hlt
push
pusha
sbb
mov
sub
adc
sub
push
add
mov
pop
push
push
dec
mov
hlt
push
pusha
sbb
mov
sub
adc
sub
push
add
mov
pop
push
push
dec
and
or
test
(bad)
cmp
adc
hlt
sub
aad
pop
push
xchg
das
dec
mov
fs
aad
add
push
xor
popa
shl
movs
pop
popa
out
inc
pop
mov
dec
leave
lahf
movs
ret
adc
inc
inc
into
out
push
arpl
fs
jmp
movs
jne
push
(bad)
in
imul
jo
cmp
xor
ret
push
pop
xlat
ins
push
fwait
add
fistp
out
pop
or
adc
jae
jmp
lea
jmp
adc
xor
push
in
fnstenv
push
ds
jge
imul
jg
xchg
and
mov
xlat
pop
xchg
pop
aas
cmp
aam
iret
adc
popf
stos
jmp
cs
sbb
sub
sub
imul
sti
push
aam
mov
fwait
jnp
out
lods
push
fwait
xor
out
fdivp
adc
fsub
je
pop
icebp
out
fistp
jmp
call
sub
jbe
pushf
jecxz
bound
call
xor
mov
fs
xchg
int
sbb
rcr
sahf
mov
lea
ja
sbb
push
stos
jmp
sbb
pop
dec
repnz
mov
(bad)
dec
mov
jecxz
arpl
xchg
jmp
int3
jb
hlt
iret
jp
sbb
sub
mov
in
imul
outs
mov
pop
sbb
(bad)
xor
jle
add
sbb
xor
lods
mov
fisttp
imul
sub
dec
scas
imul
pop
xchg
dec
inc
and
push
xchg
inc
dec
iret
sub
iret
mov
fnstcw
mov
out
add
cmc
scas
test
std
in
mov
sub
aam
jg
push
push
sahf
aas
das
in
sub
inc
add
(bad)
add
adc
jg
nop
pop
push
xchg
test
je
pop
pushf
addr16
ins
jae
push
inc
jle
arpl
lock
adc
inc
sub
mov
inc
adc
pusha
or
mov
adc
add
push
inc
push
add
adc
inc
sub
mov
inc
adc
pusha
or
mov
adc
add
push
inc
push
add
adc
inc
sub
mov
inc
adc
pusha
or
mov
adc
add
push
inc
push
add
adc
inc
sub
mov
inc
adc
pusha
adc
sub
(bad)
pop
pop
sub
jp
jmp
inc
loop
lea
mov
fdivr
repz
aam
push
xor
push
xchg
jge
pushf
fs
jns
dec
push
mov
xchg
aam
xor
or
stc
jp
les
push
inc
arpl
call
cmp
mov
jae
rol
xchg
mov
add
sahf
xchg
mov
aas
pop
pop
(bad)
sahf
mov
or
shr
adc
fld
sbb
xchg
push
or
lods
cmp
test
imul
mov
push
mov
mov
pop
add
aaa
pushf
rol
ss
leave
or
sub
and
jbe
dec
cmp
lods
es
and
cmp
icebp
push
das
jg
mov
xor
push
hlt
and
xchg
add
cli
ror
pop
and
mov
outs
int
lods
test
stos
jmp
paddsw
jmp
inc
mov
sbb
clc
jp
rcr
dec
push
inc
sbb
jg
inc
out
mov
addr16
cmp
ret
repnz
addr16
inc
add
sahf
aam
imul
mov
lea
enter
mov
movs
mov
push
jnp
mov
pop
and
in
inc
iret
push
mov
in
cmp
rol
mov
sbb
xchg
ins
mul
add
sahf
aam
imul
mov
lea
enter
mov
movs
mov
push
jnp
mov
pop
and
in
inc
iret
push
mov
in
cmp
rol
mov
sbb
xchg
ins
mul
add
sahf
aam
imul
mov
lea
iret
pop
clc
and
ret
clc
sub
js
test
cdq
out
retf
push
cmp
cdq
or
jno
call
test
push
mov
js
mov
mov
mov
rcl
add
and
xchg
repz
daa
fdivr
xor
pop
call
push
jo
in
cmp
fistp
mov
nop
in
sar
mov
xor
outs
or
loope
vmread
cld
cmp
mov
inc
(bad)
sar
add
stos
pop
or
push
cmp
mov
mov
lods
aad
std
cmp
rcl
mov
enter
leave
ss
aaa
cmp
js
retf
(bad)
adc
icebp
add
mov
mov
ja
inc
inc
dec
retf
into
out
pop
add
mov
push
sti
daa
fisubr
push
mov
pop
adc
retf
(bad)
not
ins
enter
addr16
lahf
xchg
cdq
aaa
and
into
jo
jp
ret
iret
mov
icebp
pop
cmp
cmp
sbb
test
sub
mov
xchg
loope
pop
add
mov
and
sbb
cmp
ds
inc
jg
lea
xchg
inc
ins
cmps
cld
cmp
mov
pop
mov
jp
sub
add
in
js
and
push
data16
je
fcmove
aad
mov
jle
and
mov
ret
aaa
jb
scas
(bad)
dec
sar
addr16
xchg
ret
inc
cmp
inc
repz
pop
inc
mov
mov
out
fstp
(bad)
fcmovnb
push
(bad)
daa
icebp
pop
mov
movs
cmc
int3
adc
dec
pusha
pop
and
dec
and
icebp
(bad)
das
clc
gs
pop
pop
clc
daa
sar
cdq
jge
ja
stos
fnstsw
cmp
and
inc
sub
arpl
fistp
stos
mov
pop
cmp
mov
shr
in
xchg
pop
mov
xchg
lods
lods
push
retf
jae
jecxz
sbb
call
jmp
bnd
or
xlat
mov
mov
mov
inc
popa
stos
inc
loope
mov
movhps
not
ss
(bad)
not
inc
outs
psubd
cmp
adc
loopne
xor
mov
imul
xor
ins
cmps
leave
jno
mov
mov
popf
enter
push
inc
pusha
sti
push
cmc
dec
aas
ins
mov
aad
lock
sti
pop
inc
ins
fucomi
pop
popa
jns
or
ror
jo
xor
pop
sbb
mov
ds
imul
or
mov
cmp
out
jb
pop
bound
mov
jp
ja
adc
into
adc
mov
mov
ja
popf
outs
ret
loope
mov
outs
je
(bad)
bswap
test
xchg
pop
mov
cs
inc
ret
sub
and
xchg
imul
aas
add
pop
mov
ret
pop
shl
jne
icebp
and
outs
outs
mov
xchg
and
bound
add
sub
f2xm1
xchg
jecxz
ss
loopne
fisttp
mov
lods
and
inc
lahf
cmp
lds
mov
dec
daa
and
shl
retf
(bad)
xchg
inc
sbb
mov
push
cld
dec
aad
test
imul
pop
inc
mov
xchg
add
stos
cmps
inc
loopne
sbb
cmp
adc
out
mov
pop
ins
lods
or
xchg
dec
cld
mov
dec
mov
(bad)
mov
jg
hlt
loopne
sbb
fdivr
in
push
js
cwde
out
mov
ss
add
adc
lahf
test
adc
cmp
call
mov
bound
bound
jns
in
in
and
daa
aaa
loop
in
or
out
adc
arpl
xchg
call
scas
js
pop
dec
mov
shl
add
mov
fwait
out
xchg
pop
aam
jae
lock
sbb
and
cld
push
clc
xor
arpl
imul
loopne
(bad)
ror
pop
loopne
lods
scas
dec
stos
mov
add
das
aaa
cli
pop
sbb
xchg
iret
adc
pop
cmp
inc
scas
test
ret
stc
jae
(bad)
arpl
sti
xlat
dec
pop
in
mov
cmp
mov
pop
imul
imul
xchg
dec
mov
cdq
push
add
jle
repnz
dec
movd
pop
sbb
test
xchg
xchg
fidivr
sbb
sbb
test
int
mov
into
inc
fisttp
std
mov
mov
mov
mov
mov
inc
aam
das
das
adc
inc
test
stos
mov
cmp
jmp
push
leave
in
xlat
rcl
jge
ds
xchg
sub
mov
fst
div
pop
mov
xlat
sub
ins
jmp
ins
mov
adc
inc
and
inc
pop
jbe
sti
and
adc
(bad)
jbe
mov
cmps
xlat
lods
lods
frstor
mov
dec
cmps
inc
ret
add
lahf
inc
clc
(bad)
(bad)
cmp
mov
cli
into
call
ds
(bad)
adc
cmp
sahf
adc
fisubr
js
jb
adc
loopne
imul
pop
test
(bad)
(bad)
cmp
and
push
add
dec
xor
and
cmp
(bad)
stos
in
lods
out
fldcw
xor
retf
inc
pop
dec
shl
pop
mov
add
cmc
pop
cmp
inc
mov
(bad)
sub
sar
cmp
mov
sahf
test
xchg
xor
js
loopne
cdq
icebp
add
jae
jne
iret
adc
pop
fsubr
push
inc
pop
push
jmp
ins
pushf
jl
sbb
xchg
pop
and
sub
add
lods
pop
sub
mov
dec
xchg
ins
aaa
inc
push
lock
xchg
mov
xlat
xor
popf
fdiv
xor
rcr
iret
ret
icebp
push
lea
xchg
jnp
fld
mov
inc
jmp
add
sahf
pop
xchg
adc
or
push
mov
pop
loop
sub
cmps
in
punpcklbw
std
push
idiv
ins
cmp
retf
adc
pop
xor
xchg
sbb
dec
outs
div
ret
cmps
fnstsw
pop
sbb
mov
jge
dec
aam
cld
inc
test
dec
mov
lock
nop
push
clc
test
and
icebp
movs
or
sbb
loope
out
hlt
inc
cmp
clc
jae
xor
xchg
lahf
fnstenv
mov
mov
mov
outs
ss
dec
aam
xor
mov
dec
sahf
and
cmp
loop
test
addr16
shr
je
mov
loopne
aaa
xor
stos
sub
mov
pop
stc
mov
mov
inc
xor
(bad)
mov
imul
pushf
loop
add
mov
cmp
scas
cmps
jmp
int3
call
sbb
push
inc
sub
(bad)
aaa
adc
mov
ret
sbb
mov
jno
stos
sbb
mov
in
movs
mov
mov
mov
movs
popa
fs
fcomp
xchg
arpl
jo
icebp
out
aas
adc
outs
loop
mov
and
imul
lock
pop
retf
ins
test
xor
jne
mov
and
and
xlat
cmp
or
icebp
mov
cli
ds
sub
std
xchg
or
ficom
pop
fsub
jae
mov
not
lahf
push
sar
out
mov
push
cmp
inc
icebp
lods
sbb
popa
xor
inc
aas
mov
fstp
dec
sbb
das
jl
jg
jle
lock
pop
inc
loop
jge
xor
xchg
add
cdq
inc
pop
das
into
sbb
js
pop
lahf
push
push
push
xchg
icebp
add
jge
fist
fiadd
jmp
test
inc
jmp
jmp
jle
mov
jecxz
lea
xchg
test
(bad)
lea
adc
adc
xchg
out
shl
adc
enter
push
ins
fstp
sbb
pop
test
fdivr
(bad)
repz
add
xor
jmp
in
xchg
cmp
movs
sub
sbb
aam
add
cld
push
std
cmps
cld
sbb
lahf
adc
push
shr
cmc
pop
cmp
repnz
gs
add
xchg
and
push
inc
rol
lahf
cmp
dec
pop
ret
(bad)
push
lock
fwait
ins
adc
je
aad
aam
sahf
fimul
mov
into
or
retf
xor
jo
mov
jl
std
movs
in
jle
jle
ficom
icebp
loop
ja
push
sub
fwait
cmps
mov
inc
test
xchg
in
ret
pushf
mov
jnp
out
fist
jg
and
mov
ror
adc
call
js
test
mov
jmp
jl
add
bnd
jle
jp
xchg
test
pop
xchg
in
in
jne
jge
ins
(bad)
data16
rol
fldenv
and
xor
and
jl
scas
jmp
sub
lds
rcr
cmp
lock
popf
cs
sub
add
mov
icebp
imul
jno
out
pop
lahf
mov
shl
mov
jg
out
iret
xchg
sbb
jp
into
xor
int
mov
xchg
test
mov
push
loope
or
xchg
les
test
cmp
jns
inc
lods
mov
mov
or
mov
(bad)
inc
pop
add
pop
retf
popf
pop
ret
lock
js
ret
dec
icebp
mov
pop
mov
pushw
cmps
inc
sub
cwde
adc
push
jnp
sbb
(bad)
add
cld
jae
imul
loop
icebp
ss
in
ret
adc
sbb
div
push
dec
fidivr
mov
mov
jb
out
test
lods
jne
addr16
in
(bad)
jg
ja
mov
stos
sbb
out
push
jb
xchg
out
add
aaa
mov
xor
shl
fstp
loop
sub
mov
je
mov
mov
jbe
pop
pop
jb
jns
mov
ficomp
ret
test
je
lea
icebp
xchg
clc
xor
or
lea
aaa
adc
and
cmps
jl
xchg
push
add
and
cmp
out
fistp
sar
or
fild
imul
jl
outs
movs
mov
neg
jmp
in
pop
jecxz
push
sub
or
es
pop
fstp
not
xchg
and
mov
(bad)
rcl
cmp
fisubr
retf
pop
fsub
xor
into
pop
mov
sub
add
xlat
sub
ffreep
rcr
mov
sub
movs
int
jp
mov
or
xor
movs
xchg
test
xor
add
cmp
ds
mov
sar
(bad)
inc
lock
outs
ins
cmps
dec
pop
mul
pop
repnz
fsub
int3
inc
push
jb
pusha
popa
inc
(bad)
jp
iret
cld
adc
ret
jno
pop
jbe
addr16
jns
cmc
mov
pop
mov
mov
jae
bound
cmps
loopne
ror
nop
jo
add
fnclex
(bad)
inc
ret
fild
es
fwait
sbb
push
sahf
jae
fisttp
lods
jns
stos
vmovsldup
hlt
fnstenv
aaa
mov
pop
imul
sahf
sbb
sbb
ret
shr
mov
retf
fwait
jno
mov
lds
inc
dec
cmp
inc
lods
je
lock
in
addr16
xchg
loope
add
mov
pop
push
ins
fs
cmp
ss
scas
repnz
push
mov
data16
arpl
or
xchg
jl
clc
mov
pop
jmp
movs
test
xchg
stos
jmp
sub
pop
dec
push
cld
adc
mov
ja
mov
hlt
jmp
sbb
mov
sbb
aaa
mov
fcmovnb
call
clc
jno
leave
out
mov
mov
hlt
xor
mov
aad
or
adc
js
jnp
hlt
(bad)
add
xor
outs
imul
mov
bound
arpl
leave
repz
xchg
jbe
xlat
aas
pusha
pop
hlt
lea
clc
clc
(bad)
jno
pop
js
push
shl
pop
push
shr
mov
hlt
sub
sbb
dec
std
mov
sbb
and
inc
lock
xor
out
jge
test
sbb
xchg
pop
iret
setb
sbb
sbb
add
sbb
sahf
or
push
mov
cmp
pop
lds
outs
mov
pop
out
mov
sub
sub
in
sti
mov
jo
and
out
or
and
push
aas
add
mov
pop
inc
jge
jnp
sar
mov
push
in
and
sbb
xchg
or
ret
outs
(bad)
bound
cmp
in
jnp
out
repz
cld
adc
inc
lock
xor
aaa
pop
xchg
mov
add
mov
or
(bad)
aad
pop
(bad)
mov
ret
push
or
scas
fstp
mov
or
sbb
cdq
jno
in
and
ins
mov
cld
dec
mov
sar
add
cmps
fimul
imul
inc
fwait
xor
mov
iret
retf
ficomp
pop
fdivr
fldenv
add
inc
add
add
add
add
add
add
add
add
adc
add
add
sub
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
inc
add
add
add
inc
inc
add
inc
inc
(bad)
inc
add
(bad)
inc
xchg
js
ja
jg
ja
ja
ja
xchg
add
ja
push
push
pop
jnp
mov
jne
push
push
jo
add
push
add
ja
push
push
pop
jnp
mov
ja
ja
xchg
xchg
ja
jo
ja
js
pushw
ja
adc
ja
loopne
addr16
adc
add
pop
jno
adc
push
add
adc
ja
loopne
addr16
adc
pusha
data16
add
ja
ja
jo
ja
js
add
add
add
add
add
ins
xor
add
mov
add
push
and
add
inc
add
add
add
add
add
dec
imul
add
ja
push
jo
imul
outs
imul
ins
add
(bad)
inc
add
pop
push
ja
or
or
pop
add
push
add
add
add
add
add
add
add
add
and
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
inc
add
add
add
inc
inc
add
inc
inc
(bad)
inc
add
(bad)
inc
add
add
(bad)
push
(bad)
(bad)
push
add
add
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
push
add
(bad)
(bad)
(bad)
(bad)
push
add
(bad)
(bad)
(bad)
(bad)
push
add
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
add
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
add
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
add
add
add
lock
(bad)
(bad)
inc
add
add
add
add
add
(bad)
(bad)
push
inc
add
add
add
(bad)
add
lock
lock
add
lock
lock
add
lock
lock
add
lock
lock
add
lock
(bad)
add
(bad)
add
(bad)
add
(bad)
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
clc
add
(bad)
clc
add
(bad)
clc
add
push
add
jmp
add
inc
add
inc
add
inc
add
add
jg
add
jg
add
jg
adc
jg
xor
jg
jo
jg
lock
push
add
push
pop
(bad)
push
aas
(bad)
push
(bad)
(bad)
push
(bad)
(bad)
push
(bad)
(bad)
push
(bad)
(bad)
(bad)
stc
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
nop
add
jl
add
popa
outs
jae
push
gs
inc
pop
add
add
pop
add
gs
xor
add
add
daa
and
add
pop
add
add
add
add
add
add
xor
pop
add
(bad)
inc
add
add
add
or
push
add
push
and
inc
sub
add
add
add
xor
pop
add
(bad)
inc
add
add
add
push
add
add
push
adc
add
add
add
add
add
outs
xor
pop
add
(bad)
inc
add
add
add
adc
add
push
mov
add
pop
add
add
add
add
add
xor
pop
add
(bad)
inc
add
add
add
adc
add
push
push
add
add
push
add
popa
gs
add
je
add
add
add
add
add
adc
add
add
or
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
and
imul
sbb
sub
jae
sub
jnp
sub
mov
sub
mov
pushf
pushf
pushf
add
cmp
add
lods
add
inc
mov
push
push
mov
jae
mov
mov
add
arpl
add
mov
add
mov
pop
mov
arpl
add
mov
imul
jae
mov
test
add
mov
movs
mov
mov
pop
pop
into
add
into
add
movs
into
add
lods
into
add
(bad)
into
add
into
into
add
and
add
(bad)
add
(bad)
add
(bad)
add
(bad)
add
(bad)
add
(bad)
add
(bad)
add
mov
(bad)
add
and
add
sub
add
fiadd
inc
cmp
add
fiadd
pop
inc
fiadd
arpl
add
fiadd
(bad)
fiadd
arpl
add
out
jnp
out
xchg
jae
add
out
lods
lods
out
mov
out
add
out
add
(bad)
out
add
out
add
out
out
add
test
jnp
test
xchg
xchg
test
into
(bad)
test
out
out
test
inc
inc
arpl
add
inc
mov
add
inc
movs
pushf
inc
lods
pushf
inc
mov
inc
mov
movs
inc
mov
inc
(bad)
into
inc
(bad)
(bad)
inc
out
inc
out
out
inc
div
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
add
add
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
jae
add
add
add
add
jae
jae
pop
pop
pop
inc
xor
sbb
sub
sub
push
push
adc
adc
jae
cmp
cmp
sub
and
and
push
and
jae
cmp
inc
xor
cmp
cmp
adc
ds
xor
and
push
dec
inc
dec
sbb
jae
sub
sub
dec
xor
ins
pop
push
pop
pop
sub
and
and
dec
dec
dec
dec
dec
dec
dec
xor
or
adc
cmp
inc
pop
push
push
pop
das
inc
adc
and
dec
push
push
dec
imul
or
push
cmp
push
push
ins
ins
pop
push
jae
inc
or
or
cmp
dec
dec
pop
push
dec
sbb
inc
wbinvd
or
es
sub
sub
jae
jae
sbb
sbb
sbb
cs
sbb
jae
jae
jae
jae
jae
dec
popa
adc
jae
jae
jae
jae
jae
jae
push
inc
jae
jae
jae
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
aas
(bad)
(bad)
(bad)
aas
(bad)
inc
cwde
or
lock
add
add
push
add
popa
addr16
add
add
jle
add
add
add
add
adc
add
add
or
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
and
imul
sbb
sub
jae
sub
jnp
sub
mov
sub
mov
pushf
pushf
pushf
add
cmp
add
lods
add
inc
mov
push
push
mov
jae
mov
mov
add
arpl
add
mov
add
mov
pop
mov
arpl
add
mov
imul
jae
mov
test
add
mov
movs
mov
mov
pop
pop
into
add
into
add
movs
into
add
lods
into
add
(bad)
into
add
into
into
add
and
add
(bad)
add
(bad)
add
(bad)
add
(bad)
add
(bad)
add
(bad)
add
(bad)
add
mov
(bad)
add
and
add
sub
add
fiadd
inc
cmp
add
fiadd
pop
inc
fiadd
arpl
add
fiadd
(bad)
fiadd
arpl
add
out
jnp
out
xchg
jae
add
out
lods
lods
out
mov
out
add
out
add
(bad)
out
add
out
add
out
out
add
test
jnp
test
xchg
xchg
test
into
(bad)
test
out
out
test
inc
inc
arpl
add
inc
mov
add
inc
movs
pushf
inc
lods
pushf
inc
mov
inc
mov
movs
inc
mov
inc
(bad)
into
inc
(bad)
(bad)
inc
out
inc
out
out
inc
div
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
add
add
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
jae
add
add
add
add
jae
jae
pop
pop
pop
inc
xor
sbb
sub
sub
push
push
adc
adc
jae
cmp
cmp
sub
and
and
push
and
jae
cmp
inc
xor
cmp
cmp
adc
ds
xor
and
push
dec
inc
dec
sbb
jae
sub
sub
dec
xor
ins
pop
push
pop
pop
sub
and
and
dec
dec
dec
dec
dec
dec
dec
xor
or
adc
cmp
inc
pop
push
push
pop
das
inc
adc
and
dec
push
push
dec
imul
or
push
cmp
push
push
ins
ins
pop
push
jae
inc
or
or
cmp
dec
dec
pop
push
dec
sbb
inc
wbinvd
or
es
sub
sub
jae
jae
sbb
sbb
sbb
cs
sbb
jae
jae
jae
jae
jae
dec
popa
adc
jae
jae
jae
jae
jae
jae
push
inc
jae
jae
jae
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
aas
(bad)
(bad)
(bad)
aas
(bad)
inc
cwde
or
lock
add
add
push
add
popa
addr16
sbb
xchg
add
jle
add
add
add
add
adc
add
add
or
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
and
imul
sbb
sub
jae
sub
jnp
sub
mov
sub
mov
pushf
pushf
pushf
add
cmp
add
lods
add
inc
mov
push
push
mov
jae
mov
mov
add
arpl
add
mov
add
mov
pop
mov
arpl
add
mov
imul
jae
mov
test
add
mov
movs
mov
mov
pop
pop
into
add
into
add
movs
into
add
lods
into
add
(bad)
into
add
into
into
add
and
add
(bad)
add
(bad)
add
(bad)
add
(bad)
add
(bad)
add
(bad)
add
(bad)
add
mov
(bad)
add
and
add
sub
add
fiadd
inc
cmp
add
fiadd
pop
inc
fiadd
arpl
add
fiadd
(bad)
fiadd
arpl
add
out
jnp
out
xchg
jae
add
out
lods
lods
out
mov
out
add
out
add
(bad)
out
add
out
add
out
out
add
test
jnp
test
xchg
xchg
test
into
(bad)
test
out
out
test
inc
inc
arpl
add
inc
mov
add
inc
movs
pushf
inc
lods
pushf
inc
mov
inc
mov
movs
inc
mov
inc
(bad)
into
inc
(bad)
(bad)
inc
out
inc
out
out
inc
div
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
add
add
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
jae
add
add
add
add
jae
jae
pop
pop
pop
inc
xor
sbb
sub
sub
push
push
adc
adc
jae
cmp
cmp
sub
and
and
push
and
jae
cmp
inc
xor
cmp
cmp
adc
ds
xor
and
push
dec
inc
dec
sbb
jae
sub
sub
dec
xor
ins
pop
push
pop
pop
sub
and
and
dec
dec
dec
dec
dec
dec
dec
xor
or
adc
cmp
inc
pop
push
push
pop
das
inc
adc
and
dec
push
push
dec
imul
or
push
cmp
push
push
ins
ins
pop
push
jae
inc
or
or
cmp
dec
dec
pop
push
dec
sbb
inc
wbinvd
or
es
sub
sub
jae
jae
sbb
sbb
sbb
cs
sbb
jae
jae
jae
jae
jae
dec
popa
adc
jae
jae
jae
jae
jae
jae
push
inc
jae
jae
jae
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
aas
(bad)
(bad)
(bad)
aas
(bad)
inc
cwde
or
lock
add
add
add
or
add
popa
xor
sbb
ds
add
add
add
add
add
add
add
and
add
add
add
add
add
add
add
adc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
inc
add
add
add
inc
inc
add
inc
inc
(bad)
inc
add
(bad)
inc
add
add
add
add
add
or
mov
add
add
add
or
(bad)
lock
add
add
add
or
lock
lock
add
add
or
or
push
loopne
(bad)
(bad)
dec
add
add
add
loopne
(bad)
(bad)
push
(bad)
(bad)
push
add
add
add
loopne
(bad)
(bad)
push
push
add
add
add
add
loopne
(bad)
(bad)
push
add
(bad)
inc
add
add
push
loopne
(bad)
(bad)
dec
(bad)
(bad)
(bad)
inc
add
add
push
loopne
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
or
loopne
(bad)
(bad)
(bad)
(bad)
(bad)
inc
(bad)
(bad)
(bad)
push
add
add
ud0
(bad)
push
(bad)
(bad)
push
add
add
add
add
(bad)
(bad)
(bad)
(bad)
inc
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
sar
push
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
jg
add
add
add
add
add
add
add
add
add
jmp
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
add
add
add
add
add
add
add
add
add
rol
add
add
add
add
add
add
add
add
inc
add
add
add
inc
inc
add
inc
inc
(bad)
inc
add
(bad)
inc
add
mov
inc
add
add
add
add
add
add
(bad)
clc
add
add
add
push
push
push
add
ud0
or
add
inc
add
inc
add
inc
add
inc
add
aas
add
add
add
add
add
add
add
add
add
add
add
add
add
cmp
add
(bad)
inc
add
inc
add
inc
add
inc
add
js
sbb
or
inc
cmps
add
add
popa
xor
sbb
xchg
add
jle
add
add
add
add
adc
add
add
or
push
add
add
add
add
add
add
add
add
add
add
(bad)
inc
add
add
fstp
fld
stc
clc
stc
add
out
lock
add
add
jns
out
in
(bad)
sti
cld
add
clc
stc
add
jmp
add
add
push
push
add
outs
add
aad
add
jne
imul
add
(bad)
add
fcomp
add
sbb
add
dec
dec
add
and
pop
add
xor
add
adc
dec
inc
aas
add
dec
add
sub
add
cmp
mov
or
add
push
xor
xor
daa
add
call
sldt
pop
aaa
add
ja
add
inc
sldt
push
sbb
add
pop
and
retf
add
and
shl
add
sbb
shr
add
(bad)
jno
add
mov
add
jne
add
js
add
jl
add
ja
add
sub
in
push
add
mov
add
mov
push
add
xchg
sub
icebp
(bad)
xchg
add
call
in
(bad)
add
out
add
ror
add
(bad)
add
fcompp
add
rcl
add
(bad)
inc
idiv
test
add
push
(bad)
(bad)
add
test
add
mov
test
add
mov
and
sahf
add
leave
mov
sub
xchg
add
cmps
add
lds
add
je
add
add
xchg
pusha
add
mov
add
add
outs
add
mov
add
mov
pop
add
xchg
ins
add
cmps
jle
xchg
aam
add
jno
add
arpl
add
add
pushf
ins
add
xchg
push
sbb
jo
dec
mov
jp
fldlg2
out
add
add
pop
inc
add
add
ins
pop
add
in
add
pop
add
repnz
add
ins
add
jmp
add
dec
dec
add
pop
push
add
push
add
add
(bad)
inc
data16
pop
add
jecxz
add
shr
add
loop
add
add
mov
add
scas
fadd
add
in
push
scas
xlat
add
mov
add
mov
add
scas
aam
or
xlat
add
mov
loopne
adc
fiadd
sbb
jecxz
sbb
lods
add
mov
jecxz
and
lea
inc
(bad)
dec
retf
push
retf
push
retf
out
pop
into
jmp
add
jmp
data16
sbb
add
repz
add
std
inc
inc
into
cmc
add
cmc
add
clc
cld
add
aaa
cmp
cmc
sti
inc
loop
cmc
add
(bad)
xlat
add
inc
lock
inc
repnz
in
add
dec
repz
dec
in
add
push
test
sub
add
push
stc
add
push
cmc
add
pop
cld
add
pop
sti
add
push
cli
add
push
repz
pop
inc
xor
xor
add
push
in
add
pusha
inc
ss
in
add
inc
inc
ins
inc
dec
jae
add
add
inc
push
inc
jp
inc
test
cli
add
int
add
dec
inc
pop
outs
cld
add
ds
add
dec
add
cld
cld
add
cmc
cmc
add
repnz
in
in
add
jmp
in
in
loopne
loopne
fstp
fld
fcmovnu
fild
(bad)
fld
(bad)
(bad)
(bad)
add
into
into
add
cmps
cmps
add
nop
nop
add
mov
add
jo
bound
add
cmp
add
xor
add
sub
and
and
push
push
push
add
add
add
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
hlt
hlt
hlt
hlt
hlt
hlt
push
push
push
push
push
push
push
push
push
hlt
sbb
sbb
push
push
push
push
push
push
hlt
and
mov
push
push
push
push
hlt
sub
mov
movs
xchg
cmps
cmc
push
push
push
sub
cmp
or
cmps
cmc
push
push
cmp
inc
inc
das
repz
cmps
mov
inc
dec
dec
add
or
push
cmp
or
out
or
mov
mov
sti
(bad)
mul
jp
xchg
mov
mov
cmp
xchg
push
push
mov
cmp
js
add
push
mov
in
pop
pop
pusha
imul
push
mov
pop
pop
push
pop
jae
push
push
push
push
push
push
mov
arpl
cmc
push
push
push
push
push
push
push
push
push
mov
push
push
push
push
push
push
(bad)
dec
repz
xor
xor
add
movs
add
mov
add
or
add
repz
add
cmp
add
inc
add
push
add
cmps
rol
cmps
loopne
xchg
xchg
aas
or
add
add
lock
add
add
add
push
add
popa
xor
sbb
xchg
add
jle
add
add
add
add
adc
add
add
or
push
add
add
add
add
add
add
add
add
add
add
(bad)
inc
add
add
fstp
fld
stc
clc
stc
add
out
lock
add
add
jns
out
in
(bad)
sti
cld
add
clc
stc
add
jmp
add
add
push
push
add
outs
add
aad
add
jne
imul
add
(bad)
add
fcomp
add
sbb
add
dec
dec
add
and
pop
add
xor
add
adc
dec
inc
aas
add
dec
add
sub
add
cmp
mov
or
add
push
xor
xor
daa
add
call
sldt
pop
aaa
add
ja
add
inc
sldt
push
sbb
add
pop
and
retf
add
and
shl
add
sbb
shr
add
(bad)
jno
add
mov
add
jne
add
js
add
jl
add
ja
add
sub
in
push
add
mov
add
mov
push
add
xchg
sub
icebp
(bad)
xchg
add
call
in
(bad)
add
out
add
ror
add
(bad)
add
fcompp
add
rcl
add
(bad)
inc
idiv
test
add
push
(bad)
(bad)
add
test
add
mov
test
add
mov
and
sahf
add
leave
mov
sub
xchg
add
cmps
add
lds
add
je
add
add
xchg
pusha
add
mov
add
add
outs
add
mov
add
mov
pop
add
xchg
ins
add
cmps
jle
xchg
aam
add
jno
add
arpl
add
add
pushf
ins
add
xchg
push
sbb
jo
dec
mov
jp
fldlg2
out
add
add
pop
inc
add
add
ins
pop
add
in
add
pop
add
repnz
add
ins
add
jmp
add
dec
dec
add
pop
push
add
push
add
add
(bad)
inc
data16
pop
add
jecxz
add
shr
add
loop
add
add
mov
add
scas
fadd
add
in
push
scas
xlat
add
mov
add
mov
add
scas
aam
or
xlat
add
mov
loopne
adc
fiadd
sbb
jecxz
sbb
lods
add
mov
jecxz
and
lea
inc
(bad)
dec
retf
push
retf
push
retf
out
pop
into
jmp
add
jmp
data16
sbb
add
repz
add
std
inc
inc
into
cmc
add
cmc
add
clc
cld
add
aaa
cmp
cmc
sti
inc
loop
cmc
add
(bad)
xlat
add
inc
lock
inc
repnz
in
add
dec
repz
dec
in
add
push
test
sub
add
push
stc
add
push
cmc
add
pop
cld
add
pop
sti
add
push
cli
add
push
repz
pop
inc
xor
xor
add
push
in
add
pusha
inc
ss
in
add
inc
inc
ins
inc
dec
jae
add
add
inc
push
inc
jp
inc
test
cli
add
int
add
dec
inc
pop
outs
cld
add
ds
add
dec
add
cld
cld
add
cmc
cmc
add
repnz
in
in
add
jmp
in
in
loopne
loopne
fstp
fld
fcmovnu
fild
(bad)
fld
(bad)
(bad)
(bad)
add
into
into
add
cmps
cmps
add
nop
nop
add
mov
add
jo
bound
add
cmp
add
xor
add
sub
and
and
push
push
push
add
add
add
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
hlt
hlt
hlt
hlt
hlt
hlt
push
push
push
push
push
push
push
push
push
hlt
sbb
sbb
push
push
push
push
push
push
hlt
and
mov
push
push
push
push
hlt
sub
mov
movs
xchg
cmps
cmc
push
push
push
sub
cmp
or
cmps
cmc
push
push
cmp
inc
inc
das
repz
cmps
mov
inc
dec
dec
add
or
push
cmp
or
out
or
mov
mov
sti
(bad)
mul
jp
xchg
mov
mov
cmp
xchg
push
push
mov
cmp
js
add
push
mov
in
pop
pop
pusha
imul
push
mov
pop
pop
push
pop
jae
push
push
push
push
push
push
mov
arpl
cmc
push
push
push
push
push
push
push
push
push
mov
push
push
push
push
push
push
(bad)
dec
repz
xor
xor
add
movs
add
mov
add
or
add
repz
add
cmp
add
inc
add
push
add
cmps
rol
cmps
loopne
xchg
xchg
aas
or
add
add
lock
add
add
add
add
add
outs
gs
add
(bad)
inc
add
sldt
add
adc
add
push
mov
add
pop
add
add
add
add
add
gs
(bad)
inc
add
sldt
add
adc
add
push
dec
adc
add
add
add
add
clts
add
gs
add
add
add
jb
popa
je
imul
gs
fs
gs
add
(bad)
inc
add
pop
or
or
adc
add
add
add
add
adc
add
gs
xor
add
jb
imul
push
gs
fs
gs
add
(bad)
inc
add
outs
or
or
adc
add
add
add
add
gs
pop
add
(bad)
inc
add
sldt
add
adc
add
push
loopne
add
pop
add
add
add
adc
add
popa
addr16
add
add
add
add
add
add
add
add
add
add
and
add
add
add
add
add
add
add
adc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
inc
add
add
add
inc
inc
add
inc
inc
(bad)
inc
add
(bad)
inc
add
add
jo
add
jo
add
jo
add
inc
add
inc
add
inc
add
dec
add
add
add
jo
(bad)
inc
(bad)
inc
(bad)
ud0
clc
or
add
(bad)
dec
clc
or
add
(bad)
dec
lock
or
ud0
jo
add
add
add
add
(bad)
inc
jo
add
add
add
ud0
push
jo
add
add
add
(bad)
(bad)
(bad)
push
or
add
add
ud0
(bad)
(bad)
(bad)
clc
add
add
add
add
ud0
(bad)
(bad)
(bad)
clc
add
add
add
add
add
(bad)
(bad)
(bad)
(bad)
clc
add
add
add
add
add
(bad)
(bad)
(bad)
dec
add
add
add
ud0
(bad)
dec
add
add
add
ud0
(bad)
dec
add
add
add
add
(bad)
(bad)
clc
add
push
out
out
out
mov
add
add
add
push
out
out
out
mov
add
out
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
aas
(bad)
inc
ud0
add
(bad)
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
jmp
add
jmp
add
inc
add
inc
add
inc
add
inc
add
adc
add
and
add
add
add
add
add
rol
add
add
add
add
add
add
add
add
inc
add
add
add
inc
inc
add
inc
inc
(bad)
inc
add
(bad)
inc
add
add
add
add
add
add
add
add
add
(bad)
add
add
add
or
lock
add
add
lock
add
add
lock
add
add
lock
add
add
or
add
add
ud0
add
add
add
(bad)
inc
add
clc
add
add
add
mov
add
std
inc
add
inc
add
inc
add
jg
add
aas
add
lock
add
lock
lock
lock
lock
lock
clc
sldt
clc
pop
add
clc
pop
add
lock
lock
add
cwde
or
or
inc
cmp
add
adc
add
gs
xor
add
sldt
je
imul
jb
gs
(bad)
inc
add
pop
or
or
adc
pop
add
add
add
add
add
gs
xor
add
pop
out
add
add
pop
add
add
add
add
bound
xor
add
pop
pop
out
add
add
pop
add
add
add
add
push
add
gs
xor
add
pop
pop
out
add
add
pop
add
add
add
add
push
add
gs
xor
add
pop
push
out
add
add
pop
add
add
add
int3
xor
sbb
(bad)
dec
pop
inc
mov
cs
cmps
mov
outs
inc
sub
push
jmp
iret
adc
pusha
rcl
xor
add
fldlg2
add
add
add
ins
inc
outs
outs
jne
add
push
bound
imul
popa
arpl
sub
jne
and
fs
add
add
inc
add
sub
add
ins
je
add
jmp
add
fdivr
loopne
adc
dec
inc
add
add
add
sub
add
fild
inc
add
add
add
add
add
add
add
add
or
pop
push
or
or
or
or
or
push
adc
or
adc
adc
adc
pop
sbb
adc
adc
inc
add
add
add
add
or
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
inc
add
or
loopne
add
and
add
add
adc
inc
add
add
add
add
add
add
or
inc
add
add
add
add
add
jge
add
add
add
push
adc
pop
and
xor
inc
mov
adc
xor
or
push
pop
sbb
sbb
sub
cmp
inc
inc
inc
dec
dec
dec
push
push
push
push
push
pop
pop
pop
arpl
addr16
jne
ja
jns
add
xchg
xchg
xchg
xchg
xchg
xchg
cwde
cdq
call
test
stos
mov
mov
mov
mov
(bad)
(bad)
enter
rcl
aad
xlat
fcomp
(bad)
loop
in
out
call
repz
cmc
div
clc
stc
cli
inc
add
add
add
add
add
add
add
add
add
add
add
add
or
inc
add
add
add
add
add
add
add
add
and
push
adc
pop
popa
jno
and
or
mov
or
xor
adc
push
and
loope
icebp
pop
sbb
sbb
daa
sub
sub
cmp
inc
inc
inc
dec
dec
dec
push
push
push
push
push
pop
pop
pop
arpl
addr16
jne
ja
jns
add
mov
xchg
xchg
cwde
cdq
call
test
stos
mov
mov
mov
mov
(bad)
(bad)
enter
rcl
aad
xlat
fcomp
(bad)
jecxz
in
out
jmp
cmc
div
clc
stc
cli
(bad)
fiadd
or
add
add
add
add
add
and
add
or
cmp
clc
call
bound
inc
mov
jg
xor
ret
out
in
inc
out
xchg
inc
and
cmp
loope
ficom
jg
pop
pop
sbb
mov
inc
clc
call
bound
add
mov
sbb
in
xchg
inc
loopne
les
adc
mov
mov
add
inc
icebp
push
mov
(bad)
cmp
pop
push
xchg
inc
fisttp
jmp
jmp
sbb
test
(bad)
fxch
inc
(bad)
sar
add
aaa
ret
dec
aas
in
add
mov
es
ffreep
cmps
(bad)
arpl
inc
xor
sbb
mov
add
inc
sbb
mov
cli
push
pop
clc
add
add
aas
mov
out
stc
cld
inc
lock
add
(bad)
jg
dec
jg
test
clc
pop
pop
sbb
add
xor
xor
sahf
pop
inc
mov
xor
es
pop
std
push
hlt
out
cld
or
ret
aas
inc
mov
dec
cld
retf
inc
retf
jg
repz
shl
mov
xor
cld
test
add
cld
dec
and
scas
loope
xchg
add
adc
xor
sbb
add
mov
fdivr
jae
cmc
inc
lahf
movs
inc
sbb
add
inc
add
xchg
in
repz
inc
loopne
inc
and
inc
icebp
pop
ret
push
inc
enter
xor
and
add
cld
dec
jl
(bad)
rol
dec
pop
(bad)
inc
fcmovne
jg
push
mov
jg
fwait
pop
pusha
hlt
inc
dec
dec
icebp
test
add
inc
dec
nop
in
repz
inc
loopne
inc
and
test
xor
cmp
fisttp
cld
sub
mov
aas
clc
call
inc
aas
(bad)
stos
dec
loop
xor
pusha
xor
jp
stc
sar
add
inc
dec
inc
xchg
xor
add
mov
lock
add
loopne
cmp
rol
add
shl
clc
mov
jmp
xchg
lods
pop
into
fwait
cmp
int
cmp
call
into
adc
mov
jb
pop
and
or
inc
outs
dec
inc
xchg
sbb
xor
loopne
inc
and
sub
mov
push
mov
pop
lea
sbb
jae
add
clc
push
push
push
dec
dec
sub
or
dec
sti
jbe
ja
mov
imul
es
popf
ins
(bad)
push
push
rol
add
icebp
hlt
lahf
jecxz
jecxz
and
or
repnz
retf
and
xchg
aad
inc
pop
adc
cs
out
dec
std
mov
inc
mov
fist
add
xor
xor
sbb
std
push
mov
cld
or
stos
idiv
lock
stos
in
push
cs
in
cmc
stos
jl
les
pop
stos
das
cld
add
xchg
call
clc
adc
enter
push
xchg
xchg
cld
les
es
fdivr
arpl
jne
cli
in
pop
daa
(bad)
sbb
clc
call
xor
push
mov
popf
jae
jmp
mov
sti
movs
aad
sbb
inc
dec
pop
aas
pop
retf
std
jbe
ds
push
inc
or
xchg
cmp
scas
inc
lock
add
loopne
jg
aaa
inc
xchg
repz
adc
icebp
out
mov
aam
ja
mov
mov
sahf
cli
popf
cwde
inc
mov
inc
sbb
mov
movs
scas
sub
(bad)
pushf
test
cmps
(bad)
mov
mov
repnz
xchg
push
in
pop
fstp
cld
or
in
mov
add
mov
dec
cmp
xlat
or
add
mov
jecxz
fcmove
inc
les
mov
out
ret
dec
cmps
cmp
cwde
inc
cmp
aas
icebp
scas
cmp
push
(bad)
imul
xchg
jle
sbb
xlat
mov
sub
ins
xlat
fcomp
inc
xchg
jg
inc
cld
(bad)
mov
loope
clc
or
arpl
add
inc
loop
aas
loope
clc
or
add
je
rcl
outs
(bad)
and
test
out
pop
loop
and
repz
lahf
(bad)
dec
inc
push
mov
iret
das
mov
lahf
lock
add
add
inc
cld
inc
add
xor
addr16
daa
mov
inc
mov
sub
leave
jecxz
push
loop
mov
lahf
(bad)
dec
aad
psllq
out
pop
cld
mov
outs
cld
xor
add
pop
sbb
add
xchg
fninit
mov
scas
in
push
mov
call
mov
fs
xchg
shr
sbb
cmp
and
repnz
inc
in
fnstcw
inc
jae
pop
mov
int
xchg
cmc
(bad)
pop
lock
inc
stos
xchg
inc
pop
and
add
imul
sub
stc
lds
sar
pop
and
hlt
test
aam
jo
imul
mov
and
retf
inc
push
jo
pop
retf
inc
and
dec
clc
pop
sahf
adc
aas
test
(bad)
and
mov
inc
jle
inc
loop
out
idiv
ins
adc
pop
jmp
popa
sbb
dec
xor
inc
leave
sbb
pop
ret
aaa
fs
scas
repnz
aas
push
jl
mov
add
add
push
cld
imul
xor
mov
and
test
bound
loop
jnp
cmp
cmps
loop
popa
jnp
cmps
pop
jmp
clc
dec
adc
xchg
sti
mov
(bad)
fiadd
nop
(bad)
mov
mov
cld
inc
dec
addr16
rol
test
and
movs
jl
inc
bnd
imul
ins
jb
pushf
shl
test
je
jmp
ret
sbb
xor
push
xchg
fidivr
cs
push
xchg
aad
mov
add
imul
test
ss
cmp
add
sub
dec
pop
imul
fcmovne
inc
repz
pop
fcomp
lods
jmp
adc
inc
leave
sbb
loope
xor
mov
inc
and
mov
(bad)
dec
mov
jmp
jg
and
jg
mov
pop
enter
sbb
inc
fs
test
xchg
loopne
lds
stc
push
imul
stos
js
call
inc
and
inc
stos
fsubr
out
fidivr
imul
and
inc
scas
cmp
add
fisttp
inc
ret
out
inc
mov
aas
jmp
jg
and
pop
js
cmp
imul
loop
data16
jo
movs
inc
leave
add
ins
add
jb
xlat
inc
and
pop
(bad)
iret
add
call
jg
adc
sbb
jbe
stc
cmc
inc
inc
cwde
jg
xchg
repnz
adc
arpl
inc
mov
rol
jno
imul
inc
leave
push
ins
outs
pop
ret
xor
(bad)
(bad)
xor
xor
stc
mov
(bad)
and
jbe
(bad)
jg
pop
outs
(bad)
and
outs
pop
nop
xor
pop
mov
jb
dec
shr
aad
stc
and
test
push
ret
into
push
jl
ror
jg
cmc
mov
in
adc
cs
adc
fcomp
dec
std
adc
clc
ins
inc
jg
and
(bad)
mov
jl
loop
pop
mov
cmp
cmp
out
retf
(bad)
mov
pop
je
stc
and
push
mov
ds
mov
mov
addr16
inc
mov
arpl
lods
adc
jg
outs
(bad)
es
xor
add
shl
mov
adc
pop
xchg
cmps
test
ss
pushf
das
call
aaa
ret
lods
movs
sub
repnz
dec
loope
and
adc
mov
jecxz
add
loope
jg
(bad)
inc
leave
dec
(bad)
(bad)
and
out
xlat
je
xor
stc
mov
out
outs
in
repz
test
jge
aas
mov
mov
cli
scas
cmp
jge
cld
(bad)
mov
fistp
inc
test
inc
adc
xor
ret
jae
add
pop
dec
jg
adc
xchg
sub
adc
fsubr
add
int3
iret
stc
and
dec
inc
xchg
pop
cli
scas
cmp
jge
cld
(bad)
mov
xchg
push
outs
dec
mov
aas
call
add
fistp
mov
cld
inc
jle
movs
aam
int3
and
fcmovb
out
pop
xchg
lea
xchg
iret
out
jae
sub
sub
movs
inc
leave
sbb
sub
mov
int
add
mov
jmp
dec
das
(bad)
fild
daa
(bad)
inc
aas
jmp
outs
(bad)
and
pop
dec
pushf
lahf
ds
push
sub
pop
xor
jnp
ja
xchg
inc
and
xchg
jp
add
in
popa
icebp
inc
ror
dec
inc
clc
mov
rcr
rol
jmp
jg
and
je
bound
test
add
iret
mov
and
sbb
out
fidivr
pop
mov
mov
cld
inc
dec
sti
dec
cld
xor
mov
addr16
xchg
jne
das
mov
xchg
push
cmp
jle
xlat
mov
scas
in
loope
dec
jg
inc
dec
xchg
popf
addr16
mov
inc
or
int3
retf
pushf
inc
rcl
dec
jg
pop
xchg
scas
mov
add
aas
cld
outs
mov
leave
aas
je
out
inc
stos
retf
loope
test
repz
mov
jg
inc
inc
stos
sbb
xchg
fidivr
sbb
cdq
fwait
inc
and
jg
fld
mul
addr16
clc
add
jmp
arpl
sub
stc
inc
dec
mov
pop
in
adc
es
push
lds
inc
mov
inc
cld
movs
inc
leave
pop
cli
mov
jmp
jge
cld
(bad)
mov
xchg
arpl
js
pop
pop
hlt
jmp
(bad)
imul
popf
mov
popf
push
sti
pop
dec
jg
jne
out
sub
mov
mov
jp
jno
in
popa
outs
dec
jg
inc
jg
pop
aas
out
fidivr
add
sub
clc
add
jmp
repnz
and
adc
aas
arpl
and
adc
(bad)
push
pop
jb
loop
les
gs
sbb
test
jmp
xchg
jp
pop
jp
add
out
out
clc
push
push
pop
clc
or
inc
sbb
js
add
sbb
aaa
pop
push
pop
pop
cmp
data16
push
ins
jne
lds
xchg
jno
mov
jae
je
jmp
test
jnp
retf
out
pop
in
aad
add
repz
jnp
inc
les
inc
clc
or
icebp
pop
imul
aas
inc
sbb
mov
loopne
fcmovne
jno
mov
loop
lea
lahf
(bad)
dec
inc
push
mov
fxch
pop
jp
add
jmp
jg
das
xchg
sbb
mov
inc
jecxz
ds
inc
cld
cmp
ds
pop
xor
pop
int3
nop
inc
pop
fldcw
push
out
adc
xchg
leave
loop
daa
aam
xchg
push
ror
imul
sbb
lock
(bad)
jecxz
fwait
sub
xor
sbb
jmp
cmp
fnstsw
in
int
pop
fld
imul
enter
xor
aad
jecxz
inc
cmp
neg
cli
sub
push
stos
ret
dec
das
mov
cmp
call
daa
ret
nop
fcomp
adc
mov
jmp
sbb
leave
cmp
inc
pop
jns
sbb
(bad)
jo
and
dec
lea
and
(bad)
xlat
dec
loopne
push
dec
push
or
jns
mov
mov
sahf
sub
and
xor
jne
dec
xchg
cwde
ja
lea
imul
(bad)
daa
pop
iret
and
icebp
add
mov
stos
dec
mov
call
add
bound
sbb
xchg
movs
dec
xchg
mov
out
mov
lods
pop
adc
ds
xchg
mov
add
mov
mov
jg
jp
inc
sar
icebp
retf
ds
dec
cmp
inc
push
repz
icebp
jne
xlat
in
sub
stos
pop
sub
les
arpl
fwait
(bad)
stc
or
(bad)
call
stc
sbb
adc
mov
scas
cld
adc
pop
repz
inc
loopne
jg
mov
ficomp
add
add
xlat
(bad)
push
(bad)
rcr
gs
dec
sbb
into
dec
mov
xor
dec
(bad)
jne
pop
or
(bad)
xor
shr
aaa
icebp
inc
imul
(bad)
jp
adc
xor
into
rol
xor
movs
scas
sub
jle
aas
leave
xor
cmp
mov
inc
add
rol
cld
into
idiv
add
loopne
sbb
add
add
inc
mov
cmp
jl
icebp
sub
jmp
mov
xlat
or
rol
xchg
mov
sub
ja
sti
inc
js
jmp
push
sbb
(bad)
les
xlat
out
scas
test
mov
adc
mov
(bad)
test
push
jne
xor
(bad)
and
or
cmps
(bad)
stc
popf
outs
inc
lock
mov
ja
mov
cld
add
cs
jecxz
(bad)
sub
les
inc
lods
dec
les
push
xchg
jecxz
les
cli
push
jl
inc
or
clc
stos
in
pop
jl
dec
icebp
les
repnz
in
mov
das
out
mov
xor
out
inc
sub
add
sar
add
mov
out
mov
mov
xlat
lea
mov
repnz
jo
push
mov
adc
iret
clc
pop
inc
adc
ja
pop
dec
test
pop
test
das
repnz
out
ds
hlt
cmp
jg
or
add
je
lock
sub
scas
cld
add
cs
iret
icebp
pop
inc
shr
sub
inc
shl
loop
cld
sbb
add
push
cli
scas
inc
inc
or
pop
in
pop
sar
idiv
add
ds
aas
lock
or
jmp
or
add
ror
adc
(bad)
add
add
add
jne
and
test
out
icebp
pop
dec
stos
pop
clc
xlat
icebp
or
int3
cmc
loop
cld
sbb
inc
lds
push
xor
add
shrd
xlat
loop
cmp
loopne
sbb
add
add
inc
mov
cwde
fcomip
cmp
inc
loopne
inc
icebp
jne
repz
clc
mov
add
mov
add
imul
add
mov
inc
push
mov
add
push
(bad)
stos
cdq
inc
rol
xchg
stc
pand
mov
add
xchg
mov
inc
cdq
fsubrp
inc
add
aam
inc
add
ror
cld
iret
pop
jg
das
pop
(bad)
cs
adc
inc
push
sar
add
push
add
jne
nop
aas
out
icebp
das
dec
call
add
out
pop
in
outs
cmp
lahf
pop
mov
arpl
xor
xor
(bad)
or
inc
mov
add
rcr
(bad)
addr16
inc
sbb
xchg
pop
jecxz
les
add
inc
pop
push
dec
icebp
out
push
jmp
add
aaa
lahf
inc
mov
add
out
pop
in
outs
cmp
lahf
pop
mov
mov
xchg
in
icebp
in
fsubr
pushf
movs
jg
retf
test
cmp
fcmovu
fstp
mov
push
mov
or
jmp
mov
or
inc
cmp
xor
jg
dec
(bad)
ret
das
les
adc
inc
jne
enter
fdivr
sub
scas
ds
shl
out
mov
cmp
data16
test
mov
loop
push
jb
cmp
cmp
push
dec
adc
pop
mov
xor
and
mov
adc
data16
inc
and
cmp
jecxz
stos
pop
jl
jle
mov
add
bound
mov
xchg
mov
xchg
mov
sub
inc
add
test
sar
cmps
xchg
icebp
xor
test
call
pop
scas
fst
xchg
mov
dec
or
out
data16
call
cmps
mov
je
sahf
adc
pop
sti
(bad)
mov
mov
aas
xchg
ds
ins
sub
xchg
lods
cmc
jmp
dec
sbb
mov
sub
xchg
push
jmp
mov
dec
in
jns
push
sti
jmp
jne
mov
sub
adc
dec
ret
shl
jmp
sub
mov
jmp
(bad)
lahf
xchg
push
sti
xchg
aad
ret
(bad)
adc
in
sbb
cmc
scas
retf
in
mov
call
jp
pop
mov
or
pop
retf
nop
sub
adc
or
pop
test
or
mov
mov
and
adc
or
int
out
cmc
scas
mov
dec
ins
jb
stos
push
movs
sub
loopne
mov
lea
jmp
imul
fisub
sti
jmp
sub
scas
and
jnp
call
xchg
out
pop
lahf
xchg
cmp
sub
fild
mov
aas
inc
jnp
inc
sbb
mov
push
cmp
icebp
ss
out
(bad)
pop
push
fwait
retf
popa
addr16
rcr
push
fdivr
dec
adc
pop
dec
push
sbb
bound
jb
mov
inc
push
and
lods
shr
pop
pusha
jnp
sbb
jno
adc
sub
sub
(bad)
and
ret
and
imul
jp
rcl
bound
frstor
and
pop
rcr
sbb
je
push
or
mov
jp
test
lods
(bad)
fld
outs
pop
mov
jecxz
inc
add
stos
ja
loop
mov
leave
cmps
pop
fucomip
push
push
xor
int
test
mov
pop
lods
dec
shl
mov
or
shl
jne
inc
jle
enter
stos
jp
jns
in
ins
pop
retf
aad
pusha
jmp
inc
adc
nop
jb
les
jnp
cmps
test
sahf
icebp
and
push
popf
sub
jns
xor
retf
adc
dec
test
sahf
cwde
stos
mov
adc
shl
xchg
push
or
jp
mov
nop
shl
aam
repz
leave
sbb
jle
cli
jl
aad
pop
test
call
pop
ret
mov
add
mov
cmps
sbb
sub
fnstenv
mov
xor
sbb
or
icebp
xor
push
ins
and
lock
push
lods
lds
xchg
mov
push
test
cdq
push
xchg
mov
push
lahf
or
mov
inc
daa
add
push
mov
xor
pop
and
jge
push
dec
push
cwde
int
test
fisubr
jae
push
mov
ret
mov
sti
mov
mov
cmc
sbb
sbb
pop
or
dec
jl
in
sbb
pop
sub
lds
ret
fs
mov
cmp
stos
push
lea
jge
jo
push
imul
gs
imul
sub
pop
mov
icebp
inc
xchg
and
pop
sbb
test
push
cli
test
stos
ficomp
rcr
cs
xchg
adc
(bad)
(bad)
mov
push
ret
cmp
dec
out
cs
xchg
sbb
outs
sahf
pop
mov
mov
je
fs
mov
push
jno
jp
pushf
mov
mov
jo
xchg
xchg
out
sub
iret
mov
(bad)
test
xor
jp
mov
in
or
add
cld
sub
shl
mov
gs
or
ret
adc
cmp
pop
xchg
repz
adc
aam
mov
push
aaa
das
adc
enter
retf
cmc
and
mov
lea
cdq
xor
or
call
pop
sbb
(bad)
xchg
(bad)
jecxz
or
mov
pop
sbb
jp
hlt
fwait
mov
into
rcl
adc
shl
cmp
xchg
gs
imul
cmps
push
pusha
data16
add
test
das
shl
inc
xor
pusha
mov
enter
iret
sub
and
xor
inc
imul
(bad)
ja
loop
enter
push
inc
mov
pop
jge
mov
and
pop
mov
dec
lock
ins
jo
lods
pop
imul
sti
hlt
scas
dec
add
out
cdq
leave
mov
lahf
mov
mov
jnp
add
aaa
mov
pop
jno
add
fiadd
mov
outs
adc
iret
outs
adc
in
adc
xor
adc
add
and
daa
jmp
ds
and
lods
mov
out
ins
retf
fisttp
pop
mov
mov
ja
daa
inc
push
out
out
cwde
scas
cdq
loopne
sbb
ret
inc
xchg
outs
pop
inc
fcomp
push
inc
shr
pop
mov
sbb
aas
test
jg
stos
push
icebp
fs
adc
jge
sti
pop
sub
icebp
aas
jecxz
loopne
fild
pop
mov
in
mov
jg
mov
inc
iret
adc
inc
fsubr
jb
xor
mov
les
add
popf
aas
sub
call
cmps
loopne
xlat
repnz
inc
jns
sub
popf
jns
ror
push
les
pop
inc
clc
jne
fistp
imul
cs
push
popa
mov
out
scas
push
aaa
call
jne
push
arpl
cld
adc
jp
in
vmaxps
jl
lods
fistp
repnz
pop
jle
and
cmps
mov
jecxz
and
movs
movs
dec
xor
movs
dec
pop
cli
fsubp
fnstcw
adc
xlat
ret
mov
std
jbe
das
push
jmp
dec
sti
push
mov
adc
push
shl
int
ds
and
ret
aam
lds
fisttp
jg
js
add
push
aam
ins
outs
add
adc
dec
cmp
adc
fs
scas
add
fucomip
movs
jecxz
cmp
xchg
dec
icebp
mov
lahf
sbb
cmps
aad
jae
cmp
or
outs
or
shl
scas
mov
je
popf
inc
or
mov
add
stc
xchg
ins
arpl
add
pop
dec
je
jge
stc
sbb
pushf
dec
test
mov
(bad)
cmp
or
inc
mov
adc
dec
jg
jmp
stc
push
(bad)
sbb
pop
out
push
cmp
mov
xor
loop
mov
gs
mov
scas
fild
pop
dec
gs
push
dec
loop
in
loopne
push
sub
daa
add
cmp
mov
pop
test
dec
adc
adc
xchg
outs
xchg
or
daa
jo
in
mov
inc
outs
mov
sbb
ins
jmp
sbb
out
aas
mov
jns
lods
pop
add
sbb
popa
or
cli
sbb
mov
pop
mov
sub
fcmove
iret
cmps
push
arpl
sub
pop
pushf
popf
fucomi
out
jge
icebp
sahf
dec
(bad)
cld
and
mov
cmp
xchg
stos
shl
lock
sbb
jns
test
pop
pop
sbb
mov
mov
dec
repnz
test
push
out
mov
les
pop
mov
push
fldcw
push
std
mov
(bad)
or
nop
sub
mul
jmp
fisttp
pop
mov
loopne
adc
mov
aaa
call
test
(bad)
rcr
std
psllw
lahf
ret
call
ror
cld
cmp
ret
adc
xchg
pop
push
cmp
test
xchg
or
addr16
push
rol
pop
dec
idiv
stc
daa
stc
popf
push
movs
dec
adc
xlat
xchg
jbe
inc
xlat
fdivr
in
pop
loopne
add
loop
test
inc
mov
enter
adc
and
xchg
repz
(bad)
push
sbb
aas
adc
and
jnp
ds
shl
aas
clc
dec
loope
stc
cmps
mov
jmp
mov
and
mov
inc
dec
adc
(bad)
cmp
jecxz
add
mov
cld
pop
stos
js
iret
push
nop
shr
mov
jns
out
fcomp
dec
fadd
add
jno
stc
pop
daa
or
jle
inc
pop
sar
sahf
push
lea
sbb
sub
jmp
js
loop
(bad)
bsf
push
sub
mov
popa
aam
scas
ret
xchg
call
cmp
fiadd
inc
icebp
jle
ficomp
mov
push
xchg
inc
cmp
sbb
ins
cli
push
jae
xor
jnp
(bad)
loope
push
ror
push
jae
push
mov
shl
pop
(bad)
lods
xor
inc
mov
ret
mov
pop
push
aam
je
out
jmp
outs
push
inc
xchg
popa
jmp
pop
mov
jl
clc
test
sti
pop
call
mov
mov
push
call
push
and
int3
jo
shl
jmp
aas
loope
fst
aam
outs
das
inc
mov
mov
inc
arpl
sub
xbegin
mov
xchg
xchg
stos
sub
(bad)
(bad)
mov
repnz
dec
or
mov
xchg
popa
xor
or
inc
xchg
arpl
add
xchg
dec
add
pop
outs
les
dec
loopne
add
xchg
call
jle
pop
ss
rcr
and
push
or
xchg
add
jb
imul
std
xchg
cld
pop
jge
jle
push
clc
mov
or
les
(bad)
xor
push
in
pop
jne
jo
pop
retf
test
xor
inc
mov
(bad)
xchg
icebp
(bad)
test
xor
aad
sub
and
in
fbld
rol
or
fdiv
aam
addr16
ret
ficomp
retf
cmps
test
popa
in
sar
jno
or
mov
(bad)
test
(bad)
clc
inc
dec
push
push
rcr
mov
hlt
mov
fmul
add
mov
pop
or
ret
sar
pop
xor
fimul
call
mov
int
jno
cs
sub
push
xor
push
popa
rcr
xlat
(bad)
fadd
inc
iret
iret
sar
xchg
ret
dec
repnz
sub
fs
mov
cld
cmp
lods
mov
sbb
push
ret
aaa
push
jo
int
mov
add
retf
sbb
sub
add
sbb
aas
adc
fisttp
fstp
and
(bad)
fwait
test
push
mov
and
and
inc
jne
aam
sub
pusha
stos
cmp
scas
in
mov
jle
clc
sub
mov
mov
add
fld
pop
push
mov
mov
sbb
not
cmp
add
jmp
jno
mov
xchg
jo
jg
push
inc
inc
dec
scas
xor
les
sbb
xchg
jno
sbb
daa
outs
push
xchg
jmp
das
hlt
ds
xchg
outs
push
retf
dec
icebp
cmp
test
ins
sbb
mov
sub
add
sub
int
bound
fisub
jb
xlat
push
nop
lods
lods
(bad)
jmp
sbb
lahf
dec
cli
xor
adc
inc
nop
xchg
inc
jecxz
cld
xchg
loop
inc
fwait
jecxz
fwait
pop
push
cmovb
fsubr
jb
test
repnz
ds
inc
xor
lahf
dec
jns
imul
jp
xlat
imul
cmp
std
pushf
jl
movs
mov
mov
or
daa
pop
clc
in
mov
int
popa
or
in
stc
call
jl
pop
xchg
mov
pop
jns
cli
repz
test
repz
cmp
add
std
(bad)
sar
jp
imul
scas
loop
retf
mov
sahf
sahf
je
aas
out
fnsave
mov
mov
push
add
rol
add
dec
xor
add
cmp
xchg
add
sub
(bad)
cmp
rcr
or
sbb
sbb
stc
mov
cmp
mov
mov
mov
mov
sub
cld
outs
mov
inc
add
adc
test
jns
jbe
std
cmps
sbb
pop
addr16
mov
loopne
jge
test
xchg
pop
fidivr
push
lds
cld
adc
sbb
in
jbe
(bad)
fidivr
inc
adc
add
sub
je
xchg
mov
and
cmp
data16
aaa
push
push
sub
mov
out
popf
xor
ds
mov
mov
inc
retf
test
cmp
dec
clc
mov
cli
dec
popa
sar
mov
add
mov
in
mov
aas
int3
mul
fwait
pusha
sub
loopne
or
call
push
sbb
mov
ret
inc
inc
(bad)
std
jne
inc
(bad)
sar
bound
jne
sbb
fistp
aad
stos
stc
xlat
std
add
cmp
cld
(bad)
xor
jl
xor
call
in
imul
in
xchg
jecxz
sub
or
into
xchg
inc
(bad)
aad
sti
push
clc
mov
inc
leave
cmp
add
inc
sbb
pop
or
out
je
push
push
retf
mov
in
xor
pop
ins
xor
jo
nop
scas
push
adc
push
dec
or
cli
inc
xor
xchg
retf
mov
add
into
test
mov
sbb
hlt
sar
add
mov
loop
mov
(bad)
into
sbb
test
imul
adc
cwde
jmp
pop
fnsave
mov
(bad)
xchg
mov
push
ror
mov
sbb
mov
cmp
dec
daa
mov
(bad)
(bad)
jne
enter
pop
fbstp
mov
cmp
ror
stc
into
jno
xchg
popf
jnp
lods
(bad)
fldenv
jp
mov
jle
mov
test
retf
cmps
xchg
(bad)
cld
xchg
lock
push
sbb
cmps
inc
jecxz
shr
sbb
pushf
jns
sbb
jg
int
xor
out
iret
sub
(bad)
cli
and
push
dec
aas
les
mov
sub
arpl
xchg
cld
pop
mov
xor
es
inc
(bad)
aad
lahf
fdivr
lds
pop
push
inc
sbb
xchg
inc
(bad)
(bad)
jo
pushf
jmp
enter
jnp
mov
dec
clc
push
mov
pop
imul
add
sub
sub
inc
js
cmps
mov
imul
pop
mov
mov
mov
inc
sub
push
jmp
jne
clc
cmp
in
repnz
aas
int3
retf
or
into
les
(bad)
sbb
in
push
jmp
and
jmp
stos
mov
dec
fld
(bad)
mov
pop
scas
test
jecxz
pusha
imul
cmp
repz
(bad)
inc
or
loop
cli
or
fcomip
cli
pop
(bad)
xor
lds
aas
jmp
mov
jl
cmp
mov
add
push
in
xor
stos
xor
out
ret
pop
(bad)
enter
cmp
adc
inc
(bad)
jmp
jecxz
es
dec
cmp
sti
fnstcw
clc
fnsave
stos
fnstcw
leave
std
scas
add
mov
ds
jno
cmps
imul
xchg
aaa
mov
xchg
inc
mov
push
mov
add
pop
aas
clc
(bad)
test
dec
pop
dec
sub
out
sub
ins
(bad)
out
xor
cdq
sbb
push
dec
movs
push
push
cmp
pop
xlat
aaa
in
mov
mov
xchg
inc
mov
cmc
scas
dec
mov
sbb
cmp
pushf
push
xchg
aad
rcl
lock
xchg
jmp
xchg
imul
jno
imul
cmp
add
shl
dec
mov
mov
fwait
daa
aas
stc
push
scas
inc
sti
xor
xchg
add
jns
sub
pop
sti
dec
mov
aaa
fwait
push
test
cmp
fdivr
push
mov
sub
fisttp
lea
sbb
fbld
fwait
movs
mov
mov
icebp
mov
adc
push
test
add
int
dec
inc
movs
mov
sahf
outs
and
cli
ins
xchg
sbb
mov
xor
pop
cmp
xchg
stos
shr
xor
xor
add
inc
jecxz
add
mov
add
xchg
xor
add
inc
jecxz
je
adc
ja
push
add
dec
sbb
(bad)
movs
jnp
(bad)
in
cmps
loop
jno
push
rol
(bad)
pop
jg
fst
fnstenv
lds
xor
add
jmp
pop
sub
pop
adc
stos
cmp
mov
out
dec
fcom
cmp
aad
fs
mov
not
mov
(bad)
lds
movs
mov
add
mov
std
add
inc
xor
pushf
mov
scas
and
mov
dec
cmp
mov
adc
add
aas
fs
adc
sbb
fld
clc
fnsave
iret
in
dec
jecxz
inc
std
out
push
rcl
inc
inc
push
outs
adc
xchg
sbb
pop
adc
add
stos
pop
rcr
fiadd
push
dec
push
sbb
nop
jmp
neg
scas
jno
add
std
mov
jg
stc
mov
or
out
push
push
jg
mov
mov
mov
or
jg
pusha
xchg
shr
mov
pop
ret
fidivr
push
inc
xchg
popf
lods
out
pop
scas
jg
dec
sbb
jnp
inc
iret
inc
(bad)
push
mov
(bad)
jae
add
xor
jo
arpl
xchg
jae
sbb
add
dec
adc
adc
push
xchg
mov
nop
aas
idiv
sub
xor
fcomp
(bad)
mov
ins
(bad)
scas
mov
int
add
stos
daa
(bad)
mov
and
dec
dec
fidivr
frstor
call
pusha
addr16
lods
xor
fwait
rol
inc
ficom
xchg
pop
cld
enter
sbb
jb
add
mov
pop
ret
pop
or
fadd
loope
mov
shl
mov
shr
mov
add
or
pop
shl
dec
(bad)
jl
lods
jmp
mov
pop
dec
add
dec
xchg
jo
mov
xchg
dec
rol
loopne
adc
rcl
mov
push
and
push
cmp
repnz
aas
jmp
dec
std
add
div
or
imul
pop
jbe
call
ds
clc
jnp
add
loopne
inc
mov
mov
push
out
xchg
mov
xor
or
call
jl
sub
enter
and
jp
test
sahf
or
cli
or
mov
lea
add
scas
cwde
aas
popa
fist
add
lods
lods
xchg
out
dec
call
mov
test
retf
jns
cmc
ret
sbb
lock
jne
out
into
(bad)
push
jnp
outs
xchg
imul
retf
mov
ja
dec
shl
in
addr16
(bad)
fist
(bad)
and
out
clc
jb
out
pop
mov
add
and
add
jae
jno
and
mov
and
(bad)
sahf
adc
xadd
push
popf
arpl
and
mov
sti
mov
mov
(bad)
outs
fsubr
ret
jle
fistp
pop
adc
test
imul
les
adc
mov
and
add
adc
mov
mov
mov
out
sbb
mov
adc
push
iret
test
lods
xchg
cmps
and
jae
jbe
jle
mul
or
movs
(bad)
pop
sbb
sar
inc
mov
jmp
dec
push
icebp
push
xchg
mov
out
dec
jbe
retf
jbe
test
in
mov
jns
push
fcomp
dec
inc
or
inc
or
mov
aad
js
repnz
shl
gs
add
movs
popf
mov
test
add
mov
jg
jl
mov
ficomp
test
shr
pop
and
add
xor
rcl
in
test
push
xor
(bad)
push
imul
mov
mov
lahf
(bad)
inc
sysenter
(bad)
or
inc
aam
aas
(bad)
ret
das
mov
pop
or
imul
repz
and
test
xchg
lea
mov
jg
mov
call
lods
fcmovnu
cli
repnz
clc
das
popa
loope
add
xor
dec
ret
mov
out
mov
scas
sbb
mov
and
cmp
stos
xchg
push
movs
aaa
jns
push
pop
push
mov
and
xchg
jge
(bad)
and
pop
mov
sbb
mov
xlat
push
cmp
jne
jmp
jb
sub
pop
icebp
jmp
leave
xchg
(bad)
dec
mov
aam
cmp
sbb
pop
js
push
xchg
pop
mov
int
or
or
pop
pop
jnp
(bad)
cs
(bad)
add
cmc
pop
or
inc
ret
scas
or
or
dec
test
mov
xchg
aam
jmp
aam
xor
xchg
jmp
mov
(bad)
push
aad
sub
push
xchg
sti
sub
(bad)
stos
loop
adc
pop
cmps
(bad)
cld
outs
jle
(bad)
mov
fadd
xchg
ins
in
dec
dec
xchg
and
enter
lods
test
mov
inc
outs
sbb
inc
icebp
jbe
in
(bad)
xor
(bad)
rcr
repz
movd
lahf
or
jl
mov
ds
movs
clc
xchg
ret
mul
imul
cmps
jl
mov
bound
pushf
das
and
mov
stc
scas
mov
push
mov
adc
outs
outs
xchg
or
(bad)
sbb
movs
pop
push
jb
(bad)
enter
jo
dec
int
jo
mov
je
(bad)
push
mov
test
dec
jb
lahf
push
js
jecxz
sahf
or
ds
cld
sbb
cmps
test
xlat
(bad)
lock
shl
or
stc
push
inc
retf
sub
aas
ins
das
ficomp
dec
clc
cmp
push
mov
push
(bad)
retf
dec
retf
addr16
pop
retf
(bad)
imul
les
pop
sti
cs
pop
sar
addr16
mov
jge
test
outs
adc
sahf
repnz
test
jb
sub
ret
cmp
arpl
fisub
clc
test
lock
std
xor
dec
stos
int
push
sub
dec
mov
sbb
jae
cmp
adc
aad
xchg
pop
imul
dec
fs
out
jge
loopne
mov
clc
icebp
ins
lock
into
xchg
ins
mov
(bad)
ds
jnp
loopne
sub
xor
(bad)
in
mov
stc
xchg
dec
push
imul
adc
mov
aas
dec
cmp
js
inc
test
push
imul
dec
adc
leave
xor
daa
xor
cld
sbb
icebp
inc
les
imul
push
mov
dec
in
pop
fstp
and
(bad)
in
cmp
lock
into
icebp
je
fist
cmc
dec
mov
pop
push
mov
jno
cmps
pop
mov
cmps
int3
lods
les
and
jo
pop
add
pop
(bad)
or
fstp
repnz
(bad)
and
pushf
xlat
(bad)
iret
mov
cmps
in
scas
icebp
mov
jg
ds
(bad)
sti
fwait
hlt
mov
pop
mov
cmp
aam
mov
arpl
jb
std
or
mov
outs
jecxz
clc
inc
lock
push
clc
mov
div
ret
retf
sub
daa
jmp
xchg
add
and
aaa
std
scas
hlt
(bad)
pop
(bad)
outs
sti
aas
js
xlat
dec
rcl
stc
das
xor
nop
aam
sbb
xchg
or
(bad)
jbe
push
pusha
xor
pop
push
dec
clc
idiv
push
js
inc
aad
clc
aaa
loope
popf
pinsrw
adc
imul
push
(bad)
(bad)
cmp
mov
into
into
mov
aam
xor
pop
push
ins
mov
mul
clc
mov
das
add
test
jmp
push
push
dec
outs
ja
adc
pusha
int3
dec
add
addr16
jg
and
inc
ret
dec
out
mov
in
mov
and
jl
cmp
retf
fwait
xlat
out
sbb
push
add
inc
ds
aam
add
les
cli
dec
pop
cmp
shr
jp
inc
and
push
xor
mov
stos
inc
mov
xor
push
lock
test
pinsrw
xlat
cmp
retf
movs
cmp
sub
fs
xor
ins
sbb
jo
dec
and
mov
push
push
push
imul
cld
nop
xor
fild
mov
push
std
stos
scas
lods
outs
and
jno
mov
(bad)
jl
test
pop
aam
or
nop
pop
repnz
cmp
jae
in
ds
lock
in
or
icebp
push
push
lock
test
retf
or
or
stos
jmp
fdivr
(bad)
mov
stos
mov
nop
push
mov
mov
jnp
fistp
mov
inc
sar
mov
xchg
ret
loopne
push
icebp
cmps
gs
fisttp
cwde
add
fidivr
cmps
add
lods
sti
and
sar
add
sbb
xor
das
sub
enter
inc
ins
pop
cli
lock
dec
out
sbb
mov
pop
in
mov
cld
pop
inc
jle
dec
fidivr
jmp
inc
jg
inc
jg
(bad)
sar
inc
int
adc
ins
retf
out
mov
ss
or
sbb
ds
js
div
cmp
sar
stos
js
leave
fisttp
ins
xchg
xchg
add
sub
fidivr
push
sti
jl
pop
pop
(bad)
fld
add
pop
dec
mov
xor
adc
loopne
jae
sub
cwde
test
push
pusha
sub
push
out
lods
or
ds
call
xor
lock
and
sub
xlat
push
sub
sbb
out
mov
ret
mov
push
imul
popf
fcomp
sbb
lock
add
mov
xchg
add
test
cdq
and
xchg
(bad)
jbe
jl
inc
mov
add
ss
aam
xlat
(bad)
inc
es
xchg
mov
xlat
xchg
fadd
loope
mov
ss
loop
mov
dec
and
mov
mov
mov
mov
and
clc
es
enter
push
inc
(bad)
sti
jns
mov
sub
stos
xor
sub
jns
push
jne
or
mov
aas
mov
(bad)
jg
jl
mov
or
sbb
cmp
in
dec
cmp
push
loopne
fnstenv
jmp
inc
or
mov
dec
iret
inc
and
mov
add
in
call
mov
pop
stos
test
inc
cdq
repz
xchg
jmp
jns
fdivr
add
mov
sub
ret
sub
aas
loope
mov
pop
clc
sub
icebp
retf
sti
and
add
(bad)
mov
inc
aaa
loopne
enter
ins
das
mov
lock
dec
outs
jg
cs
clc
ins
das
mov
lock
dec
outs
jg
cs
xor
out
icebp
jg
pop
pop
(bad)
inc
aaa
loopne
enter
ins
das
mov
lock
dec
outs
jg
cs
clc
ins
das
mov
lock
dec
outs
jg
cs
xor
out
icebp
jg
pop
pop
(bad)
inc
aaa
loopne
enter
ins
das
mov
lock
dec
outs
jg
cs
clc
ins
das
mov
lock
dec
outs
jg
cs
xor
out
icebp
jg
pop
pop
(bad)
inc
aaa
loopne
enter
ins
das
mov
lock
dec
outs
jg
cs
clc
ins
das
mov
lock
dec
outs
jg
cs
xor
out
icebp
jg
pop
pop
(bad)
inc
aaa
loopne
enter
ins
das
mov
lock
dec
outs
jg
cs
clc
ins
das
mov
lock
dec
outs
jg
cs
xor
out
icebp
jg
pop
pop
(bad)
inc
aaa
loopne
enter
ins
das
mov
lock
dec
outs
jg
cs
clc
ins
das
mov
lock
dec
outs
jg
cs
xor
out
icebp
jg
pop
pop
(bad)
inc
aaa
loopne
enter
ins
das
mov
lock
dec
outs
jg
cs
clc
ins
das
mov
lock
dec
outs
jg
cs
xor
out
icebp
jg
pop
pop
(bad)
inc
aaa
loopne
enter
ins
das
mov
lock
dec
outs
jg
cs
clc
ins
das
mov
lock
dec
outs
jg
cs
xor
out
icebp
jg
pop
pop
(bad)
inc
aaa
loopne
enter
ins
das
mov
lock
dec
outs
jg
cs
clc
ins
das
mov
lock
dec
outs
jg
cs
xor
out
icebp
jg
pop
pop
(bad)
inc
aaa
loopne
enter
ins
das
mov
lock
dec
outs
jg
cs
clc
ins
das
mov
lock
dec
outs
jg
cs
xor
out
icebp
jg
pop
pop
(bad)
inc
aaa
loopne
enter
ins
das
mov
lock
dec
outs
jg
cs
clc
ins
das
mov
lock
dec
outs
jg
cs
xor
out
icebp
jg
pop
pop
(bad)
inc
aaa
loopne
enter
ins
das
mov
lock
dec
outs
jg
cs
clc
ins
das
mov
lock
dec
outs
jg
cs
xor
out
icebp
jg
pop
pop
(bad)
inc
aaa
loopne
enter
ins
das
mov
lock
dec
outs
jg
cs
clc
ins
das
mov
lock
dec
outs
jg
cs
xor
out
icebp
jg
pop
pop
(bad)
inc
aaa
loopne
enter
ins
das
mov
lock
dec
outs
jg
cs
clc
ins
das
mov
lock
dec
outs
jg
cs
xor
out
icebp
jg
pop
pop
(bad)
inc
aaa
loopne
enter
ins
das
mov
lock
dec
outs
jg
cs
clc
ins
das
mov
lock
dec
outs
jg
cs
xor
out
icebp
jg
pop
pop
(bad)
inc
aaa
loopne
enter
ins
das
mov
lock
dec
outs
jg
cs
clc
ins
das
mov
lock
dec
outs
jg
cs
xor
out
icebp
jg
pop
pop
(bad)
inc
aaa
loopne
enter
ins
das
mov
lock
dec
outs
jg
cs
clc
ins
das
mov
lock
dec
outs
jg
cs
xor
out
icebp
jg
pop
pop
(bad)
inc
aaa
loopne
enter
ins
das
mov
lock
dec
outs
jg
cs
clc
ins
das
mov
lock
dec
outs
jg
cs
xor
out
icebp
jg
pop
pop
(bad)
inc
aaa
loopne
enter
ins
das
mov
lock
dec
outs
jg
cs
clc
ins
das
mov
lock
dec
outs
jg
cs
xor
out
icebp
jg
pop
pop
(bad)
inc
aaa
loopne
enter
ins
das
mov
lock
dec
outs
jg
cs
clc
ins
das
mov
lock
dec
outs
jg
cs
xor
out
icebp
jg
pop
pop
(bad)
inc
aaa
loopne
enter
ins
das
mov
lock
dec
outs
jg
cs
clc
ins
das
mov
lock
dec
outs
jg
cs
xor
out
icebp
jg
pop
pop
(bad)
inc
aaa
loopne
enter
ins
das
mov
lock
dec
outs
jg
cs
clc
ins
das
mov
lock
dec
outs
jg
cs
xor
out
icebp
jg
pop
pop
(bad)
inc
aaa
loopne
enter
ins
das
mov
lock
dec
outs
jg
cs
clc
ins
das
mov
lock
dec
outs
jg
cs
xor
out
icebp
jg
pop
pop
(bad)
inc
aaa
loopne
enter
ins
das
mov
lock
dec
outs
jg
cs
clc
ins
das
mov
lock
dec
outs
jg
cs
xor
out
icebp
jg
pop
pop
(bad)
inc
aaa
loopne
enter
ins
das
mov
lock
dec
outs
jg
cs
xchg
popf
pop
rcr
loop
pop
fidivr
gs
outs
shl
cmp
shr
das
test
popa
xchg
imul
fisttp
push
sub
inc
pushf
call
jo
bound
jb
fnstcw
pop
cmp
sar
xchg
cmc
xor
nop
push
mov
jg
es
dec
aaa
(bad)
mov
rcr
ftst
inc
ror
adc
or
and
test
inc
loope
cld
mov
cli
(bad)
(bad)
xchg
dec
pop
popf
mov
ret
jnp
xchg
cmp
sub
jbe
into
imul
mov
or
cs
xchg
fimul
push
mov
std
xor
sahf
adc
xchg
xor
not
scas
xchg
es
xchg
ds
pop
iret
and
loopne
out
mov
sar
and
bound
xchg
push
fwait
shl
jle
movs
mov
cmps
std
aad
out
ja
jl
movs
pop
inc
cmps
js
lds
test
cmp
mov
ror
shl
aam
int
movs
sub
int
into
test
mov
clc
pop
push
cld
sar
add
clc
mov
out
aam
xor
add
stos
mov
repnz
push
retf
sub
outs
(bad)
repnz
adc
add
add
lods
inc
imul
not
mov
out
aam
xor
add
stos
je
xchg
sub
mov
inc
loop
mov
js
stc
stc
pop
mov
in
jae
(bad)
shr
mov
lds
shl
call
inc
adc
iret
sub
add
add
test
jle
out
inc
sti
or
mov
xchg
rcl
mov
dec
jg
fwait
jg
cmps
inc
adc
icebp
inc
jg
popf
jg
cmps
inc
adc
cld
cld
(bad)
fiadd
xor
aad
loop
push
mov
inc
inc
clc
stos
jo
call
jg
cmps
inc
adc
cld
cld
pop
jp
mov
cld
(bad)
out
addr16
sbb
mov
scas
dec
aas
mov
(bad)
inc
cli
adc
inc
xor
add
test
push
inc
mov
dec
(bad)
sub
out
sti
sar
scas
repnz
mov
sub
out
(bad)
ret
(bad)
dec
loopne
mov
lock
(bad)
mov
call
mov
ins
dec
push
aam
mov
mov
imul
adc
leave
and
lahf
mul
popf
cmp
sbb
ss
xchg
rcl
and
add
stos
mov
xchg
cmp
hlt
popf
push
pop
sbb
adc
movs
fimul
or
xchg
imul
mov
or
outs
jecxz
inc
out
scas
add
or
scas
je
xchg
mov
push
push
dec
pop
pop
pop
mov
addr16
jmp
jno
clc
xchg
les
sbb
out
mov
in
aam
inc
push
sub
pop
mov
pop
outs
or
jo
xchg
inc
das
test
add
mov
cld
inc
cmps
pop
(bad)
adc
xchg
clc
jnp
shl
in
cmp
sbb
dec
cs
add
mov
int3
repz
cmp
stc
imul
sar
xor
(bad)
sub
push
push
mov
dec
push
(bad)
fidivr
push
jmp
pushf
mov
xor
and
pop
test
xchg
(bad)
cmps
(bad)
pop
ss
adc
mov
aas
push
push
mov
mov
out
sbb
xchg
xor
mov
mov
pop
cmps
stc
sahf
stos
mov
jg
std
pop
icebp
(bad)
adc
int
sub
cmc
out
or
jmp
xchg
aaa
xchg
jae
cmps
ret
stc
repnz
shl
mov
sbb
jmp
sbb
sbb
pop
sbb
dec
shl
adc
cmp
mov
lods
repnz
div
lahf
cmp
pop
xor
cwde
dec
mov
nop
gs
or
retf
scas
pop
jecxz
mov
ret
mov
adc
into
loop
dec
pop
imul
sub
push
inc
ror
xor
pop
jns
push
push
bswap
xor
ror
xchg
test
jl
(bad)
in
scas
jl
sti
ds
sar
fisubr
mov
movs
movs
dec
cmp
add
cmp
dec
jp
mov
pop
ror
inc
test
xchg
jecxz
(bad)
clc
aaa
push
aam
shr
sub
xor
in
sub
ror
pop
jmp
mov
loopne
ret
and
in
in
jecxz
(bad)
xor
sub
adc
add
in
add
and
inc
pop
and
popa
dec
ins
imul
call
(bad)
mov
js
fs
mov
sbb
mov
out
sub
(bad)
mov
pop
jl
jno
lea
aam
lods
fcmovbe
je
std
pop
in
push
ror
mov
pop
xor
adc
xchg
arpl
(bad)
mov
add
jecxz
neg
pop
mov
stos
in
add
fs
mov
mov
or
pop
xor
xor
push
fdivr
xor
clc
or
push
fdivr
outs
pop
sahf
and
shl
sub
in
test
mov
(bad)
mov
dec
mov
or
cmp
fimul
movs
retf
and
xor
add
fisub
es
inc
scas
aaa
clc
xor
add
mov
aas
in
shr
call
fsubr
mov
push
inc
add
adc
inc
add
adc
inc
add
adc
inc
add
adc
inc
add
adc
inc
add
adc
inc
add
adc
inc
add
adc
inc
add
adc
inc
add
adc
inc
add
adc
inc
add
gs
inc
push
(bad)
mov
dec
push
push
mov
add
pop
aad
jmp
dec
std
add
xor
imul
dec
cld
mov
cmps
mov
lea
xchg
(bad)
in
push
sbb
das
test
add
and
inc
movs
sbb
adc
add
(bad)
jnp
inc
jge
push
fs
cmp
and
jg
aas
adc
js
out
inc
xchg
pop
(bad)
jecxz
sub
mov
add
xchg
xor
adc
sbb
or
pop
jne
add
sbb
int3
mov
inc
pusha
inc
inc
in
(bad)
mov
xchg
mov
add
gs
pop
or
mov
call
cmc
aad
add
add
and
inc
(bad)
aam
inc
add
fs
pop
cld
sbb
inc
sbb
add
fstp
mov
sar
sub
dec
sar
(bad)
cdq
mov
jno
iret
clc
and
inc
cld
adc
push
aas
repz
add
sar
push
sub
(bad)
imul
add
add
jne
sti
ins
cmp
fidiv
pusha
aas
out
inc
sbb
inc
lahf
jg
inc
xor
out
daa
stc
inc
add
(bad)
inc
rol
inc
cdq
and
inc
push
or
jecxz
or
test
jg
cmp
pop
hlt
pop
cli
ja
add
push
inc
jecxz
jg
pusha
aas
out
loop
add
pop
pop
lds
loopne
enter
add
add
push
scas
inc
mov
add
dec
pop
lock
or
xchg
imul
sub
test
retf
(bad)
(bad)
add
pop
clc
in
pop
fstp
stc
idiv
mov
mov
jnp
inc
add
inc
loopne
jg
adc
clc
js
mov
scas
inc
mov
add
pop
adc
jbe
(bad)
pop
mov
jecxz
jg
pusha
aas
out
loop
add
ds
jg
out
inc
lock
test
(bad)
and
mov
cli
adc
mov
mov
popf
(bad)
pop
mov
jecxz
outs
mov
cmp
sbb
inc
inc
pop
(bad)
popa
cmc
fcom
dec
cld
(bad)
je
lock
or
imul
sub
paddb
push
pop
repz
jnp
icebp
adc
pusha
inc
(bad)
push
(bad)
cmp
push
add
jge
das
cld
ret
jmp
scas
out
pop
stc
push
fidivr
mov
cdq
xlat
inc
add
inc
mov
test
jg
pusha
(bad)
outs
mov
out
inc
mov
inc
add
in
pop
fstp
stc
idiv
mov
mov
jnp
jg
dec
jne
inc
xor
inc
(bad)
aam
dec
dec
test
jg
pusha
(bad)
outs
mov
jge
add
fidiv
fdivr
inc
jecxz
inc
mov
pop
repz
icebp
jg
aas
scas
loop
lahf
lock
mov
cld
adc
push
pop
stc
xchg
ins
jg
pusha
(bad)
outs
mov
test
repz
loopne
mov
int
rcr
inc
sbb
add
sar
xchg
cmp
lahf
jg
inc
xor
out
daa
stc
inc
add
mov
pop
sub
loopne
xor
loopne
inc
enter
jne
xchg
(bad)
aas
fisub
(bad)
pop
mov
scas
ins
fcmove
inc
or
imul
mov
sbb
jmp
sub
in
mov
mov
inc
or
in
call
jmp
cmps
iret
dec
or
jmp
lea
shl
pushf
mov
mov
push
call
aam
out
mov
add
xchg
pop
cmp
out
jg
fsub
push
pop
mov
pushf
(bad)
and
pop
repz
sti
in
push
idiv
neg
mov
push
pop
imul
jge
xlat
pop
cld
test
cdq
sub
inc
sahf
sar
add
bound
cmp
lds
inc
dec
inc
inc
idiv
neg
mov
push
inc
rcr
rcl
scas
psubw
pop
std
imul
sti
pop
pop
repz
sti
in
push
je
fs
pop
imul
jge
xlat
pop
cld
test
cdq
sub
inc
sahf
sar
add
bound
cmp
lds
inc
dec
inc
inc
idiv
neg
mov
push
inc
rcr
rcl
scas
psubw
pop
std
imul
sti
pop
pop
repz
sti
in
push
je
fs
pop
imul
jge
xlat
pop
cld
test
cdq
sub
inc
sahf
sar
add
bound
cmp
lds
inc
dec
inc
inc
idiv
neg
mov
push
inc
rcr
rcl
scas
psubw
pop
std
imul
sti
pop
pop
repz
sti
in
push
je
fs
pop
imul
jge
xlat
pop
cld
test
cdq
sub
inc
sahf
sar
add
bound
cmp
lds
inc
dec
inc
inc
idiv
neg
mov
push
inc
rcr
rcl
scas
psubw
pop
std
imul
sti
pop
pop
repz
sti
in
push
je
fs
pop
imul
jge
xlat
pop
cld
test
cdq
sub
inc
sahf
sar
add
bound
cmp
lds
inc
dec
inc
inc
idiv
neg
mov
push
inc
rcr
rcl
scas
psubw
pop
std
imul
sti
pop
pop
repz
sti
in
push
je
fs
pop
imul
jge
xlat
pop
cld
test
cdq
sub
inc
sahf
sar
add
bound
cmp
lds
inc
dec
inc
inc
idiv
neg
mov
push
inc
rcr
rcl
scas
psubw
pop
std
imul
sti
pop
pop
repz
sti
in
push
je
fs
loop
stc
push
jne
cli
not
mov
mov
neg
lods
scas
adc
stos
add
fwait
imul
lods
imul
cmps
iret
pop
push
jge
aaa
(bad)
aas
gs
mov
xchg
dec
pop
mov
mov
aam
sahf
dec
xor
adc
pop
inc
lock
add
cld
xor
add
jne
repnz
stos
dec
sti
outs
je
out
ret
sub
ja
pop
inc
imul
mov
std
pop
jle
inc
loopne
xchg
(bad)
xor
or
sar
add
jmp
jae
loope
std
xchg
mov
inc
add
icebp
mov
pop
inc
lock
add
cld
xor
add
jne
cli
mov
popf
pop
mov
retf
sbb
sbb
stos
inc
inc
inc
test
sbb
sbb
add
cmp
pop
inc
into
(bad)
(bad)
clc
dec
aas
gs
cli
paddb
inc
ror
cld
push
not
repz
clc
inc
inc
sbb
inc
cld
and
call
test
not
add
inc
outs
call
mov
lods
inc
inc
fild
add
ret
jg
cmp
fsubr
clc
dec
mov
cld
and
add
int
cld
push
not
add
or
inc
(bad)
mov
pop
aas
loope
pop
lods
and
inc
out
jg
inc
mov
std
pop
(bad)
adc
pop
xchg
(bad)
xor
ret
sub
add
jg
pop
inc
xchg
lock
pop
push
nop
jae
idiv
(bad)
adc
push
inc
add
das
dec
inc
sbb
dec
mov
cld
and
idiv
movs
inc
lea
inc
ret
jg
cmp
fsubr
clc
dec
mov
cld
and
add
int
cld
push
not
add
or
inc
(bad)
mov
pop
aas
loope
pop
lods
and
inc
out
ja
fbstp
adc
add
xchg
(bad)
xor
ret
sub
ja
pop
inc
imul
mov
pop
push
nop
jae
idiv
(bad)
adc
pop
inc
lock
add
aas
loope
std
xchg
mov
inc
add
icebp
scas
ret
pop
clc
inc
push
(bad)
clc
inc
push
(bad)
stos
dec
cmp
sti
popf
inc
or
inc
out
test
sbb
cld
inc
mov
std
pop
(bad)
adc
add
pop
xchg
(bad)
xor
or
sar
add
jmp
jae
loope
std
xchg
jg
aas
lock
add
out
(bad)
xor
sbb
retf
arpl
or
std
mov
xchg
lock
pop
push
nop
jae
idiv
(bad)
adc
push
inc
lock
dec
inc
sbb
loope
std
xchg
jg
aas
lock
add
hlt
mov
clc
inc
push
(bad)
clc
inc
push
(bad)
stos
dec
cmp
sti
popf
inc
or
inc
inc
test
sbb
lock
jle
fcomip
sbb
sbb
inc
cld
and
call
test
not
add
or
inc
(bad)
(bad)
clc
dec
mov
cld
and
add
int
cld
imul
(bad)
adc
mov
jmp
ret
sub
ja
pop
inc
imul
mov
std
pop
jle
inc
loopne
xchg
(bad)
xor
or
sar
add
jmp
jae
loope
std
xchg
mov
inc
add
icebp
mov
pop
inc
lock
add
cld
xor
add
jne
cli
mov
popf
pop
mov
retf
sbb
sbb
lods
inc
inc
fild
add
ret
jg
cmp
fsubr
clc
dec
mov
cld
and
add
int
cld
push
not
add
or
inc
(bad)
mov
pop
aas
loope
pop
lods
and
inc
out
ja
fbstp
adc
add
xchg
(bad)
xor
ret
sub
ja
pop
inc
imul
mov
pop
push
nop
jae
idiv
(bad)
adc
pop
inc
lock
add
aas
loope
std
xchg
mov
inc
add
icebp
scas
ret
pop
clc
inc
push
(bad)
clc
inc
push
(bad)
stos
dec
cmp
sti
popf
inc
or
inc
fild
add
retf
sbb
sbb
inc
cld
and
call
test
not
add
or
inc
(bad)
(bad)
clc
dec
mov
cld
and
add
int
cld
imul
(bad)
adc
mov
jmp
ret
sub
ja
pop
inc
imul
mov
std
pop
jle
inc
loopne
xchg
(bad)
xor
or
sar
add
jmp
jae
loope
std
xchg
mov
inc
add
icebp
mov
pop
inc
lock
add
cld
xor
add
jne
cli
mov
popf
pop
mov
retf
sbb
sbb
lods
inc
inc
fild
add
ret
jg
cmp
fsubr
clc
dec
mov
cld
and
add
int
cld
push
not
add
or
inc
(bad)
mov
pop
aas
loope
pop
lods
and
inc
out
ja
fbstp
adc
add
xchg
(bad)
xor
ret
sub
ja
pop
inc
imul
mov
loop
mov
ret
enter
movs
inc
or
inc
out
test
sbb
cld
inc
mov
std
pop
mov
xchg
(bad)
xor
lods
add
in
push
les
sub
push
lahf
lahf
cmc
xlat
aas
not
inc
test
es
cmp
fucomp
clc
dec
inc
gs
cli
(bad)
and
add
int
cld
push
not
add
or
inc
(bad)
mov
sar
add
mov
std
hlt
mov
sbb
idiv
cld
sub
or
add
fwait
dec
mov
inc
sbb
stos
inc
inc
out
test
sbb
adc
add
lahf
sti
jmp
inc
xor
add
in
jae
add
clc
push
in
es
aas
ja
add
aaa
std
xchg
jg
cmp
add
icebp
mov
push
inc
xor
add
cld
and
add
out
cli
pop
lock
cld
idiv
not
pop
xor
fucomp
clc
dec
aas
gs
pop
clc
inc
inc
std
jle
lahf
jecxz
nop/reserved
and
std
mov
xchg
inc
add
clc
inc
sub
out
(bad)
out
ret
inc
sub
out
iret
out
ret
cwde
jae
std
loop
add
mov
or
jg
(bad)
clc
dec
jg
mov
inc
shr
(bad)
adc
psubw
jae
(bad)
lock
stc
in
jae
(bad)
lock
in
es
aas
js
mov
add
sbb
xlat
ret
mov
jl
sti
sub
mov
add
push
inc
or
cld
xbegin
add
cld
xbegin
push
jg
shr
jl
aas
div
cmps
lahf
jmp
push
cs
xchg
fsub
or
shr
dec
inc
sbb
sbb
ret
(bad)
jnp
(bad)
arpl
sub
add
(bad)
arpl
sub
adc
push
xchg
dec
jg
sbb
dec
inc
sbb
aas
gs
cli
or
shr
(bad)
adc
psubw
jae
(bad)
lock
stc
in
jae
(bad)
lock
jle
jg
imul
jg
ja
pop
inc
imul
sbb
call
jp
in
mov
cmp
ins
inc
retf
sbb
xchg
cmp
dec
push
or
add
sti
call
inc
add
lock
scas
xchg
sti
data16
add
daa
cwde
mov
(bad)
ss
push
aam
sbb
push
mov
inc
loop
fisub
les
ret
push
xchg
lds
fsub
mov
sbb
jmp
jae
or
(bad)
outs
adc
lahf
clc
xchg
sahf
aas
in
mov
and
mov
(bad)
popf
fnstsw
cmp
inc
mov
pop
xchg
push
in
rcl
sbb
retf
sbb
pushf
mov
pop
ja
inc
imul
outs
in
fistp
fidivr
dec
cmp
aam
imul
sbb
mov
mov
das
in
jae
int
cmp
xchg
shl
lock
aad
xchg
stos
or
sub
mov
add
mov
sub
rcr
int3
mov
push
into
(bad)
jo
mov
pop
sbb
mov
loop
fstp
aad
movs
scas
xlat
dec
das
fadd
idiv
lock
jmp
mov
jecxz
popf
cs
push
xchg
cmp
mov
scas
and
addr16
or
sar
sbb
in
and
mov
xor
fs
(bad)
pop
pop
xchg
mov
mov
mov
lods
cld
jmp
sbb
ret
inc
or
loop
test
or
fcomp
fst
retf
pop
ss
jnp
pop
das
fadd
sahf
mov
mov
jbe
stos
call
inc
xchg
mov
push
clc
retf
mov
ss
mov
dec
loop
xchg
iret
into
aas
or
push
(bad)
pop
daa
shl
sub
aam
in
adc
dec
out
cmc
push
inc
sbb
cmp
add
ror
lods
hlt
sbb
push
mov
cmps
jl
std
movs
xor
imul
mov
jns
xor
inc
in
in
imul
imul
clc
std
loop
fisub
loope
xlat
mov
imul
stos
push
cdq
sbb
(bad)
mov
inc
inc
mov
push
lods
push
push
dec
push
fmul
in
iret
int
mov
aas
les
(bad)
ror
adc
mov
add
retf
test
jns
movs
js
pushf
mov
fcmovnu
mov
(bad)
(bad)
mov
pop
jns
aaa
ret
mov
mov
inc
ror
xchg
adc
shl
aas
dec
jmp
fcos
add
xchg
mov
sbb
dec
mov
push
pop
test
iret
jo
mov
test
pop
clc
lods
jecxz
in
clc
stc
jnp
xchg
cmc
in
aas
add
rcl
sbb
jecxz
dec
xchg
and
stc
cwde
arpl
fldl2t
pop
lahf
mov
in
leave
paddsb
icebp
add
xlat
dec
mov
les
mov
sbb
(bad)
enter
or
call
add
iret
cld
and
pop
inc
call
idiv
pop
fstp
or
push
xlat
mov
imul
ins
cmp
cdq
dec
sbb
mov
daa
mov
xchg
out
sub
mov
mov
and
inc
pop
add
jmp
inc
aad
inc
mov
push
jmp
pop
ins
dec
cwde
jns
xor
out
repz
test
push
ret
aas
mov
adc
shl
mov
jae
outs
in
dec
adc
xor
xor
adc
(bad)
fdivr
in
popa
lock
clc
mov
lea
ret
mov
dec
push
jae
es
inc
push
xor
add
cmps
movs
jp
(bad)
out
fld
(bad)
aas
mov
and
out
xchg
jg
fdiv
inc
add
fcom
add
clc
ret
ret
imul
cli
mov
add
xchg
ret
and
adc
sub
jb
lock
psubusw
daa
sar
sbb
push
mov
cmp
dec
mov
outs
cmc
or
movs
pusha
(bad)
jmp
jge
repnz
mov
pop
jns
scas
(bad)
dec
pop
dec
std
lock
loope
and
push
(bad)
cmc
jns
retf
repnz
push
sti
and
push
jo
inc
ins
std
fidiv
fsub
dec
pop
(bad)
rcr
or
pop
mov
sub
xchg
mov
scas
add
scas
movs
dec
add
cli
jae
xor
outs
ret
jecxz
sub
ror
dec
inc
lock
icebp
jmp
jmp
fist
jmp
mov
jno
xchg
pop
int3
je
popa
pop
retf
mov
pop
add
fstp
mov
jle
fist
shr
mov
test
loop
cmp
pop
in
push
pop
cmp
loope
pop
test
xor
push
clc
add
es
not
sub
cdq
sbb
fs
lds
test
ins
ret
sub
add
clc
fwait
lock
cli
cmps
mov
mov
call
jbe
fadd
es
inc
jno
das
mov
add
ins
aas
hlt
or
test
add
xor
(bad)
and
pop
jbe
ficom
mov
push
push
jbe
mov
idiv
in
dec
mov
inc
adc
mov
jae
scas
aad
adc
je
xchg
loope
xchg
or
imul
adc
jle
jbe
xchg
mov
add
clc
sbb
xlat
adc
jecxz
call
mov
add
popa
xchg
push
mov
inc
retf
lods
mov
mov
jmp
ds
daa
clc
pop
loope
inc
mov
fwait
sbb
sub
je
ds
in
xchg
sti
paddb
clc
jne
outs
sbb
push
(bad)
jecxz
mov
fwait
leave
daa
mov
and
ret
jns
ins
shl
mov
daa
call
add
jmp
inc
shr
hlt
fsub
dec
inc
in
or
loop
mov
cld
sbb
xor
hlt
fwait
div
cld
cmp
mov
mov
sbb
mov
or
mov
sbb
push
add
mov
sub
(bad)
mov
pop
out
test
push
mov
mov
lds
fsub
sbb
xlat
push
push
jle
rcr
pop
sbb
add
inc
mov
mov
cld
xor
pop
imul
enter
xor
inc
add
clc
adc
add
mov
or
mov
into
pop
retf
imul
xor
add
or
dec
int3
or
mov
fwait
lds
xchg
lahf
add
or
mov
ja
inc
clc
jp
pop
lock
std
sahf
dec
mov
mov
mov
int3
jle
jl
aam
adc
sahf
mov
ss
fidivr
ret
sbb
and
jg
hlt
jb
addr16
call
aam
cmp
shl
sti
retf
or
jecxz
dec
ins
xchg
and
jbe
(bad)
mov
pop
pop
pop
in
inc
(bad)
movs
stos
clc
jnp
mov
(bad)
mov
leave
and
stc
call
ds
(bad)
sub
ds
clc
add
test
leave
movs
inc
push
cdq
sub
aam
sbb
xchg
push
inc
fsub
fs
push
pop
icebp
outs
loope
mov
imul
pop
(bad)
outs
pushf
ins
in
pop
int3
mov
hlt
scas
(bad)
(bad)
loope
ret
lahf
sbb
lea
add
cs
ins
dec
dec
jns
popa
gs
xchg
dec
add
xchg
and
imul
adc
retf
add
dec
jb
jnp
or
loop
fdivr
xchg
and
or
cmp
mov
das
daa
jge
in
cld
out
add
jmp
mov
add
clc
or
ins
cmp
cmp
imul
fisubr
daa
mov
mov
cmps
in
xchg
mov
add
dec
sar
call
(bad)
mov
jne
cld
dec
lock
les
dec
inc
push
lock
cmps
mov
rcr
outs
mov
pop
add
jns
lods
(bad)
es
mov
adc
add
aas
mov
xor
shr
je
push
push
mov
in
lods
jle
xor
nop
adc
sbb
pop
enter
arpl
xchg
in
push
lock
push
dec
clc
jg
shl
sar
jge
mov
xor
out
sbb
and
and
fistp
mov
mov
sahf
fldcw
adc
inc
clc
inc
loope
icebp
pop
xchg
dec
pop
(bad)
std
ds
jge
xlat
sub
lock
out
sbb
jg
fld
dec
xchg
dec
mov
cdq
outs
and
mov
push
mov
mov
pop
sbb
into
adc
inc
pop
fidiv
push
mov
jl
add
loop
clc
es
xor
inc
cmps
imul
dec
add
stos
out
cli
or
push
dec
jle
pop
adc
aaa
clc
push
pop
jg
xchg
dec
mov
mov
pop
dec
and
scas
pop
sub
xor
ds
cli
lods
lock
loop
scas
jecxz
dec
loop
mov
call
imul
test
(bad)
jo
jo
mov
cmps
or
adc
js
pop
xchg
ins
cmp
out
cdq
(bad)
sbb
lea
jge
jbe
xchg
pop
fwait
jle
std
mov
jl
icebp
out
mov
cmps
popf
sub
push
int
jo
adc
add
and
fucom
add
dec
iret
mov
fidiv
mov
into
movs
cmps
pop
sar
and
mov
loope
repnz
aas
mov
pop
fcos
add
aas
fnstcw
mov
(bad)
mov
mov
aaa
add
(bad)
adc
inc
fistp
ja
call
das
inc
or
mov
in
fcomp
in
ret
cld
adc
add
push
xchg
mov
add
(bad)
std
test
ficom
(bad)
jl
loop
int
les
jl
pop
lods
push
add
jg
cli
or
and
xlat
inc
mov
mov
sbb
xor
sub
pop
data16
xchg
pop
retf
ja
sub
lods
xor
jle
pop
push
mov
mov
call
loop
xchg
pop
enter
and
sub
xchg
push
push
cmp
loopne
in
cmps
jecxz
fidiv
out
(bad)
adc
fld
mov
out
in
cdq
fmul
hlt
scas
mov
lock
inc
mov
cmp
jne
lds
xchg
loop
cmp
mov
jmp
add
push
xor
lahf
push
xchg
or
outs
outs
paddsb
sub
pop
inc
dec
jg
int3
and
fisttp
ret
or
jg
pop
mov
daa
lahf
dec
icebp
mov
fiadd
sub
int
mov
push
sbb
mov
scas
xor
pop
cld
test
jo
rcl
les
push
js
imul
cmps
jmp
push
xchg
mov
add
jmp
xor
icebp
aas
dec
div
(bad)
loop
ret
jge
push
clc
pop
out
fisub
add
and
xchg
add
cmp
xor
jp
mov
jle
js
ud2
js
fisub
cmps
xor
dec
lods
jnp
dec
mul
in
outs
inc
lahf
mov
ret
pop
mov
add
push
mov
in
mov
in
push
sbb
xchg
mov
mov
fsub
sub
ror
(bad)
lods
cmc
or
mov
dec
push
xor
(bad)
retf
xlat
daa
mov
pop
xchg
fdivr
sbb
test
xchg
cld
pop
sti
xor
dec
nop
jmp
jg
mov
cmc
pop
aaa
out
fsubr
repnz
add
adc
loope
add
scas
cs
jae
add
jmp
(bad)
in
fwait
ins
mov
fnsave
scas
pop
movs
jnp
xchg
inc
add
clc
add
pop
jge
ret
jp
xchg
(bad)
test
push
fsubrp
out
js
mov
and
adc
cmp
aam
adc
jge
in
jle
push
pop
push
(bad)
or
call
pop
push
aas
lock
or
mov
cmp
sub
pop
sbb
repz
jmp
addr16
pop
shl
pushf
js
hlt
inc
mov
lea
in
dec
add
outs
or
(bad)
neg
ja
shl
mov
fisubr
aam
imul
cmp
mov
mov
cs
ss
mov
cmp
mov
xor
call
push
aam
jo
inc
jp
leave
push
xchg
push
inc
dec
add
adc
sbb
aas
ins
cmp
enter
shl
adc
pusha
mov
shl
adc
shl
adc
shl
adc
add
(bad)
(bad)
xor
rol
stos
jle
repnz
jp
shr
mov
je
aas
imul
jg
jge
add
das
inc
jecxz
ds
sub
jg
and
inc
inc
pusha
mov
jl
pop
ins
inc
shr
in
clc
(bad)
inc
daa
inc
inc
or
and
xchg
pop
jl
shr
sub
pop
in
mov
xor
ret
xlat
sub
scas
or
mov
shl
dec
shl
mov
aas
ins
jg
inc
fcomp
push
xlat
pop
icebp
out
push
pop
adc
cmp
(bad)
aaa
mov
and
adc
pextrw
sbb
or
(bad)
jg
jae
or
sub
clc
mov
(bad)
loopne
scas
jno
test
(bad)
not
dec
(bad)
cld
test
loop
add
sbb
mov
inc
popf
cld
pop
sbb
popw
jno
call
cmps
(bad)
fistp
add
dec
mov
or
cli
adc
cmp
sar
push
(bad)
icebp
or
pop
daa
ins
stos
cli
pushf
push
rcl
aas
fisttp
dec
lock
jg
push
sub
pop
add
retf
test
jg
jecxz
imul
dec
loopne
(bad)
(bad)
cli
fmul
in
or
xchg
inc
(bad)
inc
scas
mov
loope
mov
add
retf
js
sti
ds
push
aas
add
inc
(bad)
sbb
out
out
inc
xchg
enter
aad
clc
and
inc
sti
or
xchg
mov
mov
cdq
mov
jg
sub
psubq
dec
cld
xchg
mov
iret
pop
out
pop
cmp
ss
inc
lock
ins
pusha
adc
in
div
lds
lahf
fisubr
loopne
sti
cli
iret
(bad)
xchg
sub
sahf
rol
pop
lock
cmp
popa
mov
jbe
aam
hlt
or
clc
repz
and
scas
xor
push
adc
hlt
push
aam
fcomp
adc
mov
add
std
imul
lahf
adc
add
arpl
add
ins
pop
pop
cld
adc
ret
inc
scas
retf
jg
add
pushf
jg
pop
cld
jne
push
ss
jg
imul
aam
cwde
outs
outs
out
mov
sub
arpl
xchg
push
jno
inc
jp
cld
adc
inc
pop
sbb
mov
(bad)
pop
xor
test
gs
std
popf
cmp
scas
fsubr
sahf
push
lea
shl
(bad)
add
ins
sbb
sbb
add
mov
clc
test
cmp
xlat
mov
das
cmp
xor
(bad)
sub
lahf
clc
sub
in
xchg
loop
fcomip
in
inc
movs
jmp
shl
push
test
inc
sar
daa
dec
aam
retf
lods
jb
out
in
daa
jecxz
sbb
mov
xchg
hlt
sbb
sar
rcr
jg
icebp
sahf
(bad)
call
dec
ja
inc
inc
arpl
sub
lods
add
push
mov
leave
aas
hlt
push
scas
lods
mov
clc
and
aas
add
fwait
stc
push
sub
jg
inc
out
je
push
daa
sbb
out
gs
dec
jle
jmp
lds
movs
cmps
js
sbb
(bad)
neg
or
in
xor
ds
movs
inc
push
xchg
sub
push
xchg
push
movs
xor
imul
or
pop
popa
cld
jno
arpl
pop
pop
jmp
ja
ss
fcom
xchg
push
into
cmp
pop
pop
repnz
(bad)
lahf
sbb
add
fneni(8087
mov
outs
scas
popa
pop
mov
xlat
mov
jl
sbb
jae
jecxz
repnz
mov
cmps
lods
ins
inc
sahf
mov
imul
push
cmp
jecxz
or
(bad)
cli
in
ss
ins
mov
jmp
and
adc
pop
sahf
pop
lock
scas
mov
clc
mov
or
push
add
push
pop
xchg
test
dec
jnp
mov
sbb
xor
mov
pop
mov
pop
dec
lock
test
stos
fwait
pop
jle
mov
mov
ds
adc
(bad)
jb
mov
pop
or
repnz
hlt
cmp
inc
jnp
push
fdiv
aas
clc
and
cld
mov
adc
add
repnz
add
mov
add
mov
hlt
mov
movs
xchg
lock
mov
inc
sub
pop
jle
cmps
fnsave
(bad)
out
aas
adc
add
repnz
add
mov
ins
pop
fcom
loop
mov
aam
ins
and
adc
sub
stos
test
cld
daa
scas
jle
pop
aaa
in
sub
add
jecxz
inc
ins
aas
stc
xor
outs
(bad)
mov
jmp
pop
inc
scas
sbb
push
cmp
adc
add
cmp
pop
or
cld
cdq
outs
mov
add
ja
call
psllq
dec
pop
test
inc
rcl
sub
and
add
lock
bound
fiadd
fld
in
sahf
(bad)
pop
push
xchg
mov
add
int3
cmp
inc
pusha
mov
jl
clc
cmp
idiv
cld
pop
cmps
sub
push
push
nop
daa
and
add
aam
jae
push
inc
outs
retf
call
(bad)
lock
dec
nop
leave
sub
mov
cld
lea
xlat
mov
inc
mov
inc
in
xchg
and
add
xor
jecxz
test
pop
adc
test
ror
adc
mov
fbstp
inc
sbb
inc
outs
pop
cs
and
data16
icebp
ja
cld
lds
test
xchg
(bad)
addr16
xor
in
enter
into
mov
sti
out
add
adc
push
loopne
retf
pop
(bad)
into
test
pop
fldenv
ss
pushf
jns
rcl
pop
mov
out
mov
fidiv
xchg
inc
inc
lods
data16
lahf
repnz
mov
lods
inc
hlt
xchg
mov
popa
(bad)
sbb
inc
aam
xor
xchg
dec
mov
dec
push
add
adc
stos
pop
mov
hlt
add
(bad)
std
movs
sub
shl
scas
fxch
and
fst
shl
mul
aas
add
loopne
inc
fmul
inc
shl
inc
shl
inc
or
inc
fistp
ret
fisttp
fist
ds
neg
ja
cmp
ins
push
(bad)
pop
outs
sbb
jl
icebp
scas
cdq
ins
sti
pop
jl
lock
repnz
adc
or
sub
and
push
mov
jne
outs
ja
stos
ins
aas
les
pop
retf
mov
push
dec
add
std
nop
mov
jecxz
(bad)
std
addr16
mov
push
mov
daa
lea
sub
xor
sbb
or
lds
shl
imul
or
aas
xchg
(bad)
push
aaa
sar
cld
outs
std
mov
lahf
dec
mov
push
xchg
nop
inc
or
and
adc
addr16
lahf
mov
in
ins
jecxz
add
lea
inc
loope
or
add
pop
xor
dec
repz
sbb
sub
popa
in
inc
jmp
das
test
mov
cmp
inc
movs
push
into
sbb
xor
arpl
popf
mov
inc
add
das
adc
add
int3
(bad)
es
xor
add
addr16
dec
sbb
arpl
test
loop
sub
sar
iret
inc
add
icebp
xlat
ret
outs
sub
pushf
xchg
cmp
scas
test
arpl
mov
cmp
mov
add
movs
mov
imul
and
imul
pop
lahf
cmps
fisubr
or
add
fbld
jmp
imul
inc
jle
jmp
xchg
jno
add
pop
icebp
setno
je
rcr
xor
std
cld
(bad)
xlat
dec
cmp
jno
mov
add
xchg
mov
retf
(bad)
adc
sahf
inc
in
arpl
movs
aad
repnz
xchg
inc
into
cmps
cmp
(bad)
mov
and
jmp
xchg
cmp
iret
popa
lods
and
and
add
pop
mov
fisttp
pop
call
cmps
adc
push
pop
retf
and
in
fidivr
iret
clc
dec
aas
imul
push
pop
ins
sti
gs
dec
cmp
xlat
ficom
pop
addr16
jmpw
and
xor
pop
lock
int
jmp
sbb
or
sbb
dec
std
xor
sbb
jmp
leave
out
out
inc
jge
inc
inc
dec
pop
add
add
pop
aas
in
mov
sub
add
ins
xchg
cli
ins
movs
cld
xor
int3
clc
leave
scas
clc
out
in
(bad)
popa
aam
fistp
pop
stc
js
test
push
fstp
sbb
or
neg
daa
xchg
dec
shl
fldenv
data16
fild
pop
les
cmp
fdiv
jecxz
les
jbe
add
add
inc
mov
sbb
xor
imul
int
sahf
ss
ret
mov
fs
jb
cmp
aas
jbe
pop
clc
push
loopne
(bad)
loope
pop
fiadd
movs
outs
jmp
push
push
mov
sbb
xor
repnz
clc
es
mov
push
aaa
rep
icebp
push
stos
and
jmp
mov
mov
adc
jp
mov
out
mov
inc
push
cmp
xchg
retf
in
cmp
lods
fbstp
pushf
outs
cld
adc
ret
mov
inc
imul
shl
(bad)
lahf
cmps
jmp
sub
out
lds
jecxz
rcr
call
push
test
jno
sahf
lods
mov
mov
sub
jg
dec
pusha
inc
pop
adc
add
je
push
retf
xchg
mov
dec
xor
cmp
shl
mov
std
sahf
jle
clc
stos
jecxz
xchg
push
mov
ret
test
sbb
push
and
pushf
arpl
retf
pop
sbb
cld
adc
repnz
add
push
fisubr
jmp
retf
nop
jp
aad
inc
pop
aas
imul
mov
sub
fcomp
adc
xchg
arpl
stos
dec
retf
stos
inc
scas
jle
repz
xchg
les
stc
pop
loope
jle
mov
in
pop
sub
push
inc
stos
mov
mov
pop
bound
test
fwait
sti
(bad)
out
pop
inc
shl
aad
lahf
pop
mov
(bad)
sub
xchg
mov
call
mov
xor
push
lea
push
xor
cld
or
pop
mov
ds
sar
mov
pop
cmc
mov
outs
sbb
push
clc
push
loop
add
mov
fisub
push
jbe
and
(bad)
jbe
movs
jl
icebp
out
ret
clc
jae
iret
(bad)
pop
pop
cld
inc
imul
inc
sbb
fidivr
xchg
and
inc
daa
sbb
sbb
lds
ss
mov
dec
imul
mov
rcr
xor
jecxz
sbb
add
ret
sbb
push
mov
jg
pop
ret
js
iret
dec
(bad)
neg
int
stos
pop
movs
div
leave
xor
mov
mov
fadd
ss
pop
loop
pop
lock
cld
addr16
ret
outs
xchg
leave
mov
fwait
adc
jne
ss
mov
xor
sbb
pop
mov
pop
jmp
mov
scas
lds
pop
lds
outs
sbb
mov
sete
and
adc
idiv
and
mov
or
std
stos
and
shl
sub
rcr
mov
(bad)
jne
bnd
pop
(bad)
pop
pop
and
test
fdivr
dec
sub
ins
mov
inc
dec
mov
mov
push
mov
ror
ror
inc
jnp
fist
dec
(bad)
fmul
sub
push
sub
push
sub
push
sub
daa
inc
add
cmp
scas
cmp
out
xchg
(bad)
inc
cmp
sar
add
dec
psubw
out
add
mov
stos
mov
push
test
shr
and
lds
push
das
es
mov
fcomp
arpl
test
mov
loop
mov
dec
(bad)
push
fistp
sub
mov
pop
jg
push
and
sub
(bad)
cmp
jle
pop
loope
xor
enter
cmc
lods
dec
sbb
mov
jge
(bad)
sti
lds
aad
sti
stos
push
sub
sbb
jae
xchg
js
pushf
mov
mov
jl
hlt
clc
jg
fisttp
dec
cmps
les
aaa
xor
mov
(bad)
neg
adc
mov
inc
sar
into
add
jge
out
and
mov
cmps
test
cmp
jl
clc
mov
inc
xlat
mov
xor
(bad)
leave
adc
pop
xor
pop
repz
clc
mov
mov
aas
adc
movs
cmp
(bad)
in
dec
in
repnz
out
in
loop
sub
and
cmp
dec
dec
mov
xor
dec
dec
out
cmp
icebp
stos
loop
xor
cmp
jecxz
imul
cmp
mov
out
sbb
jp
push
scas
dec
ins
sbb
dec
xor
jecxz
mov
pop
les
cmc
(bad)
mov
jmp
popf
cmp
xchg
clc
stc
mov
add
in
jns
retf
inc
rcl
jmp
dec
and
(bad)
xor
pop
jno
inc
dec
repz
(bad)
aad
pop
in
mov
pop
mov
lea
mov
aam
dec
and
dec
scas
rol
pop
push
cmp
lock
loop
ret
aad
cmp
sub
shr
adc
out
popf
mov
cmps
test
popf
out
cmp
push
and
pop
mov
ds
pop
aad
push
dec
das
outs
in
gs
test
dec
add
adc
pop
les
xchg
cli
jg
mov
sar
rol
fnsave
repnz
or
push
sub
sub
xchg
mov
sar
leave
loop
loop
inc
(bad)
adc
into
jle
pop
mov
xlat
cmp
stos
jle
clc
movs
jecxz
add
mov
fidivr
xor
mov
jecxz
adc
lea
(bad)
mov
jl
loope
hlt
pop
pop
loop
lods
ins
movs
mov
xchg
mov
sub
cmps
shl
pop
push
jg
stos
loop
jp
pop
(bad)
cmc
sbb
int
imul
push
and
aaa
test
test
inc
fimul
adc
jg
imul
call
sub
retf
mov
mov
sbb
fwait
sti
inc
pop
aad
xor
push
aam
pop
leave
cmp
and
aad
mov
xor
aad
daa
je
es
js
loop
mov
(bad)
pop
clc
dec
lds
xchg
and
adc
push
shl
add
lods
jle
lahf
sbb
cmps
les
fldcw
jne
loopne
std
sub
inc
adc
adc
cmp
jecxz
lds
call
aas
icebp
add
cmp
dec
pop
sbb
jmp
and
jmp
or
cmps
(bad)
mov
std
and
jnp
scas
frstor
iret
inc
sbb
setge
jl
icebp
jle
test
mov
sar
cmovno
lds
aas
push
xchg
std
fwait
jno
adc
mov
adc
dec
mov
mul
adc
sbb
fdivr
fnstcw
les
lahf
jecxz
pop
jmp
imul
sbb
aaa
xor
jle
js
ret
repz
adc
jmp
mov
cli
inc
adc
xor
xchg
iret
dec
add
inc
mov
pusha
out
fild
sysexit
sbb
or
aaa
mov
pop
pop
retf
cmp
sahf
mov
js
neg
inc
fwait
inc
icebp
jg
sub
scas
mov
call
sbb
inc
adc
sbb
jl
clc
pop
movs
dec
cmps
js
(bad)
sbb
int
or
mov
sbb
movs
lock
inc
mov
mov
pop
jmp
cmp
or
retf
inc
(bad)
cmp
or
pusha
ins
mov
sar
(bad)
jg
inc
cld
fs
pop
aam
pop
(bad)
and
mov
int
aad
movs
xchg
aam
ficom
sbb
add
add
pop
ret
(bad)
push
clc
sar
ret
jmp
mov
aam
out
add
fiadd
sahf
sub
or
(bad)
clc
iret
mul
bswap
mov
cmc
imul
aaa
pop
jl
cmp
jbe
sbb
mov
cld
jno
scas
(bad)
out
pop
or
push
lock
ror
ret
or
ins
mov
inc
out
xchg
mov
cmc
jge
loop
xchg
mov
fsubr
mov
repz
adc
add
(bad)
cmps
cld
adc
mov
mov
sbb
fsubrp
cmp
inc
mov
adc
stc
fnsave
mov
into
js
into
ret
lea
cld
pop
jecxz
addr16
les
stos
jmp
jo
lock
add
xchg
push
nop
je
or
pop
shr
cdq
dec
mov
js
and
mov
call
in
lods
push
sub
repnz
in
jae
xlat
jg
pop
mov
and
das
mov
dec
dec
outs
jne
inc
enter
add
sbb
scas
arpl
sbb
sbb
cmps
jae
imul
mov
dec
push
in
fsub
les
fnsave
ret
out
jae
sti
dec
jl
mov
(bad)
daa
xor
movs
pop
sbb
add
sbb
mov
dec
test
outs
xchg
ret
aam
or
mov
test
fwait
sbb
jno
pushf
outs
es
shl
cs
mov
mov
(bad)
fstp
loop
(bad)
repnz
mov
sub
bound
repnz
scas
out
repnz
fdiv
dec
arpl
ins
cmp
test
(bad)
ss
jecxz
adc
cmp
xchg
push
lock
mov
ins
sti
inc
test
ss
ins
jo
fmul
inc
cld
popa
clc
stos
movs
mov
loop
push
jmp
and
and
inc
add
retf
out
rcl
jg
(bad)
push
jmp
shl
retf
mov
add
loope
mov
lods
inc
mov
mov
jmp
cmps
stos
imul
mov
add
cld
or
rol
fwait
ret
ds
cmp
in
jp
test
outs
lods
call
sub
ret
aaa
and
pop
or
dec
(bad)
fisubr
lock
mov
cmp
cmps
js
push
mov
adc
fimul
or
outs
sbb
iret
xor
jnp
jbe
jbe
pop
sbb
inc
icebp
mov
jl
loop
push
les
ja
aas
mov
call
jmp
imul
lea
sar
jmp
imul
mov
push
add
pop
inc
in
add
mov
ss
adc
cmp
shr
jp
test
das
sahf
not
dec
iret
cmp
std
in
std
jae
pop
mov
in
jne
(bad)
fild
mov
in
fst
mov
push
out
push
lods
pusha
out
je
not
repz
int
jns
out
scas
daa
jb
and
movs
cwde
repnz
mov
inc
fcmovbe
xor
inc
mov
cmp
adc
imul
shl
lea
pusha
or
cmc
cmps
ins
lods
adc
xchg
dec
les
shl
mov
ins
mov
push
sub
mov
add
sar
dec
sti
rcr
inc
movs
aaa
adc
das
dec
jmp
fistp
stos
mov
ds
in
inc
dec
inc
je
fwait
xchg
push
push
rol
in
push
mov
pusha
mov
pop
cs
inc
dec
inc
push
or
and
push
mov
pusha
mov
pop
cs
inc
dec
inc
push
or
and
push
mov
pusha
mov
pop
cs
inc
dec
inc
push
or
and
push
mov
pusha
mov
pop
cs
inc
dec
inc
push
or
and
push
mov
pusha
mov
pop
cs
inc
dec
inc
push
or
and
push
mov
pusha
mov
pop
cs
inc
dec
inc
push
or
and
push
mov
pusha
mov
pop
cs
inc
dec
inc
push
or
and
rcr
shl
ss
sub
or
ror
cs
sbb
imul
push
ins
mov
jecxz
shl
add
movs
fild
sub
and
inc
ficom
add
lahf
inc
push
or
cmp
add
add
idiv
nop
fcom
adc
jecxz
dec
out
sar
inc
movs
aaa
adc
jp
loopne
in
jmp
ds
int3
gs
sub
xchg
push
jmp
(bad)
sub
jecxz
aam
in
inc
imul
or
push
aad
aaa
cld
adc
(bad)
ret
les
lock
scas
inc
cmp
mov
or
cmc
jnp
sbb
dec
out
icebp
xlat
rcr
add
jmp
ins
pop
mov
pop
lods
outs
jl
inc
jge
inc
or
movs
jg
jbe
pop
inc
daa
inc
pop
inc
cld
xor
inc
inc
fcmovnb
pop
clc
sbb
cld
pop
push
(bad)
aas
shl
iret
xchg
sub
xor
cli
fiadd
inc
shl
add
call
sar
call
add
xchg
inc
mov
cmp
and
xor
inc
inc
fcmovnb
pop
clc
sbb
cld
pop
pop
lock
pop
outs
add
jb
icebp
je
pop
inc
dec
xchg
ds
mov
xchg
sar
call
add
xchg
inc
mov
inc
mov
push
dec
(bad)
cs
imul
xor
addr16
jg
sar
pop
outs
add
jb
icebp
je
ret
add
mov
leave
inc
vpaddsw
es
stc
adc
das
dec
inc
mov
push
dec
(bad)
cs
clc
pusha
mov
cmp
cmp
clc
mov
ret
xchg
lahf
and
pop
inc
ret
add
mov
leave
inc
(bad)
add
movs
jg
jbe
pop
inc
daa
inc
pop
inc
mov
hlt
cwde
jb
in
sub
mov
dec
cmp
clc
mov
(bad)
cli
fiadd
inc
shl
add
call
push
push
jl
inc
jge
inc
or
movs
jg
jbe
pop
inc
daa
inc
pop
inc
cld
xor
inc
inc
fcmovnb
pop
clc
sbb
cld
pop
push
(bad)
aas
shl
iret
xchg
sub
xor
cli
fiadd
inc
shl
add
call
sar
call
add
xchg
inc
mov
cmp
and
xor
inc
inc
fcmovnb
pop
clc
sbb
cld
pop
pop
lock
pop
outs
add
jb
icebp
je
pop
inc
dec
xchg
ds
mov
xchg
sar
call
add
xchg
inc
mov
inc
mov
push
dec
(bad)
cs
imul
xor
addr16
jg
sar
pop
outs
add
jb
icebp
je
ret
add
mov
leave
inc
vpaddsw
es
stc
adc
das
dec
inc
mov
push
dec
(bad)
cs
clc
pusha
mov
cmp
cmp
clc
mov
ret
xchg
lahf
and
pop
inc
ret
add
mov
leave
inc
(bad)
add
movs
jg
jbe
pop
inc
daa
inc
pop
inc
mov
hlt
cwde
jb
in
sub
mov
dec
cmp
clc
mov
(bad)
cli
fiadd
inc
shl
add
call
push
push
jl
inc
jge
inc
or
movs
jg
jbe
pop
inc
daa
inc
pop
inc
cld
xor
inc
inc
fcmovnb
pop
clc
sbb
cld
pop
push
(bad)
aas
shl
iret
xchg
sub
xor
cli
fiadd
inc
shl
add
call
sar
call
add
xchg
inc
mov
cmp
and
xor
inc
inc
fcmovnb
pop
clc
sbb
cld
pop
pop
lock
pop
outs
add
jb
icebp
je
pop
inc
dec
xchg
ds
mov
xchg
sar
call
add
xchg
inc
mov
inc
mov
push
dec
(bad)
cs
imul
xor
addr16
jg
sar
pop
outs
add
jb
icebp
je
ret
add
mov
leave
inc
vpaddsw
es
stc
adc
das
dec
inc
mov
push
dec
(bad)
cs
clc
pusha
cmp
fstp
jl
lock
sti
js
aas
and
cli
dec
cmp
and
sbb
arpl
mov
mov
stos
jmp
xor
jae
mov
nop
sbb
pop
inc
in
xlat
mov
xchg
xchg
scas
pop
jno
(bad)
mov
cli
sub
retf
push
add
cmps
rol
mov
mov
add
sub
push
add
cmps
rol
mov
mov
add
sub
push
add
cmps
rol
scas
mov
bnd
add
add
scas
sahf
sub
lahf
clc
daa
iret
cld
popf
xlat
cmp
dec
outs
sub
ffreep
xchg
mov
js
inc
fidivr
mov
int
ins
cmps
rol
fistp
jle
xor
cmc
jmp
inc
aad
jg
push
jbe
or
mov
add
sbb
test
inc
sti
or
add
mov
pop
out
xchg
pop
popa
(bad)
mov
mov
sbb
call
pop
dec
sbb
mov
lods
in
sar
pop
pop
xchg
pop
and
test
call
xlat
aam
or
clc
aas
loop
in
shr
lock
jmp
mov
cld
int3
scas
scas
seta
cmps
bound
inc
icebp
iret
not
in
outs
xchg
iret
inc
pop
mov
sub
outs
out
and
lds
and
fwait
jae
sbb
add
scas
leave
movs
loop
inc
dec
xor
cmp
fs
mov
pushf
lahf
ss
xchg
xchg
in
mov
std
xchg
pop
rcl
call
jbe
fucomi
test
jnp
(bad)
out
fnstenv
(bad)
pop
or
scas
sbb
mov
sub
movs
dec
sbb
add
nop
push
sysret
adc
fidivr
sar
call
mov
inc
in
neg
jl
cmp
sub
sbb
aam
ret
shl
lahf
cmp
pop
shl
jno
ss
test
bound
mov
cld
rcr
sub
lahf
adc
push
neg
mov
cmps
jnp
add
pushf
test
popa
repnz
in
repz
mov
jp
lahf
movs
js
popa
mov
repnz
or
pop
(bad)
mov
mov
push
inc
iret
push
int
pusha
cmp
add
pop
push
mov
push
dec
fstp
cmp
cmp
mov
xor
(bad)
scas
mov
lock
ja
in
imul
shl
mov
in
jns
(bad)
mov
mov
dec
rcr
neg
cmp
stc
cs
movs
or
xor
icebp
(bad)
pop
clc
dec
add
sbb
sahf
or
(bad)
sbb
call
sbb
xchg
imul
xlat
in
jl
add
dec
test
ret
mov
jp
outs
lods
mov
ficom
mov
(bad)
fwait
in
pop
pop
or
(bad)
sbb
clc
jge
rcr
or
repnz
sahf
aas
mov
aam
(bad)
js
sahf
push
sbb
in
out
shl
in
imul
push
fst
mov
inc
imul
cmp
sbb
les
icebp
or
and
jae
mov
lea
or
mov
xor
cmp
ss
aas
loope
repz
mov
mov
adc
mov
cs
addr16
cli
push
dec
jecxz
sbb
jmp
aad
aam
std
mov
push
les
aaa
sti
(bad)
pop
int
scas
mov
sub
xor
das
int3
es
movs
sbb
not
test
(bad)
mov
(bad)
(bad)
(bad)
sub
ja
test
je
ins
jno
lods
dec
popa
inc
xchg
ds
jl
(bad)
in
jno
jle
mov
jmp
sub
jmp
rcl
mov
jnp
ins
aaa
add
sub
outs
out
enter
call
mov
pop
inc
lock
jl
cmp
fisttp
jns
push
fs
add
sbb
inc
cmp
push
inc
jbe
jne
sbb
rcr
shl
xchg
mov
xchg
dec
repnz
pop
int3
pop
pop
pop
mov
sbb
lods
jg
pop
sbb
mov
je
cmp
push
pop
mov
cmp
fimul
test
sbb
movs
std
fwait
div
out
ds
in
arpl
cmp
outs
loop
cmp
mov
shl
stc
push
ficomp
adc
mov
sub
or
xor
and
scas
scas
ins
cwde
pop
fld
fiadd
dec
mov
dec
pop
sub
lock
lea
int
popf
icebp
arpl
jle
jne
aas
adc
shld
clc
jg
push
(bad)
into
dec
fst
push
sbb
cmp
cmps
cmp
fist
pop
js
(bad)
mov
ret
pop
push
sub
pop
xchg
sub
pop
cmps
or
add
pop
xor
sub
push
stos
sbb
xlat
mov
inc
dec
push
iret
xchg
push
out
aad
jmp
lods
out
mov
mov
sar
hlt
pop
jg
jg
xlat
ds
or
ret
xchg
fisubr
inc
cmps
inc
jns
movs
not
inc
lods
int3
aaa
mov
mov
adc
sbb
add
xor
mov
inc
pop
dec
(bad)
cmp
jno
inc
imul
sbb
adc
retf
add
inc
lds
pop
(bad)
cmp
sbb
loop
sbb
push
out
push
dec
inc
jecxz
ins
pop
ss
les
(bad)
data16
mov
pop
mov
jg
scas
(bad)
repz
sbb
jle
imul
std
in
adc
fst
mov
out
rol
jge
out
add
cmp
ficom
xlat
add
lea
imul
and
ja
push
(bad)
sbb
inc
loopne
mov
jae
cmps
cmps
ins
adc
shl
xchg
mov
ss
xchg
and
div
push
ret
(bad)
push
data16
daa
shr
(bad)
jns
push
sti
and
ja
pop
cmp
dec
dec
add
in
in
shl
dec
xlat
adc
ins
fcomi
not
sbb
into
stos
sti
sub
fist
jle
js
ret
ret
imul
add
or
pop
loope
popa
cdq
mov
jno
dec
and
int
inc
in
xor
mov
lods
and
mov
(bad)
shl
mov
mov
mov
cmps
test
test
out
pmaxub
lahf
sub
movs
repnz
sbb
in
pop
icebp
popf
movs
mov
pop
cmp
jns
pushf
sbb
icebp
mov
jne
or
mov
jae
or
lods
mov
(bad)
ror
and
or
jge
js
xchg
call
stc
pop
push
repnz
cmc
shr
sar
push
xor
out
jbe
int
pop
test
ret
ins
je
outs
ror
repnz
inc
out
movs
pop
fidiv
mov
or
sub
add
dec
icebp
cmps
(bad)
outs
or
imul
out
jnp
les
mov
sbb
xchg
arpl
lods
jle
adc
rol
(bad)
lea
xchg
dec
pop
imul
test
in
scas
jns
push
mov
pop
shr
pop
into
lahf
loope
pop
paddusw
mov
xor
popa
je
in
retf
test
pop
push
jo
shr
neg
cld
and
in
cmp
pop
mov
cdq
mov
out
mov
xchg
dec
test
lahf
push
cld
mov
sub
push
test
movs
sub
push
or
mov
movs
loop
test
scas
push
pop
lahf
xor
stos
sub
mov
stc
sub
mov
jle
imul
pop
cmp
mov
mov
retf
test
(bad)
dec
and
add
and
mov
gs
add
scas
stos
mov
or
adc
fwait
bound
pop
xor
xor
scas
test
sbb
cmps
or
fwait
jne
pop
jns
lods
mov
jmp
movs
fwait
je
fwait
call
jge
icebp
out
aaa
mov
push
lock
das
adc
in
in
pand
js
push
xor
cmp
pop
out
sub
hlt
leave
in
pop
sub
movs
ret
pushf
dec
xchg
jno
or
hlt
aam
pop
lea
jge
stos
jle
iret
adc
lods
lods
test
cmp
xor
cli
rol
jge
sti
add
mov
scas
js
jmp
sbb
fdivr
push
add
add
scas
mov
jbe
xlat
(bad)
pop
lock
out
stc
neg
test
inc
rol
outs
test
mov
mov
cli
sahf
lds
fst
fild
jge
mov
rol
fild
jge
add
mov
cmps
rol
fild
jge
add
mov
cmps
rol
fild
jge
add
mov
cmps
rol
fild
jge
add
mov
cmps
rol
fild
jge
add
mov
cmps
rol
fistp
jg
xchg
imul
nop
fcom
push
hlt
inc
cld
adc
dec
rcr
aaa
adc
rcr
iret
sbb
dec
mov
in
mov
inc
outs
(bad)
xchg
push
sbb
bound
mov
scas
test
popa
push
das
jne
mov
lock
mov
(bad)
push
push
mov
jae
arpl
mov
push
inc
jge
repz
adc
add
push
pop
xlat
mov
iret
pop
(bad)
cld
push
loope
aaa
(bad)
jmp
push
sub
jg
adc
dec
das
mov
imul
je
cmp
enter
retf
jg
stos
loope
sbb
cmc
scas
cmp
mov
aam
ja
and
cmp
and
js
outs
or
sar
cs
or
fsub
mov
gs
mov
fnstsw
inc
scas
daa
aas
int3
jl
loope
popa
sahf
out
(bad)
cmp
sbb
lods
shl
addr16
push
mov
mov
jns
cmp
sbb
fistp
cld
iret
mov
mov
sub
je
jbe
idiv
jmp
hlt
scas
sbb
aas
sbb
sbb
cmp
push
leave
inc
mov
pop
add
push
std
lods
jl
icebp
push
ret
leave
lods
xor
cmova
push
xor
jbe
mov
inc
fwait
mov
pop
inc
pop
mov
les
dec
xor
push
mov
imul
ss
aam
fist
xor
adc
inc
dec
pop
pop
mov
sti
dec
aam
leave
ret
lahf
loope
jmp
ror
repnz
in
call
retf
push
push
mov
scas
in
sti
and
fld
(bad)
dec
mov
rcl
fwait
jg
ds
mov
stos
jmp
(bad)
jmp
mov
mov
mov
xchg
jmp
js
inc
icebp
pop
mov
inc
push
xchg
mov
jg
movs
xchg
repz
leave
mov
inc
out
repz
jns
xor
or
pop
cmps
dec
iret
adc
pop
mov
int3
iret
adc
call
test
mov
push
(bad)
and
int3
sub
imul
repz
jmp
mov
adc
sti
xor
jecxz
fmulp
outs
daa
jne
(bad)
mov
dec
jmp
sti
xor
xchg
pop
mov
(bad)
(bad)
outs
and
je
sbb
imul
cdq
or
cmp
push
pop
shr
stc
pop
inc
rol
sbb
scas
(bad)
loope
and
mov
and
call
idiv
adc
cmp
mov
xchg
push
push
retf
addr16
rol
add
ins
in
jns
clc
scas
pop
loopne
adc
ror
aas
mov
iret
das
push
inc
cmps
mov
jmp
mov
push
mov
cli
jmp
test
nop
jl
out
fldcw
pushf
fdivr
imul
jl
jl
clc
push
add
sbb
aaa
scas
cmp
jle
fidiv
clc
cmps
loope
lock
jp
xchg
push
xchg
add
popf
mov
cmp
cmp
dec
pop
(bad)
into
mov
jno
jmp
icebp
ja
shld
mov
dec
outs
xchg
fcmovne
adc
xchg
sbb
js
adc
sbb
lahf
pop
cmc
sub
(bad)
aad
in
pushf
and
into
lahf
das
mov
sbb
mov
out
not
sub
and
outs
in
xchg
adc
lahf
outs
js
add
ret
loop
cmp
les
xchg
mov
mov
mov
movs
test
mov
not
icebp
into
(bad)
jecxz
jae
push
fsubr
out
jno
ret
add
push
inc
sbb
(bad)
pop
fnstsw
mov
ror
cwde
lods
jecxz
fistp
(bad)
mov
test
dec
mov
pop
and
data16
xor
pop
fucomp
out
int
test
cmps
mov
cmps
dec
ror
fcom
call
pop
jge
rep
sub
int
out
aam
sar
popf
shl
cwde
pop
mov
jmp
(bad)
movs
mov
xor
fisub
and
into
sbb
icebp
xor
add
dec
sbb
mov
(bad)
scas
call
fmul
adc
add
xlat
int
pop
mov
(bad)
lods
mov
(bad)
pop
das
inc
mov
cmps
lods
sub
or
sbb
dec
pop
add
nop
cmp
popa
jecxz
xchg
push
and
cmc
jnp
outs
out
in
cmc
mov
ror
jae
or
in
mov
mov
cmps
sbb
xchg
stos
inc
adc
mov
lea
sub
into
movs
jbe
dec
aaa
outs
neg
ins
ficomp
push
icebp
xchg
sbb
mov
call
and
adc
iret
cwde
mov
int
sahf
push
push
jle
js
mov
pop
xchg
xor
dec
ret
imul
xor
retf
mul
mov
cmp
daa
cmp
test
jl
jecxz
or
jb
pop
jmp
mov
fld
inc
mov
mov
fist
bound
mov
xor
inc
ror
repz
mov
call
and
add
push
ins
pop
or
xchg
add
sbb
popf
xor
mov
aam
lea
mov
out
not
jns
sbb
dec
push
imul
imul
xor
add
aaa
test
mov
cmp
and
xchg
mov
shr
jle
hlt
aas
cld
adc
scas
xor
push
add
arpl
jecxz
sbb
push
mov
inc
adc
or
outs
daa
ror
lds
jp
mov
add
ret
daa
nop
jnp
unpckhps
out
sbb
xor
add
mov
into
xor
pop
mov
fwait
mov
sub
sub
jecxz
movs
push
push
dec
jnp
icebp
cmp
mov
inc
cmp
leave
icebp
push
fs
(bad)
inc
or
pop
loope
sbb
icebp
fst
mov
add
test
inc
hlt
xchg
inc
loop
in
imul
add
mov
jbe
mov
imul
in
dec
cmp
add
ror
pushf
or
xlat
mov
xchg
jle
(bad)
scas
je
add
mov
movs
sahf
fldenv
mov
and
mov
imul
inc
ds
ret
(bad)
sub
mov
repnz
xchg
cmp
mov
or
xor
fwait
mov
test
dec
adc
jae
jge
pop
fsubrp
inc
in
mov
rcr
sti
cmovl
jnp
jge
jg
jl
jae
lds
add
scas
clc
push
mov
(bad)
aam
jmp
(bad)
outs
jg
pop
pop
xchg
in
lock
cmp
das
jecxz
(bad)
ins
rol
jnp
mov
mov
mov
test
cli
pushf
cmps
les
add
ins
sub
out
shl
fcmove
dec
adc
outs
retf
adc
xchg
jb
jo
cmp
ret
pop
and
xor
inc
bswap
out
mov
jb
jl
in
dec
push
cmp
pop
cmp
cmps
sub
repz
in
pop
cmps
cmp
pop
test
shl
mov
pushf
fbld
or
pusha
add
xchg
scas
retf
iret
fnstcw
movs
cmp
addr16
cmp
sbb
pusha
xlat
popa
jne
ja
inc
mov
sbb
sub
inc
test
call
test
inc
sbb
lods
jle
jmp
sub
clc
mov
jl
xor
mov
out
cmps
mov
loop
sbb
xor
xor
add
shl
mov
leave
fmul
xor
mov
stos
mov
inc
mov
inc
inc
cmc
push
aas
sbb
clc
popf
aas
test
and
mov
addr16
retf
fisttp
jmp
loop
xlat
rcr
mov
js
pop
jnp
je
lea
or
mov
int
mov
(bad)
repnz
movs
imul
dec
xor
idiv
scas
sub
popf
popf
fnstenv
jno
jno
pop
or
lods
cld
imul
adc
push
mov
dec
mov
xchg
mov
push
aam
idiv
jbe
(bad)
pop
js
add
sbb
or
push
mov
inc
adc
pop
mov
pop
push
add
idiv
mov
dec
cmp
retf
mov
pop
popa
clc
mov
retf
outs
adc
loope
jge
inc
xchg
pop
mov
leave
xchg
sub
ja
inc
jle
fwait
icebp
mov
dec
mov
sti
push
cld
ss
pop
lods
pop
push
mov
(bad)
push
xchg
sub
ins
retf
sbb
jb
int
cmps
loop
(bad)
(bad)
mov
mov
in
hlt
mov
fisubr
mov
jecxz
cs
out
ins
das
add
sbb
sbb
iret
xor
aaa
jecxz
mov
icebp
(bad)
jmp
push
fcmove
movs
mov
dec
lods
xchg
mov
out
mov
push
mov
cdq
(bad)
adc
cmp
push
scas
sbb
repnz
test
enter
jecxz
fcom
ins
ficom
int
sub
mov
mov
leave
jge
call
pop
ins
or
jnp
jmp
inc
mov
loop
ret
nop
mov
ja
push
ret
retf
aaa
in
xchg
fs
and
into
mov
jb
std
out
inc
cmp
add
add
mov
xchg
inc
call
mov
pop
sub
sti
inc
rcr
hlt
fist
daa
(bad)
cmc
aas
xchg
cmp
cld
push
fs
jmp
cmp
adc
xchg
or
out
cmp
jb
rol
mov
sbb
jb
test
mov
mov
test
movs
push
fimul
jnp
jge
sti
push
jl
shl
iret
mov
sbb
retf
mov
in
aam
jg
push
mov
pop
sub
add
sti
out
pop
push
icebp
jg
pushf
addr16
mov
sti
outs
pop
popf
fist
mov
dec
clc
mov
shl
xor
test
mov
sub
push
adc
scas
loopne
(bad)
in
add
push
mov
mov
daa
xchg
dec
rcl
inc
dec
mov
mov
xor
cwde
inc
retf
ss
xchg
cmp
scas
cwde
scas
loope
jno
add
pushf
sub
push
cmc
sbb
in
pop
outs
or
mov
mov
out
jae
movs
dec
dec
mov
daa
jae
cld
pop
icebp
fwait
(bad)
icebp
jle
aaa
ds
shl
dec
daa
inc
test
shl
aas
xchg
and
inc
(bad)
pop
xor
add
rol
call
dec
(bad)
adc
jecxz
lock
mov
jne
mov
xor
sub
push
(bad)
cmp
mov
icebp
pop
jl
fwait
loop
mov
mov
add
jl
lods
loop
mov
mov
rcl
scas
and
mov
imul
mov
inc
push
lock
jmp
test
ins
frstor
add
sar
cmp
jnp
jl
into
lock
mov
xchg
aas
arpl
push
cmp
sahf
or
xor
data16
popf
or
mov
es
pushf
call
rol
mov
int3
fiadd
and
in
into
push
sub
outs
mov
pop
lock
call
sbb
jns
stos
jge
add
sub
sbb
sbb
rcr
jnp
jle
int3
cmp
test
dec
lods
in
gs
leave
fnstsw
mov
stos
rcr
retf
lock
mov
mov
pop
clc
daa
idiv
xchg
jnp
sti
add
jg
add
cli
call
cld
jne
ins
sbb
test
sbb
jge
mov
clc
xchg
jl
mov
aas
cmp
mov
sub
push
popa
mov
mov
mov
mov
sub
add
mov
mov
mov
sub
add
mov
mov
mov
sub
add
mov
mov
mov
sub
add
mov
mov
mov
sub
add
mov
mov
xchg
add
push
add
add
scas
sahf
stos
call
cld
popf
mov
inc
dec
outs
sub
icebp
std
aam
sbb
inc
adc
mov
or
xor
loopne
mov
push
loope
bound
jno
inc
xor
out
(bad)
call
cmp
add
mov
aad
pop
dec
icebp
xchg
mul
call
mov
ror
loope
aad
cdq
mov
dec
movs
jg
cmps
idiv
aas
repnz
jecxz
inc
add
xchg
test
push
xchg
je
dec
and
jno
jno
iret
cld
popa
inc
cld
(bad)
js
(bad)
stc
(bad)
inc
mov
(bad)
jg
jge
add
add
xlat
enter
test
test
jg
add
sahf
inc
mov
push
inc
lahf
iret
pop
jg
xor
add
xor
aam
add
inc
inc
sbb
add
sahf
inc
mov
push
inc
lahf
iret
pop
jg
xor
add
xor
aam
add
inc
inc
sbb
add
sahf
inc
mov
push
inc
lahf
iret
pop
jg
xor
add
xor
aam
add
inc
inc
sbb
add
sahf
inc
mov
push
inc
lahf
iret
pop
jg
xor
add
xor
aam
add
inc
inc
sbb
add
sahf
inc
mov
push
inc
lahf
iret
pop
jg
xor
add
xor
aam
add
inc
inc
sbb
add
sahf
inc
mov
push
inc
lahf
iret
pop
jg
xor
add
xor
aam
add
inc
inc
sbb
add
sahf
inc
mov
push
inc
lahf
iret
pop
jg
xor
add
xor
aam
add
inc
inc
sbb
add
sahf
inc
mov
push
inc
lahf
iret
pop
jg
xor
add
xor
aam
add
inc
inc
sbb
add
sahf
inc
mov
push
inc
lahf
iret
pop
jg
xor
add
xor
aam
add
inc
inc
sbb
add
sahf
inc
mov
push
inc
lahf
iret
pop
jg
xor
add
xor
aam
add
inc
inc
sbb
add
sahf
inc
mov
push
inc
lahf
iret
pop
jg
xor
add
xor
aam
add
inc
inc
sbb
add
sahf
inc
mov
push
inc
lahf
iret
pop
jg
xor
add
xor
aam
add
inc
inc
sbb
add
sahf
inc
mov
push
inc
lahf
iret
pop
jg
xor
add
xor
aam
add
inc
inc
sbb
add
sahf
inc
mov
push
inc
lahf
iret
pop
jg
xor
add
xor
aam
add
inc
inc
sbb
add
sahf
inc
mov
push
inc
lahf
iret
pop
jg
xor
add
xor
aam
add
inc
inc
sbb
add
sahf
inc
mov
push
inc
lahf
iret
pop
jg
xor
add
xor
aam
add
inc
inc
sbb
add
sahf
inc
mov
push
inc
lahf
iret
pop
jg
xor
add
xor
aam
add
inc
inc
sbb
add
sahf
inc
mov
push
inc
lahf
iret
pop
jg
xor
add
xor
aam
add
inc
inc
sbb
add
sahf
inc
mov
push
inc
lahf
iret
pop
jg
xor
add
xor
aam
add
inc
inc
sbb
add
sahf
inc
mov
push
inc
lahf
iret
pop
jg
xor
add
xor
aam
add
inc
inc
sbb
add
sahf
inc
mov
push
arpl
fdivr
push
fcmovne
xchg
sti
mov
(bad)
jg
jl
inc
sbb
aas
out
mov
pop
push
js
idiv
and
adc
push
mov
pop
mov
mov
repz
push
mov
inc
call
mov
adc
shl
sub
sub
or
mov
sub
sub
sub
or
mov
sub
sub
sub
or
sbb
add
add
mov
jl
pop
inc
jle
pop
bnd
add
std
and
iret
sar
inc
sar
cmc
cmp
mov
scas
xchg
push
pusha
mov
mov
jl
fwait
jecxz
lds
sbb
outs
jbe
xor
push
loope
mov
jl
retf
leave
in
xchg
scas
add
(bad)
jle
cld
and
push
aad
iret
sub
imul
xchg
sbb
mov
loope
cld
dec
inc
mov
adc
inc
icebp
adc
add
pop
pop
lock
mov
dec
ins
loopne
add
adc
(bad)
in
cmp
ja
sti
int3
or
in
bound
iret
mov
jg
stc
jns
add
outs
pushf
push
xchg
mov
sub
(bad)
in
stos
cmp
add
adc
(bad)
iret
cli
daa
sahf
sub
add
sub
inc
cld
sub
lahf
hlt
dec
cmp
inc
sbb
and
jecxz
std
seta
add
call
clc
fcos
add
out
add
add
mov
mov
jmp
jl
add
repz
add
adc
(bad)
iret
cli
daa
sahf
sub
add
sub
inc
cld
sub
lahf
hlt
dec
cmp
inc
sbb
and
sbb
cmp
cmp
push
nop
arpl
bnd
leave
xchg
xor
mov
push
ror
mov
sti
mov
cli
lds
aas
ret
cld
iret
cmp
add
mov
mov
add
push
inc
or
loop
std
adc
adc
inc
mov
clc
loope
cmp
sbb
es
mov
inc
and
pop
in
movs
icebp
ret
jle
mov
add
add
je
pop
adc
add
loope
addr16
jg
test
cdq
inc
inc
repz
and
sub
add
mov
mov
add
push
mov
pusha
cmp
cmp
pop
(bad)
mov
fstp
lock
sbb
call
shr
aaa
inc
aad
pop
(bad)
(bad)
pop
(bad)
sub
(bad)
pop
out
inc
cld
sub
lahf
hlt
dec
cmp
inc
sbb
and
aas
call
add
aas
cld
inc
jp
cld
ss
(bad)
iret
cli
pop
das
aas
lock
inc
(bad)
sar
add
xchg
iret
cld
push
mov
add
je
pop
adc
add
loope
addr16
inc
ret
cdq
inc
inc
repz
and
sub
add
mov
mov
add
push
mov
ins
inc
mov
add
pop
lock
sbb
call
shr
aaa
inc
aad
pop
(bad)
(bad)
pop
(bad)
sub
(bad)
pop
out
inc
cld
sub
lahf
hlt
dec
cmp
inc
sbb
and
cmps
xchg
scas
hlt
stos
aam
lods
scas
pusha
push
push
mov
jecxz
std
seta
add
jmp
ds
inc
fwait
not
lock
mov
xlat
(bad)
icebp
ficomp
loop
retf
or
mov
xor
xor
mov
xchg
pushf
add
or
int3
stos
imul
jmp
(bad)
cmp
mov
shr
lahf
adc
dec
xchg
daa
adc
sub
dec
mov
rol
jmp
push
nop
mov
jmp
shl
inc
sub
cs
lock
popf
loope
adc
pusha
clc
and
fmulp
dec
ins
ins
aam
fild
ja
and
jl
cmp
inc
xchg
lds
mov
(bad)
push
jns
int
pop
or
stos
repnz
mov
push
je
mov
aas
inc
sub
stos
(bad)
xchg
push
xchg
shl
hlt
sbb
or
cmc
in
jns
cld
sub
lahf
hlt
dec
cmp
inc
sbb
and
aas
call
add
aas
cld
inc
jp
cld
ss
(bad)
iret
cli
pop
das
aas
lock
inc
(bad)
sar
add
xchg
iret
cld
push
mov
add
jne
aad
pop
(bad)
(bad)
sbb
bound
lahf
inc
ret
cdq
inc
inc
repz
and
sub
add
mov
mov
add
push
mov
ins
inc
mov
add
pop
lock
sbb
call
shr
aaa
inc
aad
pop
(bad)
(bad)
pop
(bad)
sub
(bad)
pop
out
inc
cld
sub
lahf
hlt
dec
cmp
inc
sbb
and
aas
call
add
aas
cld
inc
jp
cld
ss
(bad)
iret
cli
pop
das
aas
lock
inc
(bad)
sar
add
xchg
iret
cld
push
mov
add
je
pop
adc
add
loope
addr16
inc
ret
cdq
inc
inc
repz
and
sub
add
mov
mov
add
push
mov
ins
inc
mov
add
pop
lock
sbb
call
shr
aaa
inc
aad
pop
(bad)
(bad)
pop
(bad)
sub
(bad)
pop
out
inc
cld
sub
lahf
hlt
dec
cmp
inc
sbb
and
aas
call
add
aas
cld
inc
jp
cld
ss
(bad)
iret
cli
pop
das
aas
lock
inc
(bad)
sar
add
xchg
iret
cld
push
mov
add
je
pop
adc
add
loope
addr16
inc
ret
cdq
inc
inc
repz
and
sub
add
mov
mov
add
push
mov
ins
inc
mov
add
pop
lock
sbb
call
shr
aaa
inc
aad
pop
(bad)
(bad)
pop
(bad)
sub
(bad)
pop
out
inc
cld
sub
lahf
hlt
dec
cmp
inc
sbb
and
aas
call
add
aas
cld
inc
jp
cld
ss
(bad)
iret
cli
pop
das
aas
lock
inc
(bad)
sar
add
xchg
iret
cld
push
mov
add
je
pop
adc
add
loope
addr16
inc
ret
cdq
inc
inc
repz
and
sub
add
mov
mov
add
push
mov
ins
inc
mov
add
pop
lock
sbb
call
shr
aaa
inc
aad
pop
(bad)
(bad)
pop
(bad)
sub
(bad)
pop
out
inc
cld
sub
lahf
hlt
dec
cmp
inc
sbb
and
jae
retf
pop
mov
or
loop
dec
sahf
sub
jnp
sub
mov
jecxz
std
seta
add
jmp
ret
fbstp
push
mov
jecxz
or
mov
out
push
aad
pop
lock
push
(bad)
stos
loop
dec
std
out
cld
sub
jl
add
repz
mov
and
pop
mov
mov
(bad)
fiadd
shl
shl
mov
dec
xor
ficomp
jo
add
add
mov
das
(bad)
push
xchg
xor
pop
lods
shr
mov
cwde
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
daa
rcl
nop
push
push
cmps
lahf
jno
jg
jo
sub
dec
sbb
dec
adc
xchg
cmp
pop
mov
inc
push
jo
cmps
scas
mov
sub
sub
rcl
xchg
mov
mov
enter
mov
mov
adc
add
add
mov
repz
sti
add
fprem
sbb
fistp
les
jle
repnz
das
jle
cmps
iret
pop
push
pop
out
fwait
push
or
add
mov
inc
les
ds
scas
call
cld
pushf
popf
xchg
sub
push
scas
ins
dec
std
int3
std
sbb
cmp
vpcmpeqd
and
dec
jp
cmp
fist
scas
mov
sub
hlt
div
inc
mov
xor
pop
(bad)
fisubr
lahf
popf
pop
dec
jg
push
out
dec
mov
add
sub
pop
(bad)
js
fisubr
push
cmp
(bad)
xchg
pushf
outs
arpl
or
cmps
test
pop
nop
out
dec
xor
call
hlt
dec
fiadd
clc
cmp
ffree
dec
jl
mov
adc
test
popf
jl
gs
fs
test
movs
cmps
inc
jo
std
fistp
in
pop
lock
lds
pop
mov
jle
loop
dec
cwde
cmc
pop
aam
in
jbe
push
fxch
mov
(bad)
or
jbe
lea
(bad)
mov
sahf
hlt
jg
jmp
icebp
scas
mov
fdiv
inc
daa
mov
and
jo
add
pusha
inc
jecxz
jecxz
outs
jl
inc
xchg
xchg
clc
cmp
add
out
mov
leave
jge
sar
xchg
inc
movs
iret
pop
shr
(bad)
out
sub
xor
popf
mov
mov
test
jne
lds
lds
(bad)
clc
inc
jl
push
movs
js
push
retf
data16
push
cwde
sbb
(bad)
xor
clc
ins
icebp
das
ret
shl
cmc
retf
unpcklps
fwait
pop
sbb
mov
pop
adc
loope
push
jecxz
adc
inc
inc
sar
(bad)
in
dec
test
or
pop
cli
(bad)
pop
sub
(bad)
xor
and
mov
clc
xor
test
ficomp
outs
scas
sub
mov
inc
call
pop
in
inc
push
cmps
out
scas
gs
cmp
stos
push
je
cmps
scas
(bad)
mov
dec
xchg
movs
mov
inc
adc
iret
mov
mov
push
adc
js
and
fs
push
jmp
xchg
popf
jno
push
push
pop
xchg
xor
jbe
mov
inc
fst
nop
sar
xor
stc
cmp
mov
(bad)
mov
fnsave
arpl
cmc
div
rcr
push
xor
sub
lahf
fidiv
sub
pushf
push
mov
lds
adc
out
inc
mov
mov
aam
push
sub
dec
mov
xor
mov
cld
popf
das
cmp
scas
idiv
loope
xchg
mov
loop
aad
addr16
jl
lea
and
cmps
jb
sbb
ins
scas
xchg
loop
cld
xchg
das
adc
add
dec
out
add
jae
out
jnp
out
outs
push
jge
jp
mov
adc
int3
(bad)
icebp
jg
dec
xlat
(bad)
stc
pop
xchg
jl
pop
dec
push
repnz
sub
inc
ror
out
jmp
cmp
inc
adc
mov
rcr
sar
inc
fcomp
cli
ins
scas
lods
cmps
fstp
(bad)
imul
pop
out
inc
add
xor
inc
inc
push
or
clc
add
jmp
clc
jno
sub
mov
push
fwait
jae
push
fisubr
inc
sub
cwde
or
push
or
popa
mov
dec
inc
adc
in
push
cmp
(bad)
mov
(bad)
cmp
call
imul
push
fstp
loop
pop
lea
mov
popa
xor
inc
cs
and
ins
call
mov
out
cmps
mov
(bad)
push
in
cli
cld
dec
mov
pop
outs
fyl2xp1
mov
ds
ds
jnp
sub
fld
not
fisubr
out
xor
mov
sub
test
push
mov
adc
pop
mov
xchg
loope
aas
(bad)
not
imul
ss
sbb
sbb
data16
ss
inc
leave
pop
mov
imul
lock
cld
and
pop
clc
lea
jecxz
inc
int3
das
mov
push
xchg
jg
pop
mov
jle
pop
adc
and
jl
scas
jmp
fild
and
dec
loop
push
push
mov
lods
pop
mov
ror
stos
adc
or
push
inc
push
jae
inc
in
push
loope
xchg
clc
imul
(bad)
cmp
jbe
inc
je
dec
adc
mov
inc
bound
xor
sub
je
push
clc
dec
(bad)
rcr
imul
lea
test
(bad)
sbb
mov
out
fisttp
add
inc
dec
jg
push
lahf
inc
inc
(bad)
jae
dec
inc
mov
(bad)
loopne
jo
nop
pushf
pop
push
adc
jle
mov
inc
jae
ror
mov
movs
bound
mov
jae
movs
pop
int
js
inc
shl
jae
enter
dec
or
mov
lahf
mov
cmps
loopne
mov
sbb
inc
call
imul
jo
in
sbb
cli
sub
aam
mov
(bad)
pop
js
loope
mov
cmp
mov
rcr
out
fstp
ins
inc
sbb
pop
(bad)
push
xchg
(bad)
cld
add
xchg
jecxz
mov
add
clts
aaa
xor
mov
sahf
das
mov
ja
push
dec
shl
xor
popa
in
mov
shl
imul
push
mov
in
test
(bad)
fimul
push
or
ja
lods
cmp
aam
inc
xchg
fcmovnu
pop
(bad)
imul
imul
add
loopne
xchg
adc
mov
pop
clc
mov
jno
pop
dec
int3
test
jae
ds
inc
add
cli
out
and
imul
mov
push
dec
jg
pop
xchg
sahf
(bad)
sti
inc
or
inc
(bad)
mov
jecxz
pop
js
jecxz
stos
daa
xchg
loop
push
(bad)
aaa
pop
sbb
call
enter
adc
mul
cmp
loop
or
shl
(bad)
aam
loope
dec
push
pushf
sti
(bad)
test
lahf
sbb
fimul
or
sub
ror
fcmovb
arpl
jmp
pushf
sahf
ss
test
outs
inc
xlat
mov
adc
sahf
mov
push
jbe
sar
test
int3
xor
add
daa
mov
iret
or
aam
adc
jno
push
jl
mov
add
sahf
and
je
ficomp
leave
or
sbb
inc
in
add
fadd
(bad)
dec
pop
and
(bad)
jp
test
mov
and
jne
hlt
imul
mov
movs
(bad)
les
and
xchg
jne
(bad)
bound
(bad)
jp
test
sbb
in
stc
das
ror
sbb
push
xchg
mov
sub
adc
in
xor
test
dec
sub
cmp
xchg
clc
jno
das
in
scas
test
pop
jg
mov
outs
inc
mov
xchg
inc
movs
adc
int3
adc
jge
inc
jp
(bad)
out
push
lahf
stos
adc
imul
lea
push
or
push
pusha
mov
inc
push
or
push
pusha
mov
inc
push
or
push
pusha
mov
inc
push
or
adc
lods
imul
retf
push
fisttp
push
(bad)
xor
imul
shr
mov
xchg
cmovle
movs
mov
push
push
dec
adc
jns
sub
mov
jmp
inc
jb
dec
or
and
test
push
mov
pop
jnp
pop
ja
rol
(bad)
cmps
je
push
retf
arpl
mov
shr
int
xchg
iret
pop
out
ja
sbb
scas
cli
mov
scas
fisub
cs
mov
call
mov
inc
fucomp
arpl
inc
stos
enter
push
ds
fbstp
std
xor
push
cmp
mov
jmp
pop
pop
dec
cmp
pusha
imul
popf
push
loop
pop
pop
mov
mov
sub
adc
add
mov
mov
out
pop
aaa
inc
cmp
add
xchg
jns
movs
jmp
push
pop
lahf
xor
shl
pop
push
xor
sub
mov
xchg
adc
imul
rcr
addr16
sti
jle
add
sbb
out
cli
adc
add
add
mov
iret
mov
lahf
mov
fiadd
pop
aas
push
push
rcr
pop
and
adc
add
mov
inc
xchg
div
push
nop
(bad)
sahf
in
in
arpl
push
pop
cmp
test
loop
and
mov
and
stos
jp
sbb
add
xor
pop
push
pop
daa
retf
and
fwait
dec
aam
lods
arpl
pop
inc
sub
ins
xor
nop
inc
cli
adc
in
jg
jl
clc
dec
sti
push
push
js
ret
xor
xchg
pop
ret
fisub
jne
and
icebp
xor
sbb
pushf
add
cmp
dec
push
popa
jg
adc
hlt
pop
cld
add
add
xlat
dec
jno
ins
mov
jae
or
jmp
push
jg
adc
hlt
pop
cld
add
add
sar
add
mov
paddd
cmps
inc
pop
push
cmc
cld
aaa
repz
cld
test
push
mov
std
cmps
mov
fld
pop
icebp
cmp
and
push
cmp
les
mov
pop
xlat
in
sub
push
inc
jecxz
mov
shl
pop
pop
push
jmp
test
mov
adc
aam
mov
add
mov
cli
cs
inc
shl
add
call
sar
call
add
sar
add
cmp
(bad)
fdivrp
div
imul
xchg
icebp
add
or
out
pop
adc
test
fwait
clc
cmc
sbb
xchg
push
cmp
sub
push
mov
xor
inc
gs
add
clc
mov
sbb
mov
imul
inc
adc
xlat
es
add
or
xchg
nop
xor
loopne
lock
daa
std
pop
aas
add
add
jp
icebp
je
ret
adc
hlt
pop
cld
add
add
xlat
cmp
hlt
push
jmp
std
mov
(bad)
jle
(bad)
fsin
or
jle
clc
xchg
loope
les
mov
mov
daa
jbe
mov
dec
and
ins
jbe
inc
icebp
mov
repnz
push
(bad)
out
add
sahf
adc
out
and
test
cs
pop
sub
inc
mov
xchg
cmp
mov
loope
xor
cli
cs
inc
shl
add
call
sar
call
add
sar
add
inc
push
sti
fistp
clc
scas
pop
dec
jle
mov
pop
daa
sar
retf
jecxz
sti
sub
test
mov
lods
add
sbb
mov
aas
cmp
pop
out
(bad)
das
mov
(bad)
repz
addr16
lahf
sbb
out
lds
cmp
mov
paddd
cmps
inc
pop
inc
cld
xor
mov
add
sar
push
lahf
cld
pop
imul
inc
and
retf
aad
lock
daa
std
pop
aas
add
add
jp
icebp
je
ret
adc
hlt
pop
cld
add
add
xlat
outs
xlat
lock
clc
aas
repnz
lods
push
mov
jl
pop
std
sti
or
dec
jge
push
clc
cmp
test
pop
retf
adc
aam
jmp
loope
xor
cli
cs
inc
shl
add
jmp
out
pop
clc
jnp
and
les
psllw
(bad)
jle
jmp
lods
cmps
mov
cmps
sub
data16
sti
sbb
or
or
sbb
clc
mov
daa
ja
ins
lahf
pop
cmps
mov
dec
adc
mov
mov
fwait
enter
jmp
push
xor
aam
and
sbb
stc
sbb
test
xchg
xchg
mov
shl
and
mov
addr16
outs
idiv
retf
pop
in
inc
xchg
pusha
fidivr
out
xor
mov
xor
push
inc
loop
add
fimul
xchg
xor
rcr
mov
sahf
push
xor
fcomp
out
repz
lock
loop
test
cs
sub
iret
loopne
push
push
les
in
scas
xlat
ja
cmps
mov
sub
(bad)
xchg
sub
fist
aas
call
sbb
(bad)
sbb
cmp
inc
icebp
stos
jmp
lahf
jmp
or
sti
loope
rcr
js
cmp
loop
movs
push
xchg
cld
gs
adc
(bad)
push
fstp
pop
int3
out
xor
jmp
dec
add
or
jnp
or
loop
mov
retf
cmp
jmp
dec
dec
nop
jl
leave
repnz
fidiv
sti
int3
pop
fwait
mov
repz
cld
cmp
jl
inc
xor
add
push
jg
mov
ja
aas
clc
xor
xor
jge
into
jae
lods
mov
test
push
jecxz
(bad)
sbb
jmp
dec
cmps
jle
jle
fild
inc
jns
bound
mov
jl
cli
lods
mov
mov
xchg
imul
jae
cmp
dec
lds
pop
cld
daa
in
out
call
fwait
loopne
sbb
cmc
push
ror
into
push
movd
sar
(bad)
adc
call
sbb
(bad)
sbb
cmp
inc
icebp
stos
(bad)
xchg
aam
repz
cld
add
cmc
call
jl
std
movs
ds
ret
lahf
adc
jecxz
movs
aad
sub
shr
es
popa
cmp
xchg
out
add
sbb
mov
in
mov
inc
les
or
lock
mov
inc
mov
pushf
xlat
(bad)
inc
ret
mov
ja
aas
clc
xor
xor
loop
std
pop
jl
inc
xor
add
push
xchg
sub
jno
(bad)
cld
mov
stos
scas
enter
and
int
add
in
push
lock
loop
test
cmp
jno
hlt
push
adc
sbb
les
inc
mov
ins
fs
xchg
mov
mov
ins
js
les
mov
js
push
mov
lahf
loope
mov
cmp
mov
fs
and
or
xor
add
out
xchg
inc
inc
fisttp
inc
loopne
inc
clc
aad
lock
outs
mov
hlt
sbb
(bad)
add
adc
mov
(bad)
sti
daa
fild
cwde
cmps
addr16
out
jp
les
fild
sbb
arpl
lahf
sbb
adc
popa
jl
je
dec
dec
sub
dec
and
stos
retf
test
mov
mov
fsincos
dec
icebp
in
test
fcmovb
(bad)
(bad)
push
xchg
(bad)
sub
xor
push
dec
add
repnz
cld
cmp
jl
inc
xor
add
push
jg
mov
ja
aas
clc
xor
xor
dec
jnp
pop
pop
jge
sahf
sbb
fstp
hlt
dec
cmp
xchg
pop
mov
outs
xor
add
push
pop
sbb
and
mov
call
leave
stc
nop
add
xchg
sbb
pop
mov
lods
inc
cld
adc
lahf
mov
xlat
mov
push
jge
jmp
mov
lea
push
mov
inc
sti
(bad)
and
js
cwde
mov
aas
call
sbb
(bad)
sbb
cmp
inc
icebp
stos
jne
in
and
xchg
ror
or
out
clc
lahf
cs
pop
xor
aaa
enter
movs
out
scas
stos
aas
loope
fist
aas
call
sbb
(bad)
sbb
cmp
inc
icebp
stos
idiv
mov
mov
cli
mov
in
retf
aad
lock
outs
mov
hlt
sbb
(bad)
add
lock
scas
adc
mov
ficomp
shl
stc
scas
das
dec
sti
dec
retf
stos
sub
aas
push
adc
jg
cld
call
cmps
inc
ret
imul
push
jecxz
repz
ins
mov
sub
retf
nop
imul
cli
das
test
and
addr16
xor
xchg
ret
ins
call
in
sbb
out
add
fist
out
stc
das
shr
xchg
mov
inc
dec
inc
outs
inc
enter
mov
inc
add
sub
or
pop
mov
push
push
mov
pop
and
adc
add
mov
xor
add
sbb
ret
imul
cmps
mov
fisttp
push
fs
inc
cmc
lods
pop
cwde
fs
jge
jl
mov
push
into
push
cmc
push
inc
xlat
in
jne
jmp
cmp
adc
push
jb
stos
xlat
jg
mov
loop
push
cdq
bound
ds
idiv
(bad)
ins
cmp
outs
sti
sbb
dec
movs
fisub
mov
push
fidivr
stc
scas
imul
pop
ins
imul
push
pop
pop
inc
gs
test
(bad)
mov
loopne
and
(bad)
movs
push
dec
dec
ins
mov
stc
xlat
and
mov
mov
jbe
jg
in
je
gs
adc
outs
and
push
stc
mov
imul
lods
cs
add
xchg
retf
ret
adc
sub
and
(bad)
(bad)
in
mov
int3
mov
push
sti
push
mov
int3
cmps
scas
test
iret
adc
mov
xor
pop
push
(bad)
dec
(bad)
sub
xor
(bad)
jno
ror
scas
push
jmp
pop
dec
pop
out
mov
dec
inc
mov
scas
push
inc
cmp
mov
gs
mov
adc
cli
psadbw
lock
std
mov
cmc
loopne
hlt
pop
in
ud0
daa
popa
loopne
sti
jge
add
sub
fwait
adc
or
aas
enter
in
push
repz
adc
sub
add
out
inc
add
xor
popf
inc
add
xor
popf
inc
add
xor
popf
inc
add
xor
popf
inc
add
xor
popf
inc
add
xor
popf
inc
add
xor
cli
sub
xchg
push
call
and
inc
or
aaa
mov
(bad)
out
inc
add
idiv
icebp
cld
call
popf
sub
sti
(bad)
repz
je
push
add
out
pop
into
(bad)
in
std
jecxz
rcl
inc
or
aaa
mov
(bad)
out
inc
add
idiv
icebp
cld
call
popf
sub
sti
(bad)
repz
je
push
add
out
pop
into
(bad)
in
std
jecxz
rcl
inc
or
inc
int3
jp
jg
jne
add
sub
push
add
cmps
rol
mov
mov
add
sub
push
add
cmps
rol
mov
mov
add
sub
push
add
cmps
shl
mov
xlat
push
or
es
push
fisttp
lahf
sub
ds
mov
xchg
xchg
push
push
dec
push
xlat
mov
dec
outs
adc
ja
xchg
int3
pop
mov
mov
jnp
aas
sub
dec
dec
push
mov
xchg
cwde
mov
add
ins
dec
hlt
mov
ficomp
ins
sub
jecxz
mov
repz
in
add
or
pop
pushf
push
mov
(bad)
pop
inc
cmp
out
sbb
aam
inc
mov
imul
jle
xor
int3
sahf
mov
push
add
addr16
mov
cmp
pop
loope
rcl
out
jb
cmp
inc
test
mov
add
sti
mov
jnp
aaa
outs
jne
push
sbb
cmc
dec
push
jnp
test
lods
dec
or
sbb
iret
je
dec
mov
mov
jo
in
add
push
xchg
mov
dec
cmp
pop
shl
fild
shl
pushf
jae
lods
aad
adc
arpl
idiv
push
in
sub
movs
stos
int
jecxz
cmps
rcr
and
cli
or
pop
inc
xchg
mov
aas
std
mov
cmc
loopne
hlt
paddsb
inc
daa
pop
loopne
sti
jge
add
sub
fwait
adc
or
aas
enter
and
pop
mov
mov
ret
and
pop
inc
(bad)
push
sub
mov
jmp
jo
mov
adc
pushf
xchg
fadd
imul
mov
sub
movs
hlt
dec
cmps
inc
out
shl
loop
jnp
adc
mov
cmps
mov
cld
pop
loop
cmp
mov
inc
cld
and
paddsb
add
jne
bound
dec
icebp
repz
sbb
add
sub
(bad)
pop
cld
ss
ret
iret
cli
aaa
pop
push
inc
in
(bad)
xor
imul
(bad)
mov
fild
xchg
sbb
xchg
mov
xor
jmp
(bad)
sahf
xor
pop
push
or
(bad)
xor
fucom
stc
(bad)
mov
xor
popf
dec
ss
cmovnp
xlat
mov
ret
aad
and
xlat
cld
ss
ret
iret
cli
aaa
pop
push
inc
in
(bad)
xor
ss
ret
iret
cli
aaa
pop
push
inc
in
(bad)
xor
mov
adc
sahf
adc
in
xchg
xchg
adc
fimul
xchg
or
mov
std
shl
add
fcmovb
imul
clc
inc
icebp
xchg
pop
and
cmp
sub
adc
and
sbb
out
jmp
cmp
fisubr
lods
ret
(bad)
mov
aas
lock
jl
inc
nop
inc
clc
lds
lock
jl
inc
nop
inc
clc
lds
(bad)
inc
cld
inc
clc
outs
movs
cmps
cmps
loop
or
call
sar
sbb
dec
pusha
jno
int
sub
jno
outs
mov
dec
inc
xlat
cld
aaa
cmps
js
pop
adc
jne
and
retf
sbb
pushf
mov
arpl
cmp
jmp
stc
cdq
sub
inc
clc
ins
dec
xchg
inc
enter
(bad)
clc
ins
dec
xchg
inc
enter
mov
loop
mov
push
mov
and
pop
xor
test
leave
shl
pop
push
add
pop
jmp
popf
lods
not
mov
jge
loop
je
and
sbb
cmps
nop
inc
mov
dec
loope
(bad)
fidivr
inc
scas
pop
cmp
dec
cld
(bad)
cmps
inc
loope
ds
jg
mov
and
add
mov
loope
ds
jg
mov
and
add
mov
out
mov
cld
cmp
adc
xchg
mov
je
inc
jne
ja
xor
mov
ja
and
hlt
clc
jg
pop
jp
mov
outs
test
inc
popa
xor
ffree
cmps
jae
cmc
out
scas
pop
and
dec
push
ins
in
out
jne
(bad)
imul
dec
xchg
inc
enter
(bad)
clc
ins
dec
xchg
inc
enter
mov
ds
inc
rcr
push
lock
push
in
push
inc
jl
and
loope
pop
sahf
push
clc
push
jecxz
adc
xchg
loope
push
inc
pop
mov
scas
in
and
push
mov
jae
pop
lahf
aad
jp
outs
out
cmp
xlat
ror
leave
jg
hlt
pop
cld
ss
ret
iret
cli
aaa
pop
push
inc
in
(bad)
xor
ss
ret
iret
cli
aaa
pop
push
inc
in
(bad)
xor
test
add
lea
das
cmp
lods
pop
imul
pop
mov
dec
pushf
ss
dec
add
sbb
cmp
sub
push
adc
(bad)
xchg
test
push
into
lock
or
ja
push
cmp
push
inc
std
cmps
(bad)
popa
in
mov
rcr
jnp
cld
ss
ret
mov
div
jbe
jecxz
inc
jecxz
fisttp
icebp
iret
loope
scas
icebp
sub
jle
(bad)
adc
mov
int3
lea
stc
outs
or
call
sub
fwait
out
sbb
xor
pop
ret
imul
hlt
pop
mov
push
and
pop
outs
sub
fdivr
loop
mov
imul
int
mov
daa
out
mov
std
dec
lods
gs
cmovp
pop
fisttp
pop
xchg
dec
lods
out
addr16
scas
xchg
repz
adc
ret
pop
lods
and
mov
or
sub
adc
pop
or
mov
adc
ret
mov
add
mov
or
sub
adc
pop
or
mov
adc
ret
mov
add
mov
or
sub
sbb
inc
add
cld
out
fs
sub
push
jmp
push
mov
mov
push
add
hlt
mov
mov
pop
xor
idiv
ret
daa
les
addr16
je
sbb
jmp
test
enter
jo
xchg
aas
ret
pop
push
iret
scas
fdivr
mov
arpl
aaa
movs
jp
(bad)
pop
xchg
ret
in
mov
scas
lea
sar
sahf
inc
jbe
arpl
les
xchg
aam
lahf
mov
jnp
aad
xor
push
mov
xchg
ins
or
adc
rcr
aad
loopne
cmp
jecxz
div
int3
icebp
test
jo
xchg
ret
jns
lea
xor
xchg
fidiv
pop
mov
jl
repnz
fwait
sbb
inc
dec
and
dec
cmp
push
push
aad
in
sub
cmps
out
sbb
or
cdq
ret
and
dec
test
jecxz
pop
aaa
add
(bad)
imul
popf
in
jne
sbb
ins
pushf
(bad)
mov
stos
xchg
sbb
int3
inc
cmps
push
jge
sbb
adc
pop
fdivr
out
xor
adc
inc
je
mov
cli
add
or
add
mov
cmc
repz
jge
sti
add
clc
and
fistp
mov
(bad)
inc
add
repnz
pop
push
jl
add
mov
xor
inc
mov
gs
inc
add
inc
xchg
mov
out
mov
inc
add
inc
xchg
lea
out
mov
std
sbb
stc
sahf
dec
mov
inc
shr
es
call
jl
daa
fild
scas
mov
push
pop
mov
and
pop
sti
jns
int
fsub
repnz
rcr
das
test
addr16
fidivr
dec
mov
fst
(bad)
loopne
(bad)
jbe
loop
adc
mov
hlt
retf
lods
dec
dec
aam
jge
repz
inc
jmp
ds
addr16
(bad)
push
icebp
enter
(bad)
adc
adc
lea
dec
jmp
enter
repnz
hlt
scas
call
push
fsubp
push
sbb
imul
add
push
aam
add
mov
lahf
xor
out
dec
pop
jmp
je
jg
std
call
scas
outs
sub
jns
mov
(bad)
sub
inc
or
pushf
adc
cmp
fwait
addr16
sti
or
imul
inc
xchg
sar
inc
push
mov
out
outs
push
mov
or
leave
adc
arpl
jnp
mov
ds
ss
stc
xchg
test
sar
cld
pop
mov
dec
push
icebp
daa
mov
or
loope
shr
mov
push
jnp
push
xor
(bad)
test
jg
imul
not
mov
dec
(bad)
(bad)
or
pop
(bad)
push
aas
test
out
clc
imul
(bad)
call
inc
std
mov
pop
inc
enter
hlt
xchg
fidivr
inc
add
add
mov
aaa
(bad)
das
sar
push
icebp
jge
scas
mov
cmp
imul
enter
test
inc
in
pop
addr16
fstp
das
sbb
sbb
mov
test
movs
dec
jecxz
jge
scas
(bad)
mov
push
movs
cmps
jmp
mov
jg
xchg
jns
mov
(bad)
adc
js
xchg
mov
add
adc
xchg
jecxz
cmps
rol
imul
push
imul
mov
cmp
mov
aas
ret
or
shl
mov
shl
xor
icebp
add
cmp
xor
dec
std
mov
ins
dec
dec
xchg
ficom
lock
ins
jne
mov
pop
xchg
outs
ss
bound
in
or
mov
xor
mov
ficom
jg
jns
fwait
mov
aam
fcmovnu
push
shr
xchg
and
mov
jno
mov
dec
xchg
cmps
and
js
ror
sar
xchg
mov
ret
in
adc
inc
push
inc
movs
push
sti
movs
out
div
xor
sti
mov
popa
lock
jecxz
mov
cmp
xor
adc
test
aas
lea
xchg
call
lahf
dec
mov
icebp
jecxz
pop
repnz
std
inc
jmp
push
popf
scas
les
shl
in
push
imul
add
out
cdq
inc
mov
xor
pop
nop
mov
lahf
aas
jg
push
jg
cmp
out
(bad)
mov
imul
add
lahf
fcomip
pop
outs
mov
add
sub
pusha
cmp
jnp
std
call
lahf
fcomip
pop
outs
mov
add
enter
add
jns
aas
fistp
stc
sar
jge
mov
std
idiv
rcl
jb
mov
mov
add
sub
push
add
cmps
rol
mov
mov
add
sub
push
add
cmps
rol
mov
mov
add
sub
push
add
cmps
rol
mov
mov
add
sub
push
add
cmps
rol
mov
mov
add
sub
push
add
cmps
rol
stos
call
jne
xor
and
mov
push
sub
inc
loope
dec
ja
aas
sti
inc
ja
in
or
mov
pop
call
dec
mov
dec
dec
clc
pop
loope
lock
xchg
scas
movs
inc
and
jae
rol
push
and
mov
out
ins
popaw
mov
mov
outs
mov
push
cmp
mov
imul
loop
pop
rcl
ret
xor
cmps
mov
pop
pop
mov
and
xor
add
xor
call
sahf
sbb
sbb
(bad)
jo
ss
mov
mov
sbb
int3
fs
add
(bad)
cmps
imul
dec
mov
cmps
stc
inc
or
cmps
(bad)
sub
sbb
sub
fld
cmp
add
test
xor
dec
mov
mov
clc
stos
repnz
xor
cmps
(bad)
dec
test
mov
mov
out
(bad)
pop
ins
mov
xchg
ja
in
enter
push
test
mov
xor
xor
pushf
inc
jno
test
pop
imul
jnp
leave
loopne
jnp
push
sar
(bad)
mov
xlat
sahf
inc
loope
dec
sub
popf
push
jne
fwait
mov
inc
or
lods
imul
call
inc
sub
clc
shr
sub
pop
pop
cld
ret
jge
push
dec
mov
jle
jg
jne
or
add
mov
test
inc
std
mov
cmc
int
inc
sar
and
push
loopne
push
inc
jbe
add
jp
in
mov
aas
(bad)
aas
or
xchg
cld
mov
(bad)
cmp
into
jge
jbe
clc
or
sub
loop
xchg
inc
aam
imul
mov
jl
jns
pop
imul
in
fsubr
inc
sbb
mov
hlt
and
or
cmp
icebp
aas
loope
or
cmps
push
jmp
test
mov
pop
loopne
add
lds
loopne
inc
loop
sbb
(bad)
sub
in
jg
cdq
dec
popf
sbb
test
daa
retf
hlt
outs
(bad)
lahf
sbb
or
sub
and
sub
dec
and
sbb
mov
push
cmp
addr16
jns
pop
clc
add
mov
push
jg
sahf
cmp
add
stc
hlt
mov
pop
(bad)
xchg
repz
xchg
(bad)
cmp
into
in
and
dec
cmc
xor
dec
call
pop
inc
nop
mov
add
paddb
aas
cld
pop
pop
lock
iret
mov
repz
inc
inc
rol
add
shr
icebp
pop
repz
test
sbb
(bad)
out
clc
daa
retf
sar
add
mov
mov
dec
cli
mov
addr16
jns
pop
clc
add
mov
push
jg
sahf
cmp
add
stc
hlt
mov
cmp
ja
adc
or
call
xchg
sar
add
mov
addr16
jns
pop
clc
add
mov
push
jg
sahf
cmp
add
stc
hlt
mov
cmp
ja
adc
imul
sub
js
lea
shl
lods
inc
push
inc
jb
add
inc
ret
(bad)
ds
add
cmp
ud0
pop
inc
cld
cmp
loop
cld
repz
lock
add
je
jl
cld
cli
pop
clc
pop
inc
push
(bad)
xchg
repz
xchg
and
retf
mov
mov
loope
lahf
push
jg
sahf
cmp
add
icebp
addr16
jns
pop
clc
add
mov
jge
cld
or
add
(bad)
inc
add
inc
movs
mov
mov
sbb
retf
div
popf
out
sar
cmp
mov
test
pop
push
fcmovu
sub
cmps
fwait
pop
mov
inc
pshufw
xor
add
inc
ds
out
push
inc
mov
mov
push
dec
test
add
test
cmp
pop
scas
enter
adc
or
into
sub
jmp
(bad)
pop
and
sbb
pop
outs
rcr
test
and
push
inc
adc
push
inc
adc
push
inc
adc
push
inc
adc
push
inc
adc
push
inc
adc
push
inc
adc
push
inc
adc
push
inc
adc
push
inc
adc
push
inc
adc
push
inc
adc
push
inc
adc
push
inc
adc
push
inc
adc
push
inc
adc
push
inc
adc
push
inc
adc
push
inc
adc
push
inc
adc
adc
out
call
and
or
cmp
jns
xor
mov
adc
ins
jle
ror
dec
std
outs
or
push
pushf
call
jno
jbe
clc
adc
and
sbb
stos
movs
stos
lds
mov
lea
adc
mov
test
dec
loope
hlt
imul
nop
mov
test
mov
fs
retf
pop
jmp
lgs
clc
cmp
push
test
iret
repnz
push
sub
jae
js
fnstsw
mov
fcmovnu
cwde
bound
push
or
jge
xchg
xlat
jle
fisubr
adc
test
pop
xlat
loope
adc
push
ins
mov
inc
jmp
dec
cmp
adc
cmps
movs
aaa
mov
out
push
mov
outs
(bad)
retf
jno
js
lods
push
sbb
aad
(bad)
mov
sub
(bad)
dec
jmp
mov
push
outs
mov
pop
and
sbb
int3
data16
repz
imul
ins
cmp
jne
bnd
mov
mov
inc
jge
lock
push
add
sti
pop
inc
leave
aad
daa
(bad)
fistp
mov
sbb
out
fdivr
dec
sar
sti
inc
movs
push
xlat
ss
fisub
inc
adc
test
dec
sub
push
sbb
ins
sbb
lea
add
inc
fiadd
jecxz
cmps
ins
mov
push
mov
mov
mov
fild
ins
adc
mov
mov
fidiv
rcl
sbb
ins
sbb
lea
add
inc
fiadd
jecxz
cmps
ins
mov
push
mov
mov
mov
fild
ins
adc
mov
mov
fidiv
rcl
sbb
ins
sbb
lea
add
inc
fiadd
jecxz
cmps
ins
mov
push
mov
mov
mov
fild
ins
adc
mov
mov
fidiv
rcl
sbb
ins
sbb
lea
add
inc
fiadd
jecxz
cmps
ins
mov
push
mov
mov
mov
fild
ins
adc
mov
mov
iret
loope
hlt
sub
xor
adc
lea
cmp
scas
mov
lahf
ret
int
loop
mov
pop
sub
mov
mov
dec
lahf
ret
push
sbb
cs
dec
out
pusha
loop
cwde
cmc
cmp
mov
adc
retf
and
es
test
xor
mov
sbb
sub
test
cmp
or
(bad)
stos
mov
test
sbb
(bad)
daa
dec
sti
dec
cmp
add
(bad)
icebp
adc
clc
jge
out
cmps
jnp
loope
ins
or
cmp
and
pop
add
inc
jmp
std
clc
and
lods
cs
mov
sub
push
mov
sub
cwde
mov
aad
jge
inc
js
pop
ret
aam
ucomiss
or
shl
(bad)
sbb
cmps
mov
or
adc
mov
push
mov
cmp
pop
pop
mov
std
lds
pop
scas
cmps
lds
movs
jb
bound
adc
mov
mov
mov
mov
pop
mov
cld
xor
xchg
cmps
xchg
dec
push
aas
cwde
fs
jno
rcr
pop
cmp
in
pushf
movs
shl
scas
mov
outs
outs
mov
cmp
adc
scas
cmp
xchg
mov
pusha
in
in
int
cld
dec
lock
fidiv
mov
cli
pusha
jecxz
scas
and
xchg
shl
(bad)
aad
adc
shld
lds
leave
mov
jae
shl
jge
aas
je
popa
aad
test
fistp
les
or
daa
mov
aad
inc
push
mov
ja
scas
mov
jbe
xor
mov
sbb
clc
sub
(bad)
mov
jecxz
(bad)
(bad)
es
fistp
psubw
scas
add
add
out
(bad)
xchg
dec
pop
or
sbb
stos
jl
inc
outs
mov
loop
fucomp
jg
inc
pop
out
arpl
pop
mov
or
mov
or
mov
or
mov
or
mov
or
mov
or
mov
or
mov
or
mov
or
mov
or
mov
or
mov
or
mov
or
mov
or
mov
or
mov
or
iret
xor
xchg
ja
sbb
ja
rcl
adc
neg
jbe
sbb
push
inc
stos
int3
inc
iret
(bad)
mov
cmp
fist
jl
outs
add
arpl
in
dec
out
xor
loopne
sub
sti
ret
int3
imul
jne
das
retf
nop
jge
mov
mov
js
push
mov
sub
add
lods
cli
xlat
(bad)
out
pushf
in
fdivr
lods
mov
cmps
pop
imul
mov
or
jbe
je
cmps
ret
ficomp
in
jmp
jle
mov
sub
cmp
nop
sub
xlat
push
inc
mov
ret
or
addr16
jge
ins
inc
inc
cmps
mov
xchg
xor
add
repnz
pop
(bad)
jecxz
mov
iret
imul
xor
push
ds
mov
push
cs
(bad)
mov
or
xor
xchg
fsubr
cli
frstpm(287
mov
(bad)
pop
jmp
fwait
cmp
cld
mov
pop
(bad)
mov
pop
bound
jnp
xchg
sub
sbb
jmp
lahf
icebp
cmp
arpl
inc
jg
popa
or
push
clc
mov
imul
imul
(bad)
jns
stos
in
aam
push
mov
rcl
shl
mov
lods
scas
cmc
pop
jnp
mov
mov
inc
pushf
or
or
daa
call
loope
lock
mov
sub
sti
loope
mov
add
clc
loopne
neg
das
cmc
popf
inc
out
dec
dec
and
mov
adc
nop
sbb
out
in
sbb
adc
add
pop
xlat
xchg
dec
push
adc
aad
sti
fistp
push
(bad)
push
ja
scas
jmp
fstp
stc
dec
movs
pop
mov
jnp
test
push
mov
xchg
xchg
mov
xor
ret
cmps
add
xchg
inc
arpl
mov
sub
pushf
cmp
lods
adc
mov
(bad)
push
mov
fld
retf
and
mov
pop
fcmovnbe
push
jnp
or
push
ret
jle
jg
jne
or
add
mov
adc
add
mov
cmc
cmps
das
std
fisub
sar
sub
push
out
xor
jae
push
push
rol
push
push
rol
push
push
rol
push
push
rol
push
push
rol
push
push
rol
push
push
rol
push
push
rol
push
push
rol
push
push
rol
push
push
rol
push
push
rol
push
push
rol
push
push
rol
push
push
rol
push
push
rol
push
push
rol
push
push
rol
push
push
rol
push
push
rol
push
push
rol
push
push
rol
push
push
rol
push
push
rol
push
push
rol
push
push
rol
push
push
rol
push
push
rol
push
push
rol
push
push
rol
call
dec
lods
xor
out
mov
xchg
jnp
cli
test
(bad)
add
ret
and
push
mov
mov
jnp
jbe
push
std
in
ds
shr
daa
aad
cmp
mov
sbb
push
repnz
cdq
xchg
inc
data16
outs
push
xor
out
xor
jl
jnp
scas
fwait
cmps
or
leave
mov
jns
cld
mov
test
imul
dec
sub
test
and
add
add
aad
cmps
imul
xor
pop
(bad)
xchg
inc
fnstcw
cmp
mov
in
sar
(bad)
dec
jecxz
adc
pop
sbb
stc
push
xchg
pop
sbb
cmp
and
xchg
mov
into
(bad)
pop
(bad)
sbb
loope
adc
(bad)
sbb
and
or
clc
enter
pop
xchg
lock
mov
loopne
xor
daa
mov
cmp
sti
or
mov
jno
fild
div
adc
jb
mov
into
mov
jno
mov
mov
xchg
jns
pop
add
cmp
mov
cmovb
iret
xchg
pushf
sub
lahf
in
imul
loop
fucom
pop
cmp
cmp
and
sub
ss
fidivr
test
mov
or
fst
fimul
repz
cmp
jl
mov
sahf
daa
pop
test
pop
bound
or
xchg
mov
popa
mov
lea
sbb
outs
test
icebp
sub
sbb
daa
shr
ja
sub
(bad)
fidivr
push
into
sti
jp
fidiv
repz
je
aas
test
sub
hlt
call
aas
cdq
adc
out
jmp
jle
std
cmp
jbe
ror
pop
mov
cld
dec
sub
inc
(bad)
sbb
int3
std
push
add
cmp
ror
ja
pop
sub
jb
push
adc
lods
lods
adc
retf
sti
lods
cmp
mov
pop
popf
outs
cs
inc
mov
dec
cmp
mov
lahf
jbe
icebp
ins
(bad)
xchg
daa
out
mov
push
dec
mov
test
scas
xchg
idiv
or
sar
sub
fistp
mov
call
xchg
rcr
inc
movs
push
xlat
shl
inc
fucomp
jg
inc
sar
xor
push
out
sub
in
inc
mov
gs
sub
xchg
push
call
mov
mov
gs
sub
xchg
push
call
mov
mov
gs
sub
xchg
push
call
mov
mov
gs
sub
xchg
push
call
mov
mov
gs
sub
xchg
push
call
mov
mov
gs
sub
xchg
push
call
mov
mov
gs
sub
xchg
push
call
mov
mov
gs
aad
and
jle
(bad)
xchg
jge
pop
scas
pop
(bad)
pop
(bad)
jnp
imul
nop
loopne
aas
mov
sbb
in
rcl
cmc
push
dec
or
mov
cmp
ss
dec
out
cdq
push
ss
sbb
mov
movs
jl
jmp
ror
repz
push
(bad)
test
xor
pop
push
lods
test
(bad)
sub
jns
lock
stos
xor
mul
test
jo
not
jnp
cmp
mov
xchg
js
outs
sub
xchg
bound
sub
loopne
pop
cmp
fisub
lahf
ret
pop
adc
jmp
and
test
mov
shl
mov
or
and
cmp
mov
adc
mov
xchg
aas
sub
cmp
sub
mov
inc
xchg
imul
cli
(bad)
lods
les
pop
mov
pushf
add
repnz
xchg
pop
mov
call
xchg
sbb
movs
xchg
add
gs
loope
pop
inc
lock
neg
xor
adc
jmp
imul
ror
lods
push
icebp
xor
jp
xchg
retf
fisubr
(bad)
fucomp
pop
cwde
addr16
repz
sbb
cmp
cwde
xchg
inc
cmps
xchg
in
mov
sbb
pop
rcl
in
into
push
scas
movs
jb
fiadd
push
cdq
loop
jg
clc
xchg
jnp
push
imul
movs
mov
shr
test
mov
into
lahf
and
mov
cdq
pop
mov
je
ds
aas
pop
lock
ins
out
sub
imul
sub
mov
int
push
aam
and
jne
or
jo
enter
stos
test
mov
adc
cs
pop
dec
xchg
mov
mov
in
xor
(bad)
aaa
sub
fisttp
imul
mov
push
(bad)
xor
xchg
push
fsub
cs
cmp
rcl
mov
fs
mov
imul
cmc
imul
push
les
int
mov
pusha
add
nop
inc
jp
lods
aaa
mov
push
pop
in
(bad)
jb
and
xchg
mov
xor
jmp
cmp
sbb
cmp
jae
out
popf
cmp
(bad)
mov
cmp
in
mov
enter
cmp
std
push
repnz
push
push
in
call
mov
cld
popf
das
cmp
cmps
scas
or
in
jl
inc
outs
mov
pop
das
std
fisub
pop
pop
clc
shl
pop
cdq
loope
push
(bad)
ins
jb
fild
jbe
shl
mov
mov
mov
mov
imul
outs
fidiv
shl
fnsave
push
add
inc
fisubr
jbe
mov
mov
mov
push
in
mov
push
fidiv
shl
mov
mov
mov
mov
imul
outs
fidiv
shl
fnsave
push
add
inc
fisubr
jbe
mov
mov
mov
push
in
mov
push
fidiv
shl
mov
mov
mov
mov
imul
outs
fidiv
shl
fnsave
push
add
inc
fisubr
jbe
mov
mov
mov
push
in
mov
push
fidiv
shl
mov
mov
mov
mov
imul
outs
fidiv
shl
fnsave
push
add
push
int3
in
test
(bad)
mov
mov
(bad)
fistp
sub
retf
stc
in
cmp
or
jnp
retf
mov
push
pop
and
repnz
aas
and
mov
outs
iret
scas
mov
xor
out
pop
or
ja
imul
dec
xor
pop
and
xchg
jge
pop
mov
loope
and
cs
push
fdecstp
stos
mov
imul
jno
or
inc
pop
pop
(bad)
mov
mov
cmps
pop
call
jnp
jnp
ins
xchg
imul
xchg
rol
mov
fiadd
jmp
pop
xlat
sar
pop
pop
add
mov
ficom
or
add
cmp
add
mov
or
adc
sbb
sub
repz
out
out
mov
imul
and
jbe
inc
test
or
aad
jmp
rcr
jne
xchg
dec
mov
jnp
cs
inc
into
test
mov
loopne
add
dec
mov
mov
lds
in
retf
imul
xchg
cs
daa
lock
loop
xor
or
push
sahf
adc
push
or
ins
in
cmps
and
adc
dec
sar
pop
or
aas
or
sub
mov
cmp
in
ret
mov
cmp
xor
sub
sub
fld
cli
push
int3
push
ds
xchg
mov
sbb
sub
in
adc
jmp
ds
out
cli
aas
les
push
(bad)
retf
pop
mov
cmp
add
lock
push
popf
push
in
adc
mov
xchg
es
mov
dec
xor
sti
push
pop
pop
leave
loope
push
cmp
xchg
pop
movs
fldcw
mov
jp
jle
repz
jle
aad
xor
mov
dec
addr16
sahf
arpl
lods
xchg
in
outs
sub
rcr
and
sar
inc
jne
clc
pop
xchg
xchg
mov
lock
jecxz
out
shl
adc
sub
pushf
test
loopne
js
ss
cmp
xor
mov
retf
sub
std
push
popa
(bad)
imul
cmp
jnp
mov
or
inc
xchg
sub
mov
dec
inc
fldcw
push
adc
jmp
icebp
scas
jle
xchg
push
add
(bad)
xchg
dec
pop
and
inc
(bad)
int
enter
iret
outs
in
jge
test
cmc
iret
in
xor
jecxz
mov
int3
adc
inc
mov
xor
loopne
dec
outs
retf
pop
or
cmp
sub
xchg
xlat
push
sti
iret
or
cmp
xchg
push
call
jge
pop
push
push
dec
mov
hlt
push
pusha
sbb
mov
sub
adc
sub
push
add
mov
pop
push
push
dec
mov
hlt
push
pusha
sbb
mov
sub
adc
sub
push
add
mov
pop
push
push
dec
mov
hlt
push
pusha
sbb
mov
sub
adc
sub
push
add
mov
pop
push
push
dec
mov
hlt
push
pusha
sbb
sbb
inc
sti
stos
or
aam
xlat
dec
sti
cmp
retf
aas
sbb
pop
mov
pusha
out
sbb
movs
jmp
push
pop
dec
sbb
test
rcl
dec
add
xchg
xchg
ficom
std
push
imul
jle
or
jo
pop
or
cmp
cmp
or
xchg
aam
pop
sbb
adc
shl
fisttp
cmp
stos
clc
pop
pop
mov
ins
push
in
jns
cmp
hlt
jecxz
jo
add
iret
mov
pop
mov
cs
movs
mov
inc
jbe
xchg
enter
dec
xchg
push
fs
cli
pop
inc
icebp
dec
mov
enter
pop
(bad)
push
pop
xchg
xor
inc
clc
lea
sar
je
jbe
cmps
cmps
ins
and
and
scas
xchg
scas
cmc
mov
repnz
jns
ins
out
fstp
pop
fisttp
jnp
push
dec
arpl
lahf
pop
ins
outs
movs
mov
cmp
inc
bsf
jae
lods
mov
outs
(bad)
sub
imul
mov
and
(bad)
sbb
sbb
out
dec
xor
pusha
cli
jp
mov
(bad)
xchg
mov
ins
test
push
stos
scas
push
ja
jge
retf
add
(bad)
add
sbb
stos
jmp
sbb
retf
arpl
cmp
repnz
xchg
and
dec
and
fstp
ja
xchg
mov
pop
pop
outs
xor
ja
sbb
gs
stc
mov
cmp
stos
xor
in
jae
inc
mov
jecxz
cmp
jno
call
pop
test
cmp
adc
cld
mov
add
je
sbb
retf
dec
(bad)
outs
ds
pop
inc
and
fs
push
and
add
(bad)
mov
jae
not
mov
mov
or
sbb
dec
js
mov
or
hlt
iret
cld
adc
ret
icebp
cld
inc
in
inc
cli
inc
jno
inc
movs
mov
lea
pushf
outs
and
adc
ret
mov
push
add
adc
inc
sub
mov
inc
adc
pusha
or
mov
adc
add
push
inc
push
add
adc
inc
sub
mov
inc
adc
pusha
or
mov
adc
add
push
inc
push
add
adc
inc
sub
mov
inc
adc
pusha
or
mov
adc
add
push
inc
push
add
adc
inc
add
icebp
pop
in
mov
int
outs
stc
fs
hlt
adc
pop
mov
ds
clc
xlat
iret
out
jno
xchg
jmp
dec
hlt
inc
jno
xchg
inc
out
cmp
dec
push
dec
rol
xchg
jmp
adc
sbb
(bad)
cmps
push
sbb
bound
iret
jecxz
push
pop
cmp
stos
sti
enter
inc
pushf
jp
push
mov
sbb
std
imul
sub
pop
movd
push
xor
push
dec
dec
xor
push
push
fimul
cmps
idiv
stc
imul
or
(bad)
fistp
sbb
cmp
movs
jo
jae
adc
jb
hlt
test
dec
add
xlat
adc
dec
xchg
adc
ds
dec
lea
mov
add
dec
mov
jmp
test
rol
jmp
cmp
sub
push
sub
xor
popf
sbb
mov
or
jg
jecxz
std
add
mov
ja
jmp
cmp
data16
cmp
in
inc
(bad)
cli
add
lahf
ret
sahf
aam
imul
retf
mov
lea
enter
mov
movs
mov
push
jnp
mov
pop
and
in
inc
iret
push
mov
in
cmp
rol
mov
sbb
xchg
ins
mul
add
sahf
aam
imul
mov
lea
enter
mov
movs
mov
push
jnp
mov
pop
and
in
inc
iret
push
mov
in
cmp
rol
mov
sbb
xchg
ins
mul
add
sahf
aam
imul
mov
lea
enter
mov
movs
mov
push
jnp
mov
pop
cmp
xor
jg
clc
shl
push
mov
test
mov
mov
addr16
dec
sub
fs
mov
std
movs
das
mov
mov
xlat
ins
loop
jmp
adc
and
in
in
mov
push
pop
adc
xchg
xchg
inc
int3
aad
jl
clc
lahf
popa
loopne
xlat
xor
adc
jb
jle
icebp
add
shr
repnz
(bad)
inc
xchg
pop
add
xchg
cmp
movs
jmp
mov
cld
cmp
jmp
fst
sti
inc
jmp
add
or
dec
test
sub
cmp
hlt
and
lods
sbb
movs
movs
or
mov
push
jnp
in
test
adc
inc
and
jmp
das
clc
inc
push
dec
jge
ffreep
or
int
cmp
cmp
or
das
cmp
icebp
push
in
lahf
jns
js
not
xor
sub
mov
pop
pop
fstp
push
fadd
rcl
js
les
icebp
xchg
mov
add
pop
xchg
or
outs
pop
pop
test
or
int
test
pusha
sbb
rcl
sbb
mov
xor
mov
lock
push
push
(bad)
aam
xlat
in
jb
add
ins
jmp
rol
xchg
leave
jecxz
mov
sti
cmp
push
neg
ja
stc
cld
xchg
(bad)
int
or
retf
loop
sbb
lods
std
mov
pop
or
test
dec
add
into
dec
jns
sbb
mov
add
clc
lahf
les
mov
and
push
xchg
xlat
xor
dec
sub
sub
and
add
(bad)
jecxz
sbb
loope
in
ins
jae
lahf
add
sbb
mov
loop
cmc
(bad)
mov
jmp
jae
jns
sti
jl
stos
cld
dec
std
movs
je
push
jmp
dec
mov
ret
push
mov
pop
sub
iret
push
mov
jno
imul
iret
leave
daa
movs
(bad)
mov
inc
leave
inc
test
out
pop
(bad)
(bad)
mov
dec
ds
icebp
add
shr
jns
fistp
pop
pop
fisttp
mov
outs
or
retf
pop
mov
jb
ror
pusha
push
iret
inc
sbb
sti
mov
mov
stos
inc
outs
push
and
leave
sbb
ds
or
in
pop
aad
std
mov
cmp
frstor
xchg
xlat
in
jae
mov
lods
imul
sub
shr
xor
repz
clc
sti
movs
cld
inc
lock
fldcw
fcmovu
mov
and
and
push
sub
cmp
cmp
sbb
cmps
cmp
in
jnp
std
cmp
stos
bnd
dec
xor
out
mov
pop
cmp
test
xchg
sar
mov
out
pop
stos
dec
sar
push
push
in
aaa
mov
test
adc
imul
lods
je
jnp
arpl
and
xchg
les
les
xchg
mov
test
jge
xchg
xchg
addr16
test
aas
sub
xor
cmp
sbb
adc
cmp
xchg
arpl
push
dec
add
sbb
cli
xchg
icebp
xor
mov
gs
int
dec
push
xchg
xor
sbb
adc
dec
sahf
and
retf
pop
cs
fild
fcmovnu
ins
mov
sub
push
dec
dec
aas
repnz
mov
loop
ds
xlat
xor
push
fld
or
cmp
jg
icebp
mov
mov
jecxz
arpl
jo
add
sti
inc
jmp
sub
jl
mov
and
mov
push
mov
daa
xchg
nop
mov
ror
rcr
xchg
mov
mov
icebp
or
push
sub
or
mov
jle
cdq
repnz
jg
xor
retf
sar
imul
loop
fcmove
popf
ins
xor
mov
or
mov
inc
aaa
push
aas
lea
ret
aad
sub
ds
out
in
push
mov
mov
jmp
sahf
sbb
cmp
test
dec
adc
adc
pmulhw
cmps
cmp
xchg
sub
cmp
mov
xor
imul
jne
jmp
ins
lods
test
es
xchg
push
inc
gs
add
stc
(bad)
retf
mov
js
ret
fisttp
call
loopne
jb
jo
push
mov
jbe
ins
inc
aaa
sahf
jmp
cmp
jbe
xchg
pushf
or
sar
loope
in
ds
ror
sub
mov
xchg
mov
cmp
jp
in
or
icebp
jle
push
xor
mov
dec
pop
test
out
(bad)
jg
div
je
fcom
pop
aad
sub
mov
shl
push
in
mov
push
xor
int
dec
lds
loope
cmp
mov
in
test
sbb
jmp
pop
mov
jbe
aaa
push
push
ret
xor
sbb
daa
or
jecxz
in
pop
ja
repz
ret
jmp
mov
cli
data16
adc
out
push
sbb
add
faddp
jecxz
leave
js
neg
movs
lock
jmp
push
mov
xlat
and
jbe
xchg
int
adc
and
daa
cmp
lods
push
pop
jl
cmps
push
stos
mov
lahf
iret
mov
sbb
rcl
jns
inc
lds
cld
daa
aam
psubb
mov
mov
inc
sub
inc
in
bound
jp
inc
dec
sar
loopne
add
cmp
xor
cmp
jno
jae
pop
add
lods
and
jb
push
sbb
and
sbb
les
mov
xchg
mov
fst
pop
ret
ins
imul
ja
shl
inc
jb
shr
add
or
pop
les
xor
sbb
mov
mov
in
out
out
jne
(bad)
shl
sbb
cmp
push
push
jb
and
cmp
dec
mov
xchg
jge
(bad)
sahf
lahf
xchg
mov
fsub
cmc
pop
fsub
mov
retf
sub
clc
dec
push
aas
or
cmps
pop
push
sbb
out
xchg
xor
stos
mov
sbb
out
mov
(bad)
xor
mov
frstor
push
mov
cs
dec
cmps
inc
stos
iret
loop
shl
jb
jae
xchg
fcmovnb
nop
sub
in
jbe
fmul
sar
or
(bad)
iret
mov
cmp
or
pop
jg
fistp
sahf
and
retf
fnstenv
cmp
retf
repnz
mov
add
fidivr
pop
mov
adc
sub
js
dec
mov
shl
aam
xor
shr
mov
jl
out
sbb
ror
jae
lds
aad
sbb
mov
cli
inc
shl
cmps
sbb
je
ds
dec
int
shr
add
fisttp
movs
retf
jp
aaa
xor
ins
(bad)
xor
add
sbb
push
xchg
icebp
(bad)
in
push
fisttp
jle
imul
icebp
(bad)
mov
out
mov
mov
pop
inc
sbb
sbb
sub
push
mov
cld
dec
std
mov
and
mov
mov
in
arpl
inc
in
shl
and
into
add
in
adc
loopne
xchg
pushf
xchg
lods
(bad)
rcr
std
movs
xor
(bad)
fiadd
cli
xor
jge
push
xchg
pop
test
js
sub
into
int3
pop
jb
push
int3
jo
into
add
fisttp
dec
add
lahf
mov
icebp
call
mov
outs
adc
retf
movs
sbb
pop
ins
jmp
aaa
ret
outs
adc
jno
mov
clc
aaa
ret
xchg
das
jns
jns
ins
ficom
gs
ins
out
jecxz
jle
dec
test
pop
mov
cmp
iret
imul
pop
enter
add
push
call
mov
xchg
ds
xchg
dec
sbb
pop
dec
fwait
sbb
dec
(bad)
dec
and
je
imul
js
retf
popa
jecxz
pop
iret
xchg
add
shr
test
jns
xchg
ficom
xor
and
(bad)
xchg
mov
ss
jne
inc
push
pop
push
clc
add
jnp
fwait
lock
jge
dec
mov
xchg
retf
sub
add
mov
mov
jmp
psubb
ficom
sar
mov
dec
inc
push
shr
push
fist
jnp
and
cmp
fwait
cmp
out
sub
enter
ficomp
sub
xchg
mov
test
inc
js
(bad)
mov
jb
or
loop
js
movs
adc
xchg
inc
bound
dec
xchg
mov
enter
xchg
out
dec
mov
add
xchg
scas
and
dec
aas
loopne
ret
int
ret
pop
fstp
fucom
pop
fsub
jbe
xchg
lods
popa
repz
sub
cld
inc
sti
add
push
sbb
jecxz
popf
or
pop
mov
hlt
imul
out
data16
enter
js
retf
icebp
cmps
idiv
(bad)
mov
push
js
pop
adc
sbb
pop
ret
div
stos
adc
out
xchg
push
xchg
pop
(bad)
fbstp
jle
jge
inc
aam
outs
sbb
inc
std
mov
arpl
inc
jbe
aaa
xchg
jmp
in
dec
ins
jp
cmps
sti
sbb
push
loope
xchg
dec
adc
ds
xor
out
push
mov
sbb
pop
pop
inc
push
lock
(bad)
in
inc
sbb
dec
std
sub
jns
fwait
or
xchg
jno
js
loop
fld
cdq
mov
scas
fadd
xchg
ds
dec
push
dec
sbb
jl
sti
outs
cld
das
icebp
int
cmps
mov
push
aaa
mov
fiadd
ja
dec
outs
push
cmp
out
fldenv
push
ss
scas
cmp
neg
pop
sahf
xor
imul
mov
call
jae
cld
(bad)
cmp
fisubr
into
push
mov
addr16
sub
or
outs
mov
or
jmp
test
jle
and
xchg
jl
enter
cmp
imul
das
test
push
jl
shr
lea
(bad)
pop
adc
shr
and
xor
mov
sbb
pop
pop
add
lea
out
xchg
ss
out
jl
loope
outs
iret
shl
mov
mov
jne
movs
push
dec
pop
xor
xchg
add
and
mov
ficomp
pop
push
push
adc
lods
mov
shr
push
ins
xor
jecxz
mov
(bad)
loopne
inc
aad
cmp
push
mov
call
aam
jnp
jg
inc
jbe
push
mov
xor
push
jmp
inc
into
push
pop
(bad)
sbb
mov
imul
mov
(bad)
out
sar
aas
(bad)
mov
xor
adc
add
sub
pop
fst
jae
xor
test
cmp
jmp
mov
ficomp
in
(bad)
sub
push
aad
int
mov
ret
sahf
fwait
add
xor
ds
xchg
jg
outs
mov
inc
movd
cld
je
call
jns
mov
retf
cmp
shl
sub
mov
or
test
or
inc
loop
les
jne
shl
scas
or
dec
mov
ins
(bad)
scas
sub
bound
call
repz
pushf
jp
test
lar
jle
clc
popf
jno
movs
mov
shl
repnz
in
cmp
xor
mov
sbb
push
push
lock
loop
lahf
push
mov
cmps
cmps
mov
sbb
movs
cmp
pop
mov
jnp
dec
push
adc
add
loope
(bad)
add
pop
add
js
cli
cmp
pop
retf
js
pop
fsubrp
jmp
adc
loope
pop
daa
pushf
add
fidiv
lds
aam
fwait
mov
cmp
loopne
out
cmps
shr
inc
shl
push
and
mov
cwde
xchg
sbb
mov
push
pop
std
and
jecxz
mov
sbb
sub
dec
dec
inc
sahf
ror
popa
jne
dec
mov
xor
cmp
stos
popf
mov
out
clc
das
test
outs
lock
lea
rcr
aad
jl
mov
call
stos
inc
ja
ds
int
fisttp
(bad)
cwde
arpl
int3
je
dec
sti
jbe
sub
sbb
jg
jmp
cmc
jnp
push
cli
sub
mov
xchg
out
stc
test
pushf
sub
pusha
adc
out
sar
pop
cld
pop
mov
test
test
dec
fwait
dec
lods
inc
xchg
or
pop
xor
or
add
lahf
mov
ret
mov
push
in
pop
sar
leave
jno
movs
(bad)
in
xor
or
push
pop
add
push
xor
cmps
mov
ja
push
js
pop
clc
gs
or
es
or
gs
icebp
mov
fs
cmp
(bad)
xor
and
in
shl
sub
jecxz
cld
adc
dec
icebp
xchg
lahf
imul
add
inc
sbb
shl
das
push
jbe
pop
mov
and
and
add
ins
je
add
add
add
add
add
add
adc
add
add
sub
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
inc
add
add
add
inc
inc
add
inc
inc
(bad)
inc
add
(bad)
inc
xchg
js
ja
jg
ja
ja
ja
xchg
add
ja
push
push
pop
jnp
mov
jne
push
push
jo
add
push
add
ja
push
push
pop
jnp
mov
ja
ja
xchg
xchg
ja
jo
ja
js
pushw
ja
adc
ja
loopne
addr16
adc
add
pop
jno
adc
push
add
adc
ja
loopne
addr16
adc
pusha
data16
add
ja
ja
jo
ja
js
add
add
add
add
add
ins
xor
add
mov
add
push
and
add
inc
add
add
add
add
add
dec
imul
add
ja
push
jo
imul
outs
imul
ins
add
(bad)
inc
add
(bad)
or
add
arpl
or
pop
add
push
add
add
add
add
add
add
add
add
and
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
inc
add
add
add
inc
inc
add
inc
inc
(bad)
inc
add
(bad)
inc
add
add
(bad)
push
(bad)
(bad)
push
add
add
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
push
add
(bad)
(bad)
(bad)
(bad)
push
add
(bad)
(bad)
(bad)
(bad)
push
add
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
add
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
add
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
add
add
add
lock
(bad)
(bad)
inc
add
add
add
add
add
(bad)
(bad)
push
inc
add
add
add
(bad)
add
lock
lock
add
lock
lock
add
lock
lock
add
lock
lock
add
lock
(bad)
add
(bad)
add
(bad)
add
(bad)
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
clc
add
(bad)
clc
add
(bad)
clc
add
push
add
jmp
add
inc
add
inc
add
inc
add
add
jg
add
jg
add
jg
adc
jg
xor
jg
jo
jg
lock
push
add
push
pop
(bad)
push
aas
(bad)
push
(bad)
(bad)
push
(bad)
(bad)
push
(bad)
(bad)
push
(bad)
(bad)
(bad)
stc
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
nop
add
jl
add
popa
outs
jae
push
gs
inc
push
add
add
push
add
gs
cmp
add
(bad)
sbb
add
or
pop
add
add
push
add
popa
addr16
add
add
je
add
add
add
add
add
adc
add
add
or
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
and
imul
sbb
sub
jae
sub
jnp
sub
mov
sub
mov
pushf
pushf
pushf
add
cmp
add
lods
add
inc
mov
push
push
mov
jae
mov
mov
add
arpl
add
mov
add
mov
pop
mov
arpl
add
mov
imul
jae
mov
test
add
mov
movs
mov
mov
pop
pop
into
add
into
add
movs
into
add
lods
into
add
(bad)
into
add
into
into
add
and
add
(bad)
add
(bad)
add
(bad)
add
(bad)
add
(bad)
add
(bad)
add
(bad)
add
mov
(bad)
add
and
add
sub
add
fiadd
inc
cmp
add
fiadd
pop
inc
fiadd
arpl
add
fiadd
(bad)
fiadd
arpl
add
out
jnp
out
xchg
jae
add
out
lods
lods
out
mov
out
add
out
add
(bad)
out
add
out
add
out
out
add
test
jnp
test
xchg
xchg
test
into
(bad)
test
out
out
test
inc
inc
arpl
add
inc
mov
add
inc
movs
pushf
inc
lods
pushf
inc
mov
inc
mov
movs
inc
mov
inc
(bad)
into
inc
(bad)
(bad)
inc
out
inc
out
out
inc
div
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
add
add
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
jae
add
add
add
add
jae
jae
pop
pop
pop
inc
xor
sbb
sub
sub
push
push
adc
adc
jae
cmp
cmp
sub
and
and
push
and
jae
cmp
inc
xor
cmp
cmp
adc
ds
xor
and
push
dec
inc
dec
sbb
jae
sub
sub
dec
xor
ins
pop
push
pop
pop
sub
and
and
dec
dec
dec
dec
dec
dec
dec
xor
or
adc
cmp
inc
pop
push
push
pop
das
inc
adc
and
dec
push
push
dec
imul
or
push
cmp
push
push
ins
ins
pop
push
jae
inc
or
or
cmp
dec
dec
pop
push
dec
sbb
inc
wbinvd
or
es
sub
sub
jae
jae
sbb
sbb
sbb
cs
sbb
jae
jae
jae
jae
jae
dec
popa
adc
jae
jae
jae
jae
jae
jae
push
inc
jae
jae
jae
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
aas
(bad)
(bad)
(bad)
aas
(bad)
inc
mov
add
add
add
add
push
add
popa
gs
add
je
add
add
add
add
add
adc
add
add
or
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
and
imul
sbb
sub
jae
sub
jnp
sub
mov
sub
mov
pushf
pushf
pushf
add
cmp
add
lods
add
inc
mov
push
push
mov
jae
mov
mov
add
arpl
add
mov
add
mov
pop
mov
arpl
add
mov
imul
jae
mov
test
add
mov
movs
mov
mov
pop
pop
into
add
into
add
movs
into
add
lods
into
add
(bad)
into
add
into
into
add
and
add
(bad)
add
(bad)
add
(bad)
add
(bad)
add
(bad)
add
(bad)
add
(bad)
add
mov
(bad)
add
and
add
sub
add
fiadd
inc
cmp
add
fiadd
pop
inc
fiadd
arpl
add
fiadd
(bad)
fiadd
arpl
add
out
jnp
out
xchg
jae
add
out
lods
lods
out
mov
out
add
out
add
(bad)
out
add
out
add
out
out
add
test
jnp
test
xchg
xchg
test
into
(bad)
test
out
out
test
inc
inc
arpl
add
inc
mov
add
inc
movs
pushf
inc
lods
pushf
inc
mov
inc
mov
movs
inc
mov
inc
(bad)
into
inc
(bad)
(bad)
inc
out
inc
out
out
inc
div
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
add
add
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
jae
add
add
add
add
jae
jae
pop
pop
pop
inc
xor
sbb
sub
sub
push
push
adc
adc
jae
cmp
cmp
sub
and
and
push
and
jae
cmp
inc
xor
cmp
cmp
adc
ds
xor
and
push
dec
inc
dec
sbb
jae
sub
sub
dec
xor
ins
pop
push
pop
pop
sub
and
and
dec
dec
dec
dec
dec
dec
dec
xor
or
adc
cmp
inc
pop
push
push
pop
das
inc
adc
and
dec
push
push
dec
imul
or
push
cmp
push
push
ins
ins
pop
push
jae
inc
or
or
cmp
dec
dec
pop
push
dec
sbb
inc
wbinvd
or
es
sub
sub
jae
jae
sbb
sbb
sbb
cs
sbb
jae
jae
jae
jae
jae
dec
popa
adc
jae
jae
jae
jae
jae
jae
push
inc
jae
jae
jae
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
aas
(bad)
(bad)
(bad)
aas
(bad)
inc
mov
add
add
add
add
push
add
popa
addr16
add
add
jle
add
add
add
add
adc
add
add
or
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
and
imul
sbb
sub
jae
sub
jnp
sub
mov
sub
mov
pushf
pushf
pushf
add
cmp
add
lods
add
inc
mov
push
push
mov
jae
mov
mov
add
arpl
add
mov
add
mov
pop
mov
arpl
add
mov
imul
jae
mov
test
add
mov
movs
mov
mov
pop
pop
into
add
into
add
movs
into
add
lods
into
add
(bad)
into
add
into
into
add
and
add
(bad)
add
(bad)
add
(bad)
add
(bad)
add
(bad)
add
(bad)
add
(bad)
add
mov
(bad)
add
and
add
sub
add
fiadd
inc
cmp
add
fiadd
pop
inc
fiadd
arpl
add
fiadd
(bad)
fiadd
arpl
add
out
jnp
out
xchg
jae
add
out
lods
lods
out
mov
out
add
out
add
(bad)
out
add
out
add
out
out
add
test
jnp
test
xchg
xchg
test
into
(bad)
test
out
out
test
inc
inc
arpl
add
inc
mov
add
inc
movs
pushf
inc
lods
pushf
inc
mov
inc
mov
movs
inc
mov
inc
(bad)
into
inc
(bad)
(bad)
inc
out
inc
out
out
inc
div
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
add
add
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
jae
add
add
add
add
jae
jae
pop
pop
pop
inc
xor
sbb
sub
sub
push
push
adc
adc
jae
cmp
cmp
sub
and
and
push
and
jae
cmp
inc
xor
cmp
cmp
adc
ds
xor
and
push
dec
inc
dec
sbb
jae
sub
sub
dec
xor
ins
pop
push
pop
pop
sub
and
and
dec
dec
dec
dec
dec
dec
dec
xor
or
adc
cmp
inc
pop
push
push
pop
das
inc
adc
and
dec
push
push
dec
imul
or
push
cmp
push
push
ins
ins
pop
push
jae
inc
or
or
cmp
dec
dec
pop
push
dec
sbb
inc
wbinvd
or
es
sub
sub
jae
jae
sbb
sbb
sbb
cs
sbb
jae
jae
jae
jae
jae
dec
popa
adc
jae
jae
jae
jae
jae
jae
push
inc
jae
jae
jae
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
aas
(bad)
(bad)
(bad)
aas
(bad)
inc
mov
add
add
add
add
add
add
add
gs
add
add
(bad)
inc
add
or
pop
add
add
push
call
add
add
add
add
add
gs
add
(bad)
inc
add
or
push
add
add
push
adc
add
add
add
add
add
add
gs
(bad)
inc
add
or
adc
pop
add
push
sbb
inc
dec
add
add
push
add
gs
aaa
add
add
add
gs
je
outs
and
ins
popa
outs
arpl
and
gs
and
jae
outs
outs
add
(bad)
inc
add
out
inc
or
adc
add
add
add
add
add
push
add
gs
add
add
add
ins
jo
and
outs
and
add
(bad)
(bad)
inc
add
lahf
push
inc
or
adc
add
add
add
add
push
add
gs
xor
add
popa
je
dec
gs
gs
je
and
and
jb
ja
popa
je
inc
popa
bound
arpl
add
(bad)
inc
add
xlat
or
add
add
push
add
add
add
pop
add
popa
xor
add
add
je
add
add
add
add
add
adc
add
add
or
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
and
imul
sbb
sub
jae
sub
jnp
sub
mov
sub
mov
pushf
pushf
pushf
add
cmp
add
lods
add
inc
mov
push
push
mov
jae
mov
mov
add
arpl
add
mov
add
mov
pop
mov
arpl
add
mov
imul
jae
mov
test
add
mov
movs
mov
mov
pop
pop
into
add
into
add
movs
into
add
lods
into
add
(bad)
into
add
into
into
add
and
add
(bad)
add
(bad)
add
(bad)
add
(bad)
add
(bad)
add
(bad)
add
(bad)
add
mov
(bad)
add
and
add
sub
add
fiadd
inc
cmp
add
fiadd
pop
inc
fiadd
arpl
add
fiadd
(bad)
fiadd
arpl
add
out
jnp
out
xchg
jae
add
out
lods
lods
out
mov
out
add
out
add
(bad)
out
add
out
add
out
out
add
test
jnp
test
xchg
xchg
test
into
(bad)
test
out
out
test
inc
inc
arpl
add
inc
mov
add
inc
movs
pushf
inc
lods
pushf
inc
mov
inc
mov
movs
inc
mov
inc
(bad)
into
inc
(bad)
(bad)
inc
out
inc
out
out
inc
div
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
add
add
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
jae
add
add
add
add
jae
jae
pop
pop
pop
inc
xor
sbb
sub
sub
push
push
adc
adc
jae
cmp
cmp
sub
and
and
push
and
jae
cmp
inc
xor
cmp
cmp
adc
ds
xor
and
push
dec
inc
dec
sbb
jae
sub
sub
dec
xor
ins
pop
push
pop
pop
sub
and
and
dec
dec
dec
dec
dec
dec
dec
xor
or
adc
cmp
inc
pop
push
push
pop
das
inc
adc
and
dec
push
push
dec
imul
or
push
cmp
push
push
ins
ins
pop
push
jae
inc
or
or
cmp
dec
dec
pop
push
dec
sbb
inc
wbinvd
or
es
sub
sub
jae
jae
sbb
sbb
sbb
cs
sbb
jae
jae
jae
jae
jae
dec
popa
adc
jae
jae
jae
jae
jae
jae
push
inc
jae
jae
jae
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
aas
(bad)
(bad)
(bad)
aas
(bad)
inc
js
enter
lock
add
add
push
add
popa
addr16
sbb
xchg
add
jle
add
add
add
add
adc
add
add
or
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
and
imul
sbb
sub
jae
sub
jnp
sub
mov
sub
mov
pushf
pushf
pushf
add
cmp
add
lods
add
inc
mov
push
push
mov
jae
mov
mov
add
arpl
add
mov
add
mov
pop
mov
arpl
add
mov
imul
jae
mov
test
add
mov
movs
mov
mov
pop
pop
into
add
into
add
movs
into
add
lods
into
add
(bad)
into
add
into
into
add
and
add
(bad)
add
(bad)
add
(bad)
add
(bad)
add
(bad)
add
(bad)
add
(bad)
add
mov
(bad)
add
and
add
sub
add
fiadd
inc
cmp
add
fiadd
pop
inc
fiadd
arpl
add
fiadd
(bad)
fiadd
arpl
add
out
jnp
out
xchg
jae
add
out
lods
lods
out
mov
out
add
out
add
(bad)
out
add
out
add
out
out
add
test
jnp
test
xchg
xchg
test
into
(bad)
test
out
out
test
inc
inc
arpl
add
inc
mov
add
inc
movs
pushf
inc
lods
pushf
inc
mov
inc
mov
movs
inc
mov
inc
(bad)
into
inc
(bad)
(bad)
inc
out
inc
out
out
inc
div
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
add
add
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
jae
add
add
add
add
jae
jae
pop
pop
pop
inc
xor
sbb
sub
sub
push
push
adc
adc
jae
cmp
cmp
sub
and
and
push
and
jae
cmp
inc
xor
cmp
cmp
adc
ds
xor
and
push
dec
inc
dec
sbb
jae
sub
sub
dec
xor
ins
pop
push
pop
pop
sub
and
and
dec
dec
dec
dec
dec
dec
dec
xor
or
adc
cmp
inc
pop
push
push
pop
das
inc
adc
and
dec
push
push
dec
imul
or
push
cmp
push
push
ins
ins
pop
push
jae
inc
or
or
cmp
dec
dec
pop
push
dec
sbb
inc
wbinvd
or
es
sub
sub
jae
jae
sbb
sbb
sbb
cs
sbb
jae
jae
jae
jae
jae
dec
popa
adc
jae
jae
jae
jae
jae
jae
push
inc
jae
jae
jae
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
aas
(bad)
(bad)
(bad)
aas
(bad)
inc
mov
add
add
add
add
add
add
add
gs
pop
add
(bad)
inc
add
or
adc
add
push
mov
add
pop
add
add
add
add
push
add
gs
xor
add
adc
jae
imul
and
jae
gs
add
(bad)
inc
add
lahf
push
inc
or
adc
add
add
adc
add
popa
xor
sbb
ds
add
add
add
add
add
add
add
and
add
add
add
add
add
add
add
adc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
inc
add
add
add
inc
inc
add
inc
inc
(bad)
inc
add
(bad)
inc
add
add
jo
add
jo
add
jo
add
inc
add
inc
add
inc
add
dec
add
add
add
jo
(bad)
inc
(bad)
inc
(bad)
ud0
clc
or
add
(bad)
dec
clc
or
add
(bad)
dec
lock
or
ud0
jo
add
add
add
add
(bad)
inc
jo
add
add
add
ud0
push
jo
add
add
add
(bad)
(bad)
(bad)
push
or
add
add
ud0
(bad)
(bad)
(bad)
clc
add
add
add
add
ud0
(bad)
(bad)
(bad)
clc
add
add
add
add
add
(bad)
(bad)
(bad)
(bad)
clc
add
add
add
add
add
(bad)
(bad)
(bad)
dec
add
add
add
ud0
(bad)
dec
add
add
add
ud0
(bad)
dec
add
add
add
add
(bad)
(bad)
clc
add
push
out
out
out
mov
add
add
add
push
out
out
out
mov
add
out
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
aas
(bad)
inc
ud0
add
(bad)
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
jmp
add
jmp
add
inc
add
inc
add
inc
add
inc
add
adc
add
and
add
add
add
add
add
rol
add
add
add
add
add
add
add
add
inc
add
add
add
inc
inc
add
inc
inc
(bad)
inc
add
(bad)
inc
add
add
add
add
add
add
add
add
add
(bad)
add
add
add
or
lock
add
add
lock
add
add
lock
add
add
lock
add
add
or
add
add
ud0
add
add
add
(bad)
inc
add
clc
add
add
add
mov
add
std
inc
add
inc
add
inc
add
jg
add
aas
add
lock
add
lock
lock
lock
lock
lock
clc
sldt
clc
pop
add
clc
pop
add
lock
lock
add
loopne
loopne
loopne
or
inc
pop
add
add
push
add
popa
xor
sbb
ds
add
add
add
add
add
add
add
and
add
add
add
add
add
add
add
adc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
inc
add
add
add
inc
inc
add
inc
inc
(bad)
inc
add
(bad)
inc
add
add
add
add
add
or
mov
add
add
add
or
(bad)
lock
add
add
add
or
lock
lock
add
add
or
or
push
loopne
(bad)
(bad)
dec
add
add
add
loopne
(bad)
(bad)
push
(bad)
(bad)
push
add
add
add
loopne
(bad)
(bad)
push
push
add
add
add
add
loopne
(bad)
(bad)
push
add
(bad)
inc
add
add
push
loopne
(bad)
(bad)
dec
(bad)
(bad)
(bad)
inc
add
add
push
loopne
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
or
loopne
(bad)
(bad)
(bad)
(bad)
(bad)
inc
(bad)
(bad)
(bad)
push
add
add
ud0
(bad)
push
(bad)
(bad)
push
add
add
add
add
(bad)
(bad)
(bad)
(bad)
inc
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
sar
push
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
jg
add
add
add
add
add
add
add
add
add
jmp
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
add
add
add
add
add
add
add
add
add
rol
add
add
add
add
add
add
add
add
inc
add
add
add
inc
inc
add
inc
inc
(bad)
inc
add
(bad)
inc
add
mov
inc
add
add
add
add
add
add
(bad)
clc
add
add
add
push
push
push
add
ud0
or
add
inc
add
inc
add
inc
add
inc
add
aas
add
add
add
add
add
add
add
add
add
add
add
add
add
cmp
add
(bad)
inc
add
inc
add
inc
add
inc
add
js
dec
adc
add
add
add
add
push
add
popa
xor
sbb
xchg
add
jle
add
add
add
add
adc
add
add
or
push
add
add
add
add
add
add
add
add
add
add
(bad)
inc
add
add
fstp
fld
stc
clc
stc
add
out
lock
add
add
jns
out
in
(bad)
sti
cld
add
clc
stc
add
jmp
add
add
push
push
add
outs
add
aad
add
jne
imul
add
(bad)
add
fcomp
add
sbb
add
dec
dec
add
and
pop
add
xor
add
adc
dec
inc
aas
add
dec
add
sub
add
cmp
mov
or
add
push
xor
xor
daa
add
call
sldt
pop
aaa
add
ja
add
inc
sldt
push
sbb
add
pop
and
retf
add
and
shl
add
sbb
shr
add
(bad)
jno
add
mov
add
jne
add
js
add
jl
add
ja
add
sub
in
push
add
mov
add
mov
push
add
xchg
sub
icebp
(bad)
xchg
add
call
in
(bad)
add
out
add
ror
add
(bad)
add
fcompp
add
rcl
add
(bad)
inc
idiv
test
add
push
(bad)
(bad)
add
test
add
mov
test
add
mov
and
sahf
add
leave
mov
sub
xchg
add
cmps
add
lds
add
je
add
add
xchg
pusha
add
mov
add
add
outs
add
mov
add
mov
pop
add
xchg
ins
add
cmps
jle
xchg
aam
add
jno
add
arpl
add
add
pushf
ins
add
xchg
push
sbb
jo
dec
mov
jp
fldlg2
out
add
add
pop
inc
add
add
ins
pop
add
in
add
pop
add
repnz
add
ins
add
jmp
add
dec
dec
add
pop
push
add
push
add
add
(bad)
inc
data16
pop
add
jecxz
add
shr
add
loop
add
add
mov
add
scas
fadd
add
in
push
scas
xlat
add
mov
add
mov
add
scas
aam
or
xlat
add
mov
loopne
adc
fiadd
sbb
jecxz
sbb
lods
add
mov
jecxz
and
lea
inc
(bad)
dec
retf
push
retf
push
retf
out
pop
into
jmp
add
jmp
data16
sbb
add
repz
add
std
inc
inc
into
cmc
add
cmc
add
clc
cld
add
aaa
cmp
cmc
sti
inc
loop
cmc
add
(bad)
xlat
add
inc
lock
inc
repnz
in
add
dec
repz
dec
in
add
push
test
sub
add
push
stc
add
push
cmc
add
pop
cld
add
pop
sti
add
push
cli
add
push
repz
pop
inc
xor
xor
add
push
in
add
pusha
inc
ss
in
add
inc
inc
ins
inc
dec
jae
add
add
inc
push
inc
jp
inc
test
cli
add
int
add
dec
inc
pop
outs
cld
add
ds
add
dec
add
cld
cld
add
cmc
cmc
add
repnz
in
in
add
jmp
in
in
loopne
loopne
fstp
fld
fcmovnu
fild
(bad)
fld
(bad)
(bad)
(bad)
add
into
into
add
cmps
cmps
add
nop
nop
add
mov
add
jo
bound
add
cmp
add
xor
add
sub
and
and
push
push
push
add
add
add
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
hlt
hlt
hlt
hlt
hlt
hlt
push
push
push
push
push
push
push
push
push
hlt
sbb
sbb
push
push
push
push
push
push
hlt
and
mov
push
push
push
push
hlt
sub
mov
movs
xchg
cmps
cmc
push
push
push
sub
cmp
or
cmps
cmc
push
push
cmp
inc
inc
das
repz
cmps
mov
inc
dec
dec
add
or
push
cmp
or
out
or
mov
mov
sti
(bad)
mul
jp
xchg
mov
mov
cmp
xchg
push
push
mov
cmp
js
add
push
mov
in
pop
pop
pusha
imul
push
mov
pop
pop
push
pop
jae
push
push
push
push
push
push
mov
arpl
cmc
push
push
push
push
push
push
push
push
push
mov
push
push
push
push
push
push
(bad)
dec
repz
xor
xor
add
movs
add
mov
add
or
add
repz
add
cmp
add
inc
add
push
add
cmps
rol
cmps
loopne
xchg
xchg
aas
or
add
add
(bad)
add
add
add
add
add
add
push
add
xor
add
add
(bad)
inc
add
test
add
add
push
test
add
pop
add
add
add
adc
add
gs
xor
add
add
add
ja
je
and
gs
je
and
push
jns
and
outs
jne
and
gs
add
(bad)
inc
add
out
ja
or
adc
pop
add
add
add
adc
popa
xor
sbb
ds
add
add
add
add
add
add
add
and
add
add
add
add
add
add
add
adc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
inc
add
add
add
inc
inc
add
inc
inc
(bad)
inc
add
(bad)
inc
add
add
add
add
add
or
mov
add
add
add
or
(bad)
lock
add
add
add
or
lock
lock
add
add
or
or
push
loopne
(bad)
(bad)
dec
add
add
add
loopne
(bad)
(bad)
push
(bad)
(bad)
push
add
add
add
loopne
(bad)
(bad)
push
push
add
add
add
add
loopne
(bad)
(bad)
push
add
(bad)
inc
add
add
push
loopne
(bad)
(bad)
dec
(bad)
(bad)
(bad)
inc
add
add
push
loopne
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
or
loopne
(bad)
(bad)
(bad)
(bad)
(bad)
inc
(bad)
(bad)
(bad)
push
add
add
ud0
(bad)
push
(bad)
(bad)
push
add
add
add
add
(bad)
(bad)
(bad)
(bad)
inc
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
sar
push
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
jg
add
add
add
add
add
add
add
add
add
jmp
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
add
add
add
add
add
add
add
add
add
rol
add
add
add
add
add
add
add
add
inc
add
add
add
inc
inc
add
inc
inc
(bad)
inc
add
(bad)
inc
add
mov
inc
add
add
add
add
add
add
(bad)
clc
add
add
add
push
push
push
add
ud0
or
add
inc
add
inc
add
inc
add
inc
add
aas
add
add
add
add
add
add
add
add
add
add
add
add
add
cmp
add
(bad)
inc
add
inc
add
inc
add
inc
add
fcomp
inc
or
add
add
add
add
add
add
push
add
gs
xor
add
out
out
add
add
pop
add
add
add
pop
push
add
gs
xor
add
pop
out
add
add
sbb
popa
add
imul
add
add
add
add
and
dec
add
imul
dec
add
outs
add
pop
add
add
add
sbb
add
gs
xor
add
pop
out
add
add
sbb
jb
add
je
imul
and
popa
add
add
je
jns
ins
add
and
push
add
add
je
add
jbe
imul
push
add
add
push
add
gs
xor
add
pop
push
out
add
add
pop
add
add
add
add
add
xor
pop
add
(bad)
inc
add
or
add
adc
add
push
push
add
add
add
add
add
xor
pop
add
(bad)
inc
add
add
add
adc
add
push
mov
add
pop
add
add
add
add
xor
pop
add
(bad)
inc
add
add
add
adc
add
push
push
add
add
add
add
outs
xor
pop
add
(bad)
inc
add
add
or
push
add
push
and
inc
add
add
dec
xor
and
sub
arpl
sar
movs
lahf
sub
jbe
repnz
cmp
cmps
call
add
dec
lods
xor
or
stos
add
xchg
call
cld
add
add
add
ins
dec
outs
fs
xor
or
push
bound
imul
popa
arpl
sub
jne
and
add
cmp
push
test
inc
add
and
add
ins
je
add
sti
add
(bad)
fdivr
loopne
adc
dec
inc
add
add
add
sub
add
fild
inc
add
add
add
add
add
add
add
add
or
pop
push
or
or
or
or
or
push
adc
or
adc
adc
adc
pop
sbb
adc
adc
inc
add
add
add
add
or
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
inc
add
or
loopne
add
and
add
add
adc
inc
add
add
add
add
add
add
or
inc
add
add
add
add
add
jge
add
add
add
push
adc
pop
and
xor
inc
mov
adc
xor
or
push
pop
sbb
sbb
sub
cmp
inc
inc
inc
dec
dec
dec
push
push
push
push
push
pop
pop
pop
arpl
addr16
jne
ja
jns
add
xchg
xchg
xchg
xchg
xchg
xchg
cwde
cdq
call
test
stos
mov
mov
mov
mov
(bad)
(bad)
enter
rcl
aad
xlat
fcomp
(bad)
loop
in
out
call
repz
cmc
div
clc
stc
cli
inc
add
add
add
add
add
add
add
add
add
add
add
add
or
inc
add
add
add
add
add
add
add
add
and
push
adc
pop
popa
jno
and
or
mov
or
xor
adc
push
and
loope
icebp
pop
sbb
sbb
daa
sub
sub
cmp
inc
inc
inc
dec
dec
dec
push
push
push
push
push
pop
pop
pop
arpl
addr16
jne
ja
jns
add
mov
xchg
xchg
cwde
cdq
call
test
stos
mov
mov
mov
mov
(bad)
(bad)
enter
rcl
aad
xlat
fcomp
(bad)
jecxz
in
out
jmp
cmc
div
clc
stc
cli
(bad)
fiadd
or
add
add
add
add
add
and
add
or
cmp
clc
call
bound
inc
mov
jg
xor
ret
out
in
inc
out
xchg
inc
and
cmp
loope
ficom
jg
pop
pop
sbb
mov
inc
clc
call
bound
add
mov
sbb
in
xchg
inc
loopne
les
adc
mov
mov
add
inc
icebp
push
mov
(bad)
cmp
pop
push
xchg
inc
fisttp
jmp
jmp
sbb
test
(bad)
fxch
inc
(bad)
sar
add
aaa
ret
dec
aas
in
add
mov
es
ffreep
cmps
(bad)
arpl
inc
xor
sbb
mov
add
inc
sbb
mov
cli
push
pop
clc
add
add
aas
mov
out
stc
cld
inc
lock
add
(bad)
jg
dec
jg
test
clc
pop
pop
sbb
add
xor
xor
sahf
pop
inc
mov
xor
es
pop
std
push
hlt
out
cld
or
ret
aas
inc
mov
dec
cld
retf
inc
retf
jg
repz
shl
mov
xor
cld
test
add
cld
dec
and
scas
loope
xchg
add
adc
xor
sbb
add
mov
fdivr
jae
cmc
inc
lahf
movs
inc
sbb
add
inc
add
xchg
in
repz
inc
loopne
inc
and
inc
icebp
pop
ret
push
inc
enter
xor
and
add
cld
dec
jl
(bad)
rol
dec
pop
(bad)
inc
fcmovne
jg
push
mov
jg
fwait
pop
pusha
hlt
inc
dec
dec
icebp
test
add
inc
dec
nop
in
repz
inc
loopne
inc
and
test
xor
cmp
fisttp
cld
sub
mov
aas
clc
call
inc
aas
(bad)
stos
dec
loop
xor
pusha
xor
jp
stc
sar
add
inc
dec
inc
xchg
xor
add
mov
lock
add
loopne
cmp
rol
add
shl
clc
mov
jmp
xchg
lods
pop
into
fwait
cmp
int
cmp
call
into
adc
mov
jb
pop
and
or
inc
outs
dec
inc
xchg
sbb
xor
loopne
inc
and
sub
mov
push
mov
pop
lea
sbb
jae
add
clc
push
push
push
dec
dec
sub
or
dec
sti
jbe
ja
mov
imul
es
popf
ins
(bad)
push
push
rol
add
icebp
hlt
lahf
jecxz
jecxz
and
or
repnz
retf
and
xchg
aad
inc
pop
adc
cs
out
dec
std
mov
inc
mov
fist
add
xor
xor
sbb
std
push
mov
cld
or
stos
idiv
lock
stos
in
push
cs
in
cmc
stos
jl
les
pop
stos
das
cld
add
xchg
call
clc
adc
enter
push
xchg
xchg
cld
les
es
fdivr
arpl
jne
cli
in
pop
daa
(bad)
sbb
clc
call
xor
push
mov
popf
jae
jmp
mov
sti
movs
aad
sbb
inc
dec
pop
aas
pop
retf
std
jbe
ds
push
inc
or
xchg
cmp
scas
inc
lock
add
loopne
jg
aaa
inc
xchg
repz
adc
icebp
out
mov
aam
ja
mov
mov
sahf
cli
popf
cwde
inc
mov
inc
sbb
mov
movs
scas
sub
(bad)
pushf
test
cmps
(bad)
mov
mov
repnz
xchg
push
in
pop
fstp
cld
or
in
mov
add
mov
dec
cmp
xlat
or
add
mov
jecxz
fcmove
inc
les
mov
out
ret
dec
cmps
cmp
cwde
inc
cmp
aas
icebp
scas
cmp
push
(bad)
imul
xchg
jle
sbb
xlat
mov
sub
ins
xlat
fcomp
inc
xchg
jg
inc
cld
(bad)
mov
loope
clc
or
arpl
add
inc
loop
aas
loope
clc
or
add
je
rcl
outs
(bad)
and
test
out
pop
loop
and
repz
lahf
(bad)
dec
inc
push
mov
iret
das
mov
lahf
lock
add
add
inc
cld
inc
add
xor
addr16
daa
mov
inc
mov
sub
leave
jecxz
push
loop
mov
lahf
(bad)
dec
aad
psllq
out
pop
cld
mov
outs
cld
xor
add
pop
sbb
add
xchg
fninit
mov
scas
in
push
mov
call
mov
fs
xchg
shr
sbb
cmp
and
repnz
inc
in
fnstcw
inc
jae
pop
mov
int
xchg
cmc
(bad)
pop
lock
inc
stos
xchg
inc
pop
and
add
imul
sub
stc
lds
sar
pop
and
hlt
test
aam
jo
imul
mov
and
retf
inc
push
jo
pop
retf
inc
and
dec
clc
pop
sahf
adc
aas
test
(bad)
and
mov
inc
jle
inc
loop
out
idiv
ins
adc
pop
jmp
popa
sbb
dec
xor
inc
leave
sbb
pop
ret
aaa
fs
scas
repnz
aas
push
jl
mov
add
add
push
cld
imul
xor
mov
and
test
bound
loop
jnp
cmp
cmps
loop
popa
jnp
cmps
pop
jmp
clc
dec
adc
xchg
sti
mov
(bad)
fiadd
nop
(bad)
mov
mov
cld
inc
dec
addr16
rol
test
and
movs
jl
inc
bnd
imul
ins
jb
pushf
shl
test
je
jmp
ret
sbb
xor
push
xchg
fidivr
cs
push
xchg
aad
mov
add
imul
test
ss
cmp
add
sub
dec
pop
imul
fcmovne
inc
repz
pop
fcomp
lods
jmp
adc
inc
leave
sbb
loope
xor
mov
inc
and
mov
(bad)
dec
mov
jmp
jg
and
jg
mov
pop
enter
sbb
inc
fs
test
xchg
loopne
lds
stc
push
imul
stos
js
call
inc
and
inc
stos
fsubr
out
fidivr
imul
and
inc
scas
cmp
add
fisttp
inc
ret
out
inc
mov
aas
jmp
jg
and
pop
js
cmp
imul
loop
data16
jo
movs
inc
leave
add
ins
add
jb
xlat
inc
and
pop
(bad)
iret
add
call
jg
adc
sbb
jbe
stc
cmc
inc
inc
cwde
jg
xchg
repnz
adc
arpl
inc
mov
rol
jno
imul
inc
leave
push
ins
outs
pop
ret
xor
(bad)
(bad)
xor
xor
stc
mov
(bad)
and
jbe
(bad)
jg
pop
outs
(bad)
and
outs
pop
nop
xor
pop
mov
jb
dec
shr
aad
stc
and
test
push
ret
into
push
jl
ror
jg
cmc
mov
in
adc
cs
adc
fcomp
dec
std
adc
clc
ins
inc
jg
and
(bad)
mov
jl
loop
pop
mov
cmp
cmp
out
retf
(bad)
mov
pop
je
stc
and
push
mov
ds
mov
mov
addr16
inc
mov
arpl
lods
adc
jg
outs
(bad)
es
xor
add
shl
mov
adc
pop
xchg
cmps
test
ss
pushf
das
call
aaa
ret
lods
movs
sub
repnz
dec
loope
and
adc
mov
jecxz
add
loope
jg
(bad)
inc
leave
dec
(bad)
(bad)
and
out
xlat
je
xor
stc
mov
out
outs
in
repz
test
jge
aas
mov
mov
cli
scas
cmp
jge
cld
(bad)
mov
fistp
inc
test
inc
adc
xor
ret
jae
add
pop
dec
jg
adc
xchg
sub
adc
fsubr
add
int3
iret
stc
and
dec
inc
xchg
pop
cli
scas
cmp
jge
cld
(bad)
mov
xchg
push
outs
dec
mov
aas
call
add
fistp
mov
cld
inc
jle
movs
aam
int3
and
fcmovb
out
pop
xchg
lea
xchg
iret
out
jae
sub
sub
movs
inc
leave
sbb
sub
mov
int
add
mov
jmp
dec
das
(bad)
fild
daa
(bad)
inc
aas
jmp
outs
(bad)
and
pop
dec
pushf
lahf
ds
push
sub
pop
xor
jnp
ja
xchg
inc
and
xchg
jp
add
in
popa
icebp
inc
ror
dec
inc
clc
mov
rcr
rol
jmp
jg
and
je
bound
test
add
iret
mov
and
sbb
out
fidivr
pop
mov
mov
cld
inc
dec
sti
dec
cld
xor
mov
addr16
xchg
jne
das
mov
xchg
push
cmp
jle
xlat
mov
scas
in
loope
dec
jg
inc
dec
xchg
popf
addr16
mov
inc
or
int3
retf
pushf
inc
rcl
dec
jg
pop
xchg
scas
mov
add
aas
cld
outs
mov
leave
aas
je
out
inc
stos
retf
loope
test
repz
mov
jg
inc
inc
stos
sbb
xchg
fidivr
sbb
cdq
fwait
inc
and
jg
fld
mul
addr16
clc
add
jmp
arpl
sub
stc
inc
dec
mov
pop
in
adc
es
push
lds
inc
mov
inc
cld
movs
inc
leave
pop
cli
mov
jmp
jge
cld
(bad)
mov
xchg
arpl
js
pop
pop
hlt
jmp
(bad)
imul
popf
mov
popf
push
sti
pop
dec
jg
jne
out
sub
mov
mov
jp
jno
in
popa
outs
dec
jg
inc
jg
pop
aas
out
fidivr
add
sub
clc
add
jmp
repnz
and
adc
aas
arpl
and
adc
(bad)
push
pop
jb
loop
les
gs
sbb
test
jmp
xchg
jp
pop
jp
add
out
out
clc
push
push
pop
clc
or
inc
sbb
js
add
sbb
aaa
pop
push
pop
pop
cmp
data16
push
ins
jne
lds
xchg
jno
mov
jae
je
jmp
test
jnp
retf
out
pop
in
aad
add
repz
jnp
inc
les
inc
clc
or
icebp
pop
imul
aas
inc
sbb
mov
loopne
fcmovne
jno
mov
loop
lea
lahf
(bad)
dec
inc
push
mov
fxch
pop
jp
add
jmp
jg
das
xchg
sbb
mov
inc
jecxz
ds
inc
cld
cmp
ds
pop
xor
pop
int3
nop
inc
pop
fldcw
push
out
adc
xchg
leave
loop
daa
aam
xchg
push
ror
imul
sbb
lock
(bad)
jecxz
fwait
sub
xor
sbb
jmp
cmp
fnstsw
in
int
pop
fld
imul
enter
xor
aad
jecxz
inc
cmp
neg
cli
sub
push
stos
ret
dec
das
mov
cmp
call
daa
ret
nop
fcomp
adc
mov
jmp
sbb
leave
cmp
inc
pop
jns
sbb
(bad)
jo
and
dec
lea
and
(bad)
xlat
dec
loopne
push
dec
push
or
jns
mov
mov
sahf
sub
and
xor
jne
dec
xchg
cwde
ja
lea
imul
(bad)
daa
pop
iret
and
icebp
add
mov
stos
dec
mov
call
add
bound
sbb
xchg
movs
dec
xchg
mov
out
mov
lods
pop
adc
ds
xchg
mov
add
mov
mov
jg
jp
inc
sar
icebp
retf
ds
dec
cmp
inc
push
repz
icebp
jne
xlat
in
sub
stos
pop
sub
les
arpl
fwait
(bad)
stc
or
(bad)
call
stc
sbb
adc
mov
scas
cld
adc
pop
repz
inc
loopne
jg
mov
ficomp
add
add
xlat
(bad)
push
(bad)
rcr
gs
dec
sbb
into
dec
mov
xor
dec
(bad)
jne
pop
or
(bad)
xor
shr
aaa
icebp
inc
imul
(bad)
jp
adc
xor
into
rol
xor
movs
scas
sub
jle
aas
leave
xor
cmp
mov
inc
add
rol
cld
into
idiv
add
loopne
sbb
add
add
inc
mov
cmp
jl
icebp
sub
jmp
mov
xlat
or
rol
xchg
mov
sub
ja
sti
inc
js
jmp
push
sbb
(bad)
les
xlat
out
scas
test
mov
adc
mov
(bad)
test
push
jne
xor
(bad)
and
or
cmps
(bad)
stc
popf
outs
inc
lock
mov
ja
mov
cld
add
cs
jecxz
(bad)
sub
les
inc
lods
dec
les
push
xchg
jecxz
les
cli
push
jl
inc
or
clc
stos
in
pop
jl
dec
icebp
les
repnz
in
mov
das
out
mov
xor
out
inc
sub
add
sar
add
mov
out
mov
mov
xlat
lea
mov
repnz
jo
push
mov
adc
iret
clc
pop
inc
adc
ja
pop
dec
test
pop
test
das
repnz
out
ds
hlt
cmp
jg
or
add
je
lock
sub
scas
cld
add
cs
iret
icebp
pop
inc
shr
sub
inc
shl
loop
cld
sbb
add
push
cli
scas
inc
inc
or
pop
in
pop
sar
idiv
add
ds
aas
lock
or
jmp
or
add
ror
adc
(bad)
add
add
add
jne
and
test
out
icebp
pop
dec
stos
pop
clc
xlat
icebp
or
int3
cmc
loop
cld
sbb
inc
lds
push
xor
add
shrd
xlat
loop
cmp
loopne
sbb
add
add
inc
mov
cwde
fcomip
cmp
inc
loopne
inc
icebp
jne
repz
clc
mov
add
mov
add
imul
add
mov
inc
push
mov
add
push
(bad)
stos
cdq
inc
rol
xchg
stc
pand
mov
add
xchg
mov
inc
cdq
fsubrp
inc
add
aam
inc
add
ror
cld
iret
pop
jg
das
pop
(bad)
cs
adc
inc
push
sar
add
push
add
jne
nop
aas
out
icebp
das
dec
call
add
out
pop
in
outs
cmp
lahf
pop
mov
arpl
xor
xor
(bad)
or
inc
mov
add
rcr
(bad)
addr16
inc
sbb
xchg
pop
jecxz
les
add
inc
pop
push
dec
icebp
out
push
jmp
add
aaa
lahf
inc
mov
add
out
pop
in
outs
cmp
lahf
pop
mov
mov
xchg
in
icebp
in
fsubr
pushf
movs
jg
retf
test
cmp
fcmovu
fstp
mov
push
mov
or
jmp
mov
or
inc
cmp
xor
jg
dec
(bad)
ret
das
les
adc
inc
jne
enter
fdivr
sub
scas
ds
shl
out
mov
cmp
data16
test
mov
loop
push
jb
cmp
cmp
push
dec
adc
pop
mov
xor
and
mov
adc
data16
inc
and
cmp
jecxz
stos
pop
jl
jle
mov
add
bound
mov
xchg
mov
xchg
mov
sub
inc
add
test
sar
cmps
xchg
icebp
xor
test
call
pop
scas
fst
xchg
mov
dec
or
out
data16
call
cmps
mov
je
sahf
adc
pop
sti
(bad)
mov
mov
aas
xchg
ds
ins
sub
xchg
lods
cmc
jmp
dec
sbb
mov
sub
xchg
push
jmp
mov
dec
in
jns
push
sti
jmp
jne
mov
sub
adc
dec
ret
shl
jmp
sub
mov
jmp
(bad)
lahf
xchg
push
sti
xchg
aad
ret
(bad)
adc
in
sbb
cmc
scas
retf
in
mov
call
jp
pop
mov
or
pop
retf
nop
sub
adc
or
pop
test
or
mov
mov
and
adc
or
int
out
cmc
scas
mov
dec
ins
jb
stos
push
movs
sub
loopne
mov
lea
jmp
imul
fisub
sti
jmp
sub
scas
and
jnp
call
xchg
out
pop
lahf
xchg
cmp
sub
fild
mov
aas
inc
jnp
inc
sbb
mov
push
cmp
icebp
ss
out
(bad)
pop
push
fwait
retf
popa
addr16
rcr
push
fdivr
dec
adc
pop
dec
push
sbb
bound
jb
mov
inc
push
and
lods
shr
pop
pusha
jnp
sbb
jno
adc
sub
sub
(bad)
and
ret
and
imul
jp
rcl
bound
frstor
and
pop
rcr
sbb
je
push
or
mov
jp
test
lods
(bad)
fld
outs
pop
mov
jecxz
inc
add
stos
ja
loop
mov
leave
cmps
pop
fucomip
push
push
xor
int
test
mov
pop
lods
dec
shl
mov
or
shl
jne
inc
jle
enter
stos
jp
jns
in
ins
pop
retf
aad
pusha
jmp
inc
adc
nop
jb
les
jnp
cmps
test
sahf
icebp
and
push
popf
sub
jns
xor
retf
adc
dec
test
sahf
cwde
stos
mov
adc
shl
xchg
push
or
jp
mov
nop
shl
aam
repz
leave
sbb
jle
cli
jl
aad
pop
test
call
pop
ret
mov
add
mov
cmps
sbb
sub
fnstenv
mov
xor
sbb
or
icebp
xor
push
ins
and
lock
push
lods
lds
xchg
mov
push
test
cdq
push
xchg
mov
push
lahf
or
mov
inc
daa
add
push
mov
xor
pop
and
jge
push
dec
push
cwde
int
test
fisubr
jae
push
mov
ret
mov
sti
mov
mov
cmc
sbb
sbb
pop
or
dec
jl
in
sbb
pop
sub
lds
ret
fs
mov
cmp
stos
push
lea
jge
jo
push
imul
gs
imul
sub
pop
mov
icebp
inc
xchg
and
pop
sbb
test
push
cli
test
stos
ficomp
rcr
cs
xchg
adc
(bad)
(bad)
mov
push
ret
cmp
dec
out
cs
xchg
sbb
outs
sahf
pop
mov
mov
je
fs
mov
push
jno
jp
pushf
mov
mov
jo
xchg
xchg
out
sub
iret
mov
(bad)
test
xor
jp
mov
in
or
add
cld
sub
shl
mov
gs
or
ret
adc
cmp
pop
xchg
repz
adc
aam
mov
push
aaa
das
adc
enter
retf
cmc
and
mov
lea
cdq
xor
or
call
pop
sbb
(bad)
xchg
(bad)
jecxz
or
mov
pop
sbb
jp
hlt
fwait
mov
into
rcl
adc
shl
cmp
xchg
gs
imul
cmps
push
pusha
data16
add
test
das
shl
inc
xor
pusha
mov
enter
iret
sub
and
xor
inc
imul
(bad)
ja
loop
enter
push
inc
mov
pop
jge
mov
and
pop
mov
dec
lock
ins
jo
lods
pop
imul
sti
hlt
scas
dec
add
out
cdq
leave
mov
lahf
mov
mov
jnp
add
aaa
mov
pop
jno
add
fiadd
mov
outs
adc
iret
outs
adc
in
adc
xor
adc
add
and
daa
jmp
ds
and
lods
mov
out
ins
retf
fisttp
pop
mov
mov
ja
daa
inc
push
out
out
cwde
scas
cdq
loopne
sbb
ret
inc
xchg
outs
pop
inc
fcomp
push
inc
shr
pop
mov
sbb
aas
test
jg
stos
push
icebp
fs
adc
jge
sti
pop
sub
icebp
aas
jecxz
loopne
fild
pop
mov
in
mov
jg
mov
inc
iret
adc
inc
fsubr
jb
xor
mov
les
add
popf
aas
sub
call
cmps
loopne
xlat
repnz
inc
jns
sub
popf
jns
ror
push
les
pop
inc
clc
jne
fistp
imul
cs
push
popa
mov
out
scas
push
aaa
call
jne
push
arpl
cld
adc
jp
in
vmaxps
jl
lods
fistp
repnz
pop
jle
and
cmps
mov
jecxz
and
movs
movs
dec
xor
movs
dec
pop
cli
fsubp
fnstcw
adc
xlat
ret
mov
std
jbe
das
push
jmp
dec
sti
push
mov
adc
push
shl
int
ds
and
ret
aam
lds
fisttp
jg
js
add
push
aam
ins
outs
add
adc
dec
cmp
adc
fs
scas
add
fucomip
movs
jecxz
cmp
xchg
dec
icebp
mov
lahf
sbb
cmps
aad
jae
cmp
or
outs
or
shl
scas
mov
je
popf
inc
or
mov
add
stc
xchg
ins
arpl
add
pop
dec
je
jge
stc
sbb
pushf
dec
test
mov
(bad)
cmp
or
inc
mov
adc
dec
jg
jmp
stc
push
(bad)
sbb
pop
out
push
cmp
mov
xor
loop
mov
gs
mov
scas
fild
pop
dec
gs
push
dec
loop
in
loopne
push
sub
daa
add
cmp
mov
pop
test
dec
adc
adc
xchg
outs
xchg
or
daa
jo
in
mov
inc
outs
mov
sbb
ins
jmp
sbb
out
aas
mov
jns
lods
pop
add
sbb
popa
or
cli
sbb
mov
pop
mov
sub
fcmove
iret
cmps
push
arpl
sub
pop
pushf
popf
fucomi
out
jge
icebp
sahf
dec
(bad)
cld
and
mov
cmp
xchg
stos
shl
lock
sbb
jns
test
pop
pop
sbb
mov
mov
dec
repnz
test
push
out
mov
les
pop
mov
push
fldcw
push
std
mov
(bad)
or
nop
sub
mul
jmp
fisttp
pop
mov
loopne
adc
mov
aaa
call
test
(bad)
rcr
std
psllw
lahf
ret
call
ror
cld
cmp
ret
adc
xchg
pop
push
cmp
test
xchg
or
addr16
push
rol
pop
dec
idiv
stc
daa
stc
popf
push
movs
dec
adc
xlat
xchg
jbe
inc
xlat
fdivr
in
pop
loopne
add
loop
test
inc
mov
enter
adc
and
xchg
repz
(bad)
push
sbb
aas
adc
and
jnp
ds
shl
aas
clc
dec
loope
stc
cmps
mov
jmp
mov
and
mov
inc
dec
adc
(bad)
cmp
jecxz
add
mov
cld
pop
stos
js
iret
push
nop
shr
mov
jns
out
fcomp
dec
fadd
add
jno
stc
pop
daa
or
jle
inc
pop
sar
sahf
push
lea
sbb
sub
jmp
js
loop
(bad)
bsf
push
sub
mov
popa
aam
scas
ret
xchg
call
cmp
fiadd
inc
icebp
jle
ficomp
mov
push
xchg
inc
cmp
sbb
ins
cli
push
jae
xor
jnp
(bad)
loope
push
ror
push
jae
push
mov
shl
pop
(bad)
lods
xor
inc
mov
ret
mov
pop
push
aam
je
out
jmp
outs
push
inc
xchg
popa
jmp
pop
mov
jl
clc
test
sti
pop
call
mov
mov
push
call
push
and
int3
jo
shl
jmp
aas
loope
fst
aam
outs
das
inc
mov
mov
inc
arpl
sub
xbegin
mov
xchg
xchg
stos
sub
(bad)
(bad)
mov
repnz
dec
or
mov
xchg
popa
xor
or
inc
xchg
arpl
add
xchg
dec
add
pop
outs
les
dec
loopne
add
xchg
call
jle
pop
ss
rcr
and
push
or
xchg
add
jb
imul
std
xchg
cld
pop
jge
jle
push
clc
mov
or
les
(bad)
xor
push
in
pop
jne
jo
pop
retf
test
xor
inc
mov
(bad)
xchg
icebp
(bad)
test
xor
aad
sub
and
in
fbld
rol
or
fdiv
aam
addr16
ret
ficomp
retf
cmps
test
popa
in
sar
jno
or
mov
(bad)
test
(bad)
clc
inc
dec
push
push
rcr
mov
hlt
mov
fmul
add
mov
pop
or
ret
sar
pop
xor
fimul
call
mov
int
jno
cs
sub
push
xor
push
popa
rcr
xlat
(bad)
fadd
inc
iret
iret
sar
xchg
ret
dec
repnz
sub
fs
mov
cld
cmp
lods
mov
sbb
push
ret
aaa
push
jo
int
mov
add
retf
sbb
sub
add
sbb
aas
adc
fisttp
fstp
and
(bad)
fwait
test
push
mov
and
and
inc
jne
aam
sub
pusha
stos
cmp
scas
in
mov
jle
clc
sub
mov
mov
add
fld
pop
push
mov
mov
sbb
not
cmp
add
jmp
jno
mov
xchg
jo
jg
push
inc
inc
dec
scas
xor
les
sbb
xchg
jno
sbb
daa
outs
push
xchg
jmp
das
hlt
ds
xchg
outs
push
retf
dec
icebp
cmp
test
ins
sbb
mov
sub
add
sub
int
bound
fisub
jb
xlat
push
nop
lods
lods
(bad)
jmp
sbb
lahf
dec
cli
xor
adc
inc
nop
xchg
inc
jecxz
cld
xchg
loop
inc
fwait
jecxz
fwait
pop
push
cmovb
fsubr
jb
test
repnz
ds
inc
xor
lahf
dec
jns
imul
jp
xlat
imul
cmp
std
pushf
jl
movs
mov
mov
or
daa
pop
clc
in
mov
int
popa
or
in
stc
call
jl
pop
xchg
mov
pop
jns
cli
repz
test
repz
cmp
add
std
(bad)
sar
jp
imul
scas
loop
retf
mov
sahf
sahf
je
aas
out
fnsave
mov
mov
push
add
rol
add
dec
xor
add
cmp
xchg
add
sub
(bad)
cmp
rcr
or
sbb
sbb
stc
mov
cmp
mov
mov
mov
mov
sub
cld
outs
mov
inc
add
adc
test
jns
jbe
std
cmps
sbb
pop
addr16
mov
loopne
jge
test
xchg
pop
fidivr
push
lds
cld
adc
sbb
in
jbe
(bad)
fidivr
inc
adc
add
sub
je
xchg
mov
and
cmp
data16
aaa
push
push
sub
mov
out
popf
xor
ds
mov
mov
inc
retf
test
cmp
dec
clc
mov
cli
dec
popa
sar
mov
add
mov
in
mov
aas
int3
mul
fwait
pusha
sub
loopne
or
call
push
sbb
mov
ret
inc
inc
(bad)
std
jne
inc
(bad)
sar
bound
jne
sbb
fistp
aad
stos
stc
xlat
std
add
cmp
cld
(bad)
xor
jl
xor
call
in
imul
in
xchg
jecxz
sub
or
into
xchg
inc
(bad)
aad
sti
push
clc
mov
inc
leave
cmp
add
inc
sbb
pop
or
out
je
push
push
retf
mov
in
xor
pop
ins
xor
jo
nop
scas
push
adc
push
dec
or
cli
inc
xor
xchg
retf
mov
add
into
test
mov
sbb
hlt
sar
add
mov
loop
mov
(bad)
into
sbb
test
imul
adc
cwde
jmp
pop
fnsave
mov
(bad)
xchg
mov
push
ror
mov
sbb
mov
cmp
dec
daa
mov
(bad)
(bad)
jne
enter
pop
fbstp
mov
cmp
ror
stc
into
jno
xchg
popf
jnp
lods
(bad)
fldenv
jp
mov
jle
mov
test
retf
cmps
xchg
(bad)
cld
xchg
lock
push
sbb
cmps
inc
jecxz
shr
sbb
pushf
jns
sbb
jg
int
xor
out
iret
sub
(bad)
cli
and
push
dec
aas
les
mov
sub
arpl
xchg
cld
pop
mov
xor
es
inc
(bad)
aad
lahf
fdivr
lds
pop
push
inc
sbb
xchg
inc
(bad)
(bad)
jo
pushf
jmp
enter
jnp
mov
dec
clc
push
mov
pop
imul
add
sub
sub
inc
js
cmps
mov
imul
pop
mov
mov
mov
inc
sub
push
jmp
jne
clc
cmp
in
repnz
aas
int3
retf
or
into
les
(bad)
sbb
in
push
jmp
and
jmp
stos
mov
dec
fld
(bad)
mov
pop
scas
test
jecxz
pusha
imul
cmp
repz
(bad)
inc
or
loop
cli
or
fcomip
cli
pop
(bad)
xor
lds
aas
jmp
mov
jl
cmp
mov
add
push
in
xor
stos
xor
out
ret
pop
(bad)
enter
cmp
adc
inc
(bad)
jmp
jecxz
es
dec
cmp
sti
fnstcw
clc
fnsave
stos
fnstcw
leave
std
scas
add
mov
ds
jno
cmps
imul
xchg
aaa
mov
xchg
inc
mov
push
mov
add
pop
aas
clc
(bad)
test
dec
pop
dec
sub
out
sub
ins
(bad)
out
xor
cdq
sbb
push
dec
movs
push
push
cmp
pop
xlat
aaa
in
mov
mov
xchg
inc
mov
cmc
scas
dec
mov
sbb
cmp
pushf
push
xchg
aad
rcl
lock
xchg
jmp
xchg
imul
jno
imul
cmp
add
shl
dec
mov
mov
fwait
daa
aas
stc
push
scas
inc
sti
xor
xchg
add
jns
sub
pop
sti
dec
mov
aaa
fwait
push
test
cmp
fdivr
push
mov
sub
fisttp
lea
sbb
fbld
fwait
movs
mov
mov
icebp
mov
adc
push
test
add
int
dec
inc
movs
mov
sahf
outs
and
cli
ins
xchg
sbb
mov
xor
pop
cmp
xchg
stos
shr
xor
xor
add
inc
jecxz
add
mov
add
xchg
xor
add
inc
jecxz
je
adc
ja
push
add
dec
sbb
(bad)
movs
jnp
(bad)
in
cmps
loop
jno
push
rol
(bad)
pop
jg
fst
fnstenv
lds
xor
add
jmp
pop
sub
pop
adc
stos
cmp
mov
out
dec
fcom
cmp
aad
fs
mov
not
mov
(bad)
lds
movs
mov
add
mov
std
add
inc
xor
pushf
mov
scas
and
mov
dec
cmp
mov
adc
add
aas
fs
adc
sbb
fld
clc
fnsave
iret
in
dec
jecxz
inc
std
out
push
rcl
inc
inc
push
outs
adc
xchg
sbb
pop
adc
add
stos
pop
rcr
fiadd
push
dec
push
sbb
nop
jmp
neg
scas
jno
add
std
mov
jg
stc
mov
or
out
push
push
jg
mov
mov
mov
or
jg
pusha
xchg
shr
mov
pop
ret
fidivr
push
inc
xchg
popf
lods
out
pop
scas
jg
dec
sbb
jnp
inc
iret
inc
(bad)
push
mov
(bad)
jae
add
xor
jo
arpl
xchg
jae
sbb
add
dec
adc
adc
push
xchg
mov
nop
aas
idiv
sub
xor
fcomp
(bad)
mov
ins
(bad)
scas
mov
int
add
stos
daa
(bad)
mov
and
dec
dec
fidivr
frstor
call
pusha
addr16
lods
xor
fwait
rol
inc
ficom
xchg
pop
cld
enter
sbb
jb
add
mov
pop
ret
pop
or
fadd
loope
mov
shl
mov
shr
mov
add
or
pop
shl
dec
(bad)
jl
lods
jmp
mov
pop
dec
add
dec
xchg
jo
mov
xchg
dec
rol
loopne
adc
rcl
mov
push
and
push
cmp
repnz
aas
jmp
dec
std
add
div
or
imul
pop
jbe
call
ds
clc
jnp
add
loopne
inc
mov
mov
push
out
xchg
mov
xor
or
call
jl
sub
enter
and
jp
test
sahf
or
cli
or
mov
lea
add
scas
cwde
aas
popa
fist
add
lods
lods
xchg
out
dec
call
mov
test
retf
jns
cmc
ret
sbb
lock
jne
out
into
(bad)
push
jnp
outs
xchg
imul
retf
mov
ja
dec
shl
in
addr16
(bad)
fist
(bad)
and
out
clc
jb
out
pop
mov
add
and
add
jae
jno
and
mov
and
(bad)
sahf
adc
xadd
push
popf
arpl
and
mov
sti
mov
mov
(bad)
outs
fsubr
ret
jle
fistp
pop
adc
test
imul
les
adc
mov
and
add
adc
mov
mov
mov
out
sbb
mov
adc
push
iret
test
lods
xchg
cmps
and
jae
jbe
jle
mul
or
movs
(bad)
pop
sbb
sar
inc
mov
jmp
dec
push
icebp
push
xchg
mov
out
dec
jbe
retf
jbe
test
in
mov
jns
push
fcomp
dec
inc
or
inc
or
mov
aad
js
repnz
shl
gs
add
movs
popf
mov
test
add
mov
jg
jl
mov
ficomp
test
shr
pop
and
add
xor
rcl
in
test
push
xor
(bad)
push
imul
mov
mov
lahf
(bad)
inc
sysenter
(bad)
or
inc
aam
aas
(bad)
ret
das
mov
pop
or
imul
repz
and
test
xchg
lea
mov
jg
mov
call
lods
fcmovnu
cli
repnz
clc
das
popa
loope
add
xor
dec
ret
mov
out
mov
scas
sbb
mov
and
cmp
stos
xchg
push
movs
aaa
jns
push
pop
push
mov
and
xchg
jge
(bad)
and
pop
mov
sbb
mov
xlat
push
cmp
jne
jmp
jb
sub
pop
icebp
jmp
leave
xchg
(bad)
dec
mov
aam
cmp
sbb
pop
js
push
xchg
pop
mov
int
or
or
pop
pop
jnp
(bad)
cs
(bad)
add
cmc
pop
or
inc
ret
scas
or
or
dec
test
mov
xchg
aam
jmp
aam
xor
xchg
jmp
mov
(bad)
push
aad
sub
push
xchg
sti
sub
(bad)
stos
loop
adc
pop
cmps
(bad)
cld
outs
jle
(bad)
mov
fadd
xchg
ins
in
dec
dec
xchg
and
enter
lods
test
mov
inc
outs
sbb
inc
icebp
jbe
in
(bad)
xor
(bad)
rcr
repz
movd
lahf
or
jl
mov
ds
movs
clc
xchg
ret
mul
imul
cmps
jl
mov
bound
pushf
das
and
mov
stc
scas
mov
push
mov
adc
outs
outs
xchg
or
(bad)
sbb
movs
pop
push
jb
(bad)
enter
jo
dec
int
jo
mov
je
(bad)
push
mov
test
dec
jb
lahf
push
js
jecxz
sahf
or
ds
cld
sbb
cmps
test
xlat
(bad)
lock
shl
or
stc
push
inc
retf
sub
aas
ins
das
ficomp
dec
clc
cmp
push
mov
push
(bad)
retf
dec
retf
addr16
pop
retf
(bad)
imul
les
pop
sti
cs
pop
sar
addr16
mov
jge
test
outs
adc
sahf
repnz
test
jb
sub
ret
cmp
arpl
fisub
clc
test
lock
std
xor
dec
stos
int
push
sub
dec
mov
sbb
jae
cmp
adc
aad
xchg
pop
imul
dec
fs
out
jge
loopne
mov
clc
icebp
ins
lock
into
xchg
ins
mov
(bad)
ds
jnp
loopne
sub
xor
(bad)
in
mov
stc
xchg
dec
push
imul
adc
mov
aas
dec
cmp
js
inc
test
push
imul
dec
adc
leave
xor
daa
xor
cld
sbb
icebp
inc
les
imul
push
mov
dec
in
pop
fstp
and
(bad)
in
cmp
lock
into
icebp
je
fist
cmc
dec
mov
pop
push
mov
jno
cmps
pop
mov
cmps
int3
lods
les
and
jo
pop
add
pop
(bad)
or
fstp
repnz
(bad)
and
pushf
xlat
(bad)
iret
mov
cmps
in
scas
icebp
mov
jg
ds
(bad)
sti
fwait
hlt
mov
pop
mov
cmp
aam
mov
arpl
jb
std
or
mov
outs
jecxz
clc
inc
lock
push
clc
mov
div
ret
retf
sub
daa
jmp
xchg
add
and
aaa
std
scas
hlt
(bad)
pop
(bad)
outs
sti
aas
js
xlat
dec
rcl
stc
das
xor
nop
aam
sbb
xchg
or
(bad)
jbe
push
pusha
xor
pop
push
dec
clc
idiv
push
js
inc
aad
clc
aaa
loope
popf
pinsrw
adc
imul
push
(bad)
(bad)
cmp
mov
into
into
mov
aam
xor
pop
push
ins
mov
mul
clc
mov
das
add
test
jmp
push
push
dec
outs
ja
adc
pusha
int3
dec
add
addr16
jg
and
inc
ret
dec
out
mov
in
mov
and
jl
cmp
retf
fwait
xlat
out
sbb
push
add
inc
ds
aam
add
les
cli
dec
pop
cmp
shr
jp
inc
and
push
xor
mov
stos
inc
mov
xor
push
lock
test
pinsrw
xlat
cmp
retf
movs
cmp
sub
fs
xor
ins
sbb
jo
dec
and
mov
push
push
push
imul
cld
nop
xor
fild
mov
push
std
stos
scas
lods
outs
and
jno
mov
(bad)
jl
test
pop
aam
or
nop
pop
repnz
cmp
jae
in
ds
lock
in
or
icebp
push
push
lock
test
retf
or
or
stos
jmp
fdivr
(bad)
mov
stos
mov
nop
push
mov
mov
jnp
fistp
mov
inc
sar
mov
xchg
ret
loopne
push
icebp
cmps
gs
fisttp
cwde
add
fidivr
cmps
add
lods
sti
and
sar
add
sbb
xor
das
sub
enter
inc
ins
pop
cli
lock
dec
out
sbb
mov
pop
in
mov
cld
pop
inc
jle
dec
fidivr
jmp
inc
jg
inc
jg
(bad)
sar
inc
int
adc
ins
retf
out
mov
ss
or
sbb
ds
js
div
cmp
sar
stos
js
leave
fisttp
ins
xchg
xchg
add
sub
fidivr
push
sti
jl
pop
pop
(bad)
fld
add
pop
dec
mov
xor
adc
loopne
jae
sub
cwde
test
push
pusha
sub
push
out
lods
or
ds
call
xor
lock
and
sub
xlat
push
sub
sbb
out
mov
ret
mov
push
imul
popf
fcomp
sbb
lock
add
mov
xchg
add
test
cdq
and
xchg
(bad)
jbe
jl
inc
mov
add
ss
aam
xlat
(bad)
inc
es
xchg
mov
xlat
xchg
fadd
loope
mov
ss
loop
mov
dec
and
mov
mov
mov
mov
and
clc
es
enter
push
inc
(bad)
sti
jns
mov
sub
stos
xor
sub
jns
push
jne
or
mov
aas
mov
(bad)
jg
jl
mov
or
sbb
cmp
in
dec
cmp
push
loopne
fnstenv
jmp
inc
or
mov
dec
iret
inc
and
mov
add
in
call
mov
pop
stos
test
inc
cdq
repz
xchg
jmp
jns
fdivr
add
mov
sub
ret
sub
aas
loope
mov
pop
clc
sub
icebp
retf
sti
and
add
(bad)
mov
inc
aaa
loopne
enter
ins
das
mov
lock
dec
outs
jg
cs
clc
ins
das
mov
lock
dec
outs
jg
cs
xor
out
icebp
jg
pop
pop
(bad)
inc
aaa
loopne
enter
ins
das
mov
lock
dec
outs
jg
cs
clc
ins
das
mov
lock
dec
outs
jg
cs
xor
out
icebp
jg
pop
pop
(bad)
inc
aaa
loopne
enter
ins
das
mov
lock
dec
outs
jg
cs
clc
ins
das
mov
lock
dec
outs
jg
cs
xor
out
icebp
jg
pop
pop
(bad)
inc
aaa
loopne
enter
ins
das
mov
lock
dec
outs
jg
cs
clc
ins
das
mov
lock
dec
outs
jg
cs
xor
out
icebp
jg
pop
pop
(bad)
inc
aaa
loopne
enter
ins
das
mov
lock
dec
outs
jg
cs
clc
ins
das
mov
lock
dec
outs
jg
cs
xor
out
icebp
jg
pop
pop
(bad)
inc
aaa
loopne
enter
ins
das
mov
lock
dec
outs
jg
cs
clc
ins
das
mov
lock
dec
outs
jg
cs
xor
out
icebp
jg
pop
pop
(bad)
inc
aaa
loopne
enter
ins
das
mov
lock
dec
outs
jg
cs
clc
ins
das
mov
lock
dec
outs
jg
cs
xor
out
icebp
jg
pop
pop
(bad)
inc
aaa
loopne
enter
ins
das
mov
lock
dec
outs
jg
cs
clc
ins
das
mov
lock
dec
outs
jg
cs
xor
out
icebp
jg
pop
pop
(bad)
inc
aaa
loopne
enter
ins
das
mov
lock
dec
outs
jg
cs
clc
ins
das
mov
lock
dec
outs
jg
cs
xor
out
icebp
jg
pop
pop
(bad)
inc
aaa
loopne
enter
ins
das
mov
lock
dec
outs
jg
cs
clc
ins
das
mov
lock
dec
outs
jg
cs
xor
out
icebp
jg
pop
pop
(bad)
inc
aaa
loopne
enter
ins
das
mov
lock
dec
outs
jg
cs
clc
ins
das
mov
lock
dec
outs
jg
cs
xor
out
icebp
jg
pop
pop
(bad)
inc
aaa
loopne
enter
ins
das
mov
lock
dec
outs
jg
cs
clc
ins
das
mov
lock
dec
outs
jg
cs
xor
out
icebp
jg
pop
pop
(bad)
inc
aaa
loopne
enter
ins
das
mov
lock
dec
outs
jg
cs
clc
ins
das
mov
lock
dec
outs
jg
cs
xor
out
icebp
jg
pop
pop
(bad)
inc
aaa
loopne
enter
ins
das
mov
lock
dec
outs
jg
cs
clc
ins
das
mov
lock
dec
outs
jg
cs
xor
out
icebp
jg
pop
pop
(bad)
inc
aaa
loopne
enter
ins
das
mov
lock
dec
outs
jg
cs
clc
ins
das
mov
lock
dec
outs
jg
cs
xor
out
icebp
jg
pop
pop
(bad)
inc
aaa
loopne
enter
ins
das
mov
lock
dec
outs
jg
cs
clc
ins
das
mov
lock
dec
outs
jg
cs
xor
out
icebp
jg
pop
pop
(bad)
inc
aaa
loopne
enter
ins
das
mov
lock
dec
outs
jg
cs
clc
ins
das
mov
lock
dec
outs
jg
cs
xor
out
icebp
jg
pop
pop
(bad)
inc
aaa
loopne
enter
ins
das
mov
lock
dec
outs
jg
cs
clc
ins
das
mov
lock
dec
outs
jg
cs
xor
out
icebp
jg
pop
pop
(bad)
inc
aaa
loopne
enter
ins
das
mov
lock
dec
outs
jg
cs
clc
ins
das
mov
lock
dec
outs
jg
cs
xor
out
icebp
jg
pop
pop
(bad)
inc
aaa
loopne
enter
ins
das
mov
lock
dec
outs
jg
cs
clc
ins
das
mov
lock
dec
outs
jg
cs
xor
out
icebp
jg
pop
pop
(bad)
inc
aaa
loopne
enter
ins
das
mov
lock
dec
outs
jg
cs
clc
ins
das
mov
lock
dec
outs
jg
cs
xor
out
icebp
jg
pop
pop
(bad)
inc
aaa
loopne
enter
ins
das
mov
lock
dec
outs
jg
cs
clc
ins
das
mov
lock
dec
outs
jg
cs
xor
out
icebp
jg
pop
pop
(bad)
inc
aaa
loopne
enter
ins
das
mov
lock
dec
outs
jg
cs
clc
ins
das
mov
lock
dec
outs
jg
cs
xor
out
icebp
jg
pop
pop
(bad)
inc
aaa
loopne
enter
ins
das
mov
lock
dec
outs
jg
cs
clc
ins
das
mov
lock
dec
outs
jg
cs
xor
out
icebp
jg
pop
pop
(bad)
inc
aaa
loopne
enter
ins
das
mov
lock
dec
outs
jg
cs
xchg
popf
pop
rcr
loop
pop
fidivr
gs
outs
shl
cmp
shr
das
test
popa
xchg
imul
fisttp
push
sub
inc
pushf
call
jo
bound
jb
fnstcw
pop
cmp
sar
xchg
cmc
xor
nop
push
mov
jg
es
dec
aaa
(bad)
mov
rcr
ftst
inc
ror
adc
or
and
test
inc
loope
cld
mov
cli
(bad)
(bad)
xchg
dec
pop
popf
mov
ret
jnp
xchg
cmp
sub
jbe
into
imul
mov
or
cs
xchg
fimul
push
mov
std
xor
sahf
adc
xchg
xor
not
scas
xchg
es
xchg
ds
pop
iret
and
loopne
out
mov
sar
and
bound
xchg
push
fwait
shl
jle
movs
mov
cmps
std
aad
out
ja
jl
movs
pop
inc
cmps
js
lds
test
cmp
mov
ror
shl
aam
int
movs
sub
int
into
test
mov
clc
pop
push
cld
sar
add
clc
mov
out
aam
xor
add
stos
mov
repnz
push
retf
sub
outs
(bad)
repnz
adc
add
add
lods
inc
imul
not
mov
out
aam
xor
add
stos
je
xchg
sub
mov
inc
loop
mov
js
stc
stc
pop
mov
in
jae
(bad)
shr
mov
lds
shl
call
inc
adc
iret
sub
add
add
test
jle
out
inc
sti
or
mov
xchg
rcl
mov
dec
jg
fwait
jg
cmps
inc
adc
icebp
inc
jg
popf
jg
cmps
inc
adc
cld
cld
(bad)
fiadd
xor
aad
loop
push
mov
inc
inc
clc
stos
jo
call
jg
cmps
inc
adc
cld
cld
pop
jp
mov
cld
(bad)
out
addr16
sbb
mov
scas
dec
aas
mov
(bad)
inc
cli
adc
inc
xor
add
test
push
inc
mov
dec
(bad)
sub
out
sti
sar
scas
repnz
mov
sub
out
(bad)
ret
(bad)
dec
loopne
mov
lock
(bad)
mov
call
mov
ins
dec
push
aam
mov
mov
imul
adc
leave
and
lahf
mul
popf
cmp
sbb
ss
xchg
rcl
and
add
stos
mov
xchg
cmp
hlt
popf
push
pop
sbb
adc
movs
fimul
or
xchg
imul
mov
or
outs
jecxz
inc
out
scas
add
or
scas
je
xchg
mov
push
push
dec
pop
pop
pop
mov
addr16
jmp
jno
clc
xchg
les
sbb
out
mov
in
aam
inc
push
sub
pop
mov
pop
outs
or
jo
xchg
inc
das
test
add
mov
cld
inc
cmps
pop
(bad)
adc
xchg
clc
jnp
shl
in
cmp
sbb
dec
cs
add
mov
int3
repz
cmp
stc
imul
sar
xor
(bad)
sub
push
push
mov
dec
push
(bad)
fidivr
push
jmp
pushf
mov
xor
and
pop
test
xchg
(bad)
cmps
(bad)
pop
ss
adc
mov
aas
push
push
mov
mov
out
sbb
xchg
xor
mov
mov
pop
cmps
stc
sahf
stos
mov
jg
std
pop
icebp
(bad)
adc
int
sub
cmc
out
or
jmp
xchg
aaa
xchg
jae
cmps
ret
stc
repnz
shl
mov
sbb
jmp
sbb
sbb
pop
sbb
dec
shl
adc
cmp
mov
lods
repnz
div
lahf
cmp
pop
xor
cwde
dec
mov
nop
gs
or
retf
scas
pop
jecxz
mov
ret
mov
adc
into
loop
dec
pop
imul
sub
push
inc
ror
xor
pop
jns
push
push
bswap
xor
ror
xchg
test
jl
(bad)
in
scas
jl
sti
ds
sar
fisubr
mov
movs
movs
dec
cmp
add
cmp
dec
jp
mov
pop
ror
inc
test
xchg
jecxz
(bad)
clc
aaa
push
aam
shr
sub
xor
in
sub
ror
pop
jmp
mov
loopne
ret
and
in
in
jecxz
(bad)
xor
sub
adc
add
in
add
and
inc
pop
and
popa
dec
ins
imul
call
(bad)
mov
js
fs
mov
sbb
mov
out
sub
(bad)
mov
pop
jl
jno
lea
aam
lods
fcmovbe
je
std
pop
in
push
ror
mov
pop
xor
adc
xchg
arpl
(bad)
mov
add
jecxz
neg
pop
mov
stos
in
add
fs
mov
mov
or
pop
xor
xor
push
fdivr
xor
clc
or
push
fdivr
outs
pop
sahf
and
shl
sub
in
test
mov
(bad)
mov
dec
mov
or
cmp
fimul
movs
retf
and
xor
add
fisub
es
inc
scas
aaa
clc
xor
add
mov
aas
in
shr
call
fsubr
mov
push
inc
add
adc
inc
add
adc
inc
add
adc
inc
add
adc
inc
add
adc
inc
add
adc
inc
add
adc
inc
add
adc
inc
add
adc
inc
add
adc
inc
add
adc
inc
add
gs
inc
push
(bad)
mov
dec
push
push
mov
add
pop
aad
jmp
dec
std
add
xor
imul
dec
cld
mov
cmps
mov
lea
xchg
(bad)
in
push
sbb
das
test
add
and
inc
movs
sbb
adc
add
(bad)
jnp
inc
jge
push
fs
cmp
and
jg
aas
adc
js
out
inc
xchg
pop
(bad)
jecxz
sub
mov
add
xchg
xor
adc
sbb
or
pop
jne
add
sbb
int3
mov
inc
pusha
inc
inc
in
(bad)
mov
xchg
mov
add
gs
pop
or
mov
call
cmc
aad
add
add
and
inc
(bad)
aam
inc
add
fs
pop
cld
sbb
inc
sbb
add
fstp
mov
sar
sub
dec
sar
(bad)
cdq
mov
jno
iret
clc
and
inc
cld
adc
push
aas
repz
add
sar
push
sub
(bad)
imul
add
add
jne
sti
ins
cmp
fidiv
pusha
aas
out
inc
sbb
inc
lahf
jg
inc
xor
out
daa
stc
inc
add
(bad)
inc
rol
inc
cdq
and
inc
push
or
jecxz
or
test
jg
cmp
pop
hlt
pop
cli
ja
add
push
inc
jecxz
jg
pusha
aas
out
loop
add
pop
pop
lds
loopne
enter
add
add
push
scas
inc
mov
add
dec
pop
lock
or
xchg
imul
sub
test
retf
(bad)
(bad)
add
pop
clc
in
pop
fstp
stc
idiv
mov
mov
jnp
inc
add
inc
loopne
jg
adc
clc
js
mov
scas
inc
mov
add
pop
adc
jbe
(bad)
pop
mov
jecxz
jg
pusha
aas
out
loop
add
ds
jg
out
inc
lock
test
(bad)
and
mov
cli
adc
mov
mov
popf
(bad)
pop
mov
jecxz
outs
mov
cmp
sbb
inc
inc
pop
(bad)
popa
cmc
fcom
dec
cld
(bad)
je
lock
or
imul
sub
paddb
push
pop
repz
jnp
icebp
adc
pusha
inc
(bad)
push
(bad)
cmp
push
add
jge
das
cld
ret
jmp
scas
out
pop
stc
push
fidivr
mov
cdq
xlat
inc
add
inc
mov
test
jg
pusha
(bad)
outs
mov
out
inc
mov
inc
add
in
pop
fstp
stc
idiv
mov
mov
jnp
jg
dec
jne
inc
xor
inc
(bad)
aam
dec
dec
test
jg
pusha
(bad)
outs
mov
jge
add
fidiv
fdivr
inc
jecxz
inc
mov
pop
repz
icebp
jg
aas
scas
loop
lahf
lock
mov
cld
adc
push
pop
stc
xchg
ins
jg
pusha
(bad)
outs
mov
test
repz
loopne
mov
int
rcr
inc
sbb
add
sar
xchg
cmp
lahf
jg
inc
xor
out
daa
stc
inc
add
mov
pop
sub
loopne
xor
loopne
inc
enter
jne
xchg
(bad)
aas
fisub
(bad)
pop
mov
scas
ins
fcmove
inc
or
imul
mov
sbb
jmp
sub
in
mov
mov
inc
or
in
call
jmp
cmps
iret
dec
or
jmp
lea
shl
pushf
mov
mov
push
call
aam
out
mov
add
xchg
pop
cmp
out
jg
fsub
push
pop
mov
pushf
(bad)
and
pop
repz
sti
in
push
idiv
neg
mov
push
pop
imul
jge
xlat
pop
cld
test
cdq
sub
inc
sahf
sar
add
bound
cmp
lds
inc
dec
inc
inc
idiv
neg
mov
push
inc
rcr
rcl
scas
psubw
pop
std
imul
sti
pop
pop
repz
sti
in
push
je
fs
pop
imul
jge
xlat
pop
cld
test
cdq
sub
inc
sahf
sar
add
bound
cmp
lds
inc
dec
inc
inc
idiv
neg
mov
push
inc
rcr
rcl
scas
psubw
pop
std
imul
sti
pop
pop
repz
sti
in
push
je
fs
pop
imul
jge
xlat
pop
cld
test
cdq
sub
inc
sahf
sar
add
bound
cmp
lds
inc
dec
inc
inc
idiv
neg
mov
push
inc
rcr
rcl
scas
psubw
pop
std
imul
sti
pop
pop
repz
sti
in
push
je
fs
pop
imul
jge
xlat
pop
cld
test
cdq
sub
inc
sahf
sar
add
bound
cmp
lds
inc
dec
inc
inc
idiv
neg
mov
push
inc
rcr
rcl
scas
psubw
pop
std
imul
sti
pop
pop
repz
sti
in
push
je
fs
pop
imul
jge
xlat
pop
cld
test
cdq
sub
inc
sahf
sar
add
bound
cmp
lds
inc
dec
inc
inc
idiv
neg
mov
push
inc
rcr
rcl
scas
psubw
pop
std
imul
sti
pop
pop
repz
sti
in
push
je
fs
pop
imul
jge
xlat
pop
cld
test
cdq
sub
inc
sahf
sar
add
bound
cmp
lds
inc
dec
inc
inc
idiv
neg
mov
push
inc
rcr
rcl
scas
psubw
pop
std
imul
sti
pop
pop
repz
sti
in
push
je
fs
loop
stc
push
jne
cli
not
mov
mov
neg
lods
scas
adc
stos
add
fwait
imul
lods
imul
cmps
iret
pop
push
jge
aaa
(bad)
aas
gs
mov
xchg
dec
pop
mov
mov
aam
sahf
dec
xor
adc
pop
inc
lock
add
cld
xor
add
jne
repnz
stos
dec
sti
outs
je
out
ret
sub
ja
pop
inc
imul
mov
std
pop
jle
inc
loopne
xchg
(bad)
xor
or
sar
add
jmp
jae
loope
std
xchg
mov
inc
add
icebp
mov
pop
inc
lock
add
cld
xor
add
jne
cli
mov
popf
pop
mov
retf
sbb
sbb
stos
inc
inc
inc
test
sbb
sbb
add
cmp
pop
inc
into
(bad)
(bad)
clc
dec
aas
gs
cli
paddb
inc
ror
cld
push
not
repz
clc
inc
inc
sbb
inc
cld
and
call
test
not
add
inc
outs
call
mov
lods
inc
inc
fild
add
ret
jg
cmp
fsubr
clc
dec
mov
cld
and
add
int
cld
push
not
add
or
inc
(bad)
mov
pop
aas
loope
pop
lods
and
inc
out
jg
inc
mov
std
pop
(bad)
adc
pop
xchg
(bad)
xor
ret
sub
add
jg
pop
inc
xchg
lock
pop
push
nop
jae
idiv
(bad)
adc
push
inc
add
das
dec
inc
sbb
dec
mov
cld
and
idiv
movs
inc
lea
inc
ret
jg
cmp
fsubr
clc
dec
mov
cld
and
add
int
cld
push
not
add
or
inc
(bad)
mov
pop
aas
loope
pop
lods
and
inc
out
ja
fbstp
adc
add
xchg
(bad)
xor
ret
sub
ja
pop
inc
imul
mov
pop
push
nop
jae
idiv
(bad)
adc
pop
inc
lock
add
aas
loope
std
xchg
mov
inc
add
icebp
scas
ret
pop
clc
inc
push
(bad)
clc
inc
push
(bad)
stos
dec
cmp
sti
popf
inc
or
inc
out
test
sbb
cld
inc
mov
std
pop
(bad)
adc
add
pop
xchg
(bad)
xor
or
sar
add
jmp
jae
loope
std
xchg
jg
aas
lock
add
out
(bad)
xor
sbb
retf
arpl
or
std
mov
xchg
lock
pop
push
nop
jae
idiv
(bad)
adc
push
inc
lock
dec
inc
sbb
loope
std
xchg
jg
aas
lock
add
hlt
mov
clc
inc
push
(bad)
clc
inc
push
(bad)
stos
dec
cmp
sti
popf
inc
or
inc
inc
test
sbb
lock
jle
fcomip
sbb
sbb
inc
cld
and
call
test
not
add
or
inc
(bad)
(bad)
clc
dec
mov
cld
and
add
int
cld
imul
(bad)
adc
mov
jmp
ret
sub
ja
pop
inc
imul
mov
std
pop
jle
inc
loopne
xchg
(bad)
xor
or
sar
add
jmp
jae
loope
std
xchg
mov
inc
add
icebp
mov
pop
inc
lock
add
cld
xor
add
jne
cli
mov
popf
pop
mov
retf
sbb
sbb
lods
inc
inc
fild
add
ret
jg
cmp
fsubr
clc
dec
mov
cld
and
add
int
cld
push
not
add
or
inc
(bad)
mov
pop
aas
loope
pop
lods
and
inc
out
ja
fbstp
adc
add
xchg
(bad)
xor
ret
sub
ja
pop
inc
imul
mov
pop
push
nop
jae
idiv
(bad)
adc
pop
inc
lock
add
aas
loope
std
xchg
mov
inc
add
icebp
scas
ret
pop
clc
inc
push
(bad)
clc
inc
push
(bad)
stos
dec
cmp
sti
popf
inc
or
inc
fild
add
retf
sbb
sbb
inc
cld
and
call
test
not
add
or
inc
(bad)
(bad)
clc
dec
mov
cld
and
add
int
cld
imul
(bad)
adc
mov
jmp
ret
sub
ja
pop
inc
imul
mov
std
pop
jle
inc
loopne
xchg
(bad)
xor
or
sar
add
jmp
jae
loope
std
xchg
mov
inc
add
icebp
mov
pop
inc
lock
add
cld
xor
add
jne
cli
mov
popf
pop
mov
retf
sbb
sbb
lods
inc
inc
fild
add
ret
jg
cmp
fsubr
clc
dec
mov
cld
and
add
int
cld
push
not
add
or
inc
(bad)
mov
pop
aas
loope
pop
lods
and
inc
out
ja
fbstp
adc
add
xchg
(bad)
xor
ret
sub
ja
pop
inc
imul
mov
loop
mov
ret
enter
movs
inc
or
inc
out
test
sbb
cld
inc
mov
std
pop
mov
xchg
(bad)
xor
lods
add
in
push
les
sub
push
lahf
lahf
cmc
xlat
aas
not
inc
test
es
cmp
fucomp
clc
dec
inc
gs
cli
(bad)
and
add
int
cld
push
not
add
or
inc
(bad)
mov
sar
add
mov
std
hlt
mov
sbb
idiv
cld
sub
or
add
fwait
dec
mov
inc
sbb
stos
inc
inc
out
test
sbb
adc
add
lahf
sti
jmp
inc
xor
add
in
jae
add
clc
push
in
es
aas
ja
add
aaa
std
xchg
jg
cmp
add
icebp
mov
push
inc
xor
add
cld
and
add
out
cli
pop
lock
cld
idiv
not
pop
xor
fucomp
clc
dec
aas
gs
pop
clc
inc
inc
std
jle
lahf
jecxz
nop/reserved
and
std
mov
xchg
inc
add
clc
inc
sub
out
(bad)
out
ret
inc
sub
out
iret
out
ret
cwde
jae
std
loop
add
mov
or
jg
(bad)
clc
dec
jg
mov
inc
shr
(bad)
adc
psubw
jae
(bad)
lock
stc
in
jae
(bad)
lock
in
es
aas
js
mov
add
sbb
xlat
ret
mov
jl
sti
sub
mov
add
push
inc
or
cld
xbegin
add
cld
xbegin
push
jg
shr
jl
aas
div
cmps
lahf
jmp
push
cs
xchg
fsub
or
shr
dec
inc
sbb
sbb
ret
(bad)
jnp
(bad)
arpl
sub
add
(bad)
arpl
sub
adc
push
xchg
dec
jg
sbb
dec
inc
sbb
aas
gs
cli
or
shr
(bad)
adc
psubw
jae
(bad)
lock
stc
in
jae
(bad)
lock
jle
jg
imul
jg
ja
pop
inc
imul
sbb
call
jp
in
mov
cmp
ins
inc
retf
sbb
xchg
cmp
dec
push
or
add
sti
call
inc
add
lock
scas
xchg
sti
data16
add
daa
cwde
mov
(bad)
ss
push
aam
sbb
push
mov
inc
loop
fisub
les
ret
push
xchg
lds
fsub
mov
sbb
jmp
jae
or
(bad)
outs
adc
lahf
clc
xchg
sahf
aas
in
mov
and
mov
(bad)
popf
fnstsw
cmp
inc
mov
pop
xchg
push
in
rcl
sbb
retf
sbb
pushf
mov
pop
ja
inc
imul
outs
in
fistp
fidivr
dec
cmp
aam
imul
sbb
mov
mov
das
in
jae
int
cmp
xchg
shl
lock
aad
xchg
stos
or
sub
mov
add
mov
sub
rcr
int3
mov
push
into
(bad)
jo
mov
pop
sbb
mov
loop
fstp
aad
movs
scas
xlat
dec
das
fadd
idiv
lock
jmp
mov
jecxz
popf
cs
push
xchg
cmp
mov
scas
and
addr16
or
sar
sbb
in
and
mov
xor
fs
(bad)
pop
pop
xchg
mov
mov
mov
lods
cld
jmp
sbb
ret
inc
or
loop
test
or
fcomp
fst
retf
pop
ss
jnp
pop
das
fadd
sahf
mov
mov
jbe
stos
call
inc
xchg
mov
push
clc
retf
mov
ss
mov
dec
loop
xchg
iret
into
aas
or
push
(bad)
pop
daa
shl
sub
aam
in
adc
dec
out
cmc
push
inc
sbb
cmp
add
ror
lods
hlt
sbb
push
mov
cmps
jl
std
movs
xor
imul
mov
jns
xor
inc
in
in
imul
imul
clc
std
loop
fisub
loope
xlat
mov
imul
stos
push
cdq
sbb
(bad)
mov
inc
inc
mov
push
lods
push
push
dec
push
fmul
in
iret
int
mov
aas
les
(bad)
ror
adc
mov
add
retf
test
jns
movs
js
pushf
mov
fcmovnu
mov
(bad)
(bad)
mov
pop
jns
aaa
ret
mov
mov
inc
ror
xchg
adc
shl
aas
dec
jmp
fcos
add
xchg
mov
sbb
dec
mov
push
pop
test
iret
jo
mov
test
pop
clc
lods
jecxz
in
clc
stc
jnp
xchg
cmc
in
aas
add
rcl
sbb
jecxz
dec
xchg
and
stc
cwde
arpl
fldl2t
pop
lahf
mov
in
leave
paddsb
icebp
add
xlat
dec
mov
les
mov
sbb
(bad)
enter
or
call
add
iret
cld
and
pop
inc
call
idiv
pop
fstp
or
push
xlat
mov
imul
ins
cmp
cdq
dec
sbb
mov
daa
mov
xchg
out
sub
mov
mov
and
inc
pop
add
jmp
inc
aad
inc
mov
push
jmp
pop
ins
dec
cwde
jns
xor
out
repz
test
push
ret
aas
mov
adc
shl
mov
jae
outs
in
dec
adc
xor
xor
adc
(bad)
fdivr
in
popa
lock
clc
mov
lea
ret
mov
dec
push
jae
es
inc
push
xor
add
cmps
movs
jp
(bad)
out
fld
(bad)
aas
mov
and
out
xchg
jg
fdiv
inc
add
fcom
add
clc
ret
ret
imul
cli
mov
add
xchg
ret
and
adc
sub
jb
lock
psubusw
daa
sar
sbb
push
mov
cmp
dec
mov
outs
cmc
or
movs
pusha
(bad)
jmp
jge
repnz
mov
pop
jns
scas
(bad)
dec
pop
dec
std
lock
loope
and
push
(bad)
cmc
jns
retf
repnz
push
sti
and
push
jo
inc
ins
std
fidiv
fsub
dec
pop
(bad)
rcr
or
pop
mov
sub
xchg
mov
scas
add
scas
movs
dec
add
cli
jae
xor
outs
ret
jecxz
sub
ror
dec
inc
lock
icebp
jmp
jmp
fist
jmp
mov
jno
xchg
pop
int3
je
popa
pop
retf
mov
pop
add
fstp
mov
jle
fist
shr
mov
test
loop
cmp
pop
in
push
pop
cmp
loope
pop
test
xor
push
clc
add
es
not
sub
cdq
sbb
fs
lds
test
ins
ret
sub
add
clc
fwait
lock
cli
cmps
mov
mov
call
jbe
fadd
es
inc
jno
das
mov
add
ins
aas
hlt
or
test
add
xor
(bad)
and
pop
jbe
ficom
mov
push
push
jbe
mov
idiv
in
dec
mov
inc
adc
mov
jae
scas
aad
adc
je
xchg
loope
xchg
or
imul
adc
jle
jbe
xchg
mov
add
clc
sbb
xlat
adc
jecxz
call
mov
add
popa
xchg
push
mov
inc
retf
lods
mov
mov
jmp
ds
daa
clc
pop
loope
inc
mov
fwait
sbb
sub
je
ds
in
xchg
sti
paddb
clc
jne
outs
sbb
push
(bad)
jecxz
mov
fwait
leave
daa
mov
and
ret
jns
ins
shl
mov
daa
call
add
jmp
inc
shr
hlt
fsub
dec
inc
in
or
loop
mov
cld
sbb
xor
hlt
fwait
div
cld
cmp
mov
mov
sbb
mov
or
mov
sbb
push
add
mov
sub
(bad)
mov
pop
out
test
push
mov
mov
lds
fsub
sbb
xlat
push
push
jle
rcr
pop
sbb
add
inc
mov
mov
cld
xor
pop
imul
enter
xor
inc
add
clc
adc
add
mov
or
mov
into
pop
retf
imul
xor
add
or
dec
int3
or
mov
fwait
lds
xchg
lahf
add
or
mov
ja
inc
clc
jp
pop
lock
std
sahf
dec
mov
mov
mov
int3
jle
jl
aam
adc
sahf
mov
ss
fidivr
ret
sbb
and
jg
hlt
jb
addr16
call
aam
cmp
shl
sti
retf
or
jecxz
dec
ins
xchg
and
jbe
(bad)
mov
pop
pop
pop
in
inc
(bad)
movs
stos
clc
jnp
mov
(bad)
mov
leave
and
stc
call
ds
(bad)
sub
ds
clc
add
test
leave
movs
inc
push
cdq
sub
aam
sbb
xchg
push
inc
fsub
fs
push
pop
icebp
outs
loope
mov
imul
pop
(bad)
outs
pushf
ins
in
pop
int3
mov
hlt
scas
(bad)
(bad)
loope
ret
lahf
sbb
lea
add
cs
ins
dec
dec
jns
popa
gs
xchg
dec
add
xchg
and
imul
adc
retf
add
dec
jb
jnp
or
loop
fdivr
xchg
and
or
cmp
mov
das
daa
jge
in
cld
out
add
jmp
mov
add
clc
or
ins
cmp
cmp
imul
fisubr
daa
mov
mov
cmps
in
xchg
mov
add
dec
sar
call
(bad)
mov
jne
cld
dec
lock
les
dec
inc
push
lock
cmps
mov
rcr
outs
mov
pop
add
jns
lods
(bad)
es
mov
adc
add
aas
mov
xor
shr
je
push
push
mov
in
lods
jle
xor
nop
adc
sbb
pop
enter
arpl
xchg
in
push
lock
push
dec
clc
jg
shl
sar
jge
mov
xor
out
sbb
and
and
fistp
mov
mov
sahf
fldcw
adc
inc
clc
inc
loope
icebp
pop
xchg
dec
pop
(bad)
std
ds
jge
xlat
sub
lock
out
sbb
jg
fld
dec
xchg
dec
mov
cdq
outs
and
mov
push
mov
mov
pop
sbb
into
adc
inc
pop
fidiv
push
mov
jl
add
loop
clc
es
xor
inc
cmps
imul
dec
add
stos
out
cli
or
push
dec
jle
pop
adc
aaa
clc
push
pop
jg
xchg
dec
mov
mov
pop
dec
and
scas
pop
sub
xor
ds
cli
lods
lock
loop
scas
jecxz
dec
loop
mov
call
imul
test
(bad)
jo
jo
mov
cmps
or
adc
js
pop
xchg
ins
cmp
out
cdq
(bad)
sbb
lea
jge
jbe
xchg
pop
fwait
jle
std
mov
jl
icebp
out
mov
cmps
popf
sub
push
int
jo
adc
add
and
fucom
add
dec
iret
mov
fidiv
mov
into
movs
cmps
pop
sar
and
mov
loope
repnz
aas
mov
pop
fcos
add
aas
fnstcw
mov
(bad)
mov
mov
aaa
add
(bad)
adc
inc
fistp
ja
call
das
inc
or
mov
in
fcomp
in
ret
cld
adc
add
push
xchg
mov
add
(bad)
std
test
ficom
(bad)
jl
loop
int
les
jl
pop
lods
push
add
jg
cli
or
and
xlat
inc
mov
mov
sbb
xor
sub
pop
data16
xchg
pop
retf
ja
sub
lods
xor
jle
pop
push
mov
mov
call
loop
xchg
pop
enter
and
sub
xchg
push
push
cmp
loopne
in
cmps
jecxz
fidiv
out
(bad)
adc
fld
mov
out
in
cdq
fmul
hlt
scas
mov
lock
inc
mov
cmp
jne
lds
xchg
loop
cmp
mov
jmp
add
push
xor
lahf
push
xchg
or
outs
outs
paddsb
sub
pop
inc
dec
jg
int3
and
fisttp
ret
or
jg
pop
mov
daa
lahf
dec
icebp
mov
fiadd
sub
int
mov
push
sbb
mov
scas
xor
pop
cld
test
jo
rcl
les
push
js
imul
cmps
jmp
push
xchg
mov
add
jmp
xor
icebp
aas
dec
div
(bad)
loop
ret
jge
push
clc
pop
out
fisub
add
and
xchg
add
cmp
xor
jp
mov
jle
js
ud2
js
fisub
cmps
xor
dec
lods
jnp
dec
mul
in
outs
inc
lahf
mov
ret
pop
mov
add
push
mov
in
mov
in
push
sbb
xchg
mov
mov
fsub
sub
ror
(bad)
lods
cmc
or
mov
dec
push
xor
(bad)
retf
xlat
daa
mov
pop
xchg
fdivr
sbb
test
xchg
cld
pop
sti
xor
dec
nop
jmp
jg
mov
cmc
pop
aaa
out
fsubr
repnz
add
adc
loope
add
scas
cs
jae
add
jmp
(bad)
in
fwait
ins
mov
fnsave
scas
pop
movs
jnp
xchg
inc
add
clc
add
pop
jge
ret
jp
xchg
(bad)
test
push
fsubrp
out
js
mov
and
adc
cmp
aam
adc
jge
in
jle
push
pop
push
(bad)
or
call
pop
push
aas
lock
or
mov
cmp
sub
pop
sbb
repz
jmp
addr16
pop
shl
pushf
js
hlt
inc
mov
lea
in
dec
add
outs
or
(bad)
neg
ja
shl
mov
fisubr
aam
imul
cmp
mov
mov
cs
ss
mov
cmp
mov
xor
call
push
aam
jo
inc
jp
leave
push
xchg
push
inc
dec
add
adc
sbb
aas
ins
cmp
enter
shl
adc
pusha
mov
shl
adc
shl
adc
shl
adc
add
(bad)
(bad)
xor
rol
stos
jle
repnz
jp
shr
mov
je
aas
imul
jg
jge
add
das
inc
jecxz
ds
sub
jg
and
inc
inc
pusha
mov
jl
pop
ins
inc
shr
in
clc
(bad)
inc
daa
inc
inc
or
and
xchg
pop
jl
shr
sub
pop
in
mov
xor
ret
xlat
sub
scas
or
mov
shl
dec
shl
mov
aas
ins
jg
inc
fcomp
push
xlat
pop
icebp
out
push
pop
adc
cmp
(bad)
aaa
mov
and
adc
pextrw
sbb
or
(bad)
jg
jae
or
sub
clc
mov
(bad)
loopne
scas
jno
test
(bad)
not
dec
(bad)
cld
test
loop
add
sbb
mov
inc
popf
cld
pop
sbb
popw
jno
call
cmps
(bad)
fistp
add
dec
mov
or
cli
adc
cmp
sar
push
(bad)
icebp
or
pop
daa
ins
stos
cli
pushf
push
rcl
aas
fisttp
dec
lock
jg
push
sub
pop
add
retf
test
jg
jecxz
imul
dec
loopne
(bad)
(bad)
cli
fmul
in
or
xchg
inc
(bad)
inc
scas
mov
loope
mov
add
retf
js
sti
ds
push
aas
add
inc
(bad)
sbb
out
out
inc
xchg
enter
aad
clc
and
inc
sti
or
xchg
mov
mov
cdq
mov
jg
sub
psubq
dec
cld
xchg
mov
iret
pop
out
pop
cmp
ss
inc
lock
ins
pusha
adc
in
div
lds
lahf
fisubr
loopne
sti
cli
iret
(bad)
xchg
sub
sahf
rol
pop
lock
cmp
popa
mov
jbe
aam
hlt
or
clc
repz
and
scas
xor
push
adc
hlt
push
aam
fcomp
adc
mov
add
std
imul
lahf
adc
add
arpl
add
ins
pop
pop
cld
adc
ret
inc
scas
retf
jg
add
pushf
jg
pop
cld
jne
push
ss
jg
imul
aam
cwde
outs
outs
out
mov
sub
arpl
xchg
push
jno
inc
jp
cld
adc
inc
pop
sbb
mov
(bad)
pop
xor
test
gs
std
popf
cmp
scas
fsubr
sahf
push
lea
shl
(bad)
add
ins
sbb
sbb
add
mov
clc
test
cmp
xlat
mov
das
cmp
xor
(bad)
sub
lahf
clc
sub
in
xchg
loop
fcomip
in
inc
movs
jmp
shl
push
test
inc
sar
daa
dec
aam
retf
lods
jb
out
in
daa
jecxz
sbb
mov
xchg
hlt
sbb
sar
rcr
jg
icebp
sahf
(bad)
call
dec
ja
inc
inc
arpl
sub
lods
add
push
mov
leave
aas
hlt
push
scas
lods
mov
clc
and
aas
add
fwait
stc
push
sub
jg
inc
out
je
push
daa
sbb
out
gs
dec
jle
jmp
lds
movs
cmps
js
sbb
(bad)
neg
or
in
xor
ds
movs
inc
push
xchg
sub
push
xchg
push
movs
xor
imul
or
pop
popa
cld
jno
arpl
pop
pop
jmp
ja
ss
fcom
xchg
push
into
cmp
pop
pop
repnz
(bad)
lahf
sbb
add
fneni(8087
mov
outs
scas
popa
pop
mov
xlat
mov
jl
sbb
jae
jecxz
repnz
mov
cmps
lods
ins
inc
sahf
mov
imul
push
cmp
jecxz
or
(bad)
cli
in
ss
ins
mov
jmp
and
adc
pop
sahf
pop
lock
scas
mov
clc
mov
or
push
add
push
pop
xchg
test
dec
jnp
mov
sbb
xor
mov
pop
mov
pop
dec
lock
test
stos
fwait
pop
jle
mov
mov
ds
adc
(bad)
jb
mov
pop
or
repnz
hlt
cmp
inc
jnp
push
fdiv
aas
clc
and
cld
mov
adc
add
repnz
add
mov
add
mov
hlt
mov
movs
xchg
lock
mov
inc
sub
pop
jle
cmps
fnsave
(bad)
out
aas
adc
add
repnz
add
mov
ins
pop
fcom
loop
mov
aam
ins
and
adc
sub
stos
test
cld
daa
scas
jle
pop
aaa
in
sub
add
jecxz
inc
ins
aas
stc
xor
outs
(bad)
mov
jmp
pop
inc
scas
sbb
push
cmp
adc
add
cmp
pop
or
cld
cdq
outs
mov
add
ja
call
psllq
dec
pop
test
inc
rcl
sub
and
add
lock
bound
fiadd
fld
in
sahf
(bad)
pop
push
xchg
mov
add
int3
cmp
inc
pusha
mov
jl
clc
cmp
idiv
cld
pop
cmps
sub
push
push
nop
daa
and
add
aam
jae
push
inc
outs
retf
call
(bad)
lock
dec
nop
leave
sub
mov
cld
lea
xlat
mov
inc
mov
inc
in
xchg
and
add
xor
jecxz
test
pop
adc
test
ror
adc
mov
fbstp
inc
sbb
inc
outs
pop
cs
and
data16
icebp
ja
cld
lds
test
xchg
(bad)
addr16
xor
in
enter
into
mov
sti
out
add
adc
push
loopne
retf
pop
(bad)
into
test
pop
fldenv
ss
pushf
jns
rcl
pop
mov
out
mov
fidiv
xchg
inc
inc
lods
data16
lahf
repnz
mov
lods
inc
hlt
xchg
mov
popa
(bad)
sbb
inc
aam
xor
xchg
dec
mov
dec
push
add
adc
stos
pop
mov
hlt
add
(bad)
std
movs
sub
shl
scas
fxch
and
fst
shl
mul
aas
add
loopne
inc
fmul
inc
shl
inc
shl
inc
or
inc
fistp
ret
fisttp
fist
ds
neg
ja
cmp
ins
push
(bad)
pop
outs
sbb
jl
icebp
scas
cdq
ins
sti
pop
jl
lock
repnz
adc
or
sub
and
push
mov
jne
outs
ja
stos
ins
aas
les
pop
retf
mov
push
dec
add
std
nop
mov
jecxz
(bad)
std
addr16
mov
push
mov
daa
lea
sub
xor
sbb
or
lds
shl
imul
or
aas
xchg
(bad)
push
aaa
sar
cld
outs
std
mov
lahf
dec
mov
push
xchg
nop
inc
or
and
adc
addr16
lahf
mov
in
ins
jecxz
add
lea
inc
loope
or
add
pop
xor
dec
repz
sbb
sub
popa
in
inc
jmp
das
test
mov
cmp
inc
movs
push
into
sbb
xor
arpl
popf
mov
inc
add
das
adc
add
int3
(bad)
es
xor
add
addr16
dec
sbb
arpl
test
loop
sub
sar
iret
inc
add
icebp
xlat
ret
outs
sub
pushf
xchg
cmp
scas
test
arpl
mov
cmp
mov
add
movs
mov
imul
and
imul
pop
lahf
cmps
fisubr
or
add
fbld
jmp
imul
inc
jle
jmp
xchg
jno
add
pop
icebp
setno
je
rcr
xor
std
cld
(bad)
xlat
dec
cmp
jno
mov
add
xchg
mov
retf
(bad)
adc
sahf
inc
in
arpl
movs
aad
repnz
xchg
inc
into
cmps
cmp
(bad)
mov
and
jmp
xchg
cmp
iret
popa
lods
and
and
add
pop
mov
fisttp
pop
call
cmps
adc
push
pop
retf
and
in
fidivr
iret
clc
dec
aas
imul
push
pop
ins
sti
gs
dec
cmp
xlat
ficom
pop
addr16
jmpw
and
xor
pop
lock
int
jmp
sbb
or
sbb
dec
std
xor
sbb
jmp
leave
out
out
inc
jge
inc
inc
dec
pop
add
add
pop
aas
in
mov
sub
add
ins
xchg
cli
ins
movs
cld
xor
int3
clc
leave
scas
clc
out
in
(bad)
popa
aam
fistp
pop
stc
js
test
push
fstp
sbb
or
neg
daa
xchg
dec
shl
fldenv
data16
fild
pop
les
cmp
fdiv
jecxz
les
jbe
add
add
inc
mov
sbb
xor
imul
int
sahf
ss
ret
mov
fs
jb
cmp
aas
jbe
pop
clc
push
loopne
(bad)
loope
pop
fiadd
movs
outs
jmp
push
push
mov
sbb
xor
repnz
clc
es
mov
push
aaa
rep
icebp
push
stos
and
jmp
mov
mov
adc
jp
mov
out
mov
inc
push
cmp
xchg
retf
in
cmp
lods
fbstp
pushf
outs
cld
adc
ret
mov
inc
imul
shl
(bad)
lahf
cmps
jmp
sub
out
lds
jecxz
rcr
call
push
test
jno
sahf
lods
mov
mov
sub
jg
dec
pusha
inc
pop
adc
add
je
push
retf
xchg
mov
dec
xor
cmp
shl
mov
std
sahf
jle
clc
stos
jecxz
xchg
push
mov
ret
test
sbb
push
and
pushf
arpl
retf
pop
sbb
cld
adc
repnz
add
push
fisubr
jmp
retf
nop
jp
aad
inc
pop
aas
imul
mov
sub
fcomp
adc
xchg
arpl
stos
dec
retf
stos
inc
scas
jle
repz
xchg
les
stc
pop
loope
jle
mov
in
pop
sub
push
inc
stos
mov
mov
pop
bound
test
fwait
sti
(bad)
out
pop
inc
shl
aad
lahf
pop
mov
(bad)
sub
xchg
mov
call
mov
xor
push
lea
push
xor
cld
or
pop
mov
ds
sar
mov
pop
cmc
mov
outs
sbb
push
clc
push
loop
add
mov
fisub
push
jbe
and
(bad)
jbe
movs
jl
icebp
out
ret
clc
jae
iret
(bad)
pop
pop
cld
inc
imul
inc
sbb
fidivr
xchg
and
inc
daa
sbb
sbb
lds
ss
mov
dec
imul
mov
rcr
xor
jecxz
sbb
add
ret
sbb
push
mov
jg
pop
ret
js
iret
dec
(bad)
neg
int
stos
pop
movs
div
leave
xor
mov
mov
fadd
ss
pop
loop
pop
lock
cld
addr16
ret
outs
xchg
leave
mov
fwait
adc
jne
ss
mov
xor
sbb
pop
mov
pop
jmp
mov
scas
lds
pop
lds
outs
sbb
mov
sete
and
adc
idiv
and
mov
or
std
stos
and
shl
sub
rcr
mov
(bad)
jne
bnd
pop
(bad)
pop
pop
and
test
fdivr
dec
sub
ins
mov
inc
dec
mov
mov
push
mov
ror
ror
inc
jnp
fist
dec
(bad)
fmul
sub
push
sub
push
sub
push
sub
daa
inc
add
cmp
scas
cmp
out
xchg
(bad)
inc
cmp
sar
add
dec
psubw
out
add
mov
stos
mov
push
test
shr
and
lds
push
das
es
mov
fcomp
arpl
test
mov
loop
mov
dec
(bad)
push
fistp
sub
mov
pop
jg
push
and
sub
(bad)
cmp
jle
pop
loope
xor
enter
cmc
lods
dec
sbb
mov
jge
(bad)
sti
lds
aad
sti
stos
push
sub
sbb
jae
xchg
js
pushf
mov
mov
jl
hlt
clc
jg
fisttp
dec
cmps
les
aaa
xor
mov
(bad)
neg
adc
mov
inc
sar
into
add
jge
out
and
mov
cmps
test
cmp
jl
clc
mov
inc
xlat
mov
xor
(bad)
leave
adc
pop
xor
pop
repz
clc
mov
mov
aas
adc
movs
cmp
(bad)
in
dec
in
repnz
out
in
loop
sub
and
cmp
dec
dec
mov
xor
dec
dec
out
cmp
icebp
stos
loop
xor
cmp
jecxz
imul
cmp
mov
out
sbb
jp
push
scas
dec
ins
sbb
dec
xor
jecxz
mov
pop
les
cmc
(bad)
mov
jmp
popf
cmp
xchg
clc
stc
mov
add
in
jns
retf
inc
rcl
jmp
dec
and
(bad)
xor
pop
jno
inc
dec
repz
(bad)
aad
pop
in
mov
pop
mov
lea
mov
aam
dec
and
dec
scas
rol
pop
push
cmp
lock
loop
ret
aad
cmp
sub
shr
adc
out
popf
mov
cmps
test
popf
out
cmp
push
and
pop
mov
ds
pop
aad
push
dec
das
outs
in
gs
test
dec
add
adc
pop
les
xchg
cli
jg
mov
sar
rol
fnsave
repnz
or
push
sub
sub
xchg
mov
sar
leave
loop
loop
inc
(bad)
adc
into
jle
pop
mov
xlat
cmp
stos
jle
clc
movs
jecxz
add
mov
fidivr
xor
mov
jecxz
adc
lea
(bad)
mov
jl
loope
hlt
pop
pop
loop
lods
ins
movs
mov
xchg
mov
sub
cmps
shl
pop
push
jg
stos
loop
jp
pop
(bad)
cmc
sbb
int
imul
push
and
aaa
test
test
inc
fimul
adc
jg
imul
call
sub
retf
mov
mov
sbb
fwait
sti
inc
pop
aad
xor
push
aam
pop
leave
cmp
and
aad
mov
xor
aad
daa
je
es
js
loop
mov
(bad)
pop
clc
dec
lds
xchg
and
adc
push
shl
add
lods
jle
lahf
sbb
cmps
les
fldcw
jne
loopne
std
sub
inc
adc
adc
cmp
jecxz
lds
call
aas
icebp
add
cmp
dec
pop
sbb
jmp
and
jmp
or
cmps
(bad)
mov
std
and
jnp
scas
frstor
iret
inc
sbb
setge
jl
icebp
jle
test
mov
sar
cmovno
lds
aas
push
xchg
std
fwait
jno
adc
mov
adc
dec
mov
mul
adc
sbb
fdivr
fnstcw
les
lahf
jecxz
pop
jmp
imul
sbb
aaa
xor
jle
js
ret
repz
adc
jmp
mov
cli
inc
adc
xor
xchg
iret
dec
add
inc
mov
pusha
out
fild
sysexit
sbb
or
aaa
mov
pop
pop
retf
cmp
sahf
mov
js
neg
inc
fwait
inc
icebp
jg
sub
scas
mov
call
sbb
inc
adc
sbb
jl
clc
pop
movs
dec
cmps
js
(bad)
sbb
int
or
mov
sbb
movs
lock
inc
mov
mov
pop
jmp
cmp
or
retf
inc
(bad)
cmp
or
pusha
ins
mov
sar
(bad)
jg
inc
cld
fs
pop
aam
pop
(bad)
and
mov
int
aad
movs
xchg
aam
ficom
sbb
add
add
pop
ret
(bad)
push
clc
sar
ret
jmp
mov
aam
out
add
fiadd
sahf
sub
or
(bad)
clc
iret
mul
bswap
mov
cmc
imul
aaa
pop
jl
cmp
jbe
sbb
mov
cld
jno
scas
(bad)
out
pop
or
push
lock
ror
ret
or
ins
mov
inc
out
xchg
mov
cmc
jge
loop
xchg
mov
fsubr
mov
repz
adc
add
(bad)
cmps
cld
adc
mov
mov
sbb
fsubrp
cmp
inc
mov
adc
stc
fnsave
mov
into
js
into
ret
lea
cld
pop
jecxz
addr16
les
stos
jmp
jo
lock
add
xchg
push
nop
je
or
pop
shr
cdq
dec
mov
js
and
mov
call
in
lods
push
sub
repnz
in
jae
xlat
jg
pop
mov
and
das
mov
dec
dec
outs
jne
inc
enter
add
sbb
scas
arpl
sbb
sbb
cmps
jae
imul
mov
dec
push
in
fsub
les
fnsave
ret
out
jae
sti
dec
jl
mov
(bad)
daa
xor
movs
pop
sbb
add
sbb
mov
dec
test
outs
xchg
ret
aam
or
mov
test
fwait
sbb
jno
pushf
outs
es
shl
cs
mov
mov
(bad)
fstp
loop
(bad)
repnz
mov
sub
bound
repnz
scas
out
repnz
fdiv
dec
arpl
ins
cmp
test
(bad)
ss
jecxz
adc
cmp
xchg
push
lock
mov
ins
sti
inc
test
ss
ins
jo
fmul
inc
cld
popa
clc
stos
movs
mov
loop
push
jmp
and
and
inc
add
retf
out
rcl
jg
(bad)
push
jmp
shl
retf
mov
add
loope
mov
lods
inc
mov
mov
jmp
cmps
stos
imul
mov
add
cld
or
rol
fwait
ret
ds
cmp
in
jp
test
outs
lods
call
sub
ret
aaa
and
pop
or
dec
(bad)
fisubr
lock
mov
cmp
cmps
js
push
mov
adc
fimul
or
outs
sbb
iret
xor
jnp
jbe
jbe
pop
sbb
inc
icebp
mov
jl
loop
push
les
ja
aas
mov
call
jmp
imul
lea
sar
jmp
imul
mov
push
add
pop
inc
in
add
mov
ss
adc
cmp
shr
jp
test
das
sahf
not
dec
iret
cmp
std
in
std
jae
pop
mov
in
jne
(bad)
fild
mov
in
fst
mov
push
out
push
lods
pusha
out
je
not
repz
int
jns
out
scas
daa
jb
and
movs
cwde
repnz
mov
inc
fcmovbe
xor
inc
mov
cmp
adc
imul
shl
lea
pusha
or
cmc
cmps
ins
lods
adc
xchg
dec
les
shl
mov
ins
mov
push
sub
mov
add
sar
dec
sti
rcr
inc
movs
aaa
adc
das
dec
jmp
fistp
stos
mov
ds
in
inc
dec
inc
je
fwait
xchg
push
push
rol
in
push
mov
pusha
mov
pop
cs
inc
dec
inc
push
or
and
push
mov
pusha
mov
pop
cs
inc
dec
inc
push
or
and
push
mov
pusha
mov
pop
cs
inc
dec
inc
push
or
and
push
mov
pusha
mov
pop
cs
inc
dec
inc
push
or
and
push
mov
pusha
mov
pop
cs
inc
dec
inc
push
or
and
push
mov
pusha
mov
pop
cs
inc
dec
inc
push
or
and
push
mov
pusha
mov
pop
cs
inc
dec
inc
push
or
and
rcr
shl
ss
sub
or
ror
cs
sbb
imul
push
ins
mov
jecxz
shl
add
movs
fild
sub
and
inc
ficom
add
lahf
inc
push
or
cmp
add
add
idiv
nop
fcom
adc
jecxz
dec
out
sar
inc
movs
aaa
adc
jp
loopne
in
jmp
ds
int3
gs
sub
xchg
push
call
mov
clc
mov
clc
mov
clc
mov
clc
mov
clc
mov
clc
mov
clc
mov
clc
mov
clc
mov
clc
mov
clc
mov
clc
mov
clc
mov
clc
mov
clc
mov
clc
mov
clc
mov
clc
mov
clc
mov
clc
mov
clc
mov
clc
mov
mov
gs
sub
xchg
push
call
mov
mov
gs
sub
xchg
push
call
mov
mov
gs
sub
xchg
push
call
mov
mov
gs
inc
add
inc
xchg
mov
jg
or
inc
inc
sar
in
mov
(bad)
inc
jno
(bad)
(bad)
adc
sbb
xchg
repz
fidiv
shr
lods
mov
mov
data16
iret
fst
aas
pop
(bad)
scas
stos
fisubr
xchg
mov
les
xor
ret
pushf
sbb
pushf
sbb
stc
xor
inc
mov
jne
out
popf
inc
aam
mov
mov
rcr
jl
sar
inc
or
push
call
icebp
sahf
mov
je
jg
imul
mov
ret
inc
cld
pop
(bad)
inc
les
pop
lods
adc
xchg
mov
stos
jg
jns
pop
pop
mov
cld
ss
mov
inc
sar
pop
lock
push
inc
mov
inc
add
adc
fprem
outs
in
pop
stc
xchg
stos
jg
in
dec
inc
or
and
add
inc
lock
pop
inc
adc
ss
mov
inc
sar
jl
inc
pop
fprem
outs
in
pop
stc
xchg
stos
jg
in
dec
inc
or
and
add
inc
lock
pop
inc
adc
ss
mov
inc
sar
jl
inc
pop
fprem
outs
in
pop
stc
xchg
stos
jg
in
dec
inc
or
and
add
inc
lock
pop
inc
adc
ss
mov
inc
sar
js
cmp
hlt
aas
in
(bad)
or
dec
repz
pop
cmp
jno
xchg
mov
arpl
pop
mov
les
(bad)
loope
outs
rol
repnz
ds
mov
add
out
pushf
fs
imul
(bad)
push
push
and
dec
cs
mov
stos
adc
xchg
(bad)
div
(bad)
mov
mov
fisubr
push
mov
add
and
add
inc
lock
pop
inc
adc
ss
mov
inc
sar
jl
lods
call
outs
mov
inc
adc
pop
into
not
adc
stos
cs
and
cmp
dec
mov
pop
sub
es
test
pop
pushf
iret
adc
ss
inc
or
and
add
inc
lock
pop
inc
adc
ss
mov
inc
sar
js
ret
mov
scas
outs
mov
push
fcomi
fsub
sbb
xor
xchg
xlat
push
ja
in
fcmovne
ror
xor
jb
pop
pop
ins
inc
dec
and
fistp
scas
mov
push
(bad)
mov
mov
aas
sar
(bad)
sbb
fcomip
inc
(bad)
pop
inc
loopne
aas
(bad)
and
jg
pop
clc
jg
add
mov
retf
rcr
(bad)
cmp
loop
dec
pop
inc
mov
xchg
push
push
das
mov
mov
inc
sbb
xchg
fisub
jg
scas
mov
in
cmps
push
xor
into
(bad)
into
push
push
xchg
fdiv
movs
(bad)
push
sbb
sar
jae
cld
mov
aaa
sub
imul
xchg
fisubr
mov
movs
std
ins
jge
inc
or
and
add
inc
lock
pop
inc
adc
ss
mov
inc
sar
jl
push
je
adc
add
pop
movs
mov
movs
fxch
jg
jb
cmp
sar
jmp
sysret
dec
push
jne
dec
push
ins
and
mov
fnstenv
jmp
movq
pop
clc
jg
add
mov
loope
mov
pop
loope
add
or
inc
loop
out
sbb
ret
dec
ins
push
dec
aam
dec
aas
nop
shl
popf
lea
pop
in
xchg
adc
xchg
gs
je
mov
test
mov
inc
aam
add
fcmovu
push
inc
mov
inc
add
adc
ret
imul
mov
ret
inc
cld
pop
(bad)
inc
les
jl
clc
push
loop
mov
xchg
mov
push
shl
aad
test
retf
les
inc
into
les
into
push
add
cmp
jmp
lahf
cld
jnp
(bad)
add
and
cld
mov
(bad)
and
call
cli
sbb
or
or
bound
stos
out
pop
inc
push
sub
xlat
clc
jns
mov
ins
test
imul
out
mov
lahf
lock
push
inc
mov
inc
add
adc
ret
imul
mov
ret
inc
cld
pop
(bad)
inc
les
jmp
pop
shl
or
push
mov
es
jno
stos
(bad)
icebp
mov
sbb
call
outs
cmps
mov
or
and
dec
pop
lods
sbb
inc
cwde
push
lea
and
sbb
and
popf
shr
idiv
sub
mov
ret
imul
mov
ret
inc
cld
pop
(bad)
inc
les
add
and
add
inc
lock
pop
inc
adc
jmp
test
mov
pusha
xchg
inc
fsubrp
inc
push
xchg
(bad)
and
mov
cld
inc
clc
inc
loop
test
pop
inc
loop
and
xchg
mov
inc
es
sbb
mov
cmp
stos
cmp
pop
mov
fsubrp
(bad)
push
icebp
cs
pop
mov
ss
mov
inc
sar
pop
lock
push
inc
mov
inc
add
adc
sub
jp
mov
mov
(bad)
sub
add
adc
add
xor
cld
dec
fwait
les
sbb
js
inc
aad
in
mov
push
bound
inc
into
cld
jb
(bad)
xor
enter
retf
sbb
sub
shr
imul
das
movs
idiv
stos
lock
lods
mov
std
rcpps
add
adc
inc
clc
das
(bad)
inc
mov
fcomip
inc
(bad)
pop
inc
loopne
aas
(bad)
and
iret
packssdw
ficom
or
scas
and
fs
pop
jb
pop
add
(bad)
adc
mov
and
aaa
mov
pop
es
(bad)
sbb
fcomip
inc
(bad)
pop
inc
loopne
aas
(bad)
and
jg
pop
clc
jg
add
mov
bound
bnd
cld
ret
jmp
mov
inc
xchg
lock
adc
inc
clc
das
(bad)
inc
mov
fcomip
inc
(bad)
pop
inc
loopne
aas
(bad)
and
jne
sbb
shr
inc
outs
scas
test
stos
xchg
cmp
add
bnd
mov
lds
mov
cmp
retf
fsub
dec
fs
mov
mov
ret
(bad)
arpl
mov
inc
cmp
mov
mov
fisubr
scas
xchg
sahf
xor
push
std
cmovle
add
adc
inc
clc
das
(bad)
inc
mov
fcomip
inc
(bad)
pop
inc
loopne
aas
(bad)
and
adc
mov
dec
xchg
ficom
iret
add
dec
enter
pop
in
rol
push
retf
jno
arpl
retf
imul
mov
ror
jne
adc
jecxz
rcr
cmc
aas
cld
ss
mov
inc
sar
pop
lock
push
inc
mov
inc
add
adc
mov
push
inc
dec
mov
in
mov
lea
cmp
imul
xor
xchg
leave
mov
mov
fidivr
cld
ss
mov
inc
sar
pop
lock
push
inc
mov
inc
add
adc
idiv
stc
aas
pop
(bad)
(bad)
cli
aad
out
(bad)
loope
mov
pop
loope
add
or
inc
loop
inc
xchg
lock
adc
inc
clc
das
(bad)
inc
mov
aas
or
add
cli
aad
out
(bad)
loope
mov
pop
loope
add
or
inc
loop
inc
xchg
lock
adc
inc
clc
das
(bad)
inc
mov
aas
or
add
cli
aad
out
(bad)
loope
mov
pop
loope
add
or
inc
loop
inc
xchg
lock
iret
leave
jge
aas
clc
push
loop
std
in
sub
jle
repnz
addr16
xchg
icebp
jg
pop
pop
lods
cld
fist
clc
xor
pop
call
lock
xlat
ret
dec
mov
ss
ffreep
cmps
sub
imul
inc
xchg
inc
jp
call
ret
add
imul
daa
idiv
xchg
jnp
sti
add
jg
add
aam
xchg
push
call
sti
out
jp
out
push
push
xchg
cli
xchg
ins
mov
xchg
ins
mov
data16
shr
mov
mov
data16
shr
mov
mov
data16
shr
mov
mov
data16
shr
mov
mov
data16
shr
mov
mov
data16
and
or
xor
pop
js
(bad)
fistp
jp
mov
bnd
add
add
lods
imul
mov
pop
sbb
ds
inc
fidiv
ror
data16
ins
sbb
push
retf
xlat
aam
mov
vshufps
jne
out
repz
inc
scas
clc
(bad)
inc
bound
mov
mov
cmp
jp
pop
push
jl
push
inc
adc
push
inc
adc
push
inc
adc
cli
cmp
or
cmps
jle
lea
les
dec
sbb
add
mov
sbb
ins
loopne
lods
inc
dec
dec
mov
push
and
sub
inc
inc
pop
stc
pavgb
lahf
psubb
inc
icebp
inc
test
and
in
cmc
lock
imul
ss
mov
ja
xchg
mov
out
iret
icebp
jmp
pop
fist
jl
jmp
or
push
fidivr
pop
inc
and
sahf
shr
mov
ins
outs
jbe
(bad)
js
repz
fldenv
jmpw
pop
mov
test
cs
mov
jmp
clc
mov
pop
lock
jno
cld
push
jle
les
sahf
mov
xchg
bound
and
ins
cmp
data16
pop
sbb
xor
(bad)
sar
mov
push
mov
sub
inc
dec
mov
xchg
repz
add
mov
pop
xchg
jl
loop
or
pop
sub
push
movs
imul
xchg
aad
retf
lock
inc
nop
popf
scas
xor
cmp
or
push
les
jle
sar
les
clc
call
mov
into
mov
lock
sbb
ror
push
or
movs
xor
fst
xchg
pop
rcl
lock
jnp
sub
inc
cmp
jmp
cld
(bad)
inc
sar
jl
icebp
cmp
ficomp
and
cli
jbe
cmp
imul
in
enter
mov
mov
push
lahf
or
cs
cmps
les
sbb
(bad)
cmps
ret
push
jnp
xor
clc
iret
add
hlt
adc
pop
xchg
push
lds
adc
push
cld
inc
lock
xchg
xchg
dec
push
(bad)
xlat
add
lds
jb
enter
out
add
inc
rcr
pushf
cld
push
loope
lahf
sbb
cli
inc
out
cmc
adc
jns
stos
repnz
out
movs
pop
pusha
test
cmp
imul
stos
jns
sbb
pop
xlat
add
sub
pushf
aad
std
cmps
push
ins
sub
jne
je
mov
mov
arpl
or
jecxz
ret
cmp
xchg
loop
push
pop
pop
(bad)
fldenv
xor
arpl
add
add
aas
push
jl
std
test
dec
test
(bad)
dec
mov
inc
shr
cmp
dec
xchg
mov
xor
inc
ror
popf
icebp
or
xlat
sub
mov
cmp
xlat
push
adc
mov
push
mov
push
in
sbb
or
push
jp
mov
sar
std
movs
cld
dec
xchg
push
ror
cdq
lods
imul
retf
and
sub
and
and
popa
call
(bad)
ror
imul
xchg
xor
jle
xchg
mov
jl
jno
out
lods
lock
aam
inc
imul
clc
or
adc
cmp
push
es
enter
xchg
stos
inc
cs
aas
xchg
mov
inc
jp
add
push
clc
mov
js
loop
fwait
loopne
je
cmp
pop
mov
adc
mov
adc
xor
sbb
adc
xlat
jns
ret
push
clc
jne
out
cmp
pop
lds
aam
cmps
push
loop
pop
cs
inc
repz
pop
adc
lods
jmp
loope
inc
push
mov
call
push
or
data16
dec
sbb
xlat
out
jl
xchg
push
int3
mov
sbb
mov
xor
das
pop
movs
sub
dec
pop
pop
fdivp
shl
iret
loop
(bad)
xchg
popa
inc
push
in
pop
out
fmulp
ja
test
popf
imul
cli
xor
loope
in
adc
dec
pop
inc
loop
cmp
xchg
push
push
shl
stc
xchg
push
adc
daa
fcom
(bad)
cli
inc
mov
xor
test
dec
cmp
fcomp
out
or
pop
retf
enter
repz
push
mov
jge
pop
icebp
inc
out
mov
mov
scas
(bad)
fcmovb
xchg
cmp
sar
sahf
jne
xchg
push
push
(bad)
mov
cmp
rcl
loopne
pop
call
in
popf
or
mov
(bad)
stc
inc
sar
std
and
sbb
cmp
ins
jecxz
iret
mov
stc
xlat
sbb
dec
js
(bad)
out
loopne
retf
mov
fsub
xor
jae
adc
xchg
dec
int
sti
or
mov
clc
inc
pop
(bad)
sub
mov
sub
movhlps
shl
outs
sbb
add
sahf
xor
mov
lock
ds
pop
jnp
xlat
cmp
out
inc
xlat
sbb
in
pop
out
and
fcom
mov
dec
in
out
xor
push
jecxz
ins
sub
or
sub
mov
aam
in
xchg
and
adc
jge
mov
add
or
mov
push
sahf
(bad)
icebp
jae
mov
mov
aam
bound
xor
gs
pop
xor
mov
sbb
icebp
aaa
in
and
sub
sbb
inc
shl
sbb
cmp
inc
test
inc
(bad)
daa
mov
scas
add
jl
clc
pop
jnp
mov
in
fist
aaa
adc
jo
jo
mov
mov
sbb
scas
fidivr
(bad)
nop
dec
loop
das
in
sbb
popf
cmps
std
xchg
push
dec
mov
push
and
inc
rcr
pop
push
fmul
adc
mov
xchg
sub
and
pop
cmp
xor
cli
in
mov
in
out
jle
mov
imul
pop
mov
cmp
(bad)
add
cmp
imul
sar
aaa
jecxz
das
adc
shl
test
cmp
pop
or
pop
push
inc
lahf
xchg
setle
mov
fnstsw
mov
pop
imul
xchg
jae
into
jmp
movs
adc
xor
clc
push
lock
push
sbb
loop
lock
mov
pop
lahf
adc
es
call
into
xor
and
adc
cmp
repnz
mov
loopne
jl
push
xchg
daa
mov
retf
and
popf
dec
add
mov
mov
(bad)
xchg
xlat
movs
(bad)
aam
or
rol
(bad)
sbb
pushf
lods
int3
mov
mov
xlat
cmp
cmp
repnz
mov
(bad)
imul
loopne
fldcw
push
mov
test
xchg
or
and
inc
mov
call
xchg
pop
clc
cmp
cld
dec
aam
push
test
ja
fucomi
fbld
jns
retf
addr16
stc
mov
xor
mov
add
cmp
pop
mov
or
out
arpl
scas
xchg
in
int
dec
adc
adc
mov
mov
add
mov
jmp
add
cmp
dec
and
sub
sub
test
cmp
shl
ficom
std
dec
cmp
cdq
jnp
repnz
cmp
ret
xchg
aam
sub
xor
sub
ror
(bad)
aaa
pop
sbb
les
jbe
jp
sub
dec
jb
dec
ret
or
cmp
and
mov
sub
lock
lahf
cmps
(bad)
test
imul
fisttp
out
repnz
adc
out
inc
pop
lahf
or
cs
inc
pop
sar
cs
outs
adc
test
cmp
imul
mov
in
jae
mov
js
(bad)
or
inc
scas
clc
xlat
loope
test
xor
pop
inc
xchg
test
int
imul
nop
mov
into
fdivr
jecxz
ds
les
js
inc
mov
fnstcw
repnz
sub
retf
lahf
into
mov
mov
das
jle
inc
iret
(bad)
mov
sbb
inc
mov
and
out
lods
cmps
xchg
(bad)
retf
inc
bound
jbe
sbb
add
test
cmp
pop
pop
xchg
push
lock
iret
ret
fstp
dec
shl
mov
in
jp
movs
push
(bad)
jb
mov
dec
add
in
cmp
jecxz
(bad)
imul
ins
stos
fisubr
sbb
pop
jmp
or
adc
fistp
scas
loope
out
jne
sbb
mov
mov
imul
ss
pushf
lods
inc
out
pop
inc
xor
into
xor
add
push
les
jns
popf
xor
dec
dec
mov
xchg
sub
jno
xchg
adc
into
frstor
dec
cmps
sbb
cmps
sbb
sub
fstp
std
xchg
je
mov
ror
outs
ss
xchg
nop
push
cmc
fild
lahf
sar
sub
mov
inc
(bad)
adc
jg
add
scas
jl
stc
es
jmp
inc
or
js
dec
sar
add
or
mov
ja
sub
sub
adc
ror
mov
bound
in
xlat
sar
mov
cmc
scas
(bad)
sar
lahf
scas
imul
out
cmp
sti
movs
add
loopne
jb
sbb
in
mov
push
cmp
push
xor
jl
retf
in
and
mul
cmc
dec
icebp
xor
rol
dec
das
lods
sti
(bad)
fistp
jg
das
test
leave
cld
xor
fmulp
div
mov
adc
dec
iret
mov
fild
and
mov
in
dec
inc
mov
add
sbb
pusha
loopne
and
pushf
out
imul
comiss
psraw
ds
push
cmp
imul
dec
mov
and
in
xlat
into
push
call
push
and
(bad)
sbb
into
stc
xchg
sub
adc
mov
xor
xor
(bad)
pop
out
sahf
jp
jle
ret
mov
fisub
mov
call
outs
jle
jno
sub
test
cld
test
mov
cmps
std
fadd
fisubr
ins
lods
lahf
retf
arpl
inc
push
cmp
jnp
mov
(bad)
lods
outs
mov
pop
sbb
mov
cli
adc
adc
mov
(bad)
or
inc
jae
imul
jg
cmp
movs
ret
xor
xlat
jo
mov
les
xor
mov
dec
jnp
stos
pop
sbb
clc
or
std
sbb
cmps
(bad)
loop
stos
sar
cmp
mov
jae
mov
pop
mov
fimul
js
fidiv
lods
sti
ds
hlt
imul
(bad)
mov
in
sub
fnstsw
sub
(bad)
out
push
and
dec
mov
sub
inc
out
pop
inc
pop
shl
jno
pop
ror
int
imul
inc
pusha
aad
push
call
push
mov
cld
cld
sub
mov
sub
dec
std
inc
and
ja
cli
add
mov
add
mov
idiv
sub
dec
ds
jge
jl
and
cli
sahf
mov
cli
adc
mov
xchg
fsubr
shr
mov
inc
outs
fidiv
shr
mov
inc
outs
fidiv
shr
mov
inc
outs
fidiv
shr
mov
inc
outs
fidiv
shr
mov
inc
outs
fidiv
shr
scas
mov
sbb
mov
out
cli
pop
dec
sti
inc
daa
outs
loopne
sti
jle
add
sbb
aas
inc
imul
rol
fldenv
test
inc
and
dec
inc
(bad)
xchg
pop
(bad)
mov
push
mov
and
hlt
dec
sbb
xchg
cmps
lds
cmp
cmc
cmp
xchg
sub
retf
push
push
js
fsubr
ja
mov
jg
lahf
lds
fiadd
dec
mov
xor
scas
loopne
fld
ins
pop
push
sub
jecxz
cli
adc
(bad)
push
int
add
(bad)
out
cmp
imul
lahf
paddsb
stos
inc
imul
mov
adc
gs
pop
mov
mov
(bad)
jg
sbb
ss
cld
mov
adc
xor
cmp
(bad)
adc
push
xlat
jg
pop
aaa
inc
adc
sub
mov
mov
(bad)
es
icebp
(bad)
xchg
add
dec
xchg
inc
sbb
(bad)
xchg
add
dec
xchg
inc
sbb
(bad)
fdivrp
add
pop
push
movs
cld
iret
out
inc
cmp
sub
mov
mov
(bad)
es
clc
push
ds
pop
inc
shr
jp
cld
cmp
jecxz
std
push
retf
inc
sbb
cmp
jecxz
std
push
retf
inc
sbb
icebp
aas
leave
pop
mov
pop
xchg
repz
mov
lock
jl
inc
inc
xchg
mov
push
clc
xlat
inc
add
jmp
mov
add
cmp
dec
ins
mov
lock
das
dec
ins
mov
(bad)
inc
and
idiv
inc
cmc
push
int3
(bad)
out
clc
daa
call
std
or
out
dec
inc
loop
inc
test
pop
cli
adc
(bad)
push
int
add
xlat
movs
jg
sar
inc
shr
mov
add
xor
ret
sar
inc
shr
mov
add
xor
outs
adc
xchg
sti
(bad)
pop
aad
jg
sti
mov
add
cmps
(bad)
mov
clc
sub
mov
jg
push
xlat
jg
pop
aaa
inc
adc
inc
(bad)
clc
out
inc
inc
mov
add
cmps
retf
inc
mov
inc
(bad)
clc
out
inc
inc
mov
add
cmps
retf
inc
mov
cmc
mov
jg
pop
push
movs
cld
iret
out
inc
cmp
sub
scas
inc
loopne
outs
(bad)
es
clc
push
ds
pop
inc
shr
jp
cld
cmp
jecxz
std
push
retf
inc
sbb
cmp
jecxz
std
push
retf
inc
sbb
icebp
aas
leave
pop
mov
pop
xchg
repz
mov
lock
jl
inc
inc
xchg
mov
push
clc
xlat
inc
add
jmp
mov
add
cmp
dec
ins
mov
lock
das
dec
ins
mov
(bad)
inc
and
idiv
inc
cmc
push
int3
(bad)
out
clc
daa
call
std
or
out
dec
inc
loop
inc
test
pop
cli
adc
(bad)
push
int
add
xlat
movs
jg
sar
inc
shr
mov
add
xor
ret
sar
inc
shr
mov
add
xor
outs
adc
xchg
sti
(bad)
pop
aad
jg
sti
mov
add
cmps
(bad)
mov
clc
sub
mov
jg
push
xlat
jg
pop
aaa
inc
adc
inc
(bad)
clc
out
inc
inc
mov
add
cmps
retf
inc
mov
inc
(bad)
clc
out
inc
inc
mov
add
cmps
retf
inc
mov
cmc
mov
jg
pop
push
movs
cld
iret
out
inc
cmp
sub
scas
inc
loopne
outs
(bad)
es
clc
push
ds
mov
shr
jp
cld
cmp
jecxz
std
push
retf
inc
sbb
cmp
jecxz
std
push
retf
inc
sbb
icebp
aas
leave
pop
mov
pop
xchg
repz
mov
lock
jl
inc
inc
xchg
mov
push
clc
xlat
inc
add
jmp
mov
add
cmp
dec
ins
mov
lock
das
dec
ins
mov
(bad)
inc
and
idiv
inc
cmc
push
int3
(bad)
out
clc
daa
call
std
or
out
dec
inc
loop
inc
test
pop
cli
adc
(bad)
push
int
add
xlat
movs
jg
sar
inc
shr
mov
add
xor
ret
sar
inc
shr
mov
add
xor
outs
adc
xchg
sti
(bad)
pop
aad
jg
sti
mov
add
cmps
(bad)
mov
clc
sub
mov
jg
push
xlat
jg
pop
aaa
inc
adc
inc
(bad)
clc
out
inc
inc
mov
add
cmps
retf
inc
mov
inc
(bad)
clc
out
inc
inc
mov
add
cmps
retf
inc
mov
cmc
mov
jg
pop
push
movs
cld
iret
out
inc
cmp
sub
mov
mov
(bad)
es
clc
push
ds
pop
inc
shr
jp
cld
cmp
jecxz
std
push
retf
inc
sbb
cmp
jecxz
std
push
retf
inc
sbb
icebp
aas
leave
pop
mov
pop
xchg
repz
mov
lock
jl
inc
inc
xchg
mov
push
clc
xlat
inc
add
jmp
mov
add
cmp
dec
ins
mov
lock
das
dec
ins
mov
(bad)
inc
and
idiv
inc
cmc
push
int3
(bad)
out
clc
daa
call
std
or
out
dec
inc
loop
inc
test
pop
cli
adc
(bad)
push
int
add
xlat
movs
jg
sar
inc
shr
mov
add
xor
ret
sar
inc
shr
mov
add
xor
outs
adc
xchg
sti
(bad)
pop
aad
jg
sti
mov
add
cmps
(bad)
mov
clc
sub
mov
jg
push
xlat
jg
pop
aaa
inc
adc
inc
(bad)
clc
out
inc
inc
mov
add
cmps
retf
inc
mov
inc
(bad)
clc
out
inc
inc
mov
add
cmps
retf
inc
mov
cmc
mov
jg
pop
push
movs
cld
iret
out
inc
cmp
sub
scas
inc
loopne
outs
(bad)
es
clc
push
ds
pop
inc
shr
jp
cld
cmp
jecxz
std
push
retf
inc
sbb
cmp
jecxz
std
push
retf
inc
sbb
icebp
aas
leave
pop
mov
pop
xchg
repz
mov
lock
jl
inc
inc
xchg
mov
push
clc
xlat
inc
add
jmp
mov
add
cmp
dec
ins
mov
lock
das
dec
ins
mov
(bad)
inc
and
idiv
inc
cmc
push
int3
(bad)
out
clc
daa
call
std
or
out
dec
inc
loop
inc
test
pop
cli
adc
(bad)
push
int
add
xlat
movs
jg
sar
inc
shr
mov
add
xor
ret
sar
inc
shr
mov
add
xor
outs
adc
xchg
sti
(bad)
pop
aad
jg
sti
mov
add
cmps
(bad)
mov
clc
sub
mov
jg
push
xlat
jg
pop
aaa
inc
adc
inc
(bad)
clc
out
inc
inc
mov
add
cmps
retf
inc
mov
inc
(bad)
clc
out
inc
inc
mov
add
cmps
retf
inc
mov
cmc
mov
jg
pop
push
movs
cld
iret
out
inc
cmp
sub
mov
mov
(bad)
movs
mov
aas
jecxz
leave
inc
push
js
les
dec
fadd
dec
popf
mov
add
mov
ds
add
in
mov
add
xor
icebp
(bad)
and
js
xchg
dec
shl
xchg
push
pop
pop
(bad)
inc
sub
idiv
inc
cmc
push
int3
(bad)
out
clc
daa
scas
dec
pop
push
cld
inc
sti
cmp
clc
(bad)
ins
sahf
adc
cmc
sahf
xchg
jae
or
mov
mov
mov
or
push
dec
clc
jge
pop
lahf
push
pop
aaa
mov
es
mov
pop
repnz
les
mov
mov
or
mov
rcl
enter
mov
shl
sub
sub
or
mov
sub
sub
sub
or
mov
sub
sub
sub
or
mov
xchg
cmp
in
mov
(bad)
inc
jno
cmp
rcr
mov
cld
popf
mov
jg
sti
inc
dec
outs
sub
jmp
xor
jg
je
mov
mov
movs
ret
cwde
sub
mov
into
scas
test
pop
fld
aaa
xchg
xor
sbb
and
xor
mov
push
xlat
xchg
pop
add
or
pop
mov
mov
ret
loop
arpl
lock
neg
daa
xchg
push
inc
and
or
stos
lahf
(bad)
(bad)
jge
jge
(bad)
(bad)
xor
or
mov
dec
dec
aas
push
in
sub
sub
enter
jecxz
into
aas
icebp
mov
sti
clc
sti
repz
cld
imul
out
adc
ds
mov
test
add
(bad)
ds
jecxz
add
xor
and
mov
add
mov
add
mov
xor
iret
xchg
push
and
mov
add
mov
enter
jecxz
into
aas
icebp
mov
pop
jo
pop
int3
mov
jmp
dec
pop
repz
jecxz
into
aas
icebp
mov
sti
clc
sti
repz
cld
push
xchg
fcom
xchg
das
mov
retf
aas
mov
cld
sti
clc
sti
repz
cld
push
add
(bad)
ds
jecxz
add
cmp
test
mov
in
test
add
(bad)
ds
jecxz
add
xor
and
mov
add
mov
add
mov
xor
iret
xchg
push
and
mov
add
mov
and
icebp
pop
ret
jge
loop
shr
jmp
ds
sub
xchg
pop
jo
push
jb
pop
add
rol
sbb
cmp
push
lahf
int3
stc
xchg
mov
lods
mov
or
sar
push
cld
push
icebp
das
(bad)
mov
dec
adc
fiadd
lods
loop
repz
rol
dec
cmovo
push
fnstenv
rcr
fwait
ret
push
sbb
test
sub
imul
sti
pop
arpl
cmp
dec
mov
mov
fdivr
cs
(bad)
(bad)
adc
add
(bad)
(bad)
sub
inc
test
sub
pop
icebp
aaa
dec
in
add
push
rcr
das
cld
add
hlt
jl
inc
jge
inc
or
mov
adc
aam
ret
xchg
aas
call
add
push
rcr
das
cld
add
hlt
jl
inc
jge
inc
or
mov
adc
aam
ret
xchg
aas
call
add
push
rcr
das
cld
add
hlt
jl
inc
jge
inc
or
mov
adc
aam
ret
xchg
aas
call
add
push
rcr
das
cld
add
hlt
jl
inc
jge
inc
or
mov
adc
aam
ret
xchg
aas
call
add
push
rcr
das
cld
add
hlt
jl
inc
jge
inc
or
mov
adc
aam
ret
xchg
aas
call
add
push
rcr
das
cld
add
hlt
jl
inc
jge
inc
or
mov
adc
aam
ret
xchg
aas
call
add
push
rcr
das
cld
add
hlt
jl
inc
jge
inc
or
mov
adc
aam
ret
xchg
aas
call
add
push
rcr
das
cld
add
hlt
jl
inc
jge
inc
or
mov
adc
aad
lahf
in
aad
and
inc
mov
sahf
push
icebp
sbb
sub
pop
sbb
pop
cmp
jg
xor
pop
imul
das
lock
jp
mov
je
add
ds
inc
or
fdiv
xor
sub
lahf
mov
in
in
adc
sub
adc
dec
pop
rol
sbb
inc
adc
sbb
inc
adc
sbb
inc
adc
sbb
inc
adc
sbb
inc
adc
sbb
inc
adc
sbb
inc
adc
sbb
inc
adc
sbb
inc
adc
mov
sbb
xchg
fwait
mov
outs
inc
or
(bad)
jmp
sbb
pusha
rcr
sar
push
mov
repnz
repnz
push
inc
inc
and
pop
imul
xchg
aad
cmp
movs
pop
imul
inc
xor
adc
xor
adc
xor
lahf
mov
cld
popf
lahf
cmp
jmp
dec
fcom
dec
rcr
std
inc
movs
xor
ds
xor
jg
movs
cmp
cmc
ds
inc
ficomp
mov
cmp
pop
sub
das
in
adc
fistp
neg
sub
mov
or
or
adc
hlt
(bad)
cld
adc
dec
ret
inc
mov
cli
sub
ss
dec
xor
data16
pushf
dec
or
jl
jecxz
les
mov
and
mov
sub
sub
popf
daa
fild
cmps
xlat
shl
mov
add
and
stos
test
jnp
shr
mov
push
retf
fcomp
xor
sbb
jecxz
push
imul
out
out
clc
and
and
fistp
out
jecxz
cmps
call
pop
xchg
xor
test
jmp
test
data16
ret
(bad)
fadd
adc
shl
sti
or
mov
gs
xor
add
mov
cmp
pop
aas
adc
addr16
fwait
das
sbb
js
ret
call
cmps
pop
mov
popa
mov
out
inc
mov
jno
daa
cld
dec
xchg
push
push
xchg
retf
loop
(bad)
mov
out
jmp
call
pop
dec
test
mov
pop
pop
retf
outs
addr16
dec
adc
adc
jne
cld
ret
cmp
mov
dec
jns
mov
dec
or
iret
scas
sbb
(bad)
pop
jle
lock
out
lahf
popa
jns
(bad)
imul
movs
out
xchg
xchg
pop
and
inc
arpl
scas
jg
pop
lods
inc
loope
(bad)
jne
or
fistp
sbb
gs
push
xchg
add
popa
aam
std
mov
loopne
fild
sbb
jmp
jmp
shl
mov
and
push
push
xchg
push
neg
xor
xlat
xchg
jl
clc
cmp
lahf
adc
mov
imul
lods
or
mov
sbb
and
mov
dec
push
jae
int
retf
scas
xchg
pop
(bad)
xchg
sub
mov
jp
jg
stc
cmp
push
jmp
cmp
lock
jle
xchg
ret
or
sbb
adc
(bad)
ret
ss
fistp
inc
popa
xchg
mov
dec
rcr
ret
inc
add
pop
lock
ret
pop
dec
add
mov
sbb
lds
xchg
sub
enter
bound
je
fimul
or
pop
jge
xchg
push
dec
dec
cmp
loop
xor
scas
ins
lock
in
test
inc
sbb
xor
mov
adc
lods
and
and
sbb
mov
mov
daa
xor
mov
test
jg
inc
fiadd
xor
push
adc
(bad)
cdq
dec
out
push
xor
xchg
stos
pop
outs
daa
and
mov
out
test
push
sbb
bound
js
pop
mov
mov
out
cmc
js
dec
adc
mov
mov
push
and
mov
sbb
cmp
sub
mov
push
mov
clc
pop
xchg
aam
inc
jnp
add
pop
mov
mov
cmps
call
icebp
sbb
pop
mov
sub
pop
jo
out
repz
or
scas
popf
imul
popa
iret
stc
cmp
jg
pop
lahf
std
and
cmp
dec
idiv
mov
inc
mov
dec
pop
pinsrw
out
in
or
nop
scas
push
aas
movs
ins
scas
xchg
loop
cld
xchg
das
adc
add
dec
out
add
jae
out
push
mov
cmc
lods
icebp
pop
cmps
aaa
ret
xchg
call
not
xchg
fidiv
shl
adc
and
dec
imul
jae
not
dec
(bad)
sar
push
mov
std
jnp
(bad)
cmp
stc
lods
dec
sbb
inc
pop
js
mov
out
retf
mov
mov
mov
inc
shl
and
ret
fucom
mov
push
shl
imul
or
cmp
sbb
or
js
les
push
cmps
fs
jno
test
(bad)
fisttp
idiv
lods
jp
xlat
fistp
mov
mov
popf
push
dec
aas
fidiv
push
push
xor
fs
test
cmp
retf
or
out
ds
sar
add
outs
jle
js
dec
mov
hlt
(bad)
fcmove
pop
xor
aam
mov
dec
fbstp
adc
xchg
push
or
sbb
pop
scas
imul
fldenv
xchg
std
fadd
cli
hlt
jp
call
cld
inc
loopne
add
xlat
loopne
(bad)
cld
adc
(bad)
mov
psadbw
arpl
ja
jo
add
inc
retf
lds
cmp
push
loop
push
push
ins
je
sbb
lea
push
fstp
pop
repnz
pop
pop
test
shl
js
lock
(bad)
xor
ffreep
mov
clc
repz
lods
pop
add
xlat
ror
ins
cld
dec
stos
clc
mov
scas
out
fs
movs
repnz
cmps
dec
repnz
inc
and
loope
cdq
cmp
fbstp
idiv
sbb
out
jno
retf
movs
fdiv
inc
gs
sbb
pop
add
lods
mov
dec
sbb
adc
inc
call
stc
fcmovne
xchg
sbb
inc
push
lock
mov
sub
popa
xchg
jb
push
cmp
inc
daa
add
jmp
lea
jle
movs
fimul
lods
mov
shl
nop
inc
or
and
shr
nop
jae
lods
fild
ret
aas
fnstenv
psrld
or
xor
fwait
(bad)
xor
mov
jl
jg
push
add
movs
pop
xor
mov
fwait
pop
imul
in
iret
loop
fld
out
inc
mov
push
mov
sbb
inc
je
and
mov
das
test
cld
or
test
icebp
mov
sar
mov
shr
mov
inc
mov
xchg
sub
inc
or
dec
pusha
xlat
scas
jg
push
mov
(bad)
mov
stos
fnstcw
jae
lea
pop
jle
cmps
lds
adc
imul
xlat
repnz
and
push
cmp
push
dec
sbb
dec
into
dec
int
ins
pop
inc
mov
cmps
shr
sti
adc
test
mov
aad
call
and
sbb
xor
int
iret
(bad)
iret
sbb
lahf
sbb
jmp
retf
cmps
mov
pop
pop
fs
test
js
loop
les
pop
(bad)
ficomp
das
or
js
push
shr
ss
cmp
inc
ja
(bad)
out
mov
dec
in
xlat
sbb
or
and
call
cld
inc
clc
lahf
icebp
add
call
ins
in
or
dec
and
sbb
sbb
int
push
test
ds
mov
fdiv
inc
addr16
jmp
jp
pop
cmps
inc
mov
shr
loop
sbb
cmp
vmovaps
jp
fldcw
lods
mov
in
add
out
jae
mov
mov
and
shl
mov
shr
pop
pop
(bad)
retf
ja
sbb
cmp
scas
add
jne
xor
push
sub
je
pop
xchg
cmc
hlt
push
jp
inc
push
lahf
and
cwde
js
mov
jle
clc
pop
jecxz
sbb
jmp
cmp
xchg
and
mov
arpl
pushf
pushf
lock
pop
lods
sbb
mov
xlat
jl
test
cmp
in
cld
das
ins
cmps
pop
cmp
adc
loope
(bad)
mov
retf
xor
sahf
and
jne
sar
int3
call
bound
(bad)
jmp
sti
fimul
lods
sub
(bad)
pop
xchg
int
(bad)
sbb
loope
(bad)
std
cdq
mov
pop
push
xchg
mov
lock
and
mov
and
cli
mov
fwait
ret
jle
lock
loope
push
jmp
xor
and
pop
inc
jno
mov
repnz
cmp
lods
lea
xor
jne
fist
mov
mov
shr
sub
call
mov
retf
push
lea
or
cmp
adc
mov
xchg
jo
retf
pop
and
icebp
pop
test
jecxz
pop
mov
and
mov
mov
leave
jae
inc
xchg
xor
test
jbe
fidivr
clc
(bad)
(bad)
push
jmp
out
sti
push
(bad)
add
scas
cwde
imul
dec
(bad)
addr16
popf
aam
in
test
inc
ficomp
imul
shl
adc
imul
mov
mov
adc
imul
mov
mov
adc
imul
mov
mov
adc
imul
mov
cmp
ds
in
xchg
cmp
sub
xchg
dec
stos
jno
xchg
lods
sub
xchg
arpl
xor
jmp
sub
mov
test
bound
leave
loop
xor
adc
pop
sar
(bad)
mov
push
sub
movs
nop
cmc
push
rcl
bound
arpl
lock
or
fcmovbe
into
call
cmp
inc
pop
cmps
repnz
jecxz
out
in
mov
push
fistp
sbb
push
and
retf
jbe
sub
jbe
movs
jno
sub
mov
pop
dec
mov
cmp
dec
push
pop
mov
daa
int3
pop
out
call
cld
retf
(bad)
mov
or
push
sub
pop
imul
aad
xchg
xor
(bad)
scas
xchg
movs
pop
js
xchg
adc
mov
aam
push
idiv
cdq
popa
sbb
jecxz
call
dec
add
popf
dec
scas
jnp
cdq
sub
xor
inc
test
mov
imul
jnp
ds
ins
mov
cs
adc
add
std
lods
cld
or
cli
inc
cmp
jle
lahf
bnd
push
inc
mov
std
and
xor
jg
movs
daa
sti
enter
jmp
push
push
mov
pop
and
sahf
pop
bnd
pop
test
mov
mov
ins
addr16
fidivr
ret
test
imul
shl
push
daa
shl
call
std
iret
adc
imul
dec
icebp
daa
pop
lock
xchg
retf
lods
cs
push
aam
loopne
popf
inc
jno
out
inc
dec
jno
mov
repnz
loopne
pop
out
imul
int
rcr
pop
aad
dec
pushf
pop
sti
in
repz
xchg
stos
movs
clc
jnp
adc
aas
or
push
ins
loop
or
pop
dec
(bad)
ins
xchg
(bad)
sub
xchg
popa
mov
xchg
in
aam
mov
es
scas
inc
push
(bad)
in
sbb
lahf
mov
sbb
mov
gs
(bad)
outs
sti
mov
and
test
imul
mov
ret
or
inc
ret
loope
out
inc
scas
int
mov
add
jle
ins
add
jle
cmp
fcomp
inc
xchg
pop
mov
sbb
pushf
push
jle
std
test
daa
js
ret
cmp
cmc
jg
cmp
push
fwait
sub
fiadd
movs
adc
and
add
pop
push
dec
mov
push
xchg
arpl
sahf
ss
push
imul
cmps
xor
pop
ins
cmp
dec
not
scas
ret
gs
push
sub
pop
mov
push
aam
xchg
loop
(bad)
sub
movs
push
jns
mov
cwde
mov
and
retf
imul
pop
fld
xlat
dec
jecxz
mov
ss
(bad)
(bad)
push
xchg
xor
mov
inc
inc
std
movs
ds
ja
push
cmps
jecxz
movhlps
outs
loop
push
pop
outs
mov
add
loop
in
add
repnz
fistp
inc
sbb
gs
test
hlt
ds
mov
mov
(bad)
fisttp
fwait
std
sub
and
popa
or
call
sub
lea
clc
mov
in
lock
shr
sub
cs
or
xor
mov
xlat
pop
sar
sar
clc
loopne
xchg
js
pop
jnp
dec
inc
repz
arpl
add
shl
and
jecxz
jne
daa
in
mov
sbb
inc
mov
xor
jnp
and
or
or
mov
dec
imul
push
dec
pop
(bad)
cmps
stos
fisubr
mov
sub
call
sbb
fisub
sub
xor
outs
pop
pop
or
pusha
inc
not
inc
sub
icebp
outs
std
xor
std
pop
sub
xchg
(bad)
mov
pop
(bad)
pop
dec
ja
jae
dec
cmp
jbe
bound
xchg
dec
xor
movs
and
loope
fild
xchg
ret
dec
or
pop
arpl
push
mov
hlt
outs
xor
sub
scas
adc
(bad)
cmp
push
mov
movs
xchg
idiv
dec
xor
mov
(bad)
cmp
fcomi
sbb
add
jne
inc
rcr
ret
jg
dec
ret
or
loop
movs
sbb
ret
shr
outs
out
das
sbb
mov
mov
cmp
std
lahf
jno
cmp
xchg
jo
das
fsin
es
adc
outs
out
jl
inc
xchg
test
jg
or
inc
call
cmc
int
cmc
mov
nop
add
fmul
xor
and
xchg
inc
pop
ja
sar
mov
cld
call
fidiv
push
pop
cmps
imul
adc
xor
pop
std
mov
stos
call
pop
pop
ficomp
mov
or
push
dec
loop
fwait
sbb
inc
mov
push
mov
aad
stc
mov
mov
mov
scas
loope
rcr
mov
aas
xchg
inc
je
pop
mov
in
sub
sar
xchg
aaa
mov
jle
imul
dec
pusha
cmp
arpl
aam
or
fsubr
cmps
ret
out
fstp
loop
ret
dec
or
loope
pop
les
in
mov
mov
retf
dec
pop
gs
rol
pop
push
in
in
sti
fs
das
clc
mov
mov
inc
(bad)
mov
int3
test
push
mov
mov
add
scas
push
scas
pop
mov
ins
dec
fcmove
mov
pop
inc
fisttp
ud1
lock
jecxz
jmp
inc
jns
pushf
test
ret
sbb
movs
jb
inc
pop
pop
sti
pusha
dec
push
not
lock
add
sbb
xchg
repnz
(bad)
out
(bad)
loop
mov
cld
push
mov
mov
es
cmp
mov
dec
sbb
(bad)
aaa
outs
in
mov
cmp
(bad)
mov
push
ds
adc
ret
jbe
adc
icebp
in
adc
fdivr
je
cmp
jecxz
iret
jl
hlt
jb
rcr
xchg
stc
cdq
aam
shl
dec
in
arpl
pop
inc
test
(bad)
fisttp
shl
push
fucomi
xchg
xor
and
cmp
shr
dec
stc
jo
call
xchg
cli
out
in
dec
loopne
pop
lds
mov
lea
pop
in
cld
inc
lock
mov
lahf
add
jbe
push
sbb
pop
or
push
mov
cld
xor
ss
dec
xor
sbb
dec
dec
dec
jmp
pushf
xchg
call
pop
(bad)
icebp
icebp
or
in
pop
sbb
(bad)
xchg
in
data16
jg
fdiv
jns
gs
mov
stc
lods
cli
jmp
push
xor
fild
stos
rcl
das
pop
jl
xchg
ss
xchg
aaa
push
xchg
jp
pop
inc
xchg
lods
data16
ins
gs
add
cmp
sbb
mov
fldcw
mov
iret
adc
pop
call
ins
mov
dec
call
sub
out
lea
shr
xchg
dec
jecxz
sti
movs
pop
iret
sbb
xor
mov
push
ins
push
ret
dec
push
dec
retf
lock
sar
lock
mov
pop
push
mov
add
and
pop
jo
in
movs
mov
dec
(bad)
ds
mov
mov
jge
jp
icebp
mov
fldlg2
iret
movs
mov
push
clc
jns
add
mov
cld
push
clc
xor
cmp
addr16
cld
push
clc
addr16
cmps
aas
les
test
test
rcr
(bad)
ficomp
mov
add
scas
mov
sub
je
mov
outs
sbb
(bad)
jmp
xchg
sub
add
cmp
hlt
lods
iret
test
pop
les
pop
ins
mov
push
xchg
and
cmp
out
sub
xchg
fild
out
call
inc
sub
ja
int
mov
stos
xor
(bad)
hlt
jle
cld
dec
mov
aas
mov
rcr
das
icebp
lods
inc
cmps
clc
mov
add
jle
jae
pop
bnd
push
inc
jmp
inc
inc
shl
stc
popa
test
aam
adc
cmp
sub
js
daa
ss
xor
icebp
mov
adc
xor
cmc
into
jns
cmp
mov
xlat
lods
jl
in
mov
jno
popf
push
mov
ins
sbb
fld
into
jns
adc
daa
sub
imul
xchg
cmp
loope
out
fild
in
mov
or
repz
mov
jmp
jne
test
idiv
sub
mov
inc
ror
lods
daa
mov
or
inc
loopne
call
sti
push
cdq
dec
cmps
scas
cmp
adc
mov
ja
mov
std
loopne
xchg
pop
popf
lahf
push
aas
imul
ret
sahf
and
scas
scas
sub
xchg
push
cmp
(bad)
pop
push
add
clc
mov
mov
push
imul
aaa
mov
sub
test
mov
sub
sbb
pushf
or
xchg
push
not
pop
push
call
and
(bad)
pop
imul
mov
imul
ds
inc
test
lahf
dec
adc
pop
mov
and
cdq
add
xchg
jmp
iret
fst
xor
les
mov
pusha
fisttp
retf
fld
or
push
std
mov
xor
jle
xchg
inc
mov
xchg
and
lds
ja
test
xor
or
cmc
leave
jl
std
mov
mov
mov
jg
cmps
shr
rep
mov
lds
and
dec
add
xor
scas
in
fcomp
rcr
cs
jne
jecxz
repz
ins
jg
out
jg
addr16
pop
cmp
xor
mov
int
mov
pop
fistp
loope
xor
pop
je
xor
es
gs
dec
pop
(bad)
out
sbb
stc
xlat
dec
dec
loopne
pop
ret
mov
popf
sbb
or
cmc
pop
xor
ret
outs
mov
pop
xor
call
jae
xchg
pop
popa
loopne
fild
loop
ret
test
mov
(bad)
loop
mov
call
xchg
in
retf
xor
push
or
fisttp
lds
imul
mov
mov
in
stos
add
mov
lds
repz
in
xlat
xlat
dec
xchg
push
loop
out
push
and
add
mov
add
pop
stos
out
cli
scas
jecxz
xchg
das
ret
aas
loope
ret
int
jns
and
dec
ja
fdivr
or
xor
pop
sub
movs
aam
movs
mov
(bad)
xchg
rol
enter
mov
into
in
push
mov
pop
and
adc
enter
mov
inc
add
sub
or
pop
mov
mov
and
arpl
popa
mov
xor
ins
jecxz
fist
mov
retf
sbb
popa
rdmsr
das
and
lods
int3
xor
ds
ds
pop
xchg
sub
xor
cli
test
jmp
jl
in
and
sbb
leave
mov
out
add
cmp
push
imul
sub
mov
lahf
sub
sbb
test
jge
mov
shr
inc
outs
sub
sbb
addr16
ss
lods
mov
mov
inc
pop
aad
outs
xchg
stos
clc
jmp
sub
movs
mov
std
out
fdivr
jmp
mov
cmp
jns
fidivr
mov
xchg
push
or
jl
fisub
imul
inc
jnp
adc
xchg
dec
nop
inc
sbb
inc
(bad)
imul
fist
mov
push
push
mov
mov
call
lods
arpl
push
xlat
inc
sub
add
(bad)
sbb
or
repz
xchg
outs
inc
pop
xchg
loope
mov
mov
xlat
sub
in
dec
sub
scas
jae
push
xchg
sub
and
sub
iret
xlat
xor
mov
movs
add
shl
out
xchg
aas
xor
pop
sub
sti
add
add
fnstcw
(bad)
fistp
mov
sbb
or
pop
inc
xchg
mov
aas
std
mov
cmc
int
inc
(bad)
repnz
test
mov
add
push
bound
cmp
mov
loope
cmp
movs
lock
clc
cs
fwait
sbb
inc
js
cmp
xchg
jge
push
mov
cmp
cmp
outs
sbb
dec
inc
sbb
stos
shr
jne
(bad)
cdq
mov
xchg
pop
leave
pop
push
jg
push
cld
sbb
add
data16
clc
lds
lock
push
jg
fdiv
cld
sbb
rol
loope
inc
loopne
cld
ret
fcmove
retf
out
pop
in
push
inc
or
(bad)
ret
inc
inc
rcr
ret
push
cld
sbb
add
data16
clc
lds
pop
push
xchg
add
das
das
mov
cld
xor
aaa
or
arpl
add
lock
inc
rcr
lods
adc
pop
sbb
add
cmp
inc
pop
lock
push
jg
fdiv
cld
sbb
xor
aaa
or
arpl
add
js
jg
adc
add
div
pop
push
jg
push
cld
sbb
add
data16
clc
lds
lock
push
jg
fdiv
cld
sbb
rol
loope
inc
loopne
cld
ret
fcmove
retf
out
pop
in
push
inc
or
(bad)
ret
inc
inc
rcr
ret
push
cld
sbb
add
data16
clc
lds
pop
push
xchg
add
das
das
mov
cld
xor
aaa
or
arpl
add
lods
aam
and
dec
das
push
clc
outs
ret
call
mov
rol
add
jb
scas
adc
adc
mov
push
sub
jg
adc
xchg
push
call
jle
cld
je
aaa
sar
scas
loope
mov
outs
je
movs
das
outs
jns
neg
(bad)
add
xor
(bad)
int
sti
div
xchg
add
adc
int
imul
in
sbb
ds
imul
sub
push
mov
scas
enter
ins
xlat
sahf
cmps
aad
lock
add
cli
and
dec
inc
jecxz
jg
(bad)
xchg
inc
call
cmp
retf
sti
pop
out
retf
inc
add
aas
imul
lahf
clc
pop
inc
mov
std
adc
adc
cli
aas
loope
dec
jg
inc
cmc
(bad)
cld
sbb
inc
(bad)
jmp
push
idiv
fist
int3
cmp
(bad)
outs
dec
jg
inc
cmc
(bad)
cld
sbb
inc
(bad)
call
sti
sub
(bad)
aas
lock
inc
pop
scas
xchg
test
fdivr
add
clc
adc
add
neg
test
sti
sub
(bad)
aas
lock
inc
pop
mov
in
mov
add
inc
rol
cld
jle
push
mov
jg
dec
cld
ret
fidivr
jge
cli
cmps
(bad)
push
inc
in
mov
add
inc
rol
cld
jle
clc
pop
inc
mov
std
adc
adc
cli
stc
pop
mov
add
std
aad
and
lahf
clc
pop
inc
mov
std
adc
adc
cli
aas
loope
dec
jg
inc
cmc
(bad)
cld
sbb
inc
(bad)
jmp
push
idiv
fist
int3
cmp
(bad)
outs
dec
jg
inc
cmc
(bad)
cld
sbb
inc
(bad)
call
sti
sub
(bad)
aas
lock
inc
pop
scas
xchg
test
fdivr
add
clc
adc
add
neg
test
sti
sub
(bad)
aas
lock
inc
pop
mov
in
mov
add
inc
rol
cld
jle
push
mov
jg
dec
cld
ret
fidivr
jge
cli
cmps
(bad)
push
inc
in
mov
add
inc
rol
cld
jle
mov
test
or
cmp
or
pop
mov
mov
into
adc
push
out
pop
daa
rol
sahf
xchg
xchg
call
test
loop
les
outs
mov
aam
pop
(bad)
retf
enter
loope
adc
stos
pop
add
out
hlt
push
inc
dec
sub
int
fstp
retf
push
adc
sub
push
add
cmps
rol
mov
mov
add
sub
push
add
cmps
rol
mov
mov
dec
add
lock
mov
ret
movs
pop
clc
test
(bad)
sbb
mov
arpl
pop
sbb
sub
sbb
push
add
mov
js
push
xchg
or
push
loopne
jp
sub
sti
int
jnp
sub
dec
in
inc
mov
in
jmp
fldcw
mov
push
scas
push
aad
aam
dec
jecxz
lods
mov
lods
or
xchg
fsub
mov
fsubp
mov
adc
xchg
add
imul
movs
add
inc
xchg
dec
nop
aaa
or
xchg
or
fldcw
in
leave
in
ins
sub
jno
push
pop
push
mov
adc
pop
xchg
(bad)
inc
imul
xchg
(bad)
popf
stos
movs
sbb
(bad)
lock
in
xlat
mov
xchg
xlat
call
dec
jno
mov
push
shr
test
fisubr
rol
jmp
imul
dec
mul
cmp
pop
jne
cmp
test
(bad)
fbld
mov
mov
jge
aam
or
mov
cmp
add
add
out
(bad)
xchg
dec
pop
add
inc
aas
bnd
pop
inc
mov
std
and
lahf
mov
adc
test
cmp
mov
adc
inc
pop
sub
and
shl
jbe
aam
cmps
dec
imul
dec
and
push
or
sbb
or
ins
cmc
pop
fidiv
sub
mov
in
xchg
add
inc
lods
stos
iret
(bad)
xchg
sti
and
mov
mov
or
cdq
sahf
pop
or
jle
js
and
xchg
retf
mov
jbe
stc
push
xlat
and
cmp
cmp
aas
lock
and
(bad)
dec
mov
inc
mov
scas
adc
fwait
push
(bad)
das
movs
xor
(bad)
dec
jne
mov
addr16
(bad)
repz
pop
adc
stos
pop
xchg
movhlps
out
movs
outs
inc
jge
inc
or
mov
loopne
pop
(bad)
cmp
cs
fstp
inc
cmp
in
jl
pop
sar
and
and
out
jnp
xlat
aaa
div
dec
cmps
dec
xchg
enter
sbb
mov
dec
and
in
std
out
gs
mov
ja
pop
add
rcl
aam
lock
das
inc
sbb
in
int
add
inc
sar
mov
aas
fimul
(bad)
mov
(bad)
xchg
movs
pop
pop
pop
dec
xchg
adc
fxam
and
int
ins
and
clc
ret
popa
jmp
aaa
dec
icebp
jecxz
pop
(bad)
out
out
mov
mov
jnp
mov
cmp
repz
xor
out
and
shr
in
pushf
mov
ror
mov
inc
out
pop
push
inc
(bad)
pop
push
in
int
add
inc
sar
pop
mov
std
adc
repnz
icebp
(bad)
je
mov
(bad)
out
ret
sbb
lock
stos
stos
pop
fstp
rcl
push
sbb
pop
fiadd
push
add
stc
enter
movs
jp
in
xchg
sti
cs
loopne
and
lea
cwde
fldenv
in
inc
inc
mov
xchg
dec
out
cwde
and
pop
cs
adc
(bad)
shr
repz
loopne
jb
das
and
inc
test
sti
xor
adc
jg
outs
das
inc
sbb
in
int
add
inc
sar
pop
add
and
inc
sbb
mov
stos
imul
cmp
iret
add
fst
lahf
cmp
out
mov
adc
push
ret
mov
outs
(bad)
push
(bad)
jbe
cmp
mov
xor
pop
jle
outs
cld
iret
cld
int3
std
mov
repnz
inc
test
out
inc
lock
and
(bad)
dec
mov
ret
cdq
mov
clc
aaa
xchg
inc
mov
int
es
loopne
data16
pop
shr
mov
dec
add
pop
enter
cmp
sbb
mov
cld
cmp
add
dec
loop
scas
jg
movs
pop
dec
mov
sub
fidiv
mov
(bad)
loopne
adc
mov
call
movs
shr
pop
jns
popf
inc
test
sti
xor
adc
jg
outs
das
inc
sbb
in
int
add
inc
sar
ins
iret
fldenv
div
hlt
pop
hlt
cmp
fwait
inc
push
jmp
daa
xchg
test
push
push
add
sbb
in
xchg
repz
ss
mov
jg
jg
dec
dec
aad
dec
ret
jns
jmp
std
adc
repnz
icebp
fidivr
lock
xchg
inc
xchg
mov
imul
in
cmp
lods
(bad)
jecxz
dec
or
bound
jle
into
xor
jge
sti
or
push
sbb
xor
std
pop
push
dec
fwait
sub
sbb
inc
inc
add
loope
sbb
dec
dec
icebp
xlat
push
fidiv
test
scas
jmp
loopne
push
fisttp
sbb
fidivr
fild
cmp
mov
mov
sub
inc
pop
sub
adc
pop
or
mov
adc
ret
mov
add
mov
or
sub
adc
pop
or
mov
adc
ret
mov
add
mov
or
sub
sbb
inc
add
cld
out
fs
sub
push
jmp
push
mov
mov
push
add
hlt
mov
mov
pop
xor
idiv
ret
daa
les
addr16
je
sbb
jmp
test
enter
jo
xchg
aas
ret
pop
push
iret
scas
fdivr
mov
arpl
aaa
movs
jp
(bad)
pop
xchg
ret
in
mov
scas
lea
sar
sahf
inc
jbe
arpl
les
xchg
aam
lahf
mov
jnp
aad
xor
push
mov
xchg
ins
or
adc
rcr
aad
loopne
cmp
jecxz
div
int3
icebp
test
jo
xchg
ret
jns
lea
xor
xchg
fidiv
pop
mov
jl
repnz
fwait
sbb
inc
dec
and
dec
cmp
push
push
aad
in
sub
cmps
out
sbb
or
cdq
ret
and
dec
test
jecxz
pop
aaa
add
(bad)
imul
popf
in
jne
sbb
ins
pushf
(bad)
mov
stos
xchg
sbb
int3
inc
cmps
push
jge
sbb
adc
pop
fdivr
out
xor
adc
inc
je
mov
cli
add
or
add
mov
cmc
repz
jge
sti
add
clc
and
fistp
mov
(bad)
inc
add
repnz
pop
push
jl
add
mov
xor
inc
mov
gs
inc
add
inc
xchg
cwde
sar
add
retf
add
fistp
jg
ds
in
xor
cli
repnz
pop
mov
xor
lds
jmp
inc
js
sub
icebp
xor
out
pop
out
scas
pusha
repz
loope
std
cmps
jl
jo
push
js
xchg
into
mov
add
jno
daa
pop
inc
ret
(bad)
adc
sahf
adc
aaa
ins
push
sbb
or
mov
lods
imul
xchg
mov
in
fstp
ds
icebp
scas
lds
int3
sub
sbb
xchg
imul
mov
sbb
test
stos
outs
fdiv
push
in
int
pop
mov
push
or
push
sub
mov
out
jge
adc
aas
lahf
out
and
enter
fadd
movs
je
(bad)
xor
push
fwait
out
adc
jbe
sub
mov
lock
jmp
pop
js
ret
sbb
stos
iret
not
rol
aad
imul
pop
les
dec
cwde
or
jge
inc
xchg
out
mov
cld
jmp
ret
mov
adc
imul
dec
mov
test
add
lock
sub
sub
sti
dec
lock
in
pop
lock
sbb
dec
aam
cmc
mov
xor
enter
xchg
or
popa
push
xchg
jae
mov
(bad)
mov
dec
in
out
sahf
mov
xchg
(bad)
jecxz
and
jp
cdq
jne
push
in
imul
call
out
dec
and
cld
aas
loopne
outs
loope
in
add
fistp
lds
dec
sbb
out
jb
xor
sbb
cld
push
loopne
or
ds
dec
icebp
in
sub
icebp
iret
sub
jno
in
jmp
sahf
inc
and
iret
sbb
adc
cmp
(bad)
(bad)
sbb
test
dec
sub
call
nop
shl
xchg
jecxz
ret
fisttp
sub
push
(bad)
call
sub
out
pop
dec
(bad)
cmp
dec
stos
mov
out
push
dec
push
outs
mov
ficomp
stc
popf
adc
enter
(bad)
cli
xor
mov
add
(bad)
lods
mov
add
or
jg
idiv
inc
repnz
fwait
aaa
xchg
repnz
pop
jnp
sub
add
scas
js
rcr
sti
inc
xchg
jnp
mov
mov
call
pushf
xor
xlat
mov
popa
lock
in
loop
ficom
sahf
daa
dec
cs
loope
inc
sub
inc
(bad)
and
xchg
outs
push
mov
in
out
cli
push
sti
mov
jns
cmps
xor
dec
mov
mov
adc
loop
cmps
mov
and
jle
mov
dec
mov
jne
push
jl
or
mov
stos
loop
idiv
add
fcomi
jne
jle
jmp
pop
test
loop
inc
(bad)
rcr
retf
jno
dec
mov
mov
das
jmp
push
xor
xchg
jg
out
pop
movs
push
dec
push
sub
aas
bound
cmp
add
(bad)
(bad)
dec
sub
in
dec
xor
push
js
(bad)
mov
jns
pop
push
lock
enter
(bad)
loop
cld
xchg
lahf
adc
jmp
add
jae
aam
dec
out
inc
mov
add
sub
add
pop
or
xchg
in
gs
sub
retf
push
add
cmps
rol
mov
mov
add
sub
push
add
cmps
rol
mov
mov
add
sub
push
add
cmps
rol
mov
mov
add
sub
push
add
cmps
rol
mov
mov
add
sub
push
add
cmps
rol
stos
call
jne
xor
and
mov
push
sub
inc
loope
dec
ja
aas
sti
inc
ja
in
or
mov
pop
call
dec
mov
dec
dec
clc
pop
loope
lock
xchg
scas
movs
inc
and
jae
rol
push
and
mov
out
ins
popaw
mov
mov
outs
mov
push
cmp
mov
imul
loop
pop
rcl
ret
xor
cmps
mov
pop
pop
mov
and
xor
add
xor
call
sahf
sbb
sbb
(bad)
jo
ss
mov
mov
sbb
int3
fs
add
(bad)
cmps
imul
dec
mov
cmps
stc
inc
or
cmps
(bad)
sub
sbb
sub
fld
cmp
add
test
xor
dec
mov
mov
clc
stos
repnz
xor
cmps
(bad)
dec
test
mov
mov
out
(bad)
pop
ins
mov
xchg
ja
in
enter
push
test
mov
xor
xor
pushf
inc
jno
test
pop
imul
jnp
leave
loopne
jnp
push
sar
(bad)
mov
xlat
sahf
inc
loope
dec
sub
popf
push
jne
fwait
mov
inc
or
lods
imul
call
inc
sub
clc
shr
sub
pop
pop
cld
ret
jge
push
dec
mov
jle
jg
jne
or
add
mov
test
inc
std
mov
cmc
int
inc
sar
and
push
loopne
push
inc
jbe
add
jp
in
fyl2x
cs
loop
ret
outs
jo
mov
cmps
aaa
ins
ja
sbb
aas
fldcw
push
and
sub
movs
mov
jle
fisub
clc
imul
sti
popf
daa
dec
mov
dec
xlat
call
add
mov
push
push
jno
pop
fs
leave
aas
loope
icebp
pop
std
add
das
cld
add
cld
sub
sbb
mov
jmp
js
les
in
scas
and
fimul
inc
xlat
test
jae
mov
(bad)
outs
cli
push
pop
inc
loopne
paddd
mov
dec
push
adc
scas
rcl
stc
jg
ds
add
aam
lock
mov
jg
rsqrtps
add
dec
aas
ret
inc
xchg
mov
and
add
push
jl
inc
mov
and
add
push
mov
stc
pop
inc
add
pop
retf
aas
mov
cld
and
and
add
xor
mov
jg
lods
lahf
loope
inc
jg
sar
inc
add
jg
sar
inc
add
jnp
dec
repnz
cld
or
add
(bad)
out
clc
daa
cmp
ret
outs
and
dec
aad
nop
(bad)
mov
dec
jecxz
push
loopne
adc
into
mov
cld
sub
das
clc
js
(bad)
outs
cli
push
pop
inc
loopne
paddd
(bad)
clc
js
(bad)
outs
cli
push
pop
inc
loopne
paddd
(bad)
ins
mov
inc
inc
cmp
stc
lahf
(bad)
add
dec
cld
aaa
loop
test
mov
push
xchg
sub
adc
ficom
hlt
add
dec
mov
(bad)
mov
repz
dec
arpl
test
inc
xchg
mov
and
add
push
jl
inc
mov
and
add
imul
jg
aas
gs
stc
lahf
(bad)
add
cmc
mov
int
push
(bad)
xchg
dec
lods
pushf
(bad)
xchg
mov
xor
dec
jg
lods
lahf
loope
inc
inc
ret
sar
inc
add
jg
sar
inc
add
std
mov
stc
pop
inc
add
pop
retf
aas
mov
lock
mov
mov
loope
inc
or
aas
call
and
loope
inc
inc
ret
sar
inc
add
jg
sar
inc
add
jnp
dec
repnz
cld
or
add
(bad)
out
clc
daa
iret
lahf
lock
cmp
jp
inc
dec
(bad)
adc
lock
sti
loopne
aad
ss
faddp
ins
pop
inc
lock
xchg
ret
dec
cmp
push
jmp
outs
dec
loope
addr16
add
jmp
sbb
push
pop
icebp
fwait
inc
cmp
mov
rol
pop
sbb
mov
cli
call
add
aad
inc
pop
cmp
cmp
mov
(bad)
push
dec
jnp
fnstsw
fwait
out
ins
scas
das
clc
daa
pop
test
pop
push
mov
mov
sbb
cwde
xchg
dec
out
mov
push
pop
nop
push
inc
adc
push
inc
adc
push
inc
adc
push
inc
adc
push
inc
adc
push
inc
adc
push
inc
adc
push
inc
adc
push
inc
adc
push
inc
adc
push
inc
adc
push
inc
adc
push
inc
adc
push
inc
adc
push
inc
adc
push
inc
adc
push
inc
adc
push
inc
adc
push
inc
adc
push
inc
adc
adc
out
call
and
or
cmp
jns
xor
mov
adc
ins
jle
ror
dec
std
outs
or
push
pushf
call
jno
jbe
clc
adc
and
sbb
stos
movs
stos
lds
mov
lea
adc
mov
test
dec
loope
hlt
imul
nop
mov
test
mov
fs
retf
pop
jmp
lgs
clc
cmp
push
test
iret
repnz
push
sub
jae
js
fnstsw
mov
fcmovnu
cwde
bound
push
or
jge
xchg
xlat
jle
fisubr
adc
test
pop
xlat
loope
adc
push
ins
mov
inc
jmp
dec
cmp
adc
cmps
movs
aaa
mov
out
push
mov
outs
(bad)
retf
jno
js
lods
push
sbb
aad
(bad)
mov
sub
(bad)
dec
jmp
mov
push
outs
mov
pop
and
sbb
int3
data16
repz
imul
ins
cmp
jne
bnd
mov
mov
inc
jge
lock
push
add
sti
pop
inc
leave
aad
daa
(bad)
fistp
mov
sbb
out
fdivr
dec
sar
sti
inc
movs
push
xlat
ss
fisub
inc
adc
test
dec
sub
push
sbb
ins
sbb
lea
sbb
and
mov
adc
out
retf
test
pop
jnp
push
(bad)
mov
mov
call
push
js
and
push
xlat
push
and
jne
call
pop
pop
cld
xor
ds
add
inc
inc
cld
inc
jp
(bad)
mov
sbb
sub
push
clc
push
ja
cmp
shl
dec
test
aas
xor
inc
dec
adc
fcomp
sbb
repnz
inc
adc
test
sti
mov
sahf
xchg
outs
cld
xor
ds
add
inc
inc
cld
inc
pop
lock
fist
add
pushf
clc
cmps
inc
add
adc
(bad)
icebp
fwait
inc
and
add
xor
ret
arpl
add
add
jg
dec
push
cs
sti
mov
xchg
ret
cmp
add
adc
inc
les
add
iret
mov
push
aas
inc
adc
lock
sbb
repnz
inc
adc
ss
(bad)
outs
cli
pop
cmc
dec
cld
xchg
add
ror
mov
out
jecxz
inc
iret
inc
iret
lock
popf
mov
cmp
dec
dec
daa
inc
loop
inc
xchg
cmps
inc
inc
out
aas
clc
sub
das
clc
ins
outs
mov
hlt
aas
jmp
mov
aaa
std
psubd
loop
in
inc
ja
inc
and
mov
lock
fist
add
pushf
clc
cmps
inc
add
adc
ret
cmp
add
adc
inc
les
cld
ss
(bad)
outs
cli
pop
cmc
dec
cld
xchg
add
sar
add
xchg
push
inc
and
add
xor
loop
add
jae
repz
or
clc
outs
mov
dec
jl
inc
or
loope
mov
cmp
dec
dec
daa
inc
loop
dec
(bad)
sbb
jecxz
std
psubd
loop
inc
xchg
clc
int
add
test
add
call
enter
inc
outs
cld
xor
ds
add
inc
inc
cld
inc
pop
lock
fist
add
pushf
clc
cmps
inc
add
adc
(bad)
icebp
fwait
inc
and
add
xor
ret
arpl
add
add
jg
dec
sbb
mov
sbb
cmp
add
xor
into
fist
inc
xchg
jae
lahf
cld
adc
inc
les
lods
push
or
or
sub
inc
out
lods
add
clc
into
or
lock
jmp
scas
sar
in
cdq
lock
cmp
mov
test
shl
mov
in
mov
cmc
mov
push
add
mov
dec
xor
push
scas
inc
fisubr
dec
cmp
movs
sbb
in
mov
pop
ins
adc
mov
mov
fidiv
rcl
sbb
ins
sbb
lea
add
inc
fiadd
jecxz
cmps
ins
mov
push
mov
mov
mov
fild
ins
adc
mov
mov
fidiv
rcl
sbb
ins
sbb
lea
add
inc
fiadd
jecxz
cmps
ins
mov
push
mov
mov
mov
fild
ins
adc
mov
mov
fidiv
rcl
sbb
ins
sbb
lea
add
cld
sub
test
cdq
loop
shl
iret
into
sbb
push
cwde
xor
jns
jl
icebp
xor
dec
sahf
shr
sbb
push
cld
inc
aam
in
sub
clc
dec
(bad)
jecxz
adc
in
movs
ror
sbb
push
cmps
sbb
jl
bound
fs
in
cmc
adc
adc
adc
movs
data16
out
push
icebp
(bad)
cmps
push
xchg
adc
outs
push
inc
xchg
fdiv
push
fist
pop
inc
add
jg
mov
cmp
retf
fdivr
and
aam
pusha
fsubr
lods
nop
jns
cmps
sbb
xchg
sub
sub
dec
std
jbe
mov
(bad)
and
ins
sbb
xchg
lds
adc
pop
mov
pop
fidiv
retf
clc
pop
(bad)
sbb
mov
push
retf
mov
jecxz
aam
cld
pop
sub
or
adc
rol
or
jecxz
cld
and
div
aas
mov
pop
inc
cmc
aam
mov
xchg
jb
xchg
mov
inc
and
icebp
adc
(bad)
loopne
xchg
mov
retf
mov
not
xchg
mov
fisttp
xor
dec
and
repz
xchg
mov
cmp
retf
daa
outs
mov
mov
les
aad
in
div
sbb
pop
loop
icebp
cmp
rol
shr
dec
or
mov
pop
sbb
fwait
into
mov
adc
aas
aaa
test
dec
sbb
adc
cli
inc
cmp
mov
mov
hlt
xor
ss
ja
outs
scas
outs
stos
cmps
out
mov
mov
cld
imul
mov
retf
retf
jmp
icebp
add
mov
stos
in
out
(bad)
adc
scas
out
iret
inc
jl
xor
sub
mov
push
mov
frndint
push
fsubr
out
in
and
add
push
loopne
sti
jge
add
sub
shl
mov
mov
cmp
inc
dec
cmps
scas
pop
push
sti
mov
fimul
loopne
push
inc
jbe
popa
inc
adc
add
jle
and
inc
jmp
sti
(bad)
push
call
xlat
sar
add
xchg
std
sub
push
scas
cmp
sti
mov
(bad)
sub
dec
xchg
movs
(bad)
mov
daa
mov
js
inc
icebp
outs
in
or
jmp
push
xchg
mov
je
xchg
ss
pusha
mov
cmp
sti
jge
jge
inc
add
inc
xchg
xchg
mov
add
sub
or
ds
jle
fidivr
adc
add
add
inc
int
xor
das
in
inc
test
ret
cmps
ret
out
jl
xor
loope
mov
enter
jle
pop
add
mov
cmps
imul
and
adc
push
gs
repnz
xchg
cmp
stos
dec
push
dec
mov
mov
les
std
add
and
pop
shr
fisttp
pop
pop
enter
mov
data16
sub
mov
lods
or
ins
fidivr
ret
fxch
dec
in
cli
and
fstp
or
fcomp
pop
cmc
fwait
js
fnstenv
pop
inc
and
cmp
inc
leave
rol
push
jge
je
add
sbb
lds
mov
or
pop
fist
mov
or
aam
cmps
popf
xchg
push
in
cmp
stc
(bad)
mov
mov
sbb
arpl
outs
push
pop
imul
popf
xlat
mov
hlt
std
xor
fldcw
mov
and
popf
mov
cld
or
ds
cmp
loop
pop
test
mov
repnz
ror
dec
shl
fisubr
fidivr
sar
dec
inc
xor
pop
sar
add
inc
out
mov
movs
mov
fidivr
js
in
or
pop
pop
std
popf
mov
fwait
stos
ins
inc
pop
pop
sub
inc
dec
sbb
inc
in
sub
dec
jns
shr
adc
clc
adc
adc
jns
repnz
cld
adc
loopne
(bad)
int3
je
add
add
data16
cld
push
cmp
mov
cmp
mov
aad
icebp
ds
std
popf
jle
jl
icebp
daa
in
out
loopne
popf
inc
sar
mov
xor
movs
shl
xor
retf
mov
dec
sahf
or
xlat
mov
mov
push
ficomp
in
jbe
popf
xchg
xchg
add
add
neg
in
div
jno
mov
jne
lods
mov
add
dec
mov
ficomp
mov
sbb
jle
imul
dec
test
cli
daa
hlt
scas
lahf
lods
push
stos
jne
movs
in
jnp
int
aam
imul
stc
pop
xchg
inc
or
add
add
cld
je
(bad)
in
outs
hlt
out
or
jnp
out
out
mov
(bad)
push
cmp
mov
jmp
rol
adc
jle
lock
(bad)
pop
or
dec
pop
lock
jns
fsqrt
ret
iret
in
ja
sbb
add
inc
aas
mov
sti
arpl
cld
push
push
inc
xchg
mov
mov
hlt
mov
jle
arpl
jge
bound
(bad)
(bad)
aas
mov
mov
xlat
inc
xlat
sub
sub
push
dec
call
popf
inc
and
sbb
dec
neg
xchg
ret
fst
pop
pop
xchg
outs
ja
lds
add
icebp
int3
call
inc
mov
dec
mov
data16
test
in
dec
loop
adc
pop
lea
cmps
pop
shl
xor
fucom
sub
movs
jns
inc
out
dec
je
sbb
bound
dec
sar
mov
iret
icebp
xor
lahf
mov
(bad)
and
sub
jg
out
mov
pop
cmps
jb
adc
adc
mov
loopne
ret
(bad)
pop
xchg
mov
pop
jmp
(bad)
ins
imul
stos
lea
inc
out
inc
loopne
les
in
or
mov
xor
inc
es
cli
stc
sar
xchg
dec
stc
stos
dec
sti
inc
and
push
(bad)
add
rcl
dec
cmc
inc
sub
ds
cmp
outs
lods
ss
inc
jge
mov
test
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
add
dec
inc
faddp
fs
mov
inc
scas
pop
inc
sbb
pop
ret
frstor
(bad)
push
inc
retf
imul
or
xchg
mov
int
pop
loope
into
leave
mov
sub
int
daa
xor
or
rdtsc
movs
mov
aam
mov
test
dec
ret
int
jecxz
mov
or
sub
fisub
sar
jmp
sbb
arpl
mov
inc
or
push
popf
jge
lds
fcomp
sar
jns
daa
xchg
mul
mov
les
add
das
pop
pop
adc
fs
and
or
in
out
test
or
push
pop
int
lods
add
xchg
or
retf
lahf
pop
popf
jnp
mov
lds
retf
jmp
inc
pop
clc
(bad)
dec
aam
push
mov
pop
mov
add
in
and
bound
aad
dec
stos
dec
dec
arpl
push
cmp
jmp
repnz
pop
pop
lock
adc
jne
outs
lods
in
scas
sbb
jne
push
iret
scas
lods
jp
(bad)
out
sbb
inc
inc
test
push
pop
loop
push
cmp
in
in
push
sti
jne
frstor
sbb
mov
mov
jge
rol
ror
addr16
jecxz
dec
xchg
lds
in
ds
dec
sbb
pop
adc
cmc
movs
sub
xchg
lahf
mov
xchg
mov
outs
ins
imul
xchg
mov
das
jecxz
sub
fs
cmp
test
mov
pusha
aas
mov
daa
mov
pop
imul
cmp
push
lahf
out
ins
jo
inc
cmp
stos
push
mov
data16
int3
fsub
in
xchg
(bad)
(bad)
in
scas
push
push
sbb
pop
sbb
jmp
push
cwde
adc
dec
sbb
push
xchg
mov
and
jbe
jo
fidiv
pop
iret
sbb
(bad)
xlat
ins
mov
xchg
mov
sbb
mov
out
jl
cmp
or
sti
or
add
aam
daa
(bad)
fistp
mov
cmp
iret
fmul
dec
mov
inc
movs
push
(bad)
cwde
mov
jg
retf
inc
clc
mov
pop
cdq
loopne
push
mov
imul
add
inc
inc
mov
(bad)
rcr
pop
dec
rcr
enter
in
(bad)
in
in
cmp
dec
lock
(bad)
xchg
fisttp
jnp
clc
cmps
dec
add
inc
dec
add
rcl
lahf
inc
push
retf
popa
mov
in
xor
push
test
cs
(bad)
jmp
inc
inc
jmp
adc
ret
push
mov
std
xchg
movs
and
in
ss
push
outs
jle
jmp
add
cmp
icebp
out
fist
call
outs
out
hlt
sbb
test
jae
in
add
sbb
dec
pop
push
xor
add
(bad)
mov
add
add
add
push
and
pop
push
popf
cmp
xor
inc
lea
push
test
mov
fdivr
setnp
inc
push
je
dec
adc
outs
cmp
cmp
push
in
add
pusha
cmp
aas
xchg
nop
sti
jge
inc
loop
in
xchg
lock
fild
cmc
ins
daa
pop
jge
pop
pandn
xor
(bad)
loop
sub
dec
and
cs
pop
daa
mov
(bad)
jbe
lds
add
sbb
(bad)
and
scas
stc
jmp
inc
cld
sbb
(bad)
and
xlat
icebp
pop
lods
fsubr
neg
out
jge
cmps
jle
inc
add
js
(bad)
ja
jmp
mov
dec
out
pop
xor
daa
into
or
jl
out
ds
and
aam
or
aas
gs
sbb
jns
and
mov
in
aaa
daa
int3
aaa
adc
cmp
movs
arpl
push
mov
icebp
imul
clc
jg
add
pop
inc
mov
imul
clc
jg
add
pop
inc
mov
repnz
mov
shr
jne
dec
in
ja
cli
cld
iret
je
pop
in
imul
inc
loope
ret
unpcklps
mov
out
mov
ds
and
dec
gs
fldcw
xor
aaa
jecxz
lea
(bad)
fdiv
sti
xor
ins
jae
and
push
js
cmps
inc
ret
mov
sub
inc
loopne
inc
icebp
adc
ret
mov
sub
inc
loopne
inc
icebp
adc
push
push
and
jle
scas
enter
aam
add
inc
push
add
lock
inc
xchg
inc
mov
inc
xlat
mul
loopne
jecxz
gs
(bad)
pop
(bad)
ret
movs
out
imul
cmp
mov
pop
lea
mov
lods
daa
dec
mov
out
dec
popf
jbe
imul
fisub
fdivr
cmp
xor
ja
xlat
cld
cmc
lock
dec
inc
adc
cmp
xlat
cld
cmc
lock
dec
inc
adc
mov
out
push
jnp
pop
pop
jge
lea
mov
enter
pop
mov
ret
dec
pop
loopne
mov
adc
lock
movs
(bad)
xlat
mov
push
inc
in
mov
iret
and
inc
mov
or
ret
xor
mov
mov
ret
lods
arpl
mov
push
inc
loope
lock
not
aaa
fcmove
pop
int3
push
mov
and
or
dec
fidiv
jo
scas
adc
add
add
rol
add
add
rol
cmp
int
aad
cli
pop
mov
xchg
push
jns
mov
(bad)
sar
jle
jecxz
mov
das
mov
test
jl
int
into
mov
inc
cmp
pop
cmp
sbb
fidivr
loop
xchg
dec
pop
pop
(bad)
daa
mov
sub
scas
in
out
(bad)
mov
inc
mov
(bad)
in
xor
add
add
rol
add
add
rol
popa
xchg
fcmovu
xlat
mov
shl
push
mov
pop
loopne
sar
in
and
ret
loop
in
repz
and
sub
dec
adc
shr
jle
push
xchg
jg
aas
aam
(bad)
mov
imul
jmp
push
xchg
clc
xchg
stc
(bad)
(bad)
cld
cmp
xlat
jns
cmp
test
adc
mov
loope
add
inc
loope
mov
loop
pop
adc
push
icebp
pop
pop
popa
mov
imul
out
cmc
shl
add
add
in
in
fbstp
xchg
xchg
imul
and
pop
sti
(bad)
jmp
push
rcr
in
push
push
rol
push
push
rol
push
push
rol
push
push
rol
push
push
rol
push
push
rol
push
push
rol
push
push
rol
push
push
rol
push
push
rol
push
push
rol
push
push
rol
push
push
rol
push
push
rol
push
push
rol
push
push
rol
push
push
rol
push
push
rol
push
push
rol
call
dec
lods
xor
out
mov
xchg
jnp
cli
test
(bad)
add
ret
and
push
mov
mov
jnp
jbe
push
std
in
ds
shr
daa
aad
cmp
mov
sbb
push
repnz
cdq
xchg
inc
data16
outs
push
xor
out
xor
jl
jnp
scas
fwait
cmps
or
leave
mov
jns
cld
mov
test
imul
dec
sub
test
and
add
add
aad
cmps
imul
xor
pop
(bad)
xchg
inc
fnstcw
cmp
mov
in
sar
(bad)
dec
jecxz
adc
pop
sbb
stc
push
xchg
pop
sbb
cmp
and
xchg
mov
into
(bad)
pop
(bad)
sbb
loope
adc
(bad)
sbb
and
or
clc
enter
pop
xchg
lock
mov
loopne
xor
daa
mov
cmp
sti
or
mov
jno
fild
div
adc
jb
mov
into
mov
jno
mov
mov
xchg
jns
pop
add
cmp
mov
cmovb
iret
xchg
pushf
sub
lahf
in
imul
loop
fucom
pop
cmp
cmp
and
sub
ss
fidivr
test
mov
or
fst
fimul
repz
cmp
jl
mov
sahf
daa
pop
test
pop
bound
or
xchg
mov
popa
mov
lea
sbb
outs
test
icebp
sub
sbb
daa
shr
ja
sub
(bad)
fidivr
push
into
sti
jp
fidiv
repz
je
aas
test
sub
hlt
call
aas
cdq
adc
out
jmp
jle
std
cmp
jbe
ror
pop
mov
cld
dec
sub
inc
(bad)
sbb
int3
std
push
add
cmp
ror
ja
pop
sub
jb
push
adc
lods
lods
adc
retf
sti
lods
cmp
mov
pop
popf
outs
cs
inc
mov
dec
cmp
mov
lahf
jbe
icebp
ins
(bad)
xchg
daa
out
mov
push
dec
mov
test
scas
xchg
idiv
or
sar
sub
fistp
mov
call
xchg
rcr
inc
movs
push
xlat
shl
inc
fucomp
jg
inc
sar
xor
push
out
sub
in
inc
mov
gs
sub
mov
push
out
outs
out
pop
into
xchg
mov
dec
in
std
jecxz
sar
pop
sub
aaa
mov
(bad)
out
idiv
icebp
cld
jmp
(bad)
aas
popf
sbb
sti
(bad)
rep
mov
js
je
outs
out
pop
into
xchg
mov
dec
in
std
jecxz
sar
pop
sub
aaa
mov
(bad)
out
idiv
icebp
cld
jmp
(bad)
aas
popf
and
cmps
push
inc
or
lahf
inc
add
mov
add
sub
push
add
cmps
rol
mov
mov
add
sub
push
add
cmps
rol
mov
mov
add
sub
push
add
cmps
rol
mov
mov
add
sub
push
add
cmps
rol
mov
mov
add
sub
push
add
sahf
scas
test
ret
repnz
jl
jmp
xor
or
in
add
push
stos
test
jae
outs
push
(bad)
mov
mov
std
retf
fmul
mov
imul
mov
icebp
mov
out
or
in
cmp
push
and
sub
push
sub
out
lahf
mov
mov
cmp
mov
push
push
mov
xor
out
adc
sbb
dec
adc
xchg
pop
loopne
popf
mov
les
pop
pushf
stos
adc
test
stc
shl
jle
cmp
sbb
(bad)
cmps
dec
push
mov
adc
dec
bound
mov
inc
mov
pop
icebp
and
fimul
mov
scas
retf
sub
cmp
pop
mov
sar
icebp
xchg
jecxz
xchg
push
cmp
dec
shl
mov
(bad)
cs
outs
and
pusha
lods
and
add
ins
out
dec
out
mov
(bad)
push
push
bound
mov
and
sbb
movd
jmp
sub
outs
and
xchg
push
pop
fistp
or
inc
push
mov
jne
xor
cmps
push
pop
rcl
push
ret
ds
popf
jo
mov
test
mov
mov
xchg
cmps
outs
jb
jge
xchg
mov
cmp
adc
clc
jg
repz
dec
enter
sbb
and
sub
outs
mov
inc
test
cmc
mov
or
add
xchg
movs
jmp
or
xlat
test
addr16
loop
dec
ret
dec
push
cs
outs
ins
test
adc
sub
ret
icebp
adc
sbb
xchg
(bad)
mov
iret
loop
hlt
push
test
pop
jbe
push
pop
xor
std
shl
mov
imul
lea
retf
pop
in
inc
nop
call
aaa
xor
fs
xchg
jle
mov
mov
jmp
dec
fisub
pop
iret
stos
pop
pop
pop
inc
sbb
ins
(bad)
neg
add
add
cmp
jne
mov
outs
cs
nop
inc
push
mov
(bad)
sbb
aas
add
enter
in
ins
jo
enter
mov
xlat
aas
cmc
sar
loope
(bad)
xlat
lock
pop
inc
mov
or
hlt
inc
jmp
scas
xchg
mov
xor
or
mov
jp
test
add
jmp
outs
mov
inc
jnp
in
xor
add
dec
loopne
sti
jge
add
sub
jmp
inc
and
lock
mov
inc
fidiv
xlat
mov
shl
fnsave
push
add
inc
fisubr
jbe
mov
mov
mov
push
in
mov
push
fidiv
shl
mov
mov
mov
mov
imul
outs
fidiv
shl
fnsave
push
add
inc
fisubr
jbe
mov
mov
mov
push
in
mov
push
fidiv
shl
mov
mov
mov
mov
imul
outs
fidiv
shl
fnsave
push
add
inc
fisubr
jbe
mov
mov
mov
push
in
mov
push
fidiv
shl
mov
mov
mov
mov
imul
outs
fidiv
shl
fnsave
push
add
inc
fisubr
jbe
mov
mov
mov
push
in
mov
push
movs
mov
xchg
ins
sub
xor
repz
cld
jmp
icebp
int
bound
daa
mov
jo
jae
mov
dec
xchg
fstp
pop
xchg
loope
sub
push
mov
jge
mov
sub
fbstp
dec
lock
jge
jg
mov
scas
mov
mov
or
sbb
stos
in
enter
loop
or
sbb
test
iret
mov
in
push
call
or
jle
or
ds
inc
xor
lods
mov
pop
(bad)
fs
popa
rcr
xchg
xchg
or
mov
rcr
push
fwait
jbe
xchg
sub
push
push
cmp
cmp
lahf
jge
sub
mov
inc
jo
mov
lahf
inc
repnz
(bad)
mov
inc
jge
inc
cmp
pop
shl
mov
sub
ins
shl
(bad)
push
add
out
jmp
inc
call
fcmovnu
popa
je
es
(bad)
iret
bound
cmps
pop
call
jb
jb
add
sahf
sub
dec
pop
mov
cmp
pusha
je
pushf
arpl
jne
aas
xchg
pop
jmp
mov
popf
cmc
in
lahf
xor
push
cmp
fs
sbb
inc
sbb
movs
jp
test
dec
(bad)
jmp
and
adc
stos
adc
sbb
shl
icebp
mov
inc
rcl
into
pop
sar
lock
out
pop
inc
sub
mov
ja
(bad)
and
mov
pop
mov
and
ja
hlt
scas
push
std
movs
and
and
(bad)
pushf
mov
push
test
ficomp
push
xor
in
cs
ins
push
out
mov
sti
imul
test
loop
cmp
sbb
jns
sahf
mov
leave
pop
pop
xchg
in
dec
cld
jp
sub
mov
mov
cmp
inc
cmp
movs
nop
xchg
enter
in
call
add
aad
cmp
dec
lahf
jne
mov
cli
out
push
or
dec
(bad)
pop
ficomp
cdq
inc
push
dec
xor
int
aaa
fisubr
cwde
scas
fucomp
sbb
pop
jg
jnp
in
xor
sti
push
js
(bad)
fistp
mov
pop
ret
ins
ds
mov
jbe
ja
arpl
test
idiv
js
scas
jg
xchg
inc
sbb
mov
mov
mov
push
dec
jle
jg
clc
dec
cwde
pop
loope
push
mov
dec
adc
sub
mov
or
lahf
inc
push
add
mov
pop
push
push
dec
mov
hlt
push
pusha
sbb
mov
sub
adc
sub
push
add
mov
pop
push
push
dec
mov
hlt
push
pusha
sbb
mov
sub
adc
sub
push
add
mov
pop
push
push
dec
mov
hlt
push
pusha
sbb
mov
sub
adc
sub
push
add
mov
pop
push
push
dec
mov
and
(bad)
repnz
fst
test
movs
mov
ja
rol
clc
(bad)
jo
int
pop
mov
fiadd
jmp
es
mov
lea
push
pop
lods
cmp
hlt
sub
hlt
inc
jmp
out
push
dec
mov
push
or
inc
int3
jb
fisttp
js
scas
mov
aad
int3
push
ins
ja
imul
ret
mov
iret
pop
int
jae
scas
pop
cmps
sbb
push
push
jge
sub
xchg
int
iret
add
cmp
inc
or
mov
cmp
mov
dec
test
ds
mov
(bad)
out
repnz
les
xor
mov
loopne
sub
pop
ret
xchg
sbb
shl
sub
and
sar
lods
fild
xchg
not
outs
jbe
aad
xchg
push
into
in
pop
mov
out
fisub
call
cmp
mov
jp
push
pop
fstp
int3
into
retf
rcr
icebp
arpl
out
add
cmp
ins
enter
cmp
mov
scas
and
cmp
pop
rcl
pushf
jno
jl
int3
icebp
cs
and
sbb
mov
mov
jnp
pop
mov
neg
mov
out
cld
jae
imul
(bad)
pop
dec
cmp
loopne
(bad)
pop
jecxz
lahf
xchg
mov
jns
test
adc
aad
pop
lea
mov
(bad)
xor
lock
sti
mov
outs
int
inc
jecxz
pop
mov
or
sbb
pusha
cmc
stos
lea
stos
mov
and
or
int
in
mov
inc
repnz
pop
in
dec
and
movs
inc
shl
call
pop
push
cmp
test
xor
jnp
xor
xchg
sub
pop
jecxz
pop
ds
aaa
cld
adc
mov
and
jmp
loop
jae
in
stos
in
cmp
cmps
jg
popf
cmp
mov
pop
(bad)
loop
outs
inc
ror
mov
xor
out
mov
mov
jns
mov
sub
adc
inc
push
add
adc
inc
sub
mov
inc
adc
pusha
or
mov
adc
add
push
inc
push
add
adc
inc
sub
mov
inc
adc
pusha
or
mov
adc
add
push
inc
push
add
adc
inc
sub
mov
inc
adc
pusha
or
mov
adc
add
push
inc
push
add
adc
inc
sub
mov
xor
gs
retf
and
push
scas
push
sbb
jno
ficom
(bad)
mov
add
push
jge
dec
add
xor
in
push
mov
xchg
jp
inc
or
add
pop
clc
mov
ss
enter
push
cmps
and
fs
push
jg
js
cld
adc
mov
je
ja
jecxz
rcl
jmp
fcmovnu
rcl
xchg
dec
out
cmp
jnp
cmps
out
add
inc
jb
in
imul
cmps
jo
inc
jb
xchg
sub
mov
add
jp
mov
fadd
loopne
enter
repz
adc
inc
retf
or
mov
scas
ret
cmp
movs
retf
fsub
push
sub
jmp
adc
pop
xchg
dec
inc
cmp
fiadd
pop
add
fs
inc
ins
fldenv
or
std
mov
add
std
aas
push
fucomip
pop
adc
cmp
dec
retf
xor
aas
outs
cld
jg
sub
popa
ins
mul
jle
jle
jb
sahf
aam
imul
mov
lea
enter
mov
movs
mov
push
jnp
mov
pop
and
in
inc
iret
push
mov
in
cmp
rol
mov
sbb
xchg
ins
mul
add
sahf
aam
imul
mov
lea
enter
mov
movs
mov
push
jnp
mov
pop
and
in
inc
iret
push
mov
in
cmp
rol
mov
sbb
xchg
ins
mul
add
sahf
aam
imul
mov
lea
enter
mov
movs
mov
add
sub
lahf
adc
xor
sbb
ins
inc
jae
bnd
data16
and
outs
call
push
pop
lock
and
lea
dec
mov
push
mov
and
outs
adc
stos
je
pop
add
xchg
ds
sub
pinsrw
add
mov
xchg
pop
lock
xchg
(bad)
repnz
cmp
cmp
(bad)
mov
cmp
loope
lods
jl
loope
or
pop
xchg
pop
pop
jmp
pop
push
mov
inc
rol
mov
push
and
fild
mov
dec
cli
jb
loopne
call
mov
fldenv
iret
push
xchg
pop
dec
push
pop
jg
adc
and
ds
push
enter
push
in
enter
jns
shl
push
xchg
sub
xlat
mov
loop
pop
ins
pop
retf
cdq
sbb
into
in
in
cmp
es
mov
mov
clc
jns
imul
and
ja
cmp
push
fwait
jge
js
inc
lock
or
mov
retf
and
outs
and
add
add
scas
cld
push
lods
clc
mov
lods
mov
xchg
lock
jp
sbb
jbe
imul
dec
and
pop
sbb
dec
sbb
arpl
int3
(bad)
out
xchg
mov
call
mov
outs
fsub
pop
adc
mov
out
addr16
clc
pop
xchg
dec
cmps
mov
and
fidiv
enter
cmp
push
pop
popf
sti
and
fstp
ffreep
(bad)
and
aad
add
sub
dec
add
mov
and
pop
mov
push
cmp
inc
or
imul
clc
daa
push
shr
lods
out
out
mov
scas
adc
lods
jge
aaa
push
add
push
fwait
int3
addr16
xor
sub
std
pushf
jp
fnsave
fsub
xor
in
outs
jp
add
scas
in
push
jle
cmp
dec
and
xlat
mov
neg
pop
lock
jl
ss
popa
loop
int
fcmovb
fcmovu
(bad)
dec
lods
loope
add
jl
push
pop
xchg
pop
in
add
mov
aaa
(bad)
and
sub
sti
jae
xchg
in
mov
cs
xchg
into
dec
out
push
xor
mov
mov
dec
ins
pop
(bad)
fisubr
(bad)
scas
jmp
movs
ds
mov
jge
dec
das
xor
mov
sub
add
popa
xchg
mov
or
(bad)
(bad)
loop
xchg
scas
leave
arpl
(bad)
aam
mov
into
scas
inc
or
xor
inc
cmp
mov
push
into
call
ret
das
pop
(bad)
push
xchg
sbb
mov
add
lods
clc
inc
movs
jl
icebp
xlat
test
jl
sahf
or
stc
mov
adc
ret
fstp
test
or
inc
cmp
repnz
scas
test
dec
arpl
push
or
dec
vmovq
xor
or
movs
jae
pop
movs
aas
sbb
adc
sar
sbb
(bad)
adc
adc
shl
xchg
scas
out
jbe
imul
xor
bound
jecxz
aam
fisttp
call
dec
sub
imul
xor
mov
enter
sbb
jb
icebp
push
outs
push
push
pop
jmp
neg
jmp
xchg
or
add
test
adc
dec
lock
pushf
pop
ret
cmp
pop
(bad)
fstp
cmc
js
mov
rcr
push
add
add
mov
lock
imul
adc
jle
icebp
or
lods
inc
call
mov
mov
cmps
add
test
cld
dec
std
mov
or
xchg
cmp
cmc
out
sbb
imul
pop
add
pusha
in
mov
repz
xchg
dec
cli
xchg
mov
or
lahf
les
es
je
imul
push
mov
cld
imul
pushf
sbb
leave
jns
ja
and
mov
mov
out
add
outs
imul
cdq
loop
dec
(bad)
jno
jp
sbb
aad
iret
sbb
jne
in
jne
mov
jmp
movs
xchg
dec
xchg
(bad)
sbb
rcl
sti
xor
shr
and
mov
add
sub
add
jle
leave
loope
fisubr
ret
push
push
clc
je
neg
adc
xchg
ret
adc
arpl
test
mov
mov
push
test
pop
(bad)
scas
xor
or
(bad)
xchg
push
push
loop
or
xchg
lea
push
and
xchg
pop
inc
mov
xchg
xchg
adc
pop
out
mov
daa
ja
(bad)
scas
mov
mov
stos
test
in
fwait
cs
lods
popf
and
mov
mov
sahf
ins
xor
push
add
and
enter
aas
fs
stos
loope
mov
lock
pop
mov
fwait
mov
mov
or
leave
sbb
push
call
cmp
pop
pop
fstp
pop
pop
jecxz
shl
loop
lods
addr16
xchg
aaa
xor
mov
mov
adc
test
scas
dec
ret
xlat
cmp
test
cmp
lods
pop
dec
lock
aad
inc
jae
pop
pop
inc
push
mov
mov
sub
or
or
in
bound
cmc
pop
xchg
mov
imul
xchg
leave
cli
push
sub
jg
mov
fdiv
pop
movs
in
shl
dec
cmp
daa
arpl
mov
xor
or
outs
pop
cld
sbb
add
jns
jmp
loop
mov
push
add
frstor
mov
call
add
jl
mov
pop
pop
je
adc
cmps
call
dec
push
jbe
call
push
add
push
jp
xchg
ficomp
inc
ret
shl
lods
mov
test
not
jb
sbb
rol
nop
inc
and
push
movs
add
out
outs
imul
hlt
cld
mov
adc
ja
(bad)
aas
stos
inc
sub
jg
pop
xchg
clc
inc
pop
xor
push
mov
lods
(bad)
cmp
aam
mov
pop
out
push
mov
lahf
aaa
icebp
(bad)
in
dec
cmps
jmp
xor
jle
pop
xor
xchg
xor
fidiv
dec
out
mov
in
fdivr
cmp
(bad)
inc
push
jl
jno
test
push
xchg
sar
cs
(bad)
fs
adc
push
push
(bad)
(bad)
leave
mov
xchg
xchg
pop
xchg
sbb
jmp
push
icebp
out
cld
inc
lock
ins
cmc
cmp
gs
adc
out
xchg
inc
mov
rol
sub
pop
xor
adc
(bad)
lock
cmp
push
movs
mov
pushf
pop
lock
ins
dec
or
add
mov
xchg
popa
mov
aad
std
cs
xlat
mov
sbb
and
stos
enter
add
cmp
loop
xchg
mov
bound
pop
icebp
pop
mov
aaa
mov
ins
mov
sbb
loop
(bad)
dec
(bad)
cmp
mov
xor
outs
add
in
movs
loope
or
test
ds
mov
sbb
aas
add
mov
push
jo
mov
mov
pop
in
repz
addr16
and
rcr
inc
rcr
mov
fwait
ret
cmps
jbe
sti
xchg
and
adc
pop
iret
fstp
daa
in
std
icebp
pop
dec
lock
mov
xor
xor
les
in
es
mov
and
mov
icebp
arpl
mov
pop
out
test
lock
sar
jnp
call
imul
ds
jmp
stc
int3
ret
outs
aas
das
sbb
dec
dec
sar
mov
mov
dec
(bad)
addr16
mov
inc
jae
push
outs
ficom
jl
icebp
mov
icebp
mov
scas
mov
dec
bound
outs
and
inc
mov
jl
fidivr
dec
xor
fsubp
retf
mov
cmc
sub
(bad)
fcmovu
jl
inc
xchg
adc
imul
pmaxub
sub
rcr
sbb
fild
mov
fidivr
stos
cmps
dec
or
pop
pop
out
lods
cmps
popf
inc
sub
retf
adc
and
lahf
push
lock
leave
mov
push
lock
ficomp
cmp
ins
mov
jp
fiadd
iret
ins
fld
pop
jns
lods
inc
inc
out
push
(bad)
repnz
mov
popf
scas
les
ficomp
ret
pop
cs
inc
ins
outs
jae
xlat
pop
xchg
shr
mov
xor
gs
popf
mov
fs
jb
sti
jmp
aad
sbb
sbb
inc
add
dec
xor
fcmovnb
jbe
adc
rcl
les
mov
(bad)
push
pop
dec
loop
fmul
inc
lock
into
mov
mov
lock
fnstsw
dec
mov
xor
arpl
xor
scas
inc
push
les
mov
mov
js
(bad)
sar
scas
push
call
mov
leave
in
mov
hlt
stos
fidivr
std
scas
cmp
loop
icebp
pop
in
fidiv
mov
shr
in
mov
mov
mov
(bad)
cmp
sub
shl
push
aas
or
(bad)
mov
mov
pusha
xlat
adc
shl
mov
push
xor
jbe
aas
sub
or
pusha
jo
jg
or
mov
sbb
imul
push
dec
retf
int
shl
lds
adc
jno
add
inc
iret
imul
fstp
jg
outs
lods
xor
and
(bad)
sar
mov
les
jbe
push
out
or
push
add
mov
mov
adc
movs
aad
mov
in
cmp
cwde
out
out
jmp
arpl
jb
loopne
out
ret
aas
fld
mov
lds
push
mov
push
iret
xchg
xchg
dec
xchg
push
mov
and
repnz
push
les
and
sbb
clc
dec
idiv
sar
repz
xor
push
xor
lahf
push
xchg
popa
sbb
mov
out
js
ds
out
test
loopne
pop
ins
enter
out
cmp
loope
xchg
or
xchg
dec
aam
jle
xor
pop
retf
test
and
sbb
or
and
ret
sti
outs
js
rcr
les
mov
sahf
movs
ins
icebp
inc
les
xor
sub
sbb
(bad)
sti
sbb
aaa
add
test
retf
xor
cmps
push
aam
loopne
(bad)
cmps
movs
mov
sbb
scas
int3
xor
mov
mov
out
xor
mov
xchg
and
jae
std
xchg
sar
mov
call
dec
in
mov
and
int3
mov
pushf
stc
mov
sub
out
dec
mov
clc
outs
sub
hlt
pop
adc
imul
outs
ins
in
push
adc
xor
fadd
sbb
ror
add
push
repnz
mov
mov
jecxz
(bad)
shl
ins
mov
pop
imul
mov
or
dec
inc
push
dec
and
sub
inc
push
jle
inc
lods
pop
lahf
adc
ins
(bad)
mov
fnstenv
xor
mov
adc
cmp
enter
sahf
adc
lods
jecxz
jl
mov
aaa
(bad)
jmp
inc
sub
xchg
cmps
iret
fs
fild
lea
in
int
pusha
loope
repnz
xor
jge
xor
mov
in
(bad)
retf
mov
fild
sbb
das
push
(bad)
xlat
dec
clc
adc
jnp
mov
jmp
(bad)
pop
(bad)
repnz
not
adc
jns
adc
cmp
push
add
sub
mov
sbb
dec
loop
mov
das
push
iret
jge
fwait
jg
push
mov
cdq
and
les
popa
hlt
push
scas
ficomp
xchg
stos
pop
fistp
sbb
outs
xor
pop
xor
xchg
pop
ret
or
nop
mov
fmul
(bad)
and
jg
jg
addr16
jg
dec
movs
push
scas
imul
mov
mov
mov
loope
push
imul
inc
adc
xchg
fs
sbb
xchg
arpl
rcr
ins
cmp
jns
clc
mov
lock
fisubr
(bad)
stos
fsubr
xchg
ror
pop
inc
cmp
and
ja
inc
mov
dec
adc
add
loope
xor
cdq
sti
and
and
loopne
hlt
jp
lea
das
mov
mov
aaa
xor
push
test
dec
(bad)
push
rcl
sbb
pushf
std
(bad)
jle
fidivr
add
aam
dec
mov
es
mov
mov
mov
nop
jno
mov
xor
mov
sub
add
arpl
xor
imul
sub
aaa
mov
pop
shr
and
mov
add
data16
mov
sbb
loopne
pop
dec
mov
imul
mov
or
stc
jnp
mov
mov
(bad)
fldenv
add
inc
add
add
add
add
add
add
add
add
adc
add
add
sub
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
inc
add
add
add
inc
inc
add
inc
inc
(bad)
inc
add
(bad)
inc
xchg
js
ja
jg
ja
ja
ja
xchg
add
ja
push
push
pop
jnp
mov
jne
push
push
jo
add
push
add
ja
push
push
pop
jnp
mov
ja
ja
xchg
xchg
ja
jo
ja
js
pushw
ja
adc
ja
loopne
addr16
adc
add
pop
jno
adc
push
add
adc
ja
loopne
addr16
adc
pusha
data16
add
ja
ja
jo
ja
js
add
add
add
add
add
ins
xor
add
mov
add
push
and
add
inc
add
add
add
add
add
dec
imul
add
ja
push
jo
imul
outs
imul
ins
add
(bad)
inc
add
(bad)
or
add
arpl
or
pop
add
push
add
add
add
add
add
add
add
add
and
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
inc
add
add
add
inc
inc
add
inc
inc
(bad)
inc
add
(bad)
inc
add
add
(bad)
push
(bad)
(bad)
push
add
add
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
push
add
(bad)
(bad)
(bad)
(bad)
push
add
(bad)
(bad)
(bad)
(bad)
push
add
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
add
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
add
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
add
add
add
lock
(bad)
(bad)
inc
add
add
add
add
add
(bad)
(bad)
push
inc
add
add
add
(bad)
add
lock
lock
add
lock
lock
add
lock
lock
add
lock
lock
add
lock
(bad)
add
(bad)
add
(bad)
add
(bad)
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
clc
add
(bad)
clc
add
(bad)
clc
add
push
add
jmp
add
inc
add
inc
add
inc
add
add
jg
add
jg
add
jg
adc
jg
xor
jg
jo
jg
lock
push
add
push
pop
(bad)
push
aas
(bad)
push
(bad)
(bad)
push
(bad)
(bad)
push
(bad)
(bad)
push
(bad)
(bad)
(bad)
stc
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
nop
add
jl
add
popa
outs
jae
push
gs
inc
pop
add
add
pop
add
gs
xor
add
add
daa
and
add
or
pop
add
add
add
add
add
popa
cmp
sbb
inc
add
add
add
add
add
add
add
add
adc
add
add
sub
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
rol
add
add
inc
add
(bad)
inc
inc
add
inc
inc
(bad)
inc
add
(bad)
inc
sub
sub
sub
sub
add
sub
(bad)
(bad)
(bad)
(bad)
jmp
cmp
(bad)
clc
sub
sub
add
clc
sub
das
sub
sub
add
jmp
das
sub
das
sub
repnz
sub
sub
sub
repnz
sub
clc
sub
sub
or
(bad)
(bad)
(bad)
(bad)
(bad)
inc
sub
sub
add
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
add
add
add
add
add
add
add
popa
cmp
sbb
inc
add
add
add
add
add
add
add
add
adc
add
add
sub
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
rol
add
add
inc
add
(bad)
inc
inc
add
inc
inc
(bad)
inc
add
(bad)
inc
sub
sub
sub
sub
add
sub
(bad)
(bad)
(bad)
(bad)
jmp
cmp
(bad)
clc
sub
sub
add
clc
sub
das
sub
sub
add
jmp
das
sub
das
sub
repnz
sub
sub
sub
repnz
sub
clc
sub
sub
or
(bad)
(bad)
(bad)
(bad)
(bad)
inc
sub
sub
add
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
add
add
add
add
add
add
popa
addr16
add
add
add
ins
je
add
add
add
add
add
add
adc
add
add
sub
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
rol
add
add
inc
add
(bad)
inc
inc
add
inc
inc
(bad)
inc
add
(bad)
inc
sub
sub
sub
sub
add
sub
(bad)
(bad)
(bad)
(bad)
jmp
cmp
(bad)
clc
sub
sub
add
clc
sub
das
sub
sub
add
jmp
das
sub
das
sub
repnz
sub
sub
sub
repnz
sub
clc
sub
sub
or
(bad)
(bad)
(bad)
(bad)
(bad)
inc
sub
sub
add
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
add
add
add
add
add
add
add
gs
(bad)
inc
add
push
mov
push
add
add
add
add
add
gs
pop
add
(bad)
inc
add
sbb
add
or
and
add
cwde
or
inc
sub
add
or
xor
pop
add
(bad)
inc
add
add
add
push
add
add
push
clc
push
add
pop
add
add
add
add
add
xor
pop
add
(bad)
inc
add
add
add
adc
add
push
mov
add
pop
add
add
add
add
add
xor
pop
add
(bad)
inc
add
add
add
adc
add
push
push
add
add
add
add
add
xor
pop
add
(bad)
inc
add
push
add
add
or
adc
add
and
inc
sub
add
or
add
cmp
pop
add
(bad)
inc
add
or
sbb
add
push
pusha
sbb
add
add
add
add
add
outs
cmp
pop
add
(bad)
inc
add
or
push
add
add
push
clc
push
add
pop
add
add
add
add
add
gs
add
add
(bad)
inc
add
or
adc
adc
adc
inc
sub
add
syscall
add
gs
add
(bad)
inc
add
or
adc
add
push
sub
add
add
add
push
add
popa
xor
sbb
xchg
add
jle
add
add
add
add
adc
add
add
or
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
and
imul
sbb
sub
jae
sub
jnp
sub
mov
sub
mov
pushf
pushf
pushf
add
cmp
add
lods
add
inc
mov
push
push
mov
jae
mov
mov
add
arpl
add
mov
add
mov
pop
mov
arpl
add
mov
imul
jae
mov
test
add
mov
movs
mov
mov
pop
pop
into
add
into
add
movs
into
add
lods
into
add
(bad)
into
add
into
into
add
and
add
(bad)
add
(bad)
add
(bad)
add
(bad)
add
(bad)
add
(bad)
add
(bad)
add
mov
(bad)
add
and
add
sub
add
fiadd
inc
cmp
add
fiadd
pop
inc
fiadd
arpl
add
fiadd
(bad)
fiadd
arpl
add
out
jnp
out
xchg
jae
add
out
lods
lods
out
mov
out
add
out
add
(bad)
out
add
out
add
out
out
add
test
jnp
test
xchg
xchg
test
into
(bad)
test
out
out
test
inc
inc
arpl
add
inc
mov
add
inc
movs
pushf
inc
lods
pushf
inc
mov
inc
mov
movs
inc
mov
inc
(bad)
into
inc
(bad)
(bad)
inc
out
inc
out
out
inc
div
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
add
add
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
jae
add
add
add
add
jae
jae
pop
pop
pop
inc
xor
sbb
sub
sub
push
push
adc
adc
jae
cmp
cmp
sub
and
and
push
and
jae
cmp
inc
xor
cmp
cmp
adc
ds
xor
and
push
dec
inc
dec
sbb
jae
sub
sub
dec
xor
ins
pop
push
pop
pop
sub
and
and
dec
dec
dec
dec
dec
dec
dec
xor
or
adc
cmp
inc
pop
push
push
pop
das
inc
adc
and
dec
push
push
dec
imul
or
push
cmp
push
push
ins
ins
pop
push
jae
inc
or
or
cmp
dec
dec
pop
push
dec
sbb
inc
wbinvd
or
es
sub
sub
jae
jae
sbb
sbb
sbb
cs
sbb
jae
jae
jae
jae
jae
dec
popa
adc
jae
jae
jae
jae
jae
jae
push
inc
jae
jae
jae
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
aas
(bad)
(bad)
(bad)
aas
(bad)
inc
mov
add
add
add
add
add
adc
add
popa
addr16
sbb
ds
add
add
add
add
add
add
add
and
add
add
add
add
add
add
add
adc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
inc
add
add
add
inc
inc
add
inc
inc
(bad)
inc
add
(bad)
inc
add
add
add
add
add
or
mov
add
add
add
or
(bad)
lock
add
add
add
or
lock
lock
add
add
or
or
push
loopne
(bad)
(bad)
dec
add
add
add
loopne
(bad)
(bad)
push
(bad)
(bad)
push
add
add
add
loopne
(bad)
(bad)
push
push
add
add
add
add
loopne
(bad)
(bad)
push
add
(bad)
inc
add
add
push
loopne
(bad)
(bad)
dec
(bad)
(bad)
(bad)
inc
add
add
push
loopne
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
or
loopne
(bad)
(bad)
(bad)
(bad)
(bad)
inc
(bad)
(bad)
(bad)
push
add
add
ud0
(bad)
push
(bad)
(bad)
push
add
add
add
add
(bad)
(bad)
(bad)
(bad)
inc
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
sar
push
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
jg
add
add
add
add
add
add
add
add
add
jmp
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
add
add
add
add
add
add
add
add
add
rol
add
add
add
add
add
add
add
add
inc
add
add
add
inc
inc
add
inc
inc
(bad)
inc
add
(bad)
inc
add
mov
inc
add
add
add
add
add
add
(bad)
clc
add
add
add
push
push
push
add
ud0
or
add
inc
add
inc
add
inc
add
inc
add
aas
add
add
add
add
add
add
add
add
add
add
add
add
add
cmp
add
(bad)
inc
add
inc
add
inc
add
inc
add
fcomp
mov
add
add
add
add
adc
add
gs
cmp
add
daa
add
je
outs
jb
and
imul
arpl
outs
and
and
imul
ins
add
(bad)
inc
add
mov
ja
or
adc
add
add
add
add
adc
add
popa
gs
add
add
ins
je
add
add
add
add
add
add
adc
add
add
sub
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
rol
add
add
inc
add
(bad)
inc
inc
add
inc
inc
(bad)
inc
add
(bad)
inc
sub
sub
sub
sub
add
sub
(bad)
(bad)
(bad)
(bad)
jmp
cmp
(bad)
clc
sub
sub
add
clc
sub
das
sub
sub
add
jmp
das
sub
das
sub
repnz
sub
sub
sub
repnz
sub
clc
sub
sub
or
(bad)
(bad)
(bad)
(bad)
(bad)
inc
sub
sub
add
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
add
add
add
add
add
adc
add
gs
cmp
add
sub
fs
je
outs
outs
and
arpl
outs
and
and
imul
ins
and
jae
imul
(bad)
(bad)
inc
add
pop
push
ja
or
adc
add
add
add
add
adc
bound
aaa
add
add
add
bound
imul
ins
jo
outs
jns
push
popa
jns
outs
ins
ins
add
(bad)
inc
add
test
adc
add
add
add
add
push
push
add
gs
add
add
outs
jae
and
jb
popa
fs
gs
push
gs
imul
(bad)
(bad)
inc
add
pop
or
add
add
push
add
add
add
add
pop
push
add
popa
xor
sbb
ds
add
add
add
add
add
add
add
and
add
add
add
add
add
add
add
adc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
inc
add
add
add
inc
inc
add
inc
inc
(bad)
inc
add
(bad)
inc
add
add
add
add
add
or
mov
add
add
add
or
(bad)
lock
add
add
add
or
lock
lock
add
add
or
or
push
loopne
(bad)
(bad)
dec
add
add
add
loopne
(bad)
(bad)
push
(bad)
(bad)
push
add
add
add
loopne
(bad)
(bad)
push
push
add
add
add
add
loopne
(bad)
(bad)
push
add
(bad)
inc
add
add
push
loopne
(bad)
(bad)
dec
(bad)
(bad)
(bad)
inc
add
add
push
loopne
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
or
loopne
(bad)
(bad)
(bad)
(bad)
(bad)
inc
(bad)
(bad)
(bad)
push
add
add
ud0
(bad)
push
(bad)
(bad)
push
add
add
add
add
(bad)
(bad)
(bad)
(bad)
inc
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
sar
push
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
jg
add
add
add
add
add
add
add
add
add
jmp
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
add
add
add
add
add
add
add
add
add
rol
add
add
add
add
add
add
add
add
inc
add
add
add
inc
inc
add
inc
inc
(bad)
inc
add
(bad)
inc
add
mov
inc
add
add
add
add
add
add
(bad)
clc
add
add
add
push
push
push
add
ud0
or
add
inc
add
inc
add
inc
add
inc
add
aas
add
add
add
add
add
add
add
add
add
add
add
add
add
cmp
add
(bad)
inc
add
inc
add
inc
add
inc
add
js
sbb
or
inc
cmps
add
add
popa
xor
sbb
xchg
add
jle
add
add
add
add
adc
add
add
or
push
add
add
add
add
add
add
add
add
add
add
(bad)
inc
add
add
fstp
fld
stc
clc
stc
add
out
lock
add
add
jns
out
in
(bad)
sti
cld
add
clc
stc
add
jmp
add
add
push
push
add
outs
add
aad
add
jne
imul
add
(bad)
add
fcomp
add
sbb
add
dec
dec
add
and
pop
add
xor
add
adc
dec
inc
aas
add
dec
add
sub
add
cmp
mov
or
add
push
xor
xor
daa
add
call
sldt
pop
aaa
add
ja
add
inc
sldt
push
sbb
add
pop
and
retf
add
and
shl
add
sbb
shr
add
(bad)
jno
add
mov
add
jne
add
js
add
jl
add
ja
add
sub
in
push
add
mov
add
mov
push
add
xchg
sub
icebp
(bad)
xchg
add
call
in
(bad)
add
out
add
ror
add
(bad)
add
fcompp
add
rcl
add
(bad)
inc
idiv
test
add
push
(bad)
(bad)
add
test
add
mov
test
add
mov
and
sahf
add
leave
mov
sub
xchg
add
cmps
add
lds
add
je
add
add
xchg
pusha
add
mov
add
add
outs
add
mov
add
mov
pop
add
xchg
ins
add
cmps
jle
xchg
aam
add
jno
add
arpl
add
add
pushf
ins
add
xchg
push
sbb
jo
dec
mov
jp
fldlg2
out
add
add
pop
inc
add
add
ins
pop
add
in
add
pop
add
repnz
add
ins
add
jmp
add
dec
dec
add
pop
push
add
push
add
add
(bad)
inc
data16
pop
add
jecxz
add
shr
add
loop
add
add
mov
add
scas
fadd
add
in
push
scas
xlat
add
mov
add
mov
add
scas
aam
or
xlat
add
mov
loopne
adc
fiadd
sbb
jecxz
sbb
lods
add
mov
jecxz
and
lea
inc
(bad)
dec
retf
push
retf
push
retf
out
pop
into
jmp
add
jmp
data16
sbb
add
repz
add
std
inc
inc
into
cmc
add
cmc
add
clc
cld
add
aaa
cmp
cmc
sti
inc
loop
cmc
add
(bad)
xlat
add
inc
lock
inc
repnz
in
add
dec
repz
dec
in
add
push
test
sub
add
push
stc
add
push
cmc
add
pop
cld
add
pop
sti
add
push
cli
add
push
repz
pop
inc
xor
xor
add
push
in
add
pusha
inc
ss
in
add
inc
inc
ins
inc
dec
jae
add
add
inc
push
inc
jp
inc
test
cli
add
int
add
dec
inc
pop
outs
cld
add
ds
add
dec
add
cld
cld
add
cmc
cmc
add
repnz
in
in
add
jmp
in
in
loopne
loopne
fstp
fld
fcmovnu
fild
(bad)
fld
(bad)
(bad)
(bad)
add
into
into
add
cmps
cmps
add
nop
nop
add
mov
add
jo
bound
add
cmp
add
xor
add
sub
and
and
push
push
push
add
add
add
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
hlt
hlt
hlt
hlt
hlt
hlt
push
push
push
push
push
push
push
push
push
hlt
sbb
sbb
push
push
push
push
push
push
hlt
and
mov
push
push
push
push
hlt
sub
mov
movs
xchg
cmps
cmc
push
push
push
sub
cmp
or
cmps
cmc
push
push
cmp
inc
inc
das
repz
cmps
mov
inc
dec
dec
add
or
push
cmp
or
out
or
mov
mov
sti
(bad)
mul
jp
xchg
mov
mov
cmp
xchg
push
push
mov
cmp
js
add
push
mov
in
pop
pop
pusha
imul
push
mov
pop
pop
push
pop
jae
push
push
push
push
push
push
mov
arpl
cmc
push
push
push
push
push
push
push
push
push
mov
push
push
push
push
push
push
(bad)
dec
repz
xor
xor
add
movs
add
mov
add
or
add
repz
add
cmp
add
inc
add
push
add
cmps
rol
cmps
loopne
xchg
xchg
aas
or
add
add
lock
add
add
add
push
add
popa
xor
sbb
xchg
add
jle
add
add
add
add
adc
add
add
or
push
add
add
add
add
add
add
add
add
add
add
(bad)
inc
add
add
fstp
fld
stc
clc
stc
add
out
lock
add
add
jns
out
in
(bad)
sti
cld
add
clc
stc
add
jmp
add
add
push
push
add
outs
add
aad
add
jne
imul
add
(bad)
add
fcomp
add
sbb
add
dec
dec
add
and
pop
add
xor
add
adc
dec
inc
aas
add
dec
add
sub
add
cmp
mov
or
add
push
xor
xor
daa
add
call
sldt
pop
aaa
add
ja
add
inc
sldt
push
sbb
add
pop
and
retf
add
and
shl
add
sbb
shr
add
(bad)
jno
add
mov
add
jne
add
js
add
jl
add
ja
add
sub
in
push
add
mov
add
mov
push
add
xchg
sub
icebp
(bad)
xchg
add
call
in
(bad)
add
out
add
ror
add
(bad)
add
fcompp
add
rcl
add
(bad)
inc
idiv
test
add
push
(bad)
(bad)
add
test
add
mov
test
add
mov
and
sahf
add
leave
mov
sub
xchg
add
cmps
add
lds
add
je
add
add
xchg
pusha
add
mov
add
add
outs
add
mov
add
mov
pop
add
xchg
ins
add
cmps
jle
xchg
aam
add
jno
add
arpl
add
add
pushf
ins
add
xchg
push
sbb
jo
dec
mov
jp
fldlg2
out
add
add
pop
inc
add
add
ins
pop
add
in
add
pop
add
repnz
add
ins
add
jmp
add
dec
dec
add
pop
push
add
push
add
add
(bad)
inc
data16
pop
add
jecxz
add
shr
add
loop
add
add
mov
add
scas
fadd
add
in
push
scas
xlat
add
mov
add
mov
add
scas
aam
or
xlat
add
mov
loopne
adc
fiadd
sbb
jecxz
sbb
lods
add
mov
jecxz
and
lea
inc
(bad)
dec
retf
push
retf
push
retf
out
pop
into
jmp
add
jmp
data16
sbb
add
repz
add
std
inc
inc
into
cmc
add
cmc
add
clc
cld
add
aaa
cmp
cmc
sti
inc
loop
cmc
add
(bad)
xlat
add
inc
lock
inc
repnz
in
add
dec
repz
dec
in
add
push
test
sub
add
push
stc
add
push
cmc
add
pop
cld
add
pop
sti
add
push
cli
add
push
repz
pop
inc
xor
xor
add
push
in
add
pusha
inc
ss
in
add
inc
inc
ins
inc
dec
jae
add
add
inc
push
inc
jp
inc
test
cli
add
int
add
dec
inc
pop
outs
cld
add
ds
add
dec
add
cld
cld
add
cmc
cmc
add
repnz
in
in
add
jmp
in
in
loopne
loopne
fstp
fld
fcmovnu
fild
(bad)
fld
(bad)
(bad)
(bad)
add
into
into
add
cmps
cmps
add
nop
nop
add
mov
add
jo
bound
add
cmp
add
xor
add
sub
and
and
push
push
push
add
add
add
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
hlt
hlt
hlt
hlt
hlt
hlt
push
push
push
push
push
push
push
push
push
hlt
sbb
sbb
push
push
push
push
push
push
hlt
and
mov
push
push
push
push
hlt
sub
mov
movs
xchg
cmps
cmc
push
push
push
sub
cmp
or
cmps
cmc
push
push
cmp
inc
inc
das
repz
cmps
mov
inc
dec
dec
add
or
push
cmp
or
out
or
mov
mov
sti
(bad)
mul
jp
xchg
mov
mov
cmp
xchg
push
push
mov
cmp
js
add
push
mov
in
pop
pop
pusha
imul
push
mov
pop
pop
push
pop
jae
push
push
push
push
push
push
mov
arpl
cmc
push
push
push
push
push
push
push
push
push
mov
push
push
push
push
push
push
(bad)
dec
repz
xor
xor
add
movs
add
mov
add
or
add
repz
add
cmp
add
inc
add
push
add
cmps
rol
cmps
loopne
xchg
xchg
aas
or
add
add
lock
add
add
add
add
sbb
add
popa
addr16
add
add
add
add
add
add
add
add
and
add
add
add
add
add
add
add
adc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
inc
add
add
add
inc
inc
add
inc
inc
(bad)
inc
add
(bad)
inc
add
add
jo
add
jo
add
jo
add
inc
add
inc
add
inc
add
dec
add
add
add
jo
(bad)
inc
(bad)
inc
(bad)
ud0
clc
or
add
(bad)
dec
clc
or
add
(bad)
dec
lock
or
ud0
jo
add
add
add
add
(bad)
inc
jo
add
add
add
ud0
push
jo
add
add
add
(bad)
(bad)
(bad)
push
or
add
add
ud0
(bad)
(bad)
(bad)
clc
add
add
add
add
ud0
(bad)
(bad)
(bad)
clc
add
add
add
add
add
(bad)
(bad)
(bad)
(bad)
clc
add
add
add
add
add
(bad)
(bad)
(bad)
dec
add
add
add
ud0
(bad)
dec
add
add
add
ud0
(bad)
dec
add
add
add
add
(bad)
(bad)
clc
add
push
out
out
out
mov
add
add
add
push
out
out
out
mov
add
out
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
aas
(bad)
inc
ud0
add
(bad)
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
jmp
add
jmp
add
inc
add
inc
add
inc
add
inc
add
adc
add
and
add
add
add
add
add
rol
add
add
add
add
add
add
add
add
inc
add
add
add
inc
inc
add
inc
inc
(bad)
inc
add
(bad)
inc
add
add
add
add
add
add
add
add
add
(bad)
add
add
add
or
lock
add
add
lock
add
add
lock
add
add
lock
add
add
or
add
add
ud0
add
add
add
(bad)
inc
add
clc
add
add
add
mov
add
std
inc
add
inc
add
inc
add
jg
add
aas
add
lock
add
lock
lock
lock
lock
lock
clc
sldt
clc
pop
add
clc
pop
add
lock
lock
add
addps
loopne
loopne
or
inc
push
add
add
push
add
gs
xor
or
maskmovq
test
add
add
add
add
add
add
gs
xor
add
pop
pop
out
add
add
pop
add
add
add
add
bound
xor
add
pop
pop
add
add
pop
add
add
add
add
push
add
gs
xor
add
pop
out
add
add
pop
add
add
add
add
push
add
gs
xor
add
pop
push
out
add
add
pop
add
add
add
and
add
gs
xor
add
and
dec
outs
ja
je
and
gs
outs
ins
and
and
je
jae
outs
data16
imul
(bad)
(bad)
inc
add
jg
out
add
add
add
pop
add
add
add
dec
xor
and
popa
fbld
fwait
test
sub
or
push
sub
jmp
pop
dec
jmp
xor
or
stos
add
xchg
movs
sub
add
or
data16
dec
outs
fs
xor
or
push
bound
imul
popa
arpl
sub
jne
and
add
add
inc
add
hlt
hlt
add
ins
je
add
hlt
add
(bad)
fdivr
loopne
adc
dec
inc
add
add
add
sub
add
fild
inc
add
add
add
add
add
add
add
add
or
pop
push
or
or
or
or
or
push
adc
or
adc
adc
adc
pop
sbb
adc
adc
inc
add
add
add
add
or
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
inc
add
or
loopne
add
and
add
add
adc
inc
add
add
add
add
add
add
or
inc
add
add
add
add
add
jge
add
add
add
push
adc
pop
and
xor
inc
mov
adc
xor
or
push
pop
sbb
sbb
sub
cmp
inc
inc
inc
dec
dec
dec
push
push
push
push
push
pop
pop
pop
arpl
addr16
jne
ja
jns
add
xchg
xchg
xchg
xchg
xchg
xchg
cwde
cdq
call
test
stos
mov
mov
mov
mov
(bad)
(bad)
enter
rcl
aad
xlat
fcomp
(bad)
loop
in
out
call
repz
cmc
div
clc
stc
cli
inc
add
add
add
add
add
add
add
add
add
add
add
add
or
inc
add
add
add
add
add
add
add
add
and
push
adc
pop
popa
jno
and
or
mov
or
xor
adc
push
and
loope
icebp
pop
sbb
sbb
daa
sub
sub
cmp
inc
inc
inc
dec
dec
dec
push
push
push
push
push
pop
pop
pop
arpl
addr16
jne
ja
jns
add
mov
xchg
xchg
cwde
cdq
call
test
stos
mov
mov
mov
mov
(bad)
(bad)
enter
rcl
aad
xlat
fcomp
(bad)
jecxz
in
out
jmp
cmc
div
clc
stc
cli
(bad)
fiadd
or
add
add
add
add
add
and
add
or
cmp
clc
call
bound
inc
mov
jg
xor
ret
out
in
inc
out
xchg
inc
and
cmp
loope
ficom
jg
pop
pop
sbb
mov
inc
clc
call
bound
add
mov
sbb
in
xchg
inc
loopne
les
adc
mov
mov
add
inc
icebp
push
mov
(bad)
cmp
pop
push
xchg
inc
fisttp
jmp
jmp
sbb
test
(bad)
fxch
inc
(bad)
sar
add
aaa
ret
dec
aas
in
add
mov
es
ffreep
cmps
(bad)
arpl
inc
xor
sbb
mov
add
inc
sbb
mov
cli
push
pop
clc
add
add
aas
mov
out
stc
cld
inc
lock
add
(bad)
jg
dec
jg
test
clc
pop
pop
sbb
add
xor
xor
sahf
pop
inc
mov
xor
es
pop
std
push
hlt
out
cld
or
ret
aas
inc
mov
dec
cld
retf
inc
retf
jg
repz
shl
mov
xor
cld
test
add
cld
dec
and
scas
loope
xchg
add
adc
xor
sbb
add
mov
fdivr
jae
cmc
inc
lahf
movs
inc
sbb
add
inc
add
xchg
in
repz
inc
loopne
inc
and
inc
icebp
pop
ret
push
inc
enter
xor
and
add
cld
dec
jl
(bad)
rol
dec
pop
(bad)
inc
fcmovne
jg
push
mov
jg
fwait
pop
pusha
hlt
inc
dec
dec
icebp
test
add
inc
dec
nop
in
repz
inc
loopne
inc
and
test
xor
cmp
fisttp
cld
sub
mov
aas
clc
call
inc
aas
(bad)
stos
dec
loop
xor
pusha
xor
jp
stc
sar
add
inc
dec
inc
xchg
xor
add
mov
lock
add
loopne
cmp
rol
add
shl
clc
mov
jmp
xchg
lods
pop
into
fwait
cmp
int
cmp
call
into
adc
mov
jb
pop
and
or
inc
outs
dec
inc
xchg
sbb
xor
loopne
inc
and
sub
mov
push
mov
pop
lea
sbb
jae
add
clc
push
push
push
dec
dec
sub
or
dec
sti
jbe
ja
mov
imul
es
popf
ins
(bad)
push
push
rol
add
icebp
hlt
lahf
jecxz
jecxz
and
or
repnz
retf
and
xchg
aad
inc
pop
adc
cs
out
dec
std
mov
inc
mov
fist
add
xor
xor
sbb
std
push
mov
cld
or
stos
idiv
lock
stos
in
push
cs
in
cmc
stos
jl
les
pop
stos
das
cld
add
xchg
call
clc
adc
enter
push
xchg
xchg
cld
les
es
fdivr
arpl
jne
cli
in
pop
daa
(bad)
sbb
clc
call
xor
push
mov
popf
jae
jmp
mov
sti
movs
aad
sbb
inc
dec
pop
aas
pop
retf
std
jbe
ds
push
inc
or
xchg
cmp
scas
inc
lock
add
loopne
jg
aaa
inc
xchg
repz
adc
icebp
out
mov
aam
ja
mov
mov
sahf
cli
popf
cwde
inc
mov
inc
sbb
mov
movs
scas
sub
(bad)
pushf
test
cmps
(bad)
mov
mov
repnz
xchg
push
in
pop
fstp
cld
or
in
mov
add
mov
dec
cmp
xlat
or
add
mov
jecxz
fcmove
inc
les
mov
out
ret
dec
cmps
cmp
cwde
inc
cmp
aas
icebp
scas
cmp
push
(bad)
imul
xchg
jle
sbb
xlat
mov
sub
ins
xlat
fcomp
inc
xchg
jg
inc
cld
(bad)
mov
loope
clc
or
arpl
add
inc
loop
aas
loope
clc
or
add
je
rcl
outs
(bad)
and
test
out
pop
loop
and
repz
lahf
(bad)
dec
inc
push
mov
iret
das
mov
lahf
lock
add
add
inc
cld
inc
add
xor
addr16
daa
mov
inc
mov
sub
leave
jecxz
push
loop
mov
lahf
(bad)
dec
aad
psllq
out
pop
cld
mov
outs
cld
xor
add
pop
sbb
add
xchg
fninit
mov
scas
in
push
mov
call
mov
fs
xchg
shr
sbb
cmp
and
repnz
inc
in
fnstcw
inc
jae
pop
mov
int
xchg
cmc
(bad)
pop
lock
inc
stos
xchg
inc
pop
and
add
imul
sub
stc
lds
sar
pop
and
hlt
test
aam
jo
imul
mov
and
retf
inc
push
jo
pop
retf
inc
and
dec
clc
pop
sahf
adc
aas
test
(bad)
and
mov
inc
jle
inc
loop
out
idiv
ins
adc
pop
jmp
popa
sbb
dec
xor
inc
leave
sbb
pop
ret
aaa
fs
scas
repnz
aas
push
jl
mov
add
add
push
cld
imul
xor
mov
and
test
bound
loop
jnp
cmp
cmps
loop
popa
jnp
cmps
pop
jmp
clc
dec
adc
xchg
sti
mov
(bad)
fiadd
nop
(bad)
mov
mov
cld
inc
dec
addr16
rol
test
and
movs
jl
inc
bnd
imul
ins
jb
pushf
shl
test
je
jmp
ret
sbb
xor
push
xchg
fidivr
cs
push
xchg
aad
mov
add
imul
test
ss
cmp
add
sub
dec
pop
imul
fcmovne
inc
repz
pop
fcomp
lods
jmp
adc
inc
leave
sbb
loope
xor
mov
inc
and
mov
(bad)
dec
mov
jmp
jg
and
jg
mov
pop
enter
sbb
inc
fs
test
xchg
loopne
lds
stc
push
imul
stos
js
call
inc
and
inc
stos
fsubr
out
fidivr
imul
and
inc
scas
cmp
add
fisttp
inc
ret
out
inc
mov
aas
jmp
jg
and
pop
js
cmp
imul
loop
data16
jo
movs
inc
leave
add
ins
add
jb
xlat
inc
and
pop
(bad)
iret
add
call
jg
adc
sbb
jbe
stc
cmc
inc
inc
cwde
jg
xchg
repnz
adc
arpl
inc
mov
rol
jno
imul
inc
leave
push
ins
outs
pop
ret
xor
(bad)
(bad)
xor
xor
stc
mov
(bad)
and
jbe
(bad)
jg
pop
outs
(bad)
and
outs
pop
nop
xor
pop
mov
jb
dec
shr
aad
stc
and
test
push
ret
into
push
jl
ror
jg
cmc
mov
in
adc
cs
adc
fcomp
dec
std
adc
clc
ins
inc
jg
and
(bad)
mov
jl
loop
pop
mov
cmp
cmp
out
retf
(bad)
mov
pop
je
stc
and
push
mov
ds
mov
mov
addr16
inc
mov
arpl
lods
adc
jg
outs
(bad)
es
xor
add
shl
mov
adc
pop
xchg
cmps
test
ss
pushf
das
call
aaa
ret
lods
movs
sub
repnz
dec
loope
and
adc
mov
jecxz
add
loope
jg
(bad)
inc
leave
dec
(bad)
(bad)
and
out
xlat
je
xor
stc
mov
out
outs
in
repz
test
jge
aas
mov
mov
cli
scas
cmp
jge
cld
(bad)
mov
fistp
inc
test
inc
adc
xor
ret
jae
add
pop
dec
jg
adc
xchg
sub
adc
fsubr
add
int3
iret
stc
and
dec
inc
xchg
pop
cli
scas
cmp
jge
cld
(bad)
mov
xchg
push
outs
dec
mov
aas
call
add
fistp
mov
cld
inc
jle
movs
aam
int3
and
fcmovb
out
pop
xchg
lea
xchg
iret
out
jae
sub
sub
movs
inc
leave
sbb
sub
mov
int
add
mov
jmp
dec
das
(bad)
fild
daa
(bad)
inc
aas
jmp
outs
(bad)
and
pop
dec
pushf
lahf
ds
push
sub
pop
xor
jnp
ja
xchg
inc
and
xchg
jp
add
in
popa
icebp
inc
ror
dec
inc
clc
mov
rcr
rol
jmp
jg
and
je
bound
test
add
iret
mov
and
sbb
out
fidivr
pop
mov
mov
cld
inc
dec
sti
dec
cld
xor
mov
addr16
xchg
jne
das
mov
xchg
push
cmp
jle
xlat
mov
scas
in
loope
dec
jg
inc
dec
xchg
popf
addr16
mov
inc
or
int3
retf
pushf
inc
rcl
dec
jg
pop
xchg
scas
mov
add
aas
cld
outs
mov
leave
aas
je
out
inc
stos
retf
loope
test
repz
mov
jg
inc
inc
stos
sbb
xchg
fidivr
sbb
cdq
fwait
inc
and
jg
fld
mul
addr16
clc
add
jmp
arpl
sub
stc
inc
dec
mov
pop
in
adc
es
push
lds
inc
mov
inc
cld
movs
inc
leave
pop
cli
mov
jmp
jge
cld
(bad)
mov
xchg
arpl
js
pop
pop
hlt
jmp
(bad)
imul
popf
mov
popf
push
sti
pop
dec
jg
jne
out
sub
mov
mov
jp
jno
in
popa
outs
dec
jg
inc
jg
pop
aas
out
fidivr
add
sub
clc
add
jmp
repnz
and
adc
aas
arpl
and
adc
(bad)
push
pop
jb
loop
les
gs
sbb
test
jmp
xchg
jp
pop
jp
add
out
out
clc
push
push
pop
clc
or
inc
sbb
js
add
sbb
aaa
pop
push
pop
pop
cmp
data16
push
ins
jne
lds
xchg
jno
mov
jae
je
jmp
test
jnp
retf
out
pop
in
aad
add
repz
jnp
inc
les
inc
clc
or
icebp
pop
imul
aas
inc
sbb
mov
loopne
fcmovne
jno
mov
loop
lea
lahf
(bad)
dec
inc
push
mov
fxch
pop
jp
add
jmp
jg
das
xchg
sbb
mov
inc
jecxz
ds
inc
cld
cmp
ds
pop
xor
pop
int3
nop
inc
pop
fldcw
push
out
adc
xchg
leave
loop
daa
aam
xchg
push
ror
imul
sbb
lock
(bad)
jecxz
fwait
sub
xor
sbb
jmp
cmp
fnstsw
in
int
pop
fld
imul
enter
xor
aad
jecxz
inc
cmp
neg
cli
sub
push
stos
ret
dec
das
mov
cmp
call
daa
ret
nop
fcomp
adc
mov
jmp
sbb
leave
cmp
inc
pop
jns
sbb
(bad)
jo
and
dec
lea
and
(bad)
xlat
dec
loopne
push
dec
push
or
jns
mov
mov
sahf
sub
and
xor
jne
dec
xchg
cwde
ja
lea
imul
(bad)
daa
pop
iret
and
icebp
add
mov
stos
dec
mov
call
add
bound
sbb
xchg
movs
dec
xchg
mov
out
mov
lods
pop
adc
ds
xchg
mov
add
mov
mov
jg
jp
inc
sar
icebp
retf
ds
dec
cmp
inc
push
repz
icebp
jne
xlat
in
sub
stos
pop
sub
les
arpl
fwait
(bad)
stc
or
(bad)
call
stc
sbb
adc
mov
scas
cld
adc
pop
repz
inc
loopne
jg
mov
ficomp
add
add
xlat
(bad)
push
(bad)
rcr
gs
dec
sbb
into
dec
mov
xor
dec
(bad)
jne
pop
or
(bad)
xor
shr
aaa
icebp
inc
imul
(bad)
jp
adc
xor
into
rol
xor
movs
scas
sub
jle
aas
leave
xor
cmp
mov
inc
add
rol
cld
into
idiv
add
loopne
sbb
add
add
inc
mov
cmp
jl
icebp
sub
jmp
mov
xlat
or
rol
xchg
mov
sub
ja
sti
inc
js
jmp
push
sbb
(bad)
les
xlat
out
scas
test
mov
adc
mov
(bad)
test
push
jne
xor
(bad)
and
or
cmps
(bad)
stc
popf
outs
inc
lock
mov
ja
mov
cld
add
cs
jecxz
(bad)
sub
les
inc
lods
dec
les
push
xchg
jecxz
les
cli
push
jl
inc
or
clc
stos
in
pop
jl
dec
icebp
les
repnz
in
mov
das
out
mov
xor
out
inc
sub
add
sar
add
mov
out
mov
mov
xlat
lea
mov
repnz
jo
push
mov
adc
iret
clc
pop
inc
adc
ja
pop
dec
test
pop
test
das
repnz
out
ds
hlt
cmp
jg
or
add
je
lock
sub
scas
cld
add
cs
iret
icebp
pop
inc
shr
sub
inc
shl
loop
cld
sbb
add
push
cli
scas
inc
inc
or
pop
in
pop
sar
idiv
add
ds
aas
lock
or
jmp
or
add
ror
adc
(bad)
add
add
add
jne
and
test
out
icebp
pop
dec
stos
pop
clc
xlat
icebp
or
int3
cmc
loop
cld
sbb
inc
lds
push
xor
add
shrd
xlat
loop
cmp
loopne
sbb
add
add
inc
mov
cwde
fcomip
cmp
inc
loopne
inc
icebp
jne
repz
clc
mov
add
mov
add
imul
add
mov
inc
push
mov
add
push
(bad)
stos
cdq
inc
rol
xchg
stc
pand
mov
add
xchg
mov
inc
cdq
fsubrp
inc
add
aam
inc
add
ror
cld
iret
pop
jg
das
pop
(bad)
cs
adc
inc
push
sar
add
push
add
jne
nop
aas
out
icebp
das
dec
call
add
out
pop
in
outs
cmp
lahf
pop
mov
arpl
xor
xor
(bad)
or
inc
mov
add
rcr
(bad)
addr16
inc
sbb
xchg
pop
jecxz
les
add
inc
pop
push
dec
icebp
out
push
jmp
add
aaa
lahf
inc
mov
add
out
pop
in
outs
cmp
lahf
pop
mov
mov
xchg
in
icebp
in
fsubr
pushf
movs
jg
retf
test
cmp
fcmovu
fstp
mov
push
mov
or
jmp
mov
or
inc
cmp
xor
jg
dec
(bad)
ret
das
les
adc
inc
jne
enter
fdivr
sub
scas
ds
shl
out
mov
cmp
data16
test
mov
loop
push
jb
cmp
cmp
push
dec
adc
pop
mov
xor
and
mov
adc
data16
inc
and
cmp
jecxz
stos
pop
jl
jle
mov
add
bound
mov
xchg
mov
xchg
mov
sub
inc
add
test
sar
cmps
xchg
icebp
xor
test
call
pop
scas
fst
xchg
mov
dec
or
out
data16
call
cmps
mov
je
sahf
adc
pop
sti
(bad)
mov
mov
aas
xchg
ds
ins
sub
xchg
lods
cmc
jmp
dec
sbb
mov
sub
xchg
push
jmp
mov
dec
in
jns
push
sti
jmp
jne
mov
sub
adc
dec
ret
shl
jmp
sub
mov
jmp
(bad)
lahf
xchg
push
sti
xchg
aad
ret
(bad)
adc
in
sbb
cmc
scas
retf
in
mov
call
jp
pop
mov
or
pop
retf
nop
sub
adc
or
pop
test
or
mov
mov
and
adc
or
int
out
cmc
scas
mov
dec
ins
jb
stos
push
movs
sub
loopne
mov
lea
jmp
imul
fisub
sti
jmp
sub
scas
and
jnp
call
xchg
out
pop
lahf
xchg
cmp
sub
fild
mov
aas
inc
jnp
inc
sbb
mov
push
cmp
icebp
ss
out
(bad)
pop
push
fwait
retf
popa
addr16
rcr
push
fdivr
dec
adc
pop
dec
push
sbb
bound
jb
mov
inc
push
and
lods
shr
pop
pusha
jnp
sbb
jno
adc
sub
sub
(bad)
and
ret
and
imul
jp
rcl
bound
frstor
and
pop
rcr
sbb
je
push
or
mov
jp
test
lods
(bad)
fld
outs
pop
mov
jecxz
inc
add
stos
ja
loop
mov
leave
cmps
pop
fucomip
push
push
xor
int
test
mov
pop
lods
dec
shl
mov
or
shl
jne
inc
jle
enter
stos
jp
jns
in
ins
pop
retf
aad
pusha
jmp
inc
adc
nop
jb
les
jnp
cmps
test
sahf
icebp
and
push
popf
sub
jns
xor
retf
adc
dec
test
sahf
cwde
stos
mov
adc
shl
xchg
push
or
jp
mov
nop
shl
aam
repz
leave
sbb
jle
cli
jl
aad
pop
test
call
pop
ret
mov
add
mov
cmps
sbb
sub
fnstenv
mov
xor
sbb
or
icebp
xor
push
ins
and
lock
push
lods
lds
xchg
mov
push
test
cdq
push
xchg
mov
push
lahf
or
mov
inc
daa
add
push
mov
xor
pop
and
jge
push
dec
push
cwde
int
test
fisubr
jae
push
mov
ret
mov
sti
mov
mov
cmc
sbb
sbb
pop
or
dec
jl
in
sbb
pop
sub
lds
ret
fs
mov
cmp
stos
push
lea
jge
jo
push
imul
gs
imul
sub
pop
mov
icebp
inc
xchg
and
pop
sbb
test
push
cli
test
stos
ficomp
rcr
cs
xchg
adc
(bad)
(bad)
mov
push
ret
cmp
dec
out
cs
xchg
sbb
outs
sahf
pop
mov
mov
je
fs
mov
push
jno
jp
pushf
mov
mov
jo
xchg
xchg
out
sub
iret
mov
(bad)
test
xor
jp
mov
in
or
add
cld
sub
shl
mov
gs
or
ret
adc
cmp
pop
xchg
repz
adc
aam
mov
push
aaa
das
adc
enter
retf
cmc
and
mov
lea
cdq
xor
or
call
pop
sbb
(bad)
xchg
(bad)
jecxz
or
mov
pop
sbb
jp
hlt
fwait
mov
into
rcl
adc
shl
cmp
xchg
gs
imul
cmps
push
pusha
data16
add
test
das
shl
inc
xor
pusha
mov
enter
iret
sub
and
xor
inc
imul
(bad)
ja
loop
enter
push
inc
mov
pop
jge
mov
and
pop
mov
dec
lock
ins
jo
lods
pop
imul
sti
hlt
scas
dec
add
out
cdq
leave
mov
lahf
mov
mov
jnp
add
aaa
mov
pop
jno
add
fiadd
mov
outs
adc
iret
outs
adc
in
adc
xor
adc
add
and
daa
jmp
ds
and
lods
mov
out
ins
retf
fisttp
pop
mov
mov
ja
daa
inc
push
out
out
cwde
scas
cdq
loopne
sbb
ret
inc
xchg
outs
pop
inc
fcomp
push
inc
shr
pop
mov
sbb
aas
test
jg
stos
push
icebp
fs
adc
jge
sti
pop
sub
icebp
aas
jecxz
loopne
fild
pop
mov
in
mov
jg
mov
inc
iret
adc
inc
fsubr
jb
xor
mov
les
add
popf
aas
sub
call
cmps
loopne
xlat
repnz
inc
jns
sub
popf
jns
ror
push
les
pop
inc
clc
jne
fistp
imul
cs
push
popa
mov
out
scas
push
aaa
call
jne
push
arpl
cld
adc
jp
in
vmaxps
jl
lods
fistp
repnz
pop
jle
and
cmps
mov
jecxz
and
movs
movs
dec
xor
movs
dec
pop
cli
fsubp
fnstcw
adc
xlat
ret
mov
std
jbe
das
push
jmp
dec
sti
push
mov
adc
push
shl
int
ds
and
ret
aam
lds
fisttp
jg
js
add
push
aam
ins
outs
add
adc
dec
cmp
adc
fs
scas
add
fucomip
movs
jecxz
cmp
xchg
dec
icebp
mov
lahf
sbb
cmps
aad
jae
cmp
or
outs
or
shl
scas
mov
je
popf
inc
or
mov
add
stc
xchg
ins
arpl
add
pop
dec
je
jge
stc
sbb
pushf
dec
test
mov
(bad)
cmp
or
inc
mov
adc
dec
jg
jmp
stc
push
(bad)
sbb
pop
out
push
cmp
mov
xor
loop
mov
gs
mov
scas
fild
pop
dec
gs
push
dec
loop
in
loopne
push
sub
daa
add
cmp
mov
pop
test
dec
adc
adc
xchg
outs
xchg
or
daa
jo
in
mov
inc
outs
mov
sbb
ins
jmp
sbb
out
aas
mov
jns
lods
pop
add
sbb
popa
or
cli
sbb
mov
pop
mov
sub
fcmove
iret
cmps
push
arpl
sub
pop
pushf
popf
fucomi
out
jge
icebp
sahf
dec
(bad)
cld
and
mov
cmp
xchg
stos
shl
lock
sbb
jns
test
pop
pop
sbb
mov
mov
dec
repnz
test
push
out
mov
les
pop
mov
push
fldcw
push
std
mov
(bad)
or
nop
sub
mul
jmp
fisttp
pop
mov
loopne
adc
mov
aaa
call
test
(bad)
rcr
std
psllw
lahf
ret
call
ror
cld
cmp
ret
adc
xchg
pop
push
cmp
test
xchg
or
addr16
push
rol
pop
dec
idiv
stc
daa
stc
popf
push
movs
dec
adc
xlat
xchg
jbe
inc
xlat
fdivr
in
pop
loopne
add
loop
test
inc
mov
enter
adc
and
xchg
repz
(bad)
push
sbb
aas
adc
and
jnp
ds
shl
aas
clc
dec
loope
stc
cmps
mov
jmp
mov
and
mov
inc
dec
adc
(bad)
cmp
jecxz
add
mov
cld
pop
stos
js
iret
push
nop
shr
mov
jns
out
fcomp
dec
fadd
add
jno
stc
pop
daa
or
jle
inc
pop
sar
sahf
push
lea
sbb
sub
jmp
js
loop
(bad)
bsf
push
sub
mov
popa
aam
scas
ret
xchg
call
cmp
fiadd
inc
icebp
jle
ficomp
mov
push
xchg
inc
cmp
sbb
ins
cli
push
jae
xor
jnp
(bad)
loope
push
ror
push
jae
push
mov
shl
pop
(bad)
lods
xor
inc
mov
ret
mov
pop
push
aam
je
out
jmp
outs
push
inc
xchg
popa
jmp
pop
mov
jl
clc
test
sti
pop
call
mov
mov
push
call
push
and
int3
jo
shl
jmp
aas
loope
fst
aam
outs
das
inc
mov
mov
inc
arpl
sub
xbegin
mov
xchg
xchg
stos
sub
(bad)
(bad)
mov
repnz
dec
or
mov
xchg
popa
xor
or
inc
xchg
arpl
add
xchg
dec
add
pop
outs
les
dec
loopne
add
xchg
call
jle
pop
ss
rcr
and
push
or
xchg
add
jb
imul
std
xchg
cld
pop
jge
jle
push
clc
mov
or
les
(bad)
xor
push
in
pop
jne
jo
pop
retf
test
xor
inc
mov
(bad)
xchg
icebp
(bad)
test
xor
aad
sub
and
in
fbld
rol
or
fdiv
aam
addr16
ret
ficomp
retf
cmps
test
popa
in
sar
jno
or
mov
(bad)
test
(bad)
clc
inc
dec
push
push
rcr
mov
hlt
mov
fmul
add
mov
pop
or
ret
sar
pop
xor
fimul
call
mov
int
jno
cs
sub
push
xor
push
popa
rcr
xlat
(bad)
fadd
inc
iret
iret
sar
xchg
ret
dec
repnz
sub
fs
mov
cld
cmp
lods
mov
sbb
push
ret
aaa
push
jo
int
mov
add
retf
sbb
sub
add
sbb
aas
adc
fisttp
fstp
and
(bad)
fwait
test
push
mov
and
and
inc
jne
aam
sub
pusha
stos
cmp
scas
in
mov
jle
clc
sub
mov
mov
add
fld
pop
push
mov
mov
sbb
not
cmp
add
jmp
jno
mov
xchg
jo
jg
push
inc
inc
dec
scas
xor
les
sbb
xchg
jno
sbb
daa
outs
push
xchg
jmp
das
hlt
ds
xchg
outs
push
retf
dec
icebp
cmp
test
ins
sbb
mov
sub
add
sub
int
bound
fisub
jb
xlat
push
nop
lods
lods
(bad)
jmp
sbb
lahf
dec
cli
xor
adc
inc
nop
xchg
inc
jecxz
cld
xchg
loop
inc
fwait
jecxz
fwait
pop
push
cmovb
fsubr
jb
test
repnz
ds
inc
xor
lahf
dec
jns
imul
jp
xlat
imul
cmp
std
pushf
jl
movs
mov
mov
or
daa
pop
clc
in
mov
int
popa
or
in
stc
call
jl
pop
xchg
mov
pop
jns
cli
repz
test
repz
cmp
add
std
(bad)
sar
jp
imul
scas
loop
retf
mov
sahf
sahf
je
aas
out
fnsave
mov
mov
push
add
rol
add
dec
xor
add
cmp
xchg
add
sub
(bad)
cmp
rcr
or
sbb
sbb
stc
mov
cmp
mov
mov
mov
mov
sub
cld
outs
mov
inc
add
adc
test
jns
jbe
std
cmps
sbb
pop
addr16
mov
loopne
jge
test
xchg
pop
fidivr
push
lds
cld
adc
sbb
in
jbe
(bad)
fidivr
inc
adc
add
sub
je
xchg
mov
and
cmp
data16
aaa
push
push
sub
mov
out
popf
xor
ds
mov
mov
inc
retf
test
cmp
dec
clc
mov
cli
dec
popa
sar
mov
add
mov
in
mov
aas
int3
mul
fwait
pusha
sub
loopne
or
call
push
sbb
mov
ret
inc
inc
(bad)
std
jne
inc
(bad)
sar
bound
jne
sbb
fistp
aad
stos
stc
xlat
std
add
cmp
cld
(bad)
xor
jl
xor
call
in
imul
in
xchg
jecxz
sub
or
into
xchg
inc
(bad)
aad
sti
push
clc
mov
inc
leave
cmp
add
inc
sbb
pop
or
out
je
push
push
retf
mov
in
xor
pop
ins
xor
jo
nop
scas
push
adc
push
dec
or
cli
inc
xor
xchg
retf
mov
add
into
test
mov
sbb
hlt
sar
add
mov
loop
mov
(bad)
into
sbb
test
imul
adc
cwde
jmp
pop
fnsave
mov
(bad)
xchg
mov
push
ror
mov
sbb
mov
cmp
dec
daa
mov
(bad)
(bad)
jne
enter
pop
fbstp
mov
cmp
ror
stc
into
jno
xchg
popf
jnp
lods
(bad)
fldenv
jp
mov
jle
mov
test
retf
cmps
xchg
(bad)
cld
xchg
lock
push
sbb
cmps
inc
jecxz
shr
sbb
pushf
jns
sbb
jg
int
xor
out
iret
sub
(bad)
cli
and
push
dec
aas
les
mov
sub
arpl
xchg
cld
pop
mov
xor
es
inc
(bad)
aad
lahf
fdivr
lds
pop
push
inc
sbb
xchg
inc
(bad)
(bad)
jo
pushf
jmp
enter
jnp
mov
dec
clc
push
mov
pop
imul
add
sub
sub
inc
js
cmps
mov
imul
pop
mov
mov
mov
inc
sub
push
jmp
jne
clc
cmp
in
repnz
aas
int3
retf
or
into
les
(bad)
sbb
in
push
jmp
and
jmp
stos
mov
dec
fld
(bad)
mov
pop
scas
test
jecxz
pusha
imul
cmp
repz
(bad)
inc
or
loop
cli
or
fcomip
cli
pop
(bad)
xor
lds
aas
jmp
mov
jl
cmp
mov
add
push
in
xor
stos
xor
out
ret
pop
(bad)
enter
cmp
adc
inc
(bad)
jmp
jecxz
es
dec
cmp
sti
fnstcw
clc
fnsave
stos
fnstcw
leave
std
scas
add
mov
ds
jno
cmps
imul
xchg
aaa
mov
xchg
inc
mov
push
mov
add
pop
aas
clc
(bad)
test
dec
pop
dec
sub
out
sub
ins
(bad)
out
xor
cdq
sbb
push
dec
movs
push
push
cmp
pop
xlat
aaa
in
mov
mov
xchg
inc
mov
cmc
scas
dec
mov
sbb
cmp
pushf
push
xchg
aad
rcl
lock
xchg
jmp
xchg
imul
jno
imul
cmp
add
shl
dec
mov
mov
fwait
daa
aas
stc
push
scas
inc
sti
xor
xchg
add
jns
sub
pop
sti
dec
mov
aaa
fwait
push
test
cmp
fdivr
push
mov
sub
fisttp
lea
sbb
fbld
fwait
movs
mov
mov
icebp
mov
adc
push
test
add
int
dec
inc
movs
mov
sahf
outs
and
cli
ins
xchg
sbb
mov
xor
pop
cmp
xchg
stos
shr
xor
xor
add
inc
jecxz
add
mov
add
xchg
xor
add
inc
jecxz
je
adc
ja
push
add
dec
sbb
(bad)
movs
jnp
(bad)
in
cmps
loop
jno
push
rol
(bad)
pop
jg
fst
fnstenv
lds
xor
add
jmp
pop
sub
pop
adc
stos
cmp
mov
out
dec
fcom
cmp
aad
fs
mov
not
mov
(bad)
lds
movs
mov
add
mov
std
add
inc
xor
pushf
mov
scas
and
mov
dec
cmp
mov
adc
add
aas
fs
adc
sbb
fld
clc
fnsave
iret
in
dec
jecxz
inc
std
out
push
rcl
inc
inc
push
outs
adc
xchg
sbb
pop
adc
add
stos
pop
rcr
fiadd
push
dec
push
sbb
nop
jmp
neg
scas
jno
add
std
mov
jg
stc
mov
or
out
push
push
jg
mov
mov
mov
or
jg
pusha
xchg
shr
mov
pop
ret
fidivr
push
inc
xchg
popf
lods
out
pop
scas
jg
dec
sbb
jnp
inc
iret
inc
(bad)
push
mov
(bad)
jae
add
xor
jo
arpl
xchg
jae
sbb
add
dec
adc
adc
push
xchg
mov
nop
aas
idiv
sub
xor
fcomp
(bad)
mov
ins
(bad)
scas
mov
int
add
stos
daa
(bad)
mov
and
dec
dec
fidivr
frstor
call
pusha
addr16
lods
xor
fwait
rol
inc
ficom
xchg
pop
cld
enter
sbb
jb
add
mov
pop
ret
pop
or
fadd
loope
mov
shl
mov
shr
mov
add
or
pop
shl
dec
(bad)
jl
lods
jmp
mov
pop
dec
add
dec
xchg
jo
mov
xchg
dec
rol
loopne
adc
rcl
mov
push
and
push
cmp
repnz
aas
jmp
dec
std
add
div
or
imul
pop
jbe
call
ds
clc
jnp
add
loopne
inc
mov
mov
push
out
xchg
mov
xor
or
call
jl
sub
enter
and
jp
test
sahf
or
cli
or
mov
lea
add
scas
cwde
aas
popa
fist
add
lods
lods
xchg
out
dec
call
mov
test
retf
jns
cmc
ret
sbb
lock
jne
out
into
(bad)
push
jnp
outs
xchg
imul
retf
mov
ja
dec
shl
in
addr16
(bad)
fist
(bad)
and
out
clc
jb
out
pop
mov
add
and
add
jae
jno
and
mov
and
(bad)
sahf
adc
xadd
push
popf
arpl
and
mov
sti
mov
mov
(bad)
outs
fsubr
ret
jle
fistp
pop
adc
test
imul
les
adc
mov
and
add
adc
mov
mov
mov
out
sbb
mov
adc
push
iret
test
lods
xchg
cmps
and
jae
jbe
jle
mul
or
movs
(bad)
pop
sbb
sar
inc
mov
jmp
dec
push
icebp
push
xchg
mov
out
dec
jbe
retf
jbe
test
in
mov
jns
push
fcomp
dec
inc
or
inc
or
mov
aad
js
repnz
shl
gs
add
movs
popf
mov
test
add
mov
jg
jl
mov
ficomp
test
shr
pop
and
add
xor
rcl
in
test
push
xor
(bad)
push
imul
mov
mov
lahf
(bad)
inc
sysenter
(bad)
or
inc
aam
aas
(bad)
ret
das
mov
pop
or
imul
repz
and
test
xchg
lea
mov
jg
mov
call
lods
fcmovnu
cli
repnz
clc
das
popa
loope
add
xor
dec
ret
mov
out
mov
scas
sbb
mov
and
cmp
stos
xchg
push
movs
aaa
jns
push
pop
push
mov
and
xchg
jge
(bad)
and
pop
mov
sbb
mov
xlat
push
cmp
jne
jmp
jb
sub
pop
icebp
jmp
leave
xchg
(bad)
dec
mov
aam
cmp
sbb
pop
js
push
xchg
pop
mov
int
or
or
pop
pop
jnp
(bad)
cs
(bad)
add
cmc
pop
or
inc
ret
scas
or
or
dec
test
mov
xchg
aam
jmp
aam
xor
xchg
jmp
mov
(bad)
push
aad
sub
push
xchg
sti
sub
(bad)
stos
loop
adc
pop
cmps
(bad)
cld
outs
jle
(bad)
mov
fadd
xchg
ins
in
dec
dec
xchg
and
enter
lods
test
mov
inc
outs
sbb
inc
icebp
jbe
in
(bad)
xor
(bad)
rcr
repz
movd
lahf
or
jl
mov
ds
movs
clc
xchg
ret
mul
imul
cmps
jl
mov
bound
pushf
das
and
mov
stc
scas
mov
push
mov
adc
outs
outs
xchg
or
(bad)
sbb
movs
pop
push
jb
(bad)
enter
jo
dec
int
jo
mov
je
(bad)
push
mov
test
dec
jb
lahf
push
js
jecxz
sahf
or
ds
cld
sbb
cmps
test
xlat
(bad)
lock
shl
or
stc
push
inc
retf
sub
aas
ins
das
ficomp
dec
clc
cmp
push
mov
push
(bad)
retf
dec
retf
addr16
pop
retf
(bad)
imul
les
pop
sti
cs
pop
sar
addr16
mov
jge
test
outs
adc
sahf
repnz
test
jb
sub
ret
cmp
arpl
fisub
clc
test
lock
std
xor
dec
stos
int
push
sub
dec
mov
sbb
jae
cmp
adc
aad
xchg
pop
imul
dec
fs
out
jge
loopne
mov
clc
icebp
ins
lock
into
xchg
ins
mov
(bad)
ds
jnp
loopne
sub
xor
(bad)
in
mov
stc
xchg
dec
push
imul
adc
mov
aas
dec
cmp
js
inc
test
push
imul
dec
adc
leave
xor
daa
xor
cld
sbb
icebp
inc
les
imul
push
mov
dec
in
pop
fstp
and
(bad)
in
cmp
lock
into
icebp
je
fist
cmc
dec
mov
pop
push
mov
jno
cmps
pop
mov
cmps
int3
lods
les
and
jo
pop
add
pop
(bad)
or
fstp
repnz
(bad)
and
pushf
xlat
(bad)
iret
mov
cmps
in
scas
icebp
mov
jg
ds
(bad)
sti
fwait
hlt
mov
pop
mov
cmp
aam
mov
arpl
jb
std
or
mov
outs
jecxz
clc
inc
lock
push
clc
mov
div
ret
retf
sub
daa
jmp
xchg
add
and
aaa
std
scas
hlt
(bad)
pop
(bad)
outs
sti
aas
js
xlat
dec
rcl
stc
das
xor
nop
aam
sbb
xchg
or
(bad)
jbe
push
pusha
xor
pop
push
dec
clc
idiv
push
js
inc
aad
clc
aaa
loope
popf
pinsrw
adc
imul
push
(bad)
(bad)
cmp
mov
into
into
mov
aam
xor
pop
push
ins
mov
mul
clc
mov
das
add
test
jmp
push
push
dec
outs
ja
adc
pusha
int3
dec
add
addr16
jg
and
inc
ret
dec
out
mov
in
mov
and
jl
cmp
retf
fwait
xlat
out
sbb
push
add
inc
ds
aam
add
les
cli
dec
pop
cmp
shr
jp
inc
and
push
xor
mov
stos
inc
mov
xor
push
lock
test
pinsrw
xlat
cmp
retf
movs
cmp
sub
fs
xor
ins
sbb
jo
dec
and
mov
push
push
push
imul
cld
nop
xor
fild
mov
push
std
stos
scas
lods
outs
and
jno
mov
(bad)
jl
test
pop
aam
or
nop
pop
repnz
cmp
jae
in
ds
lock
in
or
icebp
push
push
lock
test
retf
or
or
stos
jmp
fdivr
(bad)
mov
stos
mov
nop
push
mov
mov
jnp
fistp
mov
inc
sar
mov
xchg
ret
loopne
push
icebp
cmps
gs
fisttp
cwde
add
fidivr
cmps
add
lods
sti
and
sar
add
sbb
xor
das
sub
enter
inc
ins
pop
cli
lock
dec
out
sbb
mov
pop
in
mov
cld
pop
inc
jle
dec
fidivr
jmp
inc
jg
inc
jg
(bad)
sar
inc
int
adc
ins
retf
out
mov
ss
or
sbb
ds
js
div
cmp
sar
stos
js
leave
fisttp
ins
xchg
xchg
add
sub
fidivr
push
sti
jl
pop
pop
(bad)
fld
add
pop
dec
mov
xor
adc
loopne
jae
sub
cwde
test
push
pusha
sub
push
out
lods
or
ds
call
xor
lock
and
sub
xlat
push
sub
sbb
out
mov
ret
mov
push
imul
popf
fcomp
sbb
lock
add
mov
xchg
add
test
cdq
and
xchg
(bad)
jbe
jl
inc
mov
add
ss
aam
xlat
(bad)
inc
es
xchg
mov
xlat
xchg
fadd
loope
mov
ss
loop
mov
dec
and
mov
mov
mov
mov
and
clc
es
enter
push
inc
(bad)
sti
jns
mov
sub
stos
xor
sub
jns
push
jne
or
mov
aas
mov
(bad)
jg
jl
mov
or
sbb
cmp
in
dec
cmp
push
loopne
fnstenv
jmp
inc
or
mov
dec
iret
inc
and
mov
add
in
call
mov
pop
stos
test
inc
cdq
repz
xchg
jmp
jns
fdivr
add
mov
sub
ret
sub
aas
loope
mov
pop
clc
sub
icebp
retf
sti
and
add
(bad)
mov
inc
aaa
loopne
enter
ins
das
mov
lock
dec
outs
jg
cs
clc
ins
das
mov
lock
dec
outs
jg
cs
xor
out
icebp
jg
pop
pop
(bad)
inc
aaa
loopne
enter
ins
das
mov
lock
dec
outs
jg
cs
clc
ins
das
mov
lock
dec
outs
jg
cs
xor
out
icebp
jg
pop
pop
(bad)
inc
aaa
loopne
enter
ins
das
mov
lock
dec
outs
jg
cs
clc
ins
das
mov
lock
dec
outs
jg
cs
xor
out
icebp
jg
pop
pop
(bad)
inc
aaa
loopne
enter
ins
das
mov
lock
dec
outs
jg
cs
clc
ins
das
mov
lock
dec
outs
jg
cs
xor
out
icebp
jg
pop
pop
(bad)
inc
aaa
loopne
enter
ins
das
mov
lock
dec
outs
jg
cs
clc
ins
das
mov
lock
dec
outs
jg
cs
xor
out
icebp
jg
pop
pop
(bad)
inc
aaa
loopne
enter
ins
das
mov
lock
dec
outs
jg
cs
clc
ins
das
mov
lock
dec
outs
jg
cs
xor
out
icebp
jg
pop
pop
(bad)
inc
aaa
loopne
enter
ins
das
mov
lock
dec
outs
jg
cs
clc
ins
das
mov
lock
dec
outs
jg
cs
xor
out
icebp
jg
pop
pop
(bad)
inc
aaa
loopne
enter
ins
das
mov
lock
dec
outs
jg
cs
clc
ins
das
mov
lock
dec
outs
jg
cs
xor
out
icebp
jg
pop
pop
(bad)
inc
aaa
loopne
enter
ins
das
mov
lock
dec
outs
jg
cs
clc
ins
das
mov
lock
dec
outs
jg
cs
xor
out
icebp
jg
pop
pop
(bad)
inc
aaa
loopne
enter
ins
das
mov
lock
dec
outs
jg
cs
clc
ins
das
mov
lock
dec
outs
jg
cs
xor
out
icebp
jg
pop
pop
(bad)
inc
aaa
loopne
enter
ins
das
mov
lock
dec
outs
jg
cs
clc
ins
das
mov
lock
dec
outs
jg
cs
xor
out
icebp
jg
pop
pop
(bad)
inc
aaa
loopne
enter
ins
das
mov
lock
dec
outs
jg
cs
clc
ins
das
mov
lock
dec
outs
jg
cs
xor
out
icebp
jg
pop
pop
(bad)
inc
aaa
loopne
enter
ins
das
mov
lock
dec
outs
jg
cs
clc
ins
das
mov
lock
dec
outs
jg
cs
xor
out
icebp
jg
pop
pop
(bad)
inc
aaa
loopne
enter
ins
das
mov
lock
dec
outs
jg
cs
clc
ins
das
mov
lock
dec
outs
jg
cs
xor
out
icebp
jg
pop
pop
(bad)
inc
aaa
loopne
enter
ins
das
mov
lock
dec
outs
jg
cs
clc
ins
das
mov
lock
dec
outs
jg
cs
xor
out
icebp
jg
pop
pop
(bad)
inc
aaa
loopne
enter
ins
das
mov
lock
dec
outs
jg
cs
clc
ins
das
mov
lock
dec
outs
jg
cs
xor
out
icebp
jg
pop
pop
(bad)
inc
aaa
loopne
enter
ins
das
mov
lock
dec
outs
jg
cs
clc
ins
das
mov
lock
dec
outs
jg
cs
xor
out
icebp
jg
pop
pop
(bad)
inc
aaa
loopne
enter
ins
das
mov
lock
dec
outs
jg
cs
clc
ins
das
mov
lock
dec
outs
jg
cs
xor
out
icebp
jg
pop
pop
(bad)
inc
aaa
loopne
enter
ins
das
mov
lock
dec
outs
jg
cs
clc
ins
das
mov
lock
dec
outs
jg
cs
xor
out
icebp
jg
pop
pop
(bad)
inc
aaa
loopne
enter
ins
das
mov
lock
dec
outs
jg
cs
clc
ins
das
mov
lock
dec
outs
jg
cs
xor
out
icebp
jg
pop
pop
(bad)
inc
aaa
loopne
enter
ins
das
mov
lock
dec
outs
jg
cs
clc
ins
das
mov
lock
dec
outs
jg
cs
xor
out
icebp
jg
pop
pop
(bad)
inc
aaa
loopne
enter
ins
das
mov
lock
dec
outs
jg
cs
clc
ins
das
mov
lock
dec
outs
jg
cs
xor
out
icebp
jg
pop
pop
(bad)
inc
aaa
loopne
enter
ins
das
mov
lock
dec
outs
jg
cs
clc
ins
das
mov
lock
dec
outs
jg
cs
xor
out
icebp
jg
pop
pop
(bad)
inc
aaa
loopne
enter
ins
das
mov
lock
dec
outs
jg
cs
clc
ins
das
mov
lock
dec
outs
jg
cs
xor
out
icebp
jg
pop
pop
(bad)
inc
aaa
loopne
enter
ins
das
mov
lock
dec
outs
jg
cs
xchg
popf
pop
rcr
loop
pop
fidivr
gs
outs
shl
cmp
shr
das
test
popa
xchg
imul
fisttp
push
sub
inc
pushf
call
jo
bound
jb
fnstcw
pop
cmp
sar
xchg
cmc
xor
nop
push
mov
jg
es
dec
aaa
(bad)
mov
rcr
ftst
inc
ror
adc
or
and
test
inc
loope
cld
mov
cli
(bad)
(bad)
xchg
dec
pop
popf
mov
ret
jnp
xchg
cmp
sub
jbe
into
imul
mov
or
cs
xchg
fimul
push
mov
std
xor
sahf
adc
xchg
xor
not
scas
xchg
es
xchg
ds
pop
iret
and
loopne
out
mov
sar
and
bound
xchg
push
fwait
shl
jle
movs
mov
cmps
std
aad
out
ja
jl
movs
pop
inc
cmps
js
lds
test
cmp
mov
ror
shl
aam
int
movs
sub
int
into
test
mov
clc
pop
push
cld
sar
add
clc
mov
out
aam
xor
add
stos
mov
repnz
push
retf
sub
outs
(bad)
repnz
adc
add
add
lods
inc
imul
not
mov
out
aam
xor
add
stos
je
xchg
sub
mov
inc
loop
mov
js
stc
stc
pop
mov
in
jae
(bad)
shr
mov
lds
shl
call
inc
adc
iret
sub
add
add
test
jle
out
inc
sti
or
mov
xchg
rcl
mov
dec
jg
fwait
jg
cmps
inc
adc
icebp
inc
jg
popf
jg
cmps
inc
adc
cld
cld
(bad)
fiadd
xor
aad
loop
push
mov
inc
inc
clc
stos
jo
call
jg
cmps
inc
adc
cld
cld
pop
jp
mov
cld
(bad)
out
addr16
sbb
mov
scas
dec
aas
mov
(bad)
inc
cli
adc
inc
xor
add
test
push
inc
mov
dec
(bad)
sub
out
sti
sar
scas
repnz
mov
sub
out
(bad)
ret
(bad)
dec
loopne
mov
lock
(bad)
mov
call
mov
ins
dec
push
aam
mov
mov
imul
adc
leave
and
lahf
mul
popf
cmp
sbb
ss
xchg
rcl
and
add
stos
mov
xchg
cmp
hlt
popf
push
pop
sbb
adc
movs
fimul
or
xchg
imul
mov
or
outs
jecxz
inc
out
scas
add
or
scas
je
xchg
mov
push
push
dec
pop
pop
pop
mov
addr16
jmp
jno
clc
xchg
les
sbb
out
mov
in
aam
inc
push
sub
pop
mov
pop
outs
or
jo
xchg
inc
das
test
add
mov
cld
inc
cmps
pop
(bad)
adc
xchg
clc
jnp
shl
in
cmp
sbb
dec
cs
add
mov
int3
repz
cmp
stc
imul
sar
xor
(bad)
sub
push
push
mov
dec
push
(bad)
fidivr
push
jmp
pushf
mov
xor
and
pop
test
xchg
(bad)
cmps
(bad)
pop
ss
adc
mov
aas
push
push
mov
mov
out
sbb
xchg
xor
mov
mov
pop
cmps
stc
sahf
stos
mov
jg
std
pop
icebp
(bad)
adc
int
sub
cmc
out
or
jmp
xchg
aaa
xchg
jae
cmps
ret
stc
repnz
shl
mov
sbb
jmp
sbb
sbb
pop
sbb
dec
shl
adc
cmp
mov
lods
repnz
div
lahf
cmp
pop
xor
cwde
dec
mov
nop
gs
or
retf
scas
pop
jecxz
mov
ret
mov
adc
into
loop
dec
pop
imul
sub
push
inc
ror
xor
pop
jns
push
push
bswap
xor
ror
xchg
test
jl
(bad)
in
scas
jl
sti
ds
sar
fisubr
mov
movs
movs
dec
cmp
add
cmp
dec
jp
mov
pop
ror
inc
test
xchg
jecxz
(bad)
clc
aaa
push
aam
shr
sub
xor
in
sub
ror
pop
jmp
mov
loopne
ret
and
in
in
jecxz
(bad)
xor
sub
adc
add
in
add
and
inc
pop
and
popa
dec
ins
imul
call
(bad)
mov
js
fs
mov
sbb
mov
out
sub
(bad)
mov
pop
jl
jno
lea
aam
lods
fcmovbe
je
std
pop
in
push
ror
mov
pop
xor
adc
xchg
arpl
(bad)
mov
add
jecxz
neg
pop
mov
stos
in
add
fs
mov
mov
or
pop
xor
xor
push
fdivr
xor
clc
or
push
fdivr
outs
pop
sahf
and
shl
sub
in
test
mov
(bad)
mov
dec
mov
or
cmp
fimul
movs
retf
and
xor
add
fisub
es
inc
scas
aaa
clc
xor
add
mov
aas
in
shr
call
fsubr
mov
push
inc
add
adc
inc
add
adc
inc
add
adc
inc
add
adc
inc
add
adc
inc
add
adc
inc
add
adc
inc
add
adc
inc
add
adc
inc
add
adc
inc
add
adc
inc
add
gs
inc
push
(bad)
mov
dec
push
push
mov
add
pop
aad
jmp
dec
std
add
xor
imul
dec
cld
mov
cmps
mov
lea
xchg
(bad)
in
push
sbb
das
test
add
and
inc
movs
sbb
adc
add
(bad)
jnp
inc
jge
push
fs
cmp
and
jg
aas
adc
js
out
inc
xchg
pop
(bad)
jecxz
sub
mov
add
xchg
xor
adc
sbb
or
pop
jne
add
sbb
int3
mov
inc
pusha
inc
inc
in
(bad)
mov
xchg
mov
add
gs
pop
or
mov
call
cmc
aad
add
add
and
inc
(bad)
aam
inc
add
fs
pop
cld
sbb
inc
sbb
add
fstp
mov
sar
sub
dec
sar
(bad)
cdq
mov
jno
iret
clc
and
inc
cld
adc
push
aas
repz
add
sar
push
sub
(bad)
imul
add
add
jne
sti
ins
cmp
fidiv
pusha
aas
out
inc
sbb
inc
lahf
jg
inc
xor
out
daa
stc
inc
add
(bad)
inc
rol
inc
cdq
and
inc
push
or
jecxz
or
test
jg
cmp
pop
hlt
pop
cli
ja
add
push
inc
jecxz
jg
pusha
aas
out
loop
add
pop
pop
lds
loopne
enter
add
add
push
scas
inc
mov
add
dec
pop
lock
or
xchg
imul
sub
test
retf
(bad)
(bad)
add
pop
clc
in
pop
fstp
stc
idiv
mov
mov
jnp
inc
add
inc
loopne
jg
adc
clc
js
mov
scas
inc
mov
add
pop
adc
jbe
(bad)
pop
mov
jecxz
jg
pusha
aas
out
loop
add
ds
jg
out
inc
lock
test
(bad)
and
mov
cli
adc
mov
mov
popf
(bad)
pop
mov
jecxz
outs
mov
cmp
sbb
inc
inc
pop
(bad)
popa
cmc
fcom
dec
cld
(bad)
je
lock
or
imul
sub
paddb
push
pop
repz
jnp
icebp
adc
pusha
inc
(bad)
push
(bad)
cmp
push
add
jge
das
cld
ret
jmp
scas
out
pop
stc
push
fidivr
mov
cdq
xlat
inc
add
inc
mov
test
jg
pusha
(bad)
outs
mov
out
inc
mov
inc
add
in
pop
fstp
stc
idiv
mov
mov
jnp
jg
dec
jne
inc
xor
inc
(bad)
aam
dec
dec
test
jg
pusha
(bad)
outs
mov
jge
add
fidiv
fdivr
inc
jecxz
inc
mov
pop
repz
icebp
jg
aas
scas
loop
lahf
lock
mov
cld
adc
push
pop
stc
xchg
ins
jg
pusha
(bad)
outs
mov
test
repz
loopne
mov
int
rcr
inc
sbb
add
sar
xchg
cmp
lahf
jg
inc
xor
out
daa
stc
inc
add
mov
pop
sub
loopne
xor
loopne
inc
enter
jne
xchg
(bad)
aas
fisub
(bad)
pop
mov
scas
ins
fcmove
inc
or
imul
mov
sbb
jmp
sub
in
mov
mov
inc
or
in
call
jmp
cmps
iret
dec
or
jmp
lea
shl
pushf
mov
mov
push
call
aam
out
mov
add
xchg
pop
cmp
out
jg
fsub
push
pop
mov
pushf
(bad)
and
pop
repz
sti
in
push
idiv
neg
mov
push
pop
imul
jge
xlat
pop
cld
test
cdq
sub
inc
sahf
sar
add
bound
cmp
lds
inc
dec
inc
inc
idiv
neg
mov
push
inc
rcr
rcl
scas
psubw
pop
std
imul
sti
pop
pop
repz
sti
in
push
je
fs
pop
imul
jge
xlat
pop
cld
test
cdq
sub
inc
sahf
sar
add
bound
cmp
lds
inc
dec
inc
inc
idiv
neg
mov
push
inc
rcr
rcl
scas
psubw
pop
std
imul
sti
pop
pop
repz
sti
in
push
je
fs
pop
imul
jge
xlat
pop
cld
test
cdq
sub
inc
sahf
sar
add
bound
cmp
lds
inc
dec
inc
inc
idiv
neg
mov
push
inc
rcr
rcl
scas
psubw
pop
std
imul
sti
pop
pop
repz
sti
in
push
je
fs
pop
imul
jge
xlat
pop
cld
test
cdq
sub
inc
sahf
sar
add
bound
cmp
lds
inc
dec
inc
inc
idiv
neg
mov
push
inc
rcr
rcl
scas
psubw
pop
std
imul
sti
pop
pop
repz
sti
in
push
je
fs
pop
imul
jge
xlat
pop
cld
test
cdq
sub
inc
sahf
sar
add
bound
cmp
lds
inc
dec
inc
inc
idiv
neg
mov
push
inc
rcr
rcl
scas
psubw
pop
std
imul
sti
pop
pop
repz
sti
in
push
je
fs
pop
imul
jge
xlat
pop
cld
test
cdq
sub
inc
sahf
sar
add
bound
cmp
lds
inc
dec
inc
inc
idiv
neg
mov
push
inc
rcr
rcl
scas
psubw
pop
std
imul
sti
pop
pop
repz
sti
in
push
je
fs
loop
stc
push
jne
cli
not
mov
mov
neg
lods
scas
adc
stos
add
fwait
imul
lods
imul
cmps
iret
pop
push
jge
aaa
(bad)
aas
gs
mov
xchg
dec
pop
mov
mov
aam
sahf
dec
xor
adc
pop
inc
lock
add
cld
xor
add
jne
repnz
stos
dec
sti
outs
je
out
ret
sub
ja
pop
inc
imul
mov
std
pop
jle
inc
loopne
xchg
(bad)
xor
or
sar
add
jmp
jae
loope
std
xchg
mov
inc
add
icebp
mov
pop
inc
lock
add
cld
xor
add
jne
cli
mov
popf
pop
mov
retf
sbb
sbb
stos
inc
inc
inc
test
sbb
sbb
add
cmp
pop
inc
into
(bad)
(bad)
clc
dec
aas
gs
cli
paddb
inc
ror
cld
push
not
repz
clc
inc
inc
sbb
inc
cld
and
call
test
not
add
inc
outs
call
mov
lods
inc
inc
fild
add
ret
jg
cmp
fsubr
clc
dec
mov
cld
and
add
int
cld
push
not
add
or
inc
(bad)
mov
pop
aas
loope
pop
lods
and
inc
out
jg
inc
mov
std
pop
(bad)
adc
pop
xchg
(bad)
xor
ret
sub
add
jg
pop
inc
xchg
lock
pop
push
nop
jae
idiv
(bad)
adc
push
inc
add
das
dec
inc
sbb
dec
mov
cld
and
idiv
movs
inc
lea
inc
ret
jg
cmp
fsubr
clc
dec
mov
cld
and
add
int
cld
push
not
add
or
inc
(bad)
mov
pop
aas
loope
pop
lods
and
inc
out
ja
fbstp
adc
add
xchg
(bad)
xor
ret
sub
ja
pop
inc
imul
mov
pop
push
nop
jae
idiv
(bad)
adc
pop
inc
lock
add
aas
loope
std
xchg
mov
inc
add
icebp
scas
ret
pop
clc
inc
push
(bad)
clc
inc
push
(bad)
stos
dec
cmp
sti
popf
inc
or
inc
out
test
sbb
cld
inc
mov
std
pop
(bad)
adc
add
pop
xchg
(bad)
xor
or
sar
add
jmp
jae
loope
std
xchg
jg
aas
lock
add
out
(bad)
xor
sbb
retf
arpl
or
std
mov
xchg
lock
pop
push
nop
jae
idiv
(bad)
adc
push
inc
lock
dec
inc
sbb
loope
std
xchg
jg
aas
lock
add
hlt
mov
clc
inc
push
(bad)
clc
inc
push
(bad)
stos
dec
cmp
sti
popf
inc
or
inc
inc
test
sbb
lock
jle
fcomip
sbb
sbb
inc
cld
and
call
test
not
add
or
inc
(bad)
(bad)
clc
dec
mov
cld
and
add
int
cld
imul
(bad)
adc
mov
jmp
ret
sub
ja
pop
inc
imul
mov
std
pop
jle
inc
loopne
xchg
(bad)
xor
or
sar
add
jmp
jae
loope
std
xchg
mov
inc
add
icebp
mov
pop
inc
lock
add
cld
xor
add
jne
cli
mov
popf
pop
mov
retf
sbb
sbb
lods
inc
inc
fild
add
ret
jg
cmp
fsubr
clc
dec
mov
cld
and
add
int
cld
push
not
add
or
inc
(bad)
mov
pop
aas
loope
pop
lods
and
inc
out
ja
fbstp
adc
add
xchg
(bad)
xor
ret
sub
ja
pop
inc
imul
mov
pop
push
nop
jae
idiv
(bad)
adc
pop
inc
lock
add
aas
loope
std
xchg
mov
inc
add
icebp
scas
ret
pop
clc
inc
push
(bad)
clc
inc
push
(bad)
stos
dec
cmp
sti
popf
inc
or
inc
fild
add
retf
sbb
sbb
inc
cld
and
call
test
not
add
or
inc
(bad)
(bad)
clc
dec
mov
cld
and
add
int
cld
imul
(bad)
adc
mov
jmp
ret
sub
ja
pop
inc
imul
mov
std
pop
jle
inc
loopne
xchg
(bad)
xor
or
sar
add
jmp
jae
loope
std
xchg
mov
inc
add
icebp
mov
pop
inc
lock
add
cld
xor
add
jne
cli
mov
popf
pop
mov
retf
sbb
sbb
lods
inc
inc
fild
add
ret
jg
cmp
fsubr
clc
dec
mov
cld
and
add
int
cld
push
not
add
or
inc
(bad)
mov
pop
aas
loope
pop
lods
and
inc
out
ja
fbstp
adc
add
xchg
(bad)
xor
ret
sub
ja
pop
inc
imul
mov
loop
mov
ret
enter
movs
inc
or
inc
out
test
sbb
cld
inc
mov
std
pop
mov
xchg
(bad)
xor
lods
add
in
push
les
sub
push
lahf
lahf
cmc
xlat
aas
not
inc
test
es
cmp
fucomp
clc
dec
inc
gs
cli
(bad)
and
add
int
cld
push
not
add
or
inc
(bad)
mov
sar
add
mov
std
hlt
mov
sbb
idiv
cld
sub
or
add
fwait
dec
mov
inc
sbb
stos
inc
inc
out
test
sbb
adc
add
lahf
sti
jmp
inc
xor
add
in
jae
add
clc
push
in
es
aas
ja
add
aaa
std
xchg
jg
cmp
add
icebp
mov
push
inc
xor
add
cld
and
add
out
cli
pop
lock
cld
idiv
not
pop
xor
fucomp
clc
dec
aas
gs
pop
clc
inc
inc
std
jle
lahf
jecxz
nop/reserved
and
std
mov
xchg
inc
add
clc
inc
sub
out
(bad)
out
ret
inc
sub
out
iret
out
ret
cwde
jae
std
loop
add
mov
or
jg
(bad)
clc
dec
jg
mov
inc
shr
(bad)
adc
psubw
jae
(bad)
lock
stc
in
jae
(bad)
lock
in
es
aas
js
mov
add
sbb
xlat
ret
mov
jl
sti
sub
mov
add
push
inc
or
cld
xbegin
add
cld
xbegin
push
jg
shr
jl
aas
div
cmps
lahf
jmp
push
cs
xchg
fsub
or
shr
dec
inc
sbb
sbb
ret
(bad)
jnp
(bad)
arpl
sub
add
(bad)
arpl
sub
adc
push
xchg
dec
jg
sbb
dec
inc
sbb
aas
gs
cli
or
shr
(bad)
adc
psubw
jae
(bad)
lock
stc
in
jae
(bad)
lock
jle
jg
imul
jg
ja
pop
inc
imul
sbb
call
jp
in
mov
cmp
ins
inc
retf
sbb
xchg
cmp
dec
push
or
add
sti
call
inc
add
lock
scas
xchg
sti
data16
add
daa
cwde
mov
(bad)
ss
push
aam
sbb
push
mov
inc
loop
fisub
les
ret
push
xchg
lds
fsub
mov
sbb
jmp
jae
or
(bad)
outs
adc
lahf
clc
xchg
sahf
aas
in
mov
and
mov
(bad)
popf
fnstsw
cmp
inc
mov
pop
xchg
push
in
rcl
sbb
retf
sbb
pushf
mov
pop
ja
inc
imul
outs
in
fistp
fidivr
dec
cmp
aam
imul
sbb
mov
mov
das
in
jae
int
cmp
xchg
shl
lock
aad
xchg
stos
or
sub
mov
add
mov
sub
rcr
int3
mov
push
into
(bad)
jo
mov
pop
sbb
mov
loop
fstp
aad
movs
scas
xlat
dec
das
fadd
idiv
lock
jmp
mov
jecxz
popf
cs
push
xchg
cmp
mov
scas
and
addr16
or
sar
sbb
in
and
mov
xor
fs
(bad)
pop
pop
xchg
mov
mov
mov
lods
cld
jmp
sbb
ret
inc
or
loop
test
or
fcomp
fst
retf
pop
ss
jnp
pop
das
fadd
sahf
mov
mov
jbe
stos
call
inc
xchg
mov
push
clc
retf
mov
ss
mov
dec
loop
xchg
iret
into
aas
or
push
(bad)
pop
daa
shl
sub
aam
in
adc
dec
out
cmc
push
inc
sbb
cmp
add
ror
lods
hlt
sbb
push
mov
cmps
jl
std
movs
xor
imul
mov
jns
xor
inc
in
in
imul
imul
clc
std
loop
fisub
loope
xlat
mov
imul
stos
push
cdq
sbb
(bad)
mov
inc
inc
mov
push
lods
push
push
dec
push
fmul
in
iret
int
mov
aas
les
(bad)
ror
adc
mov
add
retf
test
jns
movs
js
pushf
mov
fcmovnu
mov
(bad)
(bad)
mov
pop
jns
aaa
ret
mov
mov
inc
ror
xchg
adc
shl
aas
dec
jmp
fcos
add
xchg
mov
sbb
dec
mov
push
pop
test
iret
jo
mov
test
pop
clc
lods
jecxz
in
clc
stc
jnp
xchg
cmc
in
aas
add
rcl
sbb
jecxz
dec
xchg
and
stc
cwde
arpl
fldl2t
pop
lahf
mov
in
leave
paddsb
icebp
add
xlat
dec
mov
les
mov
sbb
(bad)
enter
or
call
add
iret
cld
and
pop
inc
call
idiv
pop
fstp
or
push
xlat
mov
imul
ins
cmp
cdq
dec
sbb
mov
daa
mov
xchg
out
sub
mov
mov
and
inc
pop
add
jmp
inc
aad
inc
mov
push
jmp
pop
ins
dec
cwde
jns
xor
out
repz
test
push
ret
aas
mov
adc
shl
mov
jae
outs
in
dec
adc
xor
xor
adc
(bad)
fdivr
in
popa
lock
clc
mov
lea
ret
mov
dec
push
jae
es
inc
push
xor
add
cmps
movs
jp
(bad)
out
fld
(bad)
aas
mov
and
out
xchg
jg
fdiv
inc
add
fcom
add
clc
ret
ret
imul
cli
mov
add
xchg
ret
and
adc
sub
jb
lock
psubusw
daa
sar
sbb
push
mov
cmp
dec
mov
outs
cmc
or
movs
pusha
(bad)
jmp
jge
repnz
mov
pop
jns
scas
(bad)
dec
pop
dec
std
lock
loope
and
push
(bad)
cmc
jns
retf
repnz
push
sti
and
push
jo
inc
ins
std
fidiv
fsub
dec
pop
(bad)
rcr
or
pop
mov
sub
xchg
mov
scas
add
scas
movs
dec
add
cli
jae
xor
outs
ret
jecxz
sub
ror
dec
inc
lock
icebp
jmp
jmp
fist
jmp
mov
jno
xchg
pop
int3
je
popa
pop
retf
mov
pop
add
fstp
mov
jle
fist
shr
mov
test
loop
cmp
pop
in
push
pop
cmp
loope
pop
test
xor
push
clc
add
es
not
sub
cdq
sbb
fs
lds
test
ins
ret
sub
add
clc
fwait
lock
cli
cmps
mov
mov
call
jbe
fadd
es
inc
jno
das
mov
add
ins
aas
hlt
or
test
add
xor
(bad)
and
pop
jbe
ficom
mov
push
push
jbe
mov
idiv
in
dec
mov
inc
adc
mov
jae
scas
aad
adc
je
xchg
loope
xchg
or
imul
adc
jle
jbe
xchg
mov
add
clc
sbb
xlat
adc
jecxz
call
mov
add
popa
xchg
push
mov
inc
retf
lods
mov
mov
jmp
ds
daa
clc
pop
loope
inc
mov
fwait
sbb
sub
je
ds
in
xchg
sti
paddb
clc
jne
outs
sbb
push
(bad)
jecxz
mov
fwait
leave
daa
mov
and
ret
jns
ins
shl
mov
daa
call
add
jmp
inc
shr
hlt
fsub
dec
inc
in
or
loop
mov
cld
sbb
xor
hlt
fwait
div
cld
cmp
mov
mov
sbb
mov
or
mov
sbb
push
add
mov
sub
(bad)
mov
pop
out
test
push
mov
mov
lds
fsub
sbb
xlat
push
push
jle
rcr
pop
sbb
add
inc
mov
mov
cld
xor
pop
imul
enter
xor
inc
add
clc
adc
add
mov
or
mov
into
pop
retf
imul
xor
add
or
dec
int3
or
mov
fwait
lds
xchg
lahf
add
or
mov
ja
inc
clc
jp
pop
lock
std
sahf
dec
mov
mov
mov
int3
jle
jl
aam
adc
sahf
mov
ss
fidivr
ret
sbb
and
jg
hlt
jb
addr16
call
aam
cmp
shl
sti
retf
or
jecxz
dec
ins
xchg
and
jbe
(bad)
mov
pop
pop
pop
in
inc
(bad)
movs
stos
clc
jnp
mov
(bad)
mov
leave
and
stc
call
ds
(bad)
sub
ds
clc
add
test
leave
movs
inc
push
cdq
sub
aam
sbb
xchg
push
inc
fsub
fs
push
pop
icebp
outs
loope
mov
imul
pop
(bad)
outs
pushf
ins
in
pop
int3
mov
hlt
scas
(bad)
(bad)
loope
ret
lahf
sbb
lea
add
cs
ins
dec
dec
jns
popa
gs
xchg
dec
add
xchg
and
imul
adc
retf
add
dec
jb
jnp
or
loop
fdivr
xchg
and
or
cmp
mov
das
daa
jge
in
cld
out
add
jmp
mov
add
clc
or
ins
cmp
cmp
imul
fisubr
daa
mov
mov
cmps
in
xchg
mov
add
dec
sar
call
(bad)
mov
jne
cld
dec
lock
les
dec
inc
push
lock
cmps
mov
rcr
outs
mov
pop
add
jns
lods
(bad)
es
mov
adc
add
aas
mov
xor
shr
je
push
push
mov
in
lods
jle
xor
nop
adc
sbb
pop
enter
arpl
xchg
in
push
lock
push
dec
clc
jg
shl
sar
jge
mov
xor
out
sbb
and
and
fistp
mov
mov
sahf
fldcw
adc
inc
clc
inc
loope
icebp
pop
xchg
dec
pop
(bad)
std
ds
jge
xlat
sub
lock
out
sbb
jg
fld
dec
xchg
dec
mov
cdq
outs
and
mov
push
mov
mov
pop
sbb
into
adc
inc
pop
fidiv
push
mov
jl
add
loop
clc
es
xor
inc
cmps
imul
dec
add
stos
out
cli
or
push
dec
jle
pop
adc
aaa
clc
push
pop
jg
xchg
dec
mov
mov
pop
dec
and
scas
pop
sub
xor
ds
cli
lods
lock
loop
scas
jecxz
dec
loop
mov
call
imul
test
(bad)
jo
jo
mov
cmps
or
adc
js
pop
xchg
ins
cmp
out
cdq
(bad)
sbb
lea
jge
jbe
xchg
pop
fwait
jle
std
mov
jl
icebp
out
mov
cmps
popf
sub
push
int
jo
adc
add
and
fucom
add
dec
iret
mov
fidiv
mov
into
movs
cmps
pop
sar
and
mov
loope
repnz
aas
mov
pop
fcos
add
aas
fnstcw
mov
(bad)
mov
mov
aaa
add
(bad)
adc
inc
fistp
ja
call
das
inc
or
mov
in
fcomp
in
ret
cld
adc
add
push
xchg
mov
add
(bad)
std
test
ficom
(bad)
jl
loop
int
les
jl
pop
lods
push
add
jg
cli
or
and
xlat
inc
mov
mov
sbb
xor
sub
pop
data16
xchg
pop
retf
ja
sub
lods
xor
jle
pop
push
mov
mov
call
loop
xchg
pop
enter
and
sub
xchg
push
push
cmp
loopne
in
cmps
jecxz
fidiv
out
(bad)
adc
fld
mov
out
in
cdq
fmul
hlt
scas
mov
lock
inc
mov
cmp
jne
lds
xchg
loop
cmp
mov
jmp
add
push
xor
lahf
push
xchg
or
outs
outs
paddsb
sub
pop
inc
dec
jg
int3
and
fisttp
ret
or
jg
pop
mov
daa
lahf
dec
icebp
mov
fiadd
sub
int
mov
push
sbb
mov
scas
xor
pop
cld
test
jo
rcl
les
push
js
imul
cmps
jmp
push
xchg
mov
add
jmp
xor
icebp
aas
dec
div
(bad)
loop
ret
jge
push
clc
pop
out
fisub
add
and
xchg
add
cmp
xor
jp
mov
jle
js
ud2
js
fisub
cmps
xor
dec
lods
jnp
dec
mul
in
outs
inc
lahf
mov
ret
pop
mov
add
push
mov
in
mov
in
push
sbb
xchg
mov
mov
fsub
sub
ror
(bad)
lods
cmc
or
mov
dec
push
xor
(bad)
retf
xlat
daa
mov
pop
xchg
fdivr
sbb
test
xchg
cld
pop
sti
xor
dec
nop
jmp
jg
mov
cmc
pop
aaa
out
fsubr
repnz
add
adc
loope
add
scas
cs
jae
add
jmp
(bad)
in
fwait
ins
mov
fnsave
scas
pop
movs
jnp
xchg
inc
add
clc
add
pop
jge
ret
jp
xchg
(bad)
test
push
fsubrp
out
js
mov
and
adc
cmp
aam
adc
jge
in
jle
push
pop
push
(bad)
or
call
pop
push
aas
lock
or
mov
cmp
sub
pop
sbb
repz
jmp
addr16
pop
shl
pushf
js
hlt
inc
mov
lea
in
dec
add
outs
or
(bad)
neg
ja
shl
mov
fisubr
aam
imul
cmp
mov
mov
cs
ss
mov
cmp
mov
xor
call
push
aam
jo
inc
jp
leave
push
xchg
push
inc
dec
add
adc
sbb
aas
ins
cmp
enter
shl
adc
pusha
mov
shl
adc
shl
adc
shl
adc
add
(bad)
(bad)
xor
rol
stos
jle
repnz
jp
shr
mov
je
aas
imul
jg
jge
add
das
inc
jecxz
ds
sub
jg
and
inc
inc
pusha
mov
jl
pop
ins
inc
shr
in
clc
(bad)
inc
daa
inc
inc
or
and
xchg
pop
jl
shr
sub
pop
in
mov
xor
ret
xlat
sub
scas
or
mov
shl
dec
shl
mov
aas
ins
jg
inc
fcomp
push
xlat
pop
icebp
out
push
pop
adc
cmp
(bad)
aaa
mov
and
adc
pextrw
sbb
or
(bad)
jg
jae
or
sub
clc
mov
(bad)
loopne
scas
jno
test
(bad)
not
dec
(bad)
cld
test
loop
add
sbb
mov
inc
popf
cld
pop
sbb
popw
jno
call
cmps
(bad)
fistp
add
dec
mov
or
cli
adc
cmp
sar
push
(bad)
icebp
or
pop
daa
ins
stos
cli
pushf
push
rcl
aas
fisttp
dec
lock
jg
push
sub
pop
add
retf
test
jg
jecxz
imul
dec
loopne
(bad)
(bad)
cli
fmul
in
or
xchg
inc
(bad)
inc
scas
mov
loope
mov
add
retf
js
sti
ds
push
aas
add
inc
(bad)
sbb
out
out
inc
xchg
enter
aad
clc
and
inc
sti
or
xchg
mov
mov
cdq
mov
jg
sub
psubq
dec
cld
xchg
mov
iret
pop
out
pop
cmp
ss
inc
lock
ins
pusha
adc
in
div
lds
lahf
fisubr
loopne
sti
cli
iret
(bad)
xchg
sub
sahf
rol
pop
lock
cmp
popa
mov
jbe
aam
hlt
or
clc
repz
and
scas
xor
push
adc
hlt
push
aam
fcomp
adc
mov
add
std
imul
lahf
adc
add
arpl
add
ins
pop
pop
cld
adc
ret
inc
scas
retf
jg
add
pushf
jg
pop
cld
jne
push
ss
jg
imul
aam
cwde
outs
outs
out
mov
sub
arpl
xchg
push
jno
inc
jp
cld
adc
inc
pop
sbb
mov
(bad)
pop
xor
test
gs
std
popf
cmp
scas
fsubr
sahf
push
lea
shl
(bad)
add
ins
sbb
sbb
add
mov
clc
test
cmp
xlat
mov
das
cmp
xor
(bad)
sub
lahf
clc
sub
in
xchg
loop
fcomip
in
inc
movs
jmp
shl
push
test
inc
sar
daa
dec
aam
retf
lods
jb
out
in
daa
jecxz
sbb
mov
xchg
hlt
sbb
sar
rcr
jg
icebp
sahf
(bad)
call
dec
ja
inc
inc
arpl
sub
lods
add
push
mov
leave
aas
hlt
push
scas
lods
mov
clc
and
aas
add
fwait
stc
push
sub
jg
inc
out
je
push
daa
sbb
out
gs
dec
jle
jmp
lds
movs
cmps
js
sbb
(bad)
neg
or
in
xor
ds
movs
inc
push
xchg
sub
push
xchg
push
movs
xor
imul
or
pop
popa
cld
jno
arpl
pop
pop
jmp
ja
ss
fcom
xchg
push
into
cmp
pop
pop
repnz
(bad)
lahf
sbb
add
fneni(8087
mov
outs
scas
popa
pop
mov
xlat
mov
jl
sbb
jae
jecxz
repnz
mov
cmps
lods
ins
inc
sahf
mov
imul
push
cmp
jecxz
or
(bad)
cli
in
ss
ins
mov
jmp
and
adc
pop
sahf
pop
lock
scas
mov
clc
mov
or
push
add
push
pop
xchg
test
dec
jnp
mov
sbb
xor
mov
pop
mov
pop
dec
lock
test
stos
fwait
pop
jle
mov
mov
ds
adc
(bad)
jb
mov
pop
or
repnz
hlt
cmp
inc
jnp
push
fdiv
aas
clc
and
cld
mov
adc
add
repnz
add
mov
add
mov
hlt
mov
movs
xchg
lock
mov
inc
sub
pop
jle
cmps
fnsave
(bad)
out
aas
adc
add
repnz
add
mov
ins
pop
fcom
loop
mov
aam
ins
and
adc
sub
stos
test
cld
daa
scas
jle
pop
aaa
in
sub
add
jecxz
inc
ins
aas
stc
xor
outs
(bad)
mov
jmp
pop
inc
scas
sbb
push
cmp
adc
add
cmp
pop
or
cld
cdq
outs
mov
add
ja
call
psllq
dec
pop
test
inc
rcl
sub
and
add
lock
bound
fiadd
fld
in
sahf
(bad)
pop
push
xchg
mov
add
int3
cmp
inc
pusha
mov
jl
clc
cmp
idiv
cld
pop
cmps
sub
push
push
nop
daa
and
add
aam
jae
push
inc
outs
retf
call
(bad)
lock
dec
nop
leave
sub
mov
cld
lea
xlat
mov
inc
mov
inc
in
xchg
and
add
xor
jecxz
test
pop
adc
test
ror
adc
mov
fbstp
inc
sbb
inc
outs
pop
cs
and
data16
icebp
ja
cld
lds
test
xchg
(bad)
addr16
xor
in
enter
into
mov
sti
out
add
adc
push
loopne
retf
pop
(bad)
into
test
pop
fldenv
ss
pushf
jns
rcl
pop
mov
out
mov
fidiv
xchg
inc
inc
lods
data16
lahf
repnz
mov
lods
inc
hlt
xchg
mov
popa
(bad)
sbb
inc
aam
xor
xchg
dec
mov
dec
push
add
adc
stos
pop
mov
hlt
add
(bad)
std
movs
sub
shl
scas
fxch
and
fst
shl
mul
aas
add
loopne
inc
fmul
inc
shl
inc
shl
inc
or
inc
fistp
ret
fisttp
fist
ds
neg
ja
cmp
ins
push
(bad)
pop
outs
sbb
jl
icebp
scas
cdq
ins
sti
pop
jl
lock
repnz
adc
or
sub
and
push
mov
jne
outs
ja
stos
ins
aas
les
pop
retf
mov
push
dec
add
std
nop
mov
jecxz
(bad)
std
addr16
mov
push
mov
daa
lea
sub
xor
sbb
or
lds
shl
imul
or
aas
xchg
(bad)
push
aaa
sar
cld
outs
std
mov
lahf
dec
mov
push
xchg
nop
inc
or
and
adc
addr16
lahf
mov
in
ins
jecxz
add
lea
inc
loope
or
add
pop
xor
dec
repz
sbb
sub
popa
in
inc
jmp
das
test
mov
cmp
inc
movs
push
into
sbb
xor
arpl
popf
mov
inc
add
das
adc
add
int3
(bad)
es
xor
add
addr16
dec
sbb
arpl
test
loop
sub
sar
iret
inc
add
icebp
xlat
ret
outs
sub
pushf
xchg
cmp
scas
test
arpl
mov
cmp
mov
add
movs
mov
imul
and
imul
pop
lahf
cmps
fisubr
or
add
fbld
jmp
imul
inc
jle
jmp
xchg
jno
add
pop
icebp
setno
je
rcr
xor
std
cld
(bad)
xlat
dec
cmp
jno
mov
add
xchg
mov
retf
(bad)
adc
sahf
inc
in
arpl
movs
aad
repnz
xchg
inc
into
cmps
cmp
(bad)
mov
and
jmp
xchg
cmp
iret
popa
lods
and
and
add
pop
mov
fisttp
pop
call
cmps
adc
push
pop
retf
and
in
fidivr
iret
clc
dec
aas
imul
push
pop
ins
sti
gs
dec
cmp
xlat
ficom
pop
addr16
jmpw
and
xor
pop
lock
int
jmp
sbb
or
sbb
dec
std
xor
sbb
jmp
leave
out
out
inc
jge
inc
inc
dec
pop
add
add
pop
aas
in
mov
sub
add
ins
xchg
cli
ins
movs
cld
xor
int3
clc
leave
scas
clc
out
in
(bad)
popa
aam
fistp
pop
stc
js
test
push
fstp
sbb
or
neg
daa
xchg
dec
shl
fldenv
data16
fild
pop
les
cmp
fdiv
jecxz
les
jbe
add
add
inc
mov
sbb
xor
imul
int
sahf
ss
ret
mov
fs
jb
cmp
aas
jbe
pop
clc
push
loopne
(bad)
loope
pop
fiadd
movs
outs
jmp
push
push
mov
sbb
xor
repnz
clc
es
mov
push
aaa
rep
icebp
push
stos
and
jmp
mov
mov
adc
jp
mov
out
mov
inc
push
cmp
xchg
retf
in
cmp
lods
fbstp
pushf
outs
cld
adc
ret
mov
inc
imul
shl
(bad)
lahf
cmps
jmp
sub
out
lds
jecxz
rcr
call
push
test
jno
sahf
lods
mov
mov
sub
jg
dec
pusha
inc
pop
adc
add
je
push
retf
xchg
mov
dec
xor
cmp
shl
mov
std
sahf
jle
clc
stos
jecxz
xchg
push
mov
ret
test
sbb
push
and
pushf
arpl
retf
pop
sbb
cld
adc
repnz
add
push
fisubr
jmp
retf
nop
jp
aad
inc
pop
aas
imul
mov
sub
fcomp
adc
xchg
arpl
stos
dec
retf
stos
inc
scas
jle
repz
xchg
les
stc
pop
loope
jle
mov
in
pop
sub
push
inc
stos
mov
mov
pop
bound
test
fwait
sti
(bad)
out
pop
inc
shl
aad
lahf
pop
mov
(bad)
sub
xchg
mov
call
mov
xor
push
lea
push
xor
cld
or
pop
mov
ds
sar
mov
pop
cmc
mov
outs
sbb
push
clc
push
loop
add
mov
fisub
push
jbe
and
(bad)
jbe
movs
jl
icebp
out
ret
clc
jae
iret
(bad)
pop
pop
cld
inc
imul
inc
sbb
fidivr
xchg
and
inc
daa
sbb
sbb
lds
ss
mov
dec
imul
mov
rcr
xor
jecxz
sbb
add
ret
sbb
push
mov
jg
pop
ret
js
iret
dec
(bad)
neg
int
stos
pop
movs
div
leave
xor
mov
mov
fadd
ss
pop
loop
pop
lock
cld
addr16
ret
outs
xchg
leave
mov
fwait
adc
jne
ss
mov
xor
sbb
pop
mov
pop
jmp
mov
scas
lds
pop
lds
outs
sbb
mov
sete
and
adc
idiv
and
mov
or
std
stos
and
shl
sub
rcr
mov
(bad)
jne
bnd
pop
(bad)
pop
pop
and
test
fdivr
dec
sub
ins
mov
inc
dec
mov
mov
push
mov
ror
ror
inc
jnp
fist
dec
(bad)
fmul
sub
push
sub
push
sub
push
sub
daa
inc
add
cmp
scas
cmp
out
xchg
(bad)
inc
cmp
sar
add
dec
psubw
out
add
mov
stos
mov
push
test
shr
and
lds
push
das
es
mov
fcomp
arpl
test
mov
loop
mov
dec
(bad)
push
fistp
sub
mov
pop
jg
push
and
sub
(bad)
cmp
jle
pop
loope
xor
enter
cmc
lods
dec
sbb
mov
jge
(bad)
sti
lds
aad
sti
stos
push
sub
sbb
jae
xchg
js
pushf
mov
mov
jl
hlt
clc
jg
fisttp
dec
cmps
les
aaa
xor
mov
(bad)
neg
adc
mov
inc
sar
into
add
jge
out
and
mov
cmps
test
cmp
jl
clc
mov
inc
xlat
mov
xor
(bad)
leave
adc
pop
xor
pop
repz
clc
mov
mov
aas
adc
movs
cmp
(bad)
in
dec
in
repnz
out
in
loop
sub
and
cmp
dec
dec
mov
xor
dec
dec
out
cmp
icebp
stos
loop
xor
cmp
jecxz
imul
cmp
mov
out
sbb
jp
push
scas
dec
ins
sbb
dec
xor
jecxz
mov
pop
les
cmc
(bad)
mov
jmp
popf
cmp
xchg
clc
stc
mov
add
in
jns
retf
inc
rcl
jmp
dec
and
(bad)
xor
pop
jno
inc
dec
repz
(bad)
aad
pop
in
mov
pop
mov
lea
mov
aam
dec
and
dec
scas
rol
pop
push
cmp
lock
loop
ret
aad
cmp
sub
shr
adc
out
popf
mov
cmps
test
popf
out
cmp
push
and
pop
mov
ds
pop
aad
push
dec
das
outs
in
gs
test
dec
add
adc
pop
les
xchg
cli
jg
mov
sar
rol
fnsave
repnz
or
push
sub
sub
xchg
mov
sar
leave
loop
loop
inc
(bad)
adc
into
jle
pop
mov
xlat
cmp
stos
jle
clc
movs
jecxz
add
mov
fidivr
xor
mov
jecxz
adc
lea
(bad)
mov
jl
loope
hlt
pop
pop
loop
lods
ins
movs
mov
xchg
mov
sub
cmps
shl
pop
push
jg
stos
loop
jp
pop
(bad)
cmc
sbb
int
imul
push
and
aaa
test
test
inc
fimul
adc
jg
imul
call
sub
retf
mov
mov
sbb
fwait
sti
inc
pop
aad
xor
push
aam
pop
leave
cmp
and
aad
mov
xor
aad
daa
je
es
js
loop
mov
(bad)
pop
clc
dec
lds
xchg
and
adc
push
shl
add
lods
jle
lahf
sbb
cmps
les
fldcw
jne
loopne
std
sub
inc
adc
adc
cmp
jecxz
lds
call
aas
icebp
add
cmp
dec
pop
sbb
jmp
and
jmp
or
cmps
(bad)
mov
std
and
jnp
scas
frstor
iret
inc
sbb
setge
jl
icebp
jle
test
mov
sar
cmovno
lds
aas
push
xchg
std
fwait
jno
adc
mov
adc
dec
mov
mul
adc
sbb
fdivr
fnstcw
les
lahf
jecxz
pop
jmp
imul
sbb
aaa
xor
jle
js
ret
repz
adc
jmp
mov
cli
inc
adc
xor
xchg
iret
dec
add
inc
mov
pusha
out
fild
sysexit
sbb
or
aaa
mov
pop
pop
retf
cmp
sahf
mov
js
neg
inc
fwait
inc
icebp
jg
sub
scas
mov
call
sbb
inc
adc
sbb
jl
clc
pop
movs
dec
cmps
js
(bad)
sbb
int
or
mov
sbb
movs
lock
inc
mov
mov
pop
jmp
cmp
or
retf
inc
(bad)
cmp
or
pusha
ins
mov
sar
(bad)
jg
inc
cld
fs
pop
aam
pop
(bad)
and
mov
int
aad
movs
xchg
aam
ficom
sbb
add
add
pop
ret
(bad)
push
clc
sar
ret
jmp
mov
aam
out
add
fiadd
sahf
sub
or
(bad)
clc
iret
mul
bswap
mov
cmc
imul
aaa
pop
jl
cmp
jbe
sbb
mov
cld
jno
scas
(bad)
out
pop
or
push
lock
ror
ret
or
ins
mov
inc
out
xchg
mov
cmc
jge
loop
xchg
mov
fsubr
mov
repz
adc
add
(bad)
cmps
cld
adc
mov
mov
sbb
fsubrp
cmp
inc
mov
adc
stc
fnsave
mov
into
js
into
ret
lea
cld
pop
jecxz
addr16
les
stos
jmp
jo
lock
add
xchg
push
nop
je
or
pop
shr
cdq
dec
mov
js
and
mov
call
in
lods
push
sub
repnz
in
jae
xlat
jg
pop
mov
and
das
mov
dec
dec
outs
jne
inc
enter
add
sbb
scas
arpl
sbb
sbb
cmps
jae
imul
mov
dec
push
in
fsub
les
fnsave
ret
out
jae
sti
dec
jl
mov
(bad)
daa
xor
movs
pop
sbb
add
sbb
mov
dec
test
outs
xchg
ret
aam
or
mov
test
fwait
sbb
jno
pushf
outs
es
shl
cs
mov
mov
(bad)
fstp
loop
(bad)
repnz
mov
sub
bound
repnz
scas
out
repnz
fdiv
dec
arpl
ins
cmp
test
(bad)
ss
jecxz
adc
cmp
xchg
push
lock
mov
ins
sti
inc
test
ss
ins
jo
fmul
inc
cld
popa
clc
stos
movs
mov
loop
push
jmp
and
and
inc
add
retf
out
rcl
jg
(bad)
push
jmp
shl
retf
mov
add
loope
mov
lods
inc
mov
mov
jmp
cmps
stos
imul
mov
add
cld
or
rol
fwait
ret
ds
cmp
in
jp
test
outs
lods
call
sub
ret
aaa
and
pop
or
dec
(bad)
fisubr
lock
mov
cmp
cmps
js
push
mov
adc
fimul
or
outs
sbb
iret
xor
jnp
jbe
jbe
pop
sbb
inc
icebp
mov
jl
loop
push
les
ja
aas
mov
call
jmp
imul
lea
sar
jmp
imul
mov
push
add
pop
inc
in
add
mov
ss
adc
cmp
shr
jp
test
das
sahf
not
dec
iret
cmp
std
in
std
jae
pop
mov
in
jne
(bad)
fild
mov
in
fst
mov
push
out
push
lods
pusha
out
je
not
repz
int
jns
out
scas
daa
jb
and
movs
cwde
repnz
mov
inc
fcmovbe
xor
inc
mov
cmp
adc
imul
shl
lea
pusha
or
cmc
cmps
ins
lods
adc
xchg
dec
les
shl
mov
ins
mov
push
sub
mov
add
sar
dec
sti
rcr
inc
movs
aaa
adc
das
dec
jmp
fistp
stos
mov
ds
in
inc
dec
inc
je
fwait
xchg
push
push
rol
in
push
mov
pusha
mov
pop
cs
inc
dec
inc
push
or
and
push
mov
pusha
mov
pop
cs
inc
dec
inc
push
or
and
push
mov
pusha
mov
pop
cs
inc
dec
inc
push
or
and
push
mov
pusha
mov
pop
cs
inc
dec
inc
push
or
and
push
mov
pusha
mov
pop
cs
inc
dec
inc
push
or
and
push
mov
pusha
mov
pop
cs
inc
dec
inc
push
or
and
push
mov
pusha
mov
pop
cs
inc
dec
inc
push
or
and
rcr
shl
ss
sub
or
ror
cs
sbb
imul
push
ins
mov
jecxz
shl
add
movs
fild
sub
and
inc
ficom
add
lahf
inc
push
or
cmp
add
add
idiv
nop
fcom
adc
jecxz
dec
out
sar
inc
movs
aaa
adc
jp
loopne
in
jmp
ds
int3
gs
sub
xchg
push
call
mov
clc
mov
clc
mov
clc
mov
clc
mov
clc
mov
clc
mov
clc
mov
clc
mov
clc
mov
clc
mov
clc
mov
clc
mov
clc
mov
clc
mov
clc
mov
clc
mov
clc
mov
clc
mov
clc
mov
clc
mov
clc
mov
clc
mov
mov
gs
sub
xchg
push
call
mov
mov
gs
sub
xchg
push
call
mov
mov
gs
sub
xchg
push
call
mov
mov
gs
inc
add
inc
xchg
mov
jg
or
inc
inc
sar
in
mov
(bad)
inc
jno
(bad)
(bad)
adc
sbb
xchg
repz
fidiv
shr
lods
mov
mov
data16
aas
fldcw
mov
lea
lahf
or
pop
fs
stos
jno
mov
or
rol
mov
loop
jle
mov
jecxz
daa
std
mov
(bad)
repz
into
mov
jae
xchg
test
ds
adc
stos
test
mov
(bad)
and
outs
rcl
mov
cmp
add
inc
dec
jecxz
add
sub
adc
not
pop
xchg
inc
aaa
(bad)
addr16
icebp
jne
aas
rcr
inc
ret
imul
mov
ret
inc
cld
pop
(bad)
inc
les
add
and
add
inc
lock
pop
inc
adc
push
dec
sti
aas
or
add
cli
aad
out
(bad)
loope
mov
pop
loope
add
or
inc
loop
inc
xchg
lock
adc
inc
clc
das
(bad)
inc
mov
aas
or
add
cli
aad
out
(bad)
loope
mov
pop
loope
add
or
inc
loop
inc
xchg
lock
adc
inc
clc
das
(bad)
inc
mov
add
test
inc
ret
mov
cmps
fsub
mov
fwait
xchg
scas
pop
int3
movs
arpl
cdq
outs
dec
sub
scas
fst
xor
xchg
and
pop
lock
push
inc
mov
inc
add
adc
ret
imul
mov
ret
inc
cld
pop
(bad)
inc
les
lods
jle
mov
loope
cmovno
sbb
fdiv
mov
out
ret
or
stc
retf
aam
call
ret
js
inc
lock
mov
add
leave
and
test
adc
das
data16
shl
inc
or
sbb
ds
or
iret
pop
adc
stc
mov
xchg
out
push
or
push
repz
aas
loope
mov
pop
loope
add
or
inc
loop
inc
xchg
lock
adc
inc
clc
das
(bad)
inc
mov
aad
sub
cmp
(bad)
mov
pop
fwait
ins
ss
adc
and
loop
bound
ret
imul
cmp
mov
dec
jmp
mov
xor
push
inc
dec
ins
ror
mov
stos
addr16
pop
mov
push
pushf
xchg
mov
mov
aad
cmp
mov
lahf
mov
ja
cld
jbe
out
inc
loope
mov
pop
loope
add
or
inc
loop
inc
xchg
lock
adc
inc
clc
das
(bad)
inc
mov
out
xchg
and
clc
addr16
sbb
(bad)
sar
inc
out
repnz
xor
jge
xor
jl
jge
pop
aam
xchg
sti
push
mov
(bad)
jg
fisub
les
stc
cmp
jge
pop
fnstenv
jo
test
mov
xor
popf
mov
lods
cmp
movs
xor
cmps
loopne
jbe
scas
mov
loope
mov
pop
loope
add
or
inc
loop
inc
xchg
lock
adc
inc
clc
das
(bad)
inc
mov
iret
paddb
sbb
aam
pop
int
push
ss
lods
cmps
push
bound
push
jmp
out
idiv
dec
loop
mov
gs
adc
test
sbb
jecxz
jmp
push
cs
adc
sbb
imul
xchg
and
jge
ret
test
xchg
ins
(bad)
sub
std
adc
fcomip
fcmovu
push
inc
mov
inc
add
adc
ret
imul
mov
ret
inc
cld
pop
(bad)
inc
les
mov
icebp
sbb
call
mov
xchg
or
and
add
sti
adc
out
mov
or
pop
daa
(bad)
xchg
(bad)
lods
xor
mul
mov
push
lds
add
rcr
ss
jnp
pop
inc
lds
fmul
sub
repnz
push
push
xchg
(bad)
cmp
mov
call
(bad)
xchg
bnd
sbb
cld
ss
mov
inc
sar
pop
lock
push
inc
mov
inc
add
adc
cs
jg
addr16
cmp
push
mov
mov
loop
sbb
aas
aaa
(bad)
addr16
cmc
stos
retf
in
jle
aam
add
fcmovu
push
inc
mov
inc
add
adc
ret
imul
mov
ret
inc
cld
pop
(bad)
inc
les
loopne
fcom
rcl
add
(bad)
mov
fnsave
xchg
adc
lock
inc
cmps
adc
jecxz
jno
mov
aad
sbb
jmp
jl
jg
jmp
lea
stos
addr16
mov
add
xchg
sub
pushf
xor
rcl
cmp
aad
dec
call
sub
aaa
imul
add
cwde
fisubr
dec
ins
fisttp
jae
(bad)
sbb
fcomip
inc
(bad)
pop
inc
loopne
aas
(bad)
and
jg
pop
clc
jg
add
mov
sar
clc
cmps
(bad)
ficomp
loop
inc
or
lahf
dec
jnp
adc
repz
fldenv
arpl
out
pop
sbb
pop
fpatan
loop
(bad)
std
xor
outs
loop
add
sub
pop
pop
loopne
mov
adc
pushf
mov
lds
(bad)
cmps
push
mov
lea
push
push
fsub
pop
repz
push
sub
push
mov
fimul
mov
mov
ficomp
inc
mov
inc
add
adc
ret
imul
mov
ret
inc
cld
pop
(bad)
inc
les
lock
popa
inc
test
loop
mov
stos
clc
jp
dec
mov
push
xchg
push
les
push
add
cli
xlat
sub
xor
jp
pop
and
pop
dec
loopne
and
int
pop
cdq
mov
add
daa
jbe
or
mov
push
int3
in
stos
rcl
test
ds
call
xchg
pop
call
inc
xchg
lock
adc
inc
clc
das
(bad)
inc
mov
fcomip
inc
(bad)
pop
inc
loopne
aas
(bad)
and
scas
ret
inc
push
je
adc
mov
(bad)
adc
bound
inc
(bad)
call
add
addr16
inc
loop
jmp
(bad)
fdivr
or
fwait
mov
dec
cmp
cmps
xchg
xlat
jb
popa
push
popf
es
fdiv
rcr
popf
or
dec
dec
mov
lea
shl
lahf
lock
push
inc
mov
inc
add
adc
ret
imul
mov
ret
inc
cld
pop
(bad)
inc
les
clc
outs
neg
mov
lods
jmp
dec
cdq
cmp
movs
xchg
push
xchg
inc
sbb
pop
cmp
clc
or
push
fisub
xchg
outs
scas
je
inc
pop
mov
jmp
push
pop
sbb
push
stc
push
aam
push
rcl
cmc
mov
faddp
fsubr
sub
in
ficomp
jecxz
neg
imul
jnp
mov
ret
inc
cld
pop
(bad)
inc
les
add
and
add
inc
lock
pop
inc
adc
gs
push
mov
ffreep
pop
jb
xlat
push
imul
(bad)
pusha
xchg
and
and
cmc
adc
ds
clc
dec
sbb
daa
shr
outs
dec
bound
jbe
lea
out
jmp
std
pop
inc
xor
(bad)
sub
xor
jb
sub
dec
enter
ins
outs
movq
pop
clc
jg
add
mov
loope
mov
pop
loope
add
or
inc
loop
sub
push
std
cdq
cld
cmp
out
jne
inc
push
mov
dec
mov
jecxz
rcl
shr
mov
ret
adc
jecxz
lock
mov
aas
push
pop
fistp
xlat
shld
sbb
(bad)
repz
out
aaa
sbb
arpl
cmp
iret
lahf
push
xchg
test
gs
sbb
jmp
ins
cmp
cmp
movs
mov
sti
mov
fcmovu
push
inc
mov
inc
add
adc
ret
imul
mov
ret
inc
cld
pop
(bad)
inc
les
jmp
out
adc
js
ret
xchg
neg
pop
shr
out
lods
cmp
in
iret
push
or
test
pop
or
push
fidiv
in
leave
icebp
aaa
pop
aad
sbb
xor
jmp
call
jbe
movs
mov
xchg
add
enter
xchg
jne
push
fwait
test
stos
retf
pushf
jbe
mov
jmp
inc
std
(bad)
push
mov
mov
inc
sar
pop
lock
push
inc
mov
inc
add
adc
xchg
jl
loop
mov
mov
mov
int
pop
ins
imul
xor
fsub
or
mov
push
xor
cmp
mov
pop
lods
out
push
xor
dec
movs
or
add
xchg
cmc
adc
repz
sbb
adc
mov
mov
mov
outs
lock
movs
mov
lods
lods
test
jmp
cmps
jmp
repz
ret
fcomip
inc
(bad)
pop
inc
loopne
aas
(bad)
and
jg
pop
clc
jg
add
mov
bound
aaa
bnd
cld
into
pop
lods
push
(bad)
outs
enter
sbb
fcomip
inc
(bad)
pop
inc
loopne
aas
(bad)
and
jg
pop
clc
jg
add
mov
bound
leave
clc
mov
(bad)
outs
enter
sbb
fcomip
inc
(bad)
pop
inc
loopne
aas
(bad)
and
jg
pop
clc
jg
add
mov
bound
leave
clc
mov
(bad)
outs
enter
sbb
fcomip
inc
(bad)
pop
inc
loopne
aas
(bad)
and
or
jl
lahf
add
jno
sti
enter
cld
or
mov
lahf
mov
add
cli
aad
out
(bad)
scas
je
push
cld
adc
lods
in
jne
cmp
pop
adc
clc
popa
icebp
push
(bad)
(bad)
pop
jmp
sub
jle
leave
inc
shr
aam
arpl
stc
mov
clc
mov
cmc
lahf
cld
adc
dec
(bad)
std
sub
hlt
add
leave
neg
jmp
sub
leave
std
idiv
test
shl
shl
ins
sbb
push
add
shl
ins
sbb
push
add
shl
ins
sbb
push
add
shl
ins
sbb
push
add
shl
ins
sbb
push
add
shl
ins
jge
inc
add
sbb
scas
mov
(bad)
inc
jno
cmp
dec
iret
stc
cmp
(bad)
nop
fcom
mov
jge
mov
in
sbb
in
mov
pop
(bad)
jecxz
std
mov
(bad)
repz
stc
cmp
jecxz
jecxz
std
mov
repz
retf
jle
int3
mov
rol
inc
jge
repz
adc
add
push
add
jle
mov
sub
call
mov
mov
call
not
cli
sub
fbld
inc
xchg
test
scas
xor
or
jae
test
push
ins
push
sar
mov
popa
inc
adc
fst
out
mov
test
inc
loop
(bad)
test
jmp
xor
icebp
repnz
jg
nop
inc
aas
in
sub
std
in
iret
push
lea
ret
add
clc
fdivrp
add
leave
mov
mov
lock
xchg
cmp
stos
popf
dec
es
jle
retf
pop
sub
jg
jl
stc
mov
inc
dec
cmp
push
icebp
pop
les
lock
pop
mov
imul
lea
jecxz
pop
sahf
jno
cmp
xor
mov
in
movs
or
outs
out
and
es
jmp
ja
addr16
or
stos
retf
lods
pop
iret
movs
mov
fldenv
jge
movs
int3
cli
movs
pop
sbb
push
mov
sub
pop
mov
adc
test
adc
sar
mov
mov
mov
jmp
(bad)
popf
loope
push
inc
mov
jge
test
mov
in
pop
fwait
retf
inc
add
add
shr
mov
sti
ret
aam
adc
pop
call
test
jo
or
adc
cmp
cmp
hlt
stos
movs
loope
push
inc
(bad)
iret
add
mov
repnz
jb
pop
outs
mov
int
mov
std
push
mov
gs
jge
scas
(bad)
cld
popf
adc
add
pusha
scas
(bad)
(bad)
dec
ffreep
inc
cli
(bad)
xlat
jg
push
scas
fwait
data16
mov
jcxz
cld
and
(bad)
sahf
outs
neg
pop
cmp
mov
pop
sbb
jge
mov
jle
push
fimul
pop
cld
aas
mov
cmp
(bad)
push
and
dec
sbb
xchg
(bad)
dec
js
lsl
loop
dec
or
mov
jne
fwait
jb
(bad)
dec
je
repz
out
std
gs
pop
je
mov
jl
fdivr
sub
sub
sbb
lods
shl
xor
pop
in
mov
add
xchg
fisubr
dec
jae
(bad)
rol
mov
add
jns
cmp
iret
mov
push
ret
sahf
aaa
std
mov
cld
push
lock
sar
cmp
out
paddusb
inc
test
xchg
retf
test
pop
xchg
mov
rcr
loopne
lahf
in
outs
clc
push
neg
in
pop
fidivr
outs
outs
sub
arpl
in
(bad)
fstp
inc
push
daa
ret
popf
or
pusha
stc
std
jmp
xchg
jno
lahf
aas
ret
mov
fwait
popa
adc
mov
mov
inc
iret
aas
adc
scas
mov
lea
mov
jl
fstp
mov
fisttp
and
(bad)
xor
jle
lahf
mov
fcmove
mov
sbb
add
shl
mov
xor
push
iret
cmp
inc
aas
xor
cs
or
(bad)
lods
pusha
call
ins
and
fnstsw
loope
in
rcr
std
mov
pusha
xchg
les
pop
xor
push
adc
dec
jg
and
xor
(bad)
sahf
sub
(bad)
cmp
xor
das
js
and
je
sub
push
xchg
and
xlat
push
js
or
or
inc
push
xchg
outs
cld
mov
(bad)
je
pop
xchg
mov
js
(bad)
cmps
rol
mov
in
dec
movs
aam
push
inc
mov
dec
xor
cmp
loopne
push
fcmovnb
push
sub
pop
cdq
xor
not
mov
jnp
(bad)
xor
call
sbb
test
loop
arpl
lds
push
mov
mov
sbb
pop
repnz
push
shl
not
std
cmc
mov
das
(bad)
adc
lock
jge
dec
imul
in
test
push
pop
or
clc
xchg
pop
in
sbb
out
je
fwait
ret
loope
mov
je
test
test
lock
jle
xor
or
hlt
pop
adc
retf
mov
cmp
dec
push
test
(bad)
xchg
xchg
arpl
ins
push
icebp
mov
sbb
mov
jbe
adc
sub
mov
jle
aam
lds
push
loopne
sub
add
pop
fxtract
ficom
retf
push
mov
mov
dec
imul
adc
fdivr
sar
fwait
lods
ins
lods
mov
xor
inc
mov
neg
dec
std
and
out
or
lds
mov
add
data16
mov
fmul
xchg
cmc
xor
mov
cld
popa
test
ret
lahf
clc
dec
outs
inc
out
std
test
push
fdivr
daa
ja
into
js
mov
jg
jg
and
loope
cmps
cmp
fmul
mov
enter
pop
xchg
mov
ss
mov
add
out
xchg
push
inc
cmps
(bad)
cmps
and
stos
sbb
test
in
mov
icebp
ins
mov
loope
mov
jnp
cs
mov
icebp
das
lea
(bad)
push
adc
clc
imul
sub
push
sbb
fwait
sti
jns
fadd
lock
sti
and
sbb
mov
and
dec
fisubr
std
mov
fisttp
test
ret
push
faddp
ds
adc
jae
outs
bound
mov
push
cwde
stos
mov
(bad)
lahf
or
dec
loopne
inc
ret
aad
outs
and
xor
inc
mov
stc
idiv
cmc
sbb
mov
loope
ds
aaa
adc
stc
int3
jb
inc
xchg
pop
popa
int
dec
cmp
dec
jmp
jge
fstp
stc
pop
inc
push
int3
jo
ret
jmp
pop
cs
shl
lock
mov
jmp
(bad)
add
mov
mov
icebp
xor
mov
push
cmps
xor
scas
jbe
and
pop
(bad)
mov
add
clc
fnstsw
pop
mov
add
dec
movs
fcomip
out
mov
jnp
or
retf
jl
ja
dec
aad
std
scas
(bad)
aad
cmp
loope
lock
iret
mov
sub
jg
outs
stc
ficomp
push
cmp
(bad)
mov
icebp
daa
xchg
icebp
movs
pop
out
ja
ror
lea
lds
xor
sahf
sbb
ret
rol
stos
adc
fcmovnbe
pop
jne
out
mov
movs
clc
pop
pop
lock
shr
cli
jbe
adc
mov
and
or
add
or
icebp
pop
out
sti
ss
jns
dec
ja
mov
popf
xchg
popa
enter
cwde
jl
sti
jns
mov
inc
loopne
xor
sub
cmp
mov
xor
adc
sbb
sbb
add
movq
dec
ret
icebp
mov
push
les
cs
xchg
leave
adc
add
jge
imul
test
cs
popa
push
adc
cmp
push
sti
cli
int3
push
stos
cdq
and
in
imul
loope
pop
dec
lahf
dec
fbld
mov
mov
hlt
jg
mov
dec
mul
pop
mov
movs
movs
movs
imul
imul
inc
xlat
or
mov
dec
jl
and
pop
inc
pop
pop
(bad)
jg
jmp
test
jmp
movs
ret
cs
lods
and
mov
movs
cwde
xchg
lahf
mov
int
xlat
lock
not
xchg
pop
mov
xor
pop
xchg
retf
retf
adc
cmp
mov
inc
test
clc
jnp
lock
push
ret
stos
and
rol
fcmovnb
(bad)
xchg
jbe
out
jmp
retf
ret
dec
rol
(bad)
push
mov
sub
cli
mov
into
xchg
popa
sbb
ror
mov
repnz
loope
sti
not
retf
sahf
jecxz
add
inc
xchg
dec
(bad)
jns
test
hlt
push
lods
out
(bad)
daa
(bad)
(bad)
push
int
pop
or
inc
mov
dec
mov
test
jno
cs
fild
dec
stc
mov
mov
push
(bad)
adc
xchg
pop
xor
fbld
imul
jmp
pop
inc
add
push
daa
icebp
push
scas
inc
or
add
xlat
div
in
pop
cmp
ins
cmc
mov
ja
jecxz
xchg
sbb
fwait
les
sub
fdivr
mov
iret
imul
cmp
sub
dec
cld
aaa
out
jmp
ds
pop
scas
mov
cld
or
(bad)
int
js
pop
mov
sbb
xor
jns
sar
jle
mov
movs
popf
inc
xchg
mov
and
sub
ror
jmp
jb
sbb
jnp
lea
mov
div
mov
ret
jg
dec
jns
pop
std
mov
sti
push
and
sub
fistp
ja
xchg
in
cmp
clc
das
pop
lock
ds
(bad)
mov
add
inc
jne
rcl
sbb
pop
sbb
xor
mov
loopne
mov
and
cmp
stc
outs
imul
int
repz
in
ja
cli
cld
shl
fstcw
dec
std
cmps
cld
adc
dec
push
imul
ss
jecxz
push
js
dec
les
or
(bad)
push
mov
jno
sti
inc
imul
xchg
inc
add
retf
adc
in
pusha
rol
xor
jnp
xlat
mov
idiv
mov
sar
ds
cmp
int3
ret
in
or
jo
xor
pop
jecxz
pop
pop
adc
imul
popa
cmp
jl
repnz
popf
outs
or
or
pop
sbb
sbb
test
daa
iret
mov
mov
mov
mov
movs
daa
pop
dec
sub
retf
mov
push
mov
adc
scas
outs
cmp
sbb
xchg
fstp
fist
mov
out
jns
adc
pop
aam
retf
push
inc
add
adc
inc
pop
dec
inc
sar
in
fdivr
push
sti
inc
inc
adc
mov
xlat
aad
lock
out
stc
neg
test
inc
rol
outs
test
loop
call
cld
adc
cmp
pop
jb
or
adc
sbb
ins
cmps
push
inc
sub
adc
sbb
ins
cmps
push
inc
sub
adc
sbb
ins
cmps
push
inc
sub
adc
sbb
ins
cmps
push
inc
sub
adc
sbb
ins
cmps
push
inc
sub
adc
sbb
hlt
aas
cld
adc
arpl
mov
jg
or
inc
inc
sar
in
cld
or
add
cli
inc
jno
xlat
(bad)
out
cmps
call
push
out
sub
mov
sub
pop
clc
adc
cwde
mov
mov
scas
xchg
je
push
in
inc
push
cmps
and
push
dec
push
push
push
jnp
dec
fisub
dec
mov
(bad)
loope
mov
stos
retf
repz
inc
or
ret
out
sti
push
mov
hlt
adc
inc
xchg
iret
pop
psubb
cld
dec
jl
inc
inc
test
mov
loop
jecxz
lahf
clc
ret
inc
stc
cld
icebp
idiv
repz
inc
adc
popa
inc
cld
(bad)
js
(bad)
stc
(bad)
inc
mov
push
(bad)
jle
out
adc
out
xor
add
jg
jge
add
add
sar
add
jg
add
sahf
inc
mov
imul
sub
test
test
add
jg
jge
add
add
sar
add
jg
add
sahf
inc
mov
imul
sub
test
test
add
jg
jge
add
add
sar
add
jg
add
sahf
inc
mov
imul
sub
test
test
add
jg
jge
add
add
sar
add
jg
add
sahf
inc
mov
imul
sub
test
test
add
jg
jge
add
add
sar
add
jg
add
sahf
inc
mov
imul
sub
test
test
add
jg
jge
add
add
sar
add
jg
add
sahf
inc
mov
imul
sub
test
test
add
jg
jge
add
add
sar
add
jg
add
sahf
inc
mov
imul
sub
test
test
add
jg
jge
add
add
sar
add
jg
add
sahf
inc
mov
imul
sub
test
test
add
jg
jge
add
add
sar
add
jg
add
sahf
inc
mov
imul
sub
test
test
add
jg
jge
add
add
sar
add
jg
add
sahf
inc
mov
imul
sub
test
test
add
jg
jge
add
add
sar
add
jg
add
sahf
inc
mov
imul
sub
test
test
add
jg
jge
add
add
sar
add
jg
add
sahf
inc
mov
imul
sub
test
test
add
jg
jge
add
add
sar
add
jg
add
sahf
inc
mov
imul
sub
test
test
add
jg
jge
add
add
sar
add
jg
add
sahf
inc
mov
imul
sub
test
test
add
jg
jge
add
add
sar
add
jg
add
sahf
inc
mov
imul
sub
test
test
add
jg
jge
add
add
sar
add
jg
add
sahf
inc
mov
imul
sub
test
test
add
jg
jge
add
add
sar
add
jg
add
sahf
inc
mov
imul
sub
test
test
add
jg
jge
add
add
sar
add
jg
add
sahf
inc
mov
imul
sub
test
test
add
jg
jge
add
add
sar
add
jg
add
sahf
inc
mov
imul
sub
test
test
add
jg
jge
add
add
sar
add
jg
add
sahf
inc
mov
imul
sub
test
test
add
jg
jge
add
add
sar
idiv
mov
out
cld
push
xlat
fstp
jno
fucomp
cld
aas
into
mov
lahf
repz
js
pop
enter
inc
sti
pop
js
sar
jg
xchg
lahf
adc
stc
fiadd
pop
popa
aas
out
nop
cmp
and
repnz
pop
dec
sub
mov
adc
inc
pop
test
mov
mov
sub
sub
sub
sub
sub
or
mov
sub
sub
sub
or
mov
xchg
cmp
in
mov
(bad)
inc
jno
cmp
rcr
mov
cld
popf
mov
jg
sti
inc
dec
outs
sub
jmp
xor
jg
je
mov
mov
movs
ret
cwde
sub
mov
out
mov
mov
repz
mov
loop
imul
dec
adc
cwde
movs
inc
jge
jnp
pop
loopne
ror
sub
xor
and
mov
inc
bound
outs
jg
push
cmp
add
iret
in
test
add
(bad)
ds
jecxz
add
leave
push
xchg
xchg
jecxz
xlat
jnp
in
popf
movs
and
test
xchg
jg
das
stc
div
mul
pop
clc
rcr
cld
jge
(bad)
(bad)
xor
cmps
inc
ds
or
(bad)
neg
test
lahf
jg
jle
inc
lea
std
nop
mov
pushf
jg
inc
xor
add
fdivr
jge
leave
mov
(bad)
pop
std
nop
mov
pushf
jg
inc
jg
das
stc
div
mul
pop
clc
ror
aas
stc
imul
mov
jns
ins
adc
das
stc
div
mul
pop
clc
rcr
cld
jge
(bad)
(bad)
xor
dec
(bad)
jge
out
or
stc
xchg
fidivr
jge
lahf
(bad)
(bad)
jge
jge
(bad)
(bad)
xor
test
lahf
jg
jle
inc
lea
inc
lahf
jb
xor
neg
test
lahf
jg
jle
inc
lea
std
nop
mov
pushf
jg
inc
xor
add
fdivr
jge
leave
mov
(bad)
pop
std
nop
mov
pushf
jg
pop
mov
or
aas
xchg
js
neg
rcl
stos
and
mov
jb
stos
xor
add
lds
push
(bad)
jecxz
dec
mov
sub
adc
pop
adc
adc
jae
ja
xlat
mov
push
clc
data16
mov
xor
(bad)
and
dec
fdivr
add
cmps
dec
daa
add
pop
sti
jno
cmp
nop
jmp
jne
lods
inc
repnz
xor
cmp
xchg
push
idiv
sub
xchg
outs
repnz
fwait
mov
dec
adc
iret
fld
mov
mov
add
push
inc
or
mov
adc
aam
movs
mov
or
stc
cmp
addr16
mov
(bad)
(bad)
sub
inc
test
sub
pop
icebp
aaa
dec
in
add
push
movs
mov
or
stc
cmp
addr16
mov
(bad)
(bad)
sub
inc
test
sub
pop
icebp
aaa
dec
in
add
push
movs
mov
or
stc
cmp
addr16
mov
(bad)
(bad)
sub
inc
test
sub
pop
icebp
aaa
dec
in
add
push
movs
mov
or
stc
cmp
addr16
mov
(bad)
(bad)
sub
inc
test
sub
pop
icebp
aaa
dec
in
add
push
movs
mov
or
stc
cmp
addr16
mov
(bad)
(bad)
sub
inc
test
sub
pop
icebp
aaa
dec
in
add
push
movs
mov
or
stc
cmp
addr16
mov
(bad)
(bad)
sub
inc
test
sub
pop
icebp
aaa
dec
in
add
push
movs
mov
or
stc
cmp
addr16
mov
(bad)
(bad)
sub
inc
test
sub
pop
icebp
aaa
dec
in
add
push
movs
mov
or
stc
cmp
addr16
mov
(bad)
(bad)
sub
lock
or
call
ss
jbe
das
retf
adc
into
call
lea
mov
fidiv
pop
inc
dec
das
mov
xchg
icebp
(bad)
loopne
mov
das
pop
dec
scas
sub
stos
pop
mov
imul
stc
xchg
mov
xor
adc
(bad)
xchg
xchg
call
push
jae
adc
inc
jae
adc
inc
jae
adc
inc
jae
adc
inc
jae
adc
inc
jae
adc
inc
jae
adc
inc
jae
adc
inc
jae
adc
inc
jae
adc
add
fs
push
outs
ret
dec
mov
shr
and
sti
scas
adc
jmp
loop
cmp
addr16
jae
adc
enter
mov
aam
sbb
cmps
in
pop
fidiv
push
push
dec
out
xchg
sbb
inc
pop
sbb
inc
adc
sbb
inc
adc
sbb
pop
inc
jle
lahf
bnd
push
inc
mov
std
and
aas
pusha
dec
stc
cmp
add
idiv
nop
iret
pop
clc
(bad)
loopne
sar
inc
xchg
in
(bad)
aam
jmp
sbb
scas
retf
sbb
adc
imul
rcr
fist
cmps
cmp
sub
ins
ja
sbb
dec
loope
and
or
sar
js
add
leave
fdivr
ss
add
out
jmp
xchg
std
in
dec
add
loop
adc
jp
mov
fmul
jae
lods
jb
fisttp
push
movs
sti
in
cmc
xor
cli
adc
push
inc
lea
pop
sar
add
cld
and
mov
inc
push
es
imul
and
pop
inc
jmp
mov
loopne
cli
out
frndint
jno
popf
sbb
jge
lock
in
cmc
repnz
sub
fwait
cdq
cmp
or
inc
fldcw
adc
push
clc
xor
sub
loopne
mov
loop
or
mov
mov
cmp
pop
inc
mov
addr16
ret
push
pop
out
pop
repz
cmp
das
cld
cmp
xlat
jne
fwait
sbb
dec
in
popa
jae
xchg
xchg
bswap
mov
fwait
add
cmp
push
cld
pop
mov
add
dec
dec
jns
addr16
mov
vpmuludq
jg
and
add
inc
cld
and
push
cmp
les
stc
fidivr
mov
pushf
lahf
push
sar
lods
test
xchg
xchg
fcmovu
mov
outs
std
call
clc
mov
jl
lock
pop
(bad)
sbb
dec
xchg
dec
cmp
inc
in
mov
dec
push
aad
adc
push
adc
in
adc
aas
mov
lea
shl
mov
imul
inc
daa
xchg
mov
or
(bad)
rcr
in
dec
in
jg
std
pop
dec
pop
xor
in
ins
sbb
inc
jns
mov
mov
call
inc
clc
fbstp
imul
stc
push
outs
into
pushf
jae
icebp
jb
daa
jg
pop
imul
cmp
es
xor
xchg
pop
sbb
scas
pop
jl
pop
dec
mov
cs
xchg
(bad)
push
call
pop
add
cmp
push
clc
(bad)
or
scas
(bad)
jp
arpl
push
xchg
lds
adc
sbb
popa
jl
icebp
outs
xor
jecxz
dec
add
ds
lods
das
je
js
dec
out
xchg
in
lods
in
out
or
out
(bad)
jns
ins
icebp
mov
loope
xchg
push
adc
imul
in
test
(bad)
dec
cmp
sahf
and
push
lahf
mov
mov
test
pushf
sahf
mov
ss
cs
mov
lods
int
call
xor
cmp
(bad)
push
push
cmp
(bad)
sub
fwait
das
fmul
ret
add
pop
icebp
push
(bad)
loop
adc
fcmovnu
pop
retf
sub
imul
push
leave
in
popa
out
rcl
pusha
loopne
mov
jp
lds
push
clc
int3
inc
xor
add
test
scas
lods
jg
jmp
daa
inc
xor
cmp
pop
jno
push
leave
dec
aas
xor
sbb
test
lods
or
stos
scas
pop
ja
ret
rol
push
add
push
mov
inc
call
jp
frstor
shl
add
inc
pusha
ja
ret
mov
stc
jmp
xchg
movs
lock
std
jne
inc
rcr
xchg
push
scas
xchg
mov
lds
movs
lds
and
pop
fldenv
nop
aas
inc
pop
sbb
clc
(bad)
inc
and
not
mov
pop
in
icebp
pop
and
sbb
(bad)
mov
sbb
scas
lods
loop
adc
retf
and
jge
pop
add
xchg
stos
out
cli
push
push
inc
xchg
jns
jg
ds
(bad)
xchg
dec
pop
xor
dec
mov
aas
jp
leave
pop
jge
adc
jg
mov
and
idiv
add
and
jns
(bad)
xlat
sub
fidiv
test
fcmovnbe
and
or
add
jl
not
xchg
adc
sbb
lods
xchg
(bad)
fisttp
test
sub
xor
push
mov
fs
push
sti
sub
push
lock
in
sbb
aaa
inc
clc
imul
ror
push
add
retf
pushf
(bad)
and
fsincos
mov
inc
in
inc
enter
clc
pop
loopne
push
cld
cmp
mov
int
(bad)
pop
sub
sub
jnp
xor
fwait
rol
add
mov
inc
push
pop
(bad)
out
xchg
in
xlat
dec
push
test
mov
test
mov
jmp
je
mov
xchg
ss
out
jo
sbb
cmp
lds
dec
js
add
fnstsw
lods
pop
call
rcr
(bad)
and
mov
sub
jle
test
sahf
and
xor
adc
fwait
retf
cmp
movs
sub
and
mov
sahf
jge
iret
jle
js
dec
clc
pop
sti
sbb
fisub
loopne
jecxz
shr
cmps
popf
loope
inc
cmp
xchg
push
xor
xchg
loopne
mov
mov
clc
xor
pop
ret
jg
cmp
loop
ja
shl
mov
inc
or
mov
and
cmp
fcom
pop
mov
pop
add
mov
push
jecxz
ja
xor
pushf
sub
int3
punpckldq
xor
mul
(bad)
pop
mov
mov
jbe
jmp
mov
dec
leave
xchg
push
inc
add
aad
sbb
sti
mov
sti
dec
js
sar
dec
sbb
neg
cmp
cmp
mov
cmp
mov
imul
repz
or
addr16
mov
aaa
cld
push
lock
xchg
aam
or
out
cmp
lods
cmp
(bad)
dec
cmp
in
jne
or
lods
scas
or
sbb
(bad)
mov
jae
lock
stos
imul
pop
jbe
push
push
pop
or
loop
and
jecxz
xor
iret
adc
xchg
pop
icebp
lods
stos
fcmovu
fdivr
push
sub
jmp
les
ret
arpl
out
nop
sub
(bad)
sbb
std
test
sti
cmp
jecxz
push
or
scas
adc
pop
xchg
addr16
mov
das
sub
add
ins
mov
mov
cmp
jb
pop
mov
mov
movs
cmp
and
lahf
xor
scas
fld
inc
lock
test
cmps
les
mov
push
xchg
adc
mov
popa
pop
leave
sub
adc
in
or
in
mov
jl
lock
lods
lods
add
les
sbb
and
cmp
out
or
movs
sahf
cmp
pusha
mov
mov
sbb
icebp
adc
aad
(bad)
lods
in
aaa
dec
xchg
jno
lea
pop
dec
xlat
xor
(bad)
xchg
sbb
push
lods
fucomi
push
xor
and
jns
mov
push
ins
call
add
cmp
in
xor
push
pop
js
lds
inc
icebp
pop
mov
and
imul
fcmovne
or
adc
enter
jnp
scas
jl
clc
inc
jecxz
xchg
push
mov
stos
js
loope
(bad)
mov
xor
addr16
fwait
div
iret
aam
clc
mov
iret
ret
mov
push
sahf
std
lods
mov
popw
push
and
test
sbb
js
hlt
mov
aaa
inc
(bad)
lea
scas
dec
jl
(bad)
xchg
push
jle
js
loope
mov
loop
hlt
sub
test
fiadd
vpminub
pusha
(bad)
leave
add
mov
(bad)
pop
or
push
lock
push
mov
lds
inc
outs
and
and
fmul
cmp
mov
jbe
das
adc
jae
sub
sub
jmp
jae
not
pop
aaa
pop
inc
sar
cld
dec
jae
pop
jl
cmps
clc
mov
pop
(bad)
ficomp
rcr
loopne
sahf
or
ds
xchg
cmp
inc
pop
imul
mov
fdiv
stos
outs
mov
cs
lahf
xor
mov
pop
add
aas
cmp
ror
mov
sbb
xor
in
imul
bound
pop
mov
into
xor
and
xor
jnp
js
dec
mov
lock
xor
iret
sub
in
test
and
je
dec
inc
pop
jecxz
push
fisubr
cmp
and
push
mov
lods
lds
loope
ficom
bound
push
and
push
movs
sub
aad
jecxz
mov
xchg
popf
xlat
cld
add
fcmovnb
fild
jle
js
pop
aad
fisttp
ret
mov
mov
jno
cs
add
jbe
jno
(bad)
mov
xchg
dec
icebp
push
xchg
jns
jmp
sbb
cmp
les
cmc
add
addr16
xchg
icebp
dec
mov
pop
mov
mov
push
pop
xchg
ret
push
jo
shl
and
add
inc
(bad)
and
push
xor
mov
sar
mov
mov
sbb
out
and
lods
pop
inc
mov
xlat
xlat
int
mov
es
xor
mov
mov
xchg
aaa
jb
and
xchg
dec
mov
ja
fisub
jp
sbb
jecxz
jp
jl
mov
mov
es
mov
(bad)
xchg
inc
pop
xor
and
cli
imul
fwait
push
popa
pop
dec
mov
movs
mov
inc
ficomp
mov
dec
mov
movs
mov
inc
ficomp
mov
dec
mov
movs
mov
inc
ficomp
mov
dec
mov
movs
mov
inc
ficomp
mov
dec
mov
cmps
pusha
sahf
xchg
imul
mov
push
or
gs
push
jns
imul
and
addr16
ins
mov
es
sub
nop
jo
js
lea
inc
pop
leave
popa
pop
push
xor
xor
icebp
scas
xlat
dec
lock
aam
and
and
inc
mov
repnz
lods
fs
retf
fstp
sti
mov
jbe
xor
pop
xchg
push
add
in
rcl
mov
jnp
push
xchg
ja
ds
mov
sbb
jbe
or
jb
add
ja
pop
movs
imul
repz
xlat
adc
(bad)
and
leave
repz
sti
cmps
stos
fucomip
scas
bound
xor
add
ret
aad
push
rcr
add
jne
gs
scas
adc
cmp
stos
movs
mov
les
push
pop
cli
sub
mov
fidivr
inc
cmp
stc
mov
rol
je
int
daa
push
sub
ret
out
mov
mov
sub
fwait
mov
jno
popa
or
fwait
push
or
add
imul
jg
idiv
nop
iret
pop
ds
rcr
lahf
cmp
inc
std
int3
std
pop
in
dec
(bad)
repnz
cli
mov
adc
enter
clc
daa
movs
test
mov
xchg
adc
push
call
leave
arpl
outs
scas
xchg
loope
(bad)
jne
test
cmp
cmp
movs
mov
cli
pop
retf
mov
nop
push
sbb
std
xchg
push
retf
lods
imul
sub
test
adc
xchg
ins
ret
dec
pop
test
(bad)
in
sbb
pop
add
mov
pop
test
scas
stos
aaa
lea
and
push
movs
test
cmp
daa
pop
jl
xchg
inc
lea
xchg
xor
jmp
and
aas
call
add
sar
add
pop
jae
ds
addr16
aam
mov
mov
jg
or
std
sub
out
in
add
lods
push
call
dec
jns
cmp
or
sub
add
inc
add
jmp
push
add
add
sar
add
mov
paddd
cmps
inc
pop
pop
(bad)
lds
push
xchg
aaa
cmp
shl
jbe
inc
rcr
das
(bad)
das
add
fbstp
jnp
cmp
mov
push
ss
xchg
dec
aam
sahf
pop
mov
enter
pushf
jl
lahf
jp
loop
add
dec
add
es
push
sub
inc
jge
pop
shr
out
sub
js
mov
push
xor
jecxz
jl
inc
or
mov
paddd
cmps
inc
pop
inc
cld
xor
mov
add
sar
push
lahf
cld
pop
jns
mov
push
cld
mov
dec
dec
pop
fwait
stos
outs
jge
jns
inc
loope
cld
cs
dec
lock
xchg
ins
push
aad
or
xchg
fcmovne
out
ja
push
repnz
repnz
cmp
inc
clc
or
in
icebp
ja
cli
xchg
pop
push
xchg
dec
aad
fidivr
out
sbb
in
fwait
cmp
ss
xchg
aam
int3
lahf
lock
das
std
pop
aas
add
jp
icebp
je
ret
adc
hlt
pop
cld
add
inc
(bad)
ret
loopne
pop
pop
push
out
lods
mov
sti
adc
loop
dec
inc
outs
jge
inc
mov
jnp
mov
mov
test
mov
xchg
hlt
fst
mov
adc
cmp
mov
jl
scas
clc
dec
loop
aas
adc
mov
mov
jg
inc
cmp
mov
inc
pop
daa
out
xchg
leave
daa
repz
ja
sbb
out
das
cld
cmovg
cs
clc
bound
cmp
mov
jnp
jnp
fnsave
push
dec
loopne
ror
cmp
mul
pop
clc
icebp
loop
adc
inc
lahf
dec
mov
add
xchg
lds
inc
scas
or
in
shl
scas
lods
aas
addr16
jg
pop
adc
sbb
jbe
aaa
pop
dec
hlt
retf
popf
inc
sub
pop
sahf
cmp
add
pusha
les
adc
sbb
std
pop
aas
add
add
jp
icebp
je
ret
adc
hlt
pop
cld
add
add
xlat
jne
cwde
dec
mov
dec
sahf
retf
cli
jl
push
pushf
mov
xchg
push
mov
cli
cs
inc
shl
add
call
sar
call
add
sar
add
mov
jae
pop
scas
outs
enter
jmp
push
mov
out
movs
lock
xchg
test
mov
ja
jge
push
mov
call
cli
cs
inc
shl
add
jmp
jne
xchg
fild
pop
imul
loop
mov
(bad)
adc
or
or
out
add
cld
jp
nop
xor
jbe
icebp
je
rcl
fstp
cmps
mov
dec
adc
mov
stos
jecxz
jecxz
icebp
fisttp
mov
push
inc
and
or
aam
push
dec
retf
jae
mov
outs
jg
sahf
pop
push
mov
cmp
fisubr
jbe
mov
das
out
out
idiv
xchg
mov
add
xor
jmp
gs
in
mov
or
cmp
stos
jmp
fild
cld
inc
lock
cs
clc
lds
faddp
aad
sar
das
rcl
ret
repz
stos
mov
dec
mov
pop
dec
sbb
arpl
das
sbb
sar
xor
pop
cmp
imul
aad
mov
addr16
outs
sbb
inc
mov
push
xchg
or
call
and
stc
push
call
pushf
adc
clc
lahf
dec
inc
cmp
shl
mov
sbb
push
scas
sub
cmp
loope
in
mov
scas
loopne
mov
loope
lock
jl
call
sahf
push
push
icebp
mov
mov
aam
xchg
push
xchg
fmulp
xlat
int3
out
lea
and
idiv
jp
cmps
cmp
icebp
push
les
(bad)
imul
jl
imul
fmul
xchg
je
fidivr
aas
lock
or
mov
mov
jno
mov
aas
adc
fisub
lock
jp
(bad)
mov
data16
sub
inc
mov
push
clc
xlat
and
clc
xchg
mov
clc
dec
push
lahf
fisubr
add
test
inc
unpckhps
sub
test
daa
push
stos
mov
fidivr
in
cmps
ja
icebp
mov
and
ds
cli
lea
mov
jnp
ss
xor
repnz
in
push
dec
ret
out
jo
nop
inc
push
ds
jl
clc
jae
mul
xchg
xchg
pop
mov
jns
fs
xchg
dec
fxch
adc
arpl
add
xchg
aam
cmp
int
cld
adc
loop
xchg
retf
sub
add
shl
aad
push
pop
mov
mov
shl
js
ret
sbb
ins
push
inc
dec
cmc
iret
xchg
pop
retf
push
and
mov
push
xor
mov
cld
psrlw
push
call
cmp
test
ss
pop
push
pop
lods
lds
and
cs
sbb
xchg
ret
mov
mov
xor
pop
movs
cli
aad
(bad)
not
idiv
xchg
mov
cmp
jae
sub
inc
add
clc
lahf
jne
cdq
aaa
mov
sub
add
shl
shr
mov
adc
jle
dec
in
hlt
pop
push
inc
sbb
sahf
cmp
icebp
aad
pop
mov
cmp
mov
sti
dec
xor
add
adc
test
sahf
sbb
lods
sti
cs
mov
adc
mov
push
cmp
push
in
mov
jle
jecxz
dec
shl
and
aas
pop
dec
inc
clc
aad
imul
mov
clc
xchg
ret
daa
sub
mov
ret
call
xchg
je
jg
push
sub
dec
jne
pop
fs
ins
xlat
sub
xor
jmp
mov
jle
nop
inc
movs
fs
or
fcomp
cmp
ret
scas
cld
xor
inc
or
jg
jle
mov
cmp
mov
dec
loope
mov
xchg
xchg
pop
pop
inc
arpl
es
pop
lock
lahf
mov
idiv
add
aas
clc
aad
jge
or
xchg
mov
ds
(bad)
data16
mov
in
sti
jle
fdivr
add
cmp
movs
push
adc
clc
or
shr
scas
dec
jns
adc
bound
into
cmp
mov
pop
sbb
cld
sbb
pop
cmps
jmp
mov
cmps
fild
pop
ins
in
daa
xchg
ds
jb
jb
mov
inc
inc
add
clc
cdq
or
and
and
call
adc
push
cmp
dec
loope
mul
jecxz
jle
sahf
push
jmp
lds
xchg
push
xor
pop
ja
pop
int
mov
mov
sti
iret
les
cld
inc
lock
jl
popa
mov
fs
cmp
mov
cs
push
(bad)
push
cmps
push
addr16
and
sar
add
jge
dec
mov
xchg
push
xchg
pop
pusha
nop
movs
mov
inc
and
xor
push
dec
in
js
mov
retf
imul
movs
sbb
mov
ror
xchg
in
mov
mov
cmps
mov
jno
inc
jecxz
xchg
mov
jmp
lods
mov
push
mov
call
loopne
rcr
ins
cmp
jge
cmps
cld
jb
jne
in
into
cmps
push
movs
jo
test
bound
push
jbe
dec
sbb
jp
pop
jg
adc
in
add
jecxz
mov
push
repz
sbb
lock
loop
mov
psadbw
movs
mov
adc
loop
pushf
ret
dec
loope
and
inc
popa
clc
mov
push
dec
stc
loop
sbb
pop
clc
aas
inc
rol
jae
mov
push
push
add
pop
push
dec
ds
sbb
scas
sub
mov
ja
xchg
arpl
push
cmp
imul
pop
shl
jle
sub
and
(bad)
sbb
mov
js
add
push
imul
cli
dec
test
rcr
ret
repnz
ja
dec
xor
fild
aam
imul
cwde
(bad)
loope
stc
pop
scas
xor
loope
aas
cmp
ss
push
stos
jae
dec
jle
jb
push
popa
fst
push
push
rcr
jb
sub
or
pop
mov
push
push
mov
pop
and
adc
enter
mov
inc
jmp
xor
xchg
test
push
ins
mov
gs
mov
test
mov
pop
nop
cmp
xor
pop
fs
sub
leave
adc
push
adc
stc
ds
mov
fmul
repz
adc
mov
iret
xchg
mov
cmps
sub
fwait
mov
ficom
jmp
xchg
test
jmp
(bad)
push
rcr
pop
sub
cmp
jg
push
aaa
dec
aad
jne
adc
push
pop
sub
repz
pop
mov
adc
xchg
add
mov
jecxz
pop
(bad)
dec
add
fcmovne
aas
pop
mov
jmp
cmps
mov
imul
sub
push
jo
push
pop
lods
dec
and
and
mov
mov
mov
mov
fisub
dec
xor
ds
mov
mov
mov
jmp
adc
repz
cmp
lds
push
shr
aad
stc
xchg
xor
aaa
mov
mov
jo
mov
mov
xchg
push
xlat
cmp
mov
adc
jmp
sub
cmp
(bad)
push
add
dec
lahf
cdq
dec
inc
rcl
fmul
jg
in
mov
mov
or
inc
leave
fdivr
(bad)
fistp
mov
(bad)
inc
add
repnz
pop
push
jl
inc
ds
xor
inc
mov
gs
sub
xchg
mov
int
cmps
push
inc
or
inc
or
inc
or
inc
or
inc
or
inc
or
add
cli
sub
xchg
mov
imul
out
pop
into
(bad)
in
std
jecxz
rcl
inc
or
aaa
mov
(bad)
out
inc
add
idiv
icebp
cld
call
popf
sub
sti
(bad)
repz
je
push
add
out
pop
into
(bad)
in
std
jecxz
rcl
inc
or
aaa
mov
(bad)
out
inc
add
idiv
icebp
cld
call
popf
sub
sti
(bad)
repz
je
push
add
out
pop
into
sub
xchg
jg
pop
sub
xchg
push
call
mov
mov
gs
sub
xchg
push
call
mov
mov
gs
sub
xchg
push
call
mov
adc
dec
scas
stos
adc
stos
mov
jecxz
push
aam
jge
and
dec
bound
and
mov
pop
jmp
mov
cwde
mov
in
dec
pushf
mov
not
nop
cmp
outs
push
or
popf
jmp
pop
xchg
mov
mov
pop
xchg
mov
sbb
fdiv
add
adc
cmp
scas
ins
cld
mov
jne
fidiv
jb
loope
rcl
cs
and
cld
mov
cdq
cmp
or
into
sub
jns
jns
mov
push
cmp
dec
gs
xor
push
mov
adc
sub
test
dec
outs
fsubrp
push
aam
add
or
push
jmp
es
ja
pop
call
call
adc
pop
mul
loopne
fimul
or
int
xchg
jne
mov
or
mov
outs
mov
jo
mov
out
lock
retf
in
jle
mov
call
mov
hlt
pop
in
ud0
daa
popa
loopne
sti
jge
add
sub
shr
pop
fsub
dec
sar
idiv
inc
movs
push
xlat
ss
clc
adc
jg
lods
das
loop
aad
pop
inc
adc
dec
int
mov
push
pop
ret
jp
mov
call
push
(bad)
ret
ret
in
inc
sbb
sbb
jnp
pop
jge
sti
add
inc
jnp
dec
clc
jne
inc
out
fsubrp
push
cmp
cmc
xor
in
enter
push
into
(bad)
pop
lock
in
idiv
fsubr
xchg
movs
push
adc
imul
in
cmp
into
inc
add
xlat
pop
xchg
out
mov
leave
inc
test
sti
xor
adc
jg
outs
das
inc
sbb
push
out
(bad)
cmc
or
repnz
mov
pop
mov
xchg
push
outs
sbb
sub
xlat
in
(bad)
retf
push
hlt
inc
aad
lock
and
(bad)
dec
mov
ret
cdq
mov
clc
aaa
xchg
inc
mov
retf
out
adc
ds
mov
mov
xlat
movs
mov
dec
fwait
arpl
mov
mov
cmps
add
ds
xchg
xchg
cmova
(bad)
jg
imul
rcl
push
repnz
sbb
mul
add
loopne
pop
(bad)
cmp
cs
fstp
inc
cmp
in
jge
sti
ds
lock
mov
mov
xor
fsub
cmp
cmps
in
push
gs
adc
sbb
jle
fisubr
pop
cmp
icebp
jmp
sub
xchg
add
add
mov
ret
into
cmps
and
das
mov
stc
popf
dec
adc
outs
gs
dec
clc
pop
pop
mov
std
adc
repnz
icebp
fidivr
loope
jle
fcomip
inc
xor
inc
(bad)
imul
addr16
fcom
push
clc
addr16
daa
inc
(bad)
cmp
das
xchg
fsubr
xor
jns
adc
test
adc
inc
and
aas
gs
loop
in
jae
jg
clc
adc
cld
cmp
ja
xor
(bad)
aad
adc
or
xchg
arpl
or
cmp
cmp
bound
adc
mov
int
add
jmp
aas
clc
aaa
xchg
inc
mov
inc
or
mov
loopne
pop
(bad)
cmp
scas
fcom
sub
jne
aas
les
mov
mov
pop
dec
sti
movs
mov
add
jo
scas
mov
jg
dec
das
sbb
mov
jge
jmp
mov
jnp
push
movs
ja
jb
in
jns
fadd
adc
cmp
clc
xchg
cs
inc
jg
push
inc
test
sti
xor
adc
jg
outs
das
inc
sbb
aad
xor
dec
mov
iret
les
jp
ret
jmp
aad
and
and
push
push
fstp
and
push
aad
and
loopne
(bad)
lock
rcl
or
or
pop
pop
pop
pop
inc
and
xchg
fmul
sub
mov
jmp
bound
lds
cmp
mov
in
xchg
aas
loope
jle
fcomip
inc
xor
inc
(bad)
push
sti
xor
adc
jg
outs
das
inc
sbb
clc
push
mov
ja
js
add
shr
mov
out
pop
mov
push
inc
hlt
sbb
jo
jl
pop
xchg
mov
sub
dec
mov
inc
cdq
iret
push
mov
imul
loope
jle
fcomip
inc
xor
inc
(bad)
push
outs
loope
ret
sahf
push
(bad)
cld
inc
lock
fisub
shl
aam
xor
push
sub
xchg
(bad)
icebp
in
xor
sti
or
cmp
inc
loopne
add
outs
sub
ss
nop
jge
inc
aas
push
sub
inc
lea
push
cmps
daa
je
stos
ins
imul
dec
inc
imul
inc
outs
js
(bad)
sbb
mov
inc
sbb
adc
cmp
lods
mov
cld
test
pop
stos
xchg
hlt
jbe
sub
inc
add
mov
or
sub
adc
pop
or
mov
adc
ret
mov
add
mov
or
sub
adc
pop
or
mov
adc
ret
mov
add
mov
or
adc
retf
fwait
pop
xchg
ror
or
mov
retf
sbb
test
shrd
addr16
imul
fbld
cmps
iret
fdivr
or
adc
mov
mov
jmp
(bad)
cld
cli
adc
fs
cli
push
inc
or
cmp
mov
lea
(bad)
xchg
jmp
or
pop
dec
push
xchg
aas
inc
mov
sti
clc
adc
fsubr
(bad)
out
adc
clc
aam
js
pop
push
jmp
in
aaa
push
xor
jno
mov
ins
mov
xchg
pop
dec
mov
es
xchg
out
xor
add
dec
imul
sbb
sti
(bad)
or
ret
xor
pop
xchg
shr
into
ss
jbe
pop
call
lds
fwait
or
sbb
data16
outs
bound
ja
add
pop
xor
dec
dec
int3
loop
inc
inc
push
jae
lock
mov
fwait
cdq
pushf
addr16
sbb
ds
outs
out
xor
mov
fcom
ins
into
push
sbb
scas
call
xchg
ja
aam
ins
mov
repz
and
popa
xchg
xor
cdq
stos
cmc
idiv
cmp
pop
arpl
pushf
dec
aam
dec
dec
mov
jb
sub
psubusb
dec
rcr
sti
inc
movs
push
xlat
iret
cmc
hlt
pop
in
pop
inc
daa
pop
loopne
sti
jge
add
sub
lahf
adc
or
aas
enter
in
push
repz
adc
sub
add
(bad)
dec
arpl
add
aad
jge
pop
sti
add
imul
js
and
mov
sbb
repnz
pop
mov
xor
lds
jmp
inc
js
sub
mov
pop
push
fsubr
aad
out
or
mov
push
push
and
jnp
sahf
jo
xlat
pop
lock
int
sti
xor
cmc
std
xor
push
shl
das
stos
lods
xchg
cmp
xchg
mov
scas
dec
inc
adc
test
add
cld
das
loop
outs
in
fldcw
int
ja
mov
dec
test
mov
add
jecxz
push
jne
repz
fisttp
and
jle
jl
mov
add
mul
test
adc
inc
push
add
clc
lahf
or
enter
sbb
inc
xlat
int
jb
mov
in
xchg
lock
(bad)
aas
add
daa
push
xlat
xor
popa
cmps
fld
sbb
mov
jecxz
in
mov
jl
sti
push
cld
cmp
test
in
jl
clc
mov
mov
inc
jmp
cdq
ins
sub
inc
adc
sbb
mov
sub
sub
repz
(bad)
fs
cmps
mov
sub
jb
lods
icebp
repz
mov
push
iret
pop
enter
pop
aad
xchg
and
mov
sbb
loopne
mov
aad
ins
jg
mov
loop
scas
push
pop
inc
jnp
fcmovnu
sub
xchg
adc
add
cmp
and
(bad)
or
ins
jg
mov
jns
mov
cmp
imul
cmp
mov
sub
jnp
inc
sahf
push
js
es
push
mov
and
sti
xlat
cld
mov
sub
int3
mov
std
fistp
clc
inc
outs
fldcw
mov
mov
jno
push
cmp
fwait
div
sub
jnp
push
mov
dec
ds
lds
inc
std
test
add
jl
icebp
repz
(bad)
push
clc
ins
lock
fwait
les
dec
lock
mov
movs
cdq
xchg
add
bound
cmps
mov
and
mov
add
es
inc
icebp
pop
xchg
ds
div
shl
arpl
mov
scas
rcr
xchg
sbb
xchg
scas
stos
leave
fcmovne
mov
xchg
sub
ds
inc
adc
retf
shr
jecxz
add
inc
add
clc
push
ja
pusha
icebp
inc
mov
ins
hlt
jmp
add
mov
sar
(bad)
mov
xor
jae
shr
dec
je
mov
(bad)
pop
outs
popa
fdiv
sbb
fidiv
imul
mov
mov
xchg
lods
in
outs
mov
pop
popa
leave
leave
sbb
jae
in
stos
mov
push
jp
cmp
fnstenv
test
stos
imul
iret
cmp
scas
clc
lods
add
aaa
xchg
or
fld
fadd
push
movs
or
jbe
out
jmp
ret
stos
dec
mov
lock
jge
and
loopne
pop
mov
mov
jp
test
stos
jno
push
push
fldz
jns
cs
out
ret
mul
inc
xchg
mov
dec
inc
movs
repnz
xchg
mov
(bad)
mov
rcr
fstp
and
jns
dec
cmps
and
test
cmp
inc
clc
mov
inc
cwde
jl
inc
xchg
xchg
loop
sti
or
call
das
mov
xchg
push
cmp
sbb
jge
loop
fdiv
mov
repnz
test
pop
mov
push
call
hlt
push
add
cmps
rol
mov
mov
add
sub
push
add
cmps
rol
mov
mov
add
sub
push
add
cmps
rol
mov
mov
add
sub
push
add
cmps
rol
mov
mov
add
sub
push
add
cmps
rol
mov
scas
imul
aad
aad
lds
loop
mov
pop
add
jns
fdivr
add
add
mov
xor
js
push
popf
mov
int
cmp
xlat
rcr
mov
adc
int
int
dec
or
test
dec
pushf
lea
xchg
shl
hlt
clc
sbb
push
xor
(bad)
fidivr
cld
pop
add
mov
push
iret
xor
shl
test
mov
sub
or
dec
aam
add
aas
push
nop
sar
leave
cmp
jno
fidivr
pop
je
outs
test
sbb
cmp
out
push
xchg
hlt
imul
xchg
cmp
leave
sub
cdq
scas
pop
icebp
test
in
aaa
push
adc
lods
rcl
stc
aas
pop
lock
mov
mov
jne
pop
jbe
stos
jnp
loopne
cld
xor
lods
dec
(bad)
adc
repnz
mov
cld
dec
icebp
cmps
loop
retf
mov
bound
repnz
pushf
cmp
jne
or
pusha
aam
outs
inc
fsubr
jge
push
mov
mov
(bad)
mov
popf
sub
les
push
jno
hlt
(bad)
jb
mov
ins
out
cld
cmp
cmp
inc
pop
jns
xchg
lods
and
jne
xlat
push
outs
fdivr
xor
mov
ins
outs
js
fisubr
cmp
jnp
sbb
add
arpl
or
mov
gs
sti
add
clc
and
fistp
mov
sub
inc
fdiv
dec
rcr
sti
inc
movs
push
xlat
ss
adc
inc
clc
xchg
cmc
inc
adc
adc
inc
add
jmp
jmp
dec
mov
sub
xor
adc
loopne
pop
adc
shr
adc
pop
cmp
vpsllw
loop
lahf
test
mov
mov
fcmovu
dec
(bad)
call
loopne
push
mov
lock
add
add
push
jg
push
repnz
adc
xchg
adc
call
jg
repz
clc
or
pop
dec
fwait
inc
mov
aaa
std
sbb
pop
clc
sub
sub
lods
inc
aas
pop
fstp
repnz
xor
stc
lahf
push
jg
ss
push
inc
mov
add
push
inc
or
lock
mov
paddb
pop
das
rol
lods
inc
aas
pop
fstp
repnz
push
enter
mov
clc
or
pop
dec
fwait
inc
mov
aaa
std
sbb
pop
clc
sub
sub
pop
(bad)
jle
mov
inc
xchg
jle
out
inc
inc
or
lock
mov
paddb
inc
cld
xor
outs
cli
cmp
aas
lock
(bad)
push
jl
inc
push
retf
std
jg
jg
cmp
jg
cli
cmp
mov
aaa
std
sbb
pop
clc
sub
sub
fcomip
jo
jg
test
jle
cmp
(bad)
call
push
inc
inc
cdq
cmc
pop
cld
xor
outs
cli
cmp
aas
lock
(bad)
push
pop
lock
add
add
push
jg
push
repnz
adc
sub
repz
std
sar
add
out
cld
mov
inc
xor
psubb
sbb
jo
jg
test
jg
pop
loope
in
fneni(8087
lods
jae
clc
dec
test
cli
in
mov
icebp
dec
int3
es
loopne
mov
jecxz
jns
sub
test
dec
jp
test
mov
xchg
mov
cmp
push
pop
and
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
sahf
imul
ficom
shl
shl
mov
pop
lock
sub
dec
in
cli
xlat
push
cmp
adc
xchg
daa
cmc
mov
sar
ss
inc
jmp
loopne
dec
adc
je
adc
mov
jno
lahf
pop
cmc
lods
inc
les
xor
xchg
scas
into
in
iretw
aad
movs
sbb
jne
test
shr
(bad)
adc
(bad)
xchg
sbb
lods
sbb
aad
imul
loop
inc
pop
adc
jge
lods
outs
sbb
ins
loope
jbe
xor
push
mov
xchg
outs
push
mov
and
int3
pop
das
or
clc
das
imul
aas
cmps
movs
jnp
test
gs
fnstenv
pop
sbb
ins
ins
xor
call
(bad)
daa
cdq
test
sbb
mov
outs
and
push
xchg
out
mov
mov
fistp
aas
lods
jp
(bad)
in
jle
mov
mov
dec
js
int3
addr16
xor
mov
jmp
aam
leave
icebp
push
and
or
adc
adc
inc
add
inc
daa
push
loopne
sti
jge
add
sub
shr
pusha
inc
stc
cmp
out
(bad)
xchg
dec
pop
fsubr
repnz
mov
mov
ins
adc
mov
mov
(bad)
aas
fsincos
loope
clc
(bad)
icebp
jnp
mov
dec
leave
retf
fisttp
or
inc
cmps
dec
xor
stos
inc
mul
mov
mov
inc
repnz
test
scas
mov
xchg
js
ret
sbb
mov
popf
arpl
xchg
xchg
push
add
cmp
add
adc
inc
les
cld
pusha
std
mov
push
cmps
clc
mov
jl
mov
rcr
ss
cmp
lahf
cwde
xor
out
es
and
inc
jle
pop
adc
loop
adc
dec
mov
sti
inc
xchg
mov
mov
ins
scas
shld
bound
sbb
or
pop
repnz
jg
dec
jl
inc
or
loope
mov
cmp
dec
dec
daa
inc
loop
shl
clc
mov
and
xchg
(bad)
push
jmp
shr
jmp
sub
out
mov
and
(bad)
icebp
addr16
and
inc
clc
adc
ret
les
jnp
inc
fs
lods
test
xor
nop
sbb
and
dec
adc
mov
loope
mov
xchg
push
push
or
jl
inc
mov
adc
inc
les
add
iret
mov
push
aas
inc
adc
lock
sbb
repnz
inc
adc
mov
(bad)
neg
xlat
mov
push
lds
(bad)
push
mov
jno
and
sar
cli
shl
add
sub
pop
lock
outs
mov
dec
jl
inc
or
loope
mov
cmp
dec
dec
daa
inc
loop
dec
(bad)
sbb
jecxz
std
psubd
loop
push
test
shr
adc
adc
add
loop
add
mov
addr16
xor
ds
add
inc
inc
cld
inc
pop
lock
fist
add
pushf
clc
cmps
inc
add
adc
jg
cmps
ret
(bad)
test
dec
shr
imul
int3
rol
dec
jns
push
imul
jnp
mov
add
(bad)
adc
or
pop
sbb
cmps
sub
jp
loope
mov
add
pop
jno
fcomip
into
fist
add
pushf
clc
cmps
inc
add
adc
ret
cmp
add
adc
inc
les
cld
ss
(bad)
outs
cli
pop
cmc
dec
cld
xchg
add
sar
add
xchg
push
inc
and
add
xor
mov
inc
iret
lock
popf
mov
cmp
dec
dec
daa
inc
loop
inc
xchg
cmps
inc
inc
out
aas
clc
sub
das
clc
ins
outs
mov
hlt
aas
jmp
mov
aaa
std
psubd
loop
in
inc
ja
inc
and
mov
lock
fist
add
pushf
clc
cmps
inc
add
adc
movs
loope
inc
dec
or
out
mov
mov
daa
aad
add
rol
in
(bad)
icebp
cwde
sbb
add
jg
jg
aas
(bad)
es
xchg
test
gs
or
sbb
mov
hlt
cmp
outs
and
add
push
cmp
mov
scas
dec
dec
jne
scas
jp
jb
mov
jns
push
jge
inc
retf
push
out
out
xchg
scas
or
jecxz
cmps
ins
mov
push
mov
mov
mov
fild
ins
adc
mov
mov
fidiv
rcl
sbb
ins
sbb
lea
add
inc
fiadd
jecxz
cmps
ins
mov
push
mov
mov
mov
fild
ins
adc
mov
mov
fidiv
rcl
sbb
ins
sbb
lea
add
inc
fiadd
jecxz
cmps
ins
mov
push
mov
mov
mov
fild
ins
adc
mov
mov
iret
loope
hlt
sub
xor
adc
lea
cmp
scas
mov
lahf
ret
int
loop
mov
pop
sub
mov
mov
dec
lahf
ret
push
sbb
cs
dec
out
pusha
loop
cwde
cmc
cmp
mov
adc
retf
and
es
test
xor
mov
sbb
sub
test
cmp
or
(bad)
stos
mov
test
sbb
(bad)
daa
dec
sti
dec
cmp
add
(bad)
icebp
adc
clc
jge
out
cmps
jnp
loope
ins
or
cmp
and
pop
add
inc
jmp
std
clc
and
lods
cs
mov
sub
push
mov
sub
cwde
mov
aad
jge
inc
js
pop
ret
aam
ucomiss
or
shl
(bad)
sbb
cmps
mov
or
adc
mov
push
mov
cmp
pop
pop
mov
std
lds
pop
scas
cmps
lds
movs
jb
bound
adc
mov
mov
mov
mov
pop
mov
cld
xor
xchg
cmps
xchg
dec
push
aas
cwde
fs
jno
rcr
pop
cmp
in
pushf
movs
shl
scas
mov
outs
outs
mov
cmp
adc
scas
cmp
xchg
mov
pusha
in
in
int
cld
dec
lock
fidiv
mov
cli
pusha
jecxz
scas
and
xchg
shl
(bad)
aad
adc
shld
lds
leave
mov
jae
shl
jge
aas
je
popa
aad
test
fistp
les
or
daa
mov
aad
inc
push
mov
ja
scas
mov
jbe
xor
mov
sbb
clc
sub
(bad)
mov
jecxz
(bad)
(bad)
es
fistp
psubw
scas
add
add
out
(bad)
xchg
dec
pop
or
sbb
stos
jl
inc
outs
mov
loop
fucomp
jg
inc
pop
out
arpl
pop
mov
or
mov
test
add
popf
jns
sti
hlt
imul
cli
aas
test
add
mov
out
mov
ja
call
lds
jge
cmps
mov
push
jg
clc
cdq
(bad)
out
popf
cld
out
imul
ds
jge
jge
inc
add
loop
mov
out
imul
mov
push
pop
lahf
in
scas
je
or
addr16
sti
(bad)
(bad)
sub
push
or
psubsw
ds
(bad)
inc
stc
mov
repz
push
shl
jmp
or
jnp
and
jns
mov
nop
inc
and
jb
rol
sub
xor
add
mov
and
cli
out
inc
mov
std
out
pop
sub
bnd
mov
(bad)
aas
mov
pushf
push
push
sub
cld
das
arpl
enter
and
ins
cwde
sub
mov
inc
daa
and
lahf
xchg
add
jmp
xchg
push
hlt
mov
mov
scas
jbe
fidivr
(bad)
fwait
loope
iret
ret
js
loope
mul
scas
adc
cs
and
inc
cs
stc
sbb
cmp
sbb
arpl
mov
cmps
les
cli
jle
jae
fcmove
cmps
iret
cmp
dec
and
xor
ficomp
in
leave
cmp
call
aam
scas
mov
jge
mov
test
inc
div
or
and
test
dec
and
neg
les
inc
not
lock
inc
push
dec
sub
dec
scas
sti
sbb
jne
jecxz
aas
loopne
inc
push
xor
pop
push
repz
test
fstp
inc
(bad)
mul
mov
xor
rol
pop
pop
xchg
cmp
clc
cmp
jecxz
lock
mov
and
push
popa
(bad)
shl
fadd
adc
sbb
cmp
(bad)
jg
gs
jle
(bad)
fcomp
bnd
sub
pop
cli
dec
outs
pop
xchg
lods
push
scas
sub
scas
lods
mov
jo
jecxz
imul
xor
mov
lock
(bad)
pop
sbb
cmp
inc
pop
jbe
pop
retf
(bad)
clc
adc
test
imul
sbb
mov
cld
cmp
mov
icebp
push
ret
xchg
in
imul
jecxz
iret
add
stc
ja
cmp
test
adc
icebp
and
sbb
cs
and
pop
cmp
lock
das
jg
movs
cli
push
mov
pop
dec
lods
lods
clc
pop
cmc
ds
pop
sti
or
mov
clc
cmp
xor
fimul
lds
inc
mov
add
xchg
xchg
rcl
cmp
pusha
mov
clc
mov
call
mov
inc
sub
cmp
inc
mov
mov
push
xchg
pushf
add
sub
lods
ficom
clc
dec
lock
pop
aas
inc
shl
dec
shr
xchg
pop
push
fld
add
add
arpl
aaa
mov
std
lods
scas
jg
es
lods
scas
xchg
les
push
mov
out
xor
aam
out
jge
xchg
mov
js
xchg
mov
iret
push
(bad)
jg
jne
and
clc
jg
(bad)
addr16
hlt
sbb
dec
mov
sbb
sbb
adc
jo
and
sub
pop
ret
lock
mov
sti
push
les
push
stc
pusha
pop
leave
or
mov
jno
lea
dec
js
inc
pop
div
jmp
pop
add
mov
sar
add
mov
sbb
je
out
adc
push
popf
or
xchg
ins
inc
xor
jg
xchg
jb
cmps
in
cmc
test
iret
jle
stos
inc
jno
inc
outs
pushf
dec
jb
xor
aad
clc
daa
out
cld
xchg
pop
mov
inc
mov
adc
push
inc
jmp
idiv
add
mov
inc
and
push
(bad)
add
retf
pop
out
fidivr
cmp
adc
std
idiv
shr
neg
jmp
scas
fs
mov
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
adc
pop
in
push
inc
sbb
loopne
push
(bad)
mov
cmp
push
mov
xchg
nop
stos
mov
repz
jno
xlat
ror
mov
pop
sbb
sar
in
cwde
iret
xor
sbb
mov
mov
sbb
dec
lock
cmc
in
ins
loop
lods
and
or
cs
imul
stos
mov
std
aaa
stos
jle
icebp
mov
mov
jmp
test
xchg
jmp
jne
lea
in
mov
sub
xchg
mov
pop
jp
int
sbb
sub
dec
mov
ins
and
fs
shl
aad
das
xchg
inc
loop
jo
mov
js
push
shr
lock
rcr
shl
mov
mov
mov
lods
pop
jae
ret
movs
jns
mov
adc
inc
aad
mov
loope
cmc
test
cmc
lea
ret
and
in
cmp
mov
ins
shl
xlat
cmp
into
fwait
out
jl
sub
push
icebp
aaa
mov
pop
xchg
cli
(bad)
loope
push
mov
pop
push
test
cli
xlat
cmps
cld
dec
icebp
cwde
xlat
or
pop
inc
adc
js
test
pop
out
aad
mov
sub
add
icebp
sahf
dec
sub
jne
fidivr
jbe
out
ds
sub
imul
push
pop
shr
das
sub
and
inc
pop
inc
xchg
mov
lahf
sbb
imul
pop
(bad)
out
jle
addr16
call
and
push
mov
fldcw
(bad)
int3
in
add
mov
js
sar
mov
mov
fimul
(bad)
test
xchg
arpl
sbb
cmp
addr16
sub
mov
push
jmp
(bad)
lea
scas
lods
fmulp
in
xchg
dec
outs
cmps
add
jo
sbb
in
and
cmps
mov
imul
cmp
aas
lock
ret
lods
ins
jbe
mov
sbb
push
div
xchg
sahf
out
jecxz
sub
addr16
mov
cld
popf
inc
cmp
inc
dec
cmps
scas
add
add
jmp
cli
inc
cmp
ja
(bad)
pop
stc
sbb
aas
mov
push
stc
sahf
or
pushf
les
push
add
in
mov
jl
sti
inc
js
jmp
xchg
pusha
mov
xor
repnz
out
or
push
or
xor
mov
pop
jb
cli
stos
pop
or
dec
dec
je
xor
dec
cld
inc
aad
xor
dec
fbld
aam
mov
xchg
cmp
sub
jg
aas
fisubr
dec
jg
sbb
add
clc
inc
sti
das
xchg
in
mov
int
(bad)
cmp
mov
mov
jl
addr16
ret
pop
pop
les
pop
adc
push
mov
jb
cmp
ja
xor
popf
mov
daa
inc
daa
inc
adc
mov
jle
mov
gs
into
xlat
cld
cdq
aad
dec
adc
cmps
cmp
daa
mul
mov
sub
in
loope
cmp
adc
jne
xchg
movs
dec
mov
pop
ss
pop
daa
cli
lds
outs
mov
aaa
cld
adc
jmp
inc
pop
stos
outs
data16
mov
repz
mov
pop
lods
or
and
loope
mov
cli
and
add
add
add
add
sub
add
mov
adc
add
adc
add
in
loope
mov
push
push
stos
jle
lock
ins
js
dec
aaa
push
mov
fistp
js
fndisi(8087
lods
mov
outs
scas
(bad)
jns
iret
ins
test
int3
data16
mov
sub
leave
enter
jns
adc
pop
lock
jl
lock
inc
loope
sti
aas
cld
and
cmp
(bad)
add
fs
in
mov
sahf
cmc
arpl
sbb
inc
inc
mov
add
and
dec
add
clc
mov
movntq
out
jg
sub
outs
jp
xor
es
jae
fcomip
scas
mov
retf
das
mov
add
repz
mov
bnd
out
push
mov
clc
loope
jo
gs
shr
and
out
outs
inc
pusha
sti
inc
popf
in
push
(bad)
pop
(bad)
mov
xor
add
addr16
or
add
push
inc
or
adc
daa
inc
daa
inc
adc
cmps
call
in
outs
mov
aad
imul
pop
cld
adc
pop
ja
das
cmp
mov
imul
sub
add
adc
out
stc
add
sbb
mov
data16
outs
icebp
adc
mov
aaa
jnp
mov
neg
or
iret
mov
sub
pop
inc
xchg
sar
call
add
adc
add
inc
inc
mov
add
and
ret
in
std
out
cmp
out
pop
lods
fstp
stos
clc
pop
ds
add
inc
pop
(bad)
xchg
jb
and
in
jmp
add
mov
jo
adc
cmp
sbb
fbstp
jb
(bad)
and
ficomp
(bad)
push
(bad)
rcl
push
dec
mov
loop
xor
add
outs
mov
xchg
daa
mov
inc
inc
mov
add
and
dec
add
clc
mov
scas
sbb
std
pop
loop
fdivrp
add
mov
xlat
outs
and
dec
paddw
inc
test
into
inc
test
aas
mov
std
fwait
iret
mov
(bad)
cmp
cmp
sub
add
or
cmp
sbb
and
mov
sbb
sub
or
mov
or
arpl
jbe
inc
inc
inc
rcr
pop
lock
daa
std
adc
add
add
adc
sbb
fbstp
push
call
lahf
mov
in
inc
jg
stos
inc
push
fdivr
add
xor
test
in
fild
jl
xchg
repnz
jnp
xor
add
sbb
imul
push
movs
ror
add
xor
jge
dec
(bad)
sbb
inc
sbb
push
fucomip
or
add
push
fwait
jl
std
movs
mov
cmp
aas
xchg
das
es
xor
add
xchg
pop
add
sbb
xchg
push
xor
and
jge
fcmovnbe
int
or
retf
call
call
sub
pop
sub
sub
pop
sub
sub
pop
sub
sub
pop
sub
sub
pop
sub
sub
pop
sub
sub
pop
sub
sub
pop
sub
sub
pop
sub
sub
pop
sub
sub
pop
sub
sub
pop
sub
sub
pop
sub
sub
pop
sub
sub
pop
sub
sub
pop
sub
sub
pop
sub
sub
pop
sub
sub
pop
sub
cmp
mov
fdivr
xchg
pop
cmc
test
scas
js
push
cmp
js
xchg
pusha
scas
jne
cmps
mov
mov
aaa
pop
in
ins
or
iret
jg
shr
cli
sbb
lods
jne
adc
add
pop
ret
push
repz
inc
inc
sbb
es
xchg
popa
jne
je
outs
rcr
dec
fwait
outs
das
mov
xor
add
sbb
push
dec
stos
mov
or
add
or
mov
adc
stos
mov
sub
(bad)
aaa
int3
dec
cmp
cld
cwde
pop
pop
xchg
pop
leave
cmp
cmp
fidivr
ret
push
daa
mov
mov
aas
xor
shl
lahf
ret
adc
cmp
and
aaa
add
pop
adc
push
dec
add
mov
xlat
lea
or
call
pop
dec
lods
call
out
add
xchg
lahf
popa
xchg
xlat
not
sbb
rcr
mov
mov
out
outs
push
das
cs
sub
mov
jmp
mov
iret
or
cdq
lock
mov
fcom
stos
int
adc
pop
mov
xchg
movs
add
xchg
jmp
ds
lock
lea
and
mov
adc
lock
ds
pop
mov
mov
jno
mov
jmp
add
push
push
repnz
jle
xor
cwde
dec
xchg
in
div
icebp
cmp
icebp
into
add
icebp
push
mov
pop
mov
cli
gs
cs
ins
test
sbb
xor
mov
jno
mov
jnp
ficom
xor
fucomip
mov
scas
xor
pop
ds
dec
lock
loope
pop
repz
out
bound
lahf
lods
jnp
mov
iret
call
push
jp
mov
mov
pop
test
ret
adc
loopne
(bad)
mov
xchg
cld
ret
pop
pop
popa
into
out
imul
dec
dec
mov
cmc
xchg
mov
pop
jne
pop
xlat
stos
jmp
lods
in
repnz
cmp
sbb
rcr
cld
sti
xlat
mov
push
in
jmp
xchg
xor
stos
fdivrp
add
stc
cmp
jg
out
(bad)
xchg
dec
pop
adc
sti
or
add
sar
sub
fistp
mov
pop
pop
sti
mov
stc
pop
pop
mov
lahf
inc
jne
mov
or
lahf
inc
add
mov
add
sub
push
add
cmps
rol
mov
mov
add
sub
push
add
cmps
rol
mov
mov
add
sub
push
add
cmps
rol
mov
mov
add
sub
push
add
cmps
rol
mov
mov
add
sub
push
add
cmps
rol
mov
mov
add
sub
push
add
cmps
rol
mov
mov
add
sub
push
add
cmps
rol
stos
jp
movs
mov
leave
push
repnz
test
loop
iret
js
arpl
sbb
(bad)
test
cmp
fisubr
xchg
imul
jae
out
sbb
cmc
cmps
push
leave
leave
cmp
shl
(bad)
frstor
xchg
shl
mov
mov
cli
xor
mov
mov
pop
pop
cmc
sbb
xor
pop
lds
cmp
ds
imul
dec
lock
out
sbb
jmp
jbe
das
adc
dec
bound
out
fsincos
(bad)
repz
imul
popf
and
xlat
test
ins
out
xchg
add
xor
mov
cmp
xlat
rcr
and
nop
inc
imul
mov
xchg
outs
and
jb
in
stc
pop
add
or
into
dec
stos
dec
repnz
sub
pop
mov
imul
xchg
or
jle
mov
daa
pushf
adc
mov
jns
dec
xchg
dec
popa
mov
push
repz
and
jo
cmp
cld
das
stos
call
jl
test
cmp
pop
pop
ja
popa
pushf
sub
jns
stos
mov
lock
test
ficomp
push
sti
mov
pushf
(bad)
jne
pop
xchg
adc
push
repnz
jmp
pop
popf
mov
pop
fcmovnb
in
adc
cmp
outs
loope
add
fcmovne
ins
or
and
sub
jb
xchg
enter
mov
mov
(bad)
sub
sub
xchg
cmps
(bad)
test
jmp
adc
jne
or
je
inc
mov
xchg
or
pusha
mov
fwait
les
lods
popa
(bad)
outs
sbb
pop
pop
stc
jne
sub
pop
(bad)
sbb
dec
test
popf
cmps
jns
(bad)
in
sahf
cmp
mov
shr
inc
mov
fmul
mov
nop
(bad)
dec
cli
sbb
aaa
addr16
clc
ins
pushf
in
scas
mov
les
arpl
lods
gs
or
dec
mov
fisubr
in
add
mov
or
pop
aad
idiv
dec
fnstsw
add
shl
addr16
push
sbb
pop
pop
out
mov
(bad)
and
sbb
add
inc
cld
stos
xchg
outs
jmp
xchg
ret
jns
inc
jns
fistp
add
mov
sub
retf
not
inc
xchg
movs
lock
std
mov
cmc
loope
out
aas
mov
cld
popf
das
cmp
in
idiv
add
scas
stos
(bad)
mov
cld
(bad)
mov
inc
sbb
stos
repz
ins
sbb
push
push
mov
inc
fisubr
jbe
mov
mov
mov
push
in
mov
push
fidiv
shl
mov
mov
mov
mov
imul
outs
fidiv
shl
fnsave
push
add
inc
fisubr
jbe
mov
mov
mov
push
in
mov
push
fidiv
shl
mov
mov
mov
mov
imul
outs
fidiv
shl
fnsave
push
add
inc
fisubr
jbe
mov
mov
mov
push
in
mov
push
fidiv
shl
mov
mov
mov
mov
imul
outs
fidiv
shl
fnsave
push
add
inc
fisubr
jbe
mov
mov
mov
push
in
mov
push
fidiv
shl
mov
mov
mov
mov
xchg
ret
popf
mov
cmp
xlat
xchg
fmul
xlat
pop
outs
sub
int3
in
pop
repz
mov
aaa
in
pop
inc
js
cmp
out
scas
sub
sar
jp
pop
xlat
adc
dec
fs
push
xchg
cmps
in
pop
in
xchg
xchg
sti
lods
cmc
cmps
(bad)
stc
cmc
mul
inc
or
sar
dec
aaa
push
mov
mov
pop
adc
mov
repnz
mov
icebp
ins
xchg
mov
rol
movs
int3
ror
sti
ds
mov
imul
sub
sub
cli
xlat
mov
pop
(bad)
ja
sahf
push
shl
mov
ins
outs
jae
xchg
in
and
mov
inc
jne
xchg
jp
push
push
push
cmp
popf
(bad)
cli
cli
lfs
inc
gs
ins
fist
nop
movs
xchg
mov
and
jno
jge
xor
test
mov
imul
inc
cmp
jge
retf
fdiv
sbb
jae
outs
add
outs
fild
lea
sbb
xlat
test
sub
into
mov
push
test
outs
popa
test
push
cmp
pop
mov
leave
mov
clc
pop
loop
lahf
stos
js
jge
data16
push
or
jno
shl
cli
dec
vpcmpgtb
push
mov
cmps
js
pop
push
ret
xchg
fidivr
lahf
dec
pushf
mov
jo
inc
add
mov
sub
stos
shl
imul
inc
xor
(bad)
mov
jae
pop
inc
xchg
and
pop
mov
add
arpl
fist
rcl
and
inc
sbb
daa
sar
mov
neg
cmps
cmp
sbb
mov
adc
or
(bad)
sbb
aad
fldcw
inc
movs
sbb
push
jmp
cmp
mov
(bad)
sub
mov
fisttp
out
fidivr
cmps
(bad)
(bad)
push
mov
ins
hlt
and
adc
bound
in
jp
das
and
jp
xchg
sub
icebp
jmp
scas
stos
fist
loopne
shl
and
or
imul
pause
cmps
mov
push
sysret
out
out
xor
push
jge
jge
repnz
gs
lods
push
or
dec
and
outs
jp
pushf
mov
add
jnp
movs
fild
mov
ja
ins
jge
(bad)
xor
(bad)
in
dec
loopne
sti
jge
add
sub
in
or
cdq
mov
adc
jmp
(bad)
cmps
adc
mov
cld
gs
or
pop
hlt
cmp
in
sahf
cmp
(bad)
jecxz
sub
xchg
inc
xor
jmp
scas
jbe
mov
mov
pop
push
push
dec
mov
hlt
push
pusha
sbb
mov
sub
adc
sub
push
add
mov
pop
push
push
dec
mov
hlt
push
pusha
sbb
mov
sub
adc
sub
push
add
mov
pop
push
push
dec
mov
hlt
push
pusha
sbb
mov
sub
adc
sub
push
add
mov
pop
push
push
dec
mov
hlt
push
pusha
sbb
mov
sub
inc
adc
fbstp
movs
scas
jnp
pop
xchg
fucompp
fbld
sbb
sbb
push
mov
inc
jp
popf
push
or
push
mov
ss
add
cmp
loopne
jnp
add
lods
pop
sahf
aad
in
es
shl
dec
or
mov
sbb
retf
outs
sub
push
mov
jnp
das
xor
mov
sbb
xor
xchg
fisttp
into
repnz
push
and
sbb
div
stos
xchg
sbb
sar
or
fst
jecxz
sbb
in
cdq
stos
lahf
inc
call
mov
cmp
in
mov
scas
lahf
rcr
pop
push
pop
push
mov
aad
aam
test
test
add
xchg
pop
adc
jge
jmp
int
(bad)
stos
dec
cdq
dec
cmp
out
js
imul
loop
(bad)
hlt
mov
call
repnz
shl
and
cmp
dec
jno
mov
in
ffreep
lea
cdq
in
adc
mov
inc
or
add
inc
push
jecxz
popf
leave
out
mov
mov
dec
pop
jno
shl
xlat
xor
mov
ins
push
sub
jne
inc
outs
out
das
movs
jns
frstor
in
cli
arpl
mov
pop
inc
addr16
and
fild
jp
mov
pop
cld
push
fs
leave
in
adc
mov
mov
mov
inc
mov
retf
mov
in
out
out
in
jecxz
lods
lods
mov
cmc
cmp
arpl
inc
jl
(bad)
push
adc
xor
scas
xor
push
xchg
xor
test
xlat
xor
xchg
xor
or
and
xchg
inc
and
xchg
mov
imul
les
pushf
ror
inc
mov
sbb
xlat
aam
lock
jge
repnz
fcmovbe
rcl
jmp
pop
xchg
repnz
xchg
shl
xchg
mov
je
inc
xchg
clc
jle
mov
inc
dec
sub
xchg
and
dec
xor
sub
js
inc
adc
add
push
inc
push
add
adc
inc
sub
mov
inc
adc
pusha
or
mov
adc
add
push
inc
push
add
adc
inc
sub
mov
inc
adc
pusha
or
mov
adc
add
push
inc
push
add
adc
inc
sub
mov
inc
adc
pusha
or
mov
adc
add
push
inc
push
add
aad
(bad)
sub
sub
xchg
cmp
xor
mov
inc
daa
into
outs
aas
sbb
cld
jmp
sbb
stos
dec
mov
dec
cmp
cmps
mov
(bad)
jbe
jmp
retf
cld
mov
mov
mov
fldenv
and
jmp
jno
das
cmp
cld
imul
cmc
pop
jns
add
movs
fcomip
(bad)
dec
dec
push
bound
add
dec
pop
sbb
mov
(bad)
lahf
cwde
and
inc
int
enter
sub
leave
test
popf
ror
mov
out
sub
jmp
or
add
sbb
pusha
inc
xchg
outs
dec
pop
xchg
sbb
shl
xchg
imul
sub
cmps
jno
cmp
mov
push
cmp
call
dec
or
push
lds
mov
xchg
lds
hlt
iret
cld
adc
add
(bad)
hlt
cld
jnp
mov
pushf
or
cld
cmp
daa
sub
add
mov
mov
clc
pop
test
sub
pop
enter
mov
movs
mov
push
jnp
mov
pop
and
in
inc
iret
push
mov
in
cmp
rol
mov
sbb
xchg
ins
mul
add
sahf
aam
imul
mov
lea
enter
mov
movs
mov
push
jnp
mov
pop
and
in
inc
iret
push
mov
in
cmp
rol
mov
sbb
xchg
ins
mul
add
sahf
aam
imul
mov
lea
enter
mov
movs
mov
push
jnp
mov
pop
and
in
inc
iret
push
mov
out
cld
adc
cmps
mov
pop
sbb
xor
xlat
popa
lock
popf
mov
int3
repz
in
fwait
sbb
dec
xchg
xor
adc
ret
test
xchg
xor
sub
rcr
push
fnstsw
dec
push
xchg
dec
mov
lods
shr
jb
stc
call
cmp
call
outs
ret
mov
xor
cmps
push
pop
out
mov
sti
enter
sbb
inc
pop
hlt
mov
mov
and
das
je
sbb
test
push
xchg
inc
and
pop
sbb
test
mov
push
fild
adc
popf
mov
jmp
push
jnp
inc
in
sar
sbb
inc
or
(bad)
sub
xor
in
ja
or
sub
xchg
out
xor
divps
cli
es
mov
sub
mov
imul
dec
retf
nop
cmps
xor
out
and
scas
add
rcr
lock
ins
neg
repnz
daa
test
or
fadd
dec
sbb
mov
enter
jle
js
ret
shr
xor
test
std
scas
pop
and
pusha
ins
mov
cwde
add
jns
outs
adc
pop
in
gs
cs
mov
mov
push
arpl
mov
mov
sahf
dec
loope
push
and
and
das
and
fdiv
jno
jp
in
(bad)
arpl
mov
clc
mov
push
fiadd
retf
out
mov
and
and
pop
and
mov
jecxz
cld
xor
lods
scas
jl
loopne
inc
dec
mov
out
mov
fcomp
inc
adc
mov
outs
xor
mov
scas
popf
jecxz
sub
div
xchg
jbe
scas
fistp
pusha
mov
push
(bad)
or
mov
jmp
mov
hlt
mov
aas
rol
fistp
xlat
fidivr
lds
addr16
mov
mov
xchg
sbb
jnp
and
lods
lock
imul
ins
or
inc
jecxz
in
fbstp
mov
(bad)
ins
mov
in
int
pop
mov
in
xchg
(bad)
dec
cmp
mov
into
in
jb
sub
mov
mov
lahf
mov
xchg
mov
jp
scas
jg
ins
cmc
lods
xor
shr
add
or
fsubr
push
ds
js
mov
jle
mov
test
pop
push
sahf
out
push
int
cmp
lds
add
jb
cmp
mov
out
into
cld
mov
dec
cmp
dec
cmp
into
mov
push
xchg
lock
pop
adc
cmp
xchg
aam
inc
jecxz
(bad)
jne
jp
sub
popa
xchg
or
cld
test
retf
jne
cmp
loope
mov
sbb
mov
xchg
or
pop
aaa
pop
mov
xchg
jbe
xor
mov
nop
cld
ins
clc
dec
jno
fwait
inc
lock
xchg
adc
xchg
lods
mul
dec
sahf
sbb
mov
xchg
int3
js
leave
loopne
mov
in
dec
mov
ins
xor
test
es
push
pop
xor
fldcw
cmp
mov
leave
rol
cmp
fistp
neg
jnp
mov
add
cmps
(bad)
pop
mov
cld
dec
cmps
(bad)
push
sbb
inc
popf
ins
jecxz
ins
aas
sar
or
in
pop
aaa
ins
out
aad
jbe
cmp
dec
jae
pop
push
sbb
add
or
mov
ss
scas
xor
mov
ss
cmp
repnz
repnz
sahf
cwde
add
adc
lock
dec
xlat
mov
and
rol
ds
das
jmp
jg
sub
fwait
pop
shr
mov
mov
mov
add
lock
(bad)
loopne
icebp
lods
mov
jp
jo
adc
jg
out
(bad)
mov
(bad)
or
sub
mov
mov
sbb
push
xlat
ret
push
retf
cmp
cld
mov
push
mov
jo
jmp
mov
inc
inc
xchg
dec
ss
sbb
sar
xchg
dec
dec
cs
and
int3
pop
dec
mov
mov
and
push
push
mov
int3
stos
add
xor
ja
xchg
jnp
rcr
js
dec
outs
sbb
push
pop
push
or
aad
lahf
out
fnsave
xchg
xor
addr16
(bad)
jb
and
mov
xchg
aas
sbb
mov
mov
push
ss
pop
xchg
loope
xor
fimul
dec
sub
imul
jmp
popa
enter
iret
cli
mov
sbb
cmp
imul
je
sbb
fnsave
jns
or
mov
xchg
pop
and
xchg
jecxz
cmp
not
(bad)
(bad)
outs
rol
jmp
and
jecxz
and
loope
mov
out
(bad)
push
jl
clc
jge
je
jne
lea
dec
(bad)
mov
mov
cmp
or
xor
sbb
push
inc
inc
sti
fdivr
mov
pop
or
sbb
out
xchg
push
in
sbb
sbb
in
out
ficom
test
out
mov
stos
(bad)
pushf
adc
aad
push
repz
in
xlat
scas
frstor
jge
jg
daa
call
add
push
inc
(bad)
(bad)
xchg
jno
outs
xchg
xchg
xchg
dec
test
sbb
mov
(bad)
rol
daa
aad
pop
lock
clc
xor
cmps
call
outs
sub
add
imul
les
cmp
xchg
clc
xor
pop
sar
push
ins
movs
leave
ss
mov
xor
cwde
mov
pop
push
jb
cmp
sbb
dec
dec
jp
lahf
in
addr16
or
inc
xchg
pop
push
mov
fucomp
mov
jne
int
xchg
addr16
adc
sub
add
pop
pop
jmp
adc
shl
xor
fwait
sbb
stos
sti
sbb
popf
jns
jns
add
push
loope
je
lea
pop
mov
js
jne
push
outs
fistp
arpl
jecxz
jl
(bad)
aas
mov
fwait
movs
jmp
fstp
or
jns
inc
ficomp
outs
xchg
cmp
add
pop
xchg
mov
loopne
cli
jg
jg
cld
cmp
cdq
mov
pop
xchg
les
std
scas
push
pop
pop
aaa
sbb
daa
push
sbb
jle
jno
movs
dec
adc
clc
cmp
sahf
and
pop
ret
mov
hlt
mov
or
add
pushf
jo
sbb
test
inc
into
jae
mov
pop
mov
cmps
in
jg
sar
mov
xchg
(bad)
into
jno
sar
cmp
add
rcr
push
shl
mov
je
add
ror
xchg
nop
add
jecxz
mov
cmp
mov
loope
ret
lea
jle
icebp
aad
sub
ficom
pop
or
mov
pop
and
push
xor
xor
lahf
mov
mov
test
pop
(bad)
(bad)
adc
(bad)
test
call
cmp
xchg
fld
in
nop
ret
int3
mov
fisubr
lahf
mov
mov
fisttp
pop
inc
outs
adc
dec
jle
add
outs
or
sbb
mov
add
rcl
aas
jbe
jmp
mov
les
push
aad
adc
loop
adc
mov
push
fbstp
and
lds
inc
clc
ins
loop
mov
pop
mov
push
clc
inc
dec
lock
sub
fwait
retf
int3
mov
or
scas
iret
test
clc
xor
push
jb
xchg
cdq
in
and
sahf
inc
retf
mov
jne
jne
mov
clc
(bad)
xchg
mov
ficomp
mov
inc
and
sub
repz
mov
leave
in
jnp
sub
test
mov
adc
ins
cmp
imul
add
sbb
cmps
iret
and
fcmovne
sbb
mov
rcl
push
mov
pop
add
movd
jle
lock
mov
iret
stos
imul
xor
arpl
mov
retf
sub
call
jge
rcr
add
js
ret
outs
mov
lock
mov
fld
dec
outs
and
inc
cmp
in
mov
pop
mov
and
adc
icebp
je
enter
dec
popa
adc
pop
pop
dec
add
enter
leave
jb
loope
sbb
leave
imul
test
lock
push
shr
imul
retf
pop
outs
adc
mov
fist
jne
ds
shl
inc
jns
mov
pusha
cmp
ret
arpl
mov
idiv
jmp
jo
call
mov
rol
dec
sbb
pop
adc
xor
iret
ds
cmc
inc
adc
loopne
sbb
mov
sahf
dec
clc
jle
xchg
daa
xchg
bound
shr
lock
jecxz
pop
dec
mov
enter
lock
cmp
out
pop
cwde
test
inc
arpl
or
out
test
dec
loop
daa
ret
push
cs
sbb
retf
adc
fistp
sub
add
loope
das
cmp
popa
cmps
js
pop
xchg
out
sub
fcomp
sub
mov
ja
shl
stc
(bad)
int3
or
or
cmp
inc
test
cmp
add
inc
icebp
add
fwait
dec
repnz
dec
retf
lds
out
(bad)
cwde
test
ins
pop
push
leave
adc
ret
pop
or
sbb
inc
xchg
push
cmp
mov
repnz
arpl
cmp
push
mov
ja
cmp
retf
jae
fisttp
add
sbb
xor
out
(bad)
icebp
inc
rcl
aad
sbb
pop
xlat
push
sub
in
adc
(bad)
mov
das
fdivr
inc
lock
or
ret
loop
sbb
arpl
rcl
jecxz
stc
push
mov
pop
jno
and
imul
jg
ficomp
mov
xor
dec
aaa
push
pop
cli
test
leave
jnp
mov
nop
jbe
jno
sub
inc
add
xchg
push
paddsw
adc
stos
ret
ret
mov
movlps
or
cmps
movs
int
mov
ins
adc
mov
jno
fmul
enter
sub
push
cdq
push
push
inc
sub
call
outs
fsubr
push
fisub
xor
out
cmp
push
ret
ss
push
adc
cmp
jg
push
mov
pop
pop
clc
neg
(bad)
imul
aaa
mov
and
sti
xor
cs
or
out
stos
mov
pop
sahf
cmp
pop
loope
mov
cmp
sar
xchg
cli
lds
fidiv
cwde
dec
pusha
rcl
jo
imul
add
push
(bad)
in
in
icebp
inc
inc
loope
ret
mov
mov
stos
iret
cmp
ins
movs
mov
(bad)
jmp
adc
ins
mov
add
cmp
loopne
ror
cld
pop
clc
test
mov
jl
loope
add
mov
les
lds
push
sbb
and
sbb
pop
js
div
and
adc
cmp
inc
fwait
cmp
in
jl
xor
xor
push
cld
pop
xchg
loopne
mov
xlat
xor
push
ret
aad
cmps
xchg
retf
pop
xchg
jae
and
jle
inc
ret
jne
inc
imul
cmp
pop
clc
sub
push
cli
jne
shr
fild
dec
test
adc
sbb
pop
sub
ins
loop
or
cmp
fs
pop
push
pop
dec
cli
sbb
mov
das
mov
daa
mov
inc
mov
es
adc
xor
out
adc
xchg
dec
mov
sub
inc
test
xchg
inc
xchg
inc
mov
test
imul
jmp
out
adc
sbb
sbb
fstp
xchg
mov
mov
repz
mov
cmc
dec
scas
out
leave
pop
lods
pop
jno
or
xchg
push
xchg
repz
sbb
mov
iret
add
lock
out
loop
pop
ret
mov
ds
jae
pop
inc
movs
jno
out
adc
jb
jge
xor
dec
adc
add
test
xor
jmp
xor
icebp
cmp
mov
fmul
jae
xor
and
mov
mov
xor
sahf
jae
cmp
xchg
dec
sbb
cdq
cs
xor
lods
dec
frstor
ret
add
sub
dec
xor
(bad)
jle
add
pop
or
mov
retf
loope
xor
scas
in
fidiv
pop
cdq
jae
mov
mov
fadd
add
ffree
mov
call
add
shr
daa
mov
aad
das
movs
mov
loopne
call
fsub
in
dec
into
into
loop
lods
out
jg
fldenv
add
inc
add
add
add
add
add
add
add
add
adc
add
add
sub
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
inc
add
add
add
inc
inc
add
inc
inc
(bad)
inc
add
(bad)
inc
xchg
js
ja
jg
ja
ja
ja
xchg
add
ja
push
push
pop
jnp
mov
jne
push
push
jo
add
push
add
ja
push
push
pop
jnp
mov
ja
ja
xchg
xchg
ja
jo
ja
js
pushw
ja
adc
ja
loopne
addr16
adc
add
pop
jno
adc
push
add
adc
ja
loopne
addr16
adc
pusha
data16
add
ja
ja
jo
ja
js
add
add
add
add
add
ins
xor
add
mov
add
bound
add
inc
add
add
add
add
add
dec
imul
add
ja
push
jo
imul
outs
imul
ins
add
(bad)
inc
add
(bad)
or
add
arpl
push
add
add
push
add
add
add
add
add
add
add
add
and
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
inc
add
add
add
inc
inc
add
inc
inc
(bad)
inc
add
(bad)
inc
add
add
(bad)
push
(bad)
(bad)
push
add
add
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
push
add
(bad)
(bad)
(bad)
(bad)
push
add
(bad)
(bad)
(bad)
(bad)
push
add
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
add
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
add
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
add
add
add
lock
(bad)
(bad)
inc
add
add
add
add
add
(bad)
(bad)
push
inc
add
add
add
(bad)
add
lock
lock
add
lock
lock
add
lock
lock
add
lock
lock
add
lock
(bad)
add
(bad)
add
(bad)
add
(bad)
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
clc
add
(bad)
clc
add
(bad)
clc
add
push
add
jmp
add
inc
add
inc
add
inc
add
add
jg
add
jg
add
jg
adc
jg
xor
jg
jo
jg
lock
push
add
push
pop
(bad)
push
aas
(bad)
push
(bad)
(bad)
push
(bad)
(bad)
push
(bad)
(bad)
push
(bad)
(bad)
(bad)
stc
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
nop
add
jl
add
popa
outs
jae
push
gs
inc
pop
add
add
pop
add
gs
xor
add
add
out
out
add
or
add
add
add
add
popa
xor
add
add
add
ins
je
add
add
add
add
add
add
adc
add
add
sub
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
rol
add
add
inc
add
(bad)
inc
inc
add
inc
inc
(bad)
inc
add
(bad)
inc
sub
sub
sub
sub
add
sub
(bad)
(bad)
(bad)
(bad)
jmp
cmp
(bad)
clc
sub
sub
add
clc
sub
das
sub
sub
add
jmp
das
sub
das
sub
repnz
sub
sub
sub
repnz
sub
clc
sub
sub
or
(bad)
(bad)
(bad)
(bad)
(bad)
inc
sub
sub
add
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
enter
lock
add
add
add
add
add
xor
add
add
(bad)
inc
add
mov
enter
push
mov
add
add
add
add
bound
xor
add
add
add
outs
fs
je
outs
outs
and
arpl
outs
and
and
imul
jae
outs
outs
and
add
(bad)
inc
add
cmps
or
adc
pop
add
add
add
push
pop
add
popa
xor
add
add
add
ins
je
add
add
add
add
add
add
adc
add
add
sub
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
rol
add
add
inc
add
(bad)
inc
inc
add
inc
inc
(bad)
inc
add
(bad)
inc
sub
sub
sub
sub
add
sub
(bad)
(bad)
(bad)
(bad)
jmp
cmp
(bad)
clc
sub
sub
add
clc
sub
das
sub
sub
add
jmp
das
sub
das
sub
repnz
sub
sub
sub
repnz
sub
clc
sub
sub
or
(bad)
(bad)
(bad)
(bad)
(bad)
inc
sub
sub
add
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
pusha
sbb
add
add
add
add
add
add
push
add
xor
add
add
(bad)
inc
add
push
sbb
add
push
push
sbb
add
add
add
add
or
add
gs
xor
add
add
inc
jb
ja
jb
and
imul
arpl
outs
and
and
imul
jae
outs
outs
and
add
(bad)
inc
add
cmps
or
adc
add
add
add
add
or
add
popa
xor
add
add
add
ins
je
add
add
add
add
add
add
adc
add
add
sub
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
rol
add
add
inc
add
(bad)
inc
inc
add
inc
inc
(bad)
inc
add
(bad)
inc
sub
sub
sub
sub
add
sub
(bad)
(bad)
(bad)
(bad)
jmp
cmp
(bad)
clc
sub
sub
add
clc
sub
das
sub
sub
add
jmp
das
sub
das
sub
repnz
sub
sub
sub
repnz
sub
clc
sub
sub
or
(bad)
(bad)
(bad)
(bad)
(bad)
inc
sub
sub
add
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
clc
push
lock
add
add
add
add
or
add
popa
cmp
sbb
inc
add
add
add
add
add
add
add
add
adc
add
add
sub
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
rol
add
add
inc
add
(bad)
inc
inc
add
inc
inc
(bad)
inc
add
(bad)
inc
sub
sub
sub
sub
add
sub
(bad)
(bad)
(bad)
(bad)
jmp
cmp
(bad)
clc
sub
sub
add
clc
sub
das
sub
sub
add
jmp
das
sub
das
sub
repnz
sub
sub
sub
repnz
sub
clc
sub
sub
or
(bad)
(bad)
(bad)
(bad)
(bad)
inc
sub
sub
add
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
nop
adc
or
inc
add
add
push
add
popa
cmp
sbb
inc
add
add
add
add
add
add
add
add
adc
add
add
sub
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
rol
add
add
inc
add
(bad)
inc
inc
add
inc
inc
(bad)
inc
add
(bad)
inc
sub
sub
sub
sub
add
sub
(bad)
(bad)
(bad)
(bad)
jmp
cmp
(bad)
clc
sub
sub
add
clc
sub
das
sub
sub
add
jmp
das
sub
das
sub
repnz
sub
sub
sub
repnz
sub
clc
sub
sub
or
(bad)
(bad)
(bad)
(bad)
(bad)
inc
sub
sub
add
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
sub
add
add
add
add
add
or
add
popa
addr16
add
add
add
ins
je
add
add
add
add
add
add
adc
add
add
sub
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
rol
add
add
inc
add
(bad)
inc
inc
add
inc
inc
(bad)
inc
add
(bad)
inc
sub
sub
sub
sub
add
sub
(bad)
(bad)
(bad)
(bad)
jmp
cmp
(bad)
clc
sub
sub
add
clc
sub
das
sub
sub
add
jmp
das
sub
das
sub
repnz
sub
sub
sub
repnz
sub
clc
sub
sub
or
(bad)
(bad)
(bad)
(bad)
(bad)
inc
sub
sub
add
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
rcl
add
add
add
add
add
add
outs
xor
add
add
(bad)
inc
add
call
or
add
push
call
add
add
add
push
pop
add
gs
xor
add
add
jb
imul
arpl
outs
and
outs
fs
je
outs
outs
add
(bad)
inc
add
outs
or
add
add
or
pop
add
add
add
clts
add
gs
cmp
add
and
push
outs
je
ins
and
jae
and
popa
ins
jns
imul
popa
and
gs
add
(bad)
inc
add
outs
or
add
add
or
pop
add
add
add
add
add
cmp
pop
add
(bad)
inc
add
adc
add
push
adc
add
add
add
add
add
add
cmp
pop
add
(bad)
inc
add
sbb
adc
adc
inc
aas
add
add
push
add
gs
cmp
add
push
add
jae
outs
ins
gs
inc
jo
jb
jbe
ins
and
jb
add
(bad)
inc
add
outs
or
add
add
or
pop
add
add
add
add
add
gs
add
add
(bad)
inc
add
mov
add
add
push
mov
add
pop
add
add
add
adc
add
gs
aaa
add
add
add
gs
and
jo
popa
arpl
outs
je
push
push
add
(bad)
inc
add
outs
or
add
add
pop
add
add
add
add
adc
popa
addr16
aaa
add
add
add
add
add
add
add
add
add
add
and
add
add
add
add
add
add
add
adc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
inc
add
add
add
inc
inc
add
inc
inc
(bad)
inc
add
(bad)
inc
add
add
jo
add
jo
add
jo
add
inc
add
inc
add
inc
add
dec
add
add
add
jo
(bad)
inc
(bad)
inc
(bad)
ud0
clc
or
add
(bad)
dec
clc
or
add
(bad)
dec
lock
or
ud0
jo
add
add
add
add
(bad)
inc
jo
add
add
add
ud0
push
jo
add
add
add
(bad)
(bad)
(bad)
push
or
add
add
ud0
(bad)
(bad)
(bad)
clc
add
add
add
add
ud0
(bad)
(bad)
(bad)
clc
add
add
add
add
add
(bad)
(bad)
(bad)
(bad)
clc
add
add
add
add
add
(bad)
(bad)
(bad)
dec
add
add
add
ud0
(bad)
dec
add
add
add
ud0
(bad)
dec
add
add
add
add
(bad)
(bad)
clc
add
push
out
out
out
mov
add
add
add
push
out
out
out
mov
add
out
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
aas
(bad)
inc
ud0
add
(bad)
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
jmp
add
jmp
add
inc
add
inc
add
inc
add
inc
add
adc
add
and
add
add
add
add
add
rol
add
add
add
add
add
add
add
add
inc
add
add
add
inc
inc
add
inc
inc
(bad)
inc
add
(bad)
inc
add
add
add
add
add
add
add
add
add
(bad)
add
add
add
or
lock
add
add
lock
add
add
lock
add
add
lock
add
add
or
add
add
ud0
add
add
add
(bad)
inc
add
clc
add
add
add
mov
add
std
inc
add
inc
add
inc
add
jg
add
aas
add
lock
add
lock
lock
lock
lock
lock
clc
sldt
clc
pop
add
clc
pop
add
lock
lock
add
loopne
loopne
loopne
or
inc
cmps
add
add
popa
gs
add
je
add
add
add
add
add
adc
add
add
or
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
and
imul
sbb
sub
jae
sub
jnp
sub
mov
sub
mov
pushf
pushf
pushf
add
cmp
add
lods
add
inc
mov
push
push
mov
jae
mov
mov
add
arpl
add
mov
add
mov
pop
mov
arpl
add
mov
imul
jae
mov
test
add
mov
movs
mov
mov
pop
pop
into
add
into
add
movs
into
add
lods
into
add
(bad)
into
add
into
into
add
and
add
(bad)
add
(bad)
add
(bad)
add
(bad)
add
(bad)
add
(bad)
add
(bad)
add
mov
(bad)
add
and
add
sub
add
fiadd
inc
cmp
add
fiadd
pop
inc
fiadd
arpl
add
fiadd
(bad)
fiadd
arpl
add
out
jnp
out
xchg
jae
add
out
lods
lods
out
mov
out
add
out
add
(bad)
out
add
out
add
out
out
add
test
jnp
test
xchg
xchg
test
into
(bad)
test
out
out
test
inc
inc
arpl
add
inc
mov
add
inc
movs
pushf
inc
lods
pushf
inc
mov
inc
mov
movs
inc
mov
inc
(bad)
into
inc
(bad)
(bad)
inc
out
inc
out
out
inc
div
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
add
add
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
jae
add
add
add
add
jae
jae
pop
pop
pop
inc
xor
sbb
sub
sub
push
push
adc
adc
jae
cmp
cmp
sub
and
and
push
and
jae
cmp
inc
xor
cmp
cmp
adc
ds
xor
and
push
dec
inc
dec
sbb
jae
sub
sub
dec
xor
ins
pop
push
pop
pop
sub
and
and
dec
dec
dec
dec
dec
dec
dec
xor
or
adc
cmp
inc
pop
push
push
pop
das
inc
adc
and
dec
push
push
dec
imul
or
push
cmp
push
push
ins
ins
pop
push
jae
inc
or
or
cmp
dec
dec
pop
push
dec
sbb
inc
wbinvd
or
es
sub
sub
jae
jae
sbb
sbb
sbb
cs
sbb
jae
jae
jae
jae
jae
dec
popa
adc
jae
jae
jae
jae
jae
jae
push
inc
jae
jae
jae
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
aas
(bad)
(bad)
(bad)
aas
(bad)
inc
mov
add
add
add
add
push
add
popa
addr16
add
add
jle
add
add
add
add
adc
add
add
or
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
and
imul
sbb
sub
jae
sub
jnp
sub
mov
sub
mov
pushf
pushf
pushf
add
cmp
add
lods
add
inc
mov
push
push
mov
jae
mov
mov
add
arpl
add
mov
add
mov
pop
mov
arpl
add
mov
imul
jae
mov
test
add
mov
movs
mov
mov
pop
pop
into
add
into
add
movs
into
add
lods
into
add
(bad)
into
add
into
into
add
and
add
(bad)
add
(bad)
add
(bad)
add
(bad)
add
(bad)
add
(bad)
add
(bad)
add
mov
(bad)
add
and
add
sub
add
fiadd
inc
cmp
add
fiadd
pop
inc
fiadd
arpl
add
fiadd
(bad)
fiadd
arpl
add
out
jnp
out
xchg
jae
add
out
lods
lods
out
mov
out
add
out
add
(bad)
out
add
out
add
out
out
add
test
jnp
test
xchg
xchg
test
into
(bad)
test
out
out
test
inc
inc
arpl
add
inc
mov
add
inc
movs
pushf
inc
lods
pushf
inc
mov
inc
mov
movs
inc
mov
inc
(bad)
into
inc
(bad)
(bad)
inc
out
inc
out
out
inc
div
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
add
add
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
jae
add
add
add
add
jae
jae
pop
pop
pop
inc
xor
sbb
sub
sub
push
push
adc
adc
jae
cmp
cmp
sub
and
and
push
and
jae
cmp
inc
xor
cmp
cmp
adc
ds
xor
and
push
dec
inc
dec
sbb
jae
sub
sub
dec
xor
ins
pop
push
pop
pop
sub
and
and
dec
dec
dec
dec
dec
dec
dec
xor
or
adc
cmp
inc
pop
push
push
pop
das
inc
adc
and
dec
push
push
dec
imul
or
push
cmp
push
push
ins
ins
pop
push
jae
inc
or
or
cmp
dec
dec
pop
push
dec
sbb
inc
wbinvd
or
es
sub
sub
jae
jae
sbb
sbb
sbb
cs
sbb
jae
jae
jae
jae
jae
dec
popa
adc
jae
jae
jae
jae
jae
jae
push
inc
jae
jae
jae
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
aas
(bad)
(bad)
(bad)
aas
(bad)
inc
mov
add
add
add
add
add
sbb
add
popa
xor
sbb
ds
add
add
add
add
add
add
add
and
add
add
add
add
add
add
add
adc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
inc
add
add
add
inc
inc
add
inc
inc
(bad)
inc
add
(bad)
inc
add
add
add
add
add
or
mov
add
add
add
or
(bad)
lock
add
add
add
or
lock
lock
add
add
or
or
push
loopne
(bad)
(bad)
dec
add
add
add
loopne
(bad)
(bad)
push
(bad)
(bad)
push
add
add
add
loopne
(bad)
(bad)
push
push
add
add
add
add
loopne
(bad)
(bad)
push
add
(bad)
inc
add
add
push
loopne
(bad)
(bad)
dec
(bad)
(bad)
(bad)
inc
add
add
push
loopne
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
or
loopne
(bad)
(bad)
(bad)
(bad)
(bad)
inc
(bad)
(bad)
(bad)
push
add
add
ud0
(bad)
push
(bad)
(bad)
push
add
add
add
add
(bad)
(bad)
(bad)
(bad)
inc
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
sar
push
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
jg
add
add
add
add
add
add
add
add
add
jmp
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
add
add
add
add
add
add
add
add
add
rol
add
add
add
add
add
add
add
add
inc
add
add
add
inc
inc
add
inc
inc
(bad)
inc
add
(bad)
inc
add
mov
inc
add
add
add
add
add
add
(bad)
clc
add
add
add
push
push
push
add
ud0
or
add
inc
add
inc
add
inc
add
inc
add
aas
add
add
add
add
add
add
add
add
add
add
add
add
add
cmp
add
(bad)
inc
add
inc
add
inc
add
inc
add
js
mov
add
add
add
push
add
popa
xor
sbb
xchg
add
jle
add
add
add
add
adc
add
add
or
push
add
add
add
add
add
add
add
add
add
add
(bad)
inc
add
add
fstp
fld
stc
clc
stc
add
out
lock
add
add
jns
out
in
(bad)
sti
cld
add
clc
stc
add
jmp
add
add
push
push
add
outs
add
aad
add
jne
imul
add
(bad)
add
fcomp
add
sbb
add
dec
dec
add
and
pop
add
xor
add
adc
dec
inc
aas
add
dec
add
sub
add
cmp
mov
or
add
push
xor
xor
daa
add
call
sldt
pop
aaa
add
ja
add
inc
sldt
push
sbb
add
pop
and
retf
add
and
shl
add
sbb
shr
add
(bad)
jno
add
mov
add
jne
add
js
add
jl
add
ja
add
sub
in
push
add
mov
add
mov
push
add
xchg
sub
icebp
(bad)
xchg
add
call
in
(bad)
add
out
add
ror
add
(bad)
add
fcompp
add
rcl
add
(bad)
inc
idiv
test
add
push
(bad)
(bad)
add
test
add
mov
test
add
mov
and
sahf
add
leave
mov
sub
xchg
add
cmps
add
lds
add
je
add
add
xchg
pusha
add
mov
add
add
outs
add
mov
add
mov
pop
add
xchg
ins
add
cmps
jle
xchg
aam
add
jno
add
arpl
add
add
pushf
ins
add
xchg
push
sbb
jo
dec
mov
jp
fldlg2
out
add
add
pop
inc
add
add
ins
pop
add
in
add
pop
add
repnz
add
ins
add
jmp
add
dec
dec
add
pop
push
add
push
add
add
(bad)
inc
data16
pop
add
jecxz
add
shr
add
loop
add
add
mov
add
scas
fadd
add
in
push
scas
xlat
add
mov
add
mov
add
scas
aam
or
xlat
add
mov
loopne
adc
fiadd
sbb
jecxz
sbb
lods
add
mov
jecxz
and
lea
inc
(bad)
dec
retf
push
retf
push
retf
out
pop
into
jmp
add
jmp
data16
sbb
add
repz
add
std
inc
inc
into
cmc
add
cmc
add
clc
cld
add
aaa
cmp
cmc
sti
inc
loop
cmc
add
(bad)
xlat
add
inc
lock
inc
repnz
in
add
dec
repz
dec
in
add
push
test
sub
add
push
stc
add
push
cmc
add
pop
cld
add
pop
sti
add
push
cli
add
push
repz
pop
inc
xor
xor
add
push
in
add
pusha
inc
ss
in
add
inc
inc
ins
inc
dec
jae
add
add
inc
push
inc
jp
inc
test
cli
add
int
add
dec
inc
pop
outs
cld
add
ds
add
dec
add
cld
cld
add
cmc
cmc
add
repnz
in
in
add
jmp
in
in
loopne
loopne
fstp
fld
fcmovnu
fild
(bad)
fld
(bad)
(bad)
(bad)
add
into
into
add
cmps
cmps
add
nop
nop
add
mov
add
jo
bound
add
cmp
add
xor
add
sub
and
and
push
push
push
add
add
add
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
hlt
hlt
hlt
hlt
hlt
hlt
push
push
push
push
push
push
push
push
push
hlt
sbb
sbb
push
push
push
push
push
push
hlt
and
mov
push
push
push
push
hlt
sub
mov
movs
xchg
cmps
cmc
push
push
push
sub
cmp
or
cmps
cmc
push
push
cmp
inc
inc
das
repz
cmps
mov
inc
dec
dec
add
or
push
cmp
or
out
or
mov
mov
sti
(bad)
mul
jp
xchg
mov
mov
cmp
xchg
push
push
mov
cmp
js
add
push
mov
in
pop
pop
pusha
imul
push
mov
pop
pop
push
pop
jae
push
push
push
push
push
push
mov
arpl
cmc
push
push
push
push
push
push
push
push
push
mov
push
push
push
push
push
push
(bad)
dec
repz
xor
xor
add
movs
add
mov
add
or
add
repz
add
cmp
add
inc
add
push
add
cmps
rol
cmps
loopne
xchg
xchg
aas
or
add
dec
adc
add
add
add
add
add
add
add
gs
add
(bad)
inc
add
and
and
add
and
inc
sub
add
sbb
gs
(bad)
inc
add
mov
sub
add
push
mov
add
add
add
sbb
add
gs
add
add
add
bound
imul
outs
ins
and
jb
jae
outs
jo
add
(bad)
inc
add
outs
or
add
add
push
add
add
add
add
bound
xor
add
je
gs
outs
and
and
jb
popa
je
outs
and
ins
and
and
outs
jb
popa
je
outs
outs
add
(bad)
inc
add
outs
or
add
add
add
add
add
push
pop
add
popa
xor
add
add
add
add
add
add
add
add
add
add
and
add
add
add
add
add
add
add
adc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
inc
add
add
add
inc
inc
add
inc
inc
(bad)
inc
add
(bad)
inc
add
add
add
add
add
or
mov
add
add
add
or
(bad)
lock
add
add
add
or
lock
lock
add
add
or
or
push
loopne
(bad)
(bad)
dec
add
add
add
loopne
(bad)
(bad)
push
(bad)
(bad)
push
add
add
add
loopne
(bad)
(bad)
push
push
add
add
add
add
loopne
(bad)
(bad)
push
add
(bad)
inc
add
add
push
loopne
(bad)
(bad)
dec
(bad)
(bad)
(bad)
inc
add
add
push
loopne
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
or
loopne
(bad)
(bad)
(bad)
(bad)
(bad)
inc
(bad)
(bad)
(bad)
push
add
add
ud0
(bad)
push
(bad)
(bad)
push
add
add
add
add
(bad)
(bad)
(bad)
(bad)
inc
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
sar
push
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
jg
add
add
add
add
add
add
add
add
add
jmp
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
add
add
add
add
add
add
add
add
add
rol
add
add
add
add
add
add
add
add
inc
add
add
add
inc
inc
add
inc
inc
(bad)
inc
add
(bad)
inc
add
mov
inc
add
add
add
add
add
add
(bad)
clc
add
add
add
push
push
push
add
ud0
or
add
inc
add
inc
add
inc
add
inc
add
aas
add
add
add
add
add
add
add
add
add
add
add
add
add
cmp
add
(bad)
inc
add
inc
add
inc
add
inc
add
fcomp
inc
or
add
add
add
add
push
add
popa
xor
sbb
xchg
add
jle
add
add
add
add
adc
add
add
or
push
add
add
add
add
add
add
add
add
add
add
(bad)
inc
add
add
fstp
fld
stc
clc
stc
add
out
lock
add
add
jns
out
in
(bad)
sti
cld
add
clc
stc
add
jmp
add
add
push
push
add
outs
add
aad
add
jne
imul
add
(bad)
add
fcomp
add
sbb
add
dec
dec
add
and
pop
add
xor
add
adc
dec
inc
aas
add
dec
add
sub
add
cmp
mov
or
add
push
xor
xor
daa
add
call
sldt
pop
aaa
add
ja
add
inc
sldt
push
sbb
add
pop
and
retf
add
and
shl
add
sbb
shr
add
(bad)
jno
add
mov
add
jne
add
js
add
jl
add
ja
add
sub
in
push
add
mov
add
mov
push
add
xchg
sub
icebp
(bad)
xchg
add
call
in
(bad)
add
out
add
ror
add
(bad)
add
fcompp
add
rcl
add
(bad)
inc
idiv
test
add
push
(bad)
(bad)
add
test
add
mov
test
add
mov
and
sahf
add
leave
mov
sub
xchg
add
cmps
add
lds
add
je
add
add
xchg
pusha
add
mov
add
add
outs
add
mov
add
mov
pop
add
xchg
ins
add
cmps
jle
xchg
aam
add
jno
add
arpl
add
add
pushf
ins
add
xchg
push
sbb
jo
dec
mov
jp
fldlg2
out
add
add
pop
inc
add
add
ins
pop
add
in
add
pop
add
repnz
add
ins
add
jmp
add
dec
dec
add
pop
push
add
push
add
add
(bad)
inc
data16
pop
add
jecxz
add
shr
add
loop
add
add
mov
add
scas
fadd
add
in
push
scas
xlat
add
mov
add
mov
add
scas
aam
or
xlat
add
mov
loopne
adc
fiadd
sbb
jecxz
sbb
lods
add
mov
jecxz
and
lea
inc
(bad)
dec
retf
push
retf
push
retf
out
pop
into
jmp
add
jmp
data16
sbb
add
repz
add
std
inc
inc
into
cmc
add
cmc
add
clc
cld
add
aaa
cmp
cmc
sti
inc
loop
cmc
add
(bad)
xlat
add
inc
lock
inc
repnz
in
add
dec
repz
dec
in
add
push
test
sub
add
push
stc
add
push
cmc
add
pop
cld
add
pop
sti
add
push
cli
add
push
repz
pop
inc
xor
xor
add
push
in
add
pusha
inc
ss
in
add
inc
inc
ins
inc
dec
jae
add
add
inc
push
inc
jp
inc
test
cli
add
int
add
dec
inc
pop
outs
cld
add
ds
add
dec
add
cld
cld
add
cmc
cmc
add
repnz
in
in
add
jmp
in
in
loopne
loopne
fstp
fld
fcmovnu
fild
(bad)
fld
(bad)
(bad)
(bad)
add
into
into
add
cmps
cmps
add
nop
nop
add
mov
add
jo
bound
add
cmp
add
xor
add
sub
and
and
push
push
push
add
add
add
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
hlt
hlt
hlt
hlt
hlt
hlt
push
push
push
push
push
push
push
push
push
hlt
sbb
sbb
push
push
push
push
push
push
hlt
and
mov
push
push
push
push
hlt
sub
mov
movs
xchg
cmps
cmc
push
push
push
sub
cmp
or
cmps
cmc
push
push
cmp
inc
inc
das
repz
cmps
mov
inc
dec
dec
add
or
push
cmp
or
out
or
mov
mov
sti
(bad)
mul
jp
xchg
mov
mov
cmp
xchg
push
push
mov
cmp
js
add
push
mov
in
pop
pop
pusha
imul
push
mov
pop
pop
push
pop
jae
push
push
push
push
push
push
mov
arpl
cmc
push
push
push
push
push
push
push
push
push
mov
push
push
push
push
push
push
(bad)
dec
repz
xor
xor
add
movs
add
mov
add
or
add
repz
add
cmp
add
inc
add
push
add
cmps
rol
cmps
loopne
xchg
xchg
aas
or
add
add
lock
add
add
add
add
add
push
add
gs
xor
add
test
add
add
add
add
add
push
add
gs
xor
add
pop
pop
out
add
add
pop
add
add
add
add
push
add
gs
xor
add
pop
pop
out
add
add
pop
add
add
add
add
push
add
gs
xor
add
pop
pop
out
add
add
pop
add
add
add
add
add
gs
xor
add
pop
push
out
add
add
pop
add
add
add
dec
xor
sbb
cmc
dec
mov
cmps
adc
mov
outs
pop
fst
sub
lea
loope
dec
lods
xor
or
stos
add
xchg
jo
add
dec
and
add
or
data16
push
gs
jne
arpl
add
push
bound
imul
popa
arpl
sub
jb
push
gs
jne
arpl
add
add
inc
add
popf
and
add
add
fdivr
loopne
adc
dec
inc
add
add
add
sub
add
fild
inc
add
add
add
add
add
add
add
add
or
pop
push
or
or
or
or
or
push
adc
or
adc
adc
adc
pop
sbb
adc
adc
inc
add
add
add
add
or
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
inc
add
or
loopne
add
and
add
add
adc
inc
add
add
add
add
add
add
or
inc
add
add
add
add
add
jge
add
add
add
push
adc
pop
and
xor
inc
mov
adc
xor
or
push
pop
sbb
sbb
sub
cmp
inc
inc
inc
dec
dec
dec
push
push
push
push
push
pop
pop
pop
arpl
addr16
jne
ja
jns
add
xchg
xchg
xchg
xchg
xchg
xchg
cwde
cdq
call
test
stos
mov
mov
mov
mov
(bad)
(bad)
enter
rcl
aad
xlat
fcomp
(bad)
loop
in
out
call
repz
cmc
div
clc
stc
cli
inc
add
add
add
add
add
add
add
add
add
add
add
add
or
inc
add
add
add
add
add
add
add
add
and
push
adc
pop
popa
jno
and
or
mov
or
xor
adc
push
and
loope
icebp
pop
sbb
sbb
daa
sub
sub
cmp
inc
inc
inc
dec
dec
dec
push
push
push
push
push
pop
pop
pop
arpl
addr16
jne
ja
jns
add
mov
xchg
xchg
cwde
cdq
call
test
stos
mov
mov
mov
mov
(bad)
(bad)
enter
rcl
aad
xlat
fcomp
(bad)
jecxz
in
out
jmp
cmc
div
clc
stc
cli
(bad)
fiadd
or
add
add
add
add
add
and
add
or
cmp
clc
call
bound
inc
mov
jg
xor
ret
out
in
inc
out
xchg
inc
and
cmp
loope
ficom
jg
pop
pop
sbb
mov
inc
clc
call
bound
add
mov
sbb
in
xchg
inc
loopne
les
adc
mov
mov
add
inc
icebp
push
mov
(bad)
cmp
pop
push
xchg
inc
fisttp
jmp
jmp
sbb
test
(bad)
fxch
inc
(bad)
sar
add
aaa
ret
dec
aas
in
add
mov
es
ffreep
cmps
(bad)
arpl
inc
xor
sbb
mov
add
inc
sbb
mov
cli
push
pop
clc
add
add
aas
mov
out
stc
cld
inc
lock
add
(bad)
jg
dec
jg
test
clc
pop
pop
sbb
add
xor
xor
sahf
pop
inc
mov
xor
es
pop
std
push
hlt
out
cld
or
ret
aas
inc
mov
dec
cld
retf
inc
retf
jg
repz
shl
mov
xor
cld
test
add
cld
dec
and
scas
loope
xchg
add
adc
xor
sbb
add
mov
fdivr
jae
cmc
inc
lahf
movs
inc
sbb
add
inc
add
xchg
in
repz
inc
loopne
inc
and
inc
icebp
pop
ret
push
inc
enter
xor
and
add
cld
dec
jl
(bad)
rol
dec
pop
(bad)
inc
fcmovne
jg
push
mov
jg
fwait
pop
pusha
hlt
inc
dec
dec
icebp
test
add
inc
dec
nop
in
repz
inc
loopne
inc
and
test
xor
cmp
fisttp
cld
sub
mov
aas
clc
call
inc
aas
(bad)
stos
dec
loop
xor
pusha
xor
jp
stc
sar
add
inc
dec
inc
xchg
xor
add
mov
lock
add
loopne
cmp
rol
add
shl
clc
mov
jmp
xchg
lods
pop
into
fwait
cmp
int
cmp
call
into
adc
mov
jb
pop
and
or
inc
outs
dec
inc
xchg
sbb
xor
loopne
inc
and
sub
mov
push
mov
pop
lea
sbb
jae
add
clc
push
push
push
dec
dec
sub
or
dec
sti
jbe
ja
mov
imul
es
popf
ins
(bad)
push
push
rol
add
icebp
hlt
lahf
jecxz
jecxz
and
or
repnz
retf
and
xchg
aad
inc
pop
adc
cs
out
dec
std
mov
inc
mov
fist
add
xor
xor
sbb
std
push
mov
cld
or
stos
idiv
lock
stos
in
push
cs
in
cmc
stos
jl
les
pop
stos
das
cld
add
xchg
call
clc
adc
enter
push
xchg
xchg
cld
les
es
fdivr
arpl
jne
cli
in
pop
daa
(bad)
sbb
clc
call
xor
push
mov
popf
jae
jmp
mov
sti
movs
aad
sbb
inc
dec
pop
aas
pop
retf
std
jbe
ds
push
inc
or
xchg
cmp
scas
inc
lock
add
loopne
jg
aaa
inc
xchg
repz
adc
icebp
out
mov
aam
ja
mov
mov
sahf
cli
popf
cwde
inc
mov
inc
sbb
mov
movs
scas
sub
(bad)
pushf
test
cmps
(bad)
mov
mov
repnz
xchg
push
in
pop
fstp
cld
or
in
mov
add
mov
dec
cmp
xlat
or
add
mov
jecxz
fcmove
inc
les
mov
out
ret
dec
cmps
cmp
cwde
inc
cmp
aas
icebp
scas
cmp
push
(bad)
imul
xchg
jle
sbb
xlat
mov
sub
ins
xlat
fcomp
inc
xchg
jg
inc
cld
(bad)
mov
loope
clc
or
arpl
add
inc
loop
aas
loope
clc
or
add
je
rcl
outs
(bad)
and
test
out
pop
loop
and
repz
lahf
(bad)
dec
inc
push
mov
iret
das
mov
lahf
lock
add
add
inc
cld
inc
add
xor
addr16
daa
mov
inc
mov
sub
leave
jecxz
push
loop
mov
lahf
(bad)
dec
aad
psllq
out
pop
cld
mov
outs
cld
xor
add
pop
sbb
add
xchg
fninit
mov
scas
in
push
mov
call
mov
fs
xchg
shr
sbb
cmp
and
repnz
inc
in
fnstcw
inc
jae
pop
mov
int
xchg
cmc
(bad)
pop
lock
inc
stos
xchg
inc
pop
and
add
imul
sub
stc
lds
sar
pop
and
hlt
test
aam
jo
imul
mov
and
retf
inc
push
jo
pop
retf
inc
and
dec
clc
pop
sahf
adc
aas
test
(bad)
and
mov
inc
jle
inc
loop
out
idiv
ins
adc
pop
jmp
popa
sbb
dec
xor
inc
leave
sbb
pop
ret
aaa
fs
scas
repnz
aas
push
jl
mov
add
add
push
cld
imul
xor
mov
and
test
bound
loop
jnp
cmp
cmps
loop
popa
jnp
cmps
pop
jmp
clc
dec
adc
xchg
sti
mov
(bad)
fiadd
nop
(bad)
mov
mov
cld
inc
dec
addr16
rol
test
and
movs
jl
inc
bnd
imul
ins
jb
pushf
shl
test
je
jmp
ret
sbb
xor
push
xchg
fidivr
cs
push
xchg
aad
mov
add
imul
test
ss
cmp
add
sub
dec
pop
imul
fcmovne
inc
repz
pop
fcomp
lods
jmp
adc
inc
leave
sbb
loope
xor
mov
inc
and
mov
(bad)
dec
mov
jmp
jg
and
jg
mov
pop
enter
sbb
inc
fs
test
xchg
loopne
lds
stc
push
imul
stos
js
call
inc
and
inc
stos
fsubr
out
fidivr
imul
and
inc
scas
cmp
add
fisttp
inc
ret
out
inc
mov
aas
jmp
jg
and
pop
js
cmp
imul
loop
data16
jo
movs
inc
leave
add
ins
add
jb
xlat
inc
and
pop
(bad)
iret
add
call
jg
adc
sbb
jbe
stc
cmc
inc
inc
cwde
jg
xchg
repnz
adc
arpl
inc
mov
rol
jno
imul
inc
leave
push
ins
outs
pop
ret
xor
(bad)
(bad)
xor
xor
stc
mov
(bad)
and
jbe
(bad)
jg
pop
outs
(bad)
and
outs
pop
nop
xor
pop
mov
jb
dec
shr
aad
stc
and
test
push
ret
into
push
jl
ror
jg
cmc
mov
in
adc
cs
adc
fcomp
dec
std
adc
clc
ins
inc
jg
and
(bad)
mov
jl
loop
pop
mov
cmp
cmp
out
retf
(bad)
mov
pop
je
stc
and
push
mov
ds
mov
mov
addr16
inc
mov
arpl
lods
adc
jg
outs
(bad)
es
xor
add
shl
mov
adc
pop
xchg
cmps
test
ss
pushf
das
call
aaa
ret
lods
movs
sub
repnz
dec
loope
and
adc
mov
jecxz
add
loope
jg
(bad)
inc
leave
dec
(bad)
(bad)
and
out
xlat
je
xor
stc
mov
out
outs
in
repz
test
jge
aas
mov
mov
cli
scas
cmp
jge
cld
(bad)
mov
fistp
inc
test
inc
adc
xor
ret
jae
add
pop
dec
jg
adc
xchg
sub
adc
fsubr
add
int3
iret
stc
and
dec
inc
xchg
pop
cli
scas
cmp
jge
cld
(bad)
mov
xchg
push
outs
dec
mov
aas
call
add
fistp
mov
cld
inc
jle
movs
aam
int3
and
fcmovb
out
pop
xchg
lea
xchg
iret
out
jae
sub
sub
movs
inc
leave
sbb
sub
mov
int
add
mov
jmp
dec
das
(bad)
fild
daa
(bad)
inc
aas
jmp
outs
(bad)
and
pop
dec
pushf
lahf
ds
push
sub
pop
xor
jnp
ja
xchg
inc
and
xchg
jp
add
in
popa
icebp
inc
ror
dec
inc
clc
mov
rcr
rol
jmp
jg
and
je
bound
test
add
iret
mov
and
sbb
out
fidivr
pop
mov
mov
cld
inc
dec
sti
dec
cld
xor
mov
addr16
xchg
jne
das
mov
xchg
push
cmp
jle
xlat
mov
scas
in
loope
dec
jg
inc
dec
xchg
popf
addr16
mov
inc
or
int3
retf
pushf
inc
rcl
dec
jg
pop
xchg
scas
mov
add
aas
cld
outs
mov
leave
aas
je
out
inc
stos
retf
loope
test
repz
mov
jg
inc
inc
stos
sbb
xchg
fidivr
sbb
cdq
fwait
inc
and
jg
fld
mul
addr16
clc
add
jmp
arpl
sub
stc
inc
dec
mov
pop
in
adc
es
push
lds
inc
mov
inc
cld
movs
inc
leave
pop
cli
mov
jmp
jge
cld
(bad)
mov
xchg
arpl
js
pop
pop
hlt
jmp
(bad)
imul
popf
mov
popf
push
sti
pop
dec
jg
jne
out
sub
mov
mov
jp
jno
in
popa
outs
dec
jg
inc
jg
pop
aas
out
fidivr
add
sub
clc
add
jmp
repnz
and
adc
aas
arpl
and
adc
(bad)
push
pop
jb
loop
les
gs
sbb
test
jmp
xchg
jp
pop
jp
add
out
out
clc
push
push
pop
clc
or
inc
sbb
js
add
sbb
aaa
pop
push
pop
pop
cmp
data16
push
ins
jne
lds
xchg
jno
mov
jae
je
jmp
test
jnp
retf
out
pop
in
aad
add
repz
jnp
inc
les
inc
clc
or
icebp
pop
imul
aas
inc
sbb
mov
loopne
fcmovne
jno
mov
loop
lea
lahf
(bad)
dec
inc
push
mov
fxch
pop
jp
add
jmp
jg
das
xchg
sbb
mov
inc
jecxz
ds
inc
cld
cmp
ds
pop
xor
pop
int3
nop
inc
pop
fldcw
push
out
adc
xchg
leave
loop
daa
aam
xchg
push
ror
imul
sbb
lock
(bad)
jecxz
fwait
sub
xor
sbb
jmp
cmp
fnstsw
in
int
pop
fld
imul
enter
xor
aad
jecxz
inc
cmp
neg
cli
sub
push
stos
ret
dec
das
mov
cmp
call
daa
ret
nop
fcomp
adc
mov
jmp
sbb
leave
cmp
inc
pop
jns
sbb
(bad)
jo
and
dec
lea
and
(bad)
xlat
dec
loopne
push
dec
push
or
jns
mov
mov
sahf
sub
and
xor
jne
dec
xchg
cwde
ja
lea
imul
(bad)
daa
pop
iret
and
icebp
add
mov
stos
dec
mov
call
add
bound
sbb
xchg
movs
dec
xchg
mov
out
mov
lods
pop
adc
ds
xchg
mov
add
mov
mov
jg
jp
inc
sar
icebp
retf
ds
dec
cmp
inc
push
repz
icebp
jne
xlat
in
sub
stos
pop
sub
les
arpl
fwait
(bad)
stc
or
(bad)
call
stc
sbb
adc
mov
scas
cld
adc
pop
repz
inc
loopne
jg
mov
ficomp
add
add
xlat
(bad)
push
(bad)
rcr
gs
dec
sbb
into
dec
mov
xor
dec
(bad)
jne
pop
or
(bad)
xor
shr
aaa
icebp
inc
imul
(bad)
jp
adc
xor
into
rol
xor
movs
scas
sub
jle
aas
leave
xor
cmp
mov
inc
add
rol
cld
into
idiv
add
loopne
sbb
add
add
inc
mov
cmp
jl
icebp
sub
jmp
mov
xlat
or
rol
xchg
mov
sub
ja
sti
inc
js
jmp
push
sbb
(bad)
les
xlat
out
scas
test
mov
adc
mov
(bad)
test
push
jne
xor
(bad)
and
or
cmps
(bad)
stc
popf
outs
inc
lock
mov
ja
mov
cld
add
cs
jecxz
(bad)
sub
les
inc
lods
dec
les
push
xchg
jecxz
les
cli
push
jl
inc
or
clc
stos
in
pop
jl
dec
icebp
les
repnz
in
mov
das
out
mov
xor
out
inc
sub
add
sar
add
mov
out
mov
mov
xlat
lea
mov
repnz
jo
push
mov
adc
iret
clc
pop
inc
adc
ja
pop
dec
test
pop
test
das
repnz
out
ds
hlt
cmp
jg
or
add
je
lock
sub
scas
cld
add
cs
iret
icebp
pop
inc
shr
sub
inc
shl
loop
cld
sbb
add
push
cli
scas
inc
inc
or
pop
in
pop
sar
idiv
add
ds
aas
lock
or
jmp
or
add
ror
adc
(bad)
add
add
add
jne
and
test
out
icebp
pop
dec
stos
pop
clc
xlat
icebp
or
int3
cmc
loop
cld
sbb
inc
lds
push
xor
add
shrd
xlat
loop
cmp
loopne
sbb
add
add
inc
mov
cwde
fcomip
cmp
inc
loopne
inc
icebp
jne
repz
clc
mov
add
mov
add
imul
add
mov
inc
push
mov
add
push
(bad)
stos
cdq
inc
rol
xchg
stc
pand
mov
add
xchg
mov
inc
cdq
fsubrp
inc
add
aam
inc
add
ror
cld
iret
pop
jg
das
pop
(bad)
cs
adc
inc
push
sar
add
push
add
jne
nop
aas
out
icebp
das
dec
call
add
out
pop
in
outs
cmp
lahf
pop
mov
arpl
xor
xor
(bad)
or
inc
mov
add
rcr
(bad)
addr16
inc
sbb
xchg
pop
jecxz
les
add
inc
pop
push
dec
icebp
out
push
jmp
add
aaa
lahf
inc
mov
add
out
pop
in
outs
cmp
lahf
pop
mov
mov
xchg
in
icebp
in
fsubr
pushf
movs
jg
retf
test
cmp
fcmovu
fstp
mov
push
mov
or
jmp
mov
or
inc
cmp
xor
jg
dec
(bad)
ret
das
les
adc
inc
jne
enter
fdivr
sub
scas
ds
shl
out
mov
cmp
data16
test
mov
loop
push
jb
cmp
cmp
push
dec
adc
pop
mov
xor
and
mov
adc
data16
inc
and
cmp
jecxz
stos
pop
jl
jle
mov
add
bound
mov
xchg
mov
xchg
mov
sub
inc
add
test
sar
cmps
xchg
icebp
xor
test
call
pop
scas
fst
xchg
mov
dec
or
out
data16
call
cmps
mov
je
sahf
adc
pop
sti
(bad)
mov
mov
aas
xchg
ds
ins
sub
xchg
lods
cmc
jmp
dec
sbb
mov
sub
xchg
push
jmp
mov
dec
in
jns
push
sti
jmp
jne
mov
sub
adc
dec
ret
shl
jmp
sub
mov
jmp
(bad)
lahf
xchg
push
sti
xchg
aad
ret
(bad)
adc
in
sbb
cmc
scas
retf
in
mov
call
jp
pop
mov
or
pop
retf
nop
sub
adc
or
pop
test
or
mov
mov
and
adc
or
int
out
cmc
scas
mov
dec
ins
jb
stos
push
movs
sub
loopne
mov
lea
jmp
imul
fisub
sti
jmp
sub
scas
and
jnp
call
xchg
out
pop
lahf
xchg
cmp
sub
fild
mov
aas
inc
jnp
inc
sbb
mov
push
cmp
icebp
ss
out
(bad)
pop
push
fwait
retf
popa
addr16
rcr
push
fdivr
dec
adc
pop
dec
push
sbb
bound
jb
mov
inc
push
and
lods
shr
pop
pusha
jnp
sbb
jno
adc
sub
sub
(bad)
and
ret
and
imul
jp
rcl
bound
frstor
and
pop
rcr
sbb
je
push
or
mov
jp
test
lods
(bad)
fld
outs
pop
mov
jecxz
inc
add
stos
ja
loop
mov
leave
cmps
pop
fucomip
push
push
xor
int
test
mov
pop
lods
dec
shl
mov
or
shl
jne
inc
jle
enter
stos
jp
jns
in
ins
pop
retf
aad
pusha
jmp
inc
adc
nop
jb
les
jnp
cmps
test
sahf
icebp
and
push
popf
sub
jns
xor
retf
adc
dec
test
sahf
cwde
stos
mov
adc
shl
xchg
push
or
jp
mov
nop
shl
aam
repz
leave
sbb
jle
cli
jl
aad
pop
test
call
pop
ret
mov
add
mov
cmps
sbb
sub
fnstenv
mov
xor
sbb
or
icebp
xor
push
ins
and
lock
push
lods
lds
xchg
mov
push
test
cdq
push
xchg
mov
push
lahf
or
mov
inc
daa
add
push
mov
xor
pop
and
jge
push
dec
push
cwde
int
test
fisubr
jae
push
mov
ret
mov
sti
mov
mov
cmc
sbb
sbb
pop
or
dec
jl
in
sbb
pop
sub
lds
ret
fs
mov
cmp
stos
push
lea
jge
jo
push
imul
gs
imul
sub
pop
mov
icebp
inc
xchg
and
pop
sbb
test
push
cli
test
stos
ficomp
rcr
cs
xchg
adc
(bad)
(bad)
mov
push
ret
cmp
dec
out
cs
xchg
sbb
outs
sahf
pop
mov
mov
je
fs
mov
push
jno
jp
pushf
mov
mov
jo
xchg
xchg
out
sub
iret
mov
(bad)
test
xor
jp
mov
in
or
add
cld
sub
shl
mov
gs
or
ret
adc
cmp
pop
xchg
repz
adc
aam
mov
push
aaa
das
adc
enter
retf
cmc
and
mov
lea
cdq
xor
or
call
pop
sbb
(bad)
xchg
(bad)
jecxz
or
mov
pop
sbb
jp
hlt
fwait
mov
into
rcl
adc
shl
cmp
xchg
gs
imul
cmps
push
pusha
data16
add
test
das
shl
inc
xor
pusha
mov
enter
iret
sub
and
xor
inc
imul
(bad)
ja
loop
enter
push
inc
mov
pop
jge
mov
and
pop
mov
dec
lock
ins
jo
lods
pop
imul
sti
hlt
scas
dec
add
out
cdq
leave
mov
lahf
mov
mov
jnp
add
aaa
mov
pop
jno
add
fiadd
mov
outs
adc
iret
outs
adc
in
adc
xor
adc
add
and
daa
jmp
ds
and
lods
mov
out
ins
retf
fisttp
pop
mov
mov
ja
daa
inc
push
out
out
cwde
scas
cdq
loopne
sbb
ret
inc
xchg
outs
pop
inc
fcomp
push
inc
shr
pop
mov
sbb
aas
test
jg
stos
push
icebp
fs
adc
jge
sti
pop
sub
icebp
aas
jecxz
loopne
fild
pop
mov
in
mov
jg
mov
inc
iret
adc
inc
fsubr
jb
xor
mov
les
add
popf
aas
sub
call
cmps
loopne
xlat
repnz
inc
jns
sub
popf
jns
ror
push
les
pop
inc
clc
jne
fistp
imul
cs
push
popa
mov
out
scas
push
aaa
call
jne
push
arpl
cld
adc
jp
in
vmaxps
jl
lods
fistp
repnz
pop
jle
and
cmps
mov
jecxz
and
movs
movs
dec
xor
movs
dec
pop
cli
fsubp
fnstcw
adc
xlat
ret
mov
std
jbe
das
push
jmp
dec
sti
push
mov
adc
push
shl
int
ds
and
ret
aam
lds
fisttp
jg
js
add
push
aam
ins
outs
add
adc
dec
cmp
adc
fs
scas
add
fucomip
movs
jecxz
cmp
xchg
dec
icebp
mov
lahf
sbb
cmps
aad
jae
cmp
or
outs
or
shl
scas
mov
je
popf
inc
or
mov
add
stc
xchg
ins
arpl
add
pop
dec
je
jge
stc
sbb
pushf
dec
test
mov
(bad)
cmp
or
inc
mov
adc
dec
jg
jmp
stc
push
(bad)
sbb
pop
out
push
cmp
mov
xor
loop
mov
gs
mov
scas
fild
pop
dec
gs
push
dec
loop
in
loopne
push
sub
daa
add
cmp
mov
pop
test
dec
adc
adc
xchg
outs
xchg
or
daa
jo
in
mov
inc
outs
mov
sbb
ins
jmp
sbb
out
aas
mov
jns
lods
pop
add
sbb
popa
or
cli
sbb
mov
pop
mov
sub
fcmove
iret
cmps
push
arpl
sub
pop
pushf
popf
fucomi
out
jge
icebp
sahf
dec
(bad)
cld
and
mov
cmp
xchg
stos
shl
lock
sbb
jns
test
pop
pop
sbb
mov
mov
dec
repnz
test
push
out
mov
les
pop
mov
push
fldcw
push
std
mov
(bad)
or
nop
sub
mul
jmp
fisttp
pop
mov
loopne
adc
mov
aaa
call
test
(bad)
rcr
std
psllw
lahf
ret
call
ror
cld
cmp
ret
adc
xchg
pop
push
cmp
test
xchg
or
addr16
push
rol
pop
dec
idiv
stc
daa
stc
popf
push
movs
dec
adc
xlat
xchg
jbe
inc
xlat
fdivr
in
pop
loopne
add
loop
test
inc
mov
enter
adc
and
xchg
repz
(bad)
push
sbb
aas
adc
and
jnp
ds
shl
aas
clc
dec
loope
stc
cmps
mov
jmp
mov
and
mov
inc
dec
adc
(bad)
cmp
jecxz
add
mov
cld
pop
stos
js
iret
push
nop
shr
mov
jns
out
fcomp
dec
fadd
add
jno
stc
pop
daa
or
jle
inc
pop
sar
sahf
push
lea
sbb
sub
jmp
js
loop
(bad)
bsf
push
sub
mov
popa
aam
scas
ret
xchg
call
cmp
fiadd
inc
icebp
jle
ficomp
mov
push
xchg
inc
cmp
sbb
ins
cli
push
jae
xor
jnp
(bad)
loope
push
ror
push
jae
push
mov
shl
pop
(bad)
lods
xor
inc
mov
ret
mov
pop
push
aam
je
out
jmp
outs
push
inc
xchg
popa
jmp
pop
mov
jl
clc
test
sti
pop
call
mov
mov
push
call
push
and
int3
jo
shl
jmp
aas
loope
fst
aam
outs
das
inc
mov
mov
inc
arpl
sub
xbegin
mov
xchg
xchg
stos
sub
(bad)
(bad)
mov
repnz
dec
or
mov
xchg
popa
xor
or
inc
xchg
arpl
add
xchg
dec
add
pop
outs
les
dec
loopne
add
xchg
call
jle
pop
ss
rcr
and
push
or
xchg
add
jb
imul
std
xchg
cld
pop
jge
jle
push
clc
mov
or
les
(bad)
xor
push
in
pop
jne
jo
pop
retf
test
xor
inc
mov
(bad)
xchg
icebp
(bad)
test
xor
aad
sub
and
in
fbld
rol
or
fdiv
aam
addr16
ret
ficomp
retf
cmps
test
popa
in
sar
jno
or
mov
(bad)
test
(bad)
clc
inc
dec
push
push
rcr
mov
hlt
mov
fmul
add
mov
pop
or
ret
sar
pop
xor
fimul
call
mov
int
jno
cs
sub
push
xor
push
popa
rcr
xlat
(bad)
fadd
inc
iret
iret
sar
xchg
ret
dec
repnz
sub
fs
mov
cld
cmp
lods
mov
sbb
push
ret
aaa
push
jo
int
mov
add
retf
sbb
sub
add
sbb
aas
adc
fisttp
fstp
and
(bad)
fwait
test
push
mov
and
and
inc
jne
aam
sub
pusha
stos
cmp
scas
in
mov
jle
clc
sub
mov
mov
add
fld
pop
push
mov
mov
sbb
not
cmp
add
jmp
jno
mov
xchg
jo
jg
push
inc
inc
dec
scas
xor
les
sbb
xchg
jno
sbb
daa
outs
push
xchg
jmp
das
hlt
ds
xchg
outs
push
retf
dec
icebp
cmp
test
ins
sbb
mov
sub
add
sub
int
bound
fisub
jb
xlat
push
nop
lods
lods
(bad)
jmp
sbb
lahf
dec
cli
xor
adc
inc
nop
xchg
inc
jecxz
cld
xchg
loop
inc
fwait
jecxz
fwait
pop
push
cmovb
fsubr
jb
test
repnz
ds
inc
xor
lahf
dec
jns
imul
jp
xlat
imul
cmp
std
pushf
jl
movs
mov
mov
or
daa
pop
clc
in
mov
int
popa
or
in
stc
call
jl
pop
xchg
mov
pop
jns
cli
repz
test
repz
cmp
add
std
(bad)
sar
jp
imul
scas
loop
retf
mov
sahf
sahf
je
aas
out
fnsave
mov
mov
push
add
rol
add
dec
xor
add
cmp
xchg
add
sub
(bad)
cmp
rcr
or
sbb
sbb
stc
mov
cmp
mov
mov
mov
mov
sub
cld
outs
mov
inc
add
adc
test
jns
jbe
std
cmps
sbb
pop
addr16
mov
loopne
jge
test
xchg
pop
fidivr
push
lds
cld
adc
sbb
in
jbe
(bad)
fidivr
inc
adc
add
sub
je
xchg
mov
and
cmp
data16
aaa
push
push
sub
mov
out
popf
xor
ds
mov
mov
inc
retf
test
cmp
dec
clc
mov
cli
dec
popa
sar
mov
add
mov
in
mov
aas
int3
mul
fwait
pusha
sub
loopne
or
call
push
sbb
mov
ret
inc
inc
(bad)
std
jne
inc
(bad)
sar
bound
jne
sbb
fistp
aad
stos
stc
xlat
std
add
cmp
cld
(bad)
xor
jl
xor
call
in
imul
in
xchg
jecxz
sub
or
into
xchg
inc
(bad)
aad
sti
push
clc
mov
inc
leave
cmp
add
inc
sbb
pop
or
out
je
push
push
retf
mov
in
xor
pop
ins
xor
jo
nop
scas
push
adc
push
dec
or
cli
inc
xor
xchg
retf
mov
add
into
test
mov
sbb
hlt
sar
add
mov
loop
mov
(bad)
into
sbb
test
imul
adc
cwde
jmp
pop
fnsave
mov
(bad)
xchg
mov
push
ror
mov
sbb
mov
cmp
dec
daa
mov
(bad)
(bad)
jne
enter
pop
fbstp
mov
cmp
ror
stc
into
jno
xchg
popf
jnp
lods
(bad)
fldenv
jp
mov
jle
mov
test
retf
cmps
xchg
(bad)
cld
xchg
lock
push
sbb
cmps
inc
jecxz
shr
sbb
pushf
jns
sbb
jg
int
xor
out
iret
sub
(bad)
cli
and
push
dec
aas
les
mov
sub
arpl
xchg
cld
pop
mov
xor
es
inc
(bad)
aad
lahf
fdivr
lds
pop
push
inc
sbb
xchg
inc
(bad)
(bad)
jo
pushf
jmp
enter
jnp
mov
dec
clc
push
mov
pop
imul
add
sub
sub
inc
js
cmps
mov
imul
pop
mov
mov
mov
inc
sub
push
jmp
jne
clc
cmp
in
repnz
aas
int3
retf
or
into
les
(bad)
sbb
in
push
jmp
and
jmp
stos
mov
dec
fld
(bad)
mov
pop
scas
test
jecxz
pusha
imul
cmp
repz
(bad)
inc
or
loop
cli
or
fcomip
cli
pop
(bad)
xor
lds
aas
jmp
mov
jl
cmp
mov
add
push
in
xor
stos
xor
out
ret
pop
(bad)
enter
cmp
adc
inc
(bad)
jmp
jecxz
es
dec
cmp
sti
fnstcw
clc
fnsave
stos
fnstcw
leave
std
scas
add
mov
ds
jno
cmps
imul
xchg
aaa
mov
xchg
inc
mov
push
mov
add
pop
aas
clc
(bad)
test
dec
pop
dec
sub
out
sub
ins
(bad)
out
xor
cdq
sbb
push
dec
movs
push
push
cmp
pop
xlat
aaa
in
mov
mov
xchg
inc
mov
cmc
scas
dec
mov
sbb
cmp
pushf
push
xchg
aad
rcl
lock
xchg
jmp
xchg
imul
jno
imul
cmp
add
shl
dec
mov
mov
fwait
daa
aas
stc
push
scas
inc
sti
xor
xchg
add
jns
sub
pop
sti
dec
mov
aaa
fwait
push
test
cmp
fdivr
push
mov
sub
fisttp
lea
sbb
fbld
fwait
movs
mov
mov
icebp
mov
adc
push
test
add
int
dec
inc
movs
mov
sahf
outs
and
cli
ins
xchg
sbb
mov
xor
pop
cmp
xchg
stos
shr
xor
xor
add
inc
jecxz
add
mov
add
xchg
xor
add
inc
jecxz
je
adc
ja
push
add
dec
sbb
(bad)
movs
jnp
(bad)
in
cmps
loop
jno
push
rol
(bad)
pop
jg
fst
fnstenv
lds
xor
add
jmp
pop
sub
pop
adc
stos
cmp
mov
out
dec
fcom
cmp
aad
fs
mov
not
mov
(bad)
lds
movs
mov
add
mov
std
add
inc
xor
pushf
mov
scas
and
mov
dec
cmp
mov
adc
add
aas
fs
adc
sbb
fld
clc
fnsave
iret
in
dec
jecxz
inc
std
out
push
rcl
inc
inc
push
outs
adc
xchg
sbb
pop
adc
add
stos
pop
rcr
fiadd
push
dec
push
sbb
nop
jmp
neg
scas
jno
add
std
mov
jg
stc
mov
or
out
push
push
jg
mov
mov
mov
or
jg
pusha
xchg
shr
mov
pop
ret
fidivr
push
inc
xchg
popf
lods
out
pop
scas
jg
dec
sbb
jnp
inc
iret
inc
(bad)
push
mov
(bad)
jae
add
xor
jo
arpl
xchg
jae
sbb
add
dec
adc
adc
push
xchg
mov
nop
aas
idiv
sub
xor
fcomp
(bad)
mov
ins
(bad)
scas
mov
int
add
stos
daa
(bad)
mov
and
dec
dec
fidivr
frstor
call
pusha
addr16
lods
xor
fwait
rol
inc
ficom
xchg
pop
cld
enter
sbb
jb
add
mov
pop
ret
pop
or
fadd
loope
mov
shl
mov
shr
mov
add
or
pop
shl
dec
(bad)
jl
lods
jmp
mov
pop
dec
add
dec
xchg
jo
mov
xchg
dec
rol
loopne
adc
rcl
mov
push
and
push
cmp
repnz
aas
jmp
dec
std
add
div
or
imul
pop
jbe
call
ds
clc
jnp
add
loopne
inc
mov
mov
push
out
xchg
mov
xor
or
call
jl
sub
enter
and
jp
test
sahf
or
cli
or
mov
lea
add
scas
cwde
aas
popa
fist
add
lods
lods
xchg
out
dec
call
mov
test
retf
jns
cmc
ret
sbb
lock
jne
out
into
(bad)
push
jnp
outs
xchg
imul
retf
mov
ja
dec
shl
in
addr16
(bad)
fist
(bad)
and
out
clc
jb
out
pop
mov
add
and
add
jae
jno
and
mov
and
(bad)
sahf
adc
xadd
push
popf
arpl
and
mov
sti
mov
mov
(bad)
outs
fsubr
ret
jle
fistp
pop
adc
test
imul
les
adc
mov
and
add
adc
mov
mov
mov
out
sbb
mov
adc
push
iret
test
lods
xchg
cmps
and
jae
jbe
jle
mul
or
movs
(bad)
pop
sbb
sar
inc
mov
jmp
dec
push
icebp
push
xchg
mov
out
dec
jbe
retf
jbe
test
in
mov
jns
push
fcomp
dec
inc
or
inc
or
mov
aad
js
repnz
shl
gs
add
movs
popf
mov
test
add
mov
jg
jl
mov
ficomp
test
shr
pop
and
add
xor
rcl
in
test
push
xor
(bad)
push
imul
mov
mov
lahf
(bad)
inc
sysenter
(bad)
or
inc
aam
aas
(bad)
ret
das
mov
pop
or
imul
repz
and
test
xchg
lea
mov
jg
mov
call
lods
fcmovnu
cli
repnz
clc
das
popa
loope
add
xor
dec
ret
mov
out
mov
scas
sbb
mov
and
cmp
stos
xchg
push
movs
aaa
jns
push
pop
push
mov
and
xchg
jge
(bad)
and
pop
mov
sbb
mov
xlat
push
cmp
jne
jmp
jb
sub
pop
icebp
jmp
leave
xchg
(bad)
dec
mov
aam
cmp
sbb
pop
js
push
xchg
pop
mov
int
or
or
pop
pop
jnp
(bad)
cs
(bad)
add
cmc
pop
or
inc
ret
scas
or
or
dec
test
mov
xchg
aam
jmp
aam
xor
xchg
jmp
mov
(bad)
push
aad
sub
push
xchg
sti
sub
(bad)
stos
loop
adc
pop
cmps
(bad)
cld
outs
jle
(bad)
mov
fadd
xchg
ins
in
dec
dec
xchg
and
enter
lods
test
mov
inc
outs
sbb
inc
icebp
jbe
in
(bad)
xor
(bad)
rcr
repz
movd
lahf
or
jl
mov
ds
movs
clc
xchg
ret
mul
imul
cmps
jl
mov
bound
pushf
das
and
mov
stc
scas
mov
push
mov
adc
outs
outs
xchg
or
(bad)
sbb
movs
pop
push
jb
(bad)
enter
jo
dec
int
jo
mov
je
(bad)
push
mov
test
dec
jb
lahf
push
js
jecxz
sahf
or
ds
cld
sbb
cmps
test
xlat
(bad)
lock
shl
or
stc
push
inc
retf
sub
aas
ins
das
ficomp
dec
clc
cmp
push
mov
push
(bad)
retf
dec
retf
addr16
pop
retf
(bad)
imul
les
pop
sti
cs
pop
sar
addr16
mov
jge
test
outs
adc
sahf
repnz
test
jb
sub
ret
cmp
arpl
fisub
clc
test
lock
std
xor
dec
stos
int
push
sub
dec
mov
sbb
jae
cmp
adc
aad
xchg
pop
imul
dec
fs
out
jge
loopne
mov
clc
icebp
ins
lock
into
xchg
ins
mov
(bad)
ds
jnp
loopne
sub
xor
(bad)
in
mov
stc
xchg
dec
push
imul
adc
mov
aas
dec
cmp
js
inc
test
push
imul
dec
adc
leave
xor
daa
xor
cld
sbb
icebp
inc
les
imul
push
mov
dec
in
pop
fstp
and
(bad)
in
cmp
lock
into
icebp
je
fist
cmc
dec
mov
pop
push
mov
jno
cmps
pop
mov
cmps
int3
lods
les
and
jo
pop
add
pop
(bad)
or
fstp
repnz
(bad)
and
pushf
xlat
(bad)
iret
mov
cmps
in
scas
icebp
mov
jg
ds
(bad)
sti
fwait
hlt
mov
pop
mov
cmp
aam
mov
arpl
jb
std
or
mov
outs
jecxz
clc
inc
lock
push
clc
mov
div
ret
retf
sub
daa
jmp
xchg
add
and
aaa
std
scas
hlt
(bad)
pop
(bad)
outs
sti
aas
js
xlat
dec
rcl
stc
das
xor
nop
aam
sbb
xchg
or
(bad)
jbe
push
pusha
xor
pop
push
dec
clc
idiv
push
js
inc
aad
clc
aaa
loope
popf
pinsrw
adc
imul
push
(bad)
(bad)
cmp
mov
into
into
mov
aam
xor
pop
push
ins
mov
mul
clc
mov
das
add
test
jmp
push
push
dec
outs
ja
adc
pusha
int3
dec
add
addr16
jg
and
inc
ret
dec
out
mov
in
mov
and
jl
cmp
retf
fwait
xlat
out
sbb
push
add
inc
ds
aam
add
les
cli
dec
pop
cmp
shr
jp
inc
and
push
xor
mov
stos
inc
mov
xor
push
lock
test
pinsrw
xlat
cmp
retf
movs
cmp
sub
fs
xor
ins
sbb
jo
dec
and
mov
push
push
push
imul
cld
nop
xor
fild
mov
push
std
stos
scas
lods
outs
and
jno
mov
(bad)
jl
test
pop
aam
or
nop
pop
repnz
cmp
jae
in
ds
lock
in
or
icebp
push
push
lock
test
retf
or
or
stos
jmp
fdivr
(bad)
mov
stos
mov
nop
push
mov
mov
jnp
fistp
mov
inc
sar
mov
xchg
ret
loopne
push
icebp
cmps
gs
fisttp
cwde
add
fidivr
cmps
add
lods
sti
and
sar
add
sbb
xor
das
sub
enter
inc
ins
pop
cli
lock
dec
out
sbb
mov
pop
in
mov
cld
pop
inc
jle
dec
fidivr
jmp
inc
jg
inc
jg
(bad)
sar
inc
int
adc
ins
retf
out
mov
ss
or
sbb
ds
js
div
cmp
sar
stos
js
leave
fisttp
ins
xchg
xchg
add
sub
fidivr
push
sti
jl
pop
pop
(bad)
fld
add
pop
dec
mov
xor
adc
loopne
jae
sub
cwde
test
push
pusha
sub
push
out
lods
or
ds
call
xor
lock
and
sub
xlat
push
sub
sbb
out
mov
ret
mov
push
imul
popf
fcomp
sbb
lock
add
mov
xchg
add
test
cdq
and
xchg
(bad)
jbe
jl
inc
mov
add
ss
aam
xlat
(bad)
inc
es
xchg
mov
xlat
xchg
fadd
loope
mov
ss
loop
mov
dec
and
mov
mov
mov
mov
and
clc
es
enter
push
inc
(bad)
sti
jns
mov
sub
stos
xor
sub
jns
push
jne
or
mov
aas
mov
(bad)
jg
jl
mov
or
sbb
cmp
in
dec
cmp
push
loopne
fnstenv
jmp
inc
or
mov
dec
iret
inc
and
mov
add
in
call
mov
pop
stos
test
inc
cdq
repz
xchg
jmp
jns
fdivr
add
mov
sub
ret
sub
aas
loope
mov
pop
clc
sub
icebp
retf
sti
and
add
(bad)
mov
inc
aaa
loopne
enter
ins
das
mov
lock
dec
outs
jg
cs
clc
ins
das
mov
lock
dec
outs
jg
cs
xor
out
icebp
jg
pop
pop
(bad)
inc
aaa
loopne
enter
ins
das
mov
lock
dec
outs
jg
cs
clc
ins
das
mov
lock
dec
outs
jg
cs
xor
out
icebp
jg
pop
pop
(bad)
inc
aaa
loopne
enter
ins
das
mov
lock
dec
outs
jg
cs
clc
ins
das
mov
lock
dec
outs
jg
cs
xor
out
icebp
jg
pop
pop
(bad)
inc
aaa
loopne
enter
ins
das
mov
lock
dec
outs
jg
cs
clc
ins
das
mov
lock
dec
outs
jg
cs
xor
out
icebp
jg
pop
pop
(bad)
inc
aaa
loopne
enter
ins
das
mov
lock
dec
outs
jg
cs
clc
ins
das
mov
lock
dec
outs
jg
cs
xor
out
icebp
jg
pop
pop
(bad)
inc
aaa
loopne
enter
ins
das
mov
lock
dec
outs
jg
cs
clc
ins
das
mov
lock
dec
outs
jg
cs
xor
out
icebp
jg
pop
pop
(bad)
inc
aaa
loopne
enter
ins
das
mov
lock
dec
outs
jg
cs
clc
ins
das
mov
lock
dec
outs
jg
cs
xor
out
icebp
jg
pop
pop
(bad)
inc
aaa
loopne
enter
ins
das
mov
lock
dec
outs
jg
cs
clc
ins
das
mov
lock
dec
outs
jg
cs
xor
out
icebp
jg
pop
pop
(bad)
inc
aaa
loopne
enter
ins
das
mov
lock
dec
outs
jg
cs
clc
ins
das
mov
lock
dec
outs
jg
cs
xor
out
icebp
jg
pop
pop
(bad)
inc
aaa
loopne
enter
ins
das
mov
lock
dec
outs
jg
cs
clc
ins
das
mov
lock
dec
outs
jg
cs
xor
out
icebp
jg
pop
pop
(bad)
inc
aaa
loopne
enter
ins
das
mov
lock
dec
outs
jg
cs
clc
ins
das
mov
lock
dec
outs
jg
cs
xor
out
icebp
jg
pop
pop
(bad)
inc
aaa
loopne
enter
ins
das
mov
lock
dec
outs
jg
cs
clc
ins
das
mov
lock
dec
outs
jg
cs
xor
out
icebp
jg
pop
pop
(bad)
inc
aaa
loopne
enter
ins
das
mov
lock
dec
outs
jg
cs
clc
ins
das
mov
lock
dec
outs
jg
cs
xor
out
icebp
jg
pop
pop
(bad)
inc
aaa
loopne
enter
ins
das
mov
lock
dec
outs
jg
cs
clc
ins
das
mov
lock
dec
outs
jg
cs
xor
out
icebp
jg
pop
pop
(bad)
inc
aaa
loopne
enter
ins
das
mov
lock
dec
outs
jg
cs
clc
ins
das
mov
lock
dec
outs
jg
cs
xor
out
icebp
jg
pop
pop
(bad)
inc
aaa
loopne
enter
ins
das
mov
lock
dec
outs
jg
cs
clc
ins
das
mov
lock
dec
outs
jg
cs
xor
out
icebp
jg
pop
pop
(bad)
inc
aaa
loopne
enter
ins
das
mov
lock
dec
outs
jg
cs
clc
ins
das
mov
lock
dec
outs
jg
cs
xor
out
icebp
jg
pop
pop
(bad)
inc
aaa
loopne
enter
ins
das
mov
lock
dec
outs
jg
cs
clc
ins
das
mov
lock
dec
outs
jg
cs
xor
out
icebp
jg
pop
pop
(bad)
inc
aaa
loopne
enter
ins
das
mov
lock
dec
outs
jg
cs
clc
ins
das
mov
lock
dec
outs
jg
cs
xor
out
icebp
jg
pop
pop
(bad)
inc
aaa
loopne
enter
ins
das
mov
lock
dec
outs
jg
cs
clc
ins
das
mov
lock
dec
outs
jg
cs
xor
out
icebp
jg
pop
pop
(bad)
inc
aaa
loopne
enter
ins
das
mov
lock
dec
outs
jg
cs
clc
ins
das
mov
lock
dec
outs
jg
cs
xor
out
icebp
jg
pop
pop
(bad)
inc
aaa
loopne
enter
ins
das
mov
lock
dec
outs
jg
cs
clc
ins
das
mov
lock
dec
outs
jg
cs
xor
out
icebp
jg
pop
pop
(bad)
inc
aaa
loopne
enter
ins
das
mov
lock
dec
outs
jg
cs
clc
ins
das
mov
lock
dec
outs
jg
cs
xor
out
icebp
jg
pop
pop
(bad)
inc
aaa
loopne
enter
ins
das
mov
lock
dec
outs
jg
cs
clc
ins
das
mov
lock
dec
outs
jg
cs
xor
out
icebp
jg
pop
pop
(bad)
inc
aaa
loopne
enter
ins
das
mov
lock
dec
outs
jg
cs
xchg
popf
pop
rcr
loop
pop
fidivr
gs
outs
shl
cmp
shr
das
test
popa
xchg
imul
fisttp
push
sub
inc
pushf
call
jo
bound
jb
fnstcw
pop
cmp
sar
xchg
cmc
xor
nop
push
mov
jg
es
dec
aaa
(bad)
mov
rcr
ftst
inc
ror
adc
or
and
test
inc
loope
cld
mov
cli
(bad)
(bad)
xchg
dec
pop
popf
mov
ret
jnp
xchg
cmp
sub
jbe
into
imul
mov
or
cs
xchg
fimul
push
mov
std
xor
sahf
adc
xchg
xor
not
scas
xchg
es
xchg
ds
pop
iret
and
loopne
out
mov
sar
and
bound
xchg
push
fwait
shl
jle
movs
mov
cmps
std
aad
out
ja
jl
movs
pop
inc
cmps
js
lds
test
cmp
mov
ror
shl
aam
int
movs
sub
int
into
test
mov
clc
pop
push
cld
sar
add
clc
mov
out
aam
xor
add
stos
mov
repnz
push
retf
sub
outs
(bad)
repnz
adc
add
add
lods
inc
imul
not
mov
out
aam
xor
add
stos
je
xchg
sub
mov
inc
loop
mov
js
stc
stc
pop
mov
in
jae
(bad)
shr
mov
lds
shl
call
inc
adc
iret
sub
add
add
test
jle
out
inc
sti
or
mov
xchg
rcl
mov
dec
jg
fwait
jg
cmps
inc
adc
icebp
inc
jg
popf
jg
cmps
inc
adc
cld
cld
(bad)
fiadd
xor
aad
loop
push
mov
inc
inc
clc
stos
jo
call
jg
cmps
inc
adc
cld
cld
pop
jp
mov
cld
(bad)
out
addr16
sbb
mov
scas
dec
aas
mov
(bad)
inc
cli
adc
inc
xor
add
test
push
inc
mov
dec
(bad)
sub
out
sti
sar
scas
repnz
mov
sub
out
(bad)
ret
(bad)
dec
loopne
mov
lock
(bad)
mov
call
mov
ins
dec
push
aam
mov
mov
imul
adc
leave
and
lahf
mul
popf
cmp
sbb
ss
xchg
rcl
and
add
stos
mov
xchg
cmp
hlt
popf
push
pop
sbb
adc
movs
fimul
or
xchg
imul
mov
or
outs
jecxz
inc
out
scas
add
or
scas
je
xchg
mov
push
push
dec
pop
pop
pop
mov
addr16
jmp
jno
clc
xchg
les
sbb
out
mov
in
aam
inc
push
sub
pop
mov
pop
outs
or
jo
xchg
inc
das
test
add
mov
cld
inc
cmps
pop
(bad)
adc
xchg
clc
jnp
shl
in
cmp
sbb
dec
cs
add
mov
int3
repz
cmp
stc
imul
sar
xor
(bad)
sub
push
push
mov
dec
push
(bad)
fidivr
push
jmp
pushf
mov
xor
and
pop
test
xchg
(bad)
cmps
(bad)
pop
ss
adc
mov
aas
push
push
mov
mov
out
sbb
xchg
xor
mov
mov
pop
cmps
stc
sahf
stos
mov
jg
std
pop
icebp
(bad)
adc
int
sub
cmc
out
or
jmp
xchg
aaa
xchg
jae
cmps
ret
stc
repnz
shl
mov
sbb
jmp
sbb
sbb
pop
sbb
dec
shl
adc
cmp
mov
lods
repnz
div
lahf
cmp
pop
xor
cwde
dec
mov
nop
gs
or
retf
scas
pop
jecxz
mov
ret
mov
adc
into
loop
dec
pop
imul
sub
push
inc
ror
xor
pop
jns
push
push
bswap
xor
ror
xchg
test
jl
(bad)
in
scas
jl
sti
ds
sar
fisubr
mov
movs
movs
dec
cmp
add
cmp
dec
jp
mov
pop
ror
inc
test
xchg
jecxz
(bad)
clc
aaa
push
aam
shr
sub
xor
in
sub
ror
pop
jmp
mov
loopne
ret
and
in
in
jecxz
(bad)
xor
sub
adc
add
in
add
and
inc
pop
and
popa
dec
ins
imul
call
(bad)
mov
js
fs
mov
sbb
mov
out
sub
(bad)
mov
pop
jl
jno
lea
aam
lods
fcmovbe
je
std
pop
in
push
ror
mov
pop
xor
adc
xchg
arpl
(bad)
mov
add
jecxz
neg
pop
mov
stos
in
add
fs
mov
mov
or
pop
xor
xor
push
fdivr
xor
clc
or
push
fdivr
outs
pop
sahf
and
shl
sub
in
test
mov
(bad)
mov
dec
mov
or
cmp
fimul
movs
retf
and
xor
add
fisub
es
inc
scas
aaa
clc
xor
add
mov
aas
in
shr
call
fsubr
mov
push
inc
add
adc
inc
add
adc
inc
add
adc
inc
add
adc
inc
add
adc
inc
add
adc
inc
add
adc
inc
add
adc
inc
add
adc
inc
add
adc
inc
add
adc
inc
add
gs
inc
push
(bad)
mov
dec
push
push
mov
add
pop
aad
jmp
dec
std
add
xor
imul
dec
cld
mov
cmps
mov
lea
xchg
(bad)
in
push
sbb
das
test
add
and
inc
movs
sbb
adc
add
(bad)
jnp
inc
jge
push
fs
cmp
and
jg
aas
adc
js
out
inc
xchg
pop
(bad)
jecxz
sub
mov
add
xchg
xor
adc
sbb
or
pop
jne
add
sbb
int3
mov
inc
pusha
inc
inc
in
(bad)
mov
xchg
mov
add
gs
pop
or
mov
call
cmc
aad
add
add
and
inc
(bad)
aam
inc
add
fs
pop
cld
sbb
inc
sbb
add
fstp
mov
sar
sub
dec
sar
(bad)
cdq
mov
jno
iret
clc
and
inc
cld
adc
push
aas
repz
add
sar
push
sub
(bad)
imul
add
add
jne
sti
ins
cmp
fidiv
pusha
aas
out
inc
sbb
inc
lahf
jg
inc
xor
out
daa
stc
inc
add
(bad)
inc
rol
inc
cdq
and
inc
push
or
jecxz
or
test
jg
cmp
pop
hlt
pop
cli
ja
add
push
inc
jecxz
jg
pusha
aas
out
loop
add
pop
pop
lds
loopne
enter
add
add
push
scas
inc
mov
add
dec
pop
lock
or
xchg
imul
sub
test
retf
(bad)
(bad)
add
pop
clc
in
pop
fstp
stc
idiv
mov
mov
jnp
inc
add
inc
loopne
jg
adc
clc
js
mov
scas
inc
mov
add
pop
adc
jbe
(bad)
pop
mov
jecxz
jg
pusha
aas
out
loop
add
ds
jg
out
inc
lock
test
(bad)
and
mov
cli
adc
mov
mov
popf
(bad)
pop
mov
jecxz
outs
mov
cmp
sbb
inc
inc
pop
(bad)
popa
cmc
fcom
dec
cld
(bad)
je
lock
or
imul
sub
paddb
push
pop
repz
jnp
icebp
adc
pusha
inc
(bad)
push
(bad)
cmp
push
add
jge
das
cld
ret
jmp
scas
out
pop
stc
push
fidivr
mov
cdq
xlat
inc
add
inc
mov
test
jg
pusha
(bad)
outs
mov
out
inc
mov
inc
add
in
pop
fstp
stc
idiv
mov
mov
jnp
jg
dec
jne
inc
xor
inc
(bad)
aam
dec
dec
test
jg
pusha
(bad)
outs
mov
jge
add
fidiv
fdivr
inc
jecxz
inc
mov
pop
repz
icebp
jg
aas
scas
loop
lahf
lock
mov
cld
adc
push
pop
stc
xchg
ins
jg
pusha
(bad)
outs
mov
test
repz
loopne
mov
int
rcr
inc
sbb
add
sar
xchg
cmp
lahf
jg
inc
xor
out
daa
stc
inc
add
mov
pop
sub
loopne
xor
loopne
inc
enter
jne
xchg
(bad)
aas
fisub
(bad)
pop
mov
scas
ins
fcmove
inc
or
imul
mov
sbb
jmp
sub
in
mov
mov
inc
or
in
call
jmp
cmps
iret
dec
or
jmp
lea
shl
pushf
mov
mov
push
call
aam
out
mov
add
xchg
pop
cmp
out
jg
fsub
push
pop
mov
pushf
(bad)
and
pop
repz
sti
in
push
idiv
neg
mov
push
pop
imul
jge
xlat
pop
cld
test
cdq
sub
inc
sahf
sar
add
bound
cmp
lds
inc
dec
inc
inc
idiv
neg
mov
push
inc
rcr
rcl
scas
psubw
pop
std
imul
sti
pop
pop
repz
sti
in
push
je
fs
pop
imul
jge
xlat
pop
cld
test
cdq
sub
inc
sahf
sar
add
bound
cmp
lds
inc
dec
inc
inc
idiv
neg
mov
push
inc
rcr
rcl
scas
psubw
pop
std
imul
sti
pop
pop
repz
sti
in
push
je
fs
pop
imul
jge
xlat
pop
cld
test
cdq
sub
inc
sahf
sar
add
bound
cmp
lds
inc
dec
inc
inc
idiv
neg
mov
push
inc
rcr
rcl
scas
psubw
pop
std
imul
sti
pop
pop
repz
sti
in
push
je
fs
pop
imul
jge
xlat
pop
cld
test
cdq
sub
inc
sahf
sar
add
bound
cmp
lds
inc
dec
inc
inc
idiv
neg
mov
push
inc
rcr
rcl
scas
psubw
pop
std
imul
sti
pop
pop
repz
sti
in
push
je
fs
pop
imul
jge
xlat
pop
cld
test
cdq
sub
inc
sahf
sar
add
bound
cmp
lds
inc
dec
inc
inc
idiv
neg
mov
push
inc
rcr
rcl
scas
psubw
pop
std
imul
sti
pop
pop
repz
sti
in
push
je
fs
pop
imul
jge
xlat
pop
cld
test
cdq
sub
inc
sahf
sar
add
bound
cmp
lds
inc
dec
inc
inc
idiv
neg
mov
push
inc
rcr
rcl
scas
psubw
pop
std
imul
sti
pop
pop
repz
sti
in
push
je
fs
loop
stc
push
jne
cli
not
mov
mov
neg
lods
scas
adc
stos
add
fwait
imul
lods
imul
cmps
iret
pop
push
jge
aaa
(bad)
aas
gs
mov
xchg
dec
pop
mov
mov
aam
sahf
dec
xor
adc
pop
inc
lock
add
cld
xor
add
jne
repnz
stos
dec
sti
outs
je
out
ret
sub
ja
pop
inc
imul
mov
std
pop
jle
inc
loopne
xchg
(bad)
xor
or
sar
add
jmp
jae
loope
std
xchg
mov
inc
add
icebp
mov
pop
inc
lock
add
cld
xor
add
jne
cli
mov
popf
pop
mov
retf
sbb
sbb
stos
inc
inc
inc
test
sbb
sbb
add
cmp
pop
inc
into
(bad)
(bad)
clc
dec
aas
gs
cli
paddb
inc
ror
cld
push
not
repz
clc
inc
inc
sbb
inc
cld
and
call
test
not
add
inc
outs
call
mov
lods
inc
inc
fild
add
ret
jg
cmp
fsubr
clc
dec
mov
cld
and
add
int
cld
push
not
add
or
inc
(bad)
mov
pop
aas
loope
pop
lods
and
inc
out
jg
inc
mov
std
pop
(bad)
adc
pop
xchg
(bad)
xor
ret
sub
add
jg
pop
inc
xchg
lock
pop
push
nop
jae
idiv
(bad)
adc
push
inc
add
das
dec
inc
sbb
dec
mov
cld
and
idiv
movs
inc
lea
inc
ret
jg
cmp
fsubr
clc
dec
mov
cld
and
add
int
cld
push
not
add
or
inc
(bad)
mov
pop
aas
loope
pop
lods
and
inc
out
ja
fbstp
adc
add
xchg
(bad)
xor
ret
sub
ja
pop
inc
imul
mov
pop
push
nop
jae
idiv
(bad)
adc
pop
inc
lock
add
aas
loope
std
xchg
mov
inc
add
icebp
scas
ret
pop
clc
inc
push
(bad)
clc
inc
push
(bad)
stos
dec
cmp
sti
popf
inc
or
inc
out
test
sbb
cld
inc
mov
std
pop
(bad)
adc
add
pop
xchg
(bad)
xor
or
sar
add
jmp
jae
loope
std
xchg
jg
aas
lock
add
out
(bad)
xor
sbb
retf
arpl
or
std
mov
xchg
lock
pop
push
nop
jae
idiv
(bad)
adc
push
inc
lock
dec
inc
sbb
loope
std
xchg
jg
aas
lock
add
hlt
mov
clc
inc
push
(bad)
clc
inc
push
(bad)
stos
dec
cmp
sti
popf
inc
or
inc
inc
test
sbb
lock
jle
fcomip
sbb
sbb
inc
cld
and
call
test
not
add
or
inc
(bad)
(bad)
clc
dec
mov
cld
and
add
int
cld
imul
(bad)
adc
mov
jmp
ret
sub
ja
pop
inc
imul
mov
std
pop
jle
inc
loopne
xchg
(bad)
xor
or
sar
add
jmp
jae
loope
std
xchg
mov
inc
add
icebp
mov
pop
inc
lock
add
cld
xor
add
jne
cli
mov
popf
pop
mov
retf
sbb
sbb
lods
inc
inc
fild
add
ret
jg
cmp
fsubr
clc
dec
mov
cld
and
add
int
cld
push
not
add
or
inc
(bad)
mov
pop
aas
loope
pop
lods
and
inc
out
ja
fbstp
adc
add
xchg
(bad)
xor
ret
sub
ja
pop
inc
imul
mov
pop
push
nop
jae
idiv
(bad)
adc
pop
inc
lock
add
aas
loope
std
xchg
mov
inc
add
icebp
scas
ret
pop
clc
inc
push
(bad)
clc
inc
push
(bad)
stos
dec
cmp
sti
popf
inc
or
inc
fild
add
retf
sbb
sbb
inc
cld
and
call
test
not
add
or
inc
(bad)
(bad)
clc
dec
mov
cld
and
add
int
cld
imul
(bad)
adc
mov
jmp
ret
sub
ja
pop
inc
imul
mov
std
pop
jle
inc
loopne
xchg
(bad)
xor
or
sar
add
jmp
jae
loope
std
xchg
mov
inc
add
icebp
mov
pop
inc
lock
add
cld
xor
add
jne
cli
mov
popf
pop
mov
retf
sbb
sbb
lods
inc
inc
fild
add
ret
jg
cmp
fsubr
clc
dec
mov
cld
and
add
int
cld
push
not
add
or
inc
(bad)
mov
pop
aas
loope
pop
lods
and
inc
out
ja
fbstp
adc
add
xchg
(bad)
xor
ret
sub
ja
pop
inc
imul
mov
loop
mov
ret
enter
movs
inc
or
inc
out
test
sbb
cld
inc
mov
std
pop
mov
xchg
(bad)
xor
lods
add
in
push
les
sub
push
lahf
lahf
cmc
xlat
aas
not
inc
test
es
cmp
fucomp
clc
dec
inc
gs
cli
(bad)
and
add
int
cld
push
not
add
or
inc
(bad)
mov
sar
add
mov
std
hlt
mov
sbb
idiv
cld
sub
or
add
fwait
dec
mov
inc
sbb
stos
inc
inc
out
test
sbb
adc
add
lahf
sti
jmp
inc
xor
add
in
jae
add
clc
push
in
es
aas
ja
add
aaa
std
xchg
jg
cmp
add
icebp
mov
push
inc
xor
add
cld
and
add
out
cli
pop
lock
cld
idiv
not
pop
xor
fucomp
clc
dec
aas
gs
pop
clc
inc
inc
std
jle
lahf
jecxz
nop/reserved
and
std
mov
xchg
inc
add
clc
inc
sub
out
(bad)
out
ret
inc
sub
out
iret
out
ret
cwde
jae
std
loop
add
mov
or
jg
(bad)
clc
dec
jg
mov
inc
shr
(bad)
adc
psubw
jae
(bad)
lock
stc
in
jae
(bad)
lock
in
es
aas
js
mov
add
sbb
xlat
ret
mov
jl
sti
sub
mov
add
push
inc
or
cld
xbegin
add
cld
xbegin
push
jg
shr
jl
aas
div
cmps
lahf
jmp
push
cs
xchg
fsub
or
shr
dec
inc
sbb
sbb
ret
(bad)
jnp
(bad)
arpl
sub
add
(bad)
arpl
sub
adc
push
xchg
dec
jg
sbb
dec
inc
sbb
aas
gs
cli
or
shr
(bad)
adc
psubw
jae
(bad)
lock
stc
in
jae
(bad)
lock
jle
jg
imul
jg
ja
pop
inc
imul
sbb
call
jp
in
mov
cmp
ins
inc
retf
sbb
xchg
cmp
dec
push
or
add
sti
call
inc
add
lock
scas
xchg
sti
data16
add
daa
cwde
mov
(bad)
ss
push
aam
sbb
push
mov
inc
loop
fisub
les
ret
push
xchg
lds
fsub
mov
sbb
jmp
jae
or
(bad)
outs
adc
lahf
clc
xchg
sahf
aas
in
mov
and
mov
(bad)
popf
fnstsw
cmp
inc
mov
pop
xchg
push
in
rcl
sbb
retf
sbb
pushf
mov
pop
ja
inc
imul
outs
in
fistp
fidivr
dec
cmp
aam
imul
sbb
mov
mov
das
in
jae
int
cmp
xchg
shl
lock
aad
xchg
stos
or
sub
mov
add
mov
sub
rcr
int3
mov
push
into
(bad)
jo
mov
pop
sbb
mov
loop
fstp
aad
movs
scas
xlat
dec
das
fadd
idiv
lock
jmp
mov
jecxz
popf
cs
push
xchg
cmp
mov
scas
and
addr16
or
sar
sbb
in
and
mov
xor
fs
(bad)
pop
pop
xchg
mov
mov
mov
lods
cld
jmp
sbb
ret
inc
or
loop
test
or
fcomp
fst
retf
pop
ss
jnp
pop
das
fadd
sahf
mov
mov
jbe
stos
call
inc
xchg
mov
push
clc
retf
mov
ss
mov
dec
loop
xchg
iret
into
aas
or
push
(bad)
pop
daa
shl
sub
aam
in
adc
dec
out
cmc
push
inc
sbb
cmp
add
ror
lods
hlt
sbb
push
mov
cmps
jl
std
movs
xor
imul
mov
jns
xor
inc
in
in
imul
imul
clc
std
loop
fisub
loope
xlat
mov
imul
stos
push
cdq
sbb
(bad)
mov
inc
inc
mov
push
lods
push
push
dec
push
fmul
in
iret
int
mov
aas
les
(bad)
ror
adc
mov
add
retf
test
jns
movs
js
pushf
mov
fcmovnu
mov
(bad)
(bad)
mov
pop
jns
aaa
ret
mov
mov
inc
ror
xchg
adc
shl
aas
dec
jmp
fcos
add
xchg
mov
sbb
dec
mov
push
pop
test
iret
jo
mov
test
pop
clc
lods
jecxz
in
clc
stc
jnp
xchg
cmc
in
aas
add
rcl
sbb
jecxz
dec
xchg
and
stc
cwde
arpl
fldl2t
pop
lahf
mov
in
leave
paddsb
icebp
add
xlat
dec
mov
les
mov
sbb
(bad)
enter
or
call
add
iret
cld
and
pop
inc
call
idiv
pop
fstp
or
push
xlat
mov
imul
ins
cmp
cdq
dec
sbb
mov
daa
mov
xchg
out
sub
mov
mov
and
inc
pop
add
jmp
inc
aad
inc
mov
push
jmp
pop
ins
dec
cwde
jns
xor
out
repz
test
push
ret
aas
mov
adc
shl
mov
jae
outs
in
dec
adc
xor
xor
adc
(bad)
fdivr
in
popa
lock
clc
mov
lea
ret
mov
dec
push
jae
es
inc
push
xor
add
cmps
movs
jp
(bad)
out
fld
(bad)
aas
mov
and
out
xchg
jg
fdiv
inc
add
fcom
add
clc
ret
ret
imul
cli
mov
add
xchg
ret
and
adc
sub
jb
lock
psubusw
daa
sar
sbb
push
mov
cmp
dec
mov
outs
cmc
or
movs
pusha
(bad)
jmp
jge
repnz
mov
pop
jns
scas
(bad)
dec
pop
dec
std
lock
loope
and
push
(bad)
cmc
jns
retf
repnz
push
sti
and
push
jo
inc
ins
std
fidiv
fsub
dec
pop
(bad)
rcr
or
pop
mov
sub
xchg
mov
scas
add
scas
movs
dec
add
cli
jae
xor
outs
ret
jecxz
sub
ror
dec
inc
lock
icebp
jmp
jmp
fist
jmp
mov
jno
xchg
pop
int3
je
popa
pop
retf
mov
pop
add
fstp
mov
jle
fist
shr
mov
test
loop
cmp
pop
in
push
pop
cmp
loope
pop
test
xor
push
clc
add
es
not
sub
cdq
sbb
fs
lds
test
ins
ret
sub
add
clc
fwait
lock
cli
cmps
mov
mov
call
jbe
fadd
es
inc
jno
das
mov
add
ins
aas
hlt
or
test
add
xor
(bad)
and
pop
jbe
ficom
mov
push
push
jbe
mov
idiv
in
dec
mov
inc
adc
mov
jae
scas
aad
adc
je
xchg
loope
xchg
or
imul
adc
jle
jbe
xchg
mov
add
clc
sbb
xlat
adc
jecxz
call
mov
add
popa
xchg
push
mov
inc
retf
lods
mov
mov
jmp
ds
daa
clc
pop
loope
inc
mov
fwait
sbb
sub
je
ds
in
xchg
sti
paddb
clc
jne
outs
sbb
push
(bad)
jecxz
mov
fwait
leave
daa
mov
and
ret
jns
ins
shl
mov
daa
call
add
jmp
inc
shr
hlt
fsub
dec
inc
in
or
loop
mov
cld
sbb
xor
hlt
fwait
div
cld
cmp
mov
mov
sbb
mov
or
mov
sbb
push
add
mov
sub
(bad)
mov
pop
out
test
push
mov
mov
lds
fsub
sbb
xlat
push
push
jle
rcr
pop
sbb
add
inc
mov
mov
cld
xor
pop
imul
enter
xor
inc
add
clc
adc
add
mov
or
mov
into
pop
retf
imul
xor
add
or
dec
int3
or
mov
fwait
lds
xchg
lahf
add
or
mov
ja
inc
clc
jp
pop
lock
std
sahf
dec
mov
mov
mov
int3
jle
jl
aam
adc
sahf
mov
ss
fidivr
ret
sbb
and
jg
hlt
jb
addr16
call
aam
cmp
shl
sti
retf
or
jecxz
dec
ins
xchg
and
jbe
(bad)
mov
pop
pop
pop
in
inc
(bad)
movs
stos
clc
jnp
mov
(bad)
mov
leave
and
stc
call
ds
(bad)
sub
ds
clc
add
test
leave
movs
inc
push
cdq
sub
aam
sbb
xchg
push
inc
fsub
fs
push
pop
icebp
outs
loope
mov
imul
pop
(bad)
outs
pushf
ins
in
pop
int3
mov
hlt
scas
(bad)
(bad)
loope
ret
lahf
sbb
lea
add
cs
ins
dec
dec
jns
popa
gs
xchg
dec
add
xchg
and
imul
adc
retf
add
dec
jb
jnp
or
loop
fdivr
xchg
and
or
cmp
mov
das
daa
jge
in
cld
out
add
jmp
mov
add
clc
or
ins
cmp
cmp
imul
fisubr
daa
mov
mov
cmps
in
xchg
mov
add
dec
sar
call
(bad)
mov
jne
cld
dec
lock
les
dec
inc
push
lock
cmps
mov
rcr
outs
mov
pop
add
jns
lods
(bad)
es
mov
adc
add
aas
mov
xor
shr
je
push
push
mov
in
lods
jle
xor
nop
adc
sbb
pop
enter
arpl
xchg
in
push
lock
push
dec
clc
jg
shl
sar
jge
mov
xor
out
sbb
and
and
fistp
mov
mov
sahf
fldcw
adc
inc
clc
inc
loope
icebp
pop
xchg
dec
pop
(bad)
std
ds
jge
xlat
sub
lock
out
sbb
jg
fld
dec
xchg
dec
mov
cdq
outs
and
mov
push
mov
mov
pop
sbb
into
adc
inc
pop
fidiv
push
mov
jl
add
loop
clc
es
xor
inc
cmps
imul
dec
add
stos
out
cli
or
push
dec
jle
pop
adc
aaa
clc
push
pop
jg
xchg
dec
mov
mov
pop
dec
and
scas
pop
sub
xor
ds
cli
lods
lock
loop
scas
jecxz
dec
loop
mov
call
imul
test
(bad)
jo
jo
mov
cmps
or
adc
js
pop
xchg
ins
cmp
out
cdq
(bad)
sbb
lea
jge
jbe
xchg
pop
fwait
jle
std
mov
jl
icebp
out
mov
cmps
popf
sub
push
int
jo
adc
add
and
fucom
add
dec
iret
mov
fidiv
mov
into
movs
cmps
pop
sar
and
mov
loope
repnz
aas
mov
pop
fcos
add
aas
fnstcw
mov
(bad)
mov
mov
aaa
add
(bad)
adc
inc
fistp
ja
call
das
inc
or
mov
in
fcomp
in
ret
cld
adc
add
push
xchg
mov
add
(bad)
std
test
ficom
(bad)
jl
loop
int
les
jl
pop
lods
push
add
jg
cli
or
and
xlat
inc
mov
mov
sbb
xor
sub
pop
data16
xchg
pop
retf
ja
sub
lods
xor
jle
pop
push
mov
mov
call
loop
xchg
pop
enter
and
sub
xchg
push
push
cmp
loopne
in
cmps
jecxz
fidiv
out
(bad)
adc
fld
mov
out
in
cdq
fmul
hlt
scas
mov
lock
inc
mov
cmp
jne
lds
xchg
loop
cmp
mov
jmp
add
push
xor
lahf
push
xchg
or
outs
outs
paddsb
sub
pop
inc
dec
jg
int3
and
fisttp
ret
or
jg
pop
mov
daa
lahf
dec
icebp
mov
fiadd
sub
int
mov
push
sbb
mov
scas
xor
pop
cld
test
jo
rcl
les
push
js
imul
cmps
jmp
push
xchg
mov
add
jmp
xor
icebp
aas
dec
div
(bad)
loop
ret
jge
push
clc
pop
out
fisub
add
and
xchg
add
cmp
xor
jp
mov
jle
js
ud2
js
fisub
cmps
xor
dec
lods
jnp
dec
mul
in
outs
inc
lahf
mov
ret
pop
mov
add
push
mov
in
mov
in
push
sbb
xchg
mov
mov
fsub
sub
ror
(bad)
lods
cmc
or
mov
dec
push
xor
(bad)
retf
xlat
daa
mov
pop
xchg
fdivr
sbb
test
xchg
cld
pop
sti
xor
dec
nop
jmp
jg
mov
cmc
pop
aaa
out
fsubr
repnz
add
adc
loope
add
scas
cs
jae
add
jmp
(bad)
in
fwait
ins
mov
fnsave
scas
pop
movs
jnp
xchg
inc
add
clc
add
pop
jge
ret
jp
xchg
(bad)
test
push
fsubrp
out
js
mov
and
adc
cmp
aam
adc
jge
in
jle
push
pop
push
(bad)
or
call
pop
push
aas
lock
or
mov
cmp
sub
pop
sbb
repz
jmp
addr16
pop
shl
pushf
js
hlt
inc
mov
lea
in
dec
add
outs
or
(bad)
neg
ja
shl
mov
fisubr
aam
imul
cmp
mov
mov
cs
ss
mov
cmp
mov
xor
call
push
aam
jo
inc
jp
leave
push
xchg
push
inc
dec
add
adc
sbb
aas
ins
cmp
enter
shl
adc
pusha
mov
shl
adc
shl
adc
shl
adc
add
(bad)
(bad)
xor
rol
stos
jle
repnz
jp
shr
mov
je
aas
imul
jg
jge
add
das
inc
jecxz
ds
sub
jg
and
inc
inc
pusha
mov
jl
pop
ins
inc
shr
in
clc
(bad)
inc
daa
inc
inc
or
and
xchg
pop
jl
shr
sub
pop
in
mov
xor
ret
xlat
sub
scas
or
mov
shl
dec
shl
mov
aas
ins
jg
inc
fcomp
push
xlat
pop
icebp
out
push
pop
adc
cmp
(bad)
aaa
mov
and
adc
pextrw
sbb
or
(bad)
jg
jae
or
sub
clc
mov
(bad)
loopne
scas
jno
test
(bad)
not
dec
(bad)
cld
test
loop
add
sbb
mov
inc
popf
cld
pop
sbb
popw
jno
call
cmps
(bad)
fistp
add
dec
mov
or
cli
adc
cmp
sar
push
(bad)
icebp
or
pop
daa
ins
stos
cli
pushf
push
rcl
aas
fisttp
dec
lock
jg
push
sub
pop
add
retf
test
jg
jecxz
imul
dec
loopne
(bad)
(bad)
cli
fmul
in
or
xchg
inc
(bad)
inc
scas
mov
loope
mov
add
retf
js
sti
ds
push
aas
add
inc
(bad)
sbb
out
out
inc
xchg
enter
aad
clc
and
inc
sti
or
xchg
mov
mov
cdq
mov
jg
sub
psubq
dec
cld
xchg
mov
iret
pop
out
pop
cmp
ss
inc
lock
ins
pusha
adc
in
div
lds
lahf
fisubr
loopne
sti
cli
iret
(bad)
xchg
sub
sahf
rol
pop
lock
cmp
popa
mov
jbe
aam
hlt
or
clc
repz
and
scas
xor
push
adc
hlt
push
aam
fcomp
adc
mov
add
std
imul
lahf
adc
add
arpl
add
ins
pop
pop
cld
adc
ret
inc
scas
retf
jg
add
pushf
jg
pop
cld
jne
push
ss
jg
imul
aam
cwde
outs
outs
out
mov
sub
arpl
xchg
push
jno
inc
jp
cld
adc
inc
pop
sbb
mov
(bad)
pop
xor
test
gs
std
popf
cmp
scas
fsubr
sahf
push
lea
shl
(bad)
add
ins
sbb
sbb
add
mov
clc
test
cmp
xlat
mov
das
cmp
xor
(bad)
sub
lahf
clc
sub
in
xchg
loop
fcomip
in
inc
movs
jmp
shl
push
test
inc
sar
daa
dec
aam
retf
lods
jb
out
in
daa
jecxz
sbb
mov
xchg
hlt
sbb
sar
rcr
jg
icebp
sahf
(bad)
call
dec
ja
inc
inc
arpl
sub
lods
add
push
mov
leave
aas
hlt
push
scas
lods
mov
clc
and
aas
add
fwait
stc
push
sub
jg
inc
out
je
push
daa
sbb
out
gs
dec
jle
jmp
lds
movs
cmps
js
sbb
(bad)
neg
or
in
xor
ds
movs
inc
push
xchg
sub
push
xchg
push
movs
xor
imul
or
pop
popa
cld
jno
arpl
pop
pop
jmp
ja
ss
fcom
xchg
push
into
cmp
pop
pop
repnz
(bad)
lahf
sbb
add
fneni(8087
mov
outs
scas
popa
pop
mov
xlat
mov
jl
sbb
jae
jecxz
repnz
mov
cmps
lods
ins
inc
sahf
mov
imul
push
cmp
jecxz
or
(bad)
cli
in
ss
ins
mov
jmp
and
adc
pop
sahf
pop
lock
scas
mov
clc
mov
or
push
add
push
pop
xchg
test
dec
jnp
mov
sbb
xor
mov
pop
mov
pop
dec
lock
test
stos
fwait
pop
jle
mov
mov
ds
adc
(bad)
jb
mov
pop
or
repnz
hlt
cmp
inc
jnp
push
fdiv
aas
clc
and
cld
mov
adc
add
repnz
add
mov
add
mov
hlt
mov
movs
xchg
lock
mov
inc
sub
pop
jle
cmps
fnsave
(bad)
out
aas
adc
add
repnz
add
mov
ins
pop
fcom
loop
mov
aam
ins
and
adc
sub
stos
test
cld
daa
scas
jle
pop
aaa
in
sub
add
jecxz
inc
ins
aas
stc
xor
outs
(bad)
mov
jmp
pop
inc
scas
sbb
push
cmp
adc
add
cmp
pop
or
cld
cdq
outs
mov
add
ja
call
psllq
dec
pop
test
inc
rcl
sub
and
add
lock
bound
fiadd
fld
in
sahf
(bad)
pop
push
xchg
mov
add
int3
cmp
inc
pusha
mov
jl
clc
cmp
idiv
cld
pop
cmps
sub
push
push
nop
daa
and
add
aam
jae
push
inc
outs
retf
call
(bad)
lock
dec
nop
leave
sub
mov
cld
lea
xlat
mov
inc
mov
inc
in
xchg
and
add
xor
jecxz
test
pop
adc
test
ror
adc
mov
fbstp
inc
sbb
inc
outs
pop
cs
and
data16
icebp
ja
cld
lds
test
xchg
(bad)
addr16
xor
in
enter
into
mov
sti
out
add
adc
push
loopne
retf
pop
(bad)
into
test
pop
fldenv
ss
pushf
jns
rcl
pop
mov
out
mov
fidiv
xchg
inc
inc
lods
data16
lahf
repnz
mov
lods
inc
hlt
xchg
mov
popa
(bad)
sbb
inc
aam
xor
xchg
dec
mov
dec
push
add
adc
stos
pop
mov
hlt
add
(bad)
std
movs
sub
shl
scas
fxch
and
fst
shl
mul
aas
add
loopne
inc
fmul
inc
shl
inc
shl
inc
or
inc
fistp
ret
fisttp
fist
ds
neg
ja
cmp
ins
push
(bad)
pop
outs
sbb
jl
icebp
scas
cdq
ins
sti
pop
jl
lock
repnz
adc
or
sub
and
push
mov
jne
outs
ja
stos
ins
aas
les
pop
retf
mov
push
dec
add
std
nop
mov
jecxz
(bad)
std
addr16
mov
push
mov
daa
lea
sub
xor
sbb
or
lds
shl
imul
or
aas
xchg
(bad)
push
aaa
sar
cld
outs
std
mov
lahf
dec
mov
push
xchg
nop
inc
or
and
adc
addr16
lahf
mov
in
ins
jecxz
add
lea
inc
loope
or
add
pop
xor
dec
repz
sbb
sub
popa
in
inc
jmp
das
test
mov
cmp
inc
movs
push
into
sbb
xor
arpl
popf
mov
inc
add
das
adc
add
int3
(bad)
es
xor
add
addr16
dec
sbb
arpl
test
loop
sub
sar
iret
inc
add
icebp
xlat
ret
outs
sub
pushf
xchg
cmp
scas
test
arpl
mov
cmp
mov
add
movs
mov
imul
and
imul
pop
lahf
cmps
fisubr
or
add
fbld
jmp
imul
inc
jle
jmp
xchg
jno
add
pop
icebp
setno
je
rcr
xor
std
cld
(bad)
xlat
dec
cmp
jno
mov
add
xchg
mov
retf
(bad)
adc
sahf
inc
in
arpl
movs
aad
repnz
xchg
inc
into
cmps
cmp
(bad)
mov
and
jmp
xchg
cmp
iret
popa
lods
and
and
add
pop
mov
fisttp
pop
call
cmps
adc
push
pop
retf
and
in
fidivr
iret
clc
dec
aas
imul
push
pop
ins
sti
gs
dec
cmp
xlat
ficom
pop
addr16
jmpw
and
xor
pop
lock
int
jmp
sbb
or
sbb
dec
std
xor
sbb
jmp
leave
out
out
inc
jge
inc
inc
dec
pop
add
add
pop
aas
in
mov
sub
add
ins
xchg
cli
ins
movs
cld
xor
int3
clc
leave
scas
clc
out
in
(bad)
popa
aam
fistp
pop
stc
js
test
push
fstp
sbb
or
neg
daa
xchg
dec
shl
fldenv
data16
fild
pop
les
cmp
fdiv
jecxz
les
jbe
add
add
inc
mov
sbb
xor
imul
int
sahf
ss
ret
mov
fs
jb
cmp
aas
jbe
pop
clc
push
loopne
(bad)
loope
pop
fiadd
movs
outs
jmp
push
push
mov
sbb
xor
repnz
clc
es
mov
push
aaa
rep
icebp
push
stos
and
jmp
mov
mov
adc
jp
mov
out
mov
inc
push
cmp
xchg
retf
in
cmp
lods
fbstp
pushf
outs
cld
adc
ret
mov
inc
imul
shl
(bad)
lahf
cmps
jmp
sub
out
lds
jecxz
rcr
call
push
test
jno
sahf
lods
mov
mov
sub
jg
dec
pusha
inc
pop
adc
add
je
push
retf
xchg
mov
dec
xor
cmp
shl
mov
std
sahf
jle
clc
stos
jecxz
xchg
push
mov
ret
test
sbb
push
and
pushf
arpl
retf
pop
sbb
cld
adc
repnz
add
push
fisubr
jmp
retf
nop
jp
aad
inc
pop
aas
imul
mov
sub
fcomp
adc
xchg
arpl
stos
dec
retf
stos
inc
scas
jle
repz
xchg
les
stc
pop
loope
jle
mov
in
pop
sub
push
inc
stos
mov
mov
pop
bound
test
fwait
sti
(bad)
out
pop
inc
shl
aad
lahf
pop
mov
(bad)
sub
xchg
mov
call
mov
xor
push
lea
push
xor
cld
or
pop
mov
ds
sar
mov
pop
cmc
mov
outs
sbb
push
clc
push
loop
add
mov
fisub
push
jbe
and
(bad)
jbe
movs
jl
icebp
out
ret
clc
jae
iret
(bad)
pop
pop
cld
inc
imul
inc
sbb
fidivr
xchg
and
inc
daa
sbb
sbb
lds
ss
mov
dec
imul
mov
rcr
xor
jecxz
sbb
add
ret
sbb
push
mov
jg
pop
ret
js
iret
dec
(bad)
neg
int
stos
pop
movs
div
leave
xor
mov
mov
fadd
ss
pop
loop
pop
lock
cld
addr16
ret
outs
xchg
leave
mov
fwait
adc
jne
ss
mov
xor
sbb
pop
mov
pop
jmp
mov
scas
lds
pop
lds
outs
sbb
mov
sete
and
adc
idiv
and
mov
or
std
stos
and
shl
sub
rcr
mov
(bad)
jne
bnd
pop
(bad)
pop
pop
and
test
fdivr
dec
sub
ins
mov
inc
dec
mov
mov
push
mov
ror
ror
inc
jnp
fist
dec
(bad)
fmul
sub
push
sub
push
sub
push
sub
daa
inc
add
cmp
scas
cmp
out
xchg
(bad)
inc
cmp
sar
add
dec
psubw
out
add
mov
stos
mov
push
test
shr
and
lds
push
das
es
mov
fcomp
arpl
test
mov
loop
mov
dec
(bad)
push
fistp
sub
mov
pop
jg
push
and
sub
(bad)
cmp
jle
pop
loope
xor
enter
cmc
lods
dec
sbb
mov
jge
(bad)
sti
lds
aad
sti
stos
push
sub
sbb
jae
xchg
js
pushf
mov
mov
jl
hlt
clc
jg
fisttp
dec
cmps
les
aaa
xor
mov
(bad)
neg
adc
mov
inc
sar
into
add
jge
out
and
mov
cmps
test
cmp
jl
clc
mov
inc
xlat
mov
xor
(bad)
leave
adc
pop
xor
pop
repz
clc
mov
mov
aas
adc
movs
cmp
(bad)
in
dec
in
repnz
out
in
loop
sub
and
cmp
dec
dec
mov
xor
dec
dec
out
cmp
icebp
stos
loop
xor
cmp
jecxz
imul
cmp
mov
out
sbb
jp
push
scas
dec
ins
sbb
dec
xor
jecxz
mov
pop
les
cmc
(bad)
mov
jmp
popf
cmp
xchg
clc
stc
mov
add
in
jns
retf
inc
rcl
jmp
dec
and
(bad)
xor
pop
jno
inc
dec
repz
(bad)
aad
pop
in
mov
pop
mov
lea
mov
aam
dec
and
dec
scas
rol
pop
push
cmp
lock
loop
ret
aad
cmp
sub
shr
adc
out
popf
mov
cmps
test
popf
out
cmp
push
and
pop
mov
ds
pop
aad
push
dec
das
outs
in
gs
test
dec
add
adc
pop
les
xchg
cli
jg
mov
sar
rol
fnsave
repnz
or
push
sub
sub
xchg
mov
sar
leave
loop
loop
inc
(bad)
adc
into
jle
pop
mov
xlat
cmp
stos
jle
clc
movs
jecxz
add
mov
fidivr
xor
mov
jecxz
adc
lea
(bad)
mov
jl
loope
hlt
pop
pop
loop
lods
ins
movs
mov
xchg
mov
sub
cmps
shl
pop
push
jg
stos
loop
jp
pop
(bad)
cmc
sbb
int
imul
push
and
aaa
test
test
inc
fimul
adc
jg
imul
call
sub
retf
mov
mov
sbb
fwait
sti
inc
pop
aad
xor
push
aam
pop
leave
cmp
and
aad
mov
xor
aad
daa
je
es
js
loop
mov
(bad)
pop
clc
dec
lds
xchg
and
adc
push
shl
add
lods
jle
lahf
sbb
cmps
les
fldcw
jne
loopne
std
sub
inc
adc
adc
cmp
jecxz
lds
call
aas
icebp
add
cmp
dec
pop
sbb
jmp
and
jmp
or
cmps
(bad)
mov
std
and
jnp
scas
frstor
iret
inc
sbb
setge
jl
icebp
jle
test
mov
sar
cmovno
lds
aas
push
xchg
std
fwait
jno
adc
mov
adc
dec
mov
mul
adc
sbb
fdivr
fnstcw
les
lahf
jecxz
pop
jmp
imul
sbb
aaa
xor
jle
js
ret
repz
adc
jmp
mov
cli
inc
adc
xor
xchg
iret
dec
add
inc
mov
pusha
out
fild
sysexit
sbb
or
aaa
mov
pop
pop
retf
cmp
sahf
mov
js
neg
inc
fwait
inc
icebp
jg
sub
scas
mov
call
sbb
inc
adc
sbb
jl
clc
pop
movs
dec
cmps
js
(bad)
sbb
int
or
mov
sbb
movs
lock
inc
mov
mov
pop
jmp
cmp
or
retf
inc
(bad)
cmp
or
pusha
ins
mov
sar
(bad)
jg
inc
cld
fs
pop
aam
pop
(bad)
and
mov
int
aad
movs
xchg
aam
ficom
sbb
add
add
pop
ret
(bad)
push
clc
sar
ret
jmp
mov
aam
out
add
fiadd
sahf
sub
or
(bad)
clc
iret
mul
bswap
mov
cmc
imul
aaa
pop
jl
cmp
jbe
sbb
mov
cld
jno
scas
(bad)
out
pop
or
push
lock
ror
ret
or
ins
mov
inc
out
xchg
mov
cmc
jge
loop
xchg
mov
fsubr
mov
repz
adc
add
(bad)
cmps
cld
adc
mov
mov
sbb
fsubrp
cmp
inc
mov
adc
stc
fnsave
mov
into
js
into
ret
lea
cld
pop
jecxz
addr16
les
stos
jmp
jo
lock
add
xchg
push
nop
je
or
pop
shr
cdq
dec
mov
js
and
mov
call
in
lods
push
sub
repnz
in
jae
xlat
jg
pop
mov
and
das
mov
dec
dec
outs
jne
inc
enter
add
sbb
scas
arpl
sbb
sbb
cmps
jae
imul
mov
dec
push
in
fsub
les
fnsave
ret
out
jae
sti
dec
jl
mov
(bad)
daa
xor
movs
pop
sbb
add
sbb
mov
dec
test
outs
xchg
ret
aam
or
mov
test
fwait
sbb
jno
pushf
outs
es
shl
cs
mov
mov
(bad)
fstp
loop
(bad)
repnz
mov
sub
bound
repnz
scas
out
repnz
fdiv
dec
arpl
ins
cmp
test
(bad)
ss
jecxz
adc
cmp
xchg
push
lock
mov
ins
sti
inc
test
ss
ins
jo
fmul
inc
cld
popa
clc
stos
movs
mov
loop
push
jmp
and
and
inc
add
retf
out
rcl
jg
(bad)
push
jmp
shl
retf
mov
add
loope
mov
lods
inc
mov
mov
jmp
cmps
stos
imul
mov
add
cld
or
rol
fwait
ret
ds
cmp
in
jp
test
outs
lods
call
sub
ret
aaa
and
pop
or
dec
(bad)
fisubr
lock
mov
cmp
cmps
js
push
mov
adc
fimul
or
outs
sbb
iret
xor
jnp
jbe
jbe
pop
sbb
inc
icebp
mov
jl
loop
push
les
ja
aas
mov
call
jmp
imul
lea
sar
jmp
imul
mov
push
add
pop
inc
in
add
mov
ss
adc
cmp
shr
jp
test
das
sahf
not
dec
iret
cmp
std
in
std
jae
pop
mov
in
jne
(bad)
fild
mov
in
fst
mov
push
out
push
lods
pusha
out
je
not
repz
int
jns
out
scas
daa
jb
and
movs
cwde
repnz
mov
inc
fcmovbe
xor
inc
mov
cmp
adc
imul
shl
lea
pusha
or
cmc
cmps
ins
lods
adc
xchg
dec
les
shl
mov
ins
mov
push
sub
mov
add
sar
dec
sti
rcr
inc
movs
aaa
adc
das
dec
jmp
fistp
stos
mov
ds
in
inc
dec
inc
je
fwait
xchg
push
push
rol
in
push
mov
jg
cmps
ret
jecxz
(bad)
outs
or
dec
mov
xchg
xchg
jnp
and
dec
and
outs
ficom
cmp
inc
cmp
sbb
push
cmps
push
mov
in
scas
das
scas
cmovs
add
pop
add
inc
jecxz
xor
scas
xchg
inc
pusha
leave
mov
(bad)
inc
mov
mov
fldcw
ret
cmp
cmp
inc
pop
xchg
fs
fmul
adc
jl
mov
mov
enter
mov
jg
inc
enter
imul
test
int
leave
jp
repnz
out
stos
xor
cld
mov
add
mov
aas
hlt
es
inc
add
xor
ret
iret
std
or
inc
cld
dec
jnp
cld
aaa
mov
aas
cli
sbb
push
pop
cld
data16
clc
outs
outs
mov
cmp
clc
int
aam
pop
(bad)
(bad)
adc
mov
add
sar
loope
js
inc
jg
es
clc
push
pop
cmp
add
sub
inc
mov
idiv
out
add
inc
loopne
retf
inc
mov
inc
or
xchg
add
push
xchg
inc
sbb
std
out
cld
sub
jl
in
addr16
iret
std
or
inc
cld
dec
pop
lock
jae
add
mov
lock
aas
inc
adc
inc
or
xchg
add
push
xchg
inc
sbb
lahf
std
push
stos
inc
sub
jno
(bad)
(bad)
pop
(bad)
call
iret
add
add
adc
inc
or
add
call
test
adc
mov
(bad)
es
jecxz
std
push
stos
inc
sub
aaa
mov
aas
cli
sbb
push
pop
cld
data16
mov
lods
shl
sti
xchg
stc
sahf
pop
inc
or
js
inc
add
xor
ret
iret
std
or
inc
cld
dec
jnp
cld
aaa
mov
aas
cli
sbb
push
pop
cld
data16
clc
outs
outs
mov
cmp
clc
int
push
lds
out
jg
pop
pop
mov
cmp
(bad)
adc
dec
icebp
pop
dec
daa
inc
loop
inc
test
lahf
cli
adc
inc
or
add
call
jg
cmp
clc
int
lock
sbb
add
jne
cld
adc
mov
inc
enter
iret
out
pop
out
pop
cld
sub
sbb
add
cdq
loop
cld
push
dec
inc
(bad)
sar
add
mov
aas
hlt
es
inc
add
xor
fistp
add
jne
cld
adc
aas
loope
mov
jmp
jecxz
jge
adc
add
fdivr
push
pop
cmp
add
sub
inc
mov
jg
dec
icebp
pop
dec
daa
inc
loop
fistp
loope
mov
jmp
jecxz
jg
jnp
jae
add
inc
(bad)
push
mov
cli
fstp
aas
mov
lock
jae
add
mov
lock
aas
inc
adc
sub
sbb
add
cdq
loop
cld
push
dec
inc
(bad)
xlat
mov
jae
add
inc
(bad)
push
clc
out
add
inc
loopne
retf
inc
mov
cmc
sbb
idiv
inc
mov
add
sar
loope
js
inc
jg
es
clc
push
pop
cmp
add
sub
inc
mov
idiv
out
add
inc
loopne
retf
inc
mov
inc
or
xchg
add
push
xchg
inc
sbb
std
out
cld
sub
jl
in
addr16
iret
std
or
inc
cld
dec
pop
lock
jae
add
mov
lock
aas
inc
adc
inc
or
xchg
add
push
xchg
inc
sbb
lahf
std
push
stos
inc
sub
jno
(bad)
(bad)
pop
(bad)
call
iret
add
add
adc
inc
or
add
call
test
adc
mov
(bad)
es
jecxz
std
push
stos
inc
sub
aaa
mov
aas
cli
sbb
push
pop
cld
data16
mov
lods
shl
sti
xchg
stc
sahf
pop
inc
or
js
inc
add
xor
ret
iret
std
or
inc
cld
dec
jnp
cld
aaa
mov
aas
cli
sbb
push
pop
cld
data16
clc
outs
outs
mov
cmp
clc
int
push
lds
out
jg
pop
pop
mov
cmp
(bad)
adc
dec
icebp
pop
dec
daa
inc
loop
inc
test
lahf
cli
adc
inc
or
add
call
jg
cmp
clc
int
lock
sbb
add
jne
cld
adc
mov
inc
enter
iret
out
pop
out
pop
cld
sub
sbb
add
cdq
loop
cld
push
dec
inc
(bad)
sar
add
mov
aas
hlt
es
inc
add
xor
fistp
add
jne
cld
adc
aas
loope
mov
jmp
jecxz
jge
adc
add
fdivr
push
pop
cmp
add
sub
inc
mov
jg
dec
icebp
pop
dec
daa
inc
loop
fistp
loope
mov
jmp
jecxz
jg
jnp
jae
add
inc
(bad)
push
mov
cli
fstp
aas
mov
lock
jae
add
mov
lock
aas
inc
adc
sub
sbb
add
cdq
loop
cld
push
dec
inc
(bad)
xlat
mov
jae
add
inc
(bad)
push
clc
out
add
inc
loopne
retf
inc
mov
cmc
sbb
idiv
inc
mov
add
sar
loope
js
inc
jg
es
clc
push
pop
cmp
add
sub
inc
mov
idiv
out
add
inc
loopne
retf
inc
mov
inc
or
xchg
add
push
xchg
inc
sbb
std
out
cld
sub
jl
in
addr16
iret
std
or
inc
cld
dec
pop
lock
jae
add
mov
lock
aas
inc
adc
inc
or
xchg
add
push
xchg
inc
sbb
lahf
std
push
stos
inc
sub
jno
(bad)
(bad)
pop
(bad)
call
iret
add
add
adc
inc
or
add
call
test
adc
mov
(bad)
es
jecxz
std
push
stos
inc
sub
aaa
mov
aas
cli
sbb
push
pop
cld
data16
mov
lods
shl
sti
xchg
stc
sahf
pop
inc
or
js
inc
add
xor
ret
iret
std
or
inc
cld
dec
jnp
cld
aaa
mov
aas
cli
sbb
push
pop
cld
data16
clc
outs
outs
mov
cmp
clc
int
push
lds
out
jg
pop
pop
mov
ds
(bad)
mov
sub
mov
inc
dec
or
or
inc
add
mov
in
or
icebp
pop
(bad)
and
daa
retf
cmp
test
or
in
sbb
mov
cmp
cld
cmp
sbb
adc
sbb
cs
xor
ret
ins
jno
test
xor
xchg
pop
add
inc
add
dec
push
push
cmps
inc
or
or
int3
adc
mov
fcom
in
push
mov
pusha
mov
pop
cs
inc
dec
inc
push
or
mov
sub
push
push
fild
mov
cs
mov
in
cmps
rcr
mov
mov
sub
fwait
mov
inc
fidivr
fisubr
and
inc
ficom
pop
(bad)
ins
sbb
mov
mov
and
inc
fidivr
pop
xor
adc
sbb
scas
cmp
inc
outs
(bad)
inc
jno
cmp
rcr
dec
(bad)
stc
cmp
idiv
nop
fcom
xchg
out
movs
call
rep
adc
sub
xchg
push
call
fcomip
dec
iret
stc
cmp
or
xlat
mov
(bad)
xchg
leave
pop
ss
sar
cmp
or
xlat
mov
(bad)
xchg
dec
pop
xlat
(bad)
adc
sbb
xchg
loop
(bad)
cld
test
add
inc
stos
push
mov
mov
hlt
and
jmp
(bad)
into
mov
and
mov
add
add
lock
inc
pop
lock
jg
jmp
push
xchg
lea
mov
(bad)
div
clc
mov
cmp
lock
xor
shl
nop
(bad)
dec
adc
adc
int3
addr16
xchg
aad
cmp
xchg
mov
mov
fwait
mov
(bad)
push
sub
inc
pushf
pop
mov
jg
dec
movs
dec
jle
sbb
clc
dec
xor
ins
inc
dec
mov
xchg
fisttp
loope
pop
arpl
out
jg
mov
loop
aas
clc
sbb
stos
jecxz
mov
test
sbb
mov
push
repnz
mov
fcom
push
adc
cmc
imul
(bad)
nop
cmps
loope
mov
inc
sti
mov
ins
push
mov
loopne
iret
mov
call
cs
int
(bad)
cmps
jae
rcr
dec
mov
add
ss
(bad)
cld
inc
test
mov
outs
cmp
(bad)
push
xchg
cmps
cmps
enter
cs
jbe
imul
mov
sbb
jmp
xlat
mov
push
stc
inc
into
sbb
xor
test
sbb
inc
jb
add
cld
enter
pop
in
out
loop
add
jl
aad
adc
(bad)
cdq
outs
xlat
aaa
xor
rol
stos
bound
enter
scas
adc
pop
push
mov
daa
cmps
out
xor
cmp
aas
dec
mov
pop
fild
pop
add
push
jae
add
test
arpl
jno
cmps
push
je
icebp
lods
or
cmp
stos
mov
push
imul
retf
push
jmp
ss
jle
fidiv
lock
mov
fcmovnu
mov
and
pop
mov
adc
aam
mov
cmp
sbb
mov
js
loopne
add
jmp
mov
addr16
sti
lahf
cmp
mov
in
dec
(bad)
inc
repnz
jle
inc
xlat
out
inc
mov
outs
inc
stc
and
inc
popa
imul
mov
(bad)
sbb
into
sbb
mov
movs
mov
rcl
pop
cmp
(bad)
retf
jmp
ins
scas
not
dec
cdq
mov
fcomp
loop
fwait
cmps
pop
fimul
hlt
pop
ret
or
and
xchg
adc
cmp
fild
dec
dec
dec
sar
inc
test
lods
and
scas
(bad)
cmp
jbe
hlt
enter
fistp
clc
cmp
das
add
es
mov
repz
daa
add
mov
mov
cmps
clc
shl
mov
clc
in
sbb
pop
mov
mov
(bad)
btr
mov
jno
ja
adc
pushf
xlat
sar
(bad)
sbb
(bad)
mov
jg
movs
jne
xchg
movs
int3
jecxz
movs
scas
hlt
mov
add
pusha
xchg
das
into
imul
out
sbb
or
and
add
sahf
pop
mov
cs
mov
pop
add
scas
addr16
inc
add
mov
lock
adc
leave
or
xacquire
and
xchg
add
aas
icebp
push
std
test
inc
inc
or
mov
js
cld
ja
rcl
mov
xor
jl
fxch
push
inc
arpl
ds
pushf
out
mov
adc
pushf
outs
adc
aam
out
xor
movs
fdiv
jb
xor
or
daa
jge
add
loope
(bad)
idiv
mov
pop
push
neg
(bad)
xlat
xchg
(bad)
sbb
xor
inc
outs
dec
add
push
pop
std
cmp
ja
mov
cs
add
xlat
mov
gs
hlt
pop
retf
inc
push
stc
xlat
mov
pop
sar
imul
scas
mov
cmps
inc
add
xor
fwait
jno
xchg
ja
mov
mov
test
out
xchg
push
sar
cmps
lds
enter
sbb
sub
cmp
icebp
adc
mov
xor
jae
scas
and
int
bnd
push
pop
sub
sub
mov
mov
xchg
pop
mov
sub
repz
out
in
leave
jecxz
xor
jg
fld
jne
xor
stc
dec
mov
push
xor
cld
cmp
mov
and
std
cmps
mov
shl
mov
mov
nop
loope
pop
add
xor
scas
scas
mov
aaa
mov
dec
icebp
adc
sbb
pop
clc
jp
sub
loop
mov
bound
sahf
add
mov
mov
test
stos
sbb
repnz
daa
inc
xchg
pushf
or
push
xchg
jmp
adc
fidivr
pop
sub
xor
retf
test
mov
mov
(bad)
sti
das
add
cmps
out
push
dec
std
jnp
cli
addr16
inc
(bad)
iret
mov
dec
hlt
in
imul
sub
movs
into
into
icebp
(bad)
cmp
push
aad
add
pushf
jne
pop
iret
ret
mov
fistp
loope
out
inc
mov
fisttp
cmps
aam
in
ret
mov
mov
into
add
jp
aas
loop
cmp
in
pop
xor
mov
fimul
pop
ins
lea
loop
out
fdivr
fidivr
pop
fxch
ret
or
lods
addr16
xchg
imul
cdq
fiadd
test
adc
lea
dec
sub
xor
mov
mov
call
xor
mov
mov
inc
xlat
aas
loopne
inc
adc
or
sub
hlt
dec
inc
add
imul
sbb
rdtsc
adc
jle
dec
ds
mov
jmp
ds
mov
push
icebp
xor
pop
mov
into
jno
jp
retf
xor
cmp
mov
jecxz
push
add
cmp
xor
imul
pop
mov
(bad)
push
lea
mov
sbb
jmp
pop
push
cmp
mov
lea
inc
xchg
jp
mov
aad
fcmove
jne
xchg
repnz
ins
xor
pop
sbb
lea
in
ror
lods
test
mov
test
sbb
arpl
in
cmp
test
ret
sbb
aad
hlt
mov
test
cmps
fstp
jns
ins
scas
shl
lahf
movs
jge
loop
stc
cmp
add
add
mov
sbb
std
mov
jecxz
loope
std
lea
fist
in
dec
mov
mov
jae
xor
je
in
cmc
and
mov
mov
stc
lahf
xor
mov
(bad)
int
dec
jnp
jge
push
jne
push
mov
mov
sub
call
and
add
gs
push
pop
mov
mov
jne
mov
repnz
stc
adc
fstp
sub
jmp
ror
loope
ret
aas
adc
or
scas
xor
arpl
retf
jb
scas
jno
xor
inc
in
arpl
cmp
loop
mov
xlat
and
ins
pop
(bad)
enter
xor
data16
not
(bad)
js
sbb
inc
pmaxsw
pushf
bound
jb
mov
imul
mov
sahf
sbb
dec
repz
das
inc
add
clc
mov
cmp
sbb
pushf
pop
int
jmp
cmp
lock
ficom
icebp
les
aam
pop
mov
stc
fst
pop
sar
ret
nop
shl
cmp
data16
sar
adc
lock
mul
loope
mov
inc
ins
std
popf
or
imul
lods
lahf
add
inc
icebp
inc
lds
jnp
aaa
sahf
xor
inc
ficom
mov
outs
mov
retf
sbb
outs
jnp
fstp
xchg
icebp
iret
sbb
cmp
xor
movs
xchg
xor
sub
mov
mov
stos
loopne
dec
cmps
mov
int
sub
not
jne
out
imul
div
adc
ja
mov
mov
mov
sub
das
in
jns
(bad)
jmp
jg
pop
pop
icebp
or
stc
jno
push
jb
nop
cmp
pushf
add
rol
pop
mov
sub
add
jp
mov
fcmovnu
pop
es
or
dec
scas
mov
push
inc
and
pop
add
cmp
lock
push
mov
cmp
ja
not
ret
sub
or
mov
inc
push
sub
cmc
repnz
data16
add
push
stc
and
in
js
out
call
test
je
aam
xchg
movs
adc
cmc
inc
int
or
test
mov
out
sbb
and
pop
cmp
and
mov
mov
mov
sub
enter
adc
xor
ja
pop
push
push
mov
cdq
cmp
into
aaa
xor
mov
scas
mov
das
icebp
mov
xlat
in
aaa
loopne
lahf
or
push
dec
mov
cmp
cs
stc
pop
xchg
xchg
mov
cmp
enter
sbb
vmovdqa
lods
jmp
jp
fistp
test
lods
test
mov
pop
or
sub
jnp
scas
pushf
mov
mov
cld
ficom
jne
jmp
cs
loope
pop
leave
jmp
mov
jg
jne
cmps
and
xor
jns
inc
adc
push
inc
adc
push
inc
adc
push
sar
add
inc
inc
pop
mov
std
sub
sti
inc
jg
cdq
dec
inc
cmc
fist
add
call
mov
mov
stos
ds
mov
mov
add
sub
push
add
cmps
rol
mov
mov
add
sub
push
add
cmps
rol
mov
mov
add
sub
push
add
cmps
rol
mov
mov
jl
leave
(bad)
paddd
mov
js
mov
bnd
add
add
lods
imul
mov
ins
sbb
push
(bad)
and
shl
ins
jge
inc
add
sbb
stos
cld
xor
add
mov
fstp
sti
push
clc
inc
inc
clc
imul
xlat
out
xchg
(bad)
dec
int3
div
cdq
popa
js
cwde
neg
mov
(bad)
mov
pushf
xchg
in
imul
inc
pop
lahf
inc
inc
xor
mov
rcr
(bad)
jle
mov
lea
outs
xchg
push
gs
cmp
jp
cmp
and
or
icebp
adc
jno
xor
loope
xchg
loop
loop
xor
cld
inc
inc
mov
sub
(bad)
adc
les
cli
adc
inc
clc
mov
fcmovb
stc
xchg
fimul
mov
jg
xchg
clc
cmp
aas
lock
aas
inc
adc
sub
pop
hlt
and
inc
add
adc
pop
jg
sti
ret
xchg
pop
mov
mov
mov
inc
mov
sub
(bad)
adc
les
cli
adc
inc
clc
mov
loope
cs
sbb
ret
retf
ret
pop
adc
and
dec
mov
in
cs
ficomp
imul
jo
cmp
call
pop
std
or
and
add
dec
inc
cld
inc
pop
lock
(bad)
and
(bad)
loop
cld
adc
inc
les
cs
sbb
push
cmps
sbb
stos
fldcw
dec
dec
sub
dec
fisub
mov
outs
sbb
inc
push
bound
or
fbstp
(bad)
adc
add
(bad)
fbstp
clc
dec
out
sahf
sub
rcr
adc
shl
push
pop
sbb
add
dec
jno
jle
inc
test
icebp
add
test
jg
cmps
jg
and
adc
call
or
add
sub
or
test
loope
mov
or
neg
xchg
loop
push
fldcw
jg
pop
scas
sub
mov
dec
dec
pop
imul
mov
inc
rcr
mov
scas
cld
inc
jo
jae
and
fcom
dec
int3
jp
icebp
das
push
(bad)
(bad)
mov
mov
jge
ret
mov
jno
bound
jl
and
mov
jae
fsub
cld
inc
inc
or
pop
std
or
and
add
dec
inc
cld
inc
pop
lock
(bad)
and
(bad)
loop
cld
adc
inc
les
pop
loope
push
pusha
mov
push
popf
jp
leave
retf
jecxz
inc
and
xchg
arpl
(bad)
sub
dec
test
scas
fwait
ds
(bad)
in
sbb
dec
pop
icebp
mov
jne
lahf
push
pop
retf
jae
dec
cmp
jge
retf
mov
dec
mov
or
jno
mov
mov
ret
mov
inc
lock
test
aas
xchg
idiv
mov
jecxz
mov
inc
(bad)
adc
les
cli
adc
inc
clc
mov
loope
cld
inc
inc
mov
sub
pop
mov
out
pop
retf
sub
xor
sub
shl
xchg
xor
int
hlt
imul
sbb
push
fild
(bad)
mov
inc
or
dec
lahf
loop
mov
pop
fiadd
lods
mov
mov
and
dec
add
pop
fwait
cmc
fnstcw
xchg
clc
cmp
aas
lock
aas
inc
adc
sub
pop
hlt
and
inc
add
adc
sbb
shr
push
push
jl
mov
fidiv
aas
test
(bad)
retf
sbb
jg
dec
mov
(bad)
push
push
clc
dec
loopne
add
pop
clc
scas
pop
dec
mov
dec
mov
ss
sbb
jl
dec
ficomp
arpl
lods
loope
cmps
or
mov
jae
test
call
stc
pop
(bad)
adc
les
cli
adc
inc
clc
mov
loope
cld
inc
inc
mov
sub
popf
int3
jl
enter
sbb
lds
imul
push
sub
jbe
call
xor
inc
mov
pop
jne
inc
xor
aas
ficomp
call
xchg
lock
mov
int
(bad)
or
xor
std
loopne
xor
mov
jmp
mov
adc
(bad)
mov
add
mov
addr16
xchg
xchg
mov
jo
inc
mov
jp
les
movs
(bad)
and
(bad)
loop
cld
adc
inc
les
add
pop
loop
std
or
and
add
dec
inc
cld
inc
jb
ret
cli
scas
add
xor
jne
loope
lods
fisttp
into
push
imul
fwait
bound
dec
jne
ins
lods
fdivrp
add
sti
bound
pop
clc
jns
clc
push
shl
lods
pop
jmp
loop
or
aaa
arpl
cwde
add
std
stos
jle
clc
mov
hlt
pop
push
icebp
test
ficomp
pop
push
fwait
data16
jl
sub
sbb
shl
aas
push
inc
ret
cmp
aas
lock
aas
inc
adc
sub
pop
hlt
and
inc
add
adc
sub
xor
stos
xor
mov
adc
mov
mov
clc
jns
fs
jmp
loop
addr16
lds
stos
pop
ficomp
cld
dec
mov
pop
jl
clc
imul
out
popf
sub
xor
mov
dec
retf
jp
nop
cmp
loope
add
(bad)
ret
clc
jne
loope
pop
fmul
int
cmp
fdivp
inc
repz
sub
in
loopne
xor
push
jp
retf
movs
(bad)
and
(bad)
loop
cld
adc
inc
les
add
pop
loop
std
or
and
add
dec
inc
cld
inc
fs
fmul
int
xchg
inc
cmp
repz
call
rcl
inc
ins
(bad)
aad
aam
push
in
dec
into
(bad)
ror
std
pop
push
out
jg
(bad)
sar
add
adc
mov
aaa
pop
mov
lods
dec
ins
adc
jno
adc
sbb
call
test
out
fisubr
icebp
dec
leave
movs
imul
stc
pop
pop
aad
or
inc
cmp
cwde
cmp
cmc
inc
or
pop
std
or
and
add
dec
inc
cld
inc
pop
lock
(bad)
and
(bad)
loop
cld
adc
inc
les
adc
dec
sbb
rol
shr
mov
out
dec
xor
mov
xor
mov
mov
xchg
sbb
in
stc
stc
mov
pop
ja
(bad)
clc
and
lds
jmp
sbb
aad
mov
lods
rcr
pop
das
sti
mov
jp
mov
inc
imul
(bad)
outs
jle
mov
cs
loop
jnp
ret
idiv
mov
test
cld
iret
repz
xor
sub
xchg
clc
cmp
aas
lock
aas
inc
adc
sub
pop
hlt
and
inc
add
adc
ret
stc
jbe
or
movs
inc
adc
cmp
imul
jne
mov
dec
push
or
cmp
not
jl
icebp
mov
daa
mov
stos
pop
fld
arpl
ret
(bad)
cmp
test
pop
fiadd
dec
clc
sbb
lea
jb
lahf
inc
(bad)
and
cmp
inc
pop
arpl
out
mov
cmp
adc
(bad)
and
(bad)
loop
cld
adc
inc
les
add
pop
loop
std
or
and
add
dec
inc
cld
inc
jnp
push
xchg
sbb
ret
loop
int
imul
mov
mov
jmp
(bad)
xchg
adc
dec
iret
cld
iret
mov
or
icebp
sbb
push
push
mov
fisttp
gs
imul
mov
sti
push
test
mov
jne
fiadd
ret
shl
movs
sar
mov
movs
push
adc
push
mov
je
xlat
add
jg
dec
cld
inc
inc
mov
sub
(bad)
adc
les
cli
adc
inc
clc
mov
bnd
mov
(bad)
stos
push
mov
push
push
mov
leave
xor
in
ja
xchg
mov
sub
stos
stos
xchg
inc
inc
pop
ins
adc
scas
pop
idiv
jecxz
jg
out
cmp
hlt
fisttp
leave
stos
js
out
ins
and
mov
dec
pop
adc
jns
outs
repnz
mov
std
lods
mov
dec
loopne
or
movs
ja
(bad)
xlat
jp
(bad)
rol
sbb
push
add
sbb
lock
(bad)
and
(bad)
loop
cld
adc
inc
les
add
pop
loop
std
or
and
add
dec
inc
cld
inc
jae
push
adc
out
push
(bad)
ret
(bad)
(bad)
and
cmp
in
fwait
out
xchg
mov
cmc
jnp
outs
push
ins
fist
pop
fidiv
xchg
mov
std
test
adc
arpl
pop
jno
iret
adc
cli
cli
shl
pop
data16
add
outs
stos
retf
(bad)
ret
and
mov
icebp
aaa
idiv
test
jle
lock
lods
jae
jge
mov
cmps
pop
xchg
or
or
in
and
xchg
mov
lahf
dec
in
push
inc
or
pop
std
or
and
add
dec
inc
cld
inc
pop
lock
(bad)
and
(bad)
loop
cld
adc
inc
les
cmp
loope
bound
aas
outs
push
fadd
cmps
mov
mov
std
fidivr
and
pop
into
jno
sub
(bad)
fistp
add
push
inc
adc
call
or
add
sub
add
test
jg
cmps
jg
and
cdq
jge
iret
jb
mov
rcr
cld
sub
pop
hlt
and
inc
add
adc
ret
cmp
aas
lock
aas
inc
adc
xchg
das
mov
push
mov
mov
cdq
inc
clc
mov
loope
cld
inc
inc
mov
sub
fcmovb
stc
xchg
ficomp
in
jno
hlt
dec
(bad)
icebp
lahf
fcom
idiv
add
call
push
icebp
xchg
in
jbe
jg
mov
cs
pop
fnstenv
mov
std
mov
ret
loope
ret
inc
or
dec
loope
scas
outs
xor
in
sahf
jns
lods
inc
inc
js
mov
outs
adc
jl
mov
clc
pop
dec
cmp
imul
stc
cmp
imul
ins
sbb
push
add
shl
ins
sbb
push
add
shl
ins
sbb
push
add
shl
ins
sbb
push
add
shl
ins
sbb
push
add
shl
ins
sbb
push
add
shl
ins
jge
inc
add
sbb
scas
mov
(bad)
inc
jno
cmp
dec
iret
stc
cmp
(bad)
nop
fcom
mov
jge
mov
in
sbb
in
mov
addr16
shr
popf
inc
fcmovb
ret
retf
fistp
inc
out
and
xchg
dec
add
cmp
jl
sti
inc
jl
clc
popa
push
mov
movs
fldcw
fnsave
shl
retf
push
je
outs
jle
fnstcw
add
rcr
jl
clc
(bad)
loope
xchg
pop
sub
dec
aam
adc
add
fiadd
xor
sub
jg
add
loopne
sti
out
das
(bad)
aas
pop
(bad)
fmul
pop
in
rcr
fistp
fbstp
xchg
add
add
(bad)
das
mov
add
push
jg
js
jbe
add
fidivr
stos
out
jg
mov
xabort
(bad)
sti
mov
add
push
lock
dec
fcomp
jle
sub
leave
pop
stc
add
ret
jg
js
jbe
add
fidivr
stos
aas
loope
jle
jg
sti
aaa
dec
in
aas
clc
aad
aas
lock
inc
call
add
inc
(bad)
call
clc
jg
add
loopne
sti
out
das
(bad)
aas
inc
sub
leave
pop
stc
add
ret
jg
js
jbe
add
fidivr
stos
aas
loope
jle
jg
sti
aaa
dec
in
aas
clc
aad
aas
lock
inc
call
add
inc
(bad)
call
clc
jg
add
loopne
sti
out
das
(bad)
aas
inc
sub
leave
pop
stc
add
ret
jg
js
jbe
add
fidivr
stos
aas
loope
jle
jg
sti
aaa
dec
in
aas
clc
aad
aas
lock
inc
call
add
inc
(bad)
call
clc
jg
add
loopne
sti
out
das
(bad)
aas
inc
sub
leave
pop
stc
add
ret
jg
js
jbe
add
fidivr
stos
aas
loope
jle
jg
sti
aaa
dec
in
aas
clc
aad
aas
lock
inc
call
add
inc
(bad)
call
clc
jg
add
loopne
sti
out
das
(bad)
aas
inc
sub
leave
pop
stc
add
ret
jg
js
jbe
add
fidivr
stos
aas
loope
jle
jg
sti
aaa
dec
in
aas
clc
aad
aas
lock
inc
call
add
inc
(bad)
call
clc
jg
add
loopne
sti
out
das
(bad)
aas
inc
sub
leave
pop
stc
add
ret
jg
js
jbe
add
fidivr
stos
aas
loope
jle
jg
sti
aaa
dec
in
aas
clc
aad
aas
lock
inc
call
add
inc
(bad)
call
clc
jg
add
loopne
sti
out
das
(bad)
aas
inc
sub
leave
pop
stc
add
ret
jg
js
jbe
add
fidivr
stos
aas
loope
jle
jg
sti
aaa
dec
in
aas
clc
aad
aas
lock
inc
call
add
inc
(bad)
call
clc
jg
add
loopne
sti
out
das
(bad)
aas
inc
sub
leave
pop
stc
add
ret
jg
js
jbe
add
fidivr
stos
aas
loope
jle
jg
sti
aaa
dec
in
aas
clc
aad
aas
lock
inc
call
add
inc
(bad)
call
clc
jg
add
loopne
sti
out
das
(bad)
aas
inc
sub
leave
pop
stc
add
ret
jg
js
jbe
add
fidivr
stos
aas
loope
jle
jg
sti
aaa
dec
in
aas
clc
aad
aas
lock
inc
call
add
inc
(bad)
call
clc
jg
add
loopne
sti
out
das
(bad)
aas
inc
sub
leave
pop
stc
add
ret
jg
js
jbe
add
fidivr
stos
aas
loope
jle
jg
sti
aaa
dec
in
aas
clc
aad
aas
lock
inc
call
add
inc
(bad)
call
clc
jg
add
loopne
sti
out
das
(bad)
aas
inc
sub
leave
pop
stc
add
ret
jg
js
jbe
add
fidivr
stos
aas
loope
jle
jg
sti
aaa
dec
in
aas
clc
aad
aas
lock
inc
call
add
inc
(bad)
call
clc
jg
add
loopne
sti
out
das
(bad)
aas
inc
sub
leave
pop
stc
add
ret
jg
js
jbe
add
fidivr
stos
aas
loope
jle
jg
sti
aaa
dec
in
aas
clc
aad
fcmovbe
in
or
inc
ret
scas
pop
js
loop
pop
mov
in
inc
into
aas
fst
movs
sti
push
pop
shl
(bad)
popf
ja
lods
aam
pop
pop
inc
in
adc
retf
aaa
pop
add
adc
lea
adc
das
mov
fnstsw
jg
sti
aaa
dec
in
aas
clc
aad
lock
sbb
inc
add
mov
sar
push
not
iret
cs
jg
js
jbe
add
fidivr
stos
aas
loope
jle
jg
sti
aaa
dec
in
aas
clc
aad
sbb
repnz
mov
iret
clc
outs
pop
mov
hlt
ds
add
inc
cld
aaa
pop
outs
cli
pop
inc
sar
add
scas
add
push
test
inc
or
xchg
mov
add
test
add
add
(bad)
das
mov
add
push
loopne
push
cmc
jp
retf
out
jae
aas
loope
jle
jg
sti
aaa
dec
in
aas
clc
aad
lock
sbb
inc
add
mov
dec
stc
push
fcomp
out
jnp
cld
aaa
pop
outs
cli
pop
inc
sar
add
mov
mov
btr
mov
push
adc
sub
sbb
xchg
clc
in
inc
inc
in
(bad)
das
mov
add
push
jg
js
jbe
add
fidivr
stos
lock
cli
mov
jae
mov
aas
sbb
inc
add
(bad)
clc
outs
pop
mov
hlt
ds
add
pop
pop
inc
pop
push
movs
cld
stos
out
push
jns
cmp
mov
(bad)
pop
pop
fnstcw
push
adc
mov
sbb
cmp
call
mov
sbb
jge
movs
mov
loope
adc
aaa
ins
sbb
push
jb
aaa
ins
sbb
push
retf
shl
aaa
ins
sbb
push
retf
shl
aaa
ins
sbb
push
retf
shl
aaa
ins
sbb
push
retf
shl
aaa
ins
sbb
push
retf
shl
aaa
ins
sbb
push
retf
shl
aaa
ins
jge
inc
add
sbb
scas
cmp
inc
outs
(bad)
inc
jno
cmp
lock
(bad)
cmp
inc
fcomi
(bad)
nop
fcom
jecxz
test
imul
test
sub
cli
dec
dec
in
cmps
fistp
sar
xchg
adc
push
icebp
nop
mov
pop
push
cli
mov
inc
xor
retf
fdiv
idiv
add
out
das
fmul
rcl
fwait
not
loope
sub
ss
jmp
int
fimul
cmp
mov
pop
pusha
cmp
sub
ds
dec
fist
jle
clc
jbe
jae
cmp
jmp
xor
push
bound
jns
cmp
aam
jmp
pop
into
aas
in
js
repz
mov
inc
sbb
jmp
(bad)
bound
sub
ret
push
push
jmp
lock
lds
and
sbb
scas
out
ins
vsqrtps
mov
cmp
daa
cmp
adc
mov
pop
unpckhps
sar
xchg
hlt
lods
cs
sti
sub
push
dec
sub
add
cmp
movs
inc
in
dec
lock
xchg
adc
ja
jmp
sub
mov
and
or
inc
xor
jb
rcl
mov
lods
xchg
mov
mov
sbb
sti
cld
iret
int3
mov
pop
in
mov
mov
jne
clc
dec
ret
lock
adc
mov
push
popf
in
inc
out
pop
nop
retf
adc
push
push
jp
das
ret
ja
pop
cmp
js
push
icebp
push
test
xor
or
xor
or
stos
mov
adc
jb
(bad)
jmp
lahf
test
mov
fisttp
jg
das
mov
sbb
stos
fimul
mov
dec
mov
and
sbb
cmp
or
ins
addr16
xchg
sub
mov
sar
pop
xor
and
fimul
and
repz
cmp
add
ret
mov
icebp
sub
xchg
into
(bad)
push
jne
push
addr16
ret
scas
jecxz
adc
sti
ins
and
jb
dec
mov
pop
pushf
ds
pavgw
sar
or
inc
mov
jecxz
xor
js
into
xor
(bad)
mov
push
mov
adc
ss
rcr
sub
push
and
adc
int
cdq
jl
mov
xlat
jecxz
sar
(bad)
mov
sub
push
sub
retf
mov
mov
mov
mov
and
movs
ficomp
ja
mov
retf
dec
mov
mov
jp
call
test
ins
cld
scas
mov
pop
imul
mov
(bad)
pop
lea
dec
dec
or
aaa
jae
jne
push
mov
pop
push
mov
int
leave
xchg
jb
repz
lds
aad
mov
call
(bad)
js
push
fldenv
xor
sbb
add
inc
jle
js
rcr
icebp
mov
pop
icebp
(bad)
aad
mov
fwait
dec
mov
cmps
fwait
push
mov
cmps
jbe
in
xchg
mov
leave
sbb
rcl
add
clc
out
ror
mov
iret
mov
aas
mov
aam
jns
in
es
cdq
and
or
inc
sbb
sahf
push
mov
sbb
mov
jge
idiv
pop
popf
mov
call
cmps
rcr
lds
test
sbb
push
mov
mov
fmul
mov
nop
push
rol
pop
cli
(bad)
mov
icebp
ins
test
sub
mov
repz
into
push
sub
mov
pop
and
pop
and
adc
mov
scas
mov
call
push
cmps
in
cdq
cmps
pop
jmp
xchg
scas
lahf
popa
ins
sub
or
lock
push
inc
in
dec
sbb
mov
ins
push
mov
repz
or
sahf
in
addr16
push
stc
(bad)
mov
jge
imul
outs
mov
loope
in
popa
loope
cmp
cmp
sbb
test
(bad)
icebp
sub
retf
pop
clc
jecxz
out
sbb
or
cmp
sbb
xor
xor
sub
xchg
xor
jb
scas
mov
sub
mov
popf
adc
push
xlat
scas
xchg
inc
loope
hlt
jmp
(bad)
dec
bound
js
inc
dec
adc
jmp
outs
loopne
mov
out
cs
sub
add
pop
jp
int3
jg
cmp
icebp
dec
inc
clc
xchg
icebp
cmps
(bad)
cmp
aad
lea
(bad)
outs
or
jbe
test
js
idiv
popa
loope
push
cld
sbb
popf
mov
mov
movs
pop
dec
fistp
out
adc
xchg
xchg
retf
fadd
rcr
hlt
cmp
cmps
sbb
mov
dec
sub
std
cmp
pop
clc
mov
mov
jg
ja
nop
push
mov
loop
sub
xchg
dec
lea
fild
ss
sub
in
mov
cmc
ins
adc
test
pop
xchg
pmulhuw
ret
rcl
loope
cmp
xlat
in
(bad)
(bad)
das
mov
cld
xor
pop
lahf
adc
push
idiv
inc
bound
cmp
pusha
pop
lds
inc
ins
daa
xchg
enter
jecxz
xchg
add
ds
shl
fimul
mov
std
lods
loop
cmp
outs
es
arpl
cdq
mov
test
(bad)
and
bnd
ror
in
jmp
(bad)
mov
jns
(bad)
ficomp
push
std
xchg
mov
dec
push
inc
test
clc
dec
arpl
and
adc
mov
mov
out
cld
push
sti
sbb
sub
(bad)
xor
inc
inc
mov
cli
imul
push
(bad)
xlat
adc
ret
sbb
bound
imul
jbe
(bad)
sub
jg
cld
cli
sbb
add
xlat
dec
lahf
mov
jne
jle
jl
std
call
(bad)
cmc
jg
js
jl
stos
clc
pop
cmc
sbb
mov
mov
mov
aaa
adc
sti
xor
jmp
mov
xchg
(bad)
stos
loope
imul
lods
mov
jmp
jae
or
shr
jno
cwde
call
xor
jno
(bad)
sbb
call
aas
or
add
test
clc
aaa
imul
jl
jns
fild
xor
dec
and
shl
inc
push
xchg
pop
sahf
cmps
pop
pop
mov
dec
(bad)
ret
inc
add
ins
mov
mov
xor
jns
mov
les
pushf
sbb
mov
rol
movs
pop
mov
mov
pop
mov
cwde
aam
into
popf
aas
push
clc
jne
popf
push
rcr
imul
inc
(bad)
mov
xor
inc
cmc
add
adc
nop
imul
outs
lea
fisttp
jl
mov
lods
or
mov
aad
add
mov
mov
cld
xchg
add
clc
(bad)
inc
inc
adc
jg
cmp
sbb
std
and
mov
and
out
lock
div
pop
test
pop
fsubr
mov
cs
inc
push
or
loope
adc
pusha
mov
cs
inc
push
or
loope
adc
pusha
mov
cs
inc
push
or
loope
adc
pusha
mov
cs
inc
push
or
loope
adc
pusha
mov
cs
inc
push
or
loope
adc
pusha
mov
cs
inc
daa
ins
loopne
sti
jle
add
sbb
std
cmp
in
mov
(bad)
inc
jno
push
pop
mov
cmps
std
cmc
jmp
sbb
inc
adc
sbb
pop
dec
jg
cmp
in
in
aas
in
sbb
add
ret
sti
es
sar
push
jl
sar
xchg
xor
(bad)
dec
mov
sbb
push
int3
shl
and
pop
cmp
sbb
adc
fcom
pushf
xchg
call
dec
jle
inc
shl
push
shl
addr16
adc
sbb
mov
inc
inc
jl
jecxz
fsubr
(bad)
data16
cmc
das
xchg
fnsave
mov
retf
sub
sbb
jmp
sti
push
cld
or
sbb
pop
xchg
ficomp
xchg
jmp
or
xor
pop
(bad)
fsubr
mov
je
sub
pop
jmp
xchg
int
test
push
out
pop
fdiv
lock
iret
mov
daa
clc
retf
jecxz
add
xlat
push
aam
mov
mov
xchg
or
add
add
into
cmp
das
fcom
push
aaa
aas
mov
mov
cmc
and
outs
mov
xchg
jl
clc
imul
jp
mov
jecxz
mov
lds
mov
out
gs
loopne
in
xor
inc
adc
jg
jno
jno
mov
into
pop
dec
mov
mov
daa
sbb
cmp
xchg
mov
sub
jae
cmps
int
fisubr
xor
int
les
icebp
iret
cmp
cmp
sub
mov
xor
fisttp
into
fidiv
call
addr16
ret
das
xor
mov
sub
test
outs
pop
nop
or
std
dec
imul
mov
dec
shl
fstp
gs
and
mov
pushf
jae
dec
jecxz
enter
push
std
stos
(bad)
adc
xlat
ret
cmp
mov
jmp
and
mov
add
jo
call
call
dec
ins
in
iret
xor
add
outs
(bad)
cld
sub
mov
sti
xor
in
xor
cmp
sub
test
cmp
mov
inc
inc
xchg
(bad)
les
cmps
sar
push
retf
aas
outs
fiadd
lea
dec
loop
push
mov
and
pop
fisub
imul
sub
cmp
dec
and
dec
scas
pop
clc
adc
push
cmp
cmp
call
fisttp
repnz
dec
rol
rcl
push
lea
inc
fbstp
ss
int
mov
pop
icebp
(bad)
loope
jecxz
rcr
fistp
jo
leave
add
cmp
mov
add
add
mov
cs
rol
cmp
in
push
loop
mov
pinsrw
add
fcmove
jnp
xchg
dec
sar
rol
fsub
or
outs
xchg
pop
push
and
and
leave
shr
lods
mov
rol
jbe
pop
mov
call
mov
cmp
cs
imul
jno
cmp
cmp
sub
dec
cld
sub
cmp
fnstsw
ror
cmp
call
int3
clc
popa
(bad)
jg
jle
jg
and
test
dec
outs
ss
repnz
outs
test
pop
adc
and
jl
imul
mov
add
xor
sar
sahf
cwde
lods
inc
test
mov
ret
les
fdivr
ds
je
jb
pop
dec
jecxz
mov
repnz
inc
inc
loope
cmp
adc
out
int
mov
sti
dec
in
stos
xor
jb
mov
cmc
data16
psubusw
clc
das
loop
iret
sbb
jmp
scas
dec
cmp
and
cmps
into
fcom
and
test
cmp
adc
pop
sbb
mov
outs
mov
mov
je
das
dec
mov
adc
imul
and
push
jle
fistp
sar
lds
mov
hlt
sbb
pop
mov
pop
mov
xor
scas
ja
or
(bad)
cmp
jle
fisubr
clc
ins
movs
jmp
das
stos
pop
int
popf
inc
xor
xchg
into
or
loopne
stos
hlt
in
(bad)
movs
stos
inc
retf
imul
xchg
push
mov
mov
add
dec
mul
xor
jmp
(bad)
xor
xchg
push
pop
push
xor
cmps
mov
scas
cld
aas
icebp
vcmpsd
push
mov
mov
call
and
cmp
add
stc
mov
jb
(bad)
into
in
pop
idiv
clc
inc
loope
jbe
pop
sar
fsubr
imul
mov
aaa
lds
in
jnp
arpl
data16
sar
inc
cmp
xor
(bad)
xor
sbb
pop
pusha
xchg
jne
shr
mov
arpl
cmps
call
addr16
jg
xchg
(bad)
std
pop
dec
mov
mov
(bad)
jne
popa
mov
jl
adc
inc
cmp
stos
inc
push
es
outs
cmp
xchg
in
cmp
loope
ret
inc
ror
rcr
test
or
imul
jge
jmp
test
std
mov
sbb
fwait
loop
(bad)
sti
push
cld
push
icebp
ja
mov
inc
loope
movs
movs
mov
ins
je
pop
cwde
add
xor
lahf
jae
fdivr
or
imul
ss
jnp
in
in
enter
rcr
fsubr
in
xchg
lock
and
and
ficom
adc
sub
cmp
pop
mov
sar
lods
js
les
test
iret
or
mov
xchg
lods
clc
popa
movs
imul
data16
jns
push
and
pop
mov
sub
aam
add
adc
jecxz
pop
sub
movs
loope
mov
xchg
bound
mov
xchg
inc
sbb
movs
jo
jp
push
adc
mov
xlat
call
sub
xchg
fyl2xp1
and
mov
mov
in
popf
fisub
cmp
(bad)
scas
push
icebp
out
xor
xchg
lods
dec
jbe
int
ret
(bad)
xchg
mov
add
retf
add
sbb
and
je
imul
imul
stos
jg
lahf
xchg
aam
shl
xor
sub
imul
jb
into
in
pusha
je
dec
dec
pminub
add
xchg
loope
sahf
call
or
mov
add
cmp
or
push
mov
fwait
jb
arpl
mov
gs
mov
xchg
xor
icebp
add
inc
rcr
div
popa
movs
jg
imul
pop
and
fisttp
sbb
cmps
scas
fs
add
bound
rol
enter
sub
pop
icebp
scas
in
jae
call
sbb
(bad)
push
mov
jns
out
cmp
fcom
mov
add
sahf
fadd
mov
out
inc
push
mov
xor
xchg
pop
cmp
sbb
mov
sub
test
outs
mov
test
ret
push
mov
sub
jae
xchg
xchg
clc
xchg
adc
pop
mov
sar
(bad)
scas
loopne
fadd
fiadd
stos
inc
popa
movs
pop
inc
repz
xor
inc
add
ja
pop
cmp
dec
mov
adc
mov
cmp
mov
movs
gs
sti
pop
xchg
aas
shl
lahf
fidivr
in
icebp
mov
(bad)
loopne
aas
mov
shr
daa
xchg
pop
jmp
and
iret
ins
outs
test
xchg
fadd
into
ds
les
xlat
(bad)
fild
iret
pop
(bad)
adc
rcr
and
mov
outs
sbb
dec
and
dec
scas
add
cmps
or
ror
ss
retf
retf
cmps
sub
mov
jl
mov
dec
inc
scas
mov
add
and
inc
add
test
pop
std
jno
inc
ror
cmps
clc
jnp
or
dec
aad
cmc
out
mov
inc
lock
pop
pop
inc
shl
jb
add
add
sbb
mov
shl
ds
sti
push
cld
push
mov
(bad)
icebp
iret
lds
sub
xchg
xlat
dec
mov
mov
xchg
enter
in
push
cdq
lds
stos
or
mov
in
mov
inc
and
xor
in
jle
xchg
push
inc
adc
jae
adc
inc
jae
adc
inc
jae
adc
inc
jae
adc
inc
jae
adc
inc
jae
adc
inc
jae
adc
inc
jae
adc
inc
jae
adc
inc
jae
adc
inc
jae
adc
inc
jae
adc
inc
jae
adc
inc
jae
adc
inc
jae
adc
inc
jae
adc
add
fs
push
outs
ret
dec
mov
shr
and
sti
scas
adc
jmp
loop
cmp
addr16
jae
adc
enter
mov
aam
sbb
cmps
in
pop
fidiv
push
push
dec
out
xchg
sbb
inc
pop
sbb
inc
adc
sbb
inc
adc
sbb
pop
inc
jle
lahf
bnd
push
inc
mov
std
and
aas
pusha
dec
stc
cmp
add
idiv
nop
iret
pop
clc
(bad)
loopne
sar
inc
xchg
in
(bad)
aam
jmp
sbb
scas
retf
sbb
adc
imul
mov
mov
adc
int
loop
mov
iret
push
push
push
or
test
sahf
movs
sahf
rol
cmp
push
popa
mov
dec
adc
jg
es
pop
in
pop
jb
mov
(bad)
cs
mov
inc
push
neg
cld
pop
jge
jge
pop
idiv
aas
aaa
test
mov
scas
mov
test
pop
mov
fwait
addr16
mov
sbb
cmp
jge
push
jg
dec
fld
inc
mov
jne
int3
cmps
out
sub
cld
cmps
mov
iret
add
add
xchg
adc
add
fsubp
inc
mov
dec
cli
pop
cmp
inc
cmp
cs
test
mov
cwde
inc
clc
fstp
fcomp
cld
jnp
add
add
call
inc
add
scas
out
jns
pop
lock
stc
loop
cld
sbb
jg
je
ret
mov
add
mov
outs
jno
add
xlat
mov
enter
icebp
out
std
repz
inc
sbb
inc
mov
cwde
inc
clc
fstp
test
jne
jmp
cmp
(bad)
pop
les
pop
cmp
inc
cmp
cs
clc
pop
lahf
adc
call
or
idiv
add
dec
fld
inc
mov
je
bound
aas
hlt
pop
icebp
out
std
repz
inc
sbb
add
mov
jg
in
clc
mov
add
mov
outs
jno
add
sar
add
mov
daa
std
setle
(bad)
inc
pop
pop
inc
std
mov
and
add
pop
(bad)
mov
outs
(bad)
in
dec
fld
inc
mov
je
fsub
inc
add
psubb
adc
call
or
aas
loope
jl
inc
mov
aaa
mov
(bad)
add
or
idiv
stc
(bad)
inc
(bad)
sar
mov
and
add
pop
(bad)
mov
outs
(bad)
sti
test
add
adc
add
add
mov
daa
std
setle
(bad)
inc
pop
inc
cld
cs
mov
inc
push
neg
cld
pop
jnp
add
daa
in
cmp
inc
jg
inc
fbstp
inc
icebp
mov
pop
cli
or
idiv
stc
(bad)
inc
(bad)
sar
add
inc
pop
pop
into
mov
jbe
inc
inc
mov
aaa
mov
inc
test
icebp
adc
xchg
adc
add
fsubp
inc
mov
nop
jg
das
jecxz
sti
out
(bad)
aaa
inc
mul
in
cmp
inc
jg
inc
fbstp
inc
icebp
mov
add
inc
jmp
xlat
fidivr
cld
cs
mov
inc
push
neg
cld
pop
pop
lock
stc
loop
cld
sbb
jg
jne
inc
fcomp
cld
jnp
add
add
call
jg
das
jecxz
sti
out
(bad)
aaa
inc
std
ret
or
cmp
iret
add
add
xchg
adc
add
fsubp
inc
mov
dec
cli
pop
cmp
inc
cmp
cs
test
mov
cwde
inc
clc
fstp
fcomp
cld
jnp
add
add
call
inc
add
scas
out
jns
pop
lock
stc
loop
cld
sbb
jg
je
ret
mov
add
mov
outs
jno
add
xlat
mov
enter
icebp
out
std
repz
inc
sbb
inc
mov
cwde
inc
clc
fstp
test
jne
jmp
cmp
(bad)
pop
les
pop
cmp
inc
cmp
cs
clc
pop
lahf
adc
call
or
idiv
add
dec
fld
inc
mov
je
bound
aas
hlt
pop
icebp
out
std
repz
inc
sbb
add
mov
jg
in
clc
mov
add
mov
outs
jno
add
sar
add
mov
daa
std
setle
(bad)
inc
pop
pop
inc
std
mov
and
add
pop
(bad)
mov
outs
(bad)
in
dec
fld
inc
mov
je
fsub
inc
add
(bad)
pop
icebp
mov
cmc
int
pop
fs
cmps
(bad)
jmp
sti
imul
das
fincstp
loopne
(bad)
sub
mov
sbb
inc
aad
jg
retf
cmps
js
adc
mov
jo
dec
or
inc
xor
and
lahf
xchg
je
call
sbb
or
or
and
mov
imul
pop
cdq
es
out
je
in
mov
mov
inc
push
or
push
pusha
mov
inc
push
or
push
pusha
mov
inc
push
or
push
pusha
mov
inc
push
or
push
pusha
mov
inc
push
or
push
pusha
mov
inc
push
or
push
pusha
mov
inc
push
or
push
pusha
mov
sar
leave
sbb
mov
inc
sub
movs
aad
repz
(bad)
xchg
and
pop
xor
sbb
adc
jmp
pop
cdq
inc
or
and
fs
pop
sbb
mov
ret
push
pop
scas
popf
loope
test
or
imul
pop
leave
push
xchg
mov
add
(bad)
in
push
dec
jno
mov
mov
jae
daa
mov
icebp
(bad)
div
shl
jg
out
lods
jl
arpl
mov
cmps
adc
in
add
xchg
stc
lods
out
cmp
dec
sar
lods
xchg
ins
fisub
daa
push
mov
mov
mov
in
out
test
cmp
mov
add
push
or
mov
retf
pop
and
jne
push
dec
adc
mov
push
scas
mov
jmp
push
mov
sti
pop
int3
mov
je
repz
xlat
jmp
movs
add
call
int3
xchg
inc
mov
pushf
mov
je
mov
mov
mov
add
jno
shl
adc
or
add
add
mov
pusha
dec
stc
cmp
add
idiv
nop
iret
pop
clc
test
cdq
cli
aas
enter
in
push
repz
adc
jb
sub
or
dec
and
std
cmps
hlt
sub
pop
cmp
movs
mov
xlat
into
adc
iret
dec
inc
inc
scas
sub
std
adc
retf
mov
add
sbb
lahf
cmp
iret
and
and
xchg
xor
xchg
jnp
std
or
inc
cld
adc
add
dec
mov
out
loop
adc
xchg
mov
push
das
and
out
add
pop
sub
div
stc
in
cli
xlat
inc
js
in
jg
jl
movs
jmp
add
or
push
mov
imul
js
inc
fmul
xor
fs
iret
dec
xchg
pop
lods
imul
fisttp
sub
cmp
jb
push
ds
pop
inc
add
lock
pop
icebp
ds
dec
mov
cmp
pusha
call
ret
and
fs
ds
ret
jle
lock
cmp
fiadd
push
mov
mov
pusha
mov
and
out
push
or
jmp
cmp
inc
jecxz
mov
imul
xchg
xchg
ror
push
xchg
fdiv
cmp
loop
loop
push
std
mov
adc
leave
pop
fiadd
aas
lock
arpl
daa
not
push
cmps
jae
inc
fnstcw
repz
(bad)
lahf
mov
rcr
aas
push
jne
push
cmp
stos
pop
js
sbb
outs
je
sbb
jne
mov
(bad)
in
cmp
add
jmp
aas
sti
push
dec
cli
push
in
add
push
daa
mov
mov
sbb
inc
or
mov
daa
mov
push
jg
inc
(bad)
sbb
aas
les
jl
std
popf
loop
push
retf
lods
xor
push
inc
test
inc
mov
aas
fldenv
mov
add
ja
sbb
or
add
mov
mov
std
inc
push
jns
xchg
imul
mov
retf
leave
aas
push
fnstcw
sar
clc
popa
mov
stos
pop
fdivrp
outs
std
loop
sub
cld
xchg
test
pop
push
add
ret
cmp
xchg
pop
or
ds
dec
mov
(bad)
cld
and
push
or
(bad)
sar
popa
arpl
jl
cmp
cmp
jge
loope
ficom
outs
mov
and
cmp
jns
movs
inc
imul
jb
jae
int
enter
repnz
jp
scas
mov
clc
fld
mov
shl
mov
stos
xor
pop
dec
sbb
mov
ins
aam
xchg
fucomi
aas
sbb
aas
icebp
daa
xchg
sbb
mov
fstp
js
arpl
xchg
add
lods
pop
aas
mov
(bad)
shr
cli
shr
mov
and
fcmovb
push
leave
sbb
and
rcl
inc
sbb
sbb
sbb
jnp
fdivr
cmp
inc
xchg
fxch
lods
leave
imul
(bad)
mov
imul
jne
mov
cmps
xor
adc
inc
or
mov
mov
retf
popf
adc
push
dec
sub
add
lock
leave
loopne
cmp
jl
test
push
dec
(bad)
pop
pop
lahf
nop
fiadd
cmps
add
sub
adc
jg
jl
loope
xlat
mov
push
jmp
mov
sar
leave
and
loop
dec
cmp
loope
outs
or
loope
cwde
xchg
xchg
cld
push
and
pop
jno
movs
mov
dec
int
lahf
mov
imul
inc
cmps
dec
sub
out
add
mov
sub
aaa
pushf
gs
sti
lds
pop
mov
jae
or
loopne
les
xor
ins
cld
sbb
adc
jecxz
pop
push
cmps
sbb
push
rcl
rcl
clc
ret
div
icebp
daa
test
add
dec
xchg
inc
in
adc
add
adc
or
sahf
fstp
stos
cmp
adc
dec
adc
mov
popa
loopne
adc
push
ffreep
call
fisub
adc
ins
lahf
dec
cli
xlat
xor
(bad)
push
push
mov
cmps
mov
mov
jle
or
or
push
push
mov
xchg
xchg
dec
call
out
out
xlat
hlt
aas
ds
lahf
(bad)
and
clc
inc
(bad)
adc
mov
pop
push
sub
jl
cmp
pushf
push
jle
lock
(bad)
and
sar
dec
lock
test
mov
data16
add
jp
std
movs
mov
jmp
imul
jbe
movs
xchg
arpl
xor
add
push
enter
jno
in
add
mov
aas
mov
inc
and
sbb
push
pop
xor
jb
push
xor
pop
dec
xchg
adc
jmp
stc
fcomip
sub
and
inc
shr
cmp
ds
jge
inc
call
lods
sub
inc
add
mov
pushf
loopne
adc
fcom
popf
mov
inc
and
repnz
or
icebp
cmp
xor
aaa
push
or
jmp
ja
adc
mov
jno
xchg
pop
mov
inc
jo
sahf
cmp
adc
lock
jg
or
outs
sbb
cmps
jmp
pop
daa
in
call
je
inc
sbb
jl
loop
xlat
mov
popf
in
call
test
push
popf
xchg
(bad)
in
in
jge
inc
loopne
les
pop
push
lock
stos
imul
mov
sbb
cwde
pop
repz
leave
sti
and
leave
mov
(bad)
mov
inc
and
push
cdq
push
daa
sahf
push
sbb
push
ins
push
sub
mov
iret
loopne
or
ficom
xchg
loop
dec
mov
sub
enter
mov
leave
out
inc
pop
clc
pop
and
addr16
aas
lea
je
jbe
mov
add
xor
ds
pop
(bad)
movs
out
aam
sub
xor
mov
(bad)
jmp
mov
clc
imul
xlat
inc
ret
cmp
(bad)
dec
jae
fdivr
fisttp
add
ins
xchg
sbb
add
js
(bad)
mov
sbb
mov
call
ja
and
mov
(bad)
loop
mov
xchg
cmp
test
jg
dec
and
or
xlat
call
icebp
jle
adc
xchg
mov
cmp
aas
in
cmp
adc
mov
mov
mov
je
xor
jge
(bad)
pop
(bad)
adc
(bad)
fcmovnb
leave
loop
jl
test
jne
or
nop
(bad)
push
aaa
jae
adc
js
idiv
xchg
loopne
push
jg
jmp
or
xor
and
iret
jne
stos
add
push
in
ds
cmp
push
jmp
dec
clc
and
mov
mov
cli
jl
xor
(bad)
outs
ss
int3
adc
push
mov
cld
pop
loopne
mov
frstor
inc
fstp
movs
sbb
and
popf
mov
sahf
jns
movs
imul
mov
push
sub
out
test
hlt
aas
and
inc
mov
das
push
jmp
pop
push
pop
retf
pop
retf
pushf
xor
inc
push
jecxz
ins
push
ins
cli
add
pop
or
mov
lahf
bswap
scas
push
pop
and
fstp
jl
ds
repz
leave
icebp
imul
sti
sbb
les
mov
imul
fimul
lahf
addr16
loope
cdq
fs
push
pop
lock
xchg
jmp
call
cwde
hlt
in
dec
retf
inc
shr
sti
jl
mov
cdq
push
push
and
jge
jb
adc
fbld
frstor
jo
ins
outs
xchg
sti
iret
(bad)
cmp
and
mov
dec
push
js
pop
jle
sub
aas
loopne
test
sti
push
clc
cwde
test
mov
xchg
bound
push
imul
std
sub
fld
(bad)
dec
mov
stos
cld
dec
ficom
(bad)
xchg
pop
ss
mov
mov
in
xchg
in
mul
scas
jg
inc
jg
call
pop
(bad)
pop
cli
dec
sbb
popf
sub
xchg
popa
dec
cmp
test
int
push
mov
mov
adc
enter
mov
inc
add
sub
or
pop
mov
push
push
mov
pop
and
adc
enter
mov
inc
add
sub
or
pop
mov
mov
and
arpl
popa
mov
xor
ins
jecxz
fist
mov
retf
sbb
popa
rdmsr
das
and
lods
int3
xor
ds
ds
pop
xchg
sub
xor
cli
test
jmp
jl
in
and
sbb
leave
mov
out
add
cmp
push
imul
sub
mov
lahf
sub
sbb
test
jge
mov
shr
inc
outs
sub
sbb
addr16
ss
lods
mov
mov
inc
pop
aad
outs
xchg
stos
clc
jmp
sub
movs
mov
std
out
fdivr
jmp
mov
cmp
jns
fidivr
mov
xchg
push
or
jl
fisub
imul
inc
jnp
adc
xchg
dec
nop
inc
sbb
inc
(bad)
imul
fist
mov
push
push
mov
mov
call
lods
arpl
push
xlat
inc
sub
add
(bad)
sbb
or
repz
xchg
outs
inc
pop
xchg
loope
mov
mov
xlat
sub
in
dec
sub
scas
jae
push
xchg
sub
and
sub
iret
xlat
xor
mov
movs
add
shl
out
xchg
aas
xor
pop
sub
sti
add
add
fnstcw
(bad)
fistp
mov
sbb
or
pop
inc
xchg
mov
aas
std
mov
cmc
int
inc
(bad)
repnz
test
mov
add
cli
push
dec
out
add
aaa
mov
out
mov
mov
pop
loopne
lds
sar
pop
adc
jbe
mov
gs
movs
sbb
imul
shr
fisub
in
xor
ror
mov
add
xor
mov
clc
ins
add
jmp
aas
mov
ret
xchg
shr
or
and
and
xchg
jb
adc
add
jl
cmps
fisubr
dec
inc
repz
jg
dec
inc
test
pushf
in
push
pop
jnp
(bad)
loop
shr
mov
shr
or
inc
scas
ins
pop
test
fild
(bad)
pop
jl
xchg
pop
mov
aad
(bad)
mov
sub
dec
pop
daa
repnz
inc
jns
fs
mov
addr16
retf
setns
pop
lock
push
cld
sub
mov
(bad)
scas
(bad)
pop
sti
mov
lock
sbb
into
mov
cmps
imul
fistp
push
std
lahf
xchg
out
jp
cld
adc
rcr
inc
mov
jle
sar
add
mov
pop
cmp
jecxz
aad
xor
or
test
mov
lahf
test
jl
jle
xchg
inc
or
movs
int
test
or
jb
call
iret
jmp
ins
sti
fbld
jge
std
mov
retf
mov
jle
mov
aas
pop
aad
addr16
xor
pop
dec
xchg
push
mov
fs
and
in
jecxz
scas
push
lahf
mov
cdq
ja
jmp
jb
outs
mov
shr
sti
movs
dec
enter
call
jne
xchg
out
cmps
outs
mov
stos
mov
cld
dec
movs
aas
mov
jmp
cs
add
cmp
mov
ret
loope
adc
mov
fild
inc
and
iret
dec
sub
or
xor
fbstp
push
outs
jne
mov
xlat
div
xlat
pop
icebp
xor
daa
test
aas
adc
fucomip
cmp
aaa
cmp
loope
out
aas
loope
clc
or
lahf
fiadd
sub
add
add
(bad)
push
jg
and
ret
loope
movs
das
imul
add
mov
idiv
add
jmp
fidivr
cli
dec
ret
jl
ret
dec
stos
fisttp
and
adc
call
inc
popf
mov
inc
lock
cmp
mov
sbb
sub
(bad)
cmp
aaa
scas
xor
leave
mov
out
clc
test
rcl
pop
mov
inc
test
in
aaa
jnp
mov
ror
jg
es
stos
std
push
cmp
dec
mov
cmp
adc
jmp
arpl
jg
pop
pop
dec
fcomip
jmp
jae
xchg
(bad)
jg
sub
jns
pop
pop
dec
(bad)
sbb
retf
repz
addr16
nop
push
imul
clc
pusha
stc
mov
cld
sub
ret
sub
mov
shl
out
xor
adc
inc
(bad)
cs
lahf
fsub
fmul
repnz
lods
mov
outs
or
dec
icebp
pop
mov
lock
fsub
ret
jns
add
adc
add
nop
cmp
inc
(bad)
mov
jnp
and
mov
ins
movs
pop
pop
imul
adc
aad
imul
add
das
in
aaa
jp
lods
ins
mov
fsubr
push
cmc
and
test
loope
out
pop
lock
add
(bad)
adc
xchg
jne
push
cmp
rcl
mov
addr16
in
popa
scas
call
cld
sub
jmp
pop
stc
push
les
push
pop
pusha
leave
jmp
push
xchg
popa
lock
loope
(bad)
or
lods
cld
aas
stos
cdq
scas
in
sub
in
dec
ja
movs
pop
push
scas
add
xchg
jp
ja
mov
or
cmp
fnstsw
jp
cmc
mov
lock
les
mov
mov
add
test
lods
mov
dec
pop
hlt
ja
mov
xchg
inc
xor
jg
iret
ins
icebp
push
loope
shr
push
jp
lods
imul
sar
(bad)
fstp
or
xchg
dec
push
inc
mov
pop
icebp
mov
jecxz
mov
push
jne
es
pop
cmps
lea
(bad)
retf
sbb
mov
push
int
ins
pop
in
xor
sbb
shufps
inc
xchg
or
sbb
push
inc
inc
aas
pusha
stc
xchg
mov
aas
loope
outs
jne
mov
jmp
mov
cmps
ret
or
add
cmp
cmp
movs
push
jg
(bad)
mov
sbb
xchg
pop
jns
sub
mov
xor
fisub
mov
pop
adc
shl
sub
sahf
fstp
inc
lods
jl
aas
pusha
stc
xchg
mov
aas
loope
cld
xor
push
jl
inc
and
adc
xchg
ins
aad
cdq
retf
xlat
je
push
mov
push
mov
out
jg
addr16
in
pop
jecxz
ror
lahf
pop
mov
and
jae
addr16
sti
out
(bad)
xlat
jno
movs
fstp
pop
adc
out
mov
mov
ins
shl
pop
les
call
jmp
imul
inc
repz
mov
inc
push
and
adc
vpaddq
push
pop
push
add
or
sbb
dec
lods
pop
sbb
sub
retf
not
scas
fbstp
scas
(bad)
aam
aas
loope
pop
or
inc
jl
pop
cmp
stos
fidivr
mov
ret
jg
sbb
mov
push
out
add
aaa
sub
or
jb
retf
nop
fsub
fs
mov
cwde
mov
mov
inc
cld
sub
popa
mov
pop
mov
fst
xor
add
adc
pop
int
out
addr16
dec
stos
xchg
fnstsw
ss
cmps
cmc
(bad)
push
imul
mov
xchg
ss
push
outs
mov
(bad)
sbb
and
dec
xchg
add
mov
add
xchg
(bad)
mov
cmp
xor
fnstenv
inc
movups
scas
mov
daa
dec
vmread
(bad)
xlat
mov
push
inc
bswap
add
repnz
scas
add
jmp
push
jg
pop
adc
outs
div
fxch
xchg
or
dec
aam
out
mov
sub
popf
fimul
stc
sbb
xor
sti
inc
int3
repz
sub
push
dec
cwde
retf
push
add
cmps
rol
mov
mov
add
sub
push
add
cmps
rol
mov
mov
add
sub
push
add
cmps
rol
mov
mov
add
sub
push
add
cmps
shl
mov
xlat
push
or
es
push
fisttp
lahf
sub
ds
mov
xchg
xchg
push
push
dec
push
xlat
mov
dec
outs
adc
ja
xchg
int3
pop
mov
mov
jnp
aas
sub
dec
dec
push
mov
xchg
cwde
mov
add
ins
dec
hlt
mov
ficomp
ins
sub
jecxz
mov
repz
in
add
or
pop
pushf
push
mov
(bad)
pop
inc
cmp
out
sbb
aam
inc
mov
imul
jle
xor
int3
sahf
mov
push
add
addr16
mov
cmp
pop
loope
rcl
out
jb
cmp
inc
test
mov
add
sti
mov
jnp
aaa
outs
jne
push
sbb
cmc
dec
push
jnp
test
lods
dec
or
sbb
iret
je
dec
mov
mov
jo
in
add
push
xchg
mov
dec
cmp
pop
shl
fild
shl
pushf
jae
lods
aad
adc
arpl
idiv
push
in
sub
movs
stos
int
jecxz
cmps
rcr
and
cli
or
pop
inc
xchg
mov
aas
std
mov
cmc
loopne
hlt
paddsb
inc
daa
pop
loopne
sti
jge
add
sub
fwait
adc
or
aas
enter
and
pop
mov
mov
ret
jg
ds
mov
movnti
mov
jmp
aam
shr
cmp
dec
dec
fstp
push
mov
mov
mov
pop
shr
mov
mov
retf
fcmovbe
xchg
and
pop
xlat
mov
sbb
push
and
mov
pop
mov
cld
ss
ret
inc
cli
aaa
outs
add
jg
mov
dec
mov
xor
cmp
cli
call
int3
stc
imul
rcl
clc
ins
jg
inc
hlt
outs
fimul
inc
mov
adc
ret
arpl
aas
inc
mov
icebp
pop
inc
sbb
ds
xlat
repz
imul
rcl
std
scas
jl
sub
dec
fld
ror
stos
or
jg
mov
pop
and
xor
(bad)
std
mov
cli
cld
push
stc
xchg
mov
sbb
cmps
mov
in
mov
pop
pusha
stos
sti
cmp
cwde
hlt
add
mov
add
adc
aas
imul
add
xor
jb
push
cmps
call
(bad)
test
paddusw
loopne
xchg
mov
dec
sbb
cmps
mov
xbegin
in
loopne
sti
loop
(bad)
xor
test
adc
mov
addr16
push
cmp
pop
jecxz
sti
inc
(bad)
test
paddusw
loopne
xchg
xor
sbb
cmps
mov
lock
mov
addr16
push
mov
inc
mov
mov
ud0
call
add
add
sub
add
add
xor
xlat
repz
imul
rcl
clc
ins
jg
inc
hlt
outs
fimul
inc
mov
adc
ret
arpl
aas
inc
mov
icebp
pop
inc
sbb
jle
cld
ret
neg
clc
xor
lods
lahf
push
inc
dec
test
mov
sti
cmp
das
test
mov
jg
pop
add
icebp
mov
fidivr
out
loop
int3
aas
jne
inc
cmp
leave
cmc
xor
cli
call
inc
std
sbb
mov
fdivr
add
inc
call
add
add
sub
add
add
xor
xlat
repz
imul
rcl
clc
ins
jg
inc
hlt
outs
fimul
inc
mov
adc
ret
arpl
aas
inc
mov
icebp
pop
inc
sbb
jle
cld
ret
neg
clc
xor
lods
lahf
push
inc
dec
test
mov
add
lahf
sbb
sbb
add
adc
jle
pop
add
loopne
outs
inc
mov
jg
inc
pop
in
pop
repz
pop
out
mov
sub
cli
call
add
dec
les
bound
inc
hlt
outs
fimul
inc
mov
adc
mov
iret
scas
lds
jle
stc
inc
push
jl
xchg
jmp
cld
ss
ret
inc
cli
aaa
outs
add
jg
mov
loope
(bad)
pop
inc
sar
mov
add
ds
scas
out
sbb
xlat
pop
dec
cli
cmps
das
fcmove
loope
mov
mov
jg
scas
push
ret
cmps
dec
repnz
cs
sub
push
in
les
test
cmps
adc
ror
adc
scas
add
mov
mov
call
sti
dec
scas
or
test
(bad)
dec
cmps
cmp
inc
movs
sbb
mov
repnz
sbb
rol
mov
ret
mov
add
mov
or
sub
adc
pop
or
mov
adc
ret
mov
add
mov
or
sub
sbb
inc
add
cld
out
fs
sub
push
jmp
push
mov
mov
push
add
hlt
mov
mov
pop
xor
idiv
ret
daa
les
addr16
je
sbb
jmp
test
enter
jo
xchg
aas
ret
pop
push
iret
scas
fdivr
mov
arpl
aaa
movs
jp
(bad)
pop
xchg
ret
in
mov
scas
lea
sar
sahf
inc
jbe
arpl
les
xchg
aam
lahf
mov
jnp
aad
xor
push
mov
xchg
ins
or
adc
rcr
aad
loopne
cmp
jecxz
div
int3
icebp
test
jo
xchg
ret
jns
lea
xor
xchg
fidiv
pop
mov
jl
repnz
fwait
sbb
inc
dec
and
dec
cmp
push
push
aad
in
sub
cmps
out
sbb
or
cdq
ret
and
dec
test
jecxz
pop
aaa
add
(bad)
imul
popf
in
jne
sbb
ins
pushf
(bad)
mov
stos
xchg
sbb
int3
inc
cmps
push
jge
sbb
adc
pop
fdivr
out
xor
adc
inc
je
mov
cli
add
or
add
mov
cmc
repz
jge
sti
add
clc
and
fistp
mov
(bad)
inc
add
repnz
pop
push
jl
add
mov
xor
inc
mov
gs
in
movs
inc
daa
sbb
idiv
ret
add
repnz
dec
loope
std
test
loope
sar
inc
sar
xlat
test
repnz
mov
test
add
dec
xchg
rcl
inc
inc
leave
jp
xchg
inc
arpl
mov
push
add
jg
pop
inc
jb
jecxz
mov
sar
xor
test
lock
in
mov
dec
mov
adc
popf
pushf
mov
inc
mov
xchg
adc
loope
(bad)
mov
sub
xor
inc
mov
fnstsw
pushf
jbe
sar
jmp
add
popf
je
or
data16
cwde
push
xchg
retf
push
pop
jns
imul
test
lock
(bad)
out
mov
outs
mov
paddd
pop
add
test
fdivr
jmp
mov
cmp
rcr
xor
(bad)
fiadd
icebp
and
aas
repz
ins
das
sub
fmul
arpl
bound
pushf
in
in
push
aas
loopne
sahf
or
jle
pop
cld
daa
lock
call
xchg
gs
pusha
cmp
add
sti
inc
jg
fcomip
pop
inc
sbb
sahf
jp
icebp
fsubr
std
mov
aas
mov
cs
stos
cmps
mov
fstp
dec
out
dec
push
movs
or
popf
cmp
jmp
pop
in
frstor
push
clc
xchg
xor
daa
aam
xchg
pop
js
mov
xchg
jns
jl
mov
mov
mov
popf
lock
pop
std
lahf
inc
ins
popf
inc
ret
sbb
mov
and
out
ins
das
popa
push
adc
push
xchg
xor
retf
add
adc
add
cmp
(bad)
push
jl
inc
mov
mov
jmp
pop
fcos
add
int3
inc
test
jmp
mov
aad
jb
dec
outs
xor
ror
stc
adc
jp
xchg
xchg
adc
and
inc
dec
jp
in
sbb
mov
lea
and
mov
and
and
sbb
lahf
cmp
cmp
and
out
repnz
sti
or
cli
mov
adc
sbb
outs
sbb
js
jo
jle
cmp
dec
and
jl
jae
sti
into
fdivr
add
imul
add
pushf
and
loope
mov
add
idiv
(bad)
xchg
push
(bad)
push
mov
adc
xchg
stos
cld
ret
xchg
pop
es
scas
pop
out
iret
stos
inc
shl
dec
fistp
lock
les
icebp
es
mov
ins
outs
ins
xchg
retf
dec
sbb
mov
ret
jo
sbb
push
pop
shr
sbb
movs
add
sub
xchg
and
sti
add
clc
(bad)
dec
lock
fld
xlat
ins
in
jge
(bad)
sbb
and
in
xchg
xor
jns
pop
xchg
pop
mov
int3
neg
aad
jmp
cmp
jb
xchg
xor
pop
and
jge
adc
cmc
sub
push
dec
movs
cmc
hlt
jmp
cmps
or
lahf
lods
sbb
mov
loope
in
xlat
pop
mov
dec
shr
add
les
xchg
or
inc
cmp
loop
fxch
mov
xchg
mov
rep
push
add
pusha
xor
cmp
outs
(bad)
jb
xor
call
adc
pop
or
fist
and
sbb
scas
push
lahf
pop
jle
mov
sub
mov
mov
jge
pop
jge
jne
inc
dec
fisubr
xor
rol
cmp
xchg
repz
pop
ja
or
outs
fild
scas
out
pop
pop
push
pop
jmp
adc
shr
cld
(bad)
jmp
adc
outs
ficomp
xchg
push
shr
pop
and
xchg
arpl
cdq
inc
add
nop
psubusb
pop
loope
cmp
dec
adc
and
pop
ds
repnz
outs
sbb
cmp
push
or
sbb
les
js
dec
adc
clc
add
inc
int3
ret
gs
das
xchg
out
into
pop
and
jge
xchg
mov
(bad)
mov
sti
les
outs
ret
fwait
ins
cmp
mov
addr16
inc
test
(bad)
jmp
lods
les
loopne
xor
leave
bound
sub
mov
xor
cld
push
dec
test
fs
xlat
dec
cmps
sub
movs
mov
out
inc
or
mov
lock
lahf
adc
xchg
fisub
xchg
stos
adc
inc
dec
adc
fsub
inc
sbb
das
sbb
sti
or
push
in
pop
mov
sub
jnp
ins
stc
mov
or
sbb
mov
and
mov
xchg
lds
cmp
popf
xchg
ficomp
fwait
jge
sub
dec
daa
in
mov
mov
jecxz
adc
jae
adc
push
push
hlt
nop
int3
(bad)
je
or
xchg
mov
xchg
push
fisttp
movs
test
aaa
cmp
add
shl
dec
sar
addr16
lea
jae
fidiv
sbb
in
sub
movs
ret
and
ret
imul
shl
js
in
dec
lock
mov
xor
add
sbb
fidiv
mov
xor
add
jmp
fld
cli
jo
test
(bad)
cs
sbb
scas
ds
(bad)
xchg
test
adc
repnz
xchg
sub
call
add
dec
out
push
pop
lea
sar
and
aaa
mov
fsub
ror
or
ficom
xor
call
scas
fsubr
mov
lea
outs
push
lock
mov
ins
mov
mov
and
popa
(bad)
retf
shr
imul
icebp
or
dec
clc
jecxz
ins
and
inc
aam
mov
mov
ret
mov
add
xacquire
adc
mov
in
mov
int
cdq
lea
lods
rcr
sub
pop
mov
or
sub
cmp
sbb
mov
aam
loope
cmp
retf
stos
pop
ins
aam
jg
cdq
std
mov
in
out
imul
cmp
shl
scas
(bad)
daa
out
add
loopne
sbb
int3
cmc
hlt
ja
mov
xor
leave
loop
or
cmp
mov
loope
arpl
leave
daa
sub
jecxz
dec
xor
mov
fnstsw
test
xor
std
mov
addr16
cli
loope
jg
call
outs
jecxz
add
call
xor
inc
sub
movs
jmp
cmps
jmp
sub
push
add
sub
push
add
cmps
rol
mov
mov
add
sub
push
add
cmps
rol
mov
mov
add
sub
push
add
cmps
rol
mov
mov
add
sub
push
add
cmps
rol
stos
call
jne
xor
and
mov
push
sub
inc
loope
dec
ja
aas
sti
inc
ja
in
or
mov
pop
call
dec
mov
dec
dec
clc
pop
loope
lock
xchg
scas
movs
inc
and
jae
rol
push
and
mov
out
ins
popaw
mov
mov
outs
mov
push
cmp
mov
imul
loop
pop
rcl
ret
xor
cmps
mov
pop
pop
mov
and
xor
add
xor
call
sahf
sbb
sbb
(bad)
jo
ss
mov
mov
sbb
int3
fs
add
(bad)
cmps
imul
dec
mov
cmps
stc
inc
or
cmps
(bad)
sub
sbb
sub
fld
cmp
add
test
xor
dec
mov
mov
clc
stos
repnz
xor
cmps
(bad)
dec
test
mov
mov
out
(bad)
pop
ins
mov
xchg
ja
in
enter
push
test
mov
xor
xor
pushf
inc
jno
test
pop
imul
jnp
leave
loopne
jnp
push
sar
(bad)
mov
xlat
sahf
inc
loope
dec
sub
popf
push
jne
fwait
mov
inc
or
lods
imul
call
inc
sub
clc
shr
sub
pop
pop
cld
ret
jge
push
dec
mov
jle
jg
jne
or
add
mov
test
inc
std
mov
cmc
int
inc
sar
and
push
loopne
push
inc
jbe
add
jp
in
stos
jno
inc
cld
inc
mov
aas
into
mov
loop
out
or
or
leave
lea
jne
sub
fldenv
xor
out
enter
and
or
inc
inc
repnz
xor
cmp
or
(bad)
(bad)
xchg
leave
pop
jg
pop
jmp
adc
pop
fistp
sar
cwde
add
loope
scas
outs
ja
xor
scas
cmp
lods
(bad)
(bad)
adc
pop
inc
fistp
mov
mov
or
sub
push
outs
xor
ds
lods
femms
(bad)
fnstcw
dec
mov
clc
scas
bound
inc
sbb
or
add
inc
test
test
mov
out
inc
(bad)
adc
pop
inc
fistp
lods
jecxz
aad
and
jle
and
pop
(bad)
inc
clc
sub
mov
inc
adc
sbb
leave
jg
inc
add
xor
arpl
inc
rol
jecxz
add
test
inc
aad
in
loopne
add
not
int
retf
xor
add
cs
lahf
mov
adc
pop
inc
fistp
(bad)
clc
inc
inc
fs
sbb
jle
inc
in
repnz
push
xchg
mov
aas
jmp
fsubr
push
ja
mov
sub
add
aaa
cld
and
or
call
or
into
movs
dec
mov
push
fcom
jp
adc
int
push
fidivr
addr16
(bad)
adc
dec
aad
mov
in
mov
adc
dec
mov
dec
add
jns
cmp
pop
lock
inc
hlt
cmp
idiv
cld
(bad)
inc
enter
psubq
inc
shr
jecxz
sti
repz
inc
and
inc
or
dec
pushf
hlt
mov
jns
pushf
mov
inc
add
push
aas
mov
dec
or
call
pop
arpl
pushf
adc
inc
rcr
inc
pop
push
pushf
arpl
mov
xchg
ja
push
pop
cld
dec
icebp
push
lea
mov
sub
dec
mov
sti
cdq
adc
ja
add
out
lods
das
clc
inc
inc
fs
sbb
jle
inc
in
aas
loope
std
xchg
inc
call
stc
(bad)
inc
xchg
test
sbb
adc
cmc
push
fld1
mov
pop
push
out
shl
cmp
clc
sub
sub
and
clc
call
mov
hlt
call
(bad)
adc
repnz
fwait
and
push
jl
inc
std
mov
js
loop
push
(bad)
fisubr
or
inc
ret
add
cmps
cld
xchg
jae
pushf
mov
push
inc
or
in
(bad)
inc
inc
mov
jg
lea
and
add
cmp
inc
repnz
inc
mov
pusha
xchg
jmp
fdivp
je
fstp
jecxz
cld
adc
loopne
test
or
icebp
push
mov
and
xor
jno
outs
xor
mov
jp
out
mov
jecxz
pop
push
and
fstp
add
bnd
or
add
adc
inc
mov
std
push
(bad)
cmp
inc
repnz
enter
cmp
idiv
cld
(bad)
inc
enter
rol
ss
pop
test
dec
push
lea
inc
outs
pop
add
mov
jns
lock
cmc
jns
push
push
add
adc
fcomi
sahf
jbe
fidiv
push
push
clc
cmps
sti
cmp
clc
cmovns
mov
add
mov
adc
inc
(bad)
xchg
scas
cmp
inc
or
in
(bad)
inc
inc
mov
jg
lea
and
add
cmp
inc
repnz
xor
daa
mov
sbb
cmp
jg
mov
jno
js
loop
xchg
mov
mov
leave
daa
push
mov
inc
dec
scas
pop
jecxz
in
in
pinsrw
clc
sbb
ret
call
lods
push
scas
rcr
xor
movs
add
shl
cld
sahf
adc
and
add
cmp
inc
repnz
enter
cmp
idiv
cld
(bad)
inc
enter
adc
out
in
dec
cmp
out
sub
mov
push
out
pop
clc
sub
std
pop
les
pop
icebp
adc
(bad)
pop
mov
xor
and
mov
push
pop
add
in
js
sbb
fistp
adc
jle
clc
adc
cli
mov
pop
fldcw
xlat
xchg
lds
xchg
ins
stc
mov
add
xchg
pushf
arpl
cmp
cld
and
add
cmp
inc
repnz
enter
cmp
idiv
cld
(bad)
inc
enter
test
div
add
movs
push
mov
cmp
sbb
push
js
aas
or
loop
imul
and
cdq
push
inc
adc
adc
add
add
(bad)
daa
(bad)
inc
outs
int
(bad)
mul
je
inc
jg
fsubr
jmp
(bad)
or
mov
jmp
jno
(bad)
pop
cld
and
add
cmp
inc
repnz
enter
cmp
idiv
cld
(bad)
inc
enter
or
stc
ja
movs
mov
popa
dec
jne
mul
fcomip
push
aas
cmp
scas
lods
clc
mov
data16
pop
scas
ins
or
sub
sbb
xor
sub
std
pushf
inc
outs
lods
pop
loope
mov
mov
pop
sub
xchg
stc
pop
inc
and
and
and
add
lock
sti
and
add
out
jecxz
sti
repz
inc
and
add
aas
in
(bad)
inc
inc
mov
jg
lea
test
jns
lods
mov
mov
repz
test
mov
ds
inc
cdq
adc
hlt
xchg
xor
je
mov
mov
xor
aas
inc
imul
std
xchg
inc
call
stc
(bad)
inc
xchg
test
add
mov
out
inc
dec
cmp
mov
jmp
movs
xchg
push
scas
cmps
mov
dec
add
jle
stos
pushf
jg
push
test
cmp
(bad)
cmp
aaa
xchg
repz
dec
test
das
mov
cmp
jns
in
add
leave
mov
pop
jmp
ficomp
push
add
jo
int
into
cmp
or
mov
out
jbe
shr
push
xchg
fisubr
cmc
cmp
mov
scas
mov
mov
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
iret
xor
cmp
ins
or
mov
pop
add
cmp
movs
adc
std
imul
retf
fcomp
call
cmp
or
jecxz
in
lock
push
inc
in
cmp
lock
push
dec
push
mov
ror
jp
mov
pop
mov
dec
push
out
mov
jmp
lahf
ret
xlat
(bad)
jae
jcxz
mov
or
aas
(bad)
or
push
mov
add
inc
mov
lahf
in
mov
lock
add
das
ret
test
adc
xchg
xlat
sub
outs
and
inc
pop
rcl
mov
mov
ins
fld
in
ins
lods
(bad)
aam
(bad)
adc
ss
je
adc
and
adc
aam
arpl
fisttp
jnp
scas
aaa
adc
ret
mov
ja
movs
or
pop
inc
mov
out
mov
jbe
or
mov
jp
sti
ret
es
cwde
int3
pop
(bad)
daa
(bad)
shl
fdiv
jmp
add
mov
inc
mov
mov
ud0
xchg
stos
lock
std
mov
cmc
loopne
out
fbstp
cmp
inc
dec
cmps
scas
ins
push
sti
mov
sar
and
push
loopne
push
mov
mov
or
mov
rcl
sbb
ins
jp
rcr
aas
lock
adc
mov
mov
add
mov
and
adc
in
sub
xchg
push
pop
dec
cmp
sti
push
cld
xor
addr16
mov
mov
cwde
inc
scas
loop
adc
pop
in
cmp
retf
cmc
sbb
pop
movs
push
inc
xchg
mov
add
add
loope
retf
push
imul
mov
ds
lds
scas
cmps
jg
mov
js
inc
add
clc
push
inc
or
inc
arpl
jg
add
ret
and
jge
sub
jne
inc
cmp
lds
scas
test
std
mov
sbb
jg
or
jb
out
push
jle
clc
sbb
aas
dec
cmp
jg
enter
inc
cmp
lds
scas
test
in
shl
stc
sbb
add
outs
fld
pop
lock
stc
push
in
xor
repz
add
inc
sti
scas
out
sbb
push
sub
jge
pop
in
leave
adc
mov
(bad)
stos
jmp
std
mov
or
or
fcomp
(bad)
mov
ds
(bad)
jg
lahf
xor
push
sar
hlt
inc
cmp
inc
add
sub
add
mov
add
loope
ds
jge
sub
jne
inc
cmp
lds
scas
cmps
jg
mov
js
inc
add
clc
push
inc
or
inc
arpl
jg
add
ret
inc
cld
cli
cld
push
jle
stc
inc
push
jl
mov
pop
pop
pop
(bad)
fdiv
jo
jae
cwde
hlt
xchg
cmp
shl
imul
mov
repz
cmp
inc
add
sub
cwde
xchg
test
cwde
mov
sub
(bad)
outs
fistp
and
add
add
add
adc
ret
jbe
inc
rcr
lock
inc
(bad)
cmps
iret
mov
add
jg
loopne
cwde
mov
sub
or
add
iretw
xchg
lock
ror
mov
push
pop
imul
mov
mov
push
mov
sbb
(bad)
stc
cmc
inc
xchg
and
xlat
repz
xchg
mov
in
mov
add
add
loope
cld
aaa
ins
scas
std
adc
add
add
cmp
pop
repz
inc
sti
scas
out
sbb
push
sub
jge
inc
or
inc
arpl
jg
add
ret
outs
fistp
and
add
add
add
adc
loop
out
loop
neg
clc
xor
sub
mov
ja
sbb
cmp
lock
pop
lock
pop
inc
add
sub
les
scas
lds
out
mov
push
push
aad
pop
in
inc
lock
loop
test
mov
pop
mov
sub
cli
inc
sub
inc
add
cld
sub
and
les
sbb
inc
loope
mov
in
adc
and
mov
jecxz
fistp
loopne
inc
lods
pushf
mov
sti
fcom
in
mov
fidiv
xlat
dec
xchg
(bad)
ror
inc
fiadd
jecxz
cmps
ins
mov
push
mov
mov
mov
fild
ins
adc
mov
mov
fidiv
rcl
sbb
ins
sbb
lea
add
inc
fiadd
jecxz
cmps
ins
mov
push
mov
mov
mov
fild
ins
adc
mov
mov
fidiv
rcl
sbb
jp
lea
push
inc
rcr
push
aam
aas
cmp
cmp
pusha
xlat
inc
lock
loope
mov
jmp
inc
ja
pop
ins
lea
pop
push
sub
loope
sti
(bad)
or
jbe
xchg
not
jno
int3
jp
jbe
dec
bnd
push
mov
gs
jae
addr16
call
aaa
test
fwait
jnp
mov
pop
dec
push
mov
arpl
inc
ins
push
pop
or
sub
adc
jmp
(bad)
arpl
mov
push
mov
inc
in
pushf
jae
dec
scas
sub
cld
adc
push
pop
pop
pop
sbb
sbb
push
adc
(bad)
pop
pop
adc
dec
pop
(bad)
fidiv
imul
out
and
das
loope
sbb
xchg
pop
sub
xchg
fadd
mov
pop
icebp
jl
push
push
loope
cs
imul
out
inc
dec
add
inc
mov
daa
lock
(bad)
fcomp
(bad)
loop
stc
aaa
ins
sbb
iret
mov
bound
ja
sbb
repnz
adc
pop
scas
les
sbb
fsubr
ficomp
push
(bad)
sbb
dec
ror
and
pop
int3
xor
cmp
call
mov
dec
push
call
adc
push
mov
fst
out
addr16
not
push
push
push
inc
sbb
xor
out
jle
js
dec
xor
cmp
je
fs
fisub
push
adc
jecxz
loopne
imul
loop
xchg
pop
(bad)
fistp
mov
and
jmp
scas
das
and
and
inc
sub
out
(bad)
mov
jmp
xchg
lahf
mov
icebp
stos
mov
fmul
or
(bad)
cld
adc
fidivr
addr16
mov
jno
out
mov
push
cmp
inc
dec
cmps
scas
add
pop
stc
sti
or
add
mov
aas
ret
and
div
inc
adc
push
inc
add
jg
int3
push
inc
mov
mov
cmp
aas
hlt
inc
xlat
push
xor
fisub
inc
lds
jg
(bad)
out
mov
arpl
add
(bad)
stos
xlat
mov
sub
adc
(bad)
fiadd
jle
imul
neg
scas
mov
(bad)
cld
jmp
dec
clc
inc
je
ficomp
or
ins
and
fsubr
mov
jnp
icebp
out
adc
les
mov
jl
stos
call
and
dec
paddw
scas
stc
xlat
jmp
sar
dec
sub
push
push
lds
jmp
setns
mov
jg
hlt
cwde
xor
add
jg
stc
sahf
cmp
jecxz
mov
and
jmp
pop
lea
pop
out
and
jns
repz
fsub
stc
xchg
dec
std
(bad)
outs
inc
push
popf
iret
mov
dec
ins
and
es
push
cmp
inc
les
add
(bad)
inc
arpl
mov
jne
fninit
fwait
lds
ds
xchg
push
inc
sbb
retf
dec
(bad)
aas
sti
sbb
cmps
fcmovbe
ret
cmps
in
aam
sar
cmp
pop
inc
fwait
push
(bad)
dec
aas
mov
ret
loopne
cmp
js
or
mov
shl
or
jns
call
pop
ret
retf
push
std
mov
add
(bad)
push
and
aam
nop
stc
mov
dec
and
add
xchg
sub
leave
rol
jge
sti
cs
out
mov
cli
or
push
div
fidivr
push
clc
scas
sbb
cld
and
xlat
outs
lock
stos
inc
sti
into
(bad)
xchg
jmp
mov
ds
clc
mov
mov
(bad)
sbb
shl
out
mov
mov
mov
adc
xchg
(bad)
and
into
push
push
jo
daa
in
jmp
or
mov
push
(bad)
(bad)
cmp
loop
clc
inc
jl
jmp
xchg
mov
ins
jo
add
addr16
xchg
adc
clc
inc
jnp
cmp
vmovups
repz
mov
jle
xchg
cmp
icebp
(bad)
sub
ins
mov
shl
rcr
xchg
cmc
repnz
jmp
outs
sbb
sub
mov
fld
xchg
xchg
rcl
jmp
in
ficomp
not
loope
ret
mov
iret
or
xchg
(bad)
adc
retf
sub
and
push
xchg
nop
jmp
cs
add
mov
ret
std
daa
loop
in
adc
lods
daa
pop
mov
in
xor
movs
cmps
cmp
xchg
pop
ja
shl
shr
jg
inc
fcos
add
daa
cdq
mov
sbb
cli
stc
adc
cmc
lds
add
jo
mov
mov
shr
cmp
mov
lods
pop
sbb
scas
repnz
push
test
rcl
cmp
mov
aas
test
clc
pop
loope
sahf
popf
push
jnp
xchg
ins
and
repnz
aad
and
add
aas
fistp
imul
hlt
iret
push
pop
pop
jmp
fwait
in
and
cmp
xchg
mov
(bad)
nop
in
fs
out
dec
ds
sti
pop
js
les
test
das
test
hlt
int
mov
push
daa
int
cmp
lods
pop
lock
scas
lock
cmp
aam
aaa
mov
mov
out
es
fild
dec
aaa
fs
in
jns
imul
lock
mov
jmp
fistp
pop
lock
iret
or
cs
test
in
dec
mov
sbb
xchg
retf
push
xlat
lea
xchg
xlat
(bad)
sbb
push
cmp
mov
retf
test
ds
inc
ja
or
sub
jnp
inc
sbb
adc
test
xor
(bad)
fwait
jno
(bad)
adc
jbe
jl
mov
popa
mov
retf
inc
jb
test
mov
push
idiv
jg
scas
adc
test
call
or
inc
pushf
test
add
sbb
js
js
cdq
cmp
sti
cs
mov
in
xor
xor
pop
dec
mov
das
xor
and
(bad)
cmp
add
inc
jle
clc
push
inc
daa
aas
icebp
iret
(bad)
mov
xor
(bad)
pop
jg
xchg
xor
mov
lods
and
daa
jns
(bad)
pop
pop
push
dec
push
test
or
out
lock
loopne
cli
pop
test
or
mov
xor
int
jnp
test
push
int
jne
mov
jb
mov
psubusb
test
sbb
fiadd
mov
mov
and
pop
sbb
xor
(bad)
(bad)
or
xchg
adc
es
and
jle
stos
frstor
mov
push
add
add
add
dec
add
mov
sbb
mov
pushf
lods
loop
pop
sahf
fdiv
or
and
icebp
clc
stos
je
jns
movs
sahf
xchg
push
hlt
xor
xor
arpl
mov
scas
xchg
sbb
out
loope
add
xor
mov
mov
inc
scas
sbb
jo
jbe
push
xor
jae
(bad)
clc
xor
mov
(bad)
loope
sub
pop
mov
mov
or
fdivr
out
xor
cmps
push
call
retf
sbb
iret
int3
repnz
push
jmp
pop
mov
inc
jp
and
inc
nop
out
inc
pop
adc
add
inc
mov
in
mov
ins
inc
hlt
xchg
sub
fild
add
pop
adc
add
inc
mov
in
mov
ins
inc
hlt
xchg
sub
test
retf
repz
pavgb
aad
cmps
iret
xchg
push
inc
jne
test
inc
add
adc
inc
add
adc
inc
add
adc
inc
add
adc
inc
add
adc
inc
add
adc
inc
add
enter
cmp
call
mov
lods
cmp
mov
push
and
(bad)
shl
mov
outs
mov
cmp
fnstenv
sahf
gs
jae
sar
inc
lock
xchg
gs
jnp
out
xchg
pop
xchg
loopne
cmp
enter
imul
imul
ja
inc
jg
dec
cmp
outs
push
std
imul
dec
dec
jb
ins
jge
push
or
and
mov
adc
cmp
cmp
loope
sub
fs
xor
push
pop
clc
xchg
bound
enter
jmp
mov
fs
jl
mov
mov
out
cmps
loope
cdq
movs
mov
dec
adc
rcr
movs
jae
jae
imul
mov
mov
fwait
cdq
dec
repnz
adc
fimul
ret
mov
sbb
es
inc
sbb
in
jne
ins
repnz
loope
aaa
int
stc
jle
pushf
add
pop
sbb
mov
cmc
mov
push
and
cmps
or
cmc
scas
dec
clc
popf
jecxz
scas
sbb
xchg
stos
cld
inc
or
pop
or
stos
fild
pop
mov
sub
jecxz
xchg
push
imul
dec
mov
pop
pop
imul
jb
mov
push
jp
mov
leave
and
inc
loop
(bad)
mov
and
hlt
adc
sar
imul
xchg
mov
lock
(bad)
and
inc
jnp
xchg
cli
into
mov
popa
mov
lods
dec
mul
cdq
enter
jbe
jg
(bad)
icebp
jg
cmc
sub
mov
mov
repz
in
mov
sub
test
xchg
push
jne
ja
ds
in
iret
sahf
pop
fwait
sbb
cmps
shr
int
popa
shl
mov
cwde
fisttp
adc
call
sub
mov
arpl
hlt
pop
dec
jne
and
xlat
into
sbb
(bad)
mov
pop
jg
stc
jecxz
pop
(bad)
mov
gs
fcom
jno
lods
in
jmp
(bad)
push
pop
jp
sub
fistp
popa
aas
stc
cmp
out
(bad)
xchg
dec
pop
pop
pop
stc
sti
or
add
aam
daa
(bad)
fistp
mov
pop
(bad)
out
push
cld
das
repnz
push
push
stos
repz
mov
test
push
(bad)
fcomp
cmp
adc
pop
mov
xchg
sar
aas
icebp
(bad)
stos
lock
pop
push
mov
fwait
int
mov
mov
lods
movs
test
mov
sub
outs
rol
movs
mov
lds
push
push
mov
rol
sub
sub
leave
lods
clc
mov
test
loope
xchg
lods
cmps
nop
std
out
mov
daa
and
sub
inc
fs
stc
jecxz
mov
lods
push
sub
das
cli
call
inc
jge
idiv
fldenv
(bad)
js
out
(bad)
cli
(bad)
cld
push
inc
cmp
ja
add
(bad)
xor
mov
add
test
out
dec
lahf
adc
mov
fisttp
(bad)
dec
xchg
dec
mov
push
adc
rol
ret
mul
mov
xor
leave
xchg
retf
pop
fidiv
mov
add
cmp
(bad)
test
sahf
ds
add
ds
sti
and
add
pop
sbb
inc
lea
call
ja
ins
jne
popf
dec
xor
test
aas
idiv
std
scas
cld
sub
ins
jle
mov
jne
mov
jge
sbb
and
fnsave
add
ret
ret
clc
scas
icebp
daa
push
aam
lods
pop
clc
jae
imul
jg
and
(bad)
outs
and
movs
fs
jle
sbb
pop
jecxz
repz
pop
idiv
fldenv
(bad)
js
out
(bad)
cli
(bad)
cld
push
inc
cmp
ja
add
(bad)
xor
push
mov
dec
repnz
mov
jne
mov
pop
push
inc
or
and
jle
icebp
xor
fimul
xchg
inc
dec
repnz
dec
fdivr
add
inc
pand
inc
lods
clc
mov
sti
fisttp
imul
(bad)
stos
imul
push
add
sbb
cmp
std
(bad)
test
sahf
ds
add
ds
sti
and
add
pop
sbb
inc
lea
loope
gs
gs
jp
xchg
cmps
push
lods
shl
mov
in
clc
jnp
pop
test
clc
jg
mov
cmc
cs
push
cmps
jbe
xchg
inc
xchg
jbe
retf
mov
rcr
mov
std
pushf
mov
xor
in
push
jle
push
xor
xchg
pop
pusha
push
adc
pop
mov
movs
shr
enter
jns
mov
leave
aas
repz
jecxz
fdivr
add
jecxz
mov
cmps
in
xor
mov
xchg
cmc
ja
pop
cli
fcomp
scas
aaa
aaa
cmp
mov
sar
rcr
mov
xchg
mov
adc
dec
dec
xchg
or
aam
test
arpl
mov
xchg
xchg
repz
sar
fild
xor
loopne
mov
mov
aad
ss
xchg
es
push
fwait
pop
pop
pop
pop
pop
adc
xchg
jg
(bad)
mov
add
test
add
(bad)
mov
leave
aas
repz
jecxz
adc
xchg
sbb
imul
retf
cmps
out
mov
xchg
dec
sub
jp
sub
add
js
mov
or
cmp
dec
jl
jecxz
fist
and
fisttp
dec
shl
dec
jle
pusha
jo
sub
add
ds
add
push
shl
add
inc
fs
stc
jecxz
mov
mov
cld
icebp
icebp
(bad)
cmc
pop
clc
xlat
xor
mov
outs
dec
push
ficomp
cmp
cmp
lock
cmp
ficomp
and
inc
pop
jnp
test
popf
fs
into
fisttp
jecxz
scas
pop
clc
imul
ret
cmps
jle
(bad)
and
imul
pop
dec
push
push
xchg
into
cmp
xor
cwde
test
ret
outs
in
in
adc
dec
aas
repz
jecxz
fdivr
add
jecxz
mov
movs
or
push
or
dec
push
outs
xchg
xchg
mov
out
call
adc
cmp
ss
loope
adc
ds
xchg
stos
mov
popa
push
push
fstp
dec
add
fnstcw
add
ds
loopne
(bad)
or
iret
adc
clc
xor
push
shl
and
sbb
scas
push
loop
stos
cmp
pop
pop
arpl
xchg
jg
(bad)
mov
add
test
add
(bad)
mov
leave
aas
repz
jecxz
jo
push
aad
das
aas
and
mov
jnp
idiv
adc
loope
xor
ret
sbb
fisub
xlat
outs
pop
push
popf
outs
xchg
arpl
mov
push
in
inc
or
out
stos
test
ins
mov
das
lea
fst
aam
in
xchg
test
dec
adc
arpl
add
or
cmp
lahf
fdivr
add
jecxz
mov
mov
cld
icebp
icebp
(bad)
cmc
pop
clc
rcl
adc
je
test
mov
xchg
mov
push
std
mov
pop
movs
jl
aam
pop
jl
lock
movs
arpl
mov
test
test
xor
fstp
mov
xchg
jmp
mov
leave
aas
repz
jecxz
fdivr
add
jecxz
mov
scas
mov
inc
pushf
mov
(bad)
add
or
je
dec
mov
in
xchg
inc
cmp
ja
add
(bad)
xor
(bad)
test
sahf
ds
add
jmp
xchg
fsub
aas
mov
movaps
dec
push
add
sbb
scas
fcmovne
cmp
js
add
std
push
sub
hlt
scas
mov
xchg
dec
mov
and
aas
mov
cdq
gs
mov
mov
nop
jge
shl
or
cmovle
cmp
iret
ds
mov
icebp
sbb
cli
scas
mov
test
sahf
mov
test
add
add
cmps
sub
mov
jbe
enter
dec
ret
lods
mov
inc
dec
inc
ja
movs
push
push
mov
add
push
mov
add
push
mov
add
push
mov
add
push
mov
add
push
mov
add
push
mov
add
push
mov
add
push
mov
add
push
mov
add
push
mov
add
push
mov
add
push
mov
add
in
mov
sub
mov
pop
icebp
ds
je
or
rcr
dec
jo
jns
out
adc
mov
ficom
fstp
aas
jns
(bad)
stos
hlt
cmp
cmc
jg
pop
jmp
test
cmp
out
adc
fcmovnbe
mov
ret
inc
sbb
faddp
jmp
jmp
arpl
fcomp
cs
push
cli
data16
jl
sahf
nop
aaa
shl
mov
xlat
dec
nop
add
adc
sbb
and
(bad)
push
dec
push
pop
jno
mov
ja
into
mov
cmp
mov
js
add
push
xchg
(bad)
mov
inc
mov
dec
jne
aas
sbb
imul
retf
xchg
pushf
xor
xlat
aas
xchg
fisub
aad
js
inc
in
outs
pop
(bad)
mov
push
mov
enter
(bad)
dec
add
out
push
movs
cld
cs
mov
daa
int3
inc
add
out
xor
mov
scas
in
and
fsubr
shl
mov
jb
sahf
mov
(bad)
stos
pop
pop
dec
ins
sub
movs
pop
imul
cmps
shl
sub
pushf
jne
loope
jnp
and
sti
mov
stc
push
call
mov
jns
into
dec
(bad)
sub
addr16
aam
mov
jl
loope
ins
sbb
ja
add
mov
jl
es
arpl
stos
xlat
jbe
addr16
es
addr16
jmp
aam
mov
fisubr
xor
arpl
jns
jecxz
jb
inc
push
(bad)
jecxz
add
loop
jbe
daa
mov
in
icebp
mov
retf
cmp
cld
(bad)
in
retf
add
jmp
loop
inc
mov
ficom
jo
mov
mov
pop
mov
xchg
loope
dec
ret
out
jae
and
mov
mov
pop
mul
mov
(bad)
sub
mov
cwde
mov
mov
and
aas
inc
or
mov
xlat
mov
pushf
fwait
inc
mov
sub
mov
lods
ds
mov
jle
cmps
pop
retf
popf
in
outs
outs
jl
pop
push
dec
xor
xor
and
jno
leave
stc
imul
push
shr
js
mov
mov
ret
je
or
add
mov
pop
inc
xchg
movs
lock
std
mov
cmc
hlt
mov
loope
xchg
repnz
lea
push
stc
sahf
or
mov
cmp
dec
mov
mov
jae
icebp
dec
jecxz
xchg
dec
dec
add
push
xchg
out
out
jecxz
xchg
inc
adc
fdivr
test
in
(bad)
mov
xor
push
and
and
out
inc
clc
mov
pop
sar
in
push
or
movs
mov
fadd
pop
shr
scas
inc
xchg
pop
inc
mov
adc
clc
inc
sti
inc
js
jecxz
mov
stos
aas
cmovno
inc
movs
jmp
pop
shl
add
cmp
cmp
inc
aam
retf
xor
(bad)
mov
mov
mov
stc
fstp
int
(bad)
mov
cmp
loop
add
add
mov
lock
mov
psrld
add
bound
push
clc
fcomip
test
mov
fwait
cmp
adc
nop
mov
xchg
rcl
outs
fst
xchg
pop
jmp
(bad)
dec
test
jo
js
pop
add
mov
mov
fidiv
mov
in
lea
push
cld
mov
add
jg
fistp
inc
call
loopne
sub
add
add
adc
mov
call
jg
cld
imul
daa
(bad)
int
test
jbe
mov
lea
mov
enter
mov
sub
and
jg
(bad)
imul
fidiv
ins
cli
inc
sar
jg
cmp
(bad)
clc
ja
(bad)
cli
pop
jmp
stc
xlat
vmovq
lock
mov
add
mov
mov
xor
lods
sti
sbb
sbb
(bad)
clc
dec
xor
inc
fcomip
inc
sbb
and
add
outs
mov
sar
add
push
jg
fistp
inc
call
loopne
sub
add
add
adc
clc
dec
lock
pop
sti
ins
inc
jg
pop
pop
jmp
test
xchg
pop
mov
movs
ins
jmp
popf
outs
(bad)
call
jne
adc
gs
and
je
cmp
pushf
arpl
jecxz
ror
cmps
(bad)
xor
xchg
mov
(bad)
sbb
cmp
(bad)
clc
ja
(bad)
cli
pop
jmp
lock
mov
or
ffreep
fist
or
dec
aad
or
pop
retf
aaa
out
fcom
ret
jb
lock
push
hlt
adc
(bad)
xor
out
dec
mov
pop
(bad)
fadd
(bad)
inc
clc
pop
aam
lock
mov
psrld
add
bound
inc
sar
dec
inc
ror
push
hlt
adc
(bad)
xor
ret
jg
dec
out
(bad)
inc
mov
aad
cmp
cld
cld
pop
clc
ud0
ins
dec
call
add
pop
push
pop
clc
daa
ffreep
cld
jg
aas
dec
inc
ror
js
loopne
cmps
adc
mov
cwde
adc
lods
nop
int3
pop
pop
xchg
sub
jno
inc
jb
xor
test
inc
movs
ja
add
cld
imul
fstp
pop
clc
retf
loope
mov
test
icebp
mov
and
sar
shr
jnp
mov
lods
hlt
mov
fst
shr
lods
inc
inc
out
sub
dec
movs
scas
inc
loop
inc
mov
gs
sub
xchg
push
call
mov
mov
gs
sub
xchg
push
call
mov
mov
gs
sub
xchg
push
call
mov
mov
gs
sub
xchg
push
call
mov
mov
gs
sub
xchg
dec
push
aam
dec
mov
loope
sub
push
cmc
xor
pop
sbb
add
sbb
icebp
lods
sub
push
imul
and
out
gs
inc
xchg
ds
fnstcw
daa
lahf
pop
fs
mov
push
xchg
jb
push
xchg
icebp
adc
out
inc
sub
xchg
sub
iret
fldcw
mov
inc
mov
xchg
sub
pop
movs
cdq
out
ror
shl
jp
mov
push
cmp
sub
into
fiadd
and
mov
test
or
jmp
jg
jl
shl
in
mov
xchg
pop
xor
mov
les
push
cli
mov
xchg
or
daa
mov
pop
push
gs
out
in
rcr
cs
cld
mov
add
leave
xor
imul
jmp
adc
adc
jb
mov
jo
sub
mul
add
add
xor
adc
xor
mov
pop
outs
xchg
inc
push
add
mov
test
jge
ret
outs
xchg
jo
adc
cbw
inc
sub
sub
cmp
mov
(bad)
retf
mov
mov
pop
shr
scas
lahf
push
jle
lahf
jae
into
mov
ins
out
ret
or
jb
arpl
mov
pop
mov
sbb
jb
mov
cld
aas
loop
jns
mov
add
cmp
outs
mov
jl
cli
lds
gs
inc
xchg
dec
shl
clc
aad
lahf
xor
mov
popa
movs
test
pop
outs
xchg
push
call
aaa
loope
push
js
sub
ret
daa
and
pop
cs
movs
jne
icebp
(bad)
cli
or
test
sub
arpl
(bad)
call
int3
xor
mov
jle
(bad)
call
je
sbb
into
sbb
mov
aas
inc
pop
es
in
int3
pop
or
hlt
daa
in
push
cmps
clc
lea
addr16
scas
sub
ja
dec
ss
sti
int
cld
mov
mov
jmp
mov
mov
(bad)
pop
dec
jecxz
out
add
test
mov
add
pop
div
mov
jmp
iret
ret
mov
call
in
std
imul
and
repz
psubd
stos
xlat
retf
push
inc
xchg
call
jle
inc
bnd
or
add
mov
sbb
add
mov
cmc
cmc
js
idiv
loope
xchg
icebp
js
jecxz
aad
test
ins
cmp
imul
retf
sbb
push
(bad)
das
test
std
mov
jns
add
mov
aas
push
pop
jg
mov
int
rcr
aad
sub
neg
jmp
inc
scas
mov
lds
fild
test
(bad)
mov
div
aas
jo
xor
ins
js
loope
mov
imul
mov
fild
cmp
std
mov
cld
dec
mov
add
aas
jns
push
cld
aas
call
pop
fcmovu
mov
rcr
dec
aad
scas
stos
mov
(bad)
ja
popf
cld
inc
(bad)
mov
jg
ss
adc
popa
adc
aad
jle
inc
dec
lock
jnp
out
fbld
out
mov
jg
repz
add
aas
xchg
loop
or
mov
out
pop
dec
adc
int
int3
div
adc
mov
or
xor
xchg
sar
std
stos
cld
gs
cmp
pop
inc
xchg
ret
idiv
popf
lods
lods
ja
(bad)
(bad)
in
sub
mov
dec
fmul
clc
int
lahf
or
sbb
ret
je
(bad)
xor
pop
(bad)
mov
cmp
outs
mov
ja
repnz
inc
sti
mov
pushf
xchg
iret
push
data16
add
lock
cmps
mov
lahf
out
mov
jge
je
in
pop
ret
mov
xchg
lea
and
shr
imul
pop
loope
js
cs
add
add
scas
cmp
movs
mov
test
and
ret
pop
fcom
add
pop
cmps
js
fisub
cs
jge
sbb
cli
aaa
loopne
cld
jnp
jns
add
ror
retf
jg
ss
sti
add
inc
cli
sbb
mov
aad
mov
outs
fstp
into
pushf
cmp
repz
loopne
outs
xchg
and
(bad)
iret
inc
inc
xchg
mov
in
hlt
pop
mov
icebp
pop
(bad)
fprem1
jmp
sub
push
sbb
hlt
cld
lds
add
cmp
mov
mov
add
and
sbb
jl
clc
cmp
jae
adc
mov
loop
xchg
arpl
jmp
clc
daa
cli
sbb
push
and
clc
fcomi
cmp
loop
sar
js
daa
mov
hlt
dec
pop
ret
push
mov
mov
cs
movs
push
push
gs
sti
(bad)
loopne
loopne
int
inc
sbb
jbe
clc
and
aas
ret
pop
lock
adc
xor
iret
idiv
sbb
cdq
and
add
sbb
movs
and
icebp
cld
sub
xor
cli
adc
icebp
out
mov
scas
jl
cmps
imul
cmps
lahf
std
xchg
mov
push
sti
shr
ret
xor
popf
cmps
sahf
jo
push
inc
mov
sub
retf
cmc
jbe
retf
lods
lds
jo
push
(bad)
fstp
ror
lahf
or
or
ficom
call
pushf
mov
sbb
jbe
xor
test
pop
in
pop
jae
mov
xlat
jle
cmp
push
pop
lods
rol
pop
xor
adc
xchg
pop
mov
outs
stc
inc
add
add
cmp
lods
stc
cwde
jg
pusha
pop
das
jae
jns
dec
pop
stos
cmc
xchg
outs
popf
in
cs
mov
in
scas
xchg
pop
stos
imul
imul
repnz
and
pop
aas
cmp
into
jp
retf
fcomip
dec
loope
add
out
jg
push
sti
inc
inc
adc
sahf
sub
sub
fdivr
fidivr
jg
leave
jns
inc
mov
idiv
sub
mov
out
call
arpl
xchg
mov
loope
mov
rcr
jle
cli
shr
scas
mov
jecxz
shl
pop
push
in
mov
push
fidiv
shl
mov
mov
mov
mov
imul
outs
fidiv
shl
fnsave
push
add
inc
fisubr
jbe
mov
mov
mov
push
in
mov
push
fidiv
shl
mov
mov
mov
mov
imul
outs
fidiv
shl
fnsave
push
add
inc
fisubr
jbe
mov
mov
mov
push
in
mov
push
movs
mov
xchg
ins
sub
xor
repz
cld
jmp
icebp
int
bound
daa
mov
jo
jae
mov
dec
xchg
fstp
pop
xchg
loope
sub
push
mov
jge
mov
sub
fbstp
dec
lock
jge
jg
mov
scas
mov
mov
or
sbb
stos
in
enter
loop
or
sbb
test
iret
mov
in
push
call
or
jle
or
ds
inc
xor
lods
mov
pop
(bad)
fs
popa
rcr
xchg
xchg
or
mov
rcr
push
fwait
jbe
xchg
sub
push
push
cmp
cmp
lahf
jge
sub
mov
inc
jo
mov
lahf
inc
repnz
(bad)
mov
inc
jge
inc
cmp
pop
shl
mov
sub
ins
shl
(bad)
push
add
out
jmp
inc
call
fcmovnu
popa
je
es
(bad)
iret
bound
cmps
pop
call
jb
jb
add
sahf
sub
dec
pop
mov
cmp
pusha
je
pushf
arpl
jne
aas
xchg
pop
jmp
mov
popf
cmc
in
lahf
xor
push
cmp
fs
sbb
inc
sbb
movs
jp
test
dec
(bad)
jmp
and
adc
stos
adc
sbb
shl
icebp
mov
inc
rcl
into
pop
sar
lock
out
pop
inc
sub
mov
ja
(bad)
and
mov
pop
mov
and
ja
hlt
scas
push
std
movs
and
and
(bad)
pushf
mov
push
test
ficomp
push
xor
in
cs
ins
push
out
mov
sti
imul
test
loop
cmp
sbb
jns
sahf
mov
leave
pop
pop
xchg
in
dec
cld
jp
sub
mov
mov
cmp
inc
cmp
movs
nop
xchg
enter
in
call
add
aad
cmp
dec
lahf
jne
mov
cli
out
push
or
dec
(bad)
pop
ficomp
cdq
inc
push
dec
xor
int
aaa
fisubr
cwde
scas
fucomp
sbb
pop
jg
jnp
in
xor
sti
push
js
(bad)
fistp
mov
pop
ret
ins
ds
mov
jbe
ja
arpl
test
idiv
js
scas
jg
xchg
inc
sbb
mov
mov
mov
push
dec
jle
jg
clc
dec
cwde
pop
loope
push
mov
dec
adc
sub
mov
or
lahf
inc
push
add
les
cmp
scas
jmp
icebp
icebp
popf
xchg
dec
xchg
out
ja
inc
adc
rcr
cmps
stos
rol
xor
sub
mov
xor
mov
jmp
loope
leave
pop
jecxz
aad
fcomp
loop
pusha
arpl
add
or
pop
or
and
pop
pop
sub
sbb
xchg
mov
push
mov
cmp
xor
xchg
push
jno
cmps
cmps
fdiv
test
shr
mov
ret
je
inc
mov
pop
inc
icebp
mov
pop
mov
repz
pushf
fdivr
stos
stc
daa
cli
fwait
cmp
in
jno
retf
pop
icebp
scas
test
dec
aas
sub
lock
mov
loop
fs
sub
add
xlat
cmp
inc
sbb
add
or
scas
xchg
shl
scas
outs
gs
and
int
scas
adc
mov
sbb
inc
cld
aaa
dec
(bad)
outs
cli
sbb
inc
shl
add
mov
aaa
std
or
mov
inc
(bad)
xlat
sub
push
dec
and
pop
(bad)
inc
pop
adc
pop
jb
add
mov
icebp
out
dec
mov
mov
dec
fistp
sub
adc
add
inc
cmc
and
sar
(bad)
inc
sbb
clc
xchg
aas
(bad)
mov
mov
hlt
jbe
call
es
add
out
fistp
add
or
xchg
inc
(bad)
call
clc
int
add
aas
clc
sub
inc
jecxz
aas
push
popf
fcomi
push
xlat
int
add
stc
imul
mov
ret
aad
lock
mov
popf
out
mov
and
inc
mov
pop
or
push
dec
jae
scas
jg
pop
sbb
das
js
loopne
cmps
ret
add
ins
push
xor
(bad)
call
(bad)
in
sbb
jge
mov
inc
xchg
clc
int
add
aas
clc
sub
inc
jecxz
jg
je
inc
mov
pop
inc
icebp
mov
xor
ss
mov
xor
add
mov
cmp
push
sahf
sbb
cmp
jae
imul
or
mov
aad
mov
mov
pop
mov
ds
xchg
sub
outs
int3
xchg
cmp
push
outs
adc
inc
iret
lods
scas
clc
outs
lahf
mov
hlt
xor
inc
or
(bad)
aaa
inc
cld
aaa
dec
(bad)
outs
cli
sbb
inc
shl
add
cmps
sub
imul
out
cmp
push
cmps
adc
pushf
mov
pop
out
aam
push
sbb
(bad)
es
loope
mov
jbe
and
shr
jle
cmp
mov
mov
xchg
(bad)
cmp
xor
sbb
sbb
test
cmp
test
cdq
movs
fmul
sub
mov
or
test
mov
ror
dec
sub
lock
sbb
add
xchg
aam
pop
xor
push
mov
enter
mov
repnz
leave
jg
jg
std
test
daa
test
(bad)
sbb
shr
add
call
rol
pop
mov
xchg
fbstp
add
adc
mov
fisttp
jge
call
out
sub
addr16
ret
xchg
push
stc
mov
icebp
fwait
inc
imul
(bad)
call
clc
int
add
aas
clc
sub
inc
jecxz
mov
test
jmp
out
fdivr
ins
iret
(bad)
ja
fidivr
imul
in
ins
adc
je
rol
pushf
mov
pop
test
fbstp
div
jg
inc
mov
xor
mov
cmp
jno
cmp
std
loope
cld
retf
xlat
stos
out
cmp
or
aas
mov
(bad)
jl
enter
add
sbb
inc
lds
xor
lods
fsubr
aaa
sub
(bad)
out
adc
jp
inc
add
inc
stos
xchg
movs
popf
ds
(bad)
das
jnp
(bad)
(bad)
loop
xchg
pop
pop
ficomp
cmp
push
call
xor
push
dec
mov
hlt
push
pusha
sbb
mov
sub
adc
sub
push
add
mov
pop
push
push
dec
mov
hlt
push
pusha
sbb
mov
sub
adc
sub
push
add
mov
pop
push
push
dec
and
or
test
(bad)
cmp
adc
hlt
sub
aad
pop
push
xchg
das
dec
mov
fs
aad
add
push
xor
popa
shl
movs
pop
popa
out
inc
pop
mov
dec
leave
lahf
movs
ret
adc
inc
inc
into
out
push
arpl
fs
jmp
movs
jne
push
(bad)
in
imul
jo
cmp
xor
ret
push
pop
xlat
ins
push
fwait
add
fistp
out
pop
or
adc
jae
jmp
lea
jmp
adc
xor
push
in
fnstenv
push
ds
jge
imul
jg
xchg
and
mov
xlat
pop
xchg
pop
aas
cmp
aam
iret
adc
popf
stos
jmp
cs
sbb
sub
sub
imul
sti
push
aam
mov
fwait
jnp
out
lods
push
fwait
xor
out
fdivp
adc
fsub
je
pop
icebp
out
fistp
jmp
call
sub
jbe
pushf
jecxz
bound
call
xor
mov
fs
xchg
int
sbb
rcr
sahf
mov
lea
ja
sbb
push
stos
jmp
sbb
pop
dec
repnz
mov
(bad)
dec
mov
jecxz
arpl
xchg
jmp
int3
jb
hlt
iret
jp
sbb
sub
mov
in
imul
outs
mov
pop
sbb
(bad)
xor
jle
add
sbb
xor
lods
mov
fisttp
imul
sub
dec
scas
imul
pop
xchg
dec
inc
and
push
xchg
inc
dec
iret
sub
iret
mov
fnstcw
mov
out
add
cmc
scas
test
std
in
mov
sub
aam
jg
push
push
sahf
aas
das
in
sub
inc
add
(bad)
add
adc
jg
nop
pop
push
xchg
test
je
pop
pushf
addr16
ins
jae
push
inc
jle
arpl
lock
adc
inc
sub
mov
inc
adc
pusha
or
mov
adc
add
push
inc
push
add
adc
inc
sub
mov
inc
adc
pusha
or
mov
adc
add
push
inc
push
add
adc
inc
sub
mov
inc
adc
pusha
or
mov
adc
add
push
inc
push
add
adc
inc
sub
mov
inc
adc
pusha
adc
sub
(bad)
pop
pop
sub
jp
jmp
inc
loop
lea
mov
fdivr
repz
aam
push
xor
push
xchg
jge
pushf
fs
jns
dec
push
mov
xchg
aam
xor
or
stc
jp
les
push
inc
arpl
call
cmp
mov
jae
rol
xchg
mov
add
sahf
xchg
mov
aas
pop
pop
(bad)
sahf
mov
or
shr
adc
fld
sbb
xchg
push
or
lods
cmp
test
imul
mov
push
mov
mov
pop
add
aaa
pushf
rol
ss
leave
or
sub
and
jbe
dec
cmp
lods
es
and
cmp
icebp
push
das
jg
mov
xor
push
hlt
and
xchg
add
cli
ror
pop
and
mov
outs
int
lods
test
stos
jmp
paddsw
jmp
inc
mov
sbb
clc
jp
rcr
dec
push
inc
sbb
jg
inc
out
mov
addr16
cmp
ret
repnz
addr16
inc
add
sahf
aam
imul
mov
lea
enter
mov
movs
mov
push
jnp
mov
pop
and
in
inc
iret
push
mov
in
cmp
rol
mov
sbb
xchg
ins
mul
add
sahf
aam
imul
mov
lea
enter
mov
movs
mov
push
jnp
mov
pop
and
in
inc
iret
push
mov
in
cmp
rol
mov
sbb
xchg
ins
mul
add
sahf
aam
imul
mov
lea
iret
pop
clc
and
ret
clc
sub
js
test
cdq
out
retf
push
cmp
cdq
or
jno
call
test
push
mov
js
mov
mov
mov
rcl
add
and
xchg
repz
daa
fdivr
xor
pop
call
push
jo
in
cmp
fistp
mov
nop
in
sar
mov
xor
outs
or
loope
vmread
cld
cmp
mov
inc
(bad)
sar
add
stos
pop
or
push
cmp
mov
mov
lods
aad
std
cmp
rcl
mov
enter
leave
ss
aaa
cmp
js
retf
(bad)
adc
icebp
add
mov
mov
ja
inc
inc
dec
retf
into
out
pop
add
mov
push
sti
daa
fisubr
push
mov
pop
adc
retf
(bad)
not
ins
enter
addr16
lahf
xchg
cdq
aaa
and
into
jo
jp
ret
iret
mov
icebp
pop
cmp
cmp
sbb
test
sub
mov
xchg
loope
pop
add
mov
and
sbb
cmp
ds
inc
jg
lea
xchg
inc
ins
cmps
cld
cmp
mov
pop
mov
jp
sub
add
in
js
and
push
data16
je
fcmove
aad
mov
jle
and
mov
ret
aaa
jb
scas
(bad)
dec
sar
addr16
xchg
ret
inc
cmp
inc
repz
pop
inc
mov
mov
out
fstp
(bad)
fcmovnb
push
(bad)
daa
icebp
pop
mov
movs
cmc
int3
adc
dec
pusha
pop
and
dec
and
icebp
(bad)
das
clc
gs
pop
pop
clc
daa
sar
cdq
jge
ja
stos
fnstsw
cmp
and
inc
sub
arpl
fistp
stos
mov
pop
cmp
mov
shr
in
xchg
pop
mov
xchg
lods
lods
push
retf
jae
jecxz
sbb
call
jmp
bnd
or
xlat
mov
mov
mov
inc
popa
stos
inc
loope
mov
movhps
not
ss
(bad)
not
inc
outs
psubd
cmp
adc
loopne
xor
mov
imul
xor
ins
cmps
leave
jno
mov
mov
popf
enter
push
inc
pusha
sti
push
cmc
dec
aas
ins
mov
aad
lock
sti
pop
inc
ins
fucomi
pop
popa
jns
or
ror
jo
xor
pop
sbb
mov
ds
imul
or
mov
cmp
out
jb
pop
bound
mov
jp
ja
adc
into
adc
mov
mov
ja
popf
outs
ret
loope
mov
outs
je
(bad)
bswap
test
xchg
pop
mov
cs
inc
ret
sub
and
xchg
imul
aas
add
pop
mov
ret
pop
shl
jne
icebp
and
outs
outs
mov
xchg
and
bound
add
sub
f2xm1
xchg
jecxz
ss
loopne
fisttp
mov
lods
and
inc
lahf
cmp
lds
mov
dec
daa
and
shl
retf
(bad)
xchg
inc
sbb
mov
push
cld
dec
aad
test
imul
pop
inc
mov
xchg
add
stos
cmps
inc
loopne
sbb
cmp
adc
out
mov
pop
ins
lods
or
xchg
dec
cld
mov
dec
mov
(bad)
mov
jg
hlt
loopne
sbb
fdivr
in
push
js
cwde
out
mov
ss
add
adc
lahf
test
adc
cmp
call
mov
bound
bound
jns
in
in
and
daa
aaa
loop
in
or
out
adc
arpl
xchg
call
scas
js
pop
dec
mov
shl
add
mov
fwait
out
xchg
pop
aam
jae
lock
sbb
and
cld
push
clc
xor
arpl
imul
loopne
(bad)
ror
pop
loopne
lods
scas
dec
stos
mov
add
das
aaa
cli
pop
sbb
xchg
iret
adc
pop
cmp
inc
scas
test
ret
stc
jae
(bad)
arpl
sti
xlat
dec
pop
in
mov
cmp
mov
pop
imul
imul
xchg
dec
mov
cdq
push
add
jle
repnz
dec
movd
pop
sbb
test
xchg
xchg
fidivr
sbb
sbb
test
int
mov
into
inc
fisttp
std
mov
mov
mov
mov
mov
inc
aam
das
das
adc
inc
test
stos
mov
cmp
jmp
push
leave
in
xlat
rcl
jge
ds
xchg
sub
mov
fst
div
pop
mov
xlat
sub
ins
jmp
ins
mov
adc
inc
and
inc
pop
jbe
sti
and
adc
(bad)
jbe
mov
cmps
xlat
lods
lods
frstor
mov
dec
cmps
inc
ret
add
lahf
inc
clc
(bad)
(bad)
cmp
mov
cli
into
call
ds
(bad)
adc
cmp
sahf
adc
fisubr
js
jb
adc
loopne
imul
pop
test
(bad)
(bad)
cmp
and
push
add
dec
xor
and
cmp
(bad)
stos
in
lods
out
fldcw
xor
retf
inc
pop
dec
shl
pop
mov
add
cmc
pop
cmp
inc
mov
(bad)
sub
sar
cmp
mov
sahf
test
xchg
xor
js
loopne
cdq
icebp
add
jae
jne
iret
adc
pop
fsubr
push
inc
pop
push
jmp
ins
pushf
jl
sbb
xchg
pop
and
sub
add
lods
pop
sub
mov
dec
xchg
ins
aaa
inc
push
lock
xchg
mov
xlat
xor
popf
fdiv
xor
rcr
iret
ret
icebp
push
lea
xchg
jnp
fld
mov
inc
jmp
add
sahf
pop
xchg
adc
or
push
mov
pop
loop
sub
cmps
in
punpcklbw
std
push
idiv
ins
cmp
retf
adc
pop
xor
xchg
sbb
dec
outs
div
ret
cmps
fnstsw
pop
sbb
mov
jge
dec
aam
cld
inc
test
dec
mov
lock
nop
push
clc
test
and
icebp
movs
or
sbb
loope
out
hlt
inc
cmp
clc
jae
xor
xchg
lahf
fnstenv
mov
mov
mov
outs
ss
dec
aam
xor
mov
dec
sahf
and
cmp
loop
test
addr16
shr
je
mov
loopne
aaa
xor
stos
sub
mov
pop
stc
mov
mov
inc
xor
(bad)
mov
imul
pushf
loop
add
mov
cmp
scas
cmps
jmp
int3
call
sbb
push
inc
sub
(bad)
aaa
adc
mov
ret
sbb
mov
jno
stos
sbb
mov
in
movs
mov
mov
mov
movs
popa
fs
fcomp
xchg
arpl
jo
icebp
out
aas
adc
outs
loop
mov
and
imul
lock
pop
retf
ins
test
xor
jne
mov
and
and
xlat
cmp
or
icebp
mov
cli
ds
sub
std
xchg
or
ficom
pop
fsub
jae
mov
not
lahf
push
sar
out
mov
push
cmp
inc
icebp
lods
sbb
popa
xor
inc
aas
mov
fstp
dec
sbb
das
jl
jg
jle
lock
pop
inc
loop
jge
xor
xchg
add
cdq
inc
pop
das
into
sbb
js
pop
lahf
push
push
push
xchg
icebp
add
jge
fist
fiadd
jmp
test
inc
jmp
jmp
jle
mov
jecxz
lea
xchg
test
(bad)
lea
adc
adc
xchg
out
shl
adc
enter
push
ins
fstp
sbb
pop
test
fdivr
(bad)
repz
add
xor
jmp
in
xchg
cmp
movs
sub
sbb
aam
add
cld
push
std
cmps
cld
sbb
lahf
adc
push
shr
cmc
pop
cmp
repnz
gs
add
xchg
and
push
inc
rol
lahf
cmp
dec
pop
ret
(bad)
push
lock
fwait
ins
adc
je
aad
aam
sahf
fimul
mov
into
or
retf
xor
jo
mov
jl
std
movs
in
jle
jle
ficom
icebp
loop
ja
push
sub
fwait
cmps
mov
inc
test
xchg
in
ret
pushf
mov
jnp
out
fist
jg
and
mov
ror
adc
call
js
test
mov
jmp
jl
add
bnd
jle
jp
xchg
test
pop
xchg
in
in
jne
jge
ins
(bad)
data16
rol
fldenv
and
xor
and
jl
scas
jmp
sub
lds
rcr
cmp
lock
popf
cs
sub
add
mov
icebp
imul
jno
out
pop
lahf
mov
shl
mov
jg
out
iret
xchg
sbb
jp
into
xor
int
mov
xchg
test
mov
push
loope
or
xchg
les
test
cmp
jns
inc
lods
mov
mov
or
mov
(bad)
inc
pop
add
pop
retf
popf
pop
ret
lock
js
ret
dec
icebp
mov
pop
mov
pushw
cmps
inc
sub
cwde
adc
push
jnp
sbb
(bad)
add
cld
jae
imul
loop
icebp
ss
in
ret
adc
sbb
div
push
dec
fidivr
mov
mov
jb
out
test
lods
jne
addr16
in
(bad)
jg
ja
mov
stos
sbb
out
push
jb
xchg
out
add
aaa
mov
xor
shl
fstp
loop
sub
mov
je
mov
mov
jbe
pop
pop
jb
jns
mov
ficomp
ret
test
je
lea
icebp
xchg
clc
xor
or
lea
aaa
adc
and
cmps
jl
xchg
push
add
and
cmp
out
fistp
sar
or
fild
imul
jl
outs
movs
mov
neg
jmp
in
pop
jecxz
push
sub
or
es
pop
fstp
not
xchg
and
mov
(bad)
rcl
cmp
fisubr
retf
pop
fsub
xor
into
pop
mov
sub
add
xlat
sub
ffreep
rcr
mov
sub
movs
int
jp
mov
or
xor
movs
xchg
test
xor
add
cmp
ds
mov
sar
(bad)
inc
lock
outs
ins
cmps
dec
pop
mul
pop
repnz
fsub
int3
inc
push
jb
pusha
popa
inc
(bad)
jp
iret
cld
adc
ret
jno
pop
jbe
addr16
jns
cmc
mov
pop
mov
mov
jae
bound
cmps
loopne
ror
nop
jo
add
fnclex
(bad)
inc
ret
fild
es
fwait
sbb
push
sahf
jae
fisttp
lods
jns
stos
vmovsldup
hlt
fnstenv
aaa
mov
pop
imul
sahf
sbb
sbb
ret
shr
mov
retf
fwait
jno
mov
lds
inc
dec
cmp
inc
lods
je
lock
in
addr16
xchg
loope
add
mov
pop
push
ins
fs
cmp
ss
scas
repnz
push
mov
data16
arpl
or
xchg
jl
clc
mov
pop
jmp
movs
test
xchg
stos
jmp
sub
pop
dec
push
cld
adc
mov
ja
mov
hlt
jmp
sbb
mov
sbb
aaa
mov
fcmovnb
call
clc
jno
leave
out
mov
mov
hlt
xor
mov
aad
or
adc
js
jnp
hlt
(bad)
add
xor
outs
imul
mov
bound
arpl
leave
repz
xchg
jbe
xlat
aas
pusha
pop
hlt
lea
clc
clc
(bad)
jno
pop
js
push
shl
pop
push
shr
mov
hlt
sub
sbb
dec
std
mov
sbb
and
inc
lock
xor
out
jge
test
sbb
xchg
pop
iret
setb
sbb
sbb
add
sbb
sahf
or
push
mov
cmp
pop
lds
outs
mov
pop
out
mov
sub
sub
in
sti
mov
jo
and
out
or
and
push
aas
add
mov
pop
inc
jge
jnp
sar
mov
push
in
and
sbb
xchg
or
ret
outs
(bad)
bound
cmp
in
jnp
out
repz
cld
adc
inc
lock
xor
aaa
pop
xchg
mov
add
mov
or
(bad)
aad
pop
(bad)
mov
ret
push
or
scas
fstp
mov
or
sbb
cdq
jno
in
and
ins
mov
cld
dec
mov
sar
add
cmps
fimul
imul
inc
fwait
xor
mov
iret
retf
ficomp
pop
fdivr
fldenv
inc
add
add
add
add
add
add
add
add
adc
add
add
sub
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
inc
add
add
add
inc
inc
add
inc
inc
(bad)
inc
add
(bad)
inc
xchg
js
ja
jg
ja
ja
ja
xchg
add
ja
push
push
pop
jnp
mov
jne
push
push
jo
add
push
add
ja
push
push
pop
jnp
mov
ja
ja
xchg
xchg
ja
jo
ja
js
pushw
ja
adc
ja
loopne
addr16
adc
add
pop
jno
adc
push
add
adc
ja
loopne
addr16
adc
pusha
data16
add
ja
ja
jo
ja
js
add
add
add
add
add
ins
xor
xor
ret
add
add
and
add
inc
push
add
add
push
add
gs
add
add
daa
and
add
or
add
add
add
add
dec
imul
add
ja
push
jo
imul
outs
imul
ins
add
(bad)
inc
add
(bad)
or
add
arpl
or
pop
add
push
add
add
add
add
add
add
add
add
and
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
inc
add
add
add
inc
inc
add
inc
inc
(bad)
inc
add
(bad)
inc
add
add
(bad)
push
(bad)
(bad)
push
add
add
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
push
add
(bad)
(bad)
(bad)
(bad)
push
add
(bad)
(bad)
(bad)
(bad)
push
add
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
add
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
add
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
add
add
add
lock
(bad)
(bad)
inc
add
add
add
add
add
(bad)
(bad)
push
inc
add
add
add
(bad)
add
lock
lock
add
lock
lock
add
lock
lock
add
lock
lock
add
lock
(bad)
add
(bad)
add
(bad)
add
(bad)
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
clc
add
(bad)
clc
add
(bad)
clc
add
push
add
jmp
add
inc
add
inc
add
inc
add
add
jg
add
jg
add
jg
adc
jg
xor
jg
jo
jg
lock
push
add
push
pop
(bad)
push
aas
(bad)
push
(bad)
(bad)
push
(bad)
(bad)
push
(bad)
(bad)
push
(bad)
(bad)
(bad)
stc
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
nop
add
jl
add
popa
outs
jae
push
gs
inc
push
add
add
push
add
gs
xor
add
pop
pop
out
add
or
pop
add
add
add
add
add
gs
xor
add
mov
out
add
or
pop
add
add
add
add
bound
xor
add
mov
out
add
or
pop
add
add
add
add
push
add
gs
xor
add
mov
out
add
or
pop
add
add
add
add
push
add
gs
xor
add
mov
out
add
pop
add
add
add
add
or
add
gs
xor
xor
add
add
jae
popa
ins
ins
and
and
jne
popa
jb
and
je
imul
outs
and
je
outs
outs
and
fs
add
(bad)
inc
add
das
or
adc
add
add
add
add
or
add
popa
xor
add
add
add
add
add
add
add
add
add
add
and
add
add
add
add
add
add
add
adc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
inc
add
add
add
inc
inc
add
inc
inc
(bad)
inc
add
(bad)
inc
mov
(bad)
clc
add
add
add
add
add
psubb
(bad)
clc
mov
add
add
add
ud0
clc
or
add
add
inc
or
add
(bad)
clc
add
(bad)
(bad)
(bad)
dec
loopne
add
add
ud0
clc
ud0
(bad)
dec
loopne
add
add
add
ud0
(bad)
(bad)
(bad)
dec
loopne
add
add
(bad)
push
add
(bad)
(bad)
(bad)
dec
loopne
add
add
(bad)
(bad)
(bad)
push
(bad)
(bad)
(bad)
dec
loopne
or
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
dec
loopne
ud0
(bad)
clc
add
(bad)
(bad)
(bad)
(bad)
push
push
loopne
add
ud0
dec
(bad)
(bad)
(bad)
push
add
(bad)
(bad)
(bad)
push
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
clc
push
add
loopne
add
loopne
add
rol
inc
add
inc
add
inc
add
inc
add
add
add
add
clc
inc
pop
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
add
add
add
add
add
add
add
add
add
rol
add
add
add
add
add
add
add
add
inc
add
add
add
inc
inc
add
inc
inc
(bad)
inc
add
(bad)
inc
add
add
or
add
add
mov
dec
add
add
add
dec
dec
dec
add
jo
add
inc
add
inc
add
inc
add
inc
add
or
add
add
add
add
add
add
add
add
add
sbb
add
inc
add
inc
add
inc
add
inc
add
enter
loopne
loopne
or
inc
pop
add
add
push
add
popa
addr16
add
add
add
add
add
add
add
add
and
add
add
add
add
add
add
add
adc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
inc
add
add
add
inc
inc
add
inc
inc
(bad)
inc
add
(bad)
inc
add
add
add
add
add
or
mov
add
add
add
or
(bad)
lock
add
add
add
or
lock
lock
add
add
or
or
push
loopne
(bad)
(bad)
dec
add
add
add
loopne
(bad)
(bad)
push
(bad)
(bad)
push
add
add
add
loopne
(bad)
(bad)
push
push
add
add
add
add
loopne
(bad)
(bad)
push
add
(bad)
inc
add
add
push
loopne
(bad)
(bad)
dec
(bad)
(bad)
(bad)
inc
add
add
push
loopne
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
or
loopne
(bad)
(bad)
(bad)
(bad)
(bad)
inc
(bad)
(bad)
(bad)
push
add
add
ud0
(bad)
push
(bad)
(bad)
push
add
add
add
add
(bad)
(bad)
(bad)
(bad)
inc
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
sar
push
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
jg
add
add
add
add
add
add
add
add
add
jmp
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
add
add
add
add
add
add
add
add
add
rol
add
add
add
add
add
add
add
add
inc
add
add
add
inc
inc
add
inc
inc
(bad)
inc
add
(bad)
inc
add
mov
inc
add
add
add
add
add
add
(bad)
clc
add
add
add
push
push
push
add
ud0
or
add
inc
add
inc
add
inc
add
inc
add
aas
add
add
add
add
add
add
add
add
add
add
add
add
add
cmp
add
(bad)
inc
add
inc
add
inc
add
inc
add
js
call
add
add
add
add
or
add
popa
xor
add
add
add
add
add
add
add
add
add
add
and
add
add
add
add
add
add
add
adc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
inc
add
add
add
inc
inc
add
inc
inc
(bad)
inc
add
(bad)
inc
mov
add
add
mov
add
jg
mov
mov
ja
add
add
add
mov
add
add
mov
(bad)
(bad)
inc
mov
mov
add
(bad)
inc
mov
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
inc
mov
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
inc
mov
add
add
add
add
(bad)
(bad)
(bad)
inc
mov
add
(bad)
inc
mov
add
add
add
add
mov
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
aas
(bad)
(bad)
cld
ud0
lock
inc
add
inc
add
cld
add
(bad)
add
add
add
add
add
(bad)
add
aas
cld
add
(bad)
inc
add
inc
ud0
lock
(bad)
(bad)
cld
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
add
add
add
add
add
add
add
add
add
rol
add
add
add
add
add
add
add
add
inc
add
add
add
inc
inc
add
inc
inc
(bad)
inc
add
(bad)
inc
add
add
add
mov
jo
add
add
add
mov
lock
(bad)
push
mov
add
add
dec
add
or
add
add
inc
add
inc
add
inc
add
inc
add
aas
add
clc
sldt
loopne
add
add
add
add
add
sldt
clc
aas
add
(bad)
inc
add
inc
add
inc
add
inc
add
call
add
add
add
add
add
add
add
xor
pop
add
(bad)
inc
add
add
add
push
add
add
push
adc
add
add
add
add
or
popa
addr16
sbb
ds
add
add
add
add
add
add
add
and
add
add
add
add
add
add
add
adc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
inc
add
add
add
inc
inc
add
inc
inc
(bad)
inc
add
(bad)
inc
add
add
add
add
add
or
mov
add
add
add
or
(bad)
lock
add
add
add
or
lock
lock
add
add
or
or
push
loopne
(bad)
(bad)
dec
add
add
add
loopne
(bad)
(bad)
push
(bad)
(bad)
push
add
add
add
loopne
(bad)
(bad)
push
push
add
add
add
add
loopne
(bad)
(bad)
push
add
(bad)
inc
add
add
push
loopne
(bad)
(bad)
dec
(bad)
(bad)
(bad)
inc
add
add
push
loopne
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
or
loopne
(bad)
(bad)
(bad)
(bad)
(bad)
inc
(bad)
(bad)
(bad)
push
add
add
ud0
(bad)
push
(bad)
(bad)
push
add
add
add
add
(bad)
(bad)
(bad)
(bad)
inc
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
sar
push
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
jg
add
add
add
add
add
add
add
add
add
jmp
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
add
add
add
add
add
add
add
add
add
rol
add
add
add
add
add
add
add
add
inc
add
add
add
inc
inc
add
inc
inc
(bad)
inc
add
(bad)
inc
add
mov
inc
add
add
add
add
add
add
(bad)
clc
add
add
add
push
push
push
add
ud0
or
add
inc
add
inc
add
inc
add
inc
add
aas
add
add
add
add
add
add
add
add
add
add
add
add
add
cmp
add
(bad)
inc
add
inc
add
inc
add
inc
add
lock
or
inc
push
add
add
pop
add
gs
xor
add
add
jae
popa
ins
ins
and
fs
and
fs
and
and
and
and
and
and
and
and
and
add
(bad)
inc
add
scas
add
adc
add
add
sysret
add
popa
xor
add
add
add
ins
je
add
add
add
add
add
add
adc
add
add
sub
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
rol
add
add
inc
add
(bad)
inc
inc
add
inc
inc
(bad)
inc
add
(bad)
inc
rol
rol
rol
or
or
or
or
(bad)
(bad)
(bad)
(bad)
(bad)
inc
or
or
or
dec
lock
(bad)
inc
or
or
or
dec
lock
sar
or
or
or
jg
shl
ror
pop
or
(bad)
(bad)
(bad)
rol
ror
rol
or
or
or
or
(bad)
(bad)
(bad)
(bad)
(bad)
inc
or
(bad)
(bad)
(bad)
(bad)
dec
rol
rol
ror
or
or
or
add
add
adc
lock
add
add
add
adc
add
xor
xor
pop
add
(bad)
inc
add
add
add
adc
add
push
mov
add
add
add
adc
add
gs
xor
xor
add
sbb
dec
outs
jae
popa
ins
ins
and
outs
bound
inc
arpl
bound
and
popa
fs
add
(bad)
inc
add
test
adc
pop
add
add
add
adc
add
popa
xor
xor
sbb
ds
add
add
add
add
add
add
add
and
add
add
add
add
add
add
add
adc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
inc
add
add
add
inc
inc
add
inc
inc
(bad)
inc
add
(bad)
inc
mov
add
add
mov
add
jg
mov
mov
ja
add
add
add
mov
add
add
mov
(bad)
(bad)
inc
mov
mov
add
(bad)
inc
mov
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
inc
mov
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
inc
mov
add
add
add
add
(bad)
(bad)
(bad)
inc
mov
add
(bad)
inc
mov
add
add
add
add
mov
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
aas
(bad)
(bad)
cld
ud0
lock
inc
add
inc
add
cld
add
(bad)
add
add
add
add
add
(bad)
add
aas
cld
add
(bad)
inc
add
inc
ud0
lock
(bad)
(bad)
cld
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
add
add
add
add
add
add
add
add
add
rol
add
add
add
add
add
add
add
add
inc
add
add
add
inc
inc
add
inc
inc
(bad)
inc
add
(bad)
inc
add
add
add
mov
jo
add
add
add
mov
lock
(bad)
push
mov
add
add
dec
add
or
add
add
inc
add
inc
add
inc
add
inc
add
aas
add
clc
sldt
loopne
add
add
add
add
add
sldt
clc
aas
add
(bad)
inc
add
inc
add
inc
add
inc
add
mov
add
add
add
add
add
add
push
add
xor
add
add
(bad)
inc
add
add
add
adc
add
push
cmp
add
pop
add
add
add
adc
add
gs
xor
add
add
add
jb
bound
and
popa
fs
dec
outs
jae
popa
ins
ins
popa
je
outs
outs
and
jae
jb
arpl
outs
jae
add
(bad)
inc
add
dec
or
add
add
add
pop
add
add
add
adc
popa
xor
sbb
ds
add
add
add
add
add
add
add
and
add
add
add
add
add
add
add
adc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
inc
add
add
add
inc
inc
add
inc
inc
(bad)
inc
add
(bad)
inc
add
add
add
add
add
or
mov
add
add
add
or
(bad)
lock
add
add
add
or
lock
lock
add
add
or
or
push
loopne
(bad)
(bad)
dec
add
add
add
loopne
(bad)
(bad)
push
(bad)
(bad)
push
add
add
add
loopne
(bad)
(bad)
push
push
add
add
add
add
loopne
(bad)
(bad)
push
add
(bad)
inc
add
add
push
loopne
(bad)
(bad)
dec
(bad)
(bad)
(bad)
inc
add
add
push
loopne
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
or
loopne
(bad)
(bad)
(bad)
(bad)
(bad)
inc
(bad)
(bad)
(bad)
push
add
add
ud0
(bad)
push
(bad)
(bad)
push
add
add
add
add
(bad)
(bad)
(bad)
(bad)
inc
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
sar
push
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
jg
add
add
add
add
add
add
add
add
add
jmp
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
add
add
add
add
add
add
add
add
add
rol
add
add
add
add
add
add
add
add
inc
add
add
add
inc
inc
add
inc
inc
(bad)
inc
add
(bad)
inc
add
mov
inc
add
add
add
add
add
add
(bad)
clc
add
add
add
push
push
push
add
ud0
or
add
inc
add
inc
add
inc
add
inc
add
aas
add
add
add
add
add
add
add
add
add
add
add
add
add
cmp
add
(bad)
inc
add
inc
add
inc
add
inc
add
lock
loopne
loopne
or
inc
pop
add
add
pop
add
popa
xor
add
add
add
add
add
add
add
add
add
add
and
add
add
add
add
add
add
add
adc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
inc
add
add
add
inc
inc
add
inc
inc
(bad)
inc
add
(bad)
inc
mov
add
add
mov
add
jg
mov
mov
ja
add
add
add
mov
add
add
mov
(bad)
(bad)
inc
mov
mov
add
(bad)
inc
mov
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
inc
mov
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
inc
mov
add
add
add
add
(bad)
(bad)
(bad)
inc
mov
add
(bad)
inc
mov
add
add
add
add
mov
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
aas
(bad)
(bad)
cld
ud0
lock
inc
add
inc
add
cld
add
(bad)
add
add
add
add
add
(bad)
add
aas
cld
add
(bad)
inc
add
inc
ud0
lock
(bad)
(bad)
cld
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
add
add
add
add
add
add
add
add
add
rol
add
add
add
add
add
add
add
add
inc
add
add
add
inc
inc
add
inc
inc
(bad)
inc
add
(bad)
inc
add
add
add
mov
jo
add
add
add
mov
lock
(bad)
push
mov
add
add
dec
add
or
add
add
inc
add
inc
add
inc
add
inc
add
aas
add
clc
sldt
loopne
add
add
add
add
add
sldt
clc
aas
add
(bad)
inc
add
inc
add
inc
add
inc
add
mov
add
add
add
add
add
add
push
add
xor
add
add
(bad)
inc
add
add
add
adc
add
push
pop
adc
add
add
add
add
sbb
add
popa
xor
sbb
ds
add
add
add
add
add
add
add
and
add
add
add
add
add
add
add
adc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
inc
add
add
add
inc
inc
add
inc
inc
(bad)
inc
add
(bad)
inc
add
add
add
add
add
or
mov
add
add
add
or
(bad)
lock
add
add
add
or
lock
lock
add
add
or
or
push
loopne
(bad)
(bad)
dec
add
add
add
loopne
(bad)
(bad)
push
(bad)
(bad)
push
add
add
add
loopne
(bad)
(bad)
push
push
add
add
add
add
loopne
(bad)
(bad)
push
add
(bad)
inc
add
add
push
loopne
(bad)
(bad)
dec
(bad)
(bad)
(bad)
inc
add
add
push
loopne
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
or
loopne
(bad)
(bad)
(bad)
(bad)
(bad)
inc
(bad)
(bad)
(bad)
push
add
add
ud0
(bad)
push
(bad)
(bad)
push
add
add
add
add
(bad)
(bad)
(bad)
(bad)
inc
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
sar
push
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
jg
add
add
add
add
add
add
add
add
add
jmp
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
add
add
add
add
add
add
add
add
add
rol
add
add
add
add
add
add
add
add
inc
add
add
add
inc
inc
add
inc
inc
(bad)
inc
add
(bad)
inc
add
mov
inc
add
add
add
add
add
add
(bad)
clc
add
add
add
push
push
push
add
ud0
or
add
inc
add
inc
add
inc
add
inc
add
aas
add
add
add
add
add
add
add
add
add
add
add
add
add
cmp
add
(bad)
inc
add
inc
add
inc
add
inc
add
lock
pavgb
loopne
or
inc
dec
add
add
pop
add
gs
xor
add
add
add
jae
popa
ins
ins
and
inc
and
outs
jbe
jb
gs
push
outs
data16
popa
jb
add
(bad)
inc
add
test
adc
add
add
add
add
sbb
add
popa
xor
xor
sbb
ds
add
add
add
add
add
add
add
and
add
add
add
add
add
add
add
adc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
inc
add
add
add
inc
inc
add
inc
inc
(bad)
inc
add
(bad)
inc
mov
add
add
mov
add
jg
mov
mov
ja
add
add
add
mov
add
add
mov
(bad)
(bad)
inc
mov
mov
add
(bad)
inc
mov
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
inc
mov
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
inc
mov
add
add
add
add
(bad)
(bad)
(bad)
inc
mov
add
(bad)
inc
mov
add
add
add
add
mov
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
aas
(bad)
(bad)
cld
ud0
lock
inc
add
inc
add
cld
add
(bad)
add
add
add
add
add
(bad)
add
aas
cld
add
(bad)
inc
add
inc
ud0
lock
(bad)
(bad)
cld
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
add
add
add
add
add
add
add
add
add
rol
add
add
add
add
add
add
add
add
inc
add
add
add
inc
inc
add
inc
inc
(bad)
inc
add
(bad)
inc
add
add
add
mov
jo
add
add
add
mov
lock
(bad)
push
mov
add
add
dec
add
or
add
add
inc
add
inc
add
inc
add
inc
add
aas
add
clc
sldt
loopne
add
add
add
add
add
sldt
clc
aas
add
(bad)
inc
add
inc
add
inc
add
inc
add
jo
cwde
or
or
inc
sub
add
sbb
add
xor
xor
pop
add
(bad)
inc
add
add
add
sldt
add
push
add
add
pop
add
add
add
add
add
gs
xor
xor
add
adc
dec
outs
jae
popa
ins
ins
and
gs
imul
(bad)
(bad)
inc
add
aaa
add
adc
add
add
add
pop
add
popa
xor
add
add
je
add
add
add
add
add
adc
add
add
or
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
and
imul
sbb
sub
jae
sub
jnp
sub
mov
sub
mov
pushf
pushf
pushf
add
cmp
add
lods
add
inc
mov
push
push
mov
jae
mov
mov
add
arpl
add
mov
add
mov
pop
mov
arpl
add
mov
imul
jae
mov
test
add
mov
movs
mov
mov
pop
pop
into
add
into
add
movs
into
add
lods
into
add
(bad)
into
add
into
into
add
and
add
(bad)
add
(bad)
add
(bad)
add
(bad)
add
(bad)
add
(bad)
add
(bad)
add
mov
(bad)
add
and
add
sub
add
fiadd
inc
cmp
add
fiadd
pop
inc
fiadd
arpl
add
fiadd
(bad)
fiadd
arpl
add
out
jnp
out
xchg
jae
add
out
lods
lods
out
mov
out
add
out
add
(bad)
out
add
out
add
out
out
add
test
jnp
test
xchg
xchg
test
into
(bad)
test
out
out
test
inc
inc
arpl
add
inc
mov
add
inc
movs
pushf
inc
lods
pushf
inc
mov
inc
mov
movs
inc
mov
inc
(bad)
into
inc
(bad)
(bad)
inc
out
inc
out
out
inc
div
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
add
add
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
jae
add
add
add
add
jae
jae
pop
pop
pop
inc
xor
sbb
sub
sub
push
push
adc
adc
jae
cmp
cmp
sub
and
and
push
and
jae
cmp
inc
xor
cmp
cmp
adc
ds
xor
and
push
dec
inc
dec
sbb
jae
sub
sub
dec
xor
ins
pop
push
pop
pop
sub
and
and
dec
dec
dec
dec
dec
dec
dec
xor
or
adc
cmp
inc
pop
push
push
pop
das
inc
adc
and
dec
push
push
dec
imul
or
push
cmp
push
push
ins
ins
pop
push
jae
inc
or
or
cmp
dec
dec
pop
push
dec
sbb
inc
wbinvd
or
es
sub
sub
jae
jae
sbb
sbb
sbb
cs
sbb
jae
jae
jae
jae
jae
dec
popa
adc
jae
jae
jae
jae
jae
jae
push
inc
jae
jae
jae
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
aas
(bad)
(bad)
(bad)
aas
(bad)
inc
and
or
add
add
add
add
add
add
push
add
xor
add
add
(bad)
inc
add
add
add
or
sbb
add
cwde
or
inc
dec
add
add
pop
add
gs
xor
add
add
and
imul
outs
jae
popa
ins
ins
popa
je
outs
outs
and
jae
jb
arpl
outs
jae
add
(bad)
inc
add
out
inc
or
adc
add
add
add
add
and
add
popa
xor
sbb
ds
add
add
add
add
add
add
add
and
add
add
add
add
add
add
add
adc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
inc
add
add
add
inc
inc
add
inc
inc
(bad)
inc
add
(bad)
inc
add
add
add
add
add
or
mov
add
add
add
or
(bad)
lock
add
add
add
or
lock
lock
add
add
or
or
push
loopne
(bad)
(bad)
dec
add
add
add
loopne
(bad)
(bad)
push
(bad)
(bad)
push
add
add
add
loopne
(bad)
(bad)
push
push
add
add
add
add
loopne
(bad)
(bad)
push
add
(bad)
inc
add
add
push
loopne
(bad)
(bad)
dec
(bad)
(bad)
(bad)
inc
add
add
push
loopne
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
or
loopne
(bad)
(bad)
(bad)
(bad)
(bad)
inc
(bad)
(bad)
(bad)
push
add
add
ud0
(bad)
push
(bad)
(bad)
push
add
add
add
add
(bad)
(bad)
(bad)
(bad)
inc
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
sar
push
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
jg
add
add
add
add
add
add
add
add
add
jmp
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
add
add
add
add
add
add
add
add
add
rol
add
add
add
add
add
add
add
add
inc
add
add
add
inc
inc
add
inc
inc
(bad)
inc
add
(bad)
inc
add
mov
inc
add
add
add
add
add
add
(bad)
clc
add
add
add
push
push
push
add
ud0
or
add
inc
add
inc
add
inc
add
inc
add
aas
add
add
add
add
add
add
add
add
add
add
add
add
add
cmp
add
(bad)
inc
add
inc
add
inc
add
inc
add
mov
loopne
loopne
or
inc
sub
add
and
gs
(bad)
inc
add
add
add
sbb
add
push
push
sbb
add
add
add
add
add
add
gs
pop
add
(bad)
inc
add
add
add
push
add
add
push
clc
push
add
pop
add
add
add
add
add
xor
pop
add
(bad)
inc
add
add
add
adc
add
push
sub
add
add
add
add
add
xor
pop
add
(bad)
inc
add
add
add
adc
add
push
pop
adc
add
add
add
add
add
outs
xor
pop
add
(bad)
inc
add
add
add
push
add
add
push
mov
add
pop
add
add
add
add
push
add
gs
add
add
(bad)
inc
add
mov
sbb
or
add
add
add
add
in
dec
add
pusha
dec
add
add
add
add
add
xor
add
pusha
dec
add
add
and
dec
add
dec
add
addr16
add
add
add
fs
add
add
addr16
add
add
add
popa
dec
add
popa
dec
add
gs
add
dec
add
gs
add
dec
add
arpl
sbb
add
add
dec
add
add
add
add
les
adc
add
add
clc
pusha
dec
add
gs
add
pop
dec
add
fs
add
addr16
add
dec
add
dec
add
dec
add
addr16
add
addr16
add
addr16
add
addr16
add
addr16
add
addr16
add
addr16
add
addr16
add
addr16
add
addr16
add
addr16
add
addr16
add
addr16
add
addr16
add
addr16
add
addr16
add
pop
dec
add
pop
dec
add
add
add
fs
add
dec
add
addr16
add
addr16
add
addr16
add
addr16
add
fs
add
dec
add
addr16
add
addr16
add
addr16
add
addr16
add
dec
add
push
dec
add
add
inc
add
inc
add
add
push
inc
add
add
adc
les
push
or
inc
add
add
add
add
dec
dec
add
dec
add
add
add
sub
add
inc
add
add
add
add
push
push
and
add
add
pop
(bad)
inc
add
dec
add
arpl
push
and
add
add
pop
(bad)
inc
add
add
add
add
push
mov
add
add
add
and
add
inc
add
add
add
dec
dec
add
and
add
inc
add
add
add
add
dec
dec
add
sub
add
inc
add
add
add
std
(bad)
dec
dec
add
and
add
inc
add
add
add
add
push
push
sub
add
add
pop
(bad)
inc
add
add
add
std
(bad)
inc
dec
add
add
add
add
add
and
add
add
(bad)
inc
add
add
add
add
push
in
dec
add
add
add
sub
add
inc
add
add
add
add
push
push
sub
add
inc
add
add
add
add
push
push
sub
add
add
(bad)
inc
add
add
add
add
push
push
addr16
add
add
add
sub
add
add
pop
(bad)
inc
add
add
add
add
dec
dec
add
popa
dec
add
sub
add
add
(bad)
inc
add
add
add
dec
dec
add
dec
add
add
add
and
add
inc
add
add
add
add
push
push
sub
add
add
add
add
add
add
push
arpl
push
sub
add
add
(bad)
inc
add
add
add
add
pusha
test
add
add
add
inc
add
add
add
std
(bad)
call
add
push
xor
add
jns
(bad)
inc
add
add
add
add
pusha
loopne
dec
add
and
add
inc
add
add
add
dec
dec
add
sub
add
inc
add
dec
add
and
add
inc
add
add
add
add
push
push
sub
add
add
(bad)
inc
add
add
add
add
push
in
dec
add
sub
add
add
add
add
add
dec
dec
add
arpl
push
sub
add
inc
add
add
add
add
dec
dec
add
sub
add
inc
add
add
add
add
push
push
sub
add
add
add
add
add
add
push
mov
add
sub
add
add
(bad)
(bad)
inc
add
add
add
add
les
add
es
inc
add
add
add
dec
dec
add
sub
add
(bad)
(bad)
(bad)
inc
add
add
add
dec
dec
add
add
add
inc
add
add
add
add
push
push
sub
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
add
add
inc
add
add
add
add
push
push
sub
add
(bad)
(bad)
(bad)
inc
add
add
add
add
add
dec
dec
add
and
add
add
pop
(bad)
inc
add
add
add
add
push
test
add
add
add
sub
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
push
add
add
add
add
std
(bad)
call
pusha
dec
add
add
add
xor
add
(bad)
(bad)
(bad)
inc
add
add
add
add
add
dec
dec
add
add
add
inc
add
add
add
add
push
push
sub
add
(bad)
(bad)
(bad)
inc
add
add
add
add
add
dec
dec
add
sub
add
add
pop
(bad)
inc
add
add
add
add
push
sub
dec
add
sub
add
add
add
add
add
add
push
clc
fs
add
sub
add
add
add
add
add
add
push
pop
gs
add
add
add
sub
add
add
add
add
add
dec
dec
add
pusha
dec
add
add
add
sub
add
inc
add
add
add
add
push
push
sub
add
add
(bad)
(bad)
inc
add
add
add
dec
dec
add
sub
add
add
pop
(bad)
inc
add
add
add
add
push
clc
popa
dec
add
sub
add
add
add
add
add
add
push
cmp
add
add
add
sub
add
inc
add
add
add
add
push
push
sub
add
inc
add
add
add
add
push
push
sub
add
inc
add
add
add
add
push
push
sub
add
add
push
(bad)
inc
add
add
add
add
pusha
test
add
add
add
inc
add
add
add
add
push
push
sub
add
add
add
add
add
add
push
sbb
dec
add
sub
add
add
add
add
add
add
push
in
pop
dec
add
sub
add
inc
add
add
add
add
push
push
sub
add
inc
add
add
add
add
dec
dec
add
cmp
dec
add
add
(bad)
(bad)
inc
add
add
add
add
add
dec
dec
add
es
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
dec
dec
add
es
add
add
std
push
(bad)
inc
add
add
add
add
pusha
and
add
sub
xor
and
add
add
add
add
add
add
dec
dec
add
add
cmp
dec
add
add
pop
(bad)
inc
add
add
add
add
push
shl
push
cmp
dec
add
add
(bad)
(bad)
inc
add
add
add
add
add
dec
dec
add
es
add
add
add
add
add
add
add
push
int3
fs
add
fs
add
add
add
cmp
dec
add
inc
add
add
add
add
push
push
cmp
dec
add
inc
add
add
add
add
push
push
cmp
dec
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
add
dec
add
add
add
add
push
(bad)
inc
add
add
add
add
pusha
test
add
cmp
dec
add
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
add
dec
add
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
dec
add
cmp
dec
add
es
add
add
(bad)
(bad)
(bad)
inc
add
add
add
add
dec
dec
dec
add
cmp
dec
add
es
add
in
push
dec
add
dec
add
add
dec
add
add
pop
dec
add
(bad)
jmp
dec
add
dec
add
dec
add
(bad)
(bad)
call
dec
add
push
dec
add
dec
add
dec
dec
add
dec
add
add
dec
add
add
push
dec
add
push
dec
add
dec
add
dec
add
inc
add
(bad)
(bad)
inc
add
add
add
add
add
add
dec
add
add
add
push
dec
add
dec
add
add
add
add
add
add
sbb
(bad)
inc
add
add
add
add
add
add
add
add
add
pop
dec
add
dec
dec
add
add
add
add
add
add
les
(bad)
inc
add
add
add
add
add
add
dec
dec
add
add
add
dec
dec
add
dec
add
add
add
add
add
add
cld
cmps
inc
add
(bad)
(bad)
inc
add
add
add
add
add
add
add
add
add
add
dec
add
add
add
add
add
pushf
inc
add
(bad)
(bad)
inc
add
add
add
add
add
add
push
dec
add
add
add
add
dec
add
add
add
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
add
fmul
add
dec
add
add
add
add
add
(bad)
inc
add
add
add
add
add
add
pop
dec
add
add
add
dec
add
add
nop
add
add
add
add
add
add
(bad)
inc
add
add
add
add
add
add
dec
add
add
add
dec
dec
add
dec
add
add
add
add
add
add
cwde
call
(bad)
inc
add
add
add
add
add
add
dec
add
add
add
dec
add
add
mov
add
add
add
add
add
hlt
mov
(bad)
inc
add
add
add
add
add
add
dec
add
add
add
dec
add
add
nop
add
add
add
add
add
hlt
fadd
(bad)
(bad)
(bad)
inc
add
add
add
add
add
add
add
ins
dec
dec
add
dec
add
add
add
add
add
dec
add
dec
add
dec
add
push
dec
add
dec
add
push
dec
add
add
dec
add
dec
dec
add
dec
add
push
dec
add
push
dec
add
dec
add
dec
add
dec
add
add
dec
dec
add
dec
dec
add
dec
dec
add
dec
dec
add
dec
add
push
dec
add
push
dec
add
push
dec
add
dec
add
dec
dec
add
add
push
dec
add
push
dec
add
dec
add
dec
add
add
dec
add
dec
add
dec
dec
add
dec
dec
add
dec
dec
add
push
dec
add
dec
dec
add
dec
add
(bad)
(bad)
inc
add
add
dec
add
(bad)
(bad)
inc
add
add
add
add
jo
dec
add
add
add
add
add
dec
add
add
add
add
add
add
dec
add
ins
add
ins
outs
jb
add
inc
add
add
inc
add
jns
outs
outs
je
dec
gs
popa
ins
add
bound
jns
data16
add
jns
popa
ins
add
add
add
mov
fwait
dec
add
add
inc
add
jns
add
add
jb
outs
jne
and
gs
je
outs
and
jae
gs
and
je
outs
outs
and
jns
gs
add
outs
fs
add
ins
ins
popa
outs
and
je
outs
outs
sub
arpl
arpl
bound
and
and
je
outs
outs
and
je
outs
outs
and
fs
popa
jo
imul
push
push
jo
imul
je
and
je
outs
outs
and
bound
jo
jo
and
jl
sub
imul
outs
and
gs
imul
add
add
inc
jo
gs
jb
outs
arpl
outs
inc
ins
imul
push
add
popa
jne
je
jne
jae
jb
add
add
add
dec
outs
jb
jp
outs
je
ins
and
imul
and
and
jo
imul
je
and
je
outs
outs
add
outs
push
je
ins
add
inc
ins
popa
je
and
bound
jae
and
and
addr16
jbe
and
data16
add
jo
add
add
inc
jne
je
ins
and
popa
jo
and
je
outs
outs
jae
outs
outs
ins
jns
and
jbe
jae
je
and
je
outs
outs
and
and
and
imul
arpl
imul
data16
add
outs
push
push
add
arpl
addr16
popa
jb
outs
jb
jbe
jb
outs
jne
and
outs
outs
popa
ins
and
popa
jo
jae
add
xor
lock
nop
fwait
dec
add
imul
push
popa
and
gs
imul
outs
outs
and
and
je
outs
outs
add
add
dec
ins
addr16
ins
imul
inc
ins
imul
and
and
and
je
outs
outs
and
popa
and
and
ins
popa
je
outs
outs
and
je
and
jo
imul
das
outs
jb
bound
je
outs
add
outs
popa
bound
add
add
inc
gs
jb
imul
and
outs
je
and
and
jb
and
jb
je
imul
outs
outs
add
inc
gs
jb
add
add
add
inc
ins
ins
outs
ja
and
and
gs
outs
je
and
outs
arpl
and
arpl
ins
and
outs
ins
and
imul
jo
popa
jns
fs
and
imul
gs
je
imul
popa
ins
ja
jns
and
and
jo
popa
jns
and
jb
bound
je
outs
and
je
popa
jae
inc
gs
jne
je
add
bound
ins
jne
add
inc
jo
ins
imul
je
and
ins
jns
arpl
arpl
bound
and
and
je
outs
outs
and
je
outs
outs
and
fs
and
and
and
ins
jae
add
outs
push
imul
popa
jb
outs
jne
and
jp
jae
outs
jb
imul
jne
gs
and
je
outs
outs
jae
and
je
xor
outs
jo
imul
outs
je
jb
imul
jne
outs
ins
popa
je
arpl
ins
jns
add
add
outs
push
outs
imul
add
push
popa
jb
outs
jne
and
je
outs
outs
popa
ins
and
jne
and
imul
je
and
and
outs
and
jne
and
and
gs
je
and
je
outs
outs
add
add
outs
dec
arpl
add
add
inc
jne
je
outs
add
add
inc
data16
fdiv
inc
add
xor
xchg
fwait
dec
add
popa
add
add
push
je
je
add
add
popa
inc
outs
jb
popa
je
add
outs
outs
and
and
jb
outs
jb
jne
gs
imul
ja
outs
and
jne
and
and
gs
je
and
je
outs
outs
and
jne
gs
outs
imul
jne
je
bound
jae
je
je
and
jae
outs
ins
add
add
xor
cwde
das
inc
add
inc
outs
outs
je
add
inc
outs
outs
je
jne
gs
imul
je
and
jo
imul
cmp
outs
je
add
push
popa
jb
outs
jne
and
outs
je
popa
je
jb
bound
gs
je
popa
je
arpl
and
and
popa
outs
gs
jb
arpl
add
add
outs
ins
outs
jb
add
and
ins
outs
jb
outs
data16
and
jo
imul
outs
outs
je
add
add
je
outs
outs
and
arpl
arpl
outs
jb
and
and
jae
and
jae
je
gs
jne
je
outs
ins
outs
jb
add
push
arpl
fs
jb
and
ins
outs
jb
jne
gs
jb
addr16
imul
popa
fs
and
and
arpl
outs
ins
outs
jb
jo
outs
jo
jb
jns
imul
jo
imul
outs
ins
outs
jb
add
push
popa
jb
outs
jne
and
arpl
outs
jae
je
and
ja
je
and
popa
imul
popa
imul
add
gs
jne
je
add
add
jae
je
and
je
outs
outs
daa
jae
bound
imul
outs
ins
outs
jb
popa
outs
and
je
arpl
outs
jb
je
and
outs
outs
ja
jae
jae
popa
outs
fs
jb
and
and
jbe
jb
jo
outs
jo
jb
imul
and
jae
and
jae
je
add
add
outs
dec
outs
arpl
add
inc
popa
outs
and
jae
jb
and
and
jbe
jb
arpl
outs
jb
and
je
push
and
jo
imul
and
arpl
arpl
outs
jb
and
imul
and
jb
and
je
outs
outs
jae
add
inc
outs
ins
outs
jb
outs
data16
je
outs
outs
and
jo
imul
gs
and
outs
and
jne
and
and
jbe
jb
outs
and
gs
imul
arpl
je
and
jbe
jb
outs
arpl
outs
ins
outs
jb
and
outs
jo
jb
jns
add
add
inc
outs
ins
outs
jb
outs
data16
je
outs
outs
and
arpl
jb
jne
and
outs
and
jne
and
and
jbe
jb
outs
and
gs
imul
arpl
je
and
jbe
jb
outs
arpl
outs
ins
outs
jb
and
outs
jo
jb
jns
add
add
bound
popa
jns
add
je
outs
outs
add
push
push
add
pop
add
add
add
dec
gs
outs
fs
jns
jae
imul
ins
ins
outs
ja
fs
data16
add
int3
int3
int3
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
xor
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
mov
push
mov
sub
push
push
push
mov
mov
mov
mov
and
mov
and
push
mov
mov
call
lea
xor
push
push
mov
mov
mov
mov
call
push
call
mov
call
mov
lea
push
push
mov
call
cmp
fnclex
jge
mov
mov
push
push
push
push
call
jmp
mov
cmp
jne
push
push
call
mov
lea
push
push
mov
call
cmp
fnclex
jge
push
push
push
push
call
mov
lea
push
push
mov
mov
call
cmp
fnclex
jge
push
push
push
push
call
fild
mov
fstp
fld
cmp
jne
fdiv
jmp
push
push
call
fmul
fld
cmp
jne
fdiv
jmp
push
call
fnstsw
test
jne
fsubrp
fnstsw
test
jne
call
lea
mov
call
push
call
mov
call
mov
lea
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
mov
test
jne
push
push
call
mov
lea
push
push
mov
call
test
fnclex
jge
push
push
push
push
call
mov
lea
push
push
mov
mov
call
test
fnclex
jge
push
push
push
push
call
fild
fstp
fld
cmp
jne
fdiv
jmp
push
push
call
fmul
fld
cmp
jne
fdiv
jmp
push
call
fnstsw
test
jne
fsubrp
fnstsw
test
jne
call
lea
mov
call
sub
mov
mov
mov
mov
sub
mov
mov
mov
mov
mov
mov
sub
mov
mov
mov
fild
mov
mov
mov
mov
fstp
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
push
call
test
fnclex
jge
mov
push
push
push
push
call
lea
push
push
call
mov
fwait
push
jmp
lea
call
ret
lea
call
ret
mov
push
mov
call
mov
mov
pop
pop
mov
pop
mov
pop
ret
jmp
nop
nop
nop
push
mov
sub
push
mov
push
mov
sub
push
push
push
mov
mov
mov
mov
and
mov
and
push
mov
mov
call
mov
push
mov
call
mov
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
push
push
push
push
call
mov
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
push
push
push
push
call
lea
call
mov
push
jmp
lea
call
ret
ret
mov
push
mov
call
mov
mov
pop
pop
mov
pop
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
mov
push
mov
sub
push
push
push
mov
mov
mov
mov
and
mov
and
push
mov
mov
call
mov
mov
push
mov
call
mov
mov
pop
pop
mov
pop
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
mov
push
mov
sub
push
push
push
mov
mov
mov
mov
and
mov
and
push
mov
mov
call
mov
test
jne
push
push
call
sub
mov
mov
mov
mov
sub
mov
mov
mov
mov
mov
mov
mov
push
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
test
fnclex
jge
push
push
push
push
call
mov
mov
push
mov
call
mov
mov
pop
pop
mov
pop
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
mov
push
mov
sub
push
push
push
mov
mov
mov
mov
and
mov
and
push
mov
mov
call
mov
push
mov
call
mov
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
push
push
push
push
call
mov
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
push
push
push
push
call
lea
call
mov
push
jmp
lea
call
ret
ret
mov
push
mov
call
mov
mov
pop
pop
mov
pop
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
mov
push
mov
sub
push
push
push
mov
mov
mov
mov
and
mov
and
push
mov
mov
call
mov
test
jne
push
push
call
sub
mov
mov
mov
mov
sub
mov
mov
mov
mov
mov
mov
mov
push
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
test
fnclex
jge
push
push
push
push
call
mov
mov
push
mov
call
mov
mov
pop
pop
mov
pop
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
mov
push
mov
sub
push
push
push
mov
mov
mov
mov
and
mov
and
push
mov
mov
call
mov
push
mov
call
mov
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
push
push
push
push
call
mov
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
push
push
push
push
call
lea
call
mov
push
jmp
lea
call
ret
ret
mov
push
mov
call
mov
mov
pop
pop
mov
pop
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
mov
push
mov
sub
push
push
push
mov
mov
mov
mov
and
mov
and
push
mov
mov
call
mov
test
jne
push
push
call
sub
mov
mov
mov
mov
sub
mov
mov
mov
mov
mov
mov
mov
push
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
test
fnclex
jge
push
push
push
push
call
mov
mov
push
mov
call
mov
mov
pop
pop
mov
pop
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
mov
push
mov
sub
push
push
push
mov
mov
mov
mov
and
mov
and
push
mov
mov
call
mov
push
mov
call
mov
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
push
push
push
push
call
mov
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
push
push
push
push
call
lea
call
mov
push
jmp
lea
call
ret
ret
mov
push
mov
call
mov
mov
pop
pop
mov
pop
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
mov
push
mov
sub
push
push
push
mov
mov
mov
mov
and
mov
and
push
mov
mov
call
mov
test
jne
push
push
call
sub
mov
mov
mov
mov
sub
mov
mov
mov
mov
mov
mov
mov
push
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
test
fnclex
jge
push
push
push
push
call
mov
mov
push
mov
call
mov
mov
pop
pop
mov
pop
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
mov
push
mov
sub
push
push
push
mov
mov
mov
mov
and
mov
and
push
mov
mov
call
mov
push
mov
call
mov
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
push
push
push
push
call
mov
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
push
push
push
push
call
lea
call
mov
push
jmp
lea
call
ret
ret
mov
push
mov
call
mov
mov
pop
pop
mov
pop
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
mov
push
mov
sub
push
push
push
mov
mov
mov
mov
and
mov
and
push
mov
mov
call
mov
test
jne
push
push
call
sub
mov
mov
mov
mov
sub
mov
mov
mov
mov
mov
mov
mov
push
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
test
fnclex
jge
push
push
push
push
call
mov
mov
push
mov
call
mov
mov
pop
pop
mov
pop
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
mov
push
mov
sub
push
push
push
mov
mov
mov
mov
and
mov
and
push
mov
mov
call
mov
push
mov
call
mov
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
push
push
push
push
call
mov
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
push
push
push
push
call
lea
call
mov
push
jmp
lea
call
ret
ret
mov
push
mov
call
mov
mov
pop
pop
mov
pop
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
mov
push
mov
sub
push
push
push
mov
mov
mov
mov
and
mov
and
push
mov
mov
call
mov
test
jne
push
push
call
sub
mov
mov
mov
mov
sub
mov
mov
mov
mov
mov
mov
mov
push
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
test
fnclex
jge
push
push
push
push
call
mov
mov
push
mov
call
mov
mov
pop
pop
mov
pop
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
mov
push
mov
sub
push
push
push
mov
mov
mov
mov
and
mov
and
push
mov
mov
call
mov
push
mov
call
mov
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
push
push
push
push
call
mov
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
push
push
push
push
call
lea
call
mov
push
jmp
lea
call
ret
ret
mov
push
mov
call
mov
mov
pop
pop
mov
pop
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
mov
push
mov
sub
push
push
push
mov
mov
mov
mov
and
mov
and
push
mov
mov
call
mov
test
jne
push
push
call
sub
mov
mov
mov
mov
sub
mov
mov
mov
mov
mov
mov
mov
push
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
test
fnclex
jge
push
push
push
push
call
mov
mov
push
mov
call
mov
mov
pop
pop
mov
pop
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
mov
push
mov
sub
push
push
push
mov
mov
mov
mov
and
mov
and
push
mov
mov
call
mov
push
mov
call
mov
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
push
push
push
push
call
mov
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
push
push
push
push
call
lea
call
mov
push
jmp
lea
call
ret
ret
mov
push
mov
call
mov
mov
pop
pop
mov
pop
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
mov
push
mov
sub
push
push
push
mov
mov
mov
mov
and
mov
and
push
mov
mov
call
mov
xor
mov
mov
cmp
mov
mov
mov
mov
mov
mov
mov
jne
mov
lea
push
push
call
cmp
fnclex
jge
push
push
push
push
call
mov
push
push
call
mov
lea
call
mov
lea
push
push
call
push
push
call
mov
lea
call
push
lea
push
call
push
lea
push
push
call
push
lea
push
push
call
push
mov
push
call
mov
call
lea
lea
mov
mov
call
lea
lea
push
lea
push
lea
push
lea
push
lea
push
push
push
call
add
mov
push
jmp
lea
lea
push
lea
push
lea
push
lea
push
lea
push
push
push
call
add
ret
lea
call
ret
mov
push
mov
call
mov
mov
pop
pop
mov
pop
mov
pop
ret
nop
nop
nop
nop
push
mov
sub
push
mov
push
mov
sub
push
push
push
mov
mov
mov
mov
test
jne
push
push
call
mov
mov
test
jne
push
push
call
mov
mov
lea
push
push
call
push
push
call
test
fnclex
jge
push
push
push
push
call
lea
call
push
jmp
lea
call
ret
ret
mov
pop
pop
xor
mov
pop
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
mov
push
mov
sub
push
push
push
mov
mov
mov
mov
and
mov
and
push
mov
mov
call
mov
test
jne
push
push
call
sub
mov
mov
mov
mov
sub
mov
mov
mov
mov
mov
mov
mov
push
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
test
fnclex
jge
push
push
push
push
call
mov
mov
push
mov
call
mov
mov
pop
pop
mov
pop
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
mov
push
mov
sub
push
push
push
mov
mov
mov
mov
and
mov
and
push
mov
mov
call
call
mov
mov
push
mov
call
mov
mov
pop
pop
mov
pop
mov
pop
ret
nop
nop
nop
nop
nop
push
mov
sub
push
mov
push
mov
sub
push
push
push
mov
mov
mov
mov
and
mov
and
push
mov
mov
call
mov
lea
xor
push
push
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
cmp
fnclex
jge
push
push
push
push
call
mov
push
push
call
mov
lea
call
mov
lea
push
push
call
push
push
call
mov
lea
call
lea
push
push
call
push
lea
push
push
call
push
lea
push
push
call
mov
push
push
call
mov
call
lea
lea
mov
mov
call
lea
lea
push
lea
push
lea
push
lea
push
lea
push
push
push
call
add
mov
push
jmp
lea
lea
push
lea
push
lea
push
lea
push
lea
push
push
push
call
add
ret
lea
call
ret
mov
push
mov
call
mov
mov
pop
pop
mov
pop
mov
pop
ret
nop
push
mov
sub
push
mov
push
mov
sub
push
push
push
mov
mov
mov
mov
and
mov
and
push
mov
mov
call
lea
xor
push
push
mov
mov
mov
mov
call
push
call
mov
call
mov
lea
push
push
mov
call
cmp
fnclex
jge
mov
mov
push
push
push
push
call
jmp
mov
cmp
jne
push
push
call
mov
lea
push
push
mov
call
cmp
fnclex
jge
push
push
push
push
call
mov
lea
push
push
mov
mov
call
cmp
fnclex
jge
push
push
push
push
call
fild
mov
fstp
fld
cmp
jne
fdiv
jmp
push
push
call
fmul
fld
cmp
jne
fdiv
jmp
push
call
fnstsw
test
jne
fsubrp
fnstsw
test
jne
call
lea
mov
call
push
call
mov
call
mov
lea
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
mov
test
jne
push
push
call
mov
lea
push
push
mov
call
test
fnclex
jge
push
push
push
push
call
mov
lea
push
push
mov
mov
call
test
fnclex
jge
push
push
push
push
call
fild
fstp
fld
cmp
jne
fdiv
jmp
push
push
call
fmul
fld
cmp
jne
fdiv
jmp
push
call
fnstsw
test
jne
fsubrp
fnstsw
test
jne
call
lea
mov
call
sub
mov
mov
mov
mov
sub
mov
mov
mov
mov
mov
mov
sub
mov
mov
mov
fild
mov
mov
mov
mov
fstp
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
push
call
test
fnclex
jge
mov
push
push
push
push
call
lea
push
push
call
mov
fwait
push
jmp
lea
call
ret
lea
call
ret
mov
push
mov
call
mov
mov
pop
pop
mov
pop
mov
pop
ret
jmp
nop
nop
nop
push
mov
sub
push
mov
push
mov
sub
push
push
push
mov
mov
mov
mov
and
mov
and
push
mov
mov
call
mov
push
mov
call
mov
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
push
push
push
push
call
mov
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
push
push
push
push
call
lea
call
mov
push
jmp
lea
call
ret
ret
mov
push
mov
call
mov
mov
pop
pop
mov
pop
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
mov
push
mov
sub
push
push
push
mov
mov
mov
mov
and
mov
and
push
mov
mov
call
mov
lea
xor
push
push
mov
mov
mov
mov
mov
mov
mov
mov
call
cmp
fnclex
jge
mov
push
push
push
push
call
jmp
mov
cmp
jne
push
push
call
mov
lea
push
push
mov
call
cmp
fnclex
jge
push
push
push
push
call
mov
lea
push
push
mov
mov
call
cmp
fnclex
jge
push
push
push
push
call
mov
push
lea
push
push
call
mov
push
push
mov
push
push
call
mov
mov
lea
call
push
push
call
mov
lea
call
lea
push
push
call
push
lea
push
push
call
mov
push
push
call
call
lea
lea
push
lea
push
lea
push
lea
push
lea
push
push
push
call
add
lea
call
mov
push
jmp
lea
lea
push
lea
push
lea
push
lea
push
lea
push
push
push
call
add
lea
call
ret
ret
mov
push
mov
call
mov
mov
pop
pop
mov
pop
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
mov
push
mov
sub
push
push
push
mov
mov
mov
mov
and
mov
and
push
mov
mov
call
mov
push
mov
call
mov
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
push
push
push
push
call
mov
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
push
push
push
push
call
lea
call
mov
push
jmp
lea
call
ret
ret
mov
push
mov
call
mov
mov
pop
pop
mov
pop
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
mov
push
mov
sub
push
push
push
mov
mov
mov
mov
and
mov
and
push
mov
mov
call
mov
push
mov
call
mov
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
push
push
push
push
call
mov
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
push
push
push
push
call
lea
call
mov
push
jmp
lea
call
ret
ret
mov
push
mov
call
mov
mov
pop
pop
mov
pop
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
mov
push
mov
sub
push
push
push
mov
mov
mov
mov
and
mov
and
push
mov
mov
call
mov
lea
xor
push
push
mov
mov
mov
mov
mov
mov
mov
mov
call
cmp
fnclex
jge
mov
push
push
push
push
call
jmp
mov
cmp
jne
push
push
call
mov
lea
push
push
mov
call
cmp
fnclex
jge
push
push
push
push
call
mov
lea
push
push
mov
mov
call
cmp
fnclex
jge
push
push
push
push
call
mov
push
lea
push
push
call
mov
push
push
mov
push
push
call
mov
mov
lea
call
push
push
call
mov
lea
call
lea
push
push
call
push
lea
push
push
call
mov
push
push
call
call
lea
lea
push
lea
push
lea
push
lea
push
lea
push
push
push
call
add
lea
call
mov
push
jmp
lea
lea
push
lea
push
lea
push
lea
push
lea
push
push
push
call
add
lea
call
ret
ret
mov
push
mov
call
mov
mov
pop
pop
mov
pop
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
mov
push
mov
sub
push
push
push
mov
mov
mov
mov
and
mov
and
push
mov
mov
call
mov
push
mov
call
mov
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
push
push
push
push
call
mov
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
push
push
push
push
call
lea
call
mov
push
jmp
lea
call
ret
ret
mov
push
mov
call
mov
mov
pop
pop
mov
pop
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
mov
push
mov
sub
push
push
push
mov
mov
mov
mov
and
mov
and
push
mov
mov
call
mov
xor
cmp
mov
jne
push
push
call
mov
lea
push
push
mov
mov
call
mov
push
push
call
cmp
fnclex
jge
push
push
push
push
call
lea
call
mov
push
jmp
lea
call
ret
ret
mov
push
mov
call
mov
mov
pop
pop
mov
pop
mov
pop
ret
nop
nop
push
mov
sub
push
mov
push
mov
sub
push
push
push
mov
mov
mov
mov
and
mov
and
push
mov
mov
call
mov
push
mov
call
mov
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
push
push
push
push
call
mov
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
push
push
push
push
call
lea
call
mov
push
jmp
lea
call
ret
ret
mov
push
mov
call
mov
mov
pop
pop
mov
pop
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
mov
push
mov
sub
push
push
push
mov
mov
mov
mov
and
mov
and
push
mov
mov
call
mov
lea
xor
push
push
mov
mov
mov
mov
mov
mov
mov
mov
call
cmp
fnclex
jge
mov
push
push
push
push
call
jmp
mov
cmp
jne
push
push
call
mov
lea
push
push
mov
call
cmp
fnclex
jge
push
push
push
push
call
mov
lea
push
push
mov
mov
call
cmp
fnclex
jge
push
push
push
push
call
mov
push
lea
push
push
call
mov
push
push
mov
push
push
call
mov
mov
lea
call
push
push
call
mov
lea
call
lea
push
push
call
push
lea
push
push
call
mov
push
push
call
call
lea
lea
push
lea
push
lea
push
lea
push
lea
push
push
push
call
add
lea
call
mov
push
jmp
lea
lea
push
lea
push
lea
push
lea
push
lea
push
push
push
call
add
lea
call
ret
ret
mov
push
mov
call
mov
mov
pop
pop
mov
pop
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
mov
push
mov
sub
push
push
push
mov
mov
mov
mov
and
mov
and
push
mov
mov
call
mov
push
mov
call
mov
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
push
push
push
push
call
mov
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
push
push
push
push
call
lea
call
mov
push
jmp
lea
call
ret
ret
mov
push
mov
call
mov
mov
pop
pop
mov
pop
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
mov
push
mov
sub
push
push
push
mov
mov
mov
mov
and
mov
and
push
mov
mov
call
mov
lea
xor
push
push
mov
mov
mov
mov
mov
mov
mov
mov
call
cmp
fnclex
jge
mov
push
push
push
push
call
jmp
mov
cmp
jne
push
push
call
mov
lea
push
push
mov
call
cmp
fnclex
jge
push
push
push
push
call
mov
lea
push
push
mov
mov
call
cmp
fnclex
jge
push
push
push
push
call
mov
push
lea
push
push
call
mov
push
push
mov
push
push
call
mov
mov
lea
call
push
push
call
mov
lea
call
lea
push
push
call
push
lea
push
push
call
mov
push
push
call
call
lea
lea
push
lea
push
lea
push
lea
push
lea
push
push
push
call
add
lea
call
mov
push
jmp
lea
lea
push
lea
push
lea
push
lea
push
lea
push
push
push
call
add
lea
call
ret
ret
mov
push
mov
call
mov
mov
pop
pop
mov
pop
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
mov
push
mov
sub
push
push
push
mov
mov
mov
mov
and
mov
and
push
mov
mov
call
mov
push
mov
call
mov
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
push
push
push
push
call
mov
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
push
push
push
push
call
lea
call
mov
push
jmp
lea
call
ret
ret
mov
push
mov
call
mov
mov
pop
pop
mov
pop
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
mov
push
mov
sub
push
push
push
mov
mov
mov
mov
and
mov
and
push
mov
mov
call
mov
lea
xor
push
push
mov
mov
mov
mov
mov
mov
mov
mov
call
cmp
fnclex
jge
mov
push
push
push
push
call
jmp
mov
cmp
jne
push
push
call
mov
lea
push
push
mov
call
cmp
fnclex
jge
push
push
push
push
call
mov
lea
push
push
mov
mov
call
cmp
fnclex
jge
push
push
push
push
call
mov
push
lea
push
push
call
mov
push
push
mov
push
push
call
mov
mov
lea
call
push
push
call
mov
lea
call
lea
push
push
call
push
lea
push
push
call
mov
push
push
call
call
lea
lea
push
lea
push
lea
push
lea
push
lea
push
push
push
call
add
lea
call
mov
push
jmp
lea
lea
push
lea
push
lea
push
lea
push
lea
push
push
push
call
add
lea
call
ret
ret
mov
push
mov
call
mov
mov
pop
pop
mov
pop
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
mov
push
mov
sub
push
push
push
mov
mov
mov
mov
and
mov
and
push
mov
mov
call
mov
push
mov
call
mov
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
push
push
push
push
call
mov
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
push
push
push
push
call
lea
call
mov
push
jmp
lea
call
ret
ret
mov
push
mov
call
mov
mov
pop
pop
mov
pop
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
mov
push
mov
sub
push
push
push
mov
mov
mov
mov
and
mov
and
push
mov
mov
call
lea
xor
push
push
mov
mov
mov
mov
call
push
call
mov
call
mov
lea
push
push
mov
call
cmp
fnclex
jge
mov
mov
push
push
push
push
call
jmp
mov
cmp
jne
push
push
call
mov
lea
push
push
mov
call
cmp
fnclex
jge
push
push
push
push
call
mov
lea
push
push
mov
mov
call
cmp
fnclex
jge
push
push
push
push
call
fild
mov
fstp
fld
cmp
jne
fdiv
jmp
push
push
call
fmul
fld
cmp
jne
fdiv
jmp
push
call
fnstsw
test
jne
fsubrp
fnstsw
test
jne
call
lea
mov
call
push
call
mov
call
mov
lea
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
mov
test
jne
push
push
call
mov
lea
push
push
mov
call
test
fnclex
jge
push
push
push
push
call
mov
lea
push
push
mov
mov
call
test
fnclex
jge
push
push
push
push
call
fild
fstp
fld
cmp
jne
fdiv
jmp
push
push
call
fmul
fld
cmp
jne
fdiv
jmp
push
call
fnstsw
test
jne
fsubrp
fnstsw
test
jne
call
lea
mov
call
sub
mov
mov
mov
mov
sub
mov
mov
mov
mov
mov
mov
sub
mov
mov
mov
fild
mov
mov
mov
mov
fstp
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
push
call
test
fnclex
jge
mov
push
push
push
push
call
lea
push
push
call
mov
fwait
push
jmp
lea
call
ret
lea
call
ret
mov
push
mov
call
mov
mov
pop
pop
mov
pop
mov
pop
ret
jmp
nop
nop
nop
push
mov
sub
push
mov
push
mov
sub
push
push
push
mov
mov
mov
mov
and
mov
and
push
mov
mov
call
mov
push
mov
call
mov
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
push
push
push
push
call
mov
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
push
push
push
push
call
lea
call
mov
push
jmp
lea
call
ret
ret
mov
push
mov
call
mov
mov
pop
pop
mov
pop
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
mov
push
mov
sub
push
push
push
mov
mov
mov
mov
and
mov
and
push
mov
mov
call
mov
lea
xor
push
push
mov
mov
mov
mov
mov
mov
mov
mov
call
cmp
fnclex
jge
mov
push
push
push
push
call
jmp
mov
cmp
jne
push
push
call
mov
lea
push
push
mov
call
cmp
fnclex
jge
push
push
push
push
call
mov
lea
push
push
mov
mov
call
cmp
fnclex
jge
push
push
push
push
call
mov
push
lea
push
push
call
mov
push
push
mov
push
push
call
mov
mov
lea
call
push
push
call
mov
lea
call
lea
push
push
call
push
lea
push
push
call
mov
push
push
call
call
lea
lea
push
lea
push
lea
push
lea
push
lea
push
push
push
call
add
lea
call
mov
push
jmp
lea
lea
push
lea
push
lea
push
lea
push
lea
push
push
push
call
add
lea
call
ret
ret
mov
push
mov
call
mov
mov
pop
pop
mov
pop
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
mov
push
mov
sub
push
push
push
mov
mov
mov
mov
and
mov
and
push
mov
mov
call
mov
push
mov
call
mov
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
push
push
push
push
call
mov
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
push
push
push
push
call
lea
call
mov
push
jmp
lea
call
ret
ret
mov
push
mov
call
mov
mov
pop
pop
mov
pop
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
mov
push
mov
sub
push
push
push
mov
mov
mov
mov
and
mov
and
push
mov
mov
call
mov
push
mov
call
mov
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
push
push
push
push
call
mov
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
push
push
push
push
call
lea
call
mov
push
jmp
lea
call
ret
ret
mov
push
mov
call
mov
mov
pop
pop
mov
pop
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
mov
push
mov
sub
push
push
push
mov
mov
mov
mov
and
mov
and
push
mov
mov
call
mov
lea
xor
push
push
mov
mov
mov
mov
mov
mov
mov
mov
call
cmp
fnclex
jge
mov
push
push
push
push
call
jmp
mov
cmp
jne
push
push
call
mov
lea
push
push
mov
call
cmp
fnclex
jge
push
push
push
push
call
mov
lea
push
push
mov
mov
call
cmp
fnclex
jge
push
push
push
push
call
mov
push
lea
push
push
call
mov
push
push
mov
push
push
call
mov
mov
lea
call
push
push
call
mov
lea
call
lea
push
push
call
push
lea
push
push
call
mov
push
push
call
call
lea
lea
push
lea
push
lea
push
lea
push
lea
push
push
push
call
add
lea
call
mov
push
jmp
lea
lea
push
lea
push
lea
push
lea
push
lea
push
push
push
call
add
lea
call
ret
ret
mov
push
mov
call
mov
mov
pop
pop
mov
pop
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
mov
push
mov
sub
push
push
push
mov
mov
mov
mov
and
mov
and
push
mov
mov
call
mov
push
mov
call
mov
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
push
push
push
push
call
mov
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
push
push
push
push
call
lea
call
mov
push
jmp
lea
call
ret
ret
mov
push
mov
call
mov
mov
pop
pop
mov
pop
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
mov
push
mov
sub
push
push
push
mov
mov
mov
mov
and
mov
and
push
mov
mov
call
mov
xor
cmp
mov
jne
push
push
call
mov
lea
push
push
mov
mov
call
mov
push
push
call
cmp
fnclex
jge
push
push
push
push
call
lea
call
mov
push
jmp
lea
call
ret
ret
mov
push
mov
call
mov
mov
pop
pop
mov
pop
mov
pop
ret
nop
nop
push
mov
sub
push
mov
push
mov
sub
push
push
push
mov
mov
mov
mov
and
mov
and
push
mov
mov
call
mov
push
mov
call
mov
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
push
push
push
push
call
mov
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
push
push
push
push
call
lea
call
mov
push
jmp
lea
call
ret
ret
mov
push
mov
call
mov
mov
pop
pop
mov
pop
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
mov
push
mov
sub
push
push
push
mov
mov
mov
mov
and
mov
and
push
mov
mov
call
mov
lea
xor
push
push
mov
mov
mov
mov
mov
mov
mov
mov
call
cmp
fnclex
jge
mov
push
push
push
push
call
jmp
mov
cmp
jne
push
push
call
mov
lea
push
push
mov
call
cmp
fnclex
jge
push
push
push
push
call
mov
lea
push
push
mov
mov
call
cmp
fnclex
jge
push
push
push
push
call
mov
push
lea
push
push
call
mov
push
push
mov
push
push
call
mov
mov
lea
call
push
push
call
mov
lea
call
lea
push
push
call
push
lea
push
push
call
mov
push
push
call
call
lea
lea
push
lea
push
lea
push
lea
push
lea
push
push
push
call
add
lea
call
mov
push
jmp
lea
lea
push
lea
push
lea
push
lea
push
lea
push
push
push
call
add
lea
call
ret
ret
mov
push
mov
call
mov
mov
pop
pop
mov
pop
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
mov
push
mov
sub
push
push
push
mov
mov
mov
mov
and
mov
and
push
mov
mov
call
mov
push
mov
call
mov
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
push
push
push
push
call
mov
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
push
push
push
push
call
lea
call
mov
push
jmp
lea
call
ret
ret
mov
push
mov
call
mov
mov
pop
pop
mov
pop
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
mov
push
mov
sub
push
push
push
mov
mov
mov
mov
and
mov
and
push
mov
mov
call
mov
push
mov
call
mov
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
push
push
push
push
call
mov
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
push
push
push
push
call
lea
call
mov
push
jmp
lea
call
ret
ret
mov
push
mov
call
mov
mov
pop
pop
mov
pop
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
mov
push
mov
sub
push
push
push
mov
mov
mov
mov
and
mov
and
push
mov
mov
call
mov
lea
xor
push
push
mov
mov
mov
mov
mov
mov
mov
mov
call
cmp
fnclex
jge
mov
push
push
push
push
call
jmp
mov
cmp
jne
push
push
call
mov
lea
push
push
mov
call
cmp
fnclex
jge
push
push
push
push
call
mov
lea
push
push
mov
mov
call
cmp
fnclex
jge
push
push
push
push
call
mov
push
lea
push
push
call
mov
push
push
mov
push
push
call
mov
mov
lea
call
push
push
call
mov
lea
call
lea
push
push
call
push
lea
push
push
call
mov
push
push
call
call
lea
lea
push
lea
push
lea
push
lea
push
lea
push
push
push
call
add
lea
call
mov
push
jmp
lea
lea
push
lea
push
lea
push
lea
push
lea
push
push
push
call
add
lea
call
ret
ret
mov
push
mov
call
mov
mov
pop
pop
mov
pop
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
mov
push
mov
sub
push
push
push
mov
mov
mov
mov
and
mov
and
push
mov
mov
call
mov
push
mov
call
mov
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
push
push
push
push
call
mov
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
push
push
push
push
call
lea
call
mov
push
jmp
lea
call
ret
ret
mov
push
mov
call
mov
mov
pop
pop
mov
pop
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
mov
push
mov
sub
push
push
push
mov
mov
mov
mov
and
mov
and
push
mov
mov
call
mov
lea
xor
push
push
mov
mov
mov
mov
mov
mov
mov
mov
call
cmp
fnclex
jge
mov
push
push
push
push
call
jmp
mov
cmp
jne
push
push
call
mov
lea
push
push
mov
call
cmp
fnclex
jge
push
push
push
push
call
mov
lea
push
push
mov
mov
call
cmp
fnclex
jge
push
push
push
push
call
mov
push
lea
push
push
call
mov
push
push
mov
push
push
call
mov
mov
lea
call
push
push
call
mov
lea
call
lea
push
push
call
push
lea
push
push
call
mov
push
push
call
call
lea
lea
push
lea
push
lea
push
lea
push
lea
push
push
push
call
add
lea
call
mov
push
jmp
lea
lea
push
lea
push
lea
push
lea
push
lea
push
push
push
call
add
lea
call
ret
ret
mov
push
mov
call
mov
mov
pop
pop
mov
pop
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
mov
push
mov
sub
push
push
push
mov
mov
mov
mov
and
mov
and
push
mov
mov
call
mov
push
mov
call
mov
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
push
push
push
push
call
mov
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
push
push
push
push
call
lea
call
mov
push
jmp
lea
call
ret
ret
mov
push
mov
call
mov
mov
pop
pop
mov
pop
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
mov
push
mov
sub
push
push
push
mov
mov
mov
mov
and
mov
and
push
mov
mov
call
mov
lea
xor
push
push
mov
mov
mov
mov
mov
mov
mov
mov
call
cmp
fnclex
jge
mov
push
push
push
push
call
jmp
mov
cmp
jne
push
push
call
mov
lea
push
push
mov
call
cmp
fnclex
jge
push
push
push
push
call
mov
lea
push
push
mov
mov
call
cmp
fnclex
jge
push
push
push
push
call
mov
push
lea
push
push
call
mov
push
push
mov
push
push
call
mov
mov
lea
call
push
push
call
mov
lea
call
lea
push
push
call
push
lea
push
push
call
mov
push
push
call
call
lea
lea
push
lea
push
lea
push
lea
push
lea
push
push
push
call
add
lea
call
mov
push
jmp
lea
lea
push
lea
push
lea
push
lea
push
lea
push
push
push
call
add
lea
call
ret
ret
mov
push
mov
call
mov
mov
pop
pop
mov
pop
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
mov
push
mov
sub
push
push
push
mov
mov
mov
mov
and
mov
and
push
mov
mov
call
mov
push
mov
call
mov
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
push
push
push
push
call
mov
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
push
push
push
push
call
lea
call
mov
push
jmp
lea
call
ret
ret
mov
push
mov
call
mov
mov
pop
pop
mov
pop
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
mov
push
mov
sub
push
push
push
mov
mov
mov
mov
and
mov
and
push
mov
mov
call
mov
lea
xor
push
push
mov
mov
mov
mov
mov
mov
mov
mov
call
cmp
fnclex
jge
mov
push
push
push
push
call
jmp
mov
cmp
jne
push
push
call
mov
lea
push
push
mov
call
cmp
fnclex
jge
push
push
push
push
call
mov
lea
push
push
mov
mov
call
cmp
fnclex
jge
push
push
push
push
call
mov
push
lea
push
push
call
mov
push
push
mov
push
push
call
mov
mov
lea
call
push
push
call
mov
lea
call
lea
push
push
call
push
lea
push
push
call
mov
push
push
call
call
lea
lea
push
lea
push
lea
push
lea
push
lea
push
push
push
call
add
lea
call
mov
push
jmp
lea
lea
push
lea
push
lea
push
lea
push
lea
push
push
push
call
add
lea
call
ret
ret
mov
push
mov
call
mov
mov
pop
pop
mov
pop
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
mov
push
mov
sub
push
push
push
mov
mov
mov
mov
and
mov
and
push
mov
mov
call
mov
push
mov
call
mov
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
push
push
push
push
call
mov
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
push
push
push
push
call
lea
call
mov
push
jmp
lea
call
ret
ret
mov
push
mov
call
mov
mov
pop
pop
mov
pop
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
mov
push
mov
sub
push
push
push
mov
mov
mov
mov
and
mov
and
push
mov
mov
call
mov
xor
mov
mov
cmp
mov
mov
mov
mov
mov
mov
mov
jne
mov
lea
push
push
call
cmp
fnclex
jge
push
push
push
push
call
mov
push
push
call
mov
lea
call
mov
lea
push
push
call
push
push
call
mov
lea
call
push
lea
push
call
push
lea
push
push
call
push
lea
push
push
call
push
mov
push
call
mov
call
lea
lea
mov
mov
call
lea
lea
push
lea
push
lea
push
lea
push
lea
push
push
push
call
add
mov
push
jmp
lea
lea
push
lea
push
lea
push
lea
push
lea
push
push
push
call
add
ret
lea
call
ret
mov
push
mov
call
mov
mov
pop
pop
mov
pop
mov
pop
ret
nop
nop
nop
nop
push
mov
sub
push
mov
push
mov
sub
push
push
push
mov
mov
mov
mov
and
mov
and
push
mov
mov
call
lea
xor
push
push
mov
mov
mov
mov
call
push
call
mov
call
mov
lea
push
push
mov
call
cmp
fnclex
jge
mov
mov
push
push
push
push
call
jmp
mov
cmp
jne
push
push
call
mov
lea
push
push
mov
call
cmp
fnclex
jge
push
push
push
push
call
mov
lea
push
push
mov
mov
call
cmp
fnclex
jge
push
push
push
push
call
fild
mov
fstp
fld
cmp
jne
fdiv
jmp
push
push
call
fmul
fld
cmp
jne
fdiv
jmp
push
call
fnstsw
test
jne
fsubrp
fnstsw
test
jne
call
lea
mov
call
push
call
mov
call
mov
lea
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
mov
test
jne
push
push
call
mov
lea
push
push
mov
call
test
fnclex
jge
push
push
push
push
call
mov
lea
push
push
mov
mov
call
test
fnclex
jge
push
push
push
push
call
fild
fstp
fld
cmp
jne
fdiv
jmp
push
push
call
fmul
fld
cmp
jne
fdiv
jmp
push
call
fnstsw
test
jne
fsubrp
fnstsw
test
jne
call
lea
mov
call
sub
mov
mov
mov
mov
sub
mov
mov
mov
mov
mov
mov
sub
mov
mov
mov
fild
mov
mov
mov
mov
fstp
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
push
call
test
fnclex
jge
mov
push
push
push
push
call
lea
push
push
call
mov
fwait
push
jmp
lea
call
ret
lea
call
ret
mov
push
mov
call
mov
mov
pop
pop
mov
pop
mov
pop
ret
jmp
nop
nop
nop
push
mov
sub
push
mov
push
mov
sub
push
push
push
mov
mov
mov
mov
and
mov
and
push
mov
mov
call
mov
push
mov
call
mov
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
push
push
push
push
call
mov
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
push
push
push
push
call
lea
call
mov
push
jmp
lea
call
ret
ret
mov
push
mov
call
mov
mov
pop
pop
mov
pop
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
mov
push
mov
sub
push
push
push
mov
mov
mov
mov
and
mov
and
push
mov
mov
call
mov
lea
xor
push
push
mov
mov
mov
mov
mov
mov
mov
mov
call
cmp
fnclex
jge
mov
push
push
push
push
call
jmp
mov
cmp
jne
push
push
call
mov
lea
push
push
mov
call
cmp
fnclex
jge
push
push
push
push
call
mov
lea
push
push
mov
mov
call
cmp
fnclex
jge
push
push
push
push
call
mov
push
lea
push
push
call
mov
push
push
mov
push
push
call
mov
mov
lea
call
push
push
call
mov
lea
call
lea
push
push
call
push
lea
push
push
call
mov
push
push
call
call
lea
lea
push
lea
push
lea
push
lea
push
lea
push
push
push
call
add
lea
call
mov
push
jmp
lea
lea
push
lea
push
lea
push
lea
push
lea
push
push
push
call
add
lea
call
ret
ret
mov
push
mov
call
mov
mov
pop
pop
mov
pop
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
mov
push
mov
sub
push
push
push
mov
mov
mov
mov
and
mov
and
push
mov
mov
call
mov
push
mov
call
mov
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
push
push
push
push
call
mov
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
push
push
push
push
call
lea
call
mov
push
jmp
lea
call
ret
ret
mov
push
mov
call
mov
mov
pop
pop
mov
pop
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
mov
push
mov
sub
push
push
push
mov
mov
mov
mov
and
mov
and
push
mov
mov
call
mov
lea
xor
push
push
mov
mov
mov
mov
mov
mov
mov
mov
call
cmp
fnclex
jge
mov
push
push
push
push
call
jmp
mov
cmp
jne
push
push
call
mov
lea
push
push
mov
call
cmp
fnclex
jge
push
push
push
push
call
mov
lea
push
push
mov
mov
call
cmp
fnclex
jge
push
push
push
push
call
mov
push
lea
push
push
call
mov
push
push
mov
push
push
call
mov
mov
lea
call
push
push
call
mov
lea
call
lea
push
push
call
push
lea
push
push
call
mov
push
push
call
call
lea
lea
push
lea
push
lea
push
lea
push
lea
push
push
push
call
add
lea
call
mov
push
jmp
lea
lea
push
lea
push
lea
push
lea
push
lea
push
push
push
call
add
lea
call
ret
ret
mov
push
mov
call
mov
mov
pop
pop
mov
pop
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
mov
push
mov
sub
push
push
push
mov
mov
mov
mov
and
mov
and
push
mov
mov
call
mov
push
mov
call
mov
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
push
push
push
push
call
mov
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
push
push
push
push
call
lea
call
mov
push
jmp
lea
call
ret
ret
mov
push
mov
call
mov
mov
pop
pop
mov
pop
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
mov
push
mov
sub
push
push
push
mov
mov
mov
mov
and
mov
and
push
mov
mov
call
mov
lea
xor
push
push
mov
mov
mov
mov
mov
mov
mov
mov
call
cmp
fnclex
jge
mov
push
push
push
push
call
jmp
mov
cmp
jne
push
push
call
mov
lea
push
push
mov
call
cmp
fnclex
jge
push
push
push
push
call
mov
lea
push
push
mov
mov
call
cmp
fnclex
jge
push
push
push
push
call
mov
push
lea
push
push
call
mov
push
push
mov
push
push
call
mov
mov
lea
call
push
push
call
mov
lea
call
lea
push
push
call
push
lea
push
push
call
mov
push
push
call
call
lea
lea
push
lea
push
lea
push
lea
push
lea
push
push
push
call
add
lea
call
mov
push
jmp
lea
lea
push
lea
push
lea
push
lea
push
lea
push
push
push
call
add
lea
call
ret
ret
mov
push
mov
call
mov
mov
pop
pop
mov
pop
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
mov
push
mov
sub
push
push
push
mov
mov
mov
mov
and
mov
and
push
mov
mov
call
mov
push
mov
call
mov
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
push
push
push
push
call
mov
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
push
push
push
push
call
lea
call
mov
push
jmp
lea
call
ret
ret
mov
push
mov
call
mov
mov
pop
pop
mov
pop
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
mov
push
mov
sub
push
push
push
mov
mov
mov
mov
and
mov
and
push
mov
mov
call
mov
lea
xor
push
push
mov
mov
mov
mov
mov
mov
mov
mov
call
cmp
fnclex
jge
mov
push
push
push
push
call
jmp
mov
cmp
jne
push
push
call
mov
lea
push
push
mov
call
cmp
fnclex
jge
push
push
push
push
call
mov
lea
push
push
mov
mov
call
cmp
fnclex
jge
push
push
push
push
call
mov
push
lea
push
push
call
mov
push
push
mov
push
push
call
mov
mov
lea
call
push
push
call
mov
lea
call
lea
push
push
call
push
lea
push
push
call
mov
push
push
call
call
lea
lea
push
lea
push
lea
push
lea
push
lea
push
push
push
call
add
lea
call
mov
push
jmp
lea
lea
push
lea
push
lea
push
lea
push
lea
push
push
push
call
add
lea
call
ret
ret
mov
push
mov
call
mov
mov
pop
pop
mov
pop
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
mov
push
mov
sub
push
push
push
mov
mov
mov
mov
and
mov
and
push
mov
mov
call
mov
push
mov
call
mov
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
push
push
push
push
call
mov
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
push
push
push
push
call
lea
call
mov
push
jmp
lea
call
ret
ret
mov
push
mov
call
mov
mov
pop
pop
mov
pop
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
mov
push
mov
sub
push
push
push
mov
mov
mov
mov
and
mov
and
push
mov
mov
call
mov
push
mov
call
mov
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
push
push
push
push
call
mov
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
push
push
push
push
call
lea
call
mov
push
jmp
lea
call
ret
ret
mov
push
mov
call
mov
mov
pop
pop
mov
pop
mov
pop
ret
nop
nop
nop
push
mov
sub
push
mov
push
mov
sub
push
push
push
mov
mov
mov
mov
and
mov
and
push
mov
mov
call
mov
lea
xor
push
push
mov
mov
mov
mov
mov
mov
mov
mov
call
cmp
fnclex
jge
mov
push
push
push
push
call
jmp
mov
cmp
jne
push
push
call
mov
lea
push
push
mov
call
cmp
fnclex
jge
push
push
push
push
call
mov
lea
push
push
mov
mov
call
cmp
fnclex
jge
push
push
push
push
call
mov
push
lea
push
push
call
mov
push
push
mov
push
push
call
mov
mov
lea
call
push
push
call
mov
lea
call
lea
push
push
call
push
lea
push
push
call
mov
push
push
call
call
lea
lea
push
lea
push
lea
push
lea
push
lea
push
push
push
call
add
lea
call
mov
push
jmp
lea
lea
push
lea
push
lea
push
lea
push
lea
push
push
push
call
add
lea
call
ret
ret
mov
push
mov
call
mov
mov
pop
pop
mov
pop
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
mov
push
mov
sub
push
push
push
mov
mov
mov
mov
and
mov
and
push
mov
mov
call
mov
push
mov
call
mov
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
push
push
push
push
call
mov
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
push
push
push
push
call
lea
call
mov
push
jmp
lea
call
ret
ret
mov
push
mov
call
mov
mov
pop
pop
mov
pop
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
mov
push
mov
sub
push
push
push
mov
mov
mov
mov
and
mov
and
push
mov
mov
call
mov
xor
cmp
mov
jne
push
push
call
mov
lea
push
push
mov
mov
call
mov
push
push
call
cmp
fnclex
jge
push
push
push
push
call
lea
call
mov
push
jmp
lea
call
ret
ret
mov
push
mov
call
mov
mov
pop
pop
mov
pop
mov
pop
ret
nop
nop
push
mov
sub
push
mov
push
mov
sub
push
push
push
mov
mov
mov
mov
and
mov
and
push
mov
mov
call
mov
push
mov
call
mov
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
push
push
push
push
call
mov
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
push
push
push
push
call
lea
call
mov
push
jmp
lea
call
ret
ret
mov
push
mov
call
mov
mov
pop
pop
mov
pop
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
mov
push
mov
sub
push
push
push
mov
mov
mov
mov
and
mov
and
push
mov
mov
call
mov
push
mov
call
mov
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
push
push
push
push
call
mov
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
push
push
push
push
call
lea
call
mov
push
jmp
lea
call
ret
ret
mov
push
mov
call
mov
mov
pop
pop
mov
pop
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
mov
push
mov
sub
push
push
push
mov
mov
mov
mov
and
mov
and
push
mov
mov
call
mov
lea
xor
push
push
mov
mov
mov
mov
mov
mov
mov
mov
call
cmp
fnclex
jge
mov
push
push
push
push
call
jmp
mov
cmp
jne
push
push
call
mov
lea
push
push
mov
call
cmp
fnclex
jge
push
push
push
push
call
mov
lea
push
push
mov
mov
call
cmp
fnclex
jge
push
push
push
push
call
mov
push
lea
push
push
call
mov
push
push
mov
push
push
call
mov
mov
lea
call
push
push
call
mov
lea
call
lea
push
push
call
push
lea
push
push
call
mov
push
push
call
call
lea
lea
push
lea
push
lea
push
lea
push
lea
push
push
push
call
add
lea
call
mov
push
jmp
lea
lea
push
lea
push
lea
push
lea
push
lea
push
push
push
call
add
lea
call
ret
ret
mov
push
mov
call
mov
mov
pop
pop
mov
pop
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
mov
push
mov
sub
push
push
push
mov
mov
mov
mov
and
mov
and
push
mov
mov
call
mov
push
mov
call
mov
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
push
push
push
push
call
mov
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
push
push
push
push
call
lea
call
mov
push
jmp
lea
call
ret
ret
mov
push
mov
call
mov
mov
pop
pop
mov
pop
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
mov
push
mov
sub
push
push
push
mov
mov
mov
mov
and
mov
and
push
mov
mov
call
mov
lea
xor
push
push
mov
mov
mov
mov
mov
mov
mov
mov
call
cmp
fnclex
jge
mov
push
push
push
push
call
jmp
mov
cmp
jne
push
push
call
mov
lea
push
push
mov
call
cmp
fnclex
jge
push
push
push
push
call
mov
lea
push
push
mov
mov
call
cmp
fnclex
jge
push
push
push
push
call
mov
push
lea
push
push
call
mov
push
push
mov
push
push
call
mov
mov
lea
call
push
push
call
mov
lea
call
lea
push
push
call
push
lea
push
push
call
mov
push
push
call
call
lea
lea
push
lea
push
lea
push
lea
push
lea
push
push
push
call
add
lea
call
mov
push
jmp
lea
lea
push
lea
push
lea
push
lea
push
lea
push
push
push
call
add
lea
call
ret
ret
mov
push
mov
call
mov
mov
pop
pop
mov
pop
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
mov
push
mov
sub
push
push
push
mov
mov
mov
mov
and
mov
and
push
mov
mov
call
mov
push
mov
call
mov
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
push
push
push
push
call
mov
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
push
push
push
push
call
lea
call
mov
push
jmp
lea
call
ret
ret
mov
push
mov
call
mov
mov
pop
pop
mov
pop
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
mov
push
mov
sub
push
push
push
mov
mov
mov
mov
and
mov
and
push
mov
mov
call
mov
lea
xor
push
push
mov
mov
mov
mov
mov
mov
mov
mov
call
cmp
fnclex
jge
mov
push
push
push
push
call
jmp
mov
cmp
jne
push
push
call
mov
lea
push
push
mov
call
cmp
fnclex
jge
push
push
push
push
call
mov
lea
push
push
mov
mov
call
cmp
fnclex
jge
push
push
push
push
call
mov
push
lea
push
push
call
mov
push
push
mov
push
push
call
mov
mov
lea
call
push
push
call
mov
lea
call
lea
push
push
call
push
lea
push
push
call
mov
push
push
call
call
lea
lea
push
lea
push
lea
push
lea
push
lea
push
push
push
call
add
lea
call
mov
push
jmp
lea
lea
push
lea
push
lea
push
lea
push
lea
push
push
push
call
add
lea
call
ret
ret
mov
push
mov
call
mov
mov
pop
pop
mov
pop
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
mov
push
mov
sub
push
push
push
mov
mov
mov
mov
and
mov
and
push
mov
mov
call
mov
push
mov
call
mov
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
push
push
push
push
call
mov
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
push
push
push
push
call
lea
call
mov
push
jmp
lea
call
ret
ret
mov
push
mov
call
mov
mov
pop
pop
mov
pop
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
mov
push
mov
sub
push
push
push
mov
mov
mov
mov
and
mov
and
push
mov
mov
call
mov
lea
xor
push
push
mov
mov
mov
mov
mov
mov
mov
mov
call
cmp
fnclex
jge
mov
push
push
push
push
call
jmp
mov
cmp
jne
push
push
call
mov
lea
push
push
mov
call
cmp
fnclex
jge
push
push
push
push
call
mov
lea
push
push
mov
mov
call
cmp
fnclex
jge
push
push
push
push
call
mov
push
lea
push
push
call
mov
push
push
mov
push
push
call
mov
mov
lea
call
push
push
call
mov
lea
call
lea
push
push
call
push
lea
push
push
call
mov
push
push
call
call
lea
lea
push
lea
push
lea
push
lea
push
lea
push
push
push
call
add
lea
call
mov
push
jmp
lea
lea
push
lea
push
lea
push
lea
push
lea
push
push
push
call
add
lea
call
ret
ret
mov
push
mov
call
mov
mov
pop
pop
mov
pop
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
mov
push
mov
sub
push
push
push
mov
mov
mov
mov
and
mov
and
push
mov
mov
call
mov
push
mov
call
mov
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
push
push
push
push
call
mov
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
push
push
push
push
call
lea
call
mov
push
jmp
lea
call
ret
ret
mov
push
mov
call
mov
mov
pop
pop
mov
pop
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
mov
push
mov
sub
push
push
push
mov
mov
mov
mov
and
mov
and
push
mov
mov
call
mov
lea
xor
push
push
mov
mov
mov
mov
mov
mov
mov
mov
call
cmp
fnclex
jge
mov
push
push
push
push
call
jmp
mov
cmp
jne
push
push
call
mov
lea
push
push
mov
call
cmp
fnclex
jge
push
push
push
push
call
mov
lea
push
push
mov
mov
call
cmp
fnclex
jge
push
push
push
push
call
mov
push
lea
push
push
call
mov
push
push
mov
push
push
call
mov
mov
lea
call
push
push
call
mov
lea
call
lea
push
push
call
push
lea
push
push
call
mov
push
push
call
call
lea
lea
push
lea
push
lea
push
lea
push
lea
push
push
push
call
add
lea
call
mov
push
jmp
lea
lea
push
lea
push
lea
push
lea
push
lea
push
push
push
call
add
lea
call
ret
ret
mov
push
mov
call
mov
mov
pop
pop
mov
pop
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
mov
push
mov
sub
push
push
push
mov
mov
mov
mov
and
mov
and
push
mov
mov
call
mov
push
mov
call
mov
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
push
push
push
push
call
mov
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
push
push
push
push
call
lea
call
mov
push
jmp
lea
call
ret
ret
mov
push
mov
call
mov
mov
pop
pop
mov
pop
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
mov
push
mov
sub
push
push
push
mov
mov
mov
mov
and
mov
and
push
mov
mov
call
mov
xor
mov
mov
cmp
mov
mov
mov
mov
mov
mov
mov
jne
mov
lea
push
push
call
cmp
fnclex
jge
push
push
push
push
call
mov
push
push
call
mov
lea
call
mov
lea
push
push
call
push
push
call
mov
lea
call
push
lea
push
call
push
lea
push
push
call
push
lea
push
push
call
push
mov
push
call
mov
call
lea
lea
mov
mov
call
lea
lea
push
lea
push
lea
push
lea
push
lea
push
push
push
call
add
mov
push
jmp
lea
lea
push
lea
push
lea
push
lea
push
lea
push
push
push
call
add
ret
lea
call
ret
mov
push
mov
call
mov
mov
pop
pop
mov
pop
mov
pop
ret
nop
nop
nop
nop
push
mov
sub
push
mov
push
mov
sub
push
push
push
mov
mov
mov
mov
and
mov
and
push
mov
mov
call
lea
xor
push
push
mov
mov
mov
mov
call
push
call
mov
call
mov
lea
push
push
mov
call
cmp
fnclex
jge
mov
mov
push
push
push
push
call
jmp
mov
cmp
jne
push
push
call
mov
lea
push
push
mov
call
cmp
fnclex
jge
push
push
push
push
call
mov
lea
push
push
mov
mov
call
cmp
fnclex
jge
push
push
push
push
call
fild
mov
fstp
fld
cmp
jne
fdiv
jmp
push
push
call
fmul
fld
cmp
jne
fdiv
jmp
push
call
fnstsw
test
jne
fsubrp
fnstsw
test
jne
call
lea
mov
call
push
call
mov
call
mov
lea
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
mov
test
jne
push
push
call
mov
lea
push
push
mov
call
test
fnclex
jge
push
push
push
push
call
mov
lea
push
push
mov
mov
call
test
fnclex
jge
push
push
push
push
call
fild
fstp
fld
cmp
jne
fdiv
jmp
push
push
call
fmul
fld
cmp
jne
fdiv
jmp
push
call
fnstsw
test
jne
fsubrp
fnstsw
test
jne
call
lea
mov
call
sub
mov
mov
mov
mov
sub
mov
mov
mov
mov
mov
mov
sub
mov
mov
mov
fild
mov
mov
mov
mov
fstp
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
push
call
test
fnclex
jge
mov
push
push
push
push
call
lea
push
push
call
mov
fwait
push
jmp
lea
call
ret
lea
call
ret
mov
push
mov
call
mov
mov
pop
pop
mov
pop
mov
pop
ret
jmp
nop
nop
nop
push
mov
sub
push
mov
push
mov
sub
push
push
push
mov
mov
mov
mov
and
mov
and
push
mov
mov
call
mov
push
mov
call
mov
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
push
push
push
push
call
mov
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
push
push
push
push
call
lea
call
mov
push
jmp
lea
call
ret
ret
mov
push
mov
call
mov
mov
pop
pop
mov
pop
mov
pop
ret
nop
nop
nop
push
mov
sub
push
mov
push
mov
sub
push
push
push
mov
mov
mov
mov
and
mov
and
push
mov
mov
call
mov
lea
xor
push
push
mov
mov
mov
mov
mov
mov
mov
mov
call
cmp
fnclex
jge
mov
push
push
push
push
call
jmp
mov
cmp
jne
push
push
call
mov
lea
push
push
mov
call
cmp
fnclex
jge
push
push
push
push
call
mov
lea
push
push
mov
mov
call
cmp
fnclex
jge
push
push
push
push
call
mov
push
lea
push
push
call
mov
push
push
mov
push
push
call
mov
mov
lea
call
push
push
call
mov
lea
call
lea
push
push
call
push
lea
push
push
call
mov
push
push
call
call
lea
lea
push
lea
push
lea
push
lea
push
lea
push
push
push
call
add
lea
call
mov
push
jmp
lea
lea
push
lea
push
lea
push
lea
push
lea
push
push
push
call
add
lea
call
ret
ret
mov
push
mov
call
mov
mov
pop
pop
mov
pop
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
mov
push
mov
sub
push
push
push
mov
mov
mov
mov
and
mov
and
push
mov
mov
call
mov
push
mov
call
mov
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
push
push
push
push
call
mov
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
push
push
push
push
call
lea
call
mov
push
jmp
lea
call
ret
ret
mov
push
mov
call
mov
mov
pop
pop
mov
pop
mov
pop
ret
nop
nop
nop
push
mov
sub
push
mov
push
mov
sub
push
push
push
mov
mov
mov
mov
and
mov
and
push
mov
mov
call
mov
lea
xor
push
push
mov
mov
mov
mov
mov
mov
mov
mov
call
cmp
fnclex
jge
mov
push
push
push
push
call
jmp
mov
cmp
jne
push
push
call
mov
lea
push
push
mov
call
cmp
fnclex
jge
push
push
push
push
call
mov
lea
push
push
mov
mov
call
cmp
fnclex
jge
push
push
push
push
call
mov
push
lea
push
push
call
mov
push
push
mov
push
push
call
mov
mov
lea
call
push
push
call
mov
lea
call
lea
push
push
call
push
lea
push
push
call
mov
push
push
call
call
lea
lea
push
lea
push
lea
push
lea
push
lea
push
push
push
call
add
lea
call
mov
push
jmp
lea
lea
push
lea
push
lea
push
lea
push
lea
push
push
push
call
add
lea
call
ret
ret
mov
push
mov
call
mov
mov
pop
pop
mov
pop
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
mov
push
mov
sub
push
push
push
mov
mov
mov
mov
and
mov
and
push
mov
mov
call
mov
push
mov
call
mov
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
push
push
push
push
call
mov
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
push
push
push
push
call
lea
call
mov
push
jmp
lea
call
ret
ret
mov
push
mov
call
mov
mov
pop
pop
mov
pop
mov
pop
ret
nop
nop
nop
push
mov
sub
push
mov
push
mov
sub
push
push
push
mov
mov
mov
mov
and
mov
and
push
mov
mov
call
mov
xor
cmp
mov
jne
push
push
call
mov
lea
push
push
mov
mov
call
mov
push
push
call
cmp
fnclex
jge
push
push
push
push
call
lea
call
mov
push
jmp
lea
call
ret
ret
mov
push
mov
call
mov
mov
pop
pop
mov
pop
mov
pop
ret
nop
nop
push
mov
sub
push
mov
push
mov
sub
push
push
push
mov
mov
mov
mov
and
mov
and
push
mov
mov
call
mov
push
mov
call
mov
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
push
push
push
push
call
mov
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
push
push
push
push
call
lea
call
mov
push
jmp
lea
call
ret
ret
mov
push
mov
call
mov
mov
pop
pop
mov
pop
mov
pop
ret
nop
nop
nop
push
mov
sub
push
mov
push
mov
sub
push
push
push
mov
mov
mov
mov
and
mov
and
push
mov
mov
call
mov
push
mov
call
mov
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
push
push
push
push
call
mov
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
push
push
push
push
call
lea
call
mov
push
jmp
lea
call
ret
ret
mov
push
mov
call
mov
mov
pop
pop
mov
pop
mov
pop
ret
nop
nop
nop
push
mov
sub
push
mov
push
mov
sub
push
push
push
mov
mov
mov
mov
and
mov
and
push
mov
mov
call
mov
lea
xor
push
push
mov
mov
mov
mov
mov
mov
mov
mov
call
cmp
fnclex
jge
mov
push
push
push
push
call
jmp
mov
cmp
jne
push
push
call
mov
lea
push
push
mov
call
cmp
fnclex
jge
push
push
push
push
call
mov
lea
push
push
mov
mov
call
cmp
fnclex
jge
push
push
push
push
call
mov
push
lea
push
push
call
mov
push
push
mov
push
push
call
mov
mov
lea
call
push
push
call
mov
lea
call
lea
push
push
call
push
lea
push
push
call
mov
push
push
call
call
lea
lea
push
lea
push
lea
push
lea
push
lea
push
push
push
call
add
lea
call
mov
push
jmp
lea
lea
push
lea
push
lea
push
lea
push
lea
push
push
push
call
add
lea
call
ret
ret
mov
push
mov
call
mov
mov
pop
pop
mov
pop
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
mov
push
mov
sub
push
push
push
mov
mov
mov
mov
and
mov
and
push
mov
mov
call
mov
push
mov
call
mov
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
push
push
push
push
call
mov
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
push
push
push
push
call
lea
call
mov
push
jmp
lea
call
ret
ret
mov
push
mov
call
mov
mov
pop
pop
mov
pop
mov
pop
ret
nop
nop
nop
push
mov
sub
push
mov
push
mov
sub
push
push
push
mov
mov
mov
mov
and
mov
and
push
mov
mov
call
mov
lea
xor
push
push
mov
mov
mov
mov
mov
mov
mov
mov
call
cmp
fnclex
jge
mov
push
push
push
push
call
jmp
mov
cmp
jne
push
push
call
mov
lea
push
push
mov
call
cmp
fnclex
jge
push
push
push
push
call
mov
lea
push
push
mov
mov
call
cmp
fnclex
jge
push
push
push
push
call
mov
push
lea
push
push
call
mov
push
push
mov
push
push
call
mov
mov
lea
call
push
push
call
mov
lea
call
lea
push
push
call
push
lea
push
push
call
mov
push
push
call
call
lea
lea
push
lea
push
lea
push
lea
push
lea
push
push
push
call
add
lea
call
mov
push
jmp
lea
lea
push
lea
push
lea
push
lea
push
lea
push
push
push
call
add
lea
call
ret
ret
mov
push
mov
call
mov
mov
pop
pop
mov
pop
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
mov
push
mov
sub
push
push
push
mov
mov
mov
mov
and
mov
and
push
mov
mov
call
mov
push
mov
call
mov
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
push
push
push
push
call
mov
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
push
push
push
push
call
lea
call
mov
push
jmp
lea
call
ret
ret
mov
push
mov
call
mov
mov
pop
pop
mov
pop
mov
pop
ret
nop
nop
nop
push
mov
sub
push
mov
push
mov
sub
push
push
push
mov
mov
mov
mov
and
mov
and
push
mov
mov
call
mov
lea
xor
push
push
mov
mov
mov
mov
mov
mov
mov
mov
call
cmp
fnclex
jge
mov
push
push
push
push
call
jmp
mov
cmp
jne
push
push
call
mov
lea
push
push
mov
call
cmp
fnclex
jge
push
push
push
push
call
mov
lea
push
push
mov
mov
call
cmp
fnclex
jge
push
push
push
push
call
mov
push
lea
push
push
call
mov
push
push
mov
push
push
call
mov
mov
lea
call
push
push
call
mov
lea
call
lea
push
push
call
push
lea
push
push
call
mov
push
push
call
call
lea
lea
push
lea
push
lea
push
lea
push
lea
push
push
push
call
add
lea
call
mov
push
jmp
lea
lea
push
lea
push
lea
push
lea
push
lea
push
push
push
call
add
lea
call
ret
ret
mov
push
mov
call
mov
mov
pop
pop
mov
pop
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
mov
push
mov
sub
push
push
push
mov
mov
mov
mov
and
mov
and
push
mov
mov
call
mov
push
mov
call
mov
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
push
push
push
push
call
mov
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
push
push
push
push
call
lea
call
mov
push
jmp
lea
call
ret
ret
mov
push
mov
call
mov
mov
pop
pop
mov
pop
mov
pop
ret
nop
nop
nop
push
mov
sub
push
mov
push
mov
sub
push
push
push
mov
mov
mov
mov
and
mov
and
push
mov
mov
call
mov
lea
xor
push
push
mov
mov
mov
mov
mov
mov
mov
mov
call
cmp
fnclex
jge
mov
push
push
push
push
call
jmp
mov
cmp
jne
push
push
call
mov
lea
push
push
mov
call
cmp
fnclex
jge
push
push
push
push
call
mov
lea
push
push
mov
mov
call
cmp
fnclex
jge
push
push
push
push
call
mov
push
lea
push
push
call
mov
push
push
mov
push
push
call
mov
mov
lea
call
push
push
call
mov
lea
call
lea
push
push
call
push
lea
push
push
call
mov
push
push
call
call
lea
lea
push
lea
push
lea
push
lea
push
lea
push
push
push
call
add
lea
call
mov
push
jmp
lea
lea
push
lea
push
lea
push
lea
push
lea
push
push
push
call
add
lea
call
ret
ret
mov
push
mov
call
mov
mov
pop
pop
mov
pop
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
mov
push
mov
sub
push
push
push
mov
mov
mov
mov
and
mov
and
push
mov
mov
call
mov
push
mov
call
mov
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
push
push
push
push
call
mov
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
push
push
push
push
call
lea
call
mov
push
jmp
lea
call
ret
ret
mov
push
mov
call
mov
mov
pop
pop
mov
pop
mov
pop
ret
nop
nop
nop
push
mov
sub
push
mov
push
mov
sub
push
push
push
mov
mov
mov
mov
and
mov
and
push
mov
mov
call
mov
push
mov
call
mov
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
push
push
push
push
call
mov
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
push
push
push
push
call
lea
call
mov
push
jmp
lea
call
ret
ret
mov
push
mov
call
mov
mov
pop
pop
mov
pop
mov
pop
ret
nop
nop
nop
push
mov
sub
push
mov
push
mov
sub
push
push
push
mov
mov
mov
mov
and
mov
and
push
mov
mov
call
mov
xor
mov
mov
cmp
mov
mov
mov
mov
mov
mov
mov
jne
mov
lea
push
push
call
cmp
fnclex
jge
push
push
push
push
call
mov
push
push
call
mov
lea
call
mov
lea
push
push
call
push
push
call
mov
lea
call
push
lea
push
call
push
lea
push
push
call
push
lea
push
push
call
push
mov
push
call
mov
call
lea
lea
mov
mov
call
lea
lea
push
lea
push
lea
push
lea
push
lea
push
push
push
call
add
mov
push
jmp
lea
lea
push
lea
push
lea
push
lea
push
lea
push
push
push
call
add
ret
lea
call
ret
mov
push
mov
call
mov
mov
pop
pop
mov
pop
mov
pop
ret
nop
nop
nop
nop
push
mov
sub
push
mov
push
mov
sub
push
push
push
mov
mov
mov
mov
and
mov
and
push
mov
mov
call
lea
xor
push
push
mov
mov
mov
mov
call
push
call
mov
call
mov
lea
push
push
mov
call
cmp
fnclex
jge
mov
mov
push
push
push
push
call
jmp
mov
cmp
jne
push
push
call
mov
lea
push
push
mov
call
cmp
fnclex
jge
push
push
push
push
call
mov
lea
push
push
mov
mov
call
cmp
fnclex
jge
push
push
push
push
call
fild
mov
fstp
fld
cmp
jne
fdiv
jmp
push
push
call
fmul
fld
cmp
jne
fdiv
jmp
push
call
fnstsw
test
jne
fsubrp
fnstsw
test
jne
call
lea
mov
call
push
call
mov
call
mov
lea
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
mov
test
jne
push
push
call
mov
lea
push
push
mov
call
test
fnclex
jge
push
push
push
push
call
mov
lea
push
push
mov
mov
call
test
fnclex
jge
push
push
push
push
call
fild
fstp
fld
cmp
jne
fdiv
jmp
push
push
call
fmul
fld
cmp
jne
fdiv
jmp
push
call
fnstsw
test
jne
fsubrp
fnstsw
test
jne
call
lea
mov
call
sub
mov
mov
mov
mov
sub
mov
mov
mov
mov
mov
mov
sub
mov
mov
mov
fild
mov
mov
mov
mov
fstp
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
push
call
test
fnclex
jge
mov
push
push
push
push
call
lea
push
push
call
mov
fwait
push
jmp
lea
call
ret
lea
call
ret
mov
push
mov
call
mov
mov
pop
pop
mov
pop
mov
pop
ret
jmp
nop
nop
nop
push
mov
sub
push
mov
push
mov
sub
push
push
push
mov
mov
mov
mov
and
mov
and
push
mov
mov
call
mov
push
mov
call
mov
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
push
push
push
push
call
mov
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
push
push
push
push
call
lea
call
mov
push
jmp
lea
call
ret
ret
mov
push
mov
call
mov
mov
pop
pop
mov
pop
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
mov
push
mov
sub
push
push
push
mov
mov
mov
mov
and
mov
and
push
mov
mov
call
mov
lea
xor
push
push
mov
mov
mov
mov
mov
mov
mov
mov
call
cmp
fnclex
jge
mov
push
push
push
push
call
jmp
mov
cmp
jne
push
push
call
mov
lea
push
push
mov
call
cmp
fnclex
jge
push
push
push
push
call
mov
lea
push
push
mov
mov
call
cmp
fnclex
jge
push
push
push
push
call
mov
push
lea
push
push
call
mov
push
push
mov
push
push
call
mov
mov
lea
call
push
push
call
mov
lea
call
lea
push
push
call
push
lea
push
push
call
mov
push
push
call
call
lea
lea
push
lea
push
lea
push
lea
push
lea
push
push
push
call
add
lea
call
mov
push
jmp
lea
lea
push
lea
push
lea
push
lea
push
lea
push
push
push
call
add
lea
call
ret
ret
mov
push
mov
call
mov
mov
pop
pop
mov
pop
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
mov
push
mov
sub
push
push
push
mov
mov
mov
mov
and
mov
and
push
mov
mov
call
mov
push
mov
call
mov
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
push
push
push
push
call
mov
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
push
push
push
push
call
lea
call
mov
push
jmp
lea
call
ret
ret
mov
push
mov
call
mov
mov
pop
pop
mov
pop
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
mov
push
mov
sub
push
push
push
mov
mov
mov
mov
and
mov
and
push
mov
mov
call
mov
lea
xor
push
push
mov
mov
mov
mov
mov
mov
mov
mov
call
cmp
fnclex
jge
mov
push
push
push
push
call
jmp
mov
cmp
jne
push
push
call
mov
lea
push
push
mov
call
cmp
fnclex
jge
push
push
push
push
call
mov
lea
push
push
mov
mov
call
cmp
fnclex
jge
push
push
push
push
call
mov
push
lea
push
push
call
mov
push
push
mov
push
push
call
mov
mov
lea
call
push
push
call
mov
lea
call
lea
push
push
call
push
lea
push
push
call
mov
push
push
call
call
lea
lea
push
lea
push
lea
push
lea
push
lea
push
push
push
call
add
lea
call
mov
push
jmp
lea
lea
push
lea
push
lea
push
lea
push
lea
push
push
push
call
add
lea
call
ret
ret
mov
push
mov
call
mov
mov
pop
pop
mov
pop
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
mov
push
mov
sub
push
push
push
mov
mov
mov
mov
and
mov
and
push
mov
mov
call
mov
push
mov
call
mov
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
push
push
push
push
call
mov
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
push
push
push
push
call
lea
call
mov
push
jmp
lea
call
ret
ret
mov
push
mov
call
mov
mov
pop
pop
mov
pop
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
mov
push
mov
sub
push
push
push
mov
mov
mov
mov
and
mov
and
push
mov
mov
call
mov
xor
cmp
mov
jne
push
push
call
mov
lea
push
push
mov
mov
call
mov
push
push
call
cmp
fnclex
jge
push
push
push
push
call
lea
call
mov
push
jmp
lea
call
ret
ret
mov
push
mov
call
mov
mov
pop
pop
mov
pop
mov
pop
ret
nop
nop
push
mov
sub
push
mov
push
mov
sub
push
push
push
mov
mov
mov
mov
and
mov
and
push
mov
mov
call
mov
push
mov
call
mov
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
push
push
push
push
call
mov
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
push
push
push
push
call
lea
call
mov
push
jmp
lea
call
ret
ret
mov
push
mov
call
mov
mov
pop
pop
mov
pop
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
mov
push
mov
sub
push
push
push
mov
mov
mov
mov
and
mov
and
push
mov
mov
call
mov
push
mov
call
mov
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
push
push
push
push
call
mov
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
push
push
push
push
call
lea
call
mov
push
jmp
lea
call
ret
ret
mov
push
mov
call
mov
mov
pop
pop
mov
pop
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
mov
push
mov
sub
push
push
push
mov
mov
mov
mov
and
mov
and
push
mov
mov
call
mov
lea
xor
push
push
mov
mov
mov
mov
mov
mov
mov
mov
call
cmp
fnclex
jge
mov
push
push
push
push
call
jmp
mov
cmp
jne
push
push
call
mov
lea
push
push
mov
call
cmp
fnclex
jge
push
push
push
push
call
mov
lea
push
push
mov
mov
call
cmp
fnclex
jge
push
push
push
push
call
mov
push
lea
push
push
call
mov
push
push
mov
push
push
call
mov
mov
lea
call
push
push
call
mov
lea
call
lea
push
push
call
push
lea
push
push
call
mov
push
push
call
call
lea
lea
push
lea
push
lea
push
lea
push
lea
push
push
push
call
add
lea
call
mov
push
jmp
lea
lea
push
lea
push
lea
push
lea
push
lea
push
push
push
call
add
lea
call
ret
ret
mov
push
mov
call
mov
mov
pop
pop
mov
pop
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
mov
push
mov
sub
push
push
push
mov
mov
mov
mov
and
mov
and
push
mov
mov
call
mov
push
mov
call
mov
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
push
push
push
push
call
mov
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
push
push
push
push
call
lea
call
mov
push
jmp
lea
call
ret
ret
mov
push
mov
call
mov
mov
pop
pop
mov
pop
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
mov
push
mov
sub
push
push
push
mov
mov
mov
mov
and
mov
and
push
mov
mov
call
mov
push
mov
call
mov
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
push
push
push
push
call
mov
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
push
push
push
push
call
lea
call
mov
push
jmp
lea
call
ret
ret
mov
push
mov
call
mov
mov
pop
pop
mov
pop
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
mov
push
mov
sub
push
push
push
mov
mov
mov
mov
and
mov
and
push
mov
mov
call
mov
xor
mov
mov
cmp
mov
mov
mov
mov
mov
mov
mov
jne
mov
lea
push
push
call
cmp
fnclex
jge
push
push
push
push
call
mov
push
push
call
mov
lea
call
mov
lea
push
push
call
push
push
call
mov
lea
call
push
lea
push
call
push
lea
push
push
call
push
lea
push
push
call
push
mov
push
call
mov
call
lea
lea
mov
mov
call
lea
lea
push
lea
push
lea
push
lea
push
lea
push
push
push
call
add
mov
push
jmp
lea
lea
push
lea
push
lea
push
lea
push
lea
push
push
push
call
add
ret
lea
call
ret
mov
push
mov
call
mov
mov
pop
pop
mov
pop
mov
pop
ret
nop
nop
nop
nop
push
mov
sub
push
mov
push
mov
sub
push
push
push
mov
mov
mov
mov
and
mov
and
push
mov
mov
call
lea
xor
push
push
mov
mov
mov
mov
call
push
call
mov
call
mov
lea
push
push
mov
call
cmp
fnclex
jge
mov
mov
push
push
push
push
call
jmp
mov
cmp
jne
push
push
call
mov
lea
push
push
mov
call
cmp
fnclex
jge
push
push
push
push
call
mov
lea
push
push
mov
mov
call
cmp
fnclex
jge
push
push
push
push
call
fild
mov
fstp
fld
cmp
jne
fdiv
jmp
push
push
call
fmul
fld
cmp
jne
fdiv
jmp
push
call
fnstsw
test
jne
fsubrp
fnstsw
test
jne
call
lea
mov
call
push
call
mov
call
mov
lea
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
mov
test
jne
push
push
call
mov
lea
push
push
mov
call
test
fnclex
jge
push
push
push
push
call
mov
lea
push
push
mov
mov
call
test
fnclex
jge
push
push
push
push
call
fild
fstp
fld
cmp
jne
fdiv
jmp
push
push
call
fmul
fld
cmp
jne
fdiv
jmp
push
call
fnstsw
test
jne
fsubrp
fnstsw
test
jne
call
lea
mov
call
sub
mov
mov
mov
mov
sub
mov
mov
mov
mov
mov
mov
sub
mov
mov
mov
fild
mov
mov
mov
mov
fstp
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
push
call
test
fnclex
jge
mov
push
push
push
push
call
lea
push
push
call
mov
fwait
push
jmp
lea
call
ret
lea
call
ret
mov
push
mov
call
mov
mov
pop
pop
mov
pop
mov
pop
ret
jmp
nop
nop
nop
push
mov
sub
push
mov
push
mov
sub
push
push
push
mov
mov
mov
mov
and
mov
and
push
mov
mov
call
mov
push
mov
call
mov
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
push
push
push
push
call
mov
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
push
push
push
push
call
lea
call
mov
push
jmp
lea
call
ret
ret
mov
push
mov
call
mov
mov
pop
pop
mov
pop
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
mov
push
mov
sub
push
push
push
mov
mov
mov
mov
and
mov
and
push
mov
mov
call
mov
lea
xor
push
push
mov
mov
mov
mov
mov
mov
mov
mov
call
cmp
fnclex
jge
mov
push
push
push
push
call
jmp
mov
cmp
jne
push
push
call
mov
lea
push
push
mov
call
cmp
fnclex
jge
push
push
push
push
call
mov
lea
push
push
mov
mov
call
cmp
fnclex
jge
push
push
push
push
call
mov
push
lea
push
push
call
mov
push
push
mov
push
push
call
mov
mov
lea
call
push
push
call
mov
lea
call
lea
push
push
call
push
lea
push
push
call
mov
push
push
call
call
lea
lea
push
lea
push
lea
push
lea
push
lea
push
push
push
call
add
lea
call
mov
push
jmp
lea
lea
push
lea
push
lea
push
lea
push
lea
push
push
push
call
add
lea
call
ret
ret
mov
push
mov
call
mov
mov
pop
pop
mov
pop
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
mov
push
mov
sub
push
push
push
mov
mov
mov
mov
and
mov
and
push
mov
mov
call
mov
push
mov
call
mov
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
push
push
push
push
call
mov
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
push
push
push
push
call
lea
call
mov
push
jmp
lea
call
ret
ret
mov
push
mov
call
mov
mov
pop
pop
mov
pop
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
mov
push
mov
sub
push
push
push
mov
mov
mov
mov
and
mov
and
push
mov
mov
call
mov
lea
xor
push
push
mov
mov
mov
mov
mov
mov
mov
mov
call
cmp
fnclex
jge
mov
push
push
push
push
call
jmp
mov
cmp
jne
push
push
call
mov
lea
push
push
mov
call
cmp
fnclex
jge
push
push
push
push
call
mov
lea
push
push
mov
mov
call
cmp
fnclex
jge
push
push
push
push
call
mov
push
lea
push
push
call
mov
push
push
mov
push
push
call
mov
mov
lea
call
push
push
call
mov
lea
call
lea
push
push
call
push
lea
push
push
call
mov
push
push
call
call
lea
lea
push
lea
push
lea
push
lea
push
lea
push
push
push
call
add
lea
call
mov
push
jmp
lea
lea
push
lea
push
lea
push
lea
push
lea
push
push
push
call
add
lea
call
ret
ret
mov
push
mov
call
mov
mov
pop
pop
mov
pop
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
mov
push
mov
sub
push
push
push
mov
mov
mov
mov
and
mov
and
push
mov
mov
call
mov
push
mov
call
mov
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
push
push
push
push
call
mov
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
push
push
push
push
call
lea
call
mov
push
jmp
lea
call
ret
ret
mov
push
mov
call
mov
mov
pop
pop
mov
pop
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
mov
push
mov
sub
push
push
push
mov
mov
mov
mov
and
mov
and
push
mov
mov
call
mov
xor
cmp
mov
jne
push
push
call
mov
lea
push
push
mov
mov
call
mov
push
push
call
cmp
fnclex
jge
push
push
push
push
call
lea
call
mov
push
jmp
lea
call
ret
ret
mov
push
mov
call
mov
mov
pop
pop
mov
pop
mov
pop
ret
nop
nop
push
mov
sub
push
mov
push
mov
sub
push
push
push
mov
mov
mov
mov
and
mov
and
push
mov
mov
call
mov
push
mov
call
mov
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
push
push
push
push
call
mov
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
push
push
push
push
call
lea
call
mov
push
jmp
lea
call
ret
ret
mov
push
mov
call
mov
mov
pop
pop
mov
pop
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
mov
push
mov
sub
push
push
push
mov
mov
mov
mov
and
mov
and
push
mov
mov
call
mov
push
mov
call
mov
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
push
push
push
push
call
mov
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
push
push
push
push
call
lea
call
mov
push
jmp
lea
call
ret
ret
mov
push
mov
call
mov
mov
pop
pop
mov
pop
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
mov
push
mov
sub
push
push
push
mov
mov
mov
mov
and
mov
and
push
mov
mov
call
mov
lea
xor
push
push
mov
mov
mov
mov
mov
mov
mov
mov
call
cmp
fnclex
jge
mov
push
push
push
push
call
jmp
mov
cmp
jne
push
push
call
mov
lea
push
push
mov
call
cmp
fnclex
jge
push
push
push
push
call
mov
lea
push
push
mov
mov
call
cmp
fnclex
jge
push
push
push
push
call
mov
push
lea
push
push
call
mov
push
push
mov
push
push
call
mov
mov
lea
call
push
push
call
mov
lea
call
lea
push
push
call
push
lea
push
push
call
mov
push
push
call
call
lea
lea
push
lea
push
lea
push
lea
push
lea
push
push
push
call
add
lea
call
mov
push
jmp
lea
lea
push
lea
push
lea
push
lea
push
lea
push
push
push
call
add
lea
call
ret
ret
mov
push
mov
call
mov
mov
pop
pop
mov
pop
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
mov
push
mov
sub
push
push
push
mov
mov
mov
mov
and
mov
and
push
mov
mov
call
mov
push
mov
call
mov
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
push
push
push
push
call
mov
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
push
push
push
push
call
lea
call
mov
push
jmp
lea
call
ret
ret
mov
push
mov
call
mov
mov
pop
pop
mov
pop
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
mov
push
mov
sub
push
push
push
mov
mov
mov
mov
and
mov
and
push
mov
mov
call
mov
lea
xor
push
push
mov
mov
mov
mov
mov
mov
mov
mov
call
cmp
fnclex
jge
mov
push
push
push
push
call
jmp
mov
cmp
jne
push
push
call
mov
lea
push
push
mov
call
cmp
fnclex
jge
push
push
push
push
call
mov
lea
push
push
mov
mov
call
cmp
fnclex
jge
push
push
push
push
call
mov
push
lea
push
push
call
mov
push
push
mov
push
push
call
mov
mov
lea
call
push
push
call
mov
lea
call
lea
push
push
call
push
lea
push
push
call
mov
push
push
call
call
lea
lea
push
lea
push
lea
push
lea
push
lea
push
push
push
call
add
lea
call
mov
push
jmp
lea
lea
push
lea
push
lea
push
lea
push
lea
push
push
push
call
add
lea
call
ret
ret
mov
push
mov
call
mov
mov
pop
pop
mov
pop
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
mov
push
mov
sub
push
push
push
mov
mov
mov
mov
and
mov
and
push
mov
mov
call
mov
push
mov
call
mov
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
push
push
push
push
call
mov
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
push
push
push
push
call
lea
call
mov
push
jmp
lea
call
ret
ret
mov
push
mov
call
mov
mov
pop
pop
mov
pop
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
mov
push
mov
sub
push
push
push
mov
mov
mov
mov
and
mov
and
push
mov
mov
call
mov
lea
xor
push
push
mov
mov
mov
mov
mov
mov
mov
mov
call
cmp
fnclex
jge
mov
push
push
push
push
call
jmp
mov
cmp
jne
push
push
call
mov
lea
push
push
mov
call
cmp
fnclex
jge
push
push
push
push
call
mov
lea
push
push
mov
mov
call
cmp
fnclex
jge
push
push
push
push
call
mov
push
lea
push
push
call
mov
push
push
mov
push
push
call
mov
mov
lea
call
push
push
call
mov
lea
call
lea
push
push
call
push
lea
push
push
call
mov
push
push
call
call
lea
lea
push
lea
push
lea
push
lea
push
lea
push
push
push
call
add
lea
call
mov
push
jmp
lea
lea
push
lea
push
lea
push
lea
push
lea
push
push
push
call
add
lea
call
ret
ret
mov
push
mov
call
mov
mov
pop
pop
mov
pop
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
mov
push
mov
sub
push
push
push
mov
mov
mov
mov
and
mov
and
push
mov
mov
call
mov
push
mov
call
mov
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
push
push
push
push
call
mov
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
push
push
push
push
call
lea
call
mov
push
jmp
lea
call
ret
ret
mov
push
mov
call
mov
mov
pop
pop
mov
pop
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
mov
push
mov
sub
push
push
push
mov
mov
mov
mov
and
mov
and
push
mov
mov
call
mov
lea
xor
push
push
mov
mov
mov
mov
mov
mov
mov
mov
call
cmp
fnclex
jge
mov
push
push
push
push
call
jmp
mov
cmp
jne
push
push
call
mov
lea
push
push
mov
call
cmp
fnclex
jge
push
push
push
push
call
mov
lea
push
push
mov
mov
call
cmp
fnclex
jge
push
push
push
push
call
mov
push
lea
push
push
call
mov
push
push
mov
push
push
call
mov
mov
lea
call
push
push
call
mov
lea
call
lea
push
push
call
push
lea
push
push
call
mov
push
push
call
call
lea
lea
push
lea
push
lea
push
lea
push
lea
push
push
push
call
add
lea
call
mov
push
jmp
lea
lea
push
lea
push
lea
push
lea
push
lea
push
push
push
call
add
lea
call
ret
ret
mov
push
mov
call
mov
mov
pop
pop
mov
pop
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
mov
push
mov
sub
push
push
push
mov
mov
mov
mov
and
mov
and
push
mov
mov
call
mov
push
mov
call
mov
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
push
push
push
push
call
mov
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
push
push
push
push
call
lea
call
mov
push
jmp
lea
call
ret
ret
mov
push
mov
call
mov
mov
pop
pop
mov
pop
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
mov
push
mov
sub
push
push
push
mov
mov
mov
mov
and
mov
and
push
mov
mov
call
mov
push
mov
call
mov
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
push
push
push
push
call
mov
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
push
push
push
push
call
lea
call
mov
push
jmp
lea
call
ret
ret
mov
push
mov
call
mov
mov
pop
pop
mov
pop
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
mov
push
mov
sub
push
push
push
mov
mov
mov
mov
and
mov
and
push
mov
mov
call
mov
xor
mov
mov
cmp
mov
mov
mov
mov
mov
mov
mov
jne
mov
lea
push
push
call
cmp
fnclex
jge
push
push
push
push
call
mov
push
push
call
mov
lea
call
mov
lea
push
push
call
push
push
call
mov
lea
call
push
lea
push
call
push
lea
push
push
call
push
lea
push
push
call
push
mov
push
call
mov
call
lea
lea
mov
mov
call
lea
lea
push
lea
push
lea
push
lea
push
lea
push
push
push
call
add
mov
push
jmp
lea
lea
push
lea
push
lea
push
lea
push
lea
push
push
push
call
add
ret
lea
call
ret
mov
push
mov
call
mov
mov
pop
pop
mov
pop
mov
pop
ret
nop
nop
nop
nop
push
mov
sub
push
mov
push
mov
sub
push
push
push
mov
mov
mov
mov
and
mov
and
push
mov
mov
call
lea
xor
push
push
mov
mov
mov
mov
call
push
call
mov
call
mov
lea
push
push
mov
call
cmp
fnclex
jge
mov
mov
push
push
push
push
call
jmp
mov
cmp
jne
push
push
call
mov
lea
push
push
mov
call
cmp
fnclex
jge
push
push
push
push
call
mov
lea
push
push
mov
mov
call
cmp
fnclex
jge
push
push
push
push
call
fild
mov
fstp
fld
cmp
jne
fdiv
jmp
push
push
call
fmul
fld
cmp
jne
fdiv
jmp
push
call
fnstsw
test
jne
fsubrp
fnstsw
test
jne
call
lea
mov
call
push
call
mov
call
mov
lea
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
mov
test
jne
push
push
call
mov
lea
push
push
mov
call
test
fnclex
jge
push
push
push
push
call
mov
lea
push
push
mov
mov
call
test
fnclex
jge
push
push
push
push
call
fild
fstp
fld
cmp
jne
fdiv
jmp
push
push
call
fmul
fld
cmp
jne
fdiv
jmp
push
call
fnstsw
test
jne
fsubrp
fnstsw
test
jne
call
lea
mov
call
sub
mov
mov
mov
mov
sub
mov
mov
mov
mov
mov
mov
sub
mov
mov
mov
fild
mov
mov
mov
mov
fstp
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
push
call
test
fnclex
jge
mov
push
push
push
push
call
lea
push
push
call
mov
fwait
push
jmp
lea
call
ret
lea
call
ret
mov
push
mov
call
mov
mov
pop
pop
mov
pop
mov
pop
ret
jmp
nop
nop
nop
push
mov
sub
push
mov
push
mov
sub
push
push
push
mov
mov
mov
mov
and
mov
and
push
mov
mov
call
mov
xor
cmp
mov
jne
push
push
call
mov
lea
push
push
mov
mov
call
mov
push
push
call
cmp
fnclex
jge
push
push
push
push
call
lea
call
mov
push
jmp
lea
call
ret
ret
mov
push
mov
call
mov
mov
pop
pop
mov
pop
mov
pop
ret
nop
nop
push
mov
sub
push
mov
push
mov
sub
push
push
push
mov
mov
xor
mov
mov
push
mov
call
mov
xor
mov
mov
mov
mov
cmp
setle
xor
cmp
setge
test
je
mov
call
mov
cmp
mov
je
cmp
jne
cmp
jl
cmp
jge
mov
push
call
mov
lea
push
push
mov
call
mov
lea
call
mov
lea
push
push
call
lea
call
mov
push
call
sub
mov
mov
mov
mov
push
mov
mov
mov
mov
mov
mov
call
cmp
fnclex
jge
push
push
push
push
call
push
jmp
lea
call
ret
ret
mov
push
mov
call
mov
mov
pop
pop
mov
pop
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
mov
push
mov
sub
push
push
push
mov
mov
xor
mov
mov
push
mov
call
mov
mov
mov
mov
push
mov
call
mov
mov
mov
mov
mov
pop
pop
mov
pop
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
mov
push
mov
sub
push
push
push
mov
mov
xor
mov
mov
push
mov
call
mov
xor
mov
mov
mov
mov
cmp
setle
xor
cmp
setge
test
je
cmp
jne
cmp
jge
mov
lea
lea
push
push
push
mov
call
cmp
jne
cmp
jge
mov
lea
lea
push
push
push
mov
call
cmp
jne
cmp
jle
mov
lea
push
push
mov
call
cmp
fnclex
jge
push
push
push
push
call
mov
mov
push
mov
call
sub
mov
mov
mov
mov
push
mov
mov
mov
mov
mov
mov
call
cmp
fnclex
jge
push
push
push
push
call
mov
push
mov
call
mov
mov
pop
pop
mov
pop
mov
pop
ret
nop
nop
nop
push
mov
sub
push
mov
push
mov
sub
push
push
push
mov
mov
xor
mov
mov
push
mov
call
mov
mov
mov
mov
push
mov
call
mov
mov
mov
mov
mov
pop
pop
mov
pop
mov
pop
ret
nop
nop
nop
nop
nop
nop
push
mov
sub
push
mov
push
mov
sub
push
push
push
mov
mov
xor
mov
mov
push
mov
call
mov
push
push
push
mov
mov
push
mov
mov
mov
mov
call
mov
call
mov
cmp
je
mov
mov
mov
mov
lea
movsx
push
mov
push
push
call
mov
lea
call
push
push
call
mov
lea
neg
sbb
inc
neg
call
lea
call
test
je
push
push
call
mov
sub
push
mov
push
jo
push
call
mov
lea
call
push
call
mov
call
lea
mov
call
xor
jmp
add
jo
mov
xor
xor
jmp
mov
cmp
je
mov
lea
movsx
mov
push
push
mov
mov
mov
push
call
mov
lea
call
push
push
call
cmp
fnclex
jge
push
push
push
push
call
lea
call
lea
call
mov
lea
mov
call
mov
lea
push
push
mov
call
mov
push
call
sub
mov
mov
mov
mov
push
mov
mov
mov
mov
mov
mov
call
cmp
fnclex
jge
push
push
push
push
call
push
jmp
lea
call
lea
call
ret
ret
mov
push
mov
call
mov
mov
pop
pop
mov
pop
mov
pop
ret
call
nop
nop
nop
nop
push
mov
sub
push
mov
push
mov
sub
push
push
push
mov
mov
xor
mov
mov
push
mov
call
mov
mov
mov
mov
lea
call
push
jmp
lea
call
ret
ret
mov
push
mov
call
mov
mov
mov
mov
mov
pop
pop
mov
pop
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
mov
push
mov
sub
push
push
push
mov
mov
xor
mov
mov
push
mov
call
mov
xor
mov
mov
mov
mov
cmp
mov
setle
xor
cmp
setge
test
mov
mov
mov
mov
je
cmp
jge
cmp
jle
xor
jmp
mov
mov
mov
add
jo
xor
test
setle
or
jne
mov
lea
push
push
mov
call
cmp
fnclex
jge
mov
push
push
push
push
call
mov
lea
push
push
mov
mov
call
cmp
fnclex
jge
push
push
push
push
call
xor
cmp
lea
sete
neg
mov
call
cmp
je
mov
mov
mov
push
push
mov
mov
mov
mov
mov
mov
call
mov
lea
call
push
push
call
mov
lea
lea
push
lea
push
push
lea
push
push
mov
call
lea
call
lea
lea
push
lea
push
lea
push
push
push
call
add
jmp
mov
mov
lea
mov
push
push
call
mov
push
call
sub
mov
mov
mov
mov
push
mov
mov
mov
mov
mov
mov
call
cmp
fnclex
jge
push
push
push
push
call
push
jmp
lea
call
lea
call
lea
lea
push
lea
push
lea
push
push
push
call
add
ret
ret
mov
push
mov
call
mov
mov
pop
pop
mov
pop
mov
pop
ret
call
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
mov
push
mov
sub
push
push
push
mov
mov
xor
mov
mov
push
mov
call
mov
mov
mov
mov
push
mov
call
mov
mov
mov
mov
mov
pop
pop
mov
pop
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
mov
push
mov
sub
push
push
push
mov
mov
xor
mov
mov
push
mov
call
mov
xor
mov
mov
mov
cmp
setle
xor
cmp
setge
test
je
sub
mov
mov
mov
mov
mov
mov
mov
push
mov
mov
mov
mov
call
cmp
fnclex
jge
push
push
push
push
call
mov
push
call
test
je
mov
lea
push
push
mov
call
mov
push
call
mov
push
mov
call
mov
mov
pop
pop
mov
pop
mov
pop
ret
nop
push
mov
sub
push
mov
push
mov
sub
push
push
push
mov
mov
xor
mov
mov
push
mov
call
mov
mov
mov
mov
push
mov
call
mov
mov
mov
mov
mov
pop
pop
mov
pop
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
mov
push
mov
sub
push
push
push
mov
mov
xor
mov
mov
push
mov
call
mov
xor
mov
mov
mov
mov
cmp
mov
setle
xor
cmp
setge
test
mov
mov
mov
je
mov
lea
push
push
call
cmp
fnclex
jge
push
push
push
push
call
mov
lea
push
push
mov
mov
call
cmp
fnclex
jge
push
push
push
push
call
mov
xor
cmp
mov
setl
mov
xor
neg
cmp
mov
setg
neg
and
lea
not
and
call
cmp
je
mov
mov
mov
mov
mov
lea
lea
mov
mov
mov
mov
mov
call
lea
lea
push
lea
push
push
lea
push
push
call
lea
lea
push
lea
push
lea
push
push
push
call
add
mov
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
mov
mov
mov
call
cmp
fnclex
jge
push
push
push
push
call
push
jmp
lea
call
lea
lea
push
lea
push
lea
push
push
push
call
add
ret
ret
mov
push
mov
call
mov
mov
pop
pop
mov
pop
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
mov
push
mov
sub
push
push
push
mov
mov
xor
mov
mov
push
mov
call
mov
mov
mov
mov
push
mov
call
mov
mov
mov
mov
mov
pop
pop
mov
pop
mov
pop
ret
nop
nop
nop
nop
nop
nop
push
mov
sub
push
mov
push
mov
sub
push
push
push
mov
mov
xor
mov
mov
push
mov
call
mov
xor
mov
mov
mov
mov
cmp
mov
setle
xor
cmp
setge
test
mov
mov
mov
mov
je
cmp
jle
mov
lea
push
push
call
cmp
fnclex
jge
mov
push
push
push
push
call
jmp
mov
mov
push
push
call
mov
xor
cmp
mov
sete
neg
lea
or
call
test
je
mov
lea
push
push
call
test
fnclex
jge
push
push
push
push
call
mov
lea
push
push
mov
mov
call
test
fnclex
jge
push
push
push
push
call
mov
lea
not
call
test
je
mov
mov
mov
mov
mov
lea
lea
mov
mov
mov
mov
mov
call
lea
lea
push
lea
push
push
lea
push
push
call
lea
lea
push
lea
push
lea
push
push
push
call
add
jmp
mov
lea
push
push
call
test
fnclex
jge
push
push
push
push
call
mov
mov
cmp
je
mov
lea
push
push
mov
call
test
jge
push
push
push
push
call
mov
lea
push
push
mov
call
test
fnclex
jge
push
push
push
push
call
mov
xor
jmp
mov
mov
mov
mov
mov
cmp
mov
je
mov
mov
push
call
cmp
jge
push
push
push
push
call
mov
lea
push
push
call
cmp
fnclex
jge
push
push
push
push
call
mov
mov
lea
mov
push
push
mov
call
cmp
jge
push
push
push
push
call
sub
mov
mov
mov
mov
mov
mov
mov
mov
push
mov
mov
mov
mov
call
test
fnclex
jge
push
push
push
push
call
push
jmp
lea
call
lea
lea
push
lea
push
lea
push
push
push
call
add
ret
ret
mov
push
mov
call
mov
mov
pop
pop
mov
pop
mov
pop
ret
nop
nop
nop
nop
push
mov
sub
push
mov
push
mov
sub
push
push
push
mov
mov
xor
mov
mov
push
mov
call
mov
mov
mov
mov
push
mov
call
mov
mov
mov
mov
mov
pop
pop
mov
pop
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
mov
push
mov
sub
push
push
push
mov
mov
xor
mov
mov
push
mov
call
mov
lea
mov
mov
mov
mov
push
push
mov
mov
mov
mov
mov
call
cmp
jne
mov
mov
lea
call
mov
lea
push
push
call
lea
call
cmp
jle
mov
push
push
call
test
je
mov
lea
push
push
mov
call
cmp
fnclex
jge
mov
push
push
push
push
call
jmp
cmp
jne
mov
lea
push
push
mov
call
cmp
fnclex
jge
mov
push
push
push
push
call
jmp
mov
mov
lea
push
push
call
cmp
fnclex
jge
push
push
push
push
call
mov
lea
push
push
mov
mov
call
test
fnclex
jge
push
push
push
push
call
mov
lea
not
call
test
je
mov
mov
mov
push
push
mov
mov
mov
mov
mov
mov
call
mov
lea
call
push
push
call
mov
lea
lea
push
lea
push
push
lea
push
push
mov
call
lea
call
lea
lea
push
lea
push
lea
push
push
push
call
add
xor
jmp
mov
mov
push
call
cmp
jge
push
push
push
push
call
jmp
mov
lea
push
push
mov
call
mov
push
call
mov
sub
mov
mov
mov
mov
push
mov
mov
mov
mov
mov
mov
call
test
fnclex
jge
push
push
push
push
call
push
jmp
lea
call
lea
call
lea
lea
push
lea
push
lea
push
push
push
call
add
ret
ret
mov
push
mov
call
mov
mov
pop
pop
mov
pop
mov
pop
ret
nop
push
mov
sub
push
mov
push
mov
sub
push
push
push
mov
mov
xor
mov
mov
push
mov
call
mov
lea
mov
mov
mov
push
push
call
push
jmp
lea
call
ret
ret
mov
push
mov
call
mov
mov
mov
mov
mov
pop
pop
mov
pop
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
mov
push
mov
sub
push
push
push
mov
mov
xor
mov
mov
push
mov
call
mov
xor
mov
mov
mov
mov
cmp
setle
xor
cmp
setge
test
je
mov
mov
xor
cmp
setne
xor
cmp
setne
test
jne
mov
lea
push
push
mov
call
cmp
jge
push
push
push
push
call
mov
lea
push
push
mov
call
mov
push
call
sub
mov
mov
mov
mov
push
mov
mov
mov
mov
mov
mov
call
cmp
fnclex
jge
push
push
push
push
call
mov
push
mov
call
mov
mov
pop
pop
mov
pop
mov
pop
ret
nop
nop
nop
nop
nop
push
mov
sub
push
mov
push
mov
sub
push
push
push
mov
mov
xor
mov
mov
push
mov
call
mov
mov
mov
mov
push
mov
call
mov
mov
mov
mov
mov
pop
pop
mov
pop
mov
pop
ret
nop
nop
nop
nop
nop
nop
push
mov
sub
push
mov
push
mov
sub
push
push
push
mov
mov
xor
mov
mov
push
mov
call
mov
lea
mov
push
mov
push
mov
call
cmp
fnclex
jge
mov
mov
push
push
push
push
call
jmp
mov
mov
mov
cmp
je
mov
push
push
mov
call
cmp
fnclex
jge
mov
push
push
push
push
call
cmp
jne
cmp
jne
cmp
jge
mov
lea
push
push
mov
call
cmp
jge
push
push
push
push
call
mov
push
call
mov
lea
push
push
mov
call
mov
lea
push
push
mov
call
cmp
jge
push
push
push
push
call
jmp
mov
push
call
sub
mov
mov
mov
mov
push
mov
mov
mov
mov
mov
mov
call
test
fnclex
jge
push
push
push
push
call
mov
push
mov
call
mov
mov
pop
pop
mov
pop
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
mov
push
mov
sub
push
push
push
mov
mov
xor
mov
mov
push
mov
call
mov
lea
mov
push
mov
push
mov
call
cmp
fnclex
jge
mov
push
push
push
push
call
mov
mov
mov
push
mov
call
mov
mov
mov
mov
mov
pop
pop
mov
pop
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
mov
push
mov
sub
push
push
push
mov
mov
xor
mov
mov
push
mov
call
mov
mov
and
mov
mov
cmp
mov
mov
mov
mov
mov
mov
mov
jne
mov
lea
push
push
call
cmp
fnclex
jge
push
push
push
push
call
mov
lea
push
push
mov
mov
call
cmp
fnclex
jge
push
push
push
push
call
mov
lea
call
cmp
je
and
mov
push
call
sub
mov
mov
mov
mov
push
mov
mov
mov
mov
mov
mov
call
cmp
fnclex
jge
push
push
push
push
call
push
jmp
mov
mov
mov
push
push
mov
mov
mov
mov
mov
mov
call
mov
lea
call
push
push
call
lea
mov
lea
push
lea
push
push
lea
push
push
mov
call
lea
call
lea
lea
push
lea
push
lea
push
push
push
call
add
jmp
lea
call
lea
call
lea
lea
push
lea
push
lea
push
push
push
call
add
ret
ret
mov
push
mov
call
mov
mov
pop
pop
mov
pop
mov
pop
ret
nop
nop
nop
nop
nop
nop
push
mov
sub
push
mov
push
mov
sub
push
push
push
mov
mov
xor
mov
mov
push
mov
call
mov
mov
mov
mov
push
mov
call
mov
mov
mov
mov
mov
pop
pop
mov
pop
mov
pop
ret
nop
nop
nop
push
mov
sub
push
mov
push
mov
sub
push
push
push
mov
mov
xor
mov
mov
push
mov
call
mov
mov
mov
mov
mov
mov
cmp
mov
mov
mov
mov
jne
cmp
jne
mov
lea
push
push
mov
call
cmp
fnclex
jge
mov
push
push
push
push
call
mov
lea
push
push
mov
mov
call
cmp
fnclex
jge
push
push
push
push
call
mov
lea
not
call
cmp
je
mov
mov
mov
mov
mov
lea
lea
mov
mov
mov
mov
mov
call
lea
lea
push
lea
push
push
lea
push
push
call
lea
lea
push
lea
push
lea
push
push
push
call
add
jmp
mov
cmp
je
cmp
jne
mov
lea
lea
push
push
push
mov
call
mov
push
call
sub
mov
mov
mov
mov
mov
mov
mov
mov
push
mov
mov
mov
mov
call
cmp
fnclex
jge
push
push
push
push
call
push
jmp
lea
call
lea
lea
push
lea
push
lea
push
push
push
call
add
ret
ret
mov
push
mov
call
mov
mov
pop
pop
mov
pop
mov
pop
ret
nop
nop
nop
nop
push
mov
sub
push
mov
push
mov
sub
push
push
push
mov
mov
xor
mov
mov
push
mov
call
mov
mov
mov
mov
push
mov
call
mov
mov
mov
mov
mov
pop
pop
mov
pop
mov
pop
ret
nop
nop
nop
push
mov
sub
push
mov
push
mov
sub
push
push
push
mov
mov
xor
mov
mov
push
mov
call
mov
lea
push
push
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
cmp
jge
mov
push
push
push
push
call
jmp
mov
mov
lea
push
push
call
cmp
jge
push
push
push
push
call
mov
mov
xor
cmp
setle
xor
cmp
setge
test
je
cmp
jle
mov
lea
push
push
call
cmp
fnclex
jge
push
push
push
push
call
mov
lea
push
push
mov
mov
call
cmp
fnclex
jge
push
push
push
push
call
mov
lea
not
call
cmp
je
mov
mov
mov
mov
mov
lea
lea
mov
mov
mov
mov
mov
call
lea
lea
push
lea
push
push
lea
push
push
call
lea
lea
push
lea
push
lea
push
push
push
call
add
jmp
mov
mov
add
jo
imul
jo
call
lea
mov
mov
push
push
mov
call
mov
push
call
sub
mov
mov
mov
mov
mov
mov
mov
mov
push
mov
mov
mov
mov
call
test
fnclex
jge
push
push
push
push
call
cmp
jle
mov
push
call
test
jge
push
push
push
push
call
push
jmp
lea
call
lea
lea
push
lea
push
lea
push
push
push
call
add
ret
ret
mov
push
mov
call
mov
mov
pop
pop
mov
pop
mov
pop
ret
call
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
mov
push
mov
sub
push
push
push
mov
mov
xor
mov
mov
push
mov
call
cmp
mov
mov
mov
mov
mov
mov
mov
mov
jne
mov
push
push
push
lea
push
push
push
push
call
mov
mov
mov
mov
mov
add
shl
mov
mov
sub
mov
lea
call
mov
mov
mov
lea
mov
shl
mov
mov
mov
sub
add
call
mov
mov
mov
mov
sub
lea
shl
add
call
mov
mov
mov
mov
sub
lea
shl
add
call
mov
mov
mov
mov
mov
lea
sub
mov
shl
add
call
movsx
mov
lea
fild
push
push
fstp
fld
cmp
jne
fdiv
jmp
push
push
call
fsub
fnstsw
test
jne
fstp
fld
lea
fstp
push
call
lea
push
push
call
lea
push
call
lea
mov
call
fwait
push
jmp
lea
call
lea
push
push
call
ret
ret
mov
push
mov
call
mov
mov
mov
mov
mov
pop
pop
mov
pop
mov
pop
ret
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
mov
push
mov
sub
push
push
push
mov
mov
mov
mov
push
mov
call
mov
mov
mov
mov
call
push
mov
push
call
test
fnclex
jge
mov
push
push
push
push
call
sub
mov
mov
mov
mov
push
mov
mov
mov
mov
mov
mov
call
test
fnclex
jge
push
push
push
push
call
mov
push
mov
call
mov
mov
pop
pop
mov
pop
mov
pop
ret
nop
push
mov
sub
push
mov
push
mov
sub
push
push
push
mov
mov
xor
mov
mov
push
mov
call
mov
lea
mov
push
mov
push
mov
call
cmp
fnclex
jge
mov
push
push
push
push
call
movsx
mov
mov
push
mov
call
mov
mov
mov
mov
mov
pop
pop
mov
pop
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
mov
push
mov
sub
push
push
push
mov
mov
xor
mov
mov
mov
mov
push
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
call
mov
mov
mov
mov
push
lea
push
call
push
mov
push
call
fnclex
cmp
jge
push
push
mov
push
push
mov
call
jmp
mov
lea
call
push
mov
mov
push
call
test
jne
mov
mov
lea
push
push
call
fnclex
cmp
jge
push
push
push
push
call
mov
mov
mov
mov
mov
sub
mov
mov
mov
mov
mov
mov
mov
push
call
fnclex
test
jge
push
push
push
push
call
jmp
mov
mov
lea
push
push
call
fnclex
test
jge
push
push
push
push
mov
call
jmp
mov
mov
mov
mov
lea
push
push
call
fnclex
test
jge
push
push
push
push
call
xor
cmp
sete
neg
mov
lea
mov
call
test
je
call
push
lea
push
call
mov
mov
lea
push
push
call
fnclex
test
jge
push
push
push
push
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
lea
call
mov
mov
mov
mov
lea
push
lea
push
lea
push
push
lea
push
call
lea
call
lea
push
lea
push
lea
push
lea
push
push
call
add
call
push
jmp
lea
call
lea
call
lea
push
lea
push
lea
push
lea
push
push
call
add
ret
ret
mov
mov
push
call
mov
mov
mov
pop
pop
pop
mov
pop
ret
nop
push
mov
sub
push
mov
push
mov
sub
push
push
push
mov
mov
xor
mov
mov
push
mov
call
mov
mov
mov
mov
mov
lea
mov
push
push
call
cmp
fnclex
jge
mov
push
push
push
push
call
mov
mov
push
lea
push
call
push
jmp
test
je
lea
call
lea
call
ret
ret
mov
push
mov
call
mov
mov
mov
mov
mov
pop
pop
mov
pop
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
mov
push
mov
sub
push
push
push
mov
mov
xor
mov
mov
push
mov
call
mov
mov
mov
mov
mov
mov
mov
lea
push
push
call
mov
push
push
call
cmp
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
lea
call
mov
lea
push
push
call
lea
call
mov
lea
push
push
mov
call
mov
push
call
sub
mov
mov
mov
mov
push
mov
mov
mov
mov
mov
mov
call
cmp
fnclex
jge
push
push
push
push
call
push
jmp
lea
call
lea
call
ret
ret
mov
push
mov
call
mov
mov
pop
pop
mov
pop
mov
pop
ret
nop
nop
nop
nop
push
mov
sub
push
mov
push
mov
sub
push
push
push
mov
mov
xor
mov
mov
push
mov
call
mov
mov
mov
mov
mov
lea
mov
push
push
call
cmp
fnclex
jge
mov
push
push
push
push
call
mov
mov
push
lea
push
call
push
jmp
test
je
lea
call
lea
call
ret
ret
mov
push
mov
call
mov
mov
mov
mov
mov
pop
pop
mov
pop
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
mov
push
mov
sub
push
push
push
mov
mov
xor
mov
mov
push
mov
call
mov
lea
mov
mov
mov
mov
mov
mov
push
push
call
cmp
fnclex
jge
mov
push
push
push
push
call
mov
lea
push
push
mov
call
mov
xor
mov
mov
and
cmp
mov
sete
sub
mov
mov
neg
mov
mov
mov
mov
mov
mov
push
mov
mov
push
mov
call
lea
call
mov
xor
and
cmp
mov
sete
neg
sub
mov
mov
mov
mov
push
mov
mov
mov
mov
mov
mov
push
mov
call
lea
call
mov
xor
and
mov
cmp
mov
sete
sub
mov
neg
mov
mov
mov
mov
push
mov
mov
mov
mov
push
mov
call
lea
call
push
lea
push
call
mov
lea
call
mov
lea
push
push
call
lea
call
mov
lea
push
push
mov
call
sub
mov
mov
mov
mov
mov
mov
mov
mov
push
mov
mov
mov
mov
call
test
fnclex
jge
push
push
push
push
call
mov
push
call
push
jmp
lea
call
lea
call
ret
lea
call
ret
mov
push
mov
call
mov
mov
pop
pop
mov
pop
mov
pop
ret
push
mov
sub
push
mov
push
mov
sub
push
push
push
mov
mov
xor
mov
mov
push
mov
call
mov
lea
mov
mov
mov
push
push
mov
call
cmp
fnclex
jge
mov
push
push
push
push
call
mov
mov
push
push
lea
push
push
call
add
push
call
mov
call
mov
lea
imul
jo
call
lea
call
mov
lea
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
mov
push
push
lea
push
push
call
add
push
call
mov
call
imul
jo
lea
or
call
lea
call
mov
lea
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
mov
push
push
lea
push
push
call
add
push
call
mov
call
imul
jo
lea
or
call
lea
call
movsx
mov
push
jmp
lea
call
lea
call
ret
ret
mov
push
mov
call
mov
mov
mov
mov
mov
pop
pop
mov
pop
mov
pop
ret
call
nop
nop
nop
nop
nop
push
mov
sub
push
mov
push
mov
sub
push
push
push
mov
mov
xor
mov
mov
push
mov
call
mov
lea
mov
mov
mov
push
push
mov
call
cmp
fnclex
jge
mov
mov
push
push
push
push
call
jmp
mov
mov
mov
mov
cmp
je
mov
push
push
mov
call
cmp
fnclex
jge
mov
push
push
push
push
call
mov
cmp
je
cmp
jne
mov
lea
push
push
mov
call
cmp
fnclex
jge
mov
push
push
push
push
call
mov
mov
lea
mov
push
push
call
cmp
fnclex
jge
push
push
push
push
call
mov
push
mov
call
sub
mov
mov
mov
mov
push
mov
mov
mov
mov
mov
mov
call
test
fnclex
jge
push
push
push
push
call
mov
push
mov
call
mov
mov
pop
pop
mov
pop
mov
pop
ret
push
mov
sub
push
mov
push
mov
sub
push
push
push
mov
mov
xor
mov
mov
push
mov
call
mov
lea
mov
push
mov
push
mov
call
cmp
fnclex
jge
mov
push
push
push
push
call
mov
mov
mov
push
mov
call
mov
mov
mov
mov
mov
pop
pop
mov
pop
mov
pop
ret
nop
push
mov
sub
push
mov
push
mov
sub
push
push
push
mov
mov
xor
mov
mov
push
mov
call
mov
mov
cmp
mov
mov
mov
mov
je
cmp
jne
cmp
je
mov
mov
lea
mov
push
push
call
cmp
fnclex
jge
jmp
mov
mov
lea
mov
push
push
call
cmp
fnclex
jge
push
push
push
push
call
mov
lea
call
mov
lea
push
push
call
lea
call
mov
push
call
sub
mov
mov
mov
mov
push
mov
mov
mov
mov
mov
mov
call
cmp
fnclex
jge
push
push
push
push
call
push
jmp
lea
call
ret
ret
mov
push
mov
call
mov
mov
pop
pop
mov
pop
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
mov
push
mov
sub
push
push
push
mov
mov
xor
mov
mov
push
mov
call
mov
mov
mov
mov
push
mov
call
mov
mov
mov
mov
mov
pop
pop
mov
pop
mov
pop
ret
nop
nop
nop
nop
nop
nop
push
mov
sub
push
mov
push
mov
sub
push
push
push
mov
mov
xor
mov
mov
push
mov
call
mov
mov
cmp
mov
je
cmp
jne
cmp
jle
mov
mov
mov
lea
push
push
mov
call
cmp
fnclex
jge
push
push
push
push
call
mov
mov
mov
mov
mov
mov
lea
call
mov
lea
push
push
call
lea
call
cmp
je
mov
push
call
sub
mov
mov
mov
mov
push
mov
mov
mov
mov
mov
mov
call
cmp
fnclex
jge
push
push
push
push
call
push
jmp
lea
call
ret
ret
mov
push
mov
call
mov
mov
pop
pop
mov
pop
mov
pop
ret
nop
push
mov
sub
push
mov
push
mov
sub
push
push
push
mov
mov
xor
mov
mov
push
mov
call
mov
mov
mov
mov
push
mov
call
mov
mov
mov
mov
mov
pop
pop
mov
pop
mov
pop
ret
nop
nop
nop
nop
nop
nop
push
mov
sub
push
mov
push
mov
sub
push
push
push
mov
mov
xor
mov
mov
push
mov
call
mov
xor
mov
mov
mov
mov
cmp
setle
xor
cmp
setge
test
je
mov
mov
cmp
je
cmp
jne
cmp
jle
mov
mov
jmp
mov
mov
mov
lea
push
push
call
cmp
fnclex
jge
push
push
push
push
call
mov
mov
mov
lea
call
mov
lea
push
push
call
lea
call
mov
push
call
sub
mov
mov
mov
mov
push
mov
mov
mov
mov
mov
mov
call
cmp
fnclex
jge
push
push
push
push
call
push
jmp
lea
call
ret
ret
mov
push
mov
call
mov
mov
pop
pop
mov
pop
mov
pop
ret
nop
nop
nop
nop
push
mov
sub
push
mov
push
mov
sub
push
push
push
mov
mov
xor
mov
mov
push
mov
call
mov
mov
mov
mov
push
mov
call
mov
mov
mov
mov
mov
pop
pop
mov
pop
mov
pop
ret
nop
nop
nop
nop
nop
nop
push
mov
sub
push
mov
push
mov
sub
push
push
push
mov
mov
xor
mov
mov
push
mov
call
mov
lea
push
push
mov
mov
mov
mov
mov
call
cmp
fnclex
jge
mov
push
push
push
push
call
jmp
mov
mov
lea
push
push
mov
mov
call
test
fnclex
jge
push
push
push
push
call
mov
mov
xor
cmp
sete
neg
or
lea
call
test
jne
mov
lea
push
push
mov
call
test
jge
push
push
push
push
call
mov
lea
mov
push
push
mov
mov
call
test
fnclex
jge
push
push
push
push
call
mov
lea
push
push
mov
call
xor
cmp
fnclex
jge
push
push
push
push
call
mov
lea
push
push
mov
call
cmp
fnclex
jge
push
push
push
push
call
mov
lea
push
push
mov
call
cmp
fnclex
jge
push
push
push
push
call
mov
lea
push
push
call
cmp
fnclex
jge
push
push
push
push
call
mov
mov
mov
lea
call
mov
lea
push
push
call
lea
call
mov
lea
push
push
mov
call
cmp
jge
push
push
push
push
call
sub
mov
mov
mov
mov
push
mov
mov
mov
mov
mov
mov
call
test
fnclex
jge
push
push
push
push
call
sub
mov
mov
mov
mov
push
mov
mov
mov
mov
mov
mov
call
test
fnclex
jge
push
push
push
push
call
push
jmp
lea
call
lea
call
ret
ret
mov
push
mov
call
mov
mov
pop
pop
mov
pop
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
mov
push
mov
sub
push
push
push
mov
mov
xor
mov
mov
push
mov
call
mov
mov
mov
push
mov
call
mov
mov
mov
mov
mov
pop
pop
mov
pop
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
mov
push
mov
sub
push
push
push
mov
mov
xor
mov
mov
push
mov
call
mov
mov
mov
mov
cmp
mov
je
cmp
jne
cmp
je
mov
mov
jmp
mov
mov
sub
mov
mov
mov
mov
push
mov
mov
mov
mov
mov
mov
call
cmp
fnclex
jge
mov
push
push
push
push
call
jmp
mov
mov
cmp
je
cmp
jne
mov
lea
push
push
mov
call
cmp
fnclex
jge
mov
push
push
push
push
call
sub
mov
mov
mov
mov
mov
mov
mov
mov
push
mov
mov
mov
mov
call
xor
cmp
fnclex
jge
push
push
push
push
call
mov
lea
push
push
call
cmp
fnclex
jge
push
push
push
push
call
mov
mov
lea
mov
push
push
call
cmp
fnclex
jge
push
push
push
push
call
mov
mov
lea
mov
call
mov
lea
push
push
call
lea
call
sub
mov
mov
mov
mov
push
mov
mov
mov
mov
mov
mov
call
test
fnclex
jge
push
push
push
push
call
push
jmp
lea
call
ret
ret
mov
push
mov
call
mov
mov
pop
pop
mov
pop
mov
pop
ret
nop
nop
nop
nop
push
mov
sub
push
mov
push
mov
sub
push
push
push
mov
mov
xor
mov
mov
push
mov
call
mov
mov
mov
mov
push
mov
call
mov
mov
mov
mov
mov
pop
pop
mov
pop
mov
pop
ret
nop
nop
nop
nop
nop
nop
push
mov
sub
push
mov
push
mov
sub
push
push
push
mov
mov
xor
mov
mov
push
mov
call
mov
mov
mov
mov
mov
cmp
je
sub
mov
mov
mov
mov
mov
mov
mov
push
mov
mov
mov
mov
call
cmp
fnclex
jge
mov
push
push
push
push
call
jmp
mov
mov
lea
push
push
mov
call
cmp
fnclex
jge
mov
push
push
push
push
call
mov
mov
mov
cmp
je
mov
cmp
jne
mov
jmp
cmp
jne
mov
mov
lea
push
push
call
cmp
fnclex
jge
push
push
push
push
call
mov
sub
mov
mov
mov
mov
mov
mov
mov
push
mov
mov
mov
mov
call
test
fnclex
jge
push
push
push
push
call
mov
push
mov
call
mov
mov
pop
pop
mov
pop
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
mov
push
mov
sub
push
push
push
mov
mov
xor
mov
mov
push
mov
call
mov
mov
mov
mov
push
mov
call
mov
mov
mov
mov
mov
pop
pop
mov
pop
mov
pop
ret
nop
nop
nop
nop
nop
nop
push
mov
sub
push
mov
push
mov
sub
push
push
push
mov
mov
xor
mov
mov
push
mov
call
mov
mov
mov
mov
mov
mov
cmp
je
mov
mov
cmp
je
mov
cmp
jne
mov
jmp
cmp
jne
mov
mov
lea
push
push
call
cmp
fnclex
jge
push
push
push
push
call
mov
mov
mov
lea
call
mov
lea
push
push
call
lea
call
sub
mov
mov
mov
mov
push
mov
mov
mov
mov
mov
mov
call
cmp
fnclex
jge
push
push
push
push
call
push
jmp
lea
call
ret
ret
mov
push
mov
call
mov
mov
pop
pop
mov
pop
mov
pop
ret
nop
nop
nop
nop
push
mov
sub
push
mov
push
mov
sub
push
push
push
mov
mov
xor
mov
mov
push
mov
call
mov
mov
mov
mov
push
mov
call
mov
mov
mov
mov
mov
pop
pop
mov
pop
mov
pop
ret
nop
nop
nop
nop
nop
nop
push
mov
sub
push
mov
push
mov
sub
push
push
push
mov
mov
xor
mov
mov
push
mov
call
mov
lea
mov
push
mov
push
mov
call
cmp
fnclex
jge
mov
push
push
push
push
call
mov
mov
mov
push
mov
call
mov
mov
mov
mov
mov
pop
pop
mov
pop
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
mov
push
mov
sub
push
push
push
mov
mov
xor
mov
mov
push
mov
call
mov
lea
mov
push
mov
push
mov
call
cmp
fnclex
jge
mov
push
push
push
push
call
mov
mov
mov
push
mov
call
mov
mov
mov
mov
mov
pop
pop
mov
pop
mov
pop
ret
nop
push
mov
sub
push
mov
push
mov
sub
push
push
push
mov
mov
xor
mov
mov
push
mov
call
mov
push
mov
call
mov
push
mov
call
mov
mov
pop
pop
mov
pop
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
mov
push
mov
sub
push
push
push
mov
mov
mov
mov
push
mov
call
mov
mov
mov
cmp
jne
mov
push
call
test
jge
push
push
push
push
call
mov
push
mov
call
mov
mov
pop
pop
mov
pop
mov
pop
ret
nop
nop
nop
nop
nop
nop
push
mov
sub
push
mov
push
mov
sub
push
push
push
mov
mov
mov
xor
push
lea
push
push
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
push
lea
push
push
call
mov
cmp
je
mov
cmp
ja
jmp
lea
lea
mov
mov
mov
lea
lea
push
push
lea
lea
push
push
push
call
jmp
lea
lea
mov
mov
mov
lea
lea
push
push
lea
lea
push
push
push
call
jmp
lea
lea
mov
mov
mov
lea
lea
push
push
lea
lea
push
push
push
call
jmp
lea
lea
mov
mov
mov
lea
lea
push
push
lea
lea
push
push
push
call
jmp
lea
lea
mov
mov
mov
lea
lea
push
push
lea
lea
push
push
push
call
jmp
lea
lea
mov
mov
mov
lea
lea
push
push
lea
lea
push
push
push
call
jmp
lea
lea
mov
mov
mov
lea
lea
push
push
lea
lea
push
push
push
call
jmp
lea
lea
mov
mov
mov
lea
lea
push
push
lea
lea
push
push
push
call
mov
mov
lea
mov
lea
push
push
mov
mov
call
lea
lea
push
push
mov
call
cmp
je
mov
lea
push
push
mov
call
cmp
jle
mov
lea
cmp
ja
jmp
cmp
je
mov
and
cmp
je
mov
mov
cmp
je
mov
mov
mov
lea
lea
push
push
push
call
mov
mov
cmp
jne
cmp
jne
push
push
push
push
call
mov
mov
call
mov
mov
lea
mov
mov
push
push
call
test
fnclex
jge
jmp
mov
and
cmp
jne
cmp
jne
mov
mov
jmp
mov
mov
cmp
je
cmp
je
lea
mov
lea
push
push
lea
lea
push
push
lea
lea
push
push
push
mov
mov
mov
mov
call
mov
mov
mov
cmp
je
mov
push
call
mov
call
mov
mov
lea
mov
push
push
call
test
fnclex
jge
mov
push
push
push
push
call
mov
mov
push
push
push
push
push
call
call
mov
mov
cmp
je
cmp
je
push
call
call
push
call
call
xor
mov
push
mov
call
cmp
fnclex
jge
mov
push
push
push
push
call
push
mov
lea
lea
push
push
mov
call
lea
lea
push
push
mov
call
ret
cmp
jne
mov
and
cmp
je
mov
mov
jmp
cmp
jne
push
push
push
push
call
mov
mov
call
mov
mov
lea
mov
mov
push
push
call
test
fnclex
jge
mov
push
push
push
push
call
mov
push
push
call
call
xor
jmp
mov
pop
pop
xor
mov
pop
mov
pop
ret
lea
jmp
mov
dec
add
dec
add
mov
dec
add
movs
dec
add
dec
add
dec
add
dec
add
movs
dec
add
nop
nop
nop
push
mov
sub
push
mov
push
mov
sub
push
push
push
mov
mov
xor
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
push
push
call
fnclex
cmp
jge
push
push
push
push
call
push
lea
push
call
push
mov
push
call
push
call
mov
mov
call
mov
call
mov
lea
push
lea
push
push
call
add
push
call
mov
cmp
je
cmp
jle
cmp
je
push
lea
push
call
push
call
mov
lea
call
mov
mov
mov
cmp
jg
mov
lea
push
push
call
fnclex
test
jge
push
push
push
push
call
push
mov
push
call
mov
lea
call
push
call
mov
lea
call
push
lea
push
call
push
mov
push
call
push
call
mov
call
mov
mov
lea
push
lea
push
lea
push
lea
push
push
call
add
mov
cmp
je
push
lea
push
lea
push
call
call
mov
mov
mov
lea
push
push
call
fnclex
test
jge
push
push
mov
push
push
call
mov
push
lea
push
lea
push
call
call
mov
add
jo
mov
jmp
mov
mov
movsx
cmp
je
cmp
je
cmp
jne
mov
cmp
jg
mov
mov
lea
push
push
call
fnclex
test
jge
push
push
mov
push
push
call
push
push
call
mov
lea
call
push
call
mov
lea
call
push
lea
push
call
push
mov
push
call
push
call
mov
call
mov
mov
lea
push
lea
push
lea
push
lea
push
push
call
add
push
lea
push
lea
push
call
call
mov
mov
lea
push
push
call
fnclex
test
jge
push
push
mov
push
push
call
or
cmp
jne
mov
add
jo
mov
mov
push
lea
push
lea
push
call
call
mov
add
jo
mov
jmp
mov
lea
push
push
call
fnclex
test
jge
push
push
push
push
call
mov
mov
add
jo
movsx
push
push
lea
push
call
push
mov
push
call
push
call
call
lea
push
lea
push
push
call
add
mov
lea
push
push
call
fnclex
test
jge
push
push
push
push
call
push
lea
push
call
push
call
push
push
mov
mov
add
jo
push
call
mov
lea
call
push
call
mov
lea
call
push
lea
push
call
push
mov
push
call
push
call
call
lea
push
lea
push
lea
push
lea
push
push
call
add
jmp
push
lea
push
call
push
call
mov
lea
call
mov
cmp
mov
mov
lea
push
push
jg
call
fnclex
test
jge
push
push
mov
push
push
call
push
push
call
mov
lea
call
push
call
mov
lea
call
push
lea
push
call
push
mov
push
call
push
call
mov
call
mov
mov
lea
push
lea
push
lea
push
lea
push
push
call
add
mov
cmp
jne
mov
jmp
cmp
je
mov
mov
lea
push
push
call
fnclex
test
jge
push
push
mov
push
push
call
mov
push
push
push
call
mov
lea
call
push
call
mov
lea
call
push
lea
push
call
push
mov
push
call
push
call
call
lea
push
lea
push
lea
push
lea
push
push
call
add
mov
add
jo
mov
jmp
call
fnclex
test
jge
push
push
mov
push
push
call
push
sub
jo
push
call
mov
lea
call
push
call
mov
lea
call
push
lea
push
mov
call
push
mov
push
call
push
call
call
lea
push
lea
push
lea
push
lea
push
push
call
add
mov
cmp
jne
mov
mov
lea
push
push
call
fnclex
test
jge
push
push
push
push
call
push
lea
push
call
push
mov
push
call
push
call
call
lea
push
lea
push
push
call
add
call
push
jmp
mov
mov
lea
push
push
call
fnclex
test
jge
push
push
mov
push
push
call
sub
jo
movsx
push
push
lea
push
call
push
mov
push
call
push
call
jmp
call
push
lea
push
call
mov
mov
lea
push
push
call
fnclex
test
jge
push
push
push
push
call
lea
push
lea
push
push
call
add
lea
call
call
push
jmp
lea
push
lea
push
lea
push
lea
push
push
call
add
lea
call
ret
lea
call
ret
mov
mov
mov
xor
mov
mov
pop
pop
pop
mov
pop
ret
call
nop
nop
nop
sub
push
push
xor
push
mov
mov
mov
xor
mov
push
cmp
mov
mov
mov
mov
je
call
lea
push
call
mov
call
mov
mov
push
push
call
mov
call
mov
lea
push
push
mov
call
mov
cmp
fnclex
jge
mov
push
push
push
push
call
mov
mov
cmp
je
mov
lea
push
push
mov
call
cmp
fnclex
jge
mov
push
push
push
push
call
mov
mov
mov
push
push
call
call
sub
mov
mov
and
lea
push
mov
mov
push
push
mov
mov
mov
mov
mov
mov
mov
call
mov
add
mov
push
call
pop
pop
pop
xor
pop
add
ret
nop
nop
nop
nop
nop
push
mov
sub
push
mov
push
mov
sub
push
push
push
mov
mov
mov
xor
mov
mov
mov
mov
mov
xor
mov
xor
mov
mov
mov
mov
mov
xor
mov
mov
dec
mov
mov
cmp
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
ja
jmp
mov
lea
push
push
call
cmp
fnclex
jge
push
push
push
push
call
fld
fild
fstp
fsub
fnstsw
test
jne
call
mov
mov
imul
mov
shr
add
mov
mov
add
jo
mov
jmp
mov
mov
imul
mov
shr
add
sub
lea
jo
add
push
jo
mov
mov
push
call
cmp
fnclex
jge
push
push
push
push
call
fld
call
lea
mov
mov
push
push
call
cmp
fnclex
jge
push
push
push
push
call
fld
fild
fstp
fsub
fnstsw
test
jne
call
mov
jmp
mov
mov
imul
mov
shr
add
sub
lea
jo
add
push
jo
mov
mov
push
call
cmp
fnclex
jge
push
push
push
push
call
fld
fild
fstp
fsub
fnstsw
test
jne
call
mov
mov
imul
mov
mov
shr
add
mov
mov
add
jo
mov
sub
jo
mov
jmp
mov
mov
sub
jo
mov
jmp
mov
mov
lea
mov
push
push
call
cmp
fnclex
jge
push
push
push
push
call
fld
call
mov
mov
mov
add
jo
test
jle
mov
cmp
jge
mov
cmp
ja
jmp
movsx
mov
mov
jmp
movsx
mov
mov
jmp
movsx
mov
jmp
movsx
mov
mov
mov
push
call
test
je
mov
push
push
push
push
push
push
call
mov
lea
call
mov
mov
call
imul
jo
movsx
mov
mov
sub
jo
sub
lea
push
push
jo
mov
call
test
fnclex
jge
push
push
push
push
call
fld
fsub
mov
xor
fnstsw
test
jne
cmp
setg
neg
xor
cmp
fstp
sete
neg
and
call
imul
jo
movsx
mov
fild
fstp
fld
fsub
fnstsw
test
jne
call
mov
mov
lea
push
push
push
call
mov
push
lea
push
push
call
push
mov
push
call
call
mov
lea
push
push
call
lea
call
mov
test
je
mov
mov
add
jo
add
mov
jo
mov
jmp
mov
mov
push
call
test
je
lea
lea
push
push
push
call
mov
sub
je
dec
je
dec
jne
mov
test
jle
cmp
jne
mov
mov
mov
add
jo
add
mov
jo
sub
push
jo
cdq
sub
sar
add
jo
add
jo
add
jo
push
jmp
mov
test
jle
cmp
jne
mov
mov
add
mov
jo
add
push
jo
sub
jo
cdq
sub
mov
sar
add
lea
jo
push
push
jmp
mov
mov
mov
add
jo
sub
mov
jo
sub
push
jo
cdq
sub
mov
sar
add
jo
add
jo
push
jmp
mov
xor
test
setg
imul
push
jo
call
mov
mov
sub
mov
jo
sub
jo
movsx
sub
jo
sub
jo
push
jmp
mov
xor
test
setg
imul
push
jo
call
mov
mov
add
jo
movsx
add
jo
add
jo
push
lea
push
call
call
mov
mov
add
jo
test
jle
mov
cmp
ja
jmp
mov
add
jo
mov
jmp
mov
push
call
test
je
mov
mov
sub
jo
sub
jo
mov
jmp
mov
push
call
test
je
mov
add
jo
mov
jmp
mov
mov
sub
jo
sub
jo
mov
jmp
mov
mov
sub
jo
sub
jo
mov
jmp
mov
lea
push
push
call
test
fnclex
jge
push
push
push
push
call
mov
mov
fld
add
jo
mov
fild
fstp
fsub
fnstsw
test
jne
call
cdq
sub
lea
sar
mov
add
jo
add
jo
push
push
push
jmp
mov
lea
push
push
call
test
fnclex
jge
push
push
push
push
call
mov
mov
fld
add
jo
mov
fild
fstp
fsub
fnstsw
test
jne
call
mov
cdq
sub
lea
sar
add
jo
add
jo
mov
sub
jo
sub
jo
push
push
push
call
call
cmp
jge
mov
lea
push
push
call
test
fnclex
jge
push
push
push
push
call
fld
fild
mov
fstp
fsub
fnstsw
test
jne
call
cdq
sub
lea
sar
push
push
push
call
call
mov
lea
push
push
call
test
fnclex
jge
push
push
push
push
call
movsx
mov
fild
fstp
fld
fsub
fnstsw
test
jne
call
cdq
sub
mov
mov
sar
mov
jmp
movsx
mov
sub
mov
jo
cdq
sub
mov
sar
add
jo
mov
movsx
mov
add
jo
add
mov
mov
jo
mov
jmp
mov
lea
push
push
call
test
fnclex
jge
mov
push
push
push
push
call
jmp
mov
fld
fild
fstp
fsub
fnstsw
test
jne
call
cdq
sub
lea
sar
push
push
push
call
call
mov
mov
cmp
jge
mov
mov
mov
add
jo
cmp
jge
add
jo
mov
mov
mov
sub
jo
cmp
jle
mov
sub
jo
mov
mov
lea
push
push
call
test
fnclex
jge
push
push
push
push
call
fild
fstp
fld
fsub
fnstsw
test
jne
call
fcomp
fnstsw
test
je
mov
jmp
xor
neg
test
je
mov
lea
push
push
call
test
fnclex
jge
push
push
push
push
call
fld
fsub
fnstsw
test
jne
call
mov
lea
lea
push
push
push
call
mov
cmp
jge
mov
mov
cmp
jge
mov
mov
mov
add
jo
cmp
jge
add
jo
mov
mov
mov
sub
jo
cmp
jle
sub
jo
mov
mov
lea
push
push
call
test
fnclex
jge
push
push
push
push
call
fild
fstp
fld
fsub
fnstsw
test
jne
call
fcomp
fnstsw
test
je
mov
jmp
xor
neg
test
je
mov
lea
push
push
call
test
fnclex
jge
push
push
push
push
call
fld
fsub
fnstsw
test
jne
call
mov
jmp
cmp
mov
jne
cmp
jne
mov
lea
push
push
call
test
fnclex
jge
push
push
push
push
call
mov
lea
push
push
call
test
fnclex
jge
push
push
push
push
call
fld
fsub
mov
fnstsw
test
jne
call
fld
fsub
push
fnstsw
test
jne
call
push
push
lea
push
push
jmp
mov
lea
push
push
call
test
fnclex
jge
push
push
push
push
call
mov
lea
push
push
call
test
fnclex
jge
push
push
push
push
call
fld
fsub
mov
fnstsw
test
jne
call
fld
fsub
push
fnstsw
test
jne
call
push
push
lea
push
push
call
call
mov
mov
jmp
cmp
jle
mov
lea
push
push
call
test
fnclex
jge
push
push
push
push
call
mov
lea
push
push
call
test
fnclex
jge
push
push
push
push
call
fld
mov
call
fld
push
call
push
push
lea
push
push
call
call
jmp
mov
mov
add
jo
test
jle
mov
lea
push
push
call
test
fnclex
jge
push
push
push
push
call
fld
fsub
fnstsw
test
jne
call
mov
mov
mov
mov
sub
lea
jo
mov
lea
push
push
lea
lea
push
push
push
call
mov
mov
sub
mov
jo
cdq
sub
lea
sar
add
mov
push
push
jo
mov
call
test
fnclex
jge
push
push
push
push
call
fld
fild
fstp
fsub
fnstsw
test
jne
call
mov
cdq
sub
mov
sar
add
mov
jo
mov
mov
mov
add
jo
mov
mov
lea
lea
push
push
push
call
mov
cmp
je
mov
mov
sub
mov
jo
mov
mov
mov
sub
jo
lea
mov
push
lea
lea
push
push
push
mov
call
fwait
push
jmp
lea
call
ret
lea
call
ret
mov
pop
pop
xor
mov
pop
mov
pop
ret
mov
aas
mov
add
mov
add
mov
add
mov
add
mov
add
dec
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
dec
add
mov
add
xor
call
nop
push
mov
sub
push
mov
push
mov
sub
push
push
push
mov
mov
mov
mov
xor
cmp
mov
mov
mov
mov
jne
cmp
jne
mov
lea
push
push
mov
call
cmp
fnclex
jge
mov
mov
push
push
push
push
call
jmp
mov
mov
push
call
mov
mov
call
mov
push
push
mov
call
call
push
call
mov
call
mov
mov
push
push
call
mov
call
mov
push
push
push
mov
call
mov
call
mov
mov
push
push
call
mov
call
mov
mov
jmp
mov
mov
mov
lea
call
mov
lea
push
push
call
lea
call
mov
test
jne
mov
lea
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
mov
lea
push
push
call
test
fnclex
jge
push
push
push
push
call
mov
lea
push
push
call
test
fnclex
jge
push
push
push
push
call
fld
mov
call
fld
push
call
mov
push
push
call
mov
call
mov
push
push
call
mov
call
mov
push
mov
fwait
jmp
mov
lea
push
push
mov
call
cmp
fnclex
jge
mov
mov
push
push
push
push
call
jmp
mov
mov
lea
push
push
call
cmp
fnclex
jge
push
push
push
push
call
mov
lea
push
push
call
cmp
fnclex
jge
push
push
push
push
call
mov
mov
fld
push
push
push
push
call
fld
push
call
mov
push
push
push
push
call
call
fwait
push
jmp
lea
call
ret
ret
mov
pop
pop
xor
mov
pop
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub
push
push
push
mov
mov
push
mov
or
xor
mov
mov
cmp
mov
je
mov
lea
push
mov
push
lea
push
push
lea
push
push
lea
mov
mov
mov
push
push
push
mov
mov
call
or
mov
xor
cmp
mov
sete
neg
mov
lea
lea
push
mov
push
lea
lea
push
mov
push
lea
push
push
lea
push
push
push
mov
mov
mov
mov
call
mov
mov
mov
push
mov
push
mov
push
push
push
call
call
pop
pop
pop
xor
pop
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
push
push
cmp
push
mov
je
mov
mov
sub
je
dec
je
dec
jne
mov
lea
push
mov
mov
push
push
call
mov
mov
push
mov
push
call
call
pop
pop
pop
xor
pop
pop
ret
mov
mov
mov
mov
push
mov
push
mov
push
call
mov
mov
call
mov
mov
push
mov
push
call
mov
call
push
call
call
pop
pop
pop
xor
pop
pop
ret
mov
mov
push
call
mov
mov
call
mov
mov
push
mov
push
call
mov
call
push
call
call
mov
cmp
je
mov
mov
push
mov
mov
mov
push
push
call
mov
call
mov
mov
push
push
jmp
mov
mov
mov
push
push
call
mov
mov
call
mov
push
call
call
mov
mov
push
push
call
mov
call
mov
push
call
call
pop
pop
pop
xor
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
test
jge
and
push
push
call
mov
call
mov
xor
mov
pop
ret
mov
mov
xor
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
mov
push
mov
mov
call
push
push
push
mov
mov
mov
mov
push
push
lea
push
call
mov
mov
lea
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
fld
call
mov
mov
push
mov
mov
push
call
call
mov
cmp
je
mov
mov
push
call
call
mov
mov
mov
cmp
je
mov
mov
push
call
call
mov
mov
mov
mov
mov
mov
mov
cmp
ja
mov
xor
mov
jmp
mov
cmp
je
mov
cmp
jne
jmp
push
call
mov
lea
push
mov
mov
mov
push
call
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
lea
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
lea
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
fld
call
mov
fld
call
mov
lea
push
lea
push
lea
push
lea
push
mov
mov
mov
push
call
cmp
jne
push
push
call
mov
jmp
mov
mov
mov
mov
lea
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
mov
mov
lea
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
cmp
jne
push
push
call
mov
jmp
mov
mov
mov
mov
lea
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
mov
mov
lea
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
fild
fstp
fld
fmul
fnstsw
test
jne
fstp
fld
push
fstp
fild
fstp
fld
fmul
fnstsw
test
jne
fstp
fld
push
fstp
mov
mov
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
mov
push
mov
push
call
mov
jmp
mov
lea
push
lea
push
push
call
add
lea
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
fld
call
mov
mov
mov
mov
lea
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
lea
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
fld
call
push
fld
call
push
push
push
call
mov
call
mov
mov
lea
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
lea
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
fld
call
mov
fld
call
mov
lea
push
lea
push
lea
push
mov
mov
mov
push
call
lea
push
mov
push
call
call
lea
push
mov
mov
push
call
call
mov
neg
add
jo
add
jo
push
mov
neg
add
jo
add
jo
push
mov
add
push
call
call
lea
push
mov
mov
push
call
call
mov
neg
add
jo
add
jo
push
mov
neg
add
jo
add
jo
push
mov
add
push
call
call
mov
cmp
jne
mov
mov
mov
mov
mov
push
push
mov
mov
mov
push
call
mov
mov
mov
jmp
lea
push
mov
add
push
mov
mov
mov
push
call
mov
push
call
mov
call
mov
mov
push
push
mov
push
mov
push
mov
mov
push
call
call
mov
push
call
call
mov
mov
push
mov
mov
push
call
call
jmp
lea
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
lea
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
fld
call
push
fld
call
push
push
push
call
mov
call
mov
mov
mov
cmp
je
mov
cmp
jge
mov
mov
mov
mov
mov
push
push
mov
mov
mov
push
call
mov
mov
mov
jmp
push
call
mov
call
mov
mov
push
push
mov
push
mov
push
mov
mov
push
call
call
mov
push
call
call
mov
mov
push
mov
mov
push
call
call
lea
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
lea
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
fld
fsub
fnstsw
test
jne
call
push
fld
fsub
fnstsw
test
jne
call
push
push
push
call
mov
call
mov
mov
mov
lea
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
lea
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
fld
fsub
fnstsw
test
jne
call
push
fld
fsub
fnstsw
test
jne
call
push
push
push
call
mov
call
mov
mov
mov
jmp
lea
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
lea
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
fld
fadd
fnstsw
test
jne
call
push
fld
fadd
fnstsw
test
jne
call
push
push
push
call
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
cmp
ja
mov
jmp
lea
push
call
test
jne
jmp
lea
push
call
test
jne
jmp
jmp
lea
push
call
test
jne
jmp
lea
push
call
test
jne
jmp
jmp
lea
push
mov
mov
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
mov
push
mov
push
call
mov
jmp
mov
movsx
test
je
lea
push
call
test
jne
jmp
lea
push
call
test
jne
jmp
jmp
lea
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
fld
fadd
cmp
jne
fdiv
jmp
push
call
fstp
fnstsw
test
jne
lea
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
fld
call
mov
fld
fmul
fnstsw
test
jne
call
mov
mov
sub
jo
cmp
jge
mov
add
jo
mov
jmp
lea
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
fild
fstp
fld
call
fcomp
fnstsw
test
jne
mov
jmp
mov
mov
neg
movsx
test
je
mov
lea
push
mov
mov
mov
push
call
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
lea
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
push
mov
push
call
mov
lea
call
movsx
test
je
mov
mov
mov
mov
lea
push
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
fild
fstp
mov
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
mov
push
mov
mov
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
mov
push
mov
push
call
mov
jmp
mov
jmp
lea
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
push
push
mov
push
lea
push
call
add
mov
mov
lea
push
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
fild
fstp
mov
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
mov
push
mov
mov
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
mov
push
mov
push
call
mov
jmp
mov
lea
call
lea
call
lea
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
fld
call
mov
mov
mov
mov
lea
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
fld
fild
fstp
fsub
fnstsw
test
jne
call
mov
mov
cmp
jae
mov
jmp
call
mov
mov
mov
mov
mov
cmp
jae
mov
jmp
call
mov
mov
mov
mov
mov
cmp
jae
mov
jmp
call
mov
mov
mov
mov
lea
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
mov
cmp
jae
mov
jmp
call
mov
fld
fadd
fnstsw
test
jne
call
mov
mov
mov
lea
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
mov
cmp
jae
mov
jmp
call
mov
fld
fadd
fnstsw
test
jne
call
mov
mov
mov
lea
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
mov
cmp
jae
mov
jmp
call
mov
fld
fadd
fnstsw
test
jne
call
mov
mov
mov
lea
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
mov
cmp
jae
mov
jmp
call
mov
fld
fadd
fnstsw
test
jne
call
mov
mov
mov
mov
cmp
jae
mov
jmp
call
mov
mov
mov
mov
mov
cmp
je
mov
cmp
jne
mov
cmp
jae
mov
jmp
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmp
je
mov
cmp
jne
mov
cmp
jae
mov
jmp
call
mov
mov
add
jo
mov
mov
mov
mov
mov
mov
mov
cmp
jae
mov
jmp
call
mov
push
push
mov
mov
lea
push
call
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
cmp
ja
mov
jmp
mov
cmp
jne
lea
push
call
test
jne
jmp
mov
cmp
jne
lea
push
call
test
jne
jmp
jmp
mov
cmp
jne
lea
push
call
test
jne
jmp
mov
cmp
jne
lea
push
call
test
jne
jmp
jmp
lea
push
mov
mov
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
mov
push
mov
push
call
mov
jmp
mov
movsx
test
je
mov
cmp
jne
lea
push
call
test
jne
jmp
mov
cmp
jne
lea
push
call
test
jne
jmp
lea
mov
lea
push
push
call
cmp
je
mov
push
call
call
lea
push
mov
mov
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
mov
push
mov
push
call
mov
jmp
mov
push
mov
push
mov
push
call
call
mov
cmp
jne
lea
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
fld
call
mov
mov
jmp
mov
cmp
jne
lea
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
lea
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
fld
fsub
fnstsw
test
jne
call
push
push
fld
call
push
push
call
mov
call
mov
mov
jmp
push
push
push
push
call
mov
call
mov
mov
push
mov
push
mov
push
mov
push
call
call
mov
push
call
call
lea
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
lea
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
fld
fsub
fnstsw
test
jne
call
push
push
fld
call
push
push
call
mov
call
mov
mov
push
mov
push
mov
push
mov
push
call
call
mov
push
call
call
lea
push
call
mov
cmp
jne
lea
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
lea
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
push
fld
fsub
fnstsw
test
jne
call
push
push
fld
call
push
call
mov
call
mov
mov
jmp
lea
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
lea
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
lea
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
lea
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
fld
fsub
fnstsw
test
jne
call
push
fld
fsub
fnstsw
test
jne
call
push
fld
call
push
fld
call
push
call
mov
call
mov
mov
push
mov
push
mov
push
mov
push
call
call
mov
push
call
call
lea
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
lea
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
push
fld
fsub
fnstsw
test
jne
call
push
push
fld
call
push
call
mov
call
mov
mov
push
mov
push
mov
push
mov
push
call
call
mov
push
call
call
lea
push
call
mov
cmp
jae
mov
jmp
call
mov
mov
mov
mov
mov
cmp
jae
mov
jmp
call
mov
mov
mov
mov
mov
cmp
jae
mov
jmp
call
mov
mov
mov
mov
mov
cmp
jae
mov
jmp
call
mov
mov
mov
mov
mov
cmp
jae
mov
jmp
call
mov
mov
mov
mov
mov
cmp
jae
mov
jmp
call
mov
mov
mov
mov
mov
cmp
jae
mov
jmp
call
mov
push
push
mov
mov
lea
push
call
mov
call
mov
mov
push
mov
push
mov
push
mov
push
call
call
mov
push
call
call
mov
cmp
jae
mov
jmp
call
mov
mov
mov
mov
lea
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
mov
cmp
jae
mov
jmp
call
mov
fld
call
mov
mov
mov
mov
cmp
jae
mov
jmp
call
mov
mov
mov
mov
lea
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
mov
cmp
jae
mov
jmp
call
mov
fld
call
mov
mov
mov
mov
cmp
jae
mov
jmp
call
mov
mov
mov
mov
lea
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
mov
cmp
jae
mov
jmp
call
mov
fld
fsub
fnstsw
test
jne
call
mov
mov
mov
mov
cmp
jae
mov
jmp
call
mov
push
push
mov
mov
lea
push
call
mov
call
mov
mov
push
mov
push
mov
push
mov
push
call
call
mov
push
call
call
lea
push
call
lea
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
mov
cmp
jae
mov
jmp
call
mov
fld
call
mov
mov
mov
mov
cmp
jae
mov
jmp
call
mov
mov
mov
mov
lea
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
mov
cmp
jae
mov
jmp
call
mov
fld
fsub
fnstsw
test
jne
call
mov
mov
mov
mov
cmp
jae
mov
jmp
call
mov
mov
mov
mov
lea
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
mov
cmp
jae
mov
jmp
call
mov
fld
call
mov
mov
mov
mov
cmp
jae
mov
jmp
call
mov
mov
mov
mov
mov
cmp
jae
mov
jmp
call
mov
push
push
mov
mov
lea
push
call
mov
call
mov
mov
push
mov
push
mov
push
mov
push
call
call
mov
push
call
call
lea
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
mov
cmp
jae
mov
jmp
call
mov
fld
call
mov
mov
mov
lea
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
mov
cmp
jae
mov
jmp
call
mov
fld
call
mov
mov
mov
lea
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
mov
cmp
jae
mov
jmp
call
mov
fld
fsub
fnstsw
test
jne
call
mov
mov
mov
lea
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
mov
cmp
jae
mov
jmp
call
mov
fld
call
mov
mov
mov
lea
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
mov
cmp
jae
mov
jmp
call
mov
fld
call
mov
mov
mov
lea
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
mov
cmp
jae
mov
jmp
call
mov
fld
fsub
fnstsw
test
jne
call
mov
mov
mov
mov
cmp
jae
mov
jmp
call
mov
push
push
mov
mov
lea
push
call
mov
call
mov
mov
push
mov
push
mov
push
mov
push
call
call
mov
push
call
call
lea
push
call
call
fwait
push
jmp
lea
push
lea
push
push
call
add
lea
call
ret
lea
mov
lea
push
push
call
lea
push
call
ret
xor
mov
mov
pop
pop
pop
mov
pop
ret
(bad)
ror
and
dec
add
(bad)
dec
add
aam
add
add
add
add
add
or
dec
add
ror
push
dec
add
ror
(bad)
ror
(bad)
ror
cmp
dec
add
dec
add
fisttp
xchg
loopne
add
loopne
add
xchg
repnz
call
int3
int3
int3
int3
push
mov
sub
push
mov
push
mov
sub
push
push
push
mov
mov
push
lea
push
push
mov
call
mov
mov
mov
fild
fstp
fild
fstp
fld
cmp
jne
fdiv
jmp
push
push
call
fstp
fnstsw
test
jne
mov
mov
fild
fstp
fild
fstp
fld
cmp
jne
fdiv
jmp
push
push
call
fstp
fnstsw
test
jne
mov
fld
fcomp
lea
fnstsw
test
je
mov
mov
mov
mov
mov
mov
fild
mov
fstp
fld
fmul
fnstsw
test
jne
call
mov
mov
mov
fild
fstp
fld
fmul
fnstsw
test
jne
call
mov
lea
mov
mov
lea
push
push
call
fwait
push
lea
lea
push
push
mov
call
ret
mov
pop
pop
xor
mov
pop
mov
pop
ret
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
mov
push
mov
sub
push
push
push
mov
mov
mov
xor
mov
xor
mov
mov
mov
push
push
mov
mov
mov
mov
mov
call
test
jne
mov
cmp
je
push
call
mov
call
jmp
mov
cmp
jne
mov
lea
push
push
mov
call
cmp
fnclex
jge
mov
push
push
push
push
call
mov
push
call
mov
call
mov
mov
test
mov
je
mov
lea
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
mov
mov
mov
mov
push
mov
push
push
call
mov
call
mov
push
push
mov
call
mov
call
mov
mov
push
push
lea
push
push
mov
call
mov
mov
add
mov
mov
push
push
push
push
lea
push
push
call
push
push
push
push
call
call
lea
call
jmp
mov
push
push
lea
push
push
call
mov
mov
add
mov
mov
push
push
mov
push
lea
push
push
call
push
call
mov
call
mov
lea
mov
call
mov
push
push
call
mov
call
mov
mov
push
push
push
call
mov
call
mov
push
push
push
push
mov
call
mov
call
mov
mov
cdq
idiv
push
push
push
push
and
mov
call
call
mov
mov
cdq
idiv
push
push
push
push
and
mov
call
call
mov
mov
cdq
idiv
mov
and
mov
mov
test
je
mov
lea
push
push
call
test
fnclex
jge
push
push
push
push
call
mov
lea
push
push
call
test
fnclex
jge
push
push
push
push
call
fld
call
fld
push
call
push
push
push
call
mov
call
mov
mov
lea
mov
push
push
call
test
fnclex
jge
push
push
push
push
call
mov
lea
push
push
call
test
fnclex
jge
push
push
push
push
call
fld
call
fld
push
call
push
push
push
call
mov
call
mov
mov
mov
mov
xor
mov
mov
cmp
jg
mov
mov
mov
xor
mov
mov
cmp
jg
push
push
mov
push
call
mov
call
mov
push
push
push
push
mov
call
call
mov
mov
cdq
idiv
push
push
push
push
mov
and
call
call
mov
mov
cdq
idiv
push
push
push
push
mov
and
call
call
mov
mov
cdq
idiv
and
mov
mov
mov
sub
jo
xor
cmp
setl
add
jo
xor
cmp
mov
mov
setg
or
neg
sbb
neg
sub
jo
xor
cmp
mov
setl
or
neg
sbb
neg
add
jo
xor
cmp
setg
or
neg
sbb
mov
mov
neg
sub
jo
xor
cmp
setl
or
neg
sbb
neg
add
jo
xor
cmp
setg
or
jne
mov
mov
mov
mov
push
push
push
push
call
call
mov
or
cmp
jne
mov
mov
cmp
jne
mov
jmp
cmp
jle
mov
mov
mov
cmp
je
cmp
je
mov
mov
mov
add
jo
push
push
push
lea
push
push
call
call
mov
mov
mov
push
mov
push
push
push
call
mov
call
mov
mov
push
push
mov
mov
push
push
call
call
push
call
call
push
lea
push
push
call
call
mov
mov
mov
push
mov
push
push
push
call
mov
call
mov
mov
push
push
mov
mov
push
push
call
call
push
call
call
push
lea
push
push
call
call
mov
mov
mov
push
mov
push
push
push
call
mov
call
mov
mov
push
push
mov
mov
push
push
call
call
push
call
call
mov
mov
mov
mov
mov
add
mov
jo
mov
jmp
mov
add
jo
mov
mov
jmp
mov
mov
push
push
call
call
push
call
call
mov
mov
mov
mov
mov
mov
fwait
push
jmp
lea
call
ret
ret
mov
pop
pop
xor
mov
pop
mov
pop
ret
call
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
mov
push
mov
sub
push
push
push
mov
mov
push
lea
xor
push
push
mov
mov
mov
call
push
call
mov
mov
call
mov
push
mov
call
mov
call
mov
mov
mov
mov
push
push
call
call
mov
mov
mov
mov
mov
mov
test
mov
jne
mov
jmp
sub
jo
mov
mov
test
jne
mov
jmp
sub
jo
mov
mov
mov
test
jne
mov
mov
mov
jmp
sub
jo
mov
mov
test
jne
mov
mov
mov
jmp
mov
mov
sub
jo
mov
mov
xor
mov
mov
cmp
mov
mov
setle
xor
cmp
setle
test
jne
fild
mov
fstp
fild
fstp
fld
cmp
jne
fdiv
jmp
push
push
call
fstp
fnstsw
test
jne
fild
mov
fstp
fild
fstp
fld
cmp
jne
fdiv
jmp
push
push
call
fstp
fnstsw
test
jne
mov
fld
fcomp
fnstsw
test
je
mov
mov
mov
mov
fld
fild
fstp
fmul
fnstsw
test
jne
call
mov
mov
mov
fld
fild
fstp
fmul
fnstsw
test
jne
call
lea
mov
lea
push
push
mov
call
mov
push
push
push
call
mov
call
mov
mov
mov
lea
lea
push
push
push
call
mov
mov
push
mov
call
mov
call
mov
push
mov
call
mov
call
mov
push
call
mov
call
mov
mov
mov
mov
push
push
push
call
mov
call
mov
mov
mov
mov
mov
push
push
push
call
mov
call
mov
mov
mov
push
push
push
push
push
mov
call
mov
call
mov
mov
push
push
mov
call
mov
call
mov
mov
push
push
mov
call
mov
call
mov
mov
mov
push
push
mov
call
mov
call
mov
mov
push
push
mov
call
call
mov
mov
push
call
mov
call
mov
push
push
call
call
push
push
push
call
mov
call
push
call
call
mov
push
mov
mov
mov
push
push
mov
mov
mov
push
push
push
push
push
push
call
call
push
push
push
call
mov
call
push
call
call
mov
push
call
mov
call
mov
push
push
call
call
mov
push
call
mov
call
mov
push
push
call
call
mov
mov
push
mov
mov
push
mov
push
mov
push
push
push
push
push
push
call
call
mov
push
push
call
call
push
push
call
call
mov
mov
mov
push
push
push
push
push
push
push
push
push
call
call
push
push
call
call
push
push
call
call
mov
mov
mov
push
push
push
push
push
push
push
push
push
call
call
mov
mov
mov
push
push
mov
push
push
mov
push
push
mov
push
mov
push
push
push
push
call
call
mov
mov
mov
push
push
push
mov
mov
push
push
mov
push
push
push
push
push
push
call
call
mov
mov
push
push
push
push
push
mov
push
mov
mov
mov
push
mov
push
push
call
call
mov
push
push
call
mov
call
mov
push
call
call
mov
mov
push
push
call
mov
call
mov
push
call
call
mov
push
push
call
mov
call
mov
push
call
call
push
call
call
mov
push
call
call
push
call
call
mov
push
call
call
fwait
push
lea
lea
push
push
mov
call
ret
mov
pop
pop
xor
mov
pop
mov
pop
ret
jmp
call
nop
nop
nop
nop
push
mov
sub
push
mov
push
mov
sub
push
push
push
mov
mov
mov
xor
mov
xor
mov
mov
mov
mov
mov
mov
xor
mov
add
mov
jo
test
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
je
cmp
jne
mov
mov
mov
mov
mov
sub
mov
jo
sub
mov
mov
lea
jo
mov
push
lea
lea
push
push
push
call
jmp
mov
cmp
jle
mov
lea
push
push
call
cmp
fnclex
jge
push
push
push
push
call
mov
lea
push
push
call
cmp
fnclex
jge
push
push
push
push
call
fld
mov
call
fld
push
call
push
push
push
push
call
mov
call
mov
and
cmp
jne
push
push
push
call
call
jmp
mov
mov
mov
sub
mov
jo
mov
mov
lea
sub
push
push
jo
push
mov
call
mov
lea
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
cmp
je
mov
mov
jmp
mov
push
call
mov
call
mov
mov
mov
mov
mov
push
push
push
call
mov
call
mov
mov
push
push
mov
call
mov
call
mov
mov
mov
push
push
mov
mov
push
push
push
push
call
call
mov
mov
neg
neg
push
lea
push
push
call
call
cmp
jne
mov
push
push
lea
push
push
call
mov
mov
add
lea
push
push
push
push
push
push
call
mov
mov
push
mov
push
push
push
call
call
lea
call
jmp
lea
lea
push
push
lea
mov
lea
push
push
lea
push
lea
lea
push
push
push
mov
call
mov
lea
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
cmp
jne
mov
push
push
call
mov
call
mov
push
mov
call
mov
call
mov
mov
push
push
mov
call
mov
call
mov
mov
mov
push
push
mov
mov
push
push
mov
push
mov
push
mov
push
push
push
call
call
mov
mov
push
push
call
call
mov
mov
push
push
call
call
mov
mov
push
push
call
call
mov
push
call
call
mov
push
call
call
mov
push
call
call
fwait
push
jmp
lea
call
ret
ret
mov
pop
pop
xor
mov
pop
mov
pop
ret
call
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
mov
push
mov
sub
push
push
push
mov
mov
push
lea
push
push
mov
call
mov
mov
movsx
mov
and
add
jo
call
mov
mov
mov
mov
and
mov
fild
movsx
fstp
fld
cmp
jne
fdiv
jmp
push
push
call
mov
fild
fstp
fadd
fnstsw
test
jne
call
mov
mov
mov
cmp
je
mov
and
mov
fild
fstp
fld
cmp
jne
fdiv
jmp
push
push
call
fnstsw
test
jne
call
mov
mov
mov
movsx
movsx
imul
mov
jo
imul
mov
sar
mov
shr
add
add
jo
call
jmp
mov
and
mov
fild
movsx
fstp
fld
cmp
jne
fdiv
jmp
push
push
call
mov
fild
fstp
fadd
fnstsw
test
jne
call
mov
xor
mov
mov
cmp
jg
movsx
cmp
jb
call
mov
cmp
jle
cmp
jb
call
mov
mov
cmp
jb
call
mov
cmp
jge
cmp
jb
call
mov
mov
mov
cmp
jne
cmp
jb
call
cmp
jb
call
mov
mov
sub
jo
call
mov
mov
mov
add
jo
mov
jmp
mov
lea
movsx
imul
movsx
movsx
jo
add
lea
jo
imul
jo
add
push
jo
push
mov
mov
call
mov
cmp
jne
test
je
cmp
jne
mov
neg
mov
jne
mov
jmp
fwait
push
lea
lea
push
push
mov
call
ret
mov
mov
pop
pop
mov
mov
xor
mov
pop
mov
pop
ret
jmp
call
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
mov
push
mov
sub
push
push
push
mov
mov
mov
xor
lea
xor
rep
mov
lea
rep
mov
mov
mov
lea
mov
mov
mov
mov
rep
mov
lea
rep
mov
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
mov
mov
push
push
call
test
jne
mov
call
mov
mov
lea
mov
push
push
mov
call
cmp
fnclex
jge
mov
push
push
push
push
call
mov
mov
push
push
lea
push
push
call
add
push
call
mov
lea
call
push
push
call
mov
lea
call
push
call
mov
lea
call
lea
push
push
push
call
lea
lea
push
lea
push
push
push
call
add
lea
call
lea
call
cmp
jne
push
push
call
mov
lea
push
push
mov
mov
call
cmp
fnclex
jge
mov
push
push
push
push
call
mov
lea
push
push
mov
mov
call
cmp
fnclex
jge
mov
push
push
push
push
call
mov
lea
push
push
mov
call
cmp
fnclex
jge
mov
push
push
push
push
call
mov
push
push
lea
push
push
call
add
push
call
push
push
push
call
push
push
call
cmp
jne
fdiv
jmp
push
call
fnstsw
test
jne
call
mov
lea
lea
push
push
push
call
add
lea
call
mov
lea
push
push
mov
call
cmp
fnclex
jge
mov
push
push
push
push
call
mov
push
push
lea
push
push
call
add
push
call
movsx
mov
lea
call
lea
call
mov
lea
push
push
mov
call
cmp
fnclex
jge
mov
push
push
push
push
call
mov
push
push
lea
push
push
call
add
push
call
mov
call
mov
call
lea
mov
call
lea
call
mov
lea
push
push
mov
call
cmp
fnclex
jge
mov
push
push
push
push
call
mov
push
push
lea
push
push
call
add
push
call
mov
call
mov
call
lea
mov
call
lea
call
mov
lea
push
push
mov
call
cmp
fnclex
jge
mov
push
push
push
push
call
mov
push
push
lea
push
push
call
add
push
call
mov
call
mov
call
lea
mov
call
lea
call
cmp
je
lea
lea
push
push
push
call
push
call
mov
mov
call
lea
lea
push
push
push
call
mov
mov
push
push
call
mov
call
mov
push
call
call
fwait
push
jmp
lea
lea
push
push
push
call
push
call
mov
mov
call
lea
lea
push
push
push
call
mov
mov
push
push
call
mov
call
mov
push
mov
fwait
jmp
mov
push
push
call
test
jne
mov
push
mov
push
call
test
je
mov
cmp
je
push
call
call
mov
mov
fwait
push
jmp
mov
push
push
lea
push
push
call
add
lea
lea
push
push
push
call
push
call
mov
call
lea
call
cmp
jne
mov
push
push
lea
push
push
call
add
lea
lea
push
push
call
push
call
call
lea
call
mov
cmp
je
lea
push
push
push
call
call
mov
push
call
call
mov
cmp
je
push
call
call
mov
jmp
mov
mov
mov
mov
mov
fwait
push
jmp
mov
push
push
call
test
jne
mov
lea
push
mov
lea
push
push
call
mov
mov
lea
mov
lea
mov
lea
push
push
push
call
mov
mov
cmp
mov
jne
lea
mov
push
lea
lea
push
push
lea
lea
push
push
push
push
mov
mov
mov
mov
call
mov
lea
mov
mov
lea
push
push
lea
lea
push
push
lea
lea
push
push
push
mov
mov
mov
mov
mov
call
mov
lea
mov
mov
push
lea
lea
push
push
lea
lea
push
lea
push
push
push
mov
mov
mov
mov
call
mov
lea
mov
mov
lea
push
push
lea
lea
push
push
lea
lea
push
mov
mov
mov
mov
mov
push
push
call
mov
push
mov
fwait
jmp
cmp
jne
lea
mov
push
lea
lea
push
push
lea
lea
push
push
push
push
mov
mov
mov
mov
call
mov
lea
mov
mov
lea
push
push
lea
lea
push
push
lea
lea
push
push
push
mov
mov
mov
mov
call
mov
lea
mov
mov
push
lea
lea
push
push
lea
lea
push
push
push
push
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
lea
mov
lea
push
push
lea
lea
push
push
lea
lea
push
push
push
mov
mov
call
mov
mov
fwait
push
jmp
cmp
mov
mov
mov
jne
lea
mov
lea
push
push
lea
lea
push
push
lea
lea
push
push
push
mov
mov
call
mov
lea
mov
mov
mov
lea
push
lea
push
lea
push
lea
push
lea
push
push
push
mov
mov
mov
call
mov
push
mov
fwait
jmp
lea
lea
push
lea
push
push
push
call
lea
lea
push
push
push
call
add
lea
call
ret
lea
call
ret
mov
pop
pop
xor
mov
pop
mov
pop
ret
jmp
nop
nop
nop
nop
push
mov
sub
push
mov
push
mov
sub
push
push
push
mov
mov
mov
xor
mov
xor
mov
xor
mov
mov
mov
mov
cmp
mov
mov
mov
mov
mov
je
cmp
jg
mov
lea
push
push
mov
call
cmp
fnclex
jge
mov
mov
push
push
push
push
call
jmp
mov
mov
lea
push
push
call
mov
call
mov
mov
mov
mov
lea
mov
push
push
call
test
fnclex
jge
push
push
push
push
call
mov
push
call
fstp
fld
lea
push
call
push
call
call
lea
call
mov
mov
mov
sub
mov
jo
push
mov
sub
mov
jo
push
push
lea
push
push
call
call
mov
mov
and
cmp
jne
mov
and
cmp
je
mov
dec
cmp
ja
jmp
push
lea
push
push
jmp
push
push
jmp
push
lea
push
push
jmp
push
lea
push
push
jmp
push
jmp
push
lea
push
push
jmp
push
lea
push
push
jmp
push
push
lea
push
call
call
mov
lea
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
mov
mov
mov
push
push
mov
push
mov
push
push
push
call
call
mov
or
lea
mov
push
push
call
mov
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
mov
push
fwait
jmp
and
cmp
jne
cmp
je
mov
dec
cmp
ja
jmp
push
lea
push
push
jmp
push
push
jmp
push
lea
push
push
jmp
push
lea
push
push
jmp
push
jmp
push
lea
push
push
jmp
push
lea
push
push
jmp
push
push
lea
push
call
call
mov
lea
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
mov
mov
mov
push
push
mov
push
mov
push
push
push
call
call
and
fwait
push
jmp
lea
call
ret
ret
mov
mov
mov
pop
mov
pop
xor
mov
pop
mov
pop
ret
lea
xor
dec
add
pop
dec
add
dec
add
dec
add
add
dec
add
dec
add
add
sbb
cmp
dec
add
dec
add
add
dec
add
add
dec
add
dec
add
adc
nop
nop
nop
nop
nop
nop
sub
push
push
push
mov
push
mov
mov
xor
push
push
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
cmp
je
mov
mov
and
dec
neg
sbb
inc
neg
call
mov
mov
call
mov
xor
and
mov
cmp
sete
neg
mov
call
mov
call
cmp
je
mov
mov
jmp
movzx
mov
mov
mov
mov
cmp
mov
jge
mov
mov
cmp
jne
cmp
je
cmp
jne
cmp
jle
cmp
je
mov
mov
jmp
mov
mov
xor
cmp
mov
sete
movsx
neg
xor
cmp
setl
movsx
neg
and
mov
test
je
cmp
jne
mov
and
cmp
je
mov
mov
cmp
je
mov
lea
push
push
call
mov
cmp
fnclex
jge
push
push
push
push
call
mov
lea
push
push
call
cmp
fnclex
jge
push
push
push
push
call
mov
mov
fld
lea
lea
push
lea
push
push
push
mov
mov
mov
mov
call
fld
push
call
mov
push
push
lea
push
push
push
call
pop
pop
pop
xor
pop
add
ret
mov
cmp
jge
mov
mov
mov
mov
mov
push
push
push
call
pop
pop
pop
xor
pop
add
ret
mov
lea
push
push
mov
call
mov
cmp
fnclex
jge
mov
push
push
push
push
call
or
cmp
je
cmp
jle
cmp
jne
mov
lea
push
push
call
cmp
fnclex
jge
push
push
push
push
call
fld
call
xor
cmp
mov
jl
jmp
mov
mov
lea
push
push
call
cmp
fnclex
jge
push
push
push
push
call
mov
lea
push
push
call
cmp
fnclex
jge
push
push
push
push
call
fld
cmp
jne
fdiv
jmp
push
call
movsx
mov
mov
mov
mov
fchs
fild
fstp
fmul
fnstsw
test
jne
call
lea
lea
push
push
lea
lea
push
push
lea
lea
mov
mov
push
push
push
call
lea
lea
mov
push
push
mov
mov
lea
fld
add
push
jo
movsx
lea
mov
push
mov
mov
push
mov
call
mov
push
xor
push
lea
push
push
push
call
add
jo
cmp
jle
pop
pop
pop
xor
pop
add
ret
mov
lea
push
push
call
cmp
fnclex
jge
push
push
push
push
call
mov
lea
push
push
call
cmp
fnclex
jge
push
push
push
push
call
fld
mov
lea
lea
push
lea
push
lea
mov
mov
push
push
mov
mov
call
fld
push
call
push
push
lea
push
push
push
call
pop
pop
pop
xor
pop
add
ret
jmp
call
nop
nop
nop
sub
push
push
push
mov
lea
push
mov
xor
push
push
mov
mov
call
cmp
je
mov
xor
mov
pop
pop
pop
pop
add
ret
mov
mov
mov
mov
cmp
je
mov
and
cmp
je
mov
cmp
je
cmp
jne
cmp
jne
cmp
jne
mov
push
push
call
call
pop
pop
pop
xor
pop
add
ret
mov
cmp
jl
cmp
jg
cmp
jne
cmp
je
cmp
jne
push
push
push
push
call
mov
mov
call
mov
mov
lea
mov
push
push
call
test
fnclex
jge
mov
push
push
push
push
call
mov
push
push
call
call
cmp
jne
mov
lea
lea
push
push
push
call
mov
push
call
mov
call
jmp
push
call
mov
call
mov
mov
push
push
push
push
push
call
call
push
call
call
push
call
call
mov
mov
push
push
call
call
mov
pop
pop
pop
mov
xor
pop
add
ret
mov
call
mov
push
push
mov
call
mov
call
cmp
jne
cmp
je
mov
cmp
je
cmp
je
mov
push
push
push
mov
call
mov
mov
push
push
call
call
mov
mov
and
cmp
je
cmp
jne
mov
cmp
je
cmp
je
mov
mov
push
push
call
call
mov
push
push
push
mov
call
mov
mov
push
push
call
call
mov
jmp
mov
cmp
je
cmp
je
mov
mov
push
push
call
call
mov
jmp
cmp
jne
cmp
jne
cmp
jne
push
push
push
push
call
mov
call
mov
mov
lea
mov
push
push
call
test
fnclex
jge
mov
push
push
push
push
call
mov
push
push
call
call
cmp
jne
push
call
mov
call
mov
jmp
mov
lea
lea
push
push
push
call
mov
push
call
mov
call
mov
push
push
push
push
push
call
call
push
call
call
push
call
call
mov
mov
push
push
call
call
mov
mov
movsx
mov
pop
pop
pop
xor
pop
add
ret
nop
nop
nop
nop
push
mov
sub
push
mov
push
mov
sub
push
push
push
mov
mov
mov
xor
mov
mov
mov
xor
cmp
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
jle
cmp
jge
mov
xor
cmp
setne
neg
call
mov
xor
cmp
movsx
setne
neg
mov
call
movsx
mov
mov
mov
cmp
je
cmp
jne
mov
mov
neg
cmp
mov
jb
call
mov
lea
jmp
call
mov
mov
add
jo
imul
jo
sub
mov
jo
mov
mov
mov
lea
push
push
call
cmp
fnclex
jge
push
push
push
push
call
mov
cmp
je
cmp
jne
mov
mov
neg
cmp
mov
jb
call
mov
shl
mov
jmp
call
mov
fld
fsub
fnstsw
test
jne
call
mov
mov
mov
mov
mov
cmp
je
cmp
jne
mov
mov
sub
mov
cmp
mov
jb
call
mov
lea
jmp
call
mov
mov
imul
mov
jo
add
jo
mov
mov
cmp
je
cmp
jne
mov
mov
sub
mov
cmp
mov
jb
call
mov
lea
jmp
call
mov
mov
mov
mov
cmp
je
cmp
jne
mov
mov
mov
sub
cmp
jb
call
lea
jmp
call
mov
mov
sub
jo
imul
jo
add
mov
jo
mov
mov
mov
test
je
cmp
jne
mov
mov
mov
sub
cmp
jb
call
lea
jmp
call
mov
mov
lea
push
push
mov
mov
call
test
fnclex
jge
push
push
push
push
call
mov
test
je
cmp
jne
mov
mov
mov
sub
cmp
jb
call
shl
jmp
call
mov
fld
fsub
mov
fnstsw
test
jne
imul
jo
mov
fild
fstp
fsub
fnstsw
test
jne
call
mov
mov
lea
push
push
mov
mov
call
test
fnclex
jge
push
push
push
push
call
mov
test
je
cmp
jne
mov
mov
mov
sub
cmp
jb
call
shl
jmp
call
mov
fld
fsub
fnstsw
test
jne
call
mov
mov
mov
mov
test
je
cmp
jne
mov
mov
mov
sub
cmp
jb
call
lea
mov
jmp
mov
call
mov
mov
add
jo
imul
jo
sub
mov
jo
mov
mov
mov
lea
push
push
call
test
fnclex
jge
push
push
push
push
call
mov
test
je
cmp
jne
mov
mov
mov
sub
cmp
jb
call
shl
jmp
call
mov
fld
fsub
fnstsw
test
jne
call
mov
mov
mov
mov
mov
mov
cmp
mov
jg
test
je
cmp
jne
mov
mov
sub
jo
movsx
sub
mov
cmp
mov
jb
call
mov
lea
jmp
call
mov
push
push
push
mov
push
mov
lea
push
push
push
mov
mov
call
mov
mov
add
sub
jo
mov
mov
mov
lea
shl
mov
mov
mov
sub
call
mov
mov
or
mov
sub
lea
jo
mov
mov
shl
mov
mov
mov
sub
add
call
mov
mov
mov
mov
sub
lea
jo
mov
mov
sub
shl
add
call
mov
mov
add
mov
jo
mov
mov
sub
lea
shl
add
call
mov
mov
mov
mov
sub
lea
shl
add
call
mov
mov
mov
mov
lea
sub
shl
add
call
mov
lea
sub
push
jo
movsx
mov
lea
fild
fstp
mov
push
push
call
lea
push
push
call
mov
test
je
cmp
jne
mov
movsx
sub
mov
cmp
mov
jb
call
mov
lea
jmp
call
lea
mov
lea
push
lea
push
push
call
push
call
mov
mov
mov
mov
lea
lea
push
push
push
call
mov
add
test
je
cmp
jne
mov
mov
sub
jo
movsx
sub
mov
cmp
mov
jb
call
mov
lea
jmp
call
mov
push
push
push
mov
push
mov
lea
push
push
push
mov
mov
call
mov
mov
mov
add
mov
lea
shl
mov
mov
mov
sub
call
mov
mov
mov
lea
mov
shl
mov
mov
mov
sub
add
call
mov
mov
mov
mov
sub
lea
shl
add
call
mov
mov
mov
mov
sub
lea
shl
add
call
mov
mov
mov
mov
sub
lea
shl
add
call
mov
mov
mov
mov
sub
lea
shl
add
call
mov
lea
sub
push
jo
movsx
mov
fild
lea
fstp
mov
push
push
call
lea
push
push
call
mov
test
je
cmp
jne
mov
movsx
sub
mov
cmp
mov
jb
call
mov
shl
mov
jmp
call
mov
lea
lea
push
lea
push
push
call
push
call
mov
mov
mov
mov
lea
lea
push
push
push
call
mov
add
add
jo
mov
jmp
test
je
cmp
jne
mov
mov
mov
sub
cmp
jb
call
lea
jmp
call
mov
mov
mov
mov
mov
sub
jo
mov
mov
lea
push
push
call
test
fnclex
jge
push
push
push
push
call
mov
test
je
cmp
jne
mov
mov
mov
sub
cmp
jb
call
shl
jmp
call
mov
fld
fsub
fnstsw
test
jne
fild
fstp
fadd
fnstsw
test
jne
call
mov
mov
mov
mov
test
je
cmp
jne
mov
mov
mov
sub
cmp
jb
call
lea
jmp
call
mov
mov
mov
mov
test
je
cmp
jne
mov
mov
mov
sub
cmp
jb
call
lea
jmp
call
mov
mov
mov
mov
test
je
cmp
jne
mov
mov
mov
sub
cmp
jb
call
lea
jmp
call
mov
mov
sub
jo
add
mov
jo
mov
mov
mov
test
je
cmp
jne
mov
mov
mov
sub
cmp
jb
call
lea
jmp
call
mov
mov
lea
push
push
mov
mov
call
test
fnclex
jge
push
push
push
push
call
mov
test
je
cmp
jne
mov
mov
mov
sub
cmp
jb
call
shl
jmp
call
mov
fld
fsub
fnstsw
test
jne
call
mov
mov
mov
mov
lea
push
push
call
test
fnclex
jge
push
push
push
push
call
mov
test
je
cmp
jne
mov
mov
mov
sub
cmp
jb
call
shl
jmp
call
mov
fld
fsub
fnstsw
test
jne
fild
fstp
fadd
fnstsw
test
jne
call
mov
mov
mov
mov
test
je
cmp
jne
mov
mov
mov
sub
cmp
jb
call
lea
jmp
call
mov
mov
sub
jo
imul
jo
sub
mov
jo
mov
mov
mov
lea
push
push
call
test
fnclex
jge
push
push
push
push
call
mov
test
je
cmp
jne
mov
mov
mov
sub
cmp
jb
call
shl
jmp
call
mov
fld
fsub
fnstsw
test
jne
call
mov
mov
mov
mov
xor
mov
mov
cmp
jg
cmp
jge
mov
add
jo
jmp
cmp
jle
mov
mov
sub
mov
jo
cmp
jle
mov
jmp
mov
cmp
je
cmp
je
mov
mov
test
je
cmp
jne
mov
mov
movsx
sub
cmp
jb
call
lea
jmp
call
mov
mov
mov
cmp
jle
test
je
cmp
jne
mov
mov
movsx
sub
cmp
jb
call
lea
jmp
call
mov
mov
mov
mov
cmp
je
lea
push
push
mov
mov
mov
call
mov
test
je
cmp
jne
mov
mov
movsx
sub
cmp
jb
call
mov
lea
jmp
call
mov
lea
mov
push
lea
push
lea
mov
mov
push
lea
add
mov
push
lea
push
push
mov
mov
lea
push
lea
push
push
call
lea
push
call
mov
lea
push
push
call
mov
test
je
cmp
jne
movsx
mov
mov
sub
cmp
jb
call
mov
lea
jmp
call
mov
mov
push
add
mov
push
mov
push
call
call
lea
push
call
mov
mov
test
je
cmp
jne
mov
mov
movsx
sub
cmp
jb
call
lea
jmp
call
mov
mov
mov
mov
mov
mov
mov
add
jo
mov
mov
jmp
mov
lea
push
push
call
test
fnclex
jge
push
push
push
push
call
fild
fstp
fld
call
fcomp
fnstsw
test
jne
mov
jmp
xor
neg
test
je
mov
lea
push
push
call
test
fnclex
jge
push
push
push
push
call
mov
test
je
cmp
jne
mov
mov
mov
sub
cmp
jb
call
shl
jmp
call
mov
fld
fsub
fnstsw
test
jne
call
mov
mov
lea
push
push
mov
mov
call
test
fnclex
jge
push
push
push
push
call
mov
test
je
cmp
jne
mov
mov
mov
sub
cmp
jb
call
shl
jmp
call
mov
fld
fsub
fnstsw
test
jne
call
mov
mov
mov
mov
lea
push
push
call
mov
test
je
cmp
jne
mov
mov
mov
sub
cmp
jb
call
mov
lea
jmp
call
mov
mov
mov
add
push
push
push
call
call
lea
push
call
fwait
push
jmp
lea
push
call
lea
lea
push
push
push
call
add
lea
push
push
call
ret
ret
mov
pop
pop
xor
mov
pop
mov
pop
ret
jmp
call
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
mov
push
mov
sub
push
push
push
mov
mov
mov
xor
xor
mov
mov
mov
and
mov
dec
mov
neg
sbb
mov
neg
neg
cmp
mov
mov
mov
mov
mov
mov
mov
mov
mov
je
mov
cmp
jg
cmp
jle
cmp
je
mov
mov
mov
cmp
jle
cmp
jge
cmp
je
mov
mov
lea
push
push
call
cmp
fnclex
jge
push
push
push
push
call
fild
fstp
fld
call
fcomp
fnstsw
test
jne
mov
jmp
xor
neg
test
je
mov
mov
mov
cmp
je
cmp
jne
mov
mov
neg
cmp
jb
call
lea
xor
jmp
call
mov
mov
add
jo
imul
jo
sub
mov
jo
mov
mov
mov
lea
push
push
call
cmp
fnclex
jge
push
push
push
push
call
mov
cmp
je
cmp
jne
mov
mov
neg
cmp
jb
call
shl
jmp
call
mov
fld
fsub
fnstsw
test
jne
call
mov
mov
mov
mov
test
je
cmp
jne
mov
mov
mov
sub
cmp
jb
call
lea
jmp
call
mov
mov
imul
mov
jo
add
jo
mov
mov
test
je
cmp
jne
mov
mov
mov
sub
cmp
jb
call
lea
jmp
call
mov
mov
mov
mov
test
je
cmp
jne
mov
mov
mov
sub
cmp
jb
call
lea
jmp
call
mov
mov
sub
jo
imul
jo
add
mov
jo
mov
mov
mov
test
je
cmp
jne
mov
mov
mov
sub
cmp
jb
call
lea
jmp
call
mov
mov
lea
push
push
mov
mov
call
test
fnclex
jge
push
push
push
push
call
mov
test
je
cmp
jne
mov
mov
mov
sub
cmp
jb
call
shl
jmp
call
mov
fld
fsub
fnstsw
test
jne
mov
imul
jo
mov
fild
fstp
fsub
fnstsw
test
jne
call
mov
mov
mov
mov
lea
push
push
call
test
fnclex
jge
push
push
push
push
call
mov
test
je
cmp
jne
mov
mov
mov
sub
cmp
jb
call
shl
jmp
call
mov
fld
fsub
fnstsw
test
jne
call
mov
mov
mov
mov
test
je
cmp
jne
mov
mov
mov
sub
cmp
jb
call
lea
jmp
call
mov
mov
add
jo
imul
jo
sub
mov
jo
mov
mov
mov
lea
push
push
call
test
fnclex
jge
push
push
push
push
call
mov
test
je
cmp
jne
mov
mov
mov
sub
cmp
jb
call
shl
jmp
call
mov
fld
fsub
fnstsw
test
jne
call
mov
mov
mov
mov
mov
mov
lea
lea
push
push
lea
lea
xor
push
mov
push
mov
mov
lea
or
lea
push
push
lea
mov
mov
mov
push
push
push
call
mov
lea
push
push
call
mov
test
je
cmp
jne
mov
mov
neg
cmp
jb
call
mov
lea
jmp
call
mov
mov
mov
add
push
push
push
call
call
lea
push
call
fwait
push
jmp
mov
cmp
jge
mov
or
mov
mov
mov
lea
lea
push
lea
push
lea
push
lea
push
push
lea
lea
push
mov
mov
mov
push
push
push
mov
mov
mov
call
mov
cmp
jne
mov
push
call
test
je
lea
lea
push
push
push
call
jmp
lea
lea
push
push
push
call
mov
lea
push
push
call
cmp
fnclex
jge
mov
push
push
push
push
call
jmp
mov
fild
fstp
fld
fsub
fnstsw
test
jne
call
fcomp
fnstsw
test
je
mov
jmp
xor
neg
test
je
mov
lea
push
push
call
cmp
fnclex
jge
push
push
push
push
call
fld
fsub
fnstsw
test
jne
call
mov
mov
lea
push
push
call
cmp
fnclex
jge
push
push
push
push
call
fild
fstp
fld
fsub
fnstsw
test
jne
call
fcomp
fnstsw
test
je
mov
jmp
xor
neg
test
je
mov
lea
push
push
call
cmp
fnclex
jge
push
push
push
push
call
fld
fsub
fnstsw
test
jne
call
mov
mov
mov
sub
mov
jo
xor
cmp
mov
setge
add
jo
xor
cmp
setle
or
mov
je
mov
mov
call
xor
cmp
mov
mov
sete
and
xor
neg
cmp
sete
neg
or
mov
xor
cmp
setne
neg
and
call
mov
call
movzx
xor
mov
mov
mov
sub
jo
movsx
push
mov
xor
cmp
setl
neg
call
imul
jo
sub
lea
jo
movsx
push
push
call
call
mov
xor
cmp
setl
neg
call
imul
jo
movsx
mov
imul
jo
movsx
mov
add
mov
jo
add
mov
jo
imul
mov
jo
movsx
add
jo
and
add
jo
cmp
mov
je
mov
mov
test
je
cmp
jne
mov
mov
mov
neg
cmp
jb
call
lea
jmp
mov
call
mov
mov
mov
mov
mov
test
je
cmp
jne
mov
mov
neg
cmp
jb
call
lea
jmp
call
mov
mov
mov
mov
mov
test
je
cmp
jne
mov
mov
mov
sub
cmp
jb
call
lea
jmp
call
mov
mov
sub
mov
jo
mov
mov
test
je
cmp
jne
mov
mov
mov
sub
cmp
jb
call
lea
jmp
call
mov
mov
mov
mov
mov
test
je
cmp
jne
mov
mov
mov
sub
cmp
jb
call
lea
jmp
call
mov
mov
sub
mov
jo
mov
mov
test
je
cmp
jne
mov
mov
mov
sub
cmp
jb
call
lea
jmp
call
mov
mov
sub
mov
jo
mov
mov
test
je
cmp
jne
mov
mov
mov
sub
cmp
jb
call
lea
jmp
call
mov
mov
mov
mov
mov
test
je
cmp
jne
mov
mov
mov
sub
cmp
jb
call
lea
jmp
call
mov
mov
sub
mov
jo
mov
mov
test
je
cmp
jne
mov
mov
mov
sub
cmp
jb
call
lea
jmp
call
mov
mov
mov
mov
mov
test
je
cmp
jne
mov
mov
mov
sub
cmp
jb
call
lea
jmp
call
mov
mov
mov
mov
mov
lea
push
push
call
mov
test
je
cmp
jne
mov
mov
neg
cmp
jb
call
mov
lea
jmp
call
mov
mov
mov
add
push
mov
push
push
call
call
lea
push
call
fwait
push
jmp
mov
lea
push
mov
push
call
call
fwait
push
jmp
mov
lea
push
push
call
cmp
fnclex
jge
push
push
push
push
call
fld
fsub
fnstsw
test
jne
call
mov
mov
add
push
jo
sub
lea
jo
push
push
push
push
call
mov
call
mov
push
add
lea
jo
push
push
call
call
mov
cmp
je
mov
mov
test
je
cmp
jne
mov
mov
neg
cmp
jb
call
lea
jmp
call
mov
mov
mov
mov
mov
test
je
cmp
jne
mov
mov
neg
cmp
jb
call
lea
jmp
call
mov
mov
mov
mov
mov
test
je
cmp
jne
mov
mov
mov
sub
cmp
jb
call
lea
jmp
call
mov
mov
mov
mov
mov
test
je
cmp
jne
mov
mov
mov
sub
cmp
jb
call
lea
jmp
call
mov
mov
mov
mov
mov
test
je
cmp
jne
mov
mov
mov
sub
cmp
jb
call
lea
jmp
call
mov
mov
mov
mov
mov
test
je
cmp
jne
mov
mov
mov
sub
cmp
jb
call
lea
jmp
call
mov
mov
mov
mov
mov
test
je
cmp
jne
mov
mov
mov
sub
cmp
jb
call
lea
jmp
call
mov
mov
mov
mov
mov
test
je
cmp
jne
mov
mov
mov
sub
cmp
jb
call
lea
jmp
call
mov
mov
mov
mov
mov
test
je
cmp
jne
mov
mov
mov
sub
cmp
jb
call
lea
jmp
call
mov
mov
mov
mov
mov
test
je
cmp
jne
mov
mov
mov
sub
cmp
jb
call
lea
jmp
call
mov
xor
mov
mov
mov
mov
mov
mov
lea
lea
push
push
lea
lea
push
mov
push
lea
push
mov
or
push
lea
mov
mov
mov
push
push
push
mov
mov
call
mov
lea
push
push
call
mov
cmp
je
cmp
jne
mov
mov
neg
cmp
jb
call
mov
lea
jmp
call
mov
mov
push
add
mov
push
mov
push
call
call
lea
push
call
fwait
push
jmp
mov
lea
push
push
call
call
fwait
push
jmp
lea
push
call
ret
ret
mov
pop
pop
xor
mov
pop
mov
pop
ret
jmp
call
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
mov
push
mov
sub
push
push
push
mov
mov
mov
xor
mov
mov
mov
xor
mov
mov
mov
lea
mov
lea
push
xor
mov
push
push
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
lea
lea
push
push
push
call
mov
cmp
jne
mov
and
cmp
jne
mov
mov
cmp
je
mov
xor
cmp
mov
setg
sub
push
jo
movsx
lea
push
push
call
mov
call
mov
xor
cmp
mov
setg
sub
push
jo
movsx
lea
push
push
call
call
cmp
je
cmp
jge
mov
lea
push
push
call
mov
push
call
test
je
cmp
jle
cmp
je
mov
push
push
push
push
push
push
call
mov
lea
call
mov
lea
push
push
mov
call
cmp
fnclex
jge
mov
mov
push
push
push
push
call
jmp
mov
cmp
jne
mov
mov
cmp
jle
cmp
jne
mov
mov
mov
lea
xor
push
lea
push
lea
push
lea
push
mov
mov
lea
or
mov
push
mov
mov
lea
lea
push
mov
push
lea
mov
push
push
mov
call
push
push
push
lea
push
push
push
push
mov
mov
call
mov
mov
mov
add
mov
lea
shl
mov
mov
mov
sub
call
mov
mov
mov
lea
mov
shl
mov
mov
mov
sub
add
call
mov
mov
mov
mov
sub
lea
shl
add
call
mov
lea
add
push
jo
mov
fild
fstp
mov
lea
push
push
call
lea
push
push
call
lea
lea
push
lea
push
push
call
push
call
mov
push
lea
push
push
call
mov
push
lea
push
push
call
mov
push
mov
push
call
call
mov
lea
push
push
call
lea
call
lea
call
mov
lea
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
mov
xor
xor
cmp
setne
xor
cmp
setne
or
jne
lea
lea
push
push
lea
lea
push
push
lea
lea
mov
mov
push
mov
or
push
lea
mov
mov
mov
push
push
push
mov
mov
mov
call
push
lea
push
push
call
call
push
push
push
lea
push
push
push
push
mov
mov
call
mov
mov
mov
add
mov
lea
shl
mov
mov
mov
sub
call
mov
mov
mov
lea
mov
shl
mov
mov
mov
sub
add
call
mov
mov
mov
mov
mov
lea
sub
mov
shl
add
call
lea
push
mov
lea
add
jo
mov
fild
fstp
mov
push
push
call
lea
push
push
call
lea
lea
push
lea
push
push
call
push
call
mov
push
lea
push
push
call
mov
push
lea
push
push
call
mov
push
mov
push
call
call
mov
lea
push
push
call
lea
call
lea
call
fwait
push
jmp
push
lea
push
push
mov
call
call
mov
mov
jmp
cmp
jne
mov
and
cmp
je
mov
lea
lea
push
push
push
call
mov
mov
jmp
xor
cmp
mov
sete
movsx
neg
test
je
mov
lea
push
push
mov
call
cmp
fnclex
jge
jmp
cmp
jne
mov
mov
mov
jmp
mov
lea
push
push
mov
call
cmp
fnclex
jge
mov
push
push
push
push
call
mov
mov
mov
lea
lea
push
push
push
call
mov
mov
mov
lea
push
push
mov
call
cmp
fnclex
jge
mov
push
push
push
push
call
xor
cmp
mov
sete
movsx
neg
test
je
mov
mov
sub
lea
neg
sbb
mov
and
mov
add
mov
mov
lea
push
push
lea
lea
push
push
mov
lea
push
push
push
call
mov
or
mov
lea
push
lea
push
lea
push
lea
push
lea
mov
push
mov
mov
lea
lea
push
push
lea
mov
push
push
mov
mov
mov
call
push
lea
push
push
call
call
push
push
push
lea
push
push
push
push
mov
mov
call
mov
mov
mov
add
mov
lea
shl
mov
mov
sub
mov
call
mov
mov
mov
lea
mov
shl
mov
mov
mov
sub
add
call
mov
mov
mov
mov
sub
lea
shl
add
call
mov
lea
add
push
jo
mov
lea
fild
fstp
mov
push
push
call
lea
push
push
call
lea
lea
push
lea
push
push
call
push
call
mov
push
lea
push
push
call
mov
push
lea
push
push
call
mov
push
push
call
call
mov
lea
push
push
call
lea
call
lea
call
mov
xor
neg
mov
mov
mov
mov
lea
mov
lea
push
push
lea
lea
push
push
mov
lea
push
push
push
call
mov
xor
mov
mov
or
mov
mov
mov
lea
lea
push
push
lea
lea
mov
push
push
lea
lea
push
push
lea
lea
push
push
push
mov
mov
call
push
lea
push
push
call
call
push
push
push
lea
push
push
push
push
mov
mov
call
mov
mov
mov
add
mov
lea
shl
mov
mov
mov
sub
call
mov
mov
mov
lea
mov
shl
mov
mov
mov
sub
add
call
mov
mov
mov
mov
sub
lea
shl
add
call
mov
lea
add
push
jo
mov
lea
fild
fstp
mov
push
push
call
lea
push
push
call
lea
lea
push
lea
push
push
call
push
call
mov
push
lea
push
push
call
mov
push
lea
push
push
call
mov
push
push
call
call
mov
lea
push
push
call
lea
call
lea
call
push
lea
push
push
call
call
jmp
lea
call
lea
lea
push
push
push
call
add
lea
push
push
call
ret
lea
call
ret
mov
pop
pop
xor
mov
pop
mov
pop
ret
call
nop
push
mov
sub
push
mov
push
mov
mov
call
push
push
push
mov
mov
mov
mov
mov
mov
push
call
mov
lea
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
fld
call
mov
mov
lea
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
fld
call
mov
mov
mov
mov
mov
cmp
jge
mov
cmp
jne
push
push
call
mov
jmp
mov
mov
mov
mov
lea
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
mov
mov
lea
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
cmp
jne
push
push
call
mov
jmp
mov
mov
mov
mov
lea
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
mov
mov
lea
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
lea
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
fld
call
mov
fld
call
mov
mov
cdq
idiv
mov
fld
call
mov
mov
cdq
idiv
xor
cmp
setl
neg
mov
lea
push
lea
push
push
call
add
movsx
test
je
mov
lea
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
fld
call
cdq
sub
sar
mov
mov
mov
jmp
mov
lea
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
fld
call
mov
jmp
mov
cmp
jne
push
push
call
mov
jmp
mov
mov
mov
mov
lea
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
mov
mov
lea
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
cmp
jne
push
push
call
mov
jmp
mov
mov
mov
mov
lea
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
mov
mov
lea
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
lea
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
fld
call
mov
fld
call
mov
mov
cdq
idiv
mov
fld
call
mov
mov
cdq
idiv
xor
cmp
setl
neg
mov
lea
push
lea
push
push
call
add
movsx
test
je
mov
lea
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
fld
call
cdq
sub
sar
mov
mov
mov
jmp
mov
lea
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
fld
call
mov
mov
push
mov
sub
jo
push
push
push
lea
push
push
push
call
add
mov
mov
push
mov
push
lea
push
mov
mov
mov
push
call
mov
mov
cmp
jle
mov
movsx
mov
jmp
mov
movsx
mov
mov
mov
sub
jo
mov
mov
mov
jmp
mov
add
jo
mov
mov
cmp
jg
mov
mov
mov
and
jns
dec
or
inc
test
je
mov
mov
mov
jmp
mov
mov
sub
jo
sub
jo
mov
mov
mov
mov
mov
mov
push
lea
push
call
cmp
je
mov
cmp
jne
mov
mov
sub
mov
mov
mov
cmp
jae
mov
jmp
call
mov
mov
shl
mov
jmp
call
mov
lea
push
lea
push
lea
push
mov
mov
add
push
mov
push
mov
push
mov
push
mov
push
mov
add
push
mov
mov
mov
push
call
lea
push
call
mov
mov
cmp
jle
mov
movsx
push
push
lea
push
call
call
jmp
mov
push
movsx
push
lea
push
call
call
mov
jmp
fwait
push
jmp
lea
push
call
lea
push
lea
push
push
call
add
ret
lea
push
push
call
ret
xor
mov
mov
pop
pop
pop
mov
pop
ret
call
int3
push
mov
sub
push
mov
push
mov
sub
push
push
push
mov
mov
mov
xor
mov
mov
mov
push
lea
push
push
call
push
lea
push
push
call
push
lea
push
push
call
mov
mov
mov
mov
and
and
mov
mov
fild
mov
mov
mov
fstp
fild
mov
fstp
fld
cmp
jne
fdiv
jmp
push
push
call
fstp
fnstsw
test
jne
and
mov
mov
mov
fild
fstp
fld
cmp
jne
fdiv
jmp
push
push
call
fstp
fnstsw
test
jne
mov
and
mov
mov
and
fild
mov
fstp
fld
cmp
jne
fdiv
jmp
push
push
call
fnstsw
test
jne
call
and
mov
mov
fild
mov
fstp
fld
cmp
jne
fdiv
jmp
push
push
call
fnstsw
test
jne
call
mov
xor
mov
mov
cmp
jg
movsx
cmp
jb
call
cmp
jb
call
cmp
jb
call
mov
mov
mov
fild
mov
push
push
fstp
fld
fsubr
fnstsw
test
jne
fstp
call
mov
mov
fild
fstp
fld
cmp
jne
fdiv
jmp
push
push
call
fstp
fnstsw
test
jne
mov
add
jo
mov
jmp
mov
mov
test
je
cmp
jne
mov
mov
mov
neg
cmp
jb
call
lea
jmp
call
mov
mov
mov
mov
mov
mov
push
push
call
mov
call
mov
mov
mov
cmp
jg
xor
mov
cmp
jg
movsx
cmp
jb
call
cmp
jb
call
cmp
jb
call
mov
mov
fld
fadd
fstp
fnstsw
test
jne
cmp
jb
call
mov
fld
fcomp
fnstsw
test
jne
cmp
jb
call
mov
mov
cmp
jb
call
mov
fld
fcomp
fnstsw
test
je
cmp
jb
call
mov
mov
mov
add
jo
mov
jmp
mov
mov
test
je
cmp
jne
movsx
mov
mov
sub
cmp
jb
call
shl
jmp
call
mov
mov
fld
call
fmul
fnstsw
test
jne
mov
fstp
fld
call
fadd
mov
fnstsw
test
jne
fstp
fld
call
fmul
fadd
fnstsw
test
jne
call
mov
mov
mov
mov
mov
add
jo
mov
jmp
mov
lea
lea
push
push
mov
call
lea
lea
push
push
mov
call
lea
lea
push
push
mov
call
fwait
push
mov
lea
lea
push
push
mov
call
lea
lea
push
push
mov
call
lea
lea
push
push
mov
call
ret
mov
pop
pop
xor
mov
pop
mov
pop
ret
jmp
call
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
mov
push
mov
sub
push
push
push
mov
mov
mov
mov
and
mov
and
mov
xor
mov
mov
push
call
mov
mov
mov
mov
mov
mov
mov
mov
push
call
mov
mov
lea
call
mov
push
push
mov
call
test
jne
mov
lea
push
push
call
fnclex
cmp
jge
push
push
push
push
mov
call
jmp
mov
mov
mov
mov
lea
push
push
call
fnclex
test
jge
push
push
push
push
call
mov
lea
push
push
call
fnclex
test
jge
push
push
push
push
call
mov
mov
mov
lea
push
push
call
fnclex
test
jge
push
push
push
push
call
xor
or
cmp
sete
neg
mov
not
or
xor
cmp
sete
neg
and
lea
push
lea
push
push
call
add
test
je
or
jmp
and
mov
lea
push
push
call
fnclex
test
jge
push
push
push
push
call
mov
mov
mov
lea
push
push
call
fnclex
test
jge
push
push
push
push
call
xor
cmp
setg
neg
mov
not
and
lea
call
test
je
mov
and
dec
neg
sbb
inc
neg
mov
mov
push
call
mov
lea
push
push
call
fnclex
test
jge
push
push
push
push
call
mov
mov
mov
lea
push
push
call
fnclex
test
jge
push
push
push
push
call
xor
cmp
setg
neg
mov
not
and
mov
lea
call
test
je
mov
jmp
mov
push
push
call
test
jne
mov
lea
push
push
call
fnclex
cmp
jge
push
push
push
push
call
mov
mov
mov
lea
push
push
call
fnclex
cmp
jge
push
push
push
push
call
mov
mov
mov
lea
push
lea
push
push
call
mov
mov
lea
call
cmp
jg
cmp
jne
mov
push
call
call
push
jmp
lea
push
lea
push
push
call
add
ret
lea
call
ret
mov
mov
push
call
mov
mov
mov
pop
pop
pop
mov
pop
ret
nop
nop
nop
nop
push
mov
sub
push
mov
push
mov
sub
push
push
push
mov
mov
mov
mov
and
mov
and
push
mov
mov
call
mov
xor
mov
cmp
setne
xor
cmp
setne
test
jne
mov
test
jg
xor
cmp
sete
xor
cmp
sete
or
jne
mov
and
cmp
je
mov
push
call
mov
call
mov
push
mov
call
test
jge
push
push
push
push
call
mov
mov
push
mov
call
mov
mov
pop
pop
mov
pop
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
mov
push
mov
sub
push
push
push
mov
mov
mov
mov
and
mov
and
push
mov
mov
call
sub
mov
mov
mov
push
push
mov
mov
push
mov
mov
mov
mov
call
add
mov
mov
push
mov
call
mov
mov
pop
pop
mov
pop
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
mov
push
mov
sub
push
push
push
mov
mov
mov
mov
and
mov
and
push
mov
mov
call
mov
mov
xor
mov
mov
mov
mov
mov
call
cmp
jne
mov
lea
push
push
mov
mov
call
test
fnclex
jge
push
push
push
push
call
push
push
mov
push
push
call
push
call
call
lea
call
jmp
mov
call
cmp
jne
mov
lea
push
push
mov
mov
call
test
fnclex
jge
push
push
push
push
call
mov
push
push
push
push
jmp
mov
call
cmp
jne
mov
lea
push
push
mov
mov
call
test
fnclex
jge
push
push
push
push
call
mov
push
push
push
push
jmp
mov
call
cmp
jne
mov
lea
push
push
mov
mov
call
test
fnclex
jge
push
push
push
push
call
push
push
jmp
mov
call
cmp
jne
mov
mov
and
cmp
je
mov
or
mov
or
push
mov
mov
call
cmp
jne
and
mov
cmp
je
sub
mov
mov
mov
sub
mov
mov
mov
mov
mov
mov
mov
mov
push
push
mov
mov
push
mov
mov
mov
mov
call
add
mov
push
jmp
lea
call
ret
ret
mov
push
mov
call
mov
mov
pop
pop
mov
pop
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
mov
push
mov
sub
push
push
push
mov
mov
mov
mov
and
mov
and
push
mov
mov
call
mov
xor
mov
mov
mov
mov
mov
call
cmp
jne
mov
and
cmp
jne
mov
call
and
mov
mov
test
jle
sub
mov
mov
mov
sub
mov
mov
mov
mov
mov
mov
mov
mov
push
push
push
mov
mov
mov
mov
mov
mov
call
add
mov
jmp
mov
push
call
mov
push
call
test
jge
jmp
mov
call
cmp
je
mov
call
cmp
je
mov
call
cmp
je
mov
call
cmp
je
mov
call
cmp
jne
mov
jmp
mov
mov
cmp
jne
cmp
jne
mov
call
mov
mov
push
call
test
jge
push
push
push
push
call
cmp
je
sub
mov
mov
mov
sub
mov
mov
mov
mov
mov
mov
mov
mov
push
push
push
mov
mov
mov
mov
mov
mov
call
add
mov
mov
push
mov
call
mov
mov
pop
pop
mov
pop
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
mov
push
mov
sub
push
push
push
mov
mov
mov
mov
and
mov
and
push
mov
mov
call
mov
xor
mov
mov
mov
cmp
jne
mov
or
push
mov
mov
call
mov
lea
push
push
mov
call
cmp
fnclex
jge
mov
push
push
push
push
call
mov
push
call
call
sub
mov
mov
mov
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
mov
mov
mov
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
mov
mov
push
push
mov
mov
mov
mov
call
add
mov
mov
push
mov
call
mov
mov
pop
pop
mov
pop
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
mov
push
mov
sub
push
push
push
mov
mov
mov
mov
and
mov
and
mov
xor
mov
mov
push
call
xor
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
call
cmp
jne
lea
push
call
mov
call
mov
push
mov
push
call
mov
call
mov
mov
lea
push
push
call
fnclex
cmp
jge
push
push
mov
push
push
call
mov
cmp
jne
or
mov
lea
mov
mov
mov
sub
mov
mov
mov
mov
mov
mov
mov
push
push
push
call
add
mov
mov
lea
push
push
call
fnclex
cmp
jge
push
push
mov
push
push
call
push
lea
push
call
push
call
push
push
lea
push
mov
call
push
mov
push
call
call
lea
call
lea
call
mov
mov
lea
push
push
call
fnclex
test
jge
push
push
mov
push
push
call
push
push
lea
push
call
push
mov
push
call
call
lea
call
mov
mov
lea
push
push
call
fnclex
test
jge
push
push
mov
push
push
call
push
push
push
mov
push
call
call
or
mov
mov
mov
cmp
jne
mov
mov
push
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
mov
mov
mov
mov
mov
mov
sub
mov
mov
mov
mov
mov
mov
mov
sub
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
push
mov
push
call
add
call
push
jmp
lea
call
lea
call
ret
ret
mov
mov
push
call
mov
mov
mov
pop
pop
pop
mov
pop
ret
nop
nop
nop
nop
push
mov
sub
push
mov
push
mov
sub
push
push
push
mov
mov
mov
mov
and
mov
and
push
mov
mov
call
mov
xor
mov
cmp
jne
call
call
mov
and
cmp
mov
jne
mov
push
call
sub
mov
mov
mov
sub
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
mov
mov
mov
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
mov
mov
push
push
mov
mov
mov
mov
call
mov
add
mov
mov
mov
push
mov
call
mov
mov
pop
pop
mov
pop
mov
pop
ret
nop
nop
nop
nop
nop
push
mov
sub
push
mov
push
mov
sub
push
push
push
mov
mov
mov
mov
and
mov
and
push
mov
mov
call
xor
cmp
mov
jne
mov
cmp
jle
mov
cmp
jne
cmp
je
mov
not
mov
lea
push
push
call
cmp
fnclex
jge
push
push
push
push
call
push
push
push
call
add
mov
mov
push
mov
call
mov
mov
pop
pop
mov
pop
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
mov
push
mov
sub
push
push
push
mov
mov
mov
mov
and
mov
and
push
mov
mov
call
xor
lea
mov
xor
push
mov
mov
mov
mov
mov
mov
mov
mov
call
mov
call
mov
lea
push
push
mov
call
cmp
fnclex
jge
mov
push
push
push
push
call
mov
lea
push
push
call
call
mov
sub
mov
mov
mov
mov
lea
push
mov
mov
push
push
mov
mov
mov
mov
call
mov
add
cmp
jne
fild
fstp
fld
call
fstp
fild
fstp
fld
call
fstp
mov
mov
call
mov
mov
lea
lea
push
push
lea
lea
push
push
push
call
cmp
jge
push
push
push
push
call
mov
jmp
call
fild
mov
lea
mov
mov
fstp
fld
call
fstp
fild
fstp
fld
call
sub
mov
mov
sub
fstp
mov
mov
lea
mov
mov
mov
mov
mov
mov
sub
mov
mov
mov
lea
mov
mov
mov
mov
mov
sub
mov
mov
mov
lea
mov
mov
mov
mov
push
push
mov
mov
push
mov
mov
mov
mov
call
add
xor
mov
mov
push
mov
call
mov
mov
pop
pop
mov
pop
mov
pop
ret
nop
push
mov
sub
push
mov
push
mov
sub
push
push
push
mov
mov
mov
mov
and
mov
and
push
mov
mov
call
mov
mov
xor
cmp
mov
mov
jne
cmp
jne
mov
mov
lea
lea
push
push
push
call
cmp
jne
mov
call
mov
push
mov
call
cmp
jge
push
push
push
push
call
mov
mov
push
mov
call
mov
mov
pop
pop
mov
pop
mov
pop
ret
nop
nop
nop
push
mov
sub
push
mov
push
mov
sub
push
push
push
mov
mov
mov
mov
and
mov
and
push
mov
mov
call
sub
mov
mov
mov
push
push
mov
mov
push
mov
mov
mov
mov
call
add
mov
mov
push
mov
call
mov
mov
pop
pop
mov
pop
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
mov
push
mov
sub
push
push
push
mov
mov
mov
mov
and
mov
and
push
mov
mov
call
sub
mov
mov
mov
sub
mov
mov
mov
mov
mov
mov
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
mov
mov
push
push
mov
mov
mov
mov
call
add
mov
mov
push
mov
call
mov
mov
pop
pop
mov
pop
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
mov
push
mov
sub
push
push
push
mov
mov
mov
mov
and
mov
and
push
mov
mov
call
sub
mov
mov
mov
sub
mov
mov
mov
mov
mov
mov
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
push
push
mov
call
add
mov
mov
push
mov
call
mov
mov
pop
pop
mov
pop
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
mov
push
mov
sub
push
push
push
mov
mov
mov
mov
and
mov
and
push
mov
mov
call
sub
mov
mov
mov
sub
mov
mov
mov
mov
mov
mov
push
push
mov
mov
push
mov
mov
mov
mov
mov
mov
mov
call
add
mov
mov
push
mov
call
mov
mov
pop
pop
mov
pop
mov
pop
ret
push
mov
sub
push
mov
push
mov
sub
push
push
push
mov
mov
mov
mov
and
mov
and
push
mov
mov
call
sub
mov
mov
mov
sub
mov
mov
mov
mov
mov
mov
push
push
mov
mov
push
mov
mov
mov
mov
mov
mov
mov
call
add
mov
mov
push
mov
call
mov
mov
pop
pop
mov
pop
mov
pop
ret
push
mov
sub
push
mov
push
mov
sub
push
push
push
mov
mov
mov
mov
and
mov
and
push
mov
mov
call
sub
mov
mov
mov
sub
mov
mov
mov
mov
mov
mov
push
push
mov
mov
push
mov
mov
mov
mov
mov
mov
mov
call
add
mov
mov
push
mov
call
mov
mov
pop
pop
mov
pop
mov
pop
ret
push
mov
sub
push
mov
push
mov
sub
push
push
push
mov
mov
mov
mov
and
mov
and
push
mov
mov
call
mov
xor
push
mov
call
mov
mov
push
mov
call
mov
mov
pop
pop
mov
pop
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
mov
push
mov
mov
call
push
push
push
mov
mov
mov
and
mov
mov
and
mov
mov
mov
mov
mov
push
call
mov
mov
lea
push
mov
mov
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
mov
push
mov
push
call
mov
jmp
mov
mov
push
call
mov
lea
call
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
lea
call
mov
mov
add
mov
mov
lea
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
mov
mov
lea
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
mov
mov
call
lea
call
lea
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
call
mov
lea
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
push
mov
push
call
not
mov
lea
call
movsx
test
je
mov
lea
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
push
push
push
mov
push
lea
push
call
add
push
call
push
lea
push
call
push
mov
mov
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
mov
push
mov
push
call
mov
jmp
mov
lea
push
lea
push
push
call
add
lea
call
mov
push
call
mov
lea
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
mov
mov
lea
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
mov
mov
lea
push
lea
push
mov
mov
mov
push
call
mov
mov
mov
lea
call
mov
mov
mov
mov
mov
lea
call
lea
push
mov
mov
mov
push
call
lea
call
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
mov
push
jmp
lea
call
lea
push
lea
push
push
call
add
lea
call
ret
ret
mov
mov
mov
push
call
mov
mov
mov
pop
pop
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
push
mov
push
mov
mov
call
push
push
push
mov
mov
mov
and
mov
mov
and
mov
mov
mov
mov
mov
push
call
mov
mov
lea
push
mov
mov
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
mov
push
mov
push
call
mov
jmp
mov
mov
push
call
mov
lea
call
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
lea
call
mov
lea
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
mov
mov
lea
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
mov
mov
lea
push
lea
push
mov
mov
mov
push
call
mov
mov
mov
lea
call
mov
mov
lea
push
mov
mov
mov
push
call
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
mov
mov
mov
push
lea
push
call
mov
mov
mov
lea
push
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
lea
push
call
mov
lea
call
mov
mov
add
call
lea
call
lea
call
mov
mov
mov
lea
push
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
lea
push
call
mov
mov
lea
call
mov
mov
mov
lea
push
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
lea
push
call
mov
mov
lea
call
mov
mov
mov
lea
push
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
lea
push
call
mov
mov
lea
call
mov
mov
mov
lea
push
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
lea
push
call
mov
mov
lea
call
mov
mov
mov
lea
push
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
lea
push
call
mov
mov
lea
call
mov
mov
mov
lea
push
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
lea
push
call
push
mov
mov
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
mov
push
mov
push
call
mov
jmp
mov
lea
call
mov
lea
push
mov
mov
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
mov
push
mov
push
call
mov
jmp
mov
mov
mov
mov
mov
mov
mov
lea
push
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
push
lea
push
call
push
lea
push
call
push
mov
mov
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
mov
push
mov
push
call
mov
jmp
mov
lea
call
lea
push
lea
push
push
call
add
mov
mov
mov
lea
push
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
lea
push
call
mov
mov
lea
call
mov
mov
mov
lea
push
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
lea
push
call
mov
mov
lea
call
mov
mov
mov
lea
push
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
lea
push
call
mov
mov
lea
call
mov
mov
mov
lea
push
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
lea
push
call
mov
mov
lea
call
mov
mov
mov
lea
push
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
push
lea
push
call
push
lea
push
call
push
mov
add
push
call
lea
call
lea
push
lea
push
push
call
add
mov
mov
mov
lea
push
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
lea
push
call
mov
mov
lea
call
mov
mov
mov
lea
push
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
lea
push
call
mov
mov
lea
call
mov
mov
mov
lea
push
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
lea
push
call
mov
mov
lea
call
mov
mov
mov
lea
push
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
lea
push
call
push
mov
mov
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
mov
push
mov
push
call
mov
jmp
mov
lea
call
mov
lea
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
push
push
mov
push
lea
push
call
add
lea
push
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
lea
push
call
mov
mov
lea
call
lea
push
lea
push
push
call
add
mov
mov
mov
mov
mov
lea
push
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
lea
push
call
mov
mov
lea
call
mov
mov
mov
lea
push
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
lea
push
call
mov
mov
lea
call
mov
mov
mov
lea
push
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
lea
push
call
mov
mov
lea
call
mov
lea
push
mov
mov
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
mov
push
mov
push
call
mov
jmp
mov
mov
mov
mov
mov
mov
mov
lea
push
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
push
lea
push
call
push
lea
push
call
lea
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
lea
call
lea
push
lea
push
push
call
add
mov
mov
mov
lea
push
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
lea
push
call
mov
lea
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
lea
call
mov
push
lea
push
call
mov
push
call
mov
mov
lea
call
lea
push
mov
mov
mov
push
call
lea
call
mov
mov
lea
call
lea
push
mov
mov
mov
push
call
lea
call
mov
mov
mov
lea
call
lea
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
lea
call
mov
mov
cmp
jne
mov
mov
lea
push
lea
push
mov
mov
mov
push
call
mov
mov
mov
mov
mov
mov
mov
push
call
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
mov
push
jmp
lea
call
lea
push
lea
push
push
call
add
lea
push
lea
push
push
call
add
ret
lea
call
ret
mov
mov
mov
push
call
mov
mov
mov
pop
pop
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
push
mov
sub
push
mov
push
mov
sub
push
push
push
mov
mov
mov
mov
and
mov
and
push
mov
mov
call
mov
lea
xor
push
push
mov
mov
call
cmp
fnclex
jge
mov
push
push
push
push
call
jmp
mov
mov
lea
push
push
mov
mov
call
test
fnclex
jge
push
push
push
push
call
xor
lea
cmp
sete
neg
call
test
je
mov
lea
push
push
call
test
fnclex
jge
push
push
push
push
call
mov
lea
push
push
mov
mov
call
test
fnclex
jge
push
push
push
push
call
or
xor
cmp
sete
neg
xor
cmp
sete
neg
and
lea
mov
call
test
je
mov
or
push
call
mov
push
jmp
lea
call
ret
ret
mov
push
mov
call
mov
mov
pop
pop
mov
pop
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
mov
push
mov
sub
push
push
push
mov
mov
mov
mov
and
mov
and
push
mov
mov
call
mov
xor
mov
mov
mov
mov
mov
mov
mov
mov
lea
push
push
call
mov
mov
mov
mov
mov
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
mov
push
mov
mov
mov
mov
mov
mov
mov
mov
push
mov
mov
call
test
fnclex
jge
mov
push
push
push
push
call
mov
mov
mov
mov
mov
sub
mov
mov
sub
mov
xor
mov
mov
mov
push
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
call
test
fnclex
jge
mov
push
push
push
push
call
mov
mov
mov
mov
mov
sub
mov
mov
sub
mov
xor
mov
mov
mov
push
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
call
test
fnclex
jge
mov
push
push
push
push
call
mov
mov
mov
mov
mov
sub
mov
mov
sub
mov
xor
mov
mov
mov
push
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
call
test
fnclex
jge
mov
push
push
push
push
call
mov
lea
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
mov
mov
mov
mov
mov
mov
mov
mov
push
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
lea
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
mov
mov
mov
mov
mov
mov
sub
mov
sub
mov
mov
mov
mov
mov
push
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
call
test
fnclex
jge
mov
push
push
push
push
call
mov
mov
mov
mov
mov
mov
sub
mov
mov
sub
mov
mov
mov
mov
mov
mov
mov
push
mov
mov
mov
mov
mov
mov
mov
mov
push
call
test
fnclex
jge
mov
push
push
push
push
call
mov
mov
mov
mov
mov
mov
sub
mov
sub
mov
mov
mov
mov
mov
push
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
call
test
fnclex
jge
mov
push
push
push
push
call
mov
mov
mov
mov
mov
mov
sub
mov
sub
mov
or
mov
mov
mov
push
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
mov
mov
mov
mov
sub
mov
mov
sub
mov
xor
mov
mov
mov
push
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
call
test
fnclex
jge
mov
push
push
push
push
call
mov
mov
mov
mov
mov
mov
sub
mov
sub
mov
mov
mov
mov
mov
push
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
call
test
fnclex
jge
mov
push
push
push
push
call
mov
mov
mov
mov
mov
sub
mov
mov
sub
mov
xor
mov
mov
mov
push
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
call
test
fnclex
jge
mov
push
push
push
push
call
mov
mov
mov
mov
mov
sub
mov
mov
sub
mov
xor
mov
mov
mov
push
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
call
test
fnclex
jge
mov
push
push
push
push
call
mov
mov
mov
mov
mov
sub
mov
mov
sub
mov
mov
mov
mov
mov
push
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
call
test
fnclex
jge
mov
push
push
push
push
call
mov
mov
mov
mov
mov
sub
mov
mov
sub
mov
mov
mov
mov
mov
push
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
mov
mov
mov
mov
sub
mov
mov
sub
mov
xor
mov
mov
mov
push
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
call
test
fnclex
jge
mov
push
push
push
push
call
mov
mov
mov
mov
mov
sub
mov
mov
sub
mov
xor
mov
mov
mov
push
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
call
test
fnclex
jge
mov
push
push
push
push
call
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
mov
mov
mov
mov
mov
mov
mov
mov
push
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
mov
mov
mov
mov
mov
sub
mov
sub
mov
mov
mov
mov
mov
push
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
call
test
fnclex
jge
mov
push
push
push
push
call
mov
lea
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
mov
mov
mov
mov
mov
mov
sub
mov
mov
sub
mov
mov
mov
mov
mov
mov
mov
push
mov
mov
mov
mov
mov
mov
mov
mov
push
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
mov
mov
mov
mov
sub
mov
mov
mov
sub
mov
mov
mov
mov
mov
mov
mov
push
mov
mov
mov
mov
mov
mov
mov
mov
push
call
test
fnclex
jge
mov
push
push
push
push
call
mov
lea
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
mov
mov
mov
mov
mov
mov
sub
mov
sub
mov
xor
mov
mov
mov
push
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
call
test
fnclex
jge
mov
mov
push
push
push
push
call
jmp
mov
mov
lea
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
mov
push
push
call
mov
lea
not
call
test
je
mov
lea
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
mov
push
push
lea
push
push
call
add
push
call
mov
lea
neg
sbb
neg
neg
call
lea
call
test
je
mov
lea
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
sub
mov
mov
mov
mov
mov
mov
mov
xor
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
mov
mov
push
mov
mov
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
lea
push
push
push
call
add
lea
push
push
call
mov
push
jmp
lea
call
lea
lea
push
push
push
call
add
ret
lea
call
ret
mov
push
mov
call
mov
mov
pop
pop
mov
pop
mov
pop
ret
nop
nop
nop
push
mov
sub
push
mov
push
mov
sub
push
push
push
mov
mov
mov
mov
and
mov
and
push
mov
mov
call
mov
xor
cmp
mov
je
mov
push
push
call
mov
mov
call
push
call
call
mov
xor
mov
lea
push
push
mov
call
cmp
jne
mov
push
call
mov
lea
push
push
mov
call
mov
push
call
mov
mov
push
mov
call
mov
mov
pop
pop
mov
pop
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
mov
push
mov
sub
push
push
push
mov
mov
mov
mov
and
mov
and
push
mov
mov
call
xor
cmp
mov
mov
mov
mov
mov
mov
mov
je
mov
lea
push
push
mov
call
cmp
fnclex
jge
mov
push
push
push
push
call
mov
push
push
call
mov
call
jmp
mov
mov
cmp
je
push
call
call
mov
cmp
je
push
call
call
mov
lea
xor
cmp
je
mov
mov
mov
mov
lea
lea
push
push
lea
lea
push
push
lea
lea
mov
push
push
lea
mov
mov
mov
push
push
push
mov
call
mov
mov
push
push
call
mov
call
mov
push
call
call
mov
mov
push
push
call
mov
call
mov
push
call
call
mov
push
call
call
xor
mov
cmp
je
push
call
call
xor
mov
mov
push
mov
call
mov
mov
pop
pop
mov
pop
mov
pop
ret
nop
nop
nop
nop
push
mov
sub
push
mov
push
mov
sub
push
push
push
mov
mov
mov
xor
mov
mov
mov
mov
cmp
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
je
cmp
je
mov
mov
jmp
mov
mov
mov
lea
lea
push
push
push
call
mov
mov
mov
mov
lea
lea
push
mov
push
push
lea
push
push
push
call
cmp
je
mov
lea
push
push
mov
call
cmp
fnclex
jge
mov
push
push
push
push
call
cmp
jne
cmp
jle
mov
or
jmp
or
mov
mov
xor
cmp
mov
setg
neg
xor
cmp
mov
lea
sete
neg
mov
lea
push
push
lea
lea
push
push
push
call
cmp
jge
mov
and
cmp
jne
mov
mov
jmp
push
push
push
call
mov
cmp
mov
mov
jne
cmp
jg
cmp
jne
mov
push
push
push
mov
call
mov
mov
jmp
cmp
jle
lea
mov
lea
push
push
lea
lea
push
push
lea
lea
push
push
push
mov
mov
mov
mov
call
mov
mov
push
push
push
lea
push
push
push
push
call
mov
mov
mov
mov
mov
add
shl
mov
mov
sub
mov
lea
call
mov
lea
mov
mov
mov
lea
shl
mov
mov
sub
mov
add
call
mov
mov
mov
mov
sub
lea
shl
add
call
mov
mov
mov
mov
mov
lea
sub
mov
shl
add
call
mov
lea
push
mov
add
jo
movsx
mov
lea
fild
fstp
mov
push
push
call
lea
push
push
call
mov
mov
test
je
cmp
jne
mov
mov
sub
mov
cmp
mov
jb
call
mov
lea
jmp
call
lea
mov
push
call
mov
mov
mov
mov
lea
call
mov
test
je
cmp
jne
mov
mov
sub
mov
cmp
mov
jb
call
mov
lea
jmp
call
mov
mov
test
je
cmp
jne
mov
mov
sub
mov
cmp
mov
jb
call
mov
lea
jmp
call
mov
mov
push
push
mov
push
push
mov
mov
lea
push
push
push
call
mov
mov
mov
add
mov
lea
shl
mov
mov
mov
sub
call
mov
lea
mov
mov
mov
lea
shl
mov
mov
mov
sub
add
call
mov
mov
mov
mov
sub
lea
shl
add
call
mov
mov
mov
mov
sub
lea
shl
add
call
mov
lea
push
mov
add
jo
movsx
mov
lea
fild
fstp
mov
push
push
call
lea
push
push
call
mov
test
je
cmp
jne
mov
mov
sub
mov
cmp
mov
jb
call
mov
lea
mov
jmp
call
mov
lea
push
call
mov
mov
mov
mov
lea
call
mov
test
je
cmp
jne
mov
mov
sub
mov
cmp
mov
jb
call
mov
lea
mov
jmp
call
mov
mov
test
je
cmp
jne
mov
mov
sub
mov
cmp
mov
jb
call
mov
lea
jmp
call
mov
mov
push
push
mov
push
push
mov
mov
lea
push
push
push
call
mov
lea
mov
mov
mov
add
shl
mov
mov
mov
lea
sub
call
mov
lea
mov
mov
mov
lea
shl
mov
mov
mov
sub
add
call
mov
mov
mov
mov
sub
lea
shl
add
call
mov
mov
mov
mov
sub
lea
shl
add
call
mov
lea
push
mov
add
jo
movsx
mov
lea
fild
fstp
mov
push
push
call
lea
push
push
call
mov
test
je
cmp
jne
mov
mov
sub
mov
cmp
mov
jb
call
mov
lea
mov
jmp
call
mov
lea
push
call
mov
mov
mov
mov
lea
call
mov
test
je
cmp
jne
mov
mov
sub
mov
cmp
mov
jb
call
mov
lea
mov
jmp
call
mov
mov
test
je
cmp
jne
mov
mov
sub
mov
cmp
mov
jb
call
mov
lea
jmp
call
mov
mov
push
push
mov
push
push
mov
mov
lea
push
push
push
call
mov
lea
mov
mov
mov
add
shl
mov
mov
mov
lea
sub
call
mov
mov
mov
lea
mov
shl
mov
mov
mov
sub
add
call
mov
lea
mov
mov
mov
mov
sub
lea
shl
add
call
mov
lea
mov
mov
mov
mov
sub
mov
shl
lea
add
call
mov
lea
push
mov
add
jo
movsx
mov
lea
fild
fstp
mov
push
push
call
lea
push
push
call
mov
test
je
cmp
jne
mov
mov
mov
sub
cmp
jb
call
shl
jmp
call
mov
lea
push
call
mov
mov
mov
lea
call
mov
test
je
cmp
jne
mov
mov
mov
sub
cmp
jb
call
lea
jmp
call
mov
mov
test
je
cmp
jne
mov
mov
mov
sub
cmp
jb
call
lea
jmp
call
mov
mov
mov
mov
mov
or
cmp
je
mov
test
jle
cmp
je
mov
and
dec
neg
sbb
inc
neg
call
test
mov
je
test
je
cmp
jne
mov
mov
mov
sub
cmp
jb
call
mov
lea
mov
mov
jmp
call
mov
mov
mov
jmp
test
je
cmp
jne
mov
mov
mov
sub
cmp
jb
call
lea
jmp
call
mov
mov
mov
mov
mov
test
je
cmp
jne
mov
mov
mov
sub
cmp
jb
call
lea
jmp
call
mov
mov
test
je
cmp
jne
mov
mov
mov
sub
cmp
jb
call
lea
jmp
call
mov
mov
mov
mov
mov
test
je
cmp
jne
mov
mov
mov
sub
cmp
jb
call
lea
jmp
call
mov
mov
mov
mov
test
je
cmp
jne
mov
mov
mov
sub
cmp
jb
call
mov
mov
lea
mov
mov
jmp
call
mov
mov
mov
mov
jmp
mov
test
je
cmp
jne
mov
mov
mov
sub
cmp
jb
call
lea
jmp
call
mov
mov
mov
mov
test
je
cmp
jne
mov
mov
mov
sub
cmp
jb
call
lea
jmp
call
mov
mov
mov
mov
test
je
cmp
jne
mov
mov
mov
sub
cmp
jb
call
lea
jmp
call
mov
mov
mov
mov
test
je
cmp
jne
mov
mov
mov
sub
cmp
jb
call
lea
jmp
call
mov
mov
mov
mov
mov
lea
mov
push
mov
push
push
push
push
call
mov
xor
jmp
mov
mov
cmp
jne
cmp
je
mov
and
cmp
je
cmp
jle
mov
cmp
je
cmp
jne
mov
mov
mov
sub
cmp
jb
call
mov
lea
xor
mov
mov
jmp
call
mov
mov
mov
jmp
mov
mov
mov
mov
lea
push
push
lea
lea
push
push
push
mov
call
fwait
push
jmp
lea
call
lea
push
push
call
ret
ret
mov
pop
pop
xor
mov
pop
mov
pop
ret
call
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub
push
mov
push
push
mov
xor
cmp
mov
mov
mov
mov
mov
mov
mov
je
cmp
je
mov
mov
jmp
mov
mov
mov
lea
lea
push
push
push
call
mov
lea
mov
mov
mov
lea
push
mov
push
push
lea
push
push
push
call
cmp
je
mov
lea
push
push
mov
call
cmp
fnclex
jge
mov
push
push
push
push
call
push
or
cmp
jne
mov
mov
cmp
jg
mov
mov
xor
test
setg
neg
xor
cmp
mov
mov
sete
neg
mov
lea
lea
push
push
lea
lea
push
push
push
call
mov
mov
cmp
jge
cmp
jne
mov
test
jg
cmp
jne
mov
mov
mov
jmp
xor
mov
cmp
jle
lea
lea
push
push
lea
lea
push
push
lea
lea
mov
mov
mov
mov
push
push
push
mov
call
mov
mov
mov
cmp
jge
mov
mov
test
jle
xor
mov
mov
mov
mov
lea
lea
push
push
lea
lea
push
push
lea
lea
push
push
push
mov
call
mov
mov
cmp
mov
jne
test
je
cmp
jne
mov
mov
mov
mov
sub
cmp
jb
call
lea
jmp
mov
call
mov
mov
mov
mov
test
je
cmp
jne
mov
mov
mov
sub
cmp
jb
call
mov
lea
mov
mov
jmp
call
mov
mov
mov
jmp
test
je
cmp
jne
mov
mov
mov
mov
sub
cmp
jb
call
lea
jmp
mov
call
mov
mov
mov
mov
test
je
cmp
jne
mov
mov
mov
sub
cmp
jb
call
lea
jmp
call
mov
mov
mov
mov
test
je
cmp
jne
mov
mov
mov
sub
cmp
jb
call
lea
jmp
call
mov
mov
test
je
cmp
jne
mov
mov
mov
sub
cmp
jb
call
lea
jmp
call
mov
mov
mov
mov
mov
test
je
cmp
jne
mov
mov
mov
sub
cmp
jb
call
lea
jmp
call
mov
mov
test
je
cmp
jne
mov
mov
mov
sub
cmp
jb
call
lea
jmp
call
mov
mov
mov
mov
mov
mov
test
je
cmp
jne
mov
mov
mov
sub
cmp
jb
call
lea
jmp
call
mov
mov
test
je
cmp
jne
mov
mov
movsx
sub
cmp
jb
call
lea
jmp
call
mov
mov
mov
mov
mov
test
je
cmp
jne
mov
mov
mov
sub
cmp
jb
call
lea
jmp
call
mov
mov
test
je
cmp
jne
mov
mov
add
jo
movsx
mov
sub
cmp
jb
call
lea
jmp
call
mov
add
jo
mov
cmp
mov
mov
jle
mov
mov
test
je
cmp
jne
mov
mov
movsx
sub
cmp
jb
call
lea
jmp
call
mov
add
jo
mov
cmp
mov
jle
mov
lea
push
mov
mov
push
mov
push
push
push
mov
call
or
mov
mov
mov
cmp
jne
cmp
je
mov
and
cmp
je
cmp
jle
mov
test
je
cmp
jne
mov
mov
mov
sub
cmp
jb
call
mov
lea
mov
mov
jmp
call
mov
mov
mov
jmp
mov
mov
mov
push
lea
lea
push
push
lea
push
push
mov
call
pop
pop
pop
xor
pop
add
ret
pop
pop
xor
pop
add
ret
call
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
mov
push
mov
sub
push
push
push
mov
mov
mov
xor
mov
mov
mov
mov
cmp
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
jle
cmp
je
mov
mov
jmp
mov
mov
jmp
mov
mov
and
mov
cmp
jne
cmp
jne
mov
mov
jmp
mov
lea
push
push
mov
call
cmp
fnclex
jge
mov
push
push
push
push
call
cmp
jne
lea
mov
lea
push
push
lea
lea
push
push
lea
lea
push
push
push
mov
mov
mov
mov
call
mov
mov
jmp
mov
mov
mov
lea
push
push
mov
call
cmp
fnclex
jge
mov
push
push
push
push
call
cmp
jne
lea
mov
lea
push
push
lea
lea
push
push
lea
lea
push
push
push
mov
mov
mov
mov
call
mov
mov
cmp
jge
cmp
je
mov
lea
lea
push
push
push
call
mov
lea
mov
mov
lea
push
push
lea
lea
push
push
lea
lea
push
push
push
mov
mov
mov
mov
call
mov
mov
jmp
mov
mov
mov
mov
lea
lea
push
mov
push
push
lea
push
push
push
call
cmp
je
or
xor
cmp
mov
mov
lea
sete
neg
mov
lea
push
push
lea
lea
push
push
push
call
mov
cmp
jle
mov
and
cmp
jne
cmp
jne
mov
mov
cmp
je
cmp
jne
mov
mov
mov
sub
cmp
jb
call
mov
lea
fwait
mov
push
mov
jmp
call
mov
push
fwait
mov
mov
jmp
cmp
jne
mov
mov
cmp
je
cmp
jne
mov
mov
mov
sub
cmp
jb
call
mov
lea
fwait
mov
push
mov
jmp
call
mov
push
fwait
mov
mov
jmp
mov
push
fwait
jmp
cmp
jge
mov
lea
push
push
mov
call
cmp
fnclex
jge
mov
push
push
push
push
call
cmp
je
or
cmp
jne
cmp
jg
cmp
jne
mov
mov
and
dec
neg
sbb
neg
inc
mov
jmp
mov
mov
mov
and
cmp
jne
and
cmp
je
mov
jmp
cmp
jne
cmp
jne
mov
mov
xor
mov
push
push
push
lea
push
push
push
push
mov
call
add
lea
mov
lea
push
push
lea
lea
push
push
lea
lea
push
push
push
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
lea
shl
mov
mov
sub
mov
call
mov
mov
mov
lea
mov
shl
mov
mov
mov
sub
add
call
xor
lea
mov
mov
mov
lea
push
push
lea
lea
push
push
lea
lea
push
push
push
mov
mov
call
mov
mov
mov
lea
mov
mov
sub
shl
add
call
mov
mov
mov
mov
mov
lea
sub
mov
shl
add
call
mov
lea
push
mov
add
jo
movsx
mov
lea
fild
fstp
mov
push
push
call
lea
push
push
call
mov
mov
test
je
cmp
jne
mov
mov
sub
mov
cmp
mov
jb
call
mov
lea
jmp
call
lea
mov
push
call
mov
mov
mov
mov
lea
call
push
push
push
lea
push
push
push
push
call
xor
add
mov
mov
lea
mov
lea
push
push
lea
lea
push
push
lea
lea
push
push
push
mov
mov
call
mov
mov
mov
mov
mov
lea
shl
mov
mov
mov
sub
call
mov
mov
mov
lea
mov
shl
mov
mov
mov
sub
add
call
xor
mov
lea
mov
mov
push
lea
lea
push
push
lea
lea
push
mov
mov
push
lea
push
push
call
mov
mov
mov
mov
mov
sub
lea
shl
add
call
mov
mov
mov
mov
sub
lea
shl
add
call
mov
lea
push
mov
add
jo
movsx
mov
lea
fild
fstp
mov
push
push
call
lea
push
push
call
mov
test
je
cmp
jne
mov
mov
sub
mov
cmp
mov
jb
call
mov
lea
jmp
call
lea
mov
push
call
mov
mov
mov
mov
lea
call
push
push
push
lea
push
push
push
push
call
xor
add
mov
mov
lea
mov
lea
push
push
lea
lea
push
push
lea
lea
push
push
push
mov
mov
call
mov
mov
mov
mov
mov
lea
shl
mov
mov
mov
sub
call
mov
mov
mov
lea
mov
shl
mov
mov
mov
sub
add
call
mov
lea
mov
mov
mov
sub
lea
shl
add
call
mov
mov
mov
mov
sub
lea
shl
add
call
mov
lea
push
mov
add
jo
movsx
mov
lea
fild
fstp
mov
push
push
call
lea
push
push
call
mov
test
je
cmp
jne
mov
mov
sub
mov
cmp
mov
jb
call
mov
lea
jmp
call
lea
mov
push
call
mov
mov
mov
mov
lea
call
push
push
push
lea
push
push
push
push
call
xor
add
mov
mov
lea
mov
lea
push
push
lea
lea
push
push
lea
lea
push
push
push
mov
mov
call
mov
mov
mov
mov
mov
lea
shl
mov
mov
mov
sub
call
mov
mov
mov
lea
mov
shl
mov
mov
mov
sub
add
call
xor
mov
lea
mov
mov
push
lea
lea
push
push
lea
lea
push
mov
mov
push
lea
push
push
call
mov
mov
mov
mov
mov
sub
lea
shl
add
call
mov
mov
mov
mov
sub
lea
shl
add
call
mov
lea
push
mov
add
jo
movsx
mov
lea
fild
fstp
mov
push
push
call
lea
push
push
call
mov
test
je
cmp
jne
mov
mov
sub
mov
cmp
mov
jb
call
mov
lea
jmp
call
lea
mov
push
call
mov
mov
mov
mov
lea
call
push
push
push
lea
push
push
push
push
call
xor
add
mov
mov
lea
mov
lea
push
push
lea
lea
push
push
lea
lea
push
push
push
mov
mov
call
mov
mov
mov
mov
mov
lea
shl
mov
mov
mov
sub
call
mov
mov
mov
lea
mov
shl
mov
mov
mov
sub
add
call
xor
mov
lea
mov
mov
push
lea
lea
push
push
lea
lea
push
mov
mov
push
lea
push
push
call
mov
mov
mov
mov
mov
sub
lea
shl
add
call
mov
mov
mov
mov
sub
lea
shl
add
call
mov
lea
push
mov
add
jo
movsx
mov
lea
fild
fstp
mov
push
push
call
lea
push
push
call
mov
test
je
cmp
jne
mov
mov
sub
mov
cmp
mov
jb
call
mov
lea
jmp
call
lea
mov
push
call
mov
mov
mov
mov
lea
call
push
push
push
lea
push
push
push
push
call
xor
add
mov
mov
lea
mov
lea
push
push
lea
lea
push
push
lea
lea
push
push
push
mov
mov
call
mov
mov
mov
mov
mov
lea
shl
mov
mov
mov
sub
call
mov
mov
mov
lea
mov
shl
mov
mov
mov
sub
add
call
xor
mov
lea
mov
mov
push
lea
lea
push
push
lea
lea
push
mov
mov
push
lea
push
push
call
mov
mov
mov
mov
mov
sub
lea
shl
add
call
mov
mov
mov
mov
sub
lea
shl
add
call
mov
lea
push
mov
add
jo
movsx
mov
lea
fild
fstp
mov
push
push
call
lea
push
push
call
mov
test
je
cmp
jne
mov
mov
sub
mov
cmp
mov
jb
call
mov
lea
jmp
call
lea
mov
push
call
mov
mov
mov
mov
lea
call
push
push
push
lea
push
push
push
push
call
xor
add
mov
mov
lea
mov
lea
push
push
lea
lea
push
push
lea
lea
push
push
push
mov
mov
call
mov
mov
mov
mov
mov
lea
shl
mov
mov
mov
sub
call
mov
mov
mov
lea
mov
shl
mov
mov
mov
sub
add
call
xor
mov
lea
mov
mov
push
lea
lea
push
push
lea
lea
push
mov
mov
push
lea
push
push
call
mov
mov
mov
mov
mov
sub
lea
shl
add
call
mov
mov
mov
mov
sub
lea
shl
add
call
mov
lea
push
mov
add
jo
movsx
mov
lea
fild
fstp
mov
push
push
call
lea
push
push
call
mov
test
je
cmp
jne
mov
mov
sub
mov
cmp
mov
jb
call
mov
lea
jmp
call
lea
mov
push
call
mov
mov
mov
mov
lea
call
push
push
push
lea
push
push
push
push
call
xor
add
mov
mov
lea
mov
lea
push
push
lea
lea
push
push
lea
lea
push
push
push
mov
mov
call
mov
mov
mov
mov
mov
lea
shl
mov
mov
mov
sub
call
mov
mov
mov
lea
mov
shl
mov
mov
mov
sub
add
call
xor
mov
lea
mov
mov
push
lea
lea
push
push
lea
lea
push
mov
mov
push
lea
push
push
call
mov
mov
mov
mov
mov
sub
lea
shl
add
call
mov
mov
mov
mov
sub
lea
shl
add
call
mov
lea
push
mov
add
jo
movsx
mov
lea
fild
fstp
mov
push
push
call
lea
push
push
call
mov
test
je
cmp
jne
mov
mov
mov
sub
cmp
jb
call
shl
jmp
call
mov
lea
push
call
mov
mov
lea
mov
call
mov
jmp
mov
mov
mov
cmp
jg
mov
cmp
je
cmp
jne
movsx
mov
mov
sub
cmp
jb
call
lea
jmp
call
mov
mov
mov
mov
add
jo
mov
xor
jmp
lea
mov
lea
push
push
lea
lea
push
push
lea
lea
push
push
push
mov
mov
mov
mov
call
mov
mov
mov
mov
cmp
jg
mov
test
je
cmp
jne
movsx
mov
mov
sub
cmp
jb
call
lea
jmp
call
mov
mov
mov
mov
mov
add
jo
mov
jmp
mov
mov
lea
mov
push
mov
push
push
push
push
call
mov
test
jne
mov
lea
push
push
call
test
fnclex
jge
mov
push
push
push
push
call
jmp
mov
fld
fsub
mov
mov
push
fnstsw
test
jne
call
mov
push
push
push
call
call
mov
mov
push
push
push
push
call
call
jmp
mov
mov
mov
lea
push
push
call
test
fnclex
jge
push
push
push
push
call
fild
fstp
fld
call
fcomp
fnstsw
test
je
mov
jmp
xor
neg
test
je
mov
lea
push
push
call
test
fnclex
jge
push
push
push
push
call
mov
lea
push
push
call
test
fnclex
jge
push
push
push
push
call
fld
fsub
mov
push
fnstsw
test
jne
call
fld
fsub
push
fnstsw
test
jne
call
mov
push
push
call
call
mov
lea
push
push
call
test
fnclex
jge
push
push
push
push
call
fld
fsub
mov
push
push
fnstsw
test
jne
call
push
mov
push
call
call
fwait
push
jmp
lea
call
lea
push
push
call
ret
ret
mov
pop
pop
xor
mov
pop
mov
pop
ret
jmp
call
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub
push
push
mov
xor
push
mov
mov
mov
mov
mov
cmp
mov
mov
mov
mov
mov
mov
mov
mov
jne
mov
and
cmp
jne
mov
mov
cmp
jle
lea
mov
lea
push
push
lea
lea
push
push
lea
lea
push
push
push
mov
mov
mov
mov
call
mov
mov
jmp
cmp
je
mov
lea
mov
mov
lea
push
push
lea
lea
push
push
lea
lea
push
push
push
mov
mov
mov
mov
mov
call
mov
mov
xor
cmp
sete
movsx
mov
neg
test
je
mov
lea
lea
push
push
push
call
lea
mov
mov
push
mov
lea
push
lea
lea
push
push
lea
lea
push
push
push
mov
mov
mov
mov
call
mov
mov
and
cmp
mov
jne
mov
mov
jmp
mov
mov
mov
mov
lea
lea
push
mov
push
push
lea
push
push
push
call
cmp
je
mov
or
and
push
cmp
jne
cmp
je
cmp
jne
mov
lea
push
push
mov
call
mov
cmp
fnclex
jge
mov
push
push
push
push
call
cmp
jne
cmp
jne
lea
mov
lea
push
push
lea
lea
push
push
lea
lea
push
push
push
mov
mov
mov
mov
call
mov
mov
jmp
mov
mov
jmp
mov
lea
push
push
mov
call
mov
cmp
fnclex
jge
mov
push
push
push
push
call
cmp
jne
cmp
jne
cmp
jle
mov
jmp
mov
lea
push
push
mov
call
cmp
fnclex
jge
mov
push
push
push
push
call
cmp
je
mov
lea
push
push
mov
call
cmp
fnclex
jge
mov
push
push
push
push
call
mov
mov
mov
lea
lea
push
push
push
call
mov
mov
jmp
mov
mov
lea
push
push
mov
call
cmp
fnclex
jge
mov
push
push
push
push
call
mov
mov
cmp
je
cmp
je
mov
jmp
mov
mov
mov
mov
xor
cmp
mov
setg
neg
xor
cmp
mov
lea
sete
neg
mov
lea
push
push
lea
lea
push
push
push
call
mov
cmp
je
mov
mov
mov
cmp
jge
cmp
jne
cmp
jg
cmp
jne
mov
mov
neg
sbb
and
mov
lea
mov
lea
push
push
lea
lea
push
push
lea
lea
push
push
push
mov
mov
mov
mov
call
lea
mov
mov
push
mov
lea
push
lea
lea
push
push
lea
lea
push
push
push
mov
mov
mov
mov
call
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
je
mov
mov
mov
lea
mov
lea
push
push
lea
lea
push
push
lea
lea
push
push
push
mov
mov
mov
mov
call
lea
mov
mov
push
mov
lea
push
lea
lea
push
push
lea
lea
push
push
push
mov
mov
mov
mov
call
lea
mov
mov
push
mov
lea
push
lea
lea
push
push
lea
lea
push
push
push
mov
mov
mov
mov
call
mov
mov
mov
cmp
je
cmp
jne
mov
mov
mov
sub
cmp
jb
call
lea
jmp
call
mov
mov
mov
mov
mov
cmp
je
cmp
jne
mov
mov
mov
sub
cmp
jb
call
lea
jmp
call
mov
mov
mov
mov
mov
cmp
je
cmp
jne
mov
mov
mov
sub
cmp
jb
call
lea
jmp
call
mov
mov
mov
mov
mov
cmp
je
cmp
jne
mov
mov
mov
sub
cmp
jb
call
lea
jmp
call
mov
mov
mov
mov
mov
cmp
je
cmp
jne
mov
mov
mov
sub
cmp
jb
call
lea
jmp
call
mov
mov
mov
mov
mov
cmp
je
cmp
jne
mov
mov
mov
sub
cmp
jb
call
lea
jmp
call
mov
mov
mov
mov
mov
cmp
je
cmp
jne
mov
mov
mov
sub
cmp
jb
call
lea
jmp
call
mov
mov
mov
mov
mov
cmp
je
cmp
jne
mov
mov
mov
sub
cmp
jb
call
lea
jmp
call
mov
mov
mov
mov
mov
jmp
mov
mov
cmp
je
cmp
jne
mov
mov
movsx
sub
cmp
jb
call
lea
jmp
call
mov
add
jo
mov
cmp
mov
mov
jle
mov
mov
lea
mov
push
mov
push
mov
push
push
push
call
mov
mov
mov
cmp
jne
mov
mov
push
push
push
push
call
call
mov
lea
push
push
call
cmp
fnclex
jge
push
push
push
push
call
fld
fsub
mov
push
fnstsw
test
jne
call
mov
push
push
push
call
call
mov
mov
push
push
push
push
call
call
mov
lea
push
push
call
cmp
fnclex
jge
push
push
push
push
call
fld
fsub
push
fnstsw
test
jne
call
mov
push
push
push
call
call
mov
push
push
push
push
call
call
mov
lea
push
push
call
cmp
fnclex
jge
push
push
push
push
call
fild
fstp
fld
call
fcomp
fnstsw
test
je
mov
jmp
xor
neg
test
je
mov
lea
push
push
call
cmp
fnclex
jge
push
push
push
push
call
mov
lea
push
push
call
cmp
fnclex
jge
push
push
push
push
call
fld
fsub
mov
push
fnstsw
test
jne
call
fld
fsub
push
fnstsw
test
jne
call
mov
push
push
call
call
mov
lea
push
push
call
cmp
fnclex
jge
push
push
push
push
call
fld
fsub
mov
push
push
fnstsw
test
jne
call
mov
push
push
call
call
mov
lea
push
push
call
cmp
fnclex
jge
push
push
push
push
call
mov
lea
push
push
call
cmp
fnclex
jge
push
push
push
push
call
fld
fsub
mov
push
fnstsw
test
jne
call
fld
fsub
push
fnstsw
test
jne
call
mov
push
push
call
call
mov
lea
push
push
call
cmp
fnclex
jge
push
push
push
push
call
mov
lea
push
push
call
cmp
fnclex
jge
push
push
push
push
call
fld
fsub
push
fnstsw
test
jne
call
fld
fsub
push
fnstsw
test
jne
call
mov
push
push
call
call
mov
lea
push
push
call
cmp
fnclex
jge
push
push
push
push
call
fld
fsub
push
push
fnstsw
test
jne
call
mov
push
push
call
call
mov
mov
cmp
jne
cmp
je
mov
and
cmp
je
cmp
jle
mov
cmp
je
cmp
jne
mov
mov
mov
sub
cmp
jb
call
mov
lea
mov
mov
jmp
call
mov
mov
mov
jmp
mov
mov
mov
mov
lea
push
push
lea
lea
push
push
push
mov
call
pop
pop
pop
xor
pop
add
ret
pop
pop
xor
pop
add
ret
jmp
call
nop
nop
nop
nop
nop
nop
push
mov
sub
push
mov
push
mov
sub
push
push
push
mov
mov
mov
xor
mov
mov
mov
mov
cmp
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
je
cmp
je
mov
mov
jmp
mov
mov
mov
lea
lea
push
push
push
call
mov
mov
mov
mov
lea
lea
push
mov
push
push
lea
push
push
push
call
cmp
je
mov
lea
push
push
mov
call
cmp
fnclex
jge
mov
push
push
push
push
call
cmp
jne
mov
mov
cmp
jg
mov
mov
xor
cmp
mov
setg
neg
xor
cmp
mov
lea
sete
neg
mov
lea
push
push
lea
lea
push
push
push
call
cmp
jge
mov
mov
mov
mov
mov
cmp
jg
mov
test
je
cmp
jne
mov
mov
movsx
sub
cmp
jb
call
lea
mov
jmp
call
mov
mov
mov
mov
add
jo
mov
jmp
or
cmp
jne
mov
xor
cmp
jg
jmp
xor
cmp
jne
mov
mov
mov
jmp
cmp
jle
lea
mov
lea
push
push
lea
lea
push
push
lea
lea
push
push
push
mov
mov
mov
mov
call
mov
mov
mov
cmp
jge
mov
push
push
push
lea
push
push
push
push
call
lea
mov
mov
mov
mov
add
mov
lea
shl
mov
mov
sub
mov
call
mov
lea
mov
mov
mov
lea
shl
mov
mov
sub
add
call
mov
lea
push
movsx
mov
lea
fild
fstp
mov
push
push
call
lea
push
push
call
mov
test
je
cmp
jne
mov
mov
mov
sub
cmp
jb
call
shl
jmp
call
mov
lea
push
call
mov
mov
lea
mov
call
mov
test
je
cmp
jne
mov
mov
mov
sub
cmp
jb
call
shl
jmp
call
mov
mov
test
je
cmp
jne
mov
mov
sub
mov
cmp
mov
jb
call
mov
lea
jmp
call
mov
push
push
push
mov
push
mov
mov
lea
push
push
push
call
mov
lea
mov
mov
mov
mov
shl
mov
mov
mov
add
lea
sub
call
mov
lea
mov
mov
mov
lea
shl
mov
mov
sub
add
call
mov
lea
push
movsx
mov
lea
fild
fstp
mov
push
push
call
lea
push
push
call
mov
test
je
cmp
jne
mov
mov
mov
sub
cmp
jb
call
shl
jmp
call
mov
lea
push
call
mov
mov
lea
mov
call
mov
test
je
cmp
jne
mov
mov
mov
sub
cmp
jb
call
lea
jmp
call
mov
mov
test
je
cmp
jne
mov
mov
mov
sub
cmp
jb
call
lea
jmp
call
mov
mov
mov
mov
mov
lea
mov
mov
push
mov
push
mov
push
push
push
call
mov
mov
jmp
mov
mov
cmp
jne
cmp
je
mov
and
cmp
je
cmp
jle
mov
test
je
cmp
jne
mov
mov
mov
sub
cmp
jb
call
mov
lea
mov
mov
jmp
call
mov
mov
mov
jmp
mov
mov
mov
lea
push
push
lea
lea
push
push
push
mov
call
fwait
push
jmp
lea
call
lea
push
push
call
ret
ret
mov
pop
pop
xor
mov
pop
mov
pop
ret
call
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
mov
push
mov
sub
push
push
push
mov
mov
mov
xor
mov
mov
mov
mov
cmp
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
je
cmp
je
mov
mov
jmp
mov
mov
cmp
mov
jle
lea
mov
lea
push
push
lea
lea
push
push
lea
lea
push
push
push
mov
mov
mov
mov
call
mov
mov
mov
lea
lea
push
push
push
call
mov
mov
mov
mov
lea
lea
push
mov
push
push
lea
push
push
push
call
cmp
je
mov
lea
push
push
mov
call
cmp
fnclex
jge
mov
push
push
push
push
call
cmp
jne
mov
mov
cmp
jg
mov
mov
xor
cmp
mov
setg
neg
xor
cmp
mov
lea
sete
neg
mov
lea
push
push
lea
lea
push
push
push
call
mov
lea
push
push
mov
call
cmp
fnclex
jge
mov
push
push
push
push
call
mov
lea
push
push
mov
mov
call
cmp
fnclex
jge
push
push
push
push
call
mov
xor
cmp
setl
neg
xor
cmp
setg
neg
and
xor
cmp
sete
neg
and
lea
mov
call
cmp
je
mov
lea
push
push
call
call
lea
mov
lea
push
push
lea
lea
push
push
lea
lea
push
push
push
mov
mov
mov
mov
call
mov
or
mov
mov
mov
lea
lea
push
push
lea
lea
push
push
lea
lea
mov
push
push
lea
mov
mov
mov
push
push
push
mov
mov
call
mov
lea
push
push
call
cmp
fnclex
jge
push
push
push
push
call
mov
lea
push
push
call
cmp
fnclex
jge
push
push
push
push
call
fld
fsub
mov
push
push
push
push
fnstsw
test
jne
call
fld
fsub
push
fnstsw
test
jne
call
push
mov
push
push
push
call
mov
call
mov
mov
push
push
call
call
mov
mov
cmp
jne
cmp
je
mov
and
cmp
je
cmp
jg
cmp
jne
cmp
je
mov
mov
jmp
cmp
jge
mov
mov
mov
mov
cmp
jg
mov
test
je
cmp
jne
mov
movsx
sub
mov
cmp
jb
call
mov
lea
jmp
call
mov
mov
mov
mov
mov
add
jo
mov
mov
jmp
mov
and
cmp
je
or
cmp
je
mov
lea
push
push
call
test
fnclex
jge
push
push
push
push
call
mov
lea
push
push
mov
mov
call
test
fnclex
jge
push
push
push
push
call
xor
lea
cmp
sete
neg
mov
call
xor
cmp
je
mov
mov
mov
lea
mov
lea
push
push
lea
lea
push
push
lea
lea
push
push
push
mov
call
mov
test
mov
jne
mov
jmp
mov
mov
mov
cmp
jg
mov
test
je
cmp
jne
movsx
mov
mov
sub
cmp
jb
call
lea
jmp
call
mov
mov
mov
mov
mov
add
jo
mov
jmp
or
cmp
jne
mov
test
jg
cmp
jne
mov
mov
jmp
mov
cmp
jge
mov
push
push
push
lea
push
push
push
push
call
mov
mov
mov
add
mov
lea
shl
mov
mov
sub
mov
call
mov
mov
mov
lea
mov
shl
mov
mov
mov
sub
add
call
mov
lea
push
movsx
mov
lea
fild
fstp
mov
push
push
call
lea
push
push
call
mov
test
je
cmp
jne
mov
mov
sub
mov
cmp
mov
jb
call
mov
shl
mov
jmp
call
mov
lea
push
call
mov
mov
mov
mov
lea
call
mov
test
je
cmp
jne
mov
mov
sub
mov
cmp
mov
jb
call
mov
lea
mov
jmp
call
mov
mov
test
je
cmp
jne
mov
mov
sub
mov
cmp
mov
jb
call
mov
lea
jmp
call
mov
mov
push
push
mov
push
push
mov
mov
lea
push
push
push
call
mov
mov
mov
add
mov
lea
shl
mov
mov
mov
sub
call
mov
mov
mov
lea
mov
shl
mov
mov
mov
sub
add
call
mov
lea
push
movsx
mov
lea
fild
fstp
mov
push
push
call
lea
push
push
call
mov
test
je
cmp
jne
mov
mov
mov
sub
cmp
jb
call
shl
jmp
call
mov
lea
push
call
mov
mov
mov
lea
call
mov
test
je
cmp
jne
mov
mov
mov
sub
cmp
jb
call
lea
mov
jmp
call
mov
mov
test
je
cmp
jne
mov
mov
mov
sub
cmp
jb
call
lea
jmp
call
mov
mov
mov
mov
mov
mov
lea
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
mov
lea
push
push
mov
mov
call
test
fnclex
jge
push
push
push
push
call
xor
cmp
sete
neg
call
imul
jo
movsx
mov
mov
mov
lea
push
mov
push
push
push
push
call
lea
call
jmp
mov
test
je
cmp
jne
mov
mov
mov
sub
cmp
jb
call
lea
jmp
call
mov
mov
mov
mov
mov
lea
push
push
lea
lea
push
push
push
mov
call
fwait
push
jmp
lea
call
lea
call
lea
push
push
call
ret
ret
mov
pop
pop
xor
mov
pop
mov
pop
ret
jmp
call
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
mov
push
mov
sub
push
push
push
mov
mov
mov
xor
mov
mov
mov
mov
cmp
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
je
cmp
je
mov
mov
jmp
mov
mov
mov
lea
lea
push
push
push
call
mov
mov
mov
mov
lea
lea
push
mov
push
push
lea
push
push
push
call
cmp
je
mov
lea
push
push
mov
call
cmp
fnclex
jge
mov
push
push
push
push
call
cmp
jne
mov
mov
cmp
jg
mov
mov
xor
cmp
mov
setg
neg
xor
cmp
mov
lea
sete
neg
mov
lea
push
push
lea
lea
push
push
push
call
cmp
jge
lea
mov
lea
push
push
lea
lea
push
push
lea
lea
push
push
push
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
cmp
jg
mov
test
je
cmp
jne
mov
mov
movsx
sub
cmp
jb
call
lea
jmp
call
mov
mov
mov
mov
mov
add
jo
mov
jmp
or
cmp
jne
mov
test
jg
cmp
jne
mov
mov
mov
jmp
mov
xor
and
cmp
sete
neg
call
mov
mov
mov
xor
cmp
jle
mov
mov
mov
lea
mov
lea
push
push
lea
lea
push
push
lea
lea
push
push
push
mov
call
mov
mov
push
push
push
lea
push
push
push
push
call
mov
lea
mov
mov
mov
mov
shl
mov
mov
sub
mov
add
lea
call
mov
lea
mov
mov
mov
lea
shl
mov
mov
sub
add
call
mov
lea
push
mov
add
jo
movsx
mov
lea
fild
fstp
mov
push
push
call
lea
push
push
call
mov
test
je
cmp
jne
mov
mov
mov
sub
cmp
jb
call
shl
jmp
call
mov
lea
push
call
mov
mov
lea
mov
call
mov
test
je
cmp
jne
mov
mov
mov
sub
cmp
jb
call
lea
jmp
call
mov
mov
test
je
cmp
jne
mov
mov
mov
sub
cmp
jb
call
lea
jmp
call
mov
mov
mov
mov
mov
mov
test
je
cmp
jne
mov
mov
mov
sub
cmp
jb
call
lea
jmp
call
mov
mov
test
je
cmp
jne
mov
mov
mov
sub
cmp
jb
call
lea
jmp
call
mov
mov
mov
mov
mov
mov
test
je
cmp
jne
mov
mov
mov
sub
cmp
jb
call
shl
jmp
call
mov
mov
test
je
cmp
jne
mov
mov
sub
mov
cmp
mov
jb
call
mov
lea
jmp
call
mov
push
push
push
mov
push
mov
mov
lea
push
push
push
call
mov
lea
mov
mov
mov
mov
shl
mov
mov
mov
add
lea
sub
call
mov
lea
mov
mov
mov
lea
shl
mov
mov
sub
add
call
mov
lea
push
mov
add
jo
movsx
mov
lea
fild
fstp
mov
push
push
call
lea
push
push
call
mov
test
je
cmp
jne
mov
mov
mov
sub
cmp
jb
call
shl
jmp
call
mov
lea
push
call
mov
mov
lea
mov
call
mov
test
je
cmp
jne
mov
mov
mov
sub
cmp
jb
call
lea
jmp
call
mov
mov
test
je
cmp
jne
mov
mov
mov
sub
cmp
jb
call
lea
jmp
call
mov
mov
mov
mov
mov
test
je
cmp
jne
mov
mov
mov
sub
cmp
jb
call
lea
jmp
call
mov
mov
test
je
cmp
jne
mov
mov
mov
sub
cmp
jb
call
lea
jmp
call
mov
mov
mov
mov
mov
test
je
cmp
jne
mov
mov
mov
sub
cmp
jb
call
lea
jmp
call
mov
mov
test
je
cmp
jne
mov
mov
mov
sub
cmp
jb
call
lea
jmp
call
mov
mov
mov
mov
mov
lea
mov
mov
push
mov
push
mov
push
push
push
call
mov
mov
jmp
mov
mov
cmp
jne
cmp
je
mov
and
cmp
je
cmp
jle
mov
test
je
cmp
jne
mov
mov
mov
sub
cmp
jb
call
mov
lea
mov
mov
jmp
call
mov
mov
mov
jmp
mov
mov
mov
lea
push
push
lea
lea
push
push
push
mov
call
fwait
push
jmp
lea
call
lea
push
push
call
ret
ret
mov
pop
pop
xor
mov
pop
mov
pop
ret
call
nop
nop
nop
push
mov
sub
push
mov
push
mov
sub
push
push
push
mov
mov
mov
xor
mov
mov
mov
mov
mov
mov
cmp
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
jne
mov
and
cmp
jne
mov
mov
jmp
cmp
je
mov
mov
mov
lea
lea
push
push
push
call
mov
mov
mov
mov
lea
lea
push
mov
push
push
lea
push
push
push
call
cmp
je
mov
lea
push
push
mov
call
cmp
fnclex
jge
mov
push
push
push
push
call
cmp
je
mov
mov
jmp
lea
mov
lea
push
push
lea
lea
push
push
lea
lea
push
mov
push
push
mov
mov
mov
mov
mov
call
mov
mov
mov
lea
lea
push
push
lea
lea
push
push
push
mov
mov
call
cmp
jge
lea
mov
lea
push
push
lea
lea
push
push
lea
lea
push
push
push
mov
mov
mov
mov
mov
call
mov
mov
mov
lea
mov
mov
push
push
call
cmp
fnclex
jge
mov
push
push
push
push
call
cmp
jne
cmp
jg
mov
mov
mov
cmp
jg
mov
cmp
je
cmp
jne
movsx
mov
mov
sub
cmp
jb
call
lea
jmp
call
mov
mov
mov
mov
mov
add
jo
mov
xor
jmp
mov
mov
jmp
mov
mov
mov
cmp
jg
mov
test
je
cmp
jne
mov
mov
movsx
sub
cmp
jb
call
lea
jmp
call
mov
mov
mov
mov
add
jo
mov
jmp
mov
mov
test
jle
cmp
jne
cmp
jne
mov
mov
jmp
mov
mov
jmp
mov
cmp
jge
mov
push
push
push
lea
push
push
push
push
call
mov
lea
mov
mov
mov
mov
shl
mov
mov
sub
mov
add
lea
call
mov
lea
mov
mov
mov
lea
shl
mov
mov
mov
sub
add
call
mov
lea
mov
mov
mov
mov
sub
mov
shl
lea
add
call
mov
lea
push
movsx
mov
lea
fild
fstp
mov
push
push
call
lea
push
push
call
mov
test
je
cmp
jne
mov
mov
mov
sub
cmp
jb
call
shl
jmp
call
mov
lea
push
call
mov
mov
lea
mov
call
mov
test
je
cmp
jne
mov
mov
mov
sub
cmp
jb
call
lea
jmp
call
mov
mov
test
je
cmp
jne
mov
mov
mov
sub
cmp
jb
call
lea
jmp
call
mov
mov
mov
mov
mov
test
je
cmp
jne
mov
mov
mov
sub
cmp
jb
call
lea
jmp
call
mov
mov
mov
mov
mov
test
je
cmp
jne
mov
mov
mov
sub
cmp
jb
call
lea
jmp
call
mov
mov
mov
mov
xor
mov
cmp
je
cmp
jne
mov
mov
mov
sub
cmp
jb
call
lea
jmp
call
mov
mov
mov
mov
mov
test
je
cmp
jne
mov
mov
mov
sub
cmp
jb
call
lea
jmp
call
mov
mov
mov
mov
mov
test
je
cmp
jne
mov
mov
mov
sub
cmp
jb
call
lea
jmp
call
mov
mov
mov
mov
mov
test
je
cmp
jne
mov
mov
mov
sub
cmp
jb
call
lea
jmp
call
mov
mov
mov
mov
mov
mov
lea
push
mov
push
push
push
push
mov
call
xor
jmp
mov
mov
cmp
jne
cmp
je
mov
and
cmp
je
cmp
jle
mov
cmp
je
cmp
jne
mov
mov
mov
sub
cmp
jb
call
mov
lea
mov
mov
jmp
call
mov
mov
mov
jmp
mov
mov
mov
or
mov
mov
mov
lea
push
push
lea
lea
push
push
push
mov
call
fwait
push
jmp
lea
call
lea
push
push
call
ret
ret
mov
pop
pop
xor
mov
pop
mov
pop
ret
call
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
mov
push
mov
sub
push
push
push
mov
mov
xor
mov
mov
push
mov
call
mov
xor
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
push
call
cmp
fnclex
jge
mov
push
push
push
push
call
jmp
mov
mov
lea
push
push
mov
call
test
fnclex
jge
push
push
push
push
call
mov
mov
push
push
mov
mov
call
test
fnclex
jge
push
push
push
push
call
mov
lea
push
push
mov
call
test
fnclex
jge
push
push
push
push
call
fld
mov
call
movsx
mov
mov
imul
add
lea
sar
mov
mov
shr
add
push
mov
mov
push
call
xor
cmp
fnclex
jge
push
push
push
push
call
fld
call
mov
mov
mov
mov
lea
lea
push
push
mov
mov
mov
call
lea
lea
call
mov
lea
lea
mov
push
push
mov
mov
call
test
jne
lea
lea
push
push
mov
mov
call
test
jne
lea
lea
push
push
mov
mov
call
test
jne
lea
lea
push
push
mov
mov
call
test
jne
lea
lea
push
push
mov
mov
call
test
jne
lea
lea
push
push
mov
mov
call
test
jne
mov
mov
mov
jmp
mov
mov
jmp
mov
mov
jmp
mov
xor
mov
mov
mov
mov
cmp
jg
mov
push
push
push
call
push
call
mov
call
mov
mov
mov
mov
lea
push
push
mov
mov
call
test
fnclex
jge
mov
push
push
push
push
call
mov
lea
push
push
mov
call
push
call
mov
call
mov
push
call
mov
call
mov
sub
jo
call
mov
mov
sub
jo
call
mov
mov
sub
jo
call
mov
mov
mov
add
mov
jo
add
mov
jo
mov
jmp
add
push
push
push
jo
mov
call
push
call
mov
call
mov
mov
lea
mov
push
push
mov
call
test
fnclex
jge
push
push
push
mov
push
call
jmp
mov
mov
lea
push
push
call
push
call
mov
call
push
call
mov
call
mov
mov
push
mov
push
mov
call
test
fnclex
jge
push
push
push
push
call
mov
push
mov
call
test
fnclex
jge
push
push
push
push
call
fwait
push
jmp
lea
call
ret
lea
call
ret
mov
push
mov
call
mov
mov
pop
pop
mov
pop
mov
pop
ret
call
nop
nop
nop
nop
nop
nop
push
mov
sub
push
mov
push
mov
sub
push
push
push
mov
mov
mov
mov
and
mov
and
push
mov
mov
call
lea
xor
push
push
mov
mov
mov
mov
call
push
call
mov
call
mov
lea
push
push
mov
call
cmp
fnclex
jge
mov
mov
push
push
push
push
call
jmp
mov
cmp
jne
push
push
call
mov
lea
push
push
mov
call
cmp
fnclex
jge
push
push
push
push
call
mov
lea
push
push
mov
mov
call
cmp
fnclex
jge
push
push
push
push
call
fild
mov
fstp
fld
cmp
jne
fdiv
jmp
push
push
call
fmul
fld
cmp
jne
fdiv
jmp
push
call
fnstsw
test
jne
fsubrp
fnstsw
test
jne
call
lea
mov
call
push
call
mov
call
mov
lea
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
mov
test
jne
push
push
call
mov
lea
push
push
mov
call
test
fnclex
jge
push
push
push
push
call
mov
lea
push
push
mov
mov
call
test
fnclex
jge
push
push
push
push
call
fild
fstp
fld
cmp
jne
fdiv
jmp
push
push
call
fmul
fld
cmp
jne
fdiv
jmp
push
call
fnstsw
test
jne
fsubrp
fnstsw
test
jne
call
lea
mov
call
sub
mov
mov
mov
mov
sub
mov
mov
mov
mov
mov
mov
sub
mov
mov
mov
fild
mov
mov
mov
mov
fstp
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
push
call
test
fnclex
jge
mov
push
push
push
push
call
lea
push
push
call
mov
fwait
push
jmp
lea
call
ret
lea
call
ret
mov
push
mov
call
mov
mov
pop
pop
mov
pop
mov
pop
ret
jmp
nop
nop
nop
push
mov
sub
push
mov
push
mov
sub
push
push
push
mov
mov
mov
mov
and
mov
and
push
mov
mov
call
mov
lea
xor
push
push
mov
mov
mov
mov
mov
mov
mov
mov
call
cmp
fnclex
jge
mov
push
push
push
push
call
jmp
mov
cmp
jne
push
push
call
mov
lea
push
push
mov
call
cmp
fnclex
jge
push
push
push
push
call
mov
lea
push
push
mov
mov
call
cmp
fnclex
jge
push
push
push
push
call
mov
push
lea
push
push
call
mov
push
push
mov
push
push
call
mov
mov
lea
call
push
push
call
mov
lea
call
lea
push
push
call
push
lea
push
push
call
mov
push
push
call
call
lea
lea
push
lea
push
lea
push
lea
push
lea
push
push
push
call
add
lea
call
mov
push
jmp
lea
lea
push
lea
push
lea
push
lea
push
lea
push
push
push
call
add
lea
call
ret
ret
mov
push
mov
call
mov
mov
pop
pop
mov
pop
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
mov
push
mov
sub
push
push
push
mov
mov
mov
mov
and
mov
and
push
mov
mov
call
mov
push
mov
call
mov
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
push
push
push
push
call
mov
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
push
push
push
push
call
lea
call
mov
push
jmp
lea
call
ret
ret
mov
push
mov
call
mov
mov
pop
pop
mov
pop
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
mov
push
mov
sub
push
push
push
mov
mov
mov
mov
and
mov
and
push
mov
mov
call
mov
lea
xor
push
push
mov
mov
mov
mov
mov
mov
mov
mov
call
cmp
fnclex
jge
mov
push
push
push
push
call
jmp
mov
cmp
jne
push
push
call
mov
lea
push
push
mov
call
cmp
fnclex
jge
push
push
push
push
call
mov
lea
push
push
mov
mov
call
cmp
fnclex
jge
push
push
push
push
call
mov
push
lea
push
push
call
mov
push
push
mov
push
push
call
mov
mov
lea
call
push
push
call
mov
lea
call
lea
push
push
call
push
lea
push
push
call
mov
push
push
call
call
lea
lea
push
lea
push
lea
push
lea
push
lea
push
push
push
call
add
lea
call
mov
push
jmp
lea
lea
push
lea
push
lea
push
lea
push
lea
push
push
push
call
add
lea
call
ret
ret
mov
push
mov
call
mov
mov
pop
pop
mov
pop
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
mov
push
mov
sub
push
push
push
mov
mov
mov
mov
and
mov
and
push
mov
mov
call
mov
push
mov
call
mov
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
push
push
push
push
call
mov
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
push
push
push
push
call
lea
call
mov
push
jmp
lea
call
ret
ret
mov
push
mov
call
mov
mov
pop
pop
mov
pop
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
mov
push
mov
sub
push
push
push
mov
mov
mov
mov
and
mov
and
push
mov
mov
call
mov
lea
xor
push
push
mov
mov
mov
mov
mov
mov
mov
mov
call
cmp
fnclex
jge
mov
push
push
push
push
call
jmp
mov
cmp
jne
push
push
call
mov
lea
push
push
mov
call
cmp
fnclex
jge
push
push
push
push
call
mov
lea
push
push
mov
mov
call
cmp
fnclex
jge
push
push
push
push
call
mov
push
lea
push
push
call
mov
push
push
mov
push
push
call
mov
mov
lea
call
push
push
call
mov
lea
call
lea
push
push
call
push
lea
push
push
call
mov
push
push
call
call
lea
lea
push
lea
push
lea
push
lea
push
lea
push
push
push
call
add
lea
call
mov
push
jmp
lea
lea
push
lea
push
lea
push
lea
push
lea
push
push
push
call
add
lea
call
ret
ret
mov
push
mov
call
mov
mov
pop
pop
mov
pop
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
mov
push
mov
sub
push
push
push
mov
mov
mov
mov
and
mov
and
push
mov
mov
call
mov
push
mov
call
mov
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
push
push
push
push
call
mov
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
push
push
push
push
call
lea
call
mov
push
jmp
lea
call
ret
ret
mov
push
mov
call
mov
mov
pop
pop
mov
pop
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
mov
push
mov
sub
push
push
push
mov
mov
mov
mov
and
mov
and
push
mov
mov
call
mov
lea
xor
push
push
mov
mov
mov
mov
mov
mov
mov
mov
call
cmp
fnclex
jge
mov
push
push
push
push
call
jmp
mov
cmp
jne
push
push
call
mov
lea
push
push
mov
call
cmp
fnclex
jge
push
push
push
push
call
mov
lea
push
push
mov
mov
call
cmp
fnclex
jge
push
push
push
push
call
mov
push
lea
push
push
call
mov
push
push
mov
push
push
call
mov
mov
lea
call
push
push
call
mov
lea
call
lea
push
push
call
push
lea
push
push
call
mov
push
push
call
call
lea
lea
push
lea
push
lea
push
lea
push
lea
push
push
push
call
add
lea
call
mov
push
jmp
lea
lea
push
lea
push
lea
push
lea
push
lea
push
push
push
call
add
lea
call
ret
ret
mov
push
mov
call
mov
mov
pop
pop
mov
pop
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
mov
push
mov
sub
push
push
push
mov
mov
mov
mov
and
mov
and
push
mov
mov
call
mov
push
mov
call
mov
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
push
push
push
push
call
mov
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
push
push
push
push
call
lea
call
mov
push
jmp
lea
call
ret
ret
mov
push
mov
call
mov
mov
pop
pop
mov
pop
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
mov
push
mov
sub
push
push
push
mov
mov
mov
mov
and
mov
and
push
mov
mov
call
mov
lea
xor
push
push
mov
mov
mov
mov
mov
mov
mov
mov
call
cmp
fnclex
jge
mov
push
push
push
push
call
jmp
mov
cmp
jne
push
push
call
mov
lea
push
push
mov
call
cmp
fnclex
jge
push
push
push
push
call
mov
lea
push
push
mov
mov
call
cmp
fnclex
jge
push
push
push
push
call
mov
push
lea
push
push
call
mov
push
push
mov
push
push
call
mov
mov
lea
call
push
push
call
mov
lea
call
lea
push
push
call
push
lea
push
push
call
mov
push
push
call
call
lea
lea
push
lea
push
lea
push
lea
push
lea
push
push
push
call
add
lea
call
mov
push
jmp
lea
lea
push
lea
push
lea
push
lea
push
lea
push
push
push
call
add
lea
call
ret
ret
mov
push
mov
call
mov
mov
pop
pop
mov
pop
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
mov
push
mov
sub
push
push
push
mov
mov
mov
mov
and
mov
and
push
mov
mov
call
mov
push
mov
call
mov
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
push
push
push
push
call
mov
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
push
push
push
push
call
lea
call
mov
push
jmp
lea
call
ret
ret
mov
push
mov
call
mov
mov
pop
pop
mov
pop
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
mov
push
mov
sub
push
push
push
mov
mov
mov
mov
and
mov
and
push
mov
mov
call
mov
lea
xor
push
push
mov
mov
mov
mov
mov
mov
mov
mov
call
cmp
fnclex
jge
mov
push
push
push
push
call
jmp
mov
cmp
jne
push
push
call
mov
lea
push
push
mov
call
cmp
fnclex
jge
push
push
push
push
call
mov
lea
push
push
mov
mov
call
cmp
fnclex
jge
push
push
push
push
call
mov
push
lea
push
push
call
mov
push
push
mov
push
push
call
mov
mov
lea
call
push
push
call
mov
lea
call
lea
push
push
call
push
lea
push
push
call
mov
push
push
call
call
lea
lea
push
lea
push
lea
push
lea
push
lea
push
push
push
call
add
lea
call
mov
push
jmp
lea
lea
push
lea
push
lea
push
lea
push
lea
push
push
push
call
add
lea
call
ret
ret
mov
push
mov
call
mov
mov
pop
pop
mov
pop
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
mov
push
mov
sub
push
push
push
mov
mov
mov
mov
and
mov
and
push
mov
mov
call
mov
push
mov
call
mov
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
push
push
push
push
call
mov
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
push
push
push
push
call
lea
call
mov
push
jmp
lea
call
ret
ret
mov
push
mov
call
mov
mov
pop
pop
mov
pop
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
mov
push
mov
sub
push
push
push
mov
mov
mov
mov
and
mov
and
push
mov
mov
call
mov
push
mov
call
mov
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
push
push
push
push
call
mov
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
push
push
push
push
call
lea
call
mov
push
jmp
lea
call
ret
ret
mov
push
mov
call
mov
mov
pop
pop
mov
pop
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
mov
push
mov
sub
push
push
push
mov
mov
mov
mov
and
mov
and
push
mov
mov
call
mov
push
mov
call
mov
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
push
push
push
push
call
mov
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
push
push
push
push
call
lea
call
mov
push
jmp
lea
call
ret
ret
mov
push
mov
call
mov
mov
pop
pop
mov
pop
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
mov
push
mov
sub
push
push
push
mov
mov
mov
mov
and
mov
and
push
mov
mov
call
mov
push
mov
call
mov
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
push
push
push
push
call
mov
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
push
push
push
push
call
lea
call
mov
push
jmp
lea
call
ret
ret
mov
push
mov
call
mov
mov
pop
pop
mov
pop
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
mov
push
mov
sub
push
push
push
mov
mov
mov
mov
and
mov
and
push
mov
mov
call
mov
push
mov
call
mov
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
push
push
push
push
call
mov
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
push
push
push
push
call
lea
call
mov
push
jmp
lea
call
ret
ret
mov
push
mov
call
mov
mov
pop
pop
mov
pop
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
mov
push
mov
sub
push
push
push
mov
mov
mov
mov
and
mov
and
push
mov
mov
call
mov
xor
cmp
mov
jne
push
push
call
mov
lea
push
push
mov
mov
call
mov
push
push
call
cmp
fnclex
jge
push
push
push
push
call
lea
call
mov
push
jmp
lea
call
ret
ret
mov
push
mov
call
mov
mov
pop
pop
mov
pop
mov
pop
ret
nop
nop
push
mov
sub
push
mov
push
mov
sub
push
push
push
mov
mov
mov
mov
and
mov
and
push
mov
mov
call
mov
push
mov
call
mov
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
push
push
push
push
call
mov
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
push
push
push
push
call
lea
call
mov
push
jmp
lea
call
ret
ret
mov
push
mov
call
mov
mov
pop
pop
mov
pop
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
mov
push
mov
sub
push
push
push
mov
mov
mov
mov
and
mov
and
push
mov
mov
call
mov
push
mov
call
mov
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
push
push
push
push
call
mov
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
push
push
push
push
call
lea
call
mov
push
jmp
lea
call
ret
ret
mov
push
mov
call
mov
mov
pop
pop
mov
pop
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
mov
push
mov
sub
push
push
push
mov
mov
mov
mov
and
mov
and
push
mov
mov
call
mov
xor
mov
mov
cmp
mov
mov
mov
mov
mov
mov
mov
jne
mov
lea
push
push
call
cmp
fnclex
jge
push
push
push
push
call
mov
push
push
call
mov
lea
call
mov
lea
push
push
call
push
push
call
mov
lea
call
push
lea
push
call
push
lea
push
push
call
push
lea
push
push
call
push
mov
push
call
mov
call
lea
lea
mov
mov
call
lea
lea
push
lea
push
lea
push
lea
push
lea
push
push
push
call
add
mov
push
jmp
lea
lea
push
lea
push
lea
push
lea
push
lea
push
push
push
call
add
ret
lea
call
ret
mov
push
mov
call
mov
mov
pop
pop
mov
pop
mov
pop
ret
nop
nop
nop
nop
push
mov
sub
push
mov
push
mov
sub
push
push
push
mov
mov
mov
mov
and
mov
and
push
mov
mov
call
mov
push
call
test
jge
push
push
push
push
call
mov
mov
push
mov
call
mov
mov
pop
pop
mov
pop
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
mov
push
mov
sub
push
push
push
mov
mov
mov
mov
and
mov
and
push
mov
mov
call
mov
xor
cmp
mov
jne
push
push
call
mov
lea
push
push
mov
mov
call
mov
push
push
call
cmp
fnclex
jge
push
push
push
push
call
lea
call
mov
push
jmp
lea
call
ret
ret
mov
push
mov
call
mov
mov
pop
pop
mov
pop
mov
pop
ret
nop
nop
push
mov
sub
push
mov
push
mov
sub
push
push
push
mov
mov
xor
mov
mov
mov
mov
push
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
call
mov
lea
mov
call
mov
lea
call
mov
mov
lea
push
lea
push
lea
push
lea
push
lea
push
push
call
cmp
jge
push
push
push
push
call
mov
mov
lea
push
lea
push
push
call
add
cmp
jne
mov
lea
call
mov
lea
call
mov
mov
lea
push
lea
push
lea
push
lea
push
lea
push
push
call
cmp
jge
push
push
push
push
call
mov
lea
push
lea
push
push
call
add
cmp
je
mov
push
push
mov
call
mov
mov
push
lea
push
call
mov
lea
call
push
push
call
mov
neg
sbb
neg
neg
lea
call
lea
call
cmp
je
mov
push
push
call
mov
lea
call
lea
mov
mov
push
lea
push
call
fstp
jmp
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
lea
call
lea
push
lea
push
lea
push
push
lea
push
call
lea
push
lea
push
lea
push
lea
push
push
call
add
call
fwait
push
jmp
lea
push
lea
push
push
call
lea
push
lea
push
lea
push
lea
push
push
call
add
ret
lea
call
ret
mov
mov
push
call
mov
mov
mov
pop
pop
pop
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
mov
push
mov
sub
push
push
push
mov
mov
xor
mov
mov
push
mov
call
mov
mov
lea
lea
mov
push
push
push
push
push
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
mov
push
mov
push
call
mov
call
mov
push
push
call
lea
call
cmp
jne
lea
mov
push
push
mov
call
mov
mov
lea
call
lea
call
mov
lea
push
lea
push
push
mov
call
mov
push
lea
mov
push
push
lea
push
push
call
mov
push
push
call
mov
call
mov
mov
push
push
call
mov
lea
push
push
call
lea
lea
push
push
push
call
add
cmp
je
mov
mov
call
mov
mov
push
jmp
mov
lea
push
push
mov
mov
call
lea
lea
push
lea
mov
push
push
lea
push
push
mov
mov
mov
call
push
lea
lea
push
push
call
push
call
push
lea
lea
push
push
call
lea
push
call
mov
lea
call
lea
lea
push
lea
push
push
push
call
mov
add
dec
je
sub
jne
mov
push
call
mov
mov
mov
cmp
jl
mov
lea
lea
mov
mov
push
lea
push
lea
push
push
mov
mov
mov
mov
call
lea
lea
push
push
call
push
call
lea
lea
push
push
mov
mov
call
lea
lea
push
lea
push
push
call
push
call
mov
mov
call
lea
call
lea
lea
push
lea
push
lea
push
lea
push
push
push
call
or
add
add
jo
mov
jmp
mov
push
push
mov
mov
call
mov
push
lea
push
lea
push
push
mov
call
mov
mov
call
lea
lea
push
push
push
call
add
jmp
mov
mov
call
mov
mov
push
call
call
push
jmp
lea
lea
push
push
push
call
lea
lea
push
lea
push
lea
push
lea
push
push
push
call
add
ret
lea
call
ret
mov
push
mov
call
mov
mov
mov
mov
mov
pop
pop
mov
pop
mov
pop
ret
call
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
mov
push
mov
sub
push
push
push
mov
mov
mov
lea
xor
push
push
mov
mov
mov
mov
mov
call
mov
push
push
call
mov
mov
call
mov
lea
push
lea
push
push
mov
call
call
lea
call
lea
push
push
call
push
mov
push
call
mov
call
mov
mov
lea
mov
push
push
call
lea
call
lea
push
lea
push
push
mov
call
call
push
jmp
lea
call
ret
lea
call
ret
mov
mov
pop
pop
mov
pop
mov
pop
ret
nop
nop
nop
nop
nop
sahf
sahf
sahf
sahf
lods
js
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
add
stos
jp
add
jp
add
jp
add
jp
add
jp
add
jp
add
ltr
(bad)
xor
add
add
add
verr
(bad)
jb
sldt
add
push
add
and
str
jnp
add
jnp
add
jnp
add
jnp
add
jl
add
jl
add
jl
add
add
add
ins
jl
add
str
(bad)
mov
sldt
jl
add
jl
add
jl
add
add
xor
sub
(bad)
js
add
or
add
jge
add
jge
add
jge
add
verr
(bad)
je
sldt
verr
jge
add
jge
add
jge
add
jge
add
jge
add
jle
add
verw
jle
add
add
dec
jle
add
verr
add
add
adc
add
mov
jle
add
jle
add
add
add
add
jg
add
jg
add
jg
add
sldt
add
push
jg
add
(bad)
jo
(bad)
jl
str
(bad)
cmp
jg
add
jg
add
jg
add
jg
add
jg
add
verw
add
adc
verr
or
or
or
dec
or
pop
or
push
verw
add
mov
str
or
mov
sldt
or
rol
verw
or
cli
or
add
lldt
sldt
add
dec
push
push
inc
push
dec
xor
inc
dec
dec
add
add
pop
pop
jbe
popa
push
popa
jb
jne
add
add
jbe
popa
push
je
dec
xor
add
add
dec
arpl
add
add
pop
popa
fs
data16
popa
outs
add
add
pop
pop
jbe
popa
push
je
dec
xor
add
add
jbe
popa
push
popa
jb
outs
jbe
add
add
pop
pop
jbe
popa
inc
jb
gs
popa
jb
add
add
jbe
popa
dec
outs
inc
jae
jb
add
add
jbe
popa
inc
outs
jae
bound
je
jb
add
add
pop
pop
jbe
popa
push
je
push
popa
jb
outs
jbe
add
add
jbe
popa
inc
jb
gs
popa
jb
imul
pop
pop
jbe
popa
inc
outs
add
add
pop
popa
fs
imul
xor
add
pop
pop
jbe
popa
push
popa
imul
je
add
pop
pop
jbe
popa
inc
jb
gs
bound
imul
pop
popa
fs
data16
gs
xor
add
pop
pop
jbe
popa
push
arpl
jae
push
outs
push
outs
imul
jbe
popa
dec
xor
jae
add
add
jbe
popa
inc
outs
jo
inc
jns
gs
add
add
jbe
popa
push
je
inc
popa
je
add
pop
pop
jbe
popa
dec
jae
je
imul
add
jbe
popa
push
gs
jns
je
ins
inc
jb
outs
jb
add
pop
pop
jbe
popa
dec
jb
jae
ins
je
push
bound
add
add
fs
imul
xor
add
pop
pop
jbe
popa
inc
jb
inc
gs
jb
arpl
add
pop
pop
jbe
popa
inc
js
je
jb
arpl
add
pop
pop
jbe
popa
dec
outs
inc
jb
outs
jb
add
add
jbe
popa
dec
bound
gs
add
pop
popa
fs
imul
imul
pop
jbe
popa
dec
bound
gs
fs
data16
add
fs
imul
xor
imul
jbe
popa
inc
outs
outs
ins
push
popa
jb
add
add
jbe
popa
push
je
push
gs
inc
ins
jo
add
pop
pop
jbe
popa
inc
jo
cmp
add
pop
inc
dec
jae
outs
add
add
pop
pop
jbe
popa
inc
jb
jae
add
add
pop
pop
jbe
popa
push
popa
jb
gs
add
add
pop
pop
jbe
popa
inc
push
add
add
jbe
popa
inc
outs
jae
bound
gs
add
pop
pop
jbe
popa
inc
jns
popa
jb
add
add
inc
dec
push
pop
push
dec
dec
dec
pop
inc
fs
data16
add
jbe
popa
inc
outs
gs
je
inc
outs
jne
fs
jb
outs
jb
add
add
jbe
popa
push
je
inc
ins
jo
add
pop
pop
jbe
popa
push
popa
jb
jae
inc
jno
add
pop
pop
jbe
popa
inc
jb
inc
outs
outs
jae
jb
arpl
add
add
jbe
popa
dec
xor
add
add
inc
jne
arpl
outs
inc
popa
ins
ins
add
add
jbe
popa
push
popa
jb
jb
add
add
jbe
popa
inc
popa
jae
dec
bound
popa
jb
add
pop
popa
fs
data16
je
outs
add
add
jbe
popa
dec
popa
je
dec
fs
popa
ins
ins
dec
add
add
jbe
popa
push
gs
pop
jbe
popa
push
cmp
add
add
jbe
popa
push
arpl
imul
add
inc
push
inc
dec
push
pop
push
dec
dec
dec
pop
push
gs
gs
jae
add
add
pop
pop
jbe
popa
push
dec
xor
add
add
pop
inc
dec
jae
jb
add
add
jbe
popa
dec
bound
jae
add
add
inc
dec
push
pop
push
dec
dec
dec
pop
push
jne
jb
dec
outs
je
jb
popa
arpl
add
pop
pop
jbe
popa
inc
js
gs
dec
popa
outs
fs
gs
add
add
jbe
popa
push
je
push
outs
push
outs
imul
add
fs
data16
gs
add
add
pop
popa
fs
imul
ss
add
add
jbe
popa
inc
popa
imul
outs
add
add
jbe
popa
inc
outs
jae
bound
add
add
jbe
popa
inc
push
inc
js
gs
imul
pop
pop
jbe
popa
dec
outs
push
je
push
popa
jb
add
pop
pop
jbe
popa
push
je
push
popa
jb
popa
ins
add
add
pop
pop
jbe
popa
push
bound
outs
add
add
jbe
popa
inc
push
jns
add
add
pop
pop
jbe
popa
dec
xor
jb
add
add
dec
ins
outs
add
add
pop
pop
jbe
popa
inc
jb
outs
jb
jbe
jb
ins
outs
ja
add
add
jbe
popa
dec
gs
add
add
jbe
popa
inc
jns
jne
dec
xor
add
add
fs
imul
xor
add
add
fs
imul
xor
imul
jbe
popa
push
je
inc
outs
jo
add
add
pop
pop
jbe
popa
dec
xor
je
add
add
pop
pop
jbe
popa
inc
jb
gs
je
dec
imul
pop
popa
fs
imul
xor
add
add
pop
pop
jbe
popa
push
outs
ja
jb
cmp
add
add
fs
imul
add
pop
pop
jbe
popa
dec
xor
popa
jb
add
add
jbe
popa
push
popa
jb
fs
add
jbe
popa
inc
jb
dec
outs
arpl
add
add
jbe
popa
push
popa
jb
jne
add
add
jbe
popa
push
je
push
outs
inc
outs
jae
add
add
pop
pop
jbe
popa
inc
jo
xor
add
pop
pop
jbe
popa
inc
jo
xor
add
pop
pop
jbe
popa
dec
popa
je
dec
gs
inc
popa
ins
ins
dec
add
add
pop
inc
dec
popa
je
outs
add
add
jbe
popa
push
je
dec
outs
jbe
add
add
pop
popa
ins
ins
ins
jne
add
add
jbe
popa
dec
popa
je
dec
fs
je
add
pop
pop
jbe
popa
inc
jo
push
outs
addr16
xor
add
pop
inc
dec
je
outs
add
add
pop
pop
jbe
popa
inc
jb
push
outs
ins
outs
arpl
add
add
jbe
popa
inc
push
dec
outs
je
add
add
dec
gs
add
add
pop
pop
jbe
popa
inc
jb
gs
je
add
add
pop
pop
jbe
popa
inc
jb
gs
bound
