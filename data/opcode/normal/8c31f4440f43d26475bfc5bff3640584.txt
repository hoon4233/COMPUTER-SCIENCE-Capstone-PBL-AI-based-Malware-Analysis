mov
add
add
add
add
add
add
add
adc
add
sub
push
add
add
xor
add
add
adc
adc
inc
add
push
add
or
push
jb
add
jo
pop
add
or
jb
add
jo
outs
sbb
add
sub
add
or
outs
sbb
add
sub
add
or
outs
sbb
add
fimul
push
sub
push
outs
sbb
sub
add
add
add
add
verw
add
add
add
push
add
push
add
or
inc
jb
add
jo
pop
add
or
outs
and
add
sub
dec
add
jo
pop
add
or
outs
and
add
sub
add
add
outs
and
add
sub
pop
sub
sub
add
xor
add
add
add
adc
sub
add
or
add
add
ds
add
or
sbb
and
add
or
or
and
pop
call
and
jle
add
add
outs
add
or
add
or
pop
pop
pop
or
push
mov
xlat
sub
xor
add
add
add
add
adc
push
call
add
call
push
jb
add
jo
sub
add
sub
add
jo
sub
add
sub
add
jo
sub
add
sub
add
jo
sub
add
sub
add
jo
sub
add
sub
add
jo
sub
add
sub
add
pop
jb
add
jo
sub
add
sub
push
mov
add
sub
mov
add
sub
jb
add
jo
sub
add
sub
add
jo
sub
add
sub
pop
mov
add
sub
mov
add
sub
jb
add
jo
sub
add
sub
pop
mov
add
sub
jb
add
jo
sub
add
sub
pop
mov
add
sub
jb
add
jo
sub
add
sub
pop
mov
add
sub
mov
add
sub
add
or
sbb
add
or
xor
add
add
add
add
add
call
pop
call
add
call
sub
add
add
pop
sub
add
or
and
cmp
and
xchg
adc
test
adc
pop
add
or
sub
cmp
and
sbb
cmc
add
add
and
aad
add
cmp
and
mov
xor
arpl
and
mov
cs
add
or
addr16
icebp
lds
ins
or
cli
pop
icebp
(bad)
cs
and
test
cmp
push
add
add
jb
add
jo
sub
add
cmp
inc
add
add
jb
add
jo
sub
add
cmp
sub
add
pop
jb
add
jo
sub
add
cmp
pop
add
add
jb
add
jo
sub
add
cmp
add
add
pop
jb
add
jo
sub
add
cmp
in
add
add
jb
add
jo
sub
add
cmp
fadd
add
pop
jb
add
jo
sub
add
cmp
ret
add
add
jb
add
jo
sub
add
cmp
scas
add
add
jb
add
jo
sub
add
cmp
cdq
add
add
sub
pop
mov
add
sub
mov
add
sub
sub
push
mov
add
sub
mov
add
sub
sub
push
mov
add
sub
mov
add
sub
sub
pop
mov
add
sub
mov
add
sub
sub
push
mov
add
sub
mov
add
sub
sub
push
mov
add
sub
mov
add
sub
sub
pop
mov
add
sub
mov
add
sub
sub
push
mov
add
sub
mov
add
sub
sub
push
mov
add
sub
mov
add
sub
mov
add
sub
adc
add
add
add
sub
add
add
add
or
push
jb
add
jo
sub
add
sub
add
jo
sub
add
sub
add
jo
sub
add
sub
add
jo
sub
add
sub
add
jo
sub
add
sub
fld
add
jb
add
jo
jb
add
jo
sbb
add
or
pop
add
sub
dec
add
add
add
or
add
push
sub
sub
add
or
fadd
add
or
dec
add
add
jo
jae
add
or
xor
add
sub
jo
xor
add
pop
outs
xor
add
jae
add
push
and
push
outs
xor
sub
adc
add
inc
add
add
sub
add
sub
outs
sub
add
outs
add
or
push
jb
add
jo
sub
add
sub
add
jo
sub
add
sub
mov
add
sub
mov
add
sub
add
or
mov
jne
add
add
add
sub
jb
add
jo
jb
add
jo
push
mov
add
sub
add
add
add
and
add
add
add
add
adc
add
cmp
add
add
jnp
add
add
aaa
add
or
sub
add
or
add
or
add
or
add
or
cmp
add
or
push
sub
add
add
jnp
add
add
push
add
add
add
xchg
add
add
add
add
or
add
jge
add
add
jb
add
jo
pop
add
push
sub
xor
add
add
add
adc
jae
add
or
add
add
jae
add
push
jge
add
add
jle
add
or
add
add
jb
add
jo
add
sub
add
add
das
add
push
add
and
add
add
sub
add
ficom
add
add
add
jb
add
jo
add
add
fiadd
sub
adc
add
add
add
add
add
xor
add
add
add
add
adc
jnp
add
add
push
or
add
inc
add
or
add
or
jl
add
add
pop
sub
add
sub
push
pop
xor
sub
add
adc
add
sub
add
pop
add
adc
jnp
add
add
push
or
add
inc
add
or
add
or
jl
add
add
pop
sub
add
sub
push
pop
xor
sub
jnp
add
add
adc
jnp
add
add
add
add
or
add
or
add
add
xor
popa
add
add
add
adc
add
or
push
outs
dec
add
or
pop
or
add
dec
add
or
add
sub
adc
sub
add
sub
add
pop
add
push
push
outs
dec
add
or
add
or
sub
add
jb
add
jo
pop
adc
dec
add
or
add
add
add
jb
add
jo
add
add
fiadd
sub
add
add
add
add
add
cmp
add
adc
add
sbb
add
outs
add
add
add
adc
add
push
or
add
add
add
sub
add
push
outs
dec
add
or
add
sub
add
sub
add
jo
sub
add
sub
add
jo
sub
add
sub
add
jo
sub
add
sub
sub
add
push
outs
push
add
or
add
pop
add
push
outs
push
add
or
push
add
or
add
or
sub
jae
add
or
sub
jae
add
or
sub
jae
add
or
add
push
add
or
inc
xor
add
jae
add
or
lea
add
add
add
or
add
add
add
outs
pop
add
or
sub
add
add
push
xor
add
jae
add
or
lea
add
add
add
or
add
pop
add
push
pop
add
pop
add
or
add
or
add
or
sub
add
add
push
xor
add
jae
add
or
lea
add
add
add
or
or
add
or
jne
add
add
sbb
add
or
sub
add
add
push
xor
add
jae
add
or
lea
add
add
add
or
or
add
or
jne
add
add
xor
add
or
sub
add
add
push
xor
pop
add
or
lea
add
add
add
or
push
or
add
or
add
add
jnp
add
add
pusha
add
or
aaa
add
or
add
add
add
dec
outs
pop
add
or
sub
add
add
push
add
push
jae
add
or
lea
add
add
add
or
or
add
or
jne
add
add
outs
pop
add
or
sub
add
add
push
aaa
add
push
jae
add
or
lea
add
add
add
or
sub
add
push
add
or
inc
inc
add
push
jae
add
or
lea
add
add
add
or
add
push
add
or
inc
cmp
add
jae
add
or
lea
add
add
add
or
add
push
add
or
inc
cmp
add
jae
add
or
lea
add
add
add
or
fisubr
adc
add
sbb
add
jb
add
jo
pop
adc
dec
add
or
add
add
add
add
add
add
add
add
fiadd
sub
add
add
inc
add
add
add
sub
add
adc
add
dec
add
add
add
outs
bound
add
ins
outs
arpl
add
sub
xor
pop
add
add
add
adc
sub
add
push
jb
add
jo
add
or
jnp
add
add
xor
add
add
or
sbb
add
sub
add
outs
add
or
sub
push
outs
sbb
add
jb
add
jo
pop
adc
dec
add
or
add
add
add
jb
add
jo
add
add
fiadd
sub
add
add
add
add
ss
adc
add
sbb
add
pop
add
add
add
adc
push
imul
add
or
add
jo
imul
or
ins
add
or
push
sub
add
cmp
add
add
and
add
sub
add
jae
add
or
push
jae
add
or
or
add
or
add
or
add
or
add
or
add
or
sub
add
push
or
add
or
add
or
sub
add
push
or
add
or
add
or
sub
add
push
or
add
or
add
or
sub
add
push
or
add
or
add
or
sub
add
push
or
add
or
add
or
sub
add
push
or
add
or
add
or
sub
add
push
or
add
or
add
or
or
sub
or
add
or
add
add
add
mov
add
or
sbb
add
sub
add
outs
add
or
add
adc
add
add
xchg
fadd
or
add
add
xor
xor
add
or
add
add
add
add
inc
add
or
add
or
add
push
add
add
add
add
or
add
and
add
jo
jnp
add
add
add
or
add
add
or
fucomp
add
add
jnp
add
add
add
or
add
fadd
jo
pop
xor
dec
add
or
ffree
add
add
add
or
add
pop
add
push
outs
dec
add
or
pop
jb
add
jo
sub
add
sub
add
jo
sub
add
sub
add
jo
sub
add
cmp
jb
add
jo
sub
add
cmp
add
add
jb
add
jo
sub
add
cmp
add
add
jb
add
jo
sub
add
cmp
add
add
mov
add
add
add
add
add
or
add
or
aaa
add
or
add
add
add
or
add
or
aaa
add
or
add
add
add
or
add
or
aaa
add
or
add
add
add
or
add
or
aaa
add
or
add
add
add
or
add
or
aaa
add
or
add
add
add
or
add
or
aaa
add
or
jb
add
add
jo
pop
xor
dec
add
or
fnsave
add
add
add
add
or
add
or
or
add
jb
push
add
jnp
add
add
add
or
add
add
or
fnstsw
add
add
add
add
add
or
add
or
aaa
add
or
iret
add
add
push
add
fadd
jo
pop
xor
dec
add
or
fisttp
add
add
add
add
add
or
add
or
aaa
add
or
add
add
add
or
add
or
aaa
add
or
add
add
add
or
add
or
aaa
add
or
add
add
add
or
add
or
aaa
add
or
jb
push
add
fadd
jo
pop
xor
dec
add
or
fst
add
add
add
add
add
add
or
add
or
add
jnp
add
add
add
or
add
add
or
frstor
jle
add
add
or
fst
jnp
add
add
xchg
add
or
add
xchg
add
sub
add
or
add
push
outs
mov
add
or
sub
add
push
outs
mov
add
pop
xor
add
outs
mov
add
sub
add
push
sub
add
jnp
add
add
add
or
add
or
lea
add
outs
mov
add
sub
add
push
fisubr
adc
add
sbb
add
jb
add
jo
pop
adc
dec
add
or
add
add
add
add
add
add
add
add
fiadd
sub
add
add
add
add
add
sub
add
adc
add
fidiv
add
or
add
and
add
push
jae
add
or
add
or
add
push
jae
add
or
add
or
outs
xchg
add
or
sbb
add
xor
add
push
add
adc
sub
add
push
fisubr
or
outs
sbb
add
jb
add
jo
pop
adc
dec
add
or
add
add
add
jb
add
jo
add
add
fiadd
sub
add
add
add
add
add
or
add
adc
add
sbb
add
dec
add
add
add
shl
add
add
outs
add
or
add
or
sub
add
outs
imul
add
or
add
jo
imul
or
ins
add
or
jae
add
or
push
pop
add
pop
add
push
outs
xchg
add
or
or
sub
pop
outs
sbb
sub
add
add
add
xor
or
add
add
sub
add
xor
add
add
add
add
adc
push
add
push
add
cwde
add
or
add
add
push
inc
outs
cdq
add
or
adc
add
add
add
jb
add
jo
add
add
fiadd
sub
adc
add
add
add
sbb
adc
add
add
xor
add
add
or
outs
call
add
sub
add
outs
fwait
add
or
add
sar
add
add
outs
add
or
add
or
add
or
add
push
push
outs
sub
add
sub
add
push
sub
add
or
push
add
popf
add
or
adc
add
add
add
jb
add
jo
add
add
fiadd
sub
add
add
add
add
add
push
push
add
add
add
xor
add
add
add
add
adc
push
add
push
add
cwde
add
or
add
add
push
inc
outs
cdq
add
or
adc
add
add
add
jb
add
jo
add
add
fiadd
sub
adc
add
add
add
sbb
adc
add
add
xor
add
add
or
outs
call
add
sub
add
outs
fwait
add
or
add
sar
add
add
outs
add
or
add
or
add
or
add
push
push
outs
sub
add
sub
add
sub
add
or
push
add
popf
add
or
adc
add
add
add
jb
add
jo
add
add
fiadd
sub
add
add
add
add
add
push
push
add
add
add
xor
add
add
push
add
adc
sub
add
push
outs
dec
add
or
add
jo
sub
add
sub
add
push
outs
dec
add
or
add
jo
sub
add
sub
add
add
push
jae
add
or
add
or
adc
add
add
add
jb
add
jo
add
add
fiadd
sub
add
adc
add
add
add
add
add
add
xor
add
add
push
add
adc
jnp
add
add
add
add
jge
add
add
ret
jo
jae
add
or
add
sub
adc
add
rol
add
add
add
add
pop
inc
push
add
add
add
add
add
add
add
add
mov
add
repnz
add
add
add
add
sbb
add
add
add
add
outs
add
add
add
cmp
je
add
add
inc
and
add
jae
add
or
add
or
or
add
add
push
daa
add
push
jae
add
or
add
or
add
and
add
jge
add
add
add
and
or
add
jnp
add
add
inc
sub
add
jae
add
or
add
or
add
and
or
add
add
add
add
add
add
jnp
add
add
inc
sub
add
jae
add
or
add
or
jnp
add
add
test
add
add
push
sub
add
jae
add
or
add
or
add
add
add
add
add
jnp
add
add
inc
sub
add
jae
add
or
add
or
jnp
add
add
test
add
add
push
sub
test
stos
add
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
daa
add
add
add
add
jnp
add
add
inc
and
add
jae
add
or
add
or
add
daa
add
add
add
add
jnp
add
add
inc
and
mov
movs
add
or
add
add
add
add
add
add
sub
add
jge
add
add
add
jge
add
add
adc
push
add
add
sldt
adc
jnp
add
add
push
push
outs
add
or
or
jo
sbb
add
jb
or
jo
add
or
add
add
or
stos
add
or
add
or
add
add
add
outs
lods
add
or
mov
add
pusha
or
jo
sbb
add
jb
or
jo
add
or
add
add
or
add
or
mov
add
lods
or
jo
sbb
add
jb
or
jo
add
or
add
add
or
add
or
mov
add
add
add
sbb
add
jb
or
jo
add
or
add
add
or
add
or
mov
add
cmp
add
sbb
add
jb
or
jo
add
or
add
add
or
add
or
mov
add
jp
add
sbb
add
jb
or
jo
add
or
add
add
or
add
or
into
add
add
add
lods
add
or
add
add
add
jnp
add
add
add
or
add
or
add
or
jnp
add
add
mov
add
sub
add
add
add
outs
lods
add
or
scas
jle
add
add
push
jb
or
jo
or
add
sub
add
outs
mov
add
jae
add
or
jle
add
add
sbb
add
add
push
add
sub
jle
add
add
push
add
mov
add
sub
aas
add
push
sub
add
add
sub
xor
add
add
adc
add
add
and
popf
sbb
or
or
adc
pop
outs
mov
add
push
popa
and
or
pop
pop
or
add
add
or
jecxz
sub
add
push
add
or
add
add
add
push
add
add
add
jmp
jnp
add
add
adc
add
sbb
add
jb
or
jo
add
or
add
sbb
add
sbb
add
outs
add
or
add
inc
push
dec
inc
add
add
add
add
or
add
jbe
xor
xor
add
add
add
add
add
sbb
add
les
add
and
jb
outs
addr16
add
add
sub
add
add
and
add
add
add
add
inc
push
dec
inc
add
add
add
add
ins
outs
bound
add
add
add
add
add
push
pop
mov
or
add
add
add
add
add
add
add
jg
add
sldt
add
add
add
add
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
push
or
add
add
add
add
or
push
add
add
or
push
add
pop
adc
adc
add
add
or
or
or
or
or
or
or
pop
sub
push
add
rcl
iret
or
add
or
or
add
or
add
push
add
or
inc
or
cmp
add
add
add
adc
add
add
adc
add
add
add
iret
or
add
add
jo
add
push
movs
or
add
add
add
add
inc
adc
add
adc
(bad)
adc
fcom
adc
xchg
or
retf
adc
adc
and
imul
add
iret
or
add
adc
adc
add
add
add
add
add
add
bsf
push
add
or
push
add
adc
pavgb
sbb
push
adc
adc
add
adc
push
add
or
or
add
movs
or
add
pop
movs
or
add
or
test
push
iret
or
add
or
or
add
adc
add
or
add
add
adc
or
or
add
add
or
or
add
adc
or
add
add
add
adc
add
add
add
add
or
add
inc
adc
add
adc
mov
add
or
add
add
inc
adc
add
pop
iret
or
add
jge
push
add
add
or
adc
daa
or
adc
mov
add
adc
adc
add
or
jbe
inc
adc
add
adc
add
add
add
adc
add
add
add
add
adc
or
mov
iret
or
add
push
movs
or
add
push
adc
add
add
sbb
adc
add
or
or
add
or
iret
or
add
add
loopne
push
add
add
scas
or
out
adc
add
or
adc
add
or
push
add
adc
adc
add
add
add
add
or
lahf
push
movs
or
add
push
movs
or
add
pavgb
sbb
scas
adc
sbb
das
adc
sbb
outs
push
inc
adc
add
add
push
adc
add
push
fcom
add
inc
adc
add
add
or
add
jae
add
add
xor
add
add
add
add
add
adc
stc
push
jno
cmp
add
add
add
(bad)
add
add
add
add
jno
cmp
add
add
add
adc
cmp
add
add
add
or
cmp
add
adc
cmp
add
add
add
add
add
adc
add
adc
push
(bad)
add
add
add
add
add
add
add
add
add
add
cmp
add
add
add
add
add
add
add
add
add
add
add
add
add
sbb
inc
add
add
add
add
add
add
add
adc
add
add
add
add
or
add
add
ret
add
add
ret
add
add
add
add
add
xlat
add
add
or
add
add
add
loope
add
addr16
add
add
add
add
add
add
mov
add
or
add
add
out
add
int
out
add
addr16
cmp
jmp
add
mov
add
or
add
add
add
add
add
add
add
push
add
ret
add
add
add
push
and
add
add
add
add
add
add
add
and
add
add
add
add
and
add
add
add
in
add
add
xchg
push
add
add
add
add
add
add
add
add
out
rcl
add
add
add
add
out
push
or
add
add
add
add
add
add
add
add
adc
add
add
add
add
out
push
or
add
add
add
add
add
add
add
out
rcl
and
add
add
add
or
and
add
add
add
add
and
add
add
add
add
and
add
add
add
add
and
xchg
xchg
adc
add
add
xchg
add
or
add
add
add
add
out
rcl
and
out
push
or
and
add
add
add
add
add
add
add
add
add
add
and
xchg
inc
push
cmp
sub
push
add
add
xchg
xor
add
add
add
add
xchg
inc
or
add
add
add
add
xchg
(bad)
add
sub
mov
add
add
out
stc
add
sub
call
add
or
add
add
add
add
add
add
add
sub
mov
add
add
add
add
add
add
add
add
add
add
xor
in
add
add
add
xor
or
add
add
add
pusha
das
add
add
add
add
add
add
add
das
add
add
add
cmp
push
xor
add
add
add
add
add
add
add
cmp
movs
xor
add
add
add
add
add
add
add
add
add
add
inc
add
xor
add
add
add
je
add
add
out
xchg
adc
add
movs
xor
add
add
add
adc
inc
add
add
add
enter
add
add
inc
add
xor
add
add
add
push
xor
add
inc
add
xor
add
inc
add
add
add
add
inc
add
add
add
(bad)
xor
add
inc
add
xor
add
inc
add
add
add
or
add
add
xchg
or
or
xor
add
add
xchg
or
add
add
add
xchg
or
add
add
add
xchg
or
adc
add
dec
add
add
xchg
(bad)
add
dec
add
add
add
xchg
sbb
(bad)
add
push
add
add
mov
add
add
scas
add
add
loope
cmc
add
add
mov
add
add
mov
add
add
add
add
add
add
add
mov
adc
add
jnp
add
add
adc
add
adc
add
adc
add
pop
adc
add
add
add
add
or
add
add
int
add
add
pop
adc
add
add
add
add
or
add
add
int
add
add
pop
adc
add
add
add
add
or
add
add
int
add
add
pop
adc
add
add
add
add
or
add
add
int
add
add
inc
or
add
add
add
add
or
add
add
int
add
add
inc
or
add
add
add
add
or
add
add
int
add
add
sahf
or
add
add
add
add
imul
add
add
sldt
add
int
add
add
inc
or
add
add
add
add
or
add
add
int
add
add
inc
or
add
add
add
add
inc
or
add
add
add
add
pop
or
lds
jnp
add
add
lds
jnp
add
add
lds
jnp
add
add
lds
jnp
add
add
lds
jnp
add
add
fisttp
add
add
lds
jnp
add
add
lds
jnp
add
add
lds
jnp
add
add
lds
jnp
add
add
lds
jnp
add
add
lds
jnp
add
add
lds
jnp
add
add
mov
add
add
or
add
add
inc
or
add
add
add
add
inc
add
add
add
or
pop
add
add
add
add
or
(bad)
add
adc
(bad)
add
sgdtd
and
(bad)
or
xor
(bad)
adc
cmp
(bad)
adc
inc
add
movups
dec
add
movups
push
add
movups
pop
add
movups
popa
add
movups
imul
jno
(bad)
adc
rol
add
(bad)
add
loope
(bad)
push
add
add
sgdtd
stc
add
and
sbb
(bad)
add
rol
(bad)
sub
mov
adc
add
add
add
add
add
add
add
add
add
add
dec
add
add
pop
add
jns
(bad)
add
or
(bad)
adc
or
pop
or
or
jp
pop
add
(bad)
add
cdq
add
ins
add
add
add
add
mov
add
add
add
sgdtd
xor
cli
or
or
add
xchg
or
add
(bad)
add
push
add
lahf
add
add
shld
add
or
adc
popa
add
add
or
cmps
(bad)
add
add
in
adc
aad
cmp
jno
(bad)
adc
jno
js
cmp
rol
or
add
xchg
push
jg
adc
(bad)
add
icebp
add
(bad)
add
add
mov
cmp
xlat
add
add
add
add
add
add
sgdtd
mov
add
pop
adc
add
cmp
and
test
add
add
adc
mov
mov
add
push
cmp
adc
pop
adc
add
add
cmp
rol
dec
add
(bad)
add
fld
(bad)
add
loope
(bad)
add
jmp
add
add
or
(bad)
dec
add
add
add
adc
adc
add
(bad)
pusha
add
dec
push
add
jno
imul
pop
cmp
icebp
add
or
add
add
xchg
add
add
add
add
adc
sbb
je
jo
icebp
add
add
adc
sub
and
add
add
push
cmp
xor
mov
nop
add
add
or
push
fwait
add
sub
add
add
add
add
add
add
add
push
push
adc
adc
gs
cmp
adc
mov
add
add
les
and
add
add
add
add
add
add
add
push
adc
adc
jne
adc
adc
ds
cmps
adc
add
add
daa
or
add
sgdtd
xchg
add
add
popa
add
or
or
sgdtd
cdq
add
add
aad
cdq
add
add
movups
jns
and
fld
mov
mov
(bad)
add
or
lds
adc
cmovge
or
fs
add
add
add
add
add
add
add
add
add
add
add
mov
add
add
add
add
add
(bad)
and
popa
add
es
add
add
cmovge
add
rol
cmovge
icebp
add
or
leave
add
or
add
add
cmovge
fld
in
adc
add
add
adc
add
add
cmovge
fld
sub
pop
add
add
fwait
add
add
add
adc
add
add
or
xor
cmps
adc
mov
add
adc
(bad)
jne
loope
(bad)
add
stc
add
mov
mov
push
add
add
add
rol
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
add
add
sbb
add
pop
add
add
pop
add
add
cmp
add
add
add
add
add
add
xchg
add
add
mov
add
mov
add
add
add
add
add
add
mov
add
pusha
add
add
mov
add
mov
add
add
add
loopne
add
add
push
jnp
mov
add
add
mov
push
fwait
add
mov
add
mov
add
mov
add
mov
add
jp
mov
xchg
add
add
jge
mov
icebp
add
add
add
xchg
or
add
add
sub
test
or
add
or
add
or
push
add
add
add
add
sahf
add
add
movs
add
add
movs
add
add
or
lds
scas
add
add
adc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
cmp
add
add
add
add
add
and
add
add
add
add
add
(bad)
push
sti
dec
add
add
add
jno
add
add
add
nop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
mov
add
add
add
add
add
add
add
mov
add
add
add
xchg
adc
add
add
add
add
add
add
add
cmp
outs
jb
gs
inc
outs
push
outs
jb
bound
xor
pop
xor
cmp
arpl
inc
imul
ins
popa
jae
xor
pop
xor
pop
ins
ins
inc
outs
outs
jbe
jb
gs
xor
xor
cmp
outs
jb
gs
inc
outs
push
outs
jb
bound
xor
pop
xor
dec
jne
ins
popa
bound
xor
dec
popa
jae
push
gs
xor
dec
imul
je
push
imul
outs
jb
gs
inc
outs
push
outs
jb
bound
xor
pop
xor
cmp
outs
jb
gs
inc
outs
push
outs
jb
bound
xor
pop
xor
cmp
outs
jb
gs
inc
outs
push
outs
jb
bound
xor
pop
xor
cmp
outs
jb
gs
inc
outs
push
outs
jb
bound
xor
pop
xor
jb
gs
inc
outs
push
outs
jb
bound
xor
pop
add
outs
jb
gs
inc
outs
push
outs
jb
bound
aaa
add
outs
jb
gs
inc
outs
push
outs
jb
bound
xor
pop
cmp
cmp
outs
jb
gs
inc
outs
push
outs
jb
bound
xor
pop
cmp
cmp
outs
fs
gs
jb
jbe
je
dec
ins
jo
gs
outs
je
je
outs
outs
inc
gs
imul
pop
dec
inc
dec
inc
add
je
inc
dec
inc
add
je
inc
dec
inc
add
ins
inc
outs
outs
jbe
jb
gs
push
dec
add
outs
gs
je
pop
dec
dec
add
ins
gs
jns
gs
gs
arpl
dec
inc
inc
dec
add
je
inc
bound
outs
jb
inc
inc
dec
add
je
inc
bound
outs
jb
inc
inc
dec
add
arpl
imul
outs
jne
je
inc
inc
dec
add
dec
inc
inc
dec
add
jae
gs
cs
dec
add
jae
gs
cs
imul
dec
gs
gs
cs
imul
inc
popa
je
add
fs
jae
jb
popa
je
add
jb
imul
inc
popa
je
add
je
popa
je
add
ins
ins
outs
outs
dec
outs
jo
je
popa
je
add
arpl
ins
imul
gs
cs
outs
ins
ins
arpl
outs
jae
inc
outs
gs
arpl
push
jne
push
outs
jb
gs
jae
outs
arpl
gs
outs
je
imul
arpl
gs
add
outs
outs
arpl
outs
dec
add
gs
add
add
fs
dec
outs
popa
fs
outs
outs
ja
dec
outs
popa
fs
outs
outs
je
outs
je
outs
popa
fs
fs
push
jb
addr16
jae
inc
push
add
jb
gs
push
jb
addr16
jae
inc
push
add
fs
push
jb
jo
jb
jns
push
add
ins
outs
jbe
pop
push
jb
jo
jb
jns
push
add
outs
je
data16
jb
jo
jb
jns
push
add
imul
je
jo
gs
outs
jb
outs
imul
push
add
je
dec
jae
push
add
je
dec
jae
push
add
je
jb
outs
arpl
add
je
dec
popa
outs
fs
gs
jae
gs
cs
outs
ins
ins
arpl
outs
jae
push
jo
arpl
ins
imul
outs
arpl
outs
outs
imul
jb
ins
ins
push
outs
inc
outs
add
outs
arpl
inc
outs
ins
ins
popa
outs
add
imul
gs
push
je
arpl
jb
arpl
fs
jne
je
outs
jae
popa
outs
arpl
jae
je
push
outs
jne
arpl
dec
ja
fs
outs
jne
arpl
push
jb
jae
outs
je
je
outs
outs
push
outs
jne
arpl
addr16
inc
bound
outs
jb
jb
inc
outs
fs
je
inc
bound
outs
jb
jb
inc
outs
fs
dec
jb
inc
outs
fs
push
popa
ins
imul
jns
outs
fs
inc
outs
jne
je
jns
outs
fs
jae
popa
addr16
outs
js
ins
popa
add
je
dec
gs
popa
add
je
push
jb
addr16
jae
push
gs
outs
je
add
ins
jo
jb
inc
js
push
add
jbe
imul
inc
imul
ins
add
jae
gs
cs
imul
inc
outs
jb
jae
dec
push
imul
outs
ja
dec
popa
outs
fs
add
jae
gs
cs
imul
inc
outs
jb
jae
dec
push
imul
outs
ja
addr16
dec
popa
outs
fs
add
outs
je
ins
gs
jns
gs
popa
outs
fs
add
je
jns
gs
jb
ins
dec
popa
outs
fs
add
popa
outs
fs
add
outs
imul
add
outs
dec
jo
outs
inc
imul
outs
outs
jae
ins
add
je
inc
imul
jae
je
inc
imul
addr16
inc
jne
ins
dec
popa
ins
add
je
push
ja
dec
gs
gs
push
dec
push
imul
add
je
inc
bound
outs
jb
popa
ins
add
je
inc
bound
outs
jb
popa
ins
add
inc
imul
je
popa
ins
add
je
imul
jns
popa
ins
add
gs
imul
pop
inc
bound
outs
jb
fs
jae
dec
imul
pop
inc
bound
outs
jb
fs
jae
dec
imul
pop
dec
gs
imul
bound
add
bound
ins
gs
jns
add
gs
imul
jb
inc
outs
ins
ins
arpl
outs
push
jns
add
addr16
jns
add
outs
je
outs
addr16
outs
je
jns
jns
add
jae
gs
cs
outs
jb
add
gs
outs
je
je
outs
outs
inc
outs
jb
add
je
inc
jne
je
jb
add
je
inc
jne
je
jb
add
jae
jne
arpl
jne
je
jb
add
ins
je
jb
add
je
inc
outs
fs
popa
jae
add
outs
addr16
popa
jae
add
je
outs
outs
inc
popa
jae
add
jo
imul
push
gs
imul
add
outs
outs
ja
inc
popa
jae
add
je
outs
js
popa
jae
add
jo
jae
add
ins
imul
ins
gs
je
add
imul
jae
bound
je
je
add
inc
push
push
inc
je
jb
bound
add
ins
jo
ins
gs
outs
gs
je
fs
je
jb
bound
add
imul
jne
add
outs
gs
je
fs
outs
fs
je
jb
bound
add
jne
addr16
outs
outs
push
jae
jb
outs
fs
je
jb
bound
add
jne
addr16
bound
je
jb
bound
add
imul
jae
bound
je
jb
bound
add
ins
push
imul
je
jb
bound
add
jae
ins
bound
imul
imul
jae
gs
bound
jb
fs
popa
jb
inc
je
jb
bound
add
je
outs
jae
outs
outs
inc
je
jb
bound
add
jae
ins
bound
outs
outs
imul
je
outs
outs
inc
je
jb
bound
add
jae
ins
bound
gs
jb
jo
imul
imul
outs
ins
jo
ins
popa
je
outs
outs
push
gs
popa
js
je
outs
outs
jae
je
jb
bound
add
jae
ins
bound
jb
fs
je
je
jb
bound
add
jae
ins
bound
outs
jo
jb
addr16
jb
bound
add
jae
ins
bound
outs
ins
jo
outs
jns
je
jb
bound
add
outs
je
ins
gs
outs
ins
jo
je
bound
imul
bound
add
je
push
popa
ins
jne
add
je
push
popa
ins
jne
add
je
push
gs
arpl
push
popa
ins
jne
add
je
dec
popa
jae
popa
ins
jne
add
ins
jne
add
ins
outs
jbe
add
ins
inc
outs
outs
jbe
jb
gs
push
dec
cs
add
jb
popa
ins
imul
gs
popa
ins
imul
je
ins
cs
push
imul
je
ins
cs
imul
push
push
imul
imul
outs
je
imul
jae
popa
jo
inc
popa
je
push
je
imul
je
imul
pop
inc
ins
outs
jae
outs
add
outs
outs
ja
inc
ins
outs
jae
outs
add
je
jb
inc
outs
fs
push
popa
jae
imul
inc
outs
jne
je
jns
outs
fs
push
popa
jae
imul
outs
je
outs
add
outs
inc
imul
add
ins
ins
outs
outs
inc
imul
outs
ins
fs
jb
ja
gs
imul
push
popa
ins
outs
add
dec
popa
je
push
jo
je
push
je
imul
add
je
push
popa
je
add
je
push
gs
arpl
push
popa
je
add
je
push
gs
arpl
push
popa
je
add
je
push
jae
inc
gs
jne
je
imul
jae
je
push
jae
inc
gs
jne
je
imul
je
je
imul
je
jb
gs
popa
je
add
imul
jne
je
popa
je
add
je
dec
outs
addr16
add
jbe
add
je
push
je
jb
jne
push
jb
add
outs
jbe
jb
inc
popa
arpl
popa
fs
inc
ins
imul
dec
jo
outs
inc
imul
imul
push
popa
jne
je
popa
je
pop
inc
ins
imul
inc
outs
outs
jbe
jb
pop
inc
ins
imul
pop
inc
outs
push
outs
jb
add
jb
gs
inc
outs
push
outs
jb
add
gs
outs
je
je
outs
outs
inc
jb
ins
gs
jb
add
outs
ins
push
imul
imul
jns
je
ins
cs
outs
ins
jo
outs
outs
je
outs
fs
add
jae
gs
cs
ins
ins
add
je
dec
je
ins
add
jae
gs
add
ins
add
jae
jne
arpl
popa
outs
add
ins
jne
inc
outs
outs
jbe
jb
gs
bound
add
outs
outs
ins
gs
outs
add
ins
popa
jae
push
arpl
outs
add
imul
outs
ins
popa
imul
inc
jne
jb
outs
je
outs
ins
popa
imul
push
jne
ins
imul
jb
imul
pop
push
jne
ins
imul
jb
imul
ins
imul
add
ins
imul
push
jns
je
ins
cs
outs
outs
imul
je
outs
outs
add
jae
gs
cs
ins
outs
bound
imul
add
jae
gs
cs
ins
ins
cs
gs
popa
ins
imul
add
je
outs
outs
add
jae
gs
cs
gs
arpl
outs
add
ins
gs
popa
ins
jne
inc
outs
ins
ins
arpl
outs
add
je
ins
jo
gs
outs
je
fs
js
gs
imul
ins
gs
jne
je
outs
add
jae
popa
addr16
outs
js
jne
je
outs
add
outs
add
ins
gs
outs
outs
add
ins
je
jb
dec
outs
outs
add
ins
gs
jns
je
ins
dec
outs
outs
add
imul
add
arpl
jns
outs
outs
add
outs
add
gs
push
jns
je
ins
cs
imul
dec
outs
je
jb
jo
inc
jo
add
jae
gs
cs
imul
dec
popa
jb
jne
add
outs
addr16
jae
inc
popa
jb
push
je
gs
ins
push
gs
fs
push
gs
push
gs
fs
push
jb
inc
jne
ins
fs
jae
outs
fs
addr16
push
gs
jne
arpl
popa
outs
popa
addr16
inc
outs
outs
imul
je
outs
outs
dec
popa
outs
popa
addr16
addr16
inc
imul
gs
push
jo
ja
inc
popa
arpl
jb
jne
fs
outs
jb
gs
inc
popa
arpl
jb
jne
fs
outs
jb
gs
inc
fs
popa
outs
fs
gs
push
jb
addr16
jae
inc
push
fs
jbe
outs
je
popa
outs
fs
gs
push
jb
jo
jb
jns
push
fs
jbe
outs
je
popa
outs
fs
gs
push
outs
jne
gs
jbe
outs
je
popa
outs
fs
gs
inc
popa
je
dec
bound
arpl
jae
imul
je
popa
outs
fs
gs
inc
outs
push
outs
jb
inc
jbe
outs
je
popa
outs
fs
gs
inc
popa
outs
arpl
inc
jbe
outs
je
popa
outs
fs
gs
push
gs
inc
outs
ins
jo
jae
je
outs
outs
inc
jbe
outs
je
popa
outs
fs
gs
push
jns
je
ins
cs
outs
fs
outs
ins
cs
outs
ins
jo
ins
gs
inc
jbe
outs
je
imul
ins
jo
jb
jo
jb
ins
gs
jb
push
je
gs
ins
push
jb
je
jb
push
gs
push
jb
je
jb
dec
push
popa
ins
jne
inc
outs
outs
jbe
jb
gs
dec
dec
jne
je
push
popa
ins
jne
inc
outs
outs
jbe
jb
gs
inc
imul
outs
jb
pop
push
je
imul
outs
ins
inc
outs
outs
jbe
jb
gs
dec
jne
je
push
popa
ins
jne
push
imul
je
inc
outs
outs
jbe
jb
gs
push
jb
je
push
outs
inc
jbe
outs
je
imul
outs
dec
outs
ja
jb
pop
ins
ins
push
gs
popa
ins
imul
popa
outs
push
popa
ins
imul
outs
jo
je
popa
ins
imul
arpl
add
arpl
outs
jb
push
gs
arpl
add
outs
ins
jo
outs
outs
je
outs
outs
outs
arpl
add
imul
gs
arpl
add
jae
gs
cs
imul
imul
je
ins
cs
jne
je
ins
gs
outs
je
jb
jo
gs
imul
jae
gs
cs
jne
je
ins
gs
outs
ins
jo
ins
gs
gs
imul
jae
gs
cs
gs
jne
arpl
add
ins
inc
outs
outs
jbe
jb
gs
push
dec
cs
jae
jne
arpl
add
ins
inc
outs
outs
jbe
jb
gs
push
dec
cs
jb
jo
jb
imul
outs
jne
arpl
cs
jae
jne
arpl
add
push
gs
inc
ins
ins
outs
ja
fs
dec
jb
inc
outs
fs
dec
jae
gs
inc
ins
ins
outs
ja
fs
inc
outs
jne
je
jns
outs
fs
inc
bound
imul
jae
pop
ins
ins
inc
outs
outs
jbe
jb
gs
push
dec
cs
jb
jo
jb
imul
je
jb
push
jns
gs
inc
gs
jne
je
jb
jae
dec
jne
je
push
popa
ins
jne
push
imul
je
inc
outs
outs
jbe
jb
gs
js
arpl
gs
jbe
ins
jne
jae
push
jns
je
ins
cs
imul
inc
outs
outs
je
outs
ins
jae
push
jb
ins
imul
gs
inc
jo
push
gs
imul
outs
addr16
jae
inc
push
fs
jbe
outs
je
jb
jae
push
jb
jo
jb
jns
push
fs
jbe
outs
je
jb
jae
push
outs
jne
gs
jbe
outs
je
jb
jae
inc
popa
je
dec
bound
arpl
jae
imul
je
jb
jae
inc
outs
push
outs
jb
inc
jbe
outs
je
jb
jae
inc
popa
outs
arpl
inc
jbe
outs
je
jb
jae
push
gs
inc
outs
ins
jo
jae
je
outs
outs
inc
jbe
outs
je
jb
jae
inc
popa
je
dec
bound
arpl
outs
je
jb
jae
cmp
xor
pop
je
imul
gs
cs
imul
inc
outs
outs
je
outs
ins
jae
push
jns
je
ins
cs
imul
inc
outs
jb
jae
inc
outs
outs
je
imul
inc
js
outs
jae
outs
outs
jae
push
jns
je
ins
cs
gs
cs
gs
popa
jb
js
jb
jae
imul
je
inc
push
je
je
fs
jae
add
je
push
outs
jb
gs
gs
jb
jae
jb
addr16
jae
add
jo
jb
push
jb
addr16
jae
add
ins
gs
jns
gs
gs
arpl
dec
inc
inc
dec
fs
jae
inc
imul
gs
arpl
inc
je
outs
outs
inc
jb
imul
arpl
js
jae
jae
inc
outs
arpl
add
push
je
je
jae
push
jns
je
ins
cs
imul
inc
outs
outs
arpl
add
je
dec
outs
outs
jb
inc
je
outs
outs
inc
jb
imul
je
jae
je
dec
outs
outs
jb
inc
je
outs
outs
inc
jb
imul
je
arpl
dec
outs
outs
jb
inc
je
outs
outs
arpl
imul
je
dec
inc
popa
je
dec
bound
arpl
gs
inc
popa
je
dec
bound
arpl
imul
gs
bound
arpl
jns
je
ins
cs
imul
dec
popa
jb
jne
cs
inc
outs
ins
jo
outs
outs
je
outs
outs
outs
arpl
cs
outs
outs
outs
arpl
popa
jb
gs
addr16
inc
gs
jne
je
inc
gs
popa
ins
jne
dec
jb
gs
jne
je
inc
imul
jae
ins
je
dec
gs
popa
addr16
outs
js
gs
ins
je
push
dec
inc
ins
gs
outs
je
inc
jb
ins
gs
jb
inc
ins
gs
outs
je
inc
outs
jbe
jb
outs
ins
outs
je
addr16
inc
jb
jne
outs
je
dec
outs
popa
fs
outs
ins
jo
outs
outs
je
dec
outs
imul
inc
outs
ins
jo
outs
outs
je
inc
gs
popa
je
push
jb
jae
outs
je
push
outs
jne
gs
jbe
outs
je
push
popa
jae
imul
je
bound
outs
outs
jbe
jb
add
jae
gs
cs
imul
dec
outs
jo
je
popa
fs
push
jb
jbe
gs
gs
dec
outs
jo
je
je
je
jb
inc
outs
fs
push
jb
jbe
gs
gs
dec
outs
jo
je
je
je
outs
jne
je
jns
outs
fs
push
jb
jbe
gs
gs
dec
outs
jo
je
addr16
push
gs
add
je
push
gs
add
jo
outs
fs
gs
add
je
inc
popa
je
inc
outs
outs
je
js
add
jb
gs
popa
ja
addr16
dec
outs
ja
inc
gs
push
imul
outs
ja
dec
ins
fs
imul
popa
imul
ja
push
push
gs
inc
popa
jb
je
outs
fs
push
gs
dec
gs
popa
addr16
outs
js
inc
push
outs
js
inc
outs
ins
bound
outs
js
push
gs
inc
outs
js
addr16
inc
jae
gs
bound
inc
gs
js
arpl
imul
ins
bound
addr16
inc
imul
outs
jb
add
je
inc
imul
outs
jb
add
je
inc
imul
jns
addr16
inc
popa
jae
inc
imul
jns
addr16
inc
jae
gs
bound
imul
jns
push
jb
je
inc
outs
je
jns
addr16
inc
bound
outs
jb
outs
jne
je
jns
jae
je
inc
bound
outs
jb
outs
jne
je
jns
outs
jo
inc
jno
popa
ins
imul
outs
gs
popa
ins
imul
push
imul
je
add
dec
jne
ins
dec
jb
ins
jo
jns
add
add
inc
add
add
add
ins
add
outs
add
jbe
add
je
add
add
jnp
xor
jge
jnp
xor
jge
jnp
xor
jge
add
pop
add
xor
sub
add
add
add
pop
add
inc
add
add
add
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
imul
add
outs
add
jb
add
je
push
add
jb
add
add
add
outs
add
ins
add
je
add
je
inc
add
add
add
jae
add
je
inc
add
jne
outs
add
add
inc
add
add
add
je
js
je
dec
add
inc
add
add
je
js
je
inc
add
jb
jae
je
dec
add
jae
je
dec
add
ins
add
add
add
add
arpl
imul
add
add
add
add
arpl
imul
add
inc
add
adc
add
imul
add
inc
add
adc
ins
add
dec
add
jne
jb
jae
add
arpl
ins
add
dec
add
jne
jb
jae
inc
add
adc
ins
add
dec
add
jne
jb
jae
inc
add
adc
bound
dec
add
outs
add
je
add
add
arpl
ins
add
dec
add
outs
add
je
add
inc
add
pop
arpl
ins
add
dec
add
outs
add
je
add
inc
add
or
inc
add
dec
add
and
add
add
add
add
add
add
add
and
xchg
add
add
add
add
add
add
add
add
pop
dec
add
imul
imul
outs
add
add
popa
add
ins
add
adc
add
outs
add
add
outs
add
add
push
add
bound
ins
add
jae
push
add
add
jae
imul
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
rol
add
add
add
add
add
ret
add
pop
inc
add
jo
ins
add
arpl
popa
add
add
outs
add
bt
mov
add
add
add
add
add
add
add
and
sub
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
mov
les
rol
add
add
add
add
add
jae
add
add
outs
add
jae
push
add
jb
jae
imul
add
arpl
add
jns
add
add
and
sub
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
xor
jge
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sub
and
mov
mov
mov
add
add
add
add
add
cmp
rol
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
cmp
add
add
add
add
add
add
add
add
add
add
add
add
add
cmp
add
add
add
add
add
add
add
mov
rol
add
add
add
add
add
int3
add
add
add
add
add
sub
and
cdq
add
add
and
xchg
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
and
mov
add
add
add
add
add
add
add
add
add
add
add
add
add
mov
les
rol
add
add
pop
lahf
add
add
add
add
add
add
add
mov
rol
add
add
add
add
xor
jge
sub
and
mov
mov
mov
add
add
add
add
add
push
mov
add
add
add
add
add
add
add
add
add
add
add
add
add
add
mov
les
rol
add
add
xor
add
add
add
add
add
mov
rol
add
add
add
add
add
int3
add
add
add
add
add
add
add
add
mov
rol
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
mov
les
rol
add
add
inc
xchg
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
das
add
ins
add
add
outs
add
add
je
add
inc
add
dec
add
add
outs
add
jo
outs
add
add
je
das
add
popa
add
outs
add
imul
outs
add
add
popa
add
ins
add
cmp
xor
jge
jnp
xor
jge
and
sub
add
add
mov
mov
add
add
add
mov
add
add
or
xor
cmp
push
add
add
add
add
jnp
xor
jge
and
sub
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
jnp
xor
jge
jnp
xor
jge
and
sub
add
add
add
add
add
add
add
add
add
add
mov
add
aaa
jnp
xor
jge
jnp
xor
jge
and
sub
add
add
add
add
add
add
add
add
add
add
inc
jnp
xor
jge
jnp
xor
jge
and
sub
add
add
add
add
add
add
add
add
add
ins
add
add
dec
jnp
xor
jge
jnp
xor
jge
and
sub
add
add
mov
mov
add
add
add
add
add
add
add
add
add
add
add
add
ins
add
outs
add
jbe
add
je
add
inc
add
dec
add
add
jb
outs
add
add
je
imul
add
add
outs
add
jb
arpl
add
add
add
add
jnp
xor
jge
and
sub
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
jnp
xor
jge
jnp
xor
jge
add
push
jo
in
jne
mov
mov
and
add
add
or
adc
push
add
add
add
and
sbb
push
add
sbb
and
add
and
pop
add
inc
add
add
push
add
add
add
add
pop
add
push
sbb
sbb
and
add
adc
add
add
push
add
add
pop
add
push
or
add
or
and
or
add
push
add
push
add
sbb
pop
add
push
or
add
sbb
pop
add
pop
add
adc
add
add
pop
and
add
adc
add
and
add
adc
push
push
add
add
inc
add
push
add
add
sbb
pop
add
add
test
add
adc
adc
add
add
push
add
add
add
test
and
add
or
test
add
add
inc
or
add
add
adc
add
add
add
and
add
pop
push
push
adc
or
adc
push
adc
add
add
add
jge
and
add
or
add
add
sbb
and
add
or
and
add
or
pop
add
adc
adc
adc
adc
push
push
add
push
pop
add
adc
and
add
sub
adc
or
inc
add
sbb
add
adc
add
cmp
push
and
add
or
adc
adc
add
add
and
add
adc
push
adc
and
adc
add
pop
add
pop
add
add
and
add
add
loope
add
add
and
and
add
sbb
adc
add
sub
cmc
or
add
adc
add
cdq
push
and
add
sbb
add
push
adc
adc
add
add
or
add
or
mov
pop
push
sbb
mov
xor
dec
xor
jg
aad
cmp
inc
add
jo
ins
add
arpl
popa
add
add
outs
add
push
adc
add
adc
or
adc
adc
add
adc
sbb
add
add
adc
dec
add
adc
add
sbb
push
adc
push
and
add
inc
push
or
add
sbb
adc
and
pop
sbb
dec
or
add
sbb
pop
sbb
dec
push
add
adc
add
add
add
mov
and
add
or
add
adc
add
xor
adc
add
adc
and
add
sbb
and
add
sbb
add
adc
adc
add
add
dec
add
add
xor
add
push
add
add
sbb
mov
sub
push
add
in
add
add
dec
add
add
xor
sub
sbb
add
add
add
or
add
add
push
add
add
push
add
push
jb
jo
outs
outs
inc
js
gs
imul
ja
add
add
add
add
add
adc
add
pop
ins
ins
inc
outs
outs
jbe
jb
gs
push
dec
add
add
add
add
or
arpl
jae
data16
add
add
sbb
jo
jb
addr16
and
arpl
jae
data16
xor
xor
add
sub
add
xor
data16
cmp
sub
sub
sub
sub
xor
cmp
add
add
push
push
jb
jae
outs
je
je
outs
outs
inc
jne
ins
fs
popa
jae
jae
xor
xor
xor
xor
add
add
add
add
add
inc
add
xor
jae
gs
cs
gs
jne
arpl
cs
outs
outs
ins
jae
push
je
outs
outs
ins
jns
jns
gs
gs
jne
arpl
jne
ins
fs
xor
xor
xor
xor
add
add
imul
je
push
imul
jne
imul
outs
jb
cs
gs
imul
imul
gs
imul
ins
gs
imul
popa
je
jb
xor
xor
xor
xor
add
test
add
into
retf
add
add
xchg
add
add
jae
gs
cs
gs
jne
arpl
cs
gs
jne
arpl
gs
fs
and
arpl
ins
imul
jae
outs
outs
cmp
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
aaa
popa
xor
cmp
xor
xor
cmp
push
jns
je
ins
cs
gs
jne
arpl
cs
jne
je
ins
gs
gs
jne
arpl
gs
add
add
add
add
add
push
inc
inc
push
inc
inc
push
stc
xchg
outs
cwde
jmp
(bad)
fmul
mov
cmp
add
outs
add
add
add
add
ins
add
add
add
outs
add
add
add
push
ins
add
imul
imul
outs
add
add
popa
add
ins
add
jb
add
outs
add
jb
arpl
add
das
add
add
jo
ins
add
jns
imul
outs
add
add
arpl
outs
add
mov
add
jae
outs
add
jb
arpl
add
das
add
popa
add
add
add
arpl
outs
add
adc
add
mov
add
mov
inc
or
add
or
add
add
add
add
add
add
or
pop
jae
add
and
add
and
js
aas
jbe
add
dec
imul
je
jae
outs
jo
dec
inc
inc
and
outs
imul
ficomp
jmp
hlt
inc
dec
mov
adc
mov
and
adc
and
adc
add
enter
mov
sub
mov
fadd
in
mov
mov
sti
loope
mov
out
(bad)
mov
ds
repz
mov
pop
ror
xchg
dec
xor
or
push
adc
add
(bad)
loope
cs
or
or
and
add
jle
cmp
and
pop
mov
or
add
dec
fwait
shl
xchg
pminsw
pop
add
xchg
cmp
adc
jp
inc
cmps
add
add
add
arpl
add
add
jg
rol
sbb
pop
xchg
and
and
mov
cmp
lods
iret
push
mov
pop
xor
adc
dec
les
add
sub
dec
add
adc
mov
or
xor
test
add
add
and
js
test
push
cmp
sub
add
mov
mov
pop
or
cs
sub
dec
pop
sub
popa
add
inc
cs
sbb
xor
add
xor
js
push
scas
into
into
mov
mov
(bad)
stos
jo
add
loope
jle
(bad)
sub
mov
cmp
sub
and
or
mov
inc
mov
mov
jo
jle
cmp
mov
in
in
dec
les
popa
retf
(bad)
addr16
push
std
ins
stc
jle
cld
div
loopne
loop
xor
clc
loopne
int3
hlt
dec
movs
sbb
xchg
or
cld
mov
(bad)
cld
sbb
bound
push
adc
inc
call
inc
xchg
sub
and
fild
add
fbstp
add
sub
test
pop
je
loop
add
repnz
or
sub
iret
ja
out
aas
std
inc
mov
dec
xchg
jno
add
and
push
retf
(bad)
or
add
sub
sbb
push
sbb
add
pusha
test
(bad)
inc
or
jb
sub
mov
sub
aam
sbb
xchg
push
mov
cli
popa
or
or
enter
and
mov
bound
pop
cdq
test
and
dec
add
mov
leave
mov
and
xor
push
and
sbb
cmp
cmp
add
cmp
mov
mov
cmp
mov
inc
mov
xor
shl
sbb
shr
ds
(bad)
xor
call
ins
xor
mov
mov
sub
xchg
arpl
mov
lods
or
(bad)
sbb
mov
arpl
mov
add
add
inc
and
inc
dec
pop
dec
pop
dec
fmul
and
xor
fimul
aaa
or
test
daa
and
mov
bound
xor
(bad)
adc
mov
aaa
and
mov
daa
mov
movs
push
rcl
rol
outs
push
and
sub
fwait
xor
sbb
xchg
leave
fisub
pop
cmp
in
in
in
in
in
repnz
or
clc
push
loop
push
retf
sbb
adc
xor
push
gs
xor
mov
mov
pop
inc
lods
mov
xchg
cmp
adc
dec
movs
lods
mov
pop
push
je
adc
xchg
push
dec
xchg
rcl
retf
jmp
add
ja
or
mov
sbb
sbb
scas
cwde
dec
cmps
sbb
mov
(bad)
push
xor
xor
cwde
out
setns
pop
sub
retf
dec
xchg
es
sbb
das
push
test
stos
or
push
retf
push
(bad)
jge
inc
push
xor
test
push
stos
popf
push
jmp
sbb
test
addr16
push
aas
movs
jle
std
mov
pop
ret
dec
ret
dec
inc
movs
push
mov
(bad)
and
arpl
mov
sub
imul
les
mov
fnstcw
mov
mov
inc
xor
push
mov
repz
data16
pop
jecxz
jno
pushf
je
or
sub
ficom
sub
sub
cmps
xor
mov
stos
xchg
xchg
xchg
pop
stos
dec
stos
push
stos
inc
jmp
ss
in
cmps
popf
cmps
mov
or
pop
daa
inc
addr16
into
add
push
frstor
cmp
stos
imul
mov
sahf
mov
outs
cmps
fidivr
out
sbb
das
std
push
std
ins
cli
cmps
cmc
inc
or
push
mov
and
fisttp
sbb
sbb
push
inc
pop
ret
inc
inc
movs
popa
xchg
popa
xchg
loope
xchg
mov
inc
lea
mov
pop
jecxz
jecxz
(bad)
ins
(bad)
mov
es
dec
jmp
cmps
sub
(bad)
int
int
int
cdq
xor
xor
fwait
out
xlat
fbstp
sub
test
mov
pop
cmps
pop
out
mov
outs
test
pop
movs
pop
push
pop
pop
mov
lods
popf
lods
and
cmps
adc
stos
sahf
(bad)
addr16
mov
mov
mov
mov
mov
fadd
fld
popa
bound
addr16
scas
ret
out
xchg
mov
(bad)
std
cmp
push
stos
sbb
mov
adc
push
cmp
call
hlt
xchg
jmp
adc
fdiv
jecxz
adc
sub
imul
jae
xrelease
cs
ds
sbb
(bad)
mov
jno
loope
shl
popf
fwait
mov
ret
fld
out
xchg
lahf
int3
xor
sub
ret
enter
in
aas
or
lods
jle
inc
dec
and
das
xchg
push
lods
xlat
mov
movs
ja
mul
pop
idiv
jb
jecxz
jecxz
aaa
fidiv
ficomp
int3
aaa
shl
outs
sahf
pop
test
inc
jg
jmp
call
add
add
add
clc
jp
and
div
mov
pop
lods
and
in
nop
lods
and
out
into
xchg
into
imul
(bad)
rol
popa
out
mov
jle
daa
test
mov
pop
sbb
xor
inc
jae
inc
cli
inc
xchg
inc
ficomp
scas
sub
stos
cs
fidiv
mov
cs
int3
aad
popf
pop
dec
ins
dec
sbb
sub
(bad)
in
repz
popf
loop
jecxz
pop
cwde
das
enter
mov
cmps
push
test
xchg
inc
dec
mov
xchg
lock
adc
test
mov
mov
jns
sbb
shl
ror
push
dec
repnz
sub
xchg
in
xchg
mov
xor
daa
test
dec
fstp
jbe
ins
xor
xchg
xchg
nop
jno
stos
and
mov
jmp
test
mov
push
xchg
pop
leave
imul
or
pop
sub
sub
mov
gs
mov
retf
stos
sahf
sub
in
int3
mov
fist
(bad)
in
adc
adc
xchg
mov
xchg
sub
lods
push
mov
jno
fisttp
jecxz
add
lods
cmp
mov
stos
in
push
xchg
scas
jle
es
imul
mov
imul
push
or
test
(bad)
in
pop
dec
pop
das
pop
fbstp
sbb
adc
fist
xchg
adc
js
sbb
fcom
fs
data16
out
sub
stos
xchg
out
push
outs
or
fist
in
cmc
test
xchg
int
fstp
mov
cmps
leave
into
int
aas
push
movs
push
hlt
push
cli
push
ss
rcr
mov
xlat
clc
outs
shr
sbb
div
aad
pop
mov
mov
dec
aad
aad
sti
dec
sti
mov
aas
scas
mov
ins
pop
lods
dec
ins
jno
mov
and
mov
mov
cmp
sub
inc
push
(bad)
pop
mov
sub
lea
jns
jmp
push
or
jnp
loope
rcr
jbe
addr16
repnz
bound
dec
int3
ds
jmp
setl
pop
jns
repz
leave
imul
addr16
mov
cs
fsub
mov
into
fild
outs
out
mov
inc
dec
into
pop
repnz
in
push
mov
pop
ins
jmp
dec
(bad)
mov
mov
jp
mov
imul
sbb
mov
(bad)
aad
cmp
outs
test
fnstsw
daa
std
into
retf
mov
lods
mov
inc
in
inc
fld
xchg
aas
pop
(bad)
(bad)
out
fdivr
shl
rcr
inc
test
xchg
cmc
(bad)
cmovae
xchg
cmp
loop
jb
jmp
fs
es
pop
(bad)
mov
push
das
jle
aad
xlat
into
rcr
xchg
xchg
mov
jmp
ret
mov
pop
hlt
push
sti
in
shl
sbb
dec
in
and
jmp
mov
push
shl
xchg
inc
cwde
repz
arpl
sub
and
push
dec
add
jp
add
add
add
xor
add
pusha
add
cmp
xchg
pop
lds
add
push
js
les
sbb
jg
pop
adc
add
fwait
adc
push
mov
xor
mov
inc
xor
and
and
xor
inc
js
aaa
addr16
inc
push
popa
or
xor
jmp
aam
int
das
pop
test
adc
push
retf
pop
inc
test
std
repnz
aas
out
into
jae
std
out
cdq
adc
add
nop
adc
inc
fldz
xor
daa
inc
out
jecxz
rcl
add
xsave
cmc
dec
iret
popf
div
xchg
das
mov
jno
test
ss
pop
sbb
fidivr
div
mov
mov
mov
jne
ds
fimul
dec
sahf
call
test
pop
bound
jns
ja
add
xor
push
dec
pop
mov
mov
imul
and
ss
nop
cmp
in
loope
pop
gs
adc
aad
mov
mov
repnz
out
mov
jl
push
mov
ins
add
add
add
ins
add
int
push
outs
push
mov
in
lahf
sbb
add
sti
mov
mov
fcom
jmp
add
ror
xchg
and
mov
aam
mov
cdq
dec
in
(bad)
out
jno
mov
inc
dec
cmc
rep
mov
pushf
cmp
fstp
mov
rcr
clc
clc
mov
pop
push
cmp
adc
sti
adc
adc
shr
mov
jo
(bad)
lahf
out
repnz
pusha
and
call
inc
jp
jne
dec
ror
jnp
lea
lock
movs
movs
das
pop
cmp
cmp
or
jns
cs
out
out
mov
stos
lods
cmp
in
jne
neg
mov
loope
nop
push
push
div
out
test
mov
nop
imul
mov
mov
adc
out
jb
mov
cmp
pop
pop
ror
add
add
popf
fcomp
aam
push
sub
and
sbb
test
push
ss
rcl
ficom
fs
adc
lods
scas
jnp
loopne
fistp
add
xlat
movs
cdq
xor
jp
add
scas
lds
inc
xchg
(bad)
cmp
inc
(bad)
pusha
pop
lahf
sbb
fwait
dec
mov
jl
outs
sub
mov
cmps
dec
(bad)
cmp
in
mov
mov
icebp
rol
xchg
mov
repnz
out
mov
mov
inc
dec
pop
dec
xor
xor
sub
sub
dec
sti
stc
mov
xchg
outs
out
scas
sbb
inc
out
in
(bad)
mov
adc
jae
jo
pop
mov
addr16
jg
jl
aad
outs
(bad)
jle
inc
inc
repz
jp
mov
adc
in
mov
adc
out
xchg
pop
pop
mov
pop
pop
in
xchg
clc
std
jbe
push
mov
call
jmp
popf
in
repz
int3
dec
int3
(bad)
lahf
gs
in
out
mov
mov
fist
pop
inc
fst
push
push
out
test
mov
or
add
sub
inc
inc
push
shl
aam
fisub
cmc
ret
lea
fcmovu
pop
stos
cld
cld
daa
test
call
popf
adc
imul
(bad)
pop
or
sbb
cmp
cmp
shl
jne
xor
dec
dec
pop
xchg
jnp
shl
mov
rol
xchg
adc
ss
imul
push
imul
sub
fnstenv
fsub
add
jno
mov
inc
mov
cmps
(bad)
imul
js
and
cmp
imul
xor
jnp
lods
sbb
sti
sahf
repnz
stos
sahf
(bad)
jmp
dec
mov
sbb
in
(bad)
icebp
(bad)
sti
mov
pop
cs
nop
ins
xor
xor
pusha
xchg
test
dec
add
outs
xor
shl
or
add
dec
xor
add
xchg
cdq
fcmovnb
and
outs
bound
mov
sar
pop
xor
jae
jnp
out
fsubp
cld
iret
(bad)
sti
stos
jno
xchg
addr16
xchg
(bad)
bound
or
inc
jae
xchg
xchg
ret
add
mov
cmp
(bad)
bound
add
in
call
stc
pop
jo
inc
shl
fisttp
xchg
adc
pop
and
arpl
(bad)
jnp
push
add
shr
imul
out
push
repnz
pop
lock
sbb
ins
xor
lahf
jbe
mov
sub
out
mov
mov
sub
mul
cmp
lea
xchg
(bad)
fisttp
out
jl
out
outs
mov
push
sub
bound
pop
sub
mov
mov
lahf
ror
push
in
add
add
xor
mov
dec
sbb
fiadd
pop
adc
scas
bound
add
mov
out
sti
xchg
dec
sub
cmp
jae
imul
inc
bound
jb
cmp
mov
enter
(bad)
xchg
lock
inc
inc
repz
jbe
imul
pop
jae
ins
mov
and
shl
mov
push
xor
add
sub
inc
ja
or
das
aam
and
jno
je
pop
outs
pop
and
sti
ret
adc
jmp
or
sub
mov
mov
js
clc
pop
xchg
add
dec
and
push
pop
adc
jmp
retf
hlt
jae
or
fild
xchg
scas
repz
jl
out
(bad)
dec
sub
pushf
test
fsubr
or
mov
inc
jne
cmp
stc
dec
mov
xor
popa
mov
cmp
jl
test
push
out
mov
inc
cmp
pop
mov
xlat
or
cdq
bnd
fidiv
push
pop
adc
sub
jmp
ret
cdq
jmp
loope
pop
jmp
cli
mov
pop
jmp
inc
or
rol
or
sub
test
xchg
nop
inc
dec
aaa
out
movs
add
in
(bad)
(bad)
push
push
xor
aad
pop
data16
or
push
idiv
fisub
mov
mov
dec
adc
dec
pop
cmovb
add
pop
push
or
mov
and
dec
sub
add
fist
mov
mov
sahf
rcr
arpl
les
xor
mov
inc
les
xchg
and
pop
fnstcw
push
inc
popa
mov
lahf
and
push
jp
lock
sbb
dec
inc
push
dec
push
add
add
jecxz
enter
mov
pop
repnz
sahf
(bad)
push
sti
sbb
sbb
das
xor
jmp
pusha
xor
or
cmc
repnz
lock
ds
xor
std
nop
mov
inc
and
lock
jns
fldenv
mov
stos
cmp
jmp
jno
lods
mov
movs
pop
ss
int
out
sub
(bad)
cli
fst
pop
pop
and
scas
mov
stc
jl
mov
xchg
xchg
in
xchg
or
cdq
mov
leave
cdq
jg
mov
xor
add
ins
sbb
or
or
mov
xchg
nop
cwde
je
movs
addr16
or
sbb
pop
in
(bad)
cli
add
dec
mov
jno
xor
or
and
xor
and
xor
jne
or
bound
push
sub
scas
sub
sbb
rcr
jnp
(bad)
shl
mov
sbb
and
sbb
sub
repz
cli
pop
xchg
fsub
pop
jns
mov
neg
sti
fidivr
mov
iret
add
fwait
or
inc
js
pop
jb
jmp
jae
arpl
dec
xchg
push
mov
test
imul
sahf
mov
shl
sub
movs
stos
push
mov
mov
mov
(bad)
jmp
iret
mov
dec
and
test
mov
(bad)
sbb
fidivr
or
pop
jno
or
dec
addr16
pop
pop
fnstcw
ja
cmc
fadd
das
add
outs
cld
(bad)
call
pushf
mov
mov
mov
ret
jecxz
mov
aad
call
jb
(bad)
fdivr
pop
mov
xchg
jg
rol
or
sub
pop
not
jl
outs
mov
pop
dec
in
xchg
loop
sbb
hlt
stc
inc
lock
adc
fbld
cdq
mov
mov
push
push
add
xlat
and
dec
fild
mov
cdq
mov
jbe
call
mov
pop
daa
idiv
cld
ins
mov
in
xor
iret
mov
popf
movs
leave
jno
sub
into
pop
mov
jl
hlt
or
das
pop
(bad)
(bad)
pushf
mov
adc
sbb
jae
jp
sub
cmps
sbb
xor
cmps
es
stc
loop
ins
fist
dec
lahf
cmp
push
adc
mov
out
icebp
or
div
ret
pop
push
repnz
rcl
jge
test
dec
mov
out
mov
xchg
out
int
std
adc
jge
dec
xchg
jl
enter
cli
leave
(bad)
in
lahf
xchg
in
outs
push
(bad)
pop
pop
mov
mov
imul
cmp
aad
mov
and
mov
mov
xchg
xchg
in
loope
icebp
xlat
sbb
jno
popf
aam
push
arpl
mov
ins
xchg
cdq
int
dec
inc
test
lods
movs
jmp
in
cli
(bad)
int3
cli
(bad)
enter
push
rcl
movs
mov
xchg
jmp
xchg
arpl
loopne
push
xchg
and
int3
data16
and
pop
lahf
aad
and
mov
inc
mov
aas
mov
dec
push
nop
mov
dec
retf
cmp
fstp
mov
or
arpl
push
sbb
and
add
fnstenv
add
lea
fidiv
mov
sbb
dec
push
push
and
mov
lods
jecxz
mov
xor
jge
or
sbb
hlt
enter
popf
mov
lock
mov
fnstenv
dec
int
push
pushf
mov
cld
xor
and
mov
push
inc
retf
ret
(bad)
xchg
nop
jle
push
(bad)
addr16
fwait
mov
push
and
push
inc
into
adc
and
jbe
sti
jae
pop
mov
test
shl
imul
daa
stos
inc
dec
fisttp
imul
mov
repz
pop
dec
loope
sbb
mov
int
pop
in
daa
(bad)
xchg
cmp
xchg
mov
push
push
adc
sub
cmp
lea
hlt
jmp
btr
dec
retf
test
mov
das
retf
add
xor
sub
mov
jp
(bad)
je
fcmovnbe
pop
iret
leave
ja
jmp
mov
cmps
test
inc
js
lea
inc
repnz
sub
loop
adc
xor
pushf
mov
(bad)
jg
and
inc
int3
pushf
movs
in
fisttp
adc
cmp
(bad)
in
out
ss
sbb
push
or
push
fnstsw
or
sub
lock
inc
fisub
pop
cmp
dec
inc
in
fisttp
outs
mov
cwde
pop
iret
(bad)
mov
adc
cmp
mov
sbb
mov
in
imul
aam
push
cmps
aaa
aaa
aaa
imul
jmp
adc
mov
addr16
sbb
leave
fs
push
adc
pop
jle
cmp
sub
out
cmc
imul
jp
es
xlat
fwait
pusha
imul
jb
ja
test
bound
xchg
shr
xor
sub
xor
arpl
test
push
mov
hlt
test
jle
mov
xchg
pop
cs
imul
(bad)
jecxz
xor
push
mov
aas
aas
cmp
mov
cmp
sub
(bad)
mov
or
jmp
imul
aad
mov
push
push
ins
or
mov
xlat
ja
lods
or
inc
ret
popf
cmp
dec
xchg
aam
bnd
mov
sub
sbb
inc
mov
xor
hlt
repnz
mov
leave
ins
mov
mov
inc
xchg
xor
ja
in
sbb
cmps
xor
jb
cmp
mov
and
and
(bad)
rol
outs
mov
std
xchg
(bad)
jecxz
push
pop
mov
in
shl
mov
ins
retf
mov
mov
jecxz
mov
(bad)
daa
sbb
jmpw
out
int
sub
cmp
and
(bad)
jae
jp
jge
(bad)
icebp
mov
loope
out
dec
xchg
sbb
adc
adc
inc
arpl
ja
push
mov
pop
pop
jns
imul
pop
dec
(bad)
lea
nop
call
fwait
jo
in
loope
add
dec
in
popf
jnp
inc
cmp
pop
add
cmp
mov
shl
sub
fcomp
add
xlat
xor
and
push
mov
std
ins
jo
xor
jns
add
cmc
jl
stc
dec
repnz
jb
mov
scas
fstp
jnp
jbe
sar
push
cmp
pop
call
aad
ss
sub
push
dec
inc
jmp
or
and
sub
inc
adc
adc
xor
adc
sbb
repz
(bad)
cmps
adc
push
sub
ret
test
dec
push
inc
adc
or
ret
ror
sti
jle
mov
not
jl
into
cdq
jnp
pushf
mov
fnstcw
jge
repnz
rcr
inc
clc
jg
jo
sub
out
hlt
and
mov
and
xchg
int
aam
adc
add
dec
xor
push
test
sub
ins
outs
or
test
dec
fnsave
push
jle
std
jo
inc
add
stos
xchg
in
cmp
les
repz
inc
or
inc
push
sbb
movs
fs
push
xchg
shld
out
(bad)
push
lods
xor
rcl
and
out
add
sub
dec
sub
jno
sbb
or
add
sbb
adc
fst
inc
and
jecxz
in
ins
pop
or
xchg
sbb
or
mov
jne
js
aam
push
inc
inc
lods
jg
jle
push
push
data16
add
lds
add
jmp
mov
add
add
add
mov
mov
jge
retf
pusha
call
test
ret
mov
mov
enter
mov
pushf
inc
push
push
icebp
pop
lds
sbb
or
and
add
pop
adc
pop
movs
inc
pop
dec
scas
jle
fnsave
add
(bad)
or
rol
jmp
xor
or
inc
dec
dec
push
comiss
arpl
sub
sub
repz
fs
pop
sub
cmps
aaa
ret
aad
swapgs
call
cdq
sub
idiv
out
out
jl
scas
cmps
into
cmp
cld
popa
add
iret
inc
xor
pop
cmp
mov
and
(bad)
jnp
cmp
fld
das
movs
sbb
sub
icebp
or
ret
fimul
fmul
clc
lods
imul
clc
pop
add
std
hlt
jmp
shl
push
aas
(bad)
fild
sahf
cmp
loope
jp
je
sti
mov
jmp
(bad)
pusha
inc
or
imul
inc
stos
and
ror
mov
(bad)
call
cmp
and
in
lock
test
not
sbb
sbb
icebp
or
sbb
xchg
mov
add
inc
pop
data16
lock
xchg
xchg
xchg
loopne
popa
aas
shl
jmp
bound
dec
jg
mov
data16
mov
add
or
out
aaa
in
cmps
inc
nop
push
mov
pop
fcomp
fisub
jno
fwait
imul
(bad)
pop
ins
inc
(bad)
xor
sub
aas
pop
fild
fimul
lahf
add
cmp
mov
jle
sbb
fidivr
lock
xchg
xchg
push
dec
xchg
pusha
shl
push
cmp
(bad)
out
shl
movs
cmp
add
out
and
inc
ss
push
scas
inc
inc
cmp
push
jnp
stc
pusha
lock
js
in
xchg
push
sub
jge
int
jp
scas
pop
jmp
cmp
push
outs
push
fidivr
push
push
sub
call
xadd
add
jge
add
jno
js
fwait
add
add
fcom
ror
xchg
pop
nop
push
push
xor
aaa
adc
add
inc
enter
sbb
cs
push
push
pop
or
push
or
xchg
sub
mov
das
jl
mov
sbb
dec
dec
and
mov
adc
and
xor
jns
inc
test
or
dec
arpl
ret
jmp
clc
jecxz
sub
mov
sbb
push
div
add
xor
aam
jecxz
mov
xchg
push
fcmovnu
mov
cmp
jecxz
push
add
mov
retf
mov
mov
add
or
(bad)
jne
test
test
add
pushf
(bad)
hlt
outs
pushaw
mov
or
and
sti
and
lods
test
fstp
mov
cmp
dec
lahf
push
(bad)
iret
dec
outs
sbb
fisttp
pop
inc
daa
jl
ins
cmp
sbb
pop
dec
adc
jmp
mov
push
push
add
adc
bound
stc
mov
stos
mov
jl
ins
push
mov
mov
push
push
repnz
mov
js
rcr
mov
pop
add
adc
pop
add
cmp
add
add
call
inc
int
dec
cmc
jmp
(bad)
lock
(bad)
in
movs
xchg
jl
push
mov
pop
sbb
lods
cmp
inc
inc
inc
jmp
ins
adc
cs
je
and
mov
cmp
sbb
ins
popf
xor
sub
push
lds
sbb
add
xor
add
rcl
jo
and
nop
cdq
xchg
mov
sub
pop
mov
and
cmp
rol
adc
adc
arpl
inc
mov
pop
cmp
iret
(bad)
or
scas
and
adc
push
dec
lods
fsubr
loope
add
leave
(bad)
cwde
fcom
lods
outs
xor
cli
push
loop
shl
dec
inc
into
std
sti
push
push
push
(bad)
repz
mov
jo
jbe
pop
or
pop
pop
pop
add
dec
int
popa
push
mov
lahf
or
repz
mov
aas
sbb
out
loope
xchg
out
stc
jb
es
xor
inc
xchg
and
mov
bound
dec
adc
aas
cmc
call
les
pop
fwait
sub
cwde
cmp
jnp
or
sub
retf
fisttp
pop
popf
int
mov
mov
rcr
jnp
sub
jmp
and
mov
sbb
xchg
fmul
pop
(bad)
and
pop
or
jecxz
dec
xor
xlat
cmc
sbb
or
or
dec
xor
dec
pushf
clc
icebp
shl
mov
xor
mov
push
movs
pop
ret
cld
sbb
ret
imul
cli
(bad)
mov
inc
arpl
mov
in
pop
stos
sbb
mov
(bad)
lds
ss
pop
push
add
push
mov
sub
jnp
(bad)
iret
call
push
inc
cmp
add
dec
dec
push
sbb
or
sub
inc
addr16
std
lods
popa
bound
icebp
dec
mov
mov
(bad)
sbb
dec
ss
jmp
mov
cmp
lods
out
xchg
fwait
mov
addr16
xor
(bad)
out
mov
and
adc
dec
jl
xor
jle
test
add
cli
push
loopne
in
imul
into
fnstcw
jbe
sar
mov
movs
mov
ds
sub
mov
fistp
add
jmp
sbb
mov
mov
call
sar
sub
jo
jbe
retfw
mov
push
mov
dec
ja
loope
xor
dec
xchg
aad
stos
mov
adc
fld
ss
aaa
push
pop
retf
popf
sbb
neg
mov
mov
mov
add
pop
push
pop
ds
jmp
movs
in
adc
mov
fwait
mov
push
sbb
or
cmp
sahf
pop
mov
loopne
scas
(bad)
imul
test
sti
(bad)
pushf
add
loopne
clc
cmp
pop
jmp
push
pop
and
add
and
(bad)
aam
sbb
xchg
adc
mov
or
or
cwde
add
sub
push
aad
and
jnp
and
test
aaa
shl
mov
out
and
adc
xor
(bad)
and
sbb
repnz
out
xchg
mov
sbb
and
int3
test
mov
inc
jae
push
cmp
mov
push
cmp
mov
loop
movs
jo
xchg
popa
cwde
pop
sub
das
pop
outs
add
pop
push
push
dec
lock
sahf
bnd
adc
leave
sub
mov
dec
push
xor
stos
jmp
push
inc
jns
fstp
cs
fcmovnu
(bad)
(bad)
cmps
fcomp
shl
scas
jp
aad
fmul
adc
ret
xor
sbb
jno
(bad)
lods
inc
out
test
add
or
(bad)
adc
imul
sub
push
push
jge
inc
les
sub
(bad)
(bad)
mov
retf
xchg
mov
push
inc
arpl
inc
pop
fsubr
popf
cmp
int
shl
adc
mov
add
scas
pop
xor
sub
cmc
imul
pop
pop
pop
jp
cmc
ins
in
sub
sub
fsubr
int
sbb
sbb
stc
mov
aas
or
pop
in
pop
pusha
ins
jmp
or
adc
push
push
fldcw
int3
int3
jae
repnz
add
das
sub
sbb
pop
sbb
inc
dec
dec
push
push
pop
pop
add
movs
ds
cwde
fwait
daa
mov
test
(bad)
leave
(bad)
adc
stos
stos
and
arpl
xchg
cmp
fbstp
into
in
test
sahf
js
and
cdq
imul
lods
nop
jo
jno
js
xor
sub
sub
xlat
xlat
retf
xlat
aad
mov
mov
jge
dec
adc
jns
xor
inc
sub
inc
push
or
mov
add
jp
dec
cwde
dec
lahf
sub
sar
xchg
scas
jb
lds
cmps
mov
mov
fst
leave
jg
jecxz
push
das
mov
add
lock
mov
jmp
adc
cs
mov
and
xchg
stos
scas
mov
fist
xor
pop
aas
cs
sub
mov
pop
inc
inc
inc
inc
pusha
faddp
inc
pop
cmp
out
lods
mov
mov
ins
pop
sti
ss
stos
mov
and
jmp
data16
cmps
sti
sub
repz
and
in
repz
mov
iret
pop
mov
call
(bad)
loop
test
cmp
cs
ret
hlt
(bad)
sub
mov
lea
imul
sub
sub
call
cs
xchg
in
jg
cmp
sbb
fcomp
xchg
repz
pop
mov
push
aas
ins
cmc
pop
scas
mov
xchg
pop
push
push
pop
mov
xchg
adc
jnp
iret
pop
out
mov
pushf
pushf
lods
mov
mov
fmul
sub
iret
pop
imul
out
pop
push
lds
push
pop
cmp
sub
adc
mov
icebp
(bad)
icebp
mov
sbb
adc
jmp
sub
mov
stos
mov
stc
lods
popa
fimul
(bad)
jmp
in
fistp
mov
pop
(bad)
test
inc
loopne
xor
push
pop
or
ret
add
cmp
out
pusha
jbe
and
and
aam
cmp
test
imul
int3
pop
mov
test
aad
pop
iret
xor
add
cmp
pusha
pop
ficom
cmps
mov
cld
add
push
pop
cmc
mov
dec
fstp
test
lods
(bad)
dec
cdq
push
add
je
test
adc
(bad)
mov
xchg
fwait
bound
sbb
mov
(bad)
(bad)
les
dec
in
(bad)
push
(bad)
cwde
pop
jnp
pusha
les
add
nop
sub
int3
cmp
pop
sub
idiv
xor
neg
jge
pop
sti
jg
cmp
cs
xchg
clc
pop
sahf
sub
mov
shl
push
fwait
int
mov
xor
hlt
mov
sub
jmp
and
movs
call
adc
xor
std
sub
pop
ret
mov
in
mov
mov
sbb
cmp
sub
cmc
aam
in
fist
or
xchg
cmp
(bad)
and
sti
dec
je
imul
in
retf
fistp
cwde
jae
push
imul
call
aad
js
push
cld
push
jecxz
dec
adc
leave
imul
out
fnstsw
mov
dec
js
test
int
jb
adc
sub
dec
adc
stos
mov
mov
fild
mov
push
pop
jmp
push
inc
inc
xchg
pushf
cli
stos
daa
ss
out
jbe
mov
aad
icebp
inc
xchg
pop
add
mov
mov
repnz
loope
sbb
xchg
mov
inc
loope
(bad)
adc
and
sbb
xlat
pop
test
scas
fadd
push
or
lock
pop
push
cli
push
mov
inc
outs
out
dec
push
ins
cmp
lahf
ja
dec
push
mov
cmp
xor
outs
dec
push
jl
(bad)
loope
mov
adc
mov
ins
jl
adc
in
or
and
scas
mov
loopne
sub
ja
dec
mov
jle
dec
and
mov
(bad)
lods
add
xchg
mov
mov
jp
jae
or
cmp
aam
mov
in
xor
(bad)
call
outs
(bad)
loopne
jno
sbb
(bad)
neg
in
inc
xchg
pavgw
push
add
ins
jmp
stos
aaa
jg
xchg
and
ins
(bad)
jmp
xchg
push
xchg
add
aam
(bad)
pop
xor
push
cmp
sbb
rcl
mov
cmp
sbb
(bad)
int3
in
add
adc
mov
push
push
(bad)
push
mov
adc
in
cwde
xlat
cmp
ins
aas
sub
sub
nop
loope
(bad)
sbb
xchg
fld
push
outs
xchg
stc
jns
mov
push
mov
push
retf
push
mov
test
outs
mov
pop
in
popa
mov
dec
xchg
cmp
ss
loop
aaa
dec
in
xchg
(bad)
push
xchg
push
lds
xchg
test
fs
fild
scas
stc
add
mov
mov
adc
icebp
cmc
cmc
gs
retf
or
(bad)
loopne
scas
mov
dec
pop
mov
inc
mov
xor
mov
loope
mov
mov
sahf
fnstcw
sbb
jg
inc
cmps
mov
pop
ficom
sub
js
test
sbb
fsubr
mov
(bad)
xor
movs
mov
cmp
jmp
jg
xchg
xor
pop
imul
movs
(bad)
push
out
inc
cmc
stos
loope
stos
pop
adc
push
cmps
dec
push
repz
ret
out
fsub
mul
cmp
ins
jp
inc
hlt
pop
and
data16
and
in
repz
loope
shl
sti
sar
stos
mov
cmps
mov
pop
cmc
call
jb
not
push
clc
std
add
aas
push
mov
push
test
push
mov
out
fwait
movsx
cmp
mov
ins
test
dec
mov
mov
or
sub
adc
lds
mov
and
imul
adc
dec
daa
sub
add
add
fsubrp
mov
inc
xchg
gs
adc
in
psllq
jmp
mov
(bad)
ror
push
and
or
push
data16
stos
outs
cdq
cmp
add
movs
adc
push
(bad)
mov
push
mov
adc
out
jg
mov
pop
test
imul
add
mov
mov
push
in
pop
mov
mov
fidivr
push
xor
loop
outs
push
push
rcl
mov
(bad)
js
jne
pop
mov
loopne
in
in
iret
out
test
jl
mov
loopne
aam
jg
push
mov
mov
loope
je
xor
jp
xchg
dec
fadd
rcl
ins
sbb
int3
and
gs
in
cmp
sbb
xor
ret
aas
sbb
mov
pxor
call
sub
cwde
push
sub
inc
xchg
lock
jo
lea
mov
out
shr
out
(bad)
xchg
jmp
arpl
mov
inc
stos
rcl
fldenv
push
mov
and
addr16
push
gs
outs
mov
enter
ret
push
or
dec
push
jo
in
pop
(bad)
lock
fisttp
popf
cmp
ss
xchg
(bad)
rol
sub
retf
in
cmp
pop
mov
mov
gs
dec
inc
inc
pop
aad
xchg
imul
cmps
inc
add
popf
mov
mov
mov
and
fcom
jno
scas
mov
jns
into
lds
mov
std
add
push
pop
jle
xchg
(bad)
sbb
adc
pop
inc
rol
imul
mov
cli
test
scas
outs
jae
shr
add
pop
neg
mov
pop
xchg
sub
and
test
aas
adc
mov
jle
push
sbb
pusha
mov
push
inc
pop
xchg
jno
lock
outs
jg
outs
push
adc
and
fiadd
mov
call
mov
xor
pop
call
lods
(bad)
xor
push
stos
pop
and
mov
arpl
sbb
aam
fild
push
add
xchg
sbb
mov
dec
ret
inc
lea
adc
aam
fsubrp
fmul
push
adc
ds
shl
shr
fmul
pop
fstp
in
imul
arpl
outs
xor
push
sub
(bad)
lahf
lahf
(bad)
xchg
mov
ss
xchg
adc
stos
mov
xchg
ret
cmps
js
sbb
push
rcr
mov
out
mov
and
sub
fnstenv
xor
inc
xchg
inc
movs
push
sar
aad
mov
lods
pop
dec
std
fisubr
xor
jecxz
call
push
jg
aad
shl
adc
addr16
iret
movs
push
xlat
outs
xor
pop
fwait
push
mov
jl
js
jne
stos
sar
dec
xchg
gs
mov
scas
popf
dec
cmp
xor
inc
jb
in
pop
sbb
stos
inc
cmps
cs
cdq
cmp
cmc
pop
mov
xor
xor
mov
je
scas
outs
inc
mov
stc
push
and
push
xchg
rol
sbb
aad
mov
test
mov
cmp
sbb
pushf
cmp
mov
lds
ds
dec
dec
dec
xor
dec
or
jns
test
retf
out
jp
fwait
outs
mov
std
push
cli
imul
adc
push
sbb
pusha
lock
(bad)
aas
inc
xchg
gs
push
push
pop
mov
push
lock
mov
mov
jmp
mov
fcom
cmp
inc
inc
mov
pop
pop
icebp
int
push
mov
movs
xchg
lahf
push
push
icebp
div
inc
out
loope
inc
adc
inc
cwde
xor
jae
iret
inc
add
mov
add
jae
xor
dec
fwait
push
rcl
pop
repz
bound
into
dec
jecxz
xor
cmp
pop
mov
int3
popf
xor
test
dec
cmps
arpl
(bad)
sub
fistp
inc
dec
fild
mov
push
loop
xchg
gs
mov
jmp
out
(bad)
jns
xchg
(bad)
adc
ds
inc
jp
adc
shr
mov
xchg
sbb
xor
jb
sub
and
test
jmp
aam
inc
cld
cmps
inc
mov
and
mov
jp
arpl
dec
fs
cmc
int3
pop
mov
stc
pop
into
inc
test
adc
mov
lods
push
mov
outs
(bad)
xor
outs
es
mov
adc
jmp
scas
push
adc
outs
cmp
mov
sbb
mov
out
fisttp
rcl
mov
mov
jp
xchg
call
clc
adc
push
pusha
out
mov
test
mov
out
push
fsubrp
fcom
and
sub
cmp
(bad)
inc
adc
adc
mov
stos
enter
push
mov
dec
jecxz
or
and
cmc
int3
js
js
cwde
xor
and
outs
sbb
and
cmp
cmp
in
add
jmp
cdq
mov
adc
out
cmp
jnp
loop
and
push
adc
outs
in
icebp
loopne
js
pop
mov
cli
and
inc
sbb
das
sbb
fsubrp
mov
clc
sub
or
daa
nop
neg
ret
std
mov
pop
xor
push
ins
mov
cdq
sub
gs
loope
jne
rol
shr
fwait
add
inc
arpl
test
sbb
out
xor
and
stc
stc
or
leave
mov
ds
in
mov
enter
outs
cmp
pop
popa
sti
pop
dec
in
iret
pusha
xor
out
dec
popf
lahf
or
mov
gs
jmp
stos
xlat
test
mov
xchg
dec
sbb
jmp
pop
push
mov
inc
call
shr
or
mov
pushf
scas
push
xchg
jp
std
mov
addr16
mov
outs
push
cmp
fisttp
popf
cmps
mov
pop
xchg
push
imul
mov
xor
lock
imul
cld
xchg
mov
inc
adc
aad
cmp
repz
adc
inc
mov
fistp
ins
xor
cmc
mov
fdivr
gs
push
nop
fwait
shl
das
sti
sbb
fisttp
test
fisttp
jecxz
adc
add
test
scas
jns
stc
adc
faddp
call
and
xchg
xlat
inc
adc
repz
loopne
retf
mov
fistp
sahf
out
jne
mov
mov
daa
jecxz
mov
pop
mov
pushf
(bad)
in
push
(bad)
outs
push
imul
or
ds
xchg
(bad)
stos
xor
ret
into
lds
test
cmp
out
and
aad
rol
sbb
fwait
cli
aam
rcr
repz
stos
xor
lea
out
sbb
bound
lea
inc
xchg
lea
icebp
or
xor
add
dec
mov
mov
dec
jb
pop
test
js
int
ret
icebp
ins
mov
pop
cmp
cmp
or
sti
mov
test
xchg
push
cld
fwait
adc
push
sbb
dec
imul
and
dec
test
cmp
adc
adc
pop
mov
loopne
scas
das
mov
push
sub
bound
mov
mov
data16
mov
pop
xchg
test
jbe
jmp
out
ja
xor
loope
xchg
repz
(bad)
aaa
iret
mov
fiadd
gs
aaa
imul
add
dec
iret
leave
and
dec
pop
loopne
int
fmul
enter
mov
test
rol
adc
das
and
shl
mov
out
sub
dec
adc
mov
test
jp
cmp
in
nop
pushf
push
aam
(bad)
aas
dec
pop
pop
mov
std
xchg
xchg
add
sub
das
in
lahf
cdq
lds
xchg
in
sub
popf
dec
int3
xor
mov
test
or
push
into
pop
push
lds
jmp
xchg
fdivr
push
jmp
ja
push
sbb
add
pop
scas
and
sar
loope
adc
mov
gs
ret
xchg
xchg
xchg
(bad)
std
jnp
xor
inc
(bad)
mov
in
mov
shr
out
add
das
mov
int3
js
pop
push
mov
pop
and
xchg
mov
add
xchg
clc
dec
mov
mov
xor
popa
test
call
sti
(bad)
xchg
jge
pushf
popa
arpl
push
sbb
cmps
jmp
xchg
sub
(bad)
aad
aam
repz
inc
push
stos
dec
(bad)
movs
stos
(bad)
stc
xchg
test
ins
out
add
inc
adc
ja
repz
cld
dec
push
daa
sti
(bad)
and
outs
sub
mov
xor
mov
or
mov
dec
adc
mov
popf
adc
adc
pop
mov
or
int
cmc
sub
pop
shr
and
jmp
fs
cmps
cmp
fwait
push
scas
popa
mov
fcomp
xchg
push
inc
jp
out
mov
ret
js
jmp
cmp
test
adc
in
ss
inc
dec
adc
add
mov
cmp
int
repnz
inc
inc
inc
add
scas
pop
push
das
movs
or
push
jl
push
inc
lods
repz
adc
sub
jmp
add
(bad)
jg
lock
enter
add
mov
fmul
int
daa
ret
jmp
push
push
je
cmp
add
mov
into
std
(bad)
pop
cmp
cmp
pop
inc
sbb
or
xor
cld
ret
push
ret
(bad)
call
mov
mov
push
movs
mov
arpl
or
into
jno
ret
in
push
clc
mov
popf
dec
push
imul
mov
push
jb
jg
iret
dec
daa
jle
fiadd
mov
lock
mov
in
call
fistp
pop
mov
pop
xchg
mov
aaa
es
adc
cmps
loope
retf
xchg
fnstenv
scas
iret
clc
mov
and
inc
pop
sbb
pop
dec
loope
mov
jne
ins
(bad)
inc
push
out
fdivr
fidiv
cmp
push
or
fidiv
test
shl
sub
pop
mov
sbb
stos
lds
das
pop
push
adc
jp
rol
cmps
ins
cmp
fcmovnb
jmp
inc
mov
mov
ins
push
or
ret
sub
movs
movs
dec
imul
addr16
push
daa
dec
jge
jg
mov
fbstp
sbb
inc
push
inc
scas
xlat
push
sub
inc
pop
mov
inc
les
jp
movs
rcl
ror
in
lahf
cmp
jno
js
(bad)
pop
cmp
fistp
mov
in
jbe
sub
dec
jo
pop
cmp
xchg
daa
cmp
cs
mov
std
retf
mov
and
call
call
mov
mov
sti
aad
jnp
std
adc
(bad)
std
cmp
cmps
movs
mov
stos
push
repz
fxch
test
cmp
dec
add
dec
je
sbb
sbb
adc
mov
inc
add
retf
mov
stc
sub
iret
lahf
jnp
jle
mov
pop
in
jbe
movs
dec
xchg
sub
jmp
scas
pop
popa
mov
js
jae
fs
(bad)
rol
xchg
jmp
push
aas
push
and
repnz
stos
sub
mov
xchg
ret
test
leave
leave
adc
or
push
sbb
mov
xchg
xchg
fwait
mov
call
and
lods
ins
imul
and
push
aas
xchg
or
inc
scas
xlat
jae
cmp
jns
inc
cmp
fnstsw
jb
dec
movs
shl
loope
sbb
xchg
dec
sub
pop
push
not
add
mov
stos
xlat
mov
cld
push
lods
push
sub
stc
stc
jb
jbe
cdq
lods
fwait
aaa
dec
aas
ja
ins
fwait
adc
sbb
dec
cmps
arpl
loopne
jmp
sub
cmp
outs
std
(bad)
int
cmp
cmp
popa
mov
pop
dec
mov
dec
aaa
jle
mov
jnp
es
cmc
call
mov
sub
pop
aas
aas
jl
jl
pop
mov
sbb
mov
xchg
xchg
push
push
add
xor
pop
sub
mov
loope
jns
xchg
add
sti
call
mov
fdiv
cpuid
or
mov
inc
cmp
in
xchg
sub
xor
mov
cmp
out
sar
xchg
ret
xchg
pop
ficomp
jecxz
in
dec
shl
arpl
aaa
ins
fsub
je
(bad)
(bad)
std
sahf
(bad)
(bad)
sbb
inc
ins
add
sbb
fdivr
xchg
test
push
jnp
jmp
adc
rcl
xor
or
je
out
pop
jg
xor
xor
repz
push
fist
pop
das
push
add
repz
and
xchg
mov
test
cmp
push
sub
jb
adc
lods
movs
push
sub
stc
cmp
sbb
iret
out
jbe
gs
and
adc
adc
jae
mov
div
mov
call
pop
adc
jo
shl
push
mov
outs
fsubrp
js
ds
ja
and
(bad)
in
(bad)
cmp
adc
pop
or
dec
daa
mov
aad
inc
imul
dec
xchg
test
bswap
xor
lods
push
mov
ret
out
fld
sahf
cmp
fcomp
push
push
pop
mov
xor
outs
fadd
sub
jns
inc
inc
cmps
mov
iret
outs
add
ins
xlat
into
movs
outs
mov
mov
mov
cmp
jmp
xchg
repz
push
hlt
popa
mov
test
shr
inc
lds
pop
dec
xor
adc
mov
inc
stos
mov
sti
pop
jmp
dec
xchg
aas
(bad)
(bad)
adc
add
mov
fistp
imul
cmp
dec
jns
int
and
xchg
xchg
lods
pop
outs
sbb
push
push
fldcw
inc
ins
test
imul
in
pop
jmp
jns
or
les
pop
sbb
pop
and
je
push
xor
icebp
xchg
mov
aas
jmp
cli
mov
xchg
pop
clc
jle
cmp
sbb
imul
jl
jno
mov
ins
push
inc
fdivr
dec
test
cmps
rol
out
call
add
(bad)
out
jl
jg
stc
aas
idiv
jnp
cdq
fnstsw
sub
scas
pusha
lds
mov
adc
call
(bad)
push
or
bound
mov
sub
pop
imul
fstp
out
(bad)
or
lds
in
idiv
out
into
out
popf
addr16
cdq
xor
sahf
push
mov
imul
mov
push
lods
add
lods
xchg
pop
adc
or
int
aaa
stos
pushf
ins
fidivr
inc
push
stc
(bad)
ins
and
and
and
jp
mov
sub
or
call
jmp
push
or
adc
add
pop
fidivr
and
sbb
xor
cwde
xor
rcl
xchg
aaa
aam
dec
jmp
les
mov
push
or
push
fldenv
dec
dec
push
push
cmc
iret
ror
pop
pop
and
mov
mov
imul
mov
push
lods
or
add
add
or
adc
add
add
xlat
test
call
and
pop
cmps
xchg
inc
popa
mov
xor
pop
xor
sbb
inc
loope
jmp
push
cs
and
push
imul
sbb
mov
sbb
mov
pop
data16
(bad)
and
and
les
outs
mov
dec
fcmovb
mov
pop
or
mov
loopne
add
rcr
movs
into
mov
aam
add
cmp
mov
ret
sar
outs
mov
outs
mov
jns
mov
ja
mov
fcomp
ds
ja
jg
or
out
xor
test
xor
xor
pop
ds
cwde
adc
rcl
mov
mov
mov
test
adc
leave
push
cmps
rol
shl
or
add
loopne
arpl
or
pop
js
jl
cmp
push
shr
icebp
(bad)
outs
mov
push
inc
sub
ins
pop
cmp
add
or
jge
and
mov
mov
aam
sahf
aas
cmp
add
in
mov
dec
mov
sar
sub
and
mov
loopne
and
xor
xor
xor
ins
bound
or
or
mov
push
xor
push
shl
dec
daa
lds
(bad)
fadd
pop
js
push
in
or
icebp
sub
add
aaa
ret
jns
sar
or
inc
and
jl
clc
xor
pushf
mov
in
es
add
bound
mov
adc
cdq
nop
or
out
pop
hlt
jp
xor
xchg
mov
sbb
inc
inc
pop
lock
sbb
jmp
pop
and
jbe
adc
mov
mov
fcomp
lahf
into
aas
pop
add
adc
(bad)
loope
inc
mov
sub
sub
xor
lahf
outs
stc
adc
lods
push
into
int
test
outs
(bad)
icebp
icebp
aam
push
leave
repz
pop
and
cs
sbb
or
push
or
shr
adc
test
xchg
(bad)
cmps
sbb
popf
xlat
bound
imul
cmp
dec
and
mov
sbb
pop
or
jns
ds
loop
call
shl
retf
jp
into
mov
jge
sub
jns
jmp
or
fwait
clc
clc
mov
pushf
push
add
mov
sbb
inc
dec
(bad)
jmp
add
test
(bad)
mul
jl
cmp
jle
xchg
jnp
jle
fidivr
mov
in
pop
ds
pop
(bad)
loope
idiv
inc
add
mov
sbb
ds
outs
xor
es
pop
and
jl
mov
adc
push
popa
rcl
cmp
lock
stos
sbb
adc
jb
(bad)
out
lds
(bad)
or
jle
aaa
mov
sub
jmp
lea
icebp
rol
jae
jmp
or
int
hlt
sbb
jg
les
adc
xchg
enter
ss
fwait
stc
dec
aas
sub
das
clc
cmps
ja
ins
sbb
add
(bad)
aad
jae
lahf
int3
cmp
xor
xor
rol
xchg
mov
in
push
comiss
cmc
leave
mov
dec
adc
fild
mov
std
cmp
push
mov
imul
aaa
icebp
mov
es
push
xchg
mov
fwait
inc
jae
sbb
or
adc
sub
stos
or
popf
(bad)
mov
push
and
cmp
hlt
shl
mov
loopne
pop
inc
mov
cmp
sub
in
pop
add
sbb
xchg
(bad)
cld
push
scas
sbb
sbb
ss
or
push
fld
aam
or
dec
dec
mov
outs
add
cs
mov
data16
adc
sti
and
and
mov
and
jl
jmp
add
mov
ret
add
adc
add
jmp
push
xchg
pusha
or
jge
sbb
pop
pushf
sbb
xor
std
xor
or
xchg
push
movs
enter
aas
repz
out
or
cwde
jb
aas
int3
int3
(bad)
call
xchg
stc
out
movs
or
sub
cmp
fisubr
mov
mov
call
pop
push
and
xor
push
push
fnstcw
mov
and
fisttp
pop
mov
and
imul
jo
jl
in
mov
daa
jp
or
test
scas
xlat
inc
add
push
lea
jmp
sar
lea
add
in
in
clc
nop
dec
jo
fmul
mov
out
xchg
adc
inc
and
and
mov
stc
push
add
jbe
fisttp
(bad)
jnp
inc
and
clc
cli
adc
mov
mov
aas
jp
xchg
sti
stos
push
add
popf
mov
and
sahf
cmp
mov
arpl
shl
cld
add
retf
mov
inc
and
inc
icebp
pop
pop
xchg
out
adc
cmps
mov
sub
or
sbb
outs
ffreep
xchg
pop
pop
(bad)
xlat
mov
cwde
cmp
pop
mov
jnp
sbb
iret
push
cmp
mov
lods
pop
mov
mov
or
sbb
popa
mov
call
ins
imul
mov
xor
test
loopne
stc
lods
mov
(bad)
xchg
xchg
repz
push
push
xor
frstor
into
in
sbb
dec
sahf
hlt
xor
mov
mov
jecxz
inc
inc
enter
jp
sbb
test
pop
imul
(bad)
loopne
pop
jb
fwait
cdq
fwait
and
mov
jl
jp
out
fimul
(bad)
cmc
mov
inc
or
int
jo
pop
pop
addr16
pushf
(bad)
mov
popa
and
mov
mov
aam
vunpcklps
enter
jmp
jmp
add
xor
xchg
add
shr
push
dec
lahf
mov
jo
jecxz
into
pop
cld
adc
test
pop
cmp
icebp
pop
sbb
jnp
cmp
sub
cmp
test
sub
jo
inc
sub
xchg
jge
jno
into
pop
sub
cld
and
lahf
cmp
and
sub
mov
sahf
xchg
dec
xchg
jo
cli
sbb
sbb
shl
push
jmp
push
adc
cmp
push
push
lods
pop
mov
(bad)
jecxz
add
imul
ins
jmp
outs
fdivr
arpl
mov
mov
aaa
outs
inc
js
and
jle
mov
fisttp
int3
int
mov
into
call
cmp
loop
repz
pop
(bad)
je
adc
mov
mov
add
jmp
ss
imul
mov
xor
outs
adc
in
fcomp
dec
lahf
sub
bound
ins
ins
ins
loope
lods
sbb
adc
aam
sti
imul
add
clc
jbe
adc
mov
iret
pop
dec
xor
mov
mov
fimul
mov
mov
out
mov
mov
iret
repz
sahf
aas
aaa
mov
nop
xchg
pushf
or
inc
daa
aas
aas
lods
pop
imul
leave
mov
fimul
dec
test
sti
mov
emms
mov
daa
pop
test
cwde
fwait
xor
inc
jp
das
es
jge
idiv
(bad)
movs
mov
add
mov
sub
jb
push
ret
pop
les
shl
call
adc
cwde
inc
lods
call
jg
int3
push
jae
scas
mov
mov
(bad)
and
repz
sub
imul
(bad)
xchg
in
inc
xor
sub
sub
stos
lods
push
sahf
push
xor
sahf
or
push
pop
push
or
test
push
jle
mov
xchg
test
push
stos
js
dec
into
into
mov
sar
shl
out
add
jmp
or
add
jecxz
mov
dec
xchg
shr
loopne
push
movs
movs
or
xor
call
add
or
inc
or
mov
fcom
jg
sbb
fmulp
call
pop
and
cmp
data16
adc
add
call
xor
(bad)
dec
loopne
push
ins
jns
mov
(bad)
nop
xor
xchg
push
movs
aas
mov
(bad)
dec
sub
pusha
ins
add
inc
dec
into
cmps
test
int3
test
aas
lock
fcom
sbb
(bad)
jecxz
jno
scas
jecxz
lea
mov
imul
lock
popa
outs
outs
pop
mov
lea
dec
cmps
jae
push
xchg
sbb
cmp
mov
push
pop
sbb
stos
pop
xor
push
in
cmp
push
or
std
xchg
or
mov
push
jle
push
dec
dec
dec
loope
in
sub
sub
ins
mov
rol
adc
sbb
cdq
lock
jo
test
test
inc
data16
mov
cmp
sbb
data16
pop
(bad)
mov
test
mov
push
imul
sub
pusha
fild
push
fs
ret
ret
mov
loope
or
xor
js
inc
lods
push
and
sub
push
sahf
sahf
nop
retf
in
sub
xchg
ss
jbe
xor
xchg
shl
cmps
cmps
jmp
loopne
push
sub
sbb
imul
cmp
das
jb
and
mov
cmps
mov
jno
dec
lahf
cmp
xor
data16
repz
(bad)
mov
and
adc
sti
adc
cli
test
jnp
je
vpmacsdql
push
and
add
sbb
dec
lahf
mov
test
sub
jle
add
movs
(bad)
or
pop
pop
xchg
xchg
adc
rcl
or
pop
add
or
and
aas
inc
scas
scas
popf
and
jno
jp
inc
or
xchg
xchg
(bad)
jno
xlat
mov
movs
dec
sub
mov
icebp
jge
fnstsw
and
icebp
sti
loope
int3
lahf
xor
stc
mov
xchg
xchg
rol
xlat
pop
cmp
mov
(bad)
shl
pop
and
mov
inc
jb
push
pop
push
loop
sahf
inc
dec
int3
pop
or
pop
or
jp
or
out
pop
add
dec
sbb
(bad)
loope
jo
into
sahf
add
sbb
inc
adc
pop
sbb
xchg
inc
mov
std
aam
(bad)
(bad)
jmp
icebp
sbb
neg
sbb
stos
adc
inc
xor
inc
inc
or
movs
push
movs
cmp
mov
cld
jg
les
jp
dec
(bad)
loopne
in
mov
push
lods
pop
and
call
div
(bad)
daa
mov
push
out
mov
push
add
mov
push
cmp
inc
pop
loop
push
adc
fst
add
outs
shl
sub
outs
call
push
mov
icebp
inc
push
stc
xor
popf
(bad)
dec
xchg
xor
movs
test
push
inc
out
mov
outs
adc
push
lods
dec
les
mov
and
jo
mov
xchg
pop
jo
in
mov
scas
fwait
cli
push
add
add
out
or
xor
sub
aam
sbb
pop
imul
pop
inc
push
inc
and
hlt
cmp
repz
xchg
add
daa
cmp
or
jne
dec
std
scas
mov
xchg
jle
cmp
adc
mov
adc
cdq
dec
add
stos
adc
aad
data16
pop
retf
xor
add
cmps
ret
fxch
fiadd
ds
jns
in
inc
pop
mov
loope
leave
fnstsw
aam
adc
mov
pop
inc
push
mov
iret
cmps
js
cld
or
jle
and
ret
xchg
dec
and
pop
mov
jno
int3
imul
adc
add
and
xlat
popa
ins
jo
loop
(bad)
mov
push
iret
push
push
adc
sti
adc
cmp
adc
add
jne
cmp
aad
adc
add
bound
sar
adc
and
pop
sbb
int3
int3
or
fidiv
push
pop
push
xor
or
fwait
aaa
and
cmp
outs
ffree
mov
(bad)
bound
cmp
push
daa
pop
sub
cmp
ins
jns
sub
cli
inc
mov
cmp
mov
pop
hlt
(bad)
mov
add
sahf
or
adc
xor
test
in
cmp
sbb
or
test
pop
lods
(bad)
hlt
test
adc
test
inc
sar
adc
in
and
or
std
jnp
mov
jecxz
lods
pop
mov
fdivr
or
outs
push
inc
ss
(bad)
(bad)
adc
les
bound
xor
inc
outs
xor
push
test
pop
adc
and
jmp
retf
int
mov
test
nop
or
push
popa
repz
adc
test
adc
mov
std
daa
mov
fwait
jbe
scas
push
sub
iret
sar
imul
(bad)
(bad)
fcmove
jae
ds
jmp
pop
(bad)
xchg
jo
add
out
(bad)
xchg
iret
loop
mov
ficom
pop
cld
mov
into
ret
lods
mov
lods
xor
outs
or
jmp
in
mov
inc
pop
or
push
out
mov
sbb
cmp
(bad)
sbb
lock
bnd
nop/reserved
push
xchg
outs
outs
push
mov
repnz
arpl
aaa
xchg
retf
ins
stos
shl
rcl
daa
pop
aas
or
fcomip
xor
add
dec
dec
inc
fwait
jbe
out
sub
fimul
call
and
mov
ret
cli
setl
push
mov
dec
add
cmp
mov
popf
mov
not
pop
inc
cld
aad
push
in
lea
inc
and
pop
mov
(bad)
jb
dec
sti
idiv
xor
jg
test
mov
dec
cdq
ud1
outs
ja
or
div
mul
push
mov
adc
loope
add
and
add
add
adc
jb
loope
push
pushf
pop
cmp
call
xchg
add
adc
sub
repz
lahf
icebp
push
mov
mov
or
nop
dec
in
ficom
add
or
cld
or
call
cld
jge
fidiv
ret
sbb
push
ss
pop
test
jno
sbb
mov
jp
icebp
cmp
dec
cmp
inc
pop
cmps
jno
call
retf
cdq
sar
imul
dec
ja
or
adc
inc
mov
fs
cdq
mov
mov
ja
outs
(bad)
mov
sub
mov
inc
loopne
loope
push
lods
pop
jecxz
nop
adc
int
cmp
jns
aam
add
or
pop
aam
data16
xchg
mov
add
pop
dec
loopne
jmp
repz
or
mov
mov
ja
jg
mov
imul
cli
hlt
or
int
push
cmc
arpl
outs
retf
clc
dec
std
mov
retf
xor
loopne
ins
mov
loopne
pop
jns
sbb
pop
add
out
popf
pop
xchg
ret
cmp
(bad)
repz
and
out
pusha
xchg
fisubr
(bad)
aad
in
pop
fimul
data16
xchg
cmp
stc
mov
jns
xor
adc
arpl
(bad)
cli
ret
or
aad
dec
lea
mov
xchg
sahf
imul
jg
dec
xchg
xchg
jl
popf
stos
jl
cld
cmp
div
(bad)
mov
int
add
jno
jnp
xor
push
cmps
iret
or
imul
adc
daa
mov
push
push
call
add
sub
cmp
loope
in
xlat
jmp
fnstsw
sbb
sbb
xchg
push
sbb
(bad)
ins
cs
loope
je
(bad)
sbb
repnz
iret
(bad)
mov
mov
inc
and
pushf
aas
push
push
loop
add
nop
lods
mov
jmp
push
jg
mov
mov
pop
or
sti
and
shr
fdiv
and
neg
add
inc
(bad)
push
fidivr
aas
div
loop
movs
lds
mov
or
hlt
fwait
test
into
sub
xchg
xchg
ret
or
dec
sub
or
ds
shl
dec
ret
or
addr16
and
sub
lods
xchg
std
lods
fist
shl
pop
pop
adc
cmp
(bad)
or
mov
rcr
mov
shl
jl
jle
ss
jmp
xchg
xchg
ror
push
loope
xchg
dec
sbb
pushf
add
imul
or
and
or
fidivr
popa
retf
(bad)
ins
das
addr16
cmps
rol
or
adc
or
and
call
sub
xchg
jecxz
xchg
ficom
ds
cs
popf
inc
mov
das
mov
lock
sti
lea
inc
push
cwde
aam
bts
add
jnp
comiss
jae
test
arpl
adc
iret
fisubr
mov
cmps
movs
mov
cld
in
scas
mov
ins
sti
add
mov
imul
sbb
ret
icebp
dec
pop
(bad)
stc
movs
mov
mov
int
mov
sub
arpl
fldcw
(bad)
je
(bad)
xor
jmp
ret
mov
mov
cdq
dec
enter
lods
xor
mov
in
or
sub
jp
call
cli
je
xchg
imul
xor
enter
out
ins
iret
je
pop
xor
arpl
(bad)
jne
xchg
xchg
loopne
out
out
fcmovu
sbb
(bad)
call
sti
mov
ja
sub
mov
mov
retf
sar
(bad)
clc
iret
adc
call
xlat
sub
jmp
sub
jmp
iret
into
lahf
rcl
or
mov
xor
aas
sahf
arpl
outs
pop
inc
push
out
pop
cmp
retf
stos
jmp
jge
jecxz
sub
inc
stos
sbb
in
adc
xchg
dec
and
or
loopne
push
and
sbb
sub
jnp
and
xchg
or
out
lock
cmp
ins
mov
ret
sub
mov
cmp
fld
mov
pushf
sbb
ret
xor
ins
pop
popa
in
fcom
mov
ins
dec
pop
dec
mov
or
mov
sub
repz
push
nop
(bad)
adc
add
mov
lds
sti
test
sar
cmp
jl
dec
and
and
daa
pop
pop
jbe
xchg
add
push
dec
xor
fwait
adc
out
mov
adc
shl
pop
cmp
and
mov
cmp
mov
add
cmc
pop
mov
sub
mov
daa
mov
mov
call
mov
fisttp
pop
push
dec
xor
and
jae
addr16
mov
jp
sahf
push
mov
mov
push
push
mov
shr
mov
adc
inc
and
adc
push
and
and
loope
clc
sub
fwait
cmp
xlat
scas
pop
ret
pop
popa
stc
xchg
(bad)
mov
jne
test
or
pop
push
fnstcw
aaa
add
test
or
or
mov
ret
xor
xor
dec
(bad)
int3
push
repnz
inc
sub
in
jno
add
or
shl
push
push
mov
push
(bad)
jecxz
icebp
cmp
adc
scas
mov
fwait
xor
loopne
sub
xor
or
xchg
out
add
cmp
jb
fisubr
shl
(bad)
push
ins
mov
sbb
push
rcr
add
inc
jbe
push
xor
add
mov
ss
dec
or
dec
adc
xchg
lahf
xchg
xchg
imul
jmp
(bad)
dec
pop
enter
cmps
and
and
jge
iret
and
pop
add
test
dec
jae
es
inc
dec
push
push
or
push
mov
mov
inc
sar
jb
push
jns
inc
nop
retf
aas
pusha
xor
aaa
mov
xchg
jp
rcl
fadd
push
jne
je
iret
repz
xchg
loopne
push
xor
xchg
clc
loopne
jmp
mov
add
xchg
(bad)
jno
push
nop
stos
or
xchg
popa
cld
or
cmp
scas
lds
std
leave
stos
sub
pop
pop
ret
ret
mov
or
stos
add
out
fwait
(bad)
ffree
rol
xchg
(bad)
loopne
out
xor
jmp
inc
jl
mov
fs
or
cmc
es
jp
repz
popa
xor
bndstx
xor
pcmpgtw
int
mov
sub
adc
jmp
mov
test
repz
pop
sahf
cmp
xor
jb
pushf
clc
int
xchg
inc
out
add
mov
(bad)
(bad)
mov
sub
mov
out
lods
lods
lock
jecxz
bound
rcl
bnd
cmp
add
test
test
test
cmp
cmc
jp
cs
lods
aam
aad
or
or
pop
add
stos
aad
jo
aaa
sub
das
iret
ret
(bad)
pop
and
test
sbb
stos
pop
xor
mov
xchg
and
enter
cmps
sub
lods
adc
cmp
push
xchg
dec
in
xor
and
bnd
(bad)
add
(bad)
call
lea
cld
daa
test
xchg
scas
clc
imul
aad
and
fcomp
and
xchg
pop
imul
arpl
repz
add
adc
retf
xor
ins
xchg
xchg
std
bound
retf
jb
iret
repz
add
mov
sahf
mov
fcmovb
push
test
fwait
cdq
xchg
rol
mov
push
cwde
cdq
cdq
gs
shl
call
or
sahf
inc
popa
popa
popa
cmp
sbb
dec
sti
push
sbb
(bad)
inc
imul
call
div
div
scas
js
mov
cmp
push
in
in
in
mov
test
scas
push
jmp
mov
loope
jmp
jl
stos
xchg
fisttp
mov
xchg
lock
cld
fiadd
mov
cmp
mov
add
jl
int3
jmp
pop
xchg
xchg
adc
mov
sbb
mov
out
icebp
xor
cmp
mov
aam
adc
lods
inc
add
mov
not
test
cld
xchg
gs
xchg
cmps
dec
lahf
pusha
shl
and
dec
ins
fdiv
xchg
iret
mov
in
retf
sub
(bad)
pmaxsw
pop
cmp
mov
repnz
popf
ds
mov
ret
loope
leave
jecxz
into
add
aaa
cmc
inc
(bad)
aas
ds
(bad)
sbb
jae
arpl
xor
ds
test
push
mov
add
popf
push
sbb
outs
fstp
rcr
popf
aas
clc
(bad)
aas
je
mov
mov
cld
aam
xor
dec
xor
or
jge
jmp
shl
fdivr
fidivr
push
sub
int3
pop
mov
(bad)
mov
iret
mov
loope
cs
xor
push
adc
xchg
out
and
and
xor
jecxz
outs
daa
inc
jne
(bad)
std
ret
sar
dec
xor
mov
sub
bound
ds
mov
cmp
xchg
cdq
xchg
or
sub
dec
lahf
pop
imul
or
jge
(bad)
mov
cld
enter
mov
mov
fstp
push
sub
xchg
cld
jmp
fild
ja
fdivr
jmp
xchg
xchg
and
stos
aad
in
add
add
xor
adc
jae
mov
adc
ror
pop
cdq
cdq
xor
or
js
not
mov
mov
jle
fcmovu
inc
stos
aad
mov
inc
mov
xchg
xchg
mov
loop
jecxz
outs
inc
cmp
mov
add
imul
xor
and
mov
aaa
imul
push
pop
lea
inc
inc
loope
sub
test
or
xchg
sbb
adc
push
enterw
add
xchg
std
jnp
sti
cmp
cmp
mov
stos
jecxz
adc
add
push
push
mov
scas
pop
test
and
or
lock
add
cmp
pusha
dec
(bad)
ds
jl
mov
inc
push
mov
adc
imul
inc
jmp
ins
ds
xlat
jg
xchg
and
repnz
pop
lds
add
mov
jns
push
gs
mov
int
neg
imul
adc
jmp
sbb
in
pop
pop
jns
adc
call
pushf
xor
daa
cmp
aaa
mov
loop
adc
scas
shl
fnstsw
ja
fmul
(bad)
pminsw
push
mov
lahf
into
mov
iret
retf
xchg
outs
adc
popa
mov
fisttp
fidiv
je
clc
out
inc
loope
cmps
push
mov
sub
xor
ret
cmp
ss
cs
mov
pop
cs
rol
adc
adc
push
xchg
jns
test
add
or
adc
mov
(bad)
cmp
fdiv
call
and
int
rcr
(bad)
sbb
lock
push
pop
dec
push
push
add
outs
fnsave
in
add
sub
xor
dec
clc
sub
out
mov
aas
jns
or
rcl
adc
and
sahf
fstp
sub
jno
mov
cmc
sbb
add
inc
push
xor
mov
jno
mov
cmc
les
std
fwait
popa
ret
inc
ins
sbb
sahf
in
or
sti
jecxz
gs
and
ins
fiadd
std
xchg
inc
push
bound
pop
xchg
xor
sahf
not
jbe
ror
mov
mov
push
je
fdiv
lahf
and
sti
add
and
ficom
mov
mov
shl
iret
out
jns
sbb
xchg
or
ja
push
fistp
stc
int3
inc
add
xor
or
fldcw
retf
(bad)
ins
sub
fwait
xor
movups
test
in
jbe
stos
cmc
or
or
cwde
cdq
cdq
mov
fldcw
ins
or
sbb
pop
mov
xchg
dec
inc
add
or
mov
or
pusha
push
sub
test
pop
push
icebp
adc
fnstenv
sub
ins
fistp
jae
loop
dec
int3
int3
mov
shr
cmp
adc
xchg
pop
ja
add
fdivr
xor
loopne
xor
aam
lea
add
sar
mov
sti
js
xlat
inc
test
repz
cmp
(bad)
test
test
mov
in
fidivr
ret
aas
enter
ret
rol
int
test
mov
fisubr
call
ret
int3
and
fdivr
dec
xchg
retf
mov
mov
retf
rcr
adc
adc
enter
and
loope
pop
mov
sub
(bad)
shl
jbe
or
inc
or
out
and
dec
mov
xchg
ins
cmps
into
popf
xchg
mov
cmp
mov
popa
xchg
loope
scas
retf
stc
sub
retf
adc
fwait
cdq
sbb
test
or
cmps
inc
outs
dec
push
js
jno
mov
jno
sbb
jmp
out
cmps
into
xor
pop
mov
imul
pushf
cwde
cmp
stos
call
mov
xor
(bad)
repz
mov
mov
sub
inc
shl
popf
pushf
mov
test
(bad)
(bad)
jp
and
fidivr
gs
inc
inc
pop
jne
jmp
xchg
out
xchg
jl
loope
pop
aad
sahf
in
in
jno
and
imul
repz
sub
inc
shr
xchg
push
jnp
xchg
adc
push
lahf
or
xchg
lock
in
(bad)
cmp
cld
cwde
out
call
ds
out
call
xor
cld
std
mov
push
sub
shl
xor
hlt
in
(bad)
and
cmp
xchg
mov
adc
add
ja
sbb
sbb
hlt
rol
std
in
sbb
in
(bad)
in
or
popf
dec
sub
retf
jg
popa
add
aas
cs
pop
nop
xchg
xchg
sar
nop
popa
ret
adc
in
or
xchg
xchg
adc
fstp
inc
mov
aas
std
dec
dec
mov
pop
mov
sbb
ud0
ds
out
mov
mov
int3
iret
retf
sub
outs
repnz
inc
mov
shr
inc
or
cmp
mov
es
imul
mov
cmps
int
push
or
mov
aas
out
stos
shr
push
and
ret
push
jge
icebp
fwait
stc
test
call
imul
and
(bad)
dec
cli
jbe
xchg
xchg
in
ins
fcom
fdivr
jmp
mov
cmp
mov
add
or
mov
mov
outs
iret
cvttps2pi
cmps
stos
xchg
retf
xor
lock
xor
cmp
ficom
jnp
out
sub
jo
cld
dec
cmps
aad
icebp
icebp
icebp
pop
push
cmp
mov
xchg
call
mov
shl
ja
adc
outs
ja
push
mov
pusha
sti
cmp
xchg
cdq
imul
in
mov
sbb
in
ins
aaa
out
fisubr
dec
fwait
sbb
xlat
fwait
dec
ret
and
scas
cld
jo
lds
daa
and
int
sbb
mov
std
cli
mov
scas
add
sub
mov
add
or
imul
push
jmp
les
inc
sub
jp
pop
enter
fbstp
xchg
cmp
sti
aas
lahf
clc
ud1
std
jne
mov
int
ja
aam
jecxz
lahf
adc
mov
popf
or
adc
fsubr
push
push
mov
leave
repz
sub
rol
xlat
mov
push
add
push
scas
pop
cld
rcl
aaa
fdivr
pop
xchg
pop
adc
lods
xchg
pop
adc
push
les
add
stc
jo
push
adc
sti
cmps
test
call
imul
sti
in
mov
test
adc
ficom
dec
iret
fnstenv
std
std
jno
xchg
add
dec
std
push
repz
mov
fwait
mov
into
cmp
int3
cdq
xor
movs
outs
inc
mov
test
pop
jmp
cmc
inc
lods
xchg
jp
pop
bound
add
mov
push
das
cmc
jb
sbb
push
pop
push
adc
sub
(bad)
lds
js
jb
js
dec
mov
mov
lock
sub
movs
dec
adc
adc
sahf
sti
push
adc
sub
fbstp
xchg
and
outs
push
or
gs
push
lds
rcr
pop
pop
push
mov
push
push
inc
adc
xchg
add
xor
add
in
movs
stos
xor
add
push
and
jns
adc
inc
adc
mov
popa
or
add
push
pop
bound
add
rol
dec
push
and
sbb
xor
mov
mov
sub
inc
push
mov
mov
out
sub
pushf
dec
stos
sub
adc
push
lods
add
inc
xchg
inc
dec
mov
mov
sti
mov
mov
adc
mov
pop
inc
adc
add
mov
dec
loopne
push
das
jno
inc
push
ficomp
leave
xchg
dec
push
push
aad
out
pop
jg
mov
push
dec
mov
cmp
and
stos
clc
and
inc
add
jmp
mov
push
sahf
out
sahf
sahf
mov
addr16
add
inc
xchg
xor
xchg
sub
sahf
add
add
xchg
mov
push
ret
sbb
aas
dec
add
xchg
jae
xchg
js
jp
add
adc
in
add
inc
xchg
add
mov
pop
in
sub
pop
mov
addr16
and
stos
mov
add
add
mov
mov
lock
retf
adc
inc
rcl
mov
outs
and
into
xor
dec
jnp
add
lods
push
lods
fimul
addr16
sbb
push
push
adc
mov
and
push
mov
add
repnz
mov
sar
pushf
sbb
call
xchg
push
mov
jo
(bad)
jp
lock
and
repnz
fcmovnbe
or
in
gs
je
enter
inc
test
repnz
jns
push
icebp
inc
int
loopne
mov
int3
adc
(bad)
hlt
pusha
hlt
callw
nop
add
push
push
push
adc
inc
daa
or
(bad)
loopne
shr
xchg
mov
neg
mov
or
jns
sar
int3
repz
out
test
dec
outs
mov
mov
ja
xchg
mov
loop
inc
pop
div
sub
je
aas
sbb
mov
fcom
int3
inc
xor
mov
retf
cs
sub
push
xchg
loopne
adc
inc
mov
sbb
adc
lea
mov
nop
adc
dec
cmc
bsr
clc
iret
or
xchg
aad
aad
cmp
fmul
sbb
xchg
push
lods
nop
fsub
inc
bound
fidiv
cmp
out
mov
xor
test
mov
xchg
mov
dec
mov
inc
push
imul
adc
xchg
cmp
mov
adc
and
iret
or
les
add
bound
std
rcl
inc
aas
call
dec
inc
je
cs
shr
sahf
call
cdq
adc
outs
mov
stos
bound
cmp
push
inc
js
sub
test
aam
pop
loop
scas
inc
sub
dec
jo
xchg
pop
mov
pop
(bad)
mov
adc
mov
call
loopne
rcr
std
imul
fs
sub
ret
pop
lods
cmp
(bad)
repnz
push
or
mov
dec
(bad)
(bad)
lods
out
fiadd
ss
add
add
add
mov
cmp
ins
push
mov
mov
das
dec
xor
adc
addr16
stos
mov
sbb
sbb
add
and
and
add
dec
dec
push
rcl
sub
fs
into
mov
jns
mov
aas
mov
sti
add
pop
or
xchg
shr
and
(bad)
popf
es
adc
jmp
and
sbb
(bad)
out
sub
imul
mov
sbb
dec
push
jae
pop
sub
(bad)
cld
int
mov
clc
sbb
sbb
fs
std
aas
js
movs
imul
inc
sub
cmp
sbb
inc
and
mov
je
push
add
and
push
stos
ret
pop
pop
fs
ret
pop
adc
inc
add
pop
jl
scas
and
pusha
push
sbb
push
pinsrw
dec
call
mov
cdq
jg
cmps
dec
sbb
clc
test
mov
aad
stos
iret
and
push
inc
jl
rol
jl
arpl
dec
pop
into
rol
sbb
push
pushf
shl
pop
fcom
test
mov
dec
or
jbe
sbb
adc
dec
mov
sahf
or
rol
and
cmp
add
fist
pop
cmp
arpl
fdiv
xor
cmc
jecxz
push
mov
lea
xchg
add
xchg
mov
jns
jbe
daa
jo
add
xor
adc
lahf
cmp
int3
xchg
sbb
push
dec
mov
dec
retf
retf
add
pushf
cmp
mov
pop
or
sbb
or
cmp
sbb
jo
or
push
scas
sbb
stos
and
hlt
jg
xor
push
pinsrw
fwait
cmps
push
pop
dec
outs
lahf
fwait
jmp
fwait
add
mov
rcl
pop
sub
(bad)
mov
scas
lods
fimul
mov
xchg
test
aaa
mov
mov
pop
gs
cld
out
add
icebp
out
enter
or
add
cmc
and
pop
ds
stc
repz
pop
add
(bad)
shl
sbb
push
mov
or
aad
lock
iret
out
pop
(bad)
mov
cmp
ins
cld
xchg
sbb
add
retf
nop
xchg
outs
xchg
ret
stos
mov
clc
dec
xlat
push
cmp
or
clc
adc
jecxz
add
imul
cs
pop
stc
rol
fistp
xchg
shl
(bad)
fndisi(8087
not
loop
adc
je
shl
out
cs
xchg
add
retf
mov
push
mov
add
sub
sub
inc
and
clc
imul
(bad)
cwde
mov
movs
je
(bad)
xchg
cs
jae
or
fwait
xor
fcmovu
pop
and
sbb
xchg
mov
push
mov
out
test
sbb
retf
pop
pop
sbb
dec
push
jo
xchg
mov
mov
ss
pusha
cs
pop
int
xor
in
pusha
stc
outs
adc
in
icebp
int3
and
(bad)
mov
xchg
data16
fild
xor
jge
push
dec
ins
xchg
cmps
mov
movs
(bad)
add
test
dec
mov
loopne
add
dec
jnp
fwait
mov
lods
loopne
sub
stc
or
fcmovnbe
out
(bad)
jo
jb
push
sar
in
cmps
add
sbb
or
dec
push
cmp
mov
add
xor
(bad)
fnsave
dec
add
sub
inc
xor
xor
mov
mov
mov
dec
pop
cmp
pop
daa
ja
rep
pop
adc
js
mov
add
inc
push
push
adc
sub
mov
mov
mov
adc
push
add
hlt
pop
fbld
scas
jge
fst
test
call
test
sub
cwde
fsub
test
jbe
rol
add
int
clc
jb
(bad)
sbb
aas
jle
rcr
ins
cmp
repz
sbb
pop
sub
sub
das
pop
xchg
adc
sbb
fs
mov
aaa
je
adc
push
loop
(bad)
(bad)
ins
fsubr
(bad)
int
dec
jl
push
stc
cmp
cld
pop
adc
push
mov
test
popf
adc
jg
out
std
sub
inc
int3
inc
pop
inc
sub
add
in
mov
pushf
cmp
inc
sti
push
jecxz
jle
fs
pop
imul
pop
adc
mov
adc
call
push
cs
ret
jle
jnp
repnz
add
or
rol
push
pop
dec
repz
divps
dec
in
fdivp
and
xor
push
mov
adc
arpl
mov
(bad)
aaa
aaa
ins
inc
popa
test
xchg
adc
pusha
mov
shl
aam
fstp
iret
push
sub
popa
pop
hlt
cdq
clc
xor
retf
inc
mov
push
xchg
data16
cmp
push
push
in
adc
outs
(bad)
xor
xchg
xor
xchg
scas
pop
jnp
add
loope
idiv
cmp
repnz
cmps
push
scas
ret
das
and
jbe
sub
shl
mov
cli
jne
pop
pop
gs
fisub
nop
jne
or
sbb
sar
(bad)
xchg
clc
(bad)
(bad)
jle
sbb
(bad)
outs
lea
loop
pop
pop
popa
mov
shl
scas
and
ds
or
bound
cmp
fidivr
lods
pop
cdq
mov
add
mov
repz
int3
(bad)
mov
movs
fs
fidiv
add
mov
out
popa
cwde
jne
xchg
adc
lds
or
mov
call
add
aaa
jo
addr16
(bad)
sti
aas
(bad)
sahf
gs
mov
lahf
xchg
dec
aas
shl
mov
mov
or
(bad)
lods
cli
test
loop
pop
xchg
pop
cmps
dec
sbb
xchg
lods
aaa
scas
sbb
aas
pop
cmps
mov
repz
pusha
or
out
jmp
adc
mov
jae
adc
call
mov
xchg
shl
xor
icebp
lds
add
add
(bad)
out
cmp
mov
or
and
mov
jmp
pop
int
pop
cmps
aaa
inc
adc
shl
xchg
jb
mov
cmc
pop
pop
mov
pop
sbb
daa
sahf
pop
jne
adc
iret
aas
stc
sbb
push
inc
jecxz
sub
and
inc
mov
mov
shl
jmp
clc
xor
sbb
or
es
pop
inc
out
push
std
push
outs
add
(bad)
fst
mov
dec
xchg
ror
stos
(bad)
pop
inc
xchg
and
cmps
push
outs
push
xor
ret
mov
cmp
nop
push
and
enter
addr16
lahf
inc
stos
(bad)
ins
xor
fst
mov
xor
mov
cs
inc
lahf
pop
sub
jo
stc
cmp
mov
inc
popa
loop
test
hlt
call
pushf
rol
cmp
fdivp
cmp
sahf
jg
xor
cmp
out
mov
es
enter
mov
xor
pop
add
sbb
shl
rol
dec
cmps
adc
mov
push
push
loopne
sbb
loopne
mov
sub
sbb
cmp
iret
cdq
or
stos
int
out
pop
cli
dec
push
sti
push
ja
push
fstp
stos
stos
sbb
adc
clc
pop
add
in
pushf
xor
cmps
pop
int3
mov
pop
mov
outs
jns
adc
and
out
xchg
inc
in
add
jecxz
popf
adc
int
mov
adc
xor
inc
add
cmp
or
mov
and
mov
popa
mov
jl
push
push
cmc
cdq
dec
mov
sti
dec
pop
sub
or
leave
mov
call
pop
xchg
jl
bound
or
jae
neg
sbb
xchg
or
test
lock
scas
repnz
std
adc
jne
mov
inc
shl
test
dec
jbe
push
rcl
and
adc
xchg
in
shl
ja
loope
movs
mov
je
(bad)
fcom
xor
inc
push
push
jl
imul
int
test
dec
in
not
in
pop
lds
movs
inc
xchg
fs
ins
xchg
idiv
arpl
inc
cmps
xlat
dec
jecxz
fcomp
dec
sub
sar
xor
xchg
movs
je
(bad)
and
inc
arpl
pop
lods
or
dec
pop
push
mov
cmp
fs
cli
ret
pop
sub
aas
xchg
mov
test
jge
daa
dec
push
(bad)
cmp
(bad)
call
jp
sub
pushf
dec
daa
cmp
scas
pusha
les
bound
sahf
xchg
pop
pop
pop
add
mov
pop
push
or
add
sti
mul
sar
jns
outs
mov
cld
or
loopne
(bad)
ds
int3
pop
pop
add
xor
mov
mov
dec
sbb
push
mov
cld
mov
sbb
sti
ret
loopne
jg
test
ds
cmp
ds
out
mov
add
stos
push
adc
mov
xor
sbb
xchg
lds
rcl
sub
enter
sbb
fnsave
ja
fcom
jmp
dec
call
mov
fisttp
and
cmp
cld
or
add
push
popa
dec
(bad)
mov
repnz
add
pop
das
pop
inc
mov
ins
sbb
mov
cmps
pop
sbb
je
add
rcl
dec
(bad)
mov
loope
scas
icebp
hlt
jecxz
and
pop
mov
stos
out
popf
push
cmp
repz
add
das
out
(bad)
shl
adc
cs
out
in
adc
(bad)
add
mov
and
add
pop
cld
stc
xchg
mov
push
imul
xor
mov
push
call
stos
mov
cs
inc
sub
and
loop
and
mov
xor
gs
int3
dec
push
adc
mov
int
mov
(bad)
push
mov
and
and
in
add
sub
cmc
nop
adc
call
add
lahf
dec
fadd
xchg
or
fbstp
xor
mov
movs
inc
(bad)
rol
mov
jmp
push
jns
std
aam
xlat
mov
in
mov
sbb
mov
pop
ret
inc
jmp
jle
(bad)
mov
aas
mov
pop
inc
movntps
pop
add
rcl
xor
loopne
cli
(bad)
push
scas
dec
add
mov
jmp
cmps
cmp
les
call
jp
adc
push
cmc
xchg
cmp
pop
into
int
adc
outs
or
(bad)
cmp
jno
pop
cs
test
and
mov
js
cmps
add
dec
xchg
loopne
jae
and
push
push
mov
sub
pop
nop
adc
shr
jno
jns
mov
xchg
movs
test
retf
xchg
movs
(bad)
push
call
push
xchg
loopne
leave
adc
cs
xor
pop
cmp
xchg
and
add
shr
stos
idiv
(bad)
mov
inc
and
fucompp
repnz
pop
imul
outs
into
or
adc
(bad)
retf
in
xchg
mov
cs
sbb
fcmovne
inc
adc
xchg
and
pop
xchg
outs
push
inc
jecxz
shr
nop
and
xor
push
push
mov
inc
fimul
shl
std
sbb
add
and
push
in
loope
add
dec
or
test
sub
xchg
inc
lea
jmp
push
push
fmul
push
push
xor
(bad)
pop
std
xor
nop
and
dec
xchg
lock
adc
push
pop
push
add
xchg
mov
xlat
(bad)
loope
stc
pop
ret
fs
fisttp
add
nop
and
or
int3
test
sahf
(bad)
aaa
repz
xchg
jae
jb
stos
mov
retf
jne
popa
mov
push
lods
repnz
aaa
out
stc
mov
jl
mov
add
int
adc
push
pop
mov
retf
ret
test
arpl
xor
(bad)
popa
cmc
imul
fstp
xor
ins
fimul
inc
(bad)
(bad)
or
inc
inc
ds
sub
add
push
lock
lods
or
xchg
cmps
imul
and
aaa
fimul
cwde
sti
cmc
sbb
dec
jl
fst
mov
cld
test
mov
mov
leave
retf
int
ror
dec
in
pop
add
sbb
js
int3
xor
das
pop
scas
dec
cwde
sbb
gs
xor
hlt
imul
pop
or
shl
sub
pop
inc
push
push
xchg
ja
mov
dec
scas
outs
mov
or
xor
jmp
adc
add
dec
cmc
cmp
mov
sti
mov
mov
pop
dec
push
dec
adc
dec
xchg
test
test
stos
stos
cmp
mov
xor
aad
adc
and
popf
dec
jb
mov
lods
retf
sbb
inc
cmps
adc
mov
xor
mov
push
add
call
hlt
or
inc
and
and
and
and
sub
inc
mov
sti
shr
sar
std
js
jmp
sar
cmp
cs
or
pop
xadd
mov
(bad)
int3
xchg
mov
call
jmp
cld
add
and
je
popf
cmovo
add
es
push
stos
rol
push
mov
lods
dec
xchg
and
sahf
jp
dec
and
fisubr
pop
mov
push
outs
(bad)
call
or
inc
(bad)
loop
jg
add
and
arpl
push
inc
add
mov
cwde
mov
xor
lock
rol
pop
inc
popf
add
rcr
add
rcl
or
inc
test
mov
dec
push
adc
add
arpl
enter
dec
popf
hlt
adc
ins
xchg
loope
pop
jae
loope
mov
add
imul
fild
into
loope
push
pop
push
xchg
cmp
jno
and
or
pop
jp
mov
pop
js
ret
cmp
jg
mov
stc
call
je
or
inc
dec
xchg
arpl
loopne
add
out
shl
mov
cmp
pop
add
enter
fistp
dec
xchg
scas
mov
test
aad
sub
popa
fcomp
test
xor
aaa
sbb
pop
jl
ja
jp
in
test
mov
sub
sbb
adc
pushf
or
int3
pop
fs
dec
mov
je
(bad)
xchg
sub
aam
cs
or
pusha
adc
jge
shr
pusha
loop
test
lea
pop
xor
jo
or
lahf
jge
jecxz
cmp
in
jbe
jmp
jmp
(bad)
hlt
jmp
sbb
lea
call
enter
and
adc
shl
test
rcr
add
mov
popf
mov
mov
aam
adc
aas
jo
sub
or
ins
pop
(bad)
xor
ret
mov
pop
mov
xchg
iret
pop
jo
inc
push
fcom
add
and
cmps
into
xor
addr16
fwait
cmps
and
jmp
(bad)
es
(bad)
or
or
in
stos
mov
jnp
adc
mov
pop
xor
cld
and
(bad)
ja
add
test
dec
xchg
adc
(bad)
xor
mov
sbb
and
or
xor
or
sub
jnp
jmp
inc
push
inc
jb
es
cmp
dec
mov
pop
lods
jle
fdiv
mov
mov
push
scas
jnp
cmp
pop
jmp
and
cmp
addr16
loope
add
add
ss
inc
dec
push
in
push
and
pop
repnz
and
jo
add
dec
(bad)
adc
mov
cmp
mov
pop
in
pop
sahf
jg
adc
mov
das
retf
or
mov
in
out
xor
repz
outs
mov
mov
shl
sbb
jae
sbb
pop
arpl
retf
mov
into
in
xchg
(bad)
sti
cmps
(bad)
sub
jo
mov
aad
fwait
or
pop
mov
dec
popf
mov
fist
add
mov
add
jno
jmp
jb
mov
pop
add
sbb
out
fcmove
pop
int
lds
les
and
loope
xchg
xchg
push
bswap
jae
fsubr
aaa
cmp
sbb
inc
adc
test
cmp
jl
mov
outs
pop
jno
dec
xchg
add
test
inc
rcl
ret
push
push
adc
add
xchg
dec
aad
xchg
std
sub
mov
or
lods
sbb
xor
mov
ja
push
sbb
mov
cli
push
gs
jbe
retf
xchg
in
nop
jmp
inc
push
and
arpl
push
out
pushf
out
push
jmp
scas
adc
sub
jg
mov
mov
or
and
dec
mov
or
(bad)
aad
ss
pushf
adc
xlat
scas
add
xor
fimul
mov
test
and
mov
imul
(bad)
push
xchg
cli
lods
mov
cdq
jg
jmp
sub
(bad)
ffree
int
cmps
(bad)
xchg
sub
xor
mov
push
repnz
jo
(bad)
test
pop
push
js
cmp
add
and
shr
sub
mov
and
(bad)
out
jnp
sbb
imul
fistp
test
xlat
clc
mov
retf
test
lods
sbb
jmp
(bad)
lods
into
pop
pop
stos
push
add
int
inc
push
push
cmp
cld
mov
or
gs
fnstenv
dec
arpl
cmps
sub
adc
lods
retf
sub
jmp
inc
mov
test
shr
mov
hlt
adc
add
mov
mov
mov
(bad)
out
test
push
shld
mov
sub
(bad)
mov
lods
dec
mov
push
jnp
pop
int3
jp
push
rol
enter
or
std
loopne
fcom
rol
leave
adc
push
and
lock
shl
mov
fidiv
call
and
fild
pop
out
fidiv
imul
rcl
dec
(bad)
or
jae
js
jnp
mov
pusha
lock
pop
and
mov
inc
adc
in
jbe
xchg
in
pusha
pop
mov
mov
xlat
push
pop
into
lahf
scas
cmp
adc
add
or
xchg
retf
test
pop
and
cmp
adc
dec
rcl
jmp
add
sahf
dec
je
mov
jno
jmp
hlt
sahf
jp
dec
add
imul
xlat
jle
cmp
fst
int
dec
sub
enter
loopne
cmp
repnz
adc
ror
imul
xchg
xor
cmp
mov
ins
xlat
jo
scas
out
mov
jmp
enter
imul
or
or
inc
push
or
sub
sub
push
ret
cmp
stos
stos
mov
mov
in
repz
std
ret
ficom
sub
(bad)
(bad)
loope
loope
pusha
pop
push
mov
jl
out
fs
mov
(bad)
push
pop
pop
mov
sub
or
xchg
(bad)
or
hlt
fidivr
aaa
jo
mov
cmp
cmp
loopne
ja
mov
cmp
lods
pop
add
lods
pop
adc
and
jae
sbb
js
mov
sub
(bad)
xchg
iret
cmp
add
ins
sub
mov
lds
ins
fidivr
add
pop
mov
cdq
shl
and
sbb
push
retf
mov
in
aaa
lock
jp
and
cwde
xor
popa
sbb
jl
cmp
leave
loope
inc
cmps
loop
dec
aas
pop
add
adc
push
or
mov
cwde
or
and
popf
jno
pop
pushf
mov
aas
out
les
jg
sbb
call
push
sbb
push
or
add
jle
mov
add
hlt
test
test
cwde
cmc
ficomp
add
xor
jbe
ins
mov
pushf
aas
xchg
stos
push
lock
xchg
pusha
xor
(bad)
add
mov
inc
adc
mov
cwde
cmp
or
pop
pop
dec
xchg
cmp
shr
(bad)
cmp
cmp
inc
push
adc
dec
retf
and
add
push
ret
pop
mov
call
das
addr16
push
gs
mov
and
push
inc
aaa
out
repnz
loopne
repnz
mov
(bad)
mov
and
sahf
mov
popf
dec
pop
inc
loopne
fdivr
(bad)
cmp
push
call
addr16
add
sbb
pushf
mov
xor
push
mov
inc
mov
xlat
pop
mov
lea
inc
fwait
jbe
jge
sbb
ins
test
mov
fptan
mov
imul
stos
loop
movs
mov
cs
test
fidiv
or
and
add
and
xor
jge
sub
mov
imul
cdq
add
push
cdq
dec
mov
dec
neg
xchg
cwde
mov
retf
dec
dec
mov
push
clc
jb
xlat
adc
icebp
or
mov
fwait
lds
sub
push
cmp
pop
sub
push
add
rcr
rol
push
cmps
ds
arpl
push
or
loope
adc
addr16
xchg
cli
jo
retf
push
ret
repnz
jo
push
pop
mov
pop
push
inc
ins
rcl
je
pop
mov
and
dec
cmp
pop
je
retf
out
imul
dec
inc
adc
jo
mov
pop
mov
add
sbb
inc
enter
cmps
or
mov
aad
repz
mov
or
cld
mov
popa
jno
call
jmp
and
repnz
gs
dec
sbb
jmp
inc
and
fs
sub
stos
and
and
or
and
add
in
push
mov
fcom
push
pop
pusha
pop
add
xor
dec
loop
addr16
or
cmps
lea
mov
add
push
clc
jl
mov
sbb
shr
or
aad
(bad)
jge
cmp
jbe
mov
mov
addr16
push
hlt
lods
fnstcw
sahf
jmp
adc
daa
inc
pop
ror
in
push
jo
or
mov
cmp
in
repz
push
dec
ss
xor
pushf
stos
or
cmc
jg
scas
mov
or
scas
data16
fimul
sbb
jg
retf
or
or
es
push
or
push
adc
jg
pop
sahf
je
out
das
(bad)
jl
jmp
jae
into
xor
cmp
mov
leave
adc
inc
xor
dec
icebp
test
mov
lahf
jle
or
ja
add
aad
xchg
sub
call
(bad)
add
jb
arpl
(bad)
aas
cmp
pop
ret
push
jecxz
scas
add
out
xchg
dec
dec
out
idiv
fnstsw
(bad)
ins
int
jbe
ins
sti
idiv
mov
xor
mov
cmps
sub
add
mov
jno
pop
loopne
outs
jo
xchg
push
sub
in
add
pop
jo
leave
dec
cld
jo
fsubrp
in
ja
jge
adc
cmp
cmp
jae
test
mov
jge
outs
mov
lock
test
shl
xchg
call
lds
jo
retf
mov
in
test
retf
test
xchg
scas
jbe
pop
sub
dec
jmp
push
cmps
dec
pusha
lds
inc
push
call
outs
retf
cld
ins
inc
lods
jmp
test
mov
adc
mov
inc
popa
loope
pop
lods
push
(bad)
(bad)
pop
mov
mov
repz
test
push
inc
stos
dec
dec
push
cld
aad
fistp
push
mov
jo
dec
(bad)
mov
push
imul
ret
add
mov
sbb
out
mov
or
lahf
stos
mov
cdq
popf
mov
jg
pop
ins
pop
(bad)
int3
sbb
int
(bad)
es
mov
(bad)
jo
sbb
daa
mov
std
jg
mov
pop
les
pusha
sbb
sbb
popa
(bad)
mov
pop
pop
sbb
pop
icebp
div
add
in
jns
xor
movd
jmp
shl
fild
sti
cmp
and
in
xchg
nop
xchg
int
cmp
xchg
arpl
fadd
fdivr
cld
lea
cmc
jb
test
loope
xor
test
sbb
scas
gs
cmc
or
sbb
or
shl
cmps
dec
xlat
pop
imul
or
daa
push
jmp
jne
mov
sbb
mov
leave
fisub
sbb
imul
push
in
in
dec
dec
jmp
imul
fidivr
and
pop
cmp
iret
out
or
pop
inc
mov
sbb
(bad)
push
fistp
mov
lods
inc
popa
dec
pop
cmp
inc
push
and
cmps
push
je
sub
inc
pop
ret
pop
retf
mov
xchg
mov
mov
xchg
leave
aas
in
inc
rcr
cld
sti
xchg
jl
sbb
fwait
lods
add
(bad)
scas
lds
fwait
aaa
inc
outs
xor
fs
mov
inc
push
adc
push
xchg
xchg
ds
cmps
imul
lods
imul
and
shl
or
mov
xchg
or
cmp
sub
jecxz
(bad)
jmp
add
jmp
dec
cmp
and
xchg
jb
xor
mov
and
ss
push
(bad)
out
js
inc
iret
pop
loopne
sbb
(bad)
(bad)
stc
loopne
ss
add
jl
xor
movs
push
pop
jo
das
fist
shl
cmp
inc
add
shl
inc
xchg
and
mov
xor
aas
xor
(bad)
jecxz
inc
stos
stos
movs
jg
stos
jl
and
(bad)
fdivr
lods
pop
mov
cmp
mov
bnd
or
nop
adc
cwde
mov
imul
mov
mov
into
push
push
mov
xchg
sub
retf
ins
js
retf
push
int3
(bad)
xchg
mov
cmp
xchg
adc
scas
test
pop
(bad)
and
pop
inc
mov
stc
test
mov
jecxz
cmc
jle
and
fldpi
mov
leave
mov
add
in
jmp
mov
pop
aad
aad
mov
fild
stc
stc
mov
jne
enter
aas
aas
and
imul
mov
xor
mov
and
test
shr
cwde
stos
or
loope
sbb
push
or
div
mov
mov
pop
xchg
and
sbb
jl
jbe
ds
sbb
push
push
push
lea
push
ret
pop
ret
imul
out
js
jmp
js
dec
pop
sbb
pop
ss
mov
dec
dec
mov
out
push
pop
cmp
cmp
dec
add
sti
bndstx
repz
and
in
int3
dec
pop
pop
push
test
fwait
aaa
popa
sti
(bad)
pop
push
push
push
add
cdq
dec
shl
cld
push
mov
popf
ds
imul
mov
shl
ins
sti
neg
xor
mov
push
stos
stos
or
xor
inc
adc
jmp
adc
ins
repz
push
adc
aad
cmp
push
or
mov
inc
std
cld
icebp
je
push
js
pop
maxps
sbb
pushf
(bad)
sub
mov
jp
(bad)
imul
mov
je
dec
rol
add
fisub
sub
pop
cmp
adc
ret
sbb
push
je
cmp
cmp
and
retf
setne
repz
push
ret
ins
mov
outs
sub
(bad)
imul
add
mov
pop
cs
cmp
sbb
inc
mov
push
and
pop
mov
popa
inc
movs
hlt
mov
xchg
in
cs
aas
repz
stc
jge
cli
icebp
scas
sub
push
inc
pop
pop
cmp
test
add
int3
mov
xlat
mov
ins
cmps
and
inc
popa
or
pop
das
ret
xchg
icebp
repz
in
push
mov
cmp
cmp
jg
cld
ficomp
mov
dec
rol
cmp
mov
ret
and
push
test
pop
jle
pop
inc
push
push
pop
xchg
xchg
rcr
js
and
gs
pop
cmp
jle
jmp
stos
or
pushf
xchg
lds
in
push
adc
mov
aad
and
xchg
ins
and
fcomip
and
xor
dec
xchg
lock
fdivr
sahf
pop
fwait
adc
push
inc
jle
xor
add
pop
xchg
add
sub
add
pop
xor
cmovg
sbb
push
sub
popf
cmp
dec
pop
push
lea
mov
int
inc
mov
movs
pop
cmp
push
fist
shl
cmp
xor
mov
dec
add
add
in
sub
push
out
jo
into
icebp
jo
add
popf
or
or
add
test
sub
shr
push
mov
jne
xor
adc
les
ins
mov
pusha
xor
mov
sub
cmp
mov
push
mov
rcl
jnp
aas
mov
retf
push
gs
retf
inc
add
sbb
and
and
jg
or
add
pusha
mov
mov
jecxz
ins
(bad)
add
cdq
shl
mov
lock
in
xchg
push
sub
aam
cmc
clc
std
jg
mov
movs
inc
movs
imul
(bad)
std
loopne
push
xor
popa
inc
out
into
sbb
mov
jg
jnp
add
inc
push
mov
and
fstp
jmp
adc
mov
xor
fs
sahf
into
stos
mov
cwde
stos
dec
pusha
cmc
push
sbb
mov
lds
sub
add
sub
shr
and
mov
push
adc
mov
dec
cli
dec
push
jns
into
or
jb
ins
test
das
cmp
push
xchg
xor
adc
push
dec
lock
xchg
fwait
add
sub
sahf
outs
pop
hlt
push
xor
gs
into
mov
cmp
aam
xlat
xor
mov
sbb
pusha
and
shr
sub
bound
into
push
sub
cmp
dec
test
add
adc
or
mov
inc
add
test
dec
jl
cmp
or
xchg
mov
xor
cmp
sar
cmp
bound
xchg
je
stc
mov
and
mov
fmul
mov
fimul
dec
adc
inc
sar
nop
adc
inc
add
push
mov
mov
jnp
and
inc
adc
jb
lods
dec
mov
shl
mov
adc
xor
add
lods
popa
daa
jne
mov
bound
stos
mov
je
sbb
daa
fcmovne
repnz
nop
add
and
in
xor
jb
push
stc
lahf
adc
jae
in
icebp
jae
je
adc
out
shl
and
fmul
arpl
push
aam
aaa
or
int
pop
hlt
sub
pop
xchg
leave
push
adc
clc
fmul
mov
fisttp
ins
pop
and
and
ins
mov
lods
popf
stos
in
push
inc
push
cmp
ins
mov
adc
xchg
adc
and
add
jo
hlt
sub
rol
sbb
mov
pop
(bad)
nop
dec
jmp
mov
pop
add
mov
pop
push
sub
int
retf
int
stc
enter
xor
mov
pop
mov
dec
repz
lds
add
adc
push
push
mov
scas
mov
pop
jbe
mov
xchg
ret
inc
loop
leave
retf
pop
mov
dec
dec
out
aas
or
xchg
and
mov
popf
pushf
addr16
sbb
adc
cs
pusha
or
lods
pinsrw
repz
inc
add
add
or
cmc
inc
pop
push
mov
xchg
add
xchg
add
inc
add
shr
xchg
xchg
popf
dec
dec
nop
lods
sub
adc
inc
shl
dec
adc
rol
and
mov
sub
mov
repnz
mov
adc
xchg
xor
cmp
inc
scas
adc
addr16
fnstcw
xchg
loope
dec
mov
cmp
inc
adc
loop
fwait
in
xchg
add
shl
cmp
gs
test
add
sub
fdiv
fstp
cmc
push
js
pop
ret
xor
cmc
mov
data16
or
xor
cmp
sbb
xor
sub
je
outs
pop
jbe
add
add
push
mov
inc
scas
rol
or
cmp
adc
mov
pop
sbb
mov
ds
mov
inc
cmp
iret
or
js
sbb
adc
sub
cmc
dec
loopne
and
mov
push
inc
nop
loopne
push
xchg
and
outs
push
sbb
and
cwde
inc
sbb
retf
sbb
xchg
add
icebp
imul
je
jns
sub
sar
xchg
fwait
inc
inc
gs
xchg
mov
cmp
mov
jmp
mov
enter
adc
or
or
xchg
push
sub
sbb
add
gs
aam
test
outs
hlt
popf
(bad)
ror
mov
jmp
or
lds
pop
xor
xchg
mov
std
push
sub
inc
push
mov
xor
add
mov
cmp
inc
adc
enter
sub
inc
add
mov
inc
push
adc
bound
mov
sbb
pop
addr16
stos
pop
bound
std
fimul
inc
jns
arpl
nop
or
jbe
add
popf
pop
add
mov
adc
addr16
scas
cmp
adc
and
inc
sar
sti
sub
pusha
push
xchg
(bad)
aad
pop
pop
aam
test
pusha
pop
sbb
pop
(bad)
retf
ins
push
and
pop
(bad)
xchg
sti
mov
nop
mov
mov
push
sub
mov
mov
icebp
outs
inc
push
cmp
leave
div
repnz
and
dec
mov
lods
or
aaa
adc
adc
and
mov
in
mov
int3
cmp
mov
and
xchg
sub
sahf
imul
xor
push
call
mov
xor
arpl
idiv
out
icebp
pop
push
adc
and
dec
mov
movs
push
jae
dec
adc
pop
xor
lods
xor
fcmovu
loop
(bad)
in
sbb
imul
in
imul
clc
(bad)
lods
mov
mov
fisttp
imul
sub
in
fstp
add
xchg
pop
repz
xchg
mov
mov
hlt
inc
mov
sti
stos
jge
add
gs
xor
stc
stc
stc
ror
hlt
mov
adc
dec
push
xchg
pop
pop
push
inc
pop
cmp
jne
out
lahf
push
stos
sub
jmp
mov
into
push
jb
sbb
ins
cmp
sub
add
jmp
js
(bad)
jmp
sbb
jae
int
lods
outs
xchg
cwde
call
repnz
lock
dec
dec
dec
pop
in
mov
stos
adc
inc
test
mov
int
std
stc
fcmovnu
mov
add
(bad)
cli
inc
lahf
jle
sar
cmp
jecxz
or
(bad)
lahf
jle
out
cld
stc
repz
push
jge
adc
cmc
xor
aaa
cmp
adc
fnstenv
cmps
pop
fwait
std
stc
addr16
loop
stos
sahf
jns
cli
mov
push
push
xchg
daa
or
lds
cmp
and
(bad)
call
ret
mov
xor
jecxz
(bad)
lahf
pushf
adc
adc
ins
jns
sbb
mov
xchg
xchg
pop
cli
je
nop
popa
out
je
shl
shl
das
sub
dec
or
test
fs
(bad)
lahf
fistp
dec
push
push
repz
pushf
cmp
cli
lods
xor
sub
sbb
out
ins
push
inc
popa
in
mov
xor
inc
(bad)
int3
rcl
mov
cmp
ret
cli
push
push
push
push
cmps
mov
(bad)
(bad)
enter
fdivr
pop
mov
xchg
sub
repnz
(bad)
sbb
leave
jbe
dec
leave
lea
jbe
and
xchg
(bad)
in
inc
out
pop
lea
not
xor
xor
nop
fild
dec
jle
jb
nop
pop
ja
js
xor
mov
cmps
scas
jnp
adc
xor
loope
arpl
sti
dec
add
mov
fcmovne
cmp
aad
mov
test
scas
scas
add
nop
sub
mov
(bad)
inc
sti
hlt
push
sub
cmc
cmc
test
or
mov
retf
(bad)
(bad)
sbb
pushf
push
scas
pop
adc
or
iret
pop
mov
mov
cs
sbb
stos
xor
mov
push
nop
lahf
pop
repnz
outs
shl
or
and
daa
push
jbe
mov
bound
js
shl
jecxz
in
clc
popa
retf
data16
xchg
repz
(bad)
stos
stos
pop
je
fidiv
outs
dec
dec
mov
pusha
push
js
daa
mov
inc
jmp
div
pop
cmp
mov
cmps
(bad)
cli
add
std
clc
mov
loope
pop
jbe
dec
dec
dec
dec
cmp
mov
add
push
test
shl
mov
leave
leave
into
mov
fwait
cmp
mov
push
pop
push
xor
dec
nop
adc
scas
sbb
pop
cdq
mov
cmp
add
sub
rol
push
push
xchg
xor
mov
push
popf
cli
enter
stc
(bad)
in
pop
scas
mov
gs
xchg
push
and
sti
sub
and
in
rcl
into
popf
imul
hlt
lock
mov
sbb
xchg
enter
lds
(bad)
inc
push
jl
inc
cld
cmp
sbb
xchg
call
or
(bad)
clc
xor
pop
mov
dec
mul
jmp
(bad)
sbb
lahf
jae
mov
fs
in
mov
xchg
ror
movs
(bad)
test
cmp
sbb
bound
cdq
imul
ins
imul
push
(bad)
mov
push
push
push
and
add
loop
sbb
xchg
shl
jns
add
pop
mov
test
sub
fs
repz
xchg
push
adc
xchg
cs
sbb
mov
js
retf
cmp
dec
scas
lahf
inc
xchg
in
dec
sbb
pop
mov
add
out
mov
mov
cs
mul
xchg
cmp
lahf
lahf
mov
shl
sub
jp
(bad)
scas
(bad)
inc
cdq
rol
lea
jmp
(bad)
dec
ds
pop
ret
sahf
mov
mov
mov
pop
cpuid
arpl
aas
ds
outs
xor
ins
fdiv
mov
(bad)
jmp
cli
sbb
mov
sbb
retf
retf
hlt
mov
pop
mov
aad
rcr
jns
out
movs
retf
fwait
mov
sub
mov
call
stos
inc
xchg
gs
mov
into
jns
test
sahf
into
jl
(bad)
out
jbe
fnstsw
dec
mov
iret
mov
(bad)
and
mov
ja
fdivr
in
aas
out
(bad)
mov
xchg
mov
(bad)
loop
pop
push
les
jmp
mov
loop
pop
pop
dec
addr16
(bad)
jge
sub
add
popa
ss
adc
pop
xchg
inc
mov
rcl
push
mov
addr16
aam
jae
mov
mov
icebp
icebp
or
or
push
test
mov
sub
ret
jmp
push
fisubr
sbb
enter
repz
retf
data16
cmp
test
jmp
data16
fdiv
pop
or
gs
and
movs
push
sbb
fsubr
lods
out
ss
icebp
lds
jp
je
jecxz
xchg
(bad)
lea
lods
cmps
and
mov
push
push
test
dec
ins
push
push
and
in
fcomp
icebp
jmp
aaa
xor
fnstcw
pop
addr16
aas
jg
sub
xlat
gs
xchg
fs
(bad)
xlat
sbb
(bad)
jle
outs
into
(bad)
imul
pop
int
mov
repnz
xchg
sub
pop
sub
sub
push
out
ds
fmulp
cld
jbe
imul
repz
cmovle
xchg
fldenv
nop
and
into
int
jecxz
adc
cmp
sti
loope
pop
jg
jge
push
sub
fs
push
stos
pop
adc
cli
loopne
lahf
sbb
xchg
out
mov
adc
rcl
je
mov
mov
adc
stos
add
inc
xor
cmc
jmp
out
mov
daa
dec
pop
mov
adc
outs
mov
add
out
or
gs
sar
cs
lahf
jle
das
addr16
push
sbb
sub
and
xor
mov
out
call
push
lock
mov
sub
and
push
shl
in
aad
sub
mov
imul
inc
dec
dec
xor
xchg
adc
movs
or
test
push
call
jbe
lock
or
cmps
shl
mov
mov
inc
loope
out
pop
xor
aam
xor
fcomp
sbb
push
cmp
lds
jmp
pop
adc
jae
stos
rcr
mov
mov
outs
push
push
push
add
out
inc
outs
jbe
(bad)
loop
shr
loopne
inc
and
cmp
sub
xchg
and
je
mov
lock
cmp
inc
inc
inc
cmps
hlt
push
sub
test
jl
out
pop
jge
push
mov
cwde
div
adc
in
inc
adc
push
pusha
jo
mov
rcl
mov
cmp
jo
test
retf
mov
retf
out
mov
dec
adc
stos
in
mov
cmps
cmps
imul
xor
ret
retf
adc
outs
mov
retf
sbb
rol
dec
fnsave
shl
iret
dec
sbb
fidiv
std
cld
retf
inc
push
aam
popf
xor
jno
mov
jb
jae
or
inc
sar
addr16
sbb
js
mov
std
adc
adc
lock
xchg
sub
xchg
sbb
(bad)
fucomi
jbe
not
mov
outs
pop
pop
cs
mov
jmp
sub
pop
mov
add
and
cmps
xchg
fidiv
pop
cmp
movs
xchg
pop
imul
lods
push
xchg
in
das
lahf
sbb
fadd
or
test
or
stc
repnz
jbe
scas
in
mov
cs
mov
push
xlat
outs
sbb
mov
add
inc
push
xchg
xchg
and
and
push
stos
adc
mov
mov
add
inc
push
xchg
push
call
adc
loop
mov
add
pop
cmps
cmp
push
adc
sbb
mov
pop
push
loopne
mov
cli
dec
(bad)
or
sbb
push
jno
jne
sbb
fisub
dec
adc
pop
cmps
rcr
cmp
call
push
push
out
std
out
pop
inc
fnstsw
aam
push
cwde
aaa
out
sbb
cmps
loope
fstp
push
adc
fs
test
neg
imul
in
jns
or
pop
fcmovnbe
push
nop
cwde
xchg
pop
xchg
fwait
xchg
arpl
mov
shl
and
add
out
jg
mov
pop
(bad)
inc
aaa
test
loop
iret
pop
jmp
sub
mov
sub
test
ja
xchg
dec
mov
rol
mov
fcmovbe
ins
mov
leave
loop
xchg
jbe
mov
popf
and
imul
inc
inc
jae
clc
jl
fnsave
fdivr
add
retf
mov
mov
jge
call
and
aam
push
jle
mov
mov
mov
jge
out
imul
pop
pop
mov
or
dec
pop
bsr
jo
shl
(bad)
repnz
mov
stos
outs
mov
repz
dec
(bad)
cld
test
shl
xlat
scas
fwait
inc
push
sbb
xchg
data16
jl
mov
rcl
call
imul
inc
pop
pop
imul
sub
cmp
mov
repnz
mov
mov
cwde
repnz
inc
mov
xchg
xchg
xchg
jbe
xor
sbb
inc
push
push
outs
jo
add
lock
and
sub
mov
out
sbb
std
jge
cmp
mov
out
in
xor
sbb
scas
adc
call
shr
(bad)
bound
inc
and
pushf
dec
cmps
jecxz
(bad)
sbb
int3
push
call
shl
nop
ficomp
mov
hlt
jp
push
push
inc
xlat
outs
fnstsw
mov
test
je
aad
imul
adc
pop
cli
jnp
cli
stos
mov
retf
dec
dec
adc
lahf
div
add
xchg
mov
cmp
out
lahf
das
dec
adc
push
cmp
retf
lods
mov
call
dec
loopne
pop
xchg
xchg
shl
inc
sahf
jecxz
fidivr
aad
add
jae
addr16
xchg
aaa
fsubr
sub
lock
in
retf
pop
adc
xchg
pusha
push
cmp
adc
jmp
adc
mov
dec
pop
mov
adc
js
(bad)
int3
jmp
cmp
or
and
in
(bad)
pusha
mov
(bad)
cmps
mov
cmp
jns
pop
shl
jl
or
jle
cmp
push
mov
mov
bound
cmp
cmp
inc
scas
shl
jmp
fild
mov
mov
mov
xchg
pop
xchg
sar
jl
movs
pop
out
cmp
loop
(bad)
stc
lods
sbb
jno
adc
jecxz
adc
les
add
loop
lds
xchg
stos
stos
call
jle
mov
out
repnz
dec
cwde
cmc
ficomp
cmp
into
or
adc
pop
mulps
dec
in
xlat
jg
mov
cmps
dec
fdivp
jecxz
sbb
cmp
repnz
lahf
cmp
fld
mov
pop
xchg
sbb
ins
mov
and
or
sbb
(bad)
sbb
(bad)
fdiv
pop
pop
push
cld
lods
push
aas
jg
push
shr
sub
cmps
dec
popf
inc
jb
xor
dec
cdq
cmp
mov
out
mov
mov
jmp
outs
daa
adc
and
xchg
and
ins
test
dec
clc
xor
out
(bad)
push
or
add
mov
mov
loope
inc
pop
sub
call
push
push
pop
sub
int
cs
pop
shr
cmp
shl
iret
ds
(bad)
jmp
mov
mov
jns
adc
push
mov
test
stc
add
pop
add
or
shl
int
jno
lock
or
xchg
xchg
call
icebp
or
add
das
retf
xor
int3
cdq
adc
enter
push
push
vminss
ret
xlat
aam
stc
xlat
scas
and
dec
dec
xor
push
cmp
inc
les
test
or
push
jns
xor
pop
mov
aad
cmp
xchg
mov
inc
xchg
fld1
jb
pop
lea
and
add
ror
in
jb
push
mov
scas
pop
xor
movs
pop
mov
add
mov
mov
stos
push
mov
lods
imul
in
mov
out
test
sahf
std
xor
xor
das
xor
adc
add
inc
loopne
mov
dec
stc
xlat
nop
lahf
lahf
pop
leave
mov
adc
mov
rol
stos
or
push
mov
pushf
or
mov
movs
in
test
scas
or
lahf
mov
inc
shl
in
fisttp
jg
aas
fisubr
push
and
mov
inc
inc
movs
pop
scas
aaa
inc
inc
inc
jecxz
sar
ret
out
mov
fscale
ror
fst
fdivrp
loopne
outs
and
cmps
shl
call
cmps
aas
neg
xchg
mov
sbb
dec
push
adc
daa
daa
fisttp
adc
cs
or
ins
inc
inc
inc
cmps
movs
cdq
mov
mov
sbb
sub
das
aaa
pop
in
gs
push
mov
fwait
icebp
cld
or
cmps
and
scas
fnstsw
xchg
inc
xor
dec
add
mov
fld
pop
mov
(bad)
jg
(bad)
jmp
push
push
cmps
add
cmp
ficomp
iret
mov
add
dec
lahf
xor
push
add
jmp
push
or
dec
nop
mov
outs
push
imul
(bad)
xor
inc
(bad)
push
cmp
cmp
jns
shl
xor
push
mov
jo
xchg
xor
(bad)
rcr
xchg
idiv
xor
sub
es
fldenv
mov
push
inc
jo
mov
push
xchg
xchg
xchg
and
xchg
add
mov
rcl
sahf
movs
sub
push
xchg
ror
inc
sub
push
inc
push
push
ret
pop
mov
jbe
or
or
xchg
lods
inc
shl
push
or
retf
xchg
mov
or
(bad)
std
cld
add
stos
stos
in
aad
nop
nop
nop
cmp
mov
add
cmp
and
mov
mov
movs
sub
cmp
jg
pop
ret
jmp
push
push
cld
int
and
fisubr
pop
add
int
lea
aad
push
jp
dec
inc
movs
aad
je
outs
mov
and
push
adc
add
add
xchg
(bad)
scas
mov
pop
in
ds
adc
test
inc
mov
jp
jmp
test
imul
push
cdq
rcl
push
repz
cmovge
das
dec
xchg
dec
push
aad
rcl
push
pop
js
mov
sub
jp
out
mov
xor
and
inc
adc
(bad)
jmp
and
xchg
and
xchg
push
or
mov
ret
dec
jns
mov
cmps
add
pop
stos
inc
dec
adc
mov
addr16
popf
xchg
fldl2t
das
sub
xchg
(bad)
push
push
xchg
or
add
aam
push
jae
inc
add
ret
mov
or
gs
cmp
lods
outs
cld
pop
sub
clc
sti
pop
xchg
lea
shl
xchg
dec
cmps
pop
mov
out
mov
xchg
std
cli
aas
xor
and
cmp
jne
sub
xor
fcomp
mov
scas
inc
retf
push
adc
sub
sub
mov
dec
scas
js
std
seta
mov
push
add
add
adc
test
outs
sets
add
and
push
mov
in
in
rcl
dec
dec
dec
jae
movs
movs
aad
pop
jg
int3
and
add
(bad)
ja
icebp
cmps
stos
stos
xor
pushf
or
hlt
jg
jbe
cmps
rcl
ficomp
mov
leave
or
aam
daa
cs
jno
icebp
fidivr
aaa
xchg
lods
stos
icebp
ficomp
inc
retf
ins
aaa
out
rol
sbb
jmp
push
in
lahf
push
call
cmp
fiadd
jg
loope
std
out
pop
ins
ins
pop
lds
out
aaa
inc
lods
jno
mov
mov
cld
dec
arpl
pop
inc
repnz
std
add
cwde
fdivr
pop
loope
adc
add
jmp
fwait
movs
cld
cmps
jecxz
std
addr16
mov
lock
lea
dec
inc
push
push
mov
inc
(bad)
aam
mov
dec
mov
jmp
pop
jmp
cmc
inc
lods
xchg
jp
pop
bound
sub
aaa
add
mov
add
add
dec
inc
dec
inc
scas
inc
pusha
and
sbb
add
add
dec
add
inc
add
dec
add
add
add
pusha
add
add
add
(bad)
(bad)
(bad)
inc
sbb
add
dec
pop
ins
ins
inc
outs
outs
jbe
jb
gs
push
dec
sub
push
gs
imul
cs
xor
xor
xor
and
ins
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
outs
jne
ins
sbb
sbb
outs
popa
ins
gs
popa
arpl
pop
ins
ins
inc
outs
outs
jbe
jb
gs
push
dec
addps
inc
outs
outs
jbe
jb
gs
push
dec
add
sbb
add
dec
ins
jae
outs
jb
imul
jae
outs
outs
cmp
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
aaa
popa
xor
cmp
xor
xor
cmp
xor
arpl
outs
popa
ins
gs
popa
arpl
push
jns
je
ins
cmp
jae
ins
bound
ins
jae
outs
jb
imul
gs
add
sbb
add
pop
ins
ins
inc
outs
outs
jbe
jb
gs
push
dec
cs
popa
imul
ja
add
add
add
dec
push
imul
popa
jae
sub
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
xor
bound
cmp
ss
xor
push
push
jb
jae
outs
je
je
outs
outs
inc
outs
jb
sub
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
xor
bound
cmp
ss
xor
pop
push
jb
jae
outs
je
je
outs
outs
inc
jb
ins
gs
jb
sub
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
xor
bound
cmp
ss
xor
push
das
das
jae
push
cs
imul
je
arpl
das
ja
outs
data16
xor
xor
das
js
ins
ins
das
jo
gs
outs
je
je
outs
outs
add
add
add
add
adc
add
push
das
das
jae
push
cs
imul
je
arpl
das
ja
outs
data16
xor
xor
das
js
ins
ins
add
add
add
add
adc
add
je
jo
das
das
jae
push
cs
imul
je
arpl
das
gs
jb
jae
imul
outs
fs
xor
xor
add
add
add
add
adc
add
cmp
je
cmp
das
jae
push
outs
jo
outs
js
ins
outs
jb
popa
je
outs
jb
das
ins
popa
jb
jne
sub
popa
je
bound
imul
add
add
add
add
adc
add
ins
sbb
outs
popa
ins
gs
popa
arpl
pop
ins
ins
inc
outs
outs
jbe
jb
gs
push
dec
add
add
add
add
adc
add
jae
arpl
outs
popa
ins
gs
popa
arpl
push
jns
je
ins
cmp
jae
ins
bound
ins
jae
outs
jb
imul
add
sub
pop
adc
add
imul
jns
gs
add
or
ins
push
imul
pop
adc
add
gs
jp
dec
outs
fs
add
or
push
gs
jp
cmp
inc
xor
xor
add
pop
sbb
add
imul
popa
jb
jne
dec
outs
arpl
imul
or
outs
je
jb
arpl
outs
cmp
add
arpl
and
add
sub
arpl
das
das
popa
jo
ins
imul
cmp
sub
push
gs
jne
arpl
das
push
popa
jbe
imul
add
sbb
imul
in
inc
sub
adc
push
jne
ins
imul
jb
imul
call
add
adc
add
inc
jb
imul
imul
xor
xor
xor
push
add
inc
push
inc
outs
je
jb
push
push
add
xor
xor
xor
pop
add
inc
pop
push
popa
imul
add
cs
xor
or
or
add
push
popa
imul
add
cs
xor
inc
add
add
or
add
add
jb
adc
add
inc
jno
popa
ins
popa
jb
outs
gs
add
add
dec
data16
je
or
add
xor
xor
add
add
or
push
inc
imul
and
or
add
xor
add
add
pop
adc
add
inc
or
jae
jne
arpl
or
add
add
xor
ins
inc
outs
outs
jbe
jb
gs
push
dec
cs
imul
outs
jb
pop
push
je
imul
outs
ins
inc
outs
outs
jbe
jb
gs
push
add
adc
ins
gs
popa
je
push
imul
je
sbb
add
outs
outs
jbe
jb
gs
push
dec
cs
jne
je
push
popa
ins
jne
push
imul
je
inc
outs
outs
jbe
jb
gs
adc
add
dec
jne
je
inc
outs
outs
jbe
jb
gs
cmp
add
add
pop
ins
ins
inc
outs
outs
jbe
jb
gs
push
dec
cs
jne
je
push
popa
ins
jne
push
imul
je
inc
outs
outs
jbe
jb
gs
js
arpl
gs
sbb
add
dec
jne
je
inc
outs
outs
jbe
jb
gs
js
arpl
gs
sub
add
and
ins
inc
outs
outs
jbe
jb
gs
push
dec
cs
popa
ins
jne
inc
outs
outs
jbe
jb
gs
bound
and
add
adc
bound
dec
imul
outs
jbe
jb
gs
hlt
std
add
or
add
add
add
add
or
add
add
or
add
add
add
add
or
add
add
add
add
add
add
add
add
add
add
add
add
push
repnz
add
add
adc
add
push
outs
ja
imul
outs
outs
jae
or
add
std
add
mov
inc
jecxz
add
mov
sub
inc
jecxz
add
mov
add
add
jecxz
add
mov
xor
add
add
pop
sbb
adc
ins
jne
outs
inc
imul
outs
outs
jae
or
add
cmps
inc
add
cmps
inc
add
cs
add
inc
and
sar
xor
(bad)
and
ret
inc
xor
(bad)
and
ret
xor
dec
or
add
std
add
mov
inc
jecxz
add
mov
inc
jecxz
add
mov
inc
jecxz
add
mov
inc
jecxz
add
mov
inc
jecxz
add
mov
inc
jecxz
add
mov
inc
jecxz
add
mov
xor
add
add
or
add
repz
xor
add
add
cmps
inc
and
repz
xor
add
repz
xor
add
add
cs
add
xchg
(bad)
call
add
and
sar
xor
(bad)
and
ret
inc
xor
(bad)
and
iret
dec
xor
and
and
and
jno
and
sar
add
gs
call
sbb
(bad)
iret
or
iret
and
xchg
iret
or
scas
into
mov
add
movs
inc
sub
and
retf
arpl
inc
imul
std
and
sar
xor
(bad)
and
ret
inc
xor
(bad)
and
ret
xor
(bad)
and
(bad)
inc
xor
xor
sar
add
gs
jmp
iret
dec
xor
and
and
and
jnp
add
pop
sbb
add
imul
gs
bound
push
popa
je
and
push
add
inc
gs
jb
jo
imul
lldt
std
add
push
gs
arpl
push
popa
ins
jne
push
popa
je
and
sldt
dec
inc
cdq
std
pop
scas
inc
in
inc
sub
push
adc
dec
inc
cs
imul
outs
jb
dec
imul
adc
add
std
add
arpl
push
popa
ins
jne
pop
adc
add
inc
sub
adc
inc
dec
inc
cs
imul
outs
jb
sub
add
cmps
std
add
sar
xor
(bad)
and
ret
inc
xor
(bad)
and
ret
xor
(bad)
pop
adc
add
jb
outs
je
je
outs
outs
and
adc
or
jb
jp
outs
je
ins
cmp
add
add
add
retf
arpl
inc
gs
jne
je
popa
je
cdq
std
push
or
(bad)
call
(bad)
jmp
iret
dec
xor
and
and
and
(bad)
inc
xor
xor
dec
std
add
dec
jo
arpl
jns
or
add
cmp
adc
push
inc
pop
push
outs
outs
ins
push
imul
mov
test
mov
mov
scas
into
mov
and
test
mov
iret
or
mov
into
mov
and
mov
or
into
mov
into
mov
test
or
and
mov
scas
into
mov
into
mov
mov
test
mov
scas
into
mov
mov
xchg
lods
into
mov
into
mov
mov
mov
or
mov
into
mov
mov
mov
or
scas
into
mov
or
into
mov
into
mov
test
or
scas
and
or
xchg
into
mov
into
mov
iret
sub
mov
or
test
mov
and
mov
or
lods
iret
test
mov
mov
mov
test
mov
mov
mov
into
mov
into
scas
into
mov
into
mov
or
into
mov
into
mov
test
or
iret
and
mov
into
mov
iret
xchg
mov
cs
std
pop
adc
fs
add
dec
jae
push
fs
adc
add
inc
sub
sbb
inc
dec
inc
cs
jae
inc
gs
jne
je
imul
pop
or
add
outs
fs
adc
outs
push
popa
jns
call
sbb
add
inc
adc
fs
je
push
outs
jne
arpl
jb
addr16
adc
jb
jo
jb
jns
push
fs
bnd
xor
into
mov
into
mov
or
into
mov
into
mov
into
mov
into
mov
or
into
mov
into
mov
test
or
add
mov
add
and
retf
arpl
dec
outs
outs
jb
inc
je
outs
outs
arpl
imul
je
std
and
iret
dec
xor
and
and
and
jno
pop
adc
add
inc
sub
push
sbb
dec
inc
cs
outs
outs
jb
inc
je
outs
outs
inc
jb
imul
je
and
adc
outs
push
popa
jns
jmp
jb
jo
jb
jns
push
fs
jnp
add
add
adc
add
add
inc
outs
outs
jbe
jb
gs
pop
add
add
cs
add
inc
pop
or
add
inc
add
popa
je
and
sbb
adc
inc
cs
imul
outs
jb
adc
add
in
inc
pop
adc
add
inc
or
gs
outs
je
popa
ins
gs
sbb
sbb
imul
outs
jb
inc
je
outs
outs
arpl
imul
je
std
and
sbb
add
popa
ins
gs
add
or
bnd
push
push
into
popf
into
mov
into
mov
mov
mov
into
mov
and
mov
mov
iret
xchg
mov
mov
or
mov
iret
or
mov
or
iret
and
je
outs
outs
inc
jb
imul
add
or
mov
add
and
sar
xor
(bad)
and
ret
inc
xor
(bad)
and
iret
dec
xor
and
and
and
jno
and
sar
add
gs
call
daa
and
into
mov
mov
iret
and
lahf
iret
or
mov
into
mov
and
add
cmps
std
add
sar
xor
(bad)
and
ret
inc
xor
(bad)
and
ret
xor
(bad)
and
adc
or
jb
jp
outs
je
ins
cmp
add
add
add
retf
je
je
jb
inc
outs
fs
std
push
or
(bad)
call
(bad)
jmp
iret
dec
xor
and
and
and
(bad)
inc
aaa
xor
adc
add
cmp
pop
adc
add
popa
js
outs
addr16
and
sbb
add
add
jae
gs
fs
outs
ins
jns
push
sbb
add
and
sar
add
gs
inc
mov
add
inc
sub
adc
inc
dec
inc
cs
bound
outs
jb
jb
inc
outs
fs
adc
outs
push
popa
jns
jmp
jb
jo
jb
jns
push
fs
mov
or
add
pop
dec
jb
inc
outs
fs
std
add
or
add
add
add
add
dec
jb
inc
outs
fs
std
add
push
cs
pop
jnp
add
add
pop
add
add
cs
add
inc
and
sbb
adc
inc
cs
imul
outs
jb
adc
add
in
inc
and
sbb
or
dec
jb
inc
outs
fs
std
and
sbb
add
popa
ins
gs
add
or
mov
add
cmp
add
and
retf
je
je
outs
jne
je
jns
outs
fs
std
push
or
(bad)
call
(bad)
jmp
iret
dec
xor
and
and
and
(bad)
inc
aaa
xor
adc
add
cmp
push
push
sbb
add
and
sar
add
gs
jmp
sbb
add
(bad)
mov
add
inc
sub
adc
inc
dec
inc
cs
bound
outs
jb
outs
jne
je
jns
and
adc
outs
push
popa
jns
jmp
jb
jo
jb
jns
push
fs
mov
pop
jnp
add
add
pop
add
add
cs
add
inc
and
sbb
adc
inc
cs
imul
outs
jb
adc
add
in
inc
and
sbb
push
je
je
outs
jne
je
jns
outs
fs
std
and
sbb
add
popa
ins
gs
add
or
mov
add
add
xchg
(bad)
call
add
and
sar
xor
(bad)
and
ret
inc
xor
(bad)
and
iret
dec
xor
and
and
and
jno
and
sar
add
gs
inc
xchg
inc
in
inc
sub
adc
inc
dec
inc
cs
imul
outs
jb
sub
adc
in
inc
or
outs
jbe
jb
gs
sbb
pop
add
add
add
cmp
add
and
retf
je
je
inc
inc
dec
cdq
std
and
sar
xor
(bad)
and
ret
inc
xor
inc
or
(bad)
call
(bad)
jmp
iret
dec
xor
and
and
and
(bad)
inc
xor
movs
(bad)
and
adc
add
cmp
push
push
sbb
add
and
sar
add
gs
jmp
sbb
add
aaa
(bad)
mov
add
inc
sub
adc
inc
dec
inc
cs
bound
outs
jb
inc
inc
dec
sub
adc
outs
push
popa
jns
jmp
jb
jo
jb
jns
push
fs
mov
pop
jnp
add
add
pop
add
add
cs
add
inc
and
sbb
adc
inc
cs
imul
outs
jb
adc
add
in
inc
and
sbb
pop
je
je
inc
inc
dec
cdq
std
and
sbb
add
popa
ins
gs
add
or
mov
add
cmp
push
or
mov
add
and
sar
xor
(bad)
and
ret
inc
xor
(bad)
and
iret
dec
xor
and
and
and
jno
and
sar
add
gs
call
sub
into
xchg
iret
or
into
mov
into
scas
into
mov
into
lahf
iret
or
mov
into
mov
and
add
cmp
add
and
retf
je
je
imul
je
popa
ins
gs
std
and
sar
xor
(bad)
and
ret
inc
xor
inc
or
(bad)
call
(bad)
jmp
iret
dec
xor
and
and
and
(bad)
inc
xor
movs
(bad)
and
sbb
add
xor
(bad)
and
adc
add
cmp
push
push
sbb
add
and
sar
add
gs
inc
mov
add
inc
sub
adc
inc
dec
inc
cs
bound
outs
jb
popa
ins
sub
adc
outs
push
popa
jns
jmp
jb
jo
jb
jns
push
fs
mov
pop
jnp
add
add
pop
add
add
cs
add
inc
and
sbb
adc
inc
cs
imul
outs
jb
adc
add
in
inc
and
sbb
adc
inc
imul
je
popa
ins
gs
std
and
sbb
add
popa
ins
gs
add
or
mov
add
cmp
push
or
mov
add
and
sar
xor
ret
inc
xor
(bad)
and
iret
dec
xor
and
and
and
jno
and
sar
add
gs
call
push
adc
xchg
into
mov
into
mov
iret
or
and
add
cmp
add
and
retf
je
je
fs
jae
cdq
std
and
sar
xor
ret
inc
xor
inc
or
(bad)
call
(bad)
jmp
iret
dec
xor
and
and
and
(bad)
inc
xor
movs
(bad)
and
sbb
add
xor
(bad)
and
adc
add
cmp
push
push
sbb
add
and
sar
add
gs
inc
mov
add
inc
sub
sbb
inc
dec
inc
cs
bound
outs
jb
fs
jae
dec
imul
add
push
ja
push
popa
jns
jmp
jb
jo
jb
jns
push
fs
mov
pop
jnp
add
add
pop
add
add
cs
add
inc
and
sbb
adc
inc
cs
imul
outs
jb
adc
add
in
inc
and
sbb
or
inc
fs
jae
cdq
std
and
sbb
add
popa
ins
gs
add
or
mov
add
cmp
push
or
mov
add
and
sar
ss
pop
ret
inc
xor
(bad)
and
iret
dec
xor
and
and
and
jno
and
sar
add
gs
call
adc
into
xchg
iret
or
scas
into
mov
cmp
add
and
retf
je
je
imul
std
and
sar
ss
pop
ret
inc
xor
inc
or
(bad)
call
(bad)
jmp
iret
dec
xor
and
and
and
(bad)
inc
xor
movs
(bad)
and
adc
add
cmp
push
push
sbb
add
and
sar
add
gs
inc
mov
add
inc
sub
push
or
dec
inc
cs
imul
and
adc
outs
push
popa
jns
jmp
jb
jo
jb
jns
push
fs
add
inc
sub
and
retf
bound
jo
outs
inc
imul
inc
ss
pop
ret
inc
xor
inc
or
(bad)
call
(bad)
jmp
iret
dec
xor
and
and
and
(bad)
inc
xor
adc
add
cmp
sar
add
gs
jmp
bnd
add
add
leave
inc
sub
and
retf
bound
outs
outs
jbe
jb
cdq
std
and
sar
aaa
(bad)
pop
ret
inc
xor
inc
or
(bad)
call
(bad)
jmp
sar
add
je
jmp
(bad)
inc
xor
xor
or
xor
xor
xor
and
adc
add
cmp
call
adc
into
pushf
into
mov
test
mov
test
or
scas
add
add
add
add
retf
je
je
outs
outs
jae
ins
gs
std
push
or
(bad)
call
add
and
sar
xor
(bad)
and
ret
inc
xor
(bad)
and
ret
xor
(bad)
and
iret
inc
xor
jno
and
adc
add
push
inc
push
sbb
add
pop
and
sbb
jb
imul
outs
ins
ins
inc
popa
jb
imul
je
and
sbb
je
cmp
add
gs
push
jb
jo
imul
add
jb
jo
jmp
mov
pop
call
add
adc
add
inc
or
popa
addr16
outs
jne
arpl
push
pop
add
ins
outs
outs
cs
addr16
pop
push
and
int3
inc
pop
dec
jo
arpl
jns
or
add
xor
xor
pop
push
and
push
add
push
je
gs
push
pop
push
outs
imul
add
cs
add
pop
inc
sub
and
retf
jo
push
je
je
jae
std
and
sar
xor
(bad)
and
ret
inc
xor
(bad)
and
ret
xor
(bad)
and
iret
dec
xor
and
and
xor
xor
and
or
add
dec
imul
pop
and
add
push
call
push
and
or
add
dec
popa
js
ins
jne
and
and
add
xor
push
jmp
jns
push
dec
imul
add
add
aad
add
add
add
or
add
add
sub
add
(bad)
add
add
adc
add
add
add
add
inc
add
adc
add
add
sbb
push
pop
add
and
adc
add
add
call
or
add
and
add
add
add
or
add
add
sbb
test
add
pop
push
add
xor
adc
add
add
push
and
add
xor
add
add
add
sub
add
xor
add
add
add
cmp
add
adc
add
add
add
add
mov
and
add
add
add
pop
add
xor
add
add
and
test
add
into
imul
add
add
add
add
jbe
add
sub
add
adc
add
and
add
add
add
add
add
add
add
add
add
add
add
add
add
add
inc
add
add
add
inc
inc
add
inc
inc
(bad)
inc
add
(bad)
inc
add
add
xchg
add
add
or
mov
add
mov
xchg
pop
mov
ja
clc
mov
mov
push
xchg
mov
out
jg
xchg
mov
mov
pop
xchg
mov
xchg
(bad)
js
mov
clc
mov
mov
ja
ja
add
pop
add
inc
add
rol
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
cmp
ins
push
aas
add
inc
add
dec
add
add
pop
add
jns
add
jg
add
jo
add
jl
add
jl
add
jb
add
jl
add
jns
cdq
xor
lahf
add
mov
cmps
nop
jg
out
xchg
cld
xchg
pop
add
lea
xchg
imul
fstp
push
ret
mov
jns
lahf
xlat
add
loop
add
jno
add
jns
add
jle
add
jns
add
mov
jae
scas
add
scas
add
mov
ins
test
add
inc
je
sti
add
add
fwait
mov
mov
mov
mov
mov
mov
mov
xchg
add
movs
xchg
add
test
mov
add
mov
add
xchg
test
ror
xchg
add
call
int3
mov
sahf
add
cmps
test
out
xchg
jecxz
mov
in
mov
repz
add
mov
add
mov
add
scas
sahf
add
mov
add
mov
add
mov
cwde
add
mov
mov
add
lahf
mov
ret
add
test
add
cmps
mov
add
scas
stos
add
mov
add
mov
add
mov
add
mov
add
mov
stos
add
mov
add
mov
add
mov
mov
out
mov
mov
loope
mov
add
sar
inc
mov
add
retf
repz
mov
add
sar
add
mov
add
pushf
mov
jmp
add
sar
add
leave
ret
add
retf
fcmove
into
add
ror
add
mov
add
leave
ret
add
enter
enter
aad
add
ror
add
aad
add
rol
add
fcmove
add
(bad)
add
(bad)
add
fcompp
add
(bad)
add
fcmovu
add
(bad)
add
(bad)
add
loop
add
sar
add
loop
add
out
add
out
add
call
out
add
jmp
call
add
out
in
add
out
out
add
out
call
add
div
add
stc
test
cld
cli
cli
add
(bad)
inc
(bad)
(bad)
inc
popa
adc
push
sub
add
add
push
fs
pop
and
xor
jbe
add
add
push
pop
pusha
js
cmp
add
add
add
mov
jns
or
or
inc
or
or
cwde
adc
or
adc
fwait
and
inc
mov
sub
lahf
dec
push
push
ins
dec
jmp
inc
sub
cmp
dec
pop
push
pop
push
inc
xchg
sub
push
sbb
add
mov
push
push
inc
adc
inc
data16
inc
movs
push
jb
pop
push
and
push
push
dec
jno
add
pop
cmps
dec
jb
jb
push
and
sbb
add
dec
push
push
push
dec
dec
and
pop
push
imul
add
jmp
call
add
pop
inc
cmp
sbb
or
push
add
pop
add
inc
add
rol
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
scas
stos
mov
push
jp
shl
add
add
mov
lods
int3
imul
ins
stc
jecxz
ret
jmp
call
add
add
add
leave
mov
les
sahf
test
mov
ins
test
movs
fpatan
sar
add
add
mov
shl
fld
mov
cmps
(bad)
in
out
leave
ret
repz
mov
add
add
int
mov
aam
sar
neg
into
out
retf
mov
mov
jo
jns
mov
mov
push
jmp
out
(bad)
mov
les
aam
mov
iret
test
mov
jg
out
loop
out
loop
out
out
jl
call
(bad)
fdiv
fcmovbe
mov
mov
pushf
(bad)
in
les
js
stos
xchg
test
call
jmp
fcom
(bad)
std
out
call
sar
jae
scas
mov
mov
ror
mov
mov
in
jmp
mov
push
rcr
(bad)
std
cmc
(bad)
scas
icebp
mov
stc
ins
imul
sahf
xchg
jno
add
add
in
jecxz
mov
mov
(bad)
mov
enter
sar
cmps
jbe
je
sti
outs
not
jge
jns
lahf
add
add
add
mov
lock
xchg
inc
mov
mov
push
fcom
mov
jne
mov
add
add
add
mov
hlt
in
xchg
inc
mov
mov
jmp
std
lods
xor
test
cmps
xchg
enter
jo
add
add
add
scas
mov
mov
inc
mov
ret
mov
jmp
cld
xchg
pop
out
xchg
shl
add
add
mov
cld
sti
cli
int3
mov
in
xchg
in
xchg
in
mov
cmps
test
lahf
jl
cwde
jb
xchg
imul
mov
push
aas
add
add
add
enter
cld
cld
cld
cli
cli
stc
div
div
repnz
out
out
lock
out
out
jmp
(bad)
loopne
iret
(bad)
retf
inc
add
add
add
retf
mov
ret
mov
xchg
mov
mov
jnp
xor
push
jae
test
jl
push
jbe
dec
add
add
add
inc
add
inc
add
rol
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
inc
add
add
add
inc
inc
add
inc
inc
(bad)
inc
add
(bad)
inc
add
mov
or
add
mov
jnp
jge
add
add
add
add
or
js
mov
add
add
add
mov
add
add
or
mov
add
add
or
mov
mov
mov
mov
add
mov
mov
mov
dec
or
add
add
mov
or
ja
ja
push
xchg
jg
mov
mov
clc
mov
(bad)
mov
mov
js
dec
(bad)
dec
cmp
out
enter
mov
cmp
ja
in
mov
std
mov
jg
enter
(bad)
enter
mov
call
jle
js
mov
mov
mov
mov
jg
call
out
push
add
(bad)
mov
xchg
add
add
mov
enter
enter
add
add
(bad)
mov
mov
xchg
add
add
js
call
add
add
(bad)
call
in
mov
add
add
(bad)
js
enter
out
add
add
mov
call
test
jle
mov
into
jbe
add
add
(bad)
(bad)
(bad)
dec
clc
mov
mov
xchg
ja
jbe
add
add
(bad)
(bad)
(bad)
(bad)
jmp
jg
inc
pop
(bad)
inc
add
cld
add
(bad)
clc
add
(bad)
clc
add
lock
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sub
add
and
add
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
dec
add
dec
add
push
add
cmp
ret
add
ins
cmp
add
ins
pop
add
ins
inc
add
data16
push
add
outs
inc
add
jo
add
js
add
je
add
jae
add
jns
add
jl
add
jge
add
jg
call
add
nop
jg
stos
test
jo
int3
sbb
in
dec
add
or
icebp
test
xrelease
stc
mov
lea
stc
mov
std
xchg
pop
add
mov
aam
pusha
add
mov
ror
addr16
xchg
imul
mov
retf
add
call
call
imul
shl
jmp
jae
jmp
pop
add
int
add
jp
call
add
ins
mov
add
jg
add
outs
stc
add
imul
(bad)
ja
add
ins
rol
fnstsw
add
xchg
add
sahf
add
cmps
add
add
test
jb
into
add
add
test
out
in
jo
out
add
icebp
add
repz
hlt
add
xchg
test
lods
xchg
mov
scas
cwde
mov
mov
lea
mov
xchg
add
movs
xchg
add
cmps
cdq
add
stos
popf
add
mov
add
mov
add
call
xlat
lahf
pop
rcl
xchg
add
popf
cwde
add
sahf
cwde
add
test
add
lods
add
mov
add
stos
xchg
frstor
lea
(bad)
mov
popf
add
lods
lahf
add
lods
xchg
add
mov
popf
add
mov
add
scas
add
loopne
xchg
add
mov
add
mov
movs
add
mov
add
pushf
stos
add
xchg
add
cmp
rcr
mov
add
scas
mov
add
cmps
mov
add
stos
cmps
add
stos
stos
add
scas
stos
add
mov
add
mov
add
mov
add
mov
add
mov
mov
fnsave
mov
fidivr
test
in
mov
out
mov
add
mov
mov
add
(bad)
mov
add
fnsave
add
sar
fcmovnb
mov
add
shl
loop
mov
add
retf
lock
mov
icebp
int3
mov
add
(bad)
clc
add
repnz
in
add
mov
add
lods
jmp
loope
ret
lods
rol
in
rol
retf
add
mov
add
test
add
xchg
jmp
loope
lock
jecxz
add
mov
add
retf
ret
add
into
leave
add
ror
add
(bad)
(bad)
rol
in
rol
(bad)
leave
les
call
int3
enter
leave
add
int
add
into
enter
into
add
ror
add
rol
add
(bad)
int
jecxz
rol
jmp
fcmovbe
add
(bad)
add
fcompp
add
fcompp
add
aad
add
fcmovbe
add
fstp
add
loope
add
loope
add
loop
add
(bad)
in
add
shl
add
in
add
call
jmp
mul
loop
stc
in
add
call
out
add
in
jmp
lock
add
icebp
out
add
repnz
add
div
add
clc
test
(bad)
inc
(bad)
(bad)
inc
add
add
add
add
(bad)
jnp
stos
push
pop
rcl
xor
pop
pop
push
mov
add
xor
inc
dec
push
pop
push
dec
leave
(bad)
add
sbb
sar
fiadd
add
jne
inc
push
pop
ret
mov
add
xchg
lahf
xchg
nop
dec
inc
jl
push
pop
mov
mov
add
add
pop
push
push
mov
cmps
xchg
lahf
mov
push
into
aam
loopne
loopne
mov
add
add
rcl
jmp
sti
jmp
in
fucomp
(bad)
lahf
xchg
movs
lea
adc
in
loope
cmps
lahf
xchg
xchg
jno
add
add
add
iret
sahf
scas
std
icebp
lahf
in
hlt
hlt
in
(bad)
fist
add
imul
lahf
xchg
xchg
xchg
xchg
jo
pop
addr16
lahf
jmp
jmp
fstp
jno
sbb
femms
or
add
mov
call
inc
inc
movs
xlat
fucom
loopne
jno
stc
icebp
out
rcl
mov
call
fucomi
hlt
cmc
repnz
mov
cmps
fucom
mov
aad
rcl
mov
sahf
pushf
mov
lahf
jecxz
hlt
cli
cli
sti
out
ret
inc
jl
dec
(bad)
fistp
in
icebp
jmp
out
loop
fsubp
in
in
cli
std
std
cli
idiv
and
dec
dec
mov
pop
in
cmp
sub
sub
and
adc
std
std
std
int3
mov
cmp
xchg
pop
out
cmp
sub
daa
sbb
adc
std
out
dec
dec
push
pop
push
dec
inc
aas
inc
jne
add
pop
jmp
cmp
sub
and
ins
cmps
std
dec
dec
mov
sbb
add
xor
cmp
aaa
sub
sub
ins
xchg
retf
enter
push
stos
test
add
icebp
xor
cmp
sub
sub
das
ins
(bad)
mov
lods
add
add
add
(bad)
stc
xor
cmp
sub
and
and
xor
add
add
add
add
arpl
jns
add
sub
sub
and
adc
or
add
add
add
add
add
add
xchg
cmp
sub
sub
and
sbb
adc
rol
data16
jp
xchg
cmp
sub
sub
and
adc
push
rol
push
xchg
cmp
sub
sub
and
sbb
push
rol
push
xchg
cmp
aaa
sub
sub
sbb
pop
rol
xchg
std
test
add
sub
daa
and
adc
add
add
add
xchg
std
test
xchg
cmp
sub
sub
add
add
add
add
jle
jp
jns
xor
xor
cs
sbb
mov
add
add
add
std
sti
sti
stc
stc
icebp
icebp
icebp
jmp
in
(bad)
rcl
mov
or
add
add
add
add
imul
pop
push
push
push
sbb
(bad)
pi2fd
or
add
add
add
add
(bad)
(bad)
(bad)
(bad)
jmp
jg
inc
pop
(bad)
inc
add
cld
add
(bad)
clc
add
(bad)
clc
add
lock
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sub
add
and
add
inc
add
add
add
add
add
add
or
add
loope
mov
popf
cwde
aam
call
in
rol
xchg
cdq
les
in
jno
icebp
cmp
out
jecxz
jmp
add
shl
loope
jbe
jg
jmp
jae
in
repnz
jae
test
aad
xchg
out
enter
add
add
cmps
sahf
shr
mov
pop
and
jb
into
outs
div
jns
not
jmp
fisub
(bad)
movs
mov
mov
mov
jbe
jg
out
mov
div
xchg
mov
mov
shr
retf
leave
mov
retf
pushf
xchg
out
leave
add
jecxz
mov
cmp
mov
mov
jbe
sahf
outs
div
popf
mov
shr
lock
out
retf
mov
shl
fldcw
(bad)
lods
stos
fistp
jbe
leave
movs
popf
xchg
int
jbe
popf
jo
hlt
mov
fcmovnu
(bad)
rol
icebp
rol
icebp
int
icebp
int3
mov
sahf
cwde
jmp
add
ret
mov
ret
mov
mov
xchg
mov
(bad)
lods
xchg
xchg
cmps
shr
call
mov
mov
fimul
rcr
jecxz
fld
aad
xlat
int
rol
repz
repnz
shr
mov
mov
fsub
add
enter
shr
fdiv
repnz
repnz
loop
loopne
int
fcmovnbe
fld
hlt
loopne
out
(bad)
iret
out
ret
fidivr
out
mov
test
lock
aam
loop
hlt
(bad)
int
enter
mov
mov
shr
rcr
add
add
enter
ror
mov
ret
mov
call
clc
loop
stc
out
mul
fdivp
(bad)
out
ror
jmp
sar
add
add
ror
jmp
test
retf
enter
xchg
xchg
add
add
pushf
lds
neg
xlat
cmc
fcmovbe
cmc
(bad)
neg
fdiv
fcmovnbe
hlt
(bad)
mul
loop
outs
push
add
rcl
call
mov
mov
fnsave
fdiv
popf
xchg
xor
outs
xchg
jl
nop
js
lea
mov
xchg
test
sub
scas
movs
(bad)
stos
movs
loop
mov
mov
jmp
enter
cli
jmp
mov
outs
stos
test
aam
mov
(bad)
mov
into
ret
repnz
in
(bad)
mov
mov
lock
out
out
call
rcr
ror
fcmove
rcl
mov
mov
lds
(bad)
fbstp
in
retf
retf
(bad)
stc
jecxz
cli
in
jmp
lods
jmp
imul
jns
cmps
rcr
(bad)
mov
mov
hlt
rol
out
retf
mov
mov
fsub
fcmovnbe
(bad)
rcr
ror
fmul
leave
aad
ret
rol
mov
mov
rol
mov
mov
out
iret
into
neg
(bad)
call
sti
icebp
out
div
in
ret
popf
mov
jbe
popf
xchg
int
leave
movs
popf
(bad)
jbe
(bad)
imul
xchg
ret
(bad)
loopne
test
int3
enter
in
(bad)
jmp
fucomip
jecxz
jmp
fsubrp
loope
call
(bad)
in
shl
aad
loope
iret
in
shr
(bad)
fistp
push
cmc
std
div
std
clc
cmc
std
div
repz
mov
icebp
outs
div
jbe
sahf
and
mov
jo
stos
test
ins
mov
ins
int
lea
xchg
and
fcom
lea
push
cwde
arpl
xchg
pop
cld
(bad)
pop
test
or
inc
into
jo
(bad)
pushf
xchg
mov
std
sti
std
cli
clc
sti
div
loope
lock
repnz
mov
outs
div
je
mov
jmp
sar
xchg
mov
stos
xchg
xchg
loopne
fcom
call
call
mov
xchg
or
dec
(bad)
jbe
aad
pusha
xlat
lahf
(bad)
repz
(bad)
sti
cli
(bad)
(bad)
(bad)
repnz
mov
clc
jns
imul
repz
into
jne
xchg
and
mov
sbb
mov
add
lods
xchg
mov
jecxz
fcom
jmp
call
cli
nop
pop
cmc
mov
xchg
or
dec
aad
inc
aad
popa
aam
xchg
mov
fnstsw
mov
stc
or
repnz
jae
in
jmp
jbe
jg
loopne
shl
add
add
add
add
loop
call
jbe
mov
call
cli
nop
pop
hlt
mov
test
or
dec
aad
inc
aam
popa
rcl
jecxz
jmp
sub
stos
test
mov
mov
enter
cdq
mov
mov
jmp
push
jmp
call
(bad)
xchg
pop
stc
(bad)
pop
repz
test
or
dec
aam
inc
aam
popa
ror
rcr
popf
int
call
into
mov
add
jmp
mov
jmp
jmp
call
xchg
pop
stc
(bad)
pop
repz
test
jg
fdivr
aam
inc
retf
outs
inc
int3
sbb
jae
xchg
jle
(bad)
mov
sahf
mov
xchg
repz
in
fsub
mov
jmp
jmp
call
(bad)
xchg
pop
stc
(bad)
pop
repz
test
or
dec
shl
retf
ret
mov
xor
ror
jno
inc
mov
out
frstor
push
jmp
jmp
call
xchg
pop
stc
mov
mov
test
jg
fstp
shl
outs
inc
ret
mov
leave
je
inc
mov
repnz
(bad)
mov
push
jmp
jmp
call
clc
mov
mov
test
jle
fstp
shl
outs
inc
shl
into
(bad)
jbe
dec
mov
hlt
fild
mov
push
jmp
jmp
fwait
call
xchg
pop
clc
mov
mov
adc
dec
fidivr
shl
push
jns
dec
mov
neg
lods
xchg
inc
mov
mov
push
jmp
jmp
call
cld
xchg
pop
clc
mov
mov
test
jg
fidivr
shr
fmul
sar
ret
sti
cli
stc
loope
xchg
inc
movs
inc
mov
mov
push
lods
jg
test
jmp
pushf
call
test
jle
fnstenv
(bad)
(bad)
mov
add
add
scas
mov
mov
dec
movs
inc
movs
inc
mov
mov
(bad)
mov
push
jmp
call
call
mov
push
jmp
mov
add
add
mov
(bad)
std
std
int3
mov
loopne
xchg
fild
fisubr
(bad)
ficomp
fcom
mov
mov
test
adc
push
(bad)
js
mov
mov
add
add
mov
(bad)
(bad)
(bad)
(bad)
std
std
std
cld
cld
sti
cli
stc
stc
clc
idiv
cmc
hlt
div
icebp
cmc
lock
repnz
jmp
jmp
out
out
in
in
jmp
fcmovnbe
jecxz
shl
aad
(bad)
retf
(bad)
fxch
ret
xlat
(bad)
mov
ins
pop
enter
mov
lds
shr
cmps
cdq
mov
xchg
mov
xchg
mov
lea
xchg
jg
mov
mov
test
jo
jge
xchg
jp
mov
mov
mov
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
jg
inc
pop
(bad)
inc
add
cld
add
(bad)
clc
add
(bad)
clc
add
lock
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sub
add
xor
add
pusha
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
inc
add
add
add
inc
inc
add
inc
inc
(bad)
inc
add
(bad)
inc
xchg
or
add
add
add
dec
pop
mov
clc
add
add
(bad)
(bad)
dec
add
or
mov
clc
add
add
add
(bad)
(bad)
(bad)
dec
add
mov
(bad)
dec
mov
xchg
(bad)
add
add
add
add
js
mov
mov
clc
clc
mov
add
add
mov
xchg
mov
jo
ja
add
add
mov
js
mov
js
pop
xchg
ja
add
js
mov
mov
mov
pop
xchg
ja
jo
or
xchg
mov
ja
xchg
jo
js
mov
jle
mov
clc
xchg
js
or
ja
add
js
mov
vpmacssdql
ja
mov
pop
ja
mov
mov
ja
add
idiv
xchg
js
ja
mov
(bad)
(bad)
clc
mov
js
ja
ja
js
mov
(bad)
(bad)
(bad)
dec
test
dec
mov
(bad)
clc
xchg
add
mov
xchg
inc
inc
dec
push
(bad)
(bad)
clc
add
or
je
inc
inc
dec
inc
inc
(bad)
mov
mov
add
or
je
inc
inc
inc
dec
ins
ins
js
(bad)
dec
add
xchg
gs
fs
inc
les
enter
mov
add
add
mov
pop
gs
inc
(bad)
dec
enter
(bad)
mov
pop
xchg
gs
inc
(bad)
dec
inc
ja
mov
mov
add
mov
mov
mov
xchg
add
add
xchg
gs
les
mov
xchg
add
daa
mov
mov
mov
mov
add
add
ja
mov
dec
ins
ins
int3
mov
mov
add
add
dec
mov
les
push
mov
add
dec
mov
fs
int3
ins
enter
mov
add
add
mov
(bad)
int3
js
mov
clc
clc
mov
add
add
add
(bad)
dec
dec
int3
call
(bad)
add
add
add
add
dec
int3
(bad)
(bad)
(bad)
(bad)
clc
dec
add
add
add
add
test
ins
(bad)
clc
clc
clc
(bad)
jo
mov
mov
clc
add
add
add
add
add
test
mov
mov
mov
add
add
add
mov
addr16
mov
mov
clc
(bad)
mov
add
mov
add
mov
add
add
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
inc
inc
add
(bad)
(bad)
clc
add
add
(bad)
push
add
add
(bad)
(bad)
jmp
add
add
(bad)
(bad)
inc
add
add
(bad)
(bad)
inc
(bad)
(bad)
inc
add
add
(bad)
(bad)
inc
add
add
(bad)
inc
add
add
add
inc
add
inc
add
add
add
jg
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
add
add
sldt
add
add
pop
add
add
add
aas
add
add
add
jg
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
add
add
jg
add
add
add
jg
add
add
add
add
lock
add
add
lock
add
add
lock
add
add
push
add
aas
inc
add
lock
(bad)
inc
add
clc
add
(bad)
inc
add
clc
aas
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
inc
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
add
add
inc
cmp
add
jno
add
inc
add
inc
add
dec
add
push
add
add
imul
outs
jo
jae
je
jl
jl
xchg
add
xchg
or
add
adc
add
sbb
add
add
cmps
adc
add
and
add
daa
sbb
mov
sbb
xchg
sub
add
cmp
add
xor
add
or
add
sbb
add
sbb
add
sbb
add
adc
add
and
add
and
add
das
adc
add
sub
add
ss
repnz
add
cmp
add
dec
cmp
fimul
add
inc
and
add
push
dec
add
dec
inc
add
push
push
add
gs
add
pusha
add
push
add
push
inc
add
ins
pop
add
gs
add
addr16
add
push
pop
add
ja
add
jp
add
push
add
jle
push
in
add
mov
push
add
sub
test
add
jg
add
push
test
add
in
pushf
add
mov
add
mov
mov
pop
mov
xchg
add
cwde
xchg
add
xchg
pushf
add
call
mov
sahf
sahf
add
call
pushf
mov
lahf
add
test
xchg
add
popf
mov
add
pushf
scas
add
mov
add
movs
movs
add
cmps
test
add
stos
stos
add
mov
cmps
add
mov
add
mov
add
lods
mov
mov
mov
mov
mov
add
mov
mov
add
mov
add
mov
mov
add
pop
jmp
cdq
xchg
(bad)
mov
fwait
add
cmps
xchg
add
stos
mov
add
mov
add
mov
add
mov
add
mov
add
mov
mov
add
lods
mov
add
mov
cmps
add
mov
cdq
add
shl
mov
mov
add
sar
jecxz
mov
inc
mov
call
mov
add
mov
int
lds
rol
int3
mov
rol
jmp
add
ret
ret
add
ret
ret
add
leave
les
enter
(bad)
add
retf
retf
add
(bad)
fld
rol
enter
int
add
int
add
ror
add
ror
add
ret
aam
ror
add
ret
int
rol
aam
rol
(bad)
rol
(bad)
(bad)
add
xlat
fadd
(bad)
(bad)
add
fcmovnu
add
int3
ret
add
into
ret
add
aad
add
xlat
leave
add
aad
add
fstp
add
fcmovu
add
fst
add
loopne
add
jecxz
add
aam
add
fsub
add
aad
add
xlat
icebp
add
aam
add
sar
add
sar
add
out
add
call
inc
fdivr
inc
jecxz
loop
call
jmp
call
add
jmp
out
add
hlt
out
add
out
icebp
add
lock
add
repz
div
add
clc
cli
add
(bad)
inc
(bad)
(bad)
inc
xchg
jge
arpl
add
les
enter
fstp
add
xchg
cdq
retf
cmc
sti
(bad)
(bad)
sti
les
ins
ins
nop
mov
(bad)
cmc
(bad)
(bad)
(bad)
(bad)
(bad)
fild
add
add
ins
(bad)
enter
cmc
(bad)
(bad)
(bad)
(bad)
(bad)
push
add
add
add
retf
fcomi
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
sti
enter
add
xchg
xchg
sub
rol
in
(bad)
(bad)
(bad)
(bad)
push
in
xchg
cdq
add
nop
jno
ins
ret
icebp
idiv
(bad)
std
repz
in
ret
jl
add
add
xchg
mov
jg
xchg
(bad)
rcl
xlat
div
out
out
lock
xchg
add
add
retf
fcmovb
jno
jge
mov
enter
ror
jmp
xchg
add
fst
gs
into
fld
xchg
(bad)
retf
aam
mov
bound
add
add
or
add
add
add
add
sbb
xchg
jg
jg
jge
jge
fcom
sar
pop
pop
popa
pop
pop
arpl
add
or
pop
add
add
add
add
mov
retf
mov
mov
int
xchg
mov
adc
mov
pusha
popa
arpl
add
ins
xchg
pop
pop
ins
ins
pop
pop
pop
ins
cdq
pop
add
add
jno
les
mov
mov
dec
dec
mov
rcl
mov
arpl
jge
add
arpl
ins
and
add
xchg
mov
xchg
mov
pop
dec
dec
dec
dec
jb
(bad)
fcomp
enter
jns
jns
addr16
add
xchg
loopne
pop
pop
pop
arpl
les
pop
xchg
arpl
add
arpl
jge
pop
push
dec
outs
jge
cdq
cdq
(bad)
enter
enter
data16
js
add
mov
fs
pop
pop
pop
pop
arpl
arpl
add
popa
pop
pop
pop
xchg
pop
push
jl
mov
repz
std
test
pop
jbe
add
(bad)
pop
pop
arpl
arpl
popa
jl
pop
pop
push
or
push
bound
xchg
nop
jno
lea
(bad)
(bad)
(bad)
(bad)
std
in
cdq
nop
ins
ins
les
add
int
addr16
fs
pop
or
pop
pop
pop
pop
jbe
xchg
mov
xchg
ftst
sti
(bad)
(bad)
(bad)
(bad)
push
fxch
cdq
cmp
add
(bad)
ins
ins
jge
pop
bound
nop
cdq
les
sbb
adc
xchg
cdq
mov
(bad)
icebp
sti
(bad)
(bad)
(bad)
(bad)
(bad)
push
fnstenv
add
(bad)
loop
ins
ins
jge
jge
xchg
fstp
sbb
push
push
or
or
(bad)
retf
cmc
std
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
std
fst
add
mov
add
push
or
or
or
or
sbb
xchg
fyl2x
cli
std
(bad)
(bad)
(bad)
(bad)
push
rcl
add
add
xchg
xchg
sbb
aas
or
adc
or
or
or
inc
inc
pushf
xchg
(bad)
fpatan
(bad)
std
mul
enter
add
add
add
add
xchg
cdq
nop
push
push
push
adc
push
or
or
sub
inc
inc
inc
fwait
lahf
xchg
mov
add
add
test
ins
xchg
cdq
cdq
cdq
cdq
and
pop
sbb
sbb
adc
adc
inc
inc
inc
inc
dec
dec
inc
movs
fild
add
add
add
jge
ins
cdq
xchg
cdq
mov
xchg
(bad)
ror
sbb
sbb
or
adc
push
push
push
push
push
push
push
dec
mov
jno
ins
les
retfw
pop
cs
or
adc
popf
popf
push
sahf
sahf
sahf
mov
jge
ins
jae
les
popa
aad
xor
cmp
pop
or
adc
sahf
mov
mov
ins
add
add
ret
xchg
data16
aas
aaa
cmp
(bad)
unpcklps
mov
lods
scas
scas
scas
mov
add
add
cdq
(bad)
(bad)
cdq
jl
fld
adc
adc
inc
scas
scas
scas
scas
scas
scas
scas
scas
mov
ins
add
ins
les
ins
ret
aaa
inc
pop
or
es
mov
fstp
mov
jge
add
cdq
(bad)
mov
cmp
unpcklps
sub
mov
fstp
mov
(bad)
jge
add
stc
stc
icebp
fcmovbe
aad
adc
adc
sub
mov
jecxz
jecxz
jecxz
mov
in
cdq
(bad)
sti
cli
cmc
hlt
aad
hlt
fnstenv
and
sub
inc
jecxz
jecxz
jecxz
jecxz
in
idiv
std
std
repz
xlat
cmp
and
sub
push
div
in
div
idiv
idiv
clc
mov
add
add
shr
adc
adc
sub
div
mul
jecxz
fbstp
add
add
retf
adc
and
and
and
scas
in
fstp
scas
mov
lods
mov
rol
xlat
enter
adc
and
and
xor
int3
iret
rcl
(bad)
mov
xchg
mov
add
(bad)
xlat
sbb
lahf
cmps
vpsubusw
les
rol
add
mov
loope
retf
xchg
cdq
xchg
xchg
enter
add
int
into
cdq
xchg
adc
mov
adc
add
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
inc
inc
add
(bad)
(bad)
clc
add
add
(bad)
push
add
add
(bad)
(bad)
jmp
add
add
(bad)
(bad)
inc
add
add
(bad)
(bad)
inc
(bad)
(bad)
inc
add
add
(bad)
(bad)
inc
add
add
(bad)
inc
add
add
add
inc
add
inc
add
add
add
jg
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
add
add
sldt
add
add
pop
add
add
add
aas
add
add
add
jg
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
add
add
jg
add
add
add
jg
add
add
add
add
lock
add
add
lock
add
add
lock
add
add
push
add
aas
inc
add
lock
(bad)
inc
add
clc
add
(bad)
inc
add
clc
aas
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
inc
add
add
add
add
add
add
add
sbb
add
add
add
add
mov
mov
mov
xchg
xchg
xchg
lahf
sahf
popf
mov
mov
ret
lahf
lahf
lahf
test
mov
fcomp
loope
loope
jecxz
fcomp
fdivr
mov
cmps
cmps
cmps
mov
mov
mov
aad
aad
loopne
jmp
jmp
cmc
cmc
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
out
out
out
mov
test
add
pushf
scas
mov
ret
mov
ret
rcl
rcr
(bad)
jmp
jmp
clc
clc
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
fstp
fsubr
add
add
xchg
cdq
cdq
cdq
mov
ror
enter
into
into
into
(bad)
fsubrp
in
in
sti
sti
sti
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
jecxz
test
add
mov
xchg
xchg
xchg
xchg
xchg
stos
stos
stos
retf
retf
retf
ret
ret
ret
mov
in
in
in
cld
cld
cld
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
repnz
cmps
cmps
movs
add
mov
mov
mov
mov
stos
stos
fwait
fwait
pushf
xchg
xchg
xchg
xchg
xchg
xchg
mov
int
(bad)
(bad)
repz
repz
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
cld
cld
cld
lock
loopne
(bad)
aad
lods
mov
add
add
les
mov
mov
mov
call
rcl
fcmovnu
fsub
jecxz
repz
cld
cld
(bad)
(bad)
(bad)
sti
cld
stc
call
fcmovnbe
fsub
iret
out
mov
mov
mov
mov
mov
mov
into
rcl
rol
rol
mov
ret
int3
mov
enter
mov
xchg
xchg
xchg
mov
aad
aad
(bad)
rcl
fcom
rcr
(bad)
icebp
lock
jmp
jecxz
xlat
icebp
fucomip
std
fdivr
dec
cld
jmp
add
mov
stos
mov
(bad)
(bad)
(bad)
(bad)
fadd
rol
mov
movs
mov
(bad)
mov
rol
fld
mov
fcom
rcl
iret
retf
retf
enter
retf
ror
into
ror
retf
ror
retf
in
lock
sar
out
cli
aam
out
ror
mov
retf
fwait
movs
cmps
mov
mov
add
mov
mov
mov
(bad)
leave
leave
leave
retf
iret
iret
iret
xlat
xlat
xlat
mov
cdq
xchg
xchg
xchg
xchg
xchg
nop
xchg
xchg
nop
xchg
xchg
xchg
movs
pushf
test
stos
mov
fstp
(bad)
mov
ror
retf
aad
ror
int3
retf
rol
fadd
mov
mov
mov
xchg
xchg
(bad)
lea
lahf
sahf
add
jne
jne
test
add
add
add
add
add
mov
rol
(bad)
int
xlat
xlat
xlat
mov
mov
cmps
cmps
test
test
cmps
cmps
cmps
movs
cmps
movs
mov
movs
cmps
cmps
aad
rcr
(bad)
mov
mov
rcl
rcl
rol
(bad)
(bad)
xlat
aam
(bad)
ror
stos
stos
test
mov
(bad)
mov
nop
xchg
xchg
xchg
add
add
add
test
xchg
jb
jb
addr16
dec
dec
push
push
xchg
xchg
lea
stos
lods
lods
mov
mov
rol
enter
shl
mov
mov
mov
cmps
mov
(bad)
fstp
fdivr
mov
scas
scas
rcl
into
xlat
aam
scas
lods
lods
(bad)
mov
xchg
lea
xchg
nop
xchg
xchg
xchg
xchg
xchg
add
add
add
mov
mov
mov
cdq
cdq
mov
test
mov
mov
xchg
add
add
rol
ret
mov
rol
lds
mov
enter
cdq
mov
push
mov
mov
ror
mov
mov
mov
mov
rcl
int
leave
lds
mov
xchg
popf
xchg
xchg
xchg
(bad)
xchg
mov
mov
add
lods
test
xlat
retf
xchg
xchg
jle
jle
mov
stos
stos
mov
(bad)
jnp
jnp
mov
stos
stos
xchg
xchg
xchg
add
jge
mov
(bad)
(bad)
(bad)
rol
mov
mov
mov
xchg
mov
in
pushf
cmp
adc
jp
push
fwait
lods
pop
cmps
mov
sar
fcmovnu
(bad)
fcomp
fcom
int
enter
call
pushf
scas
mov
mov
fwait
test
xchg
cdq
mov
mov
add
add
add
(bad)
lahf
pushf
pushf
add
xchg
xchg
mov
mov
mov
jge
jge
test
nop
add
cwde
pushf
pushf
pushf
xchg
xchg
xchg
mov
mov
call
jle
lods
mov
mov
mov
(bad)
retf
into
retf
aam
rcl
aad
retf
scas
mov
call
xchg
xchg
mov
mov
pushf
test
add
add
add
mov
popf
cdq
cdq
xchg
lea
mov
test
les
fwait
jb
jae
xchg
xchg
add
mov
mov
mov
fsub
mov
mov
mov
mov
aad
(bad)
loope
loopne
in
call
idiv
std
std
in
jmp
retf
retf
int3
mov
movs
xchg
cwde
xchg
(bad)
xchg
mov
lahf
add
(bad)
(bad)
icebp
loopne
popf
cdq
cdq
mov
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
(bad)
(bad)
(bad)
nop
xchg
xchg
mov
stos
lods
stos
mov
jg
xor
cmp
mov
lods
scas
mov
mov
fwait
mov
mov
mov
ret
int
int
(bad)
lock
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
cli
cli
cli
(bad)
(bad)
enter
mov
sahf
sahf
cwde
cdq
cwde
ret
add
mov
in
fwait
cwde
cwde
nop
xchg
xchg
xchg
xchg
xchg
xchg
cwde
cwde
cdq
cdq
cdq
xchg
xchg
xchg
lea
jne
ja
jbe
jg
or
pushf
sahf
mov
mov
sar
mov
mov
stos
scas
pushf
fwait
mov
scas
mov
mov
mov
mov
ror
retf
aam
loope
icebp
icebp
icebp
std
std
std
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
push
icebp
icebp
fcomp
fmul
enter
mov
lods
stos
rol
(bad)
icebp
loop
call
fwait
fwait
popf
sahf
sahf
mov
pushf
mov
cwde
xchg
fwait
xchg
fwait
popf
mov
mov
mov
sar
movs
cmps
stos
mov
xor
fwait
daa
and
push
mov
mov
enter
rcr
fcmovnu
out
out
hlt
hlt
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
sti
sti
sti
out
out
rcl
rol
stos
stos
stos
add
add
rol
fcmovu
fwait
xchg
xchg
sahf
sahf
sahf
mov
cmps
cmps
test
mov
mov
aam
mov
scas
lods
lods
test
fwait
movs
add
cmp
and
mov
mov
xchg
or
xchg
or
xchg
or
popf
or
mov
ror
into
(bad)
(bad)
(bad)
loopne
loopne
jmp
div
idiv
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
push
div
aam
aam
mov
add
lds
cwde
cwde
movs
cmps
cmps
test
stos
lods
lods
lods
mov
test
fisub
adc
or
add
add
add
add
add
push
ret
ret
(bad)
out
out
out
out
stc
stc
stc
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
push
repz
sar
add
add
int3
pushf
cwde
cwde
lods
lods
lods
lods
lods
lods
scas
scas
scas
mov
mov
stos
stos
mov
(bad)
test
jns
add
mov
or
push
push
mov
or
add
add
add
add
sbb
push
inc
(bad)
ins
pop
rcl
ret
ret
(bad)
(bad)
(bad)
jmp
jmp
cld
cld
cld
cld
cld
repnz
(bad)
retf
mov
int3
int3
retf
mov
lods
rol
lds
mov
mov
mov
mov
mov
xchg
cwde
cwde
mov
fdivr
adc
and
mov
adc
push
or
add
add
add
sub
gs
xlat
push
fldenv
aam
imul
test
mov
mov
mov
mov
mov
mov
mov
add
add
mov
mov
mov
mov
cmps
cmps
mov
retf
xchg
sub
xchg
sub
sub
xchg
sub
xchg
sbb
xchg
push
add
add
add
push
int
cmp
ja
fidiv
loopne
arpl
ja
out
addr16
push
jge
jmp
pop
(bad)
scas
scas
scas
mov
add
mov
mov
mov
mov
mov
mov
ror
retf
sub
xor
ss
popf
xor
xchg
push
or
add
add
les
fldenv
in
js
test
xchg
jne
mov
mov
mov
(bad)
jnp
sub
fistp
mov
add
movs
lahf
mov
lahf
mov
mov
mov
ret
mov
xchg
retf
(bad)
rcl
cmp
mov
add
add
mov
add
das
adc
xchg
mov
xchg
sub
xor
test
cwde
xchg
cdq
xchg
sahf
(bad)
cli
mov
stos
lahf
(bad)
faddp
rol
cmps
cmps
add
add
mov
sar
rol
(bad)
(bad)
mov
iret
aam
(bad)
ficomp
stos
push
dec
lods
push
dec
popf
and
mov
add
add
add
cmp
jmp
mov
cmc
mov
stc
movs
xchg
sti
cmps
xchg
std
lods
popf
call
(bad)
(bad)
(bad)
enter
add
add
push
ds
lahf
cwde
pushf
ret
ret
ret
mov
mov
(bad)
les
xchg
int
rcr
xlat
xlat
lods
jnp
test
inc
mov
pop
lods
dec
inc
cwde
push
or
stos
adc
mov
add
sbb
fimul
icebp
stos
lahf
repnz
cmc
lods
lahf
imul
cli
mov
std
mov
push
stos
xchg
out
mov
loopne
(bad)
into
into
cdq
cdq
call
add
cmp
cmp
lds
rol
ret
(bad)
mov
mov
retf
rcl
mov
dec
mov
xor
add
add
add
sbb
out
dec
clc
mov
cld
mov
std
mov
inc
mov
shl
cmps
lock
aad
shl
add
inc
dec
inc
inc
popf
popf
popf
(bad)
(bad)
les
rol
(bad)
(bad)
enter
mov
ret
rcl
retf
scas
push
dec
mov
sbb
add
add
sbb
fbld
add
sub
test
(bad)
mov
retf
int3
mov
into
mov
int
out
mov
(bad)
(bad)
movs
movs
movs
add
add
dec
dec
dec
dec
mov
mov
aad
rol
mov
ret
(bad)
mov
call
aam
retf
mov
push
mov
inc
lahf
adc
cmps
adc
mov
add
add
and
fisub
out
add
cmp
cld
test
(bad)
fmul
dec
ret
ret
call
(bad)
call
(bad)
call
(bad)
call
(bad)
call
(bad)
(bad)
fcmove
(bad)
fcmovne
repz
(bad)
(bad)
rcl
shl
repnz
in
out
icebp
jecxz
out
fcomp
rcl
ror
into
into
(bad)
enter
stos
mov
mov
fcmovnu
fcmovnbe
(bad)
stos
push
dec
cmps
sub
mov
add
add
push
add
and
loope
add
and
inc
mov
(bad)
retf
(bad)
fmul
(bad)
fmul
(bad)
fcmove
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
sar
in
cld
ret
aam
loopne
fisub
mov
stc
cli
cli
repz
imul
lock
jmp
rcl
mov
call
dec
inc
sahf
adc
adc
ret
int
add
and
in
add
daa
add
push
jmp
fdivr
fst
(bad)
fst
(bad)
(bad)
jmp
aam
loop
jmp
fcos
in
jmp
fdivr
in
in
int
in
(bad)
int
loope
mov
mov
lods
scas
cli
sti
sti
idiv
cli
jmp
jecxz
rcl
mov
imul
mov
add
push
add
and
call
pop
std
mov
call
jmp
fdivr
in
jmp
loopne
jmp
out
out
out
out
out
hlt
out
call
ret
out
aad
loop
loope
mov
add
fstp
ror
iret
mov
add
add
shl
add
and
repz
adc
mov
push
repz
in
out
in
out
in
out
in
jecxz
jmp
(bad)
jmp
(bad)
(bad)
std
fmul
sti
fmulp
cli
mov
loope
loopne
mov
cwde
cdq
cdq
add
xlat
xlat
retf
retf
retf
retf
mov
sahf
or
stos
adc
mov
add
sbb
int3
sbb
xlat
sbb
jecxz
add
adc
cld
ss
mov
loop
(bad)
aad
std
rol
cli
leave
mov
ret
scas
cmc
mov
out
lods
jecxz
mov
leave
shl
(bad)
in
into
(bad)
rcl
ror
scas
lods
stos
test
cmps
add
(bad)
aad
mov
leave
leave
mov
add
les
add
adc
fstp
pop
loope
pmulhuw
loope
test
stos
mov
mov
fld
rcr
retf
(bad)
rcl
into
int3
retf
ret
ret
mov
ret
ret
rcl
int3
iret
iret
int3
loopne
aad
vpand
rcr
and
mov
bound
cdq
int
lods
iret
rol
iret
int
rcl
ror
int
(bad)
mov
mov
mov
mov
rcl
add
loope
fld
ret
(bad)
xlat
into
iret
fcom
rcr
xlat
(bad)
(bad)
fcmovnbe
(bad)
xlat
iret
ror
(bad)
mov
mov
mov
mov
ror
retf
ror
(bad)
fstp
fnop
iret
into
mov
mov
lods
test
mov
rol
int3
int3
leave
add
mov
test
test
mov
mov
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
inc
inc
add
(bad)
(bad)
clc
add
add
(bad)
push
add
add
(bad)
(bad)
jmp
add
add
(bad)
(bad)
inc
add
add
(bad)
(bad)
inc
(bad)
(bad)
inc
add
add
(bad)
(bad)
inc
add
add
(bad)
inc
add
add
add
inc
add
inc
add
add
add
jg
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
add
add
sldt
add
add
pop
add
add
add
aas
add
add
add
jg
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
add
add
jg
add
add
add
jg
add
add
add
add
lock
add
add
lock
add
add
lock
add
add
push
add
aas
inc
add
lock
(bad)
inc
add
clc
add
(bad)
inc
add
clc
aas
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
inc
add
add
add
add
add
add
add
add
add
add
add
add
mov
outs
push
cli
mov
jns
cld
mov
outs
push
add
test
imul
jmp
jecxz
imul
jmp
mov
pop
leave
mov
stos
inc
mov
(bad)
fld
mov
call
mov
dec
test
call
movs
fcos
repz
(bad)
mov
add
add
mov
ret
call
cmps
mov
(bad)
fld
jmp
mov
cmps
(bad)
in
(bad)
out
leave
ret
push
sar
call
cwde
xchg
mov
add
add
aad
jmp
mov
mov
aam
sar
jo
(bad)
fcmove
into
push
fcmove
(bad)
out
retf
jecxz
mov
mov
mov
cwde
xor
mov
(bad)
mov
jo
(bad)
sti
jmp
fdivr
out
(bad)
(bad)
mov
retf
mov
(bad)
(bad)
fnstenv
cmps
(bad)
mov
nop
jg
in
out
jmp
jecxz
jmp
loop
jmp
out
inc
jl
(bad)
call
enter
fcmovu
push
fcmovbe
(bad)
mov
mov
(bad)
(bad)
in
les
(bad)
mov
xchg
test
out
call
jl
jmp
xchg
(bad)
fcom
push
(bad)
(bad)
std
out
call
call
out
scas
(bad)
mov
jle
(bad)
jmp
xchg
mov
mov
repnz
jmp
(bad)
push
(bad)
(bad)
out
mov
cdq
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
std
cmc
call
scas
icebp
dec
imul
dec
sahf
xchg
(bad)
jno
dec
mov
push
out
in
jmp
lods
mov
(bad)
mov
mov
(bad)
mov
sahf
dec
mov
jmp
retf
sti
jmp
sar
jge
jns
mov
fs
cmps
(bad)
jns
add
add
repz
mov
(bad)
inc
mov
(bad)
push
(bad)
(bad)
out
mov
(bad)
fcom
js
mov
jl
(bad)
mov
mov
add
add
add
mov
cmc
hlt
jmp
mov
(bad)
inc
mov
(bad)
(bad)
mov
mov
jmp
cmp
lods
cmp
test
xchg
(bad)
mov
inc
add
add
add
add
scas
mov
jmp
mov
(bad)
inc
mov
(bad)
inc
mov
(bad)
push
jns
call
pop
(bad)
out
xchg
fld
mov
push
cmp
lds
cli
dec
mov
xchg
jmp
mov
jmp
mov
jmp
lods
mov
loopne
test
ficomp
jb
fcom
fs
fdivr
aas
inc
add
add
add
add
mov
(bad)
std
cld
cld
(bad)
cld
cli
cli
(bad)
stc
div
push
repz
out
out
push
jmp
(bad)
out
out
(bad)
jmp
jmp
(bad)
jmp
aad
(bad)
(bad)
retf
push
inc
inc
add
add
add
add
mov
cmps
inc
scas
mov
push
pushf
mov
test
mov
call
dec
imul
arpl
jbe
dec
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
and
add
add
adc
add
mov
imul
add
cmc
add
clc
add
add
add
test
lods
retf
rcr
xchg
clc
rcr
xchg
icebp
aad
xchg
out
aad
xchg
jge
xchg
nop
push
fldcw
mov
call
(bad)
mov
push
icebp
inc
stos
idiv
retf
jmp
xchg
jmp
(bad)
test
jg
add
add
test
shl
call
jmp
lahf
push
in
outs
repnz
push
idiv
or
(bad)
fiadd
call
cmps
mov
add
stos
mov
call
stos
xchg
mov
rcr
and
xchg
push
into
jmp
repz
jns
idiv
xchg
jl
inc
mov
(bad)
out
retf
leave
(bad)
out
leave
mov
fisub
mov
add
test
push
(bad)
movs
mov
call
mov
inc
mov
pop
push
jg
je
mov
outs
div
call
xchg
call
(bad)
out
retf
out
leave
mov
out
retf
(bad)
pushf
xchg
(bad)
aad
sahf
lea
add
add
test
push
(bad)
cmps
mov
call
cmp
aam
mov
push
jecxz
push
sahf
jmp
hlt
call
lods
sar
out
iret
enter
mov
push
retf
mov
call
lahf
call
add
add
(bad)
call
xlat
test
cmps
(bad)
fidiv
(bad)
fistp
call
jbe
dec
movs
popf
call
popf
push
hlt
push
(bad)
lock
push
rol
push
int
push
int3
mov
(bad)
fcomp
movs
mov
add
add
mov
inc
mov
(bad)
mov
movs
xchg
push
xchg
xchg
movs
(bad)
jg
mov
lods
movs
jmp
sar
loopne
mov
(bad)
fnsave
mov
aad
sar
rcr
call
(bad)
aad
icebp
xlat
int
repnz
push
rol
push
into
sar
(bad)
mov
(bad)
fnsave
cwde
jmp
add
xlat
enter
enter
loope
push
repnz
repnz
in
loop
jmp
aam
jmp
fcmovnbe
(bad)
fld
retf
push
loopne
(bad)
out
(bad)
iret
jmp
enter
mov
lods
jmp
mov
call
jg
jmp
jns
push
xlat
aam
mul
fdivr
hlt
(bad)
int
in
enter
mov
scas
call
stos
cmps
dec
mov
xchg
cld
xlat
enter
mov
dec
ret
mov
(bad)
out
call
scas
(bad)
clc
loop
(bad)
stc
out
push
in
push
(bad)
(bad)
out
ror
(bad)
jmp
rcl
(bad)
mov
add
add
add
add
mov
(bad)
jmp
call
test
mov
dec
mov
xchg
inc
add
add
cmps
pushf
inc
mov
lods
push
fcmovnbe
push
fcmovbe
push
(bad)
push
(bad)
push
fcmovnbe
push
(bad)
push
in
(bad)
mov
add
add
xchg
mov
lock
(bad)
call
mov
(bad)
fnsave
mov
fdiv
std
aad
cwde
call
xor
jg
call
js
dec
jb
inc
imul
push
push
(bad)
mov
stos
movs
jmp
mov
mov
(bad)
jmp
retf
hlt
xlat
aad
cli
jmp
fdivr
mov
outs
jmp
sar
aam
mov
(bad)
out
(bad)
mov
push
into
ret
push
int
(bad)
in
lds
cld
mov
lock
(bad)
out
out
(bad)
call
xlat
sar
(bad)
leave
(bad)
fcmove
sar
sar
retf
inc
lods
mov
(bad)
(bad)
scas
(bad)
fbstp
mov
push
fcom
(bad)
stc
jecxz
(bad)
cli
in
jmp
jmp
imul
(bad)
jns
cmps
inc
sahf
mov
aad
sar
fimul
mov
push
rol
(bad)
out
retf
mov
clc
mov
loope
jmp
fcmovnbe
(bad)
(bad)
sar
fcmovnbe
int
fmul
leave
call
leave
ret
call
lds
dec
mov
mov
rol
mov
(bad)
fbstp
into
push
(bad)
(bad)
cli
call
in
(bad)
sti
icebp
out
push
lock
inc
(bad)
in
call
div
push
popf
call
popf
call
jbe
call
imul
loope
ret
rol
loopne
test
fldcw
jg
in
(bad)
(bad)
jmp
(bad)
jmp
(bad)
jmp
fdivrp
jmp
jmp
fcmovnbe
jmp
fcom
jmp
aad
jmp
aam
jmp
fcom
(bad)
call
mov
loope
push
cmc
(bad)
std
div
(bad)
std
clc
cmc
(bad)
std
div
push
loopne
(bad)
mov
mov
jmp
hlt
push
sahf
inc
mov
test
aam
mov
call
ins
int
aad
lods
cmc
(bad)
movs
mov
jmp
fstp
call
lea
mov
arpl
call
push
mov
out
xchg
call
jnp
call
jbe
dec
jo
call
pushf
xchg
in
mov
(bad)
(bad)
std
sti
(bad)
std
cli
clc
(bad)
sti
div
jmp
mov
push
mov
jmp
repz
push
jg
lods
xlat
pop
inc
mov
jl
aam
movs
call
ja
(bad)
xlat
movs
mov
add
loopne
(bad)
fcom
jno
call
fs
call
push
mov
out
xchg
out
dec
(bad)
fidivr
call
jbe
call
xchg
xlat
lahf
(bad)
push
aam
(bad)
(bad)
sti
cli
(bad)
(bad)
(bad)
(bad)
push
shl
(bad)
mov
jl
(bad)
jns
idiv
outs
div
push
into
push
xchg
inc
rcr
mov
scas
cmp
(bad)
mov
(bad)
cmp
lods
xchg
mov
jmp
(bad)
fcom
js
jmp
push
call
pusha
(bad)
cli
nop
pop
push
mov
out
xchg
out
dec
(bad)
fidivr
call
jne
call
xchg
aam
xchg
out
mov
push
idiv
fnstsw
push
clc
push
idiv
outs
repnz
push
in
je
lahf
push
jg
pushf
loopne
inc
mov
call
stos
mov
fldcw
add
add
add
mov
mov
in
out
(bad)
fstp
jle
jmp
outs
(bad)
call
fs
(bad)
xchg
pop
(bad)
cli
nop
pop
push
mov
out
test
out
dec
(bad)
fnstsw
call
jne
call
mov
rcl
popf
jmp
xchg
jmp
retf
(bad)
jge
idiv
cmp
jl
aam
mov
mov
call
scas
mov
fsubr
add
mov
mov
out
jmp
jnp
push
jl
jmp
outs
(bad)
call
arpl
(bad)
xchg
pop
(bad)
stc
(bad)
pop
push
mov
in
test
in
dec
(bad)
fdivr
call
jne
call
xchg
ror
xchg
rcr
retf
int
call
int3
sar
into
mov
into
xlat
stos
mov
add
jmp
(bad)
(bad)
mov
jmp
jl
jmp
outs
(bad)
call
(bad)
(bad)
xchg
pop
(bad)
stc
(bad)
pop
push
mov
in
test
in
dec
(bad)
fdivr
call
je
dec
outs
inc
dec
sbb
leave
mov
retf
jmp
(bad)
push
aad
add
add
mov
xchg
push
out
in
(bad)
fsub
(bad)
push
cmp
stos
jl
jmp
outs
(bad)
call
arpl
(bad)
xchg
pop
(bad)
stc
(bad)
pop
push
mov
in
test
in
dec
(bad)
fdivr
call
jne
dec
outs
inc
inc
push
(bad)
mov
pop
xor
(bad)
retf
push
inc
inc
add
add
icebp
out
(bad)
frstor
xchg
(bad)
push
mov
jmp
jnp
jmp
outs
(bad)
call
(bad)
std
xchg
pop
(bad)
stc
mov
repnz
jmp
push
jmp
jg
(bad)
fstp
call
je
dec
outs
inc
inc
imul
(bad)
fst
leave
push
inc
add
add
repz
fisubr
pushf
(bad)
(bad)
mov
(bad)
(bad)
push
cmp
jmp
ins
(bad)
call
(bad)
(bad)
xchg
pop
(bad)
clc
mov
xrelease
jmp
push
jmp
jle
(bad)
fstp
call
je
dec
outs
inc
inc
arpl
(bad)
fmul
(bad)
push
dec
inc
add
add
div
(bad)
fild
(bad)
(bad)
mov
xchg
(bad)
push
xchg
jmp
jp
jmp
(bad)
call
(bad)
(bad)
std
xchg
pop
(bad)
clc
mov
repnz
jmp
push
jmp
jle
(bad)
fidivr
call
je
inc
push
ret
(bad)
jns
dec
inc
add
add
clc
idiv
fild
mov
(bad)
(bad)
mov
xchg
(bad)
push
xchg
jmp
jp
jmp
ins
(bad)
call
(bad)
(bad)
cld
xchg
pop
(bad)
clc
mov
repnz
jmp
(bad)
fidivr
call
ins
cmp
(bad)
jnp
dec
inc
add
add
scas
mov
jmp
scas
xchg
(bad)
inc
movs
(bad)
inc
mov
(bad)
(bad)
mov
xchg
(bad)
push
(bad)
jmp
jns
jmp
(bad)
call
(bad)
cld
xchg
pop
push
lea
icebp
mov
jmp
(bad)
fnstenv
call
(bad)
mov
inc
add
add
scas
mov
jmp
mov
(bad)
dec
movs
(bad)
inc
movs
(bad)
inc
mov
(bad)
(bad)
mov
xchg
(bad)
(bad)
mov
mov
push
jp
jmp
outs
(bad)
call
popa
(bad)
call
(bad)
stc
mov
test
jmp
les
inc
add
add
mov
(bad)
(bad)
std
std
dec
mov
xchg
jmp
scas
xchg
(bad)
fild
(bad)
(bad)
fisubr
xchg
(bad)
jge
ficomp
jb
fcom
call
mov
aad
pop
call
test
rol
push
inc
js
(bad)
mov
sar
(bad)
mov
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
std
std
(bad)
std
cld
cld
(bad)
sti
cli
stc
(bad)
stc
clc
idiv
clc
cmc
hlt
push
repz
push
lock
push
out
jmp
icebp
jmp
(bad)
out
out
(bad)
in
in
(bad)
jmp
jmp
fcmovnbe
jmp
fcom
jmp
aad
(bad)
(bad)
retf
into
(bad)
(bad)
fxch
ret
call
(bad)
mov
inc
add
add
mov
inc
mov
inc
mov
inc
scas
mov
(bad)
mov
cmps
cdq
(bad)
mov
mov
xchg
push
cwde
mov
stos
xchg
xchg
test
cmp
(bad)
jg
mov
mov
fwait
test
xor
jge
call
ja
dec
jo
inc
add
add
push
jg
inc
pop
(bad)
inc
ud0
add
(bad)
cld
add
(bad)
clc
add
push
add
jmp
add
lock
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sub
add
xor
add
pusha
add
add
add
add
add
add
add
add
xchg
xchg
js
xchg
xchg
scas
xchg
xchg
xchg
fcom
(bad)
mov
mov
mov
mov
add
fwait
fwait
call
call
mov
mov
jmp
loope
jmp
jecxz
(bad)
fcomp
fdivr
mov
mov
mov
sahf
lahf
popf
push
call
mov
mov
mov
leave
leave
call
aad
jmp
loopne
(bad)
jmp
jmp
cmc
cmc
cmc
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
out
out
out
inc
mov
pushf
pushf
call
add
add
call
scas
mov
inc
leave
(bad)
(bad)
mov
ret
rcl
sar
(bad)
(bad)
jmp
jmp
clc
clc
clc
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
fstp
fdivr
test
mov
add
rol
cmps
cmps
movs
imul
call
mov
sar
(bad)
enter
mov
(bad)
(bad)
fdivrp
in
in
in
(bad)
sti
sti
sti
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
jecxz
jmp
mov
add
add
add
into
rol
rcl
rol
int3
retf
retf
push
stos
stos
stos
inc
cmps
cmps
movs
fisub
call
xchg
xchg
xchg
jmp
retf
retf
inc
ret
ret
inc
mov
(bad)
in
in
in
(bad)
cld
cld
cld
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
push
repnz
leave
enter
xchg
fisttp
add
add
rol
retf
rol
ret
rol
mov
or
xchg
xchg
es
call
test
mov
push
stos
stos
call
xchg
xchg
call
mov
int
vshufpd
(bad)
push
hlt
repz
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
cld
cld
cld
push
lock
jmp
(bad)
call
aad
jmp
mov
(bad)
fcmovbe
add
xchg
xchg
daa
xchg
xchg
xchg
xor
jbe
jbe
jne
js
mov
scas
clc
les
ret
(bad)
mov
mov
jmp
nop
nop
call
rol
ror
into
icebp
(bad)
(bad)
lock
loope
repz
cld
cld
cli
(bad)
(bad)
(bad)
(bad)
sti
cld
stc
(bad)
call
(bad)
call
fsub
dec
out
(bad)
mov
mov
mov
fstp
fild
rol
pop
fwait
fwait
cdq
sub
test
cmps
(bad)
retf
in
rcl
sar
rol
push
retf
dec
mov
aam
enter
mov
cmps
movs
call
mov
aam
aad
shl
aam
into
out
(bad)
rcl
out
fcmovu
aam
icebp
lock
stc
jmp
aam
(bad)
fst
icebp
(bad)
fucomip
std
(bad)
fdivr
(bad)
dec
cld
(bad)
jmp
mov
add
add
retf
test
imul
xchg
enter
in
into
into
into
call
(bad)
(bad)
(bad)
(bad)
fdivr
rol
jmp
fwait
cwde
jmp
mov
call
rcr
(bad)
mov
mov
call
iret
retf
std
retf
clc
iret
int3
leave
repnz
retf
lock
int3
enter
leave
hlt
in
lock
out
sar
jmp
sar
call
aad
inc
int
push
movs
cmps
dec
add
add
jbe
mov
(bad)
leave
leave
leave
dec
retf
iret
iret
iret
call
xlat
xlat
(bad)
mov
cwde
cdq
call
xchg
nop
call
xchg
xchg
jmp
stos
mov
(bad)
(bad)
fdivr
(bad)
mov
mov
ret
out
retf
rcl
into
lock
retf
rol
xlat
test
sar
mov
mov
call
lea
dec
add
add
add
add
aaa
aaa
pop
fs
push
push
push
shl
and
mov
add
inc
add
add
add
add
and
and
add
add
add
add
xchg
mov
inc
rol
(bad)
dec
int
call
xlat
xlat
push
cmps
cmps
jmp
cmps
cmps
jmp
mov
mov
call
rcl
(bad)
(bad)
xlat
push
rcl
dec
into
into
in
mov
ror
lock
int
test
mov
dec
(bad)
mov
xchg
nop
(bad)
call
(bad)
mov
test
lods
inc
jge
push
jb
addr16
dec
jmp
push
xchg
xchg
xchg
call
pop
mov
adc
pop
add
add
add
add
mov
idiv
mov
sar
enter
rcl
push
mov
inc
mov
inc
mov
sar
mov
cmps
(bad)
mov
retf
fstp
fdivr
mov
mov
mov
lods
lods
lods
repz
int3
cmc
aad
iret
out
stos
test
nop
dec
xchg
(bad)
call
xchg
xchg
call
nop
nop
cmc
mov
mov
dec
test
jmp
test
mov
fwait
(bad)
mov
bound
or
or
add
add
sbb
or
(bad)
les
cdq
cwde
out
rol
inc
ret
ret
(bad)
mov
rol
(bad)
(bad)
mov
sar
test
scas
call
(bad)
jnp
mov
push
(bad)
mov
mov
call
aad
call
ror
push
scas
lods
sti
mov
cld
rcl
int
enter
lods
mov
mov
call
xchg
xchg
dec
(bad)
mov
xchg
xchg
xchg
fadd
add
add
add
add
retf
xchg
xchg
xchg
(bad)
jle
jle
mov
xchg
jmp
mov
(bad)
(bad)
jnp
jnp
mov
call
je
lds
adc
add
add
lea
ja
mov
mov
(bad)
(bad)
(bad)
inc
rol
mov
mov
mov
mov
xchg
mov
cmp
pushf
(bad)
cmp
cmp
in
(bad)
jp
push
call
mov
sahf
inc
mov
sar
(bad)
fdivr
(bad)
fdivr
fcmovnu
aad
int
enter
scas
hlt
call
jmp
mov
mov
movs
fwait
test
xchg
xchg
cdq
call
add
add
add
add
(bad)
(bad)
call
add
test
xchg
jmp
mov
(bad)
mov
mov
inc
mov
pop
pop
pop
test
add
add
inc
inc
jb
cs
ja
xchg
xchg
xchg
in
xchg
xchg
mul
retf
add
xchg
call
test
jmp
stos
mov
mov
mov
sar
retf
ror
retf
call
rcl
call
aad
dec
retf
int3
(bad)
scas
mov
call
xchg
xchg
call
cwde
movs
jmp
pushf
test
js
add
add
add
add
mov
(bad)
popf
cdq
cdq
inc
mov
dec
mov
jmp
(bad)
(bad)
push
fwait
fwait
push
jae
das
xor
xchg
and
sbb
dec
pushf
jb
je
js
jns
jle
jg
xchg
xchg
xchg
std
scas
mov
mov
call
mov
mov
mov
mov
aad
(bad)
jmp
loopne
jmp
in
(bad)
call
div
(bad)
cld
std
std
(bad)
in
jmp
dec
retf
int3
(bad)
mov
cmps
movs
call
xchg
mov
mov
call
add
add
add
add
ret
ret
cli
icebp
loopne
call
mov
call
xchg
xchg
call
xchg
xchg
dec
xchg
xchg
dec
mov
stos
dec
push
push
mov
pop
pop
ret
arpl
pusha
pusha
popa
out
addr16
jbe
jp
xchg
xchg
cdq
in
test
mov
mov
movs
fwait
mov
push
mov
ret
dec
int
(bad)
(bad)
fdivr
lock
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
cli
cli
cli
(bad)
(bad)
(bad)
enter
mov
lods
lods
call
cdq
cwde
call
add
add
vpsubd
in
call
xchg
xchg
call
cwde
call
xchg
xchg
dec
add
je
ja
jge
jg
jle
jg
jns
jnp
jnp
and
xchg
xchg
call
mov
mov
inc
mov
mov
mov
stos
jmp
lods
scas
push
mov
(bad)
mov
rol
retf
call
aam
jmp
loope
push
icebp
icebp
(bad)
std
std
std
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
push
icebp
icebp
(bad)
fcomp
fdivr
enter
mov
stos
test
fstp
add
add
vpsubd
loop
call
cwde
cwde
call
sahf
sahf
jmp
pushf
pushf
dec
mov
call
test
repz
mov
cld
mov
mov
mov
push
mov
call
daa
and
call
(bad)
mov
mov
mov
call
rcl
(bad)
fcmovnu
(bad)
out
out
hlt
hlt
hlt
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
sti
sti
sti
jmp
out
call
rcl
inc
rol
test
lahf
popf
push
add
add
rol
in
fcmovu
call
sahf
sahf
jmp
cmps
cmps
jmp
mov
mov
mov
mov
fcom
aam
mov
lods
lods
jmp
add
xchg
cmp
push
dec
or
call
or
call
or
pop
(bad)
mov
rol
into
into
into
call
(bad)
(bad)
jmp
loopne
(bad)
jmp
jmp
div
idiv
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
push
div
call
aam
push
mov
add
les
sar
pushf
cwde
cwde
jmp
test
stos
jmp
mov
jmp
fcmovu
jmp
sbb
dec
or
inc
add
inc
push
add
xchg
add
(bad)
or
call
(bad)
jmp
adc
jmp
jno
(bad)
mov
ret
ret
(bad)
(bad)
jmp
out
(bad)
out
out
out
(bad)
stc
stc
stc
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
push
repz
rcl
push
movs
movs
push
add
add
int3
call
lods
jmp
scas
scas
push
stos
stos
dec
cmps
test
jmp
add
dec
push
push
dec
clts
inc
or
dec
push
add
call
jmp
push
add
mov
sbb
(bad)
push
inc
inc
ins
pop
inc
xchg
mov
mov
ret
ret
call
(bad)
(bad)
(bad)
jmp
jmp
cld
cld
cld
(bad)
cld
cld
cld
push
repnz
fnstsw
(bad)
retf
push
test
cmp
mov
lods
cli
rol
(bad)
fwait
fwait
push
mov
push
mov
mov
xchg
cwde
cwde
jmp
xlat
fdivr
mov
sbb
call
and
dec
sbb
dec
push
add
xchg
or
add
movs
adc
jmp
adc
push
ds
shl
call
push
(bad)
fldenv
call
jp
dec
pop
mov
mov
push
mov
(bad)
mov
test
cwde
mov
add
add
mov
(bad)
mov
mov
(bad)
mov
mov
mov
dec
rcl
dec
mov
and
xchg
sub
xchg
sub
and
xchg
sub
call
push
add
xchg
(bad)
jmp
adc
jmp
add
mov
dec
cmp
fdiv
(bad)
fidiv
jmp
jbe
jmp
ja
jmp
jns
(bad)
call
jle
(bad)
out
jge
(bad)
jmp
pop
(bad)
(bad)
fdivrp
scas
scas
scas
sti
mov
add
cmps
mov
mov
(bad)
mov
mov
mov
(bad)
mov
mov
dec
rcl
call
leave
retf
xor
call
cmp
fwait
ss
call
push
or
xchg
push
add
lahf
adc
jmp
push
add
mov
add
mov
and
(bad)
fldenv
jmp
mov
out
jae
call
mov
in
mov
out
mov
icebp
mov
test
(bad)
fisubr
(bad)
mov
mov
add
mov
mov
mov
mov
(bad)
mov
ret
ret
(bad)
mov
xchg
xchg
dec
int
(bad)
(bad)
sar
xchg
cmp
jmp
inc
aas
jmp
sub
xchg
push
add
fwait
(bad)
jmp
adc
add
mov
sbb
dec
das
adc
(bad)
jmp
mov
in
xchg
cmp
lock
cmp
xchg
test
cmc
cwde
xchg
neg
(bad)
(bad)
cli
mov
jecxz
lahf
(bad)
(bad)
fdivrp
rol
dec
add
add
test
lahf
inc
rol
mov
mov
sar
(bad)
mov
xchg
xchg
dec
aam
(bad)
(bad)
(bad)
pushf
push
dec
jmp
push
dec
jmp
sbb
xchg
or
jmp
adc
push
sbb
(bad)
mov
sbb
call
cmp
(bad)
jmp
push
mov
xchg
push
mov
xchg
(bad)
stc
movs
xchg
(bad)
sti
cmps
xchg
(bad)
std
lods
popf
(bad)
call
mov
dec
(bad)
enter
(bad)
ficom
add
add
dec
sti
ds
call
ret
ret
(bad)
mov
mov
sar
(bad)
(bad)
(bad)
mov
xchg
xchg
dec
rcl
(bad)
(bad)
xlat
jmp
inc
push
inc
call
(bad)
jmp
adc
add
mov
sbb
dec
sbb
(bad)
fimul
push
stos
lahf
push
mov
push
lods
lahf
push
lods
mov
(bad)
cli
mov
(bad)
std
mov
(bad)
push
(bad)
jmp
cmps
jmp
fstp
dec
into
into
dec
mov
add
cmp
cld
inc
cmp
jmp
(bad)
mov
mov
ret
mov
jmp
retf
(bad)
rcl
(bad)
mov
dec
dec
(bad)
mov
cmp
call
adc
jmp
push
add
mov
sbb
add
(bad)
and
(bad)
clc
mov
lods
(bad)
cld
mov
lods
(bad)
std
mov
scas
(bad)
inc
mov
inc
mov
inc
mov
(bad)
mov
lods
jmp
fstp
call
rcl
call
xchg
add
std
dec
inc
inc
call
(bad)
(bad)
(bad)
mov
rol
(bad)
(bad)
(bad)
inc
enter
mov
cdq
inc
ret
rcl
sar
retf
jmp
ins
(bad)
call
(bad)
jmp
pop
add
mov
sbb
add
fbld
add
jmp
(bad)
dec
(bad)
les
(bad)
dec
mov
(bad)
dec
mov
(bad)
dec
mov
(bad)
dec
mov
out
mov
fcos
(bad)
(bad)
call
xchg
add
dec
dec
dec
push
aad
inc
rol
mov
ret
ret
inc
(bad)
mov
call
iret
rcl
call
retf
retf
push
dec
inc
call
adc
push
sbb
inc
sbb
add
fisub
jmp
and
push
cmp
(bad)
cld
test
(bad)
(bad)
fmul
(bad)
dec
ret
iret
ret
(bad)
call
(bad)
(bad)
call
(bad)
(bad)
call
(bad)
(bad)
call
(bad)
(bad)
call
(bad)
(bad)
(bad)
fcmove
(bad)
(bad)
fcmovne
push
mov
sar
(bad)
(bad)
mov
xchg
add
(bad)
lock
repz
out
icebp
jmp
in
call
fcomp
call
rcl
dec
into
into
inc
enter
test
push
fcmovnu
(bad)
fcmovnbe
(bad)
jmp
sub
jmp
adc
push
sbb
dec
push
add
(bad)
and
jmp
and
add
hlt
dec
sub
(bad)
(bad)
fst
(bad)
call
retf
(bad)
(bad)
fmul
(bad)
(bad)
fmul
(bad)
(bad)
fcmove
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
sar
jmp
fcos
cld
ret
call
(bad)
jmp
mov
add
clc
stc
cmp
idiv
call
icebp
(bad)
jmp
dec
rcl
(bad)
mov
out
(bad)
(bad)
fcos
movs
dec
inc
call
adc
jmp
sbb
inc
sbb
dec
push
add
fldenv
add
in
add
out
daa
add
stc
push
sar
jmp
fdivr
(bad)
fst
(bad)
(bad)
fst
(bad)
(bad)
(bad)
(bad)
jmp
aam
jmp
aad
jmp
fcos
jmp
(bad)
jmp
fdivr
(bad)
in
in
std
int
(bad)
in
(bad)
int
loope
loopne
mov
mov
mov
add
clc
stc
cli
add
cli
cli
sub
clc
stc
cli
call
out
in
jecxz
fcom
sar
mov
imul
test
add
mov
add
mov
sbb
dec
push
add
fsub
add
call
sub
(bad)
std
mov
(bad)
call
(bad)
jmp
fdivr
jmp
fdivrp
jmp
loopne
(bad)
jmp
(bad)
in
out
(bad)
out
out
(bad)
out
out
push
out
(bad)
call
ret
(bad)
out
aad
jmp
loope
(bad)
mov
mov
(bad)
(bad)
inc
hlt
div
dec
loop
fdivr
ror
iret
(bad)
mov
push
add
test
add
mov
add
mov
push
add
shl
add
fisub
add
repz
adc
push
repz
(bad)
in
out
(bad)
in
out
(bad)
in
out
(bad)
in
jecxz
(bad)
jmp
(bad)
(bad)
jmp
xlat
(bad)
(bad)
(bad)
(bad)
std
fmul
(bad)
sti
fmulp
(bad)
cli
mov
mov
loope
loopne
mov
lea
push
loope
xlat
stc
retf
retf
retf
dec
mov
call
adc
push
sbb
dec
sbb
call
sbb
jmp
sbb
push
adc
(bad)
cld
ss
shl
(bad)
aad
(bad)
std
rol
(bad)
cli
leave
mov
test
stos
push
mov
lods
jmp
ret
mov
jecxz
sar
iret
(bad)
jmp
aad
(bad)
(bad)
sar
rcl
int
scas
lods
stos
cld
cdq
cdq
xchg
fld
add
add
iret
into
(bad)
(bad)
mov
(bad)
leave
leave
jmp
add
push
add
les
add
into
adc
(bad)
fstp
pop
jmp
and
jmp
inc
and
(bad)
fsubr
cmps
(bad)
fistp
mov
fld
sar
iret
retf
(bad)
(bad)
sar
ror
int3
sti
retf
inc
ret
mov
mov
mov
into
mov
mov
stos
stos
movs
xor
add
add
ret
shr
rcl
call
sub
jmp
inc
push
xchg
dec
mov
dec
sar
(bad)
rcl
sti
ror
int3
cli
vcmpps
mov
mov
mov
lods
loop
mov
fnstenv
mov
xchg
mov
ror
push
fabs
jecxz
repz
dec
int
int
lds
(bad)
(bad)
fstp
fcos
xlat
into
iret
(bad)
fcom
sar
(bad)
(bad)
(bad)
(bad)
(bad)
aad
(bad)
clc
int
int
rol
in
mov
mov
call
stos
stos
mov
lds
cmps
mov
pop
mov
lods
and
rcl
add
mov
movs
ss
mov
fscale
ror
into
(bad)
mov
mov
(bad)
lods
lods
test
into
test
cmps
mov
xchg
movs
movs
lahf
ins
stos
stos
mov
or
add
add
fwait
call
stos
cmps
sti
stos
stos
cmps
fisubr
stos
movs
outs
stos
test
add
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
cld
add
add
(bad)
(bad)
push
add
add
(bad)
(bad)
jmp
add
add
(bad)
(bad)
inc
add
add
(bad)
(bad)
std
add
add
(bad)
call
add
add
add
inc
add
add
add
inc
add
add
add
inc
add
add
add
inc
add
add
add
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
add
add
sldt
add
add
pop
add
add
add
aas
add
add
add
inc
add
inc
add
inc
add
inc
add
jg
add
jg
add
jg
add
jg
add
jg
add
jg
add
add
add
jg
add
add
add
jg
add
rol
add
add
push
add
add
add
push
add
add
add
lock
add
add
push
add
jg
add
push
add
(bad)
inc
add
lock
inc
add
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
inc
add
or
or
add
or
add
add
add
add
or
add
add
data16
and
dec
inc
inc
push
js
in
mov
jne
neg
xchg
mov
out
and
adc
cdq
aam
imul
or
add
sbb
or
sbb
in
or
add
mov
cmp
lock
and
push
in
dec
add
and
and
push
sub
jb
jae
cli
fbld
mov
stos
stos
mov
xchg
inc
mov
(bad)
jge
out
scas
scas
mov
ja
push
in
push
mov
mov
cmp
ror
in
push
mov
mov
cmp
ror
in
push
mov
mov
cmp
ror
in
push
mov
mov
jge
iret
and
inc
(bad)
clc
clc
add
mov
fstp
mov
cmp
add
xor
adc
ja
aad
mov
aas
ins
inc
cmp
push
stos
mov
jle
lahf
hlt
jge
cmp
push
nop
stc
inc
ffreep
repz
mov
leave
(bad)
mov
dec
sti
out
call
mov
fidivr
sub
mov
sub
mov
test
push
sub
fs
fcom
xchg
(bad)
pop
jmp
jecxz
imul
call
std
cld
xchg
std
fisubr
call
loop
sub
xchg
mov
cli
pop
ror
sahf
int
mov
int
stc
test
sti
call
mov
sbb
and
out
fdivr
jmp
fild
(bad)
sub
out
outs
push
stos
(bad)
(bad)
jge
cmp
shl
hlt
pop
mov
lock
dec
push
push
sbb
sub
mov
out
xchg
dec
rcr
dec
loopne
jbe
std
cmc
jp
rcr
pop
das
mov
loop
rcl
shl
xor
rol
(bad)
(bad)
repnz
(bad)
pop
jl
mov
clc
test
lds
or
mov
push
xor
sbb
imul
in
iret
data16
xor
and
(bad)
jo
mov
xor
push
iret
out
jecxz
mov
adc
movs
cmp
cmp
dec
push
lods
out
(bad)
mov
mov
popf
jbe
mov
(bad)
icebp
dec
das
mov
pop
fistp
mov
call
adc
aaa
push
mov
pop
and
xor
stos
fidiv
ins
shl
inc
enter
pusha
mov
scas
or
cmc
push
adc
test
shr
and
stos
mov
mov
pop
test
inc
loopne
xor
ins
push
jge
scas
jle
stos
idiv
(bad)
cmp
jo
push
add
mov
inc
push
add
es
mov
mov
rcr
(bad)
out
imul
std
imul
xor
test
jmp
sar
stos
mov
push
fistp
(bad)
jl
push
outs
push
adc
adc
fild
pushf
xor
jge
dec
pop
fimul
mov
inc
and
scas
push
cmp
xchg
imul
ret
fadd
nop
xor
push
ins
jo
outs
dec
dec
mov
ret
jbe
imul
add
fiadd
add
cmp
js
mov
ss
in
inc
cs
(bad)
cmc
push
loopne
ret
shl
push
lock
pop
(bad)
or
or
jno
xchg
clc
mov
dec
add
push
or
into
adc
out
jnp
stc
int
cld
sbb
mov
daa
daa
fdivr
test
cwde
iret
out
or
or
adc
call
or
xor
xchg
inc
or
inc
jg
leave
test
or
mov
lock
(bad)
xor
loopne
icebp
xrelease
cld
rcr
push
inc
fisub
or
add
cmp
cmps
popf
add
cmc
push
stos
inc
retf
stos
sub
push
shr
in
(bad)
fdiv
(bad)
sbb
xchg
jg
(bad)
(bad)
jb
outs
js
(bad)
push
aaa
outs
int3
cmp
jecxz
int
fdivr
pop
sti
sti
sub
jae
jnp
jmp
sbb
fcomp
or
int3
adc
push
push
lds
add
outs
pop
xchg
lahf
lods
cmp
add
clc
adc
mov
call
mov
(bad)
call
adc
mov
pop
adc
(bad)
jecxz
mov
in
add
movs
mov
bswap
mov
xchg
test
push
stos
or
fxam
(bad)
cmp
mov
js
inc
mov
dec
mov
ss
stos
ja
dec
iret
rcl
retf
aaa
data16
push
sbb
into
cmp
push
div
pusha
jg
jo
push
mov
push
int3
addr16
in
in
xor
mov
dec
aam
mov
(bad)
sbb
xchg
push
aad
sub
int3
scas
cdq
scas
bound
add
cld
into
mov
mov
addr16
shl
dec
pop
add
jg
(bad)
jg
nop
ret
cmp
call
shr
lahf
std
in
dec
dec
cmp
mov
add
aas
push
cmps
inc
pop
xchg
add
jns
loopne
scas
push
xor
sub
mov
sub
arpl
dec
push
pop
mov
mov
or
sub
sbb
xchg
aad
mov
mov
sub
sbb
int
xchg
inc
mov
int
mov
jno
je
bound
lahf
iret
sub
xchg
push
dec
or
mov
cmp
fsub
sbb
inc
in
inc
mov
shr
shl
cs
out
push
dec
mov
loope
push
addr16
popf
jo
add
dec
add
repnz
mov
into
sbb
and
ja
cmp
or
xor
pop
add
xchg
adc
nop
jge
pushf
stos
or
cmp
jbe
jb
popa
xchg
xchg
lds
jle
(bad)
cld
cs
inc
ja
cmp
mov
out
push
int
sbb
push
sub
cmp
outs
call
ins
(bad)
bound
(bad)
cwde
add
add
xor
cmc
mov
mov
daa
cmp
cs
push
outs
sti
push
mov
add
mov
stos
dec
or
loope
cmp
div
mov
cmove
push
add
add
repnz
fsubrp
mov
(bad)
ror
add
jmp
or
mov
js
mov
out
pop
xchg
xor
dec
fidiv
push
call
inc
ins
pop
rcl
adc
or
fsubr
(bad)
adc
mov
int3
jmp
sti
or
rcr
cmp
jns
jae
push
jb
movs
loop
shl
jo
xor
fldenv
ins
mov
sahf
sub
mov
dec
adc
push
xor
inc
dec
add
loop
pushf
movs
ins
cmps
(bad)
xchg
push
inc
mov
enter
shl
or
sbb
fdivrp
repz
push
fild
jecxz
sbb
lods
inc
fs
mov
cmp
mov
fcomp
add
into
or
mov
imul
arpl
adc
push
test
inc
push
xchg
add
add
xchg
add
sbb
push
push
pminub
sbb
sbb
ins
leave
rcr
cmp
pop
repz
jl
mov
int
das
mov
push
inc
pop
xchg
pop
push
xor
stc
ins
setno
movs
rcr
sti
nop
add
mov
add
mul
jbe
xor
mov
add
enter
inc
fdivrp
inc
inc
pop
pusha
mov
repnz
clc
into
cmp
fcom
xchg
pop
and
sub
mov
xchg
push
pop
cmp
fidivr
add
or
repz
retf
shl
sub
into
cs
pop
pop
jbe
das
mov
std
popf
add
shr
leave
(bad)
cmc
add
or
cmc
xchg
mov
popf
ret
sbb
inc
cmp
loop
mov
out
ret
stos
aaa
(bad)
fdivr
cmp
pop
jb
jo
sar
rol
leave
(bad)
pop
int
rol
stc
pushf
stc
jl
bound
pop
cmp
or
or
test
mov
stos
push
lahf
mov
js
jns
push
aad
jo
or
les
jmp
arpl
adc
enter
ja
mov
repnz
int
fmul
add
xlat
lea
call
sub
xchg
pushf
popf
jns
jle
lods
imul
mov
or
pop
mov
sbb
add
inc
xchg
(bad)
jns
adc
mov
(bad)
movs
mov
loope
lock
lds
push
out
mov
mov
pop
aam
inc
fist
push
mov
pop
xor
test
xchg
mov
sub
call
test
out
mov
jmp
push
or
(bad)
hlt
or
xchg
cmp
pop
stos
jmp
lock
in
in
cmp
ficom
xchg
test
sbb
fwait
int
je
ds
add
sbb
mov
pop
sbb
mov
cs
int
movs
mov
and
idiv
aam
daa
jle
inc
retf
or
leave
dec
jne
mov
pop
mov
dec
pop
jnp
loopne
pop
stos
mov
mov
cmp
sar
sub
(bad)
sar
dec
xlat
cmp
into
jno
push
cld
retf
pop
mov
pop
push
pop
sub
ret
pop
jge
mov
mov
lods
jbe
sbb
fcomp
push
iret
addr16
pop
in
out
out
push
xchg
adc
ret
xchg
adc
mov
jns
pop
clc
xor
and
add
add
std
retf
jns
adc
sbb
mov
jbe
rol
fwait
cmps
imul
inc
dec
fistp
jae
inc
mov
mov
or
sub
cli
push
mov
(bad)
ja
dec
repnz
cmp
stos
and
jmp
xchg
mov
inc
into
test
loop
sub
adc
dec
push
or
xchg
outs
shr
mov
lods
add
or
xor
xor
mov
imul
mov
push
xlat
push
jo
leave
xchg
push
(bad)
aam
mov
into
mov
int
(bad)
mov
aaa
sbb
push
sbb
in
xor
sub
or
test
cmps
movs
sub
mov
(bad)
sbb
jp
fiadd
mov
cmp
and
pusha
out
mov
and
nop
sub
enter
(bad)
in
(bad)
in
fild
repz
inc
sar
in
sar
sti
pop
sub
call
mov
xchg
jp
test
call
xchg
lea
mov
mov
loope
push
adc
xchg
push
push
xor
enter
jmp
ins
inc
pop
ss
popf
rcr
or
loope
pop
inc
jmp
in
dec
loop
retf
dec
out
push
outs
popa
fst
pop
push
enter
mov
xor
sub
aad
mov
ss
fstp
fcomp
stos
pop
int3
imul
neg
pop
sub
out
mov
cwde
add
cmps
sub
push
or
pop
daa
jmp
cmp
and
(bad)
jnp
push
adc
ins
dec
or
push
adc
mov
mov
fidivr
icebp
lea
std
xlat
mov
mov
(bad)
jg
repz
mov
mov
out
imul
push
xchg
std
mov
ret
mov
shl
mov
mov
xlat
icebp
sub
into
sub
inc
or
rcl
pushf
sbb
push
push
or
jge
into
xchg
or
pop
aas
dec
or
sbb
cmp
das
rcr
pushf
(bad)
sbb
or
add
mov
imul
movs
arpl
int3
retf
and
mov
test
mov
cdq
xlat
inc
imul
fcomp
fbld
fwait
push
xlat
xor
adc
(bad)
push
add
mov
inc
scas
jmp
and
inc
cli
sahf
fidivr
cmp
loope
xchg
cmc
fidivr
lea
and
clc
mov
das
test
repnz
sub
out
pop
lods
adc
xchg
jnp
popa
ins
cmp
in
popf
ins
cmc
fsub
clc
pop
sub
lea
pusha
mov
jmp
repz
xor
jmp
div
ror
inc
inc
adc
and
(bad)
add
adc
pushf
into
inc
xchg
or
pop
mov
xor
pop
adc
dec
pop
sbb
fidivr
stos
inc
cs
sbb
xchg
lods
cdq
jae
leave
xchg
retf
xchg
setns
loope
leave
fidivr
das
cmp
pop
xor
jnp
push
push
rcl
pop
jo
xchg
or
dec
scas
cmp
cmps
fist
cmc
jp
pop
xchg
cmp
lock
jecxz
pop
jge
aad
xchg
imul
scas
stos
dec
dec
push
pusha
and
arpl
stos
mov
ret
adc
cdq
cmps
push
retf
leave
inc
mov
aaa
movs
sbb
or
xor
out
cmc
loope
push
or
dec
mov
push
scas
movs
push
push
xor
icebp
imul
or
cmps
xor
inc
and
push
lods
xor
adc
addr16
push
rol
push
cli
and
into
std
push
mov
dec
iret
sub
mov
pop
fisub
div
or
leave
bound
js
pusha
mov
mov
int3
fcomp
cdq
int
sbb
cmp
dec
push
and
dec
rol
mov
or
cmc
xchg
xchg
out
jno
(bad)
lods
mov
mov
repz
add
push
std
or
add
pop
outs
popa
loopne
shl
push
popf
push
loopne
sub
inc
pop
pop
add
in
cmp
lea
add
sahf
ja
xchg
jns
and
xor
xor
inc
mov
cmps
cdq
rcl
and
sbb
and
push
std
xor
cmp
(bad)
mov
js
mov
aaa
mov
loope
ret
out
inc
sbb
jb
jbe
mov
jg
int3
dec
inc
sbb
movs
mov
iret
jge
jae
data16
fidivr
jp
jb
inc
push
sub
(bad)
sub
outs
fdivrp
xor
(bad)
ds
cld
mov
xchg
gs
jno
pop
xchg
cwde
push
sbb
fiadd
sub
xor
neg
jg
retf
cli
lea
daa
or
fst
enter
pop
dec
fnstenv
cmc
fidiv
fisubr
xor
in
add
inc
sub
arpl
ror
lea
push
xchg
xor
add
pop
add
retf
add
jne
mov
xchg
sub
mov
jbe
(bad)
mov
jle
pusha
fwait
or
and
loopne
and
cmp
mov
mov
cmp
dec
scas
push
sub
aad
mov
fdivr
push
clc
pushf
rol
add
imul
push
adc
dec
inc
sub
fdivrp
jae
xchg
add
pop
ds
jmp
mov
pop
xor
push
call
fnstcw
cmc
test
add
test
(bad)
jbe
out
dec
push
cwde
daa
cmp
mov
neg
dec
cld
mov
cs
mov
push
in
sub
bsr
xchg
mov
dec
adc
or
out
retf
mov
outs
js
mov
xchg
xchg
sbb
fdiv
repnz
out
mov
movlps
mov
or
ficom
sahf
sti
adc
(bad)
mov
clc
(bad)
in
xor
(bad)
adc
push
push
xor
outs
lds
pop
jecxz
pushf
xor
pop
cmps
pushf
pop
daa
mov
push
cmps
out
and
(bad)
stos
rcr
shr
retf
xchg
mov
sub
inc
jp
pop
in
daa
cmps
jmp
sahf
pop
sti
arpl
(bad)
leave
ins
mov
in
gs
dec
push
inc
mov
std
jo
mov
adc
and
bound
cmp
jmp
sbb
mov
(bad)
lea
sub
jns
cmp
xor
arpl
push
out
cmp
stc
into
repnz
sahf
jp
call
stos
adc
sub
ins
ss
mov
test
leave
int3
jg
inc
sub
pop
dec
mov
leave
fcmove
fstp
and
sbb
push
xchg
imul
test
je
mov
call
mov
std
or
mov
dec
mov
dec
cli
int3
dec
loope
inc
inc
lea
or
ins
or
mov
sub
in
out
jnp
cmp
cmp
dec
inc
inc
push
imul
sbb
inc
inc
push
pop
and
sub
cs
cmp
in
pop
icebp
mov
xlat
out
jp
popa
mov
cmps
pushf
clc
cwde
fist
mov
dec
or
xor
ja
aam
xor
add
stc
scas
xchg
cmp
repnz
adc
xchg
repz
inc
adc
out
sub
iret
push
add
fistp
pusha
push
xchg
rcl
xor
cmp
sti
xchg
mov
dec
(bad)
(bad)
(bad)
aas
cld
xchg
lock
hlt
(bad)
not
mov
retf
mov
pop
xor
ss
mov
or
out
adc
sahf
and
xor
ja
jecxz
fidivr
mov
adc
inc
sbb
mov
mov
sub
mov
inc
add
sbb
inc
push
in
jns
ja
xchg
add
leave
fimul
mov
xchg
sbb
cdq
mov
push
pop
inc
cmps
mov
pusha
out
push
xchg
test
in
fcom
(bad)
rcl
and
xchg
mov
retf
hlt
(bad)
ja
xchg
fistp
cli
dec
or
mov
test
push
pop
lea
pop
xchg
imul
dec
lock
sbb
mov
imul
pushf
imul
imul
fwait
sub
test
popf
pop
call
sub
adc
ret
cdq
dec
(bad)
or
and
arpl
or
xlat
mov
sar
mov
and
cmp
cmp
and
in
mov
retf
aam
ins
pop
xor
push
inc
jno
out
rol
sar
imul
mov
cs
das
or
dec
in
repz
call
or
add
jg
jmp
inc
data16
cld
lahf
sub
lods
ss
into
das
fisttp
bswap
jo
push
out
mov
pushf
mov
inc
mov
imul
mov
xor
out
and
xchg
jne
adc
dec
adc
shl
xchg
add
jno
sub
inc
add
jg
out
mov
and
lods
lods
jae
inc
push
or
sub
ret
stc
jns
bnd
popa
cmps
cs
(bad)
in
retf
sahf
xor
pushf
fistp
cmp
and
jmp
(bad)
fcmovb
push
ins
xchg
adc
xor
gs
xor
sbb
and
inc
sti
jne
aas
rcl
sbb
cmps
sti
fidiv
pop
push
push
fist
sub
sbb
into
test
mov
jo
test
pop
and
mov
pop
imul
(bad)
leave
jnp
pusha
pushf
push
sbb
hlt
int3
mov
xchg
mov
push
stc
push
cld
pop
scas
push
dec
xchg
out
sbb
mov
xor
neg
(bad)
push
into
inc
mov
(bad)
fnstsw
imul
sub
add
lea
xor
mov
sbb
bound
mov
shl
in
sti
in
mov
leave
in
call
sub
lahf
loope
mov
(bad)
xchg
aaa
int
dec
or
scas
fstp
adc
mov
daa
(bad)
mov
shl
shl
pop
stc
mov
jo
std
push
stos
and
leave
les
xor
shl
stos
or
xor
xor
fnstenv
data16
or
sub
or
retf
jle
and
scas
aas
xor
repnz
mov
push
push
pushf
jp
dec
push
add
mov
daa
mov
enter
(bad)
and
clc
and
mov
inc
cmp
xchg
nop
mov
sub
pop
add
and
test
aaa
dec
out
movs
jns
pop
ja
jo
add
xchg
idiv
push
or
inc
sub
fist
adc
xchg
loopne
outs
cmp
ins
imul
jno
dec
(bad)
bound
inc
outs
loope
and
and
or
mov
sbb
xchg
cmp
add
inc
jge
push
cs
cwde
mov
mov
daa
(bad)
mov
jbe
call
push
mov
xchg
dec
pop
popa
jg
push
jl
fsubp
add
ds
adc
test
mov
aam
inc
in
lock
add
inc
fadd
mov
pushf
jl
les
mov
jae
idiv
jmp
fdivr
mov
adc
push
or
sar
mov
cwde
mov
sbb
aas
leave
mul
js
jnp
mov
cmps
or
retf
movs
mov
test
pusha
xchg
in
cmps
in
mov
(bad)
pop
repz
repz
sbb
and
sub
xor
xchg
popa
mov
adc
sbb
and
dec
jne
dec
arpl
cmp
pmovmskb
push
jmp
inc
cwde
pop
shl
out
add
cmps
shl
pop
sub
lods
cmp
cwde
lahf
ja
jle
clc
clc
clc
sub
out
ficomp
push
pushf
cmp
adc
xchg
sbb
out
and
imul
call
enter
jnp
nop
add
pop
mov
clc
cmp
aam
ficom
enter
not
mov
mov
cmp
sar
jp
sbb
push
push
sbb
sub
cwde
cs
idiv
mov
mov
in
sbb
leave
xor
mov
in
setne
jmp
icebp
shld
xchg
inc
xchg
inc
(bad)
or
ret
cmps
dec
fcomp
mov
push
and
cmp
sbb
pop
add
lahf
push
cmc
mov
ror
out
popa
pop
ja
cmps
or
(bad)
sti
loop
or
sbb
push
dec
data16
cmps
icebp
pop
pop
je
xlat
(bad)
jp
js
push
mov
cdq
cmp
mov
cmps
mov
pop
mov
repz
sti
push
(bad)
fistp
imul
mov
jecxz
loopne
outs
daa
mov
or
rol
out
cmps
popa
lds
inc
xor
test
(bad)
hlt
call
adc
xchg
call
ss
sub
mov
mov
cwde
mov
out
ds
mov
jl
in
mov
mov
std
mov
(bad)
gs
(bad)
(bad)
cmc
sbb
jle
adc
xchg
add
loopne
rol
push
push
xor
push
(bad)
data16
cmp
out
mov
sbb
and
xor
outs
shl
xchg
(bad)
out
ret
xchg
scas
pushf
sbb
jg
sbb
cmp
jmp
aad
pop
scas
xchg
retf
jne
or
sub
push
lock
leave
mov
pop
cmc
cmovle
imul
adc
iret
mov
arpl
rcr
cmp
or
hlt
xchg
test
mov
dec
pop
push
je
mov
lods
movs
imul
pop
in
add
test
stos
dec
push
test
mov
adc
mov
pop
shl
mov
mov
push
xor
std
sti
out
lahf
jnp
mov
mov
mov
pop
bndldx
pushf
mov
into
aas
popf
aaa
mov
nop
dec
sbb
and
aaa
xchg
jmp
out
bound
cmp
movaps
adc
jge
std
add
jmp
into
jp
(bad)
jo
push
xchg
dec
gs
scas
ret
and
xchg
adc
ja
push
data16
jae
jg
pop
enter
scas
popf
scas
ror
add
clc
mov
fs
sbb
and
adc
ja
lods
in
test
shr
call
pop
fcomi
add
dec
jp
add
mov
pop
push
clc
(bad)
push
std
jg
stos
lahf
mov
sbb
jl
fcom
scas
movs
mov
pop
or
loopne
mov
push
inc
push
sbb
shl
int
jno
lods
cs
scas
arpl
call
adc
lods
push
cld
add
jecxz
leave
not
jmp
lods
jp
mov
mov
leave
adc
inc
mov
call
iret
fs
xchg
lds
xor
loopne
mov
inc
xchg
dec
(bad)
es
lea
fst
push
mov
cs
sbb
add
xlat
prefetch
out
test
xchg
add
loopne
mov
xlat
sub
pop
sbb
and
out
cmc
outs
stos
idiv
loope
inc
mov
call
stc
mov
xchg
mov
push
(bad)
xor
sub
mov
imul
mov
in
out
xchg
pushf
pushf
aam
in
xchg
pop
cs
gs
mov
dec
rep
cmp
test
fcmovb
xchg
jae
out
in
cmp
sub
lods
arpl
shr
(bad)
lds
xlat
test
mov
mov
xor
jp
rcl
or
retf
sub
xchg
dec
fcmovne
mov
test
addr16
mov
mov
add
dec
and
push
add
inc
test
sbb
sub
lahf
push
dec
jmp
or
mov
shl
jno
push
dec
sbb
cmp
or
mov
addr16
push
push
dec
mov
jecxz
ja
mov
pushf
stos
adc
sub
sub
xchg
jecxz
aaa
mov
cmp
(bad)
inc
fcomp
add
mov
dec
cdq
jns
repz
mul
fdivr
push
enter
and
dec
jmp
ret
push
pop
or
add
xor
or
mov
rcl
test
xor
std
ds
cmp
cli
aaa
xchg
leave
push
dec
ds
sub
dec
pop
repnz
mov
pop
sub
scas
stos
lods
push
sub
and
fmul
and
loop
mov
xor
pop
cmp
(bad)
push
(bad)
cli
xor
xchg
xchg
inc
mov
dec
fs
push
push
movs
and
loopne
(bad)
shr
(bad)
sbb
add
arpl
inc
mov
cmp
cwde
iret
dec
push
fwait
push
out
out
or
cmp
sub
movs
out
adc
cld
ss
inc
or
pop
inc
jle
or
dec
das
cmp
mov
push
jmp
cli
add
jg
sub
mov
ds
stc
jno
outs
movs
shl
ror
adc
fwait
xchg
pushf
jl
mov
dec
aam
xchg
push
push
mov
loop
sbb
add
int
xchg
js
jmp
retf
mov
push
pop
shl
jle
xchg
lahf
push
out
inc
xchg
iret
in
clc
mov
or
jno
in
pop
pushf
in
call
and
pop
mov
mov
pop
(bad)
sub
loope
sar
neg
je
into
sub
mov
lods
xor
daa
daa
xor
dec
retf
(bad)
or
mov
popa
les
retf
cmp
mov
push
and
ins
sub
mov
push
mov
add
(bad)
enter
cwde
(bad)
iret
sub
sahf
xchg
cmps
(bad)
loopne
fist
sbb
js
jmp
mov
int3
jmp
cmps
stos
ret
data16
jae
push
mov
sbb
mov
jb
rol
mov
loopne
pop
pop
pushf
sbb
aas
mov
iret
sub
call
and
dec
aad
adc
sbb
sbb
cmp
cmps
mov
addr16
ins
fs
les
pop
(bad)
movs
cmps
loopne
or
fbstp
mov
add
and
dec
inc
inc
push
lods
and
add
push
push
push
xchg
push
into
pop
call
shl
cmp
and
xchg
shl
xor
aaa
aas
inc
push
std
lds
lahf
inc
das
xor
cmps
lods
pop
iret
jp
sub
xchg
or
xchg
inc
adc
sbb
fcmovnbe
pop
mov
jb
cmp
ss
adc
test
cwde
call
call
sbb
and
jmp
cmc
jp
sub
sub
add
lahf
adc
loope
push
mov
shl
push
jae
inc
push
push
lea
adc
cwde
sub
mov
or
fs
mov
cmp
pop
xchg
pop
out
add
xchg
sbb
fdivp
lock
xchg
retf
xor
nop
sahf
ja
popa
shr
inc
or
xchg
pushf
popf
jne
fwait
jns
sti
xchg
mov
jo
cwde
xor
mov
mov
int
mov
add
out
or
rcr
sbb
jmp
int
mov
fs
in
retf
out
mov
dec
sub
iret
and
fdecstp
sub
dec
jb
adc
test
pop
test
push
imul
inc
cs
sar
sub
sbb
push
out
mov
adc
sti
test
or
jns
mov
loope
sub
into
iret
pop
int
js
xchg
pop
xor
pop
push
aad
push
in
mov
fidiv
jg
jmp
daa
inc
dec
adc
add
popa
movs
adc
mov
xor
pop
fiadd
jle
add
xchg
in
cmp
push
mov
pop
outs
mov
xchg
int3
push
or
dec
adc
mov
jmp
adc
(bad)
push
into
xor
mov
sbb
mov
cmc
dec
xchg
ret
dec
xchg
sbb
imul
fyl2xp1
xchg
int
aam
je
and
test
pushf
cld
loopne
in
rcr
and
outs
jb
pop
ja
sbb
push
lea
test
repnz
inc
pop
in
and
push
loop
cld
mov
int3
adc
icebp
mov
mov
call
xor
call
inc
or
add
cmp
loopne
in
hlt
inc
sub
mov
pop
popf
jmp
out
mov
dec
repnz
je
cdq
mov
sub
pop
pop
dec
xlat
push
adc
push
addr16
movs
mov
scas
jno
xchg
ins
sub
out
dec
mov
mov
shl
dec
inc
cmp
pushf
add
mov
test
es
push
inc
add
cmp
mov
jnp
stos
mov
mov
rcl
push
or
mov
xlat
cwde
mov
mov
and
inc
inc
inc
sbb
mov
or
cmp
adc
add
xor
or
inc
add
push
xchg
pop
sbb
add
loope
sbb
cmps
scas
xor
jmp
mov
add
push
repnz
inc
push
test
inc
enter
cmp
pop
xlat
lea
(bad)
(bad)
sti
pop
pop
adc
cld
cld
rcr
lock
sti
lahf
push
aad
repnz
or
pop
sub
mov
hlt
inc
sbb
pop
test
loopne
adc
ins
jo
mov
mov
inc
pop
lods
jae
popf
ret
gs
inc
and
jle
jecxz
adc
add
fisub
inc
test
jb
sti
ja
loopne
dec
jno
inc
sub
(bad)
xchg
dec
mov
(bad)
or
push
mov
movs
packuswb
jbe
jecxz
jnp
cmp
mov
repnz
ret
or
pusha
popf
mov
cmp
dec
test
fsub
mov
outs
jmp
dec
and
jbe
stc
lods
dec
dec
cmp
mov
test
call
retf
and
xchg
rol
mov
mov
scas
mov
jle
xor
pop
mov
scas
sti
dec
inc
fnstcw
iret
daa
cmp
das
pop
(bad)
ins
xchg
loop
mov
mov
retf
mov
pop
imul
mov
or
ins
inc
pop
xchg
test
mov
dec
mov
fcmovu
pop
ins
pushf
jo
popf
movs
imul
shl
aas
ins
mov
inc
add
mov
cs
sub
fcomp
mov
adc
sub
xchg
xor
push
xchg
xchg
leave
lods
ss
dec
iret
sbb
fsub
fdivr
pop
xor
cs
repz
jae
retf
inc
push
cwde
add
pop
movs
aaa
dec
sbb
cmp
and
sub
leave
push
and
gs
aas
popa
out
sub
adc
dec
out
dec
xlat
dec
cmp
inc
mov
retf
sar
jmp
adc
pop
xlat
shl
rol
ret
add
and
mov
repnz
scas
cld
xlat
mov
push
fwait
data16
mov
repnz
das
repz
jle
stos
mov
xlat
sub
into
into
mov
inc
push
or
jecxz
(bad)
repz
fnsave
ja
shl
push
scas
pop
xchg
xor
iret
dec
sub
inc
jmp
mov
loopne
ins
vpsubq
retf
inc
xchg
imul
loopne
mov
and
push
leave
ins
imul
call
ins
test
es
scas
xlat
lock
int3
xchg
fwait
and
cld
mov
push
hlt
xchg
into
push
sar
jbe
pop
lock
pop
ins
ret
into
rcl
aas
xor
sub
mov
outs
mov
jmp
(bad)
adc
(bad)
push
popf
fnsave
stos
ret
int3
mov
push
add
sub
cmps
add
jecxz
pop
mov
push
ins
mov
adc
aas
ins
sbb
cmp
pop
jg
aaa
jle
adc
fwait
outs
mov
(bad)
aas
sti
dec
or
std
jne
(bad)
out
sahf
(bad)
in
out
cld
sbb
push
fidivr
(bad)
iret
mov
fiadd
clc
jle
mov
inc
shl
jmp
jbe
sar
aaa
sar
div
xor
sahf
pop
fwait
test
aam
mov
mov
push
pusha
or
sub
mov
or
push
sbb
cvtpi2ps
rcl
xor
adc
cli
dec
cmp
inc
sahf
adc
mov
cli
les
and
add
stc
shl
or
ins
lahf
mov
int
das
test
js
je
ss
cwde
adc
push
xchg
mov
push
or
inc
inc
jb
pop
(bad)
fs
xchg
fwait
call
jns
call
test
pop
adc
sbb
sahf
jns
call
aas
int
pop
lods
push
ins
mov
push
push
adc
test
fs
retf
lock
sbb
jecxz
or
xchg
mov
dec
in
jle
out
outs
mov
pop
jmp
fistp
adc
aas
test
sahf
das
call
inc
cmp
clc
or
jae
mov
imul
or
jnp
xchg
mov
mov
ins
xchg
aas
add
div
ret
jb
pop
aaa
and
and
jle
xchg
sub
add
lds
popa
sub
fiadd
fild
ins
or
push
data16
lea
ins
(bad)
fnstcw
mov
add
mov
mov
fld
pop
cmps
jno
ins
jo
mov
cmp
xchg
push
sti
dec
(bad)
jle
add
out
popa
stc
mov
shr
cmp
mov
mov
jmp
das
jg
shr
or
sub
movd
cmp
cmc
and
sub
add
call
(bad)
cmp
(bad)
clc
(bad)
jns
cmc
xlat
pop
cs
mov
jg
adc
xchg
pop
cmp
lock
mul
mov
cmc
pop
push
cmc
leave
dec
repnz
pop
mov
xchg
arpl
fsub
int3
inc
test
push
xchg
hlt
jbe
mov
jmp
jae
jp
(bad)
jmp
test
adc
push
fnstcw
pop
ret
in
vmovapd
nop
mov
mov
mov
call
push
lods
leave
dec
enter
lds
jg
adc
mov
retf
pop
xchg
mov
popf
loopne
cmps
imul
mov
fldcw
outs
out
xor
adc
jbe
ds
(bad)
iret
sti
sbb
hlt
sbb
sahf
stos
push
retf
aas
enter
test
fist
out
jle
inc
add
and
pop
cmps
add
rol
bound
pop
pop
sub
add
jecxz
rcr
ret
or
add
mov
daa
inc
push
jo
out
pop
(bad)
lock
leave
sub
mov
xchg
aas
leave
shl
xor
(bad)
div
std
(bad)
cmp
inc
jg
aas
jmp
call
repz
cmp
cmp
rcl
(bad)
dec
(bad)
clc
jmp
and
or
outs
inc
xchg
pop
bndstx
retf
call
fimul
sbb
push
test
pushf
pushf
int3
js
(bad)
mov
pop
push
iret
jnp
push
test
xchg
shl
pusha
lea
dec
cmp
and
add
or
popa
sub
mov
fstp
xchg
jl
add
jne
aaa
and
fisubr
add
jle
dec
std
cwde
jae
push
(bad)
js
fidiv
mul
std
dec
es
into
mov
xchg
mov
dec
jb
fbstp
mov
cdq
jnp
xchg
outs
jne
dec
xchg
lock
push
arpl
mov
js
xor
fadd
inc
daa
int3
cmovno
ins
js
call
jle
dec
pop
or
(bad)
jp
dec
stc
in
jg
cmp
jg
pop
sti
cdq
lahf
loope
push
lahf
mov
hlt
ja
(bad)
loop
addr16
mov
add
jae
sti
sub
(bad)
cmp
outs
push
movs
in
cmp
mov
and
dec
and
push
movs
jae
mov
(bad)
dec
pusha
jg
bound
jb
je
cmp
sbb
xlat
aam
(bad)
xor
shl
xchg
(bad)
dec
mul
sti
shl
push
add
loop
repz
xchg
xchg
das
es
fiadd
shl
cli
std
retf
test
dec
push
cmp
mov
adc
(bad)
dec
cmp
push
fcomp
add
xor
jecxz
xor
pop
pusha
cmp
inc
in
pop
(bad)
in
jle
out
rcl
ficom
and
data16
int
(bad)
mov
cli
xor
sbb
neg
lea
push
shl
or
fisubr
repz
aas
inc
or
sbb
inc
es
sbb
jae
sbb
imul
push
imul
push
ds
(bad)
xor
int3
dec
and
jg
out
push
ret
or
add
cld
pop
mov
cmps
or
inc
push
cld
stos
leave
je
pop
xor
dec
ror
xchg
pop
stos
mov
out
pop
cmp
in
ret
cmps
adc
rcl
xor
pusha
jl
mov
xchg
jns
leave
mov
add
ds
push
daa
loopne
scas
jne
in
sbb
out
jae
dec
cmp
iret
sub
add
push
sahf
sbb
inc
and
add
jp
push
push
outs
es
mov
inc
inc
pusha
push
iret
add
gs
and
out
out
sub
sbb
cmp
cmp
or
push
inc
sub
ja
pop
add
mov
add
hlt
dec
and
cmc
lea
call
add
jnp
inc
xchg
jne
aam
xchg
mov
mov
inc
and
pop
hlt
call
adc
adc
xor
inc
mov
rcr
pusha
pop
mov
xchg
ins
ss
es
cwde
xor
call
stos
fwait
xor
push
scas
popf
sub
jae
and
xor
xor
std
sbb
jo
outs
adc
icebp
scas
sbb
mov
fld
ror
inc
shl
adc
and
fcomp
or
lods
(bad)
popa
push
xor
test
into
(bad)
loope
cmp
xor
outs
repnz
dec
in
lods
test
jns
cli
clc
ins
push
cmp
mov
fdivr
add
cmp
mov
mov
in
push
rcr
leave
bound
pop
or
dec
loope
ror
ror
pusha
(bad)
push
mov
(bad)
(bad)
adc
bound
mov
adc
add
mov
sbb
(bad)
loopne
adc
(bad)
mov
xchg
xor
loope
xor
adc
dec
imul
pop
retf
adc
mov
mov
imul
in
(bad)
addr16
ins
jp
add
repnz
dec
jmp
das
push
jne
pushf
or
adc
push
xchg
in
sub
jecxz
and
pop
arpl
add
stos
xlat
out
bound
cs
and
test
jne
xchg
out
or
pop
inc
iret
add
mov
mov
popa
popa
pop
pop
scas
mov
(bad)
mov
mov
sub
das
mov
pop
movs
push
out
xchg
inc
vdivpd
stc
shl
pop
xlat
or
push
pop
call
ror
jle
dec
add
test
cli
cmp
lahf
(bad)
jno
inc
push
dec
cmp
cmp
xchg
sub
or
cmp
or
sbb
leave
jmp
loope
dec
(bad)
enter
xor
rol
push
inc
(bad)
cld
clc
leave
push
rcl
sahf
gs
sbb
retf
in
das
stos
push
int
sub
add
lock
dec
hlt
cmp
push
inc
stos
xchg
popf
and
sbb
in
push
sbb
outs
lahf
mov
sub
retf
imul
hlt
xlat
jg
and
or
pusha
lahf
fidivr
loopne
loope
fld
adc
scas
jmp
cwde
les
aas
xor
adc
mov
(bad)
inc
mov
mov
loop
in
xchg
and
cmp
pushf
xor
stos
lods
iret
and
shl
jle
fnstenv
stos
mov
sbb
adc
or
add
or
cmp
add
cmp
jl
int3
push
inc
pop
pop
inc
stos
dec
adc
cwde
push
inc
xor
jae
jle
aas
fs
popa
adc
cmp
mov
sbb
push
mov
jb
dec
xchg
cmp
mov
ja
mov
fbld
sbb
loop
test
cmp
xor
addr16
loopne
mov
and
out
std
je
xchg
sub
fnstsw
lahf
inc
mov
into
cmc
or
js
sub
cmp
ja
jg
mov
cwde
jns
inc
sub
sbb
dec
xchg
inc
or
sub
mov
sti
sti
and
pop
sub
in
jp
cwde
mov
pop
lock
push
inc
pop
das
mov
xor
sub
push
jecxz
loope
cmp
push
xchg
push
fld
movs
in
ret
popa
aad
xor
arpl
sub
movs
sub
jmp
es
add
inc
push
cmp
neg
fistp
adc
pushf
xor
xchg
inc
sti
out
sub
xchg
adc
xchg
and
fimul
jecxz
imul
sar
push
sub
push
xchg
bound
loopne
dec
adc
jmp
mov
and
in
lods
loop
mov
and
out
sub
retf
sub
stc
inc
sbb
or
call
outs
pop
push
xlat
sub
jno
rcl
pop
movs
or
(bad)
loopne
cmp
imul
pop
cdq
or
sti
shr
into
jae
and
mov
(bad)
arpl
dec
inc
xor
pusha
cmp
fsub
dec
jbe
out
jl
adc
jmp
mov
outs
mov
icebp
jne
outs
loop
inc
add
xchg
sub
aam
pop
test
aad
jmp
cmps
jecxz
lods
add
jle
xchg
jg
test
add
test
popf
cmps
jmp
sbb
bound
ins
cmp
push
pop
inc
pop
xchg
gs
sar
or
jno
inc
push
xchg
ins
call
push
adc
imul
imul
add
lock
test
call
dec
test
xchg
dec
dec
cmps
push
sub
retf
xchg
shr
ins
jne
(bad)
(bad)
ins
jmp
jns
xor
push
fild
jns
hlt
push
sub
pushf
rcr
fist
call
jmp
add
xor
inc
dec
imul
iret
cwde
stc
jmp
fcom
cdq
fcom
sub
or
mov
js
mov
mov
add
scas
dec
idiv
sbb
add
dec
add
arpl
shl
jno
pop
push
push
call
push
push
arpl
sub
pop
ja
cmp
or
cmp
imul
sub
mov
dec
loopne
mov
dec
sub
mov
bound
inc
sbb
fistp
jl
repz
sar
inc
popa
mov
mov
data16
adc
pop
and
and
or
leave
xor
or
xchg
lahf
mov
xor
mov
cmp
mov
xor
and
and
or
adc
lock
cmp
xchg
dec
jl
je
dec
arpl
data16
rcr
add
fidivr
mov
and
cmps
fadd
xchg
jno
push
fsub
add
lds
shr
addr16
out
cmp
ror
js
ret
jl
pop
jmp
das
shl
adc
push
addr16
adc
mov
int3
adc
pop
lods
or
xlat
inc
push
popa
mov
xor
call
inc
xor
std
mov
scas
or
repz
inc
add
cmp
cli
sub
dec
mov
mov
inc
mov
(bad)
rcl
jmp
pop
xor
push
mov
rcr
imul
lahf
push
push
xchg
sbb
mov
mov
and
or
lods
mov
call
sbb
mov
sbb
dec
hlt
push
(bad)
pop
xchg
retf
pop
jge
push
jo
mov
das
mov
push
sar
add
js
jmp
es
loop
xchg
cli
pusha
into
aaa
mov
(bad)
ja
out
and
adc
dec
push
repz
hlt
sti
jne
movs
out
push
jno
mov
jo
fdivr
add
imul
push
pushf
dec
aas
cs
xor
lock
push
sbb
mov
(bad)
mov
lods
mul
or
pop
push
jb
dec
pop
cmp
add
movs
mov
inc
adc
ins
cmps
dec
cmps
test
inc
popa
nop
inc
pop
cmps
xor
dec
in
jl
add
scas
xor
xor
lock
adc
push
rol
imul
jmp
sbb
jmp
mov
push
movs
jg
xor
sub
cmp
sti
and
shl
pop
fimul
(bad)
pop
push
adc
mov
sar
adc
ret
adc
and
sub
clc
test
mov
aam
(bad)
pop
jl
xchg
xchg
in
rep
mov
jmp
jmp
call
aas
ins
and
jecxz
jp
push
pop
repnz
int
adc
loope
mov
and
add
cmp
movs
mov
xor
js
add
cmps
dec
or
inc
cmp
(bad)
jle
in
mov
movs
and
dec
iret
add
jl
(bad)
jo
mov
or
ins
mov
loop
jecxz
adc
mov
mov
inc
pop
sar
fcmove
rcr
je
adc
xor
add
inc
mov
mov
test
gs
nop
stc
or
add
out
inc
push
imul
aad
out
retf
js
xor
adc
adc
or
sub
jecxz
shl
test
loope
(bad)
(bad)
(bad)
das
stc
in
dec
mov
push
(bad)
fisttp
jle
lahf
mov
push
ss
das
out
mov
jmp
cmp
rcl
inc
add
test
(bad)
and
mov
pop
(bad)
sti
ja
jno
lea
or
add
and
xor
add
or
add
or
jns
lods
cs
scas
sub
mov
(bad)
dec
jnp
leave
cmp
sbb
push
cmp
push
nop
lods
fst
lds
(bad)
call
sbb
popf
push
cmp
sub
push
and
int3
test
into
(bad)
es
jb
dec
cwde
data16
push
fs
arpl
(bad)
ds
xchg
and
and
add
cmp
sbb
ja
stos
test
or
dec
clc
pop
shl
mov
sub
pop
pop
outs
or
ds
sub
call
sbb
sub
lea
repz
or
nop
(bad)
sti
(bad)
jns
dec
jl
or
scas
push
jns
test
mov
cwde
pminsw
mov
jno
and
sub
(bad)
cwde
ins
rcr
lods
jae
repz
and
ret
push
les
ret
in
jns
and
and
add
jnp
mov
mov
mov
xchg
mov
mov
xor
and
dec
iret
cmps
jmp
repz
jnp
pop
or
ds
mov
call
push
cld
jecxz
bound
add
clc
je
xchg
push
mov
xchg
xor
xor
hlt
iret
xor
js
fsub
enter
mov
neg
mov
mov
and
sub
enter
test
mov
pop
(bad)
dec
sub
cmps
pop
jmp
idiv
xor
or
popa
mov
ins
sbb
outs
add
add
mov
(bad)
into
popf
mov
cmp
cli
xchg
aas
loope
stos
sti
mov
xchg
ins
cs
mov
fst
cwde
add
es
xor
aam
ss
sub
mov
jge
ret
outs
mov
adc
push
mov
jnp
jg
add
das
jno
dec
je
sub
test
mov
dec
jmp
pop
sti
fs
fs
leave
dec
jnp
inc
push
cmp
xchg
mov
push
jl
jmp
iret
cmp
pop
ret
jge
dec
pushf
push
sbb
outs
adc
popf
rcr
sbb
cmp
xchg
jge
dec
and
mov
xor
add
and
mov
cmc
cmp
movs
mov
popf
dec
add
repz
(bad)
out
in
adc
and
xchg
jle
xchg
scas
fadd
add
push
push
retf
mov
jecxz
js
aad
lock
mov
loopne
mov
stc
mov
mov
inc
lock
sub
xchg
int
ret
jp
out
in
mov
daa
cmp
repnz
icebp
dec
rol
cmps
stos
dec
dec
in
sub
shl
mov
cdq
sbb
stos
leave
data16
sahf
sub
mov
mov
retf
lds
xchg
cld
add
xchg
out
cdq
sahf
loope
fiadd
push
cmp
and
add
push
ficomp
inc
mov
sub
and
sti
push
xor
adc
adc
lds
es
stos
inc
xchg
clc
dec
mov
mov
ds
push
xor
mov
stc
aad
and
cs
cmp
loope
mov
xchg
inc
fadd
or
push
xchg
outs
add
pop
(bad)
jl
out
mov
idiv
fsub
ror
cli
jecxz
addr16
loopne
hlt
adc
call
xor
cmp
fnclex
cmp
into
sbb
xchg
stos
inc
pusha
popf
popf
pop
jo
dec
or
xor
fwait
dec
xor
scas
inc
xchg
push
xchg
call
shl
push
test
stos
push
inc
popf
add
fs
mov
sub
cld
outs
mov
xchg
xchg
mov
fadd
push
aad
or
jns
mov
xlat
jns
push
mov
jo
jmp
bound
lods
inc
data16
std
add
adc
adc
jb
imul
inc
loope
push
push
outs
adc
popa
imul
iret
jmp
or
or
cmp
arpl
or
sbb
lds
loop
fucomi
lock
scas
jno
xchg
mov
(bad)
inc
aad
(bad)
mov
out
jnp
add
cmp
jmp
cmp
loope
mov
jns
test
pushf
sbb
je
add
cmc
nop
add
adc
pop
dec
femms
dec
xor
scas
pusha
pop
xchg
mov
mov
dec
out
fmul
cdq
push
jno
cmc
inc
in
(bad)
pusha
mov
xchg
scas
jl
adc
mov
inc
ret
test
stc
hlt
scas
jae
popf
mov
and
and
inc
repz
cs
out
fs
mov
call
push
fcmove
jmp
mov
or
pushf
stos
xor
push
in
sbb
aaa
mov
jg
repz
fisttp
xor
jmp
add
add
sbb
jle
add
idiv
add
sbb
dec
mov
into
pop
pop
sbb
fisubr
or
(bad)
sti
je
fld
push
popa
inc
lea
bound
rcl
in
and
sub
xor
js
addr16
ds
pop
cdq
cs
into
sbb
fcmovnbe
hlt
in
ja
pop
and
and
cwde
inc
push
add
mov
cs
rol
loope
call
or
data16
adc
je
(bad)
mov
inc
jbe
xor
and
add
or
add
xchg
mov
or
inc
adc
add
mov
inc
pop
in
enter
adc
inc
shr
ss
mov
pusha
jp
jne
sahf
test
cmps
inc
rcr
mov
scas
dec
pop
adc
jg
ret
out
sub
adc
lds
in
push
cmps
jle
pop
add
add
lods
sub
fnstenv
xchg
pop
leave
clc
int
sub
lock
(bad)
mov
shl
inc
add
loopne
push
sbb
aas
rol
loope
mov
out
(bad)
fistp
imul
add
add
mov
add
add
test
jo
mov
cmps
jg
into
imul
das
add
adc
xor
push
ret
retf
fcomip
mov
add
adc
pop
pusha
in
mov
bound
adc
add
rcl
and
div
mov
xlat
jne
cmp
mov
or
fnsave
mov
repz
les
test
pop
push
neg
movs
or
and
adc
cmp
push
or
hlt
dec
sbb
int3
retf
inc
inc
xor
icebp
shl
or
in
push
cmp
xor
xchg
adc
out
pushf
cmps
mov
inc
add
dec
addr16
mov
je
mov
int
shl
jns
ficom
std
add
std
sbb
movsx
mov
into
xchg
mov
iret
xlat
sub
mov
imul
out
add
mov
movs
sidtd
xchg
pop
xadd
mov
sub
cli
sub
sar
cmp
mov
mov
adc
(bad)
mov
aas
hlt
inc
adc
jmp
daa
sbb
push
adc
add
jae
xor
adc
dec
mov
sub
mov
mov
dec
mov
add
fstp
idiv
mov
call
and
dec
inc
inc
push
loopne
pop
pusha
and
jb
pop
out
inc
adc
xor
dec
or
jne
popa
ins
sub
jp
cmp
pop
inc
rcl
dec
pop
adc
ror
lds
xor
inc
add
mov
popa
call
pop
xchg
loop
pusha
cmp
ins
mov
and
sub
and
add
test
(bad)
or
jle
clc
mov
add
cmp
shl
in
mov
aas
std
cmp
jl
push
mov
ror
jmp
mov
fs
sub
dec
or
hlt
leave
adc
and
xchg
push
push
fucom
jecxz
push
retf
mov
es
movs
int
test
mov
enter
inc
and
pop
scas
in
xor
and
and
pop
xchg
jmp
lods
inc
push
shl
pop
add
jg
and
push
mov
test
shl
es
add
in
(bad)
outs
mov
rol
sti
leave
inc
sbb
jge
push
mov
int3
add
sub
cmp
cmp
cs
add
or
loope
or
cmp
cld
mov
sar
rcr
retf
xchg
hlt
xor
test
xchg
rol
jne
js
popa
and
mov
xlat
test
imul
outs
rcl
jo
push
retf
or
not
lahf
hlt
jg
sub
or
sbb
test
aad
cmps
push
(bad)
mov
pushf
xchg
hlt
retf
xor
xchg
aas
and
xor
dec
mov
or
mov
sbb
sar
call
inc
pop
jns
enter
mov
push
xor
mov
jecxz
and
cmps
cmps
and
sbb
or
mov
mov
lahf
cmp
inc
test
hlt
fild
mov
mov
jo
jb
xchg
call
(bad)
ficom
mov
outs
add
mov
pusha
jb
and
xor
sbb
xchg
and
sub
aaa
pop
in
cdq
add
fcmovu
jbe
shr
jmp
jbe
xor
cmp
dec
dec
push
popf
cmp
cmp
or
jno
inc
repz
xchg
push
adc
ins
test
stos
sub
bnd
dec
out
out
xor
arpl
inc
xchg
pop
sub
pop
cmp
jl
add
add
lea
xor
or
adc
xchg
lds
fisttp
xchg
loope
jnp
bound
ret
xor
mov
pushf
fdivr
push
inc
imul
sbb
out
pop
out
call
dec
ds
cmp
dec
(bad)
jnp
outs
fdiv
adc
popf
sub
pop
xchg
adc
adc
inc
call
jmp
jb
(bad)
cmp
shr
test
call
xlat
lfs
jnp
in
push
pop
xchg
xchg
hlt
fist
add
cli
test
cmps
push
adc
enter
rcr
sub
mov
pop
adc
mov
sub
sbb
xchg
or
icebp
xchg
inc
rol
and
adc
jno
outs
inc
adc
jp
cmps
aam
jl
rol
in
dec
iret
add
sbb
jmp
dec
sbb
and
leave
test
out
or
psubw
mov
xor
ja
lahf
adc
cmc
or
mov
add
shl
xor
xlat
add
jmp
dec
push
push
fdiv
xor
pusha
fdivr
jl
popa
inc
sbb
mov
imul
mov
ret
jbe
or
fcmovnu
jecxz
jmp
fwait
lods
xchg
push
int3
adc
(bad)
and
and
or
mov
fisub
add
jecxz
rcl
ins
idiv
jbe
call
(bad)
cmp
and
mov
mov
and
or
mov
or
or
adc
cmp
cmp
retf
mov
mov
mov
hlt
sar
xor
and
data16
fs
xchg
imul
or
adc
push
add
into
pop
or
clc
fsubr
jae
sub
(bad)
leave
and
lahf
mov
dec
call
clc
and
xor
add
add
pop
int
dec
cmps
cmp
jecxz
jp
(bad)
movs
or
daa
stos
mov
mov
fidivr
ds
or
mov
stc
add
daa
jge
cmp
dec
fld
sahf
xor
xor
push
adc
xor
mov
mov
(bad)
les
dec
pop
pusha
jp
sbb
dec
cmp
push
into
rcr
cmp
add
dec
movs
(bad)
psrad
and
stc
push
and
adc
adc
or
push
leave
or
cwde
or
pop
pop
sbb
cmp
and
mov
out
cmp
and
xor
arpl
gs
loopne
and
jns
(bad)
ds
xor
push
jbe
(bad)
(bad)
mov
fucom
add
jno
pusha
or
popa
dec
gs
adc
xchg
add
sti
aas
mov
jp
jecxz
out
cmps
sti
fnsave
jae
lods
pop
sbb
stos
inc
loopne
cmp
adc
jno
(bad)
mov
xor
push
aas
adc
call
or
mov
lods
cmp
add
or
mov
fs
imul
mov
cmp
dec
mov
(bad)
sbb
push
dec
data16
pop
into
mov
sub
loope
xor
and
mov
in
xor
aas
and
(bad)
out
cmp
fwait
xor
sub
movs
sub
mov
sti
mov
jmp
mov
add
xchg
dec
dec
arpl
cmc
cmp
stos
lods
jmp
ja
addr16
pop
adc
dec
cmp
xor
mov
jne
fs
lea
retf
scas
imul
cmp
cdq
rcl
cmp
mov
out
lods
mov
mov
stos
mov
mov
sbb
dec
or
movs
pop
mov
nop
add
adc
jle
adc
(bad)
push
sbb
sbb
or
aas
ja
cli
fnstenv
mov
xor
div
movs
mov
lods
mov
fsubr
add
sub
call
sbb
sbb
loope
inc
adc
inc
mov
adc
es
cmps
mov
ss
add
shr
movs
stos
mov
das
ja
dec
jg
fwait
mul
mov
add
mov
(bad)
mov
pushf
fistp
and
or
inc
jae
es
pop
cmp
jbe
movs
or
leave
jns
inc
(bad)
not
xchg
add
pusha
mov
call
push
push
add
dec
push
adc
mov
outs
scas
ja
es
mov
dec
inc
cli
mov
inc
mov
test
add
or
jb
sbb
adc
pushf
or
ss
push
inc
aad
add
or
jecxz
jbe
adc
shr
jns
ja
hlt
push
or
int
or
(bad)
out
(bad)
adc
add
test
jb
pop
ins
hlt
es
push
add
daa
add
test
repz
mov
xchg
add
xchg
add
xchg
add
cmp
xor
xchg
cwde
add
jg
mov
inc
cmps
add
sbb
int3
(bad)
push
jle
jecxz
jb
and
inc
mov
mov
push
push
inc
xchg
sar
sbb
inc
inc
adc
jp
cs
rcl
gs
out
and
movs
nop
inc
movs
mov
sar
daa
mov
adc
repnz
jnp
push
mov
xor
jmp
enter
xor
sub
imul
dec
nop
sar
and
push
sbb
adc
and
and
jle
add
stos
jle
push
xchg
push
sub
in
push
lds
xor
jmp
add
dec
adc
add
add
call
neg
js
xor
paddsw
sub
push
jp
xchg
retf
enter
popf
fcmovnb
add
loopne
outs
adc
inc
adc
mov
push
mov
retf
push
hlt
mov
push
jle
adc
(bad)
lock
inc
sub
adc
aad
(bad)
and
inc
js
(bad)
and
dec
les
or
add
dec
ja
jbe
jne
gs
lea
stos
popa
ret
xor
dec
test
push
call
push
rcr
je
cli
(bad)
or
adc
dec
and
or
dec
jo
xadd
jge
movs
push
arpl
(bad)
(bad)
inc
stc
cmp
sar
inc
(bad)
hlt
das
js
into
mov
mov
aaa
cmp
je
mov
lea
and
jge
rol
fwait
mov
jae
inc
mov
cmps
sub
jne
movs
test
sub
or
push
mov
std
pop
pop
sahf
out
mov
sti
call
cmp
jl
(bad)
(bad)
call
addr16
(bad)
xor
and
sub
push
movs
jb
add
push
or
pop
cmp
mov
mov
pop
sti
rcl
or
rol
push
arpl
jne
int
adc
sub
push
fisub
pop
aam
nop
clc
(bad)
jns
xor
jle
or
xchg
pop
stos
fiadd
stos
fstp
sar
add
xchg
or
jmp
and
sti
nop
inc
jp
mov
mov
pushf
sub
lahf
add
aas
add
inc
dec
sub
and
ins
or
jno
fcmovb
aam
xor
and
daa
xor
xchg
add
xlat
test
or
xor
mov
cmp
and
xchg
sbb
mov
mov
jle
inc
or
sub
fld
push
shr
sar
mov
ins
sbb
sar
adc
movs
and
push
and
xlat
popf
aas
sahf
outs
jmp
xor
mov
out
adc
inc
ds
ret
std
sti
cmp
mov
repz
mov
inc
stos
aas
xchg
cmp
and
in
je
call
and
mov
jns
xchg
cmp
adc
imul
mov
les
cmp
and
cs
sbb
mov
mov
mov
or
jmp
loopne
in
ss
pop
or
int
in
sub
addr16
test
or
pusha
and
mov
pop
sbb
xchg
es
jge
pop
ins
mov
ja
dec
sub
xchg
pop
pop
(bad)
scas
push
retf
test
stos
lock
clc
and
xlat
aaa
shr
jmp
clc
pusha
loop
rcl
int3
retf
aas
pop
push
loopne
inc
inc
add
cld
push
in
push
jg
addr16
push
adc
test
add
and
jno
loop
les
sub
add
pop
outs
add
mov
push
loopne
adc
or
add
inc
jo
add
adc
mov
jns
sub
inc
jp
stos
push
sbb
cmc
xchg
(bad)
cs
aad
clc
sbb
enter
mov
outs
pop
sbb
xor
push
mov
xor
xor
adc
mov
mov
retf
dec
sub
sbb
fwait
pop
test
ins
cmovb
jmp
jp
in
mov
mov
add
outs
into
add
into
push
lods
push
push
stos
push
mov
cld
add
int
(bad)
xlat
xlat
int
stc
test
cmps
addr16
mov
cli
stc
cmp
fwait
fwait
fwait
pop
rcl
cld
jae
inc
jb
dec
mov
jmp
or
stos
leave
inc
or
and
movs
mov
jmp
sbb
jne
adc
jp
sti
imul
(bad)
in
mov
jg
ret
pop
out
mov
std
in
cmp
dec
std
inc
push
sbb
mov
fld
ret
inc
dec
inc
mov
add
sub
test
xchg
in
test
xchg
jle
or
(bad)
jmp
fisub
sub
pop
pusha
mov
bound
inc
adc
repz
pop
shr
inc
aam
adc
ffreep
fmulp
pop
cmp
fwait
pop
push
jmp
jno
push
and
xchg
inc
inc
lods
xchg
push
pop
imul
mov
leave
dec
cmp
repnz
div
push
ins
shr
inc
sub
sbb
repz
data16
adc
sub
inc
adc
(bad)
cvtps2pd
and
jae
cmp
arpl
dec
sbb
arpl
outs
pop
mov
loop
xor
adc
mov
stc
arpl
sub
retf
jg
mov
and
push
test
popa
push
xchg
sub
stos
mov
pop
pop
cmovg
mov
and
jmp
aam
and
imul
mov
fs
shl
mov
adc
xchg
and
and
jmp
je
push
out
(bad)
push
scas
jo
cmp
mov
jle
ror
(bad)
lock
(bad)
pushf
mov
stos
scas
dec
data16
bound
icebp
daa
out
iretw
sbb
jle
stc
in
stc
or
pop
jle
xchg
daa
jle
sub
test
outs
mov
dec
sbb
xlat
mov
dec
add
rcl
cmc
xor
push
pop
out
push
(bad)
and
and
fiadd
add
xchg
movs
daa
or
jae
pusha
fisub
cmp
sub
fwait
hlt
push
enter
inc
jmp
inc
call
aad
mov
and
sbb
cmp
and
dec
cmps
(bad)
mov
xchg
ficom
mov
inc
adc
int3
mov
cmp
call
movs
fcom
es
adc
jb
sub
pop
or
imul
dec
pop
mov
pop
cmps
xor
call
jg
neg
pusha
aas
add
gs
sub
jmp
gs
in
mov
imul
or
pop
add
ss
call
jbe
test
shl
das
cmp
aam
outs
jle
mov
out
mov
ins
clc
scas
sbb
and
xchg
push
fldcw
les
leave
xchg
inc
mov
mov
jle
into
sbb
stos
fst
movs
cdq
inc
push
mov
mov
inc
ror
and
scas
(bad)
cmc
mov
icebp
ja
ja
fisubr
jg
dec
les
mov
mov
es
out
jmp
mov
stos
fisttp
inc
cld
sub
jae
and
js
loope
in
shl
call
test
push
mov
es
mov
inc
or
fistp
(bad)
push
(bad)
aad
imul
mov
inc
mov
xor
mov
icebp
jge
sbb
in
lds
loop
in
cld
shr
int
jg
mov
(bad)
hlt
cmps
aas
(bad)
fcmovbe
aad
pop
sbb
loopne
add
push
add
cli
dec
push
arpl
add
(bad)
add
jmp
mov
add
cdq
out
xchg
mov
mov
jl
or
sub
cmp
mov
pop
rcl
push
lea
test
aam
jp
jno
pop
sbb
movs
jp
push
pop
test
out
mov
mov
call
cmp
adc
rcr
or
dec
mov
aas
add
pop
xor
sbb
movs
sub
adc
lds
push
mov
sub
out
bound
pop
pushf
mov
jmp
push
stc
(bad)
mov
dec
std
push
test
es
push
pop
mov
aaa
inc
cdq
xor
popf
test
push
jmp
(bad)
lahf
js
cld
mov
dec
cmp
mov
sbb
jle
retf
inc
pop
xor
push
mov
push
adc
popa
xchg
jp
jo
dec
enter
bound
xor
jmp
jo
or
(bad)
ss
lods
add
dec
or
push
adc
add
or
bound
scas
sbb
jle
movups
dec
cwde
inc
xchg
pop
ja
lea
aad
add
dec
inc
popf
inc
xor
data16
adc
sbb
xchg
push
mov
or
sbb
and
rcr
xchg
cmp
mov
dec
int3
xchg
push
(bad)
lock
adc
xor
fcomp
pop
lea
int3
enter
and
xor
push
loop
jnp
and
xchg
mov
cmp
rcl
pusha
adc
lahf
pop
sbb
add
sub
repz
call
pushf
cmp
sbb
(bad)
sti
(bad)
into
ja
in
jns
or
or
and
das
inc
mov
(bad)
adc
mov
sub
jmp
cs
movs
jbe
jmp
mov
mov
jl
add
xor
pop
jo
(bad)
xlat
jbe
fcomp
and
sub
sub
les
fldl2e
aad
inc
dec
jmp
or
stc
data16
sub
add
jmp
sbb
inc
and
mov
inc
ins
pop
jmp
int
cmp
push
int
sub
sar
arpl
jo
jl
sub
vpmullw
cmp
dec
sbb
fiadd
mov
inc
(bad)
movs
fisubr
jge
jecxz
adc
sbb
sbb
adc
xchg
cmp
cmp
and
or
jo
xchg
or
cmp
int3
mov
mov
mov
cdq
cdq
cdq
mov
jmp
imul
or
mov
leave
cwde
rol
pop
add
idiv
adc
pop
pushf
hlt
inc
lea
cli
jne
jbe
push
in
int3
xchg
sbb
xchg
pop
add
arpl
cmp
aam
rcr
addr16
shl
adc
not
mov
imul
out
or
aas
add
cmp
(bad)
(bad)
jae
es
jo
add
and
dec
and
mov
scas
jg
repnz
add
push
cmc
fadd
mov
cmp
cmps
jmp
jl
mov
clc
fmul
(bad)
lods
int
lock
aaa
inc
xchg
js
outs
mov
mov
movs
out
stc
dec
xchg
xor
jmp
jmp
es
push
or
xchg
ret
inc
into
leave
pop
mov
pop
scas
xchg
out
out
mov
repz
fucomi
inc
push
cmp
aas
xchg
dec
jo
push
outs
shl
pop
push
rcl
xor
jae
sub
xor
add
inc
and
sub
sahf
sar
xchg
jmp
xor
sahf
leave
jnp
xlat
mov
sar
cli
stc
test
dec
and
mov
je
and
fs
push
pop
push
mov
(bad)
dec
test
or
sbb
push
xor
mov
scas
jl
adc
cli
int
adc
ds
lods
jle
lds
popf
sub
ss
push
nop
aam
jle
xor
xlat
mov
neg
push
inc
add
stos
lahf
test
je
jg
add
add
call
sub
push
in
fsubrp
jne
popa
call
ds
stc
dec
movs
pop
lods
std
aas
jg
push
fistp
mov
pop
pop
inc
or
inc
clc
inc
mov
bound
jb
and
xor
cmps
call
(bad)
xor
jns
leave
fsub
add
movs
out
shl
adc
add
mov
call
jb
leave
test
mov
sbb
pop
stc
not
xor
das
movs
and
pushf
push
pushf
and
(bad)
push
into
add
lock
xor
cmp
sub
mov
sahf
ds
shl
test
mov
mov
add
out
push
aas
lea
hlt
jge
aad
adc
fdivr
lods
adc
mov
inc
inc
loopne
rol
in
push
ds
mov
adc
(bad)
movs
pop
into
aas
neg
or
dec
movs
pop
sub
out
jg
test
inc
scas
hlt
(bad)
push
and
in
dec
adc
inc
jge
xchg
dec
retf
mov
pop
ds
fisubr
movs
push
pop
into
add
or
inc
xchg
out
je
push
and
xchg
or
add
leave
inc
aam
mov
icebp
cmp
dec
clc
mov
push
add
in
popa
(bad)
dec
xchg
sub
popf
sub
cmp
add
iret
fdivr
retf
lock
xor
sbb
popa
cwde
(bad)
mov
shr
inc
push
pop
mov
push
mov
add
cmp
xor
pop
or
or
xor
lahf
data16
adc
inc
mov
retf
imul
jge
pop
(bad)
sub
mov
sbb
adc
neg
stos
add
pop
jo
sar
shl
gs
cmc
cld
xor
pop
mov
xchg
clc
pop
inc
out
adc
adc
or
mov
dec
and
xchg
dec
xor
inc
or
into
inc
(bad)
in
rcr
cli
jl
stc
aas
sub
imul
mov
or
pop
or
mov
aaa
sub
loop
mov
xor
addr16
icebp
sbb
cmp
ja
jecxz
dec
gs
ins
fadd
xor
sub
cld
imul
mov
(bad)
enter
js
jg
xor
mov
loope
enter
add
or
popa
sbb
mov
ret
push
mov
jno
icebp
outs
(bad)
in
jg
jl
aaa
jp
aas
or
cmp
add
mov
sub
jb
aam
cdq
xor
aas
nop
adc
xchg
in
inc
std
cmps
or
dec
mov
inc
sbb
je
dec
add
(bad)
pop
fld
pop
dec
pop
int
test
or
inc
add
dec
inc
sbb
adc
and
sbb
dec
dec
sub
xchg
rcl
add
pop
les
jb
or
mov
jle
xor
inc
shl
push
popa
shl
inc
mov
pop
cli
lea
jle
mov
loopne
stc
add
lods
jle
and
sub
mov
jle
sbb
adc
xor
inc
and
jns
push
sub
jle
pop
dec
(bad)
or
rcr
mov
out
(bad)
inc
sbb
adc
xchg
addr16
mov
adc
stc
pop
mov
mov
fstp
or
xor
inc
sbb
or
mov
xchg
dec
das
push
xchg
test
and
inc
jo
sbb
pusha
fistp
je
or
jmp
xor
jg
xlat
scas
bound
pop
sbb
cmp
out
ja
fcomp
pusha
jnp
(bad)
into
sahf
lea
cmp
add
xchg
xchg
add
adc
cmc
xrelease
and
mov
rol
add
xchg
hlt
adc
ror
arpl
jb
pop
sub
(bad)
pop
mov
sub
pop
mov
setge
(bad)
ret
and
out
cmps
ss
xlat
movs
jg
cwde
int
inc
popf
lahf
push
dec
imul
lock
sub
test
add
sbb
push
lea
adc
int
(bad)
idiv
pushf
mov
daa
xchg
dec
rcl
stc
ins
sbb
add
(bad)
aaa
mov
fadd
or
or
dec
add
push
loop
xchg
clc
test
popa
pushf
inc
cmp
jp
sar
sub
push
je
add
fcomip
loop
or
jl
ss
mov
lahf
pushf
inc
fisubr
cmp
in
dec
xchg
inc
inc
shl
jp
xor
jo
fisubr
ss
xchg
jno
lods
xchg
fld
inc
mov
lock
add
add
dec
fwait
or
mov
jle
dec
and
xlat
adc
mov
xchg
sbb
ret
std
or
mov
neg
mov
iret
cmp
shr
pop
mov
mov
sbb
cmp
push
mov
mov
mov
pushf
(bad)
aas
dec
mov
adc
add
add
mov
out
xchg
mov
test
cli
std
push
or
pusha
outs
popa
popa
push
jl
sub
outs
jle
fbld
xor
jg
es
push
mov
nop
call
push
daa
xlat
aas
js
je
jmp
std
ficomp
add
scas
or
mov
push
out
mov
push
test
into
inc
ds
inc
mov
or
test
add
fcomp
in
fucomi
mov
aas
mov
add
jae
mov
push
and
or
bound
xchg
popa
push
or
jmp
sub
sbb
or
or
or
adc
jo
adc
jmp
mov
jae
mov
sahf
push
iret
jp
mov
test
jmp
(bad)
test
pop
adc
xor
es
into
loopne
fidivr
mov
dec
and
or
hlt
sti
jge
or
mov
in
jge
out
in
in
hlt
pop
jnp
mov
or
in
cwde
sar
adc
repnz
and
add
cwde
adc
jnp
and
cmc
mov
mov
or
sbb
cmc
repz
mov
hlt
fs
or
xor
dec
xchg
adc
pusha
xor
mov
(bad)
or
shl
adc
inc
push
stos
adc
aam
lock
adc
mov
out
(bad)
xlat
aaa
mov
mov
(bad)
jmp
outs
arpl
inc
mov
add
sbb
sbb
push
jne
xchg
dec
add
rol
push
sbb
push
mov
clc
mov
push
sahf
add
mov
pusha
xor
clc
mov
fld
icebp
inc
adc
ja
xchg
mov
xchg
pop
adc
sbb
xchg
add
ror
test
ins
addr16
lea
iret
add
(bad)
add
pop
das
hlt
shl
jg
fadd
pop
jge
ds
mov
repz
out
repz
clc
ret
aas
cld
ins
iret
repz
aaa
fidivr
(bad)
shr
nop
dec
loopne
sub
call
and
dec
push
cmps
outs
sub
dec
movs
cmp
sahf
vpmaddwd
mov
mov
xor
test
adc
mov
sahf
jmp
aad
inc
adc
xchg
adc
repnz
repz
retf
and
ror
lahf
add
mov
imul
cmp
aad
mov
mov
mov
push
rcr
pusha
pop
add
test
add
out
push
cmp
cmp
jge
or
pop
sbb
aas
sti
ficom
not
arpl
push
imul
test
pop
push
icebp
pop
(bad)
adc
fist
or
add
xor
repz
jle
jmp
dec
cli
sub
mov
mov
cs
mov
push
sub
cmp
in
(bad)
mov
loopne
adc
adc
xor
nop
cmp
cmp
and
icebp
sub
call
mov
sbb
adc
add
cmps
sbb
mov
cs
pop
mov
cs
(bad)
ret
in
push
jmp
jb
mov
jmp
shr
je
sti
into
sub
stc
lds
lock
outs
scas
mov
shr
lods
add
js
popa
push
and
test
les
std
loop
adc
push
inc
mov
mov
add
cmps
pop
clc
jmp
popa
jnp
sbb
mul
ins
mov
fucomi
mov
jmp
push
(bad)
push
aaa
jmp
inc
fnstcw
sbb
push
shr
and
enter
and
fild
into
cmp
addr16
dec
jnp
shr
icebp
mov
mov
(bad)
mov
jl
jg
sar
in
mov
in
sbb
add
out
sbb
adc
int
cmp
add
add
inc
push
add
pop
ret
sub
sbb
or
inc
adc
add
jl
sub
jl
xlat
add
cmp
scas
xchg
pusha
ret
(bad)
jl
sbb
xor
dec
rcr
scas
xlat
inc
mov
dec
xor
cwde
sbb
dec
movs
sub
push
ret
ds
inc
cmp
js
pop
fidivr
into
sti
jmp
mov
or
cmp
and
push
mov
push
inc
inc
inc
loop
fwait
add
das
add
inc
push
xchg
scas
xor
shl
adc
lahf
push
mov
clc
ret
icebp
mov
jae
popf
outs
dec
fwait
add
aam
cmps
xlat
jge
js
mov
pushf
lea
jecxz
(bad)
ror
and
test
mov
mov
js
(bad)
ja
mov
and
pop
add
mov
xchg
inc
mov
out
jp
jmp
std
int
aas
push
aas
outs
push
inc
mov
dec
cld
dec
xchg
fsub
or
movs
pop
jns
fcom
dec
mul
mov
xchg
hlt
add
jmp
pop
arpl
out
aas
mov
add
or
mov
adc
sbb
retf
xchg
add
movs
dec
push
pop
xor
ins
outs
ins
pusha
arpl
test
mov
push
test
cdq
jmp
add
arpl
cmp
pop
mov
fcomp
adc
mov
arpl
mov
jae
adc
inc
xchg
into
dec
sbb
imul
add
ss
clc
clc
aam
cmp
xchg
pusha
pusha
maskmovq
fild
loope
adc
add
aad
mov
outs
cli
mov
int3
jno
loopne
xchg
mov
sub
or
cwde
loopne
push
shr
aaa
mov
sbb
sub
jns
jmp
cmc
mov
sti
cld
pop
pop
mov
lahf
std
fstp
jge
mov
call
test
loop
stc
movs
add
dec
ret
sub
jge
call
mov
jle
jmp
sbb
or
or
push
inc
push
adc
dec
pop
add
or
xor
bound
mov
shl
es
outs
push
or
xchg
mov
jo
mov
dec
(bad)
cmp
retf
fwait
mov
push
pop
int
out
scas
scas
arpl
movq
cli
pop
pop
daa
fcomp
retf
das
cmp
add
enter
rcl
and
cmp
adc
jo
and
or
mov
jg
mov
push
outs
pop
mov
pop
mov
mov
ror
push
out
xchg
and
in
jg
inc
nop
ds
gs
mov
or
js
pop
jmp
jecxz
int
add
call
sti
fadd
loop
mul
push
mov
ja
out
fistp
sbb
lock
pusha
or
mov
push
or
mov
xlat
mov
fld
rcl
outs
sbb
dec
xchg
sub
fisub
mov
cmp
cmp
stos
lock
jae
mov
and
cmps
adc
rcl
gs
mov
cs
mov
inc
adc
cmp
or
push
adc
push
jge
popa
retf
test
rcr
imul
and
ds
xor
adc
cdq
cdq
jns
cmp
leave
ret
bound
movzx
loopne
div
lods
in
ins
lods
sbb
jmp
call
add
sbb
fs
inc
sub
(bad)
sub
lea
stc
pop
jo
pusha
call
mov
mov
jecxz
outs
fst
xlat
(bad)
dec
jge
pop
push
push
add
mov
push
aad
dec
sbb
ja
ror
(bad)
pop
repnz
or
iret
enter
mov
mov
shl
pop
jnp
leave
or
mov
(bad)
mov
fucomi
idiv
sub
mov
sbb
add
into
xchg
pop
add
shr
pop
xchg
jp
movs
and
push
dec
ret
int3
sub
dec
pop
outs
out
mov
pop
adc
mov
aas
jno
inc
jno
cmps
adc
adc
ins
mov
push
(bad)
mov
out
out
inc
movs
popa
adc
mov
test
cmp
in
shl
loope
sbb
mov
loopne
test
mov
loop
mov
aad
push
or
cmp
mov
in
xor
push
bound
mov
imul
leave
mov
pop
mov
or
jnp
fisubr
and
stc
add
mov
ror
xlat
sbb
inc
jne
outs
pop
cmps
dec
dec
jns
fist
sub
inc
call
pusha
xchg
in
daa
dec
inc
or
adc
out
ret
cmc
xchg
mov
out
ds
clc
sbb
in
in
in
xchg
or
rol
repz
(bad)
hlt
adc
scas
mov
cld
popa
adc
sub
xchg
add
jecxz
out
stos
xchg
inc
xor
hlt
into
xchg
inc
cld
icebp
adc
adc
(bad)
push
pop
hlt
dec
xchg
jle
push
bound
sub
imul
mov
add
rol
loopne
add
js
sub
mov
das
dec
dec
int3
and
and
sbb
pop
adc
push
fbld
xor
lds
and
rol
add
inc
stos
fld
dec
loope
push
jb
sbb
movs
and
stos
jecxz
cmps
mov
sub
xor
test
push
cmp
jp
popf
mov
(bad)
loope
sbb
cmps
popa
out
and
mov
ss
jo
xor
pop
fild
jmp
push
or
sbb
cmp
sbb
icebp
pop
xchg
add
es
icebp
jl
add
and
cvtps2pd
dec
and
out
cmp
xchg
imul
fcomp
pop
pop
cmp
jb
retf
pop
jns
test
pop
pop
jle
or
clc
enter
mov
pop
(bad)
arpl
inc
push
test
dec
shl
adc
and
gs
cmp
cwde
popa
call
add
js
xchg
inc
sbb
sub
xor
not
add
pusha
pop
push
or
push
sub
mov
or
mov
xchg
pop
sbb
sbb
mov
sbb
and
cmp
(bad)
or
bound
lds
xchg
push
jne
int
jo
hlt
or
call
pop
rol
or
(bad)
jle
into
add
repz
inc
into
div
pop
mov
xchg
cld
cmp
xor
xor
push
mov
cli
jns
mov
stos
or
mov
ja
or
test
sbb
daa
jne
xor
call
xor
nop
pop
or
rcr
cmp
hlt
test
pop
ds
addr16
fild
ds
sub
jmp
sub
push
mov
push
add
lods
sub
not
(bad)
popa
gs
push
repz
adc
xor
xchg
ret
nop
cmps
adc
dec
rol
in
shl
mov
shl
push
adc
(bad)
and
dec
dec
and
push
in
jecxz
fst
ror
push
popa
dec
test
and
add
jbe
pop
pop
pop
add
adc
imul
lahf
jge
sub
mov
jmp
loopne
sbb
sub
cmp
aas
push
jmp
or
mov
rol
std
je
or
mov
test
(bad)
je
aad
(bad)
sub
inc
inc
daa
jle
mov
adc
scas
pushf
lahf
jns
(bad)
push
stc
sti
aaa
fidivr
push
mov
cli
xchg
movs
sbb
gs
inc
fbld
ret
shr
jp
jge
fdivr
stc
pushf
std
xchg
cmp
sub
jp
pop
inc
mov
pop
scas
mov
int
sbb
sbb
jle
cmp
mov
jo
test
sbb
adc
shr
dec
sar
ja
sbb
rol
sub
jmp
mov
mov
scas
shl
add
mov
jmp
mov
aad
add
push
adc
or
push
pop
and
scas
stos
cmp
adc
enter
push
(bad)
jno
jmp
xor
ds
xor
ss
mov
movs
mov
dec
loopne
test
int
shr
mov
and
shl
mov
mov
mov
pop
pop
jl
mov
sbb
lock
add
and
sbb
sbb
jle
mov
sahf
xchg
cmps
bound
hlt
aam
jp
sbb
ss
sub
nop
jle
into
test
push
sub
add
pusha
call
mov
mov
pop
popa
fidiv
ins
fcmovnbe
jne
mov
ins
je
ins
or
inc
js
or
repz
ror
stos
scas
je
jmp
xchg
stos
fwait
ret
or
adc
cmp
sub
lods
mov
je
adc
add
xor
mov
inc
sub
xor
gs
xor
aam
cmps
ja
adc
cdq
mov
stos
std
push
add
call
jmp
rcr
lahf
mov
jmp
and
adc
les
pop
stos
cmp
movs
stos
repz
das
aaa
pushf
call
pop
mov
pop
jg
pop
leave
mov
pop
push
adc
or
adc
lods
jl
mov
stos
jae
cmp
ficomp
and
jmp
cmc
arpl
mov
sbb
xchg
retf
test
jmp
adc
add
xchg
dec
sbb
sbb
sbb
jl
mov
mov
daa
xlat
fistp
(bad)
(bad)
std
les
in
sub
iret
lahf
mov
jno
mov
iret
and
dec
pop
mov
pop
sahf
jmp
push
sub
(bad)
push
enter
mov
xchg
push
cmps
shl
push
jge
outs
rol
xchg
test
inc
test
adc
mov
cwde
adc
and
fldcw
movs
cdq
mov
and
shr
add
dec
test
bound
cmps
lahf
sbb
push
popa
cdq
push
sub
inc
adc
sbb
xchg
ret
fidiv
xor
jmp
(bad)
jl
and
sahf
cmp
out
addr16
jge
fnsave
jge
xlat
jmp
pop
out
inc
dec
sub
adc
jo
and
ret
inc
stos
fs
and
sbb
stos
hlt
adc
adc
test
mov
mov
pop
sbb
sbb
mov
xchg
cli
int
repz
cwde
cwde
inc
mov
mov
stos
inc
push
inc
out
sti
ds
inc
lods
push
and
push
mov
ret
repz
(bad)
cld
std
mov
int
mov
push
sub
iret
iret
dec
aad
cmc
pop
mov
mov
mov
mov
mov
sbb
popf
push
mov
push
add
sbb
push
or
inc
js
add
add
jmp
jne
inc
push
inc
cld
sub
xor
pop
lock
aaa
add
mov
inc
adc
mov
pusha
mov
ror
xlat
mov
les
xchg
inc
movs
cli
std
push
cmp
sbb
or
xlat
jae
mov
es
jno
jb
or
cmp
aas
idiv
repz
(bad)
out
out
jle
clc
fwait
outs
mov
fs
rcl
or
xor
and
pushf
retf
and
or
retf
icebp
scas
dec
lahf
xchg
popa
das
sub
retf
jb
out
iret
cmp
xchg
dec
and
pop
lods
mov
shl
or
outs
mov
push
jb
sbb
xchg
sub
rcr
sbb
idiv
movs
aam
inc
xchg
ret
cmp
out
add
bound
loope
xchg
sub
cs
mov
popf
cmp
out
fsub
cmps
dec
lahf
sahf
pop
and
lods
xchg
xor
div
je
test
sub
aaa
xchg
out
inc
inc
imul
or
ret
movs
pop
fmul
jge
push
outs
sbb
inc
xchg
in
aas
psrad
adc
cwde
or
mov
sub
cwde
gs
xlat
mov
movs
scas
shl
adc
out
and
dec
mov
xor
inc
das
cmp
pop
fldenv
mov
jmp
sbb
xchg
imul
jp
dec
clc
jno
and
inc
jne
cmp
jnp
cmp
jle
rcr
fistp
fucomip
setno
xor
cmp
sub
scas
es
push
or
pop
stos
or
mov
sbb
sub
inc
xchg
mov
push
icebp
jmp
es
fdiv
cmp
xchg
cli
std
ds
mov
in
jbe
pop
push
cmps
cmps
cmps
xor
xor
jmp
inc
adc
addr16
fwait
fwait
fwait
ret
(bad)
repnz
ss
sar
add
stc
aad
push
outs
pop
mov
xor
iret
xchg
pop
jle
loope
(bad)
fst
in
addr16
ds
mov
mov
xor
enter
test
push
adc
sbb
pop
(bad)
jns
pop
stc
xlat
add
add
sub
add
fadd
loopne
and
mov
adc
and
add
add
dec
aaa
dec
inc
inc
call
pop
xor
scas
pop
xlat
fild
or
jns
mov
call
sbb
adc
js
aaa
(bad)
lock
scas
pop
and
movs
and
test
outs
call
inc
xchg
dec
sahf
cmp
ja
jns
ds
or
add
loopne
jno
repnz
adc
pop
xor
fs
cmps
loope
push
cmp
int3
cmp
scas
push
out
push
stos
push
stos
enter
inc
shl
or
add
dec
je
sbb
mov
push
sub
or
in
jbe
push
shr
mov
mov
xchg
push
push
push
ficomp
pop
std
stc
retf
jnp
adc
dec
push
add
loopne
add
add
ret
loope
js
int
outs
add
pop
(bad)
(bad)
pop
cmp
loop
ret
mov
(bad)
stc
mov
lods
dec
aam
or
xchg
ror
fadd
ins
paddusw
fisttp
mov
mov
dec
popf
mov
jbe
aas
sbb
add
add
jbe
add
add
cmps
or
mov
or
jle
lock
xor
repnz
cmps
adc
shr
enter
mov
xchg
xchg
gs
lods
das
jmp
mov
adc
ins
mov
stos
addr16
rcl
cmc
out
jge
xchg
or
jbe
outs
outs
jle
xor
fistp
xchg
popa
sbb
and
xchg
pop
cld
shl
add
ret
push
or
add
rcl
add
ds
arpl
jecxz
sub
out
mov
rcl
shr
xchg
retf
mov
das
or
mov
ins
in
in
in
pusha
outs
dec
cmps
or
sbb
cmp
rol
std
sti
div
cmps
xor
fdivr
icebp
cmc
jmp
jg
mov
fadd
adc
add
mov
scas
add
pop
mov
out
mov
mov
jne
hlt
in
mov
(bad)
push
pop
jnp
mov
iret
pushf
cmp
(bad)
icebp
jecxz
push
rcl
sar
sbb
ja
std
pop
divps
ret
dec
pop
stos
cld
(bad)
adc
sbb
xor
leave
add
or
add
adc
pop
push
and
pop
adc
cwde
and
push
mov
add
cwde
lahf
in
sbb
add
popf
push
movs
pop
jb
dec
ret
scas
imul
(bad)
out
sub
mov
inc
(bad)
mov
outs
daa
out
dec
push
das
pop
mov
jecxz
xchg
xchg
xchg
aaa
nop
fadd
ds
add
add
or
or
mov
retf
cli
mov
addr16
std
call
ins
push
stos
push
dec
dec
dec
bound
adc
mov
lods
stc
mov
fiadd
out
adc
adc
push
add
addr16
pop
pop
pop
fcomp
fadd
(bad)
mov
stos
push
scas
(bad)
mov
add
xchg
sbb
mov
call
push
inc
je
push
inc
pop
cmp
pop
lods
push
lock
(bad)
idiv
or
cmps
dec
popf
cmp
pop
pop
cmp
clc
cdq
shl
jno
jae
shr
push
call
sbb
inc
cmp
wrmsr
jl
rol
dec
pop
ret
iret
xchg
int3
inc
les
adc
adc
adc
and
cmovbe
cs
sub
scas
mov
and
lods
or
not
(bad)
hlt
jne
ret
add
dec
rol
stos
xchg
nop
fs
adc
cld
jmp
cmp
and
mov
inc
jg
into
add
dec
and
push
call
pop
jg
loop
repnz
add
mov
cmp
pushf
mov
add
sbb
dec
cmps
jno
sbb
sbb
mov
mov
jmp
cs
lds
mov
and
cmc
cmp
in
or
jp
push
jp
push
sbb
dec
rol
hlt
hlt
xor
daa
daa
arpl
pusha
xor
rol
out
out
cs
xlat
xlat
mov
mov
pop
(bad)
fdivr
outs
ins
ins
fisttp
add
xor
mov
sahf
call
nop
push
ss
fld
test
outs
fdivr
in
jge
jnp
jbe
daa
ja
les
pushf
cmp
cmp
ret
pop
cld
stos
dec
outs
adc
(bad)
(bad)
mov
aam
and
xchg
rol
xor
or
lea
add
add
add
das
add
inc
ror
test
or
add
inc
test
into
add
push
sahf
and
out
test
sbb
push
lahf
sbb
dec
inc
jp
cmp
pop
addr16
dec
dec
inc
fs
or
xor
xor
imul
popw
mov
and
(bad)
xor
fsubr
mov
or
dec
jmp
aad
(bad)
push
or
push
adc
jno
addr16
popf
cmp
cmp
mov
jns
nop
dec
hlt
dec
cdq
or
pop
inc
or
cwde
mov
fwait
cmps
or
outs
or
sub
mov
nop
cmp
xchg
jp
cmps
retf
jmp
push
out
and
sbb
je
stos
push
test
movs
push
sub
repz
mov
mov
(bad)
pop
jbe
movs
jecxz
mov
faddp
out
out
cs
std
ds
mov
(bad)
sti
aaa
fidivr
(bad)
out
jbe
pop
inc
cmc
push
add
inc
retf
shr
cmp
sub
inc
and
pop
fdivr
stc
into
jg
(bad)
div
test
adc
test
sub
in
xor
push
push
inc
sbb
loopne
xor
cwde
adc
data16
sub
mov
cdq
inc
push
cdq
mov
and
xchg
adc
ret
and
jmp
and
aad
shl
clc
jle
mov
or
mov
adc
mov
int
pop
sub
pop
stos
mov
scas
shl
clc
push
pop
push
ret
sbb
inc
aas
imul
clc
pop
cmp
inc
inc
and
or
sub
pop
(bad)
popa
mov
push
movs
push
inc
std
(bad)
(bad)
rcl
mov
pop
sub
in
mov
cmc
xor
mov
inc
shl
in
lds
aas
cli
inc
mov
not
test
push
pushf
pushf
inc
cs
mov
jge
inc
mov
push
cmp
xchg
xchg
xchg
xor
aaa
xchg
jae
mov
xor
jne
adc
cmps
je
popa
loope
das
jge
dec
adc
imul
jle
cli
mov
push
lds
fmul
push
mov
jne
xor
cmp
test
dec
and
mov
mov
hlt
movs
movdqu
iret
jns
cmps
sbb
jmp
and
aas
push
push
popa
test
and
pop
xchg
popa
rol
test
mov
cmp
cli
sbb
pusha
and
xor
popa
inc
or
dec
xchg
add
and
sbb
push
xchg
outs
add
fcmovnbe
rcr
push
mov
(bad)
out
out
shl
jnp
cmp
test
data16
jle
and
rcl
shr
mov
ud1
mov
hlt
cmp
cmp
or
sar
dec
in
pop
xchg
jl
ret
sbb
push
add
movs
cmp
int
dec
adc
xor
aad
mov
int3
aam
in
int3
jmp
neg
outs
add
stos
cmps
xchg
add
leave
or
outs
sbb
mov
pop
mov
jecxz
inc
lods
stos
mov
and
aaa
dec
jp
(bad)
pop
in
ror
or
aad
js
vpand
ss
mov
jns
or
xchg
leave
dec
in
jns
cmps
mov
pusha
xor
cmp
loopne
fnstsw
and
pusha
shl
leave
icebp
jecxz
(bad)
pop
mov
lahf
jg
jge
jge
jmp
mov
lea
dec
and
xchg
xchg
add
sar
je
inc
inc
ss
jae
jae
xor
xor
jae
jae
pop
das
pop
mov
xchg
das
pop
sahf
fmul
jmp
mov
aam
mov
ss
mov
dec
sbb
lock
pushf
inc
add
sub
push
inc
cmp
les
push
and
push
pop
aas
push
in
test
aam
mov
jmp
xor
ja
mov
sub
and
xor
mov
ret
jge
inc
js
(bad)
lods
in
sbb
imul
dec
lahf
ret
and
xlat
xchg
jno
call
xlat
mov
xor
jle
ret
out
sub
inc
inc
push
xor
pop
jne
mov
or
push
ja
(bad)
dec
outs
add
add
mov
push
std
ret
mov
push
inc
xor
xchg
xor
sbb
adc
add
sahf
and
(bad)
cmp
dec
inc
sub
mov
mov
test
fisubr
push
and
sbb
dec
dec
dec
and
scas
mov
jge
stos
stos
stos
call
mov
imul
sbb
cs
jbe
push
in
mov
loop
movs
dec
or
mov
std
xlat
jg
lods
mov
test
cli
mov
mov
test
mov
jle
fldenv
jge
jp
cli
ins
mov
sub
or
jae
or
cs
xchg
add
clc
xor
cmp
ret
inc
and
add
or
add
or
jle
dec
mov
and
add
sar
inc
xor
inc
and
dec
movs
sub
push
in
daa
jl
aam
jecxz
ds
push
enter
push
loope
ss
retf
mov
mov
jge
add
repnz
jecxz
pop
or
xor
mov
imul
mov
sub
mov
icebp
jmp
and
cmp
cmp
dec
jo
add
push
repnz
sbb
jo
xor
or
fnsave
out
(bad)
jmp
push
out
mov
add
xchg
sbb
ds
pop
pop
pop
cmp
push
outs
inc
fiadd
or
xchg
sub
and
stc
test
or
and
enter
cmp
in
xchg
lds
aam
sbb
pop
or
(bad)
xchg
inc
mov
xchg
push
add
div
mov
mov
and
es
aas
lwpins
mov
popa
jae
adc
loope
ins
ins
ins
pop
sti
loopne
paddd
mov
jae
jae
addr16
xchg
retf
in
adc
repnz
dec
dec
dec
mov
test
xchg
sub
pop
push
mov
(bad)
cli
xlat
mov
ret
jle
xchg
sub
sub
xor
jp
or
xor
pop
pop
js
(bad)
cs
inc
or
push
adc
sbb
cmps
aaa
or
or
jo
inc
dec
or
and
add
test
and
or
xor
sahf
and
inc
mov
add
add
add
add
shr
nop
enter
adc
xchg
leave
mov
out
sbb
cmp
cs
iret
cmp
in
mov
sbb
iret
in
iret
in
test
and
adc
xor
sub
loopne
in
push
mov
and
ror
add
add
adc
push
movs
jns
lods
popf
ret
add
adc
out
loope
neg
add
xor
mov
pop
sub
sbb
mov
inc
dec
arpl
mov
adc
fld
lock
jle
sar
or
add
iret
sbb
or
ret
rcl
lods
mov
iret
int3
int3
mov
push
adc
mov
loopne
mov
scas
jl
mov
in
out
out
loop
mov
fcomp
fisub
jle
fcomp
fnstcw
pop
fistp
sbb
add
cmc
jmp
jg
sub
iret
sahf
cmp
pop
jge
rol
mov
mov
and
sub
sbb
(bad)
cwde
stc
fdiv
mov
(bad)
fxch
jle
dec
dec
jecxz
sar
or
jmp
xlat
in
cmp
pop
mov
std
in
addr16
jg
icebp
out
fcmovne
jns
adc
cmc
jp
jge
cmp
ret
or
push
and
neg
movs
or
test
xchg
jnp
add
jno
add
push
add
cmp
loopne
adc
add
and
sbb
ret
adc
or
test
pop
or
inc
inc
jecxz
inc
mov
cli
inc
hlt
pop
jge
xchg
cs
retf
mov
iret
in
sub
adc
cld
adc
gs
aad
or
sub
ins
sbb
or
and
mov
fist
icebp
(bad)
rcr
enter
sbb
and
loopne
shr
add
ret
out
rcr
int3
loopne
add
sub
ins
loope
fwait
mov
imul
xor
popa
push
leave
js
push
test
leave
in
push
push
mov
(bad)
jle
xor
ss
pop
jns
xor
pop
push
mov
mov
mov
lock
ret
mov
and
nop
dec
add
inc
push
and
test
loopne
pop
fdiv
inc
or
mov
inc
mov
jmp
cli
sub
pop
sub
outs
jecxz
in
fld
sbb
fcmovnu
adc
cmp
jmp
out
fidivr
ins
ins
in
sub
xchg
jp
fldenv
jp
lds
lahf
cmp
aam
int3
int3
or
push
cmps
rol
rol
xor
out
fild
xchg
fdivr
lock
mov
cli
fwait
jmp
scas
jmp
mov
iret
shl
aaa
mov
adc
xchg
push
jle
loope
ds
jmp
stc
repz
dec
dec
dec
dec
jno
jecxz
push
mov
jp
xchg
ret
in
adc
jnp
pusha
pop
repz
cmpps
or
jmp
sub
mov
cwde
mov
or
cmp
add
cmps
add
rol
xor
cdq
or
adc
sub
pusha
xor
adc
add
outs
push
jo
movs
pop
push
loope
imul
jg
inc
xchg
add
jno
iret
dec
jecxz
jecxz
or
cmp
or
jo
inc
js
icebp
iret
mov
xor
movs
mov
cmp
or
and
dec
inc
inc
push
pusha
sub
mov
sbb
push
fstp
scas
sub
fiadd
mov
mov
rol
enter
add
sbb
and
adc
daa
mov
pop
shl
inc
cmps
or
mov
fcmovnb
xchg
mov
dec
in
add
xchg
in
clc
adc
imul
push
cmp
fcom
aas
sbb
mov
pusha
sub
fcomp
(bad)
dec
daa
and
inc
adc
stos
pop
nop
div
mov
xchg
dec
dec
jnp
mov
call
jecxz
test
sub
imul
mov
pusha
cmp
fstp
into
into
and
inc
shl
shr
jo
(bad)
jge
mov
cmp
or
int
cmc
cmc
pop
pop
mov
jbe
and
stos
aad
stc
icebp
(bad)
pop
jg
mov
loop
ds
in
out
movs
push
sub
aam
mov
cmps
sub
aaa
ss
jle
mov
fistp
popa
sbb
inc
inc
xor
inc
scas
clc
sub
pusha
inc
mov
scas
cmp
jmp
jns
aaa
sub
xlat
jmp
ror
dec
pop
std
dec
push
lods
test
pusha
imul
cmp
push
shl
and
add
or
or
or
sub
std
dec
dec
aaa
inc
les
add
and
popa
retf
or
or
adc
popa
add
ins
or
pushf
or
add
and
jno
mov
adc
push
or
inc
and
daa
and
std
inc
or
sub
aas
cld
jo
sti
imul
cmp
psubd
sti
or
jl
push
rol
sar
jno
pop
ins
cdq
loopne
jp
add
sar
jmp
xor
xchg
mov
idiv
ss
jnp
clc
jge
add
ror
jo
and
jle
cmp
mov
cmp
arpl
push
jbe
fstp
push
(bad)
xor
shl
push
jg
add
push
and
mov
mov
movs
mov
pop
lea
out
cmc
jp
fcmovnu
ret
jo
inc
cs
ret
rcl
adc
daa
daa
push
sub
add
in
pop
lods
lods
lods
pusha
jne
adc
jbe
jnp
fcmovnu
xlat
out
fdivr
lea
sbb
js
pop
int3
sbb
aad
pop
std
loop
iret
aas
dec
pop
mov
push
add
(bad)
(bad)
in
mov
cmp
in
mov
jmp
test
jp
push
popa
sub
mov
push
push
add
mov
jae
sti
fcom
(bad)
stc
iret
jg
pop
scas
dec
mov
in
js
(bad)
mov
inc
mov
jo
or
cmp
nop
adc
dec
jmp
cli
add
or
sub
and
cli
hlt
sub
fwait
rol
and
pop
nop
ret
add
xchg
test
pop
adc
adc
or
shl
xor
or
dec
adc
add
inc
outs
add
rcl
movs
cmp
mov
inc
mov
inc
cs
inc
lods
push
inc
mov
sbb
out
pop
(bad)
push
scas
or
jmp
rcr
adc
test
js
(bad)
jb
or
stos
mov
sahf
out
stc
add
out
cmp
fstp
jo
mov
pop
add
cmovo
push
xor
test
adc
rol
pop
aam
xor
jmp
sti
mov
cmp
mov
sar
adc
std
mov
xchg
xchg
xor
dec
sub
mov
sub
sbb
fwait
xchg
retf
fcomip
(bad)
out
aaa
dec
fadd
(bad)
mov
sub
mov
inc
pop
inc
xor
aad
sub
retf
gs
jns
jb
adc
add
mov
xchg
or
bound
lds
sar
cmp
ss
mov
outs
outs
outs
(bad)
(bad)
mov
imul
push
and
xchg
and
jge
mov
repnz
dec
(bad)
cmp
daa
dec
push
and
fucomi
mov
mov
(bad)
outs
fdivr
xlat
jle
sti
imul
aaa
out
fnstsw
inc
je
pop
xchg
clc
adc
adc
rcr
or
add
aas
jle
or
ret
hlt
ror
loope
mov
push
xchg
popa
cmp
inc
xor
in
xlat
pop
xor
std
inc
aam
ret
ret
or
push
adc
mov
adc
push
inc
clc
dec
inc
lahf
inc
add
sbb
int3
and
cmp
and
adc
cmp
push
xchg
or
sbb
ins
adc
sbb
inc
movs
push
cmp
mov
jne
fnstsw
test
add
mov
in
mul
xchg
pop
inc
mov
sbb
sub
dec
sbb
mov
js
push
sub
push
lods
push
shr
jmp
popa
enter
loope
sub
aas
push
jmp
sbb
jno
js
or
(bad)
mov
and
cmpxchg
fadd
xchg
bound
or
fxch
sub
xor
das
test
test
pop
mov
aas
stc
dec
(bad)
sbb
sbb
add
cmp
jo
push
movs
retf
test
cli
std
ss
inc
mov
sbb
rcr
sub
lahf
cmp
xchg
gs
imul
jmp
loop
pop
repz
push
push
push
ret
jne
push
push
jno
(bad)
jge
jp
mov
lods
jnp
retf
retf
aas
mov
sahf
out
dec
sub
stos
aad
sahf
jp
stc
xchg
pop
jp
cdq
cmps
sahf
jp
pushf
bound
mov
mov
and
mov
jmp
mov
outs
mov
lock
or
dec
jp
add
add
mov
cmc
cmp
test
pop
cmps
mov
mov
push
out
fsubr
mov
xchg
fwait
sahf
cdq
inc
mov
and
jo
aam
xor
xor
adc
dec
inc
push
retf
in
add
push
stc
nop
in
and
inc
xchg
dec
inc
or
outs
sub
jae
sbb
cmp
dec
popf
ficom
push
and
icebp
dec
clc
in
mov
in
pop
dec
add
add
fnstsw
push
aad
pop
bound
pop
(bad)
cli
cmp
add
or
sete
or
or
mov
lods
(bad)
inc
mov
and
out
xchg
mov
push
shr
mov
pushf
inc
ds
inc
ja
rcr
out
loop
outs
or
cli
fwait
call
cmp
pusha
push
repz
sbb
lock
add
into
hlt
int3
int3
xchg
jecxz
adc
pop
enter
adc
rcl
adc
shl
les
cmp
jmp
mov
stos
and
sub
mov
add
push
sub
mov
jne
pop
pop
pop
mov
lods
scas
scas
(bad)
jl
arpl
std
data16
sbb
sbb
inc
push
jns
mov
sti
mov
(bad)
aas
jle
bound
sub
stos
jle
ffreep
out
out
cs
push
push
sbb
mov
stc
retf
pop
inc
lods
lods
lods
mov
cmps
lea
pop
call
mov
push
ror
lock
jge
aas
call
leave
mov
lds
bswap
gs
test
xor
and
sti
sub
test
pop
inc
adc
pop
ins
or
xor
and
adc
pop
add
mov
pop
inc
retf
ror
pop
adc
or
shl
xor
inc
fld
add
out
xor
loope
add
inc
fimul
add
add
std
push
or
and
stc
cmp
movs
adc
jle
push
or
jne
adc
xchg
sbb
nop
mov
xchg
jne
ins
push
xor
lods
mov
dec
and
inc
scas
fild
pop
inc
mov
xchg
pusha
popa
or
xchg
repz
movs
adc
lods
add
or
jb
push
xchg
cmp
ret
test
dec
sbb
dec
mov
mov
test
xchg
cli
pop
clc
cmp
dec
sub
jg
inc
or
xor
test
push
sub
jg
jns
push
bound
jge
push
lds
(bad)
xchg
add
adc
popa
and
inc
mov
(bad)
jp
or
adc
mov
mov
sub
inc
shr
mov
sbb
or
mov
mov
xor
cmp
xlat
sbb
add
jmp
mov
loope
addr16
sahf
js
cdq
addr16
sahf
cmp
stc
jb
pop
popf
dec
pop
jnp
jnp
ss
mov
ja
jge
xchg
retf
retf
retf
aas
pop
pop
pop
call
in
mov
mov
scas
sbb
shl
cmp
idiv
jl
leave
daa
retf
pop
std
jmp
jmp
(bad)
mov
aad
cmp
push
cmp
xor
inc
sbb
xchg
push
cmp
xchg
xchg
mov
int3
pop
or
cmp
(bad)
out
xor
add
jo
adc
pop
or
add
add
add
add
xor
or
xchg
push
sbb
mov
push
(bad)
test
lock
add
mov
mov
pop
ss
mov
lock
mov
dec
xlat
or
adc
stos
add
xchg
jo
inc
sub
popa
push
bound
imul
cmc
sti
test
stos
pusha
mov
xchg
aaa
adc
pop
lahf
mov
(bad)
push
mov
or
and
(bad)
or
imul
mov
and
jecxz
jmp
scas
mov
xchg
jb
dec
mov
ins
mov
and
ret
add
push
fwait
xchg
cs
or
ret
mov
xor
mov
inc
mov
xor
jecxz
les
dec
xchg
fmul
loop
ret
fcomi
cmp
stc
jl
rcl
shr
cmp
mov
dec
scas
(bad)
retf
sbb
jg
(bad)
lea
sahf
out
or
retf
mov
das
mov
mov
cmp
mov
jo
mov
dec
pop
fcmovnu
fld
sbb
aad
push
mov
mov
fucomp
mov
ret
dec
xchg
adc
push
cs
lds
je
xlat
arpl
add
loope
push
jnp
in
pop
push
ud0
dec
cmps
cmps
cmps
mov
mov
neg
xor
retf
mov
xchg
sbb
and
outs
test
ja
pusha
or
movs
std
mov
ret
add
or
fwait
or
test
mov
test
or
and
add
adc
inc
add
inc
fs
xor
test
dec
adc
leave
jno
jp
jb
and
inc
xor
popa
call
push
inc
mov
push
fisttp
ins
pop
cmps
or
mov
mov
fdivrp
or
call
xchg
cmps
adc
mov
push
or
test
jne
movs
sub
sub
push
xor
in
test
xor
aad
arpl
ins
mov
xchg
lods
adc
mov
mov
push
pop
sbb
cli
jg
ret
loopne
push
test
cs
scas
scas
scas
sub
xor
jge
pop
push
shr
cmc
cmp
mov
or
jns
push
xchg
and
aas
sub
cmc
push
push
xchg
cmp
and
push
pop
mov
arpl
add
push
and
mov
sti
clc
lock
(bad)
jmp
sub
mov
icebp
loope
pop
jle
jnp
sti
push
inc
adc
xchg
mov
dec
lahf
cli
aam
sahf
jl
xchg
push
pop
mov
in
movs
pop
sub
call
lea
ja
faddp
out
out
cli
cmc
jmp
mov
outs
mov
imul
cmp
lahf
div
stos
adc
imul
cld
repnz
mov
cli
lods
(bad)
lahf
dec
lahf
ds
fisttp
push
mov
and
jge
sbb
pop
push
icebp
test
push
jno
xor
and
sub
jmp
pop
jbe
inc
dec
xchg
and
inc
sbb
cmp
adc
lahf
dec
push
loopne
or
dec
sub
(bad)
shl
sbb
clc
(bad)
fidivr
sbb
scas
sti
pop
in
ja
mov
div
in
pop
data16
dec
mov
dec
mov
xchg
xchg
scas
stc
repnz
leave
xor
ret
sbb
add
and
repnz
mov
and
into
nop
xor
nop
sbb
addr16
mov
out
jmp
loope
push
jne
imul
mov
jmp
out
fwait
test
xlat
add
adc
sub
pop
stc
jl
int
or
outs
das
sub
jmp
pop
into
cmp
lea
mov
jne
cs
iret
out
retf
in
xor
xchg
push
fstp
sbb
push
movs
xchg
pop
test
(bad)
int3
mov
xchg
xor
lock
les
push
sub
inc
push
lahf
adc
test
(bad)
dec
mov
les
scas
arpl
add
or
je
xchg
pop
push
fistp
mov
in
and
or
add
add
test
sbb
cmp
pop
ror
mov
div
or
aam
jp
inc
inc
mov
das
xchg
dec
fcomp
fadd
retf
ss
and
sbb
fcmovb
(bad)
les
bound
fldcw
lods
push
sub
jns
shl
aas
(bad)
stc
dec
jg
sbb
clc
int3
aam
push
retf
pop
loope
sbb
mov
xchg
dec
cwde
lahf
lahf
fistp
repz
xor
jmp
aaa
ret
ror
js
rol
push
jge
fstp
div
(bad)
xchg
jle
adc
pop
std
rcr
shr
aam
ds
lahf
xchg
retf
in
icebp
inc
mov
out
jmp
mov
mov
leave
leave
outs
test
test
and
mov
mov
pop
push
test
inc
inc
sub
add
sub
inc
add
js
lock
push
mov
sbb
push
mov
pop
mov
fs
add
in
test
aas
repnz
(bad)
or
js
inc
enter
shl
ins
arpl
dec
sub
cmp
call
out
sub
adc
dec
mov
adc
sub
fwait
cmp
or
or
xchg
test
sti
xchg
push
cmps
mov
ja
mov
pop
sub
or
mov
cmps
ss
ins
mov
not
add
mov
popf
dec
addr16
add
(bad)
xor
push
inc
iret
or
repz
shl
cwde
je
xchg
scas
sbb
shl
xchg
retf
jne
in
sbb
lea
jae
push
push
push
push
shr
and
cwde
inc
es
inc
ds
inc
ss
jne
js
mov
pushf
repz
in
pop
ins
ins
ins
enter
dec
push
mov
popf
retf
xchg
sub
cld
mov
jle
sub
mov
aaa
outs
sahf
outs
mov
stos
push
dec
jecxz
xor
push
adc
jge
mov
jbe
pop
mov
mov
dec
cld
addr16
cmp
sti
ds
pushfw
nop
mov
fmul
retf
mov
pop
sbb
fidiv
mov
jmp
sbb
fsub
sbb
sub
add
add
nop
mov
int
cmp
or
add
rcl
dec
pop
mov
dec
cmps
xchg
dec
cmps
nop
retf
in
jnp
add
inc
call
push
aam
pop
mov
add
call
jno
xchg
jmp
lahf
jns
xchg
cmp
xor
jo
add
dec
test
inc
dec
fwait
sub
or
nop
jb
mov
xchg
dec
sub
fisubr
leave
lods
repnz
push
jo
add
pop
pop
inc
inc
imul
popf
pop
cs
movs
xchg
mov
stc
push
hlt
add
push
arpl
call
jne
and
mov
dec
arpl
stos
pop
les
mov
pop
lods
scas
scas
jbe
push
mov
pop
mov
xchg
leave
leave
dec
xor
xor
movs
stc
dec
jle
xchg
sbb
pop
xlat
sahf
(bad)
imul
xor
pop
outs
fnstsw
xchg
das
(bad)
fisttp
into
cmp
dec
inc
vpmacssdqh
scas
ror
add
(bad)
std
fistp
push
fcmovnbe
jle
cli
jle
mov
inc
je
dec
(bad)
test
adc
das
sti
jge
pop
pop
fdiv
ds
or
inc
sar
int
or
adc
and
add
sbb
movs
add
sub
push
stos
push
cmp
add
xchg
push
enter
aam
jae
je
lea
or
jbe
fcmovbe
cwde
xchg
shr
xchg
xchg
xchg
lods
lods
scas
loop
mov
lds
add
jecxz
or
mov
xchg
das
or
mov
retf
add
jmp
fistp
jl
add
jae
daa
dec
or
dec
adc
sub
xor
pop
mov
and
dec
lods
scas
scas
and
push
pusha
mov
push
mov
ins
sbb
xor
sub
mov
dec
test
cli
cmp
push
push
stos
aad
iret
repz
mov
pop
call
(bad)
call
mov
sbb
std
mov
imul
jmp
stc
cmp
cld
in
out
fnstsw
push
push
and
repnz
rcr
adc
pop
mov
sub
push
push
fdivr
sub
pop
pop
push
ret
mov
aaa
ja
pop
idiv
adc
mov
jbe
outs
mov
mov
inc
addr16
call
(bad)
dec
mov
add
add
xor
or
pop
cli
jle
jne
cdq
sahf
xchg
test
mov
movs
jno
ins
adc
jge
popa
lods
sub
adc
aaa
cmps
sub
dec
sub
sahf
out
mov
jb
push
imul
test
mov
sub
jecxz
add
or
or
push
int
mov
movs
jge
shl
pop
sti
mov
jns
fidivr
and
test
retf
ror
dec
mov
add
lds
sbb
fistp
shl
fcmovnu
fdiv
ret
ss
cmps
sar
scas
pop
sub
bnd
in
stc
dec
dec
dec
dec
cmp
int
cmps
push
test
sbb
push
pusha
es
xor
(bad)
sbb
push
xor
xor
mov
dec
dec
scas
push
stos
aad
call
adc
fimul
sti
xor
or
xchg
test
stos
aad
lock
mov
cmp
xchg
sbb
pop
add
clc
xor
dec
fdivr
cwde
inc
mov
fwait
into
or
(bad)
add
adc
xchg
or
cwde
inc
xchg
clc
add
adc
and
mov
fwait
lds
ins
fild
out
xchg
add
and
sahf
mov
pushf
mov
pop
pop
mov
push
pop
outs
aaa
fisubr
movs
push
dec
sub
in
xchg
mov
jmp
mov
jno
inc
dec
sub
add
ss
sti
adc
mov
pop
sbb
(bad)
aas
(bad)
clc
pop
sbb
push
dec
(bad)
int3
int
jne
jbe
retf
(bad)
rol
cmp
test
(bad)
(bad)
sub
(bad)
cs
retf
in
test
(bad)
fidivr
xchg
retf
cmp
lds
jo
xchg
dec
sbb
test
jp
mov
pop
retf
retf
retf
mov
out
call
popf
cmp
fsubr
adc
or
jge
pop
inc
mov
sub
mov
mov
movs
mov
or
adc
fisttp
arpl
rcl
(bad)
jno
out
mov
jecxz
adc
and
cmp
hlt
push
jne
and
xor
mov
xchg
scas
jae
(bad)
mov
dec
and
mov
jo
aaa
xchg
clc
mov
rcl
shr
ins
ja
or
xchg
test
hlt
adc
inc
sub
(bad)
int3
push
es
push
test
pop
and
mov
dec
sbb
add
fidivr
aam
aas
sti
fcos
push
dec
jmp
xchg
test
stc
cmp
fdivr
jne
stos
push
mov
push
neg
pushf
repz
cld
out
cld
cld
cld
iret
stos
aad
sub
xchg
xchg
mov
stos
aad
lods
aad
xchg
xor
sti
jo
xchg
cmp
ins
fcmovnu
je
popf
idiv
jb
mov
mov
imul
aad
fistp
test
jmp
loope
xor
dec
int
jmp
(bad)
aaa
cmc
push
mov
cmp
sbb
cmp
(bad)
sub
lock
jno
icebp
or
push
inc
cld
shr
cdq
jecxz
dec
lar
dec
into
jle
ret
push
int
rol
inc
hlt
sahf
outs
cmps
push
add
hlt
mov
mov
or
dec
mov
div
nop
mov
xchg
mov
xchg
push
or
jl
in
jbe
jbe
(bad)
out
clc
sub
and
dec
test
mov
push
jp
dec
or
sub
mov
sub
mov
data16
mov
retf
loop
adc
addr16
add
(bad)
sub
(bad)
jmp
stc
mov
jg
jns
(bad)
xlat
xlat
mov
mov
xlat
ror
push
cmp
jae
repz
cli
cli
cli
sbb
jbe
test
mov
iret
adc
inc
mov
push
imul
xor
fistp
jno
addr16
pop
pop
cmp
mov
mov
mov
retf
jp
mov
in
jecxz
mov
inc
sti
mov
jg
adc
push
in
dec
(bad)
out
cdq
and
cli
cdq
or
jae
push
push
dec
sar
mov
(bad)
ror
cmp
out
sbb
add
push
sub
adc
out
test
push
and
and
push
or
mov
xchg
popa
xchg
es
pop
cs
pop
(bad)
adc
dec
add
dec
mov
fimul
or
xchg
push
push
adc
gs
in
out
(bad)
fiadd
sub
test
ss
cli
add
pusha
add
mov
mov
sti
mov
lahf
jl
push
jmp
fldcw
jmp
push
inc
sbb
jmp
jl
ins
ins
in
inc
cmps
shr
inc
iret
stos
mov
data16
push
mov
mov
pop
cwde
adc
outs
jle
cmp
jp
sbb
mov
out
pop
test
inc
mov
cmp
xchg
out
cmps
mov
dec
cmp
xchg
loop
sti
rol
icebp
and
mov
push
add
pop
aas
rcr
ds
inc
imul
push
pusha
push
outs
clc
enter
fst
mov
sahf
sahf
iret
out
inc
mov
mov
mov
ret
inc
sbb
and
jmp
jle
fcmovb
ss
cmc
imul
xor
idiv
pop
fcom
add
push
pop
mov
mov
fistp
dec
jl
adc
jp
push
pop
movs
shr
scas
jb
outs
outs
fistp
mov
mov
push
mov
lods
ret
adc
imul
push
shl
test
xlat
pop
ret
and
inc
cmp
mov
mov
cli
jns
out
or
push
pop
inc
je
hlt
pop
adc
aad
mov
dec
fisttp
xchg
(bad)
dec
jge
repz
cmp
enter
hlt
jns
scas
cmp
aad
adc
jle
cli
movs
cmps
mov
dec
push
cli
(bad)
mov
(bad)
sbb
sbb
xchg
push
jnp
fnsave
xor
mov
adc
push
xchg
push
test
inc
stc
adc
xor
out
test
out
dec
add
lods
fcmovnu
fmul
ss
jmp
dec
dec
dec
(bad)
aad
aam
sar
push
sub
pop
sub
pop
pop
pop
mov
ret
and
adc
jno
psrlw
mov
pop
out
ret
fsubr
cmps
jmp
cmps
imul
push
inc
lahf
in
mov
aaa
lds
xchg
inc
test
or
and
aaa
xor
pop
mov
dec
lods
fisubr
add
repnz
int3
push
movs
or
pop
scas
jmp
mov
mov
jecxz
loope
push
cwde
imul
sub
inc
xchg
push
loopne
add
mov
sbb
xchg
xor
cmp
jmp
add
add
loopne
retf
fidivr
mov
or
jp
or
fwait
int
mov
cmp
mov
je
xor
add
sub
cmp
push
fxtract
int3
outs
xchg
jnp
dec
and
mov
mov
adc
jo
out
pop
adc
test
test
push
and
and
imul
inc
aas
leave
aam
inc
mov
jmp
sub
or
dec
movs
xor
add
mov
push
scas
(bad)
idiv
inc
mov
add
jno
out
pop
mov
mov
xor
adc
add
movs
adc
mov
mov
xchg
inc
inc
adc
adc
push
arpl
int
nop
adc
outs
xor
add
mov
sub
sub
scas
fcom
and
shl
or
(bad)
popf
std
out
sbb
fadd
out
lahf
call
lahf
pop
call
nop
imul
push
std
sbb
push
or
push
and
aas
and
gs
loop
shl
push
dec
jmp
jp
jae
fcomi
scas
int
pushf
jnp
es
mov
push
cmps
out
sub
push
in
xchg
ins
inc
repnz
xchg
jne
sbb
js
out
and
xor
xor
cmp
cmp
and
xor
inc
ins
(bad)
cmps
mov
inc
adc
inc
pop
push
adc
mov
rcr
fs
sbb
int
shr
inc
test
cld
fnstcw
sub
xchg
rol
inc
sub
dec
(bad)
clc
rcr
std
cmp
es
data16
push
pusha
imul
xlat
jg
inc
pop
test
sti
mov
repz
scas
jl
icebp
out
xlat
repz
fs
bound
ss
dec
movs
push
(bad)
mov
and
mov
pop
dec
stos
test
fisttp
cmp
push
loop
mov
add
adc
movs
(bad)
mov
push
test
sub
push
retf
aad
loop
jno
fdivr
test
push
scas
xlat
xor
cmp
cs
or
cmp
inc
not
les
push
dec
or
loope
and
push
dec
adc
adc
xor
add
xchg
mov
or
and
mov
inc
sub
sub
clc
stos
push
mov
pop
jge
ret
mov
add
sahf
call
or
inc
and
jge
jnp
jg
xlat
jg
(bad)
fcomp
fdiv
mov
adc
(bad)
scas
daa
sbb
sbb
lods
ret
mov
sar
lea
dec
pop
xor
dec
test
xor
push
in
movs
inc
loop
sbb
in
aad
in
adc
sahf
addr16
push
fsubr
loope
mov
fisttp
dec
xchg
sbb
dec
mov
rol
ins
mov
adc
inc
xchg
xchg
popa
or
inc
ret
es
dec
dec
adc
leave
mov
aam
adc
xchg
rcl
scas
pop
or
add
loope
fidiv
xchg
inc
xor
jbe
xchg
sub
mov
add
xchg
xor
jg
pop
data16
dec
and
scas
aad
ins
movs
xchg
jno
not
add
pop
add
(bad)
push
dec
pop
(bad)
call
pop
sub
(bad)
shr
pop
iret
data16
test
and
sbb
add
sub
add
jp
mov
jns
ins
cmps
sti
jecxz
cli
dec
rep
xlat
inc
scas
idiv
add
and
dec
inc
inc
push
jle
cmps
movs
in
lds
mov
and
in
sub
popf
push
jl
jae
jo
pop
repnz
aad
popf
mov
mov
loop
sahf
sbb
cli
jecxz
jns
cmp
mov
xchg
sub
stos
xchg
in
pop
movs
push
mov
sub
inc
loopne
xor
sti
pop
xchg
push
test
dec
mov
xlat
pop
add
sub
add
mov
test
adc
inc
jb
pushf
and
or
nop
add
push
ja
push
dec
xchg
push
push
mov
cmp
dec
sub
mov
std
and
pop
lods
xchg
pop
push
rol
add
ds
jge
lahf
stc
inc
repz
mov
adc
rcl
ins
imul
outs
iret
jne
std
cwde
add
js
jmp
mov
leave
sbb
lock
jge
and
cmps
xchg
push
pop
sbb
mov
cwde
jbe
jo
jne
daa
push
ror
or
fld
jb
or
mov
xchg
out
bound
adc
jno
add
sub
xchg
jbe
outs
push
push
xchg
and
or
mov
mov
push
stos
push
shl
ret
and
ins
xor
sub
fiadd
dec
test
and
push
movs
adc
dec
popf
xchg
inc
add
sub
xchg
inc
sbb
add
add
add
and
adc
add
xchg
xlat
je
mov
jle
xor
lahf
out
adc
(bad)
jno
mov
out
loopne
shr
addr16
cmp
hlt
inc
xor
mul
xchg
data16
into
data16
cmp
lock
xlat
xlat
adc
(bad)
jnp
add
mov
or
call
imul
mov
jne
and
mov
test
test
add
in
push
adc
add
cwde
icebp
xchg
mov
push
xchg
ss
sub
sub
ret
test
scas
add
xor
dec
inc
xor
push
scas
xchg
inc
xor
not
inc
shl
pop
dec
fldenv
test
inc
mov
inc
inc
sub
sub
mov
or
ss
pushf
jae
push
cwde
sbb
adc
sbb
ins
iret
test
and
arpl
push
ss
icebp
or
inc
inc
rcl
or
adc
and
xchg
loope
xchg
xor
sub
or
jmp
popf
adc
(bad)
sub
(bad)
stc
test
jp
jo
mov
or
loop
(bad)
pop
sti
inc
aas
cli
rcr
mov
clc
ret
rcl
push
xchg
retf
in
xor
fisttp
xchg
les
sbb
ins
mov
jmp
push
or
push
xchg
test
sub
inc
test
push
frstor
xcrypt-cfb
cmps
cmps
jno
jne
and
ss
pop
dec
pop
in
fadd
xchg
mov
push
fadd
adc
jae
(bad)
shr
xchg
int
jne
xor
mov
clc
add
(bad)
lods
imul
addr16
or
mov
adc
pop
and
movs
push
std
inc
or
lahf
mov
and
in
mov
xchg
and
jae
shl
arpl
test
rol
test
popa
fild
inc
or
push
sbb
cmp
inc
fwait
add
out
add
sbb
push
cs
sbb
inc
inc
leave
xor
and
in
add
test
pop
scas
push
cmp
lea
fadd
icebp
std
out
jg
xchg
mov
icebp
cmc
jmp
call
test
push
stos
aad
jmp
inc
sub
in
push
or
ficom
shr
imul
hlt
popa
dec
cmp
jo
rol
mov
retf
add
add
lds
adc
ffree
sub
sub
push
mov
adc
add
icebp
xlat
in
loope
fiadd
mov
jbe
ins
xchg
adc
shl
or
and
xchg
jb
jmp
mov
ror
in
test
and
add
dec
jmp
int3
and
push
push
and
and
xchg
nop
test
sub
add
add
adc
ror
jg
adc
push
xor
mov
mov
imul
adc
xor
push
sbb
shl
enter
xor
(bad)
sti
mov
xor
std
loopne
jmp
sub
mov
hlt
xlat
sub
adc
mov
mov
sub
xchg
fmul
fbstp
into
cmp
cmps
fist
add
sbb
dec
loop
jnp
sub
or
mov
mov
sub
and
jge
sub
mov
cmp
or
rol
aad
and
fcmovnb
test
push
hlt
std
sub
test
cmp
cmp
push
or
pop
sub
rcl
cli
std
push
ss
mov
fnstenv
pop
inc
dec
in
sbb
(bad)
xchg
dec
push
sub
scas
add
mov
add
adc
call
mov
sub
mov
aam
push
cmc
and
pusha
ja
add
xlat
sbb
and
sub
aaa
adc
pushf
imul
add
test
movs
push
test
cmp
adc
mov
xor
iret
ds
imul
fucomi
not
jne
xor
dec
sub
popf
test
iret
pop
adc
add
pop
lods
es
aaa
test
arpl
mov
cwde
psllw
xchg
push
sbb
xchg
inc
test
arpl
adc
(bad)
(bad)
loop
fsub
loop
fdiv
xchg
jno
mov
gs
popa
adc
mov
xor
mov
inc
and
pop
je
scas
out
sti
lock
jmp
adc
or
pop
xlat
or
inc
adc
popf
xor
jp
adc
je
in
clc
dec
pushf
jae
adc
mov
mov
mov
mov
jl
outs
xor
test
dec
adc
retf
jb
or
sub
xchg
adc
add
adc
sbb
cmp
cli
push
xor
xor
inc
add
hlt
mov
shl
adc
loope
(bad)
(bad)
mov
mov
shr
ret
movs
push
into
lahf
lahf
mov
movs
push
adc
mov
test
add
adc
loop
das
ss
pop
sub
push
js
loope
xor
fisubr
sbb
div
and
push
inc
inc
inc
push
fsubr
ret
and
ja
lds
into
je
daa
add
dec
in
ret
(bad)
loope
in
inc
cmp
mov
mov
(bad)
sbb
les
cmp
pusha
xor
mov
bound
sub
push
xchg
ror
or
popf
ss
or
add
mov
fst
jb
lods
mov
es
cmp
push
dec
add
inc
int
fadd
inc
adc
nop
jb
push
sub
ins
retf
mov
pop
(bad)
push
popa
pushf
sahf
push
inc
test
pop
test
jo
dec
dec
out
add
inc
inc
test
mov
fdiv
ror
or
xchg
pop
add
add
add
fadd
add
imul
cmp
xchg
and
adc
call
adc
mov
nop
int
je
xchg
push
push
jle
rcr
mov
sbb
aam
retf
jecxz
inc
or
pop
jl
in
(bad)
test
sbb
fcomp
cmp
mov
jno
mov
jbe
or
jle
cmp
nop
jae
sub
mov
std
and
and
jno
xor
ret
mov
mov
pop
imul
or
sbb
mov
jge
enter
mov
mov
cld
sahf
ss
push
loope
add
test
dec
add
sbb
cs
sub
test
xchg
mov
mov
mov
repz
cwde
out
mov
loopne
adc
push
mov
cld
call
frstor
mov
or
adc
and
or
rcr
push
push
xor
add
mov
cdq
add
aad
or
or
cmp
or
(bad)
(bad)
mov
jne
sbb
and
add
dec
sbb
pushf
pop
mov
cmc
jp
cs
xlat
mov
sbb
pop
(bad)
aas
stc
xchg
aas
pop
cld
ror
lods
lods
neg
mov
(bad)
jmp
pop
jge
jle
cdq
addr16
sub
mov
mov
inc
xor
fmul
mov
sar
pop
inc
test
repz
push
arpl
(bad)
(bad)
cmp
ds
mov
mov
imul
inc
hlt
addr16
loopne
sahf
cdq
popa
pusha
or
sub
xor
aad
or
and
adc
cmp
xor
lock
(bad)
retf
test
mov
outs
pop
mov
gs
ss
push
mov
sub
push
xlat
jne
ins
xor
add
xchg
stos
aad
out
stc
sub
and
jne
loope
jns
adc
cmp
lods
test
or
add
add
add
sbb
lea
adc
mov
push
add
add
mov
or
ins
and
mov
and
mov
xchg
and
sub
test
adc
iret
mov
adc
jmp
pop
lods
test
popf
scas
adc
add
xor
add
ret
pop
(bad)
jo
(bad)
lods
pop
push
rcl
aas
ficomp
out
push
loop
addr16
pop
push
lods
adc
mov
test
jne
sub
nop
bound
cmps
in
add
cmp
jo
popf
les
addr16
cli
pop
out
fsubr
push
mov
dec
test
push
add
mov
pop
or
or
ds
clc
jno
rcl
test
jp
mov
in
ja
cmps
bound
in
push
pop
mov
ror
data16
adc
test
xchg
jbe
fsub
mov
xchg
test
stc
mov
scas
stos
movs
adc
cmps
cli
xor
lods
ror
dec
mov
mov
jns
out
sub
and
nop
add
leave
jmp
dec
cld
mov
les
xchg
clc
(bad)
addr16
sbb
and
dec
dec
push
ja
mov
pop
cmp
push
repnz
dec
cmp
bound
mov
cmp
mov
push
cmp
mov
dec
das
mov
std
in
pop
push
stos
push
outs
outs
out
jo
pop
int
shr
dec
dec
and
call
cmp
add
or
or
sti
fwait
adc
sbb
jae
loopne
int3
and
xchg
call
test
ficom
data16
pop
pop
fneni(8087
inc
ret
test
pop
fst
pop
push
test
les
and
xchg
les
dec
cmps
or
pop
(bad)
mov
sbb
shr
je
jmp
sahf
push
stos
imul
and
pushf
or
or
out
push
fucomi
js
loopne
sub
sahf
and
push
out
inc
daa
dec
movs
pop
cmp
enter
sbb
or
retf
push
lods
mov
call
int
mov
cmp
lahf
and
mov
push
xor
pop
push
stos
inc
sub
xor
sub
mov
mov
out
aaa
pop
lahf
(bad)
fcomp
inc
iret
(bad)
pop
out
jl
lock
loopne
cmp
iret
(bad)
cld
iret
jg
fnsave
std
scas
scas
pop
mov
cmp
cmp
xor
pop
aas
mov
jmp
aam
xor
mul
sub
test
and
fstp
je
or
push
and
dec
loope
sbb
jne
pop
in
adc
(bad)
pop
(bad)
xchg
pop
inc
pop
mov
push
cmps
call
xlat
(bad)
cli
adc
fcom
shr
push
pusha
push
std
sub
rol
mov
push
add
mov
sub
add
xchg
je
fnstenv
mov
push
sub
test
inc
sub
push
cmp
(bad)
mov
sbb
sub
mov
pop
(bad)
mov
xor
inc
xchg
sar
sahf
cwde
and
shl
mov
push
test
out
sub
rol
add
adc
sbb
add
push
or
adc
adc
ror
test
pop
push
imul
pop
pop
pop
test
arpl
fdivp
or
loopne
xor
out
(bad)
jg
push
movs
mov
mov
outs
fidivr
inc
mov
arpl
jb
or
inc
dec
shr
popa
mov
xchg
je
lock
enter
jne
imul
jnp
out
mov
arpl
sub
fmul
loope
or
nop
sub
xchg
dec
add
test
fld
adc
mov
cwde
ds
in
jbe
cmc
jp
int3
xchg
pop
inc
and
gs
fdiv
push
sub
movs
and
dec
dec
lock
adc
dec
test
cmp
cmps
nop
retf
mov
pop
cmp
lahf
dec
movs
lods
out
mov
push
out
test
shl
nop
xlat
lods
push
mov
or
xchg
push
sub
and
call
push
mov
add
aad
jns
(bad)
mov
mov
or
add
call
dec
adc
(bad)
loop
into
pop
inc
lock
outs
fdivr
cdq
rol
sbb
icebp
clc
jecxz
jecxz
icebp
jecxz
(bad)
lods
push
stos
cmp
adc
aam
adc
(bad)
xlat
xor
mov
or
cmp
pop
jbe
sbb
ins
arpl
mov
inc
sub
xchg
sub
inc
sub
les
xlat
add
sub
and
in
rcl
push
js
xchg
or
mov
dec
test
push
sub
pop
aaa
gs
dec
sbb
push
dec
and
or
push
dec
cwde
push
mov
enter
cs
dec
(bad)
xor
std
pop
lods
out
ja
(bad)
lea
or
mov
test
xor
ror
add
add
add
or
iret
add
shr
push
sbb
inc
adc
imul
movs
add
pop
sub
mov
mov
lods
mov
jmp
in
mov
rol
lds
addr16
addr16
add
movd
xchg
fldcw
addr16
pushf
stc
push
adc
sub
rol
cdq
iret
jl
(bad)
mov
and
pop
inc
sub
int3
int3
or
push
cmp
aad
sbb
std
sub
push
mov
or
xor
icebp
bound
mov
jp
in
out
inc
cld
sar
inc
jae
lahf
iret
jecxz
add
mov
movs
push
add
sbb
xor
lods
mov
js
bound
and
scas
test
imul
sbb
and
movs
sub
cmps
aam
mov
call
mov
shl
pop
jge
sub
sub
xchg
popa
ret
dec
test
pop
hlt
mov
outs
or
mov
xor
add
movs
loopne
rcl
scas
push
cwde
dec
fisubr
into
add
fidivr
sub
mov
mov
fidivr
cwde
add
jg
and
clc
mov
xchg
cld
popa
adc
stos
add
icebp
(bad)
jg
aaa
jmp
jbe
mov
std
cmc
xlat
pop
lahf
cmp
sub
push
jnp
daa
dec
sahf
les
cdq
or
call
test
popa
xor
push
jp
push
iret
cmp
inc
mov
(bad)
adc
mov
sti
inc
std
add
ror
and
daa
shl
lea
pop
scas
mov
call
(bad)
or
xchg
sub
push
pusha
loope
cmp
or
push
push
ror
sahf
cmp
std
fsubp
fxtract
jl
or
sbb
call
jmp
add
imul
fs
inc
or
add
push
pusha
pop
add
xor
adc
or
es
outs
dec
(bad)
test
lods
xor
fistp
pop
pop
pop
pop
fisubr
test
loop
and
icebp
(bad)
jg
(bad)
mov
dec
std
leave
xor
cmp
jb
jle
mov
fdivr
mov
(bad)
pop
or
dec
popf
cmp
mov
jecxz
push
sbb
add
popf
int
jecxz
mov
or
cwde
mov
dec
fdiv
pop
aas
leave
outs
movs
jmp
aam
arpl
pop
or
dec
mov
mov
sti
rcr
and
mov
mov
xchg
sbb
add
jmp
in
rcr
es
outs
repnz
clc
fisttp
mov
imul
push
cmp
add
test
pop
add
sub
and
in
sub
xchg
xchg
push
jmp
sti
mov
add
ret
rcr
add
cld
stc
repz
or
es
retf
aam
adc
xor
lahf
sub
mov
cmp
cdq
lahf
(bad)
hlt
cmps
lahf
mov
fwait
jb
icebp
pop
jmp
dec
inc
dec
pop
test
fisubr
cmps
aam
xchg
jns
lea
dec
jmp
les
push
sbb
pop
xchg
mov
xor
pop
jmp
or
jne
sbb
outs
push
xchg
cwde
cmps
shr
call
mov
inc
aaa
je
and
sbb
inc
or
jg
push
jo
pusha
or
mov
sub
pusha
sub
cmps
mov
rcl
and
xor
fistp
pop
xchg
test
lock
add
rcr
aaa
jg
ja
clc
ret
mov
xchg
xchg
sahf
mov
outs
fidivr
dec
(bad)
jnp
addr16
rol
pop
push
and
mov
xlat
add
stc
add
xchg
or
xchg
gs
je
adc
jecxz
or
sahf
out
push
cmp
xor
scas
inc
mov
sbb
pusha
mov
or
pop
xor
popa
xor
dec
inc
and
adc
dec
imul
mov
cmp
and
sub
gs
adc
loop
push
xor
jnp
cld
into
movs
aaa
out
jp
push
test
pop
call
rol
jg
xchg
cmp
outs
mov
das
sub
cld
pop
aaa
outs
fidivr
iret
jg
(bad)
into
into
mov
mov
mov
test
out
in
in
inc
cld
dec
push
pop
adc
data16
cwde
cwde
sub
(bad)
inc
mov
push
and
mov
lea
fs
adc
pop
loop
push
cld
jae
iret
xor
cmp
cs
repz
retf
shl
jne
and
inc
sub
mov
and
fild
mov
adc
pop
mov
aaa
ja
mov
std
mov
push
lock
mov
jge
add
es
daa
jg
lea
fsubrp
lea
aad
sbb
cld
loopne
or
out
fadd
jbe
add
and
jecxz
cmp
xchg
pushf
(bad)
data16
pop
jecxz
jecxz
adc
push
retf
loopne
test
or
iret
icebp
fsub
js
cdq
pushf
repz
shr
mov
xchg
fwait
jge
sti
mov
or
add
mov
mov
add
or
adc
inc
inc
dec
pop
mov
cmps
xor
int
das
fsubr
push
or
pusha
cwde
or
pop
mov
push
dec
movs
pushf
cld
push
mov
(bad)
xchg
xchg
lds
ins
sti
std
lods
setb
jno
and
daa
xor
push
shl
dec
movs
adc
sbb
in
dec
cmp
neg
movs
push
inc
int3
addr16
adc
int
mov
cmp
pop
es
les
aas
sbb
int3
sub
add
imul
jmp
retf
ror
shl
repnz
(bad)
jge
out
aas
dec
popa
mov
push
enter
jg
in
repnz
xchg
xchg
rcr
jecxz
xchg
fimul
dec
adc
push
pop
jb
aas
mov
xchg
and
xchg
sub
clc
clc
cmp
push
stos
aad
xlat
mov
stos
sti
imul
ja
add
inc
push
mov
call
mov
push
movs
jns
jp
cmp
add
sbb
or
pusha
lock
cmp
mov
addr16
mov
sub
arpl
in
cdq
cld
adc
push
add
sub
sub
xchg
(bad)
adc
in
dec
xchg
out
pop
xchg
xor
pusha
mov
mov
inc
not
mov
arpl
je
adc
stc
cmp
cld
or
fs
(bad)
xchg
ins
idiv
call
cmps
fbld
imul
jnp
out
jmp
inc
rcr
cs
adc
pop
jg
(bad)
xchg
jle
rcr
inc
adc
mov
imul
add
loopne
and
push
out
addr16
imul
dec
jmp
mov
jle
sbb
adc
adc
pop
mov
ins
inc
ror
popa
and
(bad)
mov
mov
xor
and
stc
mov
xor
call
jae
xor
or
fmul
lods
mov
mov
mov
ins
ss
mov
ins
mov
nop
add
sub
(bad)
aas
push
sar
add
iret
into
(bad)
data16
in
gs
hlt
mov
pop
test
sbb
call
add
mov
in
cmp
or
shl
mov
mov
adc
adc
aas
iret
jl
clc
stc
icebp
or
or
(bad)
outs
and
jno
add
push
push
in
cld
test
cmp
sbb
adc
add
mov
inc
push
lock
dec
jle
xchg
pop
fidivr
sbb
mov
cmp
push
cmc
add
(bad)
sti
jno
(bad)
jbe
cmp
cdq
or
mov
pop
push
stos
aad
call
fmul
test
push
inc
or
out
int
std
push
dec
out
jmp
jge
jno
inc
lahf
inc
xchg
int
aad
imul
ret
outs
cli
mov
sbb
jo
rcr
sbb
add
ss
dec
stc
or
or
out
jle
mov
mov
fimul
xchg
mov
cmp
sti
inc
add
ins
(bad)
and
push
call
push
cwde
cwde
cwde
inc
mov
push
cmp
in
and
aam
idiv
pop
mov
gs
enter
xchg
xchg
jl
jno
inc
hlt
sbb
scas
cmp
in
retf
ja
jp
test
mov
das
mov
out
mov
inc
push
lock
(bad)
(bad)
(bad)
inc
stos
aad
sahf
sti
into
jae
ins
outs
xchg
sbb
push
xlat
iret
out
leave
add
ja
std
xchg
push
mov
inc
pusha
mov
jae
sbb
jmp
mov
shr
out
int
mul
cwde
cmc
clc
mov
push
xor
mov
xchg
(bad)
jecxz
adc
pop
dec
sub
outs
pop
mov
outs
fdivr
stc
out
idiv
adc
mov
xchg
rol
repnz
(bad)
loope
sti
sti
ja
jns
in
jecxz
(bad)
mov
and
test
(bad)
jg
sub
lahf
push
stos
fwait
out
lahf
dec
movs
push
scas
xlat
push
scas
xlat
ja
std
mov
aad
fsubr
std
into
out
addr16
(bad)
out
sub
sbb
(bad)
icebp
jecxz
mov
xchg
dec
stos
(bad)
loop
cli
(bad)
jmp
mov
iret
mov
jle
rol
das
loop
xchg
arpl
fnstsw
sar
or
push
xlat
(bad)
out
lock
mov
dec
mov
iret
arpl
inc
adc
mov
jle
shl
dec
fimul
mov
std
repnz
mov
sbb
outs
pushf
cmp
mov
xchg
mov
mov
or
adc
mov
mov
pop
loope
pop
push
inc
xor
daa
into
pmuludq
mov
fadd
sub
imul
outs
outs
xor
inc
fisttp
out
ja
and
aas
imul
dec
mov
push
not
pop
int3
icebp
call
cmp
push
jl
lods
mov
pop
js
cld
ror
or
xor
xchg
arpl
daa
daa
nop
jmp
outs
mov
xor
or
icebp
pop
outs
fadd
dec
and
sti
sbb
xchg
pop
loopne
push
mov
dec
je
popf
mov
and
stc
std
sub
jnp
fcmovne
cmp
cmps
inc
hlt
arpl
jge
(bad)
and
or
jg
mov
mov
cld
iret
outs
push
stos
aad
rcl
not
test
and
std
aad
ds
aaa
jnp
aam
push
lods
or
sub
add
inc
aaa
dec
dec
pop
inc
and
dec
sbb
and
adc
push
retf
pop
pop
imul
jge
mov
jbe
mov
loop
test
mov
and
jle
mov
popa
inc
mov
int3
int3
cs
mov
mov
pop
fcmovnu
fdivr
pop
jg
lods
cli
sbb
iret
stos
mov
scas
jg
imul
lea
push
adc
adc
fisttp
aaa
out
jno
pop
adc
mov
push
xchg
sti
mov
push
add
sti
cli
cmp
xchg
out
jns
inc
xchg
and
pop
jge
call
or
lds
stc
out
or
out
mov
pop
jmp
pop
lds
stos
aad
scas
pop
mov
mov
iret
jmp
mov
f2xm1
shr
add
mov
xor
or
sbb
sbb
lds
sbb
mov
mov
cmp
xor
out
or
imul
or
add
sub
pop
xchg
lods
xchg
push
(bad)
fistp
mov
xchg
jle
loop
repz
lahf
push
dec
lods
inc
adc
ss
(bad)
sti
push
std
or
ins
outs
outs
cs
int3
xlat
jg
mov
(bad)
pop
sub
xchg
dec
xchg
stos
sub
add
movs
push
push
(bad)
cmps
jb
lea
push
jmp
icebp
sti
inc
out
xchg
inc
out
fbld
arpl
fdivrp
sti
xchg
mov
sti
push
mov
(bad)
jmp
dec
addr16
pushf
cdq
jnp
movs
pop
popf
jecxz
cwde
xor
in
lock
dec
test
and
lods
lods
lods
sub
retf
call
jp
dec
inc
pop
mov
xor
cmp
jo
sbb
arpl
mov
and
sub
and
push
cld
pop
sbb
mov
mov
sbb
xchg
imul
fbstp
xchg
into
mov
xlat
into
das
mov
jne
mov
test
in
idiv
or
or
xor
xor
push
scas
aad
addr16
test
fnsave
call
fidivr
nop
leave
pop
sbb
data16
loop
jb
mov
jle
and
mov
es
cld
jae
loop
mov
push
cmp
sar
shl
push
ja
(bad)
mov
jle
movs
cmp
cmc
(bad)
shr
jle
repz
sbb
pop
sub
jg
inc
push
xor
(bad)
lea
mov
lods
cmps
cld
jmp
push
mov
dec
sub
dec
mov
into
inc
shl
jecxz
sahf
daa
push
das
jno
ins
adc
push
pop
mov
nop
imul
test
xlat
mov
out
nop
push
and
sti
or
aaa
mov
cdq
movs
mov
mov
cld
jl
push
fwait
test
hlt
outs
mov
mov
adc
in
fidiv
not
gs
mov
nop
mov
test
add
fimul
inc
push
or
ret
or
jle
mov
shr
fmul
pop
ja
mul
bound
aas
jmp
fisttp
sbb
stc
dec
fisttp
(bad)
mov
jo
outs
fdivr
das
das
mov
out
jg
pop
icebp
fbstp
(bad)
jle
add
inc
add
mov
addr16
out
dec
dec
sbb
push
cmc
inc
sub
jle
push
test
adc
daa
push
ja
and
jnp
arpl
cwde
inc
sar
idiv
fisubr
dec
in
pop
jl
fistp
fisubr
movs
xchg
repz
lods
pushf
jns
push
xor
mov
push
imul
aad
inc
cld
bswap
jmp
or
(bad)
jne
jne
shl
ret
cmp
mov
dec
retf
(bad)
leave
stos
aas
add
out
mov
xchg
lea
jmp
push
mul
daa
popf
fucomip
jp
std
xor
mov
sbb
dec
(bad)
mov
loope
or
jmp
out
iret
popf
cmp
or
push
fst
xchg
cld
cvttps2pi
xlat
cmovae
xor
add
mov
push
daa
setg
jne
test
mov
shl
adc
adc
test
xchg
(bad)
fild
jmp
mov
cmp
and
mov
mov
rcr
pusha
scas
imul
inc
mov
das
sub
pop
jl
movs
lds
mov
outs
pop
jp
sub
cli
ins
xchg
dec
jle
and
sbb
test
mov
mov
dec
lahf
ds
popf
int
lods
jbe
push
dec
mov
and
mov
pmaxsw
adc
sub
fild
or
lea
hlt
mov
(bad)
jle
pop
shl
mov
xlat
std
xor
jae
sbb
pop
fnstcw
xor
scas
mov
pop
cld
cld
in
cdq
cdq
fnstenv
add
test
fs
jge
les
or
rcl
inc
add
pop
das
pop
pop
mov
daa
sahf
cmp
loopne
adc
add
in
xor
jp
push
xchg
mul
push
mov
sub
inc
push
call
jo
inc
pushf
adc
mov
fnstsw
push
dec
out
mov
out
pop
jle
stos
imul
out
aad
push
pop
jp
xchg
jae
cli
aad
into
pop
mov
xor
mov
and
pop
xchg
mov
sar
pop
mov
mov
clc
enter
(bad)
sub
or
cmp
call
jno
ins
lea
pushf
cmp
push
fsubr
ja
jle
cmp
mov
stc
std
fiadd
mov
jge
in
div
pop
jle
int3
retf
pop
pop
std
(bad)
jbe
lea
fidivr
out
sti
inc
jp
outs
mov
mov
mov
ret
adc
cmc
xlat
pop
mov
cmp
in
aam
adc
bound
push
sub
fsub
add
xchg
add
call
cmp
iret
cmp
pop
daa
pusha
aas
sub
add
mov
mov
mov
and
(bad)
repnz
jecxz
sub
int3
retf
pop
mov
mov
or
stos
test
out
jns
mov
adc
addr16
mov
test
les
mov
mov
sbb
and
fld
test
dec
stos
fisttp
sub
adc
xchg
aaa
into
mov
jmp
scas
(bad)
jmp
scas
mov
mov
push
xchg
inc
div
cmovb
add
dec
push
add
add
stc
retf
neg
lahf
jle
hlt
dec
(bad)
push
dec
mov
inc
adc
outs
dec
jg
ror
sub
dec
cmp
cmps
inc
cld
fsubr
jne
xor
mov
cmp
jp
mov
ss
pop
mov
in
xchg
dec
in
jp
mov
cld
inc
jmp
and
pop
or
mov
jle
jmp
(bad)
fdiv
hlt
call
outs
mov
push
bound
pop
xchg
aad
mov
and
cmp
mov
scas
add
test
lods
aam
or
ins
fistp
out
rcl
neg
pop
mov
bound
call
pop
call
mov
add
pop
nop
jo
adc
call
jae
cld
(bad)
mov
std
movs
inc
dec
sahf
cmp
mov
push
lock
test
data16
frndint
sti
int
dec
rcl
fisubr
add
daa
jmp
and
adc
into
add
mov
repz
(bad)
pop
xchg
sbb
scas
das
pop
mov
jae
pop
sub
sub
jnp
mov
sub
add
xor
repz
xor
cmp
in
dec
cmp
daa
es
(bad)
or
or
movs
mov
inc
or
jns
or
cmp
sar
bound
xchg
gs
out
retf
mov
mov
aaa
mov
mov
popf
pop
jg
fnsave
lods
scas
scas
cs
(bad)
hlt
pop
loope
and
hlt
aam
(bad)
mov
(bad)
(bad)
enter
shl
add
ds
aam
aas
std
(bad)
out
cli
popf
fistp
loopne
adc
pop
mov
mov
xor
dec
and
sub
mov
loope
std
clc
test
inc
imul
xlat
test
jno
jns
icebp
dec
ins
ins
jne
jbe
(bad)
lea
or
or
mov
fild
jmp
and
push
inc
push
xor
pop
add
or
jecxz
ds
fsub
ds
aam
inc
cmps
cmps
cmps
daa
inc
or
dec
cdq
imul
or
or
ret
adc
sub
or
jge
test
sub
pop
xorps
xchg
ins
ret
jno
clc
add
popf
dec
(bad)
stos
aad
in
lea
pop
(bad)
push
out
cs
pop
pop
pop
pop
pop
pop
pop
pop
pop
push
or
sar
inc
adc
icebp
inc
ret
mov
pusha
inc
inc
or
lock
mov
std
fadd
rcl
xchg
dec
pop
call
cmps
push
outs
cmp
sbb
mov
jo
or
mov
push
add
and
xchg
push
jp
jmp
and
mov
sub
outs
ss
pop
test
retf
int
sti
out
rcl
push
fisubr
iret
das
int3
pop
out
addr16
pop
lods
test
pop
inc
scas
daa
lahf
pop
mov
(bad)
dec
add
loop
cmp
sbb
sbb
gs
push
push
mov
push
cmp
jecxz
aas
jle
push
jmp
arpl
mov
test
fs
push
cmp
push
ret
sub
mov
retf
mov
and
and
adc
dec
sub
add
movs
adc
or
jmp
pop
cmps
pop
scas
jnp
in
push
stos
pop
scas
js
push
leave
pop
pop
pop
imul
mov
ins
add
inc
hlt
ds
ficom
mov
jg
and
loopne
jbe
sbb
xchg
jmp
and
pusha
int3
jno
mov
daa
dec
push
sub
jl
ret
cld
call
mov
fnstenv
adc
xchg
dec
fist
mov
mov
fdiv
pop
sahf
out
jbe
in
or
jae
pop
pop
pop
ins
jno
mov
mov
mov
xchg
xchg
lea
fs
pop
jnp
dec
loopne
or
xchg
hlt
(bad)
mov
sbb
icebp
jecxz
xor
xchg
and
xor
je
movs
or
test
pop
push
mov
mov
fisttp
scas
fwait
data16
dec
ja
xchg
sahf
out
cmp
push
add
lea
pop
add
lds
cli
fistp
imul
dec
xchg
mov
inc
adc
(bad)
lds
jb
and
push
or
mov
call
jge
inc
push
xor
inc
or
shl
jmp
jbe
ror
mov
xor
call
mov
adc
xor
outs
add
ins
cmp
inc
xchg
mov
jp
call
dec
ret
or
fild
(bad)
and
adc
xor
adc
xor
adc
xor
adc
xor
adc
xor
adc
xor
adc
xor
adc
xor
adc
xor
adc
xor
adc
xor
adc
xor
adc
xor
adc
cwde
push
inc
pop
push
fild
add
dec
inc
scas
inc
pusha
and
xchg
add
add
add
push
add
xor
add
add
push
add
add
and
add
add
call
pop
add
sbb
adc
add
add
call
or
add
adc
add
add
sub
add
push
or
add
xor
add
add
add
or
add
add
or
test
add
out
sbb
add
sbb
add
add
add
push
add
xchg
and
add
adc
add
add
add
add
pop
sub
add
xor
add
add
add
xor
add
sub
add
add
add
add
outs
push
add
and
add
add
and
test
add
(bad)
jo
add
sbb
add
add
add
add
add
add
add
mov
add
adc
add
add
add
add
mov
add
add
add
add
add
add
add
add
add
add
adc
add
adc
add
add
add
add
add
add
add
add
inc
add
add
add
inc
inc
add
inc
inc
(bad)
inc
add
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
push
add
ud0
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
push
add
ud0
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
push
add
ud0
data16
data16
add
ud0
data16
data16
add
ud0
data16
data16
add
ud0
data16
data16
add
ud0
data16
data16
add
ud0
data16
data16
add
ud0
data16
data16
add
ud0
data16
data16
add
ud0
data16
data16
add
ud0
data16
data16
add
ud0
data16
data16
add
ud0
data16
data16
add
ud0
data16
data16
add
ud0
data16
data16
add
ud0
data16
data16
add
ud0
data16
data16
add
ud0
data16
data16
add
ud0
data16
data16
add
ud0
data16
data16
add
ud0
data16
data16
add
ud0
data16
data16
add
ud0
data16
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
push
data16
add
ud0
data16
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
push
data16
add
ud0
data16
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
push
data16
add
ud0
data16
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
push
data16
add
ud0
data16
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
push
data16
add
ud0
data16
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
push
data16
add
ud0
data16
(bad)
(bad)
(bad)
jmp
push
data16
add
ud0
data16
(bad)
(bad)
(bad)
jmp
push
data16
add
ud0
data16
(bad)
(bad)
(bad)
jmp
push
data16
add
ud0
data16
(bad)
(bad)
(bad)
jmp
push
data16
add
ud0
data16
(bad)
(bad)
(bad)
jmp
push
data16
lock
ud0
data16
(bad)
(bad)
(bad)
jmp
push
data16
push
add
ud0
data16
(bad)
(bad)
(bad)
jmp
push
data16
push
add
ud0
data16
(bad)
(bad)
(bad)
jmp
push
data16
(bad)
inc
add
ud0
data16
(bad)
(bad)
(bad)
jmp
push
data16
push
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
push
add
add
ud0
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
add
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
inc
add
add
add
pop
add
loopne
add
add
add
loopne
add
add
add
loopne
add
add
add
loopne
add
add
add
loopne
add
add
add
loopne
add
add
add
loopne
add
add
add
loopne
add
add
add
loopne
add
add
add
loopne
add
add
add
loopne
add
add
add
loopne
add
add
add
loopne
add
add
add
loopne
add
add
add
loopne
add
add
add
loopne
add
add
add
loopne
add
add
add
loopne
add
add
add
loopne
add
add
add
loopne
add
add
add
loopne
add
add
add
loopne
add
add
add
loopne
add
add
add
loopne
add
add
add
loopne
add
add
add
loopne
add
add
add
loopne
add
add
add
loopne
add
add
add
loopne
add
add
add
loopne
add
add
add
loopne
add
add
add
loopne
add
add
add
loopne
add
add
add
loopne
add
add
add
loopne
add
add
add
loopne
add
add
add
loopne
add
add
add
loopne
add
add
add
loopne
add
add
add
loopne
add
add
add
add
add
inc
add
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
inc
add
add
add
inc
inc
add
inc
inc
(bad)
inc
add
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
data16
add
data16
add
data16
add
data16
add
data16
add
data16
add
data16
add
data16
add
data16
add
data16
add
data16
add
data16
add
data16
add
data16
add
data16
(bad)
(bad)
(bad)
(bad)
jmp
inc
add
data16
(bad)
(bad)
(bad)
(bad)
jmp
inc
add
data16
(bad)
(bad)
(bad)
(bad)
jmp
inc
add
data16
(bad)
(bad)
(bad)
(bad)
jmp
inc
add
data16
(bad)
jmp
jmp
inc
add
data16
(bad)
jmp
jmp
inc
add
data16
(bad)
jmp
jmp
inc
add
data16
(bad)
jmp
jmp
jg
add
jmp
data16
(bad)
jmp
jmp
(bad)
inc
add
data16
(bad)
jmp
jmp
push
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
push
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
rol
xadd
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
add
add
add
add
add
add
add
add
add
and
add
add
add
add
add
add
add
add
inc
add
add
add
inc
inc
add
inc
inc
(bad)
inc
add
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
data16
add
mul
data16
add
mul
data16
add
mul
data16
add
mul
data16
add
mul
data16
add
mul
data16
add
mul
data16
add
mul
data16
add
mul
data16
add
mul
(bad)
(bad)
(bad)
push
outs
add
mul
(bad)
(bad)
(bad)
push
outs
add
mul
(bad)
(bad)
(bad)
push
outs
add
mul
(bad)
(bad)
(bad)
push
outs
add
mul
(bad)
jmp
mul
add
mul
(bad)
jmp
mul
add
mul
(bad)
jmp
mul
add
mul
(bad)
jmp
imul
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
push
add
(bad)
(bad)
inc
(bad)
(bad)
inc
rol
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
(bad)
inc
(bad)
(bad)
inc
sub
add
adc
add
and
add
add
add
add
add
add
add
add
add
add
add
add
add
add
inc
add
add
add
inc
inc
add
inc
inc
(bad)
inc
add
(bad)
inc
ud0
(bad)
(bad)
(bad)
push
pcmpgtd
data16
data16
data16
data16
data16
data16
data16
push
lock
push
lock
data16
pcmpgtd
data16
pcmpgtd
data16
ud0
(bad)
(bad)
(bad)
inc
(bad)
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
inc
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
add
add
pushf
push
add
mov
out
lock
div
add
stc
stc
add
(bad)
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
inc
add
add
add
pop
add
loopne
add
add
add
loopne
add
add
add
loopne
add
add
add
loopne
add
add
add
loopne
add
add
add
loopne
add
add
add
loopne
add
add
add
loopne
add
add
add
loopne
add
add
add
loopne
add
add
add
loopne
add
add
add
loopne
add
add
add
loopne
add
add
add
loopne
add
add
add
loopne
add
add
add
loopne
add
add
add
loopne
add
add
add
loopne
add
add
add
loopne
add
add
add
loopne
add
add
add
loopne
add
add
add
loopne
add
add
add
loopne
add
add
add
loopne
add
add
add
loopne
add
add
add
loopne
add
add
add
loopne
add
add
add
loopne
add
add
add
loopne
add
add
add
loopne
add
add
add
loopne
add
add
add
loopne
add
add
add
loopne
add
add
add
loopne
add
add
add
loopne
add
add
add
loopne
add
add
add
loopne
add
add
add
loopne
add
add
add
loopne
add
add
add
loopne
add
add
add
add
add
inc
add
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
inc
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
add
add
pop
add
out
lock
div
add
stc
stc
add
(bad)
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
rol
xadd
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pushf
push
add
mov
jb
add
in
out
icebp
out
lock
div
add
clc
clc
add
(bad)
inc
add
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
add
add
push
add
add
add
add
add
add
add
add
add
push
add
add
push
add
add
add
add
add
add
add
add
add
push
add
add
push
add
add
add
add
add
add
add
add
add
push
add
add
push
add
add
add
add
add
add
add
add
add
push
add
add
push
add
add
add
add
add
add
add
add
add
push
add
add
push
add
add
add
add
add
add
add
add
add
push
add
add
push
add
add
add
add
add
add
add
add
add
push
add
add
push
add
add
add
add
add
add
add
add
add
push
add
add
push
add
add
add
add
add
add
add
add
add
push
add
add
push
add
add
add
add
add
add
add
add
add
push
add
add
push
add
add
add
add
add
add
push
add
add
push
add
add
add
add
add
add
push
add
add
push
add
add
add
add
add
add
push
add
add
push
add
add
add
add
add
add
push
add
add
push
add
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
add
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
pop
add
(bad)
inc
(bad)
(bad)
inc
rol
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
(bad)
inc
(bad)
(bad)
inc
sub
add
adc
add
and
add
add
or
add
add
add
add
add
add
add
add
add
add
pushf
push
add
mov
out
lock
div
add
stc
stc
add
(bad)
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
(bad)
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
inc
add
add
add
add
add
add
add
and
add
add
and
add
div
push
div
push
div
push
div
push
div
push
div
push
div
push
div
push
div
push
div
push
div
push
div
push
div
push
div
push
div
push
div
push
div
push
div
push
div
push
div
push
div
push
div
push
div
push
div
push
div
push
div
push
div
push
div
push
div
push
div
push
div
push
div
push
div
push
div
push
div
push
div
push
div
push
div
push
div
push
div
push
div
push
div
inc
add
add
div
push
div
push
div
push
div
push
div
push
div
push
div
push
div
push
div
push
div
push
div
push
div
push
div
push
div
push
div
push
div
push
div
push
div
push
div
push
div
push
div
push
div
push
div
push
div
push
div
push
div
push
div
push
div
push
div
push
div
push
div
push
div
push
div
push
div
push
div
push
div
push
div
push
div
push
div
push
div
push
div
push
div
inc
add
add
div
push
div
push
div
push
div
push
div
push
div
push
div
push
div
push
div
push
div
push
div
push
div
push
div
push
div
push
div
push
div
push
div
push
div
push
div
push
div
push
div
push
div
push
div
push
div
push
div
push
div
push
div
push
div
push
div
push
div
push
div
push
div
push
div
push
div
push
div
push
div
push
div
push
div
push
div
push
div
push
div
push
div
inc
add
add
div
push
div
push
div
call
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
div
idiv
div
idiv
div
idiv
div
idiv
div
idiv
div
idiv
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
div
idiv
div
idiv
div
idiv
div
idiv
div
idiv
div
idiv
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
div
idiv
div
idiv
div
idiv
div
idiv
div
idiv
div
idiv
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
div
idiv
div
idiv
div
idiv
div
idiv
div
idiv
div
idiv
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
div
idiv
div
idiv
div
idiv
div
idiv
div
idiv
div
idiv
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
div
idiv
div
idiv
div
idiv
div
idiv
div
idiv
div
idiv
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
div
idiv
div
idiv
div
idiv
div
idiv
div
idiv
div
idiv
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
div
idiv
div
idiv
div
idiv
div
idiv
div
idiv
div
idiv
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
div
idiv
div
idiv
div
idiv
div
idiv
div
idiv
div
idiv
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
div
idiv
div
idiv
div
idiv
div
idiv
div
idiv
div
idiv
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
div
idiv
div
idiv
div
idiv
div
idiv
div
idiv
div
idiv
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
div
idiv
div
idiv
div
idiv
div
idiv
div
idiv
div
idiv
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
div
idiv
div
idiv
div
idiv
div
idiv
div
idiv
div
idiv
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
div
idiv
div
idiv
div
idiv
div
idiv
div
idiv
div
idiv
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
div
idiv
div
idiv
div
idiv
div
idiv
div
idiv
div
idiv
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
div
idiv
div
idiv
div
idiv
div
idiv
div
idiv
div
idiv
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
div
idiv
div
idiv
div
idiv
div
idiv
div
idiv
div
idiv
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
div
idiv
div
idiv
div
idiv
div
idiv
div
idiv
div
idiv
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
div
idiv
div
idiv
div
idiv
div
idiv
div
idiv
div
idiv
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
div
idiv
div
idiv
div
idiv
div
idiv
div
idiv
div
idiv
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
div
idiv
div
idiv
div
idiv
div
idiv
div
idiv
div
idiv
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
icebp
out
lock
out
lock
out
lock
out
lock
out
lock
out
lock
out
lock
out
lock
out
lock
out
lock
out
lock
out
lock
out
lock
out
lock
out
lock
out
lock
out
lock
out
lock
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
div
idiv
div
idiv
div
idiv
div
idiv
div
idiv
div
idiv
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
icebp
out
lock
out
lock
out
lock
out
lock
out
lock
out
lock
out
lock
out
lock
out
lock
out
lock
out
lock
out
lock
out
lock
out
lock
out
lock
out
lock
out
lock
out
lock
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
div
idiv
div
idiv
div
idiv
div
idiv
div
idiv
div
idiv
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
icebp
out
lock
out
lock
out
lock
out
lock
out
lock
out
lock
out
lock
out
lock
out
lock
out
lock
out
lock
out
lock
out
lock
out
lock
out
lock
out
lock
out
lock
out
lock
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
div
idiv
div
idiv
div
idiv
div
idiv
div
idiv
div
idiv
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
icebp
out
lock
out
lock
out
lock
out
lock
out
lock
out
lock
out
lock
out
lock
out
lock
out
lock
out
lock
out
lock
out
lock
out
lock
out
lock
out
lock
out
lock
out
lock
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
div
idiv
div
idiv
div
idiv
div
idiv
div
idiv
div
idiv
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
icebp
out
lock
out
lock
out
lock
out
lock
out
lock
out
lock
out
lock
out
lock
out
lock
out
lock
out
lock
out
lock
out
lock
out
lock
out
lock
out
lock
out
lock
out
lock
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
div
idiv
div
idiv
div
idiv
div
idiv
div
idiv
div
idiv
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
icebp
out
lock
out
lock
out
lock
out
lock
out
lock
out
lock
out
lock
out
lock
out
lock
out
lock
out
lock
out
lock
out
lock
out
lock
out
lock
out
lock
out
lock
out
lock
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
div
idiv
div
idiv
div
idiv
div
idiv
div
idiv
div
idiv
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
icebp
out
lock
out
lock
out
lock
out
lock
out
lock
out
lock
out
lock
out
lock
out
lock
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
icebp
out
lock
out
lock
out
lock
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
div
idiv
div
idiv
div
idiv
div
idiv
div
idiv
div
idiv
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
icebp
out
lock
out
lock
out
lock
out
lock
out
lock
out
lock
out
lock
out
lock
out
lock
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
icebp
out
lock
out
lock
out
lock
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
div
idiv
div
idiv
div
idiv
div
idiv
div
idiv
div
idiv
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
icebp
out
lock
out
lock
out
lock
out
lock
out
lock
out
lock
out
lock
out
lock
out
lock
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
icebp
out
lock
out
lock
out
lock
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
div
idiv
div
idiv
div
idiv
div
idiv
div
idiv
div
idiv
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
icebp
out
lock
out
lock
out
lock
out
lock
out
lock
out
lock
out
lock
out
lock
out
lock
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
icebp
out
lock
out
lock
out
lock
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
mov
div
push
div
push
div
inc
add
add
div
push
div
push
div
call
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
icebp
out
lock
out
lock
out
lock
out
lock
out
lock
out
lock
out
lock
out
lock
out
lock
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
icebp
out
lock
out
lock
out
lock
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
mov
div
push
div
push
div
push
div
inc
add
add
div
push
div
push
div
call
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
icebp
out
lock
out
lock
out
lock
out
lock
out
lock
out
lock
out
lock
out
lock
out
lock
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
icebp
out
lock
out
lock
out
lock
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
mov
div
push
div
push
div
push
div
push
div
inc
add
add
div
push
div
push
div
call
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
icebp
out
lock
out
lock
out
lock
out
lock
out
lock
out
lock
out
lock
out
lock
out
lock
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
icebp
out
lock
out
lock
out
lock
add
pushf
push
add
pushf
push
add
pushf
push
add
mov
div
push
div
push
div
push
div
push
div
push
div
lahf
div
idiv
div
idiv
div
idiv
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
icebp
out
lock
out
lock
out
lock
out
lock
out
lock
out
lock
out
lock
out
lock
out
lock
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
icebp
out
lock
out
lock
out
lock
add
pushf
push
add
pushf
push
add
mov
div
push
div
push
div
push
div
push
div
push
div
lahf
div
idiv
div
idiv
div
idiv
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
icebp
out
lock
out
lock
out
lock
out
lock
out
lock
out
lock
out
lock
out
lock
out
lock
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
icebp
out
lock
out
lock
out
lock
add
pushf
push
add
mov
div
push
div
push
div
push
div
push
div
push
div
lahf
div
idiv
div
idiv
div
idiv
div
idiv
div
idiv
div
idiv
div
idiv
div
idiv
div
idiv
div
idiv
div
idiv
div
idiv
div
idiv
div
idiv
div
idiv
div
idiv
div
idiv
div
idiv
div
idiv
div
idiv
div
idiv
div
idiv
div
idiv
div
idiv
div
idiv
div
idiv
div
idiv
div
idiv
div
idiv
div
idiv
div
idiv
div
idiv
div
idiv
div
idiv
div
idiv
div
idiv
div
idiv
div
idiv
div
neg
div
idiv
div
idiv
div
idiv
div
idiv
div
idiv
div
idiv
div
idiv
div
idiv
div
idiv
div
idiv
div
idiv
div
idiv
div
idiv
div
idiv
div
idiv
div
idiv
div
idiv
div
idiv
div
idiv
div
idiv
div
idiv
div
idiv
div
idiv
div
idiv
div
idiv
div
idiv
div
idiv
div
idiv
div
idiv
div
idiv
div
idiv
div
idiv
div
idiv
div
idiv
div
idiv
div
idiv
div
idiv
div
neg
div
idiv
div
idiv
div
idiv
div
idiv
div
idiv
div
idiv
div
idiv
div
idiv
div
idiv
div
idiv
div
idiv
div
idiv
div
idiv
div
idiv
div
idiv
div
idiv
div
idiv
div
idiv
div
idiv
div
idiv
div
idiv
div
idiv
div
idiv
div
idiv
div
idiv
div
idiv
div
idiv
div
idiv
div
idiv
div
idiv
div
idiv
div
idiv
div
idiv
div
idiv
div
idiv
div
idiv
div
neg
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
inc
add
add
add
pop
add
loopne
add
add
add
loopne
add
add
add
loopne
add
add
add
loopne
add
add
add
loopne
add
add
add
loopne
add
add
add
loopne
add
add
add
loopne
add
add
add
loopne
add
add
add
loopne
add
add
add
loopne
add
add
add
loopne
add
add
add
loopne
add
add
add
loopne
add
add
add
loopne
add
add
add
loopne
add
add
add
loopne
add
add
add
loopne
add
add
add
loopne
add
add
add
loopne
add
add
add
loopne
add
add
add
loopne
add
add
add
loopne
add
add
add
loopne
add
add
add
loopne
add
add
add
loopne
add
add
add
loopne
add
add
add
loopne
add
add
add
loopne
add
add
add
loopne
add
add
add
loopne
add
add
add
loopne
add
add
add
loopne
add
add
add
loopne
add
add
add
loopne
add
add
add
loopne
add
add
add
loopne
add
add
add
loopne
add
add
add
loopne
add
add
add
loopne
add
add
add
add
add
inc
add
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
inc
add
add
add
add
add
add
add
and
add
add
inc
sbb
add
div
push
div
push
div
push
div
push
div
push
div
push
div
push
div
push
div
push
div
push
div
push
div
push
div
push
div
push
div
push
div
push
div
push
div
push
div
push
div
push
div
push
div
push
div
push
div
push
div
push
div
push
div
push
div
push
div
push
div
push
div
push
div
inc
add
add
div
push
div
push
div
push
div
push
div
push
div
push
div
push
div
push
div
push
div
push
div
push
div
push
div
push
div
push
div
push
div
push
div
push
div
push
div
push
div
push
div
push
div
push
div
push
div
push
div
push
div
push
div
push
div
push
div
push
div
push
div
push
div
inc
add
add
div
push
div
call
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
div
idiv
div
idiv
div
idiv
div
idiv
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
div
idiv
div
idiv
div
idiv
div
idiv
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
div
idiv
div
idiv
div
idiv
div
idiv
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
div
idiv
div
idiv
div
idiv
div
idiv
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
div
idiv
div
idiv
div
idiv
div
idiv
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
div
idiv
div
idiv
div
idiv
div
idiv
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
div
idiv
div
idiv
div
idiv
div
idiv
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
div
idiv
div
idiv
div
idiv
div
idiv
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
div
idiv
div
idiv
div
idiv
div
idiv
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
div
idiv
div
idiv
div
idiv
div
idiv
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
div
idiv
div
idiv
div
idiv
div
idiv
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
div
idiv
div
idiv
div
idiv
div
idiv
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
div
idiv
div
idiv
div
idiv
div
idiv
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
div
idiv
div
idiv
div
idiv
div
idiv
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
div
idiv
div
idiv
div
idiv
div
idiv
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
div
idiv
div
idiv
div
idiv
div
idiv
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
icebp
out
lock
out
lock
out
lock
out
lock
out
lock
out
lock
out
lock
out
lock
out
lock
out
lock
out
lock
out
lock
out
lock
out
lock
out
lock
out
lock
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
div
idiv
div
idiv
div
idiv
div
idiv
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
icebp
out
lock
out
lock
out
lock
out
lock
out
lock
out
lock
out
lock
out
lock
out
lock
out
lock
out
lock
out
lock
out
lock
out
lock
out
lock
out
lock
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
div
idiv
div
idiv
div
idiv
div
idiv
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
icebp
out
lock
out
lock
out
lock
out
lock
out
lock
out
lock
out
lock
out
lock
out
lock
out
lock
out
lock
out
lock
out
lock
out
lock
out
lock
out
lock
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
div
idiv
div
idiv
div
idiv
div
idiv
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
icebp
out
lock
out
lock
out
lock
out
lock
out
lock
out
lock
out
lock
out
lock
out
lock
out
lock
out
lock
out
lock
out
lock
out
lock
out
lock
out
lock
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
div
idiv
div
idiv
div
idiv
div
idiv
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
icebp
out
lock
out
lock
out
lock
out
lock
out
lock
out
lock
out
lock
out
lock
out
lock
out
lock
out
lock
out
lock
out
lock
out
lock
out
lock
out
lock
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
div
idiv
div
idiv
div
idiv
div
idiv
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
icebp
out
lock
out
lock
out
lock
out
lock
out
lock
out
lock
out
lock
out
lock
out
lock
out
lock
out
lock
out
lock
out
lock
out
lock
out
lock
out
lock
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
div
idiv
div
idiv
div
idiv
div
idiv
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
icebp
out
lock
out
lock
out
lock
out
lock
out
lock
out
lock
out
lock
out
lock
add
pushf
push
add
pushf
push
add
icebp
out
lock
out
lock
out
lock
out
lock
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
div
idiv
div
idiv
div
idiv
div
idiv
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
icebp
out
lock
out
lock
out
lock
out
lock
out
lock
out
lock
out
lock
out
lock
add
pushf
push
add
pushf
push
add
icebp
out
lock
out
lock
out
lock
out
lock
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
div
idiv
div
idiv
div
idiv
div
idiv
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
icebp
out
lock
out
lock
out
lock
out
lock
out
lock
out
lock
out
lock
out
lock
add
pushf
push
add
pushf
push
add
icebp
out
lock
out
lock
out
lock
out
lock
add
pushf
push
add
pushf
push
add
pushf
push
add
aam
call
div
out
div
idiv
div
idiv
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
icebp
out
lock
out
lock
out
lock
out
lock
out
lock
out
lock
out
lock
out
lock
add
pushf
push
add
pushf
push
add
icebp
out
lock
out
lock
out
lock
out
lock
add
pushf
push
add
pushf
push
add
aam
call
div
out
div
div
div
idiv
div
idiv
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
icebp
out
lock
out
lock
out
lock
out
lock
out
lock
out
lock
out
lock
out
lock
add
pushf
push
add
pushf
push
add
icebp
out
lock
out
lock
out
lock
out
lock
add
pushf
push
add
aam
call
div
out
div
div
div
idiv
div
idiv
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
icebp
out
lock
out
lock
out
lock
out
lock
out
lock
out
lock
out
lock
out
lock
add
pushf
push
add
pushf
push
add
icebp
out
lock
out
lock
out
lock
out
lock
add
aam
call
div
out
div
div
div
idiv
div
idiv
div
idiv
div
idiv
div
idiv
div
idiv
div
idiv
div
idiv
div
idiv
div
idiv
div
idiv
div
idiv
div
idiv
div
idiv
div
idiv
div
idiv
div
idiv
div
idiv
div
idiv
div
idiv
div
idiv
div
idiv
div
idiv
div
idiv
div
idiv
div
idiv
div
idiv
div
imul
div
div
div
idiv
div
idiv
div
idiv
div
idiv
div
idiv
div
idiv
div
idiv
div
idiv
div
idiv
div
idiv
div
idiv
div
idiv
div
idiv
div
idiv
div
idiv
div
idiv
div
idiv
div
idiv
div
idiv
div
idiv
div
idiv
div
idiv
div
idiv
div
idiv
div
idiv
div
idiv
div
imul
div
div
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
inc
add
lock
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
lock
add
add
add
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
inc
add
sub
add
and
add
inc
add
add
add
add
add
add
add
add
div
push
div
push
div
push
div
push
div
push
div
push
div
push
div
push
div
push
div
push
div
push
div
push
div
push
div
push
div
push
div
push
div
push
div
push
div
push
div
push
div
push
div
push
div
push
div
push
div
push
div
push
div
push
div
inc
add
add
div
push
div
push
div
push
div
push
div
push
div
push
div
push
div
push
div
push
div
push
div
push
div
push
div
push
div
push
div
push
div
push
div
push
div
push
div
push
div
push
div
push
div
push
div
push
div
push
div
push
div
push
div
push
div
inc
add
add
div
push
div
call
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
div
idiv
div
idiv
div
idiv
div
idiv
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
div
idiv
div
idiv
div
idiv
div
idiv
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
div
idiv
div
idiv
div
idiv
div
idiv
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
div
idiv
div
idiv
div
idiv
div
idiv
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
div
idiv
div
idiv
div
idiv
div
idiv
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
div
idiv
div
idiv
div
idiv
div
idiv
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
div
idiv
div
idiv
div
idiv
div
idiv
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
div
idiv
div
idiv
div
idiv
div
idiv
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
div
idiv
div
idiv
div
idiv
div
idiv
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
div
idiv
div
idiv
div
idiv
div
idiv
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
div
idiv
div
idiv
div
idiv
div
idiv
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
div
idiv
div
idiv
div
idiv
div
idiv
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
div
idiv
div
idiv
div
idiv
div
idiv
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
div
idiv
div
idiv
div
idiv
div
idiv
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
icebp
out
lock
out
lock
out
lock
out
lock
out
lock
out
lock
out
lock
out
lock
out
lock
out
lock
out
lock
out
lock
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
div
idiv
div
idiv
div
idiv
div
idiv
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
icebp
out
lock
out
lock
out
lock
out
lock
out
lock
out
lock
out
lock
out
lock
out
lock
out
lock
out
lock
out
lock
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
div
idiv
div
idiv
div
idiv
div
idiv
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
icebp
out
lock
out
lock
out
lock
out
lock
out
lock
out
lock
out
lock
out
lock
out
lock
out
lock
out
lock
out
lock
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
div
idiv
div
idiv
div
idiv
div
idiv
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
icebp
out
lock
out
lock
out
lock
out
lock
out
lock
out
lock
out
lock
out
lock
out
lock
out
lock
out
lock
out
lock
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
div
idiv
div
idiv
div
idiv
div
idiv
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
icebp
out
lock
out
lock
out
lock
out
lock
out
lock
out
lock
add
pushf
push
add
pushf
push
add
icebp
out
lock
out
lock
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
div
idiv
div
idiv
div
idiv
div
idiv
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
icebp
out
lock
out
lock
out
lock
out
lock
out
lock
out
lock
add
pushf
push
add
pushf
push
add
icebp
out
lock
out
lock
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
div
idiv
div
idiv
div
idiv
div
idiv
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
icebp
out
lock
out
lock
out
lock
out
lock
out
lock
out
lock
add
pushf
push
add
pushf
push
add
icebp
out
lock
out
lock
add
pushf
push
add
pushf
push
add
pushf
push
add
mov
div
push
div
inc
add
add
div
push
div
call
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
icebp
out
lock
out
lock
out
lock
out
lock
out
lock
out
lock
add
pushf
push
add
pushf
push
add
icebp
out
lock
out
lock
add
pushf
push
add
pushf
push
add
mov
div
push
div
push
div
inc
add
add
div
push
div
call
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
icebp
out
lock
out
lock
out
lock
out
lock
out
lock
out
lock
add
pushf
push
add
pushf
push
add
icebp
out
lock
out
lock
add
pushf
push
add
mov
div
push
div
push
div
push
div
lahf
div
idiv
div
idiv
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
icebp
out
lock
out
lock
out
lock
out
lock
out
lock
out
lock
add
pushf
push
add
pushf
push
add
icebp
out
lock
out
lock
add
mov
div
push
div
push
div
push
div
lahf
div
idiv
div
idiv
div
idiv
div
idiv
div
idiv
div
idiv
div
idiv
div
idiv
div
idiv
div
idiv
div
idiv
div
idiv
div
idiv
div
idiv
div
idiv
div
idiv
div
idiv
div
idiv
div
idiv
div
idiv
div
idiv
div
idiv
div
idiv
div
idiv
div
idiv
div
neg
div
idiv
div
idiv
div
idiv
div
idiv
div
idiv
div
idiv
div
idiv
div
idiv
div
idiv
div
idiv
div
idiv
div
idiv
div
idiv
div
idiv
div
idiv
div
idiv
div
idiv
div
idiv
div
idiv
div
idiv
div
idiv
div
idiv
div
idiv
div
idiv
div
neg
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
rol
xadd
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
add
add
add
add
add
add
add
add
add
add
add
div
idiv
div
idiv
div
idiv
div
idiv
div
idiv
div
idiv
div
idiv
div
idiv
div
idiv
div
idiv
div
idiv
div
idiv
div
idiv
div
idiv
div
idiv
div
idiv
div
idiv
div
idiv
div
idiv
div
idiv
div
idiv
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
div
idiv
div
idiv
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
div
idiv
div
idiv
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
div
idiv
div
idiv
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
div
idiv
div
idiv
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
div
idiv
div
idiv
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
div
idiv
div
idiv
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
div
idiv
div
idiv
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
div
idiv
div
idiv
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
div
idiv
div
idiv
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
div
idiv
div
idiv
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
icebp
out
lock
out
lock
out
lock
out
lock
out
lock
out
lock
out
lock
out
lock
out
lock
out
lock
push
add
pushf
push
add
pushf
push
add
div
idiv
div
idiv
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
icebp
out
lock
out
lock
out
lock
out
lock
out
lock
out
lock
out
lock
out
lock
out
lock
out
lock
push
add
pushf
push
add
pushf
push
add
div
idiv
div
idiv
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
icebp
out
lock
out
lock
out
lock
out
lock
out
lock
out
lock
out
lock
out
lock
out
lock
out
lock
push
add
pushf
push
add
pushf
push
add
div
idiv
div
idiv
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
icebp
out
lock
out
lock
out
lock
out
lock
out
lock
out
lock
out
lock
out
lock
out
lock
out
lock
push
add
pushf
push
add
pushf
push
add
div
idiv
div
idiv
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
icebp
out
lock
out
lock
out
lock
out
lock
out
lock
add
pushf
push
add
icebp
out
lock
out
lock
push
add
pushf
push
add
pushf
push
add
div
idiv
div
idiv
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
icebp
out
lock
out
lock
out
lock
out
lock
out
lock
add
pushf
push
add
icebp
out
lock
out
lock
push
add
pushf
push
add
lods
jb
push
div
rol
add
div
idiv
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
icebp
out
lock
out
lock
out
lock
out
lock
out
lock
add
pushf
push
add
icebp
out
lock
out
lock
push
add
lods
jb
push
jmp
div
idiv
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
icebp
out
lock
out
lock
out
lock
out
lock
out
lock
add
pushf
push
add
icebp
out
lock
out
lock
pop
ud0
jmp
div
idiv
div
idiv
div
idiv
div
idiv
div
idiv
div
idiv
div
idiv
div
idiv
div
idiv
div
idiv
div
idiv
div
idiv
div
idiv
div
idiv
div
idiv
div
idiv
div
test
add
add
(bad)
inc
(bad)
(bad)
inc
rol
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
(bad)
inc
(bad)
(bad)
inc
sub
add
adc
add
sub
add
add
and
add
add
nop
push
add
div
idiv
div
idiv
div
idiv
div
idiv
div
idiv
div
idiv
div
idiv
div
idiv
div
idiv
div
idiv
div
idiv
div
idiv
div
idiv
div
idiv
div
idiv
div
idiv
div
idiv
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
div
idiv
div
idiv
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
div
idiv
div
idiv
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
div
idiv
div
idiv
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
div
idiv
div
idiv
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
div
idiv
div
idiv
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
div
idiv
div
idiv
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
div
idiv
div
idiv
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
div
idiv
div
idiv
pushf
push
add
pushf
push
add
pushf
push
add
icebp
out
lock
out
lock
out
lock
out
lock
out
lock
out
lock
out
lock
out
lock
add
pushf
push
add
div
idiv
div
idiv
pushf
push
add
pushf
push
add
pushf
push
add
icebp
out
lock
out
lock
out
lock
out
lock
out
lock
out
lock
out
lock
out
lock
add
pushf
push
add
div
idiv
div
idiv
pushf
push
add
pushf
push
add
pushf
push
add
icebp
out
lock
out
lock
out
lock
out
lock
out
lock
out
lock
out
lock
out
lock
add
pushf
push
add
div
idiv
div
idiv
pushf
push
add
pushf
push
add
pushf
push
add
icebp
out
lock
out
lock
out
lock
out
lock
add
icebp
out
lock
out
lock
add
pushf
push
add
div
idiv
div
idiv
pushf
push
add
pushf
push
add
pushf
push
add
icebp
out
lock
out
lock
out
lock
out
lock
add
icebp
out
lock
out
lock
add
mov
div
iret
div
idiv
pushf
push
add
pushf
push
add
pushf
push
add
icebp
out
lock
out
lock
out
lock
out
lock
add
icebp
out
lock
out
lock
pop
push
div
iret
div
not
div
idiv
div
idiv
div
idiv
div
idiv
div
idiv
div
idiv
div
idiv
div
idiv
div
idiv
div
idiv
div
idiv
div
idiv
div
idiv
div
test
div
adc
add
add
push
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
(bad)
push
add
push
add
add
add
add
add
add
add
add
add
add
add
add
div
idiv
div
idiv
div
idiv
div
idiv
div
idiv
div
idiv
div
idiv
div
idiv
div
idiv
div
idiv
div
idiv
div
idiv
div
idiv
div
idiv
div
idiv
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
div
idiv
div
idiv
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
div
idiv
div
idiv
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
div
idiv
div
idiv
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
div
idiv
div
idiv
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
div
idiv
div
idiv
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
div
idiv
div
idiv
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
pushf
push
add
div
idiv
div
idiv
pushf
push
add
pushf
push
add
pushf
push
add
icebp
out
lock
out
lock
out
lock
out
lock
out
lock
out
lock
add
pushf
push
add
div
idiv
div
idiv
pushf
push
add
pushf
push
add
pushf
push
add
icebp
out
lock
out
lock
out
lock
out
lock
out
lock
out
lock
add
pushf
push
add
div
idiv
div
idiv
pushf
push
add
pushf
push
add
pushf
push
add
icebp
out
lock
out
lock
out
lock
add
icebp
out
lock
add
pushf
push
add
div
idiv
div
idiv
pushf
push
add
pushf
push
add
pushf
push
add
icebp
out
lock
out
lock
out
lock
add
icebp
out
lock
add
mov
div
inc
add
add
add
add
div
call
add
pushf
push
add
icebp
out
lock
out
lock
out
lock
add
icebp
out
lock
pop
push
div
push
div
lahf
div
idiv
div
idiv
div
idiv
div
idiv
div
idiv
div
idiv
div
idiv
div
idiv
div
idiv
div
idiv
div
idiv
div
idiv
div
neg
(bad)
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
inc
add
add
add
out
mov
xchg
add
add
jae
gs
cs
gs
jne
arpl
cs
gs
jne
arpl
gs
fs
and
arpl
ins
imul
jae
outs
outs
cmp
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
aaa
popa
xor
cmp
xor
xor
cmp
push
jns
je
ins
cs
gs
jne
arpl
cs
jne
je
ins
gs
gs
jne
arpl
gs
add
add
inc
push
inc
inc
push
mov
add
add
add
push
call
add
add
push
sbb
add
inc
push
mov
pop
mov
cdq
sbb
pop
fist
add
add
inc
cmp
inc
jo
outs
push
arpl
pop
ins
ins
inc
outs
outs
jbe
jb
gs
xor
xor
ins
inc
outs
outs
jbe
jb
gs
push
dec
pop
outs
bound
push
gs
gs
jae
pop
pop
ins
ins
inc
outs
outs
jbe
jb
gs
push
dec
cs
bound
xchg
sbb
add
and
add
add
outs
jb
js
dec
popa
imul
jb
gs
ins
add
add
add
and
